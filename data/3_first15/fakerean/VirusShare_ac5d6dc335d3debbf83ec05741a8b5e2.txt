sbb
add
mov
arpl
fidivrs
popa
jecxz
or
pop
popa
mov
shlb
pop
and
loopne
xchg
sub
std
sbb
popa
and
mov
inc
xor
pop
mov
and
lock
or
popa
aas
inc
sbb
ret
jo
mov
shlb
enter
pop
kmovb
inc
int
iret
test
mov
loop
nop
outsl
or
scas
adc
sub
sub
jecxz
push
faddl
push
dec
pop
xor
dec
push
cmp
xchg
pop
aad
jo
repz
add
pop
xchg
mov
xchg
or
cmpsl
pushf
call
cwtl
xor
aam
nop
pop
or
shl
arpl
sbb
lahf
aas
mov
adc
daa
dec
test
cmp
outsb
push
pop
out
xchg
cld
xchg
mov
jmp
mov
popa
imul
clc
inc
sbb
subb
fwait
lahf
sub
stc
icebp
mov
push
into
lret
xchg
cli
cli
pusha
add
int
lods
pop
pop
cmc
out
adcb
inc
outsl
add
sbb
jge
fdivr
in
scas
xor
or
mov
cwtl
outsl
into
ja
sub
cmove
int
and
out
and
loopne
and
jno
insb
ret
movsb
jb
js
or
adc
mov
and
inc
lds
std
adc
xorl
xchg
sub
pop
sbb
mov
lcall
mov
adc
and
pop
lea
sub
jg
xor
ja
mov
aad
xor
insl
adc
and
pop
mov
add
jg
ja
popa
outsl
in
bound
repz
dec
mov
shlb
cmp
sub
push
xchg
in
int3
push
dec
ss
cmp
and
in
cmc
push
pop
rcl
mov
pop
cmp
xchg
sub
xor
leave
sbb
xchg
xorl
jle
out
addb
mov
jnp
data16
lods
lods
in
out
add
pop
ror
rcr
repnz
push
mov
movsl
ja
and
cs
xchg
lcall
add
shrl
hlt
enter
push
lahf
sbb
shll
pop
adc
test
mov
or
jle
popa
pushf
mov
sub
scas
ret
push
mov
adc
mov
call
push
arpl
or
pop
xchg
lds
xchg
sbb
push
xor
je
iret
sbb
outsl
jnp
cs
adc
xlat
icebp
pusha
addl
inc
jg
pop
dec
push
ret
lret
mov
xchg
and
loope
dec
aad
data16
popa
lods
stc
mov
jne
js
test
jae
es
mov
cmp
adc
fnclex
cmp
movq
in
js
add
xchg
and
in
jo
dec
addl
movsb
je
rorl
subl
sbb
ja
mov
inc
outsb
adc
test
push
mov
jp
rorb
lret
cmp
je
fnstcw
xchg
xchg
inc
int
xor
inc
iretw
aad
popf
std
mov
pop
fwait
push
inc
sbb
mov
gs
jns
xchg
push
shll
outsl
or
xorb
mov
or
ja
pop
out
pop
scas
dec
sbb
mov
dec
lods
mov
insb
xorl
out
jl
cmpsl
pop
sub
or
pop
jg
inc
insb
dec
pop
rol
xchg
sbb
ret
cmp
repnz
xor
adcb
cmp
xchg
mov
and
cli
stos
cmp
push
roll
into
hlt
xchg
lods
scas
in
mov
inc
pop
aas
js
adc
iret
outsl
outsb
pop
dec
std
push
sbb
pop
jno
lret
stos
fs
outsl
dec
repz
mov
add
xor
mov
ja
and
addr16
add
clc
push
lea
mov
fimuls
sub
xchg
jmp
pop
add
sub
aas
shrb
mov
popf
push
repnz
pop
cmp
cmp
xor
push
insb
sub
inc
push
mov
or
adc
xchg
jl
cmpsl
flds
ds
push
sahf
pop
loope
add
ja
cwtl
aad
or
xor
int
or
mov
movsb
mov
add
push
lock
mov
dec
mov
xor
fwait
adc
jge
dec
cld
in
adc
jecxz
xor
fdivrs
pushf
test
xchg
mov
fnstsw
faddl
mov
xchg
dec
jb
sub
xor
mov
les
adcb
into
aam
add
out
cld
fsts
test
mov
dec
pusha
dec
daa
push
daa
std
stos
ja
cltd
cld
sbb
mov
xchg
xchg
sbb
mov
fisubrs
push
aad
sahf
filds
jge
xor
insl
adc
add
mov
pop
out
push
push
rcpps
mov
push
sahf
fwait
mov
push
js
subl
dec
mov
lahf
dec
gs
or
mov
nopl
ror
aas
hlt
cs
mov
mov
insl
sub
stos
or
cmp
movsl
add
imul
adc
sbb
xchg
add
mov
pop
push
and
mov
cmc
nop
sbb
lret
inc
adc
mov
add
and
je
jnp
jne
mov
push
loopne
lahf
xchg
pop
add
jp
xchg
mov
sbb
mov
xor
jno
pop
xor
pop
shlb
ret
mov
test
imul
pop
lcall
fnstcw
je
sbb
cmp
xchg
xchg
rclb
xchg
mov
addl
pop
xor
xchg
out
icebp
xor
mov
icebp
or
jo
lret
push
movsb
outsb
inc
dec
cmpb
xchg
popf
push
xchg
cld
cs
je
aam
mov
imul
hlt
jle
lahf
xchg
xor
into
cmpsb
scas
adc
push
xchg
cmp
fs
mov
loopne
clc
shll
sarl
test
pop
or
jmp
xchg
mov
xchg
mov
insl
mov
fiaddl
mov
sarb
push
mov
jge
int3
stc
iret
out
nop
sbb
rorb
mov
mov
sub
sti
ss
sarl
call
incb
add
mov
shlb
mov
fwait
daa
adc
cltd
mov
sbb
dec
dec
jl
lds
leave
lahf
aaa
xchg
jo
jae
jno
pusha
dec
aas
lea
and
push
lahf
les
pushf
mov
lret
popa
xor
out
daa
insl
xchg
test
cmpsb
int3
push
mov
cmpsl
arpl
out
dec
arpl
adc
sar
mov
insl
mov
adc
rorl
jno
rorb
addr16
fs
add
cmpsl
outsl
mov
adc
or
jo
fdivs
sti
push
scas
lret
fstl
push
jl
repz
outsb
jge
and
pop
jle
icebp
movsl
fstp
pop
js
xchg
and
dec
jg
popa
incl
dec
in
jge
dec
pusha
xchg
dec
xchg
bound
sti
movswl
jle
rcrb
mov
movsb
out
lods
adc
cld
jmp
cmp
xchg
sub
xor
xchg
cwtl
sahf
add
mov
in
test
mov
or
imul
es
and
push
inc
push
leave
dec
jbe
or
fildl
mov
jbe
pop
pop
dec
dec
lock
in
stos
cld
in
sbb
adc
cs
out
sub
test
add
sbbb
clc
dec
addr16
les
mov
xchg
cs
inc
addb
sub
aaa
push
inc
mov
bound
popf
dec
and
xlat
adc
pop
mov
xor
or
aam
call
rolb
lret
cmc
pop
movsb
mov
push
xor
mov
popf
xor
call
sub
xchg
mov
scas
aad
mov
cld
mov
sbb
movl
jnp
xchg
cmp
cmp
cltd
mov
and
aam
pop
fwait
dec
sub
sbb
and
xlat
dec
pop
testl
dec
xor
mov
ja
and
sub
aas
dec
mov
mov
pop
loope
stos
out
sarl
dec
cmpsl
xchg
dec
rcll
mov
push
xchg
or
ret
repnz
movsb
fistpll
daa
std
jmp
cs
cmc
popa
aas
lahf
or
aas
enter
pop
gs
push
lds
mov
ret
rcrb
sbb
repz
xchg
and
xor
loopne
push
and
xor
dec
xchg
flds
lods
inc
xchg
xchg
out
sbb
imul
in
bound
inc
out
xchg
in
mov
jmp
ja
sarb
cmp
arpl
lret
xor
or
sub
lods
xchg
sti
sete
cmc
cli
cld
or
mov
sub
filds
pop
or
imull
loope
stos
dec
lret
rcrb
shl
jno
and
decl
dec
xor
jmp
imul
pop
pop
sub
dec
jns
pop
fadds
mov
adc
filds
jmp
loopne
mov
inc
call
lods
push
push
push
shll
cli
es
cwtl
pop
adc
stos
outsb
maxps
fsubl
sbb
fsqrt
adc
loopne
dec
jp
shl
das
sahf
xor
in
jl
cli
scas
and
cs
cmp
ds
push
mov
sub
sub
sti
mov
mov
inc
sbb
test
mov
pop
lds
pop
sub
inc
icebp
mov
xchg
cmp
lock
inc
inc
dec
in
stos
mov
arpl
pop
cmpsl
lods
aas
mov
call
ret
popf
cmp
mov
pushf
and
mov
xlat
cli
je
mov
sub
xor
push
or
fldt
xchg
or
nop
stos
cs
into
je
xor
mov
hlt
mov
and
ds
imul
cltd
adc
cli
cli
lds
xchg
sti
sub
adcb
enter
neg
clc
mov
mov
fisubs
outsb
pushf
mov
xlat
push
loope
mov
cmp
insb
bound
adc
pop
loope
dec
or
inc
sbb
add
jno
icebp
or
mov
lahf
vpsrad
sbb
clc
movsb
jne
push
mov
ljmp
adc
jg
mov
jbe
test
adcb
outsl
cltd
cmc
push
xor
sbbl
cmp
add
int3
out
adc
or
icebp
addr16
xor
cmpsl
adc
arpl
fs
cmc
fwait
out
addl
rorl
add
push
jmp
adc
pop
adc
sbb
ljmp
mov
jbe
lods
mov
mov
loopne
shl
bound
stos
mov
out
jle
xlat
xor
sub
and
add
adc
xchg
and
addr16
insb
loope
testl
jns
cmc
pop
push
adcl
nop
mov
push
adc
loop
or
std
push
sbb
test
leave
ja
mov
decl
lock
push
mov
mov
clc
fisubs
mov
cmp
int3
adc
sub
scas
aaa
scas
sbb
das
lods
fsubl
lret
mov
add
pop
insl
gs
adc
xchg
jne
sbb
ret
push
loope
out
nop
sbb
mov
cmp
sub
nop
lcall
ret
popf
std
xor
mov
pusha
mov
imul
test
pop
fwait
je
rclb
mov
lods
ret
push
dec
inc
push
inc
adcb
stos
add
sbb
loopne
mov
pop
inc
addr16
xor
cmpsl
in
lock
mov
xor
dec
nop
sub
scas
lock
push
lods
into
sub
mov
data16
push
lcall
rorb
or
and
inc
pop
cs
or
lret
pop
es
sub
clc
xlat
hlt
sahf
in
xor
mov
dec
dec
cmp
rorb
lock
lods
cmp
jo
push
popa
push
or
inc
fdivr
int3
mov
add
push
in
mov
pop
aaa
jnp
incl
push
xor
dec
lea
adc
cmp
xor
not
inc
in
ret
sbb
faddl
adc
jmp
xor
inc
lret
clc
scas
adc
add
das
cmp
cmp
xor
sub
loope
sbbb
push
addb
fptan
ret
xor
and
loope
ret
sbb
dec
out
sahf
jb
mov
sub
popa
jmp
xor
xchg
sbb
xchg
mov
push
call
or
outsb
scas
xchg
lea
out
cli
xor
push
inc
in
imulb
and
jmp
ja
and
add
jo
push
push
ret
loope
scas
push
xchg
movsl
adc
pop
inc
add
xchg
js
or
clc
sub
movsb
xchg
popa
repz
cmpsl
or
and
mov
or
cmp
pop
push
mov
rorb
sar
or
lcall
imul
xchg
das
add
shl
sub
cs
ret
iret
out
mov
shr
idivl
xor
popf
adc
mov
test
clc
mov
inc
push
mov
adc
decl
push
xchg
jo
ret
mov
in
loop
sbb
mov
int3
iret
testb
fstpt
push
shll
mov
cli
cmc
outsl
jle
mov
lds
std
jo
rclb
std
rol
mov
test
mov
ja
inc
push
mov
or
cmpl
dec
aaa
push
push
xchg
jbe
mov
mov
push
add
cmc
call
mov
int
adc
dec
cld
movsl
pop
xorl
adc
out
add
xchg
pop
je
push
jecxz
push
pop
das
shrb
mov
imulb
out
stc
gs
popa
test
movsl
or
fimuls
sbb
sub
enter
cmp
jle
mov
mov
andb
test
ja
loop
aaa
arpl
mov
push
inc
test
roll
xchg
mov
add
mov
jbe
xor
sub
in
jnp
add
and
mov
movsl
cld
les
imul
pop
jne
push
xor
pop
daa
je
fprem
pop
xor
sub
outsl
out
fs
sub
and
ficompl
adc
idivb
mov
mov
xor
mov
add
aam
add
jp
sbb
jb
popa
and
pop
lcall
add
lret
and
mov
leave
add
mov
cmpsb
sbb
dec
fildll
sahf
lods
clc
jge
push
pop
pop
fistl
movsb
cmp
popl
jnp
push
mov
sbb
sub
and
call
and
sub
sbb
cmc
jge
cmp
adc
add
loop
fdivrp
aas
pop
dec
or
lock
aas
sbb
daa
and
mov
enter
or
and
jne
dec
push
je
out
push
daa
shrl
jne
xor
js
inc
ds
mov
out
aad
test
xchg
pop
out
pop
ljmp
adc
aad
or
imul
aas
je
dec
movsb
pop
push
xchg
mov
cmp
inc
pushf
dec
repnz
xor
sbb
int3
popf
int
mov
in
xor
mov
xor
adc
xor
push
fcmovb
inc
push
out
mov
mov
mov
mov
mov
adc
int
int
fs
ds
xchg
das
shlb
mov
decb
insb
add
mov
shrb
push
push
jp
rorb
fcoms
push
jb
mov
adc
cli
lret
mov
and
adc
and
imull
and
inc
leave
leave
mulb
push
filds
fcomp
mulb
or
xlat
sub
xchg
pop
out
push
cwtl
mov
stos
lds
mov
js
pop
adc
ljmp
in
pushf
divl
add
scas
popf
push
lcall
sub
stos
dec
mov
xlat
sbb
adcl
out
and
sbb
and
sbb
mov
jbe
xor
inc
xlat
inc
fdivrs
mov
pop
add
push
cmp
adc
gs
jl
movsl
stos
or
mov
arpl
clc
adc
or
insl
sbb
add
pop
mov
hlt
test
std
fstl
aas
xor
pop
movsb
int
mov
xchg
xchg
lds
imul
add
lock
or
and
insb
sub
cmp
scas
mov
decl
add
movsb
jp
mov
and
inc
enter
imul
aam
cmp
imul
shl
mov
xchg
cmc
inc
outsb
xchg
inc
add
jmp
push
fidivrs
pushf
add
add
and
fwait
xor
les
mov
cltd
ret
fcomi
stc
lcall
pop
hlt
mov
gs
in
out
aas
mov
insl
dec
arpl
xor
in
xor
mov
mov
adc
add
fs
mov
pop
hlt
icebp
popf
shlb
xor
adc
aad
adc
out
pop
add
xchg
xor
jle
fcmovne
mov
jmp
loop
jp
idiv
cmovne
add
data16
jns
cmp
pop
add
loopne
mov
push
xor
or
sti
fcoml
xor
xchg
lcall
arpl
pop
movsl
fidivrs
jbe
loopne
push
or
stos
fmuls
lahf
scas
fs
mov
xor
imul
adcb
jo
adcl
jmp
xor
lcall
lock
pop
xor
mov
fs
cmc
sti
int3
xchg
jno
repz
pop
or
sbb
lods
and
data16
add
and
xor
cmp
fidivrl
sbb
jl
and
pop
jg
adc
push
fwait
neg
jmp
and
cmp
movb
xchg
data16
stos
push
int3
loopne
pop
loop
idivl
cmpsl
adc
fldcw
repz
pop
xlat
mov
jl
sub
repz
inc
je
jno
or
leave
mov
xchg
mov
inc
mov
jmp
jo
shll
cmp
add
pop
mov
pop
mov
shr
xchg
loope
in
iret
or
cltd
lahf
out
pop
push
sbb
push
mov
sub
test
insl
sahf
fs
adc
clc
mov
neg
test
jne
leave
pop
xor
roll
maskmovq
testl
loope
mov
push
pop
jbe
cmp
xor
xor
aam
xchg
into
aaa
cs
lcall
mov
push
rol
ret
dec
mov
jo
jae
out
negb
jnp
popf
aas
pushf
out
sub
icebp
adc
shrb
int
inc
call
bound
loop
scas
stos
xor
scas
inc
lret
push
push
fadd
sti
push
fwait
push
jp
pop
sub
inc
adc
cmp
pop
pop
incl
psubusw
shrl
xor
jmp
fisttps
in
jns
bound
xor
xlat
notl
cmp
add
dec
subl
mov
sub
jl
xorb
das
mov
xchg
and
repnz
outsb
iret
daa
mov
jl
cmp
and
ret
fcoml
push
ja
mov
ret
xor
adc
mov
imul
adc
leave
push
lds
xchg
sbb
icebp
test
mov
xchg
insl
xchg
sbb
jge
cmp
ds
and
push
pop
lea
add
repnz
xor
mov
mov
fldt
xchg
imulb
pop
inc
nop
rcl
push
mov
pop
adc
addr16
mov
popa
mov
xor
stos
jne
fsubrs
call
jns
in
aas
pop
xor
divl
lods
jne
ss
cmp
in
sub
rorb
and
imul
xor
call
and
fstpt
or
xchg
mov
cmp
mov
mov
xor
test
and
jp
test
iret
cmp
popf
push
cmc
push
and
fstp
icebp
ljmp
sub
add
xchg
push
dec
stos
lcall
idiv
inc
das
cmp
stos
xchg
push
sbb
mov
out
fidivrl
ret
data16
mov
cwtl
test
mov
jno
mov
xlat
sbb
dec
cmp
push
sbb
subl
sub
enter
cwtl
test
push
xchg
outsl
test
dec
mov
cmp
out
add
jmp
xchg
and
jle
sarl
movsb
pop
into
clc
adc
jle
sti
sarl
xchg
jp
sub
lea
cmpl
push
cmp
cmpsl
lods
mov
pop
jmp
adc
insb
mov
xchg
popl
pusha
test
int3
shlb
js
mov
gs
sub
ljmp
or
pusha
sub
push
pop
sub
in
outsb
jno
mov
int3
sbb
and
pop
cmp
push
xchg
mov
stc
arpl
jnp
or
popf
push
sub
shrl
ret
fnsave
roll
divl
stc
add
insl
jns
lods
popa
ljmp
rcrl
push
pushf
ret
jns
in
cli
mov
adc
xchg
mov
ljmp
je
mov
or
iret
push
imul
or
ljmp
mov
jl
rclb
enter
inc
sub
and
lea
inc
pop
pop
xchg
rcrl
insb
sub
xchg
jl
xor
ja
movl
test
add
sahf
js
test
and
pop
pop
xchg
mov
daa
hlt
push
test
das
mov
jge
fxch
add
jb
add
mov
xor
gs
ljmp
test
into
fyl2xp1
xchg
fstpl
stc
stos
jmp
js
dec
mov
sti
add
fdivrp
push
push
and
xchg
outsl
aam
sub
sbb
add
popa
fisubl
dec
mov
or
jp
xor
mov
sbb
mov
outsb
jae
and
inc
and
js
in
mov
dec
fsubs
roll
jg
mov
inc
sub
test
out
pusha
nop
sbb
mov
shrl
push
inc
mov
inc
scas
mov
adc
pop
mov
xchg
mov
mov
sbb
fmuls
mov
iret
jecxz
add
inc
insb
or
mov
sub
fcmove
mov
int
loope
mov
mov
iret
enter
fsubl
fbstp
mov
movsl
adc
mov
aad
stc
pop
push
pop
add
jae
aam
imul
push
test
and
ds
adc
cmp
cmpsb
lret
bound
sub
xchg
popa
mov
adc
mov
mov
inc
addb
cli
jg
into
cs
sbb
mov
out
hlt
mov
add
pop
and
and
inc
sbb
mov
jmp
gs
std
mov
in
push
adc
mov
es
faddl
pop
jmp
pop
or
inc
mov
mov
jno
lods
mov
leave
jg
mov
lret
mov
push
xchg
mov
ficomps
faddl
orb
repz
lea
pop
inc
sbbb
in
xchg
and
mov
adc
pop
xor
cmp
in
bound
fnstenv
cmpsl
jno
jno
shlb
mov
push
xchg
fs
lret
sbb
repz
mov
sub
mov
xchg
or
adc
sbb
dec
dec
ret
scas
cmpsl
fwait
pop
inc
mov
lahf
jmp
mov
test
cmp
push
jle
push
inc
test
mov
call
mov
ja
xchg
mov
mov
sub
int3
stos
mov
push
inc
fnstcw
jecxz
sub
xor
enter
into
mov
js
and
pop
cltd
inc
repz
pop
add
aaa
fldl
lods
mov
dec
out
pop
mov
in
sahf
dec
andb
fldenv
out
cmp
rolb
xchg
pop
and
aaa
loope
dec
xchg
xchg
dec
ljmp
xor
iret
cs
cmp
sbb
mov
in
out
inc
cmp
xchg
or
aad
loope
loope
sub
dec
mov
pop
fsubs
adc
xchg
js
data16
in
inc
insl
lock
arpl
scas
cld
pop
jmp
ret
jae
icebp
stos
push
cmp
ja
imul
jnp
jecxz
cmp
add
js
fimuls
cwtl
mov
sbb
out
cs
insb
loop
pusha
sbb
mov
jp
jl
jo
ret
sbb
int
xor
pushw
jp
enter
add
mov
sub
lods
fwait
jno
jle
hlt
inc
or
jnp
or
mov
mov
mov
mov
mov
test
hlt
push
sarb
jae
sahf
fs
pop
out
insl
lods
push
fadd
imul
sti
xor
test
adc
xchg
and
bound
or
inc
cli
push
js
in
mov
in
mov
xchg
cmp
xchg
mov
and
popf
mov
loopne
adc
rolb
sub
es
fbstp
dec
jmp
xchg
dec
sti
mov
push
aaa
sbb
mov
push
jmp
ret
jae
cs
dec
pop
mov
and
movsb
leave
arpl
xor
jae
jmp
pop
icebp
inc
xchg
jle
jmp
cli
dec
pusha
xor
ds
enter
inc
hlt
arpl
in
int
xchg
mov
pop
dec
movl
ret
push
adc
xor
rcrl
ss
pushf
aad
cmp
ja
inc
movsb
cmp
push
in
push
cmpsb
add
in
divb
decb
aas
popf
pop
add
test
dec
mov
jmp
add
ljmp
mov
sbb
iret
stos
sarl
pop
xor
and
negb
inc
cmpb
outsl
jno
movb
jp
push
xor
frstor
test
cmp
xchg
movb
cs
xor
inc
pop
dec
scas
loope
xor
add
and
mov
sets
out
sbb
xor
inc
int
pop
pop
shll
fbld
negl
jo
mov
cmp
sub
cmc
add
mov
lods
mov
pusha
sbb
jmp
and
fisubl
sbb
mov
lds
and
mov
ja
lea
or
push
and
dec
inc
mov
pop
pop
hlt
push
push
inc
hlt
sub
pusha
mov
pop
iret
or
push
scas
or
and
jae
adc
xor
inc
out
cmp
hlt
dec
out
loop
xchg
cmp
jecxz
out
int3
pop
xchg
push
into
jg
mov
out
inc
rcrl
notb
add
inc
inc
xor
popa
add
xor
int
mov
push
cmpsb
loop
xor
in
mov
push
mov
and
jle
add
pop
dec
cmp
xchg
je
nop
adc
pop
mov
ret
or
sub
mov
repnz
cmp
push
inc
ja
push
loopne
outsb
mov
sti
jg
pop
adc
scas
jae
lock
sbb
mov
or
inc
mov
pop
pop
stos
sub
mov
lret
cltd
xchg
mov
xchg
inc
fsincos
lods
daa
xor
adc
xchg
adcl
gs
mov
out
add
mov
popa
loopne
cld
adcl
repnz
fistl
movsb
push
sti
scas
push
mov
cld
mov
faddl
nop
mov
cmp
xor
lods
inc
bound
lods
daa
xchg
les
cmpsl
push
inc
stc
jp
leave
mov
sbb
aaa
lret
adc
ror
aam
sub
pop
mov
rcrb
xchg
pop
jns
adc
jg
inc
push
mov
lock
cmp
ss
sub
sub
or
mov
les
adc
jmp
pop
and
mov
jno
jl
or
sahf
jl
pusha
lods
ljmp
mov
add
test
and
pop
dec
mov
mov
mov
fcomps
call
mov
ror
pop
dec
arpl
xor
mov
xor
or
add
mov
dec
pop
aas
fs
fcom
pop
jle
jae
andl
push
lret
call
jg
scas
inc
fst
mov
and
rclb
or
lcall
lea
out
xor
in
es
cmpsb
clc
mov
sub
pushf
andl
xchg
cwtl
add
mov
cwtl
inc
sbb
add
xchg
pop
cmp
dec
or
cmp
cmp
pop
test
outsl
dec
icebp
pop
dec
mov
in
int3
jecxz
inc
adc
outsl
pop
jbe
xor
leave
xchg
iret
mov
les
add
call
adc
pop
sbbl
imul
call
xlat
in
fwait
in
jae
int
in
mov
dec
sub
cwtl
lea
lret
fisubl
mov
js
sub
cmp
push
dec
sub
setb
out
jp
js
mov
pop
xor
fdivrs
ret
incb
jnp
ret
cmp
sub
mov
fwait
std
lret
and
arpl
adc
out
adc
cli
jmp
lret
inc
repz
int3
mov
mov
or
mov
outsl
and
xchg
adc
xchg
and
fs
sar
cmc
dec
rcl
ror
add
jmp
push
dec
jecxz
or
lods
and
es
repnz
jp
xchg
sar
filds
pop
sub
mov
cmp
adc
adc
dec
dec
mov
dec
mov
dec
mov
jnp
ficoml
mov
fldl
test
pusha
sbb
jl
lcall
out
jp
push
or
scas
add
xchg
pop
adc
adc
push
cmp
hlt
mov
in
out
sti
dec
cwtl
idivb
lcall
dec
add
mov
dec
adc
scas
sub
xchg
test
ret
push
sub
lea
out
and
sbb
or
push
ja
outsl
out
icebp
mov
xchg
and
add
shrb
insl
add
shll
pop
idivl
push
xor
push
pop
daa
sbb
daa
jne
lahf
xor
xor
pop
lcall
lods
xchg
and
cmc
cmp
xor
inc
daa
xchg
pop
xchg
jae
add
sbbb
cltd
dec
cmpsl
fsub
scas
cld
sbbb
mov
dec
sbb
cmp
mov
mov
das
inc
jmp
or
into
mov
jle
dec
shr
imul
lds
fs
xor
int3
adc
lret
shlb
inc
xchg
dec
out
adc
cld
pop
arpl
ffree
stc
aaa
and
adc
mov
pop
xor
filds
popf
popa
mov
outsl
cmp
and
xlat
and
add
xchg
shrl
mov
cltd
movsb
mov
mov
jae
dec
mov
das
in
rorb
xchg
push
push
cli
mov
into
adc
rcr
in
subl
adcl
cmp
inc
mov
addb
fcomps
push
mov
jmp
adc
push
fistps
mov
daa
sarl
shll
ret
and
jge
adc
cmp
test
imul
push
addr16
xlat
mov
cmp
mov
call
mov
xchg
sahf
iret
mov
adc
jne
fucomip
push
push
leave
jle
adc
pop
rclb
pop
pop
adc
xor
fdivr
mov
and
sub
xchg
inc
or
pop
xchg
sub
outsb
mov
out
pop
sbb
mov
adc
fs
or
push
lods
movsl
lods
push
rorl
push
mov
cltd
dec
pop
hlt
dec
mov
lret
loope
cmpsb
test
jno
mov
adc
jg
mov
adc
push
andl
fwait
mov
lods
or
je
xchg
sbb
andb
sbb
in
dec
dec
imul
je
dec
pop
sub
js
jecxz
mov
adcl
mov
mov
sbb
or
test
mov
and
pop
mov
rcrl
orl
cmpb
pop
adc
dec
jmp
in
xor
adc
insl
xchg
push
jecxz
xchg
lods
push
xchg
test
mov
daa
aad
mov
mov
xor
sbb
fwait
out
xorb
pop
shl
pop
in
or
insb
shrl
xchg
out
rorl
scas
push
jl
sti
fildll
mov
sbb
fdivl
inc
and
jge
sarl
xor
faddl
shrl
or
call
addr16
stos
out
aaa
mov
inc
rcll
adc
or
scas
jne
orl
lds
xor
xchg
xchg
pop
int
ret
mov
mov
adc
add
pop
or
pusha
xor
inc
sbb
dec
sbb
jne
xchg
and
add
fstps
sub
repz
clc
aas
jno
cmp
ss
sub
xchg
or
lock
in
mov
adc
ror
int3
jne
out
cmc
inc
jns
mov
sub
iret
cmpsl
jns
push
push
cs
push
mov
mov
jns
test
mov
mov
xor
aad
inc
testl
jmp
cld
repnz
adc
dec
das
xor
sbb
jecxz
add
stos
outsb
cmpsb
mov
sbb
stos
adc
test
or
std
imul
push
pushf
stc
mov
or
fs
push
cltd
inc
mov
fsubrs
inc
test
jnp
lods
jle
jg
cmpsb
rcl
clc
mov
mov
sbb
bound
mov
lock
shrl
xchg
jp
cmp
ret
iret
xchg
cmp
repz
jecxz
jbe
rcrl
inc
outsl
add
mov
inc
aam
push
stos
divps
xchg
pusha
gs
or
jne
add
sub
lahf
mov
jne
pop
xchg
pop
shl
test
xor
jmp
gs
inc
fsubrl
lcall
test
rorb
mov
in
cmpsl
enter
mov
cli
cmovne
push
sub
je
mov
adc
xchg
pop
mov
arpl
mov
or
fistpll
dec
out
push
mov
mov
ret
push
test
test
or
popa
add
xor
cmp
jno
aam
push
popl
lea
movl
lcall
push
cmc
iret
push
mov
mov
jo
sub
jg
mov
scas
cmp
loop
lds
insb
fs
push
jns
inc
or
rcr
add
and
xor
xchg
lret
lret
repz
and
pop
pop
arpl
dec
fisubrl
jae
push
js
mov
dec
jecxz
mov
adcb
jle
pop
cli
call
add
jl
stc
push
sub
add
add
dec
push
stc
or
pop
mov
sbb
pop
or
cmpsl
jnp
pop
test
xor
cli
adc
cmp
push
xor
xor
fdivr
sub
rcrb
in
ds
imul
inc
mov
rorb
aam
dec
insl
push
iret
fimull
push
dec
sbb
pop
pop
jle
loop
sti
push
lods
add
xchg
les
push
xlat
outsb
inc
xor
mov
daa
push
cmovnp
adc
pop
lods
mov
inc
add
loop
sbb
int
rcll
orb
fwait
push
adc
mov
sbb
or
sub
push
jb
add
jl
jle
add
cli
repz
pop
xor
xor
in
pop
nop
out
add
xlat
sahf
lret
call
mov
jnp
push
sub
sbb
pop
jnp
cmp
push
mov
mov
and
adc
push
or
aam
jp
loope
popf
inc
cmp
stos
add
mov
and
sub
pop
iret
inc
hlt
call
imul
cmp
xchg
mul
cmp
cld
jbe
mov
arpl
out
pusha
xchg
adc
fimuls
std
ret
mov
mov
popf
dec
mov
xchg
iret
push
xlat
inc
fldcw
mov
or
mov
push
jns
pop
mov
fcompl
pop
sbb
cmpsl
dec
pop
mov
inc
mov
xchg
or
mov
loope
clc
inc
aas
pusha
mov
xor
test
push
sbb
sbb
fbstp
xchg
inc
lods
push
in
jmp
dec
pop
nop
movsl
inc
push
std
add
jno
dec
mov
insb
sti
out
jp
and
xor
cmp
in
inc
pusha
imul
arpl
dec
inc
sarb
xchg
cmp
jecxz
imul
add
lock
mov
pop
int3
xchg
sub
scas
popf
dec
jo
into
inc
mov
jae
add
and
jnp
fcmovne
scas
mov
xor
adc
cmp
mov
mov
sub
pop
mov
fsubr
scas
or
pop
jne
pop
jb
inc
cld
call
inc
mov
sub
inc
sbbb
movsl
xor
adc
loopne
fisttpll
outsb
pop
nop
lods
add
mov
sbb
test
test
adc
scas
push
sub
mov
imul
imul
dec
and
fldenv
inc
adc
fildll
or
mov
sbb
pusha
bnd
imul
mov
push
repz
push
dec
cmp
loopne
cltd
mov
in
jnp
sahf
insl
mov
and
rolb
les
lea
dec
xor
mov
adc
dec
sbb
ljmp
cwtl
mov
loop
dec
shll
adc
cltd
nop
sar
loopne
dec
divb
fsubr
call
mov
subps
cld
int3
mov
push
push
into
out
dec
push
add
mov
cmp
dec
sbbb
ret
mov
cli
xchg
inc
out
into
pop
les
jle
dec
ljmp
sbb
xchg
mov
cld
xor
push
cmp
nop
push
call
dec
sub
rcll
xchg
pop
xchg
call
movsb
push
icebp
xor
push
xor
sub
add
mov
sbb
ret
ret
dec
out
cmc
xchg
mov
pop
inc
sub
sbb
call
stos
mov
add
rcrb
jge
sub
push
insb
xlat
addr16
or
or
sub
cltd
xor
js
fs
fnstcw
and
repnz
dec
inc
push
dec
pushf
int
mov
mov
jp
lret
push
or
movsb
mov
add
mov
fidivl
int
mov
dec
push
jo
adc
xor
shl
in
daa
rcrl
mov
outsl
push
dec
enter
retw
xchg
jo
test
cmp
xchg
test
push
push
mov
push
std
ret
pop
out
inc
xchg
inc
jae
dec
xlat
rorl
test
pop
fisttps
out
xor
cmp
outsl
mov
jp
es
dec
mov
lods
cs
add
test
lods
cltd
paddb
int3
js
rol
int
and
out
test
or
dec
inc
mov
imull
cs
dec
decl
add
mov
je
out
sti
fwait
pop
mov
pop
xor
das
xor
popf
insb
mov
lahf
sub
pop
mov
cld
fsubrl
test
sahf
fdivl
rolb
imul
xor
movsb
push
mov
mov
or
sbb
jo
and
stos
lods
push
cmp
adc
shlb
sub
mov
pusha
lcall
push
and
cmp
cli
jmp
xor
pop
jecxz
xchg
shlb
shrl
or
hlt
fcomps
jle
sbb
cs
fwait
cwtl
shrb
cmp
mov
fnstcw
sbb
fldenv
sbb
cmp
add
dec
pushf
outsl
mov
arpl
int3
lret
insb
enter
ret
cmp
call
adc
jns
xchg
adc
inc
or
xchg
cmp
sbbb
sbb
mov
scas
jo
insb
xchg
xor
cmp
mov
mov
dec
stos
mov
add
cmpsl
pop
and
iret
sahf
mov
xlat
pop
and
jge
icebp
or
ret
stos
testl
dec
pop
xchg
sahf
in
out
jae
popf
jecxz
nop
int
pop
cmp
mov
aam
repz
scas
pop
add
fst
std
mov
insb
shll
dec
mov
adc
jnp
push
sbb
or
ss
jmp
xorl
xor
push
sub
pop
adc
ss
cmpsb
std
repnz
lahf
xor
jno
pop
mov
cmp
inc
adc
pop
les
and
hlt
mov
xchg
out
mov
pop
or
mov
scas
mov
cmp
jp
sub
ret
daa
bound
push
in
or
sub
repnz
pop
test
sbb
or
cmpsb
popa
jnp
jno
xchg
fwait
hlt
mov
xchg
div
jne
not
leave
push
pop
add
rcl
mov
rdpmc
cmc
test
icebp
leave
mov
mov
mov
or
mov
cwtl
cmpsb
shlb
stos
push
sti
in
or
out
xor
das
add
push
jns
sub
adc
repnz
frstor
dec
popf
push
scas
outsb
sar
inc
ljmp
lods
pop
test
xchg
roll
jno
leave
sub
in
or
xor
lret
adc
out
add
ja
icebp
pop
rcrb
dec
imul
arpl
cwtl
pop
jp
and
mov
lcall
push
ja
popa
lcall
xchg
push
xchg
stos
adc
mov
aas
push
daa
rol
xor
hlt
into
hlt
pop
stos
add
js
stc
out
and
sub
cmpsl
sbb
sub
fdivs
adc
sub
pusha
es
std
push
fistpll
loope
pop
enter
loop
pop
aad
adc
jo
push
and
js
shlb
mov
mov
xchg
and
lock
cmp
enter
xor
ss
xorl
testl
jne
jl
aad
and
pusha
fdivrs
jge
cli
std
mov
dec
adc
or
dec
pop
ss
stos
push
inc
imul
int3
ja
push
jmp
mov
jo
pop
and
int
fildll
mov
rcrb
stos
arpl
inc
mov
fildl
mov
cmp
fdivs
pop
repz
or
out
lds
in
inc
sub
sub
rclb
jb
pop
push
fstl
aaa
dec
mov
pusha
pop
sub
pushf
in
out
pop
and
jne
imul
dec
ds
es
nop
fisttpll
and
ja
imul
cmp
xor
aad
int3
pop
js
mov
add
ficoms
cmp
fsub
pop
out
jnp,pt
xchg
pop
fbld
mov
loopne
cmp
jg
mulb
mov
push
loope
jge
xor
add
loopne
stos
sub
fbstp
adc
xcrypt-ofb
cmpsl
outsb
xchg
inc
ret
dec
pop
lods
mov
test
leave
sub
mov
jb
pop
mov
enter
in
pushf
in
xchg
cmc
and
je
xor
js
cwtl
mov
dec
push
push
mov
test
imul
xor
pusha
pop
scas
dec
sub
push
pop
cld
jmp
sbb
xor
test
xchg
ret
pop
dec
test
push
test
pop
pusha
add
outsb
das
cmpsb
and
lret
jne
inc
pop
faddl
dec
adc
pop
mov
das
cmp
scas
mov
inc
loopne
out
out
rorl
addr16
cs
jmp
aas
jle
mov
hlt
adc
mov
faddp
mov
stos
sub
jecxz
xor
mov
popa
cmpsl
jecxz
mov
test
xlat
mov
into
cs
repz
pop
push
mov
out
jl
cs
ror
sbb
pop
daa
inc
fabs
cmp
mov
int
xlat
fwait
mov
xor
sub
jg
out
lods
pop
ja
leave
stos
jle
ja
movsl
pop
call
pcmpgtd
xchg
imull
jle
je
ds
rorb
pop
mov
push
sbb
std
adcl
inc
push
adc
cmp
lds
sar
mov
push
nop
dec
stos
mov
bound
jbe
test
cltd
dec
add
inc
jnp
xor
xor
adc
call
sub
leave
ret
rorl
xor
mov
cmp
mov
inc
sbb
nop
mov
movsb
cmp
jns
bound
push
and
sub
xor
inc
mov
or
mov
mov
ret
adcb
loopne
out
mov
jno
les
pop
repz
sub
shrl
aad
sarb
scas
dec
test
add
jmp
lret
scas
fwait
mov
insb
jmp
and
jge
mov
pop
stos
jno
out
out
inc
popa
xchg
clc
movsb
sub
jne
jp,pn
jno
sti
sub
out
je
xorb
xchg
loopne
cmp
pop
adc
pushf
or
sub
fst
lcall
or
jne
jbe
enter
jae
andl
rcl
sub
xchg
cmpsb
sbb
dec
int
or
jns
imul
inc
jne
inc
add
jne
mov
push
testb
std
icebp
jne
inc
cmpb
adc
jmp
das
adc
push
shl
jbe
test
xchg
push
jle
rclb
or
jo
cld
inc
fwait
lock
adc
mov
xor
loop
and
pop
sub
movsl
div
movl
cmp
mov
push
dec
lea
or
cmp
inc
pop
sub
inc
clc
xor
inc
dec
fisttps
sub
aas
mov
ss
test
adc
imul
pop
cmp
dec
inc
dec
sub
hlt
cmp
outsl
jle
mov
dec
jecxz
aam
push
mov
mov
enter
inc
xchg
mov
inc
lods
or
aad
loope
or
fildll
repnz
pop
sub
dec
out
jl
test
cmp
pop
shl
js
jns
gs
mov
xchg
inc
xor
and
xchg
pop
push
mov
push
inc
mov
dec
das
pop
mov
cmp
rol
mov
pop
jnp
cwtl
lcall
or
sti
mov
lods
add
mov
call
rorl
push
xor
aad
hlt
mov
pop
ljmp
outsl
mov
cmc
mov
std
sub
incb
add
lock
lock
inc
fs
lea
out
mov
mov
int
jae
jp
icebp
mov
adc
shl
jbe
ret
adc
xchg
dec
leave
mov
and
cmp
push
jnp
jmp
fcmovnu
fmuls
aas
shll
popl
pop
mov
rolb
call
cwtl
or
and
or
sbb
jle
pop
repz
inc
and
cmp
sub
mov
mov
sti
pop
sbb
lret
jno
xchg
fdiv
pop
test
xor
cmp
add
jmp
pusha
dec
out
mov
into
aaa
pop
push
mov
pop
loope
notl
sbb
xor
mov
dec
les
cwtl
or
jge
test
jmp
loopne
mov
mov
inc
xor
ljmp
fwait
dec
in
popa
pop
xchg
cmp
data16
xchg
orl
adc
iret
lods
popf
xor
inc
and
shl
and
gs
lahf
aas
subl
pop
cmp
mov
dec
push
insl
sub
dec
dec
mov
cmpsb
test
sahf
cmpsb
movsl
cmp
arpl
and
in
pop
add
push
rcll
popa
cmp
loope
and
mov
jns
in
shrl
dec
std
imulb
mov
mov
arpl
and
ret
mov
cmpsl
lds
jecxz
fs
push
ficoms
cs
push
add
lret
lods
loop
loop
ret
icebp
out
shlb
xor
adc
push
aam
inc
xchg
outsb
add
jle
lods
pop
jbe
int3
lcall
loopne
xchg
dec
leave
xchg
test
lods
sub
jmp
jp
adc
mov
and
insb
shl
adc
shlb
pop
sbb
push
mov
mov
add
adc
ret
and
cmp
lahf
jg
call
test
imul
xor
jae
xchg
decb
cmp
lea
push
xor
push
jne
ss
pop
jl
dec
aad
pop
fnsave
adc
mov
push
in
fldl
cmp
stos
dec
ss
sti
cld
fs
xchg
pop
sbb
daa
jno
shlb
aas
loop
fwait
inc
jb
int3
sbb
dec
xor
es
and
pop
repnz
push
mov
lea
testb
in
jns
adc
pop
cmpsb
jo
jge
xor
loope
cmp
jnp
outsl
dec
test
push
lods
push
js
dec
xor
js
adc
scas
jmp
dec
addl
movsl
pop
test
or
mov
mov
adc
jns
ret
fsubs
adc
mov
cmp
push
lahf
jno
dec
cmp
lret
stc
stos
mov
jmp
icebp
inc
lods
xlat
cmc
add
jb
mov
sbb
push
sahf
jae
mov
jne
mov
bound
xchg
fbstp
test
addr16
in
jno
jo
and
out
xor
lcall
sub
pushf
or
jle
sbb
dec
cmpb
frstor
test
mov
sub
and
push
mov
mov
lods
loop
rcr
mov
ficomps
scas
ss
sub
aaa
lret
pop
adc
popa
popf
and
add
cwtl
in
ds
add
inc
mov
push
cmpsb
int
add
out
fs
shll
scas
aad
lds
mov
xchg
jp
pop
add
pop
sub
jne
mov
inc
outsl
dec
cmp
or
inc
xlat
sbb
out
es
scas
adc
xchg
adc
out
jno
mov
dec
mov
dec
scas
mov
pop
popa
dec
movl
xchg
fcomps
mov
hlt
mov
fldenv
stc
sahf
fwait
jns
add
out
shrl
jg
sub
sbb
sbb
sti
rcl
mov
sub
cmc
inc
sbb
sub
out
pushf
loop
or
incb
out
sarl
idivl
mov
jg
movsl
aam
xlat
int3
popa
iret
inc
popf
stc
insl
icebp
hlt
push
aaa
dec
push
mov
stos
imul
mov
daa
add
dec
sub
or
push
out
and
popf
insl
sub
inc
push
inc
lahf
arpl
ficompl
repnz
loop
xchg
push
xor
and
cmpsl
mov
or
es
xor
sti
clc
cld
shlb
push
stc
mov
arpl
mov
outsb
dec
ja
int
push
lods
lret
cmp
addr16
imul
mov
fwait
movsl
mov
das
test
add
inc
sub
push
cltd
mov
icebp
sbb
fwait
ds
xchg
pop
pop
fisttpl
sbb
call
jl
dec
xor
adc
mov
jp
xchg
xor
push
xor
mov
rcr
movsl
adc
sbb
lods
test
sub
fldcw
lods
mov
neg
lcall
loope
mov
ss
clc
cmpsl
xchg
push
in
outsl
mov
sub
gs
sbb
xchg
dec
add
mov
adc
sbb
mov
sbb
aam
xchg
jecxz
xor
push
mov
loopne
iret
mov
and
mov
xor
or
lods
ljmp
sub
sub
adc
add
dec
xor
outsb
pop
jb
mov
ret
xchg
mov
stos
scas
aas
sbb
mov
push
rorb
or
push
jnp
push
pop
scas
stos
aad
mov
divb
ret
mov
es
lock
stc
orb
bound
je
or
fs
movd
movsl
push
lret
and
dec
mov
adc
in
std
pop
xchg
inc
rclb
sbb
fadds
mov
pusha
or
jg
fs
fsubp
outsb
clc
push
ljmp
jo
jns
test
inc
or
sti
or
cmpb
dec
adc
jb
in
inc
xchg
adc
sbb
jbe
cmp
loopne
adc
mov
shl
mov
out
out
xchg
cmc
ljmp
lahf
sarl
aaa
stos
mov
dec
xchg
mov
jl
jnp
repz
pop
adc
jno
lret
jl
cli
xchg
outsl
data16
xchg
test
gs
aad
negl
lahf
imul
xchg
loope
cmpsl
inc
pop
dec
dec
aad
hlt
dec
inc
iret
mov
push
cs
fmull
dec
sbb
cmp
mov
cmc
movsb
adc
cmpsl
mov
bound
ljmp
scas
fildl
insb
js
pop
cli
lahf
lcall
rcrl
mov
das
aad
movsb
jecxz
push
in
xor
stos
sub
sbb
out
aam
lcall
pop
leave
test
inc
testl
popf
dec
lds
mov
adcb
rcr
das
shr
data16
jbe
or
cmpsb
call
or
pop
shrl
das
imul
dec
sub
aaa
pop
push
nop
lea
pop
mov
inc
adc
mov
rcrl
sbb
and
andb
mov
lahf
cld
add
imul
or
fbstp
lea
out
jbe
loopne
insl
mov
movsl
leave
filds
add
enter
xor
iret
scas
shl
scas
andl
mov
scas
adc
push
jb
lret
mov
addr16
jecxz
mov
jo
arpl
cmp
addl
sahf
das
stos
sahf
xchg
js
sub
aad
sahf
jecxz
mov
add
aad
mov
xchg
clc
pop
out
jne
xchg
sti
mov
fwait
jb
mov
and
cli
js
add
fnstsw
mov
xchg
leave
sbb
dec
jge
loop
dec
mov
sub
leave
repz
cmp
jl
addb
xor
adc
scas
js
not
scas
insl
jmp
arpl
push
outsl
push
iret
dec
aam
pushf
lock
sub
hlt
cmp
cmp
mov
mov
mov
push
js
jae
dec
pop
add
mov
repz
stos
add
push
or
sbb
popa
pushf
lret
sub
jnp
cmp
xor
negl
ja
insb
in
in
rol
iret
pop
outsb
cltd
cwtl
cmp
cmc
in
push
dec
in
mov
cmp
mov
pop
loopne
mov
or
jg
stos
cmpl
imul
dec
or
fcompl
neg
mov
popa
outsb
pop
cmp
jne
mov
pop
into
or
les
test
ds
inc
adc
or
sub
or
xor
pop
sub
xor
lods
pushl
push
movsb
popf
adc
mov
push
sbbl
and
push
popf
push
add
add
fistl
dec
mov
ds
jp
leave
cmc
lret
cld
jns
in
dec
mov
lahf
bound
dec
sub
xchg
shlb
out
sbb
xorb
lea
pop
dec
insb
aaa
mov
adc
jecxz
repnz
stos
mov
int3
push
addl
or
popa
cld
jne
pop
push
jne
xchg
pushl
in
mov
push
cmp
mov
mov
push
inc
pop
sub
sub
mov
pop
ret
cmpb
popa
inc
int3
addr16
hlt
fwait
in
js
xchg
mov
and
popf
pop
push
fs
xchg
loop
clc
xor
and
xor
outsb
push
xchg
dec
push
push
jb
stos
mov
sahf
dec
adc
mov
test
mull
dec
xor
add
dec
loopne
ror
jns
std
jae
add
jge
mov
je
xor
adc
daa
mov
insb
test
mov
jge
push
cmp
jl
ja
or
cld
bound
in
mov
dec
in
adc
out
ljmp
inc
popa
mov
cmp
gs
add
scas
in
and
sub
int3
cmp
lcall
push
push
cmp
jg
out
mov
xor
jnp
cmp
cmpl
rolb
adc
jecxz
lods
iret
xorb
xor
pop
mov
je
push
jp
movsb
mov
sub
and
movsb
cmc
dec
andl
pop
cli
jne
sbb
stos
or
test
jns
jle
xchg
shrb
jge
push
rol
test
sbb
vunpcklps
add
add
jb
xchg
scas
xor
es
xor
and
outsb
sbbl
js
iret
mov
movsb
push
mov
sbb
lods
jp
lds
inc
sbb
jge
pusha
lds
mov
add
out
pop
cmp
jnp
cltd
xor
cltd
dec
lahf
cmc
pop
push
pop
insl
add
dec
push
lahf
dec
ffree
mov
loop
jae
aam
nop
mov
sahf
movsl
or
ljmp
adc
loop
cmp
addr16
rcl
cmp
mov
pop
cmp
outsl
addr16
es
dec
jne
add
sbb
lods
add
jo
and
shll
leave
movsl
jle
cmp
cwtl
mov
mov
pushf
int
ret
cld
sbb
loope
fstpt
pop
sbbb
sbb
pop
sbb
cld
test
cmpsb
into
repnz
or
aam
stc
jg
gs
das
inc
mov
inc
ljmp
repnz
dec
mov
in
lds
stos
mov
cld
sbb
fimull
push
jp
cmp
adc
test
loop
popa
imul
xchg
pop
dec
scas
iret
mov
mov
mov
dec
lret
mov
and
dec
push
xchg
lods
insb
cmp
out
push
addl
mov
leave
sub
xchg
push
cmp
sbb
sbb
mov
push
outsb
and
jbe
dec
shlb
pusha
repnz
mov
xor
add
and
sbb
stc
les
fdiv
sahf
jle
stc
iret
dec
sti
in
shrb
fs
fldenv
sub
pushf
aad
sti
ficomps
cmp
iret
add
or
loopne
push
dec
cmp
mov
mov
lods
mov
jmp
mov
inc
inc
inc
bound
xor
pop
mov
iret
xor
jg
int3
inc
std
movsl
aam
arpl
mov
sub
add
lods
jl
lods
mov
cmp
push
or
pop
popf
add
jge
or
mov
push
push
adc
ljmp
movsb
jne
xchg
and
mov
push
fstpt
fiaddl
dec
loopne
lods
and
popa
test
jo,pt
dec
add
insl
imul
xor
inc
jne
cmp
dec
mov
aaa
outsb
sub
or
mov
push
ds
xor
shrb
mov
outsl
lods
push
adc
andb
jb
inc
xlat
xor
inc
pop
imul
sbb
push
stc
lds
cmp
psraw
fmull
push
or
dec
jecxz
icebp
mov
ror
insb
repz
in
cmc
xor
sbb
sub
pop
insb
cmp
sbb
sbb
cmp
shl
push
jae
daa
xorl
xor
pop
sahf
pop
push
lret
cltd
jno
pushf
orb
mov
cmp
adc
in
xor
adc
or
test
and
push
mov
sub
pop
mov
cmp
sbb
lahf
jb
mov
xchg
lahf
jmp
fsubrl
inc
and
gs
fwait
movsb
int
andb
movsb
push
and
int
dec
mov
add
jecxz
sbb
xchg
es
push
movsb
gs
xchg
pop
mov
addr16
in
or
push
and
sub
in
std
sbb
daa
inc
mov
fwait
test
roll
xchg
xchg
in
lea
sub
outsb
sarl
inc
insl
cld
jne
in
mov
sbb
mov
xor
and
or
stos
aam
dec
sub
and
sbb
pop
mov
xor
adc
jge
xor
mov
jl
or
movsl
shl
test
fsubl
rolb
cli
pushf
movsl
cmp
ret
clc
aam
icebp
js
or
add
sub
mov
sub
lods
repnz
sbb
daa
sub
fistl
xor
mov
and
gs
les
pop
mov
push
mov
adcl
aas
push
int
in
scas
sub
divb
push
mov
rorl
jmp
xchg
hlt
fs
out
or
push
int
fisttps
gs
subb
fsub
out
jge
popf
clc
das
pop
push
push
fwait
sbb
es
or
jae
into
and
mov
and
adc
fwait
dec
shlb
ret
cmp
fcoms
ss
aam
rclb
add
add
fidivs
mov
dec
push
cli
mov
sti
cmp
pop
and
mov
arpl
push
daa
clc
mov
jnp
out
imul
stos
gs
pop
cwtl
pop
cmp
push
lock
pop
xor
imul
dec
call
ss
push
cwtl
push
mov
xchg
xor
test
xchg
insl
aam
push
cltd
jb
push
pushf
fadds
fldl
aad
imul
mov
lods
adc
addr16
ds
test
imul
or
mov
sbb
mov
mov
xchg
test
gs
xor
and
es
or
xchg
ja
test
mov
mov
push
adc
repnz
mov
int
pushf
sub
daa
push
or
out
pop
mov
mov
xchg
leave
xchg
sarl
stos
mov
shrb
popf
inc
pop
push
cli
lret
sbb
xchg
int
add
ret
mov
mov
mov
pop
xchg
push
cs
cld
push
and
dec
jbe
idiv
stos
dec
cmpsl
jp
sub
push
stos
mov
out
xchg
sar
jp
std
sbb
push
test
jnp
orl
cmp
inc
jns
fs
and
sbb
test
popl
jg
loope
aaa
or
scas
rcrb
daa
in
addb
mov
and
jae
mov
cmpsl
dec
jae
addb
shll
mov
inc
adc
aad
mov
fmuls
movsl
outsl
mov
xor
xchg
pop
adc
jp
sbb
push
aam
loop
sub
addb
movsb
lret
dec
cmc
jl
adc
jns
add
mov
fcomps
int
xchg
dec
push
addr16
sub
push
push
dec
je
jg
es
cmp
push
hlt
xor
pop
pusha
test
sti
sahf
stos
ret
cmp
add
xor
add
inc
cmp
and
xor
sbb
iret
int3
or
sbb
fmull
shll
fcmovne
in
jnp
ret
xchg
dec
mov
push
fwait
and
daa
xchg
pushf
in
test
lods
push
and
inc
fldcw
jle
sbb
cld
in
mov
in
add
mov
lods
jg
inc
pushf
fistpl
pop
fcomps
daa
and
mov
rcrl
std
rorl
xor
cwtl
dec
fwait
jo
lea
ja
cli
lock
aaa
insb
pop
scas
nop
repz
xchg
adc
es
out
mov
cmpsl
or
fstpt
mov
mov
test
adc
enter
popa
std
and
jo
xchg
sub
adc
pushf
nop
test
push
sbb
xor
sub
in
jg
out
lea
outsl
dec
dec
mov
sub
stos
shr
scas
push
jg
xor
sub
push
jge
fs
and
adc
into
cmp
dec
test
inc
cld
jb
mov
mov
add
out
jecxz
stos
jb
mov
mov
mov
xor
xchg
inc
imul
mov
lods
in
movsb
adc
ds
cmpb
jns
cmp
movsb
sbb
push
push
xor
push
sbb
and
in
and
sub
jge
test
loop
jnp
fsts
mov
out
mov
mov
sub
mov
add
movsb
inc
aas
test
push
data16
leave
cmp
sbb
cmp
push
adc
mov
push
call
jbe
push
push
imul
adc
sub
mov
sub
rcl
call
jp
out
fcompl
daa
mov
mov
mov
dec
and
daa
xor
add
int
filds
dec
push
add
mov
gs
loope
add
mov
in
sbb
inc
mov
loopne
xor
pop
cli
jo
aam
and
push
pushf
hlt
aad
jae
xchg
fwait
leave
mov
xor
pop
scas
loop
xchg
outsb
jne
adc
hlt
mov
fcoml
cmp
clc
inc
dec
nop
hlt
sti
xchg
test
add
int
mov
mov
mov
fcoml
jbe
add
test
icebp
stc
cwtl
xchg
inc
arpl
xor
lods
loopne
sub
adc
stos
cmp
cmp
mov
sub
pop
jb
cmp
dec
nop
mov
mov
outsl
je
cmp
mov
imull
test
cmp
sbb
test
stos
push
xchg
ss
push
bnd
pop
mov
rolb
xchg
out
mov
ficoml
fs
shrb
mov
in
test
loope
enter
idivb
notb
pushfw
out
and
fwait
sbb
sub
push
jg
fdivs
decb
gs
dec
push
fisubl
les
mov
add
aad
lahf
sti
adcb
pop
mov
ret
mov
xchg
and
aam
clc
in
nop
test
push
xchg
aas
cmp
mov
ret
xlat
aam
xchg
pop
imul
push
xchg
mov
sub
xor
loop
inc
pushf
orl
push
add
lea
fwait
inc
mov
ds
adc
jl
sbb
mov
sbb
out
mov
xchg
je
push
dec
mov
mov
cmp
ret
xchg
stc
sbbb
in
inc
test
loop
es
sbb
inc
divb
inc
pop
subb
daa
pushf
jnp
sub
mov
jb
inc
lcall
adcb
mov
xor
pop
dec
insb
cmc
scas
fsubl
in
cld
fwait
out
mov
push
jg
aaa
movsb
cmp
stos
dec
ja
aaa
arpl
test
aad
insb
sti
mov
mov
js
jns
insb
dec
fstl
enter
popa
cli
mov
xchg
mov
addr16
xchg
pop
jp
adc
mov
mov
pop
and
cld
sti
dec
or
pop
bound
inc
shrb
bound
fisubl
clc
xchg
aas
int
shll
sar
cmp
cs
sub
mov
orb
notb
sbb
push
pusha
mov
dec
in
jg
js
lea
push
rcl
dec
mov
repz
adc
out
aas
sarb
jb
ljmp
mov
sbbl
inc
in
lods
jne
jae
inc
fstpl
xorl
pushf
mov
and
sub
lock
push
in
les
push
dec
push
push
sub
pop
shl
xchg
roll
dec
scas
dec
pushf
sub
lret
out
sub
or
push
pop
mov
dec
cli
out
into
push
call
test
fcmovu
add
js
mov
cld
jg
movsb
xor
in
popf
out
mov
jge,pn
sub
push
mov
pop
loope
cmp
mov
mov
or
stos
sbb
out
inc
js
inc
jno
imul
mov
arpl
cmp
mov
movsb
test
repz
andb
lods
mov
adc
popa
mov
fwait
xchg
clc
movsl
movsb
rcr
fwait
cmp
dec
into
bound
int3
nop
les
cmp
sbb
dec
dec
ja
ret
sub
movsb
xchg
jle
cmp
decl
jmp
push
enter
push
mov
vpunpcklbw
ja
mov
cwtl
mov
xchg
sbb
fisubl
xorl
fnstsw
stc
cmp
push
fucom
aas
jns
pop
and
ljmp
dec
loop
sub
push
fisttpll
lea
jns
xor
lea
jge
test
shrl
inc
mov
push
stos
xor
push
pop
das
jo
dec
sub
mov
stos
pop
inc
mov
mov
out
inc
ss
enter
out
mov
jne
mov
push
cld
inc
lcall
inc
mov
addr16
lret
inc
pushf
adc
sbb
popa
js
popf
push
pop
ror
stos
fwait
stc
lahf
aas
xor
and
in
mov
fiadds
sub
les
dec
in
orl
ljmp
push
inc
pop
popf
lock
lods
aad
push
jle
std
mov
popa
pop
neg
push
adc
lods
es
jae
inc
sub
xorb
mov
shl
cwtl
pusha
push
test
push
aas
pop
shrb
add
pop
push
push
ret
add
dec
mov
flds
data16
mov
mov
dec
pusha
fimuls
inc
clc
nop
xchg
xor
and
sbb
mov
negb
sub
cli
push
ficoml
cmc
inc
mov
in
xor
inc
jmp
sbb
lcall
pop
sarb
in
or
out
mov
add
jno
pop
xor
ret
pop
xchg
idivl
xchg
loop
mov
js
jp
sub
cmp
or
dec
imul
aas
ja
fwait
loope
lcall
mov
mov
mov
jge
mov
out
pop
jne
movsl
das
xor
dec
cli
lret
adc
jns
add
mov
xor
cmc
cmp
sarb
ficompl
mov
out
data16
adc
fsubrs
es
adc
dec
sub
pop
test
lret
or
mov
icebp
nop
outsl
xorl
in
sub
and
jbe
xchg
ret
int3
fs
adc
test
adc
push
sbb
call
sbb
fmul
lcall
xchg
jns
pop
test
xor
fsts
xchg
icebp
in
xor
sbb
imul
sub
push
repz
push
fwait
mov
ljmp
jmp
jb
and
lods
cmp
test
add
cmpb
sbb
sbb
stos
adc
out
mov
push
fcmovnbe
sub
cltd
jne
add
fwait
or
xor
mov
mov
arpl
xorl
push
pushf
fists
out
add
loop
push
insl
imul
loope
mov
pop
repz
rolb
in
add
shll
loopne
xchg
mov
in
idiv
test
mov
or
lcall
push
outsb
stos
in
xchg
int3
loopne
arpl
lahf
loopne
addl
and
enter
jecxz
xchg
sbb
inc
adc
fsubp
mov
jmp
cmpsb
sbb
sub
and
jmp
mov
call
mov
shll
mov
ja
push
add
dec
mov
mov
mov
sub
je
cmp
scas
xor
push
sbb
sbb
xor
adc
fisttpl
mov
in
imul
insl
or
call
jb
mov
daa
test
inc
pop
incl
out
jns
mov
or
push
jle
add
and
push
adc
fwait
jge
or
fcompl
jmp
test
push
sbb
pop
push
insb
pop
in
outsb
fdivs
inc
bound
mov
aaa
shll
rorb
ljmp
out
outsb
add
stos
sahf
je
imull
test
stos
mov
cld
out
hlt
fdivrl
ror
push
dec
fstps
or
cwtl
cmpsb
add
jne
pusha
mov
clc
xorb
lcall
fs
fdivp
cmc
dec
sub
sub
adc
gs
push
cmp
inc
cld
test
invd
clc
sbb
mov
call
inc
mov
dec
pop
mov
addb
cmp
mov
jle
repnz
les
adc
mov
sub
add
ffreep
mov
icebp
xchg
inc
stos
xchg
call
sub
enter
aam
xor
lds
cmc
cmp
mov
or
pushf
cmovo
scas
pop
shrl
sbb
repz
jg
mov
and
imul
xchg
lret
ja
loop
jecxz
stos
ljmp
lods
and
dec
sahf
test
cs
les
xlat
sub
and
test
adc
push
roll
sbb
das
dec
push
das
mov
fistpl
in
pop
mov
adc
fwait
push
push
xchg
scas
jl
in
pop
insb
push
loope
xchg
stos
jp,pt
and
adc
jge
fcomps
notb
jo
sbb
or
mov
dec
cmpsb
cli
xchg
rep
jmp
outsl
and
inc
adc
movsl
cmp
lods
mov
cmp
jl
enter
adc
pop
jae
data16
mov
lcall
jp
aam
and
jbe
mov
lahf
es
jbe
mov
loopne
repz
mov
push
push
mov
jno
es
lcall
xchg
in
leave
push
lds
push
pop
int
sub
push
fwait
dec
fldt
or
adc
add
leave
rorl
mov
and
xchg
inc
sub
test
push
test
mov
cmp
insb
cmp
insl
or
mov
aas
mov
fwait
mov
cli
pop
out
gs
popa
orl
int
xor
adc
pop
dec
push
inc
adc
stos
dec
stos
xor
test
int3
cmc
fnsave
and
and
push
sub
cld
mov
repnz
ss
in
ja
int3
cmp
or
leave
or
sub
xchg
add
mov
std
xchg
test
cmpsb
lret
push
enter
sub
sbb
inc
lea
or
arpl
add
push
roll
sub
adc
into
or
inc
sbb
and
push
cli
lcall
push
mov
sub
jl
mov
testb
xchg
imulb
sbb
push
mov
push
je
rclb
push
and
jg
aad
or
sbb
dec
add
in
mov
repz
stc
jnp
imulb
faddl
cld
clc
ror
mov
adc
pop
outsl
adc
push
jle
dec
add
adc
push
ret
dec
lds
push
cmp
call
ds
lret
ficomps
test
mov
shl
repz
arpl
pop
pop
movb
mov
shrb
movsb
pop
out
ficoms
xor
outsl
mov
push
inc
je
scas
cmpl
loop
jbe
movsb
pop
stc
ljmp
lods
inc
cmp
js
mov
jno
push
es
enter
jae
inc
repz
pop
lods
sbb
mov
scas
adc
cmp
pushl
pop
inc
cmpsl
cld
fdivs
inc
push
push
lret
outsl
sub
cld
push
sbb
cwtl
push
jge
dec
mov
out
jns
pop
scas
add
mov
shrl
dec
mov
in
dec
jmp
or
ljmp
lret
pop
adc
lcall
lret
inc
pop
push
loopne
fstl
pop
lds
jnp
sub
pop
ss
fisttpl
lods
jbe
sti
into
sub
adc
jne
into
hlt
xor
jb
dec
dec
pop
lea
pop
mov
popa
jno
cmp
inc
xchg
in
bound
andb
add
mov
cmc
ljmp
mov
mov
mov
sub
xor
lods
push
in
in
leave
sahf
jg
mov
int
sahf
out
fimuls
cs
aad
arpl
jle
mov
adc
pop
out
out
push
lds
pop
sub
pop
popf
arpl
cltd
mov
mov
cmp
stos
xor
repz
test
inc
int
out
cs
sbbl
sbb
adc
push
and
cmp
push
inc
mov
pop
jmp
xor
test
cwtl
jp
cli
mov
fs
mov
ret
inc
dec
clc
movsl
fidivrl
ds
cmpsb
lods
daa
push
stos
sbb
push
lea
xor
testb
jg
fldenv
cmpb
loope
xor
or
adc
jmp
and
jp
test
add
imul
andl
xchg
xor
fcompl
lret
loope
push
lods
fisubs
dec
leave
sahf
cmpsb
std
nop
lcall
mov
and
shlb
cmc
and
push
in
mov
sub
jp
negl
sub
or
mov
jg
dec
cmpsb
jno
add
inc
lret
cld
mov
jg
mov
les
inc
movl
enter
stc
fimuls
call
ds
xchg
sub
nop
bound
test
mov
mov
mov
int3
sub
in
arpl
xlat
bound
push
dec
mulb
cs
cld
sub
inc
cmp
xorl
jbe
xchg
lock
xlat
xchg
or
lea
cli
sahf
les
mov
pop
push
cmpsl
or
mov
add
xchg
cmp
bound
lret
xor
cli
lahf
adc
mov
add
cmpsl
out
aam
cld
les
sbb
sbb
cmc
pop
mov
in
and
mov
cwtl
sub
bound
pause
je
add
jge
aam
xor
fcompl
and
lret
leave
stos
xor
jae
sbb
popa
add
sbb
mov
popa
fs
xchg
leave
ffree
push
sbb
ffree
daa
sbb
daa
stos
out
je
mov
loop
clc
fnstsw
cmpsl
fcmovbe
xor
in
es
pop
ret
cwtl
mov
in
movsb
popf
sub
test
xchg
dec
or
mov
fcom
mov
outsb
mov
mov
dec
cmc
jno
cmp
iret
cmp
jl
mov
mov
fisubrl
cmp
pushf
add
cmp
outsl
push
and
mov
imul
sub
inc
mov
or
es
dec
loope
lcall
push
fisubl
jle
or
add
sub
outsb
dec
mov
xlat
mov
pushf
into
jb
xchg
add
jo
fstpl
pop
jne
sbb
inc
adc
popf
pop
mov
loop
add
or
jecxz
or
add
sbb
loope
cmp
sbb
cmpsb
pop
or
loopne
mov
pop
mov
je
sbb
xor
filds
xchg
sbb
xor
scas
mov
lret
sub
cmp
fisttps
test
push
hlt
test
sar
cmpsl
mov
push
lock
outsl
xor
push
call
cmpsb
cmpsl
mull
call
int
or
sbb
sbb
jo
inc
sub
xor
jo
xlat
mov
scas
test
fsubrs
xchg
arpl
dec
jmp
aas
jge
int
call
sub
push
arpl
jle
int
out
add
lods
mov
lcall
push
push
adc
imul
jb
aas
and
out
mov
mov
jnp
es
mov
jge
pop
jb
sahf
inc
jns
push
int3
pop
fdivp
push
fstl
inc
sub
cmp
pop
sub
xor
scas
test
xor
push
xor
loop
cmp
inc
lahf
rcrl
push
xor
mov
mov
inc
or
mov
call
fisttpl
test
push
mov
push
mov
pusha
loopne
jg
rcll
out
orb
cmp
into
outsl
mov
jp
lea
dec
xchg
mov
dec
xchg
jo
icebp
add
popf
or
push
aad
add
bound
jmp
pop
xchg
rcrl
xor
lock
xor
negl
or
mov
and
sbb
mov
pop
pushf
mov
jmp
loopne
mov
lret
xchg
jp
xchg
js
xor
and
into
in
mov
out
jns
lods
lock
xchg
pop
and
gs
lahf
xchg
call
adc
fadds
xchg
xchg
dec
adc
aam
mov
xchg
mov
add
int
mov
shl
out
push
mov
sub
jmp
jg
fsubrl
push
lahf
adc
push
dec
fwait
and
jae
cmp
sbb
mov
mov
xor
add
jp
repnz
pop
into
rorb
xlat
mull
rorb
aas
stc
mov
inc
dec
push
pop
addr16
sub
mov
mov
add
scas
cmp
lcall
push
call
dec
sbb
popf
in
xchg
cmp
andb
pop
leave
sbb
aam
movsb
push
or
outsl
xchg
mov
popa
dec
and
inc
or
pop
pop
orb
push
cmc
xchg
xchg
stc
add
push
pop
cmp
lods
dec
call
pop
xor
popa
cmp
imul
out
es
adc
cmp
push
pop
test
bndldx
sub
testl
add
push
mov
pop
daa
push
fwait
mov
mov
stos
xor
mov
fdivr
pop
insl
jae
jno
mov
push
pop
repz
pcmpeqb
push
mov
fldcw
jbe
adc
inc
roll
dec
out
or
icebp
outsb
sub
pop
call
jnp
cmp
scas
pop
test
cmpsw
push
push
cmp
inc
pop
fmul
xchg
sbb
xchg
inc
fisubs
cwtl
addr16
mov
or
or
and
pop
scas
pop
push
jmp
and
dec
jp
push
jb
or
jmp
xchg
test
mov
pop
aad
lret
cmp
cmpsb
loop
flds
mov
xlat
pop
loop
mov
jp
push
or
xor
push
jmp
in
fwait
add
in
sub
mov
addr16
cmp
icebp
mov
and
sbb
lock
mov
pop
dec
cmp
mov
pop
sub
mov
sub
push
xlat
pop
xchg
pop
dec
rol
or
jo
imul
lret
xchg
xchg
and
mov
jbe
hlt
add
mov
mov
lcall
lahf
out
xchg
aam
cmp
or
jne
or
repz
cs
sbb
push
pop
movsl
mov
aas
sbbl
jl
sub
mov
mov
sbb
in
testl
int3
mov
and
jne
mov
cltd
push
scas
outsl
pop
dec
jl
mov
es
mov
jns
leave
add
push
sahf
jnp
out
sbb
mov
imul
stc
rcl
ja
jb
inc
xlat
sub
pop
mov
mov
inc
xor
mov
xor
fildl
and
inc
pop
dec
icebp
adc
adc
pop
std
mov
pusha
cmc
or
add
lock
cltd
mov
loope
add
dec
push
imul
cs
mov
adc
adc
push
shl
insl
pop
mov
sarl
push
cmpsl
add
xchg
push
sub
enter
pop
std
cmp
cmp
xchg
jp
adc
jb
test
icebp
pushf
adcb
mov
dec
das
addr16
cmc
icebp
adc
lcall
iret
inc
jl
mov
push
inc
xorl
pop
push
mov
pop
mov
cmpsb
push
push
loope
mov
mov
ja
pop
adc
push
rolb
xor
int
lock
cmp
sbb
push
lahf
mov
fisttpl
dec
repz
mov
push
push
dec
jmp
inc
mov
test
mov
fcmovnu
sbb
cld
in
mov
imul
dec
pop
sti
mov
daa
mov
mov
or
mov
xlat
cmp
sbb
and
js
fists
pop
movsb
push
negl
cmp
repz
xchg
adc
sbb
pusha
xchg
add
repnz
daa
mov
loope
popl
xchg
leave
jae
mov
out
cs
push
lahf
js
scas
test
aam
add
sbbl
rorl
jbe
repnz
cmc
test
fimull
aas
rclb
adc
jo
sub
and
mov
dec
das
and
insb
inc
enter
rclb
push
push
jne
rcll
inc
cmp
clc
pop
push
out
aad
jle
mov
pop
push
les
xor
ret
push
jmp
inc
lcall
pushf
fadds
popa
push
fcmovnb
scas
pop
std
mov
cs
mov
push
xor
cltd
imul
pop
xor
pop
sub
mov
repz
and
ja
aam
fdiv
test
sub
ss
iret
imul
orl
cmp
pop
or
popf
lods
mov
pushf
cmc
jns
sub
jl
loop
jns
mov
jb
cwtl
movsb
and
ja
push
pop
pop
push
sarb
test
bound
vmptrst
jge
add
pop
ss
shrl
movsl
lock
cmp
iret
popf
test
rclb
mov
dec
and
ret
jb
scas
in
std
xchg
cli
pushf
dec
inc
cmpsb
shlb
data16
add
or
pop
jl
mov
dec
and
mov
mov
icebp
imul
lcall
add
stos
sahf
sbb
mov
pop
sahf
outsb
mov
add
fisubs
adc
or
push
adc
aam
das
cmpsb
fisubl
lret
sbb
pop
adc
and
stos
cmpsb
clc
enter
lahf
mov
sub
jb
call
xchg
sub
jp
push
gs
icebp
mov
sub
test
adc
adc
sub
enter
outsl
shll
int
cltd
pop
in
pop
jb
xor
loope
repz
out
push
xchg
test
ja
iret
pop
dec
sub
cmp
mov
ja
mov
mov
cmpsl
add
imul
mov
scas
push
pop
adc
andl
in
shl
cmpb
sub
mov
jge
call
jnp
xor
test
ja
popf
jbe
xor
pop
iret
mov
add
orl
mov
lock
dec
dec
rol
repnz
js
xor
iret
out
cmp
sub
and
je
fwait
sub
mov
daa
movl
or
fcoms
push
adc
xor
push
daa
ret
cmp
and
push
xchg
leave
fcmove
mov
sbb
jae
pushf
mov
dec
data16
pop
mov
out
cltd
imul
into
sub
or
mov
inc
repz
inc
jo
push
jl
push
adc
pop
cmpl
mov
js
cmp
pop
sbb
repnz
cmp
cwtl
sub
popa
jp
ja
lock
stos
adc
in
push
mov
nop
stos
sbbl
lret
sub
mov
jb
jl
inc
scas
sbb
pop
adc
loop
xor
out
mov
lds
and
jl
ss
fs
pop
out
and
or
push
and
pop
and
rcrb
movsb
sar
enter
pop
ljmp
mov
pop
adc
fbld
rorb
mov
xchg
sbb
sahf
mov
mov
xor
fildll
das
imul
or
mov
push
aad
jge
dec
pop
ljmp
cmc
dec
lret
xor
xchg
or
filds
shr
outsb
sub
add
mov
call
mov
mov
pop
cmp
pusha
in
stos
loop
push
xor
xchg
in
push
out
pop
loope
and
push
jne
jno
aad
jle
pusha
xchg
popa
addr16
cltd
dec
fwait
int
lods
mov
scas
sbb
in
popf
push
test
lea
into
popa
lods
leave
xchg
ljmp
lret
push
pop
mov
push
push
icebp
push
adc
adc
jb
sbb
push
int3
jle
xchg
outsl
cmp
bound
jnp
or
jno
leave
sub
imul
pop
jmp
push
or
sti
mov
jnp
cwtl
sub
pop
mov
dec
sub
int
fldcw
cmp
add
mov
lock
call
fs
test
cmp
mov
cwtl
dec
pop
fsubr
lea
xchg
iret
jmp
ret
movsl
pop
sub
mov
aas
sub
push
lock
mov
andl
and
les
dec
jle
xchg
aad
mov
mov
push
mov
xchg
mov
repz
push
sahf
push
inc
push
jl
cmp
imul
xchg
icebp
dec
jl
pop
in
adcl
ds
push
imull
or
in
xor
lcall
xor
jmp
cmpsb
add
imul
icebp
pop
inc
mov
dec
mov
and
cmc
mov
sub
adcb
push
addr16
popf
stos
sbb
xchg
es
ja
adc
lcall
xchg
movsl
xor
cmpsl
xor
adc
icebp
dec
jo
inc
out
adc
jae
cmp
aaa
in
and
or
fcmovne
shll
ret
ja
pop
cmp
sub
lods
mov
popa
shrb
int3
icebp
adc
es
int
aas
cmp
lea
xchg
arpl
jns
pushl
xchg
mov
dec
mov
adc
xchg
pop
jl
mov
sbbl
pop
cltd
jle
xor
test
movsl
cltd
push
hlt
notl
sub
ljmp
fs
ds
cltd
cld
imul
nop
es
arpl
mov
scas
mov
add
mov
or
hlt
lahf
lret
push
insl
outsb
imul
xor
add
pop
cmp
or
mov
and
pop
mov
arpl
jo
jg
iret
add
lock
imulb
push
pop
fwait
int
sbb
jbe
fildll
mov
roll
sub
jne
repz
xor
and
call
cmp
xchg
xchg
test
daa
jp
lds
out
fidivrs
mov
pushf
insl
jb
bound
test
cmc
xchg
inc
stos
push
mov
enter
add
popf
decb
jbe
test
mov
divb
add
lahf
adc
js
xchg
ret
int3
mov
jecxz,pt
in
jo
test
jb
stc
inc
addr16
sbb
or
jnp
and
cltd
lods
std
out
aaa
fiaddl
cmp
mull
cmp
mov
outsl
shl
and
push
cmpsb
lret
mov
fimuls
aam
push
repz
jb
push
push
mov
shlb
popa
mov
das
dec
push
das
inc
icebp
in
mov
cmpsb
xchg
rcrl
inc
mov
mov
aas
icebp
imul
jnp
cmpsl
lahf
aam
fnstsw
fs
scas
aad
mov
push
into
and
das
ror
mov
push
push
mov
jae
and
mov
cltd
adc
es
cltd
adc
aaa
xchg
movb
or
fsts
bnd
dec
add
xor
jge
push
adc
das
lods
int3
xor
sub
push
mov
sub
adc
int
scas
add
imul
movsb
xchg
push
adc
or
pushf
mov
mov
adc
sub
push
stos
jge
jno
shrb
sarl
stc
dec
sbb
sbb
and
or
repnz
shrl
pop
aas
fwait
pop
or
fsub
cmp
mov
cmp
mov
inc
mov
pop
and
roll
and
out
mov
push
jmp
push
cwtl
sbb
repnz
fcmovb
mov
adc
xchg
inc
or
andb
inc
stos
jo
fwait
subl
imul
cwtl
movsb
xor
mov
push
pop
insb
jbe
shlb
lcall
jnp
lods
push
inc
nop
shr
call
cmp
push
xchg
xor
mov
repz
out
adc
inc
jp
push
and
cwtl
jae
pop
mov
dec
xor
call
gs
andb
sub
inc
xor
inc
imul
sbb
in
mov
fs
cltd
add
xchg
in
in
insl
js
lods
mov
fadds
btc
bound
inc
mov
add
xchg
loope
pop
push
sub
dec
lea
jnp
lea
inc
sub
out
aaa
or
push
lock
out
push
cmpsb
xchg
push
and
dec
xor
mul
lds
mov
imul
shrb
inc
push
cs
cmp
jo
addr16
icebp
jecxz
jb
sbb
xchg
xchg
mov
orl
mov
in
jo
mov
sbb
xchg
dec
movsb
xchg
clc
add
int3
push
adc
or
or
jle
jo
add
movsl
sub
or
aaa
mov
mov
aam
ja
aam
dec
aam
and
mov
cmc
outsl
mov
aam
mov
sub
push
shrb
or
addl
fdiv
mov
int3
adc
adcb
xchg
rorb
fwait
test
dec
sub
xor
sub
push
fistpl
or
sub
sar
mov
ss
cld
stc
add
cmp
push
ss
rcrl
arpl
xchg
aad
mov
push
pop
ljmp
stc
sbb
sti
lods
push
pop
jge
dec
mov
dec
test
xchg
pop
std
xchg
sub
xchg
or
sbb
std
xor
pop
lret
outsl
mov
leave
stc
pop
in
aaa
stc
or
and
sbb
dec
cmp
das
out
mov
mov
dec
mov
loopne
push
cmpsl
xor
enter
add
ds
mov
in
xchg
clc
dec
adc
faddl
fsts
cmove
fs
mov
testb
cmp
imull
dec
mov
enter
adc
pop
dec
mov
cs
mov
outsl
stc
leave
pop
js
popa
mov
or
outsb
das
dec
in
std
movsb
out
adc
push
pop
cmc
xchg
incb
in
xorl
ret
enter
push
in
dec
jmp
and
syscall
push
or
pop
leave
push
sahf
jnp
push
or
jns
jnp
cli
pusha
out
enter
sub
sahf
lret
push
cmp
movsl
xchg
jb
xlat
int3
pop
aad
adc
out
or
outsl
add
jns
cmpsb
les
fwait
dec
push
pop
adc
pop
push
in
and
pop
inc
sbb
pushf
fxch
fnstsw
or
pop
jle
xchg
loopne
in
push
inc
dec
add
inc
testl
in
add
aaa
sbb
xor
pop
test
cmc
jmp
pop
fistl
fdivl
sub
mov
ficomps
lods
inc
outsl
imul
ljmp
jne
cmp
mov
mov
adc
sbb
jns
jnp
add
imul
orb
ss
cmp
fmull
add
cld
dec
enter
xchg
jns
add
add
and
adc
dec
cli
in
push
idivl
clc
fidivrl
jae
xchg
dec
sti
inc
in
jne
jle
xchg
outsl
pop
int
ss
out
jbe
lods
popf
xchg
cwtl
in
jae
ds
cmp
inc
cmp
and
adc
test
mov
lods
push
mov
movsb
mov
xchg
lds
mov
push
int
sbb
jecxz
adc
pop
or
outsb
std
adc
sub
and
and
lods
movsl
hlt
mov
jne
sub
jmp
aam
loopne
xchg
jnp
in
push
jno
pop
push
ljmp
ret
and
sub
aaa
mov
jb
scas
mov
push
rcll
inc
sub
sbb
aas
repnz
xchg
sbb
cmp
add
shl
mov
push
mov
insl
mov
and
stos
pop
jge
cli
les
iret
cmpsl
mov
dec
pusha
mov
imul
dec
out
add
pop
pop
aam
sub
push
scas
push
pop
jmp
adc
sti
mov
push
cltd
fildl
cmp
sub
adc
sub
insb
pop
mov
cwtl
xor
xor
sbb
push
lods
push
mov
hlt
stos
pop
sbb
movsb
aad
rcr
pop
imul
xchg
mov
mov
mov
repz
mov
fwait
out
cmp
and
jmp
mov
push
or
pop
stos
aas
ret
je
xchg
in
stos
cltd
mov
out
imul
out
fcompl
dec
bswap
popf
add
pop
inc
ja
out
push
sbb
jb
fdivr
shlb
cmp
jle
xchg
xor
sti
or
lea
mov
stos
and
sbb
sbb
sub
cmc
gs
mov
xchg
inc
mov
add
jmp
xchg
jge
jbe
int
mov
insb
mov
mov
jmp
fstpt
int
enter
roll
jne
or
pop
adc
inc
mov
fwait
mov
mov
les
lods
test
fsubs
std
out
aam
in
adc
push
mov
and
sbb
xchg
mov
insl
adc
lret
inc
inc
dec
sbb
mov
or
out
loope
nop
inc
xchg
inc
push
cmp
das
cwtl
sbb
cmp
mov
icebp
mov
xorb
jp
mov
jnp
pop
and
cld
das
push
leave
lock
sti
mov
xchg
cmpsl
ja
bt
out
push
xor
push
adc
push
pop
jnp
or
test
push
cmpsl
test
adc
mov
lcall
out
or
loope
fldln2
scas
mov
pop
push
out
dec
rol
jb
outsb
shrb
loope
sub
adc
and
mov
in
insl
jb
idivl
pop
mov
cld
cmp
outsl
jns
sub
xchg
cld
fdiv
negb
or
mov
fcmovnbe
pop
rcrl
dec
ficoml
mov
jns
fucomp
fildll
pop
inc
sbb
xchg
loopne
inc
pop
loopne
js
sbb
sub
xor
sbb
push
data16
mov
xor
add
out
cmp
filds
mov
sahf
add
xor
or
pop
fcmovbe
or
add
scas
and
addr16
dec
stos
push
mov
push
arpl
test
cmp
fnstcw
js
imul
jnp
inc
pop
sahf
sahf
push
sub
divb
sarl
jl
hlt
icebp
xor
daa
pushf
sub
popf
dec
lcall
insb
lock
clc
test
mov
and
test
xor
popa
scas
ss
push
in
xchg
mov
loopne
into
mov
cmp
dec
enter
in
jp
cltd
pop
sti
ja
loop
or
sbb
std
xchg
in
cmpsl
mov
or
cmp
and
cmp
ficompl
cmp
stos
stos
bound
push
push
mov
xchg
roll
add
ret
sub
or
jmp
out
ja
push
mov
orb
clc
nop
fdecstp
lcall
or
cmp
cmpsb
mov
popa
inc
lahf
fcomp
and
xlat
xchg
ret
xchg
clc
mov
cltd
test
adc
dec
testl
dec
loopne
inc
lcall
add
jge
ret
mov
sbb
mov
je
fsubrs
push
and
add
jnp
sbbl
mov
jnp
mov
push
outsb
add
mov
mov
lods
lret
cmp
adc
faddl
out
adc
xchg
inc
fwait
or
mov
hlt
lcall
inc
out
out
pop
lea
cmp
push
mov
inc
insb
jecxz
test
fsubl
cmp
mov
inc
add
je
stc
cmp
sbb
cs
and
sub
mov
jp
adc
sub
add
shl
mov
mov
xor
mov
cmp
pushf
call
clc
mov
ret
pusha
imul
dec
sub
add
sbb
in
repnz
dec
leave
hlt
div
sarb
pushf
inc
movsb
sbb
mov
mov
cli
ds
icebp
cmp
pop
stc
mov
add
cmp
out
inc
stos
mov
sub
icebp
mov
out
mov
fwait
dec
pop
scas
cmp
push
mov
loope
pop
sbb
push
out
jl
sahf
enter
fwait
adc
pop
sub
push
xorb
insb
lods
and
imul
aas
pop
jbe
mov
mov
fsubs
cmpsb
std
jo
test
loop
sub
sbb
lahf
xchg
sahf
data16
aaa
nop
shll
jne
loope
mov
in
shrb
dec
adc
mov
fiaddl
mov
outsb
xchg
aam
sbb
mov
pop
sbb
dec
and
ret
and
lods
mov
cltd
test
mov
lret
mov
sub
orb
cmc
sbb
add
out
lret
inc
imul
addr16
sahf
jl
negb
data16
bound
subl
xchg
test
inc
add
add
and
sub
adc
movsl
and
push
stc
pop
out
push
xor
in
add
fisttpll
inc
addr16
daa
fldl
pop
loop
stos
ja
bound
scas
mov
xchg
sahf
iret
fstpt
mov
lret
je
mov
out
lods
mov
pop
push
sbb
outsb
mov
lods
push
xchg
add
mov
dec
or
mov
dec
inc
div
sbb
and
pop
mov
pop
loop
fmuls
add
aaa
gs
lock
loop
push
orl
mov
xor
mov
movsb
in
out
ret
test
lgs
ja
push
and
jae
mov
add
into
push
sbb
pop
sbb
sbbb
orl
lret
or
mov
and
and
bound
xor
data16
outsl
cmpsb
and
in
cmpl
mov
adc
cli
mov
rcrb
push
pop
xchg
sbb
les
push
add
rorl
mov
cmpsb
leave
call
mov
ficompl
pop
sbb
inc
fwait
and
cmc
sbb
push
sbb
cltd
mov
fnstsw
sbb
lret
into
mov
cmp
icebp
int
cmpsb
xchg
jns
mov
mov
push
dec
mov
xchg
imul
xchg
pop
outsb
mov
sbb
xchg
jg
aas
push
lods
ds
pop
jnp
js
mov
xchg
mov
cld
adc
adc
in
sbb
das
popa
xor
mov
or
arpl
adc
dec
test
rcrl
sti
mov
in
xchg
and
push
in
jge
imul
popa
adc
and
adc
nop
filds
sub
xor
mov
mov
movsb
pop
repnz
and
xor
sbb
cltd
xchg
mov
das
cmp
imul
mov
nop
stc
scas
sbb
test
fs
pop
pop
mov
jmp
or
fs
sbb
addr16
push
std
inc
je
mov
cmp
loope
ljmp
dec
inc
stos
pop
rcrb
jbe
popf
mov
adc
ja
push
jbe
adc
sub
mov
rcll
cwtl
push
mov
int3
aam
pop
add
dec
jmp
inc
scas
and
sbb
push
mov
clc
je
lret
or
jmp
sbb
xor
popfw
cltd
pusha
int3
lret
mov
sub
jae
dec
icebp
rorl
aam
out
into
cmp
pop
sub
arpl
add
and
iret
jg
shlb
lret
and
jl
cmp
in
push
jno
fstl
das
test
and
aas
mov
and
mov
sub
jl
jns
mov
xchg
out
mov
fs
daa
sarl
imul
mov
jecxz
pop
sti
add
xchg
aaa
std
fcmovne
adc
add
or
pop
ret
or
cmpsb
das
pop
arpl
cmpsl
mov
mov
cmpsb
les
jb
outsl
add
fwait
scas
decb
and
sbbb
pminsw
pop
sub
sbb
addl
cmp
pop
mov
jb
out
mov
mov
xchg
cmp
xchg
push
call
js
shrl
dec
sbb
call
test
xor
dec
test
and
add
mov
rcrl
pop
sti
or
push
call
loope
call
cli
lock
and
pop
or
adc
insl
aad
lret
faddl
or
leave
adc
notb
sti
stc
movsb
mov
add
jnp
shrl
lret
lods
mov
dec
mov
add
pop
lea
stos
add
mov
adc
mov
jg
jae
inc
dec
mov
push
mov
nop
cmp
ret
dec
adc
jl
cmp
xchg
xchg
aas
call
fs
lds
cltd
pop
gs
jmp
inc
inc
cwtl
dec
mov
repz
movsb
inc
es
or
inc
stos
jns
inc
rorb
outsb
into
jno
adc
push
xor
icebp
in
adc
lret
out
sarb
mov
arpl
sbb
enter
jl
mov
rcl
or
cmpsl
cmp
jbe
mov
into
out
inc
push
and
aaa
adc
sub
cmp
popa
mov
inc
add
dec
xchg
inc
add
fsubrp
shrb
cmp
ja
stos
pushf
ret
outsb
sahf
stos
xor
cmp
jmp
clc
test
cmpsl
std
sbb
std
xchg
out
or
or
cmp
hlt
mov
stc
out
in
in
add
jecxz
fwait
jecxz
adc
cmp
cld
movsl
adc
into
out
mov
mov
es
clc
nop
and
cmp
je
xor
andl
xchg
decb
push
jae
jle
xor
ja
dec
fldl2e
xor
cmpsb
ret
jns
lahf
in
mov
insl
xchg
cmc
sbb
sbb
ficoms
gs
jo
movsb
dec
notb
scas
dec
imul
cmp
lods
jl
sbb
shll
push
sub
xchg
xchg
pusha
sbb
mov
pushf
fs
jno
or
xchg
aaa
pushf
jns
mov
int3
push
aam
cmpsl
in
les
fistpll
push
adc
mov
push
gs
push
je
push
fimuls
push
sub
mov
adc
imul
sbb
into
dec
pop
xlat
rolb
xor
scas
ds
adc
out
dec
cmpsl
mov
inc
ljmp
in
jle
mov
movnti
sbb
ss
add
rol
test
mov
xchg
in
and
in
in
lods
ret
or
cmp
mov
sub
or
cmp
mov
addl
out
xchg
movsb
nop
push
sahf
add
out
push
fs
or
outsl
icebp
sarl
fldt
insb
pop
scas
aas
loop
push
sbb
mov
xor
arpl
aad
movsl
std
addr16
aad
rcrb
and
fistpll
clc
dec
std
repz
mov
lret
shlb
xchg
stos
pop
mov
imul
xchg
sub
sub
dec
xor
add
and
int3
lock
mov
out
mov
inc
xchg
dec
cltd
mull
or
in
ljmp
lods
push
ret
test
pop
int3
outsl
dec
je
imul
mov
mov
lret
add
adc
add
xchg
shlb
test
test
outsb
push
daa
add
pop
dec
add
pop
shrl
mov
pop
pop
outsb
fsubrs
inc
add
pop
add
xchg
push
mov
mov
arpl
out
loopne
aas
xor
cli
mov
fs
imul
inc
mov
mov
inc
xlat
sub
xor
ljmp
jp
aaa
push
xchg
fs
or
pop
pop
jnp
mov
stc
addl
xorb
adc
cmp
or
xchg
enter
mov
daa
aam
mov
jo
out
in
jg
test
sub
xor
in
mov
imul
push
lcall
pop
mov
jno
adc
repz
lea
scas
adc
pop
test
inc
es
pop
rcrb
mov
or
jo
pop
jbe
loopne
push
push
jp
dec
mov
inc
repz
ja
push
shr
sub
fincstp
mov
adc
out
jo
neg
je
or
dec
inc
fbstp
das
mov
hlt
jo
out
clts
out
inc
cmc
test
mov
roll
imul
mov
loop
ret
add
xchg
lea
push
nop
xchg
scas
ret
sahf
addr16
jmp
out
repnz
pop
test
in
test
lcall
pop
adcb
lcall
xchg
faddl
js
rol
faddl
lea
fisubrl
insl
mov
and
outsb
sub
scas
mov
and
lock
inc
nop
dec
test
or
inc
data16
xchg
insl
adc
push
push
aam
sub
cmp
xor
shl
test
mov
xchg
roll
mov
dec
inc
call
xchg
add
sti
inc
ljmp
and
sub
inc
mov
mov
mov
ficomps
mov
in
pop
or
rclb
mov
cmp
mov
mov
xor
insl
ljmp
lahf
inc
ss
mov
outsl
xchg
jle
stos
or
jp
jne
fnop
mov
mov
cmpl
xchg
fs
cli
dec
jmp
push
idivl
sbb
xchg
adc
out
dec
frstor
cli
pop
mov
mov
aas
mov
testb
inc
mov
jne
dec
aaa
test
lods
fildll
popa
cmp
push
fnsave
inc
pushf
jnp
cmp
pushf
xor
fdivrl
pushf
or
popa
jg
push
cmp
mov
mov
pop
cmpsb
aad
sti
movsl
int
mov
mov
gs
out
sbb
xchg
push
push
cmp
mov
out
popf
movsb
push
ficomps
lcall
xchg
mov
inc
addl
icebp
cli
rcrl
hlt
dec
out
divl
inc
jo
lret
cmp
pop
push
pop
xchg
shll
jl
stos
add
sub
xchg
inc
imul
and
popa
inc
push
out
pop
sub
sbb
sub
imul
shlb
fisttpl
jmp
push
subb
cmpsb
lea
cmc
jl
cli
dec
mov
sub
lock
ret
pushf
lret
cmp
sub
shll
add
mov
jno
andb
mov
mov
fldcw
and
sti
gs
pop
icebp
mov
repnz
fcom
xor
loope
jmp
mov
push
div
and
and
imul
jbe
xchg
mov
or
rcl
cs
lea
add
jle
mov
or
xchg
mov
loopne
scas
movsb
pop
int
das
jle
out
out
pop
cmpsl
push
jecxz
rcl
jle
dec
pushf
inc
cmp
add
adcb
fwait
dec
xchg
test
inc
ficoml
jae
stos
scas
in
js,pn
adc
sti
mov
fimuls
mov
jbe
push
xlat
mov
cld
stc
mov
pop
in
fiadds
jle
cmp
jae
mov
pop
dec
stos
add
jae
inc
and
or
imul
push
cmc
xchg
add
push
dec
or
ss
loop
or
xchg
mov
test
dec
jns
add
js
outsb
lds
mov
xchg
xchg
push
cwtl
int3
pop
push
loope
add
jge
ja
dec
fiaddl
pushf
sahf
out
mov
jp
or
outsb
loope
mov
subl
in
aaa
pop
dec
shll
inc
or
lea
mov
insl
xchg
push
movsl
push
mov
xor
dec
lods
shl
pop
sub
outsl
jp
in
and
pop
and
pop
add
icebp
repz
add
xor
pusha
lods
cmc
push
inc
lret
jns
stos
and
jae
sub
inc
xchg
mov
mov
sarl
cli
sarb
mov
mov
cmp
addb
push
rolb
insl
std
es
imul
pop
ljmp
xor
jle
mov
cmpsl
sbb
sbb
jecxz
or
test
add
call
mov
scas
fwait
cmp
xchg
push
inc
dec
mov
ljmp
rolb
inc
stc
arpl
or
push
pop
mov
clc
ret
out
inc
dec
push
int
mov
cli
in
jb
pop
ret
xchg
dec
jmpw
stos
inc
icebp
xchg
or
sub
clc
js
mov
jg
imul
or
mov
and
pop
arpl
arpl
or
jmp
push
ror
in
ficoml
dec
fsubl
and
test
dec
gs
arpl
xchg
push
adc
jge
outsb
mov
sbb
push
scas
outsl
push
rorb
or
pop
adc
push
push
testb
call
adc
hlt
xchg
adc
jb
addr16
xor
inc
aam
pandn
movsl
pop
stc
or
inc
loope
popa
int
add
popa
mov
cmpsl
sub
popf
js
dec
ds
mov
icebp
pop
call
or
mov
mov
and
or
cmp
pushf
or
out
xchg
aaa
orl
lea
scas
int
pop
cwtl
loopne
insb
int
fwait
out
fdivl
mov
bound
jg
enter
pop
or
xchg
cmp
stc
xchg
mov
in
aaa
xorl
inc
int3
fcmovbe
and
mov
sbb
xor
in
sbb
lock
xor
cmp
inc
mov
stc
pop
mov
shrb
mov
push
and
mov
mov
fistpl
clc
lahf
jbe
adc
pop
mov
add
hlt
in
jns
clc
cli
push
mov
push
jnp
icebp
lret
mov
lock
addr16
or
inc
ret
push
inc
dec
or
xor
shlb
mov
sar
sub
mov
je
xchg
imul
subb
ss
sub
mov
mov
push
inc
mov
xchg
fmuls
xchg
cmp
test
fldenv
inc
test
je
iret
dec
mov
fidivs
das
cmpsl
iret
sbb
sub
xor
aas
push
sub
jne
ja
jns
jmp
sub
call
lcall
pop
xlat
loope
inc
xor
into
mov
and
pop
imul
jne
insb
push
mulb
jge
sbb
aaa
sbb
inc
xor
push
dec
mov
jae
movsl
mov
punpckhdq
lret
inc
mov
lret
mov
mov
fcompl
fsubp
aad
popa
pop
push
inc
movsl
cmp
jp
repnz
add
mov
rcrb
aam
imul
lret
lock
push
mov
or
mov
push
out
adc
sbb
ret
and
incb
in
pop
cmpsb
sbb
sbb
int
ljmp
inc
shrl
push
jae
stos
iret
push
or
aam
aas
cmp
inc
ret
xor
lret
ret
incl
cmp
nop
adc
sahf
je
mov
xor
or
adc
dec
int
sbb
add
or
push
ds
xor
adc
notb
popf
shufps
sbb
outsb
xchg
xchg
mov
cmc
mov
aam
test
repnz
inc
cmp
fadd
out
mov
push
cwtl
out
lock
adc
adc
and
cmc
ja
jp
sub
adc
lea
xor
jl
lcall
adc
loop
rcl
inc
mov
xor
out
orl
jmp
xchg
clc
jmp
cmp
dec
or
and
rcll
jge
and
in
adc
xorb
push
std
xchg
ret
cli
test
mov
cwtl
arpl
aad
pop
movsl
push
xchg
jne
leave
sbb
aas
sbb
ret
aaa
mov
repz
sub
addb
adc
xor
stc
push
dec
scas
jle
incb
adc
insl
mov
fmuls
aaa
or
mov
fcompl
sbb
adc
orl
aam
add
push
cmpsl
cmpsl
in
sub
mov
movsb
jns
lock
pop
xchg
jl
mov
std
and
cmp
daa
test
xchg
insl
ss
outsb
and
andl
push
sbb
xchg
lods
push
mov
inc
or
ret
cmp
int
jbe
mov
sub
mov
test
mov
and
sbb
sbb
sahf
cwtl
ret
fimuls
repz
jbe
and
orb
ret
pop
out
adc
push
adc
and
xchg
and
lea
imul
xor
popf
jmp
mov
scas
xor
xchg
sbb
xchg
cld
or
xchg
addr16
ja
sbb
xor
outsl
nop
jno
aaa
add
das
pusha
mov
sub
jg
add
adc
xor
sub
pop
push
popa
xchg
cmc
out
sbb
insl
inc
ljmp
xchg
adc
push
xchg
mov
dec
push
jp
stos
stc
in
jg
popf
les
lahf
orps
xchg
les
jg
adc
jae
push
jo
add
test
imul
enter
sbb
clc
dec
fiadds
push
adc
mov
mov
xchg
inc
icebp
cmp
cmp
jne
pushf
aam
mov
cmc
cli
movsb
push
jmp
push
addr16
sub
dec
push
shrb
jns
inc
or
xlat
cmc
xchg
pusha
cmp
addb
push
mov
xor
lret
ret
lret
jl
push
mov
sub
iret
xor
ret
daa
jp
hlt
lds
ret
lret
dec
push
lahf
xchg
push
jmp
pop
repnz
mov
out
pushf
in
shlb
pop
push
dec
mov
movsl
repnz
cmp
hlt
push
jae,pt
jp
out
pop
in
inc
ljmp
pop
pushf
jge,pn
mov
pop
in
and
mov
jp
inc
mov
jb
mov
push
mov
sub
ss
arpl
int
mov
pop
dec
popa
or
arpl
xor
test
fidivs
rclb
cs
fdivrl
sub
push
inc
inc
mov
push
pop
inc
dec
cltd
or
jl
adc
xchg
push
aad
cmp
mov
ret
inc
sahf
fiadds
lea
and
aam
aad
outsb
int3
stc
movsl
xor
inc
cld
ror
dec
xlat
movsl
jmp
xor
shlb
cmpb
pop
lods
sub
mov
dec
into
aaa
movsl
sbb
aas
jb
pop
fwait
jbe
fcompl
popf
push
scas
sbb
pop
xchg
es
iret
ja
xchg
mov
push
push
mov
aas
pop
pop
jle
mov
push
jle
test
lahf
xor
mov
bound
stos
ret
add
jg
out
ljmp
sbb
adc
gs
mov
sbb
fwait
dec
sub
jb
jnp
xchg
pop
xor
pop
push
jl
popf
fidivrs
cmpsl
sub
push
pop
cmp
xchg
pushaw
sbb
jns
das
aad
xor
lock
jle
adc
ret
cmp
loope
mov
xchg
stc
mov
push
ds
pop
mov
push
mov
notl
rorl
pusha
jne
fwait
sbb
sub
les
pusha
movsl
jmp
mov
mov
jp
push
adc
mov
cltd
mov
test
adcb
bound
lock
pushf
push
pop
aaa
xor
std
ret
in
xlat
xchg
sti
adc
mov
xor
xor
push
or
cmpsl
dec
in
cmpsl
cmp
xor
inc
xchg
inc
hlt
sti
cmc
stos
jge
insb
div
outsl
dec
shlb
pop
sub
mov
sti
pop
xor
sahf
and
xor
or
cmp
lods
cmp
mov
and
out
lret
shlb
adc
and
mov
sub
aam
arpl
mull
dec
inc
cmp
es
aam
fmuls
gs
les
mov
lock
xchg
mov
mov
les
fcom
push
dec
hlt
pop
test
ljmp
cmp
rcrl
adcl
insb
mov
into
lret
mov
or
mov
add
push
jg
ljmp
pop
aaa
jge
imul
pushf
dec
aad
movsb
and
ds
sub
setp
out
test
lret
out
ret
aaa
add
insl
cmp
pop
or
insl
data16
push
sub
xor
mov
pop
negl
enter
enter
and
inc
lods
fdivrl
or
push
push
mov
dec
rcll
fiaddl
fsubrl
scas
ds
and
inc
les
jo
sarb
pop
xlat
jl
mov
sti
mov
insl
mov
scas
jmpw
push
xchg
cwtl
fsubrs
pop
adc
test
push
jmp
sub
mov
lea
mov
sbb
pop
aaa
rclb
push
add
ljmp
pop
mov
clc
fdivrl
mov
mov
mov
pop
cmp
xchg
clc
loopne
sbb
popf
scas
jle
jno
gs
push
adc
faddl
mov
cmp
mov
mov
mov
iret
cmp
xchg
push
xlat
adc
add
mov
dec
movsb
sbbl
xor
or
mov
mov
cltd
xor
inc
and
dec
jno
outsb
push
mov
jle
push
inc
movsb
shll
fcomps
mov
xor
mov
iret
lret
es
decl
jbe
xchg
jg
cmp
bound
inc
mov
push
mov
idivb
mov
je
int
movsl
pop
data16
cmc
sbb
faddl
iret
ss
inc
fucom
ljmp
and
sti
push
js,pt
scas
daa
clc
gs
add
xor
mov
stos
jmp
push
test
xchg
repnz
das
popa
leave
outsb
dec
xor
imul
mov
les
mov
into
inc
lea
and
xor
cmp
aaa
dec
popa
xchg
leave
xlat
clc
jae
lret
fcomps
mov
aam
out
jne
pop
add
aaa
pop
jno
jno
push
ljmp
adc
test
repnz
stos
cmp
test
orb
push
sub
into
in
cmp
stos
mov
adc
adc
cs
and
loopne
repnz
lret
add
xor
mov
into
mov
inc
sub
test
rcll
adc
in
sub
pop
mov
mov
xchg
call
fnsave
nop
out
xchg
push
or
pop
dec
pop
pop
xchg
mov
inc
jmp
cmp
movl
sub
cmp
adc
mov
sbb
imul
aas
mov
jmp
cmp
je
sti
rcrb
mov
push
cmpsb
and
mov
and
inc
push
cmpsl
cmp
or
push
add
jbe
mov
or
pop
adc
adc
sarl
decl
lcall
dec
jecxz
repnz
fadds
in
ret
repz
andb
negb
jmp
loop
loope
je
outsl
ja
jl
cld
sbb
push
inc
adcl
dec
pusha
call
add
dec
adc
fwait
inc
in
jmp
jae
test
cmpsb
pop
xor
adc
pop
adc
in
dec
fbstp
push
jp
adc
out
mov
push
pop
imul
jne
cmova
sub
bound
sti
sub
jmp
orb
xor
add
repnz
stos
inc
or
xchg
push
mov
xchg
sahf
int3
or
popf
repz
pushf
mov
mov
mov
dec
and
cmp
or
test
add
pop
popf
sbb
sbb
cmpsl
fsubl
ret
xchg
mov
mov
in
into
mov
inc
pusha
push
ret
adc
lret
idivb
xchg
push
push
js
dec
repnz
ror
movsl
push
test
out
orb
push
lahf
push
lods
add
lods
jbe
mov
fistpll
pop
sbb
out
popa
roll
pusha
or
and
or
xchg
lret
cs
and
inc
mov
lcall
inc
fwait
mov
fldcw
push
mull
mov
mov
cmpsl
pop
movb
add
xchg
test
or
dec
insb
fdivs
inc
imul
popa
not
es
mov
cmp
bound
subb
lods
push
dec
dec
shlb
test
push
popf
std
imul
jg
insl
aas
pop
jb
adc
ss
dec
adc
rcl
imul
cmp
rclb
push
lock
insb
popf
je
subl
mov
xor
in
lret
outsl
ljmp
cmp
xchg
push
xor
fisttpll
lods
ror
jb
ret
jnp
fwait
mov
adc
add
xchg
xor
sarl
dec
lods
imul
mov
cmpsl
cmp
mov
icebp
cmp
addr16
cmp
movsb
jl
sub
pop
xchg
js
or
lds
aas
scas
fs
push
and
data16
xchg
fld1
into
pop
dec
xchg
movb
lods
clc
test
movsb
loopne
mov
lahf
mov
sbb
inc
sar
outsb
cmpsl
fisubrl
ret
pop
adc
pushf
adc
adc
jae
insl
aas
sub
in
inc
repz
sbb
test
out
vmread
mov
add
les
xchg
mov
imul
sbb
fucomip
fwait
jbe
mov
jnp
xor
adc
mov
push
in
int
testb
push
pop
fiaddl
mov
xchg
cmpsb
out
add
insl
xchg
dec
repz
outsb
mov
nop
xchg
aad
outsl
push
out
push
aas
call
loope
loop
ljmp
mov
jnp
in
add
pop
popf
test
dec
lret
hlt
xchg
mov
idivl
dec
add
mov
addr16
xchg
jns
jae
js
sub
loopne
addr16
or
jno
and
lods
mov
aad
rcll
rol
std
notb
pop
and
mov
ljmp
movsl
and
dec
sahf
pop
daa
inc
add
pop
mov
dec
fistps
lret
mov
pusha
xchg
addl
fsubrl
in
aad
orl
into
cli
cmp
inc
setg
aaa
and
jne
repz
adc
inc
addl
dec
inc
cmc
pop
cmp
pop
gs
mov
out
outsl
into
insl
sub
insb
popf
clc
xchg
push
add
push
test
mov
test
into
mov
movsb
imul
in
xchg
jg
inc
aaa
sub
in
jmp
and
sub
cmp
test
dec
mov
les
je
pop
stos
add
js
jp
addr16
gs
push
lahf
and
iret
cmp
jo
mov
and
inc
mov
lds
jae,pt
loopne
adc
or
cmp
test
andl
xor
std
fstpt
xchg
out
out
add
sarb
in
loope
dec
fldenv
and
pop
stc
repnz
xor
insb
stos
mov
cmpsl
cmpsb
push
add
lahf
push
cmp
dec
enter
push
nop
xchg
int3
popa
or
sub
mov
idivl
outsl
pusha
in
mov
cwtl
inc
into
bound
cmp
push
pop
adc
xor
push
outsl
cmc
loop
mov
inc
sahf
adc
pop
mov
inc
or
lea
out
std
scas
xchg
and
nop
js
mov
rcl
out
lds
into
ss
and
mov
iret
jge
ja
mov
test
push
scas
adc
cmp
jae
and
cltd
sbb
xchg
push
insl
cmp
ljmp
sbb
xchg
pop
sbb
loop
icebp
adc
lahf
sbb
push
jl
inc
js
add
insl
fdivl
imulb
mov
movsb
sarb
pusha
mov
ret
push
jo
jge
sub
ror
int
stc
fmul
pop
ret
xorl
or
dec
lcall
pushf
pop
mov
mov
pop
cmp
mov
dec
xchg
mov
out
jge
insl
mov
test
mov
jl
mov
nop
jne
push
mov
cmp
lret
je
outsl
std
cld
repz
mov
or
out
faddl
jo
cli
js
es
push
dec
sub
pop
daa
and
pop
in
cmp
xchg
sahf
or
push
aad
pop
lret
adc
dec
aad
stos
xchg
fstps
into
mov
and
cmp
sti
fildll
test
int3
rorb
lret
xchg
push
xchg
mov
sub
orb
sbb
or
adc
out
pop
mov
ja
pop
and
inc
roll
test
cmp
inc
mov
xchg
daa
lea
mov
cmp
dec
icebp
jbe
cmp
or
sbb
xchg
pop
jb
repnz
mulb
sbb
jb
hlt
sub
fnsave
mov
fistpl
push
pop
mov
ret
xchg
insb
adc
mov
and
imul
ret
in
fisubs
jmp
es
int
ss
push
sarb
les
xchg
cli
aaa
jae
adc
jecxz
mov
bnd
dec
out
push
cltd
jno
test
cmp
jl
mov
cld
rcrb
xchg
lds
mov
das
pop
out
fists
loop
nop
xchg
outsb
cmc
subb
filds
xchg
cmp
inc
xor
lcall
ja
sub
test
dec
aas
xor
jnp
mov
ret
or
jb
pusha
fldcw
sub
pop
mov
add
inc
das
cmp
pop
jo,pn
sbb
sbb
sbb
shll
sbb
sub
jns
dec
push
stos
dec
ss
js
inc
push
xchg
or
xchg
jmp
ss
loopne
xchg
xchg
dec
push
inc
sbb
fmull
or
or
mov
int3
push
sub
ret
negb
adcl
fstl
sub
sbb
mov
jnp
jns
psrlq
popa
push
jmp
lods
add
mov
fnsave
xchg
mov
ficomps
cltd
add
and
xor
aaa
rorb
mov
xchg
dec
jmp
xlat
test
inc
fimull
mov
cmp
fisubrs
fmull
sti
dec
lock
mov
insb
rcrl
xchg
or
dec
out
xchg
ds
cmp
arpl
data16
jns
push
inc
adc
jle
add
leave
out
dec
or
mov
sub
or
data16
negb
lahf
lods
lods
mov
jns
cmpsl
icebp
imul
inc
push
sub
popf
and
pop
push
add
insb
cmpb
leave
jmp
sub
push
pop
out
xor
test
jl
adc
sbb
popa
rsm
popl
notl
fdivr
add
cmp
or
repnz
push
jne
daa
mov
mov
cmp
pop
adc
or
and
add
fisttps
fs
int3
rclb
stos
les
mov
mov
loope
xor
into
mov
sub
shlb
xchg
divb
incb
gs
or
inc
sbb
xchg
cmpl
pop
pop
dec
in
dec
mov
xchg
cmc
daa
lret
mov
inc
out
dec
sub
and
adcb
test
mov
inc
cli
test
call
push
push
pop
jne
xor
call
mov
test
or
iret
rorl
stos
cmc
push
xchg
call
test
stos
push
lea
fisubs
bndstx
orb
aad
iret
repnz
enter
jge
push
xor
or
sti
insb
xchg
je
int3
push
xor
in
fsubrp
jp
aad
pop
pusha
pop
in
in
movl
cltd
add
xlat
orb
test
push
sbb
sub
push
and
or
push
rcr
add
mov
or
pop
aam
scas
je
cmpsl
sub
lret
cmpsl
cs
aam
test
adc
jne
or
repnz
std
adc
push
das
mov
in
jp
sbb
or
aad
lods
outsl
int3
pop
arpl
dec
frstor
add
mov
enter
ficomps
or
lret
bound
add
fs
popa
jl
ret
xorb
inc
fistps
xor
sbb
ja
push
push
xchg
xchg
in
andb
xor
aas
lods
je
mov
into
in
dec
sbb
cmp
sub
xor
dec
lret
jecxz
and
pop
mov
or
rcrb
xor
movsb
lcall
repz
pop
out
fnstsw
popa
stos
iret
jne
ds
arpl
js
xor
lds
aas
xchg
xchg
mov
dec
cwtl
arpl
scas
daa
xchg
subl
cmp
leave
shlb
adc
stos
loop
loopne
fs
mov
fcmovnbe
mov
mov
shlb
ljmp
cmp
enter
mov
fisttpll
cli
inc
lods
mov
sbb
xor
lock
cld
xchg
adc
test
stc
inc
test
ljmp
adc
mov
jl
dec
bound
mov
lock
stos
add
and
cmp
jne
cwtl
incb
outsl
push
in
add
inc
xchg
cwtl
jg
in
and
and
mov
shl
ja
cmc
pop
dec
mov
fiaddl
mov
dec
cli
mov
arpl
and
pop
add
mov
ret
mov
scas
in
ret
mov
sar
repz
lahf
popa
push
jmp
ds
aas
sahf
fnstenv
lret
xor
inc
pushf
cmp
pop
inc
mov
stos
es
jns
stos
or
std
inc
pushf
or
aam
xor
loope
dec
add
or
jns
fdivp
mov
push
adc
sahf
dec
ret
mov
out
mov
out
dec
shl
outsb
xor
dec
pop
js
mov
mov
into
data16
pop
call
add
jecxz
or
mov
pop
idivl
sar
or
iret
mov
sbb
inc
clc
scas
clc
cmp
lret
xchg
adc
lret
jb
lea
test
insl
stc
or
mov
test
lds
lret
loope
es
int3
jecxz
aad
xlat
sub
aam
adc
repnz
pop
mov
lret
push
hlt
rclb
adcb
adc
inc
jno
ficompl
pop
loopne
inc
cmp
or
and
mov
jp
std
mov
das
stos
inc
mov
fbld
int3
outsl
rclb
fidivrs
mov
mov
mov
ss
sbb
mov
cltd
cli
xchg
mov
hlt
dec
lret
xchg
inc
popa
sbb
pop
mov
or
ja
xchg
jmp
add
mov
cmp
adc
xor
and
js
imul
lds
je
sub
cmc
ja
js
cld
data16
add
mov
and
into
scas
loopne
push
inc
mov
rolb
xchg
cld
mov
adc
insl
xchg
mov
push
adc
cmp
pop
adc
pop
fdivl
inc
push
pop
adc
enter
pop
sbb
enter
dec
jno
ficoms
loop
xchg
stos
stos
push
insb
inc
aam
mov
add
sub
lds
pop
les
and
pop
roll
mov
adc
sub
test
jnp
out
xor
outsl
ja
jl
in
lret
stos
out
divb
ss
icebp
or
or
sahf
mov
adc
aam
cmp
push
dec
xchg
xor
mov
les
add
push
jmp
faddl
adc
fiaddl
or
shll
fnstsw
cmp
fwait
sub
push
test
ss
push
addr16
lods
xchg
shrb
sbb
jmp
fs
pop
icebp
in
adc
push
jge
push
mov
ja
stos
xchg
push
imul
add
or
mov
iret
stos
mov
mov
push
das
repnz
stc
ja
into
push
ljmp
mov
movsb
jns
and
dec
fldcw
test
pop
pop
xor
fsts
fisttpl
sahf
jg
repz
mov
xlat
push
ret
sahf
jg
adc
push
xchg
add
mov
and
mov
repnz
sti
mov
in
and
sbb
jne
insb
out
inc
inc
rcrb
mov
out
jle
lret
mov
cmp
cmp
or
arpl
idivb
cmp
aaa
lret
jnp
aam
sbb
or
ljmp
xor
in
fmuls
ds
rol
rcrb
repz
cmp
sub
cltd
push
or
lock
xor
mov
arpl
mov
cmpsl
push
sub
add
or
jnp
gs
cmc
inc
or
push
or
stos
jb
or
imul
and
sub
pop
add
add
daa
lods
je
jmp
add
lods
xor
scas
pop
cmp
cmp
icebp
test
pop
icebp
cmp
pushf
scas
jmp
into
lea
xchg
sti
or
add
imul
push
imul
pusha
mov
mov
jnp
pop
nop
rcl
adc
test
xchg
pop
out
into
inc
loopne
xchg
int
jl
ret
imul
cmp
imul
sub
xchg
push
or
int3
jbe
js
dec
dec
pushf
xchg
cmp
loop
shrl
push
inc
fstl
movsb
dec
mov
pop
into
sbb
jb
lret
test
sub
cli
xchg
mov
push
sub
xchg
jmp
jg
mov
je
xchg
scas
jmp
push
mov
repz
jne
in
jno
das
aas
mov
movsl
mov
xor
or
mov
das
scas
pop
or
adc
mov
push
je
inc
fsubl
dec
add
push
jnp
sub
cmc
cmp
das
or
push
divl
pop
lds
push
xor
dec
mov
mov
inc
lods
or
sbb
sbb
mov
inc
or
fstpl
adc
push
test
xchg
test
imul
mov
inc
test
ss
xchg
aas
xor
and
cmp
in
sbb
fsubr
lea
popa
cmpl
dec
sbb
mov
ss
dec
andb
popa
sarl
das
movsb
imul
dec
loop
ja
out
mov
mov
shrb
cltd
dec
sub
jl
push
fstps
adc
test
push
or
add
cmp
lea
addr16
jbe
clc
lahf
push
popa
pop
sbb
gs
add
lds
outsl
pop
adc
lds
pop
in
jl
in
repz
xchg
mov
xchg
rorb
add
push
pop
and
cmc
into
mul
xchg
ljmp
mov
sub
int3
aas
popa
adc
loop
jno
xor
push
in
jl
gs
incl
mov
add
inc
cmc
andl
pop
jge
ret
scas
sbb
loopne
pop
sub
ss
mov
scas
xchg
mov
mov
fdivs
push
cmc
adc
xor
imul
cmp
cmp
xor
xchg
or
add
data16
cmp
push
adc
in
push
mov
orb
inc
xchg
adc
add
push
movsb
mov
cwtl
rcrb
addr16
adc
xor
loopne
test
iret
dec
xchg
shll
into
jmp
arpl
sub
dec
jb
push
es
lods
pop
cli
xor
stos
dec
out
psrad
lahf
xchg
xchg
ficoml
scas
test
mov
push
popl
aam
jmp
jno
mov
sahf
shrl
iret
stos
add
leave
repz
lret
sbb
aam
fwait
push
lcall
mov
movsb
scas
int3
outsb
inc
ljmp
inc
or
shrl
mov
jae
xchg
xchg
bnd
mov
sbb
loop
mov
addl
into
loop
es
subl
les
sub
push
mov
inc
sbb
push
scas
dec
and
mov
in
sub
stos
inc
aas
pop
ficomps
push
mov
orb
xor
mov
dec
or
sbbb
cmp
test
add
inc
xchg
stos
inc
sbb
mov
pop
data16
and
in
ret
push
movsl
dec
pop
shrl
orb
mov
stos
rolb
xor
jns
nop
ret
loopne
sbb
pop
jp
out
cmpsl
cmp
cli
sub
pusha
dec
cmc
push
sbb
clc
movsb
push
pop
daa
inc
les
mov
out
or
jno
xlat
lock
jmp
int
xchg
xchg
mov
push
hlt
push
rorl
mov
es
bound
mov
repz
and
ljmp
sub
aas
mov
fcomi
sbb
sub
ret
sbb
lret
fadds
cmc
mov
out
add
repnz
jl
jmp
icebp
stc
mov
cmp
dec
push
pop
mov
mov
cmp
lods
dec
loope
sub
pop
incb
sub
push
sub
push
cmp
xor
shrb
insb
fsubp
cltd
int
mov
fsts
std
dec
cmp
ret
bound
dec
push
pop
push
mov
push
cmpsl
movsl
mov
mov
push
stos
xlat
sbb
sbb
sti
adc
cmp
out
xchg
push
aaa
cld
cmp
data16
lock
insl
jbe
ss
fisttpll
adc
push
dec
xchg
cmp
mov
or
stos
mov
iret
cmpsb
in
mov
icebp
fucomip
daa
inc
jo
or
dec
inc
bound
jno
lret
aaa
fldenv
xor
outsl
ja
jecxz
pusha
mov
xchg
clc
push
mov
cmp
xchg
xor
lret
xchg
pop
jg
loop
cwtl
testl
jl
jbe
sub
mov
add
push
pop
push
testb
xchg
add
mov
lret
sub
xchg
into
insb
test
or
mov
ffreep
fisttpl
push
jecxz
push
push
cmp
rsqrtps
mov
aad
or
pop
movsl
jns
add
and
sbb
jo
cmp
sbb
fdivl
cmp
push
cltd
adc
jge
rorb
out
and
call
inc
push
dec
and
mov
dec
je
jle
fidivs
cmpsl
xor
imul
jae
mov
aad
mov
push
inc
mov
mov
aas
sbb
test
jg
xchg
jge
mulb
push
pop
push
mov
aad
sbb
fwait
aaa
cmp
cmp
hlt
or
inc
adc
jge
or
pop
jne
mov
mov
nop
push
xchg
or
cmpsl
cmpsb
push
clc
mov
repz
and
pop
jb
push
xor
sub
pop
je
mov
popa
iret
mov
mov
mov
sub
movsl
fistpl
fs
push
jle
repz
sub
data16
decb
mov
jae
or
push
mov
cmp
cs
xchg
movsb
and
inc
addr16
push
fwait
stos
mov
or
jge
sbb
mov
lahf
nop
ret
xchg
adc
sub
loope
int3
pop
fmulp
iret
cmp
out
in
cld
lahf
pop
jne
push
add
jbe
lods
je
xor
mov
in
sub
xor
jae
mov
jle
sub
ds
push
mov
mov
add
cmp
loop
jbe
mov
loope
sub
and
inc
in
test
inc
jno
aam
imul
dec
jg
sub
xor
sub
inc
sbb
or
or
bound
inc
scas
loope
daa
dec
pushf
adc
js
inc
jae
add
and
push
je
loop
cld
insl
int3
stc
push
ret
jo
addr16
fimuls
pop
and
pushf
subl
xor
shrb
xchg
inc
mov
pusha
cmpsb
lds
das
imul
mov
ja
int
add
arpl
or
lahf
inc
and
xchg
push
incl
scas
hlt
daa
and
jne
insb
in
das
cwtl
sti
and
sub
iret
push
fbstp
orl
jl
dec
mov
push
fcmovnu
inc
xlat
and
loop
loope
les
sub
in
das
sbb
data16
push
and
fsubs
or
xor
insb
lea
js
inc
mov
mov
loop
sbb
fisttpll
cs
movsb
push
inc
in
xor
in
lret
in
cmp
cmp
roll
jbe
leave
repnz
or
xchg
data16
adcb
and
xor
data16
shll
cs
add
out
movsl
cld
jp
or
fdivrl
cwtl
rclb
dec
loopne
test
push
cmp
and
out
push
pop
aad
or
pop
cmp
xor
jl
mov
mov
push
jmp
mov
adc
pop
jge
pushf
je
pop
sarb
stos
push
xchg
int
jg
mov
mov
add
push
into
mov
push
fs
in
push
in
sub
mov
stc
add
jecxz
dec
je
mov
jl
pop
insb
jge
fs
lods
arpl
repz
or
ljmp
add
fmull
jo
dec
bound
mov
and
scas
mov
inc
les
icebp
test
inc
dec
scas
repz
popl
in
rorl
jns
fucomi
mov
addr16
sub
jp
inc
mov
rcl
jp
mov
jne
jl
orl
leave
int
js
fwait
inc
pop
pusha
sub
mov
loopne
ss
jge
adc
cmpsl
mov
ljmp
push
xlat
jle
leave
jmp
mov
or
stc
stos
in
stos
xor
aas
fisubs
xor
test
fsubrp
inc
call
push
cltd
xor
mov
and
je
enter
inc
jmp
and
sub
xchg
sub
ljmp
notl
test
es
cli
jp
ret
sub
pusha
in
push
fidivrl
push
xor
adc
stc
push
dec
aad
nop
lods
cli
sbb
movsb
sti
aaa
andl
popf
add
or
dec
mov
out
mov
test
sahf
inc
add
add
sub
cmp
fwait
xor
fdivrl
loop
pop
bound
inc
jnp
fstp
cmp
pop
adc
or
jle
lret
mov
data16
test
cmovbe
arpl
lock
subb
es
into
push
inc
rorl
adc
mov
xchg
jo
cmc
lods
and
and
xorb
lcall
cmp
jbe
add
test
mov
pop
stos
inc
stc
daa
in
sbb
xchg
xchg
add
mov
cmp
adc
and
xor
cmpsb
sub
add
int
and
fwait
pop
sbb
dec
dec
test
sub
in
in
icebp
iret
sbb
jmp
es
pusha
outsl
stc
push
adc
icebp
leave
sub
pusha
push
sub
push
push
adc
add
adcb
pop
dec
rclb
sub
dec
mulb
cmpsl
cmp
lock
or
adc
xchg
movsl
jnp
cli
cmp
inc
cwtl
mov
push
xor
into
mov
les
sahf
into
popf
sbbb
daa
dec
push
repz
sbb
xchg
add
ficoms
movsl
out
pop
add
sbb
ss
xchg
clc
lcall
cmp
push
js
xchg
mov
dec
aad
lea
push
lahf
xlat
cwtl
outsl
xchg
bound
popf
fistpl
aas
xor
push
iret
fdivp
or
pop
pop
cs
pop
inc
sub
fld
inc
mov
cmpsb
in
pop
dec
in
in
pop
std
or
ja
add
push
pushf
lret
xchg
fsubr
pop
mov
nop
loope
faddl
jno
inc
in
fucomp
cmp
les
out
cmp
cmp
je
outsl
push
gs
movsbl
imul
scas
mov
test
jge,pn
loopne
out
and
sbb
cmpsb
inc
sti
scas
add
cld
push
sahf
inc
ret
sbb
int
aad
icebp
add
adc
iret
push
imul
sbb
push
cvttps2pi
xchg
in
add
cmp
pushl
mul
cmc
sub
lods
push
sub
fwait
add
adc
xor
out
sarl
aam
cld
test
std
jle
jb
icebp
xchg
add
sub
or
mov
fildl
leave
mov
out
sub
adc
lods
std
loope,pt
lods
mov
inc
adc
aam
mov
and
inc
push
dec
lahf
mov
dec
xchg
sub
xor
pop
in
in
arpl
cli
push
mov
mov
xor
push
test
repnz
adc
mov
cmp
inc
clc
loop
ljmp
sbb
pop
and
xchg
mov
mull
xchg
mov
fwait
add
pop
popa
add
out
cmpsl
popa
mov
aam
pop
sti
mov
icebp
test
inc
jge
jbe
sub
in
xor
sbb
das
int3
out
les
inc
cmp
dec
insb
push
xor
lods
jg
cmp
mov
jl
lahf
cmpsl
in
or
test
nop
add
pushf
sbb
xlat
mov
jp,pt
js
pop
inc
stos
sbb
xor
push
jl
call
jle
xchg
fbld
mov
mov
xlat
or
cmp
mov
lahf
ret
sub
pop
pop
cmpl
pop
lret
icebp
lock
or
int3
leave
mov
gs
mov
cmp
test
fsubrl
fstl
push
test
ret
mov
inc
sbb
jecxz
sbb
imul
pop
inc
ja
les
lds
push
mov
pop
mov
jp
sbb
clc
outsb
sub
mov
inc
dec
xor
mov
dec
jae
xchg
sahf
cmp
adc
call
jne
pushf
pushf
mov
pop
lock
lcall
add
mov
cwtl
push
ficomps
iret
inc
insb
sarl
mulb
ss
pop
inc
push
dec
imul
jb
out
or
push
js
movsl
cmp
xorl
xchg
int3
pop
sub
jmp
cmp
icebp
dec
xor
nop
mov
push
dec
sub
loop
pusha
push
and
jl
and
and
mov
enter
push
mov
fdivrl
mov
jmp
lret
xor
push
push
test
out
xor
aaa
mov
test
push
ret
sub
xor
push
jmp
loopne
sbb
xchg
pop
addb
jno
add
cwtl
mov
imul
mov
dec
mov
xor
test
fpatan
jg
ret
adc
xchg
mov
pop
nop
mov
and
jp
sbb
lods
jp
in
jns
adc
pop
imul
xorl
mov
mov
outsb
add
mov
inc
mov
cmpsb
mov
mov
pop
push
popf
mov
xchg
sbb
mov
or
outsb
lock
ret
lret
aad
xchg
mov
mov
popa
jnp
mov
fcomi
mov
add
sub
inc
lcall
cwtl
pop
and
mov
mov
dec
add
add
mov
dec
sbb
mov
and
icebp
push
fdivs
jns
inc
xchg
xor
xorb
dec
and
movsb
cmp
fld
mov
push
sub
mov
adc
sbb
ljmp
test
fs
popf
push
cmp
rolb
jle
mov
push
pop
out
inc
rcrl
insl
add
sarb
add
add
into
loop
xchg
xchg
xchg
out
in
leave
or
xor
xor
test
xchg
outsb
pop
out
in
jnp
in
mov
xchg
xchg
add
sbb
push
ret
pop
sbb
sub
push
sub
cli
sahf
sub
push
jle
inc
adc
lods
aam
pop
jmp
inc
ljmp
inc
cmp
call
inc
sarl
xor
jge
int3
leave
mov
push
sarl
dec
nop
imul
dec
daa
mov
mov
pop
in
mov
mov
andl
mov
add
fcoms
xchg
pop
inc
adc
dec
push
into
and
and
leave
mov
fs
ss
or
cmp
rorl
roll
add
je
cwtl
inc
lock
ret
aam
jmp
iret
adc
lods
lea
push
jmp
out
adcl
push
rorb
ja
out
fldenv
pop
icebp
mov
and
test
add
sub
lret
stos
push
dec
icebp
jne
hlt
pushf
sub
pop
clc
movsl
mov
mov
add
or
adc
xor
ja
lea
push
shr
sbb
pop
xchg
push
dec
mov
fldl
into
xchg
lcall
gs
dec
enter
or
mov
adc
iret
les
scas
das
adc
loope
pusha
push
xchg
pop
test
inc
iret
roll
add
int
xor
fiadds
mov
loop
sarl
push
call
mov
repz
adc
push
leave
dec
mov
loopne
mov
mov
out
add
inc
lret
mov
push
call
call
add
je
icebp
lret
dec
int3
xor
or
push
lcall
push
jle
sysexit
cmp
add
fdiv
mov
inc
out
mov
outsb
xchg
rolb
test
mov
cmp
jl
pusha
jne
or
lahf
pop
inc
mov
jge
sbb
cmp
or
out
add
mov
xchg
mov
push
push
jle
test
out
mov
sahf
insb
push
addr16
mov
sbb
into
cltd
xor
cmp
scas
and
xor
hlt
mov
sub
inc
aad
sbb
in
pop
push
iret
mov
pop
gs
ss
loop
add
lods
cmpsl
jbe
ljmp
adc
dec
adc
das
in
or
mov
sub
shrl
xchg
inc
ljmp
and
mov
mov
fimull
cs
cmpsl
into
push
pop
loop
push
lret
xchg
add
fsubr
jo
daa
mov
jg
cld
test
jne
mov
fldcw
in
idiv
push
push
pop
shll
pushf
divl
dec
mov
cmp
mov
call
sbb
mov
pop
and
jo
div
add
xor
rorb
lds
xorl
data16
and
mov
sub
scas
in
daa
ror
cmp
jo
or
dec
add
dec
shlb
stos
cmp
dec
push
inc
mov
lods
arpl
jp
cmp
jne
imul
test
in
cmp
inc
ja
mov
inc
fbstp
push
push
mov
jne
cmp
or
mov
sbb
jle
pop
cmp
dec
inc
push
xor
ljmp
dec
xor
add
jbe
popf
aas
repnz
test
push
push
inc
jbe
fistpl
mov
sub
test
les
sbb
test
sbb
push
stc
mov
dec
clc
cmp
jbe
mov
mov
and
mov
sub
cmp
cmp
and
add
sub
fldt
in
mov
loope
mov
adc
or
pop
inc
rcrb
inc
aad
mov
xor
inc
out
cmc
or
fscale
shl
mov
pop
xor
lock
clc
dec
cmpsb
lock
sbb
rorl
scas
loop
ret
xchg
popa
mov
jo
mov
push
ja
es
inc
imul
test
sbb
aas
adc
loopne
imul
or
xor
ret
in
xchg
dec
or
jne
bound
mov
pusha
fdivl
jb
jp
pop
sbb
repnz
inc
in
inc
or
call
iret
rclb
mov
cld
stos
into
xor
mov
mov
int
clc
rcl
xchg
shrl
mov
sbb
jecxz
add
int
or
imul
mov
mov
sub
pop
xchg
sub
jg
add
in
rorl
bound
add
mov
mov
inc
out
sub
insl
in
sub
lods
pop
sti
xorl
and
cmp
push
jge
sub
cmpsb
or
cmpl
out
sub
popfw
in
inc
jp
arpl
ss
xchg
cli
lcall
pop
sub
ret
lret
pop
fcmovbe
add
xchg
dec
into
pop
mov
pop
mov
daa
aaa
arpl
push
push
les
or
and
mov
dec
mov
out
sahf
xchg
cli
sbb
jmp
fwait
dec
add
rcr
pop
dec
call
daa
addr16
rorb
fcompl
sti
jmp
roll
les
xor
dec
rcrl
int3
cmp
ret
mov
lock
rorb
push
hlt
add
xor
mov
jo
repz
and
into
inc
push
insb
fistpl
idivl
nop
imul
jge
pop
sub
cmpsb
jge
scas
sbb
jns
outsb
add
push
push
shl
cwtl
loop
or
lds
mov
insb
in
decl
icebp
xor
dec
test
or
sbb
jle
cs
xor
and
inc
or
push
adc
stc
fnstenv
das
and
les
cmp
mov
imul
and
data16
and
lret
xchg
inc
out
lret
leave
push
out
add
cmpsl
and
int
leave
icebp
jne
ljmp
in
xor
in
push
xor
fnstcw
lcall
addr16
sub
inc
fnstcw
push
inc
je
dec
adc
inc
idivl
mov
arpl
adc
ds
pop
dec
sub
push
dec
xor
jg
jp
int
inc
mov
addb
shlb
add
dec
xor
mov
faddl
outsb
hlt
rorl
js
xchg
push
dec
mov
or
inc
out
push
pop
aam
jl
mov
fnstenv
jbe
pop
jge
faddl
or
xorl
sti
in
lods
cli
jae
mov
pop
mov
outsb
aas
ret
rcr
dec
xchg
inc
test
push
cmp
insb
inc
fadds
lods
and
mov
add
sbb
popf
cmp
fbld
in
inc
push
sub
or
mov
int3
xor
cmp
push
mov
popa
stos
mov
add
add
lret
jecxz
out
leave
inc
push
dec
call
inc
jmp
popa
add
lock
jecxz
out
dec
popf
into
subl
push
enter
jp
jns
push
repnz
jge
sbb
sub
cs
shrb
push
inc
loop
data16
push
fstpt
loopne
out
and
out
fbstp
jne
ret
jecxz
xor
xor
scas
imul
adc
fcmovne
nop
cmp
xor
lods
sahf
inc
mov
call
inc
pop
push
fs
cmc
hlt
and
push
cli
xchg
or
sbb
das
dec
dec
out
out
pusha
shrb
icebp
mov
xor
xor
push
leave
push
loope
mov
push
or
jecxz
cmc
mov
in
js
dec
rolb
subl
rorb
es
inc
mov
lods
push
xchg
inc
mov
mov
out
loop
fsub
jb
adc
mov
or
pop
roll
lea
xor
ja
js
rol
jns
xchg
sub
mov
into
mov
jp
orw
sbb
cmpsb
dec
sarl
enter
push
lea
mov
sub
jge
loope
ljmp
loop
xor
pop
pop
dec
cmp
mov
and
stc
lret
xor
push
pop
addr16
outsl
scas
insb
aaa
xchg
pop
xlat
inc
pop
jmp
pushf
lods
stos
inc
movsb
repz
cld
mov
fmull
imul
cmpsb
mov
jg
inc
je
pop
negb
inc
push
ss
loopne
or
sbb
sub
inc
je
mov
in
cmp
bound
jmp
icebp
out
add
into
sbb
cld
ja
or
cmp
mov
rorb
jle
je
in
ds
mov
pop
test
cmp
lods
mov
pop
jecxz
mov
loopne
scas
jge
jecxz
jge
mov
inc
xchg
pop
xor
out
xor
in
hlt
adc
mov
dec
push
mov
sbb
pop
and
mov
hlt
cs
jbe
jp
loopne
pop
ljmp
rorb
idiv
or
aas
sbb
mov
mov
hlt
push
add
aas
inc
push
xor
xchg
xlat
sarl
icebp
in
push
push
leave
mov
xor
in
jae
jns
sbb
and
pop
frstor
movsl
pop
and
jbe
rcrb
popf
mov
out
insl
ljmp
adcl
sahf
jge
xor
or
cmpsl
fidivl
cmp
xor
lock
dec
scas
roll
imul
push
cmp
xchg
icebp
mov
repnz
movsb
rol
gs
jle
stc
repnz
test
push
xchg
loopne
push
std
dec
fistps
or
jae
dec
push
inc
in
bnd
xchg
rcll
pop
inc
repz
add
mov
sbb
enter
sub
fmul
mov
lea
mov
xor
jp
cmp
cmp
out
jo
mov
je
imul
fstps
mulb
inc
ret
cli
jnp
xchg
lea
pop
sbb
pop
mov
mov
or
jmp
imul
sbb
lfs
int3
movsl
ret
sbb
push
addr16
push
xchg
cli
adc
xor
or
fsubrs
mov
pop
push
fxch
fldcw
adcb
stos
inc
orl
dec
mull
mov
enter
xor
jg
jmp
jmp
push
dec
pop
sbb
mov
mov
pusha
push
push
mov
mov
insb
add
mov
push
dec
push
pushf
sub
push
test
mov
shrb
pop
inc
dec
rorl
xchg
xchg
adc
fdivl
movsl
push
std
outsb
call
loopne
fs
out
and
xor
inc
popf
xlat
and
mov
jmp
scas
aas
ret
sbb
mov
xchg
adc
xchg
jne
cld
inc
mov
push
xchg
push
sbb
clc
scas
push
hlt
aaa
pop
sbbl
inc
sbb
addr16
xor
add
jbe
test
jl
ss
lret
mov
jbe
sbb
faddp
bound
pslld
jecxz
shl
inc
jae
jl
gs
testl
shrl
stc
fildl
mov
inc
mov
cmp
mov
push
pop
adc
xor
outsl
into
xchg
loope
dec
movsb
inc
push
dec
or
xchg
adc
dec
adcb
mov
inc
cmp
test
push
sahf
sbb
or
shrb
add
sub
pop
xor
sub
inc
jbe
gs
push
popa
mov
sbb
push
scas
inc
nop
clc
sub
int
lret
mov
outsb
mov
mov
cmp
dec
jbe
jbe
loop
call
mov
or
add
mov
imul
lods
icebp
jg
je
adc
add
jb
mov
inc
inc
xchg
pop
aad
adc
mov
lahf
and
or
std
xchg
adc
mov
movsb
call
xor
xchg
jle
shll
pop
xchg
add
stc
sbb
dec
sbb
mov
cwtl
out
or
insb
cwtl
dec
cli
jb
pop
imul
aaa
lods
mov
scas
jle
dec
ljmp
dec
inc
dec
add
add
cld
ret
mov
add
mov
jecxz
mul
push
adc
mov
xor
mov
iret
inc
push
lods
mov
dec
xchg
mov
or
jg
mov
xchg
roll
sarl
aad
repz
aam
push
stos
jae
out
mov
pop
sti
scas
std
adc
lea
hlt
mov
insb
stos
in
xor
in
lods
iret
jecxz
cmp
sarb
rcll
mov
outsb
mov
mov
fucomp
jo
daa
pop
rcr
dec
xor
mov
dec
jb
fnsetpm(287
mov
push
mov
ret
xorb
push
xchg
jno
dec
push
jmp
aad
stc
jnp
add
nop
rcll
sti
pop
mov
push
stos
xor
jle
push
insb
push
sahf
aas
mov
out
xor
hlt
aam
fwait
loope
daa
add
mov
mov
xor
cmc
into
test
incb
bound
and
movsl
std
pop
dec
jge
repz
jno
mov
push
hlt
icebp
mov
push
pop
dec
xchg
scas
out
xor
lock
pop
lock
pop
xor
sub
pop
frstor
fdivrs
push
lods
sarl
pop
mov
ret
in
cld
xchg
dec
bound
dec
ss
lahf
rcrb
add
pop
arpl
sub
pop
es
push
pop
jp
cmc
data16
repnz
mov
outsl
loope
or
fildll
movq
and
jp
rcll
inc
fsubrl
xor
lock
and
pop
dec
mov
test
jb
testb
insb
or
mov
push
xchg
loope
xchg
or
les
out
mov
ret
push
popa
test
ss
ret
stos
in
arpl
inc
repz
fdivrl
xchg
jo
pop
xchg
push
cmp
ds
in
outsb
sub
mov
outsl
repnz
rol
push
lock
cmp
mov
js
push
pop
pop
clc
jo
dec
xchg
jl
arpl
mov
imul
sbb
adc
cmp
mov
sub
add
jg
fmuls
push
hlt
push
or
orl
and
cld
xlat
adc
add
push
in
out
add
adc
scas
stc
filds
bound
incl
xchg
add
sbb
jo
ss
out
sahf
jp
ljmp
shrb
dec
loopne
sub
xlat
dec
rolb
hlt
ja
and
mov
xchg
into
cmc
addl
mov
xchg
scas
inc
and
mov
add
or
loope
jle
and
leave
xor
pop
ss
lods
mov
loopne
dec
dec
cmp
lods
mov
cli
cwtl
pushf
sbb
pop
inc
dec
cmp
imul
shld
scas
pop
sbb
in
inc
inc
dec
ja
and
pop
je
xor
push
arpl
lds
pop
int
dec
call
js
mov
adc
inc
rcrl
aas
test
jnp
mov
iret
in
leave
das
pop
add
pop
mov
fmull
cmp
fidivrs
ljmp
mov
rolb
stos
adc
mov
sarl
inc
sub
rcr
enter
div
xchg
jecxz
sub
stos
mov
fbstp
fcmovu
lahf
stos
repnz
shlb
and
je
subl
fwait
test
insb
mull
fdivl
xchg
mov
xor
std
in
push
jl
std
imul
ss
and
subl
xor
push
add
lea
inc
lahf
in
testb
mov
add
lret
js
test
or
ljmp
mov
daa
inc
pop
or
push
ret
xor
inc
negl
arpl
rol
divb
leave
hlt
bound
aaa
int3
js
sti
popa
pop
sub
pop
and
nop
lahf
push
add
outsl
dec
xlat
xchg
add
sbb
and
iret
pop
movsl
jae
xchg
dec
cmp
mov
in
add
adc
xchg
xchg
mov
pop
cld
or
mov
into
dec
xor
push
jmp
lds
xchg
cmp
push
mov
or
jl
movsb
nop
sbb
mov
pop
pop
mov
jns
pop
add
xchg
mov
cvtps2pi
loop
fs
and
sbb
mov
inc
inc
pop
and
jmp
push
or
rolb
cmc
pop
xchg
jmp
pop
pop
les
add
pushf
push
mov
addl
push
cli
out
negb
push
into
dec
or
mov
jecxz
adc
rcrb
jge
jge
cmp
xchg
jmp
jmp
imul
push
cmpsb
inc
jg
bound
insl
fnstsw
sbb
mov
jnp
inc
pop
push
add
mov
adc
inc
adc
jecxz
insb
mov
int
add
xlat
xchg
adc
jmp
imull
std
add
ss
xchg
rorb
fidivrs
mov
dec
xor
jb
addr16
xchg
dec
pop
adc
push
adc
dec
pop
pop
xchg
out
mov
aas
loopne
mov
aas
adc
mov
mov
sub
movsl
lock
push
mov
jo
xor
xchg
mov
inc
add
xor
and
addr16
shlb
xor
add
inc
aas
fadd
jmp
xor
xor
dec
cld
mov
dec
sarb
cli
sbb
ret
mov
movsb
xchg
ja
outsl
int3
imull
push
sarl
icebp
repnz
and
movq
dec
mov
push
jle
push
and
pop
push
daa
add
int
add
negb
ret
std
adc
lahf
mov
decb
adc
mov
lcall
adc
sbb
repz
in
shrb
mov
in
cmp
test
lods
addb
roll
jns
mov
or
js
stos
sbb
or
sub
jb
jnp
mov
loop
cltd
xchg
push
int3
int3
daa
push
push
out
push
leave
xchg
sbb
enter
mov
repnz
jno
roll
mov
outsl
xchg
jmp
je
xchg
jecxz
lret
loopne
insb
jge
out
sbb
inc
pop
mov
popl
scas
push
cld
pusha
xchg
mov
mov
insl
xchg
pop
jl
dec
pop
and
jg
pusha
fsub
popf
imull
icebp
adc
ret
inc
push
xor
xor
repz
ss
ficompl
mov
and
and
add
movsl
push
in
ret
xchg
sub
lret
cmpsl
int
and
loop
mov
jp
cmp
mov
mov
mov
jo
push
cmp
loopne
xor
or
pop
jle
fs
dec
enter
mov
jb
in
xor
pop
adc
in
sahf
add
push
xor
xchg
mov
push
pop
adc
sahf
out
push
jle
pop
stos
mov
fisubrl
out
fwait
andnps
js,pt
mov
into
pop
mov
jbe
xor
int3
in
int3
sti
xor
aam
mov
imul
loopne
pop
and
cwtl
cmpsb
jecxz
out
xchg
imull
xor
xor
mov
and
insl
je
cmp
mov
jbe
clc
jno
ja
pusha
push
jno
aad
test
js
adc
mov
mov
inc
shr
or
fdivs
jno
mov
cmpsb
fsqrt
jle
pusha
mov
fidivrs
add
mov
notb
in
xchg
repnz
movsl
mov
jns
adc
pop
mov
std
sbb
out
scas
out
cmp
sbb
pusha
ja
and
nop
pop
add
sbb
push
mov
icebp
flds
mov
insb
push
sbb
jns
sub
add
push
xor
mov
movsl
or
dec
push
insl
iret
cmp
pop
push
sbb
adc
xlat
ss
push
scas
cmp
movsb
dec
fisubrl
cltd
jecxz
mov
sbb
es
pop
sub
pop
jmp
les
je
aas
sub
mov
sub
sarb
mov
enter
subb
jnp
pop
xchg
imul
mov
push
push
inc
mov
mov
xchg
cmp
mov
ret
or
adc
push
mov
jmp
fdiv
cmpl
test
sub
mov
sbb
bound
fwait
ljmp
pop
pop
mov
cmp
les
fisubs
in
mov
xchg
daa
jae
test
xor
nop
aas
sbb
push
mov
add
and
jns
sbb
gs
gs
arpl
mulb
xlat
or
cmp
jne
sub
sub
jbe
or
iret
imul
fwait
shlb
push
sbb
jl
scas
pop
push
jp
mov
fdivrl
aam
mov
fisubrl
push
stos
and
push
test
mov
mov
pop
and
fistpl
mov
sbb
inc
fdivs
xor
cmc
aas
adc
int
jbe
rcl
mov
sub
sub
cmp
stos
in
loope
into
aaa
push
into
jp
pop
daa
mov
jmp
inc
xchg
lock
leave
jne
dec
sbbl
rorb
jo
pusha
fsts
lret
es
xor
inc
mov
fcom
mov
pop
xchg
or
sub
sub
sub
fstps
in
mov
fisubrl
test
orl
mov
scas
int3
mov
pushf
fiadds
pop
jne
mov
test
scas
sbb
int
xor
outsb
clc
inc
aam
hlt
sbb
push
ja
call
adc
enter
xchg
inc
lds
sub
jne
les
mov
add
mov
fistl
movsb
and
add
dec
mov
push
std
imul
sar
cmp
lock
add
and
scas
adc
inc
xor
rcrb
lret
jmp
das
adc
mov
enter
std
addr16
shll
fiadds
pop
testb
fnstenv
clc
in
sbb
sbb
mov
and
pop
sbb
jo
idivl
pop
pop
aas
sub
and
sub
or
and
repnz
inc
pusha
inc
jmp
dec
inc
mov
lret
sarl
imull
and
outsb
or
and
in
notb
inc
aad
push
and
add
jne
dec
ret
movzwl
and
sub
movsb
cwtl
mull
pushf
push
lods
and
sahf
xor
iret
push
xor
sub
push
jae
pop
push
inc
ljmp
push
insb
mov
sub
imul
or
es
dec
mov
push
repz
mov
leave
imul
mov
sbbb
ret
mov
sbb
stos
aam
xor
test
mov
sbb
fs
int3
push
insw
cmp
mov
inc
mov
mov
movsb
mov
dec
dec
push
cmpsb
cmp
jmp
imul
dec
insb
test
xchg
sbb
fstp
mov
test
inc
cld
incb
cltd
fsts
pop
les
push
mov
cs
xor
sbb
jle
les
mov
and
out
pop
mov
push
adc
add
inc
inc
sub
rcll
das
push
icebp
je
std
push
idivb
lcall
cltd
repz
mov
ficompl
pop
stc
decb
clc
lcall
adc
stc
sti
push
fsubrl
xchg
xabort
jnp
popa
popa
jnp
test
loop
out
xchg
pop
lock
cwtl
inc
das
mov
aas
mov
xchg
rclb
fcompl
popf
lea
repnz
and
adc
and
mulb
fiaddl
add
gs
push
sbb
jo
hlt
jge
pusha
lods
scas
xor
push
inc
xchg
lcall
mov
lods
pop
imul
int
subl
cmp
loop
stc
hlt
stos
outsb
cwtl
sub
jp
dec
loopne
push
fiaddl
popf
hlt
cmp
inc
xchg
sub
cwtl
les
mov
out
imul
mov
inc
dec
jb
mov
mov
shlb
mov
pop
enter
mov
push
lods
loopne
add
xchg
pop
sbb
sahf
popa
mov
or
and
add
inc
ljmp
sbbb
shl
repz
rcrb
mov
and
jmp
inc
mov
pop
movl
fbld
adc
adc
dec
ret
mov
movsb
lods
or
fbstp
shrl
and
iret
lock
jbe
pop
push
ret
aaa
xchg
dec
loop
add
stos
mov
push
mov
mov
cltd
or
dec
fcompl
mov
mov
insb
das
ss
mulb
push
jg
mov
rcr
push
fs
pop
push
and
push
cmp
push
pop
inc
adc
mov
leave
push
push
inc
or
mov
adc
movsb
jae
mov
lahf
xchg
dec
cmpl
push
mov
lret
imul
push
cmp
pop
lea
fisubl
loope
cltd
cmp
pop
subb
sub
cmp
mov
movsl
lods
lret
insb
lods
dec
subl
and
mov
dec
ret
xor
push
and
and
jmp
pop
mov
cld
and
neg
lret
push
pop
jle
cmc
mov
push
push
adc
rorl
xchg
jns
mov
cmp
out
leave
leave
or
mov
xor
inc
pushf
pop
dec
loope
stc
lcall
jl
mov
sbb
fmulp
mov
cli
or
inc
pusha
nop
push
mov
nop
jno
je
insl
dec
xor
out
fldcw
mov
mov
xchg
and
test
lods
pop
fisttps
mov
dec
nop
push
dec
popa
roll
push
xor
into
mov
mov
xlat
imul
push
mov
es
sahf
lea
inc
adc
jne
and
and
cmp
mov
in
clc
push
jl
xchg
aam
aad
dec
aad
pop
inc
rcll
lods
cmpsl
and
popf
daa
sub
test
addr16
aas
dec
or
bound
loop
popa
mov
ret
cld
jmp
out
xor
or
dec
mov
mov
sbb
std
in
fwait
pop
mov
out
cmp
add
push
sub
fistpl
jp
leave
cs
sub
jecxz
test
imul
nop
insb
pusha
mov
ficompl
in
cmp
mov
addl
jnp
lahf
mov
pop
imul
push
insl
hlt
outsl
fs
lods
fnsave
out
lahf
jle
cmp
add
popa
clc
fst
add
out
insb
ss
imul
lret
mov
cli
roll
sbb
push
add
mov
inc
adc
push
jns
and
lahf
or
dec
test
jecxz
jae
push
push
arpl
inc
adc
rcr
push
pop
xlat
inc
xor
mov
mov
iret
test
test
inc
mov
and
in
cs
push
arpl
cld
es
repnz
jne
subl
iret
out
pop
inc
mov
inc
jae
repz
aaa
lret
ret
in
xor
imul
scas
sbb
xchg
gs
xlat
push
faddp
outsb
jne
lret
jb
push
ljmp
cmp
jnp
inc
shll
cmp
xchg
lret
pushf
cmp
or
pusha
xor
xor
stos
clc
inc
cmp
push
es
sbb
inc
mov
out
frstor
add
adc
pop
js
mov
mov
bnd
int3
jle
lret
scas
insl
jl
lcall
xchg
fldl
push
pop
fcomps
fists
scas
xor
test
ret
pop
lods
mov
add
incl
lret
faddp
cmc
or
ds
sub
dec
jae
xchg
fistl
inc
push
push
and
cmc
cmp
pop
testb
xchg
int
mov
push
xor
pop
cmpl
or
mov
aas
stos
adc
sbb
fcomp
mov
cmp
jne
fdivs
in
jne
push
jge
lahf
pushl
out
mov
dec
jge
adc
mov
xor
mov
in
mov
frstor
sti
push
mov
mov
cmp
aad
pop
movsb
inc
add
xor
test
es
sar
js
aam
sbb
rcrl
or
or
addl
cli
push
sub
pushf
mov
xchg
fcoms
loope
lret
enter
mov
aad
fiadds
std
loope
ret
call
jge
add
cmc
fabs
lock
pushf
pop
in
cs
sub
xor
jne
filds
sub
out
mov
aad
jne
shlb
cwtl
insb
pop
in
pop
rclb
mov
dec
lahf
inc
mov
mov
fldenv
sbb
inc
clc
mov
shl
fmul
mov
call
pop
xchg
push
push
add
cmp
xor
xor
movsb
sbb
mov
lods
add
sahf
inc
push
js
dec
out
jno
and
shll
ljmp
addr16
push
mov
test
mov
and
fdivr
jmp
repz
mov
int3
shl
rcl
aam
add
adc
or
jb
sub
call
or
push
add
cmp
jae
and
mov
loop
inc
aaa
push
and
xchg
and
push
cmp
sub
sbb
mov
jbe
inc
sbb
mov
cmp
or
loop
add
jecxz
sub
pop
imul
inc
scas
and
and
fistps
insl
stc
mov
call
subb
or
adc
push
dec
int
mov
pop
mov
and
push
shlb
aad
ret
stc
iret
dec
sbbb
jl
or
ficoml
push
push
cmc
mov
rcrl
mov
aas
pop
movsl
adc
sbb
int3
lahf
pop
push
push
nop
dec
dec
insb
shlb
xchg
jne
iret
and
dec
vpunpcklwd
scas
sub
out
pushf
mov
cmpsb
xor
sbbb
pop
sbb
dec
inc
pop
push
cld
xchg
les
add
into
pop
mov
ja
dec
add
sub
lods
in
jl
and
mov
das
adc
loop
add
movsl
out
push
mov
mov
mov
push
inc
dec
sub
lock
xchg
push
inc
popf
stos
push
pop
test
out
inc
ficoms
aad
and
ss
fdivl
jnp
test
mov
xor
or
cmp
mull
push
mov
mov
mov
mov
in
jno
test
ja
je
es
pop
icebp
pop
pushf
xchg
cmp
rol
sbb
in
dec
aad
pop
mov
movsb
mov
sbb
scas
xchg
mov
pop
xchg
cmp
fucomip
stc
pop
subl
mov
mov
and
ds
out
imul
pop
loope
dec
test
mov
push
lods
pop
jae
dec
add
in
add
mov
cmp
mov
aaa
out
mov
fwait
push
cmp
mov
scas
sbb
jmp
bound
loopne
or
xlat
dec
jno
jle
jb
data16
lock
cmc
outsl
push
xchg
xchg
xchg
scas
adc
inc
mov
push
and
stc
or
std
mov
lcall
js
icebp
lods
mov
xchg
adc
lock
cmp
movsb
jl
dec
shrb
rclb
mov
jecxz
xchg
push
add
jnp
test
inc
xor
inc
outsb
push
and
sub
int3
or
hlt
mov
dec
xor
test
out
xchg
xchg
mov
and
sub
hlt
rorl
push
push
sub
cmp
inc
ja
cwtl
mov
lcall
jg
pop
xchg
xor
push
ljmp
mov
pop
fildll
mov
ljmp
inc
pop
and
stos
ljmp
sbb
cltd
mov
xchg
xchg
sbb
sbb
ret
pop
aas
pop
stc
inc
mov
daa
shrb
sbb
and
mov
xchg
aaa
or
mov
push
adc
jmp
pop
lods
inc
daa
popa
loope
out
fwait
cltd
stc
outsl
addl
shl
in
out
dec
lods
push
or
pop
shrl
cwtl
dec
fwait
sbb
addr16
sti
fs
and
test
sub
movsb
xchg
mov
sub
push
mov
pop
js
xchg
shlb
mov
xor
imul
cmc
mov
mov
scas
bound
sub
inc
popf
dec
push
mov
or
insl
dec
and
xor
xchg
xchg
or
cmpsl
xchg
cmpsb
add
push
and
add
mov
cwtl
data16
imul
addb
lods
popa
cmpb
es
inc
or
fidivrs
adc
or
push
cwtl
shr
jmp
gs
sbb
dec
test
add
popf
sbb
add
jp
lods
mov
sbb
aad
sub
lods
std
int
test
xchg
pop
clc
addr16
xchg
xchg
andb
mov
mov
pop
lea
sbb
push
jg
lock
shlb
push
lea
lcall
popa
es
push
roll
insl
out
dec
jns
enter
pop
xchg
insb
inc
std
add
ret
jmp
and
clc
dec
push
jmp
sub
loopne
inc
mov
pop
in
pop
aas
cwtl
or
in
es
cli
push
fisttpll
iret
incl
ljmp
xor
les
lcall
scas
cmp
pop
sub
push
int
fidivrs
and
lcall
bound
pusha
jno
mov
shlb
bound
mov
in
ret
lea
divl
cli
cs
jb
xorb
insl
scas
dec
bound
stos
inc
add
repnz
add
ja
nop
shll
pushf
or
fcompl
mov
cwtl
pop
ss
test
and
jmp
xchg
adc
mov
dec
pop
out
dec
push
dec
mov
je
jge
xchg
xor
add
dec
mov
pop
sbb
jb
es
mov
imul
sub
mov
lods
lock
into
pop
push
pop
dec
mov
xor
inc
jmp
and
xor
popl
mov
mov
mov
shll
les
mov
jmp
sub
xchg
jl
mov
and
cmc
insb
div
push
inc
stc
test
ds
mov
sub
xchg
mov
cmp
mov
icebp
push
mov
int3
push
xchg
popa
lds
pop
jmp
mov
mov
outsl
pushf
mov
pop
insb
sub
loop
mov
dec
insb
iret
push
das
cmpsl
stc
lods
or
jge
xchg
sub
popa
stos
test
xor
jae
rcll
test
imul
mov
ja
and
or
popf
and
cmp
jecxz
and
out
lea
mov
mov
fsubrs
mov
sbb
pop
sbb
stos
scas
cmpsb
jge
call
sti
scas
sahf
sbb
mov
jae
sbb
jne
jmp
or
lods
sub
xchg
mov
fbld
push
jl
and
call
add
fistl
sub
fwait
imul
jge
pop
adcb
mov
push
or
frstpm(287
out
push
stc
out
ja
enter
cmc
fwait
inc
jb
andl
mov
imul
mov
jecxz
pop
pop
mov
sub
and
cmc
xor
pop
and
mov
or
enter
rsm
and
sbb
mov
popa
imul
pop
rcrb
outsl
xor
jl
dec
and
push
fnstenv
in
pop
insl
fdivrl
inc
adc
adc
sub
mov
jecxz
cld
mov
xlat
mov
pop
scas
or
or
iret
daa
jle
idivb
les
xchg
xor
jl
add
or
push
out
cwtl
or
das
stc
testb
xchg
sub
lret
leave
arpl
mov
cld
cmp
andl
iret
mov
insb
cmp
mov
inc
mov
mov
call
cmp
fwait
mov
movsb
or
rcrl
out
out
jbe
test
add
and
adc
sub
dec
jg
or
and
adc
lock
mov
clc
pop
shlb
push
scas
loope
adc
shrb
pusha
xchg
fistpll
mov
push
sub
shl
pop
inc
mov
ss
ss
adc
stos
xchg
sub
xlat
jmp
nop
push
jo
dec
or
out
xchg
mov
sbb
scas
ret
inc
das
add
dec
jmp
ja
out
fcoms
cmp
sbb
iret
mov
lcall
inc
sbb
stc
mov
dec
icebp
sub
xchg
cmpsb
jge
xor
mov
pop
mov
sahf
pop
xchg
dec
adc
fidivl
lret
lock
or
add
sbb
int3
sbb
inc
in
mov
push
xchg
gs
adc
jecxz
popa
xchg
stc
insb
icebp
jae
lds
jae
hlt
pop
addr16
pop
icebp
sub
mov
mov
outsl
cli
scas
andb
cltd
cmp
sub
ret
push
mov
icebp
mov
add
cmp
mov
xchg
xchg
fs
mov
add
test
pop
fbstp
pop
hlt
add
stc
stos
jns
add
fnstcw
mov
enter
adcb
push
mov
adc
out
jae
cmp
add
test
adc
fcomps
cld
negl
test
lret
jecxz
ret
and
in
and
xor
push
jne
jns
and
xchg
and
push
sbb
push
enter
daa
or
dec
jnp
push
lret
cmc
mov
mov
movsb
loope
mov
sub
jbe
ret
cmp
ja
cmp
jle
adc
cmc
mov
fldcw
clc
xchg
cmpsl
cwtl
jnp
ja
mov
js
and
cmpsl
es
pop
pop
std
ljmp
sub
arpl
jb
mov
mov
inc
ficomps
imull
test
cmp
mov
stos
out
push
mov
testl
movsb
loopne
ret
and
or
ds
cmp
cmp
sub
mov
ds
sub
push
aaa
xor
in
dec
sub
lahf
mov
mov
xchg
mov
pop
and
fcoml
push
imul
jle
sbb
rol
push
js
repz
dec
mov
push
movd
add
loop
daa
sbb
mov
fdiv
enter
mov
and
adc
mov
ja
sbb
subb
es
mov
add
cmp
ljmp
icebp
subb
pusha
adc
in
cmpsb
fnstsw
jne
xlat
dec
in
cmpsb
fcmovnbe
mov
sbb
dec
daa
or
pop
adc
stc
dec
pop
sub
fnsave
mov
lods
jno
cmp
mov
and
jb
jmp
cs
pop
dec
lahf
rolb
jo
sahf
mov
insb
inc
or
popl
pop
test
cli
push
lea
push
add
sbb
ret
fldt
jo
push
sub
rolb
and
inc
or
add
mov
adc
jno
repz
add
and
dec
jae
jno
mov
sahf
jb
dec
pop
jg
test
mov
ss
push
mov
mov
xchg
gs
icebp
adc
mov
sub
inc
lods
stos
sbb
sarb
pop
mov
inc
xor
mov
mov
mov
shr
adc
inc
mov
xor
inc
xor
sbb
loope
ss
out
aad
xor
pop
insb
or
in
sub
ss
pop
ja
stos
pop
mov
push
add
cmpsb
mov
push
mov
lahf
jmp
test
push
and
pop
or
push
sahf
clc
outsb
sub
xor
add
mov
mulb
xchg
inc
xor
and
pop
loopne
mov
les
bound
cmpsb
xor
aam
std
out
jo,pn
sbb
xor
mov
rclb
dec
popa
fnstenv
scas
mov
pusha
mov
loopne
mov
jecxz
cli
inc
jge
jmp
lahf
mov
imul
lds
cmpsb
and
mov
ret
adc
in
inc
add
in
jb
xchg
mov
inc
sub
inc
pop
or
mov
int3
or
call
dec
loope
int
loope
fdivr
mov
adc
cmp
ret
out
mov
fisubl
xchg
call
jbe
stc
push
gs
pop
outsl
jae
js
jns
add
inc
sbb
testl
pop
jo
cmpsb
xorb
das
mov
sarl
scas
mov
add
dec
movsl
xor
mov
cmp
imul
jge
addr16
inc
jae
ss
xchg
loop
jge
lods
loope
dec
or
jns
int
push
sti
hlt
and
push
sbb
jne
dec
insl
jl
mov
xorb
add
bound
add
push
loop
out
dec
cltd
ret
inc
jb
movq
sahf
xchg
mov
jnp
sub
pop
mov
fmul
inc
aaa
ja
mov
gs
pop
add
ret
scas
rcl
push
inc
andps
and
pop
aam
rol
ret
xchg
cli
pop
cmp
cmp
push
ja
out
lods
or
icebp
fistps
xchg
rolb
iret
mov
sbb
enter
rorb
in
inc
fidivs
loope
clc
addb
icebp
shl
cmp
out
cld
mov
dec
xor
mov
jp
jo
dec
jnp
sub
repz
movsl
js
inc
scas
insb
jmp
push
mov
daa
or
xorb
lahf
push
cmpsl
push
scas
and
rol
mov
mov
in
sti
inc
adc
scas
adc
and
stos
pop
test
pop
cmp
stos
scas
loop
push
push
push
lock
loopne
and
cmp
rcl
pop
in
pop
insb
stos
sub
jbe
daa
fs
jae
ljmp
pop
cltd
pop
cmp
xor
mov
gs
popa
les
xchg
data16
insb
notl
iret
cmp
fimull
mov
mov
stos
imul
push
add
test
add
popf
arpl
test
pushf
add
jnp
add
cmpl
xor
xchg
add
mov
mov
scas
mov
hlt
stos
sub
jns
mov
mov
xlat
fwait
push
xor
shlb
popa
repnz
outsl
cmp
mov
rcrb
mov
stc
dec
sub
loopne
mov
cmp
mov
mov
lock
mov
cmp
push
mov
out
jle
jno
adc
daa
jb
adc
cmp
movsl
pop
sub
mov
inc
cmp
sbb
xchg
test
fiaddl
jg
stos
aam
jb
cmp
pop
dec
mov
lret
gs
mov
enter
ja
fldl
jle
lods
pop
into
lods
movb
sti
xor
out
and
cmc
and
aad
inc
adc
cmp
mov
mov
ja
int3
shlb
xchg
mov
cltd
daa
cld
xorb
mov
fs
mov
cmpsb
int
cld
les
push
dec
clc
inc
notb
cmp
xor
sub
fdiv
inc
cmp
in
scas
mov
mov
sahf
shr
in
fucomip
cmp
or
and
xchg
test
inc
or
repnz
jnp
call
xor
xor
adc
add
sub
iret
mov
mov
and
lahf
cmc
add
or
mov
jmp
scas
mov
xor
insl
xor
pop
arpl
adc
pop
push
aaa
cltd
ret
int3
mov
adc
repz
mov
xchg
insb
fadds
and
scas
or
pop
jecxz
gs
dec
xchg
test
jae
fisubrl
mov
mov
mov
jo
add
jae
mov
outsl
clc
cmpsl
repnz
out
xchg
adc
add
fimull
mov
cli
mov
loope
pop
call
pusha
adc
push
inc
jne
jle
sbb
rcr
repnz
xchg
js
pop
in
les
mov
call
push
outsb
sbb
cmpsl
insb
sub
or
inc
mov
xor
out
loope
dec
ret
mov
jno
aaa
xor
dec
push
push
nop
add
gs
mov
test
repz
jecxz
mov
sub
jae
ds
xlat
sbb
cwtl
sahf
imul
xchg
lahf
rorl
stos
mov
icebp
mov
mov
fnsave
loopne
xlat
fwait
pop
shlb
pop
or
dec
rcrb
outsb
push
jl
mov
jecxz
shll
mov
insl
jmp
xchg
or
pop
inc
inc
mov
or
dec
lret
push
nop
ret
add
add
sahf
scas
dec
cmp
insb
ljmp
cmpb
push
jb
out
pop
mov
pop
mov
loopne
push
xchg
insl
pop
pushf
cmc
sub
inc
xor
ror
jp
cld
adc
cmp
inc
test
bound
mov
cmp
pop
insl
mov
sbb
in
or
addr16
loop
mov
adc
in
adc
bound
dec
and
inc
rolb
out
cmp
xchg
mov
popa
xchg
dec
push
sbb
sbb
cmpsl
ds
rcrb
mov
lret
or
xor
mov
loop
add
mov
imul
imul
lea
mov
clc
not
ss
std
clc
syscall
or
dec
das
inc
fnsave
adc
lock
lock
pop
shlb
xchg
dec
cmp
inc
jb
shrl
mov
cmp
and
fsubr
daa
adc
rclb
loope
cld
or
in
rcl
pop
clc
and
pop
mov
test
mov
outsb
out
inc
call
or
push
and
xchg
cmp
lods
mov
lcall
pop
push
jge
sbb
mov
fstl
jnp
mov
adc
fwait
mov
scas
bound
mov
mov
mov
push
test
sarl
lcall
ret
iret
jmp
add
out
xor
pop
push
out
inc
sub
pop
mov
stos
mov
or
test
sbb
sbb
ret
lds
int3
sarl
and
loop
popa
mov
lcall
sti
mov
mov
hlt
inc
inc
dec
or
stos
push
psrld
jo
mov
shl
adc
sbb
popa
into
loopne
dec
sbb
cld
lock
sbb
out
orb
loop
insl
sub
xchg
xorl
pop
add
mov
pop
mov
mov
push
pop
hlt
stc
mov
cmp
ret
xchg
cwtl
rorl
lahf
sbb
add
aam
negb
in
outsb
adc
jp
addl
les
pop
push
imul
sub
dec
aam
adc
movsl
lcall
adc
lret
cmp
mov
xor
jl
fidivrl
fdivrs
push
push
lods
mov
xor
call
dec
adc
imul
add
mov
loope
adc
pop
xchg
inc
push
jns
pop
adc
clc
mov
fstpt
or
pusha
imul
xor
jo
adc
xor
xchg
popf
imul
inc
add
xchg
xchg
fwait
push
adc
out
mov
shl
orb
insb
mov
push
rorl
add
int
into
lret
lods
xor
cmp
mov
pop
mov
ja
in
xchg
rolb
in
jl
imul
popa
pop
pop
sub
cs
sbb
mov
cmp
inc
mov
scas
xchg
xchg
cli
popa
add
or
xlat
dec
fisttpl
mov
fcom
js
lcall
sbb
enter
mov
mov
addb
into
js
add
clc
bound
scas
dec
in
jns
out
mov
lock
cmpsb
push
add
sbb
ljmp
mov
push
xor
mov
add
loopne
js
adc
daa
fsubrs
imul
xlat
inc
lea
sbb
inc
xchg
adc
into
inc
jg
mov
xor
arpl
and
or
mov
cmpsb
pop
loop
jae
pop
xorb
popa
dec
or
sub
js
fmul
lods
sub
pop
dec
sbb
js
dec
outsl
lret
aaa
inc
mov
xor
imul
push
loopne
ss
decl
push
gs
repz
jecxz
xchg
or
sub
js
loope
add
fistpl
mov
stc
fisubl
and
xchg
cmp
push
sbb
fs
jecxz
xchg
lock
in
cwtl
jnp
inc
ret
in
mov
aaa
adc
stc
cmc
mov
mov
lods
js
cli
and
jne
mov
scas
fildl
sahf
add
adc
in
cmc
rol
xor
lods
popf
push
sub
arpl
add
jb
enter
dec
loope
repz
flds
sub
lods
or
shl
out
xchg
xor
ss
sti
fcmovu
jns
lea
aam
testl
xor
stc
repnz
pop
xchg
and
inc
mov
aas
cmp
sbb
sub
mov
fstpl
sbb
and
lea
xchg
stos
ja
mov
xor
cltd
in
inc
cmpsl
sub
cmp
sub
add
sbb
dec
scas
shlb
lods
xor
jnp
aas
cmpsl
mov
mov
inc
sbb
popa
xor
mov
or
ret
push
jo
jl
arpl
outsl
add
mov
mull
xchg
test
sub
cmp
sub
inc
pop
mov
push
loopne
cmp
pushw
sub
or
mov
fcmovbe
daa
jmp
sarb
ret
mov
stos
dec
daa
pop
dec
xor
insl
int3
add
js
lret
and
inc
push
mov
je
cmp
mov
jae
inc
in
fucomip
jnp
adc
mov
sbb
xor
or
repz
jo
rcll
stos
cli
pop
push
in
push
mov
popa
movl
fwait
nop
mov
push
es
inc
lea
xchg
sti
dec
xor
xlat
cmp
mov
xorl
and
and
inc
sbb
lahf
loop
pop
push
scas
push
sbb
aas
imul
sbb
ret
sbb
or
ret
repz
jb
out
fwait
mov
fadds
out
cmp
imul
cmp
sbb
cmpsl
pop
mov
xchg
sbb
stos
and
or
repnz
popa
scas
mov
outsb
nop
jb
sbb
mov
rclb
push
and
gs
test
pop
mov
out
in
cmc
pop
push
cwtl
or
arpl
or
mov
shrb
inc
sub
scas
adc
sbb
ret
and
popa
aad
in
mov
pop
rcr
leave
pop
fldenv
fcompl
sbb
hlt
rclb
and
xor
or
rcll
cmc
call
cmp
aam
clc
scas
cmc
andl
mov
jle
and
xor
je
pop
push
imul
xchg
pop
inc
into
push
pushf
gs
or
push
mov
and
cwtl
jno
push
into
xchg
fcomp
xchg
and
cld
mov
loop
fs
in
xchg
pop
test
push
mov
out
jns
adc
fsubs
mov
hlt
mov
adc
push
sar
ss
ss
and
sahf
xchg
sub
pop
jl
inc
or
xlat
hlt
out
inc
cmpsb
stos
add
cltd
daa
mov
dec
or
jae
cmpl
cli
mov
arpl
add
sub
push
pop
jge
jae
or
ficoml
push
fldenv
xor
ret
pop
xchg
cmp
mov
add
leave
aas
gs
fcompl
inc
add
push
test
mov
adc
sbb
mov
and
andb
je
add
mov
test
cld
pop
nop
mov
stc
mov
cld
das
xchg
xor
jg
inc
les
xchg
insl
test
loope
adc
mov
bound
insl
and
dec
lahf
cmp
cld
jge
notb
jg
jp
push
out
test
cmpsb
iret
pop
cmpsl
test
addr16
rorl
orb
xchg
repz
cmp
notl
cld
sahf
mov
jbe
sti
sbb
adc
mov
loopne
adc
sbbl
xor
mov
cli
cmp
pop
cmp
test
hlt
leave
mov
mov
push
out
arpl
icebp
cld
jae
dec
cmp
xchg
fldcw
jl
addl
out
shl
jle
loopne
push
push
push
ds
int3
sbb
lret
popa
add
cmpsb
push
xchg
nop
into
lcall
or
out
movsl
or
sbb
cmp
jmp
cmp
xchg
and
xor
lods
or
xor
mov
movsl
mov
add
pop
enter
or
or
push
clc
andl
mov
in
ret
cmp
lds
inc
mov
sub
or
movsb
popf
adc
pushf
inc
mov
fs
test
pop
mov
mov
dec
mov
sbb
cmp
aaa
mov
mov
jne
popa
mov
mov
scas
pop
and
add
scas
add
inc
sbb
push
divl
cmpl
out
mov
jb
insb
mov
jnp
jno
fdivr
rcl
push
or
add
xchg
scas
pop
sti
push
or
in
mov
pop
mov
movsb
pop
pop
jae
test
jo
subb
ljmp
sub
bnd
jns
scas
xor
aas
movups
add
stos
shlb
jl
sub
lock
scas
leave
sti
hlt
out
pop
arpl
mov
ret
lds
sub
movsl
std
and
and
and
sbb
leave
pusha
adc
scas
fsubrl
lret
sbb
push
mov
out
outsb
inc
xor
fsts
and
loopne
loope
iret
iret
adc
and
stos
sahf
leave
sub
mov
jbe
lret
hlt
das
ja
ss
sub
popf
and
insl
out
sub
fnstsw
decl
mov
jne
xlat
mov
cli
mov
ja
jmp
scas
leave
daa
dec
dec
ja
in
push
add
sub
movsb
cmp
mov
jecxz
cmpsl
test
lea
cmp
push
add
lret
xchg
push
dec
cmp
adc
pop
gs
pop
mov
dec
inc
clc
jl
adc
das
imulb
cmpsb
mov
gs
xchg
das
pop
shlb
mov
test
sbb
pop
out
mov
pop
outsb
push
mov
lcall
push
stos
push
imul
sub
mov
jae
cmpsb
add
test
pop
xor
stos
mov
add
push
jecxz
repnz
xchg
jg
int3
lods
push
imul
repnz
test
lea
flds
push
xor
aas
sahf
orl
or
or
cwtl
lds
add
cmp
push
mov
xchg
cmp
enter
sub
je
jecxz
mov
push
inc
sub
insb
les
pop
cmp
jo
outsb
mov
sbb
cld
xchg
daa
xchg
adc
jnp
xchg
dec
scas
dec
inc
les
mov
mov
pop
mov
dec
sbb
femms
in
mov
or
mov
mov
cs
jb
cmpl
cmpsl
jle
dec
jge
push
mov
popa
and
mov
mov
popa
aad
js
pop
hlt
bound
sub
adc
push
popa
ljmp
or
out
ds
loope
test
mov
mov
outsb
xchg
cmp
out
cs
fidivs
dec
sti
loope
pushf
adc
lahf
fistpl
popl
and
rcl
ret
mov
not
xchg
in
lret
jne
inc
lods
cmpb
add
mov
mov
jnp
xor
aam
sti
pushf
xchg
iret
xchg
dec
movntq
and
push
and
fistl
pop
and
in
cwtl
push
or
push
les
out
lods
push
scas
push
pop
xlat
dec
and
or
mov
pop
imul
pop
mov
in
lods
pop
xor
xchg
and
pop
cli
pop
addr16
push
add
cs
nop
and
fmuls
pop
movsl
or
adc
pop
in
lds
test
sub
xchg
fwait
jl
jl
push
fisubrs
js
js
mov
ljmp
xor
movsl
xchg
mov
xor
lret
or
and
fcoms
std
mov
xor
pop
pop
pop
mov
ljmp
sahf
push
xlat
test
mov
mov
ret
xchg
xchg
fcoml
jae
scas
lcall
dec
mov
loop
and
dec
xchg
sahf
dec
and
ficompl
out
xchg
addr16
jp
into
cmp
mov
dec
lcall
cmp
mov
jo
xchg
lret
push
jnp
outsb
imul
xor
stos
or
dec
ljmp
movsb
fwait
push
fwait
add
and
mov
negb
mov
push
leave
xor
push
jnp
inc
mov
mov
aas
lcall
cs
adc
jb
insb
add
or
adc
ss
sbb
inc
inc
in
inc
sbb
stos
dec
dec
dec
test
or
stc
xor
in
mov
xor
arpl
pop
push
mov
add
and
rol
mov
hlt
popa
insl
lods
movsb
mov
imull
mov
ds
mov
repz
xchg
cmp
arpl
repnz
outsl
in
sbb
loopne
xchg
push
outsb
xchg
shrb
cltd
jbe
jnp
mov
push
sbb
lods
test
out
shll
mov
cs
xchg
or
dec
lods
jo
shl
mov
and
xor
jge
mov
not
aaa
pop
dec
jo
jp
pop
fstps
or
adc
mov
ret
and
and
std
pop
sahf
sub
pop
stc
inc
mov
jg
push
adc
out
mov
mov
mov
es
cmp
movsl
insl
sub
jbe
jb
pop
xor
fistps
insb
push
ret
ret
clc
inc
ss
je
clc
jge
aam
pop
xchg
mulb
jne
xor
mov
adc
stc
lea
pop
or
ret
inc
and
movsb
sub
es
iret
es
push
xchg
jno
cltd
scas
adc
arpl
jne
or
jecxz
jg
dec
add
inc
int
sahf
in
dec
mov
lock
xchg
sub
addb
pop
mov
pop
dec
mov
xchg
push
subb
shrb
cmpsb
outsl
in
inc
xchg
aas
mov
nop
daa
call
jb
cli
or
mov
dec
inc
ret
pop
xchg
or
insb
mov
mov
icebp
icebp
sub
mov
dec
aaa
ss
and
icebp
or
jns
pop
call
pop
in
std
gs
insb
mov
inc
add
inc
push
and
shlb
cmpsl
test
and
jg
push
mov
dec
fcompl
dec
jbe
imul
lea
negl
cmp
inc
sub
aam
inc
and
roll
ss
cmc
scas
xor
fidivl
xchg
out
mov
incb
popa
mov
mov
aas
push
mov
adc
pop
mov
pop
loopne
les
sub
xchg
mov
popf
pusha
icebp
mov
and
jg
dec
ret
pop
repz
jl
aam
pop
sub
ja
pop
popa
cld
je
xor
rcrb
add
sub
arpl
jl
js
ss
cmp
dec
dec
and
dec
shll
push
add
push
sub
mov
sbb
icebp
sub
divb
and
cmp
cmp
aam
push
addb
leave
mov
pop
fdivrp
and
das
inc
bound
scas
out
stos
push
jae
das
mov
into
pop
notb
insl
test
pop
pop
adc
pusha
sub
sub
jbe
cltd
jmp
push
pop
or
enter
shlb
aam
lcall
std
test
jmp
je
test
xchg
dec
push
dec
jle
cmp
xor
or
push
push
sub
pop
sub
jmp
sbb
pusha
shrl
jecxz
cmpsb
or
xor
push
cld
cwtl
incb
in
loope
mov
lods
xchg
rcl
mov
and
push
jmp
clc
inc
fnstcw
clc
insb
gs
add
xor
or
cmpl
adc
loopne
mov
les
in
pop
arpl
cmpsb
add
outsl
mov
and
or
lret
pop
push
and
sbb
scas
cmpsl
mov
push
mov
bound
addl
cmp
mov
cmpsl
inc
stos
les
inc
push
fst
xlat
cwtl
push
xchg
jne
or
ja
call
sbb
sub
cmp
sbb
lcall
mov
xchg
sti
scas
aaa
pop
and
pusha
addr16
push
clc
cmc
lea
and
push
adc
pop
pop
shlb
ja
xor
es
mov
inc
add
xchg
mov
test
mov
inc
push
inc
enter
js
icebp
out
mov
movsl
fwait
pusha
push
fbstp
push
fnsave
xchg
mov
mov
mov
jne
sub
jbe
outsb
jo
sbb
frstor
cli
dec
or
leave
stc
mov
leave
call
enter
int3
add
push
rolb
test
inc
jnp
mov
mov
test
icebp
sti
cli
subb
add
lcall
cmpl
out
lcall
mov
gs
fsubr
sbb
sar
mov
xor
pop
xorl
inc
mov
xchg
dec
data16
mov
data16
cmpsb
dec
lods
jno
inc
mov
jnp
dec
mov
int3
cld
incl
mov
jno
lods
bound
repz
xor
lcall
pop
dec
pop
sub
lea
out
xor
ljmp
hlt
inc
in
lods
or
shrl
add
lahf
mov
js
lcall
js
pop
xor
sub
dec
bound
pop
mov
and
or
je
xchg
mov
jle
xor
xchg
jmp
lret
push
cltd
imul
aad
xor
loop
mov
cmp
shll
out
cmp
mov
cli
roll
ja
lods
sub
aaa
lock
sbb
faddl
mov
gs
enter
mov
xor
cmp
xchg
fmull
xlat
mov
pcmpeqd
repnz
mov
fidivrl
dec
movb
imul
rcll
mov
jp
sub
cwtl
pop
xor
mov
inc
mov
mov
popf
lods
mov
sbb
mov
or
pop
sub
dec
leave
fistpll
dec
cltd
iret
mov
pop
daa
add
andl
cltd
test
push
sub
fs
jp
jo
and
sbb
jecxz
loope
pop
mov
push
ret
mov
test
pop
loopne
push
movsl
jl
fs
fdivp
mov
or
lcall
mov
push
iret
out
and
mov
xchg
xchg
lds
jmp
adc
lcall
clc
jmp
and
xor
loop
rolb
push
xchg
cmp
clc
dec
nop
repz
je
mov
sub
xchg
pop
xchg
stc
mov
jle
lds
and
lods
test
insl
loop
or
or
or
mov
inc
pop
or
push
shlb
std
adc
dec
cmp
insl
mov
imul
popf
adcl
movsl
jmp
jae
sbbl
daa
cmpsb
dec
pushf
outsb
sbb
cmp
and
aad
mov
popa
jle
out
mov
sub
mov
rol
rorl
clc
sti
arpl
int3
adc
fsub
lahf
pushf
inc
enter
dec
pop
imul
ja
xchg
gs
jae
cmp
sti
push
pop
call
out
lret
jnp
popa
dec
js
inc
nop
repz
movsb
push
xor
in
xor
rorl
scas
mov
push
pop
ret
add
jmp
add
mov
add
pop
stos
mov
fmul
js
xchg
dec
xchg
jle
xor
cmp
push
test
lret
pop
movl
adc
push
ficomps
mov
sarb
sub
popf
push
add
subl
mov
notl
push
lcall
sub
daa
arpl
lahf
nop
mov
stos
sti
fcmovbe
dec
scas
dec
int
jecxz
fistps
mov
loop
movaps
push
and
das
xchg
insb
out
clc
mov
repnz
daa
fdivrl
xor
test
jecxz
mov
nop
ja
or
fcoml
popf
cmpsb
fwait
and
or
and
mov
insl
push
fs
lret
mov
bound
mov
movsl
dec
pop
jecxz
scas
jle
lahf
sbb
push
jmp
inc
std
mov
mov
ljmp
shll
adc
ljmp
arpl
jno
dec
in
xor
or
stc
sahf
call
push
ljmp
test
adc
outsb
adc
jnp
lea
sbb
mov
in
gs
inc
sti
push
mov
push
or
mov
dec
xlat
enter
dec
out
xchg
popa
mov
jl
rolb
jp
adc
fisubs
in
inc
in
ljmp
mov
sbb
out
call
aaa
jae
popa
jb
jb
sbb
cwtl
dec
mov
lahf
xchg
xor
outsl
sbb
cwtl
in
fwait
push
inc
andl
cmp
add
add
push
jecxz
out
pop
cld
jecxz
mov
cli
cmpsb
mov
test
js
out
xor
cmp
and
xchg
shll
pusha
jle
stos
test
jmp
arpl
outsb
pop
mov
jnp
ret
pop
gs
out
in
add
aad
mov
sub
mov
jo
cmpsl
int3
orl
int
sbb
mov
sbb
ss
push
ja
ja
add
nop
mov
sbb
sti
dec
sub
mov
test
pop
fs
mov
mov
sbb
mov
dec
and
pop
lret
mov
push
jne
int3
mov
lock
cltd
cmp
lods
out
popa
test
lahf
out
pop
shr
cmp
pop
mov
mov
push
pop
cs
pop
cmpb
mov
and
cmpsb
or
inc
fmuls
loop
aam
mov
lods
ja
add
adc
fwait
out
hlt
cmp
mov
repz
mov
movsl
mov
insb
sbb
scas
jae
popa
and
xor
fcompl
mov
dec
lahf
mov
repnz
cmp
lcall
mov
and
sbb
adc
or
fiaddl
sbb
or
mov
adc
cli
mov
ds
out
jno
hlt
pop
in
je
push
shlb
push
pop
jo
outsb
mov
jae
imul
add
cmp
decb
or
sbb
pop
jp
cli
pop
cltd
xchg
nop
xorb
ret
mov
aas
push
and
push
jae
out
fnstenv
imul
jb
sarb
shr
sub
inc
adc
cld
pop
movsl
fldenv
dec
loop
mov
jnp
or
iret
or
jecxz
jg
jo
sbb
or
test
addr16
wrmsr
daa
push
iret
push
scas
out
push
dec
pop
fs
nop
pop
out
gs
jae
xchg
cmp
es
and
jae
lret
shl
stc
xchg
jge
popf
sub
mull
lods
dec
leave
and
jecxz
push
mov
jmp
mov
xor
sub
mov
scas
jbe
lret
jne
pop
inc
fbld
mov
ss
mov
clc
std
ss
bound
mov
ffree
std
pop
pop
and
fnsave
mov
shlb
mov
mov
je
adc
insl
xchg
mov
fisubl
loopne
ljmp
sub
imul
hlt
in
jnp
pop
cmp
and
cli
inc
insb
outsl
jb
sahf
push
les
push
xor
cmp
out
rorb
movsb
mov
sarl
fnstsw
outsb
adc
push
outsl
pop
mov
and
aam
push
std
es
mov
mov
out
addr16
sub
enter
dec
lds
cwtl
rclb
incb
mov
lea
test
rclb
mov
mov
cmp
mov
inc
ljmp
jns
xchg
out
aaa
sarb
into
data16
shr
fildll
arpl
stos
jg
adc
inc
aam
rorl
mull
inc
cmc
insb
adc
jle
mov
test
fidivs
inc
vmptrld
pop
nop
repz
fldt
or
test
mov
rcrl
lcall
loope
stos
adc
xchg
push
addl
jo
sub
js
and
sbb
sub
aad
inc
nop
shrb
mov
push
loop
fbld
mov
pop
adc
data16
fldl
mov
dec
das
mov
rcll
and
and
mov
add
outsb
xchg
movl
inc
dec
push
cmp
pop
lock
sub
subb
out
dec
ljmp
outsb
or
mov
roll
negb
inc
add
iret
popa
and
cmp
lods
add
sub
cmpsl
xchg
push
lret
loopne
aam
push
fprem
sub
insb
or
shll
incb
scas
xchg
subl
add
xchg
shll
push
or
mov
mov
xchg
ss
pop
or
jno
cmpsl
in
pop
iret
push
in
pop
jns
decb
out
notb
mov
xlat
adc
mov
pop
adc
inc
dec
imul
enter
and
insb
aam
add
xor
lret
fwait
sti
adc
jb
in
testl
add
add
leave
testb
int
clc
push
cmp
push
push
addr16
xor
aad
xor
fimull
es
push
enterw
add
aas
mov
add
sub
cmpsb
dec
daa
fsubrl
repz
andl
dec
and
outsl
ds
fstps
push
sbb
cmp
fwait
jb
sbb
xlat
xor
cs
rep
in
aas
jnp
hlt
pop
jg
cmpsl
cmp
jle
out
xchg
popf
sbb
and
xor
pop
pop
mov
stos
and
jl
or
sbb
insb
push
xchg
insl
es
inc
rclb
cld
mov
sub
popa
test
fsubr
push
je
jo
inc
add
dec
cmp
dec
out
jmp
add
enter
out
pop
js
xchg
mov
mov
xchg
dec
push
jno
test
cltd
cltd
mov
insb
jno
in
jle
push
in
add
jg
cmp
jne
fmull
and
push
loopne
ret
add
gs
push
xchg
clc
sar
cmp
and
imulb
cld
mov
cs
scas
ficoms
xchg
shl
nop
pop
cmp
sub
testl
les
fistpll
mov
addl
mov
pop
sahf
rep
inc
pop
cld
pop
fistpl
icebp
adc
cwtl
fstps
nop
xchg
xor
xlat
inc
dec
mov
jmp
daa
jge
push
sub
sbb
and
idivl
stos
adc
icebp
jle
inc
fmuls
cmp
std
loope
jns
leave
jecxz
sahf
push
fstl
mov
sbb
movsb
int
mov
xor
mov
mov
push
push
xor
push
cli
or
or
out
sbb
or
adc
divb
sahf
dec
mov
outsb
adc
sti
and
loope
xlat
fists
test
xchg
mov
dec
push
rcrl
lea
ss
rol
or
cmpsl
cwtl
push
mov
mov
mov
insb
fildll
pop
or
sbb
jg
pushf
sarl
jnp
movsl
adc
sbb
dec
xchg
negl
dec
fld
out
xchg
mov
add
sub
inc
out
mov
mov
dec
add
mov
xchg
scas
cmp
loop
popf
cmpsb
movsb
mov
mov
add
pop
sahf
lea
inc
jo
jb
sbb
jmp
addr16
and
cmp
cmp
outsl
or
adc
int3
xchg
insb
pop
imul
scas
sarb
xchg
xor
fstl
test
mov
mov
and
out
xor
addr16
test
xchg
xchg
fs
fbld
packuswb
xor
je
fld
mov
fmuls
rcr
out
or
fsubrs
lahf
mov
mov
cmp
into
adc
dec
or
enter
cltd
jns
xlat
pop
pop
mov
adc
mov
call
shll
mov
scas
pushf
add
dec
inc
inc
dec
xchg
fprem
aaa
adcl
aad
jg
mov
adc
mov
sbbl
or
jo
jecxz
sub
inc
jl
adc
pushf
pusha
sbb
pop
xchg
cmp
or
scas
js
mov
push
cwtl
dec
and
andl
dec
dec
mov
add
add
int3
call
lret
movsl
mov
enter
or
push
mov
mov
cmpb
add
sbb
insb
xor
inc
lret
jo
call
sub
or
and
inc
pop
lock
out
sub
push
clc
mov
dec
bound
add
cld
ja
and
dec
mov
adc
enter
mov
mov
insb
cmp
repnz
popa
xchg
fistpll
cwtl
sbb
test
inc
cli
pop
fwait
mov
repz
rorb
xchg
inc
pop
cmc
inc
loopne
push
mov
outsl
ret
fisttpll
jl
sub
add
or
pop
pusha
testl
bound
xor
cmovnp
nop
addr16
pop
or
pop
jo
jmp
cmc
fwait
push
xchg
sbb
stc
adc
push
sbb
cpuid
cmovbe
std
jge
push
mov
lods
loope
push
or
sub
test
fcomps
jl
lods
and
ja
pop
imull
mov
lret
xchg
sbb
pop
fcomps
sbb
adc
sub
pop
mov
repnz
dec
fistl
mov
std
push
xor
xchg
fcoml
adc
cmpsl
addr16
in
or
roll
ffree
lret
popa
enter
les
mov
fbstp
push
mov
dec
or
adc
shlb
inc
mov
fwait
jno
out
xor
xorl
push
sbb
repnz
popa
mov
mov
inc
loopne
pop
inc
and
fs
jl
cld
xorl
pop
jo
popf
cli
mov
mov
or
mov
pop
cmp
pop
or
jae
outsb
enter
lds
adc
jge
cmp
jle
jl
sub
dec
xchg
jmp
arpl
hlt
mov
mov
fs
shll
and
jae
jg
gs
lods
movsb
gs
js
loopne
shlb
jle
sub
and
stos
lret
mov
mov
cmp
shrb
iret
and
mov
outsl
call
out
mov
mov
cmp
movsl
jle
lock
test
je,pt
sbb
push
test
push
imul
jmp
mov
aad
adc
dec
mov
cld
rorb
mov
sbb
les
call
cmp
scas
or
test
insl
dec
xor
cli
dec
fistl
aas
push
nop
mov
dec
and
addr16
in
adc
fwait
cmp
sub
pushf
sbb
stc
cwtl
or
jecxz
imul
push
sub
scas
loope
ret
ss
dec
dec
dec
sub
fcmovb
pop
pop
push
aam
pop
inc
mov
js
loop
mov
ret
mov
faddl
fwait
ret
outsb
jbe
mov
xchg
adc
repz
cmp
pushf
rcrl
or
icebp
pop
sub
push
xor
jae
mov
mov
std
stc
inc
lret
fdivr
mov
mov
incl
cld
lock
add
push
jne
call
jbe
imul
aam
and
add
dec
mov
ret
push
pop
cmpb
add
and
pusha
lods
inc
test
outsl
mov
les
rcrb
dec
and
out
push
cmp
pop
dec
mov
insb
adc
movsb
in
pop
push
mov
dec
xchg
fnstsw
inc
out
mov
sbb
ret
cs
orl
mov
adc
pop
pusha
jle
mov
ret
outsl
inc
insb
loop
pusha
cmpsl
sbb
push
add
ret
insb
and
or
movsb
mov
sarl
and
cmp
ja
adc
add
inc
hlt
jg
insb
out
rcll
fisubl
data16
xor
bound
jae
push
xlat
out
cmpsb
clc
popa
or
clc
xor
cmpsl
push
dec
xor
jmp
cld
jecxz
sub
jecxz
adc
pop
divl
rorl
popa
and
lahf
mov
push
out
in
mov
cmovb
fistps
sahf
xor
lret
jae
inc
clc
add
mov
bound
cmp
cltd
repnz
or
push
mov
je
sbb
leave
lcall
mov
out
fstpt
shrb
ret
push
add
les
sub
popf
fcmovbe
sbb
movsb
dec
push
out
push
fwait
test
dec
mov
mov
dec
in
jmp
push
lret
mov
push
outsl
lret
in
insb
xor
inc
jl
test
jns
scas
jae
sbb
and
stos
sub
xor
ficoml
push
js
inc
rcrb
cmp
testb
inc
xlat
jmp
out
dec
hlt
inc
and
sub
js
or
mov
cmc
aad
and
ss
sbb
fdivr
sbb
in
cmp
xchg
or
dec
xchg
sub
push
jecxz
scas
lcall
outsb
stos
js
inc
dec
and
inc
sbb
popf
xchg
out
repnz
test
push
xlat
jge
mov
xchg
sti
cwtl
rorb
and
pop
imul
shlb
jle
orl
mov
jg
mov
fildl
nop
cmp
out
cmp
iret
cmp
lcall
test
inc
sbb
adc
cwtl
push
inc
cmp
sub
cld
add
inc
fdivrl
mov
rclb
ror
loope
stos
cmp
lret
lods
jp
clc
add
test
pusha
inc
lea
addb
or
insb
mov
jmp
xchg
addr16
mov
xor
mov
add
inc
or
and
cwtl
jge
xlat
mov
and
mov
adc
xor
mov
in
push
mov
repz
bnd
loope
filds
or
jmp
sti
cltd
nop
sarl
leave
xor
inc
or
stos
pop
jp
iret
or
ss
or
cmp
scas
ret
imul
xchg
bound
subb
clc
pusha
mov
test
int3
mov
lret
in
std
push
mov
cmp
and
xchg
insb
cltd
cld
aam
sbb
leave
sub
iret
imul
pop
movsl
addl
mov
cmp
les
mov
stos
pop
test
ret
or
fwait
mov
and
jno
push
cs
jl
adc
test
mov
aam
pop
rol
bnd
insb
xor
les
pushf
jg
push
iret
dec
pop
adc
cltd
je
dec
das
sbb
dec
mov
push
push
divl
xchg
add
xor
in
cmpsb
shlb
xor
sbb
insl
mov
push
adcb
inc
cmp
push
pop
imul
fbld
or
test
cmc
xorb
jecxz
mov
mov
je
lock
inc
mov
mov
in
sahf
mov
movsl
idivb
movsl
xchg
cmp
test
pop
outsl
loopne
movsl
in
in
pop
in
mov
ret
out
movsl
loopne
icebp
mov
xchg
out
cwtl
aaa
lods
push
out
add
push
ja
ja
adc
adc
lods
ss
mov
shrl
rol
fisubs
xchg
fimuls
insl
or
daa
jae
unpcklps
repnz
mov
lods
es
mov
rsqrtps
mov
mov
push
xchg
inc
dec
cmp
push
jb
rorb
mov
ret
arpl
iret
sbb
push
pop
fwait
mov
hlt
xchg
inc
cmpsl
insb
jbe
add
jge
cmp
into
std
sahf
adc
insl
outsl
out
stos
addr16
dec
mov
imul
mov
shrl
jle
daa
sub
mov
xchg
sub
sub
push
pop
xchg
in
xchg
cmp
out
mov
mov
inc
pop
mov
jno
pushf
push
inc
lret
pop
ds
loopne
jno
jae
adcl
and
je
add
and
inc
fwait
test
cmp
icebp
or
je
adc
addr16
repnz
int3
orl
xor
sub
jg
sbb
xchg
or
insl
nop
mov
xorb
nop
je
mov
decl
pop
push
loope
pop
pop
xor
sub
cwtl
cmp
sub
std
fbld
insb
rclb
xchg
push
cmp
pop
out
xchg
daa
xchg
sbb
mov
cld
or
jo
divb
insb
fidivs
sbb
jmp
js
inc
repz
inc
push
shr
mov
imul
pop
rcrl
adc
lea
dec
pop
out
jno
dec
push
mov
push
mov
imul
and
adc
adc
insb
dec
es
mov
fdivr
arpl
outsb
pop
das
ljmp
inc
xchg
add
ds
test
mov
or
sbb
pusha
pop
lcall
das
xchg
push
mov
xchg
pop
in
push
sbb
and
lods
mov
nop
inc
nop
dec
orl
ss
iret
inc
mov
cmp
insl
movsl
adcl
daa
inc
es
jbe
sbb
call
fdivrs
fisttpl
sar
fdivp
sbb
mov
sahf
fldl
mov
xchg
xor
add
adcb
xor
jp
xor
nop
loopne
lock
sahf
lret
cmpsb
jns
push
loopne
mov
sbb
sbb
push
mov
rclb
lret
int
es
and
std
mov
mov
ret
stos
ret
mov
movsb
cltd
push
pop
pop
pop
and
outsl
xchg
lds
mov
and
adc
and
xchg
in
test
sbb
call
adc
lea
xchg
mul
sti
js
mov
hlt
dec
or
ljmp
popf
push
dec
je
pop
push
rolb
sbb
ficoms
ret
pop
adc
outsl
fs
cld
sbb
stos
jle
jg
sub
push
xchg
xor
fsubrp
sub
mov
adc
pop
sarb
rcll
xchg
cmc
push
push
and
js
jb
jb
shl
test
xor
loop
out
push
mov
idivl
xlat
jns
aam
test
mov
mov
mov
testl
sub
mov
push
or
jbe
xor
mov
cmp
push
dec
mov
outsl
div
outsb
popa
cltd
mov
mov
jne
jnp
jnp
xchg
pop
outsb
rcll
mov
ds
test
jbe
pushf
push
xchg
clc
xchg
loop
shlb
sbb
or
ficomps
mov
dec
outsl
mov
mov
aas
ja
push
in
adc
ffreep
inc
push
dec
jnp
xor
repz
xor
xor
xchg
xor
mov
std
mov
fstl
shrb
fsubrp
je
outsl
leave
adc
cmc
inc
andl
fs
xchg
dec
jp
inc
inc
jne
cmpsl
test
cmpsb
mov
shll
daa
ret
and
mov
movsl
jl
cmp
add
lods
lret
out
xor
adc
adc
inc
js
leave
adc
pushf
imul
fwait
dec
fiadds
adc
fucomip
fs
fldenv
or
shlb
cmp
push
std
fidivs
cmp
adc
sub
call
adc
loopne
imul
pop
inc
sarb
jl
addl
push
jmp
fldenv
and
sub
jbe
jb
dec
jge
popf
adc
icebp
in
lcall
jno
pop
sbbl
mov
jnp
leave
mov
into
sbb
rcrl
std
insl
repnz
ret
fs
mov
dec
insb
fstpl
sbb
inc
cmpsl
adc
jecxz
aad
loop
roll
fs
xchg
fcompl
xor
clc
sbb
or
fucomp
iret
cmp
adc
sub
clc
loopne
movsb
sbb
ret
cmc
mov
dec
addr16
loopne
push
in
mov
test
mov
in
lea
je
outsl
adc
dec
add
cmp
pop
cmp
pop
jno
add
pop
add
mov
rcll
xchg
mov
mov
insl
sbbl
pop
sbb
adc
pusha
outsb
out
inc
sbbl
imul
pop
icebp
xor
sub
pusha
enter
mov
aaa
xchg
nop
fs
mov
lahf
sub
cmpl
lods
xchg
and
sbb
mov
mov
cwtl
dec
rcll
xor
push
xchg
lret
jp
jno
mov
xor
icebp
mov
jge
icebp
dec
ds
jae
test
cmp
aaa
sbb
pop
or
mov
loop
packssdw
mov
iret
inc
in
mov
sub
mov
test
xchg
out
mov
ss
lret
dec
and
cmp
push
lahf
cli
xor
push
popf
fwait
push
inc
xor
pop
mov
mov
jne
dec
pop
xor
push
or
sbbb
dec
inc
or
mov
cmpb
jo
stos
add
ret
dec
aaa
je
mov
cs
test
jno
pusha
or
sbb
push
in
push
pop
pop
add
push
stc
das
cld
cmpl
inc
mov
xchg
test
aad
mov
xor
or
xor
in
ss
aad
xchg
xor
dec
dec
pop
icebp
cltd
test
sarb
mov
mull
pop
sub
lds
mov
add
inc
out
or
arpl
jne
adc
lret
rorl
cld
pop
addr16
cs
scas
ret
add
and
mov
out
es
and
ljmp
aam
mov
das
out
push
sbb
sbb
leave
addr16
je
or
fadds
and
xchg
inc
test
into
inc
sbb
xchg
inc
iret
pop
int
jne
pop
and
push
daa
enter
dec
icebp
xor
push
ja
push
sub
pop
mov
lock
and
adc
call
lods
scas
xor
xchg
sahf
push
ret
jecxz
mov
jb
rorl
popa
cmp
popl
bound
stc
sbb
or
shll
jb
cmp
rcrb
int
loopne
pop
xchg
repnz
jns
rcl
popa
cwtl
ljmp
cmpsb
cmp
jge
lahf
pop
or
or
inc
das
das
std
into
push
mov
lods
or
call
dec
push
ficoms
lahf
push
xchg
imul
pop
mov
jmp
sub
sub
pop
std
push
test
decl
push
popa
or
daa
fwait
les
or
enter
mov
jecxz
sbb
sbb
adc
inc
mov
test
ret
sbb
add
sub
adc
jge
mov
push
jl
adc
shrb
xchg
mov
lods
inc
jns
mov
xor
inc
jae
call
imul
mov
and
dec
enter
pop
stc
add
xchg
lods
fcompl
sbb
mov
lods
pop
xchg
stos
adc
gs
dec
pop
mov
mov
lds
xlat
gs
cmpsb
mov
pop
arpl
inc
lcall
cwtl
cs
int
jae
into
ret
xor
mov
push
add
leave
test
testl
or
mov
xor
add
arpl
or
xchg
pop
jecxz
call
xor
dec
inc
mov
cld
adc
mov
and
sahf
mov
dec
push
or
lret
cltd
fdiv
pop
cs
cmpsb
int3
pusha
ja
in
jmp
jl
jmp
pushf
shlb
jmp
andl
sub
xor
jg
jb
or
sub
push
jp
loop
inc
pop
jp
aam
icebp
push
or
cli
jb
push
inc
enter
cmp
jno
sbb
add
mov
and
fisubl
xor
cmpsb
jo
fstpl
push
lods
fsubp
add
adc
jo
call
hlt
pop
or
lds
and
lock
add
stc
arpl
jmp
inc
bound
mov
pop
xchg
dec
xor
adc
jecxz
mov
addb
les
add
sub
mov
cmpb
xor
clc
push
test
xor
orb
xor
push
pop
aam
es
dec
pop
cmp
ret
xor
mov
cli
lods
loope
lea
lret
int3
out
repnz
push
lret
cmp
mov
jecxz
push
movsb
repnz
bound
ret
jo
mov
lds
push
xchg
xorl
cmp
nop
pop
cmpsb
sbb
pop
fsubl
jb
lock
daa
test
fldenv
jnp
gs
xor
dec
xchg
sbb
cmp
sub
insb
adc
nop
aas
test
sbb
jns
js
mov
jecxz
adc
and
daa
aas
out
loopne
and
andl
daa
add
adc
cmp
movsl
aam
mov
subl
xchg
or
mov
loopne
lds
sub
pop
sbb
mov
jae
pushf
jne
push
mov
dec
js
inc
inc
arpl
in
mov
xchg
loopne
loope
push
movsl
repnz
pop
cmp
push
mov
jns
cwtl
lods
cld
lods
iret
lods
lods
mov
xchg
test
faddl
inc
icebp
push
mov
or
movsb
ds
add
xor
mov
mov
in
mov
jl
push
enter
push
lret
push
inc
in
pop
jl
int
cmpsl
andl
lahf
std
icebp
add
fucomp
pop
push
inc
into
xor
ss
aad
popa
popf
int3
stos
pop
sub
inc
bound
jo
shl
test
lret
lahf
push
gs
jg
or
ret
xchg
rcl
imul
test
jo
xchg
sbb
lds
mov
iret
subl
cltd
fcoms
adc
dec
dec
shll
add
ljmp
cmp
adcl
cld
pop
into
sahf
sub
in
inc
push
inc
addl
push
js
scas
and
mov
pop
testl
test
sbb
out
xor
out
push
pusha
pop
inc
push
and
repnz
popf
das
aas
cmp
and
ret
hlt
dec
cmp
push
fs
into
and
fstp
push
or
scas
lret
adc
and
xchg
roll
mov
dec
lods
shufps
icebp
mov
sahf
and
test
daa
sub
mov
in
pop
enter
xchg
sub
fistpll
sub
test
push
std
mov
test
mov
pop
and
lock
lock
sub
nop
es
xor
jbe
mov
ds
fsub
adc
jle
add
scas
mov
mov
mov
mov
popf
and
push
push
stc
dec
stc
fsts
adc
ret
dec
test
fdivrs
xchg
popa
and
rorb
fwait
movb
cld
dec
xchg
rcrl
out
add
add
stc
xor
adc
loop
call
and
lds
daa
sbb
inc
shlb
fisubrs
or
cmp
inc
cmp
lret
cmp
cmp
inc
je
mov
les
mov
icebp
into
imul
test
push
sti
in
outsb
stos
adc
sub
lods
subb
add
dec
cltd
mov
jmp
jl
call
mov
jns
mov
inc
sub
stc
rolb
adc
jg
adc
jb
bnd
arpl
das
stos
push
movsl
data16
imul
mov
lods
xchg
lret
fsubrl
xchg
fldl
jae
inc
mov
shll
push
test
inc
fsts
cmp
sub
xor
inc
ds
mov
mulb
xor
fcmovbe
mov
jns
fimuls
inc
data16
testb
aas
les
dec
cmp
pop
xchg
mov
adc
out
mov
stos
jns
mov
stos
adc
lret
xchg
push
add
sbb
dec
lods
or
dec
sbb
lods
outsl
popf
loopne
popf
mov
jne
les
out
xor
rclb
ds
add
sahf
fnstsw
cld
sub
dec
rcrl
adc
aaa
push
inc
sahf
enter
or
mov
jne
xor
pop
push
call
dec
js
int
popf
add
nop
or
or
and
outsb
test
mov
enter
gs
sub
jge
jnp
adc
loop
xchg
add
mov
dec
mov
xor
in
jmp
lea
inc
iret
xchg
stc
push
push
adc
push
or
push
sub
adc
dec
fisubs
data16
cmp
repz
in
adcl
xor
and
shll
daa
test
and
fsubs
xchg
xor
loopne
mov
call
add
adc
jp
fwait
stc
scas
loop
adc
add
mov
add
int3
scas
les
jb
xor
xchg
inc
mov
test
shlb
bound
xlat
sbb
add
sub
xlat
mov
pushf
cld
dec
cmpsl
popa
mov
loope
fimuls
das
jle
sbb
cmp
xchg
stos
fwait
imul
pop
es
stc
push
sub
sbbl
mov
add
dec
fcomps
fs
scas
mov
fdivrl
stos
lcall
xchg
inc
sbb
iret
ret
shrl
subl
pop
mov
cmpsb
mov
mov
dec
adc
add
inc
pop
jnp
cmp
add
out
in
or
loope
outsl
daa
outsb
pusha
push
add
fcomps
xchg
in
mov
sub
aad
xlat
in
outsl
xchg
push
test
mov
cld
loopne
xor
stos
decl
push
xchg
jg
push
push
test
cmp
outsb
jg
xor
loop
clc
mov
mov
outsl
nop
les
out
push
add
rcrl
sbb
movsl
cmc
stos
mov
mov
jno
inc
fs
into
imul
repnz
out
rcl
lods
int
sub
mov
pop
das
popf
inc
jae
pop
mov
call
pop
jecxz
push
fsts
mov
cmp
xchg
lret
js
sbb
iret
fdivr
xchg
icebp
aam
popa
and
mov
pop
dec
dec
push
or
outsb
outsl
mov
stos
adc
and
jmp
or
jns
xlat
and
or
aaa
sub
cmp
or
push
and
push
movsl
mov
sub
out
push
out
inc
sahf
cmc
fsubr
mov
xor
jge
test
fsubrl
cmpsb
and
xor
mov
pop
jge
adc
rolb
enter
xchg
or
std
aad
and
jns
lret
hlt
cmpb
cmpsl
dec
call
out
aas
sub
sar
aas
mov
jns
fnsave
ljmp
aaa
repnz
je
cmp
inc
fdivrs
xchg
xor
fs
test
fidivs
and
mov
push
push
and
fisubrl
je
lea
in
dec
adc
mov
sbb
jmp
pusha
push
xor
enter
pop
out
test
mov
xor
xor
or
xchg
mov
and
fwait
ds
gs
sbb
decb
bnd
in
test
repnz
mov
fimuls
mov
in
fisubrs
jno
lods
jnp
mov
mov
adc
aam
popa
arpl
lret
push
cmc
jge
mov
xchg
pop
stos
mov
add
cld
cmp
adc
sub
outsl
fcmovbe
xor
movsb
cli
test
sub
sub
aaa
jecxz
xchg
mov
in
push
xchg
out
nop
sub
subb
sbb
mov
aas
jne
jecxz
pop
push
xor
imul
fld1
jecxz
xlat
mov
movsl
ja
sbbl
jl
out
dec
sbb
xor
test
add
adc
rclb
inc
pop
addr16
jno
lock
out
cmpsb
fldenv
xor
call
loopne
fwait
lret
out
xor
add
jbe
dec
adc
jo
and
arpl
cmc
pop
pop
nop
mov
mov
fdivl
ja
mov
ret
and
jae
mov
loopne
cmc
fisttpl
adc
jo
and
push
inc
cmp
enter
cmp
aas
pop
pop
insl
enter
xchg
xchg
sbb
adc
aam
lahf
and
adc
jbe
xor
add
rolb
xchg
negb
or
int
mov
das
out
inc
movsl
mov
and
xchg
pop
and
mov
and
in
mov
lret
xchg
rcl
ret
pushf
out
lret
dec
jmp
lret
push
sbb
pop
dec
fdivrs
jmp
push
sbb
add
fs
pop
mov
add
cmp
cld
out
cmpsw
cwtl
lds
add
or
out
or
jno
or
inc
loop
test
dec
in
jmp
add
shll
and
cmp
sub
adcl
sbb
push
push
insl
push
adc
add
and
sahf
mov
xchg
inc
or
xor
test
xchg
fwait
pop
test
sbb
xor
sub
test
mov
sbbl
jne
dec
cmp
mov
ret
fnstcw
aaa
outsb
clc
mov
adc
jns
lcall
pop
sbb
mov
push
mov
and
fsub
jecxz
cmp
push
in
ret
pop
pop
add
xor
imul
mov
xchg
inc
pop
mov
fwait
xor
add
and
aam
lock
aam
out
mov
iret
daa
jge
jmp
push
pushf
fnstenv
xchg
lods
in
mov
add
push
inc
xlat
or
gs
jmp
mov
xchg
lds
inc
jg
sbb
fdivr
and
and
sub
push
mov
sbbl
loope
pop
adc
leave
cmp
adc
je
dec
jge
in
dec
cmp
jnp
pop
fisttpll
leave
ss
jbe
jl
pop
sub
shll
aaa
bswap
xor
add
vmread
and
cltd
or
outsl
fimuls
test
test
cwtl
jnp
fcompl
and
loope
push
add
mov
xor
jle
cmpb
sub
adc
mov
and
jge
xchg
aas
jmp
xor
jbe
push
enter
adc
lods
adc
ret
xchg
mov
mov
lcall
repnz
jge
mov
imul
cmp
test
xor
push
sbb
push
xchg
cmc
cmp
cwtl
movsl
cmp
andb
ret
pusha
push
sub
or
insb
add
out
cltd
mov
xchg
mov
mov
leave
daa
sub
xchg
jbe
int
dec
aad
lods
mov
fldcw
in
incl
fmull
pop
add
and
mov
lods
adc
adc
es
push
test
push
sub
xchg
insb
or
pop
cmp
xor
dec
or
movsb
icebp
mov
in
cmc
arpl
xchg
adc
sbb
pop
jge
add
inc
pusha
lcall
arpl
pushf
test
mov
jg
xlat
xchg
xchg
lret
pop
mov
sbb
mov
or
push
mov
out
sti
and
fiadds
dec
pop
and
aad
xor
test
and
rcl
and
bound
sets
xchg
jl
or
add
lods
ja
add
ret
std
cmp
data16
add
and
out
das
test
lods
into
mov
stos
mov
pop
jle
or
sub
stos
pop
in
rcrl
jae
aaa
inc
cmpsb
stos
xor
add
fs
bound
pushl
mov
pushf
push
push
lret
xorl
jno
cmp
test
cltd
stos
jno
sub
aas
mov
adc
das
mov
push
sbb
xchg
cld
adc
je
fdivrl
scas
ret
rclb
fistps
mov
fdivrl
jmp
xor
pushf
insl
and
daa
stos
ja
jp
leave
jle
stos
and
pop
idivl
or
jmp
fisttpll
icebp
mov
add
jne
lds
stos
out
ljmp
or
or
fbld
pop
sbb
push
nop
inc
test
add
add
dec
and
das
inc
mov
aaa
and
adc
add
mov
pop
outsl
jbe
or
mov
int
pop
sahf
in
cmp
cmc
push
call
push
pcmpeqb
popf
pushaw
popf
gs
adc
lock
jb
fisubs
shlb
or
call
decb
out
dec
gs
ret
popl
fnsave
push
cmp
fsubs
mov
jg
insb
test
push
xorb
addr16
xchg
jecxz
inc
in
push
pop
fwait
sarb
sub
mov
andb
push
xor
sub
push
lock
loop
cld
add
mov
in
xchg
mov
leave
dec
mov
inc
xor
cmp
pop
rcll
xchg
sub
dec
mov
mov
test
cld
es
pop
mov
jge
dec
test
mov
aam
test
mov
and
fmull
repnz
test
xlat
and
fstps
lahf
cmp
add
adc
imul
push
adc
in
sub
testb
inc
loop
sbb
movsb
or
xor
push
movsb
mov
inc
add
xchg
cli
movsl
jae
jno
and
fisubrs
jmp
clc
adc
jnp
add
out
enter
mov
mov
repz
push
scas
inc
inc
in
sbb
ds
movsb
aam
cmp
cld
mov
sahf
sub
lahf
pop
jmp
mov
andb
sub
push
test
push
out
js
into
push
sbbl
divl
dec
and
popa
push
je
or
icebp
push
add
mov
jl
push
sti
arpl
mov
pop
cli
lock
dec
sub
test
dec
cmpb
adc
push
shlb
sbb
jne
lret
mull
mov
aaa
xchg
out
aad
adc
dec
mov
or
das
pop
add
orb
dec
jns
or
out
cmpl
cmp
icebp
sub
stc
add
add
movsb
insb
sub
repnz
stc
movsl
sarb
xchg
xor
dec
lcall
xchg
call
lret
xlat
sub
cmc
data16
dec
dec
inc
jle
pop
int
xchg
jmp
jecxz
push
and
in
ret
jge
cmp
pusha
roll
arpl
repnz
and
mov
pop
out
xchg
cmc
push
sti
iret
and
and
mov
lods
addb
dec
add
jne
xchg
std
aaa
pop
in
pop
inc
addr16
mov
pop
and
je
incl
test
or
nop
jl
cmp
loop
cmpsl
pop
lock
sub
iret
das
mov
in
or
cmc
repz
adc
aad
inc
push
mov
ljmp
dec
jae
test
lcall
lret
pop
shrb
int
push
mov
loop
add
pushf
pop
loopne
push
mov
enter
repz
lods
cmp
pop
fwait
push
sub
leave
out
nop
jmp
imul
aaa
xchg
mov
ss
test
repz
cltd
xchg
lds
rcrb
sub
sbb
out
aas
shrl
cltd
add
sub
maxps
movsb
push
push
inc
mov
addb
push
dec
loopne
out
test
push
sub
and
outsb
cmc
pop
push
orb
pop
das
dec
repnz
and
sbb
sub
sarb
cli
in
js
dec
adc
cmp
push
test
adc
popf
mov
mov
cli
mov
shll
mov
push
sub
std
ss
jbe
mov
jbe
add
cwtl
movsb
pop
pop
pop
add
dec
mov
xorb
cs
push
in
ja
fwait
adc
mov
cs
test
sahf
sbb
aas
int3
jb
ss
aaa
adc
mov
pop
stos
sub
or
outsb
sbb
add
cmpxchg
mov
scas
jge
dec
idiv
and
dec
dec
xlat
sbb
movsb
imul
int3
cmc
popl
je
xor
xchg
cmp
mov
inc
push
mov
mov
fnstcw
shlb
xor
nop
test
dec
jp
xor
fst
fwait
dec
shrl
xor
or
test
xchg
cmpb
stc
xor
xor
jecxz
fcmove
fisubrl
and
in
loopne
xorb
insl
imul
ja
push
pop
xchg
nopl
cmp
loope
cwtl
fs
aaa
dec
popf
mov
cmp
dec
icebp
out
int3
jae
das
or
adc
adc
inc
jl
cmpb
mov
xor
pop
movsl
fsub
mov
pop
mov
jl
jp
ret
ret
inc
push
adc
es
dec
sub
mov
fwait
imul
dec
mov
popf
sub
push
xchg
ljmp
lods
fistpl
xchg
mov
lock
scas
ljmp
push
mov
mov
std
out
lret
ret
xchg
sub
lds
xor
dec
icebp
cmp
leave
inc
sbb
and
mov
out
xchg
mov
test
stos
and
mov
je
call
mov
fnsave
pop
dec
ja
inc
add
or
inc
lret
insb
pop
cmpsl
jg
push
lock
mov
cltd
std
mov
daa
or
xor
notl
leave
shl
sbb
adc
pusha
inc
xchg
xor
fstps
mov
dec
xor
aas
imul
xor
inc
mov
xchg
and
add
push
mov
mov
cmpsl
sbb
loope
cmp
pushf
das
in
add
rorl
xchg
shr
push
or
lret
push
jns
in
idivl
xchg
arpl
orl
xor
aas
ds
movsl
aam
jge
cmpsl
inc
jno
xchg
imul
xchg
jae
add
sbb
das
int3
dec
mov
sti
loope
ret
fbstp
or
mov
mov
adc
iret
outsl
rorb
pop
sbb
lret
inc
shlb
pop
pop
dec
add
adc
in
sar
xor
imul
lret
fcoms
jnp
or
or
mov
pop
lret
mov
fcmovbe
sub
push
and
and
sbb
xchg
inc
jmp
mov
inc
dec
repz
mov
jae
xor
inc
dec
or
stos
lcall
inc
and
icebp
mov
lahf
sahf
std
mov
fbld
mov
sbb
jecxz
inc
xchg
push
mov
les
dec
rcr
stos
aas
cmc
in
bound
jge
test
pop
cs
dec
test
pop
pop
stc
rolb
sbb
mull
iret
xor
push
pop
push
sub
mov
sub
mov
lahf
dec
scas
jmp
or
push
clc
or
mov
and
pop
cmp
orb
jg
xor
and
es
cmpb
push
cmp
inc
xor
test
push
movsb
fsubrs
push
dec
in
and
pop
sarb
sbb
sti
mov
into
lea
add
xchg
cmpsb
icebp
mov
jbe
pusha
cmp
jnp
out
daa
lea
lods
fcomps
js
int3
adc
rcl
fmull
mov
out
mov
lods
jb
cld
insl
shl
inc
lcall
mov
hlt
in
mov
ss
out
sti
leave
sbb
xor
rcrl
push
adc
outsl
xor
add
mov
mov
dec
aas
mov
shrl
mov
mov
jo
sub
and
cmp
ss
cmp
mov
ja
or
sub
push
xchg
mov
add
push
stos
mov
pop
add
je
xchg
bound
pop
cs
jecxz
jo
and
xor
mov
daa
fisubl
push
fsubrs
ret
mov
cwtl
in
loop
test
jns
and
sbb
loopne
dec
repnz
ja
cmp
jbe
arpl
add
dec
pop
push
lea
mov
fwait
data16
lea
fbstp
data16
out
and
xchg
es
xlat
fdivrs
sub
out
mov
std
pop
pop
xlat
push
pop
and
cmc
repnz
cmp
stc
lds
out
lock
mov
xchg
test
mov
subb
in
pop
pushf
in
andb
daa
add
es
hlt
jo
push
push
stos
and
xor
inc
hlt
cld
iret
iret
mov
scas
test
add
add
xor
dec
in
and
scas
cmpsl
imul
add
mov
adc
push
xlat
jb
daa
push
dec
sub
push
pop
orl
dec
cli
cmp
ret
ret
cwtl
mov
xchg
or
pop
xchg
pop
add
fidivl
lret
fists
imul
jmp
cmpsb
pop
sub
push
push
test
cs
inc
jne
push
sahf
add
or
stos
bound
pusha
cld
pop
int3
shll
mov
jmp
in
push
push
sarb
dec
pop
inc
dec
cmp
xchg
mov
add
push
outsl
mov
das
cmp
lahf
aam
pop
xor
sbb
inc
in
hlt
dec
arpl
adc
js
adc
mov
cmpsb
std
fstpl
jno
inc
test
jb
jae
dec
ljmp
sub
decb
mov
mov
adc
outsl
dec
in
mov
lea
lods
and
in
test
clc
mov
stos
mov
lret
xchg
mov
test
je
mov
xchg
or
lahf
pop
mov
test
cmp
enter
and
push
iret
loop
pop
push
imulb
and
mov
leave
xor
cmp
cmp
mov
add
adc
sub
ja
loope
scas
and
gs
dec
test
das
testl
stos
sbb
test
mov
push
pop
xchg
pop
dec
mov
mov
pop
xor
ja
xchg
mov
cmpsl
jae
xor
jge
clc
into
fnstenv
and
clc
mov
outsl
in
lahf
cmc
mov
scas
pushl
and
xchg
pop
mov
stos
push
inc
lret
sbb
test
jge
mov
cmp
loopne
add
push
xchg
or
sub
mov
xchg
or
clc
dec
mov
sub
negl
xor
adc
push
pop
in
loopne
ret
out
cmp
int
sbb
dec
add
lods
xchg
scas
push
fs
jmp
adc
and
mov
stos
test
pop
scas
sbb
mov
mov
icebp
pusha
or
mov
sub
and
sbb
jecxz
aaa
sub
mov
sbb
jl
call
negb
push
lea
mov
cmpb
dec
push
scas
push
inc
push
inc
xor
loopne
or
call
lods
sub
adc
out
mov
arpl
mov
xor
hlt
sub
ret
mov
push
repz
dec
jno
mov
sbb
and
push
cmp
inc
int
dec
out
lea
sti
dec
lcall
pop
lods
jo
jecxz
dec
mov
lds
in
push
push
xor
test
mov
push
ret
fisubrs
hlt
and
pushf
cmp
or
mov
push
pop
imul
sub
in
adc
rcr
jne
jne
xor
or
mov
stos
addr16
test
iret
jnp
js
mov
jl
push
punpckhbw
jge
xor
aaa
inc
add
dec
inc
pop
inc
inc
xchg
xchg
xor
pusha
loopne
insl
sbb
int
fisubs
jge
xlat
sahf
adc
mov
jmp
xor
and
cmpl
lcall
into
push
cmp
fstl
push
mov
scas
fcomps
xor
lret
or
mov
cmp
fwait
leave
inc
in
rcrl
jns
mov
ret
mov
or
lds
adc
xchg
xor
add
iret
or
xor
mov
jmp
retw
or
stc
jp
mov
js
adc
pop
lds
iret
movsl
in
and
sub
andb
or
add
insb
pop
shll
xchg
mov
je
shll
rcrb
lock
sbb
mov
lds
pop
and
sbb
cmp
psubusb
xchg
dec
push
clc
rolb
cmp
push
loop
dec
insb
xor
lods
leave
sbb
sub
push
shrl
lods
cmpsb
je
cltd
mov
push
pop
jae
cmc
jo
ss
sbb
rorb
mov
mov
pop
mov
popa
sbb
push
hlt
cmpsb
mov
and
je
xchg
repz
push
in
xor
add
mov
adc
aaa
jns
ja
lds
scas
cmp
pop
jb,pn
filds
jo
adc
pushf
fcmovu
and
fidivrs
pop
mov
data16
ret
sub
xor
mov
mov
movsl
lret
xor
les
addr16
pop
testl
dec
xor
enter
cmc
jne
in
xchg
shl
arpl
lcall
cs
or
or
push
loop
pop
sbbb
mov
mov
idivb
negb
push
mov
popa
cld
xorl
and
repz
add
mov
ljmp
neg
mov
sub
mov
divb
insb
test
dec
xor
mov
push
jne
mov
cli
xchg
fdiv
and
ja
jg
rcrb
xchg
mov
pop
jp
sub
fwait
in
out
adc
add
lahf
mov
add
and
jbe
push
ficomps
xor
inc
jg
mov
xor
sbbl
sbb
inc
sbb
sub
mov
aaa
sbb
mov
and
sub
das
add
movsb
movsb
xchg
lret
enter
lock
mov
daa
mov
sbb
xchg
mov
mov
sti
lods
scas
adc
sub
sarb
aam
add
jns
mov
adc
xchg
sub
add
sahf
fs
shll
pop
je
clc
mov
loopne
cmp
jp
push
enter
sarl
dec
shr
repz
hlt
sub
add
or
in
outsl
dec
test
loopne
icebp
adc
insb
popf
fcmovnbe
enter
ja
cmp
dec
cs
movsb
cmp
inc
filds
das
add
orl
add
sbbl
and
jns
aas
mov
stos
sub
dec
dec
or
in
mov
inc
adc
sbb
dec
lret
mov
mov
xchg
in
stc
jl
mulb
in
mov
sub
pop
xchg
out
mov
loopne
jo
or
add
cmpsl
popf
data16
push
pop
mov
mov
sbb
mov
out
push
mov
pop
icebp
rolb
pop
mov
call
add
mov
addr16
movsb
jge
dec
jp
negb
and
cmpsl
and
imul
in
push
mov
push
mov
lret
xchg
xlat
dec
pop
es
fwait
incl
xor
and
dec
jo
mov
loopne
xlat
xchg
mov
imul
push
faddl
add
aam
xor
dec
sbb
int3
dec
pop
mov
imul
mov
lea
add
adc
test
imul
into
leave
nop
popa
xor
inc
adc
out
mov
dec
cwtl
imul
adc
mov
dec
ret
fistpll
xchg
inc
inc
mov
pushf
mov
mov
movsb
adc
sub
mov
in
cmp
jl
pop
jbe
call
fmuls
lock
mov
outsl
and
in
enter
add
idivb
roll
push
data16
daa
pop
push
out
pushf
rclb
mov
cli
arpl
pushf
jle
or
push
fcmovu
stc
xor
mov
imul
pop
push
mov
stos
cmp
mov
out
cmpsl
fdivl
mov
push
and
add
call
pop
jge
enter
xchg
push
cmpsb
outsb
pushf
orl
sub
xor
sub
pop
and
inc
shrl
in
addb
test
lret
rcll
fdivl
adc
fsubs
sbb
push
and
mov
xor
imul
mov
add
xchg
and
cmp
scas
imul
enter
cmp
push
les
jge
ja
inc
xchg
call
add
or
fcmovbe
xor
mov
or
cltd
add
jbe
cmp
adc
popf
cmp
cli
in
and
fs
mov
repz
in
sbb
nop
cmp
sarl
hlt
test
aad
rcll
data16
xchg
stos
jg
xor
stc
into
cmp
pop
pop
loopne
adc
xor
test
and
ja
dec
pop
aaa
sti
cmpl
pop
push
leave
xlat
pop
jecxz
mov
mov
inc
or
sub
in
cmc
imul
rcrl
jae
fldenv
imul
jg
adc
fiaddl
or
push
aam
popa
frstor
mov
lods
mov
mov
pop
dec
imul
arpl
push
dec
inc
dec
pop
lret
dec
shrb
mov
ret
push
sub
inc
add
sub
mov
scas
imul
test
mov
in
jmp
dec
add
in
xchg
adc
ds
xchg
ret
jecxz
pop
iret
lds
hlt
out
fwait
add
inc
mov
xchg
cmp
pop
jl
cli
add
lret
add
fistpl
ret
ss
mov
addr16
pop
push
rcrb
xchg
pop
jno
adcb
pop
in
cmp
shl
sbb
or
test
sahf
into
fisubrl
xchg
fidivl
test
sub
pop
mov
aaa
sbb
jmp
push
in
pop
inc
daa
mov
fadds
fisttps
mov
lock
lock
push
sub
push
mov
push
cmpsl
aas
cwtl
sbb
inc
fisubs
fisubrl
xchg
push
sbb
push
adc
out
ret
or
test
xchg
insl
mov
imul
fistl
stos
sub
loop
out
jp
nop
inc
js
dec
dec
ja
aam
rclb
shl
and
jle
jbe
inc
push
xor
lahf
pop
mov
adcb
cld
out
add
cmp
aas
test
sbb
stos
xor
ret
lcall
mov
ret
out
sbb
stos
pop
jbe
mov
xorl
aas
pop
push
inc
dec
add
fs
mov
fmull
stc
dec
mov
cmp
pop
push
imul
mov
hlt
loopne
jmp
push
xor
jp
pop
adc
ficoml
mov
in
ret
lods
popf
mov
pop
outsb
jo
adc
cwtl
imul
hlt
and
in
ret
adc
add
dec
dec
pop
pop
out
testb
push
lea
mov
xchg
adc
xlat
test
insb
mov
imul
cmp
test
sti
ljmp
pop
and
hlt
add
pop
sbb
enter
xchg
mov
mov
pop
push
pop
stos
push
adc
inc
int
adcb
or
in
testb
sub
aas
inc
add
notb
aam
or
xchg
enter
sbb
xchg
mov
addr16
loope
in
or
clc
cli
mov
xchg
cwtl
sahf
in
repz
stos
imull
aam
bound
popf
jbe
aam
ficoms
ljmp
fistl
fiadds
cli
or
aam
sbb
out
gs
outsl
enter
mov
xorb
jae
nop
sahf
fidivrs
xlat
iret
mov
mov
cmp
pop
jae
pop
sub
sbb
sbb
insb
std
jne
pusha
jo
stc
mov
bound
xor
call
jns
nop
ljmp
sub
lods
push
cld
jnp
dec
fisubrl
xchg
out
jl
jno
and
jnp
movsb
mov
int3
sub
mull
mov
nop
scas
mov
xchg
rclb
sub
push
or
popa
arpl
subl
ret
test
fs
mov
pop
insb
sub
or
imul
and
pop
pop
insb
jns
sti
ret
in
cmc
mov
daa
je,pn
mov
rcrb
mov
das
or
jge
ja
dec
jge
xor
pushf
cmpsb
dec
inc
push
or
pop
jbe
nop
test
mov
cmp
or
js
sbb
leave
cld
pop
ror
and
stos
pop
or
fimuls
int3
mov
dec
adc
xorb
es
add
cmpsb
cld
jnp
les
insl
into
xchg
jge
mov
stc
push
js
mov
shlb
mov
mov
fdiv
mov
lret
movsl
pop
pop
ljmp
cmp
sub
pushf
cli
insb
mov
out
stos
addl
pop
jae
adc
fs
xor
cmpsb
rol
sub
inc
out
insb
jmp
cmp
dec
leave
test
sahf
mov
mov
lea
inc
out
hlt
imull
and
sub
lods
rorl
andl
sarl
cld
int
cmp
xchg
jecxz
add
ret
int
icebp
mov
ja
pop
cmovae
mov
pop
sarb
in
push
jo,pt
loop
loope
cs
adc
ss
in
cs
or
jo
clc
inc
mov
mov
insb
outsb
cmpl
push
add
sub
out
loope
adc
dec
or
out
lahf
mov
or
add
in
adc
outsb
es
daa
xor
stos
rcpps
xlat
jle
dec
test
pop
lods
aaa
lcall
mov
shll
adc
pop
push
out
fsts
push
xor
pop
pushf
es
cmp
dec
jae
mov
xlat
push
xor
or
das
sti
rcll
into
icebp
pop
mov
sbb
add
repnz
pop
imul
dec
xchg
movsb
popl
fs
fcomps
or
or
jge
mov
add
mov
out
push
mov
or
xor
jge
mov
add
repz
mov
dec
dec
shl
and
mov
dec
lds
aad
mov
cs
nop
lret
cmc
add
cmpsl
push
cmpl
mov
push
sbb
jg
lds
imul
cmp
cmpsl
lea
fcomi
xlat
sub
fs
ret
hlt
lds
shlb
jl
xchg
mov
jnp
outsl
dec
das
insl
loope
inc
xor
insl
fistps
pop
shl
shr
icebp
nop
stos
stc
sti
ljmp
push
das
je
xchg
mov
fsubl
shr
in
inc
and
cmp
in
jmp
mov
out
add
bound
xchg
lods
gs
mov
sub
enter
and
mov
push
xchg
jp
xchg
inc
call
in
mov
lock
divb
aas
test
pushf
fnstsw
push
notb
idivb
cmpsl
js
repnz
cmp
dec
cmp
adc
lret
pop
xchg
or
pop
dec
or
or
adc
fstl
add
or
jae
mov
or
loopne
adc
pop
jle
es
jmp
inc
sub
in
and
out
ds
or
in
ds
sub
adc
lret
cs
jae
pop
scas
shrb
mov
dec
xor
movsb
pusha
xchg
dec
xor
sub
adc
dec
inc
cmp
andl
xor
inc
std
les
sbb
cltd
add
mov
cltd
rcrl
int3
fstl
sahf
hlt
out
sbb
std
shrl
out
inc
mov
adc
sbb
je
enter
int
daa
jecxz
adc
sbb
pop
loopne
adcb
insb
jmp
mov
enter
mov
rcll
pusha
rep
push
nop
pop
xchg
shl
ds
sbb
jecxz
enter
into
ds
push
rcl
sahf
clc
adc
jecxz
push
xchg
mov
lea
dec
cld
inc
jbe
push
dec
scas
mov
sti
xchg
call
mov
test
cmpsb
mov
stos
out
les
sbb
in
push
and
jnp
subl
jno
adc
mov
lods
ret
mov
xchg
adc
shll
cmp
scas
outsb
add
mov
lods
imul
sbb
add
push
or
sbb
dec
and
ja
jmp
and
push
mov
add
pop
pop
imul
and
or
mov
sub
jl
xor
testb
loopne
pop
jnp
leave
std
pop
imul
pop
cmp
xor
fs
push
cmpsb
jl
cmp
pop
scas
icebp
xchg
dec
fstl
out
push
stos
sub
negl
lret
cld
ror
inc
hlt
add
fnstenv
sub
xchg
mov
adc
mov
stos
ficoms
leave
xor
sbb
lahf
cs
sahf
in
movsl
xchg
mov
jnp
cmc
adc
adc
pop
jnp
inc
mov
aam
xor
jno,pn
pushf
inc
push
iret
dec
jmp
jmp
sbb
mov
mov
push
shll
fldt
and
fists
xchg
mov
enter
cmc
rorb
inc
add
push
add
addr16
pop
or
jno
aad
ja
push
xor
dec
sbb
and
xor
pop
sbb
pushf
xchg
test
push
mov
adcl
mov
mov
dec
add
mov
test
in
jb
adc
pop
adcb
adc
add
jecxz
out
xchg
gs
dec
es
xor
pusha
push
adc
dec
nop
pop
inc
mov
mov
aad
out
cmp
popa
add
push
cwtl
jae
addb
in
das
nop
xchg
rolb
pop
xchg
jbe
fs
xor
dec
lods
adc
mov
push
nop
cmpsl
inc
stos
cmpsb
sub
push
mov
push
inc
mov
stos
scas
xchg
call
mov
pop
xchg
cli
mov
dec
icebp
push
pop
xor
hlt
xor
mov
mov
dec
inc
int3
negb
mov
dec
punpcklwd
int
pushf
leave
adc
cmpsl
pop
push
jns
fcmovne
into
jb
mov
sbb
movsb
arpl
iret
push
xor
jl
push
pop
pop
shlb
sbb
jmp
stos
mov
out
xchg
ja
lea
outsb
mov
xor
arpl
sti
test
mov
pop
xchg
lods
push
push
mov
fdivs
mov
mov
out
push
and
test
sbb
sbb
cltd
mov
ja
pop
negb
mov
stos
push
pusha
nop
je
push
aaa
dec
or
nop
dec
mov
push
repz
dec
imul
add
daa
in
adc
lcall
mov
cltd
inc
xchg
ret
es
sub
das
enter
mov
push
subb
arpl
cwtd
stos
cmc
js
cmp
std
mov
test
repnz
lods
mov
test
cmp
mov
lahf
aad
sub
loope
xchg
jge
adc
jecxz
dec
les
mov
jne
stos
rcl
sub
aad
sub
cltd
push
xchg
sbb
jge
daa
jno
sbb
mov
stos
fwait
xchg
les
inc
pop
movsl
lods
cli
outsl
xor
dec
sbb
mov
pop
mov
enter
xlat
cmpsl
mov
mov
lock
pop
out
lcall
shlb
xchg
jp
add
lea
inc
clc
rcrb
push
jae
inc
jecxz
sbb
dec
xor
jle
push
jbe
xlat
and
lods
push
movsb
and
or
ja
pop
dec
or
call
int
mov
or
xorl
and
ror
sar
xor
and
dec
pop
xlat
sub
pop
cmp
imul
dec
jae
ret
cmpxchg8b
iret
mov
add
inc
pop
aad
xor
sub
mulb
adc
scas
adcb
jbe
xorb
adc
mov
roll
xchg
inc
out
push
jnp
leave
arpl
inc
sub
jecxz
xchg
rclb
add
bound
leave
lret
jbe
fstp
mov
xorl
stos
and
ds
xor
jnp
test
cmc
mov
pop
inc
movsl
insb
arpl
clc
repz
push
shlb
loope
fnstenv
lret
pop
je
daa
dec
xchg
jns
mov
dec
outsb
add
rcr
sub
adc
xchg
and
pop
xchg
bound
int3
sub
cmp
jl
cmp
mov
sub
fists
pusha
not
in
xchg
push
dec
mov
add
jl
sbb
fwait
mov
cs
into
roll
repz
push
pop
push
sub
jnp
roll
sbb
xchg
test
sub
std
mov
inc
jmp
ds
addr16
mov
lock
and
or
cmpsl
movsb
repz
jb
mov
cmp
xchg
add
or
adc
les
push
cmp
add
outsl
stos
xchg
mov
call
call
push
xchg
mov
out
cmpsb
mov
mov
es
xchg
enter
pause
lret
jmp
iret
mov
shrb
movsl
mov
out
icebp
stos
mov
data16
jns
sub
loopne
call
aas
mov
mov
or
xor
mov
test
jge
adc
sub
xchg
hlt
pop
push
stos
notl
jl
mov
mov
mov
jge
sahf
iret
dec
cs
faddl
xor
mov
inc
mov
aas
rcll
data16
loopne
mov
repnz
js
pop
xor
pop
jnp
xchg
push
xchg
push
xor
lods
es
sbb
cmp
mov
sbb
push
xor
imul
mov
test
decl
mov
nop
out
sti
shl
inc
xor
aad
jns
add
js
dec
mov
adc
leave
jo
sub
push
dec
hlt
adc
mov
popa
xor
sub
les
xchg
adc
sarb
subb
add
dec
popf
adc
jno
mov
jne
lea
rcll
push
push
subb
dec
sub
jmp
data16
imul
jp
ficomps
adc
js
sbb
xor
inc
adc
cmp
arpl
stos
pop
cmp
adc
std
imul
cmp
sub
jbe
test
js
push
jns
jae
cltd
and
imul
dec
shrl
sub
pop
ja
loop
aad
ret
inc
jnp
outsb
cs
cmp
sbb
clc
mov
aad
lcall
inc
pop
pusha
dec
or
pusha
push
andb
cmp
sbb
stos
sbb
mov
push
sub
inc
bound
paddb
fucom
fs
test
or
mov
outsb
dec
mov
xchg
ret
jg
test
cmpsb
cld
loopne
push
icebp
or
test
movsl
es
or
dec
and
into
ret
and
push
pop
jp
jmp
ljmp
xchg
xor
mov
lret
arpl
push
not
std
mov
xor
mov
jle
dec
pop
arpl
cs
flds
xor
in
dec
mov
inc
stos
int
mov
sub
divb
fcoml
loop
pop
and
sahf
fists
int
and
pop
cmp
les
jo
outsl
sub
sub
inc
arpl
or
jmp
and
xchg
lcall
insb
xchg
out
movb
sbb
cli
repnz
and
in
sar
iret
inc
lea
test
nop
mov
sarl
mov
xor
xor
ret
lcall
cltd
jae
inc
dec
xchg
ret
mov
mov
add
stos
int3
fcomi
sbb
mov
adc
js
xor
cmp
mov
jbe
icebp
adc
push
movsl
cs
insb
dec
inc
xchg
mov
inc
orl
shr
lds
nop
cli
or
cmp
xchg
ror
xchg
fists
xchg
shr
xlat
cmpsb
stos
xor
test
sbb
cmp
add
pop
lret
or
test
or
dec
rcrl
aas
and
xchg
push
popa
in
jl
into
jl
xchg
call
cmp
sub
ss
cmpsb
inc
push
pop
jp
dec
dec
pop
push
ror
imul
adcb
or
imull
dec
or
inc
frstor
repz
leave
fldt
inc
inc
jecxz
cmp
adc
or
xorl
nop
push
pop
push
pop
mov
mov
lret
psrad
cmpsb
and
jp
stos
arpl
pop
mov
fnstsw
adc
jge
mov
add
xchg
adc
ficoms
pop
mov
and
repz
je
jge
xor
dec
lods
pop
stos
arpl
pop
mov
jmp
sbb
hlt
mov
inc
insl
jno
sbb
mov
jle
mov
mov
push
mov
cmp
mov
push
mov
fdivrs
and
stc
in
insb
add
sbb
mov
push
out
loop
repnz
cltd
mov
push
test
mov
xchg
and
jle
jb
stos
sets
xor
aad
jnp
push
es
xor
insl
imul
data16
mov
es
int3
jg
out
insb
jmp
pop
loope
mov
sahf
or
fistl
cmp
loope
std
out
test
and
loope
test
test
aam
ljmp
dec
fsubr
lods
xchg
popf
add
test
cmp
ss
rclb
icebp
sub
and
int3
xor
pop
fstpt
rolb
adc
inc
jae
dec
rorl
mov
loope
insb
lcall
lcall
mov
xor
lahf
mov
push
cmp
mov
pop
adc
dec
inc
ljmp
and
orl
pop
fucom
sbb
xchg
lock
push
fwait
xor
mov
loope
insb
pop
jmp
clc
mov
pop
aaa
mov
mov
mov
stos
mov
scas
dec
dec
outsl
loopne
jg
xchg
imul
cmc
jno
pop
add
aad
xchg
jle
cmp
in
bound
neg
xor
je
cmp
mov
icebp
sbb
pushf
jecxz
out
jnp
mov
jge
rorb
pusha
or
push
int3
jmp
data16
cmp
push
xor
das
incl
addr16
iret
xchg
in
insw
mov
lret
xchg
pop
inc
jbe
enter
insb
push
inc
mov
push
add
mov
mov
cmp
and
cmpsl
inc
fidivrs
jmp
lret
imul
and
mov
ljmp
ss
es
dec
popf
xor
xchg
push
mov
push
jo
subb
bound
xor
popf
flds
and
ficoml
shlb
or
dec
je
sub
dec
push
cmc
and
mov
loopne
sub
inc
test
xchg
bound
in
and
movsb
cmc
add
jmp
push
mov
pop
lea
push
loope
lahf
shll
fadd
pop
idiv
jo
inc
lods
in
jnp
cs
xor
xlat
cs
jno
lcall
adc
je
pop
xlat
mov
dec
dec
cmp
mov
loopne
inc
mov
outsb
push
out
adc
into
rolb
pop
aaa
and
mov
and
or
add
aaa
dec
and
ret
arpl
mov
push
sub
js
outsl
mov
movb
hlt
mov
call
and
leave
in
leave
pop
mov
popa
into
push
scas
xlat
cmp
sbbl
nop
sbb
jb
and
leave
mov
jge
pop
jp
dec
xor
insl
dec
ljmp
inc
fs
push
add
ljmp
mov
xchg
inc
and
add
leave
mov
xor
mulb
mov
movsb
adc
ja
sahf
sub
lods
sbb
xor
into
bound
scas
les
nop
xchg
cwtl
jo
clc
test
lock
sti
popa
lcall
pop
dec
mov
mov
sub
or
jo
out
repz
mov
sub
jge
mov
pop
insl
mov
sub
inc
lods
and
inc
cmp
inc
xchg
and
aad
and
push
add
jg
sarl
cld
adc
mov
nop
cmpsb
cmp
xor
adcl
add
cmp
xor
popf
out
notb
in
bnd
lods
and
xor
xchg
sub
fs
test
in
ljmp
dec
adc
push
mov
jnp
test
sub
idivb
push
or
mov
jmp
stos
ret
jl
fnstenv
push
cld
xchg
enter
and
shrb
dec
mov
lcall
lock
movsl
jno
enter
lods
int
iret
lret
dec
repnz
xchg
push
fsubl
pushf
ss
lcall
js
fnstenv
ficompl
bound
mov
mov
and
pop
roll
fstp
addr16
sub
fstp
sahf
sub
mov
fucomip
pop
pop
dec
mov
daa
inc
in
repnz
sbb
fsubr
jmp
orl
in
xor
cld
push
int
addr16
adc
fiadds
and
cmp
test
and
sbb
pop
lds
or
mov
xor
pusha
scas
push
cli
fimull
ds
cmpsl
call
push
inc
mov
jns
jne
daa
iret
and
roll
jmp
and
mov
inc
shlb
and
outsb
enter
mov
lds
cld
jae
out
dec
jnp
xchg
ljmp
fbstp
inc
jno
push
scas
seto
dec
adc
mov
aam
mov
out
gs
adc
lcall
enter
pop
hlt
outsb
fdivl
pusha
in
pop
sub
fidivl
pop
std
loop
js
and
xor
mov
pop
loop
insl
negl
aaa
inc
sub
cmp
inc
mov
jb
rolb
jmp
mov
jg
xchg
out
mov
pop
imul
lock
dec
mov
rorl
and
loop
mov
movsl
xchg
subl
mov
pop
cmp
jge
inc
xchg
js
aaa
icebp
inc
mov
lea
cmp
mov
xor
push
imul
jle
cmp
jmp
jo
not
dec
imul
jle
daa
lods
fdivl
adc
push
xor
insl
sbb
cwtl
movsb
inc
dec
data16
inc
sbb
adc
out
aam
rol
xchg
sbb
mov
or
test
icebp
mov
pop
xchg
mov
imul
out
and
mov
mov
nop
arpl
into
cmc
jo
xor
cmpsl
in
dec
incb
jne
cltd
or
xchg
bound
ds
incl
mov
les
insb
mov
mov
push
pop
ss
mov
movsl
shll
cld
push
xlat
ret
enter
fwait
fwait
mov
push
test
adc
hlt
out
movsl
mov
dec
icebp
sbb
xchg
inc
push
cmp
fidivl
mov
or
jmp
cmp
fcmove
xchg
mov
pop
rcrb
addb
bound
sbb
addb
aad
adc
sbb
push
out
push
je
jecxz
pop
cmc
popf
pop
pushf
negl
iret
aad
cmp
outsl
mov
ja
out
fsubrp
cmp
lahf
sbbl
mov
out
inc
lods
push
xchg
or
repz
add
pop
jg
sub
lea
testb
fdivrs
dec
lcall
stos
sbb
jno
dec
mov
push
xor
out
insl
pop
cmpsl
les
cltd
dec
aas
leave
bsf
or
or
jp
pushf
aaa
inc
orl
sbb
mov
in
sbb
pop
mov
out
dec
sub
icebp
cwtl
add
mov
mov
cmp
sbb
imul
push
cwtl
ror
scas
push
dec
mov
mov
jo
dec
fstpt
lret
mov
adc
das
mov
mov
mov
fadd
lods
mov
or
aaa
nopl
pop
repz
xlat
xor
and
je
push
mov
fdivl
xor
out
lea
adc
push
inc
ss
adc
xor
pop
aas
incb
ss
jecxz
mov
push
leave
int3
pop
jnp
cld
lock
mov
mov
and
enter
movsb
jg
xchg
lds
adc
cmpsb
pop
or
jmp
fldcw
movsl
jbe
jbe
lods
sub
jecxz
mov
test
aam
movsb
mov
pop
inc
out
jb
sub
push
int3
mov
dec
mov
clc
jl
movsl
xor
pop
mov
mov
mov
jno
jg
daa
enter
xlat
xor
add
xchg
and
leave
cmpsb
icebp
loope
es
cmc
xor
adc
sub
cmp
push
pop
pusha
jne
push
leave
fimuls
mov
test
sbb
xchg
adc
iret
mov
lea
mov
std
jle
mov
inc
push
inc
xchg
adc
movsl
cmpsb
dec
enter
clc
jp
cmp
dec
mov
les
bound
out
xchg
inc
fiaddl
repnz
mov
jl
sub
lret
push
cli
lret
rorl
icebp
insb
lods
or
xor
cmp
xchg
sub
xor
mov
lahf
push
leave
js
xchg
cwtl
rorl
call
stos
mov
out
inc
aas
mov
or
inc
xor
repz
xchg
ja
jno
and
jmp
and
ss
aad
hlt
test
loopne
mov
xor
pop
and
stc
cwtl
jl
cs
dec
sbb
sub
ret
xor
sub
iret
pusha
outsb
data16
and
inc
cmp
fdivrl
divps
jecxz
inc
jmp
cmp
mov
push
int
and
push
jnp
xchg
fpatan
jb
mov
cltd
push
sub
mov
call
movsb
ror
jmp
fistps
mov
in
cli
gs
pop
lods
and
sub
popf
ds
lret
das
lods
mov
mov
xchg
leave
sub
sub
in
rorl
out
xchg
mov
pushf
pop
jle
push
or
mov
and
fistl
xchg
inc
pop
push
das
push
test
dec
cmp
push
jno
and
pushf
cmp
in
cli
xor
subb
pop
push
inc
fmull
aaa
loope
popa
dec
aas
add
in
mov
in
mov
imul
call
mov
insl
jp
stos
out
inc
jbe
push
inc
sub
add
sti
sub
or
mov
aam
dec
fcompp
stos
sti
orb
push
icebp
aaa
xchg
cmp
repnz
int
or
xchg
inc
adc
mov
push
mov
out
sub
sbbl
gs
push
adc
nop
loope
arpl
mov
adc
and
inc
fnstsw
repz
shll
sub
inc
lods
lret
jns
repnz
xor
inc
sub
inc
subl
or
pop
jecxz
push
mov
scas
ss
in
arpl
cmp
lods
push
push
xchg
cmp
aam
cltd
dec
cmp
fisttpl
icebp
pop
fimull
fsubrl
pop
mov
in
xor
outsb
out
and
push
inc
dec
pop
ja
hlt
imul
inc
push
addr16
leave
mov
lret
or
daa
lods
das
insb
movsb
pop
mov
sbb
push
jae
dec
inc
test
fwait
cld
inc
out
ret
lock
add
lahf
movsl
fists
xor
test
and
mov
fiadds
jmp
add
adc
sti
jae
ret
outsb
enter
jge
mov
push
inc
pop
and
mov
lods
push
sub
sbb
cmc
loop
out
addr16
shll
or
ja
jo
push
add
outsl
and
jle
popf
lahf
repnz
add
insb
push
and
pop
mov
adc
stos
jl
mov
lods
stc
mov
out
and
insl
push
dec
popa
mov
test
subb
mov
cmp
add
inc
cmp
aas
inc
out
and
push
jbe
enter
xchg
and
cmp
jmp
adc
cmpsb
jmp
pop
les
pop
cmp
or
or
xor
jno
push
outsl
dec
xor
push
pushf
lds
push
leave
dec
and
mov
sbbl
and
push
mov
and
add
cmpsb
or
mov
xor
mov
test
js
imulb
stos
sbb
cli
lods
xlat
test
adc
inc
dec
mov
jecxz
pop
es
push
mov
xor
cmp
sbb
fcomip
movsb
dec
inc
jno
mov
mov
fcom
and
inc
mov
fsubl
and
push
push
mov
ficompl
into
sub
xchg
or
rorl
dec
jg
hlt
ss
cld
xchg
dec
out
xchg
xor
mov
out
jl
jnp
fisubs
sub
push
dec
ja
filds
pop
int
test
push
push
xor
sti
xchg
mov
push
test
or
add
adc
inc
movsb
dec
dec
insl
push
jae
fsts
xor
xchg
mov
adc
cmpsb
fsubrs
mov
jns
popf
add
clc
lods
fwait
addr16
sti
jns
lahf
inc
dec
cmp
mov
mov
cmp
mov
adc
lods
inc
mov
repnz
ret
cmp
lcall
in
dec
xchg
dec
and
test
lahf
pop
subb
adc
mov
cmc
mov
test
fstl
mov
fisubl
ret
add
cs
ss
adc
push
or
mov
enter
mov
and
loop
insl
out
data16
hlt
pop
je
sbb
fmul
dec
xchg
mov
mov
ret
js
clc
test
xor
push
decb
xchg
adc
addr16
std
sub
mov
loope
int3
std
lahf
ja
xchg
add
add
mov
aaa
mov
test
dec
adc
test
ret
movsb
mov
and
jno
push
pop
cwtl
adc
imul
or
iret
jle
mov
xlat
test
scas
lods
scas
ds
mov
mov
loopne
pop
jo
test
test
pop
push
cmc
xor
mov
pop
inc
cmpsb
aam
hlt
incb
jp
aas
or
xor
jno
cli
inc
push
out
jnp
sbb
push
or
inc
movsb
sub
mov
or
adc
or
ds
ss
inc
sub
ret
inc
add
cwtl
mov
dec
mov
out
jnp
mov
mov
incl
out
and
shlb
inc
loope
add
sub
mov
lahf
xlat
insb
ret
popa
dec
icebp
cli
repz
cmc
ja
push
or
mov
or
xor
adc
fmul
mov
pop
in
loopne
add
jno
pop
xor
sbb
push
iret
lock
movsb
jp
ret
mov
movsl
jnp
and
mov
bound
scas
push
jno
bound
pop
sub
les
jp
inc
mov
imul
out
xchg
xor
mov
push
lcall
jnp
push
push
lea
mov
jle
pop
arpl
pushf
cmp
fsubp
stos
cmpb
xchg
pushf
add
stos
sbb
push
adc
test
nop
sti
xchg
js
stc
inc
addr16
jle
xorb
cs
jae
cwtl
mov
mov
movsl
bound
pusha
addr16
icebp
push
or
lds
cmpsb
lds
jbe
inc
andb
pop
xchg
loope
mov
int3
aas
adc
test
dec
test
pop
test
loop
ja
mov
fdivs
mov
and
dec
out
xchg
in
xchg
push
cwtl
cmp
xchg
adc
leave
mov
dec
xor
mov
stc
jmp
or
inc
jle
into
mov
and
adc
pusha
mov
stos
jmp
in
xor
push
sub
les
adc
push
sbb
pop
add
dec
rcll
sti
jg
dec
inc
mov
ljmp
sar
pusha
sbb
addr16
mov
int
push
imul
ljmp
push
mov
clc
loopne
pop
adc
popa
dec
xchg
or
adc
pop
xchg
jno
stos
data16
and
mov
dec
pop
jno
dec
sbb
xchg
xchg
sbb
pop
xchg
push
push
mov
popa
fcoml
in
shl
pop
ljmp
mov
icebp
fcoml
outsb
xchg
cli
mov
test
xor
aam
insb
fsubl
mov
cmp
jns
sbbl
jbe
xor
mov
mov
sub
and
push
je
ja
mov
cmpsl
jl
xchg
or
jecxz
loop
rcrl
movsb
aad
push
int3
movsl
mov
outsl
es
or
insb
jbe
mov
imul
mov
ret
les
inc
inc
pop
sti
xchg
mov
out
sbb
pop
popa
insb
push
mov
insl
dec
sub
ds
cmp
or
dec
orb
sub
cltd
lods
mov
jl
jmp
dec
inc
xchg
ljmp
out
and
push
mov
mov
dec
push
movsb
je
mov
call
mov
cmp
and
jno
fstps
notb
sbb
lahf
mov
out
cmp
xchg
push
movb
pop
xchg
lret
jo
out
sub
push
cmp
push
mov
inc
daa
stos
jecxz
lret
jmp
popa
rolb
push
shll
inc
enter
dec
mov
pop
dec
mov
in
jb
jae
iret
call
jge
ds
mov
movsl
dec
xor
rcll
push
push
jnp
call
sbb
lret
pop
pop
jle
sbb
jecxz
push
aaa
outsl
sahf
aad
int
lock
adc
lock
icebp
dec
and
sub
outsb
dec
bound
hlt
xor
shll
in
mov
nop
dec
mov
test
cli
mulb
xchg
pop
cmc
jl
das
push
sbb
inc
sub
jg
adcl
int
pop
dec
imulb
outsl
sbb
adc
push
int
call
ljmp
cmp
adc
test
pop
jg
pusha
jb
popa
cmpsb
push
sbb
ss
test
jno
xlat
xlat
sbb
je
inc
push
push
adc
test
outsb
mov
in
popa
jl
arpl
fisubl
mov
or
pop
dec
push
dec
sbb
adc
cs
push
or
dec
xchg
xor
jmp
pop
pop
sub
and
or
push
sbb
testb
in
sub
and
push
jp
test
ret
push
mov
push
pusha
out
xor
pop
and
pusha
aad
lret
sub
adc
punpckhwd
orb
lea
outsb
rorb
fwait
mov
mov
adc
add
movsl
jge
jne
mov
xchg
je
jno
push
xor
out
mov
repnz
xchg
dec
cmp
xorb
sbb
xchg
add
mov
jb
add
leave
xor
ret
jge
pop
adcb
lods
push
add
std
xorb
sub
cld
add
xchg
sbb
pop
pop
inc
je
aam
cmp
das
data16
mov
rcr
xchg
dec
loop
pop
insl
int3
adc
mov
dec
out
push
test
int
dec
inc
mov
mov
les
clc
or
pushf
jns
fwait
mov
xchg
or
addr16
fstpl
mov
mov
mov
or
push
cwtl
roll
xchg
ljmp
sub
dec
ret
xlat
lret
dec
aaa
or
xor
mov
xor
mov
push
adc
lds
js
push
jne
andl
cli
test
data16
xor
mov
addr16
jp
dec
or
repz
pop
fisubrl
cmp
dec
es
cmp
into
test
jge
sbb
in
cmp
mov
sub
dec
cli
add
nop
cmpsb
fbld
mov
shll
lahf
xchg
jge
sahf
push
fistpll
loop
jo
adc
ret
add
repnz
xor
cwtl
xlat
sub
scas
lahf
mov
xchg
push
in
imul
sbb
jp
int3
andb
fisubrl
xchg
aad
mov
stc
mov
outsl
pop
mov
xchg
mov
jno
jmp
jns
loop
cmp
mov
dec
stos
sub
shrl
in
iret
sub
pop
and
jp
or
je
add
popa
mov
pop
lcall
out
mov
sbb
pop
sub
sbbl
mov
or
aaa
icebp
aam
aad
cmp
xchg
pop
mov
lock
or
sub
loope
fists
sub
sti
fmuls
fwait
mov
add
mul
xor
add
jo
mov
mov
push
lods
or
xchg
pop
mov
pop
scas
mov
out
sub
pop
out
cmp
mov
dec
mov
mov
imul
and
sarl
xor
gs
lods
or
sbb
cmp
adc
mov
push
cmpsb
sub
and
adc
sbb
sub
xchg
jg
or
mov
push
mov
cmpl
dec
xor
mov
daa
and
cli
mov
imul
sub
sarb
in
mov
fwait
mov
repnz
mov
ds
jnp
xchg
orb
outsl
mov
enter
stc
inc
mov
lods
push
adc
ret
fiadds
jns
imul
push
scas
aam
scas
pop
mov
pop
neg
lret
ss
sahf
aad
pushf
dec
jo
in
fcmovb
lahf
psubd
pop
xchg
mov
add
push
mov
aam
mov
repnz
out
mov
cmp
push
or
dec
mov
dec
stos
and
push
pop
pop
xor
push
fidivs
dec
sbb
cwtl
jo
xchg
nop
out
scas
xchg
jns
imul
adc
sbb
sub
jo
sbb
lahf
das
js
test
dec
xlat
jl
popf
cltd
adc
das
pop
xchg
and
nop
push
stos
mov
daa
push
imul
fists
fsubs
ljmp
lock
sbb
imul
lods
sub
out
lods
sbb
cmp
mov
mov
sarl
mov
mov
popf
stos
popa
sub
test
jae
xchg
or
je
fdivrl
jmp
push
insl
ret
lcall
xchg
add
cmp
inc
mov
push
inc
daa
lret
push
pop
jmp
call
aas
aam
clc
jbe
and
shll
scas
cmp
sbb
push
jl
and
mov
cmpsb
mov
jl
or
jae
popa
cmp
ss
inc
dec
jbe
aaa
cmp
loopne
adc
add
outsb
and
bound
imul
cltd
push
outsb
cmpsb
imul
mov
fucomip
lcall
je
xorb
sub
repnz
lea
in
out
movsl
adc
pop
jae
push
cwtl
mov
std
mov
and
cld
mov
mov
sbb
or
popf
ret
mov
cmp
jno
pop
push
cmp
jl
dec
jg
repz
push
gs
mov
ret
jne
pusha
and
xor
or
pop
adc
lret
or
mov
xor
mov
jp
lods
out
sti
and
mov
icebp
add
jns
pop
mov
xchg
sub
lahf
enter
xor
addr16
aam
xchg
lret
dec
dec
cmp
in
std
shll
shl
push
mov
loopne
jp
test
je
dec
adc
fists
mov
test
xor
and
or
jecxz
jo
adc
xchg
cld
and
xchg
mov
mov
adc
ss
loop
idiv
mov
mov
push
hlt
rcll
movb
fucomi
push
stos
insb
test
push
mov
jp
or
lods
pop
out
pop
inc
pop
pop
sbb
jle
jg
sbbb
or
lahf
scas
mov
jne
or
jg
or
mov
pop
dec
xor
mov
adc
sub
or
js
or
adc
sbb
adc
push
sub
pop
xchg
push
mov
cmp
sub
aad
addr16
int3
test
adc
add
xor
push
ret
repnz
lahf
add
cltd
add
lock
aam
add
icebp
xchg
int
and
shlb
aam
pop
mov
or
mov
jle
idivb
mov
mov
icebp
ljmp
push
mov
adc
cmp
and
loopne
ljmp
mov
xor
imul
push
jg
lods
lahf
setge
pop
add
cmp
mov
out
je
in
jecxz
sbb
aas
ret
jl
cltd
push
push
lahf
sub
xorb
mov
jl
push
addr16
jb
iret
ljmp
lret
push
mov
xchg
xchg
push
mov
dec
popa
push
fwait
lods
sub
jb
pop
subb
das
cmc
out
jne
icebp
dec
rcl
mov
jg
sub
adc
cwtl
rcr
fidivl
or
sub
in
je
movsl
push
push
fsts
mov
dec
xchg
mov
and
cmp
rol
xor
in
addr16
and
cmp
rcrb
les
dec
movsb
pushf
test
cmpsb
jnp
jbe
lods
and
cmp
sub
xchg
jne
ret
outsl
repnz
push
ds
jnp
or
cmp
jns
xor
das
rclb
or
in
loope
inc
pushf
mov
lds
mov
int
outsb
notb
repnz
mov
xlat
mov
xlat
cld
in
negb
adc
xor
adc
mov
lcall
andl
scas
ret
pop
scas
mov
lods
pop
xchg
or
ds
jecxz
cwtl
inc
imulb
adcb
add
popf
stc
je
icebp
mov
test
imul
test
mov
adc
jne
out
dec
pop
int
mov
mov
in
cmovle
popf
les
aas
loopne
and
imul
xchg
mov
push
pop
call
add
fiadds
xor
cwtl
mov
mov
loopne
inc
ljmp
mov
jle
dec
shll
jge
xor
sahf
sti
mov
push
mov
push
lcall
stos
lret
sbb
scas
xor
fimull
das
subl
lret
ja
cmp
add
imul
xchg
xor
in
cltd
push
adc
sub
xor
jl
and
add
push
mov
push
mov
stc
mov
movsb
movsb
mov
sbb
loope
lock
jl
and
sbb
mov
pusha
mov
jmp
repnz
stc
aad
aam
call
or
push
or
sub
cmpsb
es
enter
dec
stc
mov
xchg
test
pop
or
insb
push
call
xchg
jo
sbb
adcb
jl
movsl
aad
dec
fwait
or
jp
inc
leave
xor
pop
out
arpl
and
xchg
fstps
les
and
jg
mov
cmp
jnp
xorl
aam
mov
sbb
add
add
xor
or
test
cltd
mov
cmp
stc
inc
lret
jmp
xor
ss
ud1
inc
adc
pop
cli
jecxz
push
xor
dec
mov
inc
out
adc
aaa
pop
nop
jge
in
jmp
jmp
xor
jle
scas
jle
add
fcomi
mov
xchg
add
mov
test
ja
pop
lea
adc
xchg
adc
mov
dec
js
test
xchg
pop
ja
js
pop
sahf
dec
sub
push
cmp
xor
dec
rcll
mov
mov
in
es
sbb
movsb
cmp
xchg
sub
lods
fs
push
movsl
kunpckwd
aas
movsb
mov
arpl
inc
divl
cmp
lret
movsb
fdivr
sbb
std
lods
fwait
cmpsb
call
lods
int3
pop
in
xor
jg
shl
cmp
and
repnz
mov
movsb
ja
loope
shrl
pushf
imul
lret
adc
test
add
xchg
pop
add
cmpsl
xchg
fdivl
in
loopne
mov
cltd
mov
int
mov
xchg
xchg
inc
dec
dec
cmp
xchg
jmp
mov
outsl
outsb
adc
sbb
dec
arpl
mov
xchg
inc
lods
in
popl
popf
arpl
push
add
sbb
sub
mov
mov
pop
mov
sub
jns
cwtl
cmpsl
test
jl
push
push
jge
das
sub
jl
push
add
sbb
aad
xlat
nop
adc
call
sbb
xchg
fimuls
aaa
enter
and
jl
push
jge
outsb
or
or
sub
add
sub
push
inc
and
out
jge
pushf
sbb
fwait
popa
jnp
shll
mov
mov
in
jg
dec
push
inc
dec
mov
lds
out
dec
xor
stos
mov
push
push
in
fdivl
adc
add
popf
adc
sbb
push
push
lds
push
faddl
mov
pusha
push
aas
xchg
sub
fxch
mov
je
pop
nop
pusha
sahf
lods
ss
mov
inc
sub
fisubl
aaa
sti
sub
xor
int
mov
inc
sti
mov
mov
jg
icebp
and
push
stos
adc
or
inc
inc
xor
xchg
arpl
fcomps
shl
or
mov
ds
ffree
cmpsb
rclb
clc
inc
cmp
sub
or
jle
cmp
pusha
add
pop
clc
add
testl
jnp
stc
faddl
adc
pop
jp
or
inc
adc
shlb
pop
pushf
adc
aam
xorl
jecxz
fxch
jmp
sub
ret
or
fidivrl
jne
sbb
or
cwtl
dec
mov
leave
movsb
into
push
mov
mov
hlt
cltd
iret
adc
shll
sub
pop
mov
pminsw
outsb
out
outsl
popa
mov
outsl
xchg
pop
es
adc
js
xchg
inc
push
or
pop
dec
mov
dec
and
cmp
ret
push
out
cmpb
cmp
idivl
divl
xchg
mov
lock
pop
jg
jle
push
shlb
or
fucomi
subl
mov
rorb
jle
cmpsb
jmp
xchg
cmc
fwait
pop
imul
push
fcomi
or
or
imul
gs
mov
mov
sub
pop
testb
mov
inc
xchg
das
movsb
pop
test
and
repnz
jbe
and
lock
adc
xor
mov
sub
fwait
mov
fmuls
jmp
aaa
mov
aad
in
xor
push
cs
jns
pushf
dec
lea
imul
pop
pushf
jg
and
jbe
mov
xchg
jl,pn
xchg
xchg
mov
popa
negl
test
xchg
cmc
dec
nop
jbe
fdivl
add
lahf
dec
xorl
jle
ja
out
push
popl
push
jne
sub
inc
mov
ficomps
pop
push
pop
or
push
push
push
inc
mov
lcall
pop
shlb
test
sbb
push
out
outsl
sti
xchg
ror
cli
push
mov
or
adc
inc
arpl
sub
dec
dec
mov
inc
decb
lcall
and
hlt
mov
inc
jns
outsb
jge
add
test
shrb
pop
pop
lahf
cmp
jle
adc
imul
cmp
mov
sti
out
repnz
add
idivl
popf
sub
mov
mov
push
scas
sub
ja
and
lret
mov
add
inc
pop
xchg
sub
xchg
fcom
sub
push
in
xlat
inc
outsb
cmc
fimull
mov
decl
cmp
jle
cmp
jle
cltd
fbstp
push
mov
mov
jl
xchg
loope
pushf
or
int
mov
cli
mov
sar
mov
fdivl
mov
add
mov
adc
int
cli
inc
push
cld
rclb
ss
subl
cmp
movsl
dec
lcall
push
sub
adc
push
add
cmpsb
xlat
lea
fcoml
lahf
mov
inc
push
xchg
or
pop
sbb
or
fwait
mov
push
sbb
lahf
test
fcmove
int
dec
and
pop
xor
sub
scas
addr16
or
subl
sub
test
sub
sub
rcrl
clc
gs
pop
add
shrl
lahf
lods
push
or
add
cmpb
mov
lret
lcall
lahf
and
jno
test
popf
jnp
jb
mov
ja
mov
mov
jl
call
shlb
pop
mov
mov
cli
fcmovbe
in
sub
adc
or
dec
popa
stc
sbb
hlt
outsl
ss
divl
sub
shlb
test
jle
dec
iret
lahf
fildl
cld
aam
out
outsb
inc
add
shlb
scas
jl
lret
out
sub
cmp
scas
insl
cltd
jae
in
push
stc
sahf
test
stos
cmp
inc
or
adc
outsb
stos
inc
mov
cmpsb
push
jnp
inc
adc
cmp
pop
adc
inc
dec
push
cli
or
iret
xchg
jecxz
cmp
push
into
sub
adc
loope
mov
jl
out
bound
pop
repz
jnp
movsb
mov
call
scas
stos
into
in
mov
cwtl
mov
mov
shl
or
sub
gs
and
aaa
testl
shll
and
dec
out
push
xchg
into
int
or
pushf
divb
inc
in
push
dec
push
ja
or
fstpt
dec
aad
add
lcall
ret
lock
stos
stos
idivb
inc
addr16
in
jp
xchg
mov
sub
mov
test
jp
incb
add
insl
pop
cmpsb
mov
out
fs
test
xchg
out
sbb
ret
sahf
cmp
das
insl
std
std
dec
jbe
cwtl
addr16
jl
imul
je
or
lahf
push
ljmp
push
mov
neg
mov
xor
sub
push
pop
push
jbe
mov
xor
ret
jle
ds
lods
sub
fs
mov
insl
pop
es
lea
sbb
push
in
xchg
fmul
dec
std
fwait
insl
enter
pop
cmp
dec
std
dec
gs
pushf
enter
push
xchg
xlat
fcmovu
push
repnz
arpl
stc
xor
or
sahf
xor
xor
jg
sbb
rorl
xchg
test
imul
clc
sahf
dec
and
mov
dec
pusha
pushf
push
cmp
fistl
dec
xor
scas
insb
test
inc
pushf
pop
mov
adc
push
sarb
fbld
sahf
mov
jb
stc
xchg
movsl
xchg
mov
fbld
lcall
clc
push
imul
imul
sti
dec
jp
add
push
push
jg
mov
or
enter
or
cmpsl
and
pop
inc
clc
sbb
mov
inc
inc
sbb
xchg
pop
lods
nop
ds
push
cmp
ds
cmp
sub
xor
xchg
pop
lahf
push
and
out
xor
jno
aam
mov
adc
adc
push
mov
jp
roll
sbb
int
cmp
stc
push
cmpsb
push
stc
psubq
and
jne
xor
xor
addl
dec
lret
mov
loopne
jp
xor
sbb
jne
cltd
fldenv
mov
add
dec
fcoms
icebp
subl
mov
loop
imul
fisubl
push
loope
cltd
in
pop
lcall
sub
pop
and
mov
bnd
test
repz
mov
ds
jp
push
jge
jmp
sbb
lds
and
xchg
shl
jle
cmp
fldl
pusha
jmp
or
orb
pop
int3
add
ret
sub
into
int3
add
mov
dec
jle
push
out
push
loopne
lahf
adc
dec
jg
adc
movsl
mov
cmpsb
or
fsubs
jle
cwtl
or
clc
adc
push
pop
repz
andl
fisubl
hlt
std
clc
pop
lods
dec
jg
popa
or
mov
rcrb
std
fstps
jae
cwtl
inc
mov
mov
jbe
pop
fs
push
out
movsb
or
fisubs
mov
sub
adc
ret
xor
fbld
mov
popl
inc
negb
jg
xor
sub
or
iret
pop
inc
bound
incl
push
test
xchg
cmp
fistpl
adc
rorl
jb
xchg
push
lret
test
sbb
fidivl
push
pop
jno
in
xchg
or
dec
lcall
fdivl
jae
imul
outsl
mov
fwait
les
faddp
stc
add
jae
insl
ret
push
cs
xchg
xor
sbb
mov
sbb
or
insl
xchg
out
pop
add
jl
test
inc
loop
outsb
inc
mov
cmp
imul
mov
xor
popa
mov
push
fdivrl
outsb
clc
mov
test
xorl
mov
add
cmpsb
fisubrs
jns
add
shlb
cmp
mov
movsl
xlat
clc
call
pop
popa
mov
ret
leave
adc
pop
cmpsb
inc
xor
cmp
push
push
inc
push
std
lods
pop
xchg
das
and
ficoms
pop
mov
insb
add
dec
lods
popf
daa
lahf
dec
jge
dec
mov
xlat
or
and
push
test
add
push
imull
inc
sub
insl
add
popf
jno
push
jg
aas
outsl
xchg
int
scas
xor
lret
adc
pop
mov
movsb
adc
fcoms
aam
mov
mov
in
fiadds
push
loop
idivl
popf
or
cmpsb
stc
aam
loope
push
push
mov
addl
je
cmp
push
dec
fs
xlat
test
imul
insl
or
cmp
negb
or
icebp
pop
sub
outsb
iret
push
pop
mulb
mov
cmpsb
inc
xlat
ds
or
add
inc
movd
lret
pop
cmp
sub
je
aas
mov
jl
push
cmpsb
frstor
das
jge
jg
mov
outsb
jo
cmpl
and
xchg
cmp
sub
daa
add
lods
fisubl
repz
fcomi
jno
sahf
lret
and
or
xor
mov
push
std
mov
inc
daa
dec
jno
and
hlt
mov
loope
cli
aas
cmp
xor
mov
xchg
jae
dec
movsl
mov
jo
in
mov
adc
push
push
inc
inc
notb
fsubp
and
xlat
push
adc
sub
out
pop
popa
cld
cmpsl
test
pop
out
sub
movsb
jmp
and
add
addb
or
push
mov
test
xor
and
push
push
and
xor
iret
and
imul
and
popf
and
and
mov
sbb
js
dec
sti
dec
mov
xchg
push
fcompl
push
dec
push
arpl
push
fistps
subl
loope
fadd
pop
push
es
hlt
xchg
mov
xor
xor
push
push
dec
dec
test
call
mov
sbb
rol
ds
or
sub
test
adc
inc
or
andb
cli
iret
es
pop
inc
and
test
stc
jge
mov
dec
aad
in
out
jle
mov
pop
jmp
xor
movsl
jo
xor
clc
ret
imul
push
test
jnp
mov
add
cwtl
gs
fsub
mov
cmp
xchg
dec
inc
sbb
mov
mov
mov
loop
pop
dec
mov
or
pop
pop
mov
sub
cs
add
movsb
mov
add
jmp
fildll
inc
pusha
sub
add
add
loop
movmskps
aas
or
dec
je
mov
sti
popa
push
lret
mov
outsl
sub
arpl
popa
and
xchg
pop
adc
dec
pop
mov
fld
adc
or
fldz
add
push
dec
pop
out
sub
or
inc
incb
sub
push
lods
popf
pop
decb
cmc
retw
jge
mov
or
dec
jge
pusha
sbb
cmp
popf
jg
xor
cmp
ret
leave
jmp
decb
push
or
insb
push
fwait
adc
scas
into
test
cmc
xor
sbb
hlt
pop
xchg
jns
sub
dec
test
jle
mov
test
or
int3
ror
dec
jmp
out
push
jne
fs
stc
loop
in
fisttps
cmpsb
pop
and
test
cmp
xlat
or
push
mov
leave
js
xor
leave
imul
enter
push
dec
repz
fcoms
in
xchg
fs
psubsw
fcom
or
fimull
imul
sub
and
dec
and
ja
std
mov
js
or
mov
test
fwait
add
mov
push
mov
movl
mov
idivb
outsl
enter
add
or
fbld
and
add
cmp
pop
mov
xchg
pop
dec
jmp
adc
jb
iret
pop
and
xchg
pop
jbe
out
mov
xchg
fiaddl
mov
mov
jmp
pop
add
pop
mov
clc
dec
repz
mov
rorb
leave
or
mulb
add
or
pop
mov
pop
ficomps
jle
popf
sub
fists
pop
pusha
push
repz
sbb
add
lds
add
or
sub
loop
xor
fbstp
cmpsb
xorl
xor
stos
jo
nop
mov
jbe
mov
and
xchg
cli
enter
enter
dec
mov
xor
xchg
cmp
mov
inc
and
out
mov
popf
and
jne
jnp
sarl
loopne
int3
mov
lods
iret
imul
sbb
sub
imull
sahf
lcall
movsb
mov
jle
notl
imull
inc
imul
adc
int
xor
xchg
mov
xor
cmp
enter
rcrb
and
xor
xlat
cmp
movsb
inc
xchg
fistl
inc
test
fcmove
push
aaa
mov
icebp
mov
rorl
push
mov
sub
and
shlb
outsb
pop
dec
daa
fmull
pop
or
fnstsw
and
add
or
bound
or
jo
fldcw
adc
insl
lods
loop
imul
or
loopne
outsb
jb
out
pop
mov
insb
ficomps
inc
sbb
or
inc
cmpsb
ljmp
push
enterw
push
enter
xor
aas
or
inc
fdivrs
xchg
xor
iret
adc
cs
lret
out
sbb
in
jge
jmp
mov
mov
xlat
lahf
and
arpl
xchg
jbe
push
cmpsl
add
aam
and
adc
xor
lcall
sbb
mov
fcompl
adc
mov
fmul
gs
sahf
push
adc
aaa
int3
lret
cmp
push
pop
in
aad
loopne
or
lds
leave
into
and
lods
ljmp
inc
dec
push
fdivs
insb
fisttpll
lock
movsb
mov
sub
mov
sti
fisubrl
cmp
mov
movsl
xor
xor
push
sbb
adc
add
mov
jae
dec
pop
xchg
cmp
fbstp
loop
xchg
mov
out
cmpsl
mov
cmc
and
adc
xchg
mov
mov
roll
flds
test
add
xor
and
pop
mov
arpl
mov
jmp
in
adc
mov
adc
outsl
imul
cmp
xchg
mov
dec
or
pop
movsl
cmp
jmp
cli
andl
leave
mov
and
aas
aas
aaa
jle
mov
stos
and
push
jb
add
es
stc
iret
faddl
xor
ljmp
hlt
les
cmp
mov
push
mov
aam
aad
loop
push
xor
inc
ljmp
fidivrl
or
inc
jae
jl
adc
add
push
and
jecxz
dec
adc
das
cmc
movsl
mov
hlt
sbb
sbb
mov
xor
add
jp
and
jl
fcoml
cmpsb
add
cmpsl
mov
mov
sbbb
dec
js
lods
jp
inc
in
roll
jbe
jne
pop
mov
ss
scas
xchg
cli
imul
cmp
cltd
sbb
xchg
mov
scas
test
movsb
popf
mov
inc
jge
add
xor
stc
insl
lds
dec
pop
lcall
cwtl
xor
xchg
scas
or
mov
popf
subb
mov
jae
sub
xor
cmp
push
enter
mov
inc
or
shrb
arpl
test
mov
popf
pop
lods
or
xchg
pusha
mov
xlat
mov
sahf
xchg
or
fyl2x
jmp
inc
sbb
lods
jle
cmp
pop
jns
jmp
bound
mov
aaa
cmp
cmpsl
mov
pop
andl
pop
dec
hlt
into
cld
es
jmp
inc
std
push
mov
mov
cmp
sub
addr16
loopne
mov
or
cmpl
test
mov
push
aas
cld
je
bound
pop
or
mulb
mov
pop
iret
mov
xchg
js
inc
inc
push
addl
inc
cmp
xchg
loopne
outsb
lds
stc
ret
push
lea
push
push
add
enter
test
xchg
loopne
rcll
ret
inc
scas
hlt
push
mov
push
mov
into
sbb
jo
hlt
jnp
pop
enter
mov
add
push
push
cmp
sbb
test
adcb
and
dec
in
in
mov
push
fwait
inc
movsl
ficomps
cmp
sbb
inc
pusha
sbb
push
loopne
cmpsb
cmp
mov
jg
push
loopne
xchg
push
or
pop
xor
repz
xlat
mov
ja
adc
mov
mov
push
lret
push
sbb
pop
hlt
fdiv
push
shr
arpl
ljmp
adc
popf
fwait
adc
adc
pushf
subb
xchg
cmp
jecxz
add
ja
sbb
sbb
movl
pop
loopne
ss
int
ss
add
sbb
outsb
sbb
loop
push
xchg
add
test
insl
and
sub
clc
push
add
and
add
out
int3
cwtl
sahf
sti
call
push
sahf
pop
loop
and
pop
dec
sbb
nop
into
push
sub
mov
adc
mov
add
mov
cld
push
jo
adcl
mov
add
imul
pop
sub
push
xor
fwait
shrb
movsb
push
popf
jmp
gs
jae
add
push
dec
jbe
cmp
jmp
push
mov
add
shrb
lods
sub
test
push
dec
addl
pop
mov
jmp
jbe
add
add
adc
mov
jmp
hlt
jnp
mov
invd
fisttpll
inc
cmc
mov
push
mov
and
loope
or
mov
daa
sahf
sbb
popa
shlb
xchg
sub
pop
sbb
mov
pop
fmul
mov
pop
mov
imul
or
mov
dec
daa
cmc
sbb
cmc
fdivrs
js
out
std
out
test
push
pusha
iret
xor
aas
pushf
enter
dec
mov
mov
add
aaa
repnz
jne
scas
jns
pop
scas
push
xchg
test
mov
call
and
push
or
xchg
clc
inc
xchg
iret
shl
dec
push
mov
fcmovu
fisttpl
pop
push
imul
sbb
pop
fucom
adc
push
insl
ljmp
ds
cmpps
adc
data16
outsb
mov
ret
fldl
xor
icebp
arpl
xor
pop
aas
aaa
jecxz
adc
loope
xor
in
arpl
xor
mov
adc
xchg
push
mov
inc
cld
movsb
das
dec
push
jnp
pop
out
add
in
nop
mov
call
jmp
push
mov
pop
imul
ss
mov
out
stos
mov
les
sbb
sbb
dec
stos
out
call
mov
xorl
scas
push
mov
xchg
pop
pop
mov
inc
mov
add
push
dec
add
jp
and
pop
fldcw
jg
adc
negb
sbb
cmove
xor
mov
dec
leave
inc
fmuls
in
dec
cmc
mov
add
divb
pop
popa
sbb
sarl
outsb
xchg
int3
jo
sbb
xor
mov
xchg
mov
mov
cmp
insl
sbb
mov
out
mov
inc
ds
gs
sub
inc
push
lret
push
movsl
outsb
xchg
inc
mov
dec
mov
mov
jbe
sub
xchg
and
loop
xor
inc
cmp
push
or
scas
loop
or
test
dec
orb
mov
adc
jo
pop
sbb
jg
push
imul
aam
movsl
pop
das
mov
mov
adc
pop
inc
mov
fcom
xchg
mov
add
xchg
sbb
out
mov
add
out
pop
std
xchg
test
iret
mov
popl
rcrb
and
push
xchg
sbb
ds
xor
cwtl
and
cmpsl
push
sub
and
insb
std
je
pop
insl
xchg
mov
lods
call
in
jb
adc
dec
repz
xchg
outsb
adc
int3
mov
mov
mov
loopnew
sub
sahf
mov
pushf
sub
outsb
or
mov
sahf
in
xor
arpl
push
call
mov
stos
mov
adc
mov
and
jo
dec
lods
mov
fisubrl
xor
lods
inc
and
sarl
cld
adc
stos
xchg
mov
fdiv
adcb
pop
jmp
mov
movsl
push
xchg
or
and
subl
outsb
ret
and
xchg
imul
inc
repnz
jne
cmp
cmpsb
jp
dec
mov
pushf
dec
mov
das
hlt
jl
scas
aam
mov
xchg
dec
js
sbb
fs
clc
jg
mov
xchg
and
je
sub
ret
pop
or
lret
shl
and
bound
dec
cmp
fwait
movsl
bound
ja
imul
pop
ret
and
aam
and
jmp
cli
mov
push
pop
jne
subl
sbb
dec
test
mov
jne
fcompl
mov
arpl
inc
add
cmp
std
pop
test
filds
ja
int3
test
dec
pusha
imul
adcb
cmpsl
jmp
mov
and
enter
testl
mov
into
add
sbb
mov
xchg
push
gs
nop
and
mov
stos
lock
call
icebp
int3
jb
das
loopne
lds
insl
repz
sbb
jecxz
repz
outsb
inc
add
lahf
inc
clc
mov
push
mov
je
data16
mov
jl
xchg
inc
push
mov
pop
icebp
push
stos
add
or
jl
mov
sbb
xchg
lret
mov
arpl
pop
add
jbe
aas
mov
scas
outsb
std
dec
and
imul
xor
fldenv
clc
mov
xchg
ljmp
and
xor
jg
sbb
inc
out
icebp
xchg
cmp
xchg
aad
push
fistl
xchg
xchg
push
xlat
dec
mov
inc
in
push
dec
cmp
js
cmp
cmc
pop
aaa
aam
rolb
outsb
frstor
jmp
push
adc
insl
test
adc
mov
fsubrs
aam
push
addr16
push
pop
push
dec
push
lret
xchg
push
int
imul
push
jbe
adc
mov
dec
fstpl
pop
mov
jns
adc
std
ljmp
ret
lock
mov
xchg
mov
xor
push
lahf
ss
loop
mov
mov
enter
mov
ror
nop
xor
cld
mov
xor
xchg
pop
cmpsl
decb
ja
dec
js
jmp
les
nop
fmul
js
xor
adc
addr16
rcr
fdiv
mov
cmp
xchg
inc
xchg
js
movd
or
pop
inc
in
xor
xchg
dec
xor
xor
imul
sbb
inc
fmuls
lret
sbb
inc
ja
add
sbb
imul
sti
or
push
rcll
mov
imul
pop
mov
cld
jecxz
loope
push
xchg
dec
test
pop
xorl
andl
out
gs
mov
popa
dec
sti
daa
leave
data16
scas
pusha
sbb
pop
mov
mov
xor
loopne
fcmovu
fisubs
xchg
test
je
getsec
pushf
mov
mov
xchg
fwait
xchg
sub
mov
into
mov
push
lods
sahf
mov
out
aad
lock
and
add
sub
adc
sub
hlt
and
int3
xchg
stos
pop
jp
adcl
jecxz
jg
test
adc
repnz
bound
gs
cltd
clc
shl
out
in
mov
or
push
mov
mov
push
repz
dec
jmp
je
sub
cmpsb
je
sub
push
mov
outsb
test
cwtl
outsb
jo
stc
call
adc
loop
ffree
subb
push
push
faddl
or
mov
aaa
sub
stc
push
push
jmp
adc
fwait
jg
ds
hlt
pushf
int
xor
cmp
loope
in
call
jmp
sbb
jl
ds
lds
adc
fldenv
push
ds
sti
mov
int3
push
mov
dec
inc
cmp
mov
sti
jge
mov
mov
mov
mov
xchg
aaa
cmpsl
cli
call
or
inc
lcall
movsl
shl
dec
mov
jns
pop
sbb
dec
test
mov
decl
push
add
xchg
and
dec
aas
rorl
iret
push
push
jbe
dec
outsl
xor
jns
add
aas
loopne
popa
mov
sbb
jmp
sarb
or
pop
jge
push
jbe
add
inc
pusha
ret
pop
cmp
dec
push
sbb
repz
jle
in
push
test
leave
xchg
stos
testl
or
scas
into
pop
loop
mov
pop
lods
mov
scas
fldl
ret
mov
call
cli
leave
push
std
nop
rorb
imul
cld
popf
cwtl
es
dec
adc
aad
mov
sub
aam
stc
nop
pop
xor
fnstsw
xchg
mov
out
jnp
mov
and
repz
xchg
pop
orl
mov
inc
mov
popa
xchg
data16
xor
fldcw
jge
sbb
repnz
aam
cs
ja
cmc
pop
jp
xchg
ret
pop
add
lods
into
out
pop
adc
mov
pop
dec
jnp
imul
fsubr
mov
inc
mov
out
decb
jne
dec
add
movsl
adc
ljmp
je
push
dec
sti
popa
and
add
lods
stos
idivl
pop
pop
or
xchg
scas
int
int3
in
je
xor
push
outsb
mov
sbb
pop
xchg
sbb
adc
pop
or
inc
push
sarb
dec
sub
xchg
cwtl
mov
mov
pop
faddl
mulb
rcrl
fbld
pop
rclb
rcrl
push
sub
sub
xor
lahf
mov
xor
loopne
nop
shl
clc
pop
int3
sbb
scas
mov
jae
jp
mov
mov
adc
in
cmpl
xor
fsin
push
push
js
mov
push
dec
aaa
xchg
lcall
sub
push
push
push
dec
jb
and
pop
xor
fisttpll
adc
jae
in
jno
imul
sbbb
cltd
loopne
in
lock
imull
xchg
ret
lahf
push
jg
push
icebp
add
gs
add
aas
cmpsb
and
add
roll
push
adcb
test
jmp
into
xor
jg
sbb
out
cmpsl
enter
jns
aaa
ljmp
cmpsl
les
adc
scas
dec
mov
sub
cli
arpl
mov
pop
push
jle
mov
add
andl
out
push
es
pop
out
scas
out
push
das
es
xor
and
add
jno
sub
sub
insb
xchg
dec
pop
das
out
push
push
or
nop
jmp
insl
stos
xchg
pusha
rorl
cmp
pop
repz
xchg
xor
pushf
cmp
mov
jmp
cmp
or
lcall
cs
cmpsl
out
adc
sub
fcoml
je
pushf
xor
mov
popl
mov
leave
test
insb
and
pop
inc
adcb
inc
mov
stos
jae
xchg
mov
lds
in
lock
cs
push
mov
dec
imul
cmp
push
shr
cwtl
outsl
push
xor
or
xchg
jg
push
push
sub
mov
std
lea
movsl
xchg
and
out
addr16
push
pushf
and
sbb
fisubrl
leave
push
cwtl
scas
inc
lret
mulb
jae
mov
xorl
std
sbb
stos
loope
fs
outsb
pop
xchg
pop
inc
mov
add
lcall
push
jle
pop
stos
outsb
lock
inc
std
jmp
sahf
fs
sub
mov
push
jle
jno
test
shrb
sbb
xchg
dec
incl
sti
mov
add
ja
jge
cmp
dec
jo
jne
lock
pop
lret
push
scas
pop
dec
pop
fcoms
mov
adc
lods
mov
lods
std
pusha
test
pop
sub
loop
in
pop
dec
jns
sbb
lret
xchg
in
stos
add
mov
adc
mov
fcompl
lahf
sahf
clc
mov
mov
fucomip
inc
insl
fimuls
mov
lret
adc
rdpmc
push
lea
and
sub
lock
sbb
mov
mov
sub
in
adc
jnp
loope
cltd
pop
fnstcw
mov
mov
sets
sbb
in
insb
out
jae
xchg
or
leave
mov
leave
mov
pop
mov
outsl
mov
push
repz
adc
idivb
pusha
subb
pop
pop
outsl
rcl
pop
add
test
mov
iret
ret
xor
xor
lret
movd
dec
int3
adc
pop
in
sbb
cmpsb
inc
test
mov
into
arpl
fisubl
or
pop
jge
jae
cmpxchg
daa
sarb
add
cli
sti
in
adc
mov
mov
shrb
aas
pop
icebp
lock
fidivs
push
mov
inc
inc
lea
mov
push
sub
aad
mov
in
push
scas
mov
lahf
dec
sub
xchg
push
mov
fnstenv
xchg
out
push
mov
mov
mov
je
hlt
rorl
mov
adc
daa
cmp
xor
pop
fdivp
imul
dec
ret
hlt
fldl
adc
rolb
scas
adc
inc
loopne
test
xor
xlat
rol
sub
push
lret
sub
dec
xchg
add
mov
lcall
shl
sub
add
or
aas
dec
negb
movsb
arpl
adc
movsl
jg
push
pop
lods
pop
fdivs
ja
dec
enter
rcl
jmp
xor
xor
pop
cltd
mov
sbb
hlt
add
daa
pop
adc
lret
xchg
and
in
sub
sarb
mov
les
mov
shll
sub
add
jp
cmc
iret
into
shll
in
or
cmpl
hlt
insl
mov
xor
cmpsb
dec
push
repnz
pushf
xchg
ret
mov
xchg
mov
mov
iret
sub
or
sarb
repz
popa
pop
add
mov
test
sbb
xchg
mov
push
out
cwtl
jns
pop
loop
orb
xchg
mov
sbb
inc
movsb
inc
ds
inc
xor
mov
dec
lahf
ljmp
sub
scas
mov
jne
repnz
adc
adc
adc
mov
mov
dec
dec
outsl
js
push
lds
inc
jnp
pop
inc
in
and
dec
bound
daa
mov
xor
pushf
outsb
movsb
mov
sub
pop
cwtl
or
mov
fmull
mov
or
cwtl
inc
scas
push
outsl
rorb
ret
mov
stos
rcrb
jns
jmp
or
jg
lods
sbb
sbb
mov
out
adc
pop
out
ljmp
fildl
lods
outsl
mov
push
icebp
pop
jge
lods
lea
sbb
inc
js
dec
mov
pusha
xorl
or
dec
das
into
mov
pop
test
xchg
pop
cmpsb
ret
jecxz
pop
lea
aaa
or
and
mov
fsub
lret
in
pop
xchg
je
jle
mov
inc
es
movsb
adc
xor
fisubs
sub
repnz
sbb
sbbl
push
mov
sub
leave
jp
jne
hlt
pop
add
inc
lods
aaa
jns
pusha
xor
shll
sahf
fistps
hlt
scas
mov
mov
js
mov
pop
xlat
loop
stc
cmpsl
pop
xor
mov
movsb
mov
push
dec
repz
enter
and
and
scas
or
cli
popf
loopne
inc
scas
in
lock
add
adc
inc
pushf
scas
nop
lret
push
mov
outsl
xchg
and
pop
xchg
mov
test
and
push
jg
ret
dec
fisttpll
add
hlt
xchg
add
test
pop
dec
inc
push
lret
xor
pop
cli
les
sub
jle
les
inc
jno
fildl
imul
sub
push
pushf
pushf
loop
pop
jnp
daa
pop
test
xor
pushf
add
int3
fcompl
out
or
dec
jne
push
aas
xchg
repz
pop
mov
sbb
pop
pusha
daa
inc
or
sbb
pop
mov
mov
lret
jle
rcrb
aas
jbe
push
mov
mov
fdiv
cmp
sbb
jnp
ret
dec
xchg
lea
hlt
out
gs
or
sti
adc
fwait
mov
jecxz
push
cld
popf
sub
inc
insb
or
stos
push
mov
mov
sahf
xchg
test
adc
xchg
mov
mov
mov
sub
out
mov
outsb
mov
icebp
push
andb
xor
and
pop
sbb
mov
jmp
mov
scas
and
add
or
adc
cmp
inc
fldenv
jae
push
xchg
push
sbb
pushf
or
push
mov
adc
roll
push
push
jbe
clc
addr16
lret
nop
cwtl
ret
lods
fcomip
jl
cmp
mov
xchg
push
movl
jp
and
pop
or
mov
imul
pop
dec
into
fmull
pop
mov
dec
push
out
push
outsb
aas
out
push
bndldx
imul
pushf
out
pop
lret
pop
aam
sub
cli
daa
jle
fcoml
outsb
pop
and
dec
sub
ret
mov
xchg
inc
sub
or
adc
xor
jne
mov
outsl
jle
cmp
hlt
js
popa
jl
stos
adc
ss
xchg
lret
test
jmp
xor
ds
xor
mov
out
mov
sub
inc
nop
sub
gs
movsb
das
data16
int3
and
rolb
adc
jl
sbb
mov
lret
add
fidivs
or
hlt
pop
test
daa
js
inc
notb
sub
xchg
scas
mov
push
sbb
fdivs
mov
xchg
cmp
fdivl
inc
enter
pushf
push
jp
adc
pop
sahf
sub
ret
push
pop
sub
outsl
xor
packsswb
mov
leave
das
sub
sub
mov
xchg
mov
dec
inc
call
in
push
mov
push
adc
or
jg
test
cmp
xlat
stos
outsb
fs
adc
les
je
aam
sbb
and
cmc
push
je
and
or
jmp
scas
xchg
jbe
add
push
mov
pop
pop
test
mov
sbb
xor
push
sbb
testl
sbb
outsb
ljmp
inc
push
lods
cmp
jecxz
ss
cmc
jmp
lock
cmpsl
add
popa
inc
and
fcmovb
inc
shl
xchg
adc
inc
mov
test
pop
shlb
or
mov
shll
mov
fwait
mov
icebp
inc
mov
jmp
cmc
lcall
xchg
mov
inc
xor
lea
xor
stos
xor
pop
sbb
mov
pop
fcom
mov
adc
mov
popf
sub
jbe
push
lods
ret
cmpsb
scas
cltd
lahf
or
inc
push
xor
fwait
mov
and
or
std
and
lods
cmp
mov
pop
pop
jmp
and
fldl
repnz
push
xchg
jge
or
mov
lea
hlt
mov
xor
and
call
adc
jp
int
mov
adc
daa
jo
clc
std
inc
pushf
inc
mov
sub
xchg
xchg
cmp
jle
outsl
sbb
pop
pop
lods
jnp
fisttpl
shl
das
test
fdivrs
in
addl
mov
mov
xor
push
fdivrl
loopne
fnsave
les
mov
inc
lds
push
out
push
data16
in
and
sbb
call
out
mov
push
sbb
lea
xchg
cmpsl
xor
push
mov
mov
pop
iret
imul
mov
xor
pop
mov
pop
jo
lds
push
inc
jo
dec
ljmp
popa
push
sti
jnp
icebp
and
cmpsb
jbe
and
ja
std
fbstp
enter
outsl
cmpsl
in
adc
fnsave
sbb
sub
stos
push
loop
rol
pop
push
push
xchg
cmp
aam
repz
jb
leave
xchg
test
addr16
jle
jo
cltd
jecxz
add
enter
nop
ss
and
and
ss
jno
int
sahf
fs
imul
jle
mov
sub
daa
sub
shl
and
push
or
pushf
outsb
adc
mov
and
sahf
mov
sub
aaa
divb
sbb
je
dec
cmp
divb
stos
push
mov
dec
inc
stos
or
xchg
fcomps
xor
not
jbe
out
andb
mov
fistpl
xor
fcmovnu
arpl
aad
add
mov
add
pop
lods
pop
cmc
cmc
arpl
inc
mov
insb
iret
and
adc
insb
bound
push
mov
repz
fldcw
inc
out
mov
iret
stos
stos
lcall
xor
pop
mov
adc
and
movsl
inc
pusha
mov
adc
and
into
xor
mov
or
jo
scas
xchg
cmp
fs
movsl
psrlw
imul
rorl
sbb
ret
ret
cmpsb
mov
push
test
imul
cmpsl
push
nop
xor
or
dec
enter
jno
lea
imul
lahf
and
insb
imul
add
pop
push
jo
push
push
fsubrl
les
mov
cwtl
jns
sub
jg
xchg
out
es
inc
stos
push
or
orl
ret
cltd
call
mov
xchg
add
sarl
adc
mov
sbb
xchg
jecxz
lret
adc
aas
inc
jp
mov
out
inc
xchg
jmp
stc
addr16
int3
pop
xor
iret
nop
sbbl
jle
iret
mov
mov
popf
arpl
or
push
scas
inc
xchg
cli
jmp
cmpsl
mov
pop
cld
mov
paddsw
inc
repz
pop
sbb
cmpl
lods
jne
inc
out
ja
mov
std
in
adc
sbb
push
ds
fldt
adc
ret
data16
dec
cs
int3
gs
lret
or
xchg
add
pop
sahf
movsb
sub
call
cmp
adc
jg
mov
ja
insb
dec
stos
mov
cmp
cmpsb
sub
and
mov
fwait
jle
imul
sti
popf
push
sub
mov
leave
mov
in
bnd
out
add
jg
xor
pop
les
fwait
mov
ja
inc
addr16
cltd
xor
inc
into
std
ljmp
out
shl
cmp
ljmp
sub
jnp
je
fucom
inc
sub
xor
dec
cmp
cld
mov
xorb
inc
lret
dec
shll
push
pop
imul
ror
mov
mov
loopne
add
xor
dec
repnz
xchg
fwait
push
adc
iret
loopne,pt
loop
add
aam
in
dec
jae
xchg
and
mov
cmp
bound
adc
jmp
aas
lods
mov
push
sbb
xchg
sbb
dec
push
jp
or
out
sub
sarb
jnp
sahf
out
icebp
pop
test
jbe
sti
xchg
push
push
mov
lcall
push
int
jg
jo
pop
push
std
pop
and
jge
mov
ja
push
mov
lods
out
pop
inc
in
loope
pop
mov
pop
scas
xchg
xor
test
out
xchg
fs
lds
icebp
lret
sbb
dec
jp
ss
aas
lds
scas
xchg
pop
in
xchg
mov
pop
das
pusha
adc
imul
sahf
adc
mov
and
xor
xchg
xor
adc
fsubp
jecxz
sub
xor
and
fsubs
iret
mov
jbe
mov
pop
sub
add
sbb
scas
call
test
loope
cmpsl
aaa
mov
or
movsl
cwtl
out
test
or
in
pop
fmuls
sub
imul
imul
jns
jmp
cmp
cmc
fcoml
shr
fmul
jge
mov
imul
ljmp
adc
cs
inc
je
test
out
pop
add
mov
rclb
mov
push
int
test
int
dec
or
sbbb
cmp
cmp
jmp
leave
push
decl
xorl
sub
jno
fdivrl
pop
ror
xchg
test
enter
adc
mov
cmpsl
lods
out
pop
flds
push
outsb
or
cmp
bound
jmp
test
stos
jae
and
adcl
int
fnstsw
jecxz
daa
push
insb
cmc
xchg
push
xor
xchg
mov
mov
lea
cmp
fstl
icebp
jmp
mov
cltd
cmpsl
negl
xchg
add
scas
outsb
or
and
mov
sub
sbb
pusha
adc
push
fdivs
test
sbb
mov
jl
in
movsl
lret
pop
xchg
mov
int3
lcall
push
scas
jmp
push
push
subl
fwait
jb
sti
dec
add
jecxz
mov
and
outsl
daa
fldl2t
pop
movsl
pop
ret
test
lret
into
cmp
and
xchg
mov
lds
sub
adc
clc
inc
add
mov
ret
hlt
das
jne
fsubrs
das
mov
jnp
dec
sub
push
pop
and
ds
xor
push
lds
inc
sub
pop
loopne
sahf
adc
jp
pushf
dec
rcrl
notl
push
dec
dec
into
xchg
lock
je
add
xor
dec
repnz
das
inc
push
imul
jge
aas
add
jnp
cmpsb
lcall
movsl
dec
iret
xlat
lds
sti
dec
cmp
aaa
xor
mov
push
push
add
mov
sti
mov
sbb
aaa
repz
mov
mov
xor
pop
jmp
jbe
add
mov
ja
pop
stc
xchg
shrb
fnstsw
pop
mov
adc
inc
jo
sub
lret
cld
into
jbe
dec
dec
sub
and
sahf
int3
push
out
and
adc
leave
pusha
shrb
add
sti
fnstsw
inc
popa
sar
mov
push
or
cmp
in
sub
leave
pushf
insl
xchg
jge
adc
add
test
push
fadd
mov
je
add
aad
ja
lods
xchg
adc
jge
inc
into
aam
aam
icebp
jecxz
bound
pop
mov
cwtl
in
pop
mov
lret
mov
pop
push
push
add
xor
ret
loope
shrb
test
inc
mov
shl
out
adc
pop
mov
pop
xchg
loope
xchg
stos
dec
pop
arpl
mov
cli
out
cmp
and
mull
jl
ficompl
lods
push
sahf
mov
xchg
xchg
ljmp
jno
or
test
lret
enter
xchg
cld
scas
les
popf
sbb
dec
cmpsl
int3
std
push
sub
mov
cs
outsb
in
push
out
imul
xchg
xchg
repnz
xchg
jg
ret
xor
les
sbbb
andb
and
mov
mov
adc
stos
mov
push
mov
aaa
adc
lret
xchg
in
push
and
dec
push
push
cmc
and
xchg
push
in
scas
xchg
mov
jae
push
jmp
inc
mov
aad
lcall
inc
in
pop
test
xchg
inc
sbbl
dec
movsl
enter
mov
fadds
lds
cli
fisubrs
insb
lcall
mov
icebp
rcrl
ljmp
sbb
sbb
dec
pushf
or
out
xor
loopne
jl
mov
pop
cmp
gs
js
popa
movsb
subl
je
jne
sub
loop
jnp
fldenv
mov
xchg
add
inc
push
lret
fs
cmp
or
loopne
push
call
cmp
sbb
push
cmovs
sbb
xor
ds
mov
fisubs
test
adc
popf
lret
sbb
xchg
int
popf
ror
pop
seta
into
lods
mov
cmp
pop
sub
fmulp
aas
inc
ljmp
and
push
cmpsb
shll
cmpsb
xor
fidivl
ret
cwtl
nop
iret
dec
dec
arpl
mov
or
stos
lds
cli
shll
push
lds
dec
dec
mov
stos
mov
adc
lcall
loop
dec
fistpll
sbb
leave
jge
sub
stos
aad
or
out
pop
jl
mov
pop
mov
push
leave
cld
fdivp
scas
ss
push
sbb
cmp
push
loope
insl
imul
cmpl
xchg
lods
pop
rcll
dec
pop
sub
sub
popf
das
xchg
xchg
dec
sahf
sbb
xchg
sbb
cmp
xor
xor
mov
xchg
out
add
ffree
loope
jne
push
pop
or
push
popa
sbb
aas
jne
dec
push
mov
loope
js
stos
cmp
jne
divl
pop
sub
or
fst
pushf
fildll
push
pop
mov
mov
test
push
add
xlat
std
in
movsl
xor
shrb
rcl
cmp
and
jno
mov
test
ret
scas
sbb
addr16
mov
out
lret
clc
js
imul
movl
sub
mov
shlb
adc
xor
aad
fsubrl
lods
and
sub
mov
pop
xchg
bound
or
jnp
mov
adc
push
jp
sar
jbe
movsb
dec
jnp
aas
fs
out
jp
and
bndldx
sbb
in
push
xchg
adc
push
pop
mov
ret
rcrb
xchg
or
decl
loop
xchg
pand
pop
adc
jns
mov
fs
stos
dec
icebp
ds
jp
fstps
push
add
inc
pop
mov
cli
jnp
pop
mov
cmp
pop
push
add
jns
jecxz
enter
jp
enter
push
pop
push
sarl
test
sahf
repz
lock
xchg
aam
cltd
cwtl
mov
out
mov
and
pop
lcall
xor
mov
jle
jo
bnd
dec
dec
sbb
out
mov
mov
stc
clc
into
pop
sti
add
lock
xchg
push
adc
adc
mov
mov
sbb
ss
mov
sbb
and
sbb
xor
fidivl
and
jp
jnp
jb
mov
test
or
adc
jle
div
ds
mov
cmp
dec
repz
mov
push
inc
fildl
pop
fisttpll
nop
aad
push
pop
ljmp
jo
inc
xor
ljmp
ds
jo
jbe
cmp
jle
and
mov
fs
fimuls
add
ds
adc
mov
std
cwtl
outsl
mov
fistl
xor
or
pusha
cwtl
cmc
push
insb
xchg
je
imul
inc
mov
cmp
stos
lret
xchg
push
xor
xchg
test
and
mov
and
mov
loopne
inc
out
stos
and
xchg
fsubr
lahf
jmp
lods
sub
lods
or
mov
negb
and
xor
sub
imull
adc
fcmovbe
and
repz
mov
mov
movsl
push
pop
adc
in
sti
cmc
jo
outsb
mov
xor
mov
inc
popa
or
dec
in
adc
mov
xor
in
int
rorb
int
sti
dec
fcom
sbb
lcall
mov
out
mov
push
sbb
or
sbb
int3
enter
movsl
cwtl
scas
inc
jo
out
insl
mov
mov
inc
jp
icebp
arpl
mov
push
mov
push
pop
pop
add
imul
sbb
cmp
sbb
mov
cld
cmp
xor
cld
pop
ret
insl
mov
mov
idivl
cmpsl
inc
xor
aad
cmc
mov
icebp
movsl
mov
fidivrl
mov
pop
sbb
leave
xchg
dec
pop
sbb
or
mov
jle
sub
subl
sub
jno
lcall
and
stos
push
mov
test
cmp
dec
sbb
lret
or
stos
jecxz
push
inc
add
pop
jb
mov
mov
xchg
cmp
fstl
xchg
loopne
inc
add
cmp
scas
or
jno
push
adc
loop
loop
jle
pop
cmc
je
add
dec
fdiv
jecxz
jge
loope
shrl
popf
test
adc
sbb
xor
mov
cltd
repz
push
insl
jne
mov
ror
sahf
les
loopne
hlt
ljmp
cmp
js
call
scas
or
inc
xor
loopne
mov
repnz
inc
fdivr
cmp
sbb
add
push
xchg
jae
cltd
sub
jp
jecxz
mov
jl
test
mov
cli
and
mov
pop
aam
add
popf
dec
xor
pop
fnstenv
fdivrs
add
push
mov
call
add
call
fistpl
xchg
pop
jo
cwtl
pop
loop
cli
in
insb
adc
mov
mov
mov
testb
xchg
mov
insl
inc
push
cli
in
jmp
shll
sbb
sarl
cmp
dec
xchg
lock
mov
scas
clc
lds
std
inc
inc
sbb
mov
ret
test
push
fldt
inc
xchg
aad
imul
sahf
xchg
sbb
lock
addb
jno
iret
inc
mov
inc
cmc
xchg
pop
jge
in
arpl
iret
out
arpl
shrl
pop
mov
and
roll
sub
popf
into
pop
out
mov
xor
add
dec
stos
lods
pop
fsubrl
add
pop
pop
ret
mov
mov
mov
inc
push
icebp
xchg
loopne
sub
jle
push
cwtl
xchg
out
cmp
cmpsl
pop
popa
movsb
cmp
lds
fdivp
jb
dec
lret
mov
in
out
data16
cld
mov
jae
push
ret
into
mov
lret
and
add
dec
iret
jo
iret
push
in
test
fisubs
mov
in
and
loop
pop
std
into
and
cld
lock
stc
pop
stos
sbb
jmp
loopne
enter
and
fildll
adc
mov
sbb
ds
outsb
mov
in
jae
aas
push
test
insw
ds
loop
clc
sbb
jae
jp
cmp
imul
pop
je
aaa
shrl
in
pop
pop
xchg
andb
jns
dec
push
mov
aad
mov
pop
xor
aaa
add
int3
stos
lock
test
in
popa
push
cwtl
fisubl
jle
cltd
and
push
movsl
scas
inc
imul
adc
xchg
or
leave
adc
xchg
pop
clc
dec
iret
mov
es
aad
and
cli
ret
xor
push
fs
jno
stc
lock
pop
iret
xor
pushl
aad
pop
adc
mov
sbb
jecxz
ret
xor
xchg
mov
mov
lods
adc
push
imul
out
je
jl
addr16
movsl
mov
pop
movsb
dec
push
jg
out
cmp
sub
add
scas
sbb
cmpsl
das
fdivl
lea
sar
mov
adc
lods
mov
jecxz
add
dec
jbe
shlb
mov
fwait
inc
stos
pop
jno
mov
jg
sub
fildll
int3
int
loopne
movsb
inc
sub
movsl
or
dec
sbb
mov
ja
jo,pn
dec
pop
in
cmp
out
call
cmp
daa
fdivl
rcrb
ljmp
scas
dec
pop
mulps
and
shrl
xor
scas
cld
dec
xchg
lcall
jbe
jae
mov
or
mov
dec
mov
sbb
cmp
mov
or
aaa
into
mov
mov
mov
aas
adc
pusha
inc
int
pop
int
xchg
mov
inc
xor
les
cli
jne
mov
push
add
jecxz
and
lret
test
loop
mov
mov
jmp
cmp
insl
xchg
add
rol
sbb
inc
mov
movlps
lahf
pop
shlb
popf
mov
cmp
cs
lret
shll
sbbb
sti
cmp
xor
pop
js,pt
in
mov
fsubrl
lods
fsubs
jne
add
push
and
cs
xor
fsubrs
mov
push
dec
orl
inc
mov
sti
cmp
lock
xorb
cmp
divl
or
sbb
push
lods
enter
jmp
leave
pop
add
dec
aas
mov
ret
pop
shl
add
out
scas
xchg
ss
sbbb
xor
addr16
pusha
add
fnstenv
and
xor
dec
lock
ljmp
mov
pop
sahf
in
pop
cmp
and
stc
int
in
and
mov
or
cmpsl
inc
push
mov
jg
xlat
mov
ret
aas
rorl
cs
mov
repnz
or
jae
ja
dec
lock
dec
add
pop
xchg
dec
mov
sbb
mov
mov
cwtl
outsb
mov
add
sbb
push
insl
pop
cltd
lock
sub
into
in
cmp
jle
into
inc
nop
dec
xchg
mov
push
mov
mov
inc
idivl
add
jg
push
mov
lods
aad
inc
cltd
push
ds
rcr
xchg
xchg
pusha
ficoms
jb
push
in
mov
push
call
xor
into
in
arpl
cmp
push
std
mov
jbe
cwtl
nop
rolb
xchg
xor
xchg
imul
cmc
dec
popa
xchg
popa
push
add
cmc
jge
adc
rorb
push
push
jne
xchg
pop
imul
popf
incb
cmc
repnz
nop
lret
sbb
in
int
xchg
pop
mov
les
cmp
push
in
mov
xor
sbb
push
sub
jle
push
cmpsb
movsb
lcall
hlt
out
roll
roll
cmp
inc
insb
mov
scas
clc
jp
xor
filds
pop
mov
test
xchg
pop
mov
loop
stc
mov
mov
cmp
inc
xor
pushf
sbb
fsubrs
fidivrs
stos
gs
push
insb
cmp
jle
jnp
adc
dec
rclb
or
fsubrl
cmp
idivl
mull
dec
in
shlb
mov
das
dec
cmpsb
jecxz
dec
or
enter
mov
inc
jg
orl
adc
pop
mov
arpl
and
pop
mov
ds
dec
inc
xor
mov
fiaddl
dec
cmpsb
lea
enter
inc
add
mov
cmpsb
sub
int3
pop
add
mov
cmp
or
inc
rorb
pop
mov
aaa
xor
pop
andl
cmc
fnstcw
jmp
pushf
sub
stos
das
stos
sub
stos
lret
in
dec
add
addr16
dec
cs
xor
nop
push
sub
stos
mov
or
mov
sti
cwtl
das
adc
cmpb
aas
movsb
mov
jns
xor
mov
inc
jno
fwait
repz
ljmp
inc
sub
dec
imull
add
jle,pn
imul
push
test
test
jp
icebp
outsl
push
xchg
sub
test
aam
jp
lea
rcll
jle
dec
fadd
inc
mov
cld
push
add
sarb
sbb
lods
add
test
imul
or
movsb
mov
fsincos
and
fldenv
dec
sbb
push
movsb
idivb
test
ljmp
and
les
mov
insb
jecxz
inc
ja
jp
sahf
xor
outsl
dec
addr16
inc
inc
sbb
jbe
fucomi
add
test
mov
int
cmc
sti
ds
mov
push
mov
in
mov
sbb
push
inc
push
adc
hlt
gs
imul
test
addr16
dec
int
fdivp
xchg
loopne
pop
movb
faddl
test
imul
fs
cmp
jge
or
pop
xor
in
inc
js
ficompl
mov
pop
scas
push
xchg
push
inc
hlt
mov
ss
or
inc
stos
shrb
inc
jg
cmp
repnz
pop
mov
mov
dec
mov
shlb
jbe
jmp
in
xchg
jb
jae
jp
bound
cs
jp
dec
mov
xchg
outsl
cmp
fiaddl
pop
jp
shl
add
stos
xchg
xor
push
add
xchg
aaa
mov
xor
xor
adc
adc
movsb
pop
inc
lds
inc
add
pop
aaa
and
arpl
xor
pop
orb
lret
dec
ljmp
xchg
lds
add
push
xchg
xchg
movsl
mov
imul
push
je
call
sarb
pop
adc
push
ds
lahf
mov
adc
inc
lea
mov
jecxz
or
fcmovne
mov
sub
jge
cmc
xchg
or
sub
popa
xchg
loopew
sub
mov
push
outsb
or
push
imul
sub
sub
xchg
xor
jbe
pop
inc
mov
outsl
jno
cmpsb
dec
xchg
xchg
popf
inc
mov
push
test
and
sub
aaa
pop
fwait
movsl
xchg
mov
jns
outsb
popa
mov
cmp
add
subl
clc
andl
and
xor
call
shl
in
or
sub
or
sbb
xchg
gs
mov
out
mov
jne
xchg
lods
sub
mov
movsb
sbb
out
aad
add
imul
jp
je
dec
mov
sub
out
pop
lods
scas
inc
inc
or
sbbb
div
adc
sar
cmp
fidivrl
dec
sbb
sahf
stc
xchg
sti
pop
int3
fbld
xor
faddl
push
cmc
pop
loopne
mov
mov
xor
adc
cmp
pop
idivb
xchg
cmp
fbstp
push
sub
or
push
sti
xchg
shll
and
mov
fnstcw
in
jnp
aam
xor
fstpt
add
lods
leave
insb
mov
into
xor
sahf
and
sbb
je
addr16
aad
aaa
xchg
repnz
std
or
pcmpeqb
inc
aas
ret
lahf
sub
jmp
and
jg
dec
pop
enter
popa
push
xor
outsb
shll
inc
push
js
xor
rclb
mov
or
dec
xchg
popa
inc
xor
mov
cmp
dec
insl
inc
add
mov
sbb
lods
adc
ret
cld
mov
in
adc
mov
pop
icebp
inc
ljmp
or
inc
shrl
and
int3
aaa
push
cmp
pop
sub
pop
sub
mov
cmp
cmp
outsb
ret
push
adc
xchg
xchg
call
insb
test
jne
fwait
jle
jp
jae
mov
xchg
mov
inc
pop
cmpsw
add
xor
fucom
aas
sbb
movsb
mov
out
cmpsb
push
out
and
push
push
sub
out
cmc
sti
xchg
sub
push
out
jecxz
jnp
mov
int
in
sbb
push
xor
add
int
xor
jbe
loope
mov
iret
pslld
xor
adc
dec
xor
sarl
test
dec
cld
jecxz
xor
rorb
dec
flds
sub
rcrl
cmp
pop
repnz
fptan
jle
cmc
or
insb
push
cltd
push
test
xchg
cmp
mov
push
inc
xorb
and
inc
clc
sub
cmp
das
mov
fldt
lods
push
hlt
lret
jmp
jp
cli
inc
movsb
xchg
inc
popl
imul
imul
movsl
mov
pop
data16
sbb
adc
mov
mov
mov
pop
bound
js
pop
popf
sbb
aad
stos
mov
dec
rorb
pusha
ret
push
push
sub
cs
add
movsb
mov
or
jne
aaa
push
gs
sub
test
cmc
shlb
ja
adc
das
imul
call
inc
inc
cli
sub
roll
pop
mov
push
cwtl
xchg
mov
add
addr16
ret
lods
cmp
je
and
dec
les
movsl
imul
or
cmp
imull
sub
sbb
push
jg
cs
js
lcall
inc
push
cmp
jae
cli
xor
test
mov
xchg
int
jecxz
and
lahf
ds
sbb
lock
shrb
mov
imul
aad
pop
iret
mov
mov
cmpsb
in
mov
sbb
and
jg
xor
mov
das
ret
adc
pop
lods
pop
and
dec
inc
sahf
addr16
mov
sahf
jmp
cmpsb
dec
mov
mov
jnp
popf
into
and
addl
lahf
and
mov
data16
hlt
jnp
xlat
dec
jnp
mov
outsl
mov
mov
je
sbb
and
or
mov
inc
aam
movsb
cwtl
mov
in
sub
jae
test
sbb
imul
add
xor
push
pop
jge
loope
adc
mov
pop
subl
in
or
outsb
sub
cmp
cmpsl
gs
pop
mov
inc
mov
cmpl
orb
mov
mov
sbb
repnz
lods
into
add
jns
inc
mov
push
aas
sbb
inc
inc
in
sub
leave
mov
lahf
aaa
cmp
mov
roll
fistps
gs
push
mov
pop
mov
test
add
in
cld
rsqrtps
stos
sarl
add
adcl
popa
inc
stos
add
cmpl
cmp
out
pop
cmpsl
inc
outsb
aaa
pushf
mov
aad
mov
mov
pop
mov
shrb
jmp
add
stos
lods
inc
dec
int
lock
jae
xchg
xchg
dec
dec
push
das
ret
in
xchg
xchg
sbb
mov
fcmovne
scas
ficomps
mov
mov
cld
jb
sub
inc
pop
pop
gs
out
icebp
or
pop
jle
xor
lods
repnz
cmp
jg
popa
dec
and
stos
fists
in
hlt
pop
loopne
out
xor
mov
push
push
push
mov
in
sbb
clc
inc
and
mov
test
mov
pushf
jge
cs
pop
movsb
nop
xchg
adc
push
icebp
loop
add
stos
test
sub
cmp
sub
nop
out
xor
jae
mov
fmull
sub
jmp
xor
cmpsb
add
fnstsw
mov
fidivl
or
daa
stos
adc
icebp
cmpsl
rolb
filds
push
scas
sbb
scas
test
push
test
xchg
sub
xor
dec
jo
jge
sbb
cli
mov
out
icebp
xor
outsb
jge
mov
cmc
sbbl
mov
insl
mov
fisubrl
int3
mov
mov
scas
addb
mov
cmp
adc
aas
rcll
clc
dec
and
pusha
mov
jmp
in
outsb
cmpsb
sbb
jo
xchg
je
test
sahf
ja
mov
add
rorb
scas
pop
add
ja
push
push
cmp
gs
dec
jg
je
dec
push
rcl
mov
mov
fisttps
mov
push
popf
aad
adc
inc
insl
adcl
add
in
xor
pop
in
clc
arpl
adc
push
aaa
mov
sub
cmp
xchg
dec
sub
push
add
xchg
dec
roll
sub
jne
jo
xchg
ret
and
cmp
or
cmp
sbb
push
cld
jl
pop
xlat
gs
cwtl
cs
sti
mov
pop
pusha
ret
in
xor
adc
in
shll
sub
cmp
push
cli
push
or
or
aam
mov
xchg
popf
aad
sbb
push
dec
mov
xchg
and
sbb
insl
push
fsts
sbb
and
rcll
insb
arpl
sbb
fcmovnu
shld
cli
popa
repz
dec
jp
push
sbb
stos
sbb
bnd
xchg
rcll
pop
inc
inc
lods
addr16
mov
stos
in
sub
push
iret
dec
add
push
dec
fiaddl
stos
not
and
repnz
lret
add
in
jmp
adc
les
lcall
and
sub
hlt
inc
sub
cmp
cmp
push
test
ja
adc
or
std
jns
fidivs
mov
fwait
sub
xor
movsl
bound
incb
cmp
add
or
test
andb
cmp
inc
push
sbb
mov
insl
xchg
sub
xor
pop
scas
mov
and
add
lea
add
push
loopne
mov
cwtl
xor
pop
or
push
scas
jmp
and
mov
test
insb
inc
pop
xchg
subb
cmpl
loope
sbb
bound
xchg
shrb
inc
les
mov
add
insb
lods
dec
sub
mov
and
xchg
adc
out
aam
mov
mov
mov
xchg
cmp
pop
jbe
ficompl
xor
cmpsl
rcll
mov
lcall
cmp
rclb
mov
inc
and
mov
insb
dec
rorl
dec
and
inc
addb
int3
xor
cltd
aam
jecxz
jb
fisubs
or
add
sti
add
xchg
and
dec
push
lret
pushf
mov
and
mov
xchg
mov
pop
push
xchg
out
mov
shl
call
movsl
fistpll
mov
sbb
cmp
inc
cmc
gs
fwait
push
popa
push
roll
hlt
cmc
jle
repz
fisubrl
jnp
sub
cmp
xchg
xchg
or
jmp
out
repz
or
scas
xchg
xlat
jg
inc
xchg
inc
inc
mov
shl
add
in
sbb
aaa
or
mov
inc
add
mov
sub
lock
repz
test
or
pusha
sbb
xlat
sbb
sarb
push
lret
cmpl
mov
pop
cmp
mov
pop
inc
idivl
hlt
and
fisubl
ja
stc
aaa
rorb
mov
repz
jae
outsb
mov
sahf
pop
lret
xor
and
sub
out
xorb
pop
add
pop
hlt
pop
rcrb
ja
mov
cld
and
cltd
mov
in
mov
dec
icebp
jg
icebp
dec
sbb
imul
add
mov
xor
movsl
mov
repz
fidivrs
sub
dec
dec
or
xchg
je
inc
icebp
jge
notb
adc
fimuls
dec
and
add
lds
inc
jnp
xor
push
and
scas
sbb
leave
sbb
pushf
jp
add
cmp
sahf
xor
pop
clc
fndisi(8087
out
stos
mov
pop
cmpsl
or
mov
insb
test
add
pop
fisubrl
cmp
sar
xor
and
rorl
push
mov
ret
mov
out
push
leave
push
insl
daa
push
lret
stos
pop
lds
hlt
mov
jp
cmpl
jmp
fincstp
std
adc
sub
mov
sub
xchg
mov
push
sub
sti
iret
rorl
popf
jp
es
ljmp
push
sbb
add
sbb
mov
enter
leave
aam
and
mov
xchg
aaa
movsl
xor
push
popf
push
das
xchg
int
lods
in
rolb
mov
lods
xchg
cmp
or
mov
imul
xor
out
and
push
push
pop
mov
mul
and
lds
push
cmpsb
cmpsb
rcrb
xor
nopl
fmul
aas
sbb
mov
jns
mov
and
mov
stc
daa
pop
inc
xchg
fldl
shl
push
cmc
add
add
cmpsb
and
xchg
sbb
ds
sub
and
fisubrs
cmp
cs
jge
sbb
mov
and
fists
jl
or
cltd
outsb
adc
inc
mov
dec
sbbl
cld
imulb
iret
adc
pop
jne
xchg
mov
add
idivl
mov
jle
outsb
repnz
dec
sub
xchg
sbb
fcompl
jecxz
xor
js
test
push
xchg
pop
or
xchg
mulb
or
or
cmp
les
fidivl
inc
or
mov
daa
rorl
into
or
adc
mov
outsb
pop
stc
add
lcall
push
xchg
jns
jmp
scas
fs
sbb
xchg
xchg
imul
orb
add
mov
pop
dec
push
cltd
in
sub
outsl
int3
repz
mov
push
ret
outsl
ret
pop
pop
arpl
cmp
lret
or
stos
lret
add
sbb
notb
sub
pushf
icebp
fdivrs
mov
not
rol
imul
out
lock
mov
popa
ss
fstl
lods
arpl
jbe
and
xlat
or
out
inc
jp
mov
push
or
xchg
int3
gs
xchg
sub
es
cmpsb
das
int3
mov
push
pop
fcomps
stc
popf
cld
jecxz
adc
mov
mov
roll
ss
dec
pop
iret
sbb
adc
aam
popa
add
insl
ds
js
sub
mov
and
push
push
int
lock
push
xchg
pop
pop
cmpb
pop
jno
stos
add
sbb
fcmovbe
movsb
sbb
lods
xor
scas
sbb
jecxz
or
loope
es
hlt
xchg
push
movb
mov
hlt
or
and
adc
in
xchg
pop
xchg
rorb
and
push
cmpb
imul
inc
push
xchg
pop
mov
sbb
pop
push
inc
adcb
xchg
loopne
rcr
outsl
and
mov
dec
mov
mov
sbb
jmp
insl
sub
outsl
sub
out
jg
pusha
mov
or
ret
jp
add
jb
das
dec
inc
adc
sbb
jb
mov
shll
scas
clc
sub
and
push
mov
push
ret
mov
adc
mov
adc
jbe
int3
mov
mov
xchg
xchg
call
js
aam
insl
pop
pop
outsb
ss
add
cmc
mov
xor
mov
and
pop
popa
pushf
xor
sub
dec
cmp
push
jle
mov
cmpsb
dec
adc
jb
cmp
ljmp
in
cmc
inc
aad
adc
in
jnp
mov
hlt
lock
mov
lret
mov
hlt
lods
xchg
pop
sbb
stos
add
int3
insb
fstl
jg
shrb
mov
fcoml
add
push
jge
js
push
mov
clc
cltd
gs
jecxz
sbb
out
jnp
adc
inc
pop
int
lods
outsl
sub
stos
addr16
cs
sub
xchg
jnp
inc
loop
test
testb
test
mov
lret
adc
dec
mov
dec
mov
xchg
cmp
das
inc
jbe
xor
mov
lret
dec
mov
and
mov
lock
fs
dec
pop
mov
mov
xchg
jae
jns
add
lock
loopne
push
jg
fsubrl
cmpb
xchg
hlt
int3
aam
mov
scas
adc
daa
out
mov
or
mov
mov
add
imul
clc
fwait
mov
rcrb
mov
xor
das
xchg
mov
pop
jle
sub
push
dec
xchg
mov
sti
sbb
test
js
outsl
popa
inc
je
inc
into
jno
iret
and
popa
cli
sub
dec
aaa
inc
fisubrl
mov
jmp
loop
ss
stc
decb
mov
lods
pop
pop
pop
pop
pop
les
adc
dec
mov
sbb
in
lods
dec
mov
ret
lcall
pushf
mov
test
mov
insl
and
fisubs
and
fmulp
and
dec
test
call
shrd
jmp
or
mov
jnp
loop
into
out
mov
aas
out
jns
push
js
popa
inc
sub
sbbl
pop
mov
inc
clc
mov
inc
cmp
faddp
mov
push
out
mov
pop
jmp
pop
addr16
sti
insl
jle
cli
sarb
nop
and
dec
lds
push
scas
cld
shll
daa
sbb
mov
call
stos
leave
scas
dec
push
fnstenv
cltd
sbb
out
and
fcoml
ja
or
sub
jbe
lret
dec
push
push
mov
sarb
mov
mov
mov
int
add
or
add
dec
insl
out
std
jbe
cmp
dec
jg
test
in
cwtl
cmpsb
dec
jl
dec
loope
mov
nop
sbb
loope
pop
cmp
sbb
faddl
mov
adcl
or
out
fisubrl
cmpsb
sahf
fwait
dec
xchg
adc
or
xchg
pop
and
sub
adc
sub
sahf
lahf
imul
xor
cmp
lods
xchg
mov
add
imul
sub
xor
xchg
je
mov
cmp
jbe
dec
loop
sub
ret
daa
inc
fstps
popf
int3
insb
aas
or
pop
movsl
scas
lret
jno
jns
pop
sti
dec
mov
aam
jle
mov
pop
addr16
aad
mov
jge
repnz
mov
js
push
xchg
loop,pn
ss
arpl
cmpsb
sbb
scas
scas
pop
ret
jl
test
imul
xor
mov
aad
mov
xchg
push
gs
xchg
pop
inc
push
sbb
mov
add
mov
xor
pusha
mov
dec
cmc
sbb
addr16
aas
enter
mov
cltd
movsl
lods
enter
sub
push
and
jge
cld
mov
pop
push
mov
mov
push
pop
sbb
int3
inc
sahf
dec
add
jle
push
cmp
pop
leave
push
push
fiadds
add
xchg
mov
cwtl
or
ret
outsl
sbb
xchg
lcall
or
mov
mov
xchg
and
mov
mov
shrl
fists
jbe
repnz
iret
push
dec
dec
jmp
and
nop
xchg
and
sbb
jae
mov
jl
test
nop
or
ljmp
xor
aam
mov
movsb
sbb
aad
pop
cmp
call
fcmovb
lods
mov
jae
pop
int3
mov
mov
xchg
pop
mov
notl
mov
popf
in
test
js
decl
ficomps
adc
fs
lcall
sbb
cwtl
push
sub
roll
xchg
cmc
je
mov
xor
add
sub
mov
mov
mov
xchg
inc
faddl
ss
std
das
mov
sbb
pop
clc
jp
push
mov
ja
jns
mov
loopne
popf
jl
xchg
clc
inc
xchg
rcrl
shrl
xchg
loopne
mov
adc
ss
insb
cwtl
mov
lods
cmp
in
ljmp
outsl
ret
xlat
xchg
pop
push
push
mov
dec
outsb
fldl2t
mov
or
xchg
jl
pop
mov
in
in
pop
push
cmp
and
popf
adc
sub
inc
movsl
dec
in
outsb
mov
call
pop
cwtl
scas
aaa
ds
repz
jns
jl
xchg
or
gs
into
mov
or
and
addb
adc
std
int3
mov
loop
pop
rcr
and
xlat
pop
fisttpll
jmp
and
stc
cmp
ret
lock
adc
test
sbbb
xchg
mov
mov
cmp
icebp
pushf
mov
fdivs
push
dec
ret
ss
adc
pop
pop
popa
lcall
out
rorb
push
int3
aam
inc
push
adc
jb
push
inc
loope
sbb
cmpsb
in
mov
setp
fcoms
sahf
sti
fwait
cwtl
add
push
or
mov
test
xchg
popa
jl
cltd
mov
pop
dec
dec
test
jmp
pop
in
adc
stos
in
test
sbb
mov
cmc
in
xchg
fs
imul
cmp
jmp
cmpsl
pop
fnstcw
add
out
fldt
cs
sub
pop
les
mov
sub
pusha
loope
icebp
or
pop
pop
mov
in
das
adc
pop
gs
push
jge
mov
or
lahf
sub
push
in
mov
sbb
xchg
test
je
mov
dec
or
icebp
xlat
mov
out
repnz
jno
pop
mov
mov
add
std
in
pop
mov
xor
mov
movsb
xchg
addr16
xlat
leave
rclb
fidivl
jmp
or
scas
push
test
or
push
loopne
cwtl
dec
mov
push
push
sub
int3
inc
push
and
sub
addb
push
adc
mov
push
inc
push
fsubrs
mov
cmp
lret
mov
jl
jle
add
jl
aas
inc
dec
push
mov
push
in
mov
dec
xchg
in
jno
sti
pusha
and
mov
int
cmp
les
shl
pop
inc
orl
popa
push
aaa
andl
xor
cmp
lods
std
adc
pop
test
popa
or
mov
cmpsl
ljmp
fcomps
push
repz
cmp
mov
sbb
idiv
adc
xchg
mov
popa
imul
add
jnp
pusha
or
or
fcmovu
ret
jns
xchg
pop
paddq
faddl
imul
sarb
lds
xchg
aam
pop
or
ficoms
pop
sub
hlt
mov
push
mov
jo
nop
pusha
aaa
into
pushf
shr
cmpsb
sarb
mov
lahf
movsb
inc
lock
mov
clc
imul
fmuls
push
xor
pop
pop
mov
ret
loop
js
cs
or
stos
and
inc
jp
test
xchg
mov
enter
lcall
push
js
cltd
repz
cwtl
pop
fs
decb
push
jge
nop
cmp
mov
aad
pusha
push
push
jb
cmpsb
push
jl
cld
jp
mov
fstpt
lds
lret
jle
xor
dec
negb
lret
scas
adc
mov
shlb
mov
nop
insl
call
popf
cld
and
aad
data16
stos
mov
aad
arpl
fsts
adc
test
pop
aam
out
cli
bound
out
subb
xor
sub
jo
jge
cmp
out
fsubrs
xchg
jae
vpermil2ps
mov
arpl
and
adc
inc
jno
adc
or
mov
test
add
ds
xchg
mov
out
and
and
xor
out
les
sbb
lret
outsb
icebp
xchg
fwait
dec
fnstsw
xchg
cmpsl
aam
mov
push
push
cld
dec
int
push
out
out
lods
add
pop
jge
xor
mov
and
paddsb
jecxz
aad
adc
movsl
push
ja
test
jle
sbb
arpl
mov
mov
mov
ds
or
add
sarl
loop
sub
icebp
cmovae
pop
in
nop
icebp
jmp
dec
imul
xchg
sub
cltd
fs
rclb
lret
pop
push
push
rclb
lods
add
jl
jp
add
ja
push
jl
pop
fwait
stc
sbb
jp
in
jbe
outsb
into
mov
std
dec
jmp
dec
mov
xor
sub
sbb
mov
xchg
cmpl
sub
test
idivb
cs
pop
lea
xchg
andl
adc
push
sbb
cltd
mov
cmpsl
xor
repz
pusha
adc
xor
std
mov
push
mov
sbb
das
int
test
mov
pop
cmp
popf
xor
xchg
cmp
push
nop
sub
fscale
test
mov
mov
div
mov
aaa
xlat
add
incb
pop
shll
sbb
add
test
in
or
sbb
stc
cmp
pop
jl
add
mov
int3
test
dec
mov
xlat
and
cmpsl
mov
sarb
xchg
andl
ja
test
sub
les
push
inc
xor
jbe
out
incb
cwtl
mov
sarb
sar
cmp
mov
xchg
xorb
sbb
test
lods
sbb
loopne
or
xchg
xchg
add
ret
movsb
jg
jecxz
fstpl
out
adc
mov
dec
cmp
ret
int
mov
or
xlat
clc
xchg
idivl
into
les
dec
stc
pop
inc
mov
fsubrs
dec
hlt
push
les
add
cmp
lcall
xchg
movsb
testb
cmp
in
inc
fidivs
lds
add
jns
jmp
push
adc
pop
inc
enter
jb
push
mov
ficoml
aas
pop
test
or
fs
xchg
mov
call
gs
adc
orl
addr16
and
test
sub
push
push
mov
mov
dec
lods
adc
sahf
out
jge
pop
push
and
inc
xchg
jae
mov
stos
mov
jne
lock
mov
adcl
xchg
arpl
das
jp
xchg
push
push
mov
lods
mov
orl
jne
jmp
fimull
adc
mov
mov
jbe
call
jge
lods
xchg
out
mov
cmp
adc
push
mov
dec
and
add
fcomp
or
lock
sbb
scas
mov
and
cmp
pop
cmpsb
mov
scas
adc
cltd
icebp
pop
add
dec
enter
sub
push
add
jne
mov
pop
icebp
sub
testl
fdivl
stc
das
cmp
test
insb
dec
jno
xor
adc
lahf
cmp
lds
sbb
fistps
pop
test
testb
enter
and
cld
imul
dec
or
cmp
xchg
ficompl
lods
ja
leave
les
shll
clc
stc
or
mov
in
xchg
cmp
out
rclb
iret
fs
pop
jo
sub
daa
sub
nop
int3
subb
lea
dec
loop
mov
pop
xor
lds
out
adc
push
and
aaa
mov
xchg
mov
add
inc
std
repz
loopne
sarl
push
insb
push
shrb
repz
adc
cli
cmpsl
jle
ja
adc
push
popa
and
xlat
jp
and
cmp
sbb
jp
mov
jp
push
ja
and
jmp
xor
sub
enter
out
mov
into
test
ds
out
movsl
dec
pop
xchg
dec
and
jne
inc
fwait
push
mov
fld
or
repz
in
popf
notb
stc
mov
push
jns
pop
cli
nop
mov
addl
pop
aas
mov
pop
xor
lcall
xchg
gs
xor
xchg
arpl
in
dec
int
sti
icebp
mov
sub
xchg
jmp
aad
int
lds
enter
add
lcall
push
pop
mov
hlt
mov
pop
mov
xor
add
arpl
xchg
mov
loopne
daa
pop
ret
mov
xchg
fmull
loopne
out
or
in
sub
inc
xor
cmpsl
cmp
lahf
dec
sub
mov
imul
stc
enter
sarl
mov
rol
inc
rorb
inc
push
sub
int3
mov
in
dec
mov
mov
ss
pop
mov
cltd
ret
nop
jbe
mov
xor
cmpb
push
pop
cltd
pop
mov
scas
push
inc
aas
in
pop
cld
mov
xchg
aas
rep
sub
mov
mov
shrb
push
xor
ficoms
movsb
sar
sbb
xchg
or
bound
cmp
dec
jae
adc
jecxz
jae
leave
xchg
mov
pushf
and
jnp
or
sub
cld
mov
mov
data16
adc
fmulp
movsb
xor
push
mov
dec
out
xchg
push
fwait
and
xor
mov
sub
mov
cmp
out
adc
mov
cli
jno
mov
xchg
addr16
dec
mov
fidivrl
jmp
in
mov
mov
sbb
pop
or
add
pop
sti
ja
bound
loopw
mov
sub
push
cmpsl
adc
mov
cmp
bound
or
jb
push
lcall
sbb
test
add
sbb
sbb
test
mov
fs
sbb
sbb
inc
xor
sbb
cltd
jo
push
or
adc
adc
dec
in
insb
dec
push
lahf
push
iret
nop
mov
arpl
fs
and
testb
pop
jge
mov
push
push
xchg
and
sti
jge
out
or
mov
add
mov
push
outsb
xchg
jge
imul
push
add
pop
stc
testl
xchg
mov
ret
repnz
dec
push
dec
mov
and
stos
sub
out
sahf
sub
insl
loope
dec
cmp
jl
mov
call
lea
xor
mov
push
fsts
or
cmpsb
mov
rorb
lods
in
dec
leave
test
push
clc
dec
cmpb
cmp
lods
in
sbb
loope
or
inc
lret
lock
pop
pop
andb
movsb
inc
pop
icebp
shrl
outsl
dec
dec
cmp
lret
xchg
and
or
mov
xchg
cwtl
dec
outsl
sbb
in
inc
fstpt
aam
mov
int
mov
rorb
aad
fdivs
xchg
add
add
ret
inc
test
nop
mov
jnp
aaa
cmpsb
jge
addl
fdiv
jbe
subb
jge
sbb
jo
cmpsl
iret
outsl
dec
xor
dec
dec
adc
pop
xchg
mov
shrl
xchg
ljmp
or
insb
mov
mov
push
popa
and
leave
outsl
popf
stos
aad
inc
push
mov
cmp
shrb
fmuls
cltd
nop
pop
xchg
adc
add
jae
pop
ja
clc
mull
outsl
pop
lock
xchg
outsb
mov
mov
mov
mov
in
ljmp
sahf
pop
int3
fldl
fucomip
je
js
rorl
push
cmp
das
cmp
scas
jmp
jl
out
jmp
jns
shll
mov
addr16
adcb
loope
insb
out
adc
cli
xchg
mov
xchg
les
jmp
sbb
xchg
cwtl
fcmovnb
lea
mov
daa
dec
call
cltd
mov
movsb
or
push
je
outsb
push
aas
in
and
mov
xor
xlat
mov
xlat
adc
inc
jg
push
pop
pop
xchg
out
push
adc
les
pop
cltd
pusha
test
xchg
and
mov
jnp
into
addb
test
les
out
xchg
pusha
mov
ss
lods
lret
paddusb
ss
xor
mov
push
movsl
adc
mov
xchg
dec
jb
xor
sub
push
push
das
adc
push
cmp
hlt
mov
aam
sbb
pushf
adc
out
mov
inc
jl
fwait
mov
xchg
mov
stos
dec
push
mov
xor
int3
pop
out
xchg
or
imul
sbb
add
mov
cmp
clc
cwtl
repnz
jns
jmp
and
push
fists
ss
std
outsb
js
adc
fcomps
shr
and
xchg
shll
lahf
fdivrl
add
shrl
cmp
loope
out
cwtl
jo
or
mov
popa
mov
push
inc
icebp
push
xor
sub
or
insb
imul
repz
pop
push
fildll
fsubrs
sbb
sbb
andl
aam
cmpsl
in
stc
jge
popa
outsb
mov
mov
loop
icebp
pop
mov
adc
popf
push
mov
xor
add
add
out
aaa
mov
in
xchg
inc
sub
shrl
jl
sbb
scas
dec
mov
in
sbb
pop
out
mov
mov
add
in
xchg
mov
aaa
andl
and
sub
rcrl
stos
push
out
out
sub
cmc
loopne
xor
sbb
xor
or
stos
in
xchg
sbb
mov
iret
jmp
das
rol
in
hlt
femms
movsb
in
mov
mov
lds
and
ja
and
mov
dec
negb
mov
push
scas
mov
lods
jns
mov
jg
jge
in
fcom
js
es
adc
xor
add
add
xchg
jmp
add
mov
xor
cmc
inc
add
jo
lock
jo
cmc
cmp
shrb
inc
js
icebp
cmp
push
int3
or
into
inc
rcll
push
push
adc
fcomps
mov
dec
and
pop
dec
mov
adcb
mov
in
fsubs
idivb
arpl
dec
xor
in
mov
iret
outsl
add
xchg
fidivrl
jb
enter
dec
loop
and
imul
pop
fisttpll
pop
stc
pop
lcall
loop
sti
into
sbb
inc
jp
push
cld
dec
mov
test
adc
or
cli
fmul
inc
cmp
push
out
stos
mov
cmp
cltd
lds
xchg
or
pop
jge
sbb
ret
lret
ret
dec
mov
out
nop
aaa
cmp
dec
pop
xor
mov
or
cmpsb
sbb
add
movsl
and
cmpsl
adc
lock
test
pop
mov
dec
pop
pop
ja
and
in
ret
xchg
and
dec
cmpsl
mov
ret
lds
repz
xchg
frstor
orb
jo
lahf
test
mov
push
ja
xor
xor
push
dec
imul
push
daa
mov
hlt
dec
jno
mov
and
pop
and
adc
and
hlt
push
rol
outsb
dec
mov
fs
dec
and
cs
mov
rcrl
fstpl
jp
inc
fwait
or
add
imul
sbb
xchg
nop
daa
jno
popa
ret
in
insl
mov
mov
pop
jne
cmp
dec
cwtl
sti
and
scas
ficompl
test
dec
dec
pop
xchg
fdivl
lods
movsb
repz
arpl
mov
cmp
sbb
addr16
pop
sbb
enter
adc
les
or
mov
xchg
xor
cmp
movsb
or
call
test
jp
xchg
or
test
cli
arpl
loop
cs
sub
mov
jge
pop
add
in
rorl
bswap
adc
inc
test
push
sub
and
mov
std
test
aad
dec
mov
rclb
add
jp
test
pushf
inc
insb
mov
int
cmp
je
add
aas
movsb
hlt
push
pop
xor
push
aad
pop
cwtl
or
subl
sub
or
cmpsl
popf
sbb
cld
fisttps
mov
dec
das
xchg
repnz
xor
cld
rclb
ror
negb
dec
lret
idivb
cld
popl
jmp
test
movsl
jg
mov
mov
xor
xchg
jge
gs
push
fstpt
out
pop
cmp
mov
xor
mov
fisubl
mov
iret
movsb
push
mov
cmpsl
clc
test
pop
fstl
int3
cmpsl
or
xchg
repz
je
jp
adc
push
shll
push
or
popa
retw
sub
out
xor
dec
inc
out
mov
lods
sbb
sahf
or
repz
out
ret
int
pop
dec
out
sbb
mov
loope
xlat
mov
jae
test
sub
les
inc
bound
cmpsl
adc
add
sub
pop
repnz
into
ror
rol
sub
repz
mov
insb
add
and
xchg
mov
or
sahf
adc
mov
popf
out
iret
jne
push
cs
lcall
pop
add
mov
jae
inc
jo
shlb
inc
push
pop
or
repz
lret
and
outsb
scas
ljmp
push
sub
xchg
in
pop
loopne
insl
jnp
mov
adc
push
pop
xor
xor
js
push
inc
arpl
mov
jmp
gs
adc
out
subb
fwait
inc
inc
mov
mov
xchg
sub
fwait
xchg
push
test
jge
xor
mov
jns
push
mov
ret
sahf
add
test
xchg
mov
and
jne
shl
mov
lods
ret
push
lea
mov
pop
testb
arpl
repz
popa
sbb
adc
mov
ljmp
push
lret
add
pop
mov
jb
popa
or
cmp
jnp
and
sub
xchg
adc
jle
mov
imul
in
hlt
and
mov
mov
ret
cmp
mov
popa
xchg
xchg
push
aad
and
rcrl
inc
cmpl
psubb
lcall
ss
push
out
scas
cmp
xchg
mov
lds
stos
and
daa
dec
mov
rcr
std
cmp
imull
or
jmp
stc
pop
push
pushf
bound
mov
push
mov
jb
or
test
pop
fistpll
sub
pusha
or
xchg
cmp
iret
dec
or
cwtl
sub
or
cmp
push
mov
es
faddl
pop
std
loopne
jo
push
inc
mov
popa
in
fwait
cmp
mov
xchg
add
push
inc
loopne
scas
push
mov
jle
inc
sbb
ds
lods
je
jecxz
cmp
sbb
imul
dec
sarl
sti
mov
xchg
inc
and
push
pop
sbb
je
fidivs
pop
add
or
addr16
jecxz
push
movsb
or
es
je
add
add
cwtl
xchg
push
les
push
sbb
mov
add
xchg
push
xor
bound
jno
fstl
cmp
cmp
outsl
jnp
mov
leave
pop
cmp
in
fs
leavew
inc
pop
out
inc
rorl
test
shll
call
and
adc
xor
ds
sbb
out
sub
stos
leave
cmp
mov
and
and
mov
mov
and
sub
mov
adc
scas
mov
hlt
sbb
cmc
int3
mov
aam
push
in
outsl
lahf
or
mov
mov
rclb
pop
sbb
repnz
push
jno
lock
icebp
and
or
test
adcl
lea
stc
pop
ja
out
test
lock
cmc
insb
push
je
sub
xchg
cmp
mov
in
nop
cmc
test
aad
sub
ret
imul
jns
fisubrs
sub
jns
mov
xchg
pop
lret
dec
int
add
test
push
push
jmp
mov
fldt
enter
aad
push
dec
or
enter
ror
pop
lcall
enter
dec
push
ja
inc
sti
jne
mov
add
and
lea
call
lea
mov
sub
testb
out
or
je
mov
xchg
int3
xor
lret
jbe
pop
lods
mov
ret
outsl
dec
xchg
rcl
pop
movsb
in
mov
jp
cmc
jae
lcall
lret
mov
pop
into
test
out
xor
pop
rcrb
mov
je
jae
cwtl
and
mov
or
dec
xchg
fstps
mov
jo
stos
xchg
xchg
into
pop
xchg
lock
xchg
out
mov
xchg
cmpsl
outsb
adc
mov
cmp
add
push
nop
or
mov
push
cmpsl
xchg
scas
and
mov
int3
test
jp
mov
add
mov
addb
push
gs
hlt
ds
mov
idivl
aas
push
repnz
ffree
sbb
push
mov
das
enter
lods
int3
mov
sub
shl
inc
leave
fldt
lods
push
outsl
adc
int3
xchg
fs
inc
stc
fstps
ljmp
jmp
pop
shl
lret
xor
dec
xor
pop
adc
cwtl
out
jecxz
bound
lods
leave
sub
ds
mov
dec
sbb
inc
xchg
mov
inc
and
das
adc
inc
out
cmc
cld
jl
ds
mov
xchg
enter
out
enter
sub
dec
xor
add
int
int
insb
sub
xor
repz
pop
leave
pop
imul
bound
adc
mov
push
mov
testl
adc
xor
sahf
xor
jns
outsl
cmp
jns
fdivr
or
lahf
dec
sub
lcall
push
xchg
cmpsb
movsl
fcmovb
add
cmp
mov
lret
in
test
push
mov
lret
les
jns
xchg
fsubl
add
outsl
pop
dec
sub
dec
or
lods
shlb
out
xorl
sbbl
repnz
fldenv
stc
cmpsb
jb
out
icebp
out
mov
jp
cmp
mov
outsb
clc
lds
cmpsb
cs
mov
sbbb
cmp
sub
jg
mov
cmp
add
push
xor
mov
fdivr
lods
sub
adcb
ljmp
stos
cwtl
sti
cmp
or
sbb
mov
mov
jp
pop
cld
sahf
test
mov
clc
je
xor
mov
and
xor
push
pop
mov
push
jmp
fistl
aam
push
inc
dec
pop
mov
adc
add
adc
scas
cld
xchg
adc
pcmpeqd
xor
std
lea
push
sbb
movsl
ficoms
sbb
clc
mov
jge
add
mov
sbb
cwtl
cld
sbb
xchg
cmp
shrl
cmpsl
push
mov
sub
shl
insb
jecxz
xlat
shl
inc
out
mov
push
pusha
mov
jo
lea
lcall
shr
jne
jmp
stos
cmp
aaa
in
push
fwait
push
andl
xor
cwtl
or
out
out
or
add
insb
loopne
sbb
sbb
shrd
jl
lds
xchg
aas
jns
push
cmpsl
jnp
hlt
fbld
mov
js
das
jge
and
sti
lods
xchg
mov
fcoml
out
inc
movsb
xchg
stc
ja
and
fstl
jnp
icebp
sub
push
pop
into
scas
jecxz
mov
xchg
push
jmp
push
jl
jb
sbb
mov
lds
xor
fs
xor
leave
push
dec
fwait
and
adc
jle
jne
dec
sbb
sub
scas
fildll
imul
addb
push
gs
shlb
sbb
out
sahf
pop
stc
inc
int3
push
mov
leave
test
loop
out
dec
dec
jmp
pop
adc
jg
mov
es
bound
repz
imul
lret
loopne
stos
jbe
and
rorl
into
lret
jb
dec
imul
stos
inc
inc
insb
ficompl
lods
mov
adc
sti
mulb
into
xor
sbb
loopne
push
sub
cld
inc
cmpsl
or
dec
insl
pop
sub
jb
aas
ret
xchg
jg
dec
sub
push
movsl
or
int3
mov
mov
jle
shlb
imul
andb
lahf
mov
xchg
sti
mov
push
fs
mov
loop
mov
add
inc
insb
test
lahf
jbe
or
mov
clc
loopne
add
add
pop
push
add
and
hlt
test
sub
pop
jmp
mov
mov
ret
inc
aam
sub
jecxz
aas
stos
ret
dec
or
adc
popf
imul
gs
js
fwait
sub
push
test
jle,pt
in
ds
xchg
push
or
icebp
in
dec
push
inc
hlt
add
lret
ja
call
in
push
jb
inc
jno
and
ss
xor
les
pop
lahf
mov
cmp
popa
xchg
scas
inc
sbb
sub
pop
adc
loopnew
cmp
in
arpl
sbbb
nop/reserved
inc
add
xor
into
and
in
ret
mov
mov
mov
pop
mov
and
mov
pushf
lret
ja
xor
int3
in
sub
xchg
out
xchg
sbb
js
cld
or
insb
adcl
das
frstor
dec
aaa
rclb
push
inc
xor
jle
dec
sti
cmp
out
and
push
test
ret
jmp
jmp
add
xchg
dec
mov
scas
fdivrs
test
cltd
loop
xor
add
and
mov
jmp
push
and
mov
les
sbb
insb
inc
loopne
cmpsl
fwait
lds
rolb
and
push
scas
add
push
add
mull
xor
push
and
call
popa
clc
lds
pop
icebp
or
and
outsb
push
imul
cmc
add
mov
inc
push
push
out
cld
dec
jb
lods
xchg
dec
out
mov
ljmp
sub
cmpsl
mov
mov
pop
xor
pop
and
pop
addb
cmp
cmpsb
push
mov
jne
int
outsb
imull
mov
imul
divb
push
mov
in
out
imul
jae
enter
addr16
cmpsb
jno
sub
dec
in
jmp
fs
addr16
dec
mov
push
jecxz
mov
inc
sti
hlt
rclb
mov
cmp
je
fimuls
mov
icebp
mov
daa
movsl
mov
mov
loopne
inc
lret
rol
mov
dec
outsl
hlt
mov
xor
mov
xchg
std
jmp
cli
sbb
movsl
cmp
insl
push
jo
and
pop
loopne
jle
mov
repz
or
in
iret
ffreep
jbe
out
rorb
push
ljmp
and
stc
pop
cmc
imul
je
jmp
push
ret
mov
adc
mov
shl
xor
in
add
and
inc
push
fucomip
jmp
pop
call
in
mov
test
add
lods
and
jae
xchg
lea
inc
jae
fdivp
lret
add
mov
arpl
sbb
int
fistl
or
arpl
ss
jae
mov
pop
cwtl
mov
inc
jmp
pop
sub
pop
cmpsb
test
pop
jecxz
jle
and
or
mov
inc
sub
aas
jne
enter
xchg
mov
sub
fcmovbe
push
aaa
dec
into
sub
ds
in
xchg
mov
push
xchg
mov
fcmovnu
rcrl
sbb
xor
cmpsl
jnp
sbb
dec
inc
and
or
mov
pusha
mov
loope
lods
mov
mov
jecxz
inc
fstp
popa
and
sub
dec
cltd
mov
int3
paddusb
sub
dec
icebp
jg
rclb
sbb
ret
aaa
and
ret
in
mov
push
test
dec
subb
mov
jne
in
jo
outsl
shll
fistps
sbb
and
movsl
sbb
stc
decl
jp
push
iret
movsl
not
ret
mov
and
pop
lods
outsb
xchg
xorb
push
xchg
rclb
xchg
outsl
lcall
fnstsw
fs
lret
int3
pop
push
pop
test
push
cmp
imul
popa
aam
sbb
add
cmpsl
jg
sub
fistps
les
xchg
inc
xchg
outsl
xchg
or
jnp
std
jae
dec
stos
shrb
sbb
loope
jl
xchg
mov
roll
sbb
into
xadd
mov
lret
test
jg
enter
pop
icebp
xchg
in
out
loop
mov
push
xchg
repnz
icebp
fmulp
loopne
add
xor
pop
inc
icebp
shl
lds
sub
fsub
test
mov
jae
cli
clc
mov
in
and
jnp
or
int
in
xchg
out
mov
pushf
mov
push
sahf
ret
xor
sbb
or
pop
scas
mov
nop
ret
pop
fldt
fdivrl
stos
inc
xor
xor
std
jae
pop
pop
sub
mov
jno
fs
shr
rcrb
inc
aam
jnp
sub
sub
pop
les
in
sbb
roll
mov
pusha
insb
mov
aam
int3
mov
xchg
icebp
cmc
mov
mov
jge
push
mov
inc
inc
add
cmpsb
fstps
pop
mov
mov
js
xchg
fadds
cmpsb
call
bound
movsb
and
fwait
add
sub
dec
pop
lcall
xchg
inc
in
fcomps
sbb
jmp
adc
inc
fcompl
pop
in
pop
mov
je
das
int
push
clc
mov
mov
ret
dec
inc
call
in
loop
fadds
add
mov
jbe
daa
movlps
lret
mov
mov
hlt
mull
scas
outsl
adc
aaa
insb
out
sbb
and
adcl
hlt
je
outsb
pushf
fildl
jmp
cltd
hlt
mov
sbb
xadd
fld
or
push
cmp
outsl
and
jne
ss
imul
nop
xor
arpl
jns
icebp
mov
test
imul
jle
arpl
push
and
add
fmul
pop
shrl
mov
cwtl
pcmpeqw
cmpsb
or
mov
sub
adc
lret
in
jo
mov
xor
lods
xchg
mov
out
dec
mov
cmp
insb
cmp
add
push
int3
adc
sub
push
jl,pt
cs
cmp
shll
push
sbb
fnop
lock
loop
ljmp
aam
adc
arpl
adc
xchg
es
sbb
sbb
test
mov
stc
xchg
mov
mov
imul
testl
jp
xchg
adc
clc
popa
mull
mov
iret
fnstenv
cmp
int
pop
outsl
loope
movsb
xchg
jb
es
cs
insl
pop
dec
sub
cmp
sbb
bnd
negl
add
out
and
test
lock
pop
cmp
cltd
std
call
pop
cmc
mov
int
add
dec
test
stc
jp
push
mov
mov
into
aam
mov
mov
xor
sbb
test
insb
aam
call
shr
loopne
sub
pop
mov
jnp
jnp
mov
and
dec
stos
cli
aas
scas
push
ficoms
hlt
out
pop
add
adc
int
adc
sub
mov
enter
pop
lods
mov
adcb
cwtl
cltd
ret
je
push
xor
in
int
lret
test
cmp
inc
xlat
jp
arpl
scas
lret
call
add
mov
add
leave
add
jge
ret
xchg
mov
mov
aas
mov
mov
gs
hlt
xor
psubd
fwait
sub
jmp
scas
clc
or
jmp
rcll
test
jae
inc
xchg
shlb
aas
mov
ret
sub
mov
fs
mov
int
addl
jno
and
jp
mov
jb
xchg
push
add
shrb
repz
pop
cmp
inc
mov
movb
cmpsl
fmuls
push
test
mov
and
lods
lods
xchg
adc
fsubs
pop
gs
ss
popf
stc
fstpt
ss
mov
mov
xor
les
aaa
imul
test
mov
add
pop
popf
push
mov
addr16
sbb
hlt
sbbb
dec
cmp
lock
ret
lahf
cld
adc
adc
cmp
js
push
je
adc
mov
out
adc
cmp
xor
aad
push
jge
fldl2t
iret
loope
sbb
add
mov
adc
in
fiadds
scas
xchg
xchg
or
push
addr16
loop
sbb
leave
std
xor
cltd
and
cmpsb
pmullw
xchg
mov
add
in
rcll
clc
push
xor
kmovw
inc
inc
jne
outsl
xchg
test
mov
lock
rcrb
inc
ds
and
inc
ss
push
or
xor
stos
jb
bound
mov
sub
sbb
pusha
lret
ljmp
sub
lcall
neg
or
lcall
dec
ja
mov
stos
mov
in
mov
ss
sbb
loopne
jl
cld
test
jle
push
ret
push
add
xchg
xchg
add
enter
jecxz
cmp
jno
icebp
ds
test
sub
arpl
or
in
push
hlt
je
movsl
sub
pcmpeqw
cmc
movsl
jmp
mul
popf
mov
xchg
in
aad
aam
mov
jmp
jle
pop
enter
push
pop
xor
popa
jb
fnstenv
stos
int
out
inc
or
dec
adcl
and
ficomps
daa
fsubrl
sub
mov
scas
repnz
jno
adc
popa
arpl
in
fisttps
pushf
push
bnd
imul
in
lods
mov
sub
mov
add
mov
fsubrs
or
sub
add
icebp
xchg
xlat
pop
adc
jbe
push
mov
jno
pop
stos
cmpsl
inc
in
les
out
faddl
ja
out
ss
outsb
push
leave
cmpsl
and
pop
fisubrs
pop
pusha
sub
test
jbe
push
popf
enter
sti
mov
lret
cmp
pusha
mov
test
testb
jbe
inc
inc
inc
and
or
cmc
pmovmskb
test
int3
popa
jno
sub
add
sbb
fcomp
ja
out
jp
loop
mov
sub
push
ret
and
loop
cmp
push
add
jmp
jbe
sub
cs
pushf
add
icebp
adc
ret
aam
loop
cwtl
movb
shll
sarl
leave
out
dec
test
sub
icebp
cwtl
inc
xchg
imul
enter
cmp
test
adc
fwait
gs
xor
repz
sahf
and
ljmp
jne
adc
outsb
out
jo
fcoml
ss
inc
push
sbb
xchg
subb
adc
jno
fstpl
jno
pop
or
dec
jo
in
cmp
insl
add
addr16
adc
sbb
xchg
repz
cmp
aad
rclb
add
jp
mov
xchg
lret
jns
mov
mov
das
sub
in
out
pop
insb
shll
outsb
pushf
gs
mov
or
rorb
dec
shrb
or
mov
inc
aad
adc
push
xchg
mov
mov
xchg
xor
jb
je
scas
scas
and
out
add
sub
sbb
cmp
or
mov
into
jbe
cwtl
out
mov
mov
mov
dec
xchg
ret
jg
sbb
dec
push
mov
ret
xchg
sahf
test
fbstp
aaa
addr16
xchg
scas
sbb
pop
mov
xor
leave
adc
mov
sbb
and
xchg
gs
sbb
movsl
cmp
push
xor
push
pop
mov
push
cmp
and
sbb
cld
out
insl
imul
aam
jne
les
adc
stos
mov
sub
sbb
popf
test
data16
push
test
mov
mov
mov
inc
jnp
icebp
and
ss
sub
push
or
push
cmpl
stos
mov
mov
fwait
stos
jbe
hlt
stc
outsb
cmp
stc
mov
subl
push
fdivrs
sbb
cld
iret
adc
and
cmp
daa
cmc
in
lock
sub
mov
jae
jae
push
shl
add
hlt
andb
cmp
xchg
cli
xor
fisttpll
inc
pop
or
cs
aad
inc
jmp
xchg
mov
xchg
dec
test
mov
shlb
dec
sub
pop
mov
jne
cs
mov
inc
push
or
je
push
mov
pmullw
mov
and
push
fcompl
jbe
sub
clc
in
pop
das
lret
adc
rcl
jmp
adc
inc
sub
mov
jl
push
pop
pop
bound
push
and
xlat
sbb
dec
popa
mov
outsb
sti
jae
leave
jnp
repz
lahf
dec
loopne
aam
cmc
cwtl
or
movsl
lret
pop
ljmp
jle
filds
ja
fisttpll
idiv
and
lret
xor
jbe
fmull
push
mov
ficompl
daa
enter
mov
inc
mov
movsl
stos
movsb
pop
call
push
insb
mov
jmp
in
cld
pop
xchg
mov
mov
mov
rcrl
addr16
adc
rcl
cmp
je
sbb
add
fiadds
jmp
xchg
push
cmp
jno
addb
pop
insl
int
nop
std
les
xchg
aas
push
push
sub
dec
push
xchg
fwait
xor
and
cmpsl
aad
ljmp
mov
xorb
add
fisttpll
push
scas
jno
xchg
les
psubd
popf
inc
lea
fs
xchg
jbe
out
mov
out
lock
or
pop
cmp
loopne
add
es
fcmovnbe
in
jo
mov
dec
sub
incb
aad
xlat
outsl
xchg
sarl
imul
fldt
pushf
mov
mov
out
fisttpl
push
stos
add
into
jb
pusha
push
xor
add
into
xchg
jecxz
js
ret
cmp
testl
cmp
mov
and
fildl
std
cmp
mov
cmp
sub
and
repz
mov
lahf
pushf
cmp
mov
adc
out
jmp
clc
inc
loopne
test
mov
push
push
add
cmc
sub
hlt
xor
add
jne
cmc
test
leave
inc
cmp
aaa
fistps
pop
popa
lods
sbb
out
sbb
or
sahf
insl
adc
outsb
cltd
data16
sub
jg
cmpb
and
cmpsb
lock
xchg
mov
or
cli
push
fcmovu
sub
fwait
cmp
in
adc
mov
stos
cmp
icebp
icebp
xor
dec
sub
jle
fbld
mov
inc
mov
xchg
mov
in
cwtl
mov
jae
adc
xchg
in
inc
pop
push
adc
pop
push
jge
jge
les
lods
mov
fmuls
test
movl
shrl
dec
cld
pop
fsubrs
push
pop
gs
add
xchg
sub
adc
or
in
bound
leave
pop
dec
addl
and
hlt
div
and
lret
and
decb
call
push
sbb
lods
aas
aaa
lahf
mov
pop
mov
cmc
add
and
cli
add
push
adc
aas
sub
test
lret
xor
outsl
inc
scas
or
add
mov
inc
cmpl
add
sub
dec
cmpsb
inc
dec
ficoms
cwtl
mov
shrl
add
aam
add
rcll
mov
pusha
ret
cmp
add
pusha
and
cmp
jns
xor
and
cs
lods
cltd
pop
sub
insb
cwtl
and
lahf
sbb
out
push
pop
loope
inc
mov
aas
mov
test
rcr
cwtl
fnstcw
aam
es
sbb
loop
pop
xor
repz
cwtl
ret
data16
movsl
or
xor
xchg
in
imul
sub
lret
lea
cmc
cmpsb
push
js
mov
popf
aam
sub
int3
outsb
mov
fwait
addb
dec
clc
ret
pusha
add
add
pop
icebp
pop
pop
loope
xor
inc
lods
add
nop
fcmove
cmpsb
and
xor
cmc
cmp
inc
add
negl
enter
imul
in
mov
movsl
frstor
adc
bound
rolb
lds
es
lods
ss
loop
sbb
jb
cmp
mov
xchg
fdivrs
lea
pusha
scas
popf
cld
jl
fs
popa
mov
mov
cmp
mov
stc
scas
out
scas
jno
fidivs
xor
cmp
mov
xor
push
scas
hlt
cmp
dec
pop
adc
cmc
ljmp
pushf
dec
shld
pop
movsb
jne
xchg
sbb
mov
clc
dec
gs
push
jecxz
push
sbb
and
xchg
in
xlat
test
clc
sub
popa
xchg
mov
mov
mov
add
sub
adc
jecxz
adc
scas
jne
mov
xrstor
lcall
pop
outsb
dec
pop
test
inc
sub
dec
ret
pushf
sub
adcl
cmp
jl
ja
mov
mov
xor
push
mov
out
shlb
out
sub
push
dec
leave
jg
or
scas
jo
mov
mov
push
or
into
aaa
dec
shll
shlb
ds
out
call
cmp
icebp
dec
inc
test
iret
push
or
ja
lods
in
mov
loopne
adc
and
pop
and
jb
insb
rorl
call
jl
movsl
shll
fimull
cmp
sti
xor
pmaddwd
sub
mov
jle
js
xor
mov
cmpsb
sbb
leave
arpl
sub
fwait
adcl
sub
xchg
pop
iret
mov
ja
pop
addb
das
test
xchg
and
pop
fdivs
aas
clc
sbb
xchg
xchg
int3
jg
ljmp
fldcw
repz
stc
lods
imul
fldt
loope
clc
adcl
out
pop
ss
or
xchg
fldenv
repnz
loop
out
pop
pusha
add
das
fstpt
pop
sub
xchg
scas
pop
pushf
test
cmp
xchg
lods
xchg
divb
inc
push
sahf
and
test
and
data16
xchg
pop
call
cmc
jl
fcoml
paddq
outsb
mov
mov
lods
pop
ds
add
adcb
jo
sub
adcl
movsl
push
mov
push
mov
int
out
inc
jmp
adc
out
cld
imul
push
daa
push
aam
mov
jmp
mov
out
aas
rcr
es
pop
iret
pop
sub
jnp
jge
sbb
sub
mov
test
ret
mov
dec
lds
xchg
mov
push
xchg
or
mov
inc
into
daa
xor
mov
lock
in
in
push
mov
pop
jae
cmc
test
mov
cmp
or
jb
ljmp
adc
xor
scas
popa
jg
das
pop
ja
mov
loopne
dec
mov
xor
mov
sub
jns
lahf
roll
sarl
cltd
cmpsb
cmc
xor
and
cmc
pusha
scas
cli
cmp
ficompl
subl
xor
cmc
fstpl
pop
adc
cmpsl
jne
jge
dec
and
aam
xchg
mov
ss
cmc
adc
inc
out
mulb
dec
scas
jne
xlat
pop
fists
mov
jb
int
pop
outsb
sub
iret
bound
sbb
addr16
inc
pop
inc
cmp
jle
stc
lret
adc
add
aam
push
push
sbb
mov
sbb
fstps
sahf
imulb
lock
fs
out
push
out
in
adc
les
mov
mov
clc
dec
cmpsl
mov
dec
in
loop
lret
or
out
xor
mov
dec
fwait
jl
push
sub
bound
out
xor
push
mov
mov
subb
mov
shrb
jecxz
test
out
pop
iret
dec
cmp
ret
mov
sahf
sti
aas
sub
adc
mov
and
and
pop
jns
lcall
scas
pop
aas
xchg
js
lcall
in
inc
inc
adc
push
lcall
jg
aaa
xchg
pop
add
daa
mov
jmp
xchg
arpl
mov
or
test
push
out
jge
xchg
jb
inc
or
outsb
cld
sub
xchg
mov
jo
xor
push
dec
inc
inc
test
jl
lret
call
jmp
lret
sub
arpl
movsb
int
das
loop
clc
sahf
push
mov
push
les
mov
and
pop
fisubs
jo
imull
fsubrs
jmp
clc
or
popf
mov
dec
adc
mov
cmp
movsb
pop
ret
in
mov
push
lret
push
stc
push
call
int
add
sub
scas
rcr
int
mov
leave
shl
mov
frstor
xchg
adc
fnstenv
roll
push
leave
loop
std
or
dec
dec
inc
imull
xor
sbb
push
into
and
cltd
pop
or
inc
push
cmpb
jb
into
pop
dec
dec
repz
incb
jmp
pop
mov
dec
dec
iret
outsb
cmp
cmp
pushf
sbb
add
xor
outsb
xlat
jl
jge
clc
push
inc
outsl
insl
insl
stos
or
pop
in
pop
mov
fldt
xor
cwtl
mov
shll
mov
dec
cmp
dec
das
and
mov
bound
cwtl
pusha
push
xor
add
clc
lds
or
test
imul
lock
mov
lock
data16
cmp
sub
or
sahf
dec
sahf
repz
mov
aaa
jns
sbb
mov
adc
popf
test
pop
jo
mov
jns
std
mov
push
cmp
mov
or
insl
pop
or
js
fiadds
mov
lock
pushf
in
into
push
bound
push
and
pop
xchg
sbb
jno
dec
repnz
sbb
mov
mov
aam
push
in
andl
jle
push
out
fiadds
popa
push
outsl
xor
inc
sbb
scas
add
js
mov
add
push
je
fucomip
insb
out
jbe
adc
mov
ret
out
mov
sub
sbb
lret
scas
das
filds
int3
adc
test
lods
ds
fdivp
and
mov
insl
and
add
sahf
sub
push
in
aam
lods
ljmp
jae
stos
out
cmp
jnp
sbb
add
and
or
std
popf
cmp
xor
add
or
sbb
call
shll
adc
fs
or
cs
je
sar
dec
icebp
push
js
repz
mov
pop
mov
mov
dec
mov
mov
jmp
xchg
mov
arpl
adc
xor
xchg
je
fcmovnbe
add
movsb
pop
fidivs
jo
mov
cmp
scas
out
leave
leave
rdmsr
sub
popf
add
or
inc
sbb
mov
or
fwait
cmp
int
push
push
inc
push
cmpb
sbb
push
jo
fsubl
xor
jp
repz
int3
add
mov
scas
pop
insb
dec
pop
inc
dec
in
movsl
repnz
arpl
xor
dec
adc
adc
std
orb
icebp
je
pop
jae
push
or
shlb
xor
clc
jnp
into
adcl
inc
pop
stos
cmpsb
bound
push
xor
cmp
rcll
jmp
pusha
cmp
leave
or
dec
fcomip
scas
outsb
cmc
mov
aam
pop
sbb
loope
dec
sbb
das
in
mov
adc
mov
mov
fmull
sub
repnz
addr16
jle
je
fadds
sbb
movsb
pop
jmp
test
jge
insb
int3
xor
loop
or
mov
xchg
add
add
xor
stos
pushf
enter
int3
and
mov
popa
sbb
hlt
push
push
lds
xor
cltd
movsl
push
icebp
xlat
inc
mov
push
cs
fistpll
mov
or
jmp
jo
sahf
loopne
inc
xor
jecxz
dec
js
inc
into
or
mov
dec
rclb
aam
test
pop
mov
orb
mov
aad
and
mov
aam
call
mov
mov
mov
jns
sarl
fcmovu
movb
inc
neg
mov
add
jle
xchg
rcll
push
aam
js
jnp
idivl
sub
popf
sub
enter
mov
xchg
add
es
rorb
cmp
dec
int
push
dec
and
lret
shl
insb
pop
mov
and
stos
orb
inc
lret
cmp
dec
fdivrl
lret
mov
rorb
xchg
pop
and
outsl
das
dec
or
cmp
ss
jg
hlt
js
rolb
or
adc
mov
push
fwait
addr16
mov
jmp
sbb
fnstcw
mov
xchg
cmp
jge
push
dec
sub
xlat
shrb
mov
stos
out
or
push
lods
sbb
cmpsb
call
cli
or
and
cmc
sarl
mov
inc
daa
push
push
dec
xlat
in
scas
jb
in
mov
xchg
jae
iret
or
mov
ja
sbb
aad
pop
pop
aaa
or
inc
adc
or
push
repnz
or
std
or
push
add
mov
imul
dec
scas
mov
cmpsw
dec
push
xlat
adc
mov
push
jmp
dec
sub
mov
pop
filds
jl
mov
push
sub
fsub
xor
cwtl
sti
or
test
xlat
dec
mov
xchg
cmp
js
fistpll
xchg
inc
shr
bswap
jnp
clc
ret
pusha
push
cmp
jmp
mov
adc
in
or
lds
jmp
fidivs
cmp
xchg
popf
mov
push
clc
mov
dec
add
lods
pop
scas
lds
mov
sti
mov
xchg
mov
fisubrl
jns
imul
cwtl
mov
add
pop
add
ja
xchg
xor
mov
add
lahf
inc
push
nop
sbb
out
lds
insl
arpl
lea
mov
mov
pop
mov
jb
mov
inc
out
adc
sbb
mov
pop
imull
cmp
mov
push
push
lcall
repz
push
stos
pop
jle
nop
xchg
or
shll
inc
jae
mov
pop
aam
add
repz
mov
shl
dec
cltd
jl
dec
ja
pop
stos
subb
pop
lahf
push
mov
xchg
imul
popf
pop
fs
out
mov
cmpsl
xchg
dec
clc
sub
sbb
mov
loope
ljmp
jns
sbb
ret
push
lea
pop
sub
in
aas
fstpl
cmp
sub
mov
pop
sarb
or
shlb
aas
xor
xor
dec
dec
ret
jno
rclb
cmpsb
sbb
dec
xchg
stc
hlt
add
sub
fmuls
out
lret
hlt
mov
pop
into
popa
aas
ficompl
mov
cli
sbb
mov
daa
ficompl
and
fcmovnu
add
stos
popl
cwtl
ja
and
dec
in
or
inc
jnp
sub
imul
int3
loope
stos
in
add
mov
mov
mov
jnp
sbb
rorb
or
int3
ret
or
pop
rdmsr
ja
xchg
sarb
inc
mov
sub
sti
dec
arpl
add
stos
mov
pop
inc
and
ja
xor
rol
data16
ds
decb
push
fwait
out
stos
mov
sbb
je
pop
or
pop
adc
cmpsl
jbe
mov
xchg
mov
mov
sub
sahf
xchg
mov
mov
mov
mov
scas
sahf
jg
fwait
sbb
rcrb
ret
jmp
pop
imul
test
add
inc
xchg
mov
pop
in
aam
stos
imul
sbb
std
sub
mov
xchg
inc
pop
stos
dec
mov
mov
lret
jne
xchg
scas
andb
sbb
cmc
repnz
in
cmp
lcall
test
or
xor
adc
js
push
fldl
and
faddl
lea
test
fildll
mov
push
cmp
inc
xchg
enter
mov
fwait
mov
vrcpss
push
test
mov
bsr
mov
imul
das
cmp
mov
outsb
push
jecxz
sbb
push
mov
addr16
sahf
decb
jl
rcrl
jnp
mov
and
stos
mov
mov
shrb
and
mov
or
test
scas
fidivrl
bound
or
das
push
xchg
loopw
mov
mov
xchg
mov
xchg
es
imul
and
dec
jo
cs
xor
push
lods
out
jnp
leave
fisubrl
bound
sahf
addr16
mov
idivb
mov
jno
pop
push
scas
and
cmp
push
pop
aam
stc
ljmp
push
xchg
mov
dec
sub
dec
repnz
sub
sub
xchg
fstpl
inc
mov
inc
pop
stc
rclb
popf
loope
push
push
loopne
loope
add
scas
sub
fdivrl
pop
mov
push
push
jmp
xor
das
es
jmp
or
mov
lret
jbe
push
cmpb
xor
sub
rorb
mov
mov
pop
dec
mov
push
push
loope
mov
ja
scas
mov
or
xchg
arpl
xchg
add
lret
sub
mov
fcomps
hlt
aam
or
jg
or
shr
pop
mov
sub
xorl
sub
das
add
scas
int3
mov
xor
scas
inc
andl
mov
ds
adc
cwtl
xchg
int3
jmp
and
and
loopne
in
icebp
adc
sub
in
bound
ljmp
jae
loope
push
fidivl
mov
jp
mov
cmp
dec
mov
stos
shrb
fsubl
xchg
pop
sub
ficompl
test
stos
jns
test
push
mov
lea
dec
mov
pusha
add
sub
arpl
add
inc
sarl
out
jns
test
sub
and
adc
mov
pop
shll
jbe
adc
lea
mov
dec
rcr
push
inc
js
sbb
push
mov
shl
adc
push
cmpsb
inc
ret
jp
jae
jbe
maxps
es
mov
fs
out
mov
imul
mov
push
pop
push
mov
lods
inc
push
fadds
mov
mov
cld
jl
les
add
pop
aam
mov
sub
sti
and
push
xor
inc
cmp
movsl
daa
xchg
sarl
lcall
jmp
inc
inc
dec
sarb
ret
dec
mov
lea
ss
cmpsl
push
test
jecxz
mov
mov
adc
adc
add
or
xor
leave
mov
out
jge
dec
loope
sub
mov
rclb
sub
in
pop
mov
sbb
or
popf
movsb
push
ds
push
xlat
loop
or
adc
aam
jmp
cwtl
mov
add
cs
lcall
mov
sbb
xor
popf
push
mov
sti
pop
das
jge
xorl
ud2
sub
push
dec
mov
xchg
cmp
push
pusha
aad
ss
and
push
sub
jp
out
lret
shr
dec
or
or
jno
add
cli
jno
cli
adc
inc
daa
lret
fsubrl
sar
adc
fwait
nop
xor
and
shlb
pop
add
pusha
or
repz
mov
leave
orl
jne
pop
std
mov
xlat
bound
pusha
aas
stos
inc
cs
shlb
test
dec
int
pop
or
add
sahf
lods
ret
icebp
leave
test
xchg
dec
and
or
push
out
mov
mov
add
jmp
lds
rorl
stc
sbb
addr16
add
inc
inc
adc
jo
shrb
test
test
or
jecxz
enter
jp
fs
jne
fnstenv
ret
ret
dec
lahf
sti
jb
mov
sub
mov
push
lods
pop
loop
fstl
sbb
and
insb
adc
clc
mov
std
or
ret
dec
jmp
imul
in
push
and
inc
fstp
push
sbb
and
sub
cld
jle
add
adc
push
dec
add
adc
xchg
in
mov
mov
test
jns
or
pusha
stos
jb
push
clc
push
mov
lahf
xor
addr16
aam
mov
pop
ljmp
jae
xor
fcompl
add
test
jbe
imul
sbb
dec
mov
sbb
and
inc
adc
pop
fnstsw
xchg
movsl
mov
scas
jnp
lahf
cmpsb
sbb
icebp
dec
aam
ss
inc
xchg
push
fcmovne
jl
push
jo
lret
sbb
pop
insl
jno
cmp
scas
mov
sbb
jnp
mov
fisubrs
adc
hlt
jo
arpl
xchg
inc
testb
sti
mov
lods
add
mov
pop
pusha
shlb
lret
dec
inc
pop
dec
push
imul
push
pop
les
or
pop
loopne
jbe
pop
jbe
aam
test
lret
push
mov
shrb
push
stc
sbb
push
sub
lcall
xchg
mov
xor
pushf
fsts
pushl
add
lcall
mov
cmc
std
outsb
mov
pop
xor
data16
jp
aad
sub
ja
jp
or
jbe
dec
jae
xlat
mov
and
out
lock
stc
fsubr
add
mov
mov
pop
jge
iret
pop
mov
mov
jmp
cmp
fsubl
rol
cmp
jae
xor
xchg
icebp
or
cmc
mov
cmpsl
xchg
aam
xchg
add
aaa
ret
fistpl
and
out
lahf
cmp
lds
jl
adc
js
pop
arpl
sbb
cli
cmc
sub
pop
rcll
sbb
and
lods
push
test
push
mov
gs
jns
inc
mov
mov
jge
sbb
repz
lea
mov
loop
sub
or
bound
mov
test
sub
mov
add
lds
and
push
or
jmp
out
movsl
shl
mov
aaa
mov
sbb
cmp
ss
aad
xchg
cmc
pop
xchg
mov
fwait
negb
lcall
imul
add
aaa
fsubrl
std
mull
adc
popa
mov
and
xchg
fstl
jle
imul
shr
xchg
sub
add
cltd
insl
adc
lods
mov
shrb
inc
xchg
loop
in
outsl
jb
push
pop
sub
add
fiaddl
outsb
or
push
in
loopne
pop
add
cld
loope
lods
lods
pop
adc
fdivr
dec
or
lods
pop
sti
mov
iret
stos
mov
jp
mov
hlt
mov
shrb
sub
inc
adc
daa
aas
adc
cwtl
aad
clc
mov
adc
xchg
push
or
addb
dec
mov
out
pop
push
push
and
mov
test
push
fsubl
enter
dec
xchg
pop
pop
int
adc
inc
xchg
outsl
mov
mov
fldl
test
jge
mov
arpl
sbb
push
push
cld
divb
mov
mov
pop
pop
mov
cmp
or
fidivrs
dec
or
nop
dec
and
dec
pushf
adc
test
or
inc
push
les
dec
pop
mov
fs
ljmp
out
and
sub
mov
fnsave
jp
out
call
xchg
cmpsl
leave
loop
dec
fwait
jb
fistps
jmp
lods
shlb
fadd
pop
lcall
lock
push
or
pop
jl
xor
std
sub
and
sbb
mov
inc
out
lret
pushf
popf
imul
xchg
cltd
mov
and
sbb
inc
xor
cmc
in
hlt
rolb
or
fsub
fs
cmp
iret
cs
fsub
mov
in
mov
cmp
mov
jbe
dec
aam
stos
imul
inc
inc
cld
cmp
jo
movsl
dec
fisttps
insl
mov
sbb
lea
lret
xor
mov
cli
and
pop
ficompl
loop
in
jo
iret
sub
pop
dec
movsl
aad
mov
xor
jno
push
lahf
cmp
arpl
popf
or
push
cli
mov
jns
dec
push
insb
sbb
mov
or
add
inc
cmp
sti
lock
pusha
jecxz
cmp
repz
shl
cli
in
or
out
rcrl
mov
sub
jg
pop
leave
insl
add
mov
verw
and
stos
cmp
and
pop
mov
sub
movsb
mov
dec
fs
ljmp
rcrb
mov
jb
int3
stos
add
xlat
or
mov
mov
out
add
pop
add
addr16
sbb
adc
dec
mov
psllw
es
hlt
in
cmp
adc
mov
es
loopne
fistpl
jle
add
sub
xchg
xchg
cwtl
aaa
lahf
and
loop
adc
fwait
add
pop
pushf
push
imull
mov
sub
or
push
iret
mov
pop
add
jnp
mulb
mov
and
adc
inc
and
fdivl
xor
loope
stos
xor
rorl
popf
test
mov
mov
dec
add
loope
repnz
jecxz
sbb
pop
adc
notb
jbe
pop
mov
pop
add
mov
sub
dec
loopne
pop
inc
mov
pop
jmp
fildl
sahf
out
rcrl
and
add
aas
test
sbb
inc
ret
push
jnp
iret
cmc
js
dec
movsb
sarb
imul
jne
xchg
inc
xor
sbb
jno
cmpb
push
and
es
lret
mov
cmpsb
adc
test
mov
test
icebp
dec
repz
cwtl
cmp
ror
mov
int
mov
inc
pop
mov
xchg
and
out
test
imul
push
je
jno
sbb
add
mov
loop
mov
inc
cmp
add
jle
repnz
pop
mov
and
adcb
mov
mov
clc
inc
int
call
push
inc
sub
stc
inc
fisubl
popf
ja
mov
fstsw
nop
sti
jnp
out
ja
lea
mov
push
mov
xchg
aad
mov
fistl
lock
xchg
cmp
imul
xor
imul
fisttpl
fildl
fstps
aaa
in
in
push
add
xor
add
arpl
sub
loop
xchg
mov
sub
stos
cmp
push
sub
je
mov
dec
jnp
xor
out
or
imul
or
and
out
and
cmp
int
shlb
rcll
lret
dec
movsb
inc
fadds
mov
or
sbb
in
rorb
push
sub
enter
pop
pop
lods
jne
cmp
das
sbb
sti
sti
pop
and
imul
push
lahf
sar
test
lahf
push
aaa
sub
fwait
fs
pop
lea
rclb
cltd
and
dec
add
xlat
cmc
push
inc
inc
lret
xchg
sbb
cmp
popa
repz
lahf
push
sbb
lock
mov
ror
push
pushf
sub
jo
mov
inc
mov
fists
pusha
std
jne
jae
lahf
pusha
out
cmpsl
dec
dec
daa
cmp
cmc
lods
mov
jb
rcll
popf
in
jmp
fs
pop
in
fs
push
mov
mov
outsb
push
and
int3
out
mov
sarb
loop
dec
dec
push
fwait
push
or
loop,pt
outsl
aad
jns
std
and
jmp
jp
dec
stos
mov
mov
jge
sbb
lret
rclb
cmpsb
inc
mov
stos
ljmp
aad
jbe,pn
bound
mov
test
push
insl
xchg
pop
out
call
repnz
repnz
pusha
xchg
dec
lds
xchg
xchg
pop
sarb
jle
into
push
gs
jne
in
pop
sbb
or
cmp
and
loope
jmp
cmp
sbb
mov
shrl
xchg
mov
mov
pop
andl
shl
scas
test
sarl
mov
dec
dec
fsubl
sub
ret
stos
xchg
adc
out
ud1
jg
push
incb
shll
push
out
push
lods
mov
dec
je
push
outsb
or
and
mov
lods
push
inc
into
mov
arpl
lods
outsb
ljmp
cmp
cmc
jge
dec
jb
out
xchg
xchg
dec
push
ficompl
mov
mov
jno
sub
aam
sbb
and
shll
mov
loopne
inc
je
pop
push
mov
jo
mov
cmp
ja
adc
and
repz
dec
arpl
add
pslld
mov
outsl
das
lds
subb
dec
or
leave
push
fiaddl
and
cmp
push
sti
pushf
ja
adc
sub
mull
mov
aad
jmp
in
das
sub
xchg
ficoms
xor
dec
mov
lock
hlt
cmc
movsb
ror
pop
push
sahf
mov
inc
jmp
inc
jmp
mov
scas
fidivrs
xchg
hlt
inc
inc
enter
dec
mov
aas
add
test
mov
xor
jp
into
loopne
out
rcll
push
pop
dec
dec
into
mov
dec
push
xor
int
pop
sbb
sub
push
cmc
push
dec
sbb
lods
mov
jnp
and
dec
mov
outsb
jg
push
fldl
lds
and
and
ds
dec
jne
subb
mov
cmpsl
xchg
test
pop
jo
aas
bound
push
addb
mov
mov
jmp
into
push
mov
jbe
fidivl
or
into
and
iret
movsl
subl
adc
jns
xchg
push
dec
jne
dec
sbb
neg
pusha
jmp
shrl
add
shll
shl
shlb
cmp
or
mov
pop
sbb
adc
in
std
pushf
cli
mov
sbb
cmp
jmp
jmp
addr16
mov
cmp
data16
insb
push
cld
cmp
sub
mov
pop
jg
repnz
jb
add
fucomip
cmp
lea
jb
adc
dec
push
dec
mov
scas
sahf
mov
lods
mov
add
sub
fiadds
inc
and
pop
pop
lahf
pop
insl
add
push
jle
push
aad
sti
fdivrl
push
or
and
or
inc
push
aas
lods
jl
xlat
aad
dec
pop
lock
xor
imul
rcll
iret
fwait
pop
lahf
bound
inc
xchg
fwait
jae
imul
dec
push
stos
pop
cmc
adc
lahf
mov
mov
jmp
inc
movsl
mov
movsl
addl
sbbb
add
mov
fadds
dec
xchg
loopne
jns
pop
inc
cmpsb
dec
call
inc
mov
adc
xlat
aad
xor
bound
repz
sbb
popf
out
test
cmp
jmp
adc
out
in
and
mov
movsl
mov
ret
subb
into
cltd
sub
xchg
mov
hlt
imulb
push
popa
in
mov
cli
pop
test
arpl
ljmp
psrlq
mov
pop
getsec
js
orb
adc
roll
out
imull
xor
ds
push
jl
test
fisubs
sbb
imul
into
lcall
pop
pop
pop
es
xor
inc
mov
icebp
sahf
pop
bnd
xchg
ja
push
and
pop
loope
mov
mov
scas
lock
add
xor
stc
and
lea
mov
fyl2x
mov
cmp
sub
cltd
mov
xchg
jle
insl
mov
nop
ds
add
xor
pop
dec
jecxz
ficompl
inc
push
xchg
cli
pop
daa
movsb
cmp
call
lret
jb
sub
sbb
push
cld
in
mov
mov
dec
lcall
fcmovu
xchg
mov
jo
xchg
mov
mov
shl
fmuls
mov
out
lock
movsb
subl
push
subl
push
mov
mov
jmp
pop
icebp
mov
adc
icebp
dec
daa
mov
and
add
add
adc
mov
sub
xchg
sub
jo
stc
aaa
std
mov
adc
fs
into
lea
aaa
jne
ret
fsub
jp
and
xchg
sub
out
cmp
add
pop
or
adc
or
mov
adcl
aad
mov
icebp
mov
cmc
daa
movsb
clc
pop
adc
notl
scas
xchg
iret
push
scas
hlt
movsl
std
mull
fistps
ret
mov
lock
dec
xor
cmp
insl
jmp
test
jae
mov
push
sub
mov
dec
out
cltd
icebp
or
repnz
adc
popa
loop
lea
cmpsl
mov
add
xor
mov
aam
xor
int
add
push
in
mov
pop
test
sub
movsb
push
mov
mov
dec
add
hlt
call
sub
mov
rorl
leave
hlt
stc
outsb
outsb
std
push
rcrl
add
pop
shrl
mov
rorb
xor
or
scas
arpl
pop
in
push
sbb
cmp
mov
mov
xor
cmp
test
mov
mov
pop
nop
xor
adc
fwait
stos
lods
outsl
test
in
aaa
int
lods
sub
and
inc
lret
jge
xchg
ret
cmp
xchg
or
add
push
pusha
fcmovne
test
xchg
dec
aaa
movsb
or
lock
cmp
call
flds
les
rorl
ljmp
cmp
lret
or
jno
lcall
dec
jecxz
push
negb
test
mov
fs
add
cmp
insl
lds
incb
xchg
push
out
or
fcoms
add
mov
call
jecxz
hlt
clc
leave
sbb
scas
and
add
fwait
sub
int3
cmpsl
sub
aad
orl
xor
cmp
cmp
sbb
sub
mov
lock
js
aas
mov
sbb
adc
mov
push
addl
dec
jge
mov
push
movsb
adc
mov
test
call
lods
and
push
sub
jecxz
inc
jecxz
mov
xlat
fnstsw
rcrb
sarb
enter
lods
aad
mov
movsb
mov
and
mov
lcall
cs
cmpsl
xor
xchg
out
mov
push
loopne
call
mov
out
dec
cmp
xchg
push
dec
fdivrl
pop
leave
fwait
scas
rolb
out
aaa
lock
push
add
rclb
lods
sbb
rcr
repnz
lds
mov
push
pop
outsb
cmc
cmp
sahf
push
mov
pop
js
test
in
xchg
testb
std
ljmp
sti
fimull
mov
cmp
push
or
dec
lds
mov
sub
out
xchg
sbbl
xchg
xor
aam
xor
ds
push
and
inc
inc
xor
dec
fwait
and
push
out
jp
sbb
sbb
mov
ljmp
adc
icebp
pop
or
sub
aad
mov
cs
movsb
jno
pop
popf
imul
shl
mov
and
adc
inc
adc
sub
lret
mov
clc
push
insl
in
sub
sbb
outsl
or
add
xchg
fisubrl
add
sbbl
test
push
hlt
into
aam
aaa
arpl
lret
je
cwtl
mov
cmp
sar
xchg
cmp
lcall
sub
sbbb
out
int3
cs
cmc
xorl
es
fcomps
and
pop
stos
pop
cmp
xchg
adc
enter
loopne
aad
adc
add
jae
mov
or
das
fsubp
mov
pop
inc
mov
adc
or
jo
add
pushf
mov
jns
js
mov
pop
in
mov
mov
and
movsb
dec
adc
daa
sub
faddl
sbb
fwait
lret
cmp
lea
xor
test
xchg
cmp
ds
dec
rolb
jmp
dec
faddl
or
std
inc
les
es
lds
inc
jle
ficoml
push
jg
popa
loope
pushf
mov
in
mov
and
sub
cli
jg
hlt
sub
shlb
fsubs
pop
ret
xchg
mov
repnz
mov
shlb
and
xchg
test
out
lods
xor
fisttpl
xor
add
push
or
cmpsl
in
adc
sub
xchg
cwtl
sbb
imul
xor
mov
test
or
mov
pop
arpl
mov
or
rcl
clc
lahf
add
pop
icebp
lcall
cmp
dec
jno
jo
adc
shll
mov
push
pop
adc
jnp
lret
mov
pop
and
xchg
xchg
pusha
lret
and
jl
outsl
popa
mov
push
dec
sbb
inc
mov
mov
inc
mov
sbb
les
lea
xchg
jnp
cs
out
imulb
mov
cltd
xchg
in
imul
mov
and
mov
bound
sub
fsubrp
sbb
sbb
add
add
ss
daa
decl
add
rclb
hlt
push
xchg
push
pusha
imul
outsl
and
pop
gs
pop
cmc
pop
xchg
and
stos
js
sub
pop
imul
mov
fsts
aaa
xor
ljmp
xchg
cmpsb
shl
mov
scas
in
xor
xchg
cltd
sahf
ret
std
dec
pop
sbb
mov
inc
imul
cmpsb
int3
test
and
cmp
adc
clc
in
mov
push
or
loopne
xchg
fcmove
and
sbb
push
popf
mov
fistl
jno
mov
call
fildll
in
inc
insb
out
leave
push
add
jno
test
sub
and
lock
dec
pop
mov
xchg
sbb
mov
arpl
sub
loopne
mov
mov
cmp
bound
or
jns
push
ds
mov
jp
fld
lea
xchg
push
cmpsl
xor
add
sub
test
test
add
rcr
jae
xor
jno
mov
inc
pop
add
sbb
sbb
lea
loopne
jl
mov
stc
push
jge
sub
daa
jno
add
int
adc
fyl2xp1
add
call
adc
ret
add
aas
jns
mov
xorb
arpl
or
inc
push
cmpsb
and
dec
jl
xor
movsb
dec
jmp
add
into
clc
push
push
mov
fadd
inc
add
sub
and
dec
push
xor
das
call
popa
int3
push
sub
jns
hlt
fists
and
stos
or
sbb
out
dec
addb
cwtl
push
pop
push
enter
leave
pop
or
adc
mov
lods
xor
lea
push
fsubs
mov
clc
sbb
ljmp
enter
sub
aad
fiadds
popf
imul
jp
mov
inc
fnstsw
mov
loope
jge
lds
lret
xor
int
add
and
jle
or
sub
mov
xchg
cmpsb
jne
push
xchg
insb
pusha
pop
add
js
int
es
insl
and
hlt
or
pop
das
mov
mov
in
les
cmpsl
out
call
orl
xchg
xchg
adc
fs
dec
mov
mov
inc
cmp
cmpsl
in
fcmovb
push
jl
push
or
iret
lahf
push
mov
sub
cmc
mov
mov
dec
insl
add
lea
sbb
pop
push
test
mov
inc
iret
mov
dec
pop
pop
sbb
ud1
mov
out
sti
mov
xor
movsb
add
mov
dec
pushf
add
push
jle
lret
mov
add
jbe
fwait
lea
dec
scas
je
and
sub
mov
cmp
inc
ja
std
popf
hlt
aad
sub
ss
cmp
test
sbb
jae
faddl
movsl
sbb
aaa
xor
xchg
inc
mov
insb
ret
mov
out
and
pop
sub
cwtl
lret
mov
jp,pt
mov
inc
roll
popa
cld
mov
cltd
cmp
mov
cli
and
hlt
mov
jno
aam
push
stos
sub
dec
inc
jo
mov
scas
orb
addr16
mov
gs
out
bound
insl
mov
jg
lcall
sub
rcrb
lock
inc
and
cmpsl
shrl
movsb
in
mov
adc
or
push
xchg
pop
fistpll
push
repz
fsubl
popf
adc
inc
insl
fisubrl
add
push
jno
push
iret
lcall
pusha
or
jnp
sbb
fstpt
jne
pop
push
jmp
jbe
xchg
mov
jecxz
out
imul
mov
xchg
popa
push
xchg
or
jmp
and
shlb
or
push
in
je
lret
in
arpl
xor
movsl
pusha
test
or
aad
adc
sarl
cmp
push
cmp
les
testb
repnz
frstor
andl
jmp
mov
mov
dec
mov
adc
addl
lcall
xor
test
mov
pusha
jmp
fmul
dec
adc
ret
fstl
cli
cmp
gs
cmpsl
mov
jmp
imul
loop
test
int
jno
test
jns
and
inc
pop
add
or
outsl
lret
rcrb
push
loope
mov
shrb
and
cld
push
xchg
or
inc
fisubl
in
or
mov
out
repnz
sub
cld
sub
movsb
in
pop
scas
movsb
push
test
add
addb
xor
scas
sub
mov
pop
insl
enter
mov
xor
cwtl
mov
cmpxchg
sub
idivl
or
mov
push
lds
dec
jg
fcoml
xchg
sarl
inc
cmpsb
sub
mov
dec
lcall
add
cmpsb
mov
mov
sub
movsl
mov
dec
gs
fwait
xchg
fmull
or
test
out
jecxz
je
fs
xor
or
inc
push
mov
mov
fdivs
es
adc
sbb
adc
sbb
mov
adc
jg
ljmp
in
inc
testb
jle
push
push
call
fisttps
pusha
xchg
and
dec
pop
enter
cs
sbb
dec
dec
sbb
outsl
or
pop
sbb
jp
lods
jl,pt
andb
imul
adc
inc
fldt
ds
out
mov
push
push
test
jbe
insl
aaa
testb
rorl
andl
test
jmp
insb
mov
test
lcall
ja
in
pop
movd
enter
in
clc
in
mov
inc
mov
cs
cmp
dec
js
test
test
js
jbe
jne
inc
sub
push
orb
in
outsl
xor
push
push
inc
dec
andl
sahf
xchg
ret
xchg
jge
adc
out
repz
hlt
ret
shrb
xsaveopt
xchg
pop
shl
outsl
pop
je
sbbb
xchg
loop
push
xchg
mov
icebp
pop
sahf
cmp
and
jnp
sub
dec
mov
and
dec
jnp
fidivs
test
in
fwait
pop
dec
shlb
cwtl
imul
ljmp
jo
cmc
cld
je
inc
call
pop
mov
pop
xor
enter
rorl
inc
adc
std
jp
add
inc
outsl
cwtl
and
ret
xchg
mov
mov
pop
pop
out
cli
push
lret
inc
loopne
rcr
out
adc
adc
out
pushf
pop
add
lds
mov
dec
test
cmpsl
rcll
std
and
ljmp
xchg
lods
fiaddl
bswap
xor
jno
dec
inc
das
fimull
in
clc
test
jb
or
idiv
mov
test
cmpsb
or
fwait
sub
mov
mov
clc
mov
js
adcl
scas
scas
dec
in
adc
pop
jecxz
adc
mov
cmp
or
cmp
xor
pop
in
lea
push
push
push
pop
pusha
or
pop
mov
and
pop
jmp
jle
pop
mov
mov
push
dec
inc
test
sub
test
mov
mov
inc
add
cmpsb
jno
fbstp
out
shll
adc
scas
or
push
lods
adc
imul
stos
adc
ljmp
mov
xor
xlat
sub
mov
dec
cld
lods
xchg
dec
test
ret
fimuls
sub
adc
lds
mov
in
or
fwait
jmp
inc
xchg
test
push
or
dec
lret
push
repz
cmp
out
lods
mul
pop
push
add
xchg
push
inc
dec
out
insl
rorl
faddp
lret
stc
shrb
sbb
aas
aad
dec
lret
cli
jo
insl
add
aam
pop
cmp
cwtl
cmp
hlt
pushf
xlat
rorl
cltd
mov
push
mov
add
push
sbb
lock
dec
test
sbb
call
dec
jno
pop
daa
fadd
dec
mov
movsb
pop
in
lock
shrb
mov
xor
pushf
pop
arpl
fs
sub
mov
mov
dec
mov
aas
push
pop
lcall
jmp
in
adc
sub
fmul
inc
mov
push
cmp
adc
lock
sub
dec
sarl
adc
add
and
jecxz
popf
mov
iret
mov
movsb
push
je
lds
arpl
fnstsw
jge
mov
xchg
scas
mov
fmul
push
mov
js
jl
push
jecxz
cmp
leave
lds
ss
aam
jo
mov
push
sub
outsb
sbb
icebp
loopne
arpl
test
jle
mov
movsb
dec
js
lret
loopne
jae
dec
and
gs
pop
xorl
test
sub
addb
cmc
cli
insb
call
jmp
cwtl
dec
insb
leave
shrb
mov
ja
lret
jno
jp
es
cmp
jle
in
ljmp
pop
es
push
mov
addr16
jbe
dec
rcrb
jmp
mov
jne
or
test
fisubs
mov
sub
inc
jae
inc
adc
mov
sarl
sub
jae
pop
cmpsl
in
mov
sbb
pop
sbb
frstor
movl
mov
mov
sbbb
cmpsb
or
mov
xchg
push
jmp
aam
stos
leave
lock
mov
cmp
jo
aad
addr16
dec
imul
dec
negl
inc
and
mov
jl
inc
data16
xchg
lods
pop
cmpsl
fimull
sub
inc
sub
rcl
mov
adc
pop
and
and
sbb
jge
sub
outsl
mov
sbb
and
ret
dec
mov
stos
maxps
iret
jns
push
inc
leave
pop
pop
lods
dec
sub
adc
sbb
dec
lret
adc
lahf
loop
into
aas
cmpsb
nop
mov
inc
ss
and
sub
fiaddl
std
jmp
adc
inc
movsl
push
dec
outsl
test
push
xor
add
sbb
incl
jnp
fsubp
sub
mov
and
test
mulb
xlat
cmpsb
fwait
sahf
orb
mov
adc
sbb
push
std
in
push
icebp
or
scas
stos
sti
mulb
fdiv
imul
dec
sarb
mov
xchg
shrl
aam
pop
inc
gs
push
jl
or
pop
xor
rdpmc
fisttpl
sbb
and
int3
xchg
jne
out
push
arpl
mov
movsl
pop
fnsave
cmpsb
or
into
add
and
mov
lcall
mov
jl
dec
loope
push
rcll
add
aam
or
std
aad
and
punpckhwd
and
lahf
inc
roll
dec
add
in
pop
dec
outsb
lret
hlt
adcb
movl
pop
adcl
xchg
jne
jecxz
out
outsb
mov
push
outsl
insb
mov
gs
cld
dec
mov
ljmp
jae
sbb
mov
and
cwtl
sub
push
ret
inc
jno
fldl
in
stos
dec
mov
cmp
dec
icebp
rol
icebp
inc
outsb
xlat
mov
mov
inc
test
addl
sub
in
push
jae
cmp
fistps
mov
faddl
jecxz
fisttps
out
sbb
push
mov
leave
je
inc
insl
push
in
jg
push
not
aam
mov
cmp
push
and
jp
int
loop
out
fdivrl
xchg
sbbl
cmpsb
repz
cmpsb
fcompl
pop
movb
push
sub
dec
adc
js
or
add
sahf
mov
in
loop
gs
stos
xor
xchg
outsl
inc
xchg
xor
xchg
ffreep
jecxz
stos
sbb
dec
push
scas
ret
scas
inc
dec
pusha
adc
push
cmp
in
lret
ljmp
and
ds
int3
js
push
aaa
iret
hlt
jns
mov
mov
xor
call
and
dec
xor
mov
push
into
mov
cmp
push
ljmp
and
popf
in
es
add
daa
sbb
or
add
mov
imul
nop
popa
sub
jbe
sub
add
mov
mov
roll
cld
dec
push
cmpsb
loopne
mov
cmp
insb
lds
daa
clc
addr16
in
repz
or
push
cmpl
dec
hlt
pop
mov
fidivrl
bound
mov
or
in
xchg
cmp
fdivs
mov
pop
pop
mov
enter
pop
rorb
push
push
mov
xchg
push
adc
jb
or
imul
in
loope
das
insl
inc
ss
mov
add
arpl
jge
fs
mov
sahf
xor
je
pusha
push
push
cld
lods
testl
xchg
fidivrl
inc
jbe
xchg
push
sbb
mov
pop
jae
push
mov
pop
jno
sbbb
loope
sub
jb
xchg
jle
aad
into
lds
gs
or
inc
test
mov
loope
cmpl
and
aas
fadd
push
sub
adc
lahf
adc
push
mov
sub
test
test
push
out
mov
push
fwait
jge
dec
in
jno
fdivrl
pop
mov
cmp
mov
dec
xor
xchg
mov
movsl
je
outsl
aam
mov
in
push
ja
gs
inc
sub
aad
mov
stos
scas
mov
mov
fcomps
arpl
or
xrelease
outsb
mov
adc
cmp
sbb
push
stc
imul
xlat
xchg
test
and
mov
mov
pop
mov
jp
leave
fwait
mov
mov
cltd
scas
addr16
mov
pop
rorl
in
sub
hlt
sub
xchg
mov
dec
jae
in
icebp
pop
adc
add
sbb
test
mov
and
mov
fisubrs
and
adc
jl
les
inc
fidivrl
sbb
sbbb
add
jns
sahf
xchg
push
push
jle
inc
mov
in
cmp
push
adc
imul
in
std
dec
xchg
pop
and
and
mov
loop
sub
stos
daa
jae
sbb
cmp
outsl
pop
std
adc
outsl
xchg
add
sub
xchg
out
and
ret
test
mov
andl
mov
and
push
imul
mov
pop
jbe
mov
ret
lea
popf
mov
push
loope
cwtl
jle
jg
lock
pop
pop
jmp
push
adc
xor
cmp
pushf
jo
mov
pushf
mov
dec
in
push
or
fs
mov
jae
imul
in
pop
fstpt
shlb
loopne
and
add
mov
mov
fwait
push
repz
mov
jmp
mov
insl
pop
sub
or
adc
jle
dec
mov
and
sbb
push
adc
in
lock
jo
ret
dec
xchg
or
push
inc
nop
je
pop
adc
mov
cmp
mov
or
inc
loop
sbb
or
lds
push
shrb
push
ja
lods
inc
mov
cmp
test
jge
mov
mov
jae
cltd
test
mov
mov
pop
pusha
or
sbb
add
push
xchg
notl
or
push
jg
in
in
xlat
cmpsb
insl
mov
add
lahf
div
loopne
shrl
xor
and
inc
insl
cmp
out
pop
and
arpl
xor
fs
ret
jbe
fwait
insb
mov
addl
loope
cmp
sbb
leave
lret
xor
popf
ret
xchg
movsl
sbb
jge
cli
and
pop
mov
jge
call
loopne
cs
or
jns
out
fistps
dec
dec
xor
in
repz
in
pop
push
imul
mov
jne
ret
jle
jle
inc
push
lahf
mov
pop
pop
divb
adc
js
nop
shl
cmpsl
iret
xlat
loope
ss
sub
mov
push
mov
inc
adc
insb
sbb
outsl
mov
add
pop
dec
rcrb
into
add
jp
fcoms
xor
adc
shll
pop
cmpb
adc
imul
cmp
or
loop
sub
xchg
fldl
pop
sti
pop
shlb
popa
unpcklps
lret
bsf
jb
and
xor
in
insl
jg
mov
xchg
xchg
faddl
xchg
push
mov
dec
out
in
int
jp
or
into
push
xchg
and
add
call
sbb
lock
insl
out
pusha
sar
inc
adc
subb
push
jnp
orl
mov
mov
pop
mov
jmp
and
roll
stc
rcl
movsb
or
xchg
and
mov
into
int
push
test
ret
push
loop
pop
xor
xchg
and
lret
movsb
movsb
inc
cld
inc
and
iret
dec
xchg
dec
cmp
int
and
je
hlt
call
clc
pop
mov
sahf
rcl
insb
push
add
xchg
and
jne
mov
lods
ret
mov
cwtl
dec
add
hlt
cli
sub
jne
push
dec
pop
fwait
imul
mov
icebp
mov
mov
lods
outsb
subb
in
sbbb
xor
add
cltd
or
fwait
push
dec
sbb
adc
pusha
inc
lahf
es
cmp
dec
in
mov
inc
call
sub
push
pushf
cli
pop
cmp
sarb
pop
call
jecxz
filds
shll
movsb
sti
mov
mov
ljmp
cwtl
push
pop
inc
pop
dec
xor
mov
testb
xchg
xchg
push
adc
rorl
mov
std
push
cmpsl
bound
cmp
push
pop
dec
leave
loop
int3
imulb
add
or
and
and
xchg
cmp
es
mov
mov
xchg
xchg
mov
cmp
cmp
adc
sbb
repnz
mov
push
jle
sub
adc
cmc
pop
jne
cmp
xchg
fldcw
pop
leave
dec
sahf
out
sarb
xlat
sbb
cmp
sub
fwait
shll
mov
add
orl
je
lahf
cli
mov
mov
negl
sbb
leave
stc
fcomps
fdivl
lods
jmp
jbe
mov
or
leave
fistpll
mov
lret
mov
fildl
popf
sub
xchg
adc
mov
xchg
sbb
gs
dec
fnsave
mov
and
imul
call
cmp
xchg
in
scas
fisttps
inc
lock
nop
xchg
sub
mov
dec
cmc
adcb
add
cld
or
adc
mov
lods
arpl
cmp
sbb
xchg
clc
fwait
cmpsl
mov
andl
adc
mov
xchg
out
ds
mov
xchg
add
and
shrl
mov
pop
iret
pop
inc
xchg
addr16
insl
ds
push
sub
add
pop
addr16
int
jb
or
dec
addr16
sub
or
pusha
loop
dec
sbb
xchg
sbb
mov
fcomip
imulb
cmpsb
mov
push
clc
lock
in
pop
xchg
cmp
mov
rcrb
sub
out
xor
movsl
push
test
and
das
xor
mov
andb
sar
push
rorb
xlat
cs
and
imul
sub
popa
dec
inc
push
repnz
das
mov
mov
dec
jge
adc
mov
and
jge
jo
ret
sarl
and
imul
xor
lods
pusha
push
mov
out
mov
add
sub
and
out
xor
popf
cmc
sub
pop
adc
jmp
sub
loopne
sbb
and
mov
mov
jnp
imul
insb
test
push
push
cs
inc
cmp
inc
dec
sbb
mov
push
ja
xor
mov
clc
mov
and
add
insl
loop
test
sbb
pop
pop
adc
cs
sub
fsubrl
scas
mov
xor
mov
and
shrb
jmp
repz
fdivs
out
ror
daa
cmp
mov
xor
and
rcl
and
xchg
dec
dec
mov
pop
push
mov
popa
or
leave
pop
and
fimuls
sub
cmp
and
lea
xchg
sbb
shlb
icebp
neg
xor
or
pop
and
pop
fcomip
dec
sar
sub
aad
jo
mov
mov
cmp
fcomip
cmc
ljmp
mov
xchg
out
xchg
pushf
sub
in
mov
push
xchg
mov
sbb
rcrb
popa
jmp
fdivrs
cld
sub
and
mov
mov
mov
out
mov
push
and
dec
loop
fstp
hlt
pop
add
push
add
loop
jbe
mov
and
clc
andps
mov
xchg
in
ds
insb
pop
jecxz
jg
arpl
popa
out
xor
and
nop
out
adcb
fwait
cmp
jl
fwait
xor
jp
clc
arpl
enter
ss
pop
stos
mov
pop
insb
xchg
xchg
repz
lods
jnp
mov
sbb
sub
cwtl
jecxz
cmc
inc
push
push
mov
sub
lahf
cli
in
out
adc
in
loopne
push
icebp
xorl
pop
icebp
sbb
repnz
dec
bound
ds
cld
cld
mov
xlat
jg
push
jecxz
mov
icebp
add
dec
pop
pop
mov
mov
cli
pop
jns
stos
aam
in
mov
mov
push
inc
jge
xorb
mov
inc
mov
daa
mov
loopne
dec
jns
or
out
jmp
or
inc
dec
adc
ja
mov
icebp
sub
lods
in
adc
pop
ret
fwait
and
and
xchg
insb
aas
and
aad
xlat
mov
adc
ficoml
jl
popf
inc
call
or
xchg
mov
sbb
lea
addr16
loop
fidivrs
pushf
xchg
dec
popa
call
xchg
inc
data16
pop
popa
imul
test
xchg
pop
xchg
sahf
je
fwait
mov
or
andb
pop
std
sbb
adc
into
sbb
cmpl
ret
insl
dec
movsb
mov
xor
repnz
ljmp
pop
movsb
mov
pop
int3
ret
push
push
inc
mov
mov
inc
xor
xchg
push
sbb
mov
movsb
es
adc
inc
movsb
in
fwait
andb
sbb
dec
lcall
add
in
inc
or
aas
fsubp
int
repnz
ret
and
push
dec
ss
outsb
std
jb
je
das
mov
jmp
sub
lcall
sarb
std
and
call
push
push
mov
cmp
dec
fstpt
mov
fists
mov
popa
loop
pop
sub
jg
dec
pop
add
mov
dec
inc
or
xchg
imul
mov
push
pop
xor
or
push
inc
mov
dec
pop
popa
arpl
test
les
lret
popf
mov
in
or
xchg
cmc
inc
lret
push
push
movsl
mov
xchg
fsubrl
xchg
adc
sub
test
sub
shrl
cmc
pop
ds
jmp
sbb
js
mov
push
mov
movsl
fisttpll
rolb
pop
xchg
je
imull
movsl
enter
dec
jo
sahf
out
jnp
jle
test
push
inc
sub
pop
push
jae
cmpsl
addr16
movsb
push
pop
mov
sbb
fimuls
pushf
cltd
imul
push
loope
cwtl
rcll
out
in
lods
mov
scas
das
mov
or
inc
add
stos
js
loop
call
js
in
sti
mov
dec
in
inc
mov
pop
inc
xchg
push
pop
mov
rcrb
or
gs
dec
add
inc
pop
arpl
lods
mov
xchg
sub
daa
loopne
aam
xchg
push
imul
jge
ret
mov
out
aaa
repz
mov
test
or
pop
inc
imul
sbb
cli
mov
test
mov
push
mov
dec
or
or
jnp
push
outsb
ljmp
xor
in
jae
xchg
in
or
lret
scas
out
mov
int3
movsl
out
mov
imul
mov
aas
cmp
loopne
inc
adc
adc
jl
sub
stos
push
adc
notb
xor
cmp
sub
ret
jns
leave
sahf
sub
xor
jae
xchg
mov
add
pop
aas
pop
xor
or
sbb
out
fisubl
xchg
xor
loopne
pop
dec
add
lods
cmc
sub
js
insl
lret
sbb
cmp
lods
add
outsl
out
xlat
or
cli
rclb
out
loope
xchg
dec
and
add
push
iret
in
xchg
mov
inc
mov
and
jge
fimull
push
add
dec
test
mov
fmulp
call
pop
popa
lret
jbe
cmpsb
push
mov
out
lods
push
fistps
mov
mov
test
dec
inc
add
jns
xlat
in
cmpsb
std
pop
push
jmp
cli
inc
les
pop
or
xor
ss
pop
dec
mov
ss
jle
jmp
rclb
ret
mov
data16
xor
inc
dec
sub
lea
cmp
cmp
xor
jg
mov
mov
cmp
mov
sub
cmp
cmp
add
pop
cmp
mov
inc
mov
xchg
scas
into
out
xchg
outsl
inc
mov
add
loope
mov
sub
icebp
push
jge
into
and
adcb
mov
das
imul
pop
add
stc
jle
xor
pushf
dec
stos
fistpll
push
int
lret
or
fiadds
add
aas
mov
sub
jno
test
or
in
mov
nop
sbb
pushl
pop
jbe
mov
popf
nop
addr16
add
sub
hlt
mov
xchg
mov
pop
shl
stos
inc
fnstenv
and
jle
add
jno
or
stos
push
iret
mov
pop
mov
fcompl
pop
jb
cmp
inc
sbb
dec
loop
pop
mov
fs
jp
repz
mov
out
call
lcall
lea
add
test
mov
dec
mov
ja
xor
imul
mov
test
inc
pop
lods
xchg
or
mov
and
clc
mov
mov
pop
hlt
mov
pop
mov
xchg
pop
rol
add
arpl
dec
jp
xchg
adc
pop
jbe
add
or
es
stos
sbb
mov
jb
mov
std
and
dec
in
cmp
loopne
pop
or
cmpb
add
fcmovnbe
out
xchg
arpl
mov
scas
pop
sbb
jbe
and
dec
dec
mov
mov
mov
fs
xchg
test
push
mov
mov
and
xlat
lret
repz
dec
int3
movsl
test
push
xchg
mov
out
sbb
xchg
lret
cmp
mov
into
xor
push
adc
pop
imul
mov
and
decb
push
test
push
loop
imul
jb
mov
lea
and
or
push
ds
mov
imul
push
test
lea
es
and
dec
jbe
dec
js
cmp
push
mov
divb
cltd
mov
pop
repz
into
xor
jns
insl
and
push
inc
push
fst
outsl
jae
dec
fnstsw
push
pop
add
mov
dec
jne
dec
jecxz
push
sbb
mov
adc
loope
sbbl
scas
fwait
call
adc
insb
data16
inc
inc
std
xor
or
mov
sbb
pop
cld
xlat
out
dec
mov
insl
jb
iret
sub
lret
aaa
mov
cmp
push
pop
lea
out
or
push
inc
ja
enter
pop
int3
or
or
jmp
lcall
sti
imul
cli
gs
lds
add
insb
xchg
sbb
decl
pop
rclb
dec
sub
clc
leave
pop
ds
mov
in
sub
cmpsl
aas
sub
leave
jp
and
cmp
mov
xor
dec
cli
dec
and
in
mov
sub
movsl
mov
lea
mov
out
mov
jne
in
mov
cld
inc
push
test
adc
and
dec
mov
mov
adc
mov
shl
add
mov
imul
adcb
ja
mov
push
movsb
cwtl
hlt
sbb
sbb
sub
mul
add
out
sub
in
mov
jb
sub
cmpsb
shll
lcall
jae
into
movsl
pop
fisubrl
or
shr
push
mov
or
shlb
xor
xchg
push
out
add
mov
xchg
and
inc
rcr
cmpsl
les
rclb
pop
sbb
hlt
out
xor
push
addr16
lods
xorl
adc
cs
lods
pop
cli
arpl
loope
mov
pop
jo
icebp
lea
outsl
jae
orb
sahf
jecxz
pop
sbb
insb
adc
fcoms
mov
ret
aad
loope
adc
and
clc
xor
ljmp
pop
mov
jmp
icebp
xor
push
cmp
push
mov
iret
inc
pop
test
cmpsl
xor
mov
lret
mov
sbb
pop
lds
pop
mov
jge
mov
cmp
mov
fst
xchg
daa
push
lods
int3
stc
cmp
or
or
sbb
pop
or
cmp
filds
call
shll
js
mov
mov
cmc
mov
push
arpl
mov
shll
cs
cli
xor
add
loope
mov
nop
pop
xchg
cmp
popl
shll
lds
scas
scas
popf
gs
push
push
fistpll
push
aas
lods
mov
inc
adc
test
jl
adc
mov
sbb
pop
fcomps
cmpsb
xor
fwait
shl
rcll
xchg
lods
lret
outsb
insl
push
icebp
add
imul
hlt
je
mov
xchg
sub
inc
std
fdivrs
flds
sbb
mov
testl
or
cmp
sub
adc
aaa
sub
sbb
out
add
mov
mov
cmpsb
pop
loopne
pop
sub
ret
mov
jae
repnz
test
cmp
fbld
xor
xchg
lret
xchg
and
sbb
adc
scas
mov
push
fwait
mov
adc
dec
or
rorl
mov
mov
dec
push
push
dec
jno
mov
inc
jo
fwait
sbb
ret
add
mov
xlat
dec
and
test
stc
mov
push
push
cltd
push
cs
sub
sbb
adc
out
push
cmp
dec
jb
mov
mov
adcb
fnsave
xor
test
push
test
lock
movsb
pushf
push
fwait
push
push
jo
xchg
faddl
loope
and
or
fs
js
imul
loope
outsb
imul
das
add
jbe
dec
loopne
cmp
cwtl
xchg
in
mov
cmpsb
aam
lods
je
add
sbb
dec
shl
ja
xor
not
mov
jl
or
pop
es
ret
cmp
leave
shrl
push
and
lahf
push
or
sub
in
inc
hlt
or
movsb
in
adc
gs
and
and
pusha
stc
jecxz
jecxz
divl
and
sar
cmpsl
in
inc
add
and
mov
adc
pusha
cmp
aas
xchg
inc
jg
and
lahf
lcall
adc
or
mov
xor
cmp
pop
jb
cmp
mov
mov
or
std
clc
cwtl
lea
loope
push
xchg
push
sub
aad
or
out
scas
divl
pop
sub
clc
sbb
inc
call
adc
nop
adc
push
push
lret
push
std
push
imul
rcr
pop
sbb
mov
mov
mov
adc
stos
adc
cmpsb
jp
jl
push
adc
fmuls
pop
dec
aaa
jp
pop
mov
mov
jmp
jmp
or
push
push
push
push
jecxz
cwtl
push
inc
pop
ja
jmp
fldenv
jb
push
add
jno
or
adc
loop
insb
xor
add
mov
add
push
rcrl
xchg
icebp
iret
popf
push
and
cmp
xchg
out
mov
jns
cmp
or
out
mov
push
xchg
add
fldt
jmp
stos
loop
mov
setbe
jg
adc
add
testl
or
jl
int3
jp
adc
out
insl
jbe
aas
in
mov
pusha
dec
es
add
lret
mov
add
mov
out
jne
mov
adc
dec
jnp
out
fstpl
icebp
add
and
int
loope
or
in
or
push
shr
ja
lods
into
mov
in
fistl
shrl
lret
nop
adc
dec
movsl
pop
loope
pop
arpl
dec
mov
xchg
sbb
jne
cmp
dec
xchg
push
jle
mov
psubw
std
jns
aaa
faddp
scas
fbstp
rcl
and
aaa
push
add
fcmovne
test
and
push
cmp
int3
inc
jae
lods
call
pop
cmpsb
cmp
push
pusha
xor
xchg
xchg
mov
sub
loopne
pusha
pushf
popa
test
ss
dec
jne
mov
mov
inc
movsb
arpl
subb
popf
data16
jno
xlat
ret
leave
jae
jno
int3
and
xor
push
cli
jae
aaa
and
into
mov
loope
test
add
and
or
outsl
adc
pop
xorl
xchg
je
aaa
jbe
or
adc
push
out
cmp
sbb
clc
pop
fwait
mov
or
insl
mov
pop
addl
lahf
out
dec
inc
test
into
sub
in
dec
xchg
xchg
or
lret
sbb
pop
sarl
sub
mov
sub
outsb
dec
or
xchg
loope
out
and
pop
addb
xorl
scas
mov
inc
mov
mov
jmp
mov
dec
std
idivb
push
ficoms
add
repnz
ja
mov
test
sbb
jnp
cli
jno
pop
std
std
ficompl
int
mov
xor
cmp
fcomp
imul
add
xor
rorl
into
adc
mov
jbe
mov
mov
insb
push
xchg
loope
mov
sti
sar
push
mov
dec
sub
loopne
std
bound
cltd
mov
je
enter
mov
dec
test
xor
pop
lcall
adc
iret
pop
fldenv
stc
mov
mov
sbb
xor
arpl
lods
mov
out
mov
and
lret
stc
rorl
ds
jecxz
adc
addb
push
fcmovnu
pusha
jno
xchg
cmp
stos
stc
adc
loopne
sub
pcmpeqb
pop
inc
push
shl
jecxz
dec
sub
popa
sti
mov
arpl
mov
xorl
inc
pop
lret
push
sti
push
dec
lds
je
dec
call
cmc
cld
sti
sub
jns
xchg
imul
sti
adcl
adc
out
aaa
push
packuswb
testb
lods
add
xchg
sti
push
sbb
into
jno
push
mov
cmpsl
xchg
movlps
xor
adc
add
stc
outsl
sbb
mov
stc
mov
mov
add
arpl
lods
cmp
movsb
dec
and
cmp
adc
lahf
rcl
movsb
js
push
loope
add
push
fisubs
dec
int3
xchg
jb
gs
pushf
add
push
mov
negl
scas
push
lret
shl
dec
inc
adc
aas
sub
mov
lcall
xchg
pop
fucomp
mov
sbb
dec
dec
outsb
add
fldcw
or
aaa
loopne
pop
jp
lds
sbb
dec
pop
fistpl
rcrb
sub
fcomps
je
cmp
loopne
data16
lea
pop
enter
xor
add
push
xlat
sbb
int
push
movsl
jge
scas
sar
xchg
xchg
jl
lcall
in
insl
push
seta
movsb
push
adc
rorl
inc
pop
outsl
orb
or
dec
js
mov
push
mov
push
inc
lock
sarl
dec
insl
mov
jl
mov
lret
imul
and
scas
fadds
iret
lds
and
enter
gs
cmpsb
lret
cmp
test
mov
mov
popa
movsb
jns
imul
fdivrl
movsb
jb
enter
test
cmp
lods
mov
stos
sbb
and
es
cmpsl
xchg
mov
mov
stos
icebp
imul
dec
xchg
dec
xchg
dec
inc
xchg
jo
pop
fwait
pop
mov
push
cmpb
xchg
sub
add
rorb
pop
imul
adc
jb
mov
or
jns
clc
xor
inc
test
xchg
cmpb
cmc
sbbb
gs
out
lods
pop
add
jle
outsl
cs
sbb
push
mov
jg
rep
mov
mov
sbb
push
pop
sub
or
dec
rcl
inc
adc
je
cmp
imul
jb
xchg
sbb
push
repnz
inc
outsl
lods
js
sahf
sbb
xchg
jbe
xchg
dec
pop
and
mov
inc
dec
jl
test
push
mov
icebp
adc
enter
cmpb
repnz
dec
jmp
jnp
fisubl
dec
jmp
rorb
clc
add
pop
cmp
leave
pop
scas
in
push
sti
insb
fiadds
shll
jmp
push
fistps
pop
aas
out
icebp
sub
mov
adcl
lods
repz
or
mov
es
pop
push
mov
pop
std
xor
xchg
or
mov
icebp
or
and
and
aad
lea
xchg
push
out
or
ja
push
add
adc
addb
outsl
xor
imul
jne
mov
xor
pop
push
ja
fdivrl
mov
aaa
and
and
and
repz
imul
jne
pop
cmp
inc
int
repnz
test
pop
nop
out
mov
mov
popl
scas
xlat
iret
in
imul
es
push
push
push
inc
icebp
aam
inc
or
std
push
pusha
xor
adc
pop
or
pusha
mov
clc
ss
mov
push
in
jge
jmp
add
test
es
lods
push
test
jl
test
and
and
scas
adcb
scas
mov
test
cmp
popf
mov
nop
test
mov
mov
push
mov
sbb
lock
sub
ds
cs
pop
mov
into
dec
mov
je
loop
icebp
sub
push
movsb
dec
jns
jbe
mov
mov
popf
int
movsl
mov
push
aam
push
ret
jae
daa
fwait
xchg
cs
rcrb
cmc
mov
dec
daa
cmp
cmp
insl
sbb
and
cli
jb
stc
dec
loope
movsb
jecxz
pusha
cmp
mov
sub
shlb
flds
sub
xchg
in
es
clc
enter
ret
fnstsw
mov
pop
not
in
js
push
repz
lds
scas
subb
mov
out
push
pop
js
mov
ds
add
push
or
jp
aad
outsl
cmp
stos
arpl
jmp
lcall
rclb
inc
scas
cmova
cmp
lret
repz
cltd
jbe
shl
or
push
movsb
into
es
mov
test
cmpsb
mov
or
iret
jp
subb
dec
lds
pop
out
in
dec
and
xor
cltd
dec
pop
ss
fwait
sbb
stc
cld
mov
fsubs
jnp
fninit
push
xchg
popa
jg
jecxz
nop
inc
adc
lret
cmpsl
mov
pusha
mov
inc
fstp
popa
int3
mov
or
or
movsb
sub
mov
xchg
notb
stos
xor
test
sbb
or
insb
shll
cmp
mov
fs
ds
sarb
lods
mov
adc
jb
pushf
and
in
xchg
mov
push
push
xchg
inc
add
lods
sub
idivl
mov
scas
cmpsl
xchg
fdivl
imul
xchg
iret
test
pop
mulb
sbb
movsb
lds
mov
pop
cmp
xchg
sub
ss
push
fdivrs
repnz
dec
add
pusha
adc
mov
insl
scas
jno
test
jecxz
add
hlt
mov
sbb
adc
adc
insb
cmp
cmp
inc
mov
inc
adc
ret
xchg
xor
xchg
or
cwtl
mov
dec
les
xchg
mov
xor
ja
icebp
pop
ss
push
pop
inc
fidivs
lahf
test
xor
mov
idiv
push
incb
xchg
jne
add
testb
gs
xor
ja
gs
xchg
mov
mov
insb
loopne
adcb
adc
mov
mov
push
mov
sarl
mov
adc
push
mov
into
add
cs
dec
roll
jmp
mov
and
and
add
and
or
movsb
out
out
outsb
xor
xchg
add
sbb
jg
jnp
or
shll
mov
lods
ds
cmp
mov
cltd
lock
jecxz
jp
fs
rcll
ret
jle
lcall
cmp
sbb
scas
int
sbb
clts
xor
es
jmp
xor
mov
mov
push
roll
xchg
les
push
xorl
mov
or
imul
dec
lret
imul
sub
cmpsl
mov
dec
fldt
add
pop
bound
testb
jp
pop
in
and
imul
push
ret
jne
fcom
push
jns
stos
js
xchg
or
cmpsb
xchg
xchg
daa
cmp
outsl
cmp
and
sarl
rcll
ljmp
dec
mov
lock
scas
insl
insb
bnd
out
test
inc
jecxz
sbb
push
pop
popa
and
divb
lret
dec
dec
repz
adc
scas
sub
test
loop
cld
sbb
movsl
jl
mov
cs
or
nop
fwait
sarl
jns
push
xchg
cs
mov
cmc
andl
test
dec
pop
pop
movsl
sbb
cmp
pop
lret
fs
adc
jmp
cmp
div
xchg
pop
cmpsb
add
iret
mov
mov
leave
cmpl
pop
pop
xchg
imul
sbb
xorb
ds
mov
ret
or
dec
add
jns
xor
es
pop
stc
jle
sbb
hlt
lahf
jecxz
push
add
push
mov
aam
mov
cmc
ja
sbb
pop
dec
fcom
into
push
mov
mov
scas
dec
mov
jnp
pop
and
stc
mov
push
and
pop
or
out
pop
sti
int
fstps
arpl
fstl
rorl
repnz
mov
mov
insb
test
in
inc
and
orl
ljmp
sub
sbbl
fisttpl
pop
mov
ficoms
jns
lret
je
mov
test
xor
pop
scas
adc
cmp
jecxz
out
cmp
mov
pusha
aas
mov
mov
dec
jmp
pop
or
repnz
and
mov
mov
in
or
mov
mov
sbb
mov
adc
xor
push
fmulp
mov
out
mov
inc
jnp
inc
lret
jns
popf
rcl
jb
inc
out
xor
jnp
lret
and
in
sub
mov
push
xchg
inc
ret
popa
adc
and
loop
inc
xlat
xchg
in
xchg
pop
pop
hlt
xchg
pmaxub
adc
in
pop
fsubrl
jno
inc
jbe
pop
ds
jmp
mov
in
fwait
dec
mov
cmpl
jae
pop
mov
or
popa
ficoml
mov
lret
out
ficompl
xchg
cltd
cmp
push
mov
shrl
jp
pop
leave
mov
imul
leave
movsb
push
push
xorb
adc
push
das
jae
push
cmp
add
mov
cs
cmpsb
dec
scas
xor
mov
lock
movsb
xchg
stc
inc
clc
es
dec
mov
jne
in
scas
add
sbb
fidivrl
lea
or
in
mov
sbb
jmp
pop
bound
dec
add
sub
sub
and
arpl
push
dec
pop
and
mov
mov
xor
xor
into
in
mov
fisttps
inc
mov
jb
nop
adc
jae
popf
shl
out
or
mov
fnstenv
jle
js
loop
repz
xor
aad
sub
xchg
dec
dec
stc
lahf
xor
mov
push
inc
sub
loop
xor
fdivr
jne
cmp
mov
mov
aad
mov
repnz
lods
out
jg
push
je
mov
dec
mov
inc
subb
inc
pop
test
sarl
dec
movsl
mov
sbb
rolb
iret
lods
cs
ja
xchg
cmp
add
popa
jae
jg
fiaddl
xlat
insl
pop
je
jecxz
mov
jne
bound
repnz
mov
dec
or
push
cmp
dec
shlb
insl
pop
out
xchg
mov
arpl
ljmp
orl
mov
dec
stc
fdivs
pop
mov
rorb
sub
sbb
pop
pop
push
sbb
jle
cmp
and
popa
xor
lcall
mov
pop
out
and
cli
mov
scas
mov
add
mov
push
lods
mov
push
mov
mov
xchg
mov
inc
mov
cs
les
imul
mov
aam
sub
cltd
aam
and
inc
inc
mov
mov
add
adc
mov
mov
push
jle
xchg
leave
dec
js
sub
dec
adcl
xor
push
in
mov
cmpsl
jnp
push
ret
leave
or
aaa
cmp
stc
mull
jns
out
and
sub
jo
dec
mov
xchg
inc
clc
fs
ds
addr16
mov
push
iret
mov
pop
shlb
imul
lock
cmpsl
cli
mov
repz
mov
push
xor
sub
cvtps2pd
jae
dec
adc
pop
mov
stos
inc
xchg
add
mov
cli
repz
push
inc
add
ficoms
mov
add
or
sub
cmp
xchg
adc
push
sub
mov
bound
loope
popf
lds
flds
aam
and
mov
js
sub
repnz
arpl
test
xchg
or
jmp
cmpsb
lahf
fwait
add
xor
xor
leave
std
pop
cs
mov
shrb
pop
fmul
xchg
xor
mov
sbb
or
jmp
xor
sahf
sbb
int
cltd
inc
loopne
push
inc
or
mov
dec
mov
fs
or
push
fnstenv
scas
pop
les
ret
pop
xor
dec
mov
jmp
and
inc
cmp
loopne
add
shrb
sub
ds
aam
repnz
cmpsb
and
pop
pop
mov
push
cmp
popf
lret
outsl
adc
and
add
or
ss
in
ss
inc
cmpsl
sub
xchg
sub
enter
jg
jecxz
int3
aam
xor
cs
lcall
sub
lahf
push
add
pop
shlb
adc
in
push
mov
dec
popa
jge
jl
mov
in
add
xchg
or
nop
hlt
aaa
jbe
jb
mov
mov
leave
lret
leave
pop
ljmp
fists
xchg
mov
jb
cmpsb
es
jl,pn
mov
xchg
push
test
ss
leave
xchg
sbb
fcmovne
jne
jns
movsb
ret
mov
xchg
cmp
add
cwtl
xor
loop
sbb
pop
jge
roll
inc
dec
cmp
and
iret
andl
pusha
rcll
lahf
push
add
call
mov
sarl
cmp
adc
adc
jb
mov
jg
hlt
mull
testl
pop
mov
pop
ret
xchg
push
fsub
and
mov
sarb
in
and
std
lahf
imul
popf
push
arpl
mov
mov
or
inc
sarl
sarb
and
jge
pushl
int
mull
into
jo
imul
pop
mov
inc
lock
pop
cmp
shrb
add
stc
cmc
xchg
mov
dec
lret
mov
loope
rcrl
pop
cmp
popa
pop
pop
call
nop
frstor
xchg
push
jne
pop
cli
mov
sub
sbb
in
jg
jmp
jo
mov
dec
adc
jns
stos
or
mov
xor
ficoml
or
pop
pop
inc
inc
jne
jmp
push
cltd
cmp
mov
cmpsl
and
inc
jg
icebp
dec
pop
fninit
insl
adc
aad
cmc
cmpsb
cmpsl
imul
push
ret
das
and
loop
push
loope
inc
nop
add
scas
int3
arpl
cmpsl
ss
insl
aaa
mov
fsubrl
lret
sti
std
mov
cmpsl
cltd
mov
xchg
enter
cmpsl
lret
je
jb
xchg
lods
adcl
jl
mov
cli
xchg
pop
in
jns
dec
pop
sahf
rorl
mov
push
xor
pop
into
rcrl
test
xor
lock
adc
sbb
mov
cltd
dec
jae
sub
rcrl
mov
call
pop
test
jnp
xchg
sbbl
popa
ja
in
cld
int
lds
mov
jae
in
xchg
jle
lret
xor
movsl
idiv
mov
iret
mov
mov
pop
fisttpll
adc
repnz
xor
ret
add
jmp
xchg
xlat
adc
mov
mov
in
jge
inc
data16
shlb
cmpsl
mov
dec
sbb
xchg
mov
cmpsl
mov
ret
fmul
std
int
sti
lock
cmp
mov
pusha
scas
cmp
mov
xchg
fsts
add
aad
dec
or
insb
insl
int
pop
popf
nop
sub
push
cwtl
push
pop
mov
lret
mov
pop
jb
cwtl
inc
aas
adc
mov
mov
xchg
dec
out
jmp
aad
icebp
cmp
pushf
xchg
out
cs
ds
and
incb
mov
xchg
cmp
add
or
xchg
push
fs
loop
int
int
push
xchg
xor
shrb
and
adc
notb
in
out
popa
shll
adc
call
stos
movsl
aam
repz
and
or
std
sub
sbb
popa
insl
test
push
pop
imul
pushf
mov
dec
ljmp
sbb
pop
adc
mov
sbb
mov
aad
xor
inc
and
dec
subps
ds
mov
insb
pop
fistpll
imul
push
or
mov
sub
xor
sahf
cmp
and
mov
xchg
lret
shlb
or
add
movsl
xchg
push
int
ja
sti
lret
pop
pop
sub
fldenv
add
jge
je
inc
rcrl
dec
and
or
lret
inc
sbb
sub
aam
loope
icebp
xchg
pop
imul
psubusb
add
movsb
mov
roll
add
faddp
pop
mov
jg
pop
insl
dec
mov
in
fldcw
stc
scas
jmp
in
xor
xchg
fdivl
jmp
adc
dec
or
loop
sub
aad
sub
loope
fcmovbe
pop
ljmp
mov
outsl
pop
sub
push
pop
stos
inc
sbb
arpl
out
jle
es
out
pop
ss
jg
sbb
mov
popa
push
adc
push
test
xor
mov
add
fcmove
es
test
lcall
enter
out
jno
dec
frstor
mov
cmp
dec
jne
btr
lods
mov
into
mov
movsl
and
scas
push
push
es
popa
push
roll
jbe
jp
pop
sahf
mov
lret
lahf
mov
mul
clc
xchg
enter
cmp
dec
pop
and
scas
in
and
pop
stos
loop
cmc
mov
dec
cmp
adc
cld
adc
je
aas
cld
jnp
lcall
inc
or
jae
aad
adc
push
loope
cli
imul
add
xor
cmp
dec
aam
inc
dec
lret
imul
mov
adc
test
scas
fists
mov
cmp
arpl
popa
imul
outsl
sbb
push
sub
stos
inc
imul
mov
pop
mov
test
jp
dec
rcrb
pop
sbb
push
xlat
mov
and
push
jnp
xchg
call
sub
je
lahf
fwait
jmp
pop
ds
pop
adc
jbe
sub
push
sahf
insb
and
in
mov
loopne
bound
mov
into
pop
out
insb
inc
or
pop
cmp
jl
fs
lock
outsb
cmpsb
scas
addr16
int
scas
insb
mov
mov
and
inc
mov
mov
pop
lahf
xchg
xchg
loope
arpl
cwtl
and
inc
and
ret
and
mov
test
mov
pop
jne
sbb
and
neg
sbb
adc
mov
fcomi
push
enter
jbe
jg
xchg
mov
sti
loope
js
sub
push
xchg
mov
popa
pop
xchg
xchg
mov
mov
inc
js
and
push
pusha
cmp
dec
xor
add
push
lock
push
inc
and
int3
push
fsincos
daa
enter
pop
ret
inc
add
sbbb
or
fcompl
and
adc
mov
aad
das
test
pop
push
jle
sbb
popf
add
ret
or
sbb
cmc
fucomi
test
repz
insb
mov
lock
push
xchg
pop
rclb
cmpsb
and
mov
sub
xchg
subb
fcompl
xor
cld
fnsave
hlt
in
inc
inc
or
pop
mov
mov
cmp
mov
xchg
cmp
lods
cmc
stc
jp
add
jmp
andl
repnz
inc
ljmp
notb
pop
insl
mov
dec
leave
pop
nop
jnp
shl
ja
cld
jo
decl
fcmovb
ds
sahf
push
scas
sbb
cmpsb
sub
loope
mov
add
pop
sarl
repz
dec
inc
xor
xor
mov
xchg
cli
push
jnp
js
mov
lret
push
or
stos
js
adc
dec
aas
xor
mov
dec
mov
mov
and
popa
jnp
sub
scas
rclb
lret
xor
dec
jb
jl
push
cmp
aad
inc
std
dec
in
inc
mov
pop
aaa
mov
dec
mov
cmp
insl
xorl
push
repnz
test
jl
outsl
push
cmp
adc
les
imulb
push
jne
cld
jle
mov
push
or
push
cli
cmp
insl
mov
inc
inc
jno
jb
push
insb
out
std
ficoml
addr16
into
rcrb
pop
test
shl
jecxz
push
les
sub
cmp
stos
add
push
movsw
cmp
aam
std
mov
and
loop
test
outsb
icebp
and
sarl
jg
in
mov
mov
ret
adc
in
or
fstl
rcll
icebp
add
imul
popf
lret
lea
push
cld
sbb
out
cmp
pop
out
mov
outsl
inc
pop
sub
ror
test
nop
xchg
sti
xchg
fwait
sub
dec
dec
fcomi
pop
pop
xchg
dec
int3
into
dec
shlb
mov
jecxz
loop
into
repz
test
js
fisttpll
push
frstor
add
push
cmp
dec
pusha
pop
push
pop
fs
mov
push
pop
and
roll
mov
cli
mov
shll
inc
mov
mov
int
pushf
bound
scas
jo
outsl
fisubs
jne
lahf
and
aad
dec
fimuls
mov
clc
dec
mov
adc
and
movsl
push
out
lea
sbbl
sbb
addr16
push
mov
jae
xchg
push
adc
xchg
mov
std
frstor
add
outsb
negl
inc
cmpsl
out
sub
mov
out
inc
mov
dec
push
cmp
iret
and
jo
aas
pop
sbb
test
sbb
sti
sub
aam
push
sti
mov
mov
test
incb
add
cmc
and
push
sbb
push
insb
outsl
icebp
jmp
std
fwait
or
sub
clc
mov
dec
daa
or
test
lods
addr16
mov
cmpsl
outsl
test
mov
das
lea
lods
addl
das
mov
mov
push
mov
sub
jno
dec
fimuls
test
add
mov
or
fadds
adc
or
add
dec
mov
jae
jge
mov
aas
outsb
sti
in
sbb
cmp
or
and
mov
pop
in
mov
xchg
aas
in
sub
xchg
loopne
dec
push
mov
cli
add
mov
and
jae
push
dec
inc
pop
xor
sbb
ljmp
and
repnz
imul
mov
sbb
test
or
pop
mov
xchg
cmp
sbb
push
imul
jle
and
jo
into
imul
pop
in
dec
jns
sbb
decb
add
mov
xorl
or
rol
sub
lods
push
push
push
inc
cmp
movb
jmp
rolb
add
mov
xchg
lock
mov
mov
pushf
mov
outsl
fwait
sbb
mov
mov
push
shrb
out
pop
shlb
scas
dec
repnz
out
aas
mov
pop
adc
rolb
rcll
pusha
daa
push
imulb
xor
mov
push
mov
lret
outsb
dec
mov
mov
lea
lahf
jp
xchg
test
mov
pop
js
adc
inc
jo
xchg
lret
test
repnz
stos
loopne
fsts
insb
gs
mov
and
push
rcl
repnz
mov
mov
fstpl
cmp
mov
aas
js
out
push
mov
fistl
out
xor
addl
arpl
xlat
push
mov
mov
cmp
sbb
in
lock
mov
xchg
mov
jne
cmp
xor
xchg
inc
jge
mov
jmp
int
jae
jge
out
add
push
in
scas
jno
dec
add
es
sbb
mov
adc
xor
push
push
and
ds
data16
dec
adc
xchg
jns
jge
fistpl
pop
pop
xchg
negl
pop
xorl
xchg
fimull
imul
data16
jp
sbb
shrb
dec
int3
fstpt
adc
cmpsb
scas
and
out
repnz
cmpsl
xchg
fwait
in
push
jo
ljmp
push
in
xor
or
mov
jmp
adc
adc
lcall
adc
adc
fiaddl
mov
std
cmp
mov
or
lock
inc
xor
ret
jl
lahf
mov
xor
dec
hlt
in
ljmp
jnp
andb
mov
add
clc
mov
mov
pop
rorl
in
aaa
cmp
enter
xor
icebp
xor
xchg
dec
movsl
or
sub
andb
mov
popa
das
movsb
inc
mov
xchg
stos
movsb
inc
ret
mov
das
out
test
rclb
cmpsb
or
outsl
notb
jecxz
pop
ljmp
nop
ss
cmpsl
push
pop
cli
sub
dec
js
add
push
or
cmp
std
mov
or
dec
mov
pop
std
sarb
outsl
inc
out
mov
fcoms
add
leave
cli
aam
jmp
jmp
fidivs
mov
gs
pop
outsl
inc
mov
or
daa
insb
negb
in
mov
repnz
testl
inc
mov
xor
and
cs
cmc
insl
sbb
dec
nop
cmp
mov
jmp
mov
mov
das
xchg
inc
out
test
inc
adc
inc
push
fs
inc
mov
pushf
push
mov
add
movsl
jo
fcom
adc
outsl
mov
es
rcl
jp
jns
dec
push
dec
pop
imul
or
inc
fstpt
rcll
ret
scas
push
add
add
cwtl
roll
jbe
xchg
aas
sbb
gs
mov
fsubrs
insb
call
mov
lret
dec
int3
cld
sbb
xchg
push
sbb
out
mov
add
jae
loopne
adc
rcrl
xor
mov
xorl
jle
and
inc
pop
sar
mov
inc
fcompl
pop
add
nop
push
xor
cs
push
rorl
pop
addb
xor
add
xchg
and
sti
mov
cwtl
add
jae
scas
xor
sub
pop
movsb
push
cmp
fstl
ss
mov
dec
sub
or
out
jp
std
push
add
ret
pop
xchg
fmull
lret
or
iret
inc
mov
in
fnstenv
push
call
xchg
or
mov
das
ss
es
pop
mov
movsl
jno
and
rclb
mov
push
lock
shr
repz
xor
inc
mov
mov
dec
xor
cmpsl
decl
sub
push
dec
dec
cltd
jo
fadd
shrl
push
aad
add
or
jb
loope
dec
jp
lret
in
and
mov
out
or
cmc
bound
into
popf
sbb
add
lock
stos
lds
xchg
in
ret
mov
jb,pn
lods
adc
cmc
mov
xchg
sub
adc
pop
cld
dec
popf
movb
ja
pop
mov
mov
pop
jl
iret
or
mov
lret
lods
inc
and
pop
popl
in
mov
adc
aam
in
mov
push
nop
mov
incb
ret
xchg
add
push
loop
or
vmovdqu
xchg
aas
pusha
push
mov
mov
movb
movsb
or
andl
movsl
out
cmpsb
xor
in
add
pop
rorl
xchg
mov
repnz
in
cmpsb
in
popf
cmp
jns
ljmp
xchg
xchg
aaa
ror
dec
dec
cmp
mull
mov
rolb
pop
mov
enter
cmpsl
dec
movsl
mov
mov
popf
push
insb
in
fwait
adc
imul
lret
gs
jb
hlt
popf
jo
data16
adc
inc
push
inc
mov
adc
sti
mov
cmp
popw
adc
scas
arpl
fdivr
push
movsl
inc
out
inc
pop
negb
sbb
mov
add
pop
out
xchg
fsin
ret
mov
orl
adc
call
mov
cmp
and
jns
outsl
or
imul
sahf
sarl
pop
subl
xchg
pop
xchg
test
xchg
jns
dec
ret
sar
gs
xor
aad
jmp
and
sbb
push
shll
jo
rorb
test
bound
outsl
repz
sub
leave
lret
sti
adc
testl
xor
push
lcall
daa
mov
or
aaa
popf
push
fnstenv
scas
adc
mov
mov
mov
add
adc
jmp
cpuid
ds
cmpsb
mov
push
stos
and
fsubp
add
xchg
add
xor
andb
dec
decl
ss
notb
cmp
fsubrl
lahf
enter
jb
dec
or
js
in
pop
scas
pop
pop
outsl
lcall
ja
jbe
daa
jne
cs
dec
js
mov
scas
inc
daa
or
xchg
dec
fisttps
sbb
mov
jns
dec
pop
es
cmpsl
xchg
inc
xor
cli
mov
pop
ret
pushf
and
jnp
sub
fnstsw
mov
sbb
inc
int
call
add
pop
in
mov
mov
nop
mov
pop
jae
mov
arpl
fcoms
sub
divb
ficoml
pop
mov
out
cmp
mov
jmp
push
cmp
mov
xchg
or
sti
mov
mov
out
rcr
and
imul
cmp
mov
lahf
adc
stc
push
decl
mov
cmp
lock
mov
inc
jmp
jle
shl
ficoml
fisubl
lret
mov
cmp
dec
pushf
cld
ret
imul
daa
adc
sbb
hlt
sbb
mov
mov
fs
sbb
sub
push
stc
sub
adc
out
mov
mov
repz
jp
push
rcl
je
cmp
mov
mov
dec
push
jg
sbb
mov
mov
mov
out
aas
rol
lret
xchg
xchg
lds
jmp
idivl
mov
mov
scas
inc
xchg
in
ficomps
movsb
test
mov
subw
imulb
stc
xor
mov
loopne
mov
lret
lahf
fnsave
mov
pop
push
xor
pop
test
adc
int3
add
ret
ja
dec
in
aam
scas
jb
arpl
ret
lock
sub
mov
add
mov
pop
pusha
inc
loop
cs
xchg
jl
cmp
loope
jo
std
hlt
mov
adc
stc
jge
repz
dec
jb
insb
sbb
roll
ja
mov
movsl
dec
out
ja
or
sub
jne
jmp
mov
sbb
stos
test
push
mov
fwait
mov
mov
movsb
lds
pop
mov
aaa
into
push
push
jae
inc
mov
clc
test
stos
mov
mov
rclb
movsl
in
dec
jge
mov
lahf
push
neg
cmp
push
pop
add
adc
movsb
add
ret
popa
rol
sub
xchg
jecxz
loope
out
daa
mov
neg
cmpsl
adc
imul
sub
or
mov
rcrb
adc
sub
notb
push
repz
call
ret
mov
daa
or
pop
gs
dec
fs
add
das
and
ror
cmpsl
add
sbb
dec
les
shll
cmpl
push
ds
jl
shll
incb
inc
inc
adc
mov
jb
mov
jno
inc
or
loopne
es
into
mov
ljmp
and
jne
in
jne
push
rcrb
jle
adc
les
popa
jb
fdivr
pusha
jge
loope
xchg
out
popa
out
xlat
data16
mov
ljmp
mov
add
insb
xchg
jge
stos
add
or
add
shll
jae
push
test
aam
jbe
cmp
xlat
lods
pop
or
movsl
lds
and
mul
mov
scas
repz
data16
jno
mov
jmp
sbb
and
adc
mov
dec
ds
pop
adc
dec
push
xchg
movsl
aas
sti
lds
or
lcall
das
in
mov
in
divl
mov
clc
sbb
imul
dec
xchg
and
and
pop
stos
or
jp
arpl
sbb
pop
loope
cltd
hlt
shll
adcb
imul
out
cltd
dec
pop
cmp
inc
add
adc
out
cmp
xchg
sub
sub
test
xchg
mov
in
jno
add
fwait
or
pop
movsl
test
outsb
mov
fidivrs
lea
pop
pop
or
roll
ljmp
fidivrs
sbbl
les
mov
xor
cmpsl
out
pusha
fstpl
clc
test
daa
mov
stos
subl
les
fisubl
mov
or
mov
mov
xchg
adc
sub
int3
imul
dec
prefetch
push
xchg
push
xchg
push
aad
or
ja
inc
sub
cmp
loope
xor
aas
sub
or
stos
mov
push
jae
repnz
xchg
cmpsl
jae
push
mov
xchg
outsb
xchg
dec
in
lret
inc
sbbl
sub
in
imul
xor
aad
or
xchg
jb
mov
cmp
xor
fists
dec
popf
pop
xor
mov
insl
fsts
test
ss
mov
adc
cltd
inc
in
adc
stc
mov
js
and
cmp
fcoml
jg
imul
mov
fdivr
mov
jo
add
mov
mov
lods
push
push
inc
mov
insl
mov
ds
xor
add
xchg
mov
mov
movsl
add
xor
bound
xchg
adc
mov
loope
mov
test
sbbl
dec
sub
or
cmpsl
mov
and
xchg
jnp
test
or
xlat
lods
sbb
rclb
push
mov
cmc
mov
movsl
clc
push
xlat
lea
mov
jb
movsl
xor
shll
xchg
lahf
frstor
lock
fcmovnu
out
mov
push
pop
cli
fbstp
dec
adc
ret
mov
dec
out
test
cmpsb
ss
push
dec
mov
inc
adc
sarb
or
inc
mov
push
jns
cvtdq2ps
jnp
push
xchg
sbb
sub
jb
js
pop
sbb
mov
cmpsb
xchg
das
or
arpl
imul
aam
mov
xor
rclw
in
addr16
lret
rorb
test
push
xor
mov
shlb
adc
or
rcl
mov
jmp
loop
sub
xor
mov
int
or
lods
xchg
mov
add
pop
inc
cltd
add
ficoms
and
clc
dec
sub
xlat
adc
push
test
pop
shlb
sbb
in
adc
inc
cli
scas
pop
adc
lret
cmpsl
push
cmp
dec
mov
lahf
xchg
xchg
imul
int
aam
ror
adc
scas
sbb
out
loop
sbb
imul
je
pop
xchg
xchg
push
pop
jecxz
in
je
ficomps
and
xchg
js
inc
jb
inc
arpl
sub
xchg
aaa
loope
repnz
jl
mov
fistl
xchg
les
popf
insl
rol
sbb
jg
or
dec
les
push
xor
jbe
sbb
dec
popa
iret
cld
dec
sbb
or
push
sahf
jns
fsub
pop
mov
rep
sbb
pushf
mov
or
pop
add
add
cltd
cmpb
sub
cld
push
lret
mov
cmp
jl
test
cmp
mov
xchg
das
sub
xlat
pop
and
mov
sahf
in
cmp
lods
js
jo
cli
or
mov
mov
jl
lcall
test
jecxz
or
pop
push
and
movsl
test
adc
pusha
sub
pop
dec
mov
add
xchg
dec
sub
inc
add
int3
insl
cmpl
scas
imul
sbb
push
xchg
jg
lahf
adc
std
jp
inc
push
mov
sarb
cmp
cmp
jne
std
imul
stos
and
test
adc
adc
jmp
xlat
loop
add
inc
sub
int
jecxz
ja
adc
cmp
jge
lock
sbb
aaa
and
sub
js
jp
lahf
add
ds
xorl
dec
js
jns
movb
push
andl
imul
mov
cmp
jmp
imul
sbb
loopne
jns
jge,pn
into
inc
jo
jp
out
lods
push
aam
jbe
pop
or
in
xor
incl
aaa
or
xchg
sti
out
pop
cmp
mov
jp
jp
push
pop
rorl
shl
cwtl
sbb
bound
xchg
jle
and
sbb
push
jbe
insb
pop
clc
bound
mov
inc
test
or
mov
lahf
je
in
sub
push
mov
xchg
sub
jae
andb
mov
or
mov
jae
and
cltd
pop
jecxz
fisttpl
cmp
mov
stos
xor
add
cmp
jnp
jne
and
fadds
jge
xor
inc
shll
xchg
or
cmp
flds
cld
adc
mov
add
lods
xor
xchg
loope,pn
lds
ja
inc
scas
insw
fsubrl
in
sub
inc
sub
leave
xor
imulb
leave
adc
cmc
cmp
adc
pushf
pop
push
and
sbb
push
add
jno
mov
dec
cmp
jle
cli
lea
lea
adc
call
xchg
jge
fcoml
rcr
adc
fadds
sbb
fs
daa
sbb
cmp
add
out
int
shlb
jecxz
rorl
inc
xor
pop
sbb
les
push
dec
hlt
mov
pop
sub
adc
repnz
or
xor
xor
dec
pusha
mov
and
cmp
mov
mov
pushf
mov
push
inc
das
or
lea
lahf
outsb
in
push
fcompl
xchg
iret
pop
pop
icebp
mov
mov
test
packssdw
or
fwait
inc
mov
in
and
add
loop
or
xor
mov
add
inc
lahf
cld
pop
les
mov
loopne
shl
insb
sub
inc
cmp
insl
lret
cmp
or
adc
cmp
adc
outsl
leave
scas
cmp
nop
inc
cmp
adc
outsb
mov
push
cmp
lret
mov
fbstp
pop
call
fmull
sbbl
pop
or
and
loope
test
jb
pop
pop
or
mov
push
push
loop
xchg
bound
inc
cmp
push
mov
in
or
xor
mov
adcl
xor
add
ret
out
fwait
jb
paddd
mov
add
call
aaa
and
pop
or
or
js
add
inc
xor
mov
mov
or
jl
xchg
xor
jp
movsl
sbb
test
cmp
dec
icebp
shrl
test
popa
aam
outsl
ret
jnp
mov
mov
mov
fsubrs
sub
mov
pop
jae
adc
cmp
es
testl
xchg
mov
push
gs
mov
adc
add
add
aaa
adc
fstpt
clc
mov
mov
fidivl
ljmp
cmp
test
in
jns
xchg
cmp
ficoml
into
popa
aad
mov
mov
and
mov
xor
cmp
in
pop
xchg
shll
iret
jl
out
imul
lods
or
into
jle
mov
gs
repz
xor
cmp
repnz
cwtl
out
sar
mov
pop
ss
adc
outsb
mov
add
mov
jo
fiaddl
add
mov
pop
jns
push
cmp
lock
push
cltd
push
lret
or
stc
test
test
inc
insl
mov
dec
or
pop
pop
dec
insl
es
in
ret
popa
dec
pop
xor
ja
bound
fisttpl
mov
push
pop
push
ljmp
pop
outsb
ficompl
push
andb
imul
pop
movsb
ljmp
mov
popa
xchg
lahf
cli
adc
in
dec
ret
dec
xor
dec
cmc
lret
lahf
nop
sub
add
mov
mov
lcall
insl
pop
or
test
test
jb
dec
cli
enter
pop
sub
jns
push
sbb
ret
xchg
cmp
repz
lahf
and
or
pop
push
lcall
mov
divb
xchg
cmp
inc
stos
adc
adc
stc
sub
sbb
orb
fdivs
add
push
mov
and
stos
mov
cmp
mov
sbb
lock
and
jle
data16
xchg
cmp
test
xor
mov
andb
in
ds
fstpl
outsl
mov
inc
call
les
mov
pop
rcll
out
out
pushf
outsl
sbb
cmp
ds
ret
imul
mov
repz
and
insl
mov
pushf
aaa
adc
xchg
sbb
rcrl
popf
sub
or
inc
mov
pushf
cltd
sub
test
fdiv
jno
sbb
mulb
inc
pop
leave
adcl
mov
push
in
subl
outsb
flds
das
dec
lea
or
in
lcall
xchg
sbb
ror
iret
or
lcall
imul
decb
inc
shl
jp
pop
icebp
pop
jmp
xchg
jp
pop
jns
add
pop
or
or
or
mov
mov
or
mov
pop
scas
adc
rorb
and
pop
fdivs
loope,pn
sub
loope
adc
push
enter
push
stos
leave
mov
scas
xchg
xor
shll
mov
xchg
in
dec
sbb
push
xor
or
imul
mov
icebp
or
ljmp
ret
into
scas
aaa
jns
push
dec
cmp
leave
and
xchg
and
xchg
subl
ss
add
daa
enter
dec
mov
aad
dec
jmp
pop
jge
adc
enter
lcall
add
sub
add
cmc
sub
inc
lret
ja
xchg
inc
ret
sti
out
out
sbb
push
jo
cs
aam
mov
mov
ss
jnp
xor
or
loop
aad
cmp
das
rcll
popa
in
hlt
clc
stos
loope
inc
mov
imul
test
sub
rcll
mov
or
outsb
pop
daa
rep
inc
popa
ljmp
pushl
mov
cwtl
popa
add
iret
inc
mov
xor
pop
jg
fisubs
pop
cld
jge
cwtl
nop
movsb
gs
push
test
in
lock
lcall
lods
pusha
inc
push
dec
jno
pop
inc
cmp
ret
jle
sub
push
fsubl
mov
stos
cmp
popa
add
out
xchg
test
cmp
mov
xchg
sti
sbb
je
ds
rclb
into
or
jbe
mov
mov
pop
ljmp
int3
cmpsl
nop
jno
fisubl
dec
and
add
pushf
paddb
je
inc
lock
xlat
push
pop
xchg
inc
cmc
popf
sbb
push
dec
outsb
mov
das
movsb
out
inc
movb
mov
ficoms
out
inc
scas
and
inc
pop
jmp
stc
xchg
mov
or
and
cli
cmc
mov
pop
rorb
fucom
stc
push
inc
repnz
xor
lcall
js
ljmp
push
push
sbb
cs
or
fcompl
daa
push
int3
mov
and
jg
mov
int
mov
sbb
lcall
lcall
push
outsl
imul
adc
loope
inc
push
lea
leave
fistps
xor
stos
pushf
jns
incl
arpl
test
lret
push
lcall
lahf
out
push
add
lods
jae
call
data16
stos
out
mov
lods
ds
lret
call
movb
mov
shlb
test
inc
xchg
insb
sbb
xor
or
les
mov
test
push
lods
sbb
fadd
jmp
jo
fwait
pop
popa
xor
pop
les
fiaddl
sysexit
push
iret
incb
fs
pop
in
cmp
loop
sbb
push
sahf
mov
cmp
sub
imul
xor
iret
in
enter
inc
lahf
ljmp
xchg
inc
aad
pop
sub
pop
xchg
scas
cmc
push
cmc
fmull
cmp
cmp
inc
add
gs
lea
pop
pop
ss
pop
mov
mov
adc
cs
adc
mov
adc
daa
add
mov
fdivl
xor
inc
lock
sub
fucomp
loope
lahf
shr
insl
jo
addr16
fsts
js
cmp
mov
fstl
cmpsb
push
adcl
and
xchg
setl
sbb
outsb
imul
jmp
push
mov
mov
daa
or
sbb
nop
mov
sbb
js
icebp
mov
mov
pop
xchg
imul
ljmp
shlb
fldl
sti
jne
loopne
add
mov
sbb
xchg
fucom
and
testb
movsb
ljmp
out
fisubrl
out
jp
cltd
sti
addr16
sti
in
cld
std
add
mov
cmpsl
jae
adcb
ss
xor
repnz
sub
pop
nop
repz
mov
push
lods
or
ror
jo
loopne
fwait
loopne
and
adc
cld
xchg
xchg
add
ret
mov
cmp
fistpll
mov
and
mov
sub
cli
fdivrs
xchg
movsb
xor
mov
mov
sbb
sbb
jl
cld
in
icebp
roll
mov
push
ja
and
and
mov
test
shrb
shll
or
ljmp
imul
xchg
aam
cmp
xchg
mov
inc
pop
jle
fidivs
mov
xor
adc
push
xchg
scas
adc
dec
push
pop
push
or
sub
sub
scas
aad
mov
dec
ss
out
ficoml
and
das
add
pop
leave
mov
or
popf
push
data16
add
ret
out
pop
sbb
mov
mov
add
add
mov
cmpsl
add
sub
hlt
roll
sub
sti
pop
sbb
shrl
push
lret
jge
loopne
sub
nop
xor
jnp
mov
popa
sub
dec
cmc
popf
add
cmpsl
daa
insb
and
fs
jl
pop
mov
push
sbb
or
arpl
add
inc
das
test
mull
aaa
das
jmp
push
adc
inc
cli
sarw
cmpsb
push
inc
iret
sub
sbb
add
gs
pop
sbb
out
out
sub
pop
mov
lea
inc
mov
sbb
inc
and
mov
cmpsl
jg
stc
xor
jl
cmp
pop
ds
inc
imul
fmuls
mov
adc
mov
inc
pop
pop
pop
xorl
and
jecxz
pop
call
test
lock
jmp
call
in
add
add
cs
sub
xor
clc
and
call
mov
pop
pop
leave
pop
movsl
cltd
hlt
insl
cmp
cmp
or
push
ja
iret
push
pop
adc
push
ds
mov
dec
lcall
mov
out
and
mov
dec
das
movsl
inc
inc
add
cmp
es
mov
lcall
fcomi
dec
cmp
cmp
mov
mov
cmovge
nop
mov
or
sti
jnp
jno
xor
gs
bound
push
push
std
push
push
jl
mov
push
enter
jo
mov
fiaddl
inc
cld
in
ret
and
sbb
dec
adc
imul
insl
cmpsl
jmp
cltd
pop
stc
daa
ret
and
sbb
xchg
daa
in
cltd
in
je
mov
das
cmpsl
mov
add
sub
sbbb
ficoml
pop
dec
ret
add
and
sub
jle
data16
mov
xchg
inc
pusha
adcl
getsec
into
aaa
or
ret
jne
xchg
and
or
xor
mov
lods
push
into
sub
jb
mov
or
es
ja
data16
notl
repnz
lds
add
inc
add
dec
xchg
xlat
pop
into
loop
aad
jns
mov
popl
ds
movsl
push
cmpsl
sub
or
cmp
inc
fsubl
mov
push
push
dec
and
mov
push
inc
jle
lock
jl
lcall
jmp
or
cmp
movsl
mov
cld
nop
hlt
hlt
rcl
out
sbb
imul
movsb
or
in
nop
sahf
cwtl
das
test
lea
lock
hlt
sbb
pop
js
xchg
mov
cmp
jne
xlat
mov
xlat
xchg
mov
cmpb
push
mov
shll
mov
ffreep
in
mov
data16
cltd
addl
pop
testl
test
xchg
dec
push
add
jbe
faddl
jmp
ds
mov
xchg
aaa
fsub
scas
pusha
mov
mov
add
ds
stos
pop
push
and
into
xor
lret
aas
adc
addb
push
push
xchg
roll
adc
sub
jb
ljmp
mov
scas
jae
out
loopne
ds
or
rcr
and
test
fsubr
loop
lea
gs
test
push
sub
inc
xchg
je
pop
int
in
mov
sbb
repz
jno
and
pop
enter
cwtl
or
ja
insb
inc
stos
push
in
and
mov
cmc
dec
scas
pop
ja
or
fisubrs
out
ror
imul
stos
or
aaa
mov
push
or
je
xchg
mov
add
rol
sbb
or
out
xor
mov
in
test
adc
mov
mov
nop
icebp
lods
cmc
fiaddl
bound
clc
pop
pushf
xchg
lock
mov
push
xchg
adc
xor
pusha
jg
rcl
cmp
fisttps
sarl
fwait
inc
adc
or
cmc
daa
cmp
hlt
aam
sbb
sub
mov
sbb
cmp
jae
xchg
cmpsb
sahf
sarb
push
test
scas
adc
push
sub
pop
xchg
mov
mov
and
rorl
dec
rorb
fisubl
cld
xchg
jge
xchg
or
pop
cli
aam
dec
mov
fbstp
push
fbld
lock
xchg
std
mov
jmp
jge
xchg
in
clc
daa
pop
sub
dec
fmull
jb
push
fidivs
les
insl
jno
sub
jae
mov
dec
sbb
mov
cmpsl
jmp
jnp
call
loopne
jns
pushf
adc
xchg
sbb
cmpsb
ds
push
xlat
inc
loopne
fistpl
repz
push
lea
sti
sahf
in
lret
xor
das
lahf
ljmp
adc
pop
dec
pop
add
lcall
dec
add
movsl
je
in
xchg
clc
inc
mov
das
jg
cmpl
std
insb
test
sub
dec
mov
mov
mov
rolb
mov
sbb
xor
inc
and
sub
mov
adcl
sub
out
into
iret
call
mov
iret
and
cmpsb
push
pop
movsl
ss
mov
and
push
loop
cmpsl
xchg
gs
lcall
out
adc
mov
dec
lahf
ret
sbb
aaa
jge
nop
std
mov
pop
lcall
cmpsb
jle
ret
adc
mov
and
push
sti
flds
arpl
movsl
jo
out
pop
cld
in
xchg
jbe
shrb
dec
fldcw
jns
cmpsb
xchg
pop
mov
int
mov
jge
sbb
adc
xchg
mov
mov
jmp
icebp
mov
sbb
sbb
mov
sub
dec
xor
leave
pop
sahf
inc
mov
cld
out
mov
pop
je
pop
stos
pop
aad
push
mov
inc
lret
lahf
cmp
hlt
dec
int3
scas
pop
add
sbb
imul
packssdw
cli
pusha
xchg
test
sbb
jge
sub
mov
jmp
loop
hlt
sbbb
push
inc
or
and
andl
mov
rol
xchg
mov
xchg
xor
mov
movsb
cltd
xchg
pop
jge
sbb
or
popl
std
mov
faddl
lcall
cmp
mov
xchg
dec
mov
les
ds
dec
scas
mov
rcrb
push
nop
xchg
mov
addb
fsubl
xor
mov
daa
xorl
jbe
xchg
iret
and
jecxz
incl
ror
jl
push
outsl
popf
fxch
int
pop
xchg
lret
pop
lea
sbb
pop
push
jb
add
in
rorb
imull
inc
outsb
mov
jmp
in
xchg
jo
ljmp
xchg
and
lock
adc
arpl
fucom
push
jl
loopne
lea
stos
fdivrl
adc
push
jns
and
dec
pop
incb
lods
jg
repnz
lret
add
mov
lock
pushf
in
fdivrl
fwait
cmp
outsl
add
push
int3
loopne
je
jp
cmpsb
jbe
jmp
jp
cld
add
or
jo
inc
or
vxorps
in
pop
push
cmpb
out
dec
pop
jne
sub
jae
call
push
rcr
and
fistps
mov
lret
std
and
pushf
movsl
jp
in
lret
test
mov
lds
out
std
inc
mov
pop
jb
jp
ds
mov
xchg
push
into
mov
push
lock
pusha
cmpsl
in
adc
pop
popf
push
fidivs
pop
jmp
scas
cmp
popf
push
shlb
xor
adc
stos
loop
xchg
jns
add
mov
loop
lock
sub
repnz
std
xor
pop
sub
cltd
pop
dec
sub
jnp
cmpsl
adc
pop
shll
mov
imul
imul
push
xor
or
xor
test
insl
adc
dec
mov
fstpt
mov
push
push
outsl
sub
mov
or
shl
pop
imul
gs
emms
inc
cmp
pusha
cmp
addr16
fists
enter
pop
sbb
ret
jbe
dec
mov
mov
xchg
push
aaa
dec
fstl
mov
test
int
sub
dec
pop
stos
lahf
nop
mov
xchg
sub
leave
mov
mov
sarb
testb
stos
fldenv
cmp
leave
inc
xor
test
push
scas
jbe
jmp
sbb
pop
push
aaa
dec
jp
pop
jge
popa
xchg
inc
aam
sbb
push
xchg
push
push
pop
xchg
movsl
idivl
cmp
or
fisttpl
out
lret
add
inc
cmp
adc
nop
push
and
cli
in
jno
imul
mov
loope
and
inc
das
ret
xor
hlt
lea
fisttpl
es
mov
push
cmp
out
into
inc
imul
xchg
xchg
push
sbb
xor
and
out
inc
mov
xchg
loope
das
mov
fs
jne
outsl
adc
adc
pop
pop
fst
imul
lahf
hlt
icebp
add
dec
mov
push
enter
mov
fidivl
imul
or
mov
call
add
mov
mov
cmp
lods
mov
mov
lcall
push
adc
and
repnz
or
xchg
dec
popa
sub
loope
mov
stc
pop
outsb
sbb
mov
mov
add
push
ret
push
sarl
dec
jne
in
xchg
add
sarl
rcr
ds
test
xor
cmp
xchg
sbb
adc
aas
inc
sub
cmp
out
lret
mov
lds
or
lods
rcl
pop
repnz
nop
pop
mov
mov
dec
fld
xchg
test
insb
ljmp
popa
jo
mov
repz
mov
out
add
jb
ljmp
int
xchg
ds
sub
addr16
sub
test
adc
xchg
mov
lret
pop
fstpl
movsb
add
stos
cmove
push
insb
sbb
sbbb
push
jmp
dec
mov
jp
sbb
inc
movsb
inc
lods
fidivs
ret
dec
sub
loopne
adc
addr16
lea
jge
movsl
push
sbb
outsb
jg
lahf
pop
pop
sub
lcall
pop
ljmp
mov
ret
shll
pop
bound
iret
mov
sub
or
and
mov
mov
icebp
stos
cli
mov
bound
ret
add
jp
insl
sbb
mov
popf
mov
das
add
out
jle
ficomps
push
enter
test
inc
test
int3
call
xchg
les
adc
decb
bound
mov
in
ds
nop
fdivl
jl
cmpsl
mov
xchg
or
aas
xchg
push
cld
mov
xor
jp
or
cmpl
adc
and
loop
les
outsl
aaa
add
cli
stc
psubb
in
push
fidivl
incl
aad
jl
lock
incl
in
mov
mov
rolb
xor
in
sti
pop
jg
movsl
and
movsb
jecxz
std
dec
cmpl
and
mov
mov
dec
movsb
test
cmp
cmp
jo
mov
ljmp
or
push
insl
or
jns
pop
sub
adc
dec
pop
test
xor
call
fisttpl
lahf
cmp
sbb
and
test
scas
push
loope
and
mov
inc
lods
in
xchg
fwait
mov
xchg
loopne
push
lret
pop
xchg
xor
adc
mov
ds
test
fucomip
cld
outsl
jb
sbb
adc
cltd
mov
push
push
cmp
mulb
aas
rol
fdivr
push
mov
rcll
push
pop
in
mov
sub
xor
jns
cli
in
adcl
push
mov
fisubrl
mov
js
sahf
cmp
shrb
out
xchg
test
outsl
enter
movsl
pop
outsl
add
movsb
ret
add
cmp
mov
jb
icebp
stos
xor
xchg
mov
inc
dec
fistpl
xchg
sub
ss
outsb
shlb
in
xchg
jo
xchg
mov
lods
mov
jecxz
out
rcrl
shlb
icebp
jge
xchg
or
ljmp
mov
mov
cmp
cmc
mov
pop
movsl
cltd
jne
rcrl
fs
loope
or
inc
add
mov
inc
push
pop
hlt
ret
sbb
sbb
js,pt
mov
hlt
xor
xchg
shl
rcr
outsl
fsubs
rcll
arpl
test
sub
mov
clc
mov
cmpsl
mov
roll
ja
popa
push
xchg
pop
inc
cmp
je
cmc
mov
cmp
push
outsb
sub
mov
jns
adc
or
xchg
nop
sub
test
adc
push
enter
push
fwait
sbb
lret
pop
mov
add
lcall
pop
pop
loope
push
or
jae
push
mov
pop
std
or
icebp
inc
fldenv
push
repz
insl
adc
lahf
daa
sbb
out
pusha
out
int
popf
mov
xor
ret
or
jl
jmp
xchg
push
ljmp
dec
pop
jmp
ficoml
pop
mov
movsb
mov
lods
xor
dec
lcall
xor
jnp
dec
xchg
jge
or
test
andl
cs
mov
dec
mov
dec
test
ret
push
jp
cltd
sub
je
jns
pop
inc
enter
cmp
dec
out
mov
mov
mov
xchg
mov
push
mov
jge
or
mov
pop
lock
pop
cmp
adc
test
inc
dec
lds
out
sbb
jae
loope
push
push
int
movsb
nop
sbb
andb
or
rcrb
jbe
mov
mov
pop
dec
push
dec
dec
add
aad
sbb
mov
dec
test
pop
ret
sbb
xchg
cmp
mov
scas
xlat
mov
ret
adc
les
stc
xor
inc
and
push
out
mov
pusha
lret
pop
sbb
cmpsl
sbb
insb
das
push
push
test
lcall
loope
out
mov
push
add
dec
cmp
xchg
or
std
dec
cs
test
out
jne
ret
jne
dec
insb
data16
jg
mov
mov
dec
lcall
ja
mov
rolb
mov
adcl
inc
outsl
nop
rcl
cmp
stc
inc
jne
inc
ret
xor
sbb
sbb
inc
jbe
inc
xlat
fs
fidivrl
or
aam
aas
jb
shrl
xchg
or
rcrl
jae
out
inc
sub
int3
xchg
inc
jmp
subl
xchg
push
sub
inc
insl
dec
mov
jae
pop
or
mov
neg
jb
sub
xchg
inc
pop
loope
andl
fistpll
pop
jb
adc
jno
fnstcw
bound
jecxz
xchg
push
sub
loope
cmpsl
push
xor
dec
or
mov
mov
sub
into
or
ret
sub
int3
icebp
lds
or
fwait
dec
out
jnp
dec
lsl
sbbl
lds
mov
dec
lcall
add
into
jae
cmp
popf
leave
push
push
pop
adc
call
inc
mov
sub
mov
push
lds
or
sarb
pop
fldenv
pop
fidivl
push
jmp
insl
or
shr
or
sbb
mov
js
mul
iret
dec
hlt
adc
inc
and
sti
mov
sbb
in
lret
js
sbb
xor
xchg
icebp
xor
ret
inc
movsb
cwtl
shr
pop
adc
addr16
testb
xchg
in
fadds
mov
scas
out
push
inc
test
clc
in
jae
int
loopne
jmp
iret
mov
gs
aaa
and
and
xor
xchg
mov
sbb
pushf
sbb
repnz
aas
mov
jge
aam
sbb
mov
sbb
mov
push
lahf
fcoms
xchg
dec
cmpsl
aas
addr16
data16
scas
rcrb
addr16
inc
test
inc
mov
out
sahf
xchg
mov
jl
sbb
sub
add
inc
mov
inc
popf
push
jecxz
bnd
outsl
or
add
push
xchg
sub
mov
aas
sbb
xor
rorb
jecxz
xchg
push
cmc
xchg
mov
cmp
jmp
xor
aaa
add
pop
lret
mov
xchg
sub
es
push
enter
dec
pushf
faddl
ss
pushf
sahf
mov
sarl
and
call
xchg
mov
cli
loop
or
push
out
es
sub
jge
and
out
lea
testl
pusha
lods
mov
push
inc
mov
cmp
sbb
aaa
call
jmp
sub
into
push
xchg
insl
insl
or
mov
xchg
ret
or
mov
jp
mov
out
pop
inc
push
sti
loop
mov
fcomps
add
stos
js
dec
in
test
mov
xor
dec
mov
lods
adc
aaa
and
pop
movsl
dec
inc
add
imul
scas
lcall
mov
outsb
icebp
shll
scas
ds
js
stos
aam
popa
incb
mov
repz
mov
mov
pop
inc
in
dec
mov
cmp
sbb
mov
jns
xchg
mov
xchg
ds
inc
push
mov
dec
pop
sti
in
jns
dec
jns
into
int3
fwait
mov
and
and
jnp
sub
ljmp
repz
adc
lret
cwtl
aad
out
and
fincstp
insb
shll
pop
mov
inc
jbe
repz
daa
xor
jle
dec
add
test
clc
adc
lock
or
mov
and
jo
negl
imul
push
xchg
dec
cli
mov
cmp
mov
imulb
or
sub
sahf
lret
ss
push
pop
xor
rorb
jl
dec
sbb
cs
das
cmpsl
js
xchg
add
add
adc
lds
mov
sbb
and
dec
pop
into
outsl
jo
and
imul
insb
mov
ljmp
mov
repnz
mov
mull
fwait
icebp
push
fs
push
popf
inc
push
inc
xor
mov
xor
lahf
jmp
xchg
popa
xchg
cwtl
dec
sbb
lahf
pop
fists
adc
dec
addr16
out
push
ljmp
push
or
mov
fstpt
or
aaa
jmp
adc
xor
inc
pop
fwait
jns
test
mov
jmp
jae
cltd
daa
mov
out
sbb
out
pushf
insl
push
pop
int3
faddl
and
out
cwtl
mov
mov
lahf
js
popf
lea
xor
or
sub
cmp
mov
in
mov
jg
cmp
cmp
dec
dec
push
ret
push
sub
pop
test
loope
outsb
sbb
jns
add
loope
xchg
repnz
std
mov
add
es
cmp
inc
or
and
mov
push
mov
adc
jbe
in
jl
xor
or
push
out
cmpsl
cli
cli
dec
mov
mov
nopl
push
mov
pop
subl
sbb
xchg
xadd
xchg
or
inc
inc
xchg
xchg
add
mov
sbb
outsl
ss
cmp
add
inc
push
jle
int3
sub
pop
dec
mov
jecxz
push
xchg
pop
imul
sub
mov
enter
jns
imul
mov
out
jno
inc
pop
lret
insl
sub
pop
adc
decb
xor
xor
mov
xchg
lahf
in
or
add
add
jo
repnz
cs
pop
dec
dec
lock
lahf
xchg
lahf
mov
and
pop
jle
and
hlt
bound
imul
int
mov
xor
xchg
jecxz
push
ret
pop
andb
leave
push
in
lcall
ds
cmp
int3
sbb
outsl
cmp
jle
idivb
div
mov
ja
pop
call
or
std
lods
pop
sbb
push
push
shll
jmp
mov
cmp
fwait
shlb
les
cmpsl
jns
test
lods
pusha
cwtl
fstpt
push
sub
or
mov
data16
dec
cwtl
scas
out
out
xchg
lods
vmwrite
dec
jmp
push
sbbl
adc
nop
pop
outsl
aas
lods
jecxz
rclb
shr
aas
pand
aaa
and
sbb
jge
addb
mov
pavgb
push
inc
push
fnstenv
mull
mov
std
repnz
mov
sbb
mov
enter
sbb
push
mov
stc
xor
dec
in
repz
sbb
dec
test
mov
sub
cmp
jo
push
stc
push
xchg
iret
int
dec
faddl
inc
icebp
cltd
mov
xor
pushw
xlat
fadds
cmp
mov
mov
std
xlat
loope
xchg
stos
cmp
clc
rcll
loopne
pusha
stc
aad
push
fwait
ret
ret
shl
cli
data16
sti
sub
aad
outsl
dec
push
mov
inc
pop
aaa
and
int
mov
jo
adc
fwait
xor
lret
cs
bound
sbb
or
in
lock
add
ret
adc
test
test
adc
nop
orb
int
les
sbb
push
popa
fs
push
fsubr
mov
jmp
mov
adc
mov
and
pop
pop
fs
xchg
lods
xchg
push
cmp
pop
pop
xchg
mov
push
pop
das
dec
and
dec
js
insb
enter
pushf
adc
mov
cmpsb
jg
cltd
fistps
xchg
scas
xchg
iret
divl
insb
inc
in
mov
pop
data16
imul
mov
xchg
pop
addr16
sti
subb
push
mov
mov
filds
xor
dec
mov
mov
cltd
arpl
cmp
ret
cli
sarb
sub
jp
lods
cmc
sbb
ficoms
inc
mov
fwait
inc
out
stos
dec
pop
xchg
mov
in
mov
adc
mov
mov
int3
push
enter
add
xchg
pop
and
lcall
pushf
jmp
fstpt
inc
xor
sbb
sbb
inc
xor
mov
mov
sbb
xor
push
mov
negb
cli
cli
les
faddl
loope
cmpsl
jo
xor
jg
xchg
push
jbe
stos
or
dec
bound
or
mov
out
mov
mov
mov
outsb
pop
popf
cmc
mov
jge
and
mov
add
lea
sub
xchg
jnp
rclb
adc
jle
stos
sub
mov
in
cmp
repnz
test
movb
mov
mov
mov
leave
ds
sbb
hlt
lods
dec
fisubrl
push
in
in
sub
out
cltd
push
cltd
sub
scas
jecxz
dec
dec
test
lahf
push
cltd
xlat
ficoml
sahf
data16
sub
dec
push
loopne
xchg
out
xor
js
cmc
insb
sub
sub
ret
sbb
leave
adc
jl
pop
or
xor
fsts
xchg
std
xor
arpl
es
inc
mov
aas
das
jle
aas
jb
lods
push
lahf
cmp
inc
jae
out
movsl
cmpb
rorb
and
hlt
lret
sahf
mov
repnz
stos
outsb
and
mov
arpl
jb
popf
or
and
cmc
pop
popa
adc
cmp
sti
add
inc
pop
stos
sub
mov
test
imul
jo
orl
jnp
lods
out
inc
arpl
jmp
incl
movsl
xchg
dec
xchg
rolb
ljmp
mov
rcrl
insb
cmpsl
jae
call
mov
lods
aaa
movsb
loope
lods
lods
jbe
jl
outsb
jmp
ret
daa
xchg
ret
mov
jnp
sbb
cli
pop
sub
push
add
inc
lret
jbe
ja
addr16
push
add
daa
sub
movsl
xchg
cmp
jmp
data16
jmp
inc
xchg
ss
ret
xchg
pop
adc
add
pmulhw
cli
call
ss
xor
jo
inc
lret
int
push
adc
mov
push
push
push
es
push
mov
cmp
out
jnp
mov
push
add
ds
mov
pop
jno
pusha
aas
push
out
pop
adc
inc
in
sub
pop
es
xchg
jno
cld
adc
mov
pop
pusha
std
int
xchg
outsl
mov
xchg
ss
jmp
xchg
in
or
push
mov
inc
xchg
imul
aaa
jno
leave
ds
adc
fs
ficoms
mov
cmp
call
or
and
testl
dec
aam
into
dec
loope
inc
inc
enter
stos
sti
sub
hlt
adc
sub
mov
pop
aad
adc
in
lock
out
pop
orl
mov
in
pusha
push
jge
inc
loop
insl
cmp
add
outsl
push
cmp
mov
insl
call
sbb
in
test
mov
push
sub
mov
xor
inc
mov
sub
mov
push
test
aad
dec
inc
fistpl
and
sub
dec
mov
xchg
mov
clc
jle
and
jnp
out
sbb
mov
cmc
cmp
fmull
pop
and
xchg
sub
push
mov
pslld
jne
add
dec
mov
popf
mov
in
clc
mov
push
mov
add
inc
imul
outsl
icebp
js
sub
negb
popw
in
xchg
xchg
cwtl
adc
mov
aad
xorb
rolb
cmp
dec
idivl
jle
ret
pop
cmp
scas
dec
mov
lcall
push
and
xor
fs
mov
jmp
repz
cmpsl
mov
and
sahf
loopne
cmp
xchg
insl
test
mov
mov
rorb
xchg
cwtl
icebp
shll
and
hlt
cmp
imul
jl
sbb
fdivs
mov
add
cli
jne
nop
mov
cmpsb
xor
aas
mov
leave
pusha
or
ret
xor
movl
pushf
jge
enter
addl
addr16
mov
jmp
loopne
lcall
imul
mov
fwait
repnz
mov
fists
nop
dec
aam
cld
pop
int3
add
xchg
je
ss
out
test
jge
int
mov
lret
fwait
jns
jg
jp
stos
xchg
pusha
mov
mov
das
hlt
jp
adcl
xchg
or
inc
sub
add
sti
movsb
jb
fnstenv
cmp
add
add
pusha
fwait
nop
inc
outsb
xchg
pushf
sbb
subb
sti
sbb
dec
ss
test
repnz
jmp
or
movsl
pop
or
dec
xchg
sub
jmp
push
adc
repz
cli
adc
pop
test
adc
cmp
adc
fnsave
test
jbe
cmpsl
mov
inc
les
lods
mov
add
pop
arpl
lods
insb
aam
ret
je
jb
loopne
sub
jge
jmp
test
mov
mov
cmp
cmpsb
cmc
add
subl
das
jnp
push
test
cwtl
jno
scas
mov
in
clc
test
lock
jecxz
xchg
jns
faddl
outsb
xchg
test
stos
cmp
lret
popa
je
into
inc
or
into
call
inc
rorl
xchg
fidivl
push
jp
ret
push
test
hlt
movsb
ror
dec
xchg
xorb
mov
lahf
push
mov
dec
jne
movsl
mov
cs
adc
nop
fisubl
sub
mov
add
cs
jl
dec
call
test
inc
push
insl
push
mov
and
mov
sub
xchg
out
jb
xchg
xchg
in
rcr
dec
xchg
adc
add
je
sub
jge
cli
mov
mov
lret
out
or
add
jecxz
outsl
outsb
and
mov
adc
in
ret
jbe
addr16
les
add
stos
sub
jnp
fidivl
jl
mov
lcall
lods
into
jmp
lea
imul
pop
mov
cmp
xorb
shrd
mov
daa
addb
fidivl
add
cmp
sti
jne
sub
push
inc
xor
rclb
mov
cmp
xor
mov
fsubrs
dec
ss
subl
mov
subl
fstpl
je
ficomps
xchg
push
xor
adc
dec
fisttps
addr16
out
js
sbb
dec
lock
mov
dec
cwtl
repnz
lahf
into
sub
mov
dec
push
add
or
lahf
divb
gs
in
std
rcrb
xor
inc
pop
pushf
xchg
adc
dec
outsl
xchg
les
mov
leave
and
flds
mov
pop
stos
test
push
push
push
scas
sbb
dec
push
sub
mov
out
imul
mov
mov
dec
aad
jmp
adc
popa
es
sbb
ret
test
sbb
loopne
stos
or
incl
xchg
fnsave
mov
xchg
int
push
push
clc
iret
mov
push
nop
jg
sbbb
test
movsl
mov
call
mov
lods
xchg
sbb
aad
push
cld
call
fdivrs
push
push
adc
lret
or
arpl
pop
sub
or
imul
jle
xor
sub
and
and
xlat
jno
pop
fistps
push
adc
into
std
push
orl
ljmp
xchg
mov
imul
imul
les
mov
fiaddl
loop
and
pop
enter
or
lds
inc
push
loop
mov
stos
inc
mov
adc
cmp
dec
add
dec
jecxz
out
sti
fstps
push
iret
mov
inc
xor
pop
push
jne
jl
js
sub
xor
mov
iret
jle
cmp
add
mov
scas
cli
shrb
adc
test
mov
jg
stos
mov
inc
inc
or
cmp
outsl
push
stos
test
mov
ret
jb
movsb
inc
sbb
adc
cmp
sub
pushl
daa
pop
mov
cmp
add
bnd
ffreep
pop
sub
sti
mov
add
lahf
xchg
mov
pop
mov
inc
jecxz
push
pop
and
popf
sbb
lret
cmp
push
xor
inc
sahf
dec
lock
push
scas
pop
pusha
sahf
fisttpll
mov
pusha
inc
and
mov
lret
js
js
jl
scas
xor
push
ret
outsb
push
imul
test
jge,pn
ja
sub
cmp
mov
nop
cmpsl
pusha
and
mov
test
inc
ljmp
jno
loope
cmp
hlt
mov
jmp
jmp
xor
lods
jge
push
mov
in
in
fs
movsb
popl
mov
pusha
aaa
sbbl
push
push
add
ljmp
bound
stc
cs
and
lods
inc
insl
adc
inc
and
cmpb
loope
mov
xor
fcompl
cltd
mov
mov
mov
ja
nop
sbb
xor
cmpsl
in
pop
or
ret
dec
cmp
lds
rcr
mov
cld
sub
bound
add
adc
mov
adc
push
pop
or
pop
jbe
aam
adc
pushf
jns
popa
adc
enter
lahf
adc
in
mov
lret
lock
and
cmp
push
insb
fstp
inc
das
add
mov
sbb
add
mov
jne
xchg
inc
test
pop
push
enter
in
mov
mov
ja
imul
or
jns
lahf
inc
addr16
out
repnz
xor
lcall
push
push
cmpsb
out
pop
js
ljmp
or
out
fidivrs
and
pop
cli
sub
push
ret
push
or
mov
stos
and
xchg
aaa
sarb
cmp
jbe
and
mov
mov
out
xor
mov
push
std
scas
test
add
imul
mov
inc
cmp
fldl2e
push
sbb
aam
cld
sahf
push
sub
cmp
lock
cmc
repz
sbb
mov
xor
pop
sub
jns
sbb
add
aaa
jb
jl
xor
xor
fdivr
pop
subl
enter
lret
pop
and
mov
mov
bnd
iret
xchg
or
outsb
push
aam
xchg
mov
push
jae
mov
dec
aaa
or
mov
jae
mov
movsl
sahf
push
and
fstps
repnz
and
bound
sub
hlt
and
psubd
aam
or
mov
leave
sbbl
aaa
and
mov
push
mov
and
xor
xor
or
xor
leave
mov
std
jecxz
dec
fiaddl
mov
mov
cld
test
lock
sbb
mov
jg
hlt
scas
push
pop
xor
add
leave
pop
adc
mov
out
cwtl
and
and
clc
cld
mov
fwait
add
ja
outsl
in
pop
pushf
fwait
mov
testl
in
or
jle
push
sbb
fldt
dec
push
data16
add
dec
xchg
insl
in
pop
push
and
sbb
test
dec
jle
and
mov
xor
adc
mov
insl
out
adc
cmp
addb
repnz
ljmp
xchg
or
mov
shrb
movsl
jl
scas
fidivrs
xchg
loopne
xchg
outsb
xchg
mov
lods
and
pop
addl
lods
out
xchg
jge
jp
mov
aas
lods
sbb
enter
movsb
mov
pop
popa
mov
sub
add
les
and
sahf
insl
repz
movsb
test
and
xchg
inc
cmp
mov
push
cmp
jecxz
outsb
and
jp
fs
adcl
xchg
pusha
fcomi
push
fcomps
test
dec
ror
js
lret
shlb
insl
sbb
pop
cmp
jb
mov
pop
or
pop
jle
xor
add
mov
sbb
mov
pop
outsb
stos
dec
jle
stc
aad
xor
pusha
aaa
push
fldcw
add
sbb
cwtl
sub
adc
mov
lret
cs
leave
inc
jecxz
lahf
mov
cld
cwtl
xchg
icebp
sbb
jne
rorb
xchg
movsb
xchg
es
shll
mov
leave
rcpps
scas
loop
mov
push
mov
xor
add
push
stc
fistpll
stc
aam
or
test
push
xchg
lcall
or
jmp
mov
cld
cmpsb
cmpsb
cld
cmp
xchg
mov
mov
adc
cmp
xchg
imul
sub
mov
int3
and
adc
ds
mov
inc
lcall
iret
in
dec
mov
push
arpl
into
adc
fadd
cmp
or
lods
rcll
stc
xor
aas
cwtl
cmc
mov
jecxz
mov
push
mov
ljmp
inc
sbb
xchg
hlt
gs
xchg
fadds
jl
xchg
iret
insb
dec
loop
test
outsb
adc
in
jne
jnp
test
out
std
xor
ss
mov
xchg
xor
fcompl
das
xor
adc
test
cld
xchg
movsl
push
popa
mov
adc
pop
test
in
xor
mov
adc
sub
jns
xchg
dec
cmp
imul
gs
ss
cmp
insb
mov
or
test
sbb
outsb
push
xchg
mov
mov
mov
sub
sbb
sub
outsl
jns
push
mov
adc
arpl
pusha
stos
stos
cwtl
fs
push
jns
jg
fistl
and
insl
fisubs
fwait
stos
xor
push
jo
add
mov
loopne
ret
adc
sbb
pop
mov
js
cs
dec
in
sub
dec
adc
xchg
mov
adc
adc
xchg
test
bound
sbb
mov
lea
xchg
mov
pop
dec
and
push
mov
and
jb
mov
ret
test
dec
cmc
push
or
sbb
pop
jnp
xchg
pop
lock
les
imul
jne
movsl
mov
add
lds
negb
in
mov
fcomi
clc
cmpsb
xchg
xlat
and
fnstsw
out
cwtl
sbb
out
aam
gs
idiv
js
ret
push
cwtl
jecxz
sub
imul
aas
adc
adc
xorb
jno
mov
insl
sbb
aaa
out
and
jl
and
pushf
imul
enter
out
int3
or
xor
decb
mov
jmp
and
xchg
sbb
xchg
xor
repnz
inc
and
dec
cmp
inc
dec
mov
xor
push
or
psrld
sub
repz
lock
rcl
xor
xchg
imul
test
lods
dec
mov
addr16
das
sbb
jb
xlat
push
add
pop
fdiv
ficoms
lret
push
add
loope
sarb
ret
adc
cmp
fsubl
popf
xchg
adc
push
jle
fs
push
cltd
int
xchg
or
aad
jae
int3
jbe
outsb
ret
and
divb
push
or
mov
int
in
cmp
xchg
mov
sbb
pop
inc
xchg
out
in
ja
xor
push
cmpsb
dec
jg
outsb
pusha
in
cmpsl
or
cs
lcall
leave
or
rorl
xchg
mov
addr16
sbb
or
es
adc
and
loop
xor
pusha
push
dec
cs
test
fmull
push
cmp
cltd
loopne
cld
stc
sub
xchg
shll
pop
mov
into
pushf
hlt
je
push
adcl
xor
imul
cmpsl
xchg
pop
clc
ret
pop
repnz
jbe
in
cmpsl
negb
in
jbe
xchg
scas
cmpsl
add
test
cwtl
icebp
movsl
or
les
push
shlb
pop
or
or
sbb
mov
mov
out
scas
movsb
insb
sub
mov
pop
ja
mov
sub
aas
data16
repnz
lds
push
adc
lret
sub
xchg
sbb
out
imul
cmp
shlb
cmpsl
mov
mov
pop
jnp
jnp
mov
inc
out
data16
or
pop
sub
cmp
mov
xor
dec
and
sub
jl
das
and
adc
gs
fs
repnz
mov
das
fisubrs
int
jnp
ret
jmp
stc
aad
icebp
cmpb
dec
shrl
sub
jmp
std
outsl
leave
idivb
xchg
sub
psrlw
rcll
lds
push
stc
gs
cmp
shr
jno
mov
adc
subb
hlt
lds
xchg
rclb
movsb
rcrl
cmp
test
enter
in
mov
adc
nop
leave
push
sub
nop
das
fnstcw
and
inc
in
push
lret
sub
dec
jno
pop
ja
jne
jnp
lahf
lock
sub
cmp
test
pop
push
and
pop
lret
fdiv
adc
fnstsw
pop
testb
decl
push
pop
cmc
pop
lods
push
mov
sub
pop
cmp
cmp
mov
adc
mov
dec
out
mov
shll
repnz
insl
f2xm1
pop
fs
xchg
mov
dec
dec
add
out
mov
clc
ficoml
mov
and
cmpsb
xor
mov
jae
pushf
out
lods
mov
mov
sub
fcomps
cmc
lds
mov
pop
repnz
in
mov
lcall
cmc
push
aad
lods
ljmp
xor
cmc
test
sti
inc
mov
sarb
ficomps
incl
sbb
push
imul
call
ljmp
inc
dec
add
loope
insb
or
movsb
add
stos
rorb
mov
add
arpl
insb
add
je
dec
out
mov
xchg
mov
xchg
test
jns
fisttpll
mov
fstps
es
loope
adc
je
mov
lahf
push
int
adc
mov
outsl
xchg
je
and
inc
cmc
lahf
ljmp
mov
mov
dec
sbb
gs
insl
adc
pop
scas
subl
cli
mov
xor
jnp
or
cmp
or
push
aas
xor
push
sbb
imul
cli
aam
ret
aaa
mov
int
jbe
dec
cmp
jne
loopne
mov
mov
cmp
mov
mov
sbb
aas
jo
mov
adc
pop
add
divl
aad
xchg
adc
stos
std
xor
add
mov
aas
dec
je
rolb
pop
dec
jb
xlat
mov
popf
sbb
adc
sub
adc
cmpsl
adc
push
sub
xor
enter
int3
data16
andl
mov
iret
push
iret
and
es
shll
rorb
dec
pop
clc
mov
push
in
adc
or
leave
push
rorl
mov
iret
xor
fmull
jge
and
pop
in
into
bound
xchg
fs
mov
cmp
inc
aam
lea
mov
pop
ss
or
dec
xor
mov
push
push
dec
movsb
sub
mov
hlt
add
movsb
pop
fsubl
mov
enter
mov
mov
inc
fldl2t
imul
test
mov
setae
mov
push
out
cmp
stos
lcall
and
dec
loop
push
scas
sahf
cmp
xchg
pushf
pop
mov
lods
notb
addr16
enter
aaa
arpl
dec
loope
cld
mov
sub
pop
jo
pop
jo
ljmp
inc
bound
push
arpl
test
loop
pop
jecxz
call
push
shr
outsb
lret
into
sub
add
testl
sbb
sub
xchg
push
stos
sbb
sub
push
fmul
dec
jp
xchg
pop
in
sahf
pop
push
imulb
ljmp
cli
shll
sub
mov
or
scas
insl
jl
push
xor
popa
fimull
mov
add
cmp
mov
mov
roll
lods
mov
or
jge
outsl
aaa
inc
sbb
lock
fcmovbe
inc
push
sbb
lock
fcompl
and
push
pusha
lret
mov
inc
imul
pop
push
mov
add
sbb
leave
or
repnz
ret
pop
xchg
mov
push
add
fdivrs
pop
jg
jle
inc
rcrw
mov
add
pop
mov
xor
shll
mov
jmp
bound
mov
or
fdivs
rcl
xor
add
fildll
mov
pop
fcomps
outsb
out
xor
add
push
out
mov
test
sahf
push
into
or
or
jb
mov
inc
paddusw
adc
movsl
lret
je
xor
xchg
mov
les
hlt
aad
jl
and
adc
lods
dec
cltd
xor
js
popf
and
shl
dec
mov
cmp
arpl
or
lds
aad
xchg
xor
call
in
jno
mov
cwtl
push
test
mov
push
mov
shlb
add
cmp
sub
out
mov
pop
pop
sbb
cmp
outsb
popf
leave
cmp
xchg
and
mov
addr16
jbe
xchg
enter
pusha
add
imul
imul
mov
mov
call
cwtl
push
lahf
adc
loopne
shlb
xlat
daa
push
in
sbb
xchg
enter
cmp
sbbb
icebp
xlat
in
movsw
iret
in
and
push
les
adc
in
mov
and
mov
pop
sub
add
adc
and
clc
pop
pop
hlt
adc
add
in
hlt
jae
pushw
test
pop
mov
xor
std
shl
add
mov
call
xlat
sub
add
test
mov
pop
push
cmp
loop
cmp
jl
xchg
and
sub
xchg
adcb
fstp
pop
fwait
and
fldcw
bound
inc
mov
popa
mov
mov
imul
fxch
mov
sub
dec
jns
repnz
sahf
mov
xor
in
ret
ss
dec
jnp
repz
push
cltd
cmp
pop
gs
ss
xor
icebp
cmpsb
add
xlat
lret
push
or
lods
dec
or
mov
push
mov
test
dec
lret
sbb
in
cmp
mov
test
xchg
add
inc
lods
clc
push
jns
dec
mov
mov
rcrb
outsb
mov
inc
jecxz
add
or
inc
mov
cmp
cmpsl
sbb
sti
cmpsb
dec
jp
push
inc
xor
lock
sbb
push
or
mov
test
cmp
sbb
mov
cltd
lret
das
daa
inc
int3
dec
stos
dec
or
push
bound
pop
mov
idivb
cld
andl
imul
or
ret
inc
fldpi
cmp
adc
cmp
xchg
dec
in
and
fs
adc
testb
arpl
icebp
inc
dec
ror
sub
int3
sbb
add
xor
aad
addb
xchg
mov
mov
cmp
push
add
jno
mov
out
fisttps
sahf
sbb
shl
in
xor
shlb
cmp
push
scas
and
lahf
adc
and
rclb
pushf
cmpsl
mov
adc
sahf
mulb
arpl
and
out
push
int3
inc
xchg
pop
add
sbb
jne
in
adc
mov
movsl
jns
jns
adc
push
lret
or
retw
jp
rorb
dec
ljmp
fnstenv
xor
testb
push
notl
dec
aam
insl
xor
push
cli
mov
mov
mov
sbb
jbe
frstor
sub
inc
push
shl
cmpb
pop
pop
pop
leave
adc
mov
adc
loopne
mov
int
adc
outsl
jg
mov
xor
filds
pop
pop
push
test
xor
jnp
cmp
cmp
aam
sub
and
jle
dec
insb
repnz
or
push
push
dec
mov
iret
inc
or
mov
leave
mov
inc
iret
scas
insb
int
sbb
sti
mov
xchg
adc
mov
and
sbbb
mov
pop
xor
mov
sbb
fcmovbe
insb
sbb
mov
dec
xor
mov
pop
out
loope
jne
insl
std
push
cli
mov
shlb
gs
sub
mov
cwtl
xor
xchg
pusha
les
lock
iret
scas
cmp
sahf
enter
fstpl
imul
xchg
mov
scas
add
nop
hlt
xchg
cmc
or
aad
mov
ret
lds
aas
cli
hlt
cmp
pop
cmpl
movl
enter
popa
aam
imul
mov
xor
ljmp
mov
adc
arpl
sub
mov
sbb
jo
push
mov
fsin
mov
xchg
or
dec
aas
xchg
push
bound
adcl
cmpsl
lret
sbb
aam
enter
cli
iret
pop
enter
and
and
popa
cmp
sbb
jle
dec
leave
shlb
push
and
jnp
jne
mov
rorb
jmp
push
cld
fstpt
testb
rclb
mov
hlt
jb
clc
cmc
clc
and
pop
popf
cmp
fldt
pop
out
arpl
addr16
mov
push
pop
fidivs
andb
or
adc
xor
mov
sub
dec
xor
repnz
xor
sbb
xchg
sbb
inc
imul
enter
sub
cmpsl
arpl
adc
xor
push
add
jnp
add
pop
jbe
sub
jmp
xor
xchg
mov
das
addb
mov
sbb
ret
mov
jnp
imul
add
cmp
mov
imul
mov
and
add
out
mov
lcall
fcmovbe
loopne
iret
inc
pusha
shlb
xchg
mov
inc
loop
adc
bound
out
or
pop
shll
mov
iret
jb
mov
xchg
cwtl
repz
mov
std
mov
shlb
aaa
mov
mov
ret
out
jg
or
dec
jmp
in
sar
mov
and
es
lcall
xor
pop
push
lcall
test
out
cmp
jns
fldl
dec
sbbb
jl
mov
mov
mov
test
jg
out
das
push
mov
mov
aam
sar
data16
jae
mov
and
test
mov
rcrl
cmpsl
shll
repnz
or
mov
adc
insl
cmp
add
leave
out
into
shll
pop
cld
lret
mov
leave
testb
inc
pop
div
int3
insb
testl
or
sbb
ss
inc
addb
daa
inc
out
cmpb
mov
lods
xor
cmpsl
cmp
rorl
fistl
outsb
push
mov
or
mov
and
xor
push
cs
addb
sbb
fwait
pop
ljmp
sbb
pop
jg
int
jo
cmpsl
and
subl
sti
aad
dec
adcb
repnz
icebp
inc
dec
nop
test
arpl
cmp
dec
scas
out
adc
mov
nop
lahf
aaa
pop
jmp
add
add
mov
mov
repz
mov
push
dec
and
add
out
add
ss
push
sub
out
imul
adc
pop
jno
jns
cmp
icebp
int
popa
mov
pop
mov
and
jne
test
sub
addr16
push
sub
fstpt
icebp
sahf
xchg
call
xchg
jno
inc
pop
sbb
loope
ljmp
push
pop
pusha
fmuls
stos
mov
out
subl
and
xchg
inc
xor
adc
add
dec
pop
adc
sub
jae
mov
xor
addb
push
pushl
int3
stc
push
mov
mov
cmp
loop
out
cmp
mov
sub
test
loop
insb
dec
mov
mov
out
xchg
and
adc
insl
push
push
xor
mov
xor
testl
aas
cmpsl
fs
movsl
rcrl
mov
pop
call
push
mov
fsub
stos
add
mov
aaa
mov
lock
adc
lds
fs
adc
lcall
cmp
xor
fdivl
ds
dec
lods
add
and
adc
xchg
cmpsb
bound
mov
adc
clc
outsl
cmp
push
mov
jmp
rcrl
add
cmp
jle
stc
arpl
add
and
pusha
inc
movsb
das
xor
out
out
mov
pop
push
xchg
mov
iret
shr
or
std
mov
jge
mov
mov
lcall
std
ror
xchg
or
adc
sub
add
pop
jno
jns
sahf
add
mov
or
push
fs
ret
test
aaa
pop
xchg
mov
sbb
addr16
jns
imul
sbb
ljmp
xchg
fidivs
in
mov
stos
rclb
push
jo
aaa
push
and
mov
jnp
and
nop
daa
mov
movsb
jnp
add
shrl
data16
dec
jo
mov
xchg
push
mov
add
leave
mov
cmp
loope
popa
loopne
inc
pop
lds
cmpsb
sbb
jle
fsubs
jbe
jmp
push
or
inc
inc
xor
inc
arpl
or
and
cli
enter
shll
jb
push
jle
aad
aam
ret
scas
icebp
outsb
inc
mov
mov
sbbl
cmpsb
cmc
xor
fwait
xchg
shrl
stos
jbe
sarl
pop
or
jge
pop
rorb
je
dec
mov
hlt
movsl
jne
xchg
jo
ds
les
adc
mov
dec
movsb
push
aaa
bound
les
aam
cmp
jle
adc
out
or
ret
sbb
je
das
dec
cltd
or
test
jecxz
jbe
addr16
imul
dec
sub
stos
sub
dec
lods
jbe
sub
push
dec
xlat
loope
aaa
add
addb
cmc
scas
fs
repz
sbb
inc
push
aas
inc
sbb
pop
ss
or
inc
ret
xor
roll
mov
push
out
lods
rcrl
push
mov
mov
xor
cmp
shl
push
test
lock
adc
cmp
or
addr16
sarl
pop
jbe
cmp
into
cli
dec
xchg
in
adc
jb
je
adc
rcrb
mov
sbb
outsl
mov
sub
adc
mov
sbb
inc
push
or
popa
out
cmpsl
stc
orb
push
dec
adc
pop
fistpl
ret
xor
ficoml
pop
add
sub
jae
bswap
and
sbb
cmc
jo
jg
scas
mov
fistpll
sub
and
cs
sub
test
pop
aad
je
mov
xor
push
xlat
dec
adc
adc
adc
add
pop
pop
mov
push
flds
es
in
mov
lret
mov
jns
or
push
out
pop
rorl
mov
es
and
imul
fiadds
lods
mov
bndldx
push
adc
mov
cmp
dec
imul
leave
inc
xchg
xorb
sub
shrl
mov
cmc
inc
or
and
in
out
loop
rolb
and
push
push
xchg
loop
xchg
add
lods
cmp
out
lcall
cmp
adc
test
inc
adc
and
sbb
std
adc
dec
jg
dec
shld
sahf
sub
sub
test
xor
pop
mov
outsl
mov
shrl
repnz
loopne
aas
and
sbb
hlt
push
cmpb
mov
dec
xor
std
or
and
cmp
and
ret
mov
fidivrl
push
xor
jb
push
jmp
dec
xor
icebp
insb
and
cltd
stos
mov
movsb
dec
push
lahf
xchg
test
ljmp
push
mov
add
push
daa
and
or
xchg
cmp
scas
sub
test
xor
jb
loope
es
addr16
sub
cmp
mov
out
pop
mov
aaa
lock
jo
js
lret
test
dec
je
rcrl
push
ret
imul
mov
cmp
pop
or
fs
popf
jg
loope
daa
inc
add
or
scas
leave
out
inc
push
js
int
adc
mov
lods
jl
test
lods
or
cld
stos
dec
and
pop
stos
mov
sub
mov
dec
es
popa
test
outsl
pushl
aaa
push
sub
call
mov
push
mov
sbb
cltd
imul
mov
adc
imul
lea
cmp
xor
test
dec
out
shrl
or
mov
sbb
mov
loop
jl
fidivs
rorl
stos
xchg
push
ret
cmp
inc
pop
repnz
inc
lcall
std
sti
mov
inc
adc
call
stos
inc
fistps
adc
inc
inc
xchg
roll
adc
dec
fs
outsl
mov
xchg
shr
aas
mov
int3
jp
add
mov
push
mov
xchg
inc
mov
roll
jnp
jmp
roll
dec
sbb
xor
inc
mov
jae
movsb
xchg
dec
push
or
pop
mov
xchg
aad
mov
jns
mov
popf
mov
loopne
fisubrl
mov
xor
lret
js
xor
sub
stos
bound
push
orl
out
iret
sub
cli
jle
pop
shll
push
bound
cmpsb
loop
push
mov
xchg
mov
push
cmpsl
dec
and
in
pop
ja
test
push
fdivrs
call
sub
jo
adc
sub
mov
imul
jb
shrb
rcrl
xchg
xchg
ret
mov
push
iret
gs
cmp
call
mov
cmp
movsl
or
xchg
xchg
leave
add
int3
adc
jne
stc
out
sub
inc
push
xchg
sbb
cli
adc
jbe
gs
bound
jg
fistpl
inc
stos
inc
rclb
xor
inc
lods
into
xchg
mov
or
push
stos
lds
adc
loopne
loopne
sbb
push
adc
shl
mov
jge
testb
mov
jmp
sbb
pop
or
fdivl
rcrb
cmpsl
enter
fsubr
scas
mov
xor
jne
fnstsw
push
repz
cli
rorb
sub
pop
movsl
mov
gs
jbe
or
add
mov
shr
in
loopne
movl
push
test
cmpsb
and
xor
loope
loop
movsb
test
pop
jmp
cmp
andl
sbb
push
stos
push
adc
lods
leave
loop
xor
xchg
inc
loopne
adcb
out
jge
enter
clc
mov
enter
adc
push
push
fwait
mov
outsb
imulb
cmp
mov
mov
push
gs
les
jb
xor
aas
popl
pusha
fdivr
jp
mov
sub
mov
lcall
icebp
aaa
inc
je
pop
mov
xchg
mov
loop
jnp
mov
faddl
mov
repnz
cmpsl
in
sub
inc
stos
fisttpl
dec
lds
hlt
adc
out
mov
mov
into
daa
jl
mov
and
and
xchg
fs
das
sbb
fiaddl
and
js
mov
das
scas
out
cld
gs
push
cmc
in
push
fstl
adc
ret
or
mov
mov
inc
lods
pop
loope
sub
sbb
popa
je
jmp
cld
fisubs
add
cld
push
mov
sub
gs
lahf
jmp
pop
adc
in
mov
xor
push
mov
sub
nop
loopne
or
adc
movl
out
mov
xchg
sbb
add
adc
shld
pop
adc
repz
cmp
lods
test
xchg
pop
repnz
ret
add
jp
cli
xchg
mov
inc
mov
loop
push
leave
add
stos
std
lahf
cmpsl
in
inc
loop
mov
mov
jae
jecxz
push
jb
mov
ds
or
leave
cs
mov
hlt
pop
push
sbbb
je
mov
cmpsb
cmp
ja
loop
jmp
insb
fwait
mov
es
sub
mov
ss
clc
xchg
sbb
bound
fldcw
jns
mov
dec
ror
push
push
out
push
sbb
pop
mov
push
out
arpl
dec
mov
and
ljmp
hlt
scas
cmc
sbb
jecxz
mov
das
push
mov
imul
dec
xchg
sub
pop
push
push
and
imul
aad
add
sbb
je
jmp
xchg
shrl
mov
aaa
inc
jns
lods
insb
mov
fimull
lahf
popa
rcll
popa
sub
sbb
cmpsl
inc
sub
inc
fmull
gs
jge
inc
push
mov
xchg
fstp
jae
test
dec
push
dec
xor
jne
push
add
mov
aas
or
mov
bound
sarb
loop
mov
or
mov
lahf
fs
mov
cmc
in
mov
dec
repnz
data16
fsubrl
pop
push
imul
mov
cmpl
sbb
test
push
mov
in
aam
sbb
mov
and
insl
out
xor
xorl
push
lds
dec
mov
shrb
stos
adc
and
or
push
xor
xchg
or
adc
sbb
jle
rcrb
loop
xor
pushf
movsl
mov
sbb
cmp
lock
mov
or
mov
call
leave
push
mov
iret
ret
sti
popf
jnp
mov
lock
js
repz
xor
scas
aad
rcrb
push
jecxz
sahf
xchg
adc
stc
incb
insb
and
mov
icebp
lods
fs
add
loop
push
inc
fs
movd
dec
shl
adc
vpsrlq
sahf
test
mulb
cs
lds
mov
mov
dec
sub
stc
mov
cmpsb
aaa
push
mov
shr
fisubl
push
mov
add
sub
sub
aas
cmp
xchg
outsb
sub
pop
mov
cmp
pop
in
add
dec
pop
push
add
aad
jp
xor
clc
push
int
inc
mov
sbb
fptan
sub
lcall
mov
sti
lods
or
dec
test
push
gs
sarb
outsb
dec
insb
dec
xchg
push
xchg
mov
addr16
jg
inc
ret
lcall
sub
test
xor
inc
sub
fnstsw
pop
xchg
das
and
rcrb
cltd
xor
jns
dec
xor
dec
rolb
negb
cmp
jno
jecxz
addl
xchg
push
mov
pop
sub
sbb
mov
sbb
ljmp
pop
clc
jbe
adc
popf
std
cmc
push
aam
movsb
leave
mov
pop
cmp
mov
mov
push
cmp
rorb
jl
mov
mov
mov
outsl
jmp
xor
push
js
dec
out
mov
xchg
cmp
jbe
testb
push
out
in
ret
sbb
jb
out
sarb
mov
sub
pushf
aaa
fldln2
ret
mov
js
jg
xchg
or
add
xchg
and
sbbl
lret
and
mov
in
cli
sbb
sub
push
inc
test
cmp
lret
xor
add
jne
jbe
leave
or
xchg
fstpt
adc
mov
adc
lahf
leave
movsl
popf
cmp
and
pop
lods
mov
mov
lods
jno
ret
lock
dec
cmp
es
notb
test
pop
add
sbb
cmp
daa
fisttpl
addl
add
xchg
dec
dec
lds
add
es
dec
and
xor
xor
adc
repz
test
movsb
movsl
popa
xor
inc
adc
mov
decb
ret
icebp
jnp
fdivl
lahf
leave
pop
xchg
jle
jg
mov
add
lods
or
add
aad
repnz
das
cmpsl
out
outsb
lock
int
xchg
fwait
jl
xorb
xchg
inc
js
pop
punpckhbw
in
popf
loop
lcall
mov
repnz
or
sbb
mov
outsb
cmp
adc
jp
sub
lcall
dec
xchg
mov
jne
inc
lcall
pop
xor
into
adc
add
mov
aam
mov
push
cmp
fs
repz
cwtl
jmp
dec
inc
stc
fidivrs
sub
iret
sub
push
js
cli
push
fs
lods
fdivs
push
push
mov
sbb
sti
stc
push
inc
lahf
pop
sub
fucomip
push
ja
call
pushf
lss
fcoms
loope
ret
cmp
pop
neg
imul
jo
int
xor
es
scas
gs
jmp
out
or
xchg
les
inc
sub
cmc
cmp
int
aas
adc
cli
jecxz
or
cmp
lods
enter
sti
sbb
or
les
cs
shrb
ret
lods
mov
xlat
push
movsb
int3
xchg
dec
lock
gs
adc
scas
gs
xchg
mov
xchg
sbb
lods
push
sti
sti
dec
mov
push
mov
mov
jg
in
int
lahf
mov
fwait
mov
adc
sub
icebp
inc
lods
inc
cltd
pusha
sub
xor
pop
jae
lret
out
mov
dec
data16
cmp
in
out
xchg
mov
mov
cmp
stc
stos
cmp
repnz
adc
call
add
rcrb
adc
jp
ds
fwait
into
cmp
movsl
idiv
xchg
and
pop
cmp
add
sub
pushl
sbb
jnp
out
je
push
insb
shlb
xlat
and
adc
mov
mov
push
or
add
pop
mov
jne
bndldx
mov
jl
push
and
lahf
in
test
test
cmp
jae
mov
sbb
xchg
adc
inc
and
jne
jno
notl
loope
mov
sti
push
shlb
loop
or
into
cltd
cmp
dec
flds
inc
inc
and
dec
xor
iret
xlat
rorl
cmp
push
cltd
cmp
cmp
loop
outsl
and
ss
adc
movsb
xchg
xlat
lock
cmp
mov
sbb
xlat
push
repz
adc
pop
cmpsl
xchg
and
loopne
into
test
adcl
sbb
scas
lret
mov
push
push
and
mov
mov
fimuls
or
push
bound
inc
mov
shl
inc
push
xor
adc
popf
and
xor
mov
jle
jae
das
cmpsl
xor
enter
mov
clc
mov
into
outsl
dec
adc
stos
in
test
cmpsl
ror
cmp
aas
dec
cmp
ret
je
fimuls
sub
scas
idivl
or
jns
fcmovu
mov
pop
mov
ret
push
rcr
cmpsb
in
in
dec
mov
shll
push
rcll
dec
and
loope
mov
or
cmc
cmp
lock
xor
mov
mov
dec
push
pushl
adc
mov
cli
jge
xchg
test
clc
cld
xor
mov
sarl
pusha
jge
in
fidivl
mov
jmp
and
push
or
cltd
mov
icebp
pop
or
xor
daa
xor
fistpl
sub
mov
sub
stc
pusha
xchg
lods
sarl
xor
mov
jmp
movsl
test
push
aas
sbb
test
stos
stos
mov
pop
mov
fstp
and
je
pop
dec
icebp
jae
clc
jle
shlb
and
push
test
sbb
add
pop
mov
loope
test
jecxz
push
jo
mov
jno
iret
dec
xor
in
outsl
mov
mov
insb
mov
enter
xchg
mov
aas
daa
and
stos
je
push
cld
xor
leave
xchg
pop
sbb
outsb
sbb
add
movsl
test
push
sbb
jg
sub
cwtl
jno
cmp
push
idiv
lahf
sbb
pop
mov
xor
or
and
test
pop
push
add
push
aaa
sbb
imul
jbe
lea
adc
mov
cmp
and
add
pop
xor
push
pop
ss
or
xchg
xor
mov
pop
pop
imul
lcall
dec
sahf
cmpl
xor
stos
xchg
scas
or
and
mov
jae
pusha
sti
fdiv
and
jp
adc
fldl
push
dec
js
hlt
and
mov
es
int3
out
push
ret
in
pop
inc
negb
iret
mov
es
div
pop
sbbb
sbb
out
cmp
dec
cltd
test
dec
insb
xchg
dec
andb
cmpsl
das
xor
cwtl
in
fildll
roll
loopne
or
loop
mov
jno
sahf
call
push
js
stos
inc
out
repnz
mov
push
leave
push
sbb
ror
aam
in
and
xchg
push
cmpsl
mov
or
adc
xor
lock
ror
enter
or
pop
in
push
cmp
sub
adc
mov
lret
xchg
pop
fbld
cmp
adc
imull
or
lods
stc
loop
push
mov
push
add
mov
mov
das
fstl
lods
pop
or
into
fidivl
loope
inc
cmpsl
jmp
mov
repnz
je
pushf
bound
test
aad
cmpsb
clc
xor
pop
pop
cld
xchg
stc
pop
push
clc
es
popf
push
cmp
jb
jmp
xchg
push
add
or
das
and
xchg
cmpsl
mov
popf
movsl
mov
fcomps
ds
jno
sub
outsb
aas
mov
stos
mov
adc
mov
cmp
data16
dec
jb
loopne
jg
fidivl
clc
cmpsl
cmp
pop
sub
repnz
popf
lods
jle
or
dec
cli
lods
push
push
sbb
or
xchg
iret
in
add
add
fistl
xchg
xor
jns
gs
mov
mov
mov
lahf
ja
xor
adc
data16
addb
pop
fcompl
push
test
mov
push
cld
gs
out
scas
adc
std
cmp
mulb
lret
mov
push
or
add
cmc
jge
mov
push
ret
jg
xchg
mov
test
or
outsb
xor
loopne
int3
mov
cmp
sbb
mov
mov
mov
dec
in
mov
add
add
xchg
push
flds
ja
popa
pop
cmpb
pop
stc
dec
lret
inc
inc
nop
jp
sub
and
aad
xor
push
push
mov
xchg
or
add
movsl
aam
push
dec
aaa
dec
jge
jb
daa
push
out
or
and
sahf
adc
loopne
push
nop
repz
mov
neg
jecxz
push
inc
and
scas
fcmove
dec
clc
cmc
inc
adc
aas
pop
xor
dec
lcall
imul
sbb
icebp
cmp
push
xchg
rclb
cmp
call
sbbb
push
pop
hlt
jne
adc
dec
cmp
je
push
push
jecxz
enter
mov
jo
xor
jnp
dec
and
popa
push
icebp
add
pop
movsb
push
adc
mov
xchg
cltd
popf
jne
test
dec
cs
rclb
mov
mov
sub
sub
jecxz
pop
icebp
sbb
mov
lret
and
push
push
popf
shll
inc
pop
xchg
pop
lods
mov
xor
xor
xchg
mov
lods
call
xchg
rcll
dec
xchg
mov
imul
ror
lods
imulb
jns
cmp
test
sbb
daa
or
jle
popf
scas
rol
push
inc
or
dec
test
stc
vmovlps
push
stos
or
and
ljmp
sub
mov
pop
fbld
aaa
les
add
xchg
push
movsb
push
nop
imul
dec
shlb
mov
cmp
adc
push
push
xor
mov
je
fmull
sbb
sub
out
inc
les
sbb
cmc
or
push
ss
mov
mov
xchg
in
add
sar
pop
ror
aaa
xor
fwait
mov
ljmp
aam
xchg
push
sub
sub
or
lds
mov
mov
dec
and
sbb
inc
sti
cmp
rcll
sahf
pop
mov
rclb
add
sbb
jno
adc
jne
imul
sbb
push
push
pop
cli
cmpsl
test
or
or
push
inc
pop
adc
xorb
sub
mov
clc
jge
test
sarb
push
xchg
test
ficomps
sub
testb
mov
pop
fnstcw
loope
inc
in
shlb
and
ret
enter
cmpsl
dec
into
clc
push
jne
xor
adc
sti
std
sub
andb
xchg
pop
int3
inc
and
inc
push
sarb
inc
xor
sub
push
arpl
int3
dec
arpl
sahf
inc
stos
adc
mov
les
adc
insb
xor
mov
filds
pushf
inc
fistpll
dec
cmp
dec
mov
pop
into
inc
fdivrs
clc
and
cmp
jecxz
jb
enter
stos
es
in
test
outsb
sub
ljmp
sbb
ljmp
pop
xchg
jmp
sbb
fists
mov
pusha
adc
xor
int
xchg
stos
scas
pop
mov
ficompl
sbb
into
sub
in
rcrb
xor
fwait
pop
push
popf
xor
sub
xor
mov
ljmp
ror
bound
push
lods
cmc
cltd
addb
sbb
sub
clc
xchg
mov
in
sarb
scas
ljmp
orl
in
cmp
mov
sbb
dec
pop
cmpsl
mov
mov
dec
jmp
xchg
add
xchg
fwait
jnp
and
fstps
rclb
jp
les
fsts
xorb
and
fistps
js
dec
fisttpll
testb
sbb
cmpsb
or
or
ret
stc
int3
jge
fisubl
jmp
aad
sbb
ds
fdivrs
stos
addr16
adc
popf
cltd
mov
mov
xor
iret
mov
inc
pop
icebp
sub
pop
lock
shl
push
mov
cmp
out
addl
adc
stos
shlb
adc
mov
cmp
xchg
mov
push
inc
addb
outsl
adc
push
add
push
test
push
push
cld
ds
pop
and
fdivl
jp
outsl
inc
mov
cmp
and
decb
sti
bnd
adc
ljmp
mov
push
add
outsb
add
mov
xchg
aaa
push
fcmovb
scas
int
popa
jle
sti
fnstcw
push
inc
adc
ficomps
ds
jp
xor
loope
xchg
mov
ret
bt
and
loope
mov
rclb
and
and
add
jl
std
sbb
mov
lods
sahf
scas
in
filds
shll
mov
in
test
jb
sbb
xor
sbb
fmulp
and
fisubl
adc
lcall
or
cltd
not
insl
fldlg2
mov
aaa
lds
outsb
dec
add
sub
dec
addr16
cmp
das
out
inc
popa
test
loopne
or
roll
movsb
in
sbb
fs
loopne
das
adc
mov
cmpsb
dec
addr16
inc
adc
sbb
lods
dec
mov
test
lock
cmp
mov
mov
in
xchg
cmp
pusha
or
cmpsl
inc
push
inc
addr16
mov
imul
jmp
inc
fstpt
loope
sbb
es
fwait
roll
sub
out
imul
imul
push
and
push
sbb
or
mov
movsl
mov
mov
popa
popa
jmp
lret
inc
fnstenv
jge
sbb
sahf
js
adc
mov
cwtl
sbb
cld
mov
mov
mov
test
leave
push
push
pop
inc
addl
call
fisttpll
dec
sbb
fisttpll
iret
ffree
adc
cvttps2pi
fistps
add
jno
mov
mov
pop
mov
and
hlt
inc
sbb
hlt
popa
push
xor
inc
adc
dec
jnp
cli
mov
mov
out
and
cmp
jo
mov
mov
rcrb
mov
outsl
aaa
insl
aad
push
mov
pop
mov
mov
or
enter
ret
and
push
adc
cltd
and
stos
jb
lods
jbe
arpl
jge
das
mov
scas
fidivs
fildll
mov
pop
mov
add
clc
sub
and
test
and
fdivrl
mov
imul
jp
movsb
into
les
xlat
int
xlat
jl
mov
inc
mov
incl
inc
inc
mov
and
pop
or
inc
movsb
cmp
push
stc
xchg
and
es
or
mov
popf
xlat
dec
lea
ret
mov
es
push
test
adc
adc
xor
scas
push
mov
bnd
sub
xchg
jnp
stc
in
es
mov
popf
fld
mov
into
fs
xchg
mov
adc
adc
cli
inc
test
jnp
sbb
push
pop
pop
rolb
mov
and
mov
js
stos
pop
insb
loop
mov
repnz
loope
fiadds
mov
ret
sbb
stc
jb
jno
mov
lods
lods
cmpsl
gs
adcl
enter
out
sbb
add
int
cmp
cmc
mov
stos
dec
insl
push
fs
pusha
push
cmp
icebp
test
jns
adc
dec
mov
fidivrl
ret
xor
sub
jno
in
or
aas
call
push
nop
out
ret
jne
pop
test
ss
sub
push
mov
icebp
xor
xchg
sub
test
inc
pushf
test
mov
cmc
push
sti
jae
sub
inc
inc
rorl
hlt
test
mov
cmpsl
mov
and
in
pop
out
pop
inc
adc
cmp
loope
dec
pop
lret
cli
and
dec
nop
mov
mov
clc
dec
pop
repz
lret
mov
sar
jo
popl
and
scas
push
fdivl
test
jmp
adc
fwait
pop
sub
and
imul
add
imul
sub
xchg
scas
and
xchg
adcl
loope
add
icebp
imul
outsl
mov
ret
ss
add
jp
add
jno
cmpsl
pop
cld
inc
aad
cmp
out
popa
lcall
daa
je
js
rolb
inc
clc
and
mov
and
jecxz
into
mov
fistpl
xchg
xor
push
das
push
jne
lods
sub
incb
xchg
add
xchg
dec
xchg
push
std
mov
leave
idivl
fldenv
out
lods
push
jg
ljmp
inc
pop
mov
jnp
sti
inc
or
lret
push
sti
js
sbbl
gs
inc
cmp
push
cmp
mov
xor
fistps
pop
inc
je
sub
push
or
gs
sub
and
mov
xchg
dec
scas
shll
int
jle
dec
pusha
push
xor
sbb
sbb
daa
jge
loop
loope
mov
sbbb
inc
sub
jns
es
push
scas
dec
and
xchg
hlt
sbb
cmp
test
popa
repnz
xor
in
movsb
hlt
aaa
mov
xchg
xor
arpl
add
enter
and
addr16
mov
or
dec
xchg
lds
dec
dec
inc
idivb
or
lret
fistpl
sub
fildll
mull
in
dec
lds
push
fnstcw
dec
jbe
movsl
jbe
arpl
jns
iret
mov
movsb
xchg
repz
adc
jae
sub
insl
adc
into
jbe
adc
mov
inc
out
mov
cwtl
add
lds
cmpsb
cmovle
or
sahf
lret
mov
lret
add
lds
push
mov
ja
repnz
addr16
pushf
push
fildll
repnz
mov
adc
inc
aam
jne
xlat
mov
gs
das
lahf
mov
lds
sbb
push
ss
imul
jo
lock
loopne
jnp
jmp
cmp
push
lidtl
pop
aaa
sub
aaa
int
push
sbb
imul
cmpsl
pop
or
out
cmp
int3
mov
jns
cmp
xor
add
int3
pushf
add
stos
push
pop
and
xchg
push
and
cmp
jno
outsb
es
inc
sbbb
pop
push
add
outsl
cmp
sub
in
jge
lea
sub
mov
je
test
push
jb
filds
mov
add
fisubrs
cld
adc
jge
jo
inc
and
push
pop
jns
test
fisubrs
arpl
aad
in
sub
push
fs
mov
cmc
or
push
xchg
push
jle
fucomip
mov
sub
test
sarb
dec
jecxz
pop
xchg
adc
gs
jle
jge
jecxz
inc
inc
lret
or
fcmovne
push
mov
lcall
push
pop
and
cmp
dec
mov
cmp
mov
mov
popa
test
out
cmpsb
fistl
sub
sbb
jne
and
mov
cmp
cmp
dec
pop
inc
jp
cmp
call
rorl
adcl
int3
arpl
lcall
inc
inc
sub
fidivrs
cmp
in
sub
orl
pop
bswap
add
jmp
adc
in
addr16
fiadds
clc
in
cltd
dec
cli
sbb
jmp
fstpl
cmpsb
add
lds
adc
mov
lea
pop
stc
fcmovb
mov
push
rolb
scas
les
fnstcw
mul
sbb
lock
dec
cmp
jg
in
sbb
ret
cld
push
pop
ljmp
dec
jae
leave
push
mov
and
mov
dec
pop
inc
pop
aam
jo
and
mov
jle
sbb
insb
outsb
mov
lret
pop
negb
sbb
outsb
sbb
fmull
mov
in
adc
xor
push
bound
and
xchg
dec
call
movsb
loopne
and
out
xor
add
add
stc
ss
jne
ret
inc
test
and
jae
popf
lahf
scas
int
and
add
jg
pop
cltd
cs
dec
cltd
push
xchg
add
and
adc
sbbb
inc
jns
fdivrl
mov
nop
sub
xchg
sbb
call
sbbl
into
pop
inc
pop
adc
pop
and
sbb
mov
fistpll
xchg
jmp
inc
cmp
cmovg
mov
insl
insl
imul
out
jae
dec
scas
push
test
xchg
ja
ljmp
mov
and
pop
jb
arpl
sahf
sub
cli
outsb
xchg
mov
stc
xor
pushf
mov
dec
dec
pop
sti
mov
jns
pop
or
imul
mul
and
and
cmp
fisubrl
mov
cwtl
xchg
pop
ret
xchg
sub
cmp
notb
xchg
and
movsb
mov
divb
icebp
ret
jb
add
jle
adc
notb
popf
js
shr
mov
addl
sarl
xchg
mov
push
fiadds
bound
out
xchg
mov
push
pop
adc
push
mov
or
loop
adc
sahf
mov
dec
lods
std
iret
ficoms
push
sbb
and
mov
aam
cmc
jo
mov
sub
lcall
icebp
inc
std
xor
or
add
popf
divb
adc
jne
lds
cmpsb
sbb
and
ljmp
ljmp
aaa
pop
ret
pop
and
int3
xor
scas
inc
sub
pop
out
ja
out
nop
mov
loope
fwait
xchg
xor
push
insl
scas
dec
or
pop
in
jo
jno
std
std
and
mov
ficoml
addr16
repz
jge
sbb
imul
jno
jp
sbb
std
insb
and
movsl
cmp
cwtl
pop
or
test
nop
insb
jae
movsl
movsl
bound
sti
sahf
sbb
cld
push
mov
dec
fs
add
int
dec
in
lret
sub
repz
mov
scas
out
dec
insb
sbb
jo
xlat
mov
sub
pop
ret
andb
loopne
roll
in
push
adc
ret
xor
jno
push
xchg
cmp
xor
fwait
inc
push
notl
popf
sub
mov
push
jmp
adc
and
push
clc
aaa
adc
mov
inc
sub
ficomps
dec
aas
out
stos
pop
dec
jle
lret
jb
cld
add
dec
in
push
shrl
pop
mov
data16
xchg
lds
aad
adc
add
hlt
loop
sbb
mov
jmp
mov
mov
lea
and
sbb
scas
sub
std
sbb
sbb
setbe
dec
pop
cmpsb
inc
rorb
or
push
mov
in
pop
es
jb
push
push
jp
cmc
sbb
insb
cld
dec
cmp
sbb
xchg
les
out
packssdw
dec
jo
into
mov
fs
dec
aaa
mov
sub
pop
add
adcb
xchg
xor
inc
in
jo
push
test
es
jg
xor
jecxz
push
mov
or
xchg
ljmp
ror
cs
in
jb
mov
fwait
jp
mov
movsl
mov
inc
jno
xchg
xchg
push
aaa
add
xchg
pop
pushf
sbb
test
jmp
jecxz
cltd
add
sub
divb
mov
xchg
jle
dec
mov
loop
mov
cltd
leave
out
movd
add
cwtl
pop
cmp
fsubs
pop
testl
negb
iret
adc
lods
mov
stc
paddq
adc
repnz
cs
fwait
rclb
stos
jne
stos
clc
das
jbe
loopne
das
cld
and
idiv
call
inc
jo
pop
insl
mov
popl
std
sbb
sbb
jbe
stos
loopne
mov
sbb
cmpsl
repnz
es
inc
push
orl
fpatan
inc
mov
rcll
movsb
inc
push
test
sbb
out
pop
xor
xchg
lods
fs
xorb
pop
lea
xor
mov
imul
ror
cmp
movl
xchg
cmp
loope
dec
sub
ror
mov
mov
or
test
dec
add
mov
out
cmp
push
mov
pop
in
jae
and
ret
nop
inc
jbe
mov
jge
icebp
and
pop
or
sub
push
loop
mov
add
xchg
push
jl
jno
fldcw
xorl
cs
jo
clc
aam
imul
pop
xor
xor
pop
pop
sub
and
movl
push
loope
js
or
push
popf
sbb
popf
rcrb
xchg
xchg
stos
in
and
xchg
test
xchg
shll
leave
inc
call
cld
mov
insl
fdivrs
sbb
lods
mov
cwtl
xchg
lret
jo
scas
sbb
mov
fists
or
mov
scas
mov
mov
scas
xor
xchg
shrb
pop
mov
push
xchg
fadd
into
sub
inc
jo
lods
pop
hlt
int3
ss
cmc
pop
jno
rclb
divl
nop
mov
dec
add
jb
shlb
mov
inc
xor
lock
daa
sbb
and
sub
xchg
or
inc
out
mov
jmp
jmp
and
lods
xchg
aaa
sbb
movsb
xchg
insl
psllw
pop
inc
xchg
bound
inc
or
ret
pop
js
pushf
and
push
cmp
mov
inc
mov
sbbb
fldcw
movsb
aas
lea
mov
dec
aaa
ja
sub
mov
push
and
es
add
movsl
scas
adc
jmp
add
jg
mov
cmpsb
adc
push
cmp
lret
mov
dec
add
xchg
add
jge
push
shrb
stos
repnz
or
out
push
xor
inc
lret
cmc
xchg
jae
ret
fwait
mov
xlat
xchg
inc
push
jae
lods
mov
and
adc
out
mov
xchg
hlt
mov
mov
hlt
pop
sub
push
in
divl
push
jmp
movl
mov
lret
push
jb
and
jl
push
mov
loope
xchg
popf
push
ret
and
fwait
lock
cmp
aas
scas
pop
push
in
adc
aam
pop
mov
inc
cltd
xor
out
das
pop
mov
push
repnz
adc
call
dec
in
les
jno
mov
jnp
rcrl
sti
and
icebp
mul
xlat
fnclex
lret
pop
adc
int
in
mov
push
add
mov
outsb
cli
sti
cmp
sub
outsb
and
mov
fsubrl
int3
cmp
aam
ret
mov
sti
loopne
enter
outsl
jns
aad
cmp
arpl
mov
imul
arpl
lock
ja
fisttpl
clc
clc
lock
add
xchg
adcb
sti
movsl
shrl
call
mov
lcall
pop
addl
movl
addr16
in
jae
sbb
int3
sub
loope
ror
roll
xchg
not
leave
xor
imulb
push
sub
das
push
imul
jo
cmc
mov
dec
mov
iret
shlb
ret
mov
out
mov
dec
push
call
pop
xchg
dec
jl
outsb
xor
fidivrl
jge
push
dec
jge
jg
pop
cmp
xchg
push
xchg
push
sub
push
xchg
cmpsb
pop
nop
lea
fildl
push
popa
cmp
lods
or
adcl
cltd
test
sbb
pop
push
pop
pop
and
sahf
adc
xchg
xlat
push
aas
and
cwtl
sub
outsb
push
cmpsb
int
pop
les
sahf
sti
lods
jmp
std
jns
movsb
rorl
fisubs
lods
outsl
out
sbb
ret
icebp
dec
or
mov
in
push
call
add
ss
call
mov
or
lock
cmp
mov
push
imul
imul
and
lock
mov
cmp
test
mov
xchg
movsb
push
pop
test
call
xchg
push
int3
xor
scas
pop
sbb
or
adc
lock
insb
flds
cld
cmp
add
cmc
pop
xchg
in
jge
icebp
mov
into
add
test
sub
push
out
push
iret
arpl
mov
inc
push
pop
leave
idivb
ljmp
pop
popa
mov
orb
dec
in
xor
cli
loopne
sahf
xor
lret
div
imul
rol
lock
pop
ljmp
cwtl
das
je
push
enter
mov
loope
icebp
mov
ja
ret
repz
movsl
test
sarb
cmp
sbb
adc
mov
pop
jns
jno
out
aam
into
or
aas
dec
loope
add
xlat
xor
lret
xchg
vcvtps2dq
xchg
stos
cmp
and
hlt
fsubrs
dec
add
dec
or
mov
cmp
sub
jge
fidivs
and
ret
push
mov
int3
xchg
push
or
push
inc
mov
mov
pop
filds
shrb
mov
cli
es
dec
inc
into
cwtl
out
bound
sbb
or
mov
push
clc
icebp
out
dec
adc
fisttpll
adc
leave
aaa
aad
std
ljmp
dec
cmpb
mov
add
in
loop
mov
pop
mov
leave
je
cs
cmp
mov
and
xor
mov
pop
enter
out
fnstsw
sti
mov
mov
movsl
out
mov
insl
jns
jecxz
add
mov
jmp
cmp
xchg
xor
xchg
adc
out
adc
cwtl
fwait
jae
out
cltd
xor
mov
lds
in
lcall
hlt
nop
scas
outsb
xchg
gs
and
mov
xorl
pop
insb
cltd
mov
psrlw
cltd
mov
out
jmp
outsb
or
mov
dec
inc
cmp
dec
add
push
mov
cld
inc
sub
repz
cmpb
mov
fisubs
fstpt
popa
shl
ds
jle
daa
add
js
shrl
out
sti
sbb
loope
sbb
cmp
popaw
test
jbe
inc
sbb
sti
push
mov
sub
cmp
sbbb
mov
jecxz
jno
int3
pop
inc
int3
cmp
lds
xchg
mov
dec
fisttpll
jmp
xor
in
movsl
pushf
pop
jp
push
gs
pop
lahf
dec
subb
pusha
movsl
add
push
nop
or
push
aaa
lods
movsl
inc
cmp
ret
out
mov
arpl
xchg
xor
test
xor
sub
aaa
xlat
pop
xor
es
adc
rclb
mov
xchg
adc
bnd
jns
inc
inc
or
pop
test
gs
popf
mov
dec
daa
mov
sahf
out
mov
mov
xor
mov
pop
mov
xor
mov
or
push
or
popa
sub
es
cmpsl
scas
mov
pop
and
jno
ficoml
scas
popa
xchg
lahf
push
ret
dec
sub
mov
push
daa
lea
xchg
cwtl
fs
fs
adc
sub
sub
cmp
cmp
adc
jge
or
or
test
pop
test
cmp
sub
dec
clc
sub
inc
push
fs
xchg
aaa
adc
adc
scas
xor
repz
pop
ljmp
pavgw
pop
sbb
push
out
xchg
ss
fcmovnu
xor
push
push
and
inc
sub
loopne
mov
pop
mov
mov
adc
inc
out
in
xchg
in
jmp
mov
cwtl
pop
xchg
mov
insb
mov
ljmp
lcall
cs
sbb
mov
mov
iret
mov
inc
lret
xchg
and
push
push
pop
inc
leave
arpl
aad
jg
mov
inc
jle
sbb
cmp
shlb
mov
rol
les
orb
vorps
dec
push
fwait
adc
mov
cmc
fldenv
sbb
xor
mov
and
imul
add
jns
mov
scas
cli
in
push
mov
sahf
lret
mov
arpl
out
dec
mov
shlb
sahf
and
movsb
pop
cwtl
sti
lcall
and
inc
dec
mov
mov
cli
sahf
fwait
into
xchg
mov
stos
dec
dec
mov
mov
adc
jno
mov
inc
pop
iret
push
ret
andb
jae
sbb
into
and
pop
sub
cld
rol
imul
or
xchg
lret
mov
lcall
xor
leave
xchg
decl
push
dec
sbb
test
xor
inc
cltd
fwait
lret
sbb
mov
outsb
xchg
pop
add
or
int3
mov
stc
cmpl
dec
jecxz
test
cmpsl
dec
fiaddl
vmread
lea
inc
das
push
es
enter
push
sub
fs
jae
testl
test
push
jmp
xchg
cmpsl
add
sbb
movsl
mov
loopne
add
stos
int3
subb
pop
and
jge
jo
mov
push
add
popa
dec
adc
cmp
cs
sbb
mov
mov
mov
ds
inc
mov
jg
add
out
cmp
je
xorl
ror
add
repnz
test
aam
cmp
ljmp
ja
ret
test
jnp
or
xchg
adc
xchg
pop
inc
movsl
push
fcompl
mov
sahf
cmp
in
out
xchg
push
xchg
dec
in
and
out
js
and
and
jne
pop
ret
mov
jecxz
insb
add
jae
test
mov
mov
or
mov
cs
jp
inc
std
lods
lret
rol
shll
adc
adc
mov
add
out
jmp
movsb
imul
int3
mov
sub
inc
inc
lock
jge
push
imul
adc
out
ret
enter
mov
fsubrl
xchg
xor
add
inc
cmp
std
inc
popf
mov
add
jns
rcrl
pushl
push
enter
fstpl
iret
outsb
push
mov
incb
inc
rclb
mov
das
scas
or
lods
push
addl
pop
pop
sahf
inc
fadds
xor
pusha
sbb
gs
mov
out
push
xor
int
rcrl
addr16
lahf
fidivl
jae
pop
rclb
sbb
std
rcl
out
test
pusha
xor
inc
out
rclb
dec
pop
mov
xchg
outsb
data16
dec
mov
dec
test
jmp
lock
scas
sub
popa
dec
xor
insl
xor
mov
fstpl
mov
mov
mov
mov
mov
or
pop
inc
movsb
mov
das
adc
mov
popa
push
mov
jae
fidivl
repnz
ljmp
fisttps
mov
shrb
sub
stos
jecxz
and
xchg
sub
movsb
mov
xchg
pushf
js
jmp
inc
sub
jg
or
mov
and
xchg
jo
mov
fdiv
adcb
decl
sbb
aaa
add
loop
sahf
or
stos
loop
mov
mov
fwait
jge
sub
adc
sbb
jge
aad
mov
xchg
lahf
aaa
leave
dec
jns
cmp
pop
push
mov
mov
aam
adc
jge
dec
cltd
mov
lock
ret
jb
stos
sub
dec
and
out
xor
add
mulb
test
jecxz
aas
dec
mov
dec
xor
dec
or
repz
cmp
ret
pushf
repz
outsb
or
js
sub
shrb
popa
xor
icebp
shr
or
cmp
and
pop
insl
fdivs
gs
ljmp
mov
jecxz
shrl
mov
sub
stos
add
inc
xor
je
and
add
subb
inc
and
dec
mov
pop
push
loope
aam
and
cmpsl
mov
cs
xchg
sbb
mov
leave
sarb
xchg
fcomps
out
pop
js
xor
mov
inc
int
ds
xor
jbe
cmpsl
fiadds
xchg
sbb
repz
xor
aaa
or
mov
and
lea
ret
outsb
inc
ja
stc
out
popa
ret
mov
sbb
shll
dec
xor
cs
aaa
jmp
je
lods
push
lea
ja
inc
dec
imul
movsb
jp
mov
push
in
adc
mov
cmp
iret
xchg
stos
lods
and
in
cmp
mov
stos
or
xchg
mov
sbb
scas
mov
popa
sbb
mov
inc
fdivrp
adc
mov
popa
xchg
out
imul
fnstsw
dec
jecxz
xchg
xor
stos
jmp
dec
pop
into
sahf
or
out
jo
clc
add
sub
in
mov
mov
aad
loopne
mov
jmp
cmp
xchg
and
cmp
cwtl
sub
shrl
pop
pop
cmc
push
cli
scas
xchg
scas
sbb
fldl
arpl
in
push
sub
lret
dec
hlt
lret
and
or
loope
and
xor
hlt
push
mov
inc
push
in
jecxz
rclb
adc
pop
or
fcoms
in
jns
mov
pop
repnz
jo
cmp
pop
xor
cmpsl
dec
jmp
lock
push
lcall
scas
sbb
dec
xor
pop
pop
ja
add
sbbb
jp
pushf
push
clc
rolb
sbb
cmp
mov
loop
loop
movb
push
push
je
xchg
in
or
sbb
adc
mov
icebp
stos
es
ljmp
outsb
and
mov
lcall
cmp
lret
repz
jns,pn
int
int
pop
sbb
into
inc
cmc
jnp
jl
xchg
add
cwtl
movsl
xor
lods
and
dec
mov
sbb
add
add
stos
xchg
sbb
xchg
mov
dec
pop
pop
icebp
sar
mov
dec
xchg
sahf
mov
outsl
ss
rcll
shrb
out
and
nop
and
mov
cld
sbb
jnp
loop
push
adc
daa
ds
in
in
ret
xor
js
or
gs
xor
dec
push
clc
cmp
ja
jno
jnp
inc
or
and
mov
not
sbb
stos
stos
pop
add
xchg
andl
bound
mov
dec
pushf
xlat
cwtl
pop
push
push
sbb
dec
popa
popa
negl
mov
outsb
into
push
xor
rcrb
out
mov
adc
dec
jecxz
xchg
mov
rol
popf
jecxz
push
sub
inc
mov
dec
xor
mov
imull
mov
add
and
pop
loopne
dec
sbb
fidivrs
jns
loop
clc
jle
mov
sub
inc
mov
mov
pusha
pop
jnp
test
out
test
add
xchg
pop
fimuls
cmpl
ret
add
jmp
jg
leave
jp
dec
adc
inc
adc
ret
out
stos
lret
arpl
sbb
ja
mov
fnstenv
xor
dec
or
pop
sbb
bound
add
cmpsl
lret
lcall
scas
inc
dec
mov
mov
jo
and
inc
jmp
test
fnstcw
push
push
dec
adc
sbb
into
sbb
int3
xor
and
fcompl
popa
loop
pusha
push
push
and
mov
stos
ret
pop
xchg
dec
and
mov
into
sub
lret
add
jmp
mov
std
add
pop
test
insl
cmpsl
mov
lods
fistpll
lock
stos
clc
out
data16
insb
jno
xor
add
out
idivb
insl
dec
mov
xchg
push
rcrl
sbb
sub
rolb
movsb
mov
mov
pop
or
xor
push
int3
mov
jbe
xchg
mov
push
jnp
into
out
inc
mov
xchg
adc
sti
jo
push
adc
inc
inc
enter
dec
sub
jp
mov
jle
bound
adc
push
orl
inc
adc
rclb
pop
cmp
sub
mov
mov
les
mov
pop
call
jg
iret
cmp
andb
pusha
sbb
lcall
mov
mov
cmpb
nop
xchg
and
adc
cmp
mov
jnp
shrl
adc
outsb
cs
mov
push
imul
imul
mov
cmp
cmp
into
push
cmp
mov
add
icebp
int
mov
mov
xor
jno
jle
rorl
das
shrl
pop
sub
jp
icebp
and
dec
mov
loope
adc
mov
push
fnstsw
push
mov
sub
xor
inc
push
fdivs
insb
fsub
lds
and
push
repnz
stos
xor
xor
push
add
push
xchg
pop
jno
mov
xchg
adc
push
xor
mov
inc
dec
pop
sub
mov
push
cmpsb
sbb
scas
pop
call
cmp
push
lock
mov
or
cmc
jmp
outsl
push
adcl
je
je
add
imul
pop
mov
mov
sahf
imul
aas
daa
stos
jg
jg
push
movsb
lds
cmp
das
and
sub
mov
popf
inc
call
xchg
pop
int3
cmpb
push
jp
and
int3
mov
or
mov
loop
lahf
leave
call
adc
mov
mov
xor
mov
mov
adc
cld
enter
addb
add
cli
xor
incb
scas
mov
cmc
ss
pushf
in
and
xchg
pop
cli
mov
xor
xchg
push
jl
movsl
mov
xlat
fnsave
and
mov
in
maskmovq
push
movsl
mov
inc
nop
mov
in
repz
stos
push
sti
sbb
icebp
mov
aas
push
xorb
push
mov
add
push
mov
xchg
lea
push
sahf
cmp
mov
add
lock
bound
repnz
push
lret
jecxz
iret
rclb
jnp
or
jns
loopne
in
push
dec
cs
stc
dec
je
ret
adc
insb
pop
adc
push
mov
rcl
pop
flds
xchg
jmp
data16
nop
movsl
inc
xor
icebp
and
out
mov
adc
js
ljmp
repz
outsb
icebp
cmpsl
cmovp
xor
push
xchg
lret
or
cmpl
xchg
gs
or
mov
lea
bound
stos
push
hlt
push
popa
pushf
cwtl
mov
ret
xchg
sub
mov
cmp
inc
add
in
lcall
bound
dec
add
daa
rcr
ret
fcmovnb
std
mov
pop
cmp
mov
jb
inc
nop
or
cmp
les
loopne
stos
sub
inc
loopne
mov
cmp
enter
adc
xchg
jle
popa
jecxz
lock
sbb
pop
clc
sbb
xchg
inc
mov
imul
push
ficomps
pushl
jecxz
int3
pop
test
cmc
push
ds
adc
test
or
lea
fbstp
mov
aad
lret
adc
sbb
insl
test
mov
aas
aaa
push
insl
push
rorl
stc
sbb
dec
dec
sahf
js
adc
push
mov
mov
push
dec
nop
adc
fistpl
xor
pushf
add
push
mov
adc
dec
and
outsb
outsl
adc
aaa
aaa
and
cmovge
mov
add
or
call
jne
mov
sub
shll
mov
xchg
jbe
mov
int3
fs
and
sbb
xor
ficoml
icebp
mov
push
mov
repnz
sar
jg
lcall
imul
enter
jo
imul
xorb
push
mov
arpl
repnz
ljmp
cmp
and
or
add
jp
aaa
out
push
xor
inc
xchg
fisubrl
xor
or
imul
lahf
out
pop
push
insb
movsb
or
mov
outsb
pop
or
insb
xor
das
fdivl
mov
mov
jg
mov
daa
push
pop
orb
test
adc
xor
in
pop
iret
insl
outsb
inc
stos
ljmp
xchg
divb
fmull
test
clc
mov
arpl
mov
lret
pop
les
sbb
bound
loopne
mov
jae
inc
mov
cmp
loop
int3
ficompl
push
aad
out
in
jecxz
lods
stos
push
or
call
push
or
int
sbb
test
add
mov
loop
sbb
inc
and
inc
xor
imul
inc
and
dec
ret
pop
jp
cmp
movl
or
push
jo
jno
mov
movsl
add
inc
das
jae
dec
and
roll
out
movsb
fcompl
mov
cmp
es
enter
push
fcmove
cs
rclb
and
inc
lods
xchg
xlat
mov
ret
shlb
sub
xchg
in
xchg
adc
sub
mov
mov
xchg
or
and
mov
icebp
inc
cmp
dec
lret
out
dec
dec
add
scas
out
js
jo
xor
test
jle
inc
data16
or
sbb
xchg
jle
in
xchg
sbb
cmp
loop
lret
in
andl
mov
inc
inc
xchg
cmp
pop
in
sbbb
xchg
or
cmp
add
mov
sbb
into
add
push
inc
push
adc
idivb
and
ds
push
xor
mov
rclb
and
xchg
ja
iret
loopne
adc
xor
cli
push
mov
dec
cs
pop
push
jnp
orl
outsl
cs
xor
sahf
loope
adc
mov
je
xor
sub
mov
out
int3
jo
adc
dec
lret
sub
psrlw
in
push
test
inc
xchg
pusha
cmp
rorl
push
addr16
cli
scas
jno
stos
pop
and
negb
sub
loope
xlat
inc
inc
int3
iret
ljmp
push
mov
hlt
out
out
or
or
mov
stc
dec
inc
gs
mov
mov
mov
imul
dec
lods
mov
gs
fdivl
inc
js
test
mov
hlt
or
fimull
stos
jg
inc
adc
adc
cltd
aas
inc
dec
pop
imul
and
cmc
stos
imul
xor
push
test
enter
dec
jno
scas
push
sub
add
adc
scas
mov
mov
mov
es
xor
cld
and
xor
lret
jae
jbe
mov
lock
adc
call
xor
sub
inc
mov
je
insb
mov
dec
rcll
sub
in
dec
and
mov
xchg
jp
loop
adc
sti
stc
pop
test
add
inc
test
mov
out
xchg
cmp
adc
mov
cmpsb
xor
scas
xor
mov
leave
push
push
dec
or
add
lds
mov
jmp
cmc
or
outsb
leave
fwait
pusha
les
jbe
and
sbb
dec
and
imull
push
mul
or
xor
movl
fimull
lret
sbb
adc
insl
int
and
into
pushf
dec
xor
lock
sub
cli
or
inc
movsl
add
and
in
and
inc
cmp
mov
add
popf
pop
cmp
movsb
int
sub
sbbb
push
or
andb
js
repz
or
fwait
stc
fidivrs
xchg
fists
cs
and
ss
movsb
mov
xchg
mov
cld
ss
inc
js
test
in
xchg
rorb
icebp
aas
nop
and
jbe
pushf
lea
lcall
jg
push
test
aas
orb
leave
xchg
push
jecxz
sahf
into
clc
mov
cmp
jb
pop
repz
sbb
repnz
xchg
cmp
aam
imul
sahf
stos
xchg
mov
xor
add
mov
or
mov
dec
xchg
mov
ljmp
fs
sbb
xchg
mov
jmp
and
lods
rol
jp
stos
jo
sub
cli
lods
fldenv
sbb
loopne
sub
add
repnz
push
into
call
cld
fstl
inc
call
in
xchg
adc
rolb
cmp
mov
addr16
xor
xchg
and
mov
shr
popf
xor
add
mov
inc
inc
jae
cmp
push
pop
inc
mov
test
pop
ljmp
dec
fdivrs
loop
pop
insb
jno
ljmp
cmp
or
push
add
add
shll
loop
cmc
xchg
imul
aas
fcmovne
mov
inc
adc
lret
loope
xchg
adc
pop
repz
dec
mov
jl
push
stos
and
jo
jmp
clc
and
scas
mov
scas
jo
int
push
in
push
inc
ds
push
xor
sbb
push
push
and
mov
jne
pushf
jg
sub
push
mov
sti
repz
xlat
xchg
testb
arpl
cmpsl
jno
mov
cmp
shrb
sbb
xchg
inc
hlt
std
or
hlt
jmp
in
inc
mov
lret
jne
shll
fmull
ret
cmp
mov
push
mov
mov
cwtl
cmp
xchg
pusha
or
mov
movsl
fsubr
insb
pop
dec
xor
daa
push
xor
insl
pushf
aaa
xchg
inc
mov
rcl
arpl
mov
add
mov
cli
lahf
movsl
cwtl
int3
mov
push
loope
int
and
fiaddl
ror
sub
fdivs
jae
mov
js
mov
test
xor
cld
loope
popf
push
sbb
lds
xor
out
je
test
cmpsl
cltd
lahf
lret
nop
sahf
and
out
push
jns
daa
data16
inc
arpl
push
sti
lcall
stc
adc
lds
pop
inc
xlat
sub
int3
adc
ds
in
cld
fmuls
fistps
jo
pop
sbb
repnz
out
sbb
inc
mov
popa
imul
nop
not
or
pop
test
xor
pusha
xor
inc
cld
dec
pop
je
push
shlb
dec
loop
in
cmc
xchg
nop
cltd
pop
call
data16
iret
imull
mov
fdiv
sbb
push
pop
popa
shrl
lods
inc
xchg
cmpsb
scas
cmp
call
lret
gs
call
ret
sub
int
cltd
cmp
shlb
sarb
ljmp
push
xchg
push
sbb
add
stc
sti
cwtl
dec
add
loopne
add
icebp
popa
iret
pop
hlt
cmpsl
sbb
xchg
xor
sti
xorl
stos
mov
dec
stos
stos
int
add
mov
push
fisubrl
or
dec
aad
jmp
mov
xchg
jbe
out
xchg
fdivs
dec
push
cltd
mov
jb
enter
mov
adc
stc
adc
cmp
adc
aaa
add
mov
push
mov
jnp
adc
popa
adc
cli
scas
push
push
sahf
fmuls
int3
fdiv
rolb
mov
loope
add
add
nop
ss
inc
mov
es
lahf
aas
mov
lahf
add
stc
gs
mov
dec
outsb
mov
roll
inc
add
hlt
xchg
xor
in
pop
push
cwtl
icebp
repnz
xor
scas
pop
xor
push
idiv
dec
inc
loop
loope
adc
lock
shrb
mov
punpckhwd
xchg
sbb
jge
fimull
cmpsl
les
mov
sub
imul
mov
cwtl
pop
jns
lds
ljmp
scas
mov
in
or
lcall
insb
fcmovnb
xchg
push
xorb
enter
xor
test
lods
cmpsb
mov
mov
stc
sti
pop
cmpsl
jmp
stos
pusha
inc
add
clc
rcl
jg
loopne
andl
loope
push
outsl
pop
ret
sub
icebp
fs
loopne
or
notl
sbb
lahf
and
push
ret
mov
sbb
xchg
cmp
hlt
pop
dec
orl
jae
dec
xor
dec
push
cmp
push
mov
inc
add
push
jne
bound
sbb
inc
adc
les
bound
test
imul
aas
pop
xor
insb
stc
jne
loopnew
sub
pop
fbld
out
adc
dec
mov
mov
lcall
xchg
inc
ficoms
and
xchg
xchg
fs
pop
push
mov
repz
push
cmp
test
sti
adc
in
sar
int3
cmp
sbbl
ss
or
push
dec
pop
leave
mov
and
dec
mov
adc
loopne
dec
fdecstp
mov
push
imul
dec
enter
push
mov
addr16
jno
jo
mov
icebp
pop
xor
xor
push
push
xchg
dec
test
xor
xchg
js
sub
dec
mov
insl
sub
sbb
xor
inc
inc
or
or
imul
fnstcw
out
ja
test
insl
insl
jbe
xor
iret
push
imul
addr16
push
jb
fwait
push
push
lcall
insl
and
fabs
cmp
nop
jbe
cmp
and
mov
xchg
sti
lock
cmp
imul
mov
iret
mov
lods
push
dec
arpl
or
push
movsb
test
mov
repz
dec
jmp
inc
sbb
mov
adc
out
out
pop
xor
push
lock
xchg
mov
lret
xchg
sbb
and
cmpsl
pusha
sub
repnz
jb
pop
dec
loop
jae
insb
dec
ret
cld
mov
ds
loopne
dec
es
jl
fsubrs
movsl
xchg
clc
cmp
push
inc
inc
push
mov
cwtl
negb
mov
out
xlat
or
shlb
jg
bswap
sahf
xlat
je
jnp
mov
addr16
jnp
fisubl
inc
and
mov
or
loop
popa
mov
and
int
push
push
or
jo
lret
in
movsl
nop
mov
sbbl
add
adc
cmp
popa
iret
jecxz
lods
push
dec
add
sbb
xchg
loop
sti
andl
inc
imul
int3
mov
fmuls
outsl
push
push
movsl
xor
push
cld
sbb
or
jbe
and
or
add
test
jmp
fisubrl
loope
cmp
jno
jne
xchg
jb
inc
xor
mov
inc
nop
mov
sbb
scas
ljmp
jg
lods
push
int
cld
sarl
push
jge
das
mov
jmp
in
xchg
mov
ds
daa
add
icebp
pop
sbb
mov
push
enter
pusha
dec
int3
sub
mov
mov
sub
dec
sbb
stc
mov
fstl
xchg
push
in
js
pusha
mov
scas
sub
fs
loop
jne
fmuls
push
xchg
sbb
gs
std
icebp
lods
jno
xlat
dec
clc
xchg
ss
mov
stos
xchg
scas
cs
xchg
lret
cmpsl
dec
mov
into
push
or
mov
shl
sahf
out
clc
das
fdivs
inc
rcrb
xor
sbb
test
pop
int3
mov
rcrl
xor
dec
jne
jge
cld
daa
into
jo
and
adc
or
inc
imul
jne
stos
ja
ror
pushf
push
aam
push
movl
pop
dec
pop
bound
js
and
enter
sub
js
and
maskmovq
idivl
ljmp
fdivp
add
pushf
add
mov
rcrl
mov
inc
mov
inc
cltd
push
mov
jg
push
push
and
movsb
std
test
fisubrl
cs
insl
cmp
jge
dec
inc
cmp
adc
xchg
js
xor
lret
push
cmp
mov
loop
adc
push
cmp
in
je
cmp
push
sar
outsb
mov
lods
inc
in
jns
clc
aaa
js
bound
xchg
in
les
xorl
jl
jno
mov
adc
test
xor
insl
aam
jge
mov
and
mov
push
push
fs
add
inc
aaa
dec
xchg
call
add
push
lds
mov
push
dec
pop
lret
popa
xor
aad
xchg
mov
dec
lods
xor
out
out
js
jp
jge
test
push
test
outsb
idivl
jle
or
mov
dec
xor
pop
mov
arpl
iret
ljmp
jg
inc
stos
andl
mov
or
jo
clc
std
pop
das
xchg
movups
sub
popf
iret
dec
xor
mov
divb
out
arpl
repnz
jns
int
adc
dec
and
inc
bound
aam
subl
sti
rcr
into
aas
mov
imulb
push
xor
and
fmul
sub
sbb
cmpsb
jg
rcl
outsb
cmpsl
xchg
hlt
test
adc
mov
inc
test
push
mov
push
dec
test
sub
in
sbb
in
adc
sub
mov
repnz
or
mov
mov
push
fs
lods
inc
pop
ret
jg
xor
pop
fs
iret
fsts
xor
repz
jmp
inc
scas
push
in
push
shrb
pop
pop
cmp
jnp
and
ficoml
ljmp
ret
test
add
mov
into
mov
aas
arpl
lods
lods
mov
andb
xor
add
jnp
bound
mov
inc
das
ja
mov
fs
hlt
xor
dec
stos
cmpsb
xor
cmp
in
sbb
aas
rorb
setge
push
dec
jnp
add
sub
pushf
jns
shl
rcrl
addl
fcmovnb
xchg
jns
or
gs
sbb
out
in
mov
adc
roll
adc
and
dec
add
jns
call
movsl
pop
mov
loopne
rclb
popa
sub
sub
into
push
dec
ds
mov
cmp
ror
fsubr
sub
mov
jo
aaa
cmp
fs
and
mov
push
into
int
pop
iret
in
fnsave
mov
loop
es
cmp
add
adc
lods
cmp
jne
es
inc
repz
pushf
jnp
xchg
mov
nop
rolb
jmp
jns
dec
stc
mov
cmp
adc
lcall
xor
sahf
xor
or
scas
pop
jb
or
iret
ljmp
fcmovnu
pop
jns
mov
xor
push
out
es
adc
sub
push
icebp
push
mov
stos
jb
shr
cmp
shll
jo
cmp
push
sbb
or
icebp
js
cmp
in
pop
or
xor
sbb
mov
inc
adc
mov
popf
mov
mov
icebp
mov
jo
lcall
push
aad
mov
push
mov
xchg
mov
fsubr
mov
inc
stos
cmc
inc
push
data16
shll
jl
cmpsl
test
jmp
push
lretw
push
push
push
push
pop
lods
jp
rclb
out
call
test
pop
das
pushf
dec
out
mov
ret
es
cmp
aas
test
fadds
jns
rcrb
lock
push
fdivrs
in
mov
int3
xchg
in
mov
stos
lods
cltd
mov
jb
leave
pop
sub
aas
decb
stos
adc
call
mov
adc
psubd
imulb
push
iret
cmpsb
cmp
cmp
out
jl
xor
dec
test
sbb
pop
and
repz
rep
xor
leave
lret
sti
mov
repnz
imul
imul
dec
push
mov
pop
shlb
push
cmp
enter
out
mov
lret
mov
xor
pop
sub
cwtl
push
popa
sbb
sub
scas
or
jne
pop
divb
xchg
push
pop
add
or
out
out
pop
sti
lahf
sarl
inc
lret
mov
out
cmpsl
cwtl
imul
test
jnp
lds
andl
sub
push
jbe
and
flds
add
inc
fisubrl
adc
in
mov
or
xor
xor
sahf
mov
popa
cmpsl
iret
hlt
inc
mov
shll
in
add
adc
sub
lods
pusha
loope
addb
out
arpl
push
push
jle
scas
inc
loopne
sarb
lds
jecxz
add
test
lahf
ret
int3
cmp
pop
fucomp
imul
popf
cmc
inc
xchg
adc
cmp
mov
mov
inc
shlb
mov
inc
inc
inc
xchg
mov
mov
cli
cmpb
mov
mov
mov
inc
stc
mov
ljmp
xor
enter
push
mov
shll
icebp
mov
push
push
repnz
sub
int
cli
and
popf
add
adc
pop
push
fmul
cld
pop
iret
mov
inc
adc
sbb
inc
mov
push
pop
or
adc
inc
ss
outsb
aam
or
jo
sub
jl
xor
add
mov
mov
rorl
or
enter
sub
mov
xchg
and
scas
out
loop
jne
sarb
aas
fidivrs
dec
pop
adc
bound
sub
ret
xchg
pop
dec
mov
xor
xchg
lea
fstpt
and
ret
xor
push
shl
popf
push
loopne
sub
xor
lret
mov
jns
hlt
add
adc
iret
scas
xor
int
dec
popf
sbb
xorl
imulb
dec
add
push
adc
cs
add
sbb
cmp
jg
dec
js
pop
test
xor
pop
xor
bound
xor
sahf
fbstp
jae
push
jp
adc
aaa
xchg
es
sub
adcb
jno
popf
adc
fadds
mov
add
mov
add
sbb
push
inc
mov
lea
adc
mov
xchg
aad
and
loopne
ret
aaa
aad
jnp
loopne
sahf
ljmp
xchg
aas
ss
js
jge
inc
sub
rol
mov
out
cld
jecxz
pop
fdivl
mov
xor
sti
sub
adc
loopne
cmp
or
lds
sahf
out
mov
inc
pusha
sub
lret
jnp
hlt
mov
test
repnz
adc
shl
addl
mov
mov
js
sub
cmpsb
es
xchg
test
mov
popf
dec
cwtl
movsl
sbb
jmp
jg
add
add
xchg
cmp
jecxz
adc
pop
cmp
pop
cmc
mov
dec
cltd
stos
add
add
xor
mov
inc
xchg
decl
scas
xchg
icebp
adc
sub
das
nop
in
adc
outsl
js
xor
pop
and
adc
cmp
jnp
pop
fidivs
fldenv
add
add
ss
mull
mov
sbb
inc
push
pop
adc
dec
push
mov
mov
lods
adc
sbb
mov
into
lret
data16
and
outsb
out
insb
mov
cltd
loope
andl
cmp
push
scas
loop
add
sbb
out
jmp
and
cmp
inc
cli
and
mov
jl
jo
fisttps
xor
adc
inc
and
je
dec
adc
adc
test
xor
push
outsl
sbb
jno
aad
xlat
xchg
pushf
push
aad
pushf
pop
les
push
pusha
in
int
scas
std
lds
adc
inc
cmp
insb
pop
insb
push
hlt
test
inc
mov
push
mov
sub
adc
xchg
pop
dec
fistps
push
gs
out
mov
popa
xchg
iret
mov
adc
mov
sbb
lods
pop
pop
inc
sarl
lret
xor
in
iret
insb
pop
xchg
and
pop
mov
call
daa
rolb
shll
int
mov
addr16
mov
inc
loopne
jg
pop
mov
fldl
outsl
jnp
shrl
mov
int
cmp
clc
lods
loope
push
das
lods
or
push
lret
jle
adc
je
scas
or
test
inc
leave
enter
je
inc
sarl
rcll
popf
sub
xchg
sub
pusha
lock
add
bound
and
fimull
divb
sbb
dec
test
scas
int
rcrl
jb
addb
mov
sub
mov
imul
jmp
sti
push
insb
ss
mov
mov
xchg
adcl
aad
lahf
pop
aaa
cmp
fistps
jae
push
adc
loop
pushf
and
movsl
lahf
out
cmpsb
adc
xchg
pop
sbbb
sub
aam
or
xchg
add
and
mov
pop
push
mov
iret
sub
xlat
call
icebp
sub
and
shlb
pop
push
stos
xor
xor
cld
or
add
and
mov
push
adc
xor
and
push
pop
mov
adc
dec
aad
push
pop
es
roll
jle
loopne
sbb
inc
push
sbb
pop
rcl
mov
add
inc
push
mov
shll
jae
cmp
push
idivb
sbb
fldcw
push
inc
std
in
jnp
scas
iret
lds
mov
mov
mov
dec
gs
out
ss
fmuls
fcompl
loopne
cmp
fdiv
out
aam
cmp
shrl
pop
stos
inc
lds
ret
sbb
lds
inc
add
mov
imul
pop
adc
push
mov
and
cmp
mov
lock
or
movsl
ss
mov
push
ja
aad
shr
dec
test
lods
ficomps
repnz
pusha
push
mov
mov
and
shll
xchg
dec
xorl
fwait
sbb
cmpsl
push
mov
sahf
mov
cmp
sarl
mov
push
sbb
sahf
stos
sub
iret
jnp
cltd
mov
mov
lea
in
xor
jp
sub
cmp
popf
ds
jnp
mov
mov
mov
cmp
pop
xchg
mov
jo
cltd
enter
out
add
or
stos
mov
add
daa
xor
xchg
and
cltd
lcall
or
lret
mov
cltd
push
iret
add
call
out
rolb
or
jle
bound
ss
inc
cltd
jp
dec
xchg
mov
push
jae
sub
mov
cmp
xor
push
xchg
fwait
adc
adc
stos
cmp
pop
push
mov
addl
lret
ffree
inc
shr
insl
mov
pop
jbe
mov
pop
mov
xchg
mov
das
and
mov
jnp
jbe
call
cmpsl
pop
xor
in
push
pop
jge
dec
push
movb
jne
mov
push
into
cmc
iret
or
mov
pop
mov
jbe
jns
leave
in
arpl
mov
dec
int3
scas
mov
in
pop
xchg
ds
push
sbb
je
pop
out
xchg
push
sbb
jne
pop
pop
out
inc
mov
dec
push
aam
push
push
mov
jnp
es
cmc
sub
nop
jae
in
inc
and
cmp
shrl
jmp
pop
cmp
pop
stos
push
data16
push
cld
xor
nop
dec
mov
push
call
pop
mov
sub
es
lea
in
addr16
js
or
fcmovne
mov
roll
push
jle
xor
in
mov
push
ret
cmp
scas
mov
add
or
mov
pushf
cmp
insl
jne
into
inc
xchg
outsb
cmp
cld
jge
or
inc
sub
js
out
push
pop
mov
in
dec
mov
xchg
jl
push
sbb
fildll
dec
lea
imul
and
ljmp
inc
dec
ljmp
popa
cmc
shll
xor
mov
aaa
lret
xchg
mov
insl
cmpsl
out
test
fisttpll
xchg
jbe
popa
enter
loop
jg
das
mov
xor
fstpt
in
leave
pusha
jmp
push
in
mov
aad
repnz
mov
inc
sub
repz
sub
cwtl
cli
dec
mov
dec
sbb
bound
push
xor
loop
add
pop
xchg
popf
mov
icebp
call
xchg
mov
cld
popa
ljmp
adc
les
xorl
xchg
repz
mov
cmc
mov
push
lock
sbb
sub
aam
mov
ret
adcl
pop
pop
xorb
out
mov
push
out
cmpsl
pop
pushf
dec
mov
int
rcr
mov
pop
in
ficoml
lahf
in
insl
int3
arpl
out
sbb
clc
sbb
je
mov
dec
pop
inc
sahf
fsubr
mov
adc
cmc
jmp
jp
ret
ds
mov
pop
out
inc
repz
call
aaa
mov
cmp
pop
jle
mov
inc
repz
pusha
push
xor
cli
in
xor
and
into
or
mov
mov
enter
mov
fmull
pop
xchg
xor
nop
sbb
push
inc
out
inc
and
ds
test
inc
mov
outsb
jmp
sub
js
repnz
cwtl
xchg
insl
cmpsb
ja
dec
fld
mov
jp,pn
les
add
and
fs
cmpb
mov
jg
push
and
or
sub
and
inc
pop
mov
sub
adc
test
int3
sub
and
iret
fimull
and
push
xchg
inc
or
outsb
out
or
test
sbb
bound
loopne
push
sahf
loop
popf
ficoml
enter
sahf
or
fildl
divb
adc
push
dec
or
insl
sbb
sub
mov
or
mov
jge
mov
xorl
ss
xchg
dec
jp
mov
xchg
dec
clc
out
insl
repz
fcomps
insl
mov
inc
mov
or
adc
sub
mov
cmovne
shlb
inc
ror
xchg
push
lods
dec
stos
fsubrp
ds
and
into
sbb
inc
es
pop
dec
sub
ret
inc
roll
push
loope
std
aam
insb
outsl
or
mov
and
sbb
xchg
loope
daa
jb
ffree
aas
bound
scas
adc
xchg
and
mov
mov
fucomi
test
sub
es
xchg
sbb
addr16
adc
dec
jb
push
pop
cwtl
mov
sar
mov
push
xlat
add
or
or
aas
xchg
stos
xorb
dec
cs
cwtl
rorl
xor
lods
dec
movsl
je
sbb
sub
negb
xchg
sub
inc
syscall
cli
movl
push
decb
adc
xchg
cmpsl
sub
das
sbb
test
ret
or
les
das
popa
enter
loop
mov
fmuls
arpl
mov
popa
ret
cli
int3
mov
push
sbb
fs
xchg
mov
shl
iret
getsec
cmp
out
mul
dec
push
jg
xchg
mov
loopne
into
lret
mov
bound
xchg
xor
mov
and
dec
dec
and
push
adcl
test
in
mov
mov
xorl
pop
or
movsl
lods
fstpt
mov
mov
pushf
jg
adc
idiv
mov
into
mov
or
outsl
push
popa
outsl
xchg
loope
sbbb
dec
xor
push
adc
test
dec
rclb
loopne
pop
bound
std
or
inc
cwtl
add
add
mov
insl
jno
imul
inc
pop
repz
push
sbb
cltd
lods
enter
stc
leave
jmp
insb
outsl
movsb
sbb
out
pop
fwait
mov
jmp
fisttpll
shl
xor
cmp
sub
mov
pop
imul
lret
outsb
push
fsubrl
inc
add
fisttpll
aam
xor
push
jns
and
cltd
dec
data16
fldl
cli
push
ss
jo
mov
pop
adc
sbb
fnstcw
mov
push
mov
data16
out
gs
fcmovne
mov
cmpl
iret
and
jg
aas
repz
rcll
sub
mov
in
movb
enter
inc
das
ret
sub
sub
je
mov
cmp
movsl
lret
repz
mov
repnz
pop
sbb
jp
xor
out
divl
and
mov
in
daa
or
test
adc
fwait
scas
inc
inc
mov
add
mov
push
nop
insb
cli
pop
inc
dec
outsl
cwtl
fwait
lret
push
push
push
jg
mov
cmp
add
mov
adc
jp
cmpsb
or
es
rcl
stos
cmc
or
jge
dec
sub
xchg
pop
test
bound
cmp
cmp
insb
pop
bound
lahf
xchg
xchg
xchg
outsl
ljmp
bound
lahf
push
mov
xchg
sub
pop
ljmp
mov
outsl
pop
test
mov
sub
mov
lahf
daa
icebp
mov
out
mov
and
add
insl
fsubrp
dec
mov
les
pop
aas
mov
mov
adc
dec
ficoml
jnp
jne
popa
lds
sub
leave
or
shlb
sbb
xlat
test
and
mov
add
or
lret
sub
popf
fnsave
pop
call
and
scas
ljmp
in
int3
pop
cmp
mov
clc
lret
cs
xor
jle
rclb
and
jae
in
sarb
dec
inc
sbb
mov
loopne
dec
inc
loope
into
xchg
lea
adc
cmp
iret
inc
dec
out
daa
dec
jge
rcrb
mov
loopne
arpl
pushf
pop
sahf
repnz
mov
mov
mov
outsb
mov
push
sbb
and
imul
shlb
sub
fistpll
or
jl
out
scas
imul
fsub
pop
adc
fadds
pop
xchg
cmp
fwait
push
das
out
cmp
mov
filds
lret
sub
scas
pop
sahf
repnz
xor
aad
or
xchg
cmpsl
inc
pusha
jns
sbb
addb
fmul
jmp
dec
inc
mov
dec
push
pop
fcmovnu
scas
mov
cmpsb
cmp
push
push
into
leave
daa
jns
push
mov
je
stos
enter
mov
imul
fstp
js
cmpsb
xlat
out
push
mov
dec
jl
pop
sti
add
adc
fwait
in
dec
mov
dec
out
fisttpl
push
xchg
inc
sbb
and
sbb
cwtl
or
mov
and
fidivrl
dec
add
dec
sbb
sahf
icebp
insl
into
into
xor
mov
addr16
push
popf
fcoms
pushf
test
sbb
push
fcomip
lock
inc
sti
ficompl
xor
nop
hlt
fucomip
push
sahf
inc
push
rep
jbe
cld
push
aad
in
adc
and
loop
insl
push
mov
repz
outsl
inc
outsl
cmp
pop
das
fmul
sti
imul
mov
xor
outsb
add
or
je
push
js
push
mov
aad
cmp
sti
mov
mov
mov
lods
lcall
inc
cmp
insl
pop
mov
mov
lret
jae
leave
pop
cli
jo
mov
push
sub
xchg
xchg
dec
jno
mov
xor
xchg
in
out
add
loop
mov
push
sbb
frstor
popa
iret
push
pop
bound
mov
sub
dec
cmp
mov
iret
fcomps
push
mov
cmpsb
fsubp
sub
imul
fs
push
ljmp
decl
lahf
addr16
cs
sub
jae
insl
adc
aas
jle
push
out
sub
add
movsl
scas
xlat
xchg
shlb
cmpb
dec
push
xchg
testl
adc
and
loop
cmpsl
ljmp
hlt
jp
je
in
mov
loope
or
loopne
xor
push
jbe
clc
inc
mov
sub
and
lods
add
in
adc
pop
dec
and
push
filds
icebp
and
das
and
pop
xchg
sub
ret
daa
xchg
pusha
push
test
adc
pop
cltd
mov
lret
mov
hlt
adc
mov
push
lahf
mov
xchg
xor
mov
dec
outsl
lds
test
mov
push
js
push
aaa
iret
pop
push
inc
shll
pop
loope
and
xchg
cs
push
inc
ror
pop
cmp
or
xor
sbb
jl
ds
inc
out
inc
jl
pushf
sahf
or
adc
mov
insl
adc
cmp
jge
rcrb
dec
dec
int
mov
sub
sbb
lods
lea
imul
mov
fsub
orl
mov
jno
popa
xorb
mov
div
jnp
sub
in
and
push
pop
and
mov
pop
js
loop
push
jl
inc
push
xchg
lret
xchg
mov
stos
inc
dec
aad
xchg
ds
mov
test
ss
inc
inc
repnz
test
jge
jae
push
push
jo
xchg
scas
mov
push
and
mov
mov
fiadds
xor
imul
pop
rcrb
add
mov
stos
aam
popa
pop
daa
mov
sbb
leave
push
jle
lret
cli
repz
and
xchg
cmp
mov
push
call
loope
ret
dec
sarb
lods
movsb
xchg
loope
mov
mov
in
stc
popa
repz
and
movsb
es
or
xor
jge
mov
mov
pop
adc
dec
jecxz
xchg
imul
popl
pop
pop
xor
and
cmp
lcall
jecxz
test
call
adc
xchg
enter
inc
cmp
pop
fcmovbe
ret
lods
sub
add
cmp
stos
xor
cmp
mov
push
add
gs
inc
jb
mov
fisubrs
xor
cli
cmp
out
fisubrs
adc
jae
mov
pop
push
outsl
push
fcomp
outsl
jb
pushf
and
mov
test
pop
shrl
dec
dec
push
repnz
pop
pop
es
sub
sbb
xor
or
jle
sbb
add
push
mov
and
jg
xor
leave
add
or
ret
push
xor
or
shll
inc
xor
shr
pop
xchg
dec
cmp
fdiv
rorb
cmp
adc
in
dec
cmc
adc
adc
jp
aas
call
movntps
or
mov
adc
inc
fs
ljmp
mov
in
mov
int3
subb
in
add
and
mov
in
mov
rclb
sahf
mov
mov
fimuls
mov
fadds
lcall
cld
lods
mov
rol
pop
adc
test
inc
pop
test
mov
inc
push
faddl
and
pushl
cmp
mov
jecxz
mov
push
jmp
jns
mov
cmpsl
adc
fnstcw
lahf
mov
lods
test
outsb
sbb
sbb
fs
xor
xchg
daa
popa
mov
or
aaa
jae
data16
pushf
sub
ret
xchg
fwait
ja
je
iret
icebp
mov
lret
and
adc
loop
mov
inc
addl
ja
sbb
fsubrl
xchg
push
push
mov
pop
mov
mov
fucomi
and
mov
jg
imul
test
mov
lcall
rol
jmp
mov
lods
je
mov
mov
jno
imul
bound
and
xor
fnstcw
dec
jmp
out
or
inc
sahf
in
push
movsl
mov
inc
daa
popf
and
mov
mov
daa
iret
add
mov
xchg
nop
adc
out
bound
lods
inc
push
add
inc
insb
ret
je
dec
loop
jno
inc
imul
mov
icebp
pop
dec
push
in
mov
cmp
shr
fmuls
pop
pop
xchg
mov
fists
cmp
fucom
sti
pop
push
push
pop
lahf
cmp
lret
push
mov
xor
sbb
add
xor
fidivs
nop
pushf
iret
jmp
jmp
xchg
cmp
or
push
xchg
xchg
es
sahf
ss
insb
out
shrl
lods
cmp
mov
xchg
xor
ds
repz
or
movsl
lods
mov
scas
mov
and
mov
push
and
pop
repnz
hlt
popa
sub
cmp
pop
xor
inc
stc
push
ljmp
dec
dec
je
mov
outsb
jo
cmp
stos
and
adc
stos
js
ret
mov
std
sbb
stos
xchg
adc
push
cld
or
cmp
out
and
daa
pop
imul
dec
add
dec
push
lods
ja
icebp
or
sbb
or
in
daa
mov
sbb
and
jb
movups
adc
sbb
dec
fdivs
xchg
lret
add
jge
imul
or
out
js
out
mov
rorb
pop
inc
inc
dec
test
pop
pusha
scas
enter
add
xor
pop
mov
repz
movsb
repnz
and
push
ficoms
push
push
jge
jne
or
cmpsl
das
movsl
mov
and
das
sarl
dec
lcallw
pusha
in
jo
insb
jns
xchg
sub
or
pop
lods
mov
fiadds
xchg
sahf
mov
out
loop
or
xchg
or
cmp
jae,pt
inc
stos
add
lahf
iret
push
jge
pop
test
xchg
mov
inc
sahf
lock
push
aam
repz
pop
mov
mov
lock
and
xchg
popl
test
lea
pop
sbb
push
xor
push
mov
inc
fs
jg
or
fisttpl
mov
adc
negl
out
lds
and
dec
xor
add
pop
cmpsb
cmc
in
cli
cmpsb
mov
jecxz
loopne
out
push
subb
testb
cli
mov
and
lock
jp
daa
stos
inc
imul
jae
rcr
cmp
mov
inc
xchg
add
and
lods
in
mov
aaa
repz
push
adc
push
and
ja
repnz
mov
inc
or
ret
ret
test
sar
ja
xor
mov
mov
movsl
aad
pop
out
in
js
outsb
jl
push
je
sub
sahf
lahf
dec
loop
bound
and
int
pop
lret
cmp
dec
dec
das
hlt
mov
orl
add
mov
data16
dec
cltd
adc
test
pop
int
js
pop
ficoml
jg
cmpsb
or
nop
je
mov
insl
adc
mov
mov
insl
add
insl
push
cli
out
cmpsl
jnp
cltd
inc
fiadds
sub
push
data16
lret
push
aad
stos
jae
lret
fs
sbb
cmpsl
daa
call
ss
cmp
mov
push
fincstp
out
inc
push
pop
pop
xchg
sbb
mov
push
imul
sbb
inc
je
es
xor
pop
cs
xor
and
and
mov
xchg
pop
cmp
jp
push
xor
or
sbbl
adc
std
xchg
jg
in
push
sarb
xor
fmull
add
dec
cli
xchg
pop
or
andb
dec
push
cmp
repnz
jae
hlt
lods
out
sbb
stc
xlat
scas
shll
dec
pop
inc
in
and
insl
jmp
jge
pop
cli
dec
sarl
inc
les
lahf
mov
mov
jne
push
or
jg
or
cmpb
add
cmp
jo
dec
int
cmp
and
add
push
jo
mov
inc
xor
repz
int
mov
fcmovnbe
or
mov
shll
push
nop
fcmovnb
inc
jmp
jl
ja
mov
or
ljmp
imul
jge
popf
movsb
mov
mov
push
dec
imul
add
cmpsb
enter
xchg
arpl
add
cld
lock
sti
sbb
sbb
shl
or
mov
jle
push
mov
out
popa
fists
dec
inc
je
fildll
aad
pop
stos
bound
mov
mov
cmc
lds
notl
dec
xor
lods
fldt
push
jmp
pop
add
insl
inc
push
mov
je,pt
pop
xor
push
add
les
unpckhps
pop
test
andb
mov
or
sub
lret
aam
sar
lds
adc
mov
jecxz
orl
iret
xor
pop
vcvtdq2ps
push
pop
sbb
sbb
out
out
aaa
sbb
sbb
pop
std
imul
mov
imul
movsl
jecxz
sbb
xchg
and
mov
xor
inc
sub
push
cmp
rep
inc
popa
scas
xchg
gs
pop
insl
dec
nop
mov
push
movsl
movsl
adc
test
push
pop
lds
jb
subb
movsb
pop
jge
or
sub
sub
jle
pop
mov
inc
pop
gs
fldl
xchg
push
mov
push
dec
adc
sub
and
pop
mov
test
sub
notl
or
cmpsl
xchg
mov
ret
pusha
je
mov
test
popf
shlb
xor
push
and
cmpsb
out
sbb
aad
mov
or
xchg
pop
frstor
inc
js
mov
int3
imul
in
mov
movsb
or
je
xchg
repnz
pop
in
daa
jmp
mov
xlat
mov
push
imul
cwtl
loope
lea
and
mov
push
inc
dec
movsl
mov
test
sub
or
mov
lcall
mov
incb
testl
pop
sbb
lcall
mov
inc
lea
sbb
xor
adc
xchg
sbb
dec
xchg
sarb
pop
mov
ficomps
out
rcll
xchg
or
pop
insb
inc
inc
mov
movsb
jb
cmp
push
sbb
je
xchg
mov
enter
ss
enter
stos
aaa
mov
mov
push
lods
daa
shrl
mov
inc
stos
jmp
xchg
adc
mov
lock
les
dec
push
dec
hlt
xor
insl
movsl
and
ret
aaa
sbb
add
cmovb
addr16
push
push
inc
or
movsb
cltd
mov
fistpl
add
add
cmp
insl
dec
dec
jb
mov
aas
mov
loopne
mov
push
add
xor
ljmp
data16
sub
jle
pop
int3
ss
out
or
xor
flds
jno
lods
mov
inc
jb
insl
sti
cmp
inc
subb
cltd
in
cld
jae
sbb
pop
ss
xchg
jl
cmp
iret
xorl
cmp
cmpsl
add
mov
add
ja
out
sub
pop
stos
cmp
xor
inc
push
je
into
xchg
adc
lahf
inc
fimuls
sbb
and
dec
sub
out
inc
lea
sub
cld
xor
jmp
imul
jbe
lret
into
std
gs
mov
or
ljmp
xor
ret
imul
nop
inc
popl
adc
pop
mov
add
ja
addr16
xorl
movsl
sub
in
ss
jecxz
fldenv
and
cmp
push
or
mov
cmp
xchg
sbb
or
pop
push
jg
jns
add
pop
fimuls
stos
popa
push
add
cmp
fisttpl
pcmpgtb
fcoms
jp
rcr
and
shll
mov
jmp
jns
decb
ret
jge
xchg
mov
pushf
out
iret
sub
cmp
xor
add
xchg
imul
push
sarb
and
shll
push
push
cwtl
popf
mov
lahf
add
jae
loopne
fidivrl
sbb
mov
int3
clc
xor
popa
add
and
gs
fistpl
out
pusha
cwtl
faddl
cmp
enter
loopne
fs
push
and
nop
add
fs
jae
enter
cmp
xorb
mov
xchg
mov
add
sarl
xchg
fidivrs
iret
xor
xor
sbb
xor
inc
shlb
loopne
lds
adc
out
add
in
add
lret
shll
or
cltd
notb
adc
lds
xor
mov
lahf
add
xor
jne
xchg
cmc
jle
push
mov
mov
sbb
xchg
jnp
fld
aam
dec
imul
lret
mov
mov
cmp
lea
xchg
bound
addr16
adc
mov
fistpll
push
pop
lods
pop
mov
addr16
pop
out
scas
push
xor
and
in
and
roll
push
and
xor
sub
daa
jmp
aam
and
std
mov
push
push
stc
adc
popa
dec
stc
sbb
mov
mov
and
dec
ja
fisubrl
outsl
clc
neg
into
lock
jmp
sarl
add
repnz
push
cmp
shrb
jge
mov
cltd
adc
mov
dec
xor
ja
popa
mov
add
subps
and
addr16
in
outsl
clc
insl
lahf
pop
ljmp
pop
mov
bound
out
or
jecxz
hlt
mulb
jns
shl
cmp
or
ljmp
or
pop
ljmp
es
bsr
insl
dec
scas
cwtl
icebp
pop
mov
test
xorl
add
push
sub
rorl
call
cli
inc
lcall
sbb
andl
shr
mov
subl
push
pop
cmc
or
dec
pop
mov
fwait
out
nop
and
pop
dec
mov
xlat
pmaxub
dec
add
stc
dec
subb
pop
sub
pushf
pop
rcrl
inc
push
jbe
push
mov
sub
les
push
jae
jae
sub
int3
xor
sub
xor
mov
shlb
icebp
es
xor
mov
xor
add
or
sub
aaa
sti
mov
adc
and
shlb
leave
test
outsb
dec
sub
iret
out
push
mov
inc
frstor
gs
ret
adc
xchg
cwtl
in
jp
stc
test
aaa
nop
insl
adc
adc
in
sub
push
imul
hlt
cmp
xor
push
mov
cld
and
pop
nop
or
adc
jmp
mov
pop
ret
daa
pop
xlat
mov
test
jl
cmp
xchg
inc
jecxz
js
cmpsb
push
cs
xor
jae
or
test
sbb
cs
ja
imull
adc
jae
xorl
dec
scas
insb
out
das
pop
loop
push
scas
sbb
jge
jp
outsb
inc
enter
rclb
sub
gs
pop
or
xchg
lds
mov
cli
push
in
jl
fisttps
push
outsl
mov
jnp
das
shll
aaa
pop
mov
jo
dec
xchg
mov
int
adc
jne
test
aam
inc
mov
dec
or
mov
xchg
fwait
adc
jbe
scas
mov
xor
xor
xor
aaa
cmpsl
xchg
mov
cmpsb
cmpsl
addb
mov
dec
hlt
into
adc
cmp
inc
int
pusha
inc
xor
mov
sbb
dec
mov
outsb
cmc
pop
cmp
push
jnp
insl
popf
fs
lock
outsl
nop
push
sub
test
ret
dec
cs
mov
or
inc
fsubrs
insb
or
inc
sbb
icebp
adc
mov
jmp
pop
add
mov
pop
sarl
adc
xchg
je
push
push
rol
cli
sbb
pop
ljmp
lock
jmp
and
push
adc
shrb
stos
xchg
ret
aad
mov
mov
sbb
sub
imul
shl
jmp
dec
mov
adc
ljmp
into
scas
pushw
push
cld
cmp
add
out
pop
dec
mov
cli
sarl
jmp
and
stos
pop
cmp
sahf
xchg
bound
xlat
out
mov
lret
inc
inc
cmp
call
push
mov
jne
mov
push
mov
jbe
adc
sti
cs
pop
xchg
lods
push
and
sbb
int3
jb
pop
je
in
jp
ss
cli
jb
ffree
cmpsl
pop
jne
mov
xor
scas
sbb
imul
cmpsb
jmp
mov
inc
mov
add
pop
std
aam
shrl
int
int
inc
push
mov
and
stos
or
mov
push
xchg
imul
jmp
dec
mov
in
push
cmp
jmp
pop
daa
in
xchg
pop
pop
push
loop
cmp
mov
or
pop
cmp
sub
push
addb
pushf
pop
push
xchg
out
dec
daa
dec
cltd
sub
fistpl
dec
xchg
pop
in
cltd
mov
leave
cmp
test
shll
sbb
or
ret
xchg
sub
in
xor
scas
dec
add
xchg
dec
js
mov
mov
iret
mov
fisttpl
cmp
sub
or
enter
inc
xor
fldl
pop
insl
jp
adc
add
mov
pop
call
adc
dec
inc
xor
ret
orb
fwait
sbb
mov
repz
sbb
mov
fwait
pop
out
into
and
or
push
push
add
mov
bswap
pop
jb
mov
fnstsw
dec
dec
in
loopne
xor
fistpl
out
dec
pop
mov
push
aad
inc
mov
xor
mov
sbb
dec
and
or
pop
lds
push
sbb
fiaddl
mov
popa
andl
sti
mov
stc
sub
dec
in
sub
push
push
mov
sub
ja
fwait
jmp
popa
mov
pop
push
imul
shlb
fsubp
mov
dec
in
iret
sub
xor
pop
into
test
repnz
lods
sub
enter
inc
addr16
insl
push
and
out
mov
popf
cmp
add
dec
cmpsb
mov
movsb
inc
pop
lods
movsl
inc
scas
js
and
xor
ror
sub
xchg
test
adc
scas
sub
roll
das
add
mov
mov
push
into
push
fwait
dec
lret
test
adc
lea
call
leave
push
xchg
cmpsb
in
xchg
aam
call
sub
int
int3
outsl
cmpsb
sbb
mov
cli
ljmp
ljmp
test
fbld
pop
add
mov
gs
and
std
lock
ss
cs
cmp
xchg
or
out
rcll
es
pop
pop
mov
daa
fcompl
xchg
shrb
es
adcb
mov
push
dec
xor
xchg
dec
mov
mov
or
adc
ret
sub
mov
and
push
clts
cmc
aad
inc
mov
fmull
jl
jge
out
xchg
sti
mov
notl
push
fnstsw
lods
pop
dec
xor
shrl
shrb
xchg
or
inc
fildl
inc
jecxz
sub
out
sbb
sub
sbb
cmp
lcall
mov
jo
add
repz
cld
fcmovu
mov
xor
push
jmp
addr16
mov
aad
push
test
sbb
sahf
js
pop
lret
mov
lds
movsl
mov
pop
xorl
aas
popa
into
mov
rcll
inc
cmpsl
lods
xchg
insb
sbb
mov
es
sbb
xchg
jb
movsl
ja
mov
pushf
or
les
push
jo
and
fbld
sahf
mov
dec
pusha
inc
std
xchg
fdivp
js
sbb
repz
out
push
dec
sub
inc
popf
push
lcall
scas
sub
mov
fistpl
cmp
inc
or
stc
pop
sub
les
ret
lret
pop
sbb
loop
pop
adc
pusha
fs
out
das
dec
lahf
xor
ljmp
int3
das
pop
cmp
movsb
jmp
xor
test
nop
adc
lock
xor
xlat
mov
xchg
xlat
xchg
out
movsb
mov
mov
mov
scas
push
and
and
movb
shll
adc
test
dec
mov
mov
enter
sub
in
pop
mov
es
ret
enter
and
nop
shlb
or
enter
xchg
cli
adc
xor
lret
rcr
push
mov
psubd
push
push
outsb
and
mov
adc
or
outsb
xor
add
bswap
out
push
jnp
dec
and
outsb
jns
arpl
mov
push
inc
pop
enter
repz
add
data16
xchg
loope
and
aas
subl
or
mov
pushf
add
or
adcb
es
xor
jecxz
xchg
xor
and
mov
das
fstl
and
stc
cmc
adc
mov
ds
movl
xchg
pop
jbe
nop
lods
call
cwtl
mov
mov
ret
sbb
into
and
out
inc
loopne
or
mov
fdivl
fistl
fimull
sarl
push
rorl
jns
shr
lods
or
out
dec
adc
sbb
xor
pop
jmp
mov
add
pop
mov
dec
adc
in
ret
or
lret
inc
arpl
add
xchg
mov
dec
fdivrl
nop
sub
adc
fdivrs
lods
repz
imul
jl
imul
xor
and
sbb
push
aam
push
imull
mov
adc
es
ljmp
lods
lret
clc
ret
mov
jle
sub
sub
xchg
sub
or
and
shrl
fidivrl
lock
and
sbb
cmc
push
out
jl
pop
stos
jecxz
cltd
xchg
or
or
sbbl
mov
out
mov
ljmp
cmp
xor
and
and
fistl
push
addl
aam
pop
xchg
imul
or
outsl
cs
in
loopne
movhps
sub
and
push
repz
jno
adc
jg
push
push
in
inc
shrb
rclb
daa
ret
iret
sbb
lahf
inc
jne
inc
cmpsl
inc
scas
sti
or
dec
xchg
mov
dec
scas
mov
xor
sbb
jle
jecxz
addr16
sub
bound
rcl
add
popa
push
and
fsubrs
push
add
adc
lcall
js
icebp
cwtl
fstl
adc
shrl
lods
dec
into
xor
mov
push
test
jle
lsl
jbe
lret
out
dec
std
ss
push
movsl
ja
cmpsl
negl
push
xor
std
adc
cmp
movsb
test
das
bound
fidivl
subb
pushf
stc
mov
mov
pop
or
xor
mov
xchg
or
mov
loope
cli
mov
clc
movsl
mov
push
leave
nop
mov
bound
repnz
pop
fisubs
pushl
imul
push
aam
or
out
push
out
add
push
xchg
and
pop
jge
mov
fists
outsl
add
sub
inc
push
pop
mov
in
pusha
mov
sti
clc
sbb
mov
fmull
and
icebp
cmc
mov
fdivrl
aam
pusha
mov
sbb
and
sbb
xchg
jbe
mov
in
cltd
push
xchg
cmpsb
lahf
inc
mov
popa
dec
inc
pop
mov
push
jp
testb
insl
adc
or
insb
fistl
outsl
movsl
inc
je
mov
icebp
out
pop
or
pop
dec
pushf
aaa
sbb
test
push
mov
hlt
sub
test
mov
jne
or
clc
mov
xchg
jp
aad
jmp
adc
sub
fsubrs
aam
mov
mov
pop
mov
inc
push
push
stos
shrl
jo
lock
and
addl
add
or
lods
ljmp
loop
adc
scas
stos
lea
cs
push
push
ds
add
adc
push
xor
push
lea
xchg
mov
sub
wrmsr
jp
inc
stc
or
jle,pn
dec
sub
xchg
pop
adc
in
mov
scas
adc
mov
mov
sbb
add
sahf
insl
inc
xor
mov
cld
or
inc
nop
test
loop
jo
push
arpl
popf
lods
fmuls
jnp
cmp
movsb
mov
sub
jmp
ds
or
jne
sub
add
imull
sti
mov
ficoml
loope
inc
popf
repz
movsb
sbb
imul
sbb
cmp
xchg
fildll
xlat
mov
adc
xchg
xchg
or
test
sub
arpl
cmp
and
cld
push
pop
sbb
sub
jns
test
cmc
mov
or
xor
cmpsb
push
dec
das
adc
test
mov
call
or
sbbb
or
jmp
push
pop
dec
jl
shll
mov
inc
test
pop
sbb
testb
lods
outsb
testl
out
mov
stc
lahf
pop
mov
xor
adc
stos
nop
std
xchg
pop
movsl
xor
or
repz
fbstp
sub
mov
clc
mov
negl
cmpsb
dec
insb
inc
pop
in
sti
fcmovne
sub
xchg
push
xor
adc
scas
cmp
lock
push
and
daa
shr
adc
repnz
add
inc
mov
rorl
js
push
jbe
scas
xor
mov
arpl
and
shlb
repz
loopne
pop
roll
and
xor
xor
add
sub
in
add
xor
cmp
sbb
xchg
imul
stc
jg
lahf
ja
sarb
mov
sbbl
xor
cmp
aad
xchg
add
or
adc
hlt
or
insb
mov
push
les
jns
stc
arpl
leave
add
inc
jb
cmp
test
test
out
ja
fidivrs
add
xor
adc
lahf
imul
xor
fadds
cmp
insl
lcall
loop
dec
cmpsb
in
adc
push
mov
insb
or
outsl
mov
xchg
jne
adc
icebp
in
inc
repnz
mov
adc
cltd
and
adc
or
out
cmpsb
movsl
mov
xchg
mov
jle
mov
stos
aad
mov
jle
mov
or
test
insl
sahf
ds
xor
dec
jg
stos
mov
movl
mov
xchg
mov
mov
lea
mov
jb
in
fmuls
push
mov
sbbl
std
cmp
fwait
dec
adc
pusha
mov
pop
mov
mov
testl
sub
roll
mov
bnd
dec
jl
shl
mov
ret
into
enter
dec
fisttps
jecxz,pn
pop
or
mul
outsb
test
clc
push
sub
cmpsl
rcl
in
ljmp
inc
test
push
test
mov
pop
sarl
sahf
xorl
in
mov
clc
mov
arpl
in
push
mov
hlt
lods
imul
int3
push
mov
int
fdivs
pop
add
mov
xchg
out
jbe
inc
sahf
push
sbb
xchg
jl
or
push
popf
addr16
jg
hlt
add
pop
mov
fsubrp
dec
test
dec
mov
inc
xchg
mov
aaa
xchg
sbb
ktestw
scas
xor
addr16
in
mov
stos
mov
and
fidivl
and
repz
add
pushf
or
xchg
dec
out
rcl
icebp
mov
xchg
lea
or
xor
mov
sbb
mov
mov
mov
pop
in
les
jl
cmp
add
mov
add
xor
cltd
push
leave
js
and
push
jno
sbb
add
out
adc
dec
inc
pop
popl
cmp
add
push
xor
lret
jo
add
sahf
cltd
adc
testb
xchg
nop
int3
pop
xchg
fstpt
ds
cmpsl
fwait
aaa
push
jbe
sbb
pop
and
mov
lds
lcall
sbb
mov
push
int
hlt
or
and
lods
mov
cmp
int
rcr
stos
pop
lcall
ret
cmpsl
sub
mov
jbe
pop
nop
aad
mov
add
push
xchg
bound
ja
fists
inc
in
inc
cwtl
addr16
mov
sahf
cmpsl
dec
icebp
dec
out
ss
lahf
and
dec
call
and
mov
into
xor
shlb
lcall
pop
xor
testb
cli
stc
cwtl
adcl
inc
lock
int3
sub
ret
add
mov
push
les
repnz
clc
andb
push
fidivrs
decb
fisubl
dec
adc
cmp
xchg
daa
mov
stos
push
xchg
fisubs
andb
inc
pushf
mov
das
cmp
sbb
test
add
dec
leave
or
gs
sub
mov
test
mov
sbb
push
or
js
pop
mov
dec
fnstsw
sub
add
and
cli
fstp
xor
les
dec
mov
iret
sub
cli
sbb
mov
sub
incb
in
mov
mov
jbe,pt
push
add
xchg
mov
mov
out
cmp
inc
insl
mov
movsl
mov
imul
aas
push
andl
aaa
dec
jg
push
jae
mov
adc
fnstenv
mov
dec
shlb
sti
decb
jle
mov
test
jecxz
mov
push
stos
dec
cmp
hlt
inc
scas
xchg
jecxz
xchg
xchg
dec
scas
jmp
ljmp
call
or
push
mov
adc
movsl
xchg
das
sub
rorb
sub
test
inc
pop
imul
int3
push
fistl
sub
sbb
ss
imul
gs
cli
mov
jg
jae
jge
fildll
jb
daa
adc
xchg
jbe
sbbb
or
sbb
jge
hlt
ret
pop
jae
cmp
and
orb
xor
xchg
daa
fiaddl
gs
dec
sub
push
out
and
pop
push
inc
inc
push
mov
mov
sbb
js
cli
out
shrl
push
stc
js
in
mov
outsb
xchg
int
mov
cmpsl
sbb
add
test
ljmp
push
test
lock
mov
jl
xor
in
cmp
mov
les
loop
cmp
and
test
xor
adc
push
dec
inc
pop
int
add
lret
pop
sarb
test
enter
sub
sub
ja
out
sbb
movsb
jo
and
sub
pop
cmp
push
out
sahf
jae
dec
xchg
fdivp
pop
loopne
mov
mov
pop
daa
aaa
sti
ds
rcl
adc
push
xchg
mov
jne,pt
push
mov
push
cmp
fisttps
adc
lret
add
mov
inc
pop
loopne
cmp
dec
pop
mov
push
out
push
xorb
popa
inc
or
mov
inc
fbstp
sbb
popf
cmp
in
push
inc
fwait
movsl
pop
icebp
cltd
iret
pusha
add
mov
jno
jl
int3
dec
add
mov
dec
int
insl
in
and
push
and
xchg
vpcmpgtd
imul
xchg
add
xor
call
sbb
lret
std
xchg
scas
outsb
call
or
push
sub
jmp
jmp
fsubp
mov
loop
cld
sub
cmp
nop
daa
or
push
insb
dec
repnz
pop
pop
in
mov
lea
mov
push
sub
loope
cmp
adc
adc
sarb
ja
out
jg
repnz
xchg
int3
or
daa
cmpsl
push
aad
lds
pop
and
aas
ljmp
subl
sub
push
loop
bound
pop
es
jmp
icebp
push
test
imulb
xchg
call
mov
adc
push
ret
sbb
test
adc
sbb
inc
iret
jbe
push
dec
sub
jns
push
cli
xor
mov
adc
xchg
cmp
je
mov
aaa
push
ficompl
lcall
addr16
jmp
idivb
jb
mov
jnp
and
scas
jae
dec
inc
mov
imul
and
or
pop
xchg
ljmp
jne
stc
or
xor
sbb
dec
and
sub
mov
mov
push
add
or
xchg
jns
pop
out
mov
push
inc
or
cld
out
sub
mov
popf
sub
inc
adc
aas
mov
push
push
and
test
mov
mov
in
int3
cmp
das
out
jle
add
decb
iret
nop
mov
xchg
fdivrs
fidivl
dec
jl
jle
rcl
mov
xor
mov
mov
mov
mov
push
rcll
stos
adc
cs
fs
mov
int
push
test
jns
pusha
test
fnstenv
push
out
sbb
loopne
out
es
xchg
pop
mov
std
aad
xor
dec
push
ja
xchg
shlb
cmpsl
scas
push
inc
or
jle
pop
aas
xor
and
sbb
push
sub
stc
out
push
loop
daa
bound
rolb
sbb
dec
mov
cmp
pop
std
jge
jmp
cs
sarl
lahf
fldenv
cli
mov
mov
and
cld
jp
lahf
ljmp
rcll
mov
sub
insl
jo
push
cli
mov
cltd
cmc
outsl
mov
jecxz
aam
cltd
sti
or
loope
test
push
clc
lods
cmp
xor
jg
pushf
out
loop
add
aaa
and
sbb
pushf
das
cmc
aad
xchg
test
js
lret
ffree
jbe
pop
mov
inc
sbb
lcall
enter
icebp
push
ja
dec
xor
cmp
add
jae
jne
out
sub
movsb
dec
jns
lock
test
xchg
lods
shlb
push
in
or
enter
and
aam
xchg
sbb
add
das
cmp
insb
std
pop
je
jmp
pop
shlb
pop
dec
daa
mov
add
test
dec
pop
pop
fldt
add
int
daa
pushf
dec
mov
in
ret
xlat
and
bound
ret
int3
sub
cwtl
out
lret
rcrl
inc
xlat
out
lds
dec
and
movsb
mov
pop
fildll
test
stc
ss
xor
ljmp
pop
adc
jmp
jb
jnp
xchg
push
xor
pop
cmp
inc
in
pop
fidivrl
sbb
add
sub
pusha
mov
push
cmp
sti
inc
push
inc
movsl
iret
lcall
add
icebp
dec
and
xlat
add
out
rorb
cmpsl
popa
or
mov
mov
mov
std
out
or
xchg
cmp
int3
or
int
xorl
mov
dec
out
or
ret
pop
mov
cmpsb
jae
jnp
fcmove
jp
xchg
rol
lcall
pop
mov
les
ja
lcall
insb
mov
in
xchg
fdivrs
jns
addl
movsl
imul
xchg
jecxz
stos
out
mov
push
push
jge
mov
add
xor
test
call
jl
fbld
lock
cwtl
jbe
jo
add
cs
mov
sbb
xchg
inc
fs
fldenv
dec
mov
mov
call
sahf
push
mov
xchg
pushf
xchg
jb
or
scas
movsl
cmp
and
shll
jno
mov
jle
lahf
jbe
add
cmp
fidivl
notl
divl
dec
sti
loop
sub
not
inc
test
test
xchg
adc
xchg
fildl
movsl
sbb
jmp
mov
push
xor
arpl
pop
and
mov
in
adc
aaa
push
roll
daa
mov
les
dec
mov
stos
adc
jns
xchg
shlb
in
xchg
aad
lahf
sub
mov
int
dec
adc
cmpb
add
adc
xchg
stos
push
imul
mov
and
xchg
test
pop
mov
mov
cmp
pop
mov
add
jb
mov
push
push
in
mov
jmp
testb
xchg
cmp
xchg
ret
add
mov
loopne
sbb
int3
fadds
and
cmp
aam
aad
scas
rclb
stc
je
popa
cmp
sub
decl
jns
add
jbe
loopne
lret
fwait
div
cli
out
fidivs
sub
mov
hlt
hlt
js
insl
inc
push
inc
mov
mov
test
in
imul
outsl
test
int
jo
mov
iret
xchg
pop
cmp
push
push
pop
js
and
pop
lcall
and
xor
xchg
mov
push
xlat
in
add
push
scas
and
cmpsb
sbb
sbb
mov
shll
jnp
std
int
ss
or
arpl
inc
sbb
mov
adc
xor
stos
lahf
fs
push
inc
leave
out
xchg
data16
into
jg
push
jle
sub
es
sub
into
inc
pop
cs
aad
gs
sub
jecxz
in
cwtl
icebp
test
adc
fisttpl
dec
out
inc
cmp
bound
dec
pop
stc
jecxz
pop
outsl
insb
jmp
sti
shll
arpl
js
inc
and
cltd
jmp
scas
fidivl
out
icebp
cmp
mov
ss
std
sub
xchg
sub
lods
movsl
stos
ret
cmp
adc
push
mov
cmp
test
fcomps
inc
std
insb
enter
pop
dec
inc
jb
rclb
jg
mov
pop
pop
dec
push
int
imul
mov
mov
add
loopne
and
adc
cmp
shlb
jnp
sahf
jg
pop
cmp
test
outsl
jp
out
mov
daa
push
add
jmp
xor
and
cmpsb
lods
shll
rcr
stos
rcll
aad
mov
xchg
mov
dec
jle
pop
or
add
pop
sbb
push
and
or
mov
fs
xchg
jge
sahf
minps
add
negb
mov
fildl
in
jbe
imull
out
repz
int
mov
sbb
sub
int3
push
sarb
int3
shll
xor
test
gs
mov
mov
mov
mov
inc
push
sahf
cwtl
out
subb
divl
pop
pop
pop
adcl
std
push
push
outsb
sbb
sbbl
jo
xchg
mov
push
inc
out
mov
cs
sub
push
scas
mov
adc
xor
and
adc
mov
std
cmp
pop
push
xchg
sub
dec
rcl
dec
cmp
xorl
cmpsb
movsb
test
scas
or
and
fstpt
sub
inc
inc
cmpsb
pop
cmpsl
xchg
orb
or
int3
std
insb
daa
rolb
xlat
fdivl
adc
imul
rclb
in
dec
sub
mov
dec
sub
mov
dec
pop
daa
das
inc
push
cmp
xchg
sbb
sbb
stos
les
je
jmp
loop
fmull
xor
cli
xor
xor
or
bound
ud2
mov
mov
inc
daa
xchg
daa
jns
shlb
inc
mov
xor
jl
fadds
sbb
add
mov
or
xorb
roll
insb
out
push
aaa
add
xor
je
cmp
test
add
xchg
outsl
mov
fcmovnbe
xchg
sub
xchg
sub
pop
stos
mov
or
mov
xor
sbb
mov
inc
dec
outsb
pop
fimuls
push
bound
lcall
insl
pushf
ret
popf
jb
lahf
orb
loop
inc
mov
or
and
clc
mov
push
mov
testl
cmpb
test
sahf
pop
mov
outsb
jno
xchg
sti
pop
xchg
push
loope
aam
xor
lods
push
jl
or
xchg
dec
stos
and
ret
jnp
xchg
adc
test
lds
dec
roll
xchg
mov
push
loope
lock
push
pop
cmc
dec
loope
add
test
sub
mov
xchg
call
aas
mov
jae
orb
cmpsb
outsl
stos
ror
xchg
aas
push
mov
push
mov
mov
insl
enter
imul
mov
pop
adc
pop
jle
push
mov
mov
or
xchg
and
aas
in
mov
cmp
ja
sahf
int
in
cmp
jl
aas
mov
xlat
jb
sbb
ds
dec
movsl
jg
mov
adc
push
or
loopne
stos
jmp
int
add
push
in
stos
and
inc
repz
mov
in
mov
imul
sbb
jg
inc
cmp
sub
mov
push
sbb
incl
or
ja
nop
pop
or
fldl
jle
mov
cmp
popf
lds
push
imul
fs
mov
xchg
dec
mov
adc
bound
pop
lea
iret
aaa
xor
stos
adc
push
inc
push
cmp
add
cli
je
jecxz
sbb
jns
out
mov
mov
push
jno
in
adc
clc
sbb
repz
je
cmpsb
push
or
sbb
nop
xchg
icebp
xor
dec
in
xor
loop
push
gs
pushf
adc
jo
push
fmulp
std
into
ds
daa
sbb
mov
les
inc
cmp
nop
inc
push
adc
jns
sahf
hlt
fimull
cmpsl
adc
sahf
cmp
jg
jne
fistpl
sbb
ret
xchg
cld
xor
xchg
in
push
xor
sub
lods
jge
in
nop
mov
xor
inc
jno
mov
ljmp
jne
xchg
int
mov
adc
hlt
loopne
pop
and
push
mov
lock
xchg
popa
and
sahf
nop
and
mov
adc
fwait
jnp
adc
xor
outsl
inc
addr16
daa
push
push
xor
cmp
add
aas
add
std
loop
je
xlat
pop
rclb
jmp
mov
jbe
pop
adc
into
bound
jae
fwait
lret
add
cmc
pushl
aam
fdivrp
in
mov
mov
add
mov
jg
sub
pop
pop
out
loope
imul
xor
fildl
sti
rcr
adc
lea
fisttpl
pop
adc
mov
mov
cld
mov
mov
outsl
pushl
mov
test
stos
aas
push
out
jg
addr16
sbb
mov
sbb
shlb
cmp
gs
fsubrs
xor
xchg
sbb
int
leave
push
imul
fisubrs
cmp
push
or
loopne
loope
mov
pop
cmp
cmp
pusha
arpl
xchg
cmpsb
lock
in
icebp
dec
pop
rorl
hlt
test
xchg
sbb
mov
or
fnsave
pushf
adc
adcl
mov
and
insb
popf
mov
ficomps
je
xchg
mov
xlat
inc
lds
rolb
cmp
movsl
loope
xchg
in
into
inc
mov
or
sbb
loop
xchg
push
bound
loop
rol
inc
call
nop
outsb
sti
cmpsb
and
xor
cmp
imul
push
out
inc
loope
int3
sbb
mov
outsl
mov
les
call
mov
jle
mov
or
push
pop
pop
xor
ds
mov
ss
aam
and
mov
xchg
in
out
ds
aad
cld
mov
fldcw
mov
mov
lea
push
sahf
ljmp
movl
xor
sbb
rorb
arpl
scas
inc
cmp
push
loope
clc
in
fiadds
rcl
cmc
mov
jmp
mov
dec
jp
mov
push
add
add
xchg
adc
in
in
dec
jp
jb
cltd
or
push
out
or
add
shlb
mov
mov
mov
mov
iret
hlt
dec
sub
lea
lret
fwait
cmp
inc
mov
mov
shrb
popf
es
and
sub
push
ret
repz
jae
jns
fdivrs
xchg
xor
adc
repnz
aas
or
nop
sub
mov
adc
xor
pop
xlat
jae
add
jg
dec
jp
fstps
fs
push
and
aas
adc
sub
push
pop
rcrb
pusha
lea
cmp
cwtl
rorb
pushf
pop
jb
shll
popa
mov
test
cmp
insb
clc
push
mov
loope
call
cmp
dec
or
adc
scas
xor
and
lds
ljmpw
xchg
cmpsl
and
or
cmp
test
sbb
scas
xchg
cmc
call
fsubrs
outsb
add
loope
lods
fmull
jge
aad
stos
cmp
cmp
and
rorb
fildl
ror
sbb
jae
pusha
test
xchg
xchg
rol
push
movsl
sarb
loopne
lret
pop
arpl
ret
sbb
jp
and
mov
loope
inc
cmp
dec
ja
mov
lods
fsubs
aam
jle
clc
nop
mov
mov
inc
inc
pop
add
testl
sbb
in
pop
inc
inc
cmp
incb
xlat
sbb
scas
xor
push
aaa
pop
jno
sbb
lock
fmuls
ret
mov
std
cmpsl
cmp
es
cld
sar
push
leave
leave
sub
icebp
xchg
andl
aas
add
cmpsl
push
scas
add
adc
and
in
jb
imul
pop
imul
or
int3
dec
cwtl
mov
push
xor
mov
and
mov
pushf
std
cmp
imull
mov
xor
lds
push
dec
lret
adc
fcoms
lret
lock
out
lods
dec
ja
mov
sub
pop
pusha
pop
sar
jbe
pop
js
rcr
std
enter
mov
dec
fists
aas
in
mov
wbinvd
mov
pop
adc
mov
dec
cmp
inc
stos
cmp
sbb
or
sub
add
lock
jo
rcll
push
jns
jb
orl
stos
mov
and
es
lea
cs
mov
lods
je
nop
push
cld
jge
push
and
jbe
jmp
pop
inc
mov
scas
dec
fsubr
repz
mov
das
jle
jae
enter
adc
fnstenv
decl
inc
sbb
or
and
sub
cwtl
arpl
sbb
pop
xchg
lods
and
and
mov
iret
ljmp
dec
or
pop
enter
insb
inc
inc
mov
aas
add
daa
and
mov
lret
insl
xchg
jge
adc
dec
iret
cmpsl
mov
inc
popa
mov
pop
push
push
push
xor
fisubrl
clc
movsb
scas
lret
test
aas
and
jb
loopne
ret
inc
dec
faddl
or
mov
mov
scas
mov
fbld
hlt
lea
mov
icebp
mov
gs
lods
push
xlat
test
jp
imul
sub
inc
sub
pop
pop
in
test
adc
add
add
cwtl
or
test
cs
dec
dec
mov
pop
stos
faddl
lcall
add
add
jmp
ds
mov
enter
dec
sbb
xor
cld
push
push
jecxz
push
xor
inc
addr16
xor
daa
leave
in
add
mov
mov
mov
call
mull
pop
js
cmpl
cs
push
mov
flds
std
sbb
inc
add
xor
js
mov
push
dec
ss
pop
test
pop
jg
idivb
cli
xchg
test
pop
sub
and
mov
loop
decb
xchg
popf
testl
lods
push
inc
xchg
nop
xor
fstps
jmp
mov
icebp
adc
adc
gs
sbb
xor
sahf
mov
or
pop
or
rol
inc
inc
xor
pop
mov
sahf
ljmp
arpl
jg
jmp
in
mov
bound
jnp
mov
mov
lret
loopne
imul
fisttps
adc
and
inc
cld
push
jmp
xchg
subl
rorb
adc
dec
call
mov
mov
dec
je
rcr
mov
mov
fwait
stos
into
ret
mov
adc
cmpb
cli
mov
out
xchg
push
pop
lahf
mov
mov
lea
and
es
xchg
int3
xchg
rcll
xchg
mov
in
test
push
push
adc
xor
pop
ds
push
std
lret
xor
cwtl
add
mov
mov
call
and
mov
lcall
xor
pop
pushf
mov
jmp
add
xor
leave
and
inc
dec
sahf
fbld
pop
lock
dec
sub
sti
rorl
in
xor
sbb
push
sbb
jbe
lock
mov
in
mov
iret
sbb
iret
push
cmp
enter
fucomp
div
cmpsl
addl
add
lods
xchg
and
cmc
adc
mov
lahf
aas
mov
orb
leave
lcall
mov
sar
dec
daa
mov
mov
cmp
mov
adc
int
sub
ss
xor
out
aam
xlat
mov
loop
jecxz
mov
pop
iret
jns
adc
sub
xor
lret
clc
mov
repnz
or
cmp
pop
pop
gs
mov
iret
pop
movsl
inc
push
icebp
pop
or
mov
loopne
push
rcrl
mov
pop
in
iret
cmp
pop
clc
mov
cltd
mov
dec
and
dec
insb
dec
xchg
jb
inc
fadd
add
and
xchg
popa
mov
movsl
insl
pop
cli
mov
mov
icebp
jb
sub
popa
push
leave
mov
xchg
cwtl
mov
xchg
push
lcall
aad
mov
das
sarb
sub
shl
inc
xor
sbb
loope
je
push
mov
repz
mov
stos
mov
dec
inc
add
inc
sti
mov
out
xor
lods
xlat
sbb
sbb
cwtl
mov
push
lret
lock
push
rcl
in
jle
sahf
push
mov
sub
testl
stos
ficoms
ret
lcall
jo
xchg
push
sub
or
add
test
insb
into
and
out
and
ds
fistps
xlat
cmp
jg
sub
jns
test
vmovhps
test
hlt
push
dec
mov
insl
or
jmp
jecxz
arpl
sti
movsl
dec
js
inc
lods
cmp
mov
xchg
push
mov
dec
mov
scas
mov
sub
adc
lahf
sub
push
inc
shl
xor
xor
into
push
pop
jo
and
insb
dec
ljmp
xor
test
in
xchg
js
cmpsb
and
mov
push
add
mov
pop
xchg
ljmp
cmp
push
sub
aaa
imul
sarl
adc
fdivs
mov
cmp
sbb
xchg
enter
pop
jecxz
mov
cltd
mov
aam
inc
push
cmp
testb
jmp
xchg
lcall
adc
jg
out
lret
shl
add
and
scas
xchg
xor
mov
jl
and
xor
add
lods
sbb
adc
dec
sbb
and
dec
fildl
adc
inc
mov
aam
xchg
in
fs
icebp
sub
cmpsb
or
xchg
icebp
or
in
dec
inc
inc
das
dec
es
lods
dec
mov
sub
lahf
int
push
add
mov
xchg
jne
push
ja
sbb
loope
adc
and
sub
das
dec
sub
cmc
adcl
cmp
push
fisubs
cmp
sbb
testb
jge
ja
mov
aas
xchg
pop
xor
cmp
jle
sti
jno
cltd
xchg
add
bound
iret
stos
push
push
rclb
and
adc
hlt
shl
cld
adc
lods
mov
nop
fnsave
jns
sub
shl
ljmp
mov
xor
cmp
pop
popf
push
or
jae
rcll
mov
sbb
jge
xchg
pop
mov
stos
or
mov
mov
test
stos
hlt
rcll
pop
enter
mov
icebp
outsl
cmp
add
sbbl
loope
or
ljmp
mov
dec
add
push
or
rcrl
add
inc
xchg
pusha
lahf
push
jae
arpl
ja
mov
jmp
cmpsb
xor
ss
cmp
mov
and
nop
sub
mov
adc
fistpll
cmpsb
sbb
mov
dec
mov
into
push
sub
ficompl
or
adc
add
cmp
mov
adcb
popa
cmc
inc
out
mov
sbb
and
xchg
adc
xor
cmp
push
pop
mov
sub
jo
je
ljmp
ret
push
in
push
jbe
je
push
movsb
sub
mov
outsb
ds
push
sbb
mov
xor
hlt
jns
popf
mov
nop
int3
imul
daa
outsl
jbe
and
lcall
adc
and
dec
mov
les
mov
sbb
stos
sub
mov
xchg
es
pushf
pop
in
pop
test
ror
push
testl
loopne
std
dec
and
out
xor
cmpsb
fwait
sbb
jle
sbb
sub
jmp
mov
int
xchg
cld
lret
cltd
xlat
nop
inc
fs
fs
adc
mov
pop
push
lret
adc
dec
push
sbb
lret
adc
lock
fnstenv
push
mov
aad
push
mov
out
pusha
scas
lret
notl
dec
and
test
test
enter
inc
jecxz
or
and
jmp
pusha
xlat
push
fcmovnbe
inc
xchg
xchg
cld
mov
jmp
in
jg
ja
and
push
dec
mov
rorb
mov
clc
in
insl
lret
jo
mov
and
fimull
das
xlat
dec
and
jno
dec
xlat
jno
scas
adc
push
movsl
clc
stos
imul
sti
lods
aas
cltd
in
xchg
outsb
fcomi
lock
xlat
push
inc
jl
push
pop
movsl
xor
jne
jmp
fidivrl
dec
xchg
stos
cmp
jmp
sbb
ljmp
ret
push
mov
push
movsb
mov
shr
adc
cmpsb
pop
push
test
mov
in
lret
jb
mov
int3
decb
pusha
bound
sbb
jp
incl
inc
sahf
xor
call
aas
dec
popa
popa
daa
lock
shll
jg
pop
lea
fucomip
bts
push
mov
xor
aaa
fnstsw
mov
in
adc
cltd
xor
sub
or
nop
insl
sahf
clc
mov
inc
popa
rorl
xchg
int
ret
aas
movsb
in
in
stos
push
imul
xor
aas
dec
mov
push
rcrl
adc
mov
inc
ret
sbb
jnp
xchg
fucomip
xor
ds
orl
pop
cmp
inc
std
xchg
inc
and
sbb
popa
sub
les
or
call
int3
sub
subb
xorb
es
mov
rorb
aaa
mov
add
jmp
cwtl
cmc
xchg
js
pop
cmp
in
mov
push
sbb
sbb
inc
dec
jne
mov
cmp
in
rolb
push
cmp
sub
inc
dec
or
fcomps
push
ret
clc
movl
push
loope
dec
je
push
jg
mov
clc
mov
sahf
das
cmpsl
daa
and
aas
les
scas
xor
cltd
and
bound
jmp
scas
fcom
in
rcl
xchg
loop
push
cmpsb
sub
jl
scas
inc
pop
push
cwtl
jl
dec
mov
hlt
xchg
mov
notl
in
jnp
or
mov
push
xchg
test
sbb
es
sahf
xchg
sub
xchg
xor
cwtl
ret
outsb
out
push
jbe
dec
addr16
lock
push
pop
ljmp
push
insl
mov
out
outsb
dec
das
lret
leave
mov
xor
sub
bnd
lea
sbb
shll
stc
adc
int
jp
rorl
rolb
push
xor
repz
push
out
xchg
movsl
xor
xor
adc
ljmp
int3
bound
cmp
pop
int
sahf
insb
dec
mov
sub
sub
jne
inc
sbb
repz
stc
scas
and
sbb
pushf
xchg
inc
xchg
and
test
dec
xchg
subl
mov
inc
loope
adc
dec
repnz
pop
push
push
sub
lea
jl
jl
mov
adc
jnp
ljmp
popa
mov
xchg
xlat
mov
stc
movsb
cmpsl
dec
push
aas
inc
jns
les
dec
sbb
test
mov
enter
out
xorl
mov
arpl
call
into
mov
mov
inc
xor
stos
mov
sub
and
dec
incb
mov
push
insb
lods
xchg
filds
stos
push
sbb
loope
pusha
out
repz
and
dec
mov
add
cmp
pop
cmpsb
lret
dec
shlb
test
lahf
mov
xor
mov
dec
sbb
sbb
mov
sub
jg
lret
data16
push
adc
fucom
je
xchg
cmp
js
ds
adcb
es
sub
pop
hlt
xchg
std
mov
ds
daa
cmp
and
add
jb
adc
cmp
or
ret
shrb
xchg
jge
mov
push
mov
or
lret
mov
iret
repnz
das
roll
or
ss
pop
sti
sub
repz
or
and
out
inc
mov
aaa
jbe
outsb
or
loope
jg
jmp
push
sbb
cmp
mov
sbb
test
out
mov
dec
inc
cmpsl
pop
insl
mov
jno
push
lods
mov
mov
add
pusha
inc
je
jae
test
aad
data16
loope
dec
jne
lret
mov
cmpsb
loope
enter
or
mov
push
insb
cmc
test
jns
xchg
imul
push
ret
loope
mov
lds
pop
ljmp
call
nop
int
cmpl
aad
or
scas
push
sbb
es
gs
leave
cs
stos
xor
movsl
stos
jl
mov
dec
inc
fs
dec
int
repz
int
adc
mov
or
jecxz
cmpsl
xchg
outsb
imul
or
push
das
call
sahf
into
aad
sti
into
cwtl
pop
jg
loope
xchg
leave
xor
in
push
cmpsb
jo
adc
cmp
aad
and
loopne
loopne
sbb
clc
out
sti
xchg
in
pop
sbbl
ret
shll
mov
mov
rorl
jl
rolb
dec
pop
in
lock
fdivs
mov
decb
ljmp
xor
insl
push
or
adc
aad
js
or
imul
ds
and
cmp
jmp
push
and
fdivrp
out
fsub
out
mov
daa
dec
mov
icebp
lcall
clc
jecxz
pop
sarb
sbb
ja
loopne
pop
and
push
ret
icebp
hlt
inc
mov
lret
test
shll
sbb
rcrb
or
cli
pop
idivb
adc
in
in
rcrb
mov
out
fisubrl
ljmp
or
xchg
dec
out
or
xchg
push
ficomps
aam
push
pop
push
psubq
push
orb
push
mov
sbb
inc
jnp
jecxz
cs
lods
pop
ret
jle
push
xor
adc
loop
xchg
inc
enter
cmp
out
pop
aam
test
rorl
mov
ds
icebp
out
adc
out
fmull
popf
xlat
pop
xchg
sbb
fistps
sahf
inc
addr16
sub
mov
lods
push
lods
jl
mov
xchg
mov
xor
mov
pop
lret
add
mov
sbb
dec
movsb
imul
cmp
cmpsl
insb
or
dec
inc
out
sub
or
gs
jne
mov
mov
fidivs
jmp
mov
add
jnp
jnp
aad
add
push
xchg
mov
scas
jns
arpl
jae
bound
xchg
push
icebp
insb
test
dec
adc
cli
push
roll
xor
shll
xor
outsb
ds
jbe
fs
inc
mov
movsb
out
mov
inc
aaa
out
in
fsub
fsubrl
xchg
nop
jg
std
inc
or
dec
popa
dec
xor
clc
pop
lds
movsb
push
ret
repz
daa
ds
pop
mov
dec
hlt
in
inc
push
ss
hlt
imul
adc
sbb
insb
jle
jno
pusha
dec
clc
into
and
push
mov
jno
std
bound
adc
stos
mov
aas
or
out
pusha
jno
mov
lahf
mov
jbe
jecxz
js
test
inc
loop
rcll
addr16
pop
cmpsl
int3
mov
xchg
shll
in
outsl
popa
fbstp
call
xor
gs
xor
mov
pop
dec
in
push
call
jle
inc
dec
cmp
arpl
sti
gs
out
pop
dec
mov
mov
mov
adc
js
dec
or
and
gs
pop
add
cmpsb
sub
add
imul
push
stc
lea
xchg
stos
lret
xor
mov
or
mul
repnz
arpl
adc
push
jae
shll
cmc
pop
mov
stc
loopne
or
inc
xchg
popf
stos
sbb
rol
loop
imul
add
push
xchg
lea
adc
mov
inc
jl
add
xor
jl
and
mov
jge
js
sub
sbb
inc
xor
adc
cmpsb
scas
pop
xchg
push
jns
add
adc
iret
mov
int3
iret
fcoml
mov
cmp
lcall
lods
cmpsl
cmp
test
add
or
fiadds
cmp
js
pushf
jns
push
decl
jge
aas
ja
push
add
fisttps
icebp
movsb
jl
aam
sub
clc
xor
ja
ficompl
and
outsl
mov
decl
into
or
sub
int3
insl
push
jbe
pop
adc
mov
adc
xchg
mov
lods
faddp
or
push
lea
add
arpl
sbbl
fsubs
mov
scas
push
or
pop
dec
in
mov
in
mov
ja
rorl
lret
sub
push
scas
nop
in
cmp
scas
or
cmc
test
add
rcr
mov
cmp
cltd
bound
lods
pcmpgtw
iret
add
shrl
mov
in
pminub
xchg
push
outsb
xchg
sub
ret
jns
pop
out
inc
imul
push
push
rcrb
ret
add
inc
jne
and
aad
sbb
push
rol
mov
out
sub
outsl
in
lods
adc
mov
xor
pop
pop
insb
xor
test
add
mov
divb
sub
mov
lods
dec
loop
cmpsl
mov
int3
mov
lahf
loope
mov
dec
sub
xchg
dec
add
in
mov
fists
mov
cmp
mov
loope
mov
aaa
or
or
fcmovnbe
sbb
das
mov
pop
mov
add
cld
jecxz
pop
or
imul
fmuls
adc
inc
and
pop
mov
jp
pop
sub
js
fucomp
cmp
stos
and
mov
mov
jo
lock
push
ret
sti
inc
jp
loop
icebp
push
xchg
imull
mov
jl
mov
or
jecxz
nop
or
push
scas
shll
inc
push
push
ss
clc
pop
xor
aas
jmp
or
sbb
ljmp
pop
test
iret
icebp
jecxz
mov
and
pusha
in
out
outsl
mov
sub
ret
xor
inc
push
and
xchg
fcomps
lods
loopne
fnsave
data16
and
dec
hlt
lea
in
xor
add
inc
jp
repnz
pop
cld
mov
clc
mov
cmp
gs
mov
dec
sub
sub
add
xchg
mov
orb
imul
pop
mov
cmp
dec
dec
add
outsb
subb
mov
aas
enter
ret
jne
xchg
std
hlt
and
push
cmp
insb
adc
sti
enter
push
or
mov
lods
cmp
sub
shll
sbb
scas
or
jno
mov
test
adc
enter
or
pop
cld
out
inc
test
cltd
dec
clc
jae
dec
xchg
minps
adcb
sbb
popa
dec
out
xor
icebp
cmp
dec
mov
fsts
stos
or
outsb
jne
stc
out
lret
in
jno
jecxz
outsl
xchg
pop
inc
add
std
pop
or
ljmp
sbb
out
cmpsb
nop
daa
jecxz
jmp
into
and
sti
and
popf
and
cmp
pop
or
cmp
xchg
sti
xchg
out
inc
or
adc
mov
pop
mov
xor
aad
in
in
in
sub
insl
mov
sub
repz
mov
insl
xor
inc
jecxz
push
jle
loope
inc
xchg
sbb
push
or
cwtl
ret
cli
aam
les
ret
ret
leave
icebp
jl
push
xor
or
pop
pop
xchg
filds
test
xchg
scas
dec
dec
lahf
stc
daa
rcr
inc
xlat
mov
sub
ficomps
je
sti
mov
test
xchg
and
sti
in
shrl
ror
mov
xlat
mov
and
outsb
mov
sub
fistl
and
xchg
mov
sub
xchg
out
rcll
flds
xchg
sbb
xor
aas
jbe
mov
ljmp
negw
fistps
aad
jmp
pop
loope
push
es
inc
jne
sub
jne
lret
cmpsb
or
repnz
repz
sub
adc
mov
pop
imul
test
dec
and
adc
pop
adc
enter
push
js
test
cmp
loope
pop
adc
lods
cmc
lds
xchg
popl
fisubrs
mov
inc
add
cld
dec
jno
sbb
stos
push
push
gs
gs
fisubs
loope
cwtl
clc
xchg
fstpt
icebp
lods
mov
jne
daa
insl
call
add
and
lock
jmp
and
pusha
xor
push
pop
cmp
aaa
jmp
int
pop
insl
jnp
mov
xchg
cmpsb
icebp
push
adc
cmpb
shll
xchg
ret
add
aam
adc
mov
gs
pop
ljmp
add
rclb
fmull
mov
nop
adc
pushf
lret
arpl
ret
jmp
dec
sarb
jae
aaa
fcmovbe
int
push
mov
gs
jb
xchg
push
mov
aam
lret
push
adc
movsb
jbe
rcrl
xchg
loope
adc
jle
lea
inc
or
cmc
shr
divb
idiv
aam
mov
mov
mov
int3
and
dec
or
fs
adc
dec
lods
xor
sarl
shrb
pop
xchg
aam
imull
adc
scas
out
xchg
andnps
pop
sbb
adc
sub
lods
xchg
es
pop
xchg
lea
cmp
push
jns
sti
push
insl
sub
jae
cmp
cmp
sbb
stos
sbb
scas
outsl
in
aas
jp
je
lret
insb
xchg
pop
jbe
loop
cltd
pop
xor
inc
outsl
lret
mov
repnz
out
shll
and
rcll
cwtl
sub
inc
pushf
addr16
add
xchg
mov
fld
loopne
jp
gs
jecxz
add
ds
or
ror
sbb
adc
andl
insl
add
mov
test
arpl
out
imul
das
ret
gs
or
add
sbb
loop
aam
sub
lret
inc
imul
repnz
jbe
out
add
and
and
es
lcall
rclb
and
adc
bound
bound
dec
push
jno
lods
and
sub
xchg
mov
xor
icebp
in
sub
and
mov
sub
jle
cmpsb
mov
scas
sahf
das
imul
ja
std
sbb
and
cmp
es
movl
cltd
outsb
mov
loop
aad
inc
ret
cmc
ja
fstl
mov
sub
divl
das
outsl
les
add
aam
cmc
movsl
repnz
or
xor
push
sahf
add
xchg
stos
jle
push
push
inc
mov
or
fdivr
sub
mov
lods
fdiv
xlat
pop
cmpsb
data16
and
enter
iret
and
dec
push
adc
and
xchg
jle,pt
or
pop
mov
insb
mov
mov
jne
xlat
jmp
js
push
dec
jb
add
push
or
cmp
push
xchg
fcmovnu
cli
push
or
lds
push
mov
imul
cltd
ljmp
movsb
mov
test
pop
imull
hlt
and
stc
pop
cmc
cli
adc
dec
inc
xor
sbb
mov
mov
adc
or
jmp
subb
or
psrlw
jne
push
sbb
es
mov
shlb
cmp
push
jl
fisttpl
and
mov
dec
cmpl
dec
cmc
fisubrl
pop
test
dec
out
or
xor
nop
aas
es
jp
notb
sbb
jp
repnz
cmp
push
jne
cwtl
jnp
cmp
fisubrs
add
add
das
addb
push
pop
and
out
icebp
cli
or
mov
sbb
or
push
in
or
sahf
in
cmp
push
fldenv
adc
dec
divl
mov
faddl
test
jmp
cmp
dec
pop
and
loop
mov
or
addb
sbb
outsb
iret
inc
bound
pop
xor
arpl
fbld
dec
int
jle
cmpsb
je
cmp
jle
cmp
push
jecxz
das
add
and
imul
jge
aam
sbb
aas
popf
icebp
pop
xor
mov
fcmovne
les
ja
xchg
out
dec
in
mov
or
lahf
cmp
or
loop
lea
cwtl
mov
inc
aad
cmp
and
test
int
lock
cmp
fwait
loopne
nop
test
gs
mov
es
pop
xor
inc
lods
leave
lock
out
nop
or
sbb
jg
push
sub
sti
or
pop
jecxz
xchg
push
and
adc
enter
xor
jns
sub
cmp
imul
bound
out
cmpsl
or
mov
jbe
mov
and
mov
outsl
add
test
ss
call
out
jns
mov
or
dec
stc
adc
shlb
daa
pushf
pusha
jle
mov
test
adc
jmp
daa
rolb
dec
sbb
inc
pop
xchg
mov
mov
add
aad
cli
mov
insl
shll
xchg
mov
pop
xchg
jne
pushf
mulb
sbb
fxch
xchg
adc
lock
dec
movsb
xor
hlt
fsubp
dec
andps
mov
sahf
push
jb
adc
imul
movsl
add
jb
push
daa
or
pop
jg
lock
sbb
pop
cli
jne
into
jp
sbb
jnp
std
inc
pushl
rclb
sbb
and
push
mov
sahf
mov
vaddsubpd
aam
cwtl
cmpsl
jl
fisttps
pop
out
arpl
cmpsl
in
sahf
movsb
outsl
ds
or
lret
out
in
loopne
out
mov
mov
je
or
dec
imul
popf
jl
xor
popf
xor
sbb
mov
cwtl
adc
fldcw
cmp
scas
mov
stc
inc
cld
and
dec
cs
ret
push
push
loope
test
inc
pop
inc
lret
aam
dec
jge
push
outsl
mov
mov
stos
fdivrs
xchg
mov
ret
addr16
push
stc
or
sub
bound
insl
sbb
jo
repnz
clc
lods
mov
push
xor
cs
xor
jl
jmp
sbb
rcrl
ja
push
fcmovnb
lret
les
and
nop
jbe
scas
enter
and
out
jb
stc
cmp
in
cmpsl
lret
push
in
flds
out
xor
das
mov
inc
aas
jl
out
dec
mov
add
adc
push
mov
xor
sbb
aam
mov
imul
test
sbbb
and
pop
in
pop
sti
outsl
adc
dec
outsl
jns
lods
or
fiadds
pop
cmc
xchg
inc
xchg
xor
aam
jge
xchg
xor
es
or
and
mov
divb
int3
pop
data16
cmp
mov
fwait
shrb
sub
add
mov
xor
dec
sbb
pop
lret
test
iret
jno
pop
dec
mull
popf
xor
stos
test
rcl
add
pop
sahf
push
xor
addb
fisttpl
cmp
add
xchg
in
das
fistpl
leave
xchg
inc
sbb
cmp
lock
test
aam
pop
mov
orb
jae
dec
out
addr16
inc
imul
or
sahf
cmp
xchg
cmp
pop
mov
fstl
daa
add
fwait
je
xor
fs
adc
dec
cld
sbb
push
inc
cmpsl
jg
push
out
ret
cmp
jnp
pop
nop
mov
outsl
mov
adc
add
and
std
xchg
push
cmp
dec
mov
in
mov
push
negb
lahf
fsubs
inc
frstor
pop
pop
add
test
dec
aaa
mov
xor
mov
jnp
test
icebp
out
inc
and
aas
push
xchg
push
cli
icebp
es
sub
jmp
repnz
fstps
inc
bound
in
movsb
and
jp
lock
push
mov
lahf
mov
xchg
fwait
data16
shlb
aad
mov
adc
jecxz
bound
in
mov
lret
int
lcall
or
sarb
pop
sub
xchg
dec
les
push
clc
out
mov
mov
insl
dec
arpl
mov
mov
and
shll
shrb
mov
movsb
push
xchg
cltd
add
pusha
cmp
aam
mov
sbb
cltd
cld
sbb
stos
mov
out
icebp
bswap
sub
inc
lahf
sbb
mov
pop
ds
in
scas
mov
mov
sub
iret
adc
dec
bnd
cmp
and
push
repnz
lds
sti
mov
and
xor
jp
das
pop
jbe
mov
mov
ret
enter
lret
lgs
xor
cld
jp
test
xchg
push
mov
push
pop
repz
lcall
jo
jp
adc
bound
jb
mov
filds
mov
test
movsb
pop
mov
inc
cmpsl
loope
fs
xlat
push
imul
stc
dec
cmc
mov
cs
push
jno
data16
ja
mov
loopne
mov
call
mov
popa
insl
push
adc
imul
lods
in
mov
insb
in
arpl
pop
pushf
insl
shll
cmp
fadd
xor
cmpsb
sub
sbb
jg
stos
push
jmp
mov
cwtl
or
mov
call
and
jg
outsb
pop
inc
sbb
mov
daa
addr16
popa
add
into
add
int3
mov
mov
xchg
sbb
lcall
insl
push
pop
inc
testl
inc
cli
xchg
lcall
das
lods
jbe
adc
loope
xchg
push
loope
aaa
add
mov
mov
loopw
cli
out
add
lahf
adc
cltd
mov
adc
pop
pop
push
insl
ljmp
dec
iret
add
incb
or
jo
movsl
cld
ds
pushf
xchg
inc
fistps
call
out
sub
inc
popa
ja
push
imul
inc
push
fcoml
or
jno
sub
movsb
pop
insl
dec
fistps
imul
scas
inc
and
and
bound
push
mov
rcl
inc
fbstp
cmp
mov
mov
mov
cld
push
adc
lods
ja
jmp
push
and
fbld
dec
add
cmpsb
int3
xchg
xchg
mov
imul
push
xchg
test
add
into
je
mov
push
jne
popf
inc
xlat
mov
rcll
mov
xlat
push
out
cmp
mov
mov
cmpsl
clc
sub
pop
movsb
ja
add
pusha
mov
sub
icebp
movsl
mov
xor
popa
pusha
mov
push
push
test
aas
test
bound
adc
pop
fstpl
cmp
repz
pop
pop
data16
movsb
xor
imul
cmc
cmp
ja
dec
movsb
sub
div
jg
lds
push
js
movsl
aas
push
xchg
jbe
test
fnsave
enter
fldt
ret
fildl
test
rcrl
fs
sti
insb
loope
cmp
imul
repz
je
shr
xor
sahf
aas
mov
jle
movsl
scas
or
aad
xchg
or
mov
dec
in
pushf
pop
cs
imul
adc
shlb
scas
subb
sbbb
jl
mov
out
lret
mov
test
aam
push
inc
push
lods
lods
mov
shrb
xor
subb
and
insl
test
lea
andb
roll
jecxz
dec
xor
adc
inc
mov
lret
mov
movsl
jle
loopne
dec
outsb
jecxz
adc
dec
cmp
mov
iret
outsb
aad
rclb
jmp
mov
stc
push
pop
in
ljmp
mov
popf
jl
je
je
xor
dec
xchg
shr
cmpsl
jnp
bswap
push
orl
push
or
push
pusha
xchg
adc
std
rorb
sub
adc
jmp
or
fs
enter
cmp
jge
jnp
mov
mov
fstl
inc
fmuls
sub
out
les
sub
push
imul
iret
sahf
shlb
ficomps
xchg
mov
pop
iret
out
bound
cli
into
inc
push
int
loop
cmp
jbe
push
std
imul
in
cmp
xor
mov
clts
in
mov
aas
mov
xchg
adc
faddl
inc
mov
xchg
test
cltd
jnp
ret
call
dec
sbb
addr16
xchg
call
ljmp
mov
scas
cmp
icebp
sti
sbb
dec
outsl
test
daa
movsl
es
fcom
sbb
sub
out
insl
mov
push
data16
push
dec
cld
inc
inc
addr16
sti
das
inc
sub
jmp
or
pop
jl
and
iret
fmul
push
insb
ret
adc
dec
and
stos
cmp
mov
stos
pop
jecxz
iret
test
mov
inc
inc
andl
int3
sub
mov
inc
dec
mov
and
loopne
cmp
jmp
xor
fisubrs
push
pushf
pop
jno
loopne,pn
int
and
stc
push
mov
out
sbb
clc
out
pop
push
push
xor
or
in
fs
push
int
xchg
aad
sub
cmp
or
ret
dec
rorb
rorl
mov
jge
mov
dec
sbbl
cmp
dec
loopne
jmp
das
js
cwtl
and
ret
daa
push
fimull
jb
rcll
add
and
xchg
out
mov
sub
cmp
push
test
sbb
mov
mov
lds
push
mov
fcoms
clc
sub
push
arpl
inc
xlat
mov
cmp
ss
mov
test
insb
fildll
shlb
mov
hlt
pop
sbb
bound
add
or
jb
andb
adc
pusha
int
std
mov
dec
xlat
mov
call
add
adc
popf
cltd
xor
insb
std
xor
fidivl
movsb
pop
sbbl
loopne
fsubr
cs
add
or
fldln2
jns
dec
add
loope
loope
push
cmpsl
jl
popa
jno
or
loope
lret
outsb
popa
ret
and
xor
jg
lahf
pusha
push
cltd
stos
and
into
test
push
fsubrl
lds
mov
cmp
xor
xchg
pop
adc
sub
in
filds
jle
jle
mov
js
sahf
les
mov
adcl
in
movzwl
mov
enter
adc
ret
int3
cmp
aas
adc
rol
out
int3
cmp
ss
lock
sub
mov
in
dec
imul
out
sbb
inc
daa
add
add
ljmp
lcall
mov
dec
shlb
pop
sti
push
push
cmp
test
cmp
gs
or
inc
push
and
cltd
outsb
inc
jge
rcll
stos
or
enter
mov
cmp
xor
jno
stos
mov
push
push
loopne
push
jecxz
ja
mov
sbb
movsl
lods
adcl
xorb
jl
xchg
popa
mov
out
out
movsb
cmp
lcall
inc
shr
ficompl
lret
xchg
outsl
int
xor
jecxz
add
jecxz
mov
mov
popa
xor
push
xchg
mov
and
loop
adc
or
out
mov
and
aas
movsb
insb
pop
lret
shrl
arpl
fucomi
scas
cmp
jl
xlat
cmc
das
mov
fidivrs
test
add
lea
dec
andb
test
sub
push
or
dec
nop
out
int3
mov
shlb
adc
mov
nop
jmp
fisttpl
cs
arpl
inc
or
idivl
sub
add
sub
jne
sbb
lods
add
test
jecxz
cmpsb
cmp
jmp
or
sub
inc
test
xlat
inc
and
orl
or
lea
imul
mov
sub
bound
push
dec
mov
fcompl
std
add
stos
lea
aaa
or
adc
addr16
sub
push
int
and
insb
jo
daa
push
out
mov
add
das
pop
sub
dec
cwtl
mov
iret
lret
rcpps
push
mov
repnz
das
pop
mov
xor
cld
fs
jmp
rcll
add
popf
ret
lds
insl
fsubrp
lret
inc
pop
stos
xchg
fs
sub
loop
lcall
shrl
das
movsl
xor
loop
push
jae
pop
sahf
cwtl
cmp
lods
in
mov
notb
rorb
xor
in
mov
cwtl
cmpsb
sub
push
push
out
mov
jle
pop
cli
mov
mov
adc
push
pop
push
mov
shll
push
ret
int
and
movsl
daa
cmp
loope
stc
rcr
and
add
sub
in
test
and
out
adc
jbe
testl
xor
pop
call
rcrl
push
push
dec
inc
mov
and
cltd
mov
push
jo
mov
add
frstor
outsl
xor
cmp
stc
and
mov
cmp
and
jo
lods
push
scas
mov
imul
mov
addr16
pop
and
mov
inc
push
les
pop
mov
cmp
shr
add
and
cs
mov
jmp
in
bound
push
adc
test
mov
pop
mov
push
mov
pop
mov
mov
add
imul
jae
sbb
adc
jmp
mov
xchg
ljmp
loopne
jno
rorb
imul
dec
and
xor
adc
cmc
gs
lds
mov
push
dec
fwait
arpl
sarl
stos
dec
pop
xchg
or
test
test
stos
jmp
or
push
cmc
add
jecxz
loop
xorl
pusha
jmp
add
in
int
addb
ljmp
lods
rorb
arpl
or
pop
xlat
rorl
add
test
sub
out
ret
mov
mov
enter
enter
pusha
jo
jnp
insb
dec
fucomp
push
and
inc
hlt
or
jbe
mov
pop
std
or
jp
xor
push
jns
xchg
or
pop
adc
cmp
ljmp
lahf
xchg
sbb
lcall
loopne
shlb
sti
mov
shll
pop
aad
call
push
add
jle
mov
push
jb
cmpsl
xor
mov
xor
xchg
aam
xor
dec
nop
jp
les
xchg
insb
dec
dec
sub
ds
jecxz
adcl
add
pop
cli
int
lds
push
js
pop
cmp
or
jecxz
mov
sub
popa
sub
inc
push
sbb
dec
sub
mov
lret
dec
adc
xor
add
aad
sub
jnp
repnz
push
movsb
mov
mov
and
jge
sub
inc
cld
sub
mov
nop
cld
or
xor
mov
call
cli
notb
push
mov
sti
test
mov
testb
les
inc
jne
xor
mov
jle
jo
push
outsb
adc
aam
andl
aaa
sub
push
jge
jle
dec
data16
mov
std
dec
js
xchg
and
inc
cmp
or
js
inc
jb
mov
and
xlat
mov
or
shlb
clc
sub
shlb
xor
sub
xchg
nop
add
pop
popa
cli
mov
and
mov
add
lea
or
sbb
lret
mov
or
xor
aam
into
lock
push
fcomps
test
daa
mov
loope
cmp
xor
sub
xchg
pop
mov
push
mov
pop
sub
mov
out
dec
xchg
xchg
movsb
mov
add
sbb
sub
xchg
mov
lahf
sbb
push
fldt
jecxz
data16
xchg
push
jge
das
push
shlb
enter
push
push
mov
xor
insl
movsl
pop
push
xor
add
outsl
and
lea
ds
fidivl
popa
cmp
daa
mov
pop
repnz
sbb
xor
mov
sub
cld
ja
jbe
push
xchg
in
aaa
cmpsb
or
pop
xor
sbb
cmp
add
mov
dec
in
sub
dec
movsl
dec
sbb
inc
icebp
mov
push
mov
mov
mov
mov
add
and
pusha
stc
mov
adc
popa
lea
push
pusha
adc
cmp
data16
jb
call
insb
sbb
test
adc
lods
sbbl
xorb
int3
push
gs
jecxz
push
orl
clc
dec
in
jle
mov
xor
jne
in
mov
or
pop
sbb
data16
stc
pop
add
fistpl
ja
loope
sbb
rcr
lcall
xchg
outsb
inc
dec
mov
jae
es
push
scas
outsl
loopne
adc
lods
stos
xchg
aad
and
add
sub
fs
xor
into
sub
ljmp
xchg
mov
jae
mov
outsb
repz
insb
sar
lea
leave
mov
xor
jmp
xchg
sbb
mov
loop
in
dec
add
mov
sbb
test
js
xchg
sub
mov
jl
bound
popa
imul
in
fsubl
in
sbb
lods
or
out
jg
cmp
xchg
daa
mov
gs
sbb
cmp
cmp
je
mov
adc
insl
or
push
inc
adc
and
xor
fldcw
pusha
jnp
cmpsl
stc
sbb
cmp
mov
jno
imul
shl
mov
lods
push
cmp
add
cltd
sub
push
mov
cmp
bound
fcomps
cmp
jo
mov
xor
inc
sarb
mov
mov
mov
scas
xor
xor
add
add
js
pusha
jnp
js
ljmp
sub
xchg
inc
and
lcall
inc
mov
icebp
scas
mov
repnz
cmpsb
pusha
lods
sbb
sub
ss
lcall
roll
mov
scas
ds
outsl
mov
mov
sbb
ja
sub
sub
lcall
xchg
lods
xchg
mov
stos
xor
enter
push
xchg
stc
xor
mov
jae
xchg
pop
popa
icebp
lds
xor
subl
adc
ss
xchg
imul
rorl
inc
iret
pop
push
jbe
lcall
shlb
fildll
divl
push
gs
or
es
mov
xor
pop
jmp
orb
mov
push
mov
fucom
pop
adcb
sbb
repz
and
add
lods
iret
flds
notb
outsl
mov
xchg
cld
or
jns
or
jne
jl
cld
sub
jns
push
sti
clc
ret
sbbl
dec
fstpt
push
jle
xlat
and
pop
inc
pop
mov
xor
mov
inc
mov
ljmp
xchg
subb
fisubl
adc
loop
mov
mov
scas
jp
adc
mov
mov
pushf
fcompl
mov
mov
ret
push
push
xorb
push
pop
sbb
aaa
and
lcall
xchg
xchg
or
cmp
insl
pop
negl
sbb
push
sub
lahf
jb
fwait
jge
cwtl
or
stos
pop
rcll
sahf
mov
jl
jnp
out
mov
add
pop
loop
roll
pop
pop
xor
cs
jl
nop
aas
pop
and
sbb
pop
ljmp
dec
mov
pop
pop
mov
mov
lret
dec
xchg
xchg
imul
sbb
mov
xchg
inc
out
popa
lcall
daa
fisttpll
std
cmp
test
cltd
lock
mov
fadd
fistpll
mov
mov
cmc
fwait
push
inc
ds
push
fnstenv
and
lock
xor
dec
cld
add
mov
lahf
lods
jle
sbb
shl
movsl
dec
add
xor
in
sub
inc
ja
into
call
idivb
hlt
enter
mov
repz
pop
dec
shlb
out
cmp
cmc
jg
cltd
out
pop
jl
and
int
and
cmp
shll
repnz
in
xlat
adc
mov
mov
cmp
mov
repz
adcb
lret
out
movsl
in
mov
inc
in
popf
addr16
repz
cmc
push
sbb
adcl
mov
cmp
sub
jmp
hlt
sub
push
pop
adc
rcl
mov
shll
adc
mov
xlat
lret
sahf
push
lret
stos
int3
hlt
push
clc
jmp
cmp
xor
inc
sahf
lret
sbb
aad
xchg
cvtdq2ps
inc
das
mov
popf
jns
adc
pop
xor
aaa
in
inc
subl
add
lods
or
add
arpl
push
add
lods
add
sbb
jno
stos
jbe
aad
jg
sub
sbb
pop
mov
pop
push
pushf
xor
clc
addr16
fnstsw
aam
inc
sbb
mov
pop
push
test
int3
mov
mov
dec
cmp
add
sbb
ljmp
push
inc
call
repnz
faddl
push
cltd
loopne
push
lret
fwait
jae
pop
push
mov
stos
add
iret
call
mov
mov
xchg
insl
push
inc
and
xchg
dec
add
xchg
pop
dec
cltd
inc
xlat
and
mov
add
enter
stos
mov
call
pop
outsb
and
inc
jbe
inc
adc
in
or
mov
mov
js
imulb
icebp
aam
inc
jae
fidivl
jecxz
mov
testb
push
out
mov
xchg
sarl
loop
rclb
inc
pop
mov
jp
js
push
data16
repnz
push
inc
fiaddl
sbb
cmp
xor
add
sbb
mov
inc
cmp
push
in
addb
and
pop
shll
xchg
outsb
imul
mov
mov
and
daa
jg
aas
pop
dec
aas
fldcw
outsb
mov
lods
or
cmp
sub
cmp
mov
lcall
sahf
mov
out
jnp
pop
push
bound
addr16
cmp
cmp
xor
fmuls
sbb
xor
sbb
popa
in
insl
lahf
mov
out
pop
mov
aam
mov
fmulp
in
fildl
sub
aad
add
cmp
sbb
mov
or
mov
sbb
ficompl
cmp
out
jecxz
ret
movsb
mov
pushf
jecxz
dec
adc
out
pop
mov
roll
ljmp
inc
jmp
fldenv
adc
sti
sbb
sar
test
ret
decl
ret
dec
lret
scas
jge
mov
dec
scas
mov
cmp
mov
mov
out
sbb
rclb
mov
out
out
jle
jp
cwtl
andb
and
add
in
cmc
xlat
pop
in
and
mov
sub
mov
movsl
jp
sbb
into
cmp
leave
mov
mov
pop
adc
std
cmpsl
jmp
jle
in
sbb
hlt
lea
sbbb
xor
sub
xor
aas
repz
fwait
ror
and
enter
rorb
imul
cmc
mov
pop
sbb
fcompl
aam
xchg
xor
shrb
xlat
and
sti
and
add
mov
jae
fldenv
jp
icebp
mov
fcomp
mov
sub
add
cwtl
sub
call
mov
jb
lret
push
ret
addr16
adc
pop
out
add
imul
xor
xchg
jns
popa
pop
cli
or
repz
lock
add
xor
jl
pusha
dec
faddl
jg
pop
cmp
jae
lret
xor
inc
and
mov
fldl
sub
mov
loopne
mov
mov
mov
add
xchg
pop
jb
sbbb
sub
das
cwtl
mov
je
dec
cs
cmpb
lret
int3
je
and
call
divb
pop
jg
test
mov
dec
push
sti
clc
push
jb
add
sbb
mov
sti
movsl
mov
clc
pop
dec
lcall
leave
es
cmpsl
movsl
mov
imul
mov
adc
ljmp
mov
call
flds
xor
pop
test
outsb
fisttpll
xchg
lock
mov
lods
add
adc
imul
les
cmp
xor
adc
mov
addr16
xor
icebp
push
cmp
jl
paddw
pop
pop
movsb
clc
add
jecxz
lock
in
fs
pop
rcrb
das
inc
test
pop
sbb
jmp
sysexit
test
jmp
daa
jge
daa
imul
stos
pop
lret
jp
cmpsb
js
push
lret
push
mov
ja
xchg
iret
jmp
or
lods
dec
push
jns
dec
mov
push
cmpsb
test
dec
movb
push
adc
aad
mov
pop
dec
mov
mov
dec
adc
xlat
mov
repz
loope
inc
sti
add
fcmovu
sbb
scas
fists
cmp
in
jge
call
out
mov
loop
cli
xor
movsl
mov
fwait
cwtl
fsubrl
push
addr16
pusha
repz
popa
shrl
insb
les
sub
js
jne
hlt
xchg
and
adc
mov
popl
inc
imul
jbe
mov
pop
sbb
inc
jne
dec
adc
sub
mov
sbb
cmp
xchg
lods
sarl
xor
mov
add
and
mov
push
jno
pushf
jle
cmpsb
xlat
roll
mov
lcall
shll
mov
repnz
ds
jp
fstps
add
adc
hlt
out
enter
mov
addl
fistl
mov
sbb
mov
sbb
cmp
inc
and
lods
aas
mov
sub
lock
mov
in
sbb
pop
inc
addr16
call
shll
fwait
jl
cmp
das
inc
test
shll
fidivs
in
mov
jmp
mov
xor
push
jecxz
lods
dec
mov
jge
add
mov
mov
repnz
pop
mov
sub
mov
cmp
sar
mov
push
mov
push
and
mov
or
pop
or
in
jmp
mov
jg
sbb
mov
test
xlat
cli
pop
mov
jne
xor
mov
addr16
sbb
push
mov
fisttpll
jl
ja
xor
loope
ds
xchg
mov
xor
sbb
sbb
sbb
in
or
pop
push
jge
jnp
push
out
add
cli
call
loope
or
cli
scas
push
add
pop
jl
pop
rorl
outsb
or
fpatan
int
xor
data16
add
popa
rcl
cmp
mov
sti
add
scas
pop
inc
xor
cmp
pop
add
ljmp
or
lahf
jl
std
pop
adc
fs
hlt
fdivrl
push
or
and
jnp
fwait
add
sbb
push
or
jmp
cltd
lea
icebp
push
gs
dec
mov
pop
sub
cmp
mov
jecxz
cmp
add
fs
lock
fcoms
cmpsl
stos
cmpsb
lcall
xor
lahf
fdivrs
adc
dec
pop
lret
and
pop
out
iret
int3
aas
dec
das
push
lret
mov
scas
cltd
ja
orl
mov
aas
jl
mov
dec
mov
je
test
jo
sbb
cmpsb
mov
ljmp
jno
imul
or
pop
jmp
es
cltd
es
pusha
add
or
test
xor
lahf
stos
ljmp
stos
daa
sbb
movsb
sbb
lods
orb
rcl
jmp
xchg
cs
scas
mov
dec
in
jp
mov
imulb
sub
adc
xchg
mov
add
rorl
repz
sub
mov
ljmp
jnp
mull
gs
xor
jns
mov
addr16
xor
xchg
inc
rclb
pop
xchg
xor
movsb
dec
movsl
dec
data16
push
aam
dec
call
xchg
mov
adc
cmpsl
in
xor
roll
js
fidivrl
loop
jecxz
scas
sbb
cmpsl
and
sub
out
mov
xor
sbb
sbb
add
out
push
repnz
lea
sub
jecxz
xlat
dec
in
add
mov
xlat
inc
out
sub
pop
cli
jp
mov
add
gs
loopne
mov
or
xchg
int
or
inc
push
push
jmp
stos
xchg
push
shlb
jne
jnp
bound
inc
in
add
jmp
sub
js
lcall
sub
movsl
pop
mov
test
in
xor
cmp
scas
push
mov
ljmp
aam
xchg
push
dec
fildll
push
dec
popa
jb
dec
ljmp
push
sbb
jne
adc
outsl
popa
xlat
aas
cltd
rorb
cld
push
push
mov
jne
lret
lea
sub
mov
movsb
pop
scas
insl
sub
sub
fidivrs
into
pop
outsl
push
sahf
mov
xor
cmp
jge
sub
push
stos
daa
push
cmp
inc
sub
jle
ret
fld
push
loopne
cltd
scas
xor
cmp
fmuls
aam
fimull
repz
addr16
push
leave
pop
fs
sub
and
ds
pop
ds
pop
aas
pop
cltd
loop
fnstenv
out
inc
inc
aas
clc
mov
out
lea
push
cmp
adc
xchg
ja
cld
and
xor
mov
and
or
jge
push
xchg
test
xchg
es
rcr
loop
xor
repnz
into
inc
popl
mov
pop
test
inc
test
add
mov
out
dec
pop
jne
inc
mov
arpl
inc
pop
sub
pop
in
inc
sub
loope
mov
sub
adc
aam
jle
or
mov
jge
sarb
mov
movsb
lods
add
stc
inc
mov
std
insl
mov
sahf
addb
or
lods
cmp
push
leave
movsb
popa
add
push
add
jge
out
out
sub
sbb
sbb
cmp
or
add
sub
call
leave
ss
shll
xor
sbb
fistps
setns
jecxz
nop
xor
daa
arpl
loope
fstps
imul
ja
cwtl
sub
loopne
dec
sbb
xchg
or
outsb
and
mov
adcb
mov
or
sbb
cmp
push
jecxz
lret
into
les
cli
mov
jl
mov
mov
adc
xchg
sub
cld
popa
xorl
mov
insb
pop
loope
lret
fwait
mov
stc
xchg
jo
mov
in
jne
pop
testb
movsb
inc
aas
lds
inc
mov
pop
cmp
jnp
xor
lods
jmp
mov
and
icebp
js
orb
bound
xchg
in
imul
loope
fwait
jge
xchg
cmpsl
nop
mov
xor
mov
std
filds
pushf
push
data16
mov
out
push
out
ret
add
sbb
xchg
or
sbb
fs
dec
movsb
jmp
cmp
sbb
in
jno
adc
mov
int3
js
movsl
lcall
repz
jmp
sbb
sub
cmpsb
push
loope
les
aaa
push
lds
jecxz
cltd
dec
and
mov
pop
jmp
das
in
out
mov
mov
cli
or
pop
push
push
loop
int
sub
pop
pop
fisttpl
in
divb
stos
addr16
rorb
or
mov
mov
fcmovne
xor
xlat
xchg
fstpt
imul
scas
pop
call
lcall
mov
mov
mov
lcall
hlt
aas
xchg
sahf
js
mov
out
inc
inc
addl
cs
mov
pushf
pop
insl
fists
and
shlb
push
mov
sbb
mov
cld
stc
cltd
xor
xor
mov
dec
sub
sti
stos
rcrl
or
mov
outsl
cltd
mov
in
pop
incl
fs
mov
xchg
and
xchg
into
mov
imul
xchg
push
mov
or
mov
jle
dec
divl
ja
mov
mov
call
aas
testb
push
into
loope
pop
adc
mov
call
dec
xor
repz
pop
das
add
ja
aas
push
jmp
in
push
jb
jb
aad
shll
xor
xchg
leave
sbb
jecxz
outsl
mov
in
iret
aas
or
add
out
call
mov
add
inc
xor
dec
push
mov
in
xbegin
sbb
push
cmp
test
and
clc
jg
gs
sarb
xor
push
outsb
dec
jg
dec
push
xchg
gs
xchg
pop
out
and
lock
jne
and
cmp
hlt
imul
mov
add
int
sub
stos
sub
mov
jg
cs
pop
jg
mov
loop
jno
imul
cmpsb
fwait
cmp
push
imul
std
and
fsts
inc
pop
sub
cmp
test
push
ret
jns
jmp
out
mov
or
int3
jae
test
ret
arpl
in
test
sbb
xchg
int3
dec
aad
mov
xchg
mov
in
ficomps
loope
sub
sar
and
roll
or
lahf
pop
or
mov
fcoml
xor
push
xchg
mov
adc
mov
jge
and
ret
in
scas
jns
mov
mov
inc
test
lock
dec
iret
mov
mov
lahf
mov
push
dec
adc
jne
les
xchg
push
xchg
xchg
mov
mov
lret
push
movsb
loopne
jmp
daa
sar
adc
clc
sti
xchg
in
pop
fmulp
pop
mov
ds
push
rolb
sub
fdiv
test
xor
sbb
xor
adc
push
das
push
lea
es
shll
pushf
cmp
aaa
lret
repnz
pop
adcb
push
mov
mov
push
pop
mov
adc
cwtl
lds
sbb
ret
push
pusha
fstl
xor
outsb
scas
rorl
mov
or
out
cltd
add
jl
jo
es
jp
mov
mov
dec
movsl
insl
je
inc
test
mulb
popl
jnp
mov
stos
icebp
or
push
mov
jg
arpl
mov
pop
fcomps
sbbl
pop
inc
popa
pop
pop
out
xchg
test
out
ret
pop
sub
jbe
pop
in
clc
fdivs
or
pop
xchg
out
movsl
inc
cwtl
dec
orl
pop
adc
mov
sbb
sbb
mov
rcr
cmp
fcom
push
jg
dec
cmpsb
test
sar
popf
test
arpl
or
mov
xchg
rcrb
mov
cmp
add
and
rolb
cmp
lret
test
inc
aas
fwait
pop
fldl
and
sub
jmp
sbb
xchg
fstps
bswap
inc
rol
jo
fsub
into
data16
cmp
imul
ret
ret
push
jbe
xchg
sub
mov
pusha
cmpsb
movsl
sbb
and
jmp
popa
push
cwtl
jbe
mov
lcall
pop
frstor
mov
adc
and
and
or
out
lods
fs
push
sti
dec
repnz
adc
ljmp
lahf
inc
pop
xor
js
fnstenv
repnz
lret
xlat
loope
popa
pop
jecxz
dec
pop
rep
push
jp
test
ljmp
sbb
repz
movsb
mov
mov
mov
mov
or
jg
add
mov
in
pop
lret
xchg
push
adc
inc
and
inc
or
xchg
std
sub
adc
dec
sub
add
ja
adcl
ljmp
mov
pop
gs
mov
ret
cmp
mov
pop
pop
sub
xlat
lahf
xor
loopne
ret
cmp
fbld
cmp
mov
push
ret
enter
iret
mov
movb
in
cld
add
mov
or
stos
iret
mov
lahf
rcrl
push
sahf
dec
xor
push
incb
stos
sub
dec
inc
pop
mov
frstor
cmp
int3
mov
dec
in
push
scas
dec
insl
mov
pop
add
add
pop
sub
aas
icebp
into
add
ret
js
cmpsb
or
xchg
pop
dec
sti
dec
mov
and
lahf
stos
pop
filds
repnz
adc
xchg
mov
xchg
push
pusha
rcr
xor
imull
and
gs
outsl
or
das
cld
xchg
cld
sarb
mov
adc
jno
cs
jl
mov
and
mov
add
lret
aaa
out
lahf
mov
xchg
pushf
mov
xlat
mov
mov
mov
outsl
int3
or
mov
mov
jns
daa
mov
sub
xchg
ret
enter
lret
cltd
or
sti
adc
dec
subb
push
aam
cld
jnp
push
cmp
cmpsl
das
jae
push
push
rcrb
lds
cmp
adc
loope
add
jl
mov
cld
sbb
imul
add
loope
adc
cmp
mov
pop
mov
nop
fisubl
push
iret
push
aaa
xchg
add
push
mov
pop
lahf
dec
loop
pop
sbb
popf
fildll
sti
nop
aaa
in
pushf
pop
fldcw
xchg
sahf
insb
jnp
fcmovnb
bound
stos
loope
mov
mov
call
fimull
cmpsl
data16
or
xorl
loope
out
and
push
mov
xor
cld
jg
sub
in
cltd
sub
in
pop
repnz
cmp
aam
andb
in
push
pop
in
nop
fists
mov
pop
cmp
leave
mov
jle
fcmove
and
mov
cmp
ret
shrl
int3
decb
dec
sbb
iret
sub
jg
fcomi
into
rorl
mov
mov
outsb
pop
or
push
and
or
xchg
hlt
das
or
or
add
jb
cmpsb
fs
or
ljmp
movsl
data16
and
insb
pop
xor
hlt
xor
mov
scas
lret
repz
push
test
loopne
sub
cmp
lea
xorb
or
mov
in
loopne
das
and
inc
xchg
shlb
imul
jns
mov
sbb
outsb
pop
scas
and
shlb
testb
ss
pop
push
pop
movsl
xor
push
fs
pop
adc
inc
sbb
arpl
loope
test
sub
xchg
mov
idivl
jg
inc
mov
in
sahf
mov
lds
daa
and
enter
lds
xor
jne
addb
mov
arpl
loop
cmp
or
insl
xor
fs
adc
xor
in
mov
stc
popa
or
push
mov
xchg
dec
pop
daa
add
pop
sbb
push
jg
sbb
mov
dec
std
insl
sub
inc
or
mov
in
loopne
lret
jns
cltd
out
push
lret
test
push
enter
cmc
sub
push
in
mov
in
std
inc
xchg
into
add
dec
mov
jnp
push
push
arpl
push
aas
mov
testl
sub
out
mov
or
xor
fwait
repnz
lahf
imul
mov
adc
push
ret
sub
add
cltd
add
mov
push
sbb
lds
or
sub
cmc
je
push
jb
into
sbb
mov
lea
aam
pop
adc
aas
sbb
sbb
pop
out
mov
mov
in
adc
movsb
cs
jnp
clc
xchg
cmp
out
fiadds
shlb
xor
dec
push
push
aas
pop
cld
push
mov
jmp
mov
xor
scas
aaa
jnp
pop
pushf
inc
sub
sub
enter
popa
mov
call
stos
sbb
das
jne
imul
andb
inc
fiadds
enter
and
xchg
arpl
stos
addr16
out
mov
xchg
insb
sbb
xor
leave
adc
clc
pop
js
out
adc
pushf
jne
pop
push
jns
xor
and
cltd
aad
adc
add
cmp
push
sbb
xchg
mov
mov
dec
mov
adc
inc
jb
pop
js
mov
lods
pushf
xchg
add
cs
repz
out
jo
dec
test
mov
cltd
mov
ss
jns
std
mov
outsb
js
sub
xchg
mov
push
adc
and
lahf
sarl
and
sub
aas
mov
mov
mov
pop
mov
cmp
ss
fucomi
leave
sub
inc
sub
scas
sbb
push
push
lock
into
sbb
jns
sub
jecxz
test
mov
outsl
stos
lods
les
lret
mov
ds
and
inc
insw
outsl
jne
adc
mov
push
sbb
dec
cmp
bnd
ds
sbb
jmp
add
cmc
jl
push
fwait
les
xchg
shll
mov
mov
in
jg
xor
lods
inc
loop
sub
dec
inc
sti
mov
in
lock
or
loope
outsl
or
jmp
mov
cmp
inc
loope
das
arpl
and
movsl
inc
jmp
xchg
or
xchg
mov
sbb
inc
xchg
repnz
outsb
and
xor
cmp
pop
or
aas
jmp
pop
cmp
lahf
ret
inc
ja
adc
xchg
je
ljmp
inc
aam
aaa
adc
xchg
jecxz
imul
fiadds
lods
jns
adc
mov
or
iret
rclb
out
stc
adc
mov
in
arpl
dec
dec
inc
pop
aad
mov
pop
jno
stos
loopne
out
ljmp
stc
or
add
jge
rcr
mov
sbb
call
leave
push
clc
jno
fnstsw
mov
sbb
or
sbb
push
jnp
sti
or
xor
repz
aaa
jg
setle
pop
mov
pusha
cmc
inc
cmp
pop
fwait
in
jae
imul
adc
fildll
add
dec
fcoml
lds
stos
mov
pushf
xchg
mov
xor
sub
jl
mov
push
mov
lods
add
cs
or
fimuls
jnp
cmc
aad
cmp
loop
sbb
mov
jecxz
out
movq
jno
into
lret
lds
loopne
es
inc
mov
xor
or
xchg
jge
sub
cmp
and
cwtl
cli
jmp
repnz
mov
pop
nop
out
pop
mov
add
jge
enter
xchg
push
adc
sub
jl
lea
lea
add
adc
lods
jnp
mov
cmove
fwait
fs
inc
push
xor
pop
vpmaxub
ss
nop
in
and
mov
cwtl
in
pop
mov
imul
or
js
dec
xchg
shr
cmp
push
mov
js
js
push
add
inc
ret
sub
inc
insl
xchg
cmp
lods
fimuls
stos
inc
adc
imul
sbb
ja
add
cmpsl
js
clc
or
adc
push
jb
dec
jp
into
cmpsb
add
adc
or
inc
or
or
rorb
push
and
dec
sbbl
push
dec
pop
dec
mov
inc
loope
mov
sbb
cmpsl
adc
addr16
and
xor
sub
push
push
ds
movsb
outsl
mov
mov
scas
and
sub
jo
xchg
daa
in
lea
call
jno
lret
loop
xchg
jp
mov
mov
adc
and
loopne
cmp
gs
jno
fidivrl
lret
fistpl
les
sbb
lods
cmp
sub
sub
dec
iret
jecxz
je
int
push
insl
aas
mov
decb
not
jae
inc
mov
addr16
dec
jp
bound
mov
xor
ds
out
cmpsb
xchg
or
ja
dec
stos
out
arpl
pop
jns
push
in
pop
outsl
sbb
clc
push
lds
stc
add
or
xchg
pop
jbe
jnp
jno
xlat
loop
scas
push
xor
inc
jnp
xchg
fwait
sub
xor
and
dec
loop
ljmp
mov
cmpsb
push
aaa
adc
movsl
shl
ds
jo
repnz
or
cmp
inc
pop
pop
inc
jne
loop
cmp
and
in
rolb
jbe
clc
call
fs
sbb
stos
adc
idivb
mov
pushw
into
cmp
sbb
in
lret
sbb
insl
xchg
inc
fcoml
pop
into
lahf
push
dec
mov
int
fwait
inc
xor
adc
cmc
out
roll
jmp
std
out
ss
lods
neg
out
adc
je
shll
jbe
inc
daa
jnp
sbb
cmpsl
jne
push
adc
int3
daa
xchg
xchg
sub
and
in
sti
xchg
lods
mov
fs
cld
dec
inc
mov
xor
imul
int3
xchg
movsb
aaa
push
sbb
sbb
cmp
push
adc
xchg
call
rorl
inc
mov
je
sub
inc
add
cmp
inc
xchg
adc
mov
pop
outsl
push
mov
jle,pt
shr
inc
adc
xchg
ficoms
jecxz
iret
into
movsl
sbb
mov
and
stos
ljmp
push
fdiv
je
jle
sbb
cmpsb
enter
lods
inc
jns
dec
fnstenv
mov
add
sahf
mov
xorb
mov
scas
fs
test
lcall
xor
ljmp
pushf
shll
dec
dec
loopne
es
mov
jle
in
sti
xor
adc
mov
cltd
sub
sbbl
and
push
loope
outsb
mov
xchg
daa
cmc
test
xchg
iret
daa
jae
jb
inc
sub
pop
flds
mov
popa
mov
pushf
add
js
inc
out
cwtl
imul
add
mov
mov
gs
in
cmp
sbb
cli
outsl
loop
mov
or
and
mov
dec
bound
xchg
xchg
sub
cli
mov
or
dec
jne
sub
fisttpl
or
out
cmp
rcrb
mov
inc
aad
mov
sub
adc
xchg
mov
aaa
fsubrs
add
bound
mov
and
adc
push
call
sub
repnz
testl
aad
out
inc
outsl
in
mov
push
xor
xchg
sbb
cmp
push
xchg
test
jns
into
xchg
lret
and
jne
sbb
mov
cmpsl
dec
cmpsb
dec
pop
push
jmp
xchg
cmpsb
mov
mov
sbb
arpl
or
cmp
lcall
and
sub
cmpsl
mov
adc
push
dec
in
mov
mov
push
int
mov
daa
rclb
sbbb
add
inc
and
xor
xor
xor
inc
adc
cld
add
mov
shrb
and
loop
test
adcl
cltd
call
adc
push
pop
add
out
lea
mov
cltd
or
dec
loop
loope
stos
outsb
xor
add
test
ds
les
rolb
cmpl
repnz
dec
xor
mov
jae
test
pop
test
js
mov
jae
push
push
mov
repnz
mov
adc
jae
imul
sbb
fwait
jo
push
xchg
push
mov
pop
int
push
leave
jmp
fsubrp
std
and
push
sbb
lret
jmp
loop
push
loopne
pushf
nop
mov
addr16
or
fucom
movsl
into
mov
sub
xchg
pop
xchg
xchg
pop
gs
jl
inc
push
adc
sub
adc
loopne
jmp
dec
out
test
out
push
ret
push
dec
mov
cs
jp
in
fbld
sahf
and
fldcw
in
test
jl
inc
adc
out
adc
int
addr16
push
jns
int
xchg
sub
dec
rcrb
jns
ljmp
js
dec
pop
inc
lods
das
push
pop
mov
add
mov
xlat
pop
adc
inc
sti
or
icebp
mov
imul
loop
mov
jle
sti
mov
or
adc
adc
dec
lcall
xchg
adc
inc
inc
into
int3
jmp
rcrb
ja
pop
ret
push
orl
pop
jns
push
pop
jecxz
sbb
dec
cwtl
adc
out
cmp
cwtl
test
mov
mov
push
jecxz
sub
add
faddl
jmp
lds
ret
dec
lods
pop
das
xor
pop
es
cmpsl
mov
stos
pop
inc
inc
add
xchg
cmp
jge
sbb
jnp
lods
pop
push
outsl
mov
adcb
mov
jecxz
or
clc
dec
jnp
mov
inc
sbb
ljmp
lret
aaa
paddb
pop
add
movsl
jge
out
or
sbb
stc
leave
pop
fdivr
mov
push
and
test
cwtl
popf
mov
pop
inc
sub
sbb
das
jnp
scas
sub
sar
cmp
add
ss
cmpsl
inc
test
js
xlat
bound
mov
vpsravq
pusha
dec
jae
cmp
push
scas
pop
dec
add
movsb
jo
stos
lods
imul
sbb
movsl
les
xor
dec
mov
in
jecxz
xor
outsl
mov
outsl
xchg
or
sbbl
mov
mov
xor
enter
xchg
xor
out
test
xor
jl
xchg
adc
mov
cmc
scas
in
and
inc
rol
push
cmp
xchg
xor
lods
ret
test
out
or
dec
cmp
in
and
push
pop
jl
sub
les
out
jnp
add
in
das
bt
pop
test
jl
mov
adc
xchg
mov
pop
rorl
sti
addr16
repz
sarl
daa
inc
addb
bound
loope
mov
adcb
xchg
mov
push
mov
in
loope
jne
popf
mov
loope
inc
mov
push
xchg
lods
mov
sbb
scas
fs
inc
dec
cmpsb
or
in
out
adc
xor
xor
jb
inc
jno
decb
repnz
repz
or
cmp
data16
lods
mov
imul
dec
xor
cmp
adc
fcompl
jo
gs
das
popa
loopne
incl
inc
xchg
pop
jbe
mov
movsl
mov
push
scas
sub
xchg
sub
adc
jo
ror
inc
gs
lret
adc
bound
push
mov
sub
push
das
ficomps
fsubr
sbb
push
arpl
ja
or
inc
shr
aam
jae
dec
dec
inc
sti
jge
repnz
lcall
imul
push
sbb
mov
inc
xor
jo
jne
flds
test
cltd
in
popa
xor
sbb
dec
fmul
push
lea
inc
push
lsl
mov
fs
cmp
mov
pop
iret
adc
add
enter
shll
inc
mov
mov
xor
pop
jge
jne
fwait
push
sarb
xchg
adc
lods
addb
jns
mov
ds
mov
daa
iret
pop
sub
test
or
adc
jb
sub
shrl
das
into
or
sbb
mov
movsl
mov
outsl
inc
faddl
sbb
addl
test
inc
in
adc
cmpsl
mov
rolb
add
mov
mov
ljmp
sub
sbb
jl
test
and
dec
jp
mov
ret
fdivs
out
stos
xchg
adc
or
push
add
dec
js
pop
test
sub
lea
and
call
divl
and
pop
add
add
mov
sti
lock
mov
iret
dec
imul
stc
fidivrs
push
jo
cmp
sub
mov
int3
test
adc
mov
or
fdivrl
pop
cmp
movsb
push
iret
xchg
ficoms
mov
pop
dec
pop
sub
xor
mov
push
jle
cld
or
lahf
cmp
mov
orl
adc
rcl
std
sbb
int3
pop
mov
pop
stos
and
lahf
repz
les
push
pushf
or
add
jg
sbb
jo
push
jns
inc
xor
imul
loope
pusha
and
jmp
mov
clc
sbb
adc
mov
and
push
cmp
sbb
imul
pop
mov
jnp
dec
lret
scas
mov
xchg
push
pop
aad
pop
inc
lds
pop
aaa
outsl
pop
jb
stc
cmp
sbb
pop
insl
jmp
pop
insb
rorl
cmp
pop
or
push
fdivrs
sub
dec
add
sub
cmp
lods
into
pop
les
hlt
call
xor
nop
addr16
repnz
pushf
in
stc
push
jl
jg
ljmp
les
nop
lds
addb
xor
lahf
sub
clc
dec
cmp
dec
jnp
inc
popa
shll
hlt
or
pop
insl
cmc
adcb
dec
cmpb
lods
jnp
loop
mov
pop
adc
push
nop
data16
mov
test
or
out
addr16
push
lahf
add
xor
mov
push
mov
push
mov
sub
imul
jle
dec
lret
cmp
adc
outsb
jo
gs
scas
loopne
cwtd
repnz
fdivs
jl
repz
xchg
adc
inc
loope
mov
mov
popf
sub
outsl
fisubl
mov
aas
mov
mov
test
scas
outsl
add
jns
push
sarl
ret
jae
mov
inc
stos
xchg
push
sbb
cmc
enter
cmpsl
mov
sti
add
in
dec
pop
mov
adc
sub
mov
cltd
loopne
jge
dec
mov
addr16
test
inc
inc
cmp
and
or
cmp
xor
mov
sub
cld
xchg
cmp
jnp
shrl
or
call
inc
js
or
mov
stos
in
aad
test
leave
add
cmpb
sbb
cmp
ret
mov
jmp
aaa
aam
jmp
adc
mov
and
dec
shlb
or
inc
mov
pushf
jno
jl
adc
fmuls
aam
lret
outsl
add
adcb
ja
and
xor
pop
push
inc
ja
jns
pop
xchg
inc
xor
push
push
in
repnz
and
int3
cmpsl
mov
sub
mov
inc
xchg
iret
mov
cmp
cmpl
leave
sbb
jp
movsl
in
push
les
mov
jle
cmp
jecxz
mov
mov
xchg
mov
and
ret
and
cltd
cmpsb
dec
xor
arpl
aam
push
push
mov
shr
push
in
fdivr
call
incb
lcall
jne
test
or
pop
mov
into
fnstcw
push
fs
mov
lea
mov
sbb
mov
xlat
mov
js
sub
je
sahf
add
sbb
pop
xchg
negb
inc
sub
push
fsubl
inc
cmp
ljmp
fmuls
sarl
loope
outsb
int
insb
or
cs
mov
ret
shl
sbb
xor
mov
pop
fsts
jmp
dec
mov
sub
cmp
insl
mov
int
mov
xchg
mov
js
enter
imul
mov
push
or
stc
test
push
pop
mov
push
push
xchg
in
sub
test
jp
clc
push
jl
mov
sbb
divb
repnz
cmc
mov
jmp
mov
aas
xchg
or
cmc
or
fucomp
aad
mov
jbe
push
dec
arpl
test
add
outsl
mov
jp
out
imul
mov
jmp
ss
pop
outsb
cmpsb
hlt
jno
je
imul
icebp
fisubrl
imul
clc
mov
jge
jae
dec
lods
jmp
call
push
scas
aaa
test
notb
cmp
test
jl
inc
cmp
xlat
mov
lods
cli
mov
push
sbbl
pop
or
shr
add
popa
js
and
xor
iret
call
xlat
pop
xchg
sbb
jg
lods
inc
xor
movsl
repnz
mov
loope
pushf
dec
dec
in
call
test
clc
aaa
dec
pushf
imul
fidivrs
inc
and
test
sbb
adc
cwtl
lahf
push
or
es
subb
cmp
int
adc
aas
fildll
enter
stos
push
das
rcll
repnz
fidivs
mov
xor
xchg
cld
imul
jae
out
adc
out
loope
ret
and
sub
call
scas
data16
scas
out
sbbb
loope
sub
stos
push
cmp
fists
nop
fnstcw
or
pushf
sbb
lock
push
fcoms
and
loopne
inc
pop
or
inc
dec
jmp
lcall
mov
push
cmp
call
inc
das
hlt
cmp
mov
iret
push
test
mov
push
mov
in
aam
call
lods
dec
cmp
inc
xlat
mov
adc
or
in
pop
les
repz
fidivrl
xor
dec
inc
cmpsl
orb
pop
pop
imul
or
stos
lret
in
xor
fwait
dec
es
inc
or
adc
mov
lods
addl
jle
inc
jl
shrb
mov
pop
push
push
aaa
jae
or
js
dec
dec
sti
adc
ds
mov
js
ljmp
mov
pop
aam
xchg
into
pop
add
jo
cmp
insb
lea
insb
fmull
mov
loop
jne
bound
xchg
jb
inc
jo
sub
aas
add
push
int
mov
popf
outsb
cmp
sbb
ret
jae,pt
lock
cli
imul
out
push
adc
arpl
std
pop
mov
and
in
xchg
dec
pop
repz
enter
lcall
jl
cmp
aam
sub
inc
mov
mov
jnp
dec
test
dec
pop
pop
adc
xchg
xchg
movsl
out
call
sti
aas
fdivr
cmp
sbb
xlat
or
mov
inc
dec
mov
jb
inc
push
mov
sbb
inc
mov
test
out
xchg
inc
pop
mov
jp
mov
sbb
imul
sbb
adc
xor
gs
mov
repnz
cmpsl
pop
and
sub
mov
fdivs
push
cmpsb
movsb
fdivrs
and
jbe
je
xchg
add
dec
lretw
loope
pop
mov
clc
test
ja
in
mov
jecxz
mov
xlat
lods
hlt
dec
ret
xchg
fwait
sbb
loop
mov
lahf
insl
lea
dec
or
and
cmp
inc
dec
mov
imul
xchg
jbe
jns
lret
sbb
outsl
ja
stos
jb
push
bound
ret
gs
adc
fimull
xor
test
subb
fidivl
pop
sub
mov
outsb
push
cmp
xor
pop
cmc
mov
mov
ss
lret
es
imul
inc
inc
add
notb
sbb
fsts
mov
jae
cli
push
push
cmpsb
pop
bound
adc
and
cs
faddp
pop
daa
mov
fldl
outsl
mov
jns
xchg
cwtl
jmp
mov
movsl
insl
js
add
movaps
test
data16
fsts
pop
sbb
dec
mov
fnsave
stos
mov
repz
sahf
mov
cwtl
pop
push
test
jp
stos
jg
jge
cmp
fcom
mov
and
cli
xchg
push
sub
adc
fcmove
mov
and
bnd
enter
and
mov
sbb
xchg
aam
xor
dec
movb
mov
push
add
push
xchg
divl
cmpb
repz
sub
or
scas
mov
lock
fnstcw
pushf
xor
iret
mov
sub
pop
ja
lahf
mov
jbe
scas
bnd
add
sbb
mov
xor
cmp
inc
inc
cs
push
and
call
mov
iret
or
push
or
and
cltd
jo
mov
mov
push
js
add
xchg
mov
mov
add
mov
cs
xchg
xlat
mov
fs
cmp
dec
comiss
fmull
adc
inc
push
pop
aaa
mov
imul
aaa
add
jo
movb
cli
jmp
outsb
fcompl
inc
movsl
gs
mov
xchg
in
imul
add
cmp
lods
pop
sbb
xchg
aaa
sbb
fs
inc
sbb
mov
mov
dec
imul
aas
bound
aas
xchg
out
inc
into
fdivl
out
iret
or
rep
mov
cltd
inc
jge
xchg
mov
pushf
imul
xchg
sbb
ret
outsl
lahf
mov
sbb
xchg
jbe
jbe
and
or
xor
rorl
lcall
xchg
fsubr
pop
icebp
lcall
pop
xchg
inc
leave
insl
pop
insl
push
xchg
push
dec
lret
or
and
and
push
sbb
repnz
jmp
mov
ss
mov
arpl
testl
insb
xor
cld
adc
pop
xor
or
lods
dec
nop
ficoml
push
or
mov
jmp
mov
jp
cli
cmp
mov
sub
cltd
or
mov
push
ja
and
dec
dec
mov
sub
mov
and
adc
ss
jmp
test
int3
enter
mov
pop
jnp
mov
pop
push
xor
stc
mov
cmp
mov
mov
test
cmp
push
push
jmp
test
mov
bound
sub
sub
or
sub
and
arpl
sub
popf
stos
pop
xlat
loope
xorb
call
sub
pop
xchg
std
pop
mov
push
xor
pushf
mov
push
subb
xchg
fwait
mov
mov
jl
jnp
cmpsb
mov
and
sbb
mov
in
mov
push
dec
in
inc
rclb
iret
sbb
fwait
aam
push
inc
pop
cmp
cmc
xchg
sbb
cs
es
mov
xor
stos
xchg
test
test
not
mov
cmp
mov
sbb
mov
xchg
and
imul
sbb
xor
mov
out
inc
nop
inc
mov
push
sbb
mov
test
push
outsb
es
call
insb
mov
lcall
jl
mov
dec
pop
ret
and
cpuid
mov
ficomps
mov
fwait
sbb
mov
push
lahf
cli
lods
js
std
outsb
xchg
jnp
push
jo
das
and
fmuls
cmp
adc
mov
xor
cmp
mov
add
inc
stc
std
out
daa
ss
test
mov
mov
sti
repz
lea
cmp
push
ja
mov
mov
in
testl
sub
sbb
cmp
loopne
stos
mov
adcl
jg
mov
js
or
pop
push
out
lcall
aas
mov
pushf
fsave
and
das
ljmp
addr16
aam
add
mov
ljmp
sbb
pusha
mov
gs
xor
or
add
add
sbb
sub
adc
cltd
push
push
jmp
sbb
outsb
sub
mov
cmp
pop
xorb
fldt
cwtl
in
or
std
ret
cmpsb
outsb
fildl
inc
sub
sbb
into
sub
ret
mov
push
mov
stc
push
sti
das
sbb
cs
cmpsb
mov
fwait
es
cld
ja
ds
mov
mov
cwtl
mov
dec
shll
aaa
subb
inc
call
shl
mov
xchg
into
test
push
outsb
fisttps
imul
push
cmpsb
les
mov
sahf
popa
outsl
cmp
mov
or
jecxz
icebp
push
mov
sarb
test
and
fxch
cld
xchg
lea
aas
cld
add
in
inc
mov
andl
sub
adc
sti
mov
repz
cmpsb
fcomip
into
pop
jne
mov
fistpll
sti
sbb
int
push
cltd
pop
push
adc
and
cltd
jbe
and
test
mov
jle
cs
andl
lods
adc
sbb
inc
jecxz
lods
movsl
jbe
pop
daa
cli
pop
adc
fnstsw
inc
mov
popa
xchg
lock
fistpll
sub
into
out
jg
out
mov
repz
jns
jb
aad
adc
jbe
mov
rcrl
fldenv
das
fiaddl
dec
in
sti
sahf
sti
pop
int
cmp
pop
mov
sbb
pop
or
adc
jb
mov
ljmp
push
sbb
in
mov
aad
xchg
jg
mov
cmp
mov
pslld
and
sbb
enter
push
mov
mov
dec
subl
dec
xchg
mov
dec
mov
sahf
sub
or
xchg
test
sub
sahf
push
push
rcrl
movsb
iret
fistps
fwait
cmp
lods
fisttpl
es
pop
xchg
adc
stos
push
push
adc
aam
test
popf
sbb
das
or
repz
pop
dec
out
sahf
inc
fmulp
idivl
popa
lods
inc
aad
nop
lods
dec
popf
jl
push
int
lret
xchg
mov
dec
mov
xlat
out
pop
pusha
dec
mov
fmuls
inc
aad
pop
xchg
cmp
gs
cld
cmc
sbb
leave
repz
mov
push
push
push
mov
out
arpl
push
jl
xor
lods
push
cmp
and
xor
sub
mov
inc
iret
clc
or
xor
in
mov
sub
inc
jno
mov
gs
or
sbb
push
mov
iret
out
popa
test
popf
xchg
repz
fwait
je
xchg
cmp
je
xchg
idiv
gs
jb
mov
mov
push
mov
pushf
push
and
xchg
pop
xchg
cli
pop
xor
mov
adc
or
jae
xchg
xor
push
and
mov
das
jb
jns
scas
mov
or
sar
xor
xor
sub
adc
or
jg
pop
mov
cmpb
fistpll
mov
ret
and
xchg
adc
stos
mov
xor
sub
jno
loopne
sub
xor
xor
jns
ret
pop
adc
shll
outsl
lods
gs
jnp
xor
push
add
gs
push
fidivs
cmp
mov
xor
xlat
inc
repz
sbb
mov
test
sbb
movd
stos
xchg
ret
out
xchg
adc
fsubs
clc
sub
xor
mov
in
jns
sbb
repnz
pop
pop
out
arpl
sar
stos
ret
cmp
xor
push
mov
pop
and
cmpsb
adc
inc
mov
loopne
sbb
sub
xor
mul
add
inc
or
or
xchg
lds
lock
cmpsl
push
push
sbb
hlt
stos
and
pop
pop
xor
ret
add
or
fs
inc
mov
jne
pusha
mov
cmp
sub
cwtl
sub
stos
scas
mov
outsl
push
dec
and
mov
lret
sbb
xchg
mov
cmp
in
test
push
repnz
jne
mov
call
mov
mov
and
cmp
dec
sbb
add
int
sub
jecxz
mov
push
add
inc
sti
loopne
jge
aam
dec
pop
ror
inc
xchg
mov
inc
add
cmp
repnz
cmove
push
cmp
fwait
add
jno
cmp
sbb
jb
xor
add
mov
repz
cmpsl
sbb
dec
sti
mov
clc
idivl
pop
mov
cmpsl
loopne
loope
cmp
mulb
mov
ja
call
es
loop
mov
scas
pop
sbb
inc
cmp
and
scas
push
jecxz
out
lds
xor
jae
push
test
cld
cmp
ja
add
push
enter
mov
adc
jno
jmp
sbb
pop
test
int3
loope
mov
jp
and
popf
aam
jle
repnz
lods
mov
rcrb
in
adc
jb
dec
jns
in
lods
sbb
pop
dec
lds
aaa
mov
jge
sbb
cmp
out
sub
fwait
stc
or
lea
jbe
outsl
fisttpl
adc
push
mov
lret
popf
xlat
push
mov
test
repnz
lahf
jnp
adc
cmpl
fcmove
movsl
insl
fisttpll
rorb
clc
gs
sbb
into
xchg
ret
daa
jle
out
xchg
fistps
jo
pop
and
addb
aad
fnsave
xor
jo
or
mov
mov
mov
cld
pop
inc
sbb
push
out
inc
xchg
cmpsb
mov
add
ss
inc
out
xchg
in
pop
xor
mov
loopne
push
in
dec
fistl
mov
pop
inc
mov
mull
addr16
std
test
outsl
cmp
in
xor
pop
jno
cld
pushf
push
xchg
movsl
sti
into
xchg
in
mov
and
cmpsl
fwait
xchg
inc
das
xor
adc
jb
movsl
loopne
mov
test
or
jne
nop
dec
cmp
popa
mov
es
in
aaa
lds
cmp
cmc
mov
ds
iret
out
outsb
mov
inc
xchg
clc
frstor
xchg
scas
sbb
pop
xchg
insb
xchg
mov
movl
repz
repnz
xor
loope
mov
scas
outsl
mov
mov
loope
outsl
or
xchg
mov
push
push
in
cmpsb
mov
ja
and
call
sti
fdivr
xchg
iret
inc
xchg
ljmp
cmp
sti
dec
cld
lret
imul
nop
sbb
lds
cltd
jge
jecxz
jo
fnstcw
inc
fbld
mov
jmp
and
or
scas
clc
movsb
jmp
add
repnz
or
push
outsl
and
jg
out
or
cltd
cli
cmp
lock
or
les
xchg
lds
in
mov
jle
in
mov
bound
inc
mov
outsl
divl
xor
jnp
jo
fstps
sub
jp
or
mov
add
inc
dec
stos
rcrb
sub
mov
and
testl
and
xor
mov
mov
in
jle
je
call
mov
notb
je
rcrl
test
insb
test
test
icebp
jmp
and
adc
cmp
sbb
enter
pop
sbb
pop
mov
cmpsl
push
addr16
fdivrl
dec
loop
ret
ret
pushf
inc
das
or
popa
leave
sub
jge
pushf
icebp
pusha
mov
ret
rcl
adc
xchg
cltd
and
pushf
lods
sub
sbb
popf
repz
dec
dec
mov
daa
stos
lods
cmc
jmp
xor
pop
mov
inc
push
dec
xlat
push
outsb
pop
xchg
cmp
cmpsb
adc
decl
rclb
jle
xor
out
bswap
cs
outsb
add
popa
into
xchg
jo
pushf
das
leave
or
aaa
fistps
cmc
flds
cltd
jmp
inc
mov
dec
and
sub
mov
test
xchg
sbb
push
cmp
out
nop
std
mov
data16
je
int3
mov
mov
sahf
cmpsb
xchg
data16
loop
mov
adc
xchg
xor
jg
jns
call
push
sub
out
xor
jl,pt
and
push
add
adcb
xchg
inc
and
lret
adc
int
pop
pop
mov
in
clc
je
loopne
sub
outsb
push
rorl
incl
mov
loop
int3
enter
frstor
xchg
lods
movsl
out
lahf
jl
jne
pop
sarl
enter
cmp
imul
inc
enter
add
rclb
ret
in
cli
cmp
mov
shrl
mov
pop
sahf
call
mov
mov
add
push
mov
sbb
fnstenv
push
or
pop
rcrb
ja
inc
rcr
mov
lret
in
outsb
inc
repz
pop
fldt
push
xor
lcall
jb
mov
js
repz
aad
sbb
ljmp
mov
dec
movsb
cmpsl
and
xchg
mov
sub
fs
push
lret
sub
shrl
pop
test
adc
je
into
test
movb
or
pop
addr16
inc
jo
sub
outsb
les
repz
jne
adc
push
mov
jb
xor
add
aaa
xor
jno
pop
or
push
or
pshufw
repnz
insl
cmp
mov
xor
jnp
push
cmp
jmp
jge
out
jnp
repz
mov
shlb
int
loopne
sub
fsubrs
mov
sbb
iret
jb
pop
adc
popl
cmc
jno
add
xor
xor
shrl
adc
aaa
aam
fwait
xchg
jne
stc
or
ja
mov
std
inc
into
stc
ret
dec
out
cmpsb
dec
mov
iret
or
mov
sbb
cmp
std
dec
add
ficoml
mov
test
xchg
sbb
pop
popf
decb
mov
or
jae
and
push
pop
add
andl
adc
iret
std
das
aad
imul
js
sbb
enter
mov
ret
or
cmovne
jmp
movsb
xchg
inc
mov
pop
fnstsw
fsubrl
dec
cmp
mov
sbb
mov
inc
or
mov
inc
adc
rcrb
mov
imul
arpl
jecxz
or
pop
inc
into
fsubrl
cmp
add
test
mov
jns
cwtl
jns
ljmp
cmpsb
sub
xor
lea
leave
scas
pop
cwtl
out
loopne
aas
inc
rolb
push
xor
jnp
fucomip
scas
lock
or
cmc
xchg
ds
and
add
cmp
push
add
sbb
ret
mov
and
and
cmpsl
mov
fadds
jge
xchg
loope
or
and
sti
xor
xor
push
jg
fwait
push
mov
mov
rol
pop
sub
mov
sarb
roll
xchg
lret
sti
xor
push
add
pop
sbb
sahf
mov
xor
loope
and
jne
pusha
push
push
cmp
cmpsl
pusha
arpl
jge
or
aaa
mov
mov
loope
roll
rclb
lods
stos
inc
out
cmp
negl
sbb
mov
push
and
and
jb
and
sub
shll
dec
repnz
imul
jge
out
and
addr16
xchg
inc
sub
sahf
xor
jge
arpl
dec
push
xor
cmp
sbb
icebp
dec
sub
or
fmull
pop
mov
cmpsl
cmp
dec
pop
imul
dec
pop
fisubl
fistl
dec
or
ds
cmp
shrl
pop
mov
ret
in
cmpsb
jno
add
insl
inc
and
in
call
int3
pop
mov
push
push
cltd
int3
xor
in
dec
mov
jb
jecxz
sahf
dec
pop
pop
mov
lds
push
scas
sti
testl
andb
xor
dec
pop
leave
in
rorb
ficompl
jmp
outsl
shrl
cld
sbb
imul
pusha
stc
nop
push
push
and
push
pop
xor
jne
insb
jo
pop
cld
stos
into
and
js
int3
aam
ljmp
fwait
movsl
mov
out
shll
addl
loope
inc
ljmp
jbe
lret
je
mov
sbb
cmp
push
mov
in
xchg
nop
xchg
mov
mov
inc
aas
loope
xchg
jnp
movsl
mov
imul
mov
jge
test
and
pop
call
and
mov
cli
clc
or
fsubrs
push
test
arpl
push
sub
cmp
lahf
leave
push
addb
jp
pushf
inc
dec
cmpl
pop
sahf
dec
inc
notb
arpl
les
scas
mov
mov
and
mov
cmp
out
mov
les
jp
adc
mov
pop
xor
xchg
aaa
popf
inc
and
jmp
mov
shlb
test
add
sbb
ret
fisubrl
push
lret
jae
pop
adc
lods
adc
fldln2
push
in
mov
icebp
imul
jl
lds
sbb
imull
das
movsl
fcomps
mov
imull
lret
or
pop
sbb
sahf
data16
jns
add
add
jge
fiadds
sub
outsl
push
push
xor
mov
xchg
sarb
xchg
mov
cmc
sbb
mov
jne
push
mov
fldcw
mov
sub
sub
push
lret
sbb
adc
or
test
mov
push
psadbw
mov
add
mov
nop
lds
and
icebp
jae
sub
gs
cltd
lea
mov
dec
jo
outsl
xchg
repz
dec
mov
adc
loope
mov
cmpsl
push
in
test
jl
lret
pop
dec
inc
push
xor
subb
adc
aam
jb
iret
fisubl
push
push
andb
sar
sbb
adc
inc
dec
mov
xlat
pop
sbbb
cmc
popa
test
stos
mov
add
push
cmc
xchg
pop
loope
in
pop
in
or
xchg
pop
xchg
jmp
add
sbb
mov
neg
repnz
fcomp
aas
push
push
cmp
xor
mov
test
imul
sbb
push
xor
and
xchg
xor
cmp
push
and
mov
outsb
stc
push
sbb
insl
js
pop
and
call
roll
fbld
in
jne
jmp
sbb
stos
jbe
pop
cmp
inc
jl
pop
and
sbbl
leave
mov
cltd
shl
dec
jle
pop
mov
pop
add
nop
mov
sbb
jnp
bound
movb
pushf
or
scas
out
sbb
fildll
movsb
les
jl
icebp
imul
add
xchg
jmp
ss
add
xchg
ds
add
xor
fldl
test
cltd
fisttpll
inc
inc
decb
mov
stos
mov
sahf
das
je
cmc
cli
lea
fiaddl
call
jl
pop
rorl
ja
sbb
cld
or
jne
dec
push
push
jbe
adc
jne
fildll
dec
dec
in
xchg
pop
add
movsl
mov
pushf
mov
cwtl
aam
sub
lods
xchg
lods
or
cwtl
aaa
dec
lea
mov
pop
inc
and
sub
push
dec
mov
push
test
mov
push
push
adc
push
sub
sub
jae
jge
xchg
cs
xorl
add
inc
les
scas
in
xor
nop
hlt
fdivrs
or
jnp
cmp
jge
xorb
jnp
inc
cld
adc
clc
mov
inc
cmpsb
adc
imul
sub
lcall
mov
out
hlt
ds
iret
mov
or
dec
add
fistps
outsb
addr16
das
jns
sub
jmp
jecxz
mov
popf
shlb
pop
iret
mov
cmpsl
scas
clc
jmp
sbb
push
mov
sub
jp
sahf
mov
mov
mov
fadds
fcom
test
fisttps
cmp
push
daa
aam
xor
mov
and
sbbl
nop
push
test
repnz
rcll
inc
movsb
inc
pop
test
xor
adc
mov
pop
add
fstpt
xor
xor
pop
call
cmp
scas
xchg
pop
pop
jno
mov
sub
and
fidivrs
push
inc
call
inc
ffreep
loopne
xlat
notb
sbb
xor
pop
pop
lea
adc
mov
mov
or
push
mov
jl
loopne
cmp
jg
mov
push
fldl
jecxz
push
lea
xchg
test
in
xchg
test
mov
cmp
and
cmpsl
out
xchg
sbb
dec
in
xchg
add
cmpsb
mov
cmp
push
ds
enter
cmp
fwait
adc
jge
cmp
out
cli
pop
jg
aad
enter
inc
cmpsb
fwait
or
adc
xchg
sub
rcrl
orb
icebp
cmc
mov
dec
cmpsb
orl
cs
pop
shll
lcall
ret
or
call
outsl
push
xchg
in
push
mov
and
or
arpl
and
movsb
inc
mov
lods
sbb
outsl
imul
mov
test
scas
mov
add
addb
in
fnsave
fidivl
call
dec
lock
je
and
xchg
dec
dec
in
sub
push
pop
sti
and
inc
add
scas
mov
dec
add
sarb
fildll
gs
subl
or
fnsave
rol
push
adc
mov
test
out
jmp
ss
fisubrl
cmpsb
scas
and
push
mov
jnp
push
cs
cmp
mov
lret
sub
adc
mov
dec
stos
pop
iret
subl
lock
gs
stc
cs
dec
lcall
dec
int
jecxz
add
push
mov
loop
cltd
mov
in
sub
sbb
and
and
jecxz
sub
xchg
xchg
mov
jnp
ds
push
xchg
ja
dec
xor
ret
inc
clc
mov
mov
mov
frstor
out
jne
pop
pop
xchg
hlt
lret
shl
xor
loope
ror
inc
ljmp
mov
xor
rol
mov
pop
xor
and
sahf
cld
movsb
xchg
cmc
jge
in
mov
lret
adc
rol
push
out
xor
daa
test
jmp
jae
jo
add
mov
xchg
mov
lods
jecxz
mov
pop
xchg
test
push
sub
jecxz
lods
cmp
mov
ljmp
imul
fisubrl
sub
insb
or
test
insl
jmp
xor
pop
loope
mov
pop
movsl
push
cs
dec
lods
std
out
push
imul
pop
fldl
jg
ror
mov
je
jmp
std
mov
outsb
inc
out
or
jle
xchg
push
or
pusha
mov
daa
in
push
cmpsb
cmp
in
negb
ret
pop
mov
jno
ret
xor
xchg
xchg
and
sbb
in
call
jecxz
cmp
pop
out
cmp
push
adc
mov
in
cmp
add
xchg
mov
mov
aaa
push
xchg
cmp
test
and
in
mov
push
clc
sub
pushf
leave
pop
imul
sbb
mov
pop
xchg
jbe
les
jae
dec
js
pusha
sbb
mov
cmpsb
cmpsb
xchg
xor
and
jno
xchg
pop
jbe
cmp
insl
arpl
lock
subb
push
repnz
push
cmp
xchg
adc
xor
fiadds
lret
test
aam
scas
dec
xchg
cmp
call
push
and
mov
sub
pop
int
mov
stos
mov
xchg
sahf
int
or
push
sub
aam
jp
jne
test
lea
sub
out
shrb
xchg
cmp
mov
fs
or
mov
mov
ljmp
dec
or
shlb
or
inc
test
insb
mov
lods
and
and
pop
xor
js
mov
loop
xor
xlat
int3
cmp
out
cmpsl
mov
mov
mov
iret
push
ja
mov
scas
jbe
xorl
out
aaa
scas
lea
pop
adc
cmp
cs
dec
ret
cld
gs
daa
sti
mov
inc
and
mov
test
sub
xor
fwait
stos
mov
dec
enter
mov
add
adc
mov
push
xchg
shll
cltd
loop
cmp
mov
jbe
cwtl
push
pop
mov
mov
lcall
xchg
mov
insb
jnp
cmpsb
loope
jnp
icebp
push
sub
sub
adc
inc
jne
pop
popa
popf
dec
dec
aad
pushf
add
mov
mov
xor
push
jg
mov
xchg
test
std
add
in
and
pop
push
push
lock
xor
adc
pop
aas
ja
push
out
inc
out
lret
dec
outsl
cmp
push
mov
mov
xor
sub
jmp
mov
or
fsubrl
push
or
pop
jbe
and
or
dec
inc
ljmp
adc
test
repz
jbe
es
rol
popa
xchg
add
out
jg
cli
pop
int3
testb
xchg
xor
fcmovb
push
and
outsb
loope
cmc
jp
dec
pop
xchg
push
xor
aaa
xchg
dec
sbb
ljmp
push
out
mov
scas
sbb
adcb
ds
hlt
movsb
repnz
inc
and
mov
jo
push
mov
xchg
xor
xchg
inc
jo
push
mov
jge
jbe
ret
xchg
xor
mov
cmp
adc
vpsllq
jmp
pusha
stc
out
sti
js
pop
movsl
mov
sahf
negb
mov
xlat
shlb
push
and
test
imul
dec
je
cmp
sbb
stos
fsts
icebp
and
lods
sbb
sbb
lret
mov
dec
out
xor
mov
xchg
jle
sub
push
xchg
mov
and
test
popf
xchg
fidivl
in
push
aam
xchg
aad
jmp
add
imul
mov
adc
aaa
adc
mull
ljmp
outsl
cs
jecxz
add
jmp
xchg
pop
cmp
cmp
lds
xchg
jnp
jae
cld
hlt
adc
icebp
pop
testb
jnp
mov
push
add
pop
lea
mov
arpl
add
lea
sbb
mov
mov
sbb
dec
sub
mov
aam
mov
pop
push
cltd
cmp
pop
inc
aas
xor
or
lret
popf
mov
adc
xor
inc
mov
and
pop
repz
in
push
clc
insl
sti
pop
sbb
dec
xchg
add
in
les
les
fcompl
mov
pop
idiv
mov
jle
inc
aad
mov
out
roll
add
inc
shll
xorb
sbb
push
mov
ss
nop
mov
dec
pop
xor
hlt
push
lods
inc
xor
and
cld
lds
xor
xchg
ja
cmpxchg
add
jae
test
jl
mov
fwait
dec
xchg
gs
or
jne
leave
test
cmp
dec
adc
jmp
xor
push
stos
ds
loope
movsl
mov
push
loopne
cmc
xchg
rcr
mov
addr16
push
dec
adc
ja
xor
jb
and
mov
mov
sub
mov
imul
sbb
xlat
filds
call
sti
jle
adc
adc
subb
cmc
sub
xor
add
pop
hlt
js
or
mov
sub
mov
imul
scas
sbbb
in
ss
lcall
xchg
pop
int3
loope
in
cmp
and
push
aam
lret
jp
mov
scas
mov
push
lock
mov
imul
je
mov
fcompl
daa
push
das
pop
sbb
ficompl
stc
or
mov
sub
sbb
inc
out
std
mov
leave
movsl
push
in
push
dec
xor
adc
nop
ret
dec
stc
cli
stc
addr16
mov
dec
mov
sub
jo
push
std
jecxz
dec
shll
jnp
iret
hlt
clc
cmpsl
stos
lds
xor
mov
cli
stos
pop
fldenv
add
movsl
pushf
jae
jnp
dec
inc
mov
jnp
fbstp
adc
lret
jmp
outsb
arpl
iret
jecxz
lock
insl
push
fsubrl
xchg
mov
sub
movsl
insl
mov
mov
sub
andb
sbb
gs
cwtl
aaa
int3
popa
mov
xorl
xchg
jl
fimuls
xchg
ss
std
push
jl
xor
or
test
popa
pop
dec
ret
out
sahf
addr16
outsb
or
mov
mov
dec
call
sub
into
repz
or
mov
mov
les
mov
pusha
inc
mov
jne
loop
mov
outsb
mov
cmp
js
sub
pop
push
push
mov
sbb
loop
and
pop
and
inc
pop
and
mov
fstpl
sti
out
cld
pop
sbb
andl
pop
stc
jp
fwait
adc
mull
xchg
mov
aam
or
lock
lret
push
out
ss
int
imul
enter
aaa
inc
jp
sbb
xor
mov
inc
je
adc
ljmp
pop
pop
jge
mov
and
popaw
lahf
std
jmp
or
push
cltd
or
push
xor
in
xor
mov
rol
shlb
mov
or
sahf
mov
sbbl
out
pushf
mov
xchg
or
fisubl
mov
repz
adc
mov
xor
mov
or
lea
xchg
mov
cmp
in
adc
push
adc
inc
leave
lods
jge
fstpl
sub
add
xor
loope
jne
mov
insl
xor
mov
mov
pop
je
cmp
arpl
mov
rcrl
xorl
arpl
push
or
in
cmpsb
ljmp
filds
sub
dec
sbb
ret
ja
rclb
xor
or
lret
call
dec
pop
mov
pop
mov
or
fistl
mov
cmp
mov
lret
mov
cltd
mov
xchg
push
lock
push
cmp
iret
fsubs
arpl
sub
test
or
iret
in
mov
sqrtps
xor
cmpsl
jp
and
adcb
aas
sub
push
cmp
cmpsl
fcomps
mov
xor
shr
inc
push
adcb
sbb
int
cmp
rcll
cmc
jnp
lock
mov
mov
in
xchg
call
decl
mov
sub
loopne
inc
add
lods
aas
mov
adc
arpl
lods
jno
cmp
fmull
cmpl
lret
aad
sbb
jmp
pop
mov
pop
jg
jecxz
adc
callw
pop
mov
addl
dec
cmp
leave
ret
mov
rclb
adc
stos
dec
lods
jae
jecxz
jne
cltd
xchg
clc
rolb
dec
cli
mov
lret
and
xchg
jbe
std
out
loop
pop
mov
and
popf
std
xchg
insl
sub
mov
mov
repnz
add
sahf
pop
jle
cld
mov
pop
rorl
push
loope
push
mov
aas
pop
cltd
repz
sbb
mov
pusha
test
pop
mov
loop
out
cmpsl
dec
inc
xor
cmp
stos
push
push
insl
mov
out
sbb
scas
imul
inc
int3
adc
cmp
add
rcrl
pop
adc
pop
pop
push
dec
mov
xor
mov
popf
cmp
mov
xor
outsl
icebp
lahf
sub
cmovs
pop
std
jne
push
icebp
loopne
mov
daa
aaa
pusha
test
jno
enter
jbe
mov
adc
mov
aaa
mov
xor
orl
inc
jb
or
xchg
mov
cli
and
out
sub
fmull
scas
popf
lods
push
clc
cwtl
stc
cmc
stc
push
push
dec
pusha
and
bnd
jne
sub
je
rcrl
mov
dec
or
add
lcall
sbbb
dec
aad
sti
popf
jns
push
xor
ret
ss
addb
xchg
sub
dec
mov
xchg
fcoml
testb
sub
shrb
iret
adc
jp
std
outsb
pop
jo
cli
xchg
xchg
pop
mov
into
cmpl
mov
sbb
aas
mov
mov
loope
dec
sub
jbe
test
push
repz
cmp
aad
stc
jp
sub
xor
repz
fmulp
xor
lods
push
sarb
imul
out
or
setp
push
dec
jmp
and
ret
enter
sub
dec
lock
addr16
xchg
aas
jmp
inc
daa
aas
and
mov
sub
das
pusha
pushf
sbb
xor
ficoml
dec
lds
pop
movhps
cli
insb
es
mov
aaa
cmc
push
cmp
sahf
data16
jns
mov
adc
ljmp
dec
loope
sbb
out
in
pop
xor
jmp
xchg
xchg
fsubs
xor
push
add
add
hlt
or
pop
cmp
subb
mov
test
jl
add
pop
iret
shrb
pop
push
sub
lret
or
enter
pop
cmpsl
sbb
push
lret
mov
mov
inc
pop
nop
mov
icebp
iret
or
and
inc
out
jmp
mov
sbb
xor
stos
outsb
cmp
mov
adc
mov
pop
les
pop
orb
mov
xchg
addl
xchg
ret
cmc
xor
push
mov
inc
cmp
xchg
jmp
adc
dec
out
mov
in
jne
into
mul
xor
mov
imul
test
jnp
mov
mov
insb
ret
lock
inc
pop
push
sbb
xchg
fcmove
cmpsl
sub
mov
clc
mov
inc
lret
rorb
ror
sub
lea
fisubl
pop
cmpsb
adc
mov
outsl
out
cmp
mov
dec
fs
jle
nop
dec
inc
push
push
adc
push
jl
jne
fwait
and
mov
inc
out
imul
xor
push
pop
xor
aas
and
bound
out
inc
or
shrb
cmp
das
and
ds
xor
ds
adcb
or
test
and
pop
xchg
and
or
aaa
mov
cli
dec
push
jns
inc
xor
inc
subl
stos
popa
or
inc
and
xor
shlb
pop
or
jo
mov
push
int
and
push
rcrl
js
fcompl
mov
jl
fcompl
std
int
lods
fwait
pop
cmp
and
pop
push
imul
push
icebp
into
fadd
cmpsl
ss
rorl
test
dec
lds
cmp
fmulp
mov
dec
add
sbb
daa
aas
pop
shrl
ss
in
mov
and
sahf
add
and
fs
sub
rcrb
mov
inc
mov
bnd
sub
or
ljmp
aaa
or
push
add
push
insb
and
mov
adc
jnp
push
movb
sub
popa
mov
xor
jle
push
daa
cltd
call
push
pop
pop
adc
push
mov
cli
xchg
cs
addps
cli
pop
push
shrb
or
xchg
mov
sbbl
xchg
fildll
add
xor
jge
test
jp
ljmp
and
in
sbbl
cmp
in
xchg
inc
shrl
cmp
jg
f2xm1
pop
inc
cmp
sub
xchg
xor
aas
imul
sub
mov
inc
mov
mov
inc
fwait
lcall
push
sub
pop
sbb
mov
mov
and
insb
cwtl
jo
cmp
mov
je
test
int
arpl
dec
push
jne
repnz
sbb
mov
mov
jno
fstl
cmpsb
sahf
xor
and
sub
pusha
mov
mov
mov
push
stc
out
inc
loop
push
cmp
lods
mov
int3
mov
iret
ja
inc
lea
pop
jle
les
das
daa
dec
call
arpl
dec
sub
xchg
and
inc
movb
dec
addl
push
xor
loop
insb
push
filds
movsb
icebp
dec
mov
add
fidivl
nop
in
fistl
lret
mov
add
das
cwtl
and
pop
sahf
add
lcall
adc
pop
repnz
dec
xor
add
jecxz
mov
adc
es
and
enter
jp
xor
dec
dec
loop
call
or
icebp
cs
cmp
cmc
jns
sub
fmul
in
leave
je
inc
pusha
clc
mov
add
rorl
add
insb
inc
cld
popf
xor
daa
insl
cld
and
test
push
adc
aam
andb
pushf
dec
rorb
mov
pop
outsl
pushf
push
std
dec
jo
pop
adc
pop
lock
inc
mov
add
push
and
sub
xor
push
xchg
repnz
leave
adc
adc
mov
push
sbb
jno
sbb
call
xchg
dec
mov
lds
jno
xchg
jae
fcmovne
jmp
dec
data16
sub
mov
lcall
out
xchg
lcall
inc
inc
cmp
or
lods
mov
xchg
fsubrl
popf
loope
mov
xchg
fidivrs
repz
pop
stos
jp
pop
inc
mov
jo
enter
das
js
rorl
push
hlt
scas
pop
push
jns
js
cmp
dec
into
jg
mov
imul
push
mov
jno
nop
adc
inc
dec
jecxz
xchg
jmp
lcall
int
mov
movsb
or
ficoml
push
jg
mov
mov
rcrb
stos
adc
push
jge
cwtl
aas
xchg
sub
into
aam
out
mov
mov
mov
fists
xor
mov
xchg
mul
pop
lea
mov
mov
mov
ds
mov
cltd
fsubrl
push
adc
push
out
loope
jae
pop
dec
sbb
fwait
pusha
pop
shlb
testl
push
fsubrl
mov
add
mov
xchg
sbb
jle
stc
mov
aaa
or
in
imul
in
mov
xor
int3
mov
mov
enter
std
xchg
dec
mov
and
cmp
push
aas
icebp
push
icebp
push
shlb
in
lahf
dec
mov
outsl
mov
push
mov
jne
jecxz
push
push
mov
and
aad
sbb
les
and
add
rolb
and
jae
cmp
mov
ljmp
cli
jb
push
sub
sbb
pop
in
mov
xchg
pop
adc
push
stc
xchg
out
pop
add
jp
es
fs
jns
xchg
or
out
push
sbb
dec
js
mov
cmp
cmp
clc
inc
sbb
mov
movl
lock
repz
outsl
mov
aaa
mov
and
cs
adc
push
xor
mov
fnstenv
push
xor
cmpsb
popf
insb
cmp
jbe
daa
xchg
xor
mov
jmp
fdivl
ds
adc
cmp
sahf
xchg
cmc
add
sbb
inc
movsb
pop
xchg
clc
jge
dec
pop
mov
sbb
cmp
packssdw
sub
je
jmp
inc
fdiv
mov
std
push
and
aad
dec
imul
pop
sti
jno
xchg
xor
cmp
push
daa
add
sub
pop
repz
mov
scas
ss
subl
icebp
pop
insb
sub
pop
mov
rcrl
add
mov
jno
aaa
sub
loopne
es
outsl
xor
repnz
and
repz
daa
sbb
fsubs
rorb
clc
shll
push
and
push
cmc
dec
outsb
adc
hlt
mov
mov
adc
in
out
mov
enter
fmuls
loope
pop
test
je
nop
and
sahf
ret
xchg
xor
or
and
push
fwait
dec
mov
imulb
lret
cmp
outsb
inc
bound
imul
inc
lds
add
imul
stc
sbb
or
sub
test
bound
nop
or
in
imul
mov
jnp
js
mov
cld
imul
sbb
mov
mov
xchg
negl
fdiv
arpl
int3
inc
adc
cwtl
lret
pushf
fbld
cmp
pop
mov
and
xchg
xor
fisubs
fdivs
les
out
shr
push
inc
aas
jne
xchg
insl
jmp
pop
jns
add
mov
subb
test
or
setbe
mov
cltd
add
adc
fbld
cmp
xchg
movsl
shr
shlb
aas
and
lock
or
and
dec
or
imull
xor
xchg
ljmp
stos
dec
pop
lds
add
repnz
sub
sub
test
scas
arpl
jecxz
dec
loopne
jmp
jnp
xchg
dec
push
and
mov
sbb
sub
pop
fs
sbb
test
add
push
mov
outsb
out
pop
loopne
pop
or
sub
sub
mov
mov
push
jp
imul
pop
xor
push
mov
subb
and
cbtw
pop
add
or
push
leave
xchg
js
sti
adc
icebp
fidivrs
xlat
pop
cwtl
sahf
mov
fbld
int
es
push
xchg
mov
mov
bound
mov
fs
jae
lahf
xchg
loop
mov
dec
out
int
sub
ss
movsl
test
scas
movsb
notb
dec
cmpsb
bound
scas
sbb
xor
inc
inc
dec
imul
ds
mov
add
or
xlat
lret
add
fs
adc
mov
pop
fisubl
inc
push
out
aaa
ret
dec
lcall
pop
mov
leave
mov
mul
js
push
fs
ja
jge
jnp
stos
cmp
fdivrl
ret
or
jns
xchg
das
cmpb
outsl
sbb
fbld
shlb
xchg
sub
push
and
das
push
out
fwait
xchg
sbb
stc
dec
inc
push
movsl
mov
iret
ljmp
cmp
cbtw
pop
mov
stc
jecxz
out
mov
shrl
movsb
daa
jnp
jns
mov
nop
ja
mov
fidivrs
out
mov
sbb
mov
sub
stos
xor
mov
xchg
stc
inc
sub
negb
mov
xor
mov
rorb
mov
add
movsl
mov
dec
lock
addr16
push
jne
add
outsl
sti
movsl
lods
out
push
sbb
iret
fbld
lock
rcrb
leave
xor
or
jg
stos
xor
das
stos
push
jg
rcl
arpl
in
fstpl
dec
mov
mov
xor
das
inc
xor
lahf
loop
lahf
xchg
or
pop
dec
sahf
subl
out
xchg
int
dec
mov
out
fsubr
in
xor
xchg
lahf
addb
ja,pn
sub
testl
or
push
fs
mov
sub
dec
aaa
pop
test
and
pop
inc
aaa
fs
mov
and
jecxz
fstl
mov
aam
push
adc
test
loopne
xchg
cld
cmp
arpl
or
test
fcoms
out
aaa
std
push
stc
loopne
jb
insb
inc
xor
cld
push
aam
fwait
cs
popa
outsb
push
cmpsl
lahf
insb
sbb
mov
fwait
mov
sub
testl
aaa
sbb
movsb
sarb
mov
jbe
mov
mov
popa
cmc
ss
ja
call
adc
inc
mov
pop
pop
cmp
ljmp
and
jp
pushf
inc
xchg
data16
xchg
cltd
sbb
jo
or
push
or
mov
jnp
orb
push
mov
sarl
out
lret
mov
pop
dec
popl
mov
cs
pop
mov
pusha
or
pop
aam
rclb
sub
dec
aad
push
adc
or
cld
leave
and
into
add
lahf
mov
cmpsl
popa
lret
aaa
mov
shrb
lock
and
inc
mov
pusha
insl
sbb
xchg
adc
movb
stc
push
pop
out
hlt
rcr
stos
cltd
cmp
mov
xchg
jp
or
xor
loopne
jl
rorb
dec
int3
cltd
fisubrl
xchg
adc
jne
sbb
in
push
test
push
xor
out
adc
mov
cltd
clc
shlb
push
mov
sti
addr16
repnz
or
push
ret
jg
mov
dec
rcr
rdtsc
out
out
push
push
out
ja
std
popa
xchg
or
xor
mov
add
push
ficoms
rolb
daa
xor
into
scas
and
mov
xor
sub
andl
push
adc
movsl
jmp
mov
pop
icebp
in
mov
push
into
jno
lods
sub
jmp
fidivs
and
lds
mov
loopne
movsb
fistpll
push
jbe
sub
mov
push
xlat
add
and
and
xchg
popf
popf
ret
sub
lcall
jb
xor
loop
das
xor
ficompl
add
jne
arpl
cmp
sub
aas
mov
xor
add
and
inc
xor
jae
push
setnp
into
test
jnp
repnz
fsubr
orl
cmp
loop
ljmp
sub
loop
jp
sub
cmp
mov
mov
xorb
mov
test
rcl
and
test
lock
or
hlt
pusha
mov
or
inc
leave
or
out
leave
jmp
fnstenv
ja
xor
sahf
rolb
lret
mov
mov
push
or
sbb
jae
mulb
sbb
push
push
cmp
popa
mov
mov
lret
fdivs
add
xor
cmp
sub
or
adc
insb
cmp
idivb
jge
mov
fcomps
mov
jl
aaa
xorb
push
lods
xor
jp
fsub
sub
xchg
fidivs
cltd
sub
int3
lea
in
pop
adc
xchg
or
ret
mov
addl
xchg
mov
jnp
aas
jecxz
adc
add
cld
cmp
xchg
or
orl
aas
sti
iret
xorl
pusha
imulb
scas
pop
mov
adc
les
mov
sub
xlat
mov
pusha
mov
jl
popa
js
daa
addr16
xor
test
jl
bound
sbb
aam
cmpsb
add
jae
push
insb
bound
jne
sbb
in
ja
aam
scas
xlat
andl
ljmp
mov
pop
sbb
mov
sub
mov
mov
int3
test
mov
push
popa
dec
pop
ss
dec
jmp
ja
loope
fstp
inc
arpl
fbstp
mov
mov
out
lret
fcoml
mov
pop
cli
mov
push
fsubp
pushf
jp
outsb
into
add
adc
mov
sub
insl
fcoms
mov
lahf
mov
sti
mov
jl
sahf
xchg
xchg
pop
orw
hlt
mov
inc
xchg
and
jg
xor
out
aaa
pop
sbb
xchg
int3
mov
cmp
or
mov
adc
sub
mov
outsl
cltd
xor
arpl
dec
xchg
pop
jns
ret
inc
dec
enter
inc
gs
mov
jae
inc
dec
insb
jg
mov
sti
xor
cs
lcall
jb
sahf
and
lods
int
fsubs
shlb
or
mov
push
call
fistps
xchg
mov
xor
ret
mov
push
rorl
push
push
in
loopne
adc
mov
shr
adc
adc
inc
pushf
add
jg
mov
mov
and
sub
out
xchg
xchg
dec
sbb
mov
shl
or
pop
or
orl
push
mov
and
cmpsl
mov
out
loope
jp
clc
test
or
mov
push
xor
push
iret
loop
lock
ss
inc
ja
test
add
adc
bound
jnp
pop
add
cs
rcl
or
lock
cwtl
push
ret
repnz
sbb
shl
repnz
mov
mov
mov
xchg
mov
push
mov
das
bound
jb
lret
mov
inc
or
mov
hlt
xchg
test
imul
cmpsl
jne
fcmovb
je
xchg
fmuls
push
lods
lahf
rol
xlat
stos
enter
push
sbb
stc
xchg
ror
cltd
nop
andl
out
adc
movsb
sub
pop
jnp
cmp
orl
testl
cmp
or
sti
fistps
or
cmp
call
or
adcb
cmpsb
adc
push
insl
and
cmpb
lods
insl
test
std
mov
jnp
xchg
push
push
push
jp
jecxz
imul
cmc
xor
mov
dec
xchg
aas
int
xor
mov
cmp
std
mov
cmpsl
xor
into
sub
push
cmpsl
sbb
test
mov
stc
lahf
addr16
or
cs
push
push
adc
sbb
and
sti
pop
pop
or
repz
movsl
xchg
cmp
test
mov
mov
repnz
sbb
jns
adc
in
xor
in
fimuls
rorl
sbb
insl
cltd
loop
jnp
xchg
adc
pop
push
stc
xchg
mov
add
inc
xor
fcomi
sub
push
or
mov
dec
sbb
into
aas
insl
outsb
add
cmc
vpmulhw
out
popa
mov
inc
xchg
out
push
pop
dec
insb
jo
mov
or
mov
data16
mov
pusha
outsb
xlat
in
fisubl
ror
push
and
cmc
data16
cmp
lret
xor
mov
push
iret
aam
rorl
inc
adcl
mov
pusha
cmp
pop
or
ds
shrb
lahf
in
mov
xchg
and
push
mov
dec
pusha
mov
push
mov
xchg
fisttps
insl
dec
mov
inc
dec
popf
sub
test
cs
andl
pop
in
std
jge
jns
imul
xchg
pop
test
add
push
in
cmp
cld
dec
xchg
or
jbe
stc
inc
loop
mov
xchg
sti
cmc
sarb
xchg
aas
outsl
xor
push
jne
bound
adc
and
stc
stc
xchg
cwtl
sbb
mov
stos
push
in
divl
xor
mov
sub
daa
jae
into
push
jns
out
ds
pop
fsub
outsb
sbb
cmp
and
mov
dec
testb
aas
jnp
imulb
mov
scas
jg
shrl
pop
xor
push
jp
into
add
push
stc
pushf
pusha
sub
dec
bound
sbb
lcall
adc
pushl
dec
gs
mov
jge
fidivrs
and
sbb
sbb
push
push
adc
adc
aam
repz
repnz
xchg
addl
pop
lock
jbe
jno
mov
cmc
and
dec
pop
stos
jbe
push
adc
ds
inc
and
fisttps
leave
aam
and
dec
gs
fdivl
insb
or
sbb
mov
divb
lock
iret
cs
ret
test
ljmp
out
mov
pushf
jge
bound
pop
mov
inc
pop
xor
and
jnp
outsb
adcl
ror
jae
packuswb
pop
add
les
xchg
pop
push
push
jnp
lods
cwtl
movsl
or
rorl
mull
xor
pop
pop
mov
lea
ljmp
call
movsl
movsl
sub
mov
xlat
mov
ds
pop
lods
and
lahf
jmp
jl
loop
fdivs
inc
shll
stos
repnz
clc
xchg
adc
arpl
lods
in
and
leave
and
push
pop
mov
adc
imulb
mov
out
pushf
add
mov
imul
pop
mov
in
push
and
cmp
jge
pop
sub
movsl
adc
cmpsb
adc
bound
dec
and
xchg
in
push
sbb
jbe
icebp
inc
dec
inc
repnz
pop
pop
andw
aad
icebp
rolb
lcall
not
or
aas
sbb
jb
and
sbb
push
repnz
fwait
aad
out
jp
lcall
sbb
sbb
sub
lret
in
ja
aam
mov
out
inc
sub
imul
bound
rclw
insl
cmp
fldl
stos
cmp
in
inc
cwtl
int
add
xor
pushf
sbb
lret
aam
pop
aam
cmp
and
xor
sahf
mov
mov
pop
xor
pop
and
or
jae
fistpl
mov
int
pop
out
inc
cmpsl
icebp
or
scas
aas
sahf
aam
pusha
push
mov
and
cmp
mov
push
xorl
aam
push
insb
sub
sbb
clc
mov
in
pushl
cmpsl
divl
loopne
aam
or
cmp
push
ja
inc
daa
inc
xor
ret
stos
cld
out
jns
dec
mov
in
push
lret
cwtl
mov
call
pop
mov
test
xchg
push
push
pop
aad
sbb
adc
pushf
xchg
push
add
jl
sarl
dec
adc
das
dec
out
push
jmp
mov
jle
mov
and
lock
fucom
mov
fldcw
pop
cmpsl
pop
jl
in
orl
sbb
mov
pop
xchg
arpl
mov
mov
push
sub
adc
adc
push
ljmp
loop
add
mov
out
lcall
cmp
out
pop
scas
or
test
inc
repnz
rolb
xchg
out
cmc
pop
jnp
mov
sbb
inc
rcrl
sub
js
pop
rorb
insl
inc
xor
mov
push
cmp
ja
adc
insl
nop
inc
jae
sarl
cmp
fbstp
mov
shr
out
int
cmc
in
push
jecxz
cwtl
mov
xchg
loop
jmp
daa
push
lods
xorl
test
push
adc
out
lods
ljmp
test
or
enter
xlat
sub
jg
scas
cmpsb
stc
add
xlat
pop
in
push
cmpl
lret
xchg
bound
mov
mov
or
push
sbb
pop
leave
lods
fbstp
push
sbb
stos
sti
mov
and
sbb
cmp
mov
xor
inc
xchg
cmp
or
cmc
es
pop
jle
sbb
push
dec
sub
xor
data16
push
or
leave
and
xor
stos
xor
xchg
adc
es
adc
call
sbb
rorl
push
jecxz
push
lahf
add
loope
and
push
imul
jnp
stos
or
hlt
dec
xor
lods
pop
adc
xchg
orb
and
inc
mov
test
js
pop
cmpb
mov
and
movsl
fistpl
ja
adc
cmpl
jmp
add
sbb
pop
int
jg
and
es
push
cmp
loop
adc
lcall
xchg
xchg
mov
mov
inc
pop
jg
adc
shlb
in
inc
enter
sub
sti
inc
xchg
pop
gs
jg
test
leave
dec
outsl
push
outsl
pop
notl
xor
cmc
or
xor
int
adc
shrb
sti
loopne
inc
in
mov
inc
mov
imul
xchg
push
out
or
inc
dec
mov
lret
adc
xor
push
sub
int3
xor
sbb
xchg
popf
mov
aaa
jnp
mov
jne
lods
pusha
or
cmp
sarl
pop
sbbl
add
pop
scas
add
inc
xor
pop
dec
xchg
pop
or
int
fsubrs
xor
sbb
in
sbb
popf
xchg
xchg
loopne
add
pusha
inc
gs
push
cwtl
sbb
lds
ret
imul
lret
add
add
adc
popf
xor
add
orb
mov
jl
mov
and
xchg
adc
jns
pop
mov
fimull
add
cld
or
cld
enter
movsb
sub
lret
nop
cld
pusha
stos
lcall
cmpsl
mov
nop
xor
add
pop
dec
push
lods
imul
xlat
stos
push
subb
inc
ja
cmp
xchg
enter
push
aas
and
push
fisttpll
dec
loope
jns
push
pushf
cmp
out
insb
sub
cmp
jno
jno
stos
movsl
aaa
into
sahf
jecxz
mov
mov
add
mov
fists
adc
std
pop
idivb
lods
nop
repnz
inc
mov
push
inc
cmp
rclb
add
loopne
in
mov
rol
outsl
in
mov
pop
in
iret
push
adc
fs
daa
mov
push
sbb
mov
xchg
sbbl
inc
incb
sbb
lds
push
push
stos
std
bound
neg
mov
popf
push
mov
inc
pop
sarb
enter
cmpsb
mov
sub
dec
fimuls
push
test
sbb
addr16
adc
jl
lahf
lcall
jge
dec
push
pop
out
lahf
fnstsw
jmp
xchg
push
mov
mov
pop
test
push
xchg
jns
add
imul
out
jo
xor
jne
insl
adc
lahf
ja
mov
add
dec
repz
sub
dec
jbe
pop
pop
lods
cmp
mov
xor
lret
xlat
add
sbb
test
data16
mov
add
addr16
lods
cmp
in
add
mov
sub
inc
les
sub
add
cld
daa
das
notb
push
in
mov
dec
dec
and
mov
mov
or
scas
inc
lock
or
adc
bound
sub
outsb
sbb
pop
stc
pop
dec
and
add
test
adc
aam
in
int
push
pusha
js
rclb
loop
divb
lahf
jecxz
adc
dec
add
shrb
movsl
ss
movsb
jne
sbb
aaa
mov
adc
add
jbe
add
mov
imul
sbb
cmc
mov
mov
std
xchg
jo
pop
out
xchg
pushf
push
or
mov
hlt
mov
cs
mov
sti
jle
mov
rolb
xchg
adc
pop
push
xor
lea
sub
ljmp
mov
int
nop
movsb
mov
push
std
stos
bound
add
mov
fcmovnu
fildl
adc
jb
inc
fwait
jmp
sub
dec
int
push
decb
test
jl
push
aam
add
jne
lods
gs
insb
mov
jg
xor
push
nop
mov
pop
jae
ja
pop
jb
shrb
xchg
cmp
pop
hlt
sub
pop
hlt
sub
dec
cmp
sar
jmp
push
jb
lcall
dec
ds
popa
pop
testb
xchg
testl
fs
outsl
cltd
fldcw
or
jne
inc
jp
pusha
jb
out
inc
ljmp
jnp
inc
jecxz
lahf
cmp
pop
lods
lods
cltd
lods
in
mov
add
pop
pusha
jbe
mov
and
mov
out
mov
xchg
cmp
lcall
and
pop
xchg
out
hlt
or
loope
inc
ret
jge
mov
into
aad
mov
push
pop
jo
flds
push
hlt
mov
in
jb
and
inc
cmc
clc
test
stc
inc
jmp
int3
mov
or
sbb
aas
xlat
lock
das
dec
mov
movsb
mov
pop
fidivrl
mov
jno
dec
lea
adc
rcll
add
inc
sub
adc
scas
xchg
dec
cmpsl
sti
push
in
loop
in
mov
phaddd
add
push
xor
mov
and
lcall
lods
mov
in
jbe
in
mov
fprem1
dec
test
jmp
add
outsl
cmp
mov
cmp
mov
mov
mov
in
movsl
imul
add
mov
addr16
jp
cmp
outsb
pop
mov
pop
and
scas
lret
and
inc
bound
or
xor
push
lods
in
mov
mov
pop
add
or
inc
mov
cwtl
stos
cmpsb
add
fadds
andl
cmp
imul
sub
xchg
filds
jmp
mov
das
mov
push
daa
and
lcall
pushaw
or
pop
add
aas
push
pushf
ret
mov
sbb
pop
popf
sbb
and
out
mov
sar
xlat
and
sub
dec
mov
or
xor
fwait
xorb
adc
add
lret
and
jg
sbb
and
bound
loop
faddl
sbb
push
repz
sti
pop
fdivp
ret
pop
mov
fnstsw
sub
fsubr
add
dec
adc
mov
mov
cmp
and
stos
lret
inc
std
xchg
and
js
sbb
stos
mov
lds
cmp
cld
ds
pusha
jg
push
mov
xor
sbb
push
sub
iret
jae
mov
jp
ds
mov
mov
pusha
addl
sub
jle
hlt
inc
cmp
xlat
clc
inc
pop
xchg
orb
cmp
cmp
fsubl
in
pushf
mov
add
gs
movsb
mov
pop
in
adc
rclb
cltd
stc
movb
pop
aam
dec
std
cld
repz
mov
test
stos
dec
sarb
movsb
lcall
lcall
imul
jmp
sbb
and
push
ja
jge
lods
rcll
test
pop
iret
sarb
xor
idiv
nop
fisttpll
dec
jle
aad
cli
adc
insl
pop
jge
dec
mull
hlt
test
mov
pop
dec
pop
add
stc
pop
inc
dec
jmp
movsl
lods
cmp
pop
mov
push
subl
cs
xchg
idivl
loope
aam
stos
push
cmp
sarl
cwtl
push
mov
repz
jle
mov
sub
outsl
movsl
das
sub
call
fildll
cmp
mov
pop
les
or
cmp
push
int3
call
fdivs
xchg
inc
lock
mov
inc
shll
sti
xchg
inc
loop
in
aam
test
lret
fildll
xorb
and
pop
or
jg
or
inc
jl
out
shll
cmc
pop
subb
mov
mov
fs
xor
push
out
push
add
adc
jbe
pushf
dec
push
xor
scas
push
jnp
ret
xchg
and
xchg
jo
imul
hlt
push
outsl
cmovns
pop
xor
stos
int3
jb
sub
inc
jbe
shl
mov
rcrb
std
rorb
jge
mov
jg
sub
in
mov
push
xchg
jns
das
lods
dec
jnp
mov
xchg
leave
pop
add
sti
push
mov
adc
fimuls
push
dec
fs
pusha
cmp
sub
mov
jb
lds
pop
add
xor
inc
jns
rcrl
or
loope
mov
cmpsb
mov
xchg
popf
inc
imul
xor
xor
pop
sahf
lret
add
scas
adc
inc
mov
out
test
imul
sub
xor
xchg
popa
stos
cmp
lock
jnp
inc
pop
adc
shrl
insb
fs
pop
hlt
cltd
call
cmp
dec
add
stos
lahf
stos
mov
xor
push
and
adc
mov
xchg
decl
ljmp
call
jne
andb
js
int
shll
sub
faddl
mov
pop
int
dec
loop
pushf
mov
rcll
xchg
mov
flds
mov
mov
movb
mov
out
add
popf
xchg
cmp
iret
aad
push
mov
push
mov
sti
les
mov
inc
pushf
xor
xor
jno
test
sbb
fdiv
les
fsub
xchg
jl
out
xor
inc
pop
in
lock
xchg
jae
mov
ss
jmp
xor
cmp
rolb
addb
add
fwait
cmc
push
mov
mov
add
mov
mov
adc
das
push
mov
jle
in
cmc
in
outsb
insb
std
std
lahf
in
rol
lock
lds
xlat
pop
mov
imul
fadd
daa
mov
push
fidivl
xchg
dec
push
mov
popa
sti
inc
push
mov
jne
loope
xor
mov
repnz
sbb
sub
popf
pop
push
ficoms
inc
sbb
lods
sub
inc
pop
orl
push
pusha
xor
dec
test
cmp
mov
aad
cmp
adc
add
push
scas
imul
xchg
repnz
lock
mov
inc
jnp
sub
fdivrs
ret
cmp
mov
xor
dec
adc
xchg
mov
push
push
call
out
push
and
cmpsb
jnp
and
sti
fsub
aad
sub
fcomps
and
in
xchg
fwait
maskmovq
divl
je
pop
pop
mov
mov
jmp
cmc
cmpsb
fstl
ljmp
insb
mov
roll
jp
fnstenv
daa
in
dec
jge
int3
or
ror
icebp
adc
stos
addr16
lahf
inc
aad
and
icebp
push
idiv
repnz
rcrb
mov
jecxz
mov
add
movsb
or
stc
leave
and
pop
jle
lods
testb
cmp
fstl
mov
cs
mov
mov
not
add
xchg
bound
mov
push
push
mov
lret
fldenv
xchg
push
pushf
les
insl
xor
mov
dec
mov
sahf
mov
decl
add
mov
mov
hlt
fwait
and
cmc
lds
idivb
dec
push
clc
dec
call
adc
sub
or
cmp
push
lock
xor
sbb
test
sub
push
xor
in
add
dec
aad
jmp
fwait
rcll
ja
fcmove
in
mov
ret
fcmovnbe
aas
xor
iret
fnstsw
mov
cwtl
fnsave
sbb
sub
xor
outsl
enter
out
mov
hlt
mov
insl
fiadds
xor
xor
stc
mov
xchg
mov
dec
fdivs
mov
cwtl
loop
loop
jl
icebp
shlb
mov
insl
sbb
xchg
pop
add
sbb
lds
int
fidivs
or
adc
mov
pop
aaa
push
mov
inc
nop
daa
sub
aaa
jge
jl
rolb
sub
ja
xchg
gs
jp
insl
fsubl
mov
lea
lods
xchg
pop
movsl
cmpl
mov
mov
in
pusha
mov
mov
cmp
ds
xchg
divl
lea
mov
scas
inc
or
loopne
lahf
dec
xchg
mov
jp
and
sub
repnz
sub
lock
ret
imul
dec
aaa
jnp
fdivs
lods
mov
xchg
mov
add
and
lahf
aas
pop
daa
inc
sub
out
cli
lods
je
clc
pop
push
pusha
mov
lods
xchg
adc
cmp
jne
jns
inc
insl
add
addr16
jmp
mov
dec
mov
in
xchg
les
sbb
inc
insb
or
icebp
cmp
repnz
pop
in
je
xor
movsl
stos
jp
enter
cs
mov
sbb
out
adc
mov
inc
pop
pop
ljmp
leave
dec
lods
jecxz
lds
std
dec
lahf
fmull
loopne
mov
mov
ret
push
pop
lret
xor
mov
leave
pop
int
xchg
and
dec
cmp
outsl
xchg
mov
or
ret
sbb
scas
dec
lcall
stc
cwtl
pop
xlat
int3
aam
sar
enter
nop
cli
and
int
lret
testb
add
mov
push
les
jne
mov
push
mov
out
xchg
pushf
jge
mov
fsubrl
pushw
mov
ret
lret
into
ret
lods
outsl
lock
mov
imul
insl
mov
fistps
sbb
idiv
jb,pt
lahf
into
add
push
jno
mov
pop
dec
test
ja
lea
shll
stos
and
add
pusha
pop
pop
xor
dec
mov
ret
mov
loope
cmc
and
insl
outsl
std
pop
enter
dec
movsl
leave
jb
add
sbb
pushf
shrl
add
inc
fstl
sub
ret
xchg
cmpsb
fwait
aas
cmc
outsl
lret
mulb
gs
jmp
loopne
push
xchg
xchg
push
or
jne
fdivs
shrb
mov
rolb
fcomp
les
xor
aam
mov
jmp
cwtl
clc
or
insb
xchg
sub
dec
and
insl
mov
dec
cmpsb
xchg
pop
and
mov
lock
aaa
ret
jne
fs
rcrb
jg
cmp
aad
in
movsl
jecxz,pt
mov
mov
xchg
sub
inc
out
push
and
cltd
gs
inc
insb
jb
ja
xorl
les
mov
mov
push
outsb
sub
mov
mov
js
stos
inc
push
mov
out
inc
cwtl
leave
mov
xchg
gs
dec
mov
push
shlb
int3
fwait
push
pusha
sbbb
lahf
inc
and
loop
mov
xor
inc
mov
addr16
mov
frstor
push
adc
cltd
mov
gs
inc
pop
popa
push
sub
xchg
sbbb
ret
out
pop
cli
cltd
das
pushf
inc
mov
xchg
push
push
push
data16
lret
pop
idivl
popa
outsb
add
xchg
idiv
stos
mov
mov
lods
inc
repnz
sbb
inc
dec
jl
mov
xchg
mov
xchg
stc
sahf
jmp
mov
pop
pop
mov
inc
add
jbe,pn
enter
or
popf
popf
movsl
nop
xchg
push
mov
gs
aam
xchg
lret
out
lock
lock
cmp
or
pop
mov
lods
fisubrs
jno
push
movsl
div
xchg
adc
popf
dec
jb
mov
and
ja
dec
movb
in
cld
cmp
sub
ja
mov
dec
push
adc
sbb
mov
adc
inc
cli
add
fwait
xlat
scas
lret
lea
lods
clc
ret
add
lea
outsb
and
in
adc
aaa
in
inc
jnp
vmovlpd
add
xchg
movsl
cmp
add
js
jae
pop
mov
out
add
mov
or
xor
out
push
int3
or
cli
stos
rolb
pushf
fwait
popf
cwtl
mov
cmpsb
inc
jnp
je
xor
ret
jne
mov
mov
lods
pop
aam
pop
push
loopne
sbb
ret
stc
add
call
xor
es
xchg
inc
sub
inc
mov
mov
iret
test
fists
aam
pop
je
push
pushw
pop
push
aas
inc
add
rol
sbb
add
mov
sbb
adc
movsb
jo
movsb
out
dec
repz
out
push
jns
jo
push
and
movsb
lea
cld
push
jns
lcall
xor
add
in
outsl
sbb
cltd
mov
and
movsb
sub
cmp
jmp
jmp
pop
cmp
inc
cmp
sub
ljmp
xorb
push
test
cmp
cmc
sbb
sbbl
fwait
int
shrl
inc
inc
pop
fcompl
outsl
inc
push
bnd
stc
jne
cs
add
outsb
ljmp
fimuls
jge
ljmp
das
and
xchg
dec
sub
adc
pop
sub
aaa
jmp
xchg
test
loope
popa
xorl
rcrl
jnp
push
call
movsb
adc
andl
std
ret
xchg
add
adc
jns
les
leave
sub
lahf
pushf
pop
mov
mov
ret
mov
divl
cmp
fisttpl
mov
mov
out
cmpsl
rol
ljmp
imul
and
adc
add
add
int
mov
sub
mov
sbb
dec
add
es
insl
xchg
pushf
dec
loopne
fcomps
push
mulb
mov
in
inc
dec
xchg
rcr
nop
mov
xchg
mov
inc
cmpsb
rcl
sbb
repz
loop
fcomp
addl
daa
jo
inc
lret
hlt
out
pop
mov
mov
mov
cmp
sbb
push
mov
xor
cmpsb
pop
flds
or
push
mov
jmp
jo
cmc
stos
les
cmp
or
je
mov
frstor
clc
imul
cmp
dec
push
ja
rorb
and
mov
xor
ds
push
ficoml
pop
mov
ljmp
xchg
or
pop
mov
testl
out
jge
repnz
pop
sahf
out
adc
jp
cmc
ficoml
rcrl
jg
out
sbb
jnp
mov
mov
outsl
and
cwtl
sbb
push
sahf
fwait
mov
cmp
xchg
ret
cmp
popf
cmpsb
adc
sub
or
mov
jmp
and
insb
dec
mov
into
mov
lods
push
addl
das
loopne
push
lock
outsb
mov
or
mov
jmp
sbb
adc
rclb
pop
adc
sbb
icebp
daa
in
jnp
pop
xchg
scas
inc
xchg
mov
and
or
rcrl
and
out
push
inc
pop
mov
adc
data16
adc
lds
and
je
and
dec
in
xor
stc
and
subb
pushf
sub
push
sub
pop
cmp
imul
sahf
cmpsl
push
xchg
arpl
mov
pushf
clc
lcall
ret
adc
shlb
popf
stc
ret
jg
xchg
fsubr
push
sbb
mov
push
mov
push
adc
xchg
pop
pop
out
push
add
aad
inc
add
fwait
sbb
pusha
aam
data16
lcall
hlt
xchg
jmp
test
jno
pop
mov
repz
and
pop
jno
movsb
lahf
fisttps
pop
pop
in
je
rcll
sbb
aaa
sbb
stos
xchg
or
push
incl
outsb
fimull
insl
lds
add
jb
xchg
or
leave
xlat
lahf
outsb
lcall
cmp
add
inc
push
das
aas
jbe
mov
js
mov
fwait
add
loope
dec
push
lcall
lret
or
nop
mov
pusha
dec
out
ds
dec
sahf
push
jg
mov
inc
idivl
cmp
cmp
fisubrl
push
and
out
int
jg
push
dec
mov
mull
shll
or
daa
sbb
scas
data16
shlb
or
mov
ret
push
pop
into
cltd
mov
test
cltd
inc
sbb
cmp
fst
sahf
sub
outsl
sub
cmp
mov
cmc
cmp
cs
mov
push
hlt
push
lock
sar
and
out
pushf
xchg
hlt
ficoml
push
jbe
inc
lods
gs
stos
mov
mov
movsl
jl
bound
inc
lcall
fstps
repz
cld
inc
dec
sub
or
jp
shlb
and
fdivr
stc
mov
sbb
add
xor
stc
repnz
pop
jne
cmp
les
xchg
in
jle
loop
scas
adc
fldl
dec
cmp
aas
jge
js
or
or
jmp
adc
aas
sub
stos
rclb
push
dec
push
subb
lock
int
xchg
add
lret
add
add
fs
dec
iret
into
insl
xchg
inc
dec
inc
stos
cld
aam
push
xor
or
dec
in
movsl
cmpb
rdpmc
dec
arpl
jnp
cmp
ret
je
loop
mov
movsb
testl
sub
push
xlat
xor
cmp
jb
sbb
inc
subb
push
test
mov
cmp
in
sub
and
repz
aam
cs
push
rcrl
loopne
popf
mov
mov
cs
jecxz
and
call
push
xchg
push
repz
loope
rcll
push
xchg
mov
pushf
hlt
mov
cltd
shlb
lcall
aad
repz
pop
mov
xor
pop
lods
imul
push
fidivrl
inc
push
jle
in
nop
pop
adc
out
mov
jb
dec
sub
push
testb
push
xor
cld
aas
shrl
lods
pop
jmp
and
mov
pop
mov
push
hlt
das
xor
xlat
sahf
xlat
stc
insb
jge
xor
xchg
cmpsl
and
jg
add
push
add
js
mov
jmp
adc
fcomp
inc
dec
out
daa
les
stos
jmp
mov
lea
xchg
jns
ds
inc
mov
lock
mov
mov
xchg
mov
mov
mov
push
or
and
and
pop
mov
push
pop
push
lods
repz
or
or
inc
sub
lcall
dec
les
lcall
cmp
cmp
mov
dec
fdivrs
sub
inc
inc
icebp
push
je
dec
lret
test
dec
xchg
pextrw
dec
push
shr
push
mov
movsb
jns
or
jbe
shrb
jne
sub
and
aas
pop
xchg
aaa
outsb
stc
jecxz
xor
cmp
lds
sarl
in
pop
sbb
xor
or
add
mov
popa
fisttpll
fwait
or
cmp
lods
imul
jle
inc
push
inc
or
mov
or
test
xchg
addr16
jmp
repnz
imul
and
pushf
mov
mov
leave
adc
or
jecxz
sti
fs
arpl
aas
xchg
mov
mov
rorl
mov
sbb
dec
leave
jmp
cmp
ror
sbbl
xor
adc
mov
cltd
in
jne
cmpsb
int
jb
mov
jno
scas
stos
scas
mov
enter
xchg
add
mov
in
jle
sub
mov
mov
jo
popf
daa
cmp
push
negl
jno
and
jge
in
loop
fcmovb
sub
add
data16
fcmovnb
shrl
xchg
rcll
aaa
pop
inc
dec
xor
add
push
jno
jae
mov
lea
repz
in
cmpsl
cltd
test
xchg
fistps
xchg
add
fsubrs
pop
and
fdivr
ret
cmpsl
cmpb
jp
mov
subl
nop
cltd
sbbb
xchg
aad
mov
inc
xor
rcl
iret
adc
jg
dec
je
in
jnp
jns
out
push
popa
test
or
fldenv
lods
cltd
sbb
out
test
lret
scas
mov
movsl
push
mov
jmp
mov
arpl
mov
push
adc
lret
xchg
lret
lods
in
dec
adc
jl
and
pop
in
mov
pop
sbb
movsl
or
shll
inc
xor
es
xor
push
aas
loop
or
dec
ret
mov
adc
out
xchg
loop
xor
pop
jno
cmpl
or
outsl
imul
orl
cld
shrl
or
popa
scas
mov
movsl
mov
lret
into
testl
dec
lea
lret
sbb
movsb
movsl
fildll
add
divl
call
push
ss
cmp
test
cwtl
bnd
mov
and
mov
xlat
add
sti
lret
lret
pop
mov
in
sti
sbb
lods
jo
or
icebp
xchg
scas
pop
mov
or
cmp
cmpsb
jmp
aas
xchg
dec
cmpsl
aas
out
pop
adc
repnz
sahf
inc
pop
pop
lcall
out
inc
in
cmp
pop
mov
push
sbb
or
loopne
dec
cmp
outsb
scas
xchg
dec
xor
mov
mov
cld
xor
mov
push
jno
mov
mov
and
clc
sub
or
jge
xor
test
lods
dec
test
sbb
inc
loope
and
testb
push
imul
ret
iret
jecxz
ret
mov
jge
mov
cltd
insb
test
mov
outsl
mov
inc
cmpsl
lods
cld
lods
shrl
sbb
mov
aaa
fsubs
scas
add
hlt
popf
bt
jae
test
dec
jo
fisubs
jne
xchg
cmp
loope
cld
xlat
push
pushf
xchg
in
adc
cmpsb
fbstp
add
incb
pusha
nop
and
mov
or
out
pusha
cld
inc
popf
pop
mov
xchg
inc
mov
and
fldcw
pop
mov
mov
cld
xlat
gs
loope
inc
fcoms
mov
adc
cld
das
out
jmp
push
shlb
jg
nop
lods
rorb
lcall
or
cmc
mov
pop
pop
aad
push
pop
and
dec
cs
mov
jns
or
popa
push
push
clc
mov
mov
add
outsl
adcb
push
mov
aaa
outsl
pop
adc
loop
xchg
aas
jns
lods
sarb
sahf
daa
mull
dec
cs
push
mov
dec
or
outsl
xchg
jge
pusha
mov
jp
lds
jb
add
xlat
inc
sbbl
mov
test
aas
mov
pop
jb
jge
cld
mov
cs
pop
cmc
pop
mov
and
cmp
cltd
shrl
jmp
sub
faddl
js
xor
int3
pushf
xor
wrmsr
dec
inc
loop
scas
jb
fstps
xchg
sub
cwtl
roll
ja
sbb
xor
inc
lcall
das
push
fwait
pop
cmpb
xor
cwtl
leave
add
test
jmp
cli
mov
push
andl
or
pop
adc
sbb
ret
je
xchg
xchg
push
sbbb
jp
cmp
pushf
popa
rclb
xor
into
jns
repz
es
xchg
or
pop
inc
xlat
imul
loop
iret
sbb
sbb
bound
test
mov
inc
add
cmp
fidivrs
fdivrs
cmp
fsubs
xchg
pop
cmp
jne
loope
out
xor
mov
adcb
xchg
or
mov
pusha
leave
repnz
mov
decb
sub
insb
mov
in
imul
pop
rcrl
cmp
lods
push
jge
hlt
mov
jno
testb
clc
xor
adc
cmpsb
test
mov
cmp
hlt
int
dec
sti
jl
cmp
mul
xor
das
xor
pop
or
adc
ficoms
cmc
data16
jg
add
lgs
adc
insb
stos
dec
dec
pop
insl
fwait
pop
jb
xor
ss
inc
adc
ror
sarl
inc
push
mov
addl
cwtl
mov
fwait
fs
dec
mov
nop
mov
xchg
scas
ret
testl
outsb
movsb
in
mov
sbb
add
jmp
stos
cmc
movsb
sub
std
sar
mov
stc
sub
push
mov
xchg
sahf
push
sbb
pop
mov
mov
lods
push
mov
bound
cld
cmp
jmp
cli
sbb
in
and
and
xchg
js,pt
repnz
and
jno
pop
sbb
sbb
fwait
pop
loop
lahf
lret
push
test
push
xchg
dec
inc
in
jp
js
lods
mov
je
cmp
leave
js
popf
cmc
mov
xor
cmp
dec
insb
sbb
les
pop
jp
and
into
or
or
das
in
push
mov
scas
sub
push
test
mov
test
andl
pop
nop
aam
push
or
loop
adc
sbb
fdivs
cli
outsb
or
push
pop
in
ret
ret
pop
mov
loop
fwait
shrl
pop
and
icebp
cmpsl
dec
iret
or
add
popa
enter
orl
andb
or
pop
enter
dec
in
sbbl
push
add
push
sti
ficompl
adcl
xor
adc
ds
adc
push
xorb
es
cmpsb
xchg
ds
pop
inc
fs
and
or
add
push
xor
dec
adc
sbb
pushf
sub
gs
ret
jnp
mov
ret
loop
arpl
xlat
mov
push
lahf
jo
sub
adcb
jno
iret
hlt
mov
xorl
into
shl
adc
dec
xchg
mov
xor
mov
in
scas
sub
cmc
inc
jge
push
jno
cmpl
jo
jg
mov
aas
pop
push
xor
or
rcl
sbb
jecxz
js
adc
aaa
xchg
mov
sub
xchg
sahf
test
sarb
in
sub
imul
in
sbb
sub
ret
xchg
cmp
mov
fsubrl
sub
mov
testl
dec
jmp
sub
dec
addb
lret
push
and
repnz
outsl
ret
icebp
subl
push
out
push
sbb
sarl
add
rorb
hlt
lret
mov
dec
cmpsb
dec
daa
ficoms
pop
les
cld
and
jbe
nop
inc
repnz
xor
adc
lcall
lret
cmp
jl
rclb
sbb
mov
cs
mov
push
cmp
movsb
mov
ljmp
xor
pop
stc
enter
and
repz
xchg
inc
ret
mull
and
test
hlt
push
sub
loop
push
adc
clc
ljmp
movsb
cmpsb
dec
pop
out
sbb
lods
and
push
fsub
dec
sbb
cmc
test
call
dec
and
mov
inc
add
repnz
loop
dec
loop
adc
xchg
cmp
jge
cmp
test
test
mov
mov
mov
inc
sbb
and
ja
movsb
fdivrl
or
mov
mov
or
inc
iret
shlb
add
pop
notb
fisubrl
mov
inc
enter
shr
push
enter
cmp
rolb
fnstenv
xchg
cmp
test
xor
icebp
fcoml
mov
loopne
dec
sahf
js
cmp
insl
pop
lcall
fsubs
stos
test
mov
add
in
push
push
or
push
std
nop
sub
adc
mov
in
lds
jnp
pop
push
inc
jl
mov
cld
jno
testb
repz
aad
mov
adc
lea
push
sub
dec
pop
pop
xor
jp
sbb
push
bound
insb
or
mov
add
dec
pop
jl
mov
mov
das
ret
add
sub
insb
insl
xchg
bswap
pop
enter
fs
out
push
xchg
mov
fwait
scas
addb
push
mov
rcrl
fldpi
xchg
adc
addr16
xor
clc
xor
cmp
leave
enter
pop
out
loopne
push
loope
add
sbb
jmp
cmpl
pop
scas
jbe
mov
sbb
in
mov
pop
pop
adc
pop
aad
leave
mov
bound
sar
adcl
icebp
stos
aam
xlat
and
test
cltd
mov
rorb
ja
jb
mov
test
pop
fimull
mov
cmc
fdiv
std
or
lret
pop
fistpll
loopne
sahf
iret
jge
jg
outsl
or
cmpl
test
test
enter
mov
mov
mov
fisttpl
fdiv
push
or
mov
adc
or
stos
shrb
cwtl
xlat
test
movsl
mov
rol
sbb
mov
ret
repnz
mov
mov
out
dec
sub
inc
jmp
pop
iret
mov
int3
sub
repz
arpl
add
cmp
movsl
repnz
push
push
lods
ss
jo
lahf
fbld
cmp
dec
or
aas
xchg
xchg
or
aad
movsb
jl
insl
je
pop
fnstsw
push
add
into
cwtl
sahf
ret
stc
or
inc
mov
fistpll
push
out
xchg
add
out
sbb
fbld
into
xchg
dec
xor
lret
adc
and
das
fs
cmp
mov
out
sbb
outsb
pop
ds
insb
push
fnstcw
mov
adc
adc
in
ret
lods
push
ds
enter
dec
xchg
inc
jle
test
mov
dec
bound
sub
inc
pop
fisttpl
sbb
and
test
stc
xlat
push
test
mov
mov
dec
hlt
adc
loopne
inc
pop
jns
sub
int
fimuls
rcrl
sub
mov
fs
es
cmpsb
xchg
add
mov
sti
or
push
sbb
pop
pop
fwait
mov
gs
lret
decb
fmuls
xor
jg
inc
jbe
andb
dec
sbb
sbb
daa
xor
or
and
inc
inc
loop
adc
xchg
pop
jo
xor
inc
mov
sbb
pop
push
repnz
jl
mov
ljmp
and
lock
fcmovnbe
movsb
pop
popf
and
js
call
xor
push
push
jge
adc
les
clc
push
jbe
push
jge
cmp
mov
or
cld
dec
ds
mov
inc
mov
cvtsd2si
rorl
fldcw
or
adc
shlb
or
push
push
push
pop
aaa
shl
adc
or
out
pusha
sti
push
call
cmp
xorl
ficoms
imul
dec
cmc
xchg
mov
movsl
adc
aas
cs
das
sbb
mov
ja
mov
cs
jno
inc
das
inc
pop
rol
fs
cmc
mov
sbbl
cmpsb
outsl
out
mov
sbb
cmp
add
je
rcrb
test
pop
shll
mov
rclb
cmc
jo
lret
loop
adc
jbe
mov
ss
jo
test
mov
or
ss
faddl
jmp
mov
das
sub
xchg
jmp
xor
add
adc
xor
lock
xchg
xor
sub
xchg
daa
idivb
leave
add
pop
inc
fs
test
js
sbb
push
jno
lret
mov
jle
dec
mov
jne
push
test
rcrl
lea
cli
andb
sub
das
jl
call
push
les
imul
mov
adc
xchg
and
sbb
xor
fnstsw
lock
or
data16
out
adc
test
jl
xor
lods
cmp
adc
das
nop
jb
out
cmpsl
pop
aaa
imul
sbb
cmpsl
in
xor
or
sbb
fidivrs
andb
xor
fstp
xchg
xchg
jmp
dec
loopne
mov
rcll
jno
fs
cli
jmp
or
xchg
or
scas
and
or
insl
cmp
sbb
icebp
in
lods
cs
pop
xor
mov
add
fs
jle
mov
inc
fbld
js
in
dec
fimull
inc
add
jg
cmp
mov
pusha
out
jbe
cwtl
lret
mov
push
aad
xor
out
mov
lea
ror
in
cltd
outsb
adc
xor
cwtl
sti
jp
adc
aas
es
xchg
push
pusha
or
repz
sub
push
rclb
push
add
adc
psrad
rorl
push
adc
pusha
mov
mov
dec
mov
mov
push
mov
stos
std
imul
sub
add
and
adc
xor
xorb
inc
mov
add
dec
aaa
cmc
daa
repz
ljmp
cmpsl
ss
cmp
shl
sub
cltd
inc
out
xor
lea
mov
arpl
xlat
mov
shrl
cmp
int
mov
je
cmp
adc
push
fs
mov
mov
cs
pop
push
pop
jg
adc
bound
movb
fwait
add
movsb
and
movl
clc
imul
mov
cmpsl
sahf
xlat
push
mov
fistps
cs
inc
ljmp
addr16
je
mov
mov
push
adc
mov
ljmp
jne
shl
jnp
jb
ror
push
inc
sub
add
ret
imul
test
sub
push
and
xor
push
fldenv
or
daa
jl
loopne
insb
stc
sarb
sub
pop
adc
orl
pop
test
ficoms
push
dec
jae
int3
loope
sbb
add
ljmp
and
push
scas
cmpsb
and
adc
rorb
jne
or
mov
call
fcomip
inc
imul
inc
dec
jo
gs
sti
add
lcall
xchg
sub
cmp
cmp
insl
add
test
iret
dec
sub
mov
shll
mov
add
sbb
fdivrs
adc
cli
push
mov
sub
jb
inc
cmp
cmp
add
in
mov
add
sbb
rorl
xor
dec
dec
mov
mov
icebp
es
call
lahf
inc
mov
mov
jne
loopne,pt
data16
lea
sahf
mov
ss
cmp
movsb
pxor
mov
insb
dec
pop
adc
in
dec
shlb
push
lds
fnstenv
int
ss
dec
test
adc
loop
sub
data16
lock
and
js
add
shrb
lods
fisubs
stos
lahf
mov
or
xor
repz
jl
and
mov
inc
mov
cmc
sbb
scas
sti
in
fiaddl
pop
xlat
jl
mov
mov
cmp
incl
sub
addr16
test
sub
jno
das
push
dec
mov
icebp
std
mov
out
mov
sub
mov
sbb
fldcw
js
and
popf
dec
arpl
lea
mov
popa
adc
inc
adc
dec
adc
sub
pop
cmpl
xchg
mov
inc
push
dec
sbb
mul
push
insl
cld
into
mov
popf
dec
jo
push
inc
rol
lods
outsb
xorb
mov
jp
pop
pop
push
sbb
mov
aad
jle
imul
xchg
jb
mov
loope
jnp
icebp
arpl
xor
mov
jne
mov
call
mov
cmp
fmuls
adc
enter
lret
ljmp
popf
movsl
adc
testb
push
inc
call
fildl
stc
push
ret
shl
mov
or
pop
lahf
push
push
out
int3
push
mov
scas
mov
data16
jbe
sar
fcompl
mov
dec
push
sbb
sub
sbb
cltd
push
push
ja
mov
adc
in
hlt
ss
add
or
jp
pop
fistl
in
int3
jl
mov
inc
inc
jge
insb
mov
int3
xchg
addb
test
and
cmp
fdivrp
test
mov
sbb
push
inc
pusha
insl
fiadds
shr
clc
sub
in
mov
sub
cmpsb
fistpl
mov
jp
fbstp
jns
insb
mov
and
outsl
adc
fimuls
dec
mov
push
loop
in
call
fisttpl
sub
pop
and
add
aaa
in
in
lock
ljmp
cmp
lods
rorb
into
and
sub
cmp
jmp
shlb
jp
inc
add
push
test
push
mov
outsl
xchg
pop
jno
dec
cmp
lock
jecxz
dec
and
mov
and
std
mov
pushf
fdivl
push
std
out
pushf
addr16
sbb
cld
add
outsl
hlt
scas
fucom
inc
icebp
or
testl
jno
sub
int3
out
insb
cmpsb
cmc
or
arpl
inc
sbb
pop
cmp
pop
sub
push
leave
ljmp
cmpsl
je
rcrb
push
outsl
enter
sbb
mov
push
popa
jl
gs
stos
jns
push
fcomi
xchg
stos
lret
xchg
out
sub
dec
movsl
in
lods
cmp
pop
aad
push
movsb
xchg
bound
push
test
fbld
int3
sub
jg
scas
pop
and
adc
mov
insb
cmpsb
pop
xchg
lcall
lcall
xor
rcl
push
cmp
cmp
add
cld
dec
xchg
loop
imul
icebp
add
frstor
cmp
mov
xchg
and
push
outsb
and
pushf
pop
pusha
adc
mov
mov
je
xlat
mov
cmp
or
push
fwait
mov
adc
clc
sub
sub
test
lcall
sbb
loope
js
frstor
mov
dec
loope
mov
sti
cs
xor
shl
dec
jnp
imul
cmp
cli
cwtl
dec
movl
or
xchg
out
popa
mov
sub
repz
insl
jnp
loop
jge
out
xor
push
fmull
add
mov
rcrb
xor
addb
xchg
shl
mov
sbb
inc
mov
test
pop
mov
jge
mov
and
lcall
iret
xchg
jno
xorps
scas
ja
lods
mov
sub
fnstcw
cltd
xchg
lcall
lcall
cmove
xlat
out
xor
add
or
pop
mov
lea
out
inc
out
pop
fimull
push
jne
xchg
daa
adc
push
dec
ret
pop
stos
out
mov
rcll
cli
pmovmskb
xchg
mov
xor
test
jl
push
add
jnp
mov
cli
rolb
cltd
jnp
xchg
cmpb
cmp
mov
pop
divb
cmp
stos
das
jbe
sbb
loop
cmp
pop
fadd
mov
sbb
xor
or
xadd
arpl
add
int3
mov
or
push
mov
or
push
out
push
call
paddb
lahf
ja
dec
imul
in
fidivrl
xor
scas
clc
movsb
mov
mov
push
int
dec
mov
mov
push
xor
xchg
es
sub
scas
mov
jge
dec
leave
mov
int3
in
shll
adc
inc
movsb
pop
dec
lods
in
jcxz
push
cmpl
or
cli
outsl
jmp
inc
popf
subb
inc
cmp
jb
mov
pusha
std
xor
mov
mov
mov
mov
arpl
mov
ffreep
loopne
sahf
fwait
das
cmpsb
mov
test
mov
aas
flds
or
inc
adc
adc
lcall
xchg
imul
add
repz
fldenv
push
mov
pop
mov
inc
mov
and
bound
xorl
dec
or
hlt
clc
sti
jns
sbb
sbb
push
inc
js
mov
cmp
inc
ja
sub
gs
sub
jbe
popf
lret
mov
pushf
pop
and
cmp
push
pop
std
js
gs
cmp
lods
cli
and
sbb
lds
loope
out
mov
mov
adc
xchg
jo
sub
mov
pop
aas
push
in
pop
lds
cmp
popf
lret
mov
das
sbb
enter
cmp
mov
pop
aam
cmpsl
inc
cmp
jne
add
adc
adc
push
mov
push
xchg
inc
movsl
xchg
stos
xor
jae
dec
in
cmpsb
dec
xor
or
xorl
mov
jne
or
lods
xchg
xchg
aam
outsl
and
jbe
and
jb
adc
inc
roll
adc
lea
scas
sub
inc
jbe
mov
and
sub
scas
dec
lods
shlb
xchg
mov
dec
cmpsb
sub
xor
and
mov
ss
dec
ret
mov
cmp
lcall
mov
lahf
pop
stos
push
stos
mov
lods
adc
sahf
xor
ljmp
cli
inc
and
add
imul
lds
mov
mov
cmpsl
mov
nop
clc
aaa
mov
push
sub
hlt
test
push
data16
dec
mov
lds
lcall
push
and
inc
imul
test
ficoml
or
int3
and
xor
mov
pop
out
clc
test
fdivs
push
push
xchg
xchg
jecxz
dec
inc
mov
or
inc
mov
hlt
pop
push
push
mov
xchg
fnsave
shrb
aas
pop
pop
inc
addr16
add
mov
xchg
cmc
cltd
fwait
pop
rclb
movsb
or
insl
aaa
dec
sub
daa
jl
data16
sub
pop
incl
push
inc
or
xor
aaa
les
cmpsl
lret
pop
pop
sbb
call
dec
cmpsb
fsts
xor
jno
sub
adc
fst
insb
xchg
mov
test
icebp
jg
sub
test
lcall
cmc
xchg
fwait
xchg
xchg
lods
dec
popf
add
imul
sub
nop
add
adc
out
push
cmp
test
sub
cmpsl
movsl
dec
cmp
sub
loopne
add
fisubrs
aas
mov
xchg
xor
add
cmpsb
jl
mov
pop
mov
movsb
out
js
in
pop
icebp
jnp
mov
fdivl
les
mov
jl
xor
add
jle
or
aad
hlt
cmp
cs
and
and
loopne
mov
outsl
lahf
push
mov
test
imul
sub
stos
das
sbb
inc
andb
into
inc
cwtl
cmpsb
cmpsl
pop
out
in
push
mov
or
movsl
flds
add
stos
jp
or
rclb
mov
or
fucom
sub
pop
jecxz
sub
mov
and
jmp
push
clc
imul
ja
pushf
mov
cli
mov
fcmove
jno
test
push
je
gs
aas
push
jne
pop
movsb
inc
scas
mov
inc
or
add
dec
add
into
out
popa
adc
ret
or
test
shlb
jns
test
iret
xchg
cli
or
dec
inc
or
stos
jns
aaa
xor
mov
nop
and
sub
pop
add
and
ret
cltd
pop
adc
dec
jb
mov
mov
sub
pop
dec
adc
add
pushf
test
mov
jecxz
aad
arpl
dec
push
ret
cmc
stc
adc
aad
pusha
js
jno
push
sbb
ja
insb
out
add
pop
in
outsl
mov
imul
sti
enterw
xor
mov
outsb
push
pop
fdivrl
data16
ss
jo
lods
out
fists
popf
cltd
jecxz
lahf
fmull
lods
rcr
pop
xor
push
loopne
sub
mov
xor
out
call
pop
cld
repnz
push
fs
xlat
push
inc
adc
lret
fwait
and
js
jnp
enter
scas
test
add
jae
scas
or
mov
jbe
cmp
pop
adc
push
notl
jmp
inc
jg
cmp
fdiv
mov
xor
jb
mov
ret
sbb
push
stos
pop
push
sbb
loop
popa
hlt
jg
icebp
sbb
adc
aad
mov
ja
jnp
rcrl
mov
les
inc
xlat
xor
pop
in
add
mov
popa
fs
int
imul
clc
and
cmpsl
dec
xchg
daa
mov
outsb
out
xlat
fsave
cmp
mov
sti
gs
push
repnz
jbe
hlt
add
sub
push
cmp
into
scas
inc
fwait
hlt
imul
add
iret
sti
mov
pop
cmpsb
stos
sbb
lret
bound
inc
imul
into
int
cmp
sti
push
and
jp
ret
stc
or
fistl
movsb
add
push
inc
jae
std
pushf
shlb
adcl
push
mov
mov
add
dec
and
test
xchg
mov
xchg
cld
mov
icebp
call
mov
jae
outsl
jmp
mov
mov
inc
inc
rcrb
shr
inc
cmpsl
je
jecxz
lahf
out
and
test
mov
std
sub
stos
sub
mov
lret
xchg
mov
jmp
jmp
test
es
push
inc
pushl
daa
mov
shlb
push
inc
push
sarl
ret
pop
repz
int3
dec
sbb
jmp
sbb
js
pop
pop
test
dec
sub
xor
mov
loope
xchg
jno
mov
inc
aam
and
mov
dec
iret
sahf
mov
lock
pop
cmp
test
filds
inc
cltd
dec
js
sbb
jge
push
and
hlt
sbb
jg
out
call
insl
mov
je
lods
andl
pop
cmp
or
jmp
inc
mov
xor
sbb
cltd
test
mov
in
sbb
cwtl
inc
pop
movsl
sub
cwtl
xchg
or
mov
mov
hlt
jbe
nop
stos
add
jg
xlat
fnsave
push
jle
adc
xchg
frstor
xor
in
jns
sbb
sbb
inc
inc
iret
mov
lahf
ds
jae
add
aaa
gs
std
test
mov
lds
test
insb
inc
lret
add
jl
popf
or
mov
xchg
xchg
out
inc
mov
aas
dec
int
inc
pushf
jns
test
lods
repz
pop
les
xor
leave
ss
lahf
mov
shlb
iret
dec
es
ror
repnz
pusha
dec
cmp
or
xlat
pushf
add
stos
adc
cmp
add
in
push
push
and
lods
add
lock
xor
push
negb
out
jecxz
pop
in
dec
ja
aam
leave
jno
sbb
ja
cmpsb
push
popa
dec
or
sub
sbb
iret
jle
shl
mov
int
cli
or
xchg
pop
xlat
and
ds
fwait
xchg
mov
pop
inc
cld
mov
push
ss
pop
in
outsl
dec
mov
xchg
sti
repz
sbb
sub
mov
cmpsb
xchg
movsb
sub
xchg
imul
das
nop
fbstp
xchg
popa
sbb
xor
ljmp
xor
nop
pop
jg
fs
dec
inc
xor
mov
pop
or
xchg
iret
insl
aad
test
das
lods
cmp
stc
adc
xor
cmp
es
hlt
push
add
repnz
inc
xchg
cwtl
inc
daa
mov
xchg
mov
repnz
add
divb
call
dec
notb
clc
imul
call
push
and
cmpsb
lret
iret
push
sub
shrb
sbbb
inc
iret
jae
divl
fidivl
ja
sub
adc
sarl
jb
and
icebp
push
and
js
clc
lret
pop
push
sub
sub
pop
sbb
fldenv
add
pop
mov
push
ficompl
int3
adc
xchg
cmp
cmp
fdivs
jae
repnz
mov
pop
imul
imul
mov
and
xor
mov
pusha
int
repz
shlb
pusha
icebp
xchg
lea
jmp
dec
jb
sbb
dec
mov
mov
aas
cmpsb
mov
hlt
fidivs
stc
pop
add
in
push
pop
jae
lcall
pop
je
divb
insl
dec
mov
lods
jg
pop
sbb
aas
adc
push
rcrl
add
mov
and
adc
add
in
or
rclb
xlat
shrb
sahf
negb
outsb
or
mov
imul
data16
cmc
jg
xlat
cmpsl
test
int
mov
and
test
mov
out
lret
inc
roll
xor
cmpsb
pop
dec
repz
out
inc
jae
or
test
mov
sub
cmp
shlb
out
das
jp
dec
jbe
xchg
xchg
div
add
daa
push
jb
mov
mov
xor
cmp
rcll
push
fmuls
lock
xorb
sub
sbb
shll
or
push
js
adc
out
mov
loope
jns
jp
aam
daa
jmp
lods
sbb
push
cmpsl
push
inc
fisttpll
pop
xchg
outsl
push
xchg
adc
adc
fwait
aam
push
frstor
scas
jne
push
push
pop
adc
inc
pop
ljmp
call
rcrl
out
adc
push
pop
lock
push
xor
stos
popa
jo
lret
daa
fiadds
mov
imul
repnz
cmp
les
xchg
cltd
pop
inc
push
pop
iret
sbb
inc
out
add
dec
jne
stos
mov
dec
popa
call
mov
in
jp
pushf
pop
pop
dec
clc
add
mov
test
call
push
std
jmp
jecxz
andl
add
aas
push
scas
sti
pusha
aas
es
mov
push
mov
in
mov
jp
les
inc
xchg
mov
xchg
imul
int
mov
push
mov
shr
cwtl
and
mov
pop
pop
xchg
ret
xchg
nop
fwait
dec
inc
dec
inc
sub
les
into
popa
arpl
test
bound
inc
mov
mov
mov
mov
ds
sti
mov
cmpsl
sbbb
mov
js
subb
pushw
mov
mov
dec
fsubs
lds
aas
lahf
pop
vandps
sbb
mov
fsubrs
and
scas
ret
lods
cmp
pop
addr16
rclb
inc
lods
cmc
call
push
xor
and
push
sbb
jo
insl
ds
rclb
push
push
lods
jo
ficomps
or
ds
js
ret
cmp
inc
bound
xor
pop
pusha
inc
js
dec
pop
mov
insl
mov
mov
call
cmp
pop
test
int
jb
dec
test
cmp
sarl
pop
ss
cmp
mov
jbe
mov
inc
popf
xchg
les
call
das
sub
mov
and
mov
aaa
imul
jo
outsb
and
shrb
sbb
fxch
sbb
aad
dec
fldt
loop
cld
dec
pushf
push
cmp
mov
and
lret
jae
lcall
les
orb
scas
and
les
rorl
cmp
inc
adc
ficoml
imul
pop
out
adc
int
bound
pop
lods
inc
cmp
xchg
lock
test
or
lcall
and
ljmp
sbb
sahf
xor
mov
mov
pop
std
or
xorl
cmp
clc
test
adc
ror
adc
sbb
inc
inc
mov
push
mul
lock
jle
sub
shll
fnstcw
mov
dec
add
seto
and
sbb
subl
dec
sti
pop
insl
push
xlat
push
scas
lods
pop
mov
add
dec
mov
xchg
std
aam
push
adc
fldt
dec
punpckhbw
push
clts
xor
jns
mov
gs
test
cmp
movsb
movsb
lods
or
popa
inc
ror
lret
fcmovnb
cmp
pop
push
test
lock
inc
loope
roll
pusha
leave
enter
adc
popa
pusha
jno
gs
jae
fistpll
divl
ljmp
mov
inc
call
aas
xor
adc
pop
adc
mov
aaa
sub
jp
mull
test
jl,pn
mov
insb
call
icebp
dec
jmp
xchg
cs
cmpb
mov
outsl
jns
mov
lds
sub
dec
testb
push
repz
or
insb
inc
clc
in
test
pop
adc
xlat
pop
xor
sbb
sbb
inc
mov
cs
add
cltd
pop
xchg
push
push
pop
inc
fildl
mov
or
imul
arpl
out
sbb
in
insb
xor
mov
pushl
mov
fwait
in
mov
rolb
shrl
ss
push
dec
test
clc
sbb
ljmp
dec
outsl
test
hlt
stc
insb
adc
push
dec
popf
loop
mov
dec
cmp
enter
or
pop
into
xchg
adc
dec
and
jno
mov
mov
add
addr16
mov
outsb
mov
iret
jae
dec
shl
decb
push
mov
shll
inc
out
push
adc
sbb
adc
jge
adcl
dec
jle
dec
stos
add
cmp
push
aaa
sub
add
jbe
mov
divb
test
push
fdivl
ja
adc
pop
ret
hlt
int
and
jo
test
mov
adc
inc
sub
adc
mov
repz
inc
mov
and
mov
xchg
in
aaa
pop
inc
and
cmp
dec
jns
dec
dec
aaa
aaa
sbb
icebp
ret
shrb
pop
rcl
jle
mov
incl
jg
sub
mov
mov
fdivr
or
imul
inc
pop
fdivs
dec
not
test
add
pop
rcll
and
out
fnstenv
push
mov
sub
aad
int3
adc
xorl
lcall
sub
sahf
mov
xchg
pusha
pop
mov
mov
sbb
pop
pop
inc
sbb
sub
sbb
sbb
fmull
or
pop
hlt
movsl
jns
out
into
and
imul
sbb
cwtl
in
mov
das
mov
jae
push
data16
jnp
inc
nop
sarb
push
jns
adc
imul
jns
lock
or
movsl
sub
test
fstl
inc
and
aas
je
icebp
mov
xchg
out
push
int
mov
lcall
mov
mov
scas
jle
addr16
dec
loopne
es
test
daa
sbb
inc
cmp
and
dec
sub
push
sub
push
adcl
std
jo
pop
aad
lea
xchg
rorb
or
xchg
popa
bound
and
sahf
sub
shl
fisttps
sub
cmp
mov
push
dec
xor
fcmovbe
and
xchg
mov
mov
cmp
lcall
mov
or
imul
pushf
xchg
loop
sbb
les
push
xor
mov
xlat
mov
fwait
dec
xor
xchg
lret
and
xchg
std
mov
jno
out
xor
aam
imul
aam
and
xor
jge
lret
mov
pop
insb
mov
mov
xchg
xor
push
leave
cmp
mov
stos
or
sbb
insl
xchg
add
sbb
mov
orb
cmpl
jnp
push
adc
cltd
or
or
jle
pop
mov
xchg
in
mov
out
or
xchg
mov
aas
xchg
jnp
mov
cmp
mov
sub
dec
into
aam
ds
mov
pop
adc
ja
insb
fcompl
aaa
repnz
inc
cli
jno
pop
imul
out
and
sub
dec
xor
shl
scas
sbb
fimuls
sub
xor
ss
mov
out
mov
xchg
lahf
inc
fldenv
and
mov
sub
mov
mov
cmc
add
ret
adc
std
mov
int3
inc
adc
sbb
dec
sbb
ret
rclb
mov
pop
fiaddl
dec
or
or
jnp
popa
fwait
mov
test
sbb
mov
out
mov
icebp
inc
dec
and
adc
xor
jno
xor
add
mov
lods
lods
xchg
cli
loope
shlb
popa
dec
in
sbb
rolb
cmp
popa
cld
pop
in
out
adcb
mov
rclb
fnstenv
orb
inc
adc
out
jg
jno
out
test
test
and
lods
mov
pusha
mov
test
sbb
sub
insb
insb
lahf
call
psubsw
std
fidivrl
or
push
out
pop
inc
cld
das
lahf
in
call
insb
in
ds
shlb
pop
ret
inc
mov
mov
dec
idivb
mov
jmp
jnp
dec
leave
movsb
and
lcall
insl
out
pusha
lds
mov
leave
out
inc
pushf
out
mov
nop
inc
imulb
mov
in
lret
jae
push
pop
dec
mov
and
push
lock
faddl
push
ljmp
sbb
aas
cmc
cli
fistps
pop
dec
sahf
fistpll
arpl
and
dec
pop
add
cmp
mov
lret
dec
fidivrl
mov
push
inc
inc
fstps
jo
test
popf
jp
jl
mov
out
push
stc
lahf
ja
rcrl
mov
inc
pushf
pusha
and
jo
iret
inc
clc
ds
stos
or
pop
jns
mov
mov
sbb
pop
sbbl
mov
jno
je
inc
arpl
pop
sbb
pushf
xchg
inc
iret
mov
push
notl
sbb
jmp
xchg
dec
pusha
test
pop
xor
adc
mov
dec
icebp
test
inc
cmp
mov
jl
mov
rclb
pop
dec
mov
mov
jle
push
pop
sub
sbb
mov
in
in
jecxz
fcoml
jmp
pushf
psubsw
pushf
fcoml
xchg
cmp
xchg
ror
aam
imul
adc
dec
clc
lahf
test
orb
adc
lret
cmc
inc
sbb
and
mov
cmp
std
mov
dec
xlat
into
loop
or
clc
and
scas
rcl
xor
inc
cmp
adc
rcrb
mov
loop
cmpsb
mov
push
fisubrl
push
cld
mov
int3
xchg
dec
enter
shlb
jno
arpl
ss
mov
std
imul
scas
js
inc
xchg
adc
in
and
ret
ja
pushf
push
sub
movb
jecxz
mov
mov
add
add
pop
stos
andb
ret
iret
cmpl
cmpsl
rclb
add
in
jne
jecxz
sub
ret
fcom
mov
mov
jns
mov
or
inc
out
sbb
in
inc
popa
mov
pushf
mov
out
jl
jl
mov
add
mov
idivl
leave
cs
mov
mov
cwtl
pop
cmp
enter
daa
mov
adc
stos
mov
lods
lds
addr16
rcrb
fnstenv
jecxz
scas
xor
scas
int
mov
lcall
cld
xor
push
sub
jecxz
repz
subl
rorb
mov
int
scas
lahf
in
push
or
enter
addr16
jns
repnz
subl
adc
insb
jge
mov
imul
mov
xchg
xor
adc
mov
iret
mov
mov
cmpl
xchg
nop
fwait
mov
mov
in
int3
and
pop
push
cmp
pop
fdivs
test
addb
xchg
inc
mov
dec
push
test
cmc
lret
jo
mov
xlat
arpl
add
lcall
cmp
gs
stc
mov
mov
push
pop
mov
subl
cmp
push
stos
xchg
stc
in
cmp
xlat
and
rcl
fcmovb
adc
jl
or
sti
cmc
pop
or
notl
out
push
scas
cmp
pop
outsl
sbb
gs
mov
aaa
aam
imul
xlat
out
xchg
out
je
xchg
inc
aam
dec
lock
inc
pop
inc
mov
aaa
mov
xchg
adc
movsb
fisubrl
jmp
sbb
sti
inc
mov
cmpsb
fxam
sbb
push
sub
gs
aam
xchg
ja
add
sub
jecxz
fs
xchg
mov
jbe
popf
or
or
sbb
dec
dec
jp
sbb
insl
lods
rclb
jnp
loopne
fldt
adc
in
add
stc
sbb
mov
mov
pop
aad
mov
clc
xchg
jp
movsl
mov
pop
enter
jae
test
xlat
mov
xor
push
xchg
inc
jae
scas
test
mov
mov
adc
xor
imul
mov
fisttps
add
jnp
pop
adc
popa
push
and
ret
jb
fs
xchg
xlat
inc
fwait
sbb
xchg
lret
mov
fnstenv
xchg
mov
dec
roll
pop
mov
icebp
push
fidivl
jmp
and
jb
inc
jecxz
test
dec
es
cmp
fcompl
out
or
adc
jae
mov
pop
pop
movsl
test
sub
jno
jae
ja
pop
cmpsl
sbb
sti
testl
rorb
jl
lahf
stos
ss
arpl
les
loopne
insl
dec
lahf
dec
sub
push
xchg
daa
dec
push
inc
mov
out
or
sub
in
je
inc
lea
sbb
jnp
bound
add
and
clc
mov
out
push
call
add
fnstcw
std
or
lock
cs
sub
aam
or
jne
shr
jg
fucomip
fwait
ret
or
inc
hlt
push
adc
rorb
pop
inc
ret
inc
pop
aam
sub
push
cmpsb
icebp
out
sub
fdivrp
sahf
cli
loop
xor
dec
hlt
jnp
orl
lds
add
or
loopne
faddp
in
rcrb
inc
lods
pop
aad
test
ficompl
mov
js
mov
call
mov
xor
inc
and
sub
add
cmp
out
fldenv
pushf
push
sub
inc
push
or
scas
pushf
or
push
adc
cmp
inc
dec
loop
pop
or
push
out
test
lahf
add
lea
shll
test
cld
stc
dec
mov
insl
int3
aas
push
mov
movb
xsavec
mov
push
jno
scas
stos
and
pop
push
mov
imul
and
popl
add
ds
ds
loopne
and
pop
sbb
pop
int
fidivl
lret
sbb
push
inc
addl
rcr
adcl
gs
aaa
popf
push
aaa
sub
xchg
mov
jp
adc
mov
pop
add
clc
lods
jnp
rolb
pop
and
and
push
ja
stos
int3
or
jle
add
sub
test
fwait
popa
adcb
rcrl
mov
lods
push
nop
and
jns
cmc
aas
addb
icebp
adc
shlb
jbe
scas
mov
push
imul
mov
pop
imul
not
sub
and
pushf
and
movsl
xor
xor
mov
mov
push
daa
pop
ss
mov
mov
inc
adc
test
shrl
jge
imulb
nop
out
ds
mov
outsb
lret
popf
out
xor
out
xchg
xchg
cld
cld
outsb
ret
lock
push
lret
lret
sarl
pusha
repz
sub
push
cmp
clc
das
sbb
and
daa
sti
or
mov
inc
inc
in
movsl
addr16
push
loope
loope
jmp
leave
push
add
icebp
or
mov
cmp
aad
cmp
mov
sub
mov
repnz
pop
nop
inc
mov
mov
int
ss
push
push
push
jno
movsb
shr
imul
test
movd
push
jg
mov
xor
pop
mov
push
outsb
jecxz
lea
or
or
outsl
mov
mov
jae
and
stos
and
push
jns
mov
fcmovne
adc
jns
stc
nop
test
std
mov
insl
mov
loopne
mov
dec
sub
mov
xchg
add
xor
sub
jns
mov
movsb
add
ficompl
data16
insb
mov
je
call
inc
jg
insl
shll
ljmp
imul
aas
outsb
adc
enter
insb
clc
fwait
push
sub
adc
ffree
jne
ds
arpl
fsub
mov
mov
shlb
adc
mov
xor
ds
jle
push
pop
jl
inc
in
sub
and
cwtl
clc
adc
int3
pop
mov
xchg
in
and
sarb
outsl
sti
sahf
movsb
mov
mov
xor
lret
mov
imul
xchg
cmp
icebp
and
mov
leave
add
push
fucom
adc
pop
outsl
mov
mov
sar
in
popf
mov
jae
addb
mov
stos
pop
mov
sbb
ljmp
test
ja
or
les
push
mov
inc
pop
cmp
jp
icebp
mov
iret
pop
lds
inc
mov
add
arpl
shll
sbb
loop
xorb
sbb
std
mov
or
push
lods
mov
mov
es
mov
or
or
lock
jmp
sbb
push
ret
gs
iret
push
out
push
jno
es
cltd
insl
mov
xchg
mov
incb
and
fwait
inc
out
xchg
fwait
pop
fsub
shlb
ror
in
mov
clc
in
rol
flds
arpl
cli
pop
imulb
xor
add
jp
or
sub
cltd
cmp
xchg
pop
pop
cmp
in
fistl
loope
and
leave
mov
movsb
lock
mov
mov
sarb
lods
jns
shll
scas
popl
pop
outsl
xor
xor
enter
pop
test
adc
ret
or
pop
pop
sub
les
ds
stos
push
mov
cs
pop
in
dec
sbb
mov
xchg
mov
loope
dec
pop
and
gs
fldcw
fiaddl
add
cmc
sbb
push
pop
and
sub
pop
pop
iret
adc
shrl
call
xchg
loopne
adc
data16
add
jae
add
sub
mov
push
cmp
mov
outsl
cli
mov
add
xchg
ret
stos
xor
sub
jecxz
jge
fstps
xor
ficomps
test
or
arpl
addr16
aam
bound
cltd
sbb
sub
jmp
dec
lds
and
les
jo
xchg
out
mov
pop
jno
dec
jp
cmpb
xor
xchg
or
pop
fmull
mov
lods
push
movsb
outsl
lret
mov
ret
dec
test
push
add
out
fchs
call
cmp
dec
inc
cmpl
push
push
dec
and
inc
loope
mov
loope
test
jecxz
call
lods
mov
sbb
mov
pop
fs
sbb
mov
sub
mov
inc
mov
call
fiadds
rorl
aam
lods
fisttpll
les
push
push
adc
lret
repnz
and
jmp
aaa
jp
shlb
jmp
pop
mov
pop
mov
adc
loope
lcall
out
pop
xlat
fwait
mov
xor
ljmp
push
iret
imul
mov
stos
lods
into
out
sbb
pop
stos
pop
lock
mov
test
out
ret
test
mov
insl
xchg
xchg
leave
xchg
leave
adc
or
ja
pop
dec
das
jle
fmull
nop
mov
mov
dec
and
dec
mov
aad
push
ret
in
aam
or
nop
shrb
and
fimuls
dec
nop
mov
mov
sbb
mov
xchg
decl
rep
and
psllw
cmp
stos
lret
movsb
lcall
sbb
loopne
sub
aaa
and
enter
mov
in
sbb
sar
movsl
adc
bound
mov
sub
and
pop
push
arpl
mov
dec
pop
push
jno
mov
jp
mov
or
les
cmp
inc
in
mov
mov
push
and
dec
ljmp
lods
and
inc
mov
xor
repnz
push
addb
addr16
sbb
pop
cwtl
imul
sti
sti
or
leave
mov
adcb
add
mov
sbb
pop
xor
loope
int
lret
aaa
push
cwtl
lret
and
sarb
xchg
mov
mov
jge
daa
filds
push
xchg
or
test
or
pcmpeqd
leave
pop
int
xor
mov
jmp
xor
pop
nop
ja
pop
and
mov
fs
pop
clc
xchg
add
push
lea
in
or
or
je
gs
jg
paddusw
icebp
adc
adc
inc
lods
mov
cmp
out
dec
cmp
add
pop
xor
push
push
je
pop
cmp
in
lret
and
in
sbb
jnp
xchg
cld
xchg
xor
lock
inc
cli
scas
mov
pop
loope
outsl
inc
cmc
push
sbbb
jns
pop
ds
stos
jbe
mov
iret
rcrl
in
push
lods
rcrl
movsb
mov
cmp
mov
xchg
lret
jge
push
dec
out
stc
int
in
mov
ficomps
sub
dec
xchg
mov
out
test
add
mulb
test
test
fwait
cmp
insb
pop
or
into
insl
mov
lret
out
aam
mov
dec
ljmp
mov
push
pop
bound
icebp
aaa
or
mov
mov
stos
sbbl
xor
mov
rcrb
outsl
sti
lret
ret
inc
decb
cmovge
fwait
jno
fyl2xp1
js
iret
pop
pop
mov
pushf
mov
js
or
pop
iret
pop
adc
or
test
or
lods
inc
mov
int
xchg
in
and
dec
pop
inc
imul
pop
sti
loope
imul
sub
dec
loope
leave
sbb
fs
inc
fdivl
pushf
mov
test
mov
movsb
out
mov
fimull
lods
sti
enter
or
inc
cli
lock
das
and
loop
inc
mov
sbb
mov
pop
mov
mov
mov
add
mov
dec
lcall
sti
cld
add
push
aas
inc
xchg
sahf
pop
and
pop
mov
or
mov
dec
sbb
pop
test
int3
rorl
push
ret
test
jp
insb
rcrb
cmp
ret
sub
add
jmp
mov
mov
and
movsb
xor
sbb
mov
fisubl
nop
repnz
ds
sti
test
sub
jp
pop
stos
ljmp
mov
add
daa
fstpt
sbb
out
pop
add
or
sbbb
pop
fisttps
nop
adc
shlb
pop
mov
add
sub
pop
or
xor
aad
mov
sti
pop
andb
nop
mov
ret
adc
clc
mov
mov
pop
push
xchg
xchg
lret
jp
cmpsl
push
or
arpl
out
xchg
xchg
cmc
jg
fidivs
divl
adc
out
sahf
push
mov
int3
lea
adc
faddl
repz
and
sub
repnz
pop
adc
stos
cld
sbb
in
sbb
pop
mov
addl
lock
test
pop
jnp
push
push
mov
adc
pop
leave
daa
adc
clc
mov
or
mov
adc
inc
out
pushf
rcll
out
inc
cmpsb
aam
sahf
mov
cmc
lahf
lcall
int
inc
mov
mov
adc
out
sbb
sub
aam
int
and
mov
mov
adc
mov
push
jp
lcall
aam
xor
sbb
cmpsb
mov
dec
jl
jmp
xchg
fcmovu
xlat
test
xchg
cmp
subl
aas
mov
ds
iret
mov
mov
jne
popf
in
cld
decl
cmp
push
and
pop
sti
jae
imul
stos
add
imul
push
orl
roll
mov
mov
add
xor
sub
dec
and
pop
pop
push
inc
repnz
lret
push
adc
repnz
not
jmp
jae
and
scas
adc
sbb
sbb
sub
mov
push
and
cmp
add
jge
push
fs
dec
or
lret
shll
sbb
insb
add
and
jb
lds
jecxz
cmpsl
fcmovu
ja
sahf
scas
cli
jae
lahf
xchg
into
mov
unpckhps
mov
push
int3
sbb
inc
mov
jl
and
sbb
inc
dec
xchg
and
xchg
pop
jb
int3
cmp
cmpsb
jae
pusha
cmp
mov
xchg
nop
rcll
idivb
mov
or
aad
ja
or
decb
shl
push
add
sbb
out
xlat
mov
jb
out
jge
ficomps
mov
add
sub
cmp
and
sbb
jns
push
jg
outsb
cmpsb
xchg
leave
js
jmp
or
out
adc
stos
insb
adc
cltd
and
jne
and
mov
or
jecxz
sub
movsb
or
lods
jecxz
loope
aam
pop
jo
mov
dec
ret
push
test
fs
mov
sahf
sub
push
frstor
mov
sub
gs
pusha
mov
push
flds
int
add
inc
dec
jno
sub
or
mov
iret
and
cmpsl
inc
mov
cwtl
pop
imul
clc
int
inc
adcb
bound
imul
sbb
sub
jle
sbb
mov
jne
inc
xchg
dec
pop
addr16
stos
enter
add
mov
mov
mov
dec
loop
and
xchg
mov
inc
mov
dec
mov
lods
pop
scas
loopne
sub
shlb
dec
jp
lret
jne
cmovns
bound
jbe
shr
cmpsb
adc
add
fisubl
and
pushf
inc
dec
xlat
and
jae
sub
lahf
loope
push
ds
out
outsl
jp
or
call
sarl
sbb
pop
insl
or
adc
mov
lods
xor
lock
rcrl
and
push
push
cs
and
pop
jae
divb
iret
push
xchg
jns
xchg
push
loop
test
rcll
int3
je
adc
insl
call
hlt
stos
add
arpl
loopne
hlt
mov
insl
andl
out
cwtl
jo
mov
and
mov
mov
mov
mov
stos
inc
push
not
test
and
xchg
jg
movsl
mov
call
mov
pop
cmp
inc
loop
xchg
pop
adc
aam
jne
enter
mov
and
xlat
sub
push
mov
mov
push
test
add
adc
cmp
lods
or
shl
in
mov
push
pop
daa
movsl
mov
or
sub
sbb
push
add
int
sub
push
shlb
mov
test
adc
ss
or
sub
rep
gs
popf
jl
out
push
ds
sbb
imul
aaa
sub
scas
rcll
mov
push
mov
adc
adc
adc
rcpps
stos
aaa
cld
fisttpll
mov
inc
fisttps
jp
and
movb
xchg
xor
sahf
mov
in
jl
imul
adc
push
cmp
xchg
sbb
adc
xor
adc
sbb
scas
push
xchg
mov
or
shlb
mov
xchg
sbb
sbb
pop
inc
aas
sub
insl
cmp
add
cltd
adc
xchg
cmpsb
jl
hlt
cld
inc
add
cmp
imul
inc
scas
sahf
jne
add
int3
mov
loopne
xchg
rcr
or
cmpl
lock
roll
outsl
add
js
ljmp
das
xor
or
fiaddl
outsl
pop
mov
and
ljmp
notb
outsl
ljmp
jl
fimuls
lret
stc
scas
movsb
es
mov
in
fldcw
cmp
sarl
push
and
cli
pop
jb
call
mov
stos
iret
mov
cmp
outsl
mov
inc
jecxz
adc
sbb
fidivl
xchg
repz
push
clc
lods
jns
cmp
loope
mov
sbb
lods
popf
jge
and
dec
loope
or
inc
cmpb
push
dec
pop
adc
jae
lcall
push
lahf
pop
push
movsb
mov
inc
push
ja
xchg
jecxz
cmp
add
sbb
sti
rorb
xchg
in
imul
fldl
lcall
push
or
std
adc
adc
mov
jae
mov
mov
loopne
in
insl
jo
mov
sbb
aas
jl
ret
adcl
adc
out
daa
stos
push
push
pop
aas
sub
add
daa
push
and
test
mov
repz
scas
push
iret
in
or
jmp
xchg
iret
icebp
lods
and
lahf
cmp
and
popf
frstor
mov
out
sub
push
sub
mov
rorb
push
xchg
inc
dec
mov
inc
in
xchg
js
push
mov
popf
cld
popa
fcoml
cmp
mov
or
dec
leave
jg
xor
jne
jne
ljmp
xor
mov
dec
and
decl
jecxz
insb
mov
fldt
pop
dec
cli
lcall
jnp
jle
xor
shrb
pop
pop
push
or
aad
push
insl
aaa
adc
mov
repz
leave
jne
pushf
outsl
out
loopne
mov
ja
hlt
xchg
jb
cmp
sbb
in
mov
dec
fdiv
adc
mov
pop
daa
cmc
cmp
and
icebp
stc
cmc
movsb
fucom
popa
jae
sbb
or
lret
mov
cmp
das
add
mov
push
push
mov
and
in
fildl
mov
and
sub
add
leave
adc
lret
mov
sbb
ficoml
in
xchg
imul
sub
inc
push
shr
adc
out
popa
test
inc
xchg
std
dec
xor
inc
aaa
addr16
jae
pop
mov
jg
push
and
std
add
cmp
pushl
push
push
sbb
idivl
mov
mov
inc
and
aas
jbe
jg
push
xor
dec
mov
inc
sub
shll
jo
pop
mov
lea
push
sbb
ficoml
fcomps
xorl
loopne
fstpt
cmpsb
lfs
fwait
add
hlt
pop
shl
push
add
adc
jecxz
pop
xor
pop
lea
push
mov
mov
pop
xor
sbb
pop
fdivrl
xor
adc
sbb
sbb
cmpsl
mov
inc
adc
xor
pop
clc
push
aad
push
mov
xor
xchg
ds
dec
dec
out
dec
enter
fstps
mov
lcall
add
leave
lods
test
loope
cmpsb
mov
sbb
insl
fmul
notl
adc
cmp
icebp
nop
sbb
sti
ja
sbb
adc
nop
imul
leave
mov
jno
into
xor
xlat
imul
inc
test
fwait
test
sub
jmp
mov
jb
mov
shrl
stc
aas
jne
inc
xorb
sbb
fimuls
out
push
mov
fs
hlt
popf
and
lcall
push
or
rcrb
mov
xchg
lds
insb
scas
jle
or
lret
mov
jl
jbe
pop
fcmovnb
ja
sub
rorl
das
xchg
dec
mov
xchg
and
pop
pop
mov
or
xchg
cmp
nop
out
out
jne
sbb
pushf
std
fisubl
xor
dec
adc
imul
lahf
sbbb
jp
imul
sarb
xor
or
daa
xchg
xchg
lea
jmp
xchg
sahf
sub
push
sbb
mov
in
jo
push
pop
cmpsb
jne
int
cmp
cmp
xchg
arpl
lods
mov
stos
sti
pop
or
push
enter
out
sbb
and
pop
jae
repz
lret
xor
mov
addb
data16
inc
inc
leave
xchg
scas
dec
sub
mov
mov
sbb
push
mov
inc
push
push
jp
xchg
lahf
add
int3
in
inc
mov
jae
jbe
inc
mov
adc
jae
pop
das
out
or
mov
fdivp
imul
adc
dec
stc
mov
fdivr
adc
ja
ret
inc
shlb
xchg
jle
cmp
lahf
inc
ror
sub
cmp
stc
mov
sahf
ficompl
adc
lods
and
shrb
cmpsl
inc
test
pop
movsl
fistl
ljmp
test
xchg
inc
jle
outsb
pop
iret
into
cmp
out
ds
push
lods
movl
jle
int3
scas
xchg
ljmp
sub
dec
xor
sub
fwait
add
xor
lods
sbb
rcr
scas
faddl
and
ret
mov
pop
fs
jno
pop
das
sub
fadd
insl
jle
push
mov
add
out
data16
xchg
mov
stos
lea
lret
pop
jo
fldl
mov
sbb
out
lock
add
pop
push
popf
sub
fisttpll
pusha
test
rcr
xchg
lods
inc
mov
jno
das
push
add
out
call
jne
push
mov
hlt
call
jle
mov
jbe
push
inc
sub
cltd
lock
movswl
int
pop
xlat
divb
jae
cli
xchg
mov
in
and
lcall
dec
gs
inc
into
daa
fs
add
dec
mov
cmpsl
mov
jbe
repnz
sarb
arpl
mov
in
jecxz
mov
aaa
pusha
insl
leave
loope
arpl
add
push
or
adc
outsl
mov
cwtl
test
test
mov
lea
xchg
inc
repnz
loopne
int
push
addl
mov
push
push
push
push
daa
stc
cs
sbb
pushf
adc
xorl
out
test
cwtl
mov
daa
insl
push
ret
xchg
sysenter
and
adc
cmp
dec
mov
test
inc
mov
sub
and
std
in
ret
push
lods
testl
pop
xchg
pop
mov
pushf
repnz
mov
adc
stos
repz
cld
add
dec
and
xor
cli
push
jbe
xor
or
cld
cmp
cmp
jo
sbb
mov
or
inc
hlt
das
mov
xorl
in
push
cltd
in
imul
out
xor
repz
inc
sbb
cmpsb
mov
add
stc
xor
rorb
shlb
push
mov
add
mov
pop
shl
jl
fildl
fists
jg
pop
fsubs
sbb
pop
inc
sub
and
dec
mov
outsb
add
mov
push
ret
repz
pop
cltd
test
mov
ljmp
and
lcall
pop
mov
int
add
or
repz
and
call
into
add
sti
sti
mull
dec
push
iret
add
or
mov
faddl
fcoml
inc
iret
flds
idivb
and
cld
mov
jg
jg
mov
les
push
inc
popa
repnz
cmpsb
imul
add
cmpsl
int3
ljmp
pop
stos
div
mov
inc
pop
push
push
fbstp
sbb
or
push
testb
fsub
iret
stos
movsl
cmp
sbb
pop
inc
dec
test
cmp
stc
out
ds
test
nop
into
xchg
mov
testb
inc
xor
mov
inc
icebp
jnp
lret
and
jns
mov
add
mov
push
imul
test
sti
je
test
outsb
mov
xchg
mov
mov
adc
sub
fwait
inc
push
das
out
mov
push
mov
cltd
shrb
stc
push
sbb
xchg
push
push
sti
int
sti
fdivs
or
jecxz
test
dec
pusha
scas
sbb
jb
adc
dec
push
aaa
fwait
lret
sbb
pop
pop
adc
out
adcl
xor
push
sahf
xor
data16
loop
into
movsl
mov
push
inc
cmp
iret
dec
out
mov
in
adc
jl
cmp
into
lds
test
test
les
push
lea
or
pop
gs
das
insl
jnp
jnp
fidivs
bound
sbbl
or
push
sahf
sti
push
dec
jo
adc
icebp
inc
xchg
xchg
mov
and
jne
lods
pop
mov
movsl
xchg
push
pop
sahf
loope
cmp
and
adc
jl
xor
outsb
movsb
loope
sub
pop
add
or
sarb
add
in
lea
imul
frstor
faddl
pusha
ret
cmpsl
push
jp
mov
cmc
push
in
dec
int3
ja
int
cld
dec
cmp
sub
jp
mov
lock
popf
inc
push
sbb
adc
mov
in
lock
mov
clc
loop
je
push
out
or
inc
push
jge
xor
push
cmp
lds
outsl
hlt
out
popa
pop
inc
jb
mov
adc
rolb
pusha
sub
mov
scas
fadds
scas
xor
pop
jnp
iret
ret
in
lret
dec
or
mov
push
pop
mov
pop
mov
das
push
mov
push
lahf
push
mov
sti
gs
addr16
mov
xchg
push
jl
insl
add
aaa
xchg
adc
insl
sbb
clc
cld
test
arpl
std
std
aaa
mov
js
inc
jge
xor
sub
lods
inc
sub
xchg
leave
dec
sbb
rsqrtps
add
push
mov
jl
rcrl
inc
mov
outsl
xor
aam
repnz
fisttps
fbstp
cmpsl
jne
int3
or
popf
jl
push
inc
lds
les
test
outsl
mov
hlt
pop
push
mov
ret
sub
mov
fstps
test
int
or
insb
es
fistpl
add
iret
add
outsb
scas
gs
and
mov
nop
inc
sbb
sub
pusha
push
xchg
add
sahf
xchg
mov
jmp
stos
adc
pop
and
jb
adc
push
test
sbb
adc
daa
sub
inc
xor
sub
lea
addr16
rcrl
push
inc
stc
fwait
inc
jle
sub
dec
les
mov
or
imul
stc
and
xor
in
cmp
dec
push
mov
sbb
push
push
lret
lret
add
pop
jle
leave
mov
pop
push
lahf
loop
dec
jg
nop
sti
cmpsl
jno
aaa
in
mov
dec
xchg
push
sub
lret
and
fs
mov
mov
sub
popl
out
shlb
cmp
xchg
mov
jge
mov
mov
sbb
ja
insl
outsb
out
mov
test
ja
xor
or
xor
inc
outsb
xor
imul
out
mov
or
inc
outsl
push
dec
jg
mov
gs
repz
icebp
clc
arpl
dec
lcall
add
stos
fnstenv
mov
sbb
rcrb
out
sbb
xchg
imul
or
mov
inc
bound
fsts
mov
pushf
in
sub
mov
mov
and
rorl
pop
clc
sbb
loopne
test
inc
faddl
call
bound
bound
dec
rcrb
or
and
or
mov
test
lea
repz
xchg
pop
pop
or
inc
call
repz
xchg
add
mov
cltd
ret
jecxz
mov
bound
fdivrl
mov
xor
jmp
or
dec
pop
sub
lds
xor
cmpsb
cmpl
ss
scas
movsb
into
scas
and
mov
jp
call
mov
cli
dec
inc
xlat
cld
and
lret
xlat
cmc
int
js
outsl
into
mov
push
cwtl
fnstcw
or
push
aas
stos
out
jp
mov
leave
int
fs
fadds
dec
out
dec
aad
lock
xor
arpl
daa
push
jg
or
mov
gs
and
fcompl
xor
icebp
mov
into
xchg
xor
aas
pop
xchg
mov
les
and
cmc
shrb
and
inc
xor
jge
call
shlb
rorb
mov
jns
push
les
pop
inc
hlt
xacquire
mov
jge
imul
ds
jae
mov
inc
pop
iret
js
add
inc
adcl
mov
sub
cmp
call
mov
dec
test
imul
mov
mov
out
lea
inc
mov
loopne
jg
push
stos
cwtl
shlb
je
sbb
pop
test
dec
sbb
pop
mov
int3
repz
inc
sti
lcall
sub
test
cmp
sahf
jp
jge
insb
scas
in
inc
cmp
cmc
xchg
mov
cmpsl
dec
dec
xor
or
dec
daa
fwait
stos
mov
sarl
lds
mov
mov
cmp
addr16
dec
or
xchg
jo
out
in
sbb
cmp
sbb
and
dec
adc
and
int
scas
ljmp
add
lods
push
ljmp
scas
push
movsl
insb
adc
inc
dec
sub
xor
mov
addr16
es
subl
shr
mov
ret
push
rcrl
cli
repnz
xor
aam
and
lret
inc
push
outsl
xor
pop
adc
xchg
into
sbb
pop
inc
negb
xor
and
pop
jno
push
enter
cmp
mov
xor
movsl
xchg
jbe
sti
xchg
in
adc
lret
jae
or
jecxz
jno
movsl
add
mov
fisubs
pop
in
lods
insl
test
push
outsb
test
inc
or
adc
lahf
add
in
pop
popf
xchg
add
mov
ja
cmp
and
push
push
pop
inc
push
sbb
add
movsb
jl
jnp
sbb
push
adc
mov
pop
loop
lds
cld
addr16
xor
mov
inc
cmp
sub
sbb
lahf
gs
jmp
xor
and
sub
and
lcall
push
lcall
fsubrl
hlt
stc
push
mov
mov
lock
mov
jnp
out
xchg
cmp
fisttpl
aaa
and
sub
les
mov
in
push
add
mov
popf
cld
push
jecxz
push
push
arpl
sarl
mov
sti
or
pop
sar
xor
pop
push
sub
movsb
mov
ja
push
inc
mov
dec
inc
pop
int
cmp
inc
jmp
adc
push
inc
shll
sbb
jp
sbb
ds
add
scas
or
pop
inc
aaa
clc
jge,pn
sub
aaa
lahf
stc
dec
pop
cli
scas
hlt
inc
arpl
dec
movsl
and
mov
or
mov
sub
xchg
jmp
outsb
arpl
add
iret
xchg
or
cmp
jbe
insl
sub
sub
in
push
pop
jne
sarb
inc
mov
xor
popa
jnp
push
xor
jb
sti
pusha
hlt
push
pushf
and
push
mov
fsubrp
push
rclb
rcrb
cmpsl
test
arpl
mov
cmp
push
outsb
aas
or
sub
stos
and
mov
mov
sbb
push
sbb
sbb
push
dec
inc
push
pop
mov
push
aaa
arpl
pop
jmp
push
jns
or
cmpsl
pop
sub
mulb
xor
inc
gs
rclb
adc
incb
push
inc
cmp
mov
dec
mov
ja
pop
xchg
stc
loope
adc
jge
les
jge
std
sbb
arpl
out
movsb
mov
stos
shrb
jne
push
inc
xor
xchg
nop
sbb
neg
mov
cmpsb
clc
les
test
mov
sbb
xchg
int
sub
jno
inc
nop
fadd
scas
sub
jns
out
cltd
jmp
mov
inc
in
inc
xlat
cwtl
jmp
loope
shlb
push
jo
lds
xor
int3
outsb
or
loop
daa
fs
sbb
add
mov
fsubrl
xor
mov
push
ret
add
loop
adc
pop
aas
jl
testb
adc
jb
fs
idivl
ja
jecxz
mov
sbb
sbb
in
push
mov
pop
cltd
push
xor
lret
dec
adc
mov
jle
sub
insb
fmulp
adc
sbb
fmull
movsb
sahf
insl
push
in
jmp
lock
ss
jo
ret
outsl
scas
sti
notb
mov
or
push
cwtl
pop
in
mov
loop
sbb
adc
jo
xchg
stos
adc
mov
fnsetpm(287
jmp
mov
aam
push
iret
dec
stos
inc
add
mov
mov
fs
push
cmp
js
add
pop
fldcw
repnz
xor
mov
mull
jle
xchg
dec
ret
jno
dec
xchg
push
mov
cmp
lds
in
lock
fs
xor
rolb
sbb
jns
xchg
test
pusha
sub
cmpsl
gs
lahf
lahf
cmp
jo
subb
ss
loop
or
add
cmpsb
cld
data16
nop
inc
int3
add
xchg
or
stc
xchg
jp
stos
jge
int3
lret
dec
popf
test
out
jne
ds
dec
dec
cwtl
xchg
cmp
mov
call
das
lea
bound
mov
mov
jb
xor
sub
rcrb
adc
push
sbb
adc
or
clc
test
mov
in
insb
mov
or
hlt
fwait
or
test
mov
push
sbb
sbbb
mov
out
lcall
or
les
cmp
into
into
dec
xor
cmpb
and
test
outsl
fidivrl
enter
call
and
jmp
or
xor
jo
in
sbb
loop
push
call
xchg
push
jbe
pop
fsubs
jne
ja
mov
mov
mov
loopne
add
outsl
pusha
sti
test
leave
xchg
sbbb
pop
sbb
add
jbe
jecxz
add
and
les
mov
std
movsb
addr16
jae
aaa
mov
lcall
sbb
xchg
pop
sub
or
mov
ret
sbb
sub
andl
jae
mov
xor
fldt
push
push
cmp
push
inc
test
stc
bsf
pop
lcall
pop
inc
mov
push
pop
insl
jnp
or
inc
lcall
inc
xor
das
es
and
add
pushf
stos
sti
push
cmp
push
pop
xlat
mov
mov
adc
xor
dec
push
and
sbb
cwtl
mov
imul
cmp
je
scas
xchg
outsl
jecxz
jg
xlat
mov
or
test
jg
out
rorl
rorl
jge
push
or
imul
mov
mov
negl
or
mov
pop
sbb
int
lods
stc
and
ljmp
dec
xor
jne
out
in
mov
lock
add
mov
dec
call
in
sub
and
movsb
aaa
dec
in
xchg
adc
das
pop
movsb
fcoml
inc
stc
punpckhwd
push
xor
jle
mov
aaa
xchg
jno
cwtl
push
shlb
call
or
idivb
mov
sub
mov
lcall
sub
dec
arpl
fidivl
ljmp
sbb
jg
jle
ret
mov
ljmpw
cmp
mov
push
out
cmp
addr16
jl
iret
mov
lds
mov
lods
or
enter
leave
dec
or
and
add
dec
pop
cmp
iret
aaa
ret
mov
sub
shll
jae
xchg
or
lret
mov
sbb
sbb
loop
mov
jle
sub
dec
or
aam
stos
lds
push
es
adc
mov
mov
mov
add
sub
popf
rol
xlat
mov
int3
mov
idivb
mov
inc
mov
addr16
rcll
cmp
sbb
in
popa
arpl
aad
pop
inc
in
sub
hlt
call
inc
lahf
movb
push
cmp
pop
in
pop
iret
out
pop
xchg
lret
je
sub
mov
mov
pop
clc
pop
imull
into
cmp
sbb
cbtw
lea
dec
cmp
loopne
cwtl
rorb
mov
mov
lret
pushf
push
fdivrp
nop
pop
dec
add
cs
cmpsl
adc
cmp
push
mov
inc
lret
add
out
jns
mov
iret
in
pop
leave
std
mov
adc
pop
iret
insl
add
arpl
es
shrl
jg
pop
dec
repz
jbe
mov
stos
or
rorb
add
pushf
cltd
lcall
xchg
cwtl
inc
cli
and
sub
mov
adc
mov
mul
ret
mov
jmp
les
add
xchg
fs
fnsave
adc
cwtl
cld
movsl
mov
sbb
jmp
push
cmp
inc
data16
les
lahf
push
ds
push
jbe
or
dec
sub
in
fcoms
push
inc
add
inc
shrb
jge
pop
inc
or
fcoms
pop
jle
jmp
mov
cwtl
push
lods
repz
mov
push
scas
pop
cwtl
mov
in
divb
cmpl
fcomip
sub
rorb
adc
mov
xor
add
jbe
sahf
test
call
ffreep
jns
cli
pop
push
xchg
loope
cmp
jne
outsl
sbb
fcoml
and
or
pushf
xchg
adc
filds
xchg
out
cmp
cmpsl
ds
sub
lods
lock
decb
mov
mov
cmp
mov
ja
cmp
stc
sub
or
pop
sub
push
test
pop
cmp
push
sarl
pushf
mov
lock
inc
push
dec
test
sbb
lea
xchg
sub
std
xorl
dec
rorl
ficoms
stos
call
push
mov
inc
push
xchg
jmp
jo
and
dec
xor
fldt
push
dec
insb
mov
stos
rcll
imul
mov
gs
sti
cmp
sti
sbb
imul
cli
rorb
xchg
and
or
dec
es
cli
test
sbb
scas
dec
shlb
jnp
add
scas
out
iret
xchg
dec
stos
add
cld
mov
xlat
jbe
ss
sbb
lods
ret
enter
and
repnz
sbb
inc
mov
or
in
xchg
push
or
push
and
ja
and
xchg
pop
lods
mov
loope
adcl
mov
mov
out
cmp
mov
and
sbb
cmpsl
addr16
mov
sbb
mov
or
ffreep
ficoms
lret
pop
adc
sbb
or
inc
popa
cmp
xchg
adc
subb
add
aam
sub
or
jmp
loopne
or
xchg
loopne
or
pop
lret
mov
jae
mov
sub
sbb
sar
push
jge
and
addr16
mov
popf
mov
sti
pop
mov
cwtl
sarb
fdivs
js
loope
mov
or
push
jno
lds
in
out
or
divb
clc
mov
enter
int
in
inc
pop
shll
sti
mov
jg
adc
leave
pop
sub
mov
mov
cltd
popf
push
into
add
cmp
repz
lea
jne
dec
fidivrs
aam
cltd
cmp
and
into
test
add
sub
xor
stc
inc
jno
lea
jb
mov
stc
scas
sub
lfs
jbe
push
xor
pop
fmul
mov
pop
pop
push
xchg
adc
mov
pop
xchg
xchg
mov
lods
sub
pop
mov
int3
mov
adc
push
test
mov
scas
rcll
imul
push
ja
lea
and
ret
dec
in
cmp
sub
jp
mov
js
lds
cmp
adc
xlat
xchg
xchg
sub
pushf
int
out
mov
pop
not
mov
fistps
arpl
cmp
mov
or
test
outsl
or
enter
xor
pop
dec
jg
and
jle
pop
and
imul
sbb
push
mov
scas
xchg
aad
and
sub
lods
cmp
and
stos
pop
arpl
push
push
fisttpl
sti
push
pushf
dec
insl
xor
jno
add
fcmovne
sub
adc
mov
push
dec
jge
int
or
loop
mov
fisubs
sbb
loopne
dec
pop
xor
movsb
pop
int
and
and
jns
jo
cmp
out
inc
in
sub
and
int3
mov
lds
dec
cmp
xchg
stos
mov
jo
push
sub
and
push
adc
or
stos
cmp
mov
jle
stos
mov
jmp
push
pusha
testb
out
or
faddl
mov
xor
out
mov
sti
mov
imul
movsl
imulb
daa
mov
sbb
xor
mov
push
or
aam
xlat
sbb
mov
push
push
cwtl
orl
loope
mov
xor
mov
clc
mov
sbb
jns
jge
lea
jno
stc
std
mull
pop
shr
adc
or
xor
pop
js
lahf
imul
fldenv
adcl
mov
scas
pop
test
aam
cmc
cmp
pop
aam
lods
arpl
mov
out
cmpsb
pop
aaa
add
scas
repnz
mov
notl
aas
add
pushf
sbb
sub
mov
inc
and
aam
xor
std
aad
mov
and
pop
in
test
pop
add
mov
cmp
pop
and
mov
or
mov
push
mov
cltd
andl
or
or
add
inc
adc
cld
adc
xchg
fimuls
mov
mov
fdivs
mov
imul
sub
enter
push
mov
xor
in
stc
lret
movsl
xor
sub
les
in
cmp
xchg
ss
xor
movsb
shl
sbb
lcall
push
or
xchg
imul
rcll
jo
lock
push
jmp
aas
in
and
mov
mov
sbb
outsl
sub
hlt
test
push
dec
mov
int
rorl
sahf
adc
ja
xchg
shl
add
dec
jge
and
loopne
pop
scas
mov
lahf
adc
and
adc
mov
add
inc
ret
and
add
xchg
xor
inc
rclb
cltd
push
test
cmc
ds
in
ret
js
jg
out
aam
push
pop
push
pop
xchg
sbb
xchg
jl
sahf
aad
push
fdivl
mov
push
repz
fiaddl
push
rcrb
mov
and
xchg
add
dec
sbb
loope
cmp
pop
outsb
push
andl
daa
mov
dec
ss
xchg
lahf
mov
in
loop
push
imul
jbe
push
xor
mov
ljmp
mov
pop
or
clc
cli
jns
test
cmpsb
xor
in
test
test
cmp
xor
and
push
lods
scas
idivl
and
mov
int3
xchg
sbb
and
sub
cli
xor
and
jb
inc
daa
int3
addr16
das
xchg
dec
jmp
inc
xor
hlt
pop
jle
lret
popa
leave
cmovb
add
push
int3
or
stc
sahf
xchg
fnstenv
fwait
push
sub
xchg
pop
cmp
xchg
or
ljmp
sbbw
inc
and
or
add
mov
mov
pop
lea
pop
mov
shr
mov
or
shl
int3
aam
leave
into
adc
std
push
call
ret
or
mov
fstl
fwait
push
mov
lds
into
push
nop
mov
dec
out
pop
pop
push
test
fiaddl
mov
push
sbbb
aad
imul
insl
inc
dec
cmpsb
pop
jg
add
iret
push
bswap
daa
int3
inc
mov
icebp
or
test
bound
notl
loopne
loopne
cmp
xchg
and
xlat
in
sub
es
jb
mov
jae
repnz
stc
lidtl
out
mov
and
shl
xchg
push
and
ret
fsubr
dec
xor
adc
sti
ss
pop
mov
or
pop
xor
jnp
xchg
jmp
dec
test
mov
mov
adc
int3
mov
imul
loop
jmp
dec
ret
addr16
lcall
in
mov
cmp
or
and
jmp
xchg
or
push
pop
pop
cli
mov
mov
mov
sbb
in
xchg
pushf
pop
imul
cwtl
jle
aas
imul
leave
mov
jae
adc
sbb
iret
mov
add
jns
inc
sub
out
jge
pop
dec
cwtl
adc
sub
or
sbb
movsl
sub
subl
dec
in
rcl
mov
rorb
pop
inc
fcmovnbe
lahf
idivb
inc
cltd
mov
mov
aaa
mov
inc
cs
pop
rcll
popa
test
or
cltd
pusha
ljmp
mov
pop
das
enter
push
jnp
ss
push
push
into
enter
sub
bound
pop
aam
int3
cmp
fucomp
xchg
mov
mov
sahf
mov
cmc
add
std
cld
mov
shll
gs
and
sub
xor
popf
pushf
pop
jecxz
or
mov
jg
mov
cs
in
add
nop
xorl
mov
and
or
adc
add
add
cmp
in
loop
pop
int
mov
push
loope
mov
jl
cmc
pop
or
adc
inc
mov
imul
out
xchg
in
cmp
inc
jne
aam
out
nop
mov
push
sub
sub
mov
loope
sahf
or
aam
ret
adc
add
adc
scas
push
sbb
in
xchg
out
dec
and
pop
dec
pop
jp
je
int
xchg
movsl
shrb
jle
and
cmp
mov
jmp
or
sub
enter
divl
icebp
jno
into
mov
dec
lea
xchg
fnstsw
mov
pop
ss
lea
jns
fists
xchg
lock
lret
mov
in
fdivrs
insb
sub
andb
pusha
mul
gs
jns
mov
pop
test
and
pop
jge
ja
cmc
cmp
push
and
lock
and
xchg
sub
psubd
mov
dec
cmp
outsb
mov
lds
mov
iret
cltd
fistps
add
jle
jp
rclb
xor
clc
lock
mov
rol
cli
adc
or
jp
negb
movsb
sub
push
roll
sub
add
xchg
sub
adc
stos
cmp
xchg
ud2
xchg
cmc
jb
jge
mov
test
ret
insl
out
loope
gs
fadds
pop
iret
sbb
outsl
inc
sbb
ss
idivb
int
hlt
mov
pop
sbb
idivb
dec
pop
inc
enter
lcall
into
mov
movsl
sbb
repnz
and
sub
pand
sub
xchg
jno
sbb
shrb
std
lea
daa
mov
mov
or
movsl
xchg
push
int3
ss
xchg
cld
mov
pop
mov
lahf
iret
pop
jae
pusha
jae
adc
in
cmpsb
loopne
ja
mov
xchg
jge
mov
push
adc
sub
dec
inc
cmp
int
mov
inc
mov
xchg
xchg
pop
adc
xor
cltd
and
xchg
and
push
push
jecxz
add
mov
fldenv
mov
in
pop
push
loopne
popf
mov
gs
pop
pop
scas
pusha
lds
cmp
lahf
xlat
movsb
out
xchg
rorb
je
dec
repnz
adc
iret
add
cwtl
jo
inc
cmc
mov
push
xor
adc
test
dec
cmp
push
idivb
add
sbb
test
adc
adc
cmp
ljmp
mov
and
jmp
ret
dec
test
adc
test
fsubl
sbb
mov
iret
fsts
lret
mov
sbb
push
or
push
xchg
add
fs
shll
sub
dec
fcoml
adc
mov
fidivl
mov
mov
mov
inc
bound
push
mov
mov
cmpsl
jb
jo
repz
mov
scas
arpl
push
insl
dec
arpl
sbb
xchg
out
sbb
pop
dec
sbb
out
in
jbe
popa
iret
out
insb
test
and
jmp
repz
pop
xchg
scas
call
dec
and
push
and
jmp
int
and
pop
insb
and
xor
sbb
scas
adc
stos
mov
mov
xchg
jge
rcll
jnp
mov
sub
push
sub
cmpl
mov
into
icebp
out
icebp
mov
jae
inc
div
fnstcw
dec
and
fwait
sbb
dec
sbbb
clc
out
push
jge
in
pop
inc
incl
dec
pop
test
push
or
jp
jae
jp
or
lret
mov
fldl
icebp
mov
cmc
xor
mov
jmp
push
scas
arpl
leave
shll
pop
iret
xor
push
push
sahf
data16
push
or
loope
mov
ljmp
lcall
inc
pop
dec
test
or
rcrl
test
sbb
negb
dec
hlt
loop
adcl
sub
pop
ficomps
add
dec
inc
rcrb
adc
or
sub
lods
pop
int3
incb
sbb
mov
dec
and
push
pop
xchg
push
mov
adc
ret
ss
aam
testb
ljmp
push
jnp
in
out
add
sti
movsb
dec
jb
inc
sbb
cwtl
fnstenv
jecxz
jo
outsb
pop
push
icebp
test
xor
and
mov
mov
cltd
fdivrl
mov
inc
fisttpl
jle
int3
lea
clc
call
and
mov
inc
jmp
fstpt
xchg
movsb
hlt
scas
lcall
lahf
and
in
test
cli
insl
xchg
mov
and
sbbb
dec
rcl
das
inc
cmp
jns,pn
movsl
lods
jg
mov
adc
jo
push
fstps
iret
pusha
mov
insb
movsl
push
ss
jnp
xor
fucomi
dec
push
cmc
out
inc
sahf
mov
cs
orl
mov
xchg
jmp
or
in
mov
icebp
fcoml
pop
in
dec
sbb
popa
push
cmp
and
adc
push
shll
push
sbb
pop
jb
push
push
vmovd
inc
pushf
inc
pop
xor
sbb
fildl
pushf
inc
lods
add
jp
fistpl
insl
rcll
mov
popa
insl
bound
ss
ret
add
aam
mov
add
cmpsl
les
lahf
fdivrl
xor
and
test
jge
lods
lea
popf
fildl
clc
push
scas
dec
dec
ljmp
mov
into
xchg
iret
push
enter
inc
dec
add
std
or
test
jg
stc
add
or
mov
shrl
in
cmp
sub
sub
inc
jns
cld
pop
mov
mov
inc
dec
jmp
push
int
test
lock
incl
add
add
push
loopne
pop
into
imul
and
lods
daa
mov
inc
lods
fbld
ljmp
push
and
cmp
stos
jne
lds
sbb
push
into
adc
data16
daa
sbb
lock
loop
ja
add
pop
xor
jp
adc
jle
push
pop
xchg
mov
bound
rclb
pop
xchg
iret
mov
out
inc
sti
dec
out
cmp
dec
outsl
in
add
or
fcmovnb
test
xchg
ss
pop
sub
inc
sbb
pop
cmp
aas
cmp
xchg
mov
pop
add
rcr
cld
scas
dec
sbb
divb
insl
xor
xor
in
sub
cld
insl
mov
nop
cmp
lahf
out
mov
inc
or
add
and
jle
jle
in
popl
movsl
sub
test
pop
out
roll
aad
cmp
mov
lods
mov
leave
out
and
sub
arpl
lock
jecxz
imul
icebp
shrb
andb
sbb
inc
adc
dec
cmp
cmp
scas
cmpsb
or
mov
inc
mov
add
ljmp
inc
stos
or
dec
lahf
mov
pop
rolb
pop
fs
fistl
adc
mov
mov
movsb
loope
xor
test
push
ret
mov
sub
xchg
mov
cli
push
dec
mov
sub
sub
cmpb
bound
pop
adc
imul
adc
inc
dec
inc
inc
repz
mov
add
xchg
enter
jbe
roll
push
iret
data16
push
mov
xor
ret
jl
cmp
push
or
andb
lcall
mov
dec
jmp
xchg
adc
mov
adc
mov
push
cmp
sbb
push
dec
popf
xlat
push
out
push
ret
int
sbb
jge
shlb
mov
arpl
jnp
lret
fsubl
jne
pop
mov
addr16
and
cmp
out
jo
idivb
mov
add
ds
icebp
sub
jo
inc
sbbl
leave
sbb
jno
in
sub
cmp
repnz
lahf
jg
mov
xor
jg
mov
lret
inc
mov
jp
xor
mov
jae
stc
mov
mov
push
nop
add
loopne
mov
jo
pop
sub
fmull
lcall
sub
std
push
cwtl
or
mov
pop
jnp
xchg
mov
jns
mov
mov
push
inc
cmc
ja
jnp
jg
pusha
mov
decb
fs
add
scas
inc
mov
icebp
xlat
lcall
loop
cld
push
orl
xor
popa
cltd
bnd
ss
dec
xchg
fistpl
incl
adc
mov
nop
add
mov
outsb
mov
push
mov
or
lcall
push
inc
shlb
icebp
es
inc
adc
orb
or
inc
inc
xchg
fwait
leave
sub
rol
push
int
and
add
jp
imul
xchg
out
jb
stos
and
pop
dec
add
jns
aaa
sbb
mov
cld
add
sbb
inc
ljmp
popf
mov
sbb
jb
ja
dec
pop
jns
cmp
out
cli
push
inc
lock
push
push
pusha
pushf
inc
sbb
mov
fs
aaa
or
mov
pop
dec
loope
sarl
mov
sbb
mov
dec
push
mov
push
add
outsb
adc
out
dec
mov
xchg
stos
fidivrl
push
xchg
aad
pop
push
into
mov
testb
xchg
mov
pop
mov
out
jo
sub
xchg
push
mov
push
jg
adc
ljmp
add
ja
and
jbe
dec
bound
xor
shlb
cmp
adc
xor
push
jg
sub
in
xchg
aas
pop
mov
ljmp
mov
add
das
mov
dec
xchg
rolb
pop
stos
mov
movsl
mov
fnstsw
sub
stos
xchg
mov
mov
imul
inc
aam
outsb
pop
frstor
inc
inc
xchg
push
or
sub
in
xchg
mov
jb
mov
xorb
pop
jle
in
sub
pushf
pop
in
es
inc
lea
std
outsb
sbb
testb
cmpsb
cmc
adcl
scas
adc
inc
push
std
jb
jp
cmpsl
imul
push
mov
fcmovbe
test
inc
dec
inc
in
xchg
xchg
out
pop
jmp
nop
gs
cmp
push
std
push
lea
pop
or
out
or
popa
cmp
jbe
ja
xchg
or
gs
sub
mov
movsb
xchg
cld
mov
sbb
mov
dec
sarl
lock
orl
fninit
adc
sub
xchg
jnp
decl
jnp
xchg
ljmp
and
lods
add
push
cmp
jmp
into
rorl
jge
dec
out
mov
sbb
pop
inc
add
stc
subl
inc
cmp
or
push
and
sarl
aaa
dec
enter
adc
pop
shr
cmp
mov
scas
outsl
loope
shrl
fnstcw
cmpsl
arpl
dec
xor
and
fistpll
or
imul
adc
ss
xchg
jle
ljmp
push
adc
mov
or
mov
mov
adc
push
mov
fistps
cmc
ljmp
jle
push
sbb
mov
push
push
test
lods
clc
sub
aas
mov
mov
mov
pop
out
je
mov
sub
add
add
les
clc
or
or
icebp
and
cmp
xchg
sub
cmp
subl
jae
shrb
bound
cli
ss
and
cltd
mov
jnp
xchg
sti
jns
jno
cwtl
adc
cli
loope
sahf
sbb
and
push
pop
inc
jns
lret
mov
test
sub
mov
xchg
enter
scas
mov
sbb
test
xchg
mov
test
nop
insb
jmp
jl
sub
out
jp
mov
pop
test
shll
mov
push
push
cs
sbb
rcr
andl
std
sbb
pop
adc
cmp
test
or
or
rclb
test
adc
cmp
jne
je
loopne
inc
mov
sub
pop
scas
frstor
loopne
lods
jne
mov
mov
stos
int3
imul
mov
xlat
in
cmpsb
loope
mov
insb
loopne
lock
mov
sub
cmp
pop
cltd
jnp
sbb
cmp
popf
clc
jbe
jmp
inc
clc
jne
and
loopne
dec
lahf
cmp
stc
cmp
rcll
sahf
mov
push
or
inc
inc
pop
sub
sbb
mov
and
xor
mov
xor
lock
push
push
sbb
fistpl
mov
pop
or
mov
xchg
flds
push
lret
imul
int3
jno
outsl
mov
loopne
jno
into
adc
maskmovq
testl
adc
out
sbb
pop
loop
pusha
push
sub
push
xchg
pop
cmp
cmpsl
sub
ret
pop
pop
mov
movsl
in
rcrb
test
pop
push
roll
sbb
shld
clc
jo
addl
pop
push
clc
jb
aaa
sub
xchg
cmp
mov
popf
push
jnp
add
and
rorb
scas
add
cmp
bound
push
jne
int
sbb
mov
cmp
data16
mov
xchg
lret
push
imul
jb
out
faddl
shll
push
repnz
sbb
les
adc
adc
mov
mov
hlt
out
lcall
mov
pop
push
push
push
mov
lods
lahf
push
adc
jne
in
loope
enter
dec
mov
push
ret
in
mov
repnz
nop
mov
lock
pop
cwtd
cmpb
push
test
lods
divb
cmp
adc
int3
mov
mov
lea
adcl
ss
pop
mov
lods
outsb
xchg
adc
enter
and
jp
daa
push
les
sbb
popa
in
xchg
inc
jbe
inc
sbb
lret
loop
pop
push
dec
jno
imul
cs
adc
ret
jmp
popf
mov
insb
sub
jl
jmp
adc
pushf
fisubs
adc
mov
sub
mov
mov
gs
jae
jl
add
mov
xchg
xchg
and
sub
mov
insb
jmp
cmp
xchg
pop
loopne
das
inc
mov
jne
or
adc
incb
push
subb
add
lea
cmp
sahf
add
popf
mov
push
fldcw
and
sub
pop
dec
jp
fcmovne
std
mov
sarl
inc
ret
push
cmpl
pop
mov
aaa
xor
mov
sbb
and
mov
or
jnp
shr
push
xchg
call
sub
or
inc
cmpsb
xor
lock
mov
es
dec
jge
sahf
xor
add
xor
lret
mov
xchg
sub
xchg
addr16
lcall
fstpt
jns
xchg
xchg
or
inc
loope
push
mov
pop
lock
dec
loopne
loope
adc
into
pop
xlat
sbbb
jecxz
xchg
sahf
outsb
aas
dec
into
push
pop
sbb
mov
push
cltd
or
adc
mov
stos
mov
aam
daa
xchg
xor
lret
loope
pop
int
or
xchg
aas
jne
pop
xchg
sub
or
movsl
fcoms
jg
xchg
jle
enter
iret
add
fucomp
clc
xlat
nop
out
test
jae
adc
dec
jle
push
dec
xlat
aaa
int3
sub
pusha
push
xchg
cwtl
pop
push
stos
mov
xlat
xchg
int3
dec
imul
dec
test
adc
jg
fsub
or
push
sub
call
dec
mov
or
in
jp
mov
xchg
mov
shrl
sbb
cmpsb
sbb
ja
ja
ds
inc
sub
int
imulb
dec
adc
mov
dec
adc
push
sti
in
xlat
sub
sbb
in
cmp
sub
xor
fwait
pusha
mov
pop
sub
mov
sub
mov
sbb
mov
mov
jmp
sbbb
call
mov
inc
insl
ret
fsubs
xchg
mov
enter
lret
aam
xchg
dec
pop
mov
popf
sti
outsb
sub
lcall
shrb
jae
div
add
lea
arpl
lcall
daa
xlat
lcall
imul
scas
inc
mov
fstl
push
fimuls
xchg
pusha
mov
add
xchg
ret
mov
std
pop
mov
pop
mov
les
push
ja
push
int3
lcall
xchg
and
sbb
dec
push
daa
mov
xlat
sti
inc
in
cmp
sbb
enter
jmp
dec
push
or
sti
lods
ret
lea
dec
jg
les
or
decl
negl
push
cmp
mov
push
or
jle
mov
std
sbb
popf
adc
cmp
pshufw
mov
inc
xchg
lds
jnp
ljmp
outsb
nop
out
xor
int
lahf
ljmp
xchg
lret
cs
stos
jne
nop
fimuls
test
mov
inc
push
scas
aas
loopne
cmpsb
mov
jecxz
lret
mov
xor
mov
mov
cwtl
hlt
and
shll
adc
add
push
xchg
std
and
mov
jbe
pop
out
rclb
loope
mov
dec
aam
mov
jg
lds
in
pop
adc
xchg
mov
loopne
push
lds
pop
jl
ljmp
insb
call
cmp
dec
and
mov
test
adc
insl
cmp
add
mov
mov
mov
popa
aam
sub
sar
sub
insl
jle
and
inc
xchg
in
test
xchg
add
arpl
sbb
sbb
std
jnp
insb
add
pop
fwait
pop
gs
std
jmp
jle
lret
imul
and
mov
push
lods
and
es
clc
cld
push
push
pop
dec
jl
repz
lcall
push
ljmp
inc
pop
cmpsl
xor
jl
insl
push
out
pop
sti
scas
fimull
mov
ljmp
lcall
je
mov
std
dec
inc
push
andb
scas
push
dec
or
sub
dec
xor
adc
sub
aad
push
cmp
in
cltd
push
mov
inc
mov
xor
icebp
jle
shlb
pop
push
lcall
cmp
ret
shlb
loope
pop
xor
arpl
inc
imul
dec
adc
nop
daa
xchg
push
popf
or
out
pushw
mov
dec
aad
les
cld
sub
movl
lock
cli
cmp
add
fsubl
ret
movsl
out
enter
fisttps
sub
cmp
mov
dec
mov
add
iret
outsl
xchg
add
fldt
cmp
mov
pop
push
xor
lret
push
mov
std
negl
pop
mov
test
test
mov
in
dec
frstor
adc
add
sub
pop
scas
ret
xchg
js
pop
cmp
mov
sub
pop
test
sahf
cmp
xchg
mov
in
jnp
mov
test
sbb
shl
dec
xor
outsb
leave
mov
push
jo
xor
jns
mov
dec
call
mov
lock
xchg
and
jge
arpl
cmp
inc
lods
sbb
add
decl
sti
stc
mov
mov
shrb
in
mov
inc
mov
mov
inc
lods
stc
mov
adc
push
adc
imul
ret
mov
int3
adc
out
fistl
pop
dec
iret
xchg
dec
mov
dec
or
divb
sbb
push
addr16
ds
mov
xchg
ljmp
outsb
out
out
inc
xchg
push
cld
mov
lea
rorl
call
mov
pop
lds
out
in
mov
mov
push
sub
cwtl
xor
cmc
fstpl
lods
lods
cltd
xor
lcall
rorl
xor
test
cmp
sub
xor
lods
lahf
or
sbb
fildll
insb
scas
scas
mov
and
pop
js
add
add
dec
and
sub
pop
test
sti
xlat
leave
pusha
cmpsl
in
les
fwait
pop
int3
jle
out
dec
std
jnp
fwait
and
sbb
dec
movsl
popa
ljmp
fmull
inc
xor
mov
jg
push
pop
jne
daa
dec
leave
xchg
xchg
outsb
push
out
test
xchg
adc
sub
or
sahf
jmp
jg
loopne
xor
xor
popf
xor
aas
test
mov
mov
sub
fbstp
cmp
aas
sub
mov
adcl
xlat
test
cmp
xchg
idivb
cmp
push
adcb
or
pop
mulb
sub
les
dec
mov
add
lods
dec
stc
mov
fnstsw
push
add
shll
shl
sti
test
adc
lods
ror
jmp
shrb
clc
popa
out
cld
popa
lret
loopne
mov
pop
rolb
or
jl
adc
add
lcall
imul
jle
mov
push
aaa
mov
cltd
xor
loopne
add
cli
pop
call
out
shrl
mov
and
mov
push
divb
pop
outsb
or
mov
mov
mov
sbb
out
insb
pop
in
in
jno
iret
fdiv
jp
pop
in
adc
mov
cmp
mov
aad
lods
lahf
add
mov
pop
pop
sbb
pextrw
mov
jae
je
roll
mov
xor
ss
repz
mov
sbb
and
jecxz
lcall
mov
xor
mov
sbb
out
and
in
leave
cmc
cmp
imul
xor
push
stos
sbbb
pop
add
and
xor
insb
and
xlat
push
pop
mov
and
pop
mov
test
outsb
inc
aas
rorb
femms
dec
mov
sub
out
xor
and
into
sub
inc
negl
push
aaa
dec
nop
lds
neg
in
mov
imul
sbb
scas
ret
push
inc
sub
fcmovu
js
push
mov
sbb
aad
das
fwait
lods
push
mov
push
adc
lods
cmpsl
adc
insl
push
jge
cmp
dec
popf
aaa
inc
add
dec
stos
jo,pt
shll
adc
sbb
pop
sub
inc
repnz
jmp
les
inc
mov
lahf
stc
insl
or
adc
sar
dec
pop
adc
sbb
testl
aas
ss
out
jp
pop
adc
adc
into
and
loop
or
fdivl
stc
push
mov
jecxz
ret
add
mov
xor
mov
inc
adc
pusha
aas
inc
lods
xor
lahf
cli
pop
bound
mov
outsb
movsl
adc
sub
fsubrl
mov
mov
and
ljmp
mov
mulb
xor
gs
lock
xor
lods
cs
push
adc
add
addr16
mov
test
cwtl
insb
scas
lret
movsb
jae
and
sbb
xchg
pop
push
xchg
push
scas
xchg
mov
out
jp
xlat
mov
jbe
nop
movsb
xchg
pop
stos
loop
mov
pop
lret
lods
jmp
cmp
dec
int
fstpl
jp
popf
loopne
mov
mov
fcoms
add
stos
outsl
popf
insl
xchg
test
in
imul
lea
mov
sub
pop
jbe
mov
fdivl
test
loopne
rcrl
mov
jmp
test
repz
sub
movsl
insb
data16
jnp
repz
push
lock
pop
or
or
scas
mov
fldt
outsb
add
cli
lcall
das
jns
cmp
dec
sbb
jo
outsl
popa
fiaddl
push
aad
imul
in
xchg
xlat
notb
fstpt
mov
pop
mov
xor
or
fildll
mov
cmp
inc
arpl
aam
shr
rcll
mov
adc
filds
add
sarl
in
imul
jb
out
xchg
or
inc
adc
das
sbbl
and
icebp
repz
sbb
mov
lods
xchg
mov
addb
inc
repz
imul
lahf
pop
push
pop
leave
mov
jne
in
adc
movsb
popa
ror
inc
mov
movsb
inc
imul
pop
enter
rol
push
pop
hlt
sarb
pop
cmc
jns
shrb
jae
xor
pop
mov
inc
jl
loopne
rclb
aad
mov
adc
nop
mov
inc
jge
sbb
andl
outsb
pusha
sahf
mull
lds
cmpsb
cmp
bound
sahf
sub
stc
in
outsl
xor
iret
ljmp
aas
mov
shl
mov
aad
leave
mov
lods
jnp
int3
fmuls
xchg
inc
inc
les
cmpsb
mull
outsb
sbb
fstl
jl
or
sarb
out
push
aad
inc
scas
ljmp
lret
xchg
mov
aad
das
and
and
dec
sbb
and
jb
jg
mov
out
jb
jge
jge
fisubrl
xchg
lods
mov
call
in
jmp
iret
xor
cmp
add
aam
cmp
xor
arpl
cmp
mov
mov
lock
or
out
test
dec
jp
mov
shrl
bound
sbb
mov
fucomi
jecxz
adc
sub
jnp
mov
pop
inc
popf
xchg
cmp
arpl
push
aad
icebp
or
xor
testb
fldenv
out
stos
pop
cmc
mov
or
insb
cmc
movsb
jl
push
pop
rcrb
xchg
or
ja
dec
fldl
inc
inc
ret
mov
das
negb
icebp
add
adc
mov
pop
dec
adc
rcrb
ret
sbb
pop
pop
stos
inc
sbb
xor
add
roll
cwtl
xor
ljmp
les
divb
cwtl
fcoml
sbb
jae
jmp
subb
cwtl
arpl
ja
sbb
mov
mov
das
stc
push
les
inc
enter
pop
push
lds
lods
jge
call
shl
inc
test
jle
push
fiaddl
dec
mov
imul
xor
loop
jne
push
imul
inc
imul
add
les
xchg
mov
sbb
xlat
scas
jnp
mov
mov
mov
out
jbe
dec
push
imul
fdivs
cmp
lea
bound
mov
lret
pushf
test
mov
cli
adc
cwtl
mov
adc
pop
aad
bound
icebp
loop
leave
in
cmc
ljmp
rcr
lret
fldl
insl
lret
push
data16
div
and
sti
in
mov
jno
mov
clc
rcrb
testl
sahf
dec
scas
nop
jle
and
lret
dec
mov
out
pop
test
or
int3
jg
push
pop
shlb
sub
out
aas
adc
test
xchg
insl
call
lcall
lahf
cltd
dec
movsl
insb
test
mov
dec
fcomp
into
pop
stc
inc
xchg
cmp
xor
add
mov
xor
mov
addr16
aad
jno
jle
pusha
into
pminsw
sbb
insb
das
push
repz
mov
xor
jle
dec
push
out
mov
or
enter
adc
adc
sub
aam
dec
jg
les
xchg
and
mov
insl
xchg
lret
dec
jge
insb
fwait
xchg
test
fidivrs
test
in
rolb
dec
in
jne
xor
pop
rolb
push
jbe
cmpsl
int3
not
dec
pop
jmp
stc
pushf
int3
dec
sub
or
lcall
adc
inc
enter
inc
mov
add
xor
inc
cltd
adc
mov
clc
push
outsb
pop
jne
sarl
gs
inc
xchg
fadd
fcmovbe
shll
sub
sbb
out
jp
jo
fsubl
xor
inc
les
dec
add
aas
pop
bound
std
pop
jo
insl
cmp
pushw
sbb
divl
jl
xchg
add
push
jle,pt
jae
sbb
pop
ss
dec
popf
mov
mov
mov
and
pop
mov
insb
les
loope
faddl
repz
fs
jge
dec
mov
pop
push
stos
int3
push
cmpl
mov
addl
out
test
push
xor
push
les
in
cmp
push
leave
push
mov
cs
int
jnp
xor
ret
and
fistl
lea
pop
ds
pop
adc
mov
pop
or
cmp
mov
mov
xchg
pop
pop
test
and
cltd
rcrl
outsb
jmp
sub
mov
sub
in
fstps
pop
or
pop
mov
sbb
dec
xor
iret
cmp
cmc
fldcw
xchg
push
lds
jge
mov
loop
mov
push
into
test
cmp
mov
fbld
fisttpl
in
mov
push
jecxz
add
dec
add
adc
movsb
add
xchg
aaa
sub
sti
clc
lods
push
jle
outsb
pop
incb
fstl
mov
les
push
jb
sbb
mov
fisubs
sub
inc
mov
mov
cmpsl
jb
and
xchg
lock
nop
mov
mov
or
mov
add
scas
pop
jmp
jbe
out
inc
xchg
loopne
leave
jecxz
mov
inc
cmp
mov
test
imul
fcmovne
xchg
outsb
test
push
xor
mov
mov
icebp
jl
pop
push
mov
lahf
jp,pt
addr16
aam
push
mov
test
mov
lock
sbb
outsb
mov
xchg
adc
mov
jg
sbb
adc
and
jo
jo
xchg
clc
cmpsb
sub
lahf
cmp
movsb
jge
dec
inc
aaa
xchg
pop
sbb
incb
cwtl
inc
aam
mov
push
movsl
xchg
ror
jbe
mov
and
add
js
cmp
xchg
outsb
call
xchg
outsl
ljmp
aaa
test
mov
js
stos
pop
leave
icebp
addr16
jo
sbb
mov
inc
in
jae
sbb
mov
inc
and
pop
std
into
cmp
pushl
stc
add
fsub
data16
xor
stos
ljmp
fldenv
dec
add
pop
push
rclb
dec
clc
dec
and
lcall
push
jbe
jle
jmp
repz
les
scas
hlt
xchg
sbb
xchg
repz
nop
mov
pop
jl
orl
into
imul
add
xchg
iret
xor
pop
add
shll
jo
rcrl
add
ret
outsb
mov
pushf
inc
or
icebp
popf
mov
insb
dec
sub
hlt
dec
enter
cmp
add
fcoms
ljmp
mov
add
je
push
inc
cmc
sbb
ficompl
pop
pop
addr16
fdivl
ffreep
popf
scas
gs
out
sbb
xchg
insb
adc
incl
add
mov
xor
movsl
sbb
jle
lahf
out
sub
jp
testb
into
iret
movsb
repnz
rcrb
insb
in
sbb
stc
jl
outsb
cwtl
jmp
and
add
shl
andb
es
aas
xor
movsl
mov
cmp
xchg
in
sbb
dec
cli
jns
xor
clc
pop
rol
fnsave
daa
jae
sub
aas
or
cmpb
test
jp
dec
sbb
inc
outsl
pusha
xchg
and
fstpl
mov
mov
bound
jnp
mov
pop
lret
xchg
subl
and
sub
xchg
lock
std
cmp
out
mov
mov
ret
lods
xor
pop
movsl
jp
jmp
fstpl
xor
pushf
fs
push
push
xor
add
add
lea
or
adc
mov
jle
jb
pop
cmc
les
clc
in
fidivrl
shll
or
test
test
sub
lcall
mov
out
inc
cmp
repnz
sar
icebp
js
mov
sbb
out
push
lret
in
sub
fidivrl
in
fnstsw
push
xchg
pop
ret
add
mov
push
imul
sub
mov
mov
sub
and
enter
inc
lahf
xor
aaa
fbstp
scas
sub
std
inc
inc
inc
pushf
jno
call
dec
lret
adc
xlat
sbb
js
adc
mov
jnp
xchg
lret
inc
or
or
out
jmp
hlt
hlt
frstor
fs
push
std
mov
fwait
jnp
cmc
fcoml
sbb
leave
ja
movsb
mov
data16
or
xor
xlat
lcall
mov
xchg
fimull
scas
pop
xlat
sbb
aaa
mov
push
movb
cmc
jp
inc
sbb
into
rcl
mov
mov
inc
enter
sbb
stos
shl
sbb
jne
xor
xchg
popf
loopne
in
ficoml
inc
ljmp
cld
test
jb
sbb
xor
fwait
adc
aaa
jo
ror
movsb
jp
pop
out
lods
mov
mov
xchg
scas
mov
sahf
pop
sar
fwait
adc
cltd
and
xchg
int3
xchg
int
pusha
mov
adc
xlat
sub
jp
fmul
aaa
push
scas
mov
push
out
in
daa
lock
adc
subb
pop
cmpsb
fnstcw
xor
lods
inc
rorb
cmp
pop
loop
pop
jecxz
call
pop
insb
jge
push
data16
or
daa
mov
loop
out
ljmp
fmulp
insl
in
mov
dec
loop
mov
ja
stos
inc
insl
in
js
mov
mov
add
sub
xchg
bnd
push
and
out
test
push
jecxz
jne
adc
and
es
xchg
add
pop
push
fnsave
pop
imul
pop
shll
insb
bound
inc
jg
pop
ret
push
adc
and
cmp
pop
xor
jnp
insl
lds
xchg
mov
cmc
and
sbb
aam
je
and
ret
test
imul
pop
jns
sub
cmc
repnz
mov
pop
or
addr16
mov
ss
out
jecxz
es
mov
std
dec
divb
push
ss
cmpsl
popf
in
adc
mov
ror
repz
sub
test
lea
adc
divl
push
xor
hlt
rorb
adc
push
sub
push
or
roll
loopne
xchg
xchg
sub
adc
ja
ljmp
xchg
popf
insb
dec
and
and
rcll
gs
fcomps
lods
or
pslld
fimuls
in
sarl
stos
jmp
jp
push
mov
push
movsl
cltd
xor
push
adc
adc
or
xchg
adc
adc
stos
and
lods
iret
imul
fldt
pop
cltd
dec
popa
and
call
out
sub
cmp
pop
mov
into
jne
cwtl
dec
test
ss
inc
pop
pop
cli
xor
sarl
lcall
in
adc
je
jp
lret
cmp
or
mov
and
mov
pop
push
or
sub
lcall
loopne
repnz
sub
jge
shll
xchg
shlb
jl
ljmp
sub
add
ret
push
repnz
add
pop
in
xchg
loopne
call
imul
push
jmp
jecxz
jo
mov
shrl
mov
pop
in
popa
cmp
pop
adc
cltd
es
xchg
add
cmpsl
test
out
adc
mov
xor
sub
bound
cmp
push
xor
pop
cmpsb
jnp
push
mov
stos
ds
insb
mov
fidivrs
into
test
hlt
mov
pop
es
das
jmp
arpl
cmp
pop
or
ja
and
inc
dec
js
cmc
xor
jle
lea
movsb
dec
dec
in
lods
fdivr
mov
je
ljmp
xor
push
sbb
cmp
test
push
adc
and
push
repnz
cmpsl
clc
xchg
loopne
push
cmpsb
in
push
cmpsl
jl
insl
std
mov
push
cs
pop
js
jae
add
cli
xor
xchg
les
xor
push
xchg
lock
ficoms
mov
cmc
cmp
inc
pop
adc
add
insl
and
jp
cltd
cmpsb
out
xchg
jne
xchg
shl
imul
adc
cli
inc
pop
cmp
push
movsl
xchg
mov
imul
xchg
xchg
lods
ja
jg
fcompl
test
fs
dec
sbb
hlt
jge
adc
fwait
dec
adc
leave
loope
in
fnsave
jp
xchg
sub
cli
push
push
or
sbb
in
sub
xor
enter
repnz
aaa
sbb
repnz
fidivs
cmpsl
scas
cmpsl
inc
lods
lods
xchg
sub
hlt
push
out
lahf
in
aas
scas
fstl
inc
pop
mov
or
xor
push
jo
movsb
ret
mov
cmp
rorb
or
and
mull
outsb
notb
ja
and
adc
dec
xchg
pop
pop
sub
ud0
push
out
lods
insl
mov
popa
hlt
push
fstl
lcall
sub
or
inc
mov
popa
cmp
and
mov
xor
sbb
push
icebp
shll
ja
shrl
mov
insl
cwtl
push
and
pusha
adc
ja
dec
xor
out
xchg
arpl
movsl
inc
in
gs
add
mov
mov
movq
pushf
mov
subb
sub
addr16
mov
je
and
mov
add
adc
fimull
xlat
sahf
mov
inc
or
cmpsb
int3
pop
cmc
pop
mov
cli
testl
or
sbb
stos
test
fdivrs
cwtl
popf
xchg
jb
imul
cmpsb
ja
xchg
dec
pusha
repnz
cwtl
push
mov
xchg
mov
sbb
sti
idivb
add
jmp
lea
cwtl
jnp
pop
push
push
xlat
cs
pop
jb
imul
jle
scas
out
fiadds
jbe
and
sub
cltd
dec
data16
add
jne
aam
mov
fimull
pop
lea
cmc
pop
mov
xchg
push
cwtl
xchg
imul
add
pushf
mov
movsb
cmpsl
bnd
xchg
adc
jg
mov
jbe
rcrl
add
sbb
std
loop
mov
mov
dec
xchg
xchg
inc
fdivrs
add
add
mov
jnp
mov
clc
scas
shrl
into
jno
xor
mov
ja
mov
iret
push
xchg
adc
imul
xchg
pop
out
or
xchg
out
cltd
das
or
ljmp
js
adc
adc
mov
stos
iret
test
fcmovnbe
mov
jno
pop
test
sbb
lret
and
jle
cmc
push
jmp
aaa
mov
mov
ja
jne
shll
pusha
test
or
push
push
xchg
es
cmpb
xchg
xchg
jl
rorl
loop
push
popf
das
in
int3
dec
xchg
iret
popf
jg
rorl
mov
fcoml
lea
or
push
scas
aas
dec
sbb
adc
dec
jno
bnd
xchg
or
enter
sbb
dec
add
loop
mov
and
lret
sub
stc
push
jge
movsb
add
sub
leave
mov
cltd
lahf
cmc
sub
inc
lret
mov
das
mov
mov
mov
ror
inc
test
outsl
in
popa
mov
fsts
flds
scas
cltd
cmp
cmp
iret
xor
push
jo
xor
push
cmp
ds
push
into
jg
jmp
mov
add
or
decb
pop
and
cmp
mov
jp
int
scas
cmp
pop
mov
inc
inc
gs
xlat
into
cmp
pop
adc
test
dec
test
cmp
lea
mov
lahf
jmp
xchg
cmp
popa
jbe
cmp
sbb
popf
jp
jno
sbb
shll
mov
cmc
xchg
xchg
dec
xchg
inc
mov
push
test
jo
cmpsb
or
scas
cmp
loope
xor
shl
sarl
mov
js
inc
in
push
adc
clc
fisubl
fdivrs
sti
lcall
fwait
out
inc
mov
sub
add
frstor
xorl
fs
adc
outsl
push
jecxz
es
dec
mov
mov
xorl
xor
pop
jae
call
mov
fs
mov
scas
and
add
repnz
push
push
sbb
inc
sbb
adc
gs
jb
mov
andl
sbb
sbbl
inc
lret
lret
and
xchg
clc
ja
dec
xor
cli
cli
xchg
or
dec
mov
mov
fistl
xchg
dec
sbb
cmp
loope
mov
and
cmp
and
adc
gs
gs
xchg
inc
push
add
andb
in
mull
insb
out
sbb
jl
stos
inc
rcrb
sbb
sub
scas
dec
out
cs
lea
insl
imul
ss
out
xor
jae
xchg
push
inc
cmc
pop
xchg
push
int3
mov
inc
repz
jnp
rclb
test
xchg
shrl
es
sbb
or
in
jl
aam
or
jo
das
and
jmp
lahf
les
cld
jg
pop
sar
mov
int
cmp
mov
add
outsb
dec
push
push
ja
xor
sbb
push
push
fistl
and
call
xchg
xchg
pushf
fisttps
push
sub
pop
mov
dec
push
sub
in
push
loopne
enter
cmp
pop
dec
lret
pusha
pop
jp
mov
or
repnz
aad
out
add
mov
jb
mov
pop
std
dec
lahf
mov
mov
ljmp
xchg
push
jbe
into
jmp
dec
imul
mov
mov
pop
jl
notl
jne
jnp
pop
jl
add
push
or
add
xlat
push
mov
push
mov
hlt
fs
in
mov
jg
and
inc
or
cli
inc
inc
fdivrl
jb
pop
sbb
movsb
sub
cmc
cld
or
insl
jmp
insb
iret
mov
dec
xor
xor
mov
sub
dec
in
push
pop
jo
push
pop
in
inc
gs
mov
jno
rolb
sbb
adc
lods
inc
popf
loop
cli
jns
cmp
jnp
cltd
out
pop
gs
dec
add
notb
jnp
xchg
xchg
nop
add
out
push
sbb
imul
movsb
mov
call
aam
cmp
loop
jp
sahf
xchg
push
nop
insb
xchg
inc
inc
mov
out
or
in
cmpsb
lods
rorb
cmp
xor
xlat
lret
nop
cmp
stos
cmpsl
push
mov
or
dec
or
popf
stc
test
aas
add
cmp
mov
mov
pop
loope
fadd
cmc
sub
xchg
imul
or
aad
pushf
mov
or
mov
cmpsb
xor
mov
dec
or
cs
inc
aas
ljmp
fdivrs
mov
push
clc
and
mov
rorl
sub
shll
mov
arpl
mov
in
jne
scas
ja
xor
xchg
jo
mov
call
pop
xchg
mov
rclb
cmp
jbe
cwtl
cltd
out
cmp
pop
xchg
pusha
adc
mov
repnz
dec
mov
sbb
out
gs
pop
and
push
es
mov
call
loopne
mov
push
std
movsl
adc
add
shlb
sub
fstpl
inc
shrb
adc
push
lock
scas
sub
jb
in
mov
ljmp
loope
add
or
mov
dec
testl
imull
mov
mov
leave
jno
cltd
popaw
blcmsk
sbb
pop
shrl
daa
mov
ret
xchg
jne
xchg
adc
jbe
add
dec
and
jg
sub
outsl
popl
cmp
push
int
adc
mov
jg
push
or
cmp
add
or
imull
cmpsl
add
test
push
cli
xchg
and
int
loopne
or
in
adc
push
movsl
add
xor
int
mov
mov
mov
xchg
cmp
mov
dec
pop
jle
enter
iret
push
fs
pop
lret
cmpsl
hlt
lds
dec
mov
dec
push
lock
jns
mov
ljmp
adc
pop
xor
movsb
addr16
rcrb
cs
push
in
in
pop
inc
add
mov
adc
mov
jecxz
jg
dec
sbb
xor
sub
stos
insl
or
cltd
pop
xlat
inc
jnp
pop
ss
jb
in
movsl
stos
sti
rcrb
inc
xor
jl
mov
popa
lret
mov
insl
ds
mov
mov
adc
push
cmp
ja
dec
fs
inc
imul
add
or
sbb
imul
test
test
xchg
lea
mov
add
test
scas
test
stos
scas
lods
and
insl
and
insl
mov
je
mov
and
aam
test
les
dec
xor
pop
fnstsw
mov
inc
pop
movsb
mov
xchg
cmc
dec
pop
push
in
pop
jne
or
insl
cld
ror
dec
cmpsl
or
popa
sub
outsb
push
dec
movsb
cwtl
stos
dec
push
sarb
xor
loope
adc
lock
dec
icebp
or
inc
sbb
adc
lods
adc
mov
mov
repnz
popa
jle
mov
stos
movsl
sti
push
int
adc
xchg
jne
test
mov
xor
insb
ljmp
adc
shll
ficoms
outsb
xlat
mov
mov
mov
pop
cmpsl
bound
int3
push
std
dec
jns
xchg
pop
xchg
mov
xchg
js
pop
out
or
jg
xchg
ljmp
cmp
and
and
ja
or
stc
lods
shrl
push
movsb
push
insb
andb
xlat
and
repnz
xchg
adc
inc
inc
jbe
inc
mov
push
dec
or
and
cmp
mov
mov
push
ret
jno
out
test
out
jae
int
mov
fwait
data16
xorl
in
pop
fsubrl
inc
sbb
jl
movsl
xor
cmpsl
frstor
lret
and
mov
push
test
adc
sbbb
push
mov
lcall
xchg
mov
pusha
xchg
cmc
dec
loop
mov
frstor
dec
iret
subb
push
test
dec
mov
cmp
push
inc
pop
mov
inc
shlb
insl
dec
inc
dec
aaa
test
sub
mov
repnz
imul
cld
cmp
mov
jecxz
pop
push
push
nop
iret
test
cmp
nop
outsl
mov
in
mov
mov
fs
sub
sub
lds
ljmp
stos
sbb
mov
xchg
fsubl
jmp
adc
scas
sbb
mov
sbb
adc
rcll
push
loope
push
aam
sub
fists
add
aam
ret
add
ret
push
shlb
adc
pop
adc
xchg
test
sahf
mov
inc
add
add
sbb
movsb
mov
mov
pop
incb
xor
in
lret
mov
adc
xchg
push
test
nop
cld
je
lret
andl
out
xlat
inc
inc
outsl
ss
jg
sbb
in
movsb
mov
and
xchg
fcoml
or
dec
xchg
aam
ret
xor
sahf
ds
call
dec
lret
sti
xor
mov
fisttpl
add
mov
adc
push
mov
in
jbe
push
cmpl
lahf
adc
inc
cs
enter
inc
push
mov
and
fcom
stc
jae
mov
aam
and
push
dec
sbb
les
add
sbb
or
xor
dec
out
dec
mov
mov
mov
es
shr
lods
ds
lret
aas
jecxz
cmpsb
fisttpll
xchg
push
sahf
push
add
cmpl
or
jo
xor
nop
inc
lret
lea
jecxz
jle
push
jne
mov
lret
add
es
fcompl
mov
movsl
repz
sub
jne
lock
add
lahf
negb
xor
or
jns
stos
bound
ret
paddw
dec
or
loop,pt
das
in
cmp
mov
mov
xlat
daa
add
test
or
mov
sub
in
fcoms
xchg
aas
mov
pop
pop
stos
cmc
pop
mov
push
inc
add
mov
lods
mov
xchg
jmp
push
xchg
leave
adc
scas
aam
and
orl
xchg
pop
pop
add
into
loop
sbb
repnz
scas
add
mov
insl
sub
and
mov
or
addr16
or
fwait
clc
xchg
notl
pop
xchg
inc
and
or
push
repnz
inc
xor
pushf
loope
inc
mov
dec
in
xlat
xor
and
pop
leave
inc
out
repnz
jecxz
and
mov
fstl
out
jno
fucomp
loope
pop
pop
scas
fwait
push
adc
cmp
dec
mov
mov
pop
pop
je
lcall
out
jle
push
adc
test
scas
cld
in
pop
cltd
orb
adc
lea
test
pushf
pop
jecxz
sahf
call
cwtl
pop
out
outsl
aas
mov
clc
fisttpll
cmp
push
imul
bswap
out
xor
mov
xchg
push
adc
adcb
adc
push
ja
data16
arpl
cld
push
mov
ds
pop
pop
mov
push
lret
je
lock
loopne
mov
cmc
xchg
push
les
scas
cwtl
xor
xor
les
inc
out
data16
dec
fbstp
scas
mov
out
sbb
inc
scas
out
mov
loope
fisubrs
pop
enter
mov
sbb
or
push
call
cwtl
sub
filds
mov
data16
leave
out
and
rolb
adc
push
and
repnz
ds
and
push
int3
ss
jg
xchg
cli
cmpsl
out
stc
mov
dec
push
pminub
push
popf
xor
push
roll
cs
inc
pop
inc
mov
popa
xlat
cmpsb
gs
cmp
cld
jo
sahf
or
je
ss
ss
xchg
and
xor
ja
adc
movsl
ss
ret
add
dec
outsb
int3
ja
daa
push
push
add
cmpsl
push
ret
data16
lods
xchg
lret
jg
into
std
jle
add
cmp
mov
cmpsb
jge
cmp
in
in
cmpsl
xchg
loope
hlt
pop
cwtl
inc
push
cs
and
xacquire
mov
mov
lcall
sbb
adc
cmp
int
push
js
and
and
enter
xor
xor
movsb
ret
ret
pop
sbb
and
sbb
pushf
sbb
push
and
insb
nop
cmp
mov
push
leave
jae
xor
nop
xor
and
shr
popa
mov
aaa
bnd
mov
xchg
or
xor
imul
ljmp
jle
pop
jecxz
mov
orb
or
addr16
in
push
inc
leave
inc
loope
pop
shlb
in
outsl
xchg
or
and
mov
sub
lods
and
cmp
or
jb
add
mov
inc
jp
js
fsts
mov
gs
xor
test
sub
mov
pop
cs
mov
movsb
lret
fwait
mov
dec
mov
push
dec
mov
xor
sahf
push
rorb
lods
ret
lret
inc
jne
sub
shll
push
mov
les
icebp
xor
push
iret
inc
clc
sub
xor
push
mov
lcall
mov
fnsave
adc
lock
fbstp
lock
ja
xchg
adc
out
sbb
and
push
pop
xchg
mov
pop
sub
xchg
push
mov
inc
push
jecxz
inc
xor
push
mov
test
dec
or
adc
pop
jmp
mov
dec
pop
or
xor
lcall
mov
cmp
push
lret
mov
push
stmxcsr
pop
inc
test
test
sbb
inc
inc
imul
movsl
mov
mov
jecxz
aad
arpl
mov
ret
dec
popw
insb
push
pushf
out
cli
jo
scas
xchg
sub
push
jmp
bound
enter
sub
cli
pushl
mov
aam
insb
cmp
clc
je
bound
out
out
mov
int
iret
push
xor
inc
pop
mov
jg
add
f2xm1
clc
cmpsl
xor
pusha
jns
and
dec
adc
sub
andl
mov
jbe
sahf
in
pop
iret
mov
jae
mov
push
lods
xchg
push
and
sub
cwtl
xor
sbb
mov
test
cmp
pop
jle
cmp
pop
sbb
cmp
arpl
mov
cs
inc
pop
mov
sbb
xor
and
sbb
shlb
xor
inc
fstpl
and
pop
ljmp
hlt
push
xor
cmpsl
cmp
and
insl
mov
repnz
jmp
jl
orl
xor
jl
aam
je
push
insl
sahf
jns
or
adc
pop
push
loop
pushf
mov
and
loope
aaa
test
mov
into
cs
push
test
out
loope
xchg
js
sbb
inc
les
lcall
inc
xlat
inc
pop
jne
lds
movsl
xor
xchg
incl
shr
mov
mov
roll
pop
xchg
paddb
pop
iret
pop
imul
mov
mov
lahf
lods
xorl
xor
mov
std
cmp
jge
testl
or
push
lret
nop
sub
push
cmp
push
insb
jmp
call
cmc
es
jb
fmull
popf
int3
mov
loope
test
xchg
add
cmp
cwtl
inc
outsb
mov
and
stc
not
ret
inc
roll
cmc
jnp
repz
fstl
es
jl
adc
test
and
shlb
imul
into
mov
notb
push
iret
sbb
aaa
pop
out
xor
scas
hlt
std
in
mov
adc
and
jmp
pop
push
dec
fnstcw
and
push
mov
fsts
mov
jp
clc
pusha
jmp
divl
in
scas
cmp
mov
mov
jb
cltd
aaa
test
cmp
adc
push
les
pop
stos
push
loop
sbb
xor
stos
pushf
insb
scas
in
rcll
sbb
adc
es
int3
mov
ret
stos
sub
ret
sbb
xchg
lods
nop
ret
and
sbb
fsubrs
dec
push
xor
lods
pop
xchg
iret
xor
pop
mov
push
jl
stc
pop
or
mov
jp
sub
lret
movsb
mov
pop
push
and
pop
rcll
into
lret
arpl
fwait
mov
mov
pop
mov
xchg
sub
fwait
sub
scas
push
push
mov
pop
popa
clc
add
aas
sbb
repz
stc
jg
adc
popf
xor
mov
fdivs
jno
mov
jmp
jge
adc
loope
les
dec
jg
outsl
xor
mov
dec
push
mov
pop
dec
outsb
addl
bound
rcrb
test
adcl
gs
loopne
into
pushf
fdivr
cli
push
xchg
add
insb
gs
fldl
ljmp
insl
sub
inc
or
sbb
fildll
lock
and
adc
sbbb
aas
pop
insb
push
es
mov
inc
imul
cltd
test
push
hlt
add
call
sbb
sti
incb
test
sbb
ret
cltd
jae
loope
xor
push
daa
pop
cmp
data16
jnp
xchg
test
push
je
push
adc
mov
sahf
mov
ljmp
pop
fcomps
and
out
enter
mov
outsb
pop
pop
mov
test
sub
movsl
dec
std
push
dec
sub
imul
jns
adc
or
in
in
icebp
addr16
dec
or
testl
adc
sbb
fstps
add
push
enter
rol
push
push
mov
jo
dec
sub
out
call
rorl
movsl
repnz
jl
pop
mov
lret
jge
sub
push
mov
jb
dec
sti
push
push
loop
jb
js
scas
push
jl
sbb
and
fstl
insl
ljmp
push
jne
cmp
fists
out
cmpsl
add
lcall
ljmp
fsubrp
movsl
mov
int3
sti
xlat
ja
test
mov
pop
andl
cmp
xor
mov
std
jmp
mov
aas
mov
add
mov
mov
rclb
and
mov
jmp
sub
jecxz
cmp
ficompl
adc
xchg
lock
sbb
outsb
es
mov
cld
jb
movl
add
pusha
rolb
popf
jmp
enter
shrl
in
sub
cld
js
xor
sbb
mov
cmpsb
daa
inc
ficoml
xrelease
mov
mov
fimull
andl
push
cmp
jg
and
xchg
mov
in
rcrb
sbb
add
push
xor
inc
es
icebp
lods
sbb
filds
in
cld
or
arpl
shl
mov
dec
or
pop
xor
cmp
or
pop
std
mov
aas
mov
out
xor
jno
jmp
jnp,pn
dec
iret
sub
lcall
inc
cmp
pop
adc
mov
dec
sbb
out
rorb
idivb
fbstp
jmp
sahf
xor
jmp
test
addl
push
cmp
in
imul
add
addr16
pop
inc
loop
fwait
nop
or
out
or
fcompl
shll
mov
push
test
call
and
mov
mov
push
cli
loop
mov
cmp
lahf
es
sarl
lods
add
mov
cltd
push
pop
jne
ds
fnstcw
cmp
pop
sub
sbb
clc
fadds
insb
repnz
ud0
out
mov
rcrl
xchg
dec
jnp
add
pop
repnz
rorl
mov
mov
jp
fwait
adc
adc
mov
cwtl
jne
push
dec
std
arpl
stos
adc
fstl
sbb
lds
push
pop
xor
idiv
push
jmp
lods
bound
dec
push
aas
cmp
lock
mov
xor
sahf
mov
fsubs
sub
add
cli
lock
dec
adc
sub
xlat
or
mov
imul
jbe
lcall
fisubl
xor
inc
lret
lea
in
xor
inc
lods
in
jb
mov
ss
ret
mov
fimuls
divl
pop
orl
push
inc
insb
mov
push
jle
cmp
and
inc
aaa
dec
and
ja
aaa
loop
aas
inc
mov
push
xchg
dec
or
ss
clc
jo
sub
pop
dec
hlt
loope
jne
dec
pop
ret
xchg
jle
loopne
cld
lret
cmpsb
test
imul
sbb
dec
push
xchg
ret
int
dec
pop
pushf
out
xor
pop
lock
jns
clc
stc
test
cmpl
fistpl
mov
add
sbb
xchg
cltd
adcl
lret
bound
dec
stc
mov
xchg
and
pusha
mov
in
and
decl
push
stos
scas
and
cmp
xchg
xchg
cmp
adc
popa
xchg
xor
mov
dec
retw
mov
jae
xor
test
data16
dec
dec
push
lock
notb
insl
mov
cmp
mov
rorb
dec
add
xchg
inc
push
push
orl
mov
dec
or
mov
sbb
lods
fcoml
push
clc
xchg
popf
xor
mov
insl
imul
xchg
mov
mov
cmc
jge
imul
or
imul
insl
ja
push
mov
test
mov
pusha
mov
adc
mov
push
push
sbb
shr
mov
xchg
fstps
pop
adc
sbb
stos
test
lds
adcl
pop
ret
cltd
mov
jnp
test
add
aam
mov
imul
inc
pop
shll
stos
jg
cmp
sarb
inc
pop
cmp
add
adc
jne
das
test
out
stos
mov
fdivrs
adc
div
sub
jle
lods
xlat
mov
mov
ja
lods
les
jp
push
sbb
rcl
dec
clc
sub
pusha
adc
sbb
mov
aad
insl
jb
xchg
mov
mov
data16
xor
and
in
negl
add
in
add
sub
or
je
add
sti
mov
xchg
xorl
mov
stos
sbb
sbb
aas
es
jmp
out
adc
jmp
adc
gs
jecxz
aad
les
out
je
mov
xlat
hlt
mov
cmp
inc
add
adc
mov
fwait
cld
lea
leave
pop
push
adc
jbe
repnz
jmp
daa
dec
mov
iret
aam
and
pop
out
insl
cmp
dec
push
or
popl
aas
push
leave
pop
outsl
jns
cmp
mov
adc
dec
std
lods
es
and
mov
subl
cmp
dec
xorl
popf
fsts
adc
loop
xor
xor
jno
arpl
mov
mov
out
int
sti
xchg
and
shlb
push
push
fnsave
lock
cmp
mov
xor
rolb
bound
push
xchg
sub
addr16
lock
les
mov
sbb
and
mov
faddl
fcoms
fwait
rcll
frndint
stc
jg
in
push
lret
inc
testl
pushf
div
or
shll
dec
xchg
in
fucomip
dec
push
orb
pusha
sarl
sbb
xor
shlb
rorl
shll
push
lock
push
gs
les
inc
mov
aad
push
mov
inc
add
pusha
sbb
pusha
das
std
or
movsb
cld
test
pop
xchg
lahf
mov
dec
adc
xor
icebp
jle
mov
rolb
mov
lret
sub
clc
cmc
xor
and
lret
fdivrp
scas
pop
aas
and
xor
cs
fldt
aad
sub
rol
mov
scas
lods
pop
pusha
mov
mov
push
fcmovb
lods
push
mov
loopne
movl
inc
adc
ret
push
mov
shrl
inc
pop
in
xchg
push
clc
in
scas
push
fdivr
xor
mov
call
xor
ss
icebp
das
push
imul
in
push
insb
int3
subb
dec
jecxz
pop
jg
test
jb
std
mov
fwait
fmuls
adc
lds
mull
mov
mov
imul
cmp
mov
aam
push
dec
mov
in
jmp
mov
fdivl
enter
lea
test
fsubrs
mov
xchg
xorl
sti
test
test
and
lcall
nop
shlb
or
pusha
or
mov
js
pop
add
or
imul
out
mov
mov
ret
jecxz
fs
fisubs
adc
add
pop
lcall
cwtl
jbe
mov
jl
fsubrp
rol
xchg
adc
add
jbe
xor
ret
cmp
lret
roll
into
xchg
stc
fisubs
outsb
mov
outsb
pop
loop
add
lods
or
add
test
adc
inc
fcoms
push
sarb
js
mov
lds
push
xchg
addr16
insb
pop
iret
outsl
dec
int3
lret
xlat
es
or
sbb
sbb
loope
mov
aad
sub
cmp
mov
mov
pop
rcr
jne
scas
repz
xchg
pop
pop
mov
orl
sub
js
sbb
sub
enter
add
pop
dec
jge
mov
loopne
in
cmp
or
mov
pop
sbb
loop
sbb
stc
lods
xchg
inc
or
adc
jbe
sub
mov
xor
cmp
adc
jae
mov
cs
push
daa
xchg
and
loop
mov
test
lea
sub
mov
pop
jl
in
xchg
mov
gs
lcall
push
sbbl
movsb
ljmp
mov
xor
lret
scas
sub
mov
mov
nop
pop
adc
mov
or
mov
mov
push
mov
pop
call
js
mov
sbb
xor
or
jo
cmp
pop
arpl
insl
test
fsubrs
cmp
outsb
jl
aas
loop
lea
arpl
mov
ffreep
push
aas
fdivl
pusha
adc
cmp
xor
mov
or
pop
mov
pop
sub
out
lahf
add
xchg
fsubs
daa
cld
sbb
cli
push
mov
fcompl
dec
dec
stos
cmpsb
push
into
xchg
sbb
out
jae
test
sbb
xchg
xchg
icebp
iret
ss
xor
or
sbb
xlat
inc
sbb
rorl
sub
sbb
jl
xchg
xor
fmull
das
cmp
dec
enter
pop
push
ljmp
cmp
test
ret
das
cmp
dec
out
outsl
outsb
repnz
and
inc
mov
out
negb
js
bnd
and
call
data16
push
xchg
int
mov
lret
pop
and
jg
popf
adc
das
rcll
roll
inc
js
popa
jne
dec
scas
rep
xchg
mov
xor
jl
pop
mov
or
test
pushf
push
dec
adc
outsl
and
jbe
jo
enter
inc
push
mov
andb
mov
rcrb
pushf
jmp
pop
cmpsb
fdivrs
test
test
repz
jle
dec
movsb
gs
sahf
xchg
je
inc
inc
out
sar
mov
jmp
push
lret
es
mov
inc
testb
movsb
mov
push
popa
lods
scas
shlb
cmc
andb
aaa
cmpsl
xchg
cmpsb
cmp
fnstenv
popa
loope
push
aad
lods
fnsave
cmpsl
ljmp
lock
pop
es
mov
cwtl
rcrl
sahf
adc
mov
adc
imul
or
add
mov
xchg
in
adc
pop
xor
test
lock
xchg
add
pop
orb
pop
xchg
pop
sbb
subl
xor
and
or
cmc
sbb
mov
lret
push
mov
cmpsb
aaa
popf
imul
insb
cwtl
xchg
test
sbb
iret
or
xchg
lret
test
popa
mov
mov
adc
sbb
push
movsb
mov
fistpl
xor
xchg
jo
push
cs
cmp
ret
add
jmp
stc
jge
inc
gs
insl
leave
sub
add
icebp
adc
int3
xchg
pop
cmp
popf
data16
push
scas
push
mov
sbb
sbbb
push
fs
int
sub
xchg
mov
ficoml
das
sub
es
jne
sub
scas
mov
mov
lock
sti
jae
xchg
aas
cld
gs
xor
movsl
xchg
pop
lret
aas
jnp
xchg
ret
icebp
mov
ja
lds
xchg
jae
jae
and
push
scas
lea
fsub
xor
dec
and
mov
mov
adc
cli
test
out
dec
and
or
jp
xor
push
dec
mov
push
dec
xchg
fnstenv
aad
fistl
push
pushf
adc
xchg
test
add
mov
inc
sub
pop
xor
gs
mov
rep
mov
jmp
adc
push
hlt
pop
mov
inc
aam
mov
inc
push
pop
insl
jp
nop
outsl
sub
xor
mov
jp
add
mov
shlb
xor
sti
sub
jbe
sbb
test
adc
ficompl
cmp
out
sbb
imul
insl
mov
aam
and
sbb
adc
ret
cs
nop
lock
dec
xchg
jo
outsl
dec
sub
mov
mov
cwtl
inc
insb
in
sub
js
lock
mov
xor
or
pop
dec
jae
or
add
sub
cmp
ss
xlat
push
inc
movsb
sub
shrl
adc
out
cmp
add
or
insl
adc
ss
scas
push
mov
fnstsw
xchg
cmpsl
insl
call
pushf
push
das
out
movsb
cmp
xchg
out
subl
pop
mov
fsubl
repz
mov
xchg
shlb
add
insb
dec
jg
jnp
sub
jp
lcall
mov
lds
pop
push
outsb
push
xchg
pop
pop
pop
ds
fcomps
xchg
mov
mov
js
jecxz
outsl
pop
std
dec
push
xchg
outsb
stos
arpl
mov
xor
mov
xchg
daa
mov
andl
add
sub
fs
or
inc
mov
jg
xor
adc
and
cltd
xor
xor
clc
loop
xchg
mov
fwait
pop
dec
xlat
shrl
xor
pop
ret
and
lds
xor
and
pushf
popa
adc
cmpsb
cmp
xor
out
mov
out
dec
cmpsl
int
dec
inc
xlat
mov
outsl
and
stos
mov
jmp
mov
add
addl
inc
ret
adc
inc
stos
push
int3
pop
push
push
jo
int
push
xchg
sbb
je
shl
imul
popf
cmpsl
xchg
sarl
mov
sbb
inc
mov
pop
loope
cmp
jp
sahf
adc
in
das
mov
xchg
pushf
into
scas
xor
add
jp
push
out
int
push
cmp
repnz
shl
xlat
iret
push
jnp
push
fcoms
mov
lock
adc
pop
ljmp
cmp
ja
cld
inc
pusha
icebp
js
repnz
add
ds
lods
aaa
iret
loopne
jp
out
xor
fwait
cld
shr
sahf
adc
and
jecxz
mov
fsincos
pop
mov
pop
jbe
ret
jo
inc
ljmp
jl
testl
cs
inc
mov
rorl
outsb
mov
push
aad
dec
mov
xchg
loopne
mov
xor
sahf
rolb
cld
pop
ljmp
test
push
outsl
arpl
pop
scas
xor
jns
xor
xor
jae
and
add
push
int3
scas
pop
in
xchg
adc
xchg
cmc
mov
sbb
xchg
sbb
pop
clc
and
icebp
jg
test
clc
pop
pop
adc
loope
mov
mov
cmp
ja
popa
stos
push
sub
idivb
pop
stc
lea
nop
lods
or
into
inc
cwtl
scas
cwtl
gs
pop
sub
aam
dec
fwait
dec
ret
cmp
mov
fsts
or
lea
aas
popf
pop
cmp
dec
scas
add
xor
adcb
adc
inc
arpl
loope
jbe
jmp
xchg
sti
loop
stos
jnp
push
ss
repnz
mov
inc
scas
and
xchg
mov
out
jp
shll
xor
add
fists
xchg
clc
aaa
insl
lahf
push
inc
mov
cmp
xchg
xchg
es
hlt
lds
adc
cmc
cmc
xor
mov
jmp
adc
mov
pushf
add
sub
rcr
push
sbb
cmp
push
jge
repz
fnsave
push
repz
test
mov
pop
lcall
inc
sub
xor
scas
js
xchg
ds
push
stos
mov
jp
xchg
and
arpl
aam
push
mov
shrl
push
jle
jo
andb
xor
inc
and
mov
sub
in
cmc
inc
mov
aas
popl
xchg
outsb
loop
mov
imul
xor
je
cmp
outsl
pop
mov
adc
andb
pop
icebp
std
call
loope
out
addl
mov
mov
or
lret
or
imul
mov
insb
sbb
mov
mov
jmp
das
xor
out
insl
int3
cli
popf
out
leave
movsb
adc
loop
or
out
jecxz
xor
jge
jo
imulb
or
pop
call
das
pop
and
andb
rclb
dec
and
aas
mov
stos
outsl
lcall
mov
xchg
or
stos
mov
push
jge
push
bound
lock
repnz
mov
or
insb
dec
jle
pop
dec
push
shll
xorb
pusha
and
dec
xor
adc
sub
mov
lods
jmp
icebp
mov
ret
jl
jb
rcll
cmp
xchg
sbb
cmp
push
jo
int3
cli
mov
mov
push
ret
mov
push
push
lret
cli
sahf
jnp
daa
lock
loop
push
les
inc
shl
cmp
pop
xor
add
or
cmpsb
test
aam
xor
adc
lahf
subb
std
and
cmp
stos
shrl
mov
out
jae
push
sub
mov
inc
mov
jge
jae
imul
or
cltd
pop
ljmp
xor
dec
je
inc
lods
fsubs
pop
dec
xchg
lea
dec
jle
cmp
pop
das
sub
and
sahf
xchg
mov
xchg
rcr
cmp
push
test
sahf
mov
outsl
aam
and
mov
pop
xor
dec
ljmp
lods
pop
adc
adc
ds
pushl
xchg
push
lret
jns
and
pop
sbb
js
pop
ss
push
jae
shll
inc
pop
jge
cmc
out
sub
mov
enter
ret
mov
xor
xor
aad
scas
imull
leave
cmp
fiaddl
push
push
jle
adc
xchg
inc
sahf
lods
bnd
sub
ret
mov
outsl
push
jp
push
mov
xor
or
adc
sti
or
movsl
dec
lcall
push
pop
sub
ss
cmp
fisubrl
push
jnp
push
mov
sbb
dec
in
xchg
add
aaa
mov
call
add
lods
add
push
adc
mov
insb
les
inc
pop
aad
mov
negl
les
pop
mov
inc
jnp
movsb
mov
js
mov
inc
lcall
leave
fists
push
inc
outsl
sbbl
ss
fists
leave
sbb
mov
cmp
add
push
jl
std
xchg
sahf
or
movsb
dec
mov
xchg
dec
and
mov
sub
xchg
cmp
int
add
stos
lret
add
inc
xchg
sub
es
sbb
je
add
sub
stos
mov
cmp
cmp
sub
push
jle
ss
xor
icebp
fimull
out
testb
aaa
je
inc
dec
fnstenv
cmp
pop
ret
add
addb
shlb
je
mov
shl
xor
stos
adc
mov
rolb
cltd
push
or
sbbb
xchg
ds
nop
shll
shr
push
push
cmp
mov
sti
pop
adc
xchg
pop
mov
sbb
push
outsl
cs
jecxz
cmp
ljmp
gs
filds
fs
data16
and
push
pop
xchg
fsubr
cmp
xor
je
inc
dec
sbb
jnp
adc
mov
mov
or
dec
adc
add
sub
jl
cmp
scas
aad
in
sbb
ret
mov
fidivl
clc
sbb
mov
sahf
repz
and
out
or
ds
xor
pop
sbb
mov
adc
or
fisubs
push
jecxz
pop
sub
xchg
add
adc
fwait
leave
jbe
jg
add
push
or
xchg
xchg
jae
add
icebp
testb
dec
test
jo
popa
sbb
sub
bound
add
subb
push
cli
xor
and
bound
in
adc
addr16
in
push
xchg
push
jl
xor
adc
and
cmp
xchg
mov
jbe
xor
mov
mov
pop
or
sarl
arpl
insb
mov
loopne
stos
mov
and
out
aad
in
cmc
mov
inc
scas
lds
inc
push
xchg
jle
inc
or
adc
nop
imull
addr16
mov
in
lock
pushf
andb
sub
out
int3
hlt
jmp
pop
adc
jo
or
add
mov
xchg
in
push
push
jp
and
jle
hlt
movb
jae
fsubs
out
mov
jge
push
sbbb
adc
insl
adc
mov
pop
dec
pop
es
push
lret
cmp
test
outsb
cmp
or
pop
dec
movsl
rcrb
jmp
push
sarl
lods
aas
jl
popa
xor
negb
sbb
sub
loopne
nop
mov
iret
mov
outsb
ljmp
pop
sarb
adc
shlb
add
addb
nop
divl
push
fmull
faddp
int3
leave
xchg
dec
lds
daa
lods
jge
cltd
iret
rorl
xchg
hlt
je
shll
lods
lea
dec
fcmove
mov
xor
xchg
pop
and
pop
scas
pop
leave
shlb
lret
sub
sub
jae
adc
imulb
ja
sbb
std
cmp
dec
or
arpl
loope
out
xchg
inc
mov
or
iret
pop
out
sbb
les
xchg
add
pushf
add
jns
add
aad
dec
sbb
mov
adc
rcll
in
scas
daa
cmp
cmp
aas
popl
push
and
or
xor
sub
add
xchg
sub
xor
repz
cmp
push
aaa
sub
mulb
rcrb
addr16
cmp
mov
jmp
pop
lods
scas
mov
sti
cmc
xchg
std
insl
fistl
and
ss
add
adc
enter
das
fwait
cmpsl
cld
mov
ss
lcall
xchg
sbb
dec
sbb
push
lods
mov
fdivp
loop
imul
pop
mulb
jp
loop
and
push
xorl
pop
lret
lock
xor
icebp
xlat
push
or
jg
mov
shr
repz
mov
cs
sub
imul
aas
sub
jecxz
inc
xlat
test
xchg
icebp
mov
mov
push
pop
lret
pop
enter
push
sbb
ds
and
popa
inc
popf
cltd
pop
jne
dec
push
popf
sub
mov
pop
jo
mov
sti
mov
jmp
jbe
jne
mov
cmpsb
insl
aad
orb
insl
int
jnp
inc
inc
daa
lock
push
mov
mov
cmp
jp
lcall
jae
xor
xor
jae
call
cmp
lock
jmp
test
and
data16
out
repz
xchg
jae
push
push
push
cpuid
shll
nop
xchg
xor
insl
stos
add
sbb
test
iret
sbb
mov
push
fcomip
and
popl
dec
out
or
and
mov
push
int3
add
mov
mov
adc
and
pop
pop
nop
pop
sub
and
mov
mov
mov
aam
mov
stc
inc
sub
and
push
jl
mov
sbb
lods
push
or
jne
gs
xchg
fisttpll
je
pop
mov
jae
dec
int
or
out
int3
cwtl
jns
dec
mov
mov
fs
xor
in
std
push
mov
in
cltd
or
inc
shl
mov
cmp
hlt
rcrb
ja
fs
mov
into
lock
repnz
push
cmp
inc
es
setae
add
aam
cltd
adc
into
negb
add
lea
repnz
pop
mov
rcll
mov
and
adc
clc
jnp
nop
lock
push
movsl
push
mov
mov
ja
or
icebp
and
pop
daa
dec
rclb
adc
jne
xchg
hlt
or
xor
movq
test
imul
sti
jmp
mov
inc
mov
adc
flds
cmp
jbe
add
fidivs
dec
push
mov
add
ficompl
pop
loop
adc
sbb
or
test
test
cli
adc
fldl
dec
mov
gs
mov
mov
or
and
jne
xchg
jmp
push
adc
or
push
mov
mov
bound
js
data16
sub
mov
mov
fbld
jnp
ljmp
popf
je
jge
test
push
iret
imul
push
daa
ss
push
and
sbb
loop
loop
inc
adc
cld
in
dec
inc
scas
filds
xchg
adc
into
xor
xor
call
repz
pop
ljmp
mov
mov
xlat
ret
dec
shll
loop
mov
movsl
aaa
jb
mov
or
outsb
jne
out
jecxz
xor
nop
je
sub
dec
xorl
lcall
xor
adc
mov
pusha
subb
mov
repnz
fdivs
xchg
xchg
sarb
lock
jnp
not
dec
in
lret
in
jns
mov
push
jne
daa
push
inc
pushf
lods
add
movsb
ljmp
js
out
pop
and
mull
movsl
neg
cvtps2pi
add
in
ds
sar
mov
push
pop
fs
cmp
cmp
cs
xchg
xchg
in
pop
rolb
jl
mov
and
inc
cltd
repz
cmp
test
xorl
sahf
cmp
int
stos
xchg
xchg
es
xor
leave
mov
int3
pop
insl
das
push
in
mov
mov
mov
push
dec
dec
xor
imul
mov
mov
push
sbb
or
xchg
xor
dec
clc
ss
pop
clc
loope
fcoml
dec
or
cmp
push
adc
sub
cli
or
sub
aad
add
mov
inc
mov
inc
clc
sub
in
or
out
imul
out
jle
scas
jmp
aad
xchg
inc
cmpsl
mov
xor
enter
loope
inc
lret
pop
jnp
pop
clc
cmp
push
mov
mov
enter
pushl
sbb
hlt
pusha
jl
jl
in
call
rorb
mov
ret
icebp
dec
jmp
je
and
mov
sub
dec
les
ret
sub
xchg
sub
into
popa
fcmovne
jae
pop
loop
scas
mov
jl
in
pusha
jae
sbb
sub
fcmove
dec
xor
xchg
mov
in
mov
popa
out
rolb
rolb
test
andl
sbb
aas
xchg
mov
cs
jno
aas
repz
cwtl
xor
xchg
decb
in
data16
pop
pop
push
pushf
adc
in
jnp
adc
sti
mov
pop
dec
aam
adc
xor
fdivp
xor
das
mov
mov
push
jns
hlt
in
mov
test
call
loop
pop
and
mov
mov
imul
jns
decl
in
pop
rol
inc
std
decl
xchg
inc
adc
mov
jge
mov
gs
push
adc
lahf
jae
sub
lock
inc
pop
push
mov
push
das
popf
popf
loop
fdivrl
enter
in
loopne
jne
mov
cmp
inc
push
shrb
mov
pop
xlat
int3
mov
stos
add
sbb
pop
jge
fwait
punpcklbw
ss
sub
mov
jns
jmp
imul
cwtl
nop
push
aas
cmp
adc
aas
mov
xchg
jmp
test
add
jg
insb
or
psllq
adc
shlb
xor
ret
roll
loope
mov
inc
icebp
pop
data16
mov
sbb
fiadds
imulb
adc
mov
push
pushf
mov
mov
mov
fsubrs
fisubrs
add
movsb
sbbl
push
subl
into
sub
lds
insb
mov
cld
movsl
mov
int3
xchg
cmp
insl
in
or
insb
jmp
mov
icebp
sub
sbb
fs
das
insb
testl
int3
xchg
jne
xor
jbe
stc
sbb
aad
mov
lods
cmp
addl
dec
shl
mov
movsb
movq
sbb
inc
insb
addr16
lret
data16
out
rclb
inc
mov
pop
pop
mov
dec
cmp
push
arpl
sub
pop
inc
imul
fdiv
sbbb
inc
dec
sbb
jb
hlt
outsb
imul
rorb
testl
fimull
push
clc
pop
sbb
mov
rorb
ja
lret
imul
mov
mov
test
sbb
scas
or
sti
in
pop
mov
stc
xor
loop
sub
movsl
sub
mov
imul
shl
fisubrl
fnstcw
pushf
cld
fisttps
xor
in
dec
push
or
inc
dec
leave
test
jl
and
sti
push
mov
push
sub
fisubl
sbb
dec
pop
pop
lret
hlt
fdiv
je
jl
data16
jle
ret
dec
ljmp
inc
inc
dec
or
call
mov
push
lcall
jge
ss
sub
sbb
xchg
sbb
add
outsb
lds
scas
xchg
xor
imulb
pop
test
dec
rolb
push
mov
jp
fiaddl
fucom
inc
mov
fidivrs
into
enter
testl
mov
inc
cmpsl
fimuls
stos
or
mov
push
jns
or
pusha
or
sarb
shlb
add
jne
inc
add
or
shrb
mov
cmpl
xor
mov
cmpsl
xchg
fs
orb
mov
cmp
js
cmp
cmpsl
mov
nop
mov
dec
add
push
sbb
test
xor
or
lods
nop
inc
or
repnz
int
jns
lcall
or
sbb
mov
push
xchg
mov
add
lret
push
popa
push
jne
fs
pusha
xchg
test
mov
xchg
xchg
push
sbb
cmp
out
mov
mov
mov
lea
mov
out
stos
or
and
rclb
cld
dec
pop
push
adc
popf
pop
arpl
lock
dec
jne
jge
movsl
loop
daa
fdivrl
push
out
pusha
mov
inc
xchg
push
data16
cmp
adc
cli
pop
xchg
mov
and
clc
lahf
or
add
xor
rcrl
int3
int
imul
outsb
xor
shlb
int3
jg
leave
data16
push
scas
aaa
push
loope
xchg
mov
mov
addb
sarb
mov
divb
cmpsl
jo
fsubrl
push
xor
es
or
je
push
xchg
or
cltd
pop
test
or
jg
xchg
lcall
lcall
in
push
inc
aad
std
int
mov
les
in
shl
rcll
xchg
cmp
and
fimuls
cmp
push
mov
lds
test
ret
push
dec
add
loopne
stos
scas
ret
pop
imul
sahf
std
xchg
dec
add
mov
je
cmp
stos
ljmp
cmpl
scas
jl
mov
xor
imul
or
sahf
outsb
push
std
sbb
sub
sbbl
movsl
mov
dec
xadd
push
cld
stos
iret
dec
ret
xchg
sti
out
jl
push
dec
mov
mov
cmp
loope
testl
in
add
arpl
in
xor
adc
jae
bound
mov
pop
jnp
xor
xchg
ja
push
cmp
mov
mov
mov
sub
aas
mov
sub
into
test
test
addr16
aaa
jne
or
adc
cli
fucomip
sub
add
mov
cmp
mov
in
in
adc
push
cmpb
or
adc
pusha
je
xchg
add
in
lahf
mov
xchg
mov
sbb
fwait
imul
lock
mov
inc
fs
sbb
es
sub
dec
jmp
and
stos
adc
shr
in
sti
dec
sub
mov
enter
cmp
or
jg
and
leave
pusha
jno
pusha
xor
inc
mov
les
mov
mov
push
push
out
ret
jne
fnstenv
sub
pop
xor
and
xor
mov
outsb
jne
push
pop
cmp
cmp
and
xchg
cmc
scas
movb
outsl
add
out
leave
lds
cmpsb
cld
ljmp
repnz
repz
dec
popf
out
or
pop
xor
sbb
jge
and
sbb
add
pop
sbb
mov
dec
imul
push
and
stc
mov
ds
cmp
add
sti
pushf
lea
fwait
sub
fcomps
ficomps
adc
fdivl
cmpsl
push
cmpl
mov
out
mov
outsl
cmp
out
clc
sahf
jne
mov
xchg
and
loope
test
xchg
pop
in
cmpsb
sbb
lock
mov
dec
xlat
xchg
ret
or
jb
push
fisttpl
int
cmp
add
adc
xor
adc
cmp
and
jnp
outsb
dec
cltd
add
cmp
cmp
fnstsw
sub
fcmovu
loope
pop
pusha
xor
stc
lcall
lods
int3
adc
push
js
cltd
push
notb
jno
xchg
faddp
add
xor
push
xor
mov
jmp
out
in
pushf
sti
lock
jb
xor
or
inc
pop
fsubs
test
stos
pusha
sbb
leave
out
cwtl
dec
mov
dec
pusha
int
fimuls
negl
xor
in
pslld
iret
pushf
loop
and
sti
fisttps
mov
rorl
xchg
shl
sbb
cmp
cmp
jge
dec
push
stos
hlt
aas
push
cmp
ljmp
in
inc
cmc
sbb
and
xchg
dec
sahf
jmp
stos
inc
insl
in
hlt
decl
jl
or
or
sbb
mov
cmc
jno
add
or
out
call
popf
or
fs
pop
mov
test
ret
hlt
xchg
dec
lret
push
add
xor
jnp
xchg
sbb
adc
lods
cltd
push
fwait
and
pop
adc
add
or
pop
shl
jnp
add
adc
xchg
jg
pop
cmp
dec
adc
ret
cmp
mov
add
xchg
lods
mov
int3
jns
hlt
push
dec
xor
out
leave
nop
mov
jge
dec
or
enter
mov
pop
ljmp
xor
and
or
mov
fmuls
jl
jl
mov
mov
subl
jne
mov
pop
mov
xchg
jae
xchg
test
and
mov
xor
sub
sub
lcall
xchg
sbb
test
jmp
daa
add
push
pop
andb
adc
mov
xor
in
jns
push
xor
testl
add
or
dec
ret
test
addl
xchg
mov
fsts
mov
adc
out
cmc
xchg
in
lods
testb
sub
mov
mov
outsl
and
xchg
dec
stc
xor
jl
inc
adc
cmpsl
push
bound
loopne
jg
add
nop
cmp
cli
fidivrs
sarb
xorb
xchg
mov
mov
call
decb
das
movsb
cmp
cmp
dec
sbb
cli
pop
and
in
mov
mov
out
jg
dec
sub
test
jmp
jno
adc
push
imul
or
jl
cmp
lret
jp
in
or
hlt
sbb
cmp
dec
or
daa
dec
mov
aas
loope
pop
cmpsb
mov
das
mov
jno
pop
jmp
sub
xor
insb
sbb
sbb
inc
mov
jmp
adc
lods
shrb
pop
ret
cmp
rorl
cli
cmp
mov
stc
pop
ds
pusha
mov
es
cli
xchg
push
jp
mov
add
xchg
cs
jns
ja
cmp
xchg
pop
je
xor
mov
call
dec
pop
cmp
pop
sbb
mov
fisubs
ja
int
rcr
adc
adc
fnstsw
xor
les
push
incb
adc
ret
dec
sbb
outsl
stos
mov
sbb
int
into
div
inc
pop
aad
jg
mov
daa
pop
jecxz
call
scas
movsb
jle
mov
sub
mov
inc
movsl
sti
mov
in
pop
loopne
call
xchg
mov
lds
adc
pop
mov
rorl
mov
mov
mov
movsl
cs
mov
or
and
xchg
fbstp
ret
mov
inc
or
repz
sbbb
pop
xchg
std
sbb
jp
xchg
lods
ljmp
or
sub
fsubs
test
stos
je
push
cltd
pop
and
mov
stos
cmp
fsts
add
jns
test
add
add
and
clc
sbb
insb
push
xchg
mov
sbb
loopne
movsl
sti
add
sub
hlt
bound
adc
jo
mov
pop
scas
xor
or
sub
loope
js
leave
popf
movsl
roll
fcmovnu
jecxz
mov
push
stos
mov
mov
add
cmp
xchg
jb
or
loope
shll
pop
in
fnsave
int3
xchg
lret
dec
data16
cmpl
and
movsb
jle
rcrl
push
out
out
in
fs
aas
xchg
or
mov
aad
pop
leave
test
and
int3
int3
mov
movsl
sbb
shl
xor
and
push
xacquire
out
dec
jp
loope
popl
and
and
adc
dec
shll
sbb
inc
jne
sub
xchg
push
dec
insb
xor
fcomps
sub
inc
adc
dec
xchg
stos
ret
xchg
or
into
adc
rolb
mov
mov
cmp
pop
daa
inc
mov
stos
xor
xor
add
inc
push
jl
or
pop
stos
xchg
sub
pop
jnp
push
xchg
xor
and
pop
insb
es
loopne,pn
mov
or
mov
sbb
push
sbb
fsts
xchg
jecxz
inc
pop
fsub
pop
sub
push
jns
dec
pop
jno
cltd
arpl
rolb
out
adc
sbb
sbb
xchg
adc
jecxz
lea
lcall
pop
ds
jno
dec
stos
sbb
in
pop
jmp
mov
push
cmp
pop
fwait
out
or
sbb
mov
hlt
mov
scas
lret
and
ret
or
mov
cmp
cmp
cmpb
add
push
xchg
or
stos
adc
dec
sub
call
repz
insb
sbb
push
repnz
sub
mov
pop
jg
icebp
in
out
add
pop
pop
mov
cmp
leave
fldcw
xor
ret
or
call
sub
clc
mov
or
jl
popa
xor
xor
jns
mov
mov
clc
jmp
dec
shlb
cmp
cli
shlb
outsb
loope
pushf
test
imul
jb
loopne
xchg
repz
mov
sti
xchg
dec
fisttps
and
sbb
inc
testl
pop
hlt
aam
cmp
movl
andb
scas
sub
pop
popf
dec
arpl
fwait
jae
outsb
xor
sub
jp
out
sarl
adc
ja
mov
mov
and
dec
icebp
adc
pop
dec
adc
xchg
mov
dec
movsb
pop
xchg
cmp
jl
lahf
rcrl
xchg
push
push
pop
jns
adc
mov
xor
and
add
xor
leavew
cmp
lea
xchg
xchg
in
add
mov
int
scas
cmc
mov
and
fiadds
hlt
in
in
dec
in
insb
pop
dec
adc
jo
jge
xor
dec
adc
sub
jnp
push
repnz
cmc
jge
int3
add
sub
call
imul
bnd
pop
adc
inc
pop
or
xor
push
je
sub
insb
ror
jecxz
outsl
call
in
cmpsb
xchg
popf
shrb
pop
xor
xlat
pop
mov
cmp
gs
roll
out
push
mov
out
cli
ret
jle
leave
mov
and
orb
repz
dec
jmp
lea
pop
pop
sub
jne
mov
data16
adc
mov
nop
jnp
or
sti
lahf
push
test
mov
rclb
jecxz
jecxz
cmp
test
jns
sub
mov
fwait
dec
mov
in
jnp
inc
addr16
sahf
pop
inc
push
jno
lea
inc
mov
or
shrb
add
or
movsl
mov
mov
xlat
cmpsl
xchg
mov
fisubrs
xchg
add
or
dec
sti
xor
sbb
aas
xchg
sbb
or
insb
pop
mov
movsb
leave
sar
push
mov
insb
sub
cmpsb
pushf
cs
inc
test
ret
stos
jnp
mov
mov
push
dec
js
idivb
and
cmp
fwait
in
pop
test
ret
jecxz
in
pop
mov
pavgw
cmp
aam
inc
mov
mov
pop
mov
mov
adc
aaa
sub
sub
daa
icebp
pop
sbb
xchg
iret
pop
vcvtpd2psy
movsb
push
and
je
stos
leave
push
pop
pop
jge
mov
push
in
mov
and
ret
popf
test
xchg
or
xchg
aam
inc
aad
imull
xlat
loop
setae
adc
jl
sbb
and
and
mov
jmp
ret
inc
out
int3
push
dec
aas
and
sub
sub
cmpsb
mov
pop
ljmp
mov
mov
mov
ret
pop
sbb
shr
mov
std
xchg
call
bsf
fmulp
sub
mov
lcall
cmpsb
orl
ds
push
out
pushf
sarl
xchg
jnp
ds
cwtl
xchg
imul
dec
ljmp
testl
fucomi
les
movsl
test
xor
push
mov
and
mov
fcomi
fcmovu
in
mov
xorb
jmp
adcb
pusha
gs
in
sbb
fs
inc
mov
sbb
loop
iret
or
adc
or
and
inc
sbb
icebp
out
dec
mov
mov
shrb
or
test
dec
insb
mov
inc
scas
xchg
je
dec
lods
adc
imul
outsl
sub
imul
loop
movsl
imul
mov
movsb
pop
cld
jg
mov
pusha
fisubs
inc
imul
rclb
pop
roll
dec
mov
aad
jecxz
mov
orb
xchg
imul
into
xchg
lcall
loope
fildl
insl
pop
pop
loopne
and
add
leave
mov
mov
xchg
push
imul
inc
cmc
pop
std
in
mov
cmp
and
enter
hlt
or
mov
xorb
cmp
clc
push
mov
mov
shlb
insl
and
test
mov
pop
jle
movsb
lea
xlat
leave
xor
and
dec
int
out
jno
out
sub
rcr
push
lock
xchg
stos
jl
mov
mov
dec
mov
call
je
mov
dec
ja
ja
cmp
jl
inc
xchg
xor
cmpsb
xchg
jbe
idivl
fs
arpl
pop
push
sti
adc
adc
inc
xchg
dec
mov
push
into
ffreep
xchg
inc
call
and
dec
mov
mov
out
int
push
insb
inc
push
or
testb
insl
out
jecxz
xchg
xor
mov
ljmp
push
addr16
and
xchg
adc
clc
movsl
ss
es
mov
sbb
out
rclb
jbe
adc
sbbl
icebp
push
mov
add
push
or
clc
cmp
mov
adc
sbb
sub
sub
out
pop
sbb
in
jns
xchg
xor
inc
or
loope
leave
hlt
cli
xor
dec
dec
les
xchg
mov
ss
fs
inc
pop
cmp
sbbb
ds
cmp
jae
mov
adc
xchg
sti
sbb
adc
enter
jne
pop
lock
jge
dec
pop
test
mov
push
push
out
dec
or
pop
jne
lock
pop
or
dec
popa
mov
insb
add
add
rcll
mov
mov
fisubl
insb
das
call
out
mov
mov
cmc
add
es
jno
clc
int
ja
out
cltd
stc
push
xchg
cmp
inc
aaa
and
xchg
jl
jns
pop
in
push
jno
push
dec
dec
xor
or
push
xor
jnp
movsb
xchg
adc
inc
sub
sbb
fnclex
dec
inc
and
add
mov
lret
pop
fdivs
push
inc
pop
mov
and
sbb
lods
loopne
mov
lret
movsl
fists
sub
sti
add
mov
inc
sbb
scas
fdiv
push
jmp
or
mov
jo
stc
fiadds
cmpl
lods
mov
mov
fbstp
mov
push
cmpl
test
inc
sbb
sahf
xchg
or
pop
and
call
sahf
mov
push
xchg
xchg
push
jle
jg
push
mov
lcall
inc
lret
js
fucomi
xor
push
inc
test
nop
jne
xor
dec
out
xchg
mov
imul
mov
mov
mov
cld
int
push
sbb
bound
stc
lods
adc
jnp
int
cltd
sbb
js
mov
addr16
xor
xor
mov
cmp
rolb
out
push
jno
dec
movsb
loop
inc
and
repnz
mov
pop
adc
shrl
and
or
sbb
ds
push
stos
push
mov
push
shlb
jecxz
nop
fidivrs
pop
mov
or
xchg
ficoms
cld
jbe
push
aas
data16
ss
aaa
dec
add
push
pop
rclb
dec
inc
push
in
or
int3
inc
adc
cltd
mov
push
mov
jg
sbb
push
cmpsb
hlt
and
enter
gs
loop
mov
lret
sub
out
inc
add
repz
push
inc
loopne
push
jecxz
dec
mov
out
pusha
in
frstor
sbb
ja
lahf
dec
sub
fisttps
repz
hlt
xor
mov
add
mov
xor
or
ret
int3
fisttps
jne
data16
inc
mov
push
dec
imul
repnz
jl
dec
and
fisubrs
in
ret
sub
ja
inc
jp
loope
mov
cs
shrb
xchg
add
addr16
dec
stos
outsl
add
dec
add
clc
testl
popf
iret
popa
shl
mov
jbe
in
loopne
jo
movsb
shlb
sub
mov
xchg
outsb
push
jmp
mov
jl
xchg
mov
in
lods
push
incb
in
xchg
or
add
scas
incb
and
xor
and
push
push
daa
call
cs
cmpsb
jae
and
mov
xor
outsl
mov
enter
inc
or
jb
add
mov
mov
mov
sbb
dec
jecxz
call
popf
sub
pop
or
or
lahf
push
movsl
push
cltd
inc
out
cmc
repnz
mov
das
inc
inc
sbb
dec
stc
cs
loop
pop
sub
or
mov
outsb
stc
mov
adcb
xchg
xchg
mov
mov
outsl
mov
out
jbe
jnp
mov
jae
or
clc
sbb
mov
lock
push
loopne
and
jmp
cmpsb
xchg
test
sbb
cs
outsl
hlt
or
pop
cmpl
sbb
push
mov
test
jge
mov
and
mov
fdivrs
cs
repnz
push
adc
push
push
mov
push
xor
stos
push
out
std
shl
dec
mov
xor
aaa
dec
imul
daa
sahf
lea
jmp
inc
sti
adc
xchg
adc
test
inc
xor
mov
sbb
pop
pushf
movsb
pop
loop
add
xchg
in
dec
fcompl
das
pop
loope
testl
fcoms
mov
jg
xor
inc
sub
cmp
cmp
mov
xchg
mov
pushf
aad
mov
dec
stc
fsubs
jecxz
inc
ja
imul
adc
inc
dec
push
add
pop
add
dec
aad
pop
xor
sahf
ds
test
addl
insl
pop
filds
xor
jmp
or
jnp
imul
xor
jb
or
push
lahf
lahf
mov
or
push
cmpsb
cmp
inc
es
xchg
and
lods
cmp
rcrb
or
xchg
mulb
mov
jo
scas
mov
inc
test
lea
sub
cwtl
movsl
cmp
pop
pop
out
aad
lea
mov
fs
incb
xchg
sti
push
push
jg
insb
sbb
imul
jge
aad
inc
ja
push
dec
mov
xor
or
rorb
insl
or
test
push
push
enter
sub
fadd
sub
jnp
scas
icebp
add
loope
cmp
cmpsb
mov
es
pop
jg
insb
mov
jp
lods
pop
mov
mov
daa
ljmp
lock
adc
sub
xor
mov
mov
insb
xchg
inc
cmp
testb
push
cs
cld
movsl
mov
and
test
loop
ret
in
jmp
addr16
mov
fs
loop
into
cli
and
inc
sbb
add
pop
test
cld
stc
jmp
push
les
cmp
sti
test
mov
leave
adc
aaa
stos
je
dec
mov
and
sbb
enter
inc
mov
in
movsb
adc
lret
xor
jbe
cmpb
add
push
jp
cmc
stos
lods
jno
mov
repz
fcoml
fs
inc
xor
pusha
clc
cmp
dec
aad
decl
jns
fidivl
je
sahf
or
xchg
pushf
or
aaa
dec
push
clc
pop
sbb
cmp
pop
sbb
rcr
xchg
gs
stc
jb
xchg
addr16
cwtl
xchg
ja
push
adc
fwait
jo
pop
aas
mov
testl
iret
imul
mov
xor
stos
pop
shll
pop
lcall
les
fbld
negl
aaa
jl
mov
cld
lods
xchg
xor
inc
cmpsl
and
into
jge
popa
ret
lods
sbb
mov
movsl
mov
jge
lcall
test
cmpsl
mov
fcomp
jno
lret
sub
pushf
xchg
imul
flds
add
enter
push
adc
loopne
xor
in
pop
inc
push
test
js
arpl
cmp
push
adc
push
test
push
jo
jle
mov
je
cwtl
cmp
mov
leave
cld
inc
cmc
xor
adc
adc
js
dec
cmp
xchg
push
mov
das
cltd
aam
pop
jecxz,pt
push
es
cwtl
xchg
pop
imul
inc
mov
dec
push
pop
imul
jns
shl
hlt
jae
loop
xor
mov
jae
and
cmp
push
iret
test
push
and
out
cs
movl
or
repnz
sbb
adc
hlt
dec
pop
add
lret
sarl
or
xor
repz
mov
xor
mov
iret
lods
orb
add
andb
jnp
int
inc
fsubl
scas
fidivrs
arpl
insb
xchg
test
cmp
daa
and
data16
lcall
mov
hlt
jl
push
stc
xchg
push
js
dec
outsl
fstps
mov
mov
jns
testl
in
xchg
imul
add
stos
xor
sbb
in
pop
out
dec
jne
xchg
sbb
xlat
call
adc
dec
call
xor
xchg
fisubrs
popa
sbb
dec
push
xor
jmp
mov
movsb
lcall
stos
ljmp
pop
push
mov
ret
addl
and
cmp
inc
cwtl
rol
fbld
xchg
xor
xchg
repz
cwtl
push
call
cmpsb
int3
mov
jae
and
lcall
fs
inc
push
test
sbb
fiadds
mov
and
dec
sub
movsb
push
enter
xor
or
imul
insb
imul
pop
adc
dec
lret
aam
sub
adc
insb
mov
mov
mov
scas
scas
fisubl
xor
push
mov
lods
push
movsb
das
out
fnstenv
xchg
cli
dec
scas
pop
pop
mov
in
aaa
je
push
movsl
nop
sub
bound
cmp
test
lahf
rorb
sbb
ret
dec
pop
add
fst
movsl
dec
data16
pop
mov
scas
jno
out
sub
inc
jmp
mov
push
leave
sub
dec
dec
mov
mov
jecxz
insb
lods
jg
push
pop
mov
pop
stc
loopne
stos
push
sbb
lock
in
xor
mov
add
inc
arpl
adc
mov
inc
popf
jno
and
xchg
ret
in
sti
rcr
mov
das
pop
testb
mov
add
cs
jne
mov
jbe
mov
out
pop
xor
lret
push
adcb
sahf
es
lcall
mov
arpl
jb
pop
cmpsl
jmp
lods
xor
mov
mov
pusha
test
iret
data16
add
push
hlt
cwtl
mov
popw
repnz
in
or
out
imul
mov
mov
and
mov
xchg
mov
mov
xor
push
jmp
xchg
lret
pop
pop
or
adc
xchg
and
loope
fwait
je
mov
addr16
adc
sub
xor
lret
pop
add
leave
jo
push
fs
jne
pop
sub
adc
push
ljmp
mov
and
orb
cs
loope
push
inc
mov
aam
ja
mov
mov
aam
lret
add
sbb
jmp
int3
xchg
mov
jge
push
aad
push
xchg
out
popa
dec
jge
movb
outsl
dec
aad
scas
div
xor
dec
add
xchg
les
addl
ds
mov
xchg
add
leave
dec
mov
fwait
in
dec
cld
push
idiv
adc
and
outsb
loopne
adc
addr16
pop
add
jae
subb
push
mov
lea
push
mov
aam
jg
call
adc
jg
pop
lahf
loopne
rdpmc
cmp
jno
push
jo
xor
mov
add
push
sbb
sub
or
mov
das
push
pusha
jns
jle
cmp
mov
rclb
out
xchg
das
imul
in
adc
mov
jecxz
mov
stc
mov
mov
sbb
stc
dec
mov
decl
pop
add
fcompl
jae
xchg
cmp
aam
or
mov
addb
cmc
ret
ljmp
add
sub
add
sarb
mov
aaa
jb
xchg
xchg
outsl
mov
pop
jns
xchg
add
pop
and
xor
xchg
lds
loopne
loope
xchg
mov
xor
cmpsb
je
jo
add
fs
pop
nop
mov
inc
cmp
cmpsl
pop
shl
jnp
loopne
push
in
test
lock
das
stc
popf
insl
inc
iret
jg
mov
mov
fbld
leave
adc
sub
rorb
jge
stos
dec
insb
dec
dec
cmp
pop
sub
xchg
push
inc
mov
dec
nop
scas
mov
inc
push
rclb
aaa
cmp
sarb
getsec
adc
lock
rcl
or
imul
mov
mov
and
ficoms
adc
mov
adc
sub
push
pop
fadds
icebp
xchg
and
push
add
pop
shlb
inc
fwait
lock
add
repz
push
mov
cmpsb
imul
inc
lea
movsb
sub
popf
xchg
sbb
cwtl
fstp
outsb
xchg
pop
mov
bound
push
ss
cmp
pop
fistps
mov
jmp
push
sub
pop
pop
pushf
pop
push
sbb
jae
repz
mov
xchg
pop
xlat
push
jno
cmp
mov
jne
aas
dec
dec
lock
aad
inc
test
iret
sub
cmpsl
cmp
adc
mov
mov
in
pop
cltd
push
pusha
sbbl
push
mov
mov
xor
cmpsb
push
test
adc
and
jo
out
lret
jle
inc
pop
pop
das
sarb
push
lods
cmp
out
iret
mov
sub
pop
push
mov
fists
adc
loope
sbb
xchg
sbbb
add
add
dec
repnz
mov
repnz
xchg
das
or
dec
xor
sbb
ret
xor
push
stos
bound
ret
inc
push
rorl
stc
push
inc
enter
and
test
lea
pop
jns
push
es
shll
or
aas
mov
fwait
sbb
lcall
inc
sub
clc
mov
jp
push
fcmovbe
mov
inc
xchg
mov
scas
fxch
cmpsl
inc
stos
xor
lret
pop
into
pop
jae
mov
inc
jne
and
pop
cmp
in
jge
popa
cs
mov
jne
movsb
fsubrl
scas
sbb
cmp
sarl
push
arpl
jo
scas
or
pop
xor
pop
inc
jl
gs
mov
push
icebp
pop
addr16
pop
push
push
push
shl
dec
movsb
mov
mov
stc
mov
jecxz
mov
in
sbb
loop
mov
adc
stos
aad
scas
mov
inc
jg
sbb
xchg
lahf
cmp
test
or
jg
sbb
imul
dec
repz
jb
sbb
aaa
mov
hlt
adc
pop
sti
mov
out
add
mov
sbb
jns,pt
divb
mov
jns
dec
adc
and
push
xchg
xor
mov
test
loopne
pop
pop
je
mov
sbb
or
add
addb
adc
cmp
stc
xor
test
and
daa
sub
in
loop
ret
jmp
mov
scas
shll
mov
or
pop
xlat
xchg
mov
push
xchg
jecxz
or
int
add
push
push
xorl
sti
push
mov
sub
pushf
cltd
mov
sti
sbb
add
fmuls
ret
adcl
push
das
aaa
push
inc
push
cmp
add
stos
or
daa
lds
adc
dec
pop
les
inc
jae
cmp
xchg
orl
in
mov
adc
hlt
adc
sbb
xchg
jmp
xchg
mov
gs
bswap
pop
repnz
sub
xchg
jns
mov
dec
mov
inc
sub
daa
fldcw
and
in
mov
adc
xorl
xor
test
jecxz
dec
pop
shrb
les
push
mov
xchg
cmp
shr
push
xchg
jbe
je
mov
sub
mov
pop
into
push
mov
mov
jecxz
mov
and
sub
or
xor
fistl
mov
hlt
ficoml
mov
call
pushw
and
pop
or
xchg
hlt
mov
dec
ja
arpl
pop
and
in
mov
mov
push
or
scas
enter
jbe
dec
mov
and
in
roll
ja
push
fcmovne
or
add
xlat
orl
push
das
subb
andb
int
insl
gs
add
push
test
jns
sub
push
je
pusha
popf
inc
pop
cld
mov
insb
test
ss
lahf
pop
lea
cld
ret
idivl
jbe
pop
fistl
mov
fucomi
ss
pop
add
test
mov
jae
in
mov
ss
fincstp
inc
imul
roll
add
insb
imul
or
add
push
fwait
repz
push
stos
sub
scas
imul
mov
in
lret
loopne
faddp
out
cmp
test
test
xor
shl
jb
hlt
xor
shlb
dec
fldl
lret
or
pop
mov
pop
inc
push
test
pop
xor
lcall
loopne
mov
and
push
cmc
sti
sub
mov
outsb
cmp
ljmp
mov
std
les
les
movsb
push
daa
xlat
fisubs
sbb
xor
mov
jno
or
jg
cs
sub
cmpsl
sbb
push
leave
in
add
into
cli
and
jne
adc
sub
mov
mov
adc
imul
nop
out
int
cmpsl
sbb
rclb
mov
inc
lods
mov
xchg
jae
inc
mov
aaa
sub
mov
dec
ja
popf
add
add
cmp
dec
imul
leave
xor
aad
int3
popa
adc
movsl
xchg
jle
arpl
inc
dec
scas
jg
adcl
push
or
cmpsb
inc
mov
stc
lcall
in
ljmp
mov
lds
push
fucomip
cmpsl
addr16
or
clc
mov
mov
es
enter
negb
jmp
xchg
pop
rcl
test
jne
ja
pop
jge
repz
sbbb
movsl
shlb
lea
sub
imul
je
push
jg
inc
test
ficompl
push
push
jg
in
fiaddl
sbb
or
adc
cmp
jl
xchg
mov
aam
mov
orl
fbstp
imul
daa
xchg
push
fisttps
adc
dec
sbb
aas
xchg
push
ss
jmp
or
or
int
repnz
pop
in
sbbb
call
cmp
xchg
or
test
add
mov
xlat
addr16
fistl
addr16
xchg
lret
inc
lret
xor
pop
int
in
into
inc
leave
xchg
adc
shr
pop
cmp
dec
icebp
and
sbb
in
data16
jns
cld
movsb
movsb
xchg
or
or
pop
jmp
push
pusha
aaa
bound
repnz
test
test
xchg
pop
and
sub
into
test
in
adc
test
xor
push
popf
loop
or
or
outsb
push
icebp
popf
sub
cmpsb
mov
gs
popa
pop
sbbl
xchg
arpl
lret
in
cltd
aad
cmp
mov
lret
in
mov
xchg
lds
push
vcvtpd2psy
and
outsl
stos
and
pushf
add
shl
pop
xor
jbe
inc
in
cmp
hlt
lods
je
int3
gs
fs
or
cmpsb
lahf
ds
aaa
mov
mov
add
dec
mov
stc
pop
idivb
xchg
inc
add
scas
pop
decb
push
filds
rcl
and
pop
bound
push
jo
iret
mov
lahf
lock
or
add
pushf
daa
insl
inc
mov
pushf
lahf
mov
adc
in
cld
movsb
sahf
leave
push
pusha
or
xchg
pop
add
or
inc
xor
test
xchg
jmp
gs
and
stos
dec
enter
adc
and
xchg
sti
clc
nop
xor
xor
cld
bnd
mov
or
popa
inc
xchg
les
stos
jno
ficomps
scas
mov
out
dec
scas
sbb
cmpsb
fdivrl
out
scas
fdivrl
sbb
jnp
imul
xchg
lock
xchg
vpaddusb
xchg
mov
aam
sti
mov
loope
jmp
jns
sbb
popa
lock
fwait
push
int3
add
or
sub
les
scas
jmp
push
insl
dec
sbb
ffreep
psubusb
insl
xor
test
push
cmp
stos
dec
and
cmp
mov
pusha
rol
inc
lods
xchg
bound
rcrb
mov
ja
iret
daa
loopne
adcl
nop
dec
inc
popl
and
inc
add
out
decb
mov
mov
sbb
xor
push
push
addl
fcomi
mov
cwtl
jge
aad
push
inc
jnp
push
hlt
sbb
push
add
lds
sbb
inc
cltd
int3
insb
loopne
inc
push
xchg
fcoml
or
pop
inc
cld
stos
add
sti
into
dec
divl
movsl
xor
adc
repnz
lahf
ficoml
mov
push
adc
les
push
adc
and
test
mov
add
dec
ret
nop
jl
mov
or
xchg
cmp
pushf
pop
adc
pop
sbb
into
test
pop
jo
pop
pop
xchg
ret
push
add
adc
or
sbb
sub
push
sbb
outsb
push
popf
out
push
xchg
adc
icebp
xchg
je
mov
outsb
into
out
push
shlb
cmc
or
scas
jbe
addr16
out
jl
in
jge
lret
stos
pusha
into
std
sbb
in
xchg
push
es
xorb
cmp
sub
pop
test
fmul
mov
or
jne
fs
daa
or
xor
fs
push
shll
repnz
inc
jmp
test
pushf
xor
cmc
dec
xchg
cltd
stc
in
jb
or
inc
hlt
shll
sub
rcr
jo
jge
mov
cmpsb
xchg
dec
dec
pushl
stc
lods
adc
sbb
daa
leave
into
insb
enter
sub
pop
mov
jle
xchg
jb
mov
inc
insl
mov
ret
or
in
jge
notb
mov
add
xchg
daa
fsubrp
cmpsb
pushf
popa
and
dec
xchg
push
loop
or
cmp
inc
jmp
cmc
add
inc
dec
cmpsb
and
icebp
push
mov
xor
mov
jne
mov
roll
inc
sub
inc
shrl
adc
xor
dec
push
and
jg
inc
scas
pusha
sub
push
jge
shr
test
lret
pop
ds
daa
sahf
adcl
lds
sbb
pop
mov
cmc
or
push
pop
jbe
inc
std
out
insb
adc
insl
mov
rcll
lcall
mov
cld
jns
in
jne
jb
std
test
push
xchg
stos
mov
out
aaa
and
repz
dec
das
mov
and
and
insl
std
mov
inc
inc
cmp
jp
inc
add
cmpsb
les
xchg
dec
popaw
or
mov
mov
test
lea
repnz
sub
popf
repz
pop
jne
xchg
pop
call
xor
or
lcallw
pushf
call
mov
scas
scas
repnz
popa
push
sbb
add
push
push
add
lea
stos
adc
lret
cmp
sbb
les
ds
xchg
mov
lahf
ljmp
rcrb
pusha
lock
mov
mov
int
loop
popf
out
repnz
lods
ret
push
mov
shll
dec
jno
cmc
and
pop
dec
and
pop
stos
and
sarb
inc
xor
fistps
sbb
lock
dec
clc
out
xchg
and
cmp
push
cmp
mov
xchg
subl
pop
inc
rorl
cmp
cld
push
sahf
pop
mov
xor
push
aas
push
jp
xchg
push
cmp
inc
pop
lahf
leave
fsts
inc
mov
orb
jle
insb
loope
es
mov
push
fsubl
cwtl
sbb
xchg
lcall
test
dec
out
in
sbb
inc
lahf
int
imul
add
xchg
ja
mov
shll
lret
inc
fildll
ja
push
mov
mov
in
jo
fnstenv
scas
aaa
sub
repz
push
xor
aad
test
sub
dec
cmpsb
pop
addl
mov
fwait
xor
push
movsb
mov
or
push
mov
push
ret
dec
in
lock
mov
cmp
inc
push
out
repz
inc
pop
sub
mov
in
xchg
add
aas
in
mov
mov
int
xor
jnp
mov
ret
adc
mov
jnp,pt
cmp
pop
or
cmp
int
hlt
mov
inc
push
prefetch
and
out
js
inc
adc
clc
aam
mov
das
enter
sub
idiv
stos
rcl
or
adcl
pop
adcb
cmp
push
lret
push
xchg
shrb
je
push
xchg
xchg
add
xlat
sub
xor
inc
mov
je
mov
cs
add
mov
pop
pop
stc
in
das
sbb
xchg
inc
xchg
pop
xchg
cmp
lret
push
sbb
test
mov
orb
pop
mov
dec
test
sub
pop
and
mov
or
es
sahf
aas
sbb
push
loopne
stc
jno
xor
rcrl
adc
and
loope
fisubrs
push
dec
jg
mov
xor
adc
aaa
clc
jne
sub
xchg
xchg
in
pop
repnz
loope
jg
inc
adc
test
clc
cmc
cmpsb
std
and
mov
dec
outsb
es
fcmovb
xor
inc
jb
mov
in
jae
and
imulb
pop
push
call
mov
and
and
mov
xchg
mov
ror
loope
mov
mov
and
js
clc
add
pop
sub
adc
jmp
pop
xor
pop
fcmove
push
xchg
inc
or
cmpsl
es
xor
jmp
xlat
out
sub
sbb
push
xor
add
sbb
mov
sbb
or
dec
add
mov
rcll
inc
xchg
mov
addr16
shll
cmp
mov
popa
pusha
aaa
xlat
dec
mov
jb
jecxz
lcall
pop
icebp
sbb
inc
pusha
lret
adc
pop
pushf
xor
xchg
fisubrs
imulb
sub
jo
adc
loop
rcr
push
inc
push
sub
lods
outsl
fs
or
fidivl
mov
dec
sbb
push
dec
enter
out
mov
adc
push
es
mov
or
xor
es
loop
int
sbb
jl
mov
mov
lea
xchg
xchg
idivb
in
shll
sbb
jae
jbe
xchg
or
mov
fwait
jl
and
out
es
mov
cmpsl
add
and
adc
xor
call
gs
sbb
mov
lods
shlb
aas
outsb
movsl
pop
sahf
sbb
mov
sub
fcoms
call
push
adc
add
or
ja
mov
or
test
ud2
jne
mov
xchg
loope
dec
mov
jae
add
or
into
stc
adc
outsl
daa
xchg
aam
mov
mov
adc
mov
lcall
jl
mov
pop
ret
inc
mov
push
aaa
jl
dec
leave
push
movsb
jae
les
push
rcrl
scas
and
mov
adc
push
inc
data16
test
daa
out
jmp
dec
mov
dec
or
fimuls
outsl
lods
push
insb
negb
subb
js
fdivl
sbb
inc
outsb
add
sti
mov
sub
dec
insl
cmpsb
mov
je
iret
sbb
test
aaa
adc
in
movsl
fdivs
dec
fcomp
jne
push
xor
jg
sbb
mov
les
mov
lock
ret
or
popf
test
mov
std
jmp
addr16
in
jle
push
pop
fs
stc
mov
orb
daa
pop
loope
xor
cmc
lret
pop
test
lock
mov
pop
jo
jb
sti
jb
cmp
je
mov
push
ja
jnp
in
mov
push
push
xchg
rcrb
push
pop
lahf
test
sbb
jecxz
test
xor
pop
jp
xchg
and
ja
icebp
sahf
push
lret
xchg
fldcw
mov
cmp
and
subl
push
nop
lock
test
mov
lret
jle
lods
aad
pop
test
cltd
icebp
inc
xor
dec
imul
fwait
or
sub
push
lds
imul
movsl
shr
mov
incb
movsl
xor
mov
or
aam
loop
xorb
incb
cmp
popf
jecxz
rcrb
push
imul
aam
xor
push
xorl
add
into
mov
ss
sub
outsb
or
push
out
incb
test
daa
mov
ljmp
repz
outsb
jle
xchg
enter
cmp
andl
inc
jge
sub
mov
popa
cwtl
stos
shll
cld
adc
out
mov
sbb
aaa
push
mov
pusha
sbb
pop
les
mov
pop
cmpb
sarl
outsb
lret
bound
cltd
cmp
icebp
lds
pop
or
xchg
xchg
rcrl
or
lods
inc
lock
xor
inc
jle
cltd
adc
out
fs
lea
cli
pop
fld
aam
or
mov
adc
movsl
push
sbb
fisubl
and
sub
inc
lods
mov
cwtl
pop
subl
shr
sub
sbb
jp
xor
incl
mov
or
sarb
mov
push
int
cmc
pop
push
repnz
lods
cmc
out
push
mov
hlt
ret
aas
jae
xchg
and
inc
test
jno
mov
lahf
stos
fimuls
in
mov
sbb
sbb
dec
push
mov
fwait
test
pop
or
and
lret
cld
imul
repnz
lods
shlb
out
adc
xorl
inc
neg
jno
cli
sub
dec
fcomps
cmp
mov
push
jp
insb
adc
jno
loopne
cwtl
dec
cmp
dec
mov
xchg
in
jae
sub
adc
sbb
pop
or
cmp
vpmacssdd
or
and
fstps
pop
ret
push
adc
mov
inc
xchg
add
hlt
mov
mov
adc
in
hlt
and
lock
popf
js
add
pop
jl
mov
jno
movsb
daa
fisubrs
sbb
jns
adcb
ret
popa
je
test
pop
xchg
sbb
pop
mov
inc
mov
and
xor
mov
mov
rorb
cmp
mov
and
xchg
cli
pop
mov
lret
scas
mov
stos
cmp
mov
in
adc
or
add
fmuls
aaa
imul
cmp
testl
dec
mov
inc
xor
inc
stc
mov
repnz
add
lcall
lret
lahf
push
addr16
aaa
xchg
in
or
xor
js
cmp
fildll
fsubs
pop
lods
cmpsl
imul
rep
stos
push
cmpsb
pop
shrb
lret
pop
inc
nop
xchg
inc
pop
stos
loope
inc
jmp
and
dec
and
insl
ss
or
push
cmp
repnz
out
cmc
xchg
pop
pop
lods
sub
xor
push
scas
cmc
or
lcall
adc
out
jp
test
xchg
stos
popa
in
pop
shrb
mov
out
stos
fbld
and
push
scas
jnp
rorl
test
and
imul
icebp
mov
outsl
xchg
cmpsb
pop
scas
out
fldlg2
or
fists
xchg
and
insb
sbbl
bound
sbb
adc
icebp
inc
mov
cmc
cmpsl
mov
or
inc
testl
push
std
ror
fsubr
outsb
sar
or
jns
in
jbe
je
leave
lods
inc
sub
mov
xchg
incl
ss
dec
faddl
in
mov
sar
frstor
mov
loope
sbb
sub
mov
outsl
dec
dec
sub
je
ja
into
rcrl
int3
inc
cli
sbb
jne
cs
or
mov
and
repz
rcll
aaa
xorl
repz
into
aad
jae
rcr
mov
outsb
xchg
outsl
dec
outsl
lcall
fwait
dec
and
jge
mov
icebp
and
push
jle
and
lock
data16
and
jae
scas
pop
inc
push
and
xchg
cmp
shlb
cmp
imul
jmp
out
xchg
jo
shl
sbb
insl
xchg
loope
mov
mov
add
cmpb
add
fimuls
pop
jmp
jmp
fistl
leave
nop
xchg
pushl
popa
add
add
mov
pop
rcll
lods
lock
hlt
push
push
scas
dec
jl
gs
cmp
lea
xchg
insl
imul
pop
mov
mov
sub
pop
pop
push
ret
test
mov
mov
fidivl
cmp
in
or
in
push
inc
sub
fcmovb
gs
pop
cmp
xchg
push
cmp
cltd
mov
xlat
xchg
packuswb
pop
int
fwait
test
ja
gs
inc
arpl
sbb
cmp
cli
jns
loop
lods
cmc
imul
xchg
fs
pop
xchg
pusha
mov
push
mov
icebp
out
popf
insl
enter
or
pop
ds
sub
adc
daa
lahf
xor
fcoml
ficoml
lock
jmp
nop
mov
nop
add
adc
aas
xchg
sub
and
ljmp
xor
pop
mov
mov
mov
xor
test
les
pop
dec
pushl
fisubl
push
jmp
addr16
sub
cli
mulb
fsubl
fstl
pop
mov
movsl
push
lock
ds
push
lahf
xor
jo
jge
add
xor
rorb
xchg
sub
repnz
mov
insl
mov
push
in
inc
add
pusha
repz
out
add
xor
mov
inc
pop
fiaddl
lahf
add
nop
add
jmp
xchg
xor
pop
push
inc
jge
jg
push
xchg
mov
outsb
add
subb
sahf
int
add
je
mov
cmp
pop
push
mov
dec
dec
ret
movsl
push
daa
and
shll
ss
hlt
xlat
fbstp
mov
cmp
pop
mov
stos
lea
in
jne
int3
or
je
test
push
dec
mov
pop
outsl
fwait
pop
cmc
ret
sbb
in
daa
push
popa
and
idivb
dec
sahf
aam
dec
and
add
jnp
leave
nop
jp
shll
jo
add
adcl
dec
pop
lcall
pusha
push
in
fs
in
imul
pop
inc
sbb
repnz
shll
mov
cli
adc
cmc
dec
repz
jl
setg
adc
jmp
jecxz
pop
cmp
cmp
cli
xchg
rcl
adc
shrb
cmpl
inc
data16
xor
les
lds
ja
mov
fdivl
lahf
adc
sub
ds
xchg
pop
rorb
sarl
jne
sbb
out
lods
xchg
aaa
shrl
int3
adc
stc
test
pop
cmp
call
fcmove
mov
orb
push
call
std
iret
xlat
pop
pop
and
xor
mov
test
xor
cmpl
add
test
inc
rcrl
adc
sbb
or
mov
pop
cmp
test
dec
loope
cmp
cwtl
into
mov
jg
inc
jp
cmpl
adc
xor
in
into
fstl
ds
sub
adc
add
xchg
mov
outsl
repnz
into
ret
dec
add
fwait
mov
ficompl
cli
leave
sarl
jle
sub
lods
dec
fcomps
jecxz
addr16
pusha
sar
inc
rorl
loopne
jecxz
jne
push
leave
xor
loope
je
fsubr
fs
pop
scas
fs
jb
dec
mov
sbb
insl
inc
sub
push
dec
mov
ja
and
dec
cld
sbb
push
pop
out
aaa
inc
jno
sbbl
xchg
int3
scas
xchg
xor
lods
dec
or
hlt
pop
pusha
jl
lock
mov
dec
inc
xor
and
inc
pop
inc
jmp
mov
add
cmpsb
std
popa
mov
daa
loopne
sar
ret
addr16
pusha
popf
iret
jae
mov
outsl
pop
jp
into
xor
jp
xchg
ljmp
loop
leave
je
jecxz
and
sbb
pop
adc
xchg
es
jns
push
daa
idivb
popa
sub
sbb
inc
pop
ja
repz
push
std
gs
shlb
out
lcall
jge
out
jmp
pop
out
cld
pusha
push
mov
incl
cmp
fwait
loopne
jae
scas
adc
cmp
out
lods
jne
cmp
push
pop
cli
and
pop
inc
mov
add
cmc
shlb
hlt
ds
cmp
jp
jnp
ljmp
lds
insl
fwait
push
push
mov
shlb
mull
sub
ret
inc
xchg
enter
negb
dec
jo
jo
sbb
pop
jle
xor
xor
cmp
cmc
in
push
inc
xchg
je
lods
push
ret
daa
push
mov
cwtl
ja
dec
fdivs
nopl
lods
loope
push
xchg
lret
fcomps
lea
adc
sbb
int
roll
mov
dec
inc
mov
mov
mov
out
mov
dec
rol
xlat
push
sub
popf
jb
bound
jae
cmp
mov
stc
nop
fwait
iret
and
cwtl
xchg
xor
aam
and
add
or
sub
jmp
add
in
sub
pop
aaa
rcrb
imul
mov
cmpsl
push
inc
xchg
add
inc
push
mov
sahf
mov
xor
mov
xchg
dec
mov
arpl
fs
or
and
fsub
jmp
push
es
dec
xchg
pushf
or
dec
jmp
cli
int
add
dec
mov
lret
hlt
jne
les
test
lcall
out
out
add
push
lcall
out
fcmovne
fs
mov
push
fwait
arpl
test
nop
inc
loop
cmp
push
fildll
adc
jno
jecxz
fstp
ret
add
xor
stos
push
cmp
pop
jg
subb
or
mov
lea
inc
ds
lods
lds
leave
add
lods
mov
icebp
or
lods
popf
xchg
mov
mov
outsb
lea
pop
and
push
mov
sub
dec
xchg
dec
repz
inc
xchg
dec
mov
mov
or
pop
pop
out
jmp
pusha
stos
out
scas
cltd
pop
mov
dec
in
push
cmp
lods
cmc
movsl
orb
lods
mov
movsb
movsl
sbb
xchg
movsl
cmc
into
mov
call
ja
jl
mov
jge
cmp
mov
mov
dec
sub
push
push
into
imul
int
insb
in
add
loope
aad
in
jnp
jecxz
stos
daa
out
inc
test
sub
and
xchg
jbe
cmp
xor
adc
pop
lods
sbbb
jge
sbbb
outsb
or
cmp
in
ljmp
aad
jno
clc
popf
jl
test
jne
stos
sbb
mov
fistps
xchg
inc
shrb
cli
add
in
cmp
outsb
xor
sub
lcall
mov
inc
push
repnz
inc
hlt
lds
pop
jge
ret
cmp
rorb
in
sub
sub
jg
xor
mov
das
aam
leave
jnp
out
sbb
mov
test
subl
mov
cmp
test
insl
loop
pop
cmpb
fiadds
inc
jb
jne
mov
in
out
or
mov
mov
inc
or
ljmp
cmp
arpl
and
daa
inc
out
outsl
outsl
cwtl
outsl
mov
push
stos
movsb
jno
jbe
stos
aam
and
xchg
xchg
xor
je
loop
and
cli
sub
push
popa
lahf
pushf
jmp
clc
jbe
das
adc
jo
ror
popf
aam
adc
or
fistps
mov
jge
lcall
in
pop
pusha
lahf
push
test
cmpsb
dec
dec
and
std
lock
insl
lock
and
aaa
in
shll
clc
xchg
mov
iret
cltd
std
mov
out
out
pop
andb
leave
push
and
mov
dec
mov
gs
jns
cmp
pop
fs
jle
dec
out
fnstenv
js
jmp
jbe
or
lcall
mov
loopne
stos
in
xchg
dec
scas
xlat
mov
or
adc
mov
mov
outsl
aaa
dec
xor
pop
xor
xchg
cmc
insb
mov
add
cmp
ja
and
add
sub
lcall
es
mov
and
scas
xchg
repnz
pushf
cmp
test
out
test
jno
add
push
popf
cmpsb
ja
cmp
sub
lods
push
pop
pop
cmp
mov
cmp
jge
cmp
jg
mov
imul
or
lret
aad
repz
outsb
xor
dec
pop
pop
mov
mov
movzwl
jnp
push
out
mov
mov
jl
getsec
cmp
in
pop
mov
cmc
xchg
dec
xchg
cmpsl
sub
enter
jge
and
fnstsw
mov
pop
inc
xchg
xchg
xchg
aad
inc
or
repz
stos
adc
cvtdq2ps
fs
push
adc
jle
cmp
xchg
bnd
popa
mov
scas
shlb
jmp
xor
out
xchg
cmp
mov
cmp
jne
lock
int
xor
sbb
lret
lods
fistps
add
das
out
inc
lahf
fwait
push
popa
sti
in
in
adc
repnz
mov
je
inc
stos
fldl
sbb
mov
mov
add
sbb
push
xor
adc
adc
mov
lcall
jne
ret
mov
pop
jbe
outsl
cmc
es
fs
icebp
aam
icebp
inc
pop
mov
sub
sbb
fucomi
mov
adc
adc
je
mov
test
sbb
xor
clc
add
repnz
mov
lock
inc
into
sub
mov
sub
pop
mov
xor
xor
jns
sub
mov
jne
dec
push
jb
xchg
pop
xor
insl
and
movb
loope
aad
fwait
xchg
subb
fucomp
call
jl
into
xlat
jge
xchg
inc
inc
add
pop
je
cmc
daa
icebp
adc
leave
jns
ja
scas
mov
in
mov
aaa
dec
aaa
pop
cmpsb
push
push
std
xor
fistpll
int3
xchg
mov
inc
xchg
sbb
cmpsl
mulb
fistps
jns
jns
mov
cwtl
mov
mov
rolb
pop
andl
pop
mov
shll
adc
add
xchg
mov
hlt
out
xor
and
in
sub
movsb
push
shrl
movsl
or
push
daa
inc
enter
xor
cmpsb
inc
mov
shrl
lahf
jle
fists
mov
mov
mov
outsl
out
daa
das
mov
push
sbb
int3
and
mov
cltd
scas
aas
mov
pop
repnz
idiv
adc
ja
cwtl
in
scas
je
push
lods
adc
fstpt
mov
sti
gs
xchg
ret
icebp
jp
adc
adc
jle
jecxz
shlb
daa
push
jb
rorb
or
decb
cmpsb
adc
nop
xchg
mov
push
jnp
shll
out
test
add
cs
pop
jg
jb
clc
loope
xor
imul
js
lds
gs
xchg
cwtl
aam
xor
dec
sub
insb
add
sbb
fbld
jo
imull
mov
sbb
push
pop
std
adc
xchg
sbb
inc
xchg
mov
dec
push
push
pop
dec
adc
lds
mov
mov
push
imul
andb
frstor
filds
mov
ljmp
aas
ss
imulb
stos
loop
sahf
pop
inc
mov
ss
dec
adc
pop
out
inc
dec
and
fs
ret
mov
dec
push
repz
fisubrl
jecxz
aam
pop
cmpsb
jmp
dec
cmp
adc
push
testl
into
push
and
fnstenv
cmp
or
mov
pop
rcll
inc
mov
xor
cmc
int3
mov
aam
jb
fdivr
add
fcoms
push
jl
and
push
mov
jp
lea
cmc
inc
in
dec
cmp
add
xlat
dec
and
push
add
or
out
pop
cmpsl
fldenv
mov
pusha
sbb
stc
lock
xchg
push
inc
pusha
dec
sub
negb
lahf
jo
cmp
lods
in
aaa
mov
push
loop
je
push
cmp
insb
bound
and
je
aam
fsts
in
add
jmp
addr16
inc
push
imul
movsl
xor
and
sbb
pop
movsl
cmp
inc
stc
dec
aaa
js
or
add
addb
repnz
sub
sbb
flds
insb
mov
imul
jle
push
cmp
adcl
jp
sub
pushf
cmp
cmp
mov
cwtl
cmp
mov
shrb
xor
lcall
sub
mov
cmpsb
out
mov
fs
mov
jmp
adc
xchg
js
xor
cmpsb
imul
sub
jae
jl
lods
add
inc
and
jp
xlat
push
mov
sub
insb
fldl
xchg
jne
insl
mov
fisubs
lods
or
scas
xorb
mov
jns
cli
mov
cli
sub
sbb
outsl
or
lock
inc
popf
les
hlt
pushf
ret
test
bound
sbb
shl
sub
pop
jae
test
outsb
push
mov
outsl
testb
mov
outsb
mov
aad
mov
push
loopew
stos
or
aas
xor
gs
addr16
cmpsl
sub
pop
jne
std
int
mov
jno
push
popf
or
clc
in
mov
pop
push
fcmovnu
push
lret
pop
nop
xor
dec
sub
jecxz
mov
and
adc
jb
pop
push
jp
popa
push
mov
int3
stos
scas
mov
icebp
jl
push
lret
mov
ror
idivl
push
sub
push
mov
add
cmpsb
fs
mov
xor
xor
inc
inc
movsb
dec
loopne
jl
loopne
pushf
insl
cltd
nop
xchg
rcrb
sub
imul
movsl
push
inc
test
sbb
and
jnp
mov
pop
out
scas
cmc
fistpl
pop
aas
pop
cmpsl
mov
push
cmpsb
inc
jbe
out
sub
jmp
rcrl
adc
lods
das
mov
mov
jb
fmuls
aam
jmp
sub
shrl
stos
cmpsb
ret
pop
je
mov
or
xchg
jnp
add
in
inc
mov
das
stos
cmpl
push
es
mov
xchg
lret
fs
fsubp
jno
out
inc
xor
mov
mov
out
das
cmp
pop
fcmovb
shlb
cmpsb
push
jo
sbb
push
dec
imul
sarl
adc
stos
pop
mov
inc
jmp
in
jns
jns
orb
int
inc
stos
sbbb
popf
mov
push
or
adc
fs
scas
js
call
sbb
jno
cmp
out
fwait
push
mov
aad
mov
sahf
xor
test
adc
dec
into
data16
dec
inc
push
xor
das
loop
xor
jmp
mov
pop
movsb
fwait
scas
imul
xchg
pop
cwtl
cltd
out
insl
lcall
sub
outsb
inc
stos
sbb
out
push
add
pusha
addr16
subl
push
cld
adc
jmp
mov
loopne
cltd
mov
pop
push
or
dec
testb
xchg
pop
or
es
cmpsb
adc
outsb
jae
jne
jne
dec
gs
xchg
mov
pop
push
enter
pushf
mov
sti
add
push
fisubs
xlat
lea
popf
xchg
imul
and
mov
andb
sub
add
push
sbb
inc
cwtl
mov
mov
cmp
pop
aas
hlt
mov
fmull
arpl
call
add
test
sti
into
adc
mov
jnp
adc
ds
int3
rclb
aaa
negb
push
ror
push
xchg
repz
cmpsb
fidivrs
xor
add
mov
sub
adc
push
insl
stos
dec
out
shll
rcl
push
xchg
sar
call
in
shr
mov
pop
dec
das
xchg
repz
jge
lcall
int
in
popf
pop
mov
int3
movsb
test
lahf
inc
aas
out
fnsave
dec
push
sbb
cld
or
insb
push
pop
iret
lods
sub
inc
sub
je
jne
sbb
ss
das
mov
or
xchg
or
cs
and
push
mov
mov
mov
or
mov
and
lret
sti
jmp
mov
mov
mov
pop
pop
mov
daa
push
sti
repz
mov
push
pop
out
outsb
dec
sub
lea
das
in
in
stos
aad
xchg
dec
inc
cmpsl
lcall
scas
push
ss
cwtl
movsl
loope
shrb
pusha
sarb
imul
pushf
shlb
xor
add
mov
fistl
lock
mov
jae
or
jo
stos
inc
lahf
xchg
in
or
and
dec
mov
push
scas
loopne
repz
jno
sahf
push
les
add
push
adc
inc
cs
jle
std
bound
mov
inc
xchg
shlb
add
sarb
fwait
xor
jo
addr16
adc
sarb
aad
dec
jmp
mov
pop
in
push
cli
lcall
mov
insl
push
mov
call
repnz
movsl
xchg
popf
sbb
loope
add
cmp
push
lods
ret
into
hlt
mov
xchg
jb
xor
mov
cmp
mov
lds
inc
sti
push
push
repz
clc
testl
insb
mov
cmp
test
sbb
lods
mov
adcb
imul
data16
lock
test
outsb
jmp
out
nop
xrelease
test
inc
clc
pop
arpl
mov
push
mov
and
jl
and
cld
es
pushf
and
repz
cmc
sbbl
push
or
dec
adc
add
faddl
loop
int3
call
lret
pop
push
and
test
test
mov
clc
pop
into
cld
inc
jno
sbb
xlat
jl
mov
and
fidivs
dec
js
and
andl
jp
lods
scas
stos
jns
sahf
jo
cli
sbb
popf
int
cli
sbb
scas
jle
inc
and
push
pushf
mov
fcmovnbe
xchg
jne
loopne
cmp
sub
lcall
xor
jle
test
clc
ret
jge
shr
mov
push
outsl
outsl
sbb
cmp
push
ds
cltd
roll
inc
xor
not
add
ja
stos
icebp
les
push
mov
inc
mov
sar
push
lahf
xchg
dec
cmp
jae
jb
aam
dec
cli
cmp
pushf
adc
scas
push
cmpsb
inc
pop
dec
mov
sub
out
cwtl
xchg
jge
mov
add
push
add
mov
and
mov
sbbl
leave
loopne
je
icebp
cmp
dec
fistps
sbb
outsl
dec
pop
mov
test
lds
adc
cmp
imull
aam
icebp
test
mov
bnd
xchg
test
cmp
sub
seta
sti
lahf
rcll
mov
idivl
push
dec
ret
call
test
jmp
cli
outsl
arpl
ret
xor
sbb
pop
jnp
div
jecxz
add
jg
loopne
mov
stos
xorb
xchg
dec
aaa
out
aad
and
ret
mov
loope
jecxz
push
cmp
jge
jle
and
lds
sbb
adc
xor
out
pop
fmuls
mov
pushf
push
xchg
jecxz
mov
fadd
js
dec
or
negb
inc
scas
push
testb
mov
cmp
cmpsl
pop
movsb
xor
test
and
ret
adc
insl
add
cld
lahf
clc
xorl
mov
jb
hlt
lret
xchg
lds
test
and
inc
cmp
fstps
jl
xor
and
cwtl
data16
xor
std
les
loop
int
clc
mov
in
test
push
push
shr
push
out
push
cmpsl
int
les
push
xchg
mov
push
xor
js
divb
fidivrl
mov
movsl
or
xor
mov
and
addb
popf
pop
mov
and
push
lcall
add
or
das
xor
lods
and
xchg
mov
jno
push
cs
gs
and
movl
xchg
fildll
adcl
fsubr
repnz
mov
in
aaa
push
stc
jae
roll
xchg
das
jbe
loopne
aad
imul
and
inc
pop
jge
adc
insl
and
in
xor
mov
xor
pop
sbb
mov
rcrb
pop
ja
mov
pop
dec
loopne
jns
aam
imul
inc
jno
cs
jae
adc
fiadds
push
stc
xchg
insl
scas
clc
push
es
in
xchg
xchg
es
xchg
mov
je
sub
jns
mov
test
dec
xchg
jb
ja
std
push
sub
xor
cwtl
lock
xor
in
pop
jg
lret
sub
or
xor
dec
push
xlat
or
gs
cmpsl
pop
xlat
test
sarb
icebp
push
pop
fwait
int
add
les
fdivs
xchg
test
test
mov
lods
fnsave
push
xorl
shl
push
mov
or
fisubrs
mov
aaa
cli
mov
sub
fs
add
jmp
fnstcw
loop
xor
or
mov
cld
xor
and
in
pop
fndisi(8087
out
lahf
cmovnp
in
insb
cmpsb
fists
pop
test
in
and
cmpsl
js
arpl
cmp
scas
xchg
test
sub
cmp
lret
outsb
jmp
push
push
add
jge
jge
push
mov
imul
xor
stos
in
cwtl
test
mov
addl
out
cld
pushf
inc
sbb
mov
push
loop
pop
mov
jno
xchg
xchg
jp
insb
sub
cmp
or
mov
mov
fnstcw
dec
fldcw
bound
pop
mov
jge
pop
es
andb
ja
fwait
push
repnz
and
or
ja
imul
lahf
sub
and
shrb
sbb
pop
scas
mov
test
add
sahf
ficoml
imul
xchg
repz
scas
sub
js
jle
test
pop
fisubs
or
or
push
adc
pop
and
imul
lds
mov
in
test
and
daa
mov
pop
jg
test
outsl
push
stos
ret
in
stos
pusha
popf
mov
pushf
jnp
push
cs
ja
or
pop
xchg
je
jns
mov
jbe
cli
inc
je
push
mov
mov
imul
shrb
fidivrl
cmp
scas
push
out
cs
js
adc
lods
sbb
out
cmc
inc
jg
inc
mov
cmp
test
fisubrl
aaa
fsubs
push
cltd
xchg
sbb
jg
adc
icebp
scas
xor
adc
push
pop
xchg
pop
push
lea
es
dec
arpl
lock
mov
jecxz
cmp
clc
fcompl
inc
pushf
cmp
inc
popa
mov
ds
ljmp
cli
or
data16
mov
dec
xchg
fimuls
add
cmp
inc
push
sub
and
nop
xchg
pop
cli
push
add
adc
mov
jne
ja
shll
sahf
cmc
push
push
ret
sti
mov
test
inc
pop
je
nop
push
xchg
jmp
add
or
sub
iret
push
mov
adc
out
std
mov
faddl
fcmovbe
cltd
cmp
jno
bswap
lret
roll
sahf
ljmp
add
sar
repnz
movsb
ss
lret
pop
xchg
sub
inc
and
xor
jo
fildll
mov
jecxz
ficompl
mov
mov
pop
jle
add
mov
insw
xchg
js
push
inc
jae
add
aam
addr16
sbb
ljmp
in
cld
push
inc
xor
or
add
push
sahf
pusha
lret
cmp
icebp
fwait
xchg
nop
push
jecxz
icebp
hlt
cmp
gs
cli
shlb
jno
and
fimuls
xchg
in
iret
and
sbbb
in
push
adc
addr16
iret
mov
sub
mov
sti
adc
cmp
inc
int3
xchg
add
xor
loopne
cmp
xchg
cmp
ret
cmpsl
xor
stos
gs
pop
inc
test
repnz
sub
xchg
dec
sub
mov
mov
repz
ljmp
adc
icebp
and
test
pop
movsb
jno
xchg
jno
addr16
jb
mov
xchg
mov
in
out
call
fsubl
dec
mov
fdivr
filds
stc
in
imul
stc
mov
pop
cmp
sbb
mov
xlat
fisubs
pop
subl
ds
mov
push
loopne
lods
mov
mov
dec
int
sub
or
jge
sbb
loopne
sbb
enter
lahf
scas
jb
test
dec
rcll
sbb
addb
sarl
movsb
rolb
shrl
ss
push
lods
test
enter
movsb
stos
orl
loop
fistpl
fisubl
les
jg
pop
jle
mov
and
dec
jne
lea
mov
or
mov
pop
cmc
mov
stos
and
inc
insb
cs
inc
push
sub
pop
negb
jae
mov
fistps
movsl
xchg
xchg
ljmp
and
lcall
pop
xchg
repnz
jge
arpl
data16
push
pop
ss
xor
mov
xchg
addb
or
pop
adc
fisubl
in
cmp
xor
sbb
test
sahf
and
ljmp
lock
pusha
imul
sbb
stos
test
inc
rorb
enter
mov
cld
push
and
jmp
cmpsb
test
repnz
adc
repnz
clc
jp
sarb
loopne
push
les
or
ss
test
insb
movsl
adc
cwtl
decb
mov
or
adc
lea
push
pop
sbb
pop
sub
adcb
stc
xchg
push
mov
mov
cwtl
and
and
fcompl
scas
sbb
or
stc
out
mov
das
div
cmovs
or
adc
idivl
jecxz
add
mov
das
loop
dec
dec
pop
jb
sub
jne
bound
fmul
aaa
add
cmpsl
mov
and
inc
enter
popa
xor
jg
ret
mov
add
int
lods
bsr
frstor
xor
in
pop
push
repz
cmpsb
ljmp
pop
dec
mov
repnz
sbb
xor
mov
idivl
mov
filds
or
clc
mov
nop
push
sti
inc
shr
pop
rep
jne
std
out
psrlq
pop
fdivrl
mov
in
clc
cld
pushf
aad
xchg
orl
je
subb
incb
repz
push
outsb
cmp
sbb
and
pop
loopne
xor
ja
sub
ss
cltd
cltd
ror
insl
dec
or
xchg
jecxz
push
push
pushl
adc
adc
mov
out
mov
mov
add
inc
arpl
in
test
jle
out
adc
jns
push
mov
pushf
sub
mov
cld
fdivrs
repnz
dec
hlt
mov
call
sub
jo
dec
mov
jecxz
arpl
in
or
arpl
sbb
push
mov
mov
adc
mov
jge
mov
stc
insl
cmp
pop
popf
fiaddl
out
leave
pusha
mov
mov
ret
add
jle
test
xor
xchg
repz
pusha
mov
ss
insl
xrelease
cmpsl
iret
mov
xchg
dec
popf
xchg
cld
xlat
test
mov
cltd
popf
into
lret
push
push
loopne
xor
mov
in
jl
or
mov
lahf
not
aad
xorl
sbb
xor
or
inc
push
jg
imul
loopne
lret
sarb
ret
js
inc
out
mov
cld
push
push
leave
imul
jge
repz
push
pop
jae
or
pop
out
xchg
push
dec
inc
in
insl
xorl
aaa
mov
mov
push
subb
iret
cwtl
stc
cli
push
mov
jae
add
mov
dec
data16
repnz
fiaddl
insl
xorl
js
dec
ficoms
ljmp
rolb
dec
icebp
dec
pop
insb
pop
out
cwtl
xor
push
mov
mov
lods
lret
test
shlb
in
and
or
testb
mov
repz
dec
mov
out
sahf
aad
clc
popa
cld
aas
addr16
and
adc
push
mov
sti
sbb
dec
test
cwtl
and
imul
movsl
jge
in
push
dec
and
xlat
fldcw
push
cli
cmp
outsb
jl
adcb
pop
xor
fisubs
loop
in
arpl
or
push
xor
pminub
sahf
daa
pop
aad
es
rorb
pop
out
and
aaa
xor
sbb
sub
lcall
idiv
pop
roll
adc
inc
sbb
notl
inc
jmp
inc
xchg
xor
inc
sbb
pop
xor
add
into
iret
dec
fmuls
dec
mov
mov
stos
mov
pop
movsl
in
or
sub
push
inc
add
sbb
aad
mov
movl
cmpl
xchg
ret
fbstp
pop
xchg
jo
addr16
je
jb
loopne
js
nop
adc
dec
dec
xchg
inc
test
ss
push
andb
ljmp
loopne
dec
xor
inc
cmp
or
sub
push
aam
add
mov
mov
dec
mov
adc
sub
mov
inc
inc
jg
sub
pop
imul
xchg
fstps
mov
add
sub
or
outsb
push
aam
and
dec
cwtl
leave
mov
mov
insl
sub
cld
in
rcl
or
addb
push
adc
loop
jp
pop
aad
adc
lods
mov
pop
adc
fwait
xchg
inc
mov
add
pop
xor
call
leave
mov
lcall
xor
leave
xchg
adc
daa
fsubrs
aam
jne
enter
repnz
mov
out
cmp
push
jbe
ret
shlb
inc
push
dec
xor
imul
lds
and
sbb
aaa
cwtl
lock
push
outsb
pop
inc
out
outsb
repnz
decb
push
mov
insb
xchg
shlb
lahf
ja
pop
push
les
push
mov
sbb
lahf
sub
loopne
pop
movsl
daa
sub
dec
rcll
pop
push
inc
loop
ss
add
in
addr16
iret
dec
jne
xor
std
daa
repnz
mov
pop
ljmp
jmp
mov
insl
ljmp
pop
shr
add
out
lahf
inc
out
mov
pop
js
sub
sbb
adc
in
je
fst
pop
jb
test
je,pn
add
loop
cli
adc
out
jp
flds
dec
repnz
mov
mov
lret
xor
in
cld
pusha
ret
aaa
imul
fidivrs
cld
in
insb
inc
adc
std
pop
mov
jle
insl
in
mov
cmc
fisttps
sbb
xchg
stos
push
test
mov
mov
mov
pop
into
push
movsl
and
movsb
and
aas
bound
fisubl
pop
jle
or
jns
xchg
in
lds
aad
or
inc
pop
dec
cwtl
fldl
in
add
out
mov
into
or
out
lcall
push
xor
pop
inc
inc
cmp
mov
leave
adc
adc
pop
cmp
lret
pop
pandn
xchg
jmp
dec
jnp
call
sub
adc
in
ljmp
mov
push
gs
xor
pop
or
jo
or
sub
ljmp
pop
or
test
inc
mov
cwtl
xorb
jle
push
cmpsb
pop
jo
mov
and
sbb
lds
pop
popa
mov
jge
test
sarl
cltd
std
addr16
rcll
loopne
xchg
aad
lret
rclb
in
sub
fsubp
xchg
pop
mov
inc
ucomiss
xor
or
arpl
push
leave
xor
or
int
aam
leave
adc
lcall
jmp
test
push
mov
add
cmp
mov
sbb
add
movsb
and
add
bound
push
adc
pop
and
fucomip
push
test
cmp
xchg
out
jae
mull
lret
cwtl
iret
sbb
out
pop
add
insb
sbb
cli
fwait
aas
sbb
mov
cmp
daa
jno
gs
sub
jb
sbb
leave
loop
lahf
ja
movsb
push
fucomi
push
insb
hlt
faddl
in
scas
cwtl
mov
popf
pop
cmp
add
push
adc
inc
pusha
cli
enter
xor
mov
jne
int3
dec
sub
push
jno
lods
insl
jns
dec
mov
ljmp
sahf
and
rep
or
iret
cmpl
ret
xchg
imul
sbb
cltd
outsl
rcr
add
mov
cmp
and
dec
outsb
push
mov
hlt
loope,pn
lret
imul
push
arpl
and
sub
or
sahf
push
mov
xor
add
test
mov
scas
mov
icebp
test
imul
inc
push
add
xor
inc
inc
test
jbe
lea
xchg
das
pop
add
mov
pushf
dec
and
insb
sbb
cli
mov
inc
aaa
sti
sbb
mov
cwtl
test
sbb
jo
adc
pop
clc
mov
iret
sbb
ja
push
mov
dec
mov
lods
pop
outsl
data16
pushf
pop
mov
and
test
decl
and
cmpsl
daa
movsb
or
lea
pop
fisubl
pop
sbb
pop
cmc
rclb
mov
aad
bound
pop
inc
xor
stos
fdivs
int
mov
ljmp
dec
popa
hlt
and
pop
and
mov
or
js
sub
mov
push
add
movsb
rcrb
xchg
sub
lcall
lcall
stc
int3
call
cmp
mov
add
imul
push
mov
loopne
cmc
int3
add
shll
leave
fldl
js
lret
push
insb
lods
loopne
and
mov
cwtl
and
mov
cmp
or
xchg
mov
xor
cltd
mov
imul
cmp
xchg
xor
scas
fists
arpl
loop
add
cmpb
jns
dec
iret
fldl
lds
or
imulb
cmp
out
dec
inc
xchg
dec
cmpsl
lods
dec
ds
fsubs
movsl
pushf
inc
mov
jmp
fld
imul
pop
insl
xor
sbb
cltd
lods
push
lods
mov
xor
pop
mov
push
pop
dec
jo
pop
loope
aaa
cwtl
arpl
nop
xchg
mov
popf
inc
dec
bound
and
push
jmp
and
mov
inc
push
outsb
dec
sti
pusha
imul
in
iret
mov
sbb
pushf
cmpsl
or
sahf
pop
jg
mov
aad
test
dec
clc
jbe
pop
mov
loope
testl
cli
cld
mov
mov
repnz
xchg
loope
adc
dec
outsl
jl
push
shlb
mov
and
jle
notl
jge
insb
jl
icebp
jae
pop
je
out
and
add
sub
mov
dec
push
dec
pop
jae
fisttpll
push
cld
pop
cmp
xlat
mov
sti
jl
cmp
icebp
stc
jmp
dec
sub
aas
sub
push
loope
insl
pop
xor
add
push
std
daa
jmp
in
inc
or
aas
sbb
push
lock
pop
loopne
into
fstpt
dec
packssdw
lret
repz
aas
fucomip
pop
add
sub
js
mov
fwait
inc
sbbb
push
daa
xorl
or
test
js
pop
in
hlt
cmp
ds
cld
in
xchg
fs
push
xor
jae
idivl
xchg
inc
pop
in
xor
mov
push
xor
movsl
xchg
inc
sbb
push
add
insb
sti
xor
stc
aad
out
cmpsl
sub
in
fisttpl
add
dec
addps
outsl
frndint
adc
arpl
and
jg
jp
fldenv
adc
das
pushf
movsb
stos
out
pushw
and
cmpsl
xchg
aam
and
test
inc
loop
xor
and
dec
movl
and
scas
pop
dec
pop
test
mov
and
pop
out
push
enter
dec
enter
mov
jmp
mov
decb
mull
insl
popf
pop
out
dec
repnz
mov
mov
les
xor
cmpsl
stos
into
popa
aam
cmpl
dec
sbb
and
jno
pop
sub
xor
lea
inc
cmpsb
mov
push
outsb
movsb
pop
aad
jno
dec
cmc
pop
lds
ss
xchg
cltd
call
lret
mov
js
push
cmpsb
xchg
call
jno
in
add
dec
mov
stos
inc
mov
mov
cmp
xchg
scas
faddp
ret
cltd
hlt
push
mov
loope
repz
lret
ss
loop
and
mov
jle
adc
jo
xor
pop
inc
out
scas
test
dec
lahf
lret
sbb
jg
ljmp
repnz
jo
add
add
sbb
push
inc
pop
push
ds
inc
fwait
sub
sbb
mov
insb
push
jbe
mov
pusha
sti
lods
inc
pusha
jl
push
out
movsb
fmuls
mov
pop
or
mov
mov
ret
mov
fwait
push
scas
lcall
sbb
data16
or
sbb
scas
subl
pop
pop
adc
insb
test
push
addr16
lds
ja
mov
mov
jp
mov
mov
aas
dec
mov
dec
mov
nop
add
fs
mov
pop
arpl
or
into
mov
inc
push
mov
adc
mov
sub
lcall
lea
rcll
test
xchg
cwtl
adc
sbb
dec
in
push
orl
pop
xchg
dec
pop
hlt
leave
fdivrl
scas
ss
jnp
sbb
pop
mov
shlb
pop
mov
test
mov
rcrb
mov
push
jge
xchg
push
into
xchg
psrad
lods
push
setl
and
in
adc
xchg
mov
outsb
enter
incl
push
and
sub
cmpb
jmp
imull
pop
push
bound
inc
mov
les
vmovaps
adc
pushf
mov
popf
mov
add
dec
testl
orl
outsb
shrb
ret
jmp
stc
sbbb
cmpsl
adc
mov
inc
and
gs
sbb
jp
aam
xchg
in
or
clc
mov
rcrb
aas
pop
dec
pop
cmpsl
ret
in
imul
data16
lcall
sub
les
xor
aaa
and
mov
andb
popf
jnp
fildl
sbb
jle
out
and
pop
std
jle
or
push
clc
loope
fwait
or
mov
sti
sub
jl
xchg
adc
cmp
out
xor
push
rorl
pop
in
ret
mov
push
jp
pop
fmul
hlt
sahf
dec
les
inc
jl
push
aad
insl
adc
mov
jl
adc
rcll
addl
pop
adc
sub
cmpsb
mov
test
mov
inc
inc
mov
fsts
sub
sbb
lahf
fwait
cmpsb
xchg
push
push
test
and
aas
jp
cmpsb
push
add
inc
add
mov
imul
xor
call
jbe
mov
stos
fisubs
test
sbb
lods
neg
push
sub
sub
xchg
test
repnz
xor
push
mov
movsb
mov
dec
xchg
sub
stc
sub
mov
mov
addr16
test
dec
out
dec
xchg
adc
mov
cmp
dec
test
fwait
or
jae
push
jp
fsubp
inc
stos
or
jmp
jl
enter
and
icebp
and
loope
aad
cmpl
test
jns
push
or
mov
xor
pop
lea
ror
fcmovne
pop
mov
call
repnz
repnz
fs
sbb
xchg
cmpsl
in
jo,pn
xchg
in
jns
mov
leave
mov
ja
or
mov
gs
push
adc
in
lock
mov
push
adc
mov
jb
mov
test
push
repnz
pop
aam
faddl
push
enter
add
sbb
rcl
test
rol
dec
addr16
in
mov
cmp
cmp
and
sbb
xchg
clc
out
cwtl
mov
hlt
ds
cmp
in
mov
shll
xor
int
cmpsb
inc
and
xchg
arpl
shl
rorl
and
jge
les
lds
into
and
loope
xor
sbbb
insb
ret
scas
xchg
inc
in
mov
int3
sbb
jmp
mov
inc
pop
fiadds
sbb
add
inc
cmc
sub
cmp
es
das
mov
and
mov
sarb
pusha
out
add
adc
push
sahf
lds
mov
into
movsb
loope
test
mov
cmp
sbb
add
addr16
add
or
ss
mov
fiadds
mov
mov
ljmp
sub
xor
sahf
icebp
pop
cmp
push
aas
test
daa
dec
dec
or
out
inc
pop
mov
popa
mov
xor
mov
and
add
fnstcw
or
call
aam
scas
leave
out
sub
inc
call
scas
push
xor
adcb
pop
movsb
movsb
and
xchg
sahf
fdivrl
push
pop
lea
pop
hlt
xor
dec
jg
enter
test
or
push
enter
mov
inc
inc
mov
and
add
or
mov
sti
dec
pop
jbe
cmpb
jno
mov
mov
fdivl
repnz
cmp
mov
fsubr
cmc
inc
inc
xor
pop
xchg
out
sahf
fwait
push
test
pop
cmp
push
loope
dec
std
sub
lea
dec
lods
cs
sbb
jecxz
xchg
jle
push
add
ljmp
inc
xchg
and
inc
shrb
cmp
stos
movsb
mov
pop
pop
push
lcall
nop
adc
mov
cmpsb
mov
and
sbb
fcmovb
fisubrl
loop
test
mov
out
xchg
dec
xor
mov
pop
addr16
pop
sub
push
call
aam
into
sub
scas
lret
sub
and
mov
pop
mov
loope
sub
ja
mov
fdivrs
sahf
add
cs
cmpsl
bound
test
scas
or
fldpi
or
pop
setne
sub
lods
loopne
jle
stos
pop
dec
sub
or
dec
or
insb
mov
mov
mov
jo
iret
fadd
mov
fwait
push
enter
push
xchg
in
push
push
mov
pop
sbb
cld
mov
mov
hlt
cli
sti
sub
fildl
jb
out
shr
pop
movsb
divl
lcall
in
mov
in
mov
or
test
fidivl
in
mov
cmp
out
out
stc
inc
xchg
xchg
mov
and
fbstp
jb
stos
adc
dec
rcll
adc
push
addr16
pop
loope
mov
icebp
cmp
test
jnp
das
in
mov
pop
and
or
cmpsl
pop
movsl
cmpsb
pop
sbb
incb
pop
cmp
insb
mov
sbb
je
shl
pop
cmp
icebp
lret
pushf
iret
in
cmc
loop
add
push
fwait
add
jb
pop
xchg
out
fsub
mov
mov
stc
mov
sti
xor
mov
lcall
xlat
xor
popa
push
iret
ss
fdivl
data16
fwait
push
mov
loopne
movsl
mov
out
push
in
jb
int3
in
xchg
fwait
lds
cltd
mov
jp
cwtl
pop
imul
out
add
lods
push
out
add
and
xchg
push
adc
xchg
js
push
cmp
pop
cmp
dec
xor
push
or
sub
dec
out
fnstenv
ja
mov
dec
xor
cmp
fstpl
adc
dec
adc
ficoms
jl
jg
flds
xchg
or
test
movsb
les
push
out
cmp
cmpsb
push
jl
mov
cmp
popa
mov
adc
ret
aas
mov
inc
xor
shll
or
adc
icebp
addr16
mov
push
jne
dec
fwait
out
and
call
iret
pop
lds
shrb
sarl
cmp
sub
sbb
popa
jns
arpl
jg
pop
imul
and
cltd
adc
xor
jmp
arpl
dec
add
sti
icebp
pusha
int
xchg
rol
int3
bound
mov
loop
sbb
cwtl
ss
dec
shrb
sbb
fildl
out
adc
std
push
or
shl
icebp
cs
out
loop
loopne
sarb
mov
or
mov
jl
out
fs
adc
mov
clc
enter
and
mov
fbstp
nop
pop
decb
fs
dec
les
popa
push
mov
movsb
flds
sahf
push
push
xchg
sti
push
int3
scas
push
loopne
es
push
arpl
movsb
xchg
scas
push
inc
sbb
mov
jno
imul
ret
mov
mov
xchg
xchg
lcall
lods
test
pop
push
cmp
in
xlat
xchg
emms
data16
mov
push
fdivr
fists
ds
fildll
pop
pop
xchg
cmp
xchg
or
cld
adc
xchg
dec
push
popa
mov
fdiv
mov
out
stos
add
pop
add
xchg
mov
enter
jns
pop
adc
pop
pop
or
cli
dec
addl
je
jl
repz
subl
xchg
push
outsb
out
stc
insb
lods
loop
pcmpgtb
and
je
sub
mov
cld
fdivrl
inc
add
in
cmc
fimull
pop
loope
rcrb
imull
push
ds
daa
cwtl
test
dec
lahf
test
inc
push
xlat
insb
aad
mov
xor
lock
mov
aad
lock
xor
inc
xchg
bound
push
std
mov
sbb
mov
shlb
sub
mov
mov
pop
push
movsb
push
out
cld
jmp
jmp
rcrl
out
mov
dec
xchg
adc
sbb
cmpsl
mov
mov
pop
gs
sahf
gs
mov
and
test
pusha
push
sti
mov
push
test
pop
addr16
mov
jmp
pop
dec
add
fidivl
jle
mov
or
or
rcrb
mov
mov
push
std
ret
pop
sbb
push
or
fcompl
nop
es
mov
ffreep
or
minps
test
or
push
mov
inc
cmovo
insb
add
pop
imull
inc
jl
je
xchg
cmp
adc
xchg
sbb
dec
sub
fwait
push
dec
and
popl
jle
sub
and
sbb
cmp
dec
sub
mov
sub
lods
push
cmc
pop
movsl
stc
ret
je
jmp
fdiv
scas
out
or
sub
stc
dec
mov
xchg
fdivrl
add
outsb
mov
hlt
fcompl
dec
jae
cwtl
mov
cmp
shlb
and
mov
cli
cmpl
mov
pop
cmp
pop
sbb
in
inc
std
rorb
jae
hlt
iret
jg
mov
pop
mov
push
imul
punpcklbw
mov
shrl
sub
jbe
push
push
pop
pop
ret
shlb
std
inc
pop
xchg
xlat
adcl
xor
inc
int3
push
std
or
mov
or
leave
adc
or
nop
das
mov
mov
popa
pop
mov
mov
jecxz
movsl
mov
test
push
sub
sub
jnp
add
dec
or
leave
cmp
out
jmp
push
sub
div
xlat
dec
nop
or
mov
mov
add
mov
call
adc
pop
cli
push
mov
test
jg
out
pop
jge
mov
push
popf
or
mov
add
ficompl
std
shrb
add
jns
dec
adc
jge
into
dec
fists
jg
xor
cli
inc
sbb
in
dec
fdivs
mov
mov
dec
dec
inc
out
jnp
xor
ret
insb
push
or
lret
dec
jge
pop
outsb
push
dec
lds
ficomps
enter
out
and
jnp
push
xor
xor
adc
cld
push
dec
and
xor
push
inc
nop
mov
ss
dec
in
cmpb
adc
out
mov
fcomp
xor
fdiv
jle
cmp
dec
push
lret
in
pop
adc
jns
cwtl
fsub
rclb
or
clc
pusha
imul
inc
ret
push
fstl
cmp
mov
das
xchg
cmp
pop
loopnew
push
xchg
cmp
scas
cli
fisttpll
xchg
test
jno
aas
loope
cld
lcall
aam
push
mov
mov
sti
mov
xchg
sbb
and
orb
pop
mov
push
aas
mov
nop
mov
jmp
shlb
pushf
into
lcall
add
push
adc
cmc
jns
imul
daa
dec
das
cli
push
dec
push
pusha
xorl
incl
out
call
mov
loope
int
xchg
jp
ds
jne
mov
and
lock
adc
push
mov
scas
pop
xchg
cmp
push
icebp
adc
adc
or
dec
ljmp
xlat
test
mov
cld
fidivrs
js
xchg
mov
cmc
stos
push
mov
jbe
dec
stos
cmp
pop
and
xor
cmpsb
mov
imul
and
iret
xchg
pop
xchg
mov
fs
xor
frstor
push
incl
mov
and
xor
cmc
mov
sub
fists
insb
sbb
mov
idivl
leave
pop
fimull
and
cmpsl
cmpsb
xor
mov
rorl
sbb
bound
adc
orb
je
fldt
out
adcb
aam
aas
jge
jns
fisubrl
loop
notl
inc
cld
xchg
pusha
daa
mov
xchg
mov
jnp
ficompl
mov
loop
mov
imul
sbb
jo
xor
daa
jmp
add
xchg
sub
loope
push
and
sub
pusha
jecxz
jmp
enter
mov
fs
lret
cmovge
mov
daa
or
dec
add
insl
lods
hlt
cmp
cmp
jae
or
out
push
mov
test
xchg
xor
jmp
adc
mov
mov
pop
xchg
jp
dec
loop
pop
adc
test
in
call
outsb
dec
mov
or
sub
cmp
or
lahf
or
sub
dec
sub
jmp
cwtl
inc
cwtl
mov
test
cs
cmc
shlb
andl
mov
jo
push
jecxz
xor
xor
mov
mov
aaa
and
sub
mov
jno
cltd
daa
cmp
mov
adc
xor
hlt
aas
ljmp
jp
das
dec
xor
mov
popf
add
ss
test
outsb
js
cmp
xchg
test
adc
sbb
aaa
sub
xor
int3
subb
popl
pushf
inc
sbb
loope
cli
mov
sbb
divl
sub
push
mov
subl
sbb
add
leave
mov
gs
pusha
imul
add
mov
or
adc
adc
or
test
pop
sub
loope
mov
pop
fbstp
pop
ret
xor
pushf
xchg
je
push
inc
mov
notl
rcl
pop
sbb
mov
mov
out
sbbl
ret
sbb
xchg
imul
mov
jns
outsb
mov
scas
sub
leave
out
jmp
sbb
les
shr
xchg
or
sbb
fists
pop
loope
xchg
loope
call
mov
outsb
popf
iret
sub
push
sub
mov
jb
and
loopne
xchg
push
lods
subb
cli
jo
adc
cmp
jp
inc
pop
or
outsb
addr16
fcomps
mov
inc
fwait
mov
das
addr16
and
cmp
xchg
mov
lea
mov
in
push
and
cmpsb
xor
mov
push
jbe
into
fldenv
sub
cli
jecxz
shl
ds
inc
or
and
or
mov
scas
imul
add
shll
movsb
arpl
call
adc
cmp
in
dec
fnsetpm(287
jmp
add
outsl
fwait
xor
in
add
or
in
cmp
lock
nop
add
loope
ljmp
xchg
lock
mov
lret
cmp
mov
adc
sub
or
scas
sub
inc
adc
or
sbb
add
in
cltd
mov
lods
mov
xchg
jae
cli
xor
fnsave
add
pop
std
cs
cmpsl
and
mov
stc
ja
xchg
mov
cmpb
clc
dec
pop
sti
mov
add
test
fmull
adc
xor
lock
les
loop
fmul
mov
daa
mov
dec
mov
dec
xchg
xor
cmpsl
pop
mov
mov
lea
shll
mov
adc
adc
call
cmp
pushf
mov
mov
les
sbb
movsb
mov
pop
push
push
rorb
jp
pop
inc
daa
and
int3
xlat
jmp
jl
cmp
adc
cmc
xchg
int3
fsubrp
ret
adc
scas
jl
fstps
jne
arpl
adc
push
cltd
into
roll
repnz
push
mov
adc
cmp
sub
dec
sub
cld
dec
mov
lret
js
mov
pop
pop
xchg
mov
int3
sbb
lock
jnp
xor
push
ljmp
movb
adc
ret
jae
scas
lret
and
jno
push
aas
jg
outsl
push
cld
jb
xchg
mov
ret
and
mov
lahf
mov
pop
sbb
gs
je
aas
fwait
les
pop
addb
notl
push
xchg
scas
jle
sub
cli
popa
push
out
outsb
cmp
dec
mov
mov
lock
jb
pop
sbb
pop
mov
mov
add
jecxz
mov
xchg
jp
jl
rcrl
ljmp
pop
fisubrl
daa
adc
pop
in
dec
in
ds
sbb
sbb
pop
dec
fs
sbb
out
jecxz
xchg
inc
jge
jge
mov
adc
adc
jne,pn
jno
inc
xchg
pop
mov
lds
lcall
iret
or
push
xchg
and
inc
jle
stos
arpl
sub
mov
mov
xchg
sub
cmp
jg
loope
js
lret
cld
inc
rclb
add
mov
cmpsl
xchg
xchg
jp
and
mov
mov
mov
mov
jns
ret
mov
stos
xchg
push
adc
cli
xor
add
loope
out
xchg
cs
ds
adc
shll
cmp
xchg
push
or
stos
scas
xchg
push
cmp
pop
pop
mov
jno
adc
sahf
insl
mov
aad
gs
daa
popf
enter
or
sbb
stos
shl
lock
adc
stos
jge
xchg
mov
lock
rcrl
outsb
sbb
subb
enter
dec
inc
push
inc
inc
cwtl
fistps
xor
popf
xor
cmpsl
pusha
in
out
and
fidivl
pop
ret
insb
scas
jmp
shlb
movsl
call
push
and
add
addl
lcall
lock
fiadds
or
in
pop
xor
inc
xorl
lds
push
insl
das
or
xchg
das
mov
jmp
xchg
fmull
xor
fldl
sahf
inc
jmp
sti
dec
test
or
inc
sub
jecxz,pt
dec
shlb
int
push
push
add
dec
icebp
dec
stc
mov
in
in
std
call
stc
test
scas
das
add
pop
push
add
pusha
adc
dec
pushf
jg
inc
sub
rolb
cmp
stc
jmp
sbb
inc
inc
fsubrl
jns
pop
xor
imul
outsb
push
cmp
in
test
jne
sub
loopne
roll
and
iret
pop
je
popa
push
sub
mov
movsb
loope
push
cmp
stos
and
pushf
add
xchg
jl
adc
mov
xor
mov
pop
pop
dec
mov
fidivl
js
xchg
xor
rcrb
mov
xchg
push
sahf
mov
adc
popa
mov
sbb
int
jge
push
dec
popf
in
testb
ljmp
scas
ja
test
mov
pop
es
ljmp
arpl
mov
xor
shr
mov
sti
ss
rep
add
mov
and
xor
cmp
bnd
add
cs
aam
mov
in
lds
and
test
inc
jle
andb
inc
emms
add
je
repz
fwait
and
aam
fstps
shlb
pop
add
jnp
xor
jne
idivb
mov
fs
sub
or
mov
xchg
iret
loope
xor
mov
clc
xchg
jbe
insb
sbb
es
inc
call
xchg
cli
les
mov
dec
add
pop
std
mov
pop
repz
fucomi
or
sti
xchg
sub
out
enter
loope
pop
call
cltd
lods
jg
mov
cmp
mov
add
test
xchg
aaa
divl
dec
mov
dec
inc
stos
or
xor
cmp
aaa
cltd
jns
imul
jno
testl
lcall
sbb
jns
push
and
fsub
lcall
sahf
mov
testb
cld
loope
sbb
pop
xor
sbb
sub
inc
rcll
repz
mov
adc
xor
mov
add
imul
jl
push
sub
mov
clc
pop
outsl
sbb
cld
aaa
movsb
push
insb
icebp
pop
dec
iret
mov
outsb
mov
imul
cmp
shl
into
lret
and
xchg
cmp
push
test
fdiv
test
inc
mov
dec
dec
adc
mov
cmpsl
lock
rcll
xchg
cmpsl
call
scas
xchg
in
inc
lcall
ds
std
scas
data16
iret
xor
dec
xchg
sbb
aad
sti
das
stos
negb
das
mov
cmp
mov
dec
pop
push
loope
sub
lahf
add
ljmp
mov
inc
mov
jbe
or
sub
xchg
roll
cld
push
mov
mov
std
mov
push
lock
dec
xor
mov
jp
dec
neg
xor
icebp
cmpsb
pop
mov
jne
mov
ds
mov
cltd
iret
dec
scas
jnp
movsl
push
testb
dec
shr
push
lods
mov
cs
xor
loop
jo
repnz
aas
add
int3
orl
cmp
lahf
mov
call
push
pop
push
xchg
or
popa
dec
adc
aaa
cwtl
test
lahf
push
jmp
jbe
cmp
and
in
mov
in
cmpl
mov
fisubrs
push
mov
icebp
shl
mov
pop
jae
leave
mov
pushf
stos
xor
insl
sbb
ds
cli
add
mov
add
pushf
cmp
repz
cs
vmread
aam
xor
lods
add
mov
xchg
inc
shrb
pop
aas
push
loope
jnp
sbb
call
ja
popa
xor
mov
add
popa
mov
add
gs
and
add
in
mov
push
push
sub
mov
pop
pop
out
test
test
xchg
clc
inc
pop
shlb
sbb
mov
rclb
test
mov
scas
adc
mov
or
pushf
fwait
movsb
pop
nop
bound
leave
out
andb
mov
mov
ds
jno
push
or
ret
mov
ja
fistps
mov
enter
pop
inc
popf
jle,pt
cld
or
sub
push
leave
cltd
sub
lock
inc
xor
rcrb
jb
dec
dec
and
ss
les
fld1
loop
sub
dec
jns
inc
fs
pusha
fidivl
mov
jl
sbb
cmp
pop
ret
adc
std
imul
mov
jae
lret
loope
pop
es
arpl
test
iret
out
and
fldenv
insb
xlat
jbe
pop
or
adc
dec
fmul
in
fisubs
cmpsl
fsubrl
push
sbb
pop
ljmp
xor
jmp
dec
mov
xchg
cwtl
mov
test
xor
jb
add
callw
add
pop
out
mov
push
int3
mov
dec
imul
inc
test
pushf
inc
es
jg
out
lods
mov
sub
insb
inc
das
and
or
imul
push
mov
in
cmp
dec
mov
add
push
xchg
repz
les
test
pop
dec
mov
push
dec
mov
mov
ja
sbb
les
mul
aad
call
icebp
bound
pop
xchg
cld
insl
jns
push
call
jo
cld
sub
outsb
adc
and
nop
outsw
push
fld
cmp
push
sub
jl
in
loope
adc
push
clc
sub
adc
adc
adc
ret
cmpsl
and
insl
sub
fstps
pop
mov
mov
add
add
dec
mov
cwtl
mov
pop
xchg
dec
jp
sbb
addr16
push
dec
addr16
adc
leave
repz
daa
scas
pusha
sub
cmpsb
pop
adc
out
dec
rcrl
je
in
and
je
fmuls
inc
mov
mov
dec
nop
jnp
cmc
push
push
inc
add
cmp
sub
and
xchg
aaa
arpl
jle
jp
gs
jno
btr
das
sub
inc
dec
xchg
lret
ss
ror
lods
sub
add
lcall
hlt
mov
sahf
add
push
test
popa
hlt
in
loopne
push
je
lret
jle
nop
enter
clc
pop
add
je
test
push
mov
fnstenv
xchg
push
nop
push
cs
cmp
xor
mov
adc
fnstenv
lret
mov
notb
sbb
sbb
add
and
ds
rcrl
addr16
jecxz
or
into
aaa
shr
cmpsb
adc
inc
inc
decb
imul
pop
push
xor
inc
hlt
adc
pop
shll
xor
fcompl
pop
inc
ljmp
sub
jnp
cmp
and
xchg
add
test
vpshufhw
lea
mov
stos
mov
jmp
bound
inc
jl
mov
scas
sahf
int
dec
popa
inc
test
stos
or
push
hlt
cmp
push
rolb
jbe
out
or
xchg
cli
incb
ja
hlt
push
lahf
jmp
pop
div
out
adc
adc
inc
mov
in
lcall
and
mov
lock
mov
cmp
sbb
dec
andb
loop
lods
pop
pop
movsb
cmp
data16
orl
xor
xor
sbb
mov
xor
xor
adc
sub
mov
or
aam
push
xor
or
pop
xchg
fildl
ret
enter
dec
add
adc
xlat
mov
ffreep
daa
push
and
mov
jg
add
pop
pop
leave
inc
cmp
mov
ret
pop
and
jge
push
clc
jo
or
les
pop
adc
xchg
ss
xchg
mov
fimull
in
out
enter
push
sahf
test
jns
jg
in
das
jbe
or
mov
mov
xchg
and
xchg
clc
mov
gs
ljmp
add
out
pop
pop
aad
loop
into
xor
adc
xor
lods
xor
pusha
int3
in
shrb
in
pop
scas
mov
popa
js
xorl
mov
push
movsb
cmp
inc
lods
cmp
int3
ds
in
aaa
xor
dec
jae
sbb
in
in
fwait
xchg
dec
out
mov
xor
hlt
mov
vrcpss
into
ret
insl
iret
ja
mov
aas
andl
cmp
lods
pop
adc
cmp
lds
lods
mov
mov
sbb
cltd
in
cmpsl
xchg
mov
enter
jg
pop
mov
icebp
andl
inc
lds
sbb
jmp
jbe
call
into
xchg
and
jmp
mov
mov
test
mov
cmovnp
mov
xchg
mov
mov
ret
lods
inc
xor
xor
sub
sahf
jg
leave
imul
sub
xchg
icebp
mov
cli
jno
or
xor
jmp
call
lods
shlb
xlat
loop
push
mov
fwait
pop
sub
add
mulb
mov
add
inc
rol
jmp
push
icebp
jp
outsl
fists
int
adc
cmp
xchg
xchg
dec
test
std
mov
iret
mov
mov
shlb
jg
out
push
mov
fsubr
cmpsl
out
jecxz
fldl
push
jo
pop
aaa
sub
adc
push
xchg
mov
adc
push
sub
aam
sbb
lds
add
cs
mov
hlt
fists
movsb
test
out
push
es
sbb
aad
cmp
cmp
arpl
jmp
movsl
repnz
adc
or
in
movsb
push
mov
mov
xchg
push
pusha
sbb
xor
push
cmp
dec
or
lock
adc
leave
aad
out
dec
cld
stos
fimuls
inc
mov
int
pop
out
cltd
mov
pop
ret
pop
popa
sahf
sbb
dec
xchg
inc
lods
push
or
jmp
push
mov
xchg
lock
jbe
pop
mov
sti
es
sbb
and
push
pop
jecxz
test
push
notb
push
pop
add
stc
out
loopne
mov
dec
ret
inc
sbb
stos
aas
inc
js
jl
shll
orl
mov
jge
mov
movsb
divb
cs
je
pop
fimull
inc
cmp
dec
mov
cmp
daa
mov
int
push
xchg
and
lahf
adc
adc
cmp
mov
stos
jge
sbb
pop
xor
fisttps
or
mov
add
jne
sub
or
das
xor
jl
cmp
iret
clc
dec
pop
ret
push
pop
and
imul
sahf
pop
and
pop
fsts
movsb
aaa
fisubrs
outsb
mov
push
jecxz
adc
pop
addb
push
jecxz
jl
out
pop
dec
add
xchg
jmp
rcll
into
movl
inc
sub
mov
cld
imul
or
cmpl
or
pop
lea
adc
jmp
lcall
dec
pop
adc
in
daa
sahf
popa
ss
and
push
jno
dec
fisubl
pop
adc
test
xchg
mov
push
jo
inc
fwait
mov
jno
aaa
sbb
stos
xchg
pop
cld
mov
test
xchg
inc
push
cwtl
mov
pop
xlat
sub
mov
insb
in
jmp
pop
jo
pop
xor
jecxz
out
mov
add
add
cmp
insl
into
orb
xor
cmp
and
push
icebp
xchg
add
and
pop
inc
mov
push
mov
daa
pop
mov
jp
and
pop
mov
lret
pop
push
in
and
pop
repz
das
shrb
mov
adc
jp
ljmp
repnz
lods
add
test
jns
xchg
movsb
rorl
jmp
sbb
out
adc
imul
or
xchg
jle
xor
push
xchg
pop
jo
imul
sub
enter
call
pop
or
orb
out
pcmpgtb
push
fisttpll
loop
xchg
int3
gs
movsb
jo
add
xor
pop
sub
adc
cmp
mov
cmp
sti
push
cmp
insb
fstp
cmp
loop
add
or
push
jecxz
xchg
cmc
cmp
push
out
ror
xchg
je
jecxz
inc
enter
pushf
inc
push
cld
lods
cmp
les
xor
insb
xchg
ss
push
jecxz
push
push
repz
push
shr
add
mov
mov
fnstsw
jne
popa
divb
dec
loopne
jmp
inc
inc
imul
sahf
addr16
or
mov
inc
test
mov
inc
sbbl
or
lret
add
imul
loop
adc
loopne
fwait
add
push
jns
pop
jecxz
jbe
lahf
inc
lock
inc
cltd
sbbl
sub
inc
cmp
mov
in
pop
mov
inc
dec
sub
int
sub
imul
push
pop
out
push
arpl
mov
dec
and
test
movnti
cmc
jl
xchg
testl
insb
mov
test
shl
ljmp
sbb
mov
mov
call
and
dec
inc
xchg
add
adc
inc
shll
xor
fdivrl
add
or
cmp
jne
ss
popa
out
in
in
dec
popf
sbb
and
dec
jo
cmp
cmp
shrb
aas
lret
sbb
push
xchg
aas
fs
cli
mov
loop
jo
popa
cmpsl
push
cmc
cmpsb
mov
fisttpll
xor
inc
cs
jmp
xor
pop
lcall
nop
sti
inc
jle
xor
jmp
leave
std
pop
fs
adc
lods
sarl
mov
mov
jno
pop
fwait
out
and
xlat
pop
ds
push
inc
push
fldl
dec
dec
out
lret
out
jg
sbb
call
and
sbbl
int
push
andl
mov
inc
pushf
jg
jbe
cmp
jns
xchg
outsb
add
adc
pop
rcrb
sbb
movsl
out
adc
pop
loopne
inc
ss
andl
out
aas
mov
dec
lods
rorb
jle
aad
out
inc
adc
in
push
adc
or
pop
inc
fisttpl
imul
movsb
jne
cmc
jl
sub
mov
sub
xor
int
or
jns
out
loop,pn
popa
call
icebp
jl
adc
mov
fldcw
lcall
lret
or
push
fwait
push
pop
mov
lret
mov
push
dec
push
es
nop
movsl
sub
push
xchg
adc
push
sbb
int
dec
sub
ljmp
cld
or
or
xor
ficompl
mov
push
mov
lods
adc
mov
dec
pop
and
leave
xor
jne
negl
mov
les
mov
es
inc
repnz
jns
add
repz
enter
out
pusha
ss
sysenter
out
jne
mov
mov
pop
mov
ret
pop
xchg
scas
push
pop
push
sbb
in
lret
gs
outsb
cli
cmp
cmp
sysenter
cmp
xorl
clc
sbb
cmp
js
xchg
xchg
rcll
jbe
mov
or
cmp
rorb
push
stos
lcall
scas
jmp
pop
sbb
push
dec
loopne
dec
outsb
loopne
push
push
jmp
and
inc
and
cltd
push
or
into
enter
mov
jp
pop
fdivr
ss
mov
push
push
inc
sub
add
hlt
pop
or
nop
cmp
mov
and
jne
psubd
and
xchg
cmpsb
loopne
jle
test
push
push
mov
jb
xchg
test
pop
mov
int
movsb
ret
and
add
imul
call
ja
mov
pop
and
xchg
aad
cld
mov
jno
push
jp
push
adc
fistps
sbb
fsubs
arpl
pop
jecxz
push
xchg
push
out
mov
inc
adc
and
popa
sub
sub
sbb
push
mov
icebp
fcomi
test
pop
lea
push
cmp
in
or
xchg
jae
or
sahf
lods
aas
test
mov
and
pop
negb
aas
cltd
hlt
cmp
mov
bound
jle
sbb
pop
pop
int3
outsl
mov
clc
jae
pop
add
xlat
shrb
dec
dec
xor
mov
xor
in
jae
addr16
xor
lods
loopne
dec
or
dec
ret
pop
jns
shl
cld
stos
fisubrs
ja
insl
mov
sub
ret
jo
adc
pop
lods
pop
pop
jp,pt
xchg
gs
sub
je
push
push
shrb
xor
pusha
mov
or
popa
ljmp
sbb
pop
out
pop
test
jae
stc
mov
fstpt
movsl
add
xor
lea
faddl
xchg
inc
js
pop
or
cli
mov
jbe
xchg
jp
mov
rcll
ret
add
xor
icebp
in
loopne
sahf
sub
mov
mov
xchg
and
pusha
ret
outsb
and
adc
or
inc
push
orb
xchg
int
push
and
and
cli
fstps
mov
cs
xchg
cmp
and
pop
loop
dec
pop
sub
cmpsl
inc
push
mov
mov
add
out
cmpsb
out
lahf
adcb
cmc
mov
jnp
adc
into
xor
nop
lret
lea
popf
jg
and
sub
loope
add
test
lcall
roll
xchg
or
stos
jmp
push
decb
xor
mov
mov
les
xchg
icebp
nop
xor
jae
dec
or
jg
push
pop
sbb
lea
movsl
xor
cmpsb
stos
sub
push
jno
mov
popa
pop
outsb
lcall
adc
jg
jnp
addr16
mov
repnz
loop
out
mov
pusha
push
in
lock
jmp
mov
sbb
and
adc
femms
outsl
cli
gs
loopne
hlt
lods
je
mov
xor
cmp
xchg
aad
xlat
push
icebp
jl
ret
mov
lods
mov
sub
mov
pop
or
subb
je
xor
dec
lea
xchg
xchg
mov
out
xchg
sbb
pop
movsl
fisubrs
push
arpl
popa
out
int
jp
cmp
ds
les
cmp
push
and
add
iret
lcall
mov
lea
fnstsw
pop
lds
jmp
or
leave
out
shrl
lret
mov
mov
fcoms
adc
fdivrl
add
or
push
adc
xor
pop
lahf
mov
sbb
mov
ja
sub
mov
scas
push
dec
test
enter
jl
inc
add
sub
push
sbb
cmp
imul
ret
jmp
rcrb
add
dec
fwait
out
and
adc
mov
sbb
hlt
pop
mov
out
mov
std
adc
mov
lods
inc
mov
outsl
jae
icebp
pop
fisttps
movsl
inc
inc
mov
dec
popa
inc
icebp
dec
iret
mov
jnp,pn
scas
cmp
dec
adc
pop
pop
push
and
mov
leave
push
sbb
and
enter
pop
mov
shlb
xor
inc
orb
dec
or
rclb
pop
dec
js
in
gs
or
lret
jmp
add
pop
sub
push
hlt
sub
adc
les
sbb
mov
push
jg,pt
les
repnz
andl
jp
push
addr16
sarl
pop
xor
test
icebp
pop
cltd
in
adc
lods
mov
js
adc
out
adc
and
pop
or
ljmp
mov
jnp
in
pop
dec
sub
adc
movq
leave
jo
ja
out
pop
xchg
imulb
xor
cmp
in
cs
popf
cmp
outsl
ret
xchg
mov
popf
jns
pop
push
rcrb
fcom
push
popa
sub
icebp
jbe
jmp
fldl
jne
mov
push
call
mov
adc
jmp
div
and
inc
roll
or
lret
jne
loopne
jl
and
inc
fidivrl
fs
clc
inc
and
pushf
ret
inc
dec
mov
mov
cwtl
pop
jno
inc
mov
cmp
push
out
sub
mov
cmp
addr16
cmovle
pop
fdivrs
pop
add
mov
fldl
jns
addr16
and
fisubs
and
push
cltd
xchg
add
loope
dec
sub
jae
gs
mov
push
xchg
lahf
pushf
cmp
inc
hlt
or
and
movsl
fdivrs
jnp
push
outsl
outsl
cmp
mov
adc
mov
mov
mov
loop
mov
and
adc
fs
push
ret
sarl
aaa
mov
aam
add
sub
cmp
inc
pop
shll
push
xor
ss
iret
leave
sahf
clc
fmul
pop
jo
add
jle
movsb
push
enter
xchg
dec
mov
fsubl
xor
pop
mov
jmp
dec
iret
out
idivb
add
jnp
or
cmpsl
push
mov
xor
inc
repnz
adc
mov
or
xor
dec
xor
pop
out
inc
jae
fmuls
push
cmp
jb
cmp
push
cmp
shrb
rorl
stc
xchg
inc
jecxz
clc
mov
orb
mov
mov
jb
sarl
es
push
sub
inc
scas
pop
xchg
dec
inc
pop
shrl
and
je
xchg
add
inc
lcall
jmp
xchg
das
sahf
arpl
xchg
popa
jl
ds
sub
push
push
push
sbb
xlat
test
in
inc
inc
pop
push
cmpsb
dec
jb
roll
or
jecxz
push
add
ja
test
lret
scas
fadd
ret
repz
sub
divb
add
jmp
mov
cwtl
popf
and
mov
sbb
jbe
cmp
imul
pop
iret
rcr
add
mov
push
loope
nop
mov
xor
je
dec
movsb
inc
arpl
sbb
mov
jb
iret
and
add
fdivrs
ret
enter
mov
bound
push
mov
insb
mov
outsb
xchg
inc
xor
push
xchg
hlt
pop
in
cmp
mov
mov
insl
add
scas
sbb
add
bound
and
data16
xchg
pop
xor
mov
jb
outsl
or
dec
test
in
iret
mov
fistps
mov
cld
jb
insb
add
scas
fs
mov
jp
push
lds
sbb
sbb
js
test
les
scas
incl
and
sbb
movsl
out
nop
cmp
test
pop
fmull
decb
arpl
mov
xchg
test
int3
iret
fdivrl
and
scas
pop
jp
mov
aas
scas
adc
lds
stos
enter
daa
pop
xchg
sub
pop
lods
sub
js
clc
xor
adcb
dec
insb
mov
out
cwtl
cmp
pop
loopne
clc
push
inc
fcompl
lods
or
rol
mov
push
mov
mov
scas
add
shll
test
mov
xchg
add
dec
fsub
inc
push
dec
scas
mov
fdivs
popf
cltd
add
sub
mov
aas
out
jecxz
jge
or
and
lret
or
push
pop
mov
sbb
popa
in
sbb
mov
jae
clc
pop
movsl
inc
or
mov
mov
add
repz
movups
or
sbb
sub
aam
test
in
mov
and
dec
bound
pop
add
jb
sbb
sbb
mov
ret
ds
jnp
mov
cmp
aaa
in
pop
mov
outsb
ror
mov
jle
push
push
and
lds
fcoms
and
sbb
vmovss
xchg
mov
sbb
imul
lcall
stos
pop
dec
jmp
lock
adc
call
repnz
mov
aad
push
and
cmp
insb
push
jmp
fidivrl
push
jmp
push
fisubl
into
xchg
bound
push
cmc
push
pop
stc
mov
icebp
xor
sahf
lahf
pop
push
nop
insb
loope
pop
pop
setb
inc
or
mov
push
lods
jle
mov
imul
add
cmc
xchg
rcrl
xor
sub
mov
lahf
mov
mov
jle
cli
cltd
fidivrl
mov
jp
cmp
cmp
xchg
dec
dec
sbb
jnp
or
mov
push
sub
or
mov
daa
aad
push
mov
xchg
int3
aaa
ret
insl
enter
mov
data16
daa
mov
push
cld
xchg
xlat
inc
adc
sub
imul
iret
hlt
fidivrl
sbb
push
ja
call
mov
cmc
arpl
xorl
and
mov
pop
or
mov
inc
fisubs
sub
push
adc
add
sub
add
push
inc
stos
or
and
add
ret
mov
scas
sbb
loope
mov
out
in
movsb
loop
mov
xor
sti
outsb
stos
jp
push
std
or
push
xchg
test
or
insb
orl
push
sbb
sahf
inc
out
jb
mov
dec
mov
arpl
ret
shll
jns
decb
sbb
and
mov
lock
lret
inc
mov
cmp
sbb
outsl
sbb
out
rcrb
dec
pop
xchg
or
dec
jnp
xor
adc
add
rorl
push
mov
into
jle
xchg
outsl
xchg
out
pop
insb
mov
insb
sub
inc
sbb
sub
cli
mov
sbb
sub
mov
inc
out
ret
gs
cmp
add
cmp
jp
xlat
pop
sarb
mov
push
cmpsb
inc
inc
cmp
xchg
mov
sbb
loopne
dec
cmp
loop
mov
or
jp
cli
xor
fwait
inc
cmp
sub
add
inc
cmp
dec
or
dec
ret
cwtl
inc
xchg
bnd
pusha
mov
mov
push
xchg
test
cltd
jmp
in
add
insl
mov
gs
cltd
mov
call
mov
xor
jno
adc
and
inc
insl
mov
icebp
rorl
fistl
out
mov
out
inc
cmp
pusha
leave
add
lds
mov
jbe
push
cmpsb
test
cwtl
cltd
dec
lahf
adc
add
clc
cmp
mov
popf
shrb
cwtl
std
sub
sub
dec
imul
cs
fdivp
stos
cmp
sub
cmp
jno
sub
mov
sub
jle
lahf
test
es
cmp
xchg
addl
mov
pop
dec
mov
cmp
icebp
sbb
adc
inc
sbb
jg
and
sti
dec
adc
lock
xchg
push
cs
lock
imul
and
addr16
lret
add
int
sbb
jecxz
lret
call
xchg
jno
jne
xchg
cmp
sbb
call
lret
leave
cwtl
push
push
inc
loop
rcrb
mov
enter
xor
popf
push
popf
mov
push
sbb
mov
pusha
xchg
mov
imul
and
xor
mov
xorl
mov
jne
mov
mov
add
test
jns
inc
sbb
rcll
loop
sbb
in
cmpsl
or
xor
or
test
dec
das
pop
xor
xchg
fwait
sub
jnp
scas
fwait
inc
roll
dec
or
mov
mov
dec
lret
dec
dec
mov
cmpsl
xchg
outsb
inc
sbbb
mov
mov
mov
lret
fcom
add
sti
add
dec
or
cwtl
cmp
mov
mov
enter
aam
scas
incl
jl
cmpsl
xor
mov
aas
loop
jmp
or
xor
jnp
test
mov
movsl
mov
and
xor
testb
bound
cltd
pop
add
fsub
xchg
lds
fildll
daa
insl
xor
cs
test
jecxz
sbb
pop
les
sub
lea
test
push
out
movsb
popf
inc
adc
aam
mov
lods
stc
cs
int3
js
fld
das
je
je
dec
fadd
rcll
push
test
icebp
imul
pop
aam
mov
dec
cmp
xor
cs
push
addl
mov
xchg
aam
jb
incl
push
ret
jp
sub
sub
scas
fucomp
enter
push
loop
leave
jb
dec
and
dec
js
mov
dec
nop
clc
hlt
dec
in
adc
test
loop
ret
sbb
adc
mov
or
add
cltd
sub
inc
les
shrl
cmp
and
dec
mov
sub
mov
jno
mov
sbb
stos
xor
sar
pop
jg
repz
test
push
sahf
jl
aaa
fisttps
outsb
adc
push
inc
aaa
xchg
das
mov
mov
dec
ss
icebp
add
xchg
lcall
iret
fsubl
inc
mov
ret
xchg
lret
jae
or
or
arpl
inc
mov
lock
in
fdivrs
lcall
add
fldl
mov
sbb
das
add
test
test
and
fcomp
jmp
mov
repnz
xor
cld
mov
in
cmpsl
xchg
push
or
cwtl
lahf
xchg
pop
out
add
cld
outsl
leave
or
enter
je
ds
jns
arpl
xchg
xor
sahf
lds
push
out
adc
es
nop
xor
and
insb
cmp
dec
jb
jnp
fucompp
iret
dec
lret
or
mov
xchg
cwtl
inc
ret
mov
mov
mov
prefetchw
push
flds
cmp
stos
lock
loop
adc
dec
clc
pushf
pop
fisubs
fucomp
xor
shll
xchg
mov
out
lods
popf
in
mov
imul
fldl
cwtl
pop
xchg
or
std
repz
in
jp
enter
stos
or
sarl
and
leave
xor
cmpsl
bound
pop
mov
std
filds
and
jl
xor
pop
mov
xor
ror
sub
pop
mov
ja
mov
stc
jmp
mov
mov
dec
scas
fcomi
xchg
and
dec
sahf
ret
xor
data16
push
outsb
fcomp
loop
push
clc
movsl
mov
loop
push
cmp
and
mov
gs
int3
sub
int
cmp
stos
push
ss
and
xchg
bound
xor
xchg
jno
push
mov
lods
and
mov
movsl
xchg
out
mov
pop
mov
adc
outsb
mov
fsts
push
adc
push
and
mov
lods
mov
scas
jns
ss
xor
pop
add
sbb
out
cmpl
sub
mov
add
ss
jo
sub
or
test
or
xchg
xor
sub
or
pop
test
inc
and
cmpsb
clc
sub
mov
fs
test
push
push
push
mov
loopne
fistpll
aas
pop
mov
add
lds
in
ret
add
mov
or
jl
cli
add
iret
ss
roll
cmp
pop
mov
mov
mov
loope
pusha
mov
pop
cmpsl
jp
ret
cs
push
sbb
push
in
xchg
inc
into
je
cli
mov
leave
scas
sbb
add
call
push
dec
sub
je
out
dec
ret
dec
push
inc
divb
xchg
ja
insb
inc
mov
test
dec
ja
mov
lcall
mov
dec
jmp
inc
int3
daa
popa
imul
xchg
mov
js
aaa
push
xchg
insl
lea
pop
aaa
clc
sbb
in
mov
scas
jecxz
mov
jne
mov
in
fsubrp
stos
adcb
sub
aad
lahf
cmc
out
test
inc
cmpl
fwait
inc
std
mov
loope
xchg
sub
shll
push
fcoms
fwait
lret
mov
in
cmp
push
and
decl
lods
js
stc
enter
jo
clc
mov
pop
adc
inc
adc
xchg
out
subb
mov
jecxz
outsl
or
adc
jecxz
scas
std
pop
pusha
push
int
loop
ror
mov
mov
scas
pop
mov
add
cmp
mov
movb
mov
jmp
ja
das
jns
in
mov
push
cmp
dec
adc
loop
fbld
popf
adc
cmp
repnz
push
mov
and
clc
out
das
lds
test
adc
ret
mov
dec
mov
pop
and
mov
cmp
jns
jnp
push
fstpl
jl
popf
nop
mov
outsb
mov
loop
inc
lea
pop
sbb
and
ds
mov
imul
pop
add
andl
test
xor
mov
push
daa
ds
xor
dec
or
dec
mov
scas
push
adc
add
cmpl
jle
popa
hlt
or
or
push
cli
adc
movsl
cmp
cld
lock
rcl
lret
ss
and
dec
sbb
inc
das
push
mov
mov
into
xchg
or
push
inc
ds
xchg
xchg
gs
bound
cmpsb
into
adc
popa
shrl
cmp
loopne
push
inc
or
inc
popa
cli
dec
test
icebp
push
mov
cmp
inc
push
sub
std
jno
pusha
ret
fadds
jb
push
push
sub
dec
xor
lods
sti
jmp
jo
and
adc
loope
inc
bound
xor
ficompl
pop
cld
cmp
aas
imul
data16
movsb
and
add
and
mov
pop
jbe
sbb
cmpsl
hlt
push
mov
lods
les
es
jp
out
pop
in
adc
jno
addr16
stc
xor
std
testb
popa
mov
loopne
fdivl
inc
aad
sahf
imul
cmp
push
cmp
popf
sbb
inc
cli
into
mov
or
inc
push
loop
sub
cmc
call
sub
data16
insl
daa
daa
popa
jecxz
push
ja
arpl
inc
jns
jle
xor
cmp
xchg
or
jns
add
cld
ljmp
mov
mov
inc
ja
lds
insb
notl
xchg
lret
and
gs
js
inc
cmpsb
sbb
mov
pop
test
loopne
jp
xor
inc
mov
pop
sti
xchg
add
aaa
test
jge
je
adc
inc
fldl
scas
aad
sbb
nop
scas
jg
icebp
inc
pop
sub
into
jp
pop
into
jb
outsb
mov
test
inc
loop
insl
clc
shrl
dec
ret
aas
mov
daa
pop
mov
ret
dec
iret
inc
sbbb
jecxz
enter
mov
vxorps
test
inc
push
ficoml
sbb
les
lret
mov
sbb
cwtl
imul
out
out
mov
add
mov
sub
std
or
dec
mov
mov
and
add
and
in
jb
notb
xchg
sbb
ret
daa
addr16
xor
jmp
jns
in
sub
stc
mov
mov
je
dec
push
insl
out
fidivs
mov
mov
lahf
adc
xor
cmp
pop
faddl
addb
popf
xor
inc
outsb
dec
test
lahf
dec
test
decb
cmp
adc
fs
sub
xor
das
loopne
arpl
shll
jb
push
daa
shrl
push
js
fnstsw
subb
xor
filds
test
add
cmpsb
sbb
mov
sahf
mov
pop
xor
xor
xor
xchg
lret
lret
fwait
mov
adc
packsswb
sahf
sbb
mov
mov
enter
mov
call
xchg
xorb
xor
mov
inc
dec
xchg
ljmp
push
or
hlt
cmpsb
mov
sbb
in
or
stc
cmpsl
mov
dec
ficompl
jne
and
stos
push
adc
mov
clc
and
cmpl
sbb
xchg
cwtl
repnz
add
dec
pop
dec
mov
das
lcall
sub
in
add
mov
pusha
xlat
fwait
mov
imul
in
test
pusha
cmc
ret
sbb
daa
and
cmp
orb
sub
mov
loopne
jge
scas
sub
mov
std
mov
xchg
jp
int
pop
daa
pop
cs
pop
and
sahf
shrl
dec
mov
lret
scas
jbe
and
data16
push
inc
xchg
ret
mov
dec
fs
std
out
out
and
imul
mov
sbbl
stos
in
mov
or
scas
stc
adcl
cmc
mov
lahf
outsb
adc
mov
les
sbb
loope
jg
push
adc
jb
rolb
or
fs
dec
loope
jae
into
xchg
fisubs
inc
push
pop
iret
inc
inc
in
mov
aas
jmp
repnz
mov
xchg
fidivrs
xchg
sbb
out
addr16
mov
dec
mov
mov
dec
cmp
jp
call
cmpsl
add
ret
fs
mov
in
loope
ja
fsubs
cld
movsb
xchg
loope
inc
and
movsl
mov
and
jecxz
js
jne
js
lahf
imul
xchg
cwtl
sbb
mov
icebp
or
adc
inc
loop
shll
pop
mov
and
cmc
xor
or
ret
cli
loop
xchg
divb
lock
add
jg
pop
in
fcomip
or
fsts
cmp
push
bndldx
dec
mov
and
cmc
hlt
cltd
ds
sub
push
mov
add
cmp
push
pop
dec
int
faddl
lret
cmp
orl
pop
cs
out
pop
xchg
push
push
scas
or
xchg
pop
lea
adc
out
fisubs
adc
cmp
repnz
jp
adc
out
repnz
cmc
cmp
enter
adc
in
pop
loope
pusha
or
imul
mov
mov
push
sub
fwait
jb
add
ror
mov
or
aaa
add
mov
adc
loop
pushf
idivb
and
xchg
lea
jne
mov
repz
mov
sub
mov
fisubrs
mov
pop
mov
addr16
stos
repnz
inc
cmp
inc
push
sub
aad
fsubrl
scas
shrl
sub
sbb
xlat
clc
data16
cmpl
sbb
divb
andb
mov
pop
lds
mov
dec
adc
ljmp
add
and
fcomp
stc
lods
dec
ja
notb
add
shlb
xchg
xor
es
movsl
shlb
dec
loope
loopne
in
pop
xchg
mov
inc
mov
or
hlt
pop
mov
push
arpl
mov
add
jnp
fwait
or
cmpsb
xchg
xchg
xlat
fidivl
loop
add
lret
pop
xchg
int3
xchg
adc
imul
lods
push
nop
addr16
sbb
jp
fisubs
shrl
mov
xchg
addl
xchg
cwtl
aas
jns
dec
mov
sbbb
jmp
cld
out
xlat
or
jbe
fmull
fmull
divb
add
in
int3
loop
inc
lods
cwtl
bound
push
mov
icebp
jg
int
mov
jno
or
xchg
push
push
fldl
sub
lahf
inc
addl
fcoml
in
ds
sahf
sub
leave
push
sbb
lret
test
nop
pop
mov
test
ja
cmp
sbb
enter
in
jle
jle
popa
test
pop
mov
add
pop
push
testb
mov
popa
in
loop
movsb
xchg
enter
pusha
jb
fldt
sbb
push
pop
sub
xchg
mov
mov
popf
cmp
lret
imul
push
cli
xor
mov
into
pop
dec
inc
mov
rcrl
test
ljmp
adc
test
addl
or
add
test
icebp
or
lcall
sbb
cltd
mov
xchg
mov
inc
cmp
jnp
jmp
loope
mov
push
dec
xchg
mov
bound
inc
cmpsb
ss
repz
sbb
loopne
cltd
jmp
fists
push
aam
xor
add
push
gs
lods
xor
mov
jo
sub
push
add
movsb
xor
mov
jne
and
xchg
pop
sbb
test
inc
movsb
dec
adc
adcl
inc
xlat
jmp
bound
inc
out
nop
mov
sub
jae
outsb
mov
xor
fisubrl
test
push
adc
xchg
fwait
aam
jmp
lds
clc
sahf
and
negb
push
jno
xor
jp
stc
pop
lods
imull
mov
pop
inc
out
je
mov
stos
dec
cmp
test
sub
adc
xchg
pop
sahf
and
popa
push
dec
jg
rolb
rcrl
aad
pop
jp
xor
ds
xchg
push
fwait
cld
mov
cmp
lea
lds
rorl
mov
or
mov
add
xor
adc
mov
mov
cmp
cmp
fimull
hlt
sahf
jbe
jecxz
jo
add
aad
cmpsb
xchg
ss
cmp
loopne
adc
ret
mov
popf
negl
fwait
xlat
daa
mov
js
lret
stos
and
and
sbb
and
sbb
loopne
out
push
das
testb
sbb
lea
fidivrs
rcrl
mov
mov
jl
outsb
cmp
gs
add
jbe
cs
inc
fldl
mov
lods
out
push
mov
hlt
sub
xor
jge
push
pushf
sbb
dec
pop
pop
jae
cmc
movsb
std
movsb
pop
xchg
sbb
xor
fwait
mov
push
jecxz
xor
fs
ffreep
mov
jle
and
aas
jl
mov
ja
cld
adc
jne
stc
nop
or
fldcw
ds
jl
mov
inc
cmc
add
pop
jmp
cmp
shll
in
iret
ljmp
push
out
out
stos
arpl
rcll
daa
pop
cmpsl
pop
sub
push
cld
in
or
push
push
fadd
mov
xchg
xchg
inc
or
cmp
ror
daa
inc
xor
outsb
or
cmpsb
sarl
outsl
in
adc
mov
inc
test
int
inc
loop
int
sti
mov
pop
cltd
sub
shr
and
divb
pop
popf
mov
xchg
shlb
sbbl
sbb
mov
fisubrl
stc
push
int3
icebp
pop
xor
or
xorl
jns
or
pop
cmpsb
std
mov
mov
mov
xchg
cmc
xchg
orl
dec
cld
fsubr
and
decl
ds
sti
lahf
loop
cld
inc
sub
xchg
xchg
dec
sahf
cmpsl
jmp
outsl
loopne
dec
cmp
xor
bound
push
pop
push
and
dec
leave
xchg
in
pop
inc
dec
mov
cmp
push
cmc
push
into
pop
int3
mov
sub
js
mov
mov
repnz
dec
mov
scas
loop
popf
and
call
dec
inc
cmp
dec
xorb
inc
mov
test
adc
arpl
sub
xor
add
pusha
jl
push
jbe
fs
stos
sub
movl
push
stos
xchg
ljmp
arpl
fsubs
outsl
pop
bnd
mov
hlt
shr
xchg
adc
or
pop
imul
mov
mov
jns
cmp
aad
fisubl
pop
loope
xchg
mov
mov
vphaddbq
push
loop
mov
loop
or
xor
mov
movsb
mov
scas
cmc
mov
in
pusha
jae
cmc
mov
sarl
sahf
cmp
push
mov
testl
ljmp
add
leave
inc
xchg
test
lahf
neg
or
jp
wbinvd
andl
enter
cli
mov
cmp
fsubrs
jne
and
jno
pop
mov
or
mov
stos
cmpb
out
imul
jg
adc
ss
jbe
bound
in
aad
in
pop
pop
mov
lret
fwait
out
mov
ret
pop
orb
pop
aas
loopne
daa
lods
dec
cmp
test
pop
push
fs
daa
mov
pop
xchg
sar
out
inc
pop
lcall
arpl
shl
and
loop
scas
mov
push
pop
jp
jmp
and
dec
jg
out
sbb
xor
aaa
fmull
iret
mov
loop
icebp
jae
jecxz
jo
sbb
and
mov
sbb
out
int
das
mov
jo
mov
daa
vmovups
ficomps
jl
xchg
lcall
sbb
xor
xor
adc
xchg
jae
inc
adc
dec
test
sarl
ret
pop
add
stos
sti
mov
adc
pop
leave
sar
rcrl
add
in
mov
int3
ljmp
pop
adc
and
adc
mov
push
fidivrl
ds
ds
dec
je
and
lret
and
mov
enter
push
xor
push
shr
jl
pushf
jnp
inc
xor
and
xlat
aaa
push
jmp
or
inc
cmpl
jl
add
call
jnp
pop
out
lods
sbb
adc
cmc
adc
pop
sbb
lock
jle
xchg
mov
loopne
ret
into
shl
mov
and
jb
ja
arpl
mov
je
leave
int
fcmovbe
jmp
pop
xchg
cli
jbe
int3
pop
and
lret
xchg
mov
cmp
sti
xor
mov
adcl
add
xor
sbb
jle
lret
fistpl
scas
cltd
fwait
push
dec
mov
cltd
pusha
ja
fcmove
push
adc
and
mov
adc
push
icebp
aaa
and
push
pusha
mov
xchg
dec
push
mov
popf
movsl
cmpsl
repz
movsb
rcrl
and
push
mov
mov
jno
aam
pop
into
jecxz
cmp
and
divb
test
cmpsb
test
pop
ret
lds
or
mov
rol
test
test
popf
ja
icebp
mov
neg
push
cld
in
movsb
mov
mov
xchg
outsl
lods
js
and
loopne
cmp
pop
push
jl
js
ret
es
mov
out
hlt
ret
hlt
sub
xchg
fwait
mov
jg
mov
lods
dec
pop
data16
ret
jmp
jne
or
sbbb
enter
test
out
xor
in
decb
xchg
bound
xor
test
out
xor
jp
into
mov
sbb
pop
lret
mov
mov
add
test
add
idivl
cwtl
jne
repz
ds
movsl
insl
sbb
int3
mov
insb
es
sub
xchg
cmpsl
mov
in
movsb
inc
hlt
or
push
push
push
popf
es
pop
mov
clc
or
lret
stos
adc
adc
xchg
cmp
mov
cmpsl
sar
cmp
mov
mov
insl
into
mov
dec
adc
inc
sbb
pushf
inc
cmp
aaa
stos
sbb
xor
fmull
outsb
mov
pop
push
fld
mov
push
push
mov
pop
mov
add
inc
jmp
fstpt
mov
inc
repnz
loop
rcrl
pop
push
xor
outsb
daa
fcoml
das
rclb
xlat
popa
std
pop
shr
cs
and
repnz
sub
mov
ja
sbb
mov
mov
jge
insl
shrb
jp
in
repz
bound
xchg
lcall
rcl
fld
or
xor
fdivrl
mov
dec
insb
in
fwait
fisttpl
imul
jmp
fistl
cltd
mov
mov
fmuls
sub
xor
or
fdiv
arpl
arpl
int
lret
test
push
inc
decl
add
push
adc
cltd
push
hlt
xor
jecxz
sbb
enter
xchg
xor
ss
lds
stos
mov
and
outsb
mov
push
xor
rcl
mov
jns
mov
mov
and
adc
call
lds
or
imul
test
or
lret
rolb
pop
pop
push
and
lea
daa
mov
push
ret
and
jl
dec
add
fldt
mov
mov
ret
xchg
pusha
pop
div
xchg
sub
push
leave
ror
and
ret
cltd
popa
loop
xor
adcb
adc
loope
mov
inc
mov
adc
sub
pop
jae
fwait
xor
adc
and
dec
pop
adc
jo
cli
lods
test
cmc
add
out
mov
xor
add
div
xorl
push
add
mov
and
pcmpeqd
xor
cld
sti
pop
pop
sbb
leave
add
push
outsb
mov
stos
mov
mov
sbb
push
sub
addb
stc
insb
rol
xchg
in
cmpsl
dec
aaa
clc
xor
sbbb
insb
sub
mov
or
jmp
or
xchg
bound
mov
fdivr
shll
popf
lock
cmc
add
out
xorl
pop
mov
and
dec
ret
jl
pop
inc
lods
xor
jecxz
sub
xchg
lahf
roll
pop
pop
sti
in
pop
mov
loopne
and
xlat
xchg
inc
mov
int
adc
jo
test
out
mov
add
jno
loopne
cmp
sbb
add
imul
aad
adc
sbb
daa
or
and
sarb
mov
fs
out
add
xor
outsb
mov
scas
xchg
cltd
sbb
mov
xor
call
mov
xlat
cmp
in
dec
sbb
pop
inc
loop
leave
inc
out
jns,pt
popa
insb
loopne
mov
fwait
cmp
repnz
les
divb
cmp
nop
jbe
inc
and
rolb
out
mov
inc
fisubl
cmpsl
dec
cltd
dec
pop
mov
push
push
pop
push
or
sbb
cpuid
mov
inc
sbb
jecxz
inc
dec
dec
pop
mov
sub
dec
jg
lea
xchg
pop
xlat
call
aas
fsubrl
mov
stos
xchg
pop
cs
add
ficoml
and
in
jne
ss
notl
adc
cmp
mov
fidivrl
inc
div
inc
mov
icebp
adc
xor
lds
dec
enter
testb
adc
cmp
mov
inc
rclb
mov
push
adc
pop
lds
jnp
test
pop
dec
movsl
add
movsl
jne
aaa
pop
lahf
xchg
in
out
xchg
push
dec
ret
xlat
dec
mov
mov
in
mov
inc
jae
jmp
xor
mov
roll
in
xor
xchg
ror
mov
pop
adc
cmp
mov
fimuls
mov
jecxz
inc
out
pop
shl
in
push
imul
mov
push
call
out
ja
or
or
notl
cmp
fstpt
adc
sbb
dec
ret
jb
xor
stos
pop
fiaddl
mov
aad
aaa
mov
in
loope
push
ficompl
popf
inc
fdivs
jle
xchg
sub
cwtl
mov
sti
add
lret
inc
jge
jne
pop
jg
iret
mov
pop
push
cmova
je
push
mov
push
js
lods
jmp
jp
adc
cwtl
pop
sbb
das
loope
jmp
fdivrl
dec
mov
xchg
fnstenv
lcall
mov
or
jmp
push
pop
jmp
lret
xchg
hlt
ficoms
imul
mov
sbb
lods
xchg
mov
loop
sbb
lcall
add
sahf
dec
out
sbb
or
dec
mov
les
mov
stos
imul
mov
aaa
sar
lods
fsubr
cmp
clc
inc
imul
push
cmp
mov
sbb
scas
xor
aam
mov
aam
pop
bound
adc
xchg
add
cmpsb
sub
sub
cwtl
gs
pop
repnz
lahf
sub
xchg
std
das
adc
mov
incb
aad
test
cld
cs
lods
loop
iret
cltd
loope
testb
je
nop
aam
stc
xor
outsl
cmpsl
js
clc
mov
push
mov
in
xlat
jmp
das
insl
lea
lret
test
mov
test
and
gs
and
jecxz
movsb
test
jbe
inc
sbb
bound
pop
push
out
fnstsw
inc
les
cmp
stos
xor
pop
ja
jmp
out
sahf
loope
addr16
icebp
mov
and
cltd
enter
loope
int
les
popa
mov
add
jb
lock
pusha
call
jo
es
retw
insb
sub
mov
mov
pop
push
or
fstpt
or
inc
ds
or
xor
rcll
lcall
add
stc
orb
rcr
leave
dec
cli
cli
fnstcw
adc
or
js
mov
cli
jo
and
les
imul
bound
sbb
ss
mov
rolb
inc
out
lahf
sub
loop
xor
lea
push
jmp
sarb
mov
inc
add
mov
lods
add
daa
mov
sbb
loop
test
inc
xchg
lcall
aam
push
inc
ss
push
mov
sub
sub
jae
add
and
pop
inc
mov
ret
mov
jnp
js
enter
or
or
pop
and
dec
add
cmpsl
sti
fnstenv
ds
div
orb
mov
adc
pop
adc
mov
jnp
cltd
and
test
push
push
syscall
stos
dec
shll
es
push
jl
addr16
xor
xchg
test
jl
adcb
xlat
inc
sbb
xchg
adc
mov
call
lods
leave
lret
iret
add
sub
int
push
mov
jne
in
cmp
movsl
pop
cmp
mov
rcll
test
into
inc
data16
es
stos
sub
jb
lods
iret
adc
mov
dec
cmp
dec
xchg
cmpsb
mov
adc
adc
insb
mov
pop
inc
push
and
js
popf
lds
les
xchg
ss
mov
mov
and
or
jecxz
int
jbe
and
call
pop
mov
mov
add
shll
cmc
mov
push
and
sarl
add
cmp
pop
xor
mov
sub
rcr
jle
stos
push
ret
faddp
sbbl
xor
lods
mov
jecxz
mov
cmp
lea
pushf
test
movsb
lods
xor
sbb
push
popa
jbe
ljmp
inc
mov
repnz
jns
jl
rorl
popa
adc
dec
mov
mov
lahf
pop
mov
ja
push
pusha
add
and
adc
adc
sbb
jno
cmp
xor
inc
adc
push
lcall
dec
mov
sbb
ds
push
jmp
push
push
movsl
jecxz
stos
cmpl
into
gs
pop
loop,pn
pop
outsl
push
xchg
test
stc
push
pop
frstor
into
cmp
mov
dec
add
stos
cmp
or
insb
mov
inc
mov
stc
mov
stos
mov
in
dec
sahf
push
or
bound
shll
ljmp
out
xchg
fmull
das
lahf
pop
enter
add
mov
sti
loop
xchg
xchg
adc
leave
outsb
cld
or
add
or
movsl
pop
cmp
push
mov
loopne
popl
xor
mov
outsb
xchg
addb
int3
jmp
pop
inc
ret
addr16
imul
cs
imul
and
xor
pop
dec
jno
and
adc
sub
into
mov
lret
out
xlat
pop
test
imul
xor
push
ljmp
add
push
pop
movsb
outsl
in
pop
xchg
mul
jg
ret
adc
test
sub
push
popf
push
add
xchg
ss
xlat
or
cmp
xor
mov
insb
pop
stc
insb
xchg
dec
cwtl
push
xchg
cltd
sahf
test
add
js
mov
outsb
in
dec
outsb
in
inc
push
xor
popf
pushf
lods
sbb
inc
xor
cmp
ljmp
stos
sub
cmp
orl
mov
pop
jle
pushf
mov
clc
andl
test
leave
lret
inc
mov
enter
fdivs
inc
stos
jecxz
jl
and
pop
cmc
mov
out
sbb
ret
mov
iret
pop
sahf
inc
or
cwtl
fwait
xchg
test
rcrl
jb
pop
mov
lods
pop
jmp
out
jbe
fnstsw
test
fwait
nop
pop
mov
lea
and
pop
aas
into
or
les
xchg
pop
out
insb
lret
pushf
mov
fidivrl
jb
rorl
push
xor
mov
loope
adc
dec
ljmp
mov
fldt
jmp
jp
sub
mov
add
xchg
sbb
sbb
test
lea
stos
out
addr16
push
ds
cmp
push
sub
mov
jp
cs
jns
repnz
mov
cwtl
nop
jne
decb
aas
shl
or
pop
sub
popf
sbb
dec
push
inc
icebp
jge
sbb
ficomps
mov
cmp
ret
and
adc
and
xor
xor
and
andl
pop
jae
js
mov
fcoml
repz
xchg
mov
mov
xor
call
push
cmp
sahf
roll
aam
mov
cmp
xchg
dec
sub
aas
push
popf
movsl
xchg
xor
jo
push
jecxz
scas
outsb
out
stos
mov
and
xchg
test
push
sbb
andl
rcrb
inc
ds
ss
aaa
xchg
sub
dec
adc
sub
insb
add
sub
add
cmp
aad
xor
add
je
call
pop
pop
fnsave
mov
in
jo
hlt
push
jbe,pt
in
mov
and
lret
inc
mov
mov
mov
add
ja
sbbb
jp
cmp
lret
insb
imul
lds
aam
or
sub
inc
rcll
arpl
test
jno
add
iret
cmp
adc
mov
or
pop
xchg
in
test
ds
pop
and
test
aam
inc
sub
int3
jne
xchg
fidivrs
jp
adc
or
dec
data16
dec
pop
test
pop
or
push
in
xchg
cltd
fdivrs
lock
dec
xchg
push
or
std
movsl
fimull
popa
cli
inc
pop
ss
roll
adc
inc
sub
add
push
bound
push
push
or
aaa
xor
or
mov
ljmp
cli
push
sub
mov
mov
mov
push
sti
loop
add
inc
aad
loopne
gs
mov
mov
movsb
out
sub
rcrl
sub
or
addr16
add
and
cmp
scas
bound
add
pop
loope
pop
mov
rclb
adc
sbb
dec
movsl
addr16
scas
cmp
leave
loope
xlat
movl
cwtl
pop
pop
fbstp
mov
dec
mov
ret
push
mov
mov
xchg
and
jle
addr16
fmul
cmc
hlt
dec
mov
sub
lea
or
xor
call
sbb
xchg
cmp
push
ret
sub
jo
sbbb
lahf
scas
negb
xchg
add
loope
mov
in
mov
decl
push
sbb
cmpl
pushf
pop
push
xor
mov
pop
daa
icebp
fisubs
hlt
es
jge
xorb
xor
jo
je
pop
xlat
xchg
lods
inc
cmp
inc
adc
pushf
adc
hlt
inc
xor
add
aad
out
xchg
and
inc
shll
inc
add
fcmovb
imul
inc
pop
fldl
jb
push
xchg
cmc
sub
fwait
cmpsl
pusha
test
cmc
outsl
mov
jmp
daa
lds
repnz
and
stos
sub
xchg
js
shrl
push
enter
fldt
xchg
jne
xchg
or
xor
int
and
and
fwait
adc
jle
sbb
add
aaa
les
psllq
mov
jl
jb
roll
pop
xorl
push
pop
je
sbb
mov
popf
repz
inc
jnp
stos
jns
gs
and
mov
xlat
lods
sbb
mov
sbb
inc
scas
mov
jl
fidivs
dec
dec
inc
test
in
xchg
add
jl
inc
mov
sahf
xor
in
fnstenv
mov
push
push
xor
loope
cmp
and
idivl
insb
les
cmp
pop
pop
mov
jnp
add
mov
add
jmp
mov
movsb
mov
loop
add
ja
add
push
cltd
pushl
lret
xor
mov
popf
fstps
pop
test
jbe
or
xor
and
pop
dec
sbb
sub
daa
outsl
and
xchg
leave
and
insl
sbb
xor
sub
inc
in
adc
or
dec
icebp
clc
cmpsb
decb
rcl
jae
cli
aaa
je
out
mov
pusha
ja
cmp
data16
sub
push
imul
movsb
leave
dec
movsl
pop
lret
mov
roll
push
pushf
notl
pop
mov
jl
loopne
shl
arpl
ret
fmull
jo
js
dec
je
add
out
into
lret
decb
xor
push
outsl
cmpsb
sub
ss
fwait
jae
cmp
xor
mov
std
lret
cmp
mov
ret
cmp
xor
push
sub
pop
push
sub
dec
xor
lods
mov
adc
mov
jmp
jge
imul
ror
mov
fldt
test
add
lcall
fsubl
stc
ficoml
repnz
out
jmp
or
pop
xchg
jp
adc
lock
xchg
outsl
mov
xchg
mov
or
lock
jmp
test
add
jmp
or
jge
mov
mov
and
fistps
mov
jmp
or
ja
jp
les
sbb
or
jg
dec
cmpsb
cmp
jp
adc
sbb
mov
imul
ret
adc
aaa
mov
mov
mov
les
in
icebp
sbb
push
int
mov
or
dec
and
xor
cmp
aaa
lcall
mov
xchg
cmp
mov
pshufw
in
je
sub
xchg
shll
std
mov
push
mov
shlb
loope
into
cltd
fwait
lea
nop
push
pop
sarb
out
lret
jmp
fxch
push
sbb
adc
outsb
inc
jmp
jno
mov
ss
mov
cmp
outsb
leave
pop
fldl
das
je
cmp
out
xor
lods
in
enter
out
or
or
out
and
adc
cmp
ds
cltd
imul
push
pushf
dec
cli
fcmovb
ja
jl
and
pop
cli
and
add
and
adc
and
mov
addr16
testb
outsb
pop
add
iret
xchg
ret
xchg
js
mov
xor
pandn
pushf
adc
mov
push
ds
cltd
iret
popf
add
xchg
cmpl
ret
mov
pop
and
shlb
mov
into
mov
add
in
ud0
lods
push
mov
lods
adc
jae
pop
adc
sbb
pushf
jecxz
mov
add
or
decl
pushf
adc
add
sub
pop
dec
leave
inc
outsl
enter
lret
pop
ret
cltd
ljmpw
xlat
cltd
cmpsb
pop
jg
inc
mov
daa
jnp
xor
and
or
or
jge
lcall
inc
or
and
loope
test
xor
aaa
xor
iret
ds
adc
jne
test
test
push
cwtl
add
test
push
mov
mov
fisttps
cld
xchg
push
stos
sub
xlat
push
insb
and
fdivr
out
xor
sbb
xchg
jle
insl
xchg
pop
pop
cmpsl
ret
into
or
aam
pop
push
imul
cli
sub
push
pushf
in
arpl
inc
call
hlt
push
mov
test
pop
sub
xchg
cltd
or
sub
ss
je
mov
out
adc
mov
adc
inc
icebp
ljmp
or
std
jp
and
dec
into
xchg
xor
inc
jle
add
or
aad
imul
push
pusha
into
jge
pop
lea
adc
xchg
mov
cmp
or
sti
cmc
dec
and
iret
imul
test
push
imul
adc
xor
mov
xchg
xchg
repz
sbb
std
por
in
lcall
lcall
or
add
ret
jnp
subb
mov
mov
lahf
fcoms
pop
mov
jne
orl
mov
push
inc
add
fwait
rcll
add
sbb
mov
arpl
sub
pop
ss
jecxz
cmp
ja
dec
mov
insb
test
add
popf
inc
xchg
ja
lock
push
rol
in
iret
add
ja
mov
int
shlb
xchg
out
mov
stos
mov
add
imul
adc
lcall
or
pop
push
adc
push
add
xchg
and
add
mul
xchg
ss
jbe
jp
nop
pop
and
lcall
mov
jg
xor
leave
aam
gs
lahf
push
mov
jns
jmp
lods
cwtl
jmp
mov
js
hlt
sub
adc
dec
jbe
imul
xchg
fidivl
jae
pop
mov
cmp
sti
fmuls
pusha
data16
inc
or
and
pop
lcall
sti
xor
fisubl
add
xchg
xchg
movsb
int3
leave
dec
jno
data16
jp
inc
dec
dec
pop
fiadds
pop
xchg
std
sbb
add
out
adc
pop
cmpsl
pop
fwait
mov
push
xchg
inc
pop
ja
ss
pop
mov
add
aas
cwtl
mov
clc
push
mov
pop
push
aam
cli
insl
test
out
mov
loope
cmpxchg
test
push
out
pop
loopne
repnz
xor
test
jo
push
and
lret
jo
jmp
add
add
lret
jne
mov
pusha
es
xor
and
leave
push
push
test
xchg
mov
les
jae
jno
fdivrs
out
mov
sbb
out
inc
fnstsw
inc
nop
cwtl
pop
add
mov
push
gs
mov
jl
mov
xor
sbb
and
sarb
out
sbb
test
fstpt
pop
lret
mov
inc
bound
or
add
cmp
sub
inc
jg
es
jo
clc
inc
dec
push
mov
fistl
pop
int3
dec
adc
xor
stos
add
imul
pop
push
mov
sbb
aas
inc
inc
lods
sti
lock
jbe
es
int
mov
cmc
pop
inc
popa
stos
push
subb
xchg
mov
jge
lret
ficoms
jo
cmp
popa
jg
mov
mov
mov
push
cs
out
ret
int3
enter
cmp
mov
cltd
dec
aas
mov
pop
sbbb
scas
xor
add
scas
adc
push
push
xor
cs
or
or
inc
xchg
sub
pop
mov
adc
dec
std
int3
fistpll
sbb
fistpl
ret
ja
mov
rcll
aaa
mov
xorb
jns
stc
pop
inc
pop
cld
fstpl
push
ds
push
and
xchg
repnz
mov
mov
test
lahf
ret
ss
lret
inc
mov
and
pop
jae
jae
stos
pop
outsb
mov
pop
inc
push
outsb
imul
adc
pop
cmp
mov
xor
xor
mov
xchg
lock
cltd
mov
stos
out
fidivrl
icebp
shlb
imul
repnz
leave
divl
movsb
call
jnp
mov
or
cld
pop
cmp
push
sbb
jo
or
dec
sarb
mov
lcall
decl
xchg
or
mov
xor
or
push
call
sti
in
test
cmp
sbb
sbb
psubw
cmpsl
scas
push
cmp
cmp
shl
negl
loope
mov
outsl
pop
pop
pop
adcl
mov
ds
push
int3
fwait
mov
adc
and
push
pop
in
mov
push
std
out
pop
into
fs
xchg
jle
add
adc
icebp
jg
popl
in
xor
iret
push
jne
fimull
mov
faddl
into
addr16
adc
test
inc
aas
std
adc
sbb
rorl
add
sbb
sub
test
mov
or
fsts
mov
sub
adc
es
mov
int3
pop
jo
daa
jmp
pop
fstp
dec
jl
mov
pop
sbb
les
jno
push
daa
mov
fwait
int
push
adc
mov
cmp
ret
inc
ja
lods
xchg
mov
mov
insl
and
mov
js
xchg
jne
xchg
dec
stos
dec
sbb
mov
or
push
push
xchg
inc
je
jg
push
mov
xlat
jge
sub
pop
xchg
shlb
in
aad
pusha
loopne
outsl
mov
insl
imul
cltd
test
or
push
sbb
lds
pop
xor
fistpll
sti
mov
adc
ljmp
cmp
and
lds
fyl2xp1
inc
xor
call
insl
dec
or
les
lahf
cmp
dec
push
jle
mov
shll
out
cmp
xchg
push
mov
sbb
cltd
repz
cmp
lods
stos
push
lret
push
stos
push
pushf
inc
jno
mov
fadds
pusha
decl
loopne
and
dec
xor
fcomip
inc
pop
movsl
inc
pop
inc
mov
pusha
sbb
pop
mov
or
negb
in
jp
mov
adc
inc
and
jns
addr16
loopne
cmp
lcall
sbb
xor
xor
repz
add
sub
shl
daa
sbb
xor
pop
xor
add
mov
fdivr
hlt
lods
mov
add
fisubl
dec
or
lock
xlat
insl
aad
push
pop
sub
jo
cmp
xchg
xlat
in
ror
adc
imul
mov
add
push
repnz
jne
lea
repz
cmp
mov
nop
mov
inc
icebp
inc
sub
stos
inc
aaa
add
adc
sarb
push
sub
mov
xlat
test
jne
add
pop
sub
sahf
fdiv
inc
xchg
add
jg
and
loop
repz
add
pop
movsb
daa
push
js
and
xor
rcl
push
inc
cmp
push
dec
jle
jle
or
or
mov
xchg
jnp
xchg
inc
dec
pop
es
push
arpl
fucomip
push
pop
xchg
sbb
jo
push
shrb
loopne
std
dec
push
out
and
mov
repnz
adc
or
lea
popf
add
popa
xchg
ror
inc
into
shrb
fisubs
add
sub
fsubrl
mov
push
aas
push
xor
add
push
repz
dec
imul
dec
in
xchg
sbb
addr16
or
fiadds
fnstcw
and
mov
dec
dec
cmp
pop
imul
sbb
push
jmp
jecxz
rcr
ja
pop
dec
mov
cmp
push
and
test
stos
sbb
lret
lar
rcl
mov
std
and
mov
enter
mov
jnp
mov
inc
daa
dec
or
fisttpll
or
mov
aas
or
in
cmp
cli
hlt
sub
rclb
fs
arpl
pop
xor
rorl
dec
pop
addr16
aam
pop
cmpsb
fsts
jl
fcoml
dec
shlb
mov
cmp
les
pop
fwait
test
cmc
sub
inc
jmp
lahf
ss
pop
pop
push
out
mov
fmuls
lock
cltd
out
cwtl
jo
in
or
push
add
sub
dec
aam
dec
jbe
jle
imul
mov
inc
jno
mov
or
xlat
aam
insl
fistpl
push
jne
je
jp
fistl
pop
or
sbb
and
xchg
es
xchg
int
into
inc
fwait
and
adc
push
scas
in
jne
xor
int3
push
lds
out
dec
into
xchg
leave
rcll
push
xchg
dec
lods
push
jp
lock
lods
movsb
sub
push
or
test
daa
fcomps
mov
sbbb
adc
out
dec
add
jmp
cli
pop
adc
js
mov
repnz
daa
cmp
incl
into
mov
push
das
adc
adc
aaa
sarl
sub
stos
rorl
fwait
xchg
nop
sub
adc
and
add
or
mov
xchg
mov
lcall
stos
or
addr16
mov
mov
jge
test
dec
std
push
icebp
pop
mov
jo
cs
testl
inc
add
cltd
pop
push
lret
in
daa
movsl
adc
je
rcrb
int
sarl
adc
dec
hlt
or
xor
aam
mov
xchg
lret
call
push
cmp
roll
dec
and
js
dec
xlat
push
cmp
popa
cs
aam
lcall
fwait
inc
jl
aam
icebp
fstpt
cmp
pop
repnz
rcll
cltd
pop
loopne
movl
inc
movsl
pop
lret
pop
jo
gs
cmpsl
xorl
popa
cld
pop
loopne
mov
xor
movsb
lods
in
outsb
insb
jmp
pop
inc
mov
cli
or
jmp
lock
or
pushf
lea
sub
jmp
movsl
sub
in
fwait
sub
mov
or
push
add
cld
sub
call
jl
fstl
cmpb
ss
mov
lds
mov
inc
andl
loop
add
mov
push
pop
loop
dec
xchg
cld
sub
ret
or
inc
loop
xor
cmp
loop
sub
subb
arpl
sbb
test
sti
jecxz
movsb
xlat
cli
and
in
cmpb
mov
test
jl
mov
rcrb
mov
mulb
call
test
test
enter
imul
mov
sbb
testb
addr16
mov
cmp
repnz
lock
repz
pop
fisubl
dec
pop
nop
jbe
cmp
imul
adc
sub
lock
incl
jns
adc
loop
repz
cmp
vunpckhps
leave
loopne
lret
pop
cli
cmp
mov
mov
lods
rclb
shr
pop
mov
and
pop
sahf
mov
insb
mov
stos
pop
ljmp
jl
adc
cmp
int3
sbb
adc
fwait
push
fdivrl
xor
movsl
and
rcl
sbb
out
js
mov
pushf
push
mov
pop
call
mov
ds
pop
outsl
jmp
shl
into
stc
cld
jne
leave
stos
or
inc
inc
sub
cmp
cmp
mov
outsb
pushf
jmp
hlt
cmc
dec
aad
pop
dec
jp
xchg
stos
dec
push
cltd
cmpsb
sti
xchg
or
sbb
cmp
loop
inc
into
xlat
xlat
das
popa
sbb
fcompl
adc
imul
jne
div
add
jmp
scas
outsb
js
call
rcrl
jmp
jnp
jmp
ja
adc
cmp
mov
dec
xchg
ret
ljmp
mov
pop
dec
mov
lret
or
out
shrd
aas
mov
orl
addr16
mov
mov
lret
inc
cmp
in
fcomps
inc
cwtl
test
xchg
lahf
les
lcall
andl
cld
rol
popa
or
stc
mov
add
push
idivb
mov
sub
jae
in
add
lods
imul
mov
mov
xchg
loop
inc
sub
cmp
mov
popa
nop
jno
sbb
lcall
repnz
imul
test
ljmp
jns
add
hlt
test
dec
scas
adc
gs
push
adc
mov
jp
sub
and
add
add
stos
repz
lock
xor
xor
mov
out
into
in
addr16
mov
fcmove
stos
mov
or
xchg
cmpsl
popa
or
mov
popf
nop
mov
jo
daa
xor
faddl
adc
mov
repz
jle
rol
ffreep
decb
pushf
sbb
mov
mov
and
arpl
jbe
lods
and
pusha
adc
and
repz
outsl
or
adc
and
jbe
sbb
dec
sub
mov
push
mov
mov
add
in
int3
out
mov
ljmp
fidivs
nop
fimuls
loope
cmp
xor
fcmove
mov
sarl
add
les
mov
push
das
mov
cmc
in
push
sub
fld
ret
sbbb
paddq
adc
repz
mov
xor
xor
add
sub
mov
jno
ret
pop
lea
pop
popf
aaa
lods
xorl
sub
inc
arpl
mov
xchg
int
cmp
mov
jmp
lock
sub
mov
or
mov
push
addb
insb
in
test
int
push
pop
sub
pop
bnd
pop
lock
lret
inc
xchg
fsubrs
shrl
xlat
adc
push
mov
mov
and
lret
sub
sti
sahf
inc
ret
adc
mov
mov
mov
and
stos
std
in
les
jne
fwait
lret
fs
popf
out
ljmp
jo
fs
push
pushf
pop
sahf
push
pop
sbb
pop
push
mov
dec
out
or
add
mov
sub
in
inc
push
lods
jp
lock
or
sbb
gs
xchg
adc
jg
mov
movsl
jle
mov
and
lods
mov
mov
add
cltd
ret
mov
jle
push
rorb
xor
rorb
xchg
or
mov
mov
lock
dec
fucom
pop
pop
movsl
in
push
mov
pop
inc
xlat
cmp
in
pusha
or
adc
adc
xor
fdivs
jbe
jne
and
es
dec
adc
jb
or
pop
subl
sbb
in
out
mov
jno
addr16
add
test
pop
aad
cld
inc
cmp
cmp
adc
rcll
mov
mov
data16
jnp
repnz
xchg
adc
push
popf
xor
fcmovb
imul
pop
pop
pop
ja
sub
push
cmpsb
bound
dec
pop
mov
jae
xchg
ds
push
popa
jns
pop
add
dec
pusha
and
insb
add
mov
lahf
bound
and
fs
jle
pop
pusha
leave
movsb
jp
sbb
xrelease
aad
lcall
mov
mov
stos
mov
es
mov
inc
mov
xchg
int
sbb
divb
adc
das
test
mov
adc
icebp
ja
mov
push
popl
jle
xor
adc
pusha
pop
inc
test
mov
xchg
scas
adc
add
or
fistpll
mov
dec
inc
adc
lret
scas
data16
int3
movsl
push
push
lods
add
jnp
push
add
mov
in
adc
lahf
cld
out
sti
sub
insb
push
xor
mov
sbb
lahf
jne
ret
adc
adc
int
inc
dec
ret
and
jnp
cld
fldenv
mov
push
adc
bound
lock
and
insl
popf
add
sub
pop
and
cli
fisttpl
xchg
pop
out
jb
add
xchg
ds
cs
pop
in
and
dec
push
hlt
mov
popa
mov
sbb
cmp
cwtl
aad
loopne
adc
add
adc
jno
mov
or
mov
cmpsl
stos
outsl
cld
aad
je
cwtl
cmpsb
adc
dec
cmp
sub
xchg
sbb
ss
bound
data16
mov
ljmp
mov
out
pusha
ja
fbstp
xor
fwait
xchg
fistpl
mov
and
dec
mov
xor
push
inc
pusha
and
mov
out
add
shll
jne
repnz
pop
test
fists
and
cmp
pop
lahf
adcl
test
fdivrl
insb
stos
into
movsl
inc
push
mov
pop
xchg
jns
fbld
cmp
dec
ljmp
add
sbb
outsb
sub
push
inc
jmp
pop
arpl
lea
hlt
or
sbb
dec
cmp
repz
fstpl
roll
add
test
cmp
movsb
push
xchg
cmp
xchg
xchg
add
sub
stc
push
int3
insl
jecxz
in
leave
adc
out
dec
and
and
xchg
mov
jb
and
sarb
push
stos
sbb
and
sub
mov
movl
loop
adc
repnz
add
daa
pop
sbb
mov
or
popl
decb
jle
ret
imul
sti
mov
mov
into
fcompl
inc
lds
stos
ficompl
lock
push
pop
scas
xor
xchg
pusha
in
push
pusha
mov
cmpsl
rcr
mov
mov
insl
dec
mov
roll
pop
ret
push
sub
cmp
andb
loope
or
lods
push
shlb
or
lret
or
jle
loope
decb
lds
movsl
mov
repnz
fwait
data16
rclb
sub
stos
mov
mov
sub
addr16
test
divb
fwait
movsl
adc
lods
scas
jns
out
int3
lcall
add
fcomip
sbb
mov
in
pop
repnz
jecxz
sbbb
mov
inc
daa
lcall
repnz
dec
mov
out
dec
jno
cmp
mov
inc
mov
insb
in
sub
stc
push
mov
add
fstpl
sub
xchg
out
lock
pop
outsl
sbb
scas
enter
jo
in
cmp
fdivl
sub
cmpl
jmp
pop
movsb
jl
mov
call
xchg
push
lea
scas
ja
sub
ja
in
dec
rolb
push
mov
xchg
leave
dec
mov
out
push
jg
in
popf
dec
ss
popa
push
jb
mov
hlt
push
dec
ja
push
and
jo
movsl
repz
or
in
cmp
jmp
nop
test
mov
dec
out
mov
pop
sub
xchg
adcb
out
xchg
sub
pop
push
stc
andb
push
dec
mulb
xchg
in
cmpsb
rolb
out
fnstcw
bound
sbb
sbb
pushf
inc
ficompl
dec
imul
mov
test
xchg
jmp
inc
cmp
push
ljmp
jns
cmp
push
testb
inc
or
mov
stc
pop
jno
pop
sub
mov
jo
mov
loope
shll
lcall
sub
sub
stos
and
ds
mov
cld
les
fcmove
jnp
jle
fwait
lea
cmc
ljmp
push
fs
add
adc
xchg
pop
sub
frstor
sbb
mov
add
or
mov
pop
daa
mov
lods
mov
decl
mov
cwtl
mov
xor
outsb
dec
mov
mov
and
pop
rcll
testl
mov
cvtdq2ps
adc
and
loopne
je
inc
xor
mov
push
roll
pop
xchg
pop
lret
ror
sbb
mov
inc
out
pop
add
hlt
mov
push
fs
inc
cld
jmp
in
sub
adc
or
sarb
mov
mov
push
mov
xchg
dec
loope
xchg
pushf
imul
enter
out
out
pop
inc
jmp
cltd
xlat
and
cmp
xchg
mov
cmpsl
insl
xor
call
aam
stos
sbbb
mov
adc
stos
push
scas
and
aas
inc
push
fwait
add
add
popf
test
ret
lcall
or
adcb
test
loopne
ret
xlat
aaa
xor
dec
adc
insb
mov
mov
icebp
pop
shrl
fimuls
or
or
add
jno
mov
cmp
mov
mov
jnp
cmp
inc
mov
and
out
cmpb
loopne
push
cmpsl
pop
les
cmp
pop
js
loope
push
loopne
aaa
add
test
pop
jno
pop
lcall
mov
leave
shrl
adc
add
mov
dec
neg
xchg
add
add
jnp
test
pop
inc
pop
leave
jo
pop
xchg
pop
jo
dec
jbe
xor
fwait
rol
xchg
imul
jno
fstps
mov
shll
stos
imull
sbb
inc
int
inc
push
add
ret
cmp
push
lret
push
xor
ljmp
pop
xchg
mov
imul
fucom
cmc
mov
filds
jbe
aas
inc
lods
in
orb
mov
sbb
jns
in
adc
adc
xor
jp
enter
sbb
dec
movsb
fidivl
xchg
js
mov
push
and
scas
enter
add
pop
popa
pop
in
shrb
sti
test
pop
mov
addl
mov
xor
mov
or
cmp
add
shrb
loop
jb
scas
jns
pop
xchg
xchg
movsl
xchg
push
mov
addr16
int
pushf
or
xchg
imul
sarl
lock
sbb
popf
adc
push
jb
stc
jl
jno
push
xchg
negl
mov
rorl
xchg
icebp
rolb
and
adc
push
xchg
or
dec
mov
inc
inc
popf
mov
mov
stc
pop
push
push
mov
nop
jg
jbe
cmp
mov
xchg
mov
imul
icebp
xchg
or
out
fnstsw
bound
lea
out
insl
or
loope
pop
xchg
adc
pop
mov
in
fnstenv
ret
mov
das
clc
xor
test
jmp
mov
in
mov
out
jnp
loopne
gs
xor
clc
xor
xchg
mov
xchg
lret
mov
xor
decb
sub
mov
out
jne
les
mov
ss
repz
xchg
pusha
jo
sahf
rol
outsb
xor
mov
xor
add
mov
push
jo
or
jb
adc
xchg
cld
out
les
lock
push
xor
xchg
repnz
dec
xchg
sbb
or
ficompl
push
repz
mov
pop
dec
sbb
jns
or
call
mov
js
test
pop
sub
or
insl
mov
cmp
adc
rcrb
fiadds
roll
sbb
movsb
int3
mov
jne
ja
cmp
cmp
cmp
jl
jge
es
in
jmp
dec
cltd
daa
and
fisttpl
mov
sub
mov
or
or
inc
xchg
mov
insl
jns
and
cli
lock
iret
divb
mov
aad
and
test
in
pop
mov
mov
add
jns
lret
push
sbb
pushf
sbb
das
add
test
movsb
cmp
or
inc
xor
pop
out
and
pop
push
xchg
xchg
or
cmp
fldt
arpl
adc
and
pop
sbb
cmpsb
not
cltd
cmp
xchg
int
xchg
or
and
lret
push
add
jo
and
or
jne
movsb
dec
clc
daa
sbb
xor
push
pop
mov
ljmp
sub
cmp
maxps
sbb
outsl
jo
xlat
lods
adc
pop
cli
iret
mov
jo
bswap
dec
xor
test
loope
fmuls
test
addl
xchg
pop
and
xchg
cmpsb
gs
gs
shl
inc
jl
pop
pop
sbb
in
ds
cmp
sub
aam
dec
das
mov
mov
xlat
js
push
pop
xchg
dec
daa
mov
xchg
sbb
dec
pushf
dec
jb
push
les
inc
dec
js
out
cltd
cmc
mov
inc
int
pop
jno
push
stos
inc
cmp
scas
aam
sbb
mov
add
fstpt
push
mov
mov
add
js
test
inc
add
and
push
ds
add
push
sbb
lods
jp
loopne
out
je
dec
mov
mov
nop
in
inc
jle
mov
mov
xor
in
pop
cmpsl
ds
jge
call
jp
pop
bound
movsl
pop
mov
gs
add
js
jp
sub
out
mov
sahf
mov
bound
iret
mov
mov
inc
or
rcll
and
jl
test
pop
fstpl
fucomi
push
hlt
and
lret
gs
inc
enter
xchg
lds
clc
xchg
divl
mov
addr16
adc
fstpt
pop
or
idivl
mov
andl
cli
sub
xchg
pusha
movsb
daa
xchg
and
je
imul
add
fistl
jle
and
lods
and
lret
push
fs
jge
cltd
or
and
mov
xlat
inc
sub
mov
add
pushf
pop
sub
arpl
clc
sub
jle
push
cmp
jp
xlat
xchg
cmp
push
xor
outsb
into
and
test
sbb
arpl
in
fwait
jle
rclb
into
out
ror
jle
test
js
mov
xchg
mov
loope
mov
or
mov
sub
cmpl
inc
cmp
cmp
xchg
xlat
push
popf
in
xchg
fidivs
ret
scas
sbb
adc
enter
push
sub
xchg
jae
pop
into
push
clc
dec
test
and
loopne
cmc
std
dec
stc
mov
pop
lcall
out
cmp
scas
push
mov
add
sbb
loope
xchg
cld
dec
pop
mov
test
or
mov
or
sbb
rclb
in
cmp
jns
mov
dec
fldcw
call
xor
and
push
lds
clc
mov
scas
fs
and
lods
fmull
inc
add
daa
inc
sbb
mov
loopne
push
arpl
popf
in
lods
mov
mov
ror
inc
ljmp
fwait
ja
xchg
arpl
jns
imul
mov
and
dec
or
mull
incl
push
aad
stos
push
inc
pop
das
mov
sarb
cs
stc
and
mov
sbb
inc
jae
repnz
popf
imulb
pop
push
lahf
out
inc
jbe
or
into
mov
pop
push
dec
xchg
addb
ret
in
push
xor
mov
sbb
mov
es
inc
sbb
cmp
mov
fstl
mov
jae
mov
adc
pop
push
cwtl
pop
outsl
sbb
movaps
scas
fimuls
add
mov
sub
mov
scas
xor
pop
or
sti
cld
push
mov
sub
ret
popa
xor
sbb
jl
imul
popa
push
in
sub
and
cld
jle
push
clc
pop
daa
int3
xchg
xor
gs
push
les
mov
ret
adc
jno
adcl
rol
addr16
cmp
cmc
popa
dec
add
ljmp
lahf
es
cs
outsl
mov
icebp
mov
dec
jmp
ret
add
lock
cs
scas
lcall
cmp
fnsave
mov
inc
out
xor
call
sub
stc
fsubrl
fcomps
pushf
pop
andb
inc
ret
das
push
aaa
dec
in
ret
lret
push
adc
pop
jnp
aas
xchg
jne
mov
inc
pop
lret
mov
bound
cmp
pop
push
pop
mov
insb
mov
and
cwtl
out
sub
enter
fistpl
inc
icebp
repnz
cmp
push
les
push
lret
and
idivl
and
cmp
es
popa
dec
lcall
data16
stc
in
xlat
or
jg
ds
ss
out
and
leave
js
push
jb
mov
push
pop
mov
mov
mov
or
ret
jae
mov
dec
pop
pop
push
movsb
fyl2x
mov
cltd
mov
push
fnsave
lods
incb
xlat
js
jecxz
jbe
cmp
daa
pop
shr
shrl
mov
inc
es
dec
xor
fwait
mov
or
std
inc
pusha
leave
xor
lcall
out
push
stos
xchg
enter
dec
testb
sub
sarl
add
movsl
mov
lods
lret
aad
lret
jecxz
jb
fimuls
cmp
dec
aad
jle
push
xchg
popf
ss
or
roll
ret
jne
mov
xor
xlat
stos
adc
jg
ja
in
add
sub
lea
fbstp
sub
shr
xchg
dec
push
mov
mov
cmp
cmp
enter
add
mov
scas
add
das
lods
int3
xchg
mov
xor
sahf
mov
dec
lcall
cmp
xor
lock
xlat
mov
jae
inc
xor
in
dec
loope
inc
inc
jne
mov
sbb
in
mov
and
and
sahf
popf
lret
movsl
cmp
add
xor
pop
cmp
out
pop
jecxz
stos
iret
or
es
repnz
xor
xor
flds
or
mov
call
pop
mov
mov
out
jb
cmp
sub
aad
add
lods
push
mov
je
xchg
and
test
es
xchg
sbb
bnd
push
add
mov
shlb
cmp
mov
adc
popf
pop
insb
or
aam
dec
push
call
ds
in
mulb
imul
jno
push
hlt
xor
sbb
test
in
inc
mov
mov
enter
dec
mov
fnstcw
mov
xchg
xchg
xchg
dec
jbe
xor
es
pushl
je
inc
add
mov
cmc
push
or
pusha
cmp
out
inc
shll
xor
cmpsl
rorb
cmp
addr16
jnp
into
push
lcall
idivl
loopne
pushf
adc
icebp
jge
pop
cmp
or
cmpsl
stc
sbb
scas
jb
stc
sub
scas
insl
popa
push
fnsave
xor
sub
jp
and
sbb
fldl
lods
jbe
xor
dec
std
sbb
push
sbb
in
or
xor
add
shr
fistps
fdivrl
js
jmp
jle
clc
add
mov
jno
jns
daa
add
mov
mov
aam
pop
push
mov
aas
push
pop
jnp
in
dec
jne
push
xor
mov
mov
sbb
inc
push
push
jmp
mov
adc
xchg
loopne
xor
insb
or
popa
xchg
adc
push
int3
js
pop
ja
ret
mov
push
cmp
mov
scas
addr16
and
add
iret
arpl
outsl
dec
mov
fdivr
outsb
es
jns
lret
sub
fadds
mov
enter
shlb
xor
dec
xor
out
aas
leave
bound
jg
std
popa
add
xor
pop
dec
lods
scas
pusha
movsl
jae
imul
movsb
ss
loop
arpl
repnz
mov
stos
inc
sti
in
int
nop
dec
or
adc
pushf
mov
and
push
sub
mov
fwait
jo
mov
out
xchg
lods
mov
jge
dec
push
nop
cmp
jbe
rol
adc
bswap
loope
cmp
idivl
stos
aas
hlt
jnp
cli
dec
test
arpl
dec
pop
mov
popa
stos
test
or
push
mov
add
xchg
aas
insb
pop
sub
fwait
arpl
loop
push
int3
adc
jge
sbb
mov
xchg
dec
pop
jmp
pop
mov
jmp
roll
sub
xchg
push
addb
add
not
pop
push
fwait
pop
sahf
scas
shlb
bnd
fldcw
add
loop
add
or
std
in
xor
orb
inc
mov
mov
or
adc
rcl
sarl
pop
pop
jnp
sbb
cmpsl
adc
jo
clc
stos
jns
mov
clc
sbb
sahf
pusha
imul
rcrl
jl
loope
mov
imul
aad
pop
lds
jb
cmp
push
inc
mov
outsl
mov
outsb
push
enter
xor
in
cmp
pop
push
pop
in
das
stc
ret
lea
sarl
lods
adc
int3
and
xor
sub
enter
xchg
add
popf
fisubrs
cmc
jle
lods
push
adcb
pop
inc
sub
add
dec
mov
popa
scas
mov
adc
aad
add
loop
xchg
jns
mov
xchg
or
lods
push
dec
mov
adc
xor
icebp
popa
shlb
aas
icebp
pop
add
and
jmp
push
mov
jbe
mov
lret
repnz
popf
out
push
push
lahf
in
inc
push
mov
lret
in
repz
movl
mov
into
movsl
ljmp
add
shrl
in
mov
sarb
mov
shll
sti
dec
insb
movsl
outsb
leave
dec
sub
add
in
xor
and
adc
inc
dec
mov
test
shlb
xchg
mov
lahf
inc
ljmp
scas
xchg
push
pop
and
in
jnp
and
mul
cmp
mov
add
mov
pop
dec
mov
xchg
ds
inc
and
pop
push
ret
data16
push
int
fs
adc
leave
bound
adc
add
push
mov
int3
out
xor
lods
int
loopne
adc
sub
lods
jecxz
push
add
popa
xchg
and
loopne
subl
xchg
push
mov
and
std
mov
lret
dec
pop
sub
mov
mov
jl
sub
push
jle
enter
jge
and
cmp
stos
mov
cmp
jle
js
or
pop
and
dec
jne
ss
call
subb
test
push
outsb
movsb
dec
jae
xor
mov
push
dec
sbb
leave
push
xchg
dec
add
and
ret
push
aaa
stos
clc
mov
cmp
xchg
in
adc
pop
xlat
addb
call
sub
cltd
ljmp
negl
test
cs
add
fidivl
push
lods
pop
rcl
push
pop
out
fimuls
hlt
mov
in
or
icebp
lret
ljmp
lods
test
or
stc
cmp
sbb
insl
pop
out
daa
cmc
xor
xchg
pop
jl
rol
inc
xor
sub
adc
inc
rcrl
push
push
sti
dec
es
mov
inc
mov
call
jp
mov
mov
and
adc
mov
xchg
sub
imul
cmc
decl
pop
loopne
mov
test
subl
js
mov
dec
lods
or
push
push
mov
sti
or
mov
jns
fstpt
lods
test
dec
cld
push
ss
pop
xor
cmc
dec
dec
lods
les
mov
jae
xchg
rorb
hlt
ror
adc
adc
icebp
cmp
ret
pop
out
clc
xchg
dec
cwtl
xor
mov
xchg
mov
clc
in
pop
mov
xchg
cmpsb
outsb
mov
mov
dec
dec
xchg
dec
and
popf
repz
cwtl
xlat
repz
jge
test
lock
daa
sbb
movsl
mov
sub
repz
insb
sahf
ror
push
pop
sbb
mov
lcall
lds
loopne
aam
jmp
inc
gs
lea
mov
and
xor
mov
sti
dec
das
loopne
mov
int3
xchg
jno
and
add
pop
or
push
sub
pop
ljmp
inc
out
iret
call
rclb
mov
fldt
xchg
fidivrl
xchg
out
push
in
aad
mov
add
mov
inc
mov
roll
out
push
stos
cld
rcr
mov
ret
lcall
sbb
add
lods
popf
push
xorb
mov
cli
ret
test
call
mov
sbb
lods
iret
js
adc
push
xor
sbb
movsl
scas
lods
enter
ss
jmp
outsb
sahf
scas
jp
pushf
cwtl
in
jecxz
and
mov
adc
daa
cld
jo
loopne
std
mov
pop
int
fidivs
insl
mov
cmp
pop
sub
pop
in
mov
push
adc
xchg
fidivrl
mov
pop
dec
mov
push
sub
notb
add
out
bswap
lret
add
lods
lods
pop
mov
dec
sub
and
cmp
dec
sub
add
daa
mov
scas
das
icebp
push
jmp
test
mov
sbb
aad
mov
cmp
xor
int3
aad
outsl
inc
push
gs
mov
sub
add
adc
sub
and
decl
bound
hlt
xchg
test
ret
jno
aas
loop
hlt
or
xor
mov
enter
mov
or
adc
call
adc
mov
mov
filds
mov
sub
ja
mov
ret
adc
cmp
adc
data16
jl
mov
mov
fstl
push
insl
mov
lret
stc
out
mul
shll
xor
sub
jno
out
je
pop
push
call
lret
jae
dec
lds
jg
sbb
xchg
out
push
xor
dec
stc
add
cmp
mov
lahf
lcall
mov
jle
inc
mov
lock
aam
cmp
int3
jle
and
xor
and
jne
push
push
test
dec
mov
iret
mov
jae
add
dec
sbb
movsl
aad
mov
lret
jo
lods
das
jle
dec
push
mov
dec
cmp
sbb
out
gs
jge
fwait
cmp
and
xchg
out
mov
dec
cltd
arpl
aam
mov
sbb
mov
pop
pop
xorl
inc
rorb
adc
cmp
pop
jne
cmp
dec
mov
in
insl
xor
mov
mov
repnz
stos
nop
aad
movsb
nop
xor
mov
mov
sbb
inc
or
aad
mov
test
jbe
xchg
add
add
push
or
sub
fs
mov
out
sbb
push
arpl
sbb
xor
sbb
inc
ss
xlat
gs
fimuls
push
cmp
sub
imulb
xchg
adc
fwait
icebp
xchg
sub
cltd
jno
out
push
mov
out
pop
pop
imul
jp
mov
mov
ffreep
sub
lahf
xor
test
jne
into
jmp
adc
rolb
lret
inc
push
das
pop
add
mov
inc
jmp
cmpsb
adc
ss
and
mov
cmp
mov
mov
mov
ds
aas
add
mov
rorl
pop
mov
stc
loopne
call
push
mov
out
stc
popa
lock
sahf
mov
inc
xlat
cmp
xorl
enter
push
dec
and
or
mov
lods
jno
adc
sar
xor
cmp
mov
push
fwait
xor
lcall
leave
out
xchg
push
imul
pop
ret
cs
loope
cmc
xchg
test
pop
lahf
test
cmp
fsts
inc
leave
sub
mov
push
lock
sub
jp
orl
loope
mov
and
fwait
sti
jmp
pop
in
fimuls
mov
xchg
or
out
popf
add
fisubrl
enter
int3
in
dec
fcomps
mov
or
repnz
sub
lods
adc
scas
aad
pop
adc
sbb
leave
jmp
sbb
iret
pop
fwait
push
jb
jmp
and
jne
shr
nop
sub
mov
sbb
cmp
inc
stos
hlt
aas
jb
popa
adc
pop
int
mov
das
repnz
cwtl
jge
in
mov
xchg
scas
lcall
xlat
cltd
imul
aas
push
cmp
cli
aas
inc
cmp
push
stos
ja
xor
cs
jmp
sbb
lds
or
mov
rol
int
sub
xchg
mov
outsl
sub
js
mov
adc
insb
sahf
mov
xor
xchg
and
cmp
push
add
js
sbb
cmp
push
cmp
scas
or
and
aad
and
cmpb
xchg
and
loop
adc
pop
xlat
dec
shll
in
sbb
pcmpeqw
dec
cli
jge
mov
push
fstps
movsl
cld
ud2
sti
dec
out
adc
xchg
out
push
loope
sbb
cmpsb
lock
sub
lock
test
cmp
movsb
push
mov
or
pop
mov
pop
mul
add
popa
popf
mov
pop
cmc
insl
jle
pop
cmp
jmp
mov
jl
arpl
push
imul
pop
pop
inc
and
mov
jmp
inc
decl
sbb
mov
jo
movsl
mov
fists
jmp
push
mov
loope
add
or
fists
jmp
cmpsl
mov
lahf
out
test
inc
popf
dec
jmp
int
xor
imul
lods
sti
js
xchg
rcr
les
loope
dec
repz
pop
mov
into
arpl
roll
push
jle
aaa
mov
inc
movsl
fdiv
in
dec
mov
fldenv
shll
jmp
adc
fcmovnbe
push
jle
pop
push
scas
jno
dec
or
aaa
scas
daa
pop
repnz
pop
pop
push
das
pop
data16
shll
inc
xor
dec
or
add
in
mov
int
mov
and
ljmp
cmc
and
fidivrs
orl
cmp
fs
sub
inc
and
xchg
mov
mov
into
adc
xchg
sub
mov
sti
aaa
pusha
push
pop
or
sar
xor
jnp
fdivrs
dec
inc
adc
adc
adc
jae
dec
aaa
test
mov
or
int3
in
mov
inc
xchg
lods
aas
adc
push
and
inc
dec
xchg
cmp
or
adc
test
sbb
repz
xchg
dec
mov
insl
sti
stos
pop
dec
loope
dec
pop
inc
xchg
adc
iret
ret
in
out
jcxz
jecxz
jae
cmpsb
fdivl
ret
pop
add
in
jne
imul
xchg
sahf
popl
call
cwtl
pop
cmpsl
imul
pop
ror
dec
jbe
mov
test
sbb
mov
inc
mov
push
xchg
int3
push
testb
mov
js
aam
and
inc
xlat
movsb
push
push
mov
sub
inc
aad
aas
icebp
js
fnstsw
mov
mov
cvttps2pi
and
and
gs
jns
adc
ret
dec
fists
fcomps
adc
dec
jnp
mov
sub
pop
int
out
xlat
push
pop
fstpl
mov
aas
call
xchg
test
leave
mov
pop
mov
test
mov
xor
movsl
je
mov
movsl
imul
pop
stos
aas
iret
mov
mov
mov
mov
mov
mov
push
daa
jo
cwtl
inc
aaa
arpl
add
sbb
inc
xor
fmuls
das
dec
xchg
jno
adc
data16
aas
cli
and
lds
adc
sub
mov
add
outsb
cmp
ds
arpl
dec
lret
push
in
orb
imul
mov
in
push
sub
mov
mov
dec
aaa
jmp
pop
jl
pop
push
sahf
adc
jne
ret
mov
pop
dec
mov
inc
das
fisttps
dec
dec
adc
mov
push
test
xchg
scas
clc
sti
or
sub
mov
xlat
push
adc
stos
sbb
sbb
decb
notl
mov
ljmp
jo
rcrl
or
movsl
mov
dec
jge
xchg
pop
and
cli
xchg
repz
cltd
adc
arpl
arpl
mov
scas
ljmp
add
fiadds
lret
and
fcmovne
xor
xor
fs
cwtl
mov
std
xchg
lret
jecxz
xchg
mov
jbe
ljmp
sbb
cmp
outsb
repnz
hlt
dec
jno
shl
xchg
imul
mov
pop
push
pop
shl
sti
jbe
test
xor
cmpsb
test
addr16
lds
arpl
mov
mov
lea
loopne
sbb
jp
push
sub
dec
mov
cmpl
rcrl
in
js
ja
fistpl
test
add
xor
insl
cmc
in
setg
mov
sti
out
fisubl
sar
idivl
or
and
and
and
add
xchg
mov
ret
and
and
xor
neg
into
int3
clc
aad
xchg
sbb
pop
or
int3
mov
mov
adc
cmp
repnz
or
call
xor
icebp
loop
pop
inc
loopne
sbb
cld
imul
repnz
jge
xchg
cli
es
movsl
outsl
mov
and
mov
xchg
mov
shl
add
mov
xor
adc
call
aas
adc
ljmp
mov
in
div
xchg
insl
jne
mov
imul
mov
lahf
repz
int
mov
into
xor
jno
shrl
sub
mov
jno
mov
xor
adc
sbb
js
push
dec
dec
push
add
testb
fcmove
lods
jo
lahf
shld
movsb
dec
pop
addb
push
in
les
cmc
lcall
push
fstl
mov
jne
aas
outsl
lret
pushf
xchg
jne
add
test
sbb
add
and
dec
in
xorl
add
lods
mov
in
sub
adc
jb
test
fstl
mov
xchg
xchg
pop
sarl
fidivl
pop
test
inc
mov
stc
pop
or
dec
mov
jnp
mov
push
test
add
aam
fdiv
movsl
popa
imul
fldcw
cmpsb
test
loope
imul
pop
aam
cwtl
xchg
std
jge
inc
testl
lds
xchg
dec
mov
fwait
or
mov
xchg
shll
cmp
in
lock
icebp
xchg
repz
addr16
popf
pusha
pop
push
mov
mov
pop
pop
push
or
mov
add
int
pop
xchg
mov
add
aaa
data16
pop
insb
lock
dec
sti
push
push
ja
pushl
inc
das
and
mov
fwait
dec
jbe
ret
jae
jmp
rclb
call
dec
inc
data16
aaa
shrl
popf
push
push
pop
inc
icebp
add
sahf
add
icebp
aad
xchg
insl
jg
loope
enter
test
mov
repz
loop
in
mov
rcll
popf
xchg
orb
cmp
sbb
ss
push
call
mov
sub
data16
sub
adc
pop
imul
mov
mov
xchg
rolb
adc
mov
sahf
rclb
sub
rcl
mov
mov
mov
fsubl
push
data16
add
fwait
loop
cmp
scas
movsl
adc
push
insb
pop
je
loop
sbb
jb
std
xorb
adc
mov
pop
shll
loop
sti
and
mov
mov
push
push
addr16
fisttpll
movsb
add
xor
mov
adc
scas
pop
je
sbb
mov
lret
fisttps
insb
adc
movsb
enter
inc
add
jp
mov
enter
jne
sbbl
pop
aad
cmp
lret
jno
sub
ficoms
mov
nop
fnstsw
ljmp
mov
inc
mov
popl
sbb
push
or
leave
pop
jmp
into
or
out
stc
mov
push
or
out
lcall
push
xchg
jl
dec
xor
addl
or
mov
ret
cmp
jns
mov
jns
add
inc
jmp
ss
pop
movsb
xor
loopne
pop
das
push
mov
clc
jb
mov
add
nop
cmp
dec
xlat
jp
decl
xor
xchg
mov
inc
scas
mov
push
adc
push
add
xchg
mull
dec
xlat
fucomi
mov
lods
or
pop
ja
mov
ljmp
dec
push
jecxz
jecxz
daa
and
iret
and
mov
inc
int3
loope
push
and
pop
xchg
jns
jp
ffree
ret
jnp
cltd
mov
add
xchg
mov
pop
jmp
pop
mov
imul
jge
test
es
rcrl
shr
add
fisubrs
adc
fwait
mov
dec
adc
int
push
sbb
sbb
sbb
lcall
jmp
jge
aas
faddl
mov
scas
dec
or
sahf
stos
inc
jg
inc
outsb
mov
nop
fcmovu
and
call
adc
xchg
cmc
push
push
or
cld
outsb
push
lock
popa
cli
roll
in
push
lahf
xchg
adc
mov
or
shll
out
adc
mov
add
xor
adc
test
aad
int3
xchg
rorl
cmp
jns
sbb
jbe
lods
loop
pop
jae
inc
lret
xor
jb
lods
dec
daa
and
sub
gs
push
and
cmp
mov
xchg
dec
sbb
mov
leave
es
test
call
jbe
dec
pop
outsb
loop
in
push
call
jle
inc
sbb
in
fwait
lcall
rcrl
nop
out
shrb
pop
push
jmp
enter
mov
lods
in
push
jmp
mov
ficoml
cmp
aas
inc
mov
and
ret
mov
sti
in
mov
mov
dec
dec
stos
mov
cmp
sti
lods
lods
cmp
mov
ficoml
adc
mov
xchg
movsl
jl
push
int3
push
into
cs
xor
pop
scas
imull
mov
idiv
xor
idivb
dec
lfs
xchg
xchg
inc
xchg
inc
push
xor
cmp
sub
cmp
sahf
sbb
dec
mov
xchg
and
inc
jmp
xchg
jo
mov
pop
push
sub
cmp
jb
gs
cmp
nop
mov
jg
sbb
ljmp
adc
cld
fwait
loop
or
daa
add
pop
ljmp
scas
popf
jnp
xor
cmc
les
jmp
push
add
sub
call
lcall
jmp
scas
js
lret
mov
out
mov
push
out
jecxz
inc
in
sar
push
jmp
cmp
inc
cs
inc
rcl
and
xorl
dec
jge
scas
lahf
in
push
xchg
pop
test
in
mov
add
test
push
enter
jl
lahf
mov
insb
fldt
xor
sbb
mov
push
xchg
jne
cltd
mov
xchg
movsl
jno
mov
xchg
arpl
ficoms
mov
loopne
sbb
out
addb
ds
in
enter
add
push
xor
cwtl
pushf
inc
mov
int
adc
adc
cwtl
sbb
sub
jge
cmp
lret
iret
xchg
in
aas
sub
test
mov
mov
add
pop
cld
mov
pop
enter
push
cltd
fs
mov
xchg
pop
icebp
dec
fsubrl
lea
lahf
outsl
test
or
ljmp
lea
jo
mov
sbb
xchg
pop
and
fstp
mov
xor
fsubr
cmc
shl
clc
dec
inc
and
popa
loop
inc
sbb
cmp
jo
sbb
shl
dec
andb
lahf
cmpsl
data16
mov
pop
adc
lds
repnz
adc
lret
int3
insb
mov
mov
adc
shlb
mov
pop
into
sub
nop
sub
pusha
cmpsb
push
inc
popa
cld
jmp
test
scas
or
lds
les
mov
jecxz
lds
inc
test
flds
out
ds
cmp
inc
in
sbbl
ds
mov
jecxz
insb
and
jg
push
xchg
sub
sti
stos
sti
adc
dec
pop
push
mov
pop
cmc
mov
icebp
dec
sahf
aas
pop
xchg
fnstsw
lahf
or
sti
sti
orb
jmp
mov
inc
mov
push
es
mov
into
jnp
loope
aam
sub
jecxz
ficompl
ror
inc
aad
movsb
dec
add
fbld
int
cli
cmp
imul
xor
and
testl
sbb
pop
push
mov
mov
push
mov
loope
fwait
stc
or
pop
ja
lods
fnsave
mov
icebp
mov
jnp
fdivrs
iret
aaa
dec
sub
xor
aad
movsb
inc
es
hlt
jne
ror
movsb
cmp
xor
xchg
jg
int
sbb
test
inc
push
stc
jle
jge
add
sahf
clc
ret
adc
mov
inc
lea
lea
rcl
sub
adc
fisubrs
loop
adc
add
inc
daa
dec
aad
pop
bound
andl
and
std
je
lcall
sbb
mov
sub
loope
push
xor
rclb
fisubl
std
fisttpll
fiaddl
push
lods
not
shrb
pop
dec
push
pop
fwait
mov
imul
aam
sbb
jb
icebp
mov
stos
cmp
rorb
fcmovb
data16
mov
xlat
jne
jle
lods
sub
pop
and
jmp
cld
lods
pop
add
subb
ret
mov
popf
addl
mull
or
add
scas
push
xlat
leave
add
cmc
mov
repnz
jno
cmpb
jnp
repnz
popf
aaa
fwait
popf
movsw
mov
ficoml
push
push
xlat
addr16
inc
lods
cmp
jecxz
xor
mov
inc
xchg
out
cmp
stos
hlt
cmp
mov
xchg
add
xchg
mov
clc
dec
pop
and
mov
ss
fdivrs
push
and
icebp
and
mov
xchg
mov
imul
movsb
inc
jne
shll
cld
mov
sarb
sub
push
xor
jge
xlat
add
int
nop
les
mov
je
test
lods
mov
subb
sti
push
rorl
loopne
ror
repz
pop
sub
ficompl
ret
pop
or
aaa
lret
dec
hlt
sti
dec
out
pop
cmp
sbb
outsl
loope
into
stos
jmp
xlat
cmp
sbb
outsl
out
mov
mov
and
insb
sbb
dec
sbb
sbb
sbb
movsb
icebp
sub
mov
mov
push
mov
daa
sub
inc
aas
lret
xchg
adc
test
inc
inc
lds
pop
sti
sub
movsl
sti
sub
dec
mov
test
dec
jge
xor
or
fsubs
fidivs
or
data16
push
inc
ds
pop
test
loopne
adcb
and
xor
sub
jecxz
xlat
cltd
stos
outsl
loope
adc
pushf
movsl
mov
jo
mov
aaa
pop
xchg
dec
in
mov
in
mov
fmul
movsb
and
jnp
pop
stc
xor
mov
mov
int
lret
sbb
mov
xchg
or
xor
sbb
push
jbe
lods
mov
sub
repz
into
cmp
rcl
add
ljmp
stos
andb
repz
imul
and
sub
repnz
ret
call
aad
bound
push
mov
stos
cmp
jo
pop
or
inc
mov
or
outsl
pop
out
push
shlb
push
and
dec
jo
dec
lahf
push
sti
inc
cmp
mov
arpl
mov
mov
push
xor
dec
out
enter
mov
ret
lcall
pop
ror
push
lea
pop
cmp
sbb
and
dec
lea
mov
in
cmp
cmp
shll
divl
insb
ret
mov
push
lret
scas
or
sub
mov
insl
or
repnz
or
mov
ficoms
jl
jl
or
loopne
adc
mov
stos
mov
inc
out
sbb
pop
stc
mov
pop
inc
inc
stos
shrl
bound
ret
lock
stos
push
dec
xor
add
jo
push
jb
jle
je
lea
lahf
in
cmpsl
pop
jl
inc
ja
out
mov
fs
cmp
add
aam
push
adc
adc
hlt
pop
push
lret
jecxz
bound
mov
mov
loop
and
sti
pop
sub
je
jecxz
lcall
stos
xchg
mov
pop
pop
adc
mov
stc
push
ret
or
jnp
dec
jecxz
adc
loope
mov
mov
sbb
or
sbb
fs
mov
aad
lock
xchg
inc
sbb
fs
cmp
pop
sub
cmp
ja
inc
cmp
nop
mov
adc
and
jno
out
sti
xchg
mov
mov
mov
lret
inc
out
aas
xlat
cmpsb
cs
push
or
out
or
movsb
in
test
adc
sarl
xchg
pop
sbb
jecxz
daa
cmc
jbe
stos
xor
push
fnsave
or
negl
or
jg
pop
sbb
test
jg
cmp
or
pop
sbb
jge
cmp
in
lcall
in
mov
sbb
cmp
int
jl
aam
cmc
cmp
cltd
shll
les
add
jmp
jae
mov
lret
and
push
enter
cmpb
sub
pop
cmc
xchg
xor
jae
add
repnz
out
adc
dec
adc
imul
inc
and
sbb
jg
add
imul
add
int
xorb
sbb
jmp
mov
mov
inc
jle
xchg
leave
repnz
or
mov
es
inc
bound
test
mov
fsin
mov
enter
push
ret
test
xor
lahf
dec
lea
dec
sbb
pop
pop
pop
sarb
cld
or
jo
add
out
pusha
orl
or
clc
out
mov
pop
inc
mov
sar
outsb
cmpsb
daa
test
pop
add
test
imul
pop
add
mov
aaa
enter
inc
sbb
call
or
dec
ja
filds
xchg
add
mov
mov
pop
in
lock
imul
test
lahf
xor
call
jns
dec
dec
in
mov
mov
loopne
inc
xchg
adc
imul
inc
or
cmp
nop
inc
or
mov
movsl
sbb
out
cmp
pop
cmc
inc
ffree
dec
pop
out
and
test
pop
jb
sarb
pop
in
lret
pop
dec
mov
or
ficoml
mov
dec
mov
dec
jo
inc
mov
or
shlb
outsl
adc
jg
shufps
sti
icebp
aad
cmp
cli
xor
pop
inc
bound
sub
xchg
fistpll
sbb
mov
adc
stos
mov
mov
inc
test
mov
push
pop
dec
mov
dec
fs
adc
jle
mov
fstps
sub
popa
inc
add
ds
jnp
mov
es
hlt
mov
imul
clc
jo
stos
shll
xor
sub
cmp
dec
pop
add
daa
xor
jbe
int
and
outsl
and
in
in
sbb
inc
cmc
scas
mov
inc
sbb
add
jl
int3
push
sbb
mov
pushf
loop
cmp
pop
jmp
or
inc
inc
js
xchg
hlt
push
mov
cwtl
daa
movsb
push
jg
xor
int
fs
jmp
fildll
xlat
test
ds
stos
leave
mov
test
arpl
inc
loop
cwtl
inc
out
jecxz
xor
sti
push
jge
mov
loop
lods
in
push
shrl
push
call
xor
pop
aam
test
fdivr
sbb
cmp
pop
xchg
lock
mov
sbb
pop
andnps
daa
test
sbb
pop
inc
jp
jle
testb
aad
call
stos
mov
test
xchg
add
mov
sbb
mov
xchg
dec
mov
les
ss
adc
push
shrb
sbb
pop
add
mov
xor
sbb
xchg
dec
ja
cmpsb
mov
sti
dec
jo
movsl
mov
push
movl
ret
mov
jae
les
sbb
scas
out
jmp
push
inc
adc
repz
inc
inc
cmpsl
xchg
adc
stos
inc
add
inc
sbb
push
ret
mov
mov
imul
and
imul
xor
adc
sbb
pushf
pop
inc
xor
in
test
lahf
push
sbb
inc
popf
mov
xor
scas
pop
xchg
inc
adc
ljmp
ret
jnp
int
out
cmpsl
stc
dec
popf
jmp
pop
xchg
jmp
inc
push
lcall
inc
je
inc
jne
adcb
mov
cmpb
jmp
negb
xchg
inc
das
xor
lds
or
pop
jbe
daa
lret
mov
or
ret
mov
int3
push
ja
repnz
push
shll
cmp
ljmp
in
pop
pushf
and
ffreep
testb
icebp
jnp
jne
push
cltd
shll
xchg
jne
push
fldl
push
jb
mov
adc
sahf
notl
adc
push
nop
pusha
pop
test
out
mov
in
sbb
ds
xchg
into
cmp
ds
dec
jp
sbb
push
jp
mov
stc
out
addr16
jbe
pop
scas
test
repz
mov
sub
add
sbb
out
xor
push
cmpsb
mov
xchg
shrd
sbb
inc
insb
fistl
mov
sbb
ja
mov
jge
andb
mov
iret
inc
or
add
test
sbb
iret
out
pop
add
jo
rcrb
les
xchg
cli
out
test
in
push
sbb
test
mov
xchg
xchg
rcr
mov
adc
xchg
out
jbe
mov
cmp
stc
push
or
xor
sub
je
lahf
xchg
xor
clc
aaa
inc
jbe
rclb
sbb
lods
sahf
add
shrb
or
push
les
lcall
or
fisubl
jnp
xor
aas
std
jl
dec
push
or
and
cmp
leave
cmp
adc
cmp
cltd
and
popa
int3
aaa
ret
fbld
stc
pop
ss
add
sahf
popf
jecxz
pop
mov
lods
cmc
add
dec
push
xorb
and
es
xor
xchg
dec
icebp
mov
and
shlb
aad
inc
pop
pop
call
iret
aaa
js
mov
sub
or
and
sbb
cmp
aaa
sub
cmp
sbb
xor
pop
cmp
sti
mov
test
jo
xorl
mov
inc
insb
jle
or
test
call
adc
add
lcall
pop
add
hlt
mov
sub
sbb
push
fistpl
lret
mov
dec
pop
push
pop
xor
in
neg
leavew
cmp
inc
mov
or
iret
daa
loop
in
mov
mov
or
add
ljmp
or
data16
adc
lret
xchg
jnp
outsb
inc
mov
cmpsb
aad
sub
push
sub
push
adc
outsb
pop
cli
or
xor
fimuls
dec
adc
mov
sub
shlb
in
cli
xchg
mov
insl
testb
push
outsl
inc
push
insl
cmp
or
movsb
mov
out
push
lea
inc
mov
sbb
and
incb
sbb
sarl
repz
fidivl
cmc
fisttps
std
loopne
js
ret
ret
lret
clc
xchg
daa
dec
faddl
mov
pop
das
xchg
xchg
lcall
lock
punpcklwd
cmp
lea
push
xchg
sbb
xchg
jae
xchg
in
adc
inc
inc
add
addr16
repnz
subb
mov
leave
dec
sub
mov
and
cmp
aad
lret
movsb
ficompl
loope
fcom
sbb
jmp
sub
adcb
arpl
jle
ljmp
sbbl
add
sub
in
lds
and
lods
jmp
pusha
setb
mov
fisubs
add
xchg
daa
sbb
xor
inc
dec
ret
jno
mov
sub
adc
ds
aam
mov
outsb
sub
or
lret
scas
sub
inc
cmp
push
mov
jge
movsb
jg
xor
push
xor
cli
mov
mov
add
jnp
or
sub
hlt
xor
push
cltd
adc
in
cli
adc
aam
das
dec
lods
mov
push
imull
sub
sub
aad
jb
jne
in
push
or
xchg
add
adc
adc
sbb
pop
mull
jecxz
cwtl
fwait
pushf
xor
push
push
jmp
mov
jno
call
or
xor
mov
cmp
fcmovne
cmp
jbe
loop
pop
and
mulb
pop
mov
pop
or
pop
hlt
or
jno
jbe
or
or
ret
xor
and
xor
dec
mov
mov
pop
aaa
cmp
aad
and
faddl
imul
outsb
sbb
stos
jbe
mov
mov
jmp
pop
daa
mov
iret
mov
inc
mov
xlat
mov
push
fs
sub
cltd
mov
pop
sbb
push
in
ret
dec
sahf
add
fs
jno
js
xchg
pop
xor
dec
dec
mov
cmpl
cld
fcomps
inc
aas
cmp
push
je
or
sub
push
aaa
or
dec
mov
orb
inc
dec
out
hlt
sbb
cmpsb
add
jl
int3
and
mov
fst
idivl
cmpsb
imul
stos
dec
into
pusha
mov
fbld
mov
popf
mov
ficoml
cmc
sbb
sbb
fisubrl
xchg
push
and
addr16
rclb
movsb
jp
jg
jle
sub
push
std
adc
push
sarl
jo
xchg
pusha
sub
adc
or
ret
fndisi(8087
pop
rcrl
shrl
ret
xchg
pop
add
nop
pushf
cli
jb
mov
pop
pop
shll
push
rcll
mov
rcrl
test
lcall
dec
push
and
cmp
mov
gs
or
sub
cld
jmp
sub
sub
jns
test
mov
xor
pop
call
or
int3
adc
sahf
jecxz
js
pop
outsb
loopne
inc
sub
test
push
xor
testb
mov
ds
pop
arpl
cmp
mov
enter
dec
in
lock
pop
xor
jno
dec
mov
or
fucomip
jns
mov
aam
aas
imul
idiv
fimull
xor
xor
inc
push
push
cli
sub
imul
xchg
mov
xor
in
sbb
inc
pop
sub
mov
and
addr16
fdivr
inc
cmpsb
mov
and
inc
and
popf
add
mov
xor
repnz
adc
inc
hlt
or
mov
mov
xchg
lock
scas
push
push
scas
xor
scas
pop
xorl
mov
repz
push
out
push
jo
dec
scas
addr16
push
aad
or
test
dec
js
mov
mov
add
idiv
das
or
adc
pop
xor
jmp
sbb
movsb
add
sub
shl
jbe
inc
xchg
je
rorl
jecxz
dec
call
and
push
leave
pop
out
shrb
jns
cmp
push
lret
jecxz
pop
cmpsl
mov
push
in
inc
lret
popa
push
fdivr
loop
shll
inc
addr16
or
stos
mov
out
cltd
subb
lret
mov
push
sub
inc
mov
jmp
dec
loop
push
mov
ss
aaa
out
push
push
sub
or
cwtl
cmp
dec
xor
das
fildl
outsl
or
and
test
gs
fnstcw
jno
cltd
or
mov
rclb
icebp
jmp
inc
xor
aas
mov
in
loop
pushf
in
xchg
fidivrs
mov
out
cmp
jnp
jno
bound
mov
stc
push
sbb
fwait
add
btr
mov
fstl
rclb
sub
push
sbb
or
lret
mov
mov
jp
xor
mov
aam
add
add
js
add
lahf
jg
cli
sbb
fisttps
cs
imul
rcr
cmp
dec
pop
adc
mov
fnstcw
js
mov
sub
jle
stos
cmpsb
repnz
xchg
in
xchg
jle
int
xchg
enter
push
mov
or
cmp
out
imul
out
add
xchg
in
dec
sbb
dec
loopne
sub
or
outsl
mov
jecxz
pop
scas
and
fmull
or
push
mov
loop
test
decl
enter
jp
sbb
arpl
lds
clc
cmc
cmpb
add
bound
loope
adc
mov
jnp
aas
mov
add
iret
sub
and
add
push
repz
int3
imul
dec
je
pop
adc
fistl
repnz
loop
and
mov
push
or
mov
mov
ret
inc
sahf
adcl
idivb
pop
pop
jge
inc
cld
int3
and
jo
mov
sbb
sub
mov
push
xchg
jmp
sub
rcll
add
out
jle
imul
mov
repz
stos
sub
test
xchg
inc
inc
sbb
mov
ret
es
out
mov
mov
mov
xchg
sub
fs
cltd
add
pop
xchg
jg
pusha
leave
int3
mov
inc
mov
xor
adc
cmp
or
iret
sbb
pop
aaa
out
sub
push
mov
jo
dec
jne
xchg
pop
scas
out
dec
xor
lret
sbb
inc
xchg
aaa
mov
push
mov
shlb
push
test
clc
and
ljmp
jnp
cmp
pop
hlt
sti
and
shl
mul
mov
pop
jl
mov
loopne
mov
push
aaa
pop
mov
add
mov
adc
pop
out
dec
pop
mov
jge
sbb
jl
mov
and
rcll
mov
lods
adc
mov
inc
sbb
push
inc
xor
lret
add
data16
pop
xor
daa
adc
jne
sbb
dec
adc
in
mov
bound
in
push
call
fs
jnp
leave
negl
add
test
mov
dec
push
jb
sbb
add
sub
adc
in
sahf
xchg
cmpsb
ret
jecxz
cltd
jo
ljmpw
add
mov
mov
pop
xlat
xchg
and
int
cmp
cmp
sti
xchg
ret
jno
flds
cld
stos
jb
cmp
xor
aad
mov
jecxz
push
mov
and
fisttpl
push
nop
jne
into
imul
stos
lock
enter
jle
xor
xchg
clc
fstpl
xchg
repnz
dec
dec
push
inc
lock
xchg
pop
test
addr16
xor
mull
jmp
cmp
lods
stc
inc
cmp
lret
repz
jae
xchg
xor
movsl
stos
inc
push
in
lret
mov
xor
sahf
sub
loop
mov
adc
dec
andb
outsl
push
int3
pop
add
shl
add
mov
cmp
mov
inc
lock
jo
inc
addr16
jg
inc
les
lret
loop
data16
clc
inc
lock
fsubrs
xchg
stc
daa
jns
imul
fiaddl
stos
flds
stc
mov
faddl
js
stos
or
sbb
arpl
movsb
lea
aad
mov
ja
push
jmp
sar
cs
sub
adc
fstps
adc
rolb
push
test
inc
push
and
out
mov
stc
stc
cwtl
fisubs
inc
pop
cmp
call
sub
ds
jb
stos
out
xchg
push
int3
xchg
dec
fwait
in
sub
enter
fsts
lods
or
push
sub
push
cmc
mov
cmovge
jge
out
std
test
scas
jle
call
mov
pusha
xor
mov
imul
fcoms
ljmp
xchg
testb
mov
pop
sub
xor
je
gs
aas
test
xor
outsb
std
loop
push
idivl
lret
mov
inc
es
sub
xor
jp
fistps
jmp
inc
dec
xchg
mov
stos
mov
add
scas
mov
or
stos
sahf
push
fstps
push
add
add
cmp
xor
pop
mov
in
fildll
stos
clc
jno
cwtl
push
mov
movsl
push
inc
jae
or
xchg
ja
jp
cwtl
xlat
pushf
or
scas
fwait
mov
add
adc
mov
inc
cmp
rolb
jb
inc
add
lahf
xchg
ror
dec
mov
je
scas
fidivs
ljmp
and
pop
in
mov
lcall
movsl
rol
sbb
cmc
lret
scas
les
sbb
pop
inc
dec
nop
dec
adc
dec
push
ret
jl
push
gs
cmp
int3
add
aas
mov
pop
inc
arpl
imul
notb
xor
dec
cltd
adc
js
or
rcrl
jl
mov
jmp
dec
adc
mov
es
loope
inc
shlb
push
scas
dec
sahf
in
jp
or
fbstp
push
test
add
xlat
int
sub
bound
mov
mov
cmpsb
jle
jbe
and
adc
stos
push
mov
rcll
jp
fisubrl
stos
xchg
sub
xor
and
xor
fadds
scas
pop
dec
jne
in
mov
scas
push
inc
ljmp
dec
gs
dec
dec
enter
jmp
add
xchg
add
and
sti
xchg
jbe
bnd
lcall
push
fisttpll
clc
mov
xchg
mov
xchg
pop
mov
pop
push
mov
pop
xchg
insb
jle
jg
dec
scas
imul
rcrl
popa
arpl
je
clc
lret
aaa
repnz
call
out
jg
push
pop
add
mov
push
rcrb
cmpsl
pusha
dec
cli
pop
jae
adc
shl
push
into
jbe
mov
pop
and
push
mov
into
psraw
jle
lock
in
xor
scas
jae
lods
movsl
sbb
ss
push
push
rclb
nop
sub
adc
test
repnz
mov
das
shll
lods
in
mov
sbb
push
into
ret
push
ja
adc
inc
xchg
lahf
scas
xchg
ret
or
lock
fisttpl
ljmp
repnz
loopne
or
pop
push
xchg
sub
and
sub
push
setns
fimull
pusha
arpl
inc
jnp
fwait
xchg
negb
mov
mov
mov
adc
add
adc
aad
pop
pop
subl
mov
ret
jle
imul
imul
and
mov
adc
mov
addl
cs
adc
scas
lcall
imul
icebp
inc
sub
jnp
out
inc
pop
cvtps2pd
pop
imul
mov
push
lds
mov
cmpsb
loopne
add
xchg
cmp
in
jo
pop
pop
jae
imul
inc
test
add
adc
mov
cmp
lds
cmp
lea
iret
test
test
in
rolb
outsb
mov
xorb
adc
insl
repnz
es
mov
daa
fsubrp
fidivs
sub
outsb
test
adc
xor
sub
mov
and
leave
arpl
jl
push
lahf
xchg
in
movlps
jbe
leave
cmc
ds
in
insb
xchg
nop
lret
rorl
leave
lret
push
out
bnd
arpl
sbb
sub
cmp
xchg
movsl
ror
add
mov
test
shrl
pop
pop
jne
pop
xor
clc
inc
dec
imul
incb
test
les
fsubl
and
xchg
es
adcb
lds
and
pop
leave
jecxz
mov
rcrb
pop
xor
loop
push
xor
xor
divl
xchg
cmp
mov
mov
faddl
fildl
push
cmp
mov
pop
pop
std
mov
out
cli
xchg
mov
dec
sar
xchg
sarl
inc
clc
push
add
jno
pop
lds
pushf
repnz
fdivr
pop
sub
adc
jl
push
das
and
push
cmp
ss
inc
push
push
mov
pop
sbb
pop
cmp
lds
daa
nop
mov
inc
daa
flds
push
xchg
ret
pop
inc
pop
cmp
xchg
popa
gs
aad
popa
mov
jae
inc
push
divl
and
movl
imul
lahf
lods
fidivrl
movsb
rcr
mov
mov
lock
adcl
repz
rep
or
ss
sbb
inc
jb
jle
add
nop
loop
mov
xchg
loop
hlt
push
insl
sahf
int
faddl
orl
out
test
or
imul
clc
inc
das
lock
mov
call
sbb
ljmp
rclb
pop
cmpsb
adc
sbb
enter
loop
xchg
nop
cli
mov
adc
xor
jo
push
mov
push
fnstsw
xchg
ret
mov
scas
mov
xchg
test
iret
pusha
mov
cs
adc
push
inc
pop
in
icebp
fmull
in
movsb
call
testl
and
pop
cmpsl
cmpsb
sbb
jo
inc
es
cwtl
push
in
push
jl
pop
cltd
and
mov
mov
push
mov
and
out
jg
inc
push
cmpsb
ds
dec
aaa
subl
add
cmpsb
xorb
mov
cmp
xor
fwait
dec
mov
scas
cli
movsb
cmp
pushf
xlat
in
loope
lds
xchg
addr16
aad
sub
clc
iret
xlat
daa
bound
fldenv
sahf
clc
jns
xlat
jl
fiaddl
push
mov
ret
cwtl
or
xchg
inc
jecxz
cmp
insl
frstor
scas
sti
mov
sbb
adc
adc
add
jb
mov
fmulp
repnz
mov
cmc
test
xor
jne
loopne
mov
imul
fidivs
mov
inc
test
sbb
push
xchg
jecxz
xchg
xor
mov
popa
mov
addl
push
nop
mov
out
insl
popf
cli
xchg
decl
inc
sub
dec
daa
jge
shl
adc
sub
cmp
jns
or
gs
pop
fstpl
inc
in
mov
jae
arpl
testb
outsb
jnp
loop
cmpsl
pusha
adc
sbb
add
les
imulb
ja
cmp
mov
idivb
adc
inc
ds
js
lods
or
mov
rolb
loopne
xchg
and
fsubs
sub
scas
test
nop
lock
out
push
and
fsubp
fs
mov
jne
inc
pop
cmpsb
test
mov
adc
cmpsb
jo
stos
cwtl
shl
test
inc
cwtl
cmc
or
or
push
enter
sbb
outsb
out
dec
lods
sbb
ds
sbb
or
mov
jecxz
stos
mov
in
inc
shl
stos
stc
loop
jp
test
imul
mov
test
and
addb
scas
inc
cmp
lods
stos
aad
mov
lods
leave
or
cmpl
dec
jae
add
sub
sbb
pop
xchg
stc
mov
inc
mov
fsubrs
dec
sarl
ja
daa
xchg
mov
in
mov
pop
inc
add
aaa
addl
int3
inc
psubsb
pop
dec
loopne
mov
inc
cmp
shrl
shlb
call
inc
and
jmp
push
mov
and
js
rol
pop
sysret
xchg
mov
pop
stos
int
stc
out
cli
sahf
aam
dec
into
xor
vpcmpgtd
mov
mov
ror
push
mov
jmp
cmp
jecxz
pmaxsw
arpl
push
or
jnp
js
sub
icebp
xor
stc
aaa
mov
pusha
test
mov
mov
arpl
adc
sub
xor
pop
out
lret
mov
repz
mov
add
into
xchg
cmpsb
mov
sbb
ret
lock
adcl
mov
jo
dec
inc
popa
lock
push
mov
fldcw
hlt
sub
aad
ja
add
movsl
stos
xor
mov
pop
jnp
cmp
mov
lods
mov
mov
imul
push
loope
enter
dec
mov
ret
out
cmc
shrb
lea
jnp
mov
pop
scas
insb
movsb
mov
dec
mov
cmp
inc
jge
bound
sbb
push
hlt
cltd
sbb
inc
xchg
push
movsb
sbb
in
add
jle
xor
out
sbb
out
mov
fisubl
pop
xchg
or
cli
sub
call
jne
push
pop
test
xor
xor
dec
scas
bound
int3
imull
xchg
rorl
xchg
sbb
sbb
add
in
dec
cld
push
cmp
dec
in
jno
mov
clc
cmc
push
call
imul
inc
daa
cli
cmpsl
inc
ret
or
lret
and
stc
aas
xchg
insb
lcall
test
js
stos
mov
lods
movsb
add
xor
imul
test
inc
inc
cld
ret
mov
ffree
jne
icebp
push
mov
xlat
pop
fwait
jecxz
fisubs
ljmp
call
and
push
popf
cwtl
adc
fldt
sahf
hlt
inc
sahf
jmp
mov
cmpsb
mov
cmp
fldenv
jb
cmpsb
jnp
arpl
pop
mov
jecxz
insb
dec
jle
sbb
inc
inc
enter
insb
cmp
and
mov
int
idivb
dec
stc
outsb
scas
or
xchg
sbbl
lahf
addr16
jo
lods
je
negl
cmpl
xor
insb
and
test
outsl
inc
loopne
pop
jno
push
sub
dec
stc
ficomps
rolb
inc
xchg
mov
jmp
push
fwait
test
add
fcom
push
xchg
fstl
adc
ret
inc
in
cmpsb
cwtl
adc
add
data16
cwtl
jnp
aaa
gs
or
push
dec
out
cmp
xor
dec
addr16
icebp
iret
pop
insb
ljmp
push
into
stos
push
xor
int
mov
cmp
sub
lds
pop
test
es
sbb
xchg
xchg
cli
add
xchg
jbe
jne
hlt
and
cmpsb
loope
lock
cwtl
out
dec
push
ss
cmc
sbbb
mov
lock
or
dec
and
push
add
ljmp
scas
ret
lret
pop
mov
cmp
inc
mov
nop
orb
mov
cmpsl
into
xchg
fistl
cmp
push
xchg
mov
mov
pop
dec
pop
testl
inc
or
cmpl
movsb
cmp
xchg
std
mov
xchg
sub
xor
sub
mov
ficompl
leave
cmp
icebp
dec
sub
sub
gs
mov
inc
outsl
jo
push
xor
stc
xor
dec
jl
enter
ret
lock
ss
or
xor
fdivrp
out
mov
movsb
mov
jp
fsubp
jp
dec
sbb
jno
test
outsb
cli
pushf
xchg
mov
scas
fninit
adc
lds
pop
jns
faddl
ja
call
or
ja
jbe
cmp
mov
pop
mov
insl
add
inc
xchg
sbbb
mov
cmpsb
xchg
or
inc
mov
adc
cmpsl
insb
cmc
mov
shlb
sbb
stos
mull
push
stos
mov
outsb
arpl
xchg
mov
sbb
adc
inc
lea
mov
lahf
pop
or
addr16
cs
cmc
push
jbe
jnp
xlat
sub
dec
cmp
dec
int
imul
ljmp
add
shr
cmpsl
in
enter
subb
cld
stos
add
xchg
lea
sahf
mov
out
sbb
cmp
sbb
pop
mov
cmpsb
dec
stos
push
test
dec
push
scas
js
mov
push
aaa
rcl
sub
scas
fdivrp
inc
jne
imul
scas
and
push
shlb
lock
enter
mov
shll
jmp
dec
xchg
xor
movsl
jge
subb
jns
bound
lds
add
scas
sub
cmc
xor
cmp
push
pop
adc
fld
mov
call
shll
iret
ja
addb
xchg
jge
cmc
or
movsl
adc
jge
scas
xlat
or
cltd
cwtl
or
shr
fsts
jno
dec
dec
xchg
in
inc
cmp
add
mov
es
notl
out
or
stos
xchg
pop
iret
push
sbb
sub
mov
or
fsts
mov
inc
and
add
outsb
or
push
sbb
insb
iret
out
in
repz
arpl
bound
das
ficompl
jl
mov
loope
dec
push
mov
cmp
decl
add
pushl
movsl
and
mov
scas
sti
xchg
out
pop
push
xchg
pop
jne
fidivrs
and
pusha
jg
jnp
mov
and
xlat
stc
mov
or
sub
js
addr16
jnp
js
test
mov
push
and
inc
pop
push
je
mov
scas
fwait
cmpsl
push
in
cmp
cmp
hlt
inc
jno
push
pop
cwtl
cld
cs
fsubrl
cld
push
mov
fiaddl
or
fs
sbb
mov
in
pop
mov
pop
add
les
or
lcall
testb
mov
clc
sbb
push
in
jae
cmc
and
push
stos
out
dec
pop
gs
mov
fisubrl
ficomps
push
dec
add
jmp
push
push
adc
adc
pop
sbb
add
jo
pop
jge
lock
int3
loop
into
cmp
fldl
or
lret
jb
fistl
xchg
xchg
inc
add
sub
orl
mov
cld
notb
popa
and
mov
or
lret
adc
leave
loopne
insb
rorb
test
xor
andb
adc
pop
pop
add
lea
repnz
idivb
arpl
sbb
arpl
fistps
dec
mov
cmc
lahf
hlt
lods
and
mov
mov
outsl
push
push
in
inc
repz
push
pop
and
dec
ljmp
int
mov
ss
push
ret
and
lret
enter
into
jnp
in
in
push
daa
push
xlat
mov
icebp
cmpb
inc
adc
daa
cmp
inc
mov
out
cmp
jae
cli
xor
push
mov
xchg
sub
outsb
cmc
sbb
jle
pop
aaa
mov
mov
lret
adc
sub
mov
and
data16
sub
cmpb
jl
mov
or
jae
in
addr16
push
outsl
mov
jnp
filds
sahf
das
mov
fdivl
mov
test
dec
adc
loopne
arpl
jae
add
fsubrs
popa
pop
sbb
sbb
imul
mov
inc
inc
mov
cmpsl
lods
xchg
mov
clc
pop
jae
mov
jge
aad
or
dec
adc
or
mov
inc
add
in
fwait
cmpsb
and
in
daa
lds
arpl
mov
ljmp
dec
push
xchg
dec
mov
cmp
es
icebp
aam
addr16
adc
xchg
fildl
or
fwait
rcll
lock
xor
imul
inc
cmpsl
addr16
mov
add
lret
push
xor
add
sub
jne
hlt
decl
jge
or
loop
add
add
mov
or
repnz
cld
gs
xor
sti
push
subl
aaa
icebp
and
push
inc
jnp
sbb
dec
push
sub
gs
pop
and
ret
and
popa
lock
subl
mov
add
jno
mov
pusha
sahf
arpl
or
inc
jge
mov
jne
xorl
je
adc
arpl
incl
push
mov
push
fisttpll
sub
push
jge
push
inc
inc
popf
xorl
sub
nop
dec
jl
les
fld1
ds
and
test
and
and
and
das
jbe
pusha
js
mov
jl
push
divl
adc
adc
imul
test
mov
mov
imul
sbb
int
push
test
and
in
imul
xchg
cmp
es
sub
xchg
dec
mov
cmp
sbb
xor
pop
mov
ds
leave
clc
xchg
jl
add
push
sti
sbb
pop
testl
jbe
add
inc
xchg
pop
mov
daa
mov
pushf
adc
dec
test
and
push
push
or
sarb
out
jle
into
sub
mov
in
cs
mov
loope
sbb
call
lret
pusha
fucom
imul
sub
sbb
in
pop
jbe
push
add
imul
or
cs
fisttpll
or
mov
inc
stos
outsb
shlb
imul
and
cmc
aas
sbbl
inc
pop
jbe
push
lret
cmp
outsb
mov
fimuls
insl
pushf
jecxz
movsb
sbb
lds
cli
xchg
jp
sbb
cmp
pushf
mov
ret
sti
loopne
inc
fs
ja
mov
xchg
popa
jo
orl
or
jns
scas
ret
xor
icebp
leave
rcrb
or
add
fs
sbb
mov
addl
daa
sti
and
notb
and
cwtl
xchg
add
inc
testb
shrb
mov
xchg
andb
jb
xchg
xchg
fbstp
dec
lret
and
push
flds
jne
rclb
movsb
sahf
jne
repnz
add
mov
xor
cmp
mov
sbb
jae
aaa
push
mov
stc
fists
enter
pusha
jp
dec
xchg
js
into
sub
adcb
ja
fsubr
cmp
xchg
adc
mov
or
pop
or
jnp
xor
les
in
jne
sahf
or
mov
mov
faddl
daa
add
push
push
movsb
jl
mov
pop
mov
inc
add
aas
js
test
sahf
or
addr16
pop
hlt
xchg
sbb
pop
mov
enter
test
pop
jbe
jmp
pop
pop
sbb
adc
xor
xchg
xor
inc
xchg
sub
pop
mov
jo,pt
inc
push
cwtl
test
test
js
mov
lods
mov
adc
inc
push
mov
fistps
sub
mov
jg
pop
xchg
popa
mov
imul
jne
aad
adc
sbb
clc
popf
out
rclb
ret
cwtl
add
xor
cli
push
pop
xlat
loopne
dec
adc
mov
neg
lea
fucom
in
pop
stos
add
je
fwait
dec
or
mov
mov
sahf
js
sub
stos
repnz
movsb
mov
xchg
call
addr16
movb
pop
mov
push
xchg
aad
adc
push
xchg
enter
ficoml
push
sbb
in
push
xlat
insl
xchg
xchg
push
scas
add
loopne
sub
shrb
repz
int3
mov
or
pop
mov
push
das
loop
xchg
jo
sarb
fnstenv
insl
add
push
sbbb
xchg
aas
inc
jne,pt
in
out
rcll
inc
fwait
inc
out
cmc
xchg
rcrl
hlt
cmp
sub
in
addb
addl
mov
xor
xor
mov
ficomps
repz
aaa
jl
mov
loop
cmp
fwait
pop
jge
in
jmp
arpl
in
lods
je
push
cmp
insl
adc
xor
cli
mov
jmp
test
xorb
sti
push
sub
imul
dec
sub
pop
jl
js
pushf
jno
push
fdiv
or
aaa
cmp
mov
fmul
pop
adc
rcll
jb
call
outsl
movsl
addw
fisubs
daa
pop
pushf
loope
fmul
std
or
insb
and
jecxz
lock
add
idivb
pop
int3
int3
mov
popa
jmp
jns
das
sarl
scas
inc
pop
or
or
fadds
out
cmp
push
pop
mov
mov
fildll
mov
and
loop
jo
mov
out
sub
sbb
fsubrs
mov
inc
add
mov
loope
das
arpl
dec
fsubrl
out
outsl
nop
nop
pop
pop
cmp
inc
and
je
mov
sub
xchg
out
xchg
push
adc
xchg
or
inc
pop
dec
arpl
adc
daa
cmp
pop
daa
cmp
push
jmp
cmp
mov
cwtl
popf
testl
mov
aad
add
scas
inc
adc
orb
jae
jge
movsl
repnz
outsb
popa
xor
loop
cmp
cwtl
mov
enter
xor
in
jbe
fwait
inc
sub
dec
inc
cmp
xor
test
test
sbb
aam
jmp
in
jno
mov
sub
jg
pop
ficomps
push
lods
shld
int3
clc
inc
xor
ljmp
mov
rol
add
adc
stos
test
and
or
enter
cmp
das
rcrl
daa
jecxz
push
mov
popa
sub
std
adc
push
and
sbb
outsb
jmp
adc
xchg
out
or
je
or
adc
in
test
jmp
inc
sti
in
stos
out
push
gs
jle
dec
mov
in
ja
push
cmpb
dec
and
test
mull
pop
adc
and
mov
dec
fwait
cs
mov
dec
adc
out
aad
xchg
loop
sub
dec
inc
sbb
pop
in
movsl
xor
negl
mov
movsl
ficoms
lret
cmp
xor
sbb
xchg
popa
jne
push
int3
out
jo
aad
mov
push
sub
adc
cmp
mov
rcr
lock
xchg
lahf
movl
icebp
fnstenv
lahf
mov
or
loope
pop
push
cltd
fisttpll
push
inc
xchg
in
cmp
sti
ja
repnz
lods
rcrb
gs
daa
imul
mov
or
mov
outsl
lret
lret
cmp
dec
js
scas
jo
jecxz
mov
fldcw
xor
imul
xchg
pop
movb
sbb
xor
jmp
jbe
cltd
jns
cmp
fmulp
leave
jae
mov
sub
das
rcrb
cs
divb
mov
mov
addr16
outsb
xor
sbb
push
int
jnp
sub
daa
shlb
push
pop
aas
sti
clc
into
mov
dec
movsb
xor
pop
or
xchg
fadd
push
leave
in
cli
sbb
jnp
inc
cmp
add
repz
mov
cmpsl
push
leave
or
test
aas
push
pushl
cltd
xchg
xchg
loope
lds
lock
stos
add
mov
cmp
ljmp
mov
xchg
in
jno
xorl
and
out
rclb
iret
push
int3
sbb
jg
call
clc
daa
cmp
enter
sbb
adc
cld
je
xchg
data16
leave
inc
arpl
scas
pop
stos
pusha
and
mov
stc
ds
xor
into
push
xor
cmp
mov
gs
add
mov
rorl
inc
aad
mov
int3
inc
mov
add
add
mov
or
cmpsl
jg
jns
and
pop
bound
es
fwait
jo
xorl
sbb
and
arpl
dec
lods
aad
adcb
rcrb
ljmp
aas
mov
out
cmc
mov
insb
pop
pop
repz
movsl
addb
insl
mov
adc
sbb
repnz
shll
decb
nop
ja
fstps
cmp
jecxz
dec
pop
icebp
icebp
mov
pop
xchg
pusha
jno
dec
lcall
sbb
das
push
push
enter
xor
sbb
test
adc
cmp
push
cmovbe
lcall
imul
cmc
mov
xlat
sub
mov
cmpsl
lret
push
adc
fstpt
jb
test
sbb
cmc
ljmp
mov
insb
xor
jo
push
mov
push
mov
enter
call
dec
push
inc
in
mov
int3
inc
dec
es
lock
ds
lret
sbb
lret
xor
pop
pop
pushf
jo
or
cmp
dec
mov
shll
sub
push
fwait
js
icebp
call
cmp
add
shll
imul
pop
lret
and
dec
dec
mov
push
cli
insb
mov
jmp
jle
ds
cmc
scas
aad
and
mov
aad
js
lret
xlat
jb
xor
dec
push
repnz
aad
or
test
dec
aas
lea
inc
outsl
xor
xor
shrb
cmc
sub
cmp
mov
hlt
aas
xor
stos
xchg
adc
and
insb
or
insl
mov
inc
adc
add
add
add
adc
outsb
scas
test
mov
popa
repz
xchg
jb
jle
and
add
dec
loope
out
xor
xchg
lcall
rcr
enter
test
cmc
outsl
roll
inc
pushf
inc
movsb
in
cmp
dec
shll
sub
pop
mov
nop
sbb
pop
cwtl
ret
push
push
out
pop
xchg
repz
sbb
fistpll
push
or
lods
les
sbb
ret
jne
popa
jmp
mov
and
insb
cmp
loop
dec
xor
xchg
adc
adc
push
xchg
or
mov
lret
dec
mov
adc
lods
out
mov
pop
jno
add
jae
inc
add
dec
jb
mov
lret
xchg
fcoml
les
rdtsc
out
jmp
mov
fisubrs
jp
rorb
gs
push
mov
add
int3
mov
pop
push
push
movsb
mov
popf
data16
shrb
inc
push
mov
aam
imul
cmpsb
jo
sarb
pop
ss
inc
repz
jl
jbe
cmc
pop
hlt
and
movsb
loopne
fwait
cltd
out
in
jbe
mov
pop
popa
dec
aas
in
mov
lds
xchg
js
popf
in
push
jp
aas
pusha
push
rolb
clc
sbb
mov
aaa
or
dec
dec
popa
fwait
subb
sub
pop
and
and
mov
push
mov
sub
repnz
popa
out
xor
xlat
xchg
push
sbb
push
and
and
int3
popa
add
pop
popa
popa
cmpsb
push
and
addr16
xchg
sbb
xor
loop
addl
loopne
sarb
fistpl
push
addr16
or
out
loope
push
outsb
dec
loopne
lea
mov
shrl
insl
lret
in
repnz
inc
out
mov
xchg
leave
pop
in
or
call
inc
add
es
jnp
sub
mov
jp
lret
jmp
fmul
xchg
pushf
decl
stos
loopne
xchg
cmp
dec
pop
mov
pop
hlt
mov
pop
in
inc
jae
lods
push
pop
loope
or
add
push
xlat
decb
bound
xor
es
cmpsb
mov
cmp
sbb
dec
jne
fwait
mov
iret
push
jp
scas
adc
daa
test
xchg
adc
insl
jp
loop
dec
sub
cmc
sub
add
or
clc
enter
daa
push
pop
adc
pop
int3
add
cmc
push
mov
sahf
shrl
in
xor
xor
mov
arpl
sub
and
xchg
nop
aaa
aam
push
ja
lahf
lds
xchg
pop
push
nop
stos
addb
sub
mov
inc
andl
mov
add
xor
cmc
or
xchg
scas
pop
outsl
jb
mov
cli
mov
pop
pop
loopne
outsl
scas
jl
in
mov
mov
adc
pop
and
idiv
xchg
mov
in
cmp
dec
cmpsb
xchg
inc
xchg
int3
jae
mov
xchg
aad
jp
jo
sub
out
cmpsl
dec
popa
dec
mov
out
mov
clc
dec
pop
hlt
xor
cmp
movb
cmpb
ja
std
les
lds
cmp
ds
adc
icebp
cmp
iret
mov
addr16
leave
pop
scas
pop
mov
cltd
ja
dec
cld
sbb
aad
adc
xchg
mov
pusha
mov
inc
dec
repz
ljmp
jb
paddb
ret
aam
adc
or
jbe
add
cmp
loope
push
sbb
icebp
out
icebp
jae
bound
and
ds
lea
or
push
mov
data16
cmp
jae
xchg
fidivrs
xor
int
mov
inc
add
test
adc
inc
jmp
adc
inc
lcall
push
pop
pushf
cltd
leave
pusha
dec
or
orb
mov
sbb
jb,pn
push
or
addb
add
jl
add
out
sbb
cmp
cmpsb
sbb
or
lret
adc
add
lea
fcmove
mov
fsub
cmp
inc
sbb
ffreep
inc
outsb
loope
mov
dec
arpl
mov
and
stc
add
aad
and
dec
dec
mov
cmpb
push
scas
jp
push
daa
jge
scas
fcoml
dec
gs
cmp
lea
or
insb
push
mov
test
mov
test
add
lods
adc
sbb
mov
notl
loop
repz
sub
fadd
sbb
cmp
test
test
and
inc
js
xchg
stos
adc
pushf
add
push
jge
cld
nop
loop
add
adc
aaa
mov
xchg
out
adc
inc
int3
mov
jmp
lret
cld
scas
arpl
int3
push
and
mov
jl
mov
std
loope
loope
sbb
cmp
xchg
cld
out
lcall
sub
fists
test
jbe,pt
icebp
sbb
push
js
cmp
mov
sahf
aaa
sub
add
pop
sbb
sub
jge
enter
movsb
pushw
lahf
sbb
xchg
lret
push
pop
inc
add
sub
xchg
es
pop
dec
lods
inc
adc
inc
push
je
add
add
cltd
dec
stos
jbe,pt
sbb
xchg
stos
pop
mov
adc
mov
xchg
fnstsw
dec
cltd
icebp
movsb
mov
lods
xchg
xchg
das
xor
leave
gs
sti
mov
jl
movsb
adc
movsl
sub
jae
cmp
push
aam
cmp
and
pop
flds
pushf
adc
cli
aaa
sub
cmp
cmp
movsl
and
mov
loope
int3
in
js
mov
mov
dec
inc
aad
xchg
mov
xchg
insb
xor
push
aad
xchg
imull
mov
xchg
jno
enter
and
jg
push
or
imul
adc
mov
xor
stos
xchg
pop
add
cmp
cmp
arpl
fcompl
push
dec
add
or
mulb
push
int3
fdivrl
inc
stc
je
jmp
cmp
mov
decl
rcrl
fsub
test
dec
lret
pop
dec
pop
scas
out
out
loope
mov
pop
sarb
mov
adc
fsub
mov
push
jge
lcall
out
es
out
pop
int
add
out
fwait
add
push
movsb
add
movsb
jg
add
lds
inc
pop
dec
xchg
push
inc
gs
inc
inc
dec
flds
mov
mov
jge
mov
test
jno
cmp
sub
sbb
sub
cmp
enter
mov
sub
xor
cmp
add
adc
mov
imul
push
shl
fistpl
cmp
shl
mov
sahf
or
or
inc
inc
xchg
bound
inc
or
push
pop
jge
push
nop
cmp
xchg
pop
cmp
push
movsb
jmp
cmp
daa
cmc
push
test
inc
push
mov
mov
dec
dec
movsl
mov
jbe
sbb
lea
mov
sub
outsl
sub
dec
shll
add
in
xchg
pop
or
andl
pusha
mov
mov
stos
sub
popf
clc
mov
lods
cmp
inc
in
sbb
push
cld
sub
sbb
jg
jmp
cmp
addr16
jne
xchg
lcall
ficompl
out
sbb
jg
push
loopne
fdivs
xchg
xchg
inc
shll
gs
sbb
or
push
sbb
mov
mov
repnz
mov
js
pand
cwtl
mov
cld
sti
jecxz
mov
bound
adc
mov
test
pop
daa
fimuls
xor
pop
inc
prefetch
adc
and
xchg
jns
and
testb
aaa
test
into
or
or
add
adc
lock
das
repnz
stc
pop
addr16
push
leave
fidivl
fildll
push
adc
cmp
push
jge
xchg
je
pusha
test
aad
cltd
inc
sub
xchg
popa
push
les
xchg
std
out
jbe
mov
test
push
sub
fnsave
stos
dec
cs
ljmp
mov
fcmovne
xor
add
icebp
adc
sub
inc
push
dec
ret
dec
adc
dec
mov
add
add
pop
mov
iret
dec
push
jae
ds
mov
rcrb
mov
add
cmpsb
rorl
std
jb
stc
sub
jnp
mull
cmp
and
aam
pop
push
icebp
sti
hlt
icebp
and
sahf
mov
jnp
ret
sbb
int
dec
xchg
lds
mov
cs
mov
fs
fidivrs
adcb
mov
dec
inc
arpl
add
cmc
push
dec
pop
dec
sbb
in
push
mov
int3
sub
dec
sahf
push
leave
outsl
dec
mov
nop
push
push
fs
lahf
enter
and
leave
sub
add
cltd
mov
cmp
lahf
or
cmp
fmuls
adc
and
lods
shll
repz
fs
add
shrb
jo
popf
pop
sub
aaa
add
test
push
sbb
xchg
xorb
sub
and
pop
xor
loop
nop
or
xchg
xchg
imul
mov
test
scas
cmpsl
inc
das
jo
mov
ja
and
mov
lcall
xor
mov
pushf
mov
sub
lahf
sbb
sbb
dec
aam
sbbb
scas
pop
add
imul
arpl
pop
test
in
xchg
mov
push
sbb
and
pop
xchg
mov
sti
rolb
stc
add
ss
ljmp
sbb
fwait
mov
jle
jge
lahf
add
xchg
arpl
pushf
repz
jae
leave
in
cmpsl
sbb
int3
cmpsb
testl
mov
ss
pop
push
mov
clc
mov
aam
aaa
leave
adc
adc
inc
jno
add
sbb
cmp
lret
mov
push
mov
cltd
sub
jno
add
shll
inc
loope
push
mov
cmpsb
dec
data16
out
cmp
stc
int3
ljmp
sbb
stos
or
outsb
fimull
std
nop
call
cmp
fidivs
scas
and
sbb
addr16
dec
sub
insb
pushf
sbb
sbb
push
outsb
rcl
xor
std
cmp
xlat
bound
mov
lock
loope
imul
sbb
push
pop
arpl
stc
xchg
push
es
imul
mov
or
dec
out
out
bound
sti
and
cmp
cmp
and
xchg
int3
pop
cmp
lret
ficoms
hlt
jbe
pop
xor
and
pop
xchg
repz
mov
push
hlt
call
test
dec
fucomi
cmp
pop
aam
inc
in
xchg
cmpsl
iret
jl
cmp
jg
daa
sahf
mov
sbb
pop
ret
pop
inc
mov
mov
stc
aad
mov
inc
out
cld
xor
inc
lods
clc
cmpsb
pushf
push
lods
mov
sahf
xchg
test
sbb
ret
jno
push
daa
stc
adc
je
sbb
enter
xor
and
idivb
int3
dec
lcall
loopne
add
addl
in
push
push
mov
xlat
or
shrb
in
lahf
test
xchg
sbb
aas
jp
mov
push
dec
cli
jb
leave
pushw
mov
jb
push
cli
push
xor
jnp
push
out
andl
sub
mov
test
mov
sti
js
outsb
clc
shr
fsubrs
adc
pop
je
testl
mov
mov
lods
mov
cli
mov
std
jge
popl
pop
xchg
mov
xor
je
sbb
and
cli
xchg
mov
fsubrs
inc
out
adc
in
scas
cmpsl
mov
pop
out
xchg
fwait
stos
dec
fsubrs
je
lods
in
lea
stos
aaa
stos
in
add
xor
or
cld
sub
xor
mov
bound
mov
scas
mov
xor
mov
push
out
mov
in
bound
push
pop
mov
repz
cmpsl
push
notb
push
xchg
mov
nop
rorl
push
scas
push
pop
push
mov
jle
xor
ss
ss
jg
mov
mov
cltd
loopne
xchg
movsl
call
shr
inc
mov
inc
std
fsts
int3
sbb
xor
sub
nop
test
outsb
cmpsb
dec
jp
push
scas
and
push
pop
add
lods
dec
mov
mov
mov
pop
cld
xchg
ret
pop
out
mov
xchg
ss
pop
mov
push
or
lahf
dec
in
lahf
and
arpl
leave
fbstp
repz
mov
aas
mov
mov
mov
cmpsb
fsubrl
dec
jecxz
mov
inc
mov
mov
out
iret
sar
pop
push
inc
xor
pop
into
lret
imul
aaa
dec
decb
cld
add
dec
jge
pushf
sarl
ret
xchg
mov
sub
cmp
jecxz
mov
in
push
imul
mov
lret
or
mov
mov
test
sub
xchg
inc
fists
mov
mov
push
add
ret
push
stos
add
mov
out
fmul
ds
sub
movsb
push
fnsave
adc
je
out
shr
lods
pop
dec
mov
xchg
jne
femms
adc
mov
jb
jg
mov
pop
and
pop
les
sbb
je
int3
shlb
cltd
jbe
jl
dec
cmp
jg
cmpsl
scas
loop
adc
mov
vshufpd
sbb
lea
aaa
lret
jae
dec
jo
mov
mov
jge
lcall
jmp
test
mov
push
repz
cmpsl
fisttps
sbb
lret
mov
aaa
mov
or
data16
mov
lret
insb
xchg
cltd
subl
repz
sbbb
mov
jecxz
imul
cpuid
cld
sub
imul
lret
or
adc
int
jne
sbb
adc
xor
ds
fs
xor
outsb
test
sub
hlt
test
xor
out
dec
hlt
push
rolb
scas
imull
insb
cmp
sbb
mov
and
outsb
adc
dec
pop
push
addr16
or
ds
mov
movsl
and
jae
mov
dec
lea
pop
in
aad
adc
jne
dec
sbb
inc
mov
arpl
inc
addr16
into
cmp
xchg
fistl
push
adcl
jmp
or
xchg
push
push
sub
push
in
arpl
sub
in
sub
pop
in
jb
sbb
lret
inc
stos
or
int
bound
mov
sti
mov
mov
add
mov
fs
pop
inc
add
adc
sub
cmc
xor
test
out
add
movsl
aas
fwait
cltd
cld
adc
xchg
icebp
sbb
lahf
pop
rcll
nop
xchg
cmp
cmp
mov
adc
xchg
iret
push
call
or
inc
push
jg
sbb
adc
fwait
repnz
scas
ficomps
mov
xchg
and
pop
sub
test
and
mov
jns
xchg
xor
aad
jne
aad
push
mov
jbe
inc
cmp
imul
cwtl
jo
repz
outsl
mov
jle
scas
jno
das
imul
mov
rolb
jb
cmp
jno
xor
or
pop
shr
imul
cld
jl
addr16
stc
mov
cli
andl
fwait
adc
adc
and
add
pusha
jo
and
scas
or
push
jmp
mov
mov
cwtl
mov
fs
adc
fwait
xchg
sub
in
mov
ja
jle
scas
inc
xchg
pop
sti
loopne
pushf
insb
lret
push
push
lahf
movhps
cmc
les
inc
cmpsb
jecxz
out
add
add
clc
and
pop
cmp
movsl
jmp
incl
aaa
jmp
push
adcl
jns
xchg
mov
inc
mov
call
ficoml
ret
test
cmp
xor
mov
je
scas
xchg
cmp
mov
outsb
cmp
stos
stos
fldl
sub
divl
xchg
shrl
imul
in
icebp
push
int3
movsb
mov
fmull
repnz
jmp
add
fisubrs
cmpsl
adc
pop
xchg
and
mov
jmp
xor
pop
outsb
movl
fistl
notl
jmp
lea
mov
in
jnp
out
push
gs
cmp
sub
aam
pusha
xchg
cmpsb
mov
test
icebp
mov
call
in
popf
ret
pop
add
xor
hlt
out
int3
mov
cmp
and
mov
fwait
cmp
push
stc
pop
insl
xor
jmp
mov
jne
in
aad
push
adc
shrl
imul
icebp
mov
and
or
push
adc
sbb
in
fists
jne
paddusb
inc
cld
fildll
xchg
jmp
into
dec
fstl
out
js
loope
nop
sahf
add
stc
lea
js
lretw
call
inc
sti
push
dec
dec
fstpt
xchg
ret
push
pop
ds
das
cmpb
fs
aaa
add
pop
inc
aas
mov
sub
dec
mov
cmp
dec
sbb
dec
adc
fisubl
xor
xor
mov
jb
mov
enter
push
out
mov
jp
push
push
nop
outsb
fsubl
jge
orl
add
xor
push
loope
arpl
into
jbe
sbb
or
push
xor
pop
mov
push
jnp
sub
xchg
or
sub
aad
scas
in
out
and
jbe
push
fldt
stos
xlat
push
inc
cmp
dec
mov
or
shl
sbb
out
inc
icebp
mov
cwtl
sub
pop
ret
pop
scas
jnp
push
popf
pop
sbb
cmp
xor
jbe
int
aaa
xorl
inc
adc
adcb
xchg
jnp
sbb
into
push
icebp
sbb
xor
mov
dec
jmp
xchg
push
sub
pop
enter
xchg
cmp
mov
fadd
xchg
aas
cmp
pop
sbb
cli
inc
stos
je
push
mov
lea
adc
pop
mov
mov
test
push
sub
ja
addr16
mov
je
or
inc
pop
jnp
dec
stc
repz
and
pop
xchg
ret
xchg
aad
jle,pn
nop
jg
mov
dec
out
imul
mov
inc
xor
push
daa
in
push
test
pop
out
cli
pop
jecxz
ficoml
shll
out
mov
out
sub
insb
movsb
cmpsb
imul
test
pop
jmp
test
push
inc
jae
lret
sbb
mov
pop
pop
std
push
sub
popf
repnz
mov
aas
sub
cs
xlat
shlb
mov
out
addl
mov
sub
adc
add
push
xchg
je
test
ds
push
mov
shrl
mov
in
jp
in
xlat
pop
push
das
pop
mov
stc
pusha
mov
dec
inc
aas
fldenv
xchg
xchg
fistpll
fmuls
lret
mov
test
push
xor
mov
push
jo
pop
mov
lret
testl
test
push
cwtl
dec
add
push
mov
pop
sbb
sub
sub
mov
or
dec
divl
adc
adcl
adc
dec
scas
sbbb
xchg
push
out
insb
push
xor
cmp
add
add
in
push
mov
sbb
mov
jnp
adc
roll
mov
cmpl
xchg
rcll
notb
lock
inc
lock
ror
inc
jl
mov
subl
js
test
sub
out
daa
das
or
cmp
dec
shrb
mov
cmpsb
icebp
push
jp
mov
dec
dec
inc
out
mov
adc
jns
std
cmp
mov
icebp
loopne
mov
std
xor
iret
cltd
iret
mov
lock
fsubrs
cmp
int
movsb
out
rcrb
lret
test
ds
push
xchg
xchg
mov
out
inc
pop
in
test
mov
xlat
add
popa
and
out
call
cli
insb
jmp
mov
in
call
aas
in
jns
negb
dec
sub
jle
test
in
add
mov
and
sub
mov
sub
and
sahf
or
cmp
sahf
shlb
popa
mov
gs
neg
out
mov
or
mov
scas
xor
rol
jmp
jne
movsb
mov
dec
sub
jae
jle
ja
idivl
xchg
out
xor
sbb
inc
cmp
push
mov
out
test
sbb
sti
pop
cld
pop
mov
dec
in
fisubrs
mov
add
lahf
fdivp
inc
jp
addl
shl
in
jno
call
dec
das
jb
jo
loop
hlt
mov
stc
dec
adc
daa
decl
imul
xchg
idivl
push
mov
iret
inc
lret
gs
mov
sbb
xchg
xor
std
push
jecxz
clc
outsb
gs
xchg
pop
mov
rcll
cmp
test
push
movsb
adc
xor
js
add
test
movb
mov
xchg
ss
add
js
adc
adcl
ja
fsubl
push
shl
jge
jg
loop
and
xchg
push
pop
pop
pop
add
addr16
popf
xor
dec
lret
xor
shrl
sub
enter
xchg
loope
xor
pavgb
mov
scas
out
rolb
in
out
dec
mov
gs
push
lea
jb
lret
roll
test
in
push
popf
mov
jle
nop
add
pop
xchg
repz
xor
aam
pop
push
stos
je
cwtl
insl
cmp
xor
mov
in
testl
aam
jbe
sub
rcll
mov
inc
jl
cmp
cmpsl
rcr
jl
lret
add
cld
or
mov
push
repz
xor
into
cli
or
dec
jge
int3
dec
fcomps
in
jne
push
fiadds
sahf
maxps
mov
imul
inc
adc
cmp
neg
cmpsb
sti
lds
fistpl
arpl
xchg
cwtl
lock
nop
mov
pushf
inc
dec
push
inc
into
out
add
sbb
pop
test
xchg
or
and
movsb
lds
jecxz
gs
popa
outsb
data16
xchg
dec
cli
inc
outsl
orb
mov
jnp
ret
push
orb
pop
mov
sub
in
push
outsb
leave
aam
arpl
cmc
and
clc
jle
jbe
scas
popf
xchg
xchg
filds
xor
shrb
push
addb
add
into
addr16
add
addr16
adc
fisubrl
sub
data16
aaa
or
test
cltd
aaa
cmp
jb
add
std
int
xchg
mov
clc
dec
sub
and
popf
push
adc
mov
sub
imul
or
lcall
mov
ds
scas
push
ljmp
jnp
dec
roll
out
call
dec
dec
stos
dec
pushf
sbb
push
movsl
aaa
dec
js
movsl
dec
aaa
mov
call
in
pushf
mov
adc
push
data16
ret
arpl
bound
inc
fisubs
jg
adc
dec
xor
lock
sbb
jge
aas
flds
mov
add
dec
es
es
lods
popf
sbb
sbb
int3
mov
sete
pop
call
add
push
ret
dec
dec
xchg
mov
cli
lea
pop
dec
sub
popf
fnsave
fldt
aas
pop
shll
and
sbb
pop
ret
in
pop
test
xor
addr16
mov
xor
sahf
in
test
mov
xchg
dec
or
ja
adc
loopne
jbe
and
lock
sahf
repz
test
jg
push
mov
pop
loopne
fists
js
movsl
pop
movsl
inc
cld
test
js
faddl
loope
loop
and
nop
push
add
add
or
test
xlat
lea
mov
imul
aad
jno
mov
pushf
imul
inc
pop
icebp
in
insl
xchg
shl
jno
mov
out
bound
cld
dec
mov
mov
inc
jle
clc
fstl
movsl
out
xlat
pushf
pop
jmp
fadds
rorb
stc
fisubs
nopl
ret
push
cs
pop
adc
test
xchg
rorl
mov
iret
sub
outsl
mov
out
mov
jge
jp
cmp
jmp
sub
out
test
xchg
sub
mov
or
jno
loop
sub
loopne
xchg
imul
and
push
icebp
pop
dec
cmc
xor
repnz
adc
xchg
adc
jge
outsl
test
xchg
push
sub
inc
mov
js
scas
stos
and
sbb
push
sbb
mov
jp
outsl
bound
ja
rorl
jne
insl
imul
cmp
lahf
push
mov
pushf
xor
scas
outsb
mov
mov
sti
sbb
bound
cmp
inc
pop
push
cmp
add
pop
or
lds
cmpsb
push
enter
repz
iret
xchg
sbb
add
lock
xor
outsb
sub
pop
fdivr
sub
jp
mov
lret
les
jmp
adc
lcall
outsl
je
mov
in
cmc
push
rcr
dec
pop
addl
aam
cmpb
mov
std
lcall
xchg
out
xchg
mov
fisubl
cmp
adc
shl
leave
ja
ja,pt
pop
mov
or
pop
dec
or
jg
je
cmp
lock
inc
xlat
jnp
into
sbb
mov
divl
and
and
test
fisubs
faddp
or
iret
jmp
icebp
lds
xor
or
fmuls
divb
adc
or
pop
mov
insl
insl
dec
fwait
xchg
int
dec
test
mov
xchg
fbstp
cmp
pop
das
or
or
into
jnp
xchg
aas
out
jo,pt
sub
jge
push
cmp
lods
cld
jmp
stos
push
mov
mov
xor
movsb
mov
jmp
or
clc
mov
cmpb
sets
mov
sub
mov
rcll
jb
push
cmp
xor
xor
pop
jno
loopne
jmp
mov
jecxz
iret
push
out
mov
clc
xlat
lret
mov
cld
dec
mov
js
xchg
mov
loop
push
aam
sub
ds
add
sub
adc
scas
outsb
cmpl
jle
insb
dec
mov
pop
aam
test
es
test
mov
push
xchg
icebp
xchg
mov
into
push
aas
in
cmc
adc
fs
sbb
push
jbe
add
fmull
outsl
stc
cmpsl
sbb
xor
int
inc
das
imul
repnz
int
mov
test
mov
sbb
or
and
sbb
clc
adc
sub
dec
adc
roll
loopne
xor
pusha
loop
adc
ljmp
or
add
or
add
rorl
add
jbe
xor
mov
dec
jle
bound
into
ret
clc
jmp
imul
leave
add
hlt
push
xor
js
inc
sub
xchg
sub
mov
adc
xchg
stos
mov
mov
out
test
xor
add
lds
or
fisubrs
clc
cli
xor
lods
push
inc
sub
scas
out
fst
pop
shll
lods
adc
xor
out
rol
pusha
jno
aas
jne
subl
or
pop
into
jo
cmpsl
mov
pop
inc
lahf
sbb
and
ret
xchg
jnp
add
in
mov
xchg
adc
ljmp
lret
adc
pop
ljmp
out
push
mov
es
cmpsb
dec
jl
mov
iret
shrb
jg
and
adc
xlat
loope
jae
fdivrp
lea
ds
or
xchg
inc
out
pop
ljmp
mov
pop
je
pop
shlb
cmp
bound
fs
mov
ficoms
sbb
inc
or
cwtl
jp
mov
lea
aas
mov
sar
cld
arpl
mov
dec
out
xchg
fiadds
add
pusha
daa
cmp
fisttpl
pop
xchg
mov
and
shlb
call
mov
jecxz
xchg
dec
aam
out
and
cmp
mov
mov
push
adc
mov
push
sub
mov
or
or
adc
test
lods
add
lock
rcr
cs
jb
in
insl
sub
jmp
into
sub
aas
mov
decl
jle
xor
fcmovnbe
cld
mov
rcl
xchg
adc
jnp
out
sub
xor
lock
jo
xor
out
das
cli
sbb
sbb
imul
pop
das
push
or
push
xchg
dec
add
scas
mov
inc
stos
fadd
jge
ja
sahf
mov
ss
cmp
dec
sub
imul
jl
jl
xchg
xchg
or
xchg
mov
adc
stc
ret
mov
and
stc
shr
pop
dec
pop
arpl
arpl
sub
test
xchg
jl
push
push
ret
pop
pop
stos
cs
addr16
add
or
loope
inc
sbb
and
mov
adc
fisttps
mov
mov
dec
push
mov
fsub
xchg
pusha
jp
je
mov
xor
out
mov
push
test
lea
inc
push
lret
inc
cmp
sub
and
in
loopne
in
mov
pop
and
ret
ret
jae
sub
jo
mov
in
xchg
and
loopne
sbbl
out
xor
xor
lea
fcoml
adc
jnp
jp
jo
inc
xor
or
mov
push
sub
mov
test
push
pcmpeqw
pop
in
cmc
cmpsb
xchg
sub
mov
xchg
inc
fidivrl
xchg
test
arpl
mov
jnp
les
testl
sub
mov
mov
rorb
bound
jne
mov
ret
or
cli
mov
fwait
push
dec
jge
fists
outsb
in
movsb
sbb
push
test
roll
hlt
test
push
inc
adc
push
int3
mov
lock
mov
mov
mov
inc
in
mov
js
jns
js
push
dec
sub
call
xor
mov
sub
aad
sti
inc
jns
jne
push
sub
push
xchg
aaa
test
dec
dec
call
push
mul
pop
inc
lds
jo
mov
ljmp
add
cmp
push
jns
pop
shll
inc
push
and
test
cmp
insl
das
mov
sbb
mul
lret
sub
jno
xchg
lcall
out
and
sub
hlt
lahf
out
dec
pop
jecxz
push
cmp
loopne
dec
pop
stos
mov
mov
test
or
xlat
aam
sbb
fdivl
test
mov
aas
outsb
add
imul
int
in
jnp
movsl
sub
inc
jae
mov
push
xchg
call
xchg
dec
or
pusha
pop
stc
jecxz
jge
fstl
mov
push
sbb
jo
lahf
mov
dec
icebp
xor
push
sub
movl
xchg
add
xchg
daa
testb
rorl
lods
xlat
ret
add
inc
mov
fwait
jl
cmp
add
sub
cmc
cmp
ljmp
lcall
hlt
test
mov
gs
jmp
adcl
insb
lods
idiv
ret
imulb
mov
movsl
push
das
shll
mov
mov
or
lods
in
xorb
xor
insl
pop
dec
push
outsl
xor
push
scas
adc
repnz
imul
loop
std
test
cmp
lahf
lock
dec
aam
lea
shl
push
add
int
sub
sbb
fs
jmp
adc
jmp
iret
sub
sub
push
jge
pushf
dec
dec
and
in
mov
xchg
mov
int3
imul
and
cmpsl
out
mov
int3
cwtl
add
xor
add
das
mov
imul
jo
in
adc
daa
out
test
xchg
jge
inc
add
call
jmp
or
mov
mov
std
jg
mov
cmp
je
imul
into
repz
shlb
popf
in
and
xlat
sbb
mov
daa
imul
ret
inc
lods
jo
jbe
push
fs
into
loop
jg
cld
xor
in
clc
or
lods
inc
mov
cmp
std
pusha
test
xchg
mov
nop
jg
cmp
xchg
jo
jg
pop
xlat
jl
daa
xor
or
mov
sahf
adc
and
stos
mov
scas
popf
xorb
xor
aas
scas
jmp
pop
mov
ja
push
jmp
scas
movsl
sub
sbb
or
dec
aad
sbbb
ficompl
jecxz
test
mov
in
in
adc
or
imul
jb
out
mov
add
adc
xchg
pop
jg
cmp
push
lods
repz
dec
xchg
aad
mov
mov
iret
shr
aad
rolb
push
lds
pop
push
inc
pop
jo
sub
leave
gs
lret
std
into
push
lcall
dec
aaa
in
push
mov
pop
in
mov
jge
mov
mov
clc
pop
orl
je
push
jnp
xchg
adc
outsb
cmc
ss
addr16
mov
cmp
lock
mov
jo
sahf
mov
js
inc
fisubrl
insb
mov
rep
add
lret
push
ljmp
in
leave
push
ds
mov
adc
jl
mov
repz
cmc
sbb
inc
stos
push
pop
pop
or
scas
push
mull
repz
fcoms
add
out
or
mov
les
filds
mov
mov
jge
mov
inc
jmp
xor
push
mov
ficompl
ljmp
and
jle
pop
leave
jno
adc
add
lcall
adc
xor
cltd
jp
leave
ficomps
out
pop
xor
enter
mov
int3
test
pop
test
sbb
jno
mov
loope
imul
insl
push
xor
xchg
sbb
or
sub
fs
icebp
push
in
test
aaa
or
lods
popf
jge
jns
sti
push
aaa
ja
or
adc
inc
push
mov
xchg
data16
jae
popa
lds
fnstsw
fmuls
and
push
clc
je
subb
out
jnp
push
das
cmp
stos
mov
das
rorl
xor
lock
cs
das
fstpl
repz
ljmp
stos
arpl
and
dec
push
mov
and
jbe
push
mov
int
pop
pop
adc
outsl
ret
bound
jge
aas
dec
loop
movsb
nop
hlt
push
lds
daa
jp
gs
inc
sbb
outsb
ficomps
jl
push
inc
sub
add
call
movsl
int3
mov
mov
sub
adc
push
xchg
mov
fldz
jp
cltd
imull
mov
dec
sub
push
shrl
xor
scas
mov
lock
jno
sbb
leave
sbb
cmc
lcall
mov
and
xlat
or
lds
enter
cltd
mov
sub
cs
out
pop
push
enter
adc
push
in
popa
ljmp
push
fists
jmp
daa
jp
push
ret
loopne
mov
pmovmskb
aaa
xor
mov
stc
sub
xlat
and
loopne
stos
mov
test
mov
movsl
jns
dec
inc
aaa
loope
inc
mov
xchg
cmp
gs
or
sbb
jbe
pop
scas
cli
mov
fwait
cli
outsl
es
or
and
outsl
mov
jecxz
mov
xchg
aaa
inc
mov
pop
mov
ret
shll
dec
mov
xchg
pusha
pop
xorb
mov
dec
mov
sub
mov
cmc
rcrb
adc
pmullw
in
sub
adc
cmp
xlat
sbb
pusha
push
arpl
push
mov
sbb
or
rorl
icebp
xchg
lods
jb
sbb
inc
bndstx
les
push
xor
popf
xor
sub
aas
inc
xchg
xorl
pop
jo
mov
jne
mov
repnz
push
arpl
xor
xchg
mov
pushf
frstor
stc
enter
adc
jl
dec
pop
scas
in
jmp
or
dec
xchg
jne
leave
sbb
sub
subb
js
test
inc
adc
lds
mov
adc
stc
repz
jl
insl
mov
mov
cs
int3
fdivr
fisttps
jp
hlt
xchg
mov
pop
loope
mov
testb
cmp
lret
faddl
mov
add
mov
add
lea
int3
mov
fdivrs
adc
xchg
ret
inc
push
and
mov
das
sbb
jbe
sbb
dec
cmpsl
data16
xchg
repz
xchg
lds
xlat
pop
js
push
arpl
add
rcll
push
xchg
xor
loop
mov
inc
in
sbb
ja
mov
xchg
sub
sbb
mov
sub
add
repz
jmp
fiaddl
addr16
mov
insb
gs
xchg
jmp
xor
jb
cmp
or
fists
sub
sbb
call
cmp
dec
xor
in
sarb
cmp
and
es
pop
cmp
lds
or
test
dec
cmp
mov
out
and
pop
push
js
stos
cltd
shrw
sbb
mov
adc
fnsave
cs
daa
cmp
sahf
fs
mov
int
push
mov
nop
enter
mov
fadds
jo
mov
xor
repnz
add
fdivl
xchg
loope
mov
icebp
ret
movsl
ja
outsl
jp
call
cmp
fsts
sbbl
outsb
sub
sub
jecxz
popa
or
arpl
xchg
sub
enter
mov
aad
in
ret
xor
hlt
in
jle
sub
int
test
stos
adc
dec
insl
movsb
sbb
push
out
mov
and
mov
lahf
mov
sbb
pushf
xchg
sbb
dec
stc
mov
sbb
jmp
add
repz
jae
shlb
ss
cmp
stc
mov
movb
in
dec
add
rcrl
add
lcall
scas
mov
xchg
ljmp
add
loop
imul
adc
not
mov
test
add
and
mov
sub
cmp
xchg
jl
push
push
sbb
xor
movsl
jg
push
cmp
jmp
pop
or
arpl
jae
cltd
adc
fmuls
mov
lahf
pop
cltd
mov
loopne
and
sahf
jge
cmp
mov
cmpb
ret
daa
inc
movsb
or
cmp
ja
inc
sbb
xchg
lcall
scas
mov
test
mov
gs
sbb
shll
enter
mulb
jb
icebp
push
data16
data16
inc
inc
pop
fisubrl
leave
mov
pop
push
mov
movsl
xor
scas
scas
and
clc
add
adc
dec
out
mov
jecxz
shlb
iret
leave
inc
cmp
mov
shr
jmp
pop
push
repz
add
test
mov
nop
push
adc
adc
jg
xor
popl
adc
and
inc
mov
stos
sarb
fs
dec
xor
clc
xchg
aam
and
fldl
add
jns
sti
in
cwtl
cwtl
push
cmpsb
push
cmp
sarb
pushl
lods
adc
test
fs
add
cmp
ja
or
mov
add
pop
jge
jecxz
jecxz
int3
add
jb
jnp
jnp
fildll
mov
arpl
gs
push
jo
mov
movsl
push
pop
push
rclb
jb
or
xor
xor
cli
sbb
inc
xor
cli
push
push
jb
mov
xchg
jmp
pusha
cmpsl
popf
enter
dec
outsb
jl
test
pop
outsb
push
xor
aad
mov
lea
sub
cmp
clc
dec
or
ja
sbb
dec
ds
cwtl
cltd
or
cmpsl
out
push
test
ds
jnp
add
xchg
dec
pop
popl
adcb
scas
push
adc
mov
das
mov
leave
inc
mov
in
push
cltd
iret
adc
adcl
add
cmp
cmp
inc
mov
adc
cmpsl
jp
es
cmp
lock
lds
dec
and
insb
or
jge
add
insl
xor
xchg
adc
lcall
hlt
mov
popf
loop
iret
push
nop
jecxz
xor
dec
sqrtps
out
mov
xchg
test
xchg
jnp
in
jl
ss
push
xchg
dec
push
lods
jnp
aaa
push
addr16
sti
pop
mov
jl
lea
jecxz
mov
push
mov
inc
int
mov
sub
mov
imul
inc
movsl
das
add
jg
dec
sub
jge
or
and
clc
int
rorl
mov
push
pop
cmp
pop
arpl
js,pn
pop
mov
mov
xchg
orl
loop
outsb
ljmp
cmp
dec
movsl
ljmp
mov
mov
aad
sahf
lds
sbb
or
and
mov
pop
or
cmp
aas
mov
xchg
mov
pop
xchg
xlat
inc
jp
add
int
xchg
sbb
adcl
in
dec
adc
mov
xchg
xchg
add
fucomip
popa
dec
inc
mov
pop
xchg
sbb
das
xchg
push
cmc
jmp
and
shlb
test
sti
mov
sbb
add
push
fcomp
out
jp
adc
lods
inc
sub
adc
jns
xchg
fnstsw
int3
push
mov
std
pop
or
push
push
and
std
imul
out
and
popa
mov
pushf
add
push
lods
xchg
or
dec
and
push
push
stos
and
mov
out
repz
cmc
sub
sbb
adc
out
lahf
or
es
adc
push
or
loopne
inc
rcll
adc
in
add
xchg
fisubrs
adc
inc
repnz
jmp
sti
lock
sahf
scas
movsb
and
sbb
mov
daa
xor
scas
pop
in
mov
inc
ja
pop
cmp
and
lahf
pop
aaa
jmp
and
fbstp
data16
xchg
imul
mov
pop
push
in
jg
adc
js
icebp
and
mov
push
scas
fisttps
dec
mov
or
loop
xchg
ret
std
add
sub
jne
push
out
dec
jo
dec
cmpb
add
xchg
loope
jnp
add
out
scas
sbb
icebp
dec
mov
push
aam
lods
loopne
jae
jb
stos
or
int
dec
cmpsl
nop
ljmp
mov
xchg
jb
jmp
push
shrb
inc
mov
lock
pop
inc
fcmove
stc
mov
xor
adc
push
pop
loopne
cmpsl
cmp
fs
insb
rorl
fisttpll
andb
push
shrd
fwait
push
xchg
shr
mov
imul
pusha
sbb
aaa
in
popf
xor
add
jp
xchg
insb
pop
push
sbb
pushf
sbb
lea
arpl
xchg
out
sub
cmp
lahf
mov
push
mov
aad
cmp
daa
jno
ret
ja
fmuls
insb
sub
mov
lretw
outsl
cmpb
cld
int3
pop
call
cld
push
sti
mov
or
mov
jg
out
adc
push
pop
inc
jp
call
inc
sbb
xchg
cltd
gs
jge
testb
or
stos
jo
jb
seta
test
fmuls
push
add
mov
rol
pusha
or
xchg
pop
xchg
rcr
loope
repz
scas
push
pusha
sub
and
xchg
or
movsb
stos
pop
adc
pop
xor
push
mov
cmp
lahf
repnz
push
pop
sub
addb
mov
jp
movb
scas
popa
daa
test
sarb
jo
enter
ljmp
xor
xchg
rcll
movsl
mov
add
xor
dec
mov
stc
divl
pop
out
lret
push
jg
rcrb
rorl
sbb
bound
xchg
dec
jbe
mov
popl
mov
push
hlt
cmp
addb
in
enter
clc
sbb
push
mov
cli
aas
sbb
lcall
insl
outsl
insb
mov
inc
add
mov
jb
cmp
mov
mov
test
lret
mov
ror
xchg
push
inc
shrb
cs
jb
or
cmp
mov
jbe
xor
insl
push
in
movsl
jp
mov
sbbl
daa
nop
loop
adc
lods
outsb
mov
shlb
mov
jns
add
dec
dec
sbb
fistpl
in
dec
xchg
jp
div
jns
mov
dec
out
xor
testb
or
add
add
std
jg
sti
daa
mov
add
aam
mov
and
jne
lret
divb
mov
add
lds
xor
mov
lock
clc
fildl
pop
mov
bound
clc
pop
push
cmp
lds
clc
cmp
inc
pop
in
addr16
out
sti
cmp
pop
mov
mov
sub
jecxz
fdiv
jne
loope
cltd
xchg
fwait
jg
or
mov
pop
ja
pop
mov
inc
leave
add
mov
and
in
inc
push
sbb
mov
inc
fldenv
cmpsb
xchg
and
sub
call
mov
pusha
pop
mov
jns
xor
or
push
leave
xor
cmp
cli
push
imul
cli
push
and
mov
sub
push
lret
insl
out
sub
adc
xchg
imul
mov
or
movsl
in
push
mov
outsb
jecxz
or
sbb
lcall
mov
in
xchg
adc
jnp
dec
jbe
aam
andb
ja
notl
xchg
jmp
movsb
and
xchg
into
xchg
inc
adc
or
adc
movl
and
pop
shll
push
pop
clc
xor
mov
add
dec
cwtl
cmp
adc
shll
icebp
pop
pop
jns
xchg
pushf
mov
ds
sub
mov
fdivrs
and
jge
sub
and
popa
sub
add
inc
sub
mov
xor
xor
and
push
incb
js
ror
aam
dec
shl
imul
int3
dec
roll
in
mov
in
and
mov
jno
jo
mov
sub
push
mov
xlat
mov
mov
test
adc
imul
mov
in
in
cmp
cmc
adc
int3
jbe
sbb
jle
cld
popa
imul
mov
sbb
xor
mov
mov
xchg
int3
cld
jb
mov
push
les
mov
mov
cltd
and
jg
das
mov
push
stos
leave
dec
cmp
aaa
jp
add
dec
outsl
mov
xor
shll
adc
cmp
int
cwtl
jmp
fisubrl
mov
stos
pop
sub
test
add
pop
shl
loopne
xor
in
mov
pop
jb
dec
xor
adc
mov
xchg
mov
pop
jb
mov
xor
mov
imulb
add
mov
pop
loopne
dec
mov
pop
ret
xchg
dec
xchg
add
inc
push
and
sub
ja
mov
pop
inc
push
test
dec
dec
sbb
xor
out
inc
pushf
hlt
lahf
mov
and
mov
dec
cmpsl
dec
mov
out
cmpsl
bound
mov
pop
int3
dec
loopne
jp
mov
sbb
jno
ret
and
pushl
es
arpl
not
pop
call
xchg
mov
arpl
inc
sbb
add
adc
add
xor
sbb
mov
jp
mov
push
jo
sbb
stos
sti
jnp
das
out
mov
ja
jb
movsb
add
cmp
out
and
cltd
and
fstl
aam
inc
out
xchg
leave
jae
sbb
int
mov
xor
add
pop
inc
cmp
cmp
add
push
ds
leave
xchg
rcll
int
lods
mov
nop
xor
popa
dec
aas
js
fwait
movsl
je
ljmp
stc
rolb
jae
push
stos
xchg
leave
jmp
ret
pop
imul
pop
jge
mov
or
mov
mov
cltd
cmp
call
push
inc
or
shll
adc
aas
dec
jnp
pop
add
sbb
mov
xchg
sub
pop
inc
push
outsb
gs
loopne
mov
ja
nop
in
pop
scas
fcoml
xchg
jbe
dec
inc
mov
xchg
xorb
hlt
xor
in
sbb
loop
mov
movb
jb
data16
enter
sbb
lods
movl
insl
call
inc
mov
sbb
jnp
dec
jp
cmp
cltd
xchg
pop
jg
stos
in
icebp
pop
add
fucomip
mov
scas
and
loopne
mov
xor
andb
cltd
push
mov
adcb
adc
aam
and
add
cmpsb
test
mov
aam
rol
dec
xchg
pop
push
mov
push
cwtl
add
mov
test
and
aaa
push
lock
xchg
repnz
jmp
push
iret
es
or
pop
add
in
leave
pushf
xor
out
push
jo
fucom
mov
mov
add
add
mov
mov
leave
xchg
mov
aas
das
cmpsb
pop
outsb
insb
data16
addr16
stos
std
mov
andb
mov
ret
je
adc
mov
ljmp
mov
idivb
sub
fucomi
fstpl
mov
sub
hlt
lcall
jne
test
lods
adc
or
or
div
push
pop
fdivr
call
jae
data16
cli
imul
push
and
int3
fwait
mov
leave
push
rcll
cmpsl
repnz
pop
pop
add
loopne
jo
sahf
push
xchg
stos
mov
icebp
insl
out
adc
push
lcall
fldl
lahf
adc
push
sbb
test
push
mov
xchg
loop
pop
mov
lahf
into
test
pop
pusha
inc
push
ja
mov
out
jno
pop
inc
push
popa
movsb
mov
mov
fcoml
std
jg
inc
mov
sbb
rcl
sub
popaw
and
jae
pop
dec
out
arpl
nop
leave
aas
push
pop
push
cld
andb
pop
jb
arpl
sub
ret
cld
ror
pop
iret
mov
cwtl
adc
dec
enter
sahf
stc
inc
dec
push
mov
and
out
stos
mov
push
pop
or
cltd
inc
and
push
dec
fldt
push
scas
insl
mov
subl
xchg
in
lock
rcll
mov
rorb
push
inc
mov
pop
stos
clc
mov
nop
jge
cmp
in
or
mov
add
add
mov
inc
stos
lret
lea
call
in
ret
outsb
sti
dec
pop
leave
xchg
jg
adc
test
test
cmp
and
arpl
sbb
add
xchg
rcrl
pop
aaa
inc
push
mov
hlt
or
es
outsb
push
mov
sub
mov
jg
inc
pop
cs
fisubrs
out
inc
sub
mov
sub
and
outsb
dec
stc
in
mov
test
mov
or
inc
shr
and
cmpps
cvtps2pi
mov
insb
mov
pusha
in
jne
cltd
push
mov
pop
inc
sub
ds
repnz
fsubl
mov
sbb
outsl
sbb
pop
dec
xor
sbb
rorb
pop
stos
push
ja
fistpl
sbb
cmpsl
aad
push
mul
stos
inc
roll
aam
dec
push
scas
inc
into
or
lds
pop
cmpb
inc
flds
ret
fs
lahf
lods
out
dec
jle
dec
adc
jbe
loop
push
fdivs
dec
pop
out
jl
enter
mov
jg
mov
jmp
cmp
mov
inc
mov
negb
leave
pusha
out
xor
add
mov
mov
adc
xchg
jg
lahf
sti
cs
inc
aaa
sbb
hlt
icebp
adc
mov
stc
fadd
adc
or
test
je
popa
testb
push
pop
cli
dec
push
cmp
call
sti
mov
cltd
ficoms
popf
fnstenv
inc
jbe
xor
sahf
lock
sti
inc
mov
xchg
js
insb
rolb
xor
xchg
andl
or
lea
pop
mov
dec
lods
stos
data16
int
pop
outsb
jns
in
addr16
cmpsl
sbb
mov
das
mov
mov
scas
fs
mov
movsb
mov
push
mov
mov
das
inc
fdiv
rorl
jno
xchg
js
push
or
das
fld
inc
fdivrl
das
sbb
sbb
jl
cmp
cmp
cmp
dec
or
inc
and
insl
stos
ret
repz
dec
and
js
or
inc
sbb
loope
sub
das
jle
aas
ljmp
mov
mov
add
loopne
push
icebp
adc
pop
or
push
and
mov
push
or
test
adc
lods
xchg
pop
dec
int
std
sbbb
mov
cmp
scas
sbb
cwtl
add
inc
cmp
out
dec
fst
mov
sub
popa
out
push
jnp
mov
leave
mov
loop
push
cld
aam
popf
xchg
jb
scas
xor
add
clc
je
ret
fnstenv
test
pop
fsts
addr16
or
ret
test
jp
mov
sub
rcrb
adc
or
icebp
push
dec
sub
aaa
andb
jb
imul
pop
push
cmp
or
pop
push
inc
jne
scas
push
in
jl
mov
sahf
sbb
addr16
stc
adcb
jbe
pop
sarb
jo
and
clc
fs
add
mov
out
push
jb
in
inc
rorl
adc
cltd
xchg
fsub
sub
push
pop
lahf
daa
movsb
fldcw
adc
repz
pushf
adc
xabort
imull
aam
jo
and
mov
shrb
rolb
lods
add
stos
mov
and
lods
nop
mov
or
test
adc
pop
mov
mov
loop
dec
ret
xchg
xor
insb
popf
nop
out
enter
inc
pushf
pop
ficoms
scas
sbb
cltd
or
push
adc
sahf
fsubrs
test
pop
insl
push
mov
cs
push
aaa
jo
sbb
mov
pop
lods
test
pop
cmc
das
loopne
push
ss
mov
push
cmp
ss
dec
sub
test
inc
in
xor
dec
int
lcall
popa
ja
mov
xlat
and
pusha
jno
dec
jo
and
cs
lea
jge,pt
and
push
jo
out
jb
adc
xor
es
lods
lea
add
push
lds
clc
lods
repz
cwtl
add
out
fisubl
xchg
aad
cmp
mov
mov
dec
fadds
leave
sbb
clc
cmp
ss
inc
dec
test
inc
pushf
icebp
jecxz
push
insl
loop
and
adc
add
sahf
pop
lahf
adc
shll
mov
push
cld
ds
js
mov
cltd
and
decb
mov
dec
bound
ja
sbb
cld
in
fucomip
pop
ja
add
test
or
inc
test
lods
xor
jge
bound
ja
pop
adc
cmp
push
lock
aad
mov
sbb
inc
xor
xor
stc
dec
gs
leave
and
lret
sbb
push
adc
int
popl
mov
sbb
mov
popf
shrl
inc
sub
cltd
inc
pop
aad
jno
inc
xchg
dec
xor
lock
inc
and
xchg
and
push
and
loopne
leave
fbld
mov
mov
cmp
popf
testl
jnp
scas
sbb
nop
ljmp
jecxz
jmp
push
jp
movsb
xchg
xor
inc
mov
dec
pop
xor
aam
pusha
pushf
pop
repnz
sbb
dec
xchg
pop
sti
arpl
inc
add
xchg
in
test
rclb
scas
fcmove
std
xchg
clc
mov
push
loop
mov
iret
loop
mov
push
fcmovbe
dec
mov
ret
test
data16
loopne
loop
cltd
push
dec
push
jl
sbb
adc
arpl
cltd
ficoml
jge
xchg
popa
push
shlb
int3
lods
bound
fucom
add
lods
mov
dec
push
or
out
inc
ja
sbb
stc
data16
dec
or
xor
mov
fsubs
addr16
rolb
loopne
pop
mull
sti
cmp
es
js
dec
scas
push
fprem1
mov
pop
jle
sbb
imul
pop
mov
pop
std
iret
ret
jne
es
sub
cmp
adcl
dec
or
xor
mov
jp
fnstsw
call
sbb
movsl
cli
pop
dec
stc
adc
in
int3
jmp
fidivl
jb
shlb
in
jg
add
and
hlt
pop
in
dec
fidivs
push
sub
outsb
cmp
out
xlat
daa
mov
mov
cmc
fisttpl
repz
divl
fidivrl
push
fidivl
jmp
lcall
lock
pop
adc
popa
mov
stos
nop
popa
and
sbb
push
jb
dec
push
jmp
stos
pop
xchg
sti
mov
sbb
inc
xor
lods
push
aas
imul
in
xlat
jl
test
adc
push
sbb
cwtl
pushf
add
inc
stc
shrb
push
xchg
loopne
push
je
out
mov
mov
mov
test
leave
cmp
pop
hlt
xchg
cltd
cmp
setp
movsl
mov
jnp
lods
fistpl
push
dec
aas
sub
imul
xorl
mov
and
mov
sti
push
inc
pop
mov
imulb
inc
ja
xor
imul
test
or
icebp
pop
pushf
pop
dec
jmp
cmp
daa
loopne
pop
jmp
jbe
and
sbb
pop
cmpsl
cmp
iret
dec
or
sahf
lret
les
mov
hlt
cmp
js
clc
cld
rolb
cmp
scas
jge
ret
out
or
sbb
mov
scas
gs
adc
sbb
bound
adc
sub
arpl
lret
xor
cmp
push
lock
scas
xorb
jge
scas
mov
aas
js
ret
sbb
adc
stos
xor
clc
mov
in
or
lods
rcll
mov
pop
in
xchg
loopne
int
cmp
jb
lock
push
push
insl
out
popa
adc
out
in
lcall
cs
cld
rclb
mov
icebp
sbb
test
mov
sbb
nop
das
push
pop
push
dec
pop
lock
in
cmp
sbb
in
sti
cmc
aaa
pop
or
imul
std
gs
outsl
mov
push
ss
inc
adc
pushf
xchg
pusha
movsl
jg
sbb
inc
sbb
out
xlat
mov
mov
push
push
insl
or
lcall
call
push
in
and
mov
subb
rcll
stos
dec
ret
scas
mov
inc
mov
addr16
xor
jp
test
sub
es
subl
shrl
scas
mov
mov
cs
push
fwait
adc
imul
jb
pop
clc
xor
mov
pop
mov
in
pop
xchg
lock
movsb
cltd
xchg
xchg
cmp
pusha
adc
push
xchg
lds
frstor
pop
int
out
jmp
ss
clc
cld
xchg
into
lock
jge
xor
jg
sub
insb
xchg
in
cmc
rolb
adc
or
xor
cltd
push
inc
lds
test
fdiv
in
push
pop
mov
jns
cwtl
xor
pop
js
stos
mov
mov
adc
cmp
mov
pop
jge
push
and
pop
jl
rcrl
scas
test
outsl
cmp
das
pop
xor
ret
int3
repnz
fisttps
out
fbld
mov
jecxz
jns
mov
add
add
mov
in
popf
test
xchg
cs
inc
mov
inc
std
aas
adc
cmp
and
shrb
or
jb
sti
pop
sti
scas
sub
jne
jne
js
and
sbb
loope
push
xchg
push
sahf
cld
push
sub
mov
dec
push
xchg
sbb
fisubs
xchg
andb
repnz
push
rcrl
mov
into
mov
inc
dec
pop
pop
mov
movsb
mov
mov
adc
cltd
cs
jbe
jne
mov
cmpsl
stos
dec
jge
repz
sbb
pop
mov
stos
add
push
inc
sbb
push
repnz
ret
push
rclb
push
mov
test
inc
repz
aaa
inc
inc
push
shrb
inc
adc
sub
adc
add
push
pushf
ret
dec
adcb
in
iret
les
inc
fcomip
shrb
and
bound
sbb
stos
push
or
ljmp
test
mov
fsubl
sbb
mov
fs
mov
fsubrs
xor
xchg
nop
lods
push
shrl
stos
test
xor
lcall
cmpsb
xchg
mov
cwtl
mov
or
cmpsl
pop
ret
sbb
dec
cmp
sub
sbb
ds
or
scas
dec
sbbl
arpl
popa
les
cwtl
dec
mov
icebp
inc
shl
inc
enter
add
and
push
inc
jmp
es
and
push
pop
dec
push
fldt
or
es
xchg
inc
jbe
rclb
inc
std
pop
mov
aas
dec
scas
dec
shlb
bound
dec
pushf
cltd
jg
icebp
push
enter
pop
add
cmp
lods
fstp
adc
cmp
jnp
hlt
jp
jmp
cmp
bound
dec
lock
test
jmp
daa
test
push
movsl
jo
add
je
lods
xor
xchg
jne
sbb
or
mov
add
rcrl
pushl
adc
xor
aaa
imul
xchg
imul
or
in
enter
jle
sub
sbb
repz
pop
inc
cmp
loope
add
mov
xlat
mov
and
nop
jl
mov
add
xor
scas
std
fwait
out
cmp
mov
dec
mov
flds
push
insb
cmp
test
and
rcrb
sti
addr16
mov
mov
repz
mov
mov
cmpsl
xchg
in
cmp
dec
sbb
mov
ret
scas
jge
mov
xlat
leave
iret
ds
sbb
inc
inc
cwtl
test
imul
sub
jmp
push
dec
jp
shl
push
and
push
mov
stos
or
outsb
scas
dec
cmc
lcall
insl
xor
jne
mov
sub
insb
andl
call
fsubrl
dec
and
leave
xlat
or
loopne
in
lret
mov
push
jae
cmp
pop
cmp
mov
into
rorb
in
sbb
ret
inc
adc
out
inc
xchg
add
inc
mov
mov
fs
test
xchg
mov
mov
pop
push
stc
push
mov
stos
movsl
aad
test
arpl
jnp
fstpt
pop
jb
ret
jge
add
ret
cmp
jno
out
adcb
or
jbe
add
rclb
pop
or
mov
scas
cmp
in
out
cmpsb
dec
or
cld
and
les
cld
jg
loopne
cltd
jle
lds
sub
clc
cwtl
jg
in
fst
mov
jmp
jmp
lds
push
sub
in
adc
jmp
ds
cwtl
xor
or
xor
pushf
push
das
lods
mov
inc
inc
scas
jl
lock
aaa
int3
cmp
loopne
push
les
test
push
sub
jnp
jle
xchg
pop
mov
pop
ret
push
cld
aam
out
adc
and
mov
mov
inc
mov
out
enter
in
dec
push
stos
mov
inc
stos
cmp
lea
arpl
mov
in
and
cld
in
xchg
fdivrs
loope
adc
in
call
and
cld
cmp
repnz
lret
fwait
push
mov
scas
jne
push
ficompl
cmpsl
mov
pop
pusha
pop
and
mov
pop
pop
inc
push
aad
inc
arpl
xchg
outsb
frstor
std
jge
dec
push
xchg
je
xor
inc
sub
lds
loop
cmpsl
lahf
movsl
push
fbld
and
fisubrs
data16
jno
fs
inc
imul
rcll
inc
mov
or
bound
fs
cmpsl
hlt
dec
je
add
jl
inc
jg
inc
adc
push
in
ljmp
loop
pop
cmp
push
lock
adc
mov
dec
in
push
ja
iret
sbb
out
imul
jg
test
xchg
adc
pop
jp
mov
xchg
jmp
inc
rorl
pop
faddl
sbb
mov
push
xchg
lret
ds
mov
mov
sbb
aad
cli
push
pop
jo
sbb
mov
rolb
jae
push
push
pop
sub
push
sub
inc
ds
gs
jo
mov
adc
push
push
cmpsb
mov
les
out
neg
ret
and
sbb
adc
mov
xchg
pusha
cmp
xchg
outsb
idivl
lret
mov
lcall
adc
adc
aas
addr16
ret
stos
and
dec
aaa
or
out
data16
xchg
lds
subl
push
sub
cmpsl
mov
and
add
outsl
lods
pop
inc
mov
mov
es
cmp
mov
aas
push
xor
enter
mov
ss
or
and
and
jmp
inc
aam
sub
jo
jno
ds
movsl
dec
aad
jne
dec
mov
adc
mov
sub
clc
cmp
flds
out
add
jecxz
inc
sbb
dec
sbb
lret
cmp
sub
push
leave
shrb
popf
mov
push
and
test
gs
or
rol
jnp
inc
and
xchg
xor
and
sub
or
es
sbb
sub
or
mov
push
pop
rcll
jns
and
lret
arpl
adc
jno
loopne
je
notb
push
mov
fucomi
mov
sub
push
popl
nop
test
xor
jmp
daa
hlt
ficoml
mov
fsubs
loop
mov
fdivs
cmp
push
stos
lret
stc
in
clc
hlt
inc
mov
ss
sub
insl
data16
pop
stos
add
cld
testb
xor
imul
sbb
aad
and
xor
out
xchg
mov
cmpsl
fmull
test
push
dec
add
aad
push
ss
mov
jecxz
or
in
xchg
or
hlt
iret
jecxz
pop
mov
mov
pop
sub
xchg
lods
xor
jl
gs
int
ljmp
and
dec
fndisi(8087
jp
pop
imul
inc
add
pop
xchg
jmp
aaa
and
testb
fs
mov
icebp
pop
mov
iret
cmp
loop
push
in
xchg
test
inc
int
pop
xchg
mov
in
rol
loope
pop
sbb
mov
mov
dec
in
aad
iret
sbb
sahf
sbb
in
mov
sbb
aad
out
dec
mov
push
jnp
push
xor
jmp
leave
inc
or
or
aam
sub
and
lret
adc
pop
fimuls
ret
xlat
cld
xor
lret
cltd
cmpsl
cmc
dec
xchg
mov
cwtl
and
jl
test
xor
jmp
fwait
push
cmp
mov
cltd
and
pop
aaa
jmp
mov
test
cwtl
std
mov
aad
and
call
lret
mov
int3
jns
fnstsw
sbb
inc
sbb
jo
cmove
cld
scas
mov
lock
test
sti
sarb
dec
mov
sbb
sbb
push
dec
fcomp
jl
jmp
js
pop
jle
push
fmul
mov
cmpsl
pop
push
mov
xor
lret
ret
mov
imul
mov
xor
aam
add
pop
sub
leave
mov
out
push
mov
subb
stos
int3
jo
xlat
nop
mov
or
pop
sbb
aam
mov
mov
xor
addr16
xor
or
mov
add
les
push
mov
sub
mov
push
push
mov
adc
test
jl
cmp
dec
mov
in
mov
stc
call
xor
xor
push
test
pop
mov
mov
mov
sti
pop
xor
jp
or
inc
xchg
sbb
jnp
jns
int
jl
out
sub
lret
push
xor
lock
or
lds
mov
in
loope
popa
clc
and
push
aaa
sbb
sti
dec
inc
xor
testl
pop
push
or
mov
sbb
jno
out
pop
subb
and
fstps
pop
mov
mov
inc
jnp
ret
add
pop
scas
xchg
les
mov
dec
leave
imul
pop
fcompl
or
xorl
jns
mov
sbb
hlt
sbb
cwtl
add
jecxz
inc
pop
aad
bound
push
push
and
xchg
fmulp
and
das
rolb
lds
pusha
inc
sbb
jl
mov
loopne
mov
mov
stos
add
jecxz
clc
lcall
sahf
sub
sahf
sahf
out
stc
adc
insl
int
sbb
ds
push
pop
les
lea
mov
push
xchg
shl
enter
sbb
aaa
add
lret
adc
aas
push
jae
sarb
ror
adc
sarb
mul
in
stc
pop
repnz
je
cmp
mov
or
and
data16
addr16
iret
pusha
and
sub
cmp
dec
bnd
pop
addr16
dec
sbb
jmp
or
mov
clc
or
rorb
cmp
mov
fninit
movsb
nopl
daa
dec
fdivrp
movsb
sub
nop
jb
pop
push
sti
jb
mov
nop
imul
cli
sar
mov
or
stos
jo
pusha
xchg
mov
out
add
outsl
push
les
xchg
inc
rolb
jle
in
adc
cltd
and
lds
mov
pop
into
push
sbb
cmp
bound
jge
popf
xchg
outsb
mov
cmpsb
pushf
cmp
sbb
mov
add
in
fisubs
testb
cmp
pop
fdivl
xor
test
push
lretw
imul
xor
fs
int3
sbb
adcb
xor
xchg
stos
cltd
pop
in
inc
pushf
add
cld
imul
std
sub
xor
jb,pt
mov
xchg
jge
faddp
push
add
sub
mov
clc
shrl
fists
imul
lock
jle
js
in
ss
aas
inc
pusha
mov
lods
adc
bound
addl
cli
fimull
jle
sbb
xor
rclb
push
jb
in
popf
aaa
mov
xor
and
jnp
sub
cmp
stc
daa
sbbb
fistpl
cmp
int
jne
call
pop
and
lcall
aaa
fiaddl
rcr
xor
mov
and
cld
lret
push
ret
push
js
jp
subb
test
mov
ss
in
sbb
sbb
cmp
outsb
bound
sarl
xor
sbb
imul
lret
popa
rcll
pop
jle
sbb
mov
fsub
xor
addb
test
or
sub
cmpsl
shlb
test
add
adc
push
pop
xor
lock
fildll
adc
lea
push
or
mov
jle
pop
mov
popf
mov
inc
mov
lds
mov
sar
dec
dec
cmp
rorb
les
outsb
lret
adc
repz
mov
lds
jnp
jge
aad
movsb
adc
fdiv
fcmovnu
pop
shll
or
cmp
sub
bound
or
out
xchg
andb
xrelease
add
inc
and
aad
xor
xlat
mov
fs
dec
sbb
iret
fisttps
jnp
pop
das
test
add
mov
addr16
pop
ja
cmp
sarl
idivb
lods
push
inc
cwtl
jle
outsl
ja
fistps
push
pop
sbb
push
dec
push
inc
sbb
insb
test
adc
jbe
lds
pop
dec
mov
add
pop
je
mov
jle
fidivrs
push
addr16
lods
xchg
cmp
in
inc
int3
mov
mov
inc
sbb
insl
push
sbb
inc
es
shrl
gs
mov
xchg
in
shrl
pop
iret
loopne
hlt
push
pop
push
stc
lea
push
dec
pop
xchg
in
dec
enter
mov
pop
icebp
sbb
cmp
dec
adc
xchg
loope
push
lret
rorl
sbb
mov
cltd
daa
and
lret
jae
loopne
clc
shrl
dec
or
pop
mov
enter
mov
repz
cmp
ja
out
push
lret
scas
sbb
push
addr16
cmp
jmp
push
xchg
mov
inc
sahf
adcl
push
xor
or
or
sub
incl
dec
out
and
cltd
aaa
fstl
jae
mov
int3
pop
add
mov
mov
sub
jge
push
aaa
mov
jae
xchg
xor
call
sahf
pusha
mov
cld
movsb
pop
fs
popa
pop
ja
jno
fninit
icebp
add
xchg
mov
lret
inc
pop
pop
icebp
xchg
inc
subb
push
cmp
sbb
and
out
out
pop
adc
divb
jnp
mov
sahf
in
inc
imul
sub
je
inc
or
cmp
jg
jne
or
xor
and
fsub
pop
mov
cs
movsb
in
jae
mov
pop
lods
sub
pop
adc
pop
or
es
mov
out
leave
or
dec
cs
pop
lea
clc
subb
ljmp
sbb
lcall
mov
aam
jnp
add
in
and
xor
jns
mov
into
lret
out
sbb
push
push
nop
popa
sbb
push
pop
aas
es
test
insl
sarl
ss
subb
mov
negb
gs
adc
mov
sbb
mov
xor
sub
sub
inc
mov
in
and
mov
lea
or
in
daa
repz
jle
imul
pop
cltd
mov
or
or
cltd
cld
jne
mov
fistpl
cld
inc
mov
jo
mov
out
inc
movsl
xchg
or
enter
jne
icebp
imul
das
test
push
xchg
pushf
mov
xchg
mov
mov
outsl
cmpsb
nop
repnz
lods
and
test
lret
mov
fildll
push
mov
mov
lret
inc
inc
pop
push
push
loope
cmp
fcompl
ret
xor
cmpb
push
push
mov
call
jbe
lods
lret
mov
pop
pop
hlt
ret
lock
les
xchg
pushf
sti
cltd
mov
in
call
cwtl
fldt
push
scas
andl
add
xor
mov
mov
test
bnd
sbb
push
lcall
push
mov
rcrb
mov
icebp
fidivl
cmp
repz
mov
push
or
sub
pop
gs
mov
scas
dec
adc
popf
int
xchg
out
icebp
loope
push
cltd
test
fucomip
scas
clc
xlat
xchg
lds
jae
pushf
or
inc
cmpsb
cmp
cltd
dec
hlt
outsb
or
lcall
xlat
xor
lods
cmp
xchg
push
add
add
mov
subl
mov
outsb
cmp
cltd
xchg
pop
div
aas
dec
aad
int
xor
test
iret
push
repz
movsl
cmpb
sbb
inc
jae
inc
xchg
sbb
cmpsl
jp
shl
aam
std
adc
ds
gs
mov
iret
pop
jns
in
xor
les
cmp
add
inc
bswap
xor
sbb
std
jnp
xor
xlat
mov
in
shll
xor
xchg
pop
mov
fadds
jg
jae
out
inc
orb
leave
inc
pop
cwtl
xchg
test
jns
push
adc
jnp
into
mov
jp
sub
sbb
inc
cmp
jmp
jge
cwtl
push
ja
cli
add
mov
jle
dec
pop
mov
cmpsl
ja
mov
icebp
adc
push
jle
xor
mov
lods
mov
add
ljmp
mov
or
sbb
jo
push
mov
sahf
xchg
repz
test
xchg
sbb
sub
cmp
push
sahf
cmp
push
jl
and
inc
int3
aam
add
inc
mov
fwait
insb
jae
and
std
jg
aam
push
xchg
push
into
cmp
ds
pop
mov
jno
sub
roll
mov
out
xor
bswap
test
frstor
xor
push
jns
fcomps
pop
out
iret
cmp
pop
sub
subl
out
pop
xor
dec
jle
lcall
push
andb
xchg
xor
xchg
jb
dec
pop
cli
pushf
dec
push
sbb
ljmp
addr16
scas
mov
and
cmc
jmp
repz
pop
mov
hlt
add
pop
loop
and
add
pop
out
and
repz
fsub
dec
es
add
lea
out
repnz
xor
ljmp
adc
ds
jnp
inc
call
leave
xchg
xor
push
cmp
push
dec
scas
add
fs
insl
adc
cmp
mov
xor
int3
stos
lods
jo
mov
popa
outsb
mov
fisttps
or
sbb
lret
add
lahf
xchg
lret
popf
mov
outsb
stc
les
or
outsb
int
xor
push
cli
jnp
lret
push
cwtl
and
adc
mov
popf
icebp
aaa
mov
popf
push
test
mov
add
mov
dec
xchg
push
sub
hlt
pop
mov
mov
imul
or
pop
mov
inc
jb
adc
arpl
sar
aam
sub
sahf
and
xchg
mov
adc
xchg
inc
mov
std
adc
or
push
vmovaps
cltd
test
xlat
push
out
dec
fists
xlat
pop
xchg
push
inc
fdivl
xchg
pushf
xor
sbb
int3
imul
cs
mov
jne
test
push
xor
push
mov
loope
rcr
fstpl
or
aaa
lock
push
sbb
test
mov
add
xchg
jno
mov
mov
loope
fwait
imul
jnp
mov
jne
sti
fildl
fdiv
push
xchg
popf
mov
jno
pop
sub
xchg
mov
sbb
aas
fwait
mov
mov
std
pusha
out
jecxz
mov
scas
mov
mov
jmp
jecxz
adc
pusha
pop
insb
ret
adc
subl
stos
jae
in
test
je
popa
dec
sahf
mov
pop
mov
cmpsl
scas
ret
xchg
cmp
or
test
pop
pop
or
or
mov
scas
or
jne
inc
lcall
in
add
dec
jg
mov
dec
jbe
aad
les
or
pop
sub
cli
iret
sub
cmp
lcall
mov
pop
adc
sbb
movsl
pop
nop
mov
rcrl
imul
push
stc
mov
mov
mov
mov
jg
push
sbb
xchg
lret
loope
mov
dec
add
and
add
mov
push
aad
aaa
cmovge
in
add
popf
cmp
push
js
imul
loope
mov
cmp
popa
jl
ret
push
pop
inc
out
mov
lcall
xor
push
and
mov
orl
and
addb
or
jno
pop
adc
dec
fidivs
lahf
or
aad
xor
mov
inc
sub
aam
loop
dec
std
orl
mov
sti
int
dec
push
repz
aaa
jge
mov
fs
fisubrl
or
pavgb
mov
inc
pop
icebp
jecxz
out
outsb
jae,pt
jg
pop
or
xchg
insb
jo
and
jnp
or
iret
or
cltd
mov
ss
sbb
sarb
and
cwtl
pop
into
jo
cmp
stc
sti
popa
mov
mov
xor
push
or
aas
in
aad
call
push
cwtl
mov
mov
cmpsb
inc
insl
lods
jne
xchg
xor
xor
notb
push
movsl
jecxz
or
in
dec
mov
inc
adc
inc
leave
mov
icebp
pop
popa
je
jae
and
jg
dec
jmp
sbb
cmpsl
sbb
xchg
shl
cmp
pop
in
lods
or
jo
jecxz
int3
fcompl
pop
sbb
sub
mov
pop
mov
repnz
test
popf
mov
ljmp
push
push
jge
add
jmp
xor
add
jmp
iret
test
outsb
jb
ljmp
push
or
inc
iret
pop
js
test
jne
jno
or
adc
xlat
inc
push
mov
outsl
dec
mov
pop
movsl
jne
mov
divl
xchg
stc
lahf
push
movsl
cld
push
stc
inc
testb
out
mov
mov
sub
cmpb
and
js
or
pusha
loope
push
lods
test
ret
push
arpl
stos
xor
arpl
in
cmc
add
and
les
iret
ret
mov
inc
mov
sub
inc
movzwl
dec
dec
divl
xlat
push
insb
lods
sbbl
xchg
fs
mov
or
inc
mov
imul
inc
cwtl
jo
dec
mov
les
ja
jbe
push
dec
or
dec
pop
cmp
sub
cmp
push
xor
arpl
or
push
cs
adc
and
xchg
inc
lock
xchg
sub
sub
cwtl
testl
lea
push
loope
mov
stc
xchg
addr16
pop
jb
loop
dec
add
popf
cmc
sub
lock
pop
loopne
cld
cltd
imul
aad
aas
cmp
sbb
stos
sbb
out
aad
dec
inc
sbb
lods
cmp
sub
xchg
cltd
or
xchg
xchg
mov
scas
int
mov
scas
add
pop
push
pop
repz
pop
pushf
adc
testl
addb
pushf
cmpsl
sub
repz
sbb
outsb
scas
int
adc
out
out
lods
or
pop
negb
mov
test
shr
js
insb
insl
popa
hlt
cltd
out
shll
stos
int3
shlb
test
add
mov
xchg
in
cltd
es
and
ficoms
iret
pop
inc
gs
jno
test
pop
jle
push
lret
or
mov
shll
push
cmpsb
scas
lcall
jmp
stc
xchg
and
addb
das
push
xchg
popf
addl
and
not
cmpsl
xchg
iret
sbb
jg
iret
inc
mov
or
cmp
pop
test
and
push
xchg
in
outsb
cmp
insl
and
cli
dec
ljmp
push
sbb
inc
gs
mov
fmuls
rclb
lahf
loopne
sub
xlat
inc
xor
inc
sbb
mov
xchg
movsl
mov
ret
xchg
inc
lods
int3
addr16
sub
xchg
pusha
pop
push
xorb
sbb
les
arpl
push
pusha
cld
mov
adc
xchg
roll
repnz
sub
cmpsb
xchg
fistl
repz
mov
xlat
std
mov
jecxz
jbe
mov
adc
jae
mov
xor
gs
mov
xchg
mulb
test
sbb
comiss
inc
pop
cmp
out
stc
push
fsubs
sub
lods
push
fwait
shlb
sub
add
pop
and
mov
add
lea
jmp
mov
or
bound
cli
mov
aaa
sub
xchg
xchg
and
iret
stos
fwait
sti
ds
pop
popa
es
imul
add
dec
fstpt
mov
mov
out
fwait
daa
fcmovnbe
cld
mov
imul
pop
sbb
repz
fwait
in
rcll
pop
imul
iret
ds
rcrl
adcb
xchg
repz
call
and
or
ret
sbb
movsl
inc
addr16
out
pop
push
push
sub
stos
in
mov
les
mov
xor
shlb
fldenv
pop
sub
push
dec
insb
rcrb
iret
sahf
and
lcall
sub
lods
clc
jg
adc
cli
adc
mov
daa
pushf
mov
fcmovbe
jno
mov
adc
adc
clc
dec
mov
pop
push
mov
and
push
dec
mov
xor
cmp
inc
cmp
scas
sbb
lock
loopne
mov
mov
mov
movb
imul
mov
push
add
push
rcrl
rolb
adc
rcrb
jecxz
movsl
sbb
pushf
jl
lock
popf
add
xchg
dec
sub
stos
jle
sbb
adc
pop
add
xchg
jb
xor
leave
push
pushf
aas
mov
push
adc
mov
outsb
stc
aam
enter
pop
mov
shll
testl
xchg
mov
sub
inc
mov
adc
adc
fcos
xchg
cmpsl
les
add
jmp
cmpb
aas
stc
cld
pop
rorl
les
sahf
and
in
sbb
ds
jbe
adc
jmp
adc
lods
shl
mov
xchg
or
fmul
iret
push
cmpsl
xlat
roll
mov
pop
icebp
mov
xchg
lahf
cltd
pop
shlb
in
cmp
mov
cltd
xchg
sub
loopne
pop
mov
mov
adc
mov
sbb
push
dec
mov
mov
adc
lret
aad
mov
std
fdivr
cs
nop
push
adc
sub
repz
push
bound
sahf
push
pop
push
movsl
lahf
cld
inc
ja
pop
cmp
and
push
lds
cld
and
inc
xor
lods
nop
add
jns
dec
inc
arpl
imull
dec
fiaddl
testb
test
rorl
jae
ja
cmpsl
push
sbb
rclb
pop
cwtl
jnp
pop
jge
sub
aaa
sub
pop
lret
pop
lds
ljmp
repz
xlat
push
jns
lods
rolb
or
sub
mov
xchg
inc
adc
bound
jge
inc
js
push
lea
jbe
xor
fdivrl
clc
addr16
mov
lahf
push
mov
mov
inc
into
je
test
insb
adc
xor
daa
sbb
cmpsb
dec
sbb
in
adcb
fmuls
popa
mov
dec
jne
clc
pop
adc
fadds
mov
scas
jge
fcoml
loop
inc
scas
mov
cmp
dec
out
xor
or
inc
mulb
nop
cli
imul
pusha
aad
or
sahf
mov
outsl
pop
fucomip
dec
into
nop
enter
sub
outsl
add
sub
add
shlb
pop
cmpsw
inc
pushf
aam
push
xor
popa
sti
aas
sub
jae
je
or
sahf
bound
or
lahf
dec
pop
adc
xor
inc
and
test
xchg
mov
icebp
movsl
pop
cs
mov
outsb
adc
xor
xchg
add
mov
mov
mov
sub
jns
idivl
pop
fisttpll
pop
in
outsl
outsb
and
out
pop
ret
push
pop
lret
jge
cmpl
pop
popa
push
jge
rcrb
pop
cmp
xlat
or
les
sbb
mov
jne
out
cs
negb
mov
shll
xchg
loop
pop
mov
mov
dec
loope
cltd
stos
testb
dec
mov
push
pop
ja
stos
push
mov
xchg
outsb
and
xor
jno
pop
sbb
adc
pop
xchg
js
push
push
and
or
faddl
adc
out
mov
inc
inc
jns
in
xchg
xchg
cmp
pop
jmp
orb
ret
sub
and
dec
inc
loope
rcrb
jmp
jbe
mov
fdivrp
jno
push
shrb
popa
cmp
or
mov
jae
out
or
and
adc
cs
mov
dec
popa
lock
shrb
pop
fisubs
out
adc
mov
stos
inc
lea
mov
loope
into
shll
repnz
outsb
pop
add
xchg
cltd
iret
or
xor
pusha
aas
inc
orb
lea
jo
daa
fdivp
mov
mov
and
mov
fs
mov
int3
andl
inc
xor
ljmp
jb
ja
addl
addb
es
mov
in
xchg
andl
sbb
fmuls
adc
inc
stos
pop
sbb
fnstsw
push
jp
sub
pop
fisubrs
mov
mov
aam
sbb
in
stc
mov
jmp
mov
inc
xchg
rcll
rcr
pusha
gs
cmp
int
mov
sub
and
mov
push
nop
push
dec
push
lock
dec
pop
mov
jbe
aas
inc
aas
dec
jg
nop
push
fs
sub
dec
repz
xchg
js
add
mov
popa
movsl
cmp
pop
fildl
mov
cld
sbb
cmp
mulb
adc
xchg
or
jae
mov
fidivrs
cli
push
lcall
ret
sti
dec
loope
push
jg
pop
sbb
stc
xlat
packuswb
leave
xchg
jle
add
ret
push
movsl
sbb
in
pop
cmpsb
mov
std
outsb
popa
in
dec
test
adc
shlb
lods
icebp
cwtl
das
lret
test
sbb
push
insl
jl
bound
fiaddl
or
adc
sub
dec
cmp
jnp
fldcw
into
xchg
push
sbb
inc
jns
inc
loopne
lcall
cwtl
les
push
xchg
sbb
fmuls
jp
les
sub
cs
push
mov
aas
clc
inc
pop
ficoml
mov
fiadds
in
shl
or
ret
lods
mov
addl
xlat
out
jno
aam
rcl
movsb
push
int3
sub
imul
xor
mov
or
dec
mov
jl
enter
jnp
push
fcomp
add
inc
outsl
stos
lods
xchg
sub
rcll
in
add
test
jle
mov
and
jne
gs
cmp
or
ret
scas
test
jbe
movsl
mov
mov
es
inc
xor
cmpsl
addl
mov
loope
adc
xchg
xchg
jp
push
je
int
xchg
jb
inc
dec
jbe
jle
into
lret
enter
lret
gs
ja
adc
rcrl
dec
mov
test
pop
and
stc
in
dec
test
pushf
insl
insl
aam
and
adc
cmp
add
std
mov
popf
inc
repnz
pop
int3
in
rol
mov
xchg
jle
cs
std
inc
in
or
adc
divl
stc
sub
into
jae
push
pop
pop
lods
les
mov
aaa
in
pop
fsts
inc
dec
adc
and
ds
cmp
push
out
add
nop
or
in
jmp
inc
shlb
mov
cmpsb
stc
mov
pop
mov
dec
cmpsb
leave
push
mov
inc
incl
aam
rclb
aas
in
push
adc
nop
push
imul
xchg
notb
pop
negb
mov
fistps
in
xor
in
xor
ret
pop
sub
adc
xchg
xor
dec
add
sub
push
stos
sub
or
dec
sahf
arpl
fildll
outsl
mov
sbb
xchg
jl
push
inc
mov
mov
call
rcr
int
mov
aaa
cmpsb
dec
mov
ss
jp
sub
fdivrl
out
pushf
jmp
or
je
inc
out
insb
repz
in
cmp
lret
lahf
cmpsl
sbb
adc
cmp
jb
jle
loopne
add
mov
sti
rep
mov
adc
dec
dec
or
mov
dec
cmp
pushf
inc
cmpsb
cmpsb
shll
data16
mov
es
mov
rorl
inc
xchg
shlb
cmp
loope
arpl
je
cmp
outsl
adc
sbb
fcmove
inc
or
add
nop
negl
mov
pop
daa
clc
nop
push
lods
or
add
loop
and
push
dec
xor
pop
pop
mov
xchg
cmp
push
lret
cmc
test
jbe
inc
scas
cmpsb
lods
jne
lret
call
or
jne
clc
aam
rolb
sbb
lret
xchg
mov
shll
or
stos
test
call
ljmp
repnz
xor
leave
jge
jg
and
pop
adc
and
push
mov
test
popf
lcall
loope
mov
pusha
pop
mov
mov
out
jecxz
and
mov
push
outsl
inc
cli
pop
push
js
loop
mov
add
in
cmp
xor
mov
push
mov
xlat
cmpsl
fstpt
ret
insl
push
xchg
sbb
mov
mov
mov
popl
pop
inc
nop
lahf
dec
imul
fisttps
cwtl
fists
dec
pop
aam
shl
mov
xchg
nop
in
mov
push
outsl
jo
imul
inc
xlat
mov
stos
sub
jp
scas
pop
test
stc
lahf
add
jmp
dec
stos
jns,pn
xchg
pop
movsb
add
inc
and
enter
mov
ficompl
mov
mov
stos
shlb
aam
adc
inc
cmpsb
test
orb
jns
jecxz
sbb
je
or
mov
ja
mov
pop
sarb
adc
andl
enter
dec
jae
xchg
dec
push
outsb
sub
jle
add
dec
ss
jae
rolb
lret
push
jns
loope
xchg
push
add
xchg
je
les
mov
cmpsl
and
movsl
push
fcmovnbe
lret
jle
xchg
jecxz
ds
shl
mov
test
fdivr
cmp
mov
pop
mov
or
out
popa
ds
lea
mov
sbb
mov
int3
rolb
repz
scas
fidivrl
stos
sbb
bound
xchg
adc
sbb
imul
cmp
inc
ret
xor
pushf
and
lods
xchg
adc
je
mov
jne
rorl
push
aam
push
sub
sbb
gs
pop
jmp
fmulp
and
loop
jl
push
dec
pop
xor
mov
inc
outsl
jp
dec
mov
shll
cmp
clc
lcall
mov
repz
aas
cltd
fisttpl
mov
cmp
and
xchg
into
stos
jle
pop
testl
jle
xor
scas
push
push
or
sub
in
shr
divb
or
fcoms
pop
in
lcall
imul
cbtw
testb
mov
stos
inc
enter
and
fdiv
cltd
mov
add
pop
push
xchg
add
lahf
xor
fisubrl
mov
mov
adc
adc
fwait
mov
lods
inc
std
push
fadds
jp
inc
je
cli
and
popf
aas
jle
mov
js
jo
inc
roll
clc
ja
push
scas
fidivrs
inc
mov
in
cmp
xchg
das
mov
mov
push
jae
ja
gs
ficomps
push
jns
dec
and
push
xor
mov
std
cltd
mov
pop
jo
call
lret
sbb
push
xchg
ja
or
adc
cwtl
xlat
push
out
add
dec
mov
mov
pop
int3
inc
out
jno
pop
stos
pop
mov
sbb
add
pop
cli
or
ffreep
xchg
bound
fwait
lret
les
fsubrl
sbb
cltd
sti
out
dec
sub
bound
shlb
mov
mulb
push
sub
outsb
lret
orb
and
mov
add
inc
pusha
sub
je
adc
or
jb
out
cmp
outsl
mov
dec
fcmovu
pop
shll
or
jl
adc
shll
outsl
cmpsb
add
rolb
sub
in
push
cli
add
jno
or
jne
jb
std
movsb
pop
lock
dec
cli
cwtl
push
xchg
stos
push
aad
jmp
insb
cltd
cld
adc
data16
or
push
cld
dec
cli
fimull
xchg
enter
cmp
fldt
dec
gs
xor
into
adc
mov
cmp
adc
sar
xchg
test
movsl
pop
cmp
sub
imul
mov
insl
jo
outsl
aad
jge
push
jae
sub
jl
hlt
movsb
xlat
cmp
mov
ret
mov
dec
sub
adc
mov
push
and
pop
jge
sub
mov
daa
movsl
shl
mov
adc
mov
xor
lods
jo
push
outsl
loopne
cmp
loop
xor
cmc
mov
dec
out
cmpsl
push
fmuls
add
cmp
and
push
inc
mov
inc
gs
sbb
mov
jns
or
mov
xor
in
mov
adc
test
out
gs
xchg
or
ljmp
jbe
sub
jnp
xchg
pop
fwait
xor
jmp
dec
stos
aam
inc
jl
test
or
int
mov
mov
fdiv
push
cmpsl
fldenv
push
nop
jo
xchg
mov
lods
xor
adc
sub
inc
notl
xchg
mov
xor
cli
daa
adc
pop
mov
fisubl
es
in
push
mov
push
outsb
mov
fxch
mov
fsubrs
dec
push
cmp
popa
lret
dec
int3
dec
call
xor
lret
roll
or
mov
int
add
push
and
sbb
mov
fimull
dec
lock
movsb
mov
loopne
sbbb
push
sbb
imul
sub
cmpb
mov
mov
es
enter
inc
sbb
mov
push
out
dec
ds
add
sub
jae
push
push
mov
cltd
push
mov
popa
dec
mulb
or
cmp
ljmp
mov
mov
test
sub
pop
ret
dec
bound
mov
loope
rclb
ljmp
lock
xor
sub
mov
mov
push
xchg
rol
push
inc
movsl
push
sbb
fsubs
mov
fdiv
push
or
cmp
xchg
add
mov
ljmp
in
cs
mov
gs
mov
icebp
out
mov
cmpsl
lods
mov
fs
sahf
aad
push
pushf
xor
pushf
xchg
fisttps
cmpsl
je
ss
into
mov
mov
mov
fucomp
adc
push
andb
ds
jl
dec
sbb
and
dec
mov
add
and
xchg
sbb
enter
imul
cwtl
pusha
movsl
daa
pop
fwait
mov
fdivrl
jmp
in
mov
adc
push
mov
and
push
sbb
repz
stos
and
ss
out
ficompl
jge
sub
cmpsb
pop
incb
nop
jnp,pn
dec
jne
add
lea
fildl
ja
jl
test
aam
lea
sbb
xchg
testl
mov
jmp
fdivrp
cmpsb
imul
sub
jo
xchg
lret
xor
or
push
push
add
in
push
loope
clc
int3
mov
inc
adc
dec
and
testb
ds
add
fwait
cmp
mov
lea
mov
insb
or
aas
mov
xor
xorl
cwtl
mov
adc
insb
sbb
sub
clc
cmpsb
stc
mov
add
mov
aas
pushf
push
jp
test
mov
scas
sub
call
sub
arpl
es
add
add
loope
lcall
ljmp
add
xchg
xchg
popf
inc
add
mov
add
jno
jne
scas
inc
mov
dec
inc
stc
adc
push
clc
inc
rcr
fcompl
jmp
in
pop
xor
mov
mov
adc
mov
jmp
jbe
pushw
adc
jne
adc
in
inc
jns
or
jne
in
test
adc
lods
lret
push
mov
fsts
push
cmp
add
gs
mov
jno
lcall
mov
cmp
xor
loope
mov
pop
xchg
xchg
pop
mov
jge
test
cld
cli
bound
insl
mov
test
jae
fs
jo
cmc
push
inc
jbe
aas
mov
je
stos
mov
jp
ds
sbb
mov
and
cmp
icebp
loopne
adcl
pushf
lods
mov
mov
push
loope
jecxz
fwait
sarl
jecxz
iret
mov
scas
mov
and
jno
pop
add
jmp
test
arpl
sbb
xor
fbld
adc
mov
out
mov
sub
mov
sub
mov
sti
in
mov
ss
mov
scas
push
mov
fidivs
pextrw
dec
rolb
fisubrl
and
adc
push
push
add
xchg
add
add
xchg
jmp
push
mov
lahf
bound
pop
sub
test
in
inc
cmpb
outsl
and
inc
rcrb
mov
stc
fdivrl
bound
fnsave
lock
imul
dec
mov
sbb
inc
fisubl
nop
mov
sbb
aaa
inc
jne
dec
shrl
arpl
and
mov
iret
and
lcall
dec
mov
adc
dec
fldcw
pop
ss
xchg
lret
jmp
repnz
jb
rcll
cmp
pop
push
es
les
push
jmp
xor
jg
inc
fucom
dec
mov
push
add
mov
sbb
jne
hlt
lds
ret
stos
sub
jmp
fidivs
push
dec
inc
fnstcw
xchg
adc
lahf
xor
pop
push
cmp
fsubs
jnp
fldcw
daa
cmp
mov
popf
dec
fistl
pop
fdivs
dec
and
mov
or
jmp
add
fistps
aad
ljmp
sub
adc
xchg
mov
xor
push
lods
xor
dec
cmpsb
cli
mov
aas
out
movsl
fwait
xor
sahf
scas
cwtl
stos
sbb
push
inc
sbb
outsb
mov
sbb
push
cmp
std
arpl
pop
sar
jb
mov
adc
and
adc
ficoml
inc
cs
fcmovu
into
int3
jno
mov
sbb
push
xor
jno
loopne
dec
repnz
mov
lahf
outsl
xchg
dec
jae
xchg
dec
ret
xchg
push
sarb
movsl
cmp
icebp
sbb
ja
mov
mov
cmc
xchg
adc
and
fcoms
ljmp
add
mov
jecxz
in
divl
sub
addr16
insl
jge
xchg
loope
rcrl
loopne
pop
insb
and
jge
push
push
popa
jl
xchg
dec
inc
push
rcrl
test
frstor
sbb
stos
mov
xor
cld
ja
hlt
cltd
inc
pop
or
daa
cmpsb
into
jns
jb
repz
jmp
bound
les
lds
addr16
mov
xor
ja
sub
jnp
aaa
dec
dec
test
mov
mov
xchg
jmp
mov
sub
movsl
jae
fstl
insb
loope
xchg
and
adc
test
dec
push
xchg
mov
cmp
or
cmp
pop
dec
push
arpl
or
stos
inc
jmp
cmp
sahf
or
sub
fwait
adc
cld
push
mov
inc
rolb
and
hlt
cli
or
or
pop
movsb
stos
hlt
stos
insl
push
sbb
rcl
enter
sbbb
mov
dec
xor
pop
xchg
xor
rcrl
aaa
pop
push
add
jg
cmp
jne
test
xchg
shrb
inc
ja
add
or
inc
and
lret
outsl
xor
and
sbb
mov
ljmp
sahf
fcmovb
aas
fnstenv
push
loopne
mov
call
fdivrl
mov
das
nop
jae
sub
sub
filds
popa
dec
icebp
aaa
sahf
jo
jns
adc
sahf
inc
test
ret
lahf
int
or
jb
clc
lret
xlat
jge
xchg
adc
ds
pop
outsl
cmp
add
sub
jmp
daa
ficoms
stos
divl
movsl
mov
scas
mov
test
push
loope
dec
cmp
ret
inc
mov
and
call
outsb
mov
adc
cmc
ret
mov
ljmp
leave
or
int
or
xchg
mov
sub
pop
sbb
pop
push
and
imul
mov
scas
pop
dec
loope
push
in
fcomps
jne
js
mov
into
mov
pop
sub
sbb
lcall
in
adc
mov
pop
mov
insb
xor
paddb
sub
jnp
sbb
jbe
js
cmpsl
jmp
ljmp
mov
dec
mov
in
inc
or
fmull
bound
push
fstpt
mov
data16
mov
hlt
addr16
cld
cmpsl
or
in
xchg
fmull
subb
mov
mov
dec
xchg
xchg
mov
fnstsw
leave
push
mov
ljmp
mov
stos
inc
sbb
stc
xorl
outsb
jge
ja
inc
xor
and
cmp
sub
jl
jb
mov
jns
mov
push
mov
cltd
repz
es
and
lods
mov
test
dec
add
cmp
loopne
mov
xchg
adcb
ss
push
andl
cli
jecxz
fwait
xor
mov
test
enter
inc
rcl
mov
mov
jg
pop
popf
fbld
mov
lods
fwait
add
inc
ret
add
cmc
lcall
xchg
xchg
jne
mov
fucomp
inc
lock
into
mov
in
sub
jnp
mov
sub
sub
inc
push
fistpl
shrl
pop
inc
mov
or
xchg
mov
fistpl
jp
jl
cli
fldenv
mov
cmc
repnz
fs
dec
cmp
lahf
imul
push
movsb
pop
jno
das
jle
pop
cmp
xor
mov
add
inc
jge
inc
or
push
dec
jbe
pop
jo
repz
xor
ret
jecxz
mov
nop
jp
jg
push
add
ja
subb
rcr
add
jns
popa
aaa
xor
adc
jecxz
out
push
mov
xchg
mov
les
ljmp
inc
lret
lahf
out
add
or
fnstenv
mov
push
hlt
outsb
xor
sub
mov
adc
add
rcll
sbb
ret
test
sub
movsb
mov
loopne
fcompl
pop
xor
cwtl
mov
scas
mov
push
insl
pop
push
lods
sti
inc
pop
lods
dec
hlt
sbb
addr16
fimull
int3
sbb
pop
mov
or
enter
jnp
xor
idiv
mov
xor
xchg
pop
mov
adc
xor
sub
pop
iret
cmpsb
call
cmc
sub
mov
test
cmp
pop
and
imulb
sub
nop
outsb
cld
jne
pop
sub
mov
mov
fstpt
out
push
dec
cmp
inc
mov
bound
jo
ja
adc
push
scas
hlt
xchg
sbb
and
imul
hlt
movsl
mov
or
dec
add
jp
aaa
or
xchg
mov
sbbb
and
cmp
addl
sub
movsb
push
enter
adc
sbb
aad
pushf
push
push
addr16
mov
loopne
push
dec
jne
cld
mov
sti
fisubl
jae
cmp
mov
inc
mov
sbb
aam
mov
mov
sub
mov
and
sti
mov
jno
mov
popf
cmpl
add
or
mov
add
fnsave
pop
and
pop
pop
in
xor
shll
stc
repz
push
fstpt
mov
xchg
popa
mov
mov
fsubrl
add
jecxz
ss
ja
adc
std
mov
mov
fs
insb
imul
outsb
das
cli
mov
clc
loopne
jmp
cmp
addr16
loope
movsl
ret
je
mov
jno
stos
dec
pop
stos
outsl
mov
fldcw
loopne
inc
fucom
sbbb
push
jns
stos
mov
test
incb
add
int3
gs
adc
scas
es
aas
loopne
rcrl
addb
out
pop
inc
mov
dec
mov
sub
imul
fisubrl
xchg
ds
push
rorb
and
icebp
pop
das
imul
pop
mov
dec
negl
imul
xor
and
dec
mov
or
push
mov
sbb
pop
test
test
jns
popa
mov
pushf
lret
shll
xchg
sbb
enter
outsl
pusha
imul
cmc
cmp
inc
cmp
sbbl
nop
clc
inc
ljmp
inc
das
rcrb
cmpsb
repnz
and
inc
jb
out
lods
push
cmp
mov
or
dec
loopne
jl
push
adc
out
pop
pop
push
sbbl
int
xlat
popa
pop
mov
pusha
mov
inc
xor
into
mov
xor
sbb
call
mov
inc
notb
mov
bound
jecxz
and
push
iret
and
scas
shll
pop
push
inc
iret
xchg
testl
sahf
and
into
adc
lds
scas
daa
cmpsl
xchg
das
mov
adc
mov
push
sub
out
jge
ja
mov
sub
leave
inc
imul
xor
test
xor
sbb
xchg
repz
pop
sahf
shl
popf
push
push
test
xlat
or
sti
test
mov
cltd
gs
sahf
or
xchg
sbb
cmpsb
insb
pop
sub
xlat
adc
cltd
cmp
mov
stc
dec
sbb
in
aam
jle
fucompp
xor
lahf
sub
lret
imul
mov
imul
cmpsb
sbbl
leave
xchg
dec
inc
mov
outsb
mov
shrb
in
dec
push
or
ss
cli
cmp
dec
mov
pop
push
xchg
mov
and
iret
fcmovnb
iret
adc
es
es
dec
cwtl
sbb
mov
lcall
push
add
push
mov
cs
mov
cmp
ja
mov
loope
cmp
mov
pop
test
push
push
rolb
or
fdivr
push
aas
push
xchg
frstor
ljmp
add
xchg
fst
xor
lds
sub
rcpps
in
test
push
les
shr
sub
sbb
jo
loopne
aad
sti
xlat
cmp
arpl
loopne
ja
mov
pushf
leave
addr16
pop
stos
pop
mov
mov
out
stc
int
sahf
mov
addb
and
je
jecxz
jg
push
sbbb
adc
jno
insb
sti
leave
mov
dec
ds
pop
inc
sub
dec
push
jge
cmp
sbb
mov
dec
push
lret
or
in
sub
adc
aaa
dec
out
dec
lea
scas
or
rcll
cld
pop
push
outsl
xchg
sub
xchg
add
push
movsl
pop
ret
pop
fistps
int3
push
cmp
adc
mov
and
xor
pop
mov
mov
hlt
in
mov
xor
cmpsb
fs
xchg
andl
push
fcom
int3
imul
neg
hlt
mov
sbb
push
mov
mov
repz
scas
sub
jecxz
adc
shlb
pop
or
and
jbe
pop
insl
mov
aam
andb
fcomi
roll
mov
xor
adc
xorl
rcl
dec
jmp
lds
cltd
sub
pop
and
and
or
mov
sahf
mov
mov
outsl
add
add
inc
add
xor
repnz
pop
xchg
addr16
int3
jo
pop
mov
cmp
cmpsl
test
add
cmpsl
or
xchg
lods
push
test
jle
jbe
adc
or
xchg
es
push
out
out
mov
jmp
pop
popa
les
and
cmpsb
mov
test
sub
jge
mov
scas
adc
jmp
popa
and
pop
mov
mov
mov
jecxz
out
mov
lea
mov
sub
mov
shrb
icebp
cli
arpl
popf
mov
insb
into
push
fisttpl
mov
push
aas
push
out
cmp
lods
loope
push
jg
sbbl
movsl
popf
jns
mov
mov
icebp
repz
repz
push
sbb
push
adc
daa
jne
lcall
aam
lods
add
jge
fwait
or
pop
pop
out
daa
enter
add
inc
lahf
xchg
lahf
xchg
dec
push
ds
mov
pop
test
xchg
ficomps
inc
add
adc
pop
xor
cmp
push
jmp
cmpsb
js
mov
jnp
and
out
adc
inc
movb
leave
pop
scas
jmp
mov
cmp
in
add
stc
daa
mov
jne
dec
cs
xchg
pop
mov
add
and
xchg
orb
jnp
push
xchg
jnp
pop
loope
mov
outsl
cli
xor
inc
test
bound
into
sub
jnp
out
aad
push
mov
insb
xor
push
imul
jl
push
and
push
xchg
pop
movsb
jns
jae
mov
hlt
popf
mov
push
push
rolb
leave
pusha
jno
or
testl
aas
sbb
inc
inc
and
and
jbe
in
out
mov
shr
fadds
mov
jo
pop
cmp
lods
movsb
ljmp
or
mov
faddl
flds
inc
push
jg
jne
pop
xchg
mov
les
testb
cmpsb
push
pop
add
pop
dec
fs
dec
cmp
out
adc
fists
out
dec
adc
outsl
xchg
fstpl
cld
jb
ja
scas
xor
xchg
push
outsb
sbb
push
and
cmpsl
aaa
fistl
adc
cmp
shlb
popf
sub
nop
in
aad
xchg
fstps
xchg
rcl
aas
inc
mov
sub
test
sbb
nop
xor
shlb
pop
ret
in
stos
cmp
popa
jmp
adc
pop
sti
mov
push
stc
mov
push
pushf
das
sarl
lock
cmpsb
inc
mov
lcall
jge
repz
sub
and
inc
inc
sub
add
mov
dec
out
push
inc
iret
movsl
in
cmpb
pop
xchg
push
cmp
in
movb
cli
dec
fstpt
mov
push
aad
sub
popf
decl
push
ljmp
mov
mov
mov
mov
int
ret
or
jl
dec
dec
xchg
push
pop
imull
add
jg
mov
loop
scas
push
cltd
dec
and
inc
ds
mov
jecxz
cld
mov
mov
fcomi
dec
cmpsb
sahf
inc
cmpsl
movsb
or
and
sub
ljmp
or
add
xchg
push
jo
cld
dec
inc
outsl
mov
dec
inc
pusha
dec
call
stos
mov
scas
mov
incb
cmp
cli
jns
loop
pop
cmp
neg
aas
add
call
in
sub
lods
in
dec
mov
lahf
sbb
ds
es
adc
xchg
insl
ds
clc
add
ja
dec
cli
push
lock
xchg
out
xchg
rolb
enter
out
scas
popf
mov
pop
shl
mov
mov
leave
push
lods
cmp
imul
stos
hlt
pop
int3
js
fwait
mov
icebp
dec
add
in
or
jnp
dec
repz
lock
nop
xchg
mov
cmp
xor
scas
test
mov
or
mov
jle
popa
jl
pushf
sahf
or
push
mov
cwtl
jmp
lret
or
and
jne
test
popa
ret
jnp
in
mov
je
insb
adc
repz
lahf
icebp
adc
repz
mov
xlat
insb
mov
xchg
addr16
lret
addb
stc
push
sahf
sub
fisttpl
inc
inc
xchg
imul
push
jnp
inc
div
dec
inc
mov
push
insb
add
and
dec
xor
lcall
ret
mov
int
sub
xlat
sub
add
test
out
lret
xchg
jne
pop
rcrl
xchg
dec
out
mov
mov
adc
addb
or
bound
mov
pop
in
cmp
add
inc
sbbb
push
call
sub
out
pusha
xchg
and
orb
push
add
sub
das
pop
and
inc
mov
mov
rclb
push
pop
sub
xor
dec
test
in
fwait
pop
push
clc
cmp
daa
jl
sti
adc
xchg
pop
in
scas
push
negb
push
jb
xor
mov
rolb
lods
les
out
jo
incl
cli
std
jnp
stos
fcmovu
and
cmc
in
std
jnp
jg
or
icebp
sbb
jb
out
js
mov
imul
loop
loop
cmp
add
add
rorb
xchg
sbb
mov
push
sbb
shr
lcall
fldcw
dec
xchg
sbb
in
out
out
addb
jecxz
adc
pop
cwtl
lods
shr
movsb
ret
iret
cmpsb
loop
arpl
xchg
pop
mov
and
jae
dec
repnz
insl
js
rorl
adc
outsl
add
enter
or
loope
jg
arpl
out
mov
movsb
fcmovbe
mov
lock
scas
int
cwtl
mov
in
or
push
add
movsl
inc
les
int
jecxz
xlat
hlt
mov
mov
mov
and
call
jp
pop
xor
outsl
loopne
fwait
add
fnsave
mov
jecxz
mov
jecxz
cmp
popa
mov
sub
lds
call
ds
test
es
pop
int
cmc
push
in
jbe
out
inc
imul
xlat
add
js
jbe
lcall
sub
mov
es
iret
push
daa
cmp
or
adc
xor
daa
cmp
test
mov
mov
lods
mov
mov
push
xor
test
or
fadd
lahf
in
xchg
aaa
inc
xchg
jns
js
and
imul
testb
cmp
xchg
outsb
mov
xor
push
inc
je
sub
testb
adc
rcrl
push
cmc
test
movsb
or
jae
ret
xchg
rcrb
scas
pushl
add
xchg
out
jns
inc
cmp
jl
mov
ret
dec
adc
ror
lret
loop
adcb
sbb
cmp
arpl
adc
jo
push
ret
aam
lret
repz
stos
imul
repz
pop
lds
enter
sbb
mov
pop
lods
adc
mov
out
cmp
scas
cmpsl
mov
sti
out
hlt
jmp
out
pop
leave
imul
or
jne
sub
or
or
je
pop
or
cmp
fstpt
or
idivl
adc
pop
ret
push
add
sub
mov
jb
ret
sub
in
repz
enter
jbe
adc
mov
and
xor
sub
or
outsl
fs
out
xor
pop
clc
leave
nop
xor
cmp
aaa
dec
pushf
inc
lock
lcall
in
mov
cs
icebp
mov
or
mov
mov
xchg
mov
adc
test
xor
mov
out
xor
movsb
lret
pop
je
add
stc
insb
or
clc
iret
test
lods
or
add
aad
adc
cmp
lcall
into
jle
push
cmp
lock
mov
mov
je
imul
mov
lret
inc
sub
shrb
or
sub
and
mov
loopne
mov
and
subb
push
dec
scas
dec
push
add
inc
xchg
lcall
repz
mov
pop
cmp
sarb
and
lret
imul
test
cmpsb
push
in
inc
mov
add
addr16
arpl
hlt
mov
mov
adc
aas
mov
mov
xchg
lcall
cmpl
sub
mov
add
mov
fwait
mov
sbb
fdivl
leave
pop
sbb
inc
jle
stos
jmp
adc
stc
jl
or
inc
add
push
pop
mov
popf
adc
fcomip
pop
sbb
sbb
aad
mov
je
mov
into
sbb
sarb
ret
sbb
push
shlb
sbb
mov
mov
in
imul
pusha
pushf
ja
and
out
int3
xor
add
movsb
sub
inc
int3
jb
add
shll
dec
mov
jnp
sbbb
ljmp
mov
sti
lret
dec
push
push
aam
add
pushf
call
xor
lods
cld
jns
dec
popa
and
mov
sar
arpl
mov
and
mov
js
xchg
mov
or
pusha
into
in
or
inc
and
mov
cmpb
outsl
imul
dec
cmp
adc
std
cli
loope
std
lock
test
inc
inc
int
lret
dec
mov
xlat
js
or
and
movsl
ljmp
ljmp
push
xor
lret
inc
out
pusha
xchg
in
sbb
jmp
adc
nop
ret
jb
fiaddl
push
mov
inc
in
lret
push
xchg
enter
es
lds
leave
enter
xchg
jl
cmpsb
mov
inc
inc
xlat
dec
rorb
sbb
fcmove
sub
xchg
pop
imul
pusha
or
sub
mov
mov
push
add
jo
test
test
and
and
lahf
adc
ljmp
add
fldenv
inc
mov
imul
pop
ds
es
ss
sti
fcoml
xchg
call
scas
or
les
mov
lods
mov
rol
ljmp
es
outsl
fsubs
add
push
push
pop
add
mov
je
inc
fsts
das
test
in
jo
mov
nop
movsb
xchg
test
repz
movsb
insl
mov
push
out
mov
inc
push
sahf
and
lods
pushf
popa
bound
xchg
dec
in
pop
mov
pop
mov
adcb
lret
loope
jp
push
jo
mov
cmp
xorl
pushf
data16
mov
adc
mov
into
repnz
pop
mov
test
mov
jle
fldenv
mov
cld
daa
push
gs
dec
and
jge
adcb
ds
popa
adcl
nop
dec
push
pop
xchg
xchg
sti
in
and
xor
mov
les
es
repnz
pusha
add
rorb
ret
jo
jne
mov
inc
push
icebp
and
cli
push
addr16
mov
sbb
dec
sbbb
mov
sbb
out
mov
mov
cwtl
test
movsl
cwtl
gs
les
lods
mov
cmp
fldenv
push
jbe
sbb
jno
dec
jp
imul
test
add
jnp
mov
mov
icebp
pop
pop
sub
xchg
mov
inc
jl
sti
stos
pop
push
sti
movsb
js
jg
and
jmp
sub
mov
insl
xchg
adc
mov
mov
add
cltd
inc
xor
cmc
movsb
fmull
test
fisubrl
shl
push
lods
lea
sub
scas
sub
adc
and
pop
sub
mov
jnp
and
fistl
out
cli
sub
push
cld
sub
sub
xchg
dec
mov
adc
roll
sbb
loopne
dec
cmp
pop
sbb
jo
cmp
mov
sbb
inc
sub
cmc
fs
cli
dec
xchg
adc
imul
and
aas
xchg
int3
lds
test
mov
sbb
int
hlt
dec
pop
dec
test
cmc
jmp
movb
adc
ret
push
sub
jg
iret
cmp
cmp
nop
xlat
cld
adc
push
adc
scas
jno
mov
mov
aam
mov
xchg
inc
push
xor
cld
ret
mov
mov
stc
dec
mov
popf
and
xor
sub
mov
shll
mov
mov
sub
sub
movsl
mov
cmp
cmp
in
adc
push
jne
ror
cmp
fwait
push
mov
decl
push
data16
dec
fwait
rolb
lcall
loop
mov
rcpps
imul
xor
push
sub
jg
xor
dec
ss
out
call
pop
leave
mov
pop
call
push
mov
aam
repz
and
int
pusha
idivl
int
imul
jb,pt
mov
add
mov
mov
stos
fcmove
fwait
xchg
in
mov
and
scas
jge
pop
cmp
add
sub
mov
pusha
mov
dec
ljmp
sub
fstps
fs
aas
add
pop
push
stos
pop
out
add
cmp
sbb
mov
imul
movsb
loopne
push
movsb
inc
out
mov
mov
push
mov
gs
jge
push
adc
sbb
bnd
data16
fisubrl
lock
mov
jg
jge
adc
push
pop
in
fxam
fcmove
add
push
in
mov
xor
shlb
sub
jo
int3
lea
inc
ret
mov
pop
dec
popf
das
subb
xor
add
sbb
aaa
fs
xchg
cmp
jmp
mov
rcll
sbb
xchg
jecxz
xchg
cld
les
push
pop
aaa
jg
cld
inc
push
push
push
adc
sbb
and
dec
inc
mov
sbb
insb
lock
js
xchg
sbb
mov
dec
ret
mov
ret
mov
iret
push
lret
mov
aam
out
and
rorb
ret
mov
adc
sub
dec
add
or
xor
out
fs
cltd
pop
dec
xor
popf
ja
fcmovu
sbb
jo
test
pop
imul
nop
push
clc
das
adc
outsl
insb
or
jge
xchg
and
dec
in
ret
aas
push
ret
fwait
push
test
lret
add
ljmp
lock
push
popf
out
in
leave
divb
in
movsl
in
pop
push
push
fcompl
pop
pop
and
inc
outsb
clc
xchg
mov
adc
imul
pop
mov
test
mov
xchg
mov
sub
xchg
xor
fidivrs
outsb
movl
sbb
fdiv
mov
gs
outsl
popf
cld
xor
sbb
sahf
bnd
mov
jns
call
mov
andl
inc
mov
stos
inc
xchg
push
pop
cmpxchg
inc
aad
mov
dec
cld
cmpsl
fwait
mov
stos
lods
sbb
mov
fsubs
inc
in
cmp
xorl
sqrtps
std
fimull
inc
and
sub
or
add
ret
xor
push
add
ret
enter
fs
dec
cmp
aaa
xor
and
lcall
xchg
fcomp
sub
sbb
mov
jno
push
aad
hlt
push
mov
pusha
sub
out
ja
aad
inc
mov
cltd
cltd
in
jo
lea
cmp
push
fcoml
mov
mov
loope
imul
iret
test
sbb
sbb
repz
cltd
xchg
mov
nop
outsl
cmc
sub
dec
and
fmull
in
push
pop
shlb
pop
icebp
shll
popa
push
sti
sbb
mov
das
jle
std
sub
ja
xor
dec
dec
and
and
sbb
into
loop
or
hlt
mov
jle
xor
scas
fwait
sbbb
mov
inc
clc
pop
test
adc
addr16
cmp
test
adc
dec
mov
push
mov
fmulp
out
test
pop
mov
pop
inc
xor
or
adc
and
clc
xchg
push
adcb
mov
es
test
cltd
jmp
test
sub
imul
fs
jbe,pt
push
add
fcoml
stos
pop
and
ja
movsl
mov
mov
leave
add
pop
clc
out
sbb
std
pop
add
stc
fcompl
add
xchg
jg
jle
cs
outsl
or
jp
int3
data16
loop
test
mov
sahf
mov
xchg
xchg
and
adc
and
mov
adc
inc
cld
inc
inc
mov
ja
scas
sbb
fnstenv
in
icebp
das
inc
xor
sbb
cwtl
ds
pcmpgtb
xor
icebp
fsubl
push
xlat
gs
mov
inc
jae
iret
sub
pop
or
cltd
add
mov
fistps
in
sub
call
mov
add
push
outsb
mov
jecxz
les
push
shlb
xchg
dec
int
ret
pusha
mov
adc
xor
in
mov
adc
loope
sti
or
ja
lock
fwait
outsb
paddsb
stos
jg
mov
out
adc
push
push
cmpsl
cmpsb
xchg
test
adc
sarb
pop
es
lahf
stos
xchg
jne
fsts
lods
addr16
fs
xchg
cmp
cmp
sub
ja
jne
adc
pop
xchg
push
add
lahf
push
stos
loop
dec
jle
in
cwtl
jmp
fidivl
pop
fistps
out
adc
insb
push
frstor
xor
stos
adc
test
loopne
xchg
cmp
movsl
das
je
pop
pop
adc
and
imul
inc
cs
out
mov
out
rcrl
aas
mov
xor
sbb
cmp
push
jne
mov
inc
int3
incl
lods
or
mov
cmp
add
dec
cmp
add
es
fwait
cmp
sahf
inc
out
in
fsubs
fistps
cmc
sti
xor
fdivl
mov
pop
mov
fstpl
repz
inc
sti
clc
push
shll
xorb
gs
sbb
dec
and
jge
stc
dec
loop
andl
sub
sbb
or
lret
ss
push
sub
dec
in
fs
and
in
xchg
enter
pop
lret
out
adc
lret
jge
fnstenv
ljmp
inc
add
mov
xchg
cmpsl
pop
xchg
xor
mov
fucomip
xchg
inc
sub
sub
loopne
scas
dec
mov
sbb
mov
out
sahf
mov
lret
or
fsubl
fwait
sub
rorb
dec
inc
pminsw
ds
adc
ds
loope
fsubl
jp
cld
ljmp
dec
inc
inc
add
mov
aam
mov
dec
jbe
mov
add
pavgw
push
sbb
pop
xor
push
cmp
mov
jns
adc
jle
shll
ljmp
mov
out
pop
test
and
js
mov
mov
stos
imul
xchg
pop
cwtl
int
das
inc
cmp
jnp
out
mov
adc
pop
fildll
push
xchg
sti
or
lret
dec
jne
clc
in
mov
mov
push
push
stc
mov
cmp
cmp
inc
popa
xchg
imul
mov
nop
cmp
ret
in
js
jle
push
xchg
adc
inc
mov
push
decb
adc
lahf
scas
dec
shl
bound
mov
or
adc
adc
call
cld
and
lds
out
loope
and
loope
or
pop
pop
adc
in
daa
test
sub
insl
clc
cs
cmp
int
jno
icebp
mov
sbb
stos
js
pop
push
insb
adc
in
dec
cmc
sti
lods
ror
xlat
daa
movsb
int3
test
pop
sub
mov
fcomps
jmp
imull
std
sbb
inc
adc
push
out
testl
push
jbe
inc
lcall
sub
stos
mov
and
sbb
out
jge
ss
lock
mov
loopne
sbbl
xchg
popa
mov
xchg
arpl
popf
adc
int3
stos
in
in
and
sub
call
test
fmull
loope
inc
adc
and
and
lock
in
adc
mov
sarb
push
xor
icebp
pop
lahf
mov
jge
stc
repz
push
scas
push
repz
jecxz
jo
fcompl
rorl
push
pushf
int
mov
fstpt
cmp
lock
fwait
int
das
pusha
fsubrp
addr16
push
jp
movsb
mov
testl
pop
and
addl
adc
enter
push
lock
mov
ds
int3
xchg
add
sub
xchg
in
xchg
ret
xchg
cmp
sbb
mov
lret
ja
lods
ja
lock
int
pop
test
jg
mov
imul
fistl
xchg
push
xchg
xor
mov
sub
jbe
fidivrs
or
scas
in
dec
iret
faddl
and
iret
and
mov
out
cmpsb
or
lock
in
fidivrl
mov
lret
outsl
shr
cmp
sahf
call
incb
jo
mov
in
and
addr16
inc
adc
xchg
sub
inc
mov
mov
lahf
arpl
dec
in
push
ret
cmp
sbb
push
cld
adc
pop
js
jg
xor
pushf
cltd
jge
loope
addr16
leave
bswap
out
mov
adc
fnstcw
aad
sahf
adc
loopne
add
or
mov
mov
inc
int
push
dec
enter
adc
shl
scas
cmp
cli
adc
pop
rol
xchg
cmc
push
pop
or
and
sbb
out
adcb
or
pop
sbb
lods
xor
out
jne
adc
es
std
out
pop
or
mov
lock
pushl
pusha
fdivp
je
pop
js
xchg
into
outsb
fldl
pusha
out
int3
dec
mov
xor
leavew
jmp
loop
inc
add
mov
or
fldenv
jo
cmpsb
je
sbb
aam
int
lea
xor
idivb
mov
and
mov
popf
pop
cmp
xlat
in
cmc
add
mov
cmpsb
lea
push
dec
out
jne
pop
stc
sbb
pop
sbb
sub
add
clc
adc
mov
daa
cmp
cmp
rol
cli
fidivl
and
jp
adc
fistl
xor
lahf
pop
sub
and
jg
dec
jge
pop
dec
mov
xor
out
add
and
add
xor
fwait
dec
or
fsubrp
mov
cmp
scas
cwtl
jo
int3
aam
subl
adc
sahf
sahf
loopne
jb
in
mov
inc
sarl
insl
fwait
sub
shl
rclb
andb
xor
jns
fsubrs
pop
mov
add
imul
add
rolb
sub
lea
xchg
jne
sahf
in
jg
pop
xchg
mov
imul
xchg
push
push
inc
shll
add
test
cltd
mov
sti
repnz
cmp
outsb
push
mov
and
jnp
or
stos
sbb
adc
sbb
or
dec
cmp
es
lret
outsl
std
jg
stos
push
movsl
aad
xchg
bound
jae
mov
pop
pop
push
aad
pop
adc
cmp
out
outsl
mov
jne
push
adc
jl
mov
bound
std
shll
cmp
scas
add
pop
sub
orb
outsl
jp
cmc
pop
pop
ficoms
or
fnstenv
mulb
push
into
out
decb
pop
pusha
jg
mov
mov
rcr
adc
mov
sbb
mov
lret
jecxz
or
and
test
call
xorb
leave
xor
adc
in
lds
mov
or
sbb
sbb
sub
mov
adc
pop
inc
add
inc
jns
or
xchg
enter
popf
inc
gs
cmp
add
cmpsb
js
inc
cmpsl
test
test
dec
incb
mov
xchg
in
in
stc
out
hlt
jmp
sbb
adc
sbb
or
rol
jae
in
mov
inc
stos
xchg
fsubl
xrelease
mov
fdivs
or
popa
sbbl
fbstp
xchg
or
cmp
push
les
adc
test
popl
inc
mov
dec
cs
lcall
xchg
jo
mov
adc
pop
adc
or
sbb
adc
pop
cmp
pop
xchg
dec
int
xor
lods
negl
xor
std
dec
adc
cmp
or
xor
push
jg
pop
stos
sub
or
dec
jae
hlt
jae
mov
or
cmp
jo
lods
lret
xchg
mov
inc
dec
sbb
jmp
lcall
sub
outsb
push
inc
jl
jo
push
add
xchg
inc
gs
stos
es
and
testl
mov
jecxz
ret
lret
je
inc
jae
jno
aad
test
js
fcomps
addl
adc
lods
cltd
stc
jns
aas
cmc
sbb
dec
adc
cltd
jge
in
leave
ror
les
es
imull
jo
xchg
aas
idivl
xor
push
xlat
sarl
dec
add
push
xchg
daa
or
jp
push
mov
shll
gs
mov
out
mov
shrl
loopne
pop
loop
mov
cmp
inc
ficoml
stos
and
sub
icebp
push
or
into
outsl
test
int
clc
cmp
inc
lods
sbb
push
scas
shrl
cmp
subl
and
mov
xor
mov
arpl
scas
mov
cmp
icebp
push
cmp
mov
xchg
jno
ret
xchg
cmc
movsl
mov
out
sbb
mov
andl
les
mov
adcl
stc
adc
inc
inc
xchg
call
mov
sbb
into
lods
imul
cmp
out
jmp
aad
fcmovbe
das
adc
cmp
testb
les
pop
add
outsl
pop
lea
mov
add
lahf
jnp
mov
mov
pusha
mov
les
push
mov
mov
jb
xor
and
jne
adc
cltd
loope
cmpsl
popa
cmp
repz
push
adc
aad
push
ss
out
xor
push
inc
sbb
sub
adc
add
dec
ret
pop
and
rcrl
aaa
add
decl
sbb
cs
fldl
mov
mov
outsb
mov
imul
mul
pop
push
inc
mov
out
mov
sbbl
popa
icebp
aad
pop
pop
imulb
loopne
ja
outsb
negl
add
call
mov
jno
ljmp
mov
outsl
dec
cs
gs
data16
mov
and
dec
xchg
call
mov
mov
into
dec
out
cld
inc
icebp
mov
sahf
cli
push
pop
clc
or
push
aam
pop
popa
sbb
mov
arpl
sahf
sub
fidivl
mov
mov
sbb
mov
fprem1
in
xchg
fistpl
push
mov
fidivl
cmpsl
push
add
mov
jp
cmp
dec
jae
nop
cmp
sub
fnstsw
popa
insw
pop
fcompl
subb
xchg
cmp
inc
xor
aam
xchg
adc
addb
xchg
out
or
sub
jl
xchg
aam
test
leave
in
repz
push
add
sti
sbb
jmp
out
arpl
mov
dec
movsb
mov
pusha
mov
push
es
lcall
fmuls
or
jmp
adc
lea
cld
je
out
push
dec
pop
or
inc
notl
jecxz
les
ret
xchg
xchg
nop
mov
sahf
adc
lret
hlt
xor
into
rclb
and
dec
xchg
sub
inc
test
test
sbbb
pushf
mov
stos
pop
vpsrad
or
pop
pop
pop
mov
pusha
stc
leave
pop
xor
mov
pop
das
fiadds
out
push
arpl
call
fcoms
sbb
xor
insb
rcll
ja
mov
xlat
stos
mov
add
and
pop
jbe
add
sbb
cld
mov
hlt
ss
mov
cmp
out
push
mov
mov
aad
dec
aad
lea
xor
cli
clc
dec
cmp
shlb
xor
ret
pop
fisubrs
adc
ja
in
dec
jb
add
ja
cmpsb
std
rol
xor
xchg
jge
fldenv
adc
imul
and
pop
shlb
ret
push
out
xchg
or
aaa
jl
ret
or
jmp
das
paddb
inc
adc
jae
mov
cmp
mov
dec
lds
mov
cld
rcr
std
sub
xor
mov
out
mov
and
cmp
shl
inc
pop
xor
and
imul
xor
sub
adc
mov
xor
nop
inc
loope
or
aam
add
aaa
or
mov
xchg
sarl
aad
cmpsb
out
mov
popa
mov
js
test
xchg
xchg
in
ljmp
imul
jl
cmpsb
roll
jno
mov
cwtl
jne
mov
sti
pop
cwtl
mov
mov
mov
repnz
ret
cmp
add
fildl
xchg
sub
mov
mov
xlat
dec
movsb
icebp
fisubrs
cmp
push
outsl
mov
pop
jae
push
mov
out
fldl
notl
mov
shl
int
lret
fcmovnb
int
lods
nop
or
test
int3
sbb
lret
jle
stc
es
out
xchg
mov
lods
xor
pop
stc
out
addr16
leave
out
cmp
lahf
add
mov
rcrb
in
dec
hlt
aad
gs
bound
push
push
mov
fdivp
ja
push
push
les
and
pop
test
out
scas
or
push
ss
je
jl
je
dec
aam
mov
jmp
jno
je
dec
daa
dec
jge
push
jae
xchg
fists
mov
cmp
mov
mov
add
outsb
xor
push
mov
xlat
mov
loope
inc
push
lods
jnp
xchg
lods
in
dec
daa
mov
dec
pop
and
les
push
dec
in
cmpsl
in
into
pop
aas
gs
ss
test
inc
add
adc
outsl
out
mov
dec
xor
mov
fildll
cs
mov
lods
ret
or
mov
testl
out
push
mov
xchg
ret
cmp
or
or
jmp
jbe
xor
sbb
fsubs
jmp
inc
mov
pop
cmp
js
aaa
add
fistpl
jne
mov
mov
scas
orb
js
aad
add
int
shrl
daa
enter
popf
xor
stc
adc
gs
leave
mov
pushf
xchg
jl
xor
inc
pusha
cmp
fldl
inc
outsl
xor
mov
pop
fisubrl
sbbb
shrl
ficomps
push
orl
ss
mov
pop
or
push
enter
pop
cli
pusha
mov
sub
rcl
lods
cmp
fisttpl
clc
jne
adc
movsl
popf
sbb
test
and
pop
inc
lock
ljmp
sub
or
notb
xor
xchg
add
cwtl
test
sub
icebp
out
in
out
rcrb
aad
out
add
lahf
popa
into
xchg
mov
adc
insl
out
xor
repnz
push
cli
in
and
popa
repnz
ds
jo
jp
mov
shrl
in
cmp
ljmp
jo
inc
mov
iret
mov
cmp
cmp
popf
lock
loop
fwait
xor
mov
jl
xorl
aam
push
and
pop
test
pop
mov
mov
and
jno
leave
adc
mov
gs
mov
divl
jecxz
and
xlat
or
enter
pop
enter
xor
xor
jmp
addb
pop
ds
dec
or
stos
sub
std
inc
lock
and
lcall
push
inc
std
rcrb
mov
mov
cmp
inc
add
or
imul
mov
cmc
push
jl
into
xor
icebp
sub
lret
jne
repnz
add
imul
xchg
add
sahf
roll
test
test
enter
add
adc
sbb
mov
sub
jge
hlt
mov
mov
insb
jmp
out
test
cmpsb
out
push
add
jmp
and
outsl
into
sub
roll
push
sub
xlat
pminub
scas
loope
cld
in
cmc
xchg
inc
xorb
js
loop
sbb
ret
jae
xor
filds
and
mov
and
or
movsb
clc
lret
insb
pop
adc
loope
js
push
jmp
dec
inc
mov
add
stc
aaa
jns
loop
xor
sub
jb
xor
sbb
lods
adc
insb
mov
inc
stos
cmc
sub
sub
test
sbb
and
add
jp
push
inc
adc
subb
inc
cli
fs
enter
insl
iret
or
jge
out
lds
pop
pop
add
daa
shrl
outsb
push
xchg
cmc
mov
adc
out
stos
cltd
daa
xchg
sbb
sub
mov
mov
cmp
sbb
cs
push
cmp
ds
test
sbb
mov
sbb
xchg
stc
xor
pop
inc
test
test
cli
jle
cltd
stos
mov
stos
sub
mov
push
in
pop
fs
out
ret
fcompl
mov
pop
xor
ret
movsb
and
sti
ret
pop
mov
leave
xor
testl
push
daa
test
dec
cli
jae
mov
imul
pop
pop
add
mov
xchg
lock
aam
je
in
cmp
hlt
adc
lret
xchg
arpl
and
xor
sahf
mov
movsb
adc
pop
imul
cmpsb
lds
xor
dec
jg
sbb
sbb
out
jg
in
or
pop
cli
and
mov
sar
inc
lret
pop
es
fldcw
or
mov
repz
rol
popa
out
punpckhwd
loopne
push
dec
or
adc
aaa
pop
loopne
aam
pop
jp
pop
fldcw
xchg
je
inc
cld
cmp
mov
pop
aas
stc
repz
fimull
dec
mov
in
movsb
mov
and
xor
sub
andb
and
lock
pop
mov
lds
sub
orl
sbb
jo
inc
cmp
sbb
out
dec
pop
pop
xchg
or
mov
cmp
pop
inc
push
shlb
addb
mov
mov
xchg
xor
and
xor
test
mov
popw
scas
xchg
and
xchg
mov
add
loop
test
jmp
mov
mov
inc
pop
ret
xchg
or
aas
mov
inc
and
fwait
mov
fwait
in
andb
leave
jle
mov
inc
in
outsb
mov
rclb
cwtl
out
int3
jp
aad
xchg
push
mov
sbb
aaa
push
push
xor
xor
dec
sti
mov
mov
lret
dec
jo
xchg
ret
or
fsts
push
mov
inc
and
cld
jne
xor
pop
push
mov
hlt
inc
add
pop
lret
fsubrl
push
mov
shlb
xchg
enter
sub
mov
pop
insb
mov
jle
hlt
cltd
fdiv
push
into
dec
test
out
mov
jae
cmp
xor
fwait
imulb
insb
or
jg
stos
in
jge
mov
sar
call
xor
pushl
pop
arpl
bound
push
jnp
cli
ss
sti
xchg
fnsave
leave
xor
mov
and
dec
inc
mov
mov
lea
pop
xor
aas
insl
data16
xchg
xor
daa
mov
test
pop
jo
or
lret
or
movsb
loopne
out
jne
frstor
xor
imulb
pop
xor
aad
mov
mov
jo
std
xchg
adc
xchg
xchg
stos
test
adc
push
aad
repz
dec
fwait
dec
sub
iret
dec
push
outsb
dec
sub
lods
add
inc
or
or
dec
or
stos
xor
xor
gs
in
xchg
out
lds
fistps
ljmp
or
dec
fnstcw
mov
scas
rcll
or
cmpl
pop
in
push
cmp
inc
rcll
and
les
inc
pop
es
add
jns
push
negl
mov
mov
test
cmp
stos
cmp
test
stos
dec
fcoml
lahf
gs
xchg
pop
push
movsb
jne
fstpt
dec
and
xor
adc
pop
outsl
rcrb
cmc
sub
sub
mov
mov
fcompl
sti
mov
aad
loop
in
dec
mov
insl
cmc
cli
pop
lds
add
es
xchg
jge
adcb
rol
cmpsl
test
ds
sti
sbb
aaa
stos
sbb
pop
xor
popa
sbb
leave
aad
mov
fwait
xor
cld
pop
xchg
and
mov
xchg
bound
enter
in
repz
jl
orl
xor
fstps
cld
aad
jno
shll
andl
bound
cmp
popf
or
add
xchg
insb
adc
and
movsb
xchg
add
test
out
in
xor
mov
pop
mov
outsl
imul
les
scas
fwait
push
jmp
jle
xor
mov
pushf
fsubrl
adc
into
dec
push
int3
aam
mov
cli
and
dec
xor
sti
mov
lret
push
clc
faddl
loop
loope
xchg
jno
sbb
shll
nop
push
int3
pop
fmul
hlt
sti
cmp
or
mov
cmp
push
mov
xchg
mov
std
mov
mov
jl
xchg
icebp
sahf
test
out
xchg
mov
inc
jg
xchg
or
rcrl
fwait
push
sub
push
mov
fistpll
add
mov
mov
adc
mov
jg
in
sahf
aaa
mov
nop
xchg
stc
dec
loop
inc
adc
inc
push
push
iret
sti
hlt
sbb
cmpsb
mov
adc
push
sbb
or
loopne
sub
xor
mov
clc
xchg
fstpl
in
outsb
and
das
push
popf
jg
icebp
movsb
push
cmpsl
and
popa
xor
and
add
out
sbb
ljmp
in
xchg
or
popa
push
sbb
push
xor
inc
subl
cmp
das
or
insb
mov
mov
jmp
icebp
lcall
fsubs
dec
cmp
cmp
xchg
pop
imul
flds
or
hlt
dec
lods
inc
cmpsl
sbb
rcll
xchg
sub
push
cltd
sbb
stc
aaa
outsb
push
mov
pop
push
in
mov
fisttps
pop
push
mov
mov
lock
fnstcw
fsubrs
rcll
mov
and
push
jbe
push
jmp
je
add
pop
inc
sub
sub
xchg
push
lods
mov
mov
sub
sbb
lds
xchg
lcall
ljmp
iret
push
add
mov
fmuls
pushf
mov
mov
icebp
push
aad
or
or
push
into
aam
imul
rcrl
xchg
not
mov
adc
leave
flds
test
fmuls
aaa
movsb
stc
jnp
or
xchg
cmp
pop
inc
push
adc
imul
jne
lods
mov
jb
cmp
fldl
sub
rcrl
pop
pop
or
std
lahf
mov
test
mov
test
sbb
popl
sarb
add
xor
sbbl
rolb
cmp
sti
mov
push
hlt
scas
fs
cmp
mov
lret
pusha
push
lods
aas
inc
arpl
push
lds
add
sbb
movsb
xchg
or
rcll
lret
sbb
xlat
add
pop
push
adc
cmp
mov
jmp
loop
shll
add
push
imul
sbb
and
cmc
xorb
dec
imul
sbb
fimull
fadds
and
dec
lock
lods
jl
jb
jns
lods
pushf
rcrb
add
clc
push
addr16
and
cmp
or
roll
and
and
mov
fidivs
push
mov
xchg
jmp
adcb
enter
gs
loope
push
mov
push
xlat
inc
fsub
bnd
sub
jb
push
cmc
cmpsb
cmp
fwait
push
out
mov
jl
jns
js
roll
fldenv
fcoms
xchg
test
fnstcw
fmulp
jecxz
pop
bound
insb
sbb
dec
and
sahf
std
cwtl
dec
in
sahf
lcall
in
cmp
xchg
xchg
jae
mov
push
clc
out
mov
test
push
clc
jnp
xchg
les
data16
mov
out
fsubrl
xlat
test
add
scas
pop
ljmp
adc
scas
xchg
lds
fdiv
add
js
cmp
popa
sbb
imul
or
xchg
jge
push
in
cmp
faddl
lahf
sub
mov
xor
in
sub
enter
xlat
ja
sbb
pop
jbe
test
or
jmp
je
and
ja
loopne
js
sti
test
sbb
cmp
lods
xchg
in
push
add
jne
bound
jno
dec
je
dec
les
insl
ss
jl
pop
movsb
cwtl
scas
pop
mov
inc
dec
dec
loope
dec
jge
rcll
add
and
cmp
inc
ja
enter
movsb
fwait
aad
arpl
imul
out
ja
lods
mov
fistpl
ror
sub
xor
adc
js
xchg
loope
or
out
mov
incl
pop
mov
dec
dec
push
pop
addb
cmc
cld
push
fs
cld
adc
daa
lods
jns
inc
cmp
std
iret
mov
mov
jo
sbb
mov
or
movsb
das
lds
out
test
sub
divb
push
xlat
xor
divl
sti
and
inc
jbe,pt
or
stos
bound
dec
pusha
dec
and
adc
inc
scas
pop
lret
inc
in
pop
out
mov
jno
mov
jo
mov
adc
lds
pop
in
ficoms
ja
push
cli
test
push
pop
mov
daa
xor
add
inc
cmpsb
cmpsl
out
add
inc
jns
movsl
push
push
dec
jae
sub
outsb
cmp
sub
pop
lret
stos
xlat
dec
orb
dec
fsubrp
jle
push
cwtl
shr
mulb
lods
test
jecxz
jmp
or
push
lods
int
sbb
xor
mul
das
repnz
adc
mov
mov
mov
test
sub
jecxz
sahf
ret
cmp
stos
movsb
or
outsl
pusha
cmp
pusha
ja
cmp
mov
xor
enter
mov
bound
lcall
out
mov
push
mov
mov
inc
ss
ja
insl
cmp
pop
push
adc
shll
adc
mov
adc
pop
xchg
dec
jp
sub
lret
in
mov
loopne
sarl
pop
xchg
xor
bound
and
or
push
add
push
xor
movsb
or
pop
lods
push
call
mov
int
dec
scas
xchg
js
cwtl
sub
push
and
jl
popa
mov
ret
jp
dec
lock
stos
lea
xchg
bound
pop
hlt
pop
movsl
jecxz
es
ja
mov
push
xchg
aad
sbb
sub
adc
cld
xor
or
int3
enter
std
push
xor
fsubrs
leave
pop
shlb
sub
inc
imulb
xchg
jo
and
push
or
ret
mov
insl
jp
jae
adc
movsl
cs
jns
cmp
inc
xchg
inc
lahf
ss
fisubrs
xor
cmpb
push
mov
pop
push
xchg
mov
cmpl
mov
aam
add
test
repz
fsubp
sbb
and
ja
ljmp
lcall
adc
les
push
lea
mov
aam
mov
in
testl
sahf
sub
jle
xor
add
adc
pusha
sub
rcrl
lret
sub
clc
sub
test
imul
leave
mov
fisubs
push
arpl
shrb
inc
sub
stc
into
movsl
pop
mov
mov
mov
outsb
pop
ja
call
subl
sub
out
imul
pop
jge
or
cmp
xchg
cmp
loope
mov
pop
adc
std
pop
or
int3
and
imul
jg
mov
xor
adc
pop
add
stc
loopne
sbb
les
pop
jge
negl
mov
scas
xor
sub
adc
and
and
lds
lcall
rcrl
push
cli
loope
cmp
push
flds
in
iret
leave
push
sbb
jmp
lret
cmpsb
push
int3
cmp
ret
inc
call
mov
ficomps
jnp
dec
push
call
in
loop
std
loop
and
insl
enter
test
movsl
mov
fdivrl
int
and
mov
or
cmp
push
mov
rorl
mov
fcoml
mov
pop
cmc
fwait
add
cmp
cwtl
mov
lods
mov
roll
clc
dec
enter
in
add
out
ds
push
xchg
jnp
in
cmc
adc
fnsave
mov
push
scas
mov
pop
sub
mov
jmp
push
int3
xor
add
sbb
dec
test
jo
mov
lret
in
in
push
pushf
je
and
adc
and
cmp
jecxz
cmp
mov
jge
je
mov
pop
inc
aad
cmp
in
and
sub
cmc
fidivl
add
notb
int
jmp
inc
es
leave
xchg
mov
in
pop
jb
insb
sti
popa
mov
dec
cmpsl
add
ret
out
cmp
jg
stos
stos
adcl
add
inc
mov
pop
andl
in
jmp
in
xor
or
xchg
lret
test
mov
enter
xchg
popa
lock
xor
cwtl
rcrb
push
sub
cs
push
test
test
jns
or
les
add
ret
rcrb
mov
dec
adc
jmp
sub
cli
mov
add
lds
test
ss
add
lret
addb
popf
or
jno
inc
mov
adc
sbb
call
daa
xchg
rcll
dec
fstpt
insb
adc
add
in
xor
xor
je
inc
pop
cwtl
sub
sbb
jp
jae
dec
or
scas
dec
mov
adc
push
nop
and
int
dec
out
cmpsl
fdivr
add
cmp
enter
pop
sbb
lcall
outsb
aas
or
pop
rcrb
jge
sub
adc
sub
out
out
sahf
aam
das
mov
pushf
loopne
sub
jnp
arpl
imulb
or
or
jnp
jno
pusha
cli
push
out
push
adcb
and
lcall
pusha
sub
push
jnp
lods
mov
loope
fiaddl
lret
xchg
and
jo
push
dec
fildl
xor
dec
mov
add
hlt
push
and
push
dec
in
adc
shl
pushaw
pop
pop
jo
out
je
pop
pop
rcll
call
fdivs
xor
enter
ljmp
rclb
adc
adc
mov
mov
add
lea
and
sub
jle
fidivs
add
in
mov
imul
in
and
out
jg,pt
mov
push
insl
lock
loope
adc
sub
vrsqrtss
mov
dec
mov
pop
xor
stos
xor
and
andl
lret
inc
mov
sub
pop
inc
leave
loope
xor
enter
or
adc
mov
jmp
loope
sbb
imul
nop
and
add
pop
lods
js
jl
insl
sub
test
lahf
dec
mov
add
repz
data16
push
scas
subb
iret
adc
out
out
mov
int3
pop
lcall
and
testb
sbb
js
ret
inc
sub
mov
arpl
xchg
lods
out
gs
inc
test
stc
shl
int3
shll
icebp
insl
adc
xchg
mov
lds
aam
jne
dec
fchs
pop
ret
repz
cmp
pop
imul
mov
inc
mov
cmp
add
adc
cmp
outsb
daa
adc
enter
clc
sub
jmp
mulb
shrb
dec
out
call
lcall
lods
loop
pop
pop
clc
rcll
xchg
sbb
adc
inc
ret
inc
push
push
add
xor
loopne
movsl
add
pusha
in
das
xchg
mov
bound
popf
shll
inc
dec
xchg
add
mov
push
out
mov
adc
pop
push
pop
cltd
inc
inc
cmp
mov
addr16
outsl
mov
lods
addr16
jmp
push
mov
mov
clc
lea
fimull
xchg
and
push
sub
adc
jecxz
sbb
dec
scas
push
cmpsw
and
scas
int
mov
mov
sub
jae
mov
push
cmp
mov
rorb
cmpsl
jb
mov
pop
aas
dec
test
sbb
dec
add
std
jge
in
out
xchg
mov
pmulhuw
fdivrs
push
mov
mov
add
pop
dec
insl
es
jle
sub
aam
gs
xlat
xchg
inc
push
call
dec
lret
xchg
lods
mov
rolb
mov
jle
jbe
ret
xor
ret
jle
stos
inc
and
jle
je
pusha
scas
xchg
pop
sub
movsl
sub
movsb
arpl
aam
lret
adc
test
jecxz
sbb
orb
scas
adc
mov
pop
aad
sub
in
sahf
pop
jle
jbe
xchg
add
adc
ljmp
inc
mov
mov
ret
ss
mov
ror
cmpl
jg
cmp
mov
sbbl
bound
imul
mov
adc
push
pop
push
mov
mov
imul
les
int
or
scas
popf
cs
or
jo
push
mov
cs
lock
fadd
rol
dec
sbb
dec
rcrl
jp
sbb
mov
mov
xlat
imul
mov
add
lods
pusha
and
inc
insb
out
fcomps
push
sub
mov
fstl
stos
das
addr16
mov
mov
dec
scas
popl
syscall
sbb
jbe
push
xor
ss
mov
psrld
cli
ljmp
mov
pop
gs
sbb
jmp
test
cmp
dec
enter
jne
push
sahf
scas
push
ret
stos
fmulp
fwait
lret
mov
shl
push
pop
aam
add
xor
fdivs
cld
xchg
test
adc
pop
in
lret
jge
jle
fistps
sarl
fsts
xor
ret
cmp
mov
ljmp
rclb
push
pop
sub
mov
add
inc
sbb
rclb
or
scas
lret
inc
pop
xchg
and
in
cmpsl
and
repz
xchg
sbb
xor
rol
pop
inc
mov
cmp
insb
xchg
std
jle
test
jecxz
dec
xchg
imul
iret
out
push
adc
daa
psubd
into
or
fimuls
push
and
movl
sahf
cs
and
fcomps
imul
mov
mov
inc
negb
mov
inc
cltd
mov
data16
lret
sbb
xchg
jne
mov
jne
mov
mov
call
rorb
movsb
or
or
int3
inc
inc
xor
jp
lock
add
inc
add
push
jno
or
rolb
into
je
mov
dec
mov
aad
cmpsl
lock
sub
lret
mov
jecxz
pushf
adc
fmuls
add
ret
sub
mov
repnz
bound
xchg
or
nop
push
test
iret
int3
test
in
dec
push
lcall
mov
xor
imul
jbe
push
aam
dec
sbb
cwtl
adc
pop
or
mov
ret
adc
cmpsb
rcl
rorl
repnz
pop
or
xchg
jno
xchg
dec
lret
inc
shl
loopne
ljmp
add
mov
sbb
aaa
mov
mov
mov
inc
pop
xor
jmp
ret
xlat
ret
mov
rcrl
insl
push
cmp
popf
fisttpll
int3
aam
adc
popa
shr
mov
lock
sbb
pminub
and
mov
fnstsw
sbb
loope
mov
mov
jle
lea
add
pop
adc
js
pop
ror
pushf
pop
sub
adc
pop
andb
lahf
testb
imul
enter
xor
mov
jbe
int3
shlb
gs
jl
dec
arpl
arpl
out
inc
rcr
fs
push
rol
push
andb
push
or
cmp
imul
flds
jns
inc
sbb
xchg
fcmove
push
mov
fwait
add
in
or
add
repnz
inc
dec
xchg
xchg
cmp
dec
idiv
popf
dec
idivb
sub
dec
repz
push
or
xchg
lock
shll
cmp
dec
mov
cwtl
xor
out
cld
pop
push
inc
vmovaps
cmp
push
dec
or
rorb
outsl
lcall
sbb
loopne
daa
test
fdivr
or
jo
xchg
gs
das
test
adc
pop
jae
sbb
xchg
and
pop
jbe
mov
es
lock
addr16
je
cmp
dec
xchg
loopne
lea
sub
and
mov
in
xor
mov
scas
sub
cwtl
sub
dec
push
popf
in
in
sbb
rclb
outsb
jmp
nop
add
sbb
int3
mov
orl
sbbl
mov
rorb
repnz
fsubrs
xchg
and
lret
stos
cmp
inc
dec
add
or
xchg
repnz
and
push
mov
rcll
cld
adc
ds
mov
mov
push
and
dec
push
ljmp
push
sbb
lret
inc
cmpsb
push
mov
adc
push
or
or
ficoml
pop
jns
adc
sub
stos
imul
inc
pop
and
hlt
shlb
or
or
incb
jbe
mov
mov
or
dec
mov
cmpsb
cmp
add
push
rep
out
insb
push
pop
mov
mov
sbb
test
push
dec
aam
aas
dec
sub
push
cmpsb
loop
xchg
mov
inc
stc
jno
ret
aad
xor
mov
push
js
and
in
push
loop
lret
or
lods
push
movsb
cwtl
sbbl
mov
mov
pop
push
int3
xchg
cli
jbe
dec
adc
push
ljmp
js
stos
lea
and
xor
sbb
jbe
notb
add
pop
mov
ret
pop
cld
insl
fldcw
and
pop
sbb
push
pop
mov
pminsw
imul
push
jle
pop
xor
in
add
sub
int
out
int3
pop
js,pt
inc
movl
imul
push
xchg
xor
scas
xchg
mov
cld
dec
xchg
stos
pop
xor
push
lock
mov
push
cltd
mov
outsb
inc
and
std
sub
xchg
ret
shll
push
and
in
and
ljmp
test
aam
ds
and
cmp
ja
js
adc
les
fldcw
int3
or
and
jno
loope
subl
ljmp
cmp
test
dec
dec
out
jle
pop
mov
push
iret
push
inc
arpl
loopne
in
idivl
lret
xchg
stos
jns
sub
test
dec
pop
mov
icebp
inc
imul
dec
repz
pusha
cmp
mov
loope
in
sbb
xchg
int
cld
xor
cmp
push
jbe
mov
pop
in
loope
ret
insb
pmaddwd
inc
pop
xchg
cmp
sbb
xor
mov
push
sub
jo
jmp
aam
sbb
addl
mov
mov
sub
jo
pop
dec
dec
or
dec
jnp
cmp
jp
inc
aas
xor
leave
fs
das
and
in
ret
adc
cld
or
movsl
cmpsl
push
mov
dec
fwait
add
inc
cmp
mov
imul
daa
lock
fimull
push
jge
push
cwtl
push
cltd
mov
pop
lret
mov
pop
sbb
lods
sub
and
sar
xorl
sbb
mov
push
sub
stos
outsb
dec
ret
rclb
das
xchg
insl
orps
cmp
sub
push
xchg
sti
call
sbb
call
mov
int
jb
out
mov
fwait
push
mov
add
pmaddwd
icebp
in
popa
mov
push
int3
dec
clc
sti
mov
pop
sbb
adc
push
jecxz
push
outsl
inc
adc
mov
dec
xor
pop
push
js
fsubrs
daa
outsl
pop
dec
ljmp
mov
pop
enter
inc
clc
sbb
lods
nop
orb
rolb
out
mov
push
push
js
mov
fnstsw
lock
aam
call
pop
mov
xchg
ds
les
cmovnp
hlt
and
cld
movsl
mov
mov
outsl
xchg
push
dec
test
sbb
lret
mov
adc
and
or
pop
jo
aad
or
inc
mov
fsubl
jne
pop
pusha
sbb
in
xor
fstps
pusha
out
push
xor
mov
testl
mov
adc
shl
mov
sti
jne
ds
sub
dec
cmpl
ffree
outsb
test
xorl
mov
movsb
mov
outsb
add
lock
push
xchg
test
adc
cmp
lods
lret
popf
nop
mov
popf
ret
outsl
in
das
shll
jns
iret
pop
enter
jge
cmp
lret
cltd
enter
rol
arpl
fsub
mov
jmp
cmp
outsl
jno
sub
inc
mov
faddl
sti
scas
pop
enter
mov
jmp
xor
enter
lret
mov
nop
and
fwait
std
movsl
and
xor
pop
mov
push
xchg
aaa
mov
cmpsb
lock
in
add
jbe
push
pop
add
insl
lcall
dec
imul
scas
inc
xchg
mov
inc
pop
jns
into
push
std
stc
mov
push
or
xor
int3
test
mov
mov
mov
push
aas
mov
inc
pop
adc
add
mov
movsl
mov
js
mov
fdiv
outsb
test
nop
ret
inc
mov
inc
mov
jl
xchg
mov
xor
std
and
std
adc
and
pop
loopne
jns
mov
jle
imul
fidivl
mov
icebp
mov
pop
mov
mov
aad
scas
sbb
out
jo
fstpt
inc
lret
pop
mov
sub
js
leave
int3
mov
adc
rcl
cwtl
lahf
push
jl
cmp
fsub
push
hlt
xchg
cmc
jg
call
pop
enter
mov
mov
jecxz
mov
addb
into
ja
fiadds
bound
imul
flds
or
stos
push
jg
popa
leave
sti
sbb
adc
std
sar
add
rcr
jmp
shrb
or
leave
das
fwait
mov
lds
nop
fcomps
pop
xlat
or
or
loopne
movsl
in
dec
movsb
mov
or
jmp
fs
in
adcb
nop
sti
in
rcrl
and
xchg
and
xchg
mov
pushf
cmp
fsubrp
ljmp
mov
mov
lea
sbb
out
xor
loope
sbb
push
mov
lcall
stos
add
inc
hlt
push
ljmp
sbb
iret
jle
or
sbb
imul
loop
or
enter
js
test
mov
je
pop
and
inc
inc
pop
cmpsb
sub
or
loopne
adc
pushf
popf
lcall
stc
ret
popf
jnp
inc
push
mov
fprem
xchg
stos
sbb
add
pop
call
iret
xchg
xor
pop
push
in
je
or
aaa
test
dec
repnz
mov
jae
ljmp
dec
add
insb
hlt
iret
rcr
in
push
pop
popf
dec
pop
mov
test
iret
adc
inc
cmp
dec
and
pop
xchg
pop
lret
push
push
inc
cmp
out
addr16
scas
mov
sahf
insb
jmp
mov
mov
int
push
inc
pop
pop
push
adc
mov
outsb
imul
adc
pusha
push
xchg
lods
and
inc
testb
xor
push
out
pop
add
push
jns
icebp
clc
sub
cwtl
pop
mov
and
or
fimull
and
jl
push
movsl
add
xlat
add
scas
fmuls
mov
movsl
adc
sbb
dec
popf
arpl
add
mov
pusha
mov
or
push
punpckhbw
ror
stc
std
jno
mov
fs
fldenv
stos
jge
inc
push
sub
or
push
cld
xlat
cmc
shlb
nop
cltd
dec
inc
pop
add
fiadds
jge
or
rolb
popa
cmp
test
xor
mov
inc
test
push
rcr
fists
andb
scas
sahf
fs
push
push
sbb
mov
sub
out
dec
dec
into
mov
sub
xchg
sbb
xchg
in
lret
cld
jecxz
or
push
jmp
iret
lahf
inc
sub
sub
adc
ret
dec
xor
cmp
aam
imul
loope
pop
mov
clc
push
dec
gs
loop,pn
orb
adc
into
jb
push
frstor
mov
add
shl
stos
mov
xor
ret
dec
jns
fwait
pop
inc
sbb
ss
push
adcb
jae
jno
outsb
in
je
mov
or
les
inc
shlb
pop
xchg
addr16
adc
and
mov
adc
jge
pusha
jb
jmp
loope
or
mov
popf
push
outsl
sub
adc
cmpsb
sbb
rolb
out
shll
mov
cs
inc
nop
sub
gs
fdivl
movb
in
icebp
inc
out
push
inc
mov
mov
aaa
cltd
xor
dec
mul
outsb
leave
xor
outsl
sbb
jb
pop
or
adc
les
cli
or
pusha
lods
push
imul
mov
adc
cmp
js
into
inc
movsl
push
cwtl
in
imul
dec
adc
and
sti
cmp
xor
loope
xlat
pop
or
jbe
push
lahf
jge
aam
push
js
stos
fs
repnz
pop
shrb
adc
scas
jge
or
pusha
mov
call
ja
dec
jns
lcall
jle
cmp
jecxz
pop
jae
ret
out
stc
mov
push
xor
paddusb
in
dec
sub
lcall
push
fcompl
aaa
pop
stc
ja
mov
fs
xchg
jge
das
sbb
xor
xchg
xchg
adc
add
pop
pushf
subps
movsl
jle
add
fldenv
das
sub
imul
jmp
out
jp
xor
pop
fwait
lods
jmp
add
cmp
jle
inc
cltd
lcall
or
aad
insl
aaa
mov
jb
push
scas
testl
cmc
push
cmovo
test
pop
nop
jl
sub
dec
pusha
loopne
mov
scas
enter
sbb
es
xor
rorb
and
mov
xchg
jp
cmc
adc
cmpsb
xor
sbb
jmp
lcall
sbb
test
mov
adc
lea
rclb
aam
pop
movsl
rcrb
orl
push
out
jp
cmpsl
or
mov
sbb
sahf
shrb
dec
mov
push
std
movsb
sub
xchg
ja
and
mov
mov
mov
xor
adc
pop
and
mov
mov
push
in
int3
mov
pop
pop
ficoms
xor
cmp
andl
ds
adc
mov
stos
add
pop
adc
add
cmp
mov
jne
stos
sub
sbb
mov
or
xchg
cmp
xor
dec
pop
pushf
icebp
or
mov
push
cmp
push
xchg
clc
push
mov
adc
lahf
out
jecxz
aad
push
mov
sub
ret
xor
sahf
inc
push
pop
pop
mov
je
jno
cmp
jnp
sti
sub
xchg
cld
pop
jo
push
sbb
je
or
pop
cmp
lods
aas
fnstenv
or
scas
jno
inc
jb
les
sbb
sub
addr16
insl
mov
pushf
lcall
sarb
mov
or
mov
clc
pushf
insl
gs
xor
xchg
jg
mov
cmp
arpl
jp
xor
add
push
xchg
stos
mov
pushf
sti
fwait
out
shlb
add
jae
popf
xchg
cwtl
mov
cmpsb
mov
add
pop
or
or
inc
dec
repz
movsb
movsl
arpl
sub
xor
jecxz
mov
jnp
lahf
nop
pushf
cmp
out
cmp
in
push
push
loope
pop
lods
jl
xchg
and
rcrb
clc
adcb
cmp
or
xchg
fidivrs
mov
cmp
mov
test
loop
out
dec
icebp
lahf
jge
jns
mov
je
add
out
mov
jecxz
xchg
jp
shlb
mov
push
pop
jl
js
and
mov
sub
sbb
pusha
mov
enter
pop
ss
in
decb
and
pop
leave
xchg
cmpl
sbb
fbstp
push
cltd
mov
pop
aam
out
or
insl
test
push
jge
pusha
add
addr16
adc
rol
int
stos
pop
int
fimuls
push
xchg
or
out
dec
rcrl
xchg
inc
popf
sbb
push
out
dec
repnz
outsl
pop
pop
xor
pop
adc
mov
das
lret
das
cmp
jp
ret
push
neg
test
push
leave
arpl
pop
xchg
mov
js
mov
sub
xor
test
ljmp
call
adc
mov
jns
popa
idiv
dec
jb
movb
jno
pop
jg
pop
movsl
mov
xor
pop
lret
mov
mov
iret
filds
inc
leave
nop
xor
xchg
jge
lock
dec
ret
mov
jp
pop
and
push
insb
repz
mov
iret
ret
test
mov
xor
lahf
insb
push
xorb
icebp
inc
arpl
xor
mov
mov
movsl
mov
lcall
mov
and
pop
jns
xor
shrl
inc
jb
mov
leave
mov
mov
jbe
ss
aad
jbe
mov
sub
scas
test
sbb
dec
icebp
loop
xchg
mov
pop
es
add
repnz
ficoms
add
jnp
sarl
lods
and
imul
add
leave
pop
addr16
adc
mov
pop
sbb
or
mov
pop
lret
sub
adc
pop
cmp
mov
jmp
stos
mov
mov
decl
fwait
inc
jne
and
call
jle
sbb
cmp
les
sbb
hlt
mov
pop
jl
mov
sahf
cwtl
mov
lret
xor
jmp
in
jg
cmovp
callw
pop
loopne
fnsave
fisttpll
pcmpeqd
pop
int
xchg
inc
sbb
sbb
orb
pop
cmp
gs
and
test
cmpsb
mov
sbb
inc
adc
scas
pop
test
cmpsl
mov
or
cwtl
xor
add
pop
scas
mov
or
sbb
xchg
jp
mov
fistpll
orl
jmp
jmp
imul
adc
pushf
mov
int
scas
sti
mov
push
aaa
jmp
pusha
mov
sbb
jns
inc
jg
and
mov
mov
cmc
dec
bswap
jnp
or
xchg
ss
loop
xchg
hlt
push
lcall
out
cld
int
mov
ficomps
cmp
add
adc
xchg
pop
adc
and
in
dec
popf
leave
xchg
je
or
cmp
ss
xchg
movsl
negb
jle
sub
add
push
mov
mov
fnstcw
in
mov
in
xchg
mov
mov
das
adc
in
cwtl
jns
push
lock
jae
pusha
fdivr
cmc
jge
in
mov
adc
shlb
xchg
cmp
inc
aas
jns
mov
insb
jne
sbb
mov
cmp
in
ficomps
pop
pop
cld
ret
movsl
mov
je
mov
cli
jne
or
push
fdivs
ja
stos
pop
cwtl
dec
rclb
dec
jbe
mov
in
dec
push
pop
enter
clc
cmp
clc
xor
xchg
ja
loopne
outsb
ljmp
sti
cmp
in
rcll
adc
and
je
lock
dec
call
mov
shr
fdiv
bswap
cs
mov
inc
jnp
xor
divl
not
push
das
ss
mov
pop
rclb
adcl
jle
aam
into
sahf
sub
stos
push
in
std
fadds
in
or
mov
cmp
mov
ljmp
arpl
scas
lds
inc
aaa
sbb
add
inc
pop
push
inc
mov
mov
inc
mov
pusha
sbb
inc
mov
movd
cmp
adc
inc
xchg
pop
in
ss
std
neg
or
sbb
or
mov
and
xchg
sti
fcmove
les
pop
cli
insb
movsl
data16
inc
sbb
arpl
das
xchg
outsl
sub
movsl
leave
inc
cmp
cmc
movsl
inc
fimull
mov
mov
sbb
dec
cld
fldcw
pop
stc
dec
push
sub
pop
jo
jmp
jo
aam
mov
jmp
push
adc
inc
je
cld
dec
in
fstps
pop
add
movsl
cmp
xchg
xlat
bound
sbb
mov
cmp
lcall
fsubs
add
pop
daa
nop
sbb
cmp
nop
fbld
cli
out
mov
mov
jle
xchg
lods
mov
test
push
or
in
insl
jmp
je
xor
fs
outsb
adc
gs
emms
or
add
nop
call
mov
jb
mov
ds
int
pop
sub
dec
imul
scas
aaa
out
aas
jbe
xchg
int
inc
dec
sahf
enter
addl
gs
ja
xor
mov
jle
cs
fiadds
pushf
mov
and
mov
aam
jp,pt
lods
push
add
inc
or
in
pop
add
loop
add
push
in
fistl
dec
loop
jmp
jmp
cmp
jmp
jmp
and
or
inc
test
sahf
stos
lahf
cmp
fcoml
mov
adc
dec
xchg
cwtl
inc
sbb
sub
sub
icebp
ret
or
out
test
or
dec
cmp
icebp
ja
insb
inc
adc
and
lods
loopne
insb
int3
cli
xor
add
mov
push
stos
stos
into
xchg
mov
cmp
fidivrs
insl
lock
ret
add
loope
push
test
lahf
in
in
shr
push
lahf
std
cmp
aad
imul
out
jp
push
in
push
dec
adc
arpl
xor
loop
daa
adc
mov
or
jae
in
xor
jg
pusha
or
out
sbb
jne
xlat
das
popa
fucomp
cmc
ffreep
or
sbb
sti
and
enter
add
ljmp
push
push
stos
pop
sbb
xor
pop
pusha
ret
shrl
adc
jo
add
push
pop
punpcklwd
scas
fs
aaa
ficoms
pop
mov
dec
jge
sarb
push
adc
cwtl
fcompl
cmp
in
jnp
inc
ja
lods
ja
mov
add
mov
dec
cmpb
push
mov
ret
sti
lods
int3
iret
and
cs
inc
sub
sahf
push
aad
out
inc
pop
mov
shll
in
test
push
lcall
mov
out
idiv
stos
cli
movq
iret
jnp
jb
sub
jge
repnz
ja
out
jb
outsb
imull
cmp
or
stos
jo
adc
call
movsl
sbb
push
sub
js
sahf
xchg
dec
or
or
fisttpl
inc
arpl
lahf
cmc
xor
sub
inc
gs
testl
out
ror
popl
and
cmp
pop
out
cmp
cs
or
loop
int
pop
jae
jmp
pushf
cltd
inc
sbb
ds
loope
push
lods
das
sbb
in
ds
mov
in
bound
arpl
mov
loope
push
or
insb
insb
xchg
cmp
addr16
mov
ja
adc
and
cmp
pop
mov
xchg
hlt
fstpt
jge
xorl
dec
sub
andl
fdivrl
sub
jno
cmp
xlat
or
imul
jmp
mov
orb
xor
sahf
or
out
imul
sbb
jle
adc
pop
call
test
loop
ljmp
shlb
test
ficompl
cmpsb
loop
cs
push
mov
cmp
adc
js
cwtl
adc
add
loop
add
inc
jbe
push
ret
cmpsb
lahf
dec
aas
push
fs
inc
jg
ljmp
mov
lea
test
mov
dec
repnz
jg
adc
push
cmp
adc
push
mov
std
fwait
mov
in
ljmp
jns
pop
jg
int3
or
test
out
adcb
popl
insl
cli
in
jnp
and
xchg
test
xor
jle
clc
ljmp
out
enter
idivb
jle
adc
sub
xchg
in
jo
scas
mov
push
test
mov
add
loop
sbb
jae
mov
test
cmc
out
into
adc
inc
cli
adc
daa
popa
and
out
inc
std
lret
subl
inc
test
pop
or
ret
add
sbb
inc
pop
jae
xor
sub
lret
push
imul
mov
dec
jns
cmp
psubd
nop
xchg
test
add
mov
pop
std
mov
xor
lea
rorb
jno
daa
fbstp
sahf
addr16
mov
out
aad
data16
jb
jle
loope
mov
scas
fsub
clc
mov
fildll
pop
out
jbe
xor
xor
mov
cwtl
and
outsb
fnstsw
dec
movsb
ret
adc
lods
in
ret
inc
fistps
pop
scas
push
add
lahf
loope
adcb
stos
xchg
xor
dec
pushf
aam
push
sbb
push
cmc
jmp
xchg
xchg
lock
fmuls
cmp
nop
mov
out
or
faddl
sbb
cmpsb
and
add
mov
stos
or
adc
pop
jl
ret
xchg
jle
sahf
xchg
shll
cmp
data16
test
sbb
jp
testb
push
pop
dec
daa
push
test
stc
les
data16
xchg
xchg
int
test
push
add
pushf
movsl
jmp
sbb
es
xchg
jmp
or
ja
cli
xor
addr16
inc
popf
sub
jb
les
push
leave
mov
les
pusha
and
pop
cwtl
or
mov
ja
or
push
mov
sbb
aad
jmp
pop
mov
enter
aam
outsl
fs
ficompl
xlat
mov
or
cwtl
shlb
jecxz
push
pop
mov
xchg
xchg
cmc
mov
in
sbb
push
icebp
xor
dec
imul
sub
sub
or
arpl
push
notb
xchg
mov
lret
lcall
and
out
or
jle
mov
cmp
mov
scas
fucom
adc
jne
adc
loop
ret
adc
popa
pop
pop
sti
or
imul
pop
push
loop
jne
dec
sub
jl
jge
inc
push
test
inc
jne
push
movsb
jnp
cmp
mov
xor
sbb
jne
mov
inc
sbb
xor
popf
fdivrs
sbb
add
cs
xchg
jecxz
or
vmovss
adc
negl
ficomps
and
dec
jg
adc
test
lret
stos
aas
push
push
sub
loop
push
aaa
sbb
xchg
pop
inc
fdivrl
arpl
push
pushf
into
pop
dec
mov
jnp
pusha
popa
pop
inc
push
mov
das
mov
xor
mov
xor
test
xor
fwait
pop
inc
sub
sbb
xchg
jne
mov
adc
xor
cmp
int3
xchg
cld
out
outsl
mov
cmp
fistl
inc
stos
lea
es
sbb
and
lret
jmp
in
fsubrl
inc
movsb
and
push
jmp
add
mov
sbb
xlat
xchg
mov
movsb
sti
push
das
call
xchg
addr16
inc
and
outsl
es
pushf
stos
enter
sbb
clc
mov
cmp
jae
loope
xor
aaa
mov
int
mov
jg
mov
cmpsl
mov
jbe
into
out
ljmp
xchg
js
sbb
paddsw
push
add
pushf
inc
xor
pusha
mov
stos
js
sub
scas
xchg
sub
cmpsl
mov
adcb
add
iret
pop
popf
push
les
and
mov
fistpl
in
push
push
out
shrb
mov
xchg
cmpsl
cmpsb
rcrb
in
jmp
aaa
test
lds
cmpsb
aad
popf
pop
xchg
cmp
mov
inc
inc
inc
lret
push
mov
push
iret
insb
repz
fisubrl
sahf
in
mov
pop
sbb
jecxz
xor
lock
movsl
fisttpl
sti
insl
test
stc
hlt
xchg
push
out
pop
cmp
test
mov
int
int
sub
inc
xor
faddl
out
inc
xor
jecxz
inc
ja
testl
mov
inc
adc
fwait
or
lock
arpl
mov
loop
or
in
mov
mov
lds
outsl
jecxz
pushf
hlt
mov
jb
mov
inc
xor
leave
cmp
dec
cmp
out
repz
adc
mov
xchg
movsb
in
lret
add
lret
ljmp
lock
testb
pop
jmp
adc
adc
push
pop
imul
lods
push
pop
int
out
test
xchg
xchg
rcrl
push
mov
xlat
cmpsl
xchg
sti
sbb
lods
pop
cmpsl
data16
out
or
lret
xchg
push
pop
or
in
inc
mov
jnp
les
test
and
js
movsb
cmp
xchg
push
lock
adc
cwtl
sahf
shr
js
jno
cs
icebp
adc
dec
xchg
ljmp
xorb
sarb
or
sbb
sbb
popa
scas
gs
dec
mov
sti
daa
aaa
ret
push
fdivl
sub
push
adc
cmp
cmp
div
push
add
pop
divb
lods
jl
wrmsr
push
lret
or
test
aaa
pop
mov
or
ds
lret
adc
inc
test
in
or
imul
jecxz
push
mov
lret
inc
cmp
repz
add
loope
scas
mov
mov
es
mov
fidivrl
mov
ja
scas
je
insb
or
sub
cs
and
xchg
and
cmp
mov
ret
sbb
push
dec
sbb
mov
jmp
in
dec
mov
leave
inc
mov
or
shlb
sahf
lock
lea
xchg
cltd
js
ljmp
inc
cmc
adcb
out
jmp
adc
insb
scas
add
cs
mov
sti
mov
not
lds
xor
loopne
ficoml
and
imul
lret
imul
adc
push
cmp
adc
mov
jl
ficompl
jle
inc
loop
adc
cmp
sbb
stos
je
iret
data16
adc
cmp
jmp
and
mov
mov
inc
pop
fstpt
xchg
inc
jo
test
cld
popf
cwtl
pop
clc
jge
mov
les
mov
xor
mov
adc
jecxz
aad
pop
or
mov
jecxz
inc
sahf
or
mov
push
mov
xorb
jle
test
xor
push
or
imul
test
jp
push
and
xchg
mov
dec
enter
pusha
fistps
mov
fsubrs
sahf
inc
jo
icebp
sti
mov
pushl
pusha
out
leave
popf
add
mov
scas
mov
pop
lret
jne
sti
sub
out
mov
push
sti
mov
or
pop
outsb
sbb
inc
int
aaa
jo
negl
jne
mov
mov
dec
mov
cmpsb
add
push
lcall
xor
roll
pop
jo
mov
bound
aam
ljmp
jo
fcomps
outsb
mov
stc
xchg
mov
fcoms
push
xor
fs
push
jo
ja
xchg
push
mov
scas
cmpsl
inc
inc
fwait
mov
std
call
rcrl
pop
ljmp
push
outsb
push
les
mov
addl
jle
inc
jo
sbb
push
pop
popa
repnz
sub
inc
lret
mov
push
ret
daa
mov
jbe
arpl
lcall
fiadds
dec
call
pop
movsl
dec
out
fisttps
xchg
mov
adc
aaa
mov
and
xchg
daa
mov
loope
test
cli
and
data16
push
pop
push
shll
sbb
mov
cmp
into
push
pop
pop
pop
jecxz
mov
stos
pop
and
pop
xchg
ja
jge
in
push
in
push
cld
mov
pop
lret
add
and
popf
fisttpll
or
and
xor
dec
push
stos
pop
or
xchg
mov
or
push
jecxz
push
movaps
clc
adc
aad
xor
cwtl
jbe
xchg
pushf
pusha
and
mov
push
pop
mov
scas
mov
loope
data16
sar
adc
loope
rorb
in
dec
cmc
inc
add
adc
xor
mov
arpl
insl
fildll
jns
mov
and
xchg
or
mov
movsl
pop
cmp
cmp
xchg
negl
sbb
sub
sub
xchg
mov
hlt
adc
pop
daa
ja
dec
mov
sub
or
push
sbb
inc
mov
ja
or
lret
xchg
aas
dec
xor
loopne
rcrl
in
ljmp
fsub
mov
lret
fidivrl
ficoms
jns
sti
mov
inc
insl
lret
xorps
mov
fwait
adc
mov
in
mov
gs
cmpb
sub
xor
mov
sub
xor
jp
push
mov
mov
in
mov
in
or
xchg
or
out
mov
xor
sub
fistl
aas
and
lods
mov
movsl
or
mov
insl
mov
adc
mov
jmp
xor
out
shrb
and
cmp
fs
xchg
lahf
xchg
in
les
mov
inc
shrb
ljmp
or
mov
or
test
inc
cmp
adc
fdivrl
push
out
add
mov
fs
xchg
jp
sbb
outsb
in
bound
adc
lret
aaa
and
pusha
popf
shrl
daa
push
xor
subb
cmp
test
add
into
sahf
test
sahf
imul
jle
mov
fisubrl
out
jle
test
inc
in
mov
and
mov
jo
sbb
rorl
insb
add
leave
aad
mov
stos
ret
cmpsb
jns
xor
adc
insb
daa
dec
mov
mov
push
push
and
out
xor
mov
rorl
inc
push
mov
jb
and
mov
jmp
filds
hlt
pop
icebp
sahf
addr16
mov
jnp
and
in
into
shl
adc
loope
out
xchg
mov
lds
xchg
mov
sub
pop
lock
lahf
test
and
les
sub
dec
pop
mov
push
lods
pop
flds
dec
pop
sub
enter
fdivp
add
aaa
pop
mov
dec
push
cmp
push
imulb
cltd
popf
jae
div
or
mov
xchg
adc
adcb
call
mov
out
addr16
dec
outsb
cmpsb
push
sbb
mov
aas
pop
aam
ja
inc
subl
sbb
dec
fisubl
sub
ds
jmp
lcall
and
jae
cs
sbb
fwait
inc
dec
rcrb
daa
push
mov
cmp
cmp
ds
insb
or
mov
cmp
cs
xchg
popf
inc
test
dec
push
int3
loope
aam
fwait
scas
sarb
nop
mov
daa
fs
fldl
inc
out
cmpsb
aas
push
pusha
out
test
cmp
fwait
and
fstps
fstpt
std
mov
sub
jnp
addr16
xchg
xchg
and
rorb
jne
adc
pop
xchg
iret
imul
int3
jae
jae
popa
aam
ljmp
mov
lea
jl
out
xor
std
push
test
lds
cmc
push
fsubp
test
push
aas
pop
jmp
in
arpl
insl
popa
cmp
adc
stos
cmp
xchg
sti
cmp
mov
xor
mov
nop
xchg
jb
rorl
mov
mov
sbb
outsb
stc
cltd
imul
pop
hlt
adc
dec
and
ds
inc
lods
int3
or
push
and
add
xchg
add
sbbl
daa
cmp
lahf
fildll
fidivrl
mov
adc
rorl
jne
repnz
arpl
mov
add
jl
mov
inc
pop
cld
enter
xchg
nop
mov
pop
pushfw
movsl
or
dec
stc
mov
not
les
fisubs
into
imul
xchg
mov
mov
dec
or
in
test
scas
dec
push
fildl
sub
aaa
test
cmpsb
enter
movsl
mov
cmpsl
shrl
dec
lahf
adc
scas
jbe
inc
xor
xor
mov
addb
daa
movsl
loop
adc
pop
jp
sbbl
inc
aad
out
inc
and
jns
sbb
lods
xchg
lcall
es
in
mov
pop
push
ret
ret
sbb
fidivrs
inc
add
gs
or
in
lcall
dec
jnp
decb
scas
xchg
add
xchg
cmp
dec
addr16
pop
pushl
xchg
xchg
call
mov
imul
in
dec
xor
test
mov
fs
data16
sarl
xor
jge
insb
mov
outsb
xchg
test
stos
push
rolb
sub
ljmp
sbb
mov
or
pop
pop
sub
js
add
loopne
pop
aaa
shr
xchg
and
mov
push
dec
jg
sub
inc
cmp
ljmp
shll
push
insb
je
inc
pop
jae
es
mov
leave
mov
fsubrs
or
push
test
cli
imul
movsl
shlb
sbb
js
jo
icebp
insb
add
cmp
sbb
fucomip
xorl
jmp
lods
shrl
fsubl
lods
add
scas
stos
es
test
cmp
gs
fisttps
fnstcw
ds
aaa
lret
xor
divb
pop
popa
mov
daa
aas
mov
enter
mov
inc
mov
push
and
push
out
fs
inc
or
add
idivl
rcr
xchg
rcl
mov
cmp
and
xchg
in
testl
inc
pusha
adc
andb
cli
pop
sub
or
push
in
das
inc
test
mov
fistpl
pop
test
aad
cmpsl
xchg
mov
mov
hlt
mov
jle
mov
inc
std
fcomi
daa
fs
xchg
loopne
mov
lret
xor
movsl
ret
push
jg
lods
lahf
inc
fidivrs
lods
pop
push
pop
mov
in
cmp
out
clc
dec
mov
std
cmpsb
lock
rcll
pop
xchg
mov
adcb
or
js
jae
push
adc
pop
sub
scas
mov
xchg
and
push
imul
repnz
ret
jecxz
jo
add
jl
sbb
out
jne
push
pop
and
sbbb
jns
xchg
xchg
jne
and
cmp
jge
jns
adc
jne
lods
test
pop
cmpsl
push
inc
js
pop
pop
pop
lahf
mov
lock
inc
lds
and
inc
adc
stc
push
sbb
outsl
das
insb
outsl
push
adc
aam
jg
outsb
pushf
push
xchg
stos
dec
insb
xor
call
loope
add
mov
bound
in
negl
aaa
std
mov
xchg
push
mov
push
jae
out
testb
inc
jecxz
mov
mulb
in
pop
jg
xchg
pop
in
and
vmovsd
std
sbb
pop
adc
ret
xor
adc
mov
push
inc
cs
pop
test
xor
pop
aaa
jns
daa
push
mov
rol
mov
jnp
mov
fiadds
outsl
push
loope
mov
mov
push
les
sbb
in
dec
mov
and
std
cmp
repz
dec
jle
dec
test
xor
aas
call
subl
sbb
mov
mov
mov
jmp
mov
and
test
repnz
cmp
stc
inc
mov
cmpsb
jg
jle
mov
inc
iret
clc
xor
mov
and
jns
das
fistl
lahf
inc
dec
dec
scas
push
push
call
ja
nop
mov
cmp
sbb
mov
fs
gs
xchg
sbb
mov
or
fldenv
das
shlb
in
or
out
mov
jo
fwait
mov
push
gs
iret
mov
movsl
cmp
out
in
pop
inc
mov
jo
xor
iret
imul
test
xor
iret
pop
pop
mov
mov
inc
hlt
insb
ret
int3
iret
inc
jmp
push
jp
xorb
dec
pop
insl
aad
out
shll
shll
lea
in
or
pop
mov
lods
je
rorb
xor
aad
and
or
push
push
mov
mov
outsl
or
push
and
aas
ds
add
sbb
addr16
lret
test
jmp
mov
cmp
insb
mov
mov
xor
imul
or
aas
adc
pop
mov
leave
sahf
out
cmpsb
call
inc
add
add
sub
lcall
sarl
sahf
and
push
inc
std
cld
mov
lock
inc
cmp
sbb
add
push
mov
cld
push
jmp
xor
popa
int
out
je
cs
in
push
mov
in
adc
out
and
mov
mov
out
dec
sub
lock
outsl
in
and
outsl
xchg
test
xchg
imull
lahf
pushf
lcall
adc
jno
cmp
andl
inc
pushf
in
pop
jns
xlat
rorl
inc
popf
testl
or
insb
mov
mov
dec
xlat
mov
cwtl
gs
subb
mov
rep
jae
dec
ljmp
sub
mov
cmpsl
roll
cld
rclb
ficompl
daa
rorl
test
push
shrl
into
lea
mov
lahf
cmp
divb
jo
xchg
fmull
jb
inc
mov
stos
scas
xchg
or
sarl
mov
dec
lock
test
pop
imul
mov
pop
xor
mov
sbb
mov
in
lods
push
aam
add
rcr
or
or
push
jp
push
mov
xor
clc
lret
xor
mov
mov
in
mov
inc
insl
das
sub
movsl
das
and
dec
aad
icebp
xchg
jno
movsl
iret
mov
push
xchg
jae,pt
dec
test
cmp
mov
pop
inc
imul
sbb
imul
cmp
push
push
in
or
add
lcall
push
pop
clc
ret
bound
int
lcall
sbb
cmc
sbb
add
aad
jmp
mov
cwtl
and
clc
psubq
mov
sub
inc
lcall
sbb
out
testb
pop
add
lcall
loope
js
shll
imul
push
fstpt
js
mov
adc
enter
push
push
inc
aaa
sub
xor
pushf
movsb
sahf
mov
mov
sarl
ficompl
lea
out
dec
xchg
sbb
loop
xor
sbb
jle
xchg
dec
jl
int3
fs
jg
lcall
jg
ret
jl
add
subb
movsb
dec
lret
fisttps
dec
rclb
cmp
mov
hlt
push
icebp
orb
flds
xchg
lcall
or
ficoml
repz
sbb
pop
lea
cmp
sbb
daa
popf
pop
xor
xor
sub
mov
dec
xor
dec
and
push
pop
pop
lahf
loope
jns
sub
pop
push
push
in
sahf
shl
mov
mov
ljmp
or
add
int
cmc
or
jae
dec
add
inc
adc
scas
push
pop
xor
stos
push
movsl
dec
mov
push
cmp
inc
inc
stos
add
ret
or
into
jbe
scas
sbbl
inc
cmp
mov
fdivs
push
pusha
pop
and
sub
call
cmp
add
mov
jecxz
or
cs
arpl
jp
leave
jl
push
and
pop
dec
lcall
jecxz
and
mov
dec
mov
pop
ret
jb
dec
mov
pxor
int
xchg
dec
inc
and
add
sbb
mov
ret
inc
push
imul
inc
xor
pushf
or
ret
mov
sub
test
bnd
xchg
pop
mov
pop
jb
adc
or
sub
ja
mov
test
jb
cmc
cmp
fucomp
outsb
pop
pop
pop
cmp
and
sbb
stos
pusha
push
cmp
mov
mov
xchg
das
jo
ds
popa
repnz
test
cmp
scas
xor
mov
out
out
jne
mov
rcrl
scas
negb
dec
mov
out
pop
sub
adc
popl
or
in
sbb
push
in
or
or
stos
mov
sub
stc
jb
les
es
jo
cmpsb
cmp
out
sbbl
sbb
jo
mov
push
jecxz
sbb
cmpsl
popa
mov
mov
sub
sub
lods
cmp
int3
imul
out
pop
or
dec
divb
call
push
xchg
push
or
shl
inc
xchg
sahf
lods
popf
adc
xorl
movsl
and
nop
or
addr16
in
mov
loope
mov
sahf
jmp
mov
jne
cmp
clc
jl
lock
xchg
std
in
clc
lea
mov
or
mov
and
push
cmp
data16
pop
sti
out
call
sub
loope
in
mov
xor
push
pop
out
inc
repnz
xor
jecxz
sbb
xorl
push
cmpsb
test
in
sbbl
negb
add
mov
mov
ret
movsb
icebp
call
ds
cmp
pop
loope
fldt
xchg
lods
jge
movsl
mov
pop
cmp
in
xchg
cmp
add
iret
xor
test
insb
fbstp
cld
mov
pushf
aaa
lret
dec
pop
loop
sahf
idiv
cmp
mov
cmp
mov
or
and
lods
pop
fimuls
sub
inc
sarl
adcl
hlt
inc
xchg
pop
push
add
xor
hlt
mov
pusha
fidivrs
ljmp
out
add
dec
mov
sub
roll
pop
and
add
in
xor
std
icebp
inc
dec
cli
jb
jb
sub
adc
loope
std
popa
and
stos
push
js
popa
cli
cmc
or
mov
daa
mov
iret
fcoml
pusha
xchg
dec
or
sbb
popl
std
andl
push
sbb
cltd
dec
subb
je
or
push
sti
dec
scas
rclb
add
add
mov
or
icebp
pushf
shrb
add
es
fsubr
xor
or
cmc
adc
cmp
ficoml
out
mov
add
mov
cltd
dec
movsb
fmull
call
push
mov
mov
sub
jecxz
insl
mov
out
scas
jbe
push
xlat
or
lods
pusha
sub
dec
add
push
scas
adcb
stos
js
pop
push
cmpsb
pop
aam
xchg
ret
xchg
arpl
je
push
sbb
sbb
or
arpl
push
scas
push
vshufps
mov
xchg
cmc
push
fdivs
add
int3
pop
mov
insl
insl
push
int
int
arpl
fwait
std
add
xchg
out
fsubr
dec
dec
ret
xor
shr
cmp
scas
ret
dec
push
push
lcall
aaa
mov
clc
xchg
mov
insb
loopne
imull
scas
push
dec
lea
sub
cmpsb
mov
jno
jbe
int
in
mov
mov
sub
pop
mov
lds
repnz
daa
fstl
mov
cs
jl
mov
out
mov
sbb
fimull
mov
jbe
xchg
and
ss
hlt
sub
pop
jne
cmp
pop
dec
mov
xchg
lahf
and
mov
adc
enter
and
or
orl
dec
or
sahf
test
mov
adc
data16
icebp
pcmpeqd
lea
nop
divl
mov
mov
cmp
stc
je
cmpsb
lods
mov
mov
mov
pop
pushf
push
and
daa
stos
push
inc
bswap
mov
lock
cmp
push
cmp
inc
std
jg
jns
cmc
in
lahf
call
mov
outsl
into
xchg
add
outsl
stos
test
mov
ljmp
push
arpl
insb
xchg
xor
les
adc
stos
shll
mov
cwtl
jecxz
rcl
je
sub
psrlq
ret
mov
jecxz
fdivrl
rcrl
dec
mov
jns
xchg
shrb
inc
xchg
bound
xor
stos
outsl
lods
sub
test
mov
pop
adc
mov
cmp
jne
or
pop
hlt
out
pop
jg
shlb
test
stos
loopne
mov
push
out
jb
fsts
mov
aad
jge
sbb
js
mov
jno
adc
xchg
movsl
jmp
jmp
inc
stc
inc
cmp
dec
lods
mov
cmp
mov
ret
rcrb
mov
xor
in
sahf
mov
std
sahf
popf
jle
mov
daa
nop
das
mov
inc
inc
cld
inc
xor
xor
js
mov
fistps
jno
pushf
stc
or
pop
pop
in
xchg
push
int
and
xor
sub
dec
inc
daa
hlt
jnp
or
fsubs
push
repnz
jb
pushf
jmp
dec
pop
sbb
jg
and
in
aas
jne
cmp
cmp
es
sbb
push
icebp
decl
popf
test
jne
aaa
enter
inc
sub
shrl
adc
xchg
aad
je
push
push
or
lret
mov
sub
daa
or
rorl
jb
test
test
mov
dec
mov
movsb
call
imul
mov
cld
sub
push
mov
jo
push
mov
add
xlat
fwait
outsl
cmpsb
popa
cmp
jecxz
scas
pusha
lcall
xchg
outsb
inc
cmp
cmp
jg
and
add
fisubrs
sub
sub
jecxz
xchg
ds
sub
jle
sub
mov
aad
aad
stc
insb
inc
xor
ret
push
xor
es
adc
pop
mov
cld
fisttpl
rorb
and
xor
out
cltd
cmp
fmulp
cld
in
xchg
adcl
lods
aad
xor
jp
push
dec
cmpsl
xchg
and
movsl
orb
scas
xchg
test
add
xchg
add
lahf
cmp
sub
loop
cmc
jnp
add
cmpsb
xor
ss
lods
in
leave
pop
fisttpll
xchg
xchg
pop
nop
or
out
aad
lds
pop
xorl
mov
and
lahf
iret
daa
mov
sub
add
out
rorb
inc
pop
popl
push
lds
jb
daa
std
xchg
cltd
loope
mov
aas
inc
rcl
scas
jb
movb
cs
ss
cmp
inc
mov
cmp
sarl
lods
js
lahf
add
push
push
mov
jp
aam
mov
xor
aas
out
or
mov
mov
dec
ljmp
mov
push
and
pop
cmp
sbb
add
push
push
lret
mov
cmp
jge
jne
mov
dec
lret
inc
cmp
das
test
pop
ss
push
fisttpll
arpl
push
out
lods
mov
stos
rolb
or
xor
push
add
dec
out
sbb
stos
call
jge
xchg
inc
xchg
lods
imul
cli
cld
push
mov
sbb
lcall
or
adc
and
lahf
mov
lock
lret
xor
imul
mov
js
imul
sahf
sub
es
dec
insl
rcr
cmp
arpl
sub
ret
test
mov
and
mov
or
popf
mov
pop
push
in
mov
ss
sbb
aas
mov
pushw
sarb
mov
out
xchg
jmp
aad
std
outsb
adc
sti
cli
aaa
pop
rcll
sbb
xor
test
js
in
add
lock
ss
mov
and
fimull
push
pushf
xor
or
dec
divb
cld
cmpsb
sahf
xor
sbb
and
pop
and
xchg
insb
iret
hlt
sbbb
les
lock
not
lea
or
cmc
stos
mov
into
repnz
or
pop
inc
arpl
mov
movl
cmp
data16
jns
sub
loopne
or
outsl
xchg
in
leave
stc
push
cmp
mov
or
leave
cmpl
and
jmp
sub
outsb
pop
ljmp
dec
mov
stc
mov
stc
lahf
pop
popa
lcall
jno
outsl
mov
movsb
stos
call
mov
sub
fistpll
jmp
mov
out
pop
inc
push
loope
push
int3
lods
movaps
mov
pop
xchg
sub
or
sbb
out
xchg
pop
loopne
xlat
das
add
aam
mov
jg
sub
stc
ss
adc
mov
aaa
lea
cld
cmp
test
inc
out
repnz
adc
cmpl
xor
cmp
xchg
adc
cltd
repz
sbb
clc
cmp
cmp
pop
notl
pop
bound
loopne
pusha
xchg
or
xor
and
jno
test
sbbl
call
xchg
push
jo
ficompl
pop
data16
icebp
dec
loopne
mov
push
out
jbe
xor
mov
jmp
or
add
fimull
jae
jne
push
in
cmp
xchg
les
in
mov
mov
xchg
loop
push
adc
cmp
cmp
fisubs
aaa
out
sub
lds
loope
mov
adc
pushl
fmull
cmp
es
vmovupd
out
inc
int
ret
scas
leave
jecxz
icebp
lret
cmp
sub
sub
pop
xchg
loope
lods
inc
adc
adc
dec
shlb
pop
cmp
idivl
rcrb
dec
jo
jnp
cwtl
sub
and
mov
or
add
jns
or
fmuls
bound
fstpt
into
or
cmpsl
sarl
jmp
jbe
int
bound
scas
stos
sbb
xor
and
and
rolb
lahf
lods
push
iret
sbb
pop
xchg
or
inc
icebp
cmpsb
das
and
add
leave
aaa
push
push
clc
jns
inc
enter
inc
lea
pop
clc
fmull
xor
dec
js
or
adc
lods
or
adc
sub
lods
cmp
imul
shll
push
push
js
dec
push
in
sbb
stc
jbe
data16
sarb
mov
dec
jl
loop
xor
cmp
dec
cmp
push
vpsubq
inc
adc
fdivl
and
push
ss
gs
int
jl
aas
mov
out
mov
jmp
lock
add
adc
leave
pushf
cmp
dec
xchg
jmp
fs
xor
enter
adc
mov
jne
ficoml
sub
subb
mov
filds
aad
inc
cmp
jae
into
addb
mov
rolb
into
mov
out
pop
push
or
out
stc
sar
and
dec
push
add
dec
fbld
jae
xor
and
and
insl
adc
stos
cmp
aas
cs
pop
bound
push
push
sub
pop
pop
fadds
mov
jne
ja
dec
adc
pop
sub
push
jl
repnz
in
push
dec
inc
in
lock
out
shl
stos
fdivrs
mov
jbe
inc
cli
negl
test
rcll
mov
shrd
negb
pop
xchg
sub
push
sbb
sub
ds
mov
je
popf
sbb
fdivrl
mov
xor
into
push
jb
sbb
pop
addr16
inc
inc
jle
iret
or
incl
movsl
adc
insl
popf
scas
in
adc
mov
data16
stc
loopne
out
push
ret
iret
outsb
add
pop
inc
sub
xor
push
inc
sub
sbb
dec
movsb
and
add
sahf
das
push
mov
ss
push
rcrl
mov
dec
xchg
cmp
inc
sbb
xchg
jb
dec
pop
incb
sub
and
xlat
mov
push
outsl
rcrb
faddl
loopne
jno
iret
bound
mov
sbb
fs
dec
jp
mov
insb
cvtps2pi
push
repz
mov
shrl
in
add
cmpsl
sub
add
dec
test
push
pop
sbb
mov
ljmp
ljmp
imul
dec
ja
cmc
xor
mov
add
sarb
inc
mov
or
xorl
shl
mov
scas
test
add
into
add
shll
sbb
dec
lods
adc
pop
fstpt
lock
outsl
loopne
jecxz
testl
mov
ret
cmp
imul
out
outsl
mov
xchg
inc
cmp
inc
roll
and
mov
inc
in
xchg
pop
ja
cs
and
shrl
xor
jnp
inc
repnz
mov
insl
insb
out
lods
dec
xchg
adc
aaa
jge
mov
fnsave
cld
shlb
pop
cmp
inc
push
adc
cmpsb
fwait
xor
and
jne
mov
insl
cmp
dec
sbb
mov
add
inc
mov
xor
cmpsb
dec
pop
leave
jne
jge
int3
pushf
sub
sarb
call
ja
xchg
outsl
in
imul
gs
mov
mov
mov
in
mov
dec
xchg
out
dec
push
or
pop
jnp
sub
mov
leave
pop
inc
enter
das
pop
mov
xor
je
push
jmp
push
cmpsb
addr16
rclb
ss
or
int
sti
lcall
jle
test
jle
jno
inc
sarb
int3
xor
xorl
test
repnz
mov
inc
xor
lcall
push
xchg
sub
pusha
mov
mov
jmp
imul
ret
mov
jl
push
lret
sub
lret
lds
mov
cmp
or
loopne
popf
arpl
enter
fwait
xchg
jo
jmp
xor
lds
dec
fdiv
in
sbb
arpl
sbb
and
push
add
pop
push
or
popf
fstps
fdivrl
sarl
stc
fstpt
jbe
push
inc
test
scas
sahf
outsl
mov
scas
iret
cmpl
push
push
push
out
push
or
das
jo
popf
sub
dec
sub
cmc
rcrb
mov
adc
xlat
xlat
into
sti
sti
popa
rcrb
and
bound
scas
jg
mov
inc
pusha
adcb
and
cltd
pushf
sti
xchg
xchg
inc
fidivrs
hlt
mov
inc
lea
or
jns
in
push
lods
test
int
fs
push
popf
mov
das
or
and
dec
subb
fwait
sbb
mov
popl
push
ds
jge
dec
cmpl
cmpsb
cld
call
inc
les
jge
pop
ljmp
pop
lcall
push
cwtl
or
das
test
push
add
xor
or
loope
decl
mov
xor
bound
sub
loopne
xchg
or
out
aad
mov
inc
fcomps
pop
sub
lods
jns
mov
sbb
insb
rorl
repnz
je
je
addr16
int
push
lcall
mov
xor
in
sub
das
mov
cmp
repz
dec
cmp
int3
mov
push
dec
pop
xor
jmp
shrb
sbb
aaa
dec
cmp
push
push
mov
pop
dec
out
mov
fwait
push
xor
adc
ficomps
das
pop
ret
data16
xor
mov
jle
adc
cli
inc
fwait
movsl
stc
lahf
cmp
pop
mov
push
mov
les
jle
push
cmp
test
nop
pop
adc
dec
fisttpll
clc
sub
mov
dec
mov
inc
ds
lret
sbb
sbb
mov
push
jl
popa
fwait
adc
ret
arpl
dec
mov
cmpsl
push
push
mov
jae
mov
orb
and
pop
jl
popf
ret
and
add
add
rorb
mov
mov
pop
stos
or
inc
sub
push
adcl
sbb
pop
lret
mov
js
test
imul
int
add
mov
cmp
fwait
cltd
leave
iret
push
icebp
popa
orl
in
adc
pop
sarl
inc
dec
cmpsb
fistpl
enter
add
in
dec
push
or
into
xchg
xchg
pop
loope
pop
out
jecxz
bound
sbb
gs
icebp
or
xor
dec
icebp
rcrb
in
sub
repnz
mov
sbb
gs
add
in
jb
or
mov
push
call
sub
and
cmp
out
nop
add
inc
xlat
pop
push
sub
stc
pop
ds
mov
mov
ret
sbb
xchg
jmp
out
lds
aaa
cmpl
repz
arpl
ss
jge
add
popf
pushf
jg
cmpsl
and
pop
inc
or
outsb
mull
in
cmp
jns
cmp
push
push
loopne
adc
xchg
pop
push
lret
inc
or
sub
out
and
scas
pop
and
std
dec
iret
cmc
mov
scas
cld
js
out
add
pop
stos
jo
sbb
or
xor
lcall
rcrl
test
add
lret
lret
xor
mov
leave
enter
lods
mov
subl
or
xchg
loopne
sbb
adc
and
insb
inc
outsb
mov
scas
stos
into
push
jp
inc
mov
xor
push
loop
pop
js
out
repz
arpl
push
dec
fnstcw
stc
arpl
int
mov
int3
adc
push
dec
sub
in
add
sbb
inc
loop
icebp
scas
pop
xchg
into
sbb
fwait
daa
or
das
cld
push
cmpsl
mov
mov
call
pop
paddusb
cltd
or
fisttps
sahf
fwait
mov
xchg
xchg
dec
mov
roll
sub
jbe
dec
adc
jge
push
in
jmp
mov
cltd
mov
and
sbb
arpl
nop
inc
push
shrb
cmp
mov
or
into
mov
xor
out
addr16
test
lret
push
add
inc
icebp
imull
xchg
xchg
lock
aas
cli
inc
mull
nopl
test
cltd
mov
xchg
jge
xorl
inc
add
dec
push
popf
cmp
aad
enter
inc
inc
mov
js
sbb
bnd
push
jo
mov
adc
nop
mov
sbb
fwait
in
pop
inc
pop
iret
hlt
mov
push
aam
push
push
iret
xchg
vmwrite
push
push
jmp
rcrl
inc
popf
xor
pop
jne
mov
jno
push
shlb
and
ret
xchg
push
dec
pop
enter
pop
sub
scas
push
add
inc
je
jne
pop
jae
mov
ds
ljmp
mov
into
pop
addr16
imul
mov
les
aam
adcb
fs
pop
fcoml
mov
scas
aam
jge
pop
outsl
jg
ss
out
negl
out
xchg
mov
xchg
adc
iret
jecxz
jge
les
aam
fsubl
ljmp
and
shll
jnp
mov
add
cmpsl
pop
push
pop
pmulhuw
xor
aam
jb
aaa
int
clc
fsubrs
and
stc
ret
sbb
cwtl
mov
je
cmp
fnsave
arpl
mov
pop
shrl
and
in
add
js
lahf
shll
xchg
sbb
mov
adc
aaa
mov
mov
cmp
cmpsl
arpl
orb
mov
cmp
lds
notl
cmp
mov
push
and
ret
add
cmp
and
mov
adc
cmc
jo
inc
repz
mov
dec
je
xchg
jecxz
stc
jbe
jl
pop
add
out
aas
sbbl
jle,pn
xor
add
add
push
jbe
pop
cli
fs
inc
push
lcall
cld
or
out
jae
xchg
gs
jg
iret
and
cmp
adc
cmp
add
lods
insl
add
pop
mov
sbb
das
jecxz
mov
mov
pop
aad
arpl
xchg
test
dec
fcompl
loopne
nop
ret
lcall
mov
mov
dec
shlb
push
or
xor
pop
int3
pop
test
add
sbb
push
outsb
mov
mov
pusha
sbb
lods
dec
repz
cmp
pop
idivl
enter
cmpsl
pop
xchg
ror
inc
mov
ljmp
inc
sub
cltd
in
inc
fwait
int3
cmp
shlb
mov
in
lahf
mov
ja
cmp
inc
sti
push
cmc
and
dec
jmp
es
pop
in
into
lods
pop
or
ret
out
cli
cld
sub
loope
aad
cltd
test
cmc
xlat
ret
aam
cs
dec
mov
mov
fwait
ljmp
divb
inc
sbb
test
and
adc
push
aam
jle
in
ljmp
jbe
and
lods
mov
dec
cmp
push
push
xchg
fiaddl
adc
into
cmp
shrb
lret
mov
xor
jle
lret
mov
mov
pop
subl
cmp
cltd
rcrb
pusha
lahf
ret
cmp
adc
sub
fisttps
push
lahf
push
sbb
sub
jns
loop
sub
push
dec
sbb
and
cmp
negl
pop
mov
push
je
xor
xor
daa
cs
xchg
cmp
mulb
jae
rcrl
and
inc
inc
jo
sbb
sub
sbb
pop
add
sahf
cmp
push
jecxz
clc
sbb
push
pop
jno
stc
repz
xor
sar
dec
mov
fstps
scas
pop
xor
sarb
adcb
push
scas
push
mov
mulb
cs
push
loop
dec
adc
dec
push
jecxz
scas
add
test
mov
es
cwtl
mov
pop
pop
cmp
inc
das
aad
push
fidivrs
xor
jle
sub
push
shrb
xor
out
fstl
add
lods
add
add
or
or
jmp
movsb
sbb
sbb
shlb
imul
jb
outsl
push
cmp
adc
sub
cltd
push
dec
or
mov
sub
push
cmpsb
repnz
call
lret
jmp
fdivs
cmp
jp
pushf
fwait
dec
stos
out
xor
sbb
jl
call
pop
fdivrl
test
shr
je
addl
in
icebp
adc
pop
aam
dec
punpckldq
xchg
hlt
or
mov
adc
inc
mov
ret
inc
inc
testl
movsb
fcompl
xor
push
fisttps
xlat
xor
jnp
sbb
test
dec
and
sbb
cmp
inc
dec
xchg
cld
pop
out
sub
insb
dec
test
xchg
xlat
jmp
sahf
fisubrs
sub
xor
sti
cmp
aad
jno
lods
xor
mov
sbb
jle
call
pop
pop
jo
addr16
js
pop
pop
inc
xchg
jb
push
or
jnp
mov
sub
sti
das
push
rorb
std
mov
lods
mov
icebp
jns
leave
cmp
jne
add
stos
jge
pop
push
sbb
sbb
cmp
pusha
mov
rcrl
pop
ja
inc
and
adc
and
scas
pop
out
cmp
mov
push
sbb
mov
push
sub
popf
scas
push
lods
jp
jp
js
or
ja
xor
mov
cmp
inc
aaa
push
adc
das
out
push
dec
rcrb
pop
jl
aaa
inc
cmp
lahf
xchg
jae
inc
xchg
push
cmpsb
push
sbb
idivb
pop
fiadds
xchg
and
push
push
mov
sahf
inc
pop
repnz
lds
xchg
jo
mov
push
and
xorb
ss
in
jbe
xchg
push
push
test
aas
arpl
sub
inc
cmp
mov
push
mov
fisttps
push
out
addb
lods
or
repnz
and
cmc
mov
push
xlat
inc
rcrb
add
hlt
mov
popa
adc
add
ret
add
mov
sbb
push
mov
mov
add
clc
cltd
je
es
jecxz
idivb
shl
mov
stos
jle
jb
lock
dec
jp
std
lahf
fmuls
jns
sahf
cltd
adc
mov
or
arpl
jecxz
sub
scas
push
js
jl
aam
dec
and
addr16
xlat
lods
pusha
outsl
sarl
add
lretw
leave
xchg
orl
sub
mov
hlt
add
xchg
cmpb
xor
lcall
rcrb
jae
js
repnz
hlt
fadd
lods
lea
mov
cmp
out
sbb
popa
lds
sbbb
stos
notl
aaa
jle
sub
fisttpll
push
inc
or
xor
cmc
mov
lods
nop
cmp
les
faddl
sbb
popa
mov
cmpsl
lods
test
testl
lea
pusha
test
xchg
sbb
push
js
dec
fildll
xor
xor
sbb
daa
clc
popf
cmp
xlat
es
es
ret
movsb
dec
roll
push
sbb
mov
iret
dec
ss
mov
or
popl
int
stos
push
adc
outsl
stos
mov
lea
je
jbe
jae
push
repnz
and
pop
push
push
push
pop
or
xlat
test
fs
shll
adc
mov
ljmp
cmpsl
ds
arpl
es
mov
je
js
addr16
scas
jnp
enter
xchg
test
test
mov
test
mov
arpl
jb
fdivrs
aas
imulb
insb
icebp
xchg
cmpsb
sbb
lods
sbb
push
adc
in
sarb
push
dec
sbbl
pop
ficompl
and
scas
cmp
xchg
pop
and
dec
pop
mul
popf
pusha
sub
jb
xchg
jecxz
nopl
dec
mov
push
loope
jge
outsb
out
pop
mov
add
sbb
stc
or
lahf
xor
adc
mov
imull
or
push
into
rorb
pop
jmp
in
xchg
out
cli
mov
filds
and
push
cmp
and
dec
push
mov
xorl
lods
mov
test
lcall
and
sub
pushf
xchg
fidivrl
mov
dec
in
jae
jl
sahf
sti
fwait
call
dec
arpl
gs
mov
fcom
andl
cmpsb
lahf
cmp
sub
mov
idivl
neg
js
pop
or
mov
xor
xor
imul
jecxz
stos
and
mov
push
loope
je
cltd
psrlw
xlat
add
shll
sahf
sahf
lret
jge
or
addr16
loope
insl
fmull
sub
shll
fwait
inc
cmp
aas
add
inc
es
out
insl
xchg
xchg
es
add
lods
inc
lret
movsb
aam
ss
sbb
mov
sbb
out
or
jb
shrl
imul
popl
pop
adc
mov
mov
faddl
rorl
mov
ret
sbb
jge
lods
ror
lods
mov
gs
sub
les
adc
mov
inc
dec
test
lcall
pop
cs
or
dec
xlat
pusha
jp
push
cmpb
mov
and
xchg
lret
in
into
in
or
inc
sub
sbb
mov
inc
call
std
mov
cmp
and
mov
xor
jle
loope
or
or
data16
aam
std
cld
jo
imul
idivb
cmp
leave
push
mov
lahf
mov
aam
divl
jl
into
stc
jmp
jae
outsb
out
cmc
cmp
adc
mov
aas
stc
test
aas
inc
push
es
test
pushf
xchg
lock
mov
fucom
sbb
je
push
test
push
aam
mov
mov
sub
jno
inc
repz
push
pop
out
insl
cmp
arpl
loop
in
mov
clc
pop
std
testb
or
repnz
xchg
sub
push
cltd
jnp
lock
fnstcw
push
lret
mov
arpl
enter
mov
enter
jle
lret
sub
sti
push
sar
adc
and
shrb
sub
lahf
cwtl
inc
stos
ja
sbb
shlb
jmp
xchg
cwtl
add
clc
jl
xchg
adc
jbe
push
xchg
mov
mov
out
ja
movsb
ds
pop
and
pop
gs
leave
ss
js
fisubrl
lret
in
lods
daa
daa
cld
aaa
xchg
xor
adc
pop
mov
mov
outsb
test
mov
testb
pop
pop
mov
outsb
xlat
repz
cmp
sahf
icebp
leave
js
sub
cmp
rclb
mov
insb
mov
imul
sti
mov
mov
shrl
sub
sbb
sbb
sti
sub
div
mov
jno
fnstenv
mov
cmp
pop
mov
pop
jp
dec
aad
jp
fstps
lock
bound
jno
movsb
push
and
pop
jbe
cmp
push
pop
pop
jbe
mov
lock
cltd
push
sub
mov
daa
imul
adc
test
cmp
faddp
xchg
in
fxtract
mov
xor
push
jbe
test
popa
jle
mov
in
and
fldt
pop
rcr
pop
je
ds
stc
aaa
mov
lods
lds
push
dec
outsb
adc
add
mov
sub
fsubrs
push
mov
hlt
hlt
xchg
ja
mov
lods
xorb
pop
xchg
loope
aam
xorb
mov
aad
sahf
lret
sub
and
xchg
sub
cli
aad
test
ficoml
push
sbb
out
push
mulb
or
mov
dec
cmp
push
sub
cld
mov
out
faddl
sub
xor
pop
test
lcall
or
movl
jge
cs
addr16
je
mov
in
push
jnp
cmp
in
add
rol
in
fimuls
jmp
cmp
outsl
add
subl
cmp
icebp
lds
nop
push
inc
xor
mov
add
push
and
jae
mov
nop
adc
mov
mov
jle
stos
scas
xchg
ficoml
andl
sbb
rcll
scas
and
scas
testl
repnz
out
lods
js
popa
lods
decl
add
or
aaa
lea
sub
pop
sub
cmp
mov
out
in
stos
adcl
mov
fbstp
popa
in
cmc
addb
adc
shl
fldcw
dec
and
and
lret
cs
xchg
mov
push
xchg
dec
xchg
clc
sbb
inc
popa
mov
add
adc
loopne
pop
jb
ret
pop
inc
stos
pop
push
push
lret
mov
xor
cmp
repnz
push
out
push
pop
inc
jae
add
dec
and
lahf
and
aaa
dec
call
mov
pop
scas
dec
pop
jl
and
and
sar
imull
test
push
pop
push
sbb
dec
sub
sti
outsb
xor
sub
dec
pusha
inc
ljmp
nop
sub
arpl
cmp
mov
popa
sub
add
inc
stos
fisttpll
gs
add
add
das
pop
push
nop
cli
daa
xchg
inc
mov
icebp
mov
mov
idiv
sub
push
les
jbe
pop
sub
mull
jbe
xor
pop
sub
jmp
cmp
into
push
test
xchg
in
cmp
mov
jnp
jmp
dec
loop
ficompl
mov
std
lods
in
or
inc
cltd
jno
jle
xchg
in
daa
jb
xchg
or
cmc
sub
cmc
dec
jge
scas
lock
xchg
ljmp
jbe
pop
movsb
ds
inc
xor
push
std
cs
pusha
jne
stos
clc
loopne
testl
xchg
call
add
aam
xorl
jnp
push
sbb
mov
enter
fists
and
adc
pop
inc
jno
test
push
xchg
add
mov
int3
inc
shlb
cmp
mov
icebp
xor
lcall
outsb
repnz
and
pop
xrelease
repnz
xchg
or
insb
aaa
repz
je
add
push
ret
out
sub
or
nop
push
aas
cs
pop
jmp
aam
iret
cli
mov
pop
test
mov
repnz
outsl
nop
mov
sbb
inc
fimuls
pop
or
stos
push
insb
or
cmp
rcr
dec
pop
mov
loop
lds
dec
fadds
and
mov
cmpsl
in
jae
dec
jg
pop
add
push
into
fdivrl
imul
loope
fwait
fs
imul
dec
cmc
lods
mov
pop
in
or
cmc
jp
xor
loopne
jge
push
sub
ljmp
mov
shlb
std
dec
jns
mov
mov
adc
dec
fsubrl
fnstcw
popf
cmp
sub
ss
xor
sbb
inc
xchg
mov
cmp
sub
xor
mov
mov
loope
test
psrlw
das
inc
fimull
std
ret
pop
cs
and
add
mov
jmp
sbbb
pop
xchg
adc
sahf
fwait
into
hlt
mov
shlb
aam
jbe
pusha
cmp
out
js
jl
adc
jmp
dec
sub
mov
mov
xor
xor
and
xor
popa
jecxz
in
add
mov
imul
or
push
sub
les
xor
mov
dec
icebp
int
sbb
leave
filds
neg
or
mov
jg
xchg
add
xor
jp
shl
adc
cmp
shl
mov
add
movsl
outsb
lock
leave
pop
lcall
lea
push
pop
and
and
and
lcall
add
das
sbb
pop
leave
jne
jl
ljmp
jb
xor
inc
bound
mov
rcl
dec
les
ret
mov
pop
pop
jge
adc
aaa
and
imul
js
in
push
or
sbb
or
xor
adc
lret
mov
lcall
mov
push
scas
stc
pop
cmp
xor
and
rcrl
cmpsb
sarb
cmpb
xor
mov
ficompl
and
inc
in
cmp
aaa
arpl
push
cmp
xor
push
lods
div
testb
outsl
outsb
sub
cmp
push
adc
pop
sbb
inc
inc
push
bound
sbb
icebp
dec
push
test
imulb
lods
jae
lods
dec
push
cs
adc
icebp
ret
pop
mov
xor
aaa
das
jb
mov
or
ja
test
jle
jae
dec
mov
shrb
pushl
in
pop
pop
xchg
pop
subl
inc
mov
movsl
nop
in
fdivrl
jno
mov
fstp
push
mov
shlb
loope
mov
sbb
aad
out
xor
outsb
cmp
dec
cmpb
sub
leave
sbb
shlb
gs
lahf
lea
ljmp
rcrb
add
adc
arpl
mov
push
add
xchg
push
mov
and
scas
faddl
pushl
orl
dec
je
mov
popa
push
mov
sub
sar
repnz
push
cwtl
int3
bound
daa
cmp
movsb
dec
aad
jnp
inc
ljmp
or
mov
xchg
push
inc
andl
int
jmp
mov
or
std
sbb
lcall
and
jns
push
ds
adc
outsl
movsl
mov
repz
sub
xor
fs
mov
mov
pop
movsl
insl
sub
lahf
inc
xchg
pop
mov
nop
push
push
ljmp
lods
lret
push
pop
dec
sub
push
jne
popa
xchg
cmc
insl
xor
cmp
sbb
cmp
in
jle
mov
xor
xor
aad
fwait
inc
add
sbb
and
pop
fisttpl
daa
jecxz
in
call
sarl
in
jl
ljmp
xchg
inc
mov
add
in
jp
mov
add
sbb
loope
adc
pushf
and
arpl
icebp
pop
pop
je
mov
repnz
or
jle
sub
shl
lds
xorl
push
into
cmp
sbb
push
repz
arpl
jle
test
scas
lret
sub
mov
pop
pop
iret
iret
push
lret
rolb
pushf
repz
jb
xor
mov
aaa
push
lcall
call
sub
push
mov
sbbb
sub
or
mov
jmp
mov
stc
mov
ss
pop
xchg
scas
cmpsl
jne
aaa
jg
dec
insb
push
pop
xlat
test
pop
pop
push
mov
cli
mov
shlb
dec
movsb
arpl
xor
fsubrs
shr
and
iret
loopne
dec
loope
pop
into
int
pop
jg
pop
iret
cmp
add
mov
int3
fdivs
out
repz
popa
or
shll
pushf
push
adc
dec
dec
dec
dec
mov
pushf
js
and
jns
arpl
divl
or
loop
mov
mov
jnp
loop
shll
pop
jne
test
lret
bnd
dec
jp
dec
std
add
pop
shlb
mov
cmp
call
in
lds
int3
xchg
lret
test
xchg
adc
pop
icebp
dec
xlat
addr16
inc
mov
mov
pop
pop
mov
push
pop
xor
in
xor
or
xor
pop
test
xor
shr
push
xchg
inc
insl
jge
loope
push
loopne
adc
rolb
inc
jae
mov
test
fmull
dec
repz
movsl
rorb
cs
cmc
xchg
mov
aad
add
xor
inc
mov
jne
push
stos
mov
pusha
mov
xchg
push
das
mov
pop
push
mov
popa
les
push
popf
sbb
outsb
cmp
cmp
push
out
pop
lcall
jo
jmp
sub
xor
out
outsl
lds
into
test
cli
xchg
inc
addr16
out
sub
ffree
addr16
repz
mov
test
mov
outsb
xor
push
inc
jg
xchg
jo
jo
jecxz
sbb
sub
sub
sti
fcmovnu
jbe
int
adc
std
je
mov
jne
popf
or
cli
xor
fchs
outsl
and
xchg
sahf
and
mov
inc
xor
mov
sub
imul
or
les
cmp
dec
cs
fcomp
pop
rclb
cmp
fisubl
mov
fistl
mov
lahf
scas
lret
ljmp
cmp
jmp
nop
shrl
dec
hlt
inc
xchg
mov
xor
shr
push
or
push
outsb
loopne
jmp
mov
dec
mov
jg
pop
lods
mov
shr
jo
iret
push
lret
fxch
ds
xor
clc
jb
mov
inc
fdivs
sbb
divb
arpl
movsl
out
cmpsl
rcrl
scas
jge
lods
scas
xchg
ret
call
xor
out
cmp
mov
hlt
test
mov
or
ja
cmpsb
aaa
scas
das
shlb
push
xor
xchg
mov
lret
inc
loope
and
push
insl
mov
out
sbb
insl
jae
mov
sbb
out
hlt
cwtl
loopne
outsb
xorb
dec
push
insb
or
pop
push
imul
mov
das
ja
mov
jecxz
mov
stos
pop
test
lea
fsubrl
jg
fistpll
or
sbbb
xchg
push
and
mov
xor
fidivl
js
hlt
movsl
xor
xlat
dec
dec
std
mov
sbb
faddl
or
and
lock
add
jge
stc
stc
arpl
shrl
stos
add
int3
mov
or
or
bound
mov
push
aad
xor
ljmp
insl
fistpl
jns
mov
sub
pmuludq
jns
dec
lods
sbb
fbld
pop
mov
pop
push
fsubl
mov
fildll
shr
ds
cmp
sbb
cmp
lock
xorl
and
mov
xor
sbb
jae
dec
add
jmp
aad
pop
loope
dec
roll
fucom
cltd
mov
es
cmc
xchg
push
stos
cmp
pushf
jge
out
mov
pop
inc
sbb
sbb
iret
adcb
rcll
mov
sahf
into
aad
cmp
mov
adc
push
mov
or
cmp
mov
cwtl
mov
or
sub
xlat
push
sbb
outsl
jl
ja
andb
repz
outsb
imul
xor
mov
int
lds
out
data16
lcall
pushf
jno
hlt
cltd
mov
xchg
clc
sbb
les
testl
pop
lods
and
iret
ss
inc
lcall
and
ds
jne
mov
stc
dec
dec
mov
xor
adc
sbb
push
or
roll
es
push
fs
sbb
daa
int3
stos
cmp
shll
inc
mov
jb
movsl
sub
ret
and
adc
pop
inc
and
inc
jb
inc
sahf
sbb
mov
ret
notb
jno
adc
gs
aas
imul
std
arpl
xchg
daa
cmp
shl
mov
inc
or
adc
jb
or
es
cmp
xor
popa
ret
icebp
pop
pop
sub
ret
mov
insl
clc
fwait
push
mov
mov
icebp
jecxz
test
xor
sbb
add
mov
cmpl
push
cs
push
sahf
lods
sbb
cld
leave
in
jl
fs
push
cltd
cmpb
mov
aaa
addr16
pop
sbbl
push
pop
lods
push
jle
sahf
xchg
into
int3
lahf
popl
pop
push
mov
scas
inc
fs
pop
adc
mov
inc
sbb
mov
scas
add
mov
aas
int3
sub
out
mov
jge
sub
pop
out
push
jge
jns
ljmp
dec
adc
xor
aam
adc
arpl
push
ret
inc
iret
mov
loop
std
mov
in
cwtl
mov
in
push
mov
in
gs
out
mov
jecxz
lods
in
add
int
xlat
inc
mov
imul
adc
cmp
jecxz
dec
cli
mov
xor
sahf
pop
xchg
sub
outsb
lock
repnz
je
pop
adc
test
cwtl
cmp
xor
cmpl
mov
test
add
adc
xchg
push
adc
mov
xor
adc
xchg
loopne
popa
test
int
aaa
rcll
clc
push
in
ret
inc
mov
inc
jns
cmc
loopne
sub
aad
jnp
arpl
or
xorl
push
adc
push
popf
divb
jmp
fsubl
push
aam
mov
push
fwait
adc
in
cs
cwtl
rcr
cmp
dec
ljmp
clc
divl
fldl
jge
or
pop
and
xor
adc
fbstp
dec
jmp
jbe
push
subl
iret
mov
jge
push
sbb
push
push
xor
shl
stos
push
cmp
push
xchg
jl
lret
xor
popf
imul
jecxz
ds
and
sbb
popa
xchg
dec
test
orb
lret
cmp
ja
lret
rcl
popf
mov
mov
clc
mov
inc
insb
inc
sarb
mov
jp
mov
or
movsl
xor
cmp
mov
pop
adc
or
push
push
jne
gs
mov
mov
xchg
and
into
sbb
cld
mov
scas
sub
cmp
decl
jb
jns
and
inc
xlat
inc
mov
cmp
xor
sub
dec
mov
push
mov
mov
mov
add
ja
mov
jg
movsb
shr
rcrl
test
and
mov
rep
sub
add
movsl
inc
mov
jg
push
cmpsl
sarb
push
sub
repz
add
lret
lds
adc
sub
pop
jae
add
fisttpll
out
addl
pop
or
jmp
addr16
or
movsb
in
and
test
imul
lods
fnstsw
arpl
shlb
push
ja
sub
inc
jo
int
pushf
out
xor
aam
dec
loop
sbb
mov
jns
mov
fmuls
fidivl
jge
xchg
pop
jp
jbe
gs
cld
pop
mov
sbb
pop
cmp
xchg
or
dec
lods
adc
orl
xchg
mov
and
xchg
dec
adc
in
mov
stc
lods
sarl
je
lret
stos
out
xor
pop
pop
sti
cli
xchg
mov
pop
jp
movb
or
lret
repnz
mov
inc
popa
mov
mov
adc
fldl
shl
cmpsb
sbb
mov
gs
mov
fstpt
int3
sub
jle
popf
outsl
fsubl
mov
inc
add
dec
xor
mov
mov
and
and
sbb
outsl
insl
cltd
dec
jecxz
or
mov
mov
xchg
sbb
movsb
jge
push
lcall
sbb
mov
jp
or
mov
mov
mull
ucomiss
leave
jl
sub
bound
cmp
popf
test
mov
arpl
in
xchg
dec
jl
test
adc
in
xor
insl
mov
pop
or
mov
gs
sbb
out
or
repnz
inc
test
or
fistps
pop
rcl
flds
sbb
xchg
ja
mov
ds
out
fwait
push
testl
and
xor
jecxz
int
sbb
mov
ja
rcll
sbb
lea
ret
and
rorb
mov
cwtl
fstps
cmp
orb
jne
ds
shrl
mov
sbb
push
mov
xchg
ds
fdiv
in
fdivr
jge
shrl
add
lcall
cmp
gs
mov
adc
sbb
mov
divb
in
mov
sar
xchg
insl
xchg
sub
lahf
xor
je
push
xor
aas
fdivrp
jg
cmp
add
push
testb
jne
mov
mov
insb
mov
cwtl
and
ret
xor
sbb
jno
mov
sub
inc
jo
cmc
es
sub
bnd
xchg
pop
enter
mov
xor
out
insb
data16
cmc
clc
or
out
aas
xchg
cmpsb
mov
xchg
outsb
add
mov
sahf
lahf
inc
psrld
cwtl
jb
leave
jmp
push
push
inc
sbb
stc
mov
xor
es
scas
dec
es
cmp
push
loope
mov
movsl
mov
je
loope
add
mov
imul
pop
push
in
mov
sahf
cwtl
in
andl
inc
jno
rorb
in
inc
xchg
imul
imul
xor
cld
enter
xor
sbb
push
cmc
lea
add
fbstp
sbb
cmc
sbb
xchg
jno,pn
fnstsw
push
daa
mov
into
nop
leave
clc
adc
pop
stc
add
push
jge
sbbl
enter
xor
inc
cs
inc
int3
std
mov
jae
xor
sub
fsub
lods
push
sub
pop
in
pusha
and
or
test
das
cmpsb
testl
jge
dec
or
shll
or
rol
inc
addr16
add
xchg
enter
aas
stc
sub
or
mov
pop
stos
out
cmp
test
pop
xor
rclb
sbb
cmp
sbb
push
sbb
aam
jecxz
mov
out
cmp
pop
mov
sbb
sbb
jo
adc
shlb
je
jle
add
xlat
adc
push
sub
pop
xlat
dec
inc
cvtps2pd
pop
push
jecxz
and
lahf
rcrl
pushf
shll
pop
into
lret
fwait
mov
sti
les
push
mov
xchg
sub
mov
sub
inc
icebp
mov
js
rol
fstpl
sub
mov
lahf
aam
ds
loop
sarb
pop
arpl
xor
ja
comiss
sbb
scas
dec
enter
popa
stc
jae
xlat
cmp
mov
cmp
inc
mov
ret
or
fdivr
scas
jp
nop
mov
sub
pushf
enter
test
int3
imul
jmp
push
loopne
dec
xor
cmpl
jbe
pop
pop
add
in
cmp
in
cltd
cmpsb
les
inc
out
sub
cli
inc
les
insb
cmp
mov
and
inc
and
out
jns
xor
aaa
pop
mov
jg
pop
push
or
cltd
push
jl
popf
or
inc
mov
mov
pop
and
ret
inc
sbb
icebp
lcall
es
xor
dec
call
lea
dec
adc
and
push
rcrb
out
sub
dec
sbb
sahf
xchg
out
pop
aad
loopne
mov
pop
cmp
add
dec
imul
pop
sbb
addr16
mov
cmpsl
push
aad
or
es
cli
test
lcall
mov
clc
cltd
idivl
cmp
adc
stos
push
pushf
inc
mul
dec
jg
push
fwait
lods
vphsubdq
mov
ljmp
mov
inc
fxch
std
jg
xchg
cmp
mov
inc
scas
outsb
mov
xor
movsl
sbb
pop
hlt
ror
test
xchg
in
sahf
and
fldl
pop
pop
arpl
cli
dec
ds
cmp
adc
insl
mov
ret
shll
fs
jp
imul
fimull
jo
test
sahf
adc
fildl
pop
push
hlt
mov
mov
xchg
inc
mov
pop
int3
test
out
inc
mov
lret
push
add
xor
inc
or
jo
outsb
pop
stos
clc
or
jb
jecxz
cmp
or
adc
or
out
mov
dec
aam
fsubrl
adc
les
and
push
and
insl
mov
sub
repz
jns
mov
jge
shll
cmp
sub
and
imul
enter
cmp
iret
mov
pop
data16
ljmp
sbb
movsb
mov
in
les
mov
inc
xor
into
into
xor
negl
cmpsl
dec
lods
mov
dec
clc
or
push
push
inc
aam
push
push
out
sub
fstpl
push
mov
clc
cwtl
xor
xchg
mov
loope
sub
call
int
movsl
lret
push
and
je
shll
mov
mov
sbb
jae
pop
dec
test
fisubrl
sbb
lods
fistl
flds
mov
mov
pop
stos
add
cmpsl
je
inc
scas
scas
mov
mov
decb
sahf
xor
pop
mov
fbstp
lock
push
or
and
sbb
ficomps
ds
pushf
hlt
ror
mov
std
push
sti
cmpsl
inc
inc
xchg
sub
test
and
stc
lret
les
int3
dec
mov
pop
adcl
das
push
mov
and
mov
adcb
jb
sahf
or
popf
into
std
dec
add
inc
ret
jge
jmp
out
add
jns
call
push
aad
lock
mov
push
loopne
mov
sbb
lock
jne
sbb
insl
scas
inc
fcomps
mov
enter
movsb
scas
adc
sbb
test
ret
inc
cmpsb
mov
mov
or
sub
jp
mov
js
shlb
fistpl
xchg
and
cmc
out
inc
push
add
sahf
inc
out
pop
xlat
ret
stos
xchg
dec
movsb
ljmp
icebp
jmp
stos
cmp
enter
pop
movsl
sub
push
push
pop
ljmp
je
cli
pop
mov
add
fsubrl
shlb
fildll
daa
inc
xchg
aas
and
adc
lock
mov
inc
push
xor
pop
sub
sahf
ret
mov
popa
sbb
or
in
movl
arpl
icebp
mov
repnz
add
mov
sysexit
shll
cwtl
cmp
mov
dec
movsl
scas
pop
daa
add
and
std
sub
xor
out
not
adc
xchg
cmp
int
out
mov
mov
nop
pop
or
inc
pushf
fildll
jp
lods
lret
mov
mov
les
xchg
mov
movsl
in
pop
mov
negl
ss
ss
imul
nop
repz
jge
mov
xor
xor
jp,pt
push
rcrb
pop
lds
sbb
inc
cmpsb
push
popf
mov
jl
fs
bound
ss
adc
mov
push
pushf
ja
mov
popf
mov
repz
subl
pop
loopne
cmpl
nop
addr16
pop
xchg
rcr
filds
push
sbb
and
ds
test
and
flds
mov
int
cmc
shl
ficomps
sbb
mov
hlt
dec
mov
je
mov
add
arpl
test
fidivrs
fisubrl
daa
xchg
mov
xor
jae
fsub
les
and
aas
leave
shr
sub
jno
mov
lahf
jecxz
mov
lret
scas
jb
lea
icebp
fs
cltd
xchg
repnz
lret
xchg
mov
xchg
xor
pushf
fldcw
add
mov
enter
dec
xchg
inc
sti
iret
xor
popa
imul
in
xchg
imul
ljmp
sub
cld
je
pushf
cs
cmp
xchg
inc
xor
and
fisttpl
lods
dec
xchg
mov
sbb
mov
jnp
push
adc
sub
test
data16
rclb
or
scas
icebp
lcall
mov
add
fists
dec
fcoml
test
filds
xor
push
pop
in
xchg
faddl
mov
jle
pop
mov
jne
andl
push
push
and
out
in
mov
cmc
mov
mov
pop
pop
and
pushf
test
jno
ss
or
jmp
fistpll
mov
mov
insl
mov
xor
out
pushf
xchg
lds
or
adcl
stos
push
xor
pop
jp
orb
jae
push
or
das
or
jmp
outsb
mov
or
mov
lock
mov
or
add
int3
test
push
lock
or
add
or
ds
pop
rorl
add
stos
xor
mov
insb
jp
dec
sub
jnp
out
xorb
test
jp
sbb
out
fs
popa
xor
push
fldl
jecxz
fcomip
lret
pop
mov
stos
bound
aam
icebp
pop
pop
pop
xchg
cwtl
fildll
ret
pop
lahf
mov
dec
xchg
jmp
int
cmc
roll
inc
pop
dec
cmpsl
and
into
fisttpl
push
mov
sub
test
aaa
mov
push
sbbl
xor
loope
ret
andb
add
scas
sbb
addl
sub
jge
push
or
mov
scas
jp
test
repnz
loope
cmpl
sbb
stc
pop
pop
jmp
pusha
push
xor
or
insl
add
adc
jmp
daa
or
or
adc
call
in
inc
lods
mov
xor
into
enter
pop
jnp
loope
xor
fwait
mov
inc
rorb
jns
aam
js
cmp
int
int3
stc
insl
and
fisttps
int3
add
arpl
ret
cmpsl
mov
mov
subb
loopne
loopne
sub
push
dec
inc
pushf
lods
sbb
sbb
nop
jmp
gs
lret
mov
or
sbb
adc
push
xor
inc
ret
xchg
loopne
out
pop
push
jbe
adc
adc
test
xchg
idivb
lock
sub
mov
dec
mov
jb
pop
cld
int3
or
imul
xchg
sbb
mov
add
sti
add
mov
and
inc
and
add
adc
and
mov
push
xor
cmp
cmpsb
mov
inc
xchg
pop
cmpsb
imul
js
mov
xor
decb
fptan
leave
pop
sub
scas
rcll
sub
dec
sbb
mov
mov
mov
xor
xchg
test
or
das
fdivrl
loop,pt
and
movsb
test
repnz
dec
jbe
sub
test
cli
enter
ja
ret
pop
or
sub
lret
rorb
push
push
jb
inc
jne
sahf
sbb
sysret
push
int3
push
lods
pop
push
aaa
daa
loopne
sub
pushl
pushf
mov
andl
dec
jmp
sub
stc
cltd
dec
mov
mov
mov
add
push
out
sbb
into
scas
xchg
pop
push
insb
cmpsb
sbb
pop
aam
jne
ja
mov
cs
xchg
xchg
push
inc
aas
add
push
lcall
mov
fcoml
xchg
das
adc
in
fnsave
dec
mov
popa
mov
fisttpl
rorl
cltd
mov
shrl
inc
cmpsl
adc
out
xor
pop
sahf
scas
cmpsl
xor
nop
xlat
sub
xor
xchg
push
cmp
cmpsb
cwtl
fwait
in
in
inc
xor
adc
mov
pop
fs
xlat
mov
inc
ficoms
cld
lock
lret
stc
and
or
pop
pusha
add
lcall
inc
hlt
outsl
or
ror
push
add
push
fcomip
mov
fs
push
pushf
ret
or
xchg
fiadds
mov
fsubr
push
std
mov
scas
xchg
mov
mov
mov
xchg
cmpsb
lds
out
mov
inc
ret
jle
mov
and
outsb
int3
mov
data16
shl
sahf
add
nop
not
xchg
mov
pop
jmp
sub
test
xor
loop
pop
mov
xchg
jo
jmp
jmp
bound
mov
sub
xchg
inc
loope
fistps
subl
aam
imul
pmaddwd
loope
sbbb
pop
sub
mov
push
scas
mov
lret
cs
push
leave
mov
lret
lds
mov
test
inc
out
in
enter
mov
jb
mov
test
sub
test
ljmp
add
sar
mov
dec
mov
sub
sbb
pop
scas
cmpb
xlat
pop
pop
push
mov
test
cmp
lahf
mov
fwait
dec
jecxz
or
iret
cmp
imul
test
div
or
scas
loop
push
in
pushf
dec
xor
push
mov
inc
inc
shrl
out
sti
jb
aam
or
bextr
sbb
sbb
push
leave
andl
pop
test
mov
testl
pop
cmp
pop
aaa
mov
xchg
or
into
jns
int3
fsubrl
xchg
xor
lahf
loop
pusha
movl
mov
cs
and
pop
out
push
mov
in
cli
push
rorb
test
push
cltd
xor
inc
sbb
sbb
lea
xchg
jge
xor
pusha
jno
sahf
std
pop
xchg
out
test
cld
int
stc
cs
push
ret
pop
mov
mov
push
imul
mov
adc
or
jecxz
jge
call
push
fdivrp
mov
xchg
adc
mov
mov
rcl
xlat
xor
ds
inc
iret
xchg
data16
into
movsl
aad
mov
mov
mov
sbb
jl
xchg
ficoml
fnstenv
xor
push
in
cmp
or
push
test
clc
mov
push
or
je
inc
xlat
data16
xchg
sbb
ss
js
mov
stos
mov
add
pop
and
into
dec
push
mov
fwait
jp
jmp
pop
fbstp
int
and
jo
movsl
xchg
mov
mov
movsl
mov
and
aaa
mov
mov
and
test
in
es
icebp
cmp
mov
js
cmp
jg
sub
js
jb
dec
sub
xchg
and
push
inc
adc
push
nop
mov
testb
inc
out
mov
filds
add
mov
mov
mov
xchg
decl
es
out
ror
hlt
addb
popa
mov
ffreep
xor
mov
push
aad
bound
mov
xchg
nop
inc
pop
data16
aaa
bound
push
mov
movsl
call
pushf
and
loopne
mov
mov
add
cmp
xor
aaa
outsb
and
jge
aas
mov
sbb
pop
and
mov
and
ss
sarb
lods
xchg
fimull
jb
sbb
imul
cmc
pop
fidivrl
jo
test
outsb
dec
sbb
push
xorl
jne
jo
test
cmp
das
and
xor
sbbl
cltd
push
cs
xchg
pop
fimull
cmp
and
lcall
mov
pusha
insl
dec
lea
add
iret
pop
ret
sarl
push
xlat
jns
sbb
fs
enter
push
call
inc
and
in
inc
jge
and
call
les
ror
xchg
pop
dec
scas
mov
cli
fcoms
aaa
in
popf
mulb
adc
test
cmpsl
loopne
xorb
aad
push
mov
pop
dec
sub
ds
cltd
inc
lock
out
ret
mov
mov
mov
jecxz
mov
mov
dec
push
inc
stc
sbb
inc
stos
mov
cmc
mov
add
movsl
fdivrl
jl
mov
inc
cmp
fwait
jp
or
mov
lret
push
push
sub
pushl
test
xchg
popf
and
sub
insl
adc
jne
mov
mov
sub
mov
loopne
out
rcll
js
or
or
pop
inc
cmp
add
add
jge
call
push
mov
mov
rcr
push
mov
test
or
int
sbb
sub
cmp
orb
ret
dec
out
lods
push
movsw
mov
lea
fmul
hlt
shlb
sub
lods
mov
push
fwait
mov
cmp
stos
and
inc
or
or
mov
bound
mov
jae
hlt
mov
lds
sbb
add
pop
xor
movsl
mov
pusha
insb
fs
popa
and
int
inc
or
hlt
loope
sbb
and
fcoms
leave
fcoms
out
fidivl
adc
movsb
lret
push
jns
repz
pop
subl
push
jecxz
rcll
xor
pop
or
shr
aam
push
dec
fistps
xor
mov
xchg
pop
cld
lock
and
and
pop
in
xchg
jb
mov
xchg
dec
mov
xchg
cmpb
push
mov
and
lods
sahf
xchg
sti
push
subb
mull
and
xchg
hlt
xor
cmp
out
xchg
sbb
lcall
push
addb
add
roll
fiaddl
jnp
adc
cmp
xor
xchg
inc
rclb
outsl
push
xlat
mov
or
jp
stc
test
mov
hlt
cmp
sahf
xor
lock
pushl
jbe
adcl
test
dec
les
push
pop
int3
mov
es
xor
out
out
out
rolb
out
in
cmp
lds
dec
cs
xchg
dec
jmp
inc
mov
and
subb
movsl
mov
test
fbld
xchg
pop
pop
sub
xchg
pop
call
mov
aam
xchg
cmpsb
mov
sub
out
ljmp
fwait
adc
adc
cmp
lds
rolb
sub
push
add
das
fs
fcompl
aaa
jbe
jae
lds
or
ljmp
cld
mov
xor
and
dec
outsl
inc
ret
sbb
flds
cs
and
lcall
xchg
push
jmp
jo
and
push
out
ret
test
and
rclb
jl
jbe
cwtl
fisttpl
mov
and
mov
jnp
xor
or
mov
lods
sub
and
test
dec
cmp
in
out
cltd
pop
insl
and
fidivrs
and
cmc
popa
fwait
mov
mov
in
mov
ds
lret
pop
xchg
iret
sbb
xchg
inc
out
dec
mov
xor
inc
lods
xlat
mov
outsl
stos
jb
push
mov
push
test
push
ficoml
sti
sbb
mov
popa
xlat
sub
mov
pop
mov
pop
fwait
and
insb
adc
out
pushf
jl
sbb
pushf
inc
xchg
push
xchg
mov
test
ret
jbe
cmpsl
dec
add
push
pop
mov
pusha
into
fnsave
lcall
loop
add
push
inc
adc
mov
or
push
test
jbe
sub
call
sbb
enter
sub
dec
fsub
js
jge
int
int
inc
mov
addr16
mov
push
imul
test
aam
mov
aaa
shlb
push
and
scas
push
repz
orl
ljmp
mov
mov
sub
andl
mov
call
xor
xchg
push
test
cld
cwtl
xchg
push
ljmp
add
outsl
add
push
dec
rcrl
scas
outsl
mov
push
mov
dec
mov
aas
mov
pop
mov
mov
dec
sub
sub
and
xor
push
adc
icebp
pop
pop
inc
xor
inc
outsl
addl
sub
mov
xor
or
jne
dec
clc
mov
add
jne
xor
adc
pop
cmp
fs
mov
sbb
imul
adc
hlt
cld
test
je
outsb
fiaddl
jp
aam
mov
in
xor
dec
call
push
inc
arpl
jbe
insl
ja
int3
push
mov
or
inc
in
int
bound
dec
incl
or
out
add
push
inc
inc
push
push
cwtl
test
in
int3
inc
mov
dec
push
test
ret
adc
les
fisttps
add
int3
push
aam
ficompl
jo
mov
xor
sbb
inc
mov
sarb
xchg
icebp
jmp
push
push
jo
cmp
clc
dec
ljmp
out
in
pop
adc
pop
dec
jg
cmp
sub
fwait
inc
out
daa
mov
sub
or
adc
mov
rorb
cmpsb
mov
gs
mov
clc
mov
scas
sbb
shll
pop
sbb
dec
js
js
lods
pop
ret
nop
pmulhw
in
mov
std
test
adc
icebp
lahf
adc
cmp
xchg
mov
call
loopne
xchg
lea
or
fistpll
insl
call
cmpsl
iret
pop
fstps
aaa
lea
and
pop
rorl
test
jb
sub
sub
pop
daa
jns
insb
pop
dec
mulb
xor
xor
xorl
xchg
mov
xchg
ss
mov
popf
out
add
out
fdivrl
sbb
fldt
push
popa
repz
ret
imul
xor
cld
cmp
out
cmpsb
hlt
aam
ret
cs
fsts
or
out
push
es
jp
cmp
cmp
or
push
cmpsl
inc
aad
cmpsl
not
dec
fiaddl
push
scas
scas
aam
lock
jmp
aad
in
pop
pop
jge
bound
pop
cwtl
lcall
iret
test
fnstcw
push
xchg
jbe
repz
icebp
stos
mov
movsb
jae
mov
pop
push
dec
push
lods
les
fisubl
fmull
fimull
and
xor
sbb
lret
cmpl
lods
hlt
sarl
popa
or
inc
push
mov
cmc
sbb
fwait
negb
sbb
repz
repnz
inc
sbb
or
aas
pop
nop
popf
js
mov
sbb
scas
lods
pop
xchg
push
aam
repnz
cmp
push
mov
and
bound
jg
add
sbb
xchg
fwait
test
xor
sbb
lds
mov
dec
shl
push
pop
adc
fbld
fbld
jp
ss
xlat
mov
xchg
iret
out
icebp
sbb
popa
cmpsb
or
pop
notb
xchg
dec
xorb
stc
adc
faddl
mov
push
xchg
pop
test
out
jmp
repnz
imul
adc
xor
or
push
sub
cmpsl
dec
jg
mov
push
adc
or
insb
adc
mov
pop
sub
push
sarl
test
dec
jl
inc
pop
mov
xchg
vmovsd
adc
mov
add
or
and
movsl
mov
aas
xchg
lds
mov
ja
movsl
in
inc
mov
xchg
cmp
arpl
jns
xchg
call
imul
cmp
fs
std
aas
lods
sub
lds
push
mov
aad
xchg
in
mov
pop
jge
mov
and
pushf
aad
loop
xor
jg
imul
js
aaa
push
cmp
sub
xchg
jmp
jle
dec
sub
pop
inc
ljmp
popa
test
adc
out
inc
xchg
adc
mov
and
out
or
inc
sub
fcomps
bound
jg
mov
dec
fnstenv
jnp
insl
in
dec
push
lods
dec
pop
adc
push
mov
aam
jge
mov
psllw
call
in
adc
sahf
jecxz
adc
adc
cmp
fists
pop
push
inc
rcrb
les
push
jle
je
sub
xor
repnz
push
or
jl
jae
jnp
jb
inc
ljmp
cmp
inc
ds
jo
leave
sti
leave
sbb
cmpsl
xchg
or
imul
stc
enter
mov
dec
xor
rorb
movsl
mov
adc
movsb
xor
cmp
popf
fnstenv
xchg
inc
sub
jge
xor
repnz
inc
sarl
xor
xchg
push
fistpll
out
pop
lea
mov
fildl
lods
in
popa
dec
push
pop
adc
pop
cmp
enter
or
inc
in
push
rorb
jns
mov
inc
or
cli
lcall
gs
or
mov
out
cmp
sub
jecxz
dec
outsl
pop
mov
aad
arpl
addl
sti
sub
shrb
repz
and
pop
mov
clc
sbb
aad
mov
inc
sti
pop
fnstenv
rolb
mov
mov
push
sub
pop
inc
fimull
xchg
mov
jl
mov
fsts
inc
jb
pop
inc
jno
and
dec
pop
sub
dec
test
mov
push
mov
xor
fsubl
scas
add
rcll
ret
jmp
jnp
subl
movsb
jo
mov
stos
fstl
insb
mov
and
pop
lahf
icebp
adc
push
call
add
lods
imul
adc
jbe
cld
in
mov
mov
bound
mov
test
mov
sub
adc
mov
mov
or
clc
rcrb
xor
enter
cmc
ret
xchg
xchg
shld
dec
push
xchg
lds
cmp
mov
mov
xchg
dec
dec
loope
or
and
push
or
add
sbb
cwtl
inc
push
enter
out
push
and
movsb
mov
pop
jle
xchg
lea
insl
inc
jmp
insl
cmpsb
pushf
jbe
inc
mov
add
jmp
mov
adc
mov
int
dec
nop
xor
es
sbbl
fcmovu
ret
ret
imul
movsl
hlt
cmp
out
or
cmp
ss
jno
cli
or
imul
dec
jns
popf
or
push
int
mov
in
or
add
dec
mov
filds
daa
insl
call
sbb
add
call
xorl
lods
subl
je
xlat
mov
mov
push
pop
xchg
pop
data16
insb
jb
sti
sbb
xorb
in
imul
insl
sbb
aad
sub
jne
aad
mov
movsb
or
cltd
mov
out
and
dec
cli
stc
nop
imul
add
cmp
mov
pop
test
sbb
mov
jecxz
and
dec
xchg
inc
cmp
ss
into
sbb
mov
mov
jle
loope
loop
inc
mov
cs
inc
jecxz
mov
sbb
mov
xlat
mov
jge
or
adc
repnz
pop
data16
lds
push
cli
loope
and
inc
jecxz
mov
sub
fnstsw
pop
and
ds
test
cmp
js
divb
sbb
scas
out
and
mov
inc
mov
ja
push
roll
jbe
dec
add
popf
xchg
cmp
pop
add
adc
pop
jl
or
cltd
and
xchg
call
loopne
mov
adc
pop
cmpsb
xchg
popa
pop
out
xchg
push
test
lret
mov
lods
pop
sti
or
xor
sbb
subl
aas
dec
adc
mov
testb
aas
sarl
pop
push
mov
inc
sub
mov
adc
jge
xchg
sarl
imul
push
push
lea
leave
or
adc
xlat
jno
mov
push
into
data16
sub
andl
cmpsl
mov
pop
sub
push
mov
pop
adc
lock
inc
xor
lock
xor
subb
leave
add
mov
and
ja
loopne
sbb
movsb
addb
stc
leave
popa
sub
dec
test
cmp
js
and
ret
popf
int3
imul
out
sub
notl
fs
pop
jmp
arpl
inc
sbb
xchg
in
les
ja
fsubs
fwait
jno
cmp
shll
out
add
dec
lea
call
outsl
sbb
pop
fdivs
mov
sub
je
data16
mov
mov
sbb
jl
sbbl
or
xchg
xor
mov
or
call
xchg
lret
or
test
dec
test
jne
leave
jae
iret
add
xor
nop
insb
lods
std
mov
movsb
mov
sub
mov
cld
dec
enter
sub
in
outsb
ss
std
jmp
fisttpll
into
insb
ret
lds
mov
mov
push
out
mov
xchg
daa
and
enter
ljmp
daa
xchg
push
shrl
pop
jp
imul
test
xor
lret
push
fiadds
call
out
push
out
adc
mov
stos
fdivl
ret
ret
or
mov
out
add
pop
repz
les
shrl
mov
fwait
fwait
adc
mov
data16
jno
repz
loopne
sbb
int
sarl
outsb
stos
jnp
mov
bound
es
inc
imul
xor
fnsave
mov
shrb
mov
jnp
cmpsl
loop
inc
mov
inc
hlt
cs
test
mov
mov
adc
cs
fsubrp
xorb
int
jns
mov
jo
sub
mov
xchg
and
mov
fistl
in
xor
outsb
or
and
mov
popa
jne
xchg
jb
pop
cwtl
jmp
inc
fwait
sbb
test
in
movsb
fidivl
out
xor
test
outsl
add
insb
ds
sub
jbe
int
mov
aas
rcr
stc
pop
movsl
scas
add
sbb
clc
sbb
in
xor
aam
push
cmp
push
lahf
cmp
les
scas
roll
jno
fbstp
sub
and
daa
mov
mov
idivl
in
dec
dec
sahf
and
xchg
pop
jae
cmp
lret
fisttps
adc
inc
or
mov
xchg
outsb
jne
mov
mov
ds
fnstcw
sub
push
adc
or
sub
sbb
sub
lds
xor
enter
in
enter
mov
incb
mulb
fcmovnb
sbb
inc
lds
icebp
cmpl
inc
cltd
cmp
cltd
lahf
loopne
les
fs
fdivs
popf
scas
fmull
loope
test
adc
mov
fstl
ds
out
xchg
mov
inc
pop
hlt
xchg
cwtl
das
lahf
hlt
inc
sub
popa
pop
xor
outsl
add
gs
test
inc
cmp
cs
xor
movsb
push
mov
xchg
cltd
sarl
orb
jecxz
sbb
mul
jns
repnz
mov
mov
inc
data16
inc
cmp
int3
mov
inc
inc
fwait
test
mov
push
neg
sub
jne
adc
push
cmc
mov
push
xor
out
notb
ss
scas
cmp
roll
jo
jmp
sbb
inc
mov
shll
cmp
sbb
dec
push
lea
add
fildll
dec
jp
xchg
push
inc
repnz
por
pop
in
mov
pop
int
lds
jecxz
bound
push
mov
or
sti
mov
jl
test
shrl
pop
xor
fcomps
xor
push
pop
addr16
xchg
cltd
and
pop
or
add
mov
xor
xorl
imul
es
xchg
mov
popf
push
out
jmp
stc
repz
mov
xchg
scas
repnz
jns
xchg
outsl
ror
loope
and
test
clc
add
jno,pn
dec
mov
mov
mov
push
mov
and
xchg
scas
dec
pop
imul
incb
rcrb
push
popa
xlat
adc
cli
jp
cmp
mov
add
xchg
adc
jne
add
inc
js
gs
pop
je
cmp
test
fwait
and
cmp
mov
add
push
xor
jle
lea
ljmp
jnp
adc
inc
lret
out
cmp
scas
xor
push
dec
mov
xlat
or
shlb
test
mov
icebp
lds
repz
add
mov
arpl
aam
xor
push
and
je
mov
imul
cmp
mov
jbe
and
popf
or
out
iret
fbstp
or
sbb
and
xchg
test
fdivs
stos
stc
jg
sbb
pop
adc
sbb
push
xor
and
xchg
repz
xor
inc
aaa
lret
fsubrp
cmp
sub
fstpt
repz
dec
imul
adc
and
xchg
or
adc
dec
fnstenv
jo
testb
stc
pop
mov
test
sub
push
push
stos
or
ja
sub
mov
inc
rcr
popf
imul
int
inc
mov
mov
in
dec
sub
adcl
stos
xchg
lods
gs
push
test
arpl
xchg
mov
pushf
notb
mov
adc
dec
xor
push
mov
sbb
push
rcl
cmp
sub
push
push
faddl
addr16
sub
and
sbb
sub
push
xchg
sbb
lcall
and
loop
adc
jmp
xor
test
popf
shlb
bound
add
testl
or
sbb
add
cmp
rcrb
pusha
mov
pop
dec
faddl
xchg
mov
movb
mov
pop
movsl
mov
cmp
insb
dec
std
inc
in
sub
xchg
adc
mov
cld
xor
push
mov
cmp
aad
sbb
fwait
xlat
scas
push
adc
xor
mov
hlt
movsl
jmp
aaa
fcmovnu
add
sbb
aaa
xorl
out
mov
xor
jns
jns
stos
inc
sbb
add
fcomip
test
iret
cmp
outsl
adc
fwait
repnz
cld
cmp
jecxz
dec
ljmp
cmp
cmp
mov
mov
fwait
add
sbb
cmp
adc
incb
nop
or
sbb
in
icebp
sub
jmp
or
std
ja
or
inc
or
inc
dec
ret
inc
sub
outsl
mov
sbb
lcall
je
cmpsb
cmp
mov
outsl
cmpsl
cwtl
inc
adc
pop
repz
sarb
mov
inc
sub
mov
mov
std
mov
cmp
pop
mov
pop
aas
ret
or
adc
mov
xchg
jecxz
scas
dec
fsubrs
je
into
or
ficompl
test
in
addb
jnp
cmc
ds
cmp
rclb
ss
mov
sub
inc
aad
and
adc
movsl
jg
fisttps
clc
mov
and
mov
mov
popf
mov
cltd
add
cmpsb
pop
stos
das
pop
imul
fisttpll
xchg
inc
pop
stos
dec
jl
aam
adc
pop
push
add
mov
popa
lods
or
mov
inc
loope
mov
mov
and
pop
inc
loope
sbb
xor
xchg
movsb
bound
sub
mov
xchg
add
cmp
movsl
pop
dec
sahf
cmp
lods
outsl
inc
push
scas
incb
lock
add
xchg
push
sbb
add
stos
arpl
inc
imul
mov
push
mov
cmc
sbb
jmp
jb
imulb
add
clc
xchg
in
shlb
scas
fidivrs
push
pop
cs
pop
test
cmp
fsubrs
and
je
aaa
adc
pop
xchg
sub
sub
sti
sti
sbb
jge
pop
insl
mov
fbstp
pop
and
or
test
nop
xor
test
fnstsw
xlat
in
mov
push
pop
jo
pop
sbb
in
popa
pop
pushf
adc
and
adc
jnp
stos
mov
andb
xor
lahf
jge
xchg
pop
fs
stc
lods
jb
stos
mov
jecxz
pop
out
xchg
imul
jg
scas
mov
mov
js
pop
cmp
pop
xchg
push
inc
in
or
jo
shrb
mov
jmp
mov
iret
bound
mov
cmp
outsl
lcall
shl
xor
jnp
into
mov
xchg
test
hlt
rcl
inc
xor
sub
jbe
ss
dec
insl
daa
mov
sub
jo
das
mov
mov
cmp
nop
cmp
xchg
cwtl
pop
lods
out
xchg
repnz
pop
mov
leave
sub
ja
cli
xchg
push
data16
sarl
std
loope
cmp
inc
mov
pop
mov
mov
test
sbb
scas
mov
xchg
pop
inc
rclb
jbe
fsubr
cmc
cmp
or
mov
inc
ret
lcall
jp
xlat
push
ss
mov
loope
leave
int
mov
enter
scas
cmp
enter
lret
cmp
mov
ficoml
mov
push
lods
call
ds
push
jp
inc
jmp
xchg
aad
and
je
sbb
xchg
mov
cmp
jg
and
jb
sbb
sbb
clc
jg
xlat
jo
push
pop
sbbl
scas
call
inc
jl
mov
lret
jp
sub
pop
inc
mov
inc
cmp
sbb
test
rcrb
adc
testl
xlat
mov
arpl
xor
sub
cli
inc
nop
test
nop
dec
mov
cmp
pop
mov
cmp
push
sahf
push
pop
dec
jge
pushf
lahf
into
dec
imul
and
jnp
mov
insb
sbb
jo
out
cmp
mov
lods
cs
add
mov
mov
fimuls
test
mov
mov
mov
xor
inc
pusha
imulb
lret
lods
xchg
scas
aad
das
xchg
jmp
stos
mov
out
jl
out
lret
push
push
lods
dec
mov
or
add
jle
xor
mov
lret
pop
mov
fmul
subl
xor
push
fistpll
scas
mov
jp
sbb
sbb
movsb
pop
mov
mov
sbb
movsb
xchg
dec
or
inc
push
cmpsb
mov
push
rcrl
mov
mov
inc
and
cli
mov
popf
xor
stc
push
and
push
stos
iret
inc
dec
jecxz
xor
aas
sub
and
xchg
fwait
mov
and
hlt
xor
jb
and
push
fs
sahf
sar
pop
fld
mov
lds
xchg
js
sbb
outsl
negl
mov
adcb
movsl
push
in
cltd
mov
xchg
and
mov
ss
xchg
add
not
xor
int
mov
out
add
push
test
add
cmc
fisubs
push
cmp
out
ret
fbstp
aas
outsl
cwtl
popf
jae
lds
sub
int3
js
mov
sbb
xchg
pop
sbb
pop
fnstenv
mov
inc
cwtl
cmp
dec
sbb
add
or
leave
jae
lods
scas
sub
or
jbe
stos
pushf
lret
inc
push
xchg
xchg
lret
hlt
mov
movq
pop
mov
or
fwait
mov
push
cmp
sbb
das
out
fisubl
scas
push
cli
fidivrs
test
out
cs
sbb
mov
jmp
jmp
pushf
mov
push
mov
pop
iret
cmp
pop
arpl
clc
xor
icebp
mov
out
jge
push
ret
in
fs
jo
data16
test
and
gs
pop
or
test
pusha
enter
add
xor
adc
sbb
jge
and
rorb
jne
fwait
inc
jg
cmp
into
push
lods
xor
sub
pop
addl
mov
cmp
test
std
cmc
lea
inc
cwtl
adc
pop
or
mov
ret
sbb
les
enter
nop
cmpsb
pop
push
adc
js
rorb
jg
add
push
add
adc
stc
push
jne
add
mov
das
mov
sbb
sarl
xchg
in
cmpsb
cmpsb
push
ljmp
jge
mov
adc
cmp
xchg
testb
mov
adc
das
dec
push
xor
and
pop
or
lods
imul
andb
jmp
fwait
adc
jo
mov
pop
roll
adc
lcall
shl
jo
push
or
mov
stos
add
ret
jmp
pop
je
inc
les
mov
pushf
and
push
mov
inc
scas
jge
pop
cmp
xchg
adc
into
stos
out
cmp
nop
jo
push
jne
orb
jg
adc
aas
pop
adcl
push
inc
scas
fildll
xchg
push
mov
mov
xchg
fcoml
cmp
fmulp
mov
inc
add
and
sbb
int3
xchg
push
mov
inc
jle
xor
pop
lret
pop
xor
in
test
mov
jns
cmpsb
sbb
pop
imul
call
into
stos
or
dec
daa
push
jg
push
loopne
cmp
xor
pop
jmp
cmpsl
pushf
sarb
std
or
imul
int3
push
dec
jecxz
subl
add
movsb
mov
test
jmp
cmp
cmp
stc
push
aam
clc
sub
test
stos
insl
mov
adcl
push
pop
sbb
push
cmp
not
inc
movsl
cmpsl
dec
fcomps
stos
mov
or
jbe
mov
jo
imull
mov
pop
aas
fildl
mov
xchg
mov
xchg
sub
cmp
shrl
xchg
jae
sub
push
sub
adc
cmp
call
xchg
mov
cmp
fadds
mov
mov
std
ja
cld
scas
add
cwtl
add
lods
fisttpl
pop
out
faddl
bound
stos
fwait
xorl
pop
xchg
mov
mov
sahf
rcrb
mov
adc
sahf
or
or
stos
push
cli
arpl
or
data16
cmp
add
sarb
movsl
or
cld
sbb
xlat
sub
push
xorl
mov
cmpsb
cmc
call
cmp
pcmpeqb
lods
jmp
aam
nop
mov
popa
xchg
cmovbe
or
mov
int
test
jmp
push
cmp
ja
call
pop
xchg
add
seto
or
test
fcomps
ss
push
and
mov
call
gs
mov
xchg
xchg
cmp
push
sbb
pop
iret
gs
test
inc
add
imul
std
push
pop
lods
add
xchg
in
lret
add
xchg
iret
in
jmp
and
pop
sbb
sbb
sub
xlat
movsb
in
mov
lods
icebp
mov
nop
dec
lcall
pop
adc
xchg
sbb
hlt
pop
dec
ss
out
pop
ret
push
and
int3
insl
mov
mov
mov
cmpsb
lea
cmp
nop
in
mov
mov
dec
insl
daa
inc
push
leave
pop
inc
xor
andb
dec
dec
sub
aad
pop
xor
adc
mov
mov
adcl
dec
xchg
sbb
test
inc
dec
xchg
sbb
push
add
popf
lds
ficoml
xor
jae
pop
pushf
outsb
and
fisttps
psllw
adc
test
stos
add
hlt
push
lods
or
or
lea
push
test
add
daa
pop
xchg
inc
push
mov
and
das
dec
loop
in
fs
cmpsb
mov
aam
adc
test
inc
adc
popa
dec
shrl
sub
cmp
imul
sbb
ret
fildl
and
adc
mov
jle
mov
mov
xchg
data16
and
mov
add
out
xchg
sahf
cmp
int
xor
es
jmp
sbb
lods
insb
test
daa
jno
and
mov
dec
xchg
xor
addb
xchg
jecxz
xchg
mov
cmpsb
jno
xchg
cmpsb
jl
or
mov
xor
stos
js
mov
cmp
js
xchg
mov
jl
mov
aad
maxps
ret
xor
fdivs
ljmp
imul
js
imul
stc
sbb
cmc
sbb
into
jns
adcl
in
lods
mov
jae
cmp
dec
lods
out
jle
mov
fdivl
outsb
xor
xchg
cld
lods
movsl
iret
sbb
xchg
ja
sbb
addb
sbb
pop
rclb
hlt
xor
cmp
xchg
inc
les
fisttps
pop
adc
test
sbb
in
mov
mov
loopne
cmp
dec
pop
fwait
std
mov
jmp
ret
xor
add
and
dec
sub
mov
fsubl
movsl
fisubrl
push
mov
stc
cwtl
sbbb
mov
pop
xor
and
rcll
xchg
sbb
adc
xchg
movsb
add
aad
or
push
cmp
mov
lock
xchg
icebp
testb
daa
stos
add
rol
out
and
inc
mov
cmp
arpl
iret
sar
mov
or
incl
push
xor
and
lea
and
or
mov
cmp
mov
ffree
jae
bound
icebp
cmp
or
inc
jmp
xor
rcrl
add
xor
or
mov
sahf
mov
jae
imul
rolb
mov
push
imul
mov
and
add
jp
mov
cld
fbld
ljmp
shll
bound
dec
jle
xor
mov
mov
jle
xlat
int
jle
in
lret
ret
in
mov
inc
pop
test
inc
mov
xor
je
mov
int3
cmpsb
push
adc
ret
xchg
out
xor
outsb
add
jecxz
jae
jno
lods
xor
jg
je
enter
add
lods
mov
or
push
daa
xchg
push
pop
jnp
mov
jp
movsl
std
and
jecxz
inc
push
pop
mov
adc
mov
sbb
pop
push
fnsave
adc
ret
aaa
ja
push
es
inc
xchg
scas
pop
movsl
mov
lret
cltd
lret
gs
add
test
xor
nop
xchg
dec
dec
inc
ret
jmp
insb
lods
cwtl
mov
or
lds
int
cltd
sub
popa
push
dec
lret
out
stc
xor
arpl
addr16
xor
inc
incl
push
cmpl
movsb
in
popf
cli
insb
insl
int3
cltd
and
int3
sub
outsl
cwtl
mov
fistps
movsb
xchg
cld
aam
loope
cmc
rol
stos
push
dec
add
jecxz
xor
outsb
pop
dec
sub
add
andl
or
repz
push
stos
mov
lods
popf
test
enter
push
cmp
adc
mov
insl
inc
movsb
subl
or
cmpl
and
jns
pop
dec
add
push
and
movsb
xchg
flds
xlat
mov
or
add
cmp
mov
int3
dec
in
arpl
fisttpl
hlt
rorl
mov
sbb
dec
cmpsl
std
aaa
lahf
std
lahf
sub
pusha
pop
lods
push
daa
add
cmpsl
mov
or
xchg
imul
and
sub
lahf
and
fstpl
sahf
xchg
dec
xchg
xchg
addb
inc
hlt
fs
mov
cltd
cmpsl
mov
push
scas
sub
sub
std
adc
cmc
mov
jl
xchg
insb
add
mov
xor
sub
movsl
sti
pop
lret
sub
push
push
mov
ret
std
mov
in
mov
ficomps
xchg
arpl
sbb
int3
in
and
mov
cmpsb
mov
test
push
cmc
pop
movsl
in
loop
add
fwait
insb
mov
repz
xchg
cld
stc
ss
test
in
add
test
fcmovnbe
fdivrl
sbb
push
imull
fidivl
xchg
mov
lock
mov
movsb
inc
popa
sbb
or
stc
pop
pop
iret
mov
imul
mov
les
push
std
out
mov
cmp
rclb
sahf
mov
pop
xchg
mulb
inc
dec
addr16
xchg
add
call
gs
movsb
ret
sub
lods
cmp
mov
jnp
cmp
dec
add
fildll
movsl
xchg
inc
data16
and
and
mov
cmpsl
dec
adc
push
and
xchg
sbb
rorl
push
inc
mov
push
insb
dec
outsl
test
cwtl
or
insl
call
inc
ret
int3
cli
ss
clc
dec
gs
punpckhwd
out
mov
jg
divl
jne
mov
int
fldenv
inc
cmovnp
aad
sbb
in
sub
push
or
inc
push
gs
mov
jo
out
aam
hlt
enter
ja
pop
and
push
scas
or
xchg
push
rolb
cmpsl
mov
les
testl
mov
lahf
ljmp
or
ja
in
test
push
pop
ret
cmp
push
lds
in
adc
in
inc
mov
stos
aaa
dec
inc
loopne
imul
mov
mov
int
roll
std
add
fwait
and
out
testl
mov
jno
sbb
out
ja
mov
add
in
lods
push
pop
xor
add
jns
inc
fwait
sbb
cs
cmp
inc
mov
lahf
xor
in
add
cli
adc
adc
rorb
clc
mov
xor
daa
jge
aaa
add
pop
in
fwait
repnz
imul
shlb
mov
push
dec
sbb
frstor
and
decb
enter
cmp
movsb
sub
ret
imul
cwtl
out
add
loope
inc
adc
iret
pop
jp
dec
gs
leave
sar
enter
inc
repz
idivl
test
mov
mov
dec
xor
inc
stc
in
xor
rcrl
jl
sub
dec
popa
cmp
inc
aaa
push
xchg
ret
mov
dec
ljmp
push
jns
cmpsl
movntq
mov
pop
ds
push
add
cmp
call
mov
push
xor
out
fdivs
sbb
cmp
or
sbb
fs
mov
lret
loope
stc
add
or
cltd
and
shrl
or
inc
push
xchg
out
xchg
jnp
dec
into
and
dec
hlt
loope
pop
movsb
popf
js
bound
xor
jae
jle
mov
jp
je
lret
add
jae
or
mov
pop
stos
sbb
imul
enter
xchg
test
mov
sub
cld
sub
dec
lods
in
dec
je
xchg
lcall
cmpsb
push
rcll
cmpsl
pop
xchg
pop
rorb
cwtl
cmpsl
xlat
aam
scas
shrb
fldln2
or
push
mov
jge
aaa
dec
sbb
test
repnz
pop
icebp
cmpsb
mov
cmc
jge
and
shr
and
mov
push
sub
xchg
ds
add
dec
lahf
add
jne
dec
jne
fbld
push
jmp
jne
insl
add
jmp
mov
iret
push
and
hlt
int
imul
sbb
push
clc
xor
mov
out
ja
mov
mov
in
adc
push
mov
lcall
in
push
and
or
inc
xchg
ret
adc
cmp
dec
or
fwait
dec
xchg
jp
int3
pop
mov
aaa
imul
and
cmp
mov
fisubl
mov
mov
add
lret
jp
sub
js
hlt
pop
sti
adc
push
xchg
sub
pop
cmpl
mov
sbb
repz
cli
ficoms
or
xlat
test
sar
push
sahf
mov
adc
mov
mov
sub
mov
lcall
push
and
xchg
in
sbb
cmp
mov
das
shrl
or
jg
fcmovnb
xor
jl
into
push
push
inc
jge
imul
out
sub
ret
and
xchg
lods
out
insl
jle
mov
push
jp
mov
ret
pushf
dec
push
sub
pop
add
jge
int
ljmp
or
shl
imul
dec
add
negb
orl
sarb
jae
fiaddl
or
cld
xor
xor
sbb
xchg
dec
jb
push
arpl
outsb
fsubs
imul
imul
push
jp
scas
and
pop
cmp
dec
subb
adc
or
mov
in
push
bound
pop
cmp
divb
es
sub
mov
mov
cs
das
insl
add
jmp
cmp
pop
icebp
sub
mov
out
mov
mov
and
mov
add
xor
sbb
fbld
inc
mov
cmp
sub
shll
sub
mov
xchg
mov
pop
fiaddl
mov
sub
xchg
sbb
and
mov
adc
and
rclb
and
push
cmpsb
sbb
sbb
fwait
jl
ret
mov
xor
jno
mov
hlt
dec
das
mov
pop
adc
jne
pop
out
push
xor
pop
lret
sbb
sahf
lcall
pop
out
outsb
mov
mov
je
negl
imul
loope
jae
fcmovnbe
icebp
decb
pop
js
xor
mov
push
out
ret
jle
mov
mov
push
sarb
sub
lret
xor
and
and
cmp
icebp
xchg
fsubrl
lock
pop
pop
dec
and
loop
inc
push
add
aad
lods
dec
jno
and
pop
inc
dec
mov
mov
nop
sbb
xor
push
std
shl
pushf
aas
mov
stc
mov
dec
adc
shlb
mov
jne
jbe
dec
pop
jb
arpl
mov
addb
neg
xlat
ljmp
dec
inc
adc
pop
lds
sbb
mov
add
sbb
or
sahf
and
mov
mov
movsl
xchg
xchg
xlat
fnsave
leave
pop
jb
mov
xchg
push
shl
orb
inc
iret
subb
dec
fsts
inc
aaa
js
mov
test
pop
xchg
lea
clc
push
jmp
sbb
int3
adc
loopne
cmp
sub
mov
jl
dec
fwait
xor
or
dec
sbb
fs
cli
jno
in
inc
lds
jne
clc
outsb
aad
jae
cmp
sub
lea
sub
fadds
adcl
pushf
stos
sbb
nop
push
mov
lret
mov
shll
bound
pop
pop
insb
xchg
sub
filds
loop
mov
shll
rcl
mov
ss
jns
pop
decl
fsubr
pop
scas
rclb
sbb
das
pop
call
hlt
pop
fistl
js
rcrl
inc
loope
jecxz
dec
nop
or
rcll
adc
dec
or
js
push
mov
add
xor
idiv
add
cmp
push
int
andl
inc
gs
stc
mov
sbb
jg
push
jp
into
dec
inc
cli
xchg
jns
cltd
int
es
xchg
mov
sub
mov
jbe
inc
int
xor
cmc
sti
bound
popa
jns
mov
outsb
ret
mov
addl
jecxz
dec
pop
std
jns
pop
out
jecxz
lods
adc
lcall
mov
stos
mov
adcl
aas
imul
jbe
cmpsb
adc
mov
mov
sahf
dec
cmp
and
and
sahf
jae
mulb
fstl
xchg
xchg
or
mov
inc
lods
jmp
mov
adc
xchg
xchg
jl
mov
sub
leave
fidivrs
fdivrs
mov
jle
daa
xor
add
cld
pop
scas
hlt
ror
imul
nop
sbb
sbb
cmpsb
add
xchg
mov
push
adc
inc
add
pop
int3
mov
aad
outsl
fcompl
push
and
inc
inc
loopne
pusha
dec
jl
insb
and
dec
bound
adc
shll
adcb
fwait
sbb
int3
into
jae
notb
aad
add
mov
mov
or
and
push
mov
jecxz
ja
ss
add
mov
addb
xor
stos
cs
mov
mov
gs
lret
ljmp
into
jno
sub
pop
sbb
gs
jnp
pop
cli
adc
inc
push
adc
leave
cltd
hlt
sbb
fsub
jae
mov
subb
cmp
cmpsb
pop
push
nop
test
or
dec
ret
das
ret
loope
push
pop
popf
xchg
lods
lock
aas
nop
mov
jmp
xor
insl
pop
insb
adc
mov
add
ss
xchg
sub
popa
sub
mov
add
pop
mov
add
nop
insb
lahf
int3
std
add
daa
aaa
lret
sub
pop
fld1
popf
jecxz
mov
or
rolb
jns
xor
adc
pop
popa
push
test
xchg
repnz
pop
xor
fcomi
add
mov
pop
cmp
push
hlt
xorl
xchg
movsl
imul
mov
inc
mov
test
aas
lcall
loope
adcl
aam
stos
fimuls
lahf
adc
cmpl
xor
and
fdivs
enter
enter
push
adc
ret
enter
dec
sbb
popa
pmullw
fdivrl
pop
repz
sub
xchg
test
fistl
movsb
mov
xor
xchg
cs
push
outsl
or
jmp
push
addb
sub
xor
xchg
stos
xchg
xor
xlat
ret
mov
clc
loope
mov
cmpsb
pop
je
or
xchg
movsl
add
mov
mov
insb
scas
inc
sub
xor
addr16
mov
mov
test
maxps
push
arpl
or
push
in
les
adc
push
in
popf
inc
jb
scas
cmp
dec
mov
push
les
jl
dec
rolb
jg
mov
stos
cmc
in
and
mov
and
dec
push
in
out
push
jo
idivl
fistpl
fisttpl
es
lea
mov
mov
lods
fdivrp
jae
imul
and
scas
jp
insb
int3
ror
and
pop
sbb
int
pop
mov
nop
jmp
dec
mov
xchg
in
inc
mov
repnz
cmp
xlat
icebp
int
sub
leave
sub
jmp
call
int
repz
pop
js
js
outsl
cld
jecxz
add
dec
ror
pop
push
mov
sbb
adc
icebp
fs
cmp
ret
fs
cmp
mov
into
fcoms
pop
mov
cmpb
and
cmpsb
inc
jmp
outsb
cmpsb
sub
out
jnp
sub
lret
push
sbb
test
sub
dec
add
ja
dec
andb
or
push
xor
sub
or
addr16
movl
popf
jne
mov
jno
lds
pop
cmc
stos
mov
dec
push
jp
pop
mov
cltd
or
inc
inc
sbb
cmp
shr
or
or
aad
lods
aas
cmp
jle
cmp
or
js
jns
pop
xchg
xchg
cmp
fwait
lds
add
fldenv
iret
es
add
mov
jmp
inc
repz
loopne
mov
std
mov
sub
push
mov
mov
test
lret
inc
out
jl
mov
std
insb
and
mov
enter
je
dec
in
mov
inc
dec
mov
nop
and
loopne
scas
mov
inc
ja
dec
fcomps
mov
jns
xchg
add
xchg
aas
jae
push
mov
pop
fimull
es
mov
xor
mov
push
negl
jbe
adcb
aam
lds
in
ja
cmpsl
jle
into
lea
ds
fidivrs
cmp
mov
divps
sub
loopne
mov
jnp
cmc
push
cmp
jne
cmp
fwait
push
nop
and
or
shrl
pop
jns
cmp
dec
pop
jbe
test
stc
int3
mov
dec
lds
or
mov
adc
lret
pop
fnstenv
ds
aam
cmpsb
sbb
xor
jnp
ljmp
jns
ds
jg
add
ret
push
lock
ret
xor
outsl
out
cmp
mov
add
gs
movsl
fcoms
dec
adc
sub
pop
adc
faddl
jmp
push
insb
fdivrl
in
push
ret
sahf
outsb
sub
imul
test
int3
inc
ja
mov
sub
jns
aas
mov
jne
jb
pop
cwtl
cmp
xor
inc
fxch
push
imul
mov
lret
int3
pop
xchg
in
adc
pushf
pushf
mov
push
sarb
or
mov
stos
or
jp
lods
push
mov
jb
mov
or
out
inc
cmc
mov
mul
mov
jle
jg
lret
out
xchg
lock
push
adc
iret
andl
cmpsl
stc
cmp
add
xor
shll
iret
xchg
and
aaa
pop
and
daa
mov
adc
mov
and
leave
fs
xchg
cmp
js
scas
int
pop
xor
push
pop
jg
push
mov
mov
pop
ret
mov
repz
inc
in
jle
into
fcmove
insl
and
aam
push
xlat
bound
mov
cli
lret
insb
cs
inc
cmpsl
notl
sahf
hlt
in
cmp
fucom
out
ret
test
and
mov
fldenv
sbb
xor
fwait
sbb
std
clc
cmp
clc
sub
xor
mov
add
xchg
jno
cmp
mov
xchg
xchg
push
scas
nop
jmp
inc
loopne
addr16
mov
jp,pt
mov
pop
jecxz
add
pop
xchg
adc
in
xchg
repnz
ret
push
xor
push
leave
sahf
mov
pusha
ret
sbb
adc
pop
lds
sbb
mov
inc
insl
fildl
cmpsb
testb
cmp
je
xchg
jo
cs
das
mov
loop
xor
lcall
faddp
or
push
ss
out
or
cmc
in
cmc
jns
loope
test
mov
or
and
xor
mov
mov
or
sbb
inc
inc
pop
into
sbb
jns
pop
ss
test
sub
pop
pop
mov
sbb
pop
push
int
pop
xchg
adc
and
jae
in
lcall
test
mov
orb
or
test
repnz
iret
movsb
pop
into
dec
sbb
aam
outsl
push
adc
das
aam
fcoms
jmp
pop
mov
pop
xchg
pop
mov
xchg
fsubrp
xchg
aam
push
mov
fnstenv
out
sub
movsl
pop
mov
jns
pushf
push
hlt
dec
and
fwait
add
and
jno
push
mov
sbb
int
inc
sub
jns
add
xor
adc
xchg
popa
fwait
cmpl
dec
call
dec
sbb
imul
add
ja
out
cmp
imul
cmp
adc
cld
shll
xor
lcall
test
pusha
sbb
mov
adc
pusha
lods
into
sbb
sub
sub
and
mov
mov
outsb
lcall
sbb
pop
aam
add
inc
xor
int3
cli
loopne
clc
arpl
fsubs
pop
repnz
dec
sbb
and
stos
push
push
mov
cmp
mov
test
into
or
es
ret
xchg
and
mov
xlat
pop
dec
inc
das
std
dec
loopne
dec
dec
incb
jb
jmp
xchg
add
mov
pop
nop
test
insb
aad
mov
adc
ljmp
mov
icebp
sub
or
cmc
dec
adc
sbb
out
cmp
ficompl
call
and
lods
inc
bound
call
test
stc
dec
pop
sbb
xchg
dec
repz
pop
or
jnp
std
pop
jl
shrb
mov
fldenv
mov
nop
loope
xchg
xor
and
scas
mov
or
int3
sbb
add
stc
inc
ficomps
push
fcomps
sbb
inc
cmp
fucomip
ljmp
dec
inc
push
lea
cltd
mov
out
jmp
dec
pop
push
addr16
idivb
push
xchg
repnz
scas
mov
arpl
add
adc
xchg
push
movsb
movsb
jmp
pop
pop
out
xor
jae
dec
iret
pop
shrl
sbb
pop
jb
in
add
hlt
scas
js
dec
test
inc
sub
sarb
xlat
jno
test
jl
push
mov
fbstp
repz
mov
pushf
sub
aas
ds
or
pop
andb
in
scas
scas
push
imull
mov
or
dec
xchg
mov
or
sahf
imul
lds
fld
or
js
and
loopne
xchg
jmp
xchg
cwtl
jo
mov
pop
ljmp
enter
push
fisubl
push
ljmp
fcmovnb
into
repnz
dec
pop
mov
imul
jmp
lret
jle
test
jg
mov
ds
sub
and
pop
or
stos
mov
fidivrs
xor
pop
add
fcompp
sahf
out
pop
pop
inc
jns
ror
inc
xchg
cmp
fidivrl
mov
mov
push
loop
xor
jecxz
inc
sub
ficompl
lahf
sahf
scas
andb
and
into
stos
outsl
leave
sbb
mov
fs
xchg
imul
movsl
rolb
cmp
in
int3
std
cmp
jns
or
aad
addl
cmc
jecxz
dec
xor
push
pop
mov
test
mov
pop
test
xlat
and
shrl
sar
in
adc
dec
inc
push
rol
scas
xor
pop
mov
add
mov
push
mov
xor
bound
push
xchg
mov
add
mov
icebp
fimull
lock
push
push
jno
scas
cwtl
jne
outsl
dec
lods
aas
lods
xchg
jo
cmp
and
xchg
jmp
inc
inc
int3
std
mov
dec
cmc
flds
dec
mov
movsl
inc
cmp
push
dec
mov
pop
int3
sub
shrl
ja
div
movsb
sub
inc
mov
pop
or
dec
push
cli
mov
pop
insl
or
dec
adc
cmp
movsl
add
call
dec
push
js
cld
cmp
std
shlb
pop
incb
adcb
jg
loop
imul
mov
loop
test
xor
je
inc
fnstcw
sub
rclb
pushl
adc
popa
aaa
push
rcr
push
push
pop
lcall
mov
insl
xchg
ljmp
sub
insb
in
xor
dec
rorb
jno
mov
lahf
mov
es
jmp
cmpsl
lods
or
jmp
jg
je
sbb
lock
jmp
cltd
cmp
imul
cmp
out
mov
xor
xchg
cmc
xchg
lret
lahf
fcmove
int
sub
out
mov
and
cli
sahf
mul
movsb
jge
data16
jg
int
mov
fwait
loopne
out
das
or
int3
fucomip
mov
ret
test
adc
push
pop
push
loop
rcrl
shll
mov
data16
dec
sbb
fsubr
jb
clc
xchg
cmp
add
inc
cmp
mov
cmp
in
inc
nop
cmpsb
mov
push
sub
and
and
mov
mov
movsl
pop
sub
insb
inc
jne
add
lds
aaa
xorl
cwtl
sub
pop
test
ja
or
jae
jmp
xchg
jle
lods
int3
int
dec
je
mov
jmp
faddp
int3
sarb
clc
sub
adc
test
or
mov
xchg
repz
pop
and
dec
jg
sbb
push
mov
pop
jge
jmp
jg
cmpsl
pop
jl
mov
into
out
enter
loope
xor
and
ja
loopne
xchg
mov
repnz
mov
in
fistpl
or
add
mov
mov
incl
sti
mov
jmp
add
js
mov
aam
push
mov
fimull
cld
mov
insl
lcall
mov
mov
push
ja
push
daa
cmp
lahf
add
mov
roll
repz
imul
mov
xor
les
invd
lds
clc
and
add
jecxz
shl
cltd
adc
and
jno
sahf
cmp
stos
adc
outsl
and
mov
jp
faddl
fistps
mov
sbb
cltd
inc
jle
sbb
cmpsl
mov
pop
mov
lds
iret
cmp
cltd
push
adcb
sub
push
cmc
pop
call
dec
in
jb
test
ja
ja
cmpsb
out
push
xchg
xchg
jnp
shll
fadds
xlat
mov
imul
sahf
push
aam
and
mov
or
push
lds
les
popa
add
push
fisttps
push
cmpsl
pop
cwtl
inc
loopne
test
data16
inc
fisttps
push
ja
test
pop
sub
cmpsb
sub
sbb
fs
sbb
mov
clc
sub
mov
and
sbb
ss
dec
pop
xor
insb
dec
stos
mov
jb
add
ss
insb
enter
dec
iret
iret
or
lds
push
add
push
orb
pop
popf
ret
loope
sub
jl
imul
add
and
sbb
ds
jecxz
inc
dec
test
js
stc
dec
ja
shlb
out
in
jp
adc
and
mov
fcoml
cmpsb
mov
insb
xchg
pop
mov
scas
fsubr
pop
or
push
sub
and
imul
push
popf
and
xor
inc
sbb
xchg
jmp
and
orb
lods
or
hlt
aaa
sbb
dec
hlt
mov
daa
sub
std
cmp
push
cmp
push
push
mov
xchg
data16
lea
mov
js
pop
sbbl
lcall
in
mov
push
pop
pop
and
xchg
jo,pt
jg
inc
out
outsl
pusha
dec
cmpsb
lds
lahf
and
out
ret
bound
popa
or
ret
stos
pop
nop
push
dec
jbe
je
es
mov
outsb
popa
fst
and
daa
mov
sub
xor
pop
pop
mov
mov
and
sbbb
mov
mov
inc
sub
push
ss
fcom
movsb
and
in
mov
aad
out
outsl
or
push
jae
std
ja
enter
sahf
and
mov
mov
cwtl
or
call
loop
mull
jecxz
out
rcrl
movsl
int3
or
outsb
jae
xchg
sbb
cld
dec
pop
hlt
or
pushf
push
subb
sbb
sti
cli
dec
xor
lods
add
loopne
mov
fsubrs
je
add
test
sub
adc
dec
mov
daa
dec
inc
pop
jle
jne
inc
jnp
rcrb
add
call
jnp
jge
lea
enter
pop
test
fcoml
jmp
ja
les
xor
jp
ror
jl
dec
cltd
xchg
jno
jge
sub
jae
subb
or
cli
ja
sub
jl
dec
icebp
stos
adc
cld
lods
jge
and
or
push
cmp
ja
sub
push
lret
jns
jne
out
mov
idivl
xor
sbb
cmp
es
add
jb
xchg
movsb
icebp
mov
std
push
or
scas
ljmp
idivb
cmpsl
mov
vhaddpd
int3
xor
sbb
fimuls
mov
inc
in
push
adc
clc
nop
push
test
mov
fnstsw
test
pop
add
cmp
mov
fsts
imul
add
jne
sbb
je
repz
xor
xor
inc
inc
js
jge
or
xchg
jno
stos
ret
dec
xchg
xchg
or
push
outsl
jl
jp
test
add
aaa
jbe
cmp
mov
out
jmp
imul
cmp
pop
mulb
mov
loopne
adc
xchg
imul
push
mov
lea
mov
mov
pusha
pusha
shlb
scas
jnp
in
xchg
push
push
adc
lcall
sub
icebp
sub
pop
jge
mov
pop
notb
out
icebp
insb
jne
fndisi(8087
fsub
mov
mov
adc
xchg
popf
fdivl
or
mov
jp
es
stos
or
insb
pop
inc
push
aam
fstpt
outsb
mov
rcl
pop
add
pop
xchg
fldl
outsl
cmp
shlb
test
jge
out
pop
fwait
aaa
pop
insl
jb
into
mov
cld
test
pop
test
and
sub
je
push
xor
sahf
lret
daa
insl
push
addr16
or
hlt
enter
pop
notl
fbld
in
lret
fbld
sub
mov
cli
push
hlt
xchg
cli
push
dec
and
fxsave
pop
mov
aaa
jbe
out
and
test
sbbb
scas
fnstcw
push
rolb
push
lds
jns
cltd
fnstcw
addr16
dec
lock
dec
shrl
sarl
mov
sbb
sbb
notl
mov
loope
addr16
jecxz
mov
insl
adc
pop
jae
adcb
adc
mov
mov
insb
test
mov
sbb
lahf
jecxz
xchg
xchg
pop
test
notb
jg
mov
popf
in
test
jb
in
xchg
scas
xor
push
rol
stos
shr
push
pop
pop
push
test
jl
not
sbb
cltd
mov
insl
bswap
or
call
int3
mov
adc
or
mov
mov
or
popf
jle
jae
roll
stos
ja
xchg
add
jns
xchg
scas
popa
fidivl
add
xchg
into
adc
mov
nop
and
mov
cmp
stos
mov
jo
cmp
mov
inc
xor
mov
dec
fwait
daa
cmp
dec
push
pop
cmovs
inc
je
and
scas
push
cmpb
mov
mov
int
pop
pop
js
mov
mov
dec
add
aad
sub
adc
push
in
movsl
or
push
imul
sahf
push
or
adc
outsl
mov
xor
cmc
repz
mov
jge
ret
sti
pop
mull
sub
jge
lahf
xchg
push
test
jge
xlat
aad
imul
testl
ret
mov
add
mov
adc
jp
popf
gs
test
jns
ss
jo
rolb
mov
lods
jb
push
inc
lds
test
je
add
dec
lret
nop
cmp
filds
sub
sbb
les
mov
or
add
outsb
dec
hlt
inc
add
dec
jge
and
xchg
xchg
jbe
sub
cmp
jecxz
in
pop
xor
mov
pusha
iret
xor
mov
jns
mov
push
gs
lock
xor
xchg
or
inc
cmp
stc
icebp
gs
mov
xor
jae
cwtl
cmpsl
cmpsl
into
mov
rcrb
cmp
ret
test
leave
mov
add
loopne
pop
scas
adc
push
xchg
sbb
shll
mov
or
mov
and
loope
push
sub
mov
je
xchg
push
and
ret
ja
inc
or
jecxz
adc
and
inc
push
and
pop
lds
xchg
or
inc
adc
pop
inc
in
lock
mov
push
jns
adc
push
sbb
dec
sub
in
add
aas
ds
jno
jns
aam
xor
fdivp
pcmpgtb
pop
push
jmp
and
jb
les
xchg
adc
popf
jp
pop
std
jg
cltd
imul
dec
push
sbb
popa
pusha
adc
mov
pop
and
aad
mov
stos
add
or
pop
xor
push
loope
ret
jnp
mov
xchg
aam
mov
cmp
adc
loop
loope
lea
shll
xor
mov
in
mov
fdiv
imul
repnz
pushf
je
cmp
and
cld
enter
adc
sub
iret
cs
push
push
les
sbb
imull
push
sbb
or
sti
mov
mov
stos
hlt
add
in
cmp
insb
and
test
fabs
stos
ret
jge
loopne
scas
xor
les
scas
shlb
xor
xchg
inc
lret
pop
jbe
xor
jmp
test
mov
xor
gs
sbb
adc
in
leave
divl
sbb
adc
loop
jbe
loop
dec
ret
adc
test
mov
loopne
push
fwait
cmc
out
rcrl
jne
jbe
fs
sub
cmp
mov
cmp
mov
shlb
daa
scas
push
sahf
int3
arpl
mov
or
mov
repz
ja
shl
andb
jmp
adc
or
xchg
enter
mov
out
inc
or
popa
ljmp
cmp
outsb
sahf
add
pop
or
mov
dec
mov
sbb
xor
roll
and
call
mov
pop
repz
mov
inc
ret
call
mov
adc
push
mov
outsl
sub
insl
insl
mov
lock
sub
xor
jle
cmp
or
xor
repnz
pop
cmp
mov
popf
out
pop
or
rcrl
ds
imul
pop
das
hlt
popa
jb
jnp
fcomps
add
ret
pop
jae
dec
mov
in
repz
add
test
movsb
xor
loopne
mov
sti
jbe
inc
pop
xor
push
sahf
fdecstp
dec
add
nop
jp
push
imul
pushf
mov
iret
fsubrs
shlb
pop
push
and
cmp
dec
mov
movsl
inc
inc
cwtl
ss
fs
daa
adc
popf
adc
lret
pop
cli
arpl
pop
or
mov
movb
repz
push
xchg
adc
dec
ret
gs
enter
mov
xor
int3
push
data16
inc
pop
and
ja
test
dec
and
adc
fs
mov
cmpsb
dec
pop
mov
add
cmp
jecxz
push
pusha
je
add
cmp
cmpb
jb
jae
xchg
adc
and
jo
call
adc
fldcw
sti
sti
add
rcl
push
leave
push
in
pushf
shlb
addr16
call
lahf
aad
cmp
cmp
xchg
scas
or
xor
pop
fsubr
mov
data16
loope
cmp
mov
lock
cs
clc
adc
xlat
in
mov
adc
jmp
scas
sti
cmp
lahf
sub
rcll
and
fstl
adc
jmp
mov
repnz
fdiv
std
mov
pop
mov
mov
jne
sbb
cli
mov
jge
stos
mov
adc
dec
and
push
jae
repz
enter
dec
push
js
adc
into
jo
shrd
push
push
xchg
dec
xor
jns
and
rorl
fstpl
mul
lods
sub
mov
mov
das
pusha
mov
int
mov
test
ret
roll
mov
cwtl
adcl
jecxz
test
pop
adc
jns
cltd
cmpsb
ret
push
push
outsb
and
push
cmpsb
inc
mov
inc
cli
insb
sub
hlt
dec
leave
xchg
push
mov
clc
cmp
movsl
fdivl
and
inc
jae
hlt
aaa
push
movsl
sub
mulb
xlat
dec
outsl
int3
lds
xchg
std
push
gs
sub
and
hlt
mov
cmp
test
mov
inc
mov
and
jbe
mov
call
popa
cmp
push
mov
shrl
addr16
out
inc
lret
mov
adc
cmp
pusha
pop
xlat
add
adc
outsb
mov
xchg
mov
mov
aaa
cmp
add
movsl
jbe
je
lret
iret
push
test
insl
xchg
jns
mov
cwtl
enter
lds
sbb
push
pushf
mov
xchg
fbld
mov
lods
sarl
rorl
inc
xor
mov
in
enter
mul
pop
jae
test
xor
lock
out
mov
jmp
loop
xorl
pop
shl
addr16
adc
clc
cmp
pushf
jns
pop
dec
out
and
jge
loope
jo
std
push
pop
pop
popa
push
imul
iret
ja
imul
dec
inc
jo
stc
shr
loope
in
sub
pop
insb
push
fstpl
add
mov
inc
out
mov
lock
xchg
jp
or
in
xor
mov
xchg
adc
ds
add
test
mov
adc
mov
pusha
repnz
inc
lea
mov
cmp
sti
lods
xor
sbb
data16
jp
cmp
mov
sbb
dec
int3
aad
repz
faddl
arpl
xchg
filds
push
dec
dec
mov
cmp
mov
inc
loopne
adc
cmp
ss
and
add
loopne
in
sahf
and
add
out
jecxz
pusha
lock
arpl
pop
dec
aaa
loop
sbb
mov
daa
sub
out
popf
inc
fsubp
xor
push
in
fistl
xor
add
push
mov
push
lret
mov
mov
mov
ret
das
mov
inc
cmp
icebp
stc
add
jl
sbb
dec
out
fimull
nop
mov
pop
fsubrs
cld
icebp
sub
fwait
rcr
aas
or
sar
arpl
and
jns
shrl
adc
fldz
mov
mov
adc
sub
lcall
adc
stc
and
push
jbe
mov
sbb
fisubl
out
jne
push
pop
mov
jne
xchg
loope
mov
imul
mov
pop
xor
xlat
aaa
mov
xor
mov
jle
fisttpl
jae
popf
sbb
xchg
sub
pop
sbb
out
mov
sbb
adc
inc
or
pop
cli
movsl
bound
mov
ja
sarb
jns
xchg
cmpl
mov
fbstp
mul
inc
rcr
test
into
inc
adc
jp
scas
outsl
adc
test
fidivrs
xchg
xchg
adc
adc
sub
cmp
andl
or
fistpl
out
cs
mov
lret
and
fnsave
filds
or
iret
data16
push
inc
aad
mov
push
jb
push
cltd
xchg
sub
mov
clc
call
cmpsl
sub
jns
and
fsubrs
incb
sbb
lea
cmc
push
and
push
inc
mov
inc
inc
and
lea
sub
das
and
nop
popf
adc
test
jo
sahf
lret
lock
xor
shrb
out
and
mov
loopne
mull
push
cmpsl
subb
push
pop
sbb
movsb
lret
scas
ret
roll
mov
test
ja
dec
jl
iret
ljmp
jne
sarl
push
or
inc
sbb
or
imull
inc
sub
lods
dec
pop
jg
imul
push
cwtl
cmp
sub
roll
repnz
test
push
lcall
mov
sbb
in
je
or
sub
rorl
cmpb
test
sbb
addl
sbb
add
jae
inc
out
cmc
into
pop
adc
fdivl
push
push
sbb
call
fnsave
adc
cld
mov
out
andl
sub
bound
fldt
out
shl
insb
and
jo
xchg
mov
push
and
nop
inc
in
sub
in
sub
add
dec
pop
add
jg
jmp
fadds
in
out
cmp
mov
sbbl
imul
dec
add
cmc
fnstsw
ja
mov
aaa
jecxz
es
out
jle
sub
icebp
mov
cmp
inc
popf
dec
adc
fbld
push
sub
inc
icebp
insb
in
andb
leave
or
push
xor
jge
inc
mov
adcl
sbb
pushf
fisubrs
movsl
jno
cli
loop
and
movsl
push
gs
daa
data16
jae
jge
xchg
sub
jge
add
dec
clc
push
dec
gs
jbe
jmp
shlb
sub
stos
scas
out
push
add
add
insb
mov
loopne
xor
mov
icebp
xchg
sub
ret
les
dec
pop
xchg
js
fchs
xchg
rorb
sarb
lcall
pop
push
loopne
sarl
mov
adc
addl
daa
xchg
mov
test
mov
jl
xchg
push
icebp
shll
or
in
mov
neg
xchg
cmpsl
inc
dec
xchg
stos
dec
cli
notb
cmpsl
sahf
xchg
out
add
mov
in
mov
testl
fdiv
lcall
xchg
les
adc
jbe
mov
out
test
sarl
cs
pop
arpl
jae
xchg
sbb
pop
jecxz
inc
daa
and
jae
sarl
lods
mov
xchg
mov
and
mov
sub
out
cmpsb
bound
hlt
add
cmp
inc
push
mov
test
push
shrb
stc
loope
iret
sbbl
fstps
mov
dec
sbb
xor
mov
stos
aam
rorb
and
clc
ror
daa
mov
gs
or
sbbl
clc
jno
movsl
loopne
add
jmp
pop
aas
fstl
std
adc
push
mov
std
js
test
lret
and
aad
fs
jbe
loopne
icebp
cmp
push
mov
cmp
or
movsl
lds
insl
sub
inc
subl
jb
mov
adc
adc
outsl
sub
push
sar
std
test
aad
fdivp
out
call
cwtl
scas
cs
mov
fldcw
mov
in
jno
xor
jle
int
pop
cmpsb
imul
or
gs
mov
shr
mov
xor
clc
jg
sub
lea
mov
jo
enter
fwait
int
ljmp
dec
pop
sub
adc
push
mov
aam
into
and
sahf
jecxz
push
rol
jmp
lea
sub
xor
cli
sub
xor
aad
ss
push
frstor
pop
shlb
mov
mov
lock
xor
mov
or
fisttps
mov
cmp
movsb
dec
dec
gs
mov
cmp
mov
adc
ret
mov
sarb
popf
sahf
push
mov
loope
cli
les
daa
je
pop
cmpsb
loopne
sub
mov
mov
fs
jns
and
fidivl
test
pusha
dec
rcll
shlb
pop
push
mov
sub
jl
cmp
jo
sbbl
fcomps
lret
movsl
sbb
std
and
sbb
mov
push
shl
addl
xchg
insl
sbb
insb
fnstenv
mov
mov
or
out
mov
xchg
mov
push
jecxz
into
jb
in
fnstcw
pop
scas
aad
dec
insl
lret
fucom
jle
dec
and
ljmp
jg
in
stc
inc
cltd
rcrl
add
inc
sahf
lret
xlat
lret
cs
pop
ret
lock
mov
cltd
aas
sahf
jmp
sub
hlt
lahf
mov
lods
cld
cs
int3
repz
insl
mov
and
rclb
cmpsb
mov
dec
addr16
ds
mov
loopne
in
push
clc
fldl
adc
add
or
jae
jmp
es
repz
in
out
push
bound
sbb
mov
or
pop
add
xchg
shrb
hlt
mov
and
popa
mov
inc
test
enter
fildll
fisubrl
data16
inc
in
flds
stos
mov
sub
mov
pop
je
into
pop
aam
push
xor
sub
sbb
sbb
inc
and
call
adc
sti
add
std
out
pop
pop
sbb
ljmp
stos
and
push
imul
aam
lock
lret
out
mov
add
inc
pushf
sbb
sbb
mov
or
lock
mov
inc
sub
push
dec
lahf
inc
mov
loope
push
test
sub
into
sub
and
rcl
stos
mov
out
fmuls
pop
xchg
in
push
int
sub
aaa
mov
sub
add
add
btc
mov
xor
mov
in
shlb
rolb
ficomps
out
push
mov
jae
add
ret
incb
into
adc
mov
mov
lods
or
or
dec
mov
jge
lret
or
and
push
pop
and
lret
sbb
sbb
outsl
out
xor
push
outsl
inc
sub
pop
call
subl
xchg
aam
inc
inc
and
jae
mov
or
rol
rcll
sub
xor
fimull
adc
test
xchg
jl
add
push
adc
arpl
inc
fcoml
rorl
dec
int3
icebp
out
or
mov
cs
jmp
mov
add
cs
fiaddl
jge
xchg
mov
test
and
movsb
out
aad
jg
ret
push
sub
cmp
push
or
test
hlt
insb
das
repz
xor
imul
inc
push
int3
out
xor
imul
push
cli
add
push
dec
fs
xor
popa
pop
rcll
inc
pushf
cmp
xor
dec
movsb
rolb
pop
aam
stos
rorl
cmp
mov
xchg
ja
sbb
or
mov
sbb
add
or
fwait
mov
jle
xchg
je
icebp
pop
mov
mov
cmp
clc
fmuls
mov
in
sti
out
test
aaa
push
imul
out
stos
ret
mov
in
xlat
mov
in
loop
push
mov
xchg
cmp
shl
adc
or
mov
cmp
sarl
mov
aas
jno
or
xchg
jno
jnp
popa
lcall
pop
jg
cltd
mov
inc
adc
roll
push
pop
je
cli
es
cmp
cmp
mov
ret
ds
shll
scas
sbb
sbb
pop
call
mov
mov
jno
testb
sub
jnp
in
jecxz
daa
jg
push
sbb
or
jmp
ret
and
mov
mov
daa
mov
shlb
mov
jmp
lret
push
pusha
jnp
xchg
xor
fs
dec
mov
cld
jle
out
cmp
inc
xchg
xor
dec
jge
imul
pop
jl
dec
mov
sbb
mov
int3
xchg
jo
inc
repz
daa
pop
shl
adc
pop
std
lods
arpl
add
push
dec
mov
aaa
lahf
subl
ljmp
jecxz
addr16
icebp
sbb
cmpsb
mov
mov
rorb
mov
icebp
cmpl
out
sub
jo
test
iret
mov
ds
das
push
add
test
ret
loopne
lds
or
mov
push
mov
popf
popa
cmp
sub
mov
int3
outsb
cmp
cltd
lds
xor
mov
push
sub
pop
dec
mov
add
pop
and
jmp
mov
movsl
add
push
js
sub
pop
dec
mov
or
mov
jnp
xorb
push
mov
jg
mov
xor
mov
sbb
out
out
ret
jg
into
in
xor
dec
loopne
lahf
jmp
xchg
shrb
stc
or
std
adc
cmpsb
pushf
sbb
inc
or
mov
outsl
loopne
cmp
in
inc
cs
add
cmpsb
xchg
shll
popf
aad
lret
xor
negb
mov
and
dec
pmaddwd
xchg
xor
jmp
je
mov
lcall
mov
aam
scas
cmp
call
sbb
xchg
jno
ljmp
test
ret
pop
loopne
lahf
sbbb
cmp
cli
cmpsb
push
stos
pop
sti
aad
movsb
xchg
jne
imul
lret
sarb
fiadds
jne
adc
pop
mov
lods
lcall
loopne
mov
fistpl
cmp
or
add
fistps
dec
stos
pause
jl
daa
outsb
nop
imul
dec
xor
push
pop
inc
pop
pop
xorb
jbe
jae
ds
jmp
cs
inc
insb
xchg
dec
dec
movsb
adc
lods
adc
xchg
ljmp
jmp
fdivrp
or
bound
adc
mov
mov
mov
je
fistps
in
sti
lahf
xlat
cs
sub
lods
pop
into
adc
and
sub
xchg
add
add
xchg
in
enter
cmc
imul
enter
sarb
out
sbb
sbb
test
stos
mov
pop
je
xchg
inc
jle
cmc
lods
sub
or
pop
rolb
pop
insl
xchg
xchg
xor
ljmp
mov
mov
std
loope
shlb
adc
inc
addb
movb
xchg
lock
inc
int
dec
std
imul
addr16
movsb
lods
js
add
ja
into
bsr
stos
sub
inc
dec
pusha
ret
ds
dec
mov
pushf
repnz
int
fnstenv
ret
in
xor
js
xorb
pop
popf
jns
jno
out
xchg
lcall
push
and
fcomp
test
inc
mov
mov
push
push
adc
cmp
mov
mov
inc
xor
or
dec
jp
negl
xor
push
sub
mov
inc
lods
in
push
je
insb
jno
pop
add
cmpl
jecxz
aas
and
sbb
sbbl
rcl
daa
sbb
pop
scas
sub
or
les
rcrl
out
mov
cmp
cmpsb
movsl
push
mov
jmp
clc
loop
lret
and
outsl
call
decb
mov
sbb
xchg
fsubr
ficomps
lea
fsubs
movsb
les
lret
insl
sahf
fsubs
out
xor
mov
push
xor
lcall
adc
and
fiadds
inc
pushf
mov
ret
iret
in
push
test
orl
push
popa
stos
sub
out
dec
les
xlat
pmullw
jecxz
mov
dec
and
xchg
ds
loope
pushl
stos
fidivrl
pop
pop
adc
push
roll
or
mov
roll
cmp
pop
fnstcw
pop
shlb
xchg
mov
popf
dec
std
test
mov
add
jmp
cwtl
cmpsb
sub
inc
sti
lret
in
mov
rcrb
mov
lods
stos
bound
leave
stc
push
mov
ds
es
std
in
jg
xchg
sbb
xlat
mov
jmp
clc
push
mov
lret
pop
xchg
xor
mov
lahf
pop
and
xchg
add
movsb
lods
fisubl
adc
cmpsb
push
adc
adc
pmulhw
xor
mov
jbe
xor
pop
es
in
jo
mov
pop
je
ret
cld
shrb
dec
loope
les
in
mov
out
push
in
inc
jno
pop
mov
int
mov
xchg
vcvtsi2sdl
rorb
mov
in
ss
and
subl
mov
push
loopne
imul
dec
cmp
jle,pn
insl
mov
jecxz
fiaddl
sbb
xchg
bound
sbb
push
in
lock
push
add
mov
pop
xlat
fwait
roll
movsb
jecxz
fldcw
orb
xchg
pop
cmp
ret
adc
leave
inc
out
push
cmp
pop
bound
add
ds
jg
lods
cmp
adc
stc
js
jecxz
les
add
pop
ficoml
add
insl
pop
inc
add
movsb
adc
push
das
stos
ja
pop
mov
aas
lods
add
test
xor
fisttps
sub
imul
arpl
xor
lods
stc
fs
cmc
cmc
iret
aad
dec
or
or
pusha
and
mov
add
movsb
loop
adc
into
sub
cld
aad
ret
push
aad
into
cmpsb
gs
test
jns
cmp
test
imul
int
lahf
out
data16
fwait
mov
or
push
and
push
rcrl
lret
mov
into
and
scas
and
ret
dec
sub
jle
jge
sti
adc
loop
push
pop
pop
rol
subl
cmpsl
out
xchg
js
push
jle
xor
scas
je
gs
cmpsb
pop
xlat
lds
lret
les
add
xchg
push
shll
dec
inc
xorb
arpl
sbb
pop
sub
mov
sub
int3
call
mov
xlat
aad
in
sub
aaa
adc
int3
cmp
and
into
mov
sub
sahf
cmp
pop
jbe
push
rorb
stc
jbe
ljmp
adc
subb
cwtl
and
movsb
jp
push
popa
stc
insb
les
repnz
adc
das
mov
stc
push
leave
and
cmp
repnz
fwait
js
cs
xor
sbb
aaa
jo
pop
and
xchg
add
cmp
inc
movsb
jecxz
faddl
sti
xchg
mov
les
pop
add
jno
lcall
pusha
pop
testb
jp
pushf
xor
bound
add
test
pop
mov
ja
inc
cmp
loopne
jno
cmpsl
stos
std
push
loopne
sub
push
sub
inc
insb
lret
xchg
into
xchg
mov
int
mov
add
std
jecxz
xchg
jl
inc
cld
repnz
insl
sub
nop
pop
aad
xor
insl
pop
push
add
call
inc
and
sbb
jecxz
addb
dec
adc
es
push
push
xchg
cmp
addb
xor
and
xchg
cli
jl
lods
add
cmpb
int3
push
arpl
adc
push
lcall
sbb
ret
mov
inc
aaa
or
loopne
sbb
jmp
scas
lods
das
imul
jle
pop
cmc
jg
inc
data16
cld
mov
test
imul
shll
lcall
addb
mov
xor
add
cld
and
sbb
adc
cmp
rclb
mov
cmp
imul
orl
mov
adc
push
faddl
xor
das
lods
in
nop
xor
movsb
or
inc
inc
fsubrp
stc
sbb
gs
pop
xor
sbb
cmc
push
mov
pusha
jmp
jg
sub
stos
lods
enter
fwait
repz
or
push
fidivrs
leave
das
mov
add
dec
xchg
stos
mov
sbbl
xchg
inc
adcb
mov
loope
mov
xchg
and
lds
test
xchg
bound
jae
es
into
das
sub
and
sbb
push
cmp
inc
jecxz
into
cmc
fptan
and
mov
xchg
pushf
lahf
sbb
pop
lcall
aas
jmp
iret
dec
add
sti
dec
mov
clc
mov
ret
std
sbb
sub
outsl
or
lods
xchg
xchg
loopne
add
mov
cs
lret
out
and
aad
shlb
and
add
outsl
sbb
jbe
ss
into
lods
dec
in
mov
andl
xorl
shl
mov
jns
push
mov
cmp
push
xchg
cmp
lds
sbbb
fcmovnu
enter
xor
adcb
lret
push
inc
mov
sbb
out
movl
sti
idivb
add
pop
and
ret
xor
xchg
mov
jnp
inc
jmp
mov
pop
lods
pushf
stos
hlt
iret
test
push
pop
xor
clc
dec
inc
push
jg
xchg
sub
imul
adc
pushf
jo
femms
dec
adcl
imul
jg
push
jp
cmp
jecxz
cmp
lods
jg
mov
and
pop
aad
mov
xchg
lods
icebp
cmp
mov
stos
jae
int
adc
jns
pop
mov
popf
or
leave
lds
and
xor
ret
cmp
pusha
push
iret
and
xchg
add
jle
inc
inc
adc
arpl
mov
mov
mov
data16
mov
idivl
ret
std
sbb
pop
shlb
xor
jmp
stos
mov
mov
xchg
lods
int3
cmpsb
xchg
and
js
jne
or
loope
std
repz
inc
in
push
pop
and
int3
push
cmp
dec
es
mov
mov
adc
push
fdivs
pop
xor
pop
pop
xchg
xchg
rcrb
imul
mov
adc
sti
sbb
push
arpl
bound
xchg
icebp
in
or
add
xor
inc
cmpsl
sub
aam
mov
sub
xor
sahf
jmp
mov
push
idivb
ret
xchg
adc
inc
xor
mov
rcr
xchg
mov
lock
pop
stc
lock
pusha
mov
jg
or
int3
sub
sbb
bound
add
or
ljmp
xor
movb
jmp
adcb
fmul
push
mov
jbe
je
mov
idivl
test
lods
les
pop
dec
pop
jecxz
xchg
xor
out
xchg
jg
lock
xchg
fisubs
fmuls
test
cltd
and
jae
fnstcw
pop
mov
sbb
or
and
loope
mov
or
add
sub
xchg
jg
les
shrb
or
sub
test
sub
test
adc
adc
sbb
sti
push
sbb
imul
test
je
mov
jg
mov
gs
ficoms
es
jnp
add
rcrb
inc
adc
je
popa
mov
stos
daa
jno
push
and
aaa
push
mov
in
int
stos
pop
test
xchg
cmp
inc
cmpsl
out
mov
movsb
dec
outsl
shrd
add
inc
dec
popf
mov
inc
loopne
jp
out
push
aad
mov
cmp
sbb
add
cmp
jb
push
dec
cli
popa
pop
mov
das
xorl
mov
push
push
andl
enter
mov
lea
pop
das
and
mov
push
sbbl
ret
aad
cmp
jge
jl
adc
scas
in
add
js
mov
in
sahf
popf
sbb
imul
adc
cmp
arpl
pop
pushf
jp
pop
enter
popa
sub
loop
sbb
jae
ret
testb
out
or
xchg
adc
and
fsubr
dec
cmp
lahf
sbb
gs
jmp
out
inc
sbb
inc
xor
es
and
mov
and
mov
addr16
jg
ret
aas
sbb
xchg
fisubs
pop
adc
mov
lret
scas
gs
mov
cmp
repnz
scas
negb
cwtl
lock
jo
nop
les
mov
idivl
mov
lret
or
insl
popf
push
sti
sub
xor
cmp
cs
pop
flds
popf
sbb
in
in
jecxz
and
sbbb
clc
mov
pop
dec
xor
lds
stos
push
repz
jnp
sub
sbb
ficompl
arpl
bnd
imul
or
mov
icebp
xlat
pop
adc
pop
adc
das
scas
call
orl
jno
add
xchg
lcall
cmpsb
jbe
call
into
lods
ret
push
mov
xor
cmpsl
inc
out
shrl
jle
insb
scas
fisubl
jne
in
dec
dec
ficompl
mov
xchg
sahf
jae
mov
or
lods
sub
add
xchg
sub
aad
pop
data16
pop
fisubs
cmp
xchg
in
ss
sbb
je
pop
mov
inc
xchg
mov
or
test
mov
xchg
pushf
daa
rolb
sbb
outsl
push
fs
pop
cmp
sbb
insb
nop
mov
xor
mov
gs
mov
mov
es
push
mov
push
mov
push
cmp
lret
mov
mov
sbb
pop
dec
insb
mov
xor
pop
or
xchg
out
pop
push
mov
enter
icebp
push
loop
loopne
xchg
push
call
repnz
push
jbe
mov
mov
shll
dec
cmp
dec
loop
lds
sub
les
roll
mov
fwait
fwait
mov
loop
xchg
adc
jne
sub
test
push
out
xor
and
jns
outsb
js
mov
sub
hlt
push
jns
pushf
lret
clc
mov
add
mov
sbb
push
imul
xchg
mov
adc
int
fwait
lods
inc
out
pop
vpmullw
icebp
jns
rdmsr
loopne
and
xor
mov
aad
xor
cld
mov
xlat
cmc
sbb
sub
mov
cld
jg
jns
pop
filds
in
and
pop
xchg
in
in
push
lcall
iret
mov
jecxz
insl
dec
adc
or
adcl
jns
sub
ds
lea
jp
loopne
mov
imul
mov
pop
adc
jle
inc
xor
push
pop
jg
xorb
hlt
add
pop
dec
pop
mov
roll
aad
pusha
fnstsw
pop
dec
mov
mov
sarb
inc
xchg
inc
sar
mov
dec
add
gs
fwait
lods
out
imul
dec
faddl
pop
or
inc
push
mov
in
jo
mov
cmp
mov
insb
ss
mov
mov
sub
dec
inc
fs
call
dec
test
dec
sarl
and
aas
loope
loopne
push
mov
xor
mov
daa
ret
cld
test
pop
lahf
adc
not
push
dec
xchg
or
out
loope
out
and
mov
imul
xchg
loop
jo
clc
push
test
std
out
jns
or
imulb
mov
mov
je
inc
cmpsb
inc
fildll
arpl
stos
mov
adc
mov
pop
push
mov
adc
push
je
sar
mov
jecxz
mov
jl
jne
stos
out
fdivrl
rol
cmpsl
ljmp
and
mov
popf
cmpsb
mov
pop
pop
int3
insl
mov
sbb
jnp
pop
cld
xor
xchg
imul
int3
mov
add
pmuludq
outsb
loope
push
fstpt
inc
nop
outsl
pop
rcl
lods
mov
mov
shl
mov
pushf
lods
jecxz
add
clc
jle,pn
pop
dec
loop
lock
outsb
jp
rcrl
cmpsb
sbb
inc
cmpsb
test
jecxz
mov
daa
lods
mov
rolb
js
jmp
je
das
jno
mov
les
mov
inc
out
nop
imul
jecxz
js
inc
mov
ret
mov
jl
cmp
fimull
cmp
loopne
adc
or
xchg
push
mov
adc
xchg
into
outsl
mov
fidivrl
iret
and
push
or
and
popf
sbb
or
das
adc
scas
pusha
add
mov
jmp
xchg
sub
mov
sub
xor
test
mov
cmp
push
jb
and
nop
push
add
mov
ljmp
fwait
rcrl
pop
jbe
push
fcomps
sbb
dec
inc
mov
int
sub
imul
out
jb
in
idivl
cmp
dec
popa
sub
insl
icebp
in
cwtl
inc
inc
and
cs
mov
loopne
xchg
push
xchg
adc
mov
sbb
pop
js
stc
pop
les
inc
pop
dec
push
xchg
sarb
dec
ret
pop
mov
pop
pop
pop
or
int3
cli
mov
jb
lock
clc
push
enter
xchg
jp
add
mov
push
add
jecxz
xchg
xor
add
xor
add
daa
leave
jbe
out
cmpsb
imul
imul
in
negl
sub
aaa
lret
popf
or
sbbb
jno
aaa
cmc
add
lret
push
push
xor
xor
jb
and
push
dec
shll
cwtl
loopne
ljmp
xchg
or
stos
inc
lods
inc
lahf
or
testb
andl
ss
addr16
fdivrs
xchg
and
xor
push
popf
mov
daa
mov
into
sub
push
add
inc
sahf
xchg
push
sti
cs
jg
ljmp
mov
xchg
stc
call
inc
jl
call
xchg
adc
adc
bound
add
pushf
inc
mov
cs
daa
insb
fnstsw
cmp
inc
cltd
ss
or
nop
pushf
ds
repnz
pop
add
movsl
cwtl
mov
testl
repz
loop
jns
mov
inc
iret
imul
aam
sub
mov
xchg
or
stos
jbe
lret
jbe
xchg
aaa
pop
cmp
int
or
jmp
loop
dec
inc
ret
dec
push
xchg
fstl
pop
push
mov
lods
mov
xchg
fcompl
jecxz
fisubrs
pop
decb
test
fistps
insl
cmp
xor
lods
xor
lahf
mov
cmp
dec
add
jge
inc
in
cld
inc
daa
pop
pop
iret
pop
shlb
mov
jbe
test
inc
mov
mov
fwait
addr16
mov
ret
js
inc
pop
aas
sub
ss
push
ret
mov
ljmp
stos
mov
out
loopne
xor
add
int3
mov
sar
xor
push
inc
xorb
mov
mov
pop
and
icebp
jmp
xor
in
shr
xchg
cmp
xchg
shl
push
nop
mov
aad
test
lods
cmpsl
lds
cltd
imul
xor
testb
aad
pop
loop
pushf
push
pop
in
push
in
je
inc
sbb
out
addl
out
test
or
inc
mov
pop
inc
mov
pop
sbb
in
mov
jmp
push
jns
fnstsw
ja
push
sbb
adc
inc
fisubrs
sub
lcall
cmp
fwait
sbb
mov
call
lea
ret
enter
es
push
inc
int
stos
stos
pop
dec
sbb
jmp
mov
xchg
divb
cmp
add
xchg
cmpsb
test
lds
or
mov
jecxz
ficompl
mov
push
cs
or
divl
aad
inc
shl
dec
jo
jle
pop
pop
pop
into
das
pop
pop
popf
sbb
aam
insb
repz
push
loop
ret
pop
mov
jns
add
add
out
mov
test
enter
sahf
xor
inc
stos
push
inc
sti
push
enter
jo
add
or
pop
nop
shlb
xchg
lods
cmp
xchg
pushf
xchg
aaa
cwtl
push
xor
dec
popl
pop
lea
mov
xchg
jge
outsl
xchg
out
jns
test
stos
int
std
fildl
jge
cmpsl
loopne
out
adc
push
negb
ja
push
leave
sbb
rcrb
push
add
loope
clc
xchg
jecxz
pop
push
fmuls
pop
test
mov
sbb
fstpl
out
pop
inc
pop
xchg
and
push
xchg
add
adc
sub
or
mov
test
mov
dec
push
push
imul
stos
into
mov
mov
lds
repz
hlt
in
gs
sbb
or
orl
out
xchg
dec
call
mov
fists
leave
enter
mov
ljmp
bound
shll
mov
xlat
addr16
xchg
jnp
lock
inc
testl
aam
icebp
mov
mov
adcl
fs
aaa
pop
jecxz
mov
and
adc
out
jmp
pop
add
lcall
xchg
icebp
test
push
or
dec
sbb
jmp
js
xor
cmp
in
cmp
test
inc
adc
jecxz
and
adcl
or
loopne
in
push
hlt
nop
and
xchg
cwtl
in
popa
out
shll
push
add
and
mov
jo
ret
cmp
std
or
xchg
repz
fisubrs
add
loope
jg
sbbl
xchg
pop
stc
push
loopne
xchg
add
inc
dec
mov
cwtl
incl
test
sub
or
jno
sub
mov
or
mov
ljmp
ja
outsl
cltd
cwtl
testb
aad
sub
fcoms
imul
fisubs
xchg
dec
adc
out
pop
push
jns
jno
sub
mov
adc
sub
out
inc
push
jns
into
sti
lret
aaa
testb
lods
shrl
or
inc
fstpl
xchg
xchg
cmp
fwait
sti
je
cmp
fwait
sti
push
xchg
xor
cmc
pop
dec
add
outsl
mov
in
je
fwait
cmp
addr16
popa
cs
sti
or
incl
icebp
test
setne
ds
adc
fistl
imul
inc
ret
push
dec
aas
sub
dec
and
jno
push
pop
test
xorl
test
jp
mov
jle
aam
insb
and
mov
mov
pop
rcrb
lret
mov
add
popf
fcoml
dec
sub
mov
daa
inc
loop
mov
and
or
hlt
mov
cmc
inc
outsl
mov
jb
jae
imul
in
inc
aas
cmp
dec
lea
mov
adc
shll
cs
mov
cltd
int
jp
mov
loopne
arpl
pusha
xorb
loop
lcall
push
xor
pop
fldenv
xor
insl
int3
stos
jno
pop
pop
gs
movsb
clc
sub
out
cmpsl
push
mov
pop
mov
adc
jo
cmp
jae
sarl
pop
sti
pushf
inc
outsb
outsb
and
jo
gs
loope
inc
cmpsb
mov
mov
leave
mov
pop
push
xor
inc
push
hlt
sti
dec
adc
and
outsl
jge
sub
cli
popf
cs
push
fildl
cmpsb
cltd
ficoml
fldl
arpl
rolb
or
jnp
sbb
pop
subl
dec
mov
cmp
js
rolb
add
std
repz
jo
iret
push
call
mov
outsl
cmp
jle
cmp
xchg
lcall
inc
jne
pop
hlt
fisubl
and
pop
lea
bound
inc
mov
cmp
lret
ja
and
stos
pop
and
jp
in
jg
sbb
sbb
sbb
testb
add
cmp
xchg
pusha
aas
ljmp
pop
or
xchg
push
and
mov
shlb
outsb
lea
and
add
jno
out
enter
mov
jle
lock
xor
adc
pop
or
dec
insl
jno
cmp
mov
pusha
mov
sbbl
int
push
loopne
jno
hlt
push
cli
sub
jbe
test
daa
and
sbb
out
stos
push
jp
js
jg
in
bound
les
sbb
andl
dec
mov
sub
add
mov
shlb
and
pop
fadds
fcoml
inc
adc
pusha
clc
cli
mov
je
jle
sub
pop
pop
xor
and
fisttpl
xor
sub
aas
clc
xchg
in
mov
leave
xlat
out
and
aas
push
xchg
jle
mov
jmp
sbb
ret
imul
loopne
xlat
lods
loope
mov
rol
push
push
iret
adc
js
adc
out
cwtl
cmp
cwtl
gs
ficoml
sbb
or
lahf
add
insb
es
in
rcr
push
test
xchg
dec
dec
fwait
lret
mov
outsl
pop
lret
enter
mov
pop
pop
cmpsb
leave
add
or
push
cmpb
sub
or
cmp
loop
scas
mov
in
clc
add
fadds
sub
aad
test
loope
in
dec
stos
lret
push
add
ss
jnp
jno
out
insb
jae
nop
outsb
mov
into
cmp
fidivl
cld
sbb
out
mov
loopne
movsb
clc
sti
lret
inc
imul
cmp
push
jmp
sbb
testb
jmp
jbe
dec
xorb
xchg
data16
and
dec
jle
imul
jae
inc
xor
pop
mov
mov
mov
or
ljmp
dec
xchg
and
or
aas
push
sahf
clc
and
lcall
jg
lods
fmul
adc
sbb
outsl
fistpll
cmp
mov
icebp
pop
xchg
aad
jg
shrl
nop
rol
lock
mov
fwait
sbb
js
add
mov
lock
mov
clc
xchg
adc
std
aas
and
and
add
nop
mov
out
rcll
mov
jp
mov
xor
jecxz
cmpb
push
or
mov
movsl
and
jne
or
sub
inc
fidivrs
andb
leave
lds
xor
or
enter
mov
dec
xchg
add
mov
xchg
mov
fisttpl
mov
inc
or
xchg
test
jnp
out
aas
jb
pop
jae
jbe
xor
subb
stos
xchg
pop
sub
or
imul
cwtl
jp
bound
test
lock
testl
add
mov
mov
es
mov
pop
inc
adc
mov
movsl
addb
cmp
out
mov
dec
sti
outsl
pop
loope
or
ja
shr
pushf
push
pop
call
pop
pop
mov
xor
shll
xchg
add
xor
fs
xor
push
repnz
test
rep
clc
add
xor
fisttps
mov
pop
jp
test
in
fsubl
or
jae
sub
pop
or
xlat
and
lods
dec
int
out
pop
mov
push
jg
inc
mov
and
dec
jl
ret
repz
and
dec
mov
adc
ja
fs
sti
test
insl
xor
shlb
ss
jo
xchg
push
xchg
jno
notb
xor
and
dec
mov
push
mov
sbb
loope
cs
mov
mov
sub
or
or
loope
mov
out
mov
dec
loope
mov
push
data16
pop
inc
dec
rcl
aam
fiaddl
inc
mov
leave
stos
xchg
push
push
fcmovnb
pop
mov
loopne
pusha
pop
bound
aad
mov
mov
xchg
out
mov
lds
jns
xchg
std
jns
ja
icebp
int
fs
jae
pop
and
xor
int
xor
and
nop
adc
or
pusha
jne
scas
pushf
mov
hlt
xorb
lock
sub
aaa
push
push
or
gs
sbb
inc
fs
sub
mov
adc
mov
jg
dec
ja
mov
lods
sbb
add
jne
pop
pop
xor
in
dec
fcompp
cltd
sub
incl
mov
lock
mov
test
shrb
dec
xlat
sbb
sub
repnz
xchg
mov
sub
inc
lock
dec
jp
lret
push
bound
inc
add
xor
push
mov
xchg
lahf
cmp
mov
pop
rcll
dec
xlat
imul
aaa
push
test
shll
pop
pop
daa
popf
out
inc
in
mov
mov
cmp
gs
es
jnp
sti
imulb
dec
sbb
or
jl
lods
insb
ds
mov
andb
jne
xchg
inc
sahf
jbe
cmpsb
cmp
jle
inc
dec
or
push
imul
imul
das
xchg
shrb
push
mov
mov
and
rclb
mov
sbb
aad
cmp
out
sahf
lahf
xchg
pop
jae
clc
pop
not
dec
or
in
cmp
push
sahf
mov
pop
out
mov
mov
add
roll
ljmp
mov
mov
ror
insb
mov
cmp
add
lock
sbb
mov
jno,pt
imul
and
adc
fildl
stos
popa
inc
xorb
add
cmp
jecxz
outsl
in
pop
inc
xchg
push
sbb
dec
jp
std
cmpsb
jge
ss
xchg
repz
inc
dec
adc
pop
push
das
add
inc
fiadds
push
mov
outsb
arpl
adc
and
jmp
jmp
push
push
mov
add
sbbl
dec
fistl
cmp
inc
adc
push
stc
fwait
inc
or
mov
and
das
stos
lods
mov
add
repz
in
jbe
ret
mov
sbb
inc
rorl
mov
in
cld
imul
bound
je
inc
xor
push
xchg
scas
fbld
fsubrs
adc
adc
dec
and
aad
mov
xchg
bound
pop
addb
mov
jb
xchg
jne
add
std
adc
aaa
xchg
cmp
fdivrl
or
pushf
scas
icebp
mov
ja
cmp
xchg
push
mov
and
lcall
fcompl
xlat
call
cmp
out
pop
ret
jb
das
or
jmp
cmp
lds
aad
inc
rcl
jb
lret
sub
jmp
dec
fldl
sahf
adc
cmpsl
mov
mov
les
push
sub
and
pop
mov
inc
mov
stos
das
rol
jbe
into
pop
adc
inc
mov
mov
xchg
xchg
test
loop,pt
add
es
inc
imull
add
mov
sub
lahf
lcall
or
dec
jae
js
movsb
sbb
cmp
jne
jmp
adc
dec
xchg
test
mov
xor
stos
and
inc
cwtl
lret
lahf
jbe
mov
sub
sub
pop
sbb
fnstsw
ss
mov
pop
inc
push
fdivrs
out
mov
in
cmp
std
fstl
or
add
sahf
xor
outsl
inc
loope
push
fcmovu
cmc
push
sub
mov
adc
clc
xchg
movntq
lahf
movsl
adc
and
jbe
out
inc
ret
in
out
fmull
popf
pop
ljmp
inc
cmp
push
test
out
dec
cli
mov
in
xchg
insl
xchg
cmp
cmp
lods
pusha
inc
mov
adc
loop
fsubrs
adc
call
dec
or
lods
decl
and
xchg
mov
sbb
test
mov
dec
shlb
dec
xor
shrl
jmp
fsubrs
dec
sub
and
dec
or
pop
inc
sbb
and
fidivrl
lds
jmp
sbb
xchg
jno
inc
lret
lock
fnstenv
cmp
pop
cli
fisttpll
push
xchg
sub
lods
cltd
dec
bound
pop
ja
pop
popf
and
sti
sub
mov
xlat
int
xor
insb
cmpsb
push
pop
test
test
adc
mov
loope
and
jns
loope
push
in
enter
imul
pop
jge
aas
inc
jae
and
jo
into
sub
ljmp
cld
sub
add
loope
jns
icebp
add
or
jns
or
decb
pusha
jns
sub
cwtl
pop
outsl
std
sti
test
sub
ss
xor
movsl
aad
pop
inc
fdivs
pop
mov
out
fdivs
scas
jmp
sti
and
pop
or
incb
adc
stos
and
lret
mov
jns
bound
or
xor
fldt
std
dec
repnz
sbbl
pushf
scas
xchg
inc
cmp
repnz
xchg
and
sbb
out
shl
sub
subb
sub
inc
inc
rolb
enter
in
add
and
aad
sti
mov
mov
aas
pop
jno
popa
es
stos
clc
pushf
pusha
shlb
pop
hlt
lock
jae
xlat
pop
scas
out
test
insl
roll
and
xchg
lret
outsb
or
lock
adc
imul
in
xchg
inc
xchg
fs
test
ja
testl
popa
push
ror
ror
ljmp
aaa
test
mov
mov
leave
dec
negl
push
adc
pop
jae
negl
adc
aaa
out
movsb
adc
xor
popf
pop
pop
gs
out
sbb
pusha
lock
sbb
push
cli
aad
sbb
aas
adc
or
pop
addr16
jmp
pop
adc
pop
push
icebp
into
mov
lock
sub
cld
push
incb
inc
mov
xlat
jnp
and
stc
jnp
mov
adc
jmp
lds
pop
out
mov
bound
call
push
mov
stos
imul
sbb
stc
cmp
mov
mov
adc
in
hlt
int3
movsb
lahf
mov
mov
push
outsb
rclb
icebp
clc
cmpsl
xchg
push
xor
cmp
push
add
fimuls
sub
cltd
push
push
sub
test
inc
clc
dec
ror
movsbl
int3
daa
pop
mov
jo
pop
leave
xchg
mov
es
xor
xor
mov
jno
call
dec
in
movsb
icebp
jbe
mov
mov
inc
mov
inc
fisubs
lods
test
into
incl
lcall
in
js
das
inc
xor
sub
movsl
mov
out
bnd
lahf
mov
xor
fwait
push
pop
sub
sub
or
ljmp
cmp
mov
sub
xchg
push
push
mov
mov
add
sub
movsl
sahf
aaa
jl
mov
lock
lea
and
mov
and
jmp
sahf
aad
dec
push
and
mov
xor
addr16
icebp
push
movsl
xor
test
push
lods
jg
sbb
adc
jbe
pop
int3
mov
gs
cmp
cld
mov
cld
dec
pop
out
fcompl
mov
pop
push
add
xor
xchg
jle
xchg
push
cmp
and
xchg
adc
loopne
and
add
xchg
shlb
movsl
insl
xor
sbb
mov
popa
and
lock
push
jmp
dec
jo
es
scas
cmpsb
aaa
xlat
rcll
mul
fisttpl
push
test
cld
testl
xchg
sub
stos
inc
fwait
xchg
xor
adc
js
out
sub
push
cmp
mov
rcrb
sahf
pop
mov
cmpsb
jbe
push
insb
mov
ss
sub
stc
or
push
lret
inc
cwtl
adc
pop
ficoms
cs
lahf
and
push
dec
xchg
mov
in
out
push
movsb
loop
pop
jno
rorl
push
int
mov
pop
sbb
clc
xlat
scas
mov
mov
jp
xor
mov
mov
mov
push
sbb
inc
sahf
xchg
mov
mov
cmp
push
mov
and
ror
adc
lret
jne
or
in
or
cmpsl
push
popa
pop
orl
shlb
lock
ret
bound
mov
ljmp
jae
out
push
imul
and
das
cmp
test
lods
mov
mov
inc
into
cmp
fsubrs
fsubl
cmc
push
ljmp
inc
jns
xchg
and
dec
stos
or
ljmp
loopne
repz
fcompl
es
push
in
xchg
aad
dec
ss
jp
je
sbb
sub
ljmp
dec
enter
jl
imul
sbb
adc
fcomps
mov
cmc
xor
xorb
lret
arpl
inc
scas
pop
xlat
pop
in
adc
addl
sbb
push
je
rcrl
sub
sbb
dec
push
adc
rclb
imul
xchg
mov
fstl
jb
hlt
arpl
je
pop
fsubrs
and
ds
xor
push
and
scas
xchg
cmpsb
xor
push
dec
nop
push
inc
sub
xchg
jo
xchg
enter
lea
push
cli
es
fwait
and
dec
not
mov
push
mov
cmp
fildl
jmp
xchg
adc
adc
lcall
add
mov
lods
stc
decb
xchg
arpl
pop
sbb
outsl
sub
icebp
dec
lcall
mov
nop
mov
sti
cld
and
fucomi
in
rolb
xchg
pop
and
fistpll
mov
ds
mov
jb
jg
inc
push
lods
scas
rcrl
lret
inc
out
push
mov
mov
dec
into
bound
rcll
pusha
inc
outsl
mov
stos
outsb
dec
fwait
pop
xchg
cltd
inc
mov
push
pop
xchg
push
pop
andl
jnp
stos
movsl
push
call
loopne
nop
mov
gs
dec
pop
pusha
outsl
fwait
mov
jecxz
movsb
shlb
std
pop
xor
std
jecxz
test
jae
loopne
in
loopne
mov
inc
mov
std
stos
cmpsl
cmp
aam
mov
cmp
mov
popf
aad
sarb
je
add
icebp
inc
sbb
sbb
daa
sbb
xchg
pusha
aas
jge
clc
sub
stc
xor
ret
mov
cmp
jbe
test
ss
mov
rorl
or
push
and
out
pop
dec
bound
sub
mov
mov
mov
in
pop
push
lods
mov
stc
push
loope
inc
mov
repz
pop
stos
push
aaa
xchg
sub
out
aam
aaa
adc
orb
mov
stos
xchg
push
add
lcall
xchg
pop
sub
lea
xor
adc
jmp
stc
mov
pop
jecxz
cld
add
adc
xchg
mov
cli
sbb
or
fisttpl
mov
xchg
movsl
loopne
xlat
ja
stc
adc
adc
sbb
sub
stos
xor
cmp
and
mov
inc
jg
dec
mov
xor
stos
mov
or
push
sbb
adc
adc
push
mov
pop
mov
cli
push
fdivp
ss
jle
shll
cli
test
aam
or
mov
pop
pop
andb
add
addl
xchg
test
push
ja
sbb
lret
jne
sbb
or
fdivrl
mov
lret
or
ficomps
and
cmp
push
mov
lret
push
dec
mov
out
data16
and
xor
in
jle
int3
test
cld
pop
icebp
aas
mov
mov
adc
imul
mov
xor
sahf
jge
sti
notl
ss
mov
mov
imul
xor
pop
adc
xchg
mov
idivl
push
sbb
cwtl
push
mov
fcoms
adcb
push
lret
and
inc
adc
cmc
push
mov
or
add
inc
pop
xor
push
inc
fidivl
test
clc
sbbl
ja
pushf
push
int3
pusha
fwait
shl
pop
movsb
ja
js
add
mov
pop
jmp
xor
sti
pop
loopne
sub
jecxz
lret
or
mov
mov
xchg
cpuid
in
or
push
fst
sub
xchg
cmp
filds
jge
arpl
and
loope
data16
addb
sub
xor
inc
push
sbb
push
push
je
in
xchg
cmpl
pop
icebp
push
addr16
into
es
or
jge
dec
lret
int
clc
add
add
sti
lret
adc
sub
jge
xchg
jno
pushf
loopne
pop
aad
sbb
xor
orb
jnp
pop
ss
pop
mov
or
sbb
leave
roll
jge
cwtl
mov
pop
aad
jo
mov
jb
rcr
push
cmpl
imul
repz
popa
cwtl
aaa
pop
jb
inc
mov
mov
cltd
jl
push
jge
popa
xchg
pop
add
ret
xchg
aad
sub
lea
push
mov
mov
mull
lock
jecxz
stc
leave
jecxz
imul
sbb
dec
inc
push
push
or
mov
push
mov
lods
dec
shld
lret
icebp
mov
iret
jno
ljmp
jp
jne
scas
inc
decb
inc
add
popf
mov
inc
in
mov
cwtd
cmpl
loop
sub
in
push
or
mov
into
call
jb
xor
insb
imulb
das
inc
inc
and
aaa
push
cmp
test
popa
stos
cli
mov
addr16
sub
pop
int
xor
loope
test
mov
in
mov
shrb
xchg
push
mov
das
push
adc
xor
mov
mov
push
add
jg
bound
pusha
sub
data16
addr16
fstpt
int
pop
popf
mull
out
push
aad
bound
leave
mov
mov
fwait
add
icebp
inc
jp
or
pop
sbb
and
es
je
adc
add
test
adc
repnz
lret
lock
fildl
or
jne
out
adc
add
adc
sbb
inc
inc
aas
dec
and
push
sub
repz
mov
in
jg
rclb
lcall
lret
cs
mov
pusha
xor
das
xor
mov
cld
popf
fsubrl
sti
leave
inc
mov
add
add
mov
xchg
inc
mov
pop
xor
sub
stc
mov
outsb
cmp
mov
cld
mov
outsb
pop
leave
jg
shlb
imul
arpl
adcl
adc
pop
jmp
or
repnz
mov
xchg
std
xor
stos
inc
dec
dec
bnd
xchg
xor
add
out
roll
add
inc
or
sbb
pushf
ds
ret
xor
mov
dec
lret
and
movsb
jo
cmp
shrl
adc
xchg
test
dec
or
pop
push
cmp
push
and
fisubrs
xchg
jmp
xchg
push
xchg
xchg
and
leave
imul
lea
popf
cmp
cmp
mov
mov
test
test
adc
inc
xor
jns
cld
or
jle
es
and
divl
repnz
push
mov
in
xor
sbb
sbbb
aas
test
popf
sbb
cmp
sub
sub
shl
out
or
leave
subb
pop
fidivl
cld
mov
inc
and
or
int3
mov
pop
test
jno
dec
hlt
push
mov
adc
fisubrl
mov
lahf
mov
sbb
cltd
dec
jo
outsl
test
ficoms
fisubs
ret
pop
outsb
dec
enter
inc
mov
xchg
cmp
pop
jno
enter
movsb
pop
dec
bound
cld
sub
loope
push
sub
imul
clc
mov
mov
insb
inc
loope
sub
cmp
pusha
fimuls
daa
ds
push
cmp
popa
movsb
lret
rclb
and
adc
movsl
daa
rcrb
js
or
cmp
fsub
dec
xchg
jne
add
gs
or
xor
push
mov
mov
jnp
repnz
jge
mov
inc
lods
addb
dec
jb
loopne
imul
xchg
lock
mov
xlat
jg
push
orb
pop
orb
inc
stos
add
imulb
and
inc
leave
jp
test
loopne
xor
sbb
nop
nop
add
dec
adc
and
outsb
lldt
push
and
fcomip
insl
ja
mov
bswap
fidivs
cli
int3
cmp
lock
je
lods
rcrl
adc
pop
push
adc
pushf
daa
sub
insl
xor
dec
lret
outsb
xchg
cwtl
inc
les
lock
out
andb
aad
mov
notl
xor
mov
dec
vpor
mov
jae
mov
dec
mov
lahf
mov
in
mov
add
pop
divb
nop
test
test
arpl
xchg
pop
fs
fcmovu
jb
movsb
addb
adc
fmuls
dec
fs
adc
push
or
in
cs
xchg
add
mov
sbb
loopne
sub
or
roll
sub
gs
jp
out
idivb
pop
loopne
daa
fildll
lea
mov
in
pop
repz
push
xchg
sbb
jne
mov
movsb
adc
inc
jb
mov
pusha
imul
sbb
mov
int3
test
int
int
hlt
outsb
es
inc
mov
popa
or
jge
jl
int3
loope
aaa
jmp
jl
mov
sbb
ret
adc
pop
xchg
cs
imul
es
cld
mov
rorb
sub
insb
push
std
xchg
xchg
pop
mul
fwait
in
cmpsb
jne
test
js
repnz
arpl
jbe
lahf
test
cmp
std
arpl
mov
ss
loopne
popf
inc
out
xor
fmul
loop
ljmp
xor
loope
cmc
mov
scas
sbb
push
xor
jnp
das
pop
cmp
pushf
sub
es
adc
andb
popl
loope
adc
push
int
out
fimuls
movsb
and
lret
xchg
add
stos
sub
fisttpl
into
push
outsl
xor
rol
enter
xchg
les
mov
or
jbe
sbb
inc
xor
mov
xchg
xchg
mov
aad
dec
pop
cmp
cltd
pushf
push
sub
mov
xchg
cli
mov
or
pusha
shrb
in
push
scas
mov
movsl
dec
xor
sti
mov
pop
xchg
and
iret
fldl
addb
mov
adc
xchg
cmp
popf
dec
cmpb
loop
inc
inc
lods
fsubl
mov
loope
out
mov
lods
add
pop
jmp
sbb
je
aas
roll
inc
cmc
outsb
xchg
cmp
icebp
mov
int3
mov
adc
jae
add
mov
popf
iret
rcr
rorb
cli
inc
lods
mov
aas
add
or
sti
aaa
popa
repz
mov
shlb
call
dec
mov
into
and
xor
inc
test
jo
adc
ja
pop
inc
movsl
stc
pop
iret
xchg
aaa
inc
cmp
add
sbb
add
fidivs
mov
shlb
insb
jo
ss
adc
adc
outsb
jo
jle
inc
ds
and
mov
push
pusha
push
clc
push
rcll
and
sub
xchg
jno
je
push
push
push
push
jle
dec
cmpsl
stos
cmpl
inc
inc
test
or
mov
rol
andl
sub
lcall
out
add
push
add
fiadds
ret
in
out
in
lds
jns
adc
fldl
dec
sbb
mov
mov
mov
mov
mov
dec
dec
aas
sub
mov
ficomps
std
loope
rclb
jl
enter
mov
movsb
flds
push
lcall
jno
repz
sahf
push
push
repz
cmp
mov
das
js
mov
call
int
dec
dec
fmull
dec
xor
fwait
or
nop
inc
sbb
jnp
pop
pop
sub
xchg
cmp
push
ret
pop
aad
push
sbb
mov
ret
in
jno
lea
mov
stos
and
in
push
or
sub
mov
hlt
sub
jecxz
adc
push
xlat
and
daa
mov
mov
xor
sbb
addr16
mov
stos
mov
shlb
jb
sbb
test
and
cli
adc
frstpm(287
fisubs
movsb
push
add
lret
pop
push
cltd
xchg
fildl
or
fwait
ljmp
xchg
xor
mov
xchg
call
jl
cmp
test
cmc
add
pop
sbb
sub
dec
sbb
aas
fs
in
loope
pop
punpckldq
mov
cld
and
xchg
imul
loopne
cld
aaa
jbe
loop
or
mov
jmp
pop
or
ret
xchg
pop
in
lret
loope
and
push
outsb
icebp
and
dec
mov
push
ds
aaa
inc
sbb
call
dec
leave
mov
adc
xchg
mov
jns
jbe
mov
insb
jns
pop
iret
cwtl
mov
into
mov
jns
lret
in
sbb
not
and
add
mov
adc
in
mov
sub
mov
mov
cs
test
jp
mov
sub
insb
loopne
scas
dec
mov
les
ret
adc
jo
ljmp
and
mov
pop
es
cwtl
and
imul
inc
or
arpl
lods
dec
hlt
and
andb
xor
leave
mov
cwtl
pop
out
xchg
lcall
inc
xor
loope
pushf
in
andl
mov
mov
sub
cmp
ja
dec
xor
xchg
xor
negl
mov
or
ret
fnstenv
sbb
mov
jae
jo
push
test
adcb
xor
out
xchg
jnp
lods
imulb
loopne
gs
pop
jp
inc
add
jl
mov
fidivl
mov
rcrl
test
add
pop
out
jmp
andl
jb
test
iret
xor
mov
repnz
cmpsl
add
xchg
cwtl
mov
or
sub
jge
dec
or
fs
xchg
xor
int
inc
jbe
into
hlt
jns
insl
add
clc
lds
bound
mov
dec
sbb
mull
hlt
push
adc
adc
inc
pop
gs
call
adc
dec
jno
data16
lds
imul
mov
add
mov
loopne
or
cwtl
cmp
and
addl
ficomps
mov
pop
lret
or
add
enter
sub
in
sbb
cmpsb
leave
pop
mov
cli
inc
push
lock
bound
mov
ret
cmpsl
pop
cs
pusha
mov
sti
pushf
xchg
push
enter
inc
scas
mov
adc
xchg
bound
push
or
mov
xor
cmp
fldcw
sbb
sahf
xchg
mov
adc
pop
add
mov
dec
stc
xchg
sub
sbb
push
push
mov
fimull
xor
addr16
xorl
hlt
cwtl
xchg
mov
inc
roll
dec
stos
mov
fldln2
pop
jmp
iret
sbb
adc
xchg
mov
xchg
mov
fwait
cmp
push
cmpsl
pop
mov
push
pop
xchg
push
cmp
fiadds
daa
xchg
pop
in
adc
dec
loopne
cmc
scas
push
pusha
fs
ljmp
cmp
jmp
add
js
mov
mov
jne
inc
jl
mov
andl
jno
add
ret
and
dec
stc
out
push
dec
xor
mov
lret
arpl
xchg
int3
sub
cs
jbe
aad
add
outsb
in
rcl
popa
inc
imul
roll
add
loope
cmp
in
or
fisttpll
pushf
insb
jl
xchg
lds
pushf
lahf
nopl
or
outsl
popa
gs
scas
sub
filds
mull
push
pop
jo
fdivrl
ds
inc
sahf
iret
sub
xlat
in
xchg
loop
sub
sahf
imul
xchg
lret
pop
pop
and
add
pop
pop
adcb
mov
out
int
mov
sub
push
aas
adc
dec
aad
outsb
cmpsl
out
pop
sub
jle
fists
icebp
cmp
lcall
movsb
popa
es
fcmovnu
xor
push
iret
loopne
dec
sub
pop
xchg
sbb
into
sbb
sub
aad
int
loopne
mov
add
out
test
push
pop
push
add
cwtl
inc
repnz
shlb
enter
pop
mov
add
jnp
pushf
xchg
hlt
xchg
mov
lret
loope
rol
mov
mov
shll
dec
cmpsb
jmp
int3
es
cmp
or
add
push
dec
lock
repnz
movsl
push
sahf
gs
cmc
xchg
fisttpl
jp
mov
fstpl
and
pop
pop
int3
jno
jae
call
ret
adc
mov
lret
jbe
push
enter
dec
push
call
push
xor
xchg
mov
jne
pop
std
and
adc
or
test
fisttps
mov
mov
adc
out
movsl
inc
test
jge
xor
xchg
addr16
inc
outsb
pop
test
push
call
dec
aaa
fidivl
mov
in
leave
mov
gs
sbb
push
xchg
pop
ret
push
push
xchg
test
pop
adc
jne
add
sbb
aas
cwtl
out
inc
das
es
xor
outsl
push
mov
cmp
cmc
xchg
popa
mov
lret
inc
imul
fwait
inc
push
fwait
jne
xchg
or
add
int
or
pop
lds
jge
cli
fistl
fnstcw
xchg
les
stos
loop
cltd
cmp
or
clc
xchg
inc
lret
fwait
out
cmpsl
push
cs
push
jmp
pop
shrb
add
out
pop
xchg
fisubrl
inc
sub
xor
or
xchg
into
in
xchg
out
data16
fnsave
in
mov
loope
mov
mov
push
xchg
shld
mov
daa
cmpleps
int
inc
insl
adc
andb
xor
adc
inc
inc
jae
stos
mov
je
stos
push
cmc
jl
call
and
stc
cmp
xor
in
fnsave
lods
sub
and
xchg
lea
arpl
insb
test
addr16
fwait
stos
mov
sub
scas
mov
vmovd
xor
xor
xor
les
mov
dec
dec
repnz
das
mov
mov
xchg
push
in
popf
icebp
es
andb
pushf
movsb
adc
sti
insb
pop
inc
call
ds
and
xchg
imul
push
adc
dec
stos
adc
push
sub
mov
mov
test
mov
add
divl
dec
xchg
fildl
insl
cmpsl
add
sbb
loope
sbb
flds
mov
xchg
mov
push
push
inc
or
mov
cs
popf
adc
pop
xlat
push
jp,pt
add
and
ljmp
hlt
add
adc
fsubs
imul
or
push
aad
and
sbb
inc
clc
pop
sub
xchg
aas
jno
dec
std
movsl
mov
scas
mov
std
sbb
into
jg
fldcw
leave
push
xchg
sub
or
leave
int
sub
fdivrs
jb
adc
daa
adcl
js
dec
lods
mov
add
or
and
push
pop
lods
adc
pushf
or
ljmp
aas
icebp
mov
and
xor
dec
cmc
xchg
mov
rorl
adc
insb
or
and
mov
cmpsl
shlb
in
push
outsb
adc
xor
pop
mov
cmc
ja
mov
mov
push
notl
cmpsl
xchg
lock
arpl
and
popf
repz
outsl
cltd
repnz
loopne
jmp
push
lds
cwtl
mov
jle
add
mov
cmp
cmp
in
jo
sub
push
push
xchg
ja
mov
or
mov
jnp
cmp
mov
fcomp
popa
jno
out
mov
cmp
pop
mov
xchg
ljmp
adc
ss
in
jns
jg
faddl
sbb
scas
push
sbb
dec
sarb
insl
mov
push
stos
mov
adc
add
jecxz
push
stc
mov
mov
and
stos
fistps
movsb
xchg
or
dec
repz
xor
cmp
test
adc
or
mov
in
pop
add
mov
push
xor
xor
jecxz
jge
mov
popf
out
cmc
les
in
jns
divb
sbb
int
push
cltd
mov
inc
pop
mov
push
dec
adc
clc
xchg
pop
mov
movsb
lcall
cmp
aam
mov
adc
sbbl
out
in
adc
mov
jnp
adc
adc
or
ret
repz
pop
mov
jmp
xchg
das
and
and
popa
xlat
inc
xchg
fwait
cwtl
jae
or
cmpl
mov
or
lret
fadd
push
adc
inc
lcall
and
jae
fisttpl
pushf
push
pusha
ret
roll
bound
jns
ret
push
push
movsb
push
lds
fistpll
scas
xor
or
loope
pusha
sti
test
test
pop
add
bound
loope
jb
pop
adc
in
cwtl
outsb
shr
jmp
jp
cmp
mulb
lcall
fadd
test
lret
test
int
es
out
loope
mov
push
aad
pop
movsl
add
push
adc
and
stc
adcl
sub
sub
pop
mov
xlat
jbe
loope
cmp
mov
mov
jno
jg
mov
and
pop
int3
jmp
sub
dec
scas
out
cmp
dec
add
pop
jg
shrl
in
mov
xchg
test
adc
adcb
sahf
cmpsl
add
dec
fcomps
sarl
mov
into
adcl
pop
lods
adcl
ja
insl
sub
lods
inc
sbb
adc
add
enter
or
mov
in
or
adc
jnp
xchg
inc
bound
pop
sub
cmpsb
cmp
xchg
test
pop
xchg
cmc
lcall
xchg
jp
fstps
inc
dec
std
jmp
jecxz
je
add
test
fadd
jno
jmp
out
out
std
and
xchg
dec
inc
adc
mov
and
sub
pusha
lds
xlat
enter
pop
stos
pop
das
addr16
stc
ret
inc
cmp
aaa
aad
jecxz
hlt
fcmovb
adc
pop
lds
sbb
sbb
xchg
cmpsl
xor
jmp
and
bound
popf
xchg
aaa
push
out
and
rcl
jns
fwait
test
xor
loop
out
insb
mov
in
mov
push
xchg
inc
je
dec
or
repnz
mov
xchg
loope
sub
jge
popf
xchg
adc
ret
in
sub
pop
cld
sub
std
adc
jns
data16
jmp
sbb
arpl
loope
shrb
in
add
gs
mov
pop
cmp
dec
aad
aaa
mov
in
dec
lret
popa
mov
stos
inc
jmp
aaa
fcmovnb
cmp
icebp
in
or
ret
cmpsb
sub
jne,pt
inc
sbb
ss
rorl
repnz
lret
adcl
pop
adc
enter
mov
stc
push
cmp
add
cmp
dec
push
mov
sbb
mov
out
adc
pop
aad
pop
lods
popf
sbb
mov
push
mov
jp
into
leave
and
std
mov
int
mov
into
addr16
mov
push
out
jp
or
sub
lods
fcmovnb
xchg
mov
mov
mov
insl
mov
mov
mov
or
in
pop
lret
mov
xchg
ljmp
in
es
xor
jle
pop
arpl
shll
adcl
inc
cmp
leave
mov
push
in
adc
xchg
push
pop
dec
out
sub
jne
dec
push
test
nop
mov
aaa
call
push
inc
nop
jmp
bound
xor
into
scas
in
jo
mov
or
or
xor
mov
adc
bound
rorl
or
adc
jl
jbe
cmpsl
jnp
mov
cmp
and
xor
mov
sbb
sbb
in
sub
cwtl
fnsave
mov
daa
jo
les
out
aam
std
pusha
stos
and
jnp
jnp
lcall
stc
insl
push
js
sub
jg
and
xchg
inc
fcomps
bound
inc
lcall
lret
jno
sub
inc
pop
daa
or
inc
xchg
cmp
ljmp
or
mov
dec
into
pop
push
or
fs
fisubrl
and
inc
jecxz
fdivs
mov
dec
add
jle
jbe
idivb
pop
mov
das
sub
les
jb
push
call
jecxz
sbb
arpl
lea
and
fbstp
mov
hlt
mov
test
fmul
xorl
pop
outsl
loopne
push
mov
mov
leave
xorl
stos
xor
loopne
das
loope
les
cltd
mov
jecxz
aad
in
loope
sbb
mov
pop
inc
mov
ret
in
push
rorl
hlt
mov
xchg
out
jg
arpl
pop
pshufw
push
daa
cmc
xlat
inc
repnz
in
iret
jb
push
pop
mov
or
inc
int
xchg
ja
es
pop
dec
or
sbb
sub
mov
dec
jmp
sti
pop
push
rcr
es
lret
jle
adc
fxch
fcoml
movsl
ficoms
movsb
push
mull
xchg
loopne
sub
pop
jg
xor
pop
mov
dec
push
cmp
loop
jg
or
imul
lds
scas
pop
xor
stos
pop
cmp
push
mov
dec
loop
jns
dec
push
mov
push
and
mov
dec
mov
xchg
jno
pop
fsubrs
xlat
xchg
or
aas
imul
addr16
insl
cs
pop
jb
ficompl
shll
mov
dec
mov
ljmp
daa
cmpl
jmp
cs
lods
mov
mov
pop
sub
mov
cmc
or
scas
ret
data16
dec
call
cmc
lea
hlt
push
pop
jbe
data16
int3
mov
outsl
ja
pop
xchg
sarb
pop
clc
orb
sbb
mov
jle
and
xchg
stos
adc
rcrb
shr
xor
ljmp
pop
add
fldl2t
cmp
and
jg
mov
rolb
icebp
aad
lods
scas
jmp
pop
dec
or
mov
fcmovne
fs
mov
in
jb
dec
pop
lret
and
outsl
addr16
or
lcall
pop
out
jp
xor
pop
lea
add
ljmp
mov
lods
push
cmpsb
add
fisubrl
jmp
in
pop
cmp
dec
adc
subl
lock
mov
enter
adc
cmp
div
cmp
pop
sub
lret
lea
ret
adc
test
stc
rcl
jo
insb
imul
test
mov
mov
cmpsb
push
ret
cmc
or
cmp
and
outsb
sbb
les
sub
mov
jno
xchg
inc
outsl
ret
ja
bound
cwtl
cmp
mov
cmc
mov
add
imul
xor
jmp
sub
arpl
out
and
inc
cmp
sbb
dec
sbb
jl
inc
mov
out
es
mov
ficompl
sub
aam
jl
enter
sub
and
xchg
or
add
rcr
mov
loop
xchg
andl
in
nop
xchg
jmp
fnstcw
test
push
sbb
dec
xor
xchg
mov
mov
adc
mov
xor
inc
dec
je
shlb
cmpsb
add
adc
test
push
mov
sahf
sahf
pop
test
lods
stos
in
lock
pop
gs
es
loope
cmp
test
clc
insb
mov
push
push
cltd
xor
xchg
inc
xlat
push
mov
sbb
ds
mov
and
sbb
scas
ret
cmp
pushl
leave
push
aam
pop
sub
sub
add
jnp
mov
shrb
mov
pop
xor
push
cmp
cmp
in
push
mov
idivl
lahf
mov
pusha
mov
cmc
mov
popa
push
pushf
dec
cltd
call
push
hlt
push
xchg
mov
fdivs
mulb
xor
push
xor
addl
mov
or
xor
mov
rorb
fisttpl
nop
sti
push
outsl
sbb
jle
push
jg
cmp
in
in
cmp
mov
addr16
lahf
cmp
and
add
clc
in
rep
pushf
pop
cmp
out
sbb
inc
in
ja
jbe
and
and
jge
push
daa
xchg
ja
or
dec
mov
sbb
or
mov
jns
lcall
xor
pop
jns
decb
loop
push
pop
test
test
dec
mov
ret
test
in
stos
pop
int3
out
mov
jg
cwtl
inc
shl
pop
aas
mov
adc
adcl
ss
and
cmp
aam
jae
mov
out
sarl
in
jns
cwtl
xchg
cmp
xlat
adc
adc
fmuls
dec
dec
iret
rol
cmp
nop
xchg
loopne
cs
and
sbb
inc
test
pop
fcomps
lcall
mov
shrl
mov
jbe
push
mov
js
lret
rorb
out
aad
or
popa
mov
movsl
imul
cmp
insl
adc
movsb
lahf
fildll
lret
popf
mov
stc
lods
and
pxor
movzwl
in
inc
or
add
dec
and
xor
lods
punpcklwd
cmp
sbb
dec
adc
icebp
push
mov
xor
jge
cli
les
fcoms
push
repz
mov
push
inc
add
std
int3
dec
call
pushf
rorb
aas
js
mov
das
cmpsb
mov
dec
dec
jae
in
inc
push
add
xchg
outsb
or
sub
xor
jg
aas
xchg
mov
push
arpl
icebp
fcmovb
sub
sarl
enter
or
out
push
cld
out
and
subl
hlt
fdivrs
mov
jge
adc
push
mov
cmpsl
pushf
inc
ss
sub
xchg
pop
test
enter
push
cli
fdivl
xlat
and
dec
out
cmp
mov
mov
addr16
xchg
testb
adc
jbe
and
dec
xchg
adc
adc
loop
mov
add
dec
xor
popa
jl
dec
mov
cmpsb
fwait
roll
shrl
xor
mov
maxps
push
lahf
and
arpl
lret
lret
mov
jg
cmp
in
xchg
mov
pop
xor
dec
jl
shr
adc
cmpsl
inc
jmp
dec
cmp
jb
data16
push
pushf
inc
jae
xor
push
and
xchg
cmc
ljmp
sbb
mov
sub
dec
dec
inc
cmpsb
sub
aaa
fisttpl
and
mov
or
dec
fchs
aas
iret
jmp
fs
or
int
bound
in
ds
inc
dec
xor
dec
or
lret
push
jnp
dec
aas
lcall
jge
inc
sub
insb
jne
idivl
xlat
incb
out
call
push
imul
in
test
cwtl
xlat
pop
iret
cwtl
jns
and
enter
cmp
movsl
sub
mov
ret
xchg
ret
sub
xchg
jecxz
inc
add
xchg
movsl
sbb
sbb
lea
ljmp
push
sub
pop
aaa
test
fs
or
mov
fwait
imul
fcmovu
icebp
sar
fldenv
mov
aaa
dec
clc
xor
stos
dec
sub
enter
mov
sbb
xor
push
xor
pusha
pop
mov
adc
sar
add
pop
in
shlb
push
mov
loop
in
daa
bound
jnp
inc
lret
in
sbb
lret
mov
and
pusha
adc
das
and
cli
sbb
insb
rorb
push
fsubl
andl
pushf
jmp
jnp
call
sbb
xor
rorl
out
jb
loop
out
sti
insb
push
mov
push
jne
cli
adc
out
fwait
int
in
pop
dec
imul
cltd
pop
mov
lret
or
es
mov
cltd
lcall
push
mov
rcrb
loopne
inc
pop
lahf
push
scas
xchg
xchg
dec
pop
sbb
inc
xor
dec
dec
mov
dec
push
mov
es
gs
int3
rorl
pop
adcl
test
int3
rclb
xchg
mov
pop
ss
lcall
dec
fisubl
sbb
add
adc
push
fadd
dec
mov
test
mov
sti
sub
jns
ja
push
leave
fstpl
mov
pop
cli
pop
mov
jmp
mov
xchg
mov
xor
jmp
xor
jno
cmc
cmp
loopne
cmp
into
outsl
cmp
dec
xchg
pop
js
orb
and
aas
mov
sbb
mov
addr16
insb
cmp
inc
lret
push
in
out
mov
aam
mov
pop
mov
daa
js
test
cmp
icebp
and
jl
mov
sbb
das
repz
and
mov
and
push
lea
inc
or
outsl
cmp
stc
mov
and
jbe
xor
sub
pop
scas
aas
sbb
mov
sub
mov
shlb
or
or
push
lock
sub
and
mov
pop
mov
lock
add
dec
imul
int3
adc
aam
and
fcmove
add
cmpsb
jne
adc
ja
dec
or
dec
test
adc
mov
and
adc
sub
mov
sar
sub
sub
loop
add
jo
dec
jl
movsl
filds
mov
in
push
cmp
cmp
das
push
cmp
mov
enter
adc
mov
fadd
fistps
lret
inc
jecxz
cmpsl
jge
fimuls
jnp
or
dec
movsl
mov
pusha
push
loop
jne
push
aas
fisttpll
add
vmwrite
incb
loop
lret
mov
in
jecxz
cli
je
call
insb
mov
pop
xchg
adc
iret
mov
and
sti
lods
xor
xchg
in
add
sarl
out
out
out
inc
jp
dec
pop
push
fxtract
imul
jo
scas
in
into
cmc
cmp
test
sbb
add
fs
lret
and
xchg
jmp
fstp
xor
add
rorl
hlt
popl
fistpl
push
xchg
adc
mov
sub
jmp
out
mov
mov
iret
pop
nop
or
xchg
mov
cmpsl
inc
jb
mov
mov
in
adc
push
jo
xor
adc
lahf
imul
sbb
mov
mov
repnz
inc
pop
inc
js
and
pusha
gs
dec
xor
jg
pushfw
int3
push
dec
jb
ret
push
aam
and
loop
popf
fidivs
sub
mov
outsl
cmp
mov
pop
mov
popa
call
and
mov
mov
rcl
imul
es
add
loop
adc
das
mov
fdiv
sbb
mov
enter
mov
fisubl
out
pusha
aam
fstps
ljmp
sbb
xchg
popa
sub
mov
mov
test
mov
push
cmp
mov
enter
cmp
xchg
outsb
pushf
jns
and
jae
cltd
pop
cmp
add
inc
aam
sub
icebp
cs
mov
xchg
xchg
mov
jae
nop
js
or
rol
xlat
movsl
push
cmp
fimuls
add
rorb
pop
adc
ds
pop
sub
jge
movntq
mov
dec
andl
in
ret
pop
test
ljmp
in
inc
jg
sub
ds
aaa
inc
mov
push
insb
push
mov
sbb
jl
sub
arpl
inc
adc
push
push
inc
or
inc
xor
into
pop
sbb
xor
pop
xchg
xlat
insl
jbe
jmp
fmul
imul
mov
or
inc
add
pop
or
aad
and
and
cmp
in
jge
insb
pop
incb
pop
xor
rol
mulb
xchg
iret
ss
lods
dec
mov
icebp
test
es
sbb
in
jnp
pop
scas
add
ja
xor
test
push
cli
arpl
loope
stos
dec
pop
fdivrl
adc
std
cmp
imul
adc
call
or
jg
popa
or
mov
mov
sbb
xor
sbb
push
in
mov
adc
mov
outsl
xchg
cmp
mov
push
insl
imul
push
ret
popa
loope
inc
and
push
sbb
pop
cmp
cli
clc
push
pop
scas
xchg
mov
mov
jae
cmp
xor
add
pop
cmp
int
pop
test
dec
xor
xchg
lds
in
loop
test
jns
shlb
mov
std
scas
test
mov
sub
movsl
aas
les
outsl
and
sub
hlt
jns
cmc
xchg
mov
cmc
imul
jge
pop
out
pop
sub
xlat
fsub
or
lret
mov
push
lock
pop
jp
pop
in
sbbb
jb
int
arpl
iret
cmpb
push
js
jbe
xor
test
jnp
pop
sbb
pop
shll
ds
sbbl
loop
or
outsl
sbb
dec
and
sbb
hlt
popa
fcom
ss
hlt
arpl
adc
fisubrs
ljmp
loopne
mov
addr16
sbb
int3
pusha
sbb
cmpsl
sub
push
jb
cld
mov
jp
push
push
es
xchg
mov
and
into
mov
in
ret
add
cmp
xchg
adc
hlt
fcoml
jne
xorl
js
test
add
add
sub
popa
out
pop
mov
pop
pop
mov
ds
out
push
insl
bound
enter
test
xchg
fdivs
jmp
cld
or
mov
call
cltd
fdivrs
insb
mov
pop
pop
jecxz
dec
outsl
lock
test
or
outsl
mov
adc
xchg
ret
sbb
jbe
add
pop
xchg
pop
add
mov
jecxz
inc
into
and
jo
inc
push
test
mov
arpl
mov
loopne
test
cmp
mov
xor
js
fdivl
xchg
test
ret
push
lods
sti
sbb
loope
push
insb
sahf
xlat
cs
xchg
fiadds
andl
out
test
inc
movsl
xchg
out
mov
mov
push
jno
test
jp
xlat
int3
in
cmpsb
xchg
cld
mov
pop
push
mov
test
or
jno
popf
out
xor
jae
bound
push
xchg
inc
fcoml
pop
in
pop
js
cmc
outsl
push
shr
fstps
pop
mov
cltd
push
test
and
imul
fcmovnb
sbb
push
cltd
lret
repnz
jne
mov
stc
push
aaa
push
inc
pop
xchg
mov
sbb
push
loope
fwait
pop
push
cmp
in
rorb
icebp
sub
dec
negl
and
testb
mov
lret
in
gs
pushf
out
mov
jl
xor
ds
arpl
ljmp
pop
fimull
pop
lret
mov
jno
int3
push
cmp
mov
stos
inc
insl
adc
dec
adc
adc
ss
sub
mov
jecxz
insb
jae
enter
rcrl
rolb
scas
adc
push
or
mov
iret
adc
sbb
jb
iret
mov
sub
sbb
or
repz
jnp
js
cmpsl
andl
popf
dec
pop
leave
lods
jno
frstor
push
push
and
popf
mov
call
lret
sub
scas
pop
xlat
setno
stos
xor
shrb
mov
aam
lock
sbb
mov
mov
in
xor
xchg
mov
cmpsb
push
mov
sbb
stos
push
sub
pop
cmp
adc
and
pop
das
into
jns
fildll
mov
mov
sub
jmp
sahf
pop
mov
xor
out
dec
pushf
sbb
int
mov
std
inc
pop
add
jb
push
insl
sub
ret
and
std
and
clc
pop
xchg
aam
negb
pop
out
jle
pop
dec
cwtl
out
or
push
xchg
xchg
mov
lods
mov
mov
cwtl
inc
push
add
enter
push
pop
lahf
jle
xchg
lret
repz
dec
cmp
loope
push
mov
inc
lret
int3
notb
or
jae
movsl
gs
sbbb
pusha
xchg
stc
cmp
xchg
push
in
sahf
out
sbb
mov
test
stos
in
test
cmpsl
mov
add
in
push
iret
mov
xchg
mov
push
testl
sahf
in
aaa
adc
mov
loop
je
adc
fwait
outsb
std
mov
cmpb
into
adc
aas
fcomps
dec
or
sbb
pop
mov
mulb
popf
sbb
push
cmp
inc
push
push
bnd
dec
inc
jl
sbb
test
push
icebp
leave
stos
enter
sti
cld
out
add
sbb
push
xchg
and
out
aaa
int
test
mov
loop
ds
scas
dec
jp
aas
cmpb
xchg
push
cmp
jmp
lds
sub
or
cmp
sbb
cmp
mov
xchg
icebp
fldl
orl
push
xor
sub
cltd
xchg
in
gs
lret
stos
loope
int3
mov
scas
cmpsb
xor
mov
pop
clc
xchg
lcall
icebp
lahf
xchg
push
out
jbe
jle
lock
js
test
sub
popa
jl
cmpsb
xchg
mov
int3
cmp
push
mov
in
or
sbb
shrb
push
lds
daa
adc
cmp
ljmp
cmp
mov
test
and
test
adc
cmp
mov
inc
mov
inc
pop
movsb
sub
daa
roll
mov
aad
push
sti
push
or
dec
add
pop
sub
adc
js
addr16
mov
pop
xor
out
mov
fptan
mov
push
adc
push
dec
imul
cld
adc
push
fistps
and
aaa
fdiv
cmp
mov
fcoml
sti
jmp
xor
sub
adc
mov
test
stc
daa
in
xchg
sti
test
aam
inc
outsl
xor
vshufps
sbb
inc
add
addr16
mov
mov
cs
nop
stos
cwtl
sbb
testb
xor
rorl
fbstp
mov
mov
pop
ds
inc
xor
movsb
xchg
dec
cmp
loopne
xchg
in
js
mov
icebp
push
xlat
retw
or
out
ror
mov
mov
jp
inc
movsb
lock
jae
stos
push
cmp
sub
mov
add
adc
fbstp
imul
jecxz
adc
xor
pop
jo
adc
xor
jmp
notb
fnsave
orl
dec
dec
and
push
ficoms
sbb
cmp
mov
mov
repz
pop
push
fsub
lods
mov
sti
inc
out
stc
out
mov
pop
push
jmp
push
mov
inc
icebp
movsl
inc
mov
push
int
les
and
aas
and
mov
test
mov
lods
xchg
lea
rclb
pop
cwtl
cltd
mov
lret
or
inc
mov
out
push
adc
mov
data16
rcrl
int
sub
mov
push
sub
gs
sarb
notb
mov
pop
mov
adc
pop
jge
pop
mov
or
add
popa
mov
mov
inc
stc
push
push
lcall
dec
movsl
sbb
xor
pop
xchg
shl
jg
or
cli
cmp
or
mov
sub
push
sbb
and
test
int3
loop
popa
adc
pand
mov
mov
stc
adc
ss
add
push
inc
call
sbb
xor
outsb
ret
clc
mov
icebp
xor
std
jns
inc
dec
or
cli
jns
in
sub
jge
xchg
dec
pop
dec
sahf
mov
int
fwait
cmp
mov
lods
in
jmp
sub
pop
inc
cs
popa
out
mov
xchg
sub
cli
inc
xchg
add
mov
int3
enter
imul
pop
inc
push
in
jno
cmpsl
pop
fcompl
pusha
push
enter
push
pop
pop
mov
push
int3
adc
sub
cmp
sbb
sahf
mov
jg
xchg
pop
xchg
lcallw
pop
clc
int
pop
push
ds
inc
adc
mov
loopne
sbb
leave
mov
pop
imul
jg
jge
lods
jnp
jg
dec
cli
push
out
xchg
sbb
out
mov
sar
cmpsb
addr16
push
and
cs
push
push
cmp
mov
lea
dec
push
cltd
aam
insb
subl
lods
adc
xor
ret
lock
movsl
shll
mov
and
stos
or
inc
dec
test
adc
push
mov
and
out
out
pop
push
xchg
mov
mov
inc
lea
iret
xchg
xor
inc
xlat
nop
data16
and
xor
adc
neg
push
ret
int
decb
mov
pop
pop
push
inc
int
movsb
jbe
inc
jo
sti
push
mov
inc
insb
mov
mov
test
fucom
xor
jmp
dec
popf
out
into
dec
lods
shll
add
and
pop
xorl
or
sbb
adc
xchg
aam
mov
sbb
pop
xlat
or
dec
sub
adc
or
nop
jg
outsb
data16
lret
std
push
mov
and
sbb
mov
xchg
movsl
loop
mov
mov
push
push
xor
jbe
out
pop
ds
or
stos
mov
cld
add
imull
test
int
mov
lds
mov
cmp
in
fisubrl
dec
shll
inc
or
out
adc
sbb
add
inc
mov
lock
sbb
xchg
pop
loop
xchg
fnstenv
adc
ja
mov
scas
or
and
pop
aas
pop
data16
inc
popa
or
mov
and
pusha
dec
lock
mov
dec
pop
imul
xchg
adc
outsl
in
test
pusha
sbb
bound
gs
shr
sbb
in
clc
mov
mov
push
enter
loopne
push
inc
or
enter
adc
push
loopne
sbb
bound
ficoml
adc
cmc
dec
jl
js
xchg
or
xlat
xchg
jo
mov
loop
sub
cmp
jmp
cld
ljmp
sub
inc
ja
cmpb
cltd
out
mov
adc
fstps
push
int
outsb
and
leave
sti
fmul
dec
mov
sti
mov
arpl
cmp
rorl
cmc
stos
xor
jbe
and
hlt
test
adc
pop
pop
inc
mov
mov
mov
jge
inc
pop
dec
push
or
push
mov
add
mov
cmp
adc
jmp
imul
insl
ljmp
fimuls
stc
aad
xchg
and
out
ljmp
pushf
jmp
pop
pusha
lahf
sbb
fistl
or
jmp
mov
dec
mov
fsubrs
icebp
mov
xchg
shrl
arpl
dec
repz
fstl
cs
push
jecxz
loop
pop
or
jecxz
sub
inc
sbb
mov
jmp
mov
jle
lock
mov
xor
jecxz
mov
sub
mov
pop
and
fsts
pop
push
pop
leave
test
or
jl
mov
lods
clc
stc
ret
mov
or
fcmovne
mov
jecxz
jle
or
xchg
cs
cmp
push
fiaddl
dec
mov
xchg
jmp
shrl
push
shl
push
loopne
mov
mov
insb
sub
int
jbe
mov
repnz
fsts
sub
jnp
sub
push
lahf
fsubs
int3
add
adc
test
inc
pop
fdivr
pop
jbe
mov
pop
mov
lahf
mov
int3
add
jns
add
pop
mov
inc
jmp
xor
push
mov
mulb
push
mov
sub
rcrb
mov
test
or
aam
loope
push
jae
sbb
sbb
out
xchg
mov
cltd
push
inc
sub
ljmp
mov
scas
jns
push
pop
js
jne
loope
mov
inc
dec
pop
sbb
pop
jecxz
inc
pop
shlb
xchg
add
movsb
repz
add
adc
mov
enter
push
push
int3
nop
cmove
jno
ret
cs
pop
mov
dec
adc
out
cmp
xor
in
fnstsw
inc
pop
xor
fcomps
into
mov
fwait
jmp
ja
xor
ds
mov
cli
lds
cmpsl
fs
push
push
mov
and
dec
inc
in
imul
jecxz
std
pop
add
or
push
dec
cmpsb
and
adcl
lahf
pushl
jns
fwait
outsb
fwait
cmp
cmp
daa
sub
stc
aas
pop
sub
sbb
sbb
ficoms
stos
stc
adc
jmp
xor
jns
imul
cmp
push
jns
xchg
pop
je
cwtl
pop
pop
rol
jo
dec
xchg
mov
push
imul
in
stos
decl
adc
popa
mov
xor
push
cmp
subb
ss
cmc
xchg
inc
adc
or
pop
or
mov
call
mov
add
ja
push
xchg
mov
mov
sub
movsb
jb
fstpt
ss
push
ljmp
arpl
fsubl
adc
inc
mov
sub
jns
push
imul
push
jp
jmp
test
mov
mov
push
mov
scas
dec
sbb
aam
push
xchg
mov
sbb
roll
xchg
fnstcw
roll
xchg
loop
in
jne
idiv
jl
aaa
nop
cmp
imul
loope
dec
sahf
inc
xchg
ja
loopne
pushf
lock
repz
cmp
jno
pop
jns
push
scas
shlb
or
in
call
or
js
cmpsb
and
mov
ret
in
in
repnz
jmp
jp
xchg
cmc
test
pop
fisubs
std
cmpsl
pop
aas
jb
dec
idivb
push
pop
mov
mov
ret
and
jno
iret
and
xor
jecxz
inc
mov
rolb
mov
jns
mov
adc
push
in
cmp
pop
mov
xlat
jl
xchg
fildll
std
pop
insl
cmp
fdivr
sub
and
stos
fwait
push
jp
xchg
test
daa
pop
sub
sarb
jle
popa
insb
rcl
jae
sahf
fisttpll
mov
ss
leave
pop
lock
pop
cmp
adc
cmp
je
mov
dec
sbb
mov
repnz
out
enter
mov
inc
mov
dec
dec
sbb
scas
mov
pand
adc
nop
sbb
xchg
push
jl
test
and
mov
sub
inc
mov
cmp
lret
and
mov
mov
mov
es
ret
cmp
es
addr16
adc
or
sub
lret
cltd
sti
ss
dec
pop
cld
sbb
xchg
cmp
adc
lds
pushf
insb
fiadds
jmp
lahf
in
test
addr16
cwtl
cmc
inc
in
and
mov
xor
imul
iret
in
hlt
cmpsl
les
adc
push
jle
movsb
outsl
mov
jmp
dec
sub
xchg
call
adc
mov
aaa
cmp
test
arpl
or
je
cmp
xchg
push
mov
daa
and
xor
out
sub
clc
push
pop
or
cli
rcrb
int
cmp
sub
mov
neg
ljmp
fwait
add
sbb
popf
rcll
pop
mov
sbb
adc
adc
and
les
test
pop
inc
cmpsb
sub
xor
loop
cmpl
fcmovne
jne
int
sub
sbb
cmp
xchg
repz
stc
jnp
push
and
add
pop
test
jl
and
dec
jne
mov
out
xchg
mov
inc
xor
out
and
nop
scas
ss
sub
jge
in
cmpsb
jno
fs
adc
mov
clc
pushf
out
mov
out
mov
mov
jecxz
add
xlat
ds
clc
fs
inc
lret
cmpsb
insl
sub
push
jbe
scas
cmp
pop
je
dec
xchg
push
and
mov
icebp
sbb
loop
xchg
rol
cmp
xor
cmp
or
pop
mov
daa
add
mov
ljmp
jne
arpl
xchg
iret
dec
xchg
test
orb
lock
popa
jne
call
mov
xor
push
repnz
enter
pop
lea
rorl
cltd
or
and
mov
sub
sbb
imul
push
adc
ficoms
xlat
xor
pushw
push
xor
mov
dec
mov
neg
int
frstor
scas
clc
pop
inc
sti
popa
std
xor
fstl
add
xor
jb
int3
aam
push
lret
pop
cmp
pop
pop
sub
cmpsb
into
jmp
lods
jo
stos
inc
and
test
nop
repnz
std
push
cmpsb
arpl
cli
lret
in
pop
lea
adc
lcall
call
push
mov
push
dec
jnp
movsb
inc
not
test
aad
ret
scas
mov
scas
sub
mov
mov
stos
jg
dec
lods
lcall
shr
lcall
and
lods
jo
xor
repz
aas
pop
add
mov
xchg
ss
jg
jmp
jge
idivb
lods
pop
xlat
ss
in
pop
jnp
mov
push
mov
repz
xchg
pusha
jno
cmp
pop
mov
rolb
sub
cwtl
nop
push
bound
jmp
push
jns
pop
inc
adc
jmp
iret
paddb
push
dec
mov
outsl
popa
cmc
shlb
sub
stos
cmpsb
sub
nop
inc
add
mov
or
clc
movsb
push
imul
sbb
cmpsb
jno
fists
inc
arpl
and
rorl
cs
or
test
sti
and
pop
sub
stos
clc
repnz
aas
jb
sarb
pop
and
mov
mov
mov
insl
lret
sub
lds
push
clc
push
in
mov
aam
test
stos
lret
or
adc
jl
iret
xchg
out
out
pop
addl
iret
test
repz
notb
in
push
int
jbe
xor
clc
push
aaa
and
pop
mov
popf
sub
in
out
movsb
sbb
lret
push
sbb
addb
sub
ss
dec
mov
jecxz
cmc
mov
xor
fisubl
cld
insb
cs
in
sbb
sbb
movsb
fiaddl
out
xchg
sub
jnp
add
and
dec
or
cmp
rcrb
cli
xchg
jns
pop
imul
dec
les
leave
mov
stc
jmp
xor
lods
jg
inc
lret
sub
jmp
xchg
cmc
xchg
and
stc
mov
mov
int
ffreep
xchg
hlt
pusha
insl
test
jge
ja
dec
das
jg
cmp
xor
mov
mov
outsb
outsl
xchg
xor
inc
mov
sbb
mov
idiv
mov
cmc
in
mov
je
mov
sbbl
xchg
lret
sbb
fcoms
push
xor
cmp
je
dec
add
push
daa
push
icebp
call
fincstp
add
stc
push
repnz
stc
loop
cmp
inc
ret
add
insb
add
xor
popf
fstpt
jmp
cmp
or
jae
in
pop
push
adc
cmp
fisttps
leave
dec
arpl
push
bnd
xchg
pop
into
xor
mov
xchg
and
xchg
ror
cmp
jnp
stc
jbe
ds
pop
imul
add
xchg
cmp
push
adc
cmpsb
inc
mov
aas
and
jbe
dec
jns
loope
icebp
pop
lods
lcall
arpl
cltd
fsts
lret
pop
std
test
roll
xchg
jbe
push
mov
addl
adc
je
mov
jle
lods
cs
jno
xchg
push
stos
dec
cmpsb
push
inc
jb
cmc
push
sbb
popa
cmp
out
xor
jecxz
stos
push
push
adc
cmp
jae
mov
jbe
xchg
dec
jecxz
dec
cwtl
dec
and
outsl
les
ljmp
into
pop
mov
fdivrl
mov
orl
xor
or
adc
fldt
pop
jbe
icebp
pop
jg
xchg
std
or
or
push
repnz
insl
nop
pop
jmp
insb
scas
jne
in
loop
ucomiss
jne
push
push
add
jecxz
in
lods
mov
push
xchg
jmp
pop
adc
mov
xor
mov
in
sub
xor
jp
mov
out
clc
fnstcw
cmpsb
mov
add
jmp
push
pop
subl
sub
push
inc
pop
loopne
into
hlt
ss
incl
bound
or
inc
aas
mov
lods
push
sub
aad
jnp
lret
sbb
xchg
and
cmp
jge
shll
adc
sahf
dec
push
adc
in
cmp
sub
iret
movsb
dec
lods
ss
mov
cli
or
cmp
scas
call
jp
mov
das
mov
add
pusha
pop
gs
jmp
xor
cmp
hlt
daa
out
jp
mov
mov
add
cmpsl
pushf
aaa
es
sbb
into
sub
gs
sbb
jnp
pop
mov
stc
xchg
sub
pop
pop
test
in
sub
xor
add
add
sbb
xor
pusha
push
repnz
cmpl
clc
mov
add
push
outsl
int
cmpsb
call
stos
add
into
add
aaa
mov
icebp
cwtl
mov
or
xchg
test
push
jg
lds
pop
rcr
fwait
dec
jnp
sti
jo
push
add
mov
adc
dec
mov
cmp
inc
scas
add
shrb
or
mov
mov
cmp
in
mov
into
sub
fucom
cs
lea
xchg
addl
leave
bound
loop
lea
imul
dec
adcb
cmp
inc
enter
call
mov
push
push
dec
push
fistpll
repnz
mov
aam
cmp
or
lcall
mov
divb
cmpsl
pop
ficompl
jl
jecxz
xchg
lds
inc
xchg
aas
pop
or
xlat
xchg
mov
sarb
push
call
mov
lret
or
std
mov
negl
cltd
jnp
mov
sete
insb
jl
mov
pop
inc
push
cmp
mov
roll
dec
dec
imul
dec
fadd
cmp
mov
cmp
or
xchg
mov
orl
out
aam
or
xchg
ret
jp
adc
xchg
pop
add
push
aam
arpl
fmull
mov
call
mov
aad
into
or
fists
xchg
dec
cmpsl
sub
lods
in
popa
inc
sub
push
dec
icebp
addb
lods
sbb
shll
out
jb
push
cmp
sbb
and
stos
aas
repz
rep
add
dec
or
lock
cmpsb
jns
or
fcompl
or
inc
fwait
popf
mov
add
pop
sub
mov
cmp
jae
mov
ljmp
lahf
dec
aaa
addr16
sti
mov
cmp
cmp
adc
mov
notb
stc
pop
dec
popf
cs
jmp
dec
jo
mov
call
sub
dec
add
dec
lret
inc
xchg
mov
sub
mov
jae
cld
lds
jb
push
aad
lret
dec
rcrl
cmpsl
cmp
ljmp
mov
pop
jbe
pxor
adc
nop
mov
xlat
out
cmp
mov
cmc
ror
jle
cmc
lods
adc
mov
jae
lods
fistps
pop
xchg
pop
rol
dec
out
out
cli
pop
std
mov
xchg
mov
movsl
ret
imul
mov
push
jmp
xchg
dec
pop
cmpsb
xor
dec
dec
fcoml
ds
out
stc
cld
repz
andb
divl
sar
jmp
int
adc
daa
insl
mov
fnstsw
cmpsb
xor
in
dec
sbb
push
jl
mov
or
or
popf
cwtl
jl
or
movsb
xor
xchg
or
shl
shrl
push
addr16
iret
pop
imull
or
dec
push
mov
jo
les
xor
or
arpl
or
sti
cltd
or
fcompl
jle
xchg
stos
jb
or
addr16
lcall
lock
cmp
imul
and
inc
inc
or
pop
scas
insb
xchg
and
insb
mov
je
mov
mov
pop
es
cmpl
and
pusha
cwtl
lcall
arpl
add
or
or
or
xchg
mov
cmpsb
jae
sbb
mov
inc
mov
test
daa
mov
pop
mov
mov
xor
sub
mov
ret
mov
and
and
push
cmp
jo
int3
xchg
xchg
fsubrs
cmpsb
cwtl
add
sub
pushf
ja
fs
mov
je
adc
cmc
les
inc
popf
sub
pop
insb
or
int3
iret
jmp
test
sub
lret
fcomps
ficomps
dec
mov
fs
and
push
sub
xor
push
nop
mov
stc
testb
mov
popf
dec
push
loopne
or
xchg
inc
adc
sub
sarl
fistps
jecxz
cmpsl
aad
mov
inc
je
popa
add
dec
jmp
pop
stos
add
xor
push
push
pop
loopne
cli
in
fstpt
inc
jns
jno
pop
mov
cwtl
lcall
maxps
lds
add
stc
ja
xchg
mov
aad
jmp
test
imul
cmp
xchg
cmp
mov
lret
mov
jmp
bound
mov
je
inc
add
add
lahf
into
push
arpl
pop
jbe
xchg
push
daa
lods
lcall
insb
fldcw
and
fnstsw
in
mov
sahf
jno
aas
cld
adc
orb
push
add
dec
sub
push
aaa
sbb
into
push
pop
sub
sub
int
into
nop
clc
or
ja
das
dec
xchg
mov
fwait
daa
pop
mov
dec
stos
xchg
push
shlb
mov
jmp
mov
sub
dec
sub
scas
jb
or
pop
inc
cmp
das
jnp
jne
std
xor
xor
insl
pop
dec
add
add
lods
xchg
in
decl
stos
xor
pop
out
sub
sbb
push
das
clc
loopne
out
ret
cmp
out
fcmovu
outsb
pusha
mov
lret
sbb
or
jns
lahf
jl
fs
nop
add
or
ljmp
cmp
mov
sub
std
xchg
insl
in
pop
loop
pop
or
mov
leave
insl
sub
dec
ret
call
clc
aad
cmc
pop
lods
cli
push
xor
push
fs
cli
lods
pop
inc
daa
cmpl
loope
divb
sub
xor
push
mov
add
sbb
add
xchg
xchg
in
fst
and
int3
cmp
movsl
push
jg
ret
sarl
cli
mov
push
loopne
mov
mov
std
cmp
jecxz
ret
sbb
lret
mov
mov
mov
das
test
sub
subl
and
enter
rcl
lret
fnstsw
out
or
loope
push
popf
adc
loope
aas
jo
inc
or
xor
test
adc
jecxz
int3
add
xchg
outsb
lret
cmp
xchg
sub
mov
repnz
mov
fdivrl
fldcw
inc
popa
sub
mov
js
or
repz
xchg
outsb
lods
lock
sarl
js
insb
jo
scas
shr
jo
jno
jmp
fwait
dec
inc
lds
push
call
fmul
xchg
adc
xchg
lods
sub
test
xchg
ds
leave
xchg
adc
aaa
testb
or
mov
into
inc
movsb
inc
stos
sahf
cmp
in
insl
into
testl
dec
dec
pusha
xor
xchg
jno
arpl
je
sub
insb
jo
lret
jne
ret
loopne
shrb
in
bound
push
jge
insb
xorl
add
int
add
pop
xor
fisttps
cmp
je
mov
sbb
sti
arpl
int
dec
or
xor
pop
sub
and
clc
icebp
mov
push
stc
mov
pop
or
enter
enter
push
add
xchg
add
and
repz
cmp
in
jp
add
pop
jno
sub
pop
scas
or
adc
xor
hlt
mov
jg
orl
mov
mov
ret
xor
movsl
mov
sbb
push
add
push
mov
outsb
lea
xchg
lds
jle
les
sub
xchg
lea
jnp
xchg
test
sub
xor
jecxz
filds
pop
daa
push
or
out
pop
xchg
test
pop
lods
ds
sub
sub
add
push
dec
gs
cmpsl
or
sti
in
mov
popf
test
xor
mov
scas
mov
movsb
pusha
pop
add
loopne
fwait
aas
ficomps
bound
push
pusha
jae
sbb
sbb
icebp
lods
jecxz
xor
inc
call
jns
push
inc
leave
jne
orl
dec
jne
call
sub
sub
mov
and
adc
lret
xor
in
add
pop
icebp
push
je
jp
arpl
mov
add
nop
into
aam
and
addr16
gs
mov
hlt
mov
and
cs
xchg
jge
mov
ljmp
and
daa
dec
insb
insb
mov
es
fsts
movsb
mov
inc
pop
ss
js
sub
jmp
jb
mov
push
or
sub
mov
mov
lret
out
add
dec
push
stc
aad
rorl
sub
pop
jp
ds
ss
jns
enter
mov
inc
leave
mov
add
push
imull
push
out
stc
adc
ja
and
andl
jg
add
pop
mov
xchg
stos
push
pop
xor
inc
mov
inc
popf
adc
fwait
mulb
mov
sbbl
sbb
ljmp
daa
mov
orb
jb
jle
cli
mov
addr16
imul
repz
je
adc
loop
xchg
add
jnp
xlat
mov
test
push
mov
cmp
insb
pop
xor
mov
popa
mov
sbb
mov
cmp
mov
cmp
push
sbb
in
in
sub
sbb
addl
addr16
rclb
push
lock
jg
push
adc
cli
pop
fbstp
push
inc
sti
xchg
mov
inc
xchg
and
mov
pop
adc
mov
testb
add
or
xchg
add
or
xchg
ljmp
cmp
jp
xor
sub
push
xor
js
jns
mov
fiadds
adc
aas
dec
in
or
push
adc
xor
push
leave
add
mov
mov
test
xor
cmp
jg
aad
iret
sbb
fstpl
mov
push
push
lds
jbe
les
fwait
or
cmp
inc
jmp
xchg
push
addr16
sbb
dec
outsb
xlat
inc
jl
out
int
fmuls
cltd
sub
shl
aaa
mov
shrb
inc
loop
sti
sbb
adc
outsl
mov
lahf
leave
out
inc
inc
mov
sbb
je
out
outsl
sbb
jne
bound
andl
mov
inc
mov
inc
mov
movsb
sub
in
insb
repnz
divl
sahf
dec
push
mov
jo
subb
fadd
mov
leave
movsl
int3
test
or
and
and
fcom
mov
test
mov
inc
les
xor
mov
ror
in
jecxz
mov
cli
addr16
into
push
inc
ror
sub
in
mov
jl
mov
xlat
add
add
sbb
in
push
cld
cmp
push
xchg
adc
into
lods
imul
ror
sub
pop
adc
xchg
inc
sbb
sub
incb
xor
bound
fs
popa
push
into
js
lods
movsl
pop
xchg
add
and
push
in
dec
xor
push
cwtl
jno
lock
in
sbb
cmpsb
push
incl
sti
xor
int3
sbb
repz
jp
xchg
scas
xchg
sub
xor
inc
data16
adc
mov
les
and
pop
test
aaa
das
xchg
adc
stos
into
xchg
sti
adc
jnp
je
mov
xchg
and
pop
inc
pop
arpl
outsb
adc
inc
scas
sub
dec
jb
into
je
imul
dec
movsb
stc
divb
cld
jno
cmp
add
leave
dec
sbbb
lret
push
cld
mov
sbb
push
fidivs
adc
pop
or
or
lret
popf
cmp
rol
or
adc
xchg
repnz
fbld
xor
mov
aaa
xchg
xchg
sbb
stos
imulb
dec
call
stos
sbb
iret
mov
aam
movsl
outsl
or
les
stc
mov
test
sub
not
push
outsb
mov
mov
fwait
shrl
sahf
cwtl
cmp
sub
push
or
int
nop
aaa
ss
lock
ja
dec
fidivs
inc
mov
inc
push
stc
lret
pop
push
push
insb
cli
or
je
das
dec
cmp
scas
jmp
xchg
xor
aad
adc
aaa
cmp
mov
mov
into
adc
das
mov
data16
pop
rclb
push
lea
test
lret
inc
push
nop
mov
in
mov
aas
or
dec
push
je
xor
sbb
ss
cmp
mov
sub
cmp
ss
dec
inc
sarb
and
adc
mov
daa
fwait
arpl
loopne
push
or
stos
leave
les
jecxz
mov
cmpsb
jne
fdivrl
aas
es
mov
aad
jbe
enter
jno
das
sub
outsb
sub
out
les
je
adc
clc
mov
mov
stos
pop
mov
stos
mov
adc
sbb
sbb
jp
jmp
sahf
pop
mov
dec
movsb
fs
mov
jb
push
jbe
negb
sbb
int
ljmp
test
push
mov
cmc
or
fdivs
cmp
inc
arpl
popf
cld
mov
bound
fwait
push
sti
scas
cmpsl
outsb
or
popf
push
shl
mov
push
mov
xchg
dec
mov
jle
stos
adc
gs
sbb
in
push
and
inc
loope
lds
sbb
xchg
xchg
adc
dec
aad
jae
fsincos
adc
jbe
cmp
or
int
orb
jns
xchg
je
mov
dec
pop
out
out
pop
shrl
pop
das
inc
js
movsb
cmp
jb
dec
or
adc
inc
xchg
xor
shlb
shr
mov
test
adc
pusha
aad
pop
and
dec
int
data16
aas
cmp
int
and
sti
movsl
mov
je
push
push
add
insb
adc
dec
insl
ret
jg
leave
or
fwait
sbb
fwait
cmp
rcrb
push
insl
cmp
add
xor
mov
mov
lret
imul
sub
in
ds
mov
fs
inc
inc
or
cmp
outsb
inc
push
movsl
rorl
and
scas
mov
xchg
pushf
mov
jo
push
rclb
inc
or
repz
dec
push
mov
push
jge
sbb
and
aam
jbe
cltd
xchg
gs
push
lcall
sar
xchg
xor
lcall
mov
xor
push
xor
mov
cs
rclb
push
adc
add
push
jl
jl
int3
dec
cld
divb
cmp
jo
ret
mov
push
outsl
pop
sbb
stos
mov
repz
sub
cmpl
decl
cmp
lret
or
test
cmp
mov
sahf
cmp
sahf
inc
in
pop
adc
bound
xchg
inc
sbb
or
popa
test
pop
mov
ljmp
cmp
xchg
jae
in
push
outsb
xchg
and
out
jmp
ja
mov
dec
ror
jl
in
rcl
add
pusha
mov
test
sub
and
xchg
fadd
mov
scas
mul
jb
das
xor
iret
or
jb
ljmp
push
cltd
out
mov
les
sbb
andl
icebp
add
rcrl
test
push
jbe
lret
std
lret
pop
sub
xchg
adc
adc
xor
push
lds
push
jge
jp
rcll
mov
jne
jle
mov
inc
or
sbb
outsb
std
add
push
out
jp
insb
inc
pop
xchg
xrelease
sbb
in
and
jmp
sbb
cmp
xchg
and
add
xchg
mov
je
fwait
cmp
stc
sub
jge
cli
mov
movsl
add
iret
push
sbb
data16
stc
mov
mov
cs
imul
xor
jbe
xor
pop
push
imul
and
jne
cwtl
inc
mov
fs
shl
hlt
inc
lahf
add
bound
enter
sub
mov
cmpl
fsub
jae
sub
mov
adc
test
dec
lret
leave
inc
mov
add
lods
gs
popa
pop
sarb
es
push
movsl
scas
cmp
and
mov
test
xchg
out
daa
push
leave
push
rcl
mov
push
bound
je
cld
rclb
xchg
cmp
lock
je
mov
mov
fstps
and
int3
cmp
sahf
adc
lahf
fnstenv
lcall
add
mov
sbb
adc
aam
fnstenv
xor
jo
dec
inc
push
cld
mov
and
push
inc
push
nop
xchg
adc
sbb
sti
and
mov
ja
dec
pop
mov
fidivrl
rclb
xchg
pop
js
add
adc
repnz
mov
cmpsb
jb
jo
mov
mov
cmc
mov
js
dec
push
push
insl
mov
push
dec
in
inc
insb
leave
and
stos
xchg
xor
xor
inc
dec
sub
fidivs
jo
push
fldt
shl
bound
pusha
stos
mov
dec
enter
pop
dec
dec
add
scas
adc
mov
dec
or
pop
aad
out
clc
mov
xchg
mov
jb
mov
mov
clc
sbb
filds
mov
cwtl
adc
xlat
mov
cwtl
or
ss
pusha
xchg
mov
stos
in
lret
pop
ret
les
or
jns
mov
leave
push
xlat
les
iret
mov
sbb
or
scas
cmp
icebp
adc
sar
cli
arpl
fs
fildl
dec
and
stos
inc
push
jne
lcall
jecxz
fbstp
ss
inc
aaa
sbb
xor
xorl
jmp
call
xchg
xchg
and
leave
add
dec
cmp
shr
call
pop
sub
push
es
leave
dec
icebp
popf
push
or
xor
xchg
mov
ds
pop
and
mov
stos
inc
out
push
test
iret
xor
mov
push
cld
test
test
cltd
pop
rcrl
call
decb
movsl
mov
addr16
and
orb
xor
fbld
push
mov
stos
dec
push
scas
dec
mov
dec
cltd
sbb
mul
jo
ret
inc
jmp
loope
test
mov
pop
inc
xchg
je
popa
xchg
cmp
jge
nop
mov
andl
sub
and
push
fdiv
xchg
push
ret
roll
enter
loopne
inc
or
xchg
add
adc
flds
sub
xor
inc
jae
sub
pop
xchg
clc
xlat
adc
xchg
pop
adc
mov
pushf
aad
jns
insl
dec
jp
mov
lds
adc
lods
movsb
jo
into
into
cmp
and
insl
addb
mov
movsb
fildll
mov
sub
int3
jg
shll
mov
lret
pop
xchg
test
jle
mov
jge
xlat
dec
or
aam
in
movsl
push
cmp
jnp
mov
stos
jae
or
cmp
test
mov
lcall
mov
cwtl
cs
in
pop
mov
push
outsb
push
icebp
imul
cmc
stc
sarl
fldl
xchg
sti
inc
cmp
inc
xchg
inc
dec
aas
fs
lret
xchg
cmpsb
xchg
out
loop
jnp
gs
lcall
stc
jo
jb
xchg
mov
inc
cmc
lret
and
loop
fsts
daa
aad
imul
xchg
negb
xchg
jle
ret
adc
cltd
out
mov
mov
jno
test
clc
dec
sbb
sub
inc
mov
or
dec
jecxz
mov
cmp
push
rorl
pop
insl
mov
or
jb
cld
push
ss
fldcw
jns
pop
je
fidivl
add
xchg
fbld
repz
dec
mov
push
aaa
cmpsl
mov
enter
into
and
pop
andl
xorb
sbb
add
mov
aaa
out
xorl
adc
sbb
and
into
cmp
repnz
xlat
sub
divps
movsb
mov
stc
mov
adc
es
add
cwtl
sbb
ds
sahf
pop
mov
jl
jle
fsubl
and
in
ja
mov
pushf
jp
jb
dec
jl
mov
aas
dec
test
idivb
in
lea
pushf
js
es
test
call
mov
mov
mov
mov
cs
sarl
aad
out
jo
fstpl
inc
mov
mov
inc
push
or
stos
mov
lods
fwait
xlat
arpl
lret
sbb
xchg
adc
sub
loopne
repnz
ljmp
sub
push
pop
lock
pop
xor
jb
jnp
inc
sti
sbb
or
xor
mov
xchg
jl
ret
jle
dec
push
dec
dec
and
jl
mov
sbb
and
fildl
sub
dec
push
xchg
mov
adc
or
or
sahf
clc
insl
or
sbb
jmp
and
xchg
xchg
and
out
iret
or
or
pop
push
stos
ja
rcrb
mov
stos
call
sub
lock
cs
inc
jb
push
adc
jns
push
in
xadd
sarl
xchg
xor
xchg
pop
mov
jne
fbld
inc
rcrl
aaa
fildll
test
add
dec
jg
jle
repnz
jno
enter
sarb
outsl
mov
pop
stos
mov
push
add
fs
jl
push
sub
sahf
sbb
rcr
or
aam
cmc
ror
das
xchg
cmp
lds
rorl
inc
es
mov
jnp
popa
sub
in
jmp
decl
push
dec
imul
xor
mov
pop
pop
stos
pop
pop
mulb
clc
icebp
sbbl
or
sub
inc
mov
aaa
push
leave
mov
add
fiadds
nop
mov
sub
sbb
or
in
aas
incb
call
es
push
mov
sti
test
mov
mov
sbb
cwtl
adc
adcb
mov
insl
fbstp
clc
xchg
fisubl
and
aaa
push
test
jbe
jns
fsubrs
inc
jae
decb
rcll
fidivl
clc
pop
lock
inc
test
iret
enter
cmpl
popf
xor
ret
and
jle
cmp
push
in
or
test
adc
adc
mov
loopne
jo
jg
movsl
stc
add
imul
clc
repz
repz
push
jo
dec
les
aad
pop
mov
negb
adc
aam
popf
and
pusha
sub
lret
xor
adc
xchg
jne
inc
or
lahf
sahf
mov
enter
into
scas
add
sub
inc
fs
mov
incb
xchg
sbb
push
push
xchg
negb
push
adc
xor
jecxz
xchg
movsb
cmp
xchg
jno
add
sub
push
iret
add
cmp
rclb
sysenter
aam
mov
call
dec
out
mov
cvtps2pd
daa
sub
popa
mov
inc
mov
in
pop
ja
ja
mov
adc
sub
pop
inc
cmpsb
or
sub
mov
mov
and
xchg
push
mov
xor
outsb
adc
outsl
fs
pop
adc
mov
inc
and
add
repnz
ret
sub
xor
insb
sahf
ja
pop
ja
out
jnp
fs
test
ret
push
mov
pop
iret
dec
mov
cmpb
stos
adc
int3
jb
jo
dec
fstpl
pop
por
pop
daa
roll
dec
or
enter
jmp
out
pop
lock
mov
push
sbb
adc
lcall
dec
and
and
and
clc
rep
cmpsb
jg
add
xor
inc
psadbw
push
std
mov
mov
pushf
push
sbb
iret
or
jecxz
inc
jmp
adc
idivb
cmp
loopne
jg
cwtl
into
inc
or
nop
and
adc
mov
jns
daa
dec
inc
xchg
cmp
cwtl
loopne
jge
mov
neg
ret
push
ja
out
mov
inc
call
scas
adc
push
jg
inc
int3
xor
xor
mov
mov
push
pop
inc
pop
sbb
pop
mov
adc
inc
push
xor
and
nop
mov
nop
fisubl
hlt
dec
lds
call
in
xor
xor
mov
push
adc
repz
lock
jns
ret
lcall
outsb
xchg
repz
xor
mov
xchg
fisubrl
test
mov
addl
xor
pop
pop
jl
xchg
cli
inc
mov
test
aaa
xchg
lret
popf
in
scas
fs
fstps
add
sbb
xchg
adc
push
fmulp
push
xor
lret
sbb
scas
hlt
mov
lret
outsl
cmpsb
fisubl
push
icebp
loop
xchg
sbb
cmp
xchg
xor
xchg
dec
out
sbbb
lret
aaa
xorl
xchg
mov
aam
scas
mov
in
mov
adc
out
push
dec
cmp
test
xchg
sub
out
lea
or
xor
test
or
mov
push
sti
leave
jnp
sti
popf
jl
jmp
shlb
xchg
in
subb
mov
into
mov
mov
loopne
pop
mov
insl
mov
loop
adc
popf
nop
jp
js
adc
insl
int
jmp
imul
popl
cli
and
dec
loope
cmp
xchg
xchg
cmp
addr16
sub
mov
ret
cmp
inc
movsl
jmp
cmp
push
out
add
push
into
pop
add
imulb
inc
jno
adc
mov
pop
push
in
ds
xchg
lret
jmp
cli
jmp
sub
dec
push
mov
inc
mov
cmc
iret
pop
popf
fidivl
movsb
jge
mov
inc
aas
rcr
cmp
pop
push
fcoml
jl
jno
dec
loope
xor
adc
xor
inc
push
inc
lret
xorb
adc
dec
int
jno
faddl
jp
js
xchg
sbb
sbb
enter
lock
test
std
test
adc
xchg
iret
sti
rcrl
cmp
aad
jge
cmc
push
xchg
mov
jae
insl
jbe
mov
adc
cmp
mov
inc
fsts
mov
mov
lods
inc
stos
sbb
scas
mov
jle
add
in
popf
imul
orb
sub
pop
popf
in
inc
jb
cs
icebp
ljmp
xor
push
cmpsl
cmp
or
mov
cld
call
out
mov
add
in
inc
js
mov
inc
sub
das
int
adc
cld
sahf
adc
sbb
and
sti
lods
sarb
add
mov
push
add
sub
or
es
jae
aaa
sahf
lods
iret
sbb
mov
add
push
mov
sub
insl
stc
icebp
sbb
arpl
inc
mov
andl
dec
sbb
mov
pop
cltd
mov
adc
into
mov
jecxz
inc
fiadds
arpl
pop
lock
daa
fbld
add
pop
mov
xlat
imul
and
mov
and
int3
jmp
xchg
ja
fmuls
pop
aaa
nop
out
xchg
add
fcomi
icebp
es
test
pop
orb
lea
bound
jl
sbb
and
pop
xchg
sub
sahf
insl
xor
outsl
stos
cmc
les
inc
ret
adc
pusha
dec
add
cltd
int
enter
adc
dec
push
lcall
jle
xor
jp
adc
movsb
dec
xor
cmpsl
stc
je
ret
aad
inc
test
xor
ret
sahf
out
inc
call
xchg
mov
lahf
shufps
in
cmp
sub
decb
sub
dec
mov
test
shll
dec
sub
mov
int3
xchg
int
je,pt
pop
hlt
pop
daa
pop
movsb
mov
adc
jle
outsb
mov
cmpsl
call
aad
xor
cmp
ret
jae
xor
add
adc
lds
shll
or
fdivl
and
push
data16
lret
xchg
pop
xchg
call
clc
xchg
cmp
je
cmp
fistl
push
rcl
add
call
xlat
nop
jl
jbe
jmp
test
push
lock
and
add
in
cmp
and
xchg
outsl
mov
pop
ljmp
xchg
cwtl
mov
push
stos
pop
jae
shll
movsl
mov
cli
mov
out
rdpmc
lock
add
and
cmp
fstpl
out
adcl
js
sbb
mov
leave
pop
xchg
mov
enter
adc
dec
pop
movsb
aaa
lret
or
rclb
or
jecxz
inc
loop
jno
les
movsb
xlat
mov
mov
movsl
stos
mov
movsb
and
in
or
fidivrs
inc
pushf
jg
or
repz
int3
repz
fwait
sbb
push
add
jecxz
ja
loope
mov
shl
ja
adc
dec
mov
adc
xor
adc
mov
jecxz
dec
movups
jle
rep
mov
movsb
xchg
sub
lock
xchg
xchg
xchg
lds
sbb
aaa
or
fidivrs
lods
push
popa
jmp
jns
ljmp
pop
sub
int
mov
popf
sub
add
mov
mov
add
repnz
inc
cmpb
in
int3
xchg
test
mov
outsl
test
sub
sub
jno
mov
sbb
inc
mov
call
aas
hlt
pop
jo
dec
das
out
add
mov
test
xor
jne
lods
jbe
andl
xchg
inc
push
inc
test
in
pop
mov
pop
ss
pop
leave
push
mov
outsb
cmpsl
sbb
adc
pop
adc
jmp
sbb
jmp
nop
pop
push
imul
add
test
sub
pop
jmp
cli
sub
xlat
adc
push
enter
ret
push
add
cli
cli
mov
enter
and
add
into
xchg
jno
xchg
int
fcmovb
lret
adc
xchg
dec
mov
cmp
jle
shlb
xchg
les
dec
jne
dec
fdivl
mov
mov
lahf
push
xorb
jge
ret
add
push
or
test
cwtl
inc
xor
mov
inc
pop
jo
iret
aad
loope
push
adc
or
xchg
mov
mov
xchg
adc
addr16
inc
into
nop
int3
fistpl
or
insl
jne
or
cmpsl
lods
inc
cmc
jecxz
fisttpl
inc
cld
pop
das
mov
inc
adc
sbb
cwtl
xchg
ljmp
add
xor
fyl2x
jno
shrl
outsl
outsl
rol
push
lods
call
jae
add
rcrl
mov
movsb
adc
lahf
sub
pushf
imul
jecxz
add
sbb
cwtl
cs
xor
dec
cmc
jne
pusha
and
into
loop
xchg
jle
xchg
lock
out
imul
inc
cs
loope
out
push
mov
pop
jge
sub
push
pop
push
pusha
mov
addl
and
mov
jb
jb
xor
stc
inc
bound
cmp
xor
mov
dec
into
stc
pop
mov
in
ror
adc
xor
pushf
sub
mov
cli
pop
xlat
sub
push
jae
movsl
js
mov
pop
push
js
mov
push
dec
xlat
popf
xchg
mov
mov
xchg
jge
test
adc
fmull
sbb
call
popf
or
std
jp
out
out
jb
rolb
mov
inc
xlat
mov
mov
int3
sub
pop
rcll
xchg
dec
lahf
push
pop
push
and
jecxz
mov
dec
xorb
mov
jne
js
fnstcw
cs
aad
pop
or
cltd
mov
xor
popa
xor
shl
movsl
rolb
xor
xor
ret
and
sbb
adc
dec
rcr
stos
xchg
or
mov
arpl
out
or
adc
lcall
fdiv
or
adc
adc
popa
jg
dec
rol
repz
and
fcom
inc
rorl
xor
outsl
fnstenv
ss
mov
loop
test
in
sahf
mov
loopne
or
fistpl
jmp
xchg
sbb
cmpsb
enter
in
fstpt
cmp
jmp
mov
add
aaa
cmpsl
jl
int
addr16
lea
shlb
aaa
cli
and
jl
testb
pop
xor
sbb
inc
cmp
jb
jmp
dec
adc
loopne
adc
adc
mov
add
fadd
repz
das
stos
adcb
lcall
xchg
aam
loopne
add
cmp
notb
push
jle
dec
lret
push
loopne
fiadds
and
loop
cmpsb
outsl
jnp
jae
dec
gs
call
lods
adc
push
cwtl
leave
das
icebp
mov
and
xsaveopt
pop
gs
add
sub
adc
cmp
add
pop
stos
add
cld
cmpsl
push
adc
inc
imul
imull
mov
sbb
push
jl
clc
xchg
imul
aam
in
inc
cltd
das
aad
mov
inc
jge
mov
adc
xchg
daa
hlt
mov
xor
push
mov
addl
push
ja
jb
jp
or
fstl
inc
inc
imul
test
jp
jns
fwait
sub
test
pop
nop
push
dec
stos
adc
cmp
inc
cmp
jge
jle
mov
arpl
arpl
push
inc
jmp
or
fisubrl
mov
jns
adc
pop
inc
imul
pop
testl
pushf
andl
into
jecxz
ljmp
add
hlt
add
loop
orb
and
imul
jp
negb
mov
or
and
test
add
cmp
filds
pop
das
movsl
fistpl
mov
or
adc
push
in
mov
aas
fwait
xchg
je
mov
test
xor
nop
mov
push
ja
sbb
pop
jge
std
ficoml
sub
jp
ljmp
xchg
mov
cmp
add
pop
jecxz
push
imul
lock
sbb
ret
lods
add
push
jg
jle
jo
lods
mov
ret
add
xchg
xchg
scas
call
dec
add
orb
and
inc
call
ljmp
icebp
cwtl
adcb
xchg
movsl
jl
cltd
outsb
mov
mov
dec
nop
cmp
and
sbb
cs
cmpsl
lods
aas
movsl
mov
inc
mov
mov
outsl
rcr
cwtl
out
in
add
ds
lods
pop
jnp
inc
and
nop
int
fldenv
jg
pop
pop
ret
xlat
call
inc
cmp
add
out
ficomps
sbb
lret
cltd
sub
sbb
shl
outsl
das
sbb
aaa
cmc
jp
push
inc
test
fsubs
nop
adc
repz
inc
xor
call
dec
out
lcall
addps
gs
adc
mov
sub
lcall
sub
pop
hlt
cmc
pop
hlt
xchg
jp
popf
rcrl
in
dec
push
mov
gs
push
dec
popf
sbb
xor
and
jb
inc
and
xchg
movsl
xchg
sbb
repz
fistps
add
inc
mov
sahf
sbb
lock
scas
mov
push
xor
jae
adc
add
push
inc
jno
push
aad
ljmp
xor
pusha
cli
rcrb
push
inc
nop
test
repnz
dec
fldenv
xlat
or
mov
movsb
adc
push
cld
or
xchg
mov
dec
sbbl
ja
outsb
push
mov
dec
daa
movsb
stc
out
add
ret
pop
jb
test
lea
scas
out
xchg
ja
aad
xchg
shl
mov
add
outsb
or
mov
mov
dec
aad
mov
loop
movsb
in
aas
pop
cmc
mov
hlt
out
sub
inc
adc
mov
mov
cs
repnz
jge
clc
sbb
fs
xor
es
and
dec
shr
cwtl
pusha
rcrb
sbbl
push
out
in
out
rcrl
jbe
dec
mov
addr16
fs
jb
dec
inc
sbb
movsb
mov
mov
ja
jl
sti
xor
sbb
mov
adc
cs
push
cmpsl
popa
imul
dec
test
add
push
fs
adc
or
les
int
sub
insb
out
aas
mov
mov
cwtl
adc
ljmp
inc
cltd
or
lret
rclb
out
push
in
cmp
sub
or
negb
cld
out
push
dec
outsl
xor
mov
fsubrs
jb
pop
pop
movsl
sbb
ret
xchg
mov
cli
jno
ret
jmp
pop
in
sub
cli
add
jno
add
nop
into
push
jp
add
pop
push
mov
mov
pop
mov
jle
sbb
ljmp
movsb
xchg
inc
inc
or
jle
mov
cmpsb
jecxz
adc
scas
aaa
add
mov
scas
sarl
pop
inc
push
mov
jne
arpl
clc
adc
test
outsb
xor
aam
jge
js
je
push
dec
daa
out
or
add
inc
pop
pop
test
sahf
sbb
imulb
adc
addr16
cmp
jg
out
jecxz
mov
adc
jmp
adc
inc
lahf
adc
pop
inc
cmp
sbb
add
leave
cs
loop
lret
sub
in
test
fdiv
icebp
test
cmp
fwait
movsl
xchg
jge
cli
push
add
xor
adc
pop
in
ss
sarl
mov
cmpsb
xchg
and
mov
gs
and
stos
imul
sbb
aam
jmp
call
ds
jmp
mov
aaa
ss
or
pushf
push
mov
lcall
cmp
sarb
in
add
sahf
sub
clc
xchg
xchg
mov
loope
sti
jne
mov
or
jno
jge
inc
jns
sub
mov
sbb
xchg
pushf
insb
cli
mov
fldt
xor
fwait
outsl
popa
fwait
dec
xchg
push
out
mov
mov
push
scas
pop
sub
cld
jmp
movsb
stos
sbb
mov
lea
imulb
or
add
jne
nop
inc
repz
xchg
sbb
cwtl
shll
jg
aas
mov
and
cmp
testb
cmpsl
outsl
out
fs
shrb
jecxz,pt
add
and
xchg
aad
push
or
push
lea
sti
insb
fs
aad
fmuls
pop
xchg
add
mov
sti
mov
int3
ret
aad
jle
cli
cmp
mov
or
pop
ljmp
xchg
aas
lods
mov
negl
sbb
pop
inc
cmc
hlt
out
pushf
sub
push
sub
test
imul
test
rorl
pop
cmp
std
xchg
sbb
test
mov
in
rcrl
add
xchg
sbb
jns
in
shr
mov
cs
hlt
orb
es
aaa
push
adc
lock
test
inc
mov
xor
test
push
jo
mov
and
and
push
inc
pushf
out
xor
andb
xchg
dec
loopne
cmpb
rolb
lds
repz
lcall
mov
xchg
daa
inc
cmpsb
add
push
mov
mov
loop
adcl
test
mov
mov
pop
mov
ljmp
fdivl
aam
adc
mov
xlat
mov
cmpsb
xor
iret
sbb
movzbl
mov
cltd
jecxz
pop
or
movsb
movsl
test
gs
movsl
dec
test
and
cmp
xchg
mov
enter
push
and
fs
sahf
mov
movsl
mov
inc
mov
pop
scas
mov
dec
jle
add
sub
movsl
pop
adc
mov
stc
push
popa
sub
notb
mov
lret
push
mov
fcmovnu
gs
adc
mov
sub
xor
adc
in
insb
out
add
inc
insl
cmp
enter
sbb
cld
cs
pop
or
and
or
sub
mov
dec
push
lret
std
or
int3
push
std
sub
sub
bswap
jo
mov
aas
dec
mov
and
ret
or
inc
inc
mov
mov
adc
xorl
sbb
dec
mov
cmp
cmp
iret
jge
mov
add
hlt
xchg
pop
xor
mov
and
pop
mov
push
dec
in
xlat
in
inc
dec
pop
fcoml
movsl
or
popf
lea
mov
jp
pop
pop
cmpsb
sbb
call
mov
sbb
mov
or
pop
jo
mov
xor
adc
outsb
push
clc
or
sbb
adc
out
fistps
out
ret
insb
xor
dec
push
enter
and
orb
popf
into
mov
inc
dec
push
popa
cmpb
xchg
push
imul
out
mov
scas
cmp
sbbb
lock
xchg
mov
out
repz
jae
popf
jg
jnp,pn
sub
stos
pop
pop
sarb
push
dec
in
call
lcall
cmpl
fldl
xchg
pop
xlat
icebp
fdivrl
xor
inc
std
jb
add
ret
cmp
or
imul
lea
nop
cmp
jp
call
mov
jg
mov
movsb
cmp
std
fadds
into
ss
es
insb
cmp
add
xchg
cmpsb
pop
roll
add
or
cld
insb
cltd
inc
mov
cwtl
int3
lahf
add
inc
cmc
push
or
push
mov
pop
lods
stos
add
fwait
mov
in
addb
fistpl
adc
mov
insl
mov
mov
insl
mov
jns
adc
xchg
test
sti
jb
mov
lds
push
jo
and
imul
xor
in
enter
or
out
movsl
xor
mov
jne
cwtl
outsb
push
ja
adc
inc
dec
or
movsl
push
pop
dec
in
aaa
dec
push
fcmovu
roll
xor
fidivrs
mov
decb
data16
pop
dec
push
aaa
add
imulb
pop
dec
or
in
enter
inc
add
pusha
scas
push
mov
adc
lret
cmp
mov
andl
mov
insb
insl
pop
ja
cmp
sbb
inc
pusha
sub
loop
jne
mov
sbb
sahf
cld
lods
daa
stos
or
pop
jle
stc
movsl
jae
jbe
jmp
inc
xor
cmpsb
repz
mov
cmp
in
adcl
call
test
xor
mov
int3
test
leave
jl
cmp
inc
lret
adc
mov
fldz
mov
add
popf
pop
in
lret
lahf
ljmp
pushf
aaa
push
and
mov
addb
int
xor
jp
sbb
push
lds
or
mov
xchg
xchg
pop
mov
iret
xchg
adc
ret
testl
adc
cmp
lret
push
adc
dec
loope
push
jp
xor
and
sbb
lahf
int3
jb
or
adc
lds
mov
mull
lahf
push
jnp
arpl
aad
orl
fidivs
popf
pusha
sti
test
mov
shlb
arpl
cmpsb
sbb
cltd
xchg
jle
cwtl
aas
cli
add
push
inc
mov
rorb
mov
mov
imul
mov
lahf
adc
pop
xor
adc
sbb
in
in
aaa
jno
dec
or
dec
inc
mov
jmp
pusha
lret
loope
mov
imul
mov
cmpsl
push
ret
outsl
mov
mov
rolb
add
movsl
lcall
xchg
or
fcomi
push
mov
cmp
xchg
push
in
dec
sahf
sbb
lret
das
adc
test
shlb
or
push
jecxz
std
sti
add
and
fwait
jl
adc
xor
inc
push
cmp
daa
loopne
cmpsb
sbb
orb
sbb
lea
jl
icebp
push
movsb
sub
pusha
mov
jle
out
cli
in
cli
fstl
add
adc
fstps
cmc
int
jnp
jp
fs
iret
imul
push
sub
in
push
inc
iret
push
sub
loop
outsb
imul
scas
popa
nop
sub
cmp
pop
xor
xchg
fs
add
cmp
daa
jo
lahf
and
out
inc
and
and
adc
rclb
mov
mov
test
fstpl
xor
dec
cli
dec
stos
inc
or
push
sbb
lods
loope
rolb
aaa
in
sbb
lock
jb
inc
push
aaa
cmp
in
xchg
xor
push
aad
sbb
jl
xor
in
xchg
stos
enter
push
dec
js
adc
xchg
lret
jne
sbb
cmp
push
mov
inc
sbb
mov
sar
imul
out
sub
mov
jbe
and
js
or
pop
sahf
inc
sbb
add
cmp
cmp
add
push
fdivr
aad
cmpl
sbb
pop
ror
gs
fwait
push
pop
jo
andb
stos
sbb
pop
stc
adc
sbb
pop
and
int
out
adc
cli
outsb
in
push
pop
sbb
push
add
bound
mov
mov
xchg
or
dec
push
pop
jae
push
push
ret
or
inc
xor
and
ljmp
jl
inc
or
out
dec
das
dec
fldcw
jno
cld
lock
xchg
scas
jae
push
inc
push
sub
cld
stc
push
dec
jae
or
out
jo
jo
insb
pushf
sbb
fistpll
mov
adc
inc
inc
pushf
jnp
frstor
popa
fs
hlt
push
cs
adc
jnp
lods
das
push
and
hlt
in
stos
mov
stos
mov
outsl
jg
aaa
sbb
cmpsb
dec
sbb
push
or
imul
lcall
rcrb
test
jno
roll
sbb
dec
call
mov
aad
xor
stos
or
xchg
pop
cmpsb
dec
lods
mov
stos
and
loope
cmp
lds
ss
dec
and
mov
loopne
jnp
adc
mov
xor
inc
pop
and
cmp
shll
sub
pop
pop
test
mov
gs
dec
in
mov
xor
outsb
push
stos
int
gs
cmp
jecxz
shrl
xchg
scas
cmpsb
mov
neg
es
das
lahf
sbb
icebp
mov
cmc
cld
xchg
push
pop
push
cmp
movsb
es
gs
or
hlt
push
inc
add
lahf
popf
leave
sub
pop
insb
mov
jmp
sti
aam
sti
pop
mov
push
or
add
sub
sahf
je
movsl
enter
add
std
add
repnz
loope
mov
pop
cltd
ja
das
shlb
or
sbb
in
mov
cmc
mov
rcrl
int
dec
mov
adc
out
testb
xchg
das
sahf
mov
in
fs
cli
sbb
ds
out
pop
bound
adc
inc
outsl
daa
jp
jecxz
xor
aam
and
js
inc
les
mov
inc
cld
out
inc
push
push
and
xchg
cmp
jmp
cmp
cltd
loopne
frstor
arpl
add
xor
mov
mov
dec
push
in
sub
daa
fbld
cli
inc
xchg
xchg
test
pushf
jae
mov
xchg
rol
sahf
je
mov
push
imul
xchg
inc
insb
push
push
shlb
stos
cmp
les
cmp
scas
call
leave
xor
mov
adc
xchg
push
xchg
push
fmull
jp
stos
mov
pop
push
stos
or
mov
les
push
jne
fcmove
cmc
popf
fistl
or
push
xchg
std
jge
call
adc
cmpsl
sub
pop
jecxz
and
scas
mov
pop
cli
les
xchg
jecxz
sub
ds
pop
lret
popa
xor
stos
addr16
add
test
fsubrs
jo
inc
frstor
push
cmc
sub
cmp
stos
ror
mov
test
inc
repz
mov
or
cli
jne
ja
jae
inc
test
or
push
adc
add
pop
ja
in
mov
mulb
sub
mov
xchg
cwtl
popw
mov
enter
push
mov
sti
out
sahf
fildll
mov
mov
jns
or
fimuls
push
xchg
in
add
mov
mov
pop
sbb
xchg
pop
mov
and
into
repnz
insl
aas
sbb
push
inc
jmp
subl
push
les
inc
leave
pop
in
jno
add
loope
jbe
mov
mov
insb
push
inc
fisubs
fcomi
lahf
fcmovnbe
daa
outsl
dec
mov
mov
pushw
push
pop
insb
sbb
cmc
dec
loop
push
inc
xor
push
loope
dec
pop
scas
sbb
sar
jbe
xor
es
lahf
out
xor
add
cs
sbb
icebp
hlt
push
sub
sbb
in
jge
add
cmpb
push
sbb
stc
repz
or
out
push
sub
je
fcoms
fwait
popa
dec
test
hlt
sbb
jmp
enter
jmp
jle
jecxz
outsl
pop
xor
pop
shlb
push
push
inc
sbb
dec
pop
mov
aas
mov
out
or
mov
pop
outsb
inc
outsb
fsubl
pcmpgtd
testb
insl
pop
adc
loope
in
xor
enter
push
sti
mov
push
sahf
add
daa
lock
ret
jno
mov
push
mov
inc
sti
xor
iret
ret
rcrl
push
dec
cmp
xchg
fwait
lds
or
leave
push
xor
adcb
jecxz
rcr
mov
jmp
inc
aam
cmp
pop
insl
imul
pop
inc
push
pop
mov
jg
insb
psubd
outsb
add
enter
adc
repnz
and
dec
or
jnp
clc
mulb
xchg
fsts
sub
outsb
sub
jno
mov
lret
aas
std
pusha
scas
cmp
sahf
sub
dec
mov
add
pop
pop
adc
cmp
gs
lcall
call
stos
mov
mov
add
dec
test
xor
shlb
cli
mov
stos
mov
dec
sahf
lock
sub
inc
rcrl
jns
test
inc
aam
lock
mov
addb
pop
cmp
sbb
out
data16
xchg
pop
push
adc
gs
lods
lahf
adc
mov
jno
jae
sub
das
in
jmp
push
or
xlat
xchg
and
adc
movsl
clc
in
stos
xchg
push
fdivl
ret
or
xor
aaa
mov
scas
dec
sub
repz
decb
cld
mov
push
xorl
test
xor
insl
imul
movl
ja
ret
mov
repnz
inc
xor
jg
jns
std
imul
jo
int3
test
xchg
cmp
mov
in
add
ret
jecxz
and
enter
rclb
inc
mov
enter
cmp
jecxz
mov
imul
dec
ljmp
fs
dec
pop
and
sbb
pop
imul
xor
ret
dec
sbb
bound
push
dec
test
lods
pop
std
imul
push
lahf
push
jecxz
xchg
movsb
out
fadds
sahf
mov
fwait
sub
xchg
fsubrp
ljmp
pusha
or
jo
push
fcmovnu
push
xchg
push
ret
out
lahf
inc
fistps
mov
sbb
push
mov
ret
mov
movsl
test
and
sbb
xor
cs
mov
adc
push
popa
sub
out
dec
push
ds
lock
add
mov
rorb
mov
mov
stc
jno
out
pop
insb
adc
sub
movsb
fs
cmp
jge
pop
test
bound
cmpsl
jae
dec
pop
jb
loop
dec
loopw
pop
inc
fucomip
clc
cmpsl
outsb
mov
pop
repz
sbb
jle
je
call
cld
out
jl
fwait
push
jge
ds
sbb
cmp
enter
adc
je
leave
fwait
and
loop
mov
push
lods
mov
enter
add
dec
or
pop
jmp
adc
inc
cmp
in
js
jp
sti
sub
jo
addr16
push
pop
push
jae
push
adc
or
sub
fildl
loopne
movsl
push
cmp
jae
xchg
stos
xchg
decb
mov
rorb
add
jge
inc
call
loope
adc
fdivp
mov
rclb
cmpsb
out
popf
jne
jmp
and
rcll
jge
addl
push
daa
jae
lret
add
arpl
cld
arpl
outsb
loopne
cld
jg
mov
mov
loop
psllq
hlt
sbb
fdivrl
push
sbb
loopne
dec
les
jg
mov
pop
inc
repz
xchg
jbe
pop
out
lods
push
lret
cld
fisubs
xchg
mov
mov
insb
es
xchg
in
jmp
hlt
jnp
aad
inc
jno
xchg
sbb
mov
sub
add
dec
scas
push
test
pushl
mov
inc
push
nop
push
out
mov
sub
shll
jmp
mov
xchg
mov
jae
xchg
imul
mov
cmpl
cmp
push
xor
push
or
stc
mov
fildl
add
xchg
sbb
pop
dec
popa
pop
cmp
jge
rcll
mov
div
in
xchg
sbb
or
das
push
or
xchg
mov
cmpsl
rorl
jmp
inc
lock
sub
mov
push
mov
pushf
sub
test
adc
lock
cmp
mov
out
mov
imul
mov
pushf
cmp
push
or
pop
popa
mov
outsb
xchg
and
sub
int
js
cmpsb
je
xlat
loop
inc
pushf
jns
sub
xchg
inc
int
in
imul
pushf
xchg
push
test
scas
shr
repnz
testl
dec
or
sbb
pop
xchg
cmp
gs
jmp
aas
iret
es
lods
mov
ds
and
mov
lods
push
rcrb
enter
mov
mov
and
mov
push
enter
insb
mov
cmp
pop
roll
call
movsl
lahf
scas
and
lret
lret
or
xlat
lods
xor
sub
in
push
test
into
mov
sub
add
and
addb
xchg
adc
xor
jno
clc
mov
mov
pop
push
mov
sbb
repnz
sbb
add
jnp
pop
cwtl
je
dec
mov
mov
lods
mov
mov
sub
push
test
test
int3
popf
loop
lods
push
test
loopne
leave
jns
int3
pop
jns
add
cmc
call
pop
fistps
lahf
xor
pop
ds
ljmp
cli
xchg
and
test
inc
push
mov
test
andb
xlat
push
mov
pop
sub
jle
inc
movsb
jns
add
xor
pop
fs
lret
push
rorb
dec
push
movsl
push
jne
idiv
rorb
hlt
hlt
lcall
outsl
gs
push
frstor
jge
inc
push
pop
jl
mov
and
pop
inc
out
outsb
mov
or
or
movl
xchg
cwtl
in
daa
add
push
cld
sti
sbb
mov
dec
or
loopne
mov
push
or
mov
push
sub
mov
mov
stc
movsb
mov
mov
xchg
pop
xchg
inc
fwait
cld
rcl
or
jo
repz
sub
lcall
pusha
mov
xor
outsb
and
ret
insb
aad
stc
movsb
xor
mov
test
jmp
mov
adcb
or
lcall
lcall
shl
adc
pop
xor
movsb
xchg
cmp
push
loop
xor
pop
cmp
inc
mov
ret
out
mov
cmp
push
ret
fidivrs
push
mov
or
jg
loope
sbb
ret
mov
ja
repz
repz
rcr
stos
lcall
and
jno
push
test
mov
pop
push
or
push
push
xchg
fsubrl
cmp
jmp
stc
push
jo
sub
inc
std
andl
cmp
mov
pop
into
ret
push
sbb
pusha
sbb
cmp
ret
addl
test
je
adc
sti
xor
ret
mov
fsubl
xchg
shrb
adc
mov
and
dec
bound
mov
shll
enter
sub
mov
sbb
cmp
fcos
movsl
cli
mov
inc
inc
lds
push
cmp
and
xchg
and
sub
loop
dec
mov
test
shr
jmp
xchg
add
cltd
cld
add
mov
dec
xor
je
jo
cmp
cmp
in
dec
add
cli
adc
out
mov
cli
js
cmpsl
jae
insl
cmpb
lods
mov
incl
inc
iret
in
mov
in
int
fwait
test
mov
aam
add
sub
fiaddl
xchg
jno
jmp
and
insb
movsl
xor
loope
out
mov
int3
enter
cmpsb
xor
loop
push
test
mov
inc
push
out
sbb
ret
push
out
push
lds
jae
mov
inc
imul
orl
insl
int3
cwtl
push
xchg
movsl
jp
stc
daa
push
outsl
jo
ljmp
fsubrl
out
sub
push
cmp
imul
aaa
mov
test
jl
xorl
or
clc
adc
adc
mov
in
mov
std
cmp
les
aad
test
adc
mov
shr
mov
xlat
xchg
dec
inc
mov
addb
or
push
aad
xchg
lds
pop
pop
in
stos
cld
call
and
adc
xchg
sub
aad
mov
lea
add
movsb
outsb
xchg
mov
mov
push
or
loope
lahf
adc
test
clc
icebp
sub
xchg
or
scas
shl
das
in
popa
xlat
jmp
jno
or
pushf
pop
mov
and
cmp
test
test
push
addr16
fidivs
sbb
es
push
jae
push
lds
adc
ret
xor
xchg
fisttpll
outsl
or
jecxz
std
sub
cmp
into
mov
lret
add
int3
fidivrs
mov
stc
and
int
jnp
inc
push
leave
movsl
xor
cs
lock
imul
clc
mov
imulb
inc
pop
mov
cmp
cmp
pushf
jne
cli
inc
outsl
mov
push
mov
fldt
and
test
or
mov
aas
cmp
aas
repnz
sbb
ret
loop
mov
in
mov
pop
xchg
subb
hlt
sub
mov
cmp
sub
insb
xor
data16
mov
inc
std
mov
push
loop
mov
and
in
es
sub
out
pop
pop
les
dec
xor
cli
xchg
repz
test
cwtl
movsl
xor
imul
in
fcomi
fnsave
push
fcmovnbe
fisubrs
xchg
ss
loope
lods
test
call
lea
jno
js
mov
popf
add
jg
ror
cli
scas
dec
jl
xor
out
leave
mov
dec
adc
jb
sub
ret
push
push
popf
int3
cmp
xchg
pop
push
sti
jb
dec
call
cld
rolb
popa
shll
sbb
inc
mov
cmpsb
scas
sub
cmp
popa
add
jmp
mov
aad
gs
dec
xchg
in
shlb
repnz
out
mov
mov
mov
push
adcb
mov
sub
cmpsb
inc
push
lcall
arpl
pop
pop
les
cmp
pusha
cli
inc
rorl
mov
ret
dec
adc
out
sbb
push
sub
adc
jbe
fildl
jle
xor
or
mov
lods
adc
fbstp
lods
push
dec
mov
push
push
ret
mov
sbb
fwait
sbb
push
push
dec
xor
imul
test
jnp
sub
pushf
aas
sbb
shl
mov
adc
xchg
adc
jle
inc
ret
and
sbb
in
xchg
fcoml
in
jb
popa
in
pop
jbe
adc
jl
test
mov
xor
xorl
inc
xor
testb
mov
fcoml
xor
rolb
out
scas
mov
pop
lcall
pop
push
mov
jnp
sbb
jecxz
or
out
xchg
mov
in
adcb
in
mov
pop
pop
out
imul
inc
mov
sbb
xor
jnp
jl
sbb
call
subb
lock
mov
popf
dec
aam
test
or
or
mov
add
shll
pop
out
xor
push
inc
mov
clc
fs
std
sub
lock
xchg
out
push
fmull
adc
and
mov
xlat
or
xor
out
pushf
inc
lds
dec
aam
es
and
sbb
push
jae
lods
mov
mov
ds
imul
mov
rep
lret
inc
in
out
sahf
clc
mov
mov
push
dec
and
js
iret
pop
jb
or
push
test
sub
popa
jns
mov
scas
push
sbb
fldt
xor
testl
mov
fdivs
ds
shll
int
in
and
sub
mov
push
in
dec
adc
or
push
loop
fists
test
insl
ret
into
jbe
gs
out
add
leave
lcall
and
pusha
sub
push
sarb
hlt
sbb
sbb
xor
addl
popa
divl
inc
mov
fimuls
pop
xor
pop
sbb
add
out
loop
or
sub
int
test
mov
add
mov
lahf
inc
in
jmp
jne
hlt
cmpsl
adc
cwtl
and
jge
idiv
les
stc
scas
mov
add
xor
dec
xchg
xlat
popf
inc
sub
cmp
dec
mov
xchg
or
cmc
std
jb
cmc
lcall
or
arpl
pop
out
add
sub
jns
loop
dec
bound
sbbl
add
and
aam
sub
cmp
les
fnstsw
mov
outsl
mov
pushf
cmp
inc
pop
pop
xchg
lods
jo
je
add
jmp
sub
std
sub
insl
jg
cwtl
iret
mov
or
inc
lock
jle
xor
cmp
cmpsl
cli
shll
mov
or
sub
sub
push
mov
inc
xchg
sti
rclb
gs
imul
cmpsb
lods
pop
jbe
and
fcmovb
mov
in
lcall
xchg
and
cmc
call
cli
out
or
inc
in
subb
push
sub
lds
push
repz
xchg
clc
mov
divl
add
push
push
cmp
cmp
sbb
ret
add
pop
pusha
sub
pop
sbb
push
mov
jecxz
fcoml
clc
lds
icebp
jno
xor
jbe
mov
out
es
xchg
gs
movsl
push
adc
and
mov
ss
dec
pop
jecxz
testb
push
ds
scas
sub
enter
je
inc
mov
aaa
icebp
mov
das
mov
sbb
cmpsb
add
sbb
das
das
mov
cs
push
loop
shl
movsb
mov
mov
rcll
xchg
sub
lret
sbb
lds
mov
xor
jecxz
inc
pop
negb
pop
adc
into
es
dec
mov
dec
insl
mov
adc
and
inc
cli
push
movsl
inc
ficoml
push
jbe
mov
gs
mov
cmp
fimuls
loop
hlt
jbe
xor
flds
arpl
xchg
cmp
xchg
aas
add
popl
jne
push
mov
xchg
xor
xor
mov
sub
mov
fs
lret
mov
fnstenv
aaa
xor
mov
mov
xor
cltd
and
mov
xor
xor
enter
push
jb
stc
mov
test
cwtl
xchg
mov
xchg
cmovb
pusha
mov
sub
mov
inc
push
inc
mov
xorl
daa
and
mov
inc
cmp
ja
add
or
and
mov
mov
or
les
stc
pop
add
dec
stos
pop
cmpsb
in
push
sub
sbb
or
cmp
repz
scas
jo
dec
push
mov
pop
test
pop
pop
mov
cmp
dec
scas
adc
adc
and
subb
int3
jno
xor
ret
popf
xchg
cmpsl
adc
mov
xor
xchg
outsb
pop
daa
jae
pop
xchg
jmp
cld
daa
leave
lea
mov
sbb
hlt
dec
ja
fisubrs
mov
jmp
arpl
inc
jae
xchg
fsubrs
mov
sub
xor
pop
inc
mov
and
pushl
test
cmpsb
add
add
xchg
add
call
push
lock
xlat
mov
mov
pop
out
xor
lods
loopne
daa
mov
sti
gs
xchg
mov
pop
fists
aam
lea
mov
and
cmp
out
xchg
push
btc
test
push
mov
or
add
cli
mov
movsb
fmuls
push
cmpsb
pop
add
rcr
lods
not
lods
insl
stc
clc
daa
or
jg
scas
inc
test
jo
aaa
test
cli
aas
dec
push
or
rcrl
inc
jnp
and
ds
add
mov
jg
push
mov
insl
add
shlb
cmp
inc
sub
mov
mov
and
or
pop
jbe
sub
add
xchg
fisttpll
outsl
popa
dec
pop
mov
cltd
mov
aaa
scas
rep
loopne
and
dec
and
fstps
add
jge
jae
test
in
lods
adc
push
data16
popf
scas
xchg
add
and
xchg
repnz
movsb
clc
pop
sub
add
sub
jbe
xchg
mov
clc
pushf
add
movb
shrb
pop
and
movsb
leave
testl
or
pop
sbb
lcall
or
push
inc
mov
xchg
enter
mov
xchg
cmp
push
sbb
xor
pop
mov
cs
sub
fs
mov
jp
push
out
sub
mov
xchg
rcll
fistps
or
sub
sbb
icebp
jecxz
daa
cld
call
loop
shll
adc
xchg
sub
pop
je
bound
arpl
add
into
mov
sahf
movsl
mov
shll
repz
and
mov
mull
and
and
jl
int
je
out
cmp
cs
sub
stos
rclb
jno
test
je
dec
cmp
inc
fimull
out
and
mov
cmp
shrb
cmpsb
pop
push
daa
push
ret
sbb
movsl
dec
push
adc
pop
fisubrs
hlt
xor
push
lret
sub
mov
mov
outsl
ljmp
test
cmp
xchg
jnp
xor
push
mov
dec
sbb
or
cli
mov
in
lret
clc
jge
inc
cli
inc
mov
in
hlt
mov
je
xor
repnz
inc
push
sahf
or
in
adc
xor
outsb
cmp
or
subl
jg
mov
mov
add
jmp
lcall
push
pop
mov
xchg
testb
xlat
subl
mov
pop
nop
jb
dec
jns
in
cvtps2pi
push
data16
pop
mov
std
mov
in
push
jnp
jae
and
xorb
movsl
lods
insl
inc
addr16
test
cld
orb
add
iret
imul
inc
cmp
clc
cmp
enter
add
int3
repz
xchg
fstpt
jb
dec
mov
pop
xchg
sbb
xchg
push
ret
mov
push
mov
pop
test
sahf
ret
cmpsl
and
mov
adc
leave
sub
xorl
or
sahf
mov
lahf
mov
fists
imul
cmp
ficomps
add
decb
les
jb
cli
jge
sub
cli
mov
into
arpl
adcl
and
les
push
sub
leave
ret
jne
jmp
enter
pop
mov
xchg
push
push
xchg
inc
lcall
sub
pop
and
jg
rcl
mov
loope
push
lretw
lods
insb
mov
and
adc
dec
jo
ds
and
xor
inc
xchg
cmp
push
ret
xchg
jle
sbb
mull
stc
xor
add
or
std
adc
cmp
fs
or
xchg
pushf
or
insb
mov
adc
sbb
dec
popa
pop
and
xor
adc
mov
mov
rclb
out
inc
sti
mulb
mov
mov
sbb
add
dec
jb
jg
cltd
stos
imul
andb
jge
outsb
xor
es
and
adc
movsb
xchg
lea
cmp
xor
pushf
test
divl
repz
adc
jg
mov
and
into
movsl
mov
xchg
fwait
add
jb
loopne
and
or
pop
push
movsb
popa
std
adc
push
aad
mov
into
ljmp
mov
je
lds
jbe
mov
and
jge
adc
push
mov
pop
rcrl
into
mov
lret
imul
loope
xor
pop
lods
mov
aaa
cmp
xor
add
and
aaa
sbb
jge
mov
jbe
pop
testb
in
or
nopl
insb
mull
es
adc
adc
push
lods
push
sub
mov
mov
mov
scas
iret
hlt
int
pop
stos
and
sub
test
pop
adc
scas
inc
cmp
mov
clc
adc
ds
gs
and
and
add
cmp
sbb
pop
mov
stos
inc
mov
jl
mov
lcall
jge
stos
icebp
jp
push
jmp
push
sub
mov
andl
mov
dec
sbb
push
loope
incb
arpl
fsubl
shrb
leave
lods
loop
sbb
xor
and
out
daa
call
mov
icebp
addr16
fadd
lcall
dec
dec
push
push
aad
jo
lahf
xor
repnz
dec
sub
adc
pop
in
dec
mov
shrl
xlat
clc
mov
lods
push
push
inc
mov
xor
call
stc
xchg
adc
gs
mov
adc
rolb
sub
xchg
es
cmc
pop
or
sbbl
pop
push
in
cmp
adc
mov
loop
pushf
mov
movsl
lea
loope
lea
inc
mov
mov
push
lea
pusha
push
outsl
pop
jo
jge
jmp
jl
frstor
pop
jmp
push
xchg
push
mov
pop
sbb
mov
test
adc
sub
push
pop
xchg
lock
clc
in
mov
clc
call
jns
inc
xchg
fsubrs
push
lahf
push
scas
rep
inc
pushf
mov
jge
cli
jno
repz
mov
and
adc
inc
sub
aas
sbb
pop
test
jb
orb
dec
pop
fwait
mov
and
mov
loopne
lret
out
fwait
imul
pop
test
sub
pop
adc
add
enter
push
mov
nop
daa
inc
insl
stos
push
adc
repz
in
xchg
les
imul
shll
mov
add
ss
mov
fnsave
out
jmp
jb
mov
push
sub
mov
ja
or
scas
js
jge
jne
mov
popa
cld
and
cwtl
aad
pop
mov
std
js
pop
pop
int
and
repz
push
push
ds
jbe
jge
jno
iret
pop
mov
xchg
aas
mov
mov
and
pushf
shlb
inc
sahf
aad
jno
xorl
sahf
stos
hlt
dec
cmp
push
mov
rolb
pushf
arpl
sbb
or
push
imul
push
jecxz
daa
inc
jns
roll
xchg
sub
cmc
inc
imul
lea
shll
fists
test
xchg
adc
scas
jb
cmp
adc
sub
int3
fsubs
pusha
adc
push
mov
movsl
sub
in
mov
mov
movsb
je
mov
jg
mov
fwait
ret
jl
inc
in
push
jnp
aaa
testb
add
into
sti
imul
dec
ja
clc
jl
adc
lods
lret
stos
mov
inc
pop
les
mov
addl
xchg
repnz
hlt
push
pop
jecxz
inc
scas
adc
je
lds
arpl
pop
and
pop
lret
dec
fstpl
sti
xor
int
iret
jle
lea
mov
mov
leave
sub
push
inc
ret
inc
jmp
aam
push
push
cmpsb
or
int3
jo
or
xchg
push
int
notb
xor
push
ds
cltd
xor
sahf
cmp
xchg
ds
es
std
jg
mov
cmpsb
pusha
push
xchg
icebp
stos
shl
push
pop
loop
jb
sub
xor
ljmp
pop
mov
sub
mov
stos
les
arpl
xor
xor
xchg
es
pop
jecxz
or
shlb
xor
cld
dec
add
jbe
add
push
xchg
je
outsl
mov
sbb
jg
mov
add
cld
loop
or
add
aad
ss
mov
sub
mov
imul
dec
sbb
mov
insl
push
gs
mov
mov
es
jno
cmc
lret
clc
push
jne
cmp
or
add
out
jmp
mov
test
jno
pop
ret
addr16
cwtl
lcall
xlat
sbb
and
sub
fistl
push
inc
sarb
push
in
inc
mov
adc
sbb
mov
or
dec
xor
lcall
adc
jecxz
les
pop
mov
push
jo
jne
mov
adc
gs
daa
jne
je
loope
cmc
loop
outsb
jecxz
rcr
dec
cmp
add
xor
pushf
or
inc
xchg
xchg
sub
out
xor
int3
xchg
and
pop
mov
test
lcall
popf
jbe
push
cmp
inc
inc
lcall
ja
movsb
xor
push
pop
inc
mov
pushf
cwtl
sti
inc
xchg
in
out
imul
inc
pop
cmp
jge
lret
mov
xor
add
sbb
pop
mov
push
xchg
mov
lea
in
cltd
test
cmpl
sbb
mov
negb
jnp
add
mov
push
sub
sub
inc
cmp
adc
pop
mov
jnp
add
insl
fnsetpm(287
fs
mov
pushl
jno
inc
xchg
push
mov
mov
cmpsb
jae
pop
int3
insb
adc
mov
sbb
push
scas
lret
cmp
and
or
dec
outsl
shlb
push
or
clc
dec
out
jg
adc
push
jmp
adc
scas
stos
push
jno
sub
pushf
stc
ss
notb
mov
or
xchg
in
jbe
sub
cli
adc
add
lods
jnp
mov
cmpsl
ljmp
ljmp
movsl
lds
cmp
aam
mov
mov
pop
std
inc
xor
push
or
sub
dec
add
in
mov
adcl
movsb
and
aas
shlb
jge
cs
jno
pop
cli
sub
subl
ficoms
adc
mov
hlt
jno
loop
push
xor
fs
lahf
dec
pop
mov
jecxz
and
dec
pop
imul
enter
test
jmp
ret
sub
inc
ffreep
sti
loop
mov
cwtl
fiadds
mov
jb
pop
push
sbb
push
popf
jp
fcomps
mov
pop
sarl
xchg
rcll
sbb
pop
push
lods
push
xchg
js
xchg
push
push
push
rsm
jns
js
mov
loopne
outsb
mov
mov
xchg
test
ret
rolb
cmp
aas
sub
cs
adc
sub
nop
jno
into
or
aas
fwait
clc
shrb
jp
or
dec
xchg
pop
or
sbb
mov
adc
repnz
pop
xchg
out
test
push
xor
adc
push
rclb
pop
mov
insl
lahf
push
rcrb
lret
mov
mov
add
mov
sub
add
dec
aaa
and
cli
xchg
lahf
mov
aad
sbbb
or
js
stos
xchg
cmp
pop
push
xchg
rolb
lcall
xor
cmpsb
pop
and
jo
xchg
in
movq
fldcw
jae
mov
outsb
out
addb
sbb
int3
xchg
pop
clc
pushaw
insb
mov
adcl
add
cmpsb
push
int3
jnp
addr16
jle
scas
lods
scas
xlat
cmp
leave
mov
or
or
jmp
inc
xlat
mov
cwtl
movsb
jbe
jo
cmp
repnz
ss
nop
test
shlb
addr16
pop
popa
out
hlt
jle
mov
or
int3
dec
test
in
inc
dec
inc
jns
jp
adcb
and
cmpsl
ja
fadds
nop
jle
mov
xor
adc
aad
movsb
xor
sub
mov
loop
fmuls
icebp
or
mov
stc
sub
test
add
imul
out
mov
addr16
les
shl
push
rclb
sbbb
arpl
int3
cmp
cs
mov
mov
mov
pop
sahf
jnp
int3
notl
nop
iret
mov
mov
adc
call
push
popa
les
or
mov
mov
mov
xchg
inc
mov
inc
into
mov
aad
popa
xor
add
shrb
push
or
sti
subb
test
inc
in
xchg
pop
cld
andb
nop
pop
mov
sub
adc
cltd
xchg
dec
push
mov
pushf
jbe
or
cwtl
sti
lods
inc
add
or
jge
push
dec
sbb
je
test
pop
mov
sbb
mov
cld
mov
xchg
cmp
movsb
pop
cld
aaa
pmaxub
mov
pop
mov
xor
lds
xorb
and
adcl
lds
cli
push
cmp
lahf
test
mov
jg
in
int
mov
xor
inc
dec
jge
jecxz
and
and
dec
cmp
mov
push
loope
int
fistpl
xor
jl
mov
rcrb
adc
mov
fidivrs
xlat
mov
js
rorl
clc
xor
add
iret
cwtl
push
es
lods
or
jp
inc
push
pop
fidivl
push
pushw
lahf
cltd
push
dec
les
shlb
pop
dec
xor
ljmp
push
mov
mov
xchg
push
int3
xchg
out
dec
cmp
rep
push
lock
out
clc
icebp
bound
int
pop
popf
sbb
push
mov
mov
pop
cmp
call
ror
pop
jbe
xchg
call
sahf
push
pushf
mov
das
loopne
mov
negl
and
lcall
jns
cmc
lret
adc
xchg
pop
test
push
inc
mov
stos
cmpsb
adc
sub
mov
sbb
push
mov
lock
push
lcall
pop
push
jge
test
mov
leave
push
mov
loope
sbb
add
lods
mov
loope
pop
xor
cli
arpl
sahf
lods
fildl
sahf
and
xchg
xor
in
insb
enter
push
mov
sub
je
clc
clc
cld
xor
out
push
mov
mov
out
mull
add
stos
daa
ficompl
mov
in
out
cwtl
sub
nop
pop
sbb
push
mov
push
mov
push
fwait
jmp
je
mov
lea
xchg
lret
mov
cmp
jmp
push
dec
jge
xor
ss
jg
and
add
xchg
arpl
jb
incl
mov
aaa
xor
xchg
dec
loope
or
xchg
mov
dec
pushf
je
xchg
into
mov
das
out
lds
and
lds
mov
or
lods
xchg
sub
ret
sub
jmp
push
push
pop
add
pop
jnp
movsb
shrl
rep
sbb
mov
cmp
mov
stos
add
jg
das
and
mov
dec
or
sub
fsubrs
testb
ja
dec
and
jbe
add
lods
cmp
in
insl
iret
mov
mov
movsl
jne
pop
icebp
xor
in
xchg
aam
inc
push
test
xchg
sub
sbb
addr16
mov
fs
jno
push
lock
mov
aas
popf
adc
es
xlat
pusha
ret
clc
das
xor
das
iret
and
mov
mov
cmp
add
ficompl
add
xor
subl
loope
iret
inc
add
mov
mov
pop
cmpsl
fnstcw
sbb
insb
adc
xor
push
mov
push
dec
and
xchg
push
jg
dec
in
push
sub
sbb
fsincos
push
mov
jge
push
mov
inc
daa
and
int
hlt
xor
imull
cmp
lea
adc
aad
loope
xchg
js
mov
add
pop
cmpsb
xchg
add
ljmp
pushf
push
pop
rcrl
in
lret
sbb
clc
cmp
dec
aas
cs
insb
sbb
mov
clc
mov
outsb
jo
filds
or
pop
imul
xchg
pop
in
pop
push
arpl
add
xchg
adc
sub
xchg
icebp
and
inc
mov
mov
popa
jnp
and
add
ja
add
add
mov
pop
mov
dec
subb
push
mov
mul
mov
je
outsb
pop
mov
std
add
nop
jecxz
xor
aas
je
jle
out
mov
inc
loop
fisubs
daa
sbb
sub
jmp
jp
add
lret
adcl
int
imul
popf
sti
test
adc
cmp
xor
add
fwait
push
scas
shrb
insb
pop
sub
lods
jb
ljmp
add
pop
jae
notb
gs
mov
pop
les
lcall
push
clc
hlt
xchg
or
cmp
xorl
out
adc
out
inc
fwait
xlat
jns
xor
or
cmpl
inc
adc
in
into
adc
mov
lret
xor
cmc
push
and
insl
mov
ret
dec
xor
xchg
loop
xchg
inc
xchg
pop
in
mov
mov
mov
inc
xor
fidivs
xchg
lods
loop
pop
fs
pop
jg
push
mov
orb
shl
ds
xor
les
js
cmp
jns
and
pop
mov
cli
insb
arpl
mov
cmovl
add
loop
rclb
ret
jo
cmp
arpl
addr16
sub
sbbl
inc
cmp
add
add
pop
inc
inc
pop
lods
push
bound
xor
pop
pop
sub
stos
push
int3
mov
jmp
aas
data16
sarb
adc
std
pop
mov
pop
dec
push
inc
jnp
cltd
jp
inc
lret
adc
lock
lret
mov
aad
rorb
push
scas
inc
les
fucomip
dec
pop
inc
push
jecxz
mov
mov
mov
inc
cltd
mov
mov
loope
xor
fwait
test
loopne
clc
sbb
sbb
adc
add
leave
jge
lret
aaa
test
xor
decl
in
and
mov
lcall
push
scas
xchg
les
jg
sbb
pop
xchg
cmp
add
push
cmp
iret
mov
fcoml
icebp
mov
xor
adc
xor
fucomp
sub
or
std
and
or
lahf
pop
adc
les
xchg
inc
dec
mov
xor
sub
inc
add
mov
cmpsb
fldt
xchg
in
dec
cmc
jg
inc
or
lret
jns
das
sub
mov
adc
ds
sub
sti
xchg
mov
jne
dec
mov
ficoms
and
hlt
fdivl
rolb
sub
aas
cli
ss
jle
das
les
inc
leave
cmp
jecxz
mov
popa
xor
sahf
mov
xor
mov
imul
leave
mov
gs
xchg
pop
stos
inc
pop
gs
mov
inc
icebp
mov
aas
mov
adc
out
mov
mov
fnstenv
imul
adc
add
or
test
shl
lods
inc
clc
jecxz
push
lock
sbb
adc
popl
jns
sub
or
imul
xor
add
and
rorl
add
mov
adc
fisubrl
mov
push
dec
nop
ret
dec
scas
movsl
cmp
rorl
sbb
mov
add
jbe
pop
add
inc
fcoml
inc
sbb
gs
xchg
add
adc
lea
mov
sarb
out
pop
nop
shll
jl
enter
mov
cld
repz
mov
std
mov
adc
iret
lcall
shll
cmp
push
and
jb
cmc
or
push
push
fistps
scas
mov
cmp
cmp
jns
imul
gs
inc
stos
fldt
lret
inc
outsl
jb
cmp
in
cmpb
inc
pop
pop
fcomps
dec
cli
lods
mov
jle
cmc
push
aas
dec
fsubs
mov
lock
fimull
mov
lret
movsl
call
or
push
xor
lds
adc
sbb
cmpsb
adc
xor
subb
repz
fstpt
dec
inc
push
mov
pusha
lea
cmp
pop
or
mull
cmp
out
or
cwtl
fists
test
sbb
cmp
cmpsb
mov
out
pop
jnp
xchg
add
nop
sub
mov
sub
cmp
lea
mov
in
divb
scas
jg
popf
mov
sub
test
scas
stc
repz
bound
push
mov
jp
add
xor
test
rcrl
das
inc
pop
divl
cmpsb
pop
mov
sbb
jp
dec
icebp
ss
aad
jle
or
test
cmp
adc
jne
jns
adc
fdivl
es
in
ds
inc
pop
test
enter
lret
xor
les
nop
leave
push
jg
push
ret
xchg
or
xchg
jle
xlat
int
inc
out
mov
in
inc
or
mov
ds
jno
cmpsb
lahf
int3
sbb
and
fidivl
push
arpl
mov
in
out
lret
push
inc
xchg
xor
or
shrb
loope
bound
scas
out
pop
mov
es
test
sbb
int
mov
or
mov
fidivs
cmp
into
pop
pop
pop
mov
stos
mov
lea
inc
stos
stc
mov
enter
jmp
cwtl
fstpl
popf
test
push
cmp
mov
inc
das
decl
mov
ficoms
sub
cmp
ret
in
pushf
adc
imul
pushf
addl
enter
sbb
push
int
and
cmp
xchg
pop
icebp
ljmp
icebp
sub
xchg
and
dec
jnp
into
in
mov
ljmp
lea
adcb
lcall
mov
inc
sahf
clc
movsl
testb
or
arpl
jno
stos
cmp
mov
ljmp
pop
or
out
in
push
mov
stos
arpl
stc
cmp
push
sbbb
sbb
dec
xchg
pop
roll
push
mov
cmp
mov
pop
adc
sbb
test
or
or
push
sbb
lcall
dec
mov
pop
stc
dec
add
setbe
aad
rorb
xor
ret
pop
sbb
add
jae
or
xchg
mov
aas
gs
mov
cmp
cld
imul
add
add
xchg
fldcw
add
mov
lcall
mov
inc
xchg
xorb
mov
sub
iret
inc
jge
es
mov
dec
inc
ss
push
xchg
insb
push
sahf
scas
cmp
xchg
aad
push
or
arpl
jmp
xor
xorl
sub
shll
pop
adc
es
xor
movsl
dec
repz
imul
sbb
fucomip
xchg
call
rolb
mov
insb
sti
mov
fsub
scas
mov
negb
aaa
enter
sahf
in
ljmp
xchg
in
aad
mov
xor
ja
push
arpl
and
xchg
shlb
cmp
fistl
int
lods
out
fbld
lcall
xor
vpxor
fiaddl
push
int3
or
and
dec
cmp
outsl
imul
jbe
mov
push
add
addr16
xor
loopne
xor
dec
inc
mov
cltd
jae
out
jno
adc
shl
orl
xor
imul
lods
sbb
dec
ror
and
sbb
ss
daa
icebp
mov
daa
subb
xchg
imul
jl
xor
cltd
add
add
xchg
mov
jbe
push
and
xchg
rolb
push
lret
pop
mov
call
call
and
sub
inc
pop
insb
lds
stos
fidivs
or
jae
inc
shll
clc
je
fdivr
xor
mov
mov
jge
and
xchg
jns
xchg
ret
stos
ss
fstpt
es
pop
in
xchg
adc
cs
cmp
mov
cmp
fwait
cld
sub
xchg
stc
and
adc
cmp
xchg
enter
movsl
data16
js
cli
das
add
popa
mov
or
out
and
or
inc
or
out
fs
outsb
inc
mov
test
and
mov
stos
add
mov
mov
push
shr
mov
dec
ficoml
cmc
mov
jge
dec
pop
les
das
add
xchg
or
cmp
mov
call
sbb
out
and
iret
sub
adc
in
enter
jno
push
add
push
dec
ljmp
mov
dec
fs
push
mov
sbb
jo
cli
call
mov
push
and
mov
roll
push
adcl
outsb
mov
mov
imul
sub
add
mov
xchg
push
lods
rclb
aad
push
mov
test
add
rcr
push
in
push
inc
out
dec
jmp
pop
push
in
nop
dec
int3
or
sub
push
push
xchg
andl
mov
xor
clc
sbb
sub
xchg
mov
imul
out
in
daa
lret
sbb
shll
cli
out
pop
adc
aam
push
jmp
or
fimull
and
push
mov
daa
test
sub
mov
rorl
mov
push
cld
sahf
out
call
cmp
outsl
stos
mov
xchg
dec
add
xchg
popa
outsl
mov
mov
fidivl
bound
push
sahf
leave
lods
xchg
out
shrl
jmp
in
jae
cmp
shrb
into
arpl
test
fidivl
sbb
jb
cwtl
mov
gs
or
push
loop
aam
insb
xor
dec
inc
push
pop
sbb
mov
cmp
out
adc
and
mov
cmp
adc
adc
into
gs
loop
in
adc
jbe
sub
nop
xor
out
mov
repnz
and
in
cmp
lds
imul
push
xchg
ret
sti
push
add
popf
mulb
mov
push
jg
fs
and
subl
ss
imul
xor
in
test
fwait
xor
sbb
mov
sub
sbb
add
popa
into
sub
ljmp
adc
mov
stos
mov
cmp
in
add
push
jbe
dec
sbb
call
adcl
sub
ret
xor
sub
cmp
leave
shll
dec
arpl
imul
leave
sub
pusha
pop
nop
dec
inc
push
stos
stc
jo
adc
xor
mov
pop
xchg
cmp
out
sub
repnz
fcmovb
test
sbb
or
and
jl
cmp
push
addl
lahf
sti
mov
cmp
popa
hlt
movsb
js
xlat
call
popa
rolb
in
testb
arpl
lds
or
mov
pop
jnp
sbb
movsb
cwtl
fmull
popf
and
shr
sub
clc
xchg
stos
cmc
mov
iret
mov
scas
lahf
testb
push
or
inc
inc
add
mov
jo
je
addl
pop
dec
loope
fidivrl
hlt
jg
adc
adc
shll
and
aam
sbb
pop
push
ret
ret
sbb
or
dec
xor
jge
mov
mov
out
xchg
sub
cmp
sub
xchg
lea
push
cli
pusha
pop
add
inc
cmpsb
movsl
in
cwtl
pop
cld
shl
outsl
xchg
jg
test
loop
jae
add
sti
js
flds
jp
mov
enter
adc
out
inc
push
or
cmpl
cmp
das
sub
add
adc
fstps
call
test
pop
xchg
xchg
in
and
pop
gs
mov
mov
mov
aam
xchg
js
inc
divb
mov
lds
test
loope
push
repnz
mov
adc
popa
incb
sub
sub
in
mov
enter
repz
repnz
mov
adc
ljmp
pop
pusha
out
arpl
in
sbb
lds
xchg
fnstenv
test
inc
jnp
inc
xor
rolb
xchg
jne
jbe
shl
sbb
dec
mov
sub
mov
mov
xor
mov
in
inc
xor
icebp
or
lds
int3
jnp
add
shlb
push
inc
int
push
pusha
pop
cmc
push
pop
xchg
pop
sub
fdivrp
mov
mov
movsb
and
jae
mov
pusha
dec
sub
inc
pusha
mov
mov
jns
repnz
jecxz
jge
std
incb
cmp
xlat
in
xchg
test
jge
add
push
fiadds
add
or
push
sbb
jae
testb
dec
out
sub
mov
and
sub
mov
xor
stos
mov
mov
outsb
push
jge
xchg
scas
sub
frstor
imul
cmp
out
fdivrs
pop
xlat
inc
push
iret
mov
cs
sbb
aam
stos
mov
fs
mov
mov
leave
imul
imul
aaa
fdivs
sub
leave
mov
popa
push
roll
mov
popf
jg
stos
mov
shrl
xchg
or
add
inc
jl
das
ja
rcrb
cli
sbb
inc
mov
sub
xor
popf
out
sub
xchg
lret
cmpb
mov
push
leave
jl
adc
xacquire
fbld
cmc
add
mov
jmp
jae
loope
or
in
in
xchg
jl
mov
pushw
imull
fisubrs
sub
inc
adc
leave
imul
pop
mov
push
push
inc
aas
sub
hlt
shll
sbbl
mov
jae
adc
lahf
ss
mov
adc
iret
add
jbe
xor
mov
push
inc
je
std
or
mov
int
pop
or
push
hlt
jns
sbb
jl
dec
add
adc
sbb
int3
test
les
pop
leave
out
sub
push
or
movsl
popf
dec
xor
and
imul
add
or
xchg
push
stc
or
test
add
jecxz
jl
lea
rol
ffree
dec
sti
mov
or
clc
cmpsl
test
fcoml
dec
loopne
jns
mov
enter
mov
out
pop
dec
pop
loope
int
inc
call
je
adc
pop
lahf
jns
mov
mov
sti
imul
iret
in
jecxz
test
repnz
mov
push
sbb
loope
jb
cltd
and
add
aad
mov
xchg
cmpsl
fcomip
pusha
mov
mov
stos
cmp
or
enter
arpl
adc
or
fs
ds
ficoml
daa
gs
xor
adc
lods
das
mov
dec
shr
je
sahf
clc
or
inc
out
add
xchg
imull
stos
insl
addr16
cmpl
loop
in
push
repz
pop
cmpsb
push
pop
lret
sbb
icebp
inc
sbb
test
mov
push
icebp
out
and
pop
cmp
cmp
loop
data16
mov
mov
fs
clc
xor
xchg
int
sarl
cmp
inc
popf
cwtl
sbb
pop
mov
aaa
mov
dec
data16
nop
add
jne
xchg
inc
push
movsb
lea
ds
add
pop
or
in
mov
xor
fimull
out
lret
mov
jge
mov
iret
push
pusha
inc
cwtl
cmp
or
inc
xchg
adc
push
lea
mov
and
mov
adc
push
pop
and
ds
movb
mov
pushf
or
fwait
jge
stc
mov
cltd
jnp
incl
push
sbb
je
stos
mov
pop
jb
or
fsubl
inc
and
sub
mov
ret
ja
xchg
sahf
xor
dec
xchg
lahf
imul
add
enter
lcall
xchg
xor
stos
shrb
mov
xor
mov
lds
mov
sub
and
xchg
jge
loop
push
pusha
mov
cmpsb
popa
adc
add
xchg
cmp
sbb
flds
mov
imul
jmp
in
push
sub
xor
mov
pop
ret
xchg
xor
mov
gs
ljmp
dec
dec
outsb
fisubrl
and
dec
fcompl
dec
pop
out
cmpsl
cs
inc
mov
cmp
sbb
test
sarl
mov
mov
sbb
add
aaa
subl
inc
xor
lods
jbe
sub
ficomps
adc
divb
ss
pop
rclb
sbb
das
xor
sub
ja
dec
arpl
popa
inc
pop
into
sbb
rcll
inc
mov
enter
fldenv
push
or
loopne
mov
dec
sub
repz
push
sub
cmpl
icebp
adc
stos
sbb
pop
lret
lods
mov
inc
or
xlat
ds
xor
or
xlat
or
mov
xchg
jo
icebp
popa
mov
std
out
push
test
adc
dec
stos
dec
int3
scas
xchg
aam
pusha
mov
aad
lods
lods
inc
in
pop
scas
sub
hlt
xor
stos
cmp
lea
mov
loop
pop
xor
cmpsb
outsl
inc
popa
int3
in
push
dec
nop
pop
inc
sub
lret
aad
in
jmp
call
add
dec
adc
mov
sbb
mov
mov
cmpsb
ja
cmp
mov
leave
pop
and
xor
pop
pop
daa
inc
xchg
in
add
fwait
hlt
pop
inc
add
dec
mov
js
and
and
or
fmul
insl
jecxz
roll
cmc
jmp
sbb
movsl
fsubp
push
mov
dec
fldl
inc
insl
push
lcall
je
pop
push
pop
repnz
cmp
mov
cld
movsl
pop
jb
adc
sti
pop
sbb
mov
cmpsb
xchg
jo
mov
leavew
ret
mov
sbb
pop
pop
adc
pop
sbb
arpl
ret
and
dec
stos
and
dec
dec
les
sysexit
rcll
xor
loope
cmpsl
inc
mov
xor
imul
dec
xorl
adc
push
dec
out
mov
add
inc
xchg
filds
lahf
mov
xchg
xchg
sub
test
jb
add
pushf
es
pusha
push
mov
stc
ja
inc
int3
inc
iret
lret
nop
ret
icebp
loop
dec
insl
sbb
mov
ficomps
push
es
or
shll
jecxz
jno
test
scas
movsl
or
and
or
inc
jmp
push
fwait
mov
mov
pop
and
or
rcl
addb
insl
aam
or
lret
ds
pop
shl
popf
daa
sbb
ss
repz
dec
push
push
call
negl
xchg
jno
test
mov
les
movsl
cmc
jp
push
mov
xchg
pushf
fidivrs
adc
and
or
stos
adc
sub
call
add
shl
push
popa
aas
dec
dec
mov
cmpsl
mov
add
add
and
push
fwait
cmp
push
lcall
or
inc
std
and
roll
jmp
scas
lods
icebp
inc
lods
jl
pop
xchg
dec
js
clc
mov
int3
mull
lahf
pop
stc
les
dec
push
sub
ja
cli
hlt
arpl
and
pop
sbb
push
lock
xchg
jne
int
mov
idivl
inc
stos
lods
mov
fstpl
jne
adc
jne
cmova
sbb
test
negb
dec
push
fistps
iret
xchg
add
orl
push
fisubl
push
int3
mov
xchg
sub
inc
sbb
movsw
add
and
and
test
aas
and
pop
adc
inc
mov
xchg
pushf
push
ss
addr16
inc
gs
jecxz
insl
sti
fcoms
jbe
jecxz
dec
nop
imul
dec
adc
cld
pop
and
imul
sbbb
sbb
add
xor
and
xchg
xchg
and
call
testb
push
push
xlat
fnstenv
cmp
vmwrite
fisubs
mov
mov
xchg
inc
lcall
lock
cmp
mov
aad
ja
push
inc
dec
add
or
xchg
mov
mov
leave
jecxz,pt
clc
rorb
in
out
or
icebp
sbb
cltd
frstor
lock
adc
cmp
mov
mov
rclb
jo
push
nop
mov
add
adc
rolb
xchg
loop
scas
fsts
fxch
add
lret
sti
int3
inc
or
loope
divb
push
fs
int
rorb
fdivl
mov
aad
call
mov
cmpsb
xchg
les
xor
push
pop
cmpsb
xor
pop
cmc
test
dec
dec
push
fucomip
sti
push
push
cmp
dec
subps
mov
arpl
shll
nop
jl
sbb
out
mov
jae
or
jge
sbbl
xlat
ja
xlat
fdivr
in
adc
dec
outsb
pop
jmp
mov
rcrl
sub
rolb
xchg
fisubrl
add
lods
pop
scas
in
test
insb
in
adc
mov
in
insl
lret
cmp
adc
es
call
adc
xchg
pop
bound
xor
mov
mov
cld
or
jbe
xor
jnp
enter
push
shl
dec
jo
aas
stc
push
or
lods
std
dec
popf
lcall
jb
mov
insb
mov
push
pop
xchg
and
add
or
xchg
push
lret
dec
lods
xor
adc
fisubs
leave
scas
cmp
mov
push
rorb
das
or
sub
insb
mov
gs
or
sub
sbbl
das
je
push
rcrb
sahf
mov
mov
push
adc
cmpb
xchg
fidivrl
hlt
jnp
jmp
jbe
xor
xchg
mov
cmp
data16
clc
adc
pop
in
nop
es
cmp
sbb
aam
add
sub
adc
mov
ffree
mov
cmc
jge
mov
pop
pop
push
mov
add
push
lods
out
pop
push
xor
fldt
hlt
sbb
les
hlt
ds
fists
mov
push
mov
fst
repz
rcrb
stc
cmp
push
lods
jnp
enter
rclb
sahf
lods
int
dec
sti
pusha
dec
sub
xchg
jge
xor
in
out
pop
jne
mov
std
mov
ds
movsl
repnz
scas
adc
popa
adc
ret
add
mov
mov
fsubr
mov
lahf
mov
push
lahf
enter
in
mov
push
cmp
lret
repz
out
jnp
leave
ror
sbb
mov
lods
jnp
jnp
and
lods
sbb
fcmovnbe
fisttps
dec
and
push
xor
insb
and
data16
insl
xor
pop
ljmp
mulb
icebp
jp
cmpsl
je
push
std
mov
mov
push
cmp
insl
mov
daa
adc
push
scas
jo
xor
sbb
les
sub
cltd
sbbl
adc
addr16
sub
cs
stc
insb
stc
mov
add
push
push
lcall
sbb
les
or
add
pop
ja
xchg
loope
scas
mov
mov
jge
js
je
jmp
mov
shlb
jmp
or
pushf
xchg
scas
scas
and
or
mov
jl
iret
jmp
mov
repz
mov
in
jo
add
sub
in
in
push
add
mov
cwtl
xorb
mov
cmp
xchg
jl
mov
xor
add
call
repz
lret
in
les
outsl
push
cs
xchg
shll
movsb
cmpsb
mov
inc
cwtl
stc
sahf
jecxz
push
call
cmc
dec
insl
insl
pop
add
adc
mov
shrb
push
mov
xchg
insb
xchg
repz
push
or
push
pop
push
dec
xor
out
and
dec
dec
insl
or
dec
test
mov
mov
and
std
movsb
inc
lret
jbe
push
popa
hlt
jmp
loop
inc
les
cmc
sbb
adc
jmp
adcl
adc
inc
dec
fwait
out
sbb
dec
sub
sahf
jmp
sub
add
cmc
addr16
ja
shll
or
xor
mov
int
insl
push
push
loope
pop
mov
jne
mov
or
out
pop
js
mov
repnz
adc
mov
dec
cwtl
adc
fucom
repnz
adc
iret
mov
movsl
fadd
lods
mov
push
sbb
pushf
fbld
or
pop
cmc
ret
mov
pop
iret
push
inc
hlt
pavgb
js
xchg
jbe
mov
pop
lcall
fwait
mov
inc
shl
pop
push
loop
cmpsl
or
dec
push
das
dec
dec
and
out
xor
xchg
mov
sub
jmp
in
fdivrp
popf
dec
jg
insl
jp
dec
dec
out
jge
push
jno
cmp
fildl
sarb
pop
fstpl
xchg
nop
mov
into
popa
pusha
inc
stos
cltd
push
xor
inc
mov
pop
cmpsl
lret
sbb
fiadds
jbe
ret
sub
pusha
ljmp
insl
lahf
inc
pop
movsb
push
outsb
mov
and
xor
adc
call
add
dec
add
xchg
cmp
push
jbe
popa
mov
lea
inc
pop
pop
les
stos
xor
inc
test
sbb
pop
loop
cmpsl
test
mov
push
loopne
movsl
push
add
and
lock
stos
popa
jle
cltd
outsb
xlat
lods
jnp
sbb
ljmp
ret
push
and
lea
sarl
push
test
leave
jbe
out
dec
in
cmp
sub
and
sbb
sbb
push
ret
ja
jecxz
roll
cmp
inc
loop
aad
inc
inc
pop
jmp
into
xor
inc
jmp
jo
insl
jae
jo
cmp
push
imul
xor
es
xchg
jo
nop
adc
cs
test
cmp
cli
jmp
movl
cmc
pop
sub
mov
or
xor
pop
xchg
dec
pop
pop
xor
add
clc
pop
xchg
push
les
pop
repz
in
fnstsw
mov
sub
in
in
mov
pop
dec
fsubrl
decl
in
mov
arpl
xchg
in
in
mov
sbbl
ret
aam
aam
je
inc
xor
xchg
sahf
mov
and
cmpsb
fdivr
jo
les
icebp
pop
xchg
mov
out
dec
test
cmp
jmp
je
sbb
into
daa
and
jecxz
test
popa
jle
lcall
icebp
jnp
imul
jne
mov
in
mov
xchg
jne
rorb
jns
or
push
mov
and
push
mov
es
fimull
cmc
clc
dec
mov
ret
mov
outsl
pop
je
or
testb
push
mov
fistl
dec
insl
ret
arpl
arpl
inc
or
mov
inc
lock
add
mov
jecxz
outsl
cwtl
fildll
push
adc
negb
or
push
xchg
loopne
push
and
test
iret
sarl
xor
stos
cmpb
cmp
int
out
dec
sbbl
insb
push
jo
add
lds
loopne
adc
dec
xor
mov
xor
jmp
mov
addb
movsb
jp
loop
jae
jmp
and
pop
nop
mov
lock
push
test
pop
in
cmp
push
and
outsb
or
pop
fwait
lea
gs
out
mov
jbe
cmp
jge
cltd
add
aam
bnd
inc
scas
xlat
or
arpl
out
pushf
xchg
mov
pop
fidivl
and
aad
test
pusha
repnz
movsb
add
pop
jne
inc
movsb
sub
in
xchg
add
aaa
repz
dec
scas
test
jmp
cmp
leave
dec
xchg
scas
jle
sbb
insl
icebp
loopne
leave
or
push
cmc
xchg
out
pushf
fucomp
jb
cmp
aad
xchg
rcrb
ja
pop
xchg
int
mov
les
and
rcrb
in
addr16
rolb
xor
dec
push
jecxz
dec
add
adc
ret
push
push
repz
xchg
popf
xchg
dec
jo
push
and
push
repz
sub
inc
adc
bound
and
adc
sub
insb
push
dec
push
bound
imul
scas
sbbl
loopne
loop
xlat
dec
cld
lods
les
mov
mov
das
mov
and
in
fs
mov
loope
lock
sbbl
inc
test
pop
xchg
pop
inc
es
repnz
sub
or
inc
add
jmp
leave
pushf
in
mov
fs
adc
lods
pop
lret
sub
xchg
sti
or
mov
out
mov
adc
call
out
mov
mov
outsl
lods
or
mov
in
std
addr16
xchg
rcrb
jmp
cmp
sbb
add
add
mov
cmpsl
cld
inc
jbe
mov
bound
adc
enter
lahf
adc
inc
aam
mov
ss
xchg
sahf
int3
je
xchg
loope
imul
push
add
push
xor
out
pop
dec
jle
in
ret
pop
pop
and
xchg
and
xor
nop
cmpsb
jno
xchg
xchg
jbe
or
dec
push
sbb
xlat
push
fdivrs
add
outsb
aam
add
adc
mov
enter
mov
pusha
loopne
pshufw
movsl
cmp
les
loopne
iret
dec
inc
outsb
push
cld
sub
lret
dec
lret
adc
mov
mov
lds
std
cmpsl
mov
pop
aam
popf
add
jo
cmpsb
jb
ret
xlat
addr16
jae
adc
adc
mov
jmp
das
je
lds
mov
test
lods
subb
mov
das
mov
in
mov
sbb
pop
mov
inc
jl
jns
adc
in
pop
in
push
cmc
lret
sarl
add
js
jns
mov
adc
outsb
fsubs
fs
jb
sub
and
sub
sbb
fwait
sbb
out
aam
movsl
fisttpl
outsl
dec
test
jno
push
jge
jnp
mov
xor
mov
pop
mov
loopne
mov
cwtl
xorb
inc
bndstx
dec
sti
pusha
mov
dec
jp
adc
xor
fldcw
in
sti
shll
jae
stc
push
in
lcall
cmp
clc
xor
mov
stos
and
aad
adc
cmp
cmpsb
dec
loop
add
and
xchg
push
out
popl
data16
push
pop
sub
arpl
daa
aas
add
mov
scas
scas
dec
scas
push
pop
jno
cmp
pop
or
push
imul
mov
mov
dec
cmpsl
mov
rolb
cmp
out
in
and
shrl
ret
dec
adc
dec
outsb
add
xlat
jl
ja
shll
inc
cmpsl
out
adc
mov
decb
les
adc
push
xor
test
les
and
push
out
mov
arpl
xor
or
jmp
dec
nop
leave
pusha
pop
mov
ret
sub
xor
out
nop
sub
dec
dec
add
fnstsw
xchg
bnd
cmpsb
jl
arpl
stos
jg
movsb
sub
jmp
mov
lahf
push
sbb
repz
hlt
mov
push
cmp
mov
stos
ret
icebp
mov
lret
nop
les
jle
jb
fnsave
jle
repz
push
loopne
adc
dec
push
ja
orb
lods
out
sti
iret
mov
or
or
pusha
fidivs
push
sbb
cltd
and
push
lret
jnp
lahf
or
cmp
ljmp
add
ret
jns
mov
scas
les
js
ss
and
popw
xor
mov
test
add
popa
lcall
test
adc
add
sbb
addl
push
add
mov
fbld
rcrb
push
in
jp
and
cmp
add
outsl
lcall
jne
or
lods
nop
mov
scas
insl
imul
in
mov
xor
mov
cmovl
push
mov
push
pop
pop
shl
push
xor
movsl
repz
or
mov
pop
pop
add
fistl
sahf
ds
adc
jb
xchg
scas
cmp
out
fucomip
fisttps
push
cmc
push
mov
daa
mov
mov
add
int3
gs
pop
add
jmp
jnp
cwtl
pop
push
pop
xor
lea
mov
hlt
adc
out
push
xchg
jo
into
fldt
ja
cmp
sub
jmp
or
push
xor
inc
inc
adc
jno
pop
cmp
xchg
sbb
mov
mov
sub
in
roll
pop
jl
push
popf
mov
pop
les
aam
stos
sub
repz
or
sbb
push
or
daa
movsl
xchg
mov
lea
sub
arpl
xchg
jl
hlt
push
sbb
filds
pop
jno
mov
inc
aam
add
cmp
xchg
fidivrl
dec
repnz
mov
fnstenv
xchg
aas
sub
and
fimuls
into
rol
mov
lods
jl
sahf
push
adc
fidivs
adc
aad
roll
jbe
jae
jge
fwait
out
or
ss
vpand
test
fsub
add
out
mov
orb
cltd
inc
push
ficoml
jle
dec
sub
mov
or
ss
sbb
addr16
mov
lcall
out
xorb
popa
and
les
fwait
dec
add
jb
jle
jle
mov
dec
fdivrp
ds
dec
push
xchg
xor
add
cld
iret
xor
adc
leave
jae
out
rdpmc
mov
xor
cmp
cwtl
or
std
xlat
xor
jnp
add
xlat
and
out
push
xor
nop
jmp
outsl
cmpsb
inc
into
pushf
jbe
mov
pcmpgtd
mov
and
outsl
fs
clc
xchg
xchg
jo
add
movsl
cmpsl
inc
xchg
pop
push
inc
inc
in
test
fwait
jbe
out
orb
and
xor
loop
sbb
inc
cmpsb
mov
inc
andb
and
fcomp
pop
jge
lods
jg
ret
mov
cmpsb
lods
shlb
mov
dec
test
adc
mov
push
inc
lds
pop
sub
xor
or
dec
ret
sub
mov
jae
int
repnz
or
pop
pop
xor
cmpsb
clc
mov
xchg
stos
sahf
lock
daa
mov
xlat
xorb
stc
inc
mov
xchg
mov
or
push
lcall
cmpsb
xor
adc
mov
bound
inc
ljmp
shll
mov
jb
mov
sbb
pop
sbb
xchg
inc
in
dec
in
aas
jnp
dec
out
pop
pusha
loopne
out
pop
mov
sbbb
adc
mov
mov
js
test
fnsave
xchg
and
dec
insb
cmp
lods
ja
pop
das
xchg
lods
cmc
lret
adc
aaa
jne
xchg
inc
mov
lret
cmp
int
cmp
push
fisubrl
sarb
pop
adc
cld
mov
loop
jp
jno
shr
lods
xor
adc
icebp
sbb
into
jb
push
loopne
lret
mov
subl
mov
sbb
mov
mov
add
jle
lock
outsl
sub
dec
rorb
shll
adc
push
mov
mov
incl
xor
cmp
jle
add
lret
and
pop
popa
mov
cmp
pop
dec
test
lea
mov
push
test
mov
in
ret
inc
fwait
jp
jns
jge
pop
push
cmp
popa
mov
push
cmp
inc
sbb
loopne
sti
fs
inc
mov
lea
shlb
leave
push
inc
fdivrs
inc
pop
clc
pop
into
outsb
sahf
xchg
lods
cs
icebp
mov
sahf
push
cmc
ss
in
sub
xchg
push
daa
inc
or
pop
mov
xchg
mov
pop
jbe
xchg
idiv
imul
pop
jo
jge
into
repnz
addl
iret
lret
int
pop
andl
data16
popa
and
test
sbb
and
dec
xor
in
xchg
inc
pop
les
sti
mov
and
stos
pop
jge
arpl
ret
push
dec
and
jg,pn
rcr
mov
lods
or
xchg
int
ret
subl
jle
loop
testb
adc
or
test
loop
mov
jl
ror
adc
or
repz
mov
daa
and
sub
repz
jo
sub
mov
mov
cwtl
dec
icebp
movsb
jb
and
mov
lret
pop
adc
cltd
cli
pop
es
mov
or
jae
sub
je
mov
ljmp
pusha
into
das
lea
jle
lods
in
or
data16
xchg
ljmp
and
and
je
push
pop
jmp
jae
jmp
int3
pop
sub
imul
xchg
inc
jmp
cld
rcll
js
sub
rorb
sub
dec
mov
push
jge
mov
in
into
inc
xor
jbe
push
and
mov
movsl
bnd
jnp
repnz
mov
xchg
popf
or
loopne
inc
iret
dec
mov
add
push
rcrl
ja
sub
jl
mov
and
divl
jbe
fld
pop
lahf
orb
nop
ja
cmp
jbe
push
inc
mov
jae
and
pop
cmp
repz
popf
mov
xchg
sub
loope
push
shll
dec
sbb
fadds
sbb
mov
imul
pop
inc
sub
int3
and
insb
jbe
arpl
sbb
stc
sbb
or
mov
out
outsb
jno
ljmp
inc
jp
jno
xchg
xor
cmp
stos
in
adc
jb
inc
add
xchg
cmpsb
scas
and
arpl
sub
int
push
mov
inc
outsl
enter
les
xchg
sarb
dec
sahf
pusha
pop
xchg
in
into
adc
mov
int
mov
cwtl
xor
cli
jle
pop
addb
cwtl
mov
mov
out
popa
dec
mov
fmull
jmp
inc
mov
jmp
push
loopne
insl
or
adc
mov
sub
xor
mov
mov
es
repnz
cmp
cltd
mov
roll
ret
dec
cmc
inc
sub
loope
hlt
stos
ror
mov
cmp
iret
and
cld
and
daa
fildll
and
ret
jno
pop
sbb
cli
fdecstp
ljmp
lods
xor
imul
dec
push
test
dec
negb
mov
sub
jmp
gs
pop
stos
sbb
rol
dec
xchg
sub
inc
cmp
mov
xor
inc
xlat
loop
mov
inc
xorl
xchg
push
lds
fists
or
jge
aam
aas
out
fsubp
or
aaa
std
sbb
lahf
push
mov
repnz
lret
pop
repz
sbb
mov
out
inc
mov
test
cmp
sarb
aaa
jns
inc
adcl
mov
out
add
or
int
mov
pop
loop
pop
ret
ljmp
out
mov
sarl
iret
dec
in
cmp
insb
xor
push
mov
leave
pop
mov
int3
mov
inc
mov
cmp
mov
push
jecxz
lock
pop
dec
mov
decl
pop
shll
stc
pop
push
xlat
je
rorb
fs
outsl
lret
lods
and
dec
lds
shlb
cmp
jl
insb
add
xchg
out
mov
lea
rcl
mov
xor
push
lds
mov
mov
enter
mov
leave
stos
adc
adc
ret
jl
mov
clc
pop
adc
dec
sbb
mov
jo
jnp
add
lock
fcomi
inc
mov
mov
lds
pusha
jne
cmp
or
in
push
pusha
in
stos
sti
repnz
inc
fisttps
cwtl
shll
lcall
clc
sbb
test
test
and
cmc
int3
cld
mov
push
dec
xor
cld
cmp
jle
jo
in
dec
lods
push
dec
push
add
and
xchg
lea
pop
pop
lock
add
or
and
adc
jb
clc
fxch
sbb
xor
rcrb
fbstp
fs
sbb
mov
xor
sbb
dec
or
mov
aaa
ljmp
ret
jp
fbstp
les
jl
mov
movsb
daa
inc
jg
mov
xchg
ja
hlt
ja
into
jecxz
lds
pop
mov
clc
cmp
and
inc
push
jne
ss
nop
fdivs
in
jo
sti
mov
jmp
sbb
xchg
adc
pop
xchg
jns
jmp
cwtl
jge
in
scas
incl
fwait
inc
adc
repz
jle
loop
xchg
out
xor
xor
jb
popf
es
jo
arpl
cltd
mov
or
push
jp
dec
addps
sbb
pushf
dec
mov
stos
shlb
inc
mov
xchg
ffreep
pushf
xor
sahf
jmp
mov
stc
inc
push
inc
inc
in
sarl
mov
dec
xlat
mov
fs
cmp
lret
mov
hlt
xchg
cmc
lret
fs
pop
xor
int3
dec
call
dec
dec
mov
push
pushl
mov
icebp
mov
cmc
and
inc
cltd
pop
push
daa
outsb
data16
fdivrl
test
xchg
movsb
push
pop
cmpsb
ds
mov
in
jne
sub
mov
mov
aas
xchg
ficompl
dec
push
subb
jbe
sti
mov
rcll
mov
jno
add
nop
xchg
lods
aad
fs
dec
nop
pusha
mov
mov
push
movl
gs
je
jnp
dec
mov
pusha
and
aaa
inc
loope
add
enter
pop
xor
mov
mov
sbb
fdivp
out
mov
nop
into
add
and
jp
out
mov
out
test
clc
ljmp
fwait
out
stc
xor
into
adc
in
push
mov
mov
lods
outsb
xchg
mov
std
adc
enter
ret
mov
outsb
jl,pt
lret
adc
js
insb
insb
mov
pop
iret
jl
cmpsl
or
test
or
or
in
pushf
insb
jno
jmp
outsl
icebp
arpl
jg
je
sub
out
pop
psadbw
pop
xlat
std
push
dec
jg
subb
mov
push
stos
xchg
inc
sbb
imul
scas
or
adc
jge
jne
aam
js
inc
fld
mov
in
mov
out
arpl
inc
sub
pushf
jg
cmpb
mov
pop
mov
repz
movsl
sahf
jle
ja
es
mov
shll
mov
cmp
push
hlt
and
scas
int
jns
xchg
xchg
bound
mov
mov
push
mov
sub
xchg
fistpl
adc
add
fldenv
int3
cmp
pop
or
bound
bnd
cmp
sahf
mov
add
pop
outsl
pop
add
pushf
add
dec
adc
xchg
push
jb
and
out
iret
testb
insl
mov
or
or
dec
rcr
jns
add
adc
popa
nop
jno
ljmp
cltd
and
mov
packuswb
lock
sub
xor
loopne
shll
insl
mov
push
xor
and
xchg
daa
sti
xchg
add
iret
push
add
bound
add
cs
std
xor
into
pop
xchg
sti
in
and
cli
ret
test
in
imul
ja
fidivrs
mov
jbe
mov
roll
pop
into
push
adc
jp
xor
jge
jo,pt
mov
push
shll
test
aas
aam
push
ror
fistps
cmpsl
adc
stc
imul
push
cmp
jo
stc
mov
and
mov
addl
cmp
imul
cwtl
out
ljmp
arpl
repz
popa
add
jmp
push
call
orb
inc
xor
cwtl
fs
xchg
shl
cmc
mov
xchg
mov
sub
mov
sub
hlt
jbe
push
lret
and
xorb
push
lahf
bound
or
xor
pop
lds
inc
jae
add
jbe
aas
sbb
popa
dec
inc
mov
lods
repz
pop
dec
scas
fists
insl
test
shlb
fsubl
xchg
ljmp
cmp
cmp
xchg
mov
or
iret
push
push
push
push
in
mov
cmp
and
push
aam
jl
inc
fstl
lea
add
lock
inc
pop
xchg
mov
loop
pop
xlat
lds
loop
addr16
jne,pn
xchg
es
xchg
cwtl
insb
aas
je
sub
jno
jl
mov
xchg
pop
add
sbb
stos
cmp
lock
push
mov
mov
cs
mov
sbb
mov
mov
aam
sbb
inc
inc
xor
pusha
ficoml
add
or
fwait
mov
mov
fstp
outsb
sub
insl
push
repz
shl
jecxz
push
dec
mov
fcmovb
jo
jecxz
sub
rcrl
stos
arpl
lea
cli
inc
and
icebp
js
fnsave
imul
imul
inc
ds
push
popf
cmp
lods
jne
mulb
pop
add
sub
js
push
dec
cmp
ss
bound
ja
jb
orb
sub
mov
pusha
xlat
aas
dec
fcoms
in
roll
ret
mov
push
stos
adc
jmp
mov
inc
movsl
lods
cmp
mov
dec
fs
jb
lret
aas
das
fildll
adc
mov
test
and
sub
or
sbb
mov
cwtl
mov
push
daa
in
xchg
and
cmp
or
fidivrs
insb
inc
add
pop
roll
sub
adc
xor
mov
dec
pop
jp
bound
test
mov
dec
dec
push
fcompl
sahf
jp
jge
add
add
and
jecxz
ljmp
dec
sub
mov
adc
add
jecxz
cli
and
jae
push
addl
imul
enter
lcall
inc
or
adc
outsl
jae
mov
leave
ret
mov
pop
enter
int3
in
gs
sarb
add
lds
jno
test
inc
xchg
popf
shlb
ds
int
int
incb
test
lret
adc
andb
data16
pop
xchg
or
sbb
daa
faddp
adc
les
xchg
cmpl
mov
push
out
pop
jbe
outsl
arpl
or
stc
dec
mulb
std
into
orl
clc
aaa
sbb
mov
push
or
pop
dec
mov
mov
xchg
movsl
jno
xlat
push
les
inc
adc
mov
and
rclb
jmp
push
inc
cmpsb
frstor
bound
into
std
adc
stc
stos
mov
ljmp
aad
cld
ret
pop
je
inc
das
add
lods
mov
movsb
push
in
es
shrl
dec
mov
call
rorl
insb
jns
cmpsb
shl
pop
jge
sub
es
mov
cmp
fs
push
jle
mov
sarb
rcll
jp
adc
lret
inc
lret
enter
pop
iret
mov
pop
and
xchg
xor
int
mov
jge
mov
inc
sbb
sub
push
cmpsb
adc
xchg
fsubrp
daa
mov
jno
gs
push
pop
mov
clc
dec
ss
add
push
neg
sti
in
fbstp
push
jp
xchg
jb
popf
lcall
loopne
and
fcmove
pop
xor
pushf
jns
push
sti
jp
hlt
movsl
pop
lret
mov
mov
sbb
cmp
or
popa
into
adc
imul
dec
jno
or
push
mov
pop
mov
pop
cmpsl
mov
dec
psrad
insl
dec
jle
ds
xor
pop
lock
sbb
inc
xlat
in
idivb
dec
push
rcrb
cmpsl
imul
push
stos
xchg
dec
insb
mov
imul
pop
inc
pop
lods
add
pmovmskb
in
ljmp
push
jbe
mov
xor
sarb
xor
fsubs
pop
pop
sub
xchg
jge
and
enter
in
leave
aad
movsl
rcr
aam
scas
inc
filds
mov
mov
arpl
xor
lock
adc
dec
dec
and
mull
cmp
movsb
inc
mov
mov
pop
adcb
lret
push
mov
mov
ds
xorb
mov
sbb
je
xchg
sti
outsb
adc
or
aaa
sub
mov
shll
repnz
inc
aam
add
sahf
adc
scas
jae
fimuls
imull
xor
jno
jl
popa
mov
test
cli
fldenv
mov
clc
mov
loop
les
sahf
mov
aad
push
mov
mov
rclb
inc
pop
mov
adc
dec
imul
test
xchg
inc
inc
or
mov
out
adc
xchg
clc
in
stc
cld
xor
scas
and
add
jl
adc
stos
aad
subb
jle
out
cmp
sarb
sub
sbbl
mov
jecxz
xor
iret
xorl
dec
sbb
jns
xchg
sub
sub
outsl
ret
sbbl
hlt
and
repnz
or
xchg
jmp
aad
ret
insl
sub
cmc
push
xor
pop
mov
inc
pop
loopne
fiaddl
ss
mov
ss
jns
mov
ficomps
xchg
scas
repnz
dec
and
jl
hlt
movsl
lea
pop
lds
mov
in
mov
js
pop
je
ljmp
inc
xchg
and
push
xchg
in
hlt
adc
loopne
sbb
xor
lods
mov
dec
shll
loopne
sbbb
sahf
cltd
push
stos
shrl
pop
mov
mov
fldenv
mov
mov
push
jbe
and
mov
adc
sub
fdivrl
adc
lods
xorb
lcall
sbb
add
sbb
sub
xchg
sub
add
std
push
jmp
cmovb
mov
push
js
in
cmp
rcrl
inc
test
mov
inc
inc
lret
rclb
stc
arpl
lret
and
jb
cmp
jge
add
outsl
hlt
test
and
mov
xchg
js
or
shld
mov
inc
shll
repnz
lcall
xor
dec
mov
rol
jge
xchg
pop
cmp
ja
sti
xor
cmpsl
sti
dec
push
pop
mov
jmp
jno
inc
fcompl
mov
pop
xchg
fwait
jae
cli
and
aam
cmpsb
pushf
pop
sub
dec
loope
mov
je
adc
in
jae
in
push
stos
xor
jno
jp
inc
or
cs
or
mov
aam
or
mov
mov
sbb
fcmovb
loopne
xchg
test
out
fidivrl
mov
sbb
mov
dec
push
int
repnz
gs
sub
lea
cmp
std
shl
cmp
dec
lods
imul
cmp
and
lods
and
aam
loopne
xchg
mov
cmp
lahf
loop
mov
shrb
shr
mov
js
rcrb
mov
mov
mov
icebp
mov
out
stc
cltd
in
js
insl
push
into
ljmp
gs
sbb
add
mov
jo
push
mov
push
sbb
int3
std
popf
mov
imul
xor
je
adc
sub
ds
dec
fsubl
or
inc
xor
jnp
mov
sbb
cmpsb
mov
std
lock
addr16
cmpsl
pop
inc
ret
mov
push
xchg
jecxz
cli
insb
dec
mov
push
test
mov
xlat
or
add
jae
in
mov
mov
xchg
push
repz
cmp
add
cmp
das
movsl
dec
add
es
dec
repnz
push
and
sbb
hlt
les
fldcw
sub
stos
shl
lods
jae
arpl
or
jge
icebp
fsubr
cmp
push
xor
mov
dec
mov
push
cmp
clc
mov
dec
popf
push
das
repz
sub
push
mov
ss
loop
aad
sub
es
in
into
roll
mov
mov
fldcw
or
push
in
jno
inc
jns
fildl
outsl
fs
loopne
mov
sbb
dec
lahf
in
sbbl
mov
sub
in
orb
pop
call
jae
xor
cmc
xchg
mov
popf
arpl
mov
sub
nop
dec
movsb
fistps
sub
add
aad
cmp
ja
sub
fimuls
pop
xor
rcl
adc
insb
ss
mov
pop
jo
jae
movl
xchg
inc
mov
insb
push
dec
add
fsubrp
cmp
pop
mov
outsb
and
jno
and
imul
iret
mov
loope
push
pop
movsl
dec
push
jp
and
std
push
movsl
cmp
xor
lods
mov
pop
rorb
jns
inc
xor
xchg
nop
movsb
fwait
into
bound
pop
test
jne
lds
aaa
mov
push
mov
fisubrl
xor
loop
dec
and
push
xor
lcall
shr
or
inc
sub
lds
movsl
sub
cmp
xchg
stos
pop
mov
pop
push
mov
or
in
xchg
loop
sub
inc
adc
pusha
jae
je
adc
pop
testl
xlat
adc
or
xchg
imul
mov
sub
imul
pop
or
adc
sub
lods
mov
adc
icebp
and
mov
push
inc
vorps
mov
hlt
pop
pop
cs
dec
jb
fiaddl
mov
adc
cmp
test
xchg
and
jae
fiaddl
jp
lods
sahf
lcall
push
dec
xor
loope
in
cld
push
jo
negb
shll
aas
movups
or
inc
jg
pop
cmpb
sbb
push
mov
xor
cli
sbb
mov
rcr
movsl
std
pop
jb
add
imul
sub
repz
mov
cs
jno
decl
fistpll
lret
mov
xor
orb
push
popa
repnz
push
insb
mov
mov
mov
sbb
cmpb
lret
jae
push
push
mov
cmp
inc
xchg
and
and
dec
les
jmp
jns
mov
cltd
outsl
push
mov
jnp
jge
mov
aad
jns
cmp
dec
mov
sbb
mov
xchg
xchg
mov
mov
lock
and
ret
sbb
aaa
xor
pop
mov
into
sti
dec
insb
shr
cmp
sti
mov
aaa
test
bound
jle
and
icebp
cwtl
out
fbld
mov
call
std
dec
and
or
cs
orl
or
jnp
addr16
mov
cli
xor
cmp
enter
arpl
and
xor
cs
aam
push
mov
pop
cmp
fwait
in
sbb
aas
pop
xchg
push
xor
in
aaa
sub
jecxz
xchg
imul
jo
hlt
adc
mov
push
outsl
out
sarb
movsl
lds
fwait
scas
cmp
faddl
dec
cmpsb
xlat
mov
xchg
push
adc
add
pop
lcall
or
repnz
bnd
dec
push
add
sub
cmp
popa
insb
add
sbb
pop
out
icebp
ss
loopne
xchg
mov
mov
lods
stc
subl
subb
mov
pop
jns
push
fnstsw
cmp
out
addr16
pop
xlat
stos
std
xor
das
mov
mov
inc
enter
stos
cli
push
lahf
jns
inc
or
fdivrl
lock
in
cmpsb
pop
in
xchg
fsubrl
jne
ss
xchg
push
cmc
xor
fildl
pop
aam
mov
stos
pop
test
inc
and
or
mov
fmuls
sarl
pop
imul
cld
test
add
cwtl
xor
pop
pop
mov
sti
pop
lds
leave
or
add
cwtl
es
inc
cli
pop
test
shrb
cwtl
insl
sub
and
dec
pop
loopne
jl
mov
shll
dec
leave
xor
cs
mov
dec
xchg
mov
adc
add
mov
loop
cmpsl
pop
cltd
inc
mov
sti
or
add
js
les
inc
lret
mov
imul
rolb
enter
add
push
mov
mov
jae
fdivp
dec
push
loop
test
arpl
roll
push
out
sbb
lea
mov
pop
mov
test
push
scas
movsb
cmp
mov
cmpsb
push
mov
add
into
xchg
jne
aad
pop
hlt
ret
push
scas
icebp
es
cwtl
lea
in
jecxz
adc
push
push
out
mov
mov
xor
jg
push
std
inc
leave
mov
mov
jg
in
jae
mov
add
xchg
fidivrl
dec
cli
dec
sbb
mov
mov
and
push
addr16
pop
mov
call
dec
cwtl
movsb
popf
lcall
mov
xchg
arpl
inc
xchg
jns
cmp
xchg
jbe
enter
adc
in
jne
in
cmp
dec
pop
insl
in
addr16
lcall
frstor
scas
xor
xchg
das
sub
sbb
or
jnp
je
cli
lahf
and
addl
inc
and
dec
xor
jmp
cltd
loope
fsubrl
subl
shr
mov
das
xchg
push
adcb
stos
xchg
rol
xlat
pop
and
mov
xor
jae
movsb
pop
add
iret
daa
push
fiadds
jmp
xchg
dec
fiaddl
ja
jb
addl
inc
into
shlb
pop
inc
out
mov
int3
cld
loope
adc
add
cwtl
sbbl
test
testl
test
or
dec
lds
adc
cs
push
fsubs
cmpl
dec
cwtl
inc
pcmpeqw
and
mov
xchg
and
stc
add
cli
sbb
inc
pusha
mov
sbb
xchg
icebp
lret
hlt
pop
cld
fstl
jae
push
mov
popf
cmp
ret
int3
mov
out
push
sarl
and
lea
mov
or
fcmovne
sbb
jbe
mov
xor
jnp
push
jb
pop
fwait
jb
hlt
pushf
mov
stc
loopne
push
cmc
arpl
mov
aaa
imul
and
mov
gs
repz
pop
cwtl
pop
or
test
fnsave
and
jg
faddp
idivl
popf
dec
xor
push
pop
aam
mov
jecxz
sub
mov
cmpsl
in
loop
fsubs
test
sbb
inc
pop
and
rcrl
jge
xor
jnp
mov
fisttpll
in
negb
add
or
push
mov
fadds
cmp
aaa
and
dec
mov
call
add
add
or
sahf
dec
fiadds
adcl
or
in
push
idivb
xchg
rorb
sbb
lahf
out
bound
test
pop
add
subb
data16
insb
mov
insb
add
rclb
int
jbe
mov
aaa
add
outsl
bound
xchg
adc
pop
jge
negb
out
lds
js
arpl
cmpsl
sub
mov
mov
out
data16
loope,pn
mov
stc
je
push
mov
or
vshufps
or
lret
pop
or
imul
cmpsl
adc
scas
lcall
pop
jmp
outsb
push
inc
mov
mov
stos
xchg
pop
cmpsb
ds
call
pushf
xchg
mov
sarl
cmpb
push
adc
or
jns
push
xor
cltd
mov
ds
fsubs
add
push
and
pushf
aad
sbbb
cmp
inc
fnsave
stc
add
repnz
test
mov
mov
fildl
xor
outsl
lods
test
cmpsb
inc
or
sub
xchg
lahf
push
mov
aaa
jmp
mov
adc
leave
mov
mov
jp
insl
int3
push
cltd
outsb
jo
mov
hlt
jmp
jb
aam
push
lret
or
stos
jecxz
movsl
cli
add
or
inc
mov
mov
inc
push
dec
clc
mov
xchg
iret
outsb
cmp
jne
or
jne
nop
sbbl
dec
flds
pop
and
sub
aaa
xor
iret
or
inc
fnstcw
sub
push
insl
jg
xchg
or
std
lods
loopne
inc
mov
enter
inc
aaa
out
xor
sti
lcall
sbb
sub
pop
inc
sub
jge
push
mov
pop
add
fsubs
inc
push
or
dec
ss
sbb
lods
adc
cmpsl
mov
js
aaa
lock
iret
bound
pop
sbb
fisubrs
test
rorb
mov
fsubs
sbb
adcb
repz
outsb
shr
ret
fs
or
in
or
jg
idiv
daa
stos
jnp
xor
cmc
sub
lea
cltd
mov
ret
movb
inc
xchg
shlb
fwait
test
adc
adcl
mov
pop
jns
fisttpl
pusha
scas
in
rcr
and
jno
inc
xor
cmpsl
jp
add
nop
xchg
aas
mov
out
add
cli
cmp
adc
cmp
xor
pushf
xchg
pop
mov
dec
outsl
inc
lods
fld1
sub
push
outsl
mov
fimull
mov
pop
xorb
adc
daa
daa
xor
jle
sub
je
icebp
lods
fnstenv
out
movsl
shll
and
sub
lahf
pop
aad
or
and
es
and
jp
pop
xchg
push
fistpll
mov
adc
cmp
or
add
dec
xchg
and
mov
sub
rcl
imul
sahf
daa
outsb
cmp
aaa
loope
adc
into
or
push
push
test
loop
pop
je
mov
jp
cmc
mov
dec
leave
add
test
mov
test
fistps
pop
mov
mov
mov
aad
mov
rol
or
movsl
call
mov
loopne
rclb
pop
mov
dec
cmp
repnz
push
xor
xor
pusha
lcall
stos
ja
test
mov
jp
mov
push
dec
imul
lret
in
adc
cmovnp
pop
mov
lret
pop
push
or
bound
inc
mov
mov
pushf
push
or
std
sub
mov
inc
sbb
mov
sub
ja
subb
xchg
fdivs
stc
and
out
bound
adc
mov
gs
mov
cmp
jp
mov
gs
mov
pushf
les
add
jle
sub
inc
sbb
xlat
mov
nop
aad
mov
ret
jg
lret
ja
mov
sub
repz
cmp
leave
xor
fs
add
outsl
fstl
xor
clc
test
test
popw
pusha
mov
in
mov
sbb
psraw
jmp
hlt
xchg
stc
jl
sub
xorb
sbb
test
or
bound
cli
cmp
sbb
stos
jbe
add
push
mov
mov
add
mov
stos
fistps
repz
pop
xor
scas
ljmp
gs
and
enter
out
dec
iret
subl
pop
aaa
out
int
idivb
test
mov
and
or
xchg
jae
loope
lock
mov
fsubl
in
fcoml
loop
inc
or
cli
inc
stc
inc
push
mov
inc
aad
in
int3
xchg
nop
lcall
cmpsb
mov
pop
dec
nop
add
xchg
and
xchg
jbe
das
scas
loopne
ja
mov
outsb
loopne
out
ss
xor
ss
push
mov
mov
das
or
enter
fnsave
insb
cmp
loop
std
ret
fisubrs
jmp
shl
cltd
loope
pop
outsb
addl
inc
repnz
inc
pushf
mov
js
shlb
aaa
dec
add
inc
mov
cmp
fiadds
loop
addr16
je
mov
or
lret
rcpps
inc
cmp
jns
lret
pop
xchg
out
dec
aas
xor
xlat
out
xchg
mov
rolb
es
call
pop
xor
mov
test
dec
imul
imul
mov
xchg
inc
imul
cli
aam
popf
pop
andb
mov
add
hlt
addb
shlb
mov
mov
add
inc
mov
adc
mov
mov
mov
cmp
push
pop
or
xor
xlat
rcll
xchg
in
mov
sub
jo
or
xor
xchg
xor
push
jno
mov
jmp
mov
leave
and
fisubrl
pop
cltd
pop
xchg
sbb
hlt
xchg
mov
mov
lahf
cld
dec
fdivrp
fimull
cmp
outsb
jns
addr16
ljmp
neg
mov
shll
sbb
jo
mov
or
xor
mov
lret
test
inc
pop
ljmp
cmp
jne
mov
fiadds
ds
mov
daa
cmp
dec
add
in
int
and
and
dec
jae
outsb
addr16
mov
mov
xchg
ljmp
int3
fwait
xchg
ficoml
lods
cld
shll
xor
ret
mov
movl
insl
call
cmc
mov
subl
fcompl
lea
pop
mov
jbe
xchg
inc
push
lock
jg
mov
mov
add
gs
cli
xchg
jo
mov
popl
shlb
mov
inc
dec
cmp
fcoms
test
lods
addr16
mov
mov
lods
ret
sub
jno
in
jne
test
js
je
adc
jno
xor
lods
mov
pop
ja
sbb
out
sbb
mov
mov
xchg
cmpsb
in
cs
lret
adc
js
xchg
into
call
dec
inc
pop
aad
in
jns
rorl
addr16
mov
sub
jbe
sub
cmpsl
aas
cltd
ss
add
push
mov
sahf
fstps
outsl
xor
push
sti
xlat
mov
cmc
adc
mov
cs
mov
xchg
mov
adc
test
leave
fdivrl
or
pop
push
addb
or
cmp
clc
in
ja
sub
fstpl
sub
pop
dec
ficompl
lock
or
mov
mov
push
aam
mov
leave
adc
sarb
dec
pop
pop
dec
adc
cmp
clc
inc
jns
push
test
inc
int3
jno
in
out
into
xchg
shlb
lahf
xor
and
mov
test
jno
jno
data16
jg
aad
fstps
addr16
test
ret
cltd
pop
loopne
push
pop
mov
cmc
mov
xchg
jb
jne
test
testb
mov
jbe
repz
verw
push
mov
mov
inc
test
xchg
fsubp
cmp
and
aam
mov
sbb
mov
pop
and
dec
clc
lods
popf
mov
cmp
mov
dec
fwait
mov
ss
mov
test
fisubs
scas
xchg
icebp
jae
imul
cmc
push
or
pop
fldt
jmp
inc
xlat
push
movsb
and
cmc
push
push
inc
xchg
xor
iret
cmp
mov
popf
into
ret
lods
and
xor
divb
pop
dec
fldenv
ja
jbe
jbe
out
std
cmp
test
ds
mov
in
negl
xchg
shl
mov
test
sbb
xor
xor
aad
mov
pop
mov
xchg
mov
loopne
sub
ss
sbb
inc
jo
xchg
lea
imul
addl
addr16
dec
popa
mov
xor
mov
test
adc
pop
push
jle
es
xchg
inc
out
push
loopne
xchg
or
cli
cmp
push
sub
mov
repz
dec
fstps
add
or
mov
or
popa
hlt
mov
ss
jb
fbld
fcompl
iret
pop
lods
cs
gs
loope
les
mov
xchg
xchg
pop
mov
xchg
mov
mov
loope
mov
mov
mov
hlt
pop
inc
imul
mov
fisubrl
push
inc
dec
mov
jl
jmp
and
sub
lods
std
cli
ss
mov
sub
les
adc
cmp
popf
push
lds
or
lods
int
icebp
scas
inc
cli
jno
xchg
pop
test
test
dec
add
sbbb
jecxz
addl
shll
jmp
dec
xchg
adc
sub
pop
fnsave
cmp
mov
sarb
stos
mov
insl
jecxz
aas
add
sbb
pop
xchg
ja
mov
les
negl
mov
jmp
cmp
dec
je
mov
pushf
mov
mov
mov
fs
jb
mov
xor
pop
test
pop
mov
adc
cmc
sub
xor
cltd
xor
fmull
mov
xor
sbb
cmpsb
clc
test
leave
loopne
loopne
das
cmp
ret
lret
data16
lock
add
and
aad
xor
out
outsl
xchg
fsubrp
pop
or
lcall
jns
fdivr
sbb
ja
cmp
pushf
faddl
cmp
pop
add
das
repnz
repz
inc
mulb
rcll
mov
push
cli
shll
jno
insb
popf
mov
jb
jnp
mov
xchg
fmull
data16
imul
jecxz
jecxz
fcomps
cmc
xchg
add
xor
mov
dec
mov
sahf
xchg
test
loopne
jb
jge
outsl
das
cmc
pop
aad
sbb
bound
shlb
sbb
out
cmpb
cld
cli
mov
mov
jae
push
sub
push
mov
ret
jb
leave
enter
jmp
out
enter
pop
sbb
insb
das
addr16
addr16
xchg
and
lcall
outsl
pop
mov
je
jmp
pop
pop
test
jo
js
cmpsb
push
leave
pop
ret
mov
mov
cmp
int3
ret
roll
push
adc
pop
outsl
adc
fstpt
ret
mov
aad
push
mov
or
aam
push
jg
adc
mov
movsb
scas
loopne
adc
cmpsb
inc
mov
insb
lds
test
aas
daa
pop
push
dec
aam
xor
adcl
mov
cmp
mov
xchg
cs
imul
lahf
pop
xor
fisttps
xchg
loopne
ret
sub
inc
jecxz
jecxz
in
shll
arpl
addr16
mov
mov
sub
call
adc
and
int
sub
sub
dec
inc
cmpsl
xchg
dec
xorl
dec
je
xor
and
add
mov
outsl
add
jmp
xchg
test
inc
cmp
lcall
movsl
icebp
scas
push
jmp
dec
push
pop
imul
addr16
daa
icebp
mov
add
ret
pop
pushf
jbe
stc
lret
jne
push
cwtl
mov
xchg
push
ficoml
repz
out
das
and
mov
mov
push
dec
sbb
inc
test
fnsetpm(287
pop
hlt
mov
and
imul
or
rcll
sarl
xchg
jnp
mov
mov
fs
syscall
cld
add
lea
insl
lods
and
out
cmpsl
les
cmpl
xchg
mov
jae
xchg
adc
cmpsb
jbe
loope
mov
push
dec
jno
stos
shll
loop
fs
jns
adc
xor
leave
adc
sub
jmp
jp
push
mov
sbb
jnp
push
outsl
jecxz
cmp
pusha
jb
and
push
lods
test
xor
aad
out
bound
idivb
data16
mov
pop
stc
bndldx
xor
adc
ss
push
jno
shlb
fiadds
fbld
cmc
sar
imul
jmp
dec
cmp
adcb
aad
push
icebp
mov
in
in
mov
test
and
cli
cmc
fcompl
mov
mov
mov
lds
push
cltd
jno
mov
lods
cmpsb
push
movsl
jo,pn
adc
aaa
inc
fimuls
add
jo
movsb
cmp
out
add
out
sub
adc
arpl
and
and
or
mov
loop
std
iret
mov
pop
outsl
shlb
pop
xchg
sahf
push
xlat
fdivrl
aaa
aaa
dec
xor
shrb
shlb
es
push
cmp
add
inc
cwtl
bnd
cmpsb
popf
dec
pop
dec
lret
outsl
jmp
adc
outsb
gs
lcall
adc
jae
dec
int
add
test
sub
ja
mov
in
aas
jns
aaa
pop
pop
and
jnp
out
jbe
mov
fnstenv
gs
pop
int
psrlw
icebp
push
push
jmp
rol
or
xchg
nop
lahf
sbb
mov
shl
jle
mov
popf
std
dec
sub
lret
andl
or
sbb
and
lret
ss
iret
adc
sbb
roll
aaa
mov
inc
lods
pop
test
inc
fsubrs
add
imul
mov
mov
push
add
adc
mov
lock
inc
pop
jmp
clc
push
lcall
pushf
imul
sub
mov
or
push
es
ror
and
xchg
in
lea
xchg
xchg
dec
es
lds
ficoms
lret
sarb
fstpt
xchg
sbb
out
mov
cmp
cli
les
jns
das
syscall
xchg
jl
sub
es
or
lds
pop
popf
pop
xchg
out
pusha
mov
adc
sbb
push
js
nop
test
jmp
mov
in
sar
sar
lcall
hlt
sub
and
shll
es
push
pop
outsb
in
or
popf
movb
aam
inc
fs
xchg
rorl
lods
std
jns
jnp
ficompl
je
add
inc
loope
je
cwtl
in
pop
loop
js
stos
loop
jo
jg
mov
call
add
pop
jb
push
call
sbb
push
xor
call
test
cmp
jne
iret
test
jecxz
das
cmpsb
loop
stc
in
inc
lahf
xchg
ss
jecxz
push
fidivrs
xor
cld
xchg
out
xchg
fdivs
insb
mulb
lcall
outsb
std
cmp
mov
dec
lret
sub
ret
test
xor
out
dec
dec
lahf
dec
add
stos
jo
ficompl
adc
out
mov
sub
mov
jge
jo
xchg
fcmovb
mov
pop
stos
hlt
mov
xor
jo
adc
push
push
push
pop
adc
cli
mov
dec
jne
ds
outsb
adc
or
add
mov
pop
mov
xor
in
inc
fadds
scas
jo
jecxz
lret
sbbl
out
push
data16
dec
cmp
sbb
pop
jno
xchg
dec
fcom
lods
movsb
fidivl
repnz
iret
insb
adc
cwtl
es
cmp
dec
sub
mov
jp
ret
xchg
cmp
scas
out
call
mov
push
and
adc
iret
test
mov
sbb
movsb
fs
jb
into
xor
push
mov
in
push
inc
jb
jge
pop
dec
or
popa
push
mov
test
jb
push
jge
mov
or
stc
pop
cmp
andl
sbb
adcb
mov
lods
les
inc
iret
rcrb
rorl
mov
pop
cmp
scas
or
push
pop
xor
out
sub
fsubl
popa
cs
and
lret
out
add
in
dec
jmp
mov
cmp
jno
int3
mov
mov
js
mov
insb
cmp
pop
mov
and
adc
push
outsb
cmp
test
inc
sbbb
jecxz
sub
imul
mov
lahf
push
dec
mov
inc
sarl
dec
xchg
decb
or
xchg
sbb
xchg
int3
ret
or
push
push
sub
repnz
xor
sbb
cltd
aas
push
mov
mov
hlt
and
xor
mov
push
inc
cmp
lds
in
jg
enter
cli
cltd
call
je
or
add
push
test
mov
daa
cmpsl
push
cltd
adc
daa
adc
pop
in
xor
cmp
cmpsb
lea
fisubl
test
jae
loopne
push
add
scas
fisubs
jbe
pop
dec
gs
aaa
mov
xorb
cli
into
cli
pop
inc
cmp
jno
je
imul
pop
fcom
sarl
pop
xchg
pop
pop
ret
ds
inc
jae
shrb
push
pop
and
inc
or
xchg
xchg
call
shll
call
hlt
stos
cvtpi2ps
addr16
incl
ret
mov
xor
lret
decb
cmp
mov
xchg
cmp
cs
dec
mov
and
adc
pop
stos
repz
inc
jle
pop
popa
stos
ror
mov
out
pmovmskb
pop
mov
jae
cltd
inc
in
pop
adc
push
mov
mov
cwtl
or
adc
fwait
sbbl
mov
fimull
and
stos
and
mov
aad
pop
dec
fs
adc
sub
sbb
xchg
sbb
or
icebp
aam
mov
mov
cwtl
inc
lret
adc
sbb
subl
in
into
jmp
fisttps
adc
push
cmp
sbb
fsts
and
mov
xor
mov
gs
inc
jle
inc
push
cwtl
enter
cmp
lds
movsb
xor
lods
cmpl
ss
in
push
repz
fwait
jg
cmp
inc
xor
arpl
pop
mov
sbb
sbb
lret
mov
test
push
dec
shll
mov
or
cmp
test
shl
movl
or
cltd
bound
nop
lock
mov
jecxz
xor
ja
out
jne
push
movsl
sets
insb
mov
out
scas
push
xor
mov
push
inc
andl
sarb
jmp
mov
adc
in
mov
mov
outsb
add
pop
cmp
mov
repz
imul
sbb
iret
jp
ljmp
or
xor
popa
or
cmc
loopne
mov
out
adc
out
clc
imull
pop
ljmp
js
mov
fstpl
inc
sbb
sbb
in
test
fcoml
mov
cmpsl
ja
and
ds
pop
pop
enter
jns
mov
mov
and
or
pop
in
rol
jg
iret
popa
mov
xlat
das
gs
push
pop
in
mov
idivb
in
repnz
dec
cmp
repnz
test
jns
xchg
sar
aad
add
jmp
or
out
arpl
fisubrs
adc
xchg
sti
dec
adc
adc
jge
jb
cltd
aaa
sbbl
push
xor
fmuls
push
lods
ja
jbe
jle
jbe
adc
loop
jb
popl
popa
aaa
movsb
int3
cmc
push
jmp
sbb
cmc
dec
mov
jo
pop
pushl
adc
xchg
push
pop
fisubl
pushf
mov
xchg
and
or
out
inc
pop
shll
lahf
fdivrl
cmp
mov
shlb
cwtl
popf
stos
sub
xor
es
cmpsl
notb
int
rclb
lods
aad
sub
das
lahf
fistl
sbb
xchg
mov
cmp
cltd
mov
cmc
je
cmpsl
sbb
mov
add
loope,pn
add
adc
ss
testl
popf
inc
cmpl
inc
pop
fsubrl
stos
stc
cltd
and
in
mov
sbb
rorb
xchg
add
sbb
mov
inc
ss
cmp
adc
rcrl
lods
ficompl
adc
sbb
push
dec
fs
in
push
and
push
fsubrs
xchg
xor
cmp
or
and
ret
subb
jge
ja
mov
mov
xor
mov
push
dec
fdivp
push
sarb
cmp
jb
push
movsl
je
dec
in
rorb
cli
add
sti
jmp
sub
mov
add
aad
jb
in
add
iret
mov
mov
jae
fists
lret
mov
sbb
shll
stc
and
push
and
fnstenv
idivl
pop
mov
and
popa
mov
jge
cli
inc
and
std
sbb
cld
push
mov
addr16
pop
aaa
xchg
sub
mov
loop
sti
es
mov
pop
rcl
sti
outsb
jae
scas
adc
adc
xor
shlb
push
jecxz
sbb
out
ror
and
pop
lock
inc
fdivl
arpl
jmp
jno
push
sbb
aas
xor
inc
rcr
inc
popf
or
or
ret
pop
jno
mov
shrl
mov
out
mov
dec
xchg
add
sti
pop
call
mov
lea
cmpsb
xchg
je
mov
cs
sbb
mov
stos
cmc
sti
int3
lcall
inc
xorl
jae
xor
scas
xchg
xlat
mov
stos
fcoms
fcoml
cmc
iret
inc
out
xor
sbb
cld
push
push
mov
pop
repnz
dec
lret
jl
leave
sbb
adc
movsb
sbb
sarb
fs
repz
das
mov
and
enter
sti
adc
hlt
push
inc
dec
mov
repnz
ret
nop
out
pop
jno
out
out
mov
lods
fadd
push
std
popf
fstpl
outsb
or
mov
push
in
mov
faddl
fldl
or
cmpsl
ljmp
sub
xor
in
bound
imul
mov
xchg
call
bsr
int3
inc
in
popl
ja
pop
adc
lret
ret
or
mov
in
inc
into
mov
dec
mov
jg
insl
push
pop
mov
mov
mov
pop
lahf
rcrl
pop
popf
push
jge
adc
mov
pop
hlt
mov
adc
adc
mov
pop
popa
ja
mov
jb
aam
add
aad
dec
in
jmp
mov
dec
pop
adc
add
sub
inc
fs
jnp
insb
ret
lds
das
insl
mov
mov
xchg
sub
lods
and
mov
into
adc
push
inc
orb
nop
dec
pop
mov
lahf
stos
pop
in
loop
push
sub
sub
or
inc
addb
mov
mov
add
pop
outsl
test
in
mov
aas
cmp
sbb
mov
and
push
popa
sub
cli
xor
test
repz
imul
push
leave
xlat
pusha
jo
pop
sbb
mov
insl
in
xchg
and
mov
inc
int3
fdivrl
cwtl
add
lret
mov
adc
dec
and
lahf
inc
jne
or
dec
xchg
inc
sbb
pop
push
cld
and
xchg
lods
mov
lods
jo
clc
lret
imul
hlt
and
cmp
popf
test
inc
pop
idivb
or
loop
xchg
xchg
mov
add
pop
sub
in
pop
sarb
sub
fucomip
mov
mov
insb
mov
cltd
sbb
mov
outsl
outsl
push
shr
adc
dec
pusha
push
outsl
xchg
cmp
lea
xor
pop
je
sahf
sbb
sbb
mov
xor
and
pushf
xchg
cwtl
mov
mov
sarb
sub
push
call
ret
lods
scas
ret
jle
pop
pop
jae
xor
xor
pop
stos
movsl
cmp
call
movsl
pusha
imul
loop
cli
xor
cs
fs
test
push
mov
push
sub
xlat
add
mov
in
je
pop
push
stos
xlat
lret
push
push
sbb
mov
xchg
xchg
lret
dec
sbb
cwtl
pop
mov
push
mov
pop
adc
call
sbb
mov
out
adc
xor
outsb
xor
gs
loop
jp
mov
jns
mov
test
sub
cmp
in
add
fstpt
pop
xchg
mov
cmp
xchg
push
pusha
fs
or
push
dec
cs
movsl
cmp
adc
out
cld
push
sbb
xor
loope
xor
fcom
and
and
adc
std
push
sbb
movsl
jg
call
lret
push
lret
inc
cmc
jecxz
jne
add
mov
cmp
aad
add
fdivl
xchg
daa
xchg
sti
inc
fbld
repnz
shrl
jg
in
inc
fsts
xlat
xchg
xorl
mov
xchg
enter
add
cmpsb
stos
call
fs
jnp
xchg
lret
mov
xchg
test
into
jae
addb
sbb
push
sub
fwait
icebp
push
xchg
adc
xor
sbbl
mov
aaa
out
pop
mov
fsubrs
dec
inc
nop
sub
outsl
fdivl
outsl
jbe
jno
mov
icebp
add
shlb
mov
cwtl
xor
mov
push
xchg
inc
pop
sbb
in
movsl
adc
aam
loope
jmp
fidivrl
mov
dec
mov
jecxz
dec
or
psraw
push
das
fdiv
scas
dec
mov
adc
into
out
sub
ret
js
xlat
das
cmp
sub
insb
clc
jp
in
in
mov
cmp
enter
cmp
push
iret
aad
add
outsl
out
les
add
test
movsb
mov
fwait
shrb
lcall
pop
or
sub
pop
mov
rcll
sub
dec
shlb
je
cld
loope
xor
add
int3
mov
popf
lods
xor
jmp
mov
sub
subl
adc
dec
in
push
jb
sub
movsb
imul
cwtl
cmpsl
mov
leave
cmp
leave
xlat
loope
movsl
jns
sbbl
xchg
or
inc
popf
in
lret
mov
fs
movsb
js
xchg
xor
dec
das
ret
xlat
aam
lret
mov
xor
leave
jge
shll
sti
call
int3
cmpsl
sbb
mov
call
roll
sbb
push
popf
cmpb
mov
sahf
push
jb
les
loope
pop
sti
pop
add
insb
xchg
repnz
sahf
xchg
fidivrl
popf
orb
cmp
xlat
sbb
jl
jbe
es
movsb
pop
sbb
aaa
stc
aad
decb
lods
cmp
std
mov
cmp
dec
push
test
mov
add
aad
xor
fstps
jl
sahf
mov
popa
xchg
inc
dec
repnz
push
push
out
push
dec
rcrl
pusha
pop
cmp
jl
and
xchg
lret
in
ss
pushf
test
shll
cmp
icebp
cmc
inc
out
add
cmp
in
jle
mov
sahf
pop
popf
sbb
or
ljmp
sub
call
movsb
push
xchg
ds
mov
push
cmp
inc
mov
cmp
loope
xchg
fdivl
jbe
inc
pop
rclb
mov
adc
sbb
les
mov
and
add
adc
xchg
mov
mov
lods
rcll
pop
cmp
addr16
lret
add
cltd
imul
push
aam
mov
out
xchg
lret
jbe
xor
in
ljmp
popf
xlat
out
iret
daa
jle
lret
adc
xor
daa
shll
data16
hlt
ja
push
and
jl
hlt
push
adc
shlb
xor
enter
push
or
fistl
fldenv
sbb
cmp
fadd
jl
inc
insb
or
dec
inc
ljmp
inc
sarl
inc
push
add
nop
pop
or
pop
push
out
addr16
cli
and
mov
jns
cmpl
scas
jle
mov
xor
jo
test
fistps
cs
sub
in
outsb
add
add
jge
mov
enter
mov
jecxz
mov
dec
ror
std
loope
lcall
scas
ja
clc
sub
shll
int
icebp
add
and
rcl
into
pop
test
sub
mov
jg
xor
or
inc
mov
cmpsl
xlat
jbe
and
ljmp
dec
jae
test
mov
and
lcall
loopne
pop
sub
or
or
and
pop
and
dec
mov
testl
es
push
push
stc
stos
sbbl
sub
mov
mov
cmp
js
jo
sarl
ja
rcll
xchg
pop
add
outsl
incb
mov
aaa
sti
push
inc
mov
movsl
jmp
insl
ljmp
pushf
mov
and
xchg
pop
push
es
mov
mov
lea
lock
mov
gs
pop
inc
rorl
out
and
cmpsl
mov
bound
add
add
mov
mov
mov
mov
xchg
sbb
and
and
in
jnp
hlt
aaa
jne
or
xor
jno
call
dec
sub
leave
sbb
arpl
sbb
pop
or
jo
pop
outsl
scas
sahf
jbe
pop
jns
xchg
data16
push
adc
or
inc
mov
pop
inc
outsl
push
xchg
popf
mov
lea
fdivrl
outsl
jmp
add
and
pop
push
push
jl
shrb
inc
xchg
in
jns
es
fsubl
and
sbb
push
repz
test
imulb
loop
mov
cmpsb
mov
sbb
cli
xchg
xchg
mov
xchg
sahf
ret
add
lcall
cmp
loopne
and
stc
adc
mov
mov
stc
shll
scas
pop
mov
addr16
jo
adc
ficoms
mov
sub
imul
add
xchg
ljmp
cmp
or
dec
add
xchg
std
addr16
and
and
inc
int3
push
dec
or
in
aas
sahf
sahf
fs
movsb
dec
shrl
int
push
in
call
js
sar
es
or
xor
bound
lahf
jae
fmuls
and
pushf
or
sub
mov
xor
pop
xchg
repnz
mov
lods
test
inc
pop
xchg
xor
sub
dec
int3
int3
sbb
xchg
mov
adc
ja
jg
into
arpl
popf
imul
dec
fsub
mov
mov
push
sbbb
repnz
xchg
arpl
rorl
shr
mov
movl
ljmp
fistps
div
andl
ret
clc
mov
out
movsl
jp
lea
jno
or
mov
insb
loope
mov
pop
cwtl
xchg
fcompl
pop
jg
jmp
inc
mov
arpl
mov
adc
xchg
cld
jnp
pop
cmp
mov
mov
and
loopne
dec
adc
and
fs
shlb
filds
or
sar
jl
pop
ss
adc
js
loope
fs
xchg
iret
jge
jbe
sbbl
xchg
adc
shrb
fs
or
sarl
and
rorb
and
mov
adc
mov
mov
add
and
dec
pop
addr16
fisubrs
loope,pt
rolb
pop
adc
inc
sbb
jnp
adc
pop
xchg
sub
mov
xchg
lret
mov
pop
ret
jge
cs
sub
movsl
or
int
clc
stos
in
and
movsl
adc
xchg
fsubrl
fldcw
sbb
pop
dec
mov
sbb
stos
pop
orl
mov
in
sbb
and
sar
push
push
sbb
add
add
outsb
sub
mov
cmp
cltd
popa
fs
loop
xor
xchg
lods
sub
jbe
mov
adcb
test
mov
out
inc
pop
inc
lea
adc
xchg
idivl
jmp
sbb
push
inc
icebp
enter
xlat
mov
lock
xor
mov
mov
test
orb
rcrb
xchg
fdivr
sbb
fsub
cs
js
addr16
push
gs
mov
dec
jge
sbb
push
mov
xchg
push
jge
xor
movl
lea
mov
cmpsl
mov
xor
cmp
sub
pop
mov
ror
inc
ljmp
sbb
lods
lods
pop
scas
push
loope
cmp
inc
call
pop
mov
enter
loop
addb
fld
xchg
sub
push
cwtl
mov
cmp
cmc
call
les
pushf
arpl
ret
jne
enter
push
cwtl
mov
shlb
mov
cwtl
outsl
ret
inc
icebp
ljmp
sub
xor
jno
insb
aad
dec
cmp
lods
mov
out
jge
adc
push
lahf
inc
test
mov
mulb
imul
aam
push
in
pop
xchg
pop
mov
lahf
and
or
mov
subl
mov
ljmp
pop
inc
or
mov
mov
fcompp
push
dec
ss
push
jg
push
mov
inc
xorb
mov
sub
mov
mov
jae
mov
fisttpl
pop
and
js
loop
out
mov
sub
call
enter
pop
and
lods
sbb
aad
pushf
nop
les
xor
clc
adc
addr16
outsb
sub
lcall
or
xchg
xor
fistpll
sti
mov
and
push
or
sub
mov
movsb
or
xor
int
loop
js
or
out
lea
mov
or
ljmp
add
adc
test
sub
jne
call
or
cmpsl
jmp
es
sub
call
cmpsl
sub
fwait
orl
inc
mov
sbb
mov
sbb
inc
fwait
jnp
arpl
int3
or
jbe
pop
aaa
aad
loop
sbb
sti
stos
sbb
cltd
test
jl
leave
test
js
es
xchg
in
insl
jmp
addr16
xchg
enter
stos
loop
xchg
adc
dec
jbe
subb
mov
xchg
into
or
dec
cmpsb
iret
sbb
lock
nop
mov
orb
jne
sbb
or
sbb
pop
sbb
cmp
nop
outsb
das
sbb
sub
cs
fisubrs
sbbb
cmpsb
mov
xchg
dec
xchg
pop
push
cmp
out
loop
loop
popf
fwait
pop
pop
ss
shll
pop
and
pop
inc
mov
js
add
and
adc
loope
mov
fwait
sbb
inc
or
or
aas
mov
push
add
dec
lods
jl
out
jecxz
fimuls
lods
fimuls
pop
sub
into
out
jns
addb
xchg
mov
aam
jns
add
xor
mov
cwtl
pop
mov
mov
roll
jne
in
es
sbb
insb
jp
cmpsb
sbb
arpl
test
in
js
jecxz
in
cmp
dec
ss
xor
inc
fsts
xchg
daa
bound
insb
inc
les
shrl
fsubl
inc
inc
loop
add
les
cmpsb
jecxz
lock
scas
xor
insb
stos
test
and
mov
call
std
jo
addb
xor
lods
jmp
aaa
int3
dec
mov
inc
push
sub
mov
popa
push
in
imul
and
jle
fcoml
push
popf
cmp
mov
jo
mov
mov
pop
fs
sbb
and
pop
adc
xor
inc
sbb
shll
mov
xchg
stos
dec
or
and
les
xchg
xchg
pop
xchg
cmp
mul
and
imul
dec
inc
cmp
stc
xchg
push
es
inc
dec
pop
mov
sbb
dec
outsb
and
sbb
loop
mov
jae
jns
sub
loopne
shrb
add
ds
or
ror
push
arpl
mov
jns
add
jo
bswap
push
or
push
jo
in
mov
add
inc
imul
add
xor
pop
int3
jno,pn
adc
out
jae
cmpsb
jae
nop
mov
sbb
push
scas
xchg
addr16
dec
sub
and
adc
ret
adc
cmc
rcll
sbb
xchg
cmp
shll
and
mov
xor
aad
lret
cmp
movsb
sbb
inc
ds
and
je
rcl
pop
or
rcll
adc
jecxz
add
lcall
adc
and
movsb
add
dec
ds
test
add
xchg
and
pop
iret
inc
xor
imul
pop
xor
sbb
cmpsl
pop
out
cmp
stos
lahf
dec
dec
and
testb
decb
mov
or
arpl
or
shlb
lds
sbb
iret
push
cmp
jno
mov
jb
mov
sbb
mov
pop
dec
aaa
push
mov
pusha
ljmp
clc
dec
divps
aas
cmp
rolb
dec
fwait
aaa
inc
push
ljmp
fldenv
inc
pushf
push
xchg
ret
int3
jo
ds
pop
aas
xchg
cld
push
xchg
fsubl
fmull
cmp
sub
shll
jns
push
std
jo
sbb
mov
cmp
mov
adc
pop
add
cs
pop
mov
adc
imul
movnti
nop
in
cld
iret
pop
dec
mov
repz
fistpll
mov
mov
jnp
call
imul
daa
cwtl
dec
mov
jno
pop
ret
scas
and
xor
in
subb
addr16
fninit
cmpsl
mov
xchg
jno
mov
cmp
nop
in
ds
sub
jl
les
jne
push
push
test
pop
packuswb
jno
pop
push
shlb
pop
cmc
push
ss
out
loop
inc
ret
jmp
aaa
rol
pop
and
insl
or
xchg
xchg
out
xor
lahf
in
pusha
mov
jae
test
mov
push
mov
inc
add
pushl
inc
or
mov
mov
cmp
sbb
imul
subl
sub
jno
inc
xor
mov
cmp
movsb
sbb
mov
call
daa
and
roll
loop
mov
lea
lds
mov
data16
loop
push
lret
push
jne
sub
pop
pop
xor
mov
dec
add
sbb
xor
stos
sub
frstor
xor
xor
pop
out
sub
sahf
sbb
inc
or
add
iret
fcmovu
enter
test
and
mov
leave
mov
sub
out
cwtl
sub
into
dec
adc
or
and
cmc
shlb
adc
fiadds
push
push
fdiv
out
xor
xchg
adc
pop
rolb
sub
mov
xor
andl
popl
xor
push
insb
pusha
jne
in
ret
fistps
sub
cmp
aaa
cltd
mov
mov
adc
mov
stos
fnsave
fmul
data16
insb
imul
pop
je
js
jae
sahf
add
aam
addr16
and
dec
mov
rclb
cltd
or
push
enter
test
stos
push
jno
stos
dec
faddl
icebp
inc
mov
sti
cmpsb
pusha
sub
pop
subb
sbb
mov
and
jge
cmp
xchg
mov
stos
dec
ss
scas
div
fdivs
and
dec
stos
and
xor
pop
adc
xchg
movsl
add
pop
adc
enter
xor
or
cs
dec
mov
test
ss
add
and
mov
adc
popf
mov
mov
cmpsb
enter
testb
test
cltd
cmp
xchg
icebp
pop
push
push
lock
in
pop
and
jmp
pop
in
les
es
or
mov
mov
mov
add
mov
fnstenv
lret
dec
jae
adc
cmp
lea
mov
mov
call
pop
xchg
loope
add
and
push
arpl
inc
test
jbe
jg
stos
cmp
mov
lods
adc
jp
into
sub
ds
pop
pop
pop
push
xor
add
hlt
movsl
adc
cld
cmp
mov
sti
cmpxchg
mov
adc
inc
mov
xchg
popa
push
mov
cs
repnz
inc
cmp
push
cmp
mov
sbb
out
cwtl
fdivl
cmp
fisubs
in
mov
divl
icebp
inc
repz
jbe
sbb
jl
xchg
int3
aam
aas
std
jae
out
imull
movsl
dec
mov
pusha
fiaddl
xor
rep
in
mov
inc
mov
cmpsl
xchg
cwtl
daa
inc
int3
lods
push
lds
enter
dec
pushf
sub
cmpsb
div
dec
adc
lcall
jg
int
sub
ja
out
test
jmp
hlt
inc
xor
xor
sub
pop
push
addr16
inc
movb
sarl
cltd
push
jecxz
popf
mov
ljmp
stc
push
and
and
stos
push
inc
nop
add
xchg
jp
ljmp
repnz
mov
jo
in
xchg
fs
mov
and
icebp
popa
lea
dec
mov
mov
ret
and
cmpsl
inc
push
mov
lods
cmp
cmpsl
sbb
pop
daa
out
push
pushf
sub
aad
out
cmpb
xor
nop
in
pop
mov
mov
jmp
cmpsb
jg
aad
push
pusha
xor
push
add
dec
addr16
in
fstl
adc
jl
sbb
shll
mov
add
pusha
dec
jns
dec
xor
mov
shl
aas
lret
adc
out
and
movsb
outsl
cli
fs
jl,pt
out
sbb
aaa
sub
out
leave
cltd
jp
dec
dec
adc
and
insb
cmp
call
add
out
adc
xor
push
sbb
sub
mov
in
adc
or
ds
je,pn
stos
or
fs
push
and
punpckldq
loop
int
ljmp
int
lods
or
inc
dec
sbb
adcb
add
repnz
xchg
add
push
inc
pop
fwait
int3
pop
loope
insl
push
sub
xlat
or
adc
xchg
sarl
test
or
cli
ret
nop
pop
adc
mov
jg
cmp
lcall
pop
adc
js
enter
jle
ja
in
outsb
mov
mov
mov
cmp
push
pop
test
xchg
lds
nop
inc
jno
std
and
mov
mov
call
ficoml
xor
and
repz
andl
scas
push
lods
sbb
inc
imul
cltd
testl
cmc
les
mov
data16
mov
pop
icebp
and
mov
push
push
jmp
rclb
mov
mov
repz
fwait
push
ret
test
cli
jno
pop
xor
fmulp
test
shrb
mov
outsb
aam
sarl
lahf
xor
out
iret
mov
enter
cmc
fdiv
icebp
outsb
sub
daa
push
jnp
pop
dec
pop
out
mov
ret
insb
xor
adc
push
inc
dec
sbb
fisttpll
lea
popa
pop
mov
rorb
call
cmp
mov
adc
and
mov
sbb
xchg
push
in
enter
stc
in
xchg
popf
fldcw
push
aas
adc
mov
fldcw
add
adc
mov
xchg
roll
pop
cmc
xchg
test
add
xchg
pusha
in
int
pop
repnz
jbe
or
icebp
pushf
cmpsl
sbb
sub
into
and
xchg
xchg
mov
jg
push
mov
mov
jecxz
xchg
pop
mov
lds
ljmp
jmp
ljmp
into
xchg
in
lods
pop
and
push
inc
cmpsl
stos
xor
nop
push
aaa
fucomip
add
inc
jl
cmp
sbb
add
leave
sbb
cmpsb
clc
movsb
mov
mov
fwait
test
inc
adcl
xchg
mov
mov
and
sbbb
idivl
sub
adc
xchg
ljmp
mov
nop
lea
popa
mov
mov
pop
js
cwtl
and
out
push
fcom
in
cmp
pop
and
mov
mov
popa
fcmovnb
sub
aam
mulb
inc
fmuls
pop
adc
jle
sub
xchg
or
ljmp
inc
xor
fsubrl
sbbl
lret
and
aas
xor
int3
adc
pop
or
xlat
xchg
arpl
mov
xor
xchg
cmp
jp
cltd
sbb
sub
add
lods
mov
xchg
xchg
sbb
sbb
out
lret
loop
fmul
insl
addr16
ja
cmc
in
pop
jae
test
imul
pop
test
ds
cmp
cmp
push
jne
not
sbb
push
inc
xor
outsl
xchg
xchg
stos
fucomi
sub
orb
repnz
add
sahf
daa
loopne
adc
aam
xorl
enter
test
dec
ds
mov
sub
add
sbb
mov
int
dec
jle
and
cmp
int
ret
pop
xchg
and
out
cli
popf
and
push
in
jo
loope
add
lahf
sbb
and
popa
jge
mov
adc
add
push
mov
fidivrl
imulb
mov
js
mov
ljmp
ss
add
cmp
sbb
outsl
cmpsb
mov
xchg
lds
out
cli
fmul
movsl
data16
mov
aam
mov
clc
addr16
je
push
gs
imul
in
mov
icebp
mov
lahf
lcall
fisubs
xor
cmp
aam
mov
loop
xor
pusha
dec
ud1
mov
clts
int3
push
add
jne
paddd
cwtl
dec
push
or
push
repz
xor
outsl
push
inc
aaa
xor
insl
aas
cmp
mov
rcrb
loopne
add
les
es
andb
xor
repz
leave
inc
ret
inc
dec
dec
fwait
pop
leave
jge
pop
loopne
dec
or
pop
push
xorb
add
push
sarb
hlt
popa
mov
and
jb
xor
sbb
cmp
addr16
addr16
clc
pushf
rcr
jnp
push
cmove
lock
add
mov
ds
add
daa
rolb
sti
cltd
ret
cmpsb
mov
sbb
inc
sahf
add
popf
es
repnz
sub
mov
cmp
imulb
xorl
cmp
jo
jns
add
dec
cmpsl
push
push
sbb
fcmovbe
sub
xchg
cltd
inc
fmull
pop
stc
mov
shlb
jl
movb
xchg
mov
mov
mov
aad
into
inc
jae
jnp
in
movsl
sti
xor
sbb
xchg
cmp
lods
cmp
aad
jne
in
mov
daa
wrmsr
mov
pop
cwtl
cmpsb
cmp
xchg
jle
in
lret
je
xor
and
scas
push
movsb
jge
or
faddl
push
fistl
ja
cmp
data16
adc
or
shlb
jp
jle
ret
sub
adc
mov
test
and
mov
mov
je
sub
fwait
push
cmp
hlt
and
test
ret
scas
test
rcrb
adc
mov
mov
dec
addr16
test
scas
pop
sar
inc
mov
lea
cmp
xlat
sub
add
mov
push
enter
fwait
jnp
xlat
mov
xor
iret
add
mov
xor
push
mov
add
add
jecxz
rcrl
mov
sub
fsubl
pusha
test
push
mov
mov
and
ds
inc
sub
mov
leave
orb
inc
lcall
je
out
enter
hlt
int3
mov
inc
aam
loope
jecxz
or
or
xlat
dec
pcmpgtb
mov
mov
sbb
sub
cmp
push
jno
push
jecxz
pop
xorl
dec
sbb
into
ret
pop
and
shl
lret
es
into
cmp
push
enter
inc
and
std
sti
daa
cmp
pop
pop
and
push
jne
mov
in
out
sub
stc
dec
sbb
or
push
xor
pushf
in
cmc
pop
inc
and
or
fists
movsb
adc
sub
jnp
add
mov
xor
insb
int3
mov
insb
pop
out
test
jb
adc
mov
icebp
subl
or
adc
pop
xorl
fbstp
mov
fstpl
pop
mov
mov
mov
leave
inc
mov
pop
pop
ret
andb
pusha
pop
es
outsl
out
insl
inc
sarl
and
mov
int3
cmp
fisubrs
mov
shrl
mov
mov
xor
into
mov
push
outsb
xchg
and
stos
cmp
push
mov
jg
movsb
sti
fnstcw
mov
jge
andb
push
and
test
orb
cvtps2pd
shlb
xor
jp
sbb
push
jo
test
dec
popa
and
and
aad
xor
stos
inc
dec
push
jnp
lret
imul
insl
inc
inc
dec
imul
cmpl
sarb
cmp
mov
je
mov
add
jae
je
push
cmp
pop
sbb
shlb
mov
out
mov
scas
pushf
pop
sbb
jecxz
pop
insb
xor
mov
int
testl
aas
jl
cltd
outsl
and
or
fmuls
mov
and
enter
push
push
repnz
cmpsl
xor
pop
cmp
jb
movsb
push
add
xchg
ret
add
dec
sahf
hlt
lret
mov
dec
cmpsl
cmc
cmp
divl
cmp
mov
dec
jo
adc
pop
push
cwtl
pop
push
test
int
push
inc
dec
xlat
pop
xor
mov
aad
hlt
out
adc
int
loop
sbb
aaa
or
cwtl
ds
rcl
sbb
popa
ljmp
in
imul
jmp
jbe
cpuid
not
mov
mov
lods
jno
xchg
outsb
dec
push
sbb
addr16
ljmp
xchg
outsb
sbb
gs
int3
ret
jo
dec
sbb
cltd
add
sbb
ss
imul
sub
lea
rcl
inc
lret
fwait
pop
insb
add
mov
or
addb
lcall
hlt
or
leave
jno
add
divb
add
inc
das
cltd
daa
push
nop
jmp
je
sbbb
inc
andl
lods
fcoms
add
push
or
push
and
push
sbb
mov
dec
add
mov
iret
pop
add
cmc
add
push
cmp
mov
setno
fistpll
pop
pusha
xor
push
or
sbb
test
and
rorb
push
out
adc
daa
mov
jae
gs
and
xor
loope
lea
shll
call
jg
arpl
outsb
fcompl
cmp
xor
pop
ljmp
lea
sti
imull
mov
cmp
push
adc
mov
mov
adcl
movsb
jb
mov
cmp
and
hlt
in
mov
jmp
addr16
je
add
clc
dec
es
out
lcall
cmpsb
mov
push
fldt
push
imul
cmp
add
push
pop
pushf
fistl
push
js
xorl
push
repnz
enter
pop
lea
outsl
out
jns
das
dec
das
shlb
loope
enter
das
adc
xlat
sub
ror
lret
fwait
push
mov
call
adc
mov
andl
loop
sbb
push
inc
push
add
imull
jl
mov
push
cld
cmp
cmp
xchg
sbb
ss
sbb
push
jb
mov
rcll
daa
xor
repnz
push
adc
lret
lods
pop
jbe
addr16
cltd
outsl
repnz
test
sti
mov
mov
mov
leave
mov
inc
decb
pop
xchg
inc
sub
mov
mov
sub
adc
cli
xor
int
pop
jo
jnp
sbb
lahf
jns
call
jns
les
stos
rol
dec
or
jo
adc
and
mov
sbb
mov
pop
cwtl
sbb
sub
lds
and
pop
mov
push
inc
fs
movsl
sub
mov
decl
push
stos
mov
pop
adc
aam
and
lods
repz
into
sbb
int
orl
mov
adc
dec
scas
out
fs
pusha
fucomp
inc
adc
xor
sbb
rol
jno
pop
jnp
sub
sahf
lret
xchg
repz
mov
ret
stos
xchg
iret
out
decb
divb
mov
in
fnstsw
pop
lds
rcl
push
cmp
shll
pop
push
xor
jmp
int3
pusha
out
std
jge
push
push
cmp
call
push
cmp
mov
enter
cmp
jnp
daa
pop
ds
mov
rorb
sbb
or
scas
or
mov
push
mov
cmpsl
xchg
xor
js
push
add
mov
jo
mov
cmp
inc
fs
rclb
add
pop
roll
loop
insb
fidivl
push
mov
mov
lock
sub
orl
dec
mov
imul
gs
xor
adc
push
xlat
cltd
fisttps
mov
mov
dec
pop
xor
cmp
aam
add
inc
lods
and
pop
or
sbb
sbb
ret
cmp
not
or
icebp
xor
out
dec
dec
sub
in
mov
test
stc
add
out
mov
ss
mov
mov
mov
repnz
push
dec
loope
jne
mov
xor
lret
out
mov
xchg
cmp
sbb
mov
lods
mov
cmp
js
imul
push
test
push
mov
orl
mov
imul
stc
add
xor
pop
push
mov
xlat
test
and
pop
mov
js
testl
pop
je
fimuls
jl
std
xchg
mov
sbb
inc
jne
xor
out
mov
cmpl
push
mov
data16
jnp
scas
scas
sbb
fisttpll
or
pop
aam
add
xchg
jecxz
mov
or
cmp
adc
push
push
cmp
data16
adc
cli
fsubrl
repnz
lret
add
sub
shl
mov
and
loope
jp
or
in
adc
mov
inc
jmp
add
cmp
fsubrl
aad
add
jne
jb
cs
sub
or
clc
xor
push
pusha
pop
pop
or
sbb
stc
pop
arpl
ljmp
pop
jnp
inc
cwtl
cwtl
rorb
lds
xor
movsl
fwait
sub
jne
adc
mov
sbb
or
sub
ljmp
adc
and
imul
xor
adc
pop
outsl
nop
out
stos
mov
xchg
popa
loop
xacquire
mov
cmpsb
vpcomub
pop
ds
pushf
mov
mov
xlat
nop
das
jmp
aam
bound
lock
push
push
jmp
fdivrs
daa
mov
test
lret
inc
cmp
adc
push
add
test
lcall
jmp
push
add
negb
mov
push
aas
cmp
rcll
dec
mov
rsqrtps
cmp
sbb
out
sti
jae
dec
andb
mov
xor
insb
or
xor
push
push
jle
or
jp
or
inc
push
lods
pop
popf
push
push
loope
aaa
adc
in
shrl
es
fstp
mov
jnp
ljmp
xchg
jp
xorl
insb
iret
push
xlat
out
jae
subb
mov
mov
jle
mov
test
out
or
sbb
out
and
xchg
sahf
add
por
pop
enter
jb
sub
insl
sbb
enter
daa
pop
js
jg
loope
dec
rcl
jmp
cmp
out
lea
push
stos
sbb
mov
jle
inc
std
lds
ss
and
test
jmp
jns
push
mov
mov
ret
fwait
cmp
sti
sbb
test
test
in
jp
cwtl
dec
sub
cmp
lcall
dec
inc
lcall
mov
inc
push
lcall
jmp
fucomip
daa
mov
ja
mov
sub
leave
xchg
sub
cmp
leave
sub
pop
cmpsb
sub
lods
mov
repz
mov
nop
loope
nop
dec
outsl
pop
inc
jo
add
fdivp
pop
inc
into
fcomp
rorl
sbb
add
add
push
dec
cld
adc
and
into
test
cmc
sub
sbb
pushf
rolb
pop
clc
outsb
cwtl
sbb
fisubrs
and
gs
push
pop
test
cld
es
shrb
out
push
adc
lcall
scas
pop
mov
mov
mov
and
fnstsw
xchg
cmp
sahf
jecxz
enter
les
je
jb
lods
imul
add
rorl
fstps
jecxz
adc
fstl
add
sbb
rol
std
xchg
out
sbb
jo
xchg
or
jl
push
fbld
cmp
lods
cltd
insl
lcall
and
pop
pop
mov
xor
hlt
or
std
push
aaa
push
fimuls
loopne
xor
insb
test
inc
es
into
imul
std
mov
mov
loope
and
sbb
test
sti
ficoml
xor
add
xor
mov
out
xchg
jmp
gs
mov
xchg
push
lods
add
pop
pop
popf
test
sahf
shrb
call
and
int3
fdecstp
push
out
sbb
aam
scas
xor
jecxz
mov
mov
and
push
daa
dec
mov
mov
neg
mov
sahf
mov
lahf
add
jb
sub
pop
dec
scas
sub
setb
mov
ds
sub
sarb
rcrb
xchg
push
add
into
dec
pop
movsb
pop
lcall
mov
xorb
sbb
movsb
jno
data16
loopne
cmpsb
mov
mov
inc
fmuls
push
mov
adc
jne
lret
push
mov
pop
js
sbb
cmpsb
shlb
mov
add
das
mov
fildl
mov
jae
pop
mov
dec
push
add
test
pop
jp
push
ja
cmp
lods
scas
aam
jbe
or
and
adc
xor
and
fucomp
push
out
xchg
aad
loop
xchg
xlat
or
je
aam
insb
cmp
sbb
jmp
mov
int3
adc
dec
repnz
fcom
int3
jge
mov
inc
hlt
xlat
cmc
stos
je
add
inc
push
into
sub
push
lret
lds
lock
cmp
cwtl
mov
jp
lsl
xorl
mov
pop
subb
inc
mov
mov
xchg
cmpsb
cmp
ucomiss
add
fs
call
xor
addb
mov
jns
leave
xchg
xor
push
ret
mov
jl
inc
sub
mov
in
fidivrl
mov
xor
imul
aad
jmp
pshufw
imul
stc
data16
int3
sub
cmpsb
es
sbb
int3
sub
in
and
fisttpll
add
bound
jg
jns
add
mov
mov
jns
pop
hlt
insl
inc
mov
mov
inc
sbb
jmp
loopne
jl
int3
sub
xor
pop
lock
cmp
fmul
or
js
mov
inc
adc
mov
cmp
lret
sti
push
fdivr
fcompl
dec
arpl
sub
mov
loope
mov
sub
test
and
push
mov
push
sbb
inc
ret
aad
sub
adc
adc
into
ja
ds
arpl
lock
adc
cmp
subb
shrb
pop
sahf
mov
bound
das
sub
jbe
sbb
jns
lahf
nop
dec
mov
fnstcw
stos
cld
mov
inc
leave
or
bound
int3
test
jecxz
mov
xchg
into
icebp
sbb
mov
cmpsb
stos
mov
lret
jle
jae
cmpsl
enter
push
testl
or
in
in
pop
push
ret
and
and
jl
fidivrs
les
adc
jmp
call
pop
fcomps
cmp
loope
dec
hlt
test
pop
test
mov
std
or
push
add
mov
in
pop
push
pop
lahf
add
je
lret
adc
mov
fcomp
add
jecxz
lds
aaa
ss
ljmp
push
out
ljmp
push
movsb
inc
mov
add
push
es
ret
mov
pop
cmp
xchg
and
lods
test
pop
or
data16
sub
inc
lret
dec
shl
jl
jl
dec
cmc
bound
xchg
sti
cmpsb
jl
mov
and
or
mov
enter
jmp
pop
xchg
in
pop
xchg
mov
out
in
xchg
inc
mov
das
call
push
hlt
cmpsl
sbb
int
test
mov
int
push
or
jp
jnp
int3
sub
pop
test
scas
aaa
add
mov
in
inc
outsl
stos
push
push
inc
aas
loope
inc
add
daa
dec
nop
mov
mov
jle
pop
fdivrl
mov
cmp
cld
cltd
adc
mull
out
push
leave
int3
or
jno
clc
mov
mov
sbb
ja
xchg
xor
leave
out
cmp
or
insl
test
aaa
and
mov
lds
pop
inc
push
push
push
mov
shlb
fildll
notb
push
mov
lods
push
xlat
fcmovbe
in
adc
imul
inc
xchg
ficompl
cmpsb
popf
jl
pop
xor
rcrl
sub
add
sar
movsb
add
push
adc
inc
dec
sahf
in
push
inc
popa
lcall
aad
xor
repz
jmp
je
in
sahf
inc
fisttps
out
arpl
mov
daa
cmp
lock
gs
jbe
clc
pop
movsb
cmpl
adc
gs
sbb
adc
mov
jmp
out
lret
negl
adc
mov
push
mov
gs
cwtl
out
push
xchg
in
mov
dec
mov
xorb
push
fcomps
aaa
inc
ret
mov
xchg
insl
mov
push
fistps
lock
push
movaps
popa
subb
in
lret
scas
pop
jno
das
shl
outsl
rolb
mov
add
push
rolb
push
add
loope
or
inc
push
mov
or
int
inc
mov
cwtl
mov
dec
hlt
andb
xor
dec
push
cmc
in
mov
mov
repnz
pop
pushf
or
xchg
aaa
testl
jae
xlat
out
in
movsl
xchg
icebp
icebp
or
int3
mov
pop
insb
stc
lea
jl
fst
repz
dec
aaa
mov
mov
adc
or
popf
mov
or
lcall
push
jge
fmull
stos
std
movsb
mov
lock
xchg
sub
pop
cmpsl
stc
mov
push
or
lret
add
arpl
popa
or
sbb
test
movsb
add
xor
lret
into
cmp
xor
inc
aas
rolb
andl
test
test
pop
sbb
cmp
cs
jp
ret
dec
mov
jl
in
dec
das
test
mov
cmpsb
sbb
leave
push
pop
and
lahf
pop
jne
jp
dec
dec
lea
mov
adc
or
fmuls
das
and
xor
push
sbbb
push
ror
movsl
sbb
or
outsb
fmull
dec
mov
xchg
loop
mov
repnz
jne
xchg
dec
fdiv
cmp
pop
es
lret
test
cmpsl
pop
data16
add
add
xchg
cld
jae
pusha
xchg
jmp
les
and
mov
add
mov
adc
int
shll
insb
sub
movsb
movsb
stos
and
mov
lahf
pop
or
fcom
inc
or
lods
xor
sub
shll
pushf
pusha
leave
loopne
aas
push
decl
call
mov
fldl
cmp
test
push
aam
mov
js
dec
pop
roll
ds
jnp
shlb
bound
mov
inc
jg
cld
cmp
push
mov
pop
std
mov
aam
mov
shll
insl
pop
sahf
leave
pop
adc
insl
std
sub
or
aaa
jne
insl
imul
xchg
xor
ret
pop
fs
pop
pop
inc
xor
pop
xor
dec
lds
or
mov
xchg
push
lcall
mov
push
mov
loope
sub
inc
jns
bound
pop
jne
stos
mov
adc
mov
pusha
mov
sub
ss
jl
add
mov
mov
adc
add
mov
stos
pop
repnz
out
pop
mov
sbb
adc
cld
pop
jnp,pt
push
fldlg2
popa
insb
mov
jne
ds
jae
xchg
push
push
push
fisubs
and
mov
pop
pop
insl
xchg
loopne
in
rclb
popf
mov
sbb
sbb
loop
cmp
pop
fistpl
cmp
push
mov
sub
mov
fwait
and
lea
jo
inc
enter
pop
cmpsb
cmp
cmp
clc
adc
jne
shr
cmp
aam
xorl
push
mov
xor
jmp
sbbb
in
aam
cmpsl
outsl
pop
sbb
nop
dec
pop
push
daa
notb
scas
jp
sahf
adc
jmp
es
sbb
out
sub
xchg
iret
cmp
push
pop
es
mov
push
or
icebp
sbb
and
and
and
popa
or
mov
loop
addr16
mov
mov
cmp
into
mov
sbb
jo
daa
xor
sbb
jne
mov
iret
or
sbb
jmp
adc
in
or
add
mov
pop
js
lock
xchg
pop
sbbb
fwait
pop
jmp
es
ja
lea
sub
lea
paddsw
fstps
mov
pusha
out
imull
cwtl
adc
adc
sbb
or
jle
and
xor
push
leave
imul
push
inc
mov
aad
mov
je
mov
sub
sub
mov
fwait
cmp
add
mov
adc
pop
shrb
call
push
pop
mov
xchg
test
or
jl
mov
negl
mov
mov
cmc
in
push
int
jle
jp
cmpsb
arpl
cmp
stos
cmpsb
pop
xor
cmp
sbb
nop
test
lods
add
andb
test
dec
dec
add
cmp
jp
pop
xchg
mov
push
jmp
popa
cmp
mov
sub
repnz
xor
call
sbb
pop
aas
jmp
xchg
fwait
cmp
pusha
sub
out
push
stos
pop
test
fidivs
jg
jg
adc
sub
mov
pop
aas
mov
repnz
lock
jns
pop
jg
xor
sbb
push
add
sub
mov
inc
loop
mov
push
and
or
mov
mov
repz
shlb
popa
jmp
mull
testl
loop
cmc
pop
scas
ja
ljmp
jno
mov
xchg
mov
jb
cmp
out
pop
sbb
xor
cmp
cli
inc
xorl
fisttpl
insb
mov
out
fcomps
jo
xor
push
or
xor
push
sbb
mov
jmp
dec
fwait
repz
lahf
push
jmp
and
pop
imul
clc
test
test
pop
das
out
sbb
imul
ja
or
push
sub
mov
mov
dec
dec
dec
xlat
lods
enter
pop
adc
mov
mov
divb
xor
add
or
ljmp
mov
cmp
jmp
xchg
mov
repnz
in
icebp
mov
insb
in
xchg
jmp
pop
dec
mov
jnp
and
movsl
jb
shll
outsl
mov
leave
adc
or
cmc
sqrtps
jg
xchg
xor
addr16
xchg
stos
cmpsb
jne
movsl
inc
jae
insb
pop
jecxz
pop
and
or
and
sub
loopne
jbe
jmp
loop
out
jae
and
dec
sbb
add
push
insb
sub
mov
jl
mov
inc
lock
jae
test
leave
test
movsl
popa
sub
in
pop
mov
or
bound
jo
xor
movsl
ret
push
sbb
dec
add
in
mov
pop
sbb
push
sarl
adc
jmp
aas
sahf
or
sti
inc
pushf
inc
inc
pop
loopne
idivl
add
movsl
idivl
lret
inc
fwait
leave
rol
fistpl
cmp
cmp
mov
add
jp
lds
push
ret
imul
bound
clc
ret
test
xor
lret
inc
lcall
nop
mov
lret
pop
xlat
dec
push
sbb
push
fnstsw
pop
mov
hlt
stos
dec
inc
scas
xor
enter
adc
mov
popa
and
sbb
cmp
es
lret
adc
hlt
lods
loopne
push
sbb
mov
pop
mov
adc
test
mov
fiadds
and
add
mov
sub
adcb
xor
stc
xor
sbb
xchg
mov
add
std
sti
mov
int3
aad
fisubrs
mov
ss
mov
cmp
enter
pop
int
loop
and
cltd
dec
ljmp
sbb
mov
push
sbb
jb
push
fsubrs
call
xchg
mov
mov
insb
xor
inc
imul
inc
jbe
mov
out
jb
out
lcall
xor
dec
je
rclb
cmp
aas
jbe
idiv
sbb
pop
lahf
inc
outsl
mov
mov
test
icebp
daa
rcll
js
notl
adc
addr16
xor
sub
ret
or
scas
cmovae
cld
movsl
push
xorl
cmpsl
xlat
aam
ret
xlat
enter
cmp
sub
addr16
cmpsb
std
add
push
outsb
int3
jb
es
aam
idivl
icebp
insb
or
dec
and
add
icebp
adc
cmc
and
popl
or
cmp
aad
inc
jmp
enter
xor
mov
add
pop
arpl
inc
sub
fs
cmp
sub
popf
mov
mov
sbb
add
and
fwait
inc
mov
adc
add
in
data16
in
push
pop
jne
mov
in
cmc
mov
ja
jecxz
xchg
or
adc
shlb
sbb
pop
push
ret
popf
int3
shll
rol
loope
mov
dec
in
rorl
add
sbb
fildl
pop
jmp
lods
sub
jle
daa
pop
adc
fwait
xor
aas
imul
out
lock
cmc
jno
mov
xchg
lcall
and
pop
pushl
sbb
or
je
pusha
lret
xor
ficoml
cmpsl
aam
fsubrl
aam
jmp
shr
push
test
sub
lods
stos
jmp
jbe
jge,pt
aam
fdiv
add
push
cmp
pop
scas
dec
pop
xor
neg
imul
add
mov
mov
les
mov
hlt
fptan
pusha
fisubl
lds
nop
pop
int3
or
notb
stos
jbe
mov
mov
mov
cld
and
sbb
outsb
pushf
movsb
or
xlat
xor
adc
sbb
inc
cmc
out
ret
pop
ret
xorb
cmc
add
ja
cmp
test
cmp
lock
pop
push
ljmp
das
xchg
pop
popa
xlat
test
data16
xchg
cmp
cmp
xchg
inc
lock
rcr
cmpsl
xchg
pop
or
or
pop
add
popl
dec
jp
arpl
push
xor
mov
lds
rcrl
aas
xchg
dec
cmp
xlat
and
int
cld
xor
clc
clc
push
mov
cmp
lods
scas
lods
add
stos
repnz
imul
in
scas
subb
stos
in
div
jge
iret
sbb
xor
imul
cli
lods
daa
xor
cmpsl
jns
outsb
data16
dec
lods
pop
push
sub
lahf
cmpsl
dec
loopne
sbb
roll
push
imul
push
lea
add
lahf
in
jno
jo
into
or
push
in
cmp
xor
test
jne
sahf
push
call
push
cmp
pop
inc
add
push
mov
sub
jmp
bound
cmp
pop
inc
sbb
push
pop
xchg
js
out
test
adc
xor
hlt
adc
ds
nop
xor
fisubrl
arpl
adc
hlt
mov
push
push
or
push
sbb
ret
sbb
push
rcrb
mov
mov
add
and
xchg
into
push
add
and
mov
mov
cmp
rorl
xor
adc
mov
mov
pop
data16
cli
fisttps
mov
mov
push
imul
mov
mov
scas
xor
cmp
cs
movsl
cmpsb
jae
mov
roll
sub
loop
hlt
test
or
xor
dec
lahf
pop
pop
shll
shll
aaa
jnp
repnz
jp
mov
pop
je
jge
lret
xchg
pop
pop
test
cli
sahf
push
adc
mov
pushf
add
mov
or
lods
cmp
cmp
ss
pop
jecxz
std
popf
lds
add
mov
inc
xlat
mov
xor
pop
lods
adc
mov
fldenv
mov
mov
push
rcrb
mov
bound
sub
and
idivl
mov
in
or
xchg
es
push
cli
dec
cmp
xchg
cmp
add
adc
dec
inc
mov
mov
push
cmp
js
sbb
add
fs
es
fcmovne
in
jg
cmp
mov
sub
das
js
mov
in
adc
clc
leave
xor
test
aaa
sub
dec
mov
fidivrs
or
lock
fdivrl
popf
lea
addr16
dec
lahf
sti
add
fcmovnb
cmc
inc
ljmp
movsl
xchg
into
cmp
jmp
push
fs
mov
xchg
adc
push
jecxz
adc
mov
mov
jnp
movl
jp
pop
push
mov
fdivp
rcl
xor
notl
jbe
add
scas
call
or
jl
xchg
mov
mov
jbe
inc
mov
popa
rcll
inc
lea
cmp
ljmp
lcall
daa
outsl
cmp
dec
jl
or
pop
sub
cmp
jns
jnp
xchg
mov
je
rcrb
cmp
ret
push
movsb
dec
lds
sarl
mov
jmp
rep
pop
in
xchg
xchg
sbbb
test
pop
and
add
sahf
sbb
xchg
pusha
jmp
push
xor
xchg
out
fsubrl
push
mov
sub
aas
pop
mov
call
dec
aam
mov
leave
jecxz
and
fldl
imul
das
jp
cmp
sub
pop
cmpl
xchg
pop
fsubrl
cmp
xchg
pop
outsb
ja
imul
adc
fs
dec
jae
mov
js
aad
fadds
mov
dec
mov
sub
mov
arpl
and
jae
jno
adc
pop
adc
add
fimuls
clc
jecxz
hlt
repz
out
out
fcomp
mov
hlt
push
pusha
mov
sbb
bound
fstpt
push
push
in
mov
mov
out
dec
fisubl
jl
movsl
std
push
sbb
mull
mov
sbb
test
push
inc
test
xchg
dec
mov
inc
in
lret
loopne
mov
or
daa
push
push
add
int
mov
shlb
bound
or
mov
and
xchg
fcoml
loopne
cmpsb
int3
sbb
dec
and
sti
or
mov
cmp
fwait
push
cltd
adc
lods
movsl
pop
push
pop
add
cmp
clc
lea
mov
lds
ja
mov
xor
xor
rorl
lcall
out
inc
xor
mov
arpl
test
pop
bt
push
and
mov
testb
xchg
mov
add
xor
lds
xor
inc
xor
lret
xchg
push
pop
insb
test
push
jl
pop
test
push
xchg
and
pop
or
cld
add
rcrb
loopne
and
in
test
lcall
dec
lods
je
push
push
mov
xchg
iret
pop
addr16
popa
imul
lcall
daa
or
cmp
dec
and
fimull
push
inc
xchg
aam
xchg
pop
or
pop
nop
cmp
in
iret
mov
xorb
stc
out
test
sahf
mov
xlat
jecxz,pn
sbb
popf
inc
out
jnp
or
lock
cmp
adc
out
dec
aam
or
jb
loop
jl
jl
fidivrl
into
dec
sbb
pop
xadd
xor
jo
dec
mov
and
xchg
pusha
test
pop
out
xor
fistpl
adc
inc
adc
pop
add
mov
xchg
mov
ljmp
jb
les
movsb
sbb
mov
clc
pop
mov
test
sub
xor
popf
cmc
ret
push
ljmp
adc
shlb
test
pop
fwait
cli
pop
repnz
push
push
inc
repnz
negb
or
insl
sbb
das
in
in
fidivl
adc
aam
jecxz
leave
scas
enter
insb
lods
aaa
add
jle
in
adc
orb
adc
xchg
cmp
dec
jg
loope
push
bound
mov
iret
or
das
jns
and
add
int3
daa
and
push
roll
lret
test
repz
hlt
and
fwait
shl
cmp
push
mov
sti
add
add
negl
or
sub
push
or
add
cmp
scas
xor
insl
cmp
or
jmp
loop
push
mov
iret
mov
pop
cmc
adc
insl
lds
stc
leave
and
enter
filds
fldt
sbb
cmpb
dec
mov
dec
test
lds
cltd
cld
pop
jb
test
ror
sti
inc
std
sbbl
arpl
lret
out
data16
xchg
xor
cmp
mov
sbb
outsb
inc
cmpsl
fs
xchg
ds
push
testb
std
loopne
in
xor
cmp
fwait
inc
mov
fucomip
jle
jns
pop
inc
sbb
mov
popf
adc
pop
or
xchg
jg
ja
addl
stc
cwtl
mov
push
ja
xlat
xor
test
inc
or
addl
scas
in
sub
adc
push
loopne
xlat
sahf
mov
test
or
sbb
push
popa
adc
xor
sbb
adc
lods
in
pushf
or
push
cmp
in
jnp
js
jmp
inc
or
inc
scas
aaa
popa
sarb
movsb
jns
in
cltd
push
mov
nop
xchg
push
inc
lret
xchg
dec
dec
out
push
mov
pushf
pop
outsl
jg
lods
dec
ret
test
imul
jp
insl
call
push
xchg
je
jge
sbb
sbb
ja
and
dec
sbb
sub
cmc
jns
mov
insl
cmp
lahf
mov
mov
pop
lods
daa
inc
jmp
xchg
jle
mov
cwtl
movsb
mov
mov
xchg
pop
sbb
add
push
les
out
mov
loopne
xor
push
mov
xor
xlat
cltd
lahf
pop
sub
ret
dec
lcall
insb
out
mov
je
xchg
shrb
into
cwtl
jbe
mov
jnp,pt
mov
dec
pusha
jns
cmp
push
mov
sub
push
lock
out
lods
in
dec
enter
cli
push
lods
pop
in
cmp
loop
mov
xor
or
push
aam
add
sbb
jns
inc
insb
test
pop
and
into
cmp
ljmp
xor
jb
in
dec
mov
loopne
je
test
pop
iret
cmc
xlat
test
sahf
jle
icebp
mov
push
or
inc
push
push
arpl
popa
jae
add
mov
fcomi
push
mov
into
xlat
cld
aam
sub
jo
xchg
mov
call
pushf
imul
jbe
dec
add
and
sub
sub
mov
test
lock
mov
inc
call
adc
xchg
decb
fld
pushf
ja
das
sub
cs
add
add
push
dec
mov
fs
repnz
mov
mov
mov
js
adc
jecxz
orb
lret
adc
dec
ret
xchg
fsubr
popf
mov
fxtract
insl
lock
sti
call
in
std
iret
xchg
stos
or
adc
ljmp
cli
xchg
scas
push
jb
jmp
push
imul
mov
lret
inc
int
sub
push
movsb
das
test
addr16
xchg
movsb
sbb
mov
lret
jb
rcrl
fwait
xchg
mov
push
loopne
mov
call
pop
add
mov
loop
ret
cli
out
dec
xchg
and
sub
paddw
fwait
mov
and
cwtl
xchg
ja
mov
aam
push
push
cli
jbe
add
testl
adc
and
sbb
cmpsl
jp
cmp
les
mov
xor
test
or
ljmp
ja
sbb
mov
mov
add
mov
mov
idivl
hlt
repnz
fstp
repnz
out
dec
popf
xchg
cld
push
mov
xchg
push
pop
dec
repz
enter
push
adc
xchg
pop
into
ficoms
push
fimull
ja
jmp
mov
adc
mov
jl
lcall
mov
push
lods
into
lret
cmc
mov
xor
scas
cmp
adcl
mov
push
jb
jno
call
outsl
or
outsl
or
xchg
pop
adc
xchg
sbb
outsl
dec
aas
inc
lods
mov
pop
je
scas
jg
out
rol
jmp
nop
xor
dec
mov
inc
adc
cmpsb
pop
jne
mov
xchg
mov
add
rclb
pop
add
sub
repnz
adc
lock
xchg
aad
hlt
out
pop
test
add
scas
sub
imul
and
outsb
xchg
loopne
mov
fstpt
mov
inc
mov
cwtl
and
push
adc
push
mov
adc
push
mov
push
enter
cmp
decl
neg
out
lods
or
cmp
pop
sbb
das
call
mov
sbb
xchg
ret
cmpxchg
nop
cwtl
movsl
jno
insl
or
call
js
and
dec
out
dec
leave
fwait
and
ds
jge
imul
int3
dec
iret
lea
stos
pop
jp
sub
insb
inc
enter
add
dec
pop
lea
repnz
rcrb
add
mov
push
adc
pop
sub
pop
push
popf
addl
jno
aam
jno
adc
xchg
mov
repz
call
fcoms
into
inc
xchg
mov
xchg
iret
stos
dec
out
stos
inc
cs
mov
push
or
dec
or
or
add
int
push
dec
mov
push
test
xchg
pop
mov
popf
cmp
push
fstl
mov
clc
push
add
sbb
daa
cmp
dec
push
sbb
imulb
xchg
ret
mov
mov
aam
sub
mov
inc
idivb
mov
or
cmpb
and
push
push
out
aad
mov
sub
push
aaa
push
int
xorl
or
sti
and
lea
push
and
test
gs
add
fadd
sti
shrl
cmpsb
jg
dec
inc
int3
jbe
xor
add
jl
insb
push
test
cmp
pop
pop
fiaddl
movsl
ljmp
xchg
push
lahf
ds
test
sbb
pop
hlt
in
adc
in
out
mov
dec
inc
paddusw
fadds
jno
stc
loop
lret
mov
enter
cld
cltd
jle
push
lret
xchg
cmc
lods
push
addb
fisttpll
fisttpll
movsl
shlb
cmp
bound
push
test
push
xchg
adc
mov
lcall
in
into
movsb
outsl
dec
or
mov
iret
test
ds
xchg
hlt
mov
dec
mov
and
push
es
aad
sub
dec
pop
xchg
out
loop
addr16
add
xchg
mov
sub
sub
sbb
cmc
pop
inc
push
shl
cwtl
gs
push
and
testb
jle
aaa
rclb
mov
push
rcll
inc
test
lea
fs
xchg
mov
inc
stc
out
push
subb
cmp
dec
xchg
out
stos
sbb
sbb
dec
inc
cwtl
push
jns
aaa
imul
mov
lahf
and
shrb
repz
dec
movsb
test
jo
sbbl
out
icebp
sbb
adc
jbe
sub
shrb
mov
jbe
loope
jb
push
push
mov
repnz
lock
int
xchg
jb
pop
inc
jnp
xchg
mov
out
pop
dec
es
mov
push
shll
jmp
ret
jb
mov
insl
jl
and
sub
test
imul
pop
xor
push
in
sub
jle
pop
addr16
cli
out
cld
pusha
jo
aam
dec
push
adcl
popa
loope
push
lea
mov
sbb
loopne
add
fnstsw
sti
and
imul
in
addr16
stc
jbe
inc
jle
insb
xorb
or
fucomp
insb
call
xor
std
mov
cmp
clc
or
mov
jp
insl
or
xchg
aaa
std
dec
push
or
jl
test
mov
es
dec
xchg
push
es
mov
pop
lcall
je
add
add
popl
in
rcrb
addr16
inc
lcall
xor
adc
pop
xchg
jne
mov
add
mov
rcll
aad
enter
aaa
cld
add
push
pop
es
filds
add
popa
ljmp
nop
neg
test
fdiv
rcrb
flds
mov
out
and
cltd
jp
xchg
push
pop
mov
cmp
ret
cmpsb
int3
int3
das
add
daa
js
adc
leave
call
out
fwait
xor
xchg
test
cmp
iret
jle
jmp
in
mov
sbbb
cmpb
enter
gs
push
push
movsb
xor
sbbb
es
ss
shlb
je
je
and
in
inc
sbb
mov
popf
arpl
into
cmp
sub
rorl
sbb
outsb
xchg
cmp
jge
stos
not
nop
xchg
mov
daa
push
cs
das
pop
fldt
addr16
adc
cmp
stos
movsl
add
movsb
in
je
sub
movsb
ljmp
or
out
fs
cmp
xchg
push
jae
sbb
ds
dec
jge
stos
pop
leave
mov
push
jge
orl
xchg
and
push
inc
stos
fists
adc
scas
fucomip
mov
sub
sbb
and
dec
pop
shll
movl
addb
loopne
out
add
xor
lods
xchg
iret
iretw
push
insl
cmc
ficomps
leave
add
jle
jns
pop
inc
add
mov
clc
iret
fsub
testl
mov
lock
jb
ljmp
repnz
mov
add
or
add
jmp
cmpl
adc
jmp
loope
inc
adc
jb
mov
or
fstpt
jmp
sti
ljmp
pop
cwtl
adc
push
sbb
mov
inc
stc
das
jle
push
lcall
and
outsb
dec
push
movsl
sbb
jecxz
adc
mov
dec
out
push
orb
xchg
jbe
mov
jg
jmp
push
fwait
add
and
shrl
aam
push
xchg
aam
outsl
sbb
mov
cmp
sbb
mov
and
js
aad
popa
push
sbb
jne
fcoms
movl
jmp
push
xlat
cmp
clc
pop
sub
xchg
pop
jl
sub
mov
mov
xor
pop
adc
inc
push
aad
lahf
dec
in
dec
bound
jno
mov
mov
fcomip
shr
popf
lahf
sbb
out
ljmp
loop
and
cs
fisttpl
adc
jns
jle
insb
or
cmp
ljmp
push
inc
xchg
add
mov
dec
fucomp
dec
cmpsb
inc
xor
ds
popf
cmp
es
mov
jp
dec
nop
dec
fisubrs
mov
imul
out
test
iret
lods
cmpb
pop
divb
xchg
test
and
add
pop
sub
outsb
push
cs
iret
flds
xor
jbe
adc
sbb
mov
inc
test
xor
orb
aam
add
lret
sbb
xchg
cmp
add
negb
frndint
cltd
pop
cmp
mov
test
add
mov
mov
xchg
xchg
cltd
or
cmpsl
jbe
scas
movsl
dec
loope
dec
insl
pop
or
out
in
fwait
cmp
xor
pop
dec
icebp
sti
mov
rol
in
sbb
incb
pop
fsts
in
addr16
xchg
mov
jmp
into
in
repnz
or
sbb
mov
push
and
aad
mov
cmp
pop
daa
sub
sarb
test
xchg
xlat
cmpsb
inc
fadds
jle
jg
sub
ficoms
lock
and
inc
ret
mov
hlt
lahf
mov
jnp
rep
lods
out
mov
sahf
ffree
shlb
or
pop
sub
lods
gs
xlat
std
xor
dec
aad
pop
inc
and
popa
push
adc
mov
adc
and
mov
dec
mov
out
xor
xor
mov
mov
mov
add
cltd
popa
xchg
xor
stos
jle
sub
sbb
jp
ss
mov
xchg
ficoms
inc
and
shrb
loop
pop
out
rcr
mov
div
mov
test
in
xchg
bound
xor
sub
mov
addr16
aaa
stc
mov
loop
cmp
sbbb
xor
jae
pusha
jno
and
mov
or
dec
es
shlb
ds
inc
sbb
xchg
add
mov
sub
dec
cmpsb
arpl
adc
insb
sbb
rorl
push
mov
jmp
mov
les
popf
push
data16
jl
xor
test
fildll
cmp
je
pop
ret
jecxz
push
call
push
or
orb
mov
or
notb
imul
test
xor
and
mov
sbb
out
fucomp
mull
shlb
je
mov
jbe
sub
adc
inc
mov
sub
or
in
or
xchg
ret
adc
ljmp
pop
mov
xor
ljmp
adc
adcl
sbb
mov
or
int3
dec
cmpsl
sbb
repz
add
inc
push
push
mov
pushf
pop
push
xchg
jne
and
and
jns
fs
and
or
mov
ret
cmp
adc
xor
mov
nop
and
or
out
vmulpd
or
push
pop
sti
xchg
push
dec
pusha
mov
ret
sub
cmp
xor
bnd
mov
jbe
pop
cmp
cld
dec
jae
dec
repnz
mov
bound
pop
ret
cmp
jbe
pop
xor
mov
fstps
mov
faddl
push
stc
jnp
push
movb
insb
jp
sub
mov
icebp
dec
out
push
pushf
dec
xor
sbb
dec
rolb
cmc
xchg
push
adcl
fisubl
dec
pop
sbb
pop
and
sbb
lods
mov
dec
rcrb
aaa
pop
dec
add
hlt
pop
push
fistpll
xchg
stos
out
pop
iret
arpl
mov
push
xor
mov
jne
lahf
aad
imul
inc
mov
sbb
popf
sbb
mov
outsb
mov
add
xchg
xchg
sub
loopne
push
out
out
stos
sahf
xlat
cmp
mov
clc
rcr
and
mov
sbb
lret
es
pop
dec
pop
out
ret
or
or
dec
sbb
out
into
xchg
rorb
inc
dec
mov
gs
daa
ds
cmp
or
dec
sub
sub
mov
xor
lcall
cld
jmp
mov
movsl
add
call
lret
push
dec
movsl
out
pushf
jno
cmc
inc
stc
dec
das
pop
mov
add
jnp
jle
cmpsb
pop
subb
ds
inc
add
jno
mov
les
ss
loop
push
adc
insb
add
add
call
inc
lahf
fwait
adc
stos
push
inc
into
pop
cmpsl
jecxz
iret
mov
in
cmp
cmp
fsubs
jge
outsl
nop
repnz
in
sbb
out
jno
xchg
mov
jnp
pop
subl
adc
ss
fidivs
icebp
push
pop
mov
je
ret
bt
push
loope
xor
jnp
jl
pop
sub
sub
out
sbb
jae
push
daa
pop
stos
sbb
inc
cwtl
inc
in
jae
clc
dec
adc
jecxz
mov
test
xchg
dec
dec
mov
sub
in
jp
int
mov
pop
mov
mov
pop
jae
fimuls
and
mov
or
xor
xor
icebp
addl
pop
inc
or
fistpl
aam
outsb
hlt
push
repnz
sbb
ficompl
add
fcompl
push
mov
dec
mov
push
and
push
inc
cmp
cmp
pop
sub
fimull
jle
arpl
jle
add
cmp
xor
jl
sti
jno
xor
dec
adc
push
push
adc
out
xor
or
lock
xchg
jbe
push
push
popa
push
add
sub
sub
xchg
nop
aas
mov
dec
in
lret
xchg
jp
mov
shlb
cli
cmpsl
sbbb
jbe
dec
adc
bswap
xchg
scas
ret
jmp
bound
mov
repz
fidivrs
nop
pop
xchg
mov
repz
shl
fwait
and
xchg
sub
sbb
fmuls
xor
popa
js
test
add
aad
sub
cmpsb
xor
cmpsl
fcoml
add
mov
jae
fisubrs
ljmp
or
adc
int
les
js
sbb
aaa
ret
addr16
sbb
repz
por
adc
sbbb
popf
lds
jl
repnz
cwtl
mov
sub
jno
mov
imul
mov
pop
mov
inc
ret
pop
dec
mov
jae
aaa
loopne
pop
subb
push
daa
es
fcoml
inc
mov
push
adc
pop
cmp
pop
test
cli
pop
pop
mov
clc
in
outsl
in
das
arpl
js
jo
sarb
sti
and
test
cs
jl
inc
dec
pop
shll
mov
das
ljmp
and
cld
movsb
cli
roll
mov
jge
jl
loope
or
hlt
dec
sbb
push
pop
mov
add
dec
mov
jecxz
add
jg
pop
repz
cmpb
and
frstor
mov
and
data16
outsb
jle
dec
pop
xchg
jl
pop
push
lods
add
adc
out
lods
mov
dec
adc
sbb
addr16
cmp
sti
pop
call
cmp
notb
xchg
xor
adc
jp
imul
adc
lret
push
xor
jbe
push
into
adc
test
mov
loop
sahf
dec
inc
xchg
pop
mov
lea
sbb
movsl
das
cmpsb
arpl
mov
dec
or
xchg
push
mov
sub
pop
pop
notl
shlb
imul
adc
inc
cmp
jp
movsl
testl
xchg
and
inc
out
mov
movsb
arpl
inc
shrl
clc
repz
mov
fisubs
pop
and
stos
and
sub
mov
add
lods
xchg
xchg
xchg
jp
in
out
xchg
sbb
cmpsb
sub
ljmp
out
fcmovu
out
push
fmul
int
mov
cmp
sbb
data16
sub
add
mov
mov
enter
lock
mov
mov
pop
inc
lock
out
add
in
divl
add
mov
es
rclb
loope
pushf
pusha
out
adc
pop
mov
scas
mov
mov
out
and
loopne
ja
sbb
sub
or
mov
je
pop
mov
leave
push
loope
pusha
jmp
mov
dec
out
ljmp
xchg
or
insb
add
and
jge
addr16
jle
in
ljmp
shl
arpl
inc
fnstsw
outsl
adc
adc
test
dec
das
pop
out
adc
shll
sub
adc
inc
xchg
rorb
mov
pop
mov
add
fldenv
or
sahf
mov
popa
jg
loope
mov
out
stc
in
pop
and
int
jmp
mov
mov
in
dec
jg
mov
sti
jle
mull
cmc
out
xchg
sub
sbb
mov
xchg
sti
or
or
inc
iret
cs
cld
sub
xor
data16
inc
into
and
mov
cli
pop
push
adc
sbb
in
push
cmp
ret
xchg
dec
and
push
leave
test
mov
push
and
in
push
clc
shrl
adc
adcb
push
mov
aad
cld
ss
mov
mov
add
ret
push
inc
and
movsb
stos
add
enter
push
push
add
outsb
repz
dec
es
dec
imul
sbb
stos
xor
push
xor
cmp
bound
push
popa
scas
pop
loop
lea
jmp
mov
out
ret
mov
sub
aad
mov
inc
pop
mov
sti
js
xchg
out
nop
repnz
inc
mov
mov
in
popf
mov
shll
lods
loopne
mov
aas
pop
jg
jns
pop
dec
sbb
imul
fadds
imul
lods
jb
and
jl
faddp
push
sbb
loope
daa
jb
dec
adc
mov
push
add
sbb
int3
jnp
push
cmp
stc
inc
out
and
mov
push
or
out
icebp
das
xor
into
inc
mov
cmpsl
mov
push
cmp
in
clc
mov
gs
lret
inc
push
mov
mov
outsb
xchg
adc
pop
jnp
mov
roll
push
push
sbb
mov
mov
mov
xchg
jp
adc
push
aad
popf
dec
push
inc
lds
sbb
outsl
dec
in
ja
ds
int3
in
mov
sub
pop
mov
adc
adc
adc
adc
inc
xor
adc
add
xorb
sbb
ret
inc
and
add
repnz
xor
cmp
dec
sbb
and
adc
popf
imul
push
jl
dec
sub
pop
dec
les
dec
mov
in
pop
pusha
std
repz
mov
and
push
inc
mov
outsb
das
cmpsl
jp
cmpsl
mov
cs
lock
gs
jle
xlat
fstpl
or
pop
push
cmp
ret
jo
jns
sahf
lret
daa
jne
lods
pushl
push
test
mov
fadds
mov
pop
pop
add
mov
out
imul
test
frstor
stc
dec
ficoml
clc
int
xchg
xor
popf
and
test
into
cli
jmp
std
mov
fs
xchg
mov
pop
xchg
fdivl
ja
xor
inc
inc
addr16
add
xchg
sub
out
xor
jno
jge
cmpsb
outsl
outsb
pop
cmp
dec
jmp
add
cmp
lods
dec
cli
mov
fisttps
pop
mov
mov
sub
jnp
cmpsb
adc
adc
aaa
loop
mov
lods
xor
cmp
sbb
dec
testb
jl
xchg
and
fwait
jmp
ds
pop
jp
dec
jb
pusha
dec
call
daa
mov
mov
ljmp
lcall
das
xor
and
enter
bound
mov
dec
shrl
mov
push
shlb
and
jns
cwtl
scas
in
mov
shll
xor
mov
xchg
into
bound
mov
xor
stc
outsl
push
lret
fwait
xchg
mov
cmp
or
push
adc
outsb
push
xor
cmovae
push
shl
or
adc
loopne
pcmpeqd
add
mov
dec
dec
dec
mov
std
pop
mov
jg
mov
jecxz
push
jl
push
pop
enter
mov
dec
mov
mov
mov
repz
imul
and
inc
rolb
lahf
xor
lds
jge
insl
mov
rcl
fisttpll
jge
hlt
jp
jle
repnz
xchg
aas
loope
jnp
adc
inc
pop
and
mov
or
pop
lahf
jecxz
mov
jge
cmpsl
mov
pop
loopne
push
push
push
cmp
cltd
lret
or
inc
sbb
mov
movsb
inc
sub
push
repz
ja
sbb
push
cmpsb
out
ss
add
dec
mov
xchg
std
push
shrl
mov
dec
or
mov
fnsave
clc
scas
mov
scas
mov
ret
out
loope
mov
add
test
nop
lock
inc
jne
scas
mov
lret
pop
mov
aas
mov
inc
out
mov
shl
int
lds
rcrb
out
fnstcw
adc
sbb
pop
mov
jo
pop
add
sub
inc
iret
lods
inc
hlt
push
sbb
daa
xchg
sub
or
lahf
test
repz
sbb
jae
stos
cli
or
rorb
sbbb
cli
int
adc
push
pop
mov
sub
and
pop
mov
adc
int
into
mov
roll
stos
xchg
xor
std
je
fisttps
adc
or
fistps
add
test
or
jl
fcmovnbe
inc
xchg
aad
inc
andb
shll
cmp
inc
scas
xchg
and
and
mov
add
cmp
clc
jns,pn
and
sub
mov
sbb
dec
orl
adc
sub
fidivrs
or
nop
mov
int
and
scas
cli
xorl
aaa
push
movsl
orb
cmpl
lret
dec
ljmp
jge
sbb
mov
inc
add
leave
sub
outsb
out
ss
inc
push
hlt
jl
cltd
ljmp
mov
push
mov
icebp
push
add
xor
inc
adc
push
sbb
pop
cmp
xor
js
scas
mov
xor
cmpsl
xchg
shlb
clc
sbb
mov
jmp
mov
add
loope
mov
adc
enter
inc
jecxz
sbb
vsqrtps
dec
popa
or
sub
xor
rol
out
js
add
ret
mov
movsl
popa
pop
jp
sarb
repnz
xor
mov
insl
test
and
sbb
popa
test
jge
es
sbb
leave
adc
inc
fists
adc
mov
scas
into
test
jl
mov
adc
stc
wbinvd
lds
jmp
popa
ret
test
roll
pop
aad
mov
fistl
jae
testb
xchg
inc
mov
dec
outsb
fidivl
xchg
adc
stos
loopne
aad
or
and
dec
call
lahf
xchg
fstpl
outsb
addr16
lahf
mov
xchg
jb
push
test
mov
and
stc
fdivrs
sbb
pusha
push
popa
mov
ret
pop
lods
aad
or
lcall
pop
iret
add
enter
popa
xor
test
dec
cwtl
jle
and
mov
loopne
fwait
cwtl
ret
inc
pop
mov
fnsetpm(287
sbb
outsl
jo
bswap
or
sub
lret
or
into
imul
cli
push
repnz
xchg
fucomi
or
push
jmp
cmp
mov
push
add
out
lods
jno
shrb
mov
sbb
sub
sahf
mov
sbb
dec
fs
pop
cmp
arpl
sbb
or
mov
mov
mov
cmp
push
imul
lea
mov
jp
outsb
and
jge
push
sub
outsl
inc
lcall
mov
and
or
sbb
cmp
mov
imulb
scas
pop
adc
cmpsb
jmp
xor
nop
add
lcall
xlat
arpl
in
stc
cs
gs
lods
or
cmpsl
adc
stos
pop
and
fstpl
jno
jnp
push
push
or
mov
sar
xlat
loope
fistpll
dec
xlat
fwait
inc
lahf
rcr
rclb
pop
xchg
xchg
cli
mov
add
inc
out
es
sahf
ret
xor
lock
pop
jmp
cmpsl
mov
mov
rcr
push
and
test
or
lea
xchg
test
test
dec
pop
mov
inc
mov
adc
mov
ljmp
loopne
add
test
jmp
lahf
xchg
popa
pop
daa
leave
jge
loopne
sahf
jmp
scas
lds
cs
imul
add
lret
xchg
xchg
daa
into
xor
insl
jge
sti
cs
sti
test
gs
ljmp
inc
sub
push
ret
iret
imul
and
ljmp
sbbb
mov
jmp
mov
xchg
imul
test
mov
push
push
jae
mov
fisubs
sti
sbb
lahf
mov
mov
sub
repnz
addr16
ret
cmc
int3
shr
mov
addr16
adc
mov
mov
xorl
int3
call
adc
jl
inc
outsb
xlat
jo
cmpsl
andps
movsl
adc
pop
movsl
popf
xchg
sarl
cmp
adc
add
icebp
aas
stc
lock
mov
inc
mov
xor
pop
mov
std
lock
cmp
sbb
and
mov
dec
xchg
mov
testl
mov
mov
les
mov
jns
sti
ret
push
in
sbb
stos
pop
test
iret
xor
mov
fimuls
add
or
pop
fsub
mov
mov
js,pt
sub
dec
pushf
push
adc
mov
popf
sub
xchg
sbb
cmp
mov
sahf
xlat
lods
mov
sbb
sahf
jecxz
shlb
insl
mov
pop
adc
aam
lret
xchg
ja
fsubrs
push
aam
sbb
out
and
sti
push
dec
jle
push
xor
cmp
jl
ja
xchg
push
jne
cwtl
mov
mov
xor
and
insb
cmp
add
in
cmp
add
or
lcall
lret
fisubl
loope
cmp
xchg
mov
cmp
fnstsw
lods
xor
dec
lahf
popa
mov
shl
cmove
mov
xchg
and
hlt
jb
lods
dec
mov
cmp
pop
xor
in
adc
jge
mov
cli
xlat
xchg
das
cmpsl
int
aas
lods
inc
mov
sahf
into
xlat
xor
mov
push
pop
lds
push
dec
jbe
insb
fsubrl
push
pop
stc
mov
jnp
hlt
add
mov
rclb
shl
sub
andb
sub
outsl
xchg
aas
les
inc
loopne
jg
insl
imul
scas
cmpl
push
xchg
mov
repnz
mov
ja
scas
mov
add
jg
adc
scas
in
sub
sub
xor
xor
lock
xchg
and
xor
adc
xor
rolb
fsubp
xchg
mov
dec
outsl
xor
lret
shlb
das
jnp
pop
mov
cwtl
add
leave
mov
stc
mov
lods
cmpb
fldl
repz
jo
push
mov
inc
mov
cmp
adc
sbb
dec
sbb
xor
icebp
cmp
dec
test
cmp
rcll
call
in
cmpsb
cmpsb
cmp
or
sbb
stc
push
or
jecxz
mov
jp
xchg
rolb
in
sub
push
and
ret
repz
or
sub
repnz
and
and
inc
jne
movsl
dec
mov
inc
sbb
jl
mov
hlt
sti
mov
mov
and
inc
incl
jl
mov
and
inc
xorl
aas
repnz
mov
xchg
add
nop
cwtl
add
test
fcmovu
add
lods
and
movsl
stc
jmp
mov
adc
shrl
jg
addl
cli
mov
mov
ss
clc
js
push
jbe
mov
mov
dec
sti
pop
test
enter
dec
mov
fsubs
cmc
cmpsb
cmp
xchg
mov
and
scas
mov
jnp
ss
mov
xor
test
xchg
xorl
in
stos
cmpsb
div
shll
imul
push
cmp
push
dec
orl
pop
sahf
and
js
xor
jbe
fiadds
in
cmc
adc
int3
mov
cs
jae
lret
ss
int
insl
cmp
jl
out
shlb
xor
push
scas
std
shr
enter
repz
fmuls
mov
fbld
decl
cmp
dec
cmp
rorb
add
es
lods
cmp
lock
ss
cli
cwtl
leave
xchg
jmp
daa
mov
push
jecxz
mov
sub
lods
dec
test
xlat
push
mov
push
mov
fistps
cmp
fists
add
mov
bound
and
mov
inc
pop
sbb
xor
in
dec
and
inc
in
outsl
pop
popf
jo
pop
push
mov
add
fs
out
push
andb
xchg
mov
push
push
shlb
cmpsb
out
xchg
and
push
das
roll
mov
mov
rol
inc
and
lret
sbb
outsb
movsb
adc
dec
jl
xor
into
push
aaa
int3
add
data16
in
imul
das
lods
outsb
or
xchg
jnp
test
mov
mov
sbb
xchg
mov
mov
aaa
mov
jae
and
int3
cmp
sbb
mov
dec
adc
push
mov
mov
int
sbb
pop
cmp
mov
arpl
aas
ja
std
int3
dec
repnz
push
fstp
ds
mov
cld
mov
jecxz
lret
sbb
mov
pushf
es
mov
movsb
mov
mov
adc
vmulpd
cmp
fldenv
mov
sbb
fsubr
sub
popa
xchg
lret
mov
xchg
rcr
fiadds
inc
and
stc
neg
je
jg,pn
dec
outsb
out
movsb
jge
mov
sbbb
outsl
adc
or
add
enter
add
add
mov
xchg
mov
add
and
mov
mov
jmp
test
enter
sub
fmul
xchg
sbb
iret
call
xor
cmc
xchg
sbb
sbb
subb
dec
icebp
jne
add
enter
ret
xor
cmc
arpl
jb
bound
xchg
popf
fwait
mov
insb
popl
jmp
dec
pop
lds
sbb
adc
dec
fimull
aad
and
idivl
jle
add
ss
lahf
outsl
adc
add
andl
orl
dec
xlat
push
xor
rcrb
jge
aam
sbb
pop
iret
shld
aas
cmp
pop
test
cmc
xor
mov
adcl
push
sbb
mov
jns
xchg
xor
in
outsb
push
andl
xchg
push
std
cmpb
or
ljmp
sub
mov
test
push
jo
out
leave
mov
pop
mov
pusha
push
outsb
lock
jmp
dec
adc
inc
les
jg
js
in
cli
jbe
xor
adc
cmpsl
or
mov
mov
add
andb
and
jg
add
cwtl
aam
jnp
add
mov
adc
sbb
sbb
aas
outsl
xor
cmpsl
mov
jbe
inc
leave
aas
adc
lret
push
enter
inc
stos
dec
pop
icebp
call
nop
push
pop
xlat
xor
xlat
sub
lret
test
jne
andb
inc
add
jle
cwtl
pop
adc
push
sbb
aad
loope
cmp
ret
repnz
xlat
sbb
mov
adc
je
mov
cli
mov
jg
adc
pushf
loope
cmp
add
stos
mov
mov
xchg
test
dec
insl
and
cmpsb
std
sbb
and
mov
dec
insl
jbe
bound
push
xor
clc
imull
dec
mov
fsts
dec
notb
and
xchg
jbe
and
and
pop
repnz
and
mov
xorb
pop
daa
xchg
jnp
ds
shll
repz
in
pop
push
push
dec
shl
std
popa
or
scas
mov
push
pusha
lea
adc
es
push
inc
cmp
mov
aas
xorl
push
add
dec
mov
popa
pop
xchg
arpl
out
add
into
insb
out
push
pop
popa
sbb
aad
vandps
out
and
rcr
jb
cld
icebp
and
clc
cmp
imul
cmpl
xor
adc
movsb
xchg
cmp
cmp
pop
insb
test
shlb
inc
xchg
negl
cmc
mov
ja
addb
cld
mov
ret
in
lea
sub
lcallw
cmpsb
xchg
push
cmc
aad
dec
pop
nop
sbb
dec
out
push
inc
repz
mov
push
sbb
out
or
mov
test
dec
xchg
repnz
ss
sub
stos
icebp
insb
add
and
jo
inc
mov
aad
fsubrs
leave
shlb
scas
fwait
int
and
or
and
mov
fistl
neg
sub
aaa
ficoml
out
mov
pop
les
ja
arpl
pop
xor
mov
clc
cmpsl
out
pop
test
jle
repz
fadds
mov
and
out
mov
addr16
dec
dec
or
loopne
stos
push
mov
ds
out
cmpl
or
pop
sub
sbb
rcrb
imul
inc
xor
dec
xchg
mov
cld
jge
jecxz
sub
mov
arpl
sbb
test
add
dec
outsb
push
out
mov
int3
adc
fcmovb
aad
jne
pop
cmp
pop
cmp
shll
out
sub
dec
lahf
cltd
push
movb
dec
fmul
add
outsb
imul
cltd
xchg
sub
jnp
or
or
push
fnsave
cltd
inc
insl
test
xor
jmp
bnd
push
pusha
ret
pusha
jg
or
jne
pop
pusha
mov
jle
cmp
in
lcall
sbbb
sub
fs
orl
in
outsb
mov
inc
movsb
nop
and
cmp
jae
and
xor
cmp
mov
and
sub
push
xor
jno
rcr
repnz
out
lods
sbb
cmpsb
out
add
js
pop
push
xchg
mov
pop
ja
push
movsb
mov
pop
add
dec
push
mov
addr16
loop
repz
cmc
out
fs
into
in
dec
mov
sbb
or
add
leave
clc
and
xchg
repnz
sbb
pop
test
jbe
sub
pop
push
push
sahf
mov
cmp
inc
mov
addr16
js
cmc
lods
shrb
imulb
cmp
add
mov
inc
ret
mov
mov
push
or
adc
fistps
xor
add
jo
cmp
push
jno
dec
jb
sub
mov
xorl
iret
mov
int
jb
std
ss
xchg
mov
inc
and
cmp
sti
and
fcomp
int
push
push
loop
int
mov
or
nop
test
sarl
sbb
mov
push
ffree
pop
shlb
sub
dec
mov
adc
and
fsubr
xor
lret
stos
in
sbb
push
xchg
mov
rorb
scas
bound
inc
jl
in
jo
repnz
mov
or
xchg
cmp
pop
dec
cli
fnstenv
aam
jp,pn
ficompl
movsl
pusha
lgs
fwait
cmpsb
aaa
cmp
add
adc
mov
repz
ja
inc
movsl
jmp
hlt
xchg
outsl
mov
ror
xlat
out
fs
lret
cmp
dec
pop
fstps
sahf
aaa
pop
ljmp
xor
pop
data16
test
xchg
pop
add
out
inc
push
stos
inc
aam
jno
ljmp
push
repz
loop
out
mov
fcoml
imul
xor
mov
inc
dec
pop
mov
add
les
jge
popf
movsl
jbe
pusha
cld
push
in
dec
loop
les
es
imul
sbb
sahf
pop
cmp
sbb
leave
inc
dec
cli
and
les
xor
pop
ss
adcl
in
xchg
in
in
jno
pop
xchg
aad
hlt
cmp
cmpsl
popa
aam
adcb
and
sarl
sbb
or
lods
ds
xchg
dec
mov
loope
jae
int
cmpb
mov
jb
sbb
push
mov
test
inc
adc
adc
lods
xchg
jecxz
ss
out
mov
aas
popa
sub
adc
push
xorb
mov
imul
and
scas
rol
repnz
or
and
xor
lcall
pop
mov
pop
cmp
loopne
les
out
adc
push
test
int
jns
mov
xchg
outsl
push
add
pusha
scas
fists
push
divb
inc
outsl
je
sub
add
or
and
test
out
movsl
loopne
xchg
insl
inc
mov
dec
or
stos
dec
push
mov
mov
xor
push
mov
jbe
mov
stc
jl
xchg
dec
dec
sub
pusha
mov
daa
data16
lods
or
ja
scas
mov
cmp
fmuls
and
or
adc
test
sub
es
dec
push
mov
insb
jmp
popa
ljmp
into
xlat
lret
pop
push
jg
pop
jge
cli
mov
lahf
inc
cmpsb
xchg
jg
pop
jecxz
xor
xor
pusha
ret
cmp
jno
stos
ret
es
int3
adc
add
adc
inc
loopne
lahf
movsl
pop
loopne
xor
ret
cmc
daa
adc
cs
jecxz
mov
scas
inc
mov
and
int
pop
pop
shll
xorb
pop
dec
test
das
mov
push
add
clc
out
in
fdivrp
sbb
scas
xchg
cltd
and
test
loope
jecxz
cli
sub
je
xchg
push
sub
mov
xchg
lahf
jle
cld
insb
cmpsl
fstp
mov
repnz
insb
and
jmp
popf
fsin
into
mov
xchg
adc
cmpsb
std
xor
inc
jb
push
inc
test
push
push
dec
dec
add
cmp
mov
dec
push
aaa
xchg
mov
mov
rorl
lds
cmp
or
jp
add
ret
jb
sub
std
mov
out
xchg
pop
sub
out
xor
adc
mov
sbb
decl
pushf
xchg
xchg
or
int
mov
loope
insl
xchg
inc
repz
xchg
mov
mov
popa
loopne
sub
push
mov
xor
addl
jnp
je
xchg
pop
cmpsb
addl
inc
mov
mov
insb
scas
and
mov
cs
jge
adc
or
sar
imul
in
add
dec
ret
scas
mov
xlat
jl
sti
call
fstsw
ss
bound
out
hlt
btc
and
movsl
cmp
pushf
in
rclb
sub
lea
movsb
fxch
stos
and
icebp
inc
mov
sbb
mov
adc
leave
stos
pop
inc
gs
arpl
pusha
in
push
mov
call
dec
cmpsb
cmp
push
dec
or
add
mov
insl
addb
out
add
dec
ds
or
in
lods
sbb
rorl
pushf
push
cmc
xchg
push
outsb
call
cmpsb
aaa
add
jns
adc
loope
cmpb
imul
xor
push
mov
cltd
inc
aam
pop
test
ljmp
pushf
sub
rcrl
pushf
mov
xor
xchg
int
or
dec
lock
sbb
filds
jns
inc
leave
push
push
stos
inc
dec
aam
mov
mov
push
shlb
dec
ret
push
nop
mov
push
aad
cmp
jmp
mov
cmp
xchg
jae
nop
push
mov
hlt
cmp
cltd
push
mov
jnp
mov
movsb
and
popf
test
mov
sub
mov
cmpsb
sub
push
push
xchg
jmp
outsb
inc
push
mov
inc
fnstenv
sarl
xchg
jae
and
mov
fwait
sti
push
insb
push
ss
std
lret
dec
lret
stos
into
cmpsb
lock
test
mov
dec
xchg
cmpsl
dec
popf
das
dec
mov
cmp
push
jg
movsl
das
jge
insb
dec
push
icebp
lahf
add
xchg
ret
jno
aas
into
out
adc
sub
not
adc
push
fxch
xor
fsub
or
sbb
sbb
pop
fdiv
xchg
mov
xor
and
cmp
iret
mov
fdivrs
xchg
cmc
jp
lock
iret
xor
xlat
sub
les
ds
inc
mov
xor
imul
jl
aad
nop
mov
xchg
jp
imul
xchg
lcall
and
or
xor
inc
mov
stos
pop
cmp
data16
jnp
out
into
add
mulb
push
or
jle
cmp
push
dec
stc
pop
movsl
inc
jne
jmp
jae
inc
les
xor
out
insl
inc
jp
fbstp
xchg
xchg
mov
jno
lods
mov
push
jge
ret
adc
jg
xor
leave
fwait
sbb
lods
mov
and
or
icebp
jg
mov
popf
sub
fisubrs
in
shll
mov
push
xchg
cwtl
mov
addl
lret
xchg
dec
dec
shrb
jle
cmp
fstl
sti
push
pushf
aas
nop
in
daa
xor
jecxz
pop
dec
add
add
jne
mov
or
les
pop
je
cmp
dec
push
xchg
pop
mov
jmp
pushf
mov
ss
cmpsb
push
sbb
pop
pop
sahf
jbe
divb
xchg
cmp
pop
cmp
adc
pop
test
cmpsl
sbb
mov
sahf
hlt
sub
or
jecxz
mov
cltd
int3
adc
jle
or
push
mov
adc
jmp
mov
pusha
fisubrs
inc
and
jbe
lods
push
and
fwait
arpl
or
clc
sbbl
sbb
into
push
imulb
xor
xacquire
sub
out
stos
fimuls
icebp
ljmp
testl
repnz
sub
adc
jnp
adc
mov
pop
cltd
sub
repz
pushf
pop
roll
bound
cmp
jecxz
or
sar
dec
clc
dec
adc
mov
cli
jno
test
mov
nop
cmpsl
mov
shrb
push
ret
pop
or
push
inc
add
insl
dec
or
jmp
push
xchg
call
cwtl
vmaskmovdqu
fincstp
test
inc
in
or
es
mov
add
mov
pusha
cwtl
fnstcw
pop
push
das
or
fldl
sub
sub
rorb
movsb
mov
sahf
cwtl
sbb
mov
push
stos
shll
cmpl
insl
jnp
sbb
jmp
dec
or
pop
jmp
sub
rorb
sbb
in
mov
mov
int
test
test
stos
mov
sbb
xor
pop
pop
and
lds
xrelease
test
addr16
fwait
test
jp
aaa
cmpsl
les
xchg
hlt
cmpsl
into
xlat
inc
cmp
mov
xchg
jecxz
pop
mov
shlb
cltd
pushf
add
arpl
add
aam
or
adc
call
jge
js
aaa
idiv
imul
sbbb
xor
xor
fstpl
lret
popa
push
adc
jl,pn
mov
pop
jb
loopne
mov
xchg
lret
dec
mov
sub
daa
testl
fisubl
sub
jb
pop
mov
gs
repz
mov
cli
hlt
fstpt
dec
lds
mov
fnstsw
cmc
int
cmpsl
repz
fbld
rcr
add
cwtl
push
push
lss
push
ja
pop
and
sub
lea
push
aad
pushf
aad
adc
sub
fildl
add
pop
lret
dec
xlat
fidivs
movsb
fst
mov
lahf
lods
fisttpl
sbb
push
push
push
adc
or
sub
pushf
icebp
mov
out
dec
mov
in
dec
and
xor
adc
and
inc
jmp
push
les
lahf
enter
roll
call
out
fstps
cmp
push
add
outsl
rcrb
lds
sbb
add
bound
mov
inc
clc
ljmp
mov
addb
scas
sub
push
pop
ds
cltd
or
push
iret
lcall
es
lcall
cmp
ret
adc
xchg
ja
js
cmp
sbb
push
call
loope
xchg
push
sbb
arpl
jmp
inc
jns
fcom
add
push
cltd
in
jae
mov
imul
in
jnp
mov
dec
push
push
loopne
mov
shll
rclb
push
mov
pop
pop
lret
outsb
mov
mov
icebp
scas
lds
cmp
flds
xor
sbb
insl
mov
push
test
sbb
cmpb
mov
inc
test
mov
int
aas
xlat
mov
insb
pop
lret
cmpsb
add
ret
aad
sub
pop
fists
not
dec
mov
ljmp
pusha
sbb
fnstcw
inc
and
or
pop
cs
mov
push
mov
pop
test
pop
mov
cmp
loop
cmp
out
xchg
aad
in
int3
mov
cmp
dec
stos
and
mov
fs
pop
pushf
dec
pusha
mov
mov
gs
pop
ljmp
push
fdivrl
sbb
pop
insb
sub
sbb
sahf
call
ljmp
mov
test
ds
pop
xor
or
iret
insb
sub
dec
adc
jne
and
aam
push
mov
pop
pop
inc
xor
push
sbb
rcrl
sub
add
pop
movsl
adc
jbe
notl
das
enter
cmpsl
dec
sarl
cld
sub
add
inc
adc
jecxz
pop
inc
lods
jg
es
dec
scas
repnz
gs
xchg
repnz
adc
mov
push
dec
xor
shl
cltd
cld
sbb
in
mov
fstpt
cltd
pushf
push
and
cmp
cmp
fisubl
cmp
mov
loop
sarl
stos
cli
aad
fdivp
fdivs
aad
sar
movsl
push
add
stos
cmp
or
cmp
rcrl
jl
push
nop
inc
cltd
inc
jnp
sbb
cmp
sahf
comiss
inc
xchg
mov
lock
ret
cltd
push
dec
sbb
sti
or
aas
pop
movsl
add
mov
adc
xchg
stos
lods
jge
cwtl
jmp
aam
jns
fildll
or
shl
pop
push
ffreep
xchg
adc
aas
sub
mov
or
nop
cwtl
cltd
movsb
fucomp
hlt
xor
jg
push
inc
inc
pop
movsl
or
pop
dec
jne
pop
cmp
adc
mov
int
xchg
insl
adc
xor
inc
push
into
xchg
mov
jbe
cmp
mov
out
iret
and
inc
push
loope
mov
movsb
pop
push
cmp
mov
add
jg
jbe
dec
rcll
inc
out
and
sar
mov
add
dec
or
push
cmpxchg
jnp
cmp
cmp
mov
inc
mov
or
out
imul
ja
pop
push
clc
xor
fwait
push
dec
cmp
jecxz
cmp
xchg
in
imul
adc
dec
and
popf
cmc
imul
fidivrs
ss
insb
pop
push
push
es
mov
adc
mov
movsl
cmp
and
xor
jg
push
lods
and
mov
jmp
mov
bound
lahf
addr16
mov
mov
aas
fwait
add
push
inc
lcall
sbb
std
dec
pop
pusha
aaa
mov
pop
cmc
icebp
mov
dec
cmc
ret
and
pushf
jae
add
ja
nop
test
mov
adc
test
pushf
cmpsl
mov
jns
xchg
popf
mov
jg
test
stc
jbe
stos
inc
stos
pop
int
xchg
loopne
sarl
pop
push
out
sbb
sub
inc
mov
sbb
imul
je
xor
adc
push
sub
pop
cs
daa
mov
sbb
adc
pop
or
xchg
repz
sbb
mov
ret
cmpsb
dec
sahf
mov
push
fcoms
dec
clc
dec
nop
dec
test
pop
fcomi
xor
push
and
cmp
add
cmpsb
clc
add
add
in
dec
sbb
loop
or
dec
ja
mov
mov
xchg
int3
stc
sub
std
add
loop
jp
pop
adc
dec
dec
aas
jne
mov
aam
or
orl
jmp
cli
test
stc
jno
jnp
scas
pushf
repnz
xor
mov
stc
jg
gs
lea
lahf
sub
mov
in
xchg
es
repz
subb
lea
mov
gs
mov
das
adc
push
and
xchg
adc
xchg
push
inc
xchg
icebp
fwait
enter
in
sahf
adc
repnz
std
rorl
push
imul
adc
add
or
jnp
push
mov
aas
push
loopne
mov
jo
sub
mov
lea
frstor
push
lret
stc
mov
cld
jne
cld
pop
xor
nop
sbb
stos
aas
pop
sysenter
scas
cld
enter
mov
push
and
xchg
loope
fmuls
rcrl
or
popf
cmp
and
out
xchg
mov
push
test
clc
imul
cmp
repnz
test
lcall
cmp
xor
lret
dec
jg
jb
xchg
pop
add
in
iret
xor
push
mov
mov
mov
ds
loopne
js
aam
out
cmp
jmp
jne
lret
imul
cli
repz
call
adc
in
jb
imul
jb
push
sub
mov
and
fdivrl
mov
pop
xor
push
xchg
mov
jecxz
std
jg
imul
pop
je
out
fnsave
repz
sbb
ret
jo
sbb
jge
inc
sbb
and
add
push
mov
outsl
dec
lea
movsb
lea
mov
dec
pop
dec
das
fcoms
popa
mov
andb
popf
mov
sbb
icebp
sub
imul
mov
popa
sub
mov
out
je
aad
dec
cli
test
and
mov
stos
xchg
dec
aad
add
cmp
out
fdivp
pop
test
aaa
addr16
icebp
dec
mov
in
fadd
sub
cmp
xchg
xlat
out
out
pop
mov
into
int
inc
xchg
fildl
inc
sbb
xor
popa
flds
scas
scas
mov
mov
aas
ss
test
or
mov
sbb
cmp
fcmovnu
mov
or
adc
jns
fists
std
or
in
inc
test
leave
pop
ret
pusha
fistpll
ds
mov
pop
jp
cltd
dec
and
lods
sahf
mov
negb
sbb
mov
inc
mov
stos
loopne
in
and
ljmp
push
mov
lods
pushw
push
mov
push
adc
mov
sub
push
repnz
add
adcl
nop
shl
int
cli
popf
out
loop
jp
xchg
sti
fidivrl
push
push
popa
punpcklwd
add
je
mov
add
sub
mov
jbe
xor
pop
ss
mov
repnz
push
fwait
pop
lsl
jge
push
sbb
scas
lret
arpl
push
add
cs
orb
leave
push
aam
vpsllq
cwtl
fwait
bound
outsl
divl
push
mov
insl
dec
arpl
jmp
int
dec
insb
dec
xchg
inc
xchg
adc
push
arpl
lahf
ljmp
push
mov
jnp
lahf
lahf
xor
xor
lahf
jmp
jg
cld
arpl
xor
cmp
cli
test
xchg
jmp
repnz
andl
pop
loopne
pushl
loope
iret
dec
sub
testb
jl
inc
mov
mov
adc
lods
test
cmc
jne
ja
std
jle
sbb
fwait
inc
sbb
rorl
les
lock
mov
and
inc
cmp
or
cmpsl
push
cltd
or
push
sbb
pop
lcall
jno
aam
imul
sbb
fidivrl
movaps
adcl
into
ljmp
jae
inc
xchg
sub
xchg
mov
rcl
out
jne
mov
aad
scas
ds
popa
add
addl
sbb
insb
ret
cld
jle
xlat
fadd
incb
mov
jns
mov
int
jge
add
loopne
dec
iret
add
outsb
loope
sbb
movsl
in
cmp
ret
addb
adc
out
jne
hlt
adc
inc
mov
push
andl
push
sub
test
push
mull
lret
dec
fldenv
jbe
cmc
jne
jl
popf
loopne
jbe
ficomps
cmp
into
addr16
outsl
mov
inc
push
daa
jl
sub
mov
js
mov
int
das
shll
jbe
pop
add
je
insb
pushf
jno
out
addl
cltd
or
cmpsl
fld
sub
jb
xorb
dec
xchg
test
fmuls
rorl
pushf
xchg
ss
scas
imul
daa
loop
addl
sub
scas
or
and
aad
sbb
addr16
aaa
out
mov
and
xchg
lret
mov
ja
xchg
insl
sahf
jbe
notb
dec
inc
in
and
xchg
and
into
or
imul
adc
js
in
push
push
ljmp
test
mov
sarl
or
mov
pop
xchg
in
sbb
jge
pop
push
fidivs
movsl
and
push
jo
jae
mov
adc
xchg
loopne
mov
mov
cld
test
jns
das
push
iret
shlb
cmp
and
and
xor
js
rcll
add
in
inc
in
mov
fcompl
add
test
mov
sbbl
xchg
or
sub
jae
js
and
subl
mov
sub
stos
xor
bound
jae
ss
jecxz
jmp
shl
stos
stos
mov
dec
pop
dec
push
mov
or
lcall
bound
imul
shr
mov
int3
imul
push
lock
je
adc
mov
xor
mov
aaa
xchg
mov
cmp
test
xlat
jno
lahf
bound
add
jae
outsb
leave
fisttpll
xchg
adc
or
jns
xlat
cmp
xchg
in
mov
mov
je
jno
xchg
lret
cld
pop
mov
push
push
pop
loope
sbb
push
sbb
cltd
adc
lea
adc
bound
stc
cmp
adc
fsubrl
out
das
or
dec
sbb
sub
scas
pop
and
sub
or
enter
fildll
xor
test
dec
insb
mov
jo
cltd
mov
xor
add
into
lahf
stc
jns
andl
in
popf
push
cli
jecxz
cwtl
cld
push
stos
loopne
add
sbb
dec
rcrl
in
cmp
cmp
xchg
jmp
jg
xchg
pop
pop
push
pop
sub
jnp
outsl
and
cltd
xlat
push
inc
scas
hlt
xorb
inc
fstpt
cmp
push
mov
and
sbb
je
nop
sbb
adc
aas
outsl
jp
in
fisubrl
in
inc
sbb
testl
bswap
xchg
sub
and
stc
push
jne
sarl
repz
rolb
pushf
out
data16
dec
ja
push
lret
movsb
or
xlat
ljmp
push
cmpsl
cli
icebp
int
mov
jno
pop
fcoms
fwait
pop
pop
inc
out
mov
mov
or
in
jne
test
ret
xor
push
jo
sub
rcll
sar
fyl2x
dec
push
inc
adc
inc
push
or
add
jno
adc
xchg
mov
sub
mov
adc
pop
jne
pop
push
or
mov
insl
iret
xor
push
push
movsb
push
pusha
stos
je
cmp
xchg
and
aaa
dec
mov
pop
idiv
ja
loopne
inc
fnclex
jb
clc
mov
adc
mov
mov
in
shl
lea
gs
xor
outsl
jp
jmp
xor
fsubrl
jbe
ret
dec
pop
test
out
cmpsb
cmp
push
cmpsl
xor
pop
scas
rcr
lods
and
in
push
rorl
imul
aad
mov
jo
cmp
fdivl
repz
push
xor
push
jo
xchg
jno
ja
pop
xchg
mov
push
lea
cmc
xor
push
lods
xor
and
inc
outsl
add
shlb
rcr
mov
and
test
or
jle,pt
pusha
int
fs
jnp
je
leave
xchg
mov
cmp
addr16
fcomi
lds
mov
jne
out
icebp
int
shrb
adc
inc
rclb
test
scas
mov
loopne
mov
xor
je
mov
dec
xor
enter
xchg
lret
aaa
int
cltd
xchg
sbb
and
xchg
ret
addr16
lock
jae
fistpll
lds
sub
mov
stos
xchg
dec
pop
mov
lock
and
jne
mov
adc
fiadds
aad
imull
lods
sub
mov
xlat
stos
push
pusha
xchg
testb
push
push
cmpsb
lds
dec
or
incb
inc
mov
stos
adc
and
sti
push
inc
sbb
nop
movsb
roll
cmp
push
addr16
call
push
ret
scas
dec
jecxz
xor
ret
daa
sahf
push
lcall
sub
xor
and
add
push
mov
jns
cmc
xor
jne
or
stos
stos
cmp
hlt
mov
les
mov
hlt
and
dec
imul
mov
test
pop
mov
shrl
cwtl
mov
ret
cmp
ret
push
dec
aad
mov
pop
pop
mov
jmp
xchg
push
xor
sbb
rcrl
mov
jo
loope
sbb
mov
icebp
hlt
mov
loopne
inc
les
xchg
das
ds
lret
mov
mov
or
das
sbb
int3
rolb
insl
sub
clc
jne
rolb
scas
jge
fildll
xor
aad
in
aas
mov
mov
outsl
mov
repnz
pop
pop
xchg
and
and
mov
aas
inc
lock
imul
fcoml
mov
lret
out
loope
lods
std
mov
push
insl
insb
lcall
xlat
mov
iret
push
mov
out
scas
inc
mov
xor
sbb
pusha
fsubs
stos
xchg
ljmp
cmp
or
ret
jno
sub
cmpsl
cmp
adcl
leave
sub
je
scas
stos
inc
jle
les
aam
lods
rcll
inc
test
adc
jge
test
ljmp
movsb
or
xchg
dec
fnstenv
push
lcall
pop
push
dec
xor
je
mov
lcall
mov
imul
aad
outsb
rclb
mov
data16
adc
idiv
inc
and
mov
pop
add
jecxz
out
ds
out
outsb
add
daa
popf
aas
inc
movsb
jbe
cltd
mov
and
pop
shrb
sahf
or
pop
or
pusha
es
jp
dec
cwtl
push
fs
cmp
andb
out
mov
jb
sbb
mov
icebp
movsb
dec
cltd
xor
sarb
lock
xor
mov
xchg
jle
lock
or
out
sbb
xchg
xchg
sbb
fucomp
jg
push
data16
lock
pop
fcmovne
decb
rorb
fnstsw
aaa
pop
adc
cli
fldl
or
repz
callw
cld
or
adc
pop
repnz
mov
popf
out
add
pop
dec
mov
cli
push
ss
xchg
push
cmp
mov
les
loopne
leave
or
imul
or
mov
sub
xor
cmp
adc
push
pusha
hlt
jl
sbb
js
mov
mov
push
jb
xor
lret
cltd
test
adc
repz
adc
cmp
push
dec
lds
cli
adc
leave
adc
pop
repnz
add
jae
sub
add
imulb
ret
cli
int
add
cltd
cmpsl
push
loopne
test
push
movb
pop
add
vorpd
pop
outsl
int3
dec
mov
mov
imul
sarb
or
mov
mov
dec
jg
jbe
inc
stos
cmp
mov
jp
sarb
addr16
sahf
int
idiv
push
mov
xor
adc
das
sbb
add
pop
add
dec
add
cmp
icebp
jg
call
sti
je
xor
ds
push
subl
dec
stos
ret
xchg
add
jae
insl
xlat
xchg
or
int3
fmull
test
enter
xchg
lds
inc
lret
pop
je
dec
xchg
push
cltd
ret
outsb
sbb
or
mov
fnstcw
in
aaa
adc
add
adc
cmp
adc
lret
insl
out
data16
or
adc
das
addb
add
adc
ss
mov
int3
js
imul
pushf
adc
test
cs
add
jmp
inc
div
sbb
fwait
out
into
pusha
data16
dec
mov
jne
or
loopne
ret
jmp
mov
mov
popa
bnd
jecxz
jg
xor
popf
cmp
outsb
pusha
mov
xor
mov
clc
adc
or
dec
das
fsub
push
mov
pop
insl
insl
cld
int
xchg
and
mov
xchg
xchg
xchg
xor
pushf
lahf
dec
xchg
add
test
imul
popa
int
aaa
cmc
or
cmpsl
into
pop
arpl
stos
decl
cltd
cmp
add
pop
xchg
test
adc
mov
xor
jo
pusha
imul
sub
idivb
jecxz
adc
xlat
insl
cmp
bswap
mov
gs
icebp
test
scas
mov
mov
jmp
fidivrl
mov
and
cmp
jb
jno
inc
pop
jmp
mov
outsb
fdiv
pop
cmpsb
cwtl
aad
xchg
dec
add
fidivrs
mov
int
jae
sub
ds
addr16
mov
scas
mov
outsb
in
xchg
fistpll
mov
jg
mov
push
add
sbb
lcall
jge
or
in
nop
rcll
sub
in
aad
sub
aaa
loope
push
jle
xor
or
adc
and
sbb
test
test
pop
aas
test
shr
mov
sub
sbbb
loopne
mov
test
ja
imul
fadd
add
sub
sbb
mov
mov
add
repz
or
dec
xlat
jle
sbb
inc
repnz
mov
jg
aas
pop
jmp
sub
sbb
ss
adc
jb
jl
cmpsb
dec
xchg
mov
andb
clc
push
iret
inc
mov
and
movl
addr16
dec
and
jg
jnp
enter
lret
xchg
xchg
mov
dec
mov
xor
mov
insl
rorl
cmpl
mov
push
mov
inc
or
xchg
inc
daa
sbb
or
mov
sub
ja
sub
pushf
adc
pop
cli
mov
adcl
adc
pop
in
icebp
pop
xor
mov
dec
aaa
jo
out
imulb
sub
pop
sti
push
ds
xor
pop
jo
or
jnp
mov
sbb
bound
cltd
add
data16
ret
jp
sbb
into
dec
xchg
add
cltd
icebp
shlb
mov
inc
cmp
lret
sub
loopne
inc
mov
jg
rcrl
sbb
out
in
scas
ljmp
cs
mov
and
push
cmp
fs
jmp
jno,pt
mov
inc
addl
mov
push
repz
pop
mov
call
stc
cmpsb
and
imul
rclb
out
jle
pop
mov
movsb
test
jne
fists
sub
popa
imul
xchg
cmp
pop
lock
cwtl
xchg
pop
push
add
ds
rcl
or
testl
sbbb
mov
jae
xor
or
or
jecxz
cwtl
inc
cmp
xor
in
or
in
aaa
xor
aad
xor
lock
loop
test
sbb
pop
int
pop
xchg
decb
int3
cwtl
jno
mov
cltd
add
in
cltd
test
push
enter
lret
pop
adc
jae
fdivl
cmp
push
loope
push
es
adcl
aaa
mov
negb
dec
lret
pop
in
push
push
jmp
loop
jmp
cltd
inc
lret
aam
add
mov
adc
testl
adc
movsb
js
arpl
inc
xor
sub
mov
iret
sbb
sub
out
call
clc
jns
aam
mov
stos
push
lock
sbb
aas
or
or
aam
mov
push
and
adc
pop
or
push
movsb
loope
fsub
fwait
aad
fwait
or
inc
lea
sub
mov
hlt
shll
pop
inc
clc
pop
push
lods
mov
movb
push
daa
iret
enter
jns
xor
clc
pop
and
xchg
fs
sub
and
jne
test
inc
fwait
push
stos
andl
jl
call
daa
enter
sti
sbb
test
rol
scas
fs
cmpsb
sbb
andl
mov
mov
test
mov
push
add
push
pusha
mov
jmp
lret
push
popf
das
adc
and
adc
sub
sbb
out
push
aas
push
shr
dec
sahf
sbb
scas
jl
push
jmp
mov
pop
stos
cmc
mov
fs
loope
pushf
pop
adc
push
cwtl
pushf
in
outsl
xor
out
add
or
fidivrs
jp
test
cmp
cmc
jns
lds
and
out
jbe
mov
ljmp
fisubl
out
es
nop
in
push
mov
or
sub
ja
inc
xor
xchg
xor
xchg
jno
pop
clc
mov
and
cltd
jne
lods
or
add
scas
lret
enter
rcrl
fsubrl
gs
outsl
lcall
pop
push
xor
cltd
push
inc
in
stc
mull
jg
mov
pop
aad
mov
ss
ja
adc
ficomps
icebp
jl
clc
and
jno
and
adc
cltd
pop
sahf
cmpsb
add
les
sbb
pop
in
jb
adc
loopne
mov
rolb
xchg
stos
cmc
mov
pop
and
movl
cmpb
sub
dec
out
lret
or
cmpsb
mov
pop
xor
rcrb
cmp
push
jge
lahf
fildl
cmc
repz
jmp
mov
xchg
cmp
ret
pusha
shr
push
test
mov
mov
pop
nop
mov
repnz
xlat
pop
jo
sub
call
adc
cmp
shl
push
adc
out
sbb
mov
sub
vcvttsd2si
xor
rcl
xchg
stos
mov
sub
in
push
pop
mov
pop
daa
sbb
testb
mov
mov
lods
dec
and
mov
mov
xor
loope
mov
dec
lods
cmp
clc
insb
cmc
pop
lret
mov
sbb
loop
jbe
addl
push
jecxz
mov
push
in
inc
xchg
loop
pop
shll
cmpsb
lock
inc
push
ljmp
int3
lock
mov
mov
fidivs
add
popa
fcmovb
movsb
ret
hlt
call
xchg
adc
xchg
shr
mov
or
sub
sub
test
cmp
push
test
mov
jg
daa
mov
xchg
cmp
mov
sahf
leave
sub
add
decb
sar
and
add
gs
lods
fstpt
and
aad
or
hlt
pop
scas
mov
imul
aas
js
lret
jge
cs
xrelease
sahf
fcmovbe
into
leave
mov
mov
lock
int
ljmp
je
pop
sub
mov
mov
das
push
sub
jge
push
mov
and
inc
xchg
ret
and
cmpsb
mov
shl
jb
mov
xchg
sbb
das
js
cmp
call
cli
inc
sahf
pop
lret
jge
xchg
jae
mov
push
push
xor
repnz
xchg
jbe
rorb
push
mov
into
sbb
roll
je
jno
cmpsb
jecxz
xchg
orb
movsb
xchg
mov
addr16
mov
cmp
mov
iret
jmp
sbb
mov
add
dec
test
adc
das
imul
lods
add
jmp
jmp
gs
mov
pop
addb
mov
cmp
jns
stos
inc
dec
adc
cmpsb
and
push
ficoml
mov
mov
jp
fnstcw
sahf
nop
stc
cld
int3
xlat
faddl
fwait
arpl
sarl
sub
mov
or
adc
mov
repz
data16
inc
out
test
adc
push
shl
aam
jnp
jns
imul
aaa
cmpb
sub
adcl
inc
sbbl
lret
mov
mov
out
inc
fstpl
divl
xchg
fs
out
mov
sub
sub
popa
loope
fiadds
test
gs
pushf
sub
enter
cmpsl
mov
fcomps
ret
cmp
int3
mov
add
dec
arpl
ljmp
cmp
dec
jl
push
push
dec
lea
xor
mov
insb
popa
mov
pand
cmp
sub
pop
icebp
sbb
pop
cmp
shr
rorl
and
mov
test
mov
mov
xor
sbb
shrl
movsb
test
cmp
mov
pop
xchg
mov
mov
jae
and
xor
ret
dec
paddusb
lahf
and
fwait
mov
jnp
js
mov
mov
mov
ret
mov
sub
push
xor
sti
xor
mov
or
outsl
cmp
decb
ficoml
pop
gs
ss
jnp
push
adc
test
pop
xor
rorb
lcall
inc
les
sbb
xchg
jno
jmp
sbb
mov
cmpb
scas
negb
rol
cli
jge
push
pop
insb
aaa
lret
sub
repz
out
mov
mov
inc
addl
cltd
dec
test
inc
jmp
and
cmp
and
or
pop
jle
loop
cmpsb
stc
jno
test
xor
stos
adc
rorb
out
lret
mov
jbe
sahf
fs
or
fidivs
pop
out
out
in
cmpsb
fidivrs
adc
push
adc
add
dec
mov
jb
and
jne
out
add
andb
pop
push
xorb
xchg
pop
dec
pusha
or
cwtl
or
cltd
ljmp
sub
mov
and
mov
lods
sbb
mov
loop
movsl
stc
jnp
add
icebp
arpl
fcoml
and
xchg
jg
stos
jno
loop
sub
sbb
xchg
sbb
jle,pn
fcmovbe
inc
shll
cltd
dec
inc
xor
pop
fistps
ja
jp
inc
xor
lcall
inc
imul
rcrl
cmp
cmp
sub
loopne
adc
dec
pop
ljmp
ds
mul
pop
icebp
jbe
fidivl
mov
dec
xchg
ja
stos
lock
adc
xchg
dec
cmp
mov
in
fisubs
aad
jbe
test
icebp
movaps
xchg
sbb
in
dec
inc
out
sbb
clc
dec
xor
push
fstps
popf
xchg
lods
repz
pop
xor
stos
and
aas
negl
sub
sbb
and
jl
les
in
cmp
imul
cmp
insb
mulb
pop
sub
jo
ficoml
jae
iret
out
and
xor
jns
pop
push
aam
add
dec
les
pop
mov
insb
inc
insl
sbb
sbb
push
lock
sbb
mov
mov
jmp
movsb
fcmovbe
dec
dec
cmpsl
or
je
popf
enter
xor
insl
aaa
jmp
clc
mov
mov
in
jns
out
cmp
sub
push
sahf
adc
lods
or
sti
into
add
cmp
sub
cmc
cltd
cmp
add
aam
inc
cmc
cld
sbb
popf
xchg
subb
cmp
int
ret
push
xchg
in
xchg
jo
cmp
into
ja
push
sub
and
push
sub
imul
imull
cli
jecxz
cmpsl
xorl
pop
cmpsl
xchg
jnp
int
popa
inc
out
push
xor
js
dec
and
push
test
cmp
pop
push
popf
pop
cwtl
xor
frstor
push
lea
sbb
insl
repnz
cmp
test
mov
idivl
jle
fildl
and
int3
adc
pop
int
in
in
fsubl
cmpsl
insl
outsl
arpl
scas
popf
cwtl
rolb
in
xor
arpl
fbstp
adc
mov
fldl2e
ds
adc
popf
pop
ficoms
das
sub
int3
jge
mov
out
mov
adc
jo
popf
mov
mov
xchg
inc
xlat
sub
jmp
xor
sbb
int3
inc
inc
cli
mov
pop
sti
popf
pop
dec
mov
mov
or
mov
mov
imul
lods
out
mov
push
jno
ljmp
lock
jmp
or
push
adc
adc
nop
pop
dec
mov
cltd
fcompl
mov
jno
icebp
push
sub
push
loop
add
mov
movsb
dec
fstpt
push
add
xor
cmc
test
cmp
ljmp
mov
and
push
sti
mov
jl
jmp
sbb
or
mov
jno
ret
mov
and
adc
lods
fcmovb
push
jl
push
jb
xor
aaa
sbbl
add
das
pop
mov
lods
hlt
in
pop
popf
mov
mov
aas
repnz
jl
divl
cmpsl
pusha
rol
hlt
push
hlt
cmc
xchg
enter
pop
xor
inc
xchg
mov
pop
shld
cmp
dec
cs
scas
mov
mov
mov
fisttpl
adc
subw
and
cmpsl
popf
decl
inc
loop
outsl
daa
lea
sbb
cwtl
loop
imul
rorl
cmp
test
push
and
fisubs
mov
mov
add
push
mov
xor
or
push
cmp
sub
rclb
shrb
mov
mov
sub
dec
dec
sub
add
loope
aaa
ja
cmpsb
mov
pop
or
cmpsb
mov
mov
pop
stos
popa
outsl
ret
lods
pop
push
hlt
mov
imul
ds
jae
mov
lret
sbb
test
ljmp
rcll
xchg
push
outsb
mov
xchg
sahf
pop
and
mov
cmp
xchg
sbb
mov
aas
jbe
out
jbe
outsl
lahf
pusha
movsl
cmp
into
or
mov
mov
cld
sbb
cli
pop
aad
adc
sub
push
stos
fstpt
lret
mov
jo
dec
jo
sub
sub
fwait
mov
fcomip
add
jbe
or
cmpsb
push
aam
and
shll
pop
sub
stos
push
aam
popf
jge
inc
or
jmp
hlt
jae
jno
orl
sbb
mov
mov
aam
pop
jne
pop
sub
fwait
shrl
sbb
xor
xchg
mov
cmp
xchg
xchg
mov
std
sbb
sub
cmp
sahf
lcall
cmc
cmp
inc
dec
jecxz
ja
and
mov
cli
es
stos
jecxz
lods
int3
mov
push
js
icebp
cwtl
adc
jbe
cmp
nop
lods
clc
imul
xchg
jg
jbe
add
cwtl
jne
shlb
or
loopne
mov
mov
pop
jl
pop
test
nop
add
push
mov
push
mov
lods
imul
push
fcomip
aam
bound
pop
and
or
iret
cwtl
sub
popf
cmp
das
add
stc
fwait
jg
sahf
adc
les
xchg
ljmp
shrl
mov
inc
cmpsb
xor
and
lods
aaa
add
int3
es
and
mov
int3
push
mov
movsb
jae
rcrb
sub
popa
mov
mov
adc
push
stos
sub
inc
xor
sbb
push
int3
add
popf
pusha
popf
cld
push
pop
adc
cmpsb
push
fistpll
test
inc
lods
out
and
and
xchg
or
addb
stos
xor
outsb
xorb
pushf
mov
jb
lret
loopne
sub
inc
fwait
nop
jae
pop
pushf
inc
xchg
rorl
je
dec
cmpsb
in
scas
dec
adc
and
in
pop
cltd
xor
or
lret
lods
push
or
je
rcrl
or
adc
xor
jae
cmp
jnp
push
inc
insb
xchg
push
sti
xor
lahf
std
clc
xchg
add
sarb
add
and
outsb
add
inc
aam
sahf
mov
jbe
repnz
xchg
jp
outsl
inc
jo
xchg
in
idivl
sbb
lret
jno
inc
cmc
push
sbb
mov
cmp
xchg
popf
add
dec
mov
sti
addl
fwait
and
stc
daa
aas
scas
ljmp
lods
cmp
xchg
or
cli
out
jo
sub
sbb
outsl
dec
aas
lret
sub
adc
inc
in
gs
insb
add
je
xlat
in
mov
jno
insl
test
pop
sub
lahf
rorb
dec
rclb
mov
xlat
mov
or
push
icebp
in
jmp
sub
fstpt
add
cmp
stos
mov
mov
jecxz
adc
jno
popa
or
cwtl
outsb
pop
out
int3
xchg
and
xchg
lods
jge
daa
cs
lods
rorb
mov
or
dec
popa
mov
ljmp
fs
adc
cwtl
inc
loop
popa
jae
or
adc
mov
mov
popa
mov
xorb
xchg
sbb
movsb
stc
aad
or
inc
lods
shlb
lods
push
push
rclb
jmp
jmp
sbb
in
notl
or
test
shlb
out
pop
inc
js
notb
es
fwait
mov
mov
les
sub
popa
mov
sub
stos
imul
cltd
les
loope
cmpsl
fsubrs
xchg
movsl
ret
mov
xor
lods
scas
sub
mov
nop
mov
push
and
mov
jmp
iret
nop
push
enter
cmp
inc
divps
jmp
push
sti
pushf
xchg
leave
xorb
lea
lret
insl
or
push
xor
cmp
mov
or
enter
sbb
out
jmp
fiaddl
cmp
xor
pop
in
gs
fwait
adc
lods
insl
jae
shll
movsl
cs
adc
outsl
mov
mov
add
xor
or
add
inc
pushf
push
sub
mov
filds
clc
pop
inc
outsb
mov
icebp
inc
mov
push
neg
add
sbbl
es
in
push
pop
jmp
test
cmp
lods
dec
push
aad
test
fcoml
cmp
sarl
aad
and
inc
xor
mov
push
adc
or
rcrb
adc
out
jecxz
xor
mov
dec
xchg
aaa
jl
mov
fldt
add
mov
jno
sbb
insl
int3
pop
test
add
sub
jne
xchg
push
xor
adc
push
int
add
inc
lcall
enter
adcl
insb
mov
mov
imul
aam
aad
rcr
cmp
sbb
sbb
mov
pop
add
and
test
add
imul
xchg
repnz
dec
adc
pop
mov
bound
xor
xchg
jnp
fisubrs
mov
cmp
jle
adc
lock
cmp
imul
mov
mov
cmp
imul
xchg
mov
mov
inc
es
push
out
adc
inc
out
mov
add
adc
movsl
pop
out
daa
sarb
sbb
fcomip
pushf
xchg
es
push
into
push
popf
fldl
sbb
jb
sub
sbbl
cltd
adc
aad
lods
movsb
aaa
fsub
push
cmpsb
scas
adc
data16
imul
pop
rorl
push
mov
push
out
arpl
xor
sub
ficoml
add
test
and
bound
xchg
int3
mov
popl
int
add
iret
stos
int
jl
fidivl
mov
sbb
gs
cld
dec
mov
mov
pop
adc
repz
aas
out
pop
xchg
iret
mov
sbb
xor
in
mov
mov
push
scas
lcall
cmpsl
xor
mov
xchg
int
inc
imul
test
push
in
cwtl
jl
sar
movsb
jmp
vpaddb
int
cmpl
adc
mov
pushf
ljmp
js
daa
or
out
inc
popf
lea
dec
adc
shrb
cwtl
pop
or
hlt
mov
xor
test
mov
dec
xor
sub
sti
jne
push
ret
int3
rclb
inc
mov
adc
push
imul
jb
cltd
cli
dec
jecxz
adc
cmp
dec
sbb
or
pop
stos
pop
inc
push
pop
push
pop
pusha
fistpll
pop
and
add
in
sbb
xchg
cld
inc
xchg
jecxz
cmp
mov
out
outsl
push
mov
rclb
loope
stos
cli
or
add
cmc
inc
lds
mov
and
sub
imull
sbb
add
inc
add
xchg
mov
mov
xor
mov
push
test
xor
xchg
imul
mov
jl
cmp
fnsave
mov
mov
inc
push
inc
lahf
cwtl
dec
sub
scas
loop
ret
lret
pop
inc
mulb
cli
or
outsb
shr
xor
add
push
push
cmp
int
popa
inc
test
je
lds
push
jecxz
jnp
mov
mov
shrb
movsb
and
lock
mov
mov
pop
jb
jo
stc
xor
insl
push
dec
stc
out
es
pop
outsl
mov
insl
mov
sbb
out
mov
lds
dec
cmp
fisubrl
inc
sahf
divl
sbb
jmp
mov
sbb
psubd
nop
add
sbb
outsb
mov
cltd
push
dec
cmp
imulb
xlat
iret
ficoms
insl
adc
orl
add
enter
roll
ds
repnz
ja
loopne
sub
test
pop
aam
lret
xor
call
push
dec
shlb
jmp
cmp
mov
adc
jae
shrb
test
cmp
cmpb
fs
loop
push
sub
jp
xchg
mov
xorb
or
mov
pop
xor
movsl
sarl
pop
inc
int3
lcall
rclb
push
jl
pop
jbe
jge
outsl
addr16
xor
sbb
int
in
xlat
sar
test
jge
pop
addr16
cmp
mov
cmpsl
scas
cmpsl
and
lea
mov
adc
sti
aaa
push
and
mov
cs
mov
test
xchg
push
test
into
ja
loop
lea
sbb
shll
clc
xchg
or
cmpsb
add
aad
int3
add
xorl
loopne
lret
cmovge
xchg
adc
cmp
mov
jno
sub
xor
push
push
sbb
mov
and
divl
popf
xchg
cmp
pop
mull
push
sub
lds
pop
jbe
rorb
jp
and
sbb
dec
inc
in
or
xor
ljmp
pop
test
sti
mov
add
adc
or
push
adc
ds
push
sbbb
filds
cmp
jae
es
mov
out
das
test
or
je
cmp
sbb
inc
mov
push
gs
or
mov
mov
cmpl
xchg
or
and
pop
mov
xor
ret
push
daa
std
ret
fbld
jns
xor
out
lods
lahf
push
xor
sbb
jae
push
fldenv
into
divb
xor
and
mov
push
or
or
out
insb
jg
shll
loope
lock
das
std
inc
pushf
push
lret
movsl
jmp
mov
sbb
inc
sub
jge
adc
cli
push
mov
clc
shll
sbb
fwait
jbe
or
call
adc
inc
and
js
je
and
sub
xchg
loop
cwtl
xor
xchg
mov
mov
adcb
or
jo
imul
lcall
adc
cmpsl
jecxz
cmp
sub
xor
int3
inc
out
mul
loop
mov
adc
inc
je
push
push
je
js
push
xchg
jge
gs
push
cmp
mov
xlat
fistpll
lret
mov
cmpsl
cwtl
mov
cld
fdivp
scas
jge
scas
mov
pusha
inc
icebp
sahf
add
in
mov
pop
test
ljmp
add
dec
xchg
fisubrs
ljmp
add
fs
mov
test
les
dec
xchg
ret
xchg
out
push
xchg
lret
pop
mov
leave
test
lods
jle
xor
jp
xor
sub
inc
psubusw
lret
jns
adc
les
pushf
cltd
mov
orl
jmp
aaa
pop
xchg
xchg
push
and
inc
and
enter
in
xadd
jae
jp
in
inc
out
test
mov
out
inc
push
stos
xchg
push
add
imul
pusha
in
lock
mov
inc
push
mov
rcll
ss
xlat
dec
xlat
fisubl
jg
cmp
hlt
cmp
cmp
sbb
pushf
loop
fdecstp
cli
gs
mov
fildll
stos
in
lods
and
fldl
mov
xor
adc
lods
and
mov
jo
bound
test
xchg
xor
ja
dec
orl
inc
pop
in
xor
movsl
jo
adc
xor
call
cmc
pop
popf
test
sbb
mov
jne
sub
xchg
mov
in
mov
jg
test
shld
cwtl
cmpsb
cltd
inc
xchg
pop
enter
xchg
ds
je
cmp
xchg
mov
mov
stos
rcl
inc
fadds
rcl
add
insb
xor
xchg
sbb
xchg
inc
sbb
aas
mov
inc
cltd
iret
inc
cmp
roll
mov
add
jp
xor
sqrtps
in
stos
fwait
xchg
push
pusha
cs
jl
jp
fbld
cmpsb
aam
mov
add
stc
dec
cmp
in
mov
dec
sahf
out
adc
inc
jns
inc
je
popf
lods
stos
addr16
cmp
testb
dec
and
decl
pop
in
cmp
push
inc
pop
sbb
push
sbb
pop
inc
add
dec
xchg
xor
push
loopne
and
mov
mov
push
mov
xchg
pop
ret
cmp
lock
xchg
icebp
movntq
adc
push
and
in
daa
adc
sbb
adcl
pop
and
xchg
jecxz
popf
push
mov
ret
loop
pop
and
and
inc
call
push
cmc
rorl
xor
and
loop
jno
es
outsb
jns
push
test
cli
dec
sahf
pushf
and
loopne
sub
lea
and
imul
imul
cmpsb
inc
movsb
add
and
xchg
xor
sbb
in
popa
arpl
jge
mov
lahf
push
lret
push
and
mov
cmp
inc
sub
and
out
dec
xor
popa
xlat
push
xor
lret
daa
xchg
add
push
ret
mov
mov
cmp
xchg
mov
hlt
ds
and
hlt
fldenv
iret
cmpsb
ja
push
sub
aad
addr16
insb
adc
cmp
int
mov
jae
inc
shl
mov
ds
lcall
repnz
inc
push
or
xlat
imul
jmp
jbe
inc
or
daa
sbb
test
dec
adc
push
adc
adc
xchg
and
xchg
cld
pop
cmpsb
xchg
push
addr16
pop
mov
or
jge
bound
pop
js
sbb
loop
xorb
sahf
inc
ja
ss
movsb
xchg
movsb
int
push
rcll
cmp
jb
out
popa
and
int
jne
push
xor
aas
imul
mov
mov
sbb
pusha
popa
dec
adc
lods
and
add
lds
addr16
push
pop
in
jbe
ss
hlt
push
out
mov
xor
jno
xchg
adc
mov
shrb
das
add
jo
jl
fiadds
fstps
loope
insb
js
mov
dec
jmp
lahf
gs
lret
cmpsl
das
xor
pusha
dec
add
push
js
fldenv
push
mov
adc
inc
push
or
mov
popa
xchg
cli
not
into
test
mov
mov
jns
stos
cmp
add
mov
inc
lahf
test
and
loop
lret
xchg
jmp
add
fidivs
imul
fistpl
mov
or
mov
dec
dec
stc
int3
mov
lcall
enter
fwait
sbb
mov
jb
aaa
into
scas
out
push
or
adc
xlat
pop
nop
sbb
mov
sbb
aad
loope
inc
inc
cwtl
lret
jae
js
add
mov
fcmovnb
sbbl
pop
add
mov
repz
and
pop
or
push
mov
or
mov
pop
push
shll
jmp
out
je
add
lret
push
test
out
or
inc
in
cmp
lea
out
mov
frstor
shrl
aas
leave
lahf
push
sbb
mov
sbb
xor
outsb
adc
bound
rclb
cmp
shlb
dec
stos
jnp
or
sahf
sahf
lret
mov
xor
daa
lds
jne
jle
fwait
sbb
jno
sub
add
imull
int3
ljmp
push
inc
into
xor
icebp
andl
mov
rorb
mov
lcall
adc
decb
jne
jl
call
xchg
pushf
pop
repz
or
dec
jns
loopne
fcom
fidivs
xchg
jg
mov
rclb
mov
and
mov
mov
pop
fcompl
ret
imul
mov
loope
cmp
out
jae
add
jge
push
mov
lea
and
mov
mov
add
push
xchg
inc
divl
data16
les
call
pop
xor
or
add
mov
cmp
es
add
mov
sub
pop
sbb
sarb
inc
lods
push
fistps
out
loop
call
jge
out
adc
add
mov
jmp
aad
pop
dec
lret
imul
and
in
mov
sbbl
pop
pop
add
dec
movsb
outsb
and
dec
cltd
hlt
mov
mov
roll
iret
test
xor
mov
xor
mov
pop
xchg
into
dec
add
cmpsl
fisubrl
dec
jge
xor
xor
stc
dec
cs
ficomps
int3
add
cwtl
scas
pop
add
movsl
call
repnz
repz
xor
pop
rcl
or
fidivs
dec
mov
adc
jl
ds
les
mov
and
mov
arpl
je
add
sbb
mov
imul
cli
in
bound
jo
xchg
insl
lea
mov
fcoml
pop
adc
test
shrl
pop
cmpsl
jb
loopne
aam
pop
pop
int
shll
mov
out
cwtl
scas
sbb
sbb
pop
cltd
mov
pop
test
movb
loopne
pop
inc
lds
jnp
xchg
scas
push
es
int
mov
jp
jns
lahf
lret
add
mov
ret
add
mov
lods
mov
rolb
fwait
call
add
push
jbe
out
jge
add
les
je
xor
xorb
jb
cltd
xchg
in
insl
sbb
fwait
pop
fldl
scas
and
or
sub
jg
and
xchg
inc
shr
sbb
or
pop
inc
movl
movsl
aas
push
xchg
insl
test
pop
repnz
out
aad
sarl
mov
rcrl
inc
leave
in
int3
sti
push
lock
dec
test
imul
rcrb
rorb
dec
mov
cmc
in
cmp
mov
lcall
stos
fistps
sub
mov
test
mov
flds
lods
and
sti
and
xor
int3
lea
add
fisttpl
xchg
loope
push
sub
xchg
and
das
pop
jbe
inc
push
sbb
push
mov
in
sub
mov
out
es
and
sub
into
sub
repnz
or
jle
xor
pop
xor
data16
or
test
mov
dec
arpl
push
cmp
or
decl
pop
cmp
clc
jp
arpl
mov
sub
dec
popf
dec
mov
js
xchg
mov
inc
lock
xchg
xchg
xchg
sbb
enter
popf
mov
adc
cs
push
int3
sarl
loopne
andb
rolb
ss
loopne
sub
jmp
jmp
mov
sub
ss
inc
outsb
and
push
clc
push
orb
ficompl
mov
jne
punpcklbw
jne
sbb
out
sub
mov
xor
push
inc
jae
jns
add
stos
std
imul
xor
shrb
loope
cmp
mov
adc
ret
xchg
int
xor
cltd
push
inc
and
lea
jmp
cmp
dec
add
insl
jge
js
and
aam
inc
test
icebp
xchg
shll
mov
jns
notb
sbb
xchg
lds
orb
jg
sub
or
popf
enter
inc
and
dec
test
dec
mov
and
loop
and
pop
out
in
xchg
sbbb
xchg
out
add
mov
das
mov
pop
and
rolb
adc
pop
daa
call
rol
sub
jle
or
es
add
out
xchg
mov
mov
or
outsb
jmp
lds
movsl
mov
enter
sbb
sti
jb
call
mov
ret
pushf
aad
aam
ret
sbb
pop
cmp
sbb
out
aaa
aaa
cs
mov
push
jbe
mov
js
loopne
mov
lods
adc
mov
pop
mov
sub
cmp
or
sub
loopne
test
dec
arpl
iret
cmpsl
add
xchg
xchg
in
sbbb
sub
and
gs
inc
mov
inc
xchg
lahf
test
and
and
jnp
imul
jns
pop
and
lock
sti
jle
xchg
outsl
mov
rorb
insl
dec
cltd
iret
fiaddl
cmpsl
jge
imul
mov
mov
pop
ret
jge
cmp
sahf
shlb
push
lret
adc
ret
add
or
bnd
pop
std
lds
rcrl
adc
aad
push
jbe
sub
sub
mov
or
sbb
sub
jbe
outsb
adc
cmpsl
fimull
imul
mov
mul
mov
jg
adc
mov
sbb
xchg
mov
pop
enter
orl
imul
into
sub
push
jl
int3
pop
mov
xchg
cltd
mov
push
xchg
sbb
jl
dec
sub
xor
and
jno
cmp
sub
outsl
sbb
aas
jmp
movsb
xchg
inc
xor
inc
pushf
jle
mov
rcrl
pop
dec
push
loope
std
nop
mov
fchs
into
xor
fwait
mov
jnp
mov
xor
jp
subb
sbb
xchg
dec
pop
js
inc
sbb
jae
inc
outsl
pop
sub
flds
fcompl
lock
add
mov
dec
add
loope
push
xlat
sbb
jmp
cmp
push
cltd
cmp
or
sbb
inc
inc
xchg
or
lock
push
inc
push
xor
decb
cwtl
lret
xorl
push
or
out
shrb
clc
arpl
add
pop
add
lock
out
shrl
in
xchg
lret
mov
les
sbb
push
jl
dec
fldenv
mov
jmp
enter
sub
dec
push
xchg
mov
lods
rcrb
add
xor
in
lods
xchg
sub
rorb
inc
fsubr
test
aaa
arpl
add
dec
rcll
test
cli
in
pop
sbb
sti
daa
jp
daa
cwtl
test
pop
pop
lea
lcall
adc
dec
sbb
shlb
aas
popf
out
aaa
or
nop
popf
shlb
pop
ficomps
clc
xlat
jns
push
out
push
cld
mov
fwait
jae
jg
divl
movsl
ret
rcrl
mov
sub
stos
jnp
cmp
or
movsb
outsb
out
push
out
add
test
leave
lea
loopne
mov
gs
mov
push
and
jne
movsl
or
leave
ljmp
cmc
enter
lods
sbb
jge
testl
clc
pop
aam
popa
movsl
out
adc
sub
xchg
mov
fsubl
xor
enter
call
leave
addl
mov
or
or
out
popf
addl
imul
inc
dec
cmpsl
mov
ljmp
push
xlat
mov
pop
adc
mov
and
dec
pop
or
push
sbb
cld
mov
xchg
rol
pop
dec
xlat
in
inc
scas
push
imul
pop
and
adc
popa
imul
jnp
and
dec
and
pop
push
dec
pop
cmpb
xchg
test
rorl
add
cmp
push
and
stos
push
call
in
cmc
and
pushf
out
leave
cmp
imul
fimuls
mov
popf
pop
xor
popf
jg
dec
icebp
xor
lret
xor
pop
in
fidivl
movsb
dec
sbb
pop
xchg
cld
adc
sti
dec
test
cltd
js
sbb
sub
pop
inc
cmp
popf
popa
fisubrs
mov
addl
jo
jb
ja
out
push
sbb
loop
jae
mov
iret
and
out
pop
inc
rolb
ret
mov
ljmp
and
std
xchg
jae
adc
and
push
les
xor
push
sbb
pop
sub
push
cmp
rcrb
push
test
mov
mov
shrb
lahf
rdpmc
jmp
enter
cmp
popa
in
ficomps
xor
in
add
in
in
call
mov
sbb
jecxz
inc
ret
arpl
sbb
add
imul
dec
xor
mov
mov
fwait
pop
hlt
test
jle
ret
pop
adc
sbb
pop
repnz
mov
mov
push
adc
xor
jg
hlt
mov
sahf
cli
mov
fs
adc
cltd
je
jle
fcompp
add
scas
mov
cmp
or
lahf
ja
mov
dec
pop
sbb
push
mov
js
jge
add
pop
test
imul
sahf
adc
and
jo
popf
jmpw
push
dec
lds
and
jg
dec
jno
outsl
es
xchg
mov
dec
aas
inc
sbb
pop
mov
nop
xor
pop
std
mov
test
or
cmp
sbb
xchg
push
shll
dec
mov
and
mov
aas
imul
fcomi
jb
outsb
dec
sbb
bnd
pushf
mov
lcall
pop
scas
xor
push
dec
adc
mov
jmp
jo
jnp
dec
in
xchg
fcomp
js
pop
mov
imul
imul
lret
cwtl
jbe
mov
out
inc
jnp
testl
jg,pn
cltd
adc
cmp
mov
daa
mov
xchg
sahf
test
inc
dec
xchg
leave
sbb
xchg
cwtl
in
or
movsb
jle
clc
ret
xchg
ja
leave
inc
push
adc
loope
pop
arpl
popf
cmp
push
loopne
xchg
xchg
pop
adc
pop
lcall
test
pop
cmp
sub
push
push
pop
or
in
jbe
add
repnz
mov
dec
mull
mov
or
push
xlat
and
xlat
and
ljmp
xlat
dec
xorl
inc
push
popl
mov
and
out
sbb
decb
pop
xchg
lods
cmp
cmp
xchg
cld
jp
ret
and
in
arpl
scas
out
mov
out
cmp
jmp
pop
and
dec
cmpl
bound
mov
jae
push
call
rcr
push
xor
add
mov
mov
mov
sbb
jp
out
add
inc
aaa
mov
cmp
xchg
pop
mov
outsb
imul
insb
dec
add
push
push
push
popf
push
imul
loope
fwait
and
popf
fstl
ret
jnp
ja
cmp
push
fstp
xor
cs
repz
test
dec
fnstenv
sbb
cli
sbb
lock
push
fucomip
aas
xlat
fistpl
mov
out
pop
inc
jge
xchg
andb
dec
dec
fdiv
inc
repz
jge
push
or
xor
xor
mov
pusha
adc
add
jae
sub
pop
popf
call
lods
add
fs
in
inc
into
dec
in
inc
stc
mov
mov
in
push
and
ja
pop
test
stos
pop
xlat
inc
jo
mov
pop
sub
cmpsb
insl
dec
aas
test
adc
test
or
sbb
stos
and
mov
xor
outsl
mov
test
jno
xchg
xchg
les
leave
xor
pop
lcall
movb
push
or
mov
pusha
movsb
mov
std
incb
outsb
fsubrp
sbb
lea
cltd
fadds
jmp
and
jmp
clc
lods
leave
lods
push
and
pop
in
jns
xor
test
cwtl
xor
mov
out
test
cltd
and
add
dec
cmp
and
sahf
mov
cwtl
lcall
enter
add
or
adc
lock
addr16
mov
xchg
sub
jnp
jae
aaa
fiadds
mov
pop
sub
cmpsb
xor
push
mov
not
mov
adc
test
mov
inc
or
fistps
pop
xchg
xchg
arpl
sti
hlt
xchg
push
cmpsb
sti
xchg
push
fldenv
fwait
enter
sbb
push
dec
cli
and
mov
insl
insl
sahf
ja
jo
aas
in
dec
add
sub
mov
mov
bound
jg
dec
inc
push
sahf
call
das
sub
mov
clc
dec
stos
dec
aas
pop
cmp
and
push
mov
cmp
lea
jmp
jp
cmc
stc
scas
cmp
mov
mov
pop
in
pop
and
sbb
add
and
int3
int3
lock
pop
and
rcll
cltd
jno
paddsb
mov
dec
add
push
movsb
loopne
pop
jae
insl
fnstcw
xchg
sub
lea
and
xchg
cli
arpl
push
cmp
rcll
arpl
test
cmp
xchg
imul
push
push
sbbl
push
pushf
fnsave
jae
sub
mov
pusha
inc
nop
sub
movsl
loop
xor
nop
mov
cmc
out
mov
pop
push
subb
or
and
cltd
cs
loopne
jnp
aam
test
and
or
or
fists
xchg
enter
sbb
testl
lds
das
push
jb
rolb
or
push
es
outsl
or
add
dec
add
insl
movsb
aaa
mov
adc
mul
sub
mov
mov
enter
in
inc
out
into
add
xchg
fsubp
paddw
dec
push
int3
lret
fdivs
data16
fstps
mov
data16
aad
xchg
push
jne
cmp
push
jae
fidivrs
push
xchg
dec
push
movsb
cld
call
mov
fistpl
fisubrl
inc
mov
test
je
jmp
pop
stc
cltd
inc
or
add
shr
fs
mov
xor
mov
pop
mov
fcmovnbe
cs
into
sbb
adc
jns
push
dec
push
add
xchg
int
movsl
or
cmc
in
and
test
pop
jb
mov
inc
fcoms
xor
sbb
test
icebp
cmpsl
fnstcw
test
int3
add
mov
push
xchg
push
mov
or
xor
xchg
mov
push
gs
inc
push
pop
sbb
xchg
jo
testl
fidivrl
enter
cmp
lds
sub
pop
jo
or
les
bound
pop
push
and
insl
push
adc
in
imul
loop
repnz
inc
xchg
dec
xchg
cmpsb
pop
ljmp
lret
lahf
ja
bound
sub
in
and
sub
in
add
jl
fdivrp
add
stos
mov
push
inc
flds
icebp
out
jecxz
mov
jmp
std
ja,pt
cmc
dec
cmp
inc
rcr
cmp
scas
jle
lcall
stos
das
cwtl
addr16
mov
lahf
es
cmp
aaa
fwait
or
push
sbb
ret
xchg
fcompl
out
in
mov
ss
push
scas
push
das
mov
sahf
lcall
inc
xchg
out
js
and
bound
gs
test
andb
mov
aas
lret
dec
jno
mov
mov
clc
jl
pop
inc
shl
ds
mov
stos
jb
sarl
inc
xchg
shlb
lcall
inc
cmp
pushf
imul
fistpll
mov
int3
jno
sub
pusha
add
mov
jg
push
cmc
sarb
in
cltd
xchg
adc
sbb
inc
out
loopne
insb
testb
je
lock
movsb
xor
dec
sbbl
sbb
imul
rolb
fwait
cmp
and
int
test
rcrl
jl
add
testl
mov
ljmp
call
pop
sar
cwtl
mov
adc
pop
xor
mov
dec
mov
cmp
jo
hlt
jb
jl
les
movsb
loopne
test
inc
popa
stos
int
int3
adc
test
mov
mov
scas
cmp
aad
push
sub
cmp
sub
jp
and
adc
mov
pop
movsb
test
xor
dec
aad
inc
mov
add
pop
int
hlt
out
cli
hlt
cmpsl
cs
mov
std
stos
mov
or
mov
pop
mov
jmp
jo
cmp
test
sbb
mov
scas
push
cwtl
popf
into
mov
pusha
sbb
movsl
inc
mov
and
ret
fstps
adc
cmpsb
insl
les
lret
push
xchg
mov
xchg
cmp
int3
ljmp
es
icebp
repnz
insl
cs
leave
fcmovb
mov
lock
mov
pop
jb
and
stos
pop
sbb
mov
xor
adc
push
sti
popa
mov
push
inc
clc
mov
mov
mov
insb
mov
mov
cmp
xor
mov
in
hlt
lds
and
int
repz
mov
loopne
dec
mov
enter
test
pusha
movsl
dec
cmc
xchg
mov
mov
push
dec
mov
xor
lods
and
mov
push
shrl
mov
loope
push
test
add
rol
lea
jl
dec
push
xor
cmc
int3
push
or
jge
outsb
xchg
imul
out
mov
mov
mov
and
pop
inc
bndstx
dec
jmp
cltd
scas
cli
add
dec
aaa
add
mov
pushl
into
push
dec
in
jo
xchg
pop
in
test
mov
jmp
mov
insl
sub
aas
cmp
outsl
add
mov
push
ds
incb
test
push
or
mov
dec
shl
test
pop
add
mov
inc
iret
xchg
repz
inc
stc
cmp
jae
pop
lods
out
xchg
sub
cmp
cmp
insb
cmp
and
out
mov
scas
clc
add
and
push
push
cli
out
hlt
addr16
ljmp
xchg
fdivrp
push
mov
in
mov
jnp
aas
js
cmp
mov
movsl
cwtl
xchg
cwtl
or
subl
push
movsl
dec
scas
and
shlb
mov
out
add
push
xchg
jb
push
cmc
cmp
dec
push
mul
aaa
and
inc
cmp
ficomps
clc
mov
push
sahf
pop
std
fdivl
mov
ds
add
lret
sbb
dec
leave
cmp
add
push
and
inc
xchg
ret
push
sbb
loopne
popa
adc
iret
or
jbe
xchg
les
push
lret
lcall
popf
mov
ret
imul
in
jbe
aaa
outsb
jb
and
std
addb
add
test
jo
lcall
lahf
push
mov
ret
inc
out
sub
mov
pop
insl
ja
push
add
inc
ja
fwait
mov
jl
dec
mov
aad
scas
mov
jmp
cli
push
out
stc
into
push
mov
add
push
jmp
jl
dec
in
or
mov
mov
clc
fxch
and
jnp
or
and
jae
out
ds
xor
dec
xchg
sub
movsl
push
outsl
xchg
adc
mov
jg
in
loop
hlt
mov
push
iret
dec
xlat
scas
and
pop
push
ret
ljmp
leave
insb
inc
iret
mov
xchg
xchg
pop
loopne
inc
lcall
dec
dec
popf
mov
stos
ret
bnd
jmp
dec
gs
rdpmc
sbb
and
daa
lcall
fstps
push
jnp
jne
lret
fisubrl
sbb
fistpll
clc
mov
enter
mov
sar
cmc
cwtl
movsl
pop
addr16
and
in
jo
sbb
addl
jno
imul
xorb
mov
jmp
xor
pop
jg
xor
jnp
and
mov
call
pop
call
jl
pop
cmp
and
pop
dec
mov
sbbl
sub
push
fadds
jbe
sbb
pushf
mov
add
dec
fistpl
sub
jne
movb
jl
inc
mov
fnsave
mov
lods
movsl
sahf
fmul
jnp
lods
add
pop
xor
mov
lods
mov
mov
jg
add
jl
adc
mov
mov
aas
mov
cmp
dec
sub
mov
xchg
pop
sbb
sub
mov
cld
arpl
cmp
pop
lret
or
dec
push
test
daa
push
lret
outsl
nop
jp
jl
popa
sbb
push
add
jns
dec
rorb
rcrl
in
mov
setg
push
inc
cwtl
xor
push
push
mov
imul
ja
inc
fmul
div
enter
jae
pusha
test
scas
or
inc
cli
and
pop
dec
dec
inc
adc
lret
mov
int
mov
pop
dec
and
cmp
xor
aas
pushf
xlat
add
jle
push
scas
rolb
pop
inc
sti
aaa
cs
popf
pop
nop
ficomps
xchg
pop
or
mov
lea
fistps
push
mov
cmc
mov
push
lds
dec
ftst
subl
mov
in
fistps
push
outsb
in
cli
repnz
xor
mov
test
loop
xor
adc
push
out
dec
popa
sbb
mov
loop
insl
lret
mulb
push
or
ljmp
mov
rcrl
push
xor
xchg
cltd
and
test
inc
pop
mov
jbe
push
das
nop
jecxz
stos
testl
jg
scas
xchg
pop
mov
js
jg
mov
and
mov
xrelease
lods
fsub
push
iret
mov
repnz
push
jb
outsl
int3
mov
dec
sbb
inc
xor
rcll
leave
lods
shlb
cmpsb
push
xchg
dec
pushf
movsl
mov
outsl
pop
inc
popf
xchg
faddp
loope
shlb
dec
lea
mov
jnp
mov
shlb
adc
xor
jp
rolb
and
jo
or
imul
pop
jno
and
xabort
shrb
out
sbb
pop
mov
sbb
test
mov
add
pop
fcompl
and
xchg
xchg
sti
ret
mov
inc
add
cld
cmp
insl
pop
test
cmp
stc
xlat
mov
enter
cwtl
sub
dec
dec
fisttps
popf
or
ret
imul
jecxz
xchg
and
imul
push
sbb
xchg
cltd
rolb
mov
add
lea
push
mov
mov
dec
ds
cmc
out
xchg
or
xor
std
addr16
sub
adc
int3
pushf
pop
push
ret
add
mov
rcll
sbb
pop
int3
inc
push
fcmovnbe
in
xor
mov
mov
mov
pop
stc
outsl
in
mov
loopne
jno
popf
sbb
pop
out
xchg
divb
pop
out
icebp
clc
fndisi(8087
xor
lcall
adc
push
sbb
inc
stos
xchg
push
adc
cmpsb
or
xchg
fwait
out
das
leave
jl
pop
std
arpl
add
loope
ret
xchg
inc
cmp
nop
fstp
ret
pushf
cmp
jne
out
es
lods
sub
mov
decl
leave
outsb
das
lret
or
jge
stc
push
iret
test
fstpl
rolb
call
xor
lock
mov
sbb
out
sbb
add
call
aaa
mov
mov
cmpsl
jae
stc
mov
icebp
je
and
insl
pop
push
jge
int
popa
mov
scas
icebp
inc
es
push
mov
or
inc
stos
icebp
pop
push
dec
lret
sti
repnz
faddl
aad
xor
mov
inc
sarb
bound
lahf
jg
out
or
fstpl
hlt
insb
sbbl
mov
xor
inc
stc
push
lods
mov
xlat
pusha
adc
jmp
mov
xor
add
pop
leave
pop
mov
stc
mov
sbb
jne
ds
jge
mov
sbb
jmp
jg
cmpsb
in
icebp
jb
jge
shll
push
ss
imul
imul
push
or
in
push
lea
inc
pop
test
cmp
add
sahf
adc
lea
xor
dec
js
push
popf
jo
jne
dec
dec
push
cli
cmp
add
mov
cmp
xorl
add
loopne
mov
ss
mov
inc
in
cmc
pop
mov
pop
jl
aam
xor
out
test
daa
aas
pop
jo
shlb
je
sub
or
sahf
xor
pop
pop
and
mov
arpl
data16
iret
ds
push
cmp
insb
inc
dec
jl
jbe
jbe
mov
push
jb
and
mov
test
cmp
sub
push
sahf
inc
sbb
add
sti
jae
movsl
push
adc
xrelease
add
popa
mov
filds
cmp
mov
push
addr16
dec
jo
insl
dec
add
xlat
addr16
cwtl
testl
sub
pushf
and
and
rolb
mov
jnp
movb
dec
sub
lock
jmp
ja
pop
add
pop
jecxz
jno
and
icebp
in
and
cmc
fsubr
xchg
push
lds
shll
add
or
lret
xor
fistpl
push
mov
dec
cmp
cmp
or
push
add
btr
js
jl
pop
cld
push
inc
aam
pop
iret
hlt
pop
dec
repnz
adc
call
not
sbb
sub
mov
mov
and
int3
inc
outsl
iret
xor
jns
jbe
jae
test
push
aam
int3
scas
subl
or
movl
add
add
pop
pop
add
jo
push
inc
jns
subb
sub
pop
dec
rcrb
mov
sbb
rcll
xlat
cmc
pop
in
mov
test
les
dec
mov
lret
dec
mov
dec
sbb
mov
cmc
xlat
push
adc
sub
loopne
push
or
cmp
xchg
lahf
es
xchg
pop
fwait
and
xchg
lahf
cmove
das
aas
mov
cli
outsb
mov
jbe
jp
cmp
jno
add
out
sub
jo
jle
out
mov
mov
notl
or
outsl
dec
ds
sub
outsl
fimull
jmp
mov
sbb
out
popa
jb
lds
sbb
mov
add
cmpsb
xor
mov
pop
sahf
lret
lds
mov
je
lea
fsubl
pop
repz
sub
fcoml
xor
ret
jbe
iret
test
lods
pop
adc
jbe
or
je
imulb
imul
sbb
repnz
inc
aad
mov
sbb
sahf
movsl
bnd
and
sahf
test
sarb
push
movsl
xor
xlat
push
jmp
mov
sbb
cmpsb
mov
bound
mov
hlt
imul
ret
dec
push
cmp
mov
push
iret
loopne
fmulp
dec
into
mov
stc
stc
jl
call
aam
aad
push
mov
addr16
int3
cmp
stos
lds
mov
divb
outsb
push
sbb
push
cmpsl
notl
mov
pushf
popa
jbe
test
rcll
shrl
popf
shlb
xchg
rcrb
inc
sub
cmp
xchg
mov
imul
pop
idivb
xor
ljmp
mov
and
mov
cmpsb
inc
clc
sbb
mull
xor
mov
in
fistps
mov
and
mov
fwait
mov
scas
add
fs
mov
sbb
mov
jnp
mov
sbb
jbe
sub
gs
mov
imul
fstpt
sarb
push
cmpsl
dec
hlt
mov
mov
fildl
mov
jmp
aas
fs
xor
xorb
mov
cmovg
aaa
sub
shr
cmpsb
popa
sbb
ljmp
movsl
imul
xchg
icebp
jo
or
int3
ret
sub
leave
fldl
push
mov
lock
arpl
lods
and
mov
dec
icebp
lret
push
lds
or
adc
loopne
mov
lods
push
xlat
or
ljmp
ret
cli
cwtl
jne
mov
xchg
mov
mov
inc
rorl
jmp
inc
stos
adc
int
jg
push
mov
jl
and
push
push
mov
shlb
push
jo
arpl
cs
xchg
xchg
push
das
mov
dec
and
and
cmp
inc
lahf
clc
push
mov
rcrb
pop
loope
jp
mov
and
mov
loopne
into
addr16
cs
ror
test
repz
stos
adc
data16
dec
mov
lea
push
jmp
sbb
mov
push
inc
xchg
or
lods
js
jmp
out
mov
loope
mov
shrb
pop
pop
lds
cwtl
push
enter
mov
movsb
pop
insl
sahf
push
jne
jecxz
outsl
mov
mov
aad
jno
sti
lock
xchg
es
aad
push
aaa
jne
xor
mov
xchg
sub
mov
in
sbb
gs
fnstenv
clc
repz
pop
add
test
cld
shl
imul
mov
sbb
lea
sbb
push
lret
out
mov
pop
push
mov
popa
int
sub
and
dec
out
and
add
mov
insl
outsl
lea
sub
inc
adc
adc
add
test
shl
jle
hlt
inc
sbb
jle
sub
pop
mov
add
leave
pop
mov
jg
mov
nop
xor
insl
daa
cmpl
int3
clc
xchg
movsb
and
popa
js
ret
dec
add
cmp
pop
jg
cwtl
jae
mov
push
sarl
xchg
fwait
bound
mov
mov
out
iret
hlt
xchg
icebp
xchg
imull
dec
aas
stc
lret
int
jo
ds
outsb
sub
cmpsb
and
dec
add
stc
pop
nop
sti
jmp
sub
mov
xchg
shll
pop
in
out
in
xchg
enter
mov
les
cmp
lret
push
adc
sbb
gs
sbb
lcall
xchg
add
push
stc
fsubs
mov
xor
jmp
sub
and
dec
inc
std
mov
mov
push
fstps
aad
mov
mov
dec
xor
call
ficompl
std
push
xchg
sub
sahf
ficoms
les
outsl
add
cmpl
pop
jl
ret
cmp
jo
scas
lcall
mov
mov
fmulp
jg
add
jge
push
movsl
in
and
cld
pop
test
rorl
lea
sbb
out
jge
inc
jnp
xor
jno
dec
mov
cld
add
xchg
xchg
rcl
mov
xchg
int3
sub
mov
xchg
jno
in
jecxz
fisttps
jge
jmp
das
xorl
fsubrs
xor
mov
andb
ret
out
mov
fwait
insl
adc
mov
sbb
div
orl
adcl
sbb
pop
push
push
xchg
jl
fistpl
loop
insl
cwtl
sub
jb
push
jb
or
insb
or
dec
add
inc
push
loope
insb
rorb
flds
ja
rcr
fmull
or
push
ret
xor
pop
int
sbb
jg
and
arpl
pop
out
mov
push
cmpsb
repnz
cmp
mov
outsl
hlt
cwtl
ja
inc
movsb
lret
enter
jne
bound
sub
add
pop
fstpl
mov
outsb
or
pop
pusha
imul
mov
xchg
cld
push
push
add
das
lahf
pop
pop
cli
out
sbb
outsb
roll
inc
push
clc
insl
and
push
ljmp
enter
lock
push
jnp
cmp
mov
mov
and
inc
loop
dec
ljmp
cmc
data16
test
fbld
pop
add
jns
inc
jb
cmp
jae
push
repz
lret
mov
jae
xchg
dec
scas
subb
pop
repz
xchg
ds
dec
lods
push
add
mov
push
dec
jl
cmp
test
testl
push
inc
sub
cli
push
pop
insl
add
or
aaa
or
int
lret
stc
outsl
xor
aas
dec
iret
test
and
sti
push
xchg
xor
adc
in
add
jne
mov
repz
fisttpll
shr
sub
or
pop
into
mov
push
repz
mov
dec
mov
and
mov
pusha
sbb
adc
lahf
cmp
fisubrs
and
ret
cmc
push
mov
aaa
out
sub
fldenv
jb
imul
out
mov
test
dec
cltd
subb
and
js
mov
int3
mov
add
sbb
sbb
push
scas
mov
cmp
push
sub
mov
push
cli
test
mov
lea
out
xor
mov
xchg
xchg
ja
gs
mov
call
push
sti
pop
out
push
outsb
cmpsl
roll
stos
xchg
fnstcw
xchg
das
notl
stos
scas
mov
pop
mov
int
addb
or
jecxz
test
sar
scas
pop
ljmp
pop
push
in
pop
ds
mov
fwait
push
mov
sahf
mov
mov
mov
mov
ds
call
mov
shlb
aad
movsb
dec
pusha
adc
xchg
mov
fnstenv
add
mov
lock
jno
jl
xor
and
mov
cmp
lods
pop
sub
loopne
out
dec
mov
jno
sbb
stc
dec
aas
xor
mov
fstpl
mov
shlb
jne
sbb
pop
add
es
js
xchg
and
test
or
sahf
in
xchg
jecxz
lods
fisttpl
enter
mov
out
dec
mov
aam
movsl
sahf
xchg
cltd
test
jmp
cmp
inc
leave
pop
xchg
movsl
pop
es
notl
and
shll
addr16
hlt
fnstenv
cmc
adc
loopne
pop
mov
call
testl
push
mov
pop
cli
xchg
les
sub
scas
inc
imul
inc
or
xchg
mov
imul
sarb
jb
lahf
cwtl
test
clc
loope
hlt
cmpb
xor
mov
mov
mov
jecxz
pop
sub
jl
subb
loop
pop
xchg
test
push
xchg
jo
lods
imulb
xlat
push
icebp
lods
pop
idivl
push
sbbb
loope
mov
xor
dec
jecxz
and
jmp
jle
push
push
xchg
jb
cld
shll
adc
or
add
decb
mov
test
daa
add
dec
push
mov
and
cli
insl
pop
ret
add
or
or
cs
popa
aas
pop
push
jne
cltd
sbb
inc
ds
loop
aas
je
shll
xlat
adc
mov
movsl
sbb
cmp
les
xor
jecxz
lahf
and
or
popa
repz
lahf
sbb
cwtl
hlt
sbb
and
xchg
scas
dec
xchg
sbb
dec
lds
lea
jns
loopne
test
xchg
adc
push
xchg
add
iret
xchg
stos
int3
daa
shrl
icebp
adc
xor
fyl2xp1
hlt
or
loopne
lods
cmp
orb
sbbb
sbb
loope
mov
mov
imul
push
add
scas
add
xchg
inc
xchg
mov
out
es
push
pop
and
dec
xchg
insb
stos
movsb
mov
fnstenv
ret
sti
mov
repnz
aaa
push
sbb
pop
push
dec
jns
jp
ds
ljmp
je
adc
std
cli
pop
inc
or
jns
mov
fildl
adc
imull
mov
mov
or
aam
in
mov
or
notb
daa
aad
enter
jne
imul
jae
push
and
sub
jae
aaa
cwtl
and
inc
lahf
nop
es
add
mov
stos
arpl
cmpsb
adc
push
roll
ret
add
leave
je
imul
outsb
stos
and
fistps
jbe
fmuls
sbb
add
aas
mov
add
popf
push
mov
mov
aaa
test
cmp
loope
push
push
sbb
sbb
xor
aaa
inc
mov
idiv
out
pushl
mov
xchg
lea
inc
ret
es
jns
or
dec
cld
xor
aad
into
add
mov
mov
sarb
or
adc
jo
mov
fnstsw
inc
jo
pushf
js
out
rcrl
fcompl
cltd
pop
pop
filds
nop
out
mov
ror
outsb
jae
hlt
aaa
jnp
sti
inc
mov
dec
cmp
aas
testb
fsts
or
jns
jnp
mov
dec
cmpsl
or
add
push
outsb
push
sub
mov
and
fdivrl
sahf
jg
aas
jne
push
mov
or
jnp
jb
ljmp
or
and
test
nop
cmpsb
lods
bound
outsb
or
push
int3
cmc
push
lods
sub
fsubr
enter
cli
stc
leave
cmp
cmp
push
mov
stc
ficoml
jne
jg
fistl
les
daa
xchg
lret
mov
std
lahf
test
and
das
and
push
aas
xchg
popf
add
ret
or
repnz
stos
cmpsb
cs
mov
cmp
out
ret
rclb
mov
ja
cmp
push
lcall
lock
xchg
mov
rcrb
pop
sub
add
cli
sbb
mov
popf
int
adc
or
out
cmp
fsincos
sbb
inc
subb
scas
cltd
out
add
push
mov
outsb
inc
xlat
scas
push
leave
and
inc
aam
or
pop
aas
imull
aaa
test
inc
and
insl
js
cmpsl
mov
and
sbb
arpl
jmp
fsubl
mov
xchg
pop
lcall
or
aaa
push
mov
insl
fcmovnb
fbstp
loopne
adcl
movsl
lds
dec
jmp
insl
jge
in
push
cltd
rorl
shl
in
cmp
and
jp
std
ds
sbb
jbe
ljmp
arpl
icebp
sbb
cmp
mul
mov
cmc
jge
les
inc
ret
adcl
mov
sbbb
pop
push
imul
lret
call
dec
pop
lods
xchg
cmp
jno
mov
test
pusha
pop
fisttpll
cs
jne
and
jns
insl
or
pop
shr
pop
pop
mov
fdivrs
pop
or
insb
and
push
push
add
adc
lret
bound
setl
outsl
ds
ljmp
ljmp
cmp
imul
jg
xchg
adc
mov
sti
pusha
mov
mov
adc
daa
sbb
incl
in
and
mov
sbb
adc
mov
stc
imul
movb
jae
mov
repnz
jnp
pop
in
pop
pop
mov
cmp
xchg
lret
dec
push
mov
cmpsl
nop
pop
sub
arpl
mov
rcll
pusha
pop
js
aad
sahf
mov
xorb
insl
movsb
bound
push
jo
ret
adc
xchg
std
sub
int3
inc
jbe
aad
ret
sub
cmpb
mov
rorl
divl
movsl
jmp
rcrb
add
sub
jb
ret
cmp
inc
das
add
out
sti
xchg
mov
xlat
or
dec
mov
adc
loope
and
shll
outsl
and
push
pushf
mov
or
hlt
sbb
into
push
js
cpuid
sbb
jbe
lds
sub
jecxz
cmpsl
or
iret
cmp
cs
lcall
mov
mov
leave
insl
outsb
mov
fidivs
push
popf
xor
jb
mov
inc
lcall
sbb
jns
popa
test
mov
dec
cmpsb
adcl
dec
sbb
sub
push
dec
adc
lcall
stos
mov
sub
ret
cmpsb
xchg
mov
add
and
mov
mov
jb
xlat
test
fistpl
hlt
mov
fldt
sahf
fwait
test
iret
jge
fimuls
sub
iret
ret
mov
push
leave
adc
cmpl
les
and
inc
and
pop
xchg
mov
or
pop
stos
mov
mov
int
int
loope
hlt
cli
jle
int
data16
lcall
cmp
out
inc
mov
mov
mov
lea
xlat
cmc
cs
shlb
pop
jmp
sarl
pop
movsb
sbb
dec
mov
mov
fnsave
cmp
and
inc
gs
test
in
mov
xlat
add
or
fs
mov
mov
mov
dec
fwait
repz
shrb
sub
inc
pop
scas
sub
imul
pusha
or
cmp
cmp
lods
add
inc
inc
and
pusha
and
mov
lea
fiadds
pop
dec
push
stc
inc
sub
and
subb
cmp
xor
adc
sbb
mov
sahf
or
in
jl
sub
pop
gs
cld
cmp
hlt
lods
nop
push
test
pop
add
ss
cmp
ret
inc
cwtl
out
add
ret
aas
ljmp
nop
mov
add
ss
inc
mov
push
arpl
jae
and
mov
lret
mov
mov
mov
add
popa
mov
push
addr16
xchg
icebp
test
dec
inc
cmp
jg
scas
push
push
clc
jae
fmuls
ret
jle
and
cmp
popa
jge
cmp
sbb
lods
mov
and
push
in
shlb
pop
mull
push
sbb
mov
mov
dec
test
shl
adc
es
and
enter
push
xchg
ja
push
mov
pushf
add
pusha
inc
jmp
dec
pop
mov
mov
xor
and
push
mov
dec
lret
and
mov
adc
adc
inc
sti
test
iret
sbb
negl
test
push
add
lcall
fld
pop
mov
push
cld
mov
mov
stos
and
popf
lds
mov
pop
jmp
mov
xchg
mov
inc
fs
test
xor
push
test
bound
into
mov
mov
data16
test
adc
lcall
push
fwait
cmp
pop
sub
out
xor
ret
iret
aad
js
daa
loope
test
rclb
sti
push
or
fwait
mov
jb
fisubs
fucomip
xchg
mov
sbb
loop
fstp
sbb
inc
scas
xchg
jns
fwait
decb
enter
pop
ljmp
adc
xor
jnp
or
icebp
cwtl
rolb
cli
sub
popa
push
das
ss
movsb
sub
stc
inc
sub
lods
or
cmpsb
in
daa
dec
in
pop
pop
mov
aam
frstor
xchg
jle
sub
shl
daa
cli
push
ret
iret
jne
js
andl
test
out
xorb
mov
mov
popa
jmp
ret
sub
mov
imul
fcoml
addb
dec
stc
sbb
inc
dec
data16
inc
in
fwait
lea
ficompl
dec
adc
mov
fisubs
push
sar
pop
inc
mov
mov
leave
lret
sub
sbb
mov
xchg
and
push
push
aas
fwait
pop
cli
sbb
adc
pop
sub
fcmovnbe
outsb
lock
scas
inc
and
and
dec
or
cmp
fcoms
mov
xchg
mov
jge
pop
aam
int
jecxz
xor
int
mov
jle
scas
loopne
sub
mov
mov
sbb
xlat
mov
push
les
sub
cld
add
and
shlb
mov
ds
mov
sub
mov
xchg
add
loop
adc
test
xchg
or
icebp
mov
jp
push
adc
scas
jl
mov
sbb
mov
add
xor
inc
pop
test
mov
aam
jmp
test
popa
xor
push
ret
aad
jne
mov
popa
push
xchg
scas
sub
jecxz
into
xchg
dec
mov
shrl
pop
sbb
sahf
pusha
pop
ds
fcomp
push
jp
loope
push
mov
ret
popf
insb
jl
fldcw
sub
pop
mov
and
xchg
bound
push
ja
cmp
in
pop
mov
sub
xchg
fisttps
lds
imul
frstor
rcrl
pop
popa
push
mov
ja
icebp
push
cmpsb
sbb
push
int
lcall
mov
stc
xchg
stos
push
xchg
cmp
cld
shll
fs
jbe
cmpsl
xchg
push
test
rol
xor
lahf
xlat
inc
xchg
push
xchg
push
rorl
mov
mov
xchg
mov
sbb
aaa
mov
pop
xor
addr16
xor
stc
movsb
leave
mov
lods
push
sbb
pop
mov
stos
mov
and
out
lahf
in
xor
adc
xlat
out
inc
pmulhw
or
jne
in
or
sub
testl
insl
sarl
push
xchg
mov
ljmp
cmpsb
xchg
sub
pop
cmp
scas
xor
mov
mov
mov
push
or
sub
jo
dec
into
xor
fs
aam
inc
int
clc
lahf
jo
pop
dec
dec
ljmp
xchg
pop
hlt
jne
mov
or
jbe
lret
push
fcmovnbe
loopne
or
xlat
in
dec
aas
jecxz
repz
insl
sub
pop
xchg
mov
mov
inc
jo
dec
jns
add
mov
mov
shl
mov
movups
iret
je
or
pusha
ret
push
inc
cltd
and
cmp
push
dec
inc
lahf
push
pop
mov
rdmsr
nop
das
cmp
mov
aad
jge
std
xchg
cmp
and
sub
dec
outsb
add
out
dec
icebp
repz
scas
mov
ret
sti
mov
mov
cmc
hlt
mov
imul
or
imul
inc
lods
out
rcll
cld
gs
ficoml
add
insl
out
cld
lret
mov
push
cld
aad
mov
push
leave
push
xchg
push
out
or
rcll
in
sub
cli
dec
jmp
lock
popa
inc
xchg
nop
in
push
push
cltd
cltd
xor
out
jmp
sub
ljmp
push
pop
pop
cmpsl
cs
test
push
sarb
nop
sbb
sar
add
and
xchg
aaa
sarl
cltd
push
in
lock
xchg
scas
push
sub
mov
fwait
adc
push
mov
imul
xchg
loope
out
dec
push
jno
int
movsb
adc
dec
shlb
xor
mov
insl
stos
out
out
in
inc
push
push
inc
xchg
dec
sub
sti
cmp
imul
cmc
sub
repnz
mov
dec
inc
movsb
mov
cltd
mov
aas
lods
movsl
inc
mov
cmp
push
jmp
stos
inc
in
sub
cli
loop
pop
test
lret
or
add
in
loopne
mov
pop
ja
push
daa
aam
loop
and
fimuls
repz
cld
cmpl
imul
out
lcall
ds
das
scas
xor
stos
movsl
cmpsb
adc
jb
sbb
dec
pop
ds
out
test
sub
out
xchg
ret
cmp
xchg
aaa
in
sahf
popf
in
sbb
xor
inc
cmp
stos
inc
clc
sub
icebp
sti
movsl
insl
loop
or
or
movsl
mov
dec
adc
mov
xchg
mov
ljmp
and
cmpsl
dec
xchg
sbb
inc
cwtl
mov
dec
fwait
stos
xchg
or
jne
test
ljmp
adc
push
xchg
leave
outsl
pushf
jmp
xchg
ds
adc
xchg
lret
pop
or
cmpsl
push
inc
mov
pop
mov
mov
pop
in
mov
hlt
mov
sbb
jecxz
imulb
jmp
rclb
insl
movsb
lret
and
xor
test
jmp
sub
inc
mov
mov
repz
jecxz
sbb
mov
jae
pusha
leave
cmp
pusha
or
pop
gs
cmp
jno
je
xor
insl
mov
inc
xchg
rcrl
xchg
xchg
and
clc
or
dec
fsts
cs
pop
push
xor
call
frstor
mov
cs
fidivl
in
scas
cmp
sub
nop
sub
mov
fstps
mov
movsl
mov
push
outsb
fnstcw
xchg
mov
bound
pop
sub
lock
or
cmp
or
sub
sbb
dec
mov
ret
cmp
mov
xor
shll
or
aaa
and
jmp
mov
xor
dec
jmp
loopne
mov
cld
xchg
jnp
ja
mov
xchg
rclb
jmp
fstp
stos
out
pop
hlt
rorb
rcll
sbb
ljmp
adc
sbbb
lock
xchg
add
push
or
push
fiadds
mov
das
negb
push
lret
xchg
cld
jecxz
jno
out
push
pushf
sarb
mov
and
push
or
pop
test
lock
fldenv
into
sbb
idivb
in
push
stos
mov
sub
lods
notb
inc
mov
sahf
and
addr16
and
mov
ss
in
jle
xor
vpmaxsw
daa
fdivrs
mov
xor
stc
pop
inc
ljmp
fcmovb
jbe
adc
pop
ja
mov
push
and
xor
inc
jge
iret
push
cs
adc
mov
lods
imulb
iret
cmp
divb
xchg
shr
popa
jne
ret
aas
cli
xchg
push
xchg
ficomps
rcrb
pop
sub
jo
xchg
inc
cmp
jae
fcoml
ljmp
out
adc
cmp
rcll
pop
jle
test
xchg
in
mov
fimuls
aad
outsb
int3
cmp
mov
pop
push
mov
adc
push
outsl
loop
sub
cmp
cli
mov
dec
cmp
add
das
int
dec
ss
lock
pop
xlat
xchg
push
inc
push
cli
inc
sub
inc
jae
dec
mov
add
push
fisttpl
bound
test
jne
cli
cmp
xchg
pop
es
dec
jbe
fdivrl
mov
xor
filds
xchg
in
lea
arpl
rorb
jge
push
or
pop
mov
dec
cld
lods
fdiv
ret
aad
fcmove
shll
mov
lods
out
imul
fnstsw
dec
bound
scas
fwait
cmpb
push
popa
add
xchg
jb
movaps
data16
pop
in
sbb
out
mov
pop
fisubs
data16
inc
xchg
adc
lock
out
mov
leave
jo
inc
mov
dec
int
daa
jl
bound
in
orb
subb
aad
or
adc
pop
test
cltd
add
inc
adc
lods
frstor
cwtl
dec
mov
movsb
outsl
dec
mov
pop
loopne
push
scas
push
shll
sub
adc
in
iret
lret
cmp
rcrl
pusha
mov
nop
pop
add
mov
js
out
pop
push
push
mov
xchg
or
push
mov
imul
mov
mov
push
out
enter
das
inc
sbb
xor
outsb
cmp
imul
push
sahf
xchg
popa
cmp
in
xchg
lds
movsl
lret
aaa
bound
jle
mov
dec
sub
jge
cmp
sbb
enter
fiaddl
hlt
cmc
mov
inc
pop
rcrb
mov
push
ret
dec
and
dec
daa
and
icebp
out
pusha
insl
lret
adc
jne
push
call
dec
popa
sub
addr16
mov
and
sbb
cmp
adc
xlat
jl
lcall
inc
imul
mov
shrb
insb
pop
or
out
or
push
aaa
popf
rcrl
dec
adc
push
arpl
cmp
dec
jns
dec
sbb
jle
rcrb
aaa
fdiv
aaa
inc
xchg
and
imul
cmp
stos
push
aad
outsb
movsb
ds
insl
icebp
fsubrl
cmpsl
dec
dec
mov
push
shl
mov
repnz
xchg
mov
cmp
sbb
test
push
cwtl
dec
and
cmp
jecxz
jmp
xchg
nop
shl
fimull
cli
stos
mov
mov
pop
xor
sahf
sbb
mov
or
xchg
mov
popf
ja
lahf
stos
dec
subb
cli
jmp
push
out
sti
ret
rorb
sub
push
insb
maskmovq
imull
negb
dec
dec
out
jg
ret
jnp
in
stc
mov
lods
sub
jmp
stos
or
enter
mov
dec
cmp
outsl
ja
mov
std
daa
stc
xchg
push
ds
mov
aad
stos
add
mov
daa
lea
mov
mov
mov
out
and
cmp
rcrl
add
mov
add
loop
adc
pop
adc
into
and
dec
mov
insb
es
mov
dec
mov
mov
or
loop
lret
mov
ds
dec
js
lret
jle
cmp
adc
scas
stos
clc
stc
mov
cld
pop
bound
lcall
out
mov
jb
and
pop
adc
call
cmp
test
mov
lret
and
dec
mov
mov
pop
ja
stos
or
pop
cwtl
jmp
dec
pop
cs
sub
ljmp
xor
mov
scas
add
arpl
mov
fadds
sub
ja
aaa
jne
aam
and
jne
sub
loopne
push
pop
aas
xchg
mov
or
xchg
jbe
add
popl
push
loope
xor
mov
dec
and
movsl
sbb
jg
adcb
sbbl
aam
lea
cmpsb
mov
addb
in
sub
sub
and
mov
push
insb
test
xchg
outsb
pop
adc
fwait
pop
and
xor
iret
xor
cmp
push
mov
and
lds
rcrl
cmp
xor
or
icebp
add
std
imul
jb
lret
idivl
out
aad
push
mov
mov
in
cmp
lea
mov
xchg
lcall
in
xor
xchg
je
lea
push
jno
popa
lods
push
jg
push
pop
popa
test
push
insl
mov
enter
mov
xchg
popf
repz
pop
int3
scas
cmc
sbb
add
xchg
lock
sbb
sbb
lds
repnz
insl
xchg
inc
jcxz
sbb
imul
jo
das
imul
inc
mov
xor
cmpsb
std
sub
je
jecxz
in
dec
sbb
add
push
nop
dec
pushf
je
sbb
sahf
ror
sub
pop
inc
in
jns
outsl
sbb
stos
aam
adcl
mov
outsb
mov
jecxz
dec
lods
addr16
or
mov
rol
jns
aad
dec
xor
add
popa
inc
hlt
pop
sub
jecxz
dec
push
sbb
filds
mov
pop
mov
data16
xor
stos
hlt
movsl
adc
ljmp
into
xchg
inc
shrb
cmpsl
in
lahf
push
aaa
and
scas
cmpsl
add
pusha
push
push
sub
jle
jmp
mov
and
push
ds
fs
mov
mov
fisubl
xchg
cltd
loope
xor
and
xlat
add
sub
inc
clc
mov
mov
out
ficomps
jle
sbb
push
fisubs
cmp
mov
mov
icebp
push
mov
call
repnz
push
push
js
shrl
sub
push
cltd
adc
enter
mov
xor
arpl
test
jbe
call
pop
pop
and
into
out
inc
push
sbb
jns
sarl
addr16
jle
shlb
leave
inc
dec
outsl
decb
outsl
jmp
xchg
pop
scas
movsb
test
jnp
xlat
push
and
push
add
insl
pop
in
arpl
sti
mov
ss
inc
repz
shll
mov
add
sahf
xchg
or
cmpl
inc
xor
pop
jp
dec
mov
into
popf
or
add
stos
push
cmpsl
lahf
jmp
mov
test
xor
lcall
out
andb
mov
xchg
cmpsb
cmp
hlt
sbb
or
fnstsw
push
fstl
inc
arpl
xor
push
ret
aam
addr16
ja
mov
shlb
aad
or
lods
ret
hlt
daa
inc
ret
and
stos
ror
add
sahf
out
jae
cmpl
xchg
dec
add
xchg
sub
pop
sub
paddusb
call
nop
imulb
in
dec
sbb
push
cli
arpl
add
cmp
pop
cmp
out
push
adc
jmp
sub
mov
sbb
mov
stos
addr16
inc
xorl
addr16
imull
xor
and
jne
in
sub
ljmp
push
dec
inc
mov
dec
add
mov
int
jp
call
ja
xchg
roll
call
fcom
outsb
push
arpl
jno
int
and
mov
mov
jge
xchg
xor
sti
push
mov
cmp
or
inc
sub
mov
daa
adc
in
cmp
scas
ja
dec
mov
sbb
xor
add
jg
lock
add
cmpsl
inc
jae
fnstsw
out
adc
sbb
test
inc
and
cmp
adc
ss
in
popa
arpl
mov
pop
jge
and
or
sub
inc
cli
aam
push
add
fmull
push
xor
lcall
sbb
mov
lcall
xchg
mov
hlt
cmp
pop
cmovno
xchg
lds
or
jo
cli
mov
in
xor
lods
test
jmp
pop
mov
fwait
jae
xor
push
xchg
call
jge
push
mov
jmp
fwait
xchg
mov
add
xchg
addr16
lahf
jae
pop
addr16
pusha
jp
mov
imul
repnz
aad
pop
in
xlat
lock
enter
jecxz
mov
cmpsl
xchg
shll
stos
std
sbb
and
mov
dec
int
pop
pusha
cltd
push
add
mov
cmp
pop
xor
mov
adc
push
cmp
pop
or
and
lret
cmp
cli
das
pushf
pop
sub
push
jle
or
push
stos
or
cmp
sub
jecxz
jbe
or
mov
into
outsl
push
mov
pop
xor
push
inc
adcb
push
daa
movsb
inc
fsubrp
dec
and
cwtl
pop
cmp
movsl
xorl
mov
xlat
xchg
lods
cmp
or
push
rorl
jmp
xchg
inc
lahf
jmp
out
dec
daa
xlat
lds
pop
push
popf
or
out
insb
daa
test
mov
ljmp
or
stos
push
mov
lods
inc
out
sub
repnz
or
adc
sarw
aas
jmp
push
push
xchg
push
and
adc
stos
insl
in
out
inc
test
pusha
test
xor
push
test
dec
inc
fwait
lret
mov
or
sahf
cmp
ljmp
stc
sub
test
cmp
sbb
lods
and
add
icebp
cmp
sub
push
sti
lcall
mov
xchg
test
in
scas
add
stos
cmp
pusha
adc
dec
out
loopne
es
arpl
mov
in
mov
jae
mov
inc
xchg
push
inc
mov
rcr
jle
lds
mov
pop
pop
popf
mov
out
scas
lods
xor
les
add
cmpsl
shl
cmp
mov
jae
xchg
out
sbb
sub
pop
xor
je
in
aad
aad
jb
mov
add
pop
leave
pusha
xor
lods
jg
jmp
ds
es
add
repz
sub
outsb
fisubrs
gs
fnsave
out
fwait
mov
ss
leave
jno
sub
pop
cld
add
push
xlat
cmp
cmp
call
mov
cs
mov
inc
sub
aad
popf
test
loopne
lds
mov
dec
nop
push
xor
pop
in
sbb
xchg
mov
cmp
insb
ffree
lret
jno
or
out
and
cmc
dec
fildl
fdivrs
fwait
xorb
test
inc
adc
data16
xchg
jmp
pop
cli
mov
xchg
mov
add
and
mov
mov
xor
xchg
dec
jbe
jg
xchg
mov
cltd
mov
xchg
test
push
and
in
sub
xor
or
pop
cmp
inc
insb
sbb
cmp
xchg
test
daa
sub
inc
scas
bound
icebp
pop
xor
xorb
mov
cltd
pop
icebp
dec
ja
sbb
js
or
adcl
pop
cmpb
jb
stc
pop
cmp
inc
sub
adc
xlat
push
mov
jno
push
clc
mov
dec
out
lcall
je
adc
fistl
xchg
dec
or
push
adc
add
pop
das
addr16
lret
stc
sbb
mov
cmp
or
sub
das
jmp
in
sahf
push
les
lahf
movl
sub
xor
jae
cmp
mov
xlat
popf
scas
ds
nop
pop
cmp
and
outsl
test
cmp
push
sub
add
int
push
xor
outsb
roll
sbb
out
dec
cmp
sub
bound
je
sbb
das
daa
pop
fiaddl
inc
fmulp
cli
cmp
lcall
push
push
mov
xchg
jmp
es
ljmp
sub
xchg
xor
inc
jp
repz
lods
mov
call
xchg
mov
aam
test
pop
mov
call
xor
and
lahf
add
dec
and
addr16
cmp
std
aas
cmp
mov
and
mov
dec
loop
pop
stos
xlat
nop
push
daa
icebp
pop
mov
cmpsl
add
or
sbb
rclb
or
andb
fsubp
cmpsl
sub
sub
mov
add
and
sti
aas
adc
adc
outsl
lods
aaa
mov
sbb
or
in
mov
jmp
xchg
dec
cmc
fsubp
shlb
ret
pushf
iret
out
add
jno
pushf
jp
or
test
loop
movsb
ss
clc
sub
out
and
mov
cmp
cmpsb
pop
movsb
fs
repnz
xor
inc
sbb
sub
aas
je
jae
shl
mov
mov
mov
notb
and
dec
adc
loop
jno
rclb
mov
dec
leave
es
jno
add
lcall
jle
popf
jg
mov
push
cmpsb
xchg
arpl
popf
mov
das
sbb
arpl
xor
pop
cltd
arpl
mov
addb
or
dec
cmpsl
sbb
cmp
adc
movsb
cld
jae
je
lret
cmp
jge
mov
imul
jns
mov
lahf
dec
add
adc
movsl
arpl
stos
push
movsb
movhlps
loope
pop
cmp
xor
jge
popf
test
inc
add
mov
mov
jecxz
stc
inc
int3
jle
adc
pop
inc
or
add
out
nop
xchg
dec
les
push
or
add
cmpl
sbb
insb
sub
aad
jmp
addl
pop
shlb
add
jne
clc
push
lcall
stc
mov
lahf
or
call
enter
out
rcll
iret
push
addl
mov
cmp
test
mov
mov
mov
and
or
push
or
cmpsb
dec
push
in
inc
cmp
cmc
push
popa
outsl
data16
incb
xor
jp
lds
cmc
loop
mov
dec
jbe
orb
inc
test
ljmp
shl
xor
sbb
mov
mov
mov
out
inc
repnz
jecxz
pop
in
cltd
adc
xchg
jno
add
pushf
push
mov
pusha
int3
xchg
js
outsb
ret
cmp
push
push
pop
push
adc
fs
stc
mov
subb
popa
adc
loope
cmp
fstp
add
fmul
out
mov
adc
mov
adc
jle
mov
orb
and
sub
subb
cmp
jnp
pop
adc
and
ja
adc
xor
xchg
lahf
mov
cmp
mov
imul
xchg
scas
sbbl
mov
lret
lods
xorb
push
outsb
les
sbb
loopne
mov
sahf
dec
inc
ret
push
adc
ret
loop
test
sub
fadds
xchg
fs
pushf
sbb
loop
jb
fwait
jl
pop
mov
cmp
psrld
andl
imul
mov
test
or
sbb
cmc
jl
xlat
xor
mov
lcall
mov
out
popa
repz
sub
dec
inc
mov
add
stos
pusha
pop
pusha
ss
sub
cli
out
push
mov
mov
in
push
xchg
jle
add
cs
pop
push
mov
adc
scas
or
aad
dec
xchg
sub
push
hlt
testl
add
cmp
setbe
leave
repz
sarl
mov
fs
jg
rclb
mov
mov
rcrl
xor
out
or
call
negb
enter
hlt
enter
loopne
js
ret
mov
push
pop
subb
add
inc
lahf
jo
push
push
ja
cmp
push
enter
das
mov
inc
in
mov
mov
adc
cmp
mov
out
in
push
outsl
adc
pop
pop
jge
orl
lret
dec
lods
and
mov
mov
sub
mov
pusha
js
aam
lock
int3
fcompl
popa
cmp
fldenv
wbinvd
adc
out
lret
cmp
jge,pt
xchg
cmp
jae
mov
lcall
ror
jb
xchg
sahf
jge
shll
inc
inc
lret
lods
jg
imul
mov
sbb
xor
dec
fldcw
xorb
xchg
mov
jle
in
negb
cltd
pop
aaa
xor
mov
jp
adc
xlat
sti
jecxz
mov
add
test
sub
pop
lock
jno
mov
mov
pop
xchg
mov
xchg
cmp
dec
and
insl
int
xchg
jp
sbb
cwtl
adc
in
mov
inc
mov
mov
insl
adc
push
movl
rep
jmp
mov
outsl
mov
out
inc
enter
mov
cmp
lock
mov
cmp
and
ret
lods
das
mov
jnp
fwait
repz
add
gs
jl
das
ficoml
mov
mov
pop
cwtl
test
mov
sub
sub
mov
in
in
dec
cli
cmc
sbb
pop
xor
je
pop
xor
in
ljmp
mov
daa
pop
rol
sti
xor
push
outsl
cltd
dec
mulb
rolb
pop
sub
stos
out
ljmp
int
cmp
mov
cmp
pop
out
fdivrl
lods
dec
stc
mov
inc
or
push
add
int3
enter
inc
outsl
rorl
mov
add
jg
and
push
or
shrl
test
push
jae
out
arpl
rcll
xor
pop
adc
pop
ja
repnz
in
gs
popa
lds
divl
push
das
xor
arpl
push
icebp
push
mov
sub
push
repnz
sbb
sub
pop
cmp
or
jge
xor
sub
test
icebp
adc
mov
or
popf
stc
out
call
cmp
sbb
or
mov
xchg
mov
adc
and
xor
xchg
das
xchg
in
clc
rcrb
mov
xor
push
js
stos
sbb
sub
push
aaa
into
sub
jg
call
jecxz
scas
scas
data16
test
pop
rorl
lcall
out
les
pop
lods
jo
jmp
jmp
es
dec
pop
fnstcw
mov
loop
jnp
aaa
int
sahf
subl
aad
insl
add
in
mov
bound
fcmovnbe
aas
and
pop
push
lods
fcompl
ret
push
sbb
leave
jnp
cmp
xor
aad
add
mov
dec
incl
sbb
mul
mov
and
fstpl
add
jnp
adc
repnz
mov
xor
and
fisubrs
or
jecxz
scas
jae
pop
mov
jnp
or
or
orb
lock
and
js
aad
pop
lods
pop
sub
dec
pop
xor
ds
in
hlt
out
fstpl
xchg
mov
int3
sub
xchg
cld
bound
push
ds
mov
push
or
ds
jp
adc
aad
cmc
xchg
dec
sbb
pop
in
mov
mov
int3
imul
arpl
xchg
cmp
or
nop
lcall
sbb
or
hlt
lds
movsb
sahf
repz
pop
and
pusha
adc
cli
es
out
fnstsw
shlb
mov
or
pop
sbb
push
fwait
call
jg
jae
xchg
cwtl
punpckhbw
mov
adc
aaa
lret
or
aam
mov
or
cmp
dec
push
incb
rorl
inc
repz
mov
jecxz
ret
add
push
in
popa
push
pop
xor
mov
outsl
out
int
lret
dec
adc
das
popf
fldcw
sti
adc
pop
cli
cmpsb
nop
inc
jmp
pusha
jg
ret
jmp
sbb
lret
and
icebp
dec
test
fs
iret
jnp
repnz
or
ret
mov
movsl
pop
fbstp
out
jae
sahf
jne,pt
out
ja
imul
jnp
xor
dec
mov
sbb
pop
add
cmp
out
outsl
sub
sub
push
dec
push
lret
inc
paddusb
outsb
fsubrl
and
pop
flds
add
sub
arpl
mov
xchg
or
xor
dec
inc
adc
loopne
cmp
xlat
jge
aad
jecxz
test
movsl
js
sbb
jno
adc
addr16
xor
adc
jae
ret
dec
test
popa
dec
lcall
pop
push
and
pop
test
adc
ds
jo
and
divl
xchg
sbb
push
push
mov
mov
pop
sbbb
pop
fbld
xorl
das
hlt
inc
repnz
ss
repz
in
cmp
scas
std
gs
out
loopne
sub
inc
sub
cmpsb
stos
add
mov
mov
and
sbb
push
cli
cmp
jl
adc
xchg
add
insl
out
loop
dec
mov
insl
mov
push
sbb
imul
cwtl
cmp
cld
dec
hlt
filds
lods
test
idivb
sub
xor
pop
pop
inc
sub
je
es
stc
xor
rorl
js
sub
mov
loop
mov
sub
addl
repnz
sbb
dec
or
and
in
jae
fs
or
fwait
push
mov
mov
cwtl
loope
sub
bound
xchg
aam
and
int
lods
sub
jbe,pt
or
das
or
adcl
loopne
pop
xorb
cmpsl
sub
dec
xlat
push
shll
inc
adc
mov
adc
add
xor
mov
dec
inc
xchg
mov
sub
sub
add
ss
dec
add
xchg
je
xchg
scas
jnp
jg
add
add
fstps
pusha
std
and
xchg
shl
sbb
js
dec
movsb
aas
push
xadd
ja
ja
sbb
adc
testl
mov
or
ret
mov
dec
adc
xchg
xchg
insb
inc
jecxz
aaa
icebp
mov
cli
testb
inc
inc
ds
xchg
mov
pop
push
repnz
mov
pop
cld
stc
xchg
lret
dec
sbb
fists
add
pushl
xchg
int3
js
pop
pop
hlt
sbb
test
roll
lcall
dec
and
pop
push
cli
dec
cltd
push
dec
and
popa
data16
push
xlat
inc
fcomps
dec
idivb
mov
sub
cmpsl
in
into
dec
nop
adc
loopne
fcomps
jnp
outsb
adc
push
out
int
in
push
push
adc
clc
out
repnz
jge,pt
mov
mov
pop
inc
lods
std
aam
in
int
stos
je
adc
std
test
jg
sbbb
mov
pop
std
jg
js
repz
push
xchg
adc
and
push
sbb
cmp
inc
ret
pop
xchg
push
jbe
aas
mov
loope
sub
push
das
lds
fs
pop
or
cmp
inc
test
mov
arpl
clc
ss
pusha
ja
dec
cmpsl
repnz
call
jl
out
or
addr16
ret
and
popf
inc
xchg
jmp
pop
and
push
mov
daa
std
dec
jl
xchg
cmp
xchg
clc
fsubrs
popa
jns
mov
and
shrl
mov
std
sbb
inc
mov
xor
pop
push
mov
push
pop
inc
jmp
fwait
jge
or
ret
mov
leave
jmp
stos
leave
aad
popa
mov
xlat
int
in
xchg
dec
lock
cwtl
andl
jno
pop
add
xlat
sbb
stc
pop
test
fnstsw
es
pop
jmp
cld
xchg
pop
mov
or
jle
loop
dec
adc
ret
pushf
adc
push
rorl
fstpl
jb
and
xor
shll
fs
shl
in
xor
cmp
divb
jecxz
inc
mov
in
mov
mov
jg
mov
push
imul
xchg
andb
dec
or
mov
mov
mov
adcb
and
dec
call
sti
cmpsl
jmp
fsubl
push
enter
iret
mov
stc
in
test
sbb
mov
jecxz
in
dec
fs
movsb
lea
sbb
je
out
lock
push
push
or
dec
or
mov
mov
aam
lret
sbb
movsb
cmpsl
xchg
push
stos
pop
or
inc
add
cmp
es
mov
inc
sti
popa
push
push
lods
xchg
sti
cli
sbb
cmp
insl
mov
call
or
pop
pop
aas
cmp
imul
movd
imul
adc
test
push
or
es
xor
int3
dec
out
scas
in
out
cmp
push
pop
rorb
rorl
pop
push
push
push
stos
aam
out
loope
stos
pop
cmp
pop
andl
arpl
ss
add
jne
daa
nop
stos
js
test
fs
movsb
into
adc
rolb
cmp
mov
out
jo
and
lret
jmp
mov
movsb
dec
sub
iret
adc
sbb
xor
xchg
es
mov
ret
cld
in
sbb
sub
test
jae
jle
cmpsl
popf
push
adc
sbb
jo
sbb
lock
addb
int3
adcb
cltd
into
and
sub
insb
fnstcw
mov
adc
pop
out
test
dec
push
loop
cmp
jae
movsl
xorl
in
xchg
lds
add
sub
add
cmpsl
out
lcall
in
push
sub
test
test
shr
inc
lods
xlat
movsl
imul
popa
aas
and
mov
movsb
pusha
mov
cmp
jnp
arpl
cmp
mov
cmp
inc
mov
ja
mov
or
push
mov
push
mov
iret
in
in
movsl
rcl
insb
jns
adc
sarl
enter
sbb
pop
insl
aaa
xchg
iret
shl
jl
cmpsl
rcr
xor
cmp
rol
data16
xchg
pop
cmp
push
pop
push
sarb
jmp
test
inc
test
push
ja
and
jo
lret
shld
mov
jecxz
sbb
xchg
xchg
lahf
dec
sbb
sub
jae
jae
xor
jp
mov
jo
cmp
lds
add
int3
jle
jae
pop
mov
outsb
lcall
sbb
lock
stc
dec
push
mov
dec
sbbb
stos
lea
pop
xchg
testb
int
in
mov
pop
aaa
nop
jb
les
inc
pop
push
dec
cli
fimuls
rcr
icebp
in
popa
sbb
adc
es
jmp
mov
sbbl
add
ret
and
sub
pop
jae
decl
ret
in
cltd
ret
push
cmpsl
mov
or
jbe
fsubl
add
jmp
add
shll
add
xor
in
xchg
faddp
test
jl
lock
gs
mov
xchg
push
out
mov
cmpsl
mov
adc
repnz
push
xor
mov
sub
cwtl
push
xor
cmp
out
or
jecxz
movsb
lcall
xchg
lcall
dec
movsl
and
jb
pmaxub
icebp
repz
inc
or
xor
xchg
xchg
push
je
cli
aam
mov
inc
sbb
pop
fidivl
into
ds
scas
adc
cmp
dec
std
pop
push
cltd
sub
mov
enter
adc
push
jnp
ret
call
cmp
jne
repz
cmp
test
scas
jmp
es
inc
dec
shlb
pop
leave
mov
xchg
pushf
mov
mov
cmpsb
les
inc
or
shrl
push
in
push
fisubs
popf
pop
dec
xlat
test
cmpsb
push
jns
les
imul
add
or
sbb
jb
addr16
jecxz
rcll
cmpsb
movsb
add
out
pusha
dec
xchg
sub
test
lret
in
wrmsr
and
out
pop
jmp
ret
insl
adc
push
cmp
les
mov
push
inc
fs
lret
jl
jb
mov
fldcw
ret
testb
cltd
pop
cmp
mov
stos
cmp
dec
push
and
cmp
mov
shlb
inc
inc
dec
test
dec
jp
xchg
dec
xchg
lahf
js
test
or
mov
push
ja
push
jno
jmp
call
mov
js
out
in
cmpsb
nop
rorb
push
xor
andb
add
push
lret
test
cmp
inc
push
sbb
fcompl
je
mov
in
loopne
ljmp
and
daa
xor
inc
add
dec
movsl
bnd
sbb
pop
push
dec
pop
mov
jae
mov
in
xlat
jmp
or
fdivrl
push
shll
imul
in
mov
iret
lcall
fsubs
push
fcomi
inc
xchg
push
rcl
aas
push
in
ja
or
cltd
stos
add
cmpsb
test
sub
int3
test
iret
mov
scas
or
sbb
jae
popf
lahf
mov
adc
push
cmp
testl
xchg
dec
addl
aad
sbb
fiaddl
sbb
cmpsb
leave
shll
or
movsb
insl
pop
xor
pop
insl
out
and
mov
xchg
aaa
ljmp
cmpsb
cltd
or
out
rcr
std
adc
addr16
and
inc
cmpsl
jmp
cmpsl
dec
out
dec
movsb
lds
popa
cltd
in
inc
lods
dec
repz
int3
bound
push
mov
or
inc
movsl
and
outsb
leave
outsl
dec
and
xor
sbb
leave
js
mov
in
repz
xor
add
iret
ss
and
ljmp
shll
xor
push
icebp
sub
loop
loop
in
xor
sub
fisttps
ret
mov
in
mov
popa
pusha
push
int
jp
jns,pn
push
mov
cmp
pusha
push
cltd
call
mov
fdivs
test
icebp
out
mov
mov
lcall
mov
into
xchg
mov
push
sahf
push
add
dec
jg
cmp
outsb
call
dec
test
xchg
fists
xor
mov
jmp
adc
lret
sar
lret
out
shl
mov
aam
mov
iret
cmpsl
xchg
mov
pushf
in
sub
pop
pop
stc
mov
pop
pop
cmp
scas
ret
xor
inc
pop
jl
xchg
pushl
enter
or
stc
mov
add
jo
add
aam
lcall
pop
mov
xchg
xchg
jl
xor
int
pop
pop
cltd
bound
adc
sub
push
push
pushf
dec
daa
loopne
sbb
pop
push
lods
movsl
jnp
call
test
adc
jno
xor
outsb
jp
fs
ret
sysret
rclb
mov
xlat
lahf
sbb
addr16
pop
and
inc
mov
mov
fwait
dec
jb
and
iret
roll
dec
cli
je
lods
push
push
popa
sbb
lds
pop
cli
fldt
dec
mov
xor
cmpsb
ds
sbb
negl
cmp
push
test
js
lods
pushf
dec
ljmp
and
cmpsl
test
imul
sbb
jecxz
add
mov
xor
mov
xchg
mov
push
inc
mov
cmpsb
xor
jno
mov
repz
lahf
test
mov
fnstcw
jmp
sti
ja
lds
insl
inc
ja
inc
mov
add
jmp
inc
pop
adc
pop
or
andb
inc
sub
outsl
jp
decb
push
mov
or
rolb
pop
ljmp
daa
arpl
out
mov
loop
daa
mov
xor
mov
inc
mov
repz
sbb
xchg
xchg
xchg
loope
xor
push
mov
mov
test
arpl
inc
adc
ss
dec
adc
dec
xor
cmp
xor
inc
add
cwtl
gs
cmp
push
int
stc
xchg
ret
addb
push
push
cmc
imul
fnsave
and
imul
inc
push
roll
aam
push
xor
push
push
sbb
ljmp
pop
icebp
lods
sbb
lret
push
aas
xchg
and
test
ret
mov
jecxz
hlt
stos
addr16
or
jmp
inc
popa
loopne
fsubrl
mov
fisttpll
loope
cli
test
push
enter
fiadds
cmpsb
sbbb
shrb
sub
loop
fisubrl
and
notl
xchg
pop
push
mov
aad
push
pop
int
xchg
push
aad
jbe
jns
and
dec
and
aad
sub
movsl
or
pop
sti
lods
mov
pop
out
push
fwait
add
cmpsl
cmpsb
data16
or
les
aam
sub
movsb
adc
popa
xchg
mov
sahf
add
out
pop
add
jns
add
push
sbb
sahf
mov
xchg
mov
scas
xor
loop
push
mov
mov
ret
insb
mulb
stos
mov
sbb
push
test
sub
call
jge
lock
aas
ds
jmp
adc
sti
xorb
sbb
addr16
int3
cmp
xchg
pusha
or
dec
mov
stos
push
scas
sub
out
inc
ffree
enter
mov
movsb
add
dec
cltd
ljmp
out
xlat
mov
lret
push
orl
jb
and
lea
lds
jb
jg
pop
jg
popl
mov
rcll
pmaxsw
cmpsl
lock
sti
jnp
pop
in
push
adc
jae
pop
jmp
jmp
adc
sti
cmc
mov
pop
mov
pcmpeqd
mov
and
pop
mov
sbb
ret
shl
cmp
stc
push
mov
icebp
push
in
int
clc
jne
add
cld
addr16
cmp
int
dec
jns
dec
lods
xor
add
sbb
fdivl
clc
xchg
mov
ljmp
fwait
add
les
inc
inc
xchg
jne
jb
mov
sahf
jge
pop
or
inc
mov
jb
cmp
repz
and
add
jge
rcl
sub
mov
aad
rcl
movsl
adc
aaa
aas
out
andb
xor
cmpsb
insb
or
push
cmpsb
pop
sbb
dec
sbb
in
ds
mov
stc
lods
xchg
pop
mov
bound
jb
cmp
lds
ret
sbb
inc
rorl
lds
xchg
aas
add
add
xor
dec
aad
in
add
sub
mov
jns
popa
push
test
rclb
fsubs
das
int3
pcmpgtd
push
dec
xchg
cmp
lret
push
notb
out
jbe
int
pop
xchg
btc
cld
sbb
lcall
sbb
orb
and
in
or
mov
subl
ljmp
inc
or
aaa
adc
es
sbb
ret
shlb
xchg
xor
push
fcompl
daa
ucomiss
hlt
in
mov
cmpsb
push
push
mov
int3
pop
xchg
rorl
loop
jmp
inc
dec
push
rcrl
sbb
xchg
or
test
ja
icebp
repz
insb
or
mov
popa
ds
push
subb
es
push
pop
sub
add
cmpsl
andl
aad
xchg
xchg
jno
pushf
xchg
cwtl
sub
fldcw
fcoml
std
pop
mov
mov
ss
add
push
stc
push
out
test
test
xchg
add
int3
adc
mov
sbb
adc
pusha
xchg
sub
or
sbb
inc
test
stos
mov
addr16
in
arpl
inc
sbb
adc
aam
nop
popa
cs
push
cmp
adc
fwait
mov
call
pushf
mov
imul
inc
push
outsl
pop
jmp
enter
popf
into
add
jp
in
inc
or
cwtl
data16
je
cmp
jnp
imul
jbe
mov
mov
or
hlt
outsl
sbb
xchg
outsl
jge
jb
pop
ret
stos
rorl
mov
pop
mov
push
int3
cltd
jecxz
mov
pop
adc
and
cli
mov
push
adc
inc
sub
jecxz
pop
or
jle
imull
lods
pop
mov
add
ret
sbb
repnz
mov
lahf
movsb
jae
test
ljmp
daa
loope
js
and
inc
gs
mov
jno
dec
dec
pop
mov
adc
addr16
cmp
icebp
adc
ds
daa
jge
mov
xor
fiadds
packsswb
add
add
xchg
push
jno
lret
loop
jnp
xchg
sub
fstpl
xchg
lcall
popa
push
mov
pushf
aam
dec
xor
jle
iret
shll
xchg
sbb
movsl
push
lret
divl
sarb
rcrl
mov
ret
lret
mov
clc
hlt
lahf
ret
roll
cs
mov
push
movsb
sub
aam
jb
sar
pop
inc
cmp
and
scas
push
adc
xchg
aas
jmp
jo
push
push
sub
cmp
icebp
test
ret
cmp
dec
jo
faddp
mov
pop
cwtl
cmp
fadds
roll
xchg
leave
lock
mov
xchg
and
enter
mov
cmp
xor
hlt
test
mov
mov
mov
jle
xchg
shlb
cmp
cmpsb
mov
arpl
add
xchg
hlt
dec
inc
out
and
repz
pop
lods
or
fmuls
jns
xchg
mov
sbb
pop
and
add
xor
inc
pushf
loop
fsts
mov
pop
cld
leave
cwtl
or
and
sub
aam
outsl
cmpsb
inc
jecxz
pushf
mov
jno
adc
jl
pusha
pusha
jp
add
cltd
fdivl
jb
lock
inc
jbe
pop
jb
cmp
push
test
xchg
fimuls
and
jne
and
data16
fsubl
and
sbb
test
repnz
xchg
insl
shlb
xchg
outsl
and
scas
xlat
pop
mov
mov
sbb
arpl
ja
mov
lock
dec
outsb
mov
iret
mov
aad
mov
dec
aad
xchg
outsb
mov
out
pushf
out
out
fiadds
rclb
enter
add
sbb
push
dec
jle
ficoms
xor
scas
repnz
movups
dec
cltd
mov
mov
mov
fisubs
sub
jo
lock
and
stc
add
dec
and
push
cs
push
mov
dec
and
mov
popl
into
aaa
push
jbe
xor
jge
clc
sub
shll
inc
stc
movsb
loopne
push
and
in
int
xchg
pusha
in
sbb
mov
push
inc
mov
sbb
lock
mov
xchg
in
fnsave
insb
add
xlat
push
mov
push
mov
daa
in
pop
imulb
lret
testb
jge
jo
shll
add
push
dec
fs
lods
aas
jne
xor
out
mov
rcl
test
imul
push
in
data16
fildll
inc
fidivl
dec
or
jns
mov
fisubl
lock
xchg
test
or
add
jne
mov
test
xorl
inc
std
int3
jp
add
popf
loop
cmp
testl
mov
cltd
inc
inc
arpl
and
sbb
mov
dec
movsl
pop
or
movsl
add
out
jns
call
inc
or
push
pop
ja
mov
loop
mov
inc
andl
ss
orb
mov
xor
inc
mov
ficoms
scas
sbb
cli
adc
jo
imul
adc
push
mov
aad
add
adc
pop
jbe
mov
inc
jne
push
adc
jle
xlat
and
dec
cltd
push
jb
push
add
fnstsw
pop
mov
xor
test
xchg
and
fs
fwait
xchg
insb
sub
cmp
cli
mov
lock
adc
add
adc
lds
push
fisttpl
pop
fisubrs
jp
xchg
dec
out
inc
insb
imul
mov
test
rcrb
xor
addr16
fbstp
pushf
xor
dec
rcl
jns
mov
mov
jg
add
xor
lret
dec
in
sub
test
dec
cld
jp
out
lcall
sub
or
xor
pushf
mov
aas
or
jnp
fnsave
cmpsb
jmp
roll
xchg
jmp
or
sbb
adcb
sbbl
fs
inc
sub
mov
int3
inc
jb
loop
cs
cmc
ficompl
adc
xchg
xor
stos
gs
mov
push
adc
sbb
xchg
mov
inc
pusha
mov
out
sub
mov
xor
xor
adc
js
in
jnp
adc
in
sub
pop
popa
mov
sub
sbb
xor
xchg
out
in
dec
pop
xchg
jnp
fwait
or
repnz
adc
add
xor
sub
xor
mov
popf
ret
iret
inc
iret
xchg
push
fwait
lods
js
scas
jecxz
arpl
mov
loope
xchg
pop
add
divb
test
stos
in
cmp
out
leave
imul
push
add
push
hlt
fs
imul
ret
mov
xchg
fnstenv
mov
arpl
sbb
push
mov
or
dec
imul
mulb
nop
jae
push
ja
pusha
inc
rcrb
mov
cmp
xchg
sahf
cmpsb
loope
mov
stos
inc
cmp
sti
scas
pop
xor
xchg
xor
mov
call
push
and
loopne
adc
loope
mov
jns
xchg
jmp
add
pushf
popf
mov
cmc
pushl
and
cmp
ja
dec
jmp
push
push
daa
jle
xchg
shl
sbb
lods
cmp
out
mov
mov
push
sbb
fwait
mov
data16
push
xor
lds
out
xchg
daa
jbe
mov
jp
add
lods
mov
loopne
push
les
stc
or
pop
into
dec
cmp
into
ret
xor
adc
push
cmp
in
sbb
jbe
outsl
push
add
mov
orl
mov
sbb
pop
and
sub
and
pop
jbe
xor
lea
lea
cltd
js
adc
and
hlt
add
mov
test
int3
out
push
dec
bound
loope
cld
inc
test
fxch
test
lahf
xchg
in
cmp
loop
pop
rorl
leave
adc
mov
popf
daa
fsubrs
mov
sbb
add
jb
mov
add
scas
mov
mov
scas
inc
sbbb
loop
jae
fnstcw
add
push
lea
jns
mov
jmp
jmp
mov
xor
push
cwtl
or
fs
or
push
ret
imul
out
xchg
jmp
mov
lcall
lcall
sub
or
cmp
in
test
lods
gs
inc
rcrb
add
mov
xchg
cmp
pop
sbb
fs
push
dec
add
bound
pop
jnp
sub
cmp
cmp
jg
adc
mov
mov
xchg
pop
shrl
mov
jle
mov
xor
adc
and
mov
or
jge
push
cmp
data16
mov
pop
fisubs
das
fwait
lret
sbb
daa
pushf
mov
push
idiv
add
pop
mov
pop
es
int
push
and
jne
xlat
leave
jo
cltd
mov
cmp
rcr
icebp
xor
mov
cltd
sub
xlat
xchg
test
movb
cmc
test
mov
das
mov
pop
and
shlb
adc
fdivs
mov
mov
fcmovnb
inc
inc
pusha
jmp
mov
ret
movsb
idivb
aas
push
aaa
movsl
jle
xchg
test
mov
loope
test
and
lock
push
imul
sub
inc
test
and
sub
inc
pop
xor
rcr
or
jnp
insb
xor
cmp
hlt
inc
test
pop
jo
gs
mov
jge
xchg
fnstsw
aas
or
xchg
lahf
nop
mov
movsl
test
scas
dec
cmp
inc
ss
inc
dec
pushf
cmp
dec
inc
push
adc
jns
mov
lret
sbb
and
fldl
pusha
fwait
cmp
aas
and
jb
int3
inc
imul
mov
and
cld
repz
ja
lea
aas
shll
dec
mov
lea
adc
sub
mov
fs
cld
jecxz
bound
xor
enter
shrl
inc
mov
addr16
lods
out
fs
aaa
lds
in
popa
out
insl
in
iret
jle
arpl
movsl
mov
leave
movsb
cmp
pop
and
mov
add
mov
pop
pop
negb
test
cli
out
fnstsw
shr
mov
inc
and
and
fldenv
call
dec
shll
addr16
stos
push
std
dec
push
ret
loopne
cltd
pop
fcoml
pop
lods
xchg
adc
inc
adc
or
cli
sub
adc
jmp
dec
mov
mov
aad
ljmp
and
out
lods
loope
mov
mov
inc
pop
fisubrl
cmp
push
loopne
test
mov
push
sub
pop
lret
pusha
pop
mov
aam
bound
icebp
jo
push
xchg
stos
fldenv
sub
sub
imul
out
inc
popf
in
pop
mov
inc
mov
cmp
pop
rcll
lods
xor
test
mov
in
cmpsb
fs
fneni(8087
lock
pop
adc
stos
mov
push
sbb
aad
lahf
out
adc
into
aam
mov
dec
xchg
xchg
fucomi
cmp
xor
mov
sbb
decb
xchg
test
adc
test
add
ss
cltd
xchg
sub
and
repz
out
cli
sub
inc
pusha
push
push
jl
jle
test
out
mov
lds
mov
icebp
dec
lahf
into
sbb
push
jmp
and
out
mov
lcall
sti
xor
mov
fsubrs
iret
mov
push
adc
loopne
jbe
add
aad
cli
daa
pop
adc
lds
fsubl
jp
cltd
mov
out
xchg
xlat
cmpsl
jge
push
lock
jo
mov
imul
ljmp
mov
lcall
sub
lds
test
xchg
pop
shrl
push
push
jae
pop
movups
cmpsl
sti
stos
or
lock
mov
pop
outsl
sbb
test
aam
sahf
inc
fdivrs
in
cmp
adc
shrl
fs
pushf
xchg
into
cmpsb
and
ret
dec
mov
aad
and
insb
sar
bound
cmpsl
or
dec
xchg
mov
int3
test
xchg
mov
sub
aam
mov
pushaw
ja
xor
sub
xchg
or
sub
dec
mov
imul
out
dec
cmpsb
sub
insl
imull
add
sahf
adc
push
sbb
shll
pop
xchg
mov
jmp
decl
mov
in
pushf
js
dec
sbb
jae
ljmp
mov
scas
fcomps
xchg
jmp
shlb
sbb
mov
cli
jbe
adc
push
lcall
insl
dec
frstor
outsl
ja
movsl
aad
in
mov
in
mov
les
frstor
movsl
shlb
mov
insb
fcmovnb
jns
and
pop
xor
les
adc
out
insl
adc
fcoml
loope
ror
test
mov
int3
in
loope
pushf
push
mov
jecxz
int3
pop
rclb
lahf
std
ret
es
jmp
inc
push
mov
in
dec
out
stos
ja
aas
lods
fs
xchg
out
xor
push
add
jecxz
popa
mov
insl
fstps
ret
xchg
and
dec
movl
xor
arpl
das
and
push
push
add
imul
test
xchg
sub
pop
mulb
adc
leave
outsb
dec
jle
dec
mov
das
loop
and
movsb
fisubrs
inc
repz
flds
xchg
push
inc
inc
push
mov
inc
inc
mov
jle
iret
push
in
imul
inc
and
repnz
pop
pushf
shlb
lds
sbb
aas
fs
pop
and
mov
mov
dec
fcoms
add
and
outsb
data16
mov
and
mov
dec
sbb
aad
je
test
ja
ja
dec
add
cmpl
in
in
scas
or
and
movsb
cltd
dec
cmc
les
adc
insl
mov
lcall
sub
xchg
lods
and
movsl
ljmp
and
popf
pop
rol
ja
push
mov
xchg
xor
outsl
roll
dec
pop
loop
std
das
jns
jno
stc
insl
enter
loop
repz
data16
dec
jbe
es
sbb
movsb
dec
cmpl
cmpsl
or
call
enter
dec
aad
mov
sbb
rclb
cmp
call
jge
adc
mov
mov
int3
inc
and
xchg
mov
sbb
mov
push
sbb
shlb
subl
stos
or
push
adc
je
and
and
cmp
push
jnp
inc
pop
jns
loope
xchg
pop
add
push
mov
test
sbb
das
cli
and
out
jno
xchg
or
les
and
mov
lret
pop
arpl
xor
mov
sub
cwtl
rclb
aas
sarl
sti
adcl
add
fisubs
andl
addr16
mov
xchg
mov
inc
push
mov
jno
sub
pop
orb
sub
mov
aam
mov
jne
mov
ja
movsl
and
das
lret
push
and
adc
dec
fnstcw
fs
aam
mov
or
xchg
int3
cmpsl
sub
jb
mov
cmpsb
pop
push
test
mov
lret
push
add
int3
inc
sub
jmp
pop
lds
in
lcall
cmp
imul
jge
push
subl
scas
leave
jns,pt
inc
gs
xchg
lcall
push
adc
outsl
mov
in
xor
mov
add
fldenv
mov
mov
in
mov
inc
jns
dec
mul
add
in
mov
fcompl
pop
stos
pop
movsb
jb
pop
pop
push
xchg
fsts
jno
pushf
inc
mov
adc
fs
lods
jle
inc
mov
adc
xchg
sbb
ds
loope
outsb
cli
xchg
outsb
mov
adc
cmp
jbe
iret
out
add
jge
sub
mov
in
dec
jb
nop
jne
outsl
cmp
cmp
and
faddl
shlb
jbe
arpl
inc
push
pop
fistl
ret
fnstenv
out
and
xchg
xchg
pop
jmp
mov
inc
fstp
test
out
mov
mov
inc
sub
jbe
arpl
iret
mov
xchg
enter
cltd
xor
out
mov
adc
in
fnstenv
mov
daa
sbb
add
shrb
into
test
subl
push
inc
fnsave
mov
dec
dec
push
or
add
stos
and
mov
fisttpl
jp
sub
ljmp
mov
xor
jbe
fdivl
outsb
stos
xor
into
sahf
adc
cmp
test
cmp
pop
cmpsl
aas
jne
cmpsb
or
movsb
mov
push
mov
pop
xor
movsb
jne
loop
cmp
jmp
adc
cmpl
mov
dec
jno
adc
mov
lea
add
pop
adc
inc
hlt
jmp
or
pop
or
or
push
cmp
jge
sbbb
pop
mov
add
jb
dec
pop
ljmp
mov
mov
inc
test
ljmp
imul
push
xor
movsb
andb
stos
push
sub
in
xchg
sub
cmp
dec
push
setne
outsb
in
jo
push
sbb
xor
stc
out
daa
loopne
push
not
jno
ss
mov
or
mov
cltd
jne
movsl
daa
test
insb
dec
cmp
inc
insl
cmpl
add
xchg
mov
sar
mov
fcoml
mov
sub
or
popf
cmc
dec
xchg
mov
clc
inc
lcall
inc
aas
jg
insl
add
mov
or
stos
xchg
cmp
mov
das
mov
mov
sbb
lock
mov
jl
lods
jp
cmpsl
inc
stos
pop
loop
xor
dec
aaa
in
lret
push
fdivs
rcrl
or
mov
dec
lret
adc
mov
xchg
test
jb
mov
sub
mov
in
fld
shll
push
xorw
lds
arpl
ds
adc
xlat
cmp
cmp
jno
xor
lods
into
lds
notb
mov
ret
scas
mov
push
outsb
movsl
test
scas
mov
cmp
movsl
in
xor
xor
mov
pop
or
faddp
inc
lea
mov
inc
mov
jecxz
ljmp
pop
addr16
xchg
sbb
in
jmp
mov
jbe
test
pop
movsb
repnz
push
dec
enter
pop
xchg
aas
adc
and
push
xor
xlat
lds
xor
ret
mov
cld
inc
jecxz
pushf
sub
or
stc
inc
cmpsl
sub
mov
inc
sbb
mov
mov
push
sbb
mov
test
ljmp
frstor
xor
pop
lcall
cmp
int3
push
jecxz
dec
mov
inc
jbe
xchg
lea
test
cld
pusha
cmpsl
lret
data16
pop
lods
jmp
adc
push
and
xor
ret
fnstsw
mov
cmp
lret
je
gs
add
or
jns
js
into
cld
in
mov
pop
lds
or
scas
jne
test
and
ds
mov
mov
lret
cmpsb
ds
std
mov
test
pop
xchg
lea
scas
call
rcrb
cmp
adc
push
xor
data16
das
mov
push
xchg
lret
shl
outsb
push
jle
in
inc
push
xchg
sub
jmp
dec
cmp
arpl
cmp
int
push
cmc
mov
add
icebp
dec
push
faddl
outsl
daa
aam
fsubrl
andl
ljmp
inc
test
into
popf
popa
pop
andb
jg
mov
jae
jns
cmp
into
call
shlb
scas
fs
filds
or
inc
pushw
xor
imul
xchg
adc
orl
or
repz
test
adc
fiadds
cmp
test
movsb
mov
dec
out
clc
pusha
lret
adc
adc
cmpsl
mov
or
mov
mov
and
xchg
push
cmp
dec
pop
cmp
ljmp
incb
out
lods
fwait
test
fnstcw
push
fbld
iret
test
push
cld
push
inc
xchg
arpl
and
mov
sbb
cmp
test
mov
mov
mov
popa
in
fwait
jbe
xchg
sti
sbb
xchg
inc
sbbl
and
pop
fdivs
jo
jne
mov
aaa
xorb
jl
sub
insl
jmp
jns
jns
jecxz
push
movsb
outsl
imul
cmpsl
lcall
insb
ljmp
ror
ds
fisttps
inc
and
cwtl
int
fldt
ja
dec
cmp
cmpsl
stos
pop
dec
inc
jne
repnz
push
mov
sub
jae
mov
inc
jmp
lds
xor
or
into
or
stos
mov
xor
addb
fwait
cmc
out
fbstp
and
or
or
add
push
mov
jnp
cmp
xor
xor
sbb
rorl
bound
cmpsl
cs
stc
adc
mov
jl
mulb
lods
stc
cmp
mov
mul
lds
testl
inc
pop
mov
cmpsl
adc
xor
adc
sub
pop
shll
loopne
mov
repnz
add
mov
test
imul
mov
xor
addr16
or
es
icebp
xchg
ss
test
call
fmuls
test
ret
loope
pop
int3
lock
sub
sti
dec
les
mov
push
xchg
test
test
mov
mov
xor
js
inc
xchg
fidivrl
or
jns
scas
push
lcall
cmp
sbb
push
stos
test
leave
cmp
or
stos
scas
or
ret
lea
and
sbb
add
mov
xor
mov
and
and
arpl
mov
jle
jmp
xchg
add
mov
je
mov
cmpsl
pop
add
enter
xchg
or
cmp
mov
cs
push
js
popl
test
fstp
adc
mov
call
sbb
pushf
jmp
push
add
dec
jmp
and
sahf
dec
in
xor
mov
or
jae
je
push
sub
aad
loope
xchg
pop
in
hlt
inc
out
dec
push
pop
jg
and
lds
mov
in
iret
repz
xor
xlat
adc
sub
add
cmp
jne
rolb
rorb
pushf
aam
pop
stos
mov
push
in
jne
lret
stos
jae
mov
dec
lods
sbb
pop
and
push
gs
xor
xchg
mov
aam
jl
insl
or
sbb
leave
or
mov
adc
inc
mov
push
mov
add
mov
incl
pop
mov
mov
push
sbb
lods
or
mov
mov
xor
into
dec
mov
and
movsb
cld
andb
sub
sti
in
call
stos
or
lods
lret
dec
fdivrs
mov
repz
mov
out
jae
test
jecxz
std
and
int3
imul
sub
adc
cltd
mov
push
adc
pop
jl
popa
or
add
cltd
into
dec
iret
mov
clc
loopne
jo
clc
mull
jmp
adc
shl
mov
adc
mov
push
inc
xor
in
ds
push
jb
jae
jns
add
into
pop
push
in
mov
xchg
fistpll
cltd
jecxz
imul
xchg
inc
sub
pop
aaa
xchg
push
push
pop
jmp
out
fs
mov
cltd
les
pop
stos
mov
stos
jle
and
je
jne
pop
or
cs
push
cmpsl
adc
lret
push
icebp
insb
jbe
xchg
push
dec
outsl
mov
lods
fsts
push
mov
xchg
mov
xlat
push
sbb
inc
divl
mov
bound
subb
push
push
testl
imul
pop
out
cmpsb
dec
adc
xor
test
adc
lahf
int3
push
nop
cld
scas
shlb
nop
push
cld
data16
dec
adc
insb
or
lret
push
and
enter
mov
mov
orb
xchg
cmp
add
scas
mov
test
inc
jbe
ja
clc
xor
pop
movsl
jl
lods
mov
cmp
push
cwtl
inc
cwtl
xchg
mov
stc
cmpsl
scas
cli
lock
jne
mov
fstpt
lds
int
push
insl
popf
arpl
mov
add
lock
out
lea
jl
subb
mov
cmp
jle
insb
ds
mov
jno
mov
mov
push
dec
stos
ret
int
fucomi
xchg
sub
movsl
adc
cmp
aam
push
rcrb
scas
insb
call
rolb
cmp
imul
pusha
subl
pop
jbe
jp
adc
test
or
call
cmp
xchg
jecxz
testl
mov
imul
out
loope
loope
xchg
mov
leave
jnp
rcl
add
dec
outsl
pushf
cmp
dec
aam
out
dec
jae
add
xchg
mov
pop
adc
dec
cmp
and
cmpsb
sub
fdivrs
mov
movsb
xchg
rclb
jmp
mov
pop
lock
push
push
or
fwait
xor
xor
sbb
shrl
sub
addr16
xchg
ret
cmp
imul
fldcw
pop
imul
pop
test
mov
scas
insb
test
pop
xchg
xor
mov
push
mov
inc
mov
and
push
mov
xor
and
xor
xor
test
xor
and
loopne
xchg
push
daa
fsubp
xor
mov
je
insb
jb
pop
lds
clc
loop
shll
movsl
push
cmp
stos
nop
mov
cmp
mov
lods
into
repnz
enter
mov
inc
mov
inc
pop
sbb
stc
movsb
cmp
stos
inc
pop
cmp
xchg
daa
mov
mov
sbb
sub
insl
cmpb
dec
mov
mov
adc
mov
mov
jle
push
inc
es
jb
pop
push
popa
inc
ja
sarl
jbe
add
in
test
lods
pushf
and
hlt
sti
outsl
aaa
loope
shlb
jecxz
outsb
mov
jg
mov
int3
add
ficomps
hlt
lods
cmp
popa
and
push
add
in
or
sbb
mov
inc
out
into
cmpsb
nop
hlt
pushf
and
mov
xchg
xor
rcll
mov
lock
testb
mov
sub
pop
pop
push
loop
mov
orl
pop
push
sub
aam
or
push
inc
fbld
cmp
xchg
cmp
fdivrl
mov
mov
and
mov
daa
pop
xor
jecxz
mov
rcrb
sub
xchg
gs
enter
pop
jecxz
mov
cmp
cmp
sti
or
orl
ret
cwtl
loopne
jns
push
insl
or
aam
push
and
mov
pop
sbb
jae
dec
cmovge
fadds
xor
mov
aas
mov
pop
sub
mov
scas
sub
or
dec
stos
xor
testl
sbb
inc
jo
mov
cmp
pop
lds
ret
xchg
mov
mov
mov
nop
xchg
je
inc
cmp
jp
into
dec
enter
xchg
mov
popf
stos
inc
xchg
subl
movsl
sub
aas
add
push
pushf
pop
mov
gs
js
inc
cmc
fistpll
es
xor
leave
stc
shrb
loop
mov
sub
test
ror
popa
js
mov
pop
and
sbb
xchg
hlt
jbe
fsubrs
ja
push
scas
jae
push
add
jg
bound
inc
fsubrs
mov
mov
ret
push
jbe
inc
fstl
mov
inc
shlb
rcll
and
sub
xlat
adc
imul
or
pushf
jo
or
mov
sti
or
movsl
fldcw
jno
loope
xchg
rcll
mov
or
adc
je
inc
fwait
inc
ja
pop
leave
loope
and
scas
jno
out
das
rolb
pop
mov
mov
xlat
mov
and
ficomps
sub
jmp
roll
mov
loopne
inc
aas
pop
fwait
jecxz
xor
nop
push
icebp
gs
xor
mov
jnp
xchg
out
pop
xchg
sub
pop
mov
mov
test
mov
fisttpll
int3
cld
fidivl
dec
into
sub
es
movsl
fstl
outsb
mov
pop
mov
xor
shr
inc
test
cmp
push
into
jl
lret
xor
repnz
xor
cwtl
dec
rorb
nop
bnd
push
pop
divb
mov
cmp
xchg
mov
mov
push
and
addr16
test
aad
icebp
or
pop
dec
mov
fxch
sbb
and
ror
mov
or
je
jg
sub
sub
mov
inc
xor
adc
xor
mov
dec
lods
mov
scas
mov
jo
jns
inc
pop
les
and
cmp
jb
inc
insl
out
movsl
xlat
mov
push
jns
in
xchg
repnz
out
dec
fs
ja
sub
and
and
push
pop
xor
pop
push
jb
cltd
sahf
daa
mov
stos
addr16
cltd
std
test
jg
fisttpl
outsb
add
cs
mov
xchg
mov
add
xchg
jo
push
mov
mov
or
xlat
ficomps
cmp
push
lahf
inc
fcoml
inc
pusha
inc
jae
jl
stc
fwait
jmp
and
xorl
lahf
idiv
ja
ss
mov
xchg
repnz
sub
in
fsubp
imul
and
mov
test
xor
daa
push
test
aaa
mov
cltd
xor
gs
mov
pop
cmpsb
adc
movsl
or
leave
fimull
jnp
xor
lock
add
out
cmp
fstpt
lcall
cmc
mov
cmovp
mov
lahf
test
xor
inc
sub
pop
scas
adc
or
mov
jne
sub
xchg
out
outsb
stos
lods
push
adc
push
outsl
inc
or
and
scas
pushl
sbb
and
cltd
leave
popa
fwait
sbb
imulb
sbb
jle
test
cwtl
mov
mov
test
icebp
mov
inc
out
cmp
movsl
cmp
jbe
adc
in
mov
inc
sub
sbb
fiaddl
fbstp
mov
in
xchg
leave
aas
jo
push
pushf
ds
mov
pop
mov
stc
ret
fwait
psrad
jb
loope
or
mov
dec
insl
lock
cmp
and
test
clc
jne
sub
mov
push
sub
sbb
iret
imul
imul
sbb
mov
jns
arpl
inc
cmc
mov
and
jg
imul
sbb
scas
push
adc
push
push
jle
cld
dec
inc
or
push
inc
or
pop
sarl
xchg
enter
mov
shll
insl
lea
cmc
and
dec
inc
shlb
pop
sub
movsl
nop
mov
iret
repnz
or
and
lcall
sahf
cld
das
cmp
pop
xor
push
out
sbb
in
adc
fstpt
bound
push
adc
mov
push
inc
adc
inc
cmp
cmp
mov
inc
adc
ss
jp
das
out
lock
rorl
xchg
loope
dec
sub
in
xchg
rcrb
jb
sbb
mov
fistpl
addr16
mov
fs
or
or
cmc
pop
sub
call
sub
sbb
cmpsb
mov
mov
sti
cli
inc
jbe
jo
mov
fists
adc
popa
push
lret
addr16
repz
mov
movsb
jecxz
adc
push
stos
clc
mov
mov
sbb
lea
in
stc
adc
cli
or
and
ret
inc
ret
gs
pop
mov
pop
xchg
rcl
repnz
icebp
push
push
loop
inc
xchg
mov
ljmp
and
jp
ja
cmpl
testb
or
cltd
imul
fidivrs
adc
jecxz
insb
lahf
dec
lods
and
cmp
out
mov
mov
mov
jecxz
jge
mov
mov
pop
sub
inc
push
push
int3
dec
push
out
mov
mulb
jb
ret
xchg
iret
cmovnp
xchg
scas
cltd
mov
stc
jbe
adc
call
inc
sbb
test
mov
mov
imul
mov
ja
mov
sbb
mov
insb
test
push
inc
nopl
lret
inc
add
int3
repz
mov
pushl
loope
jb
inc
sbb
fwait
dec
bound
addb
jns
fimuls
adc
or
bound
or
pop
lahf
jo
push
mov
adcl
in
jo
mov
xchg
bound
mov
jp
movb
iret
push
pusha
jecxz
push
popf
xor
dec
mov
sti
scas
dec
bndstx
movsb
sbb
cmpsb
imul
int3
xor
pushf
sub
adc
mov
pop
rcrl
and
xchg
ss
and
and
repnz
adc
test
add
fidivl
sbb
nop
stc
adc
dec
mov
into
loope
add
mov
cmpb
je
aaa
pop
stos
subl
imul
jae
and
xchg
and
xchg
movsb
and
inc
loop
sbb
call
dec
mov
aaa
dec
nop
or
or
mov
cmp
das
jae
pop
or
mov
subl
fisubrl
add
stos
ss
mov
idivb
cmpsl
repnz
testb
push
pop
or
push
add
dec
ret
test
xchg
das
sub
mov
ret
cld
add
div
in
scas
data16
data16
sbb
sbb
jl
mov
adc
and
test
mov
jmp
or
insl
loope
mov
xchg
add
xor
xchg
xor
cmc
jns,pt
insb
and
pop
mov
pop
scas
jae
movsl
rcr
movsl
mov
pop
pop
mov
pop
cmp
cmpsl
cwtl
inc
sti
add
outsl
sahf
add
popf
ss
push
sbb
mov
cli
cmc
fildll
loop,pn
ss
inc
xchg
ret
ss
inc
xor
shll
push
mov
enter
ljmp
testb
sbbl
loopne
lods
add
mov
adc
sub
jmp
int
sbb
jmp
inc
cmp
mov
lock
and
mov
out
push
cmpsb
lds
push
add
push
dec
pop
pop
sbb
mov
sub
push
jb
xchg
xor
sbb
jg
jne
scas
xchg
xchg
xchg
inc
push
repz
xorl
lds
cmpsb
aas
mov
cmp
dec
lods
jbe
push
xor
xchg
adc
sub
dec
xchg
imul
mov
addr16
stc
int3
aaa
mov
mov
and
sub
sbb
mov
push
push
outsb
or
test
jae
xchg
pop
or
mov
dec
dec
cmp
mov
and
sub
cmpsl
xor
xor
xor
push
aam
negl
or
xor
aad
adc
pusha
lds
jnp
xchg
mov
sbb
js
iret
scas
mov
mov
rol
fwait
aam
int
movsl
jne
sbb
mov
pop
popa
adc
clc
js
add
xor
jecxz
les
ds
pop
cmp
mov
std
xchg
adc
cs
sub
pop
test
cmp
and
fstps
mov
lock
roll
dec
jb
and
inc
sahf
pop
flds
arpl
sbb
divl
sbb
mov
shr
nop
cli
cmpsb
in
dec
mov
sbb
addr16
pop
push
push
mov
push
stc
jmp
cmpsl
inc
lcall
add
sbb
imul
pop
pusha
cmp
sub
pop
aas
mov
adc
mov
jbe
bound
mov
dec
pop
repnz
es
and
lahf
mov
sbb
mov
std
sbb
inc
pop
ljmp
enter
lcall
jp
in
popf
add
or
pop
stos
cld
in
push
xchg
cld
or
arpl
adc
test
mov
push
cwtl
cmp
dec
xchg
sbb
xor
mov
loope
lret
rcr
mov
loope
bound
inc
ss
pop
test
mov
fbld
push
test
xchg
lds
out
lea
or
jmp
pand
rcr
stos
psubq
filds
sti
mov
dec
mov
fwait
push
test
inc
hlt
jnp
aad
adc
jne
mov
cmp
test
xchg
jns
sub
nop
std
and
cmp
or
repnz
mov
inc
fcoml
outsl
jo
in
mov
add
add
add
stos
and
jl
mov
mov
and
sbb
mov
mov
push
test
mov
arpl
stc
mov
push
mov
jmp
mov
xlat
bound
out
dec
mov
mov
pop
in
xchg
lcall
xchg
cmp
xchg
stc
sub
out
fisttpl
sti
jbe
mov
push
lea
inc
in
jg
or
mov
fidivrs
cld
adc
scas
icebp
xor
or
pop
add
jecxz
leave
icebp
stos
mov
mov
xchg
dec
test
adc
xchg
movsl
movsl
or
inc
aad
add
cwtl
fstps
faddp
adc
pop
xchg
mov
xchg
sti
jp
dec
or
and
mov
bound
xor
mov
cmp
mov
adc
pop
xor
cltd
fcompl
rolb
dec
les
xchg
repz
cmpb
fcos
fwait
jo
mov
xor
or
push
cmpsl
mov
ljmp
inc
insb
loopne
dec
xchg
imul
les
or
mov
icebp
xlat
inc
fcomip
mov
icebp
inc
mov
inc
imul
mov
data16
push
and
mov
mov
xchg
sub
cli
insl
mov
lock
mov
cmpsl
test
rcll
adc
adc
pusha
xchg
ja
push
insl
pop
or
shl
fcomp
add
sbb
push
fnsave
cmpsl
jo
mov
scas
sbb
mul
mov
faddl
xor
cmpsl
mov
rol
in
xchg
jmp
sbb
mov
or
add
xchg
add
cmp
or
cmp
push
leave
mov
and
pusha
jnp
sub
push
pop
jo
sub
shrl
cwtl
mov
mov
ror
outsb
pusha
and
sub
stc
out
push
and
xchg
fwait
iret
movsl
jle
movsl
xchg
pop
outsl
and
lea
add
mov
into
cwtl
pop
pop
jno
pop
lock
shr
inc
adc
cld
vmread
popf
ss
add
je
mov
lods
adc
dec
icebp
mov
mov
mov
jp
test
adc
movsb
add
aaa
fnstcw
insb
mov
in
jecxz
and
sub
mov
scas
inc
dec
popa
and
sub
ljmp
mov
fiadds
test
add
scas
cs
in
mov
push
std
pop
or
mov
shrl
std
pop
flds
cwtl
jp
mov
pop
btc
mov
sub
test
addr16
pusha
ljmp
std
push
fnstsw
decb
lahf
mov
push
int3
jp
enter
push
cld
or
sub
leave
cmp
push
inc
out
mov
and
xor
jae
cmp
lods
or
push
les
int3
jmp
std
lcall
loop,pn
test
loop
add
jno
mov
jne
pop
loop
divb
and
pop
dec
xchg
lods
cmp
adc
in
xchg
push
jae
sbbb
sahf
push
cli
adc
xchg
loope
xor
incb
pop
sub
push
xchg
push
mov
mov
sbb
ret
jmp
stc
sahf
adc
push
adc
mov
lahf
dec
scas
and
pop
mov
hlt
pop
xchg
int
mov
pop
inc
sub
pusha
or
jnp
and
dec
inc
loope
mov
sbb
mov
loop
subb
es
repnz
sahf
pushf
mov
pushf
cld
popf
dec
std
lret
out
repnz
or
or
fildl
sub
xchg
fnstsw
shlb
jle
sub
hlt
xchg
xchg
mov
push
lahf
or
mov
sub
mov
insl
stos
insb
cmp
jge
cltd
pop
jb
sbbb
add
lods
mov
inc
dec
sub
test
mov
pop
test
cmp
mov
pop
lea
aas
rcrl
mov
dec
sahf
js
inc
cmpsl
in
sbb
xor
push
ja
cmp
jo
mov
add
xor
inc
push
mov
stc
imull
cmp
cmc
adcl
mov
js
je
fs
ret
push
in
icebp
inc
shll
test
mov
test
test
cs
hlt
fwait
fs
adc
pop
rolb
adc
push
jbe
ljmp
outsb
scas
mov
lcall
inc
out
divb
add
pop
jecxz
fprem1
sbb
inc
mov
add
push
xchg
and
pop
mov
or
es
xchg
out
js
je
inc
fnstcw
dec
imul
in
mov
movsl
inc
hlt
mov
ljmp
add
lds
imul
lods
mov
sub
sbb
add
aam
and
push
pop
mov
mov
cmpsb
push
xchg
and
jecxz
shlb
flds
jecxz
fwait
or
xchg
or
inc
sub
fisttps
cmp
jo
enter
add
push
loope
mov
inc
push
inc
leave
mov
dec
dec
mov
xchg
jae
rcr
mov
adc
adc
push
fnsave
fnsave
mov
xchg
xor
lods
scas
cmp
imull
lods
fisubl
xor
fcom
inc
mov
shl
fxam
scas
in
shrb
scas
pop
insb
das
test
adc
popa
xor
aaa
addb
and
int3
outsb
test
mov
dec
cs
jge
negb
dec
jmp
cli
jecxz
shlb
dec
outsb
addr16
mov
repnz
sub
sbb
movsl
nop
xchg
aaa
cmp
stos
cltd
lods
pop
and
cmp
dec
ljmp
pop
movsl
call
fwait
xchg
sub
cmpl
jno
int
addb
sbb
lret
enter
dec
or
scas
popf
stos
ret
xchg
mov
out
cmp
ret
sahf
or
ja
icebp
sbb
pusha
lods
pop
mov
push
int3
out
mov
pop
imul
add
inc
or
pop
adcl
pop
jg
into
or
mov
mov
xchg
cwtl
fdivs
stos
mov
fildl
sub
repz
push
xchg
inc
mov
arpl
clc
test
xchg
or
add
lret
fidivs
sbb
lret
xor
sub
mov
hlt
les
and
xchg
stos
push
ret
push
mov
rclb
in
lret
sub
sub
pusha
sbb
jno
repz
data16
hlt
shrl
jb
cwtl
out
imull
shl
lret
fs
sbb
mov
and
add
mov
xor
cltd
insb
pushf
jl
testl
idivl
mov
dec
dec
out
arpl
aas
adc
adc
movsb
dec
je
clc
mov
or
das
mov
mov
iret
les
cwtl
xchg
fisttpll
mov
movsb
das
rorb
aas
xor
push
dec
sbb
sahf
mov
push
xchg
push
ret
stos
jecxz
sbb
bound
mov
mov
aaa
outsl
xchg
mov
inc
ficomps
xchg
cmpsl
fs
mov
movsb
cli
push
xor
xchg
sbb
jg
adc
repnz
push
enter
xchg
push
repnz
movsl
pop
dec
xchg
gs
jecxz
push
insb
enter
mov
push
shll
cltd
popf
shl
add
lock
xchg
lods
add
bound
or
je
push
jge
leave
ret
sub
fsubs
negl
and
ja
daa
push
outsb
jne
mov
fwait
jno
pop
bound
lds
cltd
xchg
or
fadds
add
data16
add
pop
pop
bound
scas
mov
mov
cmp
push
cmp
stos
jp
mov
fstps
out
dec
mov
lret
pop
je
xor
nop
mov
and
xchg
popa
rorb
movsb
push
in
repz
inc
cmp
stc
jl
add
outsb
pop
jmp
sbb
fucomi
xchg
dec
sahf
clc
pop
mov
jmp
jbe
mov
jne
mov
xor
ss
mov
push
dec
std
xor
adc
pop
das
mov
pop
jb
xor
xchg
imul
pop
mov
mov
ret
cmp
xor
jne
lods
sahf
sub
insl
int3
ss
mov
add
aam
sbb
adcl
in
testl
adc
mov
fmull
adc
adc
shll
pop
inc
cmp
outsl
xor
xor
mov
sbb
das
rsm
mov
jne
add
dec
mov
leave
ljmp
push
out
shlb
filds
pop
dec
lods
mov
inc
jne
out
fwait
mov
lea
pop
cmp
or
daa
js
outsl
mov
test
fcmove
xchg
dec
push
cmpsb
xchg
addr16
mov
fcmovnbe
pop
push
pop
shlb
bound
xlat
cmp
notb
pop
bndldx
fwait
or
test
loop
fisttpll
mov
sub
pop
mov
jmp
inc
insb
outsl
add
lock
dec
loop
adc
mov
adc
imul
loopne
adc
pop
and
mov
cmp
and
mov
sub
testb
call
mov
pushf
sub
in
ss
add
mov
mov
bound
lret
xchg
data16
outsl
adc
jns
push
cmc
add
js
inc
out
das
inc
fwait
in
mov
scas
xor
ljmp
aaa
inc
push
outsl
cld
jle
daa
sarl
adc
sub
push
aam
jmp
in
clc
cmp
mov
inc
cmp
shrb
inc
outsl
push
push
je
inc
movsl
sbb
and
cmp
mov
enter
insl
pop
push
sbb
ret
mov
xchg
cmp
testl
jl
xchg
in
inc
xor
shlb
pop
mov
repnz
je
push
inc
pop
aas
dec
lock
and
dec
mov
cs
sub
sub
push
into
and
pop
xchg
mov
inc
lahf
iret
cli
cmp
push
mov
inc
jbe
sti
stos
aam
cmp
insb
fidivrs
movsl
push
out
inc
mov
shll
mov
and
xor
sub
mov
ficomps
mov
mov
pop
and
andl
test
or
push
into
int3
sub
mov
mov
inc
mov
arpl
sbbb
jne
cmp
inc
mov
sub
xor
adc
mov
fistps
int
and
add
pop
jae
jecxz
and
sbb
scas
ret
and
insl
pop
mov
mov
cltd
jae
xor
push
mov
jl
lret
cmp
out
xchg
and
fadds
fdivl
ret
mov
mov
push
cmpb
mov
movl
mov
imul
xor
mov
add
push
inc
outsl
movsb
adc
jb
xlat
sbb
xchg
sub
ds
or
sbbl
in
shlb
into
cltd
mov
idivl
movsl
addr16
sti
xor
xlat
sbb
xchg
iret
icebp
add
sub
in
mov
jne
pop
push
loopne
sub
jb
push
push
sub
nop
jmp
movsb
adc
mov
push
imul
inc
shlb
cmpsl
mov
dec
andl
loop
or
xor
mov
or
aam
or
xor
mov
xor
cmpsl
ja
dec
pop
push
loop
cmp
addr16
mov
push
push
fimuls
pusha
gs
rcrb
sbb
jno
call
jno
xchg
pop
dec
imulb
inc
fmull
aam
xchg
fdivl
and
pop
repnz
stos
jge
aas
push
es
adc
mov
cmp
filds
xchg
stos
sbb
dec
xchg
sbb
dec
sbb
pop
lret
bnd
sub
lock
movsl
pop
arpl
cmc
sbb
into
xchg
leave
jl
inc
cli
bound
into
push
mov
adc
pop
aas
outsl
dec
jecxz
test
aam
dec
or
mov
fcompl
lods
ret
aam
mov
inc
sub
or
cli
sub
push
dec
jbe
lret
jle
xor
mov
mov
scas
push
sbb
testb
cmp
jnp
mov
outsl
aad
push
filds
clc
shl
xor
notl
lahf
add
nop
mov
aam
out
paddsw
and
lret
or
xchg
movsl
jbe
pop
nop
int
fs
lcall
mov
sub
mov
aas
mov
cmpsl
or
fwait
jecxz
sub
shlb
jg
push
pop
xor
data16
xchg
in
aad
iret
pop
and
pushf
jno
mov
leave
jecxz
out
out
adc
jp
pop
add
sbb
xchg
jno
xchg
or
cmc
aaa
xchg
ficoms
call
add
lods
cmp
into
mov
mov
jp
xchg
call
lods
xor
sbb
inc
aaa
rolb
jmp
test
xor
orl
into
dec
mov
inc
and
mov
add
iret
and
shrl
add
or
adc
std
mov
ja
mov
lcall
mov
mov
cmp
lret
push
mov
insl
test
ud0
pop
ljmp
insb
xor
cmc
loopne
xchg
mov
mov
pop
out
lahf
orb
jl
mov
add
xor
inc
outsl
ljmp
inc
or
leave
pop
xchg
pop
mov
repnz
icebp
jns
xor
andb
add
shl
sub
inc
dec
js
lods
jns
sub
dec
xor
jle
daa
les
or
and
mov
sub
sub
icebp
adc
cmpsb
ss
les
mov
outsb
xor
adc
inc
jl
add
xchg
jo
inc
inc
inc
rcr
test
fcmovb
jecxz
push
add
xor
cmp
and
ja
push
push
sahf
adc
test
inc
sub
cltd
in
push
jae
xchg
out
jmp
push
ficoml
pop
stc
clc
pop
test
stc
outsb
sets
stc
jno
test
jge
aaa
xchg
cmc
cmpsl
adc
xor
and
mov
adcb
add
rsm
sbb
push
insl
cmp
scas
outsl
mov
adc
cmp
cmp
cmp
stos
dec
xchg
and
dec
cs
jle
mov
sahf
mov
add
push
add
outsl
and
test
pop
add
mov
sbb
fidivrs
fwait
inc
sub
xor
dec
jb
clc
outsb
cmpsb
clc
ficoms
pop
sub
js
mov
pop
mov
pop
and
or
inc
shr
sbb
pop
int
jmp
lods
insl
jbe
gs
daa
mov
xor
sub
mov
out
pop
popf
xchg
outsb
out
scas
cmp
xor
sti
mov
test
cmc
int
mov
jmp
gs
mov
popf
dec
fwait
push
push
aad
insl
xchg
add
inc
cmp
mov
repnz
lds
mov
mov
in
add
xchg
mov
and
mov
jmp
mov
pop
inc
leave
flds
cli
adc
or
shrb
inc
out
dec
push
or
int
nop
lds
xchg
sub
imul
pop
aaa
or
stos
lcall
aaa
lea
test
and
jno
xchg
cwtl
xor
je
and
or
inc
and
dec
repnz
shl
out
add
popf
cmp
test
ret
out
iret
sbb
mov
sub
insb
mov
pop
loop
data16
fistl
scas
pusha
popf
gs
inc
xchg
inc
mov
je
nop
lods
sbb
inc
xor
idiv
out
adc
mov
in
xchg
add
mov
inc
adc
iret
repz
lods
mov
imul
imul
pop
adc
out
sbb
aas
jns
or
mov
push
add
push
dec
arpl
outsb
pop
stc
mov
test
aam
xor
jne
ljmp
das
xchg
int
mov
je
xor
xchg
fimuls
aaa
std
and
mov
xor
add
inc
pop
lods
xchg
sub
lret
cli
push
xor
imul
ficoml
xor
push
popa
sbb
add
jbe
push
jae
push
inc
into
mov
sub
in
jle,pn
aaa
bound
push
je
sub
xor
mov
roll
jnp
push
mov
push
mov
xchg
mov
mov
pop
fldcw
xor
jge
dec
xchg
push
cmpsb
clc
pop
je
call
lret
lock
xor
jns
ja
shrb
in
frstor
add
mov
and
push
fstps
pop
adc
addr16
inc
rcll
pop
xchg
call
xchg
inc
push
es
inc
mov
mov
and
movsl
dec
loop
aam
test
test
push
pop
cmp
jl
popf
pop
sub
and
aam
lret
mov
sub
test
aad
mov
loope
into
in
adc
push
push
repz
das
gs
or
inc
shll
scas
mov
xchg
lret
mov
xor
outsl
mov
pop
roll
imul
nop
add
je
xchg
bound
popa
in
test
lret
mov
lcall
enter
fwait
cmp
test
jge
leave
push
jg
adc
imul
daa
mov
rcll
fsubs
or
inc
or
mov
bswap
lock
sbb
insb
std
out
std
push
leave
pop
push
fisttpl
sbb
loop
iret
mov
push
push
dec
outsb
xor
les
scas
icebp
sub
dec
imul
enter
mov
jae
and
sub
jbe
push
add
add
cmp
inc
imul
mov
loopne
pop
out
sub
clc
sub
dec
or
mov
js
in
ljmp
sbb
sub
mov
dec
pop
fcomps
xor
inc
data16
cwtl
sti
das
dec
lcall
mov
loopne
dec
fmuls
pop
stos
lods
gs
mov
push
nop
jbe
push
jge
cli
sahf
adc
mov
pop
fcmovu
fwait
addr16
mov
add
jge
add
lds
and
or
outsl
lcall
out
adc
pop
movsl
and
fcmovnb
mov
lods
pop
cmp
fimuls
dec
xor
add
xchg
xchg
mov
add
sbb
mov
shll
push
cmc
out
lea
mov
leave
add
fsubs
dec
ret
mov
xchg
mov
adc
push
retw
and
popf
xor
inc
mov
scas
sbb
xchg
loopne
xor
mov
nop
inc
shl
lea
stc
cltd
call
sbb
addl
addr16
mov
iret
lock
xchg
jge
and
mov
sub
aam
mov
ljmp
ljmp
stos
outsb
mov
mov
jae
fidivrl
stos
idiv
stc
mov
fcmovnu
adc
mov
int3
jb
sbbl
imul
inc
testb
mov
ljmp
fadds
mov
cmc
sbb
fbstp
cmp
aam
push
or
enter
iret
and
xchg
mov
in
inc
lea
jmp
loop
int
mov
add
outsb
loop
or
mov
ja
fldcw
ljmp
les
lcall
testl
es
sbb
sub
rorl
mov
pushf
sub
push
cli
popf
push
sbb
rcrb
jae
mov
pop
and
lods
icebp
mov
lcall
mov
xchg
inc
shr
fs
mov
and
aam
xlat
aad
adc
ret
pop
sub
jmp
push
jecxz
push
mov
test
imul
xor
xchg
outsl
and
repnz
push
adc
sub
in
mov
sub
sub
shrb
jl
inc
and
mov
fstpt
xor
or
pop
insl
test
mov
cmp
rorb
add
mov
pop
in
scas
sub
aas
adc
jmp
inc
or
push
pop
or
je
cmp
jle
sbb
adc
sarl
lahf
clc
popf
xchg
movsb
inc
and
sub
pop
ds
xchg
and
fstps
aad
std
xchg
cli
jnp
mov
or
xor
cwtl
aad
pop
ret
lea
inc
insb
add
into
dec
into
insl
mov
jmpw
jne
jecxz
jbe
mov
add
mov
push
out
and
mov
pop
push
xchg
push
outsl
pop
cli
jnp
and
fs
mov
loope
mov
ja,pt
pavgw
sti
dec
mov
mov
sbb
scas
stc
mov
insl
sub
int3
stc
subb
mov
jbe
es
pop
loopne
push
xor
or
hlt
lcall
scas
adc
popf
rep
stos
shrl
cwtl
inc
les
jno
and
mov
les
aas
pop
jo
int3
sub
popf
cmp
inc
fwait
lret
into
iret
push
lahf
mov
or
sbb
sahf
add
sbb
xchg
leave
pop
jbe
rcrl
pop
lret
movsl
iret
clc
fnstsw
ja
cmpsl
push
xlat
sub
stos
push
cmp
pop
pusha
push
leave
addr16
push
sub
inc
call
shl
pop
pushf
loop
cmp
iret
sbb
gs
bound
xchg
adc
scas
xor
jb
sbb
xchg
sub
push
pop
adc
fs
sub
mov
hlt
pop
out
mov
adc
xchg
mov
push
inc
arpl
inc
test
push
arpl
mov
sub
aam
sarl
aam
adc
add
lock
pop
jl
or
ret
lahf
xor
mov
ret
sub
mov
xchg
aaa
pop
xor
jae
rolb
out
cmp
mov
loopne
test
pop
mov
test
jo
xchg
or
or
jecxz
ds
jae
in
mov
push
pop
mov
pop
mov
xchg
jb
cmp
ljmp
outsb
cmp
popa
cltd
stos
add
xchg
int
sti
sarb
mov
push
or
stos
push
les
bnd
lahf
and
dec
orl
inc
adc
frstor
push
int
xlat
mov
mov
pop
in
push
mov
arpl
pop
adc
xchg
mov
call
mov
ds
xchg
cmp
inc
cltd
addr16
mov
xchg
mov
pop
pop
loope
sti
lds
out
idivl
mov
lahf
outsb
cmp
adc
js
and
cmpsb
stos
in
xchg
icebp
xchg
lahf
adc
aad
dec
gs
and
mov
subb
sub
imull
adc
imul
sbb
shrl
imul
lods
and
cmc
lret
or
dec
cmp
jae
sub
push
mov
adc
sbb
popf
cmp
and
adc
push
sub
push
or
rcl
dec
or
imul
inc
imul
fistpl
add
sub
add
cmp
inc
stc
ret
cmpsb
lods
mov
jle
sub
aas
cmp
dec
sbb
ret
loopne
test
jae
aaa
mov
pop
sub
pop
push
addr16
fisubrs
and
out
mov
lds
cltd
popa
aas
jnp
test
mov
addr16
rcrl
adc
jmp
ja
jl
add
inc
sub
scas
mov
cltd
fistps
scas
in
jg
psubd
cmp
mov
jl
test
movsl
rcr
lret
xchg
insb
dec
or
and
loop
mov
xor
out
add
cli
push
jl
cwtl
fs
jae
or
dec
cmp
add
mov
add
movsb
pop
cmpsb
js,pn
or
lret
jl
cmp
cmpsb
add
stc
or
cltd
lea
xchg
push
sti
sarb
or
sahf
je
std
data16
add
jmp
arpl
sbb
add
dec
xor
add
adc
jl
mov
insl
adc
rolb
cmp
push
push
pop
or
xor
cwtl
test
mov
outsb
and
jp
mov
sbb
lret
xor
mov
mov
or
cli
cmpsb
xchg
inc
aam
mov
lea
dec
mov
dec
and
in
test
nop
sub
or
outsl
sbb
scas
ret
sub
in
outsl
add
mov
in
cmp
lret
cmpsb
push
insl
mov
in
ret
xchg
movsb
xchg
xchg
lcall
insb
push
mov
and
fistpl
fiadds
ja
push
popf
mov
pop
pop
cmp
adc
sbb
sub
fidivs
push
scas
stos
insb
rcr
sahf
movl
arpl
mov
fwait
sbb
imul
daa
les
ss
mov
sbb
xor
sub
lock
popa
xorl
xchg
nop
dec
dec
add
mov
sbb
fistpl
stos
mov
mov
outsl
jbe
loope
bound
mull
adc
test
das
and
stos
push
xlat
lods
loop
lcall
and
inc
jae
iret
adc
fildll
bound
pop
inc
call
dec
jbe
sub
test
enter
or
es
adc
push
inc
rorl
jnp
xor
mov
addl
mov
insl
in
mov
fsubrl
adcl
repz
mov
mov
mov
das
daa
xor
ds
ret
jo
leave
out
jmp
pop
cmp
mov
frstor
jecxz
clc
cli
aad
stos
push
add
repz
cli
int
test
cmp
mov
ja
pop
and
stos
or
outsb
sbb
fisubrl
in
dec
xchg
adc
lea
sahf
lods
sahf
push
xor
cmp
fldenv
std
pop
jnp
leave
out
lcall
add
inc
test
push
test
aas
and
fcoml
adc
enter
dec
loopne
mov
lea
stc
inc
mov
adc
jne
sbb
jl
cli
fcoms
sbb
and
push
dec
aas
out
xor
mov
addb
stos
test
mov
mov
insb
loope
mov
rol
and
stc
lcall
scas
sbb
pop
jne
jl
ljmp
idiv
cs
je
xor
jns
inc
sbb
jnp
mov
test
xacquire
jmp
mov
in
pop
js
jmp
pop
push
pop
pop
push
jno
cmc
sub
sti
mov
dec
or
add
sub
pop
int3
test
arpl
cmpsl
aas
out
xlat
mov
in
cmp
pop
sub
mov
jg
test
mov
adc
ljmp
jo
push
mov
push
pop
or
adc
cmp
push
jb
and
arpl
jge
loop
cmp
sub
gs
ror
loop
cmpsb
jmp
js
jmp
sbb
mov
jns
das
ror
or
fnstenv
inc
pop
sti
jae
rcrb
nop
in
mov
scas
xchg
ret
mov
cli
sbb
rorb
pop
mov
or
cmp
jle
cwtl
int
fsubr
call
mov
icebp
outsl
mov
push
add
ljmp
xor
in
mov
push
outsl
repz
fimuls
negl
subl
int
pop
push
pop
aam
call
aaa
sub
xor
add
adc
pop
adc
jmp
outsb
movsl
stos
mov
ds
in
mov
movsl
inc
and
and
dec
mov
in
inc
add
cld
lds
jmp
iret
sub
arpl
mov
fdivrs
rcrl
test
cmc
cmp
cmp
in
push
xor
lock
push
imul
dec
js
cld
push
popf
dec
fsubs
lahf
stos
cmp
mov
sti
dec
in
pop
mov
push
fdivr
push
mov
xor
loope
jg
jns
mov
jne
outsl
lods
pop
or
add
pop
mov
stc
inc
outsl
fnstsw
push
pusha
push
clc
loop
and
into
stos
call
icebp
add
jl
add
dec
arpl
orl
div
dec
xor
push
cli
outsb
fcmovne
outsb
addr16
mov
fadds
ret
imul
repnz
sub
fxch
mov
sbb
sbb
pop
jmp
int
inc
push
sbb
jmp
lock
mov
jge
fisttps
mov
jno,pn
arpl
pop
imul
inc
sub
push
pop
xchg
scas
inc
mov
xor
cs
stc
xorl
adc
stos
outsb
ret
in
mov
rep
pop
or
push
out
xor
gs
xchg
clc
fdivrs
push
sub
pop
sub
jge
vpcmpgtw
cmpb
call
pushl
stos
lcall
in
or
jb
es
test
xor
ds
push
inc
cwtl
aas
xchg
xchg
or
sahf
aam
hlt
pop
xor
add
mov
or
addr16
popl
mov
dec
cmp
xchg
cmpb
fidivs
mov
jns
hlt
pushf
push
loope
clc
inc
sub
xchg
stc
addr16
loopne
jne
add
adcb
dec
dec
subl
outsb
jecxz
aam
mov
inc
je
int
fbstp
pop
rcrb
cmp
pop
and
mov
cmpl
dec
mov
cmp
movsl
sub
adc
mov
push
or
jecxz
popf
ss
mov
add
xchg
cmpsb
data16
push
pop
std
mov
xchg
and
jbe
pusha
repnz
and
cwtl
testl
sub
insl
outsl
mov
lods
stc
dec
dec
js
dec
cmp
je
cmpsl
mov
stos
xor
mov
pop
sub
cmp
mov
mov
das
in
push
jae
sbb
mov
imul
push
sbb
sbb
push
dec
mov
add
mov
pusha
xchg
ss
xchg
cmp
arpl
xlat
stos
std
sbb
int3
aaa
adc
adc
adc
cwtl
int3
fimull
add
jne
pop
mov
cmp
sub
or
jno
out
lahf
pop
mov
lock
cltd
xchg
add
add
iret
sub
out
jmp
aad
push
inc
inc
test
addr16
mov
mov
aaa
es
add
sahf
enter
and
iret
call
and
inc
sub
cmp
imulb
gs
mov
cs
xchg
cmp
add
mov
pop
sbb
in
adc
rorb
notl
js
adc
add
sbb
scas
aad
mov
sub
fisubs
pusha
adc
or
test
iret
jl
jae
subl
in
out
add
inc
pushf
roll
leave
notb
jecxz
mov
in
push
call
push
aam
int3
mov
ljmp
test
fbld
sub
scas
jae
xchg
push
rcl
ss
and
jmp
movl
iret
cmp
push
push
push
out
add
and
je
ret
inc
and
jne
mov
pop
mov
test
aam
mov
sahf
xor
and
es
pop
dec
xor
test
cmp
xorl
mov
dec
sahf
addr16
sbb
cmp
mov
std
out
in
cmp
stos
sahf
imul
push
or
bound
fsts
cmp
inc
xchg
mov
add
xor
mov
push
xchg
sbb
mov
ret
sub
notb
pop
pusha
outsb
mov
push
mov
dec
lods
mov
ret
outsl
inc
out
fldt
lret
jl
mov
sti
icebp
and
and
movsl
mov
add
flds
dec
pop
mov
cwtl
repnz
in
xchg
adc
or
mov
sub
fldt
cs
sub
ljmp
lret
jmp
mov
or
pop
mov
negl
jno
imul
xor
sbb
cmpsl
fists
es
call
fildl
or
scas
mov
loope
push
mov
push
pop
orl
dec
adc
mov
cld
nop
add
fidivs
insb
rcrb
mov
sbb
sbb
sub
mov
scas
sub
mov
mov
test
xchg
or
cmp
and
jmp
xchg
cmpsb
adc
out
mov
pop
inc
adc
inc
push
imul
cld
adc
cmp
xchg
jae
xchg
popa
cmp
cmp
pop
movsb
out
jno
pop
outsb
repnz
dec
xor
jb
stos
mov
fldt
aas
negl
mov
sub
inc
inc
adc
sarl
pop
mov
push
flds
push
lahf
mov
ficomps
out
push
mov
push
mov
push
xor
jecxz
repz
std
inc
rolb
xchg
je
out
add
aaa
inc
add
jbe
pop
scas
leave
ss
or
mov
ljmp
cmp
out
xchg
je
jnp
outsl
ret
push
xlat
adc
inc
push
fmul
inc
adc
je
mov
test
jl
push
clc
and
leave
daa
xor
jg
jae
mov
inc
add
rcrl
cmp
push
aaa
xor
push
or
imull
mov
push
leave
and
into
lock
dec
add
hlt
and
fdivrp
sbb
es
lock
push
sub
jae
ret
inc
imul
sar
sub
xor
mov
xchg
xchg
xchg
mov
jge
inc
ret
mov
xchg
dec
adc
in
rol
out
cmp
push
push
mov
push
jmp
loope
push
mov
gs
out
aam
loop
cmp
les
push
adc
lods
out
sbb
xor
mov
repnz
xchg
pop
negb
mov
bound
aad
and
pop
cwtl
out
rorb
pop
inc
ja
jo
push
cmpsl
lret
cli
push
xchg
in
pop
stc
mov
loope
xor
daa
iret
jno
fwait
xor
dec
adc
xchg
test
xlat
jbe
add
xor
and
jb
leave
pusha
mov
arpl
xor
mov
push
jo
add
in
pop
push
dec
mov
sbb
push
pop
stc
mov
mov
or
cwtl
mov
mov
pop
scas
dec
mov
hlt
aam
fdivs
or
xchg
dec
sahf
xor
sbb
mov
push
popa
dec
sub
cmp
or
pop
das
inc
and
mov
jae
push
fld
jne
push
vpsubusb
sbb
test
dec
ja
call
inc
out
jp
push
mov
pop
push
pushf
or
jae
in
in
add
jge
fists
dec
mov
fcomps
pop
cmp
mov
cwtl
mov
nop
test
push
dec
pop
xchg
dec
in
jle
or
imul
mov
ret
jg
lahf
push
rorl
lds
out
andl
inc
int
outsl
mov
and
and
cld
dec
int
jl
adc
jmp
je
mov
push
dec
adc
add
mov
aam
pop
shrl
cltd
test
hlt
or
pop
mov
outsb
xchg
mov
cmp
not
pop
and
mov
or
xor
imul
push
data16
fildll
mov
sub
mov
das
cmp
jle
xchg
add
in
in
dec
mov
fstp
insl
dec
mov
enter
pop
rorl
sbb
adc
sub
fsubp
mov
pushl
dec
movsl
repz
fildl
sti
cmp
xchg
test
cwtl
inc
inc
arpl
cmp
mov
pop
and
inc
loope
xor
jmp
mov
shrb
lret
mov
mov
xlat
cmp
cmpsl
jmp
sbb
mov
ret
imul
mov
and
scas
mov
stc
test
xchg
addb
rolb
push
cmpsl
xchg
push
test
psubsb
decl
add
aaa
add
hlt
loopne
or
out
fs
or
jno
inc
mov
xor
sbb
jp
mov
xchg
aaa
cmp
cltd
xor
fistpll
add
sbb
lret
mov
adc
scas
lock
call
fcompl
add
test
xchg
in
rcrb
add
mov
fdecstp
xor
outsb
outsl
and
loope
xchg
and
outsb
sbb
inc
push
mov
mov
aas
fdivl
push
cmpsl
test
inc
jmp
iret
xorl
je
cwtl
mov
dec
push
adc
add
push
les
mov
into
jno
fwait
pop
out
popf
cltd
xchg
adc
pop
xor
das
fwait
rorb
shlb
data16
out
imul
cmpsl
nop
lea
and
cmp
lcall
insl
test
and
js
test
xchg
in
and
insb
dec
rorb
shlb
je
dec
hlt
mov
mov
hlt
or
push
pop
dec
aad
imul
int3
jo
xor
push
lods
mov
mov
push
pop
pop
repnz
mov
hlt
lret
out
and
jp
inc
xchg
add
add
fdiv
fistpll
push
inc
mov
dec
pop
mov
adc
jge
jecxz
clc
divb
pop
in
insb
popf
cmpsb
sbb
shr
xchg
fidivs
add
mov
sbb
pushf
imul
pop
xor
mov
push
popf
fldl
mov
mov
cwtl
cmp
mov
fwait
arpl
iret
mov
loope
jmp
scas
dec
dec
xchg
push
mov
sub
pop
cld
outsl
adc
mov
mov
add
mov
cs
xor
xchg
sarl
sti
addr16
xchg
jmp
aad
inc
adc
mov
mov
shlb
icebp
movsb
inc
adc
mov
sub
into
scas
lods
icebp
imul
pushf
inc
inc
shll
mov
test
ds
mov
push
popf
mov
adc
imul
xor
cmp
ret
cmp
mov
in
sbb
push
push
jnp
fsubr
cltd
fmuls
cmpsl
pop
loope
out
mov
jbe
mov
addl
push
push
stos
mov
xorl
shll
add
hlt
xor
stos
lods
mov
dec
std
push
test
adc
pop
sub
sub
mov
iret
stc
cmp
and
cmpsb
data16
push
jbe
aaa
leave
xor
fsubrl
scas
mov
cmp
dec
add
sub
sub
cmpsb
test
mov
movsl
dec
out
mov
jle
pushf
push
cmpsb
enter
inc
sub
fstps
mov
or
cmp
je
sahf
std
jecxz
mov
outsl
movsb
and
mov
dec
mov
subl
notb
movsb
js
inc
add
lods
push
pop
test
pop
mov
inc
push
lods
or
out
sub
mov
xchg
nop
cmpsb
jmp
cmpsl
aam
loop
lods
adc
add
rcrl
push
pop
insl
mov
cltd
push
rcll
xchg
xlat
push
fildl
inc
stos
cmp
adc
pushf
xor
fcoml
dec
gs
push
in
lods
fcomp
xor
shll
adc
lahf
adcl
push
lcall
push
dec
add
jbe
pop
add
or
lcall
sub
add
test
xchg
or
data16
fadds
ffreep
mov
xchg
scas
std
out
outsb
pop
ror
jp
lods
push
or
stc
push
push
lds
fwait
lret
jno
scas
orl
xchg
mov
mov
lret
sub
mov
mov
mov
call
cltd
sbb
sarb
cmp
loop
loop
insb
sub
sbb
inc
fists
negl
inc
nop
inc
iret
ljmp
negl
cmp
jle
int3
addr16
pop
adc
icebp
shlb
es
sbb
push
mov
xor
imul
jo
mov
aam
data16
pop
cmp
adc
loop
loopne
push
in
dec
sbb
jle
xchg
bound
sub
add
sbb
xchg
je
shl
jmp
sahf
aam
ret
and
int3
pop
mov
cmpsb
cwtl
in
mov
mov
mov
or
mov
aam
addr16
mov
add
mov
mulb
call
test
je
or
loop
js
lds
xchg
push
clc
push
lods
pop
outsb
mov
push
add
adc
adcl
into
xchg
fadds
mov
mov
test
push
inc
adc
leave
pushf
xchg
aad
lods
addr16
mov
sarb
pop
inc
shrl
rcrl
fstp
insb
xor
or
pop
inc
lds
lahf
add
scas
jae
jge
lods
data16
or
inc
adc
andl
mov
daa
mov
insl
sub
cmp
call
mov
bound
ds
daa
scas
or
sahf
xlat
rcrl
dec
fwait
lea
dec
int3
subb
and
cltd
cli
out
lods
adc
imul
jle
pusha
cmp
pop
mov
jmp
mov
stos
sub
or
add
and
mov
push
and
loope
loope
cmc
xchg
mov
sub
mov
cld
leave
subl
sub
mov
aas
roll
enter
mov
dec
decb
push
pop
push
sti
add
leave
arpl
repnz
ret
mov
rcll
cmp
sub
or
call
fwait
ds
sbb
dec
fucom
and
dec
stos
and
dec
es
push
out
mov
rcr
cli
sub
xchg
sub
mov
inc
cmp
jmp
sbb
sbb
out
and
lret
mov
fistps
sahf
ret
scas
cltd
sbb
push
xor
sub
das
mov
pop
lods
cwtl
sbb
add
mov
ja
shrb
push
adc
stos
sbb
stos
arpl
cmpsb
sahf
adc
inc
addb
imul
loop
bound
rcr
dec
cmpsl
dec
xor
push
add
or
cmp
cmc
test
jb
pop
fwait
clc
push
dec
sub
jg
in
mov
les
add
sbb
jae
movsl
sbbb
xorl
imul
pop
cmp
pop
ret
aaa
loopne
xor
scas
in
jb
push
insl
dec
in
bound
aad
mov
cmc
cwtl
push
inc
pop
pop
int
out
mov
aaa
sbb
sub
push
addl
sub
shl
dec
ljmp
xor
outsb
pop
and
in
pop
cmpsl
stos
pop
pmaxub
or
inc
xor
sbb
mov
les
push
iret
xchg
and
fs
push
mov
push
sti
fimull
and
pop
sub
push
test
out
into
jg
sub
mov
mov
xchg
sbb
aad
mov
fists
mov
test
iret
leave
xor
jne
jmp
cltd
xor
inc
jae
adc
mov
subl
add
sub
int3
pushf
loopne
sub
cmp
nop
inc
icebp
cmp
popf
fildll
imul
sub
rcll
xor
mov
mov
add
icebp
add
xchg
pop
lcall
cltd
mov
xchg
jg
lahf
add
test
jb
cmovnp
mov
bound
and
xor
cmp
dec
or
leave
mov
or
test
dec
mov
jge
xchg
movb
sub
test
sbb
hlt
or
pop
cmc
pop
pop
cwtl
test
jge
cmp
mov
xchg
push
cwtl
xchg
cli
mov
data16
sbb
inc
dec
jno
fidivs
adc
cmp
push
cmp
jge
fdivl
sbb
mov
cmp
jmp
ret
ret
add
push
test
and
cld
xor
mov
repnz
call
push
and
call
je
cmc
ljmp
movsb
lds
push
cmp
push
jne
mov
es
cli
dec
lods
outsl
fnstenv
in
out
xor
sbb
fwait
sbb
add
lods
jg
sub
mov
mov
outsl
sub
xchg
xchg
mov
dec
xchg
jne,pt
sbb
mov
pop
xor
jl
insb
pusha
push
repnz
outsl
push
lods
mov
jns
and
in
repz
adc
int
flds
int3
outsb
xchg
ljmp
fnstsw
mov
and
pop
xchg
gs
add
mov
dec
out
int
pushl
cmp
inc
cli
mov
pop
cmpsb
ss
scas
insl
scas
icebp
inc
scas
xor
out
cmp
push
jecxz
jne
insb
push
stos
mov
add
adc
xor
jp
pop
lods
mov
inc
sbb
imul
pop
jmp
inc
push
not
dec
leave
sub
mov
in
sub
je
xchg
loope
pop
shr
jno
cmp
fistl
mov
or
jg
push
inc
adc
std
mov
stos
fstpt
test
jl
stc
pop
sub
aaa
xor
xor
repz
or
mov
pop
adc
dec
rcl
mov
shll
sub
dec
xchg
cmp
xor
test
fidivs
sbb
scas
adc
pop
mov
ret
pop
sub
nop
stc
lret
out
aam
pop
jl
pop
gs
pop
popf
push
xchg
mov
push
idiv
cmp
pop
mov
mov
or
pop
mov
push
addr16
cmp
and
pusha
mull
addl
fs
xor
push
xor
cltd
mov
lret
dec
pop
and
roll
sbb
loope
cmpsb
cmp
or
dec
insb
jg
mov
ror
push
pop
pushf
cmovl
das
dec
adc
in
mov
jmp
popf
push
cli
fmuls
cmp
push
jns
jle
frstor
aas
rorl
outsb
mov
jns
xchg
push
je
cmpsb
xchg
and
pop
jo
xor
idivl
sbb
insl
clc
bound
les
icebp
ljmp
loope
ret
xor
leave
fs
push
or
dec
cmpsb
mov
fstp
dec
test
into
adc
les
stos
rcll
inc
jae
push
jns
dec
push
mov
adc
cwtl
xor
int3
rcrl
mov
data16
mov
push
jmp
out
mov
fs
sbb
mov
repnz
mov
push
mov
jge
dec
pop
inc
inc
mov
inc
lahf
lea
popa
fdivr
es
adc
mov
outsl
xlat
shrb
fistl
cmp
scas
insb
dec
lock
dec
dec
scas
push
sbb
pop
sarl
cmp
icebp
loop
pop
xchg
xchg
adc
out
out
xor
xor
repz
imul
adc
pop
jg
lcall
int
xor
fstps
outsb
mov
lea
push
ss
mov
mov
cs
je
incb
adc
shll
dec
pushf
mov
mov
insl
lret
jecxz
ret
addr16
bound
neg
sub
test
scas
jge
das
and
inc
stos
push
pop
aas
shlb
in
fwait
stc
cmpsl
repz
dec
add
fldt
lahf
outsb
jmp
ret
sti
popf
push
ret
xchg
sub
outsb
sahf
fcmovne
arpl
scas
adc
mov
and
je
pop
cld
lock
push
cmc
inc
jp
jbe
and
adc
jne
scas
add
jmp
push
mov
pop
test
push
cmp
add
ljmp
inc
add
push
cmpl
sub
sahf
sbb
adc
sub
testl
pop
push
mov
or
test
leave
jae
sub
xchg
xor
stc
push
lret
adc
stc
inc
or
aam
fildll
mov
mov
pop
repnz
mov
sub
jle
pop
xlat
roll
das
inc
cmpl
and
xchg
xor
fbstp
fsubrs
cmc
push
xchg
fcoms
popa
shl
adc
and
jecxz
inc
adc
xor
inc
iret
jnp
dec
mov
push
rcrl
lock
loop
and
sub
add
push
enter
push
xor
mov
iret
add
arpl
xchg
je
stos
sbb
xchg
or
stc
inc
mov
icebp
push
imul
cmpb
enter
ja,pn
mov
push
testb
in
xchg
dec
and
xor
test
cmp
push
xchg
xorb
and
rclb
adc
int3
js
bound
je
push
push
sub
fcmovne
jb
push
xchg
mov
dec
jecxz
loope
cltd
movsb
cli
movsb
je
nop
cmp
jo
negl
pusha
mov
dec
xchg
sub
movsb
les
in
mov
cmp
das
inc
mov
es
xor
setg
clc
inc
loopne
fsubrl
out
pop
shll
dec
sub
push
mov
or
test
scas
das
dec
cltd
sbb
popa
mov
out
mov
jle
sbbl
push
ret
xchg
lock
imul
cs
imul
mov
gs
sbb
mov
pop
sbb
mov
ficomps
mov
clc
sub
sbb
and
orl
cmp
and
scas
jo
dec
pop
xchg
add
inc
inc
xchg
xor
mov
xor
cmpsb
scas
xchg
stos
mov
sub
push
mov
jg
dec
cmp
pop
mov
cli
jp
adc
lock
movsl
inc
xchg
jo
idivb
fmulp
pop
cmp
ds
jne
setns
and
test
lcall
mov
sub
mov
addr16
xchg
mov
pop
adc
out
xor
xchg
popf
aam
lea
fstps
scas
imulb
mov
pop
and
mov
mov
add
aas
in
jg
sub
jns
ds
add
stc
add
fisubl
movsb
mov
cs
test
dec
sbb
sarb
jno
pop
xchg
bound
push
les
mov
shlb
daa
xchg
pop
sbb
xor
jne
xchg
pusha
push
js
fdivs
out
fstl
cmp
js
aaa
cwtl
bound
sub
push
cmp
cwtl
inc
mov
cmpsb
ret
loope
mov
mov
in
add
hlt
test
lds
xor
and
mov
scas
push
push
call
sbb
out
sub
or
or
aas
mov
cmp
scas
push
mov
movsb
mov
stos
mov
dec
inc
and
lret
pop
inc
daa
push
aad
push
shrl
mov
cli
cmp
push
and
in
and
xor
jae
loope
push
xchg
aad
mov
popf
jl
sahf
mov
and
aas
dec
fisttpll
jle
xchg
sub
add
test
xchg
xchg
dec
jp
cmp
mov
fwait
xchg
push
xchg
pop
int3
mov
loop
aas
push
lret
mov
pop
fimull
movsb
nop
mov
push
sbbb
cmp
cltd
adcb
fidivs
sbb
out
aaa
rcrl
xchg
imul
cmpsl
ja
inc
push
dec
sbb
mov
inc
mov
sti
lods
dec
in
rcr
sub
pusha
iret
clc
es
outsl
out
sbb
xchg
jne
ret
xchg
mov
xlat
cwtl
push
ja
pop
cmc
xchg
xchg
jne
inc
inc
stc
and
sbb
mov
movsb
push
sbb
stc
stos
outsl
jl
and
idiv
cli
jmp
or
arpl
push
enter
or
adc
jecxz
dec
lret
in
loop
mov
pop
fadds
jo
movsb
add
pop
sub
and
or
pop
roll
sub
sahf
cwtl
or
pop
jne
ret
movsl
popa
cmp
std
push
aam
test
jbe
adc
call
adc
add
pop
push
xlat
xchg
in
not
adc
ja
inc
cltd
fadd
or
xchg
fwait
push
in
jecxz
lods
mov
inc
shlb
push
xchg
mov
outsl
popf
add
dec
or
int
das
sbb
or
sub
das
mov
jno
and
insb
xchg
inc
xchg
xchg
xchg
pop
push
test
lea
mov
mov
add
cmpsl
mov
aam
es
jmp
fwait
nop
pop
pop
or
sti
out
bound
leave
dec
adc
ss
ja
xor
sbb
movsb
fs
pop
insl
add
mov
fbstp
dec
adc
pop
push
add
enter
out
es
cmp
cmp
enter
fsts
out
ljmp
mov
mov
push
adc
pop
sub
cmc
in
inc
inc
xor
ljmp
rcll
imul
cmp
lods
call
inc
and
cmp
sub
lret
cmp
sub
loop
out
out
shr
movsl
xor
cld
adc
fiadds
sbb
xchg
test
xor
sub
fwait
cs
imulb
cmpsl
mov
lds
jecxz
xchg
stos
xchg
cmp
xchg
adc
mov
andb
sbb
mov
push
pop
sbb
das
cld
dec
stos
push
repnz
daa
popf
adc
inc
popa
bound
xor
adc
and
scas
insb
or
cltd
nop
adc
fcmovnu
push
loope
pop
lcall
jno
sub
ljmp
mov
jl
fptan
ljmp
or
push
jo
mov
sbb
mov
fldl
jne
out
mov
adc
out
add
sbb
incb
push
xchg
pop
sbb
xchg
mov
adc
cmpsl
or
sar
jne
or
test
inc
pushf
cmp
jne
sbb
mov
mov
test
addr16
pusha
test
call
leave
add
inc
stos
into
and
das
and
add
popa
inc
dec
arpl
out
add
mov
jp
int
jbe
mov
mov
icebp
sub
rorb
clc
sub
daa
imul
sub
inc
push
es
jne
sahf
rclb
jae
mov
cmp
ss
sbb
fistl
int
mov
shl
pusha
inc
lret
sbbb
mov
lods
and
int
mov
jne
fs
push
pushf
xorl
adc
subb
scas
fsubr
or
cwtl
adc
jle
insb
push
jg
inc
adc
or
and
xor
dec
lret
divb
sbb
inc
insl
add
push
sbb
sbb
sbb
sbbb
rcrl
sbb
adc
jbe
push
sbbl
shrl
xor
cmp
xchg
int
add
scas
aas
xchg
jge
mov
or
sbb
inc
lods
insb
dec
cmp
xor
icebp
mov
adc
xchg
dec
lods
cmp
dec
cmpb
movb
jns
lds
aad
das
inc
xchg
mov
or
inc
enter
movsl
rcl
and
xchg
mov
pop
inc
idivb
xchg
lods
shr
outsl
ds
into
fcoms
orb
and
hlt
sti
adc
and
popa
arpl
push
rorl
xchg
pushf
and
fbld
dec
jmp
jge
gs
jno
in
popf
js
or
lahf
negb
xchg
adc
xor
test
xor
xchg
out
hlt
xor
inc
xchg
lret
stos
push
mov
xor
sbb
mov
aad
push
ja
hlt
icebp
int3
and
sbb
and
mov
int3
ss
iret
dec
pop
add
mov
sarb
ja
cmpl
sub
cmpsb
in
push
and
imul
and
xchg
inc
cmp
ljmp
jno
smsw
xor
adc
mov
and
or
and
icebp
lods
loope
mov
aad
fcom
cmp
sub
push
subl
int3
cmp
push
cld
insl
lods
test
push
rcrb
cmpsb
pusha
and
lock
int
psubw
jae
inc
xchg
sub
flds
adc
xlat
clc
dec
cli
jl
call
js
shll
dec
aas
test
into
xor
push
mov
inc
in
inc
ret
shlb
stc
push
xor
xchg
nop
sub
into
xor
ficompl
roll
and
ret
xlat
inc
mov
clc
fldl
lahf
add
dec
or
add
rcll
xor
xor
xor
inc
sti
jmp
mov
mov
sub
scas
rcrl
push
int
int3
pop
outsb
cmp
inc
inc
dec
cmp
arpl
jecxz
cmp
push
fwait
sub
adc
mov
mov
fisubl
call
das
inc
jb
push
sarl
xchg
cmc
cwtl
mov
mov
add
iret
sub
imul
jge
push
push
adc
cmpsb
or
lods
lds
dec
push
in
or
add
cltd
mov
shrb
stc
jmp
dec
xor
icebp
cmpsl
inc
push
jle
es
lahf
cmc
stos
pop
imul
and
and
movsl
out
bound
adc
cmpsl
xchg
xor
adc
imul
sbb
in
sti
xor
addb
pop
test
and
clc
rcll
lds
inc
jg
adc
out
pop
sar
or
and
mov
push
xor
in
sub
xor
pop
movb
push
cmp
not
test
movsb
ljmp
popf
xor
loop
les
ret
lfs
ret
sub
mov
and
pop
mov
into
push
neg
sbb
ljmp
or
mov
add
loope
sub
jle
mov
aam
xchg
mov
andb
cmp
cmp
aas
mov
subl
add
mov
es
add
outsb
inc
mov
pop
sahf
mov
push
cmp
loopne
subb
cmpsb
cld
outsb
ja
xor
sti
test
dec
push
out
adc
push
and
dec
and
or
in
dec
ss
arpl
xchg
aad
xchg
or
pop
in
mov
fldenv
jmp
sbb
sbb
sti
out
sbb
jl
movl
inc
mov
dec
hlt
xor
pusha
add
adc
stc
mov
mov
mov
popf
add
sbb
cmpsb
inc
mov
jge
mov
in
jne
aas
mov
push
jnp
xor
pop
pop
nop
fdivs
adc
mov
bound
and
pop
or
pop
mov
ja
pop
jae
dec
sub
xchg
cmpsb
loope
push
imul
imul
into
test
arpl
and
hlt
jne
clc
lret
dec
bound
aam
loope
and
outsl
loop
adc
lcall
mov
push
lcall
out
lods
add
arpl
mov
mov
mov
xchg
and
pop
ja
inc
dec
xsave
adc
mov
mov
push
into
fsubs
ficoml
jge
jmp
adc
popl
insl
enter
scas
push
imul
add
inc
cmp
inc
dec
arpl
scas
fildll
ljmp
push
stos
shll
and
xchg
sub
iret
xchg
leave
mov
jae
and
adc
int3
and
dec
int
xor
and
testb
mov
scas
dec
dec
sub
dec
mov
out
in
sahf
stos
leave
insl
arpl
cltd
and
sub
or
mov
iret
jmp
or
or
or
jg
fwait
jne
stc
push
cmpsl
inc
or
mov
dec
les
rorb
adc
in
jmp
xlat
sbb
jae
push
xchg
cmpxchg
xchg
aam
mov
dec
mov
je
mov
dec
xchg
notb
icebp
aad
fisttpl
mov
fimull
rol
insl
cmc
bnd
and
push
mov
sbb
gs
movsl
fcoml
or
mov
sbb
push
pushf
xor
cs
test
push
or
sub
cs
mov
sub
push
dec
pop
lahf
mov
or
xchg
pop
push
into
jo
es
pop
mov
mov
test
add
ds
les
aas
cs
cmpsl
cmp
push
mov
or
inc
test
out
movsl
ds
adcb
aad
testl
mov
sub
movsl
lahf
sub
sbb
or
add
inc
orl
push
ret
xor
stc
pop
xchg
mov
xchg
pop
xchg
repnz
pop
movsl
test
dec
cltd
arpl
lock
pop
loope
repnz
or
pop
jmp
sub
or
xchg
lcall
std
aas
repnz
pusha
testb
orps
in
sarl
mov
mov
jmp
xchg
testl
stc
inc
ds
int3
cmp
int
loop
out
jbe
arpl
repz
xlat
sbb
add
inc
and
negb
mov
and
mov
sbb
pop
popa
dec
jmp
pop
mov
cmc
xlat
and
dec
mov
push
std
inc
and
lea
dec
xor
mov
cmpsb
out
inc
js
xor
clc
ret
sub
mov
mov
xchg
es
xchg
cltd
and
or
xor
mov
inc
aam
aam
mov
scas
or
inc
lock
aas
lret
addl
sahf
mov
nop
xchg
xor
ret
scas
data16
mov
push
insl
cmp
lods
popf
xlat
sub
pop
fwait
push
mov
sbb
insl
repz
sub
push
cwtl
pusha
inc
addr16
jbe
call
out
mov
xlat
push
mov
xlat
cmpsl
cmp
push
ds
push
xchg
jp
mov
mov
out
lea
add
fidivrl
dec
pop
jne
jmp
stos
lods
jb
fdivrs
fwait
cmovne
les
adc
cld
mov
add
xchg
pop
aas
push
push
fs
push
icebp
pop
xchg
xor
pusha
mov
leave
movsb
cmpsb
pop
add
ljmp
clc
testl
adc
jmp
test
outsl
xor
lcall
es
std
jl
rcrb
or
dec
gs
mov
in
sbb
jge
pop
add
push
stc
push
sbb
push
cmc
out
imul
clc
cltd
jae
dec
adc
ds
xchg
sahf
lock
std
and
popf
push
dec
push
mov
mov
sub
jnp
ja
repnz
xor
into
fidivl
or
jo
gs
jle
jno
jl
mov
jns
push
add
pop
cmp
xchg
jle
xchg
ja
or
clc
mov
pushf
fnstcw
gs
mov
sbb
push
xchg
mov
inc
mov
or
xor
jbe
aad
insl
pop
add
cmc
mov
adc
lret
outsb
call
sbb
and
sub
stos
xchg
inc
xchg
test
and
xchg
cmp
ret
push
mov
vmovapd
mov
mov
xchg
mov
jle
and
or
mov
mov
adc
dec
inc
add
cmpsb
jl
pushf
stc
ret
xchg
js
push
rcl
testb
loope
cmp
lahf
mov
clc
push
inc
mov
dec
mov
imul
xchg
sahf
cmpsb
xchg
ficoml
lea
and
push
jae
fisttps
mov
out
xor
loop
clc
sub
lret
int3
pop
cmp
jl
ret
popa
push
sti
inc
jg
rorl
gs
xchg
mov
int3
adc
push
sbb
pop
xchg
push
adc
out
int
adc
lea
hlt
icebp
lcall
xchg
movsl
xchg
adc
test
or
mov
or
or
push
pop
hlt
jnp
roll
pop
and
rolb
xor
stc
add
mov
adc
cmpsb
aaa
jbe
mov
add
rorl
dec
adc
das
imul
js
sbbb
cmpsb
xchg
ffree
out
push
inc
icebp
fstl
xor
fmull
mov
xlat
or
lret
scas
jbe
or
icebp
leave
je
lret
sub
and
insb
adc
xchg
pusha
dec
add
shrl
cmp
mov
dec
sbb
arpl
mov
test
adc
out
cmp
ljmp
je
jge
mov
xor
loopne
add
test
mov
pop
add
jmp
xchg
lock
xor
inc
sahf
out
shrb
pop
mov
mov
addr16
imul
add
pop
js
push
out
lret
xchg
jns
dec
lretw
sub
mov
xor
push
xor
leave
cmp
shl
or
xor
mov
xchg
call
pop
jmp
cmpxchg
sbb
lods
out
add
pop
mov
call
fsubrs
mov
ficoms
mov
xchg
repz
bound
sar
bound
repz
lret
bsf
jno
imul
dec
push
repnz
cld
jnp
jge
jns
out
dec
andnps
or
mov
lcall
adc
and
sub
push
add
inc
sub
sbb
cmc
enter
jb
sahf
pushf
outsl
jnp
add
push
mov
std
jne
enter
imul
popa
sub
test
mov
arpl
clc
mov
into
push
cmp
data16
add
add
mov
mov
mov
sub
dec
lahf
cs
or
mov
fidivrs
or
or
cmp
jp
push
scas
mov
outsb
pop
mov
fcoms
inc
cmp
mov
lcall
sbb
and
push
cmp
fsubrl
addr16
cld
shlb
cmp
xor
xchg
fldenv
xchg
insl
fsubrl
cmp
test
or
insb
das
int3
mov
cmp
lahf
ret
adc
out
cltd
jns
jnp
scas
and
rcpps
inc
push
xorl
aaa
push
sub
lret
dec
gs
jb
cmpsl
ror
insb
jl
test
and
pop
cmp
xchg
aam
pop
inc
pop
testb
inc
push
in
fcomip
icebp
dec
xchg
adc
cwtl
in
jle
mov
push
mov
mov
mov
mov
leave
dec
out
mov
mov
movsb
ret
or
mov
cmpsl
in
xchg
cmp
add
add
ljmp
data16
repz
and
jb
xlat
dec
sub
movsb
push
dec
mov
or
jecxz
jns
xor
mov
stc
xchg
popa
int
adc
add
cltd
pop
test
scas
lods
xor
clc
xchg
push
enter
loopne
sbb
push
ret
outsb
lods
rcrl
out
sahf
push
xchg
sbb
mov
mov
jne
ss
out
gs
jnp
xor
in
push
xor
pop
xlat
stc
fsubrl
mov
ret
data16
xlat
mov
sub
bound
rcrl
in
push
push
xrelease
jns
out
insl
add
mov
orl
pop
push
jp
jnp
dec
pop
xchg
stos
je
push
clc
mov
insl
lahf
xchg
adc
xchg
jge
sbbl
jmp
pusha
insl
inc
jg
add
or
add
mov
add
negb
xchg
andb
inc
lock
cmp
mov
hlt
js
call
pop
loope
jmp
add
in
test
dec
or
pop
cmc
xor
aaa
stos
xchg
leave
add
loopne
xor
cwtl
cmp
mov
fisttpl
jae
out
fimuls
add
sbbb
mov
movl
test
inc
test
xchg
repz
pop
das
push
jne
shlb
mov
test
in
lret
in
mov
orl
aam
push
fimull
push
pop
sbb
popl
stos
imul
stos
das
xchg
inc
xchg
pop
add
dec
roll
add
lret
and
or
outsb
lahf
addr16
xlat
ljmp
dec
rol
addb
es
out
clc
ror
in
addb
sub
jo
dec
add
lds
ret
pop
in
jecxz
mov
stos
sti
test
lods
ds
aad
xor
mov
jmp
and
leave
adc
cmpsl
ljmp
lods
gs
mov
and
sbb
cmp
inc
ja
adc
jg
adcl
jmp
cmpsb
inc
stos
sti
pop
dec
mov
divl
sbb
jo
or
cmc
jae
adc
mov
fcoml
out
sbb
pushf
push
dec
jecxz
mov
xchg
aaa
lods
mov
jle
das
pop
sub
ljmp
cs
mov
push
or
cmc
hlt
movl
andl
xchg
or
push
cmp
loop
out
nop
sbb
hlt
ret
cmp
dec
sbb
jmp
pop
insl
pushf
std
xor
adc
sub
out
xor
pop
sub
in
cmpsl
pop
stos
sub
or
insb
pop
or
sbb
aaa
das
mov
inc
shrb
lds
inc
mov
lods
mov
mov
fld
cmp
cwtl
sarb
pop
outsb
daa
je
ficoml
sbb
push
test
pop
enter
cmp
sub
inc
mov
adc
sarl
inc
sarl
inc
mov
add
ret
insb
dec
xchg
popa
and
in
jle
int3
cs
inc
aaa
or
mov
and
mov
jg
pop
test
pushl
pop
sarb
lods
scas
add
lds
jae
jmp
pop
pop
test
leave
sub
rcll
movsl
jg
enter
xchg
aam
dec
or
ret
pop
push
xchg
push
mov
and
mov
out
aad
outsl
inc
test
pop
scas
lods
js
push
inc
aas
lods
fsub
cmpsl
xchg
mov
in
mov
gs
xchg
or
push
ds
or
cltd
inc
cmp
jmp
jnp
call
fistpl
stos
sarl
into
loope
rorl
jae
aam
push
jne
movl
cmp
xlat
pushl
stc
xchg
add
sbb
mov
sbb
adc
sub
xchg
xchg
int3
mulb
fdivr
adc
jmp
xor
in
icebp
sbb
cmc
or
push
jb
lret
inc
mov
bnd
and
in
mov
ret
clc
adc
repz
outsl
inc
imul
aaa
and
push
sbb
and
sti
popf
push
inc
dec
rorl
aaa
pop
mov
mov
ret
push
dec
negl
addr16
dec
in
sbb
das
xchg
stos
pop
leave
mov
pop
arpl
fwait
sbbb
inc
cmpsb
out
cltd
mov
xchg
or
fimull
inc
pop
sbb
sarb
int3
add
mov
cmp
jno
jge
sbb
jg
cmp
imul
cmc
test
lods
aas
cmp
mov
pusha
jnp
pop
xor
movsb
loopne
dec
cmp
lods
add
movsb
mov
gs
std
or
les
xchg
iret
cltd
adc
dec
faddl
neg
shl
jmp
adc
cmp
xor
sbb
push
xchg
insb
pop
xchg
ss
mov
dec
or
cmp
stos
mov
movsl
aad
lea
xlat
push
cli
lret
inc
or
jne
adc
in
pop
sbb
je
std
imul
xor
aas
adc
mov
clc
leave
je
adc
xchg
jns
int
insl
rclb
dec
sub
popa
adc
add
jl
pushf
sbb
int
pop
sarl
test
push
outsl
push
cs
sub
xor
or
mov
scas
sub
adc
pop
daa
xchg
lods
mov
mov
outsl
jnp
les
std
cmc
sub
icebp
daa
adc
jp
out
pop
lods
das
dec
ljmp
cmp
fdivr
lret
jg
daa
xchg
cltd
pop
xor
mov
rclb
jmp
test
in
popf
mov
add
and
iret
fdiv
bound
imul
lock
push
or
fdivs
inc
fistpl
cwtl
mov
jns
sub
lea
rcrb
lods
sahf
outsb
loop
enter
cmp
cmp
lods
inc
jle
bound
lret
lahf
add
mov
popf
ret
sbb
int
xchg
cmpsl
jae
adc
cmpsb
rclb
inc
out
ljmp
mov
push
add
sub
sar
mov
in
mov
mov
and
daa
sbb
out
clc
imul
lea
popa
xlat
fdivrl
das
sbb
dec
lahf
stc
clc
fmuls
pop
push
jmp
int
push
enter
xorb
mov
jl
enter
test
fwait
cmp
scas
sbb
sbb
cmp
mov
xor
and
push
mov
add
push
in
clc
mov
mov
mov
into
mov
lahf
das
rclb
cmp
sbb
add
push
movd
inc
stc
stos
lds
jo
aam
cmp
dec
xchg
mov
arpl
icebp
cmp
and
sbb
jae
insl
mov
push
push
inc
add
pop
jae
stos
sti
add
clc
out
xorb
pop
mov
xchg
jnp
jo
ret
test
pop
test
jmp
mov
notl
adc
dec
inc
into
test
test
sub
jns
fildll
cmp
pop
xor
fildll
fnstcw
adc
jg
and
data16
xor
in
addr16
cmp
cmp
test
mov
cmpsb
insb
rclb
or
fadd
pop
and
push
inc
push
inc
cltd
mov
dec
cltd
jp
fbstp
push
xor
aad
mov
repz
jl
push
ss
push
or
cmpsl
mov
test
sbb
subb
cmp
or
es
pop
xor
mov
jb
shll
mov
cmp
int3
xlat
fdivrl
or
and
in
mov
sub
pop
mov
clc
mov
lret
out
jg
mov
mov
hlt
push
sbb
cmp
fstps
inc
fcomps
imul
aas
roll
out
cmp
stc
in
cmp
push
xchg
inc
pop
lea
sarb
adc
xchg
lcall
xchg
xchg
cltd
fimuls
je
push
les
xchg
ljmp
dec
dec
out
in
jns
sbb
out
sub
cmc
push
pop
test
xchg
lods
cmpsb
sbb
and
pop
inc
loopne
add
mov
pop
inc
jnp
adc
scas
sub
std
jmp
mov
add
mov
fs
push
cmpsb
jae
mov
imul
dec
adc
dec
mov
addr16
cmpsb
aad
bound
mov
sbb
mov
dec
in
loopne
call
sbb
jecxz
popf
int3
shrb
jb
jl
xchg
jnp
push
daa
inc
lea
cmp
sarb
ss
inc
pop
sbb
repnz
ret
mov
adc
scas
mov
add
fisubrs
sbb
stos
out
int
jbe
mov
aas
push
push
jns
mov
mov
cmpsl
push
data16
push
adc
sub
and
jge
and
in
stos
or
push
mov
xor
jg
and
cwtl
inc
pop
scas
shrb
dec
xor
fwait
int
popa
push
insb
push
jns
std
push
push
lods
push
and
arpl
add
sti
xchg
xor
xlat
mov
subl
inc
push
rorl
cmpsb
dec
cmp
stos
push
shrb
rolb
stos
fwait
insb
scas
js
test
or
leave
push
out
mov
mov
ficoml
mov
cmp
movsb
xchg
idiv
xchg
movsl
mov
dec
imul
and
and
imul
loope
xchg
push
movsl
add
gs
mov
and
or
inc
aaa
jmp
lahf
inc
push
adc
xchg
outsb
cmc
rorb
and
pusha
test
push
add
dec
adc
popf
push
add
shll
cmp
or
mov
mov
mov
dec
xchg
rcrl
pop
sbb
xchg
and
or
stos
sub
xor
inc
fists
add
jb
enter
sbb
dec
dec
mov
and
or
jg
jmp
imul
insl
xchg
or
lods
shl
cmp
push
and
loop
add
dec
call
pop
std
adc
sti
fucomp
cmpsb
xchg
inc
pop
fisubrs
inc
mov
or
repz
push
ja
aas
sbb
sbb
pop
in
pop
out
inc
jg
dec
sub
jmp
ja
push
jp
mov
mov
pop
outsl
cs
mov
mov
dec
jmp
fcmovne
mov
arpl
leave
pop
sbb
mov
shr
add
loop
es
std
pusha
add
movsb
adc
sub
jmp
adc
adc
xchg
dec
push
xor
imul
fdiv
inc
and
sub
and
pop
scas
cli
jecxz
jg
xor
fsubr
cmp
push
xlat
xchg
decl
mov
pop
sub
cmp
inc
xchg
movsb
mov
sbb
scas
xor
imul
mov
sbb
and
insl
add
or
cmp
jecxz
and
lods
stos
decl
int
push
repnz
jns
and
adc
fnstsw
lahf
scas
fmull
lret
inc
lret
mov
les
jmp
add
fcmove
sub
sbb
jne
cmp
jo
fmull
fnstcw
mov
loopne
pop
stos
jb
int
sbb
add
mov
fcmovnu
xor
fnstsw
dec
pop
sub
mov
jmp
mov
sbb
stos
leave
xor
xchg
pop
sbb
js
stc
aas
iret
dec
adc
jecxz
je
adc
mov
mov
repnz
pop
push
mov
clc
stos
adc
inc
push
cltd
mov
dec
push
loopne
and
repz
shll
movsb
lods
and
xor
mov
push
out
aam
cmpsl
mov
xchg
xlat
inc
jecxz
cltd
scas
cmp
scas
push
mov
inc
cmpsl
push
push
push
xlat
orl
movsl
mov
roll
sti
xchg
cmpsl
push
inc
adc
imul
rcrl
dec
lods
fidivrl
push
inc
roll
xchg
rcrb
and
xchg
imul
pop
pop
out
bound
mov
mov
sub
out
in
cmp
cmc
and
jmp
mov
cs
imul
mov
xchg
call
idivl
arpl
imul
incl
and
xor
mov
insb
mov
insl
xchg
jbe
xor
sbb
xor
repnz
arpl
rcl
or
repnz
mov
popf
in
pusha
call
mov
add
test
scas
adcl
sahf
xchg
or
es
lods
stc
xchg
jae
outsb
ljmp
jb
pop
leave
mov
xor
stc
xor
mov
cmp
js
mov
fistps
scas
test
loopne
ljmp
push
out
xor
xchg
or
mov
xchg
push
cmp
push
mov
push
or
gs
fucom
adc
int
xchg
addr16
cmp
ss
and
push
dec
andb
les
jns
sbb
shr
jae
cmp
pusha
stos
insl
fistpll
sbb
outsl
push
xor
popf
pop
es
mov
xchg
dec
movsl
pusha
inc
cmp
jno
push
ss
movsl
int3
bound
xchg
fnstenv
push
push
fadd
dec
xor
push
pusha
xchg
inc
push
ret
pop
and
cs
jmp
test
and
xor
push
pop
cmp
sarb
in
adc
stc
insl
mov
mov
cmp
mov
sub
loope
mov
aaa
lcall
out
or
pop
mov
in
jb
hlt
xchg
sub
repnz
cmpps
jo
sar
mov
popf
adc
pop
sub
pushf
mov
shl
inc
push
and
sbb
dec
pop
push
pusha
sti
xor
in
fucompp
fwait
insl
adc
dec
mov
xor
sub
lods
xchg
mov
pop
push
fstpt
xorl
insb
inc
mov
call
int
test
mov
and
mov
sub
aad
jge
insl
cwtl
lods
scas
or
and
cmp
loopne
mov
sbb
lock
mov
mov
fidivrl
in
nop
xlat
adc
testl
jbe
in
scas
andb
loop
xor
test
jbe
add
dec
data16
dec
pop
call
fwait
sahf
pushf
shl
cmp
push
add
adc
lcall
fadds
push
je
sarb
inc
das
ds
rcll
or
inc
testb
aad
xor
cmp
call
and
lock
ljmp
pop
push
mov
out
dec
pop
test
xchg
mov
inc
out
push
das
aaa
dec
push
fsts
repnz
pusha
insb
je
outsl
xchg
cmp
mov
mov
fsts
ljmp
nop
lcall
lock
xor
bswap
mov
mov
faddl
loopne
js
adc
xchg
pop
cltd
pop
ja
stc
mov
jns
cwtl
dec
arpl
lret
jecxz
gs
xor
das
or
lods
mov
enter
insl
push
stos
sbb
rorb
add
mov
push
cmpl
mov
push
mov
imul
rolb
aam
sbb
add
cmp
pop
cwtl
movsb
test
add
hlt
jne
jge
inc
lock
xor
push
jns
fcomps
sub
jg
xchg
js
inc
mov
jl
pop
mov
imul
popl
testb
xchg
and
and
repz
movsb
inc
lahf
sbb
hlt
mov
and
add
out
pushf
and
shlb
pop
test
pop
gs
int
or
outsl
fs
xchg
mov
cli
push
mov
jnp
in
xor
push
mov
xor
xchg
faddl
jp
std
add
lds
cli
aam
xlat
fcoml
rolb
in
call
inc
fbstp
sub
push
or
call
test
xchg
out
xchg
xchg
into
fcmovbe
stos
gs
enter
lret
mov
dec
leave
xchg
sbb
imul
jae
sti
aaa
cmpsl
bound
dec
push
int
loopne
sub
jb
outsl
adc
push
cld
mov
arpl
in
fldl
mov
andl
xchg
xchg
dec
rcll
sbb
jle
and
arpl
dec
nop
and
lea
or
insl
mov
jecxz
or
adc
push
cmp
ja
cmp
lcall
pushf
lds
aad
je
dec
xchg
mov
pop
fnstsw
ret
dec
push
testl
xchg
adc
sub
inc
sub
in
outsb
call
jg
movsl
sar
in
mov
mov
shr
sbb
in
xchg
mov
test
xor
inc
rcrl
cmp
mov
addr16
pusha
mov
cli
jg
pop
cmpsb
sub
jmp
sbb
pop
pop
ljmp
imul
icebp
dec
insb
cmp
mov
push
pusha
sub
cwtl
repz
out
sbb
cwtl
inc
add
clc
dec
xchg
int3
inc
fs
dec
insl
add
stos
mov
test
test
push
inc
fs
ds
stos
mov
cltd
fwait
leave
call
mov
push
repz
push
imul
mov
xor
insl
dec
push
inc
mov
pop
sub
push
pop
cmpsl
pop
lea
jecxz
xchg
sbb
ret
cmp
data16
lods
push
cli
jmp
mov
cmc
jb
and
popa
mov
mov
pushf
es
sahf
xor
push
pushf
lock
jge
stos
repz
adc
pop
xchg
dec
xor
cmp
loop
outsb
scas
js
jne
and
push
loopne
mov
adc
shll
aaa
iret
and
add
lahf
mov
addl
jno
cmpsb
shlb
popa
adc
aad
incb
imul
fmuls
test
cmp
jns
push
and
mov
inc
dec
mov
clc
out
jo
inc
loopne
mov
xchg
mov
xchg
add
andb
sar
inc
movsl
push
das
sbb
inc
ljmp
cmpsb
jae
mov
nop
mov
js
daa
pop
jo
lcall
in
pop
cmp
rcll
pop
shll
push
popa
ljmp
dec
jno
cli
and
jmp
stos
clc
jbe
mov
mov
jbe
pushf
mov
fldl
inc
xor
xchg
xor
push
dec
aaa
cmp
dec
sbb
inc
hlt
sbb
add
jne
inc
push
test
filds
lds
lea
rorb
inc
xchg
leave
push
addr16
xchg
gs
dec
popf
shrl
adc
leave
in
and
mov
or
dec
test
jp
test
mov
fucomi
divl
ret
mov
rolb
out
mov
ja
pop
xlat
ret
mov
leave
popf
push
dec
mov
pop
jmp
add
adc
pop
and
fsts
int3
sub
dec
mov
sub
jecxz
pop
cmp
add
jle
mov
cmp
popa
out
in
push
adc
outsb
insb
rcrl
and
or
xor
je
and
js
js
jg
jns
ret
rorb
mov
cmp
inc
push
fidivs
test
mov
xor
xchg
or
pop
clc
add
mov
cs
lods
aas
into
push
mov
and
push
fsts
nop
mov
xchg
jmp
push
mov
jge
enter
push
push
cmp
das
cmp
pop
push
mov
arpl
pop
or
add
xchg
fidivrl
pop
mov
and
jmp
stos
imul
pusha
jbe
data16
sbb
push
popa
clc
mov
cmpsb
push
add
fimull
dec
adc
mov
xor
cmc
outsb
mov
mov
addl
icebp
cwtl
ret
js
push
clc
js
pop
ja
popf
imull
leave
xchg
imul
in
into
fldt
xchg
or
add
sbb
loop
scas
call
test
outsl
fsub
or
pusha
ljmp
imulb
xchg
out
mov
pushf
outsb
sbb
cmp
mov
out
push
jp
xchg
dec
and
cmp
out
push
leave
stc
mov
adc
in
add
outsb
stos
mov
inc
xor
lock
int
cmc
sbb
jae
addr16
pop
pop
fyl2xp1
push
aad
and
pop
adc
lret
sbb
lret
std
or
inc
scas
test
cmp
dec
xor
ds
cli
lock
clc
outsb
fdivs
pop
lea
inc
lock
push
push
xchg
lret
sub
push
jge
cmp
push
jmp
sti
or
imul
out
dec
sti
jg
adc
xor
fwait
outsb
sub
xchg
mov
push
mov
push
lahf
and
pop
sub
mov
dec
outsb
loop
jnp
mov
inc
mov
jbe
mov
cwtl
dec
jns
loop
lods
leave
adc
imul
aaa
pop
sub
mov
xor
jbe
ret
push
jmp
clc
adc
jmp
sbb
loope
cli
frstor
inc
popa
in
int
sbb
int
sbb
pop
pop
mov
cmpsl
sub
lock
negl
ja
ret
bound
jno
add
mov
xor
and
sbbb
add
mov
pop
rcl
ljmp
int
pop
pop
jo
mov
test
ret
mov
movsb
jae
es
aam
fists
pop
pop
cmp
mov
dec
mov
jp
outsl
lret
jmp
push
aaa
sbb
inc
fldt
or
lods
inc
add
jmp
xchg
pop
dec
js,pn
and
sbb
test
push
rcrl
push
mov
mov
push
pop
int
sbb
icebp
jbe
dec
andb
sbb
cmp
ss
inc
push
ret
pmaddwd
out
nop
xor
ss
jg
ds
add
xchg
scas
jbe
jl
dec
pop
imulb
insl
push
push
xor
mov
dec
push
mov
jmp
xchg
jp
jp
std
stos
mov
sub
mov
xchg
push
fs
imulb
mov
lcall
and
and
or
jne
and
es
scas
mov
cmpsl
stos
dec
repz
popf
jno
shrl
push
lret
les
sub
std
cmpsl
push
negb
stos
vpsubusw
imul
xchg
ret
push
mov
jbe
mov
sub
out
ds
xlat
in
fcomps
rorl
lret
cli
imul
jns
mov
outsl
stos
push
cmp
cmp
adc
popf
imul
mov
cmc
xchg
stc
movsb
shl
movsl
mov
xor
xchg
insl
mov
xor
pop
inc
cmp
lcall
xor
jne
orb
and
lret
sub
xchg
mov
or
sbb
out
jg
mov
ds
or
add
mov
fs
adc
dec
popf
inc
and
mov
push
push
mov
jle
leave
push
mov
movsb
inc
xchg
repnz
fadd
and
jb
pop
outsb
or
or
pop
aaa
aas
sbb
pushf
and
jb
ret
push
xchg
les
std
xlat
test
out
mov
mov
jno
cli
cmpsb
sbb
imul
jnp
shr
inc
cmpsb
lahf
mov
fdivl
pop
sub
pop
lods
rcl
out
bswap
mov
cmp
add
sbb
mov
sbb
clc
btr
xor
mov
hlt
push
pop
enter
subl
imull
mov
pop
imul
shll
out
xchg
push
push
inc
enter
push
loopne
fwait
je
cli
sbb
xchg
pop
mov
cmp
add
push
jmp
xchg
pop
icebp
mov
leave
push
xor
mov
out
mov
mov
dec
stos
scas
mov
mov
xor
ds
push
mov
sbb
push
ja
mov
mov
aaa
shlb
pop
in
xor
out
test
loope
xor
cwtl
sbb
adcb
pop
push
xor
sub
push
jo
outsl
pop
mov
lcall
push
inc
outsb
xchg
cwtl
ja
mov
jne,pt
xchg
add
mov
ds
mov
cld
add
sbb
adc
mov
sahf
out
aas
sti
dec
or
cld
fisttpll
xor
jmp
xchg
mov
int
mov
fildll
add
ret
sbb
pop
dec
rorb
jp
in
jl
hlt
jne,pn
mov
jno
shlb
sar
or
les
fsubrl
push
mov
cmpsb
fadd
mov
add
icebp
mov
pop
jbe
rol
dec
add
cmp
xor
mov
and
adc
sub
clc
inc
mov
mov
push
pop
push
jl
fsubs
jecxz
dec
stc
xor
pop
push
das
jp
filds
stos
jg
movsb
cli
dec
adc
jmp
test
xor
add
xor
push
push
aam
cmpb
inc
jp
dec
pusha
aaa
mov
jp
dec
push
mov
jne
xchg
sub
insb
icebp
ret
sub
into
sahf
adc
repnz
int3
mov
rcrl
push
jae
push
xchg
mov
xchg
lret
dec
flds
dec
bound
dec
jg
sub
nop
mov
rol
popa
call
shlb
cmpb
cmpsb
arpl
mov
movsb
mov
or
inc
rcll
mov
mov
es
insl
aad
mov
xchg
mov
jae
insb
sub
testb
fstpl
mov
and
xor
push
and
add
cwtl
sbb
jg
bound
rolb
inc
in
inc
gs
mov
insl
push
pop
xor
add
les
add
push
insb
mov
push
jns
cmp
imul
dec
lahf
lret
test
push
and
cmp
jl
xchg
loop
xchg
mov
pop
out
repz
jno
aam
es
push
push
inc
push
and
in
add
mov
shrb
jne
adc
fcmovnu
ret
push
cmp
mov
pop
jmp
add
cmp
faddp
das
ss
fsubs
cld
xchg
mov
xor
jmp
xor
ret
jg
outsb
leave
add
cmp
push
and
inc
shr
shrb
push
loope
das
mov
add
lock
rolb
scas
data16
frstor
add
mov
in
not
inc
movb
or
enter
mov
enter
jmp
pop
lret
ret
mull
not
or
mov
or
shll
ret
inc
insl
xchg
gs
mov
mov
jnp
jmp
jbe
xchg
fmul
sub
sarb
fs
mov
fdivrl
loope
push
data16
mov
adc
pop
or
sti
hlt
mov
adc
movsl
dec
add
push
ret
loopne
mov
push
fisttps
cld
mov
cmpb
xlat
fcoms
add
aaa
lret
jecxz
inc
out
dec
cltd
frstor
or
pop
int3
bound
push
enter
jne
mov
scas
jp
and
xor
fwait
idivb
in
dec
pop
pop
je
xor
jae
push
shrb
add
inc
sub
movsl
in
shlb
push
bound
lcall
sub
cmp
add
iret
shll
sbb
pop
xchg
pop
les
jnp
fwait
test
jmp
stc
mov
jle
in
test
mov
daa
nop
inc
clc
pop
xchg
mov
roll
sub
add
repnz
imul
cltd
ss
mov
sub
dec
call
sub
xor
xor
mov
test
pop
mov
xchg
repnz
scas
and
cmp
xor
xchg
sbb
sbb
pop
jae
or
jb
lcall
pop
xchg
icebp
out
dec
or
stc
push
mov
jns
mov
xor
lret
lahf
test
cmp
add
js
test
xchg
std
add
fcmovnb
xor
sub
repz
inc
dec
sahf
sahf
mov
xchg
lahf
mov
out
mov
lds
xor
or
adc
dec
lret
fs
push
aad
lods
mov
scas
sbb
out
mov
mov
add
push
cmpsl
push
mov
cmp
pushf
in
xchg
inc
dec
out
ja
fdivp
rol
add
imul
je
lods
cmp
xor
push
jb
cltd
adc
cmpsl
movsl
mov
stos
xor
cmp
popf
or
mov
ja
std
pusha
mov
xchg
lret
cld
pop
add
stc
push
pop
nop
mov
pushf
pop
in
cld
cld
ljmp
sub
mov
lods
aaa
addr16
dec
push
add
mov
push
leave
rcrl
ss
fstp
xchg
test
adc
ljmp
mov
pop
imul
inc
sbb
add
icebp
aaa
push
in
push
data16
lock
aam
sarl
push
addr16
mov
inc
xchg
dec
mov
sbb
sub
cmp
je
xor
inc
adc
movsl
out
pop
inc
rcrb
cmp
and
push
push
iret
pop
lret
xchg
inc
cmp
shll
bound
inc
inc
adc
stos
cmp
push
jne
in
dec
in
ljmp
pusha
and
jno
adc
bound
jl
enter
in
push
cmp
xor
ja
and
ret
xchg
inc
or
gs
push
pop
movsl
das
pop
fstpl
fisubrs
mov
xor
or
sub
mov
outsl
lock
scas
lock
add
add
xchg
push
lret
mov
xor
add
pop
xchg
jnp
dec
push
fucom
jmp
mov
xlat
inc
adc
sbb
hlt
lds
fsts
and
push
xor
sbb
mov
in
add
xor
sub
jbe
and
gs
mov
dec
pop
inc
jmp
inc
popf
je
in
mov
test
insb
push
inc
ss
into
sbb
xor
int
jle
adc
rclb
int3
lahf
out
frstor
lahf
ret
lds
fsubl
sub
in
fwait
enter
pop
pushf
imul
jmp
rclb
loopne
sub
stc
jbe
popa
cli
xchg
push
pushf
cmpsb
jmp
loopne
or
add
inc
cmp
push
push
push
inc
iret
mov
ss
aad
hlt
mov
aas
or
mov
movntq
int
mov
cmpsl
push
dec
sub
mov
insb
arpl
xchg
dec
fs
xor
dec
push
fdivrs
adc
jns
add
adc
pop
rclb
daa
pushf
jge
mov
sar
inc
es
adc
xchg
in
loop
loopne
ja
test
xchg
sbb
ss
mov
repz
or
in
outsb
add
outsl
repz
fists
mov
or
cs
andl
jmp
and
in
movsb
cmc
cmp
and
stos
mov
pop
dec
cli
cmpsl
jns
pushf
das
iretw
jb
out
fnstenv
and
out
mov
ljmp
xor
imul
ljmp
xchg
vmulss
enter
cmp
lods
xchg
lea
xor
ss
dec
xchg
xchg
in
mov
pushf
rol
test
inc
sbb
xor
cmp
aad
stos
cli
js
xchg
nop
jmp
sbb
add
jge
pusha
xchg
in
inc
push
cmp
data16
je
ljmp
jge
xchg
insb
add
iret
sub
xorb
sti
adc
sub
sub
dec
xchg
pop
das
movsl
sahf
inc
mov
push
ret
dec
ret
or
fsubs
cmc
jbe
jecxz
arpl
xchg
lcall
pop
mov
mov
jge
push
jbe
inc
xor
shrl
mov
ret
lcall
mov
ret
rolb
jecxz,pt
jge
xor
lret
mov
or
aam
pop
jp
mov
lock
or
sahf
jmp
repnz
lea
in
int3
insl
mov
pop
mov
inc
mov
push
adc
xor
mov
jle
jp
sahf
shlb
add
cmpb
pop
test
or
testl
outsl
push
mov
repz
jnp
repz
mov
outsb
inc
mov
mov
mov
or
jl
or
sub
add
fistps
hlt
jl
dec
imul
adcb
and
lret
pop
or
mov
stc
hlt
int
push
lahf
sbb
cwtl
sub
bound
mov
or
scas
mov
mov
jae
cltd
push
adc
lods
ds
cltd
jl
jge
xchg
mov
js
dec
inc
xchg
shl
xor
iret
and
cmc
xchg
lods
loopne
cmp
insb
shlb
xchg
gs
ljmp
xor
data16
or
mov
int
pop
xor
dec
insl
or
loop
mov
jne
std
iret
dec
jp
cmp
fcmovnb
mov
pop
sbb
les
and
cmp
mov
push
lcall
mov
jno
adc
pop
nop
cwtl
enter
shr
and
inc
dec
push
aaa
add
sbb
jge
push
xor
adc
mov
mov
fistpl
cmp
addl
repnz
lds
mov
jbe
fimuls
stos
test
insb
jae
xor
and
mov
roll
pop
adc
mulb
jno
add
cmc
inc
add
ret
push
mov
push
mov
jns
dec
inc
out
mov
pushf
adc
stos
sub
bound
xor
add
sbb
leave
pushf
sbb
clc
sub
subb
loope
nop
iret
out
rolb
ficompl
inc
insl
sbb
clc
sub
sub
xchg
pop
gs
rcrb
insb
mov
sub
hlt
out
cmpsl
adc
rclb
xchg
sub
aaa
sbb
mov
dec
gs
xor
sahf
sbb
xchg
cmp
sarl
leave
inc
lahf
or
xlat
or
pop
mov
fisubl
lods
xor
push
dec
in
daa
pop
sub
sbb
push
jmp
mov
ljmp
int3
jae
mov
cmc
push
or
ror
fdivr
and
sarb
cmp
stos
or
addr16
sub
mov
popf
in
or
jo
xor
leave
fisttpll
pop
or
or
lea
ret
in
lods
fcompl
pop
fnstenv
pop
add
push
mov
mov
sbb
sub
and
mov
sbb
fadds
sub
stos
sub
andl
imul
mov
push
bound
jbe
insl
addr16
and
pop
jge
fdivl
sbb
dec
addl
outsl
and
push
cmpsb
or
sarb
sub
lods
aad
imull
mov
or
inc
sub
add
mov
pop
mov
cmp
fs
push
sbb
dec
pusha
or
mov
dec
lahf
push
inc
pushf
cmpsw
mov
or
popa
fisubrs
decl
xor
cmp
imul
push
sbb
cmp
pop
jne
cld
cmp
into
movsb
icebp
and
nop
pop
xlat
xchg
jecxz
hlt
xor
leave
jno
lcall
fucompp
call
inc
sbb
dec
dec
mov
mov
test
mov
scas
cmp
fsubs
out
je
jmp
movsl
lahf
mov
cli
cmpsb
or
std
cli
push
js
mov
mov
test
sbb
hlt
fnstenv
ljmp
cmp
test
pop
lret
inc
jae
aaa
push
mov
in
dec
push
pop
push
add
sbb
test
in
cwtl
mov
jmp
scas
sbb
xor
mov
data16
je
mov
push
jp
lcall
mov
incb
imul
inc
xchg
pop
sub
mov
outsb
mov
cli
jp
int
mov
movsb
int3
cmc
int
movsl
movsl
outsb
sub
mov
scas
mov
push
push
jge
mov
ret
divb
xchg
loop
cli
dec
sub
into
or
rolb
sub
xchg
dec
add
and
add
mov
jae
jno
jle
out
shll
je
mov
jmp
xor
call
mov
jae
pop
js
addb
inc
icebp
push
add
mov
daa
or
lods
xchg
inc
dec
xor
dec
jle
xor
out
pushf
lcall
ret
push
cmp
jge
loope
sti
mov
icebp
push
or
xchg
pop
mov
orl
shrb
cmp
fstpl
push
push
shrl
movsl
pop
mov
and
push
jmp
je
inc
scas
sbb
fisttpl
ss
mov
int
cli
data16
push
lret
and
cmpsl
out
or
inc
movsb
ss
into
fldt
mov
jns
popa
push
sahf
jnp
das
xchg
sub
add
sbb
das
andb
push
mov
lds
pusha
pop
mov
and
aaa
in
test
lods
xchg
mov
mov
mov
aaa
cmp
jg
mov
arpl
inc
adc
dec
sbb
les
call
pop
dec
push
gs
cmp
dec
pop
fbstp
jbe
stos
pop
out
xchg
sbb
sub
pop
push
notl
inc
lods
adc
arpl
inc
add
jbe
sbb
inc
mov
aaa
sbb
push
pop
pop
add
mov
or
and
into
or
mov
bnd
shlb
icebp
mov
add
daa
mov
cmc
push
in
fs
outsl
icebp
sbbb
sti
mov
rol
sub
popa
out
add
jo
loope
pop
int
lods
aas
lahf
cmpsb
mov
test
jmp
cs
in
pop
inc
xor
sti
stos
xor
mov
add
cli
sarb
and
jge
out
add
int
jns
mov
pusha
dec
add
xchg
js
aaa
fwait
push
cwtl
out
cltd
jg
mov
add
insb
cli
inc
sub
xor
xchg
popf
cmc
dec
push
mov
xorb
cmp
add
adc
arpl
mov
jl
shrb
or
lret
ljmp
mov
fwait
cld
sti
subl
mov
mov
punpckhdq
sbb
inc
fwait
mov
dec
stc
fstps
scas
int3
int3
jns
pop
test
aam
sub
inc
iret
fisubrs
push
sbbb
sbb
dec
cwtl
mov
cwtl
aaa
sbb
lods
in
sbb
daa
mov
jge
divb
mov
stos
and
push
dec
gs
aam
loopne
pop
out
dec
and
popf
push
pusha
outsl
cmpsb
pop
call
pop
mov
imul
lock
je
outsl
adc
orb
pop
sub
add
jp
mov
adc
mov
in
mov
popa
ficoml
or
into
cli
push
jae
ds
jge
sub
call
mov
sahf
fildll
dec
jo
out
cmp
ljmp
pusha
mov
addr16
loop
mov
in
mov
inc
push
fwait
mov
pusha
mov
cld
iret
notb
lret
mov
dec
int
inc
outsb
in
push
xchg
sbb
jbe
fs
mov
flds
or
and
fs
sub
fwait
test
scas
jmp
rorl
les
cmp
push
popf
sarl
idiv
mov
inc
mov
in
xchg
jo
push
jne
sub
lea
nop
fisttps
xchg
xchg
sti
or
sub
push
clc
xor
sbb
rorb
addr16
xor
fstps
daa
xchg
inc
or
iret
movsb
pop
loopne
cwtl
fdivrp
sbb
fidivs
dec
pop
push
inc
jb
xlat
aad
push
mov
ret
add
inc
dec
cmp
out
mov
xchg
push
jp
sub
cmp
or
repz
xor
mov
jmp
adc
fmul
aam
push
sti
and
inc
sub
mov
lret
push
xchg
cld
in
fnstenv
mov
sbb
add
jg,pn
test
xchg
mov
sub
pop
stc
jge
xor
outsb
test
or
xchg
xchg
xor
xchg
push
aad
push
pop
es
das
mov
xor
jns
lahf
loope
popf
addl
pop
int3
xor
inc
jae
int3
and
dec
push
fisttpl
mov
sbb
cmpsl
in
xor
mov
cwtl
mov
stc
jl
mov
mov
add
add
aaa
loope
or
in
stos
sub
push
icebp
jg
push
or
jae
push
fnsave
push
enter
mov
adc
xor
cmpsb
pop
test
push
stos
aam
aam
stos
scas
sub
or
xchg
xor
movsl
adc
scas
sbb
push
xor
pavgb
fld
mov
sub
pop
test
fcompl
push
jnp
xor
inc
arpl
and
cmp
jbe
and
mov
loopne
clc
std
loop
sbb
mov
lret
jnp
sub
or
out
pop
mov
pop
and
sub
call
stos
leave
dec
push
adcb
push
jmp
pop
div
xor
imul
out
lahf
repnz
or
push
ljmp
jb
popa
imul
add
adc
xor
push
repnz
pop
data16
pop
dec
inc
out
sti
hlt
xchg
mov
pop
je
pop
and
shr
jns
sahf
mov
dec
out
mov
xor
icebp
lock
repnz
in
dec
mov
das
jo
movsb
sub
add
lods
fildll
mov
jg
push
ja
or
dec
ret
xor
cmp
xor
icebp
or
seto
sbbl
ret
and
mov
or
sub
pop
shll
mov
lahf
sub
push
inc
sbb
xchg
loope
pop
hlt
adc
lret
pop
out
jmp
ret
ja
dec
daa
idivl
mov
sbb
xor
std
imul
and
mov
mov
rcl
sti
lods
clc
nop
orl
and
adc
jno
mov
lret
mov
push
xor
add
mov
mov
sbb
lods
push
sbb
sbb
enterw
push
aam
cwtl
scas
arpl
int
pushf
stos
movsb
or
add
sub
mov
mov
push
push
and
popl
aaa
pop
popf
inc
cs
cmc
outsb
imul
inc
sub
and
or
outsl
jge
sub
cli
data16
sub
mov
xor
xorb
xor
jno
imull
xchg
inc
clc
cmpl
shll
mov
out
ss
jo
not
cltd
xlat
xor
fnstenv
inc
cmp
cltd
lods
fmuls
xchg
push
aaa
push
mov
inc
xchg
lea
xor
ss
pop
cltd
jl
fiaddl
fyl2x
sbb
add
adc
ds
gs
jb
inc
clc
jbe
pop
bound
sub
pushf
mov
enter
xor
pop
mov
mov
mov
xchg
jge
xchg
sbb
aam
jbe
rorb
push
icebp
pop
mov
bound
data16
dec
inc
xlat
cmp
dec
add
pusha
ficompl
xchg
mov
inc
inc
xchg
mov
mov
pop
mov
push
int3
or
and
dec
add
ret
ja
sbb
and
roll
xchg
int
push
icebp
pmaxub
jmp
dec
sbb
pop
mov
push
fstl
stos
sti
adcl
ja
jae
xchg
insb
lret
mov
testb
das
std
push
sub
scas
test
cltd
add
lods
mov
shll
imul
insb
dec
xchg
insl
outsb
out
loope
push
mov
test
and
inc
clc
add
push
fwait
in
les
or
push
pop
stc
sti
loop
lret
jmp
jp
lret
add
ret
dec
rcll
xlat
push
jb
mov
daa
in
aad
stc
xlat
adc
es
inc
push
jecxz
dec
sub
cmp
std
cs
fimull
out
mov
jecxz
test
pop
mov
lret
pop
test
mov
les
cld
jp
inc
sbb
insb
mov
andb
xchg
test
or
add
stc
adc
out
dec
jne
popa
loope
mov
jge
scas
mov
dec
push
xor
hlt
jge
sbb
mov
push
or
mov
dec
sarw
mov
xlat
les
cld
aaa
rol
cmc
add
shll
pop
popf
pop
popf
cmovle
stos
imul
int
ret
jecxz
rdmsr
dec
daa
jle
dec
inc
mov
out
xor
loop
pop
sub
mov
sub
fs
push
cmc
mov
add
dec
sahf
jns
popa
repnz
mov
repnz
into
mov
and
jne
lcall
adcb
scas
mov
repnz
mov
or
aaa
mov
test
add
cli
loope
mov
das
cmp
xchg
addl
add
dec
dec
cltd
les
in
sbb
xchg
jns
popl
add
flds
mov
inc
jmp
rcl
lock
xorl
xlat
int
inc
jle
cwtl
jmp
mov
sti
sti
inc
sbb
rolb
cmp
pop
andl
pop
mov
pushf
cmp
sbb
scas
setg
aas
pop
lea
dec
sub
sbb
lret
cmp
inc
fistps
push
adc
lret
push
mov
adc
inc
dec
adc
xchg
inc
aam
mov
mov
insb
sti
aas
inc
das
mov
cmp
inc
inc
inc
sbb
or
nop
cmp
out
cli
add
divl
xchg
push
dec
adc
mov
adc
sbb
inc
stc
dec
aaa
mov
leave
pusha
inc
mov
mov
or
xchg
or
xchg
loope
loop
scas
clts
incl
movsb
loopne
ds
and
dec
fsubrl
sti
and
ret
imul
or
sbb
add
dec
adc
fwait
das
xor
and
hlt
cltd
cli
call
mov
and
sahf
mov
dec
jecxz
mov
xor
aaa
mov
push
push
adc
inc
mov
pop
cmpsl
pop
mov
xlat
add
push
inc
in
inc
push
cmpsl
mov
les
sbb
cmc
push
outsl
cli
adc
fldcw
dec
pusha
jp
das
inc
mov
out
fdivp
lds
icebp
and
jb
and
mov
and
push
pop
loope
aaa
jno
or
rcll
pop
aam
push
pop
fdivrs
icebp
xor
enter
faddl
fnstenv
inc
negb
adc
add
sub
mov
in
cwtl
rorb
iret
jmp
icebp
push
push
jo
scas
push
mov
shlb
cmp
mov
pop
in
xor
leave
xor
lods
add
fs
lods
fwait
shl
out
or
jmp
cld
push
adc
cmpsl
adc
ja
mov
popa
cmp
xor
mov
add
jbe
lods
int
and
outsb
xchg
xor
hlt
ds
and
out
out
jnp
or
addl
adc
iret
ja
xor
fwait
jecxz
push
lods
xor
lcall
into
fistpll
xchg
push
nop
sbb
js
adcb
mov
cltd
int3
cli
fwait
sbb
jmp
sbb
in
in
insl
jae
lods
dec
xchg
aas
fisttpl
stc
scas
push
out
in
jp
mov
xor
repnz
jno
mov
xchg
cmp
pop
inc
adc
or
or
jmp
jne
out
lock
ja
call
addb
mov
dec
test
cmp
add
cmp
es
int3
jae
sbb
data16
or
je
ret
inc
loop
jne
addr16
cli
mov
cmp
dec
lds
arpl
xchg
adc
ret
test
fcmovne
mov
cmp
insb
add
xchg
incl
adc
jl
mov
cmp
test
gs
lock
sbb
scas
shr
fistps
jle
push
cs
cmp
jae
and
mov
push
xchg
mov
jb
stos
push
push
mov
mov
fmull
jae
aaa
repnz
std
pop
popf
orb
stc
ss
jecxz
inc
inc
fs
xchg
jle
add
pop
inc
fnsave
cld
xchg
cmpsl
and
mov
push
jbe
jl
cmp
or
and
xor
xor
scas
sub
xor
outsl
adc
out
pop
popf
adc
and
push
adc
addb
fistpl
mov
mov
std
into
lret
sbb
call
xor
or
ljmp
mov
mov
or
push
xor
nop
lahf
mov
add
sub
pusha
subb
leave
inc
xor
pop
test
imul
je
rcrb
mov
mov
push
mov
sbb
pop
bound
and
gs
int3
out
repz
in
jecxz
out
xor
pop
stos
pop
rolb
xor
fwait
cmc
jbe
pop
jl
fcoml
call
push
mov
fsubrs
inc
lods
mov
mov
mov
jbe
mov
imul
xchg
enter
push
enter
test
or
add
mov
sbb
je
add
fs
xchg
dec
sub
lods
loope
and
inc
cltd
inc
fsubrs
adc
cmpsl
ror
cmpsl
into
dec
lods
cli
sbb
push
push
push
mov
mov
in
lods
call
jnp
push
cmc
lahf
mov
int
mov
fcmovnbe
or
shlb
jns
sub
sbbb
das
scas
jge
leave
sbb
xor
sub
outsb
push
xchg
std
lret
adc
inc
push
into
inc
inc
sbb
popf
incl
mov
or
push
stos
inc
std
mov
scas
data16
add
lock
rcrl
add
xchg
fcmovb
mov
imul
inc
pop
pop
jle
js
jnp
dec
mov
inc
jmp
mov
mov
xchg
mov
mull
mov
ds
xor
sub
mov
addb
cmpsb
sbb
icebp
rorl
je
movsl
add
outsb
mov
mov
and
sub
movsl
or
xchg
sti
xchg
cwtl
and
fldcw
pop
cs
fwait
mov
sbb
ret
adc
push
sbb
mov
sub
fstpt
cmp
sub
dec
or
pushf
les
and
cltd
test
mov
pop
cmp
add
cld
inc
out
jbe
pusha
fimuls
jno
dec
out
adc
out
mov
in
addr16
test
mov
jbe
pop
movsb
adc
filds
pusha
stc
and
push
cmpsb
cmp
sbb
xchg
push
mov
adc
fistl
addr16
fildll
rcl
mov
jne
sbb
push
cwtl
dec
dec
in
mov
inc
dec
repnz
cmp
xchg
xchg
xor
jb
xchg
sub
call
pushf
jge
les
std
or
or
cltd
jae
ds
pop
fcmovnbe
sarb
rcll
inc
int3
in
cmp
pop
dec
dec
movsl
xchg
mov
subb
jg
addb
in
dec
fmull
mov
ret
or
arpl
dec
jae
test
rorb
dec
test
ret
push
int3
cld
dec
mov
push
xchg
xchg
lcall
imul
das
gs
jg
push
test
nop
pop
cmp
cltd
sbb
pop
les
lret
mov
xchg
cmp
push
push
xor
mov
dec
inc
jge
sub
mov
adc
pop
pushf
repz
sbb
inc
or
push
jle
mov
mov
cmp
ret
adc
inc
inc
int3
sub
rorb
mov
in
icebp
jbe
jne
sbb
mov
roll
sub
sub
outsl
in
repnz
hlt
push
out
std
pop
imul
sub
push
imul
fisubl
xchg
cmpsl
jo
adc
and
push
inc
fwait
ds
mov
lds
cltd
mov
or
cmp
xorl
jb
les
stos
mov
pop
push
icebp
je
sub
sub
shlb
daa
adc
xchg
inc
sarl
inc
popf
stos
mov
xor
pop
adc
mov
pusha
cmc
adc
lret
cwtl
jns
dec
out
add
push
enter
ljmp
mov
mov
imul
ret
or
and
sbb
mov
xorb
loop
fildl
xchg
cmc
cmpsb
ss
sub
jp
cmp
bound
jno
xlat
fwait
sbb
or
aam
inc
arpl
addr16
jmp
mov
push
leave
add
iret
das
int
mov
add
aaa
xchg
fwait
mov
fcmove
push
fsub
rol
lcall
dec
leave
sub
int3
lret
mov
mov
mov
cwtl
aaa
or
mov
mov
xchg
adc
jb
es
add
icebp
or
decl
mov
out
jle
out
fnstenv
xchg
stc
addr16
dec
jmp
sbb
int3
cmp
repnz
mov
mov
stos
fistps
or
push
adc
popa
sbbb
fnsave
push
mov
sbb
insb
fsts
dec
dec
mov
adc
inc
mov
je
sbb
clc
jmp
cmp
push
jmp
into
sub
arpl
xchg
push
push
push
shrb
xor
testb
mov
mov
pop
test
inc
push
or
out
movsb
cltd
jmp
loop
pop
in
out
enter
fnsave
push
rep
pushf
pop
ja
into
jns
fdivr
mov
xchg
test
lret
andb
filds
cmpsb
aaa
fcomps
pop
test
test
add
rcll
inc
stos
inc
dec
mov
cmp
jbe
pop
lahf
repz
mov
imul
push
movsb
inc
cmp
outsl
sbb
aad
and
out
or
push
xchg
mov
popa
test
and
jle
dec
push
hlt
cvtpi2ps
imulb
push
scas
insb
loope
sbb
xchg
mov
aaa
mov
sub
xchg
sub
dec
fwait
push
testb
es
push
pop
and
pusha
xor
push
add
in
sahf
adc
adc
add
cwtl
pop
loopne
jl
shlb
fidivrl
insb
sbbl
lret
inc
xor
jne
insb
call
dec
adc
inc
stos
in
sub
push
adc
fs
pop
test
adc
dec
push
je
in
lret
push
sar
sti
ds
ljmp
fs
adc
adc
dec
mov
jle
nop
cltd
sbb
mov
lret
enter
dec
inc
rclb
and
or
and
shrl
outsl
fwait
mov
int3
icebp
mov
cld
xor
cmpsl
jge
scas
sbb
sbb
in
mov
inc
movsl
inc
fstpt
dec
jno
mull
in
ljmp
push
rorl
gs
bound
mov
jns
adc
xchg
push
repnz
xor
sub
dec
dec
mov
cmp
test
and
sbb
jo
lea
mov
aam
les
xchg
mov
sub
arpl
or
mov
sar
mov
loopne
xchg
adc
jo
pop
imull
jae
jle
aaa
test
xchg
mov
out
stos
xchg
iret
jnp
je
arpl
jmp
pop
pop
fsubrl
pop
push
shrl
xchg
pop
ljmp
push
push
xchg
orb
cs
push
cmp
jle
push
jle
xchg
push
mov
push
dec
xchg
adc
mov
jmp
or
shlb
jmp
lods
scas
sbb
pop
mov
lcall
mov
sbb
scas
je
lods
adc
addl
das
cmc
hlt
push
out
push
cmp
or
clc
adc
test
xor
jb
cli
mov
movsl
dec
das
idivb
nop
push
mov
sub
repz
out
mov
fsubrl
iret
xor
dec
or
push
sub
outsl
cld
mov
sbb
push
xor
lret
xchg
cmp
mov
sahf
mov
cs
popf
out
roll
or
jno
push
in
pushf
mov
adc
jns
cltd
adc
insl
ret
test
add
fildl
or
sub
jne
xchg
aaa
rol
jl
add
cmc
lock
jge
fnsave
inc
outsl
mov
inc
or
inc
in
lcall
xorb
je
dec
sub
sub
popa
xor
cmp
shr
mov
pop
cvttps2pi
jne
movsl
xor
sbb
arpl
imul
mov
call
fistps
pop
jne
lcall
dec
sbb
xor
ret
pop
je
je
mov
dec
and
movsl
jnp
xchg
lret
insb
xchg
fidivl
jmp
add
adc
jge
sahf
dec
lods
into
push
lcall
pop
sahf
inc
adc
xchg
fdivs
sbb
mov
cld
cmp
sub
pushf
jmp
dec
jae
sub
xor
out
or
pop
in
lret
je
mov
outsl
movsl
push
jp
je
cmc
jb
pop
bound
enter
bound
fdivrs
push
stos
dec
ret
dec
xlat
inc
inc
inc
test
ret
sti
cld
xorl
adc
repz
push
fsubrs
xor
cmpsl
ficoms
mov
jge
mov
mov
jno
dec
test
loope
inc
test
dec
mov
xor
mov
mov
out
cmp
hlt
fmuls
insl
rorl
xor
movsl
mov
les
pop
ljmp
cmpsb
mov
pop
add
test
int3
fiaddl
fistl
xchg
sub
popf
in
into
stos
cmpsb
jo
imul
dec
popf
test
push
push
iret
xchg
sarl
movsl
mov
sbb
push
lods
jg
rcrb
mov
push
fdivs
xchg
out
imul
pop
fs
and
mov
sbb
mov
and
ds
int3
fldl
mov
jmp
in
mov
or
ret
out
sbb
push
roll
adc
nop
pop
and
mov
insl
or
adc
jae
inc
mov
daa
enter
test
adc
cmpb
inc
push
or
sub
mov
addr16
xor
aam
pop
mov
push
pusha
shufps
add
sbb
lret
loope
lods
jecxz
mov
adc
jbe
bound
mov
mov
xchg
leave
cs
mov
call
fcompl
add
fiadds
inc
mov
out
or
rcl
arpl
mov
loope
ret
cwtl
js
inc
insb
lahf
test
pop
inc
dec
stc
jmp
popf
divl
cltd
ret
inc
movsb
in
fnsave
out
lods
pop
mov
lahf
jnp
ret
fsubrl
cmp
imul
enter
mov
lret
rep
jecxz
adc
mov
cmp
dec
test
mov
jle
jne
in
inc
dec
push
ds
pop
xor
add
inc
and
xchg
and
stc
dec
push
into
sbb
and
outsb
push
cmp
xchg
dec
leave
loopne
jmp
popa
mov
movsl
cltd
pop
and
push
xor
iret
pusha
adc
out
jmp
fisttps
cli
test
inc
popa
in
cmp
push
popa
lret
aam
xor
xor
test
mov
jns
xor
fwait
xor
insb
or
mov
mov
out
inc
pop
test
mov
jb
jp
in
mov
loopne
pop
mov
icebp
fs
daa
xchg
push
push
test
and
dec
mov
imull
gs
stos
lret
imul
pop
xchg
xor
test
adc
insl
mov
xchg
sbb
hlt
sub
aam
aam
or
mov
dec
xor
mov
outsb
cmp
sbb
stos
nop
cwtl
lock
pop
in
sbb
shrl
das
test
push
sbb
and
or
mov
cmp
and
jmp
or
mov
push
ret
insl
outsw
fistpl
sub
lods
cltd
push
jb
cmp
mov
sbb
mov
lock
into
xchg
sahf
rcl
test
adc
es
pop
add
inc
call
mov
xor
shl
test
pop
xchg
cmp
add
mov
pop
sbb
std
and
aam
add
test
or
lret
or
leave
xchg
out
inc
addl
xor
lds
ja
es
dec
jne
dec
scas
cmc
clc
test
push
rcrl
outsl
pop
xchg
stc
inc
mov
cltd
cltd
movsl
push
repnz
popf
subb
dec
xor
hlt
jno
lods
sub
push
mov
iret
divb
xchg
fs
lods
cmpsl
mov
rolb
lds
jmp
push
lea
pop
faddl
pop
cmp
push
jae
push
sub
sub
sub
push
imulb
push
cltd
adc
insl
mov
inc
mov
mov
push
cmp
adc
stos
xchg
ss
push
lcall
scas
mov
push
xor
sub
or
mov
sahf
mov
xchg
repz
js
sub
pop
lods
sbb
insl
jge
adc
insl
in
pop
les
loop
ljmp
xor
dec
adc
xchg
sbb
jmp
pop
fcomps
sbb
sbb
xor
std
xchg
xchg
inc
in
out
test
test
pop
inc
outsb
xor
mov
mov
cmp
cmp
data16
testb
adc
jg
cmp
or
jbe
int3
pop
inc
mov
mov
pop
cltd
or
daa
enter
aad
in
and
cmp
ret
add
mov
push
loop
mov
add
movsb
dec
ficoms
cmp
ret
push
or
out
push
sub
cmp
out
jb
jmp
cltd
xchg
icebp
and
loopne
enter
addr16
popf
xor
mov
mov
mov
aas
movsl
dec
xlat
pushf
ret
iret
fstpt
shl
mov
loope
dec
aaa
push
stos
sti
stos
mov
sbb
orl
ret
mov
or
iret
push
enter
ljmp
sti
test
ret
lods
xor
inc
orb
fdivrl
je
test
aaa
jp
cmpsl
cwtl
inc
fwait
mov
sbb
clc
cmp
gs
inc
dec
mov
mov
lret
or
push
inc
sbb
push
ror
rorb
clc
jo
ds
mov
mov
das
sbb
dec
imul
xor
clc
daa
fmuls
jecxz
add
loopne
je
dec
pushf
fidivs
dec
out
clc
jb
add
mov
popf
sub
push
jnp
xchg
jle
out
int3
ret
push
stos
jb
xchg
lock
lds
jae
je
test
into
adc
xchg
test
repnz
mov
or
jo
push
push
shrb
ljmp
sbb
ja
repz
nop
dec
adc
sub
pushf
cmp
push
mov
fildl
ja
popf
std
and
ret
dec
pop
out
pop
mov
dec
sarl
inc
enter
pop
imulb
cmp
sbb
pop
push
bnd
mov
js
fmull
mov
jns
mov
sub
leave
cmpsl
in
icebp
adc
lret
sub
outsl
and
lret
fs
cmp
cmc
pop
jl
xchg
prefetch
or
fcoml
bound
and
push
aad
inc
aad
cmpsl
and
fs
dec
stc
pushf
sti
pop
xorb
mov
outsl
cmp
sub
jbe
test
hlt
testb
mov
jl
add
push
enter
sbb
scas
push
dec
or
push
test
pop
mov
adc
les
mov
push
push
sub
jmp
push
scas
jl
or
mov
push
popf
and
pop
sbb
jne
bound
jno
cli
int3
sarb
sbb
aad
fistpll
or
loope
pop
push
dec
xor
pop
push
push
mov
rclb
push
cmpsb
ret
clc
shlb
ds
out
push
jno
pop
daa
out
jbe
mov
add
lds
addb
mov
das
cmc
arpl
sub
lret
das
stos
movsl
stos
sub
jno
fcomi
stos
jbe
inc
int
pop
jbe
insb
shlb
fsub
insb
xor
cltd
call
and
pushf
push
cmc
movsb
mov
push
scas
push
outsb
pop
and
or
adcl
daa
inc
stc
shl
inc
cmp
js
pop
pop
jge
cli
add
loop
idivl
jbe,pt
jne
jnp
push
popf
lods
in
jl
cli
sbb
adc
popf
pop
cmpsb
lds
cmc
mov
xchg
dec
mov
loope
jo
cmp
and
movsl
pop
mov
pusha
dec
dec
xchg
repz
test
add
jns
xor
fcmovne
mov
lret
int
aaa
adc
xchg
sub
loope
out
jne
push
fsubrs
outsb
xchg
pop
jp
packsswb
push
out
pop
rcll
inc
call
push
mov
xor
and
jno
fcompl
adc
fildl
cmp
add
add
or
inc
pop
jno
enter
pop
aaa
dec
inc
call
sub
out
fstl
ljmp
in
or
push
dec
cmpsb
orl
icebp
arpl
lret
cld
and
mov
stc
in
mov
mov
mov
ret
sti
mov
sbb
stc
pushf
push
inc
sub
cmpsl
sbb
mov
pop
inc
push
addr16
jp
nop
cwtl
mov
jno
mov
push
fwait
jg
int
xchg
jae
popf
push
stos
sbb
lahf
xchg
les
loop
lods
int
test
leave
out
repz
cmp
push
mov
pop
jp
or
stos
mov
test
jle
sbb
sub
xchg
jae
orb
mov
add
fimuls
lods
movsb
fnsave
jmp
cmp
loope
ljmp
aam
mov
cmpb
add
xchg
cmp
ret
push
xchg
cmp
lds
sarb
mov
push
std
test
or
ficoms
cli
sub
mov
cmpsb
xor
add
adc
cmpsl
loopne
xor
or
xchg
sub
pop
xor
fmull
adc
lret
jge
xor
mov
ja
pusha
inc
icebp
ja
pop
push
pop
sub
mov
aas
stos
ljmp
popa
pop
test
lahf
mov
xchg
sbb
enter
in
mov
mov
sub
aaa
test
push
and
cmp
jae
ret
pop
or
push
out
movsl
and
mov
adc
test
mov
nop
imul
or
fs
aad
aaa
cmp
insb
movsl
lret
sub
cmp
rcr
cmp
pushf
aaa
leave
sub
movsl
das
lcall
and
push
insb
and
int3
push
jbe
dec
inc
or
fcoml
pop
loop,pn
leave
hlt
lods
in
push
repnz
shlb
bound
aad
out
fwait
shr
minps
bswap
sbb
or
fs
pop
out
dec
add
push
sub
out
inc
push
and
inc
sub
hlt
dec
sbb
fisubl
xchg
sub
hlt
std
fprem1
rcrb
stc
nop
jne
push
imulb
mov
stos
loop
ret
aad
nop
sub
sbb
dec
inc
pop
jge
lds
scas
jnp
iret
lods
das
pop
in
and
aas
pmaddwd
push
jno
xor
jle
movsl
add
jbe
mov
int
add
sbb
jmp
ja
iret
rorl
ds
dec
inc
imul
xor
sbb
xchg
aas
pusha
pushf
or
jne
lret
aam
mov
jns
or
enter
lahf
dec
cmp
pop
sbb
xchg
gs
push
bound
inc
pop
scas
stc
lock
or
data16
loop
nop
pop
jae
xor
jge
ret
jl
inc
es
pop
add
push
push
sbb
inc
xchg
push
xchg
clc
jmp
int
push
pop
pop
jecxz
mov
mov
xor
scas
icebp
jno
sub
fldt
jo
gs
cmp
mov
outsl
cmpsl
mov
punpckhbw
push
cmc
sti
js
adc
mov
xor
pop
pop
loopne
mov
or
or
xchg
lcall
sub
daa
sub
int
ss
pushf
adc
movb
loope
mov
cmp
inc
ret
mov
ds
mov
scas
sarb
mov
fbstp
js
xor
xor
jp
inc
outsl
loop
push
mov
int
cmp
and
arpl
imul
push
mov
cltd
insb
sahf
add
jne
outsb
imul
inc
mov
jb
mov
mov
jns
aam
cmpsl
int3
jl
fcmovne
xor
push
and
movsl
xlat
stc
sar
test
loop
dec
loope
xorb
jnp
or
imull
daa
sbb
pop
mov
push
test
sub
mov
add
mov
adc
fisubrs
and
out
xchg
xchg
push
out
arpl
out
out
push
mov
cmp
ljmp
inc
jbe
das
or
jbe
ja
jp
sub
push
inc
jg
addr16
std
stos
mov
jl
scas
in
jb
movsb
movsb
popa
mov
xor
jb
add
stc
cmc
jle
int3
repnz
arpl
das
jae
push
inc
dec
je
xchg
mov
lds
jo
inc
jecxz
mov
cs
cmpsl
pop
rclb
mov
sub
push
xor
jbe
xchg
pop
mov
out
dec
pop
mov
stos
in
loopne
lret
fsubrs
fwait
repz
jo
lods
jbe
es
sahf
pop
adc
xchg
cmpsl
dec
push
test
sbb
stc
test
lds
sub
jnp
mov
lea
out
aas
jb
aam
pop
fimull
ret
and
fidivs
or
push
enter
sub
out
pop
daa
test
lcall
xor
pusha
jnp
ljmp
add
insb
mov
push
jp
test
sub
mov
pop
test
dec
mov
push
mov
insl
fiaddl
push
xor
out
pop
mov
ss
sub
bound
mov
imul
mov
push
xchg
jle
cltd
pop
mov
add
lret
sub
mov
lock
lahf
mov
aad
pop
xorl
into
fildll
sbb
cmp
shll
mov
jg
leave
fldcw
rorl
xlat
jmp
addr16
push
xchg
ds
out
insb
mov
and
mov
imul
loop
sbb
xor
std
lods
jnp
or
add
in
popf
mov
pushf
jns
sbb
ds
clc
push
orb
notl
in
dec
cmp
dec
push
test
enter
adc
push
or
push
adc
out
xchg
fcomp
mov
ret
aad
inc
push
xchg
mov
out
mov
negl
or
push
ror
das
and
lods
movsb
stos
mov
leave
jmp
xor
roll
mov
movsb
sbb
lahf
cmpsb
aas
lods
clc
xchg
lds
sub
pop
jge
cmp
mov
movsb
cwtl
inc
sbb
mov
xchg
bound
pop
push
shrl
bound
xor
xchg
sub
insb
ret
int3
sub
popf
adc
testl
stos
movsb
push
add
xchg
push
push
inc
push
imul
xor
fisubrs
jl
mov
and
sub
aad
mov
lods
test
or
mov
and
cmp
gs
bound
orl
or
jns
lock
and
icebp
pop
mov
sbb
ffree
ret
xchg
aam
jl
mov
pop
and
xor
test
nop
and
pop
imul
add
adc
mov
push
sbb
test
jge
imul
pop
add
shl
sahf
jecxz
inc
in
call
xlat
push
sbb
and
jo
test
or
imul
xlat
pop
loope
aas
in
sarb
addr16
js
sub
xchg
cmp
iret
lahf
ja
mov
cli
push
push
in
sub
lahf
or
cmp
loop
cltd
fcomps
into
lea
xchg
pop
nop
jns
xor
rclb
in
and
into
shll
sti
jbe
push
sti
xchg
inc
jp
push
jns
xor
repnz
xor
hlt
mov
dec
in
or
stc
fsts
testb
iret
test
aaa
inc
stos
notl
fimuls
pop
xor
aas
ljmp
mov
dec
pop
test
cld
push
ret
arpl
inc
movsb
daa
push
insb
lea
push
cltd
add
xchg
mov
adc
add
pusha
xlat
ljmp
inc
cmpsl
sub
pop
aad
inc
cmp
sub
mov
mov
loop
rcrb
jle
fcom
mov
pushf
rclb
jmp
test
push
gs
adc
in
jnp
dec
cmp
pop
jp
dec
push
movsb
loop
bts
scas
ret
decl
ljmp
xor
and
fcmovb
leave
into
add
arpl
ja
outsl
ret
and
add
popf
out
cmpsb
scas
jno
xchg
inc
inc
data16
push
in
popa
xchg
das
aaa
fdivl
mov
cmp
data16
cmp
movsl
pop
hlt
cmp
loop
lds
xor
dec
dec
insl
dec
imul
stos
xchg
mov
sub
fwait
lcall
xor
sbb
sub
push
adc
subl
xor
dec
cmpsb
iret
and
movsl
mov
lods
xchg
test
xchg
mov
rcll
push
sbb
mov
or
and
adc
arpl
cli
ret
push
in
jmp
inc
xchg
xchg
jmp
sbb
push
jmp
decb
sti
lds
rorl
or
pop
xlat
div
stos
jbe
xor
inc
inc
and
mov
ja
arpl
ss
dec
adc
scas
popa
sbb
push
adc
sbbl
out
pop
fmuls
cmp
xchg
push
pop
inc
test
loopne
push
cmp
pop
cmp
in
xchg
dec
movsb
sub
xor
jmp
xor
lcall
sbb
enter
xchg
cs
scas
and
push
jbe
inc
in
pop
cwtl
mov
cmpsb
in
mov
les
xor
adc
inc
test
push
jbe
lods
mov
mov
rorb
jno
adc
cmp
pop
orb
rorb
je
pop
push
lock
adc
je
jle
adc
mov
hlt
mov
push
fcompl
xor
mov
or
xchg
mov
lock
cs
mov
mov
and
stc
and
cmpsl
ds
dec
notl
and
pop
fiadds
inc
jae
cmp
movsb
leave
mov
cli
add
pop
lock
jae
pop
sbb
add
test
lods
jns
sub
xchg
pop
jecxz
mov
repnz
nop
mov
sub
repz
push
fdivr
cmp
inc
stos
cli
mov
inc
insl
outsb
xchg
adc
jnp
lods
push
je
dec
in
mov
jbe
pop
into
mov
mov
popa
loopne,pt
shlb
inc
cmp
xchg
fmull
pop
rcr
test
dec
bound
fisubl
fildl
sbbb
xor
sbb
xchg
mov
push
idivl
ja
daa
movb
ficoml
fsubrl
add
jno
ret
mov
jecxz
sbb
xchg
xchg
decb
mov
rcr
repnz
test
cs
mov
push
int3
pop
jmp
push
bound
xchg
push
jle
inc
int
jge
jg
in
sbb
xchg
xor
dec
into
inc
arpl
and
sub
loopne
out
iret
in
outsl
mov
xchg
js
fcmovnu
das
repnz
int
imul
imul
mov
int
sbb
rcl
dec
lods
xlat
repz
mov
pop
out
mov
push
arpl
imul
cmp
xchg
mov
add
sub
xchg
fisubs
xlat
xchg
out
xchg
je
mov
stos
or
shrl
dec
imul
outsl
out
cmpb
ret
mov
dec
adc
int3
rcll
pushf
adc
and
xor
in
mov
sbb
out
push
ss
lret
xchg
or
sub
enter
lods
xchg
pop
push
les
inc
in
sub
out
adc
add
mov
mov
sbb
pop
mov
fwait
pop
sarl
leave
lret
in
adc
push
je
dec
mov
mov
lahf
in
popf
cmp
popf
imul
lret
mov
fsubs
pop
xchg
push
sbb
push
sub
stos
adc
dec
push
dec
or
mov
dec
lret
lods
cmpsb
push
sub
adc
nop
and
sbb
sbb
jmp
fbstp
je
lock
in
shr
inc
push
sbb
icebp
ds
lret
std
add
inc
bound
pop
scas
js
or
pop
cwtl
jnp
mov
stos
aaa
mov
clc
pop
lret
mov
lret
lahf
shlb
add
or
adc
scas
fstl
fdivrp
jno
push
scas
pop
sbb
fwait
jb
cmp
adc
mov
sub
cli
call
mov
fldt
and
subb
rcll
jae
or
rolb
push
hlt
sbb
pushf
lahf
out
cmp
cld
mov
adc
pop
cmp
lret
mov
fmuls
mov
mov
inc
outsl
adc
lret
andl
and
fabs
add
xchg
sbb
lahf
xlat
fldl
mov
mov
mov
add
mov
and
jecxz
and
cmp
jle
and
sbb
inc
rcrl
and
dec
das
leave
push
pop
jmp
add
cwtl
test
jmp
repnz
sub
and
dec
push
xchg
ret
mov
js
xchg
sahf
inc
ss
mov
test
jns,pn
stos
pop
fistpll
mov
je
dec
xor
popa
dec
adc
iret
sub
popa
addr16
test
and
stos
js
sarl
pmuludq
mov
push
shlb
pusha
test
js
iret
adc
dec
rolb
or
inc
push
add
push
aaa
ficoml
adc
fsubrs
and
jns
and
mov
push
mov
sbb
dec
fst
lock
mov
test
pop
bound
or
sbb
push
cmp
xchg
rcrb
jp
adc
pusha
loop
psubb
fisttps
or
out
pop
mov
and
lods
push
jl
adc
mul
insb
mov
sarl
aas
or
aas
cltd
lds
dec
push
and
lret
lods
jl
cmp
je
fcom
cmp
jo
push
xchg
push
sbb
jg
add
mov
dec
xchg
into
das
cltd
inc
das
jno
sarl
stos
or
scas
iret
xchg
cli
fisttpll
clc
rcrb
test
push
xchg
jge
scas
cmp
and
xor
aas
or
sbb
call
cwtl
daa
xchg
rorl
xor
imul
lret
ljmp
call
ds
dec
sbb
dec
jle
insb
adc
xchg
add
les
and
pop
and
mov
mov
adc
stc
mov
cli
rolb
fstl
sbb
sbb
inc
lods
outsl
test
mov
dec
stos
sub
ss
xor
fs
loope
lret
jnp
shl
inc
movsb
mov
les
nop
loop
mov
lret
xor
mov
inc
in
imul
movsb
dec
sbb
jae
push
out
sub
xlat
lcall
mov
sub
inc
fisttpll
fists
fistpll
cwtl
imul
mov
les
push
sub
xor
sub
add
ljmp
sbb
jnp
jl
add
dec
inc
out
repz
dec
movsl
pop
test
andb
popa
stos
dec
lahf
inc
out
sbb
inc
icebp
das
sahf
das
pop
dec
lret
pop
sub
clc
rclb
push
enter
mov
out
testl
mulb
ljmp
faddl
lcall
std
or
push
test
ret
mov
mov
movsb
cwtl
sbb
out
mov
test
cmp
popa
fsubrl
stc
sub
sub
jno
adc
and
rol
stos
jle
pop
sub
lret
adc
push
out
xchg
setbe
mov
sbb
mov
call
aad
bound
adc
pusha
jo
testl
inc
insb
adc
inc
push
push
rorb
test
sub
mov
adc
shrb
mov
and
adc
and
lret
fnstenv
cmp
xchg
mov
push
sbb
jae
test
push
inc
cwtl
loope
push
nop
xor
xor
nop
jle
fdivs
sbb
inc
les
pushf
not
pop
insb
sbb
mov
mov
divb
cmpsl
int
addr16
icebp
cltd
or
pop
mov
push
push
gs
adc
fisttps
mov
add
aaa
aad
sub
jns
mov
dec
mov
cmp
in
inc
push
fsubl
jae
cmpsl
adc
aam
jne
and
push
adc
sbb
imul
cvtps2pi
mov
stc
pop
dec
pop
std
popf
test
in
push
jp
fstl
adc
data16
adc
test
add
lock
sub
inc
test
jle
or
lds
or
dec
aad
jecxz
push
sbb
pop
cmc
lret
fs
push
imulb
jge
push
push
mov
push
sbb
mov
int
pusha
test
push
dec
frstor
dec
gs
or
ljmp
xor
jl
rcrl
je
in
fbstp
fwait
push
dec
scas
inc
xor
ffree
imul
mov
jge
or
mov
sub
jno
ret
icebp
ja
mov
mov
arpl
xor
cmp
adc
cli
jne
inc
ret
add
mov
dec
mov
adc
neg
fcmovnb
add
sahf
xor
mov
push
in
sub
subb
clc
imul
push
xchg
sub
lods
ret
lcall
and
cmp
mov
cld
mov
mov
pusha
jle
ror
xchg
jle
dec
mov
popf
add
push
add
popa
popa
repz
movsb
lcall
popf
add
mov
adc
fstl
fistps
rcll
pop
aam
push
mov
aas
dec
data16
push
test
xor
pop
cli
cmc
push
jl
xchg
mov
lcall
push
xchg
dec
inc
push
pusha
xor
aam
sbbb
jp
out
and
mov
into
lcall
push
adc
in
int3
cmpsl
push
dec
and
mov
jecxz
scas
lret
sub
push
cmp
cmp
push
pop
jmp
ds
das
ret
mov
popf
add
add
xor
iret
xchg
lods
xchg
push
inc
mov
sub
fcomps
jbe
mov
dec
mov
clc
js
mov
pop
mov
sbbb
je
popf
mov
jp
jmp
sub
jl
jb
mov
xlat
lods
fwait
pop
adc
sti
dec
jbe
pushf
sar
add
push
imul
rol
push
shrl
shrb
jns
mov
leave
and
loopne
inc
xor
call
push
bound
push
and
popa
pop
and
mov
mov
push
dec
orl
adc
or
and
je
dec
lcall
jle
adc
jl
icebp
insb
push
adc
dec
fs
pop
mov
mov
fld
dec
loopne
pop
out
pop
shll
add
and
xor
cmp
mov
sbb
js
xchg
sbb
movsb
data16
frstor
xor
sub
mov
push
mov
adc
or
pop
push
rcrb
sbb
jecxz
mov
sub
pop
ja
pop
mov
sub
push
in
mov
xchg
dec
popf
xchg
or
pop
movsb
leave
jle
addr16
jmp
repz
mov
cwtl
andl
inc
push
and
mov
inc
ja
xor
mov
in
push
mov
xchg
test
add
out
adc
nop
mov
dec
cmp
dec
jo
stos
push
and
push
mov
movb
dec
sbb
inc
inc
pop
icebp
sti
push
lea
xchg
ds
sub
xchg
add
scas
push
jno
testl
pop
mov
in
aas
jno
sub
push
fisubrl
sbb
pushf
cmpl
inc
dec
pop
add
xlat
and
inc
ljmp
fcompl
pop
int
aaa
nop
mov
dec
aad
adc
out
xor
shll
je
sub
in
jp
mov
test
jmp
inc
sahf
dec
jmp
jb
aas
or
add
cmp
jns
sbb
adc
in
shrb
call
mul
inc
popa
jecxz
jne
cmp
or
push
int
in
imul
xor
xor
mov
mov
gs
les
scas
xor
jne
js
cmp
mov
mov
ret
in
stc
adc
push
push
sub
mov
arpl
cmpsb
push
into
das
dec
push
es
add
dec
mov
push
dec
ljmp
movsb
pop
xor
das
jmp
lahf
aam
fsubr
mov
push
sub
movsb
imul
mull
ror
lcall
daa
mulb
je
xlat
jecxz
adc
stc
test
lea
test
and
in
pop
push
jl
cs
mov
mov
fcompl
sub
dec
mov
popf
out
and
push
aaa
loopne
enter
add
add
xchg
out
daa
dec
mulb
mov
loop
add
leave
cmp
mov
pop
pop
pop
xchg
cmpb
scas
adc
mov
push
jb
daa
inc
mov
mov
lds
xchg
jmp
js
jnp
xor
ljmp
fldl
and
xchg
mov
fsubrs
mov
xchg
mov
test
push
js
adc
movsl
fs
or
push
push
jp
mov
adc
add
test
dec
sub
jno
scas
add
lods
and
sbbb
sti
jbe
mov
push
ret
outsb
sub
es
mov
push
cmp
mov
or
xor
and
lret
in
cmp
jle
punpckhbw
cmp
adc
fwait
xor
aad
outsb
push
xlat
cs
sbb
je
lcall
fwait
mov
lahf
push
das
adc
into
int
adc
add
les
adc
mov
loope
aam
mov
cmpsb
mov
jmp
dec
icebp
push
xlat
in
or
inc
pop
push
cmp
insl
xchg
lret
outsl
pop
mov
or
in
out
sbb
xor
gs
and
es
cmpb
jge
push
xchg
push
mov
icebp
stos
cmc
in
ljmp
repz
leave
xchg
out
fistpl
or
push
pop
cmc
push
mov
xor
xor
in
inc
insb
lods
cmp
dec
sub
ret
xchg
icebp
idiv
scas
shr
fwait
cmc
je
and
push
gs
mov
jp
add
stc
pop
lods
mov
push
sub
jmp
insb
stc
mov
cmp
push
lret
lcall
jbe
fldt
mov
idivl
mov
sub
dec
repz
push
lea
and
insb
test
mov
inc
scas
sbb
fiadds
iretw
inc
ds
popa
mov
push
pushf
cmp
enter
mov
push
test
rorl
inc
pop
cmpsb
shlb
adc
movb
inc
sahf
mov
cltd
mov
out
cmpb
lods
mov
cmp
outsb
adc
ret
int3
cs
mov
and
or
mov
xchg
clc
incb
cmp
in
xor
xchg
lahf
pop
cmp
mov
sub
es
inc
sbb
and
sbb
sbb
lods
adc
mov
mov
cmp
fs
into
add
outsl
cltd
stos
sbb
call
fistl
in
add
xchg
mov
mov
push
add
adc
jl
jle
inc
testl
lods
nop
mov
roll
out
stos
out
sbb
addr16
add
fdivr
push
mov
push
sbb
xchg
lret
xchg
call
in
imul
push
cmpsb
jno
push
inc
imul
jmp
sbb
xor
mov
insl
or
sub
sbb
xchg
mov
add
sub
xchg
sub
add
mov
push
jnp
std
add
inc
cltd
mov
push
outsl
test
into
fdivrs
pusha
mulb
xchg
in
dec
adc
test
jmp
push
adc
adc
je
mov
scas
jg
push
vmovntps
inc
jo
and
add
cmp
gs
cld
test
pop
push
cmp
in
dec
mov
mov
scas
unpckhps
add
or
and
dec
adc
lock
mov
test
push
fcomps
inc
movsl
dec
arpl
inc
xor
xchg
cmp
aam
pop
mov
cmp
or
inc
xchg
mov
push
push
jle
repz
inc
sub
gs
cmp
xchg
mov
lret
xchg
sub
pop
shr
xchg
sarb
xorl
test
and
shlb
or
int3
jns
dec
jns
adc
stos
mov
dec
out
pop
lret
loop
push
fsts
je
push
xchg
pusha
mov
push
dec
pop
and
bnd
scas
xchg
add
push
dec
mov
flds
in
jne
sub
cwtl
pop
scas
pcmpgtd
inc
xchg
add
mov
xchg
add
mov
dec
mov
push
stc
jae
and
and
movlps
mov
in
jns
mov
in
insb
push
jnp
pushf
popa
lods
test
cmpsb
out
xor
addr16
shrl
mov
cmp
je
sbb
dec
add
ljmp
jno
mov
push
adc
aaa
sub
movsb
movsl
xor
pop
ds
mov
adc
mov
cmp
daa
xor
lock
out
fnsave
call
inc
mov
loope
cwtl
or
scas
movsb
cli
dec
mov
mov
xor
jl
fbstp
cld
in
or
in
xor
std
subb
push
cmp
xor
jno
leave
xlat
jge
rcrb
mov
pusha
cltd
dec
xchg
movsl
fimull
sub
daa
movsl
movsl
movsl
add
xlat
int
nop
fcompl
jno
sbb
inc
out
in
cwtl
movb
xchg
add
in
mov
out
xlat
test
call
fst
sbb
adc
icebp
mov
aaa
neg
test
mov
jp
outsb
xorl
filds
mov
fwait
out
ffree
rcl
mov
pop
cmp
xor
sahf
sahf
mov
pop
mov
mov
pop
push
mov
mov
push
mov
xchg
push
cmc
mov
push
shll
lods
imul
or
dec
mov
adc
stc
das
repz
sbb
ss
cmpsl
push
das
adc
loope
sub
jo
scas
mov
into
dec
mov
sbb
filds
enter
push
aad
and
sub
int
mov
xchg
sub
xor
xchg
add
inc
xchg
xchg
sti
imul
jmp
stc
ja
sub
xchg
add
popa
cs
insb
sbb
dec
xchg
mov
test
test
sti
in
fimuls
pop
je
imul
in
pop
cs
dec
jle
cmp
push
pop
pop
adc
repnz
lds
fwait
ja
sbb
les
pop
dec
mov
mov
xchg
push
push
test
outsl
loope
stos
pop
dec
adc
gs
mov
mov
stos
js
arpl
outsb
mov
std
mov
mov
sub
ljmp
jno
int3
add
fbld
aam
dec
pop
sub
dec
imul
jns
push
test
subl
lods
lret
ljmp
mov
dec
fwait
cmc
inc
ss
pop
mov
loopne
imul
inc
jns
jnp
xchg
sahf
add
or
loopne
cmp
popa
shlb
fsubp
mov
imul
xlat
imul
jecxz
dec
xor
or
in
mov
hlt
jp
inc
pop
cmp
fnstsw
mov
inc
pop
mov
mov
inc
cmp
cwtl
dec
xor
jae
xor
into
out
fsts
lods
movsb
stos
mov
iret
sub
mov
sub
mov
add
sub
inc
or
and
ja
lret
mov
addr16
cltd
and
setge
ss
lcall
mov
ffreep
hlt
jmp
stos
cmpsb
add
daa
xchg
jp
dec
jl
or
jnp
push
pop
leave
pop
out
cmp
lods
aaa
pop
icebp
incl
or
ds
inc
outsl
es
repz
xor
push
mov
and
inc
push
add
add
adc
jmp
mov
ljmp
jnp
movsb
cmpsb
aas
fmul
or
jno
stc
addr16
xor
icebp
addr16
push
fldcw
cmpb
add
mov
adc
divb
adc
xor
pop
cs
nop
mov
imul
aad
cli
inc
scas
mov
xor
lods
filds
pop
arpl
xchg
int
mov
cmp
jbe
jl
jge
and
and
jne
sbb
mov
ret
mov
jno
pop
shll
add
push
dec
inc
jae
mov
adc
xor
cmpsb
add
cli
cmpsb
mov
lock
mov
fsub
fcomi
ror
jmp
mov
pushf
loop
mov
rorl
insb
mov
add
std
add
pusha
dec
add
sbb
mov
dec
xlat
jnp
mov
movb
xchg
loope
int
jne
out
sub
sub
insb
jae
nop
outsl
mov
fildll
rep
xor
lret
out
adcb
outsl
adc
mov
movsl
ljmp
lds
dec
loopne
fldl2t
push
popa
mov
loopne
push
dec
pop
dec
dec
inc
mov
xor
jns
mov
xchg
dec
mov
lock
sbbl
pop
scas
adcb
ds
and
jecxz
xchg
mov
push
fstl
adc
addl
xchg
xchg
jmp
mov
es
das
cmpsb
push
call
test
sbb
cs
clc
or
rorl
xchg
scas
arpl
jp
sub
ja
mov
xor
ds
imul
insl
xchg
lods
push
inc
inc
cmp
mov
outsb
testb
adc
fprem
cmpsl
xor
les
push
add
stos
shlb
pushf
sarb
and
lret
cmc
lods
idiv
sbb
xor
or
push
test
test
add
les
divl
mov
push
xchg
lcall
or
mov
sub
cmp
aas
rorl
jl,pn
clc
mov
je
mov
mov
lcall
push
inc
and
mov
xor
jmp
xor
or
dec
add
mov
call
xor
lahf
in
insb
cli
cli
and
push
ss
mov
js
mov
sbb
ret
mov
iret
jle
out
mov
imul
cmp
pop
aad
push
add
jne
mov
pop
mov
fcoml
popf
stos
inc
subb
pop
std
inc
jecxz
imul
mov
dec
dec
rorb
jp
push
outsl
js
mov
jle
out
jno
dec
mov
outsl
iret
insb
jno
aad
aad
cltd
push
xchg
test
pop
cmp
loop
cmp
xor
arpl
mov
mov
dec
into
or
xor
sbb
push
movsl
or
mov
add
fs
negl
loop
inc
sub
js
dec
dec
mov
es
idivb
jmp
push
lret
and
mov
sbb
std
mov
xor
neg
fstp
push
push
push
sbb
pop
lds
or
pushw
mov
mov
xchg
adc
push
add
rclb
jo
scas
mov
ss
aaa
jb
fsubrl
aam
mov
sahf
stos
aam
xchg
bound
outsl
sub
lods
jo
inc
popa
das
or
mov
inc
fsubr
and
ds
mov
mov
movsb
xchg
in
mov
cmc
xchg
sbb
iret
in
clc
mov
sbb
int
add
or
rol
inc
xchg
repz
test
mov
fisubl
cmc
into
dec
add
imul
test
arpl
cmp
mov
aas
jno
mov
lea
or
jge
xor
idivl
lret
add
mov
shll
xchg
mov
je
add
add
or
cmp
pushf
cmpsb
xchg
test
and
and
inc
notl
mov
ffreep
pop
xor
inc
popa
pop
movsl
aas
xor
dec
ss
aad
popf
jle
fwait
insl
loop
dec
mov
sbb
xadd
xor
xlat
arpl
test
jb
icebp
ret
mov
jno
and
jbe
lret
inc
lea
roll
out
icebp
xor
ret
test
pop
pusha
add
and
xchg
xchg
sbb
pop
insb
or
es
xchg
or
adc
xor
enter
dec
imul
push
pushf
sbb
jp,pt
mov
data16
jmp
sub
test
out
mov
cmp
jbe
sbb
or
push
sub
cmp
push
or
cmpsb
inc
jle
dec
cmp
jae
cmp
mov
addr16
out
js
std
cli
mov
pop
mov
xor
insb
mov
sub
sbb
rcrl
aas
dec
mov
les
cmp
xor
andl
ljmp
stos
hlt
jge
mov
xlat
repnz
xchg
imul
cs
lret
push
int3
scas
sub
mov
mov
fidivs
or
pop
stos
in
jmp
and
pop
leave
sahf
push
add
xor
faddl
scas
divb
iret
inc
ret
lods
inc
cld
out
popa
mov
test
and
movsb
scas
orl
mov
pop
data16
xchg
push
das
jge
ret
sub
push
in
clc
imul
rcl
mov
loop
sub
movsb
lahf
sbb
jp
push
xor
fsubs
dec
cmp
xchg
iret
jb
xor
jno
mov
xor
jp
test
add
mov
mov
scas
jg
sub
jns
or
aaa
idivl
loop
and
jbe
push
jns
jl
les
fwait
jle
pop
int3
repnz
or
or
pop
int3
imul
push
xor
mov
shr
aad
mov
push
pop
mov
xchg
mov
dec
pop
decb
mov
aad
push
test
inc
inc
mov
notb
pop
cmp
js
xor
push
sbb
mov
jno
int3
leave
dec
dec
cmp
rclb
cltd
sub
inc
xorl
cmp
jb
jo
test
in
mov
in
movsl
and
xor
movl
adc
xchg
outsb
cmp
lds
mov
xchg
mov
mov
xchg
and
xchg
dec
jmp
add
sbb
shll
testb
stos
fsub
jl
jg
mov
or
rol
sub
cmp
jecxz
std
mov
lcall
decb
jnp
jns
dec
mov
inc
jmp
fnstsw
add
sbb
cmp
lock
out
pop
sbb
jne
xor
mov
mov
jmp
mov
rorl
jnp
into
lods
adc
jmp
xor
stc
push
cmp
insl
and
xor
loopne
idivb
mov
mov
das
int
scas
inc
jb
adc
cmp
je
or
jecxz
mov
xor
nop
mov
mov
add
and
out
push
inc
pop
mov
lahf
lret
cmp
and
icebp
mov
mov
inc
aas
test
add
xor
pop
dec
cmp
testl
mov
jmp
and
shll
addl
mov
rorl
fbstp
jecxz
add
dec
je
push
cmp
sbb
push
jne
jo
adc
add
xchg
inc
je
pop
xlat
hlt
adc
push
scas
xchg
adc
std
rorl
je
fsubl
imul
mov
push
push
cmpsl
out
cmp
push
push
scas
movhps
sbbl
movsb
mov
jnp
mov
jge
test
push
mov
jbe
push
xchg
int3
repnz
sahf
pop
xor
bound
pop
sub
cltd
shrl
aaa
test
dec
dec
dec
fnstenv
mov
clc
mov
hlt
cmc
stos
mov
and
mov
xchg
pop
sbb
cltd
jg
dec
mov
fildll
loope
xor
xchg
inc
dec
xchg
add
xor
dec
mov
mov
ss
js
adc
les
fsub
insl
ret
dec
add
addl
inc
lock
aas
xchg
fcomps
bound
sbbl
shrl
push
pop
inc
pop
xor
jle
cli
hlt
sub
jecxz
jno
xor
repz
shll
stos
jnp
lret
into
in
das
xchg
xchg
cs
les
xchg
incl
arpl
sti
xor
jo
xchg
and
push
xor
jne
cmc
or
in
fsubrp
imul
leave
and
push
push
jb
roll
cld
leave
mov
cmpsl
inc
dec
cwtl
lcall
xchg
fstpt
push
mov
loop
mov
lcall
lret
fnstcw
das
sub
lcall
int
daa
into
jne
jecxz
nop
dec
int3
pop
add
fwait
sub
popa
out
adc
cmpsl
gs
shr
pop
pop
stos
jbe
cs
xchg
clc
pushf
push
lods
bound
addb
in
and
mov
jbe
stos
addl
push
sbb
mov
push
jno
mov
aad
mov
push
mov
in
fsts
or
sahf
add
add
movsl
je
sub
adc
sbb
xchg
and
lock
pop
dec
fucomi
push
push
mov
dec
pop
fidivl
push
sbb
mov
push
dec
test
in
in
inc
in
inc
andb
dec
xorb
adc
sub
ljmp
outsl
gs
push
push
push
inc
mov
jns
push
rcrb
fsubrl
pop
sahf
std
add
adc
es
ficomps
mov
cmc
cld
in
or
call
jbe
fs
mov
cmpl
sbb
add
in
xchg
xor
daa
jecxz
loopne
dec
jns
in
insl
aad
pop
jge
mov
and
or
lcallw
scas
mov
inc
imul
jns
dec
mov
inc
gs
rcl
sahf
mov
jg
xor
adc
repz
mov
ds
adc
imul
out
sbb
iret
pop
icebp
sub
pop
lret
inc
fadds
lret
dec
jbe
out
rorb
add
and
inc
adc
mov
enter
lea
test
call
adc
dec
mov
lods
xchg
call
and
gs
aas
out
fsubrs
sbb
pop
lods
xorl
test
stos
jp
jb
inc
adc
mov
inc
inc
scas
dec
popa
call
xor
daa
push
loop
lahf
pop
fnsave
out
scas
lock
int3
sbb
mov
or
or
out
push
bt
mov
xchg
outsb
mov
repnz
or
or
jg
subb
int3
mov
insb
push
adc
pop
xchg
daa
jg
or
scas
add
xchg
bound
xchg
cwtl
decb
insb
outsl
push
pop
daa
stos
dec
push
mov
jecxz
xlat
jle
mov
or
pushf
andb
pop
dec
imul
pop
in
fdivrs
lret
inc
pop
pop
daa
shrb
xor
popa
outsb
scas
dec
mov
push
push
into
out
lret
mov
cwtl
ljmp
lea
xchg
xor
fstpt
cmp
jo
fsubrp
cmp
adc
or
mov
adc
popa
push
xor
cltd
ds
inc
inc
mov
lahf
scas
data16
sub
sub
imul
add
and
outsb
mov
mov
rcrb
mov
call
daa
arpl
test
das
push
mov
mov
push
inc
xchg
push
mov
add
xor
repz
jmp
sbb
inc
int3
enter
push
inc
dec
in
cld
sti
xchg
icebp
or
push
repz
xor
jmp
push
mov
add
and
ja
into
push
push
icebp
lock
add
mov
scas
int3
inc
mov
or
push
fisttpll
icebp
mov
cs
cmp
adc
je
addr16
jp
loopne
push
notb
xchg
cmp
xor
fists
mov
popa
jmp
out
dec
loop
push
push
jl
fninit
inc
lods
cmp
add
int
mov
inc
mov
xchg
adc
mov
jb
js
cmp
fwait
xchg
xchg
push
jns
ficoml
push
xor
mov
push
nop
jae
call
or
loope
int
sbb
xchg
iret
ja
or
add
imul
push
pop
cwtl
dec
pop
imul
ja
push
mov
mov
mov
insb
decl
ror
fnsave
shlb
addb
adcl
pop
xchg
and
es
addb
sbb
sub
mov
enter
mov
jne
ljmp
scas
sbb
dec
fcmovbe
std
outsl
fucom
dec
mov
and
into
dec
add
and
jle
inc
notl
xor
fs
or
rol
lret
or
fdivl
xlat
push
xchg
jno
push
repnz
jno
movsb
movsl
inc
adc
std
dec
sbb
hlt
or
lock
xchg
in
and
push
movsl
cmp
insl
push
mov
or
ret
sbb
lret
pop
pop
jmp
ret
mov
mov
jmp
adc
test
icebp
xchg
pop
cld
adc
dec
negb
lahf
jp
dec
mov
push
cmpsl
jne
inc
ds
gs
dec
fdiv
cmpsl
ljmp
lret
stos
orl
ljmp
les
loope
mov
ds
lahf
fwait
xor
into
lret
or
into
loope
add
shlb
jnp
mov
lcall
dec
aaa
ja
scas
lahf
insl
imul
jne
rcl
mov
push
lret
sti
and
ja
jp
xlat
push
fwait
out
push
add
int
and
das
sbb
xchg
jp
bound
cmp
and
insb
out
jge
std
repnz
adc
mov
adc
xor
or
aam
stos
and
ret
out
scas
jmp
les
mov
ss
jo
mov
add
sub
mov
repz
jg
aas
or
shll
inc
test
cmp
cld
sarl
imul
fldenv
add
cmp
nop
sub
adc
push
xor
int
stos
pop
adc
fadd
addl
mov
jns
cld
pop
mov
mov
lea
out
lahf
mov
push
cmpsb
mov
xchg
pop
xchg
sbb
or
sbb
push
xlat
xor
std
xor
jg
addr16
pop
mov
xor
push
adc
xchg
adc
sbb
lods
shll
xorl
push
dec
inc
mov
push
mov
sbb
xchg
xchg
imul
jmp
arpl
or
pop
pop
push
xorl
pop
push
loop
scas
pop
or
jge
add
mov
neg
stos
add
mov
in
sub
sbb
repnz
dec
xchg
push
jmp
imul
sub
shll
jae
jp
cmp
icebp
aad
push
adc
movsl
ljmp
sub
push
lods
bound
xchg
les
push
push
or
dec
and
cld
ror
inc
adc
into
and
ja
dec
aas
jae
inc
fsubr
sbb
mov
aam
mov
mov
mov
mov
xor
sbb
or
stc
xor
pop
lods
cmp
mov
pop
sbb
fwait
ds
shll
adc
sbb
cmp
xor
sarl
add
jbe
aad
stos
or
lret
imulb
sub
in
jl
jb
or
stos
xchg
arpl
sbbl
adc
jns
and
jae
xchg
out
inc
fwait
pushf
out
popf
jns
addb
mov
sub
out
mov
adc
mov
or
push
mov
push
add
fsubrs
jle
test
dec
fstl
add
call
js
aaa
mov
pop
fs
cmp
jge
roll
out
shlb
mov
xor
push
shl
adc
jnp
mov
call
dec
xor
mov
xchg
push
adc
jmp
pop
jmp
mov
addr16
mov
mov
inc
stos
jnp
cmc
mov
cmp
sub
sub
cmp
ret
lods
mov
add
adc
fldcw
sub
mov
leave
mov
add
in
pop
pusha
cmc
jge
cs
outsb
arpl
aam
cmpsb
adc
or
sub
cld
scas
push
pushf
mov
sbb
xor
shr
loope
lods
adcl
fiaddl
add
js
cmp
fnstsw
pop
sbb
mov
ret
inc
or
xchg
adc
cmpb
or
lods
lret
data16
ficompl
cmpl
add
scas
mov
mov
loop
dec
add
aaa
jae
loopne
scas
nop
jb
test
jmp
lcall
adc
ja
adc
add
cwtl
or
ret
cmpsb
push
test
lcall
faddl
sbb
pop
sub
fwait
mov
insb
pop
inc
and
out
or
aad
dec
add
xor
int
push
push
js
fbstp
int3
fs
ret
and
mov
pop
aaa
adc
xor
or
cli
int3
adc
into
sub
xchg
pop
jne
sub
and
jnp
roll
add
sbb
push
cmp
ljmp
mov
adc
jae
xor
aaa
into
push
ds
shr
inc
aaa
rolb
add
subl
pop
mov
call
enterw
adc
mov
inc
adc
sub
negb
xor
mov
in
movsl
in
fldt
jle
in
sti
jge
inc
push
push
andl
cli
sbb
lret
lds
je
fisubs
in
sbb
sbb
xchg
aam
nop
cmp
mov
and
sub
dec
aam
pmulhw
imul
ss
fwait
inc
adc
fistpll
add
popa
mov
add
leave
jbe
hlt
or
xor
aaa
cmp
inc
xchg
mov
inc
push
cs
test
add
sbb
pop
adc
add
imul
and
cltd
pop
sbb
ss
icebp
or
andl
popa
stc
outsb
xchg
push
lret
fcoml
mov
add
mov
mov
push
jnp
mov
sbb
fdivl
mov
jl
iret
fxch
inc
mov
stos
stos
insb
clc
or
lcall
pop
jmp
xor
jmp
xchg
lahf
andb
les
cmp
inc
sbb
mov
scas
mov
popa
jecxz
pop
stc
dec
cwtl
pop
fiadds
cltd
pop
sub
push
rolb
scas
das
pop
inc
lret
pusha
pop
pop
aaa
lea
in
sub
fldt
loope
idivl
frndint
push
jns
jmp
in
dec
mov
mov
fstps
sub
clc
mov
popf
sahf
cmp
ret
fcompl
orl
pop
pop
jo
push
mov
adc
imul
jne
mov
loope
outsb
xor
jg
insl
xor
mov
xor
sub
cld
jne
or
push
ss
movsl
add
mov
jae
out
fistpll
imull
adc
insb
cmp
mov
pop
push
ljmp
ret
adc
push
test
lcall
subb
loope
movsb
lea
cmp
dec
into
inc
and
pop
inc
mov
xchg
dec
mov
mov
fdivrp
xchg
add
and
mov
xor
ret
mov
fnstcw
mov
mov
push
xchg
stos
fwait
jmp
adc
gs
dec
cmp
sub
aas
testb
shll
inc
inc
shll
loop
cmp
sub
sub
outsl
arpl
mov
sti
jp
rorl
sti
cmp
pop
bound
sub
in
dec
lahf
pushw
decl
xor
and
xor
xchg
shrl
mov
inc
jl
out
or
jo
xchg
repz
lret
lcall
and
add
inc
shrl
jbe
in
mov
fcoms
test
xor
outsl
stos
fwait
sarb
xlat
test
dec
fisubl
outsl
adc
leave
cmp
mov
incl
mov
ds
rcll
sbb
mov
mov
rcl
mov
cmpsb
sbb
ret
test
inc
loope
mov
incl
or
dec
xchg
rcll
adc
inc
out
cltd
mov
test
cmp
aaa
das
push
and
mov
lods
mov
mov
push
xor
sub
xlat
xchg
sub
hlt
ret
dec
jb
add
xchg
xor
cwtl
xor
roll
inc
aam
mov
shll
xor
cmp
fcompp
test
lods
rcr
and
jecxz
shlb
inc
outsb
adc
test
jecxz
adcl
lret
movsb
mov
stos
adc
mov
or
in
les
daa
cmp
sub
pushf
and
xchg
mov
cmp
mov
out
cmp
sbbl
push
sahf
ja
lret
sbb
push
cmp
ret
rol
out
cwtl
outsw
jns
inc
cmp
aad
sbb
mov
push
fbstp
sti
push
fwait
iret
outsb
scas
mov
push
dec
loope
xor
loope,pt
jnp
repnz
jecxz
add
in
pop
adc
dec
mov
js
pop
push
cmp
pop
mov
pusha
aas
in
adc
stc
mulb
xor
arpl
push
lcall
mov
ljmp
mov
retw
nop
scas
lds
xor
push
and
xchg
pop
addr16
fistps
mov
mov
push
pop
pop
jae
xchg
insl
andps
rcrb
loope
pop
mov
pop
cmp
pop
int3
push
in
jp
push
popf
fstl
or
jbe
inc
xor
push
dec
jno
push
lea
xchg
call
sbb
lret
dec
inc
and
adc
add
cmpl
pop
jp
lret
lods
pushf
adc
ljmp
repnz
stos
sbb
dec
sub
sub
dec
xlat
mov
mov
and
xor
repz
mov
js
cmp
ffreep
stos
in
test
jp
mov
sub
jbe
int
inc
testl
int3
data16
mov
scas
ret
dec
push
mov
xchg
stc
inc
mov
sti
ficomps
dec
int
call
mov
sub
pop
jle
xchg
mov
pop
lods
mov
daa
mov
movsl
icebp
and
xchg
inc
cmp
inc
lahf
mov
enter
adc
push
inc
mov
xor
decl
jl
or
cs
add
scas
imul
mov
rcrb
push
push
fidivrs
mov
out
cmpl
dec
mov
jno
ret
mov
adc
orb
movsb
imul
xchg
xchg
sbb
aad
stos
insl
dec
shl
or
icebp
je
xchg
divl
icebp
xor
hlt
jno
pop
punpckhwd
arpl
xor
jmp
rclb
xchg
cmp
adc
movsb
fadd
rolb
hlt
jl
or
pop
lret
xor
mull
outsb
dec
subb
add
jp
lcall
test
mov
dec
jl
adc
ljmp
jns
cmp
dec
subb
pop
ret
ja
or
push
fdivp
xchg
jo
sub
mov
lea
lcall
inc
in
cli
push
leave
jp
les
in
pop
call
mov
stc
rcll
push
std
sbb
aas
pushl
cltd
sbb
aas
out
sbb
js
lods
sti
lahf
inc
cmpb
sub
cwtl
inc
cs
sub
add
gs
add
mov
stos
add
mov
das
mov
imul
mov
mov
mov
fnstenv
sbbl
ret
adc
dec
adc
dec
push
subb
push
out
mov
loope
mov
inc
scas
loopne
push
stos
mov
cmpsb
pop
sbb
cmp
sbb
shll
iret
and
mov
push
dec
out
sub
movsl
inc
or
lods
arpl
cmp
add
mov
push
xchg
sbb
mov
mov
push
clc
inc
cmp
xchg
fisubrs
or
lahf
or
pop
inc
sub
lret
std
ds
aaa
out
mov
or
mov
shl
negb
shlb
mov
jns
pop
pushl
jge
iret
pop
inc
or
dec
sbb
lock
icebp
mov
lret
test
mov
inc
fnstenv
fcomip
idivl
and
mov
push
mov
mov
jmp
mov
pop
rcll
ror
mov
pop
rclb
xchg
adc
lahf
and
aam
pop
cmp
aam
rclb
faddl
das
jne
and
cmp
cmpsl
mov
pop
xchg
mov
cmove
push
mov
dec
cltd
jbe
inc
mov
inc
cmp
jge
ljmp
push
sub
aas
pop
lock
into
inc
xchg
mov
dec
xchg
cmpsl
cmp
or
lock
or
clc
dec
fwait
cmp
fisttpl
xchg
add
les
push
loop
cmp
mov
insb
test
cmovp
aam
imul
mov
pop
xlat
mov
popa
test
xchg
xchg
sahf
adc
lcall
xor
aas
testb
mov
xor
shrl
dec
in
daa
inc
sub
in
rorb
xor
imul
aad
inc
fistps
inc
lea
xchg
out
cs
push
or
mov
fcmovb
mov
and
xchg
fisttpl
cmp
gs
dec
lock
pop
jp
jle
leave
in
scas
cld
xchg
mov
mov
and
loop
push
loope
xchg
call
sbb
push
cmp
lcall
sub
push
mov
pop
pop
aad
test
xchg
dec
cmpsb
movb
call
push
cmp
repnz
insl
pop
ret
shr
pop
mov
mov
jmp
mov
jns
mov
sbb
sbb
adc
mov
pop
sub
sub
mov
lahf
sahf
xor
loopne
jg
lahf
xchg
pop
mov
xchg
stc
xchg
scas
jbe
lcall
in
mov
xchg
sub
hlt
hlt
jp
lods
leave
pop
cli
cwtl
mov
mov
pop
lahf
inc
lods
loopne
mov
subb
ret
xor
loope
adc
les
divl
lds
jae
xor
cs
inc
loopne
push
push
add
xor
in
or
mov
or
insl
lret
mov
divb
repz
scas
mov
or
cmp
push
mov
xchg
fcoml
daa
arpl
sbb
imul
xor
pop
mov
xlat
push
insl
fisttpll
mov
mov
jae
cld
test
fistps
out
or
orl
cmp
stos
divb
movsb
mov
push
aam
or
jl
sbb
push
and
pop
insb
lcall
fs
int
daa
pop
mov
out
xchg
aas
das
stos
mov
daa
xchg
leave
test
addr16
pop
movsb
mov
and
pop
iret
jge
inc
sarl
sub
in
cmp
mov
xlat
fcmovnu
add
les
fcomi
sub
ss
sbb
sysexit
fldt
out
sbb
idivb
jnp
loopne
jbe
fbstp
dec
sub
sbbl
sub
cs
call
xchg
fnstcw
push
lcall
push
push
pop
shl
rcrb
push
sbbb
addr16
fwait
dec
push
mov
outsl
mov
pop
mov
pop
mov
mov
pusha
adc
sbb
push
ficomps
shrb
jmp
push
aas
xor
mov
jmp
insl
in
inc
ds
sbb
push
lret
adc
lcall
pushf
mov
xlat
jno
jb
out
int3
jle
test
and
push
mov
int
dec
mov
pop
cmp
mov
mov
inc
mov
sub
pop
cmpsb
jno
pop
add
std
imul
ficoms
cmpsb
jae
and
add
aaa
cwtl
xorb
mov
and
mov
lock
stos
lea
decl
out
cli
pop
repnz
inc
adc
in
out
mov
mov
pop
inc
add
jmp
js
xchg
sub
mov
aam
inc
in
and
and
mov
test
jns
xor
int3
aad
or
jle
mov
mov
or
cmp
or
fcomps
cmp
add
mov
es
add
sti
test
es
in
jg
in
bound
mov
inc
es
psllw
insb
mov
divl
xor
js
lret
shlb
das
cmp
int3
cmc
lahf
cmp
adc
imul
adc
and
and
clc
xchg
lret
rcr
fidivl
outsb
ret
sub
sbb
xlat
nop
sub
mov
lods
and
mov
sub
jp
icebp
rcll
and
popa
inc
sub
adc
ret
hlt
xorb
adc
push
clc
sbb
or
adc
mov
sub
xor
idivl
push
push
xchg
jmp
xchg
pop
dec
and
aaa
ja
scas
sub
aaa
dec
fiaddl
cwtl
scas
not
pop
and
stos
inc
test
int3
roll
or
push
xchg
jns
pop
lea
mov
fbld
js
scas
rcrb
fnstenv
fxam
pusha
repnz
jecxz
arpl
into
lods
add
les
fsubs
dec
and
pusha
jecxz
aad
adc
mov
shlb
std
dec
sbb
or
cmpsb
sub
jne
stos
repz
fnstenv
xchg
and
call
push
ret
xchg
and
rcl
lock
lds
lahf
or
cltd
or
nop
adc
xchg
mov
cwtl
pop
sub
movb
pop
xchg
fldl2e
pop
add
mov
dec
int3
mov
cld
rcll
or
leave
negl
out
sbb
jp
data16
jecxz
insl
scas
sub
lahf
add
sbb
jns
mov
daa
loop
jb
add
lds
cmp
lods
add
xchg
fiadds
hlt
jecxz
int3
xchg
pusha
adc
add
jo
cmpsl
xchg
std
sahf
pop
jp
cld
sbb
jae
adc
int
push
in
loope
cmc
push
sub
or
dec
dec
xor
js
and
sub
and
in
push
lea
push
jge
lret
inc
xchg
addr16
add
test
inc
aas
jo
push
dec
movntq
sbb
stos
sub
sub
jb
insl
add
es
xchg
dec
nop
std
or
cmc
cmpl
addr16
je
hlt
mov
negl
loope
jg
push
andb
pop
ljmp
and
mov
jg
inc
dec
push
push
scas
or
push
dec
mov
mov
scas
mov
rcrb
push
leave
out
mov
stc
bound
xchg
aad
mov
icebp
stos
xchg
movsb
xchg
imul
pop
outsb
scas
inc
scas
lcall
or
dec
lods
add
add
cmpl
xor
dec
and
inc
cmp
rcrl
ret
fs
movsl
mov
ret
mov
mov
push
and
xchg
out
rcrb
mov
inc
xchg
inc
xor
jno
jle
and
mov
sti
dec
cmp
push
stos
jno
xchg
fnclex
jo
loope
add
xchg
or
lock
fnstcw
sbbl
cmp
xchg
ljmp
int
repz
jnp
pop
je
inc
aas
adc
or
sar
popf
out
mov
in
sub
push
sbb
jno
xor
sbb
or
jne
in
ja
push
inc
adc
mov
outsw
and
inc
mov
sub
sbb
adc
xchg
jns
adc
ret
add
aam
aam
cs
xlat
sbb
mov
and
ja
fidivrs
pop
out
ds
lahf
js
sarl
xor
xchg
scas
adc
ss
pushf
call
push
stc
dec
sbb
out
pushf
adc
ret
aaa
sub
or
mov
pop
test
jo
imul
imul
mov
jg
leave
push
cltd
loopne
xchg
int3
jno
push
xlat
aad
push
adc
ret
arpl
std
std
adc
fstl
dec
test
ds
imul
push
adc
push
shrl
pop
fcomps
ja
pop
fisttps
dec
sub
mov
push
cld
add
out
lcall
jecxz
sahf
lret
push
leave
in
cmc
clc
sti
dec
outsl
mov
mov
adc
cld
lea
or
inc
pop
jl
jbe
int
mov
shll
sbb
dec
hlt
pop
repnz
psllq
jbe
sub
jae
cltd
cmc
add
mov
sub
inc
jmp
cmc
repnz
pusha
mov
ret
push
in
jae
sti
jno
mov
pushf
xchg
jle
mov
xor
cmpl
mov
inc
push
xor
pop
fdivrl
push
mov
mov
pop
lahf
loop
cwtl
test
mov
mov
imul
js
mov
push
dec
into
dec
idivl
dec
mov
add
sub
sub
and
movsb
loope
je
sbb
cmp
and
sbb
cmpsl
ss
lret
mov
mov
clc
lcall
pop
sbb
negb
pop
lcall
imul
ja
push
movsl
mov
jp
push
mov
sahf
and
sub
inc
push
ss
incb
andl
mov
pop
and
insl
mov
inc
jbe
icebp
int
sbb
sub
and
test
out
fldl
mov
xor
mov
ss
outsb
call
movsb
fisttps
hlt
hlt
mov
out
setl
pusha
sbb
pop
ss
sbb
push
xchg
pop
arpl
jle
es
cmp
dec
cmc
ja
mov
shrb
push
loopne
lea
imul
xchg
push
jecxz
mov
ficompl
flds
push
xor
or
mov
int
or
std
and
pop
jl
rorl
jb
mov
cmc
mov
aas
ss
mov
je
xchg
add
test
mov
inc
aam
dec
bound
nop
mov
adc
adc
mov
mov
mov
or
dec
faddl
sub
pop
ds
scas
int
cmp
cmp
cmp
xchg
fadd
mov
scas
test
xchg
scas
xor
popa
popf
aam
loope
ds
cmpsl
cmpsb
or
mov
clc
inc
sbb
stos
sbb
ds
mov
insl
shrl
ljmp
inc
outsl
insb
jae
rcll
loopne
xor
out
js
ja
les
popf
push
bound
push
repnz
cmp
hlt
insl
xchg
xchg
mov
js
outsb
pop
mov
lods
mov
mov
in
xchg
add
in
test
adc
inc
lds
pusha
in
mov
push
or
daa
cmp
ret
jmp
push
cltd
mov
repz
mov
mov
pushf
inc
sbb
add
outsl
sbb
and
cmp
arpl
cwtl
stos
fidivl
leave
test
pop
stos
jb
out
loopne
call
fcomip
fcoml
mov
jge
mov
push
inc
cmp
dec
dec
push
add
fcoml
mov
pop
mov
mov
push
inc
mov
inc
aaa
jg
les
cmp
andl
pop
sub
mov
and
test
int
jge
mov
inc
mov
test
ret
aad
insl
mov
sahf
jecxz
scas
incl
push
sub
cmp
out
or
stos
std
fwait
mov
push
movsb
pop
mov
xchg
sub
sub
sub
inc
cli
push
lcall
add
dec
imul
scas
jle
repz
ficompl
ss
daa
jle,pt
ljmp
mov
push
inc
mov
pop
inc
sub
scas
adcl
in
cmc
jmp
adc
inc
push
push
lahf
je
xlat
leave
mov
jno
faddp
imul
xchg
neg
cmp
xchg
sub
jbe
add
pop
outsb
and
nop
les
out
rcrl
ret
mov
test
in
cmp
cltd
and
and
xchg
hlt
mov
pop
mov
push
lcall
fistps
pop
fistps
push
stc
inc
dec
push
mov
in
fwait
push
sbb
adc
data16
push
inc
dec
mov
ss
dec
cmp
popa
ds
aam
push
jecxz
inc
push
push
jns
push
add
push
sbb
jge
xor
test
mov
hlt
or
ret
pop
mov
cli
mov
mov
dec
lds
mov
lods
scas
dec
repnz
inc
loop
pop
mov
sub
mov
pusha
cmp
rolb
ret
add
xchg
jne
adc
sbb
cli
nop
add
repnz
jbe
jb
dec
repnz
dec
fistps
pop
jae
sahf
cmpl
inc
js
inc
pop
iret
add
pop
xchg
add
leave
shl
mov
loope
int
push
cmpsl
add
xchg
push
xchg
jbe
xor
jo
or
adc
int3
fcmovnbe
cmp
cmp
out
gs
fidivrl
push
inc
mov
in
scas
sub
xchg
push
cmpsb
dec
cli
mov
pop
outsb
sarb
ret
cs
adc
and
in
addr16
orb
xchg
stos
cmc
and
lock
test
pushf
test
fwait
std
je
jne
add
push
push
rcr
add
cmpsb
pop
imul
ret
and
and
scas
sbb
scas
jno
aas
das
in
jne
sub
cltd
push
jge
scas
shll
fdivr
mov
cmpsb
leave
pop
dec
xchg
jge
lods
or
xchg
xchg
outsb
pop
mov
jns
lods
pmuludq
mov
mov
jno
lret
test
pop
lea
rcrb
sub
pop
dec
cmpsl
andl
in
cmp
mov
and
add
negb
mov
dec
enter
xlat
xor
in
mov
inc
push
mov
outsl
pop
pusha
int3
mov
out
pop
inc
stos
lods
das
push
loope
xor
das
clc
lcall
pop
mov
cmpsb
or
pop
sti
out
pop
frstor
pushf
xchg
pop
mov
les
xchg
jnp
mov
sub
je
adc
jne
mov
and
xchg
push
scas
mov
incb
xchg
or
push
hlt
and
jg
inc
pop
out
mov
pop
add
stos
test
in
int
in
push
rolb
aaa
inc
repnz
dec
dec
fwait
pushf
sbb
or
fistpl
inc
lods
xor
jge
jle
pop
or
xor
out
movsl
sar
sarb
pop
sti
stos
andb
pusha
insb
push
scas
sbb
cmpsl
and
dec
jl
fwait
cmpsl
xlat
and
in
jbe
xchg
dec
jge
int
loop
inc
jecxz
add
mov
jl
mov
aaa
sub
adc
int3
xor
pushf
adc
cmpsb
and
inc
mov
xchg
cmpsl
mov
mov
icebp
popf
or
adc
jno
loope
sub
inc
mov
inc
subl
add
scas
scas
dec
sbb
mov
xor
lea
pop
sbb
push
insb
loop
test
aas
jle
mov
or
sarb
cmp
sub
aas
add
xchg
pop
lock
xchg
sbb
cmp
dec
jp
xchg
sub
iret
jbe
mov
sarl
mov
inc
mov
movl
sahf
xor
daa
mov
test
xchg
fwait
mov
jmp
mov
incl
pop
test
push
xlat
lret
enter
mov
jnp
enter
aaa
clc
and
mov
sarb
cli
out
mov
adc
imul
adc
jns
shll
je
lods
xchg
jecxz
dec
shrb
push
cmpsb
xlat
cmp
daa
add
cli
call
dec
int
enter
fsts
shlb
cmp
cmp
ja
mov
int3
push
sub
xchg
hlt
aad
daa
mov
push
fdivs
test
mov
aam
sbb
xchg
sub
mov
fists
lcall
lret
rclb
add
cmp
inc
adc
jmp
dec
popf
es
or
sbb
fs
stc
sbbb
lcall
jno
shll
push
or
inc
enter
adc
loope
testl
icebp
xchg
jo
scas
xchg
call
sbb
fadds
mov
lods
jb
jo
xlat
fsubp
repz
dec
insb
sub
jmp
lahf
mov
sbb
insb
push
sub
leave
inc
push
data16
movsb
push
enter
lods
xchg
pop
add
sbb
xor
gs
xchg
xlat
jg
cmpsb
dec
push
or
push
addb
jbe
ljmp
rcl
rolb
insb
jnp
mov
int3
dec
xchg
xchg
mov
movl
jbe
ds
testb
test
lret
sahf
and
jne
cmpsb
aad
stos
pop
test
or
lret
sub
or
inc
adcl
xor
xchg
cmp
pop
ror
imul
fisubs
sub
add
cwtl
pop
pusha
add
es
sbb
or
fsubr
jle
decl
adc
cmp
jl
ds
jmp
add
nop
pop
mov
popf
pop
jg
add
aad
dec
outsl
lret
test
hlt
mov
cmc
data16
mov
shll
fdivs
fs
pop
mov
mov
adc
mov
pop
test
pop
xchg
adc
test
dec
jns
lds
out
or
xor
lret
loope
push
loope
adc
lds
jo
in
js
add
cwtl
movsb
in
loop
add
mov
mov
mov
insb
stos
mov
jle
roll
std
sbb
les
and
pop
xor
add
xor
xchg
jne
lds
mov
mov
inc
pop
mov
dec
pop
daa
idivb
fs
push
cmpsb
mov
inc
pop
adc
xor
pop
inc
sbb
dec
outsl
jmp
adc
aad
je
jmp
pop
push
test
shl
xor
mov
sbb
aad
das
jnp
jnp
xorl
js
and
jns
daa
push
mov
inc
sub
test
fadd
es
cmp
adc
hlt
inc
mov
repnz
pop
mov
lods
cs
loope
aad
jno
mov
or
lods
jg
xchg
sub
loopne
call
push
shrl
loop
mov
call
jnp
push
ja
popf
out
icebp
mov
sub
ficoms
loope
mov
xchg
push
jge
and
mov
into
ror
iret
push
sub
mov
mov
ret
push
mov
ss
int3
xchg
and
outsb
nop
gs
mov
sub
xor
add
push
filds
push
out
mov
xor
mov
mov
popf
mov
sub
pop
sarb
adcl
jnp
das
add
incl
cs
stos
data16
scas
lret
aaa
mulb
and
clc
cmp
inc
aaa
pop
pop
loopne
loop
jae
xchg
je
cmp
iret
jmp
cwtl
in
lods
push
sarb
sbb
scas
lret
repnz
inc
into
jno
test
jmp
mov
cmp
pop
mov
dec
nop
or
pop
sbb
push
xchg
jg
adc
loopne
push
and
jl
mov
jle
or
pop
jmp
sub
pusha
cmpsb
aas
mov
out
out
push
es
mov
cmpsl
and
mov
aas
cmp
mov
cmc
pop
fistpl
out
sbb
sub
dec
push
xchg
sbb
loop
mov
jle
nop
pop
scas
mov
inc
mov
cld
or
stc
mov
pushf
bound
fisubrl
aad
shl
push
cmp
lahf
sbb
xchg
subl
mov
insb
dec
and
sbb
sbbb
pushf
lret
inc
sti
ret
shlb
fistpl
and
cmpb
xchg
aam
outsl
or
adc
xor
sub
push
lahf
fidivrs
pop
sbb
popa
jp
jae
in
dec
scas
dec
int
dec
mov
daa
add
mov
xchg
sahf
mov
out
cmp
sbb
cld
cmp
xor
add
dec
iret
popf
push
in
movsb
add
or
xor
mov
mov
mov
test
or
cmovg
scas
movsl
cwtl
out
clc
dec
sub
imul
popf
sub
insb
add
ds
add
dec
in
popf
fists
in
push
sub
xchg
std
pop
dec
into
repnz
xchg
gs
pop
lods
add
push
jns
mov
mov
arpl
mov
outsl
mov
nop
movsb
cld
lret
repnz
adc
in
fldenv
pop
lds
cmpsb
mov
pop
cmp
cmp
push
add
fnstcw
insl
sbb
dec
cmp
add
ds
lds
test
aaa
ja
mov
or
jecxz
aad
lds
pop
cli
xlat
subb
adc
mov
jae
mov
adc
push
pop
jp
cmp
adc
push
rorb
test
jmp
mov
sub
pop
xchg
jmp
dec
cmp
mov
fmul
push
subb
pop
js
cld
lcall
jmp
icebp
cmp
mov
test
std
push
pop
sbb
dec
es
imull
test
and
movsb
imul
aas
lods
jns
jae
sub
pop
out
and
loope
push
in
dec
ss
adc
and
lods
aad
fadds
aad
into
iret
jne
sbb
aas
sahf
inc
jb
lock
mov
inc
add
ds
dec
xor
sub
nop
outsl
shll
mov
rorl
jbe
data16
lds
lcall
mov
scas
sbb
js
jbe
jae
inc
adc
cmp
sub
in
loop
mov
mov
nop
mov
mov
je
int3
test
fdivr
adc
pop
xchg
clc
int3
pop
loopne
sarl
jle
mov
xchg
mov
mov
fldenv
js
lret
int
pop
lods
loopne
loop
shlb
jnp
push
scas
adc
ret
adc
sbb
gs
in
es
push
pop
lods
mov
and
mov
cmpsl
scas
add
sub
mov
sarb
xchg
mov
push
mov
loopne
lret
adc
movsb
jb
lcall
mov
mov
jecxz
push
iret
xchg
movsl
rclb
and
sub
and
cltd
adc
ss
or
inc
insb
push
or
xchg
ret
cld
sub
lods
mov
stc
push
pop
cmc
repnz
cmp
cmp
outsl
insb
fildl
rorl
insb
xor
pop
arpl
out
leave
das
in
mov
xor
call
movsb
push
stc
inc
mov
mov
imul
lret
int
arpl
or
dec
push
adc
fiadds
push
add
data16
in
lock
lret
add
test
xor
adc
sub
jbe
insl
mov
inc
mov
push
sub
mov
push
clc
popl
shll
fldenv
mov
mov
sbb
xor
fwait
jbe
inc
rolb
sub
rclb
aad
es
pop
dec
inc
mov
jl
daa
ljmp
dec
cmc
sub
icebp
and
xchg
cmpb
faddl
movl
imul
aas
push
mov
mov
ljmp
and
push
mov
sub
lds
fistl
dec
movsb
movsl
cmc
in
and
mov
xchg
aaa
inc
adc
repnz
mov
push
xchg
jmp
rcr
enter
dec
pop
into
inc
push
mov
aam
fdivrl
test
dec
cmp
shll
scas
mov
out
in
jge
ss
pushf
cmp
ljmp
in
addps
dec
fwait
loopne
out
inc
sbb
inc
cmovge
ljmp
dec
mov
xchg
outsb
mov
movsl
in
jbe
fs
ja
das
mov
jbe
dec
shlb
fidivrs
mov
pop
inc
inc
mov
jmp
pop
es
xchg
pop
adc
add
mov
lods
in
popa
push
jb
jae
ficoms
aam
mov
out
sti
movsl
add
cmp
fmuls
sarl
cmp
lods
pop
sahf
adc
xorl
jecxz
pop
xor
jb
lods
movsl
and
sub
push
xchg
cmp
cld
fwait
icebp
test
push
outsb
mov
and
in
divl
push
push
cmp
enter
sbb
sbb
cmp
mov
pop
jl
sbb
movsl
mov
ds
xchg
push
aam
and
xchg
or
popa
iret
outsb
dec
imul
push
dec
leave
test
pop
mov
sub
inc
mov
scas
cs
sbb
jo
pusha
in
sbb
cmp
rorb
in
cli
int
rolb
stos
jmp
adc
pop
lock
push
int3
jns
cs
mov
enter
out
jbe
or
cmp
ffree
popf
mov
inc
sub
shlb
xchg
adc
and
test
popa
int
andl
lahf
fists
jb
enter
lcall
push
xchg
in
int3
push
or
imul
dec
cld
outsb
sbb
mov
mov
popf
lods
lret
inc
push
lahf
mov
jecxz
popa
inc
push
add
hlt
loopne
and
orl
fstpt
push
movsb
xor
stos
mov
jle
xlat
xor
mov
dec
out
sarl
cmp
mov
pop
or
mov
loope
daa
subb
loope
jo
inc
idivb
xchg
or
and
fldenv
test
lret
insl
roll
shlb
movsb
aaa
dec
pop
push
roll
push
or
lea
in
pop
popa
ds
leave
or
push
fsubrp
xchg
aaa
xor
repnz
in
add
push
test
cmp
lds
mov
pushf
mov
add
xchg
loop
in
stos
dec
data16
aas
mov
inc
int
mov
shrl
jae
jb
add
sub
int
jnp
scas
pop
jecxz
xchg
scas
pop
inc
inc
push
inc
mov
mov
pusha
repz
and
insl
inc
add
gs
xchg
leave
ret
repz
cmpl
and
jno
fmuls
mov
dec
pop
dec
ljmp
sbb
fwait
out
ja
mov
insl
or
xchg
into
cmp
push
es
cli
jnp
stos
mov
mov
lret
dec
push
mov
lds
ret
pop
jmp
adc
mov
call
mov
testb
jae
je
mov
sahf
mov
pop
pushf
sub
ljmp
mov
lds
inc
cs
lods
out
loope
push
pop
inc
and
cld
iret
inc
push
push
sub
jmp
or
mov
aad
loopne
pop
xor
mov
jecxz
push
jge
jge
xor
lock
int
mov
pop
xor
repz
lret
rorb
pop
sbb
imul
mov
mov
jl
xchg
loop
mov
cwtl
mov
inc
or
sahf
lcall
les
sub
jg
pop
aam
adc
jbe
sbb
push
push
aaa
negl
jmp
daa
repz
fidivl
lea
pop
movsb
adc
mov
add
xchg
out
gs
pusha
mov
xor
jecxz
or
mov
cwtl
daa
mov
mov
adc
xchg
sbb
test
jecxz
and
fwait
inc
mov
mov
xchg
call
in
inc
pop
mov
popa
fisubrs
sub
push
ret
dec
push
fdivs
inc
ss
adc
pop
jle
lahf
movsl
pop
ljmp
into
mov
dec
jne
and
jnp
and
and
pop
sbb
sub
pop
fisubrl
sub
xor
outsb
pop
loop
sub
clc
in
xor
scas
push
cs
and
mov
pop
fcoml
mov
test
pop
or
cld
stc
dec
add
into
scas
adcl
sub
xchg
pop
sahf
sub
sub
iret
push
call
sbb
fst
inc
jl
repz
mov
pop
lea
out
aad
cwtl
jb
sub
stc
mov
addr16
aaa
jb
xchg
xor
cld
arpl
cmp
jno
cmpsl
outsl
movl
mov
mov
shrb
jns
jbe
data16
in
xchg
popa
pop
dec
jmp
sub
mov
aad
daa
push
outsb
mull
jle
enter
jnp
loopne
adc
xor
push
rcll
mov
push
stos
je
mov
push
sbb
movl
ret
sbb
push
mov
lret
lock
std
dec
cmpsl
adc
out
outsb
mov
pop
push
imul
stos
xor
mov
imul
pop
js
fwait
js
loopne
das
mov
les
cmp
mov
gs
cltd
cmp
inc
insl
dec
cmp
add
xchg
rep
cmp
inc
fimuls
push
xchg
push
fsubl
xchg
push
jo
ds
stos
repz
pop
dec
inc
int
cmpsb
lret
cmp
hlt
push
pop
arpl
js
insb
sti
xor
mov
fnstsw
cmp
adc
inc
lds
sahf
xchg
popa
js
cltd
push
push
sti
psubq
sub
mov
stc
jb
stos
push
xchg
mov
je
xchg
lcall
or
xor
std
das
loope
jae
pusha
pop
add
xchg
into
xor
rcrl
xlat
loopne
aad
in
mov
scas
sbb
sarb
repz
imul
cmp
fsubrl
inc
gs
xchg
into
and
rcrl
dec
adc
sbb
and
xor
hlt
push
loopne
lods
lods
jns
insl
test
sbb
push
insb
test
mov
xor
dec
stos
jge
imulb
js
mov
cmc
popa
in
inc
pusha
push
repnz
push
xchg
daa
lar
call
es
mov
push
outsl
jl
sbb
mov
pop
mov
imul
inc
or
and
gs
rorl
insb
int3
mov
jns
outsl
pop
pop
inc
adc
les
and
jg
out
push
adc
loopne
push
mov
shlb
cwtl
and
jns
cmpb
add
in
dec
pushf
dec
out
sarb
cwtl
addr16
pop
xor
bswap
mov
cmp
and
mov
mov
add
mov
lahf
cmp
pop
jge
sti
adc
adc
movsb
lods
sub
pop
repnz
add
cmc
movsb
mov
out
std
pop
mov
mov
dec
and
jecxz
jno
and
outsl
inc
xchg
shld
stos
cmp
gs
pop
arpl
adc
aam
ret
or
shlb
mov
fdivr
adcl
xor
fstpl
cmpxchg
xor
pop
mov
sub
imul
into
jne
mov
aaa
xor
call
and
pop
push
mov
fcmovne
push
pop
push
scas
aam
pop
push
jecxz
imul
cmpsb
mov
add
out
ret
or
iret
js
adc
fdivrl
mov
inc
in
lret
xor
out
adc
dec
mov
cmpsl
jo
jecxz
jle
cmc
lods
jl
or
fsts
fiadds
sub
dec
aaa
pop
and
test
icebp
xchg
mov
je
aas
inc
sbb
es
mov
das
xlat
clc
xchg
loop
xchg
dec
movsb
fnstsw
or
mov
aad
js
mov
adc
movsb
int
imul
inc
sarb
adc
and
not
cwtl
add
or
xchg
icebp
pop
scas
xor
jb
inc
xchg
jnp
xchg
adc
add
dec
cmp
or
insb
jge
je
mov
loope
or
cwtl
hlt
pop
jbe
ss
sarl
shll
jo
call
nop
cli
and
jb
dec
fdivr
pushf
cmp
mov
push
rorb
ljmp
push
out
lds
inc
fimuls
icebp
scas
sub
lahf
leave
pop
fdivrl
sbb
sub
push
adc
idivb
iret
jno
sub
outsl
sub
inc
jp
std
add
xor
pop
test
nop
ficoms
imul
xor
test
cwtl
push
inc
dec
xchg
mov
sti
fs
rcrl
lods
push
or
cwtl
and
inc
int
shld
out
push
repz
shll
repz
outsl
or
push
inc
push
mov
les
mov
mov
movsl
addr16
dec
cmc
sbb
scas
xor
je
scas
pop
inc
test
imul
and
push
mov
inc
scas
lock
fistpl
mov
sub
pop
mov
into
xchg
dec
popa
add
pop
outsl
ss
sbb
xchg
mov
add
jo
xor
jb
jo
xchg
push
or
lahf
daa
scas
aas
cmp
pop
dec
aam
sbbb
into
pop
roll
mov
add
push
les
sub
ds
push
mov
popa
adc
into
inc
and
lret
adcb
mov
push
test
sbb
cmp
pop
pop
aas
and
jnp
mov
jno
outsb
aas
or
mov
xchg
mov
xor
ja
add
aas
inc
jno
outsl
cs
xchg
ja
lret
call
inc
pop
push
mov
xchg
roll
push
dec
lahf
mov
xchg
movsb
lock
enter
mov
and
xchg
shll
outsl
stos
mov
or
add
inc
andb
test
movsl
xor
decl
pop
pop
jp
loope
or
and
insl
mov
add
dec
inc
sub
xor
add
dec
xchg
jp
sti
sar
in
pop
sub
fistpll
push
out
push
adc
je
lock
jne
rclb
mov
out
ds
rcl
xchg
fs
sub
sbbl
push
das
jle
movsb
bound
or
mov
jle
sub
cmpsb
lods
in
inc
push
aam
add
into
push
mov
jle
mov
packsswb
adc
mov
lds
jnp
test
repz
add
fistpll
and
cltd
loope
jae
gs
pop
imull
ror
add
call
stos
cmc
mov
mov
or
jne
ja
lcall
test
adc
cmpsb
mov
repz
enter
add
sub
cmpl
push
sar
jmp
push
enter
leave
and
lock
loop
iret
lds
add
test
and
pop
cmp
mov
add
mov
jmp
int
daa
pop
stos
adc
addr16
push
stc
push
jmp
adc
sahf
inc
shrb
loope
and
dec
sbb
pop
mov
jnp
mov
mov
js
jmp
mov
stos
idivl
movsl
add
push
mov
in
in
push
xlat
or
sub
add
js
into
mov
and
or
pop
aam
xor
cmp
mov
dec
cmp
outsl
fldl
sub
jmp
mov
subl
gs
loope
popf
sbb
cmpsb
xlat
pop
out
mov
mov
mov
out
sbb
fildll
cmp
ficoms
adc
add
lods
add
add
mov
enter
pop
jle
repz
jne
push
fs
add
mov
out
out
mov
into
xchg
jp
pushf
int
popa
call
cmp
mov
inc
cmp
in
mov
rorb
pop
adc
push
cmp
inc
mov
mov
pushf
in
add
daa
test
mov
imul
in
jp
xor
dec
push
mov
dec
inc
add
dec
mov
lea
loop
hlt
mov
bound
jmp
ret
add
push
add
icebp
fadd
and
fisubl
jo
xchg
cmp
bound
icebp
cmp
in
sub
mov
jge
push
das
out
sarl
and
or
push
insl
aaa
dec
inc
dec
jg
out
in
sub
fmulp
lret
iret
jle
mov
out
mov
ds
or
fldl
cmp
mov
pop
mov
shlb
je
xor
lods
leave
fimuls
fwait
adc
inc
jns
test
pop
lar
mov
pop
xor
cmp
std
xlat
push
stos
or
outsb
sub
cld
addr16
mov
test
addl
adc
roll
mov
into
out
or
hlt
icebp
ds
insb
pop
dec
ret
sti
mov
xor
cmp
pop
mov
lock
leave
adc
sub
push
pop
jno
in
add
ja
decb
fisubrs
jae
and
loopne
popa
lahf
int
nop
in
aaa
into
subb
leave
xchg
mov
jmp
mov
jmp
cli
cmc
xchg
lret
fcoms
loop
int
popf
aad
testl
lock
dec
scas
arpl
lahf
push
ljmp
push
out
fs
cmpsl
jne
daa
jo,pn
test
lds
sbb
pop
imul
inc
aas
pushf
gs
lods
es
aam
add
or
inc
stc
ds
stos
pushf
pop
fildll
dec
dec
and
cmpsb
test
mov
adc
repz
mov
xor
in
loopne
adcl
xchg
in
mov
clc
dec
pusha
inc
pop
dec
jg
fsts
in
adc
mov
sub
aam
adc
insl
dec
push
sub
daa
jno
cmp
adc
push
lods
xor
pushw
mov
push
and
push
or
cltd
mov
add
outsl
jmp
or
push
xchg
test
test
mov
jae
push
adc
jb
stos
jp
hlt
inc
out
insl
dec
sbb
testl
sbb
loop
arpl
cmpsb
push
pop
mov
dec
in
xchg
sahf
jno
fstps
iret
cs
das
pop
int3
jge
out
xchg
and
repz
lret
shr
jp
scas
mov
aaa
aaa
xor
mov
addr16
mov
mov
scas
sti
add
mull
xchg
pop
scas
xor
test
xor
das
adc
lds
scas
xchg
jmp
xor
cmp
lods
add
cmp
adcl
cmp
ret
pop
shll
add
idivb
xchg
push
mov
or
jg
aas
jno
sbb
cmp
jmp
add
loopne
int
dec
fmul
pushf
aad
inc
das
jle,pn
dec
pop
stos
leave
add
fistpl
mov
data16
jg
in
mov
stc
ja
jecxz
sbb
dec
das
inc
fistpl
insl
adc
lahf
int3
jmp
cs
push
aaa
mov
or
adc
inc
sub
popf
jne
inc
lret
sti
loopne
lret
sub
pop
adc
jo
lahf
daa
or
stos
in
push
stc
pop
cmp
jno
stos
pop
fisubs
or
dec
sbb
mov
scas
pusha
loopne
idiv
enter
sbb
lcall
leave
cmc
insb
xchg
pop
mov
aam
call
imul
ret
sbb
cwtl
fisttpll
xor
xor
ja
xchg
mov
sahf
mov
leave
js,pn
stc
divl
fmuls
ret
mov
mov
ret
leave
out
inc
mov
test
xchg
fdivrl
ret
sub
movsb
addr16
pop
stos
ljmp
xchg
jne
add
std
repz
dec
mov
jmp
outsb
or
adc
mov
cmpsb
mov
insb
pop
push
stc
mov
adc
xchg
enter
sti
sub
iret
cmp
aaa
in
out
out
repz
aaa
inc
mov
or
push
adc
xor
mov
daa
inc
int
mov
cmp
sti
xchg
and
and
pop
leave
ret
fisttpll
jmp
inc
push
dec
xchg
and
push
fwait
iret
sbb
jp
jg
repnz
stos
push
inc
adc
ljmp
and
jle
int
pop
jecxz
test
xor
push
and
pushf
xor
adc
je
mov
ljmp
inc
out
xchg
aam
shlb
into
andl
xchg
mov
jl
push
mov
imull
cmp
fiadds
fwait
xchg
xchg
mov
rorb
jbe
lret
repnz
and
sub
push
push
pop
pop
push
xchg
sub
js
jae
out
fwait
mov
jmp
vsqrtss
sbb
ret
imul
push
adc
lock
psllq
ret
lea
sub
cmpsb
daa
call
or
xchg
jecxz
sbb
xor
mov
push
jo
mov
dec
add
mov
lock
or
inc
jne
mov
jg
push
cwtl
xchg
movsb
push
out
ja
rcrl
cmp
daa
cwtl
push
jge
test
js
adc
and
lcall
or
sub
dec
xor
clc
inc
lods
lea
das
inc
cmp
addb
pop
fstl
lcall
roll
xchg
add
cmp
into
in
imull
push
aas
add
scas
loop
or
xlat
fists
inc
test
pushf
adc
xlat
jo
sub
xchg
xchg
movsb
xor
out
shll
dec
sbb
into
mov
jno
ljmp
sbb
inc
cmp
fwait
out
jmp
test
jmp
and
aam
in
cmp
pop
xchg
dec
mov
insl
iret
dec
xor
in
mov
pop
cmp
dec
xor
mov
xchg
inc
mov
sub
pusha
shr
movsb
hlt
adc
pop
xor
adc
jle
roll
int
mov
xchg
cmp
mov
shll
dec
and
fs
stos
sbb
cmpsl
mov
xor
das
push
push
jo
nop
jp
inc
or
leave
mov
inc
movsl
mov
out
rorl
mov
inc
ret
mov
add
sahf
lret
ja
arpl
out
lods
pop
jno
adc
scas
mov
dec
jnp
adc
cmp
cmp
cmp
xrelease
aas
jno
int
add
rorb
ljmp
jmp
dec
mov
and
into
fsub
stos
jno
xchg
addb
or
nop
lret
mov
sbb
mov
test
jae
mov
xchg
shll
adc
rorl
neg
adc
cmp
fcoml
sub
sbb
cmp
in
pop
sti
std
lds
xchg
lret
les
mov
xchg
test
inc
mov
das
xchg
jno
jo
int
xchg
mov
mov
dec
out
cs
lret
test
mov
mov
ret
jmp
and
lcall
mov
daa
movsb
sbb
push
out
in
inc
mov
imul
shl
inc
shr
mov
pop
push
mov
cmc
aad
fsin
cmp
fisubrs
test
add
inc
test
mov
mov
daa
leave
xor
test
fsubs
inc
pop
push
pop
movsl
pop
lret
fmul
fwait
or
lods
or
addl
push
and
stos
sbb
sti
jbe
aaa
rcrb
xor
fnstsw
fisubs
jnp
adc
lahf
lods
shrl
pusha
and
test
sub
jg
xchg
push
add
add
xor
sti
sarl
push
inc
xchg
push
xchg
mov
aas
mov
repz
push
outsb
or
stos
dec
scas
jno
shlb
mov
adc
icebp
dec
in
adc
insl
mov
ja
bound
ret
popf
sbb
or
aaa
pop
or
and
rcrl
push
dec
adc
cli
in
adc
push
std
xchg
pop
mov
pop
push
adc
fdivl
and
pop
in
loop
mov
adc
pop
xor
add
test
stos
jnp
jp
ret
mov
inc
addr16
inc
or
cltd
ret
push
push
cmpsl
inc
outsb
dec
sbb
sbb
mov
lock
sbb
cwtl
push
mov
jg
insl
in
pop
imul
mov
adc
fisubrl
fcoms
pop
or
out
icebp
cmp
into
sbb
mov
subl
mov
and
mov
xor
popf
dec
inc
loopne
scas
out
dec
loopne
dec
sbb
adc
daa
insb
inc
out
add
mov
lret
and
jnp
push
xor
mov
hlt
cwtl
mov
push
cmc
xchg
xor
ret
cmovbe
inc
ss
dec
pop
pop
adc
andb
lea
sahf
adc
pop
cmp
shl
icebp
xor
jb
outsb
out
pop
repnz
test
ljmp
cmpsb
xchg
mov
mov
sar
sbb
xor
sub
xchg
jns
pop
repnz
mov
roll
jo
jge
mov
xchg
pop
jmp
les
inc
sub
xor
pop
aas
jmp
pop
dec
or
xor
fwait
mov
fxam
jmp
push
fisttpl
shl
jnp
mov
lea
pop
add
jg
xor
xor
push
fists
mov
xor
and
pop
iret
lcall
fdivr
fadds
pop
loop
sub
sbb
jmp
dec
xchg
out
xchg
cmp
es
pop
cs
ficomps
and
movsl
add
lcall
cli
pop
adc
xor
inc
packssdw
js
ljmp
or
pop
inc
leave
in
je
sub
int3
psubw
ja
aam
in
testb
ljmp
insb
rorl
icebp
das
cmc
sub
xchg
negb
xor
stc
jno
xchg
sbb
sbb
mov
sub
cli
lds
or
mov
ret
leave
and
mov
and
sarl
and
mov
repz
mov
ja
inc
jg
push
jb
sbb
jle
mov
shll
shlb
cmp
fistps
jmp
sbb
fwait
push
enter
push
lret
xchg
jecxz
fwait
adc
jno
pushl
std
divb
inc
scas
test
jle
leavew
out
inc
push
xor
adc
pop
and
movsl
sbb
pushf
pop
shll
ljmp
int
shll
mov
outsl
pop
test
and
popa
pop
jge
shlb
sub
subb
cmp
gs
sub
lods
and
push
in
push
es
rcl
pop
incl
fcomip
iret
push
jle
lods
in
inc
or
xchg
or
sub
jb
mov
pop
xchg
cmpsl
jmp
pop
lds
mov
imul
mov
addb
ds
jmp
lock
pop
pop
data16
call
out
or
mov
xor
and
lahf
and
into
pop
sbb
out
mov
test
mov
pop
and
fadd
movsl
cmc
cli
jnp
or
outsl
sbb
dec
iret
pusha
adc
mov
push
push
and
fnsave
popa
fs
pop
ret
jbe
mov
mov
dec
pop
adc
addl
mov
mov
in
sub
pushl
xor
push
inc
sbb
imull
addl
push
and
xchg
jo
xchg
adc
push
adc
out
jecxz
aaa
pop
xor
jns
aaa
inc
xor
insl
ljmp
xchg
and
xchg
sbb
mov
xchg
idivl
call
movsl
loope
call
lods
xchg
and
mov
iret
sti
sub
dec
mov
inc
mov
and
adc
lods
mov
gs
push
pusha
clc
popf
xchg
mov
lods
bound
mov
popf
push
push
mov
adc
sbb
or
cmp
test
hlt
jnp
les
dec
inc
adc
and
add
cli
inc
aas
cmc
cmp
and
mov
xchg
mov
jge
ds
into
jge
dec
mov
enter
arpl
andb
or
lock
xor
movsb
stos
jge
jge
sub
inc
gs
mov
inc
mov
or
out
jecxz
jae
mov
insb
jmp
push
jp
mov
jmp
sbb
test
mov
xor
int
mov
clc
mov
scas
cli
and
rcll
add
jge
je
ljmp
jns
clc
cmc
adc
ss
hlt
xor
rcl
outsb
data16
inc
ret
addb
mov
jnp
mov
testb
adcb
or
mov
mov
pop
add
push
pushf
in
jns
loopne
cmpsl
push
mov
call
or
clc
cmpl
aad
int3
xchg
inc
cmp
pop
fwait
pop
mov
addr16
push
or
lcall
xchg
xchg
mov
or
cmp
push
jbe
jg
scas
aas
adc
inc
jmp
jb
dec
dec
sbb
inc
repz
xor
xor
mov
loope
xchg
hlt
and
adc
adc
and
sub
add
cli
pushf
or
add
pop
and
xchg
dec
test
mov
stc
xchg
mov
in
sbb
or
sbb
sahf
or
out
mov
addr16
mov
lods
std
stc
cmp
enter
lcall
jmp
ret
jns
cmp
inc
pop
rolb
and
js
sub
cmp
xor
ficoml
and
add
jns
scas
movsl
repnz
mov
fisttpll
lock
cmp
or
cmp
and
cs
nop
dec
lcall
les
stos
jl
xchg
mov
mov
lret
test
push
mov
pop
xor
xchg
add
bound
push
loopne
bound
stos
rcrl
out
cmp
shll
aas
cmpb
jl
mov
sbb
push
inc
adc
push
sahf
pushf
cwtl
xor
pop
out
push
and
or
pop
repz
pop
mov
jno
mov
incl
mov
cli
inc
inc
cwtl
mov
jno
loope
lock
jo
cwtl
popa
jecxz
pop
mov
mov
or
lret
sub
test
mov
addb
fsts
pop
rep
adc
jle
mov
and
adc
mov
aaa
adc
mov
je
out
mov
lcall
mov
ja
dec
sarl
shlb
dec
mov
gs
movb
dec
push
and
xchg
add
xchg
ficoml
adc
dec
int3
addr16
push
sub
add
daa
xchg
xor
int3
bound
outsb
mov
mov
shll
in
addr16
cwtl
mov
sub
stos
test
and
mov
sub
pushf
les
mov
adc
mov
jns
xor
ljmp
push
sub
dec
pushf
out
add
lret
jl
movsl
call
pop
addb
jb
xor
and
shrb
mov
clc
fdivp
fsubrs
sbb
xchg
and
pop
push
stc
cmc
cmpsl
in
rcl
ja
or
js
insb
pop
sub
dec
xor
adc
ret
hlt
out
xor
loop
jp
nop
or
sbb
lods
xorl
out
mov
cmp
add
mov
rcll
out
mov
inc
push
pop
mov
movsl
xor
fistl
mov
sahf
mov
add
lahf
push
pusha
cmpsb
or
das
out
das
jp
push
push
loopne
sub
dec
mov
imul
add
ja
loop
pop
xor
cmp
fadds
or
jge
das
mov
out
add
rol
int
repz
mov
dec
into
or
cmpsl
scas
dec
cmpb
xchg
inc
mov
cld
xchg
and
pop
ret
mov
mov
addr16
cld
das
jb
sbb
sub
xor
call
mov
mov
les
ret
test
negl
test
int3
mov
add
mov
fsincos
jns
cmp
sbb
ja
and
fwait
and
in
in
dec
add
cwtl
xchg
mov
jecxz
or
inc
daa
push
sub
leave
add
xlat
adc
adc
in
mov
fcomip
xchg
decb
jnp
dec
pushf
mov
and
pop
and
sti
cwtl
cmp
sahf
sbb
adc
cmp
jl
aad
fnsave
fcmovnu
mov
fwait
insl
adc
push
adc
push
dec
xchg
adc
shrl
jl
paddusw
inc
mov
shrb
nop
mov
push
inc
sbb
mov
xchg
scas
mov
pop
or
sti
cwtl
or
dec
lods
inc
jmp
jae
push
cmp
nop
dec
fldl
repz
xchg
lahf
add
xlat
fwait
inc
outsl
ret
dec
cmp
inc
ret
mov
scas
or
pop
xor
xor
and
fs
push
lock
inc
movsb
sbb
sbb
cmp
fs
lahf
into
jmp
int
and
or
fdivrs
xor
sbb
dec
add
mov
test
mov
jo
lcall
std
lds
add
and
xchg
pop
ret
scas
mov
imul
enter
ds
and
aaa
sub
das
xor
ss
and
pop
mov
jmp
cmpsb
xor
js
movsb
iret
leave
andb
ss
cli
in
loop
subb
xchg
decb
push
mov
sbb
lret
outsb
sahf
mov
popw
aas
ja
cmp
xchg
and
inc
in
mov
mov
pop
leave
aaa
mov
cmc
out
jg
and
sub
popf
popa
add
xchg
imul
jecxz
imulb
dec
dec
ja
jnp
and
das
and
xlat
pop
jle
push
loopne
movb
inc
mov
sub
sbb
test
jmp
les
pusha
movsb
jns
pop
push
pop
rcl
push
push
add
jno
cmc
mov
mov
les
sub
mov
jp
cmp
pop
lock
jle
into
int3
mov
add
adcb
cmp
or
int3
fidivl
fnsave
or
jg
xchg
inc
or
and
cmp
mov
mov
gs
mov
add
cmp
arpl
fwait
add
jns
sbb
lea
stc
stos
dec
arpl
mov
nop
mov
decb
push
cmc
fucomp
adc
dec
dec
nop
pop
ljmp
shrb
xchg
cmovnp
cmp
fbstp
roll
dec
dec
pop
push
jp
fcom
scas
arpl
lods
pop
pop
and
lret
sub
jecxz
rcr
enter
icebp
or
inc
pop
cs
sbb
cmp
outsl
cmp
cwtl
jo
into
pop
mov
jae
and
adc
xchg
int
mov
sub
xor
add
imul
repnz
in
add
adc
mov
dec
xor
inc
or
les
lods
sub
cmp
jne
pop
clc
jbe
imul
sbb
cmc
mov
mov
sbb
shlb
pusha
xchg
mov
push
push
adc
push
mov
mov
cmp
fisubl
jecxz
xor
and
repnz
push
xchg
pushf
rorb
xor
jle
xchg
push
ja
hlt
pop
xchg
inc
mov
rolb
mov
in
enter
jno
sbb
inc
sbb
iret
push
dec
into
ficoms
hlt
ds
and
lods
or
outsb
test
push
in
inc
shr
testl
add
ds
inc
insl
movsb
mov
mov
pop
sub
fists
lret
and
jnp
fildl
mov
in
movsl
out
pop
xor
add
int
inc
adc
aam
xor
clc
cwtl
push
and
insl
aas
icebp
cld
das
and
mov
insb
xor
mov
jnp
mov
insb
inc
out
cld
or
xor
inc
negb
popl
scas
in
in
fcmovu
xor
imul
push
xchg
rcr
fnstenv
mov
pushf
pop
dec
jno
scas
cmc
pop
mov
dec
push
int3
xor
aam
xor
push
dec
inc
test
loop
scas
insl
imul
jns
inc
call
xor
out
pop
je
mov
cmpsb
ret
mov
dec
cmp
pop
xchg
add
pop
outsb
push
mov
rcrb
jmp
shrl
aam
fsubp
dec
and
test
dec
out
xlat
xor
pop
cmpl
or
sbb
roll
mulb
xor
jmp
repnz
mov
aas
add
aam
movsl
add
dec
lcall
cmp
inc
adc
inc
sbb
daa
aam
xchg
sbb
fwait
mov
movsl
popl
insb
daa
in
sub
out
movsb
fucomip
mov
pop
mov
stos
rcll
dec
jmp
repz
xor
pop
mov
or
popa
fisttps
mov
hlt
or
pop
fisubrs
sub
and
add
fwait
cwtl
mov
lahf
pop
add
mov
pop
adc
mov
add
mov
add
pop
out
aam
mov
xchg
jno
dec
inc
jno
pusha
sarl
adc
xchg
pop
js
and
fs
inc
adcl
jl,pn
jmp
mov
xchg
nop
fcomps
and
fdivrs
or
lods
and
mov
sbb
inc
dec
pushf
mov
in
jo
jg
ret
cmc
push
mov
xchg
pop
ja
push
repnz
adc
jecxz
mov
imul
pusha
xchg
jns
lret
mov
jns
inc
imul
rclb
lcall
scas
and
in
cwtl
or
inc
cld
add
jl
aaa
ret
jae
mov
mov
add
clc
mov
jl
sbb
lcall
mov
shll
out
adc
mov
jnp
adcl
mov
mov
pop
sub
rorb
and
or
pusha
sub
mul
push
and
es
bound
xchg
xor
jno
dec
mov
outsl
jno
cld
pushf
shlb
inc
mov
sbb
sbb
mov
push
out
push
cmp
cmpsb
sub
out
ret
pushf
test
enter
loopne
push
cwtl
pop
fisubrs
push
xchg
test
mov
test
mov
es
inc
xchg
xor
inc
cltd
push
fs
jno
call
cmpsl
sahf
out
ljmp
dec
sti
xbegin
popa
push
mov
pop
mov
scas
mov
rol
adc
frstor
lods
pop
pop
dec
push
adc
subl
sub
jge
shlb
jae
aad
jno
xor
js
inc
xchg
stc
inc
mov
or
leave
arpl
mov
movsl
popf
jno
fadds
adc
les
and
mov
cmp
inc
inc
dec
insb
aam
xor
cmp
pop
adc
repz
es
outsl
hlt
adc
sub
push
xchg
dec
scas
fwait
add
mov
repz
and
cmpsb
push
notb
insb
fs
enter
ljmp
ljmp
mov
push
jle
mov
enter
sbb
xorl
es
push
push
jns
enter
cmp
fbstp
inc
or
sar
mov
dec
cmc
and
js
inc
push
jle
mov
ja
sbb
jne
je
inc
and
int3
xchg
rcll
mov
jl
into
pop
pop
bound
insb
cmp
ror
notb
lret
fimull
lret
adc
nop
rclb
popf
fldt
pop
test
add
not
aas
adc
xchg
pop
push
lock
jmp
movsl
loop
dec
xchg
scas
stc
int3
or
lea
out
jmp
dec
jl
mov
in
cmpl
inc
aad
ja
mov
jns
fisubrs
in
inc
cmp
daa
mov
sti
fcomps
or
ret
insl
sbb
int3
xlat
nop
inc
pmuludq
fidivrl
sbb
cmc
lock
or
mov
ss
and
mov
mov
push
daa
call
test
push
aaa
movsl
imulb
push
sbb
subb
fs
mov
pop
pop
ja
rclb
xchg
loopne
lret
cltd
lcall
jnp
jle
inc
xor
movsl
lcall
fwait
dec
cmp
sub
mov
adc
test
lret
xlat
and
mov
shl
xchg
add
in
mov
fisubs
outsb
xchg
ror
and
in
not
fimull
jecxz
and
xchg
cmpsl
mov
lods
push
rcrb
hlt
xchg
and
gs
xor
jmp
pop
sub
lock
xchg
mov
dec
out
cmp
lahf
repz
sbb
xchg
jp
mov
lahf
ljmp
sbb
cmp
insl
lea
test
jne
les
jp
mov
pop
pop
ja
xchg
xchg
push
filds
pusha
or
in
or
pop
popa
ret
mov
mov
and
test
mov
adc
loope
jb
jmp
xor
lcall
dec
js
or
aaa
mov
testb
inc
xor
out
in
mov
xor
in
and
mov
mov
inc
mov
or
sete
dec
das
mov
mov
push
lcall
pop
mov
mov
jp
mov
and
mov
sbb
or
jle
sub
push
xchg
sbb
sub
mov
out
mov
jmp
mov
rcrb
xlat
xchg
test
jae
or
add
xchg
sti
sub
gs
repz
loop
ds
add
xor
mov
call
xor
fmull
push
mov
hlt
sbb
shr
ret
test
cmp
bound
mov
push
jb
and
out
cmp
andb
and
jmp
or
loopne
jp
out
scas
xor
push
push
ljmp
outsl
xchg
repnz
inc
or
mov
imul
mov
cli
out
enter
mov
leave
and
push
aaa
jmp
inc
addr16
aad
and
xchg
inc
jne
xor
xchg
jb
xor
fcomps
sahf
sbb
mov
dec
sub
jle
mov
insb
sub
push
push
sahf
fidivrs
fcoml
push
imul
xchg
mov
rol
push
je
mov
pop
aam
imul
lret
jp
push
or
inc
mov
push
and
sbb
or
leave
cmp
xchg
sub
mov
pop
inc
jb
push
dec
pop
mov
mov
jge
jmp
sub
sub
ds
lret
sbb
jne
bound
lcall
das
xchg
mov
jg
mov
add
sbb
xor
push
leave
js
mov
dec
adc
mov
fwait
sub
jne
insb
repz
into
out
sbb
je
push
int
in
lahf
sti
ljmp
pop
adc
lahf
data16
push
push
shlb
inc
mov
movl
inc
addr16
mov
pop
aas
lcall
std
out
call
xor
cld
outsl
mov
sbb
lea
and
fisubrl
xchg
movsl
inc
and
pop
push
insb
pop
ret
mov
cmp
inc
mov
fadds
in
mov
cwtl
popa
xor
push
jecxz
icebp
sub
push
sub
mov
bound
jns
pop
push
cmp
and
push
lods
add
push
loope
jp
cwtl
pop
enter
mov
sub
jbe
mov
sub
mov
add
pop
adcb
cltd
mov
jge
mov
push
das
pusha
loopne
aam
push
mov
std
push
xlat
jne
mov
mov
rcrl
xchg
mov
lret
imul
sahf
cmc
test
gs
sbb
xorb
inc
jb
cltd
out
dec
pop
cmc
fidivl
mov
add
cltd
pusha
cmpsb
ret
sti
pop
movlps
scas
mov
add
adc
mov
out
sub
sbb
lods
sti
in
pop
push
xor
xor
sbb
and
jge
loope
mov
mov
test
and
xchg
mov
enter
cli
and
sbb
in
pop
jo
sbb
sbb
adc
inc
psraw
aas
or
ficompl
clc
sbb
dec
in
xchg
cmp
es
adc
jae
adc
mov
mov
push
std
sub
jne
mov
sarl
dec
inc
leave
xchg
mov
jne
mov
fisubrl
popf
inc
fwait
enter
test
dec
fs
jae
popa
add
out
sbb
add
mov
outsl
arpl
push
xor
mov
cmp
lds
outsl
and
test
pop
xchg
jle
push
movsb
clc
pushl
pop
addr16
lcall
or
jle
out
call
inc
in
fstl
rclb
or
aaa
and
and
xor
stc
pop
cmp
pop
mov
ret
jg
mov
dec
popf
daa
mov
gs
daa
or
mov
lds
mov
jp
push
mov
icebp
aam
fdivl
sbb
adcl
add
inc
mov
andb
fnsave
sub
dec
sbb
stc
inc
inc
out
repnz
inc
or
lods
fldcw
dec
ret
mov
push
into
imul
dec
inc
jmp
adc
xor
lcall
lahf
loopne
inc
add
jo
out
push
mov
pop
pop
fistl
lahf
pop
adc
test
call
xor
scas
jae
test
ficomps
add
fnstcw
shrb
out
sbb
enter
push
shrl
pusha
cmp
dec
ret
lahf
arpl
mov
arpl
hlt
lds
adc
push
jg
sbb
rcr
mov
mov
add
loopne
xchg
push
fildll
imull
icebp
fisttpl
fbld
orl
add
sahf
lcall
push
ret
hlt
and
repz
adc
mov
aam
or
hlt
fwait
cmp
hlt
or
xchg
lock
in
imul
xor
xchg
outsl
mov
popa
jle
into
hlt
inc
movb
cmp
jp
test
std
jg
mov
ds
ds
pop
lds
ret
fwait
push
or
loopne
mov
repnz
push
call
js
inc
aaa
and
pop
push
adc
fstp
mov
outsl
fisttpl
mov
jns
stos
dec
aas
mov
popf
mov
mov
pusha
cmp
jne
decb
fdivs
insb
sbb
out
incl
jnp
adc
sbb
jl
lds
mov
cmp
daa
mov
sbb
cli
insb
fs
push
clc
aas
push
into
dec
push
push
cli
inc
dec
lahf
xchg
and
add
jl
movsl
mov
xchg
adc
lds
call
sub
testb
repnz
loopne
test
mov
adc
inc
inc
sub
jl
sbb
mov
sahf
push
movb
pop
or
inc
mov
roll
mov
fildll
dec
cltd
or
movsb
add
jno
movsb
rcrb
or
inc
mov
in
lea
xchg
mov
push
add
jbe
int
pop
inc
orl
or
scas
and
aad
mov
mov
out
and
into
sub
jns
jg
inc
lret
pop
and
push
fistpl
sub
scas
test
cmpsl
mov
sbb
sbb
lods
xchg
out
xor
push
daa
dec
lods
sbb
das
leave
lock
std
xor
dec
insl
mov
sub
js
std
sbb
push
fdivl
pushl
das
cmc
test
scas
daa
jecxz
sub
hlt
xor
into
sbb
aaa
test
mov
outsl
jne
mov
fsubrl
inc
push
mov
in
lret
add
out
xor
jp
adc
cmp
fstpl
stc
mov
jbe
insb
push
mov
mov
lods
dec
cld
xorl
mov
lods
and
sbb
jne
mov
cmpsl
enter
jle
scas
pop
cmp
lcall
aam
pop
mov
decl
jg
xor
push
sarl
mov
js
push
adc
inc
movsl
dec
fnsave
aas
mov
pushf
stos
cmp
mov
sub
jge
mov
das
sbb
test
xor
mov
adc
lea
pop
rorb
dec
xor
jne
and
adc
jns
notl
push
jmp
cld
mov
adc
inc
dec
enter
and
das
mov
jmp
test
mov
int3
cmp
xchg
ror
xor
imul
sub
popa
adc
mov
cmpsb
adc
arpl
pop
and
nop
dec
cld
in
nop
sarl
mov
pop
lds
sub
daa
in
ret
cmp
outsl
fisubrs
jl
mov
adc
sbb
sub
cmp
scas
sbb
test
dec
mov
xchg
jg
decl
jle
ret
or
mov
and
adc
ss
push
cld
push
dec
test
add
jne
inc
fdiv
js
jne
sbb
inc
jo
pop
out
hlt
xchg
lret
jne
cli
xlat
push
scas
ljmp
cltd
outsb
or
pushf
pushf
loop
stc
dec
lea
xchg
dec
das
jns
test
ficoml
ret
popa
out
divb
flds
pusha
xor
mov
sub
les
add
lcall
sbb
mov
push
and
jecxz
sub
xchg
xchg
jae
inc
push
js
mov
mov
dec
hlt
mov
push
pushf
mov
fildl
push
mov
test
mov
dec
cmp
iret
or
xchg
xlat
pop
ret
or
push
jecxz
mov
mov
and
jl
mov
or
add
hlt
lret
and
xchg
dec
cltd
xor
cmc
les
and
and
arpl
daa
and
mov
popf
repz
sbb
cmp
mov
inc
in
stc
mov
subb
cmp
scas
and
shl
push
xorl
sbbb
out
aam
lret
xor
mov
pop
push
cltd
ljmp
sub
cli
push
mov
es
ss
mov
aad
cmpb
leave
fiadds
cmpsb
jnp
lret
sbbb
jmp
sub
dec
sub
mov
aas
or
jle
or
jle
adc
sbb
xor
loop
mov
fistps
push
mov
daa
aas
push
clc
rolb
push
test
imul
loopne
out
add
sub
repz
lods
pop
xor
xor
dec
or
mov
stos
push
cmpsl
jnp
pop
add
repz
test
push
fsubrl
jns
into
push
inc
mov
es
sbb
jg
mov
cmp
and
push
pop
call
fsubl
cmp
sbb
out
cld
pop
insb
in
daa
loope
jbe
cld
lret
sub
mov
push
test
push
adc
cld
aad
imull
xchg
sbb
jns
jl
pop
lods
cmp
subl
scas
data16
daa
inc
subl
repz
lret
daa
insb
dec
xor
inc
inc
test
cmp
nop
pop
dec
sbb
in
jg
movsl
pop
jl
add
imul
sub
or
mov
clc
push
aaa
xchg
int3
data16
jge
rcrl
add
fcomip
fisubs
aam
dec
add
cli
scas
sti
mov
je
sbb
ret
cmp
sub
scas
cmp
stc
mov
call
sub
repz
sbb
jne
push
cmpsl
mov
jp
mov
lret
mov
or
arpl
sbb
loopne
cmpsb
or
jle
stc
push
cmpsl
les
sbb
xchg
jle
mov
inc
out
jo
int3
aas
cmp
popf
lcall
int3
popf
ljmp
in
xchg
inc
xchg
jne
jno
jmp
add
cmp
sub
jns
js
jecxz
mov
stos
hlt
adc
clc
outsb
jmp
pop
and
test
inc
cmp
shrl
shlb
sub
mov
xchg
pusha
es
or
out
mov
fdivs
adc
cmc
mov
les
sbb
xchg
add
dec
outsb
pop
pop
rolb
xor
out
push
rcr
push
stc
sbb
add
mov
roll
xor
jo
outsb
xchg
jnp
roll
sbb
add
repnz
pop
loopne
adc
cmpsb
xchg
into
leave
fmuls
adc
jl
add
add
and
loopne
popf
hlt
repz
insl
xor
xchg
iret
pop
mov
mov
pushf
jmp
insl
fwait
rcll
pop
dec
jl
movsb
pushf
push
mov
jne
lea
cmp
std
lods
sbb
scas
or
stos
pop
in
sub
aam
sbb
test
push
jg
add
xor
or
mov
pop
out
pop
and
cmp
sbb
push
inc
testb
pop
jns
push
ret
lock
mov
iret
jp
xor
sbb
push
mov
pop
stos
or
or
js
push
stos
mov
inc
push
popf
les
dec
push
shrb
jno
repz
popf
xchg
bound
jne
ds
dec
xchg
in
xchg
lds
xchg
mov
test
xchg
mov
data16
xchg
mov
or
int
add
setge
dec
push
jle
mov
mull
pop
sbb
dec
dec
sub
pop
clc
jl
or
inc
clc
sbb
inc
out
insl
xlat
and
sub
lcall
scas
xor
call
ljmp
mov
icebp
rolb
xor
jge
pop
test
js
aad
inc
aaa
es
jle
and
repz
xor
in
jo
rep
les
xchg
cmp
xor
inc
pop
insb
dec
inc
xchg
adc
fisubrl
push
pop
sbb
cmpb
or
loope
jbe
mov
lea
fwait
out
mov
sar
divb
push
fidivrs
mov
cmp
rcl
imul
imul
adc
pop
test
xchg
fsubs
decb
jns
dec
fsts
lock
sub
pop
or
inc
pop
add
rcl
fsubrp
pop
and
pop
cltd
push
int3
jbe
addr16
je
mov
xor
lret
fs
push
or
and
das
repnz
fdivr
inc
mov
jg
sbb
cmpb
mov
and
xchg
popa
test
or
fbstp
cmp
xchg
and
scas
addr16
mov
sbb
sbb
add
ror
cwtl
in
cmovle
lcall
movsl
aaa
icebp
lret
push
das
mov
inc
dec
fdivrl
in
sub
sub
call
rcll
int3
jae
jmp
je
iret
into
and
sahf
dec
xchg
fdivrs
mov
mov
xchg
into
xchg
aad
inc
outsb
dec
stos
mov
push
xchg
cmp
into
xlat
cmp
jg
adc
hlt
popa
shll
enter
jne
mov
mov
negb
imul
sub
cltd
cmp
ret
and
xor
sub
mov
mov
sub
lret
fxch
movlps
dec
rcll
out
shlb
in
movsl
inc
or
sbb
dec
dec
test
jle
out
shrl
mov
int
out
scas
or
pop
or
cmc
jg
test
adc
sbb
aam
push
xor
testb
mov
jle
decl
jae
aas
adc
jb
inc
inc
in
mov
cmp
daa
jno
mov
mov
push
mov
fidivrl
fmuls
loope
fsubrl
mov
jecxz
and
cltd
in
in
or
mov
sbbl
roll
dec
jl
mov
dec
cwtl
adc
cltd
pop
or
pop
adc
mov
jns
aad
pop
out
ffreep
cmpsl
dec
dec
ret
gs
dec
je
mov
sub
out
daa
int3
lods
es
movsl
sahf
test
divl
xor
out
fldt
add
js
and
pop
xor
lret
xchg
test
gs
dec
lods
adc
sbb
jae
add
lret
or
mov
nop
jb
rcr
in
repz
dec
insb
sub
push
into
repz
shl
loopne
and
push
cmp
cmp
mov
je
mov
pop
loop
push
push
out
add
lret
insl
or
fldt
js
pop
pop
push
add
inc
fidivrl
movsb
daa
scas
fs
inc
mov
sub
jle
dec
jns
loop
fwait
add
and
fadd
sbb
pop
jno
mov
rcll
sbb
jno
movsl
push
or
repnz
push
push
ljmp
and
jae
std
lea
push
faddp
call
adc
and
mov
fbld
mov
adc
shl
out
xchg
mov
repz
jg
aas
hlt
push
sbb
push
inc
jge
xor
xor
jl
xchg
mov
pop
xor
add
mov
imul
xchg
cmp
xchg
lods
and
xchg
push
sti
mov
cwtl
inc
mov
aam
es
xor
sahf
inc
pop
pop
mov
insb
mov
pop
shrb
nop
dec
adc
out
mov
sbb
inc
pop
xchg
sbb
jle
xor
inc
add
leave
and
push
push
orb
mov
lds
inc
mov
cld
enter
pop
xlat
xor
cmpsl
outsl
dec
xchg
lods
test
inc
cmp
xor
sbb
divb
adc
cwtl
pop
mov
idivb
push
mov
icebp
negb
mov
sub
outsb
dec
dec
mov
cmp
dec
add
jmp
imul
fcomi
mov
jbe
sti
mov
adc
jns
push
out
outsb
fidivl
add
fs
leave
ss
xor
lret
inc
cli
add
lock
xor
inc
cltd
add
push
cmp
lret
dec
push
adc
rorl
mov
add
cmp
mov
icebp
movsl
les
xchg
pop
aam
adc
sub
add
mov
je
jl
and
movsl
add
add
test
scas
xchg
mov
sbb
andb
shlb
pop
cmc
lods
fdivrs
jl
jge
pop
jge
pop
pop
dec
sub
addb
mov
pop
inc
mov
mov
into
insb
jmp
cmpsl
shrb
shrl
inc
jecxz
arpl
nop
movsl
and
pop
push
push
add
aad
cmp
out
push
leave
imul
lahf
or
loopne
fwait
enter
xchg
dec
pop
mov
outsb
movsb
outsl
add
xor
gs
xor
leave
shll
adc
data16
movsb
pop
lods
das
sub
xor
xor
mov
repnz
clc
mov
rcll
les
in
dec
cmp
jl
dec
jg
or
in
jmp
xor
xor
aas
scas
out
mov
sbb
inc
int3
popa
test
cltd
jmp
nop
sub
push
xchg
push
sbb
cs
ss
aam
dec
adc
inc
push
jmp
scas
sbbl
mov
sub
les
xchg
repz
inc
cmp
mov
lods
add
xchg
push
inc
fwait
stc
daa
jp
dec
xchg
lahf
mov
sbb
sbb
out
dec
rorl
shrl
pop
int3
fdivrl
push
mov
jbe
sbb
jae
int3
mov
adc
fdivl
push
dec
fildl
and
dec
inc
pushf
xchg
pop
dec
inc
xor
nop
es
repnz
jge
cmp
adc
mov
cmp
cmpsb
cmpsb
xchg
pop
aas
popa
sbb
jle
leave
jns
or
add
nop
in
mov
xchg
into
andl
jno
mov
dec
call
ret
aad
mov
je
cmp
inc
mov
dec
xor
mov
pop
testb
jno
test
adc
mov
push
and
jb
and
pusha
mov
push
add
adc
repnz
stos
mov
imul
xchg
aaa
jg
xchg
add
test
and
lods
inc
repnz
int
xchg
mov
jecxz
fdiv
rcrl
mov
or
pop
loop
into
filds
dec
dec
data16
sub
xor
test
pusha
push
or
xchg
jmp
mov
inc
jae
gs
add
shrl
fs
mov
xchg
out
clc
outsl
addb
xchg
mov
jecxz
adc
sub
fwait
pushf
adc
je
sbb
cs
cwtl
ret
pop
add
ss
push
lahf
stc
push
je
outsb
rolb
aam
xor
xchg
sub
adc
gs
sbb
ss
inc
fbstp
or
xor
aaa
inc
push
fcoml
sbb
add
rcrl
dec
loop
aad
dec
sbb
stc
sbb
push
adc
data16
lods
adc
jns
xchg
jecxz
popf
or
inc
sub
icebp
sbb
arpl
sbb
arpl
mov
or
cmp
and
ficoms
push
jl
xor
push
push
test
fdivrp
clc
fs
repnz
call
pop
sbb
pop
xchg
and
fiadds
and
stc
mov
out
push
xor
sub
lcall
das
orl
leave
movsb
test
fstl
fninit
push
into
sub
out
push
dec
and
cmpsb
dec
mov
jae
in
jbe
push
js
jmp
sbb
mov
movsb
xor
neg
aad
mov
in
xor
mov
es
lahf
push
pop
xchg
out
or
or
mov
shl
repz
std
idivb
xor
popf
sti
xchg
adc
dec
inc
xchg
repz
pop
rcrl
xlat
push
pop
push
mov
mov
pop
fs
xor
mov
inc
xor
cli
pop
push
sub
aad
push
push
aad
mov
scas
mov
push
and
aaa
lahf
dec
mov
cmc
cmp
cmpb
mov
in
cmpsl
popa
sbb
jno
lret
int3
and
and
shrb
adc
cmpl
add
cmp
loop
cmp
ds
mov
in
cld
mov
jns
test
sbb
lds
and
imul
pop
fwait
aas
jmp
out
push
outsl
push
mov
jb
jbe
or
out
stos
mov
xchg
xchg
cmpsb
mov
daa
out
xchg
je
aad
inc
jae
jne
jl
cwtl
ficomps
es
movsl
inc
cltd
fdivs
push
pop
jb
lods
fsubp
leave
rcll
subb
jg
mov
xchg
mov
push
mov
arpl
inc
xchg
divl
and
out
lcall
divb
cmpsb
cmp
aas
cwtl
jle
add
push
xor
xor
lea
xchg
je
fldl2t
test
xor
ds
mov
fdivr
fwait
pop
iret
inc
imul
xor
mov
cli
jge
insb
xchg
jno
bound
incl
or
lods
jno
pop
clc
in
sahf
fs
out
out
mov
jp
cmp
mov
shrb
jg
jbe
mov
lock
sub
sub
push
ljmp
cmc
xchg
les
js
dec
mov
pusha
or
and
jno
xchg
push
into
cwtl
mov
xchg
movsl
sub
and
jo
pop
aad
clc
inc
xchg
aad
push
fnstenv
and
mov
mov
std
cmp
out
fsubrs
cmp
pusha
je
xchg
adc
jb
adc
aam
add
lods
mov
adc
cltd
stos
getsec
jnp
loopne
jmp
ds
int
ret
in
and
sbb
scas
cmp
dec
in
jle
push
cli
inc
jg
add
inc
adc
push
into
filds
sub
lods
scas
cmp
jne
pop
orb
into
dec
pop
sahf
js
and
xchg
push
sub
or
mov
mov
jmp
push
repnz
jne
mov
mov
add
push
inc
jb
sbb
pop
and
sbb
clc
ret
ja
dec
mov
xlat
rcl
insb
decb
adc
in
inc
mov
push
xor
test
pushf
adcb
xchg
mov
decl
loopne
pop
cmp
jecxz
orb
div
lret
jge
xor
es
mov
xchg
mov
pop
xchg
sbb
jb
mov
push
pop
out
pop
prefetch
dec
push
push
shll
sbb
mov
fsubl
jbe
lea
or
lcall
addr16
inc
and
push
push
outsb
mov
jg
pop
ja
lea
roll
in
dec
mov
jne
push
jnp
insl
loopne
sbb
pop
cmp
add
mov
jl
mov
in
cmp
adc
in
leave
or
into
popa
adc
ja
repz
shrb
sub
stc
mov
int
imul
rcll
inc
loop
pushf
adc
adc
in
sbb
mov
pushf
cs
cli
jae
jle
add
es
mov
ljmp
out
faddl
mov
sarb
cltd
out
jbe
rclb
xchg
or
jle
xlat
andl
lock
xor
sub
lods
xchg
or
pushf
cmpsb
mov
rorl
push
adc
enter
jp
push
pop
ud0
jne
mov
shl
pop
mov
or
outsb
xchg
fiadds
in
out
out
cwtl
cmp
push
mov
movsl
cmp
stc
xchg
push
xchg
into
jl
popl
sub
pop
inc
movsl
push
fsubl
stc
dec
xchg
pushf
mov
push
xchg
dec
es
bound
jae
add
mov
push
aad
jae
push
scas
xor
fsubs
pop
push
fisubrs
jmp
ficomps
sarl
lods
cmp
mov
sub
faddl
dec
adc
fldl
xchg
ljmp
jae
lods
rorb
mov
or
mov
rolb
in
push
bound
push
sbb
negl
lds
imul
movsb
pop
sbb
mov
inc
adc
or
pop
test
jbe
mov
cmc
imul
or
push
outsl
fildll
cli
xchg
addb
and
test
mov
xchg
std
aam
add
jno
jo
mov
out
in
xchg
cmp
dec
loopne
out
test
push
dec
mov
adc
jo
jae
iret
notb
mov
sar
call
fwait
jnp
cmp
inc
or
sub
mov
std
push
loope
jl
movsb
ljmp
sub
pop
sarb
sub
pop
cmp
xchg
adc
sub
fs
fldenv
cmp
loope
sbb
xor
sbb
shrl
popf
sbb
and
cmp
stc
and
dec
in
outsb
roll
lcall
stos
push
cwtl
cmpsb
out
sub
inc
dec
rcll
or
add
popa
aaa
mov
movsl
add
lret
jne
mov
fnstsw
xor
aas
daa
add
std
dec
sbb
xchg
lock
push
inc
inc
jge
std
mov
xlat
xorb
mov
lds
mov
inc
mov
add
xchg
add
sub
aad
outsl
sbb
add
call
je
enter
inc
arpl
xchg
fstl
in
add
movsb
out
mov
aam
stc
cmp
adc
arpl
mov
inc
jne
pushf
cmc
inc
std
test
jmp
push
sarl
into
xor
lcall
sbb
fcmove
inc
seta
jb
cmp
or
mov
cmp
out
mov
fbstp
cmp
xor
jae
scas
pop
mov
das
jl
inc
out
lods
sub
test
xchg
insb
arpl
fidivs
mov
inc
xchg
lahf
push
outsl
jg
shl
jo
scas
jmp
out
xchg
jl
or
repz
add
negl
sbbb
dec
inc
stos
stos
add
sbb
mov
xchg
cmp
scas
sub
sbb
jnp
arpl
or
jge
mov
insl
out
mov
aam
mov
cmp
cmp
xchg
adc
sub
mov
inc
bound
jns
daa
inc
aas
lods
cli
xchg
pop
push
ljmp
out
cmp
dec
jbe
pop
shr
out
dec
jg
lret
insl
popf
xlat
jecxz
cmp
add
xchg
orb
fwait
pop
iret
mov
notl
into
mov
cld
in
int
cmp
inc
push
into
in
jle
lahf
inc
ljmp
cmp
mov
dec
xchg
cmpsb
xchg
push
enter
orb
repnz
cwtl
sub
andb
or
cltd
lods
mov
jl
add
and
cmp
mov
xchg
in
mov
sub
mov
sar
mov
xor
adc
adc
adc
pop
pop
xor
add
adc
nop
stos
sbb
adc
jmp
loopne
cltd
sub
loop
loopne
rcrl
ret
popa
out
stos
mov
sbb
jns
sub
dec
pop
test
add
cmp
insb
pop
dec
mov
out
xor
inc
cwtl
mov
mov
xchg
xchg
push
lods
out
mov
cli
and
mov
sub
sbb
inc
shrl
push
les
fsubrs
adc
aad
std
fwait
popf
and
mov
pop
movsl
ret
inc
pop
xor
jl
sub
xor
xor
ja
jae
repz
inc
mov
cmp
lcall
cmpsb
test
sbb
sbb
outsb
xor
pop
int
cmp
dec
mov
and
add
push
in
adc
push
fcoms
stos
aas
loopne
xchg
rcl
push
mov
push
out
inc
fsubr
cli
repz
add
addb
ds
sub
fisttps
fidivs
push
pop
inc
pop
stos
cltd
cli
popf
daa
push
mov
jae
repnz
shr
inc
mov
push
filds
out
sbb
pop
push
pop
inc
mov
lea
push
push
mov
mov
mov
xchg
pop
mov
fiadds
js
pop
lret
lahf
stos
iret
inc
or
or
add
xor
dec
fldenv
sbb
cmp
xchg
inc
pop
lret
in
mov
nop
pop
push
and
mov
test
add
cmp
pushf
mov
ljmp
dec
into
mov
xor
inc
push
stos
xlat
cli
mov
pop
ljmpw
sbb
sarb
ds
movsl
cmp
repz
pop
sbb
dec
sbb
pop
dec
leave
shll
arpl
adc
int3
pusha
inc
mov
ret
pop
cmp
out
pop
mov
repz
and
das
mov
int3
les
mov
lret
inc
movsl
adc
hlt
pop
adc
jge
mov
jl
mov
xchg
xchg
adc
repz
fcoms
rcll
movsb
sub
add
push
jge
adc
ljmp
adc
je
popa
imul
fnstsw
jae
pop
mov
repz
mov
pmaxub
sbb
int
mov
frstor
bound
xchg
inc
cld
dec
cmp
loopne
push
mov
push
xor
fmull
mov
add
dec
sub
mov
movsl
xor
xchg
call
imul
dec
push
pop
loop
lock
icebp
lock
scas
mov
cmp
xor
jb
xor
lret
test
jl
insb
es
or
push
mov
pop
in
jns
in
lea
push
and
rcrl
in
cmp
cmp
lea
sbb
xor
push
inc
into
lcall
jae
jae
or
xchg
sahf
orl
or
pop
mov
fistpll
out
dec
mov
movsl
fdiv
dec
std
inc
arpl
inc
in
inc
push
pushf
pop
in
and
andl
add
push
mov
mov
ljmp
xor
xchg
sub
mov
pop
out
fldl
in
sub
out
cmpb
loop
mov
arpl
add
cmp
lock
loope
pop
lds
addb
inc
mul
stc
mov
push
jge
pusha
and
jb
inc
shl
mov
fcoml
popf
aas
xchg
test
stos
lods
xor
inc
lcall
mov
jge
xchg
push
mov
leave
pusha
push
xlat
xchg
add
add
lds
subl
mov
mov
xchg
enter
mov
push
and
out
arpl
and
stos
pop
nop
outsb
aad
inc
cwtl
out
mov
outsl
mov
and
push
push
lahf
push
adc
out
push
xorl
repz
mov
jp
mov
sbb
addr16
ret
mov
pushf
in
and
and
pop
push
push
mov
nop
mov
adc
pop
es
push
adc
cld
pushf
iret
hlt
xchg
add
bound
push
mov
jmp
cmc
pop
adcl
or
inc
stos
xchg
cmpsl
and
das
decl
les
adc
push
push
mov
cld
arpl
xchg
insl
aaa
arpl
jg
jge
fisubrl
sti
push
inc
sbb
outsl
enter
and
movsl
cmp
movsl
aam
int3
imul
pop
push
popa
arpl
ja
push
xor
in
mov
dec
inc
mov
clc
outsb
or
sbb
fmuls
mov
dec
mov
into
cmp
push
aad
and
orl
ds
or
jae
das
pop
int3
into
adc
push
adc
sahf
into
lret
movb
loopw
sub
arpl
cmp
in
shll
out
and
cmp
push
inc
mov
aam
jne
movsl
dec
xor
cmp
sbb
insb
arpl
aas
out
lock
adc
fs
arpl
lret
loope
add
jnp
decb
shlb
adc
push
mov
mov
jle
xchg
ficoml
lods
fs
pop
call
jle
mov
imul
cltd
pop
das
ds
ds
cltd
jns
pop
int3
into
jne
ss
or
outsl
dec
scas
adc
scas
jle
in
daa
inc
mov
sbb
icebp
sbb
adc
cmp
mov
cmpsl
enter
iret
adc
mov
mov
xlat
subl
mov
xchg
push
and
sub
dec
lock
movsl
aaa
mov
mov
je
jle
rcrl
ljmp
and
cmp
mov
data16
std
les
sbb
pop
jnp
push
mov
loope
leave
scas
mov
das
lods
or
add
push
insl
mov
mov
jmp
jns
sbb
scas
aaa
mov
jl
push
shrl
and
cmpsl
xchg
addr16
cmc
mov
cmp
push
and
enter
test
ret
cld
pop
sti
fsubs
pop
repz
or
fwait
movsl
mov
bound
imul
es
ds
mov
xor
fiadds
ret
enter
push
lahf
push
cltd
pop
movsl
xchg
mov
push
das
cmpsl
jl
in
sbb
mov
inc
nop
movsb
fprem
mov
xor
rcll
out
or
and
dec
outsb
or
out
add
push
jae
xor
dec
push
pop
fbstp
sub
jg
push
xchg
dec
dec
aad
mov
push
lods
fdivrs
les
jbe
push
ret
fwait
test
das
rcr
test
xor
mov
test
outsl
push
test
repz
jge
fwait
scas
xlat
xchg
xor
imul
ret
add
sub
repz
or
mov
dec
xchg
jle
cld
push
cltd
js
jmp
pop
cvttps2pi
inc
imul
and
sub
dec
pop
mov
jl
push
bound
jb
mov
cli
jge
pop
sub
ja
in
je
sbb
icebp
pop
and
xchg
stos
adc
stos
pop
mov
lret
push
pop
mov
repnz
adc
jnp
cmp
pop
loop
dec
xor
mov
mov
out
orl
shl
lcall
data16
mov
adcl
add
mov
add
notl
adcb
dec
fimull
pop
leave
fidivrs
rcl
sbb
xchg
xchg
ds
xor
sahf
push
repz
pop
ret
fstpt
mov
mov
clc
je
ss
add
xor
out
in
pop
jne
jo
arpl
cld
xchg
sti
mov
xchg
mov
lret
cmpsl
inc
loop
aas
hlt
and
pop
pop
mov
mov
and
les
xchg
push
stos
sub
mov
and
stos
repz
lret
fs
mov
pop
jmp
fs
mov
bound
mov
out
dec
insb
pop
fld
lock
mov
movsl
sub
sub
xor
out
arpl
fsub
sub
adc
shll
jbe
mov
lret
jns
aad
lret
insl
sub
push
mov
jbe
shrl
push
sarl
cld
push
or
xchg
xchg
orb
loopne
mov
mov
cmpsl
inc
dec
sbb
test
xchg
mov
or
pop
lahf
mov
fistl
push
cmp
test
xchg
insl
subb
jno
ret
std
testb
push
aad
add
das
sbb
movb
nop
sub
out
pop
pop
add
popl
negl
icebp
push
sub
das
cmp
pop
cld
decl
hlt
shlb
and
and
arpl
inc
pop
xchg
lds
sub
imul
imulb
pusha
ficompl
iret
loop
scas
test
fiaddl
adc
jp
inc
or
sbb
mov
daa
add
js
aas
jmp
stos
jle
popf
js
and
fstl
mov
xchg
out
pop
call
cmc
inc
sbb
pop
loope
push
in
pop
test
imul
mov
ror
aam
xlat
int3
push
xor
sub
imul
mov
xchg
sub
repz
into
mov
mov
stos
and
sbb
pushf
insl
push
add
sbb
push
mov
notl
mov
xchg
add
jae
mov
dec
pop
and
aam
mov
mov
push
mov
sub
pop
dec
jnp,pn
test
dec
popf
jnp
jg
mov
loop
dec
fldenv
mov
loopne
sahf
bound
dec
and
cmp
sub
xor
test
cmp
inc
push
in
cmp
das
cmp
push
test
cld
adc
mov
mov
popa
js
test
lods
shl
cmpsb
xchg
add
cmpsb
push
sub
int
lds
mov
adc
mov
cld
add
sub
jo
jo
xor
sbb
aaa
repz
fwait
out
xor
adc
mov
lock
lods
jo
pop
add
pop
jb
nop
sub
roll
imul
pop
repnz
dec
int3
icebp
insl
add
lret
sub
sti
add
rorl
and
and
leave
outsl
mov
fstps
mov
call
in
sub
movsl
inc
gs
cs
xchg
fisubs
xor
xor
mov
std
jb
jl
fisttps
fsubrs
in
inc
inc
sub
jns
jl
enter
icebp
aaa
pop
ret
cmp
ds
pop
lret
inc
das
sbb
mov
pop
mov
xor
mov
les
mov
sti
sub
xor
jge
sahf
add
loopne
mov
das
neg
loopne
faddl
pop
test
dec
shr
sbb
dec
xchg
andl
jne
and
adc
ds
cmpsl
out
adc
pop
rclb
daa
adc
cmp
xchg
xchg
jecxz
cmp
lea
or
cltd
loop
stos
aas
stc
push
fcmovbe
les
push
adc
dec
imul
dec
xchg
sbb
mov
fisttpl
cld
or
and
nop
cs
ss
mov
or
jmp
inc
cmc
cld
gs
insl
mov
push
inc
adc
cmp
test
icebp
lahf
bound
push
mov
out
push
adc
jmp
dec
jecxz
adcb
lea
lods
jmp
or
aas
subl
into
mov
pop
adc
outsb
adc
popf
clc
mov
dec
mov
xor
lds
mov
inc
xor
test
sub
movl
jb
dec
addb
inc
push
cmpsl
in
aam
loope
std
dec
cwtl
push
jnp
in
push
fcompl
rcl
mov
in
xchg
mov
fnstenv
and
mov
mov
pop
jno
or
pop
jb
sti
mov
pop
sarl
adc
mull
pop
mov
sbb
jmp
fs
push
sahf
int
pushf
mov
pop
out
xchg
inc
xor
cltd
cli
push
xchg
sbb
mov
jp
mov
les
pop
xchg
and
cmp
loope
push
push
mov
xor
inc
mov
filds
lahf
dec
dec
mov
xchg
leave
mov
pop
ret
add
bound
or
inc
fsubs
sbb
jno
popf
lret
add
shll
mov
jo
pop
in
out
jnp
lock
fsubrl
int3
cmpsl
out
vunpckhpd
or
jns
jge
btr
sub
bound
je
stos
xor
mov
shrl
out
movsb
mov
xchg
std
insb
pop
pop
pop
and
mov
jmp
jmp
fcompl
xchg
in
jns
push
jne
test
mov
adc
xor
loope
push
mov
punpckhwd
push
or
adc
fdivrs
xchg
hlt
or
pop
dec
daa
pop
pusha
push
pop
mov
out
in
int3
rclb
test
adc
arpl
in
pop
pop
jno
jge
push
inc
popf
sbb
in
idivb
jnp
cmpsl
sbb
xor
enter
test
mov
mov
shrl
dec
dec
and
push
ss
cld
fisttpl
dec
sbb
xchg
jb
mov
rorl
or
dec
mov
dec
fwait
rcrb
into
bound
data16
xor
sbb
cmpsb
leave
stos
add
sbb
rol
ret
mov
ja
mov
pop
aam
add
pushf
das
cmp
push
movsb
or
pop
dec
popa
pop
inc
pop
lret
dec
pop
mov
fwait
and
stos
aas
or
lods
add
push
mov
xor
lds
push
cld
jns
lods
xchg
jne
rcll
mov
cmp
dec
test
mov
adc
push
rep
push
cmp
push
inc
outsl
xchg
cmp
scas
pusha
and
int
stos
xchg
popf
lahf
adc
xor
sti
mov
out
lods
shl
movl
dec
cmp
mov
in
call
xchg
loopne
aas
int3
sub
mov
or
repnz
lods
add
fisttpl
mov
sbb
xchg
call
cltd
movsl
and
sbb
or
push
int
cmpb
push
inc
pusha
dec
loope
in
inc
pop
dec
fmul
imul
mov
mov
arpl
fwait
loop
jnp
loop
imul
inc
mov
stos
mov
dec
push
aad
loopne
mov
shl
pop
cltd
mov
pop
pushf
jbe
movsl
cmp
iret
rorb
pop
dec
idivl
and
in
test
lock
mov
das
aas
fisubs
push
mov
pop
xchg
xchg
clc
outsb
repz
mull
jecxz
sbb
ds
cmp
jae
es
sbb
dec
sub
and
cmp
lret
mov
roll
fs
xchg
push
push
rolb
cmpsb
jmp
pop
mov
mov
inc
push
into
or
cmpl
in
xor
cmovp
sub
jge
xor
sub
mov
mov
vmwrite
mov
repz
loopne
cmp
insb
pop
orb
movsl
arpl
shl
js
andb
ss
mov
dec
cmpsb
xlat
adcl
xor
sti
xor
and
add
and
sbb
js
adc
das
mov
aaa
cmp
and
xorb
scas
iret
adc
outsl
cli
insl
add
negb
pop
and
lock
dec
movsb
mov
scas
add
mov
xchg
xchg
adc
xchg
mov
xchg
out
shll
push
fs
inc
daa
movsl
imul
movsb
xchg
jmp
mov
jno
push
inc
sbb
fildl
jb
pop
xor
inc
lret
mov
pop
mov
push
adc
std
dec
cmp
pop
inc
popf
sub
test
mov
mov
sub
mov
xchg
sub
push
xchg
aas
popf
stos
mov
pop
add
andl
mov
mov
cs
bnd
sub
xchg
popa
sbb
mov
inc
and
mov
int
or
fimull
xchg
ss
in
cmp
cmp
repz
xchg
pusha
push
mov
outsb
sub
lods
enter
cmp
xchg
scas
stos
xchg
pop
loope
idivb
or
leave
imul
sarb
div
cli
lds
xchg
push
iret
xchg
jmp
loopne
test
mov
stos
xor
sbb
xchg
inc
fiadds
je
test
dec
out
jp
sbb
jmp
add
je
nop
dec
sub
pop
mov
jle
cwtl
call
outsb
and
mov
js
aaa
mov
daa
mov
jae
jge
bound
mov
mov
push
pop
push
cmp
adc
sbb
mov
filds
arpl
mov
outsb
ret
mov
xchg
movsl
fidivrl
inc
enter
cmp
divb
mov
andb
cwtl
cmp
xor
and
aad
xor
into
xchg
in
daa
cmp
js
sub
push
mov
mov
push
test
popf
adc
icebp
xchg
call
dec
sahf
xor
dec
das
cmp
rcrl
loope
ljmp
in
pop
pop
inc
sbb
subb
cs
mov
cltd
pop
shrl
xor
mov
mov
sbb
jmp
test
or
cmc
xlat
push
lods
loop
or
in
xchg
pop
test
sbb
pop
aam
movsb
out
cmpsb
std
ret
les
sub
fwait
or
xchg
or
jmp
stc
pop
mov
inc
lods
inc
ja
mov
xor
xor
fwait
adc
fists
das
jl
jbe
pop
lods
in
scas
imul
mov
andl
pop
aam
leave
adc
loope
jbe
sahf
push
mov
sub
popa
mov
cld
test
cwtl
stc
mov
fwait
in
shl
fst
add
std
sbb
cmpsb
rorb
jb
icebp
xchg
lcall
arpl
add
popa
or
mov
inc
mov
dec
mov
les
push
call
mov
sub
mov
ss
loopne
inc
outsb
mov
hlt
sub
test
adc
cld
shrl
ret
dec
inc
xor
je
and
inc
mov
hlt
mov
xchg
jecxz
testb
sahf
insl
push
inc
pop
or
push
clc
mov
pushf
push
ljmp
push
rolb
cmpsb
mov
cmp
bound
out
mov
inc
lea
jmp
mov
mov
fldcw
lea
rorb
nop
enter
pop
aaa
cmc
push
mov
shlb
pop
cli
icebp
scas
dec
sbb
xor
or
cmp
xlat
mov
inc
jg
aam
cmp
dec
shl
arpl
int
pusha
fnstsw
shr
cld
mov
subb
cmc
mov
loope
sbb
mov
stos
push
sbb
int
rorl
test
std
and
add
lods
and
notb
mov
or
mov
sub
ret
sub
jnp
les
and
fildll
aam
or
jb
add
adc
mov
sub
or
jg
xchg
mov
out
xor
fidivs
test
ret
insl
sub
adc
and
lcall
xchg
mov
mov
push
mov
xchg
inc
addl
aam
pop
mov
inc
adcb
mov
or
in
mov
push
xor
icebp
cltd
call
stc
mov
sub
into
je
fmul
jge
jno
mov
sbbl
push
xor
jne
xor
cmp
mull
sahf
out
jbe
xor
test
aam
loopne
mov
je
dec
rolb
jnp
cmp
sub
icebp
xor
sub
out
cli
jmp
mov
test
pop
add
aaa
or
push
stos
cwtl
jo
aam
dec
in
sarb
loope
jp
movsl
test
sub
cli
ficompl
mov
push
hlt
insl
insb
cmp
mov
lods
jecxz
adc
shlb
mov
movsb
jbe
pop
sub
xor
fidivrs
movsb
lods
xchg
mov
xchg
sub
mov
jp
dec
inc
sbb
in
jnp
lcall
adc
cmpsl
movsl
fistl
mov
outsb
or
jp
push
push
dec
lods
mov
fwait
mov
fs
cmp
addr16
lret
out
icebp
jecxz
cmp
add
add
mov
pop
andl
mov
mov
fcomps
mov
sub
inc
nop
mov
lods
mov
adc
sbb
xchg
lock
repnz
mov
xlat
cmp
nop
lock
push
pushl
jne,pn
dec
int
int3
hlt
push
lock
movsl
xorl
jp
mov
add
ficoms
fnstsw
xor
and
nop
sub
cltd
jnp
sub
subl
push
add
pop
pop
stc
lods
fwait
mov
ret
rdtsc
rol
hlt
icebp
cs
out
scas
add
sub
movsb
dec
push
hlt
xor
ret
jmp
shlb
std
fwait
dec
push
fs
cmc
push
les
fistpll
ljmp
in
sbbb
or
int3
js
push
lret
mov
repz
iret
fistps
jg
daa
imulb
in
lods
stos
lods
xorb
xchg
movsl
push
jmp
cltd
addl
orl
imul
test
push
jle
sub
dec
inc
sub
into
call
mov
fimull
lea
lahf
pop
jle
mov
push
sub
fsubr
push
ja
xchg
sbb
daa
add
jge
stos
std
ss
push
xchg
popa
cmp
push
sub
and
push
cld
daa
xchg
add
dec
cmpsb
add
cmp
gs
dec
iret
ret
lahf
mov
jmp
dec
mov
cmpsl
adc
xchg
xor
ret
and
xlat
cltd
sbb
arpl
ret
mov
mov
stos
fstpt
inc
int
xchg
xor
dec
sbb
adc
push
add
sub
push
jo
push
int
loopne
jbe
stos
cmp
push
sub
mov
mov
std
jmp
lea
roll
lods
cmc
fidivl
sbb
stc
jge
jns
dec
data16
inc
cmp
popa
pop
arpl
lcall
mov
mov
arpl
popa
adcb
gs
ss
popf
fstpt
stos
inc
sub
sbb
mov
push
mov
or
leave
shl
das
jecxz
leave
inc
call
scas
mov
pop
mov
popf
sub
xchg
push
lcall
sahf
lds
mov
adcl
xchg
mov
out
cmc
pop
test
add
pop
adc
lret
loopne
incl
pop
frstor
cli
scas
adc
std
adc
scas
int
xor
roll
lahf
in
mov
mov
and
std
loope
mov
sub
and
jns
cld
outsl
push
out
xchg
loope
fcoms
and
scas
int3
lahf
inc
insb
sub
fwait
pop
cmpsl
aam
insl
rcrb
icebp
mov
mov
jne
or
mov
push
loopne
and
imul
aas
jl
int3
ret
in
test
pop
add
insl
dec
clc
into
loopne
inc
scas
mov
inc
das
push
stos
gs
stc
out
jne
testb
sahf
shll
repz
jmp
jmp
loop
adc
sub
clc
sub
test
out
call
dec
mov
adc
or
xor
jecxz
repz
in
sbb
in
imul
dec
lea
mov
lods
push
add
xchg
scas
adc
call
mov
cmpxchg
add
push
orl
pop
scas
cwtl
icebp
xor
outsb
mov
lds
idivb
sub
mov
push
popf
cmp
jb
lret
pop
inc
shlb
outsb
mov
jb
and
mov
stos
mov
or
push
testl
ss
enter
add
sbb
cmp
xchg
dec
or
pop
pop
popf
kmovw
bt
scas
cmp
aas
xlat
out
sbb
cmp
mov
jmp
mov
sti
outsl
mov
icebp
mov
frstor
adc
push
pusha
adc
push
ja
fdivp
push
sbb
add
jmp
fs
mov
lea
test
int3
jno
mov
xchg
cli
adc
aas
dec
inc
ds
and
add
jle
fistpll
xlat
xchg
xchg
insl
xchg
pop
enter
jle
and
dec
inc
test
pop
negl
pusha
and
xor
add
mov
lret
cmp
inc
insb
repz
imul
lds
data16
cmc
cs
push
cmp
and
into
dec
add
jecxz
jp
in
xor
push
adc
filds
nop
adc
cwtl
movsb
in
test
ja
mov
pop
mov
lret
sbb
jns
push
mov
gs
mov
clc
add
push
sub
xor
test
stc
sbb
dec
xchg
lds
rcr
mov
lea
lret
adc
adc
mov
push
lcall
js
pop
xor
cmpb
in
jbe
data16
outsl
xor
add
mov
aas
push
mov
rorl
xor
fs
pop
int3
pop
repz
test
in
cwtl
ror
xchg
sub
movsb
cmp
ss
dec
aad
lret
daa
nop
xchg
sub
outsl
jge
xlat
lea
jb
mov
or
das
jns
inc
ja
scas
ss
add
mov
dec
dec
push
fisubs
leave
and
sbb
cs
call
inc
clc
jmp
fdivl
lret
pop
xor
jno
lret
cwtl
shrl
icebp
sarl
jb
push
lret
out
add
mov
and
dec
in
or
mov
xlat
or
mov
jp
mov
stos
fs
jg
push
aam
or
adc
flds
ds
out
mov
cmp
mov
fcmovb
pop
mov
call
int3
out
push
mov
test
and
nop
cwtl
inc
pop
movsb
cmp
jae
roll
xchg
es
call
dec
mov
mov
adc
jae
ret
cmp
xor
out
mov
and
popf
cmp
add
and
dec
repnz
xchg
aaa
add
nop
testl
mov
test
stos
adc
movsl
je
or
sub
xchg
push
int
push
es
pop
xchg
sbb
inc
shl
xchg
xorb
jmp
loopne
cmpsb
mov
js
jmp
xor
xchg
fistpl
bnd
pop
xchg
mov
lret
test
push
fcmovbe
dec
mov
cs
out
sbb
add
imul
push
pop
push
mov
mov
out
add
ds
mov
cmp
push
xchg
es
jo
movsl
pop
dec
xorl
fsubr
pop
ja
arpl
and
pop
and
mov
xor
repnz
pop
inc
movsb
fwait
xor
adc
inc
ret
arpl
sub
mov
cld
fadd
adcl
arpl
leave
mov
addr16
pop
mov
mov
xchg
bound
sarb
adcb
aad
pusha
cmp
jle
ror
sahf
in
adc
jb
adc
lds
cmp
adc
dec
dec
imul
sub
sarb
push
movsb
imul
and
inc
hlt
imul
pop
push
fs
in
outsb
dec
out
scas
adc
fidivs
pushf
aad
dec
rolb
and
rorl
sbb
sub
or
insl
push
cmpsb
pop
out
imul
pop
jno
mov
mov
xchg
sub
sbb
fcmovnu
mov
into
out
stos
or
fld
xchg
int
mov
leave
mov
scas
bound
subl
add
and
xor
sbb
sbb
mov
lds
mov
mov
sbb
lock
cltd
sti
or
insb
add
cwtl
imul
xor
push
cmpsl
mov
xchg
mov
pop
pushf
cmpsl
das
in
in
xchg
xchg
push
ja
mov
stos
push
mov
mov
shll
lcall
int3
pop
ss
sarl
pop
xchg
in
inc
sti
mov
and
and
mov
roll
adc
stc
inc
pop
pop
dec
addl
add
fistpl
in
aad
sub
and
jns
stc
push
mov
insl
push
push
pop
mov
add
enter
out
mov
push
cmpsl
fdivr
xor
inc
cs
jg
dec
movsb
mov
and
sub
mov
mov
les
and
mov
mov
cmp
mov
and
jne
jle
ret
push
sahf
lcall
rdmsr
sbbl
ss
sub
push
mov
pop
sub
out
mov
jle
sub
jle
xchg
nop
xor
mov
call
mov
or
repz
sub
lret
sub
pop
inc
and
push
sub
cmp
ds
stc
lds
aaa
sbb
jecxz
mov
mov
in
dec
inc
mov
es
rorb
mov
jb
adc
stc
ljmp
mov
jnp
add
push
icebp
int
loop
adc
les
fstp
mov
cmp
dec
pop
fdivrl
push
mov
sbb
cmc
roll
cld
mov
inc
mov
pop
out
xchg
movsl
test
inc
insb
sbb
or
js
inc
ljmp
imul
addl
jne
pop
testb
xchg
lret
adc
in
push
into
nop
dec
xorl
sbb
jecxz
adc
jbe
arpl
test
push
shrl
outsb
fbstp
call
mov
das
cmpsl
adc
xchg
mov
rcrl
in
jmp
xor
sbb
mov
mov
mov
push
lods
data16
lret
iret
sbb
mov
int
adc
sub
xchg
out
xchg
pop
test
push
addr16
mov
mov
adcl
mov
iret
cltd
or
xor
fldcw
dec
aaa
lret
adc
ds
mov
mov
in
cmc
scas
mov
jl
inc
test
xchg
lcall
pop
add
inc
push
sub
lea
inc
nop
insl
jne
mov
inc
ds
add
sub
mov
cmpsl
popf
fdivl
xor
ja
mov
xchg
push
xor
pop
das
movsl
iret
push
shrb
push
sbb
cltd
xchg
jecxz
push
divl
clc
pop
js
fisttpll
lods
sbb
repnz
test
flds
xchg
inc
or
xchg
jne
jns
pop
push
repnz
cwtl
inc
out
xor
jecxz
popf
ret
mov
xlat
in
jbe
fistps
jbe
pop
jmp
adc
enter
popa
into
fcmovbe
imul
loopne
xchg
sub
repnz
loopne
xchg
ror
das
enter
pop
insl
jle
mov
push
je
mov
pop
mov
mov
xchg
mov
mov
mov
push
mov
push
leave
dec
sbb
add
mov
jae
adc
outsb
test
clc
xchg
cli
xchg
mov
movsl
mov
jb
popf
lds
cmp
fdecstp
mov
xchg
ret
mov
mov
stc
push
imul
xchg
add
sub
push
xchg
stos
sarl
jo
mov
jmp
pop
negb
orb
in
jo
mov
add
aad
fildll
faddl
mov
fwait
lcall
cmp
sbb
popf
xor
les
rcr
stc
cmp
movsl
jl
nop
mov
stos
in
mov
or
xchg
scas
and
lds
jno
in
loope
test
jae
xchg
jnp
frstor
sbb
xchg
inc
icebp
xor
fcoms
pop
add
mov
jae
cs
aam
jne
and
out
das
xor
sbb
iret
cli
scas
sub
imul
fst
pop
jne
mov
insb
dec
data16
jne
mov
imul
sti
fldl
lret
rorl
mov
andl
std
je
lcall
jle
pop
int3
or
and
or
jae
push
add
pop
pop
rol
or
test
sbb
adc
incb
jns
push
jp
fadd
adc
mov
stos
mov
icebp
dec
or
pusha
leave
fisttps
ss
ja
call
aad
push
mov
push
dec
lcall
fucomip
lcall
or
push
sbb
fs
movsl
clc
arpl
aas
dec
xor
sti
dec
sub
mov
test
fsubr
jo
sub
sar
add
pusha
jae
stos
xchg
mov
nop
and
insl
ds
or
cmp
cmp
ja
xor
pop
mov
sbb
xor
insb
in
mov
std
insb
mov
stos
push
push
imul
jle
jge
jae
xchg
outsl
cmp
cs
sbb
loopne
and
add
pop
mov
mov
pusha
adc
add
push
xchg
xchg
test
rcr
and
mov
mov
repz
scas
pop
fmull
nop
cli
and
jo
cs
hlt
inc
fcmove
clc
adc
rolb
test
dec
push
jnp
out
push
push
js
loope
pushf
and
andb
clc
or
mov
nop
mov
rcl
jmp
out
cmp
mov
fidivrl
sbb
arpl
mov
add
adc
mov
ds
xchg
orl
sbb
mov
movsl
test
in
adc
cmp
aaa
cmovge
jno
and
xchg
pop
js
sbb
out
and
inc
dec
movsb
sub
fcomps
cld
push
sub
pushf
clc
inc
ret
ja
sbb
push
jp
sbb
out
mov
dec
mov
cs
mov
adc
shrl
pop
outsl
popf
in
ljmp
outsl
and
mov
mov
cmp
sbb
and
lret
add
cld
pop
mov
lea
inc
xchg
outsb
xchg
std
add
push
inc
aad
sub
shll
xchg
inc
scas
fiadds
loop
pop
mov
jmp
popa
mov
iret
mov
insl
mov
decb
ljmp
aad
jl
mov
insb
loop
cmpsl
bound
mov
and
pop
push
cmc
in
rorl
xchg
pop
call
sti
xchg
scas
out
outsb
dec
sahf
sahf
in
int3
cmp
por
ss
mov
icebp
repz
dec
push
ja
inc
inc
xchg
sub
shr
jmp
dec
sbb
cwtl
iret
dec
jmp
jns
pop
dec
mov
test
cwtl
inc
sbb
adc
dec
jecxz
mov
ret
add
sub
xorl
cli
jl
mov
lret
sti
mov
mov
inc
nop
fisubl
mov
rorl
push
add
insb
cmp
cwtl
xchg
js
mov
clc
xchg
jb
jbe
cmp
fldl
xor
xor
arpl
gs
movsb
or
and
or
xchg
in
cmp
dec
xchg
adc
das
popf
pop
fsubl
and
push
xor
xchg
inc
adc
sarb
jb
insl
mov
addr16
dec
int
mov
and
movsb
mov
fists
sbb
or
xor
pop
dec
sbb
xchg
negb
das
nop
push
dec
ja
add
pop
inc
lret
dec
cwtl
iret
pop
add
mov
cltd
outsb
test
xor
cltd
pop
mov
or
lss
xor
and
push
pop
jmp
or
iret
cmpsb
pushf
les
push
imul
mov
mov
sub
nop
pop
jecxz
mov
rolb
arpl
icebp
das
sub
out
and
mov
xchg
jle
xchg
push
test
adc
stos
repz
stos
outsl
mov
sbb
les
testl
fcoml
in
ret
push
test
fstp
jns
hlt
int
xor
out
fs
lock
insl
sub
loope
test
xor
aaa
inc
rcrb
pop
push
test
cmpsb
adc
mov
dec
addr16
mov
fidivs
inc
lods
shrb
inc
insb
call
cmpsl
push
subl
fnstenv
orb
jp
lods
pop
loope
pop
imul
adc
cmpsl
gs
sub
stc
sub
notb
in
fnstenv
adc
je
inc
shrl
push
pop
or
push
mov
into
inc
dec
int3
pop
xchg
inc
lret
and
stos
add
sti
inc
sbbl
push
lret
or
mov
mov
repnz
xor
or
pop
add
push
dec
in
ret
pop
pop
xor
add
sti
loop
mov
loop
jns
xlat
jns
lock
inc
mov
xor
mov
jns
nop
addb
iret
mov
pop
xchg
jno
mov
xchg
lea
std
into
mov
or
test
stc
xor
sbb
sbb
cmpsl
bound
daa
mov
fdivl
negb
sub
sbb
mov
lds
or
mov
or
sti
cmpsb
xlat
pop
mov
movsb
ds
ss
outsl
insl
push
jmp
test
mov
xchg
ds
adc
add
out
dec
int
pop
jge
sahf
jg
mov
and
mov
sar
jecxz
inc
inc
cmp
push
jno
push
jne
mov
mov
inc
mov
and
fwait
negl
pop
mov
pop
mov
mov
testl
xchg
std
dec
cli
stc
mov
add
mov
adc
push
rcrl
outsb
mov
xchg
imul
aaa
adc
outsb
dec
lea
test
xlat
in
mov
and
data16
enter
mov
mov
jnp
mov
fs
push
dec
mov
cmp
mov
ret
jmp
sub
push
mov
enter
mov
push
iret
mov
cmp
push
lahf
mov
ret
add
hlt
push
daa
cld
push
and
cmp
and
mov
sub
cmp
inc
movsb
add
sbb
addl
adcb
jle
xor
dec
fdivrl
push
movsb
xor
std
and
fistpll
pop
orl
cmpsl
gs
cmp
scas
cmp
pop
out
mov
dec
enter
xor
ss
push
movsb
jecxz
in
push
sti
push
xchg
pop
test
sbb
out
sbb
in
das
sahf
arpl
or
mov
or
dec
push
jecxz
mov
or
inc
xor
test
push
clc
rol
cld
pop
ficoms
hlt
xor
add
sbb
push
mov
cmp
xor
mov
enter
jb
sub
mov
into
add
fadd
fldt
cltd
jl
ret
lret
icebp
jge
loopne
inc
bound
xchg
jmp
adc
push
mov
cld
cmpsb
inc
push
popf
and
cmpsl
test
jb
sub
mov
in
leave
aaa
mov
pushf
mov
and
mov
lcall
xlat
mov
jle
dec
pusha
mov
push
cli
loope
cmp
sbb
sub
mov
cltd
jmp
and
jg
and
fildl
fdivrp
mov
push
test
enter
loop
gs
and
pop
mov
lea
and
cmc
jns
out
cmp
dec
mov
jbe
imul
out
stc
mov
sahf
pop
pop
jge
loope
arpl
jle
je
xchg
or
cmp
clc
movsl
filds
jg
pop
sahf
pop
aas
inc
and
or
into
dec
lods
scas
addb
xor
pusha
scas
mov
leave
test
mov
aaa
add
fcmovnbe
push
and
dec
adc
jp
int3
idivb
jge
jae
and
push
dec
mov
push
adc
and
cmp
das
rcl
in
call
cmpsb
daa
and
xor
ja
in
xor
add
scas
in
xchg
sub
in
sbb
fldl
push
lahf
fstpl
mov
xchg
popa
cltd
insl
xchg
fidivrs
push
adc
jns
xorl
ja
mov
fsts
push
or
cs
and
add
fdivr
xor
fcoms
and
movsl
xchg
push
shlb
mov
mov
jns
aad
popa
pop
fwait
insb
mov
shr
fistpll
imul
mov
int3
add
dec
outsl
mov
adc
mov
enter
lods
mov
aam
lahf
or
std
call
dec
outsl
inc
into
inc
rcl
int3
xchg
loopne
sub
push
and
loope
call
fsubrl
sbb
aam
inc
jns
mov
xchg
sbb
jmp
sub
arpl
and
cmp
fists
mov
inc
or
mov
sbbb
cmp
fimull
int
std
cmp
lret
adc
jle
mov
addr16
in
bound
or
adc
pop
push
scas
jecxz
push
mov
aas
in
out
jbe
sbb
fucomip
adc
es
and
adc
mov
jns
ds
push
movsl
xchg
xchg
in
pop
and
jae
mov
mov
test
and
rolb
cld
or
push
cmp
mov
lret
xor
fsubl
push
jo
push
or
gs
ror
ficoms
pop
lods
pop
nop
jbe
fwait
pop
movb
dec
cmp
push
out
push
pop
xor
jnp
adc
and
xor
es
call
jae
pop
xchg
pop
mov
lods
test
lods
xor
arpl
ja
mov
fmuls
movsb
xor
loop
mov
xor
or
leave
mov
xchg
test
scas
xchg
xchg
data16
inc
shlb
fs
test
jbe
push
ljmp
sub
in
pop
jae
pop
pop
pop
xchg
test
in
movsl
orl
or
inc
vphaddbd
mov
fsubrp
cmpsb
lods
push
pop
fidivrl
lock
loopne
test
out
dec
repz
xor
pop
popa
and
push
and
dec
mov
fdivp
sti
and
fldt
pop
sbb
jo
ljmp
shrb
pop
js
and
dec
sub
jecxz
ret
or
add
sub
mov
lahf
push
lock
or
icebp
or
push
hlt
pop
pop
loop
pushf
mov
adc
outsb
xchg
inc
xor
aaa
and
scas
pushf
mov
and
add
loopne
cmpsl
lahf
push
or
jne
jmp
adc
popa
cli
jae
pushf
add
insb
pop
pop
and
mov
xchg
cmp
lea
arpl
movsb
repnz
mov
aam
push
ljmp
mov
add
enter
nop
adc
rorb
nop
xchg
xor
pop
insb
push
sub
in
jge
mov
inc
xor
xor
out
and
shll
mov
fidivrl
cmpsl
mov
aam
pop
xchg
xchg
lahf
cmp
mov
incb
adc
sub
pop
xor
and
leave
xchg
loope
mov
mov
jnp
repnz
jle
mov
out
jnp
lret
sub
in
jb
icebp
imul
inc
rorl
jecxz
xchg
add
in
movsl
dec
fcomi
xchg
inc
or
sbb
pop
mov
leavew
pushf
xor
sbb
fdivl
mov
or
in
cltd
lret
sbb
fisttpl
imul
sub
inc
xor
idivb
xor
lret
or
cld
dec
xchg
inc
inc
leave
je
pop
stos
fists
movsl
ds
les
rcl
test
fwait
sbb
arpl
cmp
xorb
fisubs
adc
std
sbb
sub
push
mov
insb
xor
xchg
cmp
xchg
xchg
shll
xchg
movsb
imul
cmp
faddp
and
inc
mov
mov
lea
sub
ficompl
push
xchg
add
mov
mov
lea
loopne
push
jb
dec
sahf
mov
dec
xchg
dec
adc
mov
shl
aad
lcall
mov
jne
adc
mov
repz
mov
pusha
mov
or
push
fnstcw
loop
fdivrl
push
add
rclb
fnstenv
into
out
andb
xor
pop
pop
dec
out
int
stos
mov
test
hlt
pushf
jno
adc
dec
clc
adc
imul
stos
mov
rep
ds
rcrb
cld
mov
int3
fcoms
jge
outsb
or
out
movsb
ds
and
mov
shlb
lret
jp
in
aad
xor
dec
mov
insl
add
sbb
lcall
ljmp
push
jecxz
sahf
imul
pop
cld
xchg
xchg
mov
jg
cmpsl
fs
fisubl
and
mov
in
mov
push
sbb
jno
mov
ja
pop
inc
test
push
mov
or
data16
mov
xchg
jmp
xchg
lahf
gs
or
enter
orl
fs
test
in
push
sbb
fwait
orl
enter
sbb
jle
sub
outsb
call
hlt
xor
aas
mov
repnz
inc
mov
je
cld
push
rcrb
pushf
inc
mov
cld
cld
cmp
pop
popf
test
cli
add
adc
xor
inc
sahf
dec
pop
xchg
mov
cmp
xchg
imul
test
inc
push
mov
and
add
mov
cs
mov
sub
xchg
sub
dec
mov
mov
fcoms
lea
leave
xor
pop
lretw
fsub
or
sar
loopne
or
in
cmp
stos
gs
mov
adc
jp
pop
iret
stos
dec
sub
xchg
xor
movl
push
lret
paddsw
mov
out
lock
jns
ljmp
jae
mov
and
popf
jns
push
clc
cmp
outsl
movsl
mov
mov
movl
mov
leave
jno
icebp
ret
or
scas
popf
pop
popa
or
sbb
cmpsb
lea
fcomip
sub
or
nop
dec
xchg
insl
mov
nop
leave
cmp
cmp
cmp
je
mov
pop
push
lods
inc
lahf
scas
lahf
sbb
mov
push
mov
scas
lods
aam
push
loopne
je
shll
loopne
dec
pop
inc
sub
faddl
mov
lcall
dec
cli
xchg
outsl
std
popf
mov
add
lcall
mov
or
jp
push
stos
pop
movsb
mov
inc
cmp
mov
add
in
or
push
notl
pop
cmp
jnp
mov
add
jl
adc
loop
rorb
lret
ss
xchg
xor
jae
insl
sbb
pop
lock
cmp
test
and
mov
pusha
pushf
ljmp
push
pop
add
push
stos
xchg
lds
int3
iret
and
and
fcompl
and
sahf
fwait
xchg
jno
push
ljmp
ljmp
aam
sbb
lock
cmp
sub
push
mov
loope
nop
fcoml
aam
inc
and
ret
push
push
jo
ret
aaa
fwait
xchg
xor
sub
mov
int3
fstpt
pop
xchg
popf
fs
shr
pop
lock
dec
cmp
dec
jecxz
frstor
imul
xor
pop
in
or
dec
movsb
fsub
ss
ret
xchg
pop
jbe
inc
cli
push
nop
sub
bound
inc
cmp
scas
cltd
idivl
test
mov
roll
xor
je
pop
addr16
cld
sbb
in
xchg
test
loopne
loope
incl
popf
and
jne
int3
scas
dec
test
mov
dec
jmp
xchg
cs
add
movsl
repz
test
mov
lret
and
repnz
shrl
inc
shl
jbe
or
dec
pop
cmp
adcb
mov
dec
jne
bound
clc
sbb
mov
sub
repnz
jnp
inc
xchg
push
std
mov
mov
jge
and
lock
repz
es
mov
jb
sahf
sbb
push
inc
je
adc
or
cmc
icebp
aam
int3
adc
adc
in
mov
push
pop
jp
push
mov
sarb
mov
out
sbb
std
mov
jb
sbb
cmp
pop
push
jp
adc
inc
adc
pmulhw
or
nop
pop
ja
int
xchg
cmp
icebp
sbb
adc
cmp
add
adc
sub
and
stc
test
test
fdivl
dec
es
pop
mov
popf
jb
ficomps
jmp
insl
inc
cmp
dec
jp
mov
fcompl
jle
aas
cwtl
rcrb
xchg
mov
movsb
jl
pop
jge
dec
das
jle
xor
push
adc
and
lods
push
andl
push
idiv
inc
xor
mov
jge
xchg
push
mov
pop
in
mov
in
pop
les
pop
dec
fwait
jnp
aam
and
cmpsl
cmp
mov
adc
inc
hlt
fcmovbe
fsts
sbbb
jb
out
xor
popa
dec
data16
mov
xchg
or
mov
mov
mov
and
cmc
mov
cli
pop
add
das
mov
fidivrl
leave
mov
inc
jmp
repz
rol
inc
test
dec
jg
push
movsl
mov
jbe
jnp
sbb
jl
dec
cvtps2pd
pop
pusha
test
cmp
push
push
fidivrs
mov
sbb
sub
into
mov
das
sub
add
loopne
dec
jmp
sbb
popf
mov
fcoms
sbb
pop
sbb
iret
pusha
sub
scas
hlt
jo
push
popf
movsb
push
mov
add
jbe
test
in
jle
add
loopne
push
movsl
sar
in
fbld
sbb
xchg
mov
fidivrl
and
iret
iret
jmp
push
push
mov
outsl
orb
fdivrl
sbb
mov
repz
inc
push
cmp
push
inc
pop
jb
sbb
lahf
lods
lahf
mov
fidivrs
inc
mov
xor
adc
xor
lock
data16
aad
or
lods
imul
rcr
hlt
jmp
cmp
inc
xchg
xchg
sbb
dec
mov
add
aas
aam
jo
vcvtdq2ps
jns
and
in
xchg
bound
mov
in
add
test
mov
lret
mov
xor
xor
into
mov
hlt
dec
mov
imul
jp
mov
inc
test
adc
mov
sbb
hlt
fcompl
icebp
and
xchg
lret
cmpsb
sarl
rclb
pop
jae
pop
dec
fwait
addb
cmc
and
add
ret
push
inc
jmp
xchg
pop
ret
out
xor
mov
pushf
xchg
dec
sub
pop
popf
in
cmp
lods
mov
pushf
dec
and
movsl
ss
dec
pushf
mov
mov
pushf
sbb
fisttpll
adc
jb
enter
jl
jne
sbb
jmp
aaa
out
sub
icebp
stos
mov
mov
jnp
popf
out
decl
js
or
xchg
adc
stos
xor
xor
cmc
inc
loop
xlat
sbb
stos
popf
cmp
jbe
fbstp
mov
stos
mov
pop
jp
out
inc
pop
xor
mov
jge
or
mul
es
or
sahf
adc
ret
divb
inc
aaa
jns
pop
cmp
fbld
loop
in
or
and
xchg
and
dec
faddl
mov
xchg
cmp
fldcw
andl
push
push
pushf
jge
int3
or
movsb
nop
gs
sub
fisttpll
popa
sub
jne
jns
jge
push
repz
fimuls
xor
clc
fbstp
and
xor
ret
arpl
out
ficoms
insb
and
mov
fsubr
pusha
xlat
inc
aam
jbe
fwait
cli
jbe
data16
sub
push
and
stos
out
push
sete
and
cmc
insl
mov
fstps
ret
mov
dec
add
pop
leave
cli
pop
loope
sub
fiadds
imul
daa
in
mov
out
pop
nop
mov
add
inc
mov
leave
test
stos
ljmp
mov
in
push
movl
sbb
cmpb
pop
sbb
inc
hlt
xchg
jnp
cwtl
mov
or
push
xor
addl
sbb
dec
sti
lret
push
adc
nop
fisubrl
mov
enter
in
pop
leave
in
add
movsb
fnstsw
xchg
dec
add
mov
cli
nop
or
mov
lea
add
mov
pop
loope
pop
imul
divb
hlt
pop
dec
jp
add
mov
xor
out
sbb
cwtl
lcall
xchg
dec
add
mov
bound
and
pushf
dec
dec
icebp
pop
mov
iret
test
fdiv
inc
pop
leave
addl
mov
test
inc
movsl
sbb
add
mov
push
pop
mov
push
rolb
xchg
test
mov
hlt
fwait
aas
sar
inc
int3
xchg
lahf
ds
pushl
push
pop
pop
dec
test
ret
mov
into
push
outsb
or
loopne
mov
and
lds
sub
cli
sub
jno
popf
daa
mov
add
bound
pushf
shlb
in
sbbb
testl
das
lods
adc
shr
mov
inc
fdivr
xchg
lret
push
subb
mov
jle
pop
inc
jns
jbe
sahf
mov
push
jg
outsb
mov
dec
subl
cld
mov
ret
bound
arpl
jae
dec
es
push
in
pop
sub
shr
mov
adc
cmp
jo
push
adc
mov
push
push
jmp
lea
mov
sahf
or
push
loopne
ret
and
cmc
push
mov
shr
add
popf
xor
out
sub
inc
pop
add
pop
movsl
add
mov
sarl
mov
lods
std
into
and
bound
icebp
or
pop
sti
jp
and
repz
dec
rorb
dec
pop
push
pop
das
mov
mov
xor
hlt
add
mov
sbb
popl
out
leave
test
adc
xlat
out
repz
jns
ret
fisttps
stc
mov
lods
pop
rolb
les
mul
cmpsl
daa
and
das
arpl
or
aam
cmpsl
ret
gs
push
data16
inc
sub
jecxz
rcll
xchg
addr16
pop
mov
adcb
xchg
or
negl
xor
mov
lahf
sbb
imul
lods
out
lret
insl
jge
repnz
mov
fcom
jne
xor
pop
xchg
sti
xchg
or
mov
push
pop
xchg
or
movsb
pop
and
popf
xor
mov
jle
andb
adc
stc
enter
gs
out
xor
sbb
cmp
cmp
push
sbb
push
mov
nop
inc
add
js
repnz
scas
cmpsl
dec
mov
rorb
hlt
xchg
adc
das
ds
jle
lock
rcll
aaa
lea
pop
clc
xor
dec
ror
cmc
inc
push
jge
ljmp
xchg
js
jl
pushf
mov
rolb
cmpsl
xchg
scas
push
aaa
sti
mov
and
xchg
or
sbb
cmpsb
call
mov
aad
dec
pop
inc
cli
cmp
stc
xchg
dec
pop
push
cmp
out
jg
xchg
dec
repnz
or
mov
xchg
xchg
lcall
jb
out
jp
scas
cmp
jmp
inc
testb
shlb
push
ficompl
bound
ret
ret
popf
ret
mov
sub
dec
lahf
shll
add
cmp
iret
xor
push
push
jnp
sub
mov
in
jg
fsubrl
dec
in
fs
roll
aad
jo
push
sub
sub
inc
inc
xor
mov
sub
or
std
dec
push
pop
leave
sti
pop
idivb
std
xchg
pop
fs
dec
nop
xlat
mov
push
call
pop
add
testb
stc
stos
cmp
aas
pop
adc
cs
add
inc
pop
lea
ja
cld
mov
in
arpl
or
cmc
in
xchg
mov
push
push
lods
jbe
cli
xor
and
add
fidivl
ret
popa
ds
das
cmp
push
mov
sahf
jmp
jbe
jne
mov
repnz
sbb
loopne
fs
jbe
stos
cmp
mov
add
es
jg
movsl
adc
fs
jno
xchg
dec
icebp
pop
adc
push
ljmp
in
inc
pusha
mov
push
xchg
sub
jb
cltd
dec
xchg
cltd
loopne
outsb
enter
jle
push
jmp
cmp
mov
jmp
and
or
fnstsw
mov
xchg
and
xor
push
shrl
mov
jne
movsb
and
xchg
loop
aad
jg
fisubrl
daa
push
mov
jmp
ret
je
call
mov
aam
loop
or
in
repz
push
ss
xchg
int3
scas
push
mov
mov
sub
fcompl
or
sub
jnp
adc
add
insl
negl
int
mov
add
xchg
pop
add
sub
imul
movsb
inc
or
scas
mov
ja
movsl
jp
sbb
fsubp
dec
jl
add
xor
push
fcoms
add
outsb
mov
sbb
cli
ja
pusha
movsl
mov
dec
push
fisttpll
arpl
pop
lea
daa
dec
je
cmp
pop
hlt
sahf
push
cmpsl
xchg
in
lret
xor
dec
insb
cmc
pop
mov
stc
xor
stos
fists
jecxz
out
cmpsb
push
fcmove
cld
mov
push
ljmp
nop
cmp
sbb
inc
and
scas
add
cld
fsubl
fcompl
in
loop
fstps
sub
and
aad
loope
fldcw
or
mov
add
xchg
xchg
pushf
adc
mov
cmp
popa
push
jecxz
push
pop
and
divb
stos
outsl
fidivrs
insl
add
sub
pop
xchg
push
fcomps
call
test
add
dec
pop
cmp
mov
pop
repnz
xchg
xor
pop
push
jb
loopne
lods
sahf
addr16
arpl
mov
push
icebp
adc
pushf
lods
ss
repnz
jg
mov
lods
inc
aam
in
rorl
addr16
inc
mov
outsl
push
call
mov
dec
push
jmp
scas
xor
mov
jns
into
repz
fcoml
outsb
jge
imul
xor
sub
mov
jle
les
cmc
push
xchg
cmpsb
adc
add
les
cli
mov
stos
andb
xor
xchg
js
sbb
xchg
nop
pop
xlat
lock
dec
lret
call
sub
add
fildl
into
sub
lock
jle
pop
imul
int
fnsave
rclb
es
aad
sbb
fistl
ss
jmp
and
push
testl
mov
dec
push
xchg
xchg
outsl
iret
aad
push
sbb
aad
fsubs
nop
das
sahf
bnd
add
xor
insb
or
pop
daa
pop
pusha
lahf
mov
xor
fcomps
stc
mov
movhlps
mov
sub
cmp
sbb
clc
fwait
dec
jns
jae
jo
outsl
scas
sarl
sub
cli
sbb
inc
filds
jb
outsl
popf
push
jge
pop
sar
mov
test
xor
inc
xlat
sub
sbb
insl
data16
repnz
jmp
test
mov
popa
pop
int
jo
push
repnz
test
cmp
stc
dec
test
add
in
add
loopne
lret
out
push
idivb
leavew
aam
andb
jmp
jnp
xchg
jl
ds
jae
mov
xchg
jg
cmp
test
mov
jo
mov
and
and
adc
ja
add
cmc
je
leave
cltd
lcall
mov
sbb
dec
lahf
mov
xor
popa
and
je
mov
lcall
icebp
fldcw
inc
fs
sub
or
dec
shlb
pop
loopne
adc
sti
xchg
in
int3
js
data16
inc
pop
pop
mov
sub
fwait
sbb
push
mov
gs
imul
arpl
push
and
into
aad
icebp
das
popa
pop
inc
cwtl
or
dec
or
sti
xchg
jb
sub
adc
dec
jb
lahf
lret
cltd
mov
sub
push
out
mov
jge
cmp
mov
popf
mov
loope
insl
dec
xorl
push
push
sub
testb
sub
push
je
fidivrl
jmp
bound
or
jle
push
cmp
fidivs
and
adc
adc
xchg
jle
rcrl
cs
jmp
stos
std
fwait
loope
sbb
inc
mov
iret
orb
inc
pop
inc
scas
xchg
scas
dec
xor
jne
adc
inc
jge
and
cmp
into
mov
test
push
sub
adcb
bound
popf
and
jns
cli
outsb
dec
jmp
jb
or
pop
mov
nop
je
in
lods
xchg
inc
rcr
jecxz
adc
cmp
or
scas
mov
stos
rcrl
pushf
mov
push
mov
mov
push
pushf
cmp
push
inc
and
mov
adc
in
lods
cltd
dec
jbe
cli
pop
out
out
pop
xchg
jne
push
xchg
lock
mov
lock
test
movsb
mov
sbb
in
insl
cmp
pop
ljmp
insl
imull
cld
ja
pusha
jne
push
jae
loopne
xlat
icebp
xlat
xchg
mov
lds
iret
leave
popf
pop
jmp
leave
and
and
js
jns
mov
jle
push
xchg
sub
mov
aad
subb
fbld
test
lods
cmp
mov
dec
scas
jge
lock
inc
mov
add
mov
dec
in
test
mov
popa
add
jmp
xor
jecxz
clc
cld
or
sbb
push
dec
adc
pop
shll
dec
arpl
pop
dec
ret
shr
inc
dec
inc
leave
dec
mov
cmp
imul
cmp
js
or
addr16
lcall
adc
jmp
addb
mov
fdivr
sub
out
lock
sub
imul
idivb
jo
nop
lock
or
add
out
cmp
imul
jno
sbb
orb
jno
aam
sub
dec
cltd
dec
or
adc
loop
mov
dec
icebp
xchg
hlt
dec
xchg
dec
cs
sbb
dec
gs
test
inc
sbb
hlt
or
orl
daa
jl
mov
cmpsb
in
mov
outsl
mov
mov
or
and
ljmp
repz
call
and
lock
lock
les
sbb
add
dec
popa
je
icebp
rcrl
cs
jle
sbb
or
xchg
insb
jl
pushf
and
pop
mov
jb
cmp
stos
sub
testl
das
sti
out
jg
jb
cmp
add
mov
loope
and
mov
clc
out
xor
mov
jge
xchg
loop
mov
pop
sbb
out
adc
xchg
dec
adc
fsubrs
sub
or
stc
xor
fcoms
jno
aaa
andb
mov
inc
mov
or
dec
testb
jns
insl
fimuls
mov
add
shrb
lock
dec
sahf
dec
mov
aam
pop
inc
mov
in
inc
out
int3
sbb
push
dec
push
in
imul
and
and
sub
cmpsl
cld
pop
out
call
rorl
lea
mov
dec
cli
sub
push
hlt
adcb
add
mov
sub
fs
xor
xlat
xor
jecxz
jmp
lods
xchg
and
mov
outsb
out
fidivl
inc
cmp
shlb
sub
or
jne
push
test
adc
lret
movsl
jnp
js
inc
std
les
jne
mov
cmp
sbb
mov
insl
loope
pop
cmpsb
filds
mov
mov
mov
or
cmp
cmp
ret
ljmp
int
ret
fld
mov
pop
pop
sbbl
xor
cmp
push
and
dec
call
sub
sti
mov
movb
inc
or
push
fdivl
loop
ljmp
cld
sar
mov
scas
fisubrs
mov
fisttpll
dec
add
pop
xchg
dec
add
test
cmp
push
les
mov
adc
mov
dec
inc
fld
adcb
call
jg
daa
and
in
xchg
adc
cmpsl
or
std
mov
add
inc
push
pandn
push
inc
mov
int
mov
pop
aaa
mov
or
pop
jns
rclb
aaa
mov
pusha
and
dec
mov
pop
lcall
ljmp
xor
sti
sti
call
incb
inc
sbb
repz
cmpsb
pop
sbb
shlb
xchg
push
add
mov
xor
scas
ret
fisttps
iret
dec
cmpsl
cmp
lock
fadds
int
sbb
test
jbe
jp
ljmp
lea
sbb
in
movsl
xchg
sti
or
imul
js
test
fdivrs
adc
cli
inc
idivw
add
insb
jmp
inc
or
loope
lds
mov
ficomps
scas
pop
xor
xor
xchg
clc
mov
inc
int
mov
mov
imul
movsb
mov
xor
mov
ljmp
rcll
insl
xchg
mov
xlat
fsubrs
lock
ret
sbb
nop
xor
scas
int
xlat
icebp
scas
lahf
sub
fs
rcrb
arpl
scas
dec
ret
rol
pop
int
ret
clc
xchg
mov
loope
repz
dec
jae
dec
xchg
bnd
dec
sarb
sbb
data16
clc
adc
fldt
cmp
sbb
sarb
adc
mov
cmpsb
not
lods
jl
inc
vphadddq
int
push
push
push
or
int
jl
adc
imul
movsl
lcall
repz
or
outsb
push
cmp
jbe
add
pusha
in
data16
xchg
lret
in
lods
imul
mov
in
dec
test
cmc
addr16
lock
bnd
dec
mov
adc
stos
inc
cwtl
mov
sbb
cmpsb
dec
dec
mov
xor
push
out
mov
orl
loopne
popa
mov
push
es
and
lea
pushf
pop
push
aam
push
ja
pusha
pusha
and
pusha
mov
jo
cwtl
movl
pop
mov
imul
dec
sbb
mov
lds
repnz
jmp
pop
or
sub
sub
addr16
xchg
inc
push
scas
pop
jle
and
cwtl
mov
out
ret
mov
push
add
les
pop
int3
or
scas
imul
sub
cmpsl
das
jae
bound
clc
cmp
ljmp
xor
inc
add
pusha
lods
int3
cltd
out
cwtl
pop
hlt
out
outsl
xor
sahf
cmp
push
fsubrs
xlat
and
aad
dec
add
hlt
stc
sub
shrl
fwait
and
mov
cmp
and
sbb
xor
xchg
js
fs
push
and
rorl
imul
inc
out
xchg
adc
dec
push
imul
xchg
mov
jb
push
cmpsb
shrb
adc
ds
cmc
shrl
sahf
imul
or
and
fimuls
adcb
in
shll
push
es
mov
test
and
inc
je
pop
loop
adc
jmp
inc
fwait
sub
repnz
pop
ret
cwtl
mov
mov
shl
mov
mov
or
jnp
cld
loope
push
stos
push
cmc
cmp
xchg
iret
cs
repnz
push
push
mov
adc
sar
inc
jl
mov
push
jp
daa
test
das
push
mov
adc
xchg
test
sub
cld
dec
out
mov
mov
fcmovnb
ss
xor
inc
jnp
xor
and
inc
jbe
lret
loop
clc
mov
pop
mov
jge
cli
jp
push
jb
stos
ficomps
icebp
aaa
cmp
in
mov
jecxz
cmpb
leave
jno
hlt
and
ljmp
data16
lret
orl
xchg
xchg
xor
icebp
xchg
scas
mov
movsb
dec
stc
js
aam
sub
xchg
nop
in
jbe
sub
cwtl
iret
mov
ret
shrb
lea
adc
repz
sub
and
mov
es
insl
sub
addr16
xchg
repnz
mov
dec
inc
rol
hlt
cmpl
das
cmp
fisttpll
dec
dec
mov
std
mov
ds
out
and
xchg
dec
rcrl
lock
outsb
popf
loopne
mov
xchg
cmp
loop
into
xchg
mov
mov
cmp
aad
xchg
movsl
int3
movsb
into
loope
push
cld
dec
scas
jne
mov
dec
filds
adc
pop
sbb
cmp
mov
loope
test
jnp
cs
dec
mov
sti
xor
cmpl
xchg
jae
jnp
lea
aas
fimuls
push
dec
repnz
int
push
jno
mov
cmp
call
cmp
xchg
cmp
mov
sbb
ret
scas
lock
roll
loopne
lds
in
adc
xchg
sbb
mov
mov
xor
int3
fimull
mov
daa
adc
mov
push
jp
pop
jp
lods
push
test
ret
aas
sbb
mov
js
mov
mov
add
push
push
adc
fnsave
lods
mov
xchg
loopne
pop
out
popa
es
daa
cs
push
fs
fldenv
clc
adc
shl
push
push
xchg
mov
or
iret
mov
push
mov
inc
fimuls
ds
mov
cmpl
lahf
iret
pop
int3
mov
dec
sarb
stc
push
jle
nop
aam
stc
or
mov
movsl
out
in
negb
add
mov
and
mov
xchg
and
ljmp
inc
mov
and
xchg
stos
insb
ret
push
gs
imul
mov
leave
aam
cmp
mov
cmpsb
std
gs
in
push
andb
lods
test
fstl
imul
adcl
nop
jg
push
xor
add
sub
mov
and
movl
xlat
ljmp
pop
imul
inc
adc
and
andl
je
dec
out
dec
pop
shl
cld
fstpt
sub
cmp
movsl
stc
mov
dec
jmp
jmp
pushl
jo
rcll
sub
add
jae
mov
test
push
push
cmp
imul
xchg
movsb
or
shl
mov
rcl
ficomps
cmpsb
adc
push
arpl
sub
out
xor
rcll
pop
adc
mov
std
loopne
sarl
adc
mov
push
cmp
mov
jmp
mov
fistl
test
add
mov
pop
sbb
and
xchg
mov
psubusb
xchg
sub
fnstsw
ret
mov
push
out
leave
call
xchg
mov
and
lock
push
dec
bound
sbb
sub
bound
repz
lock
daa
test
cwtl
adc
adc
mul
call
inc
fwait
rclb
xor
hlt
xor
mov
fcoml
jnp
mov
adc
mov
fs
imul
cmc
orl
dec
mov
add
arpl
mov
dec
add
xchg
shl
add
test
xchg
mov
cmpsl
pop
xor
das
add
dec
sarb
shrl
jle
xor
repz
push
lea
xchg
sbb
je
sbb
je
out
xchg
daa
test
stos
flds
dec
adcl
xchg
inc
testb
arpl
imul
stos
scas
popf
add
sub
jg
sahf
pop
shl
ljmp
cli
cld
lahf
sbb
bound
iret
cmp
mov
jg
cmp
add
sahf
or
adc
loope
out
xor
and
mov
addr16
or
fwait
or
mov
mov
mov
clc
cmc
inc
in
lea
adc
cmpl
xor
stc
clc
sbb
psrlw
jecxz
icebp
nop
dec
add
call
jo
or
jg
push
jmp
je
push
ss
dec
sti
jl
shr
mov
fisttpll
xchg
jg
fldenv
lods
pop
mov
daa
xlat
xchg
dec
aaa
jnp
sbb
jecxz
roll
pushl
into
sbb
imulb
fcmove
incl
cs
and
xlat
dec
pop
push
pop
cmp
iret
mov
fsts
push
fidivrl
fmull
cmp
add
fdivl
sbb
jle
sbb
mov
sbb
test
pop
xchg
lds
loop
hlt
lods
test
mov
aaa
roll
imul
icebp
pop
sub
stc
inc
push
cli
add
mov
pop
repz
das
push
lods
pop
popa
cltd
mov
mov
shl
into
sub
ds
movsb
sub
lds
pop
std
add
out
sti
sub
jge,pt
pop
aam
enter
xlat
jnp
mov
ja
xchg
fldl2t
mov
lods
sub
xchg
mov
mov
mov
ss
ja
xchg
hlt
dec
mov
add
out
lock
int
dec
mov
enter
ljmp
jg
cmp
ret
adc
cmpl
cmpsl
mov
xor
inc
dec
jnp
pop
mov
dec
xchg
or
cmp
pushf
inc
fwait
fwait
popa
imul
arpl
and
push
addr16
cmc
shll
loop
repz
pop
xchg
psrad
mov
aas
bound
mov
jmp
xchg
jle
xorb
jo
inc
pop
pop
cmp
mov
sbb
pop
pop
sbb
xchg
and
xchg
adc
sub
iret
pmullw
icebp
lahf
mov
inc
in
mov
pop
cmp
aam
sub
and
addb
popa
lahf
sar
leave
push
cmc
push
scas
repnz
lret
aas
out
push
jmp
push
xor
and
push
fwait
scas
add
cmova
fdivrl
inc
sbb
jge
and
pusha
inc
pop
inc
sub
repnz
cmp
daa
das
cmp
push
mov
mov
xor
arpl
pop
test
jo
in
loop
adc
dec
and
cld
enter
hlt
fsubs
fmulp
test
push
xor
cmc
aas
je
cmp
inc
aad
pop
pop
sbb
push
mov
add
xchg
inc
std
pop
mov
insl
test
int
mov
mov
cmpsb
push
xchg
jle
pop
imul
popf
cmp
pop
test
push
jl
sub
call
jp
sbb
push
sub
push
mov
sti
cmp
add
cmp
out
cltd
xor
fistpll
repz
adc
jbe
lods
mov
xchg
jmp
push
imul
scas
outsl
add
int
pop
jle
push
mov
push
test
add
ljmp
and
or
mov
or
mov
cmc
lock
pop
pusha
addr16
sub
scas
sbb
nop
popa
jno
lcall
adc
lcall
mov
mov
cltd
pushf
cmpsl
inc
bound
mov
inc
repnz
or
in
sbb
xchg
xchg
iret
out
repz
sub
pop
xchg
out
dec
cld
xor
and
sub
fmulp
mov
mov
lcall
sbb
adc
andb
lcall
pop
and
xchg
or
push
bound
add
jp
jbe
mov
or
add
ficoms
outsl
mov
add
das
mov
sub
idivl
ds
sub
lods
and
leave
pop
cmp
scas
jno
xchg
mov
scas
inc
and
add
mov
enter
fcmove
outsb
sub
imul
sahf
pop
and
cmp
sub
test
loope
lahf
cmpl
adc
arpl
das
jle,pn
push
cwtl
dec
mov
mov
in
call
popf
xchg
xchg
jae
sub
sbb
loope
sbb
add
and
xchg
jle
aas
adc
cmc
and
mov
add
or
out
push
mov
mov
out
xor
xor
pop
dec
cmpsl
ljmp
mov
cld
mov
paddusb
adc
sub
xchg
out
neg
loopne
subl
sti
mov
sti
or
adc
jne
repz
jp
jg
andl
sbb
daa
dec
jae
cmp
inc
das
je
push
popa
fnstsw
push
lock
xchg
xor
push
filds
cmp
or
outsl
push
sub
popf
sub
lds
jae
insl
dec
sub
lds
loop
mov
push
add
insb
adc
stc
aas
xchg
ss
pop
or
jmp
rep
into
pushf
pop
stos
inc
movsb
xor
mov
sub
and
push
or
je
lea
dec
in
add
leave
shl
gs
mov
adc
scas
adcl
int3
inc
add
pop
and
mov
es
sbb
fs
and
stos
or
popa
sarl
pop
xor
dec
inc
ret
dec
jbe
push
and
lret
outsb
push
cmpsl
mov
cli
scas
add
adc
rol
mov
divl
inc
cmp
pop
mov
addl
lds
insl
fmuls
inc
ds
gs
data16
cmp
arpl
insl
jecxz
rcl
scas
dec
adc
cmp
cmp
xchg
in
in
out
jno
adc
push
xchg
and
sti
fiadds
inc
outsl
pop
cmp
xor
scas
shl
mov
jb
xor
in
into
in
adc
subl
pop
enter
in
mov
xor
sbb
imul
jmp
jbe
pop
pushf
cmp
sbb
fbld
in
cmpsl
dec
stos
sbb
or
test
rcll
dec
mov
cmp
pop
jle
adc
leave
les
mov
gs
hlt
insl
rol
add
lcall
out
mov
mov
push
push
or
andb
mov
xchg
pshufw
and
inc
or
ds
outsb
push
shr
insb
sub
jmp
adc
mov
outsb
test
jg
fistps
xchg
jle
int3
js
dec
js
push
popf
adc
pusha
push
rcll
push
pop
push
ss
ret
lea
adc
xchg
push
sub
lods
xchg
xorl
push
sub
add
and
aaa
movsb
arpl
inc
cmp
push
xlat
movsl
xchg
mov
lods
cmp
sub
and
pop
ds
insb
sar
fsts
push
sub
rolb
push
test
ja
and
jge
jle
and
clc
xchg
sub
shrl
xor
fwait
int3
ja
sti
inc
popf
jp
push
lea
je
mov
xor
rclb
stos
pop
inc
dec
pop
push
stos
lahf
gs
mov
es
xor
nop
push
or
cli
ds
mov
movsl
mull
scas
ret
nop
pop
ds
ret
jl
mov
add
xchg
sbbl
sti
imulb
inc
sbb
xchg
outsb
jbe
repz
lcall
lods
subb
mov
ja
lds
inc
mull
pop
jecxz
add
cli
cltd
fidivrl
daa
push
pop
cmpsb
inc
jnp
mov
xchg
push
xor
sub
aaa
aaa
jae
push
push
insl
scas
xor
pop
mov
insb
cwtl
mov
adc
stc
fildl
adc
sub
aam
imul
cmpsl
mov
mov
cmp
in
sub
es
enter
push
xchg
sub
sbb
pusha
lcall
dec
cltd
aas
xchg
jecxz
aaa
hlt
cmp
enter
repz
ret
inc
dec
pusha
pop
push
sarl
pusha
lret
inc
jle
push
dec
and
adc
mov
xchg
add
mov
mov
dec
dec
jp
push
sub
shlb
push
aaa
hlt
out
push
jle
push
jmp
jo
ja
nop
pop
ss
push
bound
cltd
mov
pop
cmp
xor
scas
mov
cmp
push
lret
jecxz
fnstsw
inc
and
dec
adc
xchg
fldt
insl
gs
sbb
cmp
fiadds
push
jnp
mov
jl
lcall
mov
and
sbb
adc
cmc
mov
hlt
mov
push
nop
insl
push
ds
aaa
es
dec
enter
push
lea
lock
xchg
fisttpl
and
adc
imul
hlt
stc
ret
jo
inc
lock
and
mov
or
cld
add
icebp
ret
jp
xchg
shl
mov
in
xchg
rcll
lods
inc
cld
xlat
sub
push
mov
sbb
mov
outsl
xchg
aam
popf
push
daa
cmc
imul
xor
mov
jae
call
ljmp
mov
ljmp
inc
pushf
mov
bound
in
jge
lods
push
arpl
adc
loopne
cmp
mov
dec
cli
ljmp
lock
in
mov
lock
scas
ret
inc
popf
jle
outsl
push
fisttpll
lret
adc
sub
lods
or
lock
and
xor
rcrl
push
or
and
and
pop
lahf
and
out
pushf
mov
hlt
out
out
add
mov
and
cs
sub
dec
xchg
cmp
stc
clc
ljmp
jp
sub
and
or
push
push
mov
aad
cmp
inc
and
lods
xchg
adc
inc
mov
nop
inc
pop
outsl
ljmp
mov
in
dec
dec
fsts
jmp
js
push
aaa
and
fnstenv
shr
in
std
xchg
pop
fcomip
cmc
lcall
mov
mov
out
or
in
lea
adc
out
fistpll
xchg
cld
fsub
mov
arpl
sbb
push
pop
js
push
ret
jnp
aaa
jle
fwait
fildl
inc
test
mov
mov
jb
test
mov
stos
repnz
and
test
addl
imul
dec
or
test
pop
gs
xor
mov
outsl
clc
out
jns
sahf
cmp
pop
xor
in
jo
xor
mov
scas
add
jbe
inc
cltd
cmp
int
lret
adc
xor
ss
adc
test
rolb
sahf
inc
test
mov
not
cmpsl
or
pop
fwait
mov
loope
ret
sarb
inc
or
bound
mov
orl
mov
lock
fidivs
dec
arpl
cmp
ficomps
cmp
popa
xchg
mov
add
jnp
and
mov
xchg
fnstenv
test
adc
imulb
xor
ss
and
popl
data16
jmp
mov
es
and
jmp
mov
mov
bound
les
jns
cmc
les
push
pop
rolb
loope
mov
cs
cmp
xchg
cmp
inc
stos
rol
mov
pop
adc
ret
xor
jp
aad
jl
dec
in
and
cld
les
nop
sbb
and
or
or
fisubl
add
and
sub
jne
aaa
sub
cli
rcrl
rcrb
xor
pop
sub
xchg
dec
lods
lret
sbb
xor
repz
loop
cmpsl
mov
pop
dec
adc
pop
loop
shlb
cs
pop
push
sub
lahf
lock
jae
stc
sbb
inc
bound
xor
cmp
xchg
into
std
imul
imul
cltd
dec
and
mov
shlb
sarl
inc
fsubl
jp
rcrl
and
fisubs
or
pop
push
jmp
xchg
xchg
sbb
mov
push
int
mov
jns
push
movsl
mov
add
inc
jmp
cmp
lahf
adc
or
mov
loopne
jne
repnz
bound
push
pop
icebp
sub
and
fstps
pop
jge,pt
jnp
lods
lea
jcxz
mov
and
mov
out
lods
pushf
imul
lods
add
test
mov
jnp
mov
movsb
fsts
push
sub
es
incb
rorb
outsl
lods
ret
push
stos
cmpl
mov
push
mov
mov
mov
xchg
ret
aad
mov
lods
inc
adc
xchg
out
push
inc
fnstenv
mov
and
popl
lods
inc
mov
out
mov
mov
cld
insb
rorb
add
push
dec
popa
mov
push
loope
sbb
sbb
mov
xchg
lea
push
dec
fwait
stos
pop
sbb
popa
rorb
aaa
push
bound
das
xor
push
sub
lcall
gs
es
js
dec
adc
pop
cltd
pop
inc
sub
pop
jmp
sub
jmp
inc
or
sub
repnz
sub
mov
mov
addr16
sbb
mov
inc
shl
psubw
cmp
jecxz
jae
mov
push
call
das
and
shrl
outsl
and
data16
push
es
pop
dec
adc
rcrb
mov
loopne
cwtl
dec
hlt
enter
sar
cs
loope
mov
push
mulb
and
sub
fsts
mov
arpl
loopne
je
dec
mov
popf
pop
jecxz
add
fcoml
cmp
mov
sbb
and
pop
dec
aaa
inc
add
adc
mov
ret
loope
aad
dec
cmp
cmp
mov
xchg
add
fs
inc
jno
out
lds
mov
out
cwtl
xor
mov
jo
or
arpl
fs
sti
enter
push
cwtl
jmp
rolb
repnz
popa
pop
cmp
add
jne
fwait
scas
jg
lea
movsl
loop
sub
dec
aas
fistl
shlb
dec
cltd
fstl
adc
mov
mov
outsl
mov
fmul
testb
add
mov
cmp
hlt
mov
push
mov
sbb
adc
les
mov
ds
pop
cli
adc
or
lahf
xchg
push
inc
test
dec
movsb
mov
mov
ljmp
add
ret
mov
test
cli
insl
mov
adc
lock
mov
sub
dec
push
or
lret
pusha
aas
and
xchg
add
cmp
and
lods
dec
inc
lret
pop
adc
cmpb
flds
stos
add
push
fdiv
lea
mov
push
mov
mov
stos
adc
shlb
mov
jge
push
addr16
in
add
dec
sti
mov
or
cld
fbstp
mov
dec
mov
mov
fwait
xchg
inc
sub
xor
lcall
push
add
stc
cmc
fucomip
xor
cmpsl
sub
sbb
jb
jg
inc
call
push
xchg
push
out
xor
lret
xor
mov
mov
xor
xchg
aam
inc
ficoms
adc
xchg
idiv
test
clc
sub
fcmove
shrl
movsb
test
sarb
cmpsb
pop
mov
or
test
clc
xor
or
adc
xchg
fistpl
push
add
add
aas
loop
leave
andl
mov
jecxz
sbb
cmp
sbb
fstp
sbb
pushf
arpl
nop
clc
sbb
xchg
arpl
jg
dec
out
insl
jnp
pop
loopne
add
mov
xor
insb
inc
inc
lds
mov
xchg
fstpl
sub
jb
in
jg
pop
mov
aam
mov
jle
cmp
mov
enter
xchg
or
xor
sub
mov
mov
jle
je
enter
mov
int
iret
jecxz
ljmp
cwtl
push
pushf
in
sti
mov
push
rcll
adc
loop
xchg
mov
dec
add
notl
loopne
into
pop
fcmovnb
lds
les
cli
les
jle
xchg
mov
push
sbb
push
adc
push
push
js
pop
movsl
sarb
adc
std
sbb
insl
mov
cwtl
adc
in
dec
lahf
push
xor
ds
mov
mov
push
xchg
aam
mov
movl
mov
push
adc
cmpsl
jbe
mov
inc
inc
loope
les
test
sub
in
jno
or
je
mov
int
fimuls
push
movsb
cld
test
jmp
push
ja
scas
loopne
fistps
sub
mov
xor
push
pusha
out
bound
cmpl
fiadds
or
and
push
add
jg
sbb
mov
test
ja
jo
jecxz
jo
sarl
adcl
dec
in
xor
or
adcl
fstpt
xchg
repnz
ja
in
adc
sub
fstpt
xchg
ljmp
clc
xchg
pop
das
jns
adc
and
mov
pop
pop
add
pop
lock
lock
cmp
dec
call
cmpsl
das
cltd
inc
jge
dec
jge
ror
movsb
push
loopne
inc
loope
or
ja
jbe
iret
xchg
outsl
push
mull
jecxz
pop
mov
nop
mov
xchg
and
push
pop
jg
push
cltd
outsb
pop
fs
fsubrs
ret
imull
xlat
jle
data16
cmc
inc
mov
ds
and
mov
cmp
movsl
loopne
filds
jge
divl
icebp
std
xchg
idivl
outsl
cmc
pop
and
and
out
mov
pop
jp
add
jg
jbe
iret
inc
cmp
test
gs
adc
mov
adc
add
and
daa
in
icebp
and
push
rcll
adc
imul
sub
inc
mov
pop
mov
mov
lret
jl
mov
adc
inc
fisubrs
pop
iret
inc
mov
xchg
andb
xchg
cltd
arpl
loope
xor
adc
xor
mov
adc
cmp
gs
adc
popa
jl
xchg
push
jbe
fsubrl
insb
xchg
pop
mov
rolb
imul
clc
sbbb
or
repnz
xor
or
cmpsb
add
lcall
sbb
gs
cmpsl
jmp
pop
lret
aaa
add
out
ret
sub
jb
pop
fcmovnu
mov
xchg
sbb
outsb
jl
or
adc
jmp
cs
xor
cli
sub
adc
sbbl
scas
popf
jl
sub
jge
cmovge
int
js
ret
jb
cmp
push
mov
dec
and
or
pop
mov
cmp
cmpsl
daa
ret
dec
pop
mov
or
adc
fisttps
std
cwtl
push
mov
add
scas
add
icebp
adc
dec
out
loopne
xor
std
test
or
push
mov
inc
sub
enter
xchg
in
out
xor
xchg
pop
dec
fsubrl
rcll
jns
mov
in
add
and
or
ds
sahf
add
into
mov
add
push
dec
and
bound
inc
xchg
mov
adc
jge
stc
loope
pop
cmp
roll
xor
mov
mov
jae
cmp
jg
mov
jmp
pop
test
bound
sbb
pop
sub
ret
xor
loope
mov
lock
in
les
xor
sub
inc
and
cmp
idivl
xchg
lcall
xor
test
jl
lahf
pop
popa
jb
inc
push
push
sahf
outsb
es
pop
mov
dec
xchg
adc
xor
push
leave
fdivs
pop
test
test
mov
cltd
push
or
add
fstl
dec
xchg
adc
and
movsl
out
xlat
fwait
icebp
cmc
fimuls
mov
jnp
fwait
test
sbb
pop
pop
cwtl
outsb
pmaxsw
fxch
jne
std
arpl
in
rorb
jo
nop
notb
xchg
insl
out
aaa
sub
or
aas
mov
adc
mov
push
insl
mov
push
push
jg
rcr
mov
push
insb
fmuls
mov
inc
and
or
cmpsb
xor
stos
and
xor
cs
in
subl
xchg
add
inc
sub
push
jmp
sbb
out
dec
push
subb
xchg
push
dec
cmp
mov
pop
cmp
das
cmpsl
out
jb
adc
or
hlt
cmp
push
int
int
cmpsl
cmp
loope
mov
sub
ja
push
mov
push
sub
inc
push
popf
lret
mov
inc
cmpsl
aam
adc
rolb
out
daa
cmp
jb
jb
add
ret
stos
cmp
hlt
test
js
jg
or
icebp
lea
jecxz
add
xchg
popa
dec
fwait
jecxz
arpl
orl
cltd
daa
ret
idivb
jne
btc
imull
movsb
dec
js
mov
inc
mov
and
arpl
cltd
cwtl
dec
into
jmp
aam
imul
sub
lods
jnp
sbb
and
call
mov
xchg
or
dec
mov
xor
or
pop
jle
cs
sti
sahf
and
xor
or
lea
cmc
cli
popf
pushf
sar
sbb
sub
repz
mov
js
jnp
xor
mov
add
mov
adc
or
or
iret
stos
push
movsl
dec
mov
sbbl
mov
push
or
jecxz
lcall
addr16
fadds
push
mov
jbe
inc
pop
add
or
sti
cmp
insb
ss
inc
fldl
insl
add
insb
ljmp
pop
data16
jle
dec
mov
mov
loope
popf
sbb
cmp
add
mov
push
mov
sti
mov
xor
dec
insl
xchg
pop
xor
jne
xor
cmp
xchg
decb
rdpmc
jo
adcl
mov
adc
out
mov
test
test
pop
inc
aas
test
adc
cmp
xchg
loope
out
and
xchg
xor
mov
sbb
pop
stos
insl
movsl
and
fsubrl
or
pop
push
ss
mov
fmuls
stc
hlt
and
add
and
add
lock
xchg
mov
jb
mov
sub
aas
add
loop
outsl
ret
jge
int3
pop
std
cmp
outsb
add
stos
jle
mov
sbb
int3
jmp
sarb
sub
jmp
addr16
bnd
cmp
std
cmpsl
inc
arpl
mov
pop
clts
clc
and
mov
cmp
jne
adc
pop
jl
test
cmp
mov
lcall
cmp
sub
adc
mov
xor
lahf
cltd
lock
dec
test
sahf
fimuls
pop
mov
pusha
cmp
xchg
rcll
and
aad
push
lock
mov
inc
insl
pop
sub
cs
mov
cwtl
jb
in
and
mov
pop
and
rcrl
jo
in
or
mov
dec
aam
std
shll
push
rolb
mov
je
les
stc
mov
jmp
stos
pop
aam
rorb
jl
mov
or
cmp
or
pop
bound
jb
adc
inc
into
repnz
jno
pop
ret
inc
inc
ss
outsl
lock
fimuls
out
xchg
sahf
outsb
push
cmpsl
addl
cwtl
push
or
sbb
rolb
movsb
pop
decb
imul
push
ja
xchg
inc
fs
jae
inc
rclb
sub
jg
movb
add
push
mov
aaa
je
adc
mov
inc
ret
sub
dec
adc
xchg
test
insl
mov
rcrb
into
mov
pop
jne
icebp
jl
addr16
and
xor
movsl
ss
pop
ljmp
sub
jb
orl
cmp
sbb
dec
test
inc
adc
cmp
rcl
mov
cmp
sub
pop
cs
adc
out
repnz
in
or
popf
cmp
ja
push
xor
and
hlt
mov
cmp
adc
sahf
add
jg
sbb
les
js
and
inc
ret
sbb
push
nop
adc
scas
es
cs
mov
daa
das
adc
cmpsl
sti
push
inc
aam
popf
adc
shrl
cs
jnp
push
fidivrl
lods
add
xchg
dec
addl
out
adc
mov
lcall
mov
jo
dec
xchg
mov
aas
lret
loopne
jp
adc
cmpl
mov
and
adc
mov
jmp
scas
xorb
mov
fldenv
scas
jb
call
or
jecxz
xlat
sbb
insl
dec
test
loope
leave
cmpsl
or
out
aam
add
sarl
dec
pop
into
push
mov
fisubl
into
das
mov
and
cmp
nop
push
mov
leave
xor
push
jbe
mov
adc
fildll
loopne
push
jge
or
or
xchg
ja
and
jle
inc
sbb
daa
mov
mov
inc
mov
call
push
pushf
mov
mov
lock
jne
fcoms
popa
sub
push
hlt
mov
and
inc
pop
int3
dec
xchg
lods
or
imul
add
dec
imul
aas
mov
aad
int3
pop
sub
aad
xchg
in
xchg
mov
cmp
lods
lahf
test
fiaddl
mov
and
shrb
push
xor
hlt
fyl2x
mov
aaa
outsb
add
sahf
pop
mov
mov
pop
inc
addl
mov
mov
int3
or
nop
out
stos
test
push
mov
cld
out
clc
shll
xchg
addr16
loopne
xchg
push
jb
inc
iret
xchg
lea
jmp
cmp
inc
mov
jmp
cmc
push
shll
shll
push
js
into
repz
sub
lahf
cwtl
testl
fadd
ss
movsl
lods
or
test
leave
push
js
cltd
pop
jmp
pop
cs
cli
fsubl
pop
cli
pop
dec
mov
xchg
adc
sbb
hlt
mov
cwtl
data16
mov
sub
fisttpl
arpl
cmpsb
pop
push
in
lahf
push
and
and
mov
shrl
fsub
xlat
jmp
out
les
push
aam
out
jnp
sti
popa
xor
outsb
mov
ret
xor
jne
aam
and
negl
inc
movl
ret
xor
xor
sti
or
scas
insl
xor
shll
xchg
xor
aaa
in
push
and
sbb
das
ret
int
mov
out
xchg
hlt
sti
test
add
lret
jmp
sbb
scas
sub
inc
jp
es
push
pop
jae
sti
aad
push
aaa
inc
stos
jp
mov
insl
out
ret
je
test
js
repnz
cld
mov
ret
sub
idiv
cld
rcll
inc
jmp
dec
rolb
jecxz
pop
cmp
in
cmp
inc
mov
stos
es
or
fcmovnu
jecxz
push
sarb
jecxz
addl
or
jge
out
and
sbb
out
add
repnz
cmp
arpl
imul
push
out
inc
push
int3
xorl
lock
lds
gs
out
cwtl
mov
mov
nop
out
in
bound
pusha
or
gs
push
movsl
adc
cmp
addr16
mov
cmp
dec
adc
add
mov
jb
sbb
rorl
cld
adc
dec
fdivrs
add
pushf
clc
xchg
lods
jo
aad
hlt
shl
testb
dec
add
orps
xor
xor
fsubrs
int3
imul
data16
sub
stos
dec
std
or
cmp
clc
xchg
fwait
push
fwait
ss
mov
jle
pop
jp
cmc
test
les
sbb
aaa
or
mov
repz
inc
shll
and
es
sub
sub
pop
jne
je
pusha
mov
push
sub
push
jnp
pusha
xchg
or
rcr
jl
je
lods
mov
inc
les
cld
xor
mov
nop
lea
xlat
cmp
add
cltd
dec
cmp
push
push
xchg
addr16
mov
lahf
aad
push
xchg
or
xchg
and
push
imul
push
ja
jb
pop
jmp
push
sahf
push
js
cmp
push
jmp
insb
push
dec
and
adcl
into
sbb
rol
adc
rorl
jl
int
enter
js
jp
add
je
inc
or
test
lret
mov
cmp
popa
xchg
xlat
movsb
jo
jge
and
pop
xor
ret
cs
sub
xlat
test
xchg
mov
xchg
cmpb
into
push
in
add
out
fld
cmp
aaa
and
cwtl
int
push
lock
in
shll
stos
xchg
dec
movsb
lock
pushf
xchg
mov
add
pop
call
stc
sti
js
popf
les
sbb
mov
ret
inc
enter
leave
adc
dec
std
sub
mov
mov
bound
rclb
in
mov
cwtl
inc
in
push
int3
sub
stos
mov
xchg
adc
into
aaa
les
push
push
cmp
lock
out
sbb
cmp
mov
sbb
push
popf
popa
xchg
test
out
cmp
xchg
outsl
xchg
test
jp
adc
test
xchg
in
add
sarl
xor
cmp
gs
mov
inc
xor
add
pop
fdivl
sarb
rorb
in
hlt
push
clc
sti
repnz
jg
mul
dec
enter
push
xchg
fadd
test
xchg
mov
push
pop
xor
push
in
pop
in
loop
in
jge
into
inc
sbb
iret
sub
test
push
imul
sub
out
jns
jne
pop
fiaddl
push
aaa
or
push
push
mov
push
mov
add
shrb
test
push
push
enter
add
sbb
out
lods
scas
mov
adc
xor
dec
inc
insl
test
push
adcl
repz
scas
out
jle
xchg
movsb
lcall
addr16
test
outsl
sub
lret
fwait
mov
jo
aaa
rcrl
es
and
imul
add
lods
ret
jle
mov
orl
test
pop
sbb
dec
int3
fnsave
pop
loop
insb
or
in
inc
out
aad
pop
scas
cmp
test
push
pop
jle
aam
lea
mov
loope
insl
mov
ficoms
fmull
je
cmpsb
fisubl
movsl
add
jae
es
adc
rol
loope
pop
gs
aad
sbb
ret
mov
and
sbb
sub
hlt
test
mov
fmulp
sti
maxps
aad
add
sub
mov
roll
andb
push
mov
add
das
mov
xor
lea
mov
daa
dec
out
sbb
fdivs
sti
dec
ret
lret
mov
mov
int
mov
cmp
dec
test
icebp
xchg
cmp
mov
out
adc
pop
stos
add
int3
pushf
jmp
cmpsl
cmpsb
inc
test
das
xchg
xchg
mov
xor
pop
push
in
xchg
jmp
daa
pop
rol
ds
push
push
sbb
icebp
pop
jne
ds
mov
jae
mov
movsb
mov
mov
pop
add
movsl
call
movsb
in
enter
xchg
mov
cmp
pusha
es
loopne
pop
mov
xlat
and
notb
adc
mov
mov
arpl
mov
lods
aaa
mov
repnz
adc
xor
mov
fisttpl
daa
inc
addl
fbld
sbb
dec
and
mov
loopne
or
and
shrb
jle
xchg
subl
cmpsb
out
stos
aad
push
mov
std
roll
out
fs
data16
lods
sub
mov
xor
subl
and
xor
insb
lods
ret
add
sbb
pop
cmpsl
cmp
adc
movsl
dec
push
in
and
icebp
outsb
fmuls
pop
outsl
ret
adc
rorb
pusha
and
inc
movsl
push
sbb
jnp
rcl
cld
or
adc
mov
insb
int3
and
clc
push
dec
push
inc
stos
aaa
xor
dec
pop
imul
daa
rorl
call
stos
or
icebp
push
lock
std
les
test
cmp
jg
loope
mov
inc
das
sub
or
cs
lock
ficomps
inc
cmp
mov
inc
fstpl
mov
mov
xchg
sti
sub
daa
cld
jge
dec
sbb
pop
or
inc
sub
addr16
mov
mov
push
cmp
mov
sub
pop
vpminub
pop
dec
into
in
push
mov
jecxz
jae
leave
test
add
das
pop
pop
mov
jp
fnstcw
pop
aad
stc
dec
mov
add
sarl
mov
ss
jne
pusha
mov
cli
call
push
jl
sub
xchg
mov
mov
push
push
lcall
jmp
add
sahf
out
xchg
lods
mov
push
ror
std
sbb
cmp
sub
xor
into
out
cmp
push
ficoml
add
pop
or
and
fwait
ss
in
pushf
dec
mov
mov
jnp
insl
push
arpl
jle
movsl
rol
stos
clc
and
aas
dec
fdivrl
sti
pop
clc
adc
fdivrl
xlat
cs
jmp
sbb
dec
lret
dec
out
jae
divl
dec
mov
inc
ds
pushf
les
push
adc
push
mov
imul
jno
sti
repnz
sbb
mov
inc
rcrl
addl
and
insb
ss
les
inc
and
rclb
mov
push
sbb
jo
and
sbb
sbb
pop
stos
sbbb
daa
dec
push
call
pop
fistps
mov
ja
xchg
sub
push
aas
jbe
inc
outsb
inc
sbb
dec
fnsave
or
and
pop
sbb
filds
arpl
push
or
inc
push
and
jnp
icebp
pop
jp
jg
test
mov
sahf
and
xor
sub
pop
pop
mov
push
mov
cmc
stc
mov
mov
ss
push
mov
je
sbb
mov
fadd
call
mov
mov
fs
fstps
jbe
sub
enter
mov
call
lods
xchg
mov
clc
xchg
add
inc
mov
shrl
fisubs
fimuls
xchg
push
or
out
adc
or
and
inc
push
outsb
aaa
imul
sub
mov
add
ss
rcl
sahf
cmc
sbb
mov
aad
ss
cmpsb
and
or
jge
sbb
test
loope
xor
inc
jns
pop
cmp
inc
out
add
bound
mov
jg
mov
xor
mov
xchg
in
pushf
pop
sub
cmc
js
sbb
pop
sti
pushf
fsubrs
cmp
push
fs
xor
in
das
or
loopne
icebp
sub
stos
and
xlat
push
fwait
movsl
cmp
insl
cli
pop
cmpl
cmp
pop
fdivrs
rol
jo
cmpsb
std
das
dec
je
push
mov
mov
in
lods
dec
jmp
pop
cld
hlt
push
and
push
ss
cli
ljmp
add
dec
adc
cmp
push
outsl
xor
popl
push
cmc
push
jno
sahf
push
fisttpll
sbb
sbb
dec
cmp
cmpsl
xchg
jp
adc
out
push
rclb
jle
insl
inc
insl
push
decb
xlat
or
and
add
jp
pop
test
pop
push
push
fnstcw
pop
jno
jp
xchg
pop
int
sub
and
and
es
dec
adc
movsb
add
push
pop
inc
leave
mov
pop
jmp
ds
xlat
into
fists
jecxz
setp
xchg
xor
and
loope
push
popf
and
add
inc
notb
call
dec
adc
inc
and
mov
mov
into
loopne
dec
push
push
dec
and
in
sarl
imul
out
adc
fbstp
xchg
cmp
or
out
adc
cltd
cmp
js
add
or
jge
fstpt
sbb
cmpsl
cs
or
sub
sbb
dec
xchg
fcomps
dec
sub
adc
and
imul
dec
fwait
push
and
gs
mov
jns
or
aam
jo
fidivrs
test
into
inc
xchg
adc
es
sub
push
adc
jecxz
lret
enter
cs
dec
sbb
push
cs
mov
cmp
fldcw
push
dec
xor
mov
ss
icebp
pop
imul
inc
inc
dec
or
push
shl
fstps
mov
cli
xchg
xchg
mov
xor
adc
inc
pop
xchg
xlat
imul
dec
pop
xchg
cmc
inc
sarl
aam
xchg
xchg
loope
fists
stos
or
push
out
jb
orb
es
nop
divl
out
jno
repnz
lods
scas
and
rorl
add
jb
xor
mov
lret
das
mov
cli
add
ret
inc
inc
stos
push
insb
add
add
fimuls
insb
ficompl
jbe
pop
mov
test
mov
test
add
in
mov
arpl
pushf
mov
mov
ds
dec
cmp
ljmp
sub
push
jb
add
mov
repz
sub
scas
inc
lahf
jmp
or
or
push
mov
lods
adc
ds
sahf
mov
inc
push
outsl
fcomps
fistpl
adc
dec
popf
roll
loopne
push
cmc
arpl
mov
out
xchg
sub
jp
push
adc
sbbb
lcall
mov
mov
adc
add
mov
mov
sbb
js
jp
sub
fisubs
add
stos
inc
mov
jne
mov
adc
sbb
cmp
repz
inc
or
xchg
fwait
add
adc
cmpsl
dec
into
sub
jl
mov
mov
mov
mov
xchg
mov
cmp
ss
jg
xor
mov
stos
jecxz
jle
hlt
mov
pop
cmpl
sbb
add
rcll
xchg
cmp
imul
daa
mov
cmp
ficoms
js
jne
pop
dec
and
mov
dec
push
push
xchg
dec
pop
pop
pop
outsl
inc
jns
fwait
mov
sub
pop
fistpll
inc
cmpsb
jae
mov
inc
shrb
imul
sarl
ss
lods
jb
jle
sti
enter
stos
bound
lods
punpckhdq
mov
pop
xchg
movsb
test
cmpsl
push
mov
adc
std
push
dec
iret
pop
sub
in
sbbl
sbb
fwait
cmp
dec
in
or
xor
jl
mov
int
ljmp
popl
mov
ljmp
testl
pusha
mov
test
cld
sbb
or
adc
clc
stos
xor
xor
setae
ja
dec
rolb
int3
push
pushf
fadds
push
std
push
pop
mov
xlat
aad
sti
cmp
fdivs
cmc
adc
pop
imul
addl
pop
mov
fisttpll
sarb
dec
or
pop
lds
lock
jo
cwtl
jns
lahf
jge
push
adc
cmp
ret
push
aam
mov
inc
repnz
xchg
cwtl
dec
push
fmull
aaa
movsl
iret
add
ds
xor
mov
popf
enter
dec
lock
popa
scas
jmp
jb
adc
xor
cld
adc
sub
or
adcl
sbb
fldcw
pop
test
adc
shrb
xchg
push
adcl
rcrb
mov
or
mov
mov
adc
pop
mov
and
mov
push
decb
outsl
lret
and
lods
out
pop
push
bound
out
loop
mov
xchg
pushf
mov
test
fldt
jmp
push
pop
stos
jo
popa
lods
and
aad
aas
push
fldt
outsb
jmp
mov
cli
jecxz
jmp
mov
sub
push
pop
pop
xor
popf
js
xchg
dec
popf
cmpsb
fwait
cmpsl
jp
faddl
jp
dec
or
xor
lock
sub
jmp
adc
dec
test
lret
cmp
or
add
add
popf
sub
sbb
xchg
sub
aad
and
cmpb
cmp
cmp
out
adc
cmpsb
into
sti
push
mov
aaa
jg
inc
jl
out
add
test
push
jp
roll
pop
aad
cmp
lods
out
pushf
dec
mov
mov
addb
adc
inc
mov
jnp
cmp
idivb
scas
xor
or
pop
out
mov
fisubl
adc
aad
stos
mov
xchg
mov
leave
jbe
push
jno
mov
sahf
add
loop
push
iret
push
or
enter
push
fistps
pop
xor
push
das
fs
sub
dec
rcr
int3
xchg
loopne
mov
mov
and
out
and
cmp
insb
lds
mov
mov
or
filds
cmove
add
ja
pop
pop
movsl
lret
stos
fcomi
sub
lahf
jle
pop
data16
lods
mov
imul
lret
push
out
mov
mov
data16
and
jmp
inc
jnp
inc
and
out
mov
in
mov
xchg
not
inc
mov
push
jnp
mov
outsb
jnp
mov
mov
and
test
lahf
jecxz
in
js
lock
jbe
mov
dec
and
jmp
lcall
sub
jecxz
sbb
mov
adc
pop
xchg
ja
mov
pop
and
pop
mov
xor
lods
jmp
jb
push
test
mov
repnz
ja
pop
popf
ror
daa
inc
cmp
jae
xor
jbe
loop
scas
call
shll
idivl
jle
mov
cmpsb
mov
das
in
pusha
mov
nop
in
push
pop
xor
cltd
lcall
into
dec
pusha
and
clc
fisubs
pusha
aam
inc
stc
lods
out
adc
xor
mov
xor
fmull
test
test
push
dec
cmp
push
fidivs
pop
test
xchg
movsb
imul
jecxz
push
nop
cmpsb
enter
outsb
out
lods
int3
inc
leave
je
lods
cmc
stos
cmp
add
xchg
sub
jl
jmp
cs
adcl
xor
jg
in
push
mov
sub
xchg
test
out
shrb
pop
sub
aas
mov
pop
out
fwait
add
sbb
cs
ret
inc
add
sub
dec
lea
rcr
or
pop
sub
idivb
les
push
addb
rcrb
scas
push
xor
adc
je
jle
pop
shl
fs
dec
rorb
xchg
vpmuldq
es
cmp
shrl
fiadds
loop
test
push
shl
push
cmpl
out
adc
mov
dec
push
mov
adc
cmp
iret
mov
imul
iret
xlat
pop
sbb
add
or
cmp
notb
leave
fdivp
movsl
in
movsb
outsb
xchg
fldl
notb
push
inc
dec
xor
fisubl
xchg
mov
loope
cli
jb
loopne
shll
pop
addr16
jb
mov
dec
add
cs
std
jmp
push
les
je
add
cwtl
xchg
mov
inc
andl
outsb
cli
mov
cmp
insl
popa
push
push
mov
lahf
pop
mov
sbb
das
fldt
fwait
dec
jae
cmp
loope
jp
dec
mov
xchg
dec
cmc
mov
in
repnz
repnz
fwait
lds
xchg
iret
aas
cmp
sarl
orl
lret
rorl
lods
das
fs
or
sub
or
xchg
push
subl
int3
lods
js
xchg
fadds
shr
outsb
sbb
loope
adc
xor
pop
adc
mov
sub
je
and
fwait
add
jnp
repz
push
cwtl
mov
scas
jbe
imul
jns
fwait
je
mov
adcb
mov
sub
cmp
xor
icebp
imul
push
push
mov
arpl
enter
cltd
rclb
insl
mov
mov
mov
pop
cmp
and
mov
or
in
movsl
icebp
and
jmp
not
int
ret
push
test
cmp
cwtl
add
xchg
xorl
mov
jbe
pop
lret
or
xchg
add
fwait
scas
divb
or
adc
sbb
dec
xor
jg
or
clc
inc
adc
fbstp
inc
pop
call
fistps
mov
movsl
ja
dec
lods
inc
mov
data16
jecxz
sbb
das
jnp
push
ljmp
out
rclb
sti
push
mov
cltd
daa
sbb
xchg
push
sbb
cmp
xchg
je
shr
inc
je
push
push
mov
xor
mov
in
pop
inc
cmp
dec
pop
mov
mov
mov
xor
inc
stos
inc
xchg
in
mov
jb
sbb
push
ss
pop
sbb
fnstcw
cs
daa
jl
repnz
testl
leave
push
mov
cmp
mov
or
sub
fistpl
mov
and
pop
sbbl
fnstsw
popf
mov
inc
shlb
push
imul
xor
sbb
jbe
jbe
mov
pop
or
cmp
xor
int3
sub
rcrb
cmpsl
push
in
push
sbb
xor
adc
aaa
enter
lods
jne
imul
fdivs
mov
ja
mov
mov
repz
adc
mov
test
jo
jns
sbb
fwait
inc
ficoml
adc
pop
inc
inc
cmp
add
into
orb
rcrb
in
and
mov
push
lock
push
insb
test
mov
fdivrl
push
inc
fldl
mov
push
scas
call
pop
fimull
cmc
fidivl
les
les
mov
repnz
jp
sahf
adc
inc
shrl
xor
pcmpeqd
push
lret
pop
popa
pop
test
lea
jno
loope
or
test
test
inc
and
rcrl
out
stc
cli
aas
mov
push
idivl
sti
and
out
mov
push
sti
insl
shll
cld
std
mov
dec
sti
icebp
and
xor
pop
insl
cmp
int3
sub
xchg
jge
movsl
sub
stc
and
cmp
mov
inc
lods
lea
in
inc
sbb
xor
add
pop
icebp
shlb
icebp
or
pusha
mov
cmc
mov
mov
inc
popa
push
mov
in
xchg
jnp
dec
push
lods
mov
jb
dec
add
popf
sbb
test
repz
dec
movsb
sub
and
stos
push
incl
dec
repnz
and
pop
jnp
movsb
sar
sub
notb
push
std
adcl
mov
lods
dec
add
imul
js
data16
push
sub
stc
xor
jns
clc
adc
xchg
cltd
add
xor
mov
jb
mov
out
lcall
in
into
or
push
pushf
jecxz
stc
xchg
adc
aas
jne
je
push
insl
xchg
sbb
cmp
jmp
das
or
dec
fbstp
shl
das
mov
out
rclb
aad
xor
jmp
enter
mov
ss
mov
adc
out
inc
fdivrl
test
add
lods
push
cmpl
pop
repz
jmp
inc
xorb
dec
or
std
lods
add
ljmp
or
mov
mov
or
pop
mov
ja
pop
dec
lea
loope
lds
loope
jecxz
jnp
pop
gs
popa
mov
add
push
cltd
shrl
sub
hlt
push
or
inc
jne
fwait
daa
xor
ds
sbb
jae
push
xor
push
xor
xor
repz
orl
mov
sub
adc
sbb
inc
mov
rolb
mov
movsl
dec
arpl
push
nop
fists
push
in
or
lahf
or
push
mov
fwait
or
sub
adc
fsubrs
out
loopne
repz
faddp
aad
rolb
mov
in
in
cli
and
mov
jp
enter
adc
rcrb
in
lea
std
jmp
cmp
repz
icebp
dec
test
pop
push
jb
mov
cmp
stc
dec
jne
add
cmp
shrb
push
pop
or
mov
hlt
xchg
fwait
shl
sub
js
jg
aaa
pop
mov
mov
repz
push
adc
pop
out
pop
ss
fbld
insl
ljmp
mov
sbb
in
sbb
inc
jo
popf
fisubrl
addr16
fcomi
add
dec
fistl
test
or
and
loope
lods
pop
jb
test
sub
sub
and
mov
xchg
lods
jl
jg
dec
fidivrs
push
out
imul
int
pop
mov
fimuls
cs
push
and
icebp
mov
mov
in
jp
mov
clc
adc
shrb
fsubrp
or
sbb
fptan
mov
pop
leave
inc
and
jmp
mov
mov
or
je
and
dec
and
xor
xor
daa
or
or
into
mov
arpl
mov
mov
dec
mov
mov
push
xchg
jne
jp
insl
cmp
and
adc
aas
mov
ret
das
cvtpi2ps
orl
test
sub
loop
aam
and
cmp
push
test
mov
movb
ret
out
xchg
sbb
jns
push
lret
jg
bound
xchg
push
mov
pop
hlt
fdiv
cmp
jl
aas
sbb
lahf
inc
shlb
xchg
sub
stos
jg
iret
out
hlt
int3
das
inc
lar
notb
push
repnz
cmp
jmp
movsl
mov
dec
in
jmp
jns
ret
push
sub
test
popa
adc
popa
sub
fmul
fisubs
inc
inc
add
pop
aas
lds
shr
movsl
sbb
rorb
mov
jae
daa
xchg
arpl
in
popf
cmp
movsb
mov
or
xor
xor
stos
cmp
mov
js
out
aam
or
xor
lret
sbb
test
inc
pop
data16
add
xor
and
lret
scas
cltd
xchg
in
mov
mov
add
mov
cmp
clc
mov
dec
mov
push
push
xchg
inc
addb
xor
cmp
iret
sub
call
in
jns
sub
cli
call
cmp
in
test
aas
testb
pusha
mov
push
and
pop
jg
xor
lock
or
flds
pop
scas
sub
pushf
ljmp
push
cmpsl
push
mov
sub
rcrl
xchg
jo
xchg
mov
inc
test
and
adc
pop
push
in
popa
xchg
dec
call
into
das
outsl
shl
cmpsl
shll
stos
sbb
pop
mov
mov
xchg
xchg
stos
mov
je
rcll
jbe
mov
xor
jp
mov
repnz
mov
andb
test
mov
jno
mov
cwtl
adc
add
inc
aad
or
int
mov
inc
push
fcmovnb
xchg
xor
jecxz
pop
neg
and
xchg
out
out
or
or
sar
imulb
and
imull
push
jae
or
arpl
rcrl
jne
insl
or
jnp
call
pop
mov
shlb
xchg
xor
inc
outsl
aas
ret
test
cmp
loope
mov
enter
lret
and
stos
js
fxam
add
dec
push
call
outsl
loopne
pop
mov
push
ja
cwtl
loop
inc
ja
je
lds
ret
inc
mov
cmc
xchg
dec
outsb
daa
dec
lods
and
aaa
cs
scas
or
and
mov
jae
decl
sbb
inc
lds
inc
or
nop
in
or
xor
xchg
or
push
inc
cwtl
mov
inc
pushf
sbb
insb
bound
add
stos
jle
or
push
cmp
dec
mov
imul
insl
mov
repz
movsb
repz
leave
adc
nop
dec
bound
or
xor
cmp
push
xor
clc
sbb
add
cmp
divl
mov
mov
pop
mov
push
jb
pop
lahf
add
mov
jno
sbbl
sbb
inc
sahf
das
adc
inc
adc
pusha
add
sbb
fdivrs
dec
adc
xor
fs
pop
test
jg
daa
sub
cmp
scas
jo
scas
and
std
jae
push
xchg
jg
rcrl
sbb
xchg
shll
mov
sti
aas
inc
add
mov
rcl
ret
mov
outsl
in
pop
adc
jg
shlb
movsb
xchg
sbb
out
jg,pt
jno
rcrb
sub
jle
sahf
jns
add
add
es
jae
xchg
sub
push
dec
int
jae
stc
arpl
clc
xchg
mov
adc
pop
jp
cmc
test
sbb
mov
bound
push
jbe
push
loop
inc
sub
insb
jle
adc
lcall
pop
repnz
jle
mov
call
je
xchg
mov
jb
cmp
cmpsl
jne
dec
hlt
sbb
dec
xchg
int
sub
fldcw
sbb
push
and
test
mov
xchg
int3
jg
and
insl
pusha
cmpsl
xor
les
lahf
in
cs
test
pop
mov
mov
sbb
iret
insl
sbb
mov
sbb
sbb
and
movsb
mov
ret
jmp
add
repz
test
adc
adc
mov
dec
mov
mov
cmc
mov
push
cmp
push
lahf
pop
inc
std
sbb
sub
jge
jmp
mov
popf
mov
stos
push
shrb
leave
loopw
loopne
pop
jmp
sub
push
push
cld
sbb
push
sub
push
lcall
or
xchg
jecxz
popf
mov
sbb
pop
inc
pop
inc
add
and
pusha
mov
jbe
jno
ljmp
jne
sub
lods
aad
dec
aas
lods
bound
rclb
adcl
aas
ss
aam
xor
in
jmp
icebp
jle
xchg
mov
mov
mov
sub
cmpsl
lods
pop
sbbl
mov
repnz
push
leave
mov
add
shrb
inc
cs
fistps
in
lcall
fwait
inc
jl
ds
out
sarl
repz
ds
inc
jl
xchg
xchg
sbb
ja
rol
repz
jmp
push
sbb
pushf
sbb
enter
jnp
adc
repnz
push
outsb
mov
and
cs
mov
lret
cmpsl
fcom
mov
push
jbe
pushf
outsb
xchg
xor
mov
jne
inc
pop
out
sub
cmp
sbb
xor
pop
movsb
sbb
push
mov
inc
inc
dec
movsl
mov
jne
cmc
push
fs
xor
mov
and
sbb
loopne
pop
int
and
fsubs
nop
push
fimull
addb
outsl
xchg
lds
adc
xor
fld
lret
xlat
and
jp
or
push
ljmp
push
cmc
iret
popf
fs
and
lock
int
es
mov
cmp
inc
add
or
adc
mov
dec
add
pop
or
xchg
jmp
int3
push
jae
push
inc
pusha
inc
push
add
jae
mov
jecxz
shll
inc
outsl
pusha
std
sub
add
push
jmp
xor
mov
les
insl
outsl
icebp
inc
pop
xchg
push
popa
or
mov
imul
xchg
test
lods
cltd
mov
xor
mov
dec
hlt
int
pop
cmpl
cmp
sbb
xor
test
sahf
adc
repz
popa
xchg
aam
push
jg
push
cmp
test
jbe
adc
repz
test
mov
add
jae
fldenv
lods
outsl
pop
mov
loop
mov
lret
and
test
cltd
mov
jne
movsb
sub
nop
adc
js
adc
dec
fidivs
push
pop
fs
push
stos
cs
out
hlt
mov
fbld
mov
and
adc
aas
mov
sbb
xchg
jecxz
jb
ljmp
frstor
cmp
repnz
bound
outsb
xchg
jmp
loopne
aas
in
cs
decb
cmpsl
call
mov
mov
lea
mov
xor
push
jne
aam
mov
xchg
mov
xor
mov
xchg
cltd
add
and
ja
scas
adc
fidivrs
and
loopne
in
stc
push
jl
pop
inc
jmp
out
sti
and
out
sub
mov
xchg
xchg
inc
adc
imul
xor
push
lahf
ja
jle
push
push
aam
imul
pop
push
dec
iret
sbb
xchg
cs
into
sub
mov
int3
or
and
jo
in
fstpl
adc
or
add
dec
mov
jae
iret
dec
push
and
push
hlt
ds
repz
test
mov
mov
scas
enter
repz
fptan
sahf
and
sub
jg
test
ljmp
cmp
xchg
lods
xchg
inc
and
push
push
push
andl
xchg
cmpsb
lret
mov
sbb
lret
mov
lret
adc
dec
add
mov
cltd
mov
mov
and
pop
push
lret
fcomi
testb
xor
loop
ss
xor
jae
inc
fstps
jle
test
daa
push
xlat
add
jbe
push
test
dec
cli
or
insl
stos
das
cltd
xor
outsl
or
fisubrl
movsl
inc
sbb
xchg
lcall
lods
mov
sub
lock
daa
test
test
jae
popf
pop
jl
cmc
ret
xor
mov
jbe
xchg
add
out
popf
outsb
das
cmp
movsl
repnz
pop
adc
push
cmc
xchg
sub
out
cltd
xlat
push
sbb
clc
sub
cmpsb
dec
popa
sbb
mov
pop
repnz
cmp
in
sbb
cli
popf
loope
test
bswap
test
lds
ficomps
stc
jnp
dec
loop
fnstsw
aad
insl
mov
cs
into
jbe
pop
push
sub
adc
jne
into
out
mov
lock
sub
pop
xchg
div
in
test
mov
sub
bound
sub
add
pushf
lahf
sbb
in
jl
push
popf
enter
jmp
mov
cltd
lret
scas
and
and
mov
inc
loope
add
sub
adc
js
aas
jecxz
xor
movl
das
mov
cli
js
out
mov
mov
aaa
addr16
nop
aas
cld
sub
or
pop
daa
clc
jp
adc
out
cmp
mov
jg
lret
sbb
and
fdivrp
or
add
xchg
pop
js
pop
in
cmp
stos
aaa
fmul
cmpsl
loop
fstpl
dec
not
or
mov
mov
stos
ret
or
add
fnstsw
xchg
fistps
pop
mov
mov
or
fidivs
mov
lods
dec
test
lock
out
aas
mov
popf
sub
icebp
icebp
pop
inc
lret
cmp
dec
or
push
mov
pop
hlt
movsl
call
jle
test
and
add
push
lds
and
icebp
mov
test
mov
pop
push
adc
cwtl
popf
mov
lret
cmc
cmp
pop
loop
stos
cmpsb
fisttpll
jg
and
mov
scas
push
es
mov
imul
xor
hlt
jle
loopne
fiaddl
sub
subb
dec
xor
adc
cmp
mov
ret
adc
insl
add
and
cli
scas
aas
test
cmp
imul
movsl
mov
jl
fsts
shrl
aam
push
into
jne
int3
xchg
add
cmp
mov
fwait
jmp
pop
mul
jle
js
sbb
xor
loopne
aas
nop
and
inc
mov
push
jmp
xchg
xchg
imul
shr
mov
or
xchg
daa
sbb
pop
ret
push
xchg
adc
shlb
out
rol
inc
rcll
mov
ret
mov
movsl
or
aad
in
pop
popf
outsb
or
cltd
xchg
mov
cs
xchg
rcll
xchg
insl
sub
testb
sub
test
lea
ja
sbbl
mov
repnz
mov
adc
jnp
sub
ficoml
mov
sub
movsl
cwtl
or
sub
push
sbb
push
fwait
adc
lahf
dec
and
stc
xlat
sbb
adc
stos
push
fstps
imulw
dec
pop
mov
mov
push
in
cld
mov
inc
repnz
pop
dec
ror
xlat
add
popa
insb
movsl
loope
outsl
pop
mov
xchg
pushw
fsts
xchg
dec
sub
mov
xchg
imul
inc
bound
cmp
sti
lods
push
cmp
jne
test
cmp
fst
or
int
xchg
and
aaa
in
cmp
xor
fbld
add
push
data16
push
sbb
cld
push
mov
jns
dec
xchg
mov
in
dec
outsb
insl
xchg
pop
dec
cmp
adc
push
mov
inc
adc
mov
mov
mov
jp
jmp
jmp
popa
pop
jge
cmp
mov
pop
aam
push
jae
popf
shrb
push
call
mov
es
sbb
mov
or
call
push
and
popa
push
adc
les
pusha
jbe
repnz
sbb
or
mov
outsb
push
inc
inc
sarl
movsb
mov
lret
mov
ficoml
clc
sar
ds
mov
in
cwtl
pop
cmp
movsl
and
repnz
sbb
int3
push
adc
add
clc
push
push
rcr
mov
in
pop
xchg
fisubrs
mov
push
pop
jno
push
imul
add
pop
idiv
popa
icebp
adc
add
pusha
xchg
sub
sbb
cmpsb
jae
mov
inc
pop
outsb
loope
test
test
mov
add
in
out
iret
test
pop
mov
stc
leave
mov
and
test
xchg
mov
mov
fisubs
push
adc
and
das
adc
dec
mov
hlt
jg
add
outsl
push
in
ret
jg
bound
repnz
add
xchg
jbe
or
int
mov
pusha
and
xchg
js
xchg
adc
inc
cmp
call
push
clc
inc
ss
pop
xchg
xchg
je,pn
shl
pop
in
mov
aas
into
repz
cmp
xor
push
scas
lahf
sahf
push
mov
jge
and
and
popa
push
pop
push
div
fisttpl
jbe
mov
int3
sub
sbb
or
or
mov
iret
nop
xchg
cltd
adc
cli
push
cmpsl
jg
iret
mov
loopne
or
mov
sbb
or
jmp
and
loopne
mov
outsb
icebp
rorl
mov
xor
fdivrs
rorl
out
mov
jecxz
xchg
or
and
movsb
mov
mov
rcrb
out
xlat
das
mov
stc
fwait
mov
cmpsl
or
pushf
out
into
add
pop
int
cmp
outsb
pop
cmc
push
leave
add
inc
into
jmp
jmp
pop
mov
enter
xchg
and
stc
jp
pusha
mov
fistl
sbb
pop
cmpsl
mov
xlat
ret
and
lcall
cmp
outsb
add
scas
idiv
pop
jae
pusha
xor
test
jb
pop
in
jp
xchg
cmp
pop
in
loop
push
mov
stos
sub
xchg
addr16
icebp
int3
cmpb
hlt
pop
sbb
call
mov
dec
dec
pop
and
lea
les
into
lahf
jmp
outsl
insb
int
cli
cld
sbb
xor
cmp
or
mov
mov
leave
adc
movb
insb
add
mov
out
or
nop
inc
or
mov
sub
jae
adcl
mov
jne
lcall
xchg
add
jle
xor
mov
pusha
rclb
imul
lods
imul
cmc
pop
je
rol
add
adc
jo
inc
dec
mov
outsl
inc
add
into
int3
subl
sub
dec
xor
cs
cmp
repnz
pusha
adc
adc
pop
addr16
rorb
or
mov
xchg
adc
int3
push
jns
or
shrl
test
shrb
xor
add
jp
ljmpw
add
push
cltd
or
clc
pop
jne
xchg
es
insb
adc
cmpsl
push
in
xchg
les
xchg
enter
ljmp
mov
pop
iret
pop
adc
data16
add
mov
in
sbb
into
mov
lods
xchg
xchg
fidivrs
data16
and
lods
enter
and
pop
dec
jne
mov
add
lret
fcoml
mov
ds
cmp
or
addl
dec
cmc
inc
lods
mov
jae
loop
jo
addb
xchg
clc
mov
fnstsw
int
push
xor
aad
add
js
and
imul
sub
mov
jae
xor
pop
cmp
push
mov
mov
iret
push
out
fs
outsb
xlat
fmull
out
jecxz
imul
sub
loopne
stc
pop
lret
mov
out
push
jo
dec
cld
xlat
pop
adc
outsb
sbb
dec
jns
adc
mov
push
ja
sbb
cli
adc
in
xor
and
cmp
aaa
fldt
aaa
add
inc
push
adc
push
packssdw
into
xchg
mov
inc
xchg
fistps
cmpsb
inc
xchg
sub
lcall
scas
movsl
inc
into
std
ret
mov
loope
in
jle
add
push
mov
xor
and
add
scas
xor
in
push
or
addr16
test
shll
inc
aad
subl
lret
xchg
aam
flds
dec
notl
mov
add
inc
jp
jl
dec
jo
movsb
iret
push
aaa
jb
xor
push
cli
in
andl
out
cmc
loop
pop
icebp
sub
repnz
nop
pop
pushf
stos
jne
out
mov
push
adcl
mov
test
push
jmp
outsb
xchg
jle
jae
int3
popf
repz
cs
cmp
test
sub
in
insb
mul
push
adc
push
xor
mov
sub
std
jmp
dec
out
das
mov
aas
cmp
sarb
push
sbb
notl
jnp
add
mov
mov
sub
movups
iret
jecxz
cltd
lea
aas
cwtl
mov
fmuls
daa
pop
sbb
sbb
lock
rorl
fwait
inc
add
loope
or
shl
ds
fs
out
xchg
dec
in
lahf
or
sbb
out
ja
adc
scas
loopne
jle
adc
pop
pushf
xchg
je
stos
jg
mov
leave
cld
pop
int3
scas
mov
add
cmp
mov
dec
lahf
outsb
mov
or
fdivrp
cmpsl
loope
cmpb
ds
push
cs
scas
pop
je
sbb
and
add
adc
push
add
fistl
pop
adc
dec
cmp
sbb
inc
aad
mov
push
in
pop
pop
and
psrld
jne
jp
imul
and
jno
cmpsb
xchg
lahf
aas
imul
ja
fisubs
mov
adc
enter
shll
cltd
int3
pop
inc
pop
lea
int
orb
fisubrl
int
lods
mov
jnp
inc
pop
pop
hlt
mov
aaa
add
push
cmc
add
inc
add
gs
in
pop
mov
mov
inc
stos
push
bnd
scas
mov
mov
add
xchg
xchg
dec
cmc
xor
insb
add
es
adc
cltd
lahf
cwtl
push
mov
cmp
dec
xchg
jmp
shlb
sub
fsubp
fisubrl
inc
fwait
and
clc
xchg
push
mov
movsl
in
lea
and
fidivrs
fcmovu
jl
mov
add
rorb
mov
dec
leave
sbb
mov
jmp
mov
in
adc
fistpl
testb
addl
mov
mov
inc
sbb
stc
lret
jbe
hlt
dec
cmp
arpl
repnz
sub
mov
or
mov
sub
pop
ret
adc
sub
ljmp
mov
pushf
sti
aad
mov
mov
addr16
sub
jge
sarb
pusha
xchg
out
mov
or
push
adc
xchg
sbb
leave
cmpsb
dec
leave
insb
mov
gs
sub
xchg
negl
aad
adc
gs
mov
mov
sbb
cwtl
aaa
fcoms
push
jmp
xchg
sbb
xchg
xor
xchg
scas
jns
cmp
in
gs
inc
loop
push
addl
mov
nop
divb
das
inc
xor
xchg
or
sub
xor
push
lea
loop
data16
inc
filds
jge
xchg
shl
mov
add
ftst
push
hlt
mov
rclb
adc
fsubs
mov
adc
push
mov
dec
push
mov
fldcw
jbe
or
fnstsw
cmp
mov
sbb
stc
out
sbb
inc
cmpl
mov
out
movsb
std
dec
jae
in
xor
addr16
scas
push
sbb
enter
leave
cmpsl
imul
ja
ss
fisubl
data16
inc
xchg
fidivl
inc
imul
jb
lahf
mov
scas
add
sbb
pop
sub
test
mov
mov
fldt
sbb
ds
push
xlat
arpl
inc
imul
stc
xchg
cmp
mov
dec
sti
fmulp
test
andl
int
fiaddl
movsb
sub
daa
addr16
sahf
jae
filds
adc
movsl
jo
xchg
jg
pop
leave
jmp
cmc
sub
mov
roll
ret
add
js
sti
sub
or
cmp
adc
mov
cmp
sub
mov
push
aaa
int3
xchg
adc
add
call
movsl
rcrb
sub
setno
push
add
pusha
sbb
lds
into
loopne
dec
imul
jbe
sarl
xchg
pushf
pop
ss
jge
stos
inc
dec
jge
sub
je
andb
std
or
aas
sbb
decb
ficompl
xchg
cmp
lcall
in
add
sub
mov
mov
cmp
dec
icebp
push
push
sbb
sbb
and
aas
fiaddl
cmp
and
icebp
push
pop
sub
popf
in
dec
aam
sbb
imul
sub
xor
leave
imul
scas
add
test
mov
adcb
popf
xchg
adc
test
add
aad
or
push
enter
fistps
push
xchg
jae
adc
cmp
cmp
out
cmp
jae
add
push
mov
pop
lahf
push
or
push
dec
ds
mov
inc
repz
cmp
imul
xchg
sbb
dec
ljmp
nop
out
mov
rcll
inc
mov
xor
and
imulb
pop
sbb
xchg
test
popf
fbstp
sub
xchg
pop
jg
in
adc
call
shlb
lahf
xor
lds
push
cmp
xor
repnz
rcrl
push
sub
and
jmp
cmp
and
insl
push
push
mov
lea
pop
sub
or
fsts
cs
inc
or
es
mov
adc
fiaddl
jmp
or
leave
jge
out
out
xor
je
mov
jmp
or
xlat
inc
dec
inc
pop
inc
cmp
lea
dec
cmp
dec
lods
xlat
repz
ja
push
xchg
inc
pop
les
pusha
inc
pop
outsb
je
enter
shr
inc
mov
mov
pop
pop
adc
bound
imul
cwtl
or
fsubs
dec
push
lds
jb
push
lods
je
ja
stos
dec
clc
mov
data16
add
pop
xchg
mov
flds
loop
popa
das
dec
push
leave
jg
jae
and
mov
xor
pop
mov
cmc
imul
jmp
mov
pop
es
jp
mov
cmp
mov
mov
mov
jnp
outsb
test
jmp
push
stos
jns
jge
add
xor
jb
stos
push
push
or
jg
in
cmp
lock
in
add
adcl
jmp
xchg
mov
mov
sarb
mov
jo
mov
jbe
inc
push
scas
mov
jne
dec
lods
xchg
loope
pop
fsubrl
std
bound
jge
push
mov
in
push
test
ss
out
sbb
push
inc
pop
add
or
int3
sahf
add
cmp
sbb
push
es
out
or
int3
fstpl
xor
scas
and
scas
and
sub
shr
jns
inc
ret
test
inc
push
mov
push
push
push
add
int3
xor
inc
aam
or
sub
dec
mov
fcompl
mov
lds
adc
mov
and
or
and
stc
dec
jp
cmp
shr
arpl
add
icebp
or
mov
fwait
jp
fnstsw
addb
int
gs
fimull
pushf
inc
jns,pt
js
repnz
push
dec
rcll
pop
in
jg
inc
cwtl
insb
je
mov
lock
push
ret
call
inc
fcomps
cmpsb
cmc
adc
xlat
jb
clc
sub
loop
add
jae
inc
sub
dec
cli
scas
jo
dec
or
push
in
add
in
and
ss
and
cmp
insb
or
sahf
insl
jmp
test
addl
lcall
pop
or
sbb
push
stos
inc
xor
mov
sub
mov
xor
dec
fwait
and
add
lret
push
jae
adc
sbb
rclb
sti
movsl
pop
cmp
jb
or
sbb
cld
outsb
and
pop
ror
lods
sbbb
js
sub
xor
fists
imul
xchg
xchg
outsb
inc
punpckldq
jle
repz
and
sub
push
xchg
ffree
out
dec
gs
jg
dec
dec
in
pop
popa
jp
push
in
out
int
jmp
insl
pop
div
xor
xchg
xor
mov
ja
mov
fdivs
xchg
and
dec
out
jg
sub
pop
inc
ret
xchg
mov
dec
xor
dec
leave
out
out
mov
scas
inc
shrl
cltd
push
rorl
out
cld
mulb
lcall
inc
in
repz
inc
fnclex
out
pop
jns
loope
stos
inc
push
add
adcb
lock
adc
out
mov
in
push
xchg
add
out
fs
mov
mov
pop
add
cmpsb
int3
cs
sub
and
test
dec
jo
or
dec
or
cmp
into
in
icebp
bound
popa
fistps
jmp
cld
cmp
mov
stos
jne
stc
aad
inc
das
jle
aas
xlat
repnz
notl
lahf
dec
andl
xchg
fistps
jge
outsb
movsl
pop
adc
add
movsl
addr16
loope
stos
in
repz
xor
mov
inc
push
cltd
push
mov
or
push
add
add
xor
es
roll
and
xchg
push
and
mov
mov
xlat
xchg
test
js
jecxz
mov
ss
dec
sbb
mov
cmp
outsl
aas
lods
js
and
sub
fs
push
xor
xor
adc
fidivl
jge
push
mov
pop
loop
or
or
out
jle
icebp
lret
and
jae
sub
scas
cmp
cmp
or
cmp
push
loop
call
or
mov
shll
repz
cmp
mov
cmp
inc
stos
scas
sub
iret
stos
push
jbe
outsl
mov
dec
loope
loopne
cmp
movsl
add
mov
push
xchg
lods
addr16
mov
pop
pop
in
arpl
gs
jl
mov
sbb
mov
mov
das
fwait
in
hlt
scas
test
or
imul
lea
inc
fdivrs
rol
mov
imul
ss
imul
jg
loopne
pop
cwtl
mov
repnz
in
mov
or
icebp
adcl
out
sahf
jne
test
data16
sub
enter
aaa
dec
jbe
loope
xlat
xor
shll
adc
xchg
aam
movsb
xor
sahf
rol
cmp
mov
mov
adc
xor
cmp
xor
cmp
sub
movsb
lcall
pop
in
fcom
sbb
push
clc
jo
or
daa
int3
inc
mov
cmp
lcall
pop
mov
mov
shrb
push
jns,pt
ret
je
cmp
scas
jns
sub
movsl
les
fistps
add
in
push
cmc
xchg
mov
aam
push
lock
mov
jle
imul
pop
jnp
fadds
hlt
mov
jp
xchg
movsb
popl
je
ret
fimull
and
inc
push
outsl
pop
jns
std
add
jnp
fildll
sub
mov
inc
add
or
xor
jle
shll
rcll
mov
lret
call
xor
add
xor
mov
sahf
adc
lcall
and
inc
inc
fiadds
outsb
inc
pop
lock
push
cs
aad
es
push
sbb
out
fwait
sarb
adc
cmp
cmpl
movsl
aas
cld
sahf
dec
imul
lret
jo
scas
jo
cmc
push
xchg
addr16
nop
leave
mulb
xchg
and
in
or
or
and
aad
mov
das
and
pop
add
scas
mov
adc
adc
xchg
xchg
sbb
push
dec
in
cli
cmpl
int3
xorl
cmc
mov
andb
adc
call
push
jle
out
cmc
mov
fdivrp
in
insb
adc
lds
dec
std
aam
sub
mov
mov
sub
adc
sub
out
rorl
and
negl
jge
xchg
jb
addr16
out
xchg
adc
daa
lret
add
fidivrl
or
push
pop
sti
aad
jns
xchg
or
stos
es
and
out
sub
jmp
jb
push
mov
push
adc
lds
lret
movsl
add
cmp
sub
rorl
mov
xor
dec
sbb
outsl
dec
notl
pop
popa
bound
mov
inc
jns
out
push
fimull
sbb
add
mov
xchg
cmc
cwtl
jb
and
lods
loopne
inc
cmc
pop
xchg
pop
add
pop
imul
inc
xor
and
lret
cmp
popf
and
cmp
xchg
or
xorl
pushl
lock
fldcw
hlt
iret
negl
push
mov
rcrl
into
inc
cmp
xor
mov
test
mov
scas
in
in
lea
pop
adc
rcll
inc
sbb
push
inc
or
cmp
cltd
ss
mov
push
daa
pop
mov
sbb
adcb
fidivrl
sahf
cmp
add
xor
adc
adc
dec
mov
fs
lret
and
movsb
push
fsubr
loope
shrb
mov
sarl
test
pop
popf
mov
scas
jmp
cmpsb
xchg
xor
out
jg
xor
and
sbb
push
icebp
nop
sbb
roll
push
jno
pop
mov
mov
and
or
rorl
clc
aaa
cli
ss
mov
lahf
js
je
test
push
cmp
stos
xor
in
adc
aaa
push
cmp
rcrl
pop
cli
int
sub
lret
enter
pop
cmp
mov
pop
jl
mov
jno
popa
mov
cmp
xor
inc
out
iret
dec
dec
out
imul
mov
aam
jbe
mov
cmp
jmp
or
outsl
mov
in
mov
mov
adc
lcall
pop
cmpl
imul
sub
popf
inc
pop
jge
lcall
push
in
aad
outsl
jo
cmp
ljmp
pop
lea
xor
dec
daa
push
push
mov
cmpsb
dec
je
xchg
scas
test
cltd
xlat
lods
sub
rcll
pop
test
xchg
mov
xor
in
inc
add
into
push
outsl
dec
cmp
in
lretw
or
imul
cmp
jge
jl
jl
push
mov
and
sub
and
div
or
push
ljmp
xlat
lea
loop
ds
and
bound
push
mov
js
adc
sti
test
mov
xchg
imul
sub
pop
scas
adc
mov
xchg
ljmp
push
add
inc
loopne
xor
in
mov
adc
insb
lahf
mov
dec
movsl
push
repz
call
mov
mov
icebp
sub
and
cmp
clc
or
movl
imul
xchg
pushl
mov
mov
cwtl
and
aaa
cmp
xlat
mov
sbb
lret
pop
inc
jae
xor
dec
pop
xchg
testl
xor
and
cmc
imul
out
dec
pop
pop
sbb
xor
push
orl
dec
mov
iret
push
inc
fidivrl
ret
cmpsl
push
cmpsl
lahf
mov
out
pushf
stc
dec
mov
dec
jg
daa
xor
out
jge
sub
sub
xchg
pusha
sub
push
sahf
mov
cs
mov
jmp
stc
cltd
lret
in
pop
jl
sub
nop
divb
out
cmp
inc
xchg
push
pusha
push
lods
adc
rcrl
cmc
xor
mov
fcomps
add
sbb
loope
jge
dec
adc
xchg
or
frstor
adcb
and
cmp
sub
and
in
push
ljmp
inc
pop
sub
cmc
dec
test
call
dec
in
nop
lcall
push
and
sbb
sbb
ret
push
loop
adc
pop
rcrl
sbbl
lret
mov
dec
pop
pop
cmpb
sahf
stos
pusha
inc
xchg
push
sbb
or
mov
scas
pop
and
rcl
add
add
xor
add
jae
fdivs
imul
movsb
dec
sahf
push
cmp
ds
or
int
cmp
ficompl
push
sub
lock
xchg
add
cmp
mov
xchg
es
int3
sub
js
or
mov
out
xor
xor
daa
in
fwait
cld
ljmp
push
popa
adcb
insb
inc
jmp
sub
or
mov
loop
cli
dec
decb
jne
pop
xlat
and
mov
imul
adc
std
hlt
adc
dec
addr16
push
icebp
mov
das
lock
xor
aaa
jne
fcoml
push
mov
test
testl
movsl
ffree
add
ss
jae
mov
loop
lods
sub
lea
cld
int
xor
std
rorl
mov
in
and
test
mov
and
push
cmp
sarb
adc
adc
push
or
jp
into
lock
in
rcll
pop
inc
js
inc
jl
cmpsl
jno
jb
cmp
fnstcw
lcall
addr16
les
adc
in
cmp
pop
inc
sub
imul
shll
sarl
addl
scas
add
adc
dec
lock
outsb
lcall
mov
sub
mov
in
mov
mov
iret
rcll
sbb
ds
aaa
jmp
stos
push
inc
call
popw
fisubrs
adc
dec
xchg
mov
jle
cwtl
xchg
inc
mov
aaa
js
aam
inc
cmpl
fsubrl
je
out
lcall
lds
popf
lds
cltd
pop
test
dec
ret
mov
sub
jg
bound
mov
pushf
or
push
scas
lds
pop
and
loop
and
out
cmpsl
jp
xchg
inc
adc
push
insl
mov
ss
inc
inc
and
push
add
cmp
scas
push
xor
cmp
dec
dec
in
xor
mov
lahf
lcall
rorb
inc
out
mov
movlps
adc
xlat
int
out
repz
leave
icebp
and
cmp
inc
and
adc
fildll
clc
into
les
call
cs
das
testb
cmp
push
pop
jp
loope
mov
movsl
sbb
mov
dec
xlat
jmp
gs
insb
mov
jno
xorl
dec
outsl
mov
dec
xor
xchg
dec
test
insl
imul
xchg
iret
stos
in
dec
daa
lods
xor
gs
adc
pop
cmpsl
adc
hlt
pop
and
jo
mov
jns
jae
pop
dec
stos
xchg
aas
jp
mov
add
imul
iret
inc
jp
push
mov
xor
pusha
mov
inc
and
ret
repz
mov
jl
adc
and
mov
loopne
arpl
dec
loop
call
jo
insl
xchg
mov
adc
es
pop
push
sbb
sbb
jns
test
xchg
test
iret
adc
in
ficoms
jo
aad
pop
push
jae
popf
in
shlb
lcall
push
repnz
dec
inc
or
adc
cwtl
inc
jo
imul
or
mov
pop
inc
add
pusha
addr16
pop
jae
sub
jp
fucomp
loop
mov
shl
notl
fstpt
shll
cld
testb
out
shll
inc
je
jecxz
dec
sub
or
xor
popa
in
enter
bound
shrb
in
sub
xor
stos
jnp
push
fsts
adc
pop
or
ficoml
sub
test
xchg
inc
xchg
ficomps
clc
ficomps
mov
incb
pop
subb
cmp
shl
enter
or
into
test
push
mov
int3
movsl
imull
les
ds
xchg
inc
shr
mov
cmp
pop
leave
and
xchg
pop
sahf
movsl
addl
int3
bound
aad
aam
mov
clc
iret
cwtl
es
stc
pop
cmp
icebp
lods
and
push
mov
stos
xchg
repnz
paddusb
adc
cmp
sbb
cmp
sbb
xchg
leave
ret
pop
shll
out
jmp
shlb
rclb
cmc
jle
jb
and
repz
gs
es
lret
jno
cltd
sbb
jl
in
out
jno
mov
call
or
jg
in
mov
icebp
out
adc
sbb
xchg
out
dec
mov
jae
push
sub
out
xor
xchg
mov
xlat
out
dec
dec
mov
add
cmp
cmp
jle
inc
mov
subb
jno
mov
ret
cmp
pop
or
cmp
dec
push
in
movsl
stos
push
push
rorb
inc
pop
cwtl
int
or
sub
push
int3
adc
mov
xor
sub
xor
neg
xchg
hlt
bound
cmc
jl
adc
adc
push
sub
push
fmul
xchg
stos
jmp
mov
and
shrl
mov
outsl
cmpsb
dec
xchg
cltd
jbe
lret
sub
popa
cmc
ja
imul
daa
lods
imul
jecxz
shll
or
mov
das
xor
mov
cmp
xchg
xchg
repz
or
repnz
adc
jp
aaa
mov
xor
add
push
mov
out
movsb
dec
or
iret
fsubr
je
mov
pop
xor
pop
fists
mov
inc
and
and
mov
scas
or
std
inc
inc
leave
add
inc
and
mov
push
push
add
mov
mov
or
icebp
ds
fs
loop
movsb
in
mov
sbbl
xchg
mov
push
cmc
negb
test
dec
aad
cmp
std
fisubl
ja
rol
sti
nop
orl
lods
or
pop
aam
pop
jae
sbb
inc
mov
sub
push
stc
arpl
outsl
sbb
mov
cmp
sbb
add
movsl
lahf
decl
negl
jb
hlt
mov
adc
cmp
or
ret
dec
bound
jge
nop
or
aam
cmpsb
jg
dec
adc
iret
push
xor
enter
nop
ret
adc
bound
pop
in
sbb
pop
popa
adc
jae
mov
jbe
pop
fisubrs
stos
aas
cmpsb
mov
enter
xorb
add
adc
jnp
jmp
or
add
xor
xchg
xchg
xchg
inc
xchg
jb
jp
push
push
ds
push
nop
divb
jbe
xchg
test
lahf
add
int3
imul
and
repnz
cmp
push
inc
cmp
cs
mov
mov
inc
xchg
dec
jno
sub
inc
lcall
cmc
xchg
mov
in
addr16
ret
pop
jo
push
sub
inc
or
sub
out
iret
xor
cmpsl
mov
push
mov
jns
loop
sub
adc
xchg
ds
rclb
imul
lock
js
ljmp
add
fstps
push
movsb
sub
push
outsb
cltd
mov
lods
pop
fwait
adc
repz
pextrw
shl
jecxz
fisubs
aas
and
dec
sub
pusha
call
or
jne
push
add
xchg
xlat
jb
fwait
es
leave
and
scas
out
cmpsl
stos
jns
mov
das
mov
push
fwait
mov
mov
pop
rorb
stos
aad
sbb
test
sbb
imul
push
fwait
popa
inc
push
leave
enter
push
js
fisubs
xor
js
dec
test
push
mov
nop
pop
scas
mov
xchg
xor
int3
stos
and
fs
jo
jne
in
sbb
adcb
sahf
or
imul
syscall
jmp
mov
subb
or
or
jle
push
dec
rcrb
pop
xor
je
sahf
xchg
mov
xor
loopne
xchg
or
pop
lret
iret
xor
in
cwtl
mov
cmp
dec
adc
pusha
loopne
xor
aaa
testl
xchg
fs
in
mov
pop
fists
jge
mov
fcmovu
lea
adc
inc
cmp
xor
and
and
xor
test
clc
es
mull
in
lds
and
repz
mov
pop
lret
xchg
dec
dec
mov
and
sti
sbb
inc
test
clc
test
mov
scas
or
test
hlt
orb
dec
es
xchg
mov
dec
popa
andb
insb
xchg
cmp
clc
mov
fs
cmp
insl
negb
pusha
push
sub
cld
cmp
nop
or
iret
fbstp
mov
push
inc
stos
inc
lahf
insb
imul
cli
sbb
out
repnz
pop
subb
mov
jl
fs
divb
jg
testb
sub
mov
ret
js
jns
aaa
inc
push
adc
leave
sub
jle
mov
pop
sub
je
jmp
pop
or
adc
out
arpl
std
loop
mov
cmp
movsl
sahf
ljmp
test
mov
lods
pop
enter
and
int
mov
dec
xchg
loope
psubq
sbb
push
xchg
and
cmp
inc
or
push
sub
mov
cmp
adc
iret
leave
fidivs
push
dec
rcrl
sahf
jp
ja
fld
mov
add
or
sbb
repz
mov
mov
fisubl
iret
roll
into
imul
int3
push
pop
lahf
repz
gs
cmp
jb
std
pop
jle
and
je
test
dec
js
daa
sub
jecxz
cmp
lahf
pusha
dec
cltd
je
inc
pop
outsb
shlb
hlt
jg
xor
sub
mov
mov
jecxz
mov
pop
jmp
aaa
sbb
inc
bound
or
js
int3
daa
pushf
mov
repz
in
ja
mov
inc
imul
paddw
mov
jl
das
cmpb
arpl
adc
loopne
pand
inc
jno
mov
pop
cmp
pop
dec
xlat
pop
mov
pop
insl
fnstenv
dec
mov
mov
push
pop
or
mov
sarb
int
pop
pop
xchg
icebp
loop
jle
and
sahf
sub
pushf
pop
dec
mov
nop
les
dec
scas
sbb
push
jae
movsb
push
loopne
aam
xchg
dec
lret
jb
imul
icebp
ret
int
stos
stc
xchg
stos
dec
sub
jmp
test
mov
mov
inc
daa
outsl
pushf
test
push
out
adc
add
push
dec
in
cmpl
jp
iret
dec
jmp
lock
ret
mov
jmp
movsl
sahf
add
or
and
gs
push
lret
ss
arpl
pop
inc
in
adc
stos
test
test
xchg
xor
fmuls
pop
out
scas
jbe
fsubrl
addr16
jmp
xchg
xchg
sub
mov
or
rcr
sbb
mov
xor
out
fmul
dec
fstpt
outsb
popa
sub
and
shrb
sub
push
insl
sub
into
leave
jnp
out
adc
mov
pushl
es
mov
xchg
scas
fisubs
adc
xchg
sub
and
push
movsl
cmp
and
fidivrs
mov
pop
es
outsb
xor
lret
jo
or
push
test
xchg
imul
cmp
jg
jmp
into
imulb
mov
push
dec
orl
pop
mov
xorl
pop
leave
lcall
mov
divb
test
xchg
lds
inc
push
ds
fdivrs
lret
inc
lock
jbe
adc
inc
scas
add
lret
ja
push
or
dec
sub
cmpsb
dec
add
test
xlat
mov
xchg
jle
fstps
mov
sub
out
imul
add
push
mov
and
or
test
push
jno
pop
add
popf
push
sbb
inc
rcll
es
shl
fs
arpl
add
test
xor
dec
jne
sub
enter
shll
andb
mov
push
aam
jns
cltd
call
dec
outsb
les
lods
xchg
xchg
shrl
fldt
mov
test
jnp
sub
pop
adc
jnp
add
enter
insl
lret
sbb
mov
lds
mov
mov
xchg
or
or
or
clc
dec
lea
mov
aad
sar
imul
and
jle
lods
call
dec
sub
shll
cltd
fisttpll
push
xchg
fistl
jns
imul
daa
push
aaa
xchg
mov
xchg
push
scas
and
cmp
pusha
lock
addr16
mov
fbld
mov
mov
push
mov
jp
aaa
sub
cmp
out
stos
sbb
cmp
or
sbb
ja
mov
sub
jno
lret
lea
cmp
in
lahf
jle
icebp
loopne
xchg
push
ficomps
mov
test
or
imul
mov
stos
mov
pop
xchg
in
sub
fisttpll
or
sub
mov
or
xor
push
add
dec
lahf
inc
add
pop
jns
pop
mov
fcmovnu
ss
cld
mov
cmp
adc
aad
cmp
das
fnstenv
lret
rcrl
push
add
out
jecxz
sub
cmp
imul
imul
insl
push
jnp
sub
lods
les
xor
clc
xor
sbb
flds
int
lcall
adc
mov
add
stos
xchg
mov
fiaddl
xchg
sbb
hlt
fsubl
addb
imul
adc
insb
lea
insl
cmp
shrb
sbb
add
incb
push
orl
es
lret
in
mov
in
sub
xchg
mov
jb
and
movsw
repz
mov
outsb
jo
fisttpl
push
mov
push
mov
imul
push
bound
jbe
jle
xor
mov
stos
xor
jmp
cmpb
inc
bound
pop
sbb
or
mov
insl
sub
stos
inc
jae
aad
into
dec
test
mov
xchg
sub
cwtl
inc
stc
sbb
or
add
test
push
xor
or
test
cmp
lds
mov
sbb
in
xorb
or
cwtl
fs
repz
xor
inc
xchg
into
rcr
roll
sarb
faddl
scas
push
lret
push
add
es
sbb
inc
lock
outsl
sub
fdiv
in
std
shrl
test
mov
outsb
scas
jle
lods
rorl
jle
pushf
inc
mov
sti
adc
xor
fsts
inc
flds
adc
enter
sbb
jmp
ret
les
fisttps
xchg
pop
popf
pushf
dec
nop
out
aad
sbb
mov
insb
leave
cmp
sub
sub
enter
inc
xchg
neg
mov
fcomp
ret
ljmp
mov
pop
adc
imul
jae
jl
cmp
jns
cld
in
pushf
or
push
jne
xchg
fldl
push
dec
sbb
clts
jnp
insl
test
loopne
push
xor
pop
adcl
inc
inc
test
cwtl
xchg
add
xor
xor
sub
test
jge
mov
push
or
pop
aaa
fndisi(8087
not
xor
sahf
icebp
fbstp
dec
mov
push
add
mov
iret
std
adc
outsb
lea
enter
dec
push
mov
and
pushf
add
repz
movsl
std
push
xchg
sub
inc
cmp
sub
cwtl
shl
sarl
sbb
mov
cmp
pop
lea
dec
mov
cmc
into
icebp
sbb
loope
dec
imul
lcall
mov
xor
ds
imull
test
push
ss
cmp
adc
rclb
mov
and
sbb
or
xor
sahf
mov
push
mov
pop
daa
or
rol
pop
push
xchg
repnz
test
pop
das
dec
or
and
stos
push
sbb
inc
jl
push
dec
nop
popa
loope
mov
mov
iret
mov
ret
and
sub
mov
dec
jo
adc
inc
mov
xlat
xlat
sub
ja
inc
sub
and
hlt
out
lret
in
cltd
stc
and
adc
scas
dec
adc
add
dec
xchg
mov
or
add
add
movsb
jo
dec
inc
inc
cmp
iret
inc
mov
add
xchg
cmp
stc
pop
xor
mov
in
fildl
imul
mov
mov
pop
mov
jbe
stos
shrl
cli
sub
push
int3
jae
sbb
jne
fwait
pop
mov
xor
ret
imul
pop
pop
lret
add
fnstsw
pop
adc
sbb
xor
popf
push
mov
xchg
shlb
pop
decb
sahf
sub
mov
movsb
or
rcr
mov
sub
aas
cmp
pop
stc
movsb
mov
jns
cmp
ss
push
mov
jp
aas
int
and
inc
test
test
ljmp
dec
jnp
or
adc
scas
call
mov
pusha
pop
sbb
mov
ss
inc
aaa
out
or
dec
iret
mov
out
jno
cmp
mov
mov
dec
inc
sbb
sbb
lock
sbb
adc
cs
jmpw
clc
pop
xchg
mov
aas
push
scas
cmp
ffreep
push
sbb
lcall
push
jo
stos
inc
or
sub
stos
pushf
loop
in
cltd
or
icebp
cmc
pop
and
pop
sbb
cmc
pop
push
add
push
xorb
sbb
in
adc
mov
fsubl
outsl
gs
dec
mov
xor
aaa
cli
push
fwait
pop
gs
fwait
in
lahf
popf
xchg
clc
sbb
mov
jbe
enter
mov
xlat
lea
push
out
mov
pop
pushf
xchg
scas
dec
lcall
bound
clts
mov
mov
push
xchg
mov
push
into
bound
ja
mov
iret
pop
mov
bnd
mov
inc
push
fstps
inc
and
inc
sbb
pop
ss
adc
pop
lret
adc
cmp
inc
jg
push
mov
ss
std
push
in
cmp
and
xchg
test
imul
popa
xchg
jp
xor
insb
mov
ret
add
pusha
sub
cltd
push
outsb
mov
jge
add
fcmovne
icebp
leave
push
dec
fsts
jecxz
push
lock
fstpl
xor
mov
sub
adc
addr16
shrl
test
lret
inc
mov
push
cmpsl
jmp
and
fldenv
or
xchg
lds
mov
stc
push
inc
lods
jno
movsl
mov
adc
dec
or
mov
adc
sbb
push
lods
jmp
xchg
jle
jb
imul
or
ja
jg
int3
dec
pop
mov
jae
xchg
pop
data16
mov
xchg
jbe
je
mov
push
cld
sbb
xchg
pop
cmp
mov
cmc
cmp
mov
or
push
dec
push
sti
clc
dec
or
out
inc
sar
mov
push
add
mov
das
add
and
sub
adc
shlb
push
and
sti
mov
sti
push
jl
pop
xor
push
pop
mov
addl
fs
mov
push
test
ss
adc
cltd
push
xor
loopne
jb
inc
and
sub
mov
push
sbb
fstpt
bound
jp
aam
test
add
int
and
daa
rcrb
movsl
cltd
and
and
xchg
add
stos
mov
shll
cmp
pop
mov
cmp
std
dec
adc
in
and
jge
iret
jmp
cwtl
loop
clc
and
xchg
inc
stos
pop
ljmp
push
pop
pop
in
gs
sbb
sub
jb
sarb
cmpsb
adc
add
pop
aam
icebp
add
sbb
in
pop
mov
into
insl
mull
movsl
jb
fsubs
roll
fwait
xor
pop
test
jne
in
mov
xchg
rclb
add
sub
or
inc
out
lds
sar
into
xor
or
push
jle
pop
gs
lods
cmp
aad
push
jp
xchg
les
mov
sbb
jbe
push
fcoms
cmp
ljmp
fadds
leave
push
mov
nop
les
cmpsl
stc
clc
mov
inc
lods
sub
or
jae
mov
or
cld
or
mov
je
test
test
insb
enter
mov
cld
sub
cld
imul
cmovns
pusha
xchg
or
ret
or
mov
jmp
cmpsl
movsl
das
ljmp
sub
imul
xor
and
jecxz
and
push
out
in
push
lods
aaa
push
adc
testl
test
into
pop
sahf
cmc
daa
stc
imul
pop
fsubr
inc
cmc
in
stc
xchg
out
arpl
push
push
jg,pn
fdivs
mov
inc
jp
aas
and
insb
imul
int
jnp
inc
xchg
inc
cwtl
jg
int
and
jnp
sub
or
or
adc
sbb
sbb
js
bound
push
in
mov
jnp
add
bound
inc
mov
mov
pop
mov
scas
push
jmp
dec
leave
cmpsl
inc
add
add
test
ror
loop
inc
sub
add
push
dec
add
mov
dec
push
inc
ret
or
rsm
xchg
jae
dec
aam
fdivl
inc
jg
aam
inc
in
sub
les
insl
xor
iret
cwtl
loopne
aaa
ja
push
push
cli
sbb
cmp
lds
je
add
rcrb
adc
pop
pusha
pop
incl
jne
pop
in
cmpsb
test
inc
jle
sub
xchg
sub
mov
lret
imul
sub
test
enter
fsubrl
sbb
test
icebp
pop
jno
xor
mov
mov
sbb
lds
pop
repz
fstp
icebp
lcall
push
repnz
sub
sbb
in
or
pop
adc
add
cwtl
call
push
lcall
mov
movsl
repnz
fistps
divb
out
inc
mov
icebp
xor
iret
xchg
test
popf
gs
test
dec
inc
pop
loopne
push
mov
mov
or
and
add
test
jecxz
or
repz
sub
mov
xchg
or
test
outsb
xchg
xlat
test
push
pushf
jle
js
ror
rclb
add
scas
inc
sub
dec
inc
repnz
add
push
cmpsb
lcall
inc
xor
add
inc
std
fistpll
arpl
pop
stos
enter
push
mov
stos
xchg
gs
lea
xchg
xchg
sti
jns
pusha
dec
mov
pop
push
sub
sub
leave
xchg
cmp
jecxz
es
cmpsl
add
and
add
jmp
and
sub
and
shl
ss
lret
xchg
push
add
out
cmp
js
xlat
lret
jb
push
mov
push
inc
mov
dec
in
test
sbb
clc
in
les
jl
loop
and
sar
sti
stc
mov
xchg
adc
xchg
and
mov
xchg
xor
push
cld
loopne
xor
lretw
mov
cmc
mov
xor
int3
movsl
hlt
xor
ds
sub
or
cli
pop
call
adc
loop
mov
ret
push
and
ja
sub
mov
enter
in
mov
push
cmpsl
fadds
xor
cmp
xchg
sbb
cmc
xor
xchg
std
scas
rolb
xorl
mov
clc
xchg
leave
sbb
pop
out
roll
das
aaa
lret
pushf
pop
ficoml
sarl
ficompl
and
movb
inc
jecxz
jb
or
hlt
daa
jmp
xor
jnp
mov
popf
mov
insl
adc
mov
xor
xchg
cmp
insb
mov
jae
sbb
inc
inc
in
loopne
pop
sbb
in
and
test
cwtl
aas
sbb
leave
scas
iret
movsl
cmpsl
dec
pop
mov
push
add
popa
add
cmp
mov
bound
mov
int3
pop
dec
out
lcall
jmp
push
imul
roll
arpl
repnz
hlt
or
push
leave
mov
xchg
stc
pop
mov
stos
outsb
scas
push
enter
push
xchg
mov
and
arpl
mov
lods
jae
mov
mov
jg
or
rcll
jle
push
stos
dec
sub
push
xchg
and
add
mov
adc
inc
out
jmp
mov
pusha
loopne
bound
aam
inc
fnstcw
jbe
repnz
test
inc
adc
inc
sub
fs
xor
push
mov
clc
test
negl
dec
add
jno
lret
mov
mov
push
faddl
out
adc
jb
mov
dec
push
std
lcall
ja
xor
fucomip
mov
pop
jl
sub
mov
inc
cmpsl
cmpsb
cmp
fiaddl
sbb
or
mov
sbb
cmp
stos
jo
and
ret
pop
add
dec
xchg
jae
adc
movsb
xchg
push
out
dec
mov
sbb
scas
std
sub
int3
cmc
xlat
mov
test
lods
mov
out
sub
leave
cltd
out
fwait
xchg
sub
divl
inc
imul
pop
aaa
mov
sbb
js
mov
xor
dec
insl
mov
movsb
cmp
lock
mov
push
dec
mov
push
ffree
js
or
jb
jae
cli
test
jmp
movsb
loope
sbb
pop
or
push
das
imul
or
pop
cmp
xor
sti
ret
shr
xchg
cmp
add
jp
out
jge
xor
mov
xlat
adc
out
fdivl
into
add
and
lcall
mov
jbe
xchg
cltd
xchg
arpl
test
and
pop
push
call
inc
ds
in
movsb
sahf
xchg
adc
mov
dec
mov
add
dec
pop
mov
mov
dec
pop
adc
sbb
ljmp
sbb
lods
push
decb
stc
sbb
mov
fmulp
jge
ret
cmc
repz
dec
inc
pop
push
jns
cmp
xchg
cld
adc
and
and
mov
popf
pop
loopne
dec
inc
loope
inc
sub
bound
adc
loop
xchg
cmpsl
out
xor
dec
xor
dec
pop
cmp
inc
xor
mov
or
dec
xchg
pop
cmp
push
popf
fcmovnu
icebp
clc
push
push
jo
arpl
lods
sub
xchg
push
int3
xchg
add
sub
jo
xchg
cmp
loope
xor
sbb
cmp
push
jns
xlat
mov
stos
aas
or
test
dec
ljmp
xlat
push
add
and
sbb
rolb
fcompl
pop
adc
fnsave
adcb
cli
pop
inc
in
sahf
aaa
test
inc
mov
iret
mov
jle
xchg
and
jl
arpl
sbbl
push
mov
mov
xchg
fwait
or
ljmp
xor
call
enter
jo
lea
cli
fisubrs
ss
test
stc
sar
sbb
aaa
jle
stos
mov
push
int
xor
dec
sti
mov
inc
in
notl
fs
imul
in
mov
aas
inc
popf
xchg
lods
stos
pusha
jne
mov
or
mov
jno
and
jnp
add
aas
imul
mov
or
popf
addr16
jae
or
cwtl
enter
addr16
stc
push
cmpsb
mov
or
adc
cli
bndstx
sti
jp
push
or
dec
iret
test
push
jo
insl
rclb
push
mov
xchg
jbe
es
xchg
xchg
in
scas
repnz
cmpsl
cmp
mov
popf
mov
popa
push
pushf
push
jb
adc
inc
push
in
push
fs
clc
loopne
xorl
xchg
test
jo
inc
or
out
dec
xor
push
inc
and
and
call
push
xor
bound
push
js
loop
loope
xor
shll
daa
mov
int3
aam
scas
inc
call
adc
sub
jbe
push
cmc
jmp
out
adc
daa
incb
mov
dec
fistl
mov
pop
jns
jmp
jp
add
fidivrs
sbb
loope
adc
into
push
and
adc
xchg
jp
sbb
xor
je
jg
mov
or
in
loop
dec
or
ds
fidivl
adc
jns
int3
push
das
into
stos
aaa
dec
mov
and
je
rcll
xor
filds
rep
ret
das
icebp
mov
add
mov
sbb
sbb
cmp
jecxz
sub
mov
std
arpl
or
jl
ret
mov
clc
push
adc
xchg
cmpsl
fnstenv
dec
sahf
lds
xor
loope
pop
repz
mov
popa
cli
jae
sarb
loop
cmp
repz
lock
pop
lods
enter
rorb
xchg
leave
icebp
lock
repz
fbstp
cmp
imul
cwtl
add
sbb
mov
or
sub
and
dec
lret
scas
jge
arpl
or
cmpsb
cmp
ret
aad
sbb
mov
cli
jmp
push
int
ljmp
adc
popf
rcll
sub
mov
adc
je
xor
popa
sbb
int3
inc
and
add
das
sbb
and
ljmp
rorb
or
shlb
rorb
cmc
scas
out
addl
in
inc
sahf
outsb
mov
add
fnstsw
xor
neg
xchg
xchg
mov
mov
aas
outsb
stos
jecxz
lods
cmp
sti
lock
decb
es
lret
cltd
add
jle
cmp
pop
fisubrl
mov
or
mov
loopne
mov
roll
xor
sbb
shlb
cmp
xchg
test
jno
sbb
mov
mov
add
inc
cmp
cmc
outsl
loope
fdivl
jno
leave
mov
inc
jg
ja
xchg
mov
cwtl
mov
xchg
push
mov
in
pop
sbb
sbb
outsl
cltd
lds
mov
adc
scas
fiadds
jo
test
adcb
add
xchg
stos
mull
mov
cmp
fldt
int
xchg
jbe
pop
test
leave
mov
mov
or
or
movsb
inc
jbe
ss
add
sbb
pop
dec
addr16
stos
repnz
xchg
push
mov
cmpsl
adc
push
mov
adc
pop
es
mov
mov
or
ret
inc
push
sti
and
adc
fimull
add
inc
sbb
dec
in
mov
xchg
xor
mov
pop
sbb
arpl
push
pushf
jnp
pop
lret
cs
orl
inc
jmp
dec
insl
pop
insl
mov
lret
cmp
test
das
in
ss
mov
adc
inc
sbb
filds
pusha
inc
lods
sub
popa
cmp
repnz
cmpsb
dec
stc
add
adc
push
jge
divl
repz
movsl
push
ret
or
push
pusha
push
das
repnz
shlb
sarl
movsl
aaa
xchg
adc
mov
sti
jle
nop
shr
pop
xchg
loopne
jns
pop
ret
mov
xor
jg
and
dec
cmpsl
and
mov
push
mov
jb
xchg
push
jns
jecxz
or
stos
lret
dec
test
aas
inc
mov
out
cmp
int
add
adc
loopne
loopne
es
scas
pop
nop
push
sub
mov
frstor
vmovsldup
aas
pop
sbb
cmp
or
xor
xor
scas
out
push
cmp
aas
out
les
je
pop
dec
cli
test
pop
sub
mov
xchg
push
cli
stc
js
xchg
push
test
sub
add
adc
adc
ficoms
inc
and
adc
call
int3
sbb
fmull
or
out
iret
mov
add
and
imul
or
lahf
rol
inc
scas
test
ja
stc
pop
cmp
push
jne
xor
lds
mov
mov
out
jmp
mov
cltd
mov
mov
data16
xor
addr16
es
pop
data16
std
add
mov
fadd
xchg
std
push
xchg
fucomp
cmc
aad
add
stos
xor
das
popa
jns
push
inc
fcmovu
fsts
test
adc
mov
int3
lods
push
lret
adcl
fdivrs
mov
push
pop
pop
scas
adc
in
ljmp
out
js
jle
dec
flds
pop
enter
popf
push
stos
cmp
popa
imul
out
sbb
mov
movsb
ret
lea
pop
mov
jne
push
mov
in
outsb
sbb
outsb
or
adc
push
pop
sahf
outsl
aas
mov
mov
test
pop
xchg
mov
gs
jb
js
sbb
imull
mov
jae
fdiv
nop
hlt
shr
jl
pop
arpl
xor
mov
xchg
push
fwait
inc
repz
fldcw
aam
jmp
mov
pop
daa
jb
fidivrl
lret
sbb
mov
xchg
rcrl
jmp
xor
jno
mov
ja
or
cs
aaa
pop
dec
sar
fs
shrb
mov
inc
or
das
mov
lock
or
out
pop
xchg
push
push
dec
mov
xchg
shrb
iret
roll
jmp
sbb
in
adc
outsl
xor
ret
insl
adc
std
rcrl
les
jno
nop
dec
pop
shl
mov
pop
insl
pop
or
and
inc
js
jmp
ret
or
mov
shlb
cmp
cmp
sbb
fwait
out
mov
sahf
daa
iret
repz
aas
mov
xchg
out
cld
pop
into
pop
cmpsl
pop
jne
and
fcmove
inc
pop
add
xchg
mov
sti
mov
inc
lcall
sbb
call
mov
xchg
or
adc
pop
mov
fsubr
int3
jbe
fldt
std
dec
cmp
inc
pop
popa
dec
xlat
mov
roll
xor
stos
push
testb
shrl
sub
xchg
pop
add
mov
lahf
fstps
imul
inc
aas
mov
mov
or
sbb
data16
loop
xchg
inc
pop
arpl
sbb
bound
bound
mov
mov
fwait
push
dec
inc
and
cltd
test
movsl
popa
popf
jle
or
pop
movsb
pop
loope
mov
lock
push
iret
inc
fcoms
lahf
xchg
loop
std
arpl
xorl
sbb
jmp
es
enter
repz
pop
cmp
decb
int
sahf
xchg
clc
sarl
and
pop
cwtl
add
sbb
frstor
mov
or
es
les
out
inc
jmp
ds
pop
adc
rcrb
daa
notl
dec
inc
dec
pop
inc
popa
jbe
notb
fcomps
fs
xor
mov
jno
insb
divl
aaa
cmp
ret
lret
push
pop
push
push
es
mov
xchg
outsl
ret
pop
lods
insl
or
call
ret
mov
scas
sub
or
or
pop
mov
outsl
mov
cwtl
stos
loop
in
pop
push
sub
aad
pop
flds
scas
add
sub
pop
sbb
jo
fdivp
adc
mov
mov
fucom
adc
lcall
jg
clc
cmp
jl
xor
mov
daa
lea
ret
int3
jne
sahf
lret
mov
xchg
pop
xchg
push
movsb
call
jmp
xchg
es
or
andl
pop
fsubl
cmp
xor
ss
or
mov
out
std
jge
fs
xor
imul
cltd
xor
add
ret
outsb
adc
push
in
test
jae
add
fdivrs
ja
jno
xchg
cli
sahf
push
popa
je
inc
jle
xor
xchg
and
pushf
cmc
iret
notb
cmp
test
sbb
lret
and
xchg
and
outsl
scas
fadds
mov
mov
outsl
repz
mov
js
rcll
hlt
pop
or
mov
outsl
cmp
xlat
ja
dec
pushf
push
es
jbe
sub
ret
xor
test
inc
adc
pusha
outsb
mov
jb
outsl
mov
sbbl
adc
stc
sub
stos
lock
push
ljmp
pusha
int
shl
sahf
in
jns
xchg
mov
cmp
sahf
popa
jmp
popf
dec
push
psubusb
ficomps
pop
das
jg
dec
ror
and
xor
lds
inc
pop
adc
mov
mov
sbb
hlt
jbe
fcomps
iret
data16
add
jbe
adc
imul
jg
fsubrs
or
mov
inc
dec
fdivrl
bound
jno
negb
xor
movb
ja
mov
outsl
jg
std
stos
lea
mov
add
insl
rcrb
lock
cmpsb
pushf
cmp
jp
inc
movsl
add
mov
mov
or
ljmp
popa
rol
popl
les
mov
jo
pushf
push
out
cmpsb
sub
test
inc
stos
lds
sub
jecxz
push
adc
lods
out
arpl
or
mov
cwtl
rorb
mov
mov
stos
xchg
or
push
add
addr16
rcrl
in
fmuls
mov
sub
sbb
loope
popa
pop
sbb
push
sub
cmc
cmp
mov
push
fcoml
adc
jo
in
push
stos
sub
inc
outsb
aam
xchg
gs
out
sbb
cmp
mov
int3
into
lods
cltd
push
inc
paddusb
or
dec
mov
fldl
pop
nop
dec
sub
mov
dec
aad
inc
nop
addb
cmpsb
mov
loope
cmc
vhsubpd
in
outsb
popa
cmp
insb
cmp
cmc
imul
sub
test
xchg
mov
mov
stos
sbb
callw
dec
sbb
xor
shlb
and
insl
push
ret
addr16
or
jne
ds
ret
fisttpl
dec
jo
popf
cmp
stc
cmp
dec
pop
mov
add
int
push
enter
mov
fists
outsb
sahf
fstpt
inc
jg
sbb
addl
fs
jp
cmp
callw
cmp
dec
jecxz
cmp
jge
sarl
loopne
push
test
add
xlat
jno
pop
lret
push
cli
jmp
ljmp
sub
or
inc
and
dec
leave
add
lods
dec
jno
mov
shrl
rorl
test
mov
test
pop
and
add
leave
outsl
pop
xor
mov
mov
mov
ss
sub
int
sbb
iret
xchg
and
jecxz
mov
add
into
stc
jge
pop
inc
js
dec
cmp
xor
jae,pn
in
sub
loopne
and
pop
mov
sub
xchg
lahf
mov
jno
cmp
iret
xor
rcrb
xor
and
rcl
mov
movb
fists
inc
jns
push
in
jp
xor
cmp
mulb
and
lret
orl
fs
out
push
cmp
and
dec
sbb
add
popf
out
mov
xchg
jp
xrelease
mov
mov
in
testl
mov
fistps
jne
sub
out
lahf
xor
and
rclb
js
inc
add
inc
inc
adc
call
je
rolb
addr16
outsb
rclb
mov
mov
xchg
les
jmp
test
sahf
fs
inc
aad
mov
dec
mov
ljmp
pop
mov
fs
enter
jge
stos
xor
jns
imul
in
push
adc
insb
out
call
mov
les
mov
cmpsb
popf
mov
out
sbb
sub
pop
ja
mov
loopne
in
sub
adc
add
push
mov
out
aas
arpl
loope
hlt
pop
xchg
mov
lds
adc
dec
das
fstl
scas
movsb
inc
fwait
xor
test
inc
inc
rcl
cmp
and
add
dec
jb
xchg
imul
mov
jnp
jge
pop
jne
orl
aad
in
mov
jne
loope
push
data16
sbb
aam
mov
inc
and
adc
sbb
mov
ja
push
idiv
iret
subb
shl
gs
cmp
cmp
mov
js
test
ss
mov
sbb
roll
int
push
add
mov
sbb
or
jae
push
repnz
sub
or
dec
shlb
faddl
xchg
icebp
lods
mov
mov
je
xchg
lahf
lods
insl
mov
mov
adc
imul
lret
ljmp
shlb
adc
loope
lea
cmp
outsl
or
and
aas
push
into
cld
hlt
pop
push
cli
push
lock
xor
divb
int3
mov
out
sub
fcompp
lahf
mov
mov
fnstcw
mov
pop
imul
cltd
pop
pop
mov
daa
fsubs
lds
les
sbb
dec
adc
std
ds
fmul
fwait
add
push
imul
inc
cmp
ficompl
xor
sbb
cmp
xchg
lock
mov
testb
mov
dec
mov
mov
cmp
out
xor
dec
and
cmp
dec
add
test
out
push
inc
mov
out
or
inc
in
adc
scas
shrl
lea
push
or
pop
adc
xchg
into
jbe
xchg
scas
pop
mov
push
mov
mov
shrl
mov
push
mov
in
and
push
ds
sbb
add
mov
stos
test
addr16
dec
push
push
sub
in
jae
mov
andl
sti
aas
in
out
shrb
fstl
sti
cmpsb
mov
sbb
stc
jl
xchg
fstl
push
mov
cmp
push
add
adc
div
addr16
jecxz
je
inc
xor
xor
pop
adc
inc
iret
movsl
mov
add
std
outsb
mov
andb
pop
js
inc
enter
xchg
xchg
adc
icebp
mov
xchg
adc
jns
jmp
out
push
mov
dec
mov
mov
cmc
jbe
dec
into
lret
sahf
loope
iret
es
jne
clc
dec
pop
in
push
xchg
jg
call
mov
bound
sbb
push
out
push
inc
xchg
scas
insl
jge
mov
loop
or
cltd
fcmovnbe
outsb
cld
cmc
jg
xchg
or
push
js
xchg
jp
es
pop
mov
loopne
mov
and
xor
sbb
fwait
sbbb
dec
orb
inc
jle
mov
dec
lods
or
sub
jecxz
mov
test
shrb
cmpsl
or
repnz
aad
stos
adc
negl
sbb
cltd
dec
mov
repz
and
ret
pop
cmp
xchg
mov
push
popa
push
test
fnstcw
push
or
mov
pop
bnd
push
lret
pop
cmp
jl
ss
mov
into
push
dec
mov
pop
mov
inc
ljmp
mov
xor
leave
add
popa
ljmp
or
jg
fiaddl
sbb
xor
stos
rcll
adc
das
iret
hlt
ss
out
gs
fisubl
cmp
mov
mov
cmpsl
aad
pop
lea
fdivr
push
lods
mov
divps
xchg
xchg
outsb
loopne
fs
pop
jns
test
mov
mov
outsl
cmp
add
push
mov
pop
stos
sbb
mov
inc
or
jb
mov
clc
pop
mov
jne
dec
jae
or
push
push
push
mov
and
ret
mov
sbbl
or
cmc
add
jmp
shrb
pusha
repnz
mov
add
cmp
push
inc
xchg
data16
cmpb
mov
loop
clc
ss
and
aad
nop
xchg
inc
push
rcll
cmp
mov
sar
psubusw
jno
pop
ja
pop
cli
mov
mov
xchg
pop
mov
or
gs
pop
cmp
xchg
pop
sub
repnz
xchg
fwait
imul
ret
pop
fucomi
loope
repnz
mov
adc
dec
sub
mov
mov
test
adc
int
arpl
cmp
insl
int
pop
inc
int3
or
daa
aaa
popa
rorl
add
js
pop
fs
cmp
or
aam
rcll
add
jae
mov
in
dec
jl
push
xchg
mov
stc
std
jno
push
fdiv
sbb
mov
js
inc
movsb
pop
loope
repnz
addl
dec
nop
stos
sub
mov
and
jnp
nop
sbb
or
enter
jnp
mov
xchg
adc
repz
fisubrs
aad
mov
mov
cmp
mov
inc
mov
mov
mov
pop
push
jbe
pop
jge
mov
inc
or
cmp
xor
add
sbb
sbb
mov
and
fsub
xor
stos
jnp
jecxz
jmp
scas
gs
imul
cld
das
xlat
pop
ret
pop
es
jmp
ds
jae
out
ss
movsb
ljmp
and
inc
mov
das
push
shlb
fistpl
cmp
inc
stos
sub
flds
lea
enter
test
test
mov
ljmp
jbe
loope
popa
mov
xor
push
dec
jb
adc
sub
xorl
jg
repz
xorb
mov
sub
sub
frstor
repnz
ds
jo
xchg
lcall
outsb
testb
rorb
inc
repnz
sti
xchg
lods
loope
les
inc
sub
or
aam
mov
in
idivl
jg
jl
pop
insb
dec
push
out
dec
push
jbe
adc
je
mov
mov
fisubrl
jge
repz
or
test
jnp
xchg
xor
mov
jno
pop
lds
mov
xchg
imul
pop
test
imul
inc
mov
jg
js
shll
rcrb
dec
out
or
add
mov
imul
es
jg
dec
std
daa
lods
cmp
inc
pop
jbe
jecxz
cmp
sub
cmp
inc
jl
mov
and
add
add
xchg
ret
cld
cmp
inc
stos
adc
rorl
cmpsl
cmp
hlt
xchg
lock
pop
mov
xchg
stos
cmp
or
rcrl
cs
sbb
xchg
fisttpll
test
jb
xor
dec
pop
and
jno
out
mov
add
addb
leave
cltd
jae
dec
add
adc
pop
pop
dec
sti
xchg
das
stos
shll
dec
ja
inc
loop
cwtl
xor
scas
cmc
sahf
loope
or
cmp
push
into
call
mov
mov
pop
xchg
les
xor
jmp
cmp
in
push
xor
bound
fsubrp
jmp
inc
jecxz
adc
push
cmp
in
and
mov
repz
fsubs
notb
jg
in
leave
sub
movsb
loope
sbb
icebp
movsl
jo
and
movsb
imul
outsl
sub
ss
mov
push
aas
cmpsb
clc
inc
sub
daa
popa
add
aaa
fdivl
cmpsl
pop
lods
jmp
jl
aam
xchg
adc
cmpsl
out
cwtl
jnp
adc
in
das
adc
loope
sbb
dec
lcall
out
pop
dec
mov
clc
stc
filds
mov
mov
mov
movhps
inc
or
push
and
xchg
jbe
push
or
cmp
loop
sbb
push
jbe
int
fmull
mov
or
xor
pop
inc
std
repnz
sbb
aam
iret
cmp
mov
sahf
push
sarb
inc
mov
lods
or
jg
cmp
call
mov
add
mov
into
pop
push
test
fnstenv
push
xchg
jmp
push
out
cltd
adc
dec
imul
mov
loopne
popf
fsub
negl
shll
ljmp
in
lods
test
cmp
ja
jbe
in
out
add
cmpsl
je
inc
stos
pusha
ret
pop
dec
ja
je
mov
jo
call
shlb
out
jge
and
imul
cmp
inc
fwait
push
mov
mov
sbb
shlb
and
push
loop
fcompl
mov
adc
sbb
dec
mov
sub
cmp
imul
and
lret
es
pop
test
movsb
call
daa
lds
dec
add
std
jnp
jge
xchg
icebp
mov
jnp
movb
sub
xlat
mov
cmp
pop
push
in
pop
xor
inc
sbb
hlt
nop
loope
daa
lds
rol
push
jge
sub
imul
call
or
imul
adc
jne
rcll
jns
push
jp
in
add
incb
pop
popf
cmp
xchg
les
cmp
and
or
mov
xor
mov
arpl
stos
or
inc
dec
xor
fdivp
jo
mov
ljmp
movsb
xchg
dec
push
ljmp
lods
aas
int3
add
lea
jns
imul
and
mov
cmp
mov
pop
stc
xor
pop
sub
cmp
xchg
push
push
nop
mov
xadd
xor
xchg
adc
push
xor
into
jmp
inc
push
pop
adc
push
and
adc
or
cld
mov
add
pop
push
or
push
dec
arpl
outsb
pop
pop
cmpsl
aad
xchg
and
sub
popf
or
aas
cld
js
nop
jno
xor
xchg
test
fs
inc
pop
inc
mov
cmp
mov
mov
pop
pop
push
mov
xor
pop
jmp
jl
pop
sub
dec
shl
dec
dec
sahf
or
sbb
push
and
ss
negb
jo
rcr
add
dec
out
inc
imul
pop
lea
filds
dec
in
cmp
pop
adc
sbb
mov
inc
sub
mov
push
lods
adc
ret
inc
lods
jecxz
std
dec
shrb
mov
dec
mov
mov
negl
mov
mov
aaa
xor
adc
dec
xchg
mov
sbb
sbb
mov
bound
insb
or
notl
fstpt
sar
xchg
daa
addr16
loopne
stc
xchg
jg
lret
aam
scas
sub
cli
sub
lret
in
clc
cmp
or
test
adc
out
out
jb
pusha
mov
pop
jns
insb
sub
lea
sbb
outsl
xorb
push
pop
aad
cmp
lods
popa
dec
mov
or
push
sahf
pop
cwtl
push
mov
sbb
rcrl
cltd
inc
ss
loope
out
sub
lret
mov
enter
or
notl
mov
pusha
insl
mov
cmpsl
or
inc
outsb
inc
addr16
mov
sahf
push
popa
pop
stc
sar
cmp
lret
mov
jbe
jns
sbb
push
lock
and
sub
repnz
imul
mov
pushf
icebp
xchg
jns
push
loope
jp
cwtl
leave
rcrl
xchg
test
int3
or
push
cmc
mov
mov
rorb
jns
xlat
mov
lods
dec
mov
cmpsb
ljmp
mov
test
or
loopne
fistl
add
cmc
push
cmp
das
rcr
cmp
jo
or
push
divl
lret
sbb
and
loopne
and
movsl
pop
mov
shl
lret
pop
mov
jns
fs
xchg
jbe
mov
fs
mov
xor
int
mov
add
cs
aaa
push
movsb
imul
xor
or
orb
xor
mov
ljmp
in
push
xor
ja
cli
paddusb
sahf
int
dec
out
gs
mov
cmp
lods
into
or
mov
mov
sbb
dec
daa
scas
faddp
orb
mov
arpl
push
test
xchg
test
out
push
fstps
mov
sbb
sbb
repnz
add
and
mov
movsb
jl
jo
imul
or
clc
cld
out
sub
pusha
sub
sub
fs
xchg
outsb
jp
dec
jg
mov
stos
dec
xchg
mov
daa
xchg
xor
mov
pop
mov
je
lret
frstor
dec
shll
sbb
pushf
popf
idivl
lea
lahf
in
mov
and
call
in
call
scas
shlb
or
sbb
mov
loop
sbb
movsb
cmp
dec
rcl
cmpsl
test
mov
mov
inc
sbb
adc
xlat
and
mov
imul
in
int3
std
call
cmp
inc
stos
inc
inc
xchg
ds
inc
add
outsl
push
fwait
cmp
or
adc
sub
dec
je
cmp
sub
push
int
das
rolb
and
movsb
mov
dec
adc
xchg
mov
sub
dec
cmpb
shlb
aas
repz
push
mov
ret
or
add
test
les
fisttps
fists
aam
fnstenv
and
out
jne
sbb
cmpsl
std
pushf
leave
jmp
out
out
jmp
inc
imul
leave
ljmp
and
adc
cmp
jo
scas
mov
sub
stc
lahf
sahf
mov
adc
scas
cltd
jle
call
in
out
jnp
jg
add
pop
jbe
test
scas
jmp
movsb
stos
call
xor
adc
imul
cmp
add
das
insl
adc
bound
leave
mov
pop
jae
lret
pushf
adcl
mov
add
sbb
jb
das
sbb
add
lock
and
lahf
shlb
mov
adc
ds
or
adc
and
mov
mov
push
or
add
lds
cmp
js
lea
pushf
sbb
std
aaa
mov
pushf
sti
jp
push
inc
movsl
inc
jg
ret
jle
hlt
insl
push
push
sub
imull
negl
sbb
jmp
aam
aad
fdivrs
or
add
aam
movsb
rcrb
shrb
fdivl
mov
imul
pop
cmp
test
sub
je
mov
mov
outsl
in
adc
insl
subl
aaa
sbb
sahf
push
mov
jae
sbb
sahf
les
ret
cmpsl
test
pop
stc
xchg
es
int3
mov
nop
leave
out
test
pop
ss
mov
js
inc
int3
lods
lahf
dec
mov
filds
sbb
fnstsw
mov
fistps
pushf
push
loop
lds
lahf
stc
jmp
mov
adc
xor
sbb
popf
rcll
sbb
adc
ljmp
jle
add
lret
inc
fiaddl
push
jl
addr16
sbb
test
sub
es
or
ret
sbb
shlb
insb
repnz
sarl
jnp
jmp
andl
mov
jl
cmpl
jg
and
into
rorb
outsl
mov
push
inc
movl
popf
xchg
aaa
repnz
mov
mov
iret
lods
test
push
xchg
cmpsb
cmc
fnstsw
cwtl
das
sbb
adc
test
arpl
imull
inc
aaa
xor
xchg
outsl
jns
jno
xchg
pop
mov
mov
jns
das
jg
pop
popf
lahf
aaa
and
out
adc
hlt
rol
sbb
test
pop
jp
repnz
and
fiaddl
test
or
outsb
or
bound
mov
je
or
test
aaa
push
xchg
add
lahf
lock
shr
fs
pop
add
push
cmpb
out
arpl
push
push
cmp
fsub
insl
ret
mov
jbe
movlps
xchg
jle
repz
jo
repnz
aas
xchg
xchg
bound
mov
and
int3
sbb
xor
mov
dec
inc
lea
test
sbb
shlb
lds
add
mov
dec
outsb
and
inc
leave
cmp
inc
sub
jle
pop
es
and
mov
mov
inc
ljmp
loop
out
pop
mov
test
adc
push
pop
into
push
cwtl
xor
mov
cltd
insb
stos
imul
lds
out
cmpb
cltd
mov
repz
subb
mov
pusha
and
loop
call
adc
jb
nop
je
lret
lret
and
pop
js
mov
jle
cmpsb
into
js
add
push
imul
stos
and
fucomp
sub
push
push
cltd
mov
andl
mov
ror
test
jge
lds
lret
arpl
mov
mov
jmp
pop
and
fnstcw
rcr
mov
pop
into
inc
stc
cld
test
pop
loop
sbb
sbbb
outsl
les
xchg
out
insl
xchg
jp
xor
ficompl
das
cwtl
mov
repnz
fidivs
rcrl
ss
pop
mov
into
aam
mov
dec
out
jecxz
inc
sbb
jmp
sub
xlat
ds
ljmp
insb
movsl
shll
adc
hlt
out
lret
xchg
jnp
inc
inc
inc
clc
mov
cld
jnp
filds
cmovae
scas
lcall
mov
xadd
lea
iret
stos
or
xlat
aaa
aaa
push
mov
add
xchg
xor
xchg
movsl
jl
xchg
scas
sbb
xchg
ret
mov
sub
push
inc
cmc
adc
scas
insb
ljmp
and
out
cli
mov
cmp
dec
sti
pop
inc
fsub
xchg
sub
rcrl
pop
das
js
decb
repz
or
hlt
adc
mov
push
cld
mov
sbb
inc
ss
testb
call
push
pop
pop
movsl
loope
push
sbb
roll
jecxz
in
ret
int
das
mov
ss
xchg
push
imul
pop
cwtl
or
lods
rolb
cmc
pop
ret
xor
push
in
jmp
inc
ljmp
repnz
dec
jae
jecxz
mov
or
sahf
lret
lds
and
ljmp
mov
adc
adcb
ja
test
jge
fcmovnbe
outsl
cmp
int
mov
int3
lock
ljmp
movb
cli
sysexit
xor
pop
mov
popf
push
lock
sub
subl
das
pushf
and
fisubrl
and
push
sbb
repnz
fistl
in
test
add
fidivs
insb
imul
cmpsb
gs
jp
xor
fsub
mov
nop
or
push
aaa
popf
push
test
inc
push
add
outsb
std
lahf
arpl
push
fsubrp
in
gs
pop
inc
icebp
inc
cmpl
jl
xchg
cmp
pusha
rcll
imul
out
push
daa
sub
jl
xchg
outsl
outsl
add
inc
cs
iret
lea
xchg
in
out
das
jne
push
std
bound
inc
hlt
mov
aad
xchg
and
lcall
cltd
sub
scas
and
cmp
xor
insl
cmp
daa
sbb
mov
jb
rcrl
movsl
xchg
pop
aad
popf
mov
andl
notb
xchg
rcll
push
iret
shr
cmp
int3
out
lahf
mov
lret
pushf
lea
sub
aam
mov
jo
aad
push
inc
cmp
test
insb
lret
dec
and
and
sti
add
call
push
xorb
repnz
dec
and
dec
pushf
out
mov
add
movsb
lods
pop
xchg
mov
push
ljmp
loop,pn
ficomps
add
into
jge
stos
jo
xchg
in
pop
das
inc
sub
xchg
das
lahf
dec
sbb
jno
pop
lret
lcall
mov
push
xorl
fcmovnu
fistpll
or
ljmp
pop
out
popa
mov
stos
xor
push
std
popf
push
outsb
mov
int
jge
cwtl
sbb
adc
cmc
ret
das
stc
call
sub
sbb
clc
jge
xlat
cmp
mov
xchg
dec
cmp
lods
in
test
xlat
addr16
shr
aaa
outsb
sbb
lcall
mov
ljmp
mov
mov
addr16
in
pop
dec
jl
or
cmp
sti
stos
add
ret
sub
adc
mov
jno
xor
inc
insl
in
aad
testl
and
push
int
adc
nop
push
cld
incb
dec
xor
into
sbbl
ret
mov
mov
xor
mov
fsub
fiaddl
jno
push
jnp
and
idivb
ja
sbb
lcall
inc
aas
jle
lret
mov
mov
sbbl
in
xchg
push
sahf
dec
pop
addl
add
pop
mov
cmp
inc
and
pop
sbb
icebp
adc
aad
fcoml
loope
inc
bound
jb
pop
adc
lret
les
xchg
rcrl
xchg
pop
cld
pop
adc
adc
dec
insl
push
or
mov
jno
and
test
in
mov
int
add
fildll
jp
dec
sub
ret
inc
shll
mov
repz
enter
out
xlat
or
in
dec
cmp
push
mov
mov
fisttpl
rcr
lea
dec
movsl
clc
xor
inc
loop
lcall
adcb
aaa
add
out
sub
xchg
les
mov
aas
or
cmpl
pop
jnp
imul
clc
jge
jmp
pop
push
mov
lock
jl
in
sub
test
rclb
jg
lahf
cltd
sbb
pop
fs
and
fistpl
push
xor
pop
cli
mov
lods
cmpsl
insl
dec
push
adc
pop
insl
add
sbb
pop
dec
fildll
pop
aas
push
sbb
pushf
add
and
xchg
bound
fadds
ficoml
repnz
out
leave
inc
ficoml
std
mov
icebp
or
addr16
xchg
dec
pop
stos
movsb
aad
pop
and
fwait
aam
adc
xlat
mov
std
bound
xor
xchg
shlb
jge
ja
mov
ljmp
jle
or
jmp
inc
and
arpl
imul
subl
add
push
nop
ret
fdivrl
out
dec
jae
lret
ja
jmp
mov
stc
mov
and
and
imul
scas
sbb
fistps
ja
lcall
dec
adc
popf
mov
inc
daa
add
push
neg
test
repnz
and
ds
cmp
xlat
mov
adc
repz
ret
imul
push
cmp
sti
outsb
push
sub
xchg
fstps
inc
js
dec
aad
scas
pop
int
addb
stos
dec
sub
std
or
scas
jg
lcall
popf
clc
bound
fstl
cmp
notl
rep
cmpsb
and
into
adc
cmp
pushf
push
rolb
dec
cmc
call
cmpsl
popf
aaa
inc
mov
pop
or
into
cs
sbb
jns
clc
ds
in
sbb
mov
mov
stc
lret
pop
andl
push
inc
lea
nop
push
sbb
test
sub
outsl
cmp
ljmp
imull
repz
mov
push
test
dec
cmp
xchg
or
xchg
cs
push
inc
xor
mov
and
jae
stos
mov
sub
cmc
jbe
or
sbb
jle
jmp
sbb
pop
mov
lds
jecxz
pusha
in
cli
jb
nop
movsb
pop
in
fsubs
pop
das
xor
cli
mov
int
xor
popf
xchg
inc
adc
mov
clc
xchg
pop
mov
popa
dec
pop
orb
push
or
fucom
push
leave
lret
mov
xchg
mov
cmp
fnstcw
push
inc
push
addl
add
sbb
fsubs
jne
sub
ficomps
pop
inc
sub
pop
mov
jge
iret
in
or
daa
rcr
and
xchg
cmc
cmp
into
xor
mov
hlt
or
movl
lcall
pop
xor
mov
leave
push
pop
sub
inc
jge
pop
cmp
xchg
mov
xchg
sbb
nop
jbe
aas
mov
sub
mov
jns
repnz
and
xchg
mov
test
sbb
rol
add
push
sub
mov
test
sub
add
push
jmp
arpl
mov
mov
nop
push
or
movsb
test
das
adc
outsl
ja
mov
sti
push
fisubrs
ret
xor
push
lret
jecxz
dec
lea
pop
rol
sbb
xchg
push
andb
sbb
inc
pushf
imul
cmp
pop
xchg
mov
addr16
out
sub
jle
add
fstpt
pusha
jecxz
arpl
shrl
pushf
je
mov
ret
decl
in
std
push
outsl
pushf
push
jl
lds
popf
ret
out
jmp
cmp
lds
out
arpl
repnz
popa
shrl
add
adc
adc
push
out
cmp
ds
cltd
cmp
add
mov
call
aas
ficoml
out
sarl
inc
lahf
add
popa
xchg
cs
xchg
mov
cli
out
inc
xchg
mov
jmp
arpl
push
xchg
mov
fnstenv
xchg
jbe
cwtl
adc
idivl
jb
pop
in
adc
mov
dec
mov
sub
outsb
adc
mov
cmp
pop
rcll
lods
and
or
aas
jb
in
stos
ret
mov
dec
lret
add
nop
cli
or
sub
mov
lock
loope
in
f2xm1
cmp
inc
ljmp
in
cmp
stos
push
xchg
sub
es
orl
adcb
sahf
lock
out
add
pop
cli
pop
aam
xchg
cmp
jne
mov
fstl
out
lods
sub
dec
js
cli
pop
or
aas
mov
movsl
pop
xchg
lretw
adc
loop
jl
xlat
clc
sbb
mov
or
push
mov
testl
cmp
shrl
ds
push
fprem1
imul
leave
sub
cmp
clc
mov
xchg
jg
mov
xchg
loop
lret
ret
icebp
pop
inc
enter
add
cli
aaa
add
mov
sbb
cmp
imul
xchg
in
mov
add
sar
gs
fidivrl
dec
sti
jnp
cld
xchg
mov
test
adc
insb
inc
je
lea
sbb
js
fsubs
pop
cs
fsubs
and
arpl
gs
jmp
push
std
xor
pop
cmp
mov
inc
push
xlat
out
mov
iret
cwtl
pop
inc
cwtl
xchg
push
xorl
je
mov
fnstsw
fnstenv
jns
jl
sub
pop
insb
ret
aam
pop
pop
pop
mov
jno
mov
sub
jl
cs
les
into
mov
test
adc
lret
and
jge
int3
in
cltd
sub
pop
xlat
or
or
and
mov
loopne
inc
xor
pop
jbe
and
popl
cmp
sti
les
xor
or
sbbl
clc
dec
imul
push
pop
inc
js
mov
add
adc
ds
jge
fildll
test
or
bound
sbb
mov
fisubl
mov
cli
gs
sbb
in
fwait
mov
mov
xchg
cmp
jae
push
sbb
fwait
inc
sahf
cmp
and
divl
into
mov
push
xchg
add
daa
sub
mov
cmp
cmpsl
inc
jbe
pop
jmp
mov
pop
jb
jl
jecxz
jae
and
jle
hlt
jle
sbb
scas
or
push
sbb
xor
pushf
adc
pop
sub
push
in
jae
add
add
or
out
mov
dec
mov
add
mov
rcrb
lods
or
rcr
or
mov
pop
insl
add
loope
insl
jb
push
arpl
aam
jae
xor
sub
push
xchg
imul
xchg
aaa
mov
or
clc
lret
lods
cwtl
mov
mov
add
pop
ret
sbb
nop
xchg
xchg
push
push
sbb
aam
es
pop
mov
or
cmp
les
jmp
scas
cmc
out
fistl
clc
test
sub
adc
enter
outsl
es
lock
xchg
shrl
mov
lods
add
dec
sti
mov
mov
push
pop
inc
test
in
adc
das
mov
jecxz
jle
jb
add
js
divl
mov
lods
and
xor
sbb
push
mull
popf
out
xchg
jne
repz
jns
movsl
mov
out
ss
dec
mov
hlt
idivb
xor
cli
dec
cmp
fimull
cmp
repnz
mov
mov
push
insb
test
clc
sub
inc
stc
dec
int
popa
or
lds
ret
sbb
adc
xor
jbe
test
push
cmp
fwait
sbb
imul
out
rcll
sbb
jnp
les
stos
sbb
testl
xor
jl
enter
cli
add
aas
dec
push
ret
cmp
notl
push
out
gs
xchg
push
js
sbb
in
mov
or
mov
bound
push
sbb
cmpsb
lahf
inc
xor
aad
inc
xor
jae
inc
and
xchg
sti
mov
push
cltd
int
inc
es
clc
push
xchg
stos
ss
negb
add
leave
mov
imulb
jne
std
adc
dec
in
jb
ret
test
fmul
lea
pop
ljmp
dec
out
push
outsb
fildll
push
xchg
ja
xchg
ja
popf
fs
jl
sub
or
aad
lock
enter
dec
std
adc
call
fwait
and
test
lret
push
mov
dec
adc
jbe
stos
les
push
xchg
push
bound
sub
inc
cs
inc
mov
sub
lods
xchg
dec
out
fbld
mov
mov
mull
mov
stos
adc
jmp
inc
jae
jmp
lods
les
imul
push
and
insl
adc
fstpl
fwait
into
sti
rorw
cwtl
hlt
xchg
cmp
mov
add
sbb
out
test
leave
pop
mov
push
pop
xchg
lcall
and
cwtl
xlat
jbe
sbb
fnsetpm(287
push
adc
shlb
add
fcoms
mov
fcmovnb
push
xchg
adc
aam
pop
sbb
imul
adc
cmpsl
and
int
lahf
adc
push
xchg
adc
cmp
popf
imul
daa
gs
fwait
sbb
fstps
in
fsubs
cs
xchg
stos
ja
cltd
push
dec
mov
pop
test
xor
adc
aam
push
mov
add
push
daa
imul
lods
mov
mov
dec
mov
jae
int3
rclb
ss
out
adc
pop
loopne
notb
jne
test
sub
std
xor
adc
push
bound
dec
ljmp
cmpsl
xor
mov
push
or
movsl
hlt
pop
mov
dec
ret
jle
mov
jmp
popf
sub
inc
xor
xchg
into
mov
or
push
jl
lret
jae
test
pop
sti
arpl
enter
dec
push
jae
add
mov
jbe
push
data16
or
cmc
push
xor
xchg
imul
cli
scas
movsb
repnz
mov
aad
movsb
push
decl
or
cmp
mov
ja
sbb
test
push
xchg
cmp
adc
push
inc
test
fildll
dec
les
test
lret
cmp
into
cmc
cmpsb
stos
push
cld
inc
adc
and
cmp
test
stos
cwtl
dec
ja
mov
mov
es
rorl
xchg
mov
lods
pop
icebp
or
jae
enter
jg
cltd
pop
mov
iret
in
loopne
shr
mull
dec
jg
repz
ljmp
mov
stos
lahf
adc
jge
push
cmc
ret
sub
add
rcll
imulb
in
push
mov
cmp
fbld
rorl
arpl
aad
push
shrl
sbb
xchg
adc
lods
add
xorl
xor
hlt
stos
add
push
and
inc
mov
push
xor
test
lcall
or
jl
incl
imul
lret
xchg
jo
aaa
stos
xorb
cld
out
mov
js
fists
push
shrl
std
dec
ds
mov
mov
cwtl
test
mov
mov
xor
or
leave
into
pop
jecxz
fs
push
imull
test
lea
push
stos
out
cmpsl
sub
adc
jne
cs
fists
xchg
xor
sub
out
ds
scas
out
insb
sub
mov
jno
jns
fwait
xor
gs
dec
shl
pop
mov
add
fidivrs
mov
stc
cmp
inc
mov
jg
xchg
test
mov
jmp
out
fdivs
jae
and
adc
jle
or
add
pop
mov
xchg
xchg
jg
or
aas
scas
and
sbb
cmp
cmc
je
arpl
xlat
into
cld
leave
push
jbe
push
aaa
stos
lahf
adc
out
pop
push
dec
decl
jno
inc
cmp
dec
sbb
lret
in
jnp
lret
xchg
ljmp
push
fcomps
push
mov
fwait
sbb
sti
rcl
adc
mov
or
jle
call
mov
mov
les
fwait
jmp
xchg
pop
insl
mov
repz
cmp
lds
popa
and
mov
stos
in
add
adc
insl
ljmp
jnp
cmpsb
sbb
or
jge
lea
sub
sub
cmp
subl
or
into
and
add
adc
dec
les
and
out
dec
mov
cmp
dec
and
mov
xor
mov
pop
jb
fistps
lea
xor
jo
adcl
jae
imul
sbb
mov
xor
mov
in
mov
and
xchg
loop
push
inc
enter
out
scas
dec
cmp
andl
pop
pop
hlt
out
inc
mov
test
sub
lods
sub
mov
mov
cmp
push
lea
add
cli
test
inc
lcall
sub
mov
xchg
xor
imul
cli
jns
scas
or
sbb
aad
sti
sahf
inc
movsb
pusha
daa
dec
outsl
or
test
pop
mov
or
xchg
sahf
sub
ljmp
dec
insb
icebp
add
pop
pop
mov
or
push
call
sbb
test
cltd
mov
jl
adc
push
mov
pop
jecxz
lock
repz
cmp
dec
lahf
jns
test
es
pushf
les
add
jns
cmp
inc
or
mov
out
cmp
pop
and
lret
dec
push
cltd
fildll
fcmovnbe
lods
sub
xchg
adc
shrl
cmp
cmp
pop
stos
sahf
sbb
add
test
mov
mov
je
push
push
push
enter
and
pusha
sub
dec
dec
sub
ss
dec
fmuls
cmp
fldenv
xor
xchg
sbb
cwtl
xchg
sub
es
stc
jo
pop
pop
xlat
adc
jle
mov
out
adc
mov
test
ficomps
fisubs
ss
jle
rorb
fstpl
hlt
pusha
sbb
sbb
mov
outsl
or
les
pop
mov
sti
ss
int
or
add
push
lret
jecxz
test
xor
nop
lods
out
and
mov
adc
jns
pop
or
sub
int
or
mov
lret
movsl
push
mov
cmovno
sbb
dec
and
xchg
outsb
sub
int
repnz
fsubrp
sub
lcall
push
dec
jno
insl
addb
scas
into
mov
mov
sub
movsb
cmpsl
subps
xchg
mov
movl
pop
push
stos
mov
xchg
movsb
mov
mov
dec
test
xor
dec
sbb
cmp
adc
loope
jg
fucom
das
sbb
jp
jmp
mov
pop
enter
push
shlb
mov
sbb
andl
je
mov
push
out
fiadds
mov
jp
push
jo
iret
rorb
jo
adc
push
pop
out
sbb
jg
iret
mov
adc
outsw
xchg
stos
pmovmskb
insb
lahf
sbb
mov
push
sub
adc
xor
pop
insb
arpl
jmp
or
lock
sbb
push
insl
cli
mov
pop
mov
cmpsb
insl
add
mov
push
setns
in
and
testl
shll
daa
rcrb
shll
inc
pop
cld
out
mov
pop
std
pusha
data16
xchg
mov
cmp
or
cmp
je
lods
jnp
sub
sbb
and
mov
sahf
mov
or
std
dec
aaa
movsl
das
sbb
pop
sbb
cmp
rolb
test
lret
or
jecxz
dec
xchg
ljmp
mov
lock
mov
adc
jo
pop
imul
add
das
stos
and
aad
add
fildll
sub
mov
daa
pop
hlt
stc
pop
test
lods
and
rolb
arpl
loopne
push
fsubrl
lahf
xor
in
mov
cwtl
jmp
decb
cltd
stc
jns
outsl
loopne
inc
inc
add
mov
pusha
sbbl
scas
pushf
dec
sub
lea
push
push
test
pop
jns
xchg
mov
sahf
xchg
std
mov
pop
int3
or
test
xor
mov
or
out
call
dec
fcomps
movsl
in
inc
push
adc
jne
jns
mov
sub
mov
jle
jne
ja
adc
aam
into
add
test
xchg
dec
mov
test
push
push
push
mov
std
cmp
fisttpl
jo
sbb
js
add
add
es
or
mov
pop
jo
xor
dec
fidivl
add
fwait
andl
test
and
outsb
test
nop
mov
stos
leave
dec
mov
jl
push
or
adc
int
push
das
ss
or
mov
insb
loopne
mov
int
loop
ret
test
push
mov
push
in
pop
lret
sub
nop
out
push
leave
jmp
push
mov
push
leave
xlat
sbb
push
mov
push
mov
ljmp
adc
stos
jle
push
ret
adc
add
mov
push
mov
push
jno
lret
dec
push
fmul
add
nop
arpl
es
xchg
sub
jmp
sbb
push
mov
pop
pop
mov
lods
mov
jae
pop
mov
sub
and
insb
enter
mov
pusha
andb
imul
cmp
fwait
outsl
cli
loop
jbe
or
outsl
sub
leave
or
inc
inc
add
clc
add
jne
je
insb
dec
mov
test
mov
cmp
jle
test
pop
dec
xchg
inc
push
cwtl
push
adc
in
hlt
fucompp
fistpll
ds
insb
jg
movsb
int3
imul
out
pop
dec
add
imul
jge
loop
pop
push
jne
idivl
out
iret
dec
cltd
insb
mov
add
aaa
or
mov
mov
movsb
lods
push
arpl
inc
ja
lds
cmp
cld
mulb
cltd
push
or
or
out
add
cmp
jbe
jbe
xchg
pop
cmpsl
iret
or
pop
inc
push
sub
test
or
add
pop
inc
cmp
jl
pop
outsb
dec
mov
dec
fxch
cmp
mov
fistpll
out
loope
mov
jo
andb
jmp
data16
incb
fwait
incb
xchg
cs
xor
lods
add
mov
test
mov
stos
loope
ja
pop
add
ljmp
popf
inc
aam
dec
aas
packsswb
sbb
ljmp
shlb
jl
aam
jne
add
pop
cmp
jbe
aam
into
int
fnstsw
mov
xchg
sub
mov
popf
stos
mov
sbb
lahf
loop
shlb
xchg
jne
ret
jo
push
lods
roll
jmp
xlat
icebp
push
cmp
xor
and
std
push
cmp
mov
roll
cwtl
into
outsl
xor
cmc
ljmp
adc
dec
inc
aad
jne
dec
std
lret
sub
pop
repnz
daa
mov
aam
outsl
add
xor
mov
rolb
cmp
sti
imul
mov
scas
adc
jmp
mov
sbbl
outsb
and
push
lret
ss
xchg
sahf
lock
popa
xchg
jecxz
jo
ja
in
movsl
dec
aad
leave
ds
xchg
pushw
insl
andnps
cmp
popa
test
sub
and
repz
push
cmp
cmp
sub
push
lds
mov
mov
xchg
sbb
stc
mul
push
ret
add
cs
pop
xor
ss
popf
sbb
test
jle
fldt
mov
jno
lret
adc
cmp
dec
add
repnz
jno
movsl
std
sti
js
cltd
loop
push
or
scas
or
dec
aas
fistpl
lahf
push
inc
leave
cli
sub
push
into
mov
and
sbb
rcrb
je
rcr
push
test
jb
addr16
mov
imul
sbb
adc
jns
js
xchg
xchg
test
sbb
sub
test
faddp
or
cli
xor
testb
sarl
mov
sti
add
aad
sbb
and
cmp
mov
jl
inc
pop
xor
jg
mov
rcl
dec
ret
in
test
add
clc
popa
xchg
cld
cmp
negb
arpl
push
mov
or
into
sbb
ret
push
pop
dec
loop
dec
das
insl
xchg
ja
aas
test
sbb
imul
les
sub
or
pop
bound
leave
out
aad
sub
pop
pop
cmp
ret
daa
sub
sub
rcrb
pop
adc
pop
add
mov
lock
adc
popf
pop
pop
cmpsb
imul
adc
push
aam
inc
pop
outsb
xor
push
in
add
mov
and
out
and
dec
sub
ss
sbb
add
jge
cs
cmc
fs
mov
dec
push
roll
dec
pusha
addr16
and
xchg
stc
push
jmp
sbbl
jl
dec
sub
xchg
xor
loope
sti
fs
std
int3
popa
mov
jle
inc
cmp
cmc
arpl
or
jmp
inc
inc
push
out
stos
shlb
or
sub
repz
test
pop
jo
insb
aaa
push
ja
mov
pop
adc
pop
xor
dec
and
xchg
insb
popf
leave
xlat
inc
adc
outsl
int
cmpsl
and
out
xchg
outsl
fwait
jle
mov
dec
in
ljmp
cmc
in
test
mov
hlt
inc
jp
sub
fildl
int3
sarl
sbb
push
inc
mov
fdiv
gs
rolb
sub
movb
pop
out
dec
pop
stos
mov
icebp
jne
int3
scas
rorb
jl
xchg
adc
adc
mov
jl
aam
jmp
jo
pop
out
dec
subb
lcall
cmpsb
adc
bound
xor
sub
rep
sbb
daa
pop
and
sub
cmp
add
pop
inc
pop
test
dec
mov
push
sbb
js
cmp
sbb
rclb
sub
push
lods
pop
push
lret
and
aaa
insl
call
mov
dec
xlat
mov
ret
add
xchg
cmp
inc
movsb
dec
jae
popf
xlat
int3
sub
dec
popa
sti
sbb
fstpl
sbb
call
pop
add
fincstp
int3
cld
inc
push
dec
ss
jge
mov
dec
mov
loopne
inc
mov
sub
dec
clc
pop
je
pop
mov
adc
mov
and
dec
into
rcll
cmp
sbb
and
sbb
cmp
inc
mov
and
mov
or
jbe
clc
out
inc
push
fisubs
dec
xchg
stos
pop
cmp
and
outsl
jmp
sub
lock
lods
ret
mov
aaa
inc
lods
xlat
mov
sub
xlat
arpl
pop
fmul
lahf
pop
pmaxub
das
pop
mov
xchg
das
lret
mov
sub
inc
xchg
xor
cltd
push
out
jo
lret
std
pop
lds
es
gs
in
icebp
mov
test
hlt
outsl
xor
mov
pop
mov
mov
mov
repnz
pop
loope
lock
lret
popa
fistl
cmp
mov
adc
loope
adc
mov
xchg
push
cwtl
adc
lds
arpl
imul
pop
lret
xbegin
test
inc
mov
test
add
aas
xlat
xchg
out
sub
fimull
push
mov
mov
repz
and
or
ret
scas
push
push
imul
fistl
rorb
mov
mov
imul
test
push
mov
fcoml
pushf
xchg
idivl
jp
cwtl
mov
js
nop
pop
pop
ret
dec
push
xor
dec
ljmp
pop
add
scas
sbb
sbbb
mov
ret
mov
dec
imull
fstl
out
pop
mov
daa
and
in
jmp
aaa
dec
clc
int
test
sbb
test
int
pop
inc
mov
inc
cmp
push
pusha
mov
add
out
mov
xchg
in
mov
adc
out
or
pop
arpl
xchg
mov
fnstcw
leave
shlb
gs
ds
xchg
adc
mov
jg
cwtl
rcrb
les
dec
jp
insb
push
mov
cltd
jns
fistpll
sub
jne
pop
xchg
mov
sar
mov
insb
ret
jge
jg
push
dec
mov
call
shlb
ds
push
mov
sbb
xchg
loop
fnstcw
test
inc
mov
sti
xor
pop
aaa
pop
leave
or
repnz
fisttpll
inc
push
sbb
inc
push
push
adc
jo
addr16
and
or
lods
jecxz
stc
call
arpl
xor
dec
and
pop
mov
data16
std
and
push
mov
sub
mov
pop
call
jg
daa
add
pcmpeqw
sub
int
scas
push
xchg
or
adc
sub
in
push
shll
fst
pop
xchg
dec
mov
push
xchg
pushf
imull
nop
and
loopne
sub
iret
sbb
add
mov
roll
dec
sub
jbe
fidivrs
inc
xor
or
outsb
dec
popa
mov
pop
inc
lds
call
mov
lret
pusha
mov
arpl
sub
add
mov
dec
ds
mov
jne
xchg
lods
lcall
std
pushl
jbe
loopne
jge
mov
je
xor
xor
xorl
fucomi
xor
nop
mov
repnz
add
mov
push
xor
and
xor
add
jae
mov
dec
push
es
int
leave
int3
clc
mov
orl
imul
jg
dec
push
xchg
sub
mov
hlt
ja
and
jmp
and
inc
push
clc
sub
pop
iret
mov
add
jne
mov
in
jo
addb
mov
inc
aas
insl
inc
sub
lret
cmpsl
iret
dec
mov
sub
add
pop
ja
clc
out
test
dec
fdivs
lcall
push
pop
pushf
lock
stos
push
jl
stos
inc
and
outsb
and
add
add
pushf
loopne
enter
enter
or
sbb
mov
ret
cmc
iret
mov
xchg
leave
mov
pop
sub
xchg
jno
or
bound
jbe
fdivp
jp
rep
pushf
insb
push
xchg
mov
mov
test
adc
mov
leave
cmp
mov
mov
scas
imul
frstor
inc
mov
jle
xor
movsl
xchg
adc
lods
test
dec
sbb
loope
xchg
inc
or
aaa
gs
push
loope
adc
dec
mov
or
imul
cmc
xchg
icebp
dec
jb
mov
lds
adc
jbe
int3
mov
ja
repnz
pop
pop
and
clc
imul
cmpsl
test
cmp
mov
fbld
out
iret
push
sub
xchg
movsl
jle
in
test
out
mov
and
test
ss
in
lea
xchg
mov
cmp
incb
push
ss
or
sbb
sbbb
push
xor
jge
insl
dec
cmp
mul
sub
pop
int3
fwait
cmp
aaa
pop
stos
mov
test
adc
push
stos
push
popf
pop
out
fs
pop
inc
sbb
out
in
cmp
push
js
pop
aam
cmp
mov
movsl
shlb
aam
add
dec
xlat
out
arpl
cmpsl
jmp
outsb
fs
push
add
rcrl
sti
rorl
add
lods
outsb
out
and
leave
mov
xor
sbb
inc
jns
sub
repz
mov
lea
aas
inc
ret
dec
imul
dec
fstpt
and
arpl
imul
sub
inc
std
andb
jmp
mov
push
add
in
ror
adc
adcl
negl
movsl
push
mov
and
negl
mov
and
imul
repnz
ret
dec
shl
pusha
pop
xchg
adc
mov
cmp
and
out
mov
adc
cli
sub
popa
pop
cltd
aas
in
cld
pop
mov
add
les
adc
push
aas
cmpsl
andl
mov
nop
or
in
inc
mov
dec
fsts
std
inc
fistpll
xor
push
dec
adc
sahf
arpl
mov
cmp
adc
or
mov
mov
int3
dec
pop
lret
fsts
sub
push
or
mov
xchg
icebp
sub
sub
fiaddl
pop
pop
je
jmp
cwtl
loope
pop
popa
add
and
cld
lahf
call
iret
adc
lret
adc
test
divl
out
xchg
aad
mov
sub
cmp
dec
and
sbb
in
rcrl
loope
fisubrs
xor
cs
shrb
cmpsl
cld
insl
mov
push
mov
or
inc
repz
inc
and
popa
jnp
jl
mov
les
int
gs
pop
cmp
cmpsb
aam
pushf
gs
mov
js
mov
rcrl
pop
adc
icebp
cmp
shll
mov
dec
rcll
lods
lcall
or
jnp
and
cmp
bound
ljmp
ljmp
gs
mov
movzbl
fldt
fidivrs
shll
mov
push
or
lea
cmp
adc
icebp
rclb
fistps
push
sub
sub
add
inc
xor
lock
test
mov
aas
lock
ficompl
mov
das
into
xor
jg
mov
mov
dec
adc
fcmovnbe
xchg
cmp
sbb
dec
stc
xchg
frstor
jl
xor
jg
iret
divl
fbstp
jbe,pn
lret
jno
xor
pop
xor
or
movsl
out
aas
mov
mov
mov
and
cmp
push
aas
xchg
loope
cli
sub
xor
adc
or
std
lods
add
push
mov
dec
sbb
mov
iret
mov
inc
xor
pushf
das
sub
daa
dec
ljmp
push
or
aas
icebp
repz
dec
mov
fs
and
dec
rol
in
xchg
push
mov
dec
loope
inc
pop
mov
fucomi
scas
xchg
leave
bound
and
pusha
push
aaa
adc
fisttpll
std
movsl
aam
xor
nop
rcrl
stc
xor
inc
sub
jb
xchg
mov
out
icebp
sbb
sbb
rorl
cmp
xor
mov
or
sbb
mov
or
out
cmp
adc
das
or
mov
mov
add
jo
aas
das
or
jb
xor
mov
xor
sbb
test
mov
push
cmp
cmc
out
inc
mov
sti
sub
xchg
sub
push
popa
lret
adc
and
push
push
mov
jno
scas
dec
out
sub
cwtl
pop
xorb
leave
mov
cmpsb
mov
cmpsl
add
inc
insl
das
hlt
mov
pop
adc
jge
push
xchg
add
popa
and
rcr
cmp
test
jns
fsubrp
cmpsb
cmpsb
movsl
push
fbstp
stc
dec
repz
outsb
cmp
sti
or
icebp
push
sahf
ret
mov
and
fisubrs
push
and
lock
jmp
or
inc
lret
xchg
int
jmp
pop
adc
imul
xchg
fimuls
inc
sahf
sub
push
inc
inc
enter
pop
xchg
jmp
mov
pusha
inc
sahf
or
aad
das
push
xor
mov
aas
and
imul
inc
inc
push
jbe
and
mov
call
add
fdivrl
mov
adc
mov
mov
scas
xchg
cmp
lods
push
xlat
mov
jno
aas
or
inc
cwtl
nop
adc
xchg
je
test
pushf
aam
push
add
xchg
addl
push
adc
test
lods
push
stos
push
fidivl
xor
idiv
or
adc
sbb
lock
mov
loopne
inc
or
mov
andb
dec
loope
sub
or
std
mov
xchg
cmp
icebp
push
sub
sub
imul
mov
in
xor
in
fprem1
dec
fisttpll
cli
roll
or
mov
push
push
cli
addr16
fnstsw
inc
shl
dec
mov
sbb
and
adc
push
mov
pop
jecxz
push
data16
add
bound
in
inc
imul
notl
ss
aaa
inc
rorl
ficomps
jb
mov
icebp
xchg
mov
lock
insl
fistpll
js
leave
jmp
ljmp
mov
xor
xor
sub
or
out
bound
sbb
aas
push
pop
out
outsl
lods
cmp
sbb
stc
jns
mov
rep
pop
lods
mov
push
in
inc
xor
or
ja
test
ret
mov
mov
mov
cmpsb
pop
jp
adc
mov
insb
sahf
add
clc
mov
sbb
sbbw
ret
js
out
call
inc
sbb
pop
es
push
lret
mov
push
mov
aad
imul
loop
pusha
mov
adc
xor
out
pop
sub
call
dec
repz
je
stos
ret
mov
test
stos
mov
sahf
sbb
enter
pop
jge
dec
push
cltd
push
xor
push
push
push
mov
dec
push
jl
int
xchg
jnp
mov
fs
int3
scas
pop
xacquire
test
fpatan
les
fcompl
mov
inc
out
arpl
imul
push
mov
jns
sti
pop
sbb
int3
adcb
in
xor
mov
outsl
fcomps
inc
pop
cmp
xor
sub
clc
fnstenv
std
adc
pop
lock
jle
iret
in
cmpsl
push
sbb
jnp
imul
add
cmpsb
push
out
jge
cmp
ljmp
arpl
lcall
out
cltd
push
sub
adc
or
dec
aas
cwtl
call
or
fcmovb
dec
mov
out
js
ja
xlat
sub
or
lret
jbe
fs
sub
jno
lock
cld
fwait
cld
adc
movsl
mov
mov
inc
cmp
test
cmc
mov
in
mov
sbb
jo
imul
dec
stos
pop
jmp
repnz
push
dec
dec
rcll
inc
lds
clc
ja
sahf
sbb
addr16
mov
push
xchg
ret
mov
push
xchg
dec
je
rcl
sub
cmpsb
xchg
clc
jl
pop
andl
jae
js
loope
mov
lds
xchg
push
testl
push
fdivl
out
iret
or
cmpsl
xor
xchg
cmp
outsb
jns
mov
aaa
mov
add
sti
mov
lods
movsl
das
fcoms
mov
mov
jl
cli
mov
test
inc
jno
pop
cs
out
push
or
popf
popa
mov
adc
into
xchg
add
sub
ss
add
jle
xor
sbb
int
inc
fwait
ds
add
int3
push
pop
push
push
inc
cmpsb
xchg
int
es
jae
adc
sub
fwait
int
or
jmp
iret
jle
jle
jp
daa
mov
fisttpll
dec
push
adc
or
push
out
pushf
jo
cmpsl
loope
dec
jae
sbb
or
jno
mov
mov
mov
push
fistps
xor
mov
imul
sub
mov
xorb
jge
inc
dec
lods
stos
loop
shl
cmc
je
mov
mov
cmp
rcll
das
jno
or
adc
jl
inc
mov
push
xor
cltd
les
fcoml
inc
popa
jmp
in
mov
add
shll
cmovs
xchg
mov
push
test
adc
xor
or
jno
xor
popa
cwtl
sbbl
or
mov
fwait
or
cmovg
push
sti
inc
push
rcrb
iret
jns
stos
testl
or
push
add
adc
rorb
xor
and
push
push
jg
shrb
call
inc
mov
jnp
cld
fdiv
sbb
sbb
jecxz
ss
and
in
jne
sub
mov
pusha
jle
or
int3
sbb
mov
jg
cmp
xchg
pop
divl
push
jge
fwait
es
dec
mov
lods
mov
jne
adc
jb
ss
jno
push
subl
mov
scas
or
psrlw
lret
daa
shlb
pop
loopne
nop
mov
ret
mov
xchg
loopne
aaa
sub
mov
sahf
push
jecxz
and
dec
add
movsb
sahf
mov
xchg
lds
and
stc
and
in
push
out
mov
mov
push
push
outsb
jno
and
stc
xchg
xchg
jns
mov
mov
imul
push
mov
pusha
mov
push
outsb
les
mov
cmp
stc
xor
xchg
test
jge
jne
lcall
lds
adc
xlat
shl
add
loope
sti
jecxz
mov
rolb
pop
and
jle
mov
cwtl
aas
inc
add
stos
xchg
mov
xor
or
cld
inc
data16
pop
and
or
or
sahf
sbb
and
ret
gs
pop
xlat
cwtl
ljmp
rolb
shrl
adc
decb
mov
dec
or
push
cmpsb
stos
push
add
jne
dec
jle
xchg
pop
mov
xor
push
in
loopne
or
jnp
arpl
popa
or
push
stos
cli
int
mov
insl
inc
inc
mov
xor
xchg
insl
lea
mov
imul
pop
paddq
mov
xchg
int
lock
mov
test
loopne
cli
xchg
insl
mov
nop
test
jnp
adc
pop
mov
or
cli
mov
insl
mov
cmp
sub
es
stos
push
sbb
lods
dec
movl
mov
leave
adcl
repz
enter
sbb
mov
mov
mov
mov
inc
xor
dec
lcall
xchg
sahf
xchg
in
sub
push
adc
nop
loope
cld
mov
scas
adc
dec
das
or
cmp
xorl
and
scas
popa
sbb
pop
jl
pop
test
flds
xchg
test
xor
mov
icebp
xor
inc
pop
push
xlat
push
push
sub
andb
rdpmc
push
bound
push
sti
f2xm1
mov
cltd
cli
jmp
mov
movsb
cmp
shll
pop
lds
pop
mov
int
imul
xchg
mov
pushf
cwtl
in
or
fbld
jecxz
xchg
int
cmc
in
fiadds
pushf
loope
dec
fidivs
and
xchg
cmp
cwtl
xchg
dec
cwtl
lahf
push
mov
add
pop
cmp
fisubrl
out
stc
fs
pop
and
imul
into
adc
dec
jae
mov
inc
mov
add
enter
cltd
ret
adc
rcl
outsb
mov
cwtl
sbb
ljmp
jl
outsl
push
test
imul
ret
mov
xchg
pop
int
popf
idivl
das
push
outsl
pop
add
cmp
mov
popf
inc
adc
es
jmp
mov
or
push
movsl
pop
ret
rcll
stos
push
nop
aad
or
test
leave
xor
inc
push
cmp
scas
and
mov
mov
mov
xor
and
adc
lret
das
sbb
pop
loop
mov
add
rcr
sbb
out
pop
repz
sbb
das
adc
pop
repz
cmp
adcb
int3
call
or
cmpb
sti
sti
icebp
ret
cs
mov
ja
pop
dec
jecxz
clc
lock
in
shrl
sub
ss
fisttps
cmp
and
dec
and
gs
mov
call
loopne
int
xchg
aam
mov
pop
call
xchg
push
popa
cmp
mov
jl
push
xor
lahf
scas
and
sbb
ret
lcall
pop
mov
mov
loope
mov
pop
ds
mov
aad
loop
dec
fbld
popf
adc
lods
or
jo
stos
bnd
sbb
and
cli
sbb
ds
xchg
andb
jb
insl
mov
lret
pop
sub
jne
pop
inc
loope
xchg
fbstp
shl
jl
clc
sbb
and
push
fstpt
test
std
lret
hlt
ss
add
mov
push
mov
fldenv
jo
sub
inc
push
sub
imul
loop
test
loope
xchg
iret
loop
movsb
xor
xchg
dec
mov
mov
inc
cwtl
inc
inc
or
movsl
jge
jnp
or
mov
pop
add
mov
pop
mov
cmpsl
sti
aam
push
dec
inc
pushf
pop
dec
xchg
or
sbb
ja
movl
push
dec
mov
add
in
out
inc
sahf
mov
pop
sub
xor
adc
vdivps
fldl
push
leave
jg
cli
xchg
mov
adc
add
mov
jg
hlt
jno
lahf
hlt
les
add
jns
sub
mov
mov
lods
rcrl
inc
cmpsl
outsb
imul
pop
pusha
lock
mov
insb
aaa
cmpsl
repz
add
jp
mov
inc
fwait
mov
push
movsb
in
jge
fstps
add
not
cmp
push
jmp
or
jns
shl
cli
cs
pop
daa
jecxz
jle
sub
jmp
in
cmpsb
sub
mov
in
scas
push
aad
sbb
test
jle
push
or
inc
mov
std
sti
or
sahf
orl
movsl
jge
pop
stc
mov
adc
lea
imul
jl
push
das
mov
ret
loope
iret
inc
mov
enter
pop
movsb
gs
mov
std
push
xor
or
push
jge
inc
cli
loop
inc
push
mov
adc
xor
sub
mov
loopne,pn
sbb
sub
add
loope
pushf
cmpsl
mov
ror
pop
fldln2
xchg
adc
loope
pop
xchg
outsb
jmp
enter
inc
xchg
test
jmp
in
pop
aam
pop
adc
mov
out
pusha
ljmp
xchg
push
cmpsl
pop
sbb
xchg
xor
or
das
ss
mov
add
mov
adc
pushl
fwait
lret
xlat
jle
push
ret
sub
xor
push
push
dec
cmpsl
or
add
or
xchg
dec
into
or
cld
popa
inc
in
or
and
or
sub
aad
push
imul
clc
mov
test
dec
jmp
push
push
cli
pushf
iret
add
iret
or
mov
pop
mov
pushf
les
mov
aad
jbe
add
push
dec
movsb
xchg
pop
push
lret
sbb
add
divl
dec
xchg
jno
push
ret
in
cmp
ds
aas
push
or
pop
push
addr16
aaa
stos
xchg
data16
lret
loop
clc
aad
in
mov
cmp
xchg
jne
loop
sbb
inc
push
movsl
popf
cmp
fadds
lea
jae
inc
in
mov
stc
movsb
das
pop
cli
jbe
and
sbb
aam
je
add
test
dec
into
dec
lock
popf
fstps
mov
mov
out
sti
xchg
ds
mov
cltd
pop
xchg
rcr
jne
bound
insl
rolb
out
jle
leave
cmc
mov
lcall
inc
jns
pop
mov
fdiv
js
xor
inc
cli
pop
vpshuflw
jp
cmp
mov
sbb
scas
jno
dec
enter
call
mov
adc
out
mov
mov
shll
pop
adc
sub
cld
out
xchg
adc
push
ficoms
pop
mov
push
mov
mov
inc
xchg
fistps
and
sbb
stos
mov
mov
push
loope
mov
inc
orl
bnd
sahf
sub
call
pop
add
jmp
fdivs
push
xor
cltd
xor
pop
cmpsb
ds
adc
repz
cmp
xchg
and
sbb
lea
cld
mov
mov
popa
pop
fnstsw
call
test
int
in
sbb
test
mov
or
and
sarl
pop
adc
adc
adc
call
or
repz
sub
fidivl
add
jae
shll
dec
mov
fs
addl
jmp
mov
lods
cmp
test
popa
xor
repz
lea
test
dec
xor
inc
sbb
aaa
jb
sti
fucom
sbb
sbb
xchg
mov
xchg
fcoml
loop
fsubrl
js
daa
mov
push
xor
lret
into
je
pop
adc
push
fisttps
adc
mov
pop
rcl
inc
mov
jb
test
adc
cmpb
test
xor
jnp
and
outsb
jno
mov
add
dec
cli
outsb
push
fcoms
jmp
xor
add
and
push
sub
lods
not
sti
jae
test
mov
xor
sub
aad
xchg
repz
pusha
pop
leave
pop
test
je
pop
je
jo
sbb
pop
cs
das
dec
add
fidivrs
or
notb
mov
ds
sahf
mov
out
imul
xor
cltd
mov
cmp
mov
xor
mov
mov
cmp
loop
inc
cwtl
pop
xor
ds
ret
sbb
lret
fwait
inc
sbbb
add
fsubp
movl
mov
leave
pop
or
and
pushf
jae
adc
in
div
xchg
lock
cmp
out
sbb
xchg
aaa
push
lret
and
dec
test
dec
movsl
jnp
outsb
mov
arpl
fsubrl
xchg
lahf
sbb
jb
push
xor
xor
mov
fnsave
push
leave
iret
lret
adc
js
sbb
inc
or
sbb
cmp
shrl
mov
rcll
fmuls
mov
and
add
imul
xor
fists
iret
push
sbb
dec
jae
adc
std
aas
xor
jle
push
cmp
sbb
shlb
ret
pop
adc
mov
xor
lahf
xchg
add
lods
les
test
mov
arpl
add
xchg
lock
aad
lods
push
mov
scas
mov
sub
fsubrp
mov
mov
sub
adc
cmc
in
push
cmc
enter
scas
popf
insl
push
aaa
mov
sbb
lea
out
cmp
pushf
lds
sbb
push
cmp
movsl
rolb
test
popa
sti
sub
enter
and
psubsb
jp
add
mov
aam
pop
lods
mov
js
aas
ss
movntq
ljmp
cmp
dec
xchg
xor
sbb
xchg
ret
movb
dec
mov
dec
outsl
stos
push
and
mov
push
scas
scas
test
xchg
das
sub
mov
sub
sbb
push
int
rorb
inc
sbb
hlt
or
push
rcrb
pushf
jp
addb
stc
cmp
rclb
flds
cmp
jae
dec
arpl
mov
cltd
je
inc
lds
js
push
test
mov
sar
xchg
xor
cmpsb
add
insb
cmpsl
inc
cltd
pop
shrl
jnp
add
cltd
lds
or
lods
and
mov
leave
ficomps
repz
dec
mov
gs
orl
loopne
sub
sarl
arpl
push
stos
mov
xchg
subb
adc
jbe
dec
loopne
inc
xchg
fnsave
out
pop
inc
add
cmpsl
test
in
repnz
es
xlat
and
aad
insl
sbb
in
outsl
cmp
push
xor
mov
jmp
xor
ss
push
pop
lahf
lahf
iret
insb
data16
cltd
stos
lds
xchg
xchg
icebp
mov
roll
loopne
int3
sub
sbb
sub
daa
push
mov
aam
cmp
rol
aaa
jge
movsb
sbb
rorl
stc
cmc
push
loop
add
pusha
mov
lds
adc
mov
sub
js
xchg
lea
mov
sub
inc
scas
in
pushf
xor
add
lret
cmp
stos
sbb
cmp
lahf
fimuls
xchg
enter
psubusw
cli
push
leave
cld
pop
in
mov
mov
stos
das
dec
addr16
fs
push
out
inc
les
mov
or
jmp
mov
dec
fldl
inc
sub
or
xor
pop
push
test
shll
cltd
sti
jae
repz
xchg
aaa
add
fisubs
fucomi
pop
jmp
cmc
xor
movsb
hlt
pop
mov
push
nop
mov
push
xchg
sub
ficompl
addb
mov
das
cmpsl
loop
and
loop
popf
popf
jge
mov
arpl
and
push
stos
out
mov
bound
cli
mov
jle
push
out
test
loop
fiadds
out
push
xor
jmp
stos
jp
scas
cmp
jne
jno
fldcw
loopne
idivl
cs
jbe
lds
rol
push
xchg
mov
mov
test
out
sub
xor
adc
pop
push
repz
fists
adc
sbb
push
xorb
cmp
pop
rcll
mov
es
mov
negb
pop
and
or
push
push
bound
sahf
mov
adc
lahf
add
in
aad
and
xchg
popa
mov
movsl
pop
inc
jmp
int
jae
fcomi
lret
cmp
cs
lods
sub
loop
cmp
psubsb
push
fsubs
mov
xchg
inc
rcrb
sub
pop
das
gs
inc
and
mov
in
push
cmp
orb
pop
xchg
mov
hlt
cld
sahf
dec
imul
mov
das
into
ljmp
in
jp
mov
push
dec
lret
ror
inc
inc
pop
cmp
mov
and
leave
into
stos
mov
jo
imul
test
dec
mov
mov
out
pop
and
sti
decl
jl
pop
mov
adc
cmp
mov
xor
stc
xlat
or
adc
lahf
xor
nop
pop
in
add
pop
shlb
arpl
pop
ja
sub
mov
mov
pop
xchg
ret
pop
imul
adcb
sub
sahf
dec
sub
fistl
xchg
lret
fs
sti
dec
jecxz
mov
outsl
push
pop
mov
xchg
outsl
or
xchg
daa
mov
xchg
cmp
cmp
adc
aad
sbb
fstpl
push
dec
pop
loopne
xor
and
jp
mov
jne
hlt
push
jg
decb
bound
mov
jmp
sbbb
mov
push
jb
jle
adc
popa
inc
mov
icebp
into
and
lcall
sub
fnstenv
xchg
rclb
xlat
jl
sub
pop
hlt
jbe
lret
mov
dec
and
leave
btc
es
add
pop
sbb
push
lock
mov
dec
add
lds
js
fbld
in
fmul
cmp
pop
andb
cmp
pop
inc
iret
loopne
pop
inc
std
insl
out
jno
mov
icebp
mov
jmp
int
les
push
aam
adc
aaa
popa
es
jo
lea
inc
mov
std
and
xor
cmpl
inc
pop
int3
das
test
sub
lahf
shl
mov
xchg
push
mov
int
stc
pop
fnstsw
jge
inc
mov
mov
jecxz
dec
or
inc
mov
cwtl
rcrl
adc
sub
jnp
or
jecxz
stos
cmp
iret
nop
xchg
mov
pushf
ljmp
test
pop
mov
in
int3
andb
testl
test
mov
or
lcall
lods
addr16
xor
jge
xor
jnp
jae
sub
push
iret
outsl
fstps
jge
push
or
push
rclb
arpl
jbe
and
pop
inc
push
push
nop
pusha
clc
xchg
cmpsl
inc
iret
push
into
idivl
rdrand
ja
jle
inc
xlat
mov
mov
pop
mov
aam
push
jo
test
stc
imul
movsb
or
or
xchg
aaa
cmp
and
test
popa
jae
add
andb
js
out
cmc
mov
les
aas
and
or
enter
out
inc
cltd
and
pusha
ja
or
addr16
out
sub
cld
outsb
dec
es
sub
add
inc
sarl
push
jb
adc
int3
ret
cld
and
sub
sahf
mov
add
lds
jne
sbb
lret
lahf
movsl
mov
add
inc
mov
in
dec
scas
adcb
outsb
mov
inc
ss
stc
xchg
cmpsl
enter
push
mov
mov
jnp
mov
popf
dec
insb
insb
mov
add
mov
sahf
lds
scas
cmp
aaa
aad
mov
les
fsts
pop
adc
mov
imul
mov
and
mov
sahf
fiaddl
std
imul
sbb
push
in
mov
mov
inc
mov
xor
fmuls
add
mov
mov
out
mov
notb
jmp
mov
pop
mov
jecxz
lds
cmp
out
hlt
push
inc
or
sti
dec
xchg
mov
add
xchg
push
sbb
icebp
push
jg
inc
push
adc
jae
jbe
divl
in
jnp
push
scas
and
pop
sahf
pop
mov
bound
cli
lods
inc
fistpl
push
popa
mov
xchg
stc
and
pop
ljmp
and
gs
sbb
jo
pushf
cwtl
and
dec
add
inc
cmp
xchg
mov
incb
push
rcrl
clc
sbb
mov
scas
fcomp
inc
mov
push
mov
movsl
add
inc
mov
add
or
loop,pt
pop
xor
imul
sub
fnstcw
xor
jmp
loop
movsb
jns
cmp
mov
daa
decl
or
pusha
jbe
shl
add
or
cmp
sub
imul
or
adc
xor
push
jmp
loope
xor
leave
jns
adc
inc
adc
or
mov
lea
data16
adc
push
gs
sbb
push
arpl
sub
jle,pn
mov
ret
jb
shrb
arpl
adc
and
xchg
lea
ss
test
js
add
cmp
cmpsb
repnz
mov
pop
imul
xchg
mov
lahf
cmc
repz
int
scas
sbb
fcmovnb
cmpsl
lock
dec
jecxz
icebp
in
stc
add
fisubl
sbb
add
lea
pop
push
mov
pop
jbe
mov
jl
mov
mov
lods
lods
outsb
xchg
mov
dec
loopne
cmc
xor
and
enter
sbb
jg
push
loopne
test
mov
push
inc
sbbb
mov
fwait
ljmp
mov
inc
dec
mov
cmp
or
icebp
mov
pusha
dec
push
shll
mov
xchg
mov
scas
repnz
xor
rcr
inc
sub
outsb
jmp
fildl
movsl
loop
mov
jmp
add
in
lret
sub
nop
and
mov
imul
and
cmp
mov
push
mov
jb
dec
arpl
adc
add
mov
inc
fmuls
pop
push
cld
pop
in
jle
fadds
inc
outsl
repz
es
sbbl
jae
or
add
aaa
imul
or
pusha
mov
stos
in
mov
int
push
pop
pop
xchg
xchg
mov
cmc
arpl
cmc
mov
inc
jno
pop
cld
xchg
sbb
out
cmp
push
cmp
insb
cmp
add
pop
aad
mov
mov
lea
jb
adc
xchg
pusha
adc
movsb
cmpsb
jp
inc
push
sbb
xor
fadd
adc
adc
lods
iret
mov
dec
mov
dec
lret
mov
imul
insl
adc
cltd
sbb
jecxz
dec
rcr
lcall
jg
sbb
dec
mov
mov
jmp
cmp
mov
mov
cmpsb
scas
inc
bound
jb
out
sub
cmpl
shll
out
or
cmpsl
mov
inc
mov
int
sbb
lahf
and
shrb
in
jge
sti
lods
xor
push
sbb
jae
and
sahf
in
lret
and
fcmovnb
jb
outsb
cmpsb
es
adcl
out
jle
pop
in
pushf
jmp
shlb
jmp
addr16
loop
xor
jae
in
gs
cld
mov
pop
sbb
dec
xor
mov
out
insb
lods
xor
jb
das
or
call
sub
lea
sarb
iret
mov
jne
push
pop
test
dec
sub
dec
push
xchg
cmc
in
pop
mov
mov
or
enter
test
ljmp
das
pop
in
xchg
aaa
or
lret
push
cli
or
and
or
out
and
add
sub
sub
ret
sub
mov
in
add
jne
dec
pop
jl
rorb
sbb
cmp
mov
insl
or
lahf
push
mov
imul
push
and
enter
or
loope
pop
jge
mov
ljmp
push
push
mov
notl
es
lods
and
stc
jno
or
jmp
leave
xor
divb
mov
add
push
xor
and
adc
mov
aad
add
insl
test
push
ret
loop
push
hlt
ljmp
jne
xchg
in
pusha
vfrczps
and
fnsave
dec
aad
lds
and
icebp
enter
pop
iret
xchg
mov
xchg
clc
fsubr
and
xor
jns
push
xchg
roll
dec
dec
add
jle
jb
ds
dec
and
mov
cmp
mov
lea
dec
jg
ds
fnstsw
or
in
out
outsb
sub
test
into
push
push
mov
inc
ss
cmp
aam
outsl
dec
and
adc
mov
sub
xchg
inc
pushf
cmp
lcall
cmpsb
arpl
mov
inc
roll
imul
popa
sbb
notb
xlat
pop
cmpsb
or
loope
imull
sub
cltd
jne
std
jp
shrb
sub
push
out
mov
loop
insl
and
jp
rol
mov
fnstcw
jo
mov
loop
mov
loopne
pop
mov
mov
mov
xor
gs
test
mov
lcall
stos
mov
xor
imul
inc
cmp
sbb
xor
mov
int3
push
and
sbb
outsb
bound
aas
rcr
mov
xor
or
mov
cld
test
lcall
neg
sub
mov
push
mov
dec
pop
mov
lods
add
mov
into
rcl
lds
int3
loop
rorl
ret
in
syscall
mov
ret
dec
ljmp
xor
dec
mov
sub
imul
mov
je
inc
sub
lahf
addr16
push
push
inc
sub
and
cmp
or
das
test
popa
inc
in
jle
mov
or
mov
push
jo
fdivrl
xor
jo
sub
sub
push
xor
jp
stos
outsl
lods
mov
cmp
sub
rorb
sbb
les
loopne
pop
popf
or
xchg
stos
sub
add
xchg
sub
fadd
inc
fsubl
lock
enter
mov
mov
mov
out
data16
mov
push
lret
pop
inc
xor
inc
movsl
sub
cmp
xchg
xor
dec
inc
mov
int3
and
mov
hlt
mov
arpl
jg
cmp
cmpsb
mov
pop
xchg
adc
dec
or
inc
jecxz
rorb
xor
push
sub
push
mov
gs
in
sbb
aas
rol
aam
mov
fldenv
push
hlt
std
cmp
cltd
movsl
adc
ljmp
popa
xchg
cld
std
mov
or
sbb
xor
imul
cmpsb
hlt
mov
add
push
inc
aad
rorl
sbb
ror
enter
jns
or
int3
out
mov
cmp
loope
scas
push
or
mov
cmp
adc
imul
sbb
lock
jl
sub
outsl
push
mov
hlt
iret
and
test
ret
push
xchg
or
dec
rcll
xor
hlt
int
iret
outsb
in
stc
xchg
sbbl
jne
xchg
pop
adc
iret
flds
cli
xchg
fsubrs
and
dec
jle
sbb
jmp
fdivs
in
cmp
or
sti
fdivr
sti
pop
in
test
xor
ret
push
jns
fsubrl
outsb
es
mov
jge
insl
out
idivb
fstl
sub
repz
or
adc
mov
stos
in
mov
mov
bound
test
sub
add
daa
pop
push
jne
adc
call
jae
in
adc
dec
mov
mov
pop
dec
insl
jg
call
cltd
pushf
fists
subb
movsl
sbb
inc
popa
fstp
lret
lds
fnstsw
out
aaa
cmp
push
sbb
pop
enter
mov
aas
repnz
out
pusha
cmp
dec
fisttps
into
pop
enter
xor
movsl
xchg
std
add
adc
or
push
dec
push
loop
test
in
jle
cmp
or
clc
pop
sub
scas
ret
mov
fsts
cmpsb
repnz
in
push
dec
scas
fcomp
ret
outsb
adc
je
and
lcall
ret
fwait
adc
sub
adc
test
or
adc
pop
out
pop
and
std
loop
mov
mov
mov
xor
jmp
mov
cs
fld
out
das
push
inc
sub
fnstsw
mov
push
mull
outsl
jmp
ja
sub
xchg
sbb
fwait
iret
mov
adc
imul
data16
in
pop
pusha
mov
jns
mov
gs
ljmp
push
icebp
xchg
jo
lret
loopne
dec
xor
fs
adc
in
dec
adc
xchg
jl
out
adc
push
jmp
scas
ret
sbb
sbb
js
loopne
cmpb
push
sub
jnp
mov
mov
in
mov
dec
into
add
mov
test
jns
outsl
pop
pop
call
out
fnstsw
xchg
sbb
js
test
dec
cmp
pusha
ret
outsb
sub
mov
dec
repz
mov
inc
loope
push
movsl
pusha
xchg
mov
xchg
enter
jge
mov
and
in
lds
lods
lcall
lock
test
loopne
xchg
fiadds
in
es
sub
hlt
and
les
mov
imul
sub
push
adc
push
dec
and
mov
pusha
add
dec
mov
lret
popa
fwait
jp
xor
mov
int3
fcomi
jmp
adc
test
and
xor
inc
xchg
sbb
shll
jp
jbe
jle
add
das
in
xor
jle
inc
jp
mov
cmp
push
pop
addr16
cmp
cmp
jns
push
cltd
cli
inc
in
inc
ss
out
inc
pop
ret
sub
packsswb
inc
rcrb
cmpsb
movb
out
insl
pop
jp
lcall
dec
fisubs
xchg
mov
cmpsl
mov
sub
jecxz
icebp
mov
add
xchg
stos
mov
or
outsl
rol
mov
xor
rcr
sbb
pop
hlt
xor
push
in
inc
je
cmp
fisttpll
xchg
call
or
fsubrs
js
add
lret
ret
mov
mov
or
or
pop
adc
and
or
inc
mov
mov
aaa
mov
or
fdiv
nop
jb
insb
fiaddl
es
dec
mov
aas
stc
arpl
cwtl
nop
mov
nop
xchg
mov
push
lock
stc
cmp
test
push
mov
movsb
ss
fs
sbb
mov
loop
decb
inc
cmpsl
loop
std
call
xchg
push
jne
mov
test
xor
push
cwtl
pop
loope
out
enter
cmp
cmp
decb
fsubrs
in
sbb
push
sbb
aas
daa
adc
shrb
cmp
jmp
and
loopne
shrb
test
movsb
fsubrl
test
mov
and
mov
mov
adc
push
aaa
cmc
adc
testl
mov
shrl
xchg
dec
roll
and
test
adc
in
adc
lods
adc
fimull
dec
sub
fiaddl
dec
dec
daa
mov
fnsave
add
mov
cli
dec
adcw
mov
iret
and
nop
mov
mov
pop
insl
sbb
inc
lock
ja
mov
aad
xor
shrl
call
out
sub
sbb
push
mov
jae
mov
xor
push
std
or
cmp
test
xchg
jmp
jecxz
cld
insl
add
push
inc
inc
jo
loope
push
mov
repnz
into
ret
test
inc
outsl
aas
jecxz
dec
mov
dec
xchg
cld
sub
mov
lods
rcrl
sbbb
or
dec
cwtl
rcll
insl
je
fsubr
lret
mov
adc
scas
aad
ja
call
adc
lea
clc
popa
sbb
xchg
mov
loopne
sarb
mov
sbb
lea
inc
sbb
lods
inc
js
sub
sbb
dec
mov
mov
dec
push
inc
or
into
jmp
mov
lahf
cmpsl
sub
xchg
test
popa
out
sbb
push
cmpsb
add
push
int
addl
nop
lahf
jo
mov
jns
adc
mov
outsb
cmp
xchg
outsl
push
pop
fs
sub
jbe
test
in
add
sti
pcmpeqb
ret
test
lods
mov
add
mov
int3
ds
stos
lahf
outsb
sub
or
mov
push
arpl
out
jge
sbb
jno
sbb
cs
call
aaa
push
sub
cmp
adc
mov
add
xchg
jg
test
xchg
std
xor
mov
mov
pcmpgtw
shll
lods
and
sub
push
push
jg
mov
mov
outsl
sub
dec
in
inc
dec
in
out
pop
pop
int3
rcr
out
sti
jne
mov
mov
add
ret
jnp
xor
lea
mov
mov
push
add
adc
push
jl
fwait
aad
enter
and
xor
popf
push
mov
shr
pop
xchg
inc
mov
adc
in
and
inc
adc
scas
dec
lcall
aas
out
adc
lcall
testb
push
fcmove
pop
mov
sti
sub
test
mov
sub
cmp
divb
jbe
loopne
sub
insl
jge
jb
or
sbb
aaa
dec
lea
icebp
mov
jmp
repz
sbb
and
jno
loope
xor
mov
clc
outsl
mov
loop
arpl
lds
and
mov
dec
dec
cmp
dec
test
ja
out
jg
ror
lock
push
repnz
roll
je
dec
mov
jb
rorl
fdivs
jl
cltd
mov
inc
mov
fldl
cmp
sbb
mov
jg
mov
int3
fistpll
mov
inc
shll
pop
mov
rcr
fstps
loope
test
divl
divl
int3
inc
shl
mov
push
xor
les
xchg
mov
add
hlt
jae
mov
lock
push
popl
in
pushf
push
lods
sbb
adc
mov
add
jae
push
adc
sbbb
sub
call
imul
push
xchg
lods
fmul
lods
lret
jge
mov
mov
movsb
repnz
mov
lea
xchg
gs
jg
dec
sub
pop
test
mull
cmpsb
or
cmp
and
inc
xchg
xor
xor
sub
jge
mov
pop
stos
sti
shrb
adc
pop
cmp
dec
cld
sahf
cmp
jl
fs
fcmovne
fildll
movsl
dec
nop
mov
jp
stc
inc
adc
mov
or
daa
pop
int3
fidivrs
pop
aaa
iret
inc
test
lods
sbb
xchg
rclb
add
sub
cmp
mov
lret
dec
pop
popa
out
scas
or
out
push
cmp
push
inc
push
loop
pop
in
sub
std
cmpsb
mov
loopne
sub
jge
push
das
or
and
out
addb
clc
pop
xor
or
fs
into
push
cltd
je
out
in
mov
cmpsl
or
fisttps
test
inc
sub
scas
xor
and
rorl
jno
mov
sbb
pusha
cmp
outsb
jmp
jl
insl
stos
cltd
addr16
arpl
cmp
cmc
stos
push
sbb
pop
add
loopne
xlat
xchg
hlt
push
push
and
mov
sbb
xchg
cld
lods
addl
cmp
lods
mov
push
or
pop
fstps
dec
add
and
int
std
push
aam
and
xchg
scas
mov
mov
sbb
enter
das
jp
xor
adc
mov
mov
jle
pop
gs
inc
stc
outsb
cs
push
mov
jo
into
adc
bound
adc
rcll
jle
add
and
loopne
mov
lahf
dec
pop
cmp
rolb
xor
test
sbb
lea
cmp
jle
les
add
jne
aaa
xchg
inc
sahf
lods
inc
cmpb
pop
enter
icebp
sarb
negl
pushf
mov
outsb
cmp
mov
fdivs
insb
xchg
movsb
lods
dec
mov
stc
pop
xchg
sbb
iret
js
scas
xchg
cli
and
or
int
jbe,pn
inc
jle
test
dec
imul
and
imul
inc
adc
xchg
adc
inc
mov
out
cmp
enter
push
pop
enter
lret
pusha
imul
jmp
sub
pop
add
sbb
popf
xor
jle
jmp
mov
ja
adc
int3
sbb
pop
insl
jge
jecxz
xlat
sahf
repz
xchg
mov
out
pop
aad
clc
into
xlat
aas
lcall
lods
inc
add
cmp
pusha
inc
cmpsb
test
pop
xchg
cmp
or
loop
movsb
inc
inc
arpl
or
xchg
lea
fsubrs
push
loop
push
xchg
xor
add
or
jae
or
xchg
addr16
push
xor
add
icebp
xor
jmp
push
adc
pop
out
loop
pop
icebp
push
out
mov
shlb
mov
fildll
mov
mov
cmc
out
ss
movsb
nop
js
in
leave
call
dec
pop
adc
fldcw
xchg
or
je
mov
lahf
sbb
insl
sbb
in
out
loop
jle
fsubs
bound
std
and
fwait
lods
adc
add
dec
xor
ss
fisubrl
fwait
ss
ret
es
and
orl
repz
lret
out
mov
shr
sub
push
mov
dec
movsl
jp
lods
mov
lea
mov
push
mov
cld
mov
int3
lret
mov
xor
push
mov
and
andb
pop
sub
mov
adc
loop
mov
xchg
mov
dec
cmp
insb
data16
push
pusha
mul
mov
inc
ret
mov
mov
dec
push
and
adc
lea
mov
pop
idiv
ret
add
pop
mov
jbe
lods
ret
add
je
test
inc
xchg
sti
dec
ds
mov
lds
movsl
in
pop
fimuls
test
push
jae
inc
jle
and
dec
fldt
sbb
jns
lahf
in
pop
dec
pop
fistps
dec
push
jnp
add
in
popa
xchg
scas
xor
fisttpll
test
pop
xorb
mov
test
or
daa
aaa
and
js
or
fsts
cmp
add
movsl
mov
mov
movsb
ret
fisubs
mov
xchg
mov
setnp
mov
mov
pop
xchg
test
imul
xlat
insb
sbb
push
push
call
int3
gs
inc
push
rcr
ljmp
xor
cmp
movsb
mov
loopne
out
and
bound
xor
adc
imul
test
jecxz
lcall
jb
sbb
add
ret
jnp
push
or
je
adc
inc
push
sbb
imul
and
jle
fcomp
and
push
xchg
and
mov
mov
std
cld
jmp
and
and
ret
xchg
pop
and
int3
xlat
mov
andb
nop
mov
jnp
adc
icebp
push
in
push
dec
cmc
out
jns
ljmp
test
mov
dec
fdivrl
jge
ds
sub
shrl
jge
test
or
rclb
lods
pop
imul
mov
push
mov
and
push
jmp
jp
xchg
testb
incb
inc
imul
ret
mov
jge
mov
sub
sub
pop
imul
roll
and
cmp
mov
and
jbe
jecxz
sbb
js
cmp
rcrl
xchg
cs
jmp
dec
data16
inc
lods
repz
push
jg
jae
pop
dec
dec
pop
adc
cmp
mov
stos
ss
sbb
xchg
push
inc
cmp
push
lock
je
mov
sahf
cmpsl
cvtps2pi
or
xor
or
push
jns
incb
xor
stos
into
lds
sbbl
ret
stos
popa
mov
xchg
mov
inc
mov
scas
xchg
xor
xor
push
adc
cmp
je
repz
loope
fdivl
jl
cmp
sub
push
xor
cld
jns
pop
add
push
or
xor
gs
dec
ret
aaa
fdivp
adc
push
sbb
jb
cmpsb
fbld
mov
in
jle
inc
call
lea
loope
jmp
mov
mov
dec
lret
mov
in
inc
dec
shll
sbb
int3
jb
xchg
jne
sbb
mov
jns
dec
adc
addl
cld
aaa
sbb
fs
mov
loopne
cltd
inc
cmp
movsl
fsubrs
adc
sub
stos
jg
push
dec
xchg
loope
mov
int3
mov
jnp
and
repz
sub
cmp
es
cmp
mov
adc
push
sub
add
fldt
xchg
sub
push
cmp
loope
es
mov
and
repnz
popa
mov
in
xchg
cmp
pop
into
mov
or
clc
mov
mov
cltd
in
in
fdivl
lahf
in
adcb
jbe
jle
loop
in
and
je
adc
xchg
push
aad
mov
inc
xor
mov
lahf
pop
inc
dec
dec
jne
pop
mulb
push
cmp
sub
lods
pusha
test
in
xchg
jae
aas
xchg
iret
sub
sbb
mov
and
loope
jle
ds
sar
mov
aad
mov
and
dec
xchg
pop
lcall
outsb
jle
inc
outsl
sbb
mov
popa
test
pop
ret
ret
ss
pop
iret
xchg
repz
push
jae
cltd
mov
xchg
out
push
inc
mov
mov
mov
jmp
mov
inc
in
cmp
mov
and
xor
adc
mov
pop
sahf
aad
adc
mov
scas
add
adc
add
mov
testl
fistpl
xlat
push
jle
xchg
mov
sub
cmp
dec
push
sbbb
sbb
cwtl
xor
clc
push
pusha
les
ret
sub
insl
addl
inc
jp,pt
sbb
pop
xchg
inc
out
push
mov
iret
stos
fidivl
out
in
std
lret
rclb
cmc
jl
ret
loope
lock
outsb
xor
lods
divl
push
pushf
mov
or
daa
cmp
or
adc
xchg
mov
fsubs
jo
dec
insb
pop
dec
aad
icebp
ficoml
cmpsb
push
jb
mov
adc
insl
ret
jns
xchg
dec
jno
call
adc
aaa
in
sub
mov
adc
pop
jbe
hlt
cmpeqps
pop
insl
testb
jbe
jnp
sbb
and
cmp
fs
mov
cld
adc
cltd
jle
push
gs
push
fdivs
xchg
mov
shlb
push
loopne
out
inc
xchg
lods
xchg
aam
push
popf
push
xorb
in
lock
dec
test
jb
xchg
pop
jmp
xchg
xchg
fldenv
pop
stos
inc
lock
rcll
cltd
insl
sbb
mov
mov
pusha
xchg
sub
aas
aam
add
test
jno
sbb
jl
mov
jg
fadds
popa
fisttpll
stos
mov
xor
cli
pusha
add
rorb
xor
mov
rclb
aam
scas
and
fdivrl
sarb
mov
jmp
sbb
sarl
dec
sahf
popf
or
dec
or
pop
dec
ds
add
test
xor
sbb
clc
pushf
out
push
dec
imul
adcl
insb
mov
cmpsl
mov
je
pop
jnp
dec
adc
mov
test
xchg
repnz
out
jns
aas
hlt
jl
and
nop
loopnew
cmpsl
xchg
mov
mov
data16
aaa
cmpsl
mov
mov
dec
push
mov
out
mov
rcrb
mov
daa
ja
mov
mov
xlat
fwait
arpl
mov
bound
pop
dec
test
mov
mov
into
cmp
into
dec
mov
scas
outsb
in
pop
sub
lea
repnz
jnp
or
loopne
int
cmp
movsb
xor
adc
shlb
leave
jne
addr16
test
mov
pop
xchg
add
jb,pn
stos
sbb
or
ret
leave
add
incb
rolb
out
and
inc
rol
shll
adc
dec
sbb
cmp
inc
dec
hlt
ror
daa
loope
add
je
out
xchg
cmp
pop
ret
stc
push
lcall
or
or
in
mov
pushf
add
sub
call
mov
flds
and
adc
fcoml
and
sbb
loop
data16
xor
addb
stc
dec
outsb
jg
mov
in
xor
aam
adc
jno
fdivl
xlat
jb
and
dec
inc
xorl
andb
jmp
rorl
and
mov
mov
aad
sub
cwtl
sahf
mov
je
cld
sti
add
or
mov
out
ds
add
stos
xchg
lahf
push
mov
inc
adc
fimull
adc
lock
mov
in
sub
shl
and
mov
movsb
push
popa
lret
pushf
aaa
sbb
roll
js
aam
lds
dec
ljmp
pop
xor
adc
xlat
int
sub
cmp
test
mov
fcoml
mov
mov
adc
je
scas
imul
push
loop
add
jo
jp
sub
leave
mov
mov
and
jmp
adc
outsl
lcall
sbbl
loopne
in
cmpl
lds
add
sbb
stc
test
arpl
insb
call
sbb
cwtl
mov
pop
mov
out
movsb
inc
inc
jecxz
and
dec
pop
out
lret
fdivl
mov
in
ret
xchg
out
mov
add
ds
test
adcb
add
or
dec
cmp
aaa
jb
enter
sti
xchg
jl
call
rolb
arpl
pop
cmp
dec
pop
push
xchg
out
clc
test
dec
mov
jo
jmp
cmp
ficompl
clc
jo
fs
mov
fcmovnbe
fsubrs
sti
sub
test
push
aam
lock
jp
arpl
push
pusha
and
or
inc
dec
push
repnz
mov
leave
scas
stos
fcompl
jo
mov
pop
ljmp
pop
and
mov
add
inc
stos
pop
fstps
mov
sub
pop
or
loope
lea
xchg
push
aaa
stos
shl
mov
or
pop
stos
lods
sbb
insb
ds
and
pop
inc
jb
aas
arpl
inc
sahf
repz
scas
out
repnz
in
sub
hlt
fwait
sub
sti
scas
aaa
cmp
push
test
mov
loopne
sahf
jmp
daa
pop
cmp
imul
int3
gs
jp
lcall
cmpsb
xchg
inc
enter
nop
jns
test
push
sti
pop
push
push
inc
and
sbb
je
dec
xor
mov
int3
sub
dec
movsl
or
inc
mov
xchg
xchg
jmp
lahf
xchg
push
jp
rcr
cwtl
inc
andl
xchg
ja
js
xor
sbb
icebp
inc
loop
sub
bnd
xchg
ss
mov
cmp
add
pop
iret
test
cmp
mov
out
mov
lods
fstp
daa
test
and
lock
xorl
sbb
dec
sbb
add
sub
scas
xchg
mov
sbb
call
insb
into
xchg
aaa
push
fimuls
sub
xchg
jecxz
mov
push
mov
sbb
jecxz
scas
stc
cmp
ss
in
add
aam
jl
dec
int
pushf
fcoms
fisubrl
repz
icebp
dec
bound
mov
cmp
cwtl
iret
fistl
push
cmp
arpl
push
outsb
pop
and
mov
aam
xor
mov
pop
fistpll
xor
gs
jp
outsl
lret
pop
rol
loope
and
in
or
sahf
enter
test
cmpsl
xchg
jp
inc
xchg
lock
loop
push
lds
sar
scas
xor
dec
jns
out
roll
mov
das
jns
add
sbb
xchg
stos
rcll
mov
inc
ret
mov
cmp
jp
mov
lahf
pop
xor
mov
jb
icebp
sbb
push
cltd
mov
jae
jg
fs
sub
lods
cmp
cmp
inc
add
pushf
mov
insb
int
inc
adc
mov
js
call
xor
add
xlat
cmc
loop
mov
fwait
outsl
push
mov
int3
and
adc
in
pop
push
enter
test
cld
out
xchg
test
incb
sub
cwtl
adc
out
leave
repnz
xchg
xchg
in
xor
mov
ss
inc
jnp
push
mov
cli
mov
dec
cmpsb
mov
aas
push
mov
mov
icebp
fdivs
out
cwtl
jle
mov
gs
repnz
outsb
mov
push
testl
add
in
inc
mov
test
in
sbb
je
cmp
inc
jecxz
cltd
xchg
mov
push
mov
scas
mov
pcmpeqd
in
push
xorb
push
popa
js
xchg
fwait
aaa
imul
add
dec
pop
test
sbb
adc
cmc
lock
jno
xor
inc
xchg
es
push
mov
cmp
push
dec
xchg
outsl
pop
or
fistpll
adc
lock
mov
stos
cmpsl
add
fcmovnb
mov
dec
movsl
das
xor
mov
jae
adc
andb
adc
jae
dec
ds
xchg
sub
daa
dec
std
jne
movzbl
sub
dec
fdivrl
fucom
push
inc
sub
stos
sbb
addr16
je
dec
mull
in
mov
pusha
mov
mov
xor
notb
int3
mov
mov
xchg
jbe
mov
or
sub
out
addl
or
sbb
mov
into
daa
cmpsb
lea
jp
into
iret
cmp
adc
rolb
loopne
fisttpl
icebp
push
les
leave
cli
xchg
push
mov
sbb
insl
push
test
push
push
or
xor
int3
lret
inc
mov
hlt
mov
mov
bound
sbb
lds
lods
fucomip
cwtl
lahf
pusha
rorl
push
loopne
out
lods
mov
cmp
push
lcall
or
pop
cmp
lods
jbe
adc
push
or
pop
pop
pop
das
cmp
cmp
cmp
add
mov
loop
daa
xchg
and
and
mov
arpl
frstor
inc
dec
mov
push
push
js
add
sbb
int3
push
fiaddl
adcb
mov
mov
add
inc
cwtl
cli
xchg
test
sub
mov
das
mov
imul
jle
inc
cltd
push
ja
insl
or
stos
add
mov
pop
jmp
scas
xchg
mov
mov
xchg
sub
or
jge
repnz
icebp
dec
imul
in
add
movsl
pop
mov
movb
dec
and
ja
adc
subb
sub
dec
insb
lret
rolb
rcll
add
int3
pop
jmp
movsl
in
add
std
jp
add
sub
out
fs
pop
clc
mov
xchg
fimuls
push
dec
stc
sbb
scas
push
fidivrs
mov
test
push
jo,pt
mov
mov
cmpsl
and
xchg
movsb
rcll
mov
popf
cmpsl
sti
jb
sub
std
dec
cmp
nop
nop
aam
movsl
xchg
jmp
lahf
adc
daa
sarb
cli
loopne
push
rclb
inc
lret
xchg
fbstp
faddl
pushf
rorl
add
push
adc
roll
pop
pusha
cmp
mov
pop
icebp
adc
sahf
imul
shrb
inc
ss
pop
inc
enter
jbe
adc
sbb
inc
testb
insb
jmp
lods
lds
ret
push
in
or
jge
gs
push
icebp
jnp
sahf
stc
add
mov
sub
subl
rcrb
das
stc
pushf
mov
movsb
dec
sub
sub
lfs
fs
nop
scas
cmp
scas
mov
aaa
lods
xor
je
inc
scas
xchg
jle
jle
xchg
dec
pop
push
dec
pop
inc
in
pop
cmp
xlat
pop
mov
add
add
xchg
jecxz
jg
hlt
or
push
repz
adc
cmpb
jp
loope
push
jo
mov
in
push
xor
add
adc
mov
pop
or
loopne
into
mov
sub
clc
rcl
repnz
pop
or
sti
flds
pop
jp
add
adc
mov
aad
mov
loope
dec
es
mov
aad
sub
and
sub
mov
cwtl
hlt
cli
jbe
jmp
jae
dec
adc
push
adc
cmpb
dec
cmp
jmp
sub
jae
dec
push
das
mov
enter
popf
dec
movsl
call
das
jo
stos
jnp
xor
repnz
lods
and
in
fsubs
jae
arpl
in
dec
pop
or
aam
pop
sbb
push
fdivr
stc
adc
jbe
and
int
popf
adcb
cmpsb
mov
adc
pop
je
cmpsb
ds
pop
in
cmp
mov
jo
lahf
fcoml
stos
popf
cmc
subb
mov
int3
sub
sti
pop
mov
imul
ficoml
pusha
or
mov
inc
dec
dec
pop
iret
jnp
mov
lret
pop
inc
or
xor
ljmp
xor
jmp
adc
fildl
sahf
fldpi
lods
adcb
sti
ljmp
push
call
out
cmp
bound
jecxz
stc
dec
sbb
xchg
xor
mov
xorb
xchg
mov
fsub
insl
dec
fldenv
dec
icebp
jne
pop
cmp
ret
pop
inc
imul
jmp
xor
dec
push
sub
xor
data16
in
jecxz
je
es
je
fcoml
xor
and
repz
adc
jecxz
pushl
test
mov
xor
mov
xor
pop
mov
or
test
mov
fistl
popa
movb
add
sub
adc
dec
pusha
mov
mov
jle
mov
cmp
loope
push
out
cmpsl
adc
andb
push
sub
aad
cmp
and
jae
loope
out
pop
cmp
std
xor
rcll
pop
jp
adc
data16
push
movsb
mov
mov
lahf
in
nop
cmp
or
lods
xor
stos
das
dec
sbb
xor
popa
cmc
fs
insb
pop
cld
int3
sahf
notb
int
ss
cmp
sub
push
mov
std
testl
gs
outsb
cmpb
and
xlat
cmpsb
inc
sbb
out
mov
ja
das
dec
popa
dec
int
sahf
jmp
mov
sahf
arpl
xchg
and
inc
pushf
cmpsb
das
in
fdivrs
pop
lret
or
ja
pop
jno
and
jecxz
mov
divl
test
inc
and
xchg
mov
gs
lds
mov
jg
gs
mov
add
push
xchg
ss
cmp
fscale
inc
fs
arpl
test
lds
or
scas
and
in
mov
dec
mov
adc
pop
popf
pop
inc
xchg
add
xchg
lcall
add
sub
insl
pop
test
jnp
pop
fcompl
dec
sbb
loope
ficoms
cmpb
jbe
dec
mov
subb
imul
cli
jo
insl
lcall
mov
mov
jmp
mov
mov
shll
sub
pushf
movsl
lret
cmp
sub
fsubs
xor
jle
popf
jne
sbbl
pusha
test
lret
enter
xor
xchg
mov
sub
ret
scas
add
cmp
pop
mov
enter
push
push
lock
cltd
mov
lahf
or
xor
nop
stc
push
popl
sbb
outsl
mov
mov
fwait
sbb
xchg
or
lds
mov
push
pcmpgtd
cmp
cmp
push
xor
pop
inc
das
sbb
stos
sbb
ja
repnz
stos
xrelease
push
xchg
xor
in
push
pop
xchg
inc
leave
mov
mov
pop
or
push
ljmp
pop
dec
jecxz
aam
push
jl
push
enter
jg
or
xchg
inc
dec
test
ss
lods
mov
sbb
scas
adc
in
jne
sub
inc
aas
push
pop
daa
pop
xor
dec
push
stos
fisubrl
int3
lret
shlb
adc
jmp
aaa
popa
jbe,pt
jge
xchg
push
pop
cmp
sub
pop
mov
and
fmuls
adc
mov
mov
loop
jno
cld
in
repz
cmp
cmpsb
dec
mov
nop
iret
and
mov
inc
addr16
jo
mov
adc
inc
mov
xchg
adcb
mov
dec
or
xchg
adc
out
mov
jg
xchg
jnp
movsl
inc
adc
lock
jg
in
cltd
ss
xor
out
popa
pop
pop
popf
loop
movsl
rolb
adc
mov
xor
icebp
stos
inc
dec
xor
bound
ror
call
rcll
pop
cmp
jmp
outsl
dec
ja
inc
dec
ja
sub
mov
inc
mov
popa
cmp
shll
and
add
pushl
out
sbb
jne
sahf
jb
mov
loop
push
push
or
cmpsl
pushf
in
mov
je
jmp
stc
mov
icebp
cld
negb
mov
scas
inc
dec
lcall
mov
xor
fisttps
stos
jne
sub
mov
pop
ret
push
pushl
inc
test
cltd
xor
xchg
jbe
call
cld
adc
xchg
shl
lret
andl
pop
sahf
andb
fisubs
mov
add
xchg
jle
mov
inc
out
xorb
add
imul
fiaddl
das
mov
lods
mov
shll
ret
fadds
xchg
movsb
cmp
adc
ret
int3
sbb
lock
sub
cmp
test
pop
xor
ss
stos
sbbb
or
push
imul
jnp
sti
mov
bound
dec
stc
gs
jnp
sbb
enter
sbb
pop
sarb
fwait
int3
mov
cld
fwait
add
inc
stos
stc
push
rcr
xchg
aad
mov
insb
dec
add
push
adc
mov
cwtl
add
fs
pop
bound
add
popa
stc
roll
jmp
mov
in
dec
pop
inc
push
mov
mov
jns
cli
dec
les
sub
aaa
jns
ljmp
mov
push
and
push
xlat
shld
add
daa
jge
into
mov
and
test
push
adc
movsl
and
call
push
sub
std
out
pop
add
in
jge
aad
or
clc
mov
paddusw
sarl
call
push
xchg
mov
mov
pop
xchg
xchg
popf
pusha
das
mov
ljmp
dec
jge
std
jl
fnstcw
sbb
movsb
mov
in
push
add
das
cwtl
mov
daa
imul
push
lods
pop
pusha
jecxz
inc
scas
test
push
loope
jns
sub
in
sahf
orb
xchg
push
repnz
popa
mov
clc
lods
or
inc
scas
pop
int3
mov
aam
ja
pop
jae
pop
and
enter
sub
or
jg
pop
cmp
imul
mov
jg
pop
cmp
lret
nop
ficoms
ret
mov
add
mov
adc
lds
jg
in
iret
out
int3
push
push
das
xchg
adc
mov
popa
mov
ret
xor
push
test
jp
push
xor
jmp
test
pop
jns
jg
mov
icebp
mov
xor
or
and
xchg
hlt
add
aas
lods
sbb
rolb
inc
push
nop
imul
and
test
jle
push
sbb
mov
mov
sarl
or
dec
add
subb
test
std
mov
cld
decl
dec
and
out
loopne
add
cmp
dec
loop
pop
or
cmpsb
repz
xchg
mov
sub
inc
pop
adc
adcb
iret
adcb
ret
push
add
xchg
sub
jne
pop
xchg
sahf
mov
pushf
or
mov
push
jno
lret
fdivrl
stos
clc
pop
arpl
mov
sub
inc
jg
mov
out
sbbl
and
sbbl
jbe
fcomi
sarb
stc
mov
adc
sbb
jge
dec
into
fsubrs
push
shll
jo
fcoml
xor
int
pop
loopne
push
mov
out
sbb
dec
cltd
ret
insl
call
cmpsl
fcmovu
std
insl
scas
pop
test
test
push
dec
jle
cltd
jge
call
sub
jge
adc
cmp
jne
add
push
inc
mov
ljmp
mov
pop
sbb
or
xchg
leave
mov
sub
roll
sub
xchg
xor
jmp
std
pop
ds
cmp
sahf
iret
fldcw
insb
les
pop
test
nop
add
cmp
or
mov
repnz
cltd
sbb
call
ljmp
or
cs
iret
inc
xor
mov
in
int
out
xor
inc
loope
mov
ljmp
jl
insb
jb
mov
xor
popf
clc
pop
push
ret
mov
mov
inc
push
scas
xchg
add
mov
mov
inc
cld
add
pop
mov
hlt
cmpsl
in
sbb
sbb
fs
mov
push
popa
and
mov
push
push
int
inc
mov
in
lds
mov
pusha
push
inc
gs
aaa
push
mov
sahf
dec
test
pop
into
pop
movsl
je
hlt
push
aam
outsb
ja
and
push
push
outsb
ss
sub
and
insb
push
ljmp
imul
add
cmpsl
sub
pop
push
shlb
pop
lea
lahf
push
fildll
push
iret
sbb
lret
push
jp
fwait
popf
mov
pop
pop
xchg
out
js
aas
imul
xchg
fidivl
mov
xchg
mov
in
add
shlb
dec
mov
or
mov
sub
enter
mov
cmp
aam
sbb
add
in
pop
cmpb
xor
adc
ret
fidivs
cs
mov
fldenv
adc
mov
data16
in
dec
jp
add
push
imul
sub
mov
out
bound
mov
int3
lahf
sbb
dec
lock
cmp
scas
jge
pop
out
mov
outsb
xlat
movsl
out
jbe
mov
mov
mov
stc
pop
je
mov
pop
jp
pop
add
loope
xchg
jecxz
lods
out
hlt
push
mov
stos
loopne
shr
xor
jp
int
loopne
sti
sbb
and
iret
push
push
clc
mov
fadds
adc
inc
lds
lea
jae
cld
add
loopne
xor
pop
push
jecxz
adc
dec
std
out
fwait
clc
jle
es
inc
popf
and
loop
les
lcall
fidivrl
test
adc
and
adc
lcall
adc
mov
mov
lahf
stos
pop
test
jmp
and
mov
or
push
call
cmp
push
aam
fs
cmp
mov
cmpsb
push
inc
popf
lret
stc
fmuls
mov
es
je
or
dec
sbb
test
pop
jno
ficoms
xchg
pop
sbb
jecxz
imul
xor
ret
xchg
ss
popf
mov
jbe
jp
cli
sbb
cmp
aam
or
pop
hlt
icebp
fmulp
outsl
fimull
jnp
cmp
dec
lods
cltd
sub
inc
fisubs
add
lret
movsl
je
ffree
pop
dec
push
repnz
pop
push
xor
pop
push
sbb
and
mov
stc
or
ds
sbb
out
jbe
cmpsl
bswap
pop
fisubs
js
and
test
xchg
enter
loop
dec
inc
lret
sub
insl
stc
jmp
in
adc
int3
arpl
shl
sub
pop
inc
scas
aaa
inc
ffreep
xor
and
scas
pop
out
pop
subb
mov
gs
xor
adc
insl
or
pop
cld
push
je
cmpl
fisubrs
stc
and
jnp
repz
and
adc
jb
cmpsl
rcr
adc
jo
pop
dec
out
pusha
inc
xchg
sub
data16
cli
dec
mov
adc
fisttpl
inc
out
mov
test
push
push
repnz
xor
or
push
inc
stos
push
lds
mov
push
pop
jg
in
icebp
repnz
lods
mov
cmp
and
or
idiv
inc
xchg
dec
jne
in
popa
call
adc
enter
dec
xlat
sub
es
sbb
dec
or
mov
es
sbb
cmp
iret
lea
test
in
pop
xor
sub
pusha
inc
add
xchg
jl
scas
xor
ret
or
loop
mov
in
cmp
adc
push
jmp
cmp
movsl
xchg
std
sub
push
adc
movsb
mov
movsl
xor
lods
dec
stos
mov
or
inc
mov
imul
pop
fidivrl
out
js
or
lods
pop
aam
pusha
pusha
mov
jge
adc
push
sub
pusha
or
sub
lock
sub
out
ss
pop
lcall
inc
xchg
mov
int3
fsubrl
int3
or
leave
cmpsl
xlat
pop
adc
mov
popa
int3
jp
mov
xchg
xor
or
inc
flds
punpckldq
or
jnp
std
stos
int3
mov
mov
nop
xor
jno
fidivrl
mov
out
xor
xor
loopne
mov
clc
mov
xor
mov
sbb
insl
jne
mov
mov
mov
shlb
scas
pusha
dec
cmp
adcb
or
out
stos
shll
dec
enter
shrl
repnz
inc
or
outsb
data16
enter
cmp
adc
and
or
loope
pop
in
addr16
and
adc
ret
jg
jb
movsl
or
enter
or
js
xor
movsl
dec
lods
std
popf
mov
and
push
testl
scas
xchg
mov
lret
push
ds
inc
mov
and
rolb
out
scas
or
sbb
out
add
mov
cmc
push
mov
loop
inc
or
xor
insb
push
push
loope
leave
xchg
sbb
push
mov
or
inc
pop
add
repnz
test
testb
int3
aam
sbb
adc
cmpsb
xlat
push
out
add
ficomps
dec
mov
sbb
and
in
pop
fs
sti
mov
xor
jnp
insb
adc
mov
adc
leave
or
sbbb
stos
out
push
jbe
lods
cmpsl
push
mov
add
jb
push
and
and
sbb
scas
rcrl
in
add
inc
or
add
movsb
fnstcw
in
vdivps
inc
dec
xchg
sbb
dec
jo
sbb
jge
push
lcall
jo
sub
ret
int3
inc
int3
push
pop
std
cwtl
imul
pusha
stos
movsb
ret
jbe
and
inc
cmpsl
test
xor
xor
jp
cmp
jb
aaa
test
inc
in
data16
out
aad
in
cmc
inc
lahf
jns
fdiv
dec
mov
test
mov
lds
mov
mov
mov
cmpsl
mov
mov
xor
aam
dec
sbb
int3
xor
sti
jmp
xor
ror
mov
dec
adc
and
sti
movsl
mov
cwtl
mov
jle
cmpsl
popa
scas
sub
sbb
data16
pop
mov
lret
test
sub
in
in
loop
insb
das
cmp
sub
sub
dec
mov
push
lcall
call
std
aam
in
call
xchg
sbbl
pop
cmp
xchg
stos
pop
mov
shl
push
popa
stos
cmp
dec
test
ret
les
lods
jecxz
nop
ffreep
fcmovnbe
xchg
loopne
inc
gs
mov
mov
jg
movsl
or
pop
mov
or
mov
jg
nopl
popf
sti
adc
popf
das
ficoml
iret
sub
sbb
aad
shrl
inc
cmp
sub
scas
scas
idiv
outsl
cmp
xchg
lds
pop
xchg
and
xor
dec
cwtl
and
cmp
rcl
int
pushf
shlb
lods
ljmp
fbstp
popf
fmuls
jb
scas
push
xor
mov
psllq
scas
addr16
mov
cs
into
or
loope
inc
inc
lock
pop
push
sub
dec
leave
fdivl
bnd
pop
cmp
jmp
cmp
push
inc
jb
sbb
jmp
addb
test
int3
jnp
sub
dec
loope
sbb
hlt
mov
or
push
insl
adc
dec
test
jmp
flds
std
leave
adc
fwait
mov
mov
lock
jl
loopnew
fs
mov
out
sub
dec
ds
inc
xor
jbe
inc
int
xchg
ljmp
test
and
es
xor
lcall
iret
mov
mov
mov
push
rorb
jecxz
stos
sub
pop
mov
ljmp
dec
push
jno
sbb
mov
pop
int3
inc
pop
sbb
fcompl
sub
pop
add
mov
or
jmp
popf
es
popf
and
jmp
mov
mov
les
leave
mov
test
and
es
pushw
dec
jno
stos
push
xor
mov
sti
inc
pop
ret
popf
adc
lods
sti
and
pushf
das
out
loop
xchg
xor
repz
stos
mov
loopne
int3
arpl
cmp
xchg
les
fwait
out
into
cwtl
sbb
or
mov
imul
mov
cmpsb
mov
movsl
and
outsl
lahf
ret
lods
or
dec
adc
add
test
sbb
ljmp
nop
insb
sub
ficomps
aas
ss
jns
adc
lret
addb
stc
inc
cs
mov
je
dec
fucom
leave
push
test
push
jbe
or
adc
sub
xor
mov
jge
test
sub
dec
lcall
lahf
push
cmp
test
lods
add
pop
pop
mov
xchg
mov
adc
fdivr
mov
mov
jb
fnsave
int
mov
aaa
lods
insb
aad
xchg
nop
ja
or
cmpsb
sbb
push
cltd
sti
pop
notb
mov
rcrb
lea
insl
and
pop
sbb
lods
xor
into
xlat
loop
inc
enter
gs
fistps
adc
push
decb
outsl
sub
and
fcomi
or
shl
fsts
bound
xor
nop
adc
xlat
lods
and
repnz
xor
inc
fwait
mov
xchg
das
out
xchg
jecxz
xchg
sub
or
test
jge
mov
mov
test
or
out
mov
rcll
xchg
es
adc
or
sahf
dec
jnp
inc
aas
fisubrl
push
clc
add
mov
stc
sbb
mov
mov
mov
sub
sub
pop
movsb
aas
lods
dec
jno
push
sar
daa
xchg
ret
gs
sbb
insb
roll
inc
xchg
cmc
lods
cmp
add
add
cmp
lcall
sbb
adc
add
sub
jmp
push
lea
sbb
hlt
ret
lret
mov
jmp
aas
mov
mov
add
ret
fwait
and
std
ret
jns
cmpb
sub
out
ret
push
push
jbe
mov
push
lret
out
vzeroupper
mov
jae
or
rolb
xor
pop
sbb
testl
mov
js
xchg
pop
mov
xor
dec
lret
int3
ja
mov
iret
mov
popa
jge
dec
mov
pop
mov
lcall
addr16
mov
popa
xor
sti
inc
jecxz
pushf
adc
mov
pop
pop
insb
jnp
push
mov
sub
test
lds
in
xor
pusha
stos
adc
outsl
pop
mov
cmp
idivb
lock
ret
es
xchg
jp
jp
mov
pusha
mov
dec
popa
divl
popf
sub
inc
in
mov
lret
xor
xchg
pop
test
sub
cld
xor
daa
insb
xchg
icebp
aad
jge
add
imul
aaa
insb
aas
inc
adc
xchg
sbb
mov
ret
sbbb
xor
jnp
push
call
mov
xor
pop
andl
push
repnz
cltd
jecxz
jb
or
icebp
lea
jae
mov
add
xchg
sahf
fwait
cmp
or
mov
xor
jns
cmp
xchg
inc
movsl
xchg
repnz
je
mov
jne
scas
and
test
lods
mov
cwtl
leave
dec
cli
loope
jb
mov
jge
and
popa
xchg
and
xor
pushf
lods
filds
pop
inc
lea
and
sarb
es
xor
nop
push
xchg
push
hlt
cltd
gs
adc
cmpsb
cs
sub
mov
enter
xchg
stc
orb
in
mov
std
lcall
loope
mov
in
lret
adc
adc
inc
mov
movsb
dec
inc
cli
adc
cmpsb
fdiv
shl
and
ret
nop
aad
loope
ja
adc
scas
cltd
jnp
test
xor
cmc
gs
jb
push
scas
icebp
test
fldt
inc
fists
stos
fcomp
xlat
adc
dec
pop
add
adc
mov
scas
sbb
es
cmc
and
and
in
mov
ficompl
repz
ret
in
int3
inc
mov
jle
jg
mov
fstpt
push
out
inc
das
and
jmp
pop
movsb
sub
out
inc
xchg
mov
incl
pop
sbb
xor
fistl
int
mov
add
xadd
mov
cmp
and
loope
icebp
jae
ret
pop
hlt
sub
or
test
add
dec
shll
loop
mov
es
lods
mov
loop
movsl
xchg
xor
or
add
jno
nop
add
in
adc
rcll
xchg
xchg
push
mov
push
imul
and
adc
mov
sub
jo
and
out
shll
ds
testl
cltd
popf
outsb
add
pop
je
fcoml
shr
jg
lock
insl
or
fcompl
cmpb
insl
movsb
dec
and
cli
test
jecxz
xlat
adc
in
movsl
stos
addr16
jle
jb
std
inc
insl
sbb
add
jbe
data16
mov
pop
sub
roll
pop
imul
lods
adc
inc
mov
pushf
jg
mov
seto
and
dec
pop
jne
or
stc
aam
and
sbb
pop
xlat
sub
inc
sbb
test
inc
out
or
icebp
jmp
jb
in
in
mov
int
dec
outsb
mov
jo
cmp
dec
ds
jge
sbb
sub
jae
push
mov
xchg
push
mov
mov
push
pushf
xchg
mov
sbb
xchg
add
adc
stos
push
push
or
mov
dec
aaa
leave
jmp
inc
push
out
lret
mov
xor
repnz
xchg
mov
aam
lods
jmp
adc
fwait
mov
push
into
add
sbbb
push
xchg
loope
mov
xor
in
fisubl
repnz
mov
mov
pop
repnz
push
rorb
sbb
sbb
cmp
add
test
testb
out
rorl
fdivrp
or
idivb
nop
xor
cmpsl
aaa
out
into
ret
mov
movb
mov
push
adc
or
xchg
xchg
or
mov
pusha
ret
mov
xor
cli
mov
jl
pop
test
js
jmp
jo
xchg
add
mov
mov
out
dec
sub
xorl
jle
arpl
jb
dec
add
add
push
and
ret
enter
das
pusha
push
mov
data16
mov
stos
mov
scas
out
negl
xor
outsl
pop
add
inc
mov
in
sbb
mov
sarb
pop
cmpsb
adc
mov
aad
jbe
xchg
mov
nop
mov
jge
stos
mov
inc
adc
sub
push
xchg
lock
jne
jl
and
xchg
enter
lods
mov
add
stos
adc
cmpsb
fsubrl
in
cmp
imul
inc
cltd
outsl
sbb
mov
in
ds
notl
and
mov
ficompl
inc
mov
aam
enter
movsl
sarl
cmp
cmp
sub
push
dec
cld
rcll
cmp
sub
popf
fsubr
enter
cmp
inc
orl
mov
cmp
in
or
or
inc
js
mov
or
fidivrl
jmp
sbb
sub
jl
push
sbb
test
xchg
dec
add
mov
incb
add
out
mov
and
xor
push
imul
jp
imul
outsl
testb
xor
aam
dec
call
sbb
jne
add
cld
mov
jg
int
jnp
push
orb
push
mov
shl
inc
icebp
stos
xor
dec
js
xor
add
pop
or
push
in
mov
lds
cmc
push
dec
mov
es
mov
scas
pop
leave
jns
icebp
xchg
and
ret
pop
repnz
add
adcl
sbb
add
or
mov
test
or
aad
cwtl
mov
fsts
aam
jns
mov
sub
jbe
mov
and
lods
inc
lds
mov
cmp
and
cs
dec
xchg
push
in
dec
int
jge
ret
test
jno
add
dec
rep
push
mov
inc
push
gs
pushf
loop
xor
es
sbb
fisttpl
xlat
aas
les
push
jle
lret
mov
mov
in
hlt
mov
loop
mov
xchg
ss
jne
xor
jne
fcmovb
push
cld
mov
test
pop
sbb
pop
shlb
cmpsb
ffreep
ret
push
pop
or
add
popf
inc
out
into
sbb
mov
arpl
push
aas
pusha
gs
mov
inc
adc
jo
pop
lahf
xchg
or
mov
cmp
sub
sub
stos
xor
lret
dec
xchg
jmp
push
jp
push
fnstenv
lret
inc
mov
pushf
les
sbb
lods
or
loop
jp
sub
sbb
pop
xor
push
jne
in
arpl
dec
mov
mov
test
pop
test
pop
lds
mov
mov
mov
sbb
ss
and
dec
jae
push
xor
add
loop
and
call
es
lods
stc
jle
lret
leave
addr16
leave
cmp
jg
mov
dec
bound
outsl
fscale
pop
call
mov
dec
mov
inc
xlat
push
mov
xor
push
lods
cld
in
mov
pop
imul
or
pop
clc
int3
subl
dec
in
addb
cwtl
xchg
mov
not
js
or
mov
add
mov
jp
fsubrs
andb
pop
je
test
jp
clc
and
call
xor
clc
cld
mov
xchg
je
movsb
mov
lret
ds
push
mov
rcrb
jbe
data16
pop
sub
dec
xchg
ja
aam
mov
dec
add
push
push
inc
sub
push
cld
call
mov
inc
mov
aas
mov
push
aam
js
ja
push
push
xor
lcall
adcb
mov
aam
data16
popf
andl
pop
xor
int3
fdivs
ja
mov
lcall
dec
push
fwait
in
popf
loope
cmp
adc
sub
or
mov
stos
jae
dec
sbb
data16
lods
pop
ds
add
es
dec
lret
sub
mov
cmp
dec
lock
xchg
dec
jne
cmp
pop
adc
data16
test
out
gs
push
mov
jnp
sub
loop
in
test
shrb
fnstcw
jns
dec
xor
out
sbb
dec
negb
jb
mov
aam
mov
pop
mov
ret
lret
inc
outsb
push
sub
cmp
xor
nop
aas
mov
test
dec
mov
stos
adc
fistps
mov
mov
ss
jg
fistpll
xor
pop
mov
pop
popa
cmp
int
sti
lcall
add
fisubrl
stos
pusha
es
nop
cwtl
in
scas
or
xchg
sub
jg
pop
jbe
fwait
mov
enter
push
out
xor
push
scas
adcb
gs
icebp
clc
adc
decl
cmpps
xchg
xlat
ficomps
jmp
xlat
pop
jp
je
cmc
mov
imul
jl
popf
push
gs
or
cmp
bound
aad
sbb
inc
sbb
mov
mov
jo
sbb
das
adc
push
test
push
lea
add
outsb
les
mov
mov
loopne
sbb
in
mov
mov
jg
shrl
cmp
imul
notb
adc
pop
lea
lods
push
inc
sahf
stos
cmp
xor
divl
sarl
dec
mov
jns
notl
and
mov
nop
insb
sub
adcl
imul
pop
nop
out
fstl
inc
test
shrl
imul
arpl
mov
sub
das
dec
push
scas
jo
inc
add
lds
cmc
cmpsb
xchg
movsl
leave
fidivl
mov
sbb
out
adc
push
xchg
jle
jecxz
pusha
push
popa
lock
mov
lds
jnp
fisttpll
jle
fs
lea
and
xor
and
xchg
mov
add
dec
pushf
sbb
lods
ja
fwait
bound
loope
jmp
jno
sbb
sbb
mov
mov
pop
ffree
xchg
mov
lea
fbld
cwtl
imul
cmpsl
decb
xchg
mov
cmp
sub
mov
adc
std
push
out
adc
mov
out
insb
pop
and
dec
mov
jae
fisttpl
mov
dec
cmp
cmpsb
lea
inc
sub
fcmovbe
test
dec
push
and
pop
jp
lahf
std
xchg
jmp
pop
std
pop
mov
orb
addl
xor
inc
stos
cmp
mov
out
jb
popa
fistl
mov
mov
notb
ret
test
bound
or
add
dec
lret
ljmp
ja
scas
dec
add
jp
insl
movsb
je
aad
or
jno
jb
xor
xor
gs
in
xor
jl
pop
mov
icebp
lret
enter
dec
inc
sub
icebp
xor
jne
loopne
inc
push
aam
jmp
ror
idivl
call
jecxz
jo
mov
enter
sahf
sub
sbb
ds
pop
push
mov
ds
pop
or
dec
mov
pushf
imul
orb
es
sub
mov
testl
pop
in
mov
rol
rclb
popa
into
imul
jp
xchg
into
cwtl
lcall
sbb
add
push
jbe
mov
aaa
into
mov
sbb
sub
popa
ja
loopne
scas
in
adc
insb
stc
mov
lods
and
cmp
out
outsb
push
cmp
and
mov
fcoml
pop
dec
dec
pop
data16
adc
mov
inc
adc
clc
outsl
jl
cmp
sarb
mov
adc
dec
sub
cwtl
ret
cwtl
push
xchg
loopne
mov
pop
fidivrl
sub
or
loope
sahf
xorb
pop
stos
push
imul
inc
jno
rclb
mov
lret
sub
or
or
mov
cmp
loope
lock
sbb
push
add
sub
sti
js
push
mov
jge
xchg
xchg
cmpsb
mov
xor
pop
pop
arpl
jp
std
daa
loop
pop
adc
pop
lret
cmp
push
movsb
add
pop
aad
sbb
loopne
out
adc
pusha
push
repnz
daa
stos
xchg
ret
js
clc
cmp
out
cltd
pop
inc
pop
repnz
hlt
inc
cmp
stc
or
repz
popf
sbb
xor
in
dec
mov
jno
adc
sbb
mov
push
inc
ds
sub
mov
xchg
xor
jg
ss
pop
pop
push
inc
pop
mov
fcomip
fldt
mov
sub
dec
sbb
push
cli
scas
ret
jns
jl
push
jbe
lods
lods
pusha
sub
out
loop
push
pop
jmp
xor
lods
inc
cmp
in
ds
and
mov
flds
sbb
test
sub
int3
dec
mov
push
adc
dec
lahf
clc
addr16
cmpsb
gs
out
push
add
push
gs
cmpsb
icebp
pusha
cltd
adc
mov
pop
cwtl
movsl
outsb
fisttpl
mov
in
lea
filds
sbb
xlat
xor
aas
add
or
std
pushf
pop
test
je
ja
dec
cmc
and
push
test
ljmp
popf
je
inc
lds
cwtl
lods
in
icebp
mov
xor
insb
lods
leave
cmpsb
movsl
scas
in
sti
dec
call
mov
out
mov
test
popa
out
add
das
xor
sbb
pop
add
stc
cmp
outsb
adc
push
shlb
pop
in
pop
add
imul
cltd
fidivl
stc
inc
adcl
pop
mov
push
aaa
popf
inc
stc
pop
jecxz
inc
inc
data16
outsl
std
jno
outsb
pushf
stc
cmp
dec
jbe
xor
jle
mov
jae
decb
or
xchg
push
loop
inc
mov
outsl
in
aam
and
push
xchg
aas
ljmp
mov
fneni(8087
and
pop
fdivl
lock
jae
jmp
jge
arpl
inc
pusha
in
or
shll
sbb
jo
imul
insl
gs
popa
pop
jne
loopne
repz
xor
loope
adc
cmp
and
les
cmp
cmp
stos
jmp
sbbl
pop
jnp
cltd
lahf
insl
cmp
lret
sub
dec
inc
mov
mov
xlat
fcmovnu
xchg
fdivs
jo
mov
xorb
jns
sub
jecxz
and
scas
fnsetpm(287
ret
sbb
inc
sub
outsb
daa
mov
int
icebp
mov
stos
dec
xchg
aaa
or
out
in
push
int3
jg
shlb
rcl
rcll
ljmp
mov
idivl
xor
cmpsb
inc
lds
outsb
ffreep
jp
push
xor
out
adc
clc
mov
mov
sbb
xchg
lds
mov
sub
add
jle
adcb
fnsave
xchg
inc
iret
pop
sbbl
mov
mov
idivl
pop
lds
shlb
popf
call
jge
pop
sub
iret
xchg
add
jp
in
xor
fists
adc
pop
jge
xor
popf
xchg
arpl
push
xchg
lret
pop
push
sti
xchg
aam
dec
xchg
adc
clc
dec
and
and
inc
sub
imul
and
dec
jmp
in
lea
aad
xchg
push
nop
das
popa
xchg
jns
cmpb
std
aam
sar
jns
pop
add
enter
sub
mov
mov
stos
adc
mov
mov
inc
inc
jecxz
sti
add
adc
sbb
fs
mov
jb
loop
pushf
inc
stos
jmp
outsb
movsb
sbb
inc
insl
test
movsb
inc
dec
jnp
or
push
pop
jmp
inc
es
xchg
xor
movsl
jl
xchg
mov
in
inc
das
mov
push
daa
fwait
and
adc
and
shll
xchg
hlt
aaa
scas
xchg
out
adc
lcall
push
pop
push
xchg
stos
or
jg
arpl
in
mov
push
jl
lret
ljmp
push
aam
movsb
out
enter
dec
mov
mov
lahf
orl
or
mov
cmp
jnp
mov
and
sub
es
pop
or
adc
jmp
nop
pushw
lods
pushf
pop
inc
mov
xchg
scas
movsl
les
lods
roll
and
fsub
add
adc
xor
mov
mov
rolb
dec
jo
jg
loope
jno
das
ja
pop
jae
mov
and
adc
ds
fs
fisubl
cmp
cwtl
or
ja
xchg
lods
cli
lret
or
or
adc
push
ret
xchg
sub
dec
xchg
and
lret
mov
push
pop
pushf
movsb
mov
cmpsl
imulb
cmp
pop
outsb
sbb
cs
mov
mov
js
or
mov
mov
test
xchg
ljmp
insb
gs
xchg
add
cmpsl
rorb
into
jae
sbbl
int
sbb
sarl
or
push
cmp
jecxz
pushf
inc
lahf
or
into
arpl
sub
subl
mov
jnp
jp
inc
adc
lods
sub
icebp
mov
xlat
cmp
jo
cmp
aam
sbb
aam
xchg
mov
or
sbb
lock
js
jg
push
inc
or
lret
sub
out
dec
xchg
inc
jae
pop
icebp
pop
cmp
or
or
lret
ss
test
add
ja
hlt
push
imul
mov
push
subl
out
ret
sub
add
mov
jno
movsl
in
push
mov
and
out
add
push
push
and
mov
pusha
mov
jno
stc
fcoml
inc
jmp
inc
or
addr16
arpl
jno
jno
in
pop
jp
sahf
cmpl
or
sbb
add
imul
xor
in
xor
fyl2x
sbb
xchg
mov
mov
mov
jl
pushfw
xor
jae
je
mov
arpl
fwait
imul
push
cmp
cmp
insl
inc
inc
sahf
dec
jb
repnz
push
dec
inc
sub
jecxz
pop
mov
hlt
int3
xor
adc
jne
push
cmp
jge
movsb
pop
idivl
pop
mov
xchg
pop
xchg
aas
xor
xchg
gs
sub
aas
pop
adc
cli
pop
xchg
clc
mov
mov
lahf
pushf
pop
in
scas
into
lret
aas
pushf
popa
xor
lret
nop
sub
aam
inc
ret
das
repz
sbb
roll
add
mov
or
xor
stc
xchg
mov
pushf
jp
add
fwait
outsb
shlb
test
mov
int3
adc
flds
and
lods
mov
fstps
shl
loop
inc
cltd
pop
mov
pusha
mov
in
dec
jmp
xchg
jmp
mov
sub
ret
aaa
cmpsb
add
scas
stos
jns
fcmove
push
cmp
out
jp
ja
data16
lea
xlat
xorl
out
shr
orl
andl
mov
dec
call
adc
cmp
gs
pushl
fs
mov
mov
inc
test
xor
ds
adc
cli
shrb
ret
mov
xchg
test
jecxz
cmc
out
sub
aam
xchg
adc
cmp
sub
dec
jae
arpl
mov
ljmp
pop
sbb
xor
inc
lahf
mov
and
push
sbb
mov
shlb
insb
or
jmp
pop
push
rolb
xchg
dec
cmp
insb
xor
cmp
add
roll
jp
sbb
lods
into
out
popf
mov
add
pop
ret
jnp
ret
outsl
aad
out
lock
push
or
out
fildll
dec
lds
push
jns
into
outsb
pop
data16
mov
dec
fisubs
mov
leave
cmp
ret
loopne
add
stos
mov
xchg
repz
mov
jmp
movsb
dec
in
xor
add
push
imul
arpl
jle
lock
mov
ficomps
adc
sub
or
cmpsl
lret
lahf
and
push
jmp
add
nop
in
out
sarb
out
shlb
jle
mov
lods
loop
hlt
xchg
in
dec
jmp
pop
and
cmpsb
cltd
icebp
pop
dec
cmc
cmp
mov
idiv
push
dec
inc
or
jp
outsb
xchg
pusha
out
out
pushf
int
fildl
push
in
inc
mov
int3
fsubrl
shrb
es
stc
jg
jns
rolb
inc
push
ret
cmp
fildll
mov
xor
fcoml
int3
xchg
outsb
mov
stc
movsl
cwtl
or
lret
dec
xchg
nop
ret
mov
dec
add
jl
fsubrs
sub
inc
fwait
sub
testl
in
mov
lods
scas
sbb
fistpll
adcb
inc
lcall
mov
ljmp
inc
xchg
sub
std
and
xchg
sahf
movsb
out
lahf
insb
dec
hlt
mov
push
call
mov
or
frstor
leave
push
add
sbb
fnsave
xchg
xchg
sti
sbb
jno
into
and
imul
das
adc
jns
add
loope
xchg
loop
call
imul
roll
xor
inc
mov
nop
rclb
sub
das
pop
mov
out
sub
lods
push
loope
loopne
mov
test
adc
ss
dec
ljmp
ss
loopne
mov
mov
ss
pushf
ja
xchg
sub
xchg
daa
pop
test
or
pop
and
or
out
fiadds
sub
test
and
mull
lahf
or
pop
andl
lds
scas
sbb
pop
xchg
std
cltd
fprem1
stos
mov
ret
add
xchg
addr16
dec
mov
daa
cs
clc
dec
aas
sbb
xlat
repz
push
push
into
adc
cwtd
in
cld
lods
pop
jmp
cmp
lods
cmc
mov
pop
and
scas
mov
movsb
mov
mov
arpl
dec
pusha
cmp
mov
inc
sbb
jp
xor
mov
int3
sbb
jns
repz
movsl
mov
xchg
insb
jnp
sbb
cwtl
in
push
mov
cmc
incl
dec
bound
dec
jmp
mov
iret
pop
fcom
test
fs
mov
insl
rcrb
dec
in
xor
sahf
iret
push
push
ret
test
jnp
fsubl
push
xor
stos
in
mov
cld
jnp
inc
movsb
jnp
dec
cld
xor
loopne
fdivrl
mov
push
adc
or
int3
mull
adc
shlb
ljmp
mov
xlat
sub
jo
jmp
add
aas
es
add
add
aam
sbb
jp
xor
insb
mov
imulb
insl
mov
repz
mov
aam
pop
cmpsb
idivb
sahf
aaa
into
mov
xor
aad
rclb
leave
shll
push
mov
in
int
mov
sub
icebp
and
jne
fcmovbe
rcll
ja
nop
fwait
or
fldl
iret
mov
adc
jl
jmp
and
pop
pop
push
test
xor
or
cmpsb
mov
adc
fldl
mov
aas
test
fcoml
daa
pop
int3
cmp
hlt
out
je
ljmp
cmpsb
in
mov
mov
sub
xchg
mov
mov
in
xor
dec
mov
mov
lahf
mov
js
pop
cmp
push
sub
jge
add
mov
mov
cmp
imul
inc
cld
mov
rolb
mov
dec
mov
mov
add
and
jbe
ficoml
xchg
xor
jg
jg
mov
cmp
out
pop
pop
or
sub
dec
jmp
in
dec
xor
icebp
jle
inc
mov
mov
pushf
scas
jmp
fld1
pop
lods
xor
fwait
jmp
daa
arpl
enter
sbb
scas
in
subl
in
push
jle
mov
cmp
lahf
or
test
and
push
rcll
sbb
scas
fwait
adc
into
je
jp
inc
insb
and
pop
shlb
and
stos
sub
loope
mov
in
icebp
gs
mov
sbb
mov
shlb
ficomps
mov
pop
movsl
jmp
mov
addr16
inc
xlat
aas
sarl
mov
movsb
data16
subl
mov
push
mov
mov
push
mov
leave
push
icebp
inc
in
rclb
push
bound
rol
sbb
push
cmp
adc
xor
push
inc
add
jmp
gs
js
dec
cmp
and
xchg
jg
sbb
mov
test
xlat
iret
out
lret
sbb
or
sbb
mov
test
jmp
push
in
pop
mov
test
scas
sbb
stos
int
xchg
mov
ror
xchg
mov
les
in
inc
popa
pop
lods
inc
xchg
out
and
enter
not
mov
push
orl
fnstenv
push
ds
aad
and
xor
ja
fistps
and
pusha
lret
mov
sub
xchg
sbb
xchg
mov
xchg
inc
lahf
xchg
and
or
push
mov
mov
dec
mov
sbb
mov
cltd
adc
arpl
pushf
clc
xchg
mov
testb
or
jno
jl
push
inc
push
inc
xchg
iret
add
sub
das
movsl
into
inc
hlt
inc
xchg
fiaddl
into
fwait
sbb
jle
sub
lret
es
xchg
popa
cmp
movsl
stos
insb
repnz
mov
scas
mov
jo
xchg
bound
pusha
loope
mov
push
fdivl
adc
dec
cltd
push
push
popf
pop
negl
js
jle
inc
xor
or
loop
in
pop
cli
and
cmp
adc
repnz
xchg
loope
mov
xor
pop
fldl
xor
dec
shll
movsl
lods
gs
xor
aaa
stos
xor
sub
dec
pop
add
push
sahf
stos
fs
cmp
mov
bound
addr16
ja
xchg
mov
dec
push
gs
push
das
push
xor
test
sbb
mov
mov
mov
jge
xchg
mulb
bound
int
xchg
ficoms
and
mov
sbb
mov
mov
dec
hlt
add
js
gs
xor
cmp
jle
pop
add
xchg
adc
loope
jae
or
sbb
imul
jle
enter
jnp
mov
dec
inc
pop
fldcw
adc
out
xchg
repnz
push
loop
add
mov
subb
dec
xchg
dec
and
cmp
rcrl
in
sti
fs
out
ja
mov
fs
xor
cld
pop
xor
std
adc
ret
jne
nop
sarl
pop
aaa
loop
bound
jg,pt
popf
xlat
loope
mov
mov
jae
xchg
inc
pop
je
or
xchg
fidivl
fimull
pop
cmpsb
sub
jmp
add
mov
js
rolb
inc
jmp
icebp
shll
fldcw
jg
xchg
jno
fisttpll
xor
pop
sti
push
mov
test
pop
mov
lahf
or
and
pop
cmc
xchg
mov
xor
and
xchg
lods
jo
push
dec
dec
icebp
scas
andps
imul
pop
xor
in
push
test
cmp
xchg
daa
fidivrs
adc
sbb
and
out
test
or
int
test
pop
das
jecxz
es
daa
jne
push
std
mov
subl
mov
pop
ret
and
cmpsb
inc
mov
iret
scas
push
pusha
loop
sub
cmp
sbb
inc
sbb
mov
mov
push
pop
and
repnz
xchg
push
push
and
mov
mov
mov
cmp
ja
addr16
cli
pop
sbb
and
ret
inc
repnz
inc
int3
jo
or
ret
inc
dec
mov
and
cmp
pop
sub
mov
mov
adc
nop
stos
fdivrs
std
sbb
insb
jl
cmp
loope
pop
dec
lods
test
imul
push
and
lods
bound
and
std
jg
mov
outsl
adc
inc
shl
sbb
stos
popf
mov
mov
add
ret
push
jnp
push
adc
test
in
sub
push
test
mov
push
mov
add
aaa
inc
mov
mov
je
dec
insb
in
ret
pop
sbbb
sub
push
flds
or
stos
push
jb
mov
and
cmp
add
dec
std
xlat
cmpsl
es
pop
fmul
xor
push
cmp
addr16
rcrl
in
sbb
push
jmp
shll
dec
mov
ja
icebp
cmp
ficomps
push
inc
xchg
stos
jg
lret
loop
xchg
adc
sarl
pop
xchg
pop
fcmovnb
jne
jl
xchg
arpl
and
ss
fs
push
movsl
mov
daa
in
sub
mov
mov
leave
mov
mov
or
sub
and
mov
shll
scas
xchg
jbe
inc
fwait
jbe
inc
cmp
cmpsb
aam
pop
lock
dec
push
lods
es
mov
push
test
mov
push
out
jp
sub
mov
push
cld
imul
add
jecxz
std
cld
mov
mov
jp
pusha
sub
adc
js
shlb
sbb
sbb
ficoml
cmp
ja
fisttps
sub
insl
out
xchg
inc
pop
ljmp
aas
jae
rcr
xor
cld
dec
mov
sub
xor
aam
shlb
test
jp
aaa
push
cwtl
add
xor
ljmp
ja
orb
and
aaa
int3
std
and
or
mov
and
fadds
inc
outsl
fldcw
sar
cmpl
inc
mov
aad
adc
pop
xchg
jge
stos
pop
add
mov
data16
jno
fwait
sub
lret
ret
outsb
cwtl
cltd
or
dec
adc
adc
insl
adc
xchg
push
into
fldcw
lcall
mov
or
ja
adc
pop
mov
nop
push
jns
notl
sbb
xor
xchg
mov
xchg
popa
sub
xor
shll
add
cmp
xor
aam
cld
inc
or
push
fadds
lea
xchg
mov
leave
iret
mov
push
or
xchg
faddp
aas
mov
push
cmp
push
lea
xor
add
loopne
mov
shll
fistps
jmp
sbb
pop
cmp
sub
leave
iret
repz
insb
shlb
shlb
scas
sbb
lea
pop
jnp
sub
push
inc
pop
xor
fst
inc
jne
pop
push
xchg
sub
cmp
nop
mov
sti
cs
ss
xchg
sub
jb
push
popf
xor
mov
lods
in
clc
lods
dec
lahf
nop
popa
iret
fisubrs
xor
jae
xchg
pushf
popa
mov
stos
or
push
loopne
ja
mov
xchg
sbb
das
add
pop
jb
enter
adc
inc
pop
aam
dec
mov
cli
xor
mov
xor
clc
pop
or
or
pop
mov
rcr
xchg
pop
cwtl
cmp
lods
cld
push
add
stos
fsubr
xorl
xchg
insl
pop
inc
addl
frstpm(287
stos
and
shlb
loop
push
jb
test
ljmp
rclb
int3
and
imull
cmp
mov
cld
sub
fsubl
mov
inc
jge
mov
mov
lret
xchg
into
jae
add
lods
cwtl
loopne
xor
inc
fldl
and
and
push
push
jle
add
adc
call
cwtl
scas
in
xchg
adc
addr16
inc
xchg
fsubs
rcrl
mov
sahf
mov
sahf
sbb
sub
gs
cltd
adc
cld
or
ds
xorl
iret
repnz
mov
xchg
ror
mov
or
push
iret
inc
dec
je
enter
clc
lock
je
mov
mov
jo
add
dec
mov
inc
stos
xor
jp
cli
sbb
call
mov
sub
sti
pop
inc
setnp
test
movsl
jb
lods
negb
pop
xchg
cmc
and
int
xchg
adc
jg
scas
jl
in
xchg
pop
mov
jbe
pop
leave
cld
pop
popa
push
inc
push
out
dec
xor
push
add
int3
clc
adc
scas
xlat
icebp
inc
es
add
push
shll
sbbb
sbb
repz
iret
negb
aaa
js
push
sbb
push
cmp
les
xchg
mov
mov
dec
xor
adc
shll
sbb
cwtl
pushf
sub
add
pop
mov
cmp
scas
movsl
add
jmp
push
xor
lods
lods
mov
jg
mov
fidivl
inc
xchg
or
in
or
mov
imul
shll
pusha
aaa
and
popa
in
mov
mov
sub
xorb
jo
leave
pop
and
or
pop
jle
jns
in
and
lds
icebp
sbb
imul
ret
mov
fsubrs
cli
jbe
les
sti
repnz
fs
pop
mov
lea
ds
aad
int
add
add
add
movsl
mov
std
popl
jle
repz
sub
lret
in
push
int
arpl
pop
ret
add
sbb
enter
push
mov
cmp
sub
mov
sbb
sub
jne
and
or
stos
push
push
into
fsubs
fidivrl
icebp
out
aam
xchg
add
cltd
lahf
dec
imul
jae
lea
inc
adc
and
push
iret
cmc
test
jl
pushf
cmp
add
mov
in
xchg
mov
sbb
stos
inc
or
pop
dec
je
mov
jo
push
dec
pop
adc
pop
out
aas
jno
repnz
xor
cwtl
ja
inc
cmp
cltd
jg
adc
mov
xor
push
mov
sahf
add
ja
pop
sbb
push
dec
push
sub
mov
icebp
fsubl
push
iret
jmp
out
xor
pop
scas
mov
jl
loopne
ds
or
cmp
pushf
mov
fxch
popf
sahf
test
sub
shrl
outsb
fsubs
jbe
aas
scas
std
mov
lods
movsl
enter
aas
sbb
dec
jnp
daa
pop
sahf
mov
jle
adc
movsl
insb
arpl
movsb
and
insb
outsl
jne
push
aas
stos
mov
loop
push
jno
push
into
div
sarl
inc
xor
mov
adc
pop
incb
jnp
shll
test
fcoms
and
out
insl
adc
mov
clc
fdivr
jp
adc
jmp
dec
cwtl
jmp
inc
dec
rcrb
mov
push
cwtl
xor
pop
je
bswap
fistpl
js
and
lods
out
mov
hlt
push
mov
xchg
sahf
sbb
cmpsb
jno
mov
fistps
nop
stc
movsl
jecxz
mov
testb
mov
imul
inc
orl
shll
iret
push
test
int
data16
popa
rclb
fistpl
int3
daa
cmp
mov
pop
adc
xlat
mov
cmp
outsl
pop
mov
mov
insl
imul
ret
mov
lods
testl
inc
and
jle,pn
and
dec
push
aas
out
mov
icebp
out
movsl
rdmsr
fcomps
push
popf
pop
je
add
out
pop
jmp
loope
xchg
pop
sub
out
push
jecxz
xchg
add
lods
repnz
loopne
ds
cltd
and
loop
and
iret
sar
arpl
insl
push
sahf
cli
xchg
xlat
cmp
and
lret
test
and
clc
addl
loopew
sbb
jp
xorl
mov
hlt
xchg
pushf
jl
lods
cmpsb
in
loop
mov
add
dec
js
and
pop
mov
insb
jmp
jb
shl
jne
sbb
add
lds
mov
push
pop
ss
or
ljmp
cmp
sub
mov
fnstenv
outsl
js
pop
gs
loopne
cltd
pop
mov
out
inc
dec
and
xor
xor
insb
lahf
lea
mov
dec
jo
inc
inc
sub
frstor
arpl
in
shl
xlat
jb
jb
dec
adc
xor
ss
sbb
pop
je
add
out
sbb
xchg
rorb
scas
fcmovb
xor
xchg
jle
mov
lock
sub
nop
mov
test
das
out
cwtl
sbb
add
mov
cmpsl
lds
ljmp
mov
mov
and
ss
hlt
inc
xchg
xor
push
pop
gs
aam
push
xor
dec
arpl
cmp
ss
fistps
inc
fwait
inc
dec
inc
lahf
inc
in
cs
fidivs
or
pop
mov
outsl
clc
xor
inc
adc
mov
arpl
push
outsb
sbb
inc
ljmp
xor
jb
jns
adc
insl
inc
stos
sbb
or
mov
cmpsb
js
outsb
js
pop
add
stos
notl
iret
push
inc
pop
mov
adc
cmpsl
push
jno
outsb
xchg
loope
mov
daa
and
sti
dec
cmc
push
loop
out
fisttpll
int3
lods
scas
lds
sbb
daa
pop
mov
std
sbb
shl
test
dec
jmp
mov
dec
add
lret
add
pusha
xchg
adc
jmp
repnz
push
add
push
mov
stos
mov
xchg
shlb
adc
insl
stos
clc
or
movsl
and
ja
mov
lahf
mov
imul
xchg
adcb
mov
add
ret
or
mov
lds
frstor
lea
mov
lahf
mov
mov
in
dec
sub
mov
mov
cwtl
sub
bound
mov
jg
inc
jae
sbb
and
xchg
mov
icebp
je
xchg
or
aaa
popf
repz
push
mov
inc
lret
jge
cmpl
xlat
xor
test
testb
jg
or
mov
lcall
test
jge
xchg
pop
ret
clc
xchg
push
test
lods
imul
or
gs
xchg
aad
daa
adc
int3
imul
mov
jne
pop
clc
pop
xor
xor
inc
aas
mov
push
sub
lret
mov
mov
jns
sahf
rcrl
push
insb
cmpsb
insb
mov
adc
and
std
int3
cmp
js
cmp
jp
movhps
pop
rclb
inc
and
pop
pop
ficompl
pop
push
test
fucom
jge
jg
xchg
adc
cld
sbb
mov
aam
popf
push
ja
jbe
cwtl
aam
dec
in
insb
or
pushf
sbb
push
xor
out
and
std
jl
sub
stos
fldt
bound
xchg
xor
call
jae
bnd
imul
push
dec
dec
mov
addl
aaa
or
xor
sar
and
inc
cmp
mov
adc
movsb
inc
and
jno
movsb
and
rolb
clc
mov
xlat
jnp
xor
ret
and
add
pop
fldt
jns
jmp
or
mov
arpl
cltd
sbb
sbb
mov
movsl
jno
addr16
sbb
xor
adc
fbstp
wbinvd
xor
ss
sarl
adc
repnz
lods
dec
cli
call
xchg
adc
mov
mov
das
jns
xor
mov
rolb
ljmp
dec
fsubrs
push
xchg
mov
les
mov
into
incb
iret
sahf
sub
test
cmp
or
or
add
sub
mov
cltd
mov
dec
test
stc
jo
int
cmp
adc
xchg
add
aaa
dec
repz
mov
testb
in
aaa
and
les
inc
or
adc
mov
popa
fmuls
or
jmp
pop
ret
popf
shll
mov
or
fcmovnb
insb
sbb
insb
rolb
and
insl
jl
jae
fldenv
subb
add
into
cmpsb
sub
mov
jne
dec
imul
icebp
addl
lahf
dec
inc
loopne
lea
fdivrs
inc
in
lcall
les
and
adc
pop
repz
lret
push
inc
repnz
lea
xchg
sbb
iret
dec
imul
mov
sti
push
mov
and
sbb
dec
mov
sbb
or
cli
leave
fdivrl
fistpll
jge
mov
mov
pop
dec
push
and
lcall
inc
pop
cwtl
inc
test
push
mov
enter
mov
push
js
cmp
ret
xchg
cmp
and
jne
test
mov
xor
andnps
hlt
lret
mov
cmpsb
lock
mov
les
dec
sarl
dec
std
and
fldt
ds
clc
add
test
jo
fistl
pop
lret
push
ret
push
popf
hlt
hlt
dec
gs
mov
xor
clc
sahf
cmp
fildll
in
out
or
cld
repnz
and
mov
clc
subl
out
rolb
jno
lea
sub
push
push
pop
xchg
adc
adc
or
sbb
lahf
jne
adc
cmp
scas
loop
and
int
jg
scas
fisubl
inc
and
cld
pop
xor
leave
out
insl
xor
inc
imul
push
pop
mov
sbb
lret
cmp
jecxz
ds
dec
std
shrb
dec
mov
pop
mov
xlat
xchg
cmc
pop
push
adc
cs
sub
sbb
testb
das
adc
imull
imul
daa
test
jp
and
add
fisubrs
mov
jecxz
and
mov
sub
cmp
add
fstpt
xchg
arpl
fisubl
mov
stc
into
popa
jge
mov
insb
push
cmpb
call
ret
pop
jmp
push
jmp
mov
leave
ret
add
cmp
pop
sub
out
popa
nop
cwtl
outsl
cmp
pop
sbb
in
dec
nop
mov
pop
pop
into
mov
sub
jle
insb
rcrl
jmp
mov
daa
enter
jne
pop
mov
mov
lret
icebp
xchg
les
mov
scas
sub
fdivl
push
or
shr
ds
xlat
jae
out
pop
lret
jae
mov
xor
push
aad
popf
aaa
or
mov
repz
nop
push
cltd
inc
xor
repz
sbbb
inc
les
dec
mov
pop
and
or
xchg
in
cmp
mov
lss
ffreep
dec
mov
outsl
push
jbe
push
mov
out
pop
push
dec
sbb
lods
daa
mov
mov
movsb
out
cmp
scas
lock
mov
sbb
adcb
inc
push
icebp
int3
addb
pusha
xchg
subb
xlat
fsubs
mov
cwtl
pop
fsubp
je
popa
lahf
jle
lea
mov
lods
push
hlt
mov
push
push
mov
add
shrb
and
fs
sti
mov
add
sbbb
shll
enter
es
pop
add
add
pop
dec
mov
cmp
and
mov
cs
mov
mov
adc
dec
lods
ljmp
xor
jmp
jo
fwait
adc
je
mov
scas
jne
xlat
and
or
jne
sbb
mov
imul
xlat
sarl
and
ds
hlt
push
negl
clc
pushf
shrb
mov
push
mov
outsb
fistpl
push
aam
fmulp
sbb
fstl
push
icebp
in
mov
jecxz
mov
dec
or
sti
adc
xlat
imul
lods
stos
jne
fwait
jnp
aad
aad
xchg
mov
dec
push
stc
cld
mov
out
in
mov
sbb
or
mov
pop
pop
sbb
xchg
sarl
xchg
decb
lcall
loope
inc
cmp
int3
jle
das
movsl
add
filds
add
es
pushf
xchg
push
push
ds
jno
push
out
jns
jge
ficoml
inc
sub
inc
mov
xor
in
daa
adcb
cmc
pushf
fdivs
and
jge
adc
int
andb
sub
repnz
mov
js
sub
std
cmp
mov
pop
fcmovbe
stos
xchg
shlb
push
cli
ja
add
scas
pusha
lods
sub
or
stc
mov
popf
fmuls
mov
lock
xchg
mov
mov
xor
jp
or
sarl
jno
movsl
subl
mov
cmp
pop
stos
sbb
and
fldt
adc
sbb
ss
cmc
sar
lea
xchg
or
test
dec
gs
sbb
jle
test
das
cwtl
push
andl
into
mov
jmp
faddl
or
and
push
lahf
inc
mov
jmp
dec
jge
push
and
fsub
xlat
int
or
adc
test
sub
out
inc
vmwrite
cmpb
inc
popf
xchg
cmpsb
jecxz
pop
pop
sub
ljmp
scas
enter
rorb
add
test
or
mov
neg
xor
mov
pop
jge
xchg
sub
ret
jne
mov
mov
sahf
je
xlat
mov
mov
sub
xchg
rclb
sbb
pop
enter
loop
sbb
ficoms
clc
sub
jb
cli
fisttpll
lcall
cmp
sarl
out
xor
bound
call
or
ficomps
std
xor
fmull
fisttpl
sbb
add
ss
xor
sarl
cmpsl
popa
out
add
aas
push
lods
cmp
sbb
outsl
mov
mov
push
cmpb
pop
test
mov
jg
sbb
sub
push
xchg
aas
xlat
fildll
mov
push
jmp
jp
jno
repnz
out
xor
inc
pop
loop
int
or
mov
mov
aam
push
mov
xchg
inc
rcl
sbb
pop
adc
idivb
mov
test
sub
aaa
fs
pop
loop
insb
mov
cwtl
mov
push
push
dec
sub
in
mov
cmp
aad
jno
lahf
cwtl
movsl
dec
sahf
mov
stos
cmpsb
xor
stc
inc
cmp
xchg
push
cmpsl
int3
imul
pusha
xor
ds
fstl
leave
test
rol
or
push
orb
or
and
js
push
es
mov
xor
pop
mov
sbb
mov
shr
mov
pop
fnstcw
cld
push
ret
cmp
xor
jmp
adc
sarl
and
ja
test
mov
mov
sbb
lods
in
lock
imul
int3
nop
in
and
in
adc
add
sbb
es
pusha
xchg
xchg
ret
cmp
sbb
cmp
gs
sti
push
mov
test
ds
sbb
add
xor
mov
cmp
test
pop
mov
mov
ret
sbbl
fisubrs
adc
outsb
loope
xor
add
mov
outsb
addl
adc
xor
fstpl
cs
jbe
and
add
fldt
pop
xor
jns
scas
jge
add
mov
jle
dec
arpl
sbb
sub
jbe
rcll
push
cltd
sub
sbb
lcall
hlt
pop
xchg
fisubrs
cmp
sbb
fstp
ret
pop
stos
xchg
add
adc
adc
int3
std
in
dec
pusha
push
scas
dec
punpcklwd
mov
loop
int3
mov
dec
outsb
popa
test
mov
into
out
cmp
inc
sbb
inc
and
push
xor
pushf
call
fsubrp
or
mov
test
into
cmpsl
scas
leave
mov
mov
lahf
mulb
je
push
mov
push
movsl
add
mov
push
sarb
pop
into
arpl
mov
adc
dec
inc
js
xchg
fidivrl
sub
adc
or
push
fwait
scas
jns
nop
sbb
push
pop
lods
fisubs
jle
xchg
inc
mov
sub
sub
dec
cs
cli
jno
mov
je
jne
jmp
shll
add
pop
mov
fistps
mov
ret
jp
ss
cmp
andl
je
adc
mov
es
xlat
dec
pop
push
ret
xchg
arpl
sbb
je
loope
jns
xor
push
add
inc
jb
xor
cmpsl
adc
nop
xchg
test
mov
xor
mov
int
add
fwait
jmp
sarb
add
dec
and
xchg
les
inc
jb
insl
adc
lahf
das
and
push
dec
mov
mov
adcl
in
mov
stc
out
lcall
xor
jmp
xor
dec
mov
add
pavgb
jle
inc
mov
scas
push
jmp
pop
pop
fbld
ljmp
nop
cmp
mov
mov
scas
ljmp
xor
gs
gs
dec
out
push
sbb
addr16
cmpsl
clc
xchg
addr16
test
fstps
popa
int
xor
ljmp
loop
pop
lahf
sbb
in
xchg
jne
or
push
adc
xor
pop
dec
stos
push
aam
aam
dec
mov
inc
vpminsw
add
jo
dec
mov
push
loopne
mov
mov
jge
aas
push
xor
mov
adc
aam
sub
inc
inc
push
imul
arpl
sub
dec
ret
dec
pushf
or
loope
jp
fwait
loope
jb
sub
add
pand
mov
cmpsb
ljmp
cmpsb
cmc
adc
push
mov
sbb
std
in
cmpsb
xlat
and
and
xor
mov
fldenv
or
dec
repz
js
xchg
dec
sbb
mov
jbe
aam
fstl
push
dec
jbe
stos
loopne
push
push
cmp
xor
loope
push
jg
daa
mov
adc
mov
mov
xchg
cmp
lret
jno
clc
stc
out
inc
xor
mov
cmp
push
cmp
sarb
pop
mov
lcall
mov
outsl
clc
sub
ja
scas
ret
mov
loope
push
addb
mov
cmp
adc
in
adc
inc
jno
xor
mov
gs
xor
sub
sbb
and
jnp
insb
inc
pop
cltd
insb
into
jecxz
rclb
jo
dec
or
arpl
imul
inc
cmp
push
sbb
ljmp
imulb
xchg
add
lock
addr16
in
mov
add
mov
sub
ljmp
mov
dec
add
int3
adc
sub
mov
add
test
scas
fsts
xor
movsb
fldcw
sbb
mov
adc
add
dec
add
outsb
test
hlt
fadd
and
movsl
and
test
push
push
jmp
pop
lahf
jnp
ret
pop
leave
mov
insb
repnz
or
inc
outsl
into
jecxz
adc
mov
adcb
les
sub
and
adc
sub
inc
pop
jp
mov
aad
scas
cmp
push
pop
daa
jns
cmc
fldt
fldenv
into
mov
stos
aad
pop
xor
and
dec
imul
pushf
lods
sub
mov
xor
rorb
in
cmp
xor
cmc
mov
popa
and
or
inc
mov
pop
sub
outsb
mov
xchg
cmp
sahf
adc
ss
pop
sbb
jg
shrl
jno
xchg
lods
push
mov
mov
push
push
and
push
or
push
jo
push
pop
mov
vpmadcsswd
add
rorl
pushf
xchg
scas
xchg
sub
rcll
pop
push
sti
jecxz
aaa
and
cmpsl
ds
xchg
jge
bound
dec
xor
inc
loop
test
cwtl
sbb
faddl
adc
pusha
xchg
fdivrl
ret
push
mov
xchg
and
cli
imulb
out
fisttps
add
xor
sbb
aas
push
cmpb
out
push
leave
mov
push
fs
adc
pop
sub
stos
dec
fidivl
pop
or
mov
aaa
cli
adc
jmp
xor
aaa
shl
mov
push
icebp
sbbb
adc
cmp
decl
in
into
in
cli
jle
pushf
popf
cli
xlat
jno
cmp
lods
jb
push
cmp
shrl
loope
mov
pop
mov
mov
lahf
push
adc
jb
mov
into
mov
sub
push
add
je
dec
push
xor
in
xor
pop
and
mov
fwait
push
shrl
idiv
adc
ljmp
fwait
sub
loope
arpl
xchg
rcl
push
mov
stos
in
mov
push
ljmp
lea
pop
cmp
or
idivb
fnstcw
mov
aaa
xchg
gs
outsb
movd
pop
std
out
jp
cmp
add
inc
sbb
pop
lret
js
push
xchg
ret
addb
sbb
push
xchg
cltd
pop
jp
or
pusha
test
mov
ret
andb
gs
dec
enter
pop
repz
andb
out
xchg
scas
lea
shll
out
add
mov
pusha
inc
fcoml
lods
daa
mov
fwait
repnz
mov
xor
sbb
xor
in
adc
dec
call
jnp
push
inc
inc
add
mov
or
cmp
jne
mov
dec
fdivrl
popa
jbe
jp
or
neg
xor
cwtl
inc
mov
xchg
mov
jns
jmp
and
add
sbb
xchg
add
mov
call
sti
les
fcompl
jp
adc
mov
scas
cmp
sbb
push
push
jns
clc
sbb
push
inc
loopne
in
aaa
sbb
testb
sub
mov
cs
inc
pop
xchg
sti
dec
xor
cmp
sbb
movsb
xlat
push
loop
into
dec
int3
rcrl
scas
imull
add
lds
cwtl
aaa
imul
cmp
stos
rcr
adc
fwait
sbb
mov
push
adc
mov
jae
mov
pop
inc
pop
cli
push
test
cmp
in
sti
pop
movsl
sub
pop
fsubp
in
and
xor
adc
addl
push
or
xor
loop
out
push
adc
hlt
ret
xchg
stos
mov
and
cltd
and
mov
rorb
sbb
scas
cmp
mov
xor
in
cmp
xlat
adc
mov
xor
ds
sub
icebp
nop
repnz
add
pop
mov
cwtl
mov
leave
cld
rorb
pop
fbld
or
pop
cmp
testb
add
lret
add
xlat
sub
je
mov
lods
aaa
clc
in
sbb
sub
ffree
inc
dec
mov
dec
out
fnstenv
xchg
fucom
lret
sub
adc
push
mov
jge
popa
gs
add
or
icebp
rolb
testl
cmp
adcb
pop
jne
and
mov
adc
push
xor
mov
xchg
mov
sub
pusha
cltd
add
mov
std
lds
sub
in
or
push
es
mov
jmp
add
mov
jmp
inc
lcall
test
mov
mov
fs
out
pop
mov
cmp
xchg
ret
iret
repz
jmp
int3
and
sub
and
cmc
jbe
xchg
movsb
mov
xchg
or
stc
ljmp
or
lds
flds
gs
cmp
jle
insl
mov
fstps
mov
jmp
cmpsl
sbb
inc
cli
mov
mov
repz
sbb
push
dec
xlat
or
sti
cmp
dec
sarb
push
popf
cs
call
push
ljmp
fs
lods
aad
sbb
inc
ja
add
push
insl
fwait
iret
pop
sub
sub
scas
jb
ljmp
and
frstor
mul
inc
inc
dec
dec
ret
add
shr
mov
das
adc
in
enter
mov
mov
flds
xchg
shr
jne
jecxz
cmp
cltd
push
mov
mov
push
push
sub
xchg
enter
stos
jmp
mov
add
xchg
rcll
fistps
testl
negb
pushf
push
mov
push
lods
or
mov
test
cmp
das
add
lock
rcl
fs
ds
in
outsl
hlt
mov
popa
jg
or
cmp
rcl
movsl
cmp
inc
popa
xchg
ljmpw
cmp
mov
sub
push
fs
cmp
lods
repz
movsb
mov
mov
push
mov
xor
push
xor
dec
jnp
ja
push
mov
xchg
arpl
loopne
sub
jbe
test
into
xor
add
lret
fs
add
in
repnz
loop
aas
mov
scas
inc
sub
mov
and
adcl
outsb
fbld
pushf
adc
faddl
cmp
out
mov
daa
into
or
imulb
call
hlt
int
cmp
adc
insb
or
js
cmp
pusha
cs
ss
fmuls
leave
testb
scas
mov
jl
adc
divl
push
pop
mov
and
cmp
rol
cmp
stc
inc
pop
addr16
jge
cmc
cmp
sti
iret
mov
mov
hlt
call
cld
mov
out
add
fyl2x
lods
push
fisubrl
cmpl
push
subl
pop
mov
xchg
enter
ret
sbb
mov
jle
test
sbb
pop
inc
inc
xor
inc
pop
ret
sub
xor
dec
inc
or
adc
sbb
push
test
and
add
push
xor
popf
pushf
enter
jb
adc
lock
and
insb
shlb
cmc
cmpsl
add
in
lods
jge
mov
push
cmp
movsb
jl
mov
add
loope
std
mov
push
dec
out
cmp
dec
adc
mov
cmpsl
adc
sbb
loopne
mov
inc
push
push
sbb
jle
loope
aas
fidivl
mov
dec
ret
cltd
int
icebp
icebp
roll
aas
jb
xor
cmp
in
xlat
adc
cmc
xchg
inc
test
jge
into
pop
dec
cli
pop
xlat
popa
icebp
iret
jg
out
jnp
stos
cs
pusha
mov
push
jecxz
push
flds
or
ss
lock
mov
js
test
mov
mov
jnp
dec
popa
lret
dec
push
cmpsl
iret
mov
xor
nop
test
xchg
sbb
xlat
mov
inc
clc
in
test
xor
pushf
mov
bound
aaa
and
test
add
cmpsl
mov
test
inc
jns
rclb
shll
rcrb
adc
push
dec
bound
mov
push
rcrl
enter
jne
inc
flds
inc
cltd
popw
xchg
and
enter
inc
cmp
push
inc
stc
mov
xchg
sub
inc
daa
sahf
sbb
xchg
adc
cmpsb
dec
jle
insl
test
das
mov
add
jecxz
lock
push
fisttpll
in
not
mov
sub
sbb
call
pop
call
and
daa
jge
int
add
adc
jae
fbstp
xchg
hlt
stos
sbbb
inc
loop
out
scas
dec
pop
push
push
repnz
jmp
dec
arpl
lds
adc
xchg
inc
orb
addr16
add
dec
jge
ret
dec
scas
dec
pop
scas
mov
mov
shll
pop
not
pop
in
mov
mov
jbe
call
mov
jns
adc
dec
mov
iret
and
xor
or
std
xchg
adcb
xor
imul
fcoms
sarl
push
sbbb
push
dec
push
push
ret
repz
call
xor
addr16
cmp
xchg
lret
mov
daa
mov
aas
leave
sub
xchg
loopne
test
sbb
test
loopew
adc
xchg
data16
mov
bound
and
sub
call
fsubl
adc
dec
test
xchg
stos
jmp
iret
mov
cwtl
addl
ljmp
mov
inc
pop
mov
addr16
push
push
add
jo
gs
mov
xor
adc
scas
sub
cmp
sbb
and
xchg
pop
or
scas
es
pop
xchg
push
jnp
mov
inc
and
lea
mov
sub
inc
xchg
sbb
pop
sbbl
pushf
jl
mov
or
ret
or
icebp
mov
fwait
sub
and
gs
adc
nop
popa
or
xchg
out
xor
imul
mov
leave
int3
mov
mov
pop
xchg
scas
es
mov
loopne
adc
cmp
pop
dec
fistps
pop
add
lcall
pusha
in
sub
cwtl
loopne
movsl
addr16
hlt
add
add
in
addr16
fldl
jnp
enter
cmp
pop
lock
jnp
xchg
mov
adc
enter
mov
pusha
pop
jecxz
pop
mov
call
leave
daa
xor
mov
cmp
push
adc
xchg
mov
xor
outsl
xlat
mov
ss
push
pop
fwait
hlt
in
cli
test
stos
adc
shrl
jl
icebp
xor
cmp
push
xor
jl
jl
mov
test
das
jns
loope
and
and
dec
leave
pop
push
adc
xchg
inc
rol
and
and
cld
call
arpl
icebp
dec
or
adcb
adc
outsb
sub
nop
mov
mov
push
les
or
xorl
lea
mov
adc
xor
ss
mov
pusha
jbe
arpl
cmc
adc
out
in
fwait
xchg
in
mov
mov
and
xor
push
repz
sub
pop
idivb
shlb
mov
and
into
mov
clc
sub
mov
les
imulb
or
mov
cwtd
and
shlb
lea
or
cmp
jge
leave
push
inc
jo
in
inc
ljmp
sub
xlat
sub
cmc
xchg
sti
pusha
or
pop
xlat
xchg
or
xor
sarl
mov
int3
popf
mov
mov
rclb
test
xor
movsl
nop
insb
push
fucom
popl
popa
mov
ret
sub
dec
push
lcall
cmp
insl
sub
adc
xor
dec
movsb
fnstenv
in
test
push
fnstcw
push
sbb
pushf
aaa
pop
cmp
jno
das
cmpsl
mov
rcrl
leave
pop
add
ficomps
xchg
int3
xchg
xor
fcomps
sub
stos
gs
add
xor
cs
roll
sub
xlat
cmpsl
aaa
mov
int3
js
pop
daa
in
clc
mov
repz
lods
mov
add
jo
jle
dec
loop
jg
and
into
xchg
test
jge
or
mov
cmc
lods
pop
or
sbb
int
lret
enter
std
mov
loope
in
mov
push
lods
mov
ljmp
les
cmpsl
fmul
jg
pmulhuw
aaa
pop
pop
jmp
call
xor
aad
xchg
aad
sti
aad
mov
push
daa
test
les
adcb
loope
lcall
daa
sti
sub
iret
test
orb
lea
sub
xchg
xchg
sbb
divl
cmp
cld
divl
mov
cmpl
sub
mov
movsl
testl
xchg
jmp
pop
nop
pop
daa
mov
jb
leave
mov
rcl
addr16
adc
test
ret
test
xchg
addr16
sahf
fsub
push
stc
lods
fidivrs
xchg
adc
pop
add
lahf
pushf
idivl
or
int3
pop
movsb
add
out
cltd
adc
ret
mov
lcall
adc
adc
int
push
mov
jnp
in
pop
sbb
xor
imul
mov
lds
mov
shlb
adc
adc
stos
add
xchg
cmp
fucom
xchg
insb
repz
xchg
cmpsb
and
mov
jne
and
sub
aas
dec
sbb
mov
xchg
imul
repz
cli
inc
mov
jge
aad
addb
pop
mov
imul
jmp
inc
and
xchg
pop
mov
pop
clc
xchg
dec
pop
leave
rcrw
leave
lahf
mov
push
adc
mov
sub
int
shrb
loop
sub
sub
jbe
arpl
and
jecxz
mov
test
mov
fs
mov
jne
jnp
xchg
incl
xchg
jo
mov
mov
mov
aaa
sbb
cmpsb
and
int
lea
or
inc
fisubl
xchg
push
mov
clc
aas
push
jecxz
mov
jecxz
xor
sub
leave
push
jnp
lahf
scas
pop
dec
fisubl
fsubrs
cmpsl
aam
mov
pop
jne
hlt
loop
pop
jp
pusha
add
mov
jge
decl
mov
add
sbb
xchg
int
jle
es
hlt
push
push
mov
xor
loop
inc
mov
cltd
fidivs
or
dec
mov
mov
sti
cmpsl
fimuls
sarb
test
lds
push
lea
iret
adc
pop
mov
xor
mov
imul
and
shll
or
mov
or
mov
iret
sub
leave
add
xchg
pop
pop
adc
test
jg
mov
jp
inc
inc
cmp
cmp
shlb
cmp
push
dec
cmp
cmp
data16
lock
add
jno
lock
in
imulb
jmp
push
jmp
sarl
arpl
xor
push
pop
shr
negb
rolb
lods
sbb
dec
sub
scas
add
cmc
sbb
rorb
push
mov
mov
pop
xor
movsl
fbld
push
push
xor
rorb
ljmp
add
fcmovb
mov
dec
loop
into
xchg
dec
pop
stos
gs
scas
jecxz
out
mov
mov
lock
daa
roll
lcall
add
xlat
push
xchg
mov
daa
mov
mov
jo
aaa
out
mov
loope
xchg
fisttpll
fwait
enter
lcall
lret
and
int3
xor
in
movzbl
fisttps
dec
mov
xor
mov
mov
int
xchg
or
es
div
inc
int3
fucomp
inc
popf
scas
or
adc
cmp
pushf
cwtd
lahf
in
leave
iret
push
or
xor
adc
imul
stc
xor
jne
or
xchg
int3
sbb
lcall
lret
xchg
lret
fadds
iret
xor
cmp
iret
xchg
or
call
dec
nop
xchg
mov
call
xor
or
mov
loope
mov
mov
ficoml
dec
leave
fldenv
stos
iret
xor
push
into
push
pop
adc
rcll
call
jecxz
inc
mov
repnz
and
or
test
cld
int
shll
gs
popa
cmpsb
cmp
daa
jg
fsubl
lea
icebp
push
fldt
popa
mov
xchg
mov
test
mov
aas
and
dec
mov
mov
je
sub
out
mov
pop
jnp
push
shll
dec
imul
ret
and
shlb
adc
mov
repz
push
lods
imul
rorb
out
cmp
inc
fs
or
sahf
fwait
dec
push
scas
or
add
adc
lds
loope
jecxz
aaa
push
sub
mov
mov
push
test
fsin
movsb
push
add
add
xchg
jecxz
mov
ret
arpl
shll
das
jp
sbb
adcl
mov
adc
jnp
mov
cmpsl
push
and
push
repnz
out
stc
sti
dec
ss
aad
or
jno
repz
sarb
movsb
arpl
leave
fs
or
push
sahf
sbb
lods
sub
out
jnp
cmp
lahf
push
mov
jecxz
gs
mov
popa
xchg
ds
cltd
cwtl
ret
xchg
push
and
jmp
add
mov
imul
pop
mov
lret
incb
cli
mov
cmpsb
rol
aaa
outsl
scas
test
les
and
stc
scas
jp
loop
sub
addr16
comiss
daa
testl
ds
adc
ja
insl
les
sbb
adc
in
ljmp
mov
inc
adc
lea
mov
xchg
dec
push
int3
mov
aam
xchg
sbb
fisttpl
pop
mov
mov
add
inc
inc
outsl
ds
lods
rolb
lret
mov
inc
push
dec
stc
daa
or
adcl
or
jns
inc
sub
and
cmpsl
dec
shr
mov
mov
fsubr
xchg
int
das
hlt
nop
cmp
int3
stos
push
in
or
daa
sub
jg
cmp
mov
daa
inc
pop
mov
pop
lock
into
fstp
sbb
in
pop
test
ret
out
ffreep
xor
cmp
std
enter
dec
inc
rclb
mov
clc
rol
mov
loope
in
cmp
in
xor
or
sbbb
testb
fsubl
sbb
scas
xchg
add
jg
add
mov
mov
mov
adc
inc
mov
dec
xlat
mov
pop
int
outsl
jg
jnp
mov
hlt
out
out
and
xchg
jp
or
or
test
xor
push
out
jb
dec
cmp
insb
fcomip
cli
ss
das
mov
lods
stos
mov
jp
repz
xor
and
lods
loop
repnz
rcll
cld
enter
jp
or
or
aaa
imul
shrl
lcall
pop
stos
stos
addr16
jno
mov
jmp
shrb
push
divb
aad
mov
call
adc
out
mov
dec
cmp
adc
pop
pop
in
das
xchg
mov
sar
roll
xor
jp
jl
jp
dec
fnstsw
inc
pop
jle
push
inc
and
push
js
std
leave
mov
pushf
dec
jg
fdivrl
push
fwait
mov
out
stc
inc
push
inc
gs
pushf
gs
xor
fisubs
ds
ja
add
add
push
mov
push
repz
jb
pop
shl
adc
fiadds
and
mov
jg
mov
mov
xchg
pop
push
nop
push
add
js,pn
fldcw
sub
test
jge
dec
cld
xchg
or
jmp
or
outsb
cmp
ds
mov
push
dec
lods
dec
or
shlb
cmp
movsb
nop
aam
hlt
adc
data16
shll
test
and
push
xorl
or
ja
pop
and
into
gs
sub
popa
push
ret
cmp
push
cmpsb
or
cmp
fdiv
and
ss
cs
lods
inc
aam
jb
mov
push
iret
or
jb
mov
and
mov
std
fildll
push
daa
mov
mov
pop
stos
dec
insl
fldln2
repz
jae
test
jnp
mov
xchg
lcall
lret
push
cmp
mov
xchg
and
out
sbb
sbb
push
call
cmp
sub
dec
call
outsl
stc
adc
sbb
push
push
jecxz
sbb
sahf
push
lret
rorl
mov
sahf
in
dec
out
cmc
xor
xchg
imul
xor
fcomps
mov
repz
mov
adc
pusha
adc
insb
xchg
addr16
jb
div
mov
push
add
mov
pop
inc
mov
lods
call
fnstcw
xchg
jg
mov
dec
add
sub
andb
mov
lcall
je
sbb
filds
shrb
pop
roll
cmpsb
jp
jnp
out
pop
loop,pn
aad
outsb
pop
adc
xlat
cwtl
or
sbb
rcl
mov
jb
push
xor
rolb
ror
jo
lds
mov
repnz
or
sbb
imul
lret
mov
push
push
or
das
sub
dec
loop
push
repz
inc
in
cmp
or
in
pusha
and
lahf
rorl
mov
fisttpll
and
ds
mov
xor
outsb
mov
sbb
loopne
jg
stos
xor
repnz
mov
popf
or
cmp
scas
push
jbe
cli
out
outsb
jno
jge
lock
cmc
ljmp
hlt
add
lcall
clc
and
adcl
mov
lret
push
pop
or
xor
aam
cltd
adc
test
or
lcall
lret
mov
mov
sub
inc
es
mov
clc
insb
inc
inc
adc
test
dec
pop
mov
lahf
cli
in
mov
sbb
xchg
sbb
mov
or
fisttpll
fisttpl
nop
mov
add
push
push
scas
scas
mov
aaa
int3
mov
test
push
nop
in
mov
sbb
neg
stos
jae
fmull
or
sti
pop
or
cmp
bound
add
jb
bound
add
sbb
mov
fcmovnbe
add
and
sub
dec
mov
icebp
movl
mov
sub
jg
sub
adc
hlt
push
dec
push
pop
out
jns
test
xchg
aad
ss
push
inc
inc
out
pop
inc
aad
aam
cmp
mov
inc
push
jp
add
pop
mov
mov
and
sbb
add
ss
jo
xor
add
push
mov
adc
xor
push
enter
pop
pop
rol
lea
and
repz
fcmovnbe
rorb
mov
pop
pop
cs
fimull
jne
aad
dec
pop
mov
xchg
imul
jl
or
add
pop
iret
xchg
imul
jge
dec
jle
cmp
fldenv
mov
cs
sub
lea
mov
popa
insl
jl
sbb
cmp
inc
inc
jmp
inc
stc
push
cwtl
stos
mov
fnstcw
out
mov
call
popf
inc
out
vpunpckhwd
cwtl
inc
sub
mov
sbb
std
xchg
mov
add
scas
insb
push
imul
fs
push
sub
xchg
mov
jle
dec
mov
in
xor
in
cmp
lods
dec
or
mov
inc
jle
sub
imul
fst
add
cmp
aad
dec
dec
adc
mov
xor
leave
push
add
push
dec
inc
mov
dec
add
arpl
pop
mov
lds
or
xor
fwait
inc
pop
cmp
loopne
xchg
mov
movsl
movsl
jle
std
test
jnp
xlat
mov
push
add
popa
fcoml
mov
push
pop
sub
xor
mov
repnz
popf
fidivs
adc
mov
in
leave
mov
xor
mov
clc
xor
data16
sub
mov
and
mov
clc
mov
clc
addr16
popa
mov
test
pushf
cs
idiv
fldl
sbb
pop
addr16
push
and
jp
jmp
or
jmp
imul
adc
pop
fisttps
mov
ffree
push
sti
mov
dec
mov
lods
adc
mov
ds
adc
push
ret
pop
adc
call
cmp
add
mov
enter
leave
mov
scas
lock
in
inc
movsb
popa
cmp
test
mov
pop
nop
jp
mov
push
je
sub
jg
in
inc
inc
sbb
lods
pop
pop
or
inc
or
sbb
mov
dec
out
and
cmp
fwait
inc
mov
fisubs
push
mov
test
or
mov
cwtl
pop
cmp
test
or
shll
sub
inc
or
mov
test
sub
jnp
or
sub
sub
ljmp
mov
mov
mov
push
mov
pop
push
aam
mov
xor
sbb
xor
mov
scas
lods
jmp
shrb
outsl
movsb
jmp
adc
icebp
das
xor
gs
mov
xchg
dec
sub
in
adc
ds
push
push
fists
pop
cmpsl
jae
dec
lock
cmp
xor
jnp
popf
inc
add
jns
hlt
mov
inc
jae
add
adc
popa
push
and
hlt
xchg
add
lahf
mov
push
pop
mov
mov
mov
pop
push
hlt
shlb
and
push
mov
add
add
add
and
or
loopne
inc
std
xor
popf
cwtl
movsb
cld
das
loop
dec
div
cmc
jle
adc
mov
test
sahf
sbb
xchg
loop
rcrl
jb
out
cwtl
fnstcw
pop
lahf
and
test
mov
out
lods
std
imul
fistl
or
popa
mov
ja
movsb
mov
cmp
sahf
and
adc
popa
lret
and
std
fdivl
jmp
mov
data16
clc
clc
movsl
ret
dec
cli
or
outsb
icebp
divb
jp
xor
cld
jmp
lret
sarb
sbb
xchg
push
test
add
cmp
int
cmp
add
dec
xchg
xchg
pop
adc
scas
jmp
mov
add
aas
adc
rorl
mov
repz
add
imul
mov
fcmovbe
or
pop
pop
xchg
dec
sub
cmp
mov
mov
repz
mov
cli
mov
test
jae
lods
cltd
jge
jb
test
add
fiaddl
push
inc
adc
es
fnstcw
add
insb
sbb
adc
jp
dec
push
and
jno
push
mov
cmp
jne
mov
je
jo
dec
imul
cmp
lea
inc
xor
mov
out
pop
sub
lea
push
shrl
pop
jae
push
pop
decb
iret
faddl
sbb
inc
repnz
popa
add
add
sbb
sbb
imul
fsubl
jbe
add
jge
push
or
jne
pop
or
xadd
push
pop
or
jae
stos
ljmp
and
aaa
jmp
ret
loop
stos
pop
cmp
out
jb
test
cmp
fnstsw
insl
outsb
xor
movsb
cs
call
testl
or
lret
cwtl
push
pmaddwd
popf
inc
aaa
push
outsb
sbb
pop
jge
shlb
out
pop
je
xor
fsubl
lret
jno
shl
icebp
es
leave
out
insl
pop
loope
sti
lret
jnp
in
pop
cmp
push
insl
stos
push
xor
push
xchg
push
fldenv
cmp
test
mov
insl
or
xchg
ss
sub
inc
fucom
jmp
ret
mov
call
sub
int
push
in
xchg
sub
fdivl
dec
jne
mov
notb
or
lods
fdivrp
ss
das
push
cmp
cld
mov
mov
push
sbb
sti
xchg
or
insb
cmp
ss
cmc
fildl
xor
pop
in
cmp
cltd
and
dec
loop
fadd
popf
push
inc
iret
mov
sub
enter
lcall
popa
xchg
inc
mov
cmp
in
pop
mov
jge
js
or
inc
or
pop
push
pop
mov
xor
push
jnp
cmpl
jle
mov
jl
pop
jns
je
jge
and
sbb
in
cs
inc
mov
dec
lahf
inc
rcll
pop
lock
cmp
icebp
nop
inc
sbbb
mov
lea
in
cmp
out
inc
hlt
pushf
inc
fiaddl
jae
jecxz
subb
out
jg
mov
in
lret
lret
lods
sub
xchg
bound
jmp
mov
lea
movsb
loopne
add
dec
mov
jo
push
mov
clc
lods
jmp
insl
addr16
and
icebp
adc
cmpsl
lahf
adc
adc
sub
test
cmp
sub
jo
mov
cmpsb
add
imull
dec
sub
ret
popa
jb
js
jg
xor
into
repnz
adc
push
cmp
mov
out
nop
mov
insl
sti
out
push
pop
sub
and
adc
jl
mov
lock
imul
mov
fs
fldcw
fwait
enter
in
mov
mov
push
mov
sti
inc
test
lock
push
inc
dec
sbb
sti
xorl
adc
jnp
dec
add
loope
pusha
incl
cltd
xchg
insb
insl
sarb
and
icebp
cmp
ljmp
xchg
mov
xchg
hlt
loope
aas
repz
jmp
das
rcll
les
or
jle
cmc
push
or
or
cs
out
inc
mull
iret
sbb
outsb
xor
push
imul
lahf
xchg
flds
adc
xchg
pop
vmulpd
out
loope
mov
rolb
or
inc
xorl
lock
xchg
sub
mov
or
loopne
xor
ret
push
and
mov
dec
pop
imul
jbe
sbb
arpl
cmp
int3
mov
leave
dec
out
sub
scas
xor
cs
test
or
lahf
push
addr16
push
xchg
popf
adc
call
lea
mov
pop
je
addr16
shll
jb
mov
popa
cld
push
cmp
fs
inc
gs
out
test
les
xor
stos
gs
push
das
xchg
xor
pop
adcb
or
cwtl
jg
or
add
or
inc
or
in
sbb
lock
adc
das
mov
sub
cli
inc
mov
cmp
and
sub
sbb
rorl
and
loope
sub
and
jle
xchg
and
sub
adc
pop
sar
push
rolb
cmp
lock
sbb
inc
push
mov
lds
dec
sbb
test
cmp
jp
push
aad
test
out
mov
repnz
mov
lret
ja
fsubr
stos
push
jl
mov
xchg
pop
and
rolb
addr16
push
mov
fcomp
fcmove
lret
mov
ret
subl
lcall
and
ja
jl
sbb
repnz
dec
jg
mov
hlt
sbb
arpl
mov
jge
fmull
not
daa
add
mov
push
data16
xor
filds
insb
push
cmc
enter
in
imul
imul
std
fs
out
cmp
repnz
dec
or
ljmp
pop
dec
cmp
shll
xchg
mov
adc
loopne
dec
test
or
and
cmpsl
movsl
xor
lock
outsl
lods
dec
inc
idivb
jne
mov
cld
add
lahf
dec
cmp
enter
cmpsl
sub
in
and
out
jae
jo
out
cmp
mov
fwait
aaa
insb
std
hlt
sub
adc
mov
in
fsubrl
add
enter
in
rorl
push
sub
sub
mov
in
stos
cmp
push
ficoml
into
mov
imul
sbb
ret
addb
mov
inc
pop
mov
or
mov
mov
repnz
and
js
addr16
push
push
xor
or
pop
inc
add
clc
xchg
lea
cltd
and
dec
orb
jnp
repnz
push
xchg
xor
icebp
adc
push
jle
xor
loope
cmpsb
pop
dec
lock
fldenv
jae
xchg
push
outsl
call
je
es
dec
sbb
mov
fwait
out
repnz
sub
xor
sti
fdivrs
ret
lcall
popa
mov
xchg
xlat
mov
push
fs
jbe
in
jb
mov
aaa
aad
mov
pop
test
push
imul
enter
pop
mov
sub
addr16
push
mov
cmp
mov
dec
or
jl
stc
or
andb
cli
sub
adc
push
movsl
add
inc
lds
dec
ret
jb
jae
mov
enter
scas
pop
cs
jg
xchg
mov
fwait
loope
ss
add
fmuls
shlb
andb
add
insl
scas
sbb
ljmp
sbb
cmp
out
repz
in
or
jmp
repz
inc
adc
rorl
pusha
fdivl
lds
daa
lock
nop
int
pop
adc
ja
jns
out
jnp
push
mov
cld
pop
and
xchg
aas
sbb
xchg
push
jp
test
mov
sahf
add
push
enter
fst
int
pop
fistpl
cmp
xor
sub
mov
or
mov
pop
scas
sbb
dec
mov
jg
movsl
pop
cmpsb
nop
mov
test
push
ss
mov
dec
into
mov
push
aas
repz
lret
jo
mov
enter
dec
xor
daa
cwtl
orl
lods
push
mov
mov
mov
mov
xchg
adcl
repnz
les
jge
and
pop
add
ja
mov
sbb
pusha
js
pusha
cmpsl
mov
add
xchg
cld
fcompl
mov
mov
pop
in
imul
stos
jae
hlt
push
mov
loop
or
ja
test
ss
lret
and
pop
sub
pusha
fstps
je
mov
ja
cwtl
mov
push
jae
nop
mov
xlat
mov
notl
divl
add
sti
mov
and
xchg
imul
adc
dec
cltd
test
scas
and
inc
lock
gs
add
jbe
fdivs
aam
pop
lcall
xorb
hlt
xor
out
fisubrl
jmp
push
lret
or
cmp
xchg
push
add
out
dec
sub
mov
insb
jne
dec
pop
mov
daa
mov
mov
cld
mov
lds
inc
pop
xlat
jl
cmp
lods
xchg
mov
rcrl
sti
insb
adc
into
gs
fsubs
or
fs
das
xchg
xor
jg
ljmp
cmpsb
rcl
mov
mov
loope
loope
jl
inc
push
push
cmp
ja
cmp
popa
jno
cld
outsb
cmc
push
data16
adc
cmp
jecxz
sbb
imul
inc
pop
sub
fidivrs
xchg
cmp
mov
adc
jb
daa
sarl
bound
insl
xchg
pop
adc
in
mov
push
das
sahf
xchg
mov
cli
addb
jmp
xor
jp
mov
loopne
xchg
xchg
mull
sti
and
or
dec
int
shlb
jns
movsb
stos
popa
dec
push
push
xchg
rcrb
pop
stos
mov
pusha
mov
mov
add
inc
test
or
js
xlat
lods
lods
cmp
mov
int3
fmuls
cwtl
push
cld
sahf
int3
mov
pop
iret
loopne
in
lods
fiadds
orl
mov
or
jg
fsubr
pop
sbb
cmpsl
in
push
sub
cli
inc
loope
pop
lret
repz
popa
psllq
mov
stc
or
jae
sbb
jp
fs
fisubrs
mov
in
call
scas
fs
inc
out
add
inc
ja
inc
jg
loop
pop
xchg
mov
xchg
cmp
outsl
mov
jno
andl
mov
ficompl
mov
pavgw
arpl
clc
lea
frstor
pop
xor
inc
push
cmovnp
das
sti
mov
or
ret
pop
aam
dec
out
das
insb
push
movsl
popa
cmp
mov
cmpxchg
mov
lcall
mov
sbb
sbb
stc
mov
sub
lds
movsl
xor
aad
sbb
mov
push
jecxz
mov
inc
or
pop
xor
out
sbb
xchg
les
loopne
fcomi
jno
stc
cmpsb
loopne
xchg
sub
push
jmp
sub
aas
mov
and
push
enter
aam
stos
cs
dec
adc
sub
daa
cltd
fcomps
mov
das
mov
cld
mov
in
cmp
pop
pop
pusha
sub
daa
jmp
mov
or
lea
divl
xchg
sbb
sbb
leave
fstps
les
ret
xchg
addr16
mov
push
pop
pop
push
gs
add
pop
stos
pop
inc
cmp
sbb
add
in
sbb
ss
ret
dec
jmp
pop
inc
cmp
into
pop
cmpl
sbb
adc
adc
aad
mov
enter
out
sbb
pop
mull
in
mov
dec
mull
xor
ficomps
cwtl
stc
dec
cmpl
add
ret
aad
cmpsb
fnsave
cmp
pop
mov
dec
jl
lahf
fdivrl
clc
iret
mov
pop
fldt
sbb
cmp
pusha
out
and
or
aad
sbb
test
mov
fiadds
mov
dec
sarb
cmp
mov
cmp
jae
adc
inc
lods
loop
test
fdivs
cmpsb
add
dec
mov
movsb
stc
jg
cmp
loop
mov
mov
das
dec
mov
mov
mov
rcrb
xchg
xor
fsts
dec
xlat
dec
ljmp
add
inc
call
add
pop
sbb
clc
lds
imul
push
jecxz
out
mov
sbb
cmc
out
int
pop
lods
sti
insb
add
stos
mov
movlps
or
in
xchg
clc
movsb
mov
fnsave
sub
and
call
shl
mov
mov
bound
bound
mov
xchg
pop
daa
push
push
gs
pop
movsb
dec
aas
pop
lock
inc
mov
push
fisubs
mov
fcompl
dec
adc
pop
add
push
insl
test
pop
push
xchg
sub
mov
push
pop
dec
lods
push
jb
xchg
outsl
add
fsubs
flds
and
dec
out
mov
push
push
jo
fstpl
lods
pop
mov
xchg
mov
and
int
ret
shl
mov
test
or
leave
push
xchg
fs
pop
xchg
pop
popa
arpl
sti
loopne
lret
fisttpl
out
mov
shll
mov
push
movsb
pop
in
xor
adc
push
jg
daa
jno
inc
ds
push
jne
rorb
mov
sub
mov
or
adc
repz
and
and
ret
call
pop
or
add
push
dec
imul
mov
cltd
addr16
adc
loope
rorb
pusha
push
data16
cwtl
xchg
je
mov
and
push
mov
nop
sahf
mov
xchg
aas
idivl
and
jl
cld
loop
xchg
mov
xor
ret
xchg
xor
push
dec
sbb
ds
mov
int
mov
mov
gs
incl
and
dec
sbb
xorb
adc
in
push
or
arpl
lods
rclb
xor
dec
aam
nop
and
pop
call
add
out
addr16
and
fwait
and
ds
jmp
leave
inc
enter
xchg
bound
xor
test
fwait
sub
xlat
cmp
repz
xor
xor
lret
fldenv
mov
push
mov
sbb
xlat
loope
xchg
dec
repnz
int3
and
dec
xchg
cmp
fwait
mov
cmp
or
push
aas
imul
and
bound
jle
mov
adc
or
sbb
xlat
and
jge
and
popa
aad
push
cmp
addr16
movsb
pop
mov
into
cmp
fdiv
out
push
jns
jecxz
mov
jp
dec
xchg
push
popf
outsb
sbb
or
std
mov
cwtl
and
scas
cmpxchg
mov
mov
mov
adc
xrelease
jo
stos
cmpsb
dec
cmpsl
js
inc
push
stc
cmp
push
in
pop
ret
dec
push
test
gs
or
mov
mov
popa
xchg
sub
jae
and
or
int
mov
mov
cmp
jmp
fstp
sub
fistpl
imul
scas
lods
insb
sub
jp
fmuls
cwtl
rcll
movsl
repnz
xlat
iret
push
outsl
adc
daa
pop
jle
mov
bound
arpl
dec
out
mov
jno
push
inc
orl
xchg
add
lds
xchg
jle
testb
mov
or
fs
mov
and
xlat
xor
mov
or
sbb
js
jno
mov
adc
int
aam
push
xchg
aad
mov
mov
popf
call
xchg
in
and
lds
lret
and
loopne
sahf
into
in
jbe
rcll
hlt
std
lahf
sbb
loop
adc
das
push
repz
cmp
cmp
lahf
lods
fnstcw
pop
imul
cmp
stos
addb
and
cmp
sbb
inc
adc
or
adc
lock
add
mov
enter
lcall
and
add
cmp
mov
add
inc
cmp
leave
xchg
push
aas
shll
cmp
cmp
xchg
xchg
and
repz
addr16
popf
push
cmp
cmpsl
xor
cmp
out
insb
divb
cmp
cmp
sub
mov
sarl
lret
xor
sub
arpl
and
inc
inc
cmp
and
ja
sbb
push
cmp
mov
sub
stos
filds
push
adcb
repnz
add
pushf
jae
adc
fwait
sbb
lods
shlb
lahf
push
jmp
mov
notl
loope
push
sbb
add
decb
imul
mov
pop
push
out
out
lods
pop
jge
cmpsb
add
pop
insl
sbb
mov
jecxz
xchg
icebp
xor
rorl
scas
lahf
adc
adc
idivb
xchg
mov
jbe
stos
mov
or
cmpsb
mov
jb
pop
dec
cmp
lock
aaa
lods
jl
push
ja
cwtl
shlb
xchg
inc
jns
push
fldl
ret
add
jg
out
test
aam
adc
mov
dec
icebp
add
cmpsl
out
mov
xlat
scas
arpl
xchg
jge
loope
push
mov
ficoms
xchg
and
movsl
push
cmp
push
shrb
cld
mov
pushf
jnp
push
dec
jno
adc
icebp
orl
dec
or
dec
int
push
xor
mov
sbb
fstps
dec
ficoms
inc
xlat
test
int3
pop
rcrb
pop
xor
movsl
cmpsb
fisttpll
js
jecxz
adc
fiaddl
nop
dec
in
out
insl
movsb
mov
data16
sbb
out
push
cltd
inc
add
aaa
int3
scas
push
mov
shl
push
out
pop
cmp
or
adc
sub
cmp
lret
in
movl
mov
xor
dec
sbb
jns
mov
nop
outsl
bound
mov
mov
sarb
inc
sahf
adc
inc
sbb
insl
xor
fs
mov
dec
xor
mov
jne
xchg
mov
adc
xchg
cmp
mov
inc
insb
push
mov
gs
add
sbb
cld
ja
inc
mov
pop
gs
popf
insl
icebp
xlat
scas
sub
icebp
insl
push
mov
sti
add
inc
dec
sbb
push
clc
rol
mov
leave
popa
imul
call
sbb
and
clc
and
movsl
test
test
add
push
in
lods
mov
ja
rcrl
shll
mulb
jl
mov
imul
scas
lea
dec
adc
ljmp
int
mov
loop
les
test
and
arpl
popf
push
mov
pop
cmp
in
jle
daa
xchg
pop
inc
stos
mov
test
fld
dec
sub
fbld
bound
cmpsb
push
fstpt
or
in
dec
mov
push
xchg
ds
ja
aas
add
and
cltd
or
push
lods
mov
mov
pushf
js
push
jb
test
popa
cmp
iret
ret
mov
mov
insb
sahf
xchg
mov
test
arpl
aam
cli
push
test
sbb
je
out
inc
in
xor
sbb
xlat
ret
lret
lods
inc
or
sub
ljmp
xchg
sub
clc
dec
rorl
mov
jae
ret
shrb
insb
out
dec
in
mov
stos
and
scas
mov
push
outsb
je
pop
or
outsl
out
mov
jmp
fidivrs
inc
dec
and
mov
pop
int
sbb
and
and
das
and
jmp
fs
fbld
fwait
repz
cld
or
leave
adc
mov
adc
scas
ret
nop
ljmp
test
sub
dec
pop
je
xchg
test
xor
in
lds
mov
lahf
dec
and
andl
mov
insb
jnp
ds
push
lds
pop
and
out
cmp
xor
movsl
push
jp
jmp
popa
notb
cmp
inc
test
fisubs
int3
dec
inc
jle
orb
aas
rcrl
push
lret
lcall
int
xchg
mov
idivl
leave
ja
dec
push
or
cmpsl
aad
xchg
xchg
daa
out
mov
or
jp
adc
popa
aad
les
aaa
lcall
jb
and
push
dec
lret
xor
rcll
push
test
sub
sbb
ljmp
mov
xorb
loop
nop
les
adc
jmp
sbb
xchg
lock
push
xor
lcall
xchg
insb
xlat
xor
int
mov
mov
into
sbb
repz
mov
mov
divb
fstpt
push
test
or
xlat
mov
or
dec
pop
out
addl
dec
mov
es
lret
outsl
pop
jge
pop
mov
push
shll
into
lods
data16
mov
leave
mov
inc
stos
repz
and
outsb
mov
outsb
mov
and
sbb
pop
arpl
test
sbb
push
jbe
sbb
test
in
aas
mov
mov
or
push
loope
and
data16
lea
pusha
or
xchg
xchg
cmp
push
nop
jmp
mov
call
adc
test
shrl
add
sbb
jle
xor
xor
push
movmskps
ja
popa
cli
push
dec
aad
xchg
adc
add
adc
lds
in
dec
loopne
cld
or
cld
in
xchg
fcomip
pop
xchg
add
push
jnp
cmp
popf
push
push
leave
hlt
repnz
sub
cli
pop
iret
dec
push
cmp
sbb
imul
idiv
add
dec
or
xchg
cmp
and
outsl
aam
pop
fcmovb
cs
jl
negb
jo
cs
jbe
sbb
sbb
xor
loop
andl
stos
out
lods
sub
fisttpl
or
clc
pusha
xchg
hlt
data16
aam
mov
jo
lahf
add
push
fbstp
xchg
out
jbe
js
jecxz
add
lea
xchg
clc
pop
inc
addl
fs
ljmp
pop
jae
lods
fs
fmull
jns
or
into
and
pushf
stc
mov
jmp
mov
dec
mov
inc
js
mov
fdiv
aad
and
dec
cmpsl
jbe
movsb
out
cltd
xor
pop
or
inc
xlat
push
into
cmp
jns
add
or
dec
mov
pushf
sti
pop
xchg
pop
out
jp
dec
xor
mov
pop
out
sbbl
or
adc
lahf
push
sub
push
jbe
adc
loopne
xchg
icebp
fildll
sarb
scas
pushf
jns
cmp
dec
sbb
inc
and
lods
loop
cmp
pop
pushf
imul
sub
push
jl
aad
dec
clc
dec
and
loope
insb
int3
cmp
insl
ret
outsl
add
dec
push
pop
sbb
lcall
sahf
sbb
xchg
push
or
test
cs
lcall
or
das
iret
inc
xor
push
jle
adc
outsl
imul
divl
push
loop
lods
and
adc
mov
pushl
inc
cltd
outsl
ss
fdivrs
xor
xchg
push
cmp
pop
into
movsb
inc
xchg
jmp
icebp
loopne
cmpsb
clc
xorl
mov
dec
mov
add
xchg
or
push
cmp
and
push
out
dec
dec
inc
inc
ljmp
push
mov
jae
cmp
aas
mov
sub
and
add
stos
call
push
repnz
stos
addr16
cmpsb
inc
frndint
pop
cmp
sub
xor
jns
add
outsb
rcl
mov
leave
rclb
test
mov
or
sbb
cmp
sub
test
mov
pop
loop
pop
iret
mov
ja
cmp
cmp
sub
inc
pop
scas
mov
into
leave
jecxz
pop
mov
repnz
imul
xchg
sahf
daa
or
enter
pop
mov
lods
xchg
lret
or
inc
jl
dec
add
push
mov
jae
popf
pop
lret
ret
jecxz
push
dec
mov
inc
cmc
loop
fsubrs
jge
sbb
jbe
dec
data16
pop
sbb
idivb
dec
and
xchg
fistl
lock
decb
repnz
cli
inc
cmp
cwtl
loop
pop
adc
mov
xorb
cmpsl
ret
movsb
push
push
pushf
sarb
aad
push
cmp
add
leave
mov
mov
gs
in
xlat
ds
mov
push
mov
pop
jo
jecxz
aam
push
pop
jp
lret
dec
cltd
push
ret
and
popa
sub
outsl
addl
pop
sbb
rcrl
lods
fyl2xp1
jnp
lahf
sti
ret
fs
push
push
dec
cmp
test
subb
test
inc
cltd
mov
imul
addb
add
push
cwtl
dec
movsb
bsr
ret
loop
lcall
lods
mov
lret
in
dec
fnstcw
mov
sub
or
push
stos
in
cmpl
sub
sbbb
adc
aas
stos
mov
fbstp
jb
int
aad
addr16
nop
insl
out
call
in
adc
mov
mov
loopne
sbb
repnz
iret
mov
mov
js
out
pop
lahf
inc
dec
pop
inc
adc
mov
std
add
mov
aad
sbbb
pop
mov
adc
clc
xchg
jle
add
add
sarl
movsl
inc
push
sbb
xchg
add
sbb
jo
xchg
icebp
imul
mov
xchg
inc
push
sahf
lret
push
sub
jp
imul
rcll
imul
lahf
push
cmpl
inc
push
aaa
lds
test
push
pop
addl
xor
mov
mov
push
inc
pop
xchg
push
jmp
push
dec
jno
add
scas
in
dec
sarl
fdivr
cmp
inc
jle
inc
call
jmp
insb
sub
lahf
pushf
aaa
test
into
inc
push
je
insb
adc
adc
or
int
gs
push
test
xor
cwtl
sbb
fisubrl
jb
loope
stc
leave
or
int
inc
ljmp
xor
movl
adc
pushl
fmuls
push
das
cld
push
in
mov
dec
enter
jmp
mov
rclb
fwait
dec
push
xchg
enter
repnz
shrb
or
in
cmp
mov
add
ret
aad
lock
leave
jge
mov
aas
dec
cmc
mov
pop
lock
es
popa
push
adc
xchg
das
loope
xchg
popl
jb
push
pop
aas
gs
xor
icebp
inc
mov
and
push
and
mov
loop
cwtl
out
inc
add
xchg
jl
mov
push
sbb
pop
mov
loop
icebp
jno
jbe
popf
sahf
loop
js
jmp
loop
outsl
dec
ss
jb
sub
mov
mov
pop
bswap
jle
mov
lock
mov
push
repnz
xor
leave
movsl
sub
fistpll
and
hlt
stc
dec
add
adc
neg
jb
stos
mov
ljmp
insl
jo
aas
addr16
lods
test
inc
jp
fsubrl
loop
and
sub
jnp
lret
out
dec
jg
push
sbb
mulb
mov
and
cmc
pop
or
fildl
and
xchg
clc
jg
lret
lret
xor
push
pop
lret
movsb
scas
xchg
shrb
sbb
ror
pop
dec
pop
mov
fwait
and
xchg
out
fstl
cltd
add
push
fucomip
call
pop
aas
and
mov
adc
mov
negb
rcrb
add
mov
jb
daa
negb
xlat
rolb
repnz
adc
adc
pop
stos
jns
xor
jae
rorb
xor
mov
adc
push
push
call
daa
or
stos
sbb
mov
inc
xor
mov
es
mov
sub
cwtl
mov
ficomps
jg
les
sbb
in
js
imul
pop
jle
sbb
xchg
sti
adc
mov
std
loope
xchg
xor
mov
or
shrl
lret
test
xor
ret
jg
or
and
ret
ret
jne
cmp
loope
add
and
out
mov
arpl
jge
jb
mov
mov
mov
stos
push
stc
xchg
add
add
loop
movsb
cmpsb
into
pop
scas
xor
stos
sbb
stos
push
and
lds
arpl
xor
ret
pop
mov
sbb
data16
into
lods
shrb
movsb
cltd
add
popa
pop
push
popl
adc
xorb
sbb
push
adc
ficoml
cmp
cmp
adc
orl
adc
or
push
dec
pop
xchg
sub
jp
scas
or
call
lds
xchg
int3
outsb
pop
and
xor
push
cmp
subl
mov
mov
pop
push
mov
adc
jb
mov
je
test
repnz
or
push
xlat
or
push
rcrb
into
sbb
mov
mov
xchg
iret
int
retw
popf
das
clc
jmp
repnz
loop
into
mov
push
mov
pop
push
mov
mov
push
jno
adcl
iret
test
out
mov
ret
stos
inc
sahf
dec
pop
aas
cmpsl
paddb
shlb
test
jne
lcall
repnz
and
pop
stos
cmp
or
lock
mov
inc
dec
into
xor
or
inc
add
add
testl
addl
mov
or
mov
pop
push
inc
cltd
push
loopne
push
cwtl
or
repz
mov
push
xchg
push
pop
mov
dec
mov
enter
mov
arpl
cwtl
arpl
test
mov
dec
sarl
cmp
test
test
scas
shl
jbe
xor
and
out
pop
cwtl
pop
push
dec
mov
or
das
or
sub
mov
lea
outsl
aaa
xchg
mov
jbe
dec
andl
pop
jbe
jmp
icebp
sub
add
movsb
rclb
icebp
lock
xchg
lock
cmp
ss
je
fisubrl
pushf
cmc
sub
sub
arpl
mov
dec
cwtl
out
shl
into
mov
ja
or
out
jmp
clc
sbb
xchg
fisubrl
sub
movsl
push
and
mov
sbb
rclb
jb
push
sahf
jb
lret
loopne
mov
into
or
movsl
pop
and
mov
fldenv
cmpsl
dec
lret
adc
push
sbb
mov
data16
push
pushf
pop
inc
mov
mov
push
mov
test
pop
fsubrl
popa
or
jnp
mov
pop
xor
testb
pop
scas
stos
sub
loop
xchg
mov
ss
push
sarb
jns
idivb
arpl
pop
das
push
je
fs
or
repz
popa
push
inc
std
mov
cmc
sub
xor
ljmp
and
xor
std
fucomip
adcb
mov
xchg
or
dec
sbb
lretw
ja
adc
out
xlat
jl
cmovo
mov
cli
mov
cmp
add
js
outsl
enter
movsb
push
dec
into
fsubr
ret
dec
ja
sbb
fwait
mov
daa
cmpsl
jg
inc
sub
test
ss
jg
cltd
adc
adc
loopne
je
xor
or
push
and
enter
xchg
inc
cli
outsb
ljmp
js
aam
or
push
push
scas
stc
push
xor
push
loopne
andb
shll
xor
push
adc
inc
and
dec
in
mov
inc
cmpsb
or
xor
mov
out
enter
lock
test
aas
cmp
mov
stos
stos
leave
pop
inc
add
mov
mov
insb
and
ss
aam
xchg
pushf
jecxz
inc
sbb
jp
aas
mov
clc
pushf
jns
inc
sbb
popf
and
test
mov
lods
cmp
jl
pop
xchg
push
sub
cs
and
push
dec
xchg
scas
movsl
out
xchg
daa
adcl
lret
scas
jns
nop
and
and
dec
or
int
adc
xchg
or
andl
sbb
cmc
pop
pop
or
and
sub
jb
popa
sbb
or
sti
fistpl
ss
out
pop
inc
adc
lock
xor
lock
mov
dec
inc
push
xchg
pop
std
mov
mov
adc
lods
sub
aad
mov
mov
scas
push
scas
jmp
xor
js
xchg
ret
arpl
sbb
sbb
add
sti
mov
aad
mov
xor
and
mov
test
cmp
or
cmp
or
add
sbb
push
sbb
pusha
ds
shlb
push
fisubl
loope
cmpsl
push
mov
jl
jp
test
test
test
cli
or
cli
xor
adc
cmp
sbb
mov
aad
in
cmpsl
mov
shll
jge
mov
jb
push
in
sub
int3
sub
xchg
inc
addb
add
and
inc
mov
ljmp
add
lds
push
sub
and
cmp
arpl
rorb
jae
xchg
outsb
add
int3
inc
mov
mov
ljmp
es
insb
mov
mov
mov
mov
cmp
loop
ds
int3
movsl
scas
cld
daa
push
or
in
ja
daa
mov
jne,pn
inc
insl
sar
mov
aaa
and
jae
int3
cmpl
lret
loopne
push
lcall
sub
sub
lahf
jbe
pop
lock
sub
dec
push
stos
pop
ds
mov
faddl
cmpsb
and
xor
das
inc
or
ds
cmpsb
mov
sbb
mov
out
or
dec
lcall
ss
push
add
dec
mov
jbe
push
shrl
cmp
clc
sti
popf
dec
dec
jb
pop
push
xchg
repnz
leave
lahf
loopne
xor
mov
and
inc
ror
pushf
cmc
adc
pop
test
and
xchg
in
bound
test
jl
sbb
cld
fwait
mov
pusha
leave
mov
cmp
jo
in
popf
push
jmp
mov
mov
xchg
and
xchg
shlb
xor
sub
or
jnp
jp
push
rorl
push
std
shlb
insl
push
popa
cmpsl
in
xchg
mov
mov
gs
jo
test
mov
test
mov
int3
leave
push
jne
and
xor
nop
fidivrs
int
sbb
cltd
sbb
adc
scas
adc
jno
cs
xor
mov
sbb
add
stos
psraw
subps
mov
sub
mov
add
in
shll
sti
push
fdivp
inc
mov
xchg
fcoml
in
mov
mov
lret
subl
xor
mov
mov
inc
dec
cmp
inc
inc
dec
xchg
fmulp
xchg
and
negl
sub
pop
cmp
movsb
push
mov
cld
xor
push
stos
das
mov
rorl
and
mov
xlat
xchg
ds
inc
icebp
gs
sahf
and
adc
out
xchg
in
popa
ret
mov
adc
push
fs
mull
ljmp
fwait
sbb
push
pop
add
push
xor
sbb
fstpt
pushf
fsubrs
aam
xor
and
cmp
jb
inc
jp
hlt
mov
add
lret
cmpsb
js
mov
fbstp
pushf
jle
sub
jmp
inc
rclb
inc
or
adc
int3
dec
lcall
fs
sbb
adc
jnp
into
and
out
mov
cmpsb
dec
mov
mov
lcall
cmp
fstps
and
inc
sbb
sub
pop
int3
aam
std
xchg
pop
lret
push
xchg
push
icebp
adc
shlb
mov
aaa
xchg
scas
mov
testl
sti
pop
xor
aad
jecxz
fstl
cwtl
outsb
loop
addb
xor
dec
cmp
xchg
arpl
xchg
test
dec
inc
mov
insb
leave
into
push
inc
mov
fnsave
push
mov
icebp
push
add
mov
aaa
jge
js
push
cmp
xchg
movsb
mov
dec
sbbb
sti
call
adc
in
xchg
aad
sub
mov
int
scas
movsl
test
adc
shlb
xchg
jle
out
cmp
sub
int3
sbb
cltd
out
insb
inc
hlt
adc
js
scas
popa
cld
push
out
mov
cmp
pop
xchg
or
leave
mov
jno
enter
mov
mov
and
xchg
ret
dec
xchg
pop
jle
mov
pushf
adc
pop
rcl
das
lcall
xchg
aam
outsl
popf
sub
jle
and
mov
fstps
mov
adc
xlat
fwait
mov
cmpsl
jne
jge
ja
in
push
mov
addr16
ljmp
xor
nop
testl
mov
cld
mov
push
stos
aaa
xchg
arpl
sbb
cmp
mov
ss
cmp
repz
inc
pop
jle
imul
jle
mov
int
add
out
ficoml
push
pop
sub
aaa
jge
pop
mov
mov
add
sbb
int
lock
enter
xor
bound
test
sbb
jmp
adc
dec
orb
and
push
adc
mov
push
xchg
outsl
test
sbb
push
fisubs
in
lods
stc
mov
jmp
dec
sub
mov
aaa
in
fistl
inc
mov
xchg
bndstx
pop
sbb
push
sbb
jbe
sahf
test
and
xchg
mov
rolb
aam
mulb
popf
fimuls
notl
nop
mov
into
test
popa
testb
mov
fnstcw
imul
mov
or
pop
and
push
mov
xchg
lahf
inc
xchg
cli
sahf
lea
aas
icebp
insl
dec
and
adc
shr
fcmovbe
xchg
test
ljmp
outsb
mov
mov
xchg
test
add
aas
pushl
leave
mov
pushl
jo
fiadds
add
push
ret
div
out
mov
mov
fsubl
ret
mov
lods
out
add
push
pop
stos
adc
adc
lds
cmp
mov
aas
fisubs
fnstenv
and
xchg
and
mov
pop
or
cld
jl
pop
push
inc
add
push
adc
adc
xchg
iret
stos
jne
in
pop
push
inc
loope
xchg
iret
push
push
repnz
iret
xlat
pop
mov
mov
cld
mov
je
repz
cmp
insb
lret
xchg
test
unpcklps
inc
inc
subl
adc
push
outsb
mov
fildll
fldcw
lea
push
push
fdivs
mov
aam
sarb
scas
cmpb
sub
mov
ffree
popa
pop
push
fisubl
out
jns
add
adc
push
stos
add
push
push
jl
in
jo
mov
sbb
outsl
sbb
fwait
cmp
adc
subb
inc
xchg
xor
aas
pusha
adc
mov
das
cmp
outsl
subl
roll
dec
dec
push
push
lock
bnd
rorb
fbld
out
xchg
int
or
shl
aas
mov
jge
push
mov
sub
movsb
mov
bound
mov
jle
test
sahf
xor
fisttpll
add
icebp
push
jae
inc
loopne
jle
pop
scas
adc
rcll
in
jno
mov
cli
lock
cmpsb
xbegin
push
lcall
stc
cmp
loop
inc
pop
cmp
das
sbb
pushf
push
mov
and
sub
rcrb
imul
sub
sbb
int
test
jl
jle
cmp
dec
jb
push
adc
in
mov
shr
and
jne
jno
loop
mov
imul
adc
xchg
push
cmp
push
shll
mov
jne
pop
imul
push
pop
shrl
das
sub
or
cmpsl
ds
xor
jg
repz
xor
pop
iret
sbb
gs
jl
subb
imulw
in
cmpsl
in
out
push
in
mov
out
stc
int
jge
hlt
inc
leave
mov
shl
fistpl
sub
fnstsw
daa
incb
je
lahf
arpl
adc
adc
jle
fstpl
ret
out
mov
sbb
notb
stos
inc
jle
and
push
aas
fsubrs
xchg
pop
add
mov
aas
call
in
inc
adc
je
arpl
adc
ljmp
sbb
jp
xor
inc
mov
test
shll
jl
andl
arpl
push
call
fmull
inc
cmp
test
ret
dec
dec
cmp
and
adc
mov
js
xor
lcall
ficoml
dec
adc
sub
movsb
cmp
jecxz
cmp
pop
mov
cltd
cltd
sub
test
mov
adc
adc
push
mov
push
jae
js
arpl
adc
lock
loope
lcall
addr16
xor
dec
shlb
stc
dec
outsl
bound
mov
pop
push
aaa
es
mov
mov
xchg
adc
testl
addb
sbb
mulb
adc
pop
sbb
adc
mov
add
adc
sub
test
cmpsb
add
cmpl
jp
inc
and
inc
inc
mov
pop
cmp
xorb
dec
and
and
inc
call
and
jns
xchg
cld
mov
insl
push
add
lods
or
mov
jns
jns
test
mov
lret
adc
bound
xchg
dec
sti
dec
sarl
push
xchg
push
mov
jp
rcrb
dec
mov
sub
lret
add
mov
inc
xchg
scas
jp
jge
push
pop
add
sahf
in
movsl
fadd
inc
imul
mov
push
cmp
sbb
pop
add
es
lods
icebp
in
mov
bound
pop
leave
stos
movsb
aas
jmp
jnp
xchg
or
xor
dec
xor
stos
es
movsb
adc
jge
pop
ss
fsubs
or
gs
aaa
bound
fildl
mov
mov
cmp
mov
popa
fsubrp
inc
das
inc
push
leave
mov
push
sub
arpl
call
fidivs
inc
jbe
addb
popa
inc
or
rcrb
popa
dec
jg
gs
pop
daa
jp
jns
adc
shlb
lret
fs
cmp
pop
dec
insb
scas
and
icebp
or
lret
add
xchg
ja
fidivl
cmc
gs
add
push
sarl
icebp
notl
divb
loop
pop
pop
ret
inc
stos
aas
movsb
jae
pop
cmp
mov
daa
outsl
push
test
lret
outsl
pop
mov
je
daa
hlt
fldt
test
popf
test
cli
add
sub
jmp
adc
cs
pop
mov
loope
int3
jae
xor
push
shl
int
fbstp
adc
insb
cmp
movsbl
test
xchg
in
popf
jp
pop
cmc
jl
xor
mov
stc
arpl
shlb
daa
xlat
imul
stos
testb
mov
inc
and
mov
lret
jae
fsubr
jmp
jns
inc
sub
push
jbe
ret
ja
adc
push
ja
jge
or
mov
mov
add
jne
pusha
inc
pop
cmp
xor
and
out
mov
sub
js
ja
outsb
test
fcmovu
js
daa
in
add
pop
mov
notb
stos
xor
test
ljmp
outsl
in
fisubrl
cwtl
xchg
pop
fdivs
lock
stos
mov
adc
call
leave
adc
imul
jo
adc
inc
push
push
adc
in
xor
popf
movsl
xor
inc
pop
adc
mov
jno
cmp
les
fmuls
mov
loopne
sbb
push
sub
sub
mov
and
pop
mov
in
cwtl
jp
hlt
jmp
lea
cmp
dec
add
loopne
or
insb
and
dec
adc
push
add
or
dec
js
rolb
cltd
inc
cmp
stc
subl
pushf
popa
inc
xor
xchg
pushf
inc
stc
jo
dec
jg
lock
sbb
cmp
fisttps
dec
xchg
fisubrl
test
sub
pop
scas
cmp
sub
loope
pop
xchg
mov
nop
mov
ret
xor
push
mov
leave
or
adc
dec
dec
sahf
add
lcall
out
jb
incb
mov
dec
push
divb
dec
daa
add
repz
in
pop
adc
dec
lret
cmp
loop
dec
test
shlb
aam
out
cmp
testl
xor
push
mov
xor
sbb
push
out
lcall
ret
lcall
mov
mov
popf
rorl
lea
mov
push
ss
js
aad
mov
scas
push
movsl
mov
sahf
xor
insb
fidivrs
xchg
mov
inc
xor
push
add
stos
shlb
testl
mov
cld
inc
ljmp
andl
sti
int3
ret
fldt
inc
fldcw
pop
xor
movsb
adc
push
mov
das
hlt
add
bound
lcallw
adc
arpl
js
rcr
out
jl
xchg
mov
xchg
divb
leave
sbb
pop
xor
sti
inc
dec
mov
insl
fidivl
jle
xor
dec
cmc
fldcw
fwait
je
outsb
testl
xor
adcb
xchg
cmp
mov
aam
js
mov
orb
stos
sub
int3
inc
call
test
sbb
test
jns
lods
aad
pop
dec
aad
insl
mov
jbe
inc
nop
and
lret
leave
xor
imul
loope
inc
cmpsl
cmp
fucomi
adc
hlt
jmp
adcb
inc
cwtl
sub
scas
and
outsl
mov
sbb
add
arpl
push
push
push
add
scas
adc
mov
adc
jmp
icebp
cmp
inc
call
or
and
jg
cs
sahf
cmp
cltd
push
out
in
pop
inc
lods
es
imul
mov
mov
loopne
das
jnp
rcrl
and
push
or
lcall
add
cmc
mov
jnp
movsl
cltd
cmc
loope
lret
add
or
mov
mov
movsl
imul
pop
cwtl
fnstsw
mov
pop
insl
add
push
test
xchg
cmpsb
jmp
js
sbb
in
jae
leave
and
pop
dec
clc
lock
or
idivl
divl
test
andb
jno
in
scas
sub
lret
orl
jl
xchg
xchg
repnz
pop
mov
xchg
shrl
hlt
sbb
adcb
call
push
das
ret
sbbb
fildll
insb
out
lds
pop
jb
cmp
lahf
xchg
fisttps
lds
mov
cmpsl
and
sub
mov
jecxz
rcl
cmc
xor
dec
loope
dec
inc
sbb
sbb
stos
lock
call
pop
lds
add
out
and
lock
jno
inc
mov
mov
mov
jne
add
mov
cmc
mov
hlt
jne
or
and
stos
sub
sub
fstps
inc
mov
push
pop
push
lret
or
jecxz
mov
pop
lods
cmp
pop
filds
pop
and
and
dec
inc
pop
and
clc
cmp
xor
fnstsw
adc
ljmp
sbb
clc
adc
test
inc
jp
cmp
adc
subb
cwtl
dec
push
jb
in
xor
mov
cli
rclb
cmp
or
push
imul
mov
dec
inc
js
lock
xor
shlb
cmpsl
je
or
xlat
movsl
pop
inc
insl
xor
in
pusha
aam
test
push
cmpsb
pop
inc
in
fnstenv
jbe
and
fimull
or
mov
cmp
jp
xchg
pop
cmpsb
mov
pop
xchg
push
rol
and
jle
push
jg
push
adc
shrl
mov
stos
sub
inc
shrb
and
add
mov
pop
xor
pop
inc
js
or
in
sbb
push
add
mov
jl
mov
mov
pop
sahf
dec
test
cmp
adc
fimuls
sbb
cmc
in
jge
sub
jbe
sbb
repz
push
outsl
xor
fs
xchg
pushf
jmp
sub
sbbb
frstor
add
insl
or
int
das
adc
call
fdivl
push
scas
orl
pop
pop
in
cmp
dec
mov
or
jnp
aam
pop
mov
pop
sbb
das
test
orl
stos
das
sub
aaa
inc
cmp
rorl
xor
jbe
stc
sbb
lea
into
ja
dec
inc
cmc
sub
outsl
pop
xor
clc
call
dec
out
das
shlb
push
imul
hlt
rcrb
imul
addl
jno
dec
sbb
ficompl
sub
mov
sbb
decl
ljmp
aas
mov
mov
je
xor
clc
pop
mov
ret
pop
orl
jmp
dec
jns
js
and
jns
in
inc
mov
cmp
lahf
sbb
push
sub
pop
add
sahf
nop
jno
mov
mov
mov
push
sar
and
ret
and
inc
mov
outsb
sub
mov
test
js
gs
and
xchg
and
mov
jnp
or
mov
stos
xchg
adc
jns
outsl
xor
mov
mov
sub
repz
ud1
es
sbb
jecxz
xor
add
and
jmp
out
xchg
mov
lahf
cmp
test
jg
mov
pop
push
cmp
jno
jae
outsb
sub
pop
push
int
or
jmp
outsl
add
les
shrb
lock
arpl
stos
push
cmp
lcall
shl
sbbl
and
and
or
bound
loopne
lods
dec
and
nop
xor
or
push
sbb
es
sar
int3
jg
aam
test
cli
loopne
imul
mov
rcll
pop
stos
jg
jae
adc
mov
addr16
push
andl
fs
sbb
decl
and
mov
lea
add
pop
popa
shll
sahf
in
lea
int
inc
jmp
mov
jmp
cmp
test
flds
or
xchg
push
mov
cmp
jns
cwtl
lds
jmp
fs
sbb
xchg
mov
pop
aam
push
jo
and
pop
inc
rorb
out
bound
inc
cmpsb
js
sub
xor
dec
xor
out
inc
ljmp
sub
mov
data16
xor
and
in
mov
and
in
fistpll
inc
or
sahf
push
shlb
xchg
inc
push
scas
cmp
xor
jbe
data16
inc
mov
bound
dec
jne
mov
cmpb
clc
adc
xchg
sarl
and
fildl
arpl
fistl
push
lods
sub
mov
xor
push
popa
lods
and
std
sub
lcall
in
fcoml
xor
sub
aad
out
cmp
push
pop
test
push
xchg
xchg
cmp
add
cmc
pop
or
jmp
add
cmp
loop
dec
adcb
xor
xor
iret
sub
test
dec
sub
lods
xor
into
adc
sti
pop
sub
sbb
xor
mov
das
dec
xchg
test
push
adc
jns
gs
jmp
adc
inc
orl
pop
sbb
out
cmp
xchg
lock
lahf
jg
aas
insb
in
test
arpl
pop
ret
aaa
or
sbb
scas
sub
ljmp
leave
subl
ss
pop
fmull
ret
data16
sbb
cld
test
rorl
dec
xor
mov
jge
cld
mov
ss
fildll
or
cmp
jl
nop
roll
bound
xor
pushf
cmp
icebp
jge
cmp
mov
or
jae
lret
add
notb
dec
xor
test
xchg
lock
gs
aaa
filds
mov
or
imul
imul
pop
les
lods
mov
mov
jge
jbe
jae
ret
mov
aad
sbb
jge
rclb
insl
and
add
cmp
push
lret
sahf
fisttps
xor
icebp
hlt
and
aas
mov
jmp
dec
mov
add
in
les
add
adc
sbb
jb
loope
lock
scas
jbe
fsubrs
scas
push
fidivrl
sbb
aad
mov
or
cmp
push
fcoml
xchg
data16
push
repnz
daa
jne
sub
mov
sbb
jl
lds
dec
add
sbb
rep
into
pop
mov
enter
imul
and
subb
sub
jo
push
mov
roll
loop
mov
jnp
dec
inc
cmpsl
popf
mov
ret
lds
cltd
out
repz
cmp
ffreep
jne
ret
es
dec
fdivl
imulb
scas
sub
pop
movsb
add
xchg
dec
loop
mov
pop
stc
ret
aaa
jne
fcompl
repz
lahf
pushf
stos
xchg
lea
faddp
xchg
jmp
les
push
mov
mov
cmp
xor
mov
es
xchg
int
or
inc
aas
fstpt
fcoml
les
or
jnp
pop
xchg
imul
or
jl
cpuid
fsub
dec
shrl
mov
test
movsb
inc
pop
hlt
popa
inc
idivb
sub
mov
rorb
data16
stos
lods
inc
mov
iret
jno
leave
icebp
repz
jl
add
lcall
jmp
pushf
mov
cmp
and
add
mov
cmp
cwtl
xchg
fwait
mov
aaa
or
daa
std
or
call
dec
pop
sub
add
mov
jg
icebp
cmp
movsl
sub
dec
fsubs
pushf
push
xchg
pop
add
xor
mov
adc
je
cmp
push
xchg
pop
filds
sbb
dec
add
ja
adc
mov
icebp
pusha
icebp
test
pop
mov
push
fnstenv
repz
xor
aam
dec
jae
imull
mov
aaa
das
push
ficoml
dec
and
imul
scas
rorl
push
cs
in
sub
sahf
sbb
icebp
xchg
addl
mov
mov
pop
hlt
pop
xlat
xchg
mov
cmp
nop
loope
or
mov
add
inc
stos
shrb
in
add
jns
aaa
cmovo
cmpsl
in
xchg
xchg
mov
add
dec
mov
das
in
jp
btc
aad
xchg
add
je
fmull
mov
stc
adc
mov
adc
fistl
cli
dec
inc
jge
dec
push
fucomip
and
int3
cli
idivb
cmp
test
sbb
push
stos
lods
push
das
jle
movb
popa
outsb
pop
adc
mov
mov
add
loope
ret
popf
fidivl
rcl
xchg
adc
in
test
adc
pop
and
mov
and
inc
xchg
dec
mov
add
mov
add
adc
outsb
loopne
in
or
inc
pop
minps
sub
out
or
dec
xor
test
cmp
dec
out
adc
inc
inc
cmp
int
cmp
sahf
lahf
cli
adc
ret
les
shll
shlb
push
xchg
adcl
in
mov
into
sbb
arpl
jbe
clc
sbb
enter
or
and
cmp
mov
movb
leave
push
repz
and
mov
sbb
dec
xchg
aad
stc
mov
and
push
int
mov
stc
jb
out
cmp
add
ljmp
cmp
pop
inc
data16
test
cmp
or
data16
je
lods
jmp
insl
les
inc
faddl
mov
mov
mov
filds
scas
aad
rorb
or
mov
sarl
xchg
mov
sub
cmp
xchg
dec
or
insl
push
inc
ja
mov
adc
aaa
mov
dec
repnz
lods
addr16
or
lods
add
push
sbb
cmp
lds
sub
cwtl
sub
mov
push
or
add
mov
adc
mov
fwait
and
rclb
pop
lcall
bound
ret
add
in
push
pop
dec
aaa
test
push
push
xorl
mov
cmpsl
in
pop
and
nop
add
ja
sub
inc
fwait
and
dec
cmc
inc
pop
out
out
or
ret
sbb
int3
in
stos
adc
push
and
test
jmp
push
lock
bsr
sarl
and
and
or
ds
fbld
pusha
mov
icebp
xchg
add
nop
or
fidivs
push
mov
mov
dec
mov
dec
sub
rol
scas
gs
les
jg
jnp
mov
and
mov
idivl
mov
les
and
ret
fadd
jmp
nop
lds
sti
mov
dec
enter
and
add
mov
push
mov
sub
out
dec
inc
or
dec
pusha
mov
fldt
pop
loopne
adc
dec
sbb
xchg
ljmp
jle
pop
jns
add
jne
insb
fnstenv
test
test
decl
dec
and
das
inc
jne
insl
xorl
mov
mov
inc
shll
aam
mov
inc
jmp
add
jno
mov
hlt
mov
inc
or
jmp
std
add
ret
sbb
xchg
push
int
jl
es
sbb
jge
jne
icebp
and
stos
adc
mov
jo
push
cld
cmp
mov
lea
cmpsb
in
push
enter
dec
dec
lahf
lret
pusha
xorb
sbb
adc
test
and
shrb
jne
mov
fs
push
and
mov
inc
sbb
fisubl
cmc
add
repnz
bound
andl
mov
sti
movsl
cmpsl
lods
xchg
push
mov
test
sar
sbb
scas
adc
and
mov
inc
lods
in
push
psadbw
sti
push
xchg
outsb
inc
jbe
or
das
sub
les
and
lcall
pop
out
pop
in
sub
imul
mov
js
mov
movsl
mov
sarb
xchg
stos
test
add
adc
sub
mov
add
es
sahf
or
sub
adc
xor
jle
fnsave
sub
jp
pusha
fst
iret
sub
jle
ret
je
daa
fildll
hlt
jb
lret
cmp
xchg
gs
jb
sti
rclb
mov
mov
xchg
test
inc
inc
sub
mov
outsb
mov
xchg
pop
mov
xchg
and
xchg
call
arpl
roll
adc
das
cmpsl
xchg
cmpsl
mov
je
push
fisttpl
xchg
out
push
cmp
lods
pop
inc
or
sbb
les
outsb
iret
cmp
cld
iret
out
xor
and
loope
push
outsb
dec
push
hlt
sub
fisubl
push
sbb
js
mov
sahf
jno
xor
mov
xchg
faddp
out
cmp
jle
daa
jge
xor
push
shl
nop
add
testl
iret
xor
out
sub
sbb
imul
cmp
out
mov
add
xchg
fldcw
andb
cs
sub
cmpsb
jno
loopne
adc
dec
cmc
xchg
gs
sarl
out
pop
fisubrl
imul
jbe
mov
ror
mov
imul
pop
aad
jnp
mov
inc
and
mov
fcoms
mov
clc
sub
and
sub
cld
or
jg
sbb
dec
mov
mov
lds
loop
dec
and
mov
jae
xchg
fildll
sbb
and
sti
pushf
stos
xchg
cltd
dec
loop
adc
ds
adc
pop
test
hlt
push
cmpsl
xchg
insl
enter
cli
cwtl
cmpsb
sahf
pop
sbb
jge
pop
outsb
push
fistpl
popa
ja
pop
les
mov
test
out
inc
xor
inc
nop
mov
jle
ret
mov
in
mov
shrb
dec
shl
cmc
shlb
in
cli
pop
adc
into
mov
pop
into
orb
out
sub
xor
sbb
es
pop
shrl
sub
jmp
cli
pop
cld
or
push
xlat
mov
push
repnz
fucom
loope
push
repz
cmpsl
call
iret
mov
bound
shl
mov
push
aas
mov
or
sar
scas
mov
jge
add
mov
insb
mov
fmuls
mov
enter
sarb
push
aam
xchg
popf
xchg
lods
enter
jge
xlat
jmp
loopne
mov
sbb
dec
negl
mov
in
das
jns
int3
mov
out
loope
je
insl
and
cli
pushw
xchg
test
test
ds
fiadds
adc
leave
pop
sbbb
cld
inc
dec
fdivp
stc
mov
ret
xor
add
mov
nop
dec
ficoml
xor
aaa
ds
pop
cmpsl
dec
inc
inc
mov
cmp
xor
insb
fwait
lret
cmpsb
orb
insb
or
lods
imul
sbb
pop
push
mov
imul
idivl
sti
in
int
les
shll
or
lret
jno
xchg
dec
dec
addr16
mov
sbb
dec
sub
ljmp
add
loope
sti
cmp
cmp
cmp
fs
rcl
out
add
add
sub
or
in
mov
xor
cmp
cmp
lock
adc
or
sbb
push
js
cmpsl
andb
pop
jle
mov
aad
ret
jl
cltd
fadds
xchg
or
ss
adc
mov
push
adc
lahf
cmp
mov
dec
mov
ja
jl
ret
push
and
pop
pop
mov
loop
and
aam
sub
jns
cmp
imul
xchg
push
repnz
mov
ds
pushl
xor
sub
and
cmpsl
fildll
cmpl
icebp
lea
fs
cld
mov
mov
sbb
fwait
int3
jo
bound
push
in
in
sbb
push
shr
jl
jae
scas
out
fcmovne
out
jo
ja
or
dec
and
push
out
leave
adc
mov
js
mov
ficoms
push
aam
or
dec
mov
dec
lods
mov
test
movsl
out
sub
xor
repz
inc
fwait
jno
enter
mov
mov
test
lcall
jo
lcall
outsl
push
pop
jne
insl
popf
cmp
inc
mov
mov
js
xchg
mov
sbb
cmc
ret
lods
push
repz
or
in
sti
inc
push
sbb
icebp
or
in
push
les
mov
out
xor
mov
pop
addr16
xchg
xchg
mov
cmpsb
rorb
mov
jle
pop
mov
pop
lods
addr16
jcxz
sarl
pop
ljmp
add
mov
pop
mov
insl
pop
out
pop
in
dec
fdiv
jge
in
cltd
xor
xlat
pop
pop
push
jnp
or
mov
mov
iret
lcall
mov
push
into
in
daa
cmp
mov
dec
adcb
out
jle
mov
cli
sub
mov
mov
or
mov
xchg
dec
mov
ds
xchg
or
jmp
movsl
bound
aas
dec
pop
stos
and
cmpsb
sbb
popf
and
stos
xor
int
inc
push
call
data16
mov
pop
repnz
push
mov
push
sub
lock
mov
test
pop
jno
sub
sti
and
dec
out
or
adc
push
roll
fadds
xchg
adc
xchg
lea
mov
push
cmpsl
push
rorb
inc
scas
jbe
pop
mov
sbb
mov
fnstsw
scas
pop
js
inc
int3
or
scas
movsl
test
leave
xor
mov
idivb
jns
sbb
mov
jl
sbb
iret
mov
or
mov
xchg
or
dec
dec
add
and
cmpl
sub
xor
pop
and
jmp
out
and
xor
test
pop
outsb
add
xlat
add
pop
das
pusha
inc
les
xor
jge
sbb
in
mov
mov
pop
push
outsl
ss
or
test
pop
flds
xchg
insb
push
push
dec
and
scas
sbb
dec
rorl
xor
add
pop
arpl
es
sbb
or
repz
test
jmp
pop
in
adc
in
pusha
shl
scas
xchg
add
ljmp
mov
je
fwait
adc
shll
add
fldt
jno
xchg
test
fxam
adc
pop
dec
rcll
xchg
clc
cmp
xchg
cmpsl
aad
pushf
push
sub
sub
add
je
ss
int
data16
xor
push
hlt
icebp
xchg
cmp
sahf
xor
jecxz
xchg
xchg
repnz
shrb
mov
stc
pop
push
xchg
push
mov
leave
je
add
shlb
fmull
sub
mov
mov
adc
mov
aam
js
dec
aas
in
xchg
xchg
pop
dec
cmc
dec
movsl
dec
push
inc
jne
and
jecxz
xor
cmp
out
pop
mov
enter
lods
mov
and
xchg
lahf
mov
test
scas
inc
lret
test
or
stc
jge
jno
push
out
adc
rorl
jg
sub
ret
jp
outsb
push
dec
jle
inc
dec
push
or
pop
rcll
mov
int
arpl
jns
jmp
shll
mov
add
cmp
lock
sub
stos
lods
scas
pop
jmp
cmpsb
scas
mov
xchg
sbb
icebp
jbe
mov
mov
and
push
shlb
adc
cmp
rorl
fsubrp
inc
lahf
push
push
xorl
jg
test
lret
xor
push
das
cmpsl
jge
push
add
cmp
xchg
sbb
pop
bound
ss
inc
insb
cmp
jle
sbb
cmpb
sbb
push
shufps
fnstcw
std
pop
lock
out
insl
mov
pop
push
test
shll
or
mov
sub
shl
sbb
sbbl
shlb
mov
dec
stos
inc
scas
dec
mov
jb
pushf
jbe
fisttpll
out
popf
pushf
in
xchg
dec
lahf
pop
push
stos
inc
fimuls
inc
sahf
cmp
nop
fwait
dec
movsb
mov
or
pushf
inc
mov
xchg
movsl
fnstsw
aam
mov
xlat
dec
pop
das
repnz
mov
and
inc
clc
jmp
movsb
test
int3
pusha
cmp
add
hlt
or
or
push
jmp
ljmp
and
icebp
jmp
sar
xchg
sbb
in
dec
ds
clc
fisttpl
mov
cmp
jp
in
test
jge
mov
sub
pop
enter
sub
in
pop
xchg
mov
push
mov
ret
dec
xchg
xchg
pop
pop
xchg
ficoml
inc
daa
dec
cmpsb
cmp
sbbb
in
cmp
inc
adc
dec
ud2
cld
pextrw
lea
jns
adc
cmp
data16
lea
sbb
push
in
pop
sbb
pop
es
push
leave
and
pop
adc
aam
ljmp
or
xchg
push
and
rcl
ss
popa
cld
xor
push
fldl
stc
mov
sbb
add
mov
fs
jg
cli
mov
add
lret
xor
sub
sahf
mov
test
pop
bound
fldcw
das
add
jns
clc
push
jle
std
cmp
jo
mov
pop
cmp
ja
cs
adc
popf
or
test
leave
cmp
push
mov
lret
sti
and
or
cmp
xchg
add
enter
pop
aad
adcb
inc
jle
cmpsb
decl
fs
movsl
sbb
cmpsl
xor
cmp
scas
lcall
fcompl
jne
outsl
push
jg
adc
mov
mov
jle
fdiv
push
aas
lcall
mov
sarb
popa
test
pop
mov
sub
ret
std
inc
add
add
adc
jo
les
jp,pt
and
inc
call
leave
cmpsb
jns
sbb
movl
gs
dec
out
pop
mov
sbb
test
add
sub
ret
sub
adc
xor
push
and
jp
ror
xchg
xchg
aam
cmc
das
sub
lcall
mov
cmp
mov
rcll
mov
adc
mov
push
imul
adc
in
dec
mov
xor
lret
xchg
cltd
mov
mov
lret
loop
xor
dec
dec
and
mov
and
push
cmp
dec
cltd
leave
addr16
mov
in
fwait
cmp
jb
dec
cmp
adc
sbb
jno
pop
ljmp
mov
or
pop
add
rcrl
in
pop
jg
mov
in
inc
cld
fcmovnb
int
out
add
cmp
repnz
test
mov
imul
outsl
jmp
cld
loope
and
xchg
pop
aam
adc
enter
jne
out
cmp
sub
mov
xchg
pushf
mov
aad
js
mov
stc
inc
sbb
test
stos
adc
and
cmp
pop
jge
iret
leave
movsb
test
gs
and
mov
je
inc
inc
notl
mov
push
and
loope
jg
data16
cmpl
outsb
pop
add
pop
mov
jg
daa
addr16
xlat
jmp
cmp
push
mov
cmp
push
int3
cmp
loopne
pop
adc
scas
pop
stc
sar
sbb
add
mov
xchg
and
aaa
shlb
mov
movb
mov
pop
rcrl
mov
pop
inc
clc
sub
pop
add
cmp
dec
dec
jl
rcrl
and
sbb
movsb
jecxz
sub
int
cmp
stos
ja
dec
jns
dec
jb
ss
lds
add
jae
xchg
pop
sbb
push
pop
into
mov
mov
pop
mov
jle
xor
inc
adc
xor
lret
adc
mov
sub
hlt
pop
cwtl
and
mov
ret
adc
sbb
jmp
xor
scas
rorl
addr16
xchg
scas
sbbb
repnz
cmc
mov
shr
popa
addr16
jns
bound
add
cld
xchg
pop
insb
loope
jle
mov
sbb
and
cmpsb
mov
sarl
movsb
movsb
pop
mov
add
ret
xor
ficomps
jb
outsb
scas
xchg
ss
sti
out
outsb
movsb
cmp
lock
loop
push
sbb
cmpsl
mov
and
mov
inc
fdivrl
lcall
mov
aas
mov
jg
decb
aas
cmpsl
mov
adc
pop
roll
in
out
clc
xchg
sub
jb
stos
test
int3
mov
loop
aas
mov
cltd
jb
rclb
lock
loop
sbb
cld
hlt
inc
push
lods
inc
arpl
push
or
adcl
hlt
inc
les
aad
pop
mov
xor
cmp
fs
std
shlb
clc
dec
xlat
outsb
inc
push
lods
hlt
stos
int
clc
das
sar
push
inc
sub
cli
jno
mov
jo
push
pushf
out
icebp
push
arpl
inc
pop
jo
push
sbb
mov
shr
pop
push
sub
insb
adc
inc
adcl
test
cmp
div
mov
xor
test
dec
das
and
mov
cmp
movsb
mov
add
std
lahf
sub
insl
icebp
sub
xor
fsubp
push
inc
push
jo
xchg
sbb
jo
mov
cmp
into
pop
pop
aaa
pop
lea
push
pushf
es
shll
sbb
push
push
aaa
nop
fdiv
sub
fcomps
xchg
inc
adc
das
sar
sti
mov
jge
inc
inc
repnz
repnz
xor
rorl
pop
loope
call
mov
outsl
pop
sbb
fcoml
sub
leave
das
cmp
sbbl
xchg
push
aas
push
mov
pushf
into
dec
inc
ret
dec
inc
outsl
lahf
inc
fsqrt
mov
xchg
cmp
xor
and
js
mov
push
repz
jl
or
adc
mov
fs
sar
repz
push
fnstenv
and
lds
sub
push
ss
lea
push
aam
sub
sbb
insl
lock
mov
cmp
jb
push
and
das
sahf
sbb
mov
addr16
orb
jo
lods
fmuls
fisubs
mov
and
lock
sub
mov
mov
push
jns
xchg
inc
mov
mov
sub
cmpsb
std
cmp
fcomi
xlat
test
lret
lea
inc
sbb
sbb
inc
ror
outsl
jecxz
std
clc
add
loopne
ret
lock
dec
pop
outsl
sub
js
fldcw
adc
jne
sub
sbb
lea
popf
rcll
dec
xchg
push
xor
xor
aas
mov
enter
jg
sub
sub
test
push
inc
ret
add
ret
gs
int
rcl
bound
popf
and
or
jbe
lds
sub
outsl
in
data16
fiadds
inc
mov
mov
xchg
insb
out
mov
xchg
icebp
sti
lcall
and
insl
lods
aas
mov
lds
pop
inc
popf
nop
cmpsb
lods
pop
pop
and
xor
stc
sub
mov
mov
cld
cmp
or
push
mov
pop
mov
shrb
jle
ds
cs
int
mov
rcrl
cld
orl
or
inc
pop
sbb
out
add
inc
mov
adc
mov
fdivrp
out
xorl
lods
ds
fildl
pop
je
xchg
sub
adc
mov
xchg
gs
mov
roll
ret
jns
push
mov
lods
dec
xchg
fwait
push
inc
arpl
adc
jb
jg
mov
icebp
or
sbb
jp
popa
shl
mov
rclb
rolb
add
cmp
inc
movsl
int3
insl
inc
daa
xchg
add
xor
imul
pop
fwait
test
fnsave
push
or
out
ss
jle
lds
iret
cmp
imul
xchg
je
inc
or
scas
out
lods
gs
pop
ds
dec
fists
fwait
sahf
jne
pop
mov
icebp
sarl
ret
jecxz
imul
xchg
popf
mov
jle
xchg
outsb
xor
xchg
in
xor
or
insb
jb
mov
js
mov
push
loope
xchg
sub
pop
adc
xor
cld
mov
sti
dec
adc
and
xor
out
inc
je
mov
outsb
xchg
cmova
xor
pop
jge
xor
mov
imul
mov
jns
and
mov
aaa
jmp
dec
stc
int3
sbb
adc
xchg
jae
out
out
and
das
ss
arpl
sub
jl
stc
pop
jbe
test
add
cmpsb
sub
add
pop
lahf
jo
repz
adc
iret
subl
dec
mov
mov
push
icebp
push
pop
scas
mov
push
and
scas
sub
lock
fs
sub
cmpsl
adc
fwait
jle
cmpsb
movsb
jo
jg
sub
push
pop
xor
adc
out
or
cmpsb
cs
loope
mov
ret
mov
mov
xlat
pop
jg
adc
mov
fbld
fldt
add
pop
cltd
fmuls
lret
and
cmp
or
sbb
xchg
ja
or
dec
insb
lcall
dec
lds
dec
pop
push
insl
pop
pop
lahf
lods
imul
aam
sbb
leave
xchg
push
pop
sbb
movsb
or
rclb
cmp
mov
jno
sub
test
fiaddl
and
repz
dec
jmp
jmp
xor
lahf
add
cmp
push
mov
mov
xchg
mov
xchg
adc
xchg
out
loope
xchg
add
pop
mov
pop
out
rcrl
jge
aad
pop
out
sahf
loope
mov
mov
pop
clc
add
sbb
jmp
inc
pop
sti
add
icebp
mov
test
xchg
xchg
ficompl
decl
pop
loope
ss
xor
bound
sahf
mov
out
pop
insb
dec
mov
jge
ret
mov
out
jg
cmp
ljmp
jecxz
in
add
out
pop
aad
and
and
cmp
dec
pop
and
push
call
nop
jcxz
mov
enter
xor
lcall
ljmp
enter
xchg
icebp
sbb
sarl
cmp
ds
scas
popf
outsl
or
ljmp
jp
dec
mov
rcl
cltd
dec
dec
or
dec
adc
mov
dec
mov
pop
cmp
sahf
jno
push
xchg
mov
or
cmc
lahf
xor
lods
into
pop
jb
jle
push
rcrb
xchg
hlt
movsl
mov
mov
arpl
cmp
stos
dec
dec
mov
in
gs
movb
inc
icebp
in
into
add
cltd
and
out
pop
jb
fwait
adc
arpl
out
jo
imul
adc
je
mov
fistpl
push
dec
mov
cmpsl
cmp
mov
mov
pop
inc
test
xchg
inc
sub
inc
push
jno
and
popf
imul
shr
xchg
nop
push
ret
mov
jmp
sbb
push
adc
mov
mov
push
add
mov
mov
lret
out
mov
jbe
xchg
roll
js
repz
cmp
jp
or
add
jle
icebp
add
cmp
fidivs
out
mov
sbb
aam
cmp
adc
cltd
xchg
outsl
mov
xchg
mov
jae
and
in
outsl
cmc
dec
sbb
cmp
jb
inc
inc
test
jns
je
loop
fwait
xchg
adc
lods
gs
push
sbb
push
stos
test
subl
pop
push
jecxz
jg
fists
mov
and
xchg
jb
sbb
push
xor
add
movsl
insb
mov
push
frstor
adc
xor
mov
push
test
xor
dec
das
aas
insl
pop
daa
outsl
mulb
iret
fmulp
jp
cmpsl
ret
jns
aas
data16
or
inc
xchg
cmp
push
fsub
sub
add
ret
test
ret
hlt
xor
cmp
pop
scas
mov
into
or
mov
rclb
mov
ja
jbe
and
fisubrs
jecxz
repnz
dec
xorb
out
sub
leave
inc
addr16
push
int3
std
adc
in
stos
sub
lret
adc
popa
add
inc
xchg
xor
pushf
cld
adc
add
sub
loope
test
jmp
adc
add
or
cmc
loop
and
add
lods
cwtl
add
sbb
push
jnp
xor
lret
and
add
jle
clc
rcr
jge
mov
xchg
insl
cmpl
icebp
adc
repz
push
fs
outsl
int3
pop
sbb
data16
cwtl
cmp
or
mov
mov
popf
inc
lahf
adc
pop
pop
and
jl
cltd
aad
mov
insl
add
pop
std
lea
xor
bound
or
sub
xor
sbb
jne
js
sub
ds
or
movsb
mov
movsb
xor
fwait
jle
repz
xchg
or
pushf
mov
xchg
loope
icebp
rorb
outsl
fwait
xchg
push
imul
stos
push
inc
pop
push
push
out
add
xlat
cmp
mov
xchg
inc
push
ret
or
std
test
jle
cs
cmp
or
mov
xchg
out
outsl
dec
aad
jge
pop
and
aas
xor
and
add
adc
sti
push
lods
xlat
mov
out
enter
ret
icebp
imul
inc
lea
add
iret
fcmovnbe
jmp
movsl
sbb
jl
mov
scas
dec
fwait
addb
das
fmuls
mov
xchg
cwtl
sbb
sbb
mov
or
jno
gs
in
xor
orb
jmp
fbld
fwait
loop
fidivl
cmpsl
hlt
inc
mov
rclb
outsb
mov
and
lods
push
inc
fldl
mov
sub
rcrl
aam
fiadds
movsb
ret
push
mov
jno
mov
int3
shrl
scas
fwait
sbb
mov
xchg
loop
stos
and
sahf
xor
aad
inc
stc
sub
mov
out
jne
sti
sbb
mov
cmpsb
int3
test
stc
xlat
cmp
pop
ret
dec
inc
xchg
fildll
push
xchg
loop
or
xor
jnp
rep
repnz
out
js
push
inc
daa
aaa
or
ror
loop
mov
inc
lds
push
cs
push
cli
packssdw
push
cmpsl
fmuls
cmp
pop
and
outsl
xor
sbbl
cmc
push
push
ret
lahf
imul
lret
outsl
add
lcall
push
cmpb
stc
loop
push
fwait
push
jecxz
subb
xchg
jg
fcoms
mov
fs
mov
jb
push
into
or
jge
jnp
dec
pop
or
clc
xor
lods
or
lahf
inc
lret
in
cmp
arpl
int3
aam
jne
fistl
int3
clc
jb
xor
fcoml
in
ljmp
push
test
jp
push
lock
mov
xchg
or
fnstenv
andl
inc
es
sub
ja
inc
mov
in
popf
xor
jae
jecxz
cmp
sahf
lds
push
mov
int
push
pop
scas
mov
repnz
push
ja
xchg
dec
stos
dec
push
mov
hlt
sub
iret
loopne
mov
xchg
cs
jne
mov
and
cli
and
insb
nop
mov
push
scas
stc
or
jmp
orl
xchg
fimuls
sub
fdivrl
cltd
pop
xchg
pop
xchg
jae
test
repz
push
call
and
push
dec
data16
subl
nop
cmp
into
add
pop
mov
fstps
int
push
sub
xchg
mov
pop
stos
jge
or
sub
push
push
mov
or
in
imul
clc
ljmp
xlat
jae
outsl
mov
stos
addr16
inc
mov
aad
loop
jo
pop
movsb
repz
pop
into
out
mov
scas
mov
in
or
je
or
xor
mov
mov
add
mov
out
fimull
push
adc
leave
test
mov
jmp
fldenv
test
leave
xchg
and
xor
push
mov
mov
mov
lods
lahf
cltd
es
jl
iret
dec
cmpsl
dec
pop
xchg
in
push
mov
fmull
inc
push
mov
mov
and
lods
in
fisubrl
adc
inc
aaa
mov
xchg
mov
dec
mov
sub
dec
cs
pop
scas
mov
cmp
movsb
mov
xchg
or
adc
call
cmp
pop
nop
mov
jecxz
xchg
push
es
jp
pop
out
ja
inc
out
cmp
and
jo
push
movsl
in
adc
xor
inc
push
jmp
pop
cmpsl
bnd
testb
and
fadd
ficompl
add
mov
pop
xor
pop
icebp
push
std
popf
and
aam
test
rcrb
sub
enter
pop
inc
sti
outsl
lock
push
push
pop
mov
cmp
jl
sahf
lock
dec
adc
and
add
mov
xor
les
or
mov
sti
mov
mov
mov
mov
shll
sub
lds
jb
push
dec
push
mov
sub
xor
dec
and
push
lahf
xchg
fcomip
mov
rclb
inc
jno
add
jb
or
bound
inc
daa
pop
jle
shl
dec
cwtl
int
fcmovne
loope
hlt
sub
into
sbb
loopne
sub
mov
xchg
inc
push
into
dec
mov
mov
mov
sbb
lods
pop
mov
dec
xchg
cmc
mov
add
test
fisubs
cmp
adc
dec
jo
xchg
mov
int3
call
ljmp
fwait
pop
adc
jle
xchg
imul
dec
and
iret
int
pop
loopne
and
cmp
cld
cli
aaa
or
gs
dec
sbb
icebp
out
lock
mov
pop
cmp
int
arpl
push
inc
xor
cmp
cmpsb
enter
imul
or
insl
pop
lret
fs
sub
add
mov
push
mov
test
inc
arpl
jae
push
fbstp
lods
jp
adc
jg
xor
dec
outsb
mov
dec
int
test
push
movsl
leave
ds
arpl
or
fimull
dec
or
push
sbb
add
xlat
mov
das
sub
int3
push
mov
daa
outsb
adc
cld
xor
ss
jp
jp
cli
jge
ret
push
lret
test
pop
sbb
test
cltd
xor
test
es
repnz
clc
xchg
outsb
inc
xchg
ljmp
mov
in
test
adc
fdivs
or
lretw
xor
push
jle
push
fs
call
mov
sahf
push
dec
enter
mov
or
jmp
sti
mov
arpl
es
jmp
les
inc
jp
ja
imul
xchg
cmp
enter
jo
lcall
out
icebp
mov
jecxz
mov
or
xor
mov
test
add
adc
fs
and
daa
ffreep
cmp
mov
sti
dec
outsl
jb
sbb
xor
inc
mov
out
loope
pop
cmp
out
fsubrl
fsub
dec
out
mov
jns
xchg
and
mov
push
adc
cmp
das
imul
insb
cmp
push
pop
daa
push
xchg
push
aas
fsubl
dec
xchg
mov
ss
mov
pop
inc
repnz
inc
jl
xor
push
and
ret
jp
fwait
push
roll
xchg
sbb
enter
roll
cmc
loop
inc
mov
popf
cs
jl
outsl
stos
roll
push
xchg
mov
addb
add
lahf
rol
jae
push
dec
shld
or
sub
test
cmp
pop
ror
fmull
xor
pop
call
test
mov
xor
pop
cmp
jl
push
mov
pop
add
rcl
sub
gs
in
jo
outsl
inc
insl
cwtl
mov
out
adc
mov
mov
shr
adcb
stos
lods
and
cli
loopne
cmc
iret
mov
jl
pop
and
or
adc
mov
int3
mov
mov
jae
in
sahf
sub
push
jb
xchg
clc
adc
and
test
dec
cltd
loop
mov
mov
add
or
jbe
fmull
mov
ss
addl
dec
popf
cltd
std
mov
xor
mov
xor
mov
mov
mov
fldcw
fimuls
imul
mov
sbb
mov
push
gs
test
dec
sub
insl
ja
add
test
das
xchg
push
movl
fcmovb
and
mov
ret
sbb
add
inc
leave
add
hlt
xor
int
jecxz
idivl
gs
mov
mov
mov
movsl
repnz
dec
out
add
stc
lods
inc
xor
iret
xor
mov
push
data16
inc
rclb
jmp
inc
test
stc
fs
fsubl
fcomps
mov
xor
addr16
cmp
cld
ficompl
sub
sbb
cltd
pop
out
paddb
dec
fstpl
inc
sub
pop
dec
fldenv
xchg
int
add
dec
pop
sub
push
adc
mov
mov
lret
out
push
ja
jo
mov
push
inc
jbe
sar
jae
insb
fwait
stos
popf
popl
jp
add
mov
repnz
stos
stos
mov
das
jns
fcomps
inc
popf
lahf
inc
aam
adc
sbbb
mov
iret
ljmp
shlb
xchg
sbb
add
js
jge
pop
jecxz
mov
shr
push
sub
dec
es
icebp
in
mov
pop
adc
mov
pop
xlat
xor
jmp
sub
mov
int
sbb
push
push
fstpl
and
cmp
das
mov
aam
ja
sarb
mov
fwait
sti
pop
cwtl
adc
lret
sbb
sub
push
jp
adc
xor
int
imul
sbb
dec
clc
in
lahf
loopne
cmp
icebp
push
add
out
xchg
repnz
xchg
mov
or
rcll
sbb
int3
fstps
push
xchg
icebp
test
jae
addb
cmp
xchg
lret
add
push
subb
mov
pop
or
cmp
dec
fisubrs
mov
sbbl
jge
fmul
cli
aam
xor
enter
fisubl
mov
pop
mov
mov
outsb
movsl
sbb
inc
aaa
aam
outsb
aas
rcll
cli
xchg
sub
jmp
inc
outsl
sub
out
in
push
mov
xchg
add
insl
dec
outsl
push
fcmovnu
push
sbb
ds
mov
lea
sbb
push
les
push
sub
xchg
jbe
xor
inc
rcll
inc
negl
mov
loope
push
jecxz
jle
xor
mov
stc
sahf
adc
xor
addr16
lret
jecxz
je
push
adc
mov
or
jns
cmp
in
add
ss
xchg
xor
in
and
fwait
push
xor
mov
les
xchg
and
pop
xor
ja
aam
xor
arpl
mov
movsl
dec
pop
cltd
in
jns
add
xchg
xlat
mov
gs
mov
insb
push
pop
repz
inc
and
fidivl
scas
movsb
jns
jmp
sub
cltd
fistpl
sub
sbb
xchg
cld
mov
lds
aad
es
push
or
dec
jmp
into
test
test
lds
mov
mov
das
aaa
mov
mov
mov
xchg
add
leave
cli
push
js
push
cmpsl
cmp
testb
xor
jg,pn
or
mov
push
and
sub
aad
out
push
mov
ljmp
imul
or
lcall
inc
lds
adc
subb
out
iret
mov
or
pop
push
add
adc
movsl
mov
mov
mov
xor
into
icebp
mov
jno
fisttpll
cs
xor
std
aam
xchg
sub
xor
jp
and
add
xchg
daa
mov
shll
shrl
dec
cmp
sbb
mov
mov
push
sti
lock
int
jmp
add
sbb
or
dec
dec
cmp
push
cmpsl
dec
cmp
mov
adc
dec
test
jno
inc
rorb
iret
out
fildll
pop
test
xor
dec
shrl
pop
jmp
dec
ja
scas
sbb
push
and
cmp
xor
out
sub
push
xchg
aam
lock
mov
dec
inc
add
sub
add
stos
pusha
je
andb
rcrl
xor
inc
mov
sarl
cmp
sahf
int
mov
out
cmp
addl
mov
test
cmp
loope
insl
push
dec
mov
iret
xchg
sti
loope
jle
pop
call
xchg
add
ljmp
popf
out
call
adc
or
push
or
push
inc
lcall
fistpll
dec
sbbb
add
mov
in
xchg
pop
fsubs
das
sub
in
mov
push
xchg
lock
push
pop
jl
iret
out
cmp
lods
mov
out
adcl
xchg
cli
inc
push
int3
popa
jnp
pusha
in
int3
call
mov
push
call
adc
or
sub
shrb
mov
xor
dec
imulb
outsl
mov
sub
xor
lea
pop
cltd
jecxz
inc
push
xchg
pop
aas
enter
addr16
sbb
adcl
pop
lods
call
das
dec
push
inc
inc
lods
cld
lock
mov
iret
test
sub
out
jno
stos
add
sti
lcall
or
int3
aam
clc
sbb
imull
cmc
cmp
mov
jg
mov
pop
push
in
jmp
inc
xchg
push
sbb
int
cld
aas
sbb
imul
cwtl
jmp
dec
aas
push
iret
mov
adc
push
pop
clc
xchg
arpl
add
sahf
inc
dec
sbb
test
movsb
pop
mov
and
nop
out
mov
push
ss
mov
icebp
mov
in
cmc
jge
add
loope
cmp
pop
lret
pushf
pop
add
sahf
aaa
daa
cmc
or
aas
out
bound
das
push
nop
arpl
xchg
jo
pop
mov
adc
aas
mov
add
dec
push
cltd
xor
sbb
and
repnz
hlt
adc
ljmp
sbb
and
xchg
sbb
sar
xchg
jo
call
or
push
mov
pop
fst
xchg
pop
mov
popa
iret
addl
xchg
mov
in
xor
push
push
bound
in
shll
scas
leave
std
xchg
mov
rcrb
cmp
push
cmpsl
and
cs
pop
add
mov
add
sub
pusha
sub
aam
clc
push
jae
cmpsb
mov
fldl
adc
dec
adc
rorl
fistps
inc
pop
and
ret
push
sbb
int3
and
mov
sbb
in
lds
cmp
jb
into
and
loopne
mov
xor
ficoms
mov
icebp
clc
push
mov
popf
aaa
mov
mov
pop
jle
pusha
xchg
or
mov
sarl
push
lods
ror
out
test
loopne
out
lret
mov
xchg
ja
int
dec
aaa
repnz
icebp
push
fsubrs
gs
cltd
imul
pusha
mov
mov
inc
je
sub
fsubrp
mov
mov
scas
ja
lock
hlt
inc
sbb
stos
jge
cld
ss
int
shll
jbe
fcmovbe
enter
xor
pop
inc
xorb
fmull
mov
test
pop
mov
pop
fsubl
dec
fists
cmpsb
shrl
mov
mov
dec
mov
mov
cmpsl
sbb
outsb
scas
shr
push
add
and
stos
sbb
jmp
sub
repnz
in
pop
cmpb
sahf
cmc
cwtl
push
sahf
mov
cmp
dec
adc
pop
push
dec
insl
jnp
inc
xor
icebp
sbb
outsb
sahf
inc
dec
lret
movsl
rorl
popa
inc
call
jmp
pop
lock
mov
dec
nop
pusha
sbb
push
xchg
ss
movsb
xchg
xchg
sub
shr
iret
cmp
mov
xchg
xlat
xchg
mov
aaa
sub
test
xchg
insl
push
xchg
mov
inc
mov
inc
sbb
ja
mov
mov
out
add
test
mov
cmp
sub
pushf
mov
mov
lods
sub
and
fdivrp
pushf
iret
xchg
nop
cmp
pop
lds
fisubrl
jl
cmpsl
and
sub
bound
mov
nop
xor
lahf
test
push
sti
rcrl
mov
or
pusha
xor
subl
and
mov
lret
in
xchg
shll
push
dec
and
add
shrl
jl
and
jnp
repz
jge
jp
mov
add
xchg
les
xchg
and
loop
pop
fmuls
mov
cs
shl
jns
imul
cmovbe
lods
dec
or
aaa
popa
mov
loope
push
jecxz
or
or
xchg
jp
push
jno
adc
daa
pop
or
jo
xorl
aaa
in
dec
inc
icebp
jp
test
mov
or
out
and
mov
or
adc
adc
aam
xor
les
push
jns
pop
stc
rcl
outsl
fdivr
mov
ljmp
mov
mov
xor
test
lcall
or
out
std
mov
push
movsb
cmp
daa
inc
sbb
out
mov
imul
filds
out
mov
or
int3
in
iret
pop
ds
mov
cltd
ret
les
adc
rcll
jmp
popa
stc
or
dec
sti
aas
loopne
jbe
push
lock
push
faddl
push
fcompl
daa
push
jns
and
xor
pop
fstpt
jno
movsl
lods
stc
and
les
das
add
inc
pushf
enter
mov
cmp
insl
inc
fnsave
jnp
cmp
mov
lea
pop
vmread
cwtl
dec
mov
aam
cmp
pusha
mov
or
cmp
sub
add
decl
outsb
and
cwtl
pop
shlb
push
sub
mov
cs
pop
lahf
sub
inc
mov
mov
fsubl
mov
cwtl
adc
arpl
cwtl
cmp
lods
dec
scas
cwtl
lcall
icebp
movsl
xchg
jl
ret
movsl
xchg
orl
mov
lods
pop
in
outsl
shrb
inc
imul
sub
push
cmp
inc
cmpsb
loop
leave
movsl
jg
loop
sub
stc
and
xchg
les
push
bswap
std
sub
jo
jecxz
push
stc
ret
loop
test
mov
adc
pop
sti
into
xor
or
dec
fs
xchg
mov
lret
push
xchg
add
push
loop
pop
xchg
jnp
sbb
in
mov
cmpsl
mov
es
inc
push
add
mov
nop
repnz
or
into
pop
jmp
jns,pn
xor
test
sarb
sbbb
inc
jne
adc
test
mov
add
xor
fcmovbe
sahf
cmpsb
aam
fists
rcll
sub
jbe
dec
dec
pop
adc
adc
cmp
rcrl
jnp
adc
push
out
xchg
mov
push
dec
in
mov
or
outsb
mov
or
jne
mov
mov
mov
pop
adc
mov
inc
lahf
push
imul
scas
push
inc
xor
fdivr
les
or
jge
push
xorl
adc
fucomip
jno
mov
cltd
and
mov
inc
sbbl
inc
loopne
sub
jnp
fwait
inc
popf
sub
and
sub
int3
add
into
ljmp
pop
stos
sbb
data16
adc
mov
sarb
jmp
cld
or
xor
jne
jg
or
mov
ret
lods
jmp
or
repz
testb
out
fwait
add
cmp
ret
out
pop
adc
fiaddl
inc
arpl
ret
add
jmp
xchg
push
fcmovbe
ljmp
out
pop
cs
mov
stos
test
cmp
xchg
adcb
mov
lret
std
mov
xor
out
cmp
fcoms
cmc
mov
in
inc
sbb
scas
mov
lret
out
jns
jnp
pop
sbb
rcrl
mov
scas
subb
cmc
lock
or
xor
add
xchg
pop
dec
add
xor
ss
xlat
shll
mov
cmp
js
stc
jmp
xchg
fsubp
sti
cwtl
int3
enter
xor
jno
cld
add
stc
loop
cmp
adc
push
int
cmc
ret
pusha
popa
mov
cs
jge
jmp
cmpsb
mov
cwtl
jp
cmp
dec
lock
lock
sbb
and
mov
pop
fsubrs
adc
aam
xchg
dec
popf
push
stos
push
iret
mov
ret
adcl
mov
push
dec
addl
mov
shll
xor
fimull
sub
adc
jl
icebp
out
lret
cs
dec
divl
and
insb
out
xor
lods
psrlq
cmp
mov
es
in
lahf
mov
sbb
int3
pop
fidivs
xchg
stc
out
add
dec
outsl
jg
sti
pop
mov
mov
jg
hlt
js
pop
fistpl
testl
mull
lea
cmp
ret
fstpl
sahf
push
inc
pop
mov
cmp
or
aad
js
pop
add
jl
cmp
mov
xchg
mov
dec
outsb
jg
icebp
cmp
mov
mov
jae
in
fcmovbe
adc
fs
jno
xchg
push
gs
jnp
or
pop
sub
insb
iret
pop
scas
jbe
sub
es
outsl
stos
sahf
jno
or
xor
adc
movsl
sub
jne
mov
jne
sub
fsubrs
or
stos
jl
sbb
xchg
cs
es
cwtl
ret
roll
add
mov
sbb
call
mov
and
and
cmp
daa
push
ror
inc
push
subl
hlt
mov
popf
int3
ja
and
dec
mov
xchg
mov
popa
xchg
add
sarl
jmp
flds
and
outsb
pop
pop
push
dec
aas
movl
cld
ret
pusha
adc
push
mov
and
lea
adc
dec
mov
lret
in
jle
and
les
out
imull
add
jg
mov
gs
pmuludq
push
xor
mov
xchg
adc
cmp
push
push
xlat
lock
fwait
cmp
lods
or
mov
cmpsb
inc
mov
or
scas
mov
in
mov
std
jbe
jmp
sbb
add
and
aaa
ret
mov
les
mov
cmp
adc
and
vmovhps
adc
outsb
pop
je
jmp
scas
lock
and
cmpl
and
sub
jmp
rorb
lods
or
popf
lock
insb
or
sub
sub
incb
cwtl
mov
daa
les
movsb
sub
jno
idiv
adc
or
sti
jns
lret
inc
imul
js
mov
mov
aam
fwait
scas
mov
mov
lds
aam
mov
je
cmp
icebp
mov
out
mov
in
jbe
mov
mov
stos
outsb
pop
sarl
sbb
scas
add
push
sub
aam
ljmp
lret
leave
cmpl
mov
jl
xorl
and
js
mov
push
xchg
xor
mov
loopne
out
push
or
xlat
pushf
data16
inc
insb
andb
xchg
jle
adc
rcl
mov
shll
dec
adc
popf
sub
dec
imul
and
adc
xor
adc
or
adc
sahf
pop
mov
mov
test
dec
test
call
add
inc
mov
push
movb
scas
movsb
cmp
in
into
es
push
adc
cmp
int3
inc
out
push
fstpl
push
iret
jg
daa
sbb
mov
test
popf
sbb
jecxz
jecxz
dec
repz
test
clc
movsl
addr16
aas
divb
adc
fildl
nop
jmp
mov
mov
pop
lret
idivl
xchg
mov
fisubl
std
sub
sub
sub
mov
fldcw
test
xchg
aaa
into
add
push
loope
xchg
dec
pop
mov
inc
mov
push
xchg
push
pop
lods
test
clc
sub
shll
jle
push
out
lods
mov
sub
jge
es
mov
not
movd
gs
jl
dec
leave
jo
pop
je
dec
adc
int
cltd
loopne
sbb
popa
sbb
pop
xchg
repz
push
sub
insl
pop
dec
pusha
movsl
xor
pop
add
js
fimuls
iret
adc
pop
mov
sar
ret
addr16
out
pop
or
push
add
or
mov
dec
je
mov
and
stos
rol
cmp
mov
adc
mov
fldenv
nop
movsb
mov
icebp
fcompl
xor
lea
fwait
sub
mov
inc
iret
outsl
pop
add
lahf
pop
daa
aas
sbb
or
ror
xchg
lcall
add
unpckhps
cmpsb
in
cmpl
in
scas
mov
xchg
inc
jge
xchg
emms
sub
ljmp
dec
push
mov
pop
adc
adc
dec
push
cmpb
jmp
pop
lcall
mov
xor
sub
add
and
xor
jne
shll
subb
pop
cmpsl
pop
and
mov
addr16
int
jne
and
movsl
xor
pop
xor
mov
sub
xor
jbe
mov
jnp
sbb
sub
or
fld
pop
call
shlb
sub
das
inc
adc
cmp
cmpsb
rcrb
sbb
xchg
adcb
test
adc
test
jne
dec
orb
rol
dec
inc
daa
rolb
insl
bound
outsb
adc
dec
push
mov
and
adc
push
sbb
leave
test
or
jge
mov
or
aaa
jmp
push
pop
les
roll
call
mov
mov
or
std
in
mov
cmpsb
jns
es
add
mov
pop
inc
cld
mov
out
call
out
sahf
call
and
pop
into
pop
rcll
insl
add
add
call
adc
and
ror
mov
mov
arpl
outsb
mov
adcb
jbe
out
aaa
push
jae
mov
pop
or
sub
dec
hlt
mov
out
push
jb
mov
adc
add
xchg
cmp
dec
and
lea
or
clc
sti
mov
je
stc
inc
bound
cmp
mov
jae
daa
lcall
sub
cmpb
pop
rcll
and
into
mov
xchg
pop
xor
call
jne
cmpb
lahf
in
dec
sbb
jg
aam
stos
leave
test
or
call
push
mov
mov
xor
je
add
aam
push
enter
and
inc
mov
sub
push
das
mov
xor
mov
inc
push
pusha
cmp
test
imul
jo
fistpl
rol
inc
add
rcl
popf
lret
push
cmp
dec
dec
stos
xchg
mov
lock
imul
mov
das
jle
gs
scas
sbb
and
loop
aam
mov
cmp
sub
nop
push
repnz
fsubp
imul
nop
dec
push
jnp
iret
sub
loopne
repz
int
js
dec
or
sbb
scas
inc
xchg
jbe
xchg
mov
cld
gs
mov
mov
lcall
add
or
pusha
loop
and
push
clc
loop
jnp
loopne
dec
repz
rcr
dec
loop
cli
lret
cmc
popf
cmc
push
push
es
xor
pop
adc
sbbl
inc
jp
inc
push
add
imul
jl
stos
mov
subl
dec
ficoml
out
shrl
repz
push
scas
xchg
lahf
adcb
and
daa
dec
mov
dec
dec
add
jle
sbb
pusha
add
into
add
mov
rcll
pop
imul
lea
dec
and
jno
popa
iret
sub
cld
jge
lret
add
pop
out
lods
cmp
adc
cmp
jne
subb
dec
es
test
jp
daa
inc
or
out
lret
inc
pop
aaa
jno
test
repz
mov
hlt
xor
or
xorb
test
lcall
filds
ficompl
cmp
mov
xchg
stos
cmp
and
and
shll
bnd
pop
dec
popf
clc
pusha
lcall
push
cmp
insl
adc
add
cmpsb
cmp
ret
push
fcomps
push
jge
out
inc
push
addl
jp
in
sub
pop
sub
sbb
xchg
xor
dec
sub
sbb
shll
pop
cli
push
dec
jle
pop
and
fistps
out
sbb
cld
push
xchg
subb
hlt
ljmp
imul
enter
xlat
test
iret
rcr
inc
cmp
push
sti
mov
add
outsl
xor
dec
lods
flds
sarb
into
jne
mov
mov
and
gs
mov
add
add
lret
and
jp
sbb
in
arpl
cltd
adc
sub
loope
add
leave
jnp
push
sub
mov
pusha
mov
pop
sub
pop
and
cmp
mov
jl
insb
lcall
mov
push
dec
nop
inc
sbb
xlat
dec
dec
out
sbb
mov
pop
out
or
add
push
ja
lahf
icebp
inc
mov
fnstenv
jnp
loopne
cmp
cmp
imul
push
fucom
dec
insb
cli
imul
pop
lahf
push
xchg
loope
aas
mov
jl
jne
sub
fidivl
addr16
fs
clc
in
pop
dec
adc
int3
pop
in
push
dec
mov
into
jae
jmp
and
lcall
dec
mov
cmp
nop
lcall
add
ret
mov
cli
mov
xchg
push
push
adc
dec
pop
mov
sub
fiadds
jmp
jne
loope
pop
loop
dec
mov
cmpsb
lahf
aam
pop
cmp
pop
sbb
mov
out
daa
xor
or
mov
push
outsb
bound
adc
repz
jo
mov
push
add
pop
push
mov
adc
and
sub
movsl
je
lds
add
mov
ficomps
cmp
fsubr
mov
or
enter
test
ja
les
pop
xchg
jae
aad
loopne
inc
adc
jo
imul
and
push
stc
sub
push
dec
mov
xchg
mov
fbstp
stc
jae
inc
cmpsb
test
cs
jge
les
cltd
xchg
pushf
aam
outsb
rol
or
fwait
mov
cmp
or
push
ss
clc
xchg
dec
sub
mov
movsb
aad
cmp
fadds
cmp
inc
scas
adc
ljmp
xor
sub
dec
shlb
inc
xorl
js
lahf
mov
cwtl
in
and
xor
cld
sbb
bnd
xchg
sbb
jo
dec
pop
imul
mov
jmp
inc
pop
fadds
jecxz
fdivrl
mov
cmpsl
and
sbb
imul
xor
adc
add
std
adc
pop
ja
push
mov
je
inc
ds
loopne
mov
sbb
jge
sub
jge
stos
mov
repz
cld
jle
insl
mov
pop
or
mov
dec
test
movsl
insl
call
imul
pop
cmpsl
xchg
repz
ss
xchg
cmp
xor
std
mov
popf
imul
or
or
dec
lods
imul
popl
int
sbb
xor
sub
mov
xchg
mov
or
cs
cs
mov
testb
sahf
je
decl
push
mov
mov
xor
pop
dec
iret
rcrl
lods
adc
adc
push
mov
xorl
je
cmpsw
pop
adc
in
inc
lret
loope
mov
fstpt
and
jmp
cmpsl
cmpsb
imul
adcl
das
sub
dec
mov
jb
jge
fwait
test
cmp
rcl
add
or
popa
repnz
add
pusha
in
inc
xchg
xor
or
push
shl
cli
fnstenv
mov
xchg
cltd
jg
mov
inc
sti
ss
addr16
loope
jge
lret
repnz
and
pusha
push
ss
repz
iret
xor
xchg
notl
orl
and
loope
and
jae
sbb
iret
cmp
out
jo
pop
pop
aaa
fcompl
or
jnp
std
cld
push
dec
cli
divl
xchg
sahf
lret
sbb
insl
enter
mov
sbb
xchg
and
sbb
pushf
addl
push
dec
movl
in
cltd
daa
loop
nop
xlat
scas
push
pop
xor
lret
jp
push
dec
pop
sbb
dec
pop
scas
ja
jl
mov
fidivrl
mov
push
stos
xchg
xchg
in
pusha
xchg
shll
call
pop
test
xor
mov
xchg
xor
mov
mov
inc
rclb
mov
jp
fwait
push
out
mov
jp
rcrl
inc
push
push
push
notb
rcl
sti
cmp
pop
sub
push
sub
dec
lcall
jp
imul
or
repnz
std
push
mov
dec
icebp
inc
movsb
xor
movb
out
mov
mulb
outsl
lret
cmpsl
jo
inc
xchg
orl
stos
dec
negb
mov
pop
cmpl
sub
add
xor
push
movb
lock
mov
and
in
pushf
fisttpll
or
adc
mov
enter
jo
imulb
shrb
inc
sbb
dec
jbe
or
dec
push
push
sbb
fldcw
add
sbb
dec
lahf
mov
xlat
popf
lea
das
lret
or
sub
shll
dec
mov
mov
sub
sar
repz
inc
or
add
ds
add
xor
fisttpll
fldenv
fcomp
dec
jns
xor
int3
cwtl
xchg
in
push
movsb
lds
hlt
call
pop
test
cld
das
sub
ret
jmp
mov
mov
cltd
ljmp
ficoml
daa
and
mov
movsl
or
xchg
outsl
mov
add
shrl
or
push
scas
cli
sub
imul
mov
inc
sub
dec
push
dec
das
outsl
jmp
or
cmpsl
in
insb
subb
jbe
jno
push
stos
sbb
popa
mov
dec
or
mov
daa
das
loop
cmpsl
bound
push
or
imul
repz
xor
cs
pop
in
aaa
jns
xchg
jnp
adc
and
adc
ret
cltd
ret
sbb
loop
push
mov
js
cmc
aaa
mov
test
enter
dec
std
stos
inc
testb
xchg
in
les
test
mov
push
repnz
cs
push
cwtl
jmp
dec
xor
das
cmp
pmulhuw
cmpsb
sti
cmpsl
es
fisttpl
int3
gs
je
mov
clc
mov
sbb
pop
pop
add
les
cltd
lock
cmp
movsb
sbbb
inc
adc
xor
pop
sbb
jg
cs
insb
dec
add
ds
sbb
dec
lods
mov
xor
mov
out
mov
mov
ret
push
mov
ljmp
clc
hlt
mov
outsb
mov
inc
push
scas
jne
or
gs
push
test
mov
repnz
lock
pop
add
mov
cmc
outsb
push
cmp
sarb
xorl
aam
ja
mov
push
test
int3
or
outsb
sub
push
std
cltd
add
bound
test
lcall
lds
cld
adc
jecxz
inc
and
gs
pop
leave
add
jle
pop
std
push
out
mov
xchg
adc
inc
ljmp
cltd
loop
xor
ja
sub
cmp
ret
ret
mov
jno
mov
jmp
mov
xor
sub
cmpl
fs
jb
ds
and
lret
push
xchg
cmp
cwtl
adc
movsb
decl
jnp
fs
cmp
cmp
mov
ljmp
xor
mov
push
gs
mov
sbb
ret
jo
xchg
xor
enter
sbb
dec
mov
cmp
bound
jge
popf
xchg
leave
inc
or
jno
or
pop
popa
sub
sub
sahf
in
xchg
adc
aas
mov
sti
mov
test
ret
pop
adc
or
shr
mov
call
mov
jae
pop
jbe
push
out
mov
sti
bound
or
pop
jg
xor
mov
icebp
mov
sub
lock
xor
imul
cmp
mov
sahf
sbb
lret
lret
mov
add
mov
inc
push
mov
int3
pop
fcmovnu
aam
dec
pop
sbb
sahf
enter
push
xchg
cwtl
adc
mov
lock
outsb
cs
inc
shlb
mov
add
pop
inc
into
aas
test
out
pop
daa
in
icebp
xchg
leave
mov
call
imul
sub
adc
dec
mov
and
xchg
inc
dec
xor
cmp
fistpll
inc
sub
data16
loope
daa
add
or
aad
adc
testb
xor
mov
mov
xchg
addl
hlt
mov
mov
cmp
push
adc
xchg
xchg
sbb
and
xchg
mov
fistpl
jl
mov
ret
cmp
dec
jle
xchg
adc
imul
clc
mov
dec
aaa
movsb
xchg
sbb
and
lret
mov
subb
pop
fcmovnu
cmp
pop
mov
adc
icebp
pop
movsl
outsl
fwait
mov
mov
cltd
fsubr
sub
cmc
or
test
fwait
insb
push
or
dec
inc
pop
rorl
insb
xorb
sti
xor
scas
xor
jmp
sar
and
out
sbb
cmpsl
xor
stc
ljmp
push
xchg
dec
sub
incb
imul
lods
adc
stc
mull
mov
sbb
mov
pop
fwait
sbb
mov
cmp
fistps
int
and
out
add
pop
push
sbb
sbb
lahf
mov
pop
mov
insl
sbb
call
mov
dec
sub
lods
gs
out
jnp
call
cltd
arpl
lds
fidivs
fcmovb
fwait
mov
in
pop
mov
ss
pop
aam
mov
in
jmp
icebp
out
lcall
mov
push
aad
xchg
mov
adc
popa
std
xor
push
xor
jno
test
add
int3
sub
sarl
xor
cmp
enter
push
xchg
push
ja
cmc
jne
xor
leave
sysenter
xchg
lret
das
fincstp
add
sbb
dec
mov
cmp
es
int3
jmp
pop
lcall
shrl
data16
pop
repz
push
pop
jae
inc
and
leave
sbb
pop
adcb
mov
add
mov
or
mov
mov
lea
bnd
jl
xchg
xchg
xor
pop
cmp
mov
cmp
arpl
lods
je
xchg
pop
lods
repz
das
ljmp
mov
cmp
outsb
mov
sbb
push
cmpl
rorb
jl
push
mov
cmp
push
insb
jp
add
ds
jge
ljmp
jmp
sub
in
lret
xchg
inc
push
into
lret
cmp
and
mov
add
mov
fbstp
loop
movsb
inc
adc
add
clc
insl
insb
mov
pop
pushf
bound
jnp
cmpsl
push
ret
movsl
fstpl
xchg
jmp
mov
loop
push
and
fldenv
and
repnz
fcomp
loopew
pop
mov
gs
mov
das
roll
nop
outsl
dec
rolb
pop
cmp
xor
sar
mov
mov
and
popa
push
test
push
imul
adc
jo
add
into
rolw
cmp
and
mov
and
lahf
inc
imul
sahf
xchg
fisubl
and
sbb
push
inc
dec
push
inc
loopne
adc
dec
lods
movsb
rcll
testb
push
insb
popf
add
insb
pop
dec
pop
jo
fmuls
repz
out
aad
xor
das
push
out
push
add
push
fistl
mov
pop
dec
in
lahf
cwtl
inc
es
adc
loope
inc
cmp
int
xchg
and
hlt
adc
js
filds
adcl
dec
mov
xchg
pop
xor
stc
mov
dec
cmp
jmp
add
hlt
xor
xchg
sub
mov
mov
inc
pop
scas
leave
daa
add
popf
test
xchg
cmp
stos
or
rorb
or
lods
pop
scas
mov
cmp
adc
clc
jge
jno,pt
add
dec
aas
cmpsl
das
xor
jbe
call
shll
inc
xchg
push
jbe
into
cmp
aas
adc
adcl
movsl
inc
fnstsw
shlb
fmull
int
stos
lcall
sbb
pop
popf
xlat
fisubs
or
ret
nop
mov
lret
ficoml
pop
lahf
jb
cli
lret
notl
pop
js
sub
jmp
ret
cmpsb
data16
test
das
dec
mov
cmp
insl
inc
mov
loop
adc
nop
rol
xchg
push
lods
xchg
mov
cmp
and
sub
mov
out
or
push
xor
mov
data16
in
in
jbe
ret
inc
push
cwtl
add
addb
mov
dec
das
popa
mov
popa
and
sar
mov
push
into
push
xor
mov
inc
mov
popf
test
jnp
rolb
push
aaa
rcll
push
xchg
sub
shll
pop
mov
mov
mov
inc
push
mov
dec
push
dec
loope
aam
repz
or
cld
or
xchg
outsl
into
inc
lea
sti
addb
iret
cs
cmp
fs
xchg
lret
and
aaa
sub
inc
mov
cmp
sub
popf
sub
hlt
loope
lods
and
jns
jbe
call
mov
pop
fld
cmp
jae
jg
dec
push
pop
pop
out
leave
incl
or
add
xlat
xchg
mov
xor
xor
cld
push
add
mov
ds
pop
enter
popf
mov
jno
xor
sbbb
repz
cmpsb
test
shlb
mov
stc
daa
and
cld
pushf
jnp
xor
push
mov
xor
inc
xor
addr16
push
xor
les
dec
and
out
mov
cld
inc
cli
test
lea
xchg
or
repz
arpl
or
and
mov
sahf
ret
inc
in
push
add
cmp
mov
test
jae
fs
out
adc
pop
jmp
pop
leave
xchg
push
pop
subb
jb
mov
xchg
push
lret
jmp
gs
jge
add
imul
enter
ret
imul
and
xor
in
js
clc
mov
iret
ljmp
aam
stos
mov
push
in
rorb
clc
test
out
clc
xchg
mov
in
scas
jp
mov
xor
mov
pop
mov
mul
sub
hlt
add
sbb
xchg
arpl
push
sub
mov
dec
jne
and
jo
mov
mov
push
pop
pop
mov
cs
lret
sub
call
faddl
push
inc
mov
jb
outsb
fisubrs
out
test
inc
mov
xor
test
adc
lcall
sti
sub
cmpsl
filds
jmp
adc
jecxz
push
inc
cltd
mov
punpcklwd
cld
mov
pop
sub
mov
sub
mov
cmp
push
or
sahf
cmp
fists
cld
mov
cltd
sahf
jp
and
roll
lods
enter
mov
adc
scas
std
add
stc
jle
push
jl
or
mov
mov
jo
dec
pop
push
insb
movsb
in
adc
aad
jno
rcrb
lret
mov
dec
inc
sub
jbe
lret
lock
mov
cmc
pop
dec
aaa
sbb
cmpsl
push
jle
mov
push
xchg
and
ja
mov
movsl
sub
mov
fsub
addr16
insb
pop
ljmp
pop
xchg
cmp
les
jge
outsb
and
fsubs
and
mov
subl
xor
dec
mov
and
loopne
repz
jae
dec
inc
test
daa
push
xor
or
faddp
popf
add
aam
pop
in
outsl
dec
pop
call
xlat
pop
mov
jmp
mov
cmpsb
mov
mov
loop
sbb
push
sub
xchg
xor
out
jl
cwtl
and
repnz
sbb
orb
ds
mov
loopne
mov
add
enter
cmp
out
push
in
std
dec
into
daa
mov
mov
lahf
inc
mov
shrb
es
mov
int3
xor
xlat
and
xchg
pop
imul
jmp
mov
sbb
scas
and
out
pop
scas
and
push
xlat
mov
aam
cmp
je
rcll
ds
icebp
aas
stos
addr16
ja
inc
sub
rorl
add
test
mov
and
jns
dec
xchg
mov
fdiv
rcll
std
pushf
push
sarb
repnz
fs
in
jp
push
ja
push
ljmp
pop
mov
stc
in
int3
stc
dec
xor
in
popf
daa
xor
in
arpl
rcrl
inc
mov
lea
add
or
ds
pop
incb
xor
and
dec
stos
mov
push
inc
inc
jbe
bound
or
sahf
js
jl
out
fwait
mov
stos
jo
cmpsl
xor
mov
and
les
mov
jmp
scas
jne
mov
dec
mov
mov
xor
aas
pop
inc
ja
xor
insl
sti
sbb
xor
jno
clc
aam
dec
dec
mov
xor
std
div
in
and
out
pop
popf
mov
dec
xchg
mov
out
jge
shr
mov
mov
testl
jl,pt
leave
adc
pop
outsl
jo
fs
mov
call
divl
aad
add
push
inc
ficomps
pusha
jbe
inc
mov
push
les
fcompl
sbb
and
sahf
add
pop
and
outsl
jp
inc
out
push
out
movsb
repz
or
dec
adc
ret
imulb
hlt
mov
lds
dec
repz
sub
xchg
lahf
jp
ds
fnstenv
data16
mov
js
imul
movsl
lods
fdivr
adc
das
sub
jae
lret
icebp
push
stos
cmc
cmp
shr
fimull
push
mov
and
or
jle
mov
push
loop
pmulhw
mov
clc
aad
out
gs
xlat
push
xchg
subl
push
mov
or
inc
sarl
sti
int3
pop
xor
add
jmp
pop
push
shl
xor
pop
lret
in
lret
mov
imul
int3
movl
xor
add
mov
jns
sbb
aaa
pop
aaa
dec
add
cmp
int3
mov
add
aas
sbb
mov
outsl
xchg
fmull
push
xchg
sub
adc
fadd
mov
test
jge
cmp
int
mov
mov
les
pusha
movsl
and
cmp
fdivl
cwtl
leave
in
push
aas
repz
divb
xor
or
popf
rcl
push
xchg
fnstenv
icebp
aam
jecxz
movsb
xlat
push
sahf
mov
sbb
paddw
jno
rolb
jo
and
test
mov
call
mov
and
inc
addl
adc
jg
divb
sti
aaa
add
xor
imul
incl
stos
outsb
jecxz
sub
push
pop
imul
push
xchg
cmc
or
fdiv
insb
cld
jecxz
lea
inc
cmp
ja
js
xchg
push
enter
leave
jge
mov
xor
mov
and
cmp
cltd
inc
xor
stos
and
repnz
ljmp
call
cmp
dec
jb
pop
mov
lretw
popa
fsubrs
addr16
push
lret
call
mull
lret
push
test
andl
or
xor
mov
xlat
cmp
adc
aam
gs
out
cmp
xorl
pop
sub
jo
in
add
fstps
roll
mull
add
jno
add
mov
js
jbe
and
ja
call
ljmp
hlt
mov
nop
cmp
ljmp
dec
pop
pop
lret
cld
out
stos
mov
push
dec
jnp
loopne
movsb
fldlg2
inc
lahf
adc
cmpsl
je
or
clc
push
pop
mov
fwait
idiv
push
xor
int
test
push
out
or
hlt
lret
es
and
dec
aad
xor
xchg
xor
out
adc
sbb
sbb
jmp
xor
sbb
rorl
in
adc
lret
fldt
dec
push
aaa
mov
push
add
out
xor
loopne
insb
push
mov
mov
add
jmp
shlb
sub
cmp
jne
fisttpll
mov
add
or
xor
jnp
add
jae
push
repnz
push
inc
test
nop
nop
or
ljmp
rorl
xchg
into
push
stos
shrb
stos
insl
iret
xchg
lret
subl
hlt
iret
adc
lods
mov
aas
mov
fldenv
arpl
add
xchg
leave
test
daa
mov
aas
adc
mov
jmp
ret
pop
lahf
xlat
xlat
scas
inc
push
sbb
into
nop
sbb
pop
push
pop
or
fbld
mov
xchg
stc
mov
push
je
pop
enter
mov
es
push
push
add
out
push
jno
sbb
add
xchg
jb
in
jecxz
mov
mov
xchg
xor
jp
imulb
fbstp
out
icebp
lret
jb
pop
aaa
push
sbb
scas
int3
mov
jg
adc
adc
pop
test
sbb
fisttpl
movsb
std
xchg
cmp
test
into
addb
adc
rorb
jecxz
cwtl
loop
jle
mov
mov
push
int3
cmp
xchg
add
shrb
xchg
dec
into
lret
or
add
fistps
stc
test
jecxz
iret
pushf
icebp
mov
outsl
test
push
pop
addr16
sbb
mov
cmp
int3
mov
sub
popf
and
or
aas
add
daa
dec
in
scas
xchg
loopne
cld
pop
ljmp
xor
pop
cmp
xlat
push
rorb
outsb
pop
mov
out
push
daa
pop
mov
pop
bound
and
ja
movsl
orl
mov
lea
mov
cmp
inc
test
cmp
ficomps
aad
inc
std
hlt
or
xor
stc
jg
cmp
push
push
dec
outsl
add
ds
cwtl
cmp
or
in
fildl
das
mov
push
imul
mov
pop
push
sbb
or
jl
pop
jne
out
call
lods
add
rcll
pop
cld
lcall
inc
ss
popf
inc
mov
push
jle
pusha
xchg
xchg
je
cmp
xchg
mov
cmp
loope
test
jb
push
add
jnp
inc
sbb
repz
roll
cmp
dec
mov
gs
das
sub
mov
xor
sti
dec
jmp
mov
movsl
sub
icebp
mov
shll
inc
je
xchg
xchg
sbb
lret
or
adc
ds
sub
test
clc
addr16
in
popa
rorb
test
cmp
xchg
adc
pusha
mov
fcomp
orl
rcrb
sbb
push
ja
hlt
xchg
add
mov
rorl
pop
icebp
ret
in
outsb
mov
jge
sbb
loope
in
mov
pop
repnz
and
inc
cli
shl
cs
mov
and
loop
mov
mov
add
inc
andb
rcrl
into
ret
mov
inc
sbb
xchg
push
je
shll
pop
jp
pushf
or
fwait
xchg
pop
cmpsl
outsl
rcrl
adc
sbb
xchg
push
xchg
push
add
mov
ficompl
jns
popa
mov
fldcw
dec
xchg
out
inc
test
jb
sti
adc
cli
insb
sti
inc
and
xchg
jl
dec
imul
adc
in
dec
fcoms
insb
aad
jnp
mov
fbld
mov
mov
subl
in
leave
sbb
jp
scas
lods
adc
inc
push
mov
xor
sub
shl
aam
in
xor
test
jne
cld
gs
imul
in
inc
sbb
dec
sti
popf
adc
xchg
scas
jne
cltd
mov
imul
cmpsl
pushf
fsub
jns
pop
lret
in
cld
shll
dec
mov
push
arpl
pop
mov
or
and
jnp
dec
mov
sub
dec
lods
daa
sbb
lds
fisttps
and
mov
cmpsl
jo
jae
mov
cwtl
xadd
xchg
jb
bound
shlb
push
pusha
xor
je
sub
cwtl
sbb
out
add
sub
in
rcrb
fld
cs
sbbl
jge
cmp
pop
int3
push
mov
arpl
dec
inc
push
sbb
cli
inc
in
jle
or
lcall
push
adc
cltd
lea
cli
mul
movsl
pusha
das
add
loop
and
sbb
in
inc
and
in
cmpsl
mov
inc
mov
data16
dec
xchg
test
shrl
stos
mov
mov
jnp
std
inc
push
lcall
sbb
jg
sbb
jns
mov
xchg
dec
shrl
test
cwtl
clc
xchg
jl
jno
hlt
scas
dec
cld
sbb
add
mov
mov
pop
jle
push
or
lcall
lock
xor
in
or
mov
jae
mov
and
push
dec
mov
add
pop
cmpsl
orl
scas
scas
leave
fidivrs
xchg
lahf
adc
cmp
jo
out
sub
scas
adc
mov
xlat
sbb
int3
out
xchg
xor
xor
cli
aas
inc
mov
pop
mov
leave
popa
jnp
add
loopne
push
lods
xchg
les
push
adc
mov
mov
out
ds
movsl
xorl
jle
insl
movsl
rcrl
loope
cmc
jl
sbb
pushf
inc
pop
insl
pop
jp
sbb
int
ret
pop
movsl
add
aam
stos
mov
sub
in
mov
out
xchg
stc
lds
gs
dec
adcl
mov
jns
orl
cmpsb
stos
and
xchg
push
and
or
or
mov
aaa
test
dec
iret
mov
mov
cmp
sub
ret
test
cmpsl
sbb
xchg
jmp
adcb
daa
cli
mov
es
push
sbb
inc
cld
in
test
mov
jbe
and
jge
cld
push
hlt
decb
sbb
dec
xchg
add
aad
daa
sub
push
aam
sbb
lret
adc
xchg
std
and
cmpsb
cmc
jecxz
imul
cmp
mov
sub
leave
inc
rcrl
jnp
cmp
jne
lea
adc
loop
lret
xchg
dec
scas
pop
inc
push
hlt
je
dec
mov
dec
push
sti
in
repnz
pushf
sub
pop
lods
jl
idivb
pop
jmp
cmp
inc
jnp
mov
fistpll
dec
pop
les
fs
cmp
adc
cwtl
cmpsl
mov
adc
fsubrs
xor
mov
imul
scas
jecxz
jecxz
sbb
mov
in
mov
push
sbb
je
or
sbb
mov
aaa
bound
loopne
mov
add
jae
push
pop
das
rclb
cmp
sbb
cld
pop
out
ret
fstpl
push
jmp
mov
push
mov
int3
xor
mov
and
dec
mov
cmp
push
xchg
adc
ret
nop
cs
outsb
xchg
lret
jmp
xchg
add
xlat
inc
sbb
testl
pop
add
fs
mov
pop
mov
aad
dec
sti
dec
sub
out
pop
cmp
mov
fs
mov
push
loop
push
insl
out
scas
xor
push
insb
xor
sbb
jle
mov
pop
outsb
addr16
cwtl
ss
in
sahf
add
arpl
cmp
pop
mov
xor
inc
daa
fists
add
or
pop
adc
cs
adc
movswl
push
inc
ficoms
lods
hlt
mov
xchg
cwtl
movb
lret
cmpsb
push
pop
adc
xchg
sbb
mov
inc
dec
cmp
std
daa
dec
mov
cmp
xchg
xor
or
mov
dec
xor
pop
fiadds
lcall
inc
in
cmp
shrl
and
and
enter
sbb
mov
or
pop
outsl
or
inc
mov
xor
test
or
jno
pop
adc
mov
bswap
das
mov
jb
add
nop
sbb
sbb
sub
pop
pop
xchg
test
aaa
arpl
sbb
mov
xor
ret
repnz
jge
cwtl
out
add
shll
cmc
je
adc
push
mov
xchg
mov
or
jae
stos
in
fwait
jne
js
out
jbe
jns
adc
lds
mov
adc
sbb
lret
divb
pop
xchg
cmp
addr16
es
pop
sahf
out
imul
xchg
jbe
cmc
and
mov
inc
fwait
mulb
outsl
adc
in
jle
pushw
pop
push
mov
add
aad
pop
es
xchg
stos
add
faddl
jae
jb
dec
adc
push
fdivrl
add
repz
test
js
jns
sbb
push
imul
orb
lea
mov
push
mov
jns
arpl
adc
fwait
das
jne
adc
cli
mov
xor
lods
and
mov
in
pop
mov
ds
xchg
es
pop
jne
mov
filds
xchg
popfw
add
repnz
push
stos
into
scas
or
push
mov
jecxz
mov
loope
push
or
or
mov
push
lock
add
test
xchg
ss
mov
jmp
rclb
lahf
in
or
cmp
in
pop
dec
popa
js
test
flds
or
lret
sti
lock
cmp
cmp
mov
xchg
outsl
rclb
ret
clc
nop
stos
rcl
bound
mov
push
stos
roll
pop
pop
out
pop
inc
xchg
and
pop
mov
xor
les
mov
mov
jns
aaa
inc
pop
adc
dec
inc
scas
clc
mov
jmp
lock
lea
add
or
inc
rcll
shlb
sbb
cmp
arpl
mov
inc
into
outsl
and
nop
mov
add
es
mov
mov
stos
jecxz
mov
dec
clc
popa
pusha
addr16
ds
and
xchg
jb
fimull
das
mov
scas
pop
add
mov
inc
or
xor
pop
adc
fnsave
fnstenv
jo
into
jge
dec
mov
flds
sbb
fwait
rcrb
jp
aas
iret
mov
push
dec
sbb
and
push
fbld
xor
add
aas
jbe
jmp
movsb
cmpsb
fsubrl
cmovs
dec
ss
inc
test
nop
or
push
ds
clc
test
shll
dec
int3
into
jmp
xor
imulb
mov
mov
je
ljmp
int
or
mov
cwtl
loopne
adc
jo
stos
lods
sub
ret
mov
sbb
push
sahf
mov
gs
mov
jmp
push
ljmp
push
lea
in
push
pop
mov
xchg
pop
jmp
mov
push
pop
and
inc
pushf
inc
mov
and
mov
outsb
out
cmpsb
pop
jge
pushl
and
xchg
out
jne
dec
in
mull
adc
push
mov
fsubl
xchg
pop
lds
mov
cs
imul
sbb
lcall
insb
clc
bound
cmp
cwtl
sub
mov
xor
dec
xchg
adc
repnz
sahf
mov
fbld
addb
in
sbb
dec
sahf
mov
push
ds
pushf
inc
mov
movsb
sub
imul
fsts
cld
push
int3
lret
mov
mov
cltd
repz
ret
test
ret
push
int
mov
xchg
jns
sbb
je
and
add
dec
stos
xor
mov
jo
mulb
mov
pop
xchg
les
cmp
mov
outsb
into
sbb
push
xchg
mov
enter
pop
xchg
pop
andb
adc
dec
inc
jo
dec
mov
cli
or
mov
rcr
add
pop
mov
xchg
inc
or
popa
movsb
out
cmpsb
jp
loope
sbb
daa
pop
dec
xor
gs
add
or
or
pop
mov
fdivrl
stos
lea
test
aam
cltd
arpl
ret
sub
sub
iret
out
ljmp
std
movsl
jle
add
mov
mov
mov
inc
daa
or
adc
loope
aaa
mul
mov
or
and
add
rcll
in
test
pop
push
dec
data16
jg
xchg
jo
aaa
pop
sbb
ret
sar
inc
fsubrl
mov
xor
test
orl
mov
xchg
or
int3
rolb
test
andb
push
jmp
pop
cltd
mov
rcr
out
fimuls
dec
jae
jle
mov
push
add
inc
jg
mov
sbb
push
shll
fstpl
in
ret
xor
adc
sub
jnp
repnz
or
int
sub
icebp
lock
add
lods
mov
je
sti
test
dec
out
sbb
mov
push
inc
cmp
pop
in
icebp
add
xor
mov
les
xor
mov
sub
lods
ljmp
jae
sbb
mov
out
mov
mov
insb
pop
jl
jno
mov
scas
inc
mov
subb
mov
repz
xlat
and
ljmp
insb
pshufw
shll
lret
jno
divb
push
inc
fcmovnb
fnstcw
push
and
cwtl
push
dec
js
inc
cs
mov
mov
add
and
mov
xchg
add
inc
andl
push
mov
or
lret
cs
icebp
sbb
movsb
push
xchg
mov
add
cmpsb
mov
jns
sub
das
inc
sbb
and
fs
xorb
sbb
dec
mov
mov
cmp
lret
les
notl
inc
int3
cmp
fcmovbe
push
lcall
add
add
xchg
pop
icebp
pusha
xor
cmp
imull
sub
push
dec
cmp
mov
lret
add
or
pop
clc
sub
rolb
and
cmc
mov
xchg
shlb
push
ret
mov
int
xchg
mov
dec
push
rol
mov
dec
cmpsb
scas
mov
aam
dec
cmp
mov
outsl
xor
test
add
call
pop
push
add
mov
nop
sbb
cmpsl
sub
xor
add
insb
inc
xchg
adc
mov
mov
pushf
xchg
xor
xchg
add
sub
lret
adc
sbb
imul
mov
adc
adcb
sub
mov
jno
and
mov
add
ret
sahf
jge
jbe
stc
jecxz
mov
shll
mov
xor
loope
add
push
stos
mov
dec
jns
adc
push
xchg
clc
jmp
test
xor
neg
push
fstl
mov
sub
cmp
scas
loop
cmpsl
mov
cmp
adc
sub
inc
mov
sbb
fnstcw
inc
test
decb
mov
enter
sub
repz
imul
cmpsl
pop
xor
xchg
sbb
mov
lock
push
jmp
cwtl
lea
in
decl
xor
mov
fldenv
outsl
mov
rcr
fs
jmp
xor
xchg
nop
mov
xchg
loop
sbb
cltd
mov
mov
cmc
pop
das
jmp
mov
pop
pushf
popf
jo
fbld
mov
cmpb
jp
cltd
sub
or
push
xchg
push
rclb
cmp
xchg
lods
loopne
test
movsl
or
push
cmp
je
cltd
inc
mov
dec
jne
sbbl
cmp
aam
hlt
sar
mov
ret
pop
cmp
and
sbb
adc
popa
bnd
lds
or
jae
sbb
xchg
pop
bound
add
ss
xor
push
push
inc
and
xor
idivl
dec
jecxz
mov
mov
lret
lods
es
dec
xchg
jbe
pop
adc
push
fcomip
movsl
xlat
dec
mov
pusha
xchg
fxch
push
insl
mov
dec
add
aad
xor
or
push
push
cmpl
jecxz
fidivl
ret
push
push
sbb
jno
or
insb
mov
mulb
mov
pop
add
push
adc
sar
int
mov
mov
sub
sbb
and
jecxz
decl
imul
scas
adc
add
fdivrl
adc
jbe
movsl
xor
popa
sub
sbb
push
outsb
clc
outsb
mov
sub
lret
repz
call
pop
dec
jg
dec
push
or
popf
pop
fst
jno
enter
push
pop
sbb
push
mov
out
ret
xchg
cmp
sub
pushl
or
bound
rcrb
mov
sbb
lret
int
sub
jmp
pmovmskb
xlat
mov
ret
fbstp
aas
loopne
cmp
sbb
mov
invd
adc
add
lods
clc
int3
cld
mov
repnz
stos
sub
cmp
mov
pop
mov
sub
pop
xchg
and
ret
aam
mov
stos
sub
jmp
sbb
and
xlat
xchg
in
mov
icebp
and
mov
cmpsl
adc
xchg
scas
aas
loopne
xor
adc
push
jno
sbb
fnstcw
in
inc
sbb
jne
in
rcrb
sbb
sti
mov
pop
dec
sbb
leave
inc
cmp
fistl
xor
int
mov
dec
das
aam
addl
outsl
sub
inc
or
or
repnz
insb
in
fimull
test
sbb
push
mov
sti
adcb
dec
lods
mov
das
ret
test
xorb
xorl
dec
nop
xor
xor
cmp
adc
js
xlat
scas
in
movsb
add
pop
pop
testb
repnz
movsl
pop
jecxz
inc
out
inc
jge
sarl
jp
sub
hlt
repnz
test
stos
lods
in
adc
adc
push
xchg
push
cmp
retw
add
dec
cmc
out
add
cli
gs
icebp
mov
jo
inc
cld
inc
add
es
ljmp
cld
call
js
mov
and
or
mov
jge
inc
sub
adcl
js
add
adcb
lret
pop
ret
pop
sbb
enter
movb
in
aad
in
adc
cmpsb
popf
movl
xchg
mov
push
scas
in
pop
aad
cld
inc
cs
cwtl
jmp
pop
or
ja
dec
jg
bound
out
pop
scas
jmp
repnz
jecxz
lahf
push
faddl
jl
pop
lea
arpl
in
adc
adc
bndldx
sub
data16
enter
xor
idivl
stos
test
lds
rcrb
mov
jo
push
into
pusha
xor
push
enter
mov
iret
scas
out
mov
xor
adc
jecxz
loopne
pop
fwait
in
sub
mov
sti
data16
orb
adc
repz
inc
sbb
lods
out
push
imul
jecxz
adc
shl
in
or
out
pop
xor
aas
cwtl
in
adc
test
add
icebp
add
aaa
dec
cmp
popa
out
inc
negb
adc
scas
cmc
xor
sub
sub
xchg
imull
mov
cmp
stc
call
or
jne
add
xchg
xor
jge
inc
lds
add
jmp
pop
push
and
dec
jbe
repnz
dec
adc
outsl
aam
in
cmpsl
xlat
cmpsl
popa
mov
in
cmp
jns
aas
or
ljmp
mov
adc
dec
js
xlat
les
gs
rorb
mov
jb
iret
sub
jmp
lret
jno
xchg
cmp
jge
inc
add
pop
inc
adc
ret
add
aas
popf
out
jp
dec
fwait
scas
pop
jbe,pn
sti
push
dec
daa
mov
xchg
jle
mov
cmpl
push
push
jmp
popa
sub
insl
adc
das
je
push
imull
test
jns
in
push
jns
out
lock
mov
push
mov
ret
jg
pushf
icebp
add
and
cli
jno
icebp
mov
sbb
loopne
pop
pushf
js
test
sti
adc
and
addb
int
xchg
fildl
shlb
inc
inc
or
stos
sbb
sub
xor
xchg
lods
nop
mov
cmp
xchg
xchg
pop
pop
push
mov
pop
fcomp
leave
dec
sub
lret
push
ss
mov
inc
xchg
adc
test
popf
or
imul
jl
sar
icebp
add
in
mov
fsub
mov
popf
roll
call
inc
testb
ss
or
out
popa
clc
xor
xchg
jbe
xchg
adc
mov
les
rolb
or
das
shll
xchg
movsb
push
sub
insb
outsb
mov
int
out
adc
adc
sub
dec
lea
pop
adcb
in
mov
jns
rcrl
jle
out
test
xor
dec
fmul
roll
sbb
sbb
mov
dec
sahf
adc
pop
out
add
xor
imul
fimull
jno
lods
arpl
daa
ficoms
repnz
fidivs
je
repz
sbbb
ljmp
mov
cmp
pop
gs
mov
and
dec
mov
add
push
ss
leave
sarl
mov
inc
push
out
mov
rolb
jmp
mov
push
std
xor
jecxz
sub
push
neg
push
cmp
or
dec
xor
sarl
subl
leave
test
data16
mov
cmpsb
std
iret
jl
mov
mov
mov
mov
push
cmpsl
cmc
xchg
jmp
dec
daa
mov
pop
xlat
pop
loopne
movsl
decb
push
xchg
cmpsb
xor
aas
adc
cmc
cmp
lcall
inc
mov
or
mov
push
fstps
movsl
jo
mov
cli
addr16
mov
jne
inc
mov
cmovne
scas
das
jge
aas
aad
js
add
mov
fstps
imul
mov
push
sbb
mov
scas
dec
xor
stos
mov
sub
in
inc
push
lahf
jecxz
mov
dec
leave
sahf
mov
push
cmpsb
jb
add
loope
or
xchg
jnp
int
dec
ret
jp
dec
jmp
sti
int
xor
in
lcall
fidivl
jns
xor
sahf
mov
dec
out
imul
cwtl
lock
test
lcall
test
push
adc
cmp
lds
sbb
xor
push
jae
rorl
sub
sarl
push
clc
jl
imul
in
sbb
xor
gs
arpl
mov
xchg
testb
mov
arpl
loope
aaa
cld
arpl
jb
jo
bound
dec
rolb
iret
or
bound
pop
in
stos
scas
mov
sbbb
mov
xor
xor
push
xor
jae
fcoml
popf
in
orb
out
jbe
jmp
lea
jg
mov
inc
sub
and
inc
fst
aas
push
scas
xchg
push
fiadds
lcall
xchg
fucom
mov
mov
shrl
sbb
rcll
xchg
repz
insl
mov
popf
mov
out
xor
mov
push
mov
jns
jecxz
inc
call
xor
xor
push
rolb
stos
sbb
xor
jg
push
and
or
push
xor
addr16
pop
mov
xchg
sub
jne
jp
ficompl
pop
adcb
int3
sbb
das
fistpll
jp
inc
daa
lods
sbb
imull
mov
cmp
cmpsl
movsl
inc
add
dec
scas
bound
dec
dec
push
inc
int
je
xchg
sbb
daa
jecxz
push
push
cwtl
add
insl
stc
sub
jge
xor
jnp
in
popf
dec
inc
cmp
stc
cld
les
inc
adc
adc
jecxz
cs
mov
test
fsubrp
int
test
test
push
addr16
nop
xor
jno
add
insl
adc
pop
popl
adc
and
fistpll
inc
je
rclb
push
push
pop
out
jno
inc
pop
mov
inc
les
sub
inc
push
cmp
imul
sti
lahf
mov
repnz
mov
mov
inc
test
out
mov
mov
mov
aam
adc
xchg
int
jb
test
push
and
stos
adc
clc
pop
dec
xchg
pop
xor
shlw
test
mov
jecxz
pusha
jle
mov
lods
dec
mov
or
int3
jg
scas
adc
cmp
mov
enter
loopne
pop
inc
or
pop
fcom
jbe
sbb
pop
insb
sbb
adc
dec
mov
and
mov
or
mov
mov
or
inc
cmpsl
adc
jb
sub
aaa
pop
dec
mov
addr16
inc
sub
test
in
or
fcompl
sbb
mulb
inc
testl
es
inc
mov
rcrb
mov
lahf
and
xlat
sbb
pop
xchg
cmp
or
das
inc
inc
adc
and
add
es
pop
jo
pop
mov
cmp
xor
test
inc
adc
cmp
shrb
push
fstps
lcall
or
pop
es
faddl
push
jno
lock
inc
stos
out
adc
pop
stc
pop
sbb
jb
adcb
jp
dec
aam
repnz
jb
repnz
cmp
jl
mov
icebp
inc
sub
enter
outsb
fisubrs
pushf
dec
mov
push
fbld
mov
mov
mov
add
pop
sbb
fs
outsl
inc
dec
jne
test
push
nop
insl
mov
das
dec
lret
xchg
jmp
mov
or
dec
dec
dec
or
cmp
sub
data16
lret
mov
stc
in
jns
mov
mov
jnp
fimull
idivl
mov
orl
in
sub
push
pop
dec
xchg
sub
aad
mov
ljmp
xchg
dec
rorl
mov
push
in
sub
cmp
icebp
pop
ljmp
xchg
push
push
xlat
test
pop
add
mov
testb
jnp
lods
jbe
scas
fidivl
ja
lea
fs
sub
test
adc
aas
dec
jmp
xchg
scas
jl
fldt
pop
jo
out
lahf
pop
adc
cmp
mov
aas
divl
int
xchg
and
fidivrl
inc
mov
adc
test
cmp
outsb
pop
cld
sub
movsl
or
aas
adc
mov
xchg
jo
push
movl
ret
enter
std
xchg
pop
mov
xchg
cmpl
cmp
lret
shrb
sbbl
xor
icebp
mov
fldl
sub
fwait
xor
cmp
and
add
push
dec
cmp
les
je
xchg
test
sub
rclb
mov
inc
in
push
xor
or
or
pop
mov
and
inc
jns
sub
adc
jae
xchg
jbe
enter
fwait
pushf
popa
into
outsb
je,pt
stos
sarb
jge
lds
jecxz
inc
mov
sub
push
je
mov
adc
cmp
call
lcall
mov
pushf
pop
sbb
sub
pop
pop
pusha
dec
jo
repz
gs
pop
push
sub
nop
aam
or
fisubs
dec
xor
sarb
and
inc
in
insb
dec
mov
lods
inc
mov
rolb
pop
fidivrs
int3
mov
bound
pop
pop
leave
push
or
stos
popf
xor
sub
and
ja
js
xchg
in
adc
mov
xor
dec
mov
fstl
push
aaa
and
fstpt
jmp
inc
ja
stos
xchg
cld
loope
stos
push
cltd
aam
jne
jne
pusha
and
adc
dec
adc
pop
add
push
xlat
sbb
lods
call
shlb
and
fdivr
xchg
test
lahf
js
rol
adc
stos
push
dec
xor
ret
pop
xchg
adc
pop
lods
add
jmp
daa
dec
push
testl
cmp
inc
jb
int3
aam
mov
jae
aad
cli
scas
pushf
xor
mov
mov
push
out
fldl
pusha
loop
inc
inc
push
sar
insl
sbbl
mov
movsl
ret
test
imul
add
mov
sbb
les
data16
aam
mov
jns
xor
outsb
mov
or
outsl
je
jno
data16
jge
sbb
cmc
sti
cli
push
ficoml
jno
test
adc
jne
mov
fisttps
sbb
sbb
mov
sbb
scas
push
ficomps
pop
mov
rclb
xor
xchg
pop
aas
frstor
xchg
inc
or
mov
out
ret
cmpsb
ret
rcll
pop
or
fsubr
push
inc
inc
gs
mov
lods
and
inc
pop
inc
push
xchg
sub
insb
loop
or
js
mov
lods
sbb
pop
xchg
aam
ret
push
aad
or
jecxz
daa
mov
jmp
mov
insb
jne
and
ss
xchg
lret
clc
fndisi(8087
add
in
dec
cwtl
sub
xor
and
pop
pop
iret
adc
out
xchg
and
jae
das
and
loop
xchg
lcall
test
mov
in
xchg
loopne
addr16
mov
out
push
mov
imul
ljmp
mov
cmc
lock
xchg
mov
insl
mov
mov
xor
clc
mov
jl
add
add
pop
xchg
inc
add
cmpsl
outsb
push
adc
aam
mov
jbe
xlat
lea
or
xor
mov
push
xor
cmp
cmp
or
xor
and
xor
mov
bnd
lahf
test
mov
cs
aaa
fldt
popa
inc
movsl
jno
stc
pop
scas
pop
cmp
or
dec
and
inc
xor
mov
add
mov
inc
das
add
xor
pop
gs
jge
int3
lret
jno
lret
push
cld
fcomps
out
sub
leave
mov
popa
mov
sbb
aam
mov
bound
mov
fcmovu
adc
in
jae
fs
addr16
loopne
adcl
and
jo
push
fldenv
cltd
aam
movsl
inc
stos
dec
popf
mov
ds
mov
mov
mov
outsl
lret
cmp
std
lods
sbb
aad
dec
pop
or
sbb
adc
inc
ja
mov
mov
test
les
jmp
sbb
test
scas
adc
add
adc
mov
ret
or
fucomip
lock
loopne
xor
cmpsb
sub
cld
dec
lahf
cld
sub
push
push
pop
add
aad
int3
sbb
mov
leave
mov
mov
ret
sbbb
and
cmp
aad
mov
sub
ja
lcall
mov
and
test
push
test
pop
or
push
insl
pop
in
mov
repz
push
dec
dec
mov
push
cmp
jp
xlat
adc
xor
stos
cs
lea
clc
jmp
add
fld
fs
ljmp
shrb
shlb
jge
aam
into
nop
in
jp
jno
mov
jne
inc
data16
dec
jbe
jge
int
scas
and
out
push
dec
mov
stos
push
aaa
out
int3
sub
arpl
cmc
adc
xor
int3
in
or
ffreep
mov
adc
lret
jo
xlat
xchg
and
lret
lahf
lods
in
mov
xchg
stos
insl
js
or
jno
stc
pop
push
cmp
inc
aaa
xor
mov
rol
cwtl
xor
push
cmp
adc
xor
imul
pop
cld
dec
testb
sub
cmp
cmp
das
cmp
cmp
es
sti
push
loopne
xor
mov
je
mov
push
ret
pop
and
int3
jo
fisubrs
out
fscale
or
jmp
shl
mov
inc
fistl
inc
aaa
push
daa
dec
cmpsl
inc
inc
adc
mov
mov
rcl
jae
fistl
mov
insl
mov
insl
xchg
mov
stos
test
or
call
aaa
adc
clc
mov
xchg
icebp
cld
andl
inc
push
notb
pop
lea
lock
scas
cs
aam
push
dec
pop
inc
test
sbb
sti
inc
adc
mov
inc
mov
adc
into
scas
push
mov
lret
xchg
dec
lods
ds
out
sti
jb
jne
std
imul
nop
inc
cli
shrl
std
add
mov
xchg
cmpsb
mov
mov
out
stos
dec
inc
xchg
test
ret
test
fdivr
and
arpl
add
int
mov
shll
push
add
mov
xor
jne
insb
shll
jle
xlat
fdivrs
xchg
test
sub
mov
cmp
cmp
mov
xchg
jmp
call
stc
loopne
dec
jns
sarl
mulb
lar
mov
arpl
cmp
mov
inc
sbbb
arpl
xchg
movb
in
xchg
sub
cmpsl
enter
jle
lds
inc
xchg
sub
mov
ljmp
push
cwtl
dec
dec
imul
xlat
rcrl
and
cmc
leave
jmp
add
loopne
daa
ja
sbb
or
or
out
das
cmp
or
adc
dec
inc
cli
or
add
filds
ja
adc
insl
xchg
adc
cmp
jns
mov
mov
imul
fsubl
xor
add
inc
shl
je
pop
jmp
mov
lcall
les
cwtl
jge
ljmp
mov
addr16
pop
popf
or
je
sbb
repnz
or
sbb
sub
mov
mov
dec
mov
push
cltd
xor
or
pop
jle
ljmp
jge
sti
cli
mov
cwtl
dec
inc
jbe
cwtl
push
sbb
clc
sahf
cmpb
movsb
dec
jbe
test
xchg
cs
aad
dec
inc
call
int
jo
xchg
fisubl
sub
mov
xchg
or
push
insb
push
cmp
fmuls
test
cmc
push
sahf
and
scas
mov
in
leave
inc
mov
pop
xchg
pop
jns
and
and
inc
mov
push
lea
xchg
xchg
xor
dec
adc
adc
inc
les
inc
lea
inc
xor
stos
outsb
jmp
ret
rcr
bound
pushf
cmp
sbb
repz
sub
rcrb
push
sti
and
cltd
fisubrs
in
ror
sarl
lds
aad
fucomi
test
mov
imul
hlt
pop
data16
imul
add
dec
mov
jns
repnz
into
or
inc
jl
ficoms
ss
mov
xor
bound
and
xchg
mov
lahf
out
ret
xor
xor
scas
in
mov
test
push
push
adc
jo
mov
xor
dec
dec
adc
into
add
xchg
xchg
or
sahf
sbb
jnp
fs
pop
cltd
shrl
pop
mov
or
cs
cmp
sub
lods
cld
movsb
mov
cmp
mov
mov
and
sbb
jp
cwtl
int
mov
lret
aam
lock
iret
js
pusha
push
in
mov
add
and
out
lods
outsb
pop
or
lods
pop
or
pop
and
arpl
jle
add
into
sub
pop
cmpsl
sbb
jl
fmuls
push
cmpsl
aad
ret
jmp
mov
jno
decl
hlt
ljmp
mov
push
push
aas
dec
call
add
in
outsl
mov
cmpsl
enter
jle
loop
les
lahf
adc
sub
and
cwtl
xchg
mov
subps
scas
jge
out
imul
cmpsl
leave
scas
mov
fs
testb
std
mov
aad
dec
sbb
pop
hlt
push
inc
pop
mov
jg
or
and
cmp
sbb
dec
outsl
adc
mov
imulb
xchg
cmc
inc
sbb
push
cltd
repz
ds
mov
sub
sti
inc
inc
sub
add
arpl
leave
dec
pop
int
outsl
cld
xor
mov
scas
shrb
movsl
arpl
loope
fdivrl
into
mov
out
aaa
pop
sbb
shrl
mov
aam
xor
push
ret
sub
aas
cld
loop
loopne
jg
cmc
outsl
sub
in
insb
mov
cwtl
fwait
decb
and
sbb
inc
in
push
mov
stos
add
cmpsb
xor
xchg
orl
loope
pop
rol
xor
push
call
pop
cmpsl
js
push
es
push
pop
fcmovu
xlat
out
sbb
subb
pop
jge
push
cmpsl
cld
jno
or
and
add
repz
es
cmp
inc
test
jl
xlat
and
sbb
das
imull
inc
nop
or
xlat
add
mov
xchg
xchg
push
daa
inc
pusha
mov
jp
scas
es
push
mov
jle
xor
push
std
repnz
subb
lds
push
test
adcl
ljmp
movb
sarl
add
scas
adc
xor
fcoms
mov
sub
mov
cmc
push
mov
pop
inc
nop
repnz
and
cwtl
mov
pop
rorb
mov
loopne
cltd
mov
mov
leave
rcl
scas
xor
ficomps
sbb
imul
mov
mov
mov
mov
fiaddl
pop
test
daa
and
nop
jl
adc
add
xchg
push
pop
out
fld
fcoms
nop
js
pop
adc
inc
pop
jg
mov
insb
jmp
icebp
dec
and
les
push
ret
xchg
cmp
dec
pop
dec
pop
add
stc
out
cmpsb
push
sahf
lods
fisttpll
pusha
adc
icebp
jecxz
sub
repz
fistpll
out
sub
mov
dec
pop
enter
xchg
es
loope
icebp
mov
mov
jp
adc
or
into
push
in
movsb
push
jge
nop
fs
mov
pcmpeqd
in
adcl
out
icebp
popf
out
scas
or
pushf
cmp
fnstsw
adc
imul
push
lret
inc
or
push
imul
pushf
dec
mov
sti
jp
xchg
pop
jo
dec
stc
jae
imul
out
mov
push
test
xlat
pop
push
pop
push
inc
add
fcompl
loopne
xor
lods
insl
sbb
popf
mov
inc
and
sbb
pop
filds
mov
adc
mov
xor
iret
jnp
into
lods
mul
imul
aad
xchg
jb
pop
or
ret
roll
jae
mov
mov
inc
test
std
jo
inc
insl
adcb
dec
or
jle
in
sbb
cmp
mov
xchg
mov
in
negb
add
cmp
mov
jns
insb
add
loope
sahf
cmp
scas
nop
in
out
sub
addr16
sbb
sbb
pop
mov
cmp
xorb
addr16
loopne
pop
push
xor
inc
or
add
sbb
test
repnz
lret
mov
sar
dec
pop
lds
sar
sbbb
test
push
adc
fists
add
dec
cmp
sub
mov
imull
pushf
push
dec
push
jns
data16
jo
or
adc
ja
mov
mov
mov
mov
jb
mov
mov
test
mov
mov
int3
enter
stos
ja
pop
mov
test
xchg
outsb
aad
ret
setp
lea
xchg
jg
pop
lock
lods
stos
out
mov
mov
rcll
push
push
mov
push
daa
sbb
fdivl
push
mov
vpshaq
imul
mov
mov
pushf
add
xchg
ret
add
test
mov
arpl
inc
lods
adcl
add
daa
shrl
loope
mov
cs
in
mov
jecxz
adc
fscale
mov
rol
xchg
xchg
xor
outsb
fildll
and
or
adc
push
xor
push
ret
sbb
out
pushf
mov
lret
push
mov
cmp
xchg
push
loop
pop
inc
test
xchg
adc
shl
and
push
jno
aas
push
out
mov
sbbb
imul
repz
lods
and
outsl
jg
insb
and
das
sarb
scas
and
xlat
jbe
mov
push
mov
xlat
pop
mov
and
push
lods
pop
leave
orb
test
ret
pop
repz
imul
out
push
stc
cltd
jb
mov
xchg
pop
mov
pop
repz
aam
xor
jae
pop
imull
xchg
pop
add
xchg
mov
loopne
jno
cmpl
jns
push
outsl
std
sub
push
in
js
sbb
cmp
fistpl
push
pushl
jl
adc
mov
push
xor
test
mov
push
les
xchg
pusha
mov
mov
mov
test
daa
nop
jmp
mov
mov
lret
mov
roll
cmp
outsl
mov
jnp
jp
aaa
in
mov
adc
adc
test
cltd
mov
pop
pop
dec
inc
pop
hlt
out
dec
je
ljmp
sbb
inc
jp
out
and
insb
sbb
sarl
ret
jns
add
rorl
int3
pop
jge
sahf
rcll
inc
pop
inc
adcw
dec
stc
ja
pop
jmp
mov
fsubs
int
add
mov
gs
call
movsb
popa
leave
adc
inc
lret
sbb
xchg
das
imul
iret
xor
fstpl
sub
dec
mov
pop
lret
jb
repz
lods
addb
xor
cld
mov
xchg
xchg
mov
xor
jbe
rorb
cmp
rorl
cmpsl
cmp
xchg
out
mov
mov
push
adcb
jb
and
inc
test
ret
xchg
or
xchg
lds
aam
jno
mov
and
addl
je
ret
lea
adcl
mov
xor
fsubs
bound
or
mov
and
mov
sarl
xchg
mov
and
jb
scas
ja
sbb
push
adc
sahf
push
fadds
fildl
sbbl
ja
push
mov
jnp
sti
call
jmp
inc
jns
loope
fmull
cmpsb
push
in
dec
inc
aas
loop
pop
addl
cs
stos
sub
bound
rclb
fwait
add
insb
adc
leave
dec
inc
inc
bound
adc
cmp
js
insb
jb
xlat
push
and
mov
iret
hlt
and
inc
rcll
push
and
inc
fsubs
mov
cmp
int3
rclb
fs
fcom
adc
mov
fldlg2
or
sbb
push
sbb
repz
loop
push
in
loop
lds
clc
jp
xchg
dec
daa
mov
dec
std
fwait
data16
pop
cmp
mov
rorb
jl
inc
sbb
cmpsb
jge
mov
push
and
jle
testl
jp
lahf
push
les
mov
push
imul
push
dec
icebp
ds
push
test
dec
cmp
mov
arpl
or
enter
mov
int
mov
cmp
pop
xchg
subl
xchg
popf
cltd
out
push
repz
outsb
shl
xor
pusha
xor
jecxz
stos
outsb
in
ret
dec
call
push
pop
cmc
jo
aam
cmc
ja
daa
jle
insl
inc
or
xchg
je
dec
cwtl
push
push
sub
add
mov
mov
jge
inc
xor
inc
mov
outsb
aam
mov
jecxz
mov
mov
xchg
scas
xor
fistpl
mov
or
push
or
cmpl
mov
jg
pop
cmpl
adc
pcmpgtb
push
aam
jae
data16
sub
scas
mov
test
bound
push
stc
inc
push
sbb
lods
pop
xchg
xor
jns
gs
pusha
mov
ds
mov
ror
sahf
icebp
js
outsb
cwtl
testb
aaa
bound
add
mov
movsl
sarb
movsb
add
add
xor
pop
icebp
popf
out
iret
scas
imul
fsubr
xchg
mov
inc
nop
aaa
js
mov
popa
test
lea
sahf
lods
xlat
inc
sar
xchg
adc
lret
mov
xor
adc
dec
imul
aaa
test
xchg
sti
sub
mov
call
push
and
test
in
mov
mov
ss
arpl
dec
scas
inc
or
push
pushl
pusha
sbb
xchg
xor
lret
xchg
sbb
push
insl
out
xchg
or
out
cmp
roll
adc
sbb
imul
xchg
test
test
rorb
xor
push
dec
jnp
or
mov
pop
sbb
sub
pop
and
dec
fadd
out
icebp
xor
dec
mov
scas
cld
out
sbb
xchg
les
ficomps
loope
xor
sbb
pop
cmp
mov
imull
int
jl
orl
push
jle
mov
mov
mov
push
stc
bound
cmp
insb
cli
mov
sbb
cmp
and
aam
jge
and
xlat
sbb
daa
inc
inc
mov
faddl
lods
add
xchg
mov
sub
lcall
aas
pushf
lea
cltd
test
fcmovbe
cmp
xlat
mov
aad
lds
cli
in
addr16
sub
shrl
pop
andl
push
sub
sarl
add
lahf
lret
mov
adc
push
and
xor
xor
ret
pop
repnz
jns
in
pop
xchg
es
jns
popa
ja
xor
pop
xor
inc
xor
pop
and
jbe
mov
ds
cmc
jg
jle
cs
cli
xor
mov
outsl
cmp
push
jne
pop
push
repz
cmpsl
push
jo
inc
lods
dec
das
sarb
cmc
or
inc
xor
lret
jno
ljmp
gs
mov
pop
mov
fdivl
jae
pop
lds
xchg
divl
xchg
fcomp
lcall
andl
imul
dec
inc
insb
pop
in
out
movsb
adc
jecxz
mov
cmp
and
mov
loop
into
jmp
aad
or
push
bound
scas
repnz
or
mov
dec
pop
adc
sub
adc
and
cmp
mov
mov
dec
faddl
adc
adcl
cltd
lcall
jns
or
rcrb
jl
pop
mov
push
daa
xorl
movsb
in
inc
or
ror
stc
loopne
mov
rorb
fwait
imul
mov
pop
mov
bound
sub
aad
and
lahf
mov
imul
mov
int3
cmpl
test
lods
sub
stos
inc
int3
cmp
xchg
mov
shrl
push
sbbb
mov
mov
add
jmp
std
je
mov
mov
out
mov
cmp
cmp
inc
mov
or
inc
jb
stos
insb
mov
rclb
loop
gs
fs
or
jno
jmp
rcl
testb
fisubs
outsb
sbb
fcomps
lret
pop
pusha
imul
int3
cmp
mov
out
and
in
scas
enter
lea
xchg
adc
adc
data16
pop
push
adc
mov
ret
sub
repnz
lret
jl
inc
fwait
xor
fnstcw
inc
jo
cld
daa
or
push
xchg
xchg
aam
test
xlat
inc
in
rcrb
mul
loop
cmpb
out
xchg
data16
xchg
mov
ljmp
push
mov
pushf
test
lods
xchg
sbb
mov
mov
sahf
imul
add
jg
imul
mov
mov
and
mov
mov
mov
mov
jl
jge
mov
sub
sbbb
jb
push
jg
outsl
add
xchg
sub
mov
and
and
push
and
push
add
push
pop
sub
imul
dec
and
stos
jg
lock
scas
pop
cmpsb
mov
faddl
leave
out
jmp
inc
jecxz
stc
or
imul
lret
sbb
pop
icebp
sarl
divl
cmp
add
fisttps
xor
orb
xchg
dec
outsl
inc
xchg
iret
sub
mov
popf
dec
add
decl
lods
xchg
pop
aaa
pop
sbb
sarl
add
call
popf
dec
ljmp
mov
xchg
dec
jl
xor
xor
insl
sbb
out
mov
pushf
xor
jno
in
inc
test
fistpl
xchg
test
cmp
sub
and
add
loopne
inc
and
jmp
mov
cltd
sub
adc
push
ljmp
scas
jle
ret
fst
enter
jmp
jbe
test
pop
lods
xor
jmp
je
arpl
jecxz
cmpsb
xrelease
jmp
arpl
test
sbb
add
mov
cmpb
push
adc
int3
cmc
bound
add
jb
scas
lret
jp
fst
lret
and
pcmpgtw
sbb
std
mov
mov
loopne
or
shlb
pop
in
add
ljmp
data16
pop
cmp
stc
leave
sbb
ss
jne
mov
aaa
mov
lea
push
cltd
xlat
push
sub
fwait
xor
inc
cmpsb
mov
iret
shl
mov
push
mov
inc
inc
dec
lea
dec
cmpsl
shrl
daa
dec
pop
stc
jb
push
cli
fsubrs
xchg
xchg
or
daa
push
or
movb
repz
xchg
sahf
cld
cld
popa
push
stos
sarl
pop
add
and
lock
orb
and
cmc
or
pushf
mov
jnp
xchg
xchg
mov
push
inc
inc
adc
mov
dec
test
dec
xor
cwtl
mov
xor
leave
ds
push
mov
or
inc
shll
mov
int3
mov
push
sbb
xor
cmpsb
pop
addr16
adc
inc
sbb
mov
jno
fidivrl
stos
cmp
inc
cmp
flds
neg
dec
aad
lret
js
pop
mov
repz
lahf
shlb
or
mov
mov
cmp
aaa
leave
daa
in
dec
fldl2e
xchg
or
in
test
lea
or
call
xor
inc
or
int
not
stos
inc
jmpw
mov
repz
enter
jb
scas
stos
icebp
mov
push
xor
lcall
jb
jne
jno
insl
push
rorb
lods
iret
cmp
xchg
ss
ljmp
sbb
in
push
fidivrl
repz
popa
inc
push
sub
imul
int
dec
sub
xor
jl
mov
out
fdiv
xchg
jmp
xchg
lds
aas
or
popa
push
repz
andl
out
les
and
ret
push
in
mov
mov
adc
sbb
lcall
lret
sub
mov
xor
inc
mov
xor
push
mov
xchg
loopne
lcall
out
loope
pop
out
scas
or
in
icebp
or
enter
scas
xor
and
cltd
fcoms
lds
dec
pop
xchg
mov
movsl
sar
in
cld
push
fidivs
adc
adc
mov
out
notb
xlat
aam
sub
cld
shlb
dec
sub
lret
inc
jecxz
sub
cli
repz
shrl
cmp
adc
jle
fwait
sbb
nop
adc
ret
xor
jo
ds
adc
dec
shrl
int3
dec
repz
or
les
ret
adc
cmp
stos
mov
add
sti
mov
xor
cvtps2pi
xchg
sbb
sub
jo
or
das
outsl
ds
sbb
xchg
pushf
in
stos
movsb
into
cmp
aas
in
scas
es
sbb
enter
cltd
out
rep
mov
dec
mov
adc
or
xchg
scas
cltd
mov
aad
dec
rcrb
adc
fs
pop
sub
rol
shlb
xor
mov
daa
rcrl
insb
out
ja
and
xchg
and
mov
shl
jae
orb
push
push
inc
push
stos
outsl
inc
cmp
popf
mov
cld
xchg
jge
pop
movsb
mov
inc
sar
cmpl
in
sub
movsb
push
push
mov
cmc
das
sbb
in
adc
adc
push
mov
rcrl
pop
mov
jp
out
orb
cmp
mov
ljmp
push
sti
stc
push
stos
or
or
push
mov
and
loopne
push
xchg
rolb
scas
lcall
jmp
sahf
sti
arpl
rolb
int
jmp
lods
add
icebp
or
daa
cmc
je
shll
adc
sbb
pop
test
sbb
or
pop
and
add
inc
stos
insl
pop
mov
dec
aaa
mov
push
xor
stc
jge
in
aad
fistps
movsl
repnz
dec
aad
xor
xchg
pop
jl
ss
sbb
bnd
sub
mov
imul
sbb
xchg
stos
jns
mov
rolb
mov
mov
sbbl
lcall
pop
aad
cmp
bound
adcl
add
or
mov
fcmovnu
sti
outsb
push
pop
sbb
lret
in
fistps
inc
lahf
push
jno
data16
lods
rcrb
cmp
xor
les
test
jb
movsb
push
in
sbb
test
nop
xchg
jl
test
das
loope
xchg
inc
adc
js
xor
testl
add
je
shrl
mov
sti
sub
iret
adcb
rcrl
xor
aad
xchg
dec
jge
repz
mov
or
stos
es
add
sub
push
mov
nop
adc
dec
lock
ror
repz
push
mov
shl
and
push
rcr
cli
push
lds
cmp
popa
pop
cli
pop
shrl
test
and
lock
sub
cmp
pop
push
mov
jbe
or
in
xchg
push
lods
outsl
sub
cmp
dec
mov
adc
mov
mov
pop
mov
xchg
js
clc
jo
mov
xlat
inc
mov
mov
shlb
imul
xchg
jbe
int3
add
xchg
cmp
rcrl
dec
mov
or
pop
cli
push
out
call
sarl
jl,pn
add
fwait
pop
ficoms
xchg
imul
aad
pop
adc
ret
fildl
sub
jecxz
mov
inc
out
and
jmp
add
dec
sbb
push
xchg
jg
stos
je
jo
push
insb
hlt
lret
test
mov
sub
cs
add
repnz
inc
adc
pop
mov
jne
shll
adc
push
add
fnclex
mov
sub
fs
js
lret
jge
sub
mov
sbb
out
ss
aad
les
movsb
mov
test
dec
mull
incl
scas
xor
leave
add
sbb
js
add
jno
xor
jne
incl
mov
cli
push
mov
sbb
push
fdivrp
pusha
outsl
sbb
mov
fadd
adc
into
jmp
mov
pop
jecxz
filds
je
test
push
mov
xor
int
cltd
sti
imul
push
and
cmp
push
repnz
cltd
mov
fwait
add
out
cmp
lods
xlat
and
push
lds
lcall
enter
test
mov
dec
les
scas
es
inc
notl
les
gs
call
sub
repnz
lahf
in
inc
sub
icebp
insl
fdivrl
icebp
gs
push
jmp
loope
out
lea
shll
and
enter
inc
std
fistl
jl
pop
imul
pushf
std
adc
mov
sbb
push
pop
fxch
iret
popa
or
dec
push
jo
adc
jo
jmp
xor
mov
dec
and
mov
stos
adc
clc
mov
movsl
jle
dec
push
cwtl
dec
adc
pop
insl
and
mov
shll
push
sbb
mov
xchg
shll
dec
inc
sub
int
add
xor
adc
xchg
jno
out
jns
stos
iret
add
xor
in
xchg
sub
dec
pushf
xor
xor
dec
and
out
xor
and
adc
push
test
inc
dec
das
sahf
inc
out
nop
mov
roll
push
mov
incb
adc
rcrb
addb
mov
xor
rclb
sbb
imul
int3
and
dec
push
mov
mov
lds
add
adc
test
cwtl
addb
imulb
shrb
sub
jecxz
push
das
fistpl
mov
inc
jo
loop
mov
dec
sub
into
int3
stos
xchg
shll
jle
push
sub
or
movl
aas
mov
cmp
adc
lods
xor
pusha
ljmp
in
adc
inc
sub
sub
pop
and
sub
and
je
aaa
outsl
stc
adc
adc
mov
pop
pop
ss
imul
and
loop
cmpl
mov
dec
sbb
or
inc
dec
jns,pt
pusha
aad
jp
dec
sahf
imul
and
repnz
adc
inc
inc
mov
pop
mov
pop
int3
je
inc
or
sbb
or
sbb
sbb
inc
out
cmpsb
mov
jns
inc
cmp
negl
pop
mov
inc
pop
mov
ficompl
leave
loop
loop
pop
out
or
or
orl
cli
push
cmp
pop
pop
dec
andb
rcll
notl
cmp
imul
sbb
cmp
cmp
and
imul
cmpsl
sbb
addl
aad
adc
xor
rcrl
fwait
subl
mov
jae
cmp
call
fdivs
sahf
mov
sub
lret
int
pop
fmul
push
adc
adc
sub
xor
cmpps
mov
and
lret
cmp
or
bound
fimuls
and
loope
arpl
pushf
xchg
sub
dec
frstor
jl
lods
sbb
in
xlat
gs
cli
repz
cmp
push
cmpsb
data16
mov
mov
je
push
push
xchg
leave
mov
mov
in
sub
mov
inc
ss
mov
add
int
dec
jge
adc
lock
xor
lahf
fs
aad
icebp
sub
sbb
into
aad
or
sbb
add
xor
xchg
pop
jno
push
pop
loopne
fs
and
loopne
xchg
fstp
dec
inc
out
ret
jge
or
lods
pop
sub
andl
and
shll
sub
dec
fildll
sub
movsl
and
xor
adc
lret
jle
into
mov
jns
stos
sub
hlt
gs
in
or
sbb
push
or
xor
imul
imul
mov
daa
insb
mov
nop
test
call
push
bound
sbb
mov
adc
sbb
ss
mov
dec
jecxz
add
inc
mov
sbb
int
out
repz
cs
cwtl
dec
inc
cmc
and
cmp
jmp
inc
cmp
inc
xor
pop
and
mov
jbe
aad
or
test
js
rcll
int3
andl
shrb
lds
test
xchg
adc
add
sub
dec
inc
xor
mov
lods
pop
mov
sub
outsb
sub
into
scas
push
arpl
scas
mov
pop
mov
test
sub
shrb
call
push
mov
scas
cmp
stos
sbb
fcomip
hlt
aaa
cmpsb
push
repz
adc
nop
ja
int3
insb
int3
jge
inc
jne
movsl
or
inc
mov
sbb
and
mov
xlat
aaa
dec
push
nop
ds
jmp
pushf
lahf
incb
shll
xchg
add
or
push
jae
and
insb
out
cmp
std
sub
push
and
andl
push
mov
xor
mov
mull
lea
dec
mov
rorb
or
jp
ljmp
adc
mov
pop
lret
mov
mov
cmp
jle
jmp
sbb
or
out
mov
enter
mov
in
sbb
sub
loope
xchg
aad
cmp
jb
jge
in
test
daa
adc
sbb
fisttpl
dec
pop
push
jp
shlb
jns
add
pop
jecxz
pop
fsubs
into
sub
inc
popa
and
dec
or
sub
lea
mov
aas
xchg
and
adc
mov
jns
mov
or
ja
ss
jmp
hlt
ds
push
jb
inc
xor
sbb
arpl
jp
sbb
cmp
adc
mov
jl
ret
lahf
sbb
shlb
or
cmc
mov
xchg
dec
mov
flds
iret
js
sbb
aas
hlt
subl
add
push
lods
xor
push
lods
cli
and
sti
xor
sbb
ljmp
loopne
mov
sar
mov
vpshufhw
int
xchg
or
xor
outsl
sbb
cltd
ds
scas
fisubl
jb
mov
add
mov
scas
repz
mov
cmc
or
push
cmp
pop
jns
xchg
in
cmp
pop
mov
sub
out
xor
xor
adc
inc
rcl
fdivl
inc
jmp
xlat
arpl
outsb
in
inc
out
pop
xchg
mov
jle
mov
sarb
roll
cmc
sub
hlt
outsl
cld
mov
jbe
and
lods
push
lea
xchg
mov
aas
fbld
sub
jne
sub
lahf
lock
outsl
ja
inc
ret
sub
loope
xchg
out
stos
js
js
lea
in
mov
roll
jno
loop
repz
fldenv
js
shll
or
in
lods
cmc
pop
scas
paddw
mov
mov
mov
mov
inc
push
pop
push
jmp
sbb
dec
adcl
add
sub
sub
leave
mov
jbe
lret
cltd
cmpsb
out
jp
pop
ja
jnp
pop
fcmovnb
out
loopne
test
push
pop
and
sub
push
mull
popa
mov
jg
mov
cmpl
rcrb
aad
dec
mov
adc
mov
movsb
sarl
add
adc
mov
mov
inc
dec
arpl
outsb
mov
lods
cwtl
out
inc
subl
sbb
ljmp
pop
cld
dec
pop
aas
pushf
fistps
in
test
push
or
mov
sbb
xchg
and
nop
pop
add
aaa
push
movl
jne
fcoms
mov
pop
pop
bound
jmp
pop
stos
cmp
ds
cmc
jb
mov
xlat
xchg
arpl
sbb
sub
xor
popa
xor
fldcw
sbb
aaa
movsb
out
and
xchg
ret
mov
pop
jmp
sbb
mov
mov
repz
rcl
enter
cmp
dec
pop
mov
popfw
sbb
push
mov
jle
out
out
loopne
out
lret
xor
lret
or
movsl
out
cs
fstps
sbb
mov
jp
or
push
loope
sub
or
dec
addr16
add
rcr
mov
test
icebp
push
sbb
push
lcall
sub
pop
jecxz
fucomip
cs
inc
mov
cli
test
sarb
fsub
ficoms
adc
in
pop
xchg
fisttpll
add
push
rcrl
leave
stos
adc
jecxz
pop
sbb
sbbl
sbb
pop
jbe
aad
ret
dec
mov
icebp
or
mov
imul
pop
jae
or
mov
push
lret
rol
fsubrs
fdiv
in
xor
sub
enter
cld
test
xor
sbb
fstps
inc
inc
pop
pop
inc
pop
adc
and
mov
fisttps
cmp
xor
xor
mov
inc
xchg
xchg
inc
sbb
loopne
call
mov
les
sbb
fwait
push
mov
jmp
jbe
lret
push
leave
mov
cmp
aam
es
fcoms
xchg
xchg
outsb
outsl
add
mov
test
out
test
loope
loope
sub
cmpsl
inc
popf
lret
mov
in
pop
mov
adc
ja
ret
or
pop
sbbl
dec
jbe
lahf
and
jp
mov
sub
pop
fwait
lcall
cli
sub
lea
adc
shll
lcall
dec
mov
mov
inc
out
shl
int3
add
jmp
adcb
ds
xchg
fdivr
push
pushl
and
cmpl
ds
push
pop
mov
and
test
mov
jmp
inc
notb
cmpsl
sbb
in
mov
push
jae
inc
mov
outsb
dec
sbb
in
jg
mov
xor
jl
mov
mov
xor
leave
xchg
and
pop
pop
add
sahf
loop
insl
addr16
push
nop
mov
push
lds
leave
icebp
or
sbb
xor
mov
fsubrl
movl
xchg
insb
jl
xor
xor
cmc
popa
cli
fs
xchg
adc
outsl
mov
xchg
imulb
daa
adc
sbb
fcoms
mov
cmp
fucomip
js
ss
fcoms
jno
repz
sahf
adc
test
mov
mov
movsl
jnp
pop
mov
mov
std
ds
inc
pushf
inc
and
imul
sbb
sbb
fnstenv
cmp
xorl
cmp
mull
dec
jb
jne
mov
push
sbb
or
cltd
std
lock
jl
loope
mov
into
dec
jg
add
or
add
in
mov
mov
mov
add
and
or
xchg
adc
dec
inc
or
mov
loop
pop
xor
les
lods
cmc
xor
es
add
out
call
cld
xchg
scas
mov
ret
sbb
add
push
leavew
mov
repz
sbb
mov
mov
mov
lcall
stos
fsubl
and
loopne
adc
out
out
jno
inc
clc
dec
pop
adc
add
pop
jge
sbb
lods
mov
dec
cwtl
add
mov
mov
je
jl
gs
out
xchg
sti
rcr
shrb
inc
jb
ret
fnstenv
mov
lock
pop
in
push
shll
jmp
lds
xchg
dec
dec
aam
xor
push
fwait
stos
call
mov
lea
dec
push
stos
cwtl
sbb
adc
cld
addl
xchg
aaa
mov
xchg
cwtl
cmp
push
dec
jo
cli
stos
fprem
pusha
inc
pop
dec
adc
dec
cmpsl
insl
stos
mov
inc
out
and
imul
jmp
aam
mov
test
and
jecxz
or
int3
mov
lret
or
outsb
test
adc
test
shll
dec
xchg
mov
scas
mov
lcall
or
in
dec
lret
xor
das
pusha
js,pt
adc
test
inc
sahf
out
lcall
ss
dec
jge
ficomps
and
jmp
cli
ja
xchg
push
in
mov
xor
and
mov
enter
scas
rcr
sub
loop
in
adc
mov
inc
mulb
mov
pop
imull
ror
cmpsl
xchg
test
push
insl
mov
fdiv
mov
lret
repnz
subb
or
lahf
push
adc
adc
pop
sbb
in
pop
pop
push
lods
mov
fisubs
dec
xchg
mov
adc
in
lcall
cmpsl
mov
lcall
ret
ja
or
mov
mov
mov
dec
ret
and
sbb
add
fmuls
jb
mov
push
loopne
pop
dec
sahf
add
xchg
lahf
arpl
jge
jg
test
scas
mov
lods
xchg
mov
pop
push
stos
gs
and
push
or
pop
add
sbb
push
js
xor
push
repz
test
andl
repnz
push
roll
jle
adc
xchg
push
jae
xchg
jns
test
jno
pusha
fs
push
xchg
icebp
test
xor
iret
dec
lds
and
fldt
jge
xchg
or
nop
push
cmp
orb
int
leave
fmul
enter
pop
arpl
dec
sub
in
je
cmc
sub
fisubrl
popf
divl
mov
shll
xchg
mov
negl
icebp
adc
cli
jecxz
and
mov
pop
dec
jne
dec
imul
bound
and
adc
rclb
cmp
xchg
sti
mov
mov
jae
cmc
test
mov
adc
jo
pushf
mov
jae
dec
pop
lock
jne
insl
lock
and
in
dec
push
adc
iret
xor
in
sub
pop
add
jge
les
add
fisubrs
mov
pop
in
add
dec
adc
pop
mov
in
inc
jbe
lds
popf
shlb
mov
xor
pop
mov
mov
or
xchg
cmpsl
arpl
pop
es
jmp
into
arpl
push
fmull
cvtps2pi
lock
sub
sub
pop
into
sub
jae
cld
add
mov
jno
neg
sbb
add
add
outsb
mov
dec
out
mov
out
mov
loop
cld
pop
lahf
pop
and
test
cmp
inc
shlb
push
out
lock
mov
inc
push
lret
push
daa
and
std
adc
xor
lret
cwtl
addr16
imul
movsl
addr16
pop
ret
jecxz
xor
or
or
pop
inc
mov
mov
ljmp
dec
jl
and
or
aaa
sbb
out
decb
test
xchg
inc
ret
aam
push
xchg
out
and
jne
rcr
cmp
mov
loope
mov
test
push
loop
rcrl
popf
jmp
mov
sub
xorl
sub
push
je
leave
mov
out
inc
add
arpl
dec
dec
add
xor
daa
pop
pop
xchg
in
or
lods
cs
mov
sub
and
ret
cmp
jecxz
pusha
cltd
add
jne
movsl
dec
jae
enter
xchg
jns
mov
filds
sub
mov
lcall
lods
pop
cmp
xchg
gs
cmpsb
fldcw
inc
stos
mov
sbb
pop
cli
in
jb
inc
xlat
movsl
push
outsb
sti
leave
jl
mov
xor
mov
push
inc
xchg
andl
mov
out
adc
jecxz
imul
dec
mov
pushf
add
cmc
rorb
icebp
sub
or
pop
mov
rcll
call
jns
rorl
sbb
xor
call
sub
ds
adc
push
and
mov
jno
jbe
mov
cmpsl
hlt
mov
shr
pop
test
xor
or
jno
lcall
cmp
push
outsb
int
push
and
fmull
or
adc
test
imul
or
mov
loope
mov
mov
lock
fildl
or
ss
sub
clc
test
scas
mov
aas
imul
ja
aam
out
mov
lock
in
lds
mov
mov
mov
and
sbb
int
jecxz
js
fistps
xchg
xchg
repnz
dec
loopne
int
dec
call
lods
mov
mov
pop
rorl
adc
xlat
jns
mov
lret
outsb
adcl
sub
movsb
inc
cmp
scas
stc
add
jns
sub
leave
xlat
out
lock
aas
mov
fldt
xor
daa
movsb
xor
lods
mov
add
cmp
xchg
pop
inc
in
sbb
push
mov
imul
xchg
loop
int
mov
sti
in
notl
add
aam
ja
lods
ja
jg
stos
cltd
hlt
add
fldt
pop
push
int3
ret
cwtl
scas
pop
sub
mov
ficoml
aas
fwait
pusha
jp
loopne
lret
adc
out
push
xchg
inc
and
lea
push
call
jbe
cmpsl
sahf
push
stos
jge
xor
das
outsb
test
cmp
adc
movsb
inc
adc
cmpsb
insl
daa
fs
sarb
cmp
addr16
jo
aam
jge
sbb
jmp
les
jg
jp
fdivrs
sub
adc
lods
adc
add
inc
popf
dec
mov
scas
jnp
xchg
mov
push
push
in
push
hlt
cld
dec
mov
adc
ja
ja
pop
rcrl
arpl
dec
pop
dec
lods
js
add
sti
or
in
mov
es
icebp
daa
and
sarb
into
pop
clc
dec
sahf
sub
sbb
lods
fs
push
hlt
xchg
push
mov
push
xchg
push
stc
cld
out
add
test
test
lcall
jl
bswap
adc
fstps
fdivrl
fstpl
jb
mov
xlat
js
lcall
out
push
popf
js
xchg
pop
div
sub
lahf
cmpsl
mov
mov
inc
xchg
imulb
adc
fs
cli
push
leave
in
jb
cmpsl
mov
dec
xchg
lods
imul
cmpsl
stos
ret
loopne
push
in
adc
mov
dec
mov
jae
roll
pop
inc
int
inc
jmp
pusha
lcall
gs
jne
aaa
cs
inc
sub
cmpsb
in
mov
mov
sbb
push
push
and
mov
add
adc
adc
jb
mov
sti
push
pop
sub
outsl
push
js
jb
sti
sub
dec
ret
leave
sahf
ret
mov
mov
mov
cmp
lret
loope
outsb
push
jg
pusha
sub
and
es
gs
dec
aas
sahf
mov
insl
mov
mov
sahf
adc
bnd
repnz
pop
test
xchg
ret
mov
mov
mov
cmp
out
fwait
mov
mov
xor
lods
out
dec
mov
cmp
rclb
mov
push
cmp
iret
test
mov
cwtl
pop
shlb
xchg
lock
ret
test
enter
dec
clc
sar
mov
mov
add
cmp
je
push
sub
andl
mov
cmpsb
jecxz
lcall
enter
mov
aam
jg
in
jle
std
subl
mov
pop
repnz
or
nop
repz
cmpsl
jns
cmp
psllw
sub
add
inc
mov
push
pusha
lcall
push
jp
xor
adc
fnstenv
sub
popa
xchg
and
ret
xchg
cmpsb
out
jg
pop
test
test
es
scas
faddl
test
loop
fs
ja
arpl
repz
sbb
nop
loopne
bound
dec
pop
push
cwtl
pop
and
std
push
sbb
dec
test
xchg
cmp
add
push
ret
add
mov
sti
mov
cmp
add
in
jno
pop
xchg
push
mov
pop
lcall
es
je
xlat
ljmp
or
sbb
out
add
push
nop
inc
ja
jns
lods
inc
insb
xor
shrb
shrb
xor
stos
adc
in
push
xor
into
inc
push
incl
cwtl
out
lock
xchg
xchg
das
into
inc
or
fcmovu
mov
push
mulb
sbb
rol
dec
mov
mov
divl
jb
push
cmp
out
in
lahf
stc
adc
sbb
xor
xchg
pop
sbb
add
inc
xchg
dec
insb
pop
pop
jbe
or
jecxz
pop
out
jo
inc
or
pushf
mov
dec
pop
pop
in
jge
xchg
or
lea
ljmp
mov
icebp
pop
mov
pop
shr
sub
cwtl
mov
pop
xor
sub
push
test
cs
add
sbb
pop
ds
cwtl
adc
xor
cld
in
sub
xor
movsb
jmp
jne
clc
andb
rolb
cmp
cld
cmp
mov
movsl
in
push
cmp
push
adc
lods
mov
jl
xor
jecxz
cmpsb
mov
scas
outsb
iret
and
push
push
shl
fadd
mov
mov
in
roll
pop
aaa
ljmp
int
and
hlt
or
cli
cmp
fsts
dec
sbb
cld
negb
xor
leave
mov
loope
dec
cld
push
ret
cmc
sbb
call
push
andb
roll
mov
mov
int
push
push
pop
mov
hlt
adc
dec
test
sub
or
sbb
sbb
jnp
std
rclb
sub
fldl
dec
and
inc
cmp
mov
leave
mov
mov
in
aas
cmpsb
xor
test
dec
mov
add
xlat
jae
sub
push
gs
cmp
lret
bound
jnp,pt
cwtl
inc
rdmsr
scas
add
ds
fstpt
and
sbb
ret
into
pop
inc
cmp
cmc
sub
subl
cmpsl
lea
js
movsb
mov
xorb
and
cltd
or
sbb
xlat
cmp
jne
and
repz
sub
push
repz
sub
lret
push
inc
inc
ret
mov
inc
pop
nop
lret
js
sub
dec
sbb
addr16
add
test
ror
jno
add
mov
in
jge
pop
push
int
call
inc
mov
jns
fisttpll
ret
leave
push
stos
stos
movsl
mov
nop
adc
cmpsl
xor
jecxz
inc
mov
cmpsb
jae
cmp
fs
enter
xor
inc
sub
cs
jmp
sarl
mov
jecxz
push
cld
out
mov
int
push
les
mov
push
sub
das
jmp
push
sub
test
and
pop
int3
mov
scas
jp
ja
pop
sbb
pusha
adc
sbb
pop
fcompl
adc
jno
pop
jns
mov
mov
mov
gs
imul
fs
cli
fmull
pop
mov
xchg
cmpsb
fcoms
in
push
jl
xchg
jb
pushl
jle
aaa
dec
cmp
push
adc
inc
and
inc
stc
test
cmp
outsl
add
mul
mov
repnz
mov
dec
add
inc
mov
and
sbb
mov
je
es
gs
inc
add
loop
cmp
add
mov
js
mov
arpl
daa
xor
gs
ljmp
dec
in
dec
rcll
mov
cmp
fsts
xor
jecxz
adc
pushf
jp
cs
xor
ret
pop
jb
clc
sub
or
sub
jno
sub
rorb
and
lods
cltd
xchg
add
pop
dec
fnstenv
cwtl
divb
cmp
mov
bswap
out
mov
push
pop
pusha
push
ljmp
or
cmp
pop
xchg
and
push
push
fcompl
mov
and
cmp
in
lcall
gs
pop
sbb
mov
push
mov
out
push
pop
adc
mov
sub
mov
test
fcmovbe
test
out
in
inc
in
out
xor
std
sub
adc
mov
mov
cmp
and
lea
icebp
jecxz
cli
xchg
jae
mov
mov
push
outsb
out
ljmp
sub
aas
mov
xchg
in
sbb
fldl
dec
ljmp
in
loopne
pop
mov
push
loope
cltd
cmp
mov
add
pop
jno
inc
mov
dec
movsb
pop
rorl
test
iret
sbb
mov
jne
shl
or
adc
sub
sbb
mul
popa
enter
mov
aam
xchg
repz
in
pop
sbbl
rcrb
fcoml
sub
pusha
and
clc
ja
cmpl
mov
loopne
mov
inc
repnz
or
je
out
shrl
sbb
mov
iret
std
hlt
lcall
cmp
cmp
arpl
or
cwtl
andl
jecxz
fsub
add
xchg
iret
loopne
js
pop
mov
iret
push
push
xor
mov
call
out
and
sar
ljmp
adc
mov
call
cmc
adc
pop
mov
mov
fdiv
pop
scas
mov
xor
cwtl
insb
and
mov
jne
add
xchg
mov
mov
in
test
scas
pop
ret
movsl
rorb
out
mov
pop
pop
stos
mov
pop
inc
frstpm(287
call
mov
and
stc
sarb
cs
cmp
mov
movb
or
mov
sbbb
std
push
enter
push
sbbb
fidivs
pusha
scas
rorl
gs
rol
movsl
js
mov
jp
push
mov
add
lahf
pop
ljmp
inc
jp
aas
inc
inc
push
int
sahf
stos
jns,pn
outsb
adc
lcall
push
rcl
or
pop
xchg
xor
mov
xor
mov
stc
push
push
fcmovu
out
push
sti
rcrb
jg
aam
stos
or
sbb
fiadds
out
lods
jp
mov
fdivrl
jne
cltd
clc
pop
add
stos
push
dec
mov
imul
mov
mov
sarb
and
jecxz
das
xor
mov
outsb
and
inc
ja
or
adcb
outsb
jle
ljmp
fsub
dec
fistpll
in
jae
outsl
push
pusha
inc
test
sub
push
sarl
and
lods
scas
scas
sti
sub
dec
cmpsb
and
subb
xchg
pop
movsl
cmp
or
lcall
mov
add
adc
inc
mov
jb,pt
mov
mov
ljmp
adc
cmpsl
pushf
xor
cmp
outsl
in
pop
pop
in
ds
ret
das
jns
stos
fucompp
ss
push
lret
loop
inc
test
ds
mov
and
jbe
add
inc
jb
cltd
clc
xchg
jmp
sbb
adc
outsb
movsl
sub
movsl
test
faddl
sbb
imull
inc
aad
adc
mov
sub
or
pop
popl
xchg
push
andl
fisubs
push
jnp,pn
negb
scas
arpl
out
xlat
xor
mov
mov
js
fldenv
push
leave
and
rcll
xchg
xchg
stos
sbb
dec
repz
xchg
clc
repz
lret
pop
cmp
ja
jno
sbb
mov
xchg
pop
inc
repz
inc
aas
pop
or
push
loop
xlat
cld
sbb
dec
jnp
fucomi
mov
pushl
lret
lea
mov
loopne
jnp
f2xm1
xchg
or
mov
subb
fs
in
stc
pop
jb
dec
mov
insl
lock
out
pop
pop
fistl
mov
add
data16
out
cmpsb
mov
pop
pop
testb
inc
pop
xchg
in
xchg
mov
popf
mov
es
outsb
movsl
cmp
mov
sarl
es
std
popf
cmp
dec
dec
adc
int
cli
std
mov
idivl
xlat
add
lds
in
in
and
sub
imul
xorl
xor
adc
inc
or
jle
xor
fistps
cmpl
lret
lcall
add
pop
xchg
xchg
imul
roll
inc
imul
pop
jge
sbb
pop
sahf
pop
repnz
in
sub
inc
xchg
lret
cmp
lock
xor
dec
sub
gs
sti
addb
adc
add
mov
and
incb
adc
sbb
sbb
stos
lods
fstl
mov
sbb
out
lea
mov
loopne
add
adc
and
movsl
xchg
mov
jg
fcmovb
fwait
mov
fwait
or
push
loope
test
xchg
nop
push
scas
rorl
pop
adcl
imul
cmpsb
lcall
xchg
pusha
neg
sub
mov
pop
cli
xchg
aad
insb
xchg
sbb
out
mov
cmp
shr
mov
mov
dec
mov
sti
cmp
stos
dec
dec
xor
inc
mov
pop
xchg
ja
ficompl
jne
stos
loope
inc
imul
int
xor
hlt
sbb
rorl
int
in
sub
sbb
mov
push
fnstcw
push
inc
popf
ja
scas
add
insb
jae
jno
pop
jns
inc
pop
cwtl
sbb
stos
jo
adc
icebp
push
jecxz
pop
pop
push
and
ljmp
cmp
sbb
lods
icebp
adc
xchg
inc
add
push
push
sahf
addr16
cmp
xchg
cmp
popf
mov
push
icebp
push
int
movsb
bound
ror
inc
mov
pop
scas
push
xor
lock
inc
out
mov
push
enter
cmp
int3
imul
adc
pop
cmpsb
fsubr
add
clc
sti
mov
adc
jle
rorl
add
sub
insl
pop
mov
xchg
jecxz
mov
jmp
add
aad
lds
shl
add
or
add
jp
lfs
add
mov
repnz
cltd
xor
aad
adc
ljmp
mov
push
gs
and
mov
rolb
xchg
movsb
adc
aas
repz
jae
std
cmpsb
in
std
pop
cmp
add
sub
adc
cwtl
fldcw
pushf
or
test
inc
sti
jb
and
movsb
push
sbb
and
mov
aam
insb
pop
stc
add
pop
sub
push
sbb
and
jns
jg
imul
and
sbb
mov
sar
mov
or
push
pop
test
add
dec
sti
daa
fimull
icebp
inc
xchg
jne
scas
rcrb
cmp
sub
sbb
or
test
mov
and
scas
shll
mul
dec
and
xchg
sarl
out
lcall
cmp
ja
xchg
or
sub
popf
loope
mov
pop
xor
in
clc
or
cmp
xorb
daa
in
cs
mov
fnsave
push
pop
cmp
sahf
imul
in
cmp
mov
sahf
mov
shl
pop
call
mov
dec
ds
scas
mov
bound
inc
pop
push
mov
jno
aad
add
mov
push
sti
sahf
lahf
jmp
imul
mov
lcall
fstpt
push
sbb
enter
cli
mov
mov
aad
sub
cmp
jb
leave
add
mov
nop
lret
fs
push
fnstsw
nop
push
nop
push
fsubrl
push
sbb
stc
cmpsl
mov
inc
mov
inc
lahf
jbe
mov
mov
in
movsb
outsb
xchg
or
add
jae
fnstenv
sub
insb
sti
pop
pop
or
lods
sub
pop
ret
mov
mov
outsb
pop
lahf
jb
mov
cmp
std
loope
sub
repz
add
jmp
cmp
pop
jno
ss
cwtl
imul
ss
clc
out
sub
dec
jno
aam
pop
pop
rcrb
popa
shll
inc
sbb
mov
or
push
test
pop
in
jbe
cwtl
jle
mov
sub
jecxz
sahf
pop
stos
mov
inc
cmp
xchg
outsl
lret
dec
cmc
push
xchg
in
fstp
adcb
push
mov
pop
shrd
into
and
and
xchg
cmpsb
je
add
xchg
cld
and
and
jmp
push
xor
xor
xchg
cmp
cmp
les
jnp
stos
nop
mov
imul
xlat
test
gs
stc
jnp
jno
icebp
dec
mov
and
adc
clc
adc
lock
data16
mov
mov
push
cmp
xlat
jbe
mov
sub
adc
jp
pushf
ds
adc
fidivrs
in
mov
iret
das
dec
jle
ret
bound
sti
ds
sbbb
and
repz
iret
dec
lret
xrelease
sarl
inc
cmp
in
adc
inc
add
outsb
int3
jns
insl
pushf
mov
fidivrs
popf
test
mov
nop
call
jl
push
push
data16
in
pop
mov
ficompl
jecxz
jb
enter
push
sbb
bound
andl
sahf
fmuls
pop
or
sti
popa
and
inc
adc
mov
xchg
out
mov
fwait
lods
cmpsb
lcall
mov
insb
movsb
add
aad
stos
xor
sub
daa
xor
mov
and
xor
push
outsb
xchg
in
fldt
mov
loope
xchg
and
jae
xchg
cmpl
mov
sarb
adc
mov
push
mov
mov
pop
dec
cs
sbb
out
das
inc
cwtl
cli
in
and
js
out
iret
aas
cmp
gs
ds
test
out
push
sbb
pop
jge
or
in
les
cld
add
mov
mov
push
imul
lret
jns
gs
out
add
shr
pop
mov
adc
ja
pop
mov
cmp
dec
nop
jmp
fwait
mov
and
jmp
xchg
shll
scas
shrl
daa
imul
faddl
and
and
repnz
pop
outsl
push
and
mov
xchg
int3
in
fidivs
xor
dec
lea
stos
jo
jge
mov
push
addr16
cld
add
mov
or
subl
push
scas
mov
xor
insl
mov
dec
mov
popa
xchg
cwtl
es
mov
mov
sbb
or
js
push
xchg
cmp
adc
fists
ret
mov
jnp
sahf
dec
testb
push
mov
stos
add
out
dec
jecxz
out
jne
mov
mov
out
ret
pop
inc
clc
aas
adc
jo
call
jmp
cmpsl
aaa
xor
enter
decb
mov
mov
or
in
js
push
imul
imul
ja
cmp
xor
jg
bound
gs
cmp
cmpb
sti
loopne
fcoml
mov
clc
inc
or
cli
popa
xor
pop
inc
in
dec
mov
jb
push
lret
test
loop
popa
int
pop
and
shl
dec
popa
sbb
mov
sub
aas
in
sbb
cmp
dec
mov
pusha
add
mov
aad
jb
xchg
clc
adc
into
dec
mov
add
in
je
cwtl
pop
in
aaa
pop
push
lret
addr16
jp
add
decl
add
add
adc
incb
jb
movsl
jle
jne
xchg
inc
jns
pop
jecxz
addr16
es
dec
shl
in
ficomps
movb
rcrb
sti
mov
jg
pop
in
cmp
ja
insl
dec
cmpsl
dec
xor
loope
xchg
xor
mov
cmp
icebp
and
xchg
aad
push
bound
sbb
scas
pop
push
mov
push
sub
xchg
hlt
xor
lret
push
test
mov
outsl
shll
repz
jno
cli
or
scas
mov
lods
mov
fistps
and
js
xor
inc
leave
repnz
push
cmp
xor
or
dec
rorb
mov
clc
and
pop
cmc
push
call
cmp
loope
pop
nop
popl
movq
gs
rol
sub
int3
mov
mov
fucomp
repz
popa
cli
movsl
cltd
repnz
jl
mov
fs
sar
dec
mov
jg
add
mov
or
sahf
lds
mov
xchg
ret
cli
lea
jp
adc
lods
icebp
add
xchg
mov
popf
leave
jnp
mov
lret
and
push
sarl
sub
test
mov
ror
negb
cmpb
sub
push
add
pop
in
mov
pop
or
sbb
dec
fisttpll
jp
aaa
pop
xchg
ja
std
pushf
dec
idiv
lods
push
fsubl
or
das
mov
mov
jne
sub
cmp
mov
xchg
gs
pop
repz
add
mov
mov
mov
cmp
xchg
jno
cmp
push
dec
rcrl
cs
add
push
and
movsl
sbb
imul
dec
cmp
fistl
push
call
sbb
inc
or
stos
jno
mov
imul
sbb
mov
mov
loopne,pt
sti
dec
inc
fbstp
pusha
sti
sbb
mov
pop
mov
test
dec
jae
decb
fisubs
mov
fwait
xchg
ja
fstpt
fs
aas
mov
icebp
ss
or
sahf
sub
fs
in
mov
cmc
sub
or
sbb
gs
outsb
mov
or
sbb
loopne
xor
ss
inc
dec
xor
jae
stos
pop
cmp
das
subl
dec
daa
push
mov
xchg
lock
xchg
add
jg
push
std
gs
jle
xor
stos
outsl
pop
push
inc
cld
insl
and
or
pop
xchg
sub
pop
arpl
dec
sub
aad
jne
or
in
xchg
adc
hlt
ficomps
fnsave
sub
xor
pusha
and
sarl
sub
sar
in
and
pusha
mov
xchg
fmulp
aam
mov
mov
fadd
push
jne
icebp
ljmp
out
mov
sub
add
push
mov
bound
push
xchg
test
inc
xchg
lods
xor
mov
fldt
adc
incb
icebp
ds
js
rclb
outsb
or
test
punpckhbw
mov
push
cmp
pop
cmovns
push
mov
cmp
jae
les
sub
imul
call
aam
insl
push
mov
data16
jecxz
push
jae
pop
pop
inc
mov
out
adc
add
ror
cmpsl
icebp
sub
mov
rol
aas
adc
cmp
jp
rcll
xchg
out
sub
and
mov
into
adc
add
adc
pop
mov
push
mov
ret
adc
lret
push
dec
push
xor
mov
xor
mov
out
call
inc
pop
stc
cli
mov
das
jnp
cmp
xchg
xor
clc
mov
gs
and
in
insb
out
mov
incl
ret
xor
cmpsl
xchg
push
mov
jecxz
iret
fdivrl
mov
xlat
mov
out
cmpsl
loop
rorl
sbb
lret
jns
pop
aas
movsl
test
pushf
int
cld
movsb
xor
movsl
or
pop
fstl
mov
pop
xor
or
cwtl
in
cli
jbe
out
dec
mov
jns
xchg
jmp
cmp
sub
jo
ss
sub
cmp
mov
fbld
dec
addr16
fnstenv
xlat
cld
out
or
pop
mov
xor
xor
mov
jbe
xchg
lret
fwait
jne
xor
dec
inc
mov
test
sahf
stos
mov
or
push
dec
jnp
sbb
pop
sub
gs
iret
adc
popa
sti
ja
jg
push
cmp
test
test
fnsave
loop
stc
ss
cmpsl
aam
jnp
popf
popf
sbb
mov
mov
pusha
xor
push
icebp
add
mov
idiv
mov
ljmp
adcb
pop
adc
dec
cmp
cmp
repz
xchg
nop
adc
mov
addl
adc
sub
adc
dec
aaa
imul
sub
cmp
outsl
int3
xchg
sbb
push
mov
add
shlb
ret
sbbl
inc
shlb
dec
fbstp
push
mov
lret
push
mov
pop
out
cmp
xlat
dec
fnstsw
sbb
stos
popa
and
xchg
rol
pushf
jl
mov
sub
adc
mov
ja
jg
hlt
lods
inc
pusha
flds
sub
fs
arpl
repnz
out
cmp
fsubl
repz
repnz
out
mov
sub
lods
pop
adc
jno
mov
push
jne
xchg
sub
sbb
mov
ja
push
xchg
push
or
stc
inc
mov
pop
mov
jb
mov
mov
mov
push
push
or
dec
push
push
pop
add
cli
stos
cbtw
cs
cmp
rcrl
cwtl
aas
adc
cmpsl
add
mov
jbe
les
lea
imul
and
mov
and
cmp
int3
dec
je
out
or
and
add
arpl
adc
aaa
sub
mov
notl
in
push
add
cmpsl
fwait
shlb
push
dec
sbb
dec
add
or
xchg
sub
mov
lret
loop
dec
insb
cmovae
pop
adc
jnp
cmp
mov
fcompl
jg
mov
shrb
mov
jae
sar
cmp
sar
mov
out
sub
je
lahf
fwait
lcall
mov
fsts
xchg
or
pop
xor
xorl
jg
pop
jl
pop
sbb
lahf
push
loope
fidivrs
repz
add
dec
cmpl
or
cmpsl
jmp
and
lock
dec
sbbl
shll
add
insl
scas
adc
mov
jae
dec
lds
lcall
inc
jl
sub
pop
jle
jns
push
inc
cmp
cmp
jp
pop
dec
in
push
shll
ja
push
add
pop
jmp
je
loop
mov
repnz
mov
mov
sbb
jbe
or
pop
push
or
xchg
push
mov
lods
cmp
std
xor
xchg
push
rorb
lret
popa
jl
int
inc
fbld
mov
aaa
xchg
aam
mov
ss
adc
push
cmpsb
stos
push
adc
xchg
stos
ret
repnz
test
sbb
xlat
adc
fmul
pop
push
adc
mov
push
test
mov
xchg
mov
sbb
dec
lea
cmpsb
loop
sbb
int3
mov
xor
mov
or
shl
lahf
adc
dec
mov
and
xchg
adc
mov
movsl
stos
lahf
dec
out
imul
mov
sub
ds
jnp
lods
popf
mov
xor
add
into
in
dec
pop
jge
int
mov
sub
jb
push
add
mov
outsl
xchg
scas
sbb
adcl
outsb
lods
mov
cmp
xchg
mov
mov
jmp
mov
lock
pop
inc
icebp
je
dec
arpl
xchg
fisttps
mov
movsb
pop
pop
pop
in
push
pop
push
es
sahf
and
outsb
inc
fcmove
loope
insb
inc
jl
inc
jl
or
gs
popf
test
or
test
push
data16
cmp
push
adc
pop
adc
ja
dec
mov
xor
not
xlat
test
push
mov
ss
ja
add
sbb
mov
nop
push
sbb
imul
jge
push
stc
mov
pushf
xchg
hlt
sub
mov
pop
cmpsl
xchg
fistl
push
out
push
mov
mov
fidivs
adc
inc
rcll
loop
jge
mov
add
repnz
mov
or
decb
add
fldcw
cmpsl
cmp
cmpsb
mov
jns
mov
mov
aam
push
shlb
dec
les
shlb
push
ljmp
data16
xchg
lret
cmp
cmp
xchg
idiv
cs
cmpl
sbb
outsb
add
jo
add
jae
gs
jo
mov
ret
scas
push
dec
mov
in
inc
icebp
adc
cmpsb
mov
insb
shll
in
mov
pop
pushf
stos
stos
loop
nop
ja
xchg
out
imul
test
jmp
loope
jmp
mov
mov
mov
xchg
out
inc
dec
push
pusha
outsb
push
sbb
mov
mov
rcrb
mov
lea
and
rol
movsl
xchg
cltd
movsl
dec
jg
loope
outsb
lds
and
movsb
jmp
dec
jmp
and
inc
bound
clc
xor
shrb
out
and
btc
add
test
fstpt
out
pop
stos
into
or
out
das
dec
stos
mov
and
sbb
insl
ror
int3
xor
fisubrs
lods
xor
cmp
sub
push
xor
jb
xor
out
add
js
insl
inc
jae
inc
std
push
mov
inc
inc
push
stos
std
js
dec
clc
cmp
jne
cmp
and
in
iret
shlb
adc
outsb
inc
insl
fdivs
or
dec
push
xchg
aaa
pop
out
xchg
xchg
or
adc
cmpsb
jmp
shl
pushf
jl
mov
test
adc
inc
test
push
cmp
jno
mov
lods
push
push
cmpb
dec
jle
jge
mov
or
faddl
inc
jne
and
xchg
orl
mov
loope
fadds
and
push
mov
mov
cmpsb
sub
das
mov
pushf
mov
inc
mov
xor
pop
xchg
aaa
push
fs
js
daa
jg
testb
mov
push
roll
adc
pusha
xor
xor
rcl
xor
out
mov
lret
mov
jmp
test
outsl
cld
jle
or
fisubs
add
aas
push
or
insb
and
les
mov
mov
rcr
sbb
lcall
lahf
lock
push
sbb
leave
cmp
sahf
xor
pop
sub
cmp
push
xlat
xor
outsb
mov
bound
sbbl
movsl
dec
mov
nop
repnz
divl
xchg
xor
mov
daa
sahf
push
jp
out
sub
jns
mov
or
fcom
popa
xor
mov
in
mov
pusha
add
cmc
je
shl
cmp
stc
push
jmp
repz
int
mov
mov
push
rorl
movb
lock
lds
notl
pop
sahf
int3
pop
fs
dec
push
repnz
test
or
out
pop
addr16
jg
inc
cld
mov
push
fmul
jae
or
jbe
or
test
mov
stc
xchg
pop
jno
lahf
push
fstpl
cwtl
inc
test
fs
jmp
sti
aaa
mov
in
hlt
jle
stos
inc
sarb
rcr
adc
out
enter
repnz
adc
lods
and
sti
sbb
pop
repnz
mov
mov
pop
out
sar
cltd
xchg
dec
lods
mov
pushf
cmp
cltd
sub
xor
jmp
mov
arpl
jns
lds
es
dec
test
push
arpl
add
pop
or
push
xlat
and
push
fsubrs
xchg
dec
mov
mov
push
cs
data16
push
cmp
or
ret
xchg
scas
lods
in
repnz
xor
lcall
dec
ds
xchg
xchg
sbb
test
or
and
mov
push
jmp
inc
add
and
push
adc
push
sub
cmp
fidivrl
popf
insl
inc
pop
cmp
dec
push
push
rorb
adc
insl
dec
hlt
push
lods
sbb
movsl
mov
adc
mov
xchg
movsb
lock
sarb
into
and
inc
mov
mov
xchg
cwtl
and
push
icebp
out
repz
dec
jb
pop
cld
imul
data16
push
inc
pushf
and
bnd
das
mov
jnp
lea
sub
add
lods
xor
push
std
lock
push
daa
pop
stos
mov
mov
jecxz
jno
jae
fcomi
push
xchg
and
dec
dec
adc
icebp
addb
or
pushf
rol
inc
je
sahf
fldl
and
jbe
mov
inc
insl
sbb
add
sbb
inc
dec
cmp
ret
jp
shl
fbstp
push
jmp
gs
jo
xor
or
jnp
lcall
iret
push
in
ljmp
in
pop
mov
sbb
fwait
pop
aas
pop
xchg
and
lret
xor
adc
jle
sub
xor
int3
pop
jge
sahf
cmp
jo
enter
push
addr16
daa
aam
mov
lret
test
outsb
push
pop
pop
loop
loope
and
movsl
fimull
mov
push
or
lcall
jo
imul
rorl
jmp
push
in
je
push
adc
outsl
in
insl
jno
fcoml
hlt
pushf
ret
adc
mov
push
and
int3
leave
jg
fiadds
sarl
push
jl
notb
mov
mov
cmp
aad
aad
mov
rorl
adc
cmp
int
fistpl
cwtl
insl
lret
jbe
jmp
add
jo
nop
mov
cmc
es
sub
cmp
add
sbb
call
movsl
and
into
bound
sub
in
outsl
fidivl
pop
xchg
stos
sbb
ret
xchg
fmuls
push
outsl
popa
cmp
inc
or
push
int
sub
sub
add
xchg
les
inc
inc
adc
sub
inc
sbb
dec
mov
jno
push
stc
out
sbb
imul
rorb
arpl
loope
jnp
stos
movsl
fldl
arpl
popa
test
push
lds
jp
jne
lahf
or
mov
dec
push
or
fistl
inc
aas
jg
fisubs
enter
incl
or
ljmp
mov
bound
sbb
mov
data16
cmp
add
or
mov
fucomi
imull
lret
jnp
push
jge
inc
xchg
imul
rcrb
sub
push
mov
scas
cmp
lret
mov
dec
mov
movsl
push
fcmovnu
cmp
aaa
jae
xchg
fucomp
movsl
fcoml
adc
mov
xor
inc
cmp
pop
ja
fnstcw
jecxz
pop
xorl
push
cmp
mov
mov
sub
inc
adc
inc
xchg
jno
mov
ljmp
dec
push
hlt
sub
push
dec
roll
xor
icebp
js
sub
daa
scas
and
pop
insl
aas
push
fsubrl
call
sbb
push
insb
add
adc
out
loope
and
ds
mov
jne
sub
jo
cs
mov
jp
push
shrb
test
xlat
jnp
lea
data16
pop
cld
ret
fcomip
add
push
mov
shlb
pushf
fildll
daa
jmp
adcl
outsb
cmp
lock
inc
adc
lods
jecxz
push
enter
incb
ljmp
call
dec
add
fwait
push
xchg
call
pushf
mov
fcompl
xchg
jecxz
or
ja
xchg
or
sbb
xor
scas
repz
pushf
daa
jne
cmp
sbb
xchg
stos
lret
stc
mov
hlt
or
dec
xchg
orl
fidivrl
sahf
ret
mov
arpl
mov
lahf
add
cltd
mov
dec
push
pop
mov
mov
jle
jle
dec
inc
stc
xor
cmp
mov
nop
xchg
fwait
xchg
xchg
dec
jno
push
push
in
or
aam
testb
bound
mov
pop
fsubrs
sub
or
xor
in
insb
out
xor
mov
sbb
fldt
xor
lods
imull
push
push
fwait
mov
or
orl
dec
in
xor
movb
out
dec
xchg
cmp
xchg
pop
stos
push
test
adc
push
add
call
sahf
aas
frstor
aam
in
jge
fxch
insl
sub
out
hlt
icebp
icebp
ds
inc
mov
aas
fs
hlt
inc
sub
jae
stos
sbb
xchg
sub
push
adc
jbe
js
add
mov
std
push
adc
cmc
cmpsl
fs
adc
xor
or
insb
jg
jb
push
es
rorb
stos
iret
jne
and
mov
xor
mov
xchg
scas
popa
dec
outsl
adcb
inc
mov
push
mov
fs
mov
and
clc
stc
inc
pop
xchg
jl
addr16
mov
push
bound
jbe
popa
jae
adc
in
or
pop
dec
pop
fcoml
xchg
hlt
imul
ffree
test
out
xchg
sbb
fsubl
jl
push
fisttps
lcall
nop
fneni(8087
dec
fadd
jbe
iret
outsl
aaa
or
lcall
imull
jmp
jno
bound
and
pop
das
test
add
xchg
jge
popf
fidivl
jecxz
and
mov
pop
mov
mov
jo
stc
and
aam
jbe
jl
repz
inc
cmpsb
ret
pop
or
out
aam
push
bound
movzbl
cmp
sbb
push
testb
arpl
lods
xlat
stos
jg
out
push
shlb
sub
jp
mov
mov
aaa
jne
out
fnsave
pop
xor
sahf
daa
xchg
xchg
je
popf
jmp
mov
push
andl
jl
push
popa
lahf
out
cmc
dec
rorb
int
mov
sub
lret
push
pop
mov
lcall
fsubp
mov
mov
les
push
out
xorl
lea
mov
adc
cli
mov
inc
std
scas
lea
stos
push
pop
add
dec
inc
cmc
sub
jmp
clc
rorl
gs
pushf
ds
push
dec
scas
ds
lret
adc
mov
xchg
orl
inc
jno
mov
daa
orb
pop
cli
jae
lds
dec
hlt
push
push
daa
jns
jge
sub
out
push
enter
push
ljmp
das
or
push
rclb
imul
ds
or
push
inc
cmp
hlt
pop
arpl
jl
mov
jns
bound
or
mov
mov
or
cmp
mov
loopw
dec
mov
ret
sub
add
cmp
jbe
xorb
push
mov
test
pusha
fidivs
pop
sbb
cmp
pop
add
jp
mov
or
fs
repz
lcall
pop
imul
movsb
push
popf
jb
cli
add
cld
mov
adc
scas
nop
cmp
or
push
add
lock
cli
pop
push
repz
mov
mov
mov
movsb
push
add
loop
mov
stc
mov
sbb
add
jp
cmp
out
cld
adc
gs
mov
imul
and
mov
movsb
shlb
les
sbb
pop
clc
test
jns
frstor
add
sbb
scas
aas
cli
and
lret
nop
insl
adcl
mov
xorl
pop
mov
or
cwtl
pop
inc
jbe
mov
xlat
cmp
js
pop
xlat
sub
popa
mov
stos
cmp
ljmp
pop
xchg
dec
mov
std
icebp
fs
mov
jmp
shrb
test
jg
notb
cmp
imul
leave
adc
adc
sub
cmc
push
push
fstpt
jmp
sbb
pushf
mov
lods
lret
test
push
insb
jp
jae
icebp
fwait
je
mov
jb
test
add
dec
mov
inc
add
leave
insl
sbb
mov
add
mov
inc
jns
stc
adc
adcb
into
lea
int3
cmp
and
lds
rorl
fstpl
sbb
vaddpd
push
xor
pop
repnz
les
xor
lods
fistl
adc
pop
cmp
mov
push
je
or
mov
mov
push
add
cltd
sarl
mov
test
mov
mov
cmp
std
mov
sbb
fsubr
add
mov
pop
scas
cmp
push
ja
mov
mov
mov
jno
mov
pop
sub
ds
bound
dec
mov
das
into
or
and
xlat
push
loopne
xlat
test
repnz
mov
xor
and
mov
shr
mov
push
or
push
subb
in
mov
sahf
and
pop
add
dec
mov
scas
push
ja
xchg
stc
add
sbb
scas
cmc
mov
or
pusha
nop
lret
fmul
sub
inc
inc
and
in
inc
popf
dec
xor
scas
imul
das
enter
mov
cmp
add
mov
int
mov
jle
inc
and
mov
mov
xor
cmp
cmpsl
inc
mov
sbb
call
sbbl
cmp
mov
ror
pop
cs
stc
ret
in
movsl
aad
orl
in
mov
inc
lock
cmp
stc
mov
add
pop
dec
cmpsl
and
sub
lcall
pop
repz
pop
jge
or
sbb
mov
movsb
xor
pop
out
push
sbb
or
clts
les
inc
filds
imul
and
sbb
xlat
mov
mov
and
shlb
xchg
out
add
add
jp
cmpsb
aad
jnp
add
lods
mov
fisttpll
adc
mov
dec
mov
stos
lea
repz
jmp
lcall
fs
jne
int3
in
outsl
fisubs
in
pushf
push
test
js
fsubl
jnp
lods
jge
fst
mov
push
sub
add
pop
cwtl
inc
pop
mov
xor
popf
add
and
and
adc
punpckhwd
loop
sub
jo
jo
mov
jno
loopne
jmp
dec
lods
sar
sbb
cli
fnstenv
push
mov
mov
enter
test
roll
aas
out
cmp
ljmp
push
jnp
cmp
or
and
movsb
or
mov
mov
outsb
scas
jg
fs
loop
and
rolb
inc
repnz
test
addr16
lds
xchg
mov
shl
inc
sub
repz
adc
addr16
xchg
cmc
fldt
inc
call
ret
pop
in
insl
outsb
mov
inc
ret
int3
sub
inc
mov
inc
es
dec
jp
jno
jmp
xchg
insl
mov
inc
adc
xchg
mov
leave
xchg
out
cmp
jno
cs
in
mov
xchg
jnp
loopne
aam
or
and
repnz
xchg
ficoml
sub
or
aas
push
imul
imul
adc
pop
push
daa
push
es
lret
cld
push
mov
xchg
pusha
cmp
jmp
cwtl
cmp
jne
aad
xlat
decb
mov
ljmp
dec
cmp
push
popf
fwait
add
mov
mov
dec
jg
pusha
out
inc
sarl
out
pushf
or
dec
add
inc
mov
lds
cmpsb
cmpsl
push
xchg
xlat
mov
xor
ret
std
clc
or
arpl
mov
push
or
mov
int3
push
xchg
jmp
insl
push
pop
pop
aas
nop
and
xchg
mov
hlt
imul
or
out
cmpsl
jo
rcrb
and
add
inc
dec
or
ror
ds
test
loope
xor
cmp
pop
lret
dec
ret
les
imul
pop
dec
jb
jg
or
and
in
daa
or
inc
sub
hlt
into
xor
js
sahf
or
mov
in
and
mov
fprem1
pushf
inc
jns
adc
xor
jp
lea
sub
jmp
stos
sti
mov
mov
mov
in
jle
lds
and
push
mov
fwait
mulb
mov
sub
data16
in
ss
inc
adc
cmp
adc
sub
cwtl
pop
dec
stc
scas
cwtl
pop
mov
lret
push
notl
cmpsl
push
push
xor
xor
stc
xchg
mov
pop
cmp
sub
repz
inc
or
popa
fldenv
orb
pop
inc
notl
hlt
sbb
sahf
sub
arpl
sbb
les
imul
clc
xorl
xor
and
sbb
xor
cmpsb
cmp
cmp
lret
inc
mov
add
xchg
scas
pop
incl
stos
jo
push
sub
cmp
stc
cmc
roll
cmc
add
sub
stos
addb
sub
scas
daa
fs
mov
iret
mov
or
mov
sarb
popf
mov
cmp
dec
cmp
jae
fdivrs
adc
dec
test
mov
popa
add
inc
or
jno
insb
xchg
das
roll
mov
and
stos
push
rcrl
ja
jecxz
cwtl
xor
test
mov
push
inc
mov
push
xor
jnp
pusha
and
pop
ljmp
mov
ds
rorl
addr16
ret
fs
sub
mov
ds
push
pop
xchg
sub
sub
js
xchg
dec
add
jae
sbb
and
aam
adc
test
ds
mov
xchg
jno
xchg
cmp
xor
popa
push
mov
imul
out
cmp
out
pushf
popa
jmp
aad
iret
icebp
mov
cmpsl
add
lea
out
and
pop
or
pop
aaa
cmp
in
cld
imul
inc
mov
dec
or
stos
inc
pusha
sbb
js
pop
gs
fstps
xor
xorb
mov
int3
ljmp
push
sub
jge
adc
int
es
jbe
js
decb
popf
inc
jmp
popf
adc
loope
push
jecxz
scas
push
fistpl
dec
pop
int
stos
in
rclb
sub
es
add
dec
shr
je
arpl
dec
scas
and
orb
cltd
pop
jns
push
fisubs
push
fwait
mov
incb
push
cmp
push
fimull
addr16
icebp
mov
mov
pusha
dec
in
fldl
fs
ficoml
add
jae
in
xchg
and
sahf
cwtl
ss
xchg
sti
push
mov
cld
jl
jbe
aaa
xchg
pop
cmp
pop
loop
push
loope
sub
movsl
sti
pushf
cmp
ret
ljmp
mov
inc
idivb
mov
jnp
lods
out
add
mov
pop
jns
xchg
ljmp
push
dec
pop
aam
hlt
dec
jmp
push
inc
icebp
jb
scas
js
mov
mov
cltd
pop
jge
out
xchg
ja
insb
jnp
int3
gs
pop
or
mov
adc
stos
inc
lcall
and
scas
leave
mov
inc
outsb
or
ljmp
adc
sbb
lock
xor
shll
fcmovb
mull
xchg
sub
mov
popf
xor
pop
unpckhps
pop
adc
push
sbb
sbb
xor
xlat
push
rorl
jl
mov
xor
in
or
push
dec
lock
cli
cmpsb
rcrb
sub
clc
out
pop
add
stos
xor
lret
stc
sti
cwtl
adc
xchg
push
xchg
and
jo
jbe
cmc
add
les
int
push
jmp
inc
pushf
adc
pop
rcr
int
sbbl
mov
dec
insb
pop
hlt
inc
jecxz
aaa
bound
xchg
xchg
or
mov
lret
out
mov
mov
xchg
cltd
int3
rclb
negb
int
mov
fnstsw
xor
xchg
xchg
jns
int3
jno
mov
add
and
xchg
pop
inc
cmc
fwait
cli
xor
cld
not
stc
call
adc
iret
flds
cmc
cltd
gs
in
inc
push
ret
push
getsec
cmc
rclb
add
mov
or
cmpb
mov
jmp
lods
lcall
or
inc
scas
loop
pop
addr16
pusha
mov
add
cmp
sahf
lret
stos
inc
lods
and
add
and
jns
ds
rcr
js
loopne
lret
fisubs
hlt
out
stc
inc
fs
and
popf
int
sub
aas
and
in
gs
clc
fwait
outsb
dec
and
test
popa
xchg
push
aaa
shrl
sbb
pop
vandpd
lret
ret
ret
xorb
mov
xchg
jnp
out
pop
or
lea
call
jns
mov
or
insl
pop
leave
sub
mov
dec
shrb
inc
ss
jo
cmc
or
adc
mov
imul
aad
test
leave
repz
outsb
add
inc
mov
std
jp
loopne
adc
or
jmp
mov
stc
mov
inc
xchg
pop
ficoms
lock
sub
rcll
or
clc
shll
jae
add
enter
or
or
leave
fadds
inc
shlb
mov
pop
nop
iret
movsb
nop
outsl
mov
adc
fcoml
pop
cmp
icebp
jo
xchg
mov
insl
cmpb
jge
push
sub
jne
mov
scas
loop
js
inc
sbb
xchg
ja
out
xor
arpl
outsb
les
repz
lahf
jbe
cli
xchg
clc
fsubrl
mov
or
push
cltd
cmp
xlat
xchg
imul
movsl
xchg
out
loop
mov
hlt
or
std
cld
push
pusha
in
jmp
mov
stos
push
cld
cmpsl
pop
notl
out
ror
enter
daa
xor
stc
imul
add
push
loope
ss
repz
inc
mov
sti
mov
jnp
outsb
pop
add
mov
mov
daa
loopne
or
aaa
dec
sbb
fwait
mov
mov
dec
mov
loopne
inc
icebp
lahf
push
loope
pop
sbb
mov
jne
xchg
cmc
adc
jns
pop
or
out
jl
enter
add
iret
mov
fmuls
dec
ds
jo
mov
lret
movsb
and
fs
and
push
sar
in
stc
jp
pop
and
mov
fwait
lahf
int3
cs
mov
xlat
sbb
dec
hlt
insl
adc
adc
cs
les
xor
repnz
mov
sub
sub
inc
mov
cmp
mov
outsb
jge
pop
jne
cmp
xchg
lods
int
xchg
and
int
popf
mov
and
cmpsb
push
fwait
push
daa
aas
jb
popa
push
jmp
lea
dec
aaa
stos
out
cmc
shlb
mov
sbb
cmp
rolb
pop
xchg
lea
jle
sub
jbe
mov
pop
cmp
mov
fcmovnu
insl
sbb
les
sti
mov
mov
sti
mov
pop
scas
repnz
movsl
mov
xor
jnp
pop
test
inc
fsts
jecxz
cmp
fwait
call
and
jnp
loop
ds
pop
jb
ja
mov
jno
ds
imul
xor
add
es
popf
enter
test
insl
scas
xchg
mov
inc
pop
es
jnp
mov
cmpsb
and
adc
fidivrl
adc
adc
jno
pop
cmp
pop
mov
mov
movsb
std
mov
push
fcmovbe
or
push
call
call
pop
pop
out
mov
push
scas
xchg
out
les
dec
mov
aad
stos
fdiv
push
pop
inc
sbb
dec
jecxz
mov
mov
inc
rorl
aad
stc
int
xchg
jle
mov
jae
push
sbbl
mov
ret
xchg
mov
push
adc
out
inc
imul
jnp
jnp
jbe
scas
sbb
bnd
push
sbb
push
mov
adc
sub
fistps
test
mov
subl
clc
mov
andb
js
push
cwtl
jne
movl
mov
andb
push
inc
andl
les
adc
xor
leave
or
push
popa
jecxz
jg
add
andb
flds
movsb
dec
mov
ds
or
shr
add
fcomps
out
inc
es
inc
push
mov
gs
dec
ja
xor
fwait
mov
cmp
and
jno
ficompl
push
xor
mov
or
xchg
gs
mov
mov
mov
mov
flds
push
dec
pop
jns
int3
pop
ss
sbb
fildll
ja
add
pop
cmpsl
sti
movsb
mov
int3
in
inc
adc
sti
xor
mov
dec
aaa
das
and
sbb
dec
into
mov
add
jb
inc
scas
or
fstl
dec
mov
sahf
bswap
xor
sub
jnp
xchg
xchg
lock
jns
pop
aaa
nop
notl
rclb
dec
mov
jmp
call
pop
jp
inc
aam
pop
test
into
stc
test
mul
jnp
jge
inc
ret
cld
insl
adc
pop
popa
add
inc
out
stos
cmc
lock
push
xchg
jge
xor
ja
xchg
inc
or
xor
cmp
orl
push
and
jne
xor
xchg
insl
mov
xchg
jnp,pt
pop
cmpb
dec
fisttps
std
sbb
in
pop
and
xchg
loope
fstpl
gs
xlat
repz
mov
jo
adc
inc
cs
add
loop
dec
je
sub
bound
push
pop
push
aas
rorl
and
xchg
mov
mov
and
adc
fnsave
pushf
and
movsl
into
pop
or
mov
and
cmc
mov
imul
dec
dec
cmp
iret
push
pop
insl
rorb
sbb
data16
inc
repz
clc
adc
xchg
mov
pop
inc
pop
sub
add
xor
sti
xchg
inc
cmp
jmp
xchg
pop
ficompl
pop
adc
sahf
mov
or
arpl
shrl
out
or
lcall
mov
add
mov
sub
mov
xchg
or
out
inc
bnd
xchg
dec
and
add
add
mov
xor
fs
jl
je
sub
push
or
mov
mov
push
dec
xchg
ret
stc
mov
dec
mov
bnd
push
iret
mov
jp
addr16
sbb
js
fisttps
cli
fistps
cmp
jne
outsl
aas
xlat
aam
outsb
mov
xchg
les
hlt
xor
inc
ret
add
pushf
xchg
mov
inc
enter
adc
ljmp
pop
dec
dec
jecxz
mov
scas
adc
adc
sbb
dec
add
inc
fstpl
lock
cmp
mov
dec
repz
nop
pop
mov
lea
test
lahf
mov
in
add
jecxz
movsb
insb
jne
movsl
pop
push
mov
add
mov
pop
and
ficompl
and
mov
mov
dec
fisubl
add
jg
daa
loopne
xor
mov
and
jg
in
cmc
std
setbe
out
shr
add
and
mov
pop
push
pushf
cmpsl
scas
pop
push
jle
mov
imul
sub
vdivsd
mov
out
ret
mov
jae
xor
lahf
mov
sbb
add
data16
lret
xchg
adc
sbb
or
ss
pop
sti
sbb
add
fisubrs
std
rcrl
arpl
pop
cmp
jb
movsb
decb
xchg
push
popa
imul
sub
das
rcrl
mov
sub
std
inc
cmp
push
or
aaa
or
mov
inc
push
jae
aaa
jae
sti
aaa
adc
bound
mov
cli
stos
jge
xor
cwtl
pusha
xchg
lds
mov
sbb
into
pop
inc
iret
lock
inc
fistl
bnd
mov
or
mov
mov
sbb
lds
jbe
jecxz
adc
dec
and
pop
sbb
call
mov
shr
jg
fists
sbb
push
fistpl
inc
mov
iret
sbb
icebp
mov
fs
loop
jae
push
pop
ljmp
outsb
xchg
loop
inc
stos
ljmp
sbb
jne
sub
std
inc
fsubrl
ds
adc
mov
mov
arpl
mov
inc
shlb
int3
cmpsb
mov
push
xchg
dec
shll
lds
addr16
mov
mov
push
xchg
add
mov
mov
jge
mov
outsb
adc
in
xor
push
and
xchg
ja
cmp
scas
mov
xchg
es
mov
adc
bound
dec
lret
add
repz
xchg
dec
sarl
gs
pop
je
gs
add
cwtl
pop
cs
cli
or
sbbb
jno
inc
cmp
xchg
fwait
imul
push
lcall
stos
and
cmpsl
out
loopne
xor
adc
pop
pushf
xchg
outsl
std
outsb
add
lahf
push
xchg
rolb
and
movzwl
mov
jae
dec
test
les
mov
push
pop
jecxz
popa
in
xor
lahf
test
dec
fistpl
shlb
lret
rcrl
mov
dec
or
rcrb
sbb
jbe
sti
loope
icebp
or
iret
cs
mov
rcrb
rolb
adc
and
lds
and
popf
jo
std
inc
out
mov
mov
mov
shll
sbb
or
xchg
rcll
rcrb
and
inc
push
or
jnp
or
or
jmp
pop
inc
push
xchg
push
or
dec
sti
fadds
ret
dec
sub
inc
repnz
jmp
in
dec
mov
add
pop
jl
ljmpw
dec
test
jne
pop
jmp
pop
add
xor
test
push
icebp
das
push
cli
adc
lcall
inc
insl
mov
push
ficoms
jbe
push
sbb
int3
aad
andl
cmpsb
loope
int3
dec
ds
fucom
dec
int
add
sbb
out
push
inc
out
add
lcall
mov
cmp
mov
mov
inc
outsl
xor
xchg
mov
jnp
jle
das
xor
clc
mov
ds
sub
cld
inc
inc
lods
mov
sub
fdiv
stos
lcall
mov
rorl
sub
lcall
nop
mov
mov
jno
pop
popf
loop
testb
jne
inc
daa
loopne
jp
pop
inc
shr
loopne
pop
mov
stos
into
call
mov
inc
jne
popf
leave
fwait
xchg
imul
movsl
push
mov
fimuls
arpl
out
jbe
shll
mov
add
arpl
les
push
mov
mov
dec
push
out
out
jmp
fld
and
jnp
outsb
mov
sbb
repz
fstpl
jnp
ja
orl
add
idivl
jo
xchg
filds
rclb
adc
sub
mov
lods
ss
pop
pop
inc
mov
sub
inc
fdiv
or
aad
rorl
mulb
fmul
stc
mov
adc
mov
xor
sub
cmp
push
outsl
pop
lret
mov
shrb
icebp
in
aad
and
arpl
mov
mov
js
sbb
roll
jb
loop
and
mov
pop
or
lds
mov
and
lahf
sbb
xlat
sub
push
adc
pop
rorb
decb
test
icebp
xor
mov
inc
cmp
mov
sti
arpl
ficompl
pop
rol
scas
or
sbb
mov
adc
mov
cmpsl
adc
fdivp
or
dec
add
mov
in
jo
dec
addr16
mov
sub
arpl
add
lret
out
movsb
stc
jl
insb
bound
cmc
aad
cmp
xchg
adcl
fcoms
and
or
mov
xor
jl
mov
lods
in
mov
mov
sti
hlt
cs
sub
cmp
adc
add
popa
sub
adc
mov
bound
test
repz
es
push
add
inc
hlt
sbb
push
in
clc
shlb
std
dec
sub
testl
mov
in
int3
aam
pop
xchg
mov
loop
mov
pushf
cmp
movsl
adc
push
add
mov
sub
jecxz
mov
pop
mov
shl
jle
and
pop
insb
gs
xchg
call
xor
inc
xchg
jb
inc
cmpsl
aaa
xchg
sbb
push
sti
jmp
push
inc
and
and
add
adc
inc
pushf
sub
inc
adc
lret
mov
push
fmull
jmp
sbb
mov
aas
xor
mov
popf
or
mov
dec
push
ret
push
or
jnp
repz
lahf
fisttpl
add
jmp
scas
mov
mov
ja
xchg
lret
inc
repz
arpl
and
fs
pop
push
icebp
mov
sbb
xchg
les
repz
andb
lret
in
mov
dec
cwtl
sarl
pop
push
sbb
and
cmp
stos
and
push
or
enter
inc
pop
es
cmp
notl
loopne
xlat
inc
loopne,pn
jnp
aam
dec
sahf
mov
scas
dec
cmp
test
mov
ror
xchg
cs
xor
push
push
out
out
pop
movsw
outsb
jb
cmp
repnz
or
shlb
jl
lret
adc
push
cltd
add
adc
pop
sub
fisttpl
push
or
add
jl
mov
cmp
subl
ret
fists
xchg
in
into
in
inc
mov
ljmp
mov
leave
out
loop
push
adc
aas
scas
sbb
mov
ror
lods
and
inc
sahf
sub
inc
fsubrs
insb
dec
fwait
mov
cmpsb
pop
push
repz
rorl
fcompl
pushf
jp
ret
push
inc
cld
mov
andl
in
sub
ret
mov
sbb
or
test
or
jo
outsb
mov
inc
mov
inc
xor
jmp
mov
jl
hlt
jmp
mov
leave
mov
push
jl
push
fnstcw
mov
mov
frstor
cli
adcb
pushf
out
pusha
sub
xchg
cltd
test
mov
cmp
jecxz
or
add
ret
push
outsb
mov
out
mov
sbb
push
jmp
les
cmp
mov
int3
pop
pop
popa
mov
iret
xor
inc
jl
ljmp
arpl
ss
ja
in
cmp
mov
mov
add
xorl
push
or
lock
dec
in
sbb
ss
scas
cmc
in
and
push
sub
jg
hlt
xchg
lods
mov
push
out
mov
xchg
add
les
lods
mov
adc
xorb
insb
xchg
stc
cmp
mov
mov
pop
xchg
stc
mov
pop
movsb
cmp
fwait
adc
shrl
pop
movsb
cmp
shll
dec
sbb
loop
lods
sub
inc
shl
sub
fucomp
mov
push
mov
adc
jne
xor
adc
push
cmp
adc
ss
mov
in
jb
loopne
pusha
push
popa
out
inc
cs
fstps
ffree
dec
std
fdiv
and
mov
shll
jl
mul
dec
inc
into
addr16
bound
loop
ret
sbb
rolb
in
inc
std
mov
pop
insl
sub
push
push
jecxz
fcom
std
jge
add
pop
mov
inc
rol
outsb
mov
xchg
add
fcomp
aaa
adc
fwait
dec
ret
ss
fsubs
int3
xchg
and
divl
or
mov
cmp
cmp
jecxz
lods
and
imul
cmp
lock
lgs
cs
pusha
inc
xor
sbb
xchg
ja
ss
rcll
jp
dec
mov
out
and
loopne
pusha
and
into
pop
movsl
int
adc
inc
pop
pop
lods
std
xchg
les
sub
sub
popa
inc
icebp
test
mov
aad
dec
ljmp
inc
jae,pn
cmp
mov
pop
jp
cmp
push
cltd
inc
dec
cmp
adcb
push
pop
inc
or
test
popf
scas
mov
imul
inc
inc
push
clc
jp
adc
pop
or
fistpll
jno
call
lods
rcr
jnp
aas
dec
lret
jae
mov
jns
adc
xchg
xor
xor
sbb
incb
or
dec
lret
test
mov
xor
lds
and
fmul
sti
mov
add
rorl
addl
jns
add
cltd
jmp
push
pusha
lret
insl
test
adc
insl
icebp
ret
out
push
mov
mov
sbb
xor
sbb
inc
and
xor
jae
lret
xor
scas
mov
insb
lret
dec
popf
fcoml
adc
xchg
ja
sub
adc
nop
pop
dec
in
pop
decb
sahf
push
scas
sahf
xchg
pop
je
xchg
push
mov
mov
add
jns
ret
mov
out
push
leave
es
push
or
xlat
mov
inc
xchg
and
fs
ljmp
andl
add
call
mov
or
inc
mov
mov
dec
ficoml
add
jne
dec
cmp
in
pop
add
or
mov
repz
rcrl
lods
mov
jmp
jo
push
mov
test
mov
adc
xorb
sarb
inc
add
popa
mov
lods
das
enter
push
pop
inc
and
iret
cltd
adcb
jno
adc
add
mov
xor
push
test
and
mov
jns
pop
jo
mov
or
add
pop
push
inc
push
xchg
xor
adc
into
pop
rcrb
testl
inc
sahf
js
fwait
dec
pop
lods
lret
push
cmp
es
dec
aas
adc
adcb
mov
scas
xchg
pop
sbb
out
lds
mov
scas
shlb
lahf
mov
imul
int
cmp
inc
xchg
roll
push
fs
dec
into
fsts
inc
fwait
iret
pop
inc
test
pop
movsl
cmp
lods
movsl
aas
pop
out
mov
xor
pop
xor
xchg
or
test
movsl
sbb
loopne
mov
repz
rol
xorl
adc
pop
mov
mov
jnp
push
fcomip
pop
je
jp
ffree
mov
int
sbb
ret
xor
cmp
or
std
adc
idivb
scas
outsl
pop
or
adc
add
mov
ret
in
scas
divl
adc
pop
adc
jmp
imul
movl
fwait
and
dec
or
and
lahf
pop
stos
jo
mov
cld
cmp
add
pop
in
inc
mulb
xchg
mov
jle
frstor
jo
push
jbe
mov
sub
sti
fidivrs
popf
push
cltd
and
add
jle
mov
and
notb
notb
fidivl
rorb
cwtl
jbe
aam
lock
xchg
push
inc
icebp
popa
les
test
mov
ret
mov
repz
test
rcrl
movsl
pop
ret
icebp
mov
jge
pop
repz
lock
xchg
add
je
repnz
pop
je
mov
xorb
std
ja
icebp
xor
stos
push
rcr
and
and
push
addl
pop
lods
lods
les
enter
add
aam
addr16
jle
or
faddp
jmp
das
jp
or
cmp
inc
mov
aam
cld
stos
add
or
js
cmp
mov
xor
stc
inc
xchg
insb
iret
cmc
xor
xchg
pop
popf
and
mov
add
lahf
cmp
out
push
insb
aaa
arpl
mov
daa
lahf
pop
push
shr
or
jo
jmp
push
or
jne
in
push
pop
insl
imul
dec
adc
ficoml
les
icebp
lret
clc
adc
adc
cmpsl
pop
test
dec
test
sub
paddusb
inc
pop
mov
xor
or
ljmp
or
sbb
mov
popa
fwait
mov
int
mov
pop
jno
in
movsb
sub
dec
lahf
sbb
and
aad
es
leave
dec
lock
dec
int3
push
mov
or
xor
ja
insb
pusha
std
scas
dec
sarl
in
outsb
in
inc
sub
rcll
mov
mov
sbb
inc
stos
dec
es
mov
pop
in
lahf
push
add
test
lcall
icebp
out
in
xchg
ja
popf
test
fldl
cmpb
push
xor
mov
cmp
cmpsl
out
mov
scas
repz
cmc
sbbb
outsb
pop
mov
dec
adc
mov
icebp
cmp
mov
out
fildl
cmp
pop
adc
or
jg
je
stc
mov
pop
invd
mov
outsb
dec
addb
mov
mov
xchg
and
xor
mov
fs
inc
imul
sbb
fisubs
and
add
inc
rorb
jo
pop
mov
and
xchg
pop
sarb
cs
xor
sub
cmpsl
add
xor
or
aad
into
in
les
and
call
idiv
out
popf
scas
and
pop
out
cmp
testb
ds
pop
pushf
rcrl
xchg
test
jg
and
cmc
and
clc
sbb
test
xor
xor
jp
lds
fldenv
adc
or
xchg
loope
pop
jnp
jp
div
sahf
bound
mov
subb
and
inc
mov
inc
xchg
sub
out
sub
mul
push
jmp
and
mov
dec
out
movsb
outsl
mov
pop
subb
push
ljmp
out
xor
xor
inc
cmp
call
pop
jnp
into
or
insl
jbe
loop
pop
cmpsb
cmc
xor
aas
jle
jl
jge
je
negb
scas
stc
or
movsl
ret
sub
mov
and
icebp
xchg
inc
fnstenv
dec
add
fdivr
sbb
adc
repz
enter
or
jg
popa
int3
xor
outsl
popa
out
lcall
inc
or
adc
or
push
xlat
clc
add
add
aas
inc
out
mov
add
jno
jmp
cmp
test
jl
insl
int
inc
sub
jge
dec
cmp
call
jle
fstl
and
call
push
jmp
xchg
or
sbb
jo
cwtl
popf
pop
sbb
mov
xchg
ja
sbb
xchg
repz
mov
mov
jmp
mov
jo
call
cmp
jo
fxch
cmp
test
scas
sub
lds
dec
inc
fistpl
inc
xchg
cmp
int3
rorb
jl
shlb
sahf
pop
add
shrb
sbb
adc
rcrl
pop
cmpl
jns
sub
xlat
repz
in
aad
inc
repz
iret
das
pop
loop
adc
lret
jp
push
mov
jnp
stc
sbb
popf
pop
and
insb
mov
add
xchg
adc
cmp
popa
pop
push
xor
lret
ja
jae
dec
adc
add
mov
or
cmp
rorl
inc
cwtl
sbb
xchg
mov
test
push
cmp
pop
xor
mull
mov
sbb
mov
shrl
dec
movsl
aaa
ret
es
cwtl
push
les
in
shl
addr16
adc
jo
add
add
js
sysret
xchg
pop
sbb
cwtl
fnstsw
shl
pop
cmp
pusha
test
xor
pop
inc
jle
and
mov
movsl
stos
pop
inc
inc
mov
push
ljmp
je
inc
push
lods
subl
mov
test
cmp
mov
adc
mov
sbb
fistpl
cmpsb
ljmp
das
lods
xor
lock
ss
dec
adcb
out
mov
mov
add
and
push
add
inc
pop
ljmp
push
mov
sbb
aaa
ja
xlat
add
pop
mov
sbb
and
inc
out
test
stos
pop
stos
dec
int
pop
enter
dec
test
lcall
and
push
fbld
pop
scas
mov
out
je
mov
dec
pop
and
sub
sub
stc
or
mov
push
insl
lret
dec
or
ret
jnp
arpl
mov
rcll
cmc
and
sub
iret
cli
push
les
mull
xchg
jns
fwait
mov
jae
sub
add
popf
vorpd
les
arpl
xor
mov
fildll
pop
xchg
stc
cwtl
lock
push
je
pop
out
scas
xor
jb
ret
or
dec
adc
outsb
or
sub
cmpsb
and
sub
loop
push
ds
fldt
push
or
rorl
cwtl
and
and
xor
rorb
push
push
mov
lahf
outsl
jmp
fiadds
imull
pop
fwait
loope
cmp
xorl
dec
cwtl
xchg
fwait
push
jbe
push
xor
in
cmc
aad
nop
loopne
dec
in
mov
push
jns
sub
pop
or
mov
pop
push
xchg
cmp
xchg
sub
imul
add
sub
push
push
dec
fucomip
nop
pop
test
jg
pop
push
sbb
test
ret
sub
outsb
xlat
pop
or
xchg
std
inc
shl
sbb
or
jae
lock
out
adc
pop
test
add
rcrl
sub
fmull
jno
cmpsb
adc
sbb
ds
fidivrs
pop
inc
mov
dec
out
aas
xchg
in
add
les
aam
rorb
lods
outsl
push
out
call
xchg
cmpsl
clc
shll
push
lret
xchg
and
pop
aam
decb
xor
xchg
cmp
fnstcw
mov
loopne
not
cs
xor
loope
or
sbb
pop
pop
nop
xchg
jae
cmp
out
pop
adc
jb
lea
add
mov
clc
mov
rorl
out
out
push
pop
cli
data16
out
xor
in
or
pop
lea
mov
and
push
mov
ljmp
test
aam
jmp
test
jbe
das
mov
scas
ret
sahf
or
xchg
stos
das
sbb
mov
leave
pop
jmp
jae
test
xchg
jmp
pop
ja
ds
pusha
jbe
roll
pop
addr16
dec
das
test
movsb
mov
std
push
and
lret
mov
xchg
daa
out
xchg
push
lret
pushf
lret
push
es
test
jae
fisttpll
in
dec
lods
mov
mov
fst
sti
cmpsl
mov
xchg
xchg
not
adc
mov
jno
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
mov
sbbb
inc
mov
js
mov
arpl
daa
jmp
xchg
test
imul
push
jne
jmp
jno
lcall
cmp
outsl
data16
xchg
mov
mov
mov
scas
xor
incl
inc
int3
dec
jo
jmp
lret
sub
mov
add
fabs
repz
fwait
xorl
inc
in
xor
outsb
shll
ja
lret
sub
xchg
inc
clc
or
push
daa
cmp
xor
mov
jmp
out
dec
add
outsl
pop
push
pop
loop,pt
dec
inc
cmp
adcb
jmp
lods
mov
mov
imul
push
lahf
dec
xchg
xchg
xchg
sbb
lcall
lds
movsb
mull
sub
mov
add
mov
or
addl
push
iret
imul
and
std
pusha
mov
push
pusha
push
bound
cli
inc
aas
addr16
lods
cmp
add
cmpsb
cmp
pop
in
pusha
pop
enter
xchg
push
call
xchg
inc
push
es
outsb
fidivrs
xor
or
inc
aaa
xchg
test
clc
stos
arpl
cmp
in
mov
jo
cmpb
jl
mov
mov
add
add
add
add
inc
xchg
repz
cmpsl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
insl
add
insl
