sbb
add
mov
sbb
imul
nop
fcoms
xchg
push
sbbl
in
cs
lods
loopne
loope
insl
push
mov
pusha
push
jmp
jl
clc
sbb
or
xchg
fdivl
sbb
mulb
xor
imul
push
rcll
pusha
jg
int
repz
ret
ja
push
test
sbb
sub
outsb
or
mov
das
mov
lds
sub
ja
mov
mov
enter
clc
in
xor
movsl
ljmp
aam
int
dec
pop
in
pop
mov
iret
js
in
xchg
es
push
xchg
mov
gs
jg
push
inc
mov
mov
jae
sub
xchg
cli
xor
shrl
jmp
mov
or
and
pop
inc
nop
insl
xchg
cmp
outsb
in
jl
dec
xchg
sub
sub
push
cltd
movsb
dec
cs
jp
dec
wrmsr
and
out
lahf
cmpsl
mov
orl
jns
filds
mov
push
movsl
cwtl
aam
sbb
xchg
out
popa
jnp
mov
out
push
adc
xor
cmp
sub
push
adc
mov
loope
xchg
insl
jle
cli
je
ret
insl
adc
jl
sahf
sub
mov
sbbb
lods
bound
lds
adc
sbb
jle
sub
mov
dec
mov
js
jno
or
aam
ljmp
call
xor
xchg
or
das
add
insl
adc
gs
add
mov
add
push
jg
lahf
sub
daa
sub
adc
movsb
or
adc
ja
pop
out
mov
fcoml
inc
inc
test
dec
stos
cmp
cmpsb
adc
mov
or
pop
inc
or
and
xchg
ljmp
addl
fdivrs
xchg
pop
inc
mov
sbb
insb
das
repnz
pop
pop
adcb
or
repz
dec
int3
and
cld
cmp
pop
pop
ja
cmp
add
arpl
and
hlt
jnp
pop
fdivrs
xchg
imul
and
inc
js
jmp
xchg
leave
cmp
push
xor
sbb
add
xchg
cmp
xchg
and
daa
imul
pop
sar
outsb
lods
sbb
sub
cmp
jl
ss
into
call
dec
mov
aad
cmp
mov
jecxz
or
push
xchg
iret
sbb
dec
xchg
cmp
fisttpl
pushf
insl
aas
xchg
sahf
adc
lock
repz
lcall
fldcw
js
popf
popa
jg
jecxz
jnp
rolb
mulb
cmp
and
pop
lahf
sbb
push
pushf
lock
push
mov
mov
icebp
lock
loope
cmp
adc
or
adc
int3
ljmp
mov
cwtl
mov
add
clc
adc
pop
call
lret
lret
mulps
movsl
outsb
xor
fcmovnu
imull
jne
lds
je
lcall
outsb
sbb
pop
outsl
popf
ljmp
mov
pop
cld
mov
clc
ds
test
bound
mov
cmp
jg
sub
fdiv
mov
push
inc
inc
push
jne
pop
sbb
movsb
fisttpll
shll
mov
adc
push
xor
push
xchg
jl
sbb
xor
jne
pop
mov
mov
test
jle
into
loopne
fists
or
mov
fs
lret
shlb
jo
and
mov
and
pushf
push
fisubl
sti
nop
addb
loopne
insl
push
push
add
faddp
fsubr
mov
adc
je
or
xchg
sub
in
in
das
and
mov
add
inc
out
call
lods
and
das
enter
add
jne
hlt
and
xchg
outsl
call
pop
dec
pusha
fmuls
jge
jl
popa
sahf
cmp
cltd
mov
sti
pop
and
xchg
add
iret
pop
es
adc
inc
jne
add
fs
mov
dec
popl
mov
in
stos
das
inc
movsl
jnp
add
sahf
scas
out
xchg
cmp
push
add
mov
sbb
mov
clc
jno
gs
xlat
jge
inc
sub
clc
pop
mov
movb
mov
mov
jb
sahf
sub
loop
hlt
inc
sbb
mov
adc
adc
bound
add
fistps
test
mov
into
pop
mov
push
xchg
xchg
icebp
push
jp
js
xor
mov
call
jae
pop
loope
jmp
cs
adc
pop
fiadds
xor
mov
push
sub
inc
mov
or
mov
insl
bound
pop
or
outsb
in
das
test
adcl
push
jecxz
fisubs
popf
pop
xorl
scas
ja
scas
push
sbb
add
mov
test
dec
and
in
xchg
test
inc
repz
fisubs
or
jbe
cmp
inc
es
xor
fildll
out
pushf
out
cltd
insb
push
loopne
jl
mov
pop
pop
jnp
popa
push
scas
sbb
dec
inc
xor
fwait
xor
xchg
mov
push
pop
out
sbb
loope
in
lds
mov
jge
into
lods
mov
fstps
mov
ret
jne
mov
fwait
mov
stos
movsb
inc
adc
jl
cwtl
inc
jge
js
inc
sarl
mov
frstor
xor
cmp
sbb
xchg
sbb
or
cmp
push
jbe
inc
sbb
fmuls
xor
int3
pop
pop
jne
enter
inc
cwtl
xchg
in
popa
or
int3
cmpxchg
bound
scas
repnz
dec
or
scas
or
cmp
aad
xor
xor
daa
jbe
daa
sub
mov
mov
xlat
lahf
mov
jg
gs
mov
dec
inc
jmp
add
xor
frstor
cmpsb
add
push
lret
fsubs
pop
fimull
xchg
aad
mov
inc
test
es
repnz
sub
pop
test
jg
adc
inc
inc
adc
fnstsw
es
mov
lds
xchg
je
call
mov
sbb
cld
and
adc
cmc
bound
rorl
push
lahf
cltd
popf
ja
imul
movl
sub
roll
pop
popf
adc
es
and
sbb
sbb
ds
xchg
sbbl
das
add
aaa
inc
icebp
cld
jl
mov
push
cs
data16
adc
pop
push
jp
fs
cmovnp
lods
jl
pop
ja
mov
sbb
iret
and
gs
xor
int
lcall
mov
xchg
fwait
mov
cwtl
xor
repz
mov
ss
call
shll
xor
jecxz
clc
mov
xorb
mov
stc
sti
lds
xchg
mov
jo
scas
test
pop
loopne
std
inc
xlat
daa
and
divb
out
out
mov
adc
lcall
aas
iret
hlt
and
pushf
mov
xlat
fnstenv
dec
xor
cmp
inc
add
scas
dec
mov
out
jp
sti
sub
je
imul
adc
movsb
cltd
cmp
mov
nop
leave
and
je
icebp
push
cmpsl
out
xor
out
imul
pop
rol
fldcw
xchg
ret
outsb
das
out
mov
sub
push
lahf
sbbb
dec
cmp
jno
cmp
jg
push
and
fdivrl
mov
mov
xorb
lods
aas
push
in
pop
mov
ret
mov
sub
aad
sbb
mov
into
pop
arpl
scas
jbe
or
je
fadd
in
xchg
incl
ficoml
mov
dec
sub
mov
es
rorl
js
or
std
pusha
sub
mov
and
cmp
fsub
inc
daa
fidivl
xchg
dec
add
cltd
and
xor
sub
cmp
int3
cli
ljmp
enter
call
or
cmpsl
dec
cmp
xchg
rcr
cli
mov
cmc
loope
xchg
or
xchg
lahf
push
filds
cmp
mov
push
fsubrs
xor
les
imul
jne
in
mov
sbb
jmp
pop
int
rol
arpl
pop
and
scas
xchg
dec
test
mov
pop
out
adc
mov
dec
cmpsl
movsb
lret
dec
call
jmp
push
mov
xchg
iret
pushf
and
push
push
sbb
lds
cld
in
or
mov
mov
mov
push
in
dec
dec
inc
cmpsl
push
sbb
fsubrs
mov
lret
and
xor
cwtl
adc
repz
in
lcall
iret
mov
pop
mov
push
and
push
test
movsb
ja
sbb
sub
dec
movsb
pusha
enter
pop
inc
mov
jle
dec
push
in
sub
xor
outsb
sub
dec
xor
ret
mov
mov
out
cmp
out
and
mov
inc
sbbb
dec
mov
jnp
les
out
es
jbe
jb
or
dec
hlt
adc
stos
cltd
pop
bswap
sbb
add
mov
test
in
cmp
xchg
mov
jg
stos
pop
dec
pushf
ficoms
mov
add
jmp
jg
mov
sub
pop
and
and
add
daa
fsub
sbb
mov
int
add
xor
and
cmp
fidivs
lock
push
dec
sbb
push
call
jne
adc
lea
fildll
inc
fldt
mov
adc
or
add
mov
inc
cmp
inc
jmp
fsubs
pop
add
pop
mov
outsl
mov
add
add
test
in
aam
pop
cwtl
rol
std
pushf
adc
xchg
test
iret
pop
mov
fdiv
xor
shlb
cli
ds
fwait
shl
mov
cld
mov
sbb
cmp
mov
mov
lret
fs
fisubrl
insl
fwait
mov
or
repz
les
mov
sarb
loope
sbb
mov
loopne
pop
pushfw
sbb
push
add
shlb
jb
dec
ret
cmc
mov
jae
pop
sub
fistpl
adc
test
es
sti
je
sub
xchg
cld
sub
adc
pushl
adc
inc
lods
repnz
rcr
mov
xchg
loopne
mov
jecxz
sahf
add
sbb
lret
adc
sahf
push
pop
imul
repnz
and
movsl
sub
xor
jg
sbbb
mov
xor
sbb
movsl
pop
aam
arpl
enter
les
mov
xchg
xor
mov
xchg
add
mov
ret
leave
sub
adc
cs
push
fstl
push
or
aaa
imul
insb
sbb
cmp
pop
xor
sahf
lret
mov
jno
es
mov
cmc
shr
pop
ret
popa
repnz
mov
mov
ja
ds
movsb
scas
repz
adc
ja
dec
push
mov
std
pop
inc
adc
pop
lret
pusha
add
ljmp
jns
sub
add
sub
xchg
fisttpl
mov
in
in
cmp
shrl
add
setge
fdivr
adc
imul
pop
cld
adc
xchg
aaa
lahf
inc
xor
mov
je
inc
mov
pop
pusha
xchg
cmp
cmp
cs
push
adcl
std
int3
sub
sub
loopne
jae
dec
in
movq
out
lds
sbbl
daa
test
ret
and
push
pop
aam
cmp
jp
cmpsl
cmp
mov
lret
imul
out
xchg
in
xchg
rcrl
icebp
js
test
xchg
xchg
std
pop
cmp
arpl
lret
insl
cs
cmp
sahf
push
stos
inc
ja
push
push
sbb
sbb
dec
call
ds
pushf
inc
mov
jge
movsb
xchg
sub
addr16
hlt
pop
mov
cli
movsb
and
sysret
jl
test
push
pop
ss
roll
rcrl
mov
stc
xchg
lret
mov
int3
test
pop
mov
cltd
or
ds
daa
popa
sub
test
aas
add
sbbb
je
dec
push
imul
xor
xchg
push
ficomps
add
mov
sbb
adc
out
jbe
popa
sbb
sub
addr16
add
mov
jp
sbb
loopne
int
jg,pt
mov
sahf
stos
std
jmp
push
push
mov
rolb
in
lea
orb
sub
push
jge
aad
ds
dec
in
cmp
out
push
add
mov
pop
sarb
mov
clc
inc
inc
cli
and
lea
xchg
addr16
push
stos
or
lret
xchg
into
or
sbb
xlat
dec
das
leave
mov
jl
out
lret
add
jmp
ja
mov
es
repz
push
pop
dec
xchg
int3
pop
mov
jmp
xor
xchg
shlb
pop
in
xchg
ljmp
jmp
jno
cwtl
fsubrl
call
inc
mov
push
cmpsb
mov
loopne
fwait
jl
ficoms
pushf
jg
fs
add
movsl
fisttps
movsl
into
xor
icebp
inc
push
icebp
and
push
push
test
jecxz
push
cmc
shlb
ljmp
add
jnp
add
inc
dec
mov
mov
sub
lods
orb
or
lret
pshufw
sub
arpl
out
push
pushf
mov
jl
jl
rolb
mov
aaa
jnp,pn
cli
out
sub
repz
dec
imul
decb
aad
icebp
icebp
push
mov
fcoms
addr16
inc
ss
push
inc
inc
sbb
out
push
xchg
iret
cmpsb
movsb
inc
into
lea
add
mov
repnz
push
in
mov
xchg
aam
mov
popf
data16
sti
das
push
scas
fiaddl
pop
add
adc
cli
mov
call
rcrl
sti
out
es
subl
subb
sub
rorb
mov
adc
in
int
pop
and
orl
pop
adc
popf
mov
andl
inc
add
lods
ss
int3
mov
loope
push
inc
nop
ds
cmp
xchg
das
adc
in
pop
adc
loop
pop
inc
cmp
mov
dec
mov
int3
ljmp
in
pop
pop
sub
xchg
mov
dec
mov
std
fmull
cmpsb
mov
aaa
sub
test
lret
cmc
mov
mov
movsb
insb
mov
mov
dec
push
mov
std
sti
cltd
test
jo
or
cmp
jno
pop
adc
lds
sub
test
xchg
adc
nop
jae
jecxz
divb
mov
je
lds
xlat
mov
and
dec
loop
sub
push
in
inc
add
je
repz
or
jb
mov
sbb
ja
in
fmuls
push
fisttpl
sub
jo
js
stos
sti
stos
xchg
stc
sub
js
sub
dec
ja
xchg
jmp
or
sti
jge
jae
push
cmp
xorb
mov
xchg
popf
aad
std
or
mov
aas
popf
stc
vpmacssdqh
cmp
push
icebp
sahf
cmp
push
push
sbbl
or
push
rcll
repz
xor
xor
cmp
les
shld
mov
mov
mov
sub
test
fidivl
bound
fwait
and
or
out
test
mov
fists
cli
pop
sarl
mov
lret
cs
imul
popf
and
das
push
and
and
cld
mov
out
pop
sahf
mov
pop
jmp
sbb
push
inc
fisttpl
fstl
jbe
xor
push
push
mov
mov
push
fnstcw
sti
iret
jbe
outsb
loopne
cwtl
xor
pop
fisttpll
and
int3
fisubrs
loopne
fs
mov
rcrl
clc
popf
cmp
scas
test
inc
cli
cltd
repnz
jmp
add
mov
outsl
inc
xor
xchg
sbb
enter
out
mov
sbbb
push
or
or
popf
xchg
lds
out
xchg
neg
cmp
or
pmaxub
push
call
call
pextrw
inc
fidivs
inc
imul
insb
cmp
lcall
inc
sbb
aaa
in
jecxz
pop
jle
jge
lods
push
push
popa
sbb
mov
movsl
mov
xchg
int3
lret
idivb
mov
movsl
stos
lds
hlt
xchg
out
xor
mov
mov
or
adc
cmc
ja
or
add
add
jns
xchg
roll
jmp
push
push
lcall
out
arpl
lds
cltd
add
nop
cmp
lcall
jle
inc
into
mov
aam
and
mov
lahf
mul
fs
inc
int3
mov
in
test
dec
jns
icebp
ljmp
mov
fnstenv
nop
push
es
or
imul
mov
outsb
pop
dec
and
fadds
mov
test
pop
add
sti
mov
xchg
in
adc
mov
dec
add
adc
hlt
xor
int3
leave
aad
pop
or
scas
jb
addr16
fldenv
sti
loop
jle
nop
and
sub
cmc
js
sub
lret
lea
sbb
ret
test
adc
fldcw
jbe
shl
bound
sbb
mov
rclb
test
xlat
adc
sub
mov
repz
clc
push
add
shll
mov
dec
dec
push
mov
push
arpl
mov
stc
cld
mov
jp
mov
add
mov
sbb
mov
lock
aad
pop
xor
mov
mov
decb
xchg
dec
inc
adc
mov
test
insb
inc
mov
insl
test
sti
in
js
sub
cmp
mov
cld
sub
lret
xor
std
sub
jmp
xchg
imul
push
das
pusha
inc
into
push
or
stos
jmp
inc
or
scas
cvtpi2ps
adc
mov
test
mov
jo
inc
imulb
addr16
inc
int3
lds
lods
nop
xchg
push
sbb
enter
jb,pn
xor
sbb
push
dec
dec
cs
jge
pop
cmpb
add
pop
mov
rcrl
xorl
scas
add
push
inc
jb
lock
decb
in
mov
pop
push
jecxz
fchs
add
mov
or
ljmp
roll
mov
push
push
fstpl
adc
and
push
nop
mov
dec
shlb
or
and
jbe
jmp
ds
out
lret
call
in
or
cld
sub
push
or
arpl
xor
pusha
stc
lock
mov
mov
insb
jp
rcl
and
stos
dec
inc
jg
out
cmp
adc
repz
xor
imul
lods
ficompl
sbb
adc
mov
dec
out
lea
fwait
les
mov
nop
lods
push
push
imul
dec
ja
pop
lret
pop
ret
sub
cld
aad
leave
fiadds
fcompl
sub
add
dec
add
xchg
rcrl
mov
mov
lcall
adc
jle
mov
mov
adc
push
cs
sbb
insl
mov
adc
inc
xor
push
add
loopne,pn
and
movsl
pop
mov
inc
sti
and
loop
dec
sbb
ljmp
imul
int
add
mov
jno
test
es
fs
and
ss
fisubrs
jns
leave
cwtl
inc
mov
inc
jb
aaa
push
iret
xchg
mov
mov
mov
js
xor
adc
loopne
push
dec
cmp
ret
out
dec
jmp
popf
out
lock
lahf
jg
jl
add
xchg
cmpsl
mov
scas
js
test
sahf
jp
iret
jnp
pop
and
call
cli
sub
push
dec
shrl
test
sub
stc
xchg
sub
cmp
in
inc
or
add
push
dec
or
int3
out
inc
js
loope
adc
mov
mov
dec
fldt
int
enter
xchg
and
pop
sysret
cmpsl
daa
mov
repz
scas
mov
fwait
scas
dec
andl
pop
mov
bound
rolb
inc
out
cld
jns
aad
lcall
sbb
loope
sarl
adcl
mov
jg
nop
test
push
jp
jae
into
insl
cmp
or
mov
ja
das
clc
jnp
mov
cs
insb
decl
add
pop
arpl
in
xchg
inc
inc
jae
test
xchg
aad
sub
cltd
sub
push
jmp
inc
sub
inc
push
pop
adc
mov
dec
rorl
out
out
loopne
flds
xor
jge
xor
or
or
add
out
cwtl
stos
push
icebp
add
pushf
pop
fsubrl
jae
ds
xor
cltd
cmc
cmp
xchg
out
or
and
xor
pop
lahf
daa
mov
sbb
pop
push
xchg
loopne
jnp
xor
pop
jecxz
je
push
imul
cmpl
repnz
es
es
sub
push
lds
repz
cld
add
or
loope
js
inc
ret
je
inc
add
repz
and
es
dec
loop
fsubl
fcmovnbe
pop
jle
dec
cmpsb
jp
push
test
add
pop
ret
push
lcall
jl
pop
addr16
xchg
pop
and
and
jmp
xchg
sahf
mov
cmp
loop
jbe
stos
and
dec
leave
and
and
dec
jle
in
ret
repnz
imul
xchg
adc
cmpsb
push
fistpl
mov
sub
fcomi
rol
fiaddl
int
mov
movb
es
mov
rorl
push
cmpsb
loope
ljmp
jns
add
mov
adc
adc
std
repz
out
inc
aad
scas
xchg
push
cli
add
lcall
sbb
sbb
push
jnp
pusha
repnz
loope
sub
shrl
insb
ljmp
cmc
add
ss
mov
mov
lods
ljmp
jg
and
jge
or
dec
xor
sub
incl
pop
pushf
pop
mov
fs
fldenv
xor
fisttpll
dec
icebp
cltd
fcmove
pop
stos
pop
in
test
cmp
leave
and
fbld
movsl
in
mov
inc
jo
xchg
mov
enter
test
mov
jae
jecxz
adc
jecxz
hlt
scas
inc
fidivs
test
cmp
daa
inc
test
xchg
or
sbb
xchg
insl
roll
jle
or
mov
cmp
hlt
cmp
ficoml
popa
cmp
popa
test
dec
add
mov
fidivs
loopne
cld
dec
neg
cmp
inc
je
aas
aas
das
fs
fs
jge
mov
mov
jb
add
or
xchg
mov
or
push
popf
jge
iret
sub
inc
mov
sbb
push
ja
mov
shlb
inc
iret
pop
test
decb
dec
or
out
lods
jne
and
inc
cmp
push
in
jle
pop
push
bound
inc
lock
pop
pop
mulb
push
pop
in
jle
repnz
push
sub
mov
mov
out
or
cmp
mov
pop
aaa
mov
pop
add
jmp
aad
imul
lods
std
mov
or
add
push
mov
aam
add
xor
xlat
pop
pop
cmp
jle
adc
in
data16
ret
test
sbb
pop
mov
mov
jno
test
mov
pop
mov
jb
ljmp
jb
dec
add
dec
xchg
push
and
jbe
sbb
in
out
xor
daa
mov
xor
jge
pop
jle
pop
mov
and
dec
call
aam
lcall
stos
insb
sbbl
aad
pop
mov
test
jae
or
arpl
imul
lahf
pop
roll
or
divb
cmp
popf
xor
flds
sub
lods
inc
and
mov
mov
pop
add
repz
leave
mov
fadds
popf
ljmp
pusha
or
mov
cmp
out
push
and
int
das
jae
jo,pt
bound
and
sahf
pop
dec
into
and
mov
mov
test
js
int
mov
lds
xor
and
pushf
pop
add
xor
adc
cmpsl
ljmp
adc
mov
aad
mov
aaa
adcl
inc
xor
adcb
dec
push
fisubrs
addr16
cmc
fidivs
cli
xchg
test
movb
insl
add
es
mov
mov
sub
sub
mov
sbb
push
lahf
inc
cmp
inc
mov
mov
insl
mov
fsubrs
sbb
ss
test
dec
lret
daa
cwtl
and
outsb
jp
mov
cmp
fisubs
push
jmp
test
cmc
decl
js
mov
and
stc
sub
pop
or
rcrb
jo
je
cmp
mov
lret
enter
aad
pop
mov
inc
adc
sbb
mov
ss
ja
pop
xor
in
stos
mov
mov
pop
cmpb
ds
insl
hlt
imul
mov
out
mov
mov
sti
leave
decl
pop
adc
xor
adc
sarb
or
gs
int3
xchg
test
aam
mov
icebp
test
push
and
pop
outsb
scas
and
push
imul
adc
add
in
push
dec
movsb
mov
pop
shlb
popa
aaa
in
add
andb
shll
jb
or
mov
jo
stc
push
push
push
or
dec
dec
addl
add
jl
fucomip
mov
pop
pop
mov
aaa
es
pop
or
ja
or
fnstsw
lahf
sub
imul
sbb
inc
mov
aaa
test
sbb
sahf
mov
outsl
and
clc
in
xor
sahf
fdivrs
int3
sub
imul
mov
pop
jmp
inc
nop
sbb
inc
adc
shll
mov
mov
in
jno
push
mov
mov
out
hlt
dec
xchg
add
int3
sub
or
dec
movsb
jae
sub
lret
inc
cmp
cld
adcb
and
push
cmp
sub
dec
mov
dec
add
incb
jo
jae
in
inc
mov
mov
cs
loopne
call
stos
sub
pop
cmp
mov
mov
sbb
lds
std
out
daa
xor
frstor
mov
pop
cmp
mov
inc
out
cmpsl
jnp
andb
mov
and
xchg
xchg
dec
xor
sahf
aaa
xchg
divl
movsl
and
inc
dec
pop
or
out
jecxz
mov
nop
lock
inc
test
jmp
jns
add
cmc
inc
add
and
cs
xor
mov
push
movsl
jge
dec
xor
gs
add
mov
enter
addr16
insb
addr16
mov
sahf
push
inc
mov
out
mov
dec
mov
sub
pop
and
out
clc
in
inc
loopne
cmp
mov
push
shr
push
loopne
jne
scas
aaa
mov
sub
mov
jg
pop
sbb
mov
xor
push
out
push
push
rolb
addr16
cld
stc
mov
call
lds
mov
jge
adc
mov
cmc
les
arpl
mov
ss
mov
ret
lea
stos
add
push
mov
aas
movsb
jno
aad
and
dec
jmp
jo
mov
sub
add
jg
sub
lea
pop
mov
or
xor
jge
sub
xlat
shrb
mov
inc
mov
ret
stc
xchg
dec
cmp
and
lds
or
push
mov
adc
xor
lahf
dec
repnz
xchg
adc
jl
mov
pop
add
and
aaa
sub
outsl
into
ds
mov
pop
xchg
jg
mov
mov
inc
cmovg
repnz
adc
aaa
movsb
adc
rcrl
roll
mov
fcoml
aaa
enter
int
loopne
lea
and
test
push
xlat
insl
idivl
mov
into
push
scas
mov
jnp
push
test
jmp
rcl
out
test
mov
jmp
jae
cmpsl
push
jl
les
fstpl
pop
xchg
lods
fs
cmp
sub
sub
subl
push
imul
aaa
mov
push
shrb
test
out
iret
stos
mov
xchg
inc
cmpsb
adc
out
inc
addl
mov
jae
aaa
insb
pop
cmp
bound
shll
pop
pushf
daa
xor
cmp
and
jbe
repz
in
cmp
movsb
test
add
xchg
sub
push
xor
cmp
jo
icebp
stc
push
mov
push
ds
or
cmp
push
mov
movsb
incl
xchg
movsb
dec
andl
lahf
int3
aas
insl
enter
scas
push
cmpsl
jae
lock
addr16
cld
cltd
loop
imul
mov
jmp
xor
popf
pop
add
mov
and
lea
or
pop
in
rclb
insl
push
lea
jmp
roll
and
pop
xor
dec
cwtl
xchg
add
ds
enter
jg
pushf
add
lds
pop
into
or
or
adc
pop
jo
cmp
adc
lds
xchg
fs
imul
jno
xchg
or
xchg
lret
cmp
push
add
stos
adc
or
cmc
or
jg
lods
out
fildll
push
outsl
mov
roll
or
ret
sbb
or
mov
xchg
mov
mov
sbb
lods
fincstp
pop
mov
cli
inc
push
cmp
push
rol
test
bound
xchg
mov
jnp
push
and
mov
or
fldt
push
add
mov
sti
andl
stos
aad
jge
push
jnp
enter
test
xchg
out
xchg
adc
sbb
into
pop
vmwrite
jbe
rcrb
je
pushf
mov
daa
and
repnz
jl
fimuls
dec
push
mov
or
mov
or
sbb
iret
jnp
mov
shlb
clc
lods
je
in
jecxz
sbb
in
jp
push
mov
mov
scas
pusha
out
and
loop
xor
shll
push
dec
out
sub
and
stos
mov
fcoml
imul
mov
insb
jno
cmpsb
push
push
test
into
sbb
les
jae
mov
aas
dec
mov
loope
dec
cmpsl
push
test
push
pop
jecxz
mov
pop
and
add
cmp
mov
and
pop
pop
mov
loop
orb
mov
ret
pop
add
adc
inc
sbb
jmp
outsb
insl
adc
jb
mov
xchg
jl
inc
dec
jns
mov
inc
inc
push
sbb
fcomps
push
hlt
sub
loopne
xor
push
hlt
adcl
mov
sbb
add
dec
out
inc
inc
lahf
sub
xchg
push
push
shr
mov
cmp
cmc
movsl
out
lret
dec
and
aaa
pop
pushf
daa
insb
xchg
pop
dec
hlt
ret
pop
pop
cs
jmp
imul
adc
and
dec
scas
mov
rorl
int3
in
add
sbb
sti
mov
lea
dec
mov
add
scas
jbe
mov
xchg
cmpsb
xor
lds
dec
push
psraw
shl
xor
test
dec
insb
xchg
dec
stos
cltd
push
mov
aad
or
push
shlb
xchg
cmp
lret
sbb
sbb
cmp
sbb
orb
filds
dec
stos
stos
sbb
sbb
ficomps
les
cmp
xchg
into
mov
mov
inc
js
push
xchg
inc
iret
nop
test
mov
popf
inc
mov
mov
cld
imul
dec
into
adc
ds
fwait
pop
ret
popl
pop
divl
imul
jle
arpl
jecxz
cmc
mov
and
cld
hlt
pop
cmpsb
jmp
push
xchg
mov
mov
pop
mov
add
sbb
icebp
leave
cmpsb
and
jge
and
jbe
mov
xchg
sarb
outsb
pop
loope
icebp
add
hlt
jmp
inc
fsubrp
in
dec
mov
push
insl
out
movsb
cmp
mov
repnz
pop
sbb
or
xchg
or
add
data16
mov
push
shl
pop
mov
pop
movl
movsl
pop
lea
loop
mov
sbb
ret
adc
movsl
mov
inc
sbbl
test
inc
dec
pop
mov
mov
out
shll
sahf
aad
dec
push
movsl
ret
jecxz
rorl
mov
lret
pop
and
adc
or
imul
xchg
leave
pop
movsl
out
shll
dec
jnp
hlt
and
out
hlt
in
push
dec
ret
xchg
fsubs
adc
imul
shl
mov
push
sbb
push
ret
lret
push
ss
popf
lea
cmpsb
fistps
ficoml
adc
pop
dec
jle
sbb
or
insb
sahf
das
into
out
shll
out
stos
movsb
sbbl
push
add
shrl
fidivl
and
pusha
inc
cmpsl
push
and
sarl
imul
mov
xor
mov
insl
ret
aas
or
jns
xchg
lahf
pop
push
jl
jg
inc
push
push
xchg
fsubrs
out
lea
leave
std
scas
mov
dec
mov
dec
mov
and
pop
and
mov
outsb
mov
jle
stc
in
push
xorl
jns
enter
push
xor
jnp
mov
leave
jmp
mov
dec
movsb
or
mov
repz
mov
cli
cli
pop
nop
or
mov
or
out
in
dec
sti
fdivl
xor
pop
pop
jp
shlb
mov
movsb
fcmovne
aas
test
out
jne
mov
mov
pop
imul
mov
add
rcrl
lret
cld
mov
pop
lods
daa
add
out
loopne
cmpsl
xchg
ja
mov
rorl
mov
dec
filds
push
imul
and
out
add
adc
and
test
fdivr
jge
push
and
xchg
sbb
adc
sub
dec
mov
test
pop
inc
orl
and
adc
dec
sahf
dec
bound
cmpb
mov
xor
jecxz
add
adc
ficoms
bound
push
mov
cmp
dec
sub
cmp
adc
int
adc
and
mov
mov
out
push
out
xor
and
in
adc
xor
or
fstpl
cltd
mov
es
sub
aaa
mov
or
inc
mov
xchg
cmc
faddp
jmp
stos
mov
cmp
pop
cmpsl
gs
int3
mov
cmpsl
stos
add
dec
pop
mov
js
ret
mov
mov
and
loopne
dec
rcll
add
push
sub
divl
inc
push
cli
flds
add
or
lods
mov
push
jp
fstp
jg
fnsave
cmp
daa
sbbl
stos
out
andb
aas
jb
push
mov
or
fucomip
cmp
push
cmp
out
stos
push
sar
sbb
out
mov
pusha
icebp
and
xchg
lods
add
or
jmp
imul
test
xor
push
pop
pop
mov
mov
xchg
popa
bound
dec
imul
xchg
out
jnp
mov
cltd
pushl
out
div
jns
enter
divl
cmp
cmp
push
push
adc
pushf
inc
daa
inc
popa
iret
mov
mov
fcoml
dec
ret
xor
pop
fdivs
mov
shl
jle
xor
out
int
add
add
outsb
loope
out
adc
pop
mov
dec
in
push
or
or
jmp
out
mov
push
mov
ja
pop
inc
and
fnstsw
jnp
imul
mov
push
mov
cltd
jge
in
cmp
mov
into
pop
sbb
ljmp
jp
adcb
adc
insl
popf
mov
dec
fildl
imul
jmp
xchg
or
mov
in
fnstsw
add
test
cld
adc
jo
jbe
daa
xlat
ja
out
xor
das
mov
xchg
std
fistl
js
pop
scas
sahf
popa
aam
and
aas
sarb
mov
aam
push
or
movsl
das
jne
push
xchg
inc
in
mov
insl
fistpll
inc
push
cmpsl
nop
test
test
fs
xchg
stos
xchg
outsl
jecxz
out
insb
jmp
es
leave
sub
mov
fwait
lcall
out
sti
mulb
mov
adc
mov
and
and
das
into
mov
test
adc
ret
test
cmp
sub
dec
jnp
adc
lahf
decl
and
adc
repz
xchg
sbb
stos
std
dec
out
mov
push
sub
mov
mov
leave
jne
ja
or
pop
inc
mov
ret
jbe
add
jp
and
or
mov
add
lea
lcall
popf
ret
sub
std
in
sub
dec
ljmp
xchg
hlt
in
pop
add
xor
adc
decb
xchg
imul
hlt
movsb
cs
and
popa
or
fdivr
sub
sahf
mov
icebp
aas
xchg
test
rorb
push
inc
add
adcb
push
dec
std
pop
stc
mov
test
mov
jae
out
jmp
mov
insl
cmp
add
xchg
shrb
mov
ret
ret
or
jne
mov
lods
fdivrs
mov
rorb
jbe
inc
out
sbb
cmp
call
clc
adc
sbb
pop
jnp
int3
sub
mov
adc
pushf
push
sub
xor
icebp
andb
mov
clc
push
test
lahf
sub
or
fisttpl
jp
mov
mov
inc
nop
cmpl
xchg
jg
jo
into
es
push
mov
xorl
dec
mov
or
dec
cmp
and
push
mov
fldenv
out
leave
push
dec
pop
icebp
loopne
lods
das
movsl
push
fdivr
or
mov
mov
mov
and
jo
adc
xchg
inc
adc
enter
jp
loopne
mov
cmpsb
sbb
sub
stos
ljmp
adc
mov
insl
xlat
jnp
scas
inc
je
sbb
fnstcw
sub
ljmp
xor
jno
and
fnstcw
push
pushf
or
xor
xlat
add
lahf
adc
jge
mov
push
out
pushf
push
mov
push
inc
mov
clc
enter
mov
stc
lret
add
add
push
and
adc
test
mov
dec
clc
jns
shlb
push
sbb
lahf
push
mov
lret
inc
adc
stos
cli
cwtl
loope
jno
inc
fwait
repz
mov
cmp
and
dec
or
jecxz
push
xchg
pop
push
xorl
xchg
pop
or
int3
mov
rolb
lds
dec
sti
test
xor
mov
mov
stc
out
idiv
xor
mov
lcall
lods
push
jo
repnz
mov
shl
mov
adc
or
mov
mov
jnp
mov
inc
rclb
pusha
mov
stos
test
in
mov
inc
aam
insb
xor
or
lret
or
std
das
rcrl
out
mov
mov
in
pop
shlb
arpl
push
mov
ss
lret
inc
dec
xchg
stos
mov
dec
or
xchg
or
test
rcl
shll
into
test
jl
mov
cs
add
icebp
or
push
jno
fadd
movl
mull
ljmp
sbb
sarl
push
sarl
push
xchg
mov
sbb
pop
bound
in
outsb
ljmp
cmp
scas
inc
stos
sarl
out
dec
xchg
mov
inc
insb
push
movsb
adc
push
jecxz
mov
xor
mov
dec
pop
dec
mov
jo
cld
jne
cmpb
leave
cli
iret
sbb
mov
inc
add
add
lods
jl
notb
jae
xor
dec
mov
adc
imul
fmul
sbb
stos
rorb
mov
and
jo
fisttpll
or
cwtl
jo
xor
mov
sar
xor
mov
mov
es
test
lock
mov
fildl
xchg
pushf
popf
and
and
testb
frstor
je
gs
imul
xor
or
mov
lea
lods
fxch
adc
cmp
pop
sbb
int
jae
xor
mov
stc
insl
pop
mov
mov
rorl
push
cmp
mov
and
adc
lods
push
shrl
lret
push
shlb
mov
incb
jge
loope
inc
pushf
cld
popa
or
jbe
cmp
aam
mov
and
push
xchg
stos
popf
test
outsb
mov
and
sti
or
arpl
inc
js
push
pop
cmc
faddp
enter
mov
sbb
ret
jmp
popf
jecxz
add
pop
imul
mov
jno
push
and
or
push
pop
xchg
xor
jo
xchg
mov
fwait
leave
loop
repnz
push
sub
std
ficoms
cs
addb
cs
and
mov
sub
cli
popf
lret
movsl
xor
lret
fcoml
bound
aaa
fcoml
cli
fnstcw
adc
pop
mov
clc
fimull
jg
mov
lret
popa
sub
imul
cmp
lds
addr16
mov
sub
cwtl
popf
cmp
mov
stos
inc
test
imul
mov
je,pn
xchg
pop
adc
push
xchg
adc
cmp
fistpll
sub
mov
sbb
lds
bound
test
lcall
add
mov
add
rolb
fwait
dec
push
inc
or
dec
mov
movsl
rcl
data16
nop
jg
push
mov
call
cmp
push
bound
outsb
nop
movsb
ret
loopne
shlb
imul
sti
push
clc
movsb
pushf
mov
mov
push
dec
and
in
xchg
xor
pop
pop
xor
add
outsb
inc
jne
mov
sbb
daa
jle
pusha
and
cltd
xchg
pop
out
mov
cmpsb
subl
sbb
dec
pop
pop
popa
aaa
mov
popf
and
cmpsl
es
out
mov
cmp
sub
testl
loopne
iret
xor
push
cmp
sub
mov
outsl
mov
je
inc
xor
sub
stos
xchg
push
sbb
push
fisttpl
out
xor
cmp
sub
cmpsb
push
scas
adc
jno
cmp
cmovp
pop
aam
mov
lahf
mov
xchg
outsl
cmp
xchg
or
lahf
sti
addr16
mov
xor
iret
ds
push
xchg
inc
sub
inc
or
fists
hlt
pop
movsb
sub
push
das
and
push
movsb
sub
xor
bswap
dec
pop
es
xor
xor
cmp
and
std
xchg
xchg
add
cmpsb
in
icebp
nop
pop
movsl
imul
cli
push
rcr
sarl
cmpsl
mov
sub
mov
pop
xor
ja
sahf
xor
xchg
loopne
sti
pop
pop
int3
sbb
jae
call
popa
pop
sub
jp
mov
aad
xor
loop
add
leave
jbe
stos
sbb
aas
es
mov
fwait
loop
int
adc
xchg
sub
push
push
push
jecxz
sub
gs
and
movsb
xchg
ret
mov
push
ja
mov
inc
aas
cmp
xorl
push
pop
sub
movsb
fisttps
inc
inc
rcll
push
pop
xchg
adc
lret
stc
rorb
pop
idivl
cmp
ljmp
movsl
int
cmp
jbe
mov
mov
push
cmp
repnz
adc
cmp
jp
xchg
add
sbb
pop
outsl
dec
and
call
int3
dec
sbb
push
sub
lods
xchg
pusha
mov
pusha
addb
cwtl
ret
mov
or
int
mov
aaa
movsl
adc
bound
push
ljmp
lea
sub
mov
inc
or
xchg
ret
cli
fstpl
stc
jne
sub
fwait
stos
xor
jns
leave
rclb
jg
test
adc
movsb
sub
pop
rcr
incl
push
jne
fisubl
mov
fstpl
imul
sub
sub
ds
add
in
iret
mov
mov
lret
push
mov
fsubrs
xchg
cs
xchg
jle
addl
leave
insb
lods
xlat
adc
adc
xor
xchg
aas
dec
mov
and
movsb
ja
push
sbbl
sbb
xchg
cmp
das
push
mov
sub
inc
push
std
mov
mov
ret
mov
xchg
mov
in
or
pop
pop
lock
mov
xor
mov
lret
popa
xchg
scas
stos
and
cltd
shlb
mov
mov
adc
cs
and
sarb
pop
cmc
push
subb
xor
and
dec
shrb
or
adc
xchg
shlb
outsl
addl
or
cmp
add
lods
jmp
push
leave
aad
in
pop
lds
push
cltd
jb
push
pop
dec
fidivl
test
add
and
adc
aaa
mov
pop
int3
sub
xchg
push
aas
hlt
cmpsl
shll
sbb
cmpsb
aad
jbe
mov
cmpsl
outsl
xor
lds
or
mov
sbb
xor
daa
mov
mov
push
jnp
sub
mov
repz
stc
xor
inc
mov
mov
leave
mov
sub
arpl
lods
loopne
jb
mov
into
push
loopne
inc
sub
lcall
sbb
sahf
and
adc
add
in
and
dec
push
mov
out
mov
mov
cmpsl
cld
sahf
mov
test
sub
nop
jns
frstor
fidivrl
dec
sti
or
pushf
push
xchg
sti
hlt
mov
mov
xchg
mov
aam
add
test
les
xchg
popf
cmpsb
fiaddl
add
jg
in
popa
jmp
adc
cwtl
pushf
fsubl
outsb
movsl
cmp
and
xorl
mov
jbe,pn
mov
out
push
cmc
mov
aaa
fidivl
aas
and
into
push
sub
push
les
mov
je
push
ja
out
imul
ficomps
xor
xchg
and
inc
mov
ror
test
pop
out
mov
and
sbb
call
cmp
xor
xchg
aam
xchg
fcompl
call
cwtl
or
leave
icebp
fldt
xchg
out
outsl
fs
leave
adc
mov
daa
jge
ja
sub
imul
cltd
add
pop
xor
xor
adc
push
outsl
cmpsb
or
sahf
test
pop
pusha
push
nop
fsubs
jmp
jge
sbb
popf
rorl
sbbb
mov
test
cmpsb
mov
xor
jae
incl
outsb
dec
fisttpl
mov
callw
lcall
add
repnz
cmpsl
sub
js
sbb
sbb
mov
push
add
shr
in
jbe
and
shll
jbe
movsb
lods
sbb
jb
lock
jmp
fldl
xor
cli
mov
inc
pop
inc
push
xor
jl
mov
movsbl
and
ljmp
mov
pusha
dec
jo
adc
arpl
push
sbb
pop
or
fisubrs
ljmp
shr
dec
jmp
pop
lret
lea
call
inc
movsb
mov
sub
std
jecxz
loope
stc
mov
pop
aam
jns
xlat
das
dec
push
repnz
xorb
shlb
and
xor
cs
in
test
in
int
pop
ficoms
popa
je
inc
addl
mov
sbb
sti
pusha
iret
cwtl
cmp
mov
mov
outsl
fcoms
orb
pop
jg
jecxz
in
adc
xchg
imul
pushf
and
hlt
insl
or
sub
sahf
sbb
mov
mov
pop
mov
mov
test
cmpl
pop
push
out
mov
aaa
ret
inc
cmc
out
or
sahf
sbb
mov
and
jo
dec
popf
ret
xor
adc
int
mov
sbbb
shlb
pushf
inc
lods
sbb
fadd
sub
cmp
xchg
jae
rclb
scas
out
sbb
jmp
push
fiadds
rcrb
into
insl
sahf
mov
and
fldenv
in
aas
cmp
xor
clc
fwait
and
mov
mov
movsb
pop
dec
popa
xor
mov
repnz
mov
lahf
movsl
jb
jne
mov
in
sbb
push
and
mov
mov
cs
insb
cmp
dec
xchg
mov
mov
dec
cmovo
inc
test
push
lahf
mov
mov
push
add
mov
mov
mov
les
shll
hlt
push
xor
fistl
mov
and
fcmovb
in
data16
xchg
pusha
add
jns
push
and
insb
popf
cmp
push
jbe
subb
popa
or
mov
je
xchg
sub
outsb
sbb
pop
test
inc
inc
mov
out
pusha
mov
es
aad
or
sub
fs
add
and
stos
lock
fs
mov
mov
lock
cmp
orl
repnz
adc
loop
ljmp
xor
mov
lods
dec
jnp
jl
jl
loopne
arpl
daa
xor
pop
aas
into
mov
lods
xchg
out
add
ja
push
aam
jbe
out
cmpl
jecxz
aas
jl
push
cmpsl
jbe
in
add
std
out
adc
lret
ljmp
fs
push
sbb
cmpsb
pop
test
adc
adc
pop
outsl
ss
pushf
push
lods
sub
and
push
pop
cs
cmp
and
ss
add
mov
repz
sub
out
mov
mov
fwait
dec
testb
mov
mov
xchg
pop
fcmovbe
mov
fstpl
fdivrl
adc
push
jecxz
sub
mov
lods
bound
fsubrs
or
dec
in
lret
cmpl
in
stos
xor
and
in
leave
addl
push
sbb
roll
push
dec
popf
or
sub
push
andl
mov
pusha
or
cmpsb
lods
push
out
cli
pop
mov
mov
repz
aas
and
iret
lods
mov
loopne
imul
fdivr
es
movsl
filds
inc
dec
xchg
jno
or
shll
cmp
rclb
sbb
gs
inc
jp
lods
mov
or
fdivrl
xchg
cmp
shll
inc
mov
push
out
fs
cmp
shll
aaa
or
jb
jge
ret
xchg
pop
add
mov
cmpsl
inc
cmpsl
xor
sbb
dec
xchg
xor
fcompl
add
mov
loopne
mov
decl
dec
sarb
push
push
shlb
push
pop
adcl
mov
or
sbb
jmp
sbbl
xor
std
cmp
shrb
dec
mov
hlt
dec
jns
sbbb
inc
xchg
add
xor
fstps
jecxz
int
loope
push
notb
add
mov
ret
inc
dec
inc
aaa
or
mov
mov
mov
cmp
ja
daa
inc
test
or
cwtl
mov
cmp
mov
cmp
mov
mov
leave
push
push
sbbl
cmp
sbb
inc
popa
mov
dec
xor
ljmp
iret
cmp
and
dec
popf
push
inc
sub
pop
mov
inc
rcrl
dec
pop
in
cmp
or
mov
icebp
push
pop
jp
mov
fidivl
enter
test
out
mov
jl
pop
loope
je
fldenv
and
push
xchg
ljmp
push
add
cmp
xor
jne
dec
mov
adc
xchg
int
jge
inc
inc
cs
js
and
ja
xchg
xorl
pop
lods
mov
inc
pop
xchg
sub
cmp
push
fnstcw
test
mov
sub
pushf
sbbb
jo
push
cmp
imul
xor
cmp
addb
dec
std
sbb
xchg
jnp
or
xchg
sbbl
in
push
mov
icebp
pmaddwd
mov
push
cmpsb
jns
pop
or
xchg
pop
fidivrl
ficompl
push
inc
lock
push
add
loop
add
out
dec
or
cmovne
push
lcall
shlb
subb
sub
daa
mov
sub
lods
pushf
cmpsl
inc
cmp
jb
bswap
cmp
cmpsl
leave
xchg
adc
sbb
pop
cs
and
cs
lods
leave
std
or
fisubl
repnz
add
jge
clc
push
fadds
push
push
sarl
fwait
inc
int3
mov
adc
test
fidivl
stos
push
ret
dec
cmp
lea
push
add
inc
jl
or
xchg
dec
lock
jp
cli
cltd
lock
scas
mov
adc
aaa
sbb
push
and
lea
pop
push
addr16
xchg
jnp
cmpsb
scas
jle
nop
cmp
xchg
sbb
sbb
xchg
or
in
dec
mov
add
pushf
call
xlat
pop
mov
sarb
dec
mov
test
fwait
xor
enter
test
clc
jmp
dec
ja
pop
sub
mov
cwtl
jle
jmp
sbb
push
aad
sub
cltd
dec
mov
jbe
pop
jne
dec
mov
imul
push
mov
negl
xor
jo
daa
out
and
mov
cltd
dec
mov
cmp
pop
std
das
lds
xchg
sbb
jae
nop
cwtl
in
jae
xchg
push
stos
xlat
fdivrl
jns
cmc
pop
cwtl
jbe
sub
xor
or
insl
lea
xor
outsb
sub
test
stos
inc
cmp
dec
add
fisttpl
in
mov
push
and
stos
lcall
xchg
divl
inc
xor
mov
sub
popa
sub
cld
stc
jmp
sti
popf
mov
pop
shlb
movsl
inc
dec
dec
daa
xchg
adc
xchg
mov
jp
shrl
mov
mov
dec
cwtl
call
ret
ds
ja
jg
movsl
sbb
mov
inc
repnz
add
xor
out
mov
jp
aas
in
aad
and
xor
cwtl
sub
or
fstpl
push
xchg
cmpsb
scas
or
or
cmp
out
cli
sbb
stos
test
hlt
xchg
pop
pop
pop
cmp
dec
lcall
cmp
ret
push
adc
xchg
ficoms
ds
movsl
aam
pop
or
cmp
cmpb
in
mov
imul
inc
add
xchg
shr
les
cmc
imul
cmpsb
btr
fmull
inc
scas
push
movsb
je
mov
pop
pop
lea
cs
in
test
mov
lahf
fisttps
enter
and
push
adc
in
inc
push
sti
dec
repz
sbb
pop
test
pop
mov
or
movsl
cmp
xchg
mov
loop
jo
push
test
jp
daa
inc
xchg
sbb
cltd
fldenv
pop
and
adc
daa
mov
pop
inc
ret
dec
scas
clc
mov
sarl
test
rcrl
ficomps
mov
sub
push
mov
push
bt
push
jb
cmc
jle
das
ljmp
cltd
or
insb
nop
mov
pop
xchg
push
call
mov
sbb
adc
stos
push
out
mov
aam
sub
add
mov
out
xchg
leave
jae
inc
test
inc
push
sub
dec
sarl
popf
mov
pop
pop
inc
jo
dec
xchg
sahf
lods
out
cmp
jne
test
test
inc
xchg
enter
cmp
inc
cmpsl
cmp
loop
xor
mov
imul
mov
sub
and
mov
sbb
and
int3
xor
dec
adc
cwtl
inc
shlb
orb
mov
std
add
lahf
sbb
movsb
push
dec
jmp
shr
mov
xchg
add
mov
hlt
mov
jno
lea
fdiv
fxch
iret
jns
cltd
lret
jge
inc
rcrl
loop
int
add
out
in
add
adc
xchg
xor
or
dec
dec
cmp
inc
inc
jecxz
xor
pop
jb
fdivr
outsl
dec
js
mov
jge
cltd
subb
pop
add
lds
addb
jae
in
mov
dec
mov
ror
cmp
cmpsb
add
push
lods
mov
pop
pop
icebp
lahf
test
mov
sub
scas
or
mov
jp
jne
rcll
xchg
xor
icebp
push
xor
dec
stos
popl
adc
dec
pop
jae
lds
sbb
dec
cli
lods
and
andl
bound
into
aaa
inc
mov
shrl
imul
xchg
add
jle
xor
add
cwtl
call
bound
cmp
pop
repnz
and
rcr
inc
test
or
lret
xchg
popf
adc
dec
gs
bound
jp
lock
dec
inc
fisubrs
out
daa
add
xor
test
lcall
mov
test
adc
xor
aaa
push
mov
pop
jmp
test
mov
pop
bound
mov
dec
mov
cmp
push
add
cmp
jno
inc
aad
mov
pop
pop
mov
lods
dec
loope
pop
ret
pop
dec
gs
xchg
dec
sti
loopne
push
mov
shll
jge
cli
push
xchg
shr
mov
subb
loop
and
pop
aaa
mov
mov
dec
and
adc
test
mov
mov
scas
loop
push
lret
aas
hlt
cwtl
aad
mov
add
cmp
sbb
add
cwtl
cli
cmp
push
popl
aas
repz
xchg
and
mov
in
lret
xchg
xor
jp
lahf
inc
gs
mov
stc
aad
mov
std
test
gs
arpl
add
fstpl
mov
push
lahf
stos
fisubl
jo
push
pushf
fistpl
or
jp
sbb
xchg
adc
push
cli
xchg
inc
mov
test
js
and
mov
lahf
mov
mov
call
clc
clc
mov
lods
mov
cmc
or
sbb
mov
fldt
sub
in
xchg
test
pop
insb
xchg
popf
adcl
inc
mov
sub
or
mov
fistpl
pusha
popa
out
jg
add
jnp
aad
mov
insl
lock
cmp
mov
loop
js
out
or
in
adc
punpckhdq
inc
js
outsl
and
fidivs
repz
or
inc
lock
fnstenv
mov
inc
mov
push
hlt
insl
mov
push
pop
push
mov
je
or
outsb
dec
jo
sub
lahf
andl
scas
xchg
popf
nop
mov
jp
mov
xchg
les
mov
push
gs
mov
stc
mov
mov
or
data16
in
add
and
sub
es
pop
xor
ljmp
test
pop
mov
fisubrl
imul
jnp
aad
jecxz
dec
orb
inc
dec
stos
push
fisubl
lea
xchg
push
mov
mov
out
outsl
imul
jmp
xor
add
sbb
adc
hlt
push
mov
sbb
sub
pop
cmpsb
adc
pop
loop
inc
out
adc
notb
arpl
mov
push
add
popl
imul
add
sbb
rcrl
int3
addr16
ss
in
orl
lea
divl
int3
xchg
ret
sub
inc
xchg
cmpsl
int
ds
xchg
stos
mov
mov
fnstsw
fs
mov
repz
out
push
pop
mov
popl
pop
cmc
fdivl
popa
sub
inc
ljmp
scas
mov
testl
xchg
ret
mov
xchg
xchg
mov
mov
dec
test
pop
xchg
data16
adc
pushf
or
mov
jg
inc
xchg
add
add
int3
push
sbb
mov
mov
lahf
adc
cmp
pop
cmp
loop
adc
subl
out
xor
ss
je
pushf
xor
push
adc
or
and
inc
sbb
in
clc
call
clc
mov
jne
push
stos
ds
icebp
xchg
push
lock
mov
leave
add
push
jge
xchg
mov
jge
xchg
cmpsl
mov
sbb
xor
mov
pop
add
add
xchg
jmp
ret
inc
or
andb
mov
push
in
popf
inc
out
scas
mov
rol
imul
nop
xchg
mov
bound
pop
pop
lret
xor
sub
dec
imul
push
imul
jmp
pop
cmp
mulb
out
aas
mulb
jno
mov
mov
pop
sbb
stc
xchg
push
xor
adc
mov
jae
cmpsb
mov
mov
adc
add
jbe
mov
push
pop
or
lds
and
fidivl
out
or
mov
cmpsb
push
sub
cmp
out
outsb
test
inc
enter
in
clc
pop
add
push
pop
data16
cmpsb
adc
testb
dec
mov
adcl
xchg
pusha
lea
arpl
adc
rorl
das
pop
rorl
stos
jl
cltd
dec
loopne
test
imul
push
lods
mov
cmp
xchg
scas
jbe
cld
les
xor
xlat
in
and
and
aam
pushf
add
mov
pusha
test
iret
sbb
dec
bound
imull
inc
das
adc
bound
cld
fcoms
mov
jle
cld
or
aas
sub
out
xlat
leave
je
jp
inc
ret
adc
pop
fdivs
xchg
add
push
rcrb
sbb
scas
fmull
xchg
jno
lret
adc
in
icebp
clc
fdivrs
pop
fwait
sbb
ret
sbb
and
cmp
adc
adc
mov
popf
xor
cli
bound
xor
inc
dec
jmp
mov
pusha
push
jne
cmp
cmp
cmpsl
jne
sub
pop
xor
sbb
fcmovbe
cmp
stos
fnsave
jp
imul
scas
push
clc
jb
push
mov
imul
xor
xor
mov
cwtl
push
pushf
int3
mov
adc
dec
data16
jo
cmp
adc
adc
cmp
fiadds
cld
add
mov
cwtl
cwtl
and
mov
mov
mov
dec
mov
rolb
xchg
lcall
pop
push
neg
lret
jge
das
fmuls
push
fsts
xchg
iret
inc
imul
sbb
mov
out
repz
sti
or
sub
imul
mov
insb
fsub
outsl
rcrl
in
adc
loope
push
lods
push
mov
frstpm(287
aad
repnz
xlat
or
cmp
mov
movsb
orb
and
loopne
sbb
int3
lahf
jae
xchg
or
jb
xchg
xchg
or
and
leave
and
push
aam
aas
jnp
lea
lret
mov
dec
pop
ret
call
xchg
push
adc
adc
mov
lds
mov
or
clc
sub
cmpb
jno
add
xor
in
loop
cmpsl
jp
sbb
imull
gs
cltd
ret
into
dec
out
inc
fstl
out
cmc
pop
lret
lock
push
repnz
mov
sub
pop
pop
mov
idivb
shrb
add
push
push
scas
outsl
pop
and
jns
pop
or
pusha
mov
aaa
mov
pusha
mov
add
and
sub
or
dec
cmpb
cli
cmp
or
cmp
mov
mov
mov
loop
xor
loope
or
aad
fstp
sbb
repnz
pop
sub
mov
jg
lahf
jmp
sbb
scas
scas
into
pop
flds
push
or
dec
jg
sbb
int3
sbb
dec
jmp
fildll
inc
or
mov
add
mov
jbe
mov
out
jecxz
call
lods
and
aam
or
imul
xlat
pop
mov
inc
cmp
test
shr
sub
and
cli
and
mov
cmpsl
inc
fcomps
cmp
jmp
mov
loop
sbb
aas
mov
mov
adc
loope
add
cmpsb
les
adc
push
inc
sahf
fdivrs
hlt
pop
call
dec
xchg
push
adc
cmp
icebp
sub
mov
mov
cli
jecxz
mov
add
mov
xor
mov
xorl
out
enter
inc
test
jo
repz
lds
js
stc
inc
sbb
insb
sti
jle
outsb
jnp
fsubrp
xor
xorl
test
xchg
mov
clc
imul
xchg
inc
mov
popf
jmp
or
add
jb
dec
into
mov
test
sbb
dec
or
cwtl
inc
cmpsl
inc
ret
cmp
jecxz
dec
pop
cmp
mov
rorl
je
mov
repz
mov
cmpsl
cld
push
popf
mov
lret
je
mov
in
xor
es
cmp
out
inc
adc
sbb
xchg
inc
adc
xor
jmp
and
imul
cmp
sub
sub
mov
imul
fcmovnbe
das
pop
inc
ret
mov
cmp
call
inc
ret
pop
insb
mov
jg
mov
pop
sbb
add
push
or
xor
scas
dec
mov
and
daa
in
data16
hlt
lcall
sub
xlat
nop
pushf
mov
fwait
addr16
lahf
sbbl
pop
and
push
jbe
jns
jns
movsb
std
push
or
repz
dec
sub
or
lds
mov
and
pop
clc
mov
rcll
pop
cltd
or
and
push
or
loopne
push
lea
stos
lret
and
in
loop
push
xchg
dec
addr16
pushf
call
mov
nop
and
pusha
jecxz
shll
pop
jl
xchg
mov
xlat
rorb
fs
push
add
leave
fdiv
nop
jecxz
mov
fcmovnbe
push
orl
pop
jl
insl
cltd
clc
mov
scas
call
mov
cwtl
pop
stc
cld
push
push
mov
fisttpll
aad
ds
or
mov
add
mov
add
cmp
mov
pop
std
aam
adc
pop
pushf
mov
jo
ja
fisttpll
icebp
es
add
xlat
scas
xchg
out
sbb
xor
mov
mov
pop
stos
push
add
mov
push
xchg
popf
adcl
push
loope
xor
es
cmpb
lcall
lret
cmp
cmpb
dec
pop
enter
inc
pop
xchg
mov
sub
dec
loope
adc
mulb
addr16
mov
sahf
dec
jbe
insl
mul
dec
cmpsb
sahf
adc
repnz
sbbl
addr16
sbb
pop
sbb
xchg
setns
dec
pusha
mov
sbb
push
movsb
in
repz
add
pop
jp
stc
fld
inc
insb
mov
inc
fisttpll
inc
add
mov
stos
mov
mov
leave
repnz
push
gs
insl
and
aad
or
test
add
mov
cli
gs
out
cmpsb
imull
xchg
push
ds
sub
sub
popa
push
xchg
dec
out
scas
pop
push
mov
jne
xor
in
push
adc
pop
mov
xor
ret
adcl
ret
inc
jae
sahf
xchg
loopne
iret
mov
cmp
outsl
jle
mov
cmc
imul
fwait
mov
mov
les
mov
mov
bound
scas
mov
xchg
pop
jecxz
xlat
mov
xor
lret
and
xor
and
pop
stos
mov
push
nop
and
inc
xor
push
xor
imul
orb
das
mov
dec
jns
scas
cltd
mov
or
or
sub
sbb
xchg
pop
adc
pop
cld
das
push
icebp
repz
jbe
mov
xor
and
test
push
enter
pop
insl
hlt
xchg
add
movsb
cwtl
pop
dec
inc
mov
jo
repz
dec
jmp
sub
js
loopne
js
mov
push
std
lahf
bound
nop
inc
pop
pop
outsb
sarb
cld
xchg
lods
mov
adc
xorl
mov
inc
bound
cmp
ret
push
inc
xchg
ja
jne
fbld
lahf
push
hlt
add
push
sti
jmp
pop
aam
loope
jmp
push
aaa
lds
lea
lds
mov
ret
jl
push
in
jge
ficomps
cmpsb
arpl
sbb
sub
out
lahf
mov
adc
clc
cld
and
inc
ret
lahf
push
push
lret
or
or
test
cmp
or
insl
ds
mov
xchg
aam
mov
mov
jl
mov
adc
add
add
std
sbb
add
push
popf
push
lds
dec
or
mov
and
sbb
sti
movl
mov
arpl
ja
mov
xor
xchg
push
hlt
test
xchg
push
mov
mull
mov
movsb
mov
or
shrb
mov
in
stos
jo
fisubs
leave
pop
pop
outsl
ss
push
adc
add
ret
in
arpl
or
add
xchg
lret
addl
jmp
rcr
cwtl
pop
aad
lret
stos
jnp
adc
dec
test
cs
or
jp
test
jbe
inc
pusha
add
mov
xlat
or
pop
mov
sbb
push
pop
pop
outsb
stos
enter
fwait
and
stc
mov
cmc
lods
dec
adc
in
lcall
rolb
pusha
xor
inc
bound
mov
pop
cmpsb
loopne
enter
pop
aad
int
pushf
ror
stos
jg
push
decb
mov
or
mov
dec
and
xor
pop
mov
sahf
dec
sti
pmaxsw
repz
mov
push
inc
sbb
ds
inc
mov
xchg
shl
push
cmpsb
call
push
mov
adc
cmp
cmp
pop
jnp
sub
xchg
sub
imul
outsb
stos
and
push
outsl
jle
and
mov
call
dec
push
leave
or
fsubrp
xchg
and
or
jae
stos
lods
inc
xor
mov
xlat
mov
daa
add
lods
xor
mov
es
push
frstor
cs
movsb
lret
adc
jb
test
aam
add
sub
adc
jae
and
sub
and
inc
adc
and
xchg
popf
rorb
mov
jo
leave
inc
dec
push
ja
rcrb
ja
in
sub
loopne
and
and
out
sub
orb
cmp
dec
mov
je
push
mov
and
dec
bound
mov
sub
ja
divb
or
out
lahf
pop
popf
xor
cmpsl
shl
inc
leave
bound
out
nop
inc
sub
mov
mov
pop
or
mov
inc
xchg
lret
xor
mov
sub
mov
cmp
dec
outsl
adc
mov
repz
les
data16
test
push
fwait
mov
mov
stos
push
mov
repnz
in
sbb
inc
push
dec
int3
gs
ss
dec
mov
sub
xor
and
or
xchg
addr16
inc
jecxz
stos
dec
int3
sub
out
test
loope
int
xlat
push
pop
jp
sub
push
and
push
lods
sub
sub
adc
lahf
lods
mov
push
mov
push
cmp
xlat
push
arpl
push
daa
push
mov
inc
mov
xor
popf
gs
lock
xchg
iret
push
cmp
js
jp
sarl
sub
add
xlat
ffreep
fstpl
mov
dec
out
aaa
test
ret
ret
fadds
es
lahf
cmp
cwtl
lret
adc
dec
hlt
cmp
xor
cmpsl
ljmp
repz
in
je
out
cld
and
cltd
or
int3
ljmp
cmp
mov
push
xchg
repnz
pop
sub
push
movsb
or
popf
shr
adcl
xor
add
adc
push
aas
sbb
xchg
loope
call
punpckhdq
pop
fistpl
mov
xor
icebp
imul
in
mov
dec
mov
lret
imul
das
pop
jne
fwait
inc
add
pop
xchg
std
out
mov
popa
pop
dec
test
adc
sbb
add
fisubrs
outsb
xchg
lock
cs
mulb
insl
insb
jl
jbe
mov
push
inc
mov
push
dec
lea
out
mov
popa
daa
mov
dec
inc
push
adc
ja
push
js
sarb
push
sub
mov
jge
popa
and
add
push
das
sar
push
xchg
movsb
out
push
pop
bound
mov
jp
cltd
fsubrs
mov
nop
mov
add
mov
xorb
lret
addr16
pop
push
testl
mov
cmpsb
push
push
fwait
repz
scas
bnd
lcall
fidivl
cld
imull
test
push
add
pusha
enter
test
popf
aam
lahf
sbb
test
insb
in
adc
test
sbb
push
inc
pop
pusha
repnz
das
sarl
inc
xchg
dec
inc
mov
insb
jle
outsb
push
fnsave
in
xor
pop
std
mov
dec
decl
dec
jae
mov
jecxz
xor
out
dec
scas
shl
mov
push
stos
push
xor
jne
dec
aam
push
popa
sbb
xchg
push
cmc
pop
add
sbb
out
aam
jl
pop
xor
pop
jns
cmp
xor
lret
xchg
mov
adc
xlat
psadbw
cmp
add
ja
sahf
xor
sbb
jno
mov
inc
inc
fstpl
sub
jb
mov
sahf
pusha
lret
rcrl
pop
mov
lds
stos
sbb
scas
pop
repz
sub
sarl
adc
stc
push
out
sbbb
xchg
mov
and
inc
fucomi
xor
in
das
push
aas
and
in
push
mov
push
pop
repnz
scas
dec
jge
mov
nop
iret
lea
jae
jbe
and
cmp
sbb
mov
imul
and
inc
scas
repz
incb
das
cmp
icebp
cld
adc
adcl
popa
in
inc
push
lods
fldt
cmpsb
dec
xchg
das
out
xor
hlt
sbb
rolb
test
loop
cltd
in
gs
mov
cmp
imul
bound
jae
adc
imul
lds
push
cmp
fldt
cltd
loop
mov
sub
sbb
sbb
dec
push
add
and
cmp
outsb
and
pop
lahf
and
jnp
xchg
bound
add
and
cmp
stos
mov
arpl
add
dec
movsl
into
and
mov
mov
scas
cmp
test
in
adc
int
cld
adc
add
or
movsl
dec
loopne
arpl
dec
add
popa
iret
dec
inc
mov
pop
xor
rorb
xor
movsl
sbb
jns
mov
push
sarb
minps
loope
sbb
sbb
and
cs
imul
sub
sti
mov
sahf
adc
jne
adc
add
pop
sub
jmp
inc
xchg
les
stc
cwtl
fcomps
mov
mov
adc
and
rorl
dec
stos
inc
xchg
mov
es
jo
imul
das
cltd
ljmp
jb
ret
adc
jl
inc
xor
into
stos
fisubs
flds
lahf
daa
push
jae
enter
outsl
mov
sub
xchg
cmpsb
or
pop
inc
scas
addr16
and
inc
add
or
hlt
mov
movsb
mov
scas
jne
adc
mov
dec
call
mov
pusha
dec
push
ds
in
mov
ficoms
popf
jb
data16
pop
push
hlt
mov
adc
add
flds
xchg
sbb
inc
cmp
or
fwait
push
ret
dec
mov
adc
mov
xchg
sahf
outsl
ret
jnp
gs
mov
test
int
adc
jmp
jmp
aam
inc
push
insl
sbb
faddl
aam
jo
mov
and
popa
pop
lcall
mov
loope
pushf
inc
or
movsb
out
fcomip
loop
aaa
stc
mov
inc
aaa
pop
sub
sbb
enter
ror
pop
mov
fistpl
add
shr
mov
xchg
loop
inc
cmp
mov
fstpl
xchg
in
adc
subl
push
jae
add
push
call
xchg
outsl
mov
dec
inc
xchg
mov
push
pushl
xchg
or
jle
mov
mov
xchg
mov
aaa
push
mov
sbb
arpl
test
mov
lods
lret
jb
push
mov
push
fbstp
ja
jle
aad
les
sub
arpl
icebp
aam
mov
add
push
call
mov
sub
loope
enter
and
mov
les
or
js
gs
jecxz
mov
rolb
jle
stos
enter
daa
dec
jbe
xor
cmpsl
and
mov
loope
ficoml
test
ds
scas
loopne
xor
inc
insb
pop
int3
mov
jb
lret
addr16
push
shrb
into
or
push
jb
adc
jmp
cwtl
pop
cmpsl
cmp
push
pop
loope
dec
push
movsb
mov
stos
sbb
sbb
pushf
aaa
xchg
fsubp
xorl
movsb
fnsave
mov
incl
loopne
mov
loope
mov
xchg
jle
push
lret
lahf
sub
cli
and
or
push
pop
outsb
and
call
mov
mov
sub
scas
mov
mov
push
sbb
pop
ljmp
iret
shll
shll
jecxz
adc
inc
loope
mov
mov
mov
iret
push
cwtl
push
add
mov
js
pop
cwtl
cmpsl
lock
rorl
mov
enter
clc
cmc
mov
dec
xchg
pinsrw
imul
call
xchg
cmp
pop
fidivrl
add
mov
outsl
push
outsb
gs
enter
fwait
adc
clc
mov
lret
add
mov
sub
jl
vmovlps
xchg
mov
pinsrw
inc
leave
push
int
sub
and
or
push
cmp
movsl
xchg
add
mov
jnp
repnz
mov
cld
or
insl
dec
lcall
or
xor
insl
xchg
adc
add
int
fiadds
mov
pop
fiadds
inc
push
xchg
push
or
fdivrs
pop
in
cmp
xchg
outsl
mov
mov
push
es
out
jb
sub
sub
test
mov
sub
test
into
xchg
mov
leave
sbbl
push
cs
xchg
cmpsl
cmp
loopne
xor
push
mov
aam
cmpsb
iret
sarb
les
fld
js
imul
mov
ret
push
mov
push
int3
pushw
xor
sub
clc
dec
out
leave
cmc
outsl
shl
rolb
xchg
fs
cmp
mov
push
jl
mov
jbe
or
xor
xchg
mov
xchg
loop
add
fcoms
cwtl
push
shlb
mov
aad
cwtl
repz
pusha
mov
pop
or
cmp
dec
mov
test
ret
movsb
pop
and
call
fidivs
mov
loop
xchg
fadd
adc
fdivl
or
mov
adc
cmpsb
shl
shrl
scas
dec
dec
cmp
cltd
hlt
stos
inc
sbb
bound
jae
bound
in
shl
pop
sub
jo
test
les
jno
out
cld
sahf
mov
outsl
or
icebp
xor
lcall
dec
imul
pushf
je
or
cmp
addl
inc
xchg
fstl
xor
or
daa
xorb
mov
sbb
cld
sub
adc
cmp
cmpsl
jne
imul
and
add
mov
inc
dec
imul
push
jns
loope
jnp
out
sbb
mov
cld
scas
dec
sbb
into
imul
and
cltd
rorl
loope
mov
add
inc
aaa
movsb
cwtl
dec
dec
int
mov
sbb
int
orb
push
inc
pop
mov
bound
stos
ja
inc
push
mov
das
dec
fistpll
out
in
shll
or
jno
data16
push
push
sbb
mov
mov
sub
jl
out
rorb
sbb
sub
push
xchg
lcall
add
jne
dec
daa
cld
push
xchg
adc
loopne
lods
lea
sub
add
xchg
sub
lods
enter
or
or
das
push
in
sbb
ljmp
daa
mov
sub
aas
pushf
fistl
cli
dec
imulb
xchg
or
ds
pop
push
sub
insl
bound
aaa
into
pop
dec
jno
out
lahf
push
aaa
dec
out
int
sbb
inc
dec
clc
and
test
or
jb
clc
lods
scas
cmp
jne
test
imul
sti
cmp
ficoms
fidivl
cmpsb
add
loope
hlt
ja
add
xchg
sub
xchg
jecxz
or
sbb
inc
cmp
jge
xor
lods
bound
jle
cmp
xchg
sbb
add
mov
les
mov
enter
mov
icebp
push
pop
bnd
inc
mov
loop
cmc
outsl
sbb
cmc
std
mov
jecxz
test
movsl
es
subl
fucomp
inc
les
cmp
aaa
and
decb
inc
mov
dec
std
xor
push
jns
jmp
out
push
mov
mov
movsl
or
pop
rorl
xor
rorl
mov
jne
int
or
lock
outsb
mov
xchg
in
xor
int3
fistl
in
add
mov
cltd
imul
dec
iret
int3
add
push
stc
inc
mov
hlt
rclb
fsts
cmp
pop
sbb
jns
adc
pop
mov
outsb
xchg
fidivrl
jne
sbb
lcall
xchg
xchg
xlat
je
jecxz
sbb
dec
cmp
mov
add
leave
push
rcrl
pop
jns
mov
mov
test
add
fwait
add
test
pop
fsubrs
insl
jge
xor
xchg
mov
pop
xlat
and
xchg
lret
stc
cmp
mov
test
cmp
push
ficompl
and
lock
or
fcoml
out
or
fmull
push
in
es
xchg
add
xchg
mov
mov
cs
cmp
lock
fwait
cltd
jno
dec
out
adc
xchg
ja
lret
inc
cwtl
mov
push
cmp
mov
add
mov
mov
or
es
std
jno
dec
cmc
xlat
fldenv
sub
popf
sti
cltd
cmc
inc
dec
fcmovb
aam
push
loop
rol
xchg
int
push
sbb
and
pop
push
in
std
mov
iret
repz
nop
pop
mov
je
call
dec
aam
aam
cmp
sarl
leave
fsqrt
mov
push
scas
and
xor
shlb
mov
test
inc
add
aam
cwtl
mov
mov
loope
jo
outsl
dec
popa
mov
rolb
xchg
cld
dec
in
mov
add
ljmp
ss
roll
jmp
sbb
mov
inc
jl
push
outsl
pushf
lahf
mov
movsl
inc
test
dec
add
jo
aad
je
mov
inc
push
dec
dec
add
jge
mov
stos
cs
inc
mov
subl
dec
scas
aam
mov
repz
mov
fmull
cmp
cmpsl
cmpl
push
add
lods
out
inc
pushf
jne
repz
lods
arpl
in
fsubrl
sub
mov
mov
orl
loop
inc
mov
xlat
mov
nop
sbb
movsb
rol
sub
cmc
shl
and
lahf
push
test
dec
fstps
mov
ret
bswap
loope
imul
jo
and
mov
inc
pop
add
fisttpll
and
mov
jno
mov
mov
fadds
mov
cmpb
fld
xchg
dec
push
inc
cwtl
hlt
sti
iret
int3
add
fmull
arpl
mov
mov
mov
push
pop
popa
ja
cmp
in
lods
adc
sbb
mov
mov
hlt
add
jp
addr16
jge
notb
dec
sbb
hlt
lods
addr16
xchg
fmull
pusha
xchg
jecxz
lock
mov
add
inc
test
push
int3
into
and
test
inc
outsb
fidivl
rcr
xchg
and
mov
mov
and
cmp
loope
sub
pop
mov
push
and
and
outsb
gs
jnp
aaa
pop
mov
jne
mov
and
jb
xor
lea
sub
pushf
shlb
inc
arpl
stos
pop
lret
xchg
test
mov
sahf
aad
sahf
cs
and
jg
cmpsb
lret
mov
inc
mov
stc
and
std
mov
mov
and
dec
xor
push
lock
cs
jl
jnp
inc
sub
pop
std
hlt
orl
lret
cli
ds
sbb
sub
xor
and
mov
jb
loopne
mov
mov
popa
aaa
loop
xchg
jmp
aam
xor
jmp
push
add
jmp
sub
cmp
jae
pop
xchg
mov
ror
adc
clc
mov
cmpsl
push
mov
mov
cmp
ljmp
cli
or
mov
sahf
sahf
jle
pop
jbe
mov
les
daa
mov
pop
xchg
sub
adc
sub
push
push
xchg
mov
adc
push
out
loop
jmp
pop
xchg
andl
push
adcb
adc
frstor
dec
mov
jecxz
sbb
pushf
imul
or
ds
cs
jp
stos
add
add
push
out
dec
popf
test
orb
jae
sub
and
jmp
inc
xor
call
cmp
icebp
inc
rcll
xchg
popf
arpl
push
test
cmp
jecxz
dec
daa
or
out
jp
les
je
and
push
xor
pop
daa
out
sti
or
sbb
and
or
mov
and
fsubl
sub
aaa
and
mov
jle
or
fwait
pushf
sbb
pop
dec
dec
pop
in
jge
roll
mov
add
jne
xchg
jl
arpl
fwait
mov
test
mov
aad
cltd
je
push
arpl
inc
jmp
outsb
rcr
xchg
icebp
cmp
jp
sbb
dec
divb
lock
popf
sbb
leave
xchg
and
dec
pop
dec
push
mov
int3
sbb
aad
sbb
push
shr
pop
mov
lahf
mov
mov
insb
insb
call
in
lret
xor
push
push
cmp
cmpsb
dec
pop
xchg
int
xchg
imulb
daa
dec
push
dec
jle
sbb
xor
rorb
aam
std
dec
ret
sub
mov
cld
and
test
jecxz
stc
mov
insl
je
push
pop
dec
mov
testl
addr16
xlat
out
fsubr
dec
fwait
stos
xor
xchg
cld
dec
cwtl
clc
mov
adc
mov
dec
rcll
aam
push
leave
jmp
jb
mov
sarb
mov
or
mov
mov
jmp
dec
imul
fmuls
es
leave
mov
jae
xchg
cmp
in
movsl
cmpsl
mov
pop
dec
xchg
insl
add
mov
in
dec
dec
pop
cmpsb
nop
rclb
mov
or
sub
xor
sbb
inc
imul
lahf
rorl
fwait
mov
clc
daa
push
inc
movsb
repz
daa
push
and
cld
sub
mov
les
cmc
xchg
fiadds
inc
sbb
fwait
pop
mov
mov
pop
xor
gs
jge
jecxz
push
dec
sbb
xchg
dec
aaa
ret
mov
sbb
leave
jo
mov
cmpsb
push
dec
mov
iret
mov
outsb
ljmp
pop
mov
fiadds
xchg
push
or
roll
ljmp
jo
stos
clc
int
fcoml
sub
mov
arpl
adcb
xor
bound
pop
jmp
lods
mov
xorb
or
jae
hlt
lret
addl
sub
lods
imul
cli
jp
mov
mov
gs
inc
sub
add
xor
inc
mov
sbb
cmp
push
jge
dec
int
or
mov
push
outsl
dec
dec
xor
or
js
and
loopne
jb
push
push
pop
dec
mov
xchg
in
pop
xchg
mov
leave
inc
scas
jle
shr
adc
andl
jno
loope
xchg
xchg
enter
lods
push
rcrb
mov
pop
ficoms
leave
jmp
mov
jne
loopne
setae
mov
sti
xor
ftst
daa
mov
and
jmp
cmp
add
jns
loop
lock
cmp
add
mov
out
js
jae
stos
or
pop
sbb
and
lock
jmp
pusha
xchg
cld
sub
xchg
call
xchg
or
rorl
ljmp
mov
jmp
mov
sahf
jecxz
fiaddl
js
mov
data16
mov
push
ds
push
enter
inc
xlat
cwtl
or
shlb
adc
ror
imul
jp
into
imul
repz
imul
ljmp
pop
sbb
mov
sti
repnz
push
shrl
add
mov
add
sub
add
vmovlps
push
fbstp
popa
mov
scas
add
mov
mov
out
jb
out
inc
jp
jne
push
push
jmp
inc
adc
jl
adc
data16
mov
dec
cmp
pop
sub
pop
mov
or
mov
xchg
in
dec
dec
push
and
loope
cmp
sbbl
cmpxchg
out
mov
jbe
sbb
arpl
lds
aam
and
adc
mov
pop
add
cltd
insl
sahf
lods
dec
dec
push
mov
out
mov
push
or
inc
call
push
sbb
dec
push
ja
pop
lea
mov
mov
xchg
pop
nop
mov
push
je
or
das
mov
les
jns
jnp
mov
jge
lret
sbb
jno
ret
aaa
mov
jns
xchg
xchg
fsubl
pop
cwtl
rcr
arpl
or
inc
leave
push
outsb
hlt
add
enter
add
std
movsl
mov
loope
sub
push
jmp
xchg
push
hlt
jne
fs
insl
jns
cs
arpl
faddp
pop
jmp
sub
fdivrl
sub
push
mov
sti
iret
jns
dec
cmpl
or
shlb
xchg
add
and
call
mov
mov
add
aaa
xchg
int
mov
jne
pop
mov
lea
pop
fnstsw
lret
xor
in
mov
adc
pushf
pop
cmp
push
js
jbe
mov
sub
jno
xchg
cltd
cmpsl
int3
das
movsb
repz
cltd
scas
pusha
inc
xor
decb
ja
push
xchg
loopne
inc
icebp
pop
xor
adc
pop
push
mov
dec
and
faddp
jge
ret
ja
test
add
dec
or
es
and
xlat
mov
mov
call
add
mov
pop
cld
mov
sub
fmull
xor
adc
loop
addr16
xorl
mov
or
pop
inc
xor
ret
scas
push
inc
divl
jb
fwait
pop
adc
daa
les
and
shl
jne
or
loopne
sub
mov
loopne
adc
pusha
mov
cmp
les
add
pop
aam
adc
jl
into
mov
and
in
ss
imul
mov
xor
cmc
gs
ret
adc
decb
andl
push
pop
jns
outsb
repnz
stos
jg
hlt
lcall
dec
jl
stos
xlat
mov
sub
dec
aas
imulb
mov
outsb
stos
es
jo
out
push
xor
je
mov
test
in
push
icebp
aaa
adc
mov
roll
rcll
jmp
adc
rcr
mov
test
mov
je
jp
mov
push
dec
call
xchg
stos
stc
fs
xchg
clc
and
inc
fisttpll
sbb
inc
mov
cli
pusha
add
dec
int3
jmp
aam
xor
inc
outsl
es
data16
push
mov
xor
cmpsb
inc
mov
shll
mov
sub
pop
call
adc
add
xchg
call
fmul
roll
add
adcl
push
fisubl
fldenv
mov
ficompl
xor
in
jb
fstpl
rcr
dec
add
dec
sub
adc
sbb
mov
add
int3
xchg
aaa
push
scas
icebp
test
adc
lret
push
add
add
push
in
sub
mov
and
les
dec
xchg
push
xor
pop
push
and
or
dec
fldt
roll
iret
add
mov
cmp
arpl
pop
outsl
mov
or
xchg
inc
mov
mov
push
jae
rcrb
repnz
int3
xchg
test
sbb
stc
mov
aad
lock
out
out
dec
sbb
jmp
sbb
jae
jp
mov
mov
jg
enter
in
cmp
xchg
fiadds
lret
push
mov
fisubs
add
mov
xor
or
scas
lods
mov
dec
and
popf
repnz
adc
and
mov
outsl
repnz
jno
fisubrl
jno
mov
leave
push
mov
jnp
lret
dec
jb
cmp
adcl
clc
sbb
int
fldt
mov
inc
insb
cmpsb
and
scas
sbb
jae
lea
or
add
push
xchg
mov
shl
mov
push
sarb
or
inc
inc
fidivs
inc
int3
or
test
rolb
push
add
dec
mull
ja
sbb
lods
mov
pop
stos
test
jae
loope
mov
fnsave
push
imul
or
int
leave
xchg
cmp
cld
insb
lds
std
or
mov
mov
lods
mov
cltd
es
or
sti
loope
clc
ret
loopne
or
shl
stos
fs
push
xor
in
inc
mov
out
sbb
fcmovb
in
fistps
lds
shll
pusha
jo
bound
and
adc
jp
or
dec
jno
pop
js
mov
mov
push
out
mov
dec
loope
jne
sbb
add
xor
add
mov
mov
ljmp
sub
push
test
dec
pop
push
jge
ja
in
adc
xor
in
mov
enter
sarl
dec
aad
lock
xchg
test
mov
out
pushf
int3
mov
inc
mov
push
or
cld
cmp
icebp
jmp
cmpsb
xchg
imul
ljmp
mov
bound
fwait
push
jo
xor
loope
inc
sbb
mov
xor
fsts
jo
or
cmp
sbb
sti
xchg
stos
push
in
xor
cmp
pop
in
int3
push
stc
les
jbe
push
or
inc
imul
je
or
scas
out
xor
or
std
sub
pusha
dec
jg
in
aam
jno
adc
aad
mov
push
movsb
es
lods
add
adc
jp
sbb
rorb
xchg
cmp
cmp
int3
outsl
adc
mov
pop
mov
sbb
push
cmp
xchg
or
sub
add
je
jp
shll
push
cmp
mov
cmp
lock
and
push
xchg
into
mov
jno
cmpb
cmp
sbb
or
or
shll
clc
mov
aas
mov
shl
loopne
mov
cld
mov
sub
push
sub
mov
and
cltd
test
push
out
pop
neg
je
imull
adc
fildll
imul
add
or
in
push
pop
rorl
pop
jae
out
adc
lret
outsb
punpckhbw
sarl
addb
out
dec
hlt
dec
xor
cmpsl
test
mov
inc
mov
mov
xor
rol
je
shl
dec
xchg
cmp
cmc
or
pop
jl
stc
mov
sub
and
sub
mov
mov
mov
lret
sub
push
sahf
dec
sbb
in
mov
fwait
imul
add
ret
scas
sub
adc
jmp
sub
rcrb
sbb
adc
mov
jns
push
sub
adc
mov
sti
sub
mov
and
daa
sarb
rcrl
push
adc
or
scas
clc
xor
jno
ret
or
psubusb
sub
sbb
push
les
aaa
icebp
cwtl
data16
dec
nop
push
pusha
xchg
mov
push
cmc
sub
inc
sub
xchg
fwait
arpl
stc
jns
dec
cmpsl
xchg
int
push
popa
push
mov
je
jno
fcmovu
jp
xchg
jno
nop
call
mov
push
mov
lds
lock
mov
adc
sub
jae
cmpsb
jae
dec
addr16
jae
testl
fdivrp
loopne
test
cli
mov
xchg
cwtl
testb
add
stos
aaa
xor
addr16
mov
xor
popa
scas
testb
loopne
dec
aam
cmp
int
pop
add
sub
dec
sbb
or
push
cmp
movsl
lcall
inc
mov
jno
test
cmp
inc
out
sti
pop
mov
and
mov
push
repz
adc
int3
jl
or
mov
push
adc
and
mov
jo
sub
les
addr16
pusha
or
push
aas
leave
enterw
jbe
into
inc
xchg
add
xor
mov
ljmp
mov
outsl
into
movsl
mov
aad
in
jnp
popf
icebp
xor
or
jno
push
sbb
jge
push
xor
dec
xor
sahf
out
cmp
rcrl
repnz
mov
push
loopne
jmp
stc
das
xchg
mov
mov
push
adc
lods
stos
push
xchg
fstpl
mov
sbb
jp
sbb
xor
dec
scas
ljmp
jl
xchg
and
xchg
cmc
xlat
mov
or
adc
pop
jle
lahf
adc
sahf
and
imul
mov
pop
mov
push
fadds
lret
repz
cmpsb
sbb
push
or
repz
xor
xchg
mov
mov
xor
sbb
jb
mov
in
loopne
hlt
movb
push
cmp
fmuls
adc
cmpsl
sahf
call
push
mov
jp
aas
xor
outsl
sub
out
or
cmpsb
test
or
cmpb
leave
cmc
xlat
ss
mov
pusha
mov
or
adc
cmp
orps
test
outsl
mov
leave
jge
aaa
xchg
int
js
test
jno
fs
popa
cmpl
jo
jmp
rol
or
sub
in
cmp
mov
aas
adc
or
sub
outsb
push
or
in
push
aad
imul
cmp
dec
andl
push
and
push
testb
jae
sub
mov
cld
int3
inc
and
pop
adc
stos
shlb
int
pusha
cmpsl
aam
mov
imul
imul
stos
xchg
inc
scas
sahf
jl
xor
cwtl
jae
push
xor
mov
hlt
push
outsl
pushf
imul
push
stos
fwait
popf
fucomi
in
mov
mov
rcl
dec
cs
std
lea
jp
sarl
orb
add
icebp
mov
dec
cwtl
cmp
adc
les
mov
jb
push
xchg
pop
sarb
xchg
adc
adc
inc
out
loope
daa
sbbb
sbb
outsl
or
mul
js
dec
sub
add
sub
push
mov
pusha
call
popf
test
aam
inc
cmc
hlt
pop
sbb
mov
xor
rcll
mov
lea
xchg
ljmp
js
lods
and
dec
adc
cmp
sbb
sub
imul
pop
scas
imul
stos
fisttpll
dec
adc
or
pop
pop
loop
cmpb
mov
mov
pop
dec
and
pop
jecxz
jbe
push
cmp
adc
rcrl
mov
and
cli
test
aas
sub
mov
cmc
pop
mov
dec
lock
sub
cltd
jmp
pop
mov
aam
jecxz
mov
in
push
jae
pop
rclb
insb
jbe
sahf
push
mov
fwait
pop
int3
xchg
fsubrs
ss
fldenv
out
jecxz
aad
or
insb
and
jns
lcall
addr16
loope
je
arpl
adc
or
push
mov
xchg
dec
lods
filds
repnz
cmp
pop
clc
and
shlb
cmpsl
fidivrs
out
adc
test
mov
into
std
aam
mov
pop
inc
repnz
imul
loope
loope
movswl
mov
inc
jae
push
out
inc
repnz
and
in
shl
rcrl
lahf
push
in
jp
xchg
sarb
xchg
ror
lret
pop
icebp
cmp
jne
jmp
daa
pop
lahf
add
cmpsl
xor
test
pop
imul
push
shrl
shlb
jo
stos
sub
fnsave
mov
out
loope
adc
cmpsb
insl
push
hlt
dec
push
push
sbb
xor
mov
jle
mov
aas
adc
jno
dec
inc
mov
xlat
stos
mov
push
into
xorl
pop
fwait
rolb
in
adc
mov
ret
dec
jmp
cmc
std
xor
add
push
fisubl
mov
mov
push
notb
jae
adc
lock
sbb
test
pop
aaa
pop
inc
dec
mov
dec
pop
or
loop
dec
add
mov
xor
dec
xchg
inc
and
data16
inc
movsb
mov
shlb
dec
xor
jo
jno
sahf
jl
pop
jle
mov
fs
cmc
sbb
gs
mov
xchg
sahf
pop
push
xlat
or
lahf
push
es
push
xchg
sbb
inc
push
cmpsl
and
aaa
lret
xlat
adc
rclb
aaa
test
daa
lahf
cmp
ss
jecxz
imul
lcall
mov
inc
int3
clc
jno
hlt
jbe
mov
cmpl
jbe
rolb
mov
mov
ret
icebp
jg
adc
orb
cmpsb
xor
pop
xlat
insl
jl
dec
mov
mov
inc
fnstcw
push
dec
and
xchg
mov
insl
sub
loop
fsub
xlat
loopne
addl
repz
int3
push
or
cs
rorb
or
fcoms
sub
ss
push
loopne
popf
mov
push
mov
movsb
insb
call
sahf
arpl
xchg
or
sub
stos
dec
aam
mov
fwait
push
hlt
push
iret
out
outsl
insb
push
ret
jb
push
hlt
add
inc
add
pop
hlt
mov
xchg
and
and
mov
jno
and
pop
ror
push
dec
sti
sti
pop
sub
addr16
hlt
or
gs
movsl
cld
mov
or
imul
jo
mulb
and
adc
clc
lcall
in
test
jb
add
std
add
push
jg
mov
cltd
mov
ja
xchg
sbb
xor
inc
lea
in
mov
inc
mov
xchg
sbb
mov
mov
shll
outsb
in
jnp
dec
daa
mov
bswap
ret
je
add
lea
inc
pop
add
dec
inc
jno
movsl
and
sbb
das
out
movsl
mov
adc
js
lret
cs
loop
push
bndldx
test
inc
jp
jp
mov
ljmp
sub
stos
or
es
ja
xor
xchg
js
jl
cld
fisttpl
and
lds
nop
or
jl
dec
adc
or
cmc
adc
enter
cmp
call
es
enter
shrb
cmpsb
inc
dec
loopne
xchg
test
daa
and
loope
mov
sbb
subl
mov
adcl
movsl
loopne
in
cmc
pop
sub
or
test
and
insl
jle
sub
sub
test
loope
rol
cmp
mov
imul
add
mov
xchg
push
in
push
data16
mul
push
and
mov
fistl
xchg
out
aam
or
lret
ljmp
sbb
shll
adc
xor
add
int
aam
fmulp
in
add
or
add
xchg
pop
aaa
sbb
mov
push
xorl
or
inc
fidivrl
mov
and
adc
xor
jns
adc
pushf
add
sbb
je
fistpll
movsb
mov
test
stc
xchg
mov
call
scas
ret
mov
pop
mov
ret
call
ret
dec
stos
xor
or
lods
dec
xlat
jg
inc
scas
mov
addr16
int
adc
out
sbb
xchg
idivl
cltd
cltd
cmpsl
pop
cmpsl
stos
int
repz
mov
sbb
or
or
cmc
ficoms
pop
pop
xchg
aas
leave
lods
mov
fcomp
in
hlt
inc
mov
int
ds
jbe
in
out
jmp
dec
jbe
lea
aas
xor
push
int
inc
sahf
add
lods
cmpsl
and
adc
clc
ss
in
pop
shl
push
pop
adc
xchg
xor
inc
pop
into
mov
dec
in
inc
movsb
mov
in
pop
cmc
mov
subb
adc
push
jae
repnz
inc
or
leave
adc
dec
xchg
xchg
xchg
jg
pop
or
push
insl
pusha
sub
rorl
push
jae,pn
mov
inc
jnp
jle
out
dec
scas
or
jg,pt
sarl
pop
pop
xchg
sbb
pop
sub
xor
arpl
in
pop
jno
aas
mov
inc
mov
or
lret
ja
fwait
in
xor
and
xor
daa
mov
lea
test
push
push
push
pop
cmpsl
mov
or
xchg
shlb
imul
lock
and
daa
lret
mov
mov
jns
inc
mov
jno
imul
pop
mov
imul
dec
mov
scas
dec
adc
jmp
dec
sbb
std
ss
in
daa
jl
inc
xlat
pop
loopne
out
mov
push
nop
mov
mov
bnd
ljmp
mov
and
cld
hlt
std
lcall
adc
ret
xchg
mov
loope
inc
push
xchg
sub
jnp
and
dec
mov
test
jle
insb
fwait
je
or
imul
es
inc
lods
jno
cmp
nop
mov
nop
insb
mov
adc
mov
rorb
add
stos
xchg
xor
mov
mov
fsubrl
aam
into
push
repnz
adc
int3
mov
pop
jmp
ret
stc
cltd
lods
into
xchg
push
shlb
daa
daa
test
mov
mov
daa
or
mov
popa
in
daa
in
sbb
jns
andb
lret
adc
jb
shl
mov
or
pop
pop
daa
dec
test
movsb
jbe
push
and
ret
and
xor
dec
xchg
mov
jbe
mov
lahf
fcoms
ljmp
cmp
sbbb
dec
outsl
push
testl
lods
pop
fisubs
or
jbe
dec
mov
push
mov
add
fcoms
ret
push
mov
mov
decb
mov
dec
lahf
scas
out
sub
push
outsb
je
aas
pop
es
mov
int3
adcb
inc
pop
inc
sub
add
loopne
sbb
inc
push
pop
push
fcom
insl
sahf
push
ss
sub
mov
and
repnz
stos
sub
xchg
inc
pop
jg
repnz
nop
insl
mov
pop
call
lea
cmp
push
sub
mov
mov
inc
in
mov
pop
lock
mov
mov
jae
push
pop
pop
out
dec
xor
pop
and
call
jno
or
shrb
mov
insb
lcall
sarl
rcl
in
mov
mov
mov
sarb
int3
fsts
cmc
jbe
and
jo
es
sbb
les
push
in
push
jl
aam
lahf
ret
push
add
ss
mov
movsl
pop
ss
xchg
fildl
ds
out
sub
push
xor
in
aas
add
push
out
mov
cltd
imul
xchg
call
ret
mov
push
jae
ret
es
cmp
stc
aas
or
inc
sub
or
or
mov
cld
xorb
mov
clc
das
mov
in
arpl
pop
push
cmp
and
lcallw
and
test
repz
sbb
adc
mov
adc
push
and
or
insb
movsl
cwtl
lea
pop
adcl
nop
rolb
and
xor
add
pop
clc
xor
xchg
sbbb
xchg
dec
pop
fistl
rcrl
clc
lahf
aaa
cmpsb
sub
jns
repz
lds
xchg
cmp
cmp
bswap
sub
call
pop
adc
add
pop
roll
cmp
mov
fucom
adc
mov
pop
cli
out
push
sub
inc
stos
jo
dec
cmp
lret
shrb
add
xor
sub
inc
jb
fisubl
mov
mov
xor
sub
popa
pop
sub
mov
jno
cmp
cmpsl
fs
xchg
push
test
mov
push
int
into
out
pop
add
call
or
out
aad
lock
mov
mov
adc
mov
push
test
push
xchg
es
cmpsl
scas
mov
shll
push
stos
sub
adc
inc
push
push
xor
loope
popf
push
cmp
push
jle
cltd
mov
movsb
mov
cs
sahf
push
sbb
pop
cmpsl
fisubrs
adc
mov
xor
js
lds
fimuls
push
mov
jne
fsubs
push
jp
or
divl
push
popa
in
push
mov
pop
test
call
cmp
shll
inc
mov
scas
pushf
hlt
adc
ret
xor
testb
pop
stc
push
push
in
xchg
out
dec
jno
dec
inc
jp
mov
push
nop
dec
ja
inc
jns
xor
dec
aaa
popf
xchg
add
das
outsl
aad
fisttps
cwtl
mov
shrl
xchg
pop
inc
rorb
shlb
inc
daa
mov
sbb
jge
push
xchg
or
fxam
mov
sbb
repnz
in
jb
push
push
cltd
mov
in
pop
sti
mov
adc
add
popf
les
incb
xor
mov
add
loope
jmp
cmpsl
scas
arpl
or
sbb
lods
sub
mov
and
and
pusha
sub
push
lods
xchg
mov
jg
ret
and
cmp
js
cmp
push
aaa
or
incb
xor
dec
mov
cli
stc
insb
imul
test
addr16
and
xchg
jno,pt
add
sbb
enter
das
push
out
xchg
loop
add
sbb
movsb
lods
push
sbb
nop
adc
pop
mov
cmp
jnp
je
filds
pop
push
inc
cmp
pop
into
adc
mov
in
ljmp
pop
idivb
pusha
out
pop
mov
rorl
jno
sbb
dec
repnz
mov
push
pop
or
xchg
mov
popa
mov
imul
mov
es
aas
push
inc
sub
fdiv
call
cmp
push
test
pop
jmp
cwtl
push
mov
cmp
pop
cmp
rolb
jecxz
repnz
outsl
lock
loopne
cmp
jl
es
cli
fisubrs
dec
mov
enter
in
mov
push
xorb
sti
cltd
es
shlb
jae
fcoml
add
out
mov
ljmp
or
js
xor
and
bound
enter
int3
adc
jl
cltd
inc
and
push
push
sbb
bound
mov
pop
mov
scas
mov
stos
ljmp
shrb
pop
xor
xchg
xchg
out
shrl
js
xor
cmpsb
cmc
popa
sub
mov
cli
cmp
mov
in
cmp
mov
aam
sbb
adc
stos
lock
jge
xor
inc
hlt
leave
cmp
jle
std
push
inc
inc
push
clc
repnz
fdivp
dec
int
fwait
xlat
sub
mov
ds
or
dec
cvttps2pi
fwait
out
and
aas
test
fadds
lods
in
ja
inc
test
icebp
repnz
mov
mov
push
sub
dec
stc
cmc
stc
push
mov
mov
push
dec
mov
test
mov
jns
jae
or
mov
pop
sbb
bound
push
adc
or
stos
jmp
icebp
dec
faddp
add
into
and
mov
adc
lods
ret
inc
mov
fldenv
test
xchg
pop
cmpl
and
jl
lods
jbe
sbb
lea
pusha
sbb
sub
add
scas
xchg
dec
xor
lods
jns
dec
cmp
xor
xorb
adc
push
sub
mov
mov
movsl
xchg
ja
in
jbe
sti
aas
bound
into
mov
gs
fdivl
cmp
pushf
popf
jmp
and
or
clc
pop
add
in
xchg
popf
sub
ja
push
icebp
sarl
or
into
rcl
and
cmc
test
dec
shl
call
cmc
sti
cmp
mov
adc
mov
xchg
cwtl
pop
add
mov
repnz
arpl
les
sahf
in
cmp
push
addr16
ss
ret
xchg
mov
out
pop
repnz
fimull
xchg
mov
mov
xchg
repnz
adc
pop
push
adc
push
and
lret
push
and
daa
repz
cli
mov
mov
mov
rcr
dec
pop
aaa
xchg
ss
push
stc
adc
call
or
mov
inc
sbb
inc
add
repz
add
test
fidivl
addr16
mov
mov
test
in
fbstp
inc
and
jae
mov
xor
xor
jb
mov
insb
cmc
scas
arpl
inc
addr16
test
ljmp
mov
fldlg2
out
pop
pop
sbb
xor
lea
pop
cmp
adc
add
or
cmp
cs
mov
sbb
adc
mov
lahf
push
cmp
outsl
mov
rclb
loop
push
sub
scas
pop
ljmp
push
cmp
sub
adc
jno
mov
inc
ss
cs
add
les
or
jo
arpl
test
cmp
arpl
out
icebp
insl
mov
fimuls
icebp
arpl
mov
testl
idivl
iret
and
xor
push
in
mov
incl
int
jno
jno
int3
jecxz
jns
mov
cmc
push
jmp
in
push
add
les
or
out
cwtl
jno
or
movsb
outsl
and
cli
lret
je
mov
aas
daa
in
loope
jnp
rcll
pusha
addr16
lret
cmp
bound
mov
sub
mov
out
xor
add
jg
push
mov
jge
lods
scas
jle
dec
mov
or
aam
gs
stc
icebp
fmull
xchg
fucomip
mov
addr16
cmp
dec
dec
mov
and
adc
mov
mov
outsb
imul
cmpl
les
jge
xchg
aaa
mov
push
call
lcall
mov
test
jae
xchg
xor
pop
lahf
insb
fsin
arpl
lcall
inc
cmp
ljmp
lret
jbe
mov
pop
fmuls
or
aad
jp
cmpsl
into
sub
jne
adc
push
or
in
sbb
push
out
out
dec
sbb
test
movl
jmp
sbb
das
leave
bound
das
xor
or
js
les
jecxz
and
cld
cli
aas
mov
add
ret
arpl
sbb
popf
add
fdivl
popf
filds
cmp
stos
sub
ljmp
mov
ja
andb
or
insb
mov
enter
in
inc
orl
pop
lahf
fdivrs
lods
out
and
rcrb
pop
out
add
movb
lret
dec
lahf
sub
sbb
push
inc
xchg
jg
or
push
divl
xchg
aas
aam
mov
pop
jmp
das
popf
cli
hlt
xchg
inc
push
xor
jl
inc
or
cmpb
stc
or
fimuls
adc
xor
push
les
int
xchg
gs
dec
push
ja
sarl
mov
mov
xchg
pop
adc
sbb
cld
sub
xchg
push
adc
jp
outsb
repnz
jmp
mov
inc
cmp
mov
inc
mov
std
sbb
cmp
dec
or
idivb
in
sbb
fdiv
jecxz
xor
lret
add
pusha
pop
out
cmp
lret
popa
mov
dec
mov
testb
sbb
add
jle
push
mov
sub
jmp
jno
inc
push
js
jne
jno
ret
mov
push
lods
inc
adc
push
jnp
and
mov
fstpt
int3
xchg
mov
push
loop
mov
xchg
pusha
pop
jbe
imul
out
in
mov
les
inc
push
repnz
fmuls
pop
and
sbb
ja
js
addr16
and
lods
xchg
push
push
mov
out
sbb
sahf
sbb
jns
popa
push
addr16
xor
dec
jp
push
outsb
dec
movsb
ffreep
mov
adc
repz
lea
into
jl
test
push
cli
clc
xchg
or
ljmp
adc
jp
lods
dec
and
stc
add
pop
pushf
sbb
pusha
aam
cmc
jbe
dec
fadds
pop
fldt
add
sub
xor
xchg
pop
xor
push
push
inc
hlt
push
ret
push
inc
mov
dec
icebp
int
in
adc
inc
push
dec
repnz
and
mov
xor
pusha
xchg
push
fwait
mov
jns
lahf
push
mov
jle
jnp
iret
test
jnp
fmull
xor
hlt
jecxz
ljmp
cmpsl
into
sbb
sub
pusha
std
dec
int
sbbb
mov
ret
adc
cmp
inc
cmp
mov
lret
lcall
or
jbe
aam
arpl
fs
jmp
leave
cs
adc
add
scas
add
dec
subb
push
mov
push
cmp
xor
and
mov
popf
lret
push
cld
mov
push
mov
mov
cltd
fistpl
push
pop
gs
sbb
dec
adc
mov
add
lods
test
aaa
clc
xchg
or
sub
mov
nop
call
dec
lcall
adc
aam
cmpsl
mov
orb
cmp
in
xchg
out
add
xchg
cmp
mov
orl
dec
jge
jo
cmp
adc
cmpsb
push
mov
and
out
cli
je
sbb
push
push
xlat
enter
jns
sub
hlt
iret
adc
addl
push
pop
push
cltd
out
andb
es
sbb
ljmp
aas
js
xchg
jbe
adc
popa
gs
pop
jns
aad
sahf
pop
push
jb
xchg
push
cmc
sar
sti
push
aad
sub
mov
jl
test
icebp
test
mov
test
dec
scas
push
cmc
subl
cmp
jno
mov
mov
or
in
and
mov
into
sub
aad
sub
sub
jno
sbb
pop
mov
pop
xlat
and
sub
adc
les
mov
jnp
aas
pop
adc
jnp
mov
mov
call
imul
fbld
cltd
test
cmc
rclb
adc
ror
scas
in
lahf
aam
cmp
cmp
inc
andl
shrl
lods
sti
daa
inc
mov
inc
dec
fsts
adc
daa
pusha
sub
shll
xlat
push
pop
mov
jno
addl
adc
nop
cmpsb
in
adc
or
fnsave
ret
mov
or
dec
and
push
adc
mov
push
or
and
mov
aam
push
hlt
or
xor
mov
nop
inc
in
sbb
ret
xchg
mov
jbe
jg
dec
aad
pop
je
dec
and
push
mov
addr16
adc
pop
imul
mov
mov
cmp
xchg
movsb
and
test
dec
adc
mov
xor
mov
xchg
jle
mov
aam
inc
xlat
mul
ljmp
sbb
setns
das
pop
inc
cmp
divl
pop
push
pop
or
lcall
fsubrs
scas
dec
cmpsb
sahf
mov
mov
mov
notl
dec
mov
in
nop
mov
ret
fwait
jnp
add
or
dec
rorl
cmp
jne
nop
ret
test
inc
jb
subl
mov
daa
imul
push
mov
mov
jae
mov
in
pop
cmpsl
pushf
out
fdiv
mov
divl
cmpl
cmpsb
mov
sahf
test
and
test
mov
sbb
call
sbb
rorl
xchg
push
sub
popa
push
bound
les
or
add
fdivrs
out
fdivl
push
or
jecxz
sbb
bound
popa
dec
aad
mov
cs
inc
fisubs
or
and
mov
adc
ds
imul
push
push
push
pop
iret
fldt
sub
sbb
shlb
insb
in
mov
add
cwtl
inc
or
mov
dec
cmpsl
pop
daa
fmul
mov
jae
es
in
movl
outsb
lods
push
nop
jo
out
and
xchg
xchg
pop
jge
sbb
inc
sub
dec
test
aas
lcall
clc
dec
das
cmp
dec
ficoml
cmp
mov
pop
jecxz
cmp
cli
mov
inc
xchg
xor
sub
ret
or
bound
sub
xchg
xchg
inc
cmc
sar
pop
rcrb
push
sti
xor
mov
in
xchg
sub
dec
xor
imul
je
jp
mov
mov
mov
mov
icebp
shld
push
jge
jle
mov
mov
push
jl
and
cltd
mov
repz
jno
cmp
jno
arpl
aad
into
adc
push
ss
dec
jne
lods
lret
mov
nop
out
adc
sbb
mov
dec
in
dec
pop
fisubrl
pop
jne
cltd
sbb
es
dec
pushf
aas
scas
daa
aaa
sbb
repz
pop
push
pop
jmp
in
add
cltd
sub
add
push
push
xchg
dec
lea
xchg
sbb
xor
fisubs
pusha
in
xchg
leave
inc
sbb
outsb
stos
cmp
xchg
mov
out
mov
mov
pop
cmpsl
data16
int
lds
xor
divl
dec
test
mov
sub
prefetchw
sti
xchg
movsl
push
rcll
pushf
popa
xor
js
pop
scas
lret
cltd
pop
lcall
adc
xchg
mov
pop
sub
or
cld
ror
arpl
and
mov
loop
cmc
outsb
cmpsb
sti
ja
cwtl
sub
inc
mov
cli
and
mov
dec
insl
jge
xor
push
pop
jo
sarb
jb
movb
and
inc
pushf
sub
sbb
mov
add
repnz
jae
incb
jmp
dec
jmp
push
repnz
cmp
aaa
inc
sti
mov
ror
int3
and
lret
xchg
add
xor
cmc
mov
in
bound
push
imul
cmp
imul
pop
loopne
insl
xchg
jns
xchg
push
push
imul
adc
insl
jns
fimuls
pushf
lods
mull
xor
rolb
jecxz
add
xchg
test
lret
or
xor
pop
ljmp
mov
cmp
sbb
cmpsl
loope
addr16
add
pop
leave
push
cld
fimuls
ja
xchg
jnp
inc
and
xchg
mov
lds
inc
mov
sbbb
test
mov
pop
enter
call
in
test
ret
sub
push
xchg
sub
jo
pop
cmp
fisttpl
out
jne
lock
add
dec
mov
or
enter
or
call
push
adc
scas
dec
cltd
and
inc
orb
daa
dec
cmp
push
addr16
sbb
in
hlt
mov
mov
sub
outsb
mov
int3
pop
or
mov
enter
arpl
dec
in
int
adcl
mov
and
xchg
ljmp
loopne
ficomps
add
test
icebp
adc
jg
dec
cwtl
adc
xor
jno
xor
add
daa
pop
cmc
movl
and
sbb
jl
pushf
pushw
jno
int3
ret
or
sub
stos
nop
addb
aad
ret
imul
pop
and
push
push
or
xchg
inc
cmp
sti
jle
pop
push
or
dec
mov
setns
lahf
aam
adc
loop
shlb
daa
repnz
fistpl
or
push
mov
data16
outsl
js
jp
sbb
shlb
into
jmp
xor
dec
mov
dec
aad
lret
testb
outsb
mov
cs
test
cmpsl
fs
in
push
xchg
jae
daa
jnp
push
pusha
stc
or
pop
ret
ljmp
into
cmpl
push
addr16
mov
add
in
outsb
out
iret
stos
iret
out
mov
push
pop
outsl
je
sbb
cld
out
scas
mov
inc
shll
push
xlat
idivl
pop
and
icebp
aaa
jg
adc
mov
into
stc
int3
inc
dec
mov
mov
mov
cli
or
out
xor
loop
sub
sti
test
iret
pusha
lcall
push
xor
aas
mov
cld
fisubs
sahf
pop
out
or
dec
push
inc
mov
mov
xchg
push
xor
xor
mov
loope
sarb
mov
mov
cmp
ret
cmp
jmp
jne
xchg
inc
mov
push
outsl
shlb
lods
jbe
or
pop
jnp
pop
add
jmp
sub
ret
xor
adc
push
test
push
and
fisubs
xor
xchg
and
lea
xchg
add
sahf
cmp
ja
pushl
mov
movsb
cmpsl
lea
jno
fsubl
rcll
mov
cmc
add
js
sahf
push
js
loop
or
les
add
mov
and
das
or
stos
mov
pop
cld
fmulp
mov
push
sub
jns
stos
or
mov
pushf
out
sub
les
arpl
cwtl
loopne
es
cmp
rolb
test
enter
imul
adc
or
sbb
jbe
sbb
imul
fisttps
jle
int3
sti
dec
push
ss
xor
add
mov
dec
jnp
mov
push
or
cli
ljmp
push
lcall
arpl
add
mov
lahf
or
gs
cmp
cmp
out
std
mov
pop
mov
push
ret
mov
popf
push
fwait
das
jmp
test
pop
std
cmc
inc
pop
xorb
imul
jmp
mov
jae
dec
sub
and
xchg
sbb
cmp
ja
adc
sbb
adc
dec
cmp
es
sub
push
test
je
mov
into
lock
jo
add
jo
xor
jp
xchg
push
inc
cmpb
jo
sti
xchg
cmp
test
push
inc
scas
nop
arpl
inc
mov
mov
or
xchg
xchg
mov
les
movsb
leave
dec
pop
pop
out
fists
mov
ja
test
pop
sti
inc
push
mov
nop
dec
test
push
repz
push
add
sahf
test
and
in
adc
jmp
cs
sbb
mov
add
sub
pop
ret
repz
push
sub
dec
push
xor
popa
xchg
jae
sub
push
and
faddl
xchg
pmuludq
cmpsl
dec
fwait
test
push
mov
int
mov
rorl
cltd
lahf
fstl
or
dec
lea
test
jae
xor
out
popf
and
sarb
pop
imul
scas
adc
jae
push
push
inc
inc
add
mov
test
cmp
lcall
adc
aas
xchg
ja
int
mov
in
xchg
int3
dec
inc
pop
fnstcw
stos
sub
xor
out
pop
jae
xchg
xchg
sbb
pop
cltd
pop
inc
push
sbb
pop
lods
jbe
xor
out
adc
add
jecxz
scas
add
dec
dec
movsl
in
jbe
test
sbb
mov
shrb
mov
push
inc
rol
in
ljmp
pusha
in
fdivs
sbb
xchg
jge
sti
ss
and
and
stc
mov
loop
fs
inc
jnp
lret
std
adc
cmp
and
push
cmp
xchg
or
sti
jle
sahf
and
movsl
and
lock
mov
ds
inc
mov
mov
addb
inc
mov
out
jb
mov
mov
push
into
dec
pop
or
mov
lcall
imul
aad
lcall
xorb
mov
mov
pop
insb
fdivrl
xor
sbb
sub
pop
leave
adc
inc
xor
stos
fistps
divb
inc
mulb
xchg
jp
adc
inc
shlb
ds
arpl
or
jno
xor
call
and
mov
mov
mov
push
fdivs
mov
add
xor
sbb
add
int
orl
add
les
shlb
in
jmp
insl
inc
inc
push
int3
jnp
lcall
xchg
loope
nop
sub
test
mov
mov
fimuls
ficompl
push
xor
mov
dec
int
cmp
xchg
add
inc
int3
push
data16
addr16
pushf
sbb
rclb
xor
mov
push
hlt
jne
hlt
push
lock
insb
push
adc
call
mov
sarb
xchg
jl
subl
imull
mov
fistl
js
xchg
in
dec
mov
xorb
hlt
or
xor
test
mov
movsl
add
push
aaa
cwtl
mov
fcomip
or
out
out
adc
or
popf
xor
mov
or
cmc
rorb
push
js
push
in
cli
mov
mov
rcr
dec
jae
inc
ficoms
jle
enter
sti
adc
movsb
jg
jg
jl
push
ss
pushf
cmp
icebp
lods
shll
dec
unpcklps
mov
push
jl
dec
roll
in
cmc
push
nop
out
jge
mov
inc
cmp
xchg
rcrl
mov
jg
shll
les
cmp
mov
mov
jno
je
mov
xor
fs
mov
mov
jecxz
aad
out
jmp
dec
stos
jns
imul
mov
fildl
mov
jle
inc
xor
jle
out
cmp
mov
pop
sahf
dec
cmp
cmp
clts
or
jp
stc
sub
mov
cmp
lcall
and
push
cmp
leave
outsb
pop
es
rorl
in
xor
ret
iret
aas
inc
pop
push
hlt
and
int
rorl
push
and
stc
fsincos
xor
out
imul
aas
stc
lods
sub
cs
xor
rcr
lods
gs
sub
xor
test
xchg
mov
jb
pop
dec
inc
jbe
enter
pop
jmp
movsl
push
int3
mov
inc
add
mov
movsb
inc
ds
out
push
add
dec
aaa
or
cmp
and
sub
cli
pop
scas
add
sti
sahf
outsl
lods
xor
stos
daa
ss
jb
lret
lret
scas
pusha
rcrb
xor
cmp
lret
cld
js
or
mov
testl
inc
rcr
dec
pop
data16
lds
sub
dec
pop
scas
sahf
add
and
ja
xchg
mov
add
add
push
mov
add
mov
dec
scas
lds
pop
sub
cmp
dec
mov
cmp
in
or
test
cmc
xchg
ja
aad
adc
iret
sbb
dec
jmp
lock
sub
ficoml
xchg
shll
pop
out
xchg
cmp
fwait
aaa
sub
dec
mov
xor
inc
movsl
jp
adc
gs
inc
add
jp
roll
fidivl
add
xchg
lds
imull
fcomps
addb
dec
dec
imul
sub
add
cmp
stos
cmpl
sbb
cmp
xchg
mov
mov
adc
sti
mov
arpl
test
and
add
xchg
or
mov
pop
repnz
sbb
aas
add
insl
sbb
cmp
dec
push
pop
mov
xchg
push
add
cltd
push
stos
mov
mov
mov
mov
pusha
imul
adc
cmp
popa
and
imul
dec
mov
mov
push
lods
lret
pop
cltd
repz
lds
sub
push
dec
and
daa
push
pop
fidivrl
sub
jbe
push
pop
inc
push
mov
mov
fisubs
mov
mov
push
mov
xorl
xlat
mov
cmpsb
fldt
iret
stc
xchg
xchg
xor
outsb
movsb
cltd
pusha
jb
mov
add
int
or
sbb
cmp
ficompl
inc
cmp
movsl
fsubr
ja
fwait
arpl
xchg
insb
adc
movsl
push
stos
or
ljmp
sbb
das
fldenv
pop
cmp
and
enter
roll
aas
jl
or
rclb
mov
in
pop
xchg
in
adc
out
fcomi
adc
mov
es
gs
iret
cld
xor
mov
jae
and
jmp
aam
out
and
mov
movb
movsb
es
jo
cmp
jl
xor
lods
mov
xor
jns
and
jno
mov
sbb
dec
push
cltd
iret
jns
sub
mov
lds
mov
jo
mov
fldt
jnp
push
lods
push
inc
jno
jge
xchg
inc
aas
or
out
clc
xchg
cwtl
loopne
jnp
inc
sbb
dec
mov
insl
fs
sub
jae
mov
sub
sbb
clc
icebp
adc
sub
xor
cld
pop
mov
bound
lods
ret
pop
jl
push
adc
idivb
mov
sbb
sarl
cmp
andl
and
cmp
xchg
cli
int
ljmp
fwait
enter
idivl
pop
test
push
ficoml
or
icebp
or
or
mov
sub
adc
and
pusha
nop
icebp
in
mov
bound
push
jg
sbb
push
les
dec
mov
xor
fistpl
push
rol
stos
jle
pusha
xchg
sub
mov
int
mov
sub
lock
sahf
pushf
mov
mov
xchg
xor
in
bound
and
mov
mov
or
cmc
jbe
inc
xchg
roll
pushf
test
cmp
mov
imul
pop
movl
and
jo
aam
jp
jns
sub
mov
ret
std
js
hlt
lahf
in
xor
das
adc
out
jnp
or
mov
xor
addb
adc
push
pop
test
and
leave
js
nop
imul
mov
add
out
shll
and
sub
aad
sbb
mov
cltd
call
jnp
push
mov
nop
imul
inc
mov
push
pop
xchg
pop
dec
mov
fwait
xor
cmp
push
nop
sub
lret
xchg
mov
xchg
jae
lret
xor
xchg
mov
loopne
xlat
xchg
jp
repnz
lahf
addl
push
mov
jno
loopne
dec
xchg
or
dec
cmp
arpl
mov
jo
pop
std
popf
scas
push
jge
mov
pop
leave
out
push
shll
mov
mov
or
xlat
rcll
int
push
adc
icebp
mov
lret
stos
cmp
and
call
jp
bound
add
scas
adc
dec
rcll
ljmp
fldenv
add
push
daa
cmp
pop
lds
jle
dec
cld
enter
repnz
sahf
loope
leave
pop
fldenv
cmpsl
fnstenv
leave
jge
outsb
imul
jae
push
movsl
mov
imulb
pop
lret
sti
cld
jae
pushf
ret
or
lea
js
jmp
incl
sub
pop
adc
loop
add
leave
test
push
nop
inc
jno
rclb
mov
sub
out
push
xchg
lret
mov
fs
pop
cmp
push
xchg
es
add
sbb
enter
je
jns
pop
scas
pop
sahf
mov
add
mov
push
subl
push
mov
adc
mov
pop
mov
mov
fs
mov
cmp
rorb
out
jbe
das
shrb
dec
mov
retw
inc
xchg
das
adc
xchg
sarl
loopne
out
outsb
notl
xchg
adc
inc
stos
xchg
cwtl
dec
xchg
push
int
push
jge
sub
insl
push
addr16
mov
cmp
leave
andb
pushf
in
mov
lds
insb
push
rcrb
jo
xchg
mov
mov
push
ja
imul
mov
adc
dec
xor
sbb
pop
int
fdivs
mov
mov
mov
pop
loop
shl
jecxz
insb
xor
shrb
pop
cmp
mov
cltd
cmp
add
jle
add
loope
dec
inc
pop
movb
dec
insb
cli
dec
mov
adc
pop
enter
mov
mov
xchg
mov
sti
pop
sub
dec
xchg
addr16
xorb
mov
dec
mov
or
mov
lds
push
mov
inc
enter
fnstsw
outsb
andl
cmp
mov
movsb
insb
mov
shrb
dec
pop
push
ss
jae
dec
nop
jl
les
or
std
fdivl
insl
pushf
xchg
jge
and
sbb
sub
push
inc
fsubl
nop
sahf
pop
xchg
add
stc
adc
mov
sub
push
movsb
or
cwtl
mov
jp
icebp
pop
test
cmp
sbb
xchg
xor
adc
loop
loop
outsl
jns
cmpsl
cmpb
add
mov
js
add
jecxz
push
or
inc
jbe
xorps
jp
or
not
adc
roll
add
sbb
dec
dec
or
xor
std
push
add
loope
dec
popa
fsubl
mov
and
iret
push
and
xchg
movl
stos
dec
loopne
mov
cmp
push
mov
mov
or
ja
mov
push
cmpsl
jge
dec
jb
cmc
popa
mov
or
int
and
lret
jno
lcall
inc
adc
jg
ret
pop
push
dec
fnstsw
aaa
pop
fisttpll
setne
jge
gs
mov
and
ret
int3
jmp
cmp
test
mov
mov
inc
popf
adc
dec
outsb
lods
leave
cmp
adc
xor
lret
icebp
push
mov
or
cwtl
sub
stos
mov
idivl
add
inc
inc
xchg
idiv
mov
and
xor
out
cmp
xor
pop
cmpsb
out
jbe
mov
or
pop
leave
mov
xor
imul
xchg
or
add
stos
mov
or
and
int
imull
or
sub
mov
sub
jge
jo
dec
js
mov
call
sbb
xchg
pusha
adc
ss
ficoml
nop
mov
repnz
jg
and
and
inc
cmp
je
icebp
lods
pop
arpl
int
xchg
xchg
sar
andb
pop
xchg
popf
sti
movsl
push
loope
aaa
aas
std
aaa
mov
incb
ja
repz
inc
mov
inc
sbb
mov
xchg
subl
cmp
in
sbb
inc
mov
push
mov
push
xchg
pop
in
xchg
mov
xor
jns
mov
mov
arpl
movsl
scas
mov
jb
mov
out
aam
sub
lret
leave
mov
fwait
push
fwait
enter
pop
rcll
std
ja
sub
jne
cltd
jp
in
sub
dec
xchg
dec
add
cmp
jb
xchg
inc
push
mov
mov
repnz
mov
cwtl
mov
cmp
in
lahf
mov
pop
jne
push
pop
imul
inc
dec
mov
or
mov
sbb
and
xchg
in
out
scas
jnp
mov
jp
ret
mov
addl
stos
test
in
pop
mov
xor
mov
loop
ret
mov
xor
xchg
aas
mov
popa
jnp
adc
int
mov
int
mov
inc
repz
loop
fldcw
or
ret
mov
lods
fcomip
pop
and
xchg
je
js
fcomps
sahf
andl
addb
or
lds
sub
sub
pop
mov
mov
push
jg
jmp
mov
jmp
out
repnz
xchg
jecxz
ret
outsl
rorl
cltd
mov
addr16
scas
mov
xchg
push
xchg
std
cwtl
fnstsw
mov
pop
jae
insl
rcll
jo
andps
xchg
cmpsl
divl
push
movsl
into
call
sub
pushl
cld
rcl
notb
call
movsl
popf
out
cmp
xor
add
leave
xor
push
mov
out
test
jbe
adc
pop
mov
std
popf
outsb
in
ret
dec
mov
ja
jns
out
add
adcl
test
cmp
xchg
pop
fcomps
jae
jg
mov
pop
ds
mov
je
clc
int3
cli
dec
fstl
leave
aaa
xchg
arpl
or
pop
iret
cmp
mov
xchg
push
mov
addl
loop
imul
xchg
fstpt
pop
mov
dec
xor
dec
push
cmp
outsb
pop
mov
into
ljmp
movsb
test
pop
pop
pop
xor
into
lock
xchg
scas
cmp
movsb
lock
sbb
rcll
daa
insb
mov
dec
or
jmp
dec
dec
lods
ret
out
adc
dec
cli
in
push
push
rcll
cmpsl
or
inc
sbbl
daa
and
sbb
enter
inc
inc
int
and
push
mov
fwait
xchg
mov
dec
cmp
or
jo
mov
cmp
movsl
iret
and
ljmp
or
cld
fdivs
jge
xor
clc
cmc
or
mov
dec
xchg
pop
dec
jg
sub
test
test
enter
bound
xor
jbe
xor
xor
rcr
mov
mulb
call
in
int
inc
adc
bound
out
call
mov
inc
xor
cli
iret
mov
and
aam
jb
mov
int3
cmp
insl
dec
test
push
std
cmp
in
inc
lea
je
xlat
in
and
in
pop
push
or
push
movsb
inc
test
pop
xor
jp
lock
sub
mov
movsb
push
push
dec
inc
push
test
iret
int3
mov
inc
pop
xchg
inc
cmp
outsl
pop
fists
cwtl
push
icebp
hlt
sub
in
sub
xor
dec
sbb
std
std
add
pushf
push
stc
mov
scas
pop
mov
push
push
add
mov
mov
test
xchg
push
mov
pop
mov
fnsave
je
les
insb
in
fdivrs
mov
sub
inc
and
add
mov
push
add
fwait
test
dec
adc
sbb
dec
jne
dec
mov
iret
ds
cmp
fsubrl
stc
ja
jp
dec
movsb
int
xchg
cwtl
lcall
xchg
std
popa
push
leave
mul
jo
test
out
xor
test
jmp
movsl
cmpsb
ret
mov
jae
cld
xlat
push
aas
sbb
cmp
ret
sbb
inc
push
cmpsl
insb
jb
ds
and
and
subl
insl
push
repz
arpl
cmp
sub
fldcw
daa
mov
and
icebp
or
fmuls
loopw
push
mov
mov
jo
mov
jmp
jns
fwait
pop
inc
int3
fsub
xlat
mov
mov
jge
outsb
mov
lods
cmp
mov
pushf
and
mov
cmp
lahf
movsb
pop
jecxz
hlt
jns
insl
jge
aad
fstps
test
leave
loope
push
add
stc
jg
sbb
popf
push
outsl
sbbb
fs
cmp
mov
push
subb
push
clc
dec
xor
or
sbb
mov
push
std
insb
dec
in
xorl
push
mov
xchg
aad
sub
pop
aad
testl
pop
rcrl
dec
pop
xchg
int
pop
mov
stc
mov
xor
jp
lods
xchg
and
jge
jae
ja
mov
popf
popf
cmpsb
mov
js
mov
dec
cmp
fsubrp
repz
in
mov
push
xor
pop
or
push
stos
mov
cmp
jne
movsb
sub
sub
jbe
incl
sti
test
repz
mov
mov
subl
mov
sub
std
cmpsl
mov
enter
mov
sub
mov
and
test
je
or
mov
cltd
push
lea
or
lods
inc
movups
cmpsb
neg
repnz
sub
into
jne
and
movsl
arpl
sub
sub
das
xor
jmp
lods
and
movsb
mov
fsubrs
popf
cs
jmp
mov
ds
cs
pop
fistpl
fadd
fnstenv
xchg
les
jmp
mov
sarl
xchg
jnp
sub
jno
xchg
push
or
in
ds
xor
fisttps
mov
and
lds
jp
imul
add
push
popf
xchg
ljmp
inc
and
fldl
push
aad
xor
in
inc
cmp
or
jg
jne
push
inc
ret
jl
add
push
or
call
pop
loope
pushf
ficoml
fs
and
idivb
cmpsl
add
dec
sti
shlb
cmpsl
daa
lock
mov
ljmp
call
or
lods
fbstp
jecxz
xor
xor
cmp
jecxz
cltd
outsl
mov
cmc
scas
jbe
inc
loop
add
test
jge
pop
push
xchg
cli
dec
adc
sbb
and
scas
out
pop
sarb
rcrl
sti
mul
mov
ja
xchg
dec
push
shlb
jno
shll
adc
ljmp
sti
sbb
xor
fistps
lea
arpl
adc
dec
jno
out
jo
dec
xchg
mov
adc
push
dec
mov
pop
pop
inc
fisubrl
ja
lahf
adc
pop
sbb
xlat
adc
in
pop
rcrl
movsb
push
pop
nop
lret
addr16
mov
push
pop
leave
insl
out
add
ds
dec
cmp
add
jae
loop
mov
xchg
mov
mov
repz
aaa
or
loop
cmp
daa
mov
mov
imul
dec
sti
jb
daa
mov
or
ja
pop
pop
mov
add
mov
loop
lock
xchg
leave
fwait
iret
jns
fs
jecxz
ja
mov
icebp
out
xor
out
andb
fiadds
or
test
fimuls
call
inc
mov
cli
mov
jl
jno
mov
mov
push
jecxz
out
out
pusha
mov
arpl
in
adc
arpl
mull
jae
mov
fdivl
ds
push
gs
pop
jns
jle
pop
aas
add
cmp
or
jge
pop
and
push
or
out
addr16
xor
stos
sahf
fs
pop
addr16
mov
xchg
in
enter
test
xchg
repz
aam
test
add
jbe
mov
cwtl
xlat
pop
jns
mov
pop
xor
jle
ret
rcr
pop
inc
adc
mov
es
jg
inc
pop
push
fwait
sub
inc
cmc
aaa
xchg
add
mov
push
xchg
xchg
pop
dec
jp
and
jmp
or
push
sbb
and
xor
test
aaa
test
push
std
jns
es
cltd
iret
ficoml
out
jp
in
insb
insb
adc
pop
and
js
adc
xorl
mov
jge
leave
mov
rorb
push
or
jno
fs
cmpsl
test
pop
pop
inc
fwait
shll
or
cmpl
push
out
scas
sahf
mov
jmp
push
es
mov
sub
test
pop
add
dec
mov
pop
cmpsw
notb
in
add
loopne
xchg
or
sub
mov
mov
inc
sbb
xchg
std
scas
mov
cmpsb
ljmp
fcmovnbe
sbb
sahf
dec
push
cmp
mov
add
jns
add
xor
mov
push
dec
scas
xor
std
xchg
add
mov
push
jo
sub
in
mov
insl
mov
sub
stc
iret
test
cli
and
pusha
add
mov
cmp
sti
push
aam
cld
dec
cmp
movsl
hlt
mov
jo
xor
mov
fwait
inc
adc
inc
std
mov
arpl
mov
sbb
push
pop
aaa
rclb
cvtpi2pd
dec
xchg
daa
pop
adc
adc
orb
push
aam
lock
ja
add
xor
fadds
xor
pop
data16
sub
and
bound
lods
pop
out
push
outsl
sbb
push
cld
cmp
dec
cmc
mov
mov
in
adc
add
repnz
lods
cli
add
out
push
daa
ficompl
and
or
decb
test
out
mov
addr16
sti
push
push
sahf
inc
imul
pop
stc
test
adc
imul
adc
push
daa
jbe
fneni(8087
cmp
adc
add
adc
add
xor
dec
or
inc
adc
aaa
xor
aas
imul
insb
mov
cs
mov
xor
in
insb
js
scas
cmpsl
icebp
jle
fidivrs
jmp
fcomi
fadd
lret
shll
fimull
dec
fisubrl
or
add
out
enter
and
dec
stos
sar
bound
xchg
add
jp
cmp
fidivrs
fwait
cmp
jmp
and
les
or
xchg
push
inc
push
pop
andl
xor
and
idivl
pop
mov
enter
leave
lods
push
mov
lret
loop
dec
mov
mov
fisttpll
mov
cmp
xlat
in
push
jb
cmp
and
pop
cli
aas
or
sub
rclb
pop
xchg
scas
cmp
lds
dec
shrb
aaa
xchg
scas
push
jl
mov
arpl
xlat
aam
sub
int
addr16
int3
mov
cs
insl
js
dec
jnp
jns
test
loopne
push
xchg
mov
clc
movsl
pop
or
or
jecxz
and
hlt
inc
fiadds
lcall
push
lock
ds
stos
stc
mov
int
dec
jp
stos
mov
stc
in
xchg
leave
mov
hlt
cmp
jge
xchg
xor
popa
daa
push
lretw
lods
jge
jae
inc
mov
lret
dec
gs
outsb
sbb
lds
mov
insl
mov
lock
cli
test
int
std
outsb
loopne
mov
push
inc
pop
addr16
dec
es
fmul
je
or
out
dec
test
nop
mov
in
mov
stos
paddq
jmp
or
lret
ljmp
xor
cmp
lahf
adc
and
xchg
adc
dec
insb
mov
mov
dec
inc
dec
jne
push
pop
adc
add
inc
adc
in
add
cli
mov
push
pop
fisubrl
mov
add
stos
das
jbe
subb
lock
mov
xor
es
mov
outsb
test
add
or
push
leave
cli
xor
cmpl
xlat
das
fstpl
dec
xchg
int3
ret
jne
inc
sub
add
lds
into
dec
pop
push
insb
inc
xor
xchg
js
xchg
stos
pushw
mov
mov
filds
push
gs
pop
fs
jg
xchg
fwait
stos
inc
in
popf
daa
mov
in
sub
in
xchg
out
int
das
add
mov
sub
pushf
fsubs
pusha
ret
jb
out
clc
push
or
add
sub
mov
add
inc
mov
add
aaa
rcr
mov
cmp
fcmovbe
movsl
hlt
mov
popa
aam
repz
cmc
fcomp
add
fnstsw
stc
jo
popf
pop
sub
or
mov
mov
pop
xchg
mov
xchg
lea
xchg
or
jge
scas
jge
adc
int
ljmp
xlat
sbb
inc
iret
adc
inc
xchg
add
push
fld
cld
add
sbb
call
jle
dec
xchg
sahf
ja
ds
mov
lods
pause
xchg
sbb
negb
outsb
in
inc
mov
shll
pop
pop
sbb
push
fs
cmp
adc
push
add
and
or
mov
popa
xchg
lret
mov
inc
push
addl
add
inc
push
enter
push
inc
int3
mov
es
repz
sub
call
mov
xchg
sub
jns
stc
fisubrs
xor
mov
sbb
cld
xor
jb
lea
push
shlb
dec
sub
jmp
sahf
shr
ud2
mov
in
mov
mov
in
push
jg
xchg
fstpt
adc
filds
dec
lcall
xor
and
and
mov
call
fisttps
aad
cmp
mov
pop
sbb
dec
repnz
adc
pop
ret
mov
inc
or
add
sub
mov
jmp
lcall
imul
sbb
imul
lahf
stos
out
mov
ret
pop
xlat
idiv
rcr
fwait
testb
or
shlb
and
dec
inc
and
xchg
or
inc
sub
and
or
sbb
xor
mov
inc
jmp
out
cmp
xor
jnp
test
sbb
nop
aam
stc
int
cs
mov
rclb
shlb
icebp
mov
and
add
jp,pt
sub
push
adc
mov
out
inc
movsb
popf
xor
push
dec
adc
iret
sub
std
jnp
pop
mov
outsb
and
lcall
push
outsb
xchg
rclb
stos
push
out
sub
mov
in
lock
addr16
cwtl
fs
gs
dec
dec
aaa
or
out
mov
and
outsb
and
push
outsb
sti
sti
jbe
flds
lds
pop
mov
insb
cli
push
fs
jecxz
push
or
test
cmp
scas
push
cmpl
sar
repz
jno
out
inc
iret
xchg
push
push
mov
mov
andb
mov
nop
push
outsb
nop
fisttpll
scas
cmc
packsswb
push
lods
xchg
clc
add
mov
cli
fidivs
icebp
data16
and
xchg
jnp
sar
fcmovne
repz
mov
jg
mov
ja
sahf
inc
popl
pop
imul
xor
pop
pop
pop
jge
add
pusha
lret
mov
scas
popf
adc
mov
shlb
pop
xchg
imul
int3
arpl
sub
sub
scas
push
lret
or
pop
aaa
test
xchg
loop
iret
mov
out
push
cmpsl
mov
cmpsl
xor
adc
inc
divb
inc
ftst
loope
sub
xchg
xchg
jmp
mov
inc
pop
fdivrl
lcall
sbb
jne
mov
xor
gs
lahf
dec
es
jl
testb
ficoms
mov
loop
mov
in
into
mov
int
mov
xchg
xchg
fdivrp
mov
fs
imul
incb
mov
add
leave
sub
or
ds
xor
inc
jp
cmp
inc
sbb
jle
mov
xor
fs
xchg
mov
and
add
js
jbe
jmp
push
xor
inc
or
or
jp
pop
movsb
sub
add
or
adc
daa
sub
push
jle
fcmovne
aam
mov
call
rcr
mov
cmp
mov
enter
ljmp
jmp
sar
frstor
stos
subb
divl
fdivs
hlt
cmc
fidivrl
mov
cld
cmp
dec
push
mov
arpl
add
push
enter
inc
orl
sbb
inc
jnp
js
fwait
es
js
mov
jo
jmp
test
jae
jle
in
rcrl
aam
lcall
cmpsl
lahf
imul
dec
sbb
xchg
aad
pop
inc
ja
mov
push
fcoms
das
dec
out
popa
jo
ljmp
cli
imul
bound
xchg
push
daa
in
bound
or
popa
arpl
vmwrite
divb
lods
sub
xor
js
or
inc
leave
mov
mov
lret
cwtl
pusha
jns
mov
pop
mov
inc
push
pop
jmp
insb
pop
adc
stos
xchg
rcrb
pop
rorl
mov
mov
out
push
pop
and
jle
aam
movsb
add
test
mov
mov
insl
hlt
out
adc
fcmovb
or
jo
out
pop
gs
repnz
mov
push
mov
loop
lret
daa
push
jecxz
mov
push
sbb
jbe
andb
mov
jns
sbb
dec
add
pop
xchg
shl
ret
sbb
mov
xchg
mov
push
sbb
inc
rol
outsb
into
sub
fcomps
data16
dec
mov
mov
pop
js
xchg
sarb
xchg
mov
int
lock
lret
jmp
or
arpl
aam
cmp
or
cmp
push
daa
jno
jl
stc
jno
aam
xchg
ja
cmp
in
mov
movsl
setno
stc
mov
push
adc
cmp
sub
mov
push
sub
dec
dec
mov
repz
test
addps
jns
xchg
int3
dec
cmp
imul
pop
dec
orl
sbb
sbb
pop
ljmp
fiadds
mov
scas
xor
js
fs
xchg
lea
test
icebp
xor
ljmp
repnz
pop
rclb
xchg
test
leave
mov
imul
cld
test
rorb
sub
rolb
cli
mov
stos
mov
pop
fimuls
add
lea
mov
xor
lock
jecxz
dec
ja
test
sarl
dec
mov
stc
push
into
inc
add
cmp
inc
jno
std
sarb
cs
pop
out
dec
xor
sbbl
and
hlt
sarb
xchg
xchg
xchg
xchg
push
xor
xor
int3
cmpl
test
dec
jae
cld
jmp
sbb
cmpsl
or
mov
inc
xchg
jp
mov
or
shll
and
xlat
pop
fdiv
cmp
pop
sub
sub
add
mov
ljmp
xchg
sub
not
sbb
xchg
pop
sbb
sti
inc
xchg
aaa
sbb
jl
out
dec
mov
xchg
mov
inc
push
push
or
push
mov
outsb
and
or
pop
nop
adc
mov
dec
std
dec
stos
lret
cmp
inc
ret
or
push
mov
shrl
xchg
scas
je
lea
push
mov
mov
xchg
pusha
shlb
jecxz
mov
outsl
rcrb
mov
mov
push
out
arpl
xor
outsl
mov
out
jbe
sub
mov
pop
lods
andb
mov
test
testl
add
adc
dec
mov
addb
xor
outsb
adc
jecxz
push
jmp
sti
shlb
sarb
loop
scas
sub
bound
sub
xchg
cmp
mov
cmp
jle
out
pop
and
mov
sub
ljmp
pop
cwtl
mov
test
dec
icebp
add
rcrb
iret
jo
jns
insl
fidivrs
or
jle
test
cltd
loope
jbe
shll
adc
inc
jge,pt
add
dec
fnstenv
sbb
inc
repnz
push
sub
inc
dec
movl
jge
pop
insb
shll
and
mov
out
ljmp
pop
xor
ret
call
ss
jl
arpl
add
or
mov
scas
arpl
pop
in
inc
sub
inc
pop
rcrb
jnp
pop
outsb
push
pop
xchg
orb
fld
loope
loope
or
loopne
push
xor
mov
adc
jge
adc
jae
add
stos
std
lds
xchg
mov
repz
sub
fsub
mov
add
adc
adc
jmp
lds
dec
cmp
sub
jmp
adc
jge
and
pop
test
dec
loopne
jge
fstpt
push
or
pushf
enter
sub
mov
inc
daa
fs
js
sahf
inc
shll
cld
cwtl
ljmp
mov
lods
mov
add
mov
sub
aad
out
xchg
add
into
adc
mov
lahf
fwait
mov
adc
add
xor
daa
orb
aas
cmp
pop
das
inc
pop
pop
cmp
and
fucomp
test
or
mov
aam
pop
stos
push
adc
inc
outsb
jmp
or
in
add
dec
pop
pop
or
and
test
jle
mov
aaa
push
fwait
call
push
addl
dec
push
mov
jne
push
push
mov
loopne
pop
or
imul
mov
inc
out
pusha
imul
fists
sbb
dec
add
das
mov
or
pop
push
jbe
cli
mov
cwtl
cwtl
ljmp
ret
inc
cltd
jle
pop
ja
sbb
sub
sbb
gs
xchg
mov
inc
mov
cmp
pop
sbb
pusha
frstor
dec
pop
negl
add
scas
stos
push
pop
cmc
fs
fucomi
mov
or
and
data16
out
xchg
dec
stos
repz
dec
and
or
sbb
stos
rcll
and
jl
xchg
cld
sub
or
sub
aam
pop
aas
push
lret
and
or
data16
push
cwtl
mov
ret
inc
xor
fimull
test
or
lret
mov
jo
mov
mov
or
test
test
cli
mov
dec
popa
std
in
sarb
and
es
mov
add
loope
js
mov
movsl
push
jp
clc
scas
aaa
sbb
push
inc
and
jle
add
es
mov
mov
pusha
push
xor
loopne,pn
call
xchg
sub
push
pop
addr16
nop
lods
or
mov
inc
aaa
cld
sub
push
out
sti
out
aaa
xchg
ret
fwait
es
sub
add
and
mov
jle
aaa
pop
rcl
pop
out
rcrl
int
adc
pop
xlat
leave
mov
jl
sub
ljmp
jne
cltd
test
sub
adcb
dec
mov
and
dec
pop
cmc
pop
gs
mov
rolb
sbb
xchg
cmp
adc
lds
arpl
or
das
fsubrl
xchg
push
lods
sbb
out
sti
aaa
push
test
xor
int3
pop
xchg
inc
les
jbe
add
xor
xchg
adc
push
xor
push
test
jae
je
cmp
xlat
and
jmp
rorb
cmp
sbb
cmp
scas
lods
stc
nop
or
xchg
xor
add
mov
mul
aaa
xchg
or
jl
or
or
push
sub
xchg
mov
jae
movsl
call
push
jecxz
test
inc
push
icebp
dec
adc
out
inc
mov
sub
jno
ret
mov
loope
arpl
add
fstps
cmc
mov
lods
stc
clc
add
pop
mov
pop
sub
jnp
and
add
adc
mov
mov
and
adc
jl
mov
aaa
pop
cmp
push
xchg
test
fdivr
jp
add
lods
loop
cld
mov
mov
lcall
pop
daa
pop
add
adc
sub
mov
pop
dec
in
lods
shll
pop
add
in
call
enter
pusha
ja
pop
push
and
jecxz
loop
test
mov
inc
cmp
or
adc
jo
and
int
and
and
shll
repz
and
loope
inc
mov
and
push
sbb
daa
cmp
push
addr16
xchg
jle
out
out
jbe
adc
mov
int3
jmp
fsub
fwait
dec
push
lods
shlb
add
or
push
mov
sbb
sub
cmpsl
dec
add
addl
sub
rclb
xor
jb
sbb
int
mov
push
sti
cmp
and
inc
push
out
addr16
in
mov
sbb
mov
sbb
shlb
in
cmpsb
adc
inc
push
inc
and
push
popf
xor
jnp
mov
xor
int
jp
inc
lds
and
scas
jno
jmp
pop
ljmp
and
fidivrs
mov
divb
push
add
das
push
xchg
outsb
or
push
ret
and
test
mov
jmp
mov
pop
xchg
cld
not
roll
adc
mov
push
iret
fadds
sbb
or
mov
mov
cmp
xrelease
dec
jge
nop
cld
sahf
test
sti
inc
ror
ds
iret
sbb
mov
jno
sti
pop
js
mov
xlat
jns
push
mov
dec
xlat
xchg
jp
mov
mov
pop
out
sub
cmp
push
rcrl
sbb
pop
test
adc
dec
addr16
inc
mov
dec
mov
adc
ds
xor
xchg
mov
jecxz
inc
outsb
repz
lock
mov
lods
iret
fwait
test
fstl
push
mov
out
stos
mov
movsl
cmc
pop
stos
mov
repnz
out
cmp
push
lret
jae
pop
mov
mov
adc
rcll
mov
icebp
sub
sub
mov
jmp
push
scas
mov
push
xor
sti
cltd
test
daa
cmc
xchg
repnz
xor
outsl
mov
daa
xlat
xor
sbb
push
out
pop
insb
cwtl
popa
rcrl
inc
arpl
add
pop
fdivrl
jae
xor
push
jge
out
out
daa
dec
fdivs
js
popa
out
push
push
pop
sti
xchg
dec
ja
scas
ret
mov
lcall
scas
xlat
cmp
mov
sub
ljmp
fs
test
cltd
mov
shrb
nop
mov
ljmp
xor
adc
test
xchg
pop
stos
pmaddwd
mov
jbe
cli
xchg
hlt
sub
cld
push
cs
hlt
add
push
adc
aam
and
xlat
sub
insb
es
add
in
pop
add
adc
dec
and
clc
arpl
loop
shll
mov
xchg
push
mov
psubb
pop
imul
cmpsl
popa
push
adc
and
lcall
inc
add
sbb
sbb
cwtl
mov
es
cmp
sub
sbb
in
mov
aad
ljmp
aam
dec
enter
inc
insl
pushf
insb
lret
xor
dec
or
mov
cs
xchg
in
jg
aad
adc
mov
cmpsb
sub
add
test
stos
hlt
out
aam
push
ret
mov
lea
push
or
adc
sbb
pop
out
lea
or
xchg
arpl
mov
xchg
aas
push
call
mov
leave
mov
mov
stc
push
in
jl
cmp
jecxz
mov
hlt
ss
mov
and
mov
clc
into
xchg
mov
xor
ja
rolb
push
sub
imul
loop
inc
pop
int
inc
mov
xor
arpl
sub
xchg
jg
repz
mov
dec
mov
aas
testb
cmc
sbb
mov
xchg
mov
inc
loope
cs
xchg
pushf
lods
icebp
test
pop
jmp
lea
leave
fwait
push
scas
shrd
adc
movsb
cs
les
adc
daa
xor
mov
mov
sub
adc
mov
lods
imul
in
ret
xchg
add
push
mov
loop
aaa
adc
cmp
cmp
insb
faddl
ret
mov
pop
rol
mov
rclb
cmp
inc
aam
inc
pushw
pop
cmp
insb
sub
pop
push
or
or
lods
push
test
sub
add
jb
stos
sar
and
pushf
dec
bound
mov
insb
jge
mov
lods
out
icebp
xchg
inc
pop
scas
pop
orl
mov
lods
arpl
lds
je
pop
mov
lods
outsb
outsl
mov
out
push
or
or
lock
add
sub
jne
mov
sbb
xchg
aam
repz
jb
loopne
es
push
into
cmp
incb
dec
cmp
jp
xor
sub
loopne
imul
scas
cltd
mov
fcompl
mov
into
dec
xlat
ret
jns
adc
in
dec
push
loope
cmp
mov
jne
pop
jno
gs
es
movsb
int3
cwtl
aaa
arpl
mov
pop
sbb
fwait
out
repnz
xchg
jno
sbb
sub
cmp
enter
inc
mov
rcrl
dec
sar
dec
xchg
or
mov
mov
lods
lock
mov
out
sub
inc
add
mov
test
jmp
xor
popf
pusha
test
dec
mov
and
xor
ja
adc
xchg
jl
cs
mov
xchg
mov
pop
dec
mov
jmp
fstpl
cs
dec
mov
das
mov
pusha
mov
and
fwait
xchg
jne
inc
ds
cmp
jb
outsl
std
add
xor
out
mov
mov
insl
out
mov
out
stos
fisubrl
xlat
mov
cmp
mov
jb
stos
jge
push
jne
jo
mov
push
scas
cmpb
ja
fwait
les
shlb
imul
iret
push
mov
fidivl
xchg
mov
enter
frstor
fcomps
es
or
or
cmpl
es
scas
filds
les
adc
enter
outsb
aaa
fwait
fwait
dec
cmc
pop
push
les
aas
push
call
add
xor
sbb
scas
pop
xchg
pop
test
arpl
jge
jbe
ret
or
jl
movsb
std
lret
dec
mov
xor
mov
adc
fcomi
jl
fisubrl
xchg
cwtl
lcall
jge
cmp
in
lock
add
psrlq
jno
ret
lret
jns
dec
out
aad
xlat
adc
stc
sar
outsl
mov
loope
imul
out
hlt
mov
out
js
jl
inc
into
dec
pusha
pop
imul
sub
fs
xchg
int
fs
sbb
dec
pop
repz
rcll
aaa
xlat
leave
mov
mov
mov
rol
in
mov
out
std
sub
inc
inc
mul
mov
xlat
mov
mov
pop
shrl
mov
cmp
lret
rcrb
jmp
lock
sub
movsl
mov
jmp
jp
insb
movsb
out
dec
test
ds
xlat
dec
lret
rolb
int
sub
cmp
xlat
int3
addr16
xor
pop
mov
addb
xchg
imulb
loope
insb
stos
lds
xchg
sahf
fcoml
xor
sub
or
pop
cmp
pop
outsb
mov
dec
push
push
dec
js
xchg
sbb
in
enter
incw
das
cmovnp
pop
jno
inc
int3
in
mov
in
fbstp
inc
push
test
cmp
clc
sub
cmp
mov
xchg
ljmp
mov
imul
mov
push
mov
dec
or
mov
dec
inc
xchg
iret
mov
call
sbb
mov
out
mov
jb
add
pop
test
int3
movsl
xchg
inc
mov
pop
xchg
clc
aaa
lea
adc
scas
or
mov
adcb
add
mov
jnp
inc
movsb
lret
and
mov
sub
movsl
dec
add
add
mov
outsb
inc
into
cmp
push
in
addr16
mov
cld
cltd
test
jg
sbb
inc
or
rcrl
mov
mov
inc
enter
ret
inc
cld
mov
loop
mov
iret
sti
mov
jge
jnp
fwait
xchg
mov
or
lea
inc
and
adc
test
jmp
xchg
cmp
dec
xchg
insb
add
add
sub
into
dec
mov
scas
jecxz
or
lea
pop
xor
outsb
lods
repz
jne
mov
cwtl
add
adc
adc
fcmovbe
lahf
cli
xchg
jecxz
shr
inc
jno
or
lret
push
xchg
icebp
cmc
xor
repnz
push
sarl
mov
pushf
pop
loopne
cmp
daa
loope
cli
call
shrl
hlt
lods
xor
cmp
arpl
into
scas
imul
mov
rolb
cmp
dec
aad
jno
inc
pop
in
mov
dec
jmp
mov
push
es
call
or
push
lods
sbb
loope
pushf
pop
mov
inc
and
aam
insl
rolb
testb
insl
out
imul
jl
sahf
xor
leave
ja
data16
jecxz
dec
sbb
jg
test
fcompl
push
xchg
and
mov
or
xchg
mov
lea
test
mov
aam
out
mov
jmp
adc
adcl
bound
sub
jne
dec
sub
push
mov
loop
mov
fs
pop
hlt
mov
inc
cmp
fs
mov
aad
fadds
scas
dec
push
cmpsl
xchg
cmpsb
push
pop
sub
pop
inc
sbb
cmp
fdivrs
scas
xor
mov
xchg
ds
std
sbb
sbb
ret
mov
jnp
jle
rclb
mov
add
jl
push
fdivrl
lods
insl
test
inc
xchg
xlat
not
and
or
and
xchg
es
out
rclb
add
jnp
adc
pop
inc
inc
or
jle
and
push
mov
xchg
fsubl
mov
sar
ss
out
call
or
push
dec
sub
shll
jae
jns
add
lret
push
scas
jnp
fs
rorl
lahf
fiadds
mov
hlt
jno
mov
jp
push
and
lret
push
xchg
out
mov
daa
mov
pop
xlat
mov
mov
xchg
cltd
jb
mov
sbb
pop
or
pop
inc
dec
push
out
ret
lea
dec
test
or
xor
pop
mov
and
sbb
pusha
cmp
cmp
push
add
mov
lods
in
clc
aas
sub
push
cmp
push
pop
jns
xchg
or
sbb
fwait
in
lea
cmpsb
inc
or
xor
in
jns
fcmovb
adc
cmp
add
ret
sub
pop
cmc
data16
or
pop
rorl
xchg
mov
cld
test
mov
add
aam
mov
jae
mov
cmp
jle
mov
dec
push
xchg
jp
push
sbb
stos
dec
notl
push
hlt
sbbb
xor
jne
pop
cs
outsb
add
pop
rcrl
jg
test
or
xor
cmp
in
orl
in
daa
mov
out
cmp
mov
scas
fidivrl
mov
insl
sub
out
pop
adc
xor
cwtl
fstpt
cmpsb
scas
mov
andb
fsubp
mov
dec
inc
sbb
xorl
stos
mov
sbb
xchg
fimull
inc
gs
clc
and
or
out
or
aam
ss
mov
fistps
pop
repnz
mov
mov
or
imul
ds
and
pop
nop
pop
stos
sub
mov
hlt
int
or
outsb
div
dec
pop
and
jb
mov
movsb
aas
xor
or
jle
jo
pop
push
ret
subl
xchg
add
lahf
xchg
addr16
cmp
insl
mov
jo
cmp
sub
sub
push
xchg
outsb
loopne
stos
adc
mov
mov
mov
dec
xor
add
adc
sbb
cmc
dec
or
popl
js
pop
mov
cmp
in
add
mov
xor
jb
dec
sub
dec
lret
fs
test
gs
pop
xchg
ljmp
call
sbb
enter
nop
pop
out
sahf
jnp
add
sbb
xchg
rorl
lahf
jno
hlt
xchg
mov
mov
fnstenv
sbb
call
xchg
pop
push
sar
pop
loop
sbb
mov
dec
jmp
inc
xchg
push
inc
mov
xlat
dec
movzbl
sub
mov
test
out
jns
adc
cli
cli
mov
daa
sbb
jne
sbb
cli
or
je
mov
iret
outsl
xchg
shlb
fisubrl
adc
lcall
stos
jo
jnp
outsb
sahf
mov
pop
addr16
test
jg
add
or
sub
lret
lcall
cmpsb
xchg
out
aaa
iret
or
jg
mov
aad
sbb
insb
cmpsb
mov
pop
add
lcall
ja
ret
dec
xor
sub
cli
mov
loop
push
mov
imul
pushl
mov
es
sbbb
out
cmc
cltd
sbb
fisttpl
jmp
add
ret
pop
xchg
push
push
mov
add
scas
mov
inc
hlt
mov
ss
test
cmpl
mov
mov
cmp
inc
xchg
xor
push
jo
or
and
cld
in
adc
fdivrl
and
sbb
bound
aas
outsl
jns
ficompl
ret
lret
adc
inc
out
xchg
outsb
sub
arpl
push
add
shlb
sub
mov
jnp
or
das
xlat
add
idiv
push
test
sub
cmp
adc
add
xchg
cmpb
addps
dec
stc
lea
mov
pop
cmp
aad
pushf
sbb
xchg
xchg
pop
jl
adc
test
test
push
sbb
sbb
out
fwait
pop
mov
hlt
loopne
les
adc
sub
jecxz
jnp
fisubrs
stc
mov
dec
cmp
sub
movsl
popf
sub
movsl
pop
sahf
in
aaa
and
out
int
jmp
daa
push
xor
or
jno
test
fisubs
adc
cmp
push
add
cmp
inc
fiadds
and
lods
inc
in
fcoml
shrl
mov
mov
mov
inc
paddusb
roll
jns
test
ds
cmp
cmp
jb
pop
pop
dec
or
sbb
sub
adc
jl
fs
int3
sbb
dec
lock
mov
and
in
sbb
push
pop
sahf
pop
xor
mov
mov
shll
jmp
insl
stc
xor
pop
pop
out
push
in
sbb
out
aas
sub
push
cwtl
aad
and
xchg
inc
dec
jp
pop
add
or
dec
lods
push
adc
fdivrl
aas
in
into
vsubsd
sub
inc
inc
inc
dec
lds
loop
pushf
xor
push
push
dec
repz
add
push
stos
and
je
mov
scas
test
mov
jb
pop
inc
mov
popf
xchg
imul
mov
fnstcw
fwait
aam
jo
and
fbstp
in
inc
shld
daa
push
inc
sbb
fidivl
popf
loop
stos
aad
mov
cmp
cld
mov
fs
inc
pop
add
pop
xor
xlat
outsl
aaa
dec
ret
push
and
sbb
imul
xchg
cmp
repnz
lods
mov
inc
sahf
mov
out
inc
mov
and
outsl
xchg
stos
cmpb
mov
xchg
lahf
pop
cmp
pop
cmp
xchg
and
movsl
and
xchg
sbbb
cmp
fwait
jnp
jle
mov
xchg
pop
mov
sbb
pop
mov
dec
or
xchg
lock
arpl
and
sub
add
fdivr
pop
mov
adc
mov
dec
mov
inc
sbb
pop
xchg
mov
rclb
sbb
das
push
or
xchg
cmp
pop
test
or
cmc
out
cmp
in
inc
push
inc
xorb
dec
lahf
jb
ss
jle
mov
cmp
push
add
or
mov
mov
dec
xlat
call
push
stos
pop
inc
jno
or
xchg
insb
add
xchg
add
rcrb
scas
sbb
addl
or
cmp
sbb
mov
iret
mov
scas
lods
aaa
imul
ret
leave
aaa
cmp
lock
cli
jo
xor
fwait
jns
push
jle
xchg
insb
pop
sbb
sub
cmc
mov
lahf
stos
shrb
mov
dec
or
in
push
or
ret
add
movd
sub
pop
pusha
incl
clc
add
jo
clc
adc
xor
pop
mov
outsl
cld
dec
ret
sbb
divl
sub
sbb
jmp
lret
fwait
dec
and
pop
jne
subb
jmp
xor
xchg
aam
stos
pop
icebp
dec
xchg
jbe
das
dec
mov
sbb
jnp
cld
add
stos
xor
dec
dec
enter
adc
cltd
incl
and
ror
pop
dec
cmp
add
ss
pop
inc
mov
pop
js
mov
inc
test
arpl
lock
ret
sbb
leave
adc
push
mov
int
pop
mov
inc
out
push
mov
fcoml
adc
sub
mov
cmp
mov
dec
sbb
loope
add
sub
cld
jl
fistps
cmp
in
lret
mov
dec
ja
int
enter
aad
aaa
xor
cmpsl
push
xchg
or
aas
scas
mov
test
mov
rorl
and
inc
in
mov
lret
dec
mov
jecxz
sub
loop
jg
pop
dec
cld
dec
push
rcrb
xchg
sub
ljmp
lds
cmpsb
dec
jp
and
call
cmp
mov
push
insl
out
mov
das
jae
pop
sbb
sub
imul
xchg
out
push
dec
lret
mov
stos
sbb
in
push
or
sbb
test
cltd
ds
mov
adc
pop
or
repnz
sbb
inc
add
clc
jnp
dec
mov
xor
repnz
test
mov
adc
jle
inc
call
icebp
sbb
push
xor
cltd
xor
insb
dec
cmp
xchg
pusha
mov
mov
bound
xor
lret
les
jns
mov
stc
jl
inc
std
or
out
fnstcw
mov
lea
sub
jnp
xor
mov
mov
fadds
cmpsb
xor
jne
loope
rorl
inc
into
aaa
sub
dec
les
xor
pusha
cltd
es
push
xchg
jo
sbb
jns
jns
repz
mov
add
jae
xchg
push
dec
repz
int
pusha
inc
movsl
dec
jo
loop
repz
lahf
pusha
rorb
stc
mov
mov
adc
jno
fistl
sarl
dec
ss
je
cmpsb
leave
adc
and
outsb
xchg
testb
and
adc
and
in
jnp
pop
pop
scas
mov
adcb
jmp
mov
pop
mov
ss
sbb
js
add
adc
and
sub
arpl
jp
jmp
mov
or
ss
pop
mov
jp
and
xchg
push
sub
dec
jae
sub
adc
cli
xchg
rcll
xchg
lcall
fisubs
mov
or
enter
or
mov
add
pop
popa
aas
xchg
push
std
dec
insb
notl
or
stos
pop
xchg
mov
xchg
fs
cli
dec
lret
add
adc
cmp
jbe
sahf
inc
push
push
sbb
or
and
xor
js
or
cwtl
xchg
mov
sbb
cmp
stos
xorb
out
cwtl
icebp
fdivrl
outsb
jmp
xor
xchg
push
mov
dec
gs
and
push
adc
cmp
int
arpl
fadds
mov
jno
pop
add
flds
pop
aas
xchg
out
es
jb
loop
data16
xchg
mov
call
xor
push
loopne
push
stos
lds
adc
push
out
fwait
dec
push
cmp
push
inc
ja
cwtl
int3
add
rol
lret
movsb
jne
fwait
xbegin
scas
test
push
xchg
mov
mov
fisubs
push
lods
sub
mov
daa
sbbb
popa
adc
sub
in
fstp
insb
or
les
mull
fmull
lock
int3
andb
fwait
nop
aam
into
xor
push
sub
jbe
mov
sbb
mov
sub
fucom
lahf
movhps
mov
push
mov
push
cmc
stos
or
xor
dec
push
inc
mov
cmp
addr16
into
dec
std
shlb
lds
xchg
sti
dec
pop
test
scas
btr
or
push
addl
sub
in
xchg
loop
and
jge
js
mov
pop
fmul
loopne
rcrb
rolb
add
and
jns
rorl
fcom
sti
int
or
push
nop
in
outsb
test
jo
jns
gs
sbb
bound
jne
clc
and
pop
ret
cmp
rol
xchg
stc
enter
xchg
inc
insl
lcall
movsb
add
wbinvd
jns
add
xchg
ljmp
xchg
ljmp
fs
aad
xchg
and
xchg
imul
cld
fsubrs
mov
adc
mov
mov
loop
das
fsts
pusha
fimull
dec
dec
sbb
js
repnz
xor
inc
dec
jno
addr16
push
mov
test
invd
xchg
mov
dec
loopne
lret
push
lea
sahf
xchg
mov
push
mov
jp
push
dec
hlt
jnp
xchg
out
jp
ret
or
sbb
stos
lds
mov
sub
insl
test
xchg
aaa
xor
adc
cmp
mov
jae
inc
insl
out
mov
shrb
andl
rorl
aam
jl
loop
leave
das
fbld
adc
and
repz
dec
adc
xor
sbbb
mull
int
mov
psrad
inc
aad
pop
fistpll
mov
pop
adc
pop
add
mov
mov
lcall
push
popa
push
mov
jmp
enter
sti
loope
cmp
insb
popa
in
adc
xchg
push
out
lods
adc
xor
inc
push
jl
bnd
ds
jns
enter
pop
cmpsb
std
push
ret
shll
icebp
loopne
dec
lods
pop
das
fistps
mov
test
jne
push
in
cld
imul
repz
scas
sub
xchg
add
aad
and
addr16
inc
xor
ds
enter
sbb
fildl
movl
jnp
ftst
or
jecxz
jae
rcrl
andb
mov
push
sbb
ss
out
pop
jl
jp
inc
popa
jbe
shr
push
xor
clc
and
repnz
in
and
push
xchg
hlt
jo
push
gs
aam
push
ret
cmp
lea
xor
mov
sub
out
enter
mov
mov
test
insl
arpl
mov
and
mov
pop
mov
imul
mov
and
dec
rcrl
imul
insb
jg
or
xlat
or
dec
jne
testb
inc
xchg
inc
cmp
test
insb
xchg
loope
lock
cmp
mov
aas
jle
jle
add
lods
test
mov
ret
sbbl
js
or
rcrl
sbb
fdivl
or
or
lret
xchg
dec
mov
lea
pop
andl
outsb
stos
nop
in
mov
mov
sbb
mov
sbb
inc
imul
push
sbbl
push
clc
into
cmp
popf
xchg
adc
or
test
push
es
cmp
or
sub
and
adcl
jmp
fs
adc
fdivrl
jb
dec
hlt
add
enter
jp
lcall
test
fldt
jbe
imul
push
add
mov
xchg
das
sti
bsf
or
jae
test
push
adc
enter
addr16
clc
leave
mov
jbe
cmc
insl
fcomp
jbe
hlt
and
test
ret
push
test
cmp
jb
xor
jbe
xchg
inc
cltd
jae
imul
push
or
inc
test
push
int
and
pop
sbb
and
add
xchg
loop
idivb
jnp
mov
mov
out
jmp
fs
adc
and
adc
adc
ds
daa
push
sbb
ss
add
cltd
fisttpll
or
cwtl
pop
mov
icebp
mov
fs
cltd
sahf
js
ss
or
out
je
fsubr
in
outsl
dec
insl
fadds
xor
jno
outsl
fildll
or
push
sbb
jl
popf
mov
jnp
pop
cmp
push
movb
dec
xchg
mull
push
imul
push
imul
mov
in
cwtl
or
mov
mov
ror
sbb
cltd
add
mov
and
xchg
mov
jle
cmc
jmp
mov
shll
pop
lret
mov
mov
adc
fildl
popf
jge
xor
je
flds
test
push
cs
out
ret
fs
sbbl
mov
in
mov
mov
gs
mov
das
xchg
or
sub
sarb
rcll
pop
pop
pop
cltd
mov
jle
in
mov
push
fsub
andl
jno
sub
cld
and
xlat
sbb
out
adc
cli
ret
xchg
sub
add
jle
stos
mov
dec
int
jno
sbb
cmp
leave
sub
cwtl
roll
movsb
jmp
fbld
test
loope
icebp
ret
and
push
insl
inc
ret
adc
loopne
mov
mov
lds
jl
mov
imul
fstps
push
loopne
es
bound
mov
gs
fisttps
xchg
cltd
arpl
jmp
mov
or
dec
mov
imul
aam
sbb
mov
rolb
roll
out
loope
add
pop
iret
pushf
ret
xchg
dec
push
or
inc
sbb
sub
lahf
lock
dec
push
fsubs
mov
xor
jae
xchg
ficomps
sub
addr16
in
in
mov
js
lret
xchg
fisttpll
fadd
pop
dec
repnz
xor
jo
outsb
mov
rorb
cmp
out
cmp
jle
push
lahf
mov
xor
mov
insl
andl
and
cmpsl
jle
push
dec
arpl
lods
jg
lock
or
fnstcw
repnz
in
sbb
mov
sbb
dec
sub
aam
sbb
sub
jae
addr16
or
clc
loope
sbbb
ja
dec
gs
xchg
pop
insb
arpl
push
inc
adc
adc
jns
xchg
rorl
data16
add
jmp
jp
test
dec
xor
mov
cli
ds
outsl
mov
fisttpll
getsec
pop
aaa
cmp
dec
and
test
jge
out
mov
in
insb
mov
ret
push
je
enter
es
jle
cwtl
cmp
push
mov
jg
pop
cmp
pushf
sbb
scas
arpl
mov
test
lahf
popf
lret
dec
mov
addl
int3
xor
or
push
dec
jae
mov
cmc
test
sbb
cmc
ja
mov
hlt
lds
mov
pushf
leave
jecxz
pusha
iret
cltd
mov
mov
es
into
test
xor
sub
loopne
pop
in
add
sub
test
xchg
push
pop
inc
mov
in
ss
add
add
inc
popf
jb
leave
and
xchg
adc
sbb
sti
loope
sub
inc
filds
bound
jle
fs
pop
sub
ret
out
rcrl
jbe
push
or
mov
cwtl
adc
stos
jecxz
jmp
movsb
subl
pop
mov
adc
jnp
mov
addr16
addr16
rcrb
adc
add
js
andb
outsb
or
insl
lahf
test
or
xchg
repz
cmp
xchg
pop
dec
cmp
arpl
dec
outsb
ror
inc
adc
or
movsl
loope
dec
push
test
pop
sub
stos
popf
inc
icebp
inc
lahf
cmp
and
bound
add
repz
sub
test
lahf
mov
iret
scas
cld
mov
test
xchg
cmp
sub
scas
sub
pop
xor
out
push
out
dec
fdivl
jnp
dec
dec
cmp
stos
push
sbb
mov
cltd
sbb
call
mov
es
mov
hlt
adc
in
lcall
lods
dec
jb
outsb
jae
cmp
cmpsl
leave
out
mov
pop
sti
xchg
das
dec
dec
movsl
pop
mov
data16
adcl
and
mov
or
mov
cmovle
ja
mov
dec
add
xor
insb
call
inc
repz
fiaddl
fdivl
fsubs
mov
movsb
jo
pop
hlt
out
push
cmp
cmpsb
cs
repnz
cld
aaa
jmp
push
push
jl
shrb
pop
mov
inc
xor
inc
mov
pop
mov
add
lods
xchg
arpl
push
add
or
jbe,pn
adc
xchg
cmp
shrb
rorb
inc
xor
in
fwait
in
into
adc
mov
out
cmpsb
test
mov
cli
scas
lahf
xchg
or
rol
jb
aaa
jge
sub
mov
incb
lods
movsl
int
dec
iret
fsub
xor
jnp
sub
xlat
fs
aam
add
imul
xchg
push
mov
stc
jmp
inc
scas
fisubrl
insb
int
xchg
insb
inc
sbb
stos
cmpsl
fstpl
push
mov
stos
adc
jle
xchg
ret
es
cltd
jl
inc
inc
in
loop
fadds
jnp
inc
movlps
push
push
add
adc
cmpsl
or
push
xchg
mov
imul
bound
sbb
jecxz
test
bound
or
pop
dec
es
call
rolb
data16
xchg
mov
arpl
xchg
or
dec
js
mov
ret
sbb
addb
pop
test
lret
lea
pop
loop
jbe
fldenv
enter
popf
inc
push
dec
push
inc
in
add
inc
jno
sub
inc
test
jne
mov
lahf
ret
into
push
cmpb
leave
mov
fwait
or
and
lcall
add
dec
lock
xor
mul
fs
adc
add
les
mov
icebp
sti
adcb
dec
pop
jmp
sbb
xchg
lahf
mov
jo
and
dec
sub
jle
jl
jecxz
insb
cmpsl
xchg
lods
in
lcall
enter
jne
sub
mov
out
inc
and
pop
or
icebp
cli
xchg
out
in
mov
in
addr16
and
fldt
sub
jmp
and
dec
or
mov
jg
mov
mov
cs
xchg
ret
aas
sub
aad
cmpsb
out
insl
filds
pop
sub
sub
fistl
or
lds
andb
inc
out
mov
pop
jae
cmpsl
push
add
sti
sarl
cmp
pop
stos
pop
lahf
or
clc
mov
popf
test
movsb
add
sahf
out
test
mov
mov
in
mov
or
sub
adc
fnstsw
sub
or
jg
pop
xor
push
data16
or
cmp
out
sbb
mov
add
dec
sub
out
lds
xor
mov
inc
pushf
inc
lds
js
jae
std
push
fidivs
mov
fstpt
rcr
shll
cwtl
int
jb
push
aam
jp
push
or
mov
out
xor
push
pusha
pop
jle
xchg
xor
int3
or
pop
ds
or
xchg
loopne
cmpsb
nop
bound
inc
and
cmpl
movsl
or
adc
fiaddl
in
push
mov
fsubrp
or
mov
push
mov
push
scas
fcoms
jp
out
cli
and
sbb
lret
pop
rcrb
push
sub
in
mov
test
mov
mov
mov
aad
add
pop
psubd
push
sub
cli
sahf
repnz
cmp
inc
jmp
dec
inc
adc
mov
jge
daa
inc
fidivs
pop
push
pushf
loopne
cltd
cmp
test
xlat
and
cltd
cltd
cli
pop
dec
push
test
push
adc
divb
add
jae
inc
int
into
push
cs
or
jp
cs
mov
cld
push
rcrb
sbb
stos
fwait
lea
pusha
sbb
add
sbb
mov
xlat
push
daa
sti
mov
push
cmc
fucom
loopne
call
iret
push
insl
sub
jg
or
addr16
mov
in
rcrl
data16
push
xchg
fdivl
in
xor
xor
test
jno
jmp
inc
adc
ja
push
cmp
out
ljmp
and
movsl
mov
lods
mov
nop
pop
mov
decb
cmp
xchg
addr16
and
xchg
sarl
cmc
dec
or
repnz
xor
es
mov
jge
adc
inc
mov
movsb
stos
data16
sarl
jnp
sub
sub
lock
enter
cli
sub
enter
sub
sahf
or
sbb
jae
rcr
jmp
mov
pusha
fsubl
shrl
int
ret
out
mov
pop
sbb
sbb
int3
adc
cmc
lahf
ret
xor
stc
mov
sub
mov
add
repz
mov
mov
jl
xchg
xchg
adc
lret
aas
mov
jge
int
and
je
es
test
or
push
lahf
cmp
lret
xlat
test
fcmovnb
stos
pop
cmp
pop
ss
lcall
sub
aaa
push
mov
cltd
mov
mov
mov
mov
in
jo
and
andl
dec
mov
push
mov
adc
mov
test
adc
sub
in
sbb
jle
arpl
or
imul
cmp
xchg
mov
in
scas
cs
sbb
jecxz
dec
push
jmp
push
inc
or
imul
fdivs
test
sbb
cwtl
jl
stos
pusha
pop
sar
cltd
adc
mov
jo,pn
or
test
pop
lret
xor
sahf
in
lret
push
xchg
mov
sarl
pop
lds
pop
adc
ror
sarb
leave
in
das
setp
sbb
popa
pop
inc
and
test
stos
adc
push
out
pop
movsb
mov
js
mov
mov
sti
fcomp
and
fstpt
push
aaa
xchg
push
js
popf
mov
mov
mov
mov
shll
iret
mov
xor
call
icebp
push
mov
mov
leave
dec
sbb
mov
mov
sub
push
scas
fidivrl
xor
xor
add
in
test
xchg
cmp
cmc
add
cs
push
inc
iret
mov
enter
mov
outsl
das
sub
xor
jl
xchg
inc
push
mov
loope
dec
xor
pop
push
xchg
adc
js
rclb
rorl
int
cmp
fildl
cs
test
xchg
jl
adc
rcr
sub
insb
xchg
into
sub
mov
mov
mov
loope
push
push
leave
das
add
xor
lods
mov
shr
mov
adc
push
movsb
test
insl
hlt
mov
lcall
fisttps
rorl
adc
fcomps
shrl
mov
sub
cmp
sub
aam
loope
push
pushf
ds
aaa
sub
push
mov
add
fisubrl
addr16
mov
mov
xchg
scas
pop
adc
xchg
push
mov
lods
xor
lods
sub
and
out
mov
push
clc
xchg
add
inc
ja
repz
pop
mov
fnstsw
xlat
add
in
shl
nop
insl
aad
jecxz
sub
imul
les
ficoml
cs
test
pop
cmp
jge
push
dec
shll
dec
mov
or
dec
aad
lret
mov
lds
mov
sub
push
push
fisubrl
or
enter
cwtl
imul
mov
xor
dec
test
mov
add
sub
les
mov
mov
scas
and
popa
sub
and
pop
mov
pop
lds
inc
daa
call
cmp
inc
xchg
inc
out
into
jl
gs
cmc
dec
nop
fists
xchg
or
dec
in
es
psrld
inc
xor
jg
loopne
aam
js
dec
pop
pop
jp
lcall
cli
jg
jb
jmp
stos
addl
sbb
fucompp
pop
je
lea
jmp
adc
inc
cmpsl
or
loopne
mov
faddl
sbb
xchg
mov
xchg
cmp
push
popf
mov
gs
popf
hlt
xor
inc
jae
sarb
jle
out
or
je
mov
mov
ja
fildll
stos
repnz
push
mov
out
iret
add
mov
inc
ds
push
jmp
jbe
sub
mov
mov
lock
es
sub
sbb
pop
and
test
test
xor
andb
lahf
pushf
and
cmc
addr16
into
or
adc
shrl
lcall
ja
ret
rolb
pop
pop
les
cmc
int3
adc
subl
sub
addr16
nop
xchg
mov
neg
lret
xor
push
fldz
sub
mov
mov
in
adc
shl
daa
cmpsb
push
mov
sti
jl
fwait
ror
or
movl
in
dec
inc
cmpsb
sub
push
xchg
cli
xchg
sbb
cli
xor
bound
sub
ja
jns
daa
and
bound
or
push
imulb
fsubs
pop
xor
icebp
dec
push
dec
adc
inc
push
ss
lcall
lret
cltd
inc
sbb
inc
add
mov
fadds
add
jnp
xor
loop
pop
mov
sahf
cltd
rol
inc
xchg
lahf
sti
inc
sarb
push
add
xor
cmp
sbb
sub
pop
adc
and
mov
push
outsb
data16
loopne
ja
inc
imul
push
xchg
clc
adc
lcall
in
jle
adc
xchg
inc
aad
sbb
mov
cmp
fdivl
rolb
outsb
sub
cmp
std
sarb
lods
fldl
mov
dec
fdivs
aaa
mov
add
clc
pop
sarl
icebp
mov
fs
mov
into
mov
cmp
mov
stos
insb
xchg
stc
sub
cmc
mov
cmp
test
push
cwtl
pop
in
lret
test
push
jns
xor
ja
in
adcl
into
mov
fs
shll
and
pushf
mov
out
xchg
or
mov
scas
das
sub
adc
mov
scas
lea
and
mov
adc
or
dec
lcall
adc
jmp
in
icebp
cltd
push
mov
mov
or
in
out
ficompl
sbb
pop
fdivrs
jns
lods
pop
sti
dec
scas
or
lods
test
push
dec
xor
add
out
lods
icebp
jo
and
add
popf
out
jo
add
iret
aam
lea
outsb
sub
mov
sub
jno
mov
clc
insl
push
inc
js
jmp
inc
inc
add
cld
add
inc
mov
lret
xchg
outsb
jo
lods
ljmpw
loope
jg
adc
pop
xchg
sbb
sbb
test
cmp
dec
dec
imul
sbb
shr
notl
or
push
mov
cmp
sbb
mov
pop
das
test
popf
cmpl
cwtl
inc
xlat
ret
imul
mov
mov
shlb
aad
fadd
cld
orl
pop
cltd
hlt
xor
insl
mov
mov
and
ror
inc
in
cwtl
or
jns
push
gs
pop
sbb
mov
ds
hlt
xchg
sub
out
ja
sub
xorb
xor
outsl
cld
in
adc
mov
inc
xchg
inc
mov
push
cmp
imull
stos
and
mov
stos
xor
gs
pop
jge
ficoml
mov
in
stos
sub
loop
rol
cmp
mov
jo
pop
mov
shrl
mov
fidivrs
lret
dec
jecxz
test
jecxz
into
insb
mov
and
hlt
icebp
lds
sahf
daa
push
aam
mov
sub
adc
or
js
mov
mov
cltd
mov
enter
sub
stos
push
mov
shlb
push
loope
push
ss
cmp
sub
jecxz
dec
dec
fs
lret
sub
imul
push
shll
gs
iret
les
xchg
mov
add
into
mov
out
test
push
inc
in
push
jmp
pusha
sub
in
fs
pop
fidivrl
rol
xor
cmp
adc
dec
or
jb
lods
mov
loop
push
push
neg
jnp
push
cld
les
int3
xlat
xor
jmp
dec
add
in
push
into
sub
jge
aad
add
adc
push
out
or
aad
pop
pop
jne
popa
in
fdivl
jns
xor
aad
sbb
out
push
cmc
shll
lcall
mov
pop
jno
rorl
push
loopne
rep
pop
movsb
mov
ja
lahf
lret
repz
js
push
addb
int3
sub
xchg
lahf
xchg
gs
outsl
pop
pushf
pusha
fdivl
dec
sbb
clc
scas
clc
popf
leave
fs
jecxz
mov
mov
sbb
hlt
sbb
xchg
popa
addl
dec
mov
faddl
aaa
stos
push
cmc
xor
mov
daa
xchg
arpl
xchg
ret
sbb
add
adc
xchg
and
xchg
cmp
jmp
or
push
enter
sbb
mov
adcl
out
or
dec
nop
dec
sahf
aad
cmpsb
jecxz
xor
xchg
insl
lods
mov
push
loope
in
push
xor
xchg
orb
fcomp
push
outsl
das
or
cmp
cwtl
hlt
push
aam
and
mov
pop
mov
outsb
jecxz
mov
cs
xchg
or
push
imul
pushf
in
fwait
add
xchg
fwait
arpl
lret
pusha
sarl
out
xor
pop
adc
lret
lret
jl
jg
stos
push
push
pop
fbld
cwtl
iret
jae
cwtl
mov
fwait
mov
push
scas
out
sbbb
rcrl
mov
out
sbb
inc
mov
jnp
dec
jg
or
mov
mov
fsubs
mov
push
ss
shrb
jecxz
push
loope
aaa
push
notl
cmp
pop
insb
and
push
pop
inc
enter
dec
test
pop
inc
idiv
dec
push
mov
dec
pushf
and
push
xchg
inc
mov
sub
adc
in
sbb
fdiv
xchg
add
sbb
data16
pop
movb
mov
outsl
mov
xorl
adc
add
adc
cmp
testl
cwtl
mov
mov
mov
pop
or
mov
sub
mov
pop
fwait
sub
pusha
and
popf
es
in
into
mov
sar
cmp
aaa
test
aam
mov
repnz
pop
addr16
cld
test
push
mov
in
repnz
ds
fisubrs
xor
sti
loop
fisttpll
mov
shrl
cmpsb
loope
andl
add
xor
xchg
int3
inc
cmpsl
repz
jno
jb
aaa
xor
sahf
cli
idivb
shrl
pusha
add
test
outsb
stc
inc
sti
adc
adc
jle
inc
jbe
movsl
sub
sub
mov
push
dec
div
xchg
cmp
xchg
ljmp
pop
mov
ret
or
rol
sub
stos
xchg
popa
push
ja
xlat
out
jnp
testl
testb
dec
or
and
and
mov
aaa
popa
sahf
jb
out
lock
cltd
std
adc
cmp
mov
movsb
out
fimuls
adc
mov
pop
mov
stos
cld
sub
add
or
in
aam
push
in
fnstsw
xor
and
xor
mov
aam
mov
je
roll
aas
repz
scas
mov
pop
add
dec
inc
mov
pusha
mov
adc
dec
pushl
mov
insb
jmp
sub
popf
mov
in
ret
jecxz
mov
pop
xchg
mov
dec
pusha
addr16
xor
jae
sbb
mov
push
gs
inc
nop
in
cld
movsb
ss
inc
push
mov
cmpsl
mov
in
or
bound
and
popf
arpl
cmp
imul
push
pop
inc
mov
and
push
xor
dec
xchg
push
leave
fisubrs
mov
lods
adc
fidivs
jno
adc
xor
rol
dec
bound
test
lret
jle
dec
inc
cmp
push
test
or
ds
mov
add
mov
adc
mov
fildll
loope
inc
inc
sarl
pop
repz
jne
pop
push
popf
mov
inc
xchg
inc
fsubrl
ror
inc
mov
adc
into
out
imul
loop
cmp
xor
dec
imul
push
adc
jno
jbe
mov
pop
jl
mov
sub
mov
jp
dec
inc
or
or
ja
push
sub
in
aas
andl
daa
dec
jp
push
pop
out
sahf
enter
mov
lea
jnp
inc
push
lea
data16
aad
ret
inc
es
lcall
inc
hlt
stc
adc
in
aaa
fwait
dec
cmp
or
pop
inc
mov
jnp
dec
lahf
push
fldcw
adc
mov
cmp
cli
insb
enter
mov
ret
ret
int3
in
je
push
cmp
pop
lret
dec
sub
dec
out
cwtl
ss
icebp
leave
mov
cld
xor
push
sbb
push
daa
loop
into
xchg
dec
data16
ja
jp
sbb
out
mov
sub
xor
mov
mov
rol
stos
pop
dec
sbb
rolb
stos
mov
in
lcall
test
lods
push
pushl
push
and
out
pop
xor
clc
pop
out
mov
xor
std
mov
jge
dec
fld
xor
sarb
outsl
mov
mov
sbb
mov
xchg
adc
jge
out
adc
jp
aam
mov
insb
push
dec
jnp
jno
aaa
das
fsubs
xor
xor
add
inc
sarb
movsl
and
es
test
shlb
aad
dec
in
pop
ss
sub
gs
insl
aas
add
dec
mov
cwtl
cmp
jl
mov
push
in
xor
pop
aaa
stc
lock
test
cmpb
cmp
imul
mov
jg
and
nop
sbb
mov
cmpsl
fidivs
pop
xor
dec
std
mov
scas
pop
data16
ja
mov
xchg
xor
dec
popa
aas
xor
outsl
rcr
cmp
jae
dec
lock
pop
shll
aaa
mov
and
sahf
daa
mov
push
xorb
es
and
jb
gs
jae
icebp
sub
mov
mov
push
mov
jae
or
push
sti
lods
and
js
out
dec
bound
shlb
mov
mov
dec
cli
xor
mov
sub
mov
fstpt
lds
or
icebp
fs
incl
mov
xor
lods
push
sbb
lahf
in
push
jle
xor
jns
jg
jmp
sub
push
sub
adc
arpl
xchg
xchg
stc
jne
lods
mov
imul
pushf
pop
cli
sahf
push
xchg
scas
mov
leave
sbbl
ljmp
divl
xor
mov
pop
push
and
ja
rcrl
nop
push
cmp
jl
mov
daa
js
push
push
insl
roll
mov
mov
lock
lods
cmp
jg
jne
inc
in
cmp
rorl
jmp
stos
jae
mov
push
rolb
ficoml
dec
stos
popa
into
dec
pop
mov
cmp
roll
stc
je
test
sub
jae
cmp
or
add
mov
mov
xchg
jp
lods
fcoms
xor
out
mov
push
xchg
ror
mov
insl
pop
mov
cmp
rcr
test
push
imul
scas
inc
sbb
pop
xor
call
test
pop
sbb
imul
lods
stos
jae
cmp
lcall
xchg
xor
iret
ds
aas
or
in
xor
test
cmp
cli
fdivl
stos
nop
pop
mov
mov
push
ja
aad
movsb
xchg
loope
nop
xchg
jg
insl
loope
test
push
mulb
ret
fwait
mov
adc
fdivp
add
jle
mov
arpl
ja
ffreep
js
rcll
mov
mov
push
push
push
cmpsl
cmpsl
mov
iret
push
and
sub
iret
mov
pop
loopne
dec
loopne
icebp
jb
xor
inc
xchg
cmp
test
cmp
xorl
mov
cmpsb
pushf
sub
inc
bound
cmp
xor
add
pop
shrb
clc
outsl
mov
ret
loopne
sbb
vphaddbd
cmp
pop
call
in
or
mov
bound
outsb
mov
out
add
call
add
adc
xchg
dec
outsb
repz
xor
jge
and
mov
xchg
dec
ret
mov
add
mov
fmull
mov
fisttpll
pop
mov
lea
aad
mov
jmp
fistl
inc
pop
fimull
sub
fs
test
jns
outsl
in
ds
cmp
cmc
test
subl
cmpsl
out
jmp
stos
shlb
inc
stc
mov
pushf
cmc
mov
jo
orb
loop
and
adc
pop
pop
shlb
cmp
xchg
bnd
xchg
xchg
and
and
mov
xor
and
xor
fildll
lods
push
pop
adc
add
inc
pop
mov
inc
sbb
add
mov
cmp
pop
cmpsb
xor
sarl
testb
stos
and
mov
imul
cli
and
xor
mov
movsb
xchg
mov
jbe
jge
jno
mov
pop
test
adc
repz
lret
scas
mov
jle
adc
out
push
mov
push
ss
out
dec
sub
mov
mov
sarl
dec
out
scas
mov
mov
add
aaa
cmpsb
shll
testl
pusha
loopne
in
fcomps
aas
xchg
sub
call
pop
xor
cmp
adc
inc
sahf
bnd
arpl
cmp
addr16
or
int3
mov
xchg
shrb
adc
rcrl
ret
nop
aam
jns
int3
sti
insl
jns
es
xchg
dec
push
push
pop
pop
adc
aad
imul
cltd
cli
jge
jnp
jo
lds
push
inc
and
or
add
rolb
fstps
sbb
mov
mov
outsb
out
sbb
sub
leave
loope
pushf
add
jnp
lret
xor
push
inc
cmpb
push
add
pextrw
and
test
pop
xchg
cmp
into
pop
test
mov
insb
dec
shrl
mov
mov
jecxz
lahf
or
jbe
mov
inc
inc
invd
sub
lret
cmp
jecxz
or
inc
lcall
insl
insl
mov
add
lea
lea
and
push
mov
fcmovb
sbb
test
and
loop
fadds
rcrb
mov
enter
sub
and
mov
mov
in
repz
or
fisubs
in
dec
adc
addr16
xchg
fs
outsl
stos
pop
cltd
dec
pop
xor
sbb
push
push
in
loopne
pushf
cvtdq2ps
cmc
inc
idivl
movsb
addr16
add
sbb
or
mov
adc
push
jno
loop
cmp
iret
jns
sbb
jecxz
mov
mov
jmp
pushf
lds
mov
addb
jmp
jg
imul
cld
test
push
das
or
rcll
loop
sub
pop
and
push
addr16
mov
stos
dec
mov
xlat
rcr
xor
xor
dec
xchg
test
push
into
insl
sahf
xor
enter
hlt
lea
dec
rol
lcall
dec
xchg
push
inc
cmp
jle
mov
xor
pop
lods
fcmovb
mov
mov
or
ljmp
divps
icebp
push
int3
movhps
mov
mov
aad
fidivl
ret
cmc
xchg
xorl
ljmp
cltd
pop
imul
mov
inc
jo
cmp
fwait
push
sub
xor
test
gs
jno
push
mov
daa
dec
dec
push
inc
dec
dec
in
jno
in
pop
add
jb
lret
xor
add
sub
dec
fwait
cmpsl
xchg
xlat
lret
cmc
cmp
testb
dec
dec
push
outsb
filds
mov
imul
push
jl
dec
aad
dec
jl
xor
push
fs
inc
inc
pushf
cmpsb
dec
int
je
pop
js
stc
fisubl
xchg
shlb
inc
fdivrp
push
cmp
xlat
dec
mov
out
push
mov
insb
std
sbb
mov
cmp
mov
fcmovu
jo
mov
xor
movsl
nop
xchg
jmp
inc
mov
orl
mov
insb
jl
xchg
xor
dec
pop
hlt
ljmp
pop
loopne
shrb
pop
xor
ljmp
loop
jle
mov
dec
fstps
pop
xor
popf
push
push
inc
mov
xchg
push
repz
mov
stos
jle
movl
add
lcall
push
mov
cmpsl
sub
fwait
adc
push
outsb
adc
lock
in
mov
adc
add
push
aam
and
mov
cmpsb
cs
mov
out
adcl
inc
mov
xchg
iret
pop
push
mov
cmp
cmp
and
xchg
jp
insb
insl
fdivrs
gs
je
push
pushf
loop
test
mov
inc
push
mov
sahf
idivb
fcomp
mov
test
out
jecxz
sub
rol
xchg
cmp
es
push
scas
ja
add
xor
add
out
sbbl
jp
jp
test
or
add
rcr
xchg
xchg
lcall
fisttps
jecxz
into
stc
loopne
in
mov
orb
xchg
pop
mov
push
fsubl
mov
push
std
cmp
lea
sub
push
jae
jno
inc
dec
repnz
xchg
xor
rclb
mov
aaa
push
mov
lret
repz
cmp
stc
es
xchg
inc
sub
and
cmp
and
mov
rcrb
push
jp
jb
stos
dec
stos
mov
aas
sbb
cwtl
sahf
jle
stos
xor
dec
in
das
and
jno
shrl
mov
cli
jecxz
iret
das
data16
rolb
sub
stc
mov
mov
push
nop
orl
xchg
mov
js
jae
sub
mov
mov
nop
mov
sub
mov
push
data16
stc
cltd
dec
inc
mov
dec
pushw
fwait
xor
cmp
popa
xchg
in
push
out
xor
cmp
add
out
sahf
and
neg
mov
adc
dec
mov
dec
jbe
mov
lret
adc
loope
in
imul
mov
scas
jmp
push
mov
lods
cmpsb
lret
cs
jbe
test
cmpsb
movsb
std
rcrl
lret
pusha
push
or
jns
and
add
popf
add
adc
insl
sub
mov
cmp
jae
lods
push
mov
popa
ret
or
stos
cmpb
pop
mov
fdivl
cltd
mov
xor
mov
adc
imul
sarb
push
and
ljmp
fdivrs
adcb
outsl
add
vmptrst
cli
je
jle
int
cwtl
lahf
and
mov
lock
enter
pop
bound
or
ds
outsb
popa
xor
lahf
push
sbb
jae
pusha
ficompl
jb
xchg
ficoml
lcall
mov
insl
dec
insl
cmp
mov
or
xor
adc
push
sbb
std
out
scas
daa
adc
movb
sbb
mov
xor
hlt
dec
cmp
jne
loope
ja
dec
cmpsl
outsl
sbb
mov
imul
je
or
add
in
call
fstps
mov
outsl
enter
inc
mov
pop
nop
idivb
mov
add
dec
cmpsl
lret
clc
and
fidivrl
push
in
mov
jl
aas
lcall
movsb
int
push
jns
and
pop
and
pop
lahf
inc
cwtl
pop
sti
inc
cmp
mov
fisttps
xchg
jl
ljmp
jl
iret
je
mulb
movsb
sub
mov
add
inc
sub
jns
xchg
mov
and
add
movsl
movl
daa
lds
lret
sbb
add
sbb
mov
jl
mov
dec
leave
mov
je
pop
mov
and
sbb
cmp
loopne
imul
pop
insb
push
dec
add
cmpsb
pop
lds
xchg
add
or
add
cmp
inc
cmp
pop
or
jae
cmp
xchg
push
sub
jb
push
jmp
pushf
stc
scas
dec
jne
dec
jmp
xchg
cmpsb
and
pop
push
loop
repz
xchg
out
xchg
insl
ret
sti
xchg
jno
adc
jbe
sub
mov
subl
rorb
outsl
dec
push
andb
out
scas
je
int
test
pop
sbb
pushf
iret
imul
pusha
popf
xor
xchg
add
mov
icebp
lods
mov
pop
outsl
push
loopne
mov
fwait
in
nop
push
hlt
lret
push
push
int
dec
ret
and
push
xchg
xchg
mov
sub
mov
or
pop
add
xor
jae
out
outsl
mov
mov
idivb
sbb
icebp
lret
push
rolb
and
mov
je
jae
or
addr16
sbb
test
xchg
mov
xor
stos
inc
inc
pop
stos
fdivr
lret
pop
ss
pop
xor
loop
pop
mov
std
mov
pop
pop
sbb
je
mov
adc
repnz
jno
add
jp
mov
and
lahf
sub
inc
insb
loop
add
js
jne
sahf
insl
pusha
fstpl
cli
mov
add
mov
xchg
test
mov
and
out
lds
sahf
ret
roll
pop
and
lock
in
inc
push
das
pop
cmp
push
pop
in
fs
sub
cmp
mov
pop
dec
data16
xlat
imul
jp
or
inc
mov
lcall
push
mov
cmp
mov
push
or
pop
pop
cmpsl
pop
scas
js
int3
adc
sbb
push
xchg
and
or
mov
popf
push
inc
sbb
imul
call
adc
clc
add
iret
cmp
repz
add
xorl
mov
std
int3
cmp
mov
cmp
shlb
push
imul
out
cmp
mov
push
mov
movl
mov
fdivl
and
clc
rolb
ja
mov
test
mov
sahf
xchg
xor
test
push
sbb
or
icebp
push
cmpb
aad
aad
or
xor
add
adc
insb
xlat
insb
mov
mov
pop
repnz
enter
pop
pop
loopne
and
mov
jg
rolb
dec
int
cmp
sbb
pop
xor
movsl
mov
loopne
jmp
pop
mov
lods
dec
test
lret
mov
mov
xchg
out
and
inc
stc
inc
inc
and
inc
xor
aas
cli
pop
mov
icebp
imul
push
shlb
dec
fwait
ss
stos
int
std
and
arpl
adc
jns
aaa
xlat
xor
inc
xchg
data16
dec
xor
add
sub
leave
mov
call
shll
popf
sub
adc
je
inc
push
inc
sub
stc
cmc
testl
push
or
cltd
add
sub
leave
mov
or
pop
push
hlt
push
pop
flds
mov
shrl
orb
cmp
adc
sub
icebp
xor
lods
push
pop
rcrb
bound
or
push
sub
test
or
push
aam
cltd
add
movsb
repnz
pop
out
testb
mov
xchg
test
pop
jae
xchg
jp
fistpll
mov
out
loope
out
out
xor
fld1
mov
mov
les
pop
pop
xor
mov
out
sahf
sub
pop
popa
jle
mov
mov
dec
aas
into
sbbl
daa
push
ud2
daa
sub
xchg
mov
dec
mov
jnp
sbb
and
pop
out
popa
pusha
mov
sbb
xchg
or
push
xchg
cs
pushf
fbld
repnz
cmp
popa
xor
push
push
jo
xor
fidivrl
seta
scas
lret
je
xorb
lcall
cmp
movsl
sub
cltd
cltd
jge,pt
ficompl
jmp
cmp
inc
sti
in
or
clc
pop
fsubr
jl
cmp
mov
loop
inc
push
aad
xor
sub
outsb
jae
inc
pop
xchg
sarb
into
sub
or
dec
into
mov
mov
int
outsl
fcoml
jne
insb
xor
addr16
xchg
stos
mov
aas
les
xchg
add
and
cmc
xchg
lret
fnstsw
enter
into
and
adc
movsl
mov
iret
inc
out
mov
scas
add
je
sbbb
xchg
cmpsl
mov
cmpsl
leave
push
fsts
jmp
mov
test
out
aaa
stc
dec
clc
outsb
sbb
adc
xor
and
nop
inc
pop
addr16
jp
add
mov
pop
mov
fucom
jl
mov
and
pop
cmp
int3
out
push
int3
fnstcw
jl
push
inc
dec
lret
nop
in
xor
lods
mov
dec
mov
jmp
fwait
adc
imul
mov
pop
lcall
js
adcb
adc
pop
in
jle
repnz
pop
rcrl
jno
cmp
aaa
icebp
adc
popf
mov
and
xlat
push
les
cwtl
mov
mov
mov
out
cmp
jo
jg
pop
sub
into
mov
aas
imul
in
sbb
loopne
push
push
adc
stc
mov
mov
insl
loope
xlat
and
aas
and
mov
mov
mov
jbe
dec
imul
dec
mov
mov
popf
popf
lods
inc
cld
sbb
adc
xchg
add
lods
cli
jl
mov
mov
shlb
mull
jnp
or
cmp
les
test
cmpb
xchg
mov
into
int
fwait
icebp
sub
in
stos
cmp
scas
int
and
lret
jp
clc
jno
xor
cmpsb
push
inc
aaa
dec
mov
xor
add
jp
sub
adc
call
repnz
inc
stos
push
dec
shlb
xchg
mov
in
push
sbb
or
pusha
pop
mov
adc
shrl
fcompl
push
jecxz
add
add
lds
popf
decb
clc
add
lock
add
out
int3
popf
std
push
getsec
mov
in
push
or
shr
ret
fs
xchg
mov
sub
add
mov
filds
jle
xchg
pop
and
loope
lahf
jle
popf
push
mov
gs
scas
test
repz
pushf
mov
xchg
fisttpl
cmp
pop
push
pop
pop
xchg
test
xchg
stos
sub
data16
add
ret
pop
add
push
sarb
sub
xor
mov
test
daa
cmpl
sbb
clc
popa
pop
les
lods
lret
jmp
or
mov
xor
sbb
aam
cwtl
push
enter
and
cmpsb
mov
mov
pop
jp
jg
ja
xor
xor
repz
popa
rorb
jbe
ret
adc
aam
jb
in
gs
adc
cmp
or
aaa
mov
push
shll
inc
inc
mov
dec
adc
testb
adc
pop
daa
inc
jb
mov
js
int
ljmp
data16
add
adc
iret
lods
adc
mov
sub
mov
inc
pop
arpl
repz
pop
cmp
aad
sbb
pop
das
int3
adc
out
daa
shrb
pop
dec
lcall
mov
ljmp
push
push
out
stos
jnp
sbb
dec
mov
jb
or
pop
out
and
push
iret
in
jl
cltd
add
repz
das
jl,pn
sbb
dec
addb
push
ss
or
or
dec
pop
cld
scas
es
fdivs
mov
mov
test
mov
add
xchg
gs
dec
mov
aas
inc
aad
pop
daa
adc
push
loope
push
sbb
fnstcw
push
incl
push
inc
outsl
cmove
in
gs
mov
test
sbb
mov
das
xchg
lods
out
fildll
xor
imul
movsb
cmpsb
out
mov
fmull
es
add
lcall
or
and
mov
bnd
mov
outsl
or
insl
js
out
pop
sti
sub
cmp
xlat
mov
and
rcrl
or
les
push
test
xor
cli
pop
js
pop
mov
aam
add
pop
imul
decl
pop
cmpsb
cmp
int3
pop
push
mov
repz
xor
jmp
cmpsb
ljmp
xor
mov
xchg
mov
fistps
shlb
pusha
out
pop
aaa
xchg
sbb
xchg
bound
fstps
mov
lea
cs
add
ja
push
scas
aaa
stos
cltd
jns
pop
dec
xchg
jns
in
mov
test
mov
xor
stos
lret
adc
sub
shrl
subl
cmp
iret
add
ret
mov
pushf
xor
sti
repnz
ret
shr
adc
fdiv
std
mov
adc
fiadds
aam
push
inc
xchg
jae
pop
sbb
icebp
outsl
push
jmp
in
xor
adc
cli
jb
popa
stc
sub
test
nop
push
inc
jecxz
loopne
sbb
cmc
lock
sub
cmp
add
in
enter
out
repz
sub
psubusb
inc
adc
out
mov
or
fucomip
push
push
sbb
xchg
cmp
xchg
mov
test
mov
jnp
mov
jg
lods
cmp
mov
cld
xor
pop
and
cwtl
push
mov
and
fstpl
test
ss
es
fnstsw
sub
test
jbe
sub
push
or
stos
int3
cltd
xorb
fistpll
mov
iret
movb
sbb
push
jmp
popa
pushf
ljmp
jmp
inc
data16
rcrb
cmc
aam
inc
add
mov
pop
fdivs
sub
push
js
adc
loop
std
scas
push
aam
jo
cmp
popf
aad
add
aad
fcompl
cltd
popa
sbb
jge
xor
ss
imul
insl
jmp
fcomps
sbb
adc
cmpsl
aaa
and
or
jmp
aaa
or
ss
fisubrs
xor
pop
xor
ljmp
sbb
xchg
or
loope
adc
popa
ret
mov
frstor
mov
pushf
cmp
loopne,pn
add
repz
push
cmp
inc
push
dec
roll
xor
push
adc
shrb
fidivrs
jb
movb
imul
addr16
pop
cmc
push
jae
mov
and
push
cmp
pushl
lret
out
dec
stos
imul
push
out
jae
cli
int
in
xchg
xchg
add
xor
inc
mov
mov
xchg
out
mov
mov
loope
out
loope
add
cmp
and
jp
mov
es
xchg
and
push
out
out
aaa
decb
jo
mov
shlb
dec
xor
mov
cmp
sub
dec
jo
movsl
test
mov
adc
inc
cld
imul
mov
sahf
xor
scas
dec
clc
add
popa
mov
in
aad
inc
lret
push
lret
mov
ds
cmc
push
scas
mov
dec
mov
fidivrl
and
test
cli
test
imul
mov
dec
push
hlt
dec
inc
or
ror
sbb
rolb
push
lea
stc
shr
and
add
jbe
loop
outsb
enter
sub
repz
rorl
mov
fst
cltd
sbb
cmp
popf
jno
jle
inc
sbb
and
ret
adc
pop
push
repz
push
hlt
iret
push
xor
lahf
pop
xchg
fwait
and
push
dec
lret
pop
and
adc
outsl
xor
cmp
icebp
inc
dec
icebp
lcall
add
push
add
pop
ja
ljmp
xchg
push
aad
cmp
hlt
popa
stc
xchg
or
test
es
mov
sarl
add
fbstp
aad
jno
mov
and
fcoml
adc
jg
psadbw
jns
sub
enter
js
sbb
data16
mov
pop
movsb
sbb
outsl
cmpsb
aam
mov
dec
jne
inc
push
jp
push
xchg
mov
pop
imulb
sub
jbe
imul
inc
movsb
mov
sub
xchg
cmp
outsb
jo
pop
pop
sbb
in
mov
or
in
push
lret
cmp
inc
sbb
sbb
xor
enter
cmpsb
jecxz
cmpsb
pop
dec
mov
xchg
xchg
in
popf
arpl
inc
sub
jo
jnp
push
push
jae
inc
aam
fldcw
mov
push
mov
xchg
cmp
and
shlb
lret
xor
add
aad
sbb
sbb
inc
sub
sbb
mov
push
push
cmp
aaa
hlt
arpl
lds
inc
shrl
adc
insl
xchg
mov
mov
lret
pop
lahf
adc
lcall
mov
mov
jmp
add
add
xor
push
mov
mov
insl
inc
dec
cmc
rcrb
jmp
test
jne,pn
or
or
xor
jle
lahf
sub
mov
arpl
in
mov
pop
mov
shrb
inc
sub
pop
or
fldenv
test
and
sbb
inc
pushf
lock
into
repnz
lcall
or
sbb
mov
sbb
add
mov
cmpsb
mov
pushf
adc
xor
cltd
adc
add
inc
inc
mov
es
test
test
js
nopl
insl
jo
xchg
dec
enter
cmp
hlt
nop
sub
aam
mov
cmp
iret
addb
xchg
out
pop
adc
pop
and
adc
loope
aam
pop
sbb
mov
popa
push
aam
adc
mov
ja
jecxz
xchg
bound
leave
stc
arpl
out
xchg
adcb
mov
push
mov
inc
push
add
inc
jb
and
mov
movsl
std
mov
test
fcmovb
mul
jp
loopne
xchg
test
inc
fs
pop
gs
jp
ljmp
adc
in
out
mov
movsl
call
pop
adc
jmp
push
lock
push
push
fsubr
mov
and
shlb
stos
or
inc
mov
push
sti
fildll
daa
repz
data16
inc
ret
cmpsb
mov
lods
xor
xchg
dec
cmpsb
push
and
jl
xchg
imul
xchg
fdivrl
push
or
fs
sub
sarb
gs
push
loop
dec
bound
lahf
xor
out
imul
shl
loopne
push
lods
cmp
outsl
push
mov
xlat
pop
mov
and
pop
jb
ss
adc
xchg
leave
mov
loop
mov
das
rol
add
mov
mov
test
jle
imul
ds
imul
lret
fisttpll
lods
imulb
mov
out
or
call
mov
and
in
fcmove
ljmp
jo
sbb
imul
jnp
adc
sti
jne
lcall
push
popf
shlb
mov
lods
inc
dec
dec
lock
push
cmp
ret
push
pop
cmp
push
push
xchg
cmp
xchg
xchg
sub
stos
adc
rolb
inc
outsb
cmc
cli
adc
inc
xor
sub
push
inc
das
mov
xor
push
sub
dec
xchg
into
ljmp
popf
negl
lods
add
jb
stos
daa
mov
roll
loopne
je
mov
mov
or
fldt
call
and
pushf
imul
xchg
scas
cmpb
or
adc
pushf
push
lcall
sub
dec
mov
xor
jecxz
shll
xchg
ret
mov
jle
cmp
lcall
sub
xor
or
stc
imull
push
stos
sub
mov
jo
xorl
mov
jmp
add
adc
jge
cli
rcll
rep
lods
popf
aam
jl
adc
pop
in
repnz
or
cltd
rolb
test
stos
jg
test
xchg
je
jne
in
push
mov
push
arpl
jmp
sbb
ljmp
aas
dec
push
rcll
push
cmp
popf
js
dec
cmp
rolb
ss
push
xchg
shll
mov
in
loope
lcall
sub
scas
pop
aaa
mov
cmpsb
xor
mov
mov
push
lret
xor
scas
jnp
mov
mov
dec
cld
mov
dec
cmpsl
jecxz
in
xchg
ss
xchg
xor
push
pushf
jp
or
xchg
fistl
cmp
std
in
popa
orl
test
js
lea
aam
cmp
cmp
movsl
mov
leave
lret
das
addr16
into
and
mov
pop
loop
testl
cs
xchg
in
dec
mov
out
push
mov
lret
cmp
push
push
test
ss
dec
sbb
mov
dec
or
sbb
pop
xchg
mov
mov
mov
jns
rorb
or
add
push
push
gs
push
repz
pop
xchg
or
cmp
ds
push
inc
scas
push
out
push
jl
mov
xchg
sbb
push
mov
add
adc
call
ja
mov
jmp
fldenv
cltd
lods
pushf
loopne
sub
xchg
jns
js
push
mov
push
sub
rcll
jae
ficomps
xchg
add
cwtl
leave
test
adc
adc
je
jo
or
addb
jecxz
mov
mov
cmpsb
outsl
adc
mov
cwtl
ret
movsb
out
fnstenv
jp
add
xchg
icebp
test
leave
pop
in
pop
mov
fs
mov
dec
orb
scas
dec
jnp
insl
fistpl
lods
push
xchg
fwait
out
lea
push
add
nop
lock
iret
mov
push
cmp
push
icebp
cwtl
push
mov
lahf
mov
ret
mov
push
jecxz
mov
lods
dec
gs
inc
jp
sbb
mov
mulb
adc
xchg
mov
xchg
jo
and
insl
jle
insl
xchg
je
insl
icebp
xchg
pop
int
xchg
cmp
mov
andb
cmp
pop
jne
arpl
add
mov
xchg
popa
jp
sub
inc
pop
sub
sbb
jg
and
sbb
pop
mov
ficompl
push
cmpl
sbb
repnz
dec
je
jne
sbb
push
shl
addr16
jns
je
scas
shrl
push
xchg
sbb
xor
mov
cli
repnz
jnp
ds
rclb
aam
sub
pop
mov
imul
pop
sti
cmp
push
sarb
orb
bound
pop
xchg
ss
cmpsl
fs
stos
add
mov
les
sbb
jno
cmp
sahf
jge
mov
push
out
cmp
pop
lcall
clc
pop
ja
adc
lcall
popa
dec
pop
cmc
jge
iret
inc
cmpsb
xchg
imul
mov
sarb
mov
sbb
fbstp
or
mulb
fimull
insb
dec
xchg
inc
inc
testb
or
dec
pop
movsb
inc
aaa
hlt
ja
jmp
divb
push
inc
adc
pop
or
mov
pavgw
stos
loop
dec
in
pop
inc
test
lods
inc
fdivs
lock
jo
and
icebp
pop
dec
dec
xchg
xor
inc
sub
sub
xchg
mov
loopne
cmpsl
imul
clc
out
add
cld
fs
push
adc
jge
cwtl
out
insb
sub
leave
je
icebp
stos
dec
fnstcw
scas
lock
jno
cs
std
inc
fbld
rcll
jg
outsb
pop
mov
mov
aad
add
mov
test
decb
sub
daa
out
push
sub
shl
hlt
sub
and
or
loop
push
dec
std
push
pop
orl
frstor
mov
test
int
pop
push
cmpl
sub
aam
mov
je
sbb
vminpd
scas
xchg
daa
addb
popa
adc
xchg
jnp
int3
inc
lahf
jbe
bound
adc
push
sar
add
mov
xorb
enter
jmp
jmp
dec
dec
popf
mov
fisttpll
push
in
test
jecxz
inc
lea
xor
mov
mov
and
lods
fsubrs
adcl
jns
ja
dec
adc
movsb
ds
cmpsb
xor
inc
and
jecxz
out
jne
mov
cwtl
repnz
test
daa
cmp
mov
inc
lods
fnstenv
xor
dec
in
icebp
jae
loope
adc
and
pop
mov
enter
dec
xchg
rcrb
aad
orl
adc
lds
outsl
xor
sbb
test
dec
cmpsb
adcb
aas
add
cwtl
mov
icebp
or
add
sub
aam
imul
push
or
and
pop
cld
mov
and
push
in
sahf
pop
in
mov
or
inc
mov
mov
lea
rcrb
fistl
pop
je
xchg
mov
loop
push
jl
subl
ffreep
pop
and
sbb
adc
ss
mov
in
inc
fists
or
push
and
lods
dec
fdiv
aam
add
mull
mov
sarb
cmp
test
cmp
rcrb
insl
mov
mov
hlt
pop
cmp
xchg
andl
mov
repz
jp,pn
fs
push
arpl
mov
sub
pop
dec
jmp
fisttps
pop
imul
loopne
out
rclb
jp
cwtl
shrb
xchg
addr16
add
jns
sbb
sti
dec
movsl
push
xor
jl
mov
fwait
sbb
adc
add
arpl
xor
int3
push
sar
and
adc
or
cmp
sbb
aad
ja
pop
repz
jmp
nop
mov
testb
xor
add
push
hlt
mov
dec
adc
xor
adc
and
test
rorb
pop
mov
mov
mov
jle
dec
out
mov
jb
jae
mov
xchg
or
push
nop
mov
nop
sub
imul
inc
xchg
mov
cs
adc
lret
scas
sub
push
stos
push
dec
getsec
pop
pop
dec
sbb
push
xor
inc
or
cmp
and
scas
sub
lret
mov
add
lret
xor
or
data16
iret
dec
mov
add
lret
jno
repz
pop
sar
sub
or
arpl
mov
rcrb
jge
xchg
cmc
fs
pushl
jae
or
pop
movsl
dec
sub
cli
pop
and
test
mov
mov
into
push
cmpsl
mov
mov
movsb
movsb
or
push
pop
fldl
pop
add
inc
fiaddl
cwtl
cs
pop
sub
mov
mov
sbb
mov
push
push
adc
xor
fstenv
fnstsw
inc
hlt
in
push
xchg
in
mov
dec
out
jno
pop
sbb
mov
shlb
arpl
mov
mov
in
add
aas
fildll
rorl
or
xor
lock
jp
inc
loope
lcall
sbb
ret
das
mov
out
add
repz
adc
pop
cmp
std
out
out
les
inc
ds
repz
add
jl
incl
mov
sarb
push
fcom
test
and
adc
inc
ret
xor
cwtl
mov
ja
pushf
jl
xchg
jno
adc
adc
sarb
adc
test
xor
or
pop
in
insb
xchg
icebp
imulb
je
or
push
ds
sub
push
xchg
outsl
push
les
lcall
push
add
push
ret
or
mov
rorl
cmp
mov
insb
cs
mov
shl
cs
fadd
test
or
push
sbb
mov
cmpsl
js
loopne
jge
jne
push
add
sub
jns
adc
in
cltd
into
or
jno
es
push
add
cmp
xchg
cmp
or
push
bound
shl
pop
ds
jg
inc
ds
jmp
push
je
sbb
mov
mov
out
jno
sarl
mov
gs
mov
imul
fidivs
pop
adc
dec
fidivs
adc
jp
fadd
in
out
mov
and
adc
dec
mov
adc
push
loop
and
stos
aam
mov
push
push
mov
ficomps
mov
insl
lock
dec
fildll
mov
jnp
test
loope
in
fsub
lcall
gs
stos
addr16
sub
orl
aam
ja
and
mov
push
dec
fisubrs
mov
sahf
scas
pop
inc
call
push
lahf
adc
pop
aad
xchg
add
pop
outsl
jg
jne
pusha
adcb
jb
arpl
mov
xchg
rolb
mov
scas
mov
xor
fscale
jge
mov
pop
or
push
push
mov
pop
out
js
repz
sub
subb
test
sbb
icebp
lds
dec
gs
xchg
call
xor
and
add
push
inc
shll
cmp
jg
mov
cwtl
xchg
aam
mov
test
in
insb
lods
out
pop
sbb
mov
pop
in
int3
cltd
js
das
ret
pop
push
or
add
std
inc
push
or
push
hlt
fidivs
cli
mov
movsl
add
xchg
xor
sub
int3
or
add
push
test
roll
lods
add
divb
jae
jl
or
mov
loope
xchg
and
adc
repnz
sbb
roll
repz
jae
test
fcomp
test
les
jae
shll
jg
cmp
add
and
fs
test
dec
push
xchg
mov
bound
inc
out
ljmp
jae
inc
xor
add
stos
mov
xor
xchg
or
into
fwait
insl
xchg
push
mov
or
add
sub
xor
jl
push
mov
mov
mov
movsb
adc
nop
inc
push
sub
pop
mov
out
pop
cmp
ret
or
cmp
paddd
loop
pop
push
aaa
fstpl
outsb
mov
ja
std
push
or
out
rorb
or
mov
jns
sub
adc
mov
sbb
ds
adc
rorl
sti
mov
dec
or
inc
lret
lcall
in
inc
push
cli
xchg
lods
pusha
decl
jg
loop
sbb
aam
xchg
std
push
mov
loop
sub
add
es
add
mov
dec
stos
sti
std
or
lock
mov
pusha
jle
dec
dec
add
push
dec
mov
and
je
xchg
xorb
and
icebp
lods
andb
call
pop
push
mov
inc
sbb
push
rcrb
fcomps
imul
lahf
pusha
push
xchg
add
movsl
fs
cmpsb
push
cli
xchg
loop
inc
add
leave
push
in
and
shl
sub
push
test
shlb
ss
pop
xchg
inc
and
xor
cmp
dec
inc
lods
inc
cli
jnp
fnstsw
inc
fcompl
daa
sub
jmp
mov
push
and
xor
push
cmp
mov
pushf
mov
sbbl
sbb
pop
pop
add
outsl
pop
inc
xchg
divl
mov
mov
repz
inc
jl
pusha
inc
mov
cli
shll
push
adc
or
cli
les
jns
mov
pop
out
lret
dec
decw
aaa
xchg
push
pushf
scas
out
sub
add
int3
sbb
xor
adc
and
sub
push
movb
int
in
enter
test
mov
pusha
daa
arpl
sub
mov
divb
or
outsb
movsb
dec
push
add
add
xlat
arpl
inc
xor
aad
loopne
xor
sub
jo
pop
mov
inc
ljmp
jge
gs
outsb
adc
inc
push
scas
test
pop
mov
imul
mov
mov
enter
sbb
sub
mov
mov
fs
out
clc
mov
arpl
andb
mov
scas
in
pop
ds
jecxz
ljmp
repnz
jle
push
test
mov
in
jb
push
xchg
pop
mov
fistps
xor
js
cmp
out
push
sub
and
mov
pop
jmp
shl
fsubs
sub
dec
jne
or
out
and
jnp
hlt
addr16
lcall
popf
and
inc
push
dec
or
dec
imul
mov
jbe
repz
cmp
in
icebp
sar
loop
lock
movswl
jns
repz
aas
incl
loopne
movsl
and
iret
cmp
adcb
xor
sub
jl
flds
addl
iret
xchg
add
mov
scas
addr16
adc
iret
or
push
aam
outsl
dec
or
or
lcall
addr16
lds
pop
cli
sbbb
fsts
std
dec
mov
jae
push
dec
xchg
dec
cmpl
hlt
jmp
fnstcw
inc
call
testb
mov
pop
mov
adc
vmread
jecxz
stos
add
add
mov
int
aas
sub
adc
cmp
dec
fwait
int
stc
mov
xor
rol
movsb
cmpsb
xlat
aad
roll
sbb
fs
sub
imul
incl
clc
enter
xchg
lods
add
loop
adc
repz
mov
mov
data16
scas
and
adc
sub
jno
adc
into
leave
inc
dec
jbe
jl
lea
mov
add
jno
scas
cmc
aaa
push
into
mov
popa
cwtl
lret
iret
push
hlt
cltd
pop
fnstenv
fmull
jmp
bound
lcall
in
cmpsb
mov
in
mov
cmp
andl
pop
fdivrs
add
jo
xchg
mov
xchg
xchg
mov
push
xchg
adc
and
cwtl
jg
lahf
bound
dec
fsubl
ljmp
adc
mov
xchg
push
lock
push
nop
xchg
sub
and
jp
dec
stc
push
push
mov
fcoms
lods
jnp
daa
ljmp
cmpsl
fsts
xor
pop
push
or
int
inc
mov
notb
cmpsl
push
out
xchg
js
adc
test
scas
mov
xor
pop
sbbb
movsb
or
in
das
insl
stos
rorb
test
repz
push
mov
mov
test
sbbl
lret
imul
jmp
addb
out
lcall
adcl
shll
adc
sub
int3
loop
push
popf
ret
xor
sti
adc
inc
int3
addb
in
and
mov
fld
fmul
pop
ret
push
mov
ror
pushf
in
pop
or
xchg
cs
cld
and
daa
inc
cli
mov
xor
inc
push
push
adc
das
sub
mov
mov
loopne
aaa
inc
bound
jne
fs
fidivl
jge
mov
outsl
cmpsb
inc
mov
push
cmc
sbb
mov
arpl
add
movsl
bound
enter
mov
jb
lock
ret
fnsave
sbb
sbb
in
jmp
xor
cli
jns
mov
jge
leave
iret
cmc
scas
in
mov
sub
add
sbb
cmp
insl
mov
adc
or
ret
add
push
adc
mov
lret
loopne
dec
cltd
xchg
xor
into
inc
push
jns
fwait
cmp
loop
jns
sub
xchg
cmp
add
test
inc
xor
xor
sub
dec
push
in
mov
je
sub
bound
js
leave
add
shll
imul
lock
inc
inc
sub
dec
pop
xchg
pop
adc
and
pop
pusha
mov
mov
xchg
test
lret
cmp
dec
xchg
inc
aam
mov
xchg
scas
movb
iret
ror
inc
fcompl
pop
inc
lret
in
add
je
nop
fisubl
inc
fidivs
cmp
inc
cwtl
pop
movsl
into
imul
or
aam
inc
adc
shrl
jno
sub
test
pop
xchg
stc
sbb
cmc
cmp
js
negl
push
add
repz
subl
xchg
hlt
popa
lcall
or
mov
mov
hlt
sbb
jp
mov
aas
call
sub
jl
repz
add
outsb
fidivrs
and
aaa
inc
in
mov
or
inc
adc
adc
xchg
adc
mov
lock
pop
pushf
add
mov
xchg
pop
xor
mov
mov
arpl
mov
sub
add
add
std
fucom
mov
pushl
sub
sbbb
mov
add
fbld
sbb
fldl
cmp
jns
cs
adc
incl
scas
inc
nop
inc
data16
cmp
inc
fwait
inc
xchg
mov
mov
inc
insl
addb
jns
std
addl
push
push
sbb
test
sub
out
xchg
xor
push
addb
sub
fs
pop
add
loopne
xchg
fbld
push
scas
int
or
fildl
inc
sub
dec
ficompl
cmp
and
vcvttsd2si
jg
jg
fwait
hlt
xchg
push
lods
dec
mov
push
ror
adc
call
into
mov
out
adc
jb
and
in
mov
adc
and
mov
mov
mov
rclb
das
lds
sub
mov
iret
push
movsb
xchg
push
pop
in
mov
inc
mov
sub
add
dec
iret
std
xor
imul
insb
insl
mov
sub
cwtl
imulb
xchg
and
inc
mov
jne
dec
pop
xchg
dec
aad
mov
movsl
out
test
jp
pop
push
dec
pop
push
movsb
mov
and
pushf
mov
shll
pop
pop
addr16
cld
fwait
call
xchg
pop
jae
movsl
std
adc
adc
push
rcrb
xor
sti
mov
gs
cwtl
mov
in
dec
mov
les
mov
xor
mov
rolb
push
dec
cmpsl
insl
cmp
test
jno
jo
in
add
addr16
adc
sub
hlt
jg
fimull
xchg
xlat
xor
dec
daa
push
adc
add
int3
movsl
scas
xor
cwtl
sbb
lock
orl
pop
mov
fs
ljmp
mov
popa
xchg
scas
dec
aam
jns
mov
test
in
mov
cs
fwait
clc
fnstcw
adc
ret
jb
jmp
clc
scas
jle
lods
xchg
jno
repnz
mov
mov
fsubrs
mov
mov
jae
stos
hlt
add
adc
sub
sub
mov
dec
xlat
sbb
add
jge
mov
jecxz
jl
xchg
sub
outsb
push
xor
mov
sub
mov
xchg
sub
jl
add
and
xor
push
cwtl
pop
push
adc
shrl
cmp
pop
hlt
jmp
lds
mulb
adc
in
popa
icebp
repz
pop
pop
push
add
sub
lods
daa
shll
adc
sti
dec
and
rcll
or
gs
ror
xchg
xchg
repnz
call
mov
out
sahf
or
dec
jo
inc
stc
call
push
test
jns
inc
out
repz
sub
les
cwtl
sub
push
sti
imul
sub
xchg
ficompl
add
daa
int3
and
push
cs
data16
mov
sub
inc
cmp
xchg
and
mov
pop
jno
clc
xchg
xchg
ljmp
push
push
stos
pop
into
sub
orl
pop
xor
push
clc
jns
pop
jmp
adc
nop
fdivrl
jns
xor
dec
rep
mov
cltd
out
mov
ret
cs
inc
mov
pop
sbb
les
cmp
loope,pn
jle
mov
adc
mov
mov
xchg
cld
xchg
bound
lods
add
addb
clc
fidivl
mov
jl
scas
jbe
pushf
cmp
cmpsl
add
xor
pop
push
push
outsb
mov
sub
dec
add
call
repz
outsb
mov
mov
outsb
dec
ss
aas
lcall
iret
or
movsb
mov
adc
xlat
sbb
xor
shr
std
adc
push
in
sbbl
jp
test
popa
cmpsb
loop
popf
or
xchg
out
inc
fdivr
lcall
cwtl
mov
cltd
fstpt
call
xchg
int3
mov
xchg
xor
sahf
fxch
fidivrl
mov
icebp
push
mov
or
mov
push
test
cmp
push
add
test
and
mov
dec
fstpt
out
pusha
pop
sub
jno
andl
xchg
cmpsl
xor
in
sbb
jmp
adc
xlat
pop
sbb
or
sarl
xchg
ja
jl
jmp
or
adc
or
inc
sahf
jbe
xchg
or
sarl
loop
icebp
xor
jecxz
jne
cmp
sbb
icebp
fisubl
repz
inc
push
roll
shlb
dec
mov
mov
push
incl
cmp
ds
cmp
in
xor
and
pop
arpl
out
lods
lahf
pop
jo
movsl
les
sahf
or
add
sbb
ret
sub
mov
iret
cs
jb
inc
dec
clc
and
push
leave
jnp
add
cmp
jo
sbb
mov
lahf
xchg
mov
mov
add
ror
add
push
inc
or
test
pop
out
lods
aaa
nop
dec
pop
jp
popf
test
ljmp
cmp
popa
arpl
in
sbb
sarb
sub
jle
fisubrs
mov
mov
cmp
test
jnp
movsb
adc
lret
inc
xor
arpl
out
addr16
inc
adc
mov
test
jbe
ficoml
mov
ja
jnp
adc
pop
mov
or
aam
arpl
dec
lods
jno
insb
shl
pop
and
cltd
and
js
push
sub
test
push
push
ret
push
jb
mov
push
ret
push
xchg
leave
sar
imul
lds
mov
jae
push
push
jge
or
inc
and
mov
lret
or
cmp
and
pop
fcmovnbe
ja
push
push
pop
fldl
loope
or
xor
pop
dec
andl
jge
ret
jmp
clc
in
mov
push
scas
sbb
daa
test
push
cmp
rolb
aaa
je
outsl
adc
inc
stos
sub
mov
mov
or
rcr
pusha
pop
decl
mov
and
adc
pushf
cmpsb
fsubrl
mov
lret
ss
sbb
cmp
nop
iret
mov
insb
mov
pop
fwait
xchg
xchg
pop
sbb
jnp
jnp
in
mov
jge
xchg
mov
push
ret
shlb
sub
mov
and
jae
outsb
data16
pop
fldcw
fcomps
jp
andl
ret
aaa
xor
sub
push
and
sti
mul
in
inc
pop
jg
arpl
xchg
testl
mov
add
lret
dec
push
cli
jg
dec
leave
or
hlt
adc
mov
out
cmc
das
mov
out
es
notb
sbb
mov
lcall
ss
jb
in
jge
or
inc
mov
lods
cmpsl
mov
mov
js
ret
jbe
jmp
xorb
and
das
out
adc
sahf
ds
fsubrs
inc
mov
icebp
jg
jb
in
add
cmpsb
sbb
lods
pop
int3
lcall
jb
nop
or
shlb
xchg
push
pop
and
cltd
mov
and
mov
mov
cmpsb
dec
aaa
aaa
pop
and
mov
movsb
cmpsl
test
into
mov
cld
cmp
adc
jbe
test
dec
imull
xchg
loope
push
mov
cmpb
ljmpw
xor
enter
into
cmp
in
mov
add
cs
sbb
add
cltd
sub
out
adc
iret
xlat
pop
mov
rcll
mov
adc
enter
inc
fwait
jmp
add
gs
arpl
fldcw
clc
hlt
sti
dec
sbb
hlt
outsb
outsb
imul
mov
mov
and
stos
cmp
push
outsb
cld
popf
test
push
sub
leavew
pop
adc
xor
testl
sbb
cmc
adc
cld
jb
out
iret
daa
lock
aad
cmpsl
add
aas
mov
sbb
mov
les
mov
and
cmp
movsb
negb
shrl
shl
jnp
mov
push
sub
pop
call
push
sbb
dec
repz
idivb
sub
jp
xor
or
paddsw
xor
pop
mov
pop
mov
das
lret
or
mov
xor
test
mov
mov
push
sahf
jne
and
cmp
sub
fbld
test
inc
clc
scas
xor
or
dec
daa
cmp
mov
or
repz
scas
adc
add
xor
and
ret
sti
dec
sbb
push
cmpsl
scas
cmpsl
clc
in
gs
jmp
iret
or
cmp
jge
mull
push
mov
out
jmp
jb
push
popf
mov
stos
adc
xchg
jge
pop
std
mov
and
inc
pop
shlb
mov
dec
jge
rorb
out
adc
out
xchg
mov
add
mul
mov
sahf
push
pop
leave
addr16
mov
sub
je
data16
sbb
push
jae
pop
mov
loopne
mov
pushf
mov
es
and
mov
and
dec
push
clc
aad
jmp
call
jp
and
sub
das
pushf
jmp
scas
sar
adc
add
mov
xchg
scas
mov
scas
pop
cld
test
xor
push
movsb
push
daa
adc
jp
fsub
mov
mov
addl
and
adc
rcl
cmp
test
add
xchg
mov
sub
ljmp
in
int
pop
in
shlb
pop
mov
dec
gs
pop
add
adc
rorb
incl
jae
repnz
or
push
add
mov
push
jecxz
js
jb
aaa
ja
adc
ljmp
popa
in
xchg
pop
gs
lock
sti
mov
out
push
or
xchg
xor
test
lret
dec
mov
sub
sbb
stos
cmp
aam
outsb
mov
cld
data16
es
into
pop
out
es
jbe
inc
js
add
and
cmp
movsb
push
xor
add
and
mov
xchg
loope
hlt
aaa
pop
sub
mov
sarl
inc
aas
xchg
cs
cltd
cmpsb
jbe
sub
push
push
cmp
xchg
std
sub
js
subl
mov
push
pop
enter
add
bound
or
ds
mov
mov
or
aam
and
subl
cmc
or
mov
cmp
out
shll
stos
loopne
mov
inc
cmp
faddl
pushw
cmp
scas
imul
clc
sub
loop
mov
aas
or
pop
xchg
jo
pop
pop
xchg
cmp
push
push
or
outsb
data16
sbb
aad
out
jno
lods
mov
fdivrp
sbb
in
fcomip
fstpl
pop
jge
mov
push
out
inc
cmpsl
mov
lods
mov
in
aam
mov
in
movsb
xchg
idiv
cmp
scas
fisubrl
xchg
inc
jecxz
je
jecxz
mov
shl
ret
xchg
in
push
jge
stos
sub
imul
out
lods
xor
ja
das
outsl
mov
icebp
lret
ljmp
dec
iret
mov
pop
adc
repz
mov
mov
arpl
xchg
stos
fs
out
movsb
leave
and
sub
cld
mov
lods
ret
bound
xchg
inc
test
repnz
ret
mov
inc
push
mov
mov
in
pop
jno
push
popa
out
nop
pushf
outsl
fildl
andb
pop
leave
ljmp
mov
add
add
xchg
push
xchg
inc
jbe
sub
stc
cmpsb
lcall
cwtl
movsl
dec
mov
scas
fnsave
inc
sarb
fidivs
lret
lret
add
xchg
mov
jecxz
les
mov
mov
add
ret
xorl
sbb
loopne
push
push
inc
push
popf
les
mov
add
int3
es
cmp
lcall
lods
rclb
jmp
jmp
and
jnp
outsl
aaa
adc
mov
pop
ficoml
les
sti
fs
out
mov
pop
xchg
xchg
jge
add
mov
xchg
fs
inc
pop
push
mov
adc
push
filds
testb
addb
adc
jmp
int3
cmpsl
sub
ret
push
adc
in
repnz
sbb
pop
push
xlat
cmp
xchg
subl
dec
push
pop
inc
xor
pop
adc
add
push
jo
push
insb
jbe
jb
in
enter
pop
mov
mov
and
sarl
adc
or
and
outsb
mov
mov
inc
push
fbstp
insl
lahf
pushl
aad
in
cs
sub
sub
loopne
sbb
mov
cmpsb
outsl
insb
imul
jno
es
xor
imul
xchg
int3
mov
xchg
shl
popa
cmp
rcr
ffreep
imul
out
jno
xor
adc
std
jne
jge
loop
push
ror
mov
pop
mov
test
sub
lea
pop
fs
test
push
movsb
lock
sarl
xchg
or
test
or
js
scas
leave
stos
jecxz
sub
cmc
mov
pop
in
xchg
sahf
enter
pop
js
push
fwait
xlat
out
xchg
xchg
and
fwait
cmp
test
mov
xor
sbb
in
mov
pop
dec
push
vxorps
in
pop
cmp
arpl
mov
cmp
and
mov
icebp
rcrl
lds
xor
out
ficoms
icebp
adc
sub
fildll
movsl
cmp
daa
pop
dec
data16
imul
add
aaa
xor
ret
cmp
xchg
test
popf
xor
or
ret
push
sub
cmp
or
lods
inc
mov
cmp
pop
loope
inc
sub
sahf
sub
mov
sub
and
stos
and
aam
adc
adc
movsb
cmp
mov
lds
call
bound
dec
inc
cmp
push
cli
data16
pushf
push
sub
dec
mov
jl
fs
jmp
outsl
aas
mov
jecxz
sub
push
mov
lods
push
xor
push
or
add
loope
mov
jno
repz
lods
add
ljmp
xlat
insb
loop
cli
mov
xor
jmp
sbb
mov
cmpsl
scas
mov
jne
pop
mov
dec
add
dec
ficoml
daa
fildll
leave
mov
insb
ss
mov
arpl
pop
push
pop
iret
xchg
mov
aaa
adc
dec
push
jo
mov
out
lock
jae
int
outsl
xor
mov
or
ss
xchg
push
dec
push
pop
dec
push
cmp
jo
pop
pop
ss
jge
daa
fisubs
subl
mov
mov
stc
out
xor
pop
xchg
jle
mov
pushf
pop
rorl
imul
ja
xchg
dec
imul
xchg
inc
sub
push
sub
popa
add
mov
push
and
push
mov
mov
or
inc
jecxz
push
popf
pop
mov
push
jl
pop
dec
fiaddl
inc
notb
mov
inc
cmp
jecxz
stc
pusha
adc
loopne
enter
and
stos
clc
jle
out
aad
test
les
rclb
and
mov
mov
dec
jl
xchg
lahf
jle
lock
hlt
jae
cmp
push
out
xchg
scas
push
ret
stos
mov
repnz
mov
out
lahf
vcomiss
insl
pop
stos
clc
adc
cmp
mov
mov
pop
inc
or
mov
std
or
cs
adc
jl
shrl
andl
stos
cmpsl
ror
inc
xchg
js
adc
inc
pop
mov
lcall
scas
lahf
push
nop
cmp
pop
je
clc
popa
fadds
cmp
pop
insl
push
mov
ret
xor
addr16
cld
or
mov
fsubrs
rcrl
dec
mov
and
adcb
jns
cmpsl
mov
nop
out
sub
jne
mov
mov
stos
loopne
and
rcrl
jecxz
call
xchg
bound
mov
fldcw
cmpsl
shlb
adc
mov
cmp
inc
cmp
arpl
sti
sub
add
aas
imul
and
je
inc
aaa
sub
mov
inc
push
insb
imul
jge
mov
sbb
push
xor
inc
fadds
xchg
mov
cmp
mov
call
repnz
popa
mov
sbb
pop
jae
popa
mov
stos
shll
lcall
mov
pop
pop
xor
out
mov
aaa
adc
shrb
xchg
and
inc
sbb
es
negl
xchg
mov
inc
xor
clc
inc
push
pop
fdivr
leave
mov
daa
or
mov
lods
js
lods
jnp
xchg
fdivrs
mov
and
ret
shl
lcall
cld
test
cmc
outsb
xor
lret
sahf
inc
xchg
int3
inc
mov
mov
adc
leave
in
orl
ja
loope
or
jecxz
jbe
movsl
and
push
int
neg
mov
out
and
pop
inc
cmp
std
clc
adc
cmc
mov
orl
fyl2x
into
mov
jecxz
xor
jo
in
int3
loope
test
mov
scas
std
lret
stos
and
mov
dec
shl
int3
iret
lahf
jne
rdpmc
loopne
mov
dec
xchg
test
loope
test
adc
stos
cmp
add
jbe
in
push
fmul
inc
in
push
out
movsb
fisubrl
or
mov
cmpsb
fnsave
mov
cmp
push
movsb
ljmp
aas
gs
pusha
cmpsl
push
dec
jg
std
adc
cmp
push
loopne
inc
test
push
sti
in
or
and
inc
insl
int
cmp
in
cmc
sarb
sbb
shll
scas
jecxz
mov
and
xchg
cmc
sahf
lahf
pusha
pop
sbb
in
repz
rol
mov
adc
incl
or
loop
cmpsb
mov
xchg
jle
pop
fidivs
mov
mov
push
jp
cmp
xchg
fimuls
or
mov
adc
sbb
cld
cli
in
pop
pop
dec
fstl
pusha
dec
fcomp
mov
test
mov
pop
repz
fidivs
mov
sbb
and
in
cmp
push
mov
mov
push
insl
test
or
push
in
fstp
cld
sti
ret
fisubl
outsb
cmp
scas
hlt
xchg
ds
pop
loop
dec
mov
mov
js
jb
nop
mov
mov
fmuls
pop
mov
test
sbb
lahf
mov
pop
test
maskmovq
notl
lea
data16
inc
xchg
or
sbb
mov
pop
add
sbb
pop
test
jae
outsb
sbb
mov
mov
mov
dec
sub
insl
dec
inc
shrl
test
push
in
sub
cld
fbstp
lcall
or
xlat
test
or
test
pop
cmp
cmp
jno
and
xchg
rcl
fstpl
fdivrs
fstpt
push
sbb
js
mov
xor
test
int3
repz
push
xor
adc
mov
push
imul
push
pop
das
xchg
dec
nop
jle
push
jne
lods
dec
and
sub
pop
or
daa
dec
les
gs
ja
inc
in
push
push
inc
mov
xchg
adc
nop
add
jl
jbe
jg
rol
in
pop
mov
push
add
imul
jg
jle
mov
fmul
out
adc
pop
adc
adc
pop
lods
imul
sti
inc
orl
sub
mov
push
add
sbb
cmp
sub
xchg
popa
mov
pop
cli
scas
sbb
stos
fwait
cmc
sbb
and
dec
insl
push
rcll
iret
pop
subl
mov
mov
add
out
out
push
gs
jns
shlb
jne
cltd
push
in
cld
add
insl
mov
sahf
dec
es
push
test
call
pop
mov
cltd
aad
dec
and
push
sar
insb
out
sbb
mov
scas
das
and
inc
fstpt
pop
mov
in
inc
xchg
test
fildll
fwait
jns
pushf
push
fwait
jmp
arpl
pop
sub
push
jnp
cld
test
lret
data16
mov
loopne
or
lock
and
cmp
cli
jge
pop
jge
mov
nop
xchg
mov
outsb
add
das
test
mov
pop
or
xlat
fwait
ljmp
mov
cmc
cmpl
ds
sub
adc
or
or
xlat
imul
movntq
out
loope
imul
add
sub
subl
mov
cmc
sbb
pop
and
inc
loope
jle
jge
clc
pop
cwtl
loopne
or
orb
aaa
cwtl
lods
add
inc
std
mov
xor
xchg
mov
xchg
int3
not
jbe
sub
push
icebp
jecxz
popa
mov
xchg
cs
in
adc
fwait
push
aas
push
and
and
mov
in
mov
mov
aad
es
stc
out
test
insl
test
xchg
leave
jbe
push
lods
shr
sbb
insb
sti
xchg
fiadds
lock
adc
jo
jno
sbb
or
or
aad
rorb
push
xor
sbb
popl
sahf
ja
mov
pop
push
lret
jg
mov
cmp
ljmp
mov
aam
mov
jl
in
push
es
or
shll
shlb
ret
mov
pushf
mov
lock
fsubrl
jecxz
dec
mov
sub
pop
ds
mov
sub
cmp
xor
mov
adc
pop
dec
jne
push
jecxz
sub
mov
mov
pop
and
jb
xchg
jp
add
int
insl
fsts
dec
mov
push
ss
test
lret
push
out
xlat
fistps
fisttpll
pop
call
loop
mov
adc
mov
xor
sub
jae
pop
and
out
mull
ret
sarb
dec
loop
cmp
mov
mov
mov
cs
mov
dec
cmpsb
xor
xchg
add
adc
jb
iret
addb
fistpl
cmp
xchg
or
jo
cmp
in
dec
outsb
ficomps
lcall
fdivl
xlat
jmp
inc
imul
inc
dec
jne
pop
test
jb
push
call
loope
lcall
pop
sub
das
add
mov
sti
and
cmp
pop
mov
pop
mov
out
pop
mov
mov
adc
vgatherdpd
or
pop
sub
push
cmp
sbb
stos
dec
inc
loop
movsb
sub
lods
jl
idivb
mov
xchg
lret
sbb
call
sub
inc
mov
push
mov
sub
push
sti
repz
cmpsb
test
jge
nop
movsb
lods
cwtl
xorl
notb
pop
xchg
rolb
lcall
shrb
ss
xchg
pop
arpl
mov
dec
jl
xchg
mov
mov
fs
enter
in
jnp
lock
icebp
or
sub
fsubr
and
push
xor
dec
lcall
int
movsl
pushf
xchg
adc
and
dec
mov
xor
add
add
hlt
test
cmp
cmpsl
push
jno
cmp
test
pavgw
fldl
ficompl
or
enter
sbb
jp
xchg
xchg
xchg
test
mov
push
mov
jle
and
cwtl
or
mov
adc
xor
sahf
lcall
jle
xchg
sbb
cltd
mul
inc
mov
repz
jb
imul
jl
add
sahf
loopne
add
push
and
cltd
or
lea
inc
es
push
ja
mov
lea
push
dec
imul
jp
pop
sbb
mov
cmp
sub
pop
lock
push
outsb
mov
or
and
out
jle
adc
mov
rcrl
lret
sahf
sbbb
ror
lock
popf
ds
repz
push
insb
xlat
mov
flds
sub
pop
adc
push
andb
or
sub
scas
mov
mov
sub
enter
cmp
push
out
gs
pop
jmp
stc
mov
mov
dec
inc
out
mov
int
loope
mov
push
and
mov
sbb
mov
stc
test
and
and
cmp
xor
nop
adc
mov
lods
movsb
jnp
into
mov
mov
cld
xchg
push
add
cld
pushf
adc
xchg
jne
in
fsubs
insb
mov
leave
fistl
ret
cmc
xor
pop
push
or
rorb
jmp
lcall
testl
push
cmpsb
loop
addr16
push
jmp
xor
jg
ret
push
and
test
ficompl
dec
xor
iret
mov
jecxz
adc
pushl
jg
addl
daa
push
in
jb
or
or
in
xor
outsb
xlat
pop
daa
aad
add
fistpl
ds
mov
stc
mov
sub
inc
push
into
add
pop
sub
nop
push
push
cmp
repnz
or
dec
jno
testl
mov
pop
push
add
js
es
fucomp
lods
cwtl
lret
push
sti
pop
jne
sub
sbb
fistl
lock
incl
gs
js
enter
pop
pop
mov
int3
adc
sbb
outsb
lock
mov
dec
and
sub
enter
fsubl
mov
cltd
filds
call
dec
mov
jl
loope
or
iret
inc
or
xor
mov
inc
push
imul
pop
hlt
add
into
inc
roll
inc
xor
daa
into
mov
mov
mov
fidivrs
loop
cmp
push
add
xor
inc
jecxz
outsb
xlat
pusha
lods
in
jmp
nop
lret
ficoms
nop
scas
add
aaa
js
jg
lock
inc
adc
xor
mov
xor
cmpsb
xchg
xchg
ljmp
cmpsb
pop
adc
adc
mov
jns
and
inc
cmpb
cmp
loop
ja
ficompl
or
call
ret
andl
add
adc
adc
jne
push
iret
rolb
jecxz
push
cmp
cmc
arpl
jl
pop
push
loop
sub
js
adc
mov
loop
mov
nop
adc
stos
aad
or
loope
dec
int
outsl
and
add
mov
call
dec
lea
jbe
sub
push
mov
adc
out
lret
xor
jae
sbb
adcb
rclb
mov
pop
sub
mov
add
pop
dec
inc
adc
in
insl
cmpsb
pop
inc
and
bnd
movsb
or
cs
out
and
ret
fdivrl
sub
and
cli
or
std
sub
stc
lds
sub
loop
push
or
xlat
push
dec
push
bound
inc
mov
in
in
jl
mov
movsl
pop
loopne
and
xor
add
xchg
in
mov
fs
and
xorl
fstpl
cmp
nop
aaa
xchg
mov
fs
inc
fadds
add
in
jb
pop
test
xchg
and
imul
fnstsw
js
or
jmp
mov
dec
ret
js
out
add
jmp
fildl
repnz
mov
fs
adcl
in
imul
xchg
cmpsb
lret
mov
cmp
daa
insb
mov
pop
icebp
loopne
sbb
mov
mov
dec
ret
xor
ds
inc
outsl
adc
call
sbb
sub
and
jecxz
int3
jne
jo
mov
xchg
adc
adcb
xor
xchg
call
lds
fdivs
mov
adc
jg
add
xor
cwtl
and
cmp
dec
inc
insb
mov
arpl
inc
addb
or
mov
xchg
jbe
xchg
fisubrl
xchg
push
inc
adc
xor
dec
dec
fs
fstl
mov
xor
jo
xchg
adc
pop
jbe
lret
popf
popf
out
aas
jl
lods
xchg
in
and
stos
cwtl
jb
int3
adc
xor
sqrtps
iret
xchg
orl
and
cmpsb
stos
xor
outsb
into
decb
push
xchg
jmp
pop
push
ja
jbe
lret
add
imul
xchg
rolb
lcall
decl
xchg
movsl
aas
mov
out
cli
xchg
or
popa
imul
mov
inc
mov
push
mov
and
pushf
mov
push
mov
out
mov
loop
push
cwtl
aaa
jb
sub
jnp
dec
mov
mov
mov
push
fs
pop
xor
mov
cmc
mov
lret
ss
add
inc
dec
je
insb
ss
mov
lock
test
ret
jmp
insl
push
icebp
cmpl
cmp
or
lcall
pop
sti
daa
push
xlat
mov
mov
iret
inc
in
test
mov
cmc
mov
clc
stos
mov
jge
inc
fcmovbe
adc
data16
mov
or
cmp
outsl
or
adc
jae
add
jae
ret
jae
mov
ljmp
or
adc
or
add
rorl
sbb
inc
fwait
jg
addr16
ja
sbb
les
mov
mov
pop
push
pop
and
jo
or
cmp
aas
and
add
loop
subb
mov
in
adc
or
xor
jnp
sub
jg
add
nop
xor
icebp
lods
clc
push
add
mov
mov
add
stos
add
adc
pop
and
push
fwait
inc
and
add
mulb
andl
daa
test
push
xchg
cmp
rclb
xorb
popf
aaa
xchg
sbb
push
jp
xor
adcb
mov
mov
outsb
xor
jne
pop
sub
add
cld
jl
nop
pop
leave
mov
arpl
cmp
js
mov
xchg
push
out
xchg
sbb
fcoms
inc
pop
aam
arpl
stos
mov
fbld
dec
sub
sbbb
enter
or
fisttpl
mov
dec
adc
jbe
mov
or
subb
mov
repnz
arpl
pop
cmpb
hlt
xlat
bound
shlb
jbe
clc
test
movsl
push
add
and
clc
sbb
cmp
stos
dec
xlat
adc
loopne
adc
and
pop
lea
loopne
subl
xchg
jecxz
jecxz
mov
sub
xchg
andb
ret
adc
jnp
lret
mov
mov
fcoms
sbb
lea
jne
aad
pop
xor
inc
loope
test
movsb
or
std
jo
gs
fdiv
push
bound
or
pop
sub
pop
pop
arpl
popa
adc
subb
movsl
stos
incl
sar
push
add
mov
outsb
sbb
jae
mov
movsb
lods
jne
ja
adc
dec
mov
scas
mov
lods
xor
dec
imul
cmp
in
fyl2x
icebp
or
cld
rolb
orl
in
jnp
nop
xchg
cmp
mov
pop
and
lods
pop
leave
ror
push
nop
dec
fstpl
inc
xchg
popa
hlt
pop
popf
cld
jmp
push
std
icebp
dec
mov
cwtl
add
xor
xchg
pop
icebp
lea
inc
xchg
xchg
xor
ja,pt
jge
xchg
lock
fsts
test
lea
push
xchg
push
imul
xchg
and
jno
push
out
adc
mov
add
fnsave
cmp
jge
xchg
in
lret
sub
into
je
mov
loope
and
call
sti
scas
pop
mov
clc
sub
dec
add
mov
int
shr
pop
outsb
and
outsb
push
addr16
sub
mov
cmc
lods
and
xlat
fbld
mov
stos
xchg
in
mov
sub
loope
loopne
fadd
jne
notl
xor
xor
rcr
rclb
mov
mov
imul
mov
mov
sarl
cmp
sub
fidivs
xorl
call
push
adc
fsubl
push
pop
and
ss
rcll
pop
int
cltd
in
stc
test
jmp
or
and
rcll
push
and
adc
imul
sub
icebp
int
dec
jne
test
test
pop
inc
xchg
cwtl
jno
xchg
inc
xchg
loopne
and
test
mov
incb
repnz
mov
js
push
ror
xadd
adc
out
ret
xlat
lods
leave
or
cld
lods
xchg
push
xlat
lcall
faddl
mov
mov
orl
cmpsl
and
xchg
lret
cmp
repnz
xor
pop
clc
push
out
jns
xchg
mov
xor
adc
std
pop
test
cmp
out
mov
inc
xor
or
test
push
gs
gs
fldt
push
sarb
mov
sub
imul
in
push
gs
jbe
mov
aam
mov
fisttpl
mov
dec
es
call
ret
iret
loope
addr16
push
mov
lods
int
rorl
jge
ds
ds
hlt
fcmovu
mov
jg
or
lret
insl
out
cld
shrb
sbb
or
loope
mov
xchg
mov
xor
push
out
mov
mov
dec
inc
push
bound
xchg
jo
mov
add
jle
mov
lahf
ja
lret
push
pop
in
add
xor
cmp
mov
ret
mov
sub
aas
dec
stos
jae
pop
cmp
dec
cld
mov
imul
int3
mov
dec
mov
int
enter
jne
andb
aaa
mov
or
fistpll
in
adc
mov
mov
into
cwtl
popa
sarl
cmpsb
cmc
mov
pusha
pop
sbb
cld
xor
popf
push
lds
cmpsb
bound
iret
jp
and
mov
and
daa
xchg
aas
mov
mov
das
ss
sahf
ss
ja
push
ficoml
sbbl
mov
push
stc
std
cmp
cltd
imul
sbb
xchg
movsl
dec
dec
data16
in
test
in
fildl
mov
inc
lahf
sbb
adc
mov
cmp
pop
fadd
sahf
push
cmp
inc
adc
mov
pop
aam
int
in
pusha
pop
fnsetpm(287
test
jmp
loope
arpl
pushf
jge
cmpb
into
mov
adc
xor
loop
in
xor
mov
cwtl
adc
icebp
out
fsubr
sbb
cmp
push
scas
lcall
push
dec
sub
dec
lahf
push
test
ja
adc
mov
sbb
mov
add
xchg
push
jp
sbb
aad
sub
addr16
stos
lret
rcrl
jbe
add
shrb
incl
sti
aad
stos
jmp
adc
mov
imul
xor
or
sub
dec
xchg
outsl
repnz
aam
mov
test
cld
or
mov
xchg
mov
fsubrs
mov
and
stc
fwait
add
pop
dec
cmp
inc
sbb
sub
cmp
or
or
rolb
sarb
ja
mov
jbe
or
rolb
adc
out
or
outsb
cmp
dec
mov
in
mov
mov
jnp
push
stos
sbb
and
je
pop
sub
add
push
test
ret
mov
scas
and
imul
loope
xchg
mov
adc
push
lret
pop
mov
dec
xchg
int3
popf
lahf
and
or
sti
je
xchg
push
sub
sub
addr16
jmp
add
loopne
shr
ret
lahf
sti
mov
push
data16
loope
push
cmp
pop
xchg
les
pop
fistpll
test
fsubrl
sbb
jle
sub
push
cmp
push
push
add
enter
mov
mov
adc
sub
test
sub
dec
pop
cmp
or
jnp
jmp
stos
daa
lods
pusha
mov
dec
push
add
movsl
inc
lods
or
dec
inc
sbb
pop
dec
je
jge
nop
test
pusha
pop
lods
xchg
jl
push
test
inc
scas
xlat
and
imul
imul
push
xor
and
in
sub
enter
cmp
jnp
xor
jne
test
cmp
xchg
sti
dec
cmpsl
insb
in
movsl
mov
nop
gs
in
icebp
mov
pop
insl
rcl
jge
cmpsl
and
js
das
test
std
xchg
ja
add
push
cwtl
test
jge
adc
mov
fbstp
xor
adc
or
fimuls
je
call
sub
aas
sbb
insb
out
inc
jbe
pop
into
xchg
sub
das
push
ret
outsl
lds
and
mov
repnz
bound
addr16
dec
testb
sub
inc
jb
rorb
lods
mov
xor
add
mov
inc
push
jle
adc
sahf
sti
std
lahf
cld
jnp
lcall
xchg
or
mov
out
mov
shll
movsb
jbe
and
dec
nop
orb
jp
inc
loop
inc
pusha
mov
imul
sub
mov
loop
lods
test
in
iret
cmpsb
inc
and
neg
pop
mov
out
and
mov
jge
outsb
xor
pop
or
dec
xchg
es
pop
lahf
aaa
lcall
cld
xchg
cmpb
add
icebp
lret
dec
popa
or
sub
push
jg
rol
rol
add
notb
jmp
je
in
adc
xchg
sub
ds
jp
stos
cld
pop
pop
push
mov
mov
push
fwait
pushw
aam
call
push
mov
inc
cmp
scas
popa
mov
fnstcw
dec
in
cmp
lahf
cmp
mov
roll
not
ficoms
cltd
mov
xlat
aas
mov
cmpsb
add
mov
test
cmp
jns
je
pop
pushf
lock
nop
paddd
fdivs
sub
lods
in
mov
adc
ds
outsl
aaa
sub
lcall
outsl
testb
repz
jnp
jmp
mov
rorb
in
test
mov
sbb
fiaddl
test
rolb
fwait
or
outsb
test
movsb
sbb
negl
or
xchg
and
outsb
add
movl
test
std
or
test
cmp
push
stc
push
fs
test
mov
push
sbb
xor
mov
xor
ss
sbb
cmp
cmc
leave
enter
cmp
and
clc
xor
sub
cmp
dec
add
es
out
push
pop
jecxz
cld
inc
neg
jle
and
insb
add
dec
orb
sahf
sub
loope
sub
insb
add
xchg
comiss
imul
movsb
shr
mov
not
sbb
call
xor
in
xlat
xlat
loopne
mov
mov
push
sub
sbb
mov
insl
jo
push
mov
mov
into
mov
jno
nop
cs
shll
inc
mov
sub
es
dec
mov
pop
sahf
adc
ficompl
pushf
and
popa
ja
loopne
out
loop
sarl
loopne
popa
ja
imul
daa
cmp
xchg
inc
xchg
cwtl
jp
mov
and
mov
aad
jae
inc
mov
in
stc
xchg
scas
xor
imul
loop
mov
ss
loope
xchg
sub
xchg
iret
fcmove
push
pop
ljmp
out
test
inc
rorb
or
xlat
xchg
loop
fbld
cmp
out
inc
dec
pop
popf
bound
push
arpl
fimull
es
dec
add
call
cmp
mov
jecxz
cmp
or
mov
xor
inc
inc
cmp
push
jmp
cld
lods
cmpsb
mov
clc
repnz
mov
xchg
and
int
leave
aaa
cmp
lds
fimull
pop
and
mov
icebp
ret
insl
mov
and
xchg
leave
into
add
dec
sub
cmpsl
je
lods
test
rcrb
repnz
mov
mov
popf
not
sahf
call
mov
test
insl
sub
push
cmp
jae
inc
xor
or
bound
xor
push
pop
cs
lcall
pushf
xchg
sbb
je
push
in
push
jp
xlat
cli
and
icebp
aaa
mov
lret
out
clc
lods
movsl
testl
add
shrl
out
nop
das
mov
cmp
cli
pop
jge
mov
jnp
mov
insl
jb
daa
adc
std
cmc
lret
ljmp
pop
test
jae
movd
sub
sub
sub
push
cmp
xlat
ds
or
bound
outsl
loopne
cld
adc
pop
adc
sub
cmp
out
push
lea
jo
ret
jb
adc
mov
adc
lods
pop
jle
loopne
pop
add
in
xchg
lcall
lods
mov
xor
icebp
cmp
div
lret
push
mov
and
adc
cmpsb
cmp
popf
rcrl
or
inc
push
or
cmp
aaa
sub
test
mov
test
add
mov
pop
lret
mov
cmpsl
sbb
std
dec
frstor
adc
xchg
data16
xor
push
pop
xor
scas
sub
sub
nop
js
addr16
rcrb
cmpsl
rcll
test
insl
jno
push
xor
out
cld
inc
gs
ja
add
adc
pusha
arpl
test
pusha
xchg
jmp
sbb
adc
nop
jae
movsb
push
cmp
out
dec
inc
lds
ffreep
int3
mov
xchg
in
push
sbb
xchg
xor
xchg
xorl
and
or
mulb
aaa
adc
or
popa
mov
xor
dec
mov
dec
test
sub
sbb
adc
sub
add
mov
jns
and
xor
xchg
jo
in
je
sarl
xchg
push
das
inc
mov
repnz
shl
sub
rclb
inc
sub
stos
std
cmpsl
aas
push
add
cmp
mov
adc
stos
lds
packuswb
pop
jno
in
jo
mov
mov
add
mov
xor
and
xor
js
and
xchg
jecxz
mov
and
cmp
sbb
xchg
pop
loop
dec
mov
in
out
cmp
xor
outsb
or
or
aad
ficoms
mov
into
insl
cmpb
aad
adc
call
xor
pop
dec
loopne
inc
dec
pop
rolb
testl
insb
jo
in
in
loopne
lahf
pushf
push
outsb
insl
fcmovnb
int3
pop
inc
cmp
pop
movsl
test
xchg
pop
stos
or
jbe
mov
add
xor
sbb
in
imulb
cmpsl
sub
push
and
stos
inc
push
pop
push
or
cld
push
dec
paddw
ljmp
adc
in
mov
loope
adc
fistpl
out
push
push
pop
cmc
pcmpgtb
jle
xor
jecxz
leave
loopne
lds
pusha
pop
jae
test
push
cli
jno
test
rorb
cld
test
adc
add
xchg
jl
sarl
mov
std
lcall
lret
in
add
dec
push
loop
mov
xlat
mov
popf
cmpl
subl
rorl
pop
mov
add
loope
or
lds
aad
mov
in
dec
cmp
decb
stos
daa
iret
mov
adc
sbb
sub
arpl
jo
push
sbb
js
scas
addr16
mov
insl
xchg
arpl
sub
addb
or
mov
cmp
inc
xlat
jae
out
pop
lds
out
out
repz
mov
push
push
movsl
in
jp
mov
cmpsb
lock
bound
push
mulb
hlt
fsubrl
jge
adc
jg
out
shll
imul
cmp
or
jmp
sbb
rclb
int
push
xlat
fwait
rorl
push
dec
push
popa
icebp
push
cltd
inc
stc
lods
jbe
jle
jg
push
jb
sub
cmp
sti
jmp
and
xchg
jbe
test
jl
xor
push
mov
lods
dec
mov
and
xchg
sbb
lret
inc
clc
inc
or
inc
push
stc
sub
rolb
sub
insb
insl
nop
dec
sub
mov
fadd
rclb
ljmp
dec
xor
ficoms
out
repz
xchg
out
pop
cli
pop
and
fwait
into
orb
push
sti
push
jmp
cmpsb
jmp
mov
jae
ja
add
shll
add
jl
jno
pop
sub
test
mov
push
cmp
add
push
sahf
loop
jns
sbb
sub
das
mov
inc
cmp
mov
iret
push
xor
mov
int
adc
les
and
push
test
sbb
insl
pop
mov
pop
inc
sub
fstps
inc
sbb
pushf
xor
loop
jns
loope
xchg
xchg
and
js
sti
add
push
pop
xor
fimull
jns
mov
mov
int3
jmp
jo
lods
xchg
adc
dec
lahf
xchg
aad
inc
push
jns
xchg
xor
add
xchg
push
inc
js
push
loop
aaa
repz
xchg
cmp
mov
add
cmc
aas
pop
and
movsb
mov
and
add
and
fnstsw
in
xchg
add
and
jge
mov
inc
in
cmp
int
push
cmp
out
xchg
jne
nop
cmc
xchg
test
shlb
dec
xor
out
ss
xor
lahf
mov
mov
xor
notl
jnp
mov
int
iret
push
xor
mov
fs
movsl
dec
inc
test
xorl
sbb
lods
cmpl
push
mov
in
clc
gs
scas
cmp
mov
lds
fs
fs
insl
dec
fwait
icebp
dec
int
push
hlt
pop
sti
les
je
pop
sbb
or
mov
add
jge
mov
xlat
mov
sbb
or
filds
adc
push
into
or
ja
addb
cmpsb
iret
or
push
sbb
xchg
cmpsl
dec
shr
dec
add
lret
mov
sbb
fcmovne
xchg
inc
and
das
adc
jo
test
popf
pop
push
lret
mov
nop
les
lcall
out
sahf
loopne
fcomi
insl
xor
lods
mov
mov
ret
aad
dec
outsb
cmp
add
loopne
std
jl
pop
xor
adc
dec
jge
fldenv
inc
pop
mov
adc
daa
push
idivl
sbb
icebp
mov
mov
lcall
pop
or
ficomps
and
cmp
lahf
daa
imul
push
lcall
popa
mov
fs
inc
mov
outsb
shl
cmc
adc
push
cmpsl
or
dec
mov
imul
fwait
or
sbb
into
inc
lahf
ret
cld
repz
shlb
loopne
das
out
popf
adc
repz
pop
fs
cmp
inc
fdiv
out
stos
jne
insl
inc
sahf
or
xor
cmc
pop
dec
pusha
es
sbb
pop
cmp
or
orb
mov
jno
mov
stos
jge
adc
aaa
mov
mov
rorb
or
dec
push
testl
es
aam
jb
aam
dec
xchg
add
loope
mov
jle
mov
pop
xor
pop
sbb
cmp
lods
imul
jne
dec
call
negl
jae
jb
lcall
mov
clc
mov
push
out
cmp
stc
push
sbb
mov
dec
fisubs
push
insl
leave
addr16
jns
xlat
jmp
mov
cs
fldcw
dec
pop
xchg
repz
lret
sbb
test
in
mov
mov
cmp
mov
or
neg
scas
ret
xor
rcr
sub
iret
dec
mov
mov
stos
sbb
mov
inc
enter
push
cmpsl
mov
addr16
out
sahf
movsl
aas
sbb
in
adc
mov
add
add
lcall
icebp
bound
jecxz
push
ret
incl
or
pop
inc
xor
and
xor
jns
loope
enter
mov
jmp
fbstp
idiv
nop
inc
mov
and
std
dec
xchg
xchg
loop
pop
cmp
add
dec
testl
mov
dec
bound
pushf
leave
or
adc
xchg
scas
sti
lods
and
pop
jae
adc
jb
popl
loopne
xlat
test
daa
lods
xchg
adc
hlt
jecxz
or
add
mov
stos
les
or
into
mov
fwait
in
mov
mov
sbb
inc
xlat
jae
fdivrs
xor
stos
sbb
inc
add
pop
aas
jp
xor
xchg
sbb
pop
cld
mov
inc
push
sbb
mov
push
std
add
xchg
adc
sub
sbb
iret
test
jne
push
inc
mov
test
xor
push
xchg
cltd
push
mov
movsl
pop
xlat
jge
mov
push
divl
clc
sbb
add
jg
mov
jg
or
cmp
movsl
je
xchg
loop
ss
mov
shrb
and
in
dec
or
mov
or
icebp
imul
icebp
std
ret
rcll
repnz
jmp
cli
jae
push
mov
leave
xor
inc
xor
dec
mov
shr
mov
sub
adc
jmp
ljmp
jno
sbb
lcall
rclb
into
jl
int
xchg
add
out
sbb
fidivs
jbe
pop
fcmovne
out
xchg
cmp
int
adc
lret
pop
shl
imul
or
orl
xor
xchg
dec
in
adc
loope
test
es
pop
xchg
fwait
lods
test
lods
push
push
jbe
jne
mov
out
jno
orb
jb
or
and
push
movsb
dec
shlb
mov
jecxz
cmpsb
std
push
in
test
test
cmpsl
push
movsb
dec
out
test
push
stos
xor
ret
push
lods
in
mov
arpl
and
inc
test
cmp
in
push
jle
enter
lods
pop
pop
xor
fnstenv
rcrb
mull
sub
dec
jno
ds
fwait
cmp
xor
sbb
pushf
lahf
and
inc
lods
or
popa
xor
push
sub
sub
and
inc
inc
js
pop
sbb
in
and
adc
pop
pop
aam
rorl
xchg
stc
movsb
xor
adc
ljmp
fcmovb
in
xor
mov
out
dec
sub
or
aaa
insl
lods
jne
adc
outsb
jmp
dec
mov
dec
lds
adc
popa
stc
push
sub
out
bound
ficoml
test
fimull
or
loope
fldenv
fsubs
jae
sub
add
lods
std
push
push
fnsave
and
sahf
lds
popf
enter
cld
mov
pop
inc
lods
push
imul
cmp
in
pop
shl
xor
test
inc
ret
cmpsl
add
and
push
loop
cmpl
adc
clc
mov
pop
adc
shrl
out
cmp
aam
out
sbb
fdivp
mov
outsb
or
sbb
inc
mov
add
push
jmp
jl
mov
add
or
xchg
cmp
sub
cmp
rorl
in
pop
jne
mov
in
lret
dec
hlt
add
mov
out
jne
xchg
popf
aad
pop
out
inc
mov
dec
or
cld
dec
jmp
stc
sti
fisubrs
std
shrb
xor
popa
jmp
sti
adc
mov
xorb
jg
cmp
mov
xor
pop
insb
std
ljmp
sti
in
lahf
cmp
jg
inc
int3
fcmovnu
nop
or
aas
mov
lret
jnp
popa
cmp
imul
fcomps
mull
enter
mov
cmp
mov
das
rclb
imul
loopne
push
lcall
xchg
loopne
fnsave
pop
pop
pop
sbb
xor
out
dec
sbb
sbb
arpl
roll
dec
or
push
xchg
je
sbb
sahf
lods
loop
cmp
dec
test
jecxz
adc
add
sub
jecxz
xchg
int
mov
push
push
lods
jb
jp
je
sbb
js
jb
lock
jo
loop
mov
aam
lea
ss
jge
and
or
fwait
jp
add
and
add
orb
cwtl
cmp
loope
outsl
mov
mov
aas
sahf
adc
subl
repnz
xchg
test
cmpw
push
jae
test
xchg
bound
and
imul
mov
and
pop
lahf
out
lea
mov
leave
out
inc
ds
cmpsl
jnp
adc
loop
pusha
lods
mull
dec
enter
jnp
and
fwait
scas
pushl
add
inc
mov
mov
insb
push
out
pop
cmpsb
add
lds
call
jmp
xchg
mov
cwtl
add
test
aam
js
test
cld
ja
test
mov
cli
insl
es
outsl
inc
xchg
add
dec
loopne
jb
push
jns
push
inc
pushf
aas
bound
ror
std
adcl
jne
jecxz
mov
cmpsb
cmp
in
and
test
out
xor
xchg
imul
mov
xor
out
dec
pop
add
sahf
jno
scas
add
adc
sarb
and
pop
pop
in
push
loope
cmp
into
ret
cs
sbb
jg
xor
pop
inc
mov
jno
addl
shrl
dec
jmp
ret
push
mov
and
hlt
movsl
dec
hlt
jg
loop
stos
mov
ss
dec
popa
mov
ret
pusha
jo
jge
enter
or
pop
inc
frstor
lods
insl
add
orb
and
sub
mov
mov
imul
arpl
andb
push
aaa
aas
or
jno
sti
jp
pop
lea
mov
sti
scas
jno
int3
mov
push
test
and
fimull
cmpsl
das
jmp
jae
js
divb
sub
icebp
and
and
mov
and
add
dec
adc
out
mov
xchg
mov
sub
mov
andl
in
sub
jecxz
stos
dec
subl
sub
cmc
shll
ss
cmp
ret
cmp
imul
stc
add
push
lahf
dec
orb
mov
and
mov
inc
add
cwtl
xchg
xor
fildl
mov
mov
ljmp
shr
jne
mov
cmp
mov
ljmp
testl
jo
mov
add
push
pusha
std
mov
aaa
sub
sub
add
dec
pop
mov
dec
hlt
mov
inc
push
mov
sub
xchg
call
pop
rcrb
rcll
cmp
add
sub
push
addl
vaddpd
into
push
ret
jmp
mov
les
out
ret
pop
pop
inc
inc
movsb
xorl
cmpsb
add
lods
jmp
mov
dec
pop
gs
ret
in
pop
pop
shl
adc
jp
or
insb
mov
jae
xor
cli
mov
or
or
lods
cmp
mov
jb
mov
shrb
cmpsl
inc
add
pop
out
mov
leave
xchg
scas
mov
fadds
leave
add
dec
sbb
nop
xchg
fldenv
inc
scas
jae
mov
mov
cmp
rcll
fsubrs
pop
rol
bound
mov
mov
lcall
mov
add
mov
push
fstpl
push
icebp
pusha
pop
lds
call
sbb
mov
cltd
jae
pop
fists
pop
jge
mov
or
insb
pushf
cltd
outsb
sbb
fwait
movsb
jle
int
pusha
mov
insb
iret
lahf
pop
pushf
sub
inc
mov
jo
cmp
or
popa
or
enter
ljmp
mov
and
inc
add
xchg
fdivs
push
pop
push
push
mov
jecxz
inc
pop
shrl
pop
clc
cli
mov
les
add
mov
movsb
or
xor
pusha
fidivrs
pusha
aas
arpl
mov
pop
mov
outsl
mov
push
enter
in
push
pushl
cli
out
xchg
cmpsl
jbe
dec
decl
dec
cmp
cmc
pop
cmp
cltd
out
mov
add
jns
push
xor
loope
insb
cmc
lcall
cli
fistpl
dec
adc
or
sar
aas
adc
jmp
cld
ret
mov
arpl
cmp
xchg
push
ret
lcall
sub
adc
in
fistps
and
loope
andb
int3
loop
sahf
mov
pop
in
push
stos
inc
mov
fstl
sbbb
jl
lret
and
jl
movsl
xchg
pop
sbb
jno
push
dec
repnz
out
in
movsl
imul
insb
mov
shll
push
insl
xor
and
xchg
push
xchg
divb
mov
out
inc
mov
or
mov
aad
xchg
xchg
adc
mov
dec
mov
fs
dec
rcl
mov
iret
adc
dec
scas
test
and
out
push
add
fidivs
cwtl
sarl
test
xor
stos
mov
mov
sub
loop
stos
loope
or
repz
shl
cmp
rorb
jne
inc
ss
sbb
inc
pop
data16
lret
lret
cmc
inc
sub
gs
mov
sub
fwait
dec
mov
aam
push
pusha
xchg
xor
dec
shlb
les
add
das
add
sbb
lea
add
mov
fistl
sub
xor
jb
mov
jne
jg
and
inc
pop
lret
or
out
sahf
in
push
sarb
gs
or
lock
aam
test
fstpt
movsb
fidivs
pop
cli
jecxz
dec
mov
out
pop
mov
push
jne
ja
xchg
scas
lea
lods
mov
rcrb
xor
lcall
cs
push
cmp
xor
lock
sbb
pop
cmp
out
pop
mov
jge
test
outsl
jnp
push
pusha
push
xor
jl
data16
push
mov
sub
lods
ficomps
inc
fnsave
into
jge
jno
ljmp
xor
xchg
xchg
movsl
ss
int3
push
stc
or
jmp
out
jno
sbb
jae
pusha
mov
loope
iret
add
shll
cwtl
in
shll
inc
int
sti
mov
loope
hlt
loopne
roll
repnz
inc
mov
mov
push
shll
repz
mov
push
cwtl
das
adc
push
lock
pop
add
lcall
cmp
xor
xchg
xchg
sarl
ja
hlt
scas
mov
adc
shlb
dec
mov
mov
jle
int3
pop
cmpsl
inc
scas
iret
out
js
jmp
imul
sbb
lea
shrb
xchg
mov
cmc
xchg
mov
pop
fsubrl
aaa
test
mov
lahf
test
xor
xor
es
js
mov
lock
cmpb
sbb
inc
insb
xchg
adc
test
fwait
hlt
dec
pop
ss
cltd
rcr
fstpl
nop
sub
adc
jo
shll
mov
cmova
imul
addr16
pop
jbe
call
negl
mov
xchg
ret
divl
repnz
xor
repz
jb
mov
push
sub
pop
push
hlt
hlt
lcall
xchg
cmc
cmp
mov
lods
add
roll
lret
andb
mov
enter
xchg
cli
add
sub
scas
popf
test
ja
enter
sahf
stos
xchg
popa
ss
or
xor
cmp
pop
or
add
xor
outsb
les
sahf
inc
jmp
jge
push
push
sahf
push
or
inc
leave
and
daa
mov
and
pop
lock
dec
rcl
add
arpl
sahf
inc
stos
aad
sbb
mov
xor
jle
mov
xor
cmp
mov
adc
xor
data16
mov
out
sahf
add
dec
xchg
dec
push
aam
push
xchg
or
lock
test
pushf
sub
icebp
pop
xor
sub
xchg
into
test
stos
je
repz
add
aam
inc
jae
dec
mov
fmuls
fwait
sbb
mov
daa
cmovg
fs
mov
lahf
scas
sbb
iret
push
out
bound
js
mov
or
lods
fmuls
mov
dec
adcb
lcall
xor
or
cmp
cli
push
int
in
out
mov
jp
mov
pop
data16
jbe
jo
jnp
and
push
mov
dec
push
mov
out
inc
scas
insl
test
mov
setnp
and
sub
cld
mov
push
je
inc
mov
mov
aad
push
xor
in
into
outsl
and
mov
mov
add
cltd
jno
loopne
adc
ljmp
push
cmc
hlt
pusha
pop
lret
jmp
roll
cmpsl
gs
lods
mov
and
mov
dec
inc
loop
push
mov
push
pop
pop
out
jae
pop
jne
leave
cli
dec
mov
cmpsb
leave
inc
push
cmp
lret
insb
xchg
les
fidivs
inc
mov
loopne
adc
hlt
lods
aaa
mov
addl
jmp
pop
aas
push
rclb
loopne
mov
adc
adc
stos
and
mov
mov
sbb
aas
inc
loopne
bound
jne
call
mov
cmp
lods
add
sahf
adc
mov
in
lods
popf
mov
add
jmp
inc
rorl
addb
mov
loopne
jecxz
fdivl
push
xor
dec
and
fidivrl
sbb
push
pop
adc
mov
adc
addr16
jbe
iret
mov
mov
xor
mov
pop
pop
xor
cld
fmuls
adc
popl
jecxz
adc
jo
ja
xlat
sub
sub
fs
jg
sub
es
adc
xlat
mov
cmc
inc
imul
ss
pusha
sub
jae
jge
rorb
jecxz
mov
inc
dec
pop
sbb
xor
not
jb
push
stos
divl
js
outsb
mov
out
fs
lea
aaa
fs
push
lcall
les
adc
pop
out
outsl
jno
mov
int
cmp
fwait
and
mov
push
xorl
les
cmp
ljmp
bound
andl
andb
in
xor
sbb
push
jg
xchg
cmp
sti
push
add
rcrl
mov
sub
push
loopne
scas
mov
imul
lret
inc
shll
stc
push
mov
mov
pop
jbe
nop
lret
fisubs
sub
adc
lret
mov
and
fidivrs
jge
fsubrs
mov
js
cmp
or
xchg
adc
addr16
cmp
mov
dec
aam
cli
icebp
daa
or
and
pushf
aad
xchg
jae
out
ret
popa
mov
test
ds
jb
incb
mov
xor
cmpsb
jmp
xchg
push
loopne
stos
lcall
cmp
jne
aaa
out
rcrb
rorb
cmp
std
sti
mov
mov
stos
out
inc
ret
stc
jae
test
jbe
cmp
dec
icebp
call
outsb
pop
pop
les
push
sub
pusha
sub
or
testb
cmp
dec
push
mov
jbe
mov
jns
das
sub
pop
pop
stos
test
mov
outsl
je
mov
push
mov
shlb
mov
movsl
rcl
mov
sub
scas
push
mov
cmp
and
mov
jb
add
imul
or
pop
mov
jp
daa
shl
dec
inc
and
xchg
mov
call
daa
out
inc
in
ret
outsb
push
arpl
addb
xlat
lret
inc
icebp
out
cli
jnp
push
outsb
mov
jp
repnz
cmp
jle
sub
pop
sub
pushf
and
fmull
pop
mov
push
cmpsl
mov
stos
fidivrl
jl
sub
bound
popf
lock
out
push
fstpt
shlb
and
push
push
pushl
jecxz
fsts
cmp
cmpsl
adc
lods
std
jp
pop
nop
dec
push
test
mov
movsb
dec
pop
insb
lods
je
xchg
push
xchg
cwtl
sbb
dec
and
pop
scas
pop
cmp
add
dec
lods
sub
or
xchg
popa
mov
bound
hlt
mov
jle
jecxz
test
fldcw
int3
repz
and
push
or
cmp
sub
jle
fdivs
clc
fwait
sub
push
scas
dec
lcall
cmp
in
push
lds
mov
dec
cmp
test
leave
jne
fmuls
mov
or
sbb
lahf
hlt
mov
mov
push
mov
mov
adc
in
imul
mov
fstpl
dec
test
mov
dec
jb
cmp
cld
enter
pop
lock
xchg
add
enter
mov
jmp
lods
jne
jecxz
xchg
outsb
stc
ret
push
outsb
mov
mov
out
jmp
lods
sub
add
lock
push
mov
cmp
add
mulb
mov
lods
mov
dec
mov
out
decb
and
push
pop
rorl
hlt
in
mov
sbb
cmp
test
addb
mov
xor
jle
fcomi
sbb
xor
nop
dec
fildl
pop
push
cmp
mov
xchg
test
mov
push
adc
ret
mov
mov
xchg
scas
push
in
mov
inc
dec
pop
loopne
and
sbb
call
jne
outsb
push
adc
pop
mov
icebp
lcall
icebp
jno
sti
pop
movsl
push
xor
iret
mov
mov
int
fistps
pop
fmull
jne
sub
daa
mov
inc
xor
sub
pop
push
jle
jne
test
mov
and
addr16
jl
sbb
cmpb
xchg
bound
or
mov
arpl
ss
push
leave
sbb
adc
call
icebp
test
pop
xchg
leave
iret
or
jb
nop
mov
dec
xchg
jg
pushf
idivl
por
sub
loop
xchg
mov
js
insl
clc
fidivrl
loope
cmp
pop
mov
pop
insl
sub
std
sub
mov
push
mov
xchg
pop
aaa
xor
lret
mov
and
jecxz
or
mov
andb
or
jmp
pusha
call
shll
lods
cmpb
jge
cmp
mov
mov
data16
jecxz
inc
ds
loopne
dec
mov
inc
push
fldln2
sub
pop
mov
outsl
ret
movsl
popf
inc
mov
std
in
ss
lahf
mov
rolb
sub
push
aam
xchg
test
fmuls
popf
adc
lret
adc
xlat
dec
and
arpl
test
stc
nop
shll
cmp
bound
jmp
xchg
stos
testl
add
cld
lcall
mov
inc
push
rorb
jle
inc
inc
rclb
fstl
mov
push
into
xor
mov
mov
dec
adc
les
jge
aaa
jno
mov
adc
xor
mov
inc
jno
in
dec
cmpsl
xchg
xchg
add
mov
sub
sar
pop
repnz
mov
mov
jecxz
int
xlat
inc
rolb
fldcw
and
mov
ja
pop
mov
xchg
btr
shrl
adc
ss
shll
in
mov
jge
testb
xchg
mov
idivb
push
lds
sub
push
insl
lgdtl
mov
add
int3
sbb
ja
shlb
hlt
jo
inc
lock
dec
push
push
repz
mov
dec
pop
jmp
pop
mov
push
jnp
pushf
lea
jae
loop
sub
test
mov
mov
je
sub
popl
ss
flds
or
mov
sbb
movsb
adc
cmp
xor
pop
sub
mov
pushf
incl
int3
inc
insl
adcb
lea
inc
stos
jecxz
arpl
scas
and
ds
mov
outsb
je
sbb
dec
push
mov
pop
adc
daa
mov
imul
mull
sub
test
or
xchg
aad
inc
out
mov
xchg
std
mov
adc
dec
jle
add
sbbb
dec
dec
rolb
xchg
iret
loopne
cmp
xor
xor
or
stc
pop
call
add
out
mov
das
or
cmp
and
dec
adc
cs
adc
repnz
adc
ds
push
int
das
xor
bound
addb
cmp
cmpsl
pop
es
lea
mov
bound
aas
jae
push
cmc
mov
pop
les
loop
in
lds
mov
daa
adc
imul
testl
adc
lret
ljmp
mov
push
fldl
cltd
rorb
rclb
xchg
pop
lods
cwtl
add
push
rcll
lods
loope
loope
mov
cltd
call
inc
inc
jg
repnz
mov
in
fs
gs
jge
jno
stc
movsb
dec
jecxz
add
repnz
ss
rclb
mov
pop
push
mov
jmp
sti
movhps
stc
pop
clc
stc
pop
push
aas
clc
jnp
mov
jmp
stos
mov
outsb
sub
scas
pop
add
dec
push
mov
xchg
mov
notl
jl
pop
xchg
add
repz
lods
lods
mov
into
push
cmp
movsb
pop
int
sbb
testl
dec
xor
ljmp
cmp
mov
repz
and
loope
dec
mov
push
inc
stmxcsr
push
and
stc
sbb
xor
pop
push
inc
cmpsl
outsl
sbb
xchg
repnz
or
in
ss
lea
xchg
mov
test
in
test
mov
inc
insb
addb
cmpl
daa
jmp
and
inc
mov
imul
imul
bnd
in
push
inc
lods
iret
bsr
dec
movsl
lds
cmp
out
loop
jecxz
xchg
fdivl
rorb
ret
dec
jge
sub
sahf
addr16
jge
inc
mov
iret
stos
scas
scas
push
jecxz
inc
cli
fisttpl
fisubs
arpl
jns
adc
jmp
jno
je
push
imul
adc
jo
or
test
jae
add
mov
in
pop
daa
add
dec
imul
out
aad
xchg
jl
adc
int3
push
mov
jnp
adc
xchg
das
fwait
aam
pop
out
adc
cmp
aas
cmp
cmp
jne
cmp
add
push
loop
lcall
lret
xchg
jo
push
int
adc
out
je
xchg
jmp
cmpsl
inc
adc
arpl
lret
adc
sti
mov
leave
lock
in
xor
cmp
push
in
jne
fsubrl
stc
ss
pushf
mov
movsb
cmp
pop
jmp
js
jne
imul
cmp
fnstcw
xor
sbbl
aam
repz
push
outsl
aad
dec
mov
stos
or
cld
xor
mov
sbb
sbb
push
jl
les
fdivl
xchg
out
push
xchg
push
inc
mov
xchg
insl
adc
out
cs
stc
cli
xchg
dec
adc
movlps
inc
out
jbe
hlt
xorb
cmp
dec
pop
xchg
test
das
xchg
rcrl
sbb
cmpsb
mov
jbe
inc
cmp
push
mov
imull
mov
mov
je
out
addr16
fs
adc
call
add
sahf
sti
push
adc
cmpsl
daa
pop
mov
imul
jle
mov
jmp
and
scas
sbb
pop
add
or
clc
outsb
repnz
mov
bswap
push
popl
push
rcl
dec
cmpsb
add
loop
mov
xor
imull
outsb
jb
mul
bound
nop
scas
cmpsl
jno
jo
xor
dec
in
add
aam
pop
in
or
in
aad
mov
out
sbb
dec
add
into
rcrb
flds
ror
mov
cmpsl
outsl
jns
inc
fnstcw
or
test
notl
lds
loopne,pn
xor
sahf
out
sub
jp
frstor
in
daa
movsb
jg
loopne
fsubrs
xor
push
popa
mov
test
push
in
xchg
scas
cmp
mov
repz
sbb
sbb
add
sbb
jns
ficoms
push
into
sub
or
add
sub
sub
lahf
test
sub
and
mov
out
lds
rep
dec
ja
gs
xchg
mov
outsb
jmp
clc
jno
xchg
sbb
stc
jns
xchg
mov
nop
cmp
pop
insb
lods
jl
loope
scas
mov
sbb
pushl
in
add
call
ret
pop
mov
mov
pop
push
int
data16
push
mov
icebp
xchg
xchg
mov
add
jo
les
or
push
xchg
pop
pop
mov
cmp
sbb
dec
imul
paddusb
jge
xchg
mov
mov
mov
inc
xor
mov
stos
push
repnz
stc
dec
call
mov
je
sub
push
sahf
adc
mov
in
das
leave
lahf
sub
cld
out
pop
aaa
or
mov
mov
push
incb
jnp
push
stos
int
loop
in
pusha
mov
and
insb
sub
push
cmpsb
sbb
leave
sub
in
pop
jns
cmp
pop
xor
enter
pop
ja
mov
mov
daa
jae
push
dec
inc
pushw
add
scas
xor
loop
xor
test
xor
xor
out
sub
je
dec
jne
add
lock
mov
rclb
or
jne
testb
pop
lods
cmp
in
test
mov
mov
shl
sub
mov
push
jnp
xor
mov
in
push
lcall
ja
cmp
mov
add
mov
fimuls
mov
dec
jge
outsb
into
cli
cli
cmp
cmovle
sbb
es
fstp
je
cmp
std
cmpsb
lret
xchg
push
mov
das
bound
cmpsl
dec
cmp
notb
adc
mov
and
jge
aaa
jne
stos
add
je
ret
rcr
lcall
fists
aas
inc
add
shll
adc
xchg
movsb
lds
pop
jp
add
cmp
addr16
pop
xor
shlb
cltd
lods
inc
and
push
adc
push
mov
les
cmpsb
cmp
and
sub
xchg
mov
add
insb
pusha
ja
cmpl
dec
loop
ljmp
cwtl
idivl
shlb
xor
or
jle
push
push
xor
push
jp
jge
cltd
sti
mov
enter
cmp
pop
lcall
repz
and
fs
outsl
push
pop
test
sahf
inc
ja
and
push
lret
jge
and
jno
push
pop
mov
popf
mov
add
and
dec
ret
pop
out
dec
les
hlt
add
arpl
popf
ret
and
outsl
jbe
cltd
in
adc
lret
in
out
shll
sub
addr16
or
and
popa
das
lods
adc
push
pop
imul
add
iret
push
out
inc
mov
jge
loope
add
xchg
or
push
inc
aad
sbb
das
ja
xchg
xor
cmp
js
dec
fwait
sbb
and
shl
jbe
out
mov
fstpt
std
rol
cmp
out
xor
pushf
fbld
addb
jp
xor
stc
mov
es
fiaddl
sub
xlat
cld
mov
lcall
add
adc
pop
aam
inc
fldl
and
dec
dec
sbb
cli
sub
sbb
or
jg
loopne
popf
int3
orb
mov
pop
and
jb
mov
inc
xchg
pop
into
shr
jbe
rolb
jno
scas
xorl
nop
jge
dec
mov
and
das
mov
fwait
je
mov
mov
arpl
lock
rorl
stc
mov
hlt
push
push
leave
push
faddl
mov
adc
dec
int
cmp
and
mov
jne
or
dec
fistpll
or
jnp
movsl
cmp
mov
imul
pop
das
clc
jl
push
mov
pusha
clc
pop
and
or
cwtl
push
icebp
xchg
shl
xor
into
es
insl
insl
js
fstpl
adcb
mov
popf
hlt
into
in
add
stc
fmull
jge
push
lcall
or
hlt
gs
pop
and
repnz
inc
or
fmuls
dec
das
in
or
inc
or
inc
and
mov
xchg
loop
jge
std
push
subb
inc
mov
mov
mov
out
cs
mov
leave
jae
xor
call
mov
testl
lcall
sbb
test
xor
inc
sub
daa
dec
push
lea
jmp
call
pop
int
mov
and
mov
sbb
shrl
xlat
pop
fidivrs
pop
clc
movsl
jne
push
pop
mov
outsl
jmp
push
push
sbb
and
mov
inc
fdivl
es
inc
inc
dec
aam
or
popa
dec
or
fwait
je
rolb
gs
in
mov
sub
testb
cli
into
xchg
sbb
outsl
pop
lods
jecxz
es
ret
mov
cmp
xchg
jecxz
out
loope
loopne
idivb
loope
adc
add
mov
hlt
sub
jo
xchg
test
fldenv
and
and
add
es
xor
cmp
jne
out
or
lods
mov
inc
mov
mov
bound
ror
add
test
push
popf
lret
push
shr
outsb
add
mov
std
andl
xchg
inc
test
mov
neg
and
out
and
cmp
mov
insb
aaa
pop
call
out
popa
pusha
adc
shr
pop
test
push
cmp
push
pop
test
mov
mov
add
mov
and
cs
imul
inc
enter
repz
jmp
dec
out
fstpt
sbb
pop
push
xchg
xlat
out
mov
xor
lcall
adc
ds
lea
sub
inc
jne
int3
scas
in
jns
imul
bound
loop
mov
lods
in
xbegin
enter
jmp
ret
mov
sahf
lcall
mov
pop
dec
cmp
or
mov
adc
int3
loope
jbe
mov
xor
popf
aad
popa
cld
xchg
push
pop
xor
sbb
pop
out
out
or
data16
inc
and
adc
sub
mov
mov
add
sbb
sahf
dec
add
cld
push
dec
sub
loopne
fisttpl
sbb
int
push
and
cli
add
add
mov
or
int3
push
icebp
fucomip
or
cmp
jl
daa
or
push
dec
adc
mov
jge
jns
inc
lods
lahf
insb
dec
into
in
cld
mov
sbb
and
cmc
mov
aam
inc
filds
in
mov
pushf
sbb
outsl
lods
mov
and
fisttpll
inc
mov
loopne
and
movb
fdivrs
rorb
sti
fildl
inc
push
mov
mov
insb
push
insl
int3
enter
fstpl
mov
pop
sbb
aaa
pop
or
jb
stos
mov
dec
ret
sbb
dec
and
je
and
jb
sbb
pop
sub
fscale
and
jae
mov
in
xchg
in
xchg
hlt
dec
int
ud1
das
fisttpl
sbb
stos
out
pusha
outsb
lods
mov
or
sahf
stos
sbb
sbb
xor
or
xor
addr16
test
clc
push
out
leave
dec
std
sbb
pop
sarl
mov
push
xor
imull
lea
jge
hlt
jge
lock
jbe
sub
xchg
lock
test
sub
ja
ret
xor
adc
jl
dec
add
jno
push
pop
in
jg
cltd
movsb
aad
ja
add
push
std
js
cmp
push
sbb
js
fmull
loopne
pop
push
jl
pop
mov
cmp
xchg
mov
cmpsb
xchg
inc
cltd
xor
in
pop
int
pop
jle
mov
jmp
inc
adc
lds
stc
mov
nop
mov
inc
imul
pop
rolb
icebp
jge
scas
sbb
fwait
jg
cs
xchg
cmc
xor
pop
imul
xchg
pop
mov
xor
cmp
jno
jmp
sbb
and
aam
insl
int3
cmpsl
dec
pop
mov
xchg
sbb
cs
push
test
push
and
adcb
in
popa
in
inc
mov
pushf
add
xor
gs
cmp
inc
arpl
cwtl
lcall
repnz
lret
lock
out
out
inc
loop
xlat
lods
mov
inc
mov
inc
mov
push
mov
cmp
test
xchg
pop
mov
enter
shll
les
jg
pusha
inc
jnp
and
mov
sarb
xchg
dec
popa
xor
in
scas
idiv
stc
scas
xor
sti
sbb
adc
cld
lds
out
lea
inc
test
data16
jecxz
icebp
dec
or
daa
aaa
jp
mov
jno
iret
dec
shrl
out
dec
fwait
push
adcb
nop
inc
out
push
sub
lds
or
in
lea
cwtl
mov
xchg
fwait
imul
add
or
add
dec
add
sbb
enter
mov
cltd
xchg
xchg
adc
int3
cmp
jo
xchg
pop
lock
cmc
cmp
inc
jl
mov
dec
push
cmp
inc
in
pop
pop
je
mov
or
xor
rclb
aad
pop
repz
pushf
leave
xor
pop
cmpsl
add
mov
cmpl
sbb
xchg
xchg
and
push
in
nop
out
pop
test
imull
or
loop
pop
add
iret
jp
ljmp
dec
xchg
fcompl
push
scas
shll
das
jge
sbb
cmpsb
jmp
paddd
jbe
inc
adc
das
cltd
roll
inc
and
mov
adcb
dec
adcl
jg
xlat
add
pop
mov
negb
jecxz
cmp
push
mov
jge
lds
mov
insb
jno
pop
cmp
test
lret
aad
pusha
lcall
lea
lods
notl
inc
cmp
popa
int
fdivrl
sar
call
arpl
inc
and
jmp
mov
add
nop
xchg
mov
push
in
add
sti
adcl
call
out
movb
mov
sbb
add
inc
shlb
pop
popa
pop
int
cmc
sar
sbb
jb
std
loop
sti
xchg
push
fnstenv
arpl
mov
mov
cmpsb
hlt
je
jecxz
leave
cltd
inc
adc
aas
lods
aaa
xor
jbe
or
and
les
subb
cli
inc
or
pushf
push
sub
cltd
int3
popa
adc
pusha
dec
lret
test
add
jle
clc
in
imul
xor
xor
shlb
out
loopne
push
clc
pop
mov
adc
mov
imul
int3
aas
sub
sub
sub
pusha
xorl
dec
xchg
rol
jae
aad
test
pop
cld
pop
iret
and
data16
xor
shrl
lret
cmpsb
aam
popf
mov
adc
inc
cmovbe
testl
cmp
int3
lea
imul
adc
loop
sti
test
enter
mov
cmpsb
push
lea
lods
das
adc
popl
cltd
adc
scas
dec
icebp
xchg
aaa
in
and
out
aas
xor
loop
xor
ljmp
xchg
mov
sbb
gs
cmpsl
xor
inc
enter
and
adc
out
faddl
mov
push
pop
addr16
inc
or
stos
stc
push
rclb
loopne
insl
pop
arpl
je
scas
pop
iret
icebp
fistpll
jne
cmpsl
cmp
jg
mov
test
bound
test
mov
dec
jno
lods
push
mov
out
in
jne
add
call
fdivl
insb
sub
outsb
femms
or
xchg
sbb
inc
adc
scas
js
mov
or
test
sbb
sahf
shr
into
repz
sub
adc
lock
xor
fld
mov
mov
icebp
scas
movsb
lock
jne
cmp
cmp
adc
mov
lods
pusha
sti
fcmove
bound
sbb
fildll
mov
push
add
xchg
pop
notl
int3
cmp
icebp
nop
dec
or
xchg
pop
dec
sub
jno
decb
dec
xchg
mov
inc
cmpsb
xchg
sbb
push
cwtl
mov
pop
gs
stc
or
pop
insl
dec
push
pop
shr
mov
xlat
das
xor
add
inc
cmp
aam
divb
loop
add
int
or
xlat
rcrl
mov
stos
hlt
imul
call
xor
inc
and
dec
adc
adc
popa
arpl
into
jg
sbb
call
push
pop
inc
jge
mov
imul
inc
xor
sub
rcll
sbb
nop
add
dec
bnd
jae
pop
stc
xchg
es
enter
dec
push
dec
mov
push
jno
lea
add
jne
mov
add
loopne
ljmp
ret
add
mov
addr16
push
cs
jbe
cli
add
jb
xchg
xchg
in
push
add
rcr
sub
cmp
dec
gs
mov
movsl
lds
jp
mov
inc
pop
clc
push
mov
jge
mov
shl
and
imulb
dec
mov
xchg
sbb
inc
sbb
loop
scas
adc
and
ret
jo
lods
mov
push
xchg
xchg
mov
dec
xor
xor
fs
bound
add
mov
fidivrl
adc
push
pop
fnstcw
std
mov
jae
sub
stos
cmp
incb
iret
imul
insb
into
mov
dec
mov
pop
xchg
int
adc
enter
mov
xor
sub
out
aam
js
sbb
pop
pop
xor
stos
outsl
movsb
in
ljmp
sub
mov
lret
push
jnp
outsb
dec
mov
dec
push
jg
lods
hlt
sbb
push
pop
es
pop
leave
ret
or
inc
dec
dec
jecxz
das
sub
in
sub
into
loop
or
cmpsb
imul
xchg
sub
out
popf
fwait
inc
stos
push
and
mull
sub
inc
sub
repnz
pop
mov
mov
pop
loop
repz
xor
in
repz
push
aaa
dec
jbe
nop
xchg
cmp
movsl
aaa
jnp
or
pop
inc
data16
xchg
cmp
cwtl
in
cs
sub
ffreep
cmpsb
lret
add
cmpl
adc
cli
cmc
push
xchg
sti
popf
lods
sti
fisttps
out
cmp
mov
push
xchg
fmull
ss
and
sarl
js
stc
mov
loop
lret
add
subb
xor
inc
cmc
mov
ret
pop
sbb
fbld
dec
push
loope
ret
xor
push
mov
outsl
inc
test
mov
imul
insl
fstp
mov
orb
dec
mov
orl
mov
negl
xor
xchg
push
adc
mov
xchg
fisttpll
mov
out
or
xchg
dec
push
ja
jp
adc
sub
pop
mov
pop
ljmp
scas
cmpsl
jecxz
dec
loop
add
ret
fwait
and
adc
popa
cmp
push
rcl
fcomps
roll
popf
mov
sub
fisubrl
popf
pop
or
pop
cmp
jne
in
nop
dec
stos
pushf
xchg
mov
or
popa
dec
mov
pop
in
test
jno
mov
aas
test
es
repnz
clc
inc
in
xor
or
or
sub
sbbb
stc
mov
ret
lock
insl
push
inc
xchg
ret
lds
rorb
push
or
pop
out
cmc
xrelease
stos
pop
xchg
test
imul
nop
sub
jecxz
in
rcll
xor
repz
xor
fs
mov
cmc
movsl
fstpl
repz
ss
fld
mov
ret
test
xchg
cmp
sub
jl
rol
adc
xchg
iret
arpl
mov
xchg
ret
push
inc
mov
push
jecxz
mov
mov
xor
mov
pop
sbb
inc
cmp
mov
cmp
call
sbb
lods
xchg
nop
sbb
test
jbe
add
in
mov
cmpsl
jecxz
xchg
aaa
or
pusha
push
loop
mov
sub
mov
dec
cmpl
push
and
mov
jle
mov
into
push
mov
lea
xlat
xor
ret
add
cmp
aas
mov
clc
mov
outsl
outsl
clc
cmp
mov
scas
jmp
loopne
repnz
ds
and
jmp
stc
xchg
fwait
mov
jae
test
popf
pop
add
shll
lahf
xchg
aad
pushf
lds
sahf
addr16
cmpsb
mov
mov
mov
into
or
mov
int3
outsl
fdivrl
sbb
repz
fnstsw
lds
mov
rcrl
push
fs
cmpsb
push
lcall
jl
mov
es
push
out
mov
or
shlb
and
adc
mov
sub
into
jb
mov
testb
hlt
dec
popf
push
add
stos
imul
js
insb
enter
daa
test
mov
cmp
xchg
mov
jle
cwtl
add
lahf
adc
adc
lods
mov
inc
pop
xor
dec
lods
fistpll
stc
js
sub
movsb
cmp
dec
lea
mov
movsl
mov
add
xor
sbb
and
adc
mov
lret
popf
es
int
imul
stc
cmp
mov
in
test
xchg
outsl
add
mov
out
ret
push
xchg
push
sbb
enter
and
repnz
and
aam
sahf
lods
addb
mov
pop
sbb
ret
sbb
add
jg
leave
push
shll
push
aas
sub
pop
xchg
inc
dec
adc
push
lds
std
outsl
lods
adcl
aaa
inc
mov
lods
popa
or
call
xor
dec
xor
shlb
out
cmc
xlat
loop
xchg
push
mov
mov
lcall
test
into
cltd
add
rclb
pop
ficoml
lret
sub
jg
and
insb
mov
ficompl
push
test
cmp
aad
add
fidivrs
jmp
or
sub
mov
cmpsb
sub
lods
jp
xchg
inc
cli
sbb
out
push
mov
shll
mov
in
dec
in
ret
mov
mov
fsubs
xchg
sbb
adc
push
adc
sub
rolb
test
sbb
andl
notl
in
add
test
lea
stos
jbe
mov
popf
mov
add
aaa
loopne
mov
out
das
cmp
lock
clc
popf
cmpsb
push
movl
icebp
loope
and
inc
inc
sub
add
inc
jbe
sahf
nop
sarb
inc
dec
push
push
jo
xor
scas
and
cmp
loope
add
das
cltd
pop
aaa
repz
pop
and
dec
xor
dec
bound
mov
xchg
insb
pop
jg
out
aaa
sahf
mov
mov
mov
jp
sbb
jno
mov
dec
sbbl
sub
cmp
xor
add
dec
mov
jle
cmpsl
xchg
adc
and
inc
or
popa
fadds
out
sti
scas
cmc
or
ret
test
xchg
in
jmp
lret
insb
in
int
iret
mov
test
xchg
xor
repnz
adc
leave
adc
jp
test
in
cmp
push
lahf
test
scas
popa
push
imull
stc
dec
pushf
xor
xor
ja
addl
out
sarb
push
adc
push
mov
dec
punpckhdq
mov
stos
or
out
sub
nop
pop
xchg
jecxz
mov
ds
ret
xor
push
outsb
cmpsl
adc
mov
push
rorb
jmp
jge
mov
stos
aaa
ja
xchg
push
jle
ret
movsl
call
jnp
sbb
iret
lock
adc
lret
mov
pop
scas
inc
mov
xor
in
clc
inc
add
xor
ljmp
lret
mov
imul
rorl
jns
jns
lock
xor
mov
add
pop
mov
stos
mov
mov
sbb
ror
test
push
lods
xor
mov
stc
inc
jl
mov
rorl
xchg
jl
xor
or
in
push
pop
push
or
fistpll
dec
or
jg
dec
and
sub
mov
std
sub
push
je
cmc
scas
mov
lahf
adc
ret
ja
lea
jmp
mov
or
in
inc
push
jl
imul
fwait
ja
stc
icebp
push
mov
cmc
clc
imul
push
leave
mov
test
add
insl
pushf
fistpl
aam
push
pop
es
mov
ljmp
test
sub
add
jae
mov
jle
push
mov
add
sbb
mov
xor
mov
add
in
dec
add
cmp
mov
nop
sub
cmp
sahf
xor
mov
sbb
xchg
sub
inc
outsl
lcall
fdivs
cmc
popf
sbb
jno
cmp
cmp
xchg
test
in
lock
or
jne
enter
cltd
lcall
icebp
int3
mov
jne
mov
mov
iret
push
sbb
gs
les
mov
xor
lods
fidivs
ljmp
cmp
jmp
out
aas
icebp
bound
push
subb
xchg
xchg
or
or
push
aad
rcl
xchg
andb
pusha
or
int3
loopne
xor
shl
stos
xchg
sbb
xchg
stos
add
int3
jp
mov
dec
lahf
adc
mov
out
ljmp
cmp
jp
mov
pop
pop
bound
js
fsts
xor
or
daa
stc
lret
daa
xor
push
sbb
ljmp
sbb
pusha
insl
mov
push
push
test
xor
test
push
xor
in
push
mov
and
fisubrl
aas
mov
or
cwtl
jl
jl
mov
xchg
movb
mov
sub
or
int3
cmpsb
lds
rclb
push
aaa
xor
and
stos
loopne
pop
cmp
std
test
push
or
sbb
std
push
pop
pop
mov
mov
push
repz
mov
xor
mov
xchg
cwtl
scas
rcll
ret
lds
jp
jns
mov
fcmovb
jno
das
adc
xor
or
pop
outsw
cmpsb
fldenv
clc
cmpsl
mov
stos
xchg
pop
int3
outsb
push
aam
sbb
imul
inc
sti
pop
or
mov
pop
sub
fs
scas
nop
mov
push
out
repz
dec
xlat
aad
add
movsl
cmp
xchg
lods
insl
and
push
data16
xor
dec
dec
push
pop
inc
das
add
or
inc
xchg
fwait
lock
xorl
sub
pop
addr16
jle
repz
loope
int3
repnz
xchg
mov
push
dec
scas
jbe
add
jbe
mov
cmpsl
ljmp
mov
loop
cli
push
adc
stc
lds
inc
xor
dec
mov
adc
adc
ss
in
xchg
fdivl
in
int
sti
leave
test
ret
or
filds
fucomi
sbb
ss
imul
pop
int3
js
pusha
sub
mov
adc
ljmp
mov
fnstsw
daa
adc
in
out
or
add
inc
iret
jno
shlb
push
push
clc
lods
sub
cwtl
bound
mov
das
in
xor
sbb
std
mulb
and
mov
movsl
fldl
sbb
mov
stos
push
clc
mov
repnz
test
or
stc
sub
mov
out
cmp
pop
inc
adc
stos
in
and
out
add
in
or
iret
jmp
rclb
inc
adc
lods
stc
cmp
mov
mov
cmp
sti
sti
push
and
out
outsb
je
mov
nop
add
mov
xchg
lea
xchg
inc
test
or
jo
fnsave
cmp
or
jae
mov
cmp
cmp
pusha
xor
ljmp
cmp
push
nop
hlt
pop
xchg
aad
stos
das
xor
adc
jno
inc
mov
test
cli
fisubrl
dec
adc
aad
and
shll
cmp
inc
pop
inc
movsb
cmp
xchg
rcrl
and
fildl
xchg
jne
mov
cld
stc
rorb
call
je
icebp
fld
mov
js
scas
xchg
ds
lret
push
fcomps
sbb
outsb
push
out
mov
test
jmp
jo
stc
cmp
mov
cld
dec
xchg
jae
ret
lret
adc
lds
pop
xor
jle
cmp
or
stos
stos
adc
sarl
or
jecxz
das
popf
cmp
cmpsb
inc
int
and
xchg
jbe
cmp
push
rorl
ret
fcoml
cmpsb
adc
and
mov
vphaddubd
test
sbb
lcall
sub
pop
ret
fdivrl
dec
ficoms
or
pop
clc
jg
cmc
popf
cmp
xor
mov
into
rcl
jbe
and
int
inc
pushf
shlb
mov
jge
leave
push
dec
rorl
and
xor
addr16
popa
pop
mov
xor
decb
push
mov
mov
jo
test
fistl
dec
adcb
in
lods
nop
addl
jbe
lahf
subb
jp
nop
ficomps
or
adc
mov
mov
lea
subl
push
push
add
jg
lss
loop
mov
sub
stc
jle
jnp
push
or
fdivs
ljmp
sbb
enter
ljmp
sarb
or
fwait
cmp
shr
sbb
xchg
cmp
mov
push
cli
mov
dec
lea
inc
jle
fbld
addr16
xor
pushf
cmp
dec
lret
jle
out
jp
inc
and
jno
push
cmp
insl
sbb
xor
std
lret
lds
or
pusha
jecxz
jno
movsl
test
aam
rcrl
add
data16
cmpsb
push
jg
lods
mov
loopne
stos
push
push
jb
dec
and
push
rcr
push
push
mov
jnp
fst
add
je
out
inc
sarl
add
cmp
dec
inc
repz
sbb
outsb
icebp
mov
mov
push
nop
and
lcall
or
push
mov
fistps
dec
mov
inc
pop
es
fs
aad
insb
xchg
add
mov
es
dec
test
daa
mov
ds
out
or
add
int3
pop
xor
inc
add
aad
mov
insl
mov
push
push
adc
pop
jb
mov
mov
leave
push
pop
mov
mov
sub
ja
push
jbe
xor
xchg
and
mov
jnp
pushf
iret
mov
jae
add
jne
or
add
mov
mov
add
pop
jmp
and
popa
loopne
shll
loopne
es
testb
jg
xacquire
popa
adc
movsl
loop
mov
cwtl
adc
jb
or
cmp
adc
call
in
xor
xor
in
sub
insl
xor
loope
and
jp
pop
xchg
mov
adc
je
cli
or
aaa
cmp
fiaddl
sbb
sbb
dec
outsb
jmp
pushf
scas
dec
push
stos
jne
mov
adc
ret
cli
push
cmc
and
aad
cltd
jb
outsb
das
movsb
mov
and
mov
fisttps
pusha
and
fdivrl
push
pop
adc
scas
inc
leave
sbb
lods
jns
lock
and
cmp
or
dec
push
cmp
xchg
js
mov
fs
mov
mov
rcll
jnp
mov
mov
mov
lcall
jp
adc
popa
mov
xchg
mov
sub
mov
jne
jb
addr16
out
push
clc
pop
or
add
sahf
sub
mov
jne
mov
xor
mov
jecxz
clc
jge
mov
xor
push
int3
inc
outsb
xor
and
add
bound
insl
out
add
pop
mov
pop
jle
push
dec
dec
popf
das
push
fistpl
das
in
and
sti
testl
xor
test
fildl
dec
cmp
mov
sbb
pusha
int3
sub
mov
popa
xor
fisubl
sub
xor
push
cmp
incl
inc
add
fwait
dec
dec
xor
sbb
add
xchg
xor
sbb
cmp
jge
adc
xor
nop
inc
inc
shlb
daa
fucomip
xlat
in
add
push
cmp
test
push
xchg
push
xlat
popf
popf
clc
xchg
outsl
orl
xchg
inc
xor
mov
add
push
adc
cltd
scas
scas
inc
jne
lcall
or
icebp
xor
mov
int
lret
ret
mulb
mov
mov
push
cmc
fcomip
xchg
in
fiadds
lret
dec
es
mov
pop
xor
loope
xor
cvtps2pi
or
cmpl
inc
imul
or
cmp
mov
and
push
mov
and
aaa
std
into
lods
and
ret
mov
adc
dec
scas
cli
dec
stos
sbb
mov
sbb
lods
test
mov
enter
push
enter
in
lock
pop
ljmp
jge
loopne
jae
inc
add
stos
jae
into
push
imul
movl
adc
rcl
mov
outsb
sbb
xor
jb
ror
push
sbb
shlb
es
mov
fldcw
repnz
mov
cmp
into
cmp
push
or
outsl
xchg
cmp
sub
inc
mov
dec
xchg
pusha
xor
in
rolb
lods
or
mov
xor
jg
or
repz
cmp
mov
adc
and
shll
cmp
sbb
loope
test
inc
add
shrb
add
addr16
fisubrs
lds
imul
testb
pop
aaa
icebp
aam
mov
mov
adc
insb
xchg
xor
popf
fbld
sub
stc
out
push
ret
pop
leave
repnz
bound
adc
scas
mov
jmp
das
ja
stc
cltd
mov
adc
mov
jae
pop
sti
dec
test
sahf
pop
jecxz
or
lcall
mov
push
add
cmpsb
xchg
pop
data16
sub
out
mov
fwait
cltd
dec
test
xchg
xchg
outsl
movsb
cld
jl
xchg
nop
xchg
cmpsl
push
insl
insb
lcall
jl
nop
ret
push
pushf
loope
dec
mov
shlb
std
ss
sub
or
xor
sarl
jecxz
pop
enter
std
ret
cmpb
aam
jmp
cmp
inc
adc
pop
js
mov
adc
and
nop
in
imul
aas
dec
imul
lods
mov
out
stos
aaa
imul
mov
lods
je
loop
test
mov
cmc
jg
add
mov
add
out
inc
sti
mov
sbb
push
iret
in
stos
leave
icebp
adc
mov
dec
jmp
add
imul
mov
sahf
jae
push
xor
add
cmp
jno
sub
push
cs
loopne
cmpsb
aam
aas
jl
stc
xor
xchg
in
sub
pop
mov
xor
xchg
push
aam
test
push
mov
dec
pop
jl
sbb
mov
in
sbb
sbb
jae
dec
jmp
fimull
dec
xlat
test
inc
sub
cld
xchg
rcrb
sbb
test
sbb
mov
sub
test
xor
mov
cmpsl
push
out
jno
ret
push
pop
adc
sbb
orb
sti
aas
and
pop
cmp
arpl
idivb
xor
lret
out
cltd
lea
cwtl
imul
push
xchg
int3
addr16
movsb
mov
rorb
mov
mov
imul
imulb
jb
les
outsb
gs
sti
mov
dec
les
fsubr
dec
inc
mov
int
sbb
js
movl
pop
ljmp
cmp
iret
jo
cli
mov
and
movsl
cli
and
mov
mov
pop
lods
aad
and
fwait
pop
out
xchg
pop
fucomi
addr16
jns
and
incb
gs
bound
cmc
dec
add
pusha
jl
lds
adc
jge
scas
lods
addl
or
and
loop
xchg
cli
es
testb
data16
dec
ja
aam
xor
or
mov
pop
push
xlat
es
pop
pop
pop
jmp
mov
jle
outsl
cmpsl
push
stc
and
bnd
dec
sahf
jbe
inc
fildll
add
out
pop
push
or
movsl
xchg
sub
xlat
cli
sbb
cmc
inc
fwait
in
add
out
dec
movsb
and
mov
insl
das
aam
pop
movb
iret
jns
pop
in
sbbb
inc
push
push
push
adc
fs
fcmovu
sbb
cmp
mov
xchg
test
ss
rclb
cs
je
adc
jno
push
adc
std
xchg
push
mov
sub
jp
and
and
mov
daa
add
xor
jnp
adc
leave
into
mov
sbb
xchg
mov
dec
xor
dec
dec
and
mov
adc
xchg
xchg
arpl
test
in
inc
pop
inc
mov
xchg
dec
mov
adcb
cmp
jbe
in
cmpsb
inc
aaa
movsb
mov
fistpl
das
in
sti
add
nop
popf
adc
lcall
adc
push
arpl
push
sti
sti
xor
daa
and
push
inc
push
cmp
lcall
rorl
ret
lret
add
mov
mov
hlt
fcoml
cmpsb
push
add
addr16
adc
jmp
aas
hlt
mov
ds
hlt
mov
vaddps
sbb
push
inc
lret
lock
sbb
jbe
dec
jle
xchg
sub
sub
add
ss
adc
pop
xchg
sbb
into
fwait
int3
fwait
aad
cltd
out
adc
sub
orb
pop
jbe
ror
pop
pop
add
xor
push
inc
cmpsb
pop
mov
lods
push
jg
outsb
xchg
jmp
outsb
add
push
leave
out
es
clc
out
sahf
mov
push
mov
enter
cli
jne
cmp
fs
fstl
adcb
sti
sbb
insb
in
inc
adc
repnz
push
pop
xchg
movsb
lods
jp
mov
clc
push
lods
negl
mov
repnz
ss
pop
in
jo
lret
or
testb
outsl
movsl
leave
push
add
add
les
imul
sub
insb
mov
cli
sahf
cmpb
mov
jmp
sbb
cmp
inc
loopne
insl
jae
cmc
pop
cmp
pop
mov
jecxz
mov
xchg
in
cmp
movsb
enter
sbb
inc
movsl
fwait
jg
mov
cmp
adc
les
lcall
ret
insl
jno
jge
testb
scas
sbb
aad
ret
shrb
dec
nop
sarb
popa
push
jnp
xchg
loope
mov
dec
ja
xor
mul
sbb
lods
clc
bound
stos
sub
xchg
lcall
mov
dec
sub
addb
add
xor
add
es
and
pusha
jmp
fisttpll
mov
sbb
mov
ss
lret
stos
rcr
lret
imul
or
push
adc
sbb
dec
ldmxcsr
ss
popa
sar
jl
xor
jecxz
xor
loopne
aaa
push
stos
xor
iret
and
lock
fcom
sbb
dec
pop
das
cmpsl
outsb
xorl
cmc
xchg
pop
rcl
popa
sub
stos
rcll
jge
mov
jno
lret
xchg
cwtl
mov
push
insb
lret
dec
js
sahf
int3
push
add
cmpsb
mov
pop
ja
sbb
roll
add
lock
int
push
push
sub
or
push
pushf
add
fists
or
bound
inc
fs
jae
push
ret
adc
sub
mov
lahf
mov
fisttps
or
mov
std
mov
daa
aam
or
mov
xchg
mov
mov
mov
push
pop
loop
ljmp
xchg
std
js
loopne
sbb
shl
loopne
inc
and
fldl
pop
sbb
and
and
jae
pushf
xor
test
div
xchg
js
stos
push
push
sbb
pop
sub
sbb
mov
int
jle
movb
push
push
sbb
push
divl
and
mov
dec
stos
inc
lahf
jmp
jge
cmp
loopne
arpl
lahf
stc
mov
cwtl
mov
push
out
in
popa
sahf
loopne
mov
jl
incl
jmp
jo,pt
cmp
pop
fdivrp
mov
clc
mov
mov
push
fs
add
fs
push
push
push
xor
inc
push
in
mov
das
and
aad
fldl
test
data16
mov
lahf
xchg
pop
aad
bound
les
mov
pop
mov
int3
mov
or
or
jmp
ds
in
cs
cs
xchg
sub
outsb
lahf
shlb
aas
add
out
into
pop
mov
loopne
lahf
adc
xchg
dec
inc
movl
rorl
inc
push
sbb
push
mov
adc
mov
mov
lods
add
aas
mov
xchg
test
inc
push
or
adc
ja
jecxz
in
neg
int
jbe
pop
daa
dec
inc
jb
and
arpl
sub
subl
std
cld
int3
inc
insl
bound
nop
pop
push
cwtl
ja
out
jns
sub
lds
pusha
lret
or
imul
xor
jae
fdivr
mov
jle
fadds
xor
fnstcw
lea
mov
nop
xchg
xor
jmp
dec
adc
rcr
or
pop
cmc
jo
hlt
xchg
mov
mov
decl
ret
call
push
int3
push
xchg
or
jg
jle
inc
rorl
push
fnstsw
js
sub
out
rcrb
addl
scas
movsl
push
test
push
lahf
add
mov
lcall
repz
icebp
gs
lcall
pop
pop
xor
adc
clc
jp
and
lcall
insl
pop
das
xorl
gs
mov
addr16
ficoml
push
jg
mov
js
push
cmp
rcl
ficoml
xor
cli
adc
fstpl
lods
sbb
les
dec
push
sbb
pop
hlt
push
std
clc
xor
xor
mov
jns
mov
repz
lods
push
inc
orb
test
imul
std
pop
enter
sbb
xor
cmpsl
cltd
mov
scas
push
mov
jnp
pop
mov
fmuls
mov
mov
push
sub
xor
stc
js
movsl
je
inc
hlt
ja
xor
ljmp
xchg
add
adc
lods
jp
push
push
pushf
arpl
push
ja
sub
stc
and
add
mov
jno
pop
test
daa
imul
xchg
arpl
xchg
out
cmp
and
sahf
pop
int3
cmp
mov
lahf
repz
mov
jle
stc
mov
jg
adc
fldenv
dec
pop
sub
inc
enter
mov
popf
sub
shrb
test
sbb
fs
pop
popf
sbb
mov
shrl
scas
icebp
sub
in
dec
out
aam
xor
cwtl
add
cltd
pop
push
dec
stos
cmp
mov
xchg
pop
mov
pop
loope
xchg
pusha
mov
cmpsl
add
sarl
outsb
sahf
popl
mov
outsl
xchg
loop
dec
lods
xlat
ret
lock
scas
push
ja
mov
lock
test
fcmovu
mov
insb
mov
xchg
gs
fld
aaa
loopne
hlt
ljmp
xor
inc
mov
xor
dec
push
or
sbb
gs
jo
adc
shrb
push
movsl
or
lock
push
xor
sti
jmp
mov
mov
inc
dec
pop
or
push
mov
mov
aaa
adc
dec
fidivrs
rcrb
mov
jne
jnp
jg
lock
lret
fcmovnbe
dec
sbbl
lret
mov
push
imul
in
mov
stos
hlt
fisttpll
and
inc
cmp
dec
stos
fisubrs
push
adc
cld
loope
lret
mov
icebp
inc
push
test
popa
cmp
mov
incb
cmpsb
and
rcr
fldenv
cs
and
cmpsl
je
add
ljmp
jo
add
mov
push
mov
imulb
addr16
and
sub
sub
mov
mov
roll
loop
ja
pop
and
xor
mov
addr16
fsub
lds
stos
gs
and
dec
bnd
jmp
mov
loopne
imul
mov
js
ss
dec
add
push
push
je
inc
sub
stc
or
loopne
pop
std
add
xor
lods
mov
mov
aam
inc
loopne
mov
push
mov
pushl
arpl
jmp
pop
inc
mov
mov
mov
roll
inc
lods
inc
int3
sbb
sbb
jmp
stc
push
push
push
push
enter
or
popf
mov
addr16
mov
testb
fcmove
lret
cmpxchg
push
lods
or
pop
jle
xorl
push
and
lods
mov
test
fsubl
pop
mov
add
mov
ljmp
cltd
fmull
jo
mov
fucom
adc
cld
lcall
fucomip
lahf
inc
jae
cmpsl
stos
fistps
iret
fstpt
push
sub
jmp
fmull
push
mov
js
roll
cmc
imul
add
repz
dec
or
mov
ds
scas
subb
push
test
repz
enter
sahf
dec
outsl
mov
fwait
sub
aaa
fmull
add
int
push
popa
push
xchg
pop
in
sbb
daa
fs
scas
loopne
cwtl
adc
nop
aam
es
pushf
movsb
in
arpl
rorl
push
add
push
ret
xlat
dec
xor
inc
lock
pop
ja
cli
in
aad
pop
mov
lods
xchg
aas
fmuls
lahf
mov
notb
leave
xchg
add
xchg
popa
pushf
pop
adc
add
cmp
test
or
push
scas
cltd
mov
call
insb
adc
bound
aas
mov
je
sbb
push
icebp
pop
fstpt
int3
push
pop
push
or
outsb
push
pusha
xchg
dec
mov
push
lea
push
testl
add
jbe
xchg
test
cmp
mov
rcrb
out
or
insb
push
pop
add
and
mov
mov
inc
or
adc
jmp
mov
push
push
add
mov
push
aaa
cmp
push
xor
lret
jl
ja
idivb
cwtl
std
fucom
mov
push
repnz
pusha
jecxz
push
and
sbb
pop
pop
ret
lret
out
dec
ja
cmp
mov
je
inc
addb
fiaddl
subl
int
dec
or
cmp
push
mulb
cmp
sub
notb
xor
lcall
aaa
adc
scas
cltd
push
fs
xchg
push
sub
loopne
sarl
sub
or
adc
dec
add
fsubrl
push
imul
mov
pop
rcr
sub
inc
lret
jae
insl
xchg
jno
js
and
pop
clc
les
sub
and
fildll
loope
add
lret
inc
xor
adc
shll
mov
dec
or
or
xchg
mov
and
ficompl
mov
fists
xlat
jb
pop
fistpll
and
mov
scas
jmp
jle
pop
fistpll
fldenv
lea
rcr
sub
push
push
xchg
inc
arpl
mov
jb
push
cmp
inc
dec
mull
mov
pop
push
clc
add
dec
jbe
test
xchg
stos
cmp
mov
mov
out
lret
inc
jbe
push
mov
mov
lods
andl
xchg
jb
jmp
mov
mov
jmp
jmp
xor
or
add
cmp
frstor
pushf
push
push
inc
dec
call
inc
testb
imul
pop
ficompl
sub
mov
mov
adc
fadd
dec
dec
or
push
xor
pop
ljmp
dec
lret
fstpl
lock
sub
inc
loopne
sbb
sti
std
ss
adc
cmc
inc
cwtl
dec
ja
mov
add
pop
xchg
sub
adc
jbe
fwait
sbb
and
add
stos
scas
fs
xlat
jnp
es
jg
les
push
inc
dec
inc
adcl
fldcw
fnsave
cmpsb
daa
mov
sbb
jae
add
into
pop
iret
cmp
adc
lret
iret
pop
adc
popa
sti
and
add
addr16
push
cmp
loope
or
test
jp
xchg
jmp
push
mov
pop
int
add
movsl
jle
mov
and
jmp
lret
mov
cmpsl
dec
clc
inc
cld
sub
gs
mov
hlt
adc
hlt
mov
mov
sbb
sbb
and
loopne
popf
cmovnp
and
std
inc
sarb
arpl
mov
popa
test
inc
inc
adc
mov
adc
bnd
fs
add
push
sar
lock
cmp
dec
aaa
dec
fwait
dec
in
out
insb
daa
movsb
mov
pop
lock
or
cmc
push
inc
lcall
pop
push
stc
ret
adc
stos
push
test
hlt
ljmp
arpl
xchg
data16
int3
add
fwait
into
jl
sub
xor
push
call
hlt
dec
push
inc
jbe
pop
out
mov
les
in
aad
repnz
cmp
and
enter
into
sarb
repz
mov
test
jge
dec
jb
cmpsb
adc
fiadds
lahf
or
dec
mov
push
pushf
lds
xor
cmpsb
popf
mov
ss
add
jle
es
mov
jnp
inc
pop
pop
aaa
insb
notb
pushf
sbb
or
add
shrb
aam
pop
loopne
arpl
fwait
ljmp
jo
xor
xchg
mov
push
mov
popa
pop
push
lds
xchg
pop
pop
add
push
outsl
rolb
daa
stc
hlt
dec
ret
fldenv
movsl
lahf
addr16
ljmp
imul
out
nop
mov
orb
mov
and
in
inc
inc
inc
xchg
sbb
jge
out
cltd
jbe
xor
adc
mov
loope
jmp
jecxz
shrb
cmp
fsts
mov
xor
and
mov
or
add
xchg
dec
xor
or
sbb
cmp
icebp
lret
ret
repnz
test
stos
sbb
jnp
cmpl
dec
fs
clts
adc
lods
xchg
repz
js
dec
add
inc
or
pop
std
fists
add
and
or
fwait
jmp
idivl
adc
cmp
aad
xor
push
inc
aas
je
and
push
jno
into
lock
lahf
jp
loopne
rclb
movsb
dec
js
popa
or
lret
dec
inc
inc
jl
stc
jp
movl
sbb
sub
in
cmp
dec
pop
hlt
add
lds
and
sbb
daa
hlt
xor
iret
cmpl
push
cmc
cmpl
lahf
mov
aad
out
add
inc
and
fiaddl
mov
push
pop
insl
nop
loop
mov
pop
mov
inc
cmp
daa
mov
and
test
stos
gs
ljmp
leave
arpl
stc
mov
ja
aaa
mov
lea
ljmp
loop
and
xor
push
sbb
mov
pop
pop
sub
dec
lret
inc
fldenv
push
add
or
and
jne
shlb
in
pusha
sub
aas
pushf
ret
aad
push
ja
and
addr16
leave
jg
fdivl
stos
sub
jno
imul
insl
dec
dec
stc
lret
lock
repnz
pop
lret
pop
insb
sahf
sbb
ja
cmp
test
ljmp
xor
xor
pushf
cmp
sub
push
mov
lret
adc
mov
xor
mov
out
cwtl
in
test
imul
cmpsb
xchg
cmp
fistpll
pop
loopne
imul
loop
aaa
decb
xor
arpl
ja
call
dec
jnp
mov
stc
mov
cmpsl
dec
das
stos
or
orl
out
shlb
mov
jge
flds
inc
mov
jnp
dec
add
mov
pop
lcall
mov
adc
cmp
push
sub
cs
cli
dec
es
inc
xchg
mov
inc
xor
pmaxub
shll
sub
imul
jae
ja
add
inc
jae
out
and
xchg
adc
mov
call
jns
stos
jp
adc
sub
sbb
jg
lods
adc
mov
in
cmp
mov
out
mov
out
lods
xor
test
popf
xchg
cmpsl
mov
xchg
jle
movsb
and
inc
test
inc
or
test
mov
push
out
sbb
sbb
jmp
ljmp
mov
lods
xchg
mov
sbb
sbb
insl
test
lcall
sbb
rorl
test
fwait
mov
push
jge
scas
push
imul
sub
jbe
rorl
lahf
in
sub
jg
adc
sbb
insb
testb
mov
pop
push
inc
mov
mov
inc
mov
push
xchg
into
or
push
and
mov
jae
adc
sbb
scas
sbb
cmpsb
mov
stos
not
or
jae
out
ror
enter
sbb
mov
mov
fcoms
sbb
iret
insl
adcb
mov
and
xor
cs
xlat
push
pop
sbb
push
and
push
out
scas
call
lods
repnz
adc
sub
jmp
mov
adc
mov
sbb
ret
lea
inc
cmpsb
ret
out
push
dec
ja
cli
push
pop
ss
cmp
lret
mov
lock
mov
push
inc
daa
xchg
mov
or
sub
xor
or
imul
push
aam
add
fwait
ss
jl
push
mov
jl
pop
jl
out
dec
or
cmp
dec
aad
sub
clc
scas
cmp
or
testl
and
out
push
jbe
sbbl
jmp
sub
push
xchg
clc
popa
push
sbb
gs
sti
in
xchg
mov
lods
push
movsl
dec
stos
and
test
adc
lods
imul
mov
cmc
or
jge
cmc
out
imulb
ret
lret
sub
sbb
movsb
adc
lds
outsb
insl
xchg
mov
popa
push
mov
jp
std
mov
mov
or
sub
icebp
mov
jae
insb
or
and
shll
mov
dec
sbb
aaa
or
in
lahf
xchg
sub
or
dec
sti
and
in
or
cmp
push
test
andb
dec
jo
xor
jmp
mov
popf
xor
cmp
into
sbb
and
test
ret
sar
mov
or
outsb
je
xchg
fidivl
loope
js
leave
push
lret
scas
mov
push
and
sub
mov
mov
fwait
sahf
push
jge
push
adc
inc
insl
sub
mov
cmp
fsubrl
adc
repz
std
stos
fdivrs
xor
ficompl
sub
cmp
stos
xor
sub
ss
mov
push
mov
pop
test
das
and
fsubl
clc
fsubl
mov
in
add
pusha
data16
imulb
repnz
jne
and
out
rcrl
sti
mov
cltd
sbb
dec
xchg
adc
jg
fs
cmp
dec
adc
int
mov
xor
sbb
ficoms
dec
mov
mov
addr16
jmp
inc
test
rcl
fwait
jecxz
push
xchg
daa
pop
sbb
inc
xchg
mov
xor
cmpsl
or
addl
pop
test
shrb
pop
mov
sub
cmc
mov
nop
in
pop
mov
mov
or
popl
orb
lds
dec
lea
mov
mov
cmp
rolb
aad
and
ljmp
mov
push
scas
adc
cmp
dec
pop
clc
sbb
ret
loope
mov
in
fistps
call
jmp
ljmp
insl
inc
dec
pop
xor
jae
jne
pushf
mov
fstpt
push
sahf
and
fstpt
jle
dec
xor
and
lea
sbb
stos
aas
dec
push
jmp
mov
das
div
lock
cld
and
aam
icebp
fildl
add
pop
les
lock
test
inc
sarb
mov
aas
jne
shrl
test
ds
xor
dec
imul
sbb
adc
xchg
into
inc
xchg
test
adc
sub
jle
or
xchg
jno
add
jg
scas
mov
and
push
jg
ss
inc
mov
aad
movl
orb
and
or
ror
sti
jb
mov
lret
sahf
jno
icebp
inc
sbb
cmp
lock
sub
stos
out
and
inc
jp
cli
lcall
ja
ficoml
daa
push
fnstenv
cmp
push
pop
fidivs
aad
lea
or
std
sub
arpl
and
push
mov
xchg
arpl
dec
sahf
sbb
inc
cwtl
xlat
iret
stc
aas
jbe
mov
mov
or
jge
jge
enter
mov
data16
jns
xor
lods
dec
lock
push
shll
jne
mov
xchg
jmp
loop
leave
jmp
pop
push
int
shrb
mov
ds
mov
dec
cwtl
mov
or
push
xchg
fists
push
mov
shlb
lods
lret
cwtl
xor
mov
pop
mov
add
insb
push
inc
ja
jecxz
test
aad
pushf
inc
subl
mov
jo
and
arpl
xchg
imul
cmc
incl
lds
bound
add
and
pop
xchg
insb
neg
mov
sbb
movsl
xor
jge
jae
push
das
push
xchg
mov
xchg
loopne
aad
lgs
jno
jmp
mov
popa
leave
mov
daa
stc
cld
add
push
iret
loop
iret
sub
cmp
mov
push
inc
pop
testl
leave
xchg
stos
sub
and
xor
jnp
cli
jnp
add
dec
dec
cmp
sbb
rcll
add
sbb
xorl
int
faddl
mov
cld
jns
in
les
scas
jnp
rorl
loop
push
cmpsl
cmp
sbb
jnp
and
jnp
aad
aam
iret
xchg
cmovge
ljmp
add
subb
test
shlb
popf
mov
pop
lods
std
mov
mov
or
or
dec
cmp
movsb
mov
inc
lock
and
ds
cmp
aas
roll
movsb
lret
mov
or
xchg
dec
insl
mov
dec
jns
out
imul
lret
rcr
adc
orl
in
aad
rorl
imul
inc
ret
mov
cmp
loop
in
mov
addr16
fisttps
sub
fiadds
hlt
imul
inc
push
movsl
adc
xchg
sbb
in
aad
fsubrs
mov
outsl
fisubs
aaa
in
in
addr16
fidivrl
test
loop
pop
sti
fisubs
repnz
fdivrl
mov
lods
pushf
dec
jbe
shll
sbb
fs
xchg
xor
out
cmpsb
mov
outsb
ret
int3
pop
push
jno
andb
cltd
cs
movsb
stos
scas
mov
hlt
movsb
rolb
in
add
push
sbb
cmp
jno
inc
dec
fildl
mov
pop
stos
pop
or
leave
decl
imull
lock
jnp
pop
adc
xor
jae
or
cmp
or
jmp
jns
xchg
dec
dec
dec
mov
testl
dec
ljmp
cmp
aas
lret
popa
popl
aam
dec
ja
mov
xchg
daa
jl
cmp
fisubrs
pushf
sub
je
out
push
add
rcll
rol
mov
sbb
push
sbb
cmp
fisttps
mov
addr16
sbb
push
sbbb
ds
addr16
mov
jle
jb
cmp
mov
sbb
stos
xor
mov
jmp
rolb
or
and
cmc
les
jg
xchg
cld
mov
ret
aad
sub
fchs
cmpsl
dec
jbe
dec
pop
and
insb
loopne
mov
sbb
add
movsl
add
dec
mov
lret
inc
jae
sub
stos
mov
cmp
mov
test
lret
into
add
fstpt
add
xorl
into
or
popa
gs
scas
mov
rcrb
pusha
xchg
mov
push
arpl
push
lock
adc
dec
les
stos
mov
jne
inc
insl
push
out
lret
push
rcl
int3
loope
rcll
mov
rclb
shll
test
clc
enter
out
dec
mov
cmpsl
xchg
jl
mov
mov
sbb
mov
and
pop
jae
data16
adc
jo
out
scas
lods
std
mov
xchg
jecxz
sub
repnz
mov
inc
mov
stc
js
idivl
xor
xor
pop
imul
pusha
fcmove
fiaddl
test
sahf
sahf
sbb
mov
pop
pop
jg
ja
xchg
arpl
xor
mov
andb
or
div
inc
shlb
xchg
jecxz
pusha
xchg
mov
out
fwait
mov
jecxz
xchg
cmp
dec
pop
add
loope
bound
movsb
xor
jg
pusha
pop
mov
das
mov
xor
push
mov
jmp
inc
cs
call
cwtl
into
mov
adc
dec
fdivs
hlt
leave
and
fidivrs
sub
ss
xor
in
int3
cltd
xor
sub
cmp
push
push
lcall
out
push
out
scas
dec
xlat
call
sub
jb
xchg
lock
jne
cmp
inc
ret
cmpsb
shlb
js
adc
xchg
mov
aam
push
jae
sub
push
xchg
and
ficomps
add
testb
inc
pop
push
add
addr16
fidivl
sti
clc
sti
jmp
mov
mov
fimuls
mov
mov
xor
xor
mov
or
pop
daa
hlt
test
push
mov
xchg
xchg
call
xlat
rcll
xchg
jl
cmp
aas
fbstp
repz
sbb
jb
mov
and
pop
sarb
mov
mov
push
imul
stos
imul
lea
pusha
push
shrl
rorl
sub
ljmp
mov
inc
or
cmc
inc
les
or
or
add
cmpsb
sahf
shl
rcrb
mov
mov
cmpl
in
fcmovnb
in
js
add
xchg
shl
or
adc
sub
in
lds
push
lret
adc
adc
push
adc
pop
in
jae
icebp
push
mov
push
bound
lea
mov
mulb
dec
test
jl
add
outsl
insl
int
push
mov
pop
jne
daa
add
sbb
int3
inc
xchg
adc
dec
pop
ficoml
cld
fidivl
jne
xchg
pop
adcb
hlt
or
ficoms
daa
popf
adc
inc
lcall
dec
push
into
add
sub
fidivrl
push
cmpsb
outsb
adc
lds
ljmp
fadd
repz
cmpsl
push
pop
hlt
mov
cmp
stc
add
cmp
shll
mov
cmc
outsb
scas
mov
cli
jae
clc
push
lods
inc
mov
cmpsb
fwait
cltd
push
mov
push
lret
mov
sbb
or
cmpsl
out
jbe
jno
cli
in
outsb
pop
jge
sub
nop
imul
int
dec
cmp
movsl
inc
xchg
jns
inc
pop
jb
leave
mov
xlat
xchg
and
ffreep
rclb
arpl
cmc
adc
adc
lret
mov
push
lods
xchg
hlt
jmp
ret
push
jns
fimuls
cmp
loopne
cmp
adc
in
or
cld
dec
int3
xchg
jle
ds
lds
or
inc
and
mov
out
gs
loopne
fistpll
std
test
adc
mov
mov
repz
popa
push
rolb
mov
std
inc
inc
call
shr
jg
mov
call
pop
pusha
clc
mov
mov
adc
cmpsl
jmp
dec
cs
xchg
scas
mov
clc
in
test
jl
mov
loope
hlt
lods
outsb
jns
movsl
xor
insb
cmp
cmp
mov
fwait
pop
test
lcall
cmpsb
xchg
dec
push
inc
sub
xchg
cmc
xchg
iretw
ljmp
enter
jle
loopne
push
and
shll
xchg
mov
xor
pop
test
xchg
jns
push
int
lcall
xlat
cwtl
jl
call
inc
inc
fwait
fwait
movsb
jo
xchg
adc
scas
dec
xorl
sub
cmp
inc
lret
sbb
lods
xchg
shll
lret
daa
mov
push
rcl
dec
cli
mov
or
int3
aas
pop
out
and
mov
and
inc
push
hlt
lods
ljmp
cmp
add
leave
and
mov
sbb
jbe
neg
out
mov
nop
mov
cmpsb
fdiv
mov
sub
sarl
in
mov
test
scas
test
dec
insb
inc
add
cmpsl
mov
test
data16
out
insl
push
mov
cmp
and
das
jnp
dec
lods
jo
push
jno
jno
lret
mov
and
mov
add
inc
aad
lods
sub
cmp
mov
iret
mov
ret
cmp
and
add
push
jae
push
ficompl
pop
jb
adc
movsl
add
adc
mov
or
or
pusha
xchg
or
push
push
pop
lret
push
pop
std
xlat
shl
imul
inc
insl
shlb
cmp
inc
imul
addr16
data16
mov
push
add
pop
sub
mov
dec
ffree
shrb
in
in
insb
or
lret
or
add
mov
imul
push
fldl
dec
mov
mov
leave
ret
sbb
sub
popa
cld
jge
dec
aam
push
stos
inc
lahf
mov
sub
mov
ret
das
adc
aad
popa
adc
inc
mov
fstpt
pop
xchg
jge
sbb
mov
mov
pop
ljmp
push
xchg
adc
adc
rorb
test
fstp
jle
movhps
femms
das
mov
or
sub
out
fs
jne
adc
jecxz
lahf
sbb
adc
fisubs
xchg
popw
inc
push
popfw
shlb
push
test
push
scas
push
mov
mov
add
sbb
mov
adc
sbb
ja
jge
divb
xchg
cs
inc
mov
add
sbb
cmp
outsb
testw
rolb
cmp
jae
bound
aaa
repz
repnz
jle
mov
test
in
out
movsb
push
cmp
adc
outsl
xlat
sub
push
test
imull
das
call
pop
xchg
sbb
mov
lcall
outsl
dec
push
mov
aam
mov
loope
popa
mov
stos
shl
ret
pop
adc
cmp
js
sub
testl
cmp
pop
mov
bound
sub
sub
pop
push
inc
jne
pop
jecxz
std
lret
fcomps
push
and
arpl
cmp
imul
cmp
and
ror
imul
jae
cwtl
outsb
pop
lahf
jo
sbb
xor
sub
lds
scas
call
xor
sahf
sub
pop
aad
and
mov
cmpsb
repz
cmp
leave
rol
push
sub
std
jmp
cmc
cmp
fimuls
or
negl
int
add
mov
in
movsb
lods
and
lcall
cmp
xchg
xchg
and
cmp
scas
repnz
push
stc
movsb
aam
push
shr
je
repnz
mov
mov
add
fdivrl
movsb
decl
mov
sahf
dec
out
je
jae
enter
ljmp
negb
out
jle
sahf
adc
das
lcallw
repz
or
fistpll
or
pop
outsl
pop
pop
pop
and
lret
jne
addr16
imul
pop
cmp
movsl
movb
adc
jno
push
dec
cmpsb
push
scas
xor
and
push
push
loop
mov
xchg
fwait
push
inc
or
outsb
sbb
test
loop
mov
sub
jle
mov
dec
dec
inc
push
into
fsubl
loop
mov
pop
cld
faddl
jns
lea
push
test
adc
xchg
push
in
ljmp
stos
cmp
adc
xchg
sbb
mov
inc
or
mov
inc
cli
movsb
xor
popa
mov
sti
lods
adc
pop
in
cmc
in
jg
fwait
push
inc
and
lea
xchg
push
rcrb
addb
hlt
dec
jbe
and
jge
mov
pop
daa
sarb
add
leave
lret
nop
push
ret
mov
scas
lea
dec
mov
inc
incb
adc
push
sub
dec
cli
in
data16
push
nop
les
dec
stos
cs
mov
push
cli
cli
rcr
js
out
or
inc
jge
jle
inc
in
cmpsb
lods
aaa
test
test
imul
push
xchg
sbb
xlat
adc
mov
mov
jo
jle
jp
or
cmp
push
xor
dec
addps
loope
xchg
mov
ret
movsl
jae
push
xor
inc
loop
lret
add
jno
or
fistpl
fs
cmc
xchg
sub
inc
cmp
inc
sbbl
inc
es
fmul
enter
pop
loop
xchg
xor
stos
add
cld
nop
ljmp
fbld
cmp
in
shr
cld
les
rolb
es
enter
lods
mov
jo
sahf
sbb
mov
jnp
sbb
sbb
flds
into
inc
into
out
into
sbb
adcl
adc
int3
inc
in
jmp
lret
outsl
cmc
in
mov
push
jne
jp
rcll
push
mov
hlt
cmp
les
fisttpl
pop
std
and
push
mov
push
imul
nop
sti
lret
jne
leave
test
loope
test
push
fimuls
pop
jle
jne
lret
pushw
adc
cs
cmp
scas
pop
lds
clc
clc
shlb
xchg
sub
movsl
pop
add
lcall
insl
cmc
test
sahf
push
cli
cmpsb
xor
mov
cli
mov
and
dec
jle
mov
loope
fsin
xchg
roll
or
mov
es
sbb
call
outsl
into
mov
dec
adc
mov
add
cs
jbe
mov
pop
lcall
test
push
mov
pushf
jae
int3
xchg
mov
aad
push
mov
dec
rolb
cs
mov
or
insl
pushf
jb
sbb
sbb
xchg
pop
mov
cmpsb
pop
and
xchg
or
lret
pop
aas
movsb
or
cmc
and
push
jo
pop
daa
je
lret
sti
xor
adc
jne
push
mov
popl
cli
pop
cmp
push
jae
sub
mov
cmp
insl
sub
pop
loope
lcall
dec
jb
call
paddb
test
and
cmp
jle
imul
das
out
push
in
test
and
push
lds
imul
lret
shrl
add
xor
out
add
mov
insb
test
arpl
test
lret
int3
sub
dec
sub
jle
lds
ret
mov
mov
in
jp
ret
in
mov
pop
xchg
push
sub
int3
adc
inc
cwtl
inc
nop
cmpl
pop
pushl
xchg
pop
mov
jl
jo
lods
orb
sub
pop
clc
xor
push
cmpb
shlb
add
xchg
inc
add
and
loopne
testl
mov
out
lahf
movsl
in
fnstsw
inc
pushf
dec
stos
jo
adc
pop
mov
adc
pop
cmp
sub
dec
mov
lds
sbb
fnstsw
pop
mov
jl
add
je
cmp
ret
sti
add
xor
inc
push
test
stos
cmp
fildl
mov
add
dec
mov
aas
rol
int3
es
sbb
test
mov
adcb
xchg
movsl
adc
jmp
sti
cmpsl
push
jl
and
push
jmp
ret
pop
leave
push
pop
movsl
pop
sbb
fldcw
fmuls
lods
jg
sti
add
sub
jns
dec
popf
push
movl
bswap
pop
mov
sbb
mov
cmp
jae
dec
xchg
pop
cmp
adc
add
inc
dec
pop
dec
xchg
mov
jb
fwait
push
or
mov
mov
fs
in
dec
pop
stos
push
and
dec
cmp
cld
into
cmp
add
xacquire
or
mov
add
dec
cmp
xchg
dec
into
push
mov
inc
xchg
push
jl
cmp
popa
adc
loop
sti
and
ds
ficoml
jns
jmp
push
or
pop
mov
and
es
mov
xchg
inc
adc
or
cmc
lds
jae
aad
sbb
jne
repz
cld
jge,pn
mov
or
add
jecxz
adcb
in
ss
aad
jmp
cmp
fnstsw
outsb
pop
inc
pop
inc
jle
pop
adc
pop
test
and
cmp
enter
or
popf
rcll
push
jecxz
mov
pop
cli
outsl
dec
add
and
in
push
dec
test
add
push
mov
adc
movsb
push
enter
jmp
or
and
cmp
leave
mov
sbb
mov
pop
mov
and
jl
push
out
inc
shlb
movsl
rcrl
push
lods
addl
xchg
mov
pusha
test
cld
pushf
jecxz
mov
or
adc
filds
negl
jle
cs
js
push
jp
arpl
cmp
lock
sbbb
mov
idivl
fidivl
mov
jmp
adc
aad
push
jmp
add
mov
sbb
push
inc
jle
cmp
mov
push
ret
ljmp
ror
outsb
aas
sub
add
jbe
mull
popaw
mov
out
fistpl
dec
xchg
sub
push
popa
in
insl
cmpsl
int3
les
sub
jge
adc
xchg
fs
mov
mov
fidivrl
mov
lods
call
xor
adc
loopne
mov
test
sbb
je
aaa
repnz
and
dec
add
inc
add
xor
inc
cwtl
adcl
in
jbe
out
jmp
add
and
stc
cli
in
arpl
nop
jae
ja
fsubl
scas
add
insl
inc
out
scas
imul
das
mov
push
insb
jns
xor
in
int
jecxz
pushf
cmp
pop
mov
call
jp
and
aad
cmp
in
mov
cmpsb
mov
data16
pusha
cld
adc
mov
lods
dec
mov
mov
jne
add
andl
stos
lods
aaa
sarb
fmull
insl
loopne
scas
add
mov
jns
push
mov
imul
movsb
push
shl
and
or
xchg
sub
lea
flds
movsb
gs
in
aam
ss
push
xorb
pushf
js
sub
movsl
insb
mov
sahf
or
in
lret
cltd
cmp
outsb
dec
pop
cmp
push
fld
int
inc
mov
xor
xchg
xor
sub
pop
cli
ret
adc
insl
xor
jmp
lods
push
pop
in
repz
loope
sarl
insb
cmp
fimuls
pop
push
push
out
fcomps
pop
jp
push
js
out
fsubrp
pop
adc
adc
pusha
mov
jmp
gs
push
es
xor
sbb
push
push
stos
mov
dec
mov
or
call
pop
jo
cmp
hlt
mov
inc
stc
aam
mov
mov
fisubrl
xchg
sub
mov
cld
inc
test
lods
sub
add
js
cwtl
arpl
cmpsb
lahf
lahf
js
add
iret
jmp
jle
jo
fidivl
inc
jl
test
mov
add
and
xchg
inc
pop
xor
add
cmp
sub
mov
popa
and
ret
xchg
jo
push
inc
mov
outsl
sub
xchg
xor
pop
inc
push
xor
cmp
xchg
icebp
mov
sub
cmc
adc
je
sub
ret
mov
decb
cmc
jbe
mov
gs
fidivrl
xchg
addr16
or
pop
or
fwait
or
movsl
outsb
dec
push
xchg
sub
sub
and
pop
shlb
and
or
mov
jle
scas
movsb
fdivp
xor
arpl
mov
mov
jp
mov
in
loopne
sub
add
out
insl
mov
dec
add
or
jl
pop
cltd
jbe
mov
bound
mov
setne
jge
stos
inc
dec
sbb
setae
ret
adc
int3
insb
negl
scas
cmp
out
jnp
ss
lcall
or
xlat
mov
and
xchg
cld
ljmp
pop
mov
sbb
movsb
rorl
out
mov
sub
xchg
dec
xor
inc
mov
push
xchg
and
out
mov
mov
mov
out
call
mov
push
push
xlat
mov
xor
aam
xchg
rcrl
add
pop
fidivrs
mov
lock
jle
inc
jo
xchg
shrb
je
mov
dec
add
scas
xchg
sub
test
mov
dec
xlat
test
mov
sahf
mov
repnz
lock
cli
out
out
cmpsb
mov
inc
into
in
or
push
jno
out
push
dec
aad
cmp
inc
adc
iret
daa
pusha
add
mov
push
sti
sub
xor
and
inc
xor
mov
shrb
inc
adc
out
dec
std
mov
pusha
ds
and
add
add
mov
push
sarb
test
mov
sub
jae
andl
clc
shll
cs
repz
das
jge
aas
jl
insl
sub
out
lret
inc
cmc
les
ret
out
inc
out
xchg
push
xchg
jle
sbb
fcom
imul
dec
fnsave
inc
jnp
outsb
dec
adc
ret
push
aaa
cld
mov
shlb
idivl
mov
cs
gs
in
std
or
and
sub
sub
mov
repz
dec
test
mov
sbb
mov
add
dec
jne
push
js
bound
bound
lds
cs
mov
xchg
cs
lahf
jae
mov
jae
enter
test
add
stos
pop
es
jnp
out
or
cmp
rcrl
out
jl
mov
in
push
mov
cmp
mov
and
es
stos
sbb
popf
push
leave
push
add
scas
and
adc
sbb
jge
lret
je
loope
pop
fmuls
jge
aaa
or
sub
sub
in
je
xor
out
fwait
push
or
ja
push
jp
jb
add
mov
cli
or
roll
lret
and
push
hlt
and
out
cmp
arpl
test
dec
push
int
scas
out
stos
mov
push
hlt
aaa
lock
add
stc
cmp
sti
mov
das
push
out
sbb
rcrl
out
or
jnp
xlat
adc
adc
repnz
mov
lcall
ret
inc
adc
pop
sub
jg
pop
xchg
repnz
pop
movsb
sbb
xchg
push
inc
add
push
gs
jg
xlat
push
add
add
mov
push
nop
mov
dec
xor
loopne
repz
add
in
mov
cmp
jle
fistpl
pop
call
mov
shrb
insl
mov
fcomi
mov
jge
dec
pop
mov
mov
daa
fsubr
adc
or
sbb
notb
iret
lcall
or
lcall
mov
adc
ret
mov
adc
xchg
cli
xchg
into
add
cmp
mov
pop
cmp
or
fwait
cwtl
fucomip
xchg
adc
sbb
dec
sub
mov
cmc
sbbb
pop
std
cmp
dec
repz
aas
imul
push
add
test
filds
into
mov
push
lods
aas
fcmove
or
mov
mov
cmp
and
out
inc
hlt
or
push
push
mov
push
test
xchg
sbb
test
jmp
jbe
in
xchg
nop
aam
cmp
cmc
xor
cs
cld
idiv
push
int
ret
xchg
jb
fidivrl
push
out
sbb
adc
cli
das
scas
lret
dec
mov
loopne
cmp
ret
add
xor
or
je
pop
add
fdivr
push
out
aaa
xchg
pop
cs
mov
out
mov
and
int3
jge
mov
or
jne
iret
mov
sarl
call
scas
push
push
xchg
mov
iret
mov
call
daa
pusha
test
or
cld
lcall
or
pop
call
pop
add
js
adc
cld
daa
inc
nop
sbb
xor
bound
jo
jle
mov
clc
aam
or
jns
jns
add
jnp
loop
mov
cli
idivl
sarl
cltd
jmp
int
setp
in
sbb
xor
fbstp
xlat
dec
std
je
call
mov
jne
xchg
out
and
enter
dec
out
mov
imul
clc
xchg
push
pop
pop
sub
mov
xor
mov
js
das
pushf
scas
in
je
and
scas
or
adc
fstp
push
adc
sub
mov
lcall
add
rorb
insb
les
mov
push
sub
jg
mov
in
popf
fucom
bnd
outsl
mov
out
lret
mov
sbb
jb
pop
xchg
sbb
es
mov
push
mov
flds
xchg
cmpl
out
mov
sbbb
mov
out
int
aaa
insb
in
jns
mov
pop
mov
dec
sahf
sti
mov
stos
xchg
jecxz
sub
rcrb
out
hlt
xchg
and
cmp
sbb
xor
xorb
je
aad
shrl
jmp
add
push
outsb
cltd
xor
adc
add
jo
or
push
pop
jae
pop
fistl
and
xchg
push
scas
das
in
aaa
cwtl
xor
mov
inc
jge
aaa
in
add
insb
es
movsb
imul
movsl
push
or
sarb
jb
push
and
xchg
inc
mov
push
outsb
inc
mov
stc
mov
fcomp
mov
and
sbb
test
aaa
or
stc
mov
fldl
sub
call
sbb
push
mov
addr16
imul
jmp
roll
jmp
pop
hlt
fildl
lahf
out
and
inc
icebp
lret
push
out
sbb
ret
adc
in
jbe
push
ficomps
sbb
xchg
mov
lock
sbbl
fdivr
add
push
outsb
add
or
aam
xchg
loope
or
ds
mov
lods
mov
mov
add
out
mov
adc
repz
hlt
mov
sti
push
fisubrl
mov
fcmove
lods
and
test
test
lods
test
mov
das
fs
imulb
mov
jl
xchg
shl
cmp
jns
mov
fadd
inc
fwait
test
pop
cmp
add
ljmp
sbb
and
and
stc
std
movsb
fdivs
iret
jl
icebp
mov
xchg
or
pusha
sbb
ret
pop
or
pop
cmp
popf
icebp
call
jo
fmuls
mov
das
enter
sbb
xor
dec
ret
ljmp
pop
aad
push
in
clc
es
test
nop
cs
lcall
mov
outsl
sub
pop
outsb
movsl
test
jmp
xchg
dec
das
pushf
and
sub
pop
pop
repz
or
push
mov
or
loopne
xor
int
xor
aaa
daa
aam
pushf
cmc
aaa
iret
and
lods
addr16
cwtl
repz
jl
in
jmp
in
outsb
mov
ja
or
les
lods
mov
jle
mov
js
repz
aam
push
fstpt
dec
lds
mov
xor
imul
sub
add
out
popa
adc
je
fildl
and
mov
cmp
pop
movsb
push
pop
test
and
pop
lcall
mov
cmp
mov
repnz
cs
fwait
adcl
loopne
stos
popf
imul
sbb
mov
cld
push
cmc
mov
scas
fisubrl
mov
xchg
xor
test
push
inc
dec
jne
xor
mov
inc
mov
jnp
cld
rcl
dec
and
pop
push
lret
fsubrs
adc
or
pushf
notb
enter
rcll
inc
jp
mov
js
hlt
roll
xor
int
jb,pt
xor
pop
pusha
sub
inc
sub
vandnps
add
cmpsl
fimull
xlat
shr
jmp
gs
test
je
xchg
out
repz
lock
push
mov
xchg
dec
jno
or
add
or
sbb
xchg
jnp
mov
xor
fnsave
mov
enter
mov
sbb
inc
leave
cmp
aaa
sub
sahf
inc
cwtl
ffreep
pop
lret
mov
mov
xchg
jmp
xchg
int3
dec
nop
idivb
lcall
int3
ja
inc
push
push
jbe
stc
sub
pop
jmp
shl
loop
jl
jecxz
adc
stc
movsl
pop
mov
lds
clc
stos
pushf
pop
insb
insb
pop
add
dec
out
xchg
scas
dec
jo
scas
lods
xchg
and
cli
inc
fstpl
mov
and
or
mov
jns
mov
xor
sbb
or
cltd
fld
mov
aaa
test
jbe
xor
mov
lret
lock
punpckldq
jge
xor
aaa
and
add
mov
fcmovb
pushf
orb
in
xchg
mov
hlt
stos
iret
sbb
lret
cmp
gs
loop
data16
push
call
pop
sub
btc
jae
aaa
adc
inc
jmp
dec
sbb
lea
fsubr
lret
insl
sub
push
cli
adcb
or
xchg
sbb
loope
outsb
adc
inc
sbb
sub
rcr
lock
dec
or
xchg
jnp
mov
dec
leave
shrb
call
arpl
sbb
mov
and
push
xlat
sub
insb
mull
lock
xor
mov
not
jnp
test
mov
clc
fldenv
inc
inc
test
sub
aad
pop
insl
mov
sahf
mov
push
stos
sub
pop
or
test
lods
cld
and
andb
sub
gs
mov
in
incb
lods
loop
jmp
sub
fcmovnb
ret
cmp
sti
and
xchg
mov
pop
out
pop
repnz
arpl
out
jb
jne
iret
ret
testl
das
cmc
adc
pop
sbb
lret
clc
mov
lods
mov
pop
repz
pusha
cmp
lcall
ljmp
xchg
xchg
rcll
int3
xor
cs
hlt
xor
lahf
mov
popa
rolb
outsl
roll
adc
xor
hlt
adc
int3
pop
mov
cmp
or
ret
xchg
cld
mov
les
xor
addr16
iret
dec
nop
inc
inc
jo
jns
push
rclb
je
ffreep
mov
daa
fst
inc
leave
and
add
stos
mov
adc
in
outsb
pop
imul
mov
adc
leave
pushf
in
ljmp
or
mov
daa
mov
lods
push
pop
pop
mov
jno
movsl
mov
or
pop
sti
push
push
test
lods
fiaddl
ja
push
or
adc
aad
sub
clc
mov
adc
pop
jae
gs
shlb
sbb
push
cli
sbb
jbe
and
and
cld
cmp
imul
cmp
rcll
xchg
fimull
loope
iret
popa
or
mov
xchg
mov
xchg
xchg
pop
push
aaa
jb
inc
rclb
add
add
insl
and
mov
or
lea
daa
jbe
test
pushf
sbb
ds
push
repz
xchg
orb
mov
jbe
ret
jo
xchg
or
daa
sub
mov
test
cmp
dec
stos
add
add
jge
push
loop
push
inc
inc
fcompl
cli
sahf
mov
les
mov
into
cli
sbb
sub
jns
push
mov
stos
call
rcl
rcrl
push
arpl
cmp
addl
lea
fbstp
nop
test
cmc
test
sbb
add
mov
xchg
pop
out
adc
imul
lea
scas
push
rorb
jb
enter
push
cmc
push
cld
inc
xchg
insb
cmp
sbb
jo
pop
call
sbbb
pop
in
scas
andl
pop
pop
mov
mov
sbb
jb
cmpsb
jp
addb
sbb
sar
or
ja
popl
xchg
fsubl
out
dec
dec
pusha
lock
out
lret
push
lcall
cwtl
xor
and
addb
jle
xchg
pop
lock
push
sbb
repnz
cs
mov
jo
xchg
jne
aas
xchg
nop
icebp
inc
fldcw
or
int
jl
fwait
cs
out
pop
mov
mov
enter
jg
outsb
loope
sub
je
cltd
jns
mov
sbb
cwtl
je
out
pop
add
arpl
push
adc
and
sti
or
jns
imulb
push
ret
testb
jl
or
nop
xchg
fstpt
movsb
mov
pop
test
xchg
dec
insb
cmp
cmpsl
ss
sub
dec
jns
stc
imulb
pop
out
insl
dec
outsb
mov
hlt
mov
test
call
es
xchg
scas
xchg
leave
mov
aad
inc
mov
cmp
shll
cmc
adc
xor
xor
dec
cmp
or
popf
jns
inc
mov
xchg
jne
pop
add
in
mov
inc
fcompl
mov
mov
xchg
dec
xchg
sti
xchg
shr
adc
inc
sub
cmc
sbb
add
in
js
sbb
dec
fs
push
test
rep
jge
loope
test
outsl
idivb
cmpsb
pop
daa
clc
or
mov
jecxz
mov
outsl
mov
scas
xor
loop
cwtl
push
lcall
cmp
inc
and
push
inc
mov
jp
imul
shll
enter
xchg
leave
jno
outsl
push
outsl
out
int
inc
fldcw
sub
push
bound
ds
push
mov
sbb
mov
aas
cmp
jg
xchg
insl
push
and
push
inc
insb
gs
jne
pop
mov
add
lods
ss
repz
pop
mov
leave
mov
icebp
leave
xchg
push
mov
movb
mov
lcall
jbe
bound
cmp
sarl
test
mov
rep
xchg
sbb
lods
adc
repz
xchg
rcrl
add
push
lock
push
mov
fdivr
dec
in
push
mov
dec
jne
lods
and
ret
out
cld
inc
jp
orb
aad
inc
or
cwtl
jmp
imulb
les
popf
fwait
mov
rol
and
inc
dec
repz
mov
sub
jmp
adc
jns
mov
mov
lods
jge
divb
sahf
cmc
ror
clc
push
lret
addr16
sub
negl
into
dec
sahf
push
js
sub
or
mov
test
xor
sub
mov
test
push
sub
jnp
mov
lret
lret
das
inc
mov
cmp
in
dec
js
xlat
mov
mov
iret
pusha
aaa
jecxz
xor
clc
in
enter
pusha
mov
push
mov
ss
scas
push
and
dec
jno
fwait
pop
jg
pushf
mov
fwait
jne
xor
lock
sbb
sahf
xor
inc
addb
push
je
push
xor
shl
xor
bound
cmp
push
jle
xchg
aad
sbb
jecxz
push
push
aad
fwait
mov
jnp
adc
add
xor
cwtl
rolb
cmpsl
xchg
popf
insb
cmpsb
cmp
fldenv
stc
fstl
mov
xchg
mov
dec
cmp
sbb
inc
jmp
adc
mov
outsl
int3
sbb
xor
ds
das
dec
out
pop
jb
xor
test
jg
mov
dec
inc
ljmp
mov
xor
lret
push
or
pusha
mov
xor
xchg
sbb
mov
inc
fdiv
and
xchg
mov
pushl
das
xchg
icebp
loope
das
or
ret
cmp
outsl
repnz
jno
xchg
fnsave
mov
mov
js
adc
sub
outsl
ds
pop
xchg
int3
fmuls
sti
movsl
lea
push
sub
in
jo
xchg
xor
shrl
rcll
add
cld
pop
dec
loopne,pn
gs
dec
jmp
jl
mov
roll
and
xor
jne
or
je
xchg
cltd
mov
in
ss
mov
lcall
cmpsl
insb
mov
loop
mov
or
in
bound
mov
lea
cmpxchg
stc
xchg
mov
aaa
sub
xor
jg
dec
push
xchg
loop
or
or
outsl
mov
daa
aas
lods
jo
ja
ja
and
std
inc
inc
jge
or
adc
mov
inc
int
leave
lea
sbb
mov
or
dec
pop
or
xor
jns
inc
jp
nop
lea
scas
in
out
repz
dec
dec
pop
adc
pusha
adc
push
lea
xor
xchg
inc
loope
sbb
jmp
test
fnstsw
mov
mov
popf
insl
int3
mov
into
inc
sbb
ret
daa
inc
pop
xchg
aaa
cmpsb
adc
push
mov
mov
or
nopl
push
mov
push
lcall
sbbl
mov
xcrypt-ofb
cmpsl
sub
xchg
imul
sbb
test
in
push
pop
push
das
outsb
pop
mov
popa
bound
inc
aad
scas
sub
out
sbb
jbe
xchg
idivl
mov
lcall
ds
or
lods
cmp
sbb
inc
pop
inc
mov
cwtl
cmp
insb
pop
addl
dec
neg
lret
inc
mull
jle
mov
arpl
and
cmp
mov
out
mov
cli
and
in
mov
mov
mov
mov
xchg
mov
jb
stc
push
push
and
enter
test
pop
add
pop
shr
jmp
sti
pop
jecxz
ds
int
push
jbe
jge
xor
pop
or
push
aaa
pop
cmp
insb
ret
sbb
mov
mov
mov
cmpsb
arpl
aaa
or
ja
sub
xor
xlat
into
popf
cmpsb
pusha
mov
aam
stc
sbb
sbb
nopl
xor
sub
and
mov
pop
out
or
popa
dec
jns
lret
shll
xchg
lahf
imul
adc
lds
in
sub
push
sub
arpl
sub
enter
fimuls
and
sub
test
mov
rcr
jg
xor
gs
mov
sbb
into
xchg
xchg
and
pop
xchg
js
and
nop
pop
out
scas
dec
mov
pop
sub
cld
mov
mov
pop
jno
push
les
inc
pop
movsl
in
stos
pop
ljmp
data16
push
ret
in
dec
addb
pop
xchg
add
inc
jno
int
imul
mov
repnz
sbb
fadd
popa
mov
push
ret
pop
pop
movsb
outsb
mov
testb
cmpsb
rcrb
mov
data16
mov
mov
inc
sbb
xchg
or
fcmovne
xchg
test
sbb
rcrb
xchg
cltd
sbb
push
dec
addr16
sub
fidivrl
pop
xorb
leave
dec
cltd
addr16
mov
add
popf
push
scas
pop
shl
cli
addl
pop
loope
and
xchg
ret
mov
cmpsl
inc
scas
shll
test
jecxz
add
cld
jbe
jecxz,pt
movsl
cltd
add
dec
xchg
aaa
mov
add
mov
cmp
mov
xor
push
sti
mov
inc
mov
shlb
les
rcrl
mov
inc
or
pop
inc
imul
roll
out
adc
fsubrl
gs
leave
jae
outsb
das
jns
das
fs
adc
cmpsl
xchg
sbb
mov
xchg
mov
adc
mov
xor
fstpl
adc
add
imul
divb
movsb
mov
cmpsl
loope
fxch
cmp
adc
dec
sahf
stos
lahf
mov
jne
cmp
or
jg
mov
xchg
fdivrl
or
int
into
outsb
xor
fs
mov
mov
xlat
push
andb
inc
iret
es
sbb
cld
inc
mov
loope
mov
lcall
xchg
mov
popfw
adc
pushf
or
pusha
into
js
add
add
clc
rorb
aaa
outsl
mov
scas
inc
test
sub
inc
xor
pop
scas
mov
adc
or
lock
dec
dec
mov
mov
out
loop
rcrl
fisubl
pop
push
or
js
pop
mov
or
in
dec
iret
cld
jb
aas
push
negb
xchg
mov
iret
mov
sub
mov
xchg
rolb
mov
lock
and
imul
add
stos
test
cmp
mov
gs
idivl
pop
sub
push
dec
adc
pop
mov
sbb
push
sbb
nop
mov
mov
pushl
cltd
shrb
add
leave
lea
mov
fdivr
cmpsl
mov
push
pop
add
dec
mov
arpl
inc
cmp
scas
xchg
dec
lods
shrb
js
mov
and
int3
addr16
mov
stos
pop
or
enter
stos
push
lea
xor
hlt
loope
lahf
xor
es
mov
aad
mov
cmp
xor
mov
adc
mov
cmc
outsl
and
scas
call
inc
stos
pop
insl
das
ja
cmp
mov
daa
and
orb
mov
add
and
lcall
loopne
fbstp
sub
call
and
mov
iret
and
add
jecxz
sub
andl
das
cmpb
xor
push
in
mov
nop
shll
inc
mov
int3
testb
daa
pop
clc
cmc
jo
sub
add
sbb
cltd
incl
pop
ret
int3
fs
imull
inc
pop
test
popf
cmp
lret
mov
or
jl
mov
push
ret
cmc
int3
xor
sub
movb
jo
dec
dec
test
rcll
pop
jns
inc
lods
stos
sbb
pushf
jne
stos
das
cmpsl
jecxz
xor
jmp
xlat
cmp
scas
adc
repz
mov
jbe
inc
xchg
in
scas
adc
movsl
faddl
and
push
inc
or
out
mov
daa
or
aad
stos
cmpsl
jmp
lcall
cmp
jp
or
jnp
sub
mov
into
imul
xor
push
test
in
add
je
lock
inc
push
pop
shlb
mov
xor
out
enter
jl
mov
sub
cltd
or
rcll
jle
pop
xchg
sbb
adc
sbb
sbb
jns
cmp
mov
xor
and
pop
jns
and
mov
xchg
data16
in
jmp
popf
mov
cs
fmuls
push
arpl
push
negb
pop
lcall
lea
mov
pop
mov
por
int3
fs
loopne
cli
std
mov
push
mov
imul
and
ret
inc
dec
push
fidivs
add
adc
aad
push
les
paddb
fdivr
rolb
aas
out
lock
pop
call
addr16
pop
ss
lods
pop
nop
rcl
ds
pop
cmc
or
into
and
es
scas
sbb
adcl
xor
mov
cmp
or
mov
daa
cmp
in
aaa
into
js
mov
repnz
fwait
push
cmpsb
pushf
cmp
xchg
movsb
cmp
xlat
sbb
cmp
aaa
push
leave
mov
jae
cli
mov
fisttpll
es
ret
fsubp
cmpsb
lahf
das
cmp
stc
out
scas
xlat
push
rclb
stc
pop
outsl
xor
adc
inc
bound
xor
cmp
inc
add
sub
xor
add
jp
ja
adc
ret
aaa
push
aaa
arpl
cld
js
and
mov
sbb
xor
scas
push
dec
cmp
push
scas
mov
adc
dec
xor
and
jmp
sbb
cs
icebp
mov
js
clc
xor
xor
cmp
or
sar
or
jbe
roll
or
sub
movsl
xchg
xchg
pop
add
push
in
push
insb
fldt
and
mov
sbb
icebp
cmp
imul
aas
test
mov
outsb
imul
adc
cmpb
pop
pop
lock
sbbl
push
lahf
and
rolb
test
jmp
xchg
mov
addr16
and
cmp
outsb
jne
xchg
mov
xor
data16
jecxz
sub
ret
pusha
push
sub
in
mov
mov
mov
sub
and
movsl
sbb
loopne
xor
xchg
jecxz
jge
push
xor
shrl
into
add
fs
dec
mov
ror
mov
in
sub
into
imul
cld
adc
shrb
inc
test
and
cmpsl
in
sbb
movntq
out
mov
or
sbb
insl
hlt
iret
pop
jo
cli
test
repz
ret
movsb
mov
add
mov
cwtl
inc
outsb
in
ss
inc
and
lods
lods
jp
pop
sbb
cwtl
add
push
or
outsb
lock
xor
addb
and
out
mov
fidivrl
push
lret
add
aaa
scas
test
les
int
cltd
sbb
cmp
daa
popa
stc
and
or
movb
xlat
jno
xor
xor
push
adc
fldt
pop
pop
and
cmp
push
push
or
xchg
mov
and
push
sub
mov
fs
sahf
jge
test
call
in
sub
sbb
mov
arpl
int
mov
rol
dec
jb
sub
mov
lahf
add
aam
push
push
cmp
inc
mov
adc
movsl
fsub
das
rolb
es
push
cmc
cmp
scas
sbb
aam
add
lock
inc
xchg
xchg
cwtl
out
shlw
pop
in
iret
lea
mov
pusha
mov
push
aad
dec
cld
jbe
add
pusha
fiaddl
cmp
adc
xchg
cmp
je
adcl
xchg
fldcw
inc
inc
adc
inc
jge
test
sarb
out
movsl
cltd
mov
pop
sub
mov
scas
dec
or
repnz
lahf
and
rcrb
orb
fldl
push
push
stos
adc
pop
push
sbb
mov
imulb
icebp
or
or
daa
or
in
movsb
pop
popl
cwtl
cwtl
ret
bound
pop
cld
decb
fimull
sbb
cli
sub
outsl
sbb
xchg
fwait
jmp
cmc
insl
sub
mov
hlt
mov
sbb
xchg
pop
push
negl
mov
insl
ficompl
insl
shr
or
dec
ret
lods
mov
gs
scas
xor
pop
adc
in
sti
mov
dec
adc
mov
inc
pushf
jnp,pt
adc
mov
aam
mov
add
fs
fldcw
push
cmp
rorb
xchg
loop
ss
clc
dec
sbb
pop
xchg
outsb
movsb
adc
mov
push
add
adc
cli
pusha
pop
adc
sub
int3
inc
ss
pop
cmc
mov
mov
mov
sub
cwtl
addl
lods
sahf
arpl
sbb
xchg
ds
add
mov
and
fucomp
lret
and
fwait
and
push
xor
or
jns
xor
adc
inc
insb
sub
adc
pop
jg
inc
or
jmp
scas
fbstp
mov
push
ja
push
xchg
mov
in
mov
adc
push
testl
sbb
lods
fsubp
pop
cli
mov
mov
movhps
xchg
in
fadds
int
inc
sub
movsl
cli
inc
xorb
mov
add
mov
std
inc
loopne
push
sub
roll
js
mov
push
xor
adc
nop
aaa
or
push
sub
mov
dec
sub
jle
or
insl
nop
jle
add
mov
xor
cmp
orl
dec
std
adc
ss
push
jmp
adc
fimull
popl
in
in
out
xor
decl
jne
push
in
jb
push
imul
lods
inc
cmp
xor
xchg
mov
pop
xor
mov
add
sbb
test
sbb
sub
cmpb
xor
inc
xchg
pop
rcrb
cmp
cmp
mov
dec
ret
xchg
mov
mov
ds
lret
les
push
subb
push
pop
fildll
clc
mov
cmpsb
sahf
cmp
sub
js
pop
mov
push
ret
cmpl
pushl
pop
cmpsl
and
mov
js
ret
test
xchg
pushf
push
orb
xor
xlat
in
add
add
fnstcw
lret
inc
push
fwait
lcall
mov
inc
xor
xor
adc
jb
add
cmpb
das
cmpsb
sub
inc
xor
push
sbb
dec
inc
xchg
xorl
cld
in
movsl
xlat
pop
lods
outsb
inc
out
sub
cmp
int
jge
adc
add
jb
sub
shll
inc
jmp
jp
pop
cltd
mov
fs
dec
jmp
mov
fimull
jae
inc
std
lret
inc
hlt
js
or
mov
repnz
mov
dec
mov
loopne
stc
ud2
std
in
pop
lock
ret
filds
mov
popa
outsl
xchg
outsb
jo
xchg
pop
xlat
jbe
jmp
std
xlat
sahf
push
add
xchg
cmpsb
fidivs
sahf
jge
jmp
cltd
in
xchg
xor
push
pop
call
mov
cli
mov
loopne
int3
int
and
cmp
in
notb
in
sahf
dec
push
fmuls
pop
adc
dec
mov
shrb
dec
scas
lret
push
shlb
mov
fcoml
int3
adc
jbe
push
mov
fs
daa
sarb
inc
jmp
adc
jae
fdiv
sbb
js
mov
and
sub
xor
sub
and
mov
int3
cmp
outsb
ds
push
jae
push
pop
pop
mov
mov
cwtl
insl
fwait
sub
into
aam
add
cli
movsb
imul
scas
loope
mov
push
in
or
sbb
arpl
lea
dec
aaa
in
std
idivb
in
sub
shll
mov
adc
arpl
add
sub
jo
fwait
das
mov
add
xchg
lods
rorl
out
jae
pop
xor
sbb
test
ljmp
jl
out
mov
test
imul
xor
cmp
fucomip
mov
jns
insl
mov
daa
arpl
mov
jmp
cmp
and
cmp
sub
mov
nop
aam
push
out
pop
inc
jne
iret
and
sub
lods
ljmp
inc
outsb
cltd
dec
out
dec
orl
and
fs
mov
jle
xor
sub
inc
dec
adc
and
sub
pushf
lret
das
xchg
xchg
ret
js
popa
negl
xchg
fwait
xchg
int3
pop
push
stc
sub
ficompl
sub
or
xor
adc
nop
pop
gs
jae
in
push
xorb
repnz
mov
sbb
nop
sbb
pop
lods
scas
or
leave
mull
inc
cli
push
jg
hlt
pop
sub
or
mov
and
dec
mov
pop
dec
jae
pusha
mov
push
in
or
mov
dec
pop
in
repnz
clc
fmulp
lods
mov
pop
dec
cmp
xchg
call
stos
call
fnstsw
add
fdivp
lahf
dec
gs
mov
cltd
daa
adc
rcrb
adc
enter
fwait
nop
sbb
xlat
pop
mov
inc
call
stos
pop
sbb
das
lods
pop
xor
cwtl
and
inc
mov
mov
loop
push
fbld
jmp
outsl
cmp
adc
xchg
orl
addr16
mov
mov
jno
sub
and
push
or
mov
dec
aaa
cmpsb
lds
mov
popf
out
inc
push
xchg
sub
xorl
mov
repz
pop
mov
xorb
imul
aam
sub
in
hlt
ja
sarb
cmc
lods
js
idivb
imul
daa
add
mov
xchg
cmp
data16
ds
mov
mov
xchg
call
clc
into
shr
push
cmpsl
xchg
jne
stc
loopne
push
cmp
lahf
lcall
pop
gs
inc
cmpsb
in
xchg
cmpsl
pop
insb
jmp
jnp
push
sub
xchg
divl
adc
jo
aas
fnsave
cmp
ret
mov
or
das
gs
add
fistpll
stos
pop
cmp
pushw
add
roll
xor
mov
inc
mov
xchg
add
aaa
adc
andl
cmp
int
ficompl
push
cmp
gs
aaa
adc
inc
adc
pop
jnp
lock
lahf
dec
out
cltd
push
pop
out
ror
sbb
repz
fucomp
mov
ficoml
jbe
adc
mov
xchg
out
call
flds
movsl
jg
mov
pop
mov
fsubr
pop
sub
aad
nop
fildl
inc
push
stc
ficompl
and
dec
xchg
insl
dec
xchg
dec
mov
and
jmp
sbb
jae
adc
add
lcall
imul
xchg
jecxz
push
cmp
sahf
adc
add
adc
int
int
xchg
mov
pop
inc
outsl
mov
lea
lock
xchg
fs
dec
int3
jne
data16
adc
sub
push
push
dec
xchg
push
mov
cmpsb
repz
jp
lds
repz
mov
lea
cltd
mov
test
push
and
leave
stos
and
inc
test
out
xchg
fldcw
popf
ficoml
pop
xchg
add
push
insb
gs
adc
push
cmc
adc
fimull
jl
pop
rcrl
sbb
imul
xor
pop
iret
addr16
pop
pusha
sti
fdivrs
mov
and
and
and
sbb
and
sbb
xchg
add
cmp
sbb
xchg
nop
inc
jae
ret
stc
addb
mov
in
into
pop
xor
insb
int3
add
jnp
xlat
outsb
pop
or
inc
adc
mov
xor
mov
sahf
sub
ds
mov
leave
int3
out
jl
shr
cmp
xor
dec
pop
mov
jne
orb
icebp
fsubs
repz
xor
adc
aas
inc
xchg
xorb
or
roll
jne
sbb
pop
ja
push
mov
pushf
lea
rol
mov
subl
and
mov
xlat
stc
cmp
nop
mov
sahf
push
sub
push
cmp
push
ret
dec
hlt
push
mov
cmp
add
pushf
mov
pop
int3
test
fistl
xchg
sub
sbb
add
and
xchg
xchg
jno
incb
or
mov
xorl
xchg
mov
jae
pusha
sub
mov
outsl
pop
sbb
notb
pop
ljmp
jg
mov
out
ret
push
pop
pop
jge
popf
loopne
mov
daa
out
movsb
shlb
jecxz
adc
js
mov
aas
push
arpl
cltd
mov
sti
into
push
loop
add
dec
pop
negl
push
mov
or
mov
mov
sbb
push
fs
sbb
adc
pop
adc
daa
dec
dec
pop
addr16
sti
dec
call
fwait
adc
jno
mov
test
sub
mov
dec
addb
mov
cmp
xor
mulb
pop
mov
inc
cmp
xchg
add
mov
adc
xchg
adc
adc
aas
mov
or
rcl
push
test
mov
loop
mov
adc
dec
gs
add
pop
outsb
jge
gs
or
movsb
outsb
into
xlat
cmp
sub
jge
or
adc
jnp
pop
mov
clc
mov
fsubl
cltd
adc
stos
scas
fcoml
ds
pop
not
test
insb
pop
fdivrs
mov
push
enter
xor
adc
cmp
sub
mov
js
pop
mov
xchg
dec
subb
push
rorb
pusha
mov
mov
sub
push
outsb
ret
or
cmp
pop
inc
dec
cli
fwait
or
jg
hlt
mov
das
sahf
jmp
lods
sbb
lds
loope
push
add
lahf
xor
sahf
dec
lds
dec
xchg
xchg
mov
sbb
add
rcrb
movsl
int
push
stos
dec
lcall
arpl
jb
clc
pop
mov
out
stc
push
add
push
ret
fmuls
fidivl
in
out
push
fucomi
and
mov
andb
mov
jp
imul
mov
int3
pop
enter
cmpsl
leave
sub
movl
ror
icebp
or
outsb
xchg
hlt
popf
out
or
mov
push
jp
jae
jo
mov
pop
jl
fsubrl
mov
cmp
jmp
stos
sbb
jecxz
xor
call
mov
insb
jp
sbb
or
stc
push
push
lret
cmp
lret
xorl
insb
popf
cmpsb
push
push
and
jg
sub
pop
arpl
lods
dec
pusha
das
cmp
or
jo
stc
rcl
fwait
lock
out
popf
and
mov
mov
test
mov
or
xchg
andl
ds
adc
dec
sub
fsubs
add
jae
addl
ds
stos
xlat
fdiv
or
fcmovnbe
rcr
test
xchg
fisttpl
ret
clc
dec
addl
push
dec
faddl
and
dec
push
lahf
jno
jbe
pop
flds
push
nop
sub
minps
dec
push
mov
std
imul
or
jne
imulb
adc
push
je
jp
inc
lret
jp
stos
lods
xchg
adc
mov
xchg
mov
ret
jecxz
mov
sub
jb
adc
sub
cmp
cmpsl
sbb
adc
unpckhps
ret
inc
pop
or
cltd
mov
mov
mov
les
test
mov
mov
jp
outsb
sbb
cltd
sub
xor
int
mov
outsb
jnp
mov
dec
cmp
and
push
mov
sbb
into
add
mov
das
lods
daa
jo
jge
sub
adc
cwtl
pop
sbb
pushf
add
push
test
pop
in
ret
sahf
aad
cmp
add
mov
cld
pop
loopne
jbe
dec
scas
loop
call
sbb
in
xchg
in
xor
pop
sub
mov
dec
mov
adc
mov
jno
gs
push
and
pop
mov
popa
movsl
jnp
sti
or
jmp
call
fidivrs
jae
adc
mov
lcall
adcl
cmp
pop
bound
cmp
xchg
ljmp
xor
dec
or
adc
inc
mov
cmpl
dec
jae
jno
mov
cmpsb
or
inc
lea
fimuls
push
addr16
hlt
js
xlat
push
shr
mov
cld
into
push
sbb
add
sub
insb
dec
subb
mov
pop
out
xor
adcb
mov
test
rorb
xchg
test
push
orl
add
pop
jo
addr16
inc
mov
insb
pop
mov
arpl
imul
sbb
and
and
roll
sub
jo
lods
mov
pop
pop
decl
and
pop
inc
out
ror
mov
adc
in
dec
stos
orb
xchg
sub
subl
lds
roll
stos
push
insl
sbb
xchg
sbb
ss
pushf
push
lock
push
stos
jmp
mov
insb
pop
xor
inc
sbb
enter
cmp
push
cmp
fists
test
jp
lods
sub
loope
gs
mov
sub
cmp
fcoms
cltd
test
lock
jle
push
mov
sbb
pop
push
push
or
lds
sbb
or
subl
repnz
scas
cmpsb
jbe
sbb
scas
testb
cmc
les
jp
notb
aam
mov
loope
mov
sahf
pusha
call
into
lcall
call
clc
imulb
js
sbb
addr16
and
push
icebp
repnz
inc
xor
and
dec
nop
andb
ja
hlt
das
add
adcl
xchg
dec
pop
dec
nop
xchg
add
imul
cs
bound
mov
ja
inc
rorl
or
inc
es
sarl
call
mov
jno
jle
xor
cwtl
movsl
out
cmp
jno
sbb
or
test
jbe
mov
sahf
or
sbb
enter
pop
inc
out
in
mov
pop
in
int
pop
mov
arpl
pop
int3
xchg
popa
insl
pushf
jbe,pn
movsb
push
adc
and
mov
mov
or
repnz
sarl
pushf
aas
fcmovu
outsb
ljmp
pop
scas
cmp
out
test
lods
push
push
pop
hlt
and
in
fwait
inc
xchg
in
inc
ret
cmp
adc
lods
cmpsb
ret
bound
aas
add
nop
and
lahf
jp
jmp
push
inc
iret
xchg
jl
pop
outsl
xchg
jg
push
mov
call
outsb
gs
shlb
int
cmp
dec
adc
jp
mov
out
pop
mov
xchg
iret
mov
lods
add
les
pop
jecxz
jecxz
pusha
pusha
mov
jne
mov
xor
adc
pop
test
adc
mov
xor
cmp
mov
test
fldl
adc
or
pop
stos
insb
std
hlt
adc
inc
mov
push
int3
in
iret
into
or
xor
stos
jecxz
mov
into
pop
mov
cli
or
mov
inc
divl
rcrl
mov
repz
inc
hlt
shr
aas
xor
xchg
mov
push
insl
pop
push
mov
sub
push
push
in
jne
rclb
pop
test
cwtl
iret
adc
fiadds
or
inc
lret
mov
push
cmp
sbb
inc
fdivrs
jns
lods
mov
push
sub
adc
xchg
mov
inc
rcll
lcall
popa
pop
outsb
fisttpl
repnz
std
inc
and
lods
mov
mov
pusha
popa
mov
xor
bound
cmp
or
out
sub
push
pusha
sarb
fs
sub
add
mull
inc
ja
out
push
xchg
scas
sbb
sbb
xchg
loop
int
xchg
es
lret
push
add
add
xor
xchg
cmc
mov
adc
lods
adcl
mov
pop
sub
mov
je
xchg
int
jl
mov
stos
jp
jbe
push
mov
xor
outsb
sti
dec
pop
pop
mov
imul
into
xor
jl
mov
pop
fisubs
pop
les
mov
orb
mov
movsb
xchg
fiaddl
mov
inc
jo
popf
sbb
inc
dec
cmp
and
add
scas
mov
ss
pop
in
aaa
aad
test
xchg
ret
testl
dec
cmc
call
insl
inc
mov
pushf
mov
ret
mov
add
sub
cmp
std
outsb
xor
xor
dec
divps
cmp
push
inc
sbb
cli
cld
xor
xor
inc
pop
jecxz
mov
hlt
lcall
stos
out
inc
sub
add
pop
bound
jbe
pop
test
scas
mov
jns
outsl
cmpsl
xlat
jae
stos
sbb
push
movsb
test
cmp
scas
cmpsl
fsubl
mov
dec
sbb
and
out
or
fistl
ss
jle
xor
orb
sub
adc
lret
dec
test
xor
lock
jo
in
mov
sbb
mov
aas
out
xchg
incl
loopne
mov
addb
scas
push
adc
push
jno
shlb
xlat
es
mov
and
push
aad
lods
or
shrb
aas
pop
stos
iret
daa
sub
xor
inc
dec
out
xchg
xchg
cmp
mov
jecxz
rcrb
cli
cmpsl
mov
cmpsb
addr16
push
das
push
sub
lcall
xor
repz
mov
pop
fwait
cli
pop
test
gs
jae
int3
in
adc
pop
and
loope
jg
adc
cmp
push
dec
adc
test
pop
mov
push
fwait
dec
jmp
cmpsb
dec
fs
cltd
jbe
and
popf
jl
lahf
icebp
cs
mov
xchg
or
out
outsb
bnd
mov
hlt
loop
cmpsl
mov
and
lcall
inc
pop
mov
pop
arpl
int3
xchg
jno
xchg
jecxz
and
mov
cwtl
imul
sub
pop
loope
push
jo
mov
xor
push
pop
je
mov
es
add
insb
inc
pushf
xor
jno
hlt
cwtl
jmp
out
or
in
lcall
icebp
out
clc
out
lret
movl
and
stos
sbb
xchg
sub
xor
add
xor
popl
outsl
arpl
push
jb
mov
xchg
push
pop
ljmp
insl
add
imul
push
das
jb
xchg
dec
inc
push
sub
sbb
xor
int3
nop
pop
and
loopne
sbb
test
jge
loopne
mov
push
call
xor
push
out
int3
stos
into
test
cmp
lahf
dec
fisubrl
push
xor
in
sbb
and
sbb
push
cltd
sbb
ret
divl
sbb
xor
shlb
test
clc
mov
shl
ret
jg
mov
xor
inc
and
push
cwtl
jo
into
xor
jae
lahf
hlt
cli
or
je
rcr
es
fmulp
jbe
add
dec
bound
sbb
xor
jbe
cwtl
mov
inc
outsb
xchg
lret
xchg
outsb
mov
andl
xor
imul
scas
push
xor
adc
adc
jl
adc
lds
roll
jmp
pusha
jg
bnd
cmp
scas
fisubrl
mov
daa
mov
mov
add
sbbl
aad
mov
mov
movsb
add
enter
xchg
inc
xchg
mov
mov
dec
insl
add
test
in
mov
aad
or
pop
cmp
pusha
scas
mov
add
fmul
xchg
dec
adc
jg
mov
push
negl
and
push
adc
mov
pop
int
ljmp
jno
xor
ret
mull
push
adc
adc
dec
sub
mov
and
xor
pushf
daa
push
outsb
inc
cwtl
add
iret
fmull
stos
lods
xchg
pop
js
and
sub
sarl
dec
mov
or
cmp
cltd
adc
repnz
dec
pushf
pop
in
cmp
pop
pushf
outsb
sbb
lock
cld
adc
jae
scas
fimuls
lds
inc
push
and
es
jb
pop
add
mov
jbe
xchg
popf
in
mov
mov
out
push
dec
cmp
adc
cwtl
popf
adc
xor
into
in
mov
lret
add
mov
sbb
ljmp
adc
xorb
movsb
or
mov
fadd
xchg
stc
cmpsl
pop
shll
mov
clc
mov
pop
xchg
out
mov
jecxz
push
xchg
pushf
icebp
ror
mov
rcrb
and
sbb
fs
cmpsb
mov
xor
push
xor
inc
xchg
decl
xchg
push
mov
idivb
push
or
push
popf
int
movsb
mov
mov
das
adc
dec
pop
fdivrl
lods
pop
lahf
ret
outsl
rcrl
pop
lods
xchg
add
ss
adc
dec
jge
inc
mov
xchg
outsb
dec
jb
inc
repz
outsb
sti
mov
outsl
xchg
loop
and
xor
cltd
testl
xchg
sbb
push
sub
out
xchg
fidivl
add
arpl
es
shl
mov
popa
test
into
pop
sbb
inc
into
pop
popf
mov
in
push
aam
jg
mov
aad
push
ja
jno
push
stos
cs
hlt
dec
cmp
sbb
xor
lcall
xchg
mov
fdivl
test
cmp
ja
loopne
jbe
loopne
in
stc
ja
or
adc
lret
test
xchg
add
in
loope
xor
push
sbb
mov
pop
xor
mov
push
mov
iret
imulb
pop
mov
stc
fmuls
subl
pop
je
jns
add
iret
fistl
inc
cmpsb
cmpsb
mov
stc
push
mov
mov
lods
pushf
test
jmp
jge
test
clc
push
push
ds
rclb
lret
aam
mov
cmp
repz
rcrl
sbb
mov
daa
ficomps
int
jnp
or
sbb
pop
movsb
cmc
mov
aam
inc
jp
mov
add
mov
dec
outsb
add
jns
aas
outsl
test
fidivrl
das
hlt
xchg
and
imul
ja
aad
aad
int3
out
xchg
fimull
jmp
testb
es
aam
pop
pop
lea
mov
pop
dec
push
shlb
push
outsb
data16
mov
and
cmp
arpl
xor
push
mov
arpl
pop
xor
sub
lahf
lret
shll
push
loop
inc
mov
movsb
jmp
int3
jno
or
int3
rcll
fs
cmpsb
ret
mov
dec
xchg
cltd
adcl
jle
loop
push
es
ljmp
shll
add
rolb
mov
jl
push
cmp
sarl
xor
mov
adc
jo
xor
lcall
mov
jne
xchg
cmp
loop
adc
mov
sub
xor
cmp
cmpsb
sbb
imul
mov
cmpsb
in
iret
cmpsl
test
cmp
xchg
into
cmp
aas
mov
cmp
xchg
dec
xor
jp
cld
data16
sbb
sub
scas
clc
stos
xchg
pop
pop
mov
pop
mov
sbb
mov
loopne
mov
xchg
cltd
pop
mov
dec
pop
xchg
mov
repz
jecxz
dec
enter
call
adc
jl
inc
mov
mov
push
leave
test
jl
loop
es
add
sub
test
mov
in
pop
psubw
pushf
xchg
arpl
stc
in
js
inc
ljmp
mov
jmp
out
mov
mov
xchg
and
fbstp
xchg
adc
aam
es
popf
jp
insl
or
mov
shll
loop
icebp
pop
movsb
pushf
inc
in
fisttpll
icebp
pop
adc
sub
cs
adc
sbb
movl
scas
mov
sbb
fisubrs
sub
cmp
es
push
pop
mov
subl
ret
cld
lret
pop
daa
aam
inc
imul
mov
add
stos
sbb
mul
xor
jo
out
scas
and
lock
loop
jg
mov
cmp
shlb
inc
xchg
jmp
pop
and
xor
aam
lods
lods
scas
lahf
loopne
test
and
aaa
dec
mov
rcr
loopne
add
loope
add
cmp
out
int3
fwait
sbb
mov
sbb
sbb
in
enter
rcrl
dec
in
cmpsb
cli
int3
cld
xchg
pop
or
iret
addl
jnp
movsb
xchg
jle
push
jo
shll
jbe
adcl
jbe
les
adc
fnstsw
ljmp
scas
pop
pop
test
arpl
or
push
and
jns
adc
aaa
and
imul
leave
sti
incb
loopne
imul
test
repnz
jo
mov
ss
lock
xchg
scas
stc
in
mov
cltd
in
add
mov
out
test
cld
push
repz
add
pop
mov
push
inc
lds
lcall
stc
fwait
sbb
enter
push
mov
aaa
pop
sbb
push
mov
fwait
stos
lods
jl
stos
idivb
and
fiadds
add
mov
and
out
dec
andb
push
out
xchg
mov
dec
jl
adc
dec
aas
xchg
sbb
mov
jo
jecxz
fsincos
adc
fldenv
lds
addr16
repz
sub
sub
fs
fnstsw
shr
ja
jne
das
mov
mov
push
lahf
rcr
push
jns
fldl
es
dec
gs
sbb
xor
cmp
add
lahf
sub
dec
mulb
in
push
data16
in
mov
sbb
mov
and
and
lods
ret
push
aam
loopne
mov
cmp
or
stos
add
jno
sub
push
dec
and
push
je
gs
mov
pop
stos
movsb
cmp
ret
mov
adc
inc
jp
mov
mov
hlt
in
movsb
cmp
dec
scas
jg
je
ja
inc
jne
cmp
push
and
jae
lret
mov
sbb
mov
sub
add
push
jp
repnz
ret
sub
jl
dec
pop
mov
mov
out
roll
pop
mov
mov
adc
inc
jp
pusha
roll
jl
add
shrl
aam
int3
jmp
into
adc
fwait
cwtl
inc
add
mov
cmp
fldenv
arpl
mov
add
pop
pop
jl
lea
imul
push
mov
cwtl
dec
dec
fxch
test
sti
outsb
fwait
repz
push
icebp
dec
movsl
add
push
jns
pop
or
loopne
push
cmc
cmc
push
cmp
adc
fwait
cltd
ja
and
lret
add
cli
mov
cmp
js
out
cmp
shll
movsl
xchg
jb
sarb
into
lods
loop
push
inc
idivb
sub
xchg
int3
outsl
ret
clc
outsb
dec
sub
lea
mov
mov
mov
fs
add
pop
pop
out
inc
jb
mov
sbb
mov
lock
cmp
and
push
jmp
hlt
in
mov
in
sub
je
adc
mov
ss
push
xchg
inc
stos
cs
or
or
jl
and
jmp
mov
lretw
pop
sti
int3
sbb
test
test
addl
mov
sbb
lock
add
outsb
outsl
mov
dec
inc
cmpsb
jle
pop
add
mov
aaa
outsb
cmp
fs
insb
shlb
push
adc
std
idiv
or
pop
cmpsb
inc
adcb
mov
mov
cmp
ja
mov
dec
pusha
mov
rol
mov
xchg
xchg
or
cli
mov
fcoml
add
gs
or
scas
mov
icebp
mov
inc
cmp
mov
inc
out
inc
in
xchg
out
push
inc
or
add
lcall
lret
cmp
daa
push
mov
jle
ficomps
jp
and
pop
push
fildl
jecxz
cmpl
mov
sbb
loopne
nop
das
mov
shl
push
out
sti
call
mov
inc
addb
stc
pop
cli
jecxz
inc
out
xchg
dec
arpl
ret
jmp
loopne
shll
jns
stos
es
in
sub
cmpsl
pop
dec
jno
push
cmpsl
repz
aas
sub
testb
xorl
out
inc
mov
aaa
ja
ret
mov
push
ds
cld
dec
mov
sahf
adc
push
pop
add
push
sarl
and
push
xor
push
push
inc
test
lret
mov
test
bound
or
ljmp
push
xor
push
pop
arpl
push
sbb
xchg
shrb
inc
iret
inc
jmp
movl
stos
jnp
or
jg
pop
inc
push
mov
adc
jmp
mov
test
add
incb
xor
lods
sub
pop
sahf
mov
mov
jns
loopne
jge
push
gs
shlb
in
adc
fwait
jnp
mov
push
push
dec
mov
push
sti
sbb
aas
sarb
rclb
push
and
mov
lret
scas
sub
mov
bound
mov
fstpl
add
inc
inc
ret
sub
std
jmp
hlt
shl
lret
test
dec
mov
sbb
aad
insl
pop
test
stc
dec
jbe
xlat
sub
push
xor
add
clc
insb
push
jl
lret
je
outsb
jnp
cmp
aaa
sub
ljmp
add
mov
sub
mov
add
sub
outsb
add
repz
arpl
aad
push
test
dec
pop
adc
lret
repz
scas
enter
lcall
fs
movb
mov
add
sahf
lcall
mov
shll
push
sub
lcall
jb
xor
fiadds
adc
jl
mov
addb
xchg
adc
mov
out
ss
stos
jb
inc
ret
testb
adc
or
out
pop
mov
jae
popf
shrb
gs
fistps
insb
jno
cs
stos
in
xchg
pop
inc
aas
jl
pop
jae
add
adc
fs
cwtl
jb
popa
pop
pop
lods
aad
cmp
jne
aaa
lret
mov
xchg
and
lock
xchg
cmpsl
filds
xchg
filds
iret
sbb
add
lcall
or
mov
jnp
xchg
out
xorl
adc
mov
mov
pop
sbb
xlat
mov
pop
sti
cmpsb
lea
adc
stos
jecxz
pop
ds
and
pop
test
popa
mov
add
ljmp
and
pop
inc
xor
stos
popf
jae
test
xchg
sbb
testl
xchg
inc
jg
jle
je
stc
js
jne
sbb
stos
push
icebp
add
mov
cmpsl
daa
mov
pop
into
out
scas
xor
xchg
arpl
mov
sub
int
push
stc
icebp
rcrl
push
jae
daa
iret
sub
mov
pop
les
pusha
out
or
sti
xchg
jl
lea
dec
push
adc
test
lods
push
dec
mov
cmc
xlat
mov
lret
enter
pop
mov
pop
shrl
cmp
push
jmp
cmp
cmp
cmp
cmp
push
mov
decb
pop
aas
rclb
mov
scas
cmp
test
xchg
xchg
mov
add
icebp
push
popa
mov
xchg
sub
push
push
pop
popa
or
in
sub
scas
in
js
mov
aas
jecxz
mov
mov
loope
mov
test
mov
out
enter
mov
scas
addl
sbb
pushf
lea
adc
lret
scas
add
test
rolb
dec
daa
ficompl
mov
sarl
push
dec
or
jns
xchg
aas
jmp
test
lret
and
xor
sbb
push
sub
shll
adc
imul
xchg
icebp
stos
addb
ficoms
clc
arpl
add
mov
iret
push
mov
ss
pop
insl
push
shl
fwait
mov
arpl
call
push
jle
fdivrl
adcl
jae
js
add
jmp
sub
inc
jno
pop
scas
jb
pop
mov
in
movsb
or
jb
sub
fwait
sub
cmp
sti
mov
pop
daa
push
add
xor
incb
mov
les
ds
jbe
dec
repnz
push
sbb
pusha
fs
fdivs
outsb
ret
mov
loopne
mov
loope
cmp
out
jo
jle
jbe
pop
inc
sti
jns
and
pop
jg
and
iret
sbb
ja
test
aas
jg
push
outsl
pop
lea
xor
mov
clc
rcrl
push
dec
aam
lret
psrld
ja
lock
push
fists
push
mov
jle
cwtl
scas
xor
xor
add
ret
fsubl
call
iret
add
cs
and
push
sub
imul
imul
aaa
mov
mov
mov
cld
aam
fldln2
mov
cli
jge
pop
mov
cmpsb
scas
sbb
mov
xor
and
inc
sbb
sahf
lods
scas
mov
cmp
orl
pop
inc
test
and
and
jg,pt
jl
sub
daa
and
push
es
imul
and
lods
sbb
out
xchg
inc
dec
fisttpll
int3
inc
je
mov
jb
and
inc
jg
arpl
jo
inc
xor
cmc
dec
loop
into
sub
negb
bound
jp
out
cmpsl
fs
dec
and
fs
jo
fiaddl
js
add
insb
dec
bound
xor
test
idivl
pop
rcr
push
adc
pushf
insl
das
push
add
push
jb
mov
aas
lret
and
push
sbb
mov
int
fwait
data16
out
jno
mov
sbb
in
clc
cmp
and
stc
mull
pop
cli
inc
jne
fwait
sti
lock
xchg
mov
es
movl
xchg
cmpsb
popf
insl
insb
pop
call
jl
inc
sub
fdiv
pushl
insl
inc
pop
prefetch
ljmp
imul
in
jne
adc
hlt
push
jp
adc
roll
cltd
mov
xchg
inc
pop
mov
pop
xchg
jmp
fs
inc
cwtl
rolb
push
mov
xchg
dec
adc
out
cmp
ficompl
pushf
cmp
add
xchg
add
jl
jp
sti
xor
mov
leave
scas
fistps
push
xor
clc
cmp
sar
es
mov
enter
inc
dec
push
dec
mov
dec
fs
js
cmpsl
stc
insb
mov
andb
push
sbb
inc
scas
sbb
sbb
movsb
lahf
mov
add
sbb
or
repz
in
dec
or
fisttps
imul
fildl
call
test
in
inc
lret
lahf
mov
in
jecxz
inc
jp
xor
cmp
and
mov
repz
in
aad
stc
test
fsin
fbstp
gs
pop
jmp
jae
pop
and
stc
cmp
xor
add
add
sub
pop
loopne
cmp
pop
ljmp
stc
push
pop
sbb
stos
dec
bswap
xor
push
je
test
and
daa
push
add
insb
arpl
xchg
sbbl
into
or
jns
insl
rol
jo
adc
push
imul
aam
sbbl
bound
mov
rol
mov
les
push
adc
arpl
aam
insl
xor
iret
lds
in
or
jg
sbb
clc
stos
jmp
add
cmpsb
data16
insb
pop
mov
stc
mov
jmp
xor
or
out
cmp
out
gs
mov
xor
mov
and
out
fnstcw
out
enter
testl
fstps
jmp
mov
mov
shll
mov
scas
insl
stos
psllq
in
scas
movsl
mov
sub
shl
xchg
ljmp
sar
jmp
jg
iret
iret
push
jmp
and
dec
pop
jno
xchg
adc
and
xchg
insl
jmp
rclb
add
cmc
push
jns
push
fwait
adc
add
mov
cld
or
and
jo
ret
ret
inc
imul
loopne
xor
std
rolb
xlat
out
jne
addr16
xor
push
test
rcrl
mov
mov
mov
push
shrl
push
in
and
jge
adc
and
fsubl
aas
jmp
push
std
ljmp
clc
push
and
adc
lods
push
pop
cltd
lcall
xchg
mov
sub
rcll
lods
repz
dec
in
sub
jb
inc
sub
mov
scas
loop
mov
int3
mov
push
mov
jecxz
scas
lods
sbb
and
cs
jg
pushf
or
arpl
aam
mov
pusha
push
outsl
into
xchg
xor
divb
jmp
hlt
jbe
push
xlat
xorl
lcall
and
cs
cs
popf
push
jmp
xchg
add
leave
push
cld
xor
ficomps
das
mov
and
sbb
mov
mov
data16
out
inc
xchg
sub
aaa
pop
dec
xchg
xchg
xchg
sbb
jge
mov
pop
adcb
jae
imul
cmc
jge
sub
insb
inc
add
scas
jle,pt
adc
inc
nopl
andb
inc
pop
jbe
adc
mov
xor
shl
insb
inc
mov
rol
aad
pop
cmp
clc
pop
popl
cmp
and
push
add
jo
cmp
sbb
icebp
test
mov
pop
add
test
mov
cwtl
mov
push
xor
mov
cmp
mov
inc
sub
cs
cwtl
inc
cmp
sub
fnstenv
cmp
sub
inc
dec
fucomp
mov
push
lcall
sub
jle
fwait
xor
out
cld
aas
fnstsw
insl
sbb
lock
mov
int
xchg
add
dec
shrb
insb
imull
call
mov
or
lods
and
aad
lret
dec
cmp
gs
sub
fiaddl
hlt
mov
add
lock
xchg
jg
inc
sarb
add
pop
jg
insl
sub
jne
stc
pop
aaa
mov
shr
ficompl
in
mov
popa
pop
inc
lds
shrb
xchg
sub
sbb
test
adc
mov
jg
jbe
jg
inc
rclb
sarl
mov
xchg
stc
pusha
sbb
sbb
jmp
lock
pop
or
dec
inc
pop
pop
loop
lods
pushf
mov
push
cmp
inc
daa
das
mov
test
sbb
out
out
push
fcompl
aaa
imul
jle
lock
negl
aas
std
movsl
xchg
push
push
xor
mov
or
and
ds
pop
push
xchg
or
scas
push
lret
pop
mov
mov
mov
adc
shrb
inc
aas
pop
or
insl
cmpsl
jns
cld
fisubrl
int
pop
mov
add
jg
mov
sbb
insb
sti
push
ja
sub
sub
dec
sub
mov
insb
mov
rorl
xchg
jae
jecxz
sbb
mov
pop
sub
out
in
andb
xor
andl
fsubrs
and
pop
stos
scas
inc
push
gs
mov
or
adc
add
mov
aas
mov
push
orl
sub
or
sub
dec
jle
xchg
xor
pop
test
int
lods
mov
lcall
fs
mov
out
push
out
int
mov
mov
or
subb
call
push
mov
lret
push
shrb
mov
fimuls
jno
mov
pop
loopne
and
mov
fs
pop
xor
ret
jne
push
adc
adc
push
push
nop
jb
sbb
fs
sbb
mov
or
mov
enter
fs
push
add
push
adc
mov
xchg
mov
cmp
mov
jecxz
ja
mov
cli
das
insl
scas
adc
sahf
push
mov
ljmp
popa
sbb
fnstcw
and
mov
jge
lea
outsl
popf
mov
les
push
push
iret
inc
push
stos
test
in
outsb
les
cmpsl
adc
or
in
xchg
addr16
aam
enter
stos
push
outsl
lcall
push
hlt
pop
jecxz
mov
add
add
dec
push
or
push
test
jecxz
es
or
lret
popf
test
mov
push
dec
sbbl
std
add
cwtl
adc
stos
int3
pop
sbb
test
pusha
jo
sahf
mov
xchg
fidivrl
pop
addl
or
mov
pop
imul
addr16
dec
and
in
push
inc
ds
xlat
ds
pop
imul
lcall
dec
add
fsubrs
js
gs
popf
cmpsb
and
jne
cmp
into
sbb
pop
daa
inc
insb
jne
xchg
ss
bound
enter
imul
repnz
out
pop
xor
xchg
mov
xchg
inc
out
movsb
mov
push
cmpsl
sbb
iret
lret
xchg
addr16
mov
inc
out
orb
xor
cli
mov
std
lods
cmp
inc
push
cmp
enter
mov
dec
or
cmp
mov
pusha
pop
out
bound
ljmp
adc
mov
in
js
push
aad
fs
mov
and
jo
adc
xor
mov
in
lock
sbb
pop
out
push
pop
mov
adc
xor
in
push
jnp
inc
std
jl
push
fiadds
mov
pop
les
cmpsl
imul
in
and
xlat
add
pusha
inc
xor
call
push
out
sbbb
mov
jns
push
loope
mov
xlat
cmpsb
ss
dec
xchg
inc
push
xchg
pop
in
cmc
leave
cmp
or
movd
xchg
mov
lret
lahf
push
lahf
je
lods
into
jne
jne
inc
and
dec
xchg
xchg
push
es
push
xor
jmp
addr16
repnz
mov
popa
pop
stc
stos
in
adc
popa
mov
fninit
rorl
mov
push
push
pop
jb
lods
in
gs
ret
cs
or
fimuls
or
je
rorl
ret
mov
scas
jne
mov
shrl
fstpl
jge
movsl
fldt
mov
je
es
mov
aad
shll
imul
imul
hlt
lret
movsl
loope
add
fimuls
mov
aas
inc
push
mov
aaa
cld
adc
mov
xor
fisubl
nop
sub
cmpsb
jp
loope
xchg
lret
jnp
shrb
daa
jns
rcrl
data16
xor
cmc
mov
fwait
lcall
mov
test
mov
rorb
or
add
and
mov
sti
dec
imul
jmp
inc
adc
and
mov
mov
aaa
pop
sbb
add
fwait
mov
xchg
and
inc
cmp
xchg
xor
sub
push
and
cmc
push
jmp
sbb
adc
and
add
pop
xorl
shlb
dec
sti
ret
icebp
xor
test
add
arpl
mov
add
or
sub
out
or
shll
mov
mov
dec
dec
je
pop
lock
mov
jae
ss
imul
mov
xlat
sarl
in
sti
fiaddl
sub
jbe
xor
inc
loopne
ret
mov
test
xchg
and
jmp
mov
add
and
dec
andl
adc
jecxz
into
mov
dec
lods
pop
cmpsl
mov
fcmovnbe
adc
sub
xchg
addr16
add
shll
fcmove
sub
and
aam
insb
sbb
xchg
pop
daa
xchg
push
mov
inc
jmp
fcom
jae
fucompp
out
pop
xor
in
je
add
aaa
fwait
test
ret
sbb
xor
xlat
lret
or
lahf
mov
mov
cmp
cmp
addr16
dec
in
ja
inc
pop
mov
jbe
mov
push
out
and
pop
std
into
adcb
add
jl
push
mov
xchg
pop
std
cwtl
xchg
call
xchg
mov
testb
dec
mov
gs
add
add
ret
scas
adc
fnsetpm(287
aam
mov
loop
sub
repnz
fsubs
xchg
cmp
hlt
clc
rolb
and
gs
and
pop
push
xchg
jb
out
fisubl
or
and
rol
cltd
pop
mov
lcall
jns
pop
pop
push
mov
xchg
xor
jae
mov
repz
test
or
js
in
add
xlat
popa
sbb
push
rorb
pop
lods
fcomp
je
pop
adc
xor
loop
sbb
jl
test
cld
add
lock
iret
push
add
bnd
ljmp
adc
sub
cmp
and
call
inc
jo
mov
xlat
jle
xor
mov
fwait
add
jecxz
dec
xlat
push
xchg
xor
sti
xchg
filds
pcmpgtb
xchg
xlat
jmp
inc
lock
xor
dec
dec
mov
add
cmp
adc
jne
mov
test
pop
cmp
cmp
call
mov
aam
and
mov
imul
push
sbb
sub
push
mov
subb
dec
dec
inc
mov
ret
iret
outsl
aad
ret
mov
push
pushf
add
pusha
fcmovnu
test
imul
daa
sbb
aas
push
loope
cmp
scas
ljmp
push
jecxz
shlb
scas
and
push
outsl
loope
jne
sub
fstp
cli
dec
iret
push
jbe
fxch
mov
addr16
cltd
push
cmp
popf
pop
out
aaa
fs
ja
clc
inc
mov
mov
and
lsl
sub
testl
mov
cltd
and
cld
push
sub
mov
adc
and
mov
cmp
dec
lahf
cld
in
pop
aam
xchg
stc
mov
push
lock
fnsave
mov
fsubrl
and
testl
sar
xchg
lea
lock
and
mov
mov
pusha
jg
pop
add
inc
xlat
push
mov
sbbl
inc
mov
dec
xlat
mov
xchg
mov
adc
dec
imul
mov
loopne
insb
rorl
cwtl
sbb
inc
sbbl
adcl
jns,pt
jecxz
sbb
mov
jbe
inc
lods
add
popf
leave
xor
icebp
nop
shll
and
pop
test
xchg
dec
xor
mov
lret
lods
imul
mov
and
pop
mov
int3
stos
lock
aad
sbb
jb
aaa
lds
cmpsb
scas
ret
hlt
cld
push
and
arpl
jp
fldcw
sbb
pushf
push
vpcomud
or
pushf
out
cmp
xchg
lock
and
sbb
cs
std
add
inc
push
pop
icebp
sbb
negl
sbb
push
and
sub
pop
into
add
pop
dec
loope
enter
movb
and
aaa
sbb
jb
subl
je
push
mul
xor
xchg
add
stos
ja
addr16
sub
pop
aaa
popf
iret
leave
testl
push
inc
ss
fisubs
jg
pop
fadds
inc
fisubl
rcrl
sub
aaa
dec
inc
ror
inc
xor
out
aas
xchg
adc
cwtl
inc
leave
ss
in
sbb
sub
int3
mov
and
in
loopne
ret
nop
outsb
push
aaa
scas
inc
mov
push
adc
push
cltd
xchg
movsb
lcall
clc
aaa
and
or
cmpsb
xchg
mov
pop
ljmpw
pop
cmp
int
inc
jne
clc
fidivl
xchg
inc
lahf
divb
xchg
push
enter
loope
fidivl
xchg
mov
std
std
push
loope
ljmp
xchg
insl
add
mov
push
mov
xchg
std
dec
xor
les
out
xchg
test
add
test
or
test
mov
loope
cmp
xchg
xchg
in
cmpsb
bnd
lea
movsb
loopne
stos
es
xchg
dec
inc
lea
xor
cmpsb
std
or
andl
pop
mov
inc
pusha
jl
lea
adc
mov
push
dec
cwtl
dec
lods
inc
xor
fists
push
lods
sbb
xchg
jmp
mov
sbb
fs
and
mov
and
negl
sbb
aas
hlt
dec
xchg
bound
out
int
cld
mov
cmc
hlt
fnstenv
imul
push
sbb
lock
test
pop
lds
fstl
out
pop
jle
imul
mov
lods
cmp
mov
jmp
loope
lcall
push
mov
sti
xor
cmp
cmp
cmp
addr16
rcl
insb
in
dec
jp
loop
push
in
and
mov
ret
iret
xchg
cmpsl
je
fsts
std
mov
int
or
pusha
stc
sbb
sti
cmc
pusha
arpl
fmull
xchg
rcrb
pop
mov
enter
imul
popf
shl
mov
les
negb
out
adc
popa
clc
cmp
cmp
jmp
pusha
dec
cld
je
xor
imul
xchg
test
loopne
lds
inc
mov
sbb
inc
ja
jno
sti
jne
and
call
arpl
xlat
andl
xor
pop
jmp
enter
mov
cmp
lret
mov
loopne
inc
pop
sbb
mov
mov
cmpsb
lods
jmp
push
or
xor
int
sub
test
sub
pop
push
xlat
data16
stos
popf
and
push
call
cmp
pop
jno
sti
fisttps
jbe
loop
cmpsb
in
lods
push
cmp
push
test
icebp
gs
ret
mov
fs
adc
sbb
sarb
inc
mov
xchg
push
fcompl
sub
jb
stc
mov
loopne
xor
or
jo
scas
mov
and
mov
jo
mov
cs
inc
fwait
imul
sub
test
cmc
or
xchg
fs
imul
xor
cmp
fs
ret
fcoms
rcrl
clc
and
adc
xchg
jne
inc
cmp
arpl
loopne
sub
lcall
ljmp
mov
mov
pop
push
add
mov
scas
mov
or
adc
mov
adc
cmpsl
stos
push
out
inc
fistpll
sub
dec
test
int
aam
faddp
cmp
sbb
push
cmp
popf
or
pop
imul
jnp
mov
lods
adc
movsb
dec
imul
xchg
push
aad
pop
rorb
add
jmp
pusha
iret
cltd
cmp
fadd
nop
fs
sbbl
xchg
gs
push
and
xchg
and
add
mov
and
in
xchg
pop
or
xorb
adc
add
push
testb
outsb
jmp
js
or
dec
add
lahf
pop
lods
sub
ret
iret
daa
jno
dec
in
orl
jmp
in
popf
dec
inc
and
or
xor
mov
ja
pop
icebp
shl
pusha
icebp
push
out
loopne
mov
sbb
clc
or
xor
pop
push
mov
xor
and
pop
in
pop
adc
xchg
jb
push
or
add
mov
lds
shrb
jns
das
jnp
mov
and
mov
adcb
frstor
adc
sbb
and
jne
cmp
cmpsb
jmp
jno
xor
iret
insb
and
repnz
and
fmuls
and
in
mov
and
ljmp
push
stos
dec
jg
mov
lds
jnp
mov
xor
sub
adc
push
add
dec
sub
xor
sub
sarl
xorb
and
add
xor
adc
add
mov
push
jl
dec
push
loop
add
daa
inc
hlt
orb
fwait
rcrb
xchg
cltd
shl
cmpsl
push
pop
xchg
shll
fwait
push
xor
leave
aas
dec
adc
stos
sbb
mov
into
movsl
popa
xor
out
lcall
aad
cld
or
int3
jae
mov
out
jnp
push
jns
xor
loop
lahf
das
mov
cmpsb
pop
adc
mov
mov
sbb
ja
lret
rcrl
mov
into
add
insb
daa
add
repnz
lcall
sbb
call
loopne
xor
inc
sbb
jmp
pop
push
mov
mov
int
arpl
xor
or
popf
xor
cmp
add
mov
sub
outsl
sub
addr16
call
adc
das
or
lret
shrl
movsl
jl
jmp
outsb
xchg
jle
mov
pop
fwait
cmpsb
xchg
les
daa
shlb
fwait
dec
xchg
push
int3
gs
outsl
jl
shll
xor
int
hlt
cltd
loope
sti
std
outsb
add
adc
insl
pop
push
jbe
gs
out
push
pop
mov
and
out
xlat
outsb
push
scas
pop
aas
iret
inc
jno
and
mov
shrb
jns
push
nop
sub
movb
mov
ja
sub
inc
fmuls
aam
mov
les
cwtl
stos
repz
lcall
ficomps
sti
jecxz
lds
mov
filds
jge
push
push
lds
sbbb
mov
dec
ja
dec
jnp
rcr
in
lea
sub
mov
cwtl
pop
push
inc
aas
js
jecxz
jmp
pop
test
imul
imul
mov
mov
jle
or
add
lcall
pushf
sbbb
loop
inc
scas
push
dec
ret
dec
and
mov
add
xchg
sbb
mov
pop
out
into
pusha
sahf
arpl
std
mov
icebp
movsl
push
mov
mov
pop
cmp
jg
repz
or
jl
xor
es
out
and
pop
or
pop
lea
sbb
push
mov
clc
xchg
enter
ret
sub
mov
sti
jg
addr16
test
rorl
adc
out
mov
arpl
mov
arpl
push
rcll
in
das
mov
push
out
or
mov
dec
insl
fsubrl
shl
std
dec
mov
fisttpl
das
xchg
xchg
add
dec
lahf
out
xor
fs
mov
push
jb
lods
or
ret
or
test
xchg
jle
test
neg
out
or
in
mov
pop
push
mov
xor
jne
inc
and
int
loopne
jecxz
je
lock
adc
aas
cmp
xorl
cmp
sbb
sub
in
pop
mov
das
adc
aam
pop
sahf
std
pop
sti
andb
ret
xchg
add
movsb
test
jmp
cli
sub
jecxz
enter
adc
adc
out
bound
or
add
das
cmp
and
sbb
jl
cmp
hlt
mov
in
hlt
stos
jo
pop
rolb
xchg
inc
ficomps
lahf
pop
pop
lods
adc
dec
or
js
or
sub
lret
mov
call
ja
cmpsb
mov
aas
mov
pop
inc
cmp
lea
push
loope
adc
mov
int
or
int
fwait
cwtl
test
and
mov
push
and
or
lcall
inc
aad
xor
adc
into
push
adc
mov
mov
cwtl
xchg
push
js
sbb
stc
and
and
sbb
test
in
add
xchg
hlt
inc
jno
lret
out
cld
imul
sbb
les
sbb
mov
push
pop
out
jecxz
cwtl
ffreep
fisubrs
pop
int3
cmp
clc
les
stc
addr16
rclb
enter
repz
rolb
add
xchg
push
xor
nop
cmpb
mov
jns
out
xor
dec
dec
or
out
in
push
jnp
aam
lods
dec
xor
jg
mov
sti
insl
push
xor
add
in
pop
or
push
mov
push
add
sbb
dec
ret
stos
xchg
adc
push
mov
stos
and
jge
mov
cmpsl
dec
and
dec
push
incb
cmpsl
fldcw
push
loop
mov
mov
pop
xchg
cmc
call
jle
sub
filds
and
mov
push
and
sub
mov
mov
lock
aas
xchg
inc
movb
stos
mov
or
adc
adc
cli
out
add
adc
cltd
push
xchg
and
insb
scas
add
out
mov
sahf
and
fiaddl
fistl
hlt
or
mov
cld
inc
fmulp
rep
xlat
cld
loope
imul
mov
xor
cwtl
lahf
fdivl
divl
xor
shl
out
shl
rorl
std
lods
push
fmulp
out
xchg
mov
addl
sub
fs
mov
or
jmp
adc
lret
dec
not
jmp
mov
push
pop
sti
shlb
frstor
int
scas
nop
inc
cmc
loope
sub
ret
and
shr
enter
jne
dec
fcoml
es
or
sar
test
push
add
sub
mov
jecxz
adc
mov
mov
pop
and
in
cmpsl
and
cmp
std
cld
inc
movsl
push
stos
and
ds
mov
fwait
mov
in
int3
add
outsb
repnz
lea
cmp
aam
dec
insb
xor
fsubl
xor
icebp
fiaddl
cmpsb
pop
adcb
rcrb
lea
sbb
negb
jno
icebp
push
jns
es
ljmp
bnd
mov
mov
into
inc
repz
and
xchg
sbb
mov
mov
sarl
jns
mov
lahf
mov
scas
test
xchg
icebp
dec
pusha
and
leave
adc
popa
dec
jno
subb
mov
fimull
jmp
sahf
mov
push
shrb
push
pop
xor
paddw
lahf
out
sbb
pusha
push
cmpsl
xlat
adc
jae
xor
push
lahf
nop
push
cmp
mov
xor
in
xchg
xor
pop
mov
pop
pop
cmc
out
addr16
jp
nop
shrl
inc
mov
add
xor
lods
ret
inc
cmp
xchg
push
fwait
inc
jmp
ss
movsl
pop
mov
nop
xor
inc
pop
int
add
out
push
cwtl
aad
adc
icebp
xchg
mov
xlat
lret
inc
sahf
in
stos
js
sbb
lcall
test
push
sub
mov
adc
adc
and
mov
outsl
pop
mov
mov
jg
out
push
je
out
push
mov
xor
shrb
mov
mov
or
mov
sub
push
inc
xchg
test
in
stos
test
loopne
xlat
pop
cmpsb
fwait
ja
movl
sbb
leave
and
mov
dec
push
jl
jns
sbb
push
aaa
inc
add
xchg
test
sbb
int
cltd
push
push
mov
lock
fs
inc
out
and
xchg
push
and
sub
add
shlb
nop
sub
out
sarl
push
or
ljmp
or
ret
imul
adc
das
or
aad
sub
and
xor
cmp
mov
mov
xchg
outsl
pushf
push
mov
lret
dec
jbe
into
imul
in
loop
inc
aam
push
and
popa
call
mov
pop
dec
mov
push
mov
xchg
bound
push
xchg
xchg
es
mov
xchg
adc
jl
mov
mov
outsl
and
sbb
push
loop
insl
loop
jmp
out
jbe
sub
mov
cmp
dec
shrl
pop
jnp
add
aas
sub
scas
xchg
subl
les
inc
jo
pop
loopne
and
lods
nop
cmp
loope
lret
sbb
xchg
dec
nop
dec
dec
sahf
push
jne
xor
int
mov
out
sub
jnp
fwait
push
pop
cmpsb
and
xor
mov
add
cli
outsb
fistl
push
lret
mov
fwait
adc
ret
add
stos
mov
gs
data16
pop
shll
movsl
mov
push
adc
xlat
fdivl
andl
sar
pop
add
and
xor
lret
sti
addr16
fmull
test
push
adc
out
mov
lock
pop
shrb
rorb
pushf
les
and
fisttpl
stos
mov
mov
inc
add
out
inc
pop
jle
cltd
mov
and
xchg
cmp
cmp
inc
jne
jl
push
dec
arpl
xor
sti
orb
out
fildl
and
dec
mov
les
jmp
add
pop
jno
inc
fiaddl
lcall
xchg
mov
ret
shrb
lods
cmpsl
and
add
in
pop
push
mov
add
push
scas
pop
pop
rorl
xchg
jne
std
inc
repnz
pop
es
repz
cmpb
push
pop
jnp
test
arpl
test
outsl
fcmovbe
jo
fildll
xchg
or
rolb
fildl
xchg
mov
mov
cmc
cwtl
loope
xorl
sub
dec
and
pop
lods
mov
leave
int3
addr16
in
stos
cli
inc
mov
mov
add
pushw
mov
mov
mov
cmp
dec
and
push
rcrb
adc
insb
testb
movsb
orl
shlb
cmp
dec
inc
mov
js
mov
js
adc
cmp
add
pop
and
sub
dec
pop
ja
xor
fs
or
lock
dec
or
inc
aad
dec
imul
mov
jl
fwait
adcl
fbld
jno
aad
lea
sub
cltd
or
xlat
pop
add
jne
inc
fmul
aad
mov
pop
ret
jle
insb
push
jmp
stc
pop
fld1
sub
jo
mov
pop
repnz
shll
fsubp
mov
fidivrs
and
shll
and
aam
mov
rorb
add
fbstp
lret
add
adc
enter
xchg
pusha
rcl
rorl
or
jne
jmp
lret
jg
test
or
push
jne
inc
jmp
add
dec
pop
js
ret
outsb
lea
sbb
mov
daa
cmp
outsb
jl
cld
ficoml
cmpsl
push
aaa
jmp
lret
adc
mov
mov
pop
push
and
test
sbb
push
add
cwtl
loopne
mov
push
idivb
mov
dec
aas
xor
lds
int
loope
test
cmp
cli
cld
add
jmp
enter
aas
add
ss
mov
stos
repnz
mov
pushf
push
push
or
shlb
ss
lds
xchg
sub
pop
fwait
add
sbb
pop
push
mov
imull
mov
aam
sbb
ret
cmp
jg
out
push
xchg
mov
pop
ss
into
and
inc
mov
push
jg
cmp
out
pop
das
mov
pop
pop
mov
push
shlb
pop
mov
loop
jb
and
xlat
xchg
jns,pn
inc
mov
xchg
push
mov
sub
jbe
cmpsb
rol
and
dec
jo
mov
scas
sbb
push
push
in
cmp
imull
and
dec
in
cmc
pop
push
fildll
mov
push
jmp
add
mov
adcb
pop
pop
mov
cs
inc
sarl
lahf
inc
dec
adc
ja
push
cmp
sub
jo
lods
pusha
pop
insl
dec
aad
insb
xchg
inc
mov
xchg
popa
aam
xchg
dec
mov
push
push
rep
sub
mov
mov
enter
jnp
adc
stos
sbb
rorb
aam
or
mov
mov
mov
mov
xchg
es
ret
push
dec
xchg
das
mov
orb
sbb
cmp
loope
cwtl
div
out
fimull
and
inc
das
pop
ss
push
mulb
roll
sub
rorb
popf
pop
orl
dec
inc
push
fiaddl
pop
cs
nop
dec
dec
inc
xchg
mov
add
xor
xchg
lret
lds
in
lret
out
xor
shlb
shr
pop
out
lahf
movsb
dec
shrb
scas
sbb
pop
and
push
outsb
scas
sub
pop
cmpsb
mov
jno
sub
aaa
bnd
lahf
xor
or
int3
inc
jle
aas
into
xor
sbb
pushf
lock
adc
add
lret
mov
ret
addr16
roll
movsl
icebp
icebp
cmp
dec
mov
fdivrp
cmp
pop
insb
push
je
pop
loope
test
rep
mov
push
xlat
arpl
out
adc
mov
call
stos
pop
cmp
cmp
mov
scas
scas
push
roll
jle
in
lds
push
adc
push
xchg
lods
call
test
rclb
stc
ficoml
dec
mov
loop
pop
mov
mov
pop
jo
outsl
aaa
xchg
push
lret
es
sub
cmc
mov
popf
jne
arpl
xchg
xchg
xor
sub
mov
xor
xor
clc
dec
sahf
sbb
inc
pop
je
mov
push
adc
fwait
leave
loope
imul
lods
sbbl
loop
ret
mov
inc
insl
orb
or
xlat
lcall
bnd
loopne
jg
sbbb
sbb
dec
fdivrs
pop
adc
push
pop
mov
cmc
dec
adc
ret
push
icebp
sbb
add
test
dec
hlt
and
ja
or
push
cs
in
dec
cwtl
push
outsb
inc
rcrb
adcb
pop
cmp
shl
lds
mov
mov
push
mov
pop
mov
ss
scas
adc
jge
mov
lea
daa
fisttps
pop
adc
popa
cwtl
test
xchg
push
xchg
loop
sahf
loope
xchg
hlt
insb
in
jbe
pop
mov
jle
shld
les
jae
pop
fnstcw
in
lret
and
pop
jne
mov
xor
adc
or
push
xor
bnd
jno
add
jo
rorl
out
cmc
push
stc
push
hlt
add
jo
dec
xchg
xor
xor
cmpsb
and
fldt
or
call
movsl
push
pop
fists
add
jl
cs
xchg
mov
ret
lahf
and
jle
cmp
jne
fsubr
sbb
lea
lea
sbb
mov
je
mov
inc
push
jecxz
and
jnp
pop
fisttps
mov
jecxz
clc
cmpsb
push
xor
inc
pop
sub
push
test
int
lcall
inc
xchg
pop
out
fwait
cmpsb
pop
xchg
mov
sub
int3
sbb
mov
xchg
addr16
in
mov
in
dec
sti
loopne
and
lock
int
jecxz
inc
pop
test
xor
insb
test
pop
aam
in
dec
mov
addb
lret
adc
daa
repz
push
out
push
lcall
dec
hlt
lcall
mov
push
jnp
sub
gs
je
pslld
es
pop
das
push
mov
xchg
ret
add
loopne
mov
scas
stos
sbb
sbb
dec
jecxz
outsl
sbb
imul
adc
nop
mov
stos
jbe
lahf
push
aad
jmp
push
jge
pop
mov
lea
popa
sbb
sbb
dec
sub
push
cmp
fdivs
movsb
push
xor
mov
sbb
pop
inc
xchg
cmp
add
mov
and
mov
nop
push
ret
mov
popa
xor
pusha
sub
pusha
mov
scas
dec
or
mov
mov
lahf
dec
sbb
and
inc
mov
and
fisubrs
adc
xor
dec
sti
and
in
xchg
pop
push
fmul
inc
jne
mov
push
xchg
popa
movsl
data16
enter
or
mov
push
and
mov
cwtl
xlat
out
leave
cmp
xor
inc
xchg
inc
test
shrl
push
je
pop
mov
call
push
imul
mov
adc
cmp
pop
pop
dec
ficoms
repnz
lea
hlt
shlb
fmul
pcmpgtw
pop
xlat
dec
iret
fisubl
mov
cwtl
leave
es
xchg
and
pop
mov
cmpsl
pop
mov
out
xchg
mov
inc
out
mov
xor
pop
mov
insl
cmpsl
ret
fidivl
xchg
cmp
push
out
scas
jnp
enter
mov
jnp
dec
push
jmp
fcoml
cmp
cmpsl
dec
mov
xor
in
pop
lea
xor
mov
xchg
sti
popa
repz
clc
addr16
in
pushf
mov
inc
pop
push
leave
lahf
dec
pop
jmp
sub
mov
ror
sub
inc
loope
inc
ret
mov
into
push
pop
data16
imul
sbb
in
cmp
rolb
pop
orb
or
dec
xchg
leave
sbb
in
sub
or
xchg
lcall
int3
sub
lods
rorl
mov
push
aad
sub
cmp
xor
pop
mov
mov
xchg
xchg
rcrl
rcrl
dec
aas
mov
pop
cmp
outsb
mov
mov
pop
fbstp
inc
dec
pop
jb
test
jo
in
jb
adc
or
mov
in
pop
rcrb
call
mov
xchg
mov
je
xchg
sub
add
insb
insl
data16
pop
dec
int
jecxz
test
loop
stos
jle
lcall
cltd
cs
fistl
nop
xor
inc
mov
push
inc
xchg
ljmp
pop
aas
add
cmp
xorl
or
mov
xchg
faddl
test
in
clc
sbb
and
flds
xor
cld
outsb
xlat
jae
mov
pop
sub
je
sbb
ret
lods
cmp
dec
fisttpl
add
aam
jp
cmp
sub
ljmp
aaa
jne
mov
pop
arpl
cli
ja
fmulp
cli
mov
add
jbe
pop
mov
scas
lock
addl
scas
jbe
imul
inc
stos
cwtl
test
or
btcl
cmp
pop
pop
dec
loop
es
xchg
out
fisubrs
fs
mov
ret
pop
pusha
rorb
sbb
mov
sub
cmp
fwait
aaa
aas
enter
adc
push
jmp
loopne
jecxz
ficomps
ret
push
sub
pop
lret
lahf
rcrb
xor
cmpsb
mov
sti
mov
sti
mov
leave
jns
mov
sub
hlt
in
push
shrl
and
add
dec
hlt
cmpsb
rcll
hlt
movsb
sahf
inc
xor
sub
icebp
inc
outsb
in
xchg
pop
rcl
imul
adc
neg
xchg
movl
frstor
lock
mov
test
sbb
cmpsl
or
std
icebp
sbb
fst
mov
pop
cld
xchg
mov
push
add
add
adc
xchg
dec
jnp
test
imul
data16
mov
shrl
ret
pop
sbb
fiadds
out
sbb
mov
mov
incb
jmp
push
addr16
mov
lea
addr16
cmp
mov
inc
ret
jecxz
mov
mov
mov
hlt
dec
out
iret
lcall
stc
jbe
jo
and
pop
xor
out
xchg
xor
neg
leave
pop
loope
lahf
repnz
or
cmp
adc
push
adc
cli
cmc
or
cmp
rorb
sbb
mov
mov
loop
push
aam
out
inc
call
call
decb
pushf
pop
or
jg
test
push
cmp
jne
loopne
add
insb
mov
jecxz
add
ret
leave
pop
sub
ret
cwtl
sbb
cmp
xchg
cmp
test
mov
cmc
xor
jne
or
push
and
clc
mov
push
mov
jg
inc
movsb
adc
ret
mov
lahf
and
nop
xor
addr16
std
fs
mov
insb
jns
xchg
sahf
cwtl
rorl
mov
lcall
mov
fs
sar
pop
scas
loopne
mov
inc
aad
das
mov
lahf
repz
ret
je
in
test
mov
sub
and
xchg
outsl
lods
rorb
lret
test
and
or
mov
mov
mov
push
scas
inc
mov
aas
add
mov
aas
jae
adc
sbb
jle
sub
rorl
jl
imul
daa
add
dec
shlb
pop
bound
and
xor
lds
and
fidivl
inc
scas
mov
pop
aaa
sbb
inc
in
sbb
and
outsb
lcall
out
adc
lcall
mov
dec
and
xchg
cmpsb
sbb
pop
popa
jmp
push
fs
inc
shlb
scas
push
xlat
popf
and
dec
scas
loop
mov
or
sti
jmp
stc
or
mov
pop
flds
sbb
daa
cmp
repz
lods
push
pmulhuw
push
mov
or
cmc
daa
lock
das
sahf
mov
fs
mov
cmp
dec
shlb
adc
outsl
pop
test
rclb
inc
lret
mov
add
mov
cli
sti
mov
push
pop
dec
hlt
lcall
jg
bound
loopne
inc
das
add
mov
or
sbb
mov
fwait
pop
popf
inc
or
mov
divb
adc
inc
sti
sbb
or
mov
mov
sub
dec
jb
inc
les
push
cmp
arpl
mov
dec
insl
cmpsl
test
hlt
dec
out
ja
sub
mov
or
push
xlat
push
ljmp
es
jge
js
pushf
ljmp
stc
in
jl
loope
in
pop
or
mov
insl
jmp
je
dec
or
mov
xchg
add
push
fisubl
fwait
add
or
imul
xor
inc
sub
neg
push
jge
xlat
push
popf
es
mov
mov
xor
clc
repz
xchg
icebp
leave
lods
nop
mov
push
sub
lcall
mov
pop
push
scas
cmc
mov
jl
or
mov
rorl
les
mov
jae
shld
pop
and
cwtl
mov
sbb
ja
out
andb
fistpll
aaa
and
xchg
adc
repz
pushf
aas
and
and
or
mov
outsb
stc
adc
shr
mov
cltd
mov
mov
leave
and
mov
xchg
hlt
gs
cmp
mov
xchg
std
aad
es
lods
xchg
in
jle
sbb
push
popa
in
jl
cmp
push
in
pop
cltd
dec
test
aaa
mov
pop
lahf
aas
arpl
iret
outsl
dec
xchg
xor
dec
test
sbb
push
dec
pop
loope
cmp
repz
dec
pop
ret
dec
sar
aam
add
sbb
dec
adc
outsb
fstps
gs
xchg
mov
ss
push
cld
jg
push
scas
pop
loop
mov
fidivrl
mov
pop
cmp
lods
and
jne
popf
lahf
fstl
jae
imul
fimull
pop
loop
mov
shlb
add
or
data16
pop
arpl
push
sbb
push
pop
scas
sbb
in
mov
adc
repz
in
in
mov
jbe
lret
adc
stos
div
lret
std
jno
in
jb
stos
lds
push
mov
mov
cs
xor
test
daa
sbb
or
mov
lea
loopne
popf
loop
inc
mov
pop
mov
mov
fisubl
push
adc
jne
ja
jecxz
pushf
cmp
pop
push
xchg
add
jns
jne
jmp
and
cwtl
xchg
rcrb
inc
mov
sbb
clc
add
or
adc
std
mov
jb
enter
loop
rcll
inc
fld
push
mov
xor
aaa
stos
repnz
ss
push
sahf
adc
xor
dec
aad
sahf
jae
pop
and
fldenv
std
cmp
mov
and
cmc
outsb
adc
jne
jno
push
xor
jge
cld
lahf
in
lahf
dec
and
aaa
or
adc
inc
jae
jge
pusha
pmulhw
mov
aaa
popa
and
adc
mov
mov
ss
and
scas
xchg
jecxz
and
cmpl
es
bnd
mov
mov
in
sbb
pop
pushf
stos
insb
cmp
jae
pop
addr16
cld
mov
rorl
aad
filds
aas
and
movsb
jns
xchg
mov
outsl
jo
int
scas
adc
sub
cli
cs
out
mov
scas
test
dec
cltd
jp
aam
adc
bnd
leave
mov
mov
add
xor
xor
push
xchg
adcl
or
jmp
sbb
push
cmp
xchg
test
xor
mov
mov
inc
mov
fsubrs
and
bound
fnstcw
shlb
mov
movsl
je
mov
lcall
addr16
mov
sti
fs
out
xor
add
ret
fcoms
aam
mov
iret
js
pop
add
push
push
sbb
scas
mov
xchg
sti
dec
rorb
imul
jb
fnsave
out
lcall
dec
lea
xor
xor
imul
mov
sbb
ficompl
cli
inc
mov
popf
test
pusha
jmp
in
sti
aam
xor
add
adc
ror
in
mov
aam
mov
xchg
cltd
cli
mov
lods
lock
mov
dec
insl
push
sub
and
imul
insb
mov
jnp
xchg
out
lds
inc
in
xor
push
ret
fldl
add
int
sti
sub
nop
push
mov
inc
pop
mov
jecxz
add
shll
addl
test
or
dec
xchg
xchg
jb
lret
lcall
les
stos
sbb
sbb
fdivrl
and
mov
adc
sub
sub
adc
sub
xlat
les
jp
mov
xchg
test
dec
test
cs
or
lods
repnz
nop
pop
xchg
adc
xor
leave
lret
enter
js
mov
mov
or
ja
cmc
cmp
xchg
int
lea
fidivrl
lds
and
adc
pop
add
mov
and
lea
addr16
repnz
pop
jmp
xor
mov
push
sub
in
out
cwtl
add
shrl
jnp
sub
nop
es
pop
mov
mov
pusha
leave
adc
pop
xchg
cmc
mov
dec
sbb
mov
arpl
xchg
imulb
and
addl
inc
insb
mov
gs
inc
cmp
add
mov
adc
xor
add
inc
cmc
mov
xchg
icebp
xchg
popa
mov
or
sbb
push
cmpsb
add
inc
push
pop
jge
lods
push
data16
xchg
mov
fdivrs
or
pop
or
fyl2xp1
call
push
xchg
push
repz
inc
push
mov
inc
scas
dec
leave
addr16
mov
mov
ret
dec
and
sbb
pop
push
cld
and
push
test
cmpsb
jne
loop
jo
cltd
leave
cld
insb
sub
sbb
test
jle
jmp
imul
mov
leave
fsubp
movsb
test
movsl
push
jne
icebp
xor
outsb
in
mov
inc
js
adc
fcmovnb
add
add
push
in
adc
sub
aas
lret
shrl
xor
dec
push
in
loope
incl
gs
cmp
stc
nop
jl
cld
sbb
cmp
pop
inc
mov
pop
adc
aas
leave
idivb
jle
cmp
out
out
es
dec
xor
sti
cmpsb
ficoml
jl
jno
aas
dec
fs
inc
pop
adc
in
mov
jno
push
ljmp
inc
shl
sub
dec
inc
es
loopne
push
jmp
shrl
push
jl
test
fsts
adc
dec
xor
shlb
mov
sbb
cmpsl
jp
popf
jmp
mov
mov
xor
jl
stos
call
shll
mov
std
jb
cmp
mov
faddl
mov
jo
test
mov
lods
push
addr16
jnp
je
push
pushf
lahf
lods
add
pop
test
test
int3
adc
sbb
dec
fsubs
in
sbb
cs
adc
int
jo
sbb
inc
sbb
add
jne
sbb
adc
fisubrs
test
and
popf
jmp
data16
in
fdivp
ljmp
dec
push
out
js
arpl
out
sbb
or
and
add
adc
mov
jo
loope
mov
mov
lock
lret
ss
lock
pusha
xchg
add
pushf
sbb
cs
arpl
stos
sbb
sbb
mov
jmp
pop
jg
mov
outsb
add
scas
and
jbe
fs
and
and
mov
cmp
adc
hlt
in
add
add
enter
inc
jb
pop
incl
cmc
loop
daa
pop
dec
shlb
pop
test
insb
adc
xlat
scas
mov
in
jns
push
aas
insl
cmp
aad
add
mov
stos
push
sub
clc
mov
out
push
lock
xchg
ss
adc
and
clc
or
pop
fistl
lods
pop
scas
cmp
mov
lds
sbb
movsl
ljmp
pop
bound
inc
and
inc
mov
subb
cmpsb
mov
push
iret
adc
and
es
mov
dec
cmc
inc
cltd
push
lret
icebp
mov
adc
jae
out
xchg
mov
iret
je
adc
jne
aaa
inc
cmp
mov
cmp
lock
xchg
mov
inc
divl
imul
aaa
scas
dec
cmp
push
jo
mov
je
push
pop
lret
xor
loop
or
mov
pop
jo
int
outsb
or
into
xchg
and
xchg
sub
adc
pop
lds
xchg
add
jb
mov
cs
mov
sub
xchg
ror
mov
jb
ja
popa
mov
ficoml
sbb
dec
mov
pop
mov
xorl
in
testb
fs
stos
inc
sahf
test
lcall
cmpsb
sub
lds
outsb
cmpsb
cmp
cmp
jp
mov
fsubrs
pop
filds
roll
rclb
and
fadd
in
addb
scas
sti
lahf
test
test
jne
pop
inc
in
pop
je
scas
lds
lods
pop
outsb
fsubrl
jo
loop
jge
add
jae
popf
cmpsb
stos
lds
add
mov
xchg
sbb
xor
out
push
js
dec
sti
bound
leave
mov
pop
es
cmp
sarl
js
scas
fmuls
cmpsl
xchg
sub
out
xchg
mov
rcll
xchg
cli
nop
mov
cmp
dec
test
lret
jp
hlt
inc
jnp
mov
mov
lret
and
inc
push
das
fisubl
cmpsb
or
push
aad
pop
mov
cmp
jl
cmp
jno
in
fstps
icebp
jmp
call
adc
adc
movsl
pop
scas
imul
pushf
push
sub
pop
jg
insb
jl
sti
addr16
jo
xchg
addr16
fsubr
mov
outsb
addr16
in
and
inc
bound
sub
nop
das
stos
mov
pop
dec
icebp
les
mov
mov
sub
leave
pop
mov
repz
inc
leave
cs
mov
mov
xchg
push
ret
out
adc
in
dec
aas
or
adc
mov
mov
pop
jbe
das
mov
loope
pop
mov
adc
jl
fucompp
add
inc
movsb
cld
xchg
mov
in
mov
mov
mov
push
xchg
xchg
outsl
xchg
outsb
xchg
mov
insl
stc
loop
push
fwait
ds
les
in
fidivs
pop
imul
nop
call
sbb
movsl
cmp
push
sti
insl
push
nop
dec
or
jno
pop
xor
push
mov
cmp
in
xchg
push
insb
aas
mov
push
test
cld
xchg
add
adc
jnp
lock
jbe
mov
add
fidivrl
sbb
mov
sub
imul
lock
xor
sub
test
jl
mov
mov
out
xchg
aam
jbe
scas
cmp
les
js
out
push
jg
lds
clc
scas
stc
hlt
inc
pop
inc
popf
std
es
xchg
dec
imul
loop
xor
jmp
mov
pop
add
insl
inc
push
add
ss
jno
std
pop
cmovp
xchg
lods
dec
fimuls
pushf
xchg
sbb
fstpt
popa
repz
dec
js
sahf
out
inc
and
and
popa
adc
lods
mov
es
cmp
subb
fbld
or
push
add
decl
or
aam
popf
loope
cltd
mov
adc
test
or
cmc
jge
mov
ljmp
mov
pop
test
sub
repz
or
pop
test
pusha
pop
sbb
mov
or
sbb
xchg
or
mov
ljmp
repz
jne
rolb
push
and
mov
mov
lcall
jb
mov
es
lahf
jg
cmpsb
cli
cltd
pop
test
fsubp
cld
out
shlb
roll
add
dec
enter
addr16
or
and
stc
inc
out
and
mov
xor
call
fists
sub
ret
and
jae
xlat
insl
ret
mov
cmpsb
leave
je
mov
daa
lcall
and
mov
outsb
nop
stc
pop
pop
pusha
test
iret
jae
in
jg
mov
push
pop
mov
mov
mov
cmp
pop
mov
push
insl
mov
lcall
inc
lret
es
out
mov
bswap
xchg
pop
popf
imul
mov
dec
push
lret
and
dec
cmp
dec
pop
int
dec
push
ret
fmuls
cmp
jle
int3
lea
imul
dec
cltd
sbb
ja
sub
stc
pop
pop
add
es
dec
inc
cmp
ret
xor
mov
sub
jmp
cmp
mov
hlt
call
xchg
mov
mov
fwait
push
insl
popf
sub
popa
xchg
fs
mov
mov
xchg
nop
or
add
xor
xchg
pop
shll
add
outsl
push
and
push
xchg
pop
mov
mov
adc
or
xorl
jecxz
movsl
fnstenv
xor
mov
fdivl
and
aam
mov
movsb
loopne
sub
fadds
aas
cltd
mov
pop
orb
push
cltd
jmp
jmp
cli
fmuls
clc
jp
sub
lock
bound
push
mov
test
pop
inc
sbb
sarb
pop
into
loope
dec
daa
ret
mov
mov
dec
xchg
outsb
push
pusha
inc
pop
loope
mov
mov
int
add
jmp
sub
xchg
dec
xchg
lock
sub
divl
push
dec
dec
mov
xchg
jo
dec
pop
fs
or
and
subb
ficompl
cmp
iret
lcall
mov
jg
or
out
mov
dec
pop
insb
lea
out
mov
not
stc
push
cmp
mov
jl
iret
inc
test
out
mov
xor
insl
fidivrs
dec
mov
nop
rcrb
nop
inc
in
arpl
push
leave
push
add
add
loop
inc
hlt
mov
mov
push
loop
push
dec
jg
lret
mov
fnstcw
in
mov
mov
mov
es
inc
adc
ficomps
mov
jb
bound
mov
pop
scas
popf
mov
adc
mov
xchg
nop
sahf
pop
xchg
inc
or
pop
std
jb
pop
daa
stc
stc
pop
xchg
push
cmpb
lcall
jo
mov
push
push
fadds
out
cli
add
clc
ret
fmuls
mov
jge
or
insb
pusha
push
rolb
and
stos
ret
insb
push
dec
sub
ja
xor
addb
repz
xor
outsb
jns
pop
sub
repnz
bound
inc
out
mov
adc
enter
in
test
repnz
out
mov
mov
imulb
add
or
jb
xchg
cltd
cmp
sub
adc
xchg
cli
or
mov
pop
push
mov
mov
cli
xor
ds
inc
ret
jns
gs
inc
loope
jo
push
mov
sbb
cli
popf
jo
stos
shl
mov
leave
and
jns
mov
test
mov
sbb
xor
inc
movl
jbe
aad
xchg
or
xchg
pop
xchg
adcl
les
addr16
cwtl
cmp
cmp
add
sarb
pop
jns
sbb
je
imul
andb
or
ss
add
jae
mov
mov
into
jo
flds
ret
jbe
jae
outsb
aad
je
sub
pusha
lret
sahf
js
pop
decb
std
cmp
mov
push
sub
cmc
mov
cmp
or
outsb
jmp
xchg
push
jmp
insb
push
push
bnd
fs
lds
aaa
inc
ja
popf
sbb
jbe
adc
adc
mov
jecxz
mov
scas
jbe
shl
add
in
loopne
or
les
ret
imul
fmuls
sub
movnti
xchg
insl
inc
mov
aam
cmp
mov
scas
bnd
scas
movsl
jecxz
aad
jmp
imul
xor
movsl
jo
popl
xlat
test
loop
push
movsl
cmp
xor
das
push
mov
push
fwait
mov
sub
fstps
mov
incl
into
repz
repz
repnz
jbe
test
jp
xchg
cltd
jmp
fs
mov
data16
mov
vmovdqa
arpl
fldcw
push
mov
movsb
mov
jmp
xlat
lahf
repz
pop
push
sbbb
stc
ficomps
pop
cmpsl
dec
fdivl
popa
fucom
mov
lea
gs
lods
je
push
mov
mov
outsb
or
mov
mov
and
and
lods
push
ret
ljmp
jnp
push
ret
and
cwtl
push
js
popf
adc
cmp
das
iret
roll
dec
xchg
jecxz
jmp
pop
sub
mov
outsl
add
test
adc
cvtps2pd
add
call
mov
sahf
in
jmp
test
jno
add
sbb
lret
mul
inc
jecxz
pushf
jecxz
mov
movsl
sti
movsl
cmp
stos
cmp
xchg
sti
dec
hlt
sub
adc
and
imul
mov
test
inc
sahf
or
clc
popf
arpl
mov
add
xor
adc
scas
fwait
or
and
int
lea
inc
push
jecxz
or
daa
xchg
call
iret
fldenv
pop
mov
mov
subl
mov
jp
mov
and
mov
rol
add
lret
cwtl
add
mov
idivl
dec
dec
xor
xchg
cld
leave
xchg
xor
popf
ret
jbe
xchg
cmpsl
dec
push
mov
jmp
mov
out
and
push
mov
lret
sarl
mov
ds
add
pop
dec
inc
adc
jbe
mov
jle
pop
jnp
add
cltd
sbb
sub
xor
xor
pop
in
repnz
fidivrl
inc
flds
mov
mov
jg
sub
aaa
or
dec
ret
cmp
std
lods
or
paddusb
fwait
lock
xchg
outsl
fdivr
gs
into
enterw
inc
push
jns
or
loopne
adc
add
push
movsb
mov
js
dec
and
fwait
ljmp
mov
cltd
mov
pop
and
out
push
es
ds
and
ja
imul
mov
pop
jp
jns
mov
sarl
rorb
insb
aad
arpl
dec
ret
in
add
push
decl
int
push
popf
les
in
xor
cmp
push
pop
jg
in
xor
xchg
int3
cli
cmc
jmp
pop
dec
adc
or
pop
jg
jecxz
popf
js
jle
mov
xchg
lods
xlat
mov
adc
out
cld
xchg
mov
inc
fiadds
stos
sbb
out
push
hlt
cmp
not
jmp
jae
pushf
lcall
push
push
pop
xor
cmc
add
bound
or
aad
daa
adc
into
push
cli
mov
mov
je
fnstcw
mov
mov
cmp
cmpsl
dec
jne
adcb
and
mov
xlat
adc
arpl
aad
cmp
test
jmp
std
mov
int3
in
xor
push
xor
sub
test
cmp
pop
loop
mov
adc
stos
inc
and
lret
es
inc
cwtl
pop
add
leave
xor
mov
inc
cmpsb
test
lods
pop
jmp
mov
leave
xor
jae
jl
ret
fs
xchg
loope
cmp
inc
and
xor
xor
mov
aam
push
inc
adc
addb
leave
pusha
inc
popw
mov
lea
xchg
rep
sub
mov
ficoml
inc
fdivp
out
inc
xor
es
stos
addr16
lahf
mov
sub
and
loop
sub
iret
mov
fs
mov
loope
adc
imul
ds
arpl
andb
shrl
lea
jns
cltd
inc
xchg
and
add
and
sarb
and
insl
dec
push
jbe
pop
sbb
scas
subl
insb
dec
mov
pop
fbld
ja
sbb
dec
cmp
loope
scas
fisttpll
add
loop
push
popf
out
fmuls
mov
call
ret
sub
pop
out
jp
cld
loopne
xlat
sub
or
icebp
dec
mov
rolb
sbb
test
mov
inc
jo
sbb
xor
mov
sti
xchg
fcmovb
or
jecxz
ds
jb
lock
or
adc
ror
shll
or
fst
sbb
xorb
test
mov
rcll
movsl
sahf
xchg
xor
shrl
pusha
lods
mov
cltd
add
inc
idivb
repnz
repnz
sbb
loop
jne
mov
imul
push
push
cmp
js
sbb
int
xchg
fs
xchg
arpl
int
scas
pop
pushf
mov
repnz
movsl
xchg
cmp
mov
jmp
and
and
mov
pop
call
jg
test
ljmp
in
jmp
out
push
mov
dec
mov
sbb
out
push
push
pop
inc
out
jb
push
testl
outsb
jns
lret
popf
sti
adc
sti
inc
lahf
adc
add
xchg
inc
fistpl
dec
scas
repz
and
push
in
mov
aaa
pop
mov
cmpsl
stos
orl
cmp
jp
subl
mov
cs
les
daa
iret
stc
iret
pushf
js
fistpll
rol
pop
dec
ja
in
fcompl
sub
dec
rorb
popf
xor
leave
mov
sub
jmp
sub
xchg
mov
andb
call
pop
ss
leave
dec
mov
cmp
cltd
call
dec
or
mov
jmp
into
or
lds
lret
out
das
dec
rcrl
inc
push
mov
lret
xor
hlt
xchg
and
in
addl
add
xchg
les
sbb
adc
rcrl
dec
jb
insb
stos
gs
mov
pminsw
lods
pop
aad
xchg
mov
xchg
sub
loope
mov
push
mov
je
push
std
gs
push
push
sti
loope
and
xchg
out
sti
sub
jle
push
push
adc
in
popf
repnz
mov
jne
repnz
or
call
ljmp
mov
or
jmp
jae
dec
sti
shr
aad
test
repnz
mov
push
mov
data16
push
in
xorl
mov
ljmp
mov
js
cwtl
iret
xchg
xorb
les
jl
mov
std
mov
lahf
sti
pop
out
pushf
mov
lods
jb
mov
lds
out
dec
xor
scas
push
and
movsl
imul
and
sbb
sarl
inc
xchg
inc
gs
xor
add
adc
inc
movsb
outsb
pusha
addr16
push
mov
and
sbb
sbb
mov
mov
sub
je
rolb
pop
cld
cwtl
mov
pop
push
adc
testb
xchg
outsb
adc
and
mov
pusha
mov
ficomps
repz
dec
xlat
lods
movsl
mov
mov
aaa
dec
cmp
dec
cmp
in
cld
mov
hlt
repnz
jb
add
mov
mov
cmp
mov
add
fcom
inc
out
mov
inc
out
test
sbb
and
add
or
push
and
std
fxch
sbb
jae
addr16
gs
cwtl
lahf
jg
movsb
lods
fistl
dec
test
hlt
xor
cbtw
inc
mov
ljmp
pop
mulb
add
jl
pop
ret
jecxz
push
adc
sub
inc
pop
pop
sbb
jmp
inc
mov
dec
pusha
fidivs
ss
xchg
mov
fninit
xchg
ret
sti
sarl
sarb
mov
rorb
push
add
arpl
inc
aas
adc
pop
les
insb
hlt
pop
mov
jno
adcb
lcall
and
sbb
cmp
cmp
lods
mov
mov
xor
in
repz
inc
sub
stc
popf
dec
movsb
sub
inc
push
ret
popf
incl
outsl
adc
mull
add
dec
pop
movsl
mov
sbb
xchg
addr16
xor
xor
xchg
cmp
mov
adc
xchg
xlat
mov
cmp
push
rcr
inc
arpl
scas
loope
movsb
js
pop
movsb
mov
stos
hlt
arpl
push
aaa
mov
pop
jae
add
add
imul
cmp
mov
or
daa
push
mov
jl
dec
dec
and
js
mov
and
ficoms
pop
leave
inc
xchg
xor
inc
int
repnz
jmp
cmp
cwtl
movsb
xlat
faddl
sar
mov
sahf
nop
sub
or
insb
or
dec
adc
xlat
les
mov
test
push
cltd
cmpsb
xchg
xor
psrlq
sbb
loopne
mov
mov
popfw
les
xor
lock
setl
dec
fistps
insl
inc
imul
and
pop
jp
test
mov
fpatan
add
fbld
xchg
mov
add
aam
xor
dec
loopne
cmp
cmp
jns
xchg
jg
call
mov
add
jbe
jg
ss
jmp
mov
xchg
inc
lods
jecxz
popa
push
and
cmpsl
xor
shl
mov
cmp
into
push
rclb
push
jecxz
inc
mov
and
mov
lahf
xchg
fnstcw
pop
push
je
int
adc
jge
fidivs
xchg
sti
xchg
lret
mov
and
cmpl
inc
clc
mov
stos
mov
lea
and
loope
filds
aas
xchg
mov
xchg
xchg
xchg
pop
stos
sbbl
inc
fistps
jnp
shlb
mov
cmp
jbe
addr16
insl
jnp
sub
loopne
xchg
xor
out
add
sub
fadds
push
pop
dec
mov
pushf
pop
push
jbe
cld
cmpl
mov
jg
dec
jne
outsl
shlb
add
push
mov
mov
jge
sbb
outsb
and
inc
jns
and
inc
cltd
cmp
adc
aam
cli
mov
stos
push
mov
sahf
add
lods
fcoml
shr
subb
clc
orl
xchg
cmp
fmuls
ja
cs
je
lret
data16
jecxz
gs
aas
sub
jno
movsl
bound
popf
ffreep
sub
mov
cwtl
data16
push
xchg
and
js
or
pop
lods
adc
or
pushf
dec
mov
inc
rorl
rorl
lock
jnp
pop
aas
mov
mov
jnp
or
sub
je
loopne
sbb
std
adc
add
jbe
adc
cmp
dec
xorl
xchg
push
xchg
mov
pop
xchg
adc
test
inc
lret
cmp
jmp
push
cmp
in
shll
out
mov
xor
adc
sbb
loopne
xchg
fcmovne
sub
sub
dec
push
dec
push
fsubl
ret
jge
mov
sti
push
lcall
stos
cwtl
dec
sub
sbb
scas
jp
jbe
incb
enter
pusha
inc
inc
mov
cwtl
jmp
adc
jmp
fsubs
or
ja
adc
mov
ds
clc
in
lds
loopne
push
dec
dec
mov
out
cltd
pop
fisttpll
and
ficompl
int3
dec
repz
or
jecxz
mov
sti
sbb
dec
out
mov
xor
shlb
sti
push
loope
mov
pop
mov
xchg
jb
scas
outsb
fsubr
lret
testl
rclb
add
leave
jne
notl
shll
fildll
loope
call
xchg
popf
in
add
les
dec
add
rol
xchg
mov
and
repz
xchg
movsb
push
pop
push
sub
add
adc
push
in
inc
adc
xchg
xchg
aas
pop
lock
repnz
mov
push
out
test
xchg
xchg
jecxz
ret
sarl
or
hlt
imul
shrl
leave
leave
das
roll
out
jb
dec
mov
adc
outsl
jle
mov
adc
sbb
mov
and
xchg
cmovl
or
add
push
jmp
mov
test
adc
inc
sbb
jecxz
or
ljmp
les
popf
les
xor
mov
cmpsb
lods
loope
jg
jp
or
push
into
imul
fimuls
push
push
into
push
stos
in
clc
inc
sub
stos
sub
push
push
lea
aas
cmpsl
mov
fcoms
push
push
pop
movsb
fwait
pushf
jmp
sub
popa
adc
pop
jg
push
push
and
push
add
call
enter
aaa
cli
repz
jl
pop
mov
and
cmp
lods
sub
loope
icebp
bound
hlt
sub
adc
leave
pop
icebp
test
stos
adc
jns
int3
jge
adc
test
imul
inc
pop
and
mov
das
push
shll
iret
rolb
fcompl
stos
sar
sahf
aas
xchg
clc
push
sbb
data16
int3
mov
jg
jp
test
sbb
cmp
mov
sub
and
dec
aaa
imull
push
out
int
adc
out
jno
test
cs
sbb
mov
out
in
jge
lahf
loope
jnp
sarb
imul
push
fimull
inc
lret
add
les
imul
loope
insw
test
icebp
sub
push
pop
fists
popa
insb
or
and
jp
jp
nop
out
fwait
cwtl
xlat
sbb
cmp
xchg
mov
arpl
ja
leave
aad
lcall
push
stos
test
sub
ss
push
cltd
imul
fdivrs
inc
xchg
push
inc
mov
nop
cltd
sub
adc
cmp
sub
add
pushf
pop
insl
sub
jge
add
adc
dec
xchg
jnp
leave
fmulp
loopne
jmp
pop
pop
lock
mov
addb
cmpsl
sub
in
sub
mov
imul
movsb
in
ficoml
orl
lcall
jns
xorl
jnp
or
and
insl
dec
push
push
repz
test
std
insb
push
stos
sti
push
mov
in
aaa
or
xchg
sbb
cmc
or
fnstenv
sub
in
fldlg2
xor
leave
jb
adc
push
jmp
and
jmp
dec
push
adc
adc
adc
std
stos
repz
inc
out
cmp
mov
iret
sub
pop
add
bound
outsb
lret
cmc
inc
adc
das
ret
push
push
repnz
into
jmp
dec
mov
shl
std
mov
jge
dec
push
fsub
enter
push
dec
sub
call
mov
das
adc
ret
xchg
xor
mov
stc
add
jge
insb
or
fistps
inc
mull
push
test
cmp
stos
sub
cmp
cmc
inc
lods
sub
xor
stos
sbb
xchg
inc
inc
rolb
dec
sub
idivb
out
or
mov
adc
fsubrs
sbb
aam
fs
and
outsl
inc
jne
dec
mull
into
adc
popa
push
mov
lock
or
mov
aad
mov
outsb
adc
andb
int3
fs
jecxz
dec
lret
jp
insb
xor
clc
pop
ja
out
push
lcall
std
enter
xchg
es
add
dec
adc
adc
subb
adc
xchg
pusha
insb
test
dec
cmp
ss
imul
jle
mov
in
nop
xchg
std
test
pextrw
mov
inc
add
mov
cmp
ss
shlb
out
pop
outsb
sahf
xlat
dec
mov
mov
or
add
cmp
out
les
dec
scas
jmp
movsl
fstl
xlat
mov
push
xor
bound
cmp
andl
imul
aam
or
mov
xchg
cmp
stos
add
mull
jb
xor
push
mov
mov
rcrb
fisubl
pop
and
loope
int3
cmp
jae
jl
add
cwtl
andl
popa
or
push
in
into
dec
mov
dec
cmpsl
push
sub
dec
push
lea
push
in
adc
lret
inc
data16
sbb
js
push
xchg
scas
das
pop
cmpsl
jge
data16
and
aaa
mov
mov
add
pop
xor
int3
aam
jb
divb
rol
outsb
pop
lahf
xchg
and
test
cmovle
stc
out
push
stos
push
jl
outsl
mov
or
dec
loop
cli
iret
hlt
aam
mov
jne
icebp
data16
int3
loope
out
inc
call
int
mov
shlb
adc
dec
lcall
inc
and
sarl
and
fisttpll
pop
icebp
pop
ret
jae
cwtl
leave
jle
dec
pop
pop
popf
mov
in
pop
jbe
add
aas
out
xchg
lret
sub
xchg
adc
adc
aaa
xor
cmp
push
repnz
xchg
inc
xor
mov
adc
imul
add
notb
int
xchg
ret
mov
add
arpl
push
and
sub
out
inc
data16
fcmove
adc
lahf
mov
cs
imul
pop
rcrl
popf
notb
mov
fbstp
cmp
jle
icebp
mov
push
sahf
insb
es
sahf
cmpsb
fsubrs
lahf
cmp
sbbb
add
nop
enter
fisttpll
xor
sub
xlat
jg
jnp
xor
inc
dec
pop
xor
jae
ficompl
mov
ret
ss
sti
push
stc
mov
out
sbb
insl
push
sahf
inc
lock
dec
lods
dec
cmp
ljmp
rorl
pushf
xchg
rcrl
xor
inc
bound
adc
es
bound
cmpsl
dec
add
repz
lret
orl
int
fsub
push
in
mov
shrl
cli
push
or
orb
or
add
div
jg
push
pusha
mov
xor
xor
shl
xlat
fmuls
push
les
fisubrs
scas
mov
xor
xlat
sbb
cld
mov
arpl
insb
lret
cmp
nop
push
dec
mov
mov
pushf
mov
or
adc
push
dec
ds
idivb
add
inc
cmp
xor
mov
scas
add
sbb
inc
adc
push
aam
loope
pop
or
inc
sbb
jno
negl
mov
sub
fmuls
stos
aam
sub
jl
pop
sbb
lcall
sub
inc
xor
fadds
lahf
fldt
adc
dec
sbb
inc
ja
or
pop
cs
addr16
divl
mov
ret
sub
mov
jbe
nop
mov
movsb
stc
push
push
ror
pusha
jns
mov
gs
push
push
aad
roll
mov
xchg
and
dec
clc
loopne
fiaddl
enter
and
stc
and
repnz
mov
add
inc
loopne
loopne
rcll
mov
xor
and
stos
mov
adc
imul
out
push
test
add
jmp
add
sbb
pop
fs
les
negl
jbe
enter
pusha
jge
imul
pop
mov
in
fistps
mov
test
cmp
push
cmp
pusha
lods
jo
dec
push
dec
testl
mov
out
push
fdivr
scas
enter
adc
push
inc
inc
loop
push
mov
cld
das
outsb
lret
loop
and
jo
stos
fs
push
imul
ljmp
sti
movsl
inc
dec
xor
fwait
jo
ret
jecxz
test
inc
insb
push
loop
dec
scas
fwait
jg
flds
enter
push
jne
push
dec
inc
mov
leave
icebp
into
cmp
push
repz
ret
lods
sarb
repz
sbb
cmp
push
call
xlat
push
stos
sbb
and
out
andl
shrl
push
mov
pop
push
jmp
mov
imulb
add
inc
dec
jle
imul
jae
adc
xor
inc
dec
mov
lcall
js
fldenv
and
popa
cwtl
adc
outsl
inc
mov
inc
lret
pop
jl
push
loop
andl
imul
xor
mov
popa
cld
or
mov
mov
les
pop
cmp
scas
call
pop
xchg
mov
inc
lds
dec
pop
in
inc
push
sub
cmp
fnstcw
xchg
lret
adcl
jl
data16
das
scas
std
xchg
or
enter
sub
pop
push
enter
or
mov
test
mov
sti
push
adc
mov
push
cmp
lea
outsl
inc
push
xor
out
push
mov
cmp
inc
data16
nop
cmp
sbb
and
adc
sbb
ljmp
sbb
cmp
dec
mov
mov
lods
mov
je
mov
testl
sub
cmp
mov
dec
rcrl
sub
pop
repz
movsb
dec
adc
gs
addr16
or
cwtl
enter
data16
pop
popa
shlb
popf
cwtl
repz
mov
add
xor
data16
or
scas
imul
xor
shr
lret
flds
pop
orl
xchg
adc
mov
mov
add
add
dec
loopne
aam
adc
xchg
loop
lods
inc
push
mov
sub
lock
mov
ficomps
push
lret
sbb
inc
call
lods
andl
add
fsubl
mov
xor
push
cmp
xor
test
fs
xor
cld
bound
add
popf
push
pop
adc
into
xor
test
lcall
and
sahf
ret
dec
push
jl
add
xchg
cmp
jb
cltd
repnz
es
psrld
xor
mull
push
outsl
cld
dec
lock
adc
std
loopne
out
push
xorl
in
shll
fmuls
sbb
adc
lds
sbb
xchg
mov
mov
jg
cmpsb
lods
iret
cltd
inc
jge
mov
int3
adc
or
mov
fsubl
mov
push
lret
popa
push
add
stos
pushf
pop
cmp
test
jb
sbb
cli
bound
rorl
add
movsl
int
or
mov
ja
movsl
xor
pop
out
mov
jno
enter
xor
enter
xchg
shl
mov
gs
inc
dec
push
dec
mov
xor
inc
add
rcl
enter
fwait
push
jle
xchg
out
shll
loope
int3
inc
mov
test
or
pop
or
lret
push
pop
sbb
xchg
es
xor
inc
jmp
push
fwait
inc
mov
lcall
cli
mov
jp
push
push
push
arpl
sbb
ret
sub
lds
mov
pop
daa
sbb
pop
repnz
or
mov
push
into
inc
cwtl
cmpsb
inc
aas
stos
xchg
push
mov
xchg
sbb
into
xlat
or
push
mov
xchg
aad
cmp
lret
daa
sub
into
imul
xchg
or
push
pop
push
andl
sbb
xchg
shr
daa
mov
stc
cltd
mov
mov
repz
arpl
mov
out
mov
shlb
sub
xor
stos
rolb
nop
inc
mov
lods
rcrb
rorl
dec
mov
dec
add
pop
dec
push
lock
adc
dec
mov
lret
les
lcall
sub
fildl
iret
movb
inc
cli
mov
pop
fdivrl
cwtl
aas
enter
imul
mov
add
jg
lods
into
jle
sahf
out
mov
xchg
mull
hlt
inc
lret
lret
inc
dec
vpunpckhqdq
ljmp
stos
cwtl
push
mov
out
enter
jne
xor
and
fcomip
imul
mov
mov
popa
pushl
xchg
hlt
lahf
cmp
or
xchg
pop
out
mov
sub
test
dec
push
frstor
ror
in
je
mov
ficompl
push
jecxz
sbb
fldenv
mov
adc
pop
sub
fistl
arpl
pop
test
jp
cli
shrb
push
fs
xor
iret
inc
scas
scas
addr16
daa
int
imul
andl
mov
lock
fisttps
clc
sbb
jecxz
mov
inc
and
shll
aam
popa
xor
inc
and
pop
pop
cld
xchg
mov
adc
leave
cmp
fs
scas
setle
pushf
push
nop
gs
mov
test
insb
lret
sub
stc
arpl
xchg
mov
pushf
imul
out
pop
inc
fwait
dec
mov
flds
jecxz
cli
pop
cmp
out
or
inc
je
pop
out
lret
in
es
ja
and
bound
into
push
fwait
mov
aam
dec
mov
lcall
shrl
gs
jp
jbe
aam
out
in
fistps
cmp
dec
mov
push
jecxz
add
inc
mov
leave
sbb
mov
and
jg
or
mov
cmpsb
mov
xchg
shll
icebp
and
aas
fildl
mov
adc
imul
out
test
xchg
jmp
cmp
iret
lret
mov
mov
pop
xchg
xor
sbb
pop
popa
insl
add
pusha
js
cmp
arpl
adcb
pop
js
mov
cmc
mov
xor
iret
xor
int3
ret
adc
and
push
mov
and
adc
cli
pop
jbe
ja
push
sahf
sub
imul
and
outsl
jge
jbe
js
repz
repz
clc
fs
adc
mov
mov
mov
arpl
data16
movsl
imul
sti
push
adc
scas
inc
fstpl
ret
ret
add
and
sub
pop
lahf
sbb
jp
or
mov
mov
cli
push
xor
sahf
adc
mov
ud0
ja
push
dec
sbb
adc
pop
cwtl
sub
pop
sub
lcall
lret
aad
in
sub
fldl
int3
push
xlat
adc
lahf
enter
inc
imul
ss
xchg
inc
repz
jge
movb
imul
dec
add
dec
ret
inc
cli
loopne
xor
mov
inc
mov
pop
push
cld
data16
frstor
add
mov
out
cmpsl
fsubp
push
je
or
xchg
sub
jne
pop
push
inc
aaa
test
mov
jnp
and
or
sbb
mov
fwait
dec
jno
or
ret
enter
movsb
int3
pop
stos
mov
push
shll
pop
out
cmpb
and
in
lret
inc
pop
jg
fnstenv
lcall
mov
mov
pusha
xor
sub
ret
mov
inc
in
lock
repz
mul
cs
out
ret
pop
mov
xor
fldcw
sub
out
sarl
xor
xor
inc
jmp
fdiv
es
aas
jae
sti
call
adc
push
jmp
jge
out
fwait
jne
and
ret
lods
icebp
out
lods
mov
shll
xchg
mov
and
rorl
mov
push
adc
mov
jae
iret
and
mov
test
imul
imul
pop
push
dec
sbb
mov
dec
add
popa
inc
ljmp
push
das
push
dec
lahf
aaa
cwtl
and
xchg
nop
testb
mov
mov
inc
pusha
cmp
imul
adc
lahf
fidivrl
mov
popa
xlat
inc
hlt
insb
sbb
mov
mov
test
stos
jge
and
cli
bound
dec
pop
sti
test
pop
dec
xlat
push
mov
in
jmp
fbld
fiadds
popf
out
fsqrt
mov
out
xchg
sbb
jmp
iret
mov
inc
outsb
ret
lret
mov
loope
add
mov
xchg
push
xlat
mov
inc
sbb
rcl
cmp
rolb
adc
repz
cltd
daa
outsl
mov
or
stc
sub
pop
mov
fimuls
mov
cmpsb
xor
iret
sahf
add
aam
repz
mov
pop
test
add
icebp
pop
adc
xlat
cmp
popf
je
lds
add
mov
xor
pop
pushf
and
jo
pop
jo
les
in
cmp
test
mov
test
sbb
dec
popa
jae
and
inc
inc
lret
pop
or
add
push
lahf
fstp
das
lahf
test
movsb
adc
xlat
push
jp
jb
scas
lcall
test
lret
fldt
and
xor
mov
out
xchg
das
mov
pop
ljmp
pop
mov
rorl
cmp
push
xor
or
sbb
dec
xchg
and
lahf
mov
cmpsb
pop
hlt
ja
test
mov
jb
xchg
and
jo
out
adc
stos
out
arpl
repnz
cmc
rol
add
xchg
inc
cmpl
sbb
sbb
xor
sub
cmp
jmp
dec
loop
xchg
xchg
cmp
xor
mov
ret
pop
std
xchg
cld
mov
push
lret
lahf
or
mov
mov
aaa
mov
and
jp
out
or
mov
pop
jns
fsubrs
subl
movl
stos
mov
mov
pop
enter
push
fidivrs
inc
mov
cld
lods
cwtl
idivb
xlat
adc
push
jo
adc
mov
mov
push
mov
out
data16
push
aam
add
inc
into
ds
popf
stc
movsl
sub
in
enter
sub
cmp
leave
rcrl
in
adc
scas
dec
and
stc
stc
lods
mov
xchg
fcomip
xchg
push
inc
int3
mov
les
out
fnstsw
dec
addl
mov
test
and
dec
mov
push
mov
sub
mov
push
sbb
cwtl
push
jmp
pop
lahf
add
bound
lret
dec
or
xor
ds
shlb
jbe
cltd
pop
mov
or
ljmp
jg
fst
mov
dec
orl
pusha
push
mov
push
std
sub
mov
rcrb
movsl
leave
lods
in
movsl
inc
sub
test
ficoml
jmp
xchg
xor
inc
inc
pop
mov
cld
cmp
dec
adc
push
dec
dec
ficompl
pop
mov
inc
sub
outsl
sarb
cld
push
push
icebp
adc
movsb
sbb
pop
cltd
cmovl
sti
sub
fdivl
repnz
sbb
loop
lret
mov
mov
das
mov
xor
or
dec
push
ljmp
mov
pusha
icebp
aad
cmp
stos
pop
jbe
jne
mov
daa
adc
adc
shr
aaa
insb
into
aas
pop
lret
sbb
ljmp
subb
out
pop
add
mov
pop
ret
or
sub
mov
xchg
inc
test
push
jle
xchg
push
bound
add
push
mov
in
aaa
call
or
testl
fcomp
insl
lahf
inc
inc
inc
fidivrs
mov
sub
add
mov
jp
sub
shrb
xor
push
push
dec
fwait
push
arpl
adc
loop
lret
repz
and
xor
or
ss
adc
addr16
shll
mov
pop
ret
mov
sbbl
add
imul
pushf
add
inc
pushf
jl
incl
ss
sbb
pop
rcll
push
aas
scas
pop
jno
xor
pop
mov
icebp
cmc
mov
int3
xor
push
dec
pop
loope
sbb
xchg
movsb
mov
pop
pusha
into
test
data16
mov
or
add
aad
fwait
jge
and
add
sbb
fsubrs
sub
mov
fistpll
mov
cmpsl
andl
inc
add
push
push
and
out
test
mov
popf
cmpsl
mov
cmp
cltd
lods
int3
sub
leave
test
daa
bound
les
dec
sets
pop
mov
mov
push
and
mov
sub
sbb
jo
test
lret
out
mov
push
loop
dec
repz
xchg
fsubs
jae
lods
cmpsb
sbb
std
psrlq
scas
cmpl
fmuls
shl
clc
mov
fadd
fistpll
fstps
mov
arpl
push
out
bound
adc
cmp
push
mov
ja
mov
xorl
in
daa
jo
cmp
mov
or
adc
mov
aaa
dec
dec
aaa
pushf
push
adc
test
cmp
lea
stos
sahf
xor
or
test
ljmp
lea
dec
adc
ss
cmp
push
outsb
aad
jnp
mov
lds
and
xor
cli
inc
insb
dec
dec
mov
or
fldl
sbb
cmp
jecxz
inc
insb
imul
lret
pop
add
je
lds
std
mov
test
inc
adc
cmp
xor
or
lods
push
bound
daa
pop
mov
mov
jns
sahf
and
jmp
ss
and
sarl
sbb
shll
dec
mov
add
xor
std
out
xchg
enter
in
mov
sub
popf
xor
and
lds
jb
adc
and
stos
subl
fldt
jg
insl
daa
mov
test
jmp
ret
shr
xchg
icebp
std
cld
mov
pop
add
iret
test
pop
inc
xchg
in
jg
popa
aas
sbb
and
and
stc
js
movsl
sub
pop
mov
repnz
cwtl
pop
and
inc
push
dec
add
mov
push
cmp
jb
mov
xor
daa
nop
lock
push
int3
daa
xor
dec
aaa
xor
jp
das
adc
xchg
clc
hlt
mov
aam
jmpw
pushf
sysenter
aaa
jl
in
test
jo
adc
fwait
push
cmp
stos
mov
daa
jmp
daa
test
dec
xlat
and
aaa
adc
xor
adc
cmp
push
mov
dec
loopne
jnp
mov
in
cmc
or
or
inc
addr16
lahf
sub
cmpl
into
jns
jne
push
lcall
dec
adc
cwtl
push
lret
fcomps
push
mov
push
adc
in
xchg
test
movsb
cltd
ds
push
fsubrs
dec
cmp
lret
std
test
imul
ja
and
shll
lret
sub
insb
mov
es
lret
xor
pop
pop
adc
fisttps
mov
xchg
and
or
or
iret
push
inc
scas
push
insb
sbb
sub
popf
scas
or
lret
pop
fnstcw
test
dec
pop
fisubrs
jecxz
sti
xchg
dec
and
push
sbb
repnz
dec
xchg
sarl
imul
inc
pop
jo
inc
mov
fs
popa
inc
imul
dec
or
icebp
pushf
imul
notl
sub
cs
icebp
dec
popa
and
repnz
in
pop
jge
sub
mov
data16
std
xchg
or
lds
mov
or
stos
cs
call
rcll
pop
in
pop
pop
mov
daa
mov
dec
fistl
xchg
cmp
inc
sub
lret
leave
inc
insb
ficompl
pop
and
lea
push
cwtl
or
pop
pop
xor
loopne
dec
lods
or
mov
adc
jno
adc
xor
decl
mov
mov
push
stos
clc
mov
push
out
cltd
imul
jns
push
xchg
dec
mov
adc
cmp
add
push
dec
js
pop
test
mov
dec
mov
mov
mov
test
cmp
loop
cltd
pop
imul
scas
icebp
stc
mov
adc
aad
out
mov
pop
mov
bnd
push
fsubl
dec
or
stos
nop
adc
pushl
adcl
pushl
popa
mov
fucompp
pop
out
out
jb
cmp
add
lret
stos
lds
xchg
test
adc
cwtl
movsl
add
pushf
pop
mov
repnz
xor
push
cmp
jg
pusha
inc
adc
push
jle
push
sub
aad
ret
loopne
sub
mov
or
fwait
xor
les
test
sbb
mov
mov
add
aas
dec
mov
xor
mov
sahf
mov
imul
push
jecxz
test
inc
fidivs
outsb
mov
inc
xchg
je
or
jne,pn
movsb
leave
out
jl
scas
stos
out
fistps
int
push
sub
stos
scas
gs
sbb
fdivr
lea
and
jge
jae
imulb
inc
mov
xchg
test
sbb
cs
adc
push
dec
mov
pusha
inc
jl
jp
cltd
xor
int
cmc
push
and
clc
cmc
and
movsb
xchg
xor
xchg
je
pop
push
adc
dec
mov
cmpsl
testl
mov
rorb
into
int3
add
mov
sub
das
add
sarl
data16
and
imul
xchg
lds
push
jmp
rorb
ss
dec
dec
mov
mov
aaa
arpl
jp
sub
xor
fdivl
aam
dec
aad
adc
inc
mov
jmp
dec
push
jg
push
xchg
mul
xchg
mov
mov
sub
hlt
cmp
inc
fs
or
dec
inc
push
xor
bound
aad
pop
and
mov
sbb
inc
mov
lds
mov
popf
mov
nop
stos
xchg
dec
jl
jp
xchg
stos
out
inc
adc
xor
daa
cmp
orb
dec
lcall
int3
push
push
jecxz
fnsave
leave
xlat
push
out
and
and
mov
inc
xchg
xchg
add
xor
dec
sub
lcall
loopne
mov
or
mov
js
mov
push
adcl
mov
stos
iret
test
pushf
add
push
xor
sub
popa
sub
int
xchg
sub
repnz
jecxz
scas
jo
imul
dec
mov
mov
jg
cmpsb
lret
dec
cwtl
aaa
out
cmp
pop
cmp
push
daa
sbb
jae
jg
mov
nop
adcl
adc
mov
push
push
xor
cmc
sbb
cwtl
data16
fidivrs
loop
movsb
cltd
pop
ret
cs
xchg
repnz
adc
jecxz
adc
shrl
loopne
sbb
pop
call
xor
clc
pop
stos
ljmp
inc
xchg
pop
addl
das
dec
das
push
gs
jno
repnz
sbb
add
mov
pop
fxch
popa
lods
xor
inc
movsb
xor
add
cmc
or
shlb
xor
or
lock
loop
scas
sub
xchg
push
sub
ljmp
and
xor
cmp
icebp
adc
inc
xchg
repnz
mov
insl
in
loope
mov
jbe
repnz
inc
pop
lods
mov
add
lcall
xchg
inc
mov
fcmovnbe
cmp
scas
test
aaa
dec
sub
xchg
push
cwtl
cmp
stc
rolb
movsl
test
or
cmp
jle
clc
xchg
test
popa
arpl
dec
dec
jae
adc
mov
dec
rcr
cli
int
mov
or
fisubl
inc
mov
ret
insl
icebp
cmpsl
push
mov
fdivrs
ret
popa
push
add
mov
repz
cmp
js
mov
jnp
add
mov
out
cmpsl
bound
jae
add
movsl
inc
xchg
repnz
aam
push
sbb
lahf
dec
push
cltd
dec
loop
cmpsb
jno
mov
mov
dec
push
dec
repnz
pushf
pushf
lds
add
icebp
mov
jo
push
incb
xchg
cwtl
inc
stc
sbbb
aas
ficoms
mov
mov
mov
outsb
dec
sub
push
cmpsl
adc
push
jge
repz
outsl
jmp
lods
sbb
pop
nop
add
mov
sub
xchg
lods
adc
pusha
cmp
jnp
cmp
push
ss
ds
and
mov
xorl
pop
jmp
xchg
fsubrl
or
cwtl
aas
mov
adc
aad
adc
add
dec
adc
stc
add
or
pop
mov
pop
jnp
int3
cmpsl
cmpsl
or
mov
mov
dec
pushf
dec
fisubs
adc
out
cmp
cwtl
mov
subl
mov
xor
mov
cmp
push
jnp
adc
jns
mov
fnstsw
js
and
ret
outsb
add
pop
mov
stc
mov
scas
lods
adcb
jge
mov
mov
imul
ss
mov
push
std
bound
ds
hlt
andb
out
push
dec
jbe
cs
shll
push
scas
push
pop
push
lods
mov
bound
push
mov
ret
and
popf
sbb
or
js
adc
std
divl
mov
mov
mov
add
cmp
jp
dec
pusha
xor
xchg
push
and
int3
fistl
cmp
cmp
arpl
push
shl
cmp
inc
in
mov
nop
push
movsb
push
or
jg
hlt
pop
mov
inc
lret
push
aad
push
jno
fstps
cmp
add
cwtl
insl
clc
ret
lcall
jne
pop
loop
xor
mov
cmc
aad
or
outsl
insb
jmp
adc
mov
add
and
push
push
lock
mov
mov
lds
add
test
repnz
out
loope
mov
push
aam
push
push
xchg
dec
test
adc
test
cmp
cld
dec
shlb
lret
add
xchg
fucomp
sahf
out
addb
mov
cmp
fs
loope
push
out
jns
add
adc
mov
push
int
cmc
cld
adc
jno
inc
test
int3
sbb
lds
adc
mov
adc
and
nop
dec
lahf
lcall
xor
popa
std
dec
jmp
push
or
leave
icebp
jae
lock
aas
in
test
add
js
imul
xchg
pop
jbe
std
lea
ja
sahf
shl
out
adc
dec
int
add
insb
in
lcall
lret
dec
cltd
addb
cltd
mov
fbstp
fadds
test
adc
repz
sbb
or
mov
ret
inc
xchg
and
mov
add
in
push
jg
pop
outsl
stc
insb
out
mov
nop
notl
hlt
arpl
lea
push
inc
pop
imul
mov
dec
inc
addb
sbb
popa
add
fsubrs
push
ret
mov
bound
mov
pop
and
push
lret
call
les
xchg
xchg
inc
jnp
mov
ljmp
xor
add
add
cmc
ja
into
jb
inc
repz
or
cltd
pop
int
xor
jge
mov
int
les
inc
sbb
sub
add
out
mov
inc
and
adc
out
push
cs
repz
cmp
loop
sbb
ja
xor
push
cmp
outsb
pop
cltd
scas
cmp
push
pop
and
push
jge
out
fiaddl
pushf
and
mov
inc
mov
mov
repnz
scas
pop
stos
sahf
shll
repz
mov
imul
inc
xchg
sub
in
lret
repnz
addr16
setno
cmp
mov
and
lock
jno
mov
cvtpi2ps
mov
push
pop
adc
sub
cli
sbb
cltd
jne
inc
sbb
je
mov
shr
dec
shlb
mov
cmpsb
jmp
in
sbb
mov
stos
mov
xor
enter
js
mov
enter
fwait
ret
clc
icebp
push
cwtl
call
push
jg
in
lcall
push
jg
pusha
adc
icebp
les
mov
or
aam
mov
cltd
or
lds
ljmp
fadd
cli
mov
out
rclb
push
mov
dec
adc
adcl
shll
dec
movsl
fbstp
cmp
or
ds
rorl
mov
out
popf
pop
mov
movsl
mov
dec
hlt
mov
xchg
and
je
xor
inc
pop
xor
push
add
and
outsl
push
iret
mov
xchg
cmpsb
and
mov
stc
popf
sahf
mov
sub
add
lea
push
daa
mov
ljmp
stos
mov
mov
mov
sub
lock
fnstcw
dec
mov
and
in
shl
adc
roll
add
imul
loopne
xchg
add
fldt
shlb
lock
push
jnp
xchg
out
mov
jo
dec
in
movsb
hlt
inc
pop
data16
sub
xchg
pusha
mov
aas
cmp
out
mov
popf
imul
out
cmp
shrb
xchg
xor
notl
cmp
out
inc
out
loopne
mov
sar
xchg
inc
dec
mov
and
imul
cwtl
pusha
adcl
push
xor
out
pop
push
fwait
inc
inc
fs
insl
sbb
in
xor
cmp
or
aas
pop
pusha
cltd
loop
sbb
addr16
js
adc
pop
fyl2xp1
xor
push
aas
sub
mov
loop
pop
sbb
cmp
push
lcall
dec
push
insl
jmp
sub
ja
in
mov
sub
xchg
ret
imul
je
sbb
sub
sub
shll
or
push
hlt
add
adc
dec
fisubl
enter
xor
into
aad
loopne
xor
adc
mov
lcall
sbb
outsl
xchg
push
cmpsb
sahf
out
xchg
dec
push
mov
into
dec
mov
pop
test
pop
lret
mov
mov
ljmp
or
jge
jo
xor
push
push
shl
sub
inc
adc
dec
lahf
in
jge
add
mov
fcoms
mov
xchg
xor
and
inc
popf
jbe
and
adc
mov
rcrb
insl
mov
mov
cmp
psubq
and
mov
ret
dec
popf
in
pop
cmc
jnp
dec
pop
jne
cmpsl
ja
inc
test
call
mov
cmp
mov
bswap
lock
les
cmp
ffreep
pop
sti
shrl
les
cmp
or
xchg
cld
andb
mov
jmp
sar
stc
xor
push
add
cmp
je
xor
shlb
xor
jbe
pusha
fdivrs
shll
push
insl
sub
je
sub
lret
push
xor
popl
pop
push
mov
in
cmpsb
cmp
jmp
sbb
and
add
hlt
pop
inc
movsb
push
inc
scas
push
xor
mov
lcall
xchg
push
lods
insl
inc
and
cmp
hlt
add
pop
ss
sub
xor
mov
add
adc
push
xor
dec
push
and
sub
sti
jno
mov
jecxz
push
stos
fisttpl
mov
dec
inc
xchg
fidivrl
cmp
add
das
pop
and
xor
pop
enter
xor
pop
mov
push
scas
pop
aad
sbb
pusha
orl
dec
jp
and
into
into
mov
lea
call
gs
mov
fisttpll
pop
adc
cli
test
sti
jle
mov
inc
inc
inc
cmp
jnp
test
sub
push
or
aam
add
clc
mov
inc
jo
in
aad
jae
scas
jecxz
into
mov
jp
mov
mov
jecxz
pop
das
sub
std
mov
hlt
push
jmp
sahf
fsub
xchg
sub
arpl
or
fstpl
pop
dec
inc
push
mov
dec
cli
cmpsb
mov
fstl
fisubl
aam
mov
add
mov
outsl
xchg
jne
inc
jle
cmc
mov
push
testl
pop
pop
mov
jge
dec
sbb
ds
add
cwtl
cmp
pminsw
xchg
xchg
test
xor
popa
cld
cmp
dec
fdivrp
pushf
aas
jmp
xchg
sub
out
rcrl
mov
out
sbb
sbb
loop
sub
das
xor
out
mov
xchg
leave
or
ret
push
pop
test
mov
fidivrs
mov
add
loope
sub
out
clc
dec
pop
push
aad
mov
dec
lret
sub
jmp
fs
fs
adc
pop
xor
mov
aas
mov
outsl
imul
xlat
adc
scas
pop
call
stc
and
cmpsl
das
mov
lds
sub
pop
mov
jae
pop
pop
cwtl
dec
and
pop
cmp
jnp
js
or
nop
push
lcall
pop
adc
mov
rcll
sub
nop
inc
adc
pop
clc
andl
mov
lds
mov
fwait
cmp
sbb
push
rcll
mov
mov
jmp
and
popf
or
std
in
fsubl
icebp
push
aas
iret
mov
rcrl
jb
notb
daa
inc
mov
pop
sub
xor
mov
mov
int3
jge
xor
inc
inc
jns
leave
in
sub
loop
push
push
je
insb
mov
cmpsb
loope
call
push
adc
pop
sbb
push
push
iret
in
mov
mov
jg
dec
pop
sbb
dec
outsb
mov
xchg
mov
shl
hlt
scas
sub
mov
stc
xor
fistl
xor
mov
imul
roll
push
comiss
adc
mov
xor
jp
inc
jb
sbb
fcompl
aam
pop
stos
enter
xor
in
inc
mov
inc
scas
adc
xor
enter
cmp
inc
aas
ljmp
arpl
addl
cmpsb
test
mov
hlt
mov
cmc
inc
jns
fisttps
mov
jp
mov
cli
dec
loope
push
icebp
scas
loop
push
lea
movsl
mov
push
mov
or
mov
iret
adc
jmp
insb
sti
push
pop
arpl
sub
es
mov
xor
cmc
jns
out
cmpsb
add
mov
dec
push
mov
jg,pt
imul
inc
or
sbb
push
iret
mov
push
push
sub
or
push
xor
int3
xor
mov
stos
and
mov
jno
cmpsl
pop
arpl
es
enter
call
aaa
out
inc
fiaddl
jo
jle
mov
xor
jb
adc
inc
loop
js
mov
sub
aaa
int3
sub
push
pop
sahf
xchg
ret
testl
scas
scas
adc
les
sbb
pop
push
loop
sub
inc
and
inc
scas
test
leave
push
cmp
out
or
sub
sahf
fwait
call
lahf
mov
push
in
inc
xchg
out
ret
mov
ja
push
push
dec
enter
pop
popa
sbb
xchg
icebp
ficompl
sub
mov
les
xorb
fsubs
xchg
loop
xor
lcall
sbbb
addr16
push
lds
xchg
add
mov
jl
fcmovnbe
push
sbbb
mov
xchg
jo
jae
fdivrl
psubsw
add
xlat
repz
pop
or
mov
pusha
jns
inc
icebp
es
or
popf
push
sbb
adc
push
push
jns
lods
add
in
push
dec
roll
lret
mov
popa
mov
fs
pop
addr16
ret
jecxz
shrd
mov
and
shl
addr16
lcall
mov
mov
clc
rorl
push
mov
int3
cwtl
cli
mov
inc
mov
mov
sbb
xchg
lahf
or
cmpsb
sub
mov
and
cltd
pop
and
ss
inc
push
icebp
mov
fists
xchg
pusha
fsubs
sbb
lret
outsl
mov
loop
into
filds
sbb
adc
and
and
data16
cs
scas
jno
sbb
in
ret
xchg
pop
es
popf
idivb
int
push
jl
stos
push
and
pop
mov
out
in
add
je
in
jns
fdivl
push
ret
sub
cmp
jl
mov
call
dec
sbb
dec
and
or
aaa
aam
popa
dec
std
nop
sahf
imul
outsb
xchg
movsl
arpl
jl
inc
repz
enter
cmpsb
fisubl
inc
add
lea
adcl
mov
add
and
lret
repz
push
mov
push
ljmp
loope
push
sahf
ja
call
jo
mov
pop
fcompl
aam
dec
insl
xlat
jmp
pusha
xlat
add
add
bound
inc
cs
ljmp
xor
pop
jae
mov
push
jmp
and
xlat
add
mov
push
sub
faddl
mov
mov
sbb
ficoms
sbb
enter
fiadds
mov
cmp
xchg
rcl
std
fstpl
cmc
jo
cwtl
int3
cmp
add
jo
mov
inc
push
mov
sbb
push
adc
inc
fs
dec
jl
inc
cltd
xchg
popf
push
cs
cli
and
lock
xor
das
sbb
adc
outsl
insl
add
jge
and
jg
ret
push
outsl
mov
xor
imul
adc
jg
call
int3
insb
stos
shrb
xor
push
ja
mov
jbe
mov
push
lcall
cmp
fs
cmpsl
rorl
fsts
call
push
fs
add
lock
xor
xchg
dec
xor
and
mov
notb
and
and
lret
sarb
lea
out
pop
sbb
push
jns
xchg
shrl
and
das
sub
lahf
mov
jg
jno
inc
icebp
jle
jmp
lds
jb
and
fprem1
xor
mov
ss
scas
cs
inc
stos
mov
mov
out
test
mov
imul
out
pop
mov
pop
xor
outsb
inc
dec
push
inc
push
fistpll
or
shll
sbb
xor
sbb
into
push
into
mov
adc
scas
sti
jmp
push
and
adc
les
sub
xor
jl
in
adc
bound
xlat
inc
inc
outsb
or
mov
stos
cmc
pop
xor
rcrl
mov
xchg
lods
sbb
dec
sbb
push
push
out
bound
sbb
das
imul
lods
push
or
jbe
hlt
cmp
sub
adc
push
lea
push
movsb
jecxz
xor
movsb
lret
fdiv
jmp
mov
push
data16
dec
and
jbe
mov
inc
and
je
stos
pop
jbe
adc
and
leave
scas
daa
push
jns
push
bound
test
xor
push
jle
inc
out
in
jbe
jbe
sub
lret
ret
fwait
mov
fdivrs
sahf
packuswb
mov
lock
dec
sbb
sahf
clc
cs
mov
inc
and
fcoml
fcmovbe
fcom
mov
xchg
jns
jmp
fimuls
pop
pop
jg
jmp
mov
int
inc
in
cli
sub
dec
cld
into
add
dec
stos
test
xorb
xchg
rol
mov
fwait
xchg
inc
ret
mov
out
rcr
ja
mov
xchg
pop
outsb
shrl
push
inc
leave
ja
inc
aad
and
inc
insl
mov
cld
ja
sub
mov
adc
imul
mov
pop
cmp
jbe
outsl
js
push
pushf
test
adc
mov
enter
ljmp
dec
lcall
test
pushf
in
pop
sti
mov
inc
test
in
jmp
pop
inc
ds
popa
mov
pop
and
cld
inc
pop
mov
mov
add
sub
pop
loop
iret
mov
call
movsb
or
or
and
adc
sub
xor
cmp
mov
shlb
sbb
xchg
mov
arpl
mov
ficomps
mov
and
sub
pop
mov
sbb
xchg
sti
push
jle
cmp
pop
xchg
cmp
add
fldt
aas
aaa
pop
xchg
inc
idiv
mov
bnd
movsl
and
repz
in
inc
std
xchg
in
cltd
movl
flds
aaa
adc
dec
sub
es
lss
add
mov
bound
stos
add
or
fwait
cmc
mov
mov
fcmovu
sbb
movb
in
inc
enter
and
push
pop
fld
mov
lcall
popa
aas
fs
paddusw
mov
xor
mov
xor
mov
jae
mov
jmp
sub
fstps
iret
out
loope
test
addr16
fcmovb
fucomp
sub
subl
pop
mov
lcall
arpl
insl
dec
or
adc
int
dec
mov
add
popf
fsubrl
cmpsb
bound
push
push
pushf
pusha
mov
jb
pop
mov
cltd
add
xchg
mov
push
add
fsubl
cltd
xlat
dec
lret
iret
imul
ljmp
enter
aas
sub
push
jge
cltd
out
daa
xchg
fistpl
hlt
ret
les
jmp
or
cmp
mov
popf
mov
xorl
add
sub
push
sbb
xchg
jb
jno
push
lods
into
inc
dec
push
mov
dec
jbe
dec
cmpsb
push
pop
inc
inc
arpl
cmp
jecxz
stos
xor
inc
leave
lods
push
push
add
xchg
mov
pop
out
or
sbb
loope
mov
js
xor
xor
stc
cmp
mov
mov
xchg
adc
push
fldenv
repnz
imul
ja
add
inc
scas
cmp
cwtl
sar
outsl
test
xor
sbb
sbb
mov
dec
movsl
pop
std
push
mov
mov
pop
sahf
sub
ljmp
mov
cld
cmp
test
stos
popa
xchg
fidivs
fcompl
pop
sub
negl
stos
mov
mov
xorb
xchg
call
fwait
outsl
push
dec
stos
cmp
pusha
jl
ret
repnz
jne
mov
fcmovnbe
push
mov
dec
ja
outsb
add
jmp
cs
or
jo
adc
and
cld
insb
xchg
pop
stos
inc
mov
jp
dec
mov
pop
or
jp
and
pop
jmp
push
dec
lret
mov
fbstp
enter
inc
sarl
imul
inc
test
insb
inc
jle
and
sbb
xor
test
scas
add
mov
inc
sbb
outsl
sbb
js
adc
sahf
std
pop
dec
test
fdivrs
dec
stos
loopne
pop
in
cmpsl
adc
cltd
cmp
mov
in
int
xchg
pop
jg
mov
int
xchg
shr
mov
dec
and
cwtl
and
out
push
and
sub
ret
pop
cmp
andl
adc
icebp
fs
jne
out
out
adcl
in
jge
lcall
jle
ds
pop
imul
imull
and
xchg
inc
lahf
jmp
sub
sti
dec
cs
jp
adc
mov
cmp
lea
push
jnp
divb
loope
push
xor
dec
cmp
mov
fidivrs
xor
add
xlat
mov
or
pop
sub
repz
adc
lahf
xor
pushf
shll
ficoms
xlat
jp
pop
cmp
lahf
orl
push
or
ljmp
jb
cmpsb
xchg
cs
sbb
cltd
cmp
stos
pop
jbe
shll
sbb
notl
je
insl
adc
mov
cmp
fisttpll
jp
out
dec
pop
sbbb
icebp
mov
aas
push
popf
mov
dec
movsb
mov
pop
or
cmp
ljmp
mov
aad
pop
mov
out
sahf
notl
fsubl
jns
cli
pop
push
test
xor
jge
pop
pushf
test
or
dec
insl
mov
addr16
pusha
xchg
lea
cld
shl
adc
jg
mov
push
push
xor
add
adc
mov
lahf
pop
adc
push
call
jmp
daa
xor
push
leave
xchg
sub
inc
sub
jmp
xchg
push
jecxz
ljmp
sub
push
les
inc
mov
pop
test
mov
sbb
aam
mov
add
sub
pop
lods
or
adc
imul
shrb
pop
andl
cmp
inc
insl
insl
ds
repnz
jge
xor
inc
or
mov
into
imul
cmpsb
call
jecxz
xor
out
and
mov
mov
ja
xor
push
in
test
inc
and
imul
pop
enter
test
lods
lods
mov
mov
and
shlb
addl
daa
add
add
xor
and
insb
fdivr
out
xchg
mov
lock
pop
fiaddl
jbe
sub
add
or
pushf
cld
clc
sar
imul
jb
and
stos
pop
mov
cmpsl
and
ss
pushf
in
mov
jne
cmp
out
in
shrl
imulb
cmp
xor
lret
xor
stos
leave
hlt
popa
mov
pushf
movsl
repz
shlb
loopne
loop
adc
adc
aas
dec
out
xchg
leave
out
inc
and
jecxz
and
lahf
scas
mov
fmul
dec
ret
ret
hlt
adc
or
pop
or
mov
aaa
xchg
jp
hlt
mov
jae
hlt
mov
mov
cs
pop
into
fcomps
leave
sti
hlt
test
mov
adc
and
das
sbb
dec
incb
lock
sub
jp
and
inc
call
and
xchg
mov
test
mov
mov
ret
andb
std
push
pop
sub
movsl
cmc
or
or
pushf
lock
cli
andl
cmp
mov
cmpsl
test
mov
in
push
mov
and
insl
push
cltd
sub
dec
sbb
cwtl
mov
inc
xor
sbb
add
je
lds
outsl
push
aad
sarb
pop
mov
enter
les
outsb
ss
out
inc
iret
pop
ret
popa
dec
push
add
aad
and
cli
and
pop
xchg
dec
push
fisttpl
sub
pop
jmp
rorl
js
cmpsb
inc
lcall
xchg
pop
faddl
ljmp
or
outsb
add
ss
jae
js
push
cmp
lcall
stc
sub
xchg
aas
lock
push
enter
xchg
imul
pop
mov
mov
mov
ds
aas
lds
in
leave
aaa
mov
or
jmp
adc
adc
mov
insl
pop
inc
dec
test
cmp
adc
repnz
mov
fidivl
dec
cli
lret
ja
and
faddl
test
push
repz
push
ds
dec
push
mov
test
int3
push
xchg
xor
jo
lret
mov
dec
bound
push
lret
cwtl
movsb
roll
xchg
call
dec
xchg
mov
jp
scas
push
in
lea
dec
jge
mov
sub
popf
push
js
mov
add
cltd
data16
bound
adc
js
stos
add
and
sbb
xor
aas
xor
icebp
repnz
gs
mov
pop
repnz
mov
cmp
push
push
cmp
jg
sbb
std
xor
in
and
ret
pop
mov
scas
sub
js
shl
cwtl
das
nop
adc
pop
fisttpl
icebp
fs
stos
and
ffree
mov
shr
icebp
lods
ljmp
push
mov
and
sub
out
rolb
mov
adc
loope
repz
pop
dec
inc
sti
jno
or
ret
dec
mov
dec
call
push
adc
fsub
frstpm(287
pop
xchg
negl
add
fnstcw
or
subb
pop
nop
jmp
jl
fisttpl
inc
mov
xchg
mov
out
xchg
mov
inc
inc
out
nop
pop
jns
push
bound
lahf
pop
cmc
mov
jne
sub
xchg
xor
jg
cmpsl
pop
and
pop
incl
cmp
jo
and
rcll
jbe
pop
call
mov
mov
in
mov
xor
scas
decb
fmul
cmp
xor
dec
cmp
mov
cmp
cmp
test
insb
sbb
out
nop
jbe
rorl
mov
mov
xchg
call
fwait
notl
xchg
xchg
xchg
pop
pop
cmp
imul
outsb
inc
insb
pushf
cwtl
clc
xor
mov
into
aam
nop
leave
inc
mov
int
insb
out
or
xchg
xchg
lock
and
pushf
movsb
xor
movsb
stos
xorl
dec
adc
aam
fcomps
or
icebp
mov
ljmp
add
push
out
mov
push
jge
ret
cwtl
inc
arpl
mov
mov
sub
mov
adc
scas
push
lret
out
xchg
add
js
fadd
arpl
dec
inc
mov
cmp
jmp
and
xchg
mov
push
adc
mov
cmp
lahf
dec
pop
xchg
faddp
outsb
cmp
das
push
sbb
mov
movsb
ljmp
pop
cmp
loope,pn
jg
or
decl
or
loop
or
cld
in
dec
sub
jne
pusha
insb
push
pop
inc
xor
pop
stc
adc
add
cmc
xchg
fcoml
push
cmpsb
orb
and
sbb
mov
popf
shrl
inc
pop
stos
aas
or
push
pop
lahf
xchg
out
xor
mov
fsubs
lods
push
jae
push
nop
popf
out
lret
cmpsl
outsl
xchg
cmp
inc
adc
sahf
cli
data16
loope
pop
push
inc
xor
push
jnp
sub
add
sub
and
in
xor
popf
dec
mov
or
jecxz
xor
das
cmc
adc
pop
xchg
test
inc
popa
or
popa
popf
gs
jo
data16
outsl
sbb
mov
inc
iret
sub
in
pop
add
sub
into
mov
cs
push
ja
and
scas
sub
push
popf
push
scas
push
xchg
inc
add
lods
mov
sahf
test
dec
cld
outsb
pushf
mov
cmp
imul
xchg
push
or
push
mov
mov
icebp
dec
testb
imul
test
sarl
aad
mov
sub
aas
incl
test
std
cltd
xchg
addr16
mov
push
pusha
xor
sbb
xor
xor
arpl
das
fcomps
and
leave
mov
aad
out
pop
mov
cmp
stc
pop
dec
sbb
enter
or
dec
mov
jmp
xor
sahf
add
pop
push
cs
gs
pop
aaa
xchg
test
xor
nop
add
dec
mov
cmpsb
outsl
adc
fnstcw
loopne
clc
enter
pop
nop
ljmp
and
jge
jbe
lods
pop
dec
sub
leave
pop
adc
xor
dec
mov
cmpsl
sbb
xchg
mov
mov
xor
push
jns
pop
dec
push
or
adc
imul
pop
lods
pop
stos
pop
daa
adc
inc
in
mov
cs
jnp
mov
subb
test
pusha
rcrl
out
clc
push
dec
imul
mov
cli
sub
jns
xchg
addr16
mov
mov
sbb
ds
insl
pop
xchg
imul
add
pop
pop
cld
fnsave
and
cli
daa
mov
das
xchg
mov
jle
adc
xor
shll
mov
xor
cltd
fidivrl
push
pop
stos
lock
repz
push
mov
repz
xchg
test
test
jbe
insb
fisubrl
outsl
sbb
into
ds
sub
adc
mov
stos
sti
sub
sub
into
mov
imul
test
mov
sub
ret
or
xchg
imul
stos
in
loope
pop
add
add
hlt
sbb
lods
pop
in
xchg
xlat
in
sbb
xor
xchg
lret
arpl
and
xchg
xchg
icebp
jmp
sub
imul
lret
add
dec
jge
add
fstps
out
or
fldcw
mov
das
or
mov
fidivrs
or
fmull
cld
hlt
jnp
push
movsb
int
xchg
dec
movsl
outsl
loop
push
sbb
loope
fisubs
sbb
push
jp
insl
adc
push
and
lcall
das
es
sbb
push
cwtl
inc
xchg
es
jne
dec
gs
xor
cmc
push
mov
mov
movsb
push
loop
xor
adc
out
clc
scas
jl
jnp
aad
inc
jge
sub
push
sub
movsl
notl
enter
aaa
sub
mov
shl
lods
pop
movsl
sub
mov
fisttpl
lds
mov
cmpsl
inc
subb
pop
ret
or
mov
xor
xor
mov
out
mov
movsb
fwait
cmp
mov
fsubrl
adc
jae
mov
fs
or
cmp
sbb
cwtl
lcall
pop
adc
lret
jb
dec
pop
sahf
mov
fmul
push
jns
mov
jle
loop
sbb
inc
mov
push
mov
dec
sub
sahf
xchg
pop
inc
mov
into
pop
jecxz
repz
pop
push
mov
cs
les
mov
leave
or
int3
iret
adc
aad
or
int
pop
pop
cmc
jmp
mov
jae
in
call
xchg
sub
add
leave
repnz
subb
mov
loop
lret
push
add
stos
sub
sti
das
jae
lods
mov
push
adc
mov
movsb
enter
push
and
sbb
stos
push
jnp
adc
sbb
push
jg
ja
mov
stos
stc
mov
jmp
dec
mov
int
dec
dec
sbb
mov
xor
ss
rcll
jle
testl
adc
adc
mov
xor
mov
and
or
jp
and
out
mov
push
rcrb
push
loop
and
sub
out
nop
jbe
in
into
pop
iret
push
fidivl
jns
das
or
lods
testl
jns
aam
hlt
or
xor
sub
dec
pop
cmp
std
scas
mov
adc
add
je
mov
shlb
hlt
mov
ret
stos
lahf
dec
les
iret
stos
fcompl
xor
mov
jecxz
pop
mov
shl
in
scas
sbb
add
mov
xchg
mov
fwait
adc
cli
and
scas
jae
push
sbb
push
jno
clc
jne
stc
jo
test
pop
pushf
dec
fiaddl
std
std
cmp
fdivrp
sbb
push
mov
dec
xchg
pop
rclb
repnz
mov
sbb
sbb
les
or
push
mov
nop
jno
testl
lahf
or
js
pop
push
mov
call
inc
jbe
fprem
cmovs
lock
stos
xchg
xor
mov
jecxz
sbb
add
loop
xchg
mov
or
fld1
fwait
pop
mov
lret
jbe
mov
mov
je
jg
dec
inc
mov
dec
outsb
iret
bound
psubsb
int3
clc
mov
loopne
cld
cmpsl
pop
or
scas
in
lret
fadd
push
insl
push
fsts
mov
pop
mov
scas
mov
sbb
mov
adc
mov
hlt
adc
js
pop
aas
and
pop
aad
out
cmp
cwtl
das
fldl
jnp
lock
movsb
popf
dec
test
addb
stos
iret
mov
jae
and
jge
jno
push
add
push
sbb
dec
cwtl
ss
cmp
dec
add
xchg
leave
xchg
fsts
pop
outsl
shlb
inc
sbb
mov
sbb
ja
enter
fdivrs
push
mov
push
ljmp
clc
fistps
push
call
pop
cmp
mov
imul
enter
aas
fidivl
rolb
and
mov
scas
pop
lods
rcr
or
scas
mov
sbb
jnp
andb
jge
mov
and
push
dec
mov
sarb
out
mov
adc
sysexit
movsb
fdivrs
lea
enter
push
push
xor
and
dec
lods
and
scas
leave
push
xor
movsb
lock
mov
ja
adc
ss
aaa
decb
dec
mov
jecxz
iret
cld
dec
test
mov
pop
xchg
ja
repz
jp
adc
loopne
lods
xlat
add
lea
pop
mov
jl
jl
cs
sbb
ret
ja
scas
pop
sub
jg
aas
std
dec
hlt
imul
jl
shr
stos
and
add
mov
aad
sbb
mov
pop
inc
and
shll
sub
sbb
cmpl
icebp
mov
mov
idivl
sub
inc
push
xor
mov
aad
xor
pop
iret
sbb
mov
cltd
pop
xchg
mov
adc
sti
loope
into
in
data16
xchg
fwait
cmp
mov
mov
out
cmpsb
jmp
mov
mov
stos
xchg
add
jnp
xor
dec
push
lahf
xchg
les
dec
inc
das
test
inc
sub
push
lds
notl
mov
push
mov
dec
loop,pn
adc
jp
in
ss
cltd
fiaddl
lret
add
into
cmp
out
mov
mov
fldenv
pushf
clc
adc
sbb
pop
fwait
adc
shrl
mov
cld
xor
pop
inc
and
out
popf
or
out
mov
ds
jge
push
adc
cld
loope
sub
jmp
sub
loopne
fnstcw
push
cmpl
cmc
sbb
pop
xchg
add
xor
push
adc
mov
xor
fsubs
loop
sbb
and
lret
mov
andl
loopne
lgs
jns
cltd
dec
dec
add
mov
loope
pop
lods
inc
add
fstl
inc
sbb
xor
int3
push
xor
add
stos
pop
push
cli
imul
mov
aam
or
add
xor
push
jbe
push
fistpl
dec
push
je
aad
push
mov
std
mov
add
lods
outsb
out
mov
sbb
jne
mov
roll
ret
jecxz
cmpsb
jl
stos
lea
push
jo
and
out
outsb
push
out
cwtl
mov
inc
cmc
sarl
cs
and
int
mov
pop
aad
stos
mov
inc
xor
call
mov
fcompl
lret
aaa
mov
cmpsb
adc
in
pusha
lret
mov
pop
fcompl
cmpsl
int3
ss
int3
sub
cwtl
test
bound
sub
outsb
ljmp
ss
mov
rorb
jae
add
pushf
jg
ds
pop
jo
mov
jle
leave
mov
daa
lods
push
cmp
jb
xchg
dec
aad
insb
test
divb
aas
lcall
mov
mov
lahf
addb
push
push
push
cli
rorb
and
add
sahf
imul
xor
loopne
xor
xor
adc
push
aaa
mov
iret
mov
cld
cwtl
xor
push
mov
pop
rcl
jle
mov
lret
sub
je
scas
dec
inc
push
cmpsb
insl
xor
mov
cld
leave
shl
jge,pt
subl
fmuls
fdivr
push
insb
cmpsb
sahf
and
push
std
loop
add
pop
mov
out
xlat
js
lret
push
push
sub
pop
mov
dec
xchg
lods
mov
lods
pop
divb
xchg
add
lret
inc
or
aad
dec
outsb
inc
loopne
ljmp
inc
jg
mov
lret
orb
daa
mov
push
dec
shll
xchg
jo
hlt
mov
add
jns
lret
add
cmp
and
and
xchg
ja
jecxz
jo
and
movsb
in
push
fs
xchg
cmp
mov
mov
test
lock
test
ja
add
pandn
icebp
inc
stc
dec
fidivrs
sub
inc
cmp
add
xchg
fnstenv
xlat
pop
iret
lret
imul
and
icebp
sbb
push
add
push
orl
mov
push
mov
add
lret
mov
ja
xor
subb
pop
mov
jno
fsubrs
repz
ja
push
or
inc
mov
fiaddl
fisttps
pop
imul
or
jp
mov
jecxz
int
leave
pop
movsl
jg
mov
arpl
sbb
scas
and
call
int3
pop
repnz
stos
dec
xchg
cld
dec
jne
or
movsl
dec
in
xchg
mov
sbb
mov
mov
sub
xchg
xchg
jl
shl
and
mov
adc
aas
push
stos
out
int3
mov
outsb
icebp
xchg
gs
stc
xchg
and
push
jecxz
jmp
inc
inc
cld
imul
push
mov
or
jns
outsl
inc
pop
push
or
cltd
ds
out
inc
or
repnz
dec
mov
fstpt
ds
mov
pop
lds
xor
div
fsubrp
xor
loope
shr
pop
lods
repnz
aam
push
add
mov
pusha
mov
dec
xchg
adc
mov
mov
mov
sbb
mov
sub
arpl
je
imul
enter
adc
push
shlb
and
jle
adc
cmp
lods
mov
push
je
or
xchg
xchg
dec
lods
add
ror
rclb
sub
cmp
mov
xchg
iret
insl
jbe
cmp
mov
xchg
inc
test
shrb
leave
idivl
or
mov
hlt
test
dec
add
outsl
mull
cmp
pop
xor
mov
repnz
add
pop
adc
jns
cmp
mov
cmc
int
xlat
js
or
lret
add
leave
mov
jl
push
mov
adc
out
faddl
add
cwtl
cli
out
mov
sub
mov
sub
mov
and
addr16
ss
popf
lods
inc
loopne
cltd
icebp
outsb
cmp
mov
or
shrl
icebp
xlat
rcrb
insb
ljmp
stos
ret
xchg
jl
jle
xor
mov
xor
xchg
inc
pop
xchg
int
fidivl
adc
cmp
add
aam
xchg
lods
rolb
aam
ret
imul
sub
stos
das
xlat
add
popa
outsb
fst
cmp
scas
rcr
xchg
pop
roll
inc
scas
sti
pop
or
js
pop
push
adc
loope
pop
sbb
push
enter
popf
pop
lods
imul
sbb
mov
inc
mov
inc
repnz
in
mov
cli
sub
and
cmp
push
push
fldl
mov
sbb
push
xchg
dec
push
ror
push
adcl
push
clc
mov
sti
adc
jge
int
push
fists
out
arpl
fwait
or
fsubrp
leave
push
test
push
mov
addr16
or
jns
je
sbb
dec
adc
clc
mov
loopne
dec
push
cld
hlt
sbb
push
stos
or
sub
in
std
mov
adc
xchg
rclb
insb
and
psubusw
popf
pushf
mov
inc
pop
xlat
and
xchg
rorb
jl
in
mov
clc
lods
inc
movsl
insb
pusha
mov
mov
push
dec
cwtl
push
loopne
xchg
cmp
adc
and
sahf
lret
call
fnstsw
ja
pmulhw
add
inc
push
add
jmp
sti
hlt
aad
dec
sub
cltd
aam
repz
repz
push
sub
cs
mov
xor
ret
inc
les
pushf
movsb
push
cmpsb
mov
ss
lods
pusha
iret
dec
pop
fidivrl
fs
cmpsl
aas
inc
dec
xor
pop
xorl
jge
mov
push
notb
push
repnz
mov
sub
sub
out
mov
add
mov
sub
adc
cld
mov
test
adc
jge
pop
loop
sbb
cmp
mov
xlat
sbb
add
mov
mov
scas
cmp
popf
push
aaa
or
sahf
mov
dec
fabs
lahf
imul
and
movsb
and
jge
mov
test
push
jne
inc
inc
dec
lret
jae
mov
xor
into
in
lahf
adc
sbb
out
add
andb
stc
and
and
inc
lret
into
mov
cmpsl
mov
and
cwtl
and
cli
ljmp
shl
mov
lea
lock
lock
test
repz
xchg
cmp
push
add
inc
jg
mov
mov
imul
jge
shl
test
inc
cmp
les
xor
adc
sub
loope
in
loope
mov
cltd
lret
cld
in
vmovdqu
sbb
out
rorl
fistps
jbe
or
sub
add
hlt
movsb
enter
lret
clc
in
addr16
cmp
movsb
cmpsl
addr16
add
stc
mov
sub
std
sbbl
dec
mov
cli
movsb
in
mov
sahf
jp
scas
pusha
dec
add
in
and
add
adc
rcll
fptan
xchg
add
jge
bound
loopne
in
shl
repz
mov
sub
xchg
and
lock
int
in
mov
in
popa
inc
ss
adc
jb
jb
ss
adc
repnz
mov
xchg
jo
lea
gs
or
test
xor
add
insb
shrb
pop
lahf
lret
cmpsl
inc
imul
movsl
xchg
roll
mov
jecxz
divl
xor
iret
hlt
mov
imul
pop
lods
test
daa
repz
sti
cmp
adc
or
rol
dec
popa
jo
hlt
add
xchg
test
xchg
loop
sbb
pop
andl
push
inc
mov
roll
and
repz
stos
push
push
adc
or
cli
or
and
adc
lea
bnd
subw
jg
mov
bound
mov
shr
int3
movsb
adc
sub
aad
inc
mov
mov
das
movb
xchg
mov
inc
mov
lret
paddq
mov
push
andb
cmp
cwtl
in
sbb
inc
mov
pop
dec
ss
push
divl
lret
cld
call
je
stos
jle
testb
in
mov
mov
dec
pop
cs
push
xor
pop
lds
mov
mov
in
and
lds
inc
push
outsb
jge
xor
pop
arpl
adc
mov
cmc
lea
rcl
in
mov
adc
into
xor
or
mov
mov
popf
or
mulb
rolb
repnz
mov
mov
or
xor
insb
mov
mov
js
dec
repz
add
mov
and
sbbb
xchg
sub
ret
mov
and
lahf
jmp
sbb
add
add
mov
mov
mov
lods
fsubrl
mov
inc
popa
and
es
lods
add
test
pop
mov
pop
pushf
push
mov
aad
lret
adc
sbb
shlb
jb
lock
mov
fnstcw
repz
lahf
out
push
push
test
inc
je
xor
jmp
das
push
rol
scas
adc
das
daa
orb
in
loope
jecxz
lds
add
cmpsb
inc
lcall
adc
mov
into
pop
xchg
out
icebp
clc
mov
jns
cmp
lret
call
and
sbb
dec
andl
call
mov
ret
pop
loopne
insl
lds
and
lahf
cli
out
shlb
pop
cwtl
out
adc
or
movsb
mov
negl
pushf
xchg
dec
movsl
xchg
in
lcall
out
hlt
add
add
jl
mov
inc
lcall
in
mov
sub
pusha
lahf
jl
cwtl
jmp
push
push
mov
out
inc
mov
and
and
xlat
cmpsb
xor
popf
pop
and
mov
jo
jae
shrl
cli
add
and
push
test
mov
mov
and
aaa
mov
les
outsl
test
cmp
gs
jg,pn
adcl
sbb
mov
divb
test
aad
pop
sti
or
cmc
dec
jno
shll
test
icebp
jp
mov
lret
inc
daa
mov
mov
xchg
and
test
fidivs
mov
cmp
pop
inc
movsb
add
jne
jno
or
fiadds
cltd
mov
imul
or
sub
inc
xor
sbb
dec
adc
movsl
dec
push
and
pop
mov
rorb
mov
hlt
adc
leave
addb
movsl
and
xlat
dec
xchg
movsl
xchg
jp
test
cli
mov
imul
xlat
mov
filds
push
aam
adc
mov
js
cmpsb
and
dec
mov
in
dec
mov
xchg
adc
xor
nop
loope
push
jb
mov
inc
insb
addb
fldcw
aaa
pop
cmp
xchg
sub
fcoml
xchg
pusha
xchg
push
mov
ja
in
jecxz
test
xor
push
inc
cltd
xchg
in
jmp
pop
sbb
xchg
cwtl
xchg
jno
sub
mov
sarl
add
push
push
or
add
mov
dec
js
cmc
add
mov
imull
push
movsl
mov
pop
rcrl
or
push
push
lock
cmc
adc
ror
frstor
mov
lods
jne
sbb
inc
cli
mov
fs
fcmovne
xchg
sub
push
sti
mov
psubusb
adc
jnp
sahf
or
push
inc
dec
xchg
lds
mov
inc
int3
addb
cmp
dec
lock
popa
repnz
call
int3
xor
jo
xlat
popf
mov
adc
mov
or
call
inc
sti
xor
xor
outsl
mov
inc
xor
cmc
adc
or
fwait
and
aaa
fwait
int
shll
cmp
lret
outsb
fbstp
mov
outsl
cmp
inc
push
adc
js
xchg
fnstsw
subl
and
push
xor
pop
lret
cmpsl
jg
out
lods
sbb
adc
mov
test
and
and
ds
jle
rep
in
cmpsb
xchg
subb
cmp
and
and
out
outsb
xor
sbbl
dec
repz
dec
cmp
fcoms
stos
jbe
sbb
push
mov
inc
pop
popa
daa
cmpsb
aad
dec
cmp
daa
push
mov
jne
pop
mov
lcall
mov
fadd
xchg
scas
inc
mov
mov
aad
sahf
adc
out
daa
dec
iret
xchg
xchg
cs
movsl
cmp
rcrb
sbb
adc
xchg
ljmp
out
in
sahf
jg
mov
inc
adc
jo
jne
xchg
cmp
cmp
jo
jp
outsb
mov
aas
fisubrs
data16
pop
add
or
repnz
jno
fdivrs
add
loope
jne
pushf
mov
xorl
stos
mov
pushf
insb
jnp
cmp
pop
fdivr
sub
and
mov
pop
repnz
push
mov
add
mov
data16
mov
cmp
fld
andl
sbb
push
into
lret
jb
das
sbb
pop
ja
out
lret
xchg
pusha
and
cwtl
mov
sbb
inc
mov
shll
dec
dec
jmp
xchg
out
sub
es
xchg
mov
stos
mov
sub
pop
and
jecxz
out
pop
mov
mov
repz
int3
aas
xor
lods
fwait
pop
test
mov
or
inc
popf
jg
pop
rclb
sub
out
in
movsl
push
pop
xor
push
fstl
clc
xchg
sub
lret
sahf
jle
sbb
push
int
xchg
adc
mov
adc
in
pop
scas
enter
adc
push
jle
daa
mov
jp
add
xlat
jne
jae
test
loopne
mov
push
push
dec
push
xchg
add
rolb
jo
cmp
jnp
fwait
ja
aaa
in
data16
in
mov
gs
lods
push
mov
push
rcl
sub
js
sub
into
sti
cmpsb
out
mov
test
daa
gs
xchg
bound
xchg
and
mov
inc
mov
pop
loope
lcall
add
jo
jl
add
lahf
or
adc
pop
cltd
jno
jne
and
adc
es
das
popf
int
inc
and
out
lret
sti
imull
sar
and
jno
movsb
jmp
mov
inc
xchg
lock
jmp
negb
inc
push
js
mul
pop
psubusw
inc
jle
mov
add
fcoml
dec
cmp
sub
or
dec
call
daa
lahf
jmp
inc
sbb
movb
movsb
adc
cli
jnp
in
or
mov
jmp
scas
jne
pop
fs
mov
mov
popa
subl
lods
pop
sbb
out
mov
dec
mov
mov
jecxz
mov
xlat
jp
lcall
mov
in
xor
dec
jae
mov
push
pop
shll
push
icebp
mov
inc
or
mov
dec
scas
stos
jg
jmp
mov
ljmp
add
leave
aam
loopne
sbb
mov
cmp
test
push
movsl
arpl
je
js
repz
test
and
aas
shrl
leave
cmp
mov
das
pop
or
fdivrp
mov
stos
jns
and
or
sti
inc
jge
xor
jnp
fsubrs
iret
enter
pusha
push
xor
test
data16
jecxz
or
ret
mov
icebp
paddusw
pusha
and
dec
addl
push
fldcw
inc
cwtl
sbb
lahf
xor
sub
ds
jl
test
add
inc
stos
mov
mov
or
loope
jp
je
stos
out
in
loopne
movsl
out
sbb
mov
xor
pop
inc
lds
inc
cltd
ss
mov
sbb
lock
stos
xchg
pop
inc
shll
icebp
enter
test
ljmp
pop
aas
or
jno
add
fdiv
repz
test
or
xchg
dec
pop
out
add
subb
sahf
aam
dec
fdivs
push
mov
lret
pop
sarb
mov
mov
jne
jne
jmp
cmp
jnp
jge
sti
popa
shl
ljmp
loope
orb
xchg
mov
adc
add
cs
xchg
xor
pop
mov
inc
ret
and
push
jge
sbb
cmp
movsb
push
fwait
adc
scas
jno
xchg
hlt
stos
inc
inc
cwtl
mov
outsl
push
inc
lock
mov
mov
pushf
jb
rorl
xor
sbb
mov
xchg
pop
jle
sti
std
adc
adc
xor
das
xchg
push
cli
jmp
or
fs
testb
jnp,pt
push
shr
or
push
push
shrb
or
mov
pop
js
jno
outsb
and
adc
sti
stos
inc
insb
sub
jg
pop
jb
pop
dec
insl
bound
xchg
imul
lahf
mov
daa
test
or
aas
out
or
cmpb
lret
imul
xchg
arpl
nop
sub
mov
cmc
xchg
outsb
stos
sub
pop
sub
and
cli
cmp
cmp
rcrl
mov
push
into
mov
out
adc
sbb
dec
notl
lahf
std
push
dec
xchg
inc
imul
xor
or
push
push
pop
push
movsl
adc
dec
jno
xor
jmp
inc
jl
andb
mov
xor
adc
adc
cmpsl
or
sbb
rol
push
loope
jbe
punpckhdq
or
pop
int3
fldl
cmpsl
inc
les
insl
arpl
inc
andb
data16
push
addr16
mov
xor
push
jmp
in
push
cld
mov
out
ljmp
test
pop
pop
loope
daa
mul
test
pop
lret
int3
fldcw
cld
in
xor
xchg
mov
adc
jl
shll
cltd
fs
adc
xchg
sbb
pop
fdivr
dec
xchg
pop
mov
mov
mov
aaa
jmp
sub
fcmovu
ror
aas
imull
sbb
cmc
and
cmp
push
push
push
test
cmc
xor
rcrl
lea
jno
dec
shl
call
into
js
cmpsb
sahf
xchg
jecxz
negb
in
sub
repnz
ja
inc
jne
ffree
cld
sbb
imul
push
cmp
xchg
inc
or
dec
fdivrs
je
insb
popf
test
mov
or
xchg
inc
xor
jp
cmp
mov
dec
mov
lea
sub
out
add
leave
jnp
fnstenv
insb
lods
sbb
xor
inc
ds
jecxz
in
cmp
in
stos
bound
rolb
jmp
pop
jmp
in
push
adc
shll
clc
sahf
jg
push
sbb
mov
cmp
mov
add
int3
sbb
iret
or
cmp
mov
adc
dec
inc
mov
clc
fdivrs
add
add
xor
test
aam
inc
xor
aaa
xchg
lods
and
in
clc
pop
mov
sarb
jo
xor
maskmovq
add
aas
cmpsb
jno
xchg
xchg
jge
xchg
aam
popa
mov
inc
inc
cli
dec
dec
xor
dec
nop
jg
mov
add
out
jg
mov
adcb
shl
push
and
in
leave
repz
jp
pop
mov
sub
repz
add
mov
cltd
notb
inc
and
lret
out
int
push
jl
insl
push
loopne
sub
dec
lret
mov
fucom
mov
and
push
cmpsl
iret
loope
sub
rcrl
ja
pause
xor
xor
dec
cmc
mov
inc
jecxz,pt
rcrl
outsb
arpl
mov
fs
pop
fisubrl
test
cmpsb
stos
xchg
fbstp
pop
or
repnz
sub
mov
insl
inc
insl
iret
adc
xor
sti
adc
repz
lcall
test
dec
xchg
iret
sub
int3
adc
sub
xor
dec
in
iret
add
push
hlt
mov
les
arpl
sbb
lea
inc
notl
rcrb
pushf
filds
xchg
lods
mov
stc
aad
leave
aas
jne
mov
cmp
movsb
push
es
sub
push
jno
shlb
pop
pop
mov
iret
scas
es
jne
ret
jecxz
jbe
repnz
sbb
imul
add
xchg
aas
ss
sbb
in
or
sti
rorb
inc
test
mov
lea
popf
sbb
mov
add
js
mov
rcrb
pop
cmp
sbb
idivl
mov
mov
pop
or
lret
sub
test
mov
or
push
addl
dec
ss
dec
mov
xor
pop
pop
pushf
fisubrs
cli
dec
xchg
cld
or
jmp
mov
xor
xor
fisubrl
xchg
inc
cmp
shlb
scas
lcall
test
xchg
jne
mov
call
add
ret
insb
or
add
pop
xlat
stc
sbb
pop
adc
shll
jle
sbb
adc
xor
shrb
mov
rcrl
mov
sti
jbe
aad
lahf
add
stc
xor
mov
dec
aas
call
mov
ret
shl
pop
test
loop
popf
xor
cmpsl
xchg
stos
add
push
adc
popa
imul
test
mov
sub
inc
out
inc
bound
push
and
pop
xor
cmp
mov
int
xchg
test
imul
pop
pop
mov
push
fs
sbb
daa
xchg
mov
addr16
imul
addr16
add
sub
call
sbb
xchg
jo
xchg
xor
and
int
aam
or
mov
jge
aaa
neg
mov
in
xor
sbb
jne
add
jp
mov
loop
inc
in
push
ficompl
cwtl
fstps
lea
nop
pop
xor
subb
sbb
ret
sbb
mov
ljmp
mov
mov
rcrb
addr16
add
jmp
jb
push
adc
jle
and
push
sti
add
xchg
mov
xchg
push
aam
test
cmpsb
cmpsl
mov
test
xchg
dec
subb
adc
jecxz
into
and
adcb
jp
dec
movsl
notb
sub
sbb
out
mov
xchg
fcmove
mov
dec
pop
push
cld
push
aaa
rorb
or
adc
xchg
xchg
mov
repz
cli
adc
and
xlat
sbb
loope
lcall
insb
imul
loope
inc
pop
out
push
push
or
mov
arpl
xchg
scas
xor
out
lret
mov
mov
xchg
lahf
rcrb
xor
push
mov
std
cmc
fs
shrb
mov
xchg
hlt
pop
jb
clc
rorl
add
mov
loopne
fmul
xchg
sub
add
fists
mov
shl
push
cli
and
mov
sbb
inc
xchg
fsubp
dec
xorb
inc
jmp
mov
jb
dec
xchg
test
cld
mov
test
in
add
pop
jmp
mov
pop
call
sbb
popa
mov
stos
or
and
ds
sbb
loopne
adcl
or
sahf
bound
xchg
fldt
lcall
xor
push
cmp
popf
jb
test
movsb
and
fsts
es
mov
div
int
dec
in
repnz
push
leave
lcall
sub
lahf
sub
imulb
and
lods
mov
filds
xchg
cmp
sti
repz
ja
jne
push
jbe
repz
lods
ds
pop
push
pop
mov
push
daa
aam
data16
insb
adc
gs
fistpl
jg
ret
rorl
lret
fwait
nop
cmc
jns
nop
xchg
pop
dec
aam
or
sahf
mov
sub
jle
and
push
xchg
lahf
mov
in
aam
dec
add
push
xchg
adc
xchg
jae
ja
push
jo
dec
ret
xchg
jbe
push
xchg
mov
jae
enter
push
add
mov
fstps
fcoms
outsb
pop
out
add
cmp
add
xchg
clc
pushf
xor
sbb
xchg
arpl
mov
in
aam
in
fwait
lret
push
mov
dec
imulb
je
dec
stos
int
notb
test
test
cmpb
or
dec
sub
ds
sub
sbb
push
sbb
or
fbstp
mov
mov
xor
cli
add
cwtl
mov
add
les
mov
xchg
or
lds
add
or
jnp
dec
inc
mov
idivl
sub
adc
iret
or
sti
mov
adc
stos
mov
push
inc
push
dec
enter
adc
sub
dec
std
push
daa
and
int3
xchg
ret
adc
add
scas
xchg
test
xchg
xchg
jbe
mov
ss
aaa
clc
inc
xlat
inc
inc
mov
andl
or
in
movb
pop
sub
pushf
std
out
int
jb
inc
add
ja
adc
into
xchg
lds
xor
out
js
shll
ficompl
push
cmp
shlb
pop
cmc
or
daa
in
inc
cltd
xchg
jnp
lcall
fsubl
push
adc
mov
push
nop
stos
fmuls
arpl
scas
jmp
sbb
inc
test
push
sbb
shlb
mov
lret
dec
push
cwtl
xchg
mov
popf
stos
cltd
insb
repz
stos
dec
mov
imul
xlat
stos
push
sbb
into
sbbl
xchg
ret
fiadds
mov
mov
mov
outsb
inc
sub
add
xchg
scas
aam
ljmp
mov
jmp
cmpps
fs
pop
mov
insb
sbb
jae
clc
test
scas
rcl
xchg
outsb
dec
cmpb
rcr
in
jp
pop
jmp
jge
adc
dec
sbb
lret
cmp
out
push
pop
xor
mov
inc
xor
mov
jnp
push
imulb
cmp
push
jmp
icebp
cmp
mov
pusha
loopne
xchg
mov
dec
push
jg
or
mov
push
xchg
mov
nop
les
out
scas
adc
in
mov
inc
out
mov
mov
mov
dec
add
stc
fwait
jl
into
daa
inc
lahf
xchg
xor
xchg
test
jp
ss
in
aaa
mov
and
lods
mov
mov
jb
popf
rcr
xor
jns
out
mov
sub
inc
jge
sub
cs
jg
cmpsb
repnz
push
mov
call
cmpsb
fdivl
sub
cwtl
or
mov
sarl
mov
add
jb
unpcklps
sarb
cli
mov
movsb
mov
xchg
call
testl
in
xchg
mov
jbe
pop
movsl
push
push
es
movsl
xor
jbe
xor
in
aad
scas
inc
int
stc
mov
xchg
mov
push
int3
xor
in
pop
mov
xor
lea
ds
mov
adc
jbe
in
mov
jl
jns
or
fwait
test
enter
push
aam
outsb
ds
mov
divl
sarb
sub
xchg
xchg
pop
inc
test
cwtl
rorl
inc
jmp
add
stc
pusha
bound
push
lods
xor
push
data16
xchg
sarl
mov
dec
jbe
in
mov
xor
sbb
mov
int
into
nop
and
repz
into
cmpl
mov
or
pop
fstp
xor
out
inc
xor
pop
cmp
mov
lods
sbb
push
je
hlt
xchg
sbb
cmp
jmp
cmp
or
cmpsl
das
xor
hlt
adc
leave
mov
pop
dec
repnz
int
xor
dec
pushf
fldcw
int3
push
or
cmp
mov
mov
push
cmp
add
bound
cmpsl
or
xchg
pop
adc
test
jecxz
sbb
xchg
repnz
mov
push
lods
xchg
in
jo
out
aad
je
pop
xchg
call
push
loopne
clc
lods
mov
lds
pop
aad
andb
pop
imul
in
mov
ret
push
cmpsl
pop
leave
xchg
or
sub
mov
cmp
jle
jae
add
or
and
jo
in
and
xchg
dec
cmp
xchg
lret
adc
pop
lahf
popf
add
push
cwtl
sbbl
je
xor
loope,pn
mov
in
roll
shll
js
aas
push
incl
stc
or
jecxz
jne
imul
mov
scas
or
lods
xchg
negl
mov
and
xchg
imul
lcall
jbe
push
ja
repnz
lods
jl
mov
test
std
pop
adc
mov
fsubrs
insl
or
jp
stos
push
call
pop
out
xchg
add
imul
movsl
stos
xor
inc
push
mov
imull
cld
loope
dec
and
or
int
or
decb
in
rcll
add
inc
roll
jl
movsl
adc
fbstp
in
fsub
ret
mov
jo
test
cmp
lock
inc
cmp
or
xor
mov
and
mov
cmp
jle
sub
fsubrl
out
daa
push
xchg
xchg
aas
pop
jb
insb
push
movsb
add
data16
cli
ds
jge
push
repz
or
in
dec
pop
sahf
inc
mov
in
adc
sbb
and
mov
xor
mov
ret
loopne
and
mov
dec
jle
daa
bound
inc
add
jle
lret
xchg
inc
divb
sub
mov
xor
in
loopne
or
in
sbb
sub
cmc
adc
jo
jmp
in
dec
and
out
adc
cwtl
stos
inc
cmpsl
xor
jns
xchg
mov
jg,pt
rcr
pop
mov
sbb
ljmp
outsb
push
mov
fsubrs
icebp
aam
leave
out
jp
fcom
xchg
pusha
aad
js
mov
scas
ja
cmpsl
pop
pushf
cli
outsb
cld
rol
negl
ss
sbb
mov
mov
fwait
or
out
js
jbe
mov
push
mov
loop
add
mov
mov
adc
cmp
int3
or
xor
sub
cltd
test
sub
pop
xchg
fcomp
inc
mov
scas
and
pop
mov
aad
jge
jno
dec
sti
mov
enter
fcomps
push
in
mov
lods
xchg
push
test
or
xchg
push
mov
mov
stos
mov
jns
daa
push
mov
jg
je
pop
call
cwtl
mov
test
sub
lds
xchg
mov
inc
outsl
and
aas
repz
xchg
sub
cwtl
push
push
xchg
repnz
insl
loopne
cmp
aaa
or
gs
mov
loopne
add
in
xor
test
sub
sbb
loopne
shrb
push
cmp
cmp
cmc
jl
int3
dec
cmpsb
out
mov
inc
xchg
leave
cmp
int
fiadds
pop
je
lds
fmuls
sbb
inc
jno
mov
loopne
xor
pop
movsb
mov
nop
cmpsb
xchg
pop
inc
and
sti
ret
rolb
xchg
lock
or
sbb
enter
fiaddl
or
mov
pop
aad
add
setb
ret
das
mulb
lcall
or
js
sbb
cs
pop
fstps
loope
shll
negb
mov
inc
movsb
loop
or
jle
jmp
jge
std
pushf
cmpsb
mov
popa
inc
mov
or
push
mov
out
xchg
and
aam
adc
lods
xor
addr16
push
repz
cmc
pusha
mull
mov
add
push
mov
add
mov
pop
mov
movsb
loopne
das
mov
cwtl
leave
inc
aad
rcr
std
aaa
add
sbb
mov
jns
shll
push
xchg
ret
mov
mov
mov
negb
add
xchg
int
leave
std
repnz
xchg
int
xchg
loopne
shlb
pop
rcr
lcall
push
scas
push
push
add
dec
pop
cmpsb
rolb
push
or
xchg
jne
cmpsl
mov
or
movsb
dec
and
sahf
cmp
xor
mov
inc
stc
adc
add
lahf
jp
lods
aad
xchg
rorb
icebp
push
fistpl
sbb
ret
xor
jno,pt
out
ret
mov
test
add
and
mov
rcrl
dec
jg
loope
mov
int
std
mov
mov
add
subb
and
pop
scas
inc
inc
cmpsb
xchg
xchg
subb
add
int3
lret
jnp
sti
jp
sbb
push
jb
ljmp
fldcw
push
push
sub
aam
loop
sub
adc
jle
std
xchg
sub
xchg
mov
movsl
mov
dec
pop
inc
dec
aam
lea
cld
fcomip
test
jno
outsl
xlat
push
fisubl
and
std
bound
lock
or
xchg
dec
sbb
out
mov
xor
rcrl
repz
jmp
cmp
push
xchg
pop
mov
fwait
pop
jno
dec
ss
cmpsb
mov
loop
out
cmp
ret
mov
int
mov
enter
sub
inc
loope
add
mov
lcall
xlat
push
sbb
cs
sub
out
pushf
ds
xchg
std
mov
inc
sahf
jecxz
mov
and
gs
das
jno
aas
sub
mov
mul
loope
in
dec
xor
add
pop
jecxz
out
inc
das
xor
negl
mov
jae
subb
pushf
or
addb
imul
cmp
push
in
inc
sub
and
xor
ss
push
iret
cwtl
jle
clc
js
push
test
mov
int
jb
or
es
inc
scas
mov
mov
adc
mov
jbe
jmp
and
aaa
ret
mov
out
mov
mov
dec
pop
arpl
clc
incb
pusha
xchg
testl
mov
sahf
mov
aad
push
test
push
sbb
icebp
jl
outsb
cmp
notb
js
or
add
loope
mov
test
popf
aam
dec
test
arpl
sahf
pushf
shl
jecxz
in
fdivrs
add
push
repnz
or
test
fmull
push
sahf
cmpsb
insl
es
shll
mov
jb
inc
lcall
arpl
xlat
jne
fcmovb
loope
jae
pushf
jae
in
pop
jecxz
mov
les
test
or
testl
xchg
xchg
push
add
mov
inc
add
popf
sbb
cli
loopne
xchg
lret
or
outsb
imul
scas
push
pop
or
loop
rolb
ret
gs
and
adc
or
lods
adc
call
jecxz
and
lods
mov
xor
pop
aam
rclb
jb
leave
es
dec
cmp
dec
mov
push
mov
rorb
adc
scas
add
sbb
cmc
sub
push
sahf
push
mov
cmpsb
cmp
sbb
mov
sahf
xchg
outsb
jl
cmp
sahf
aaa
add
bound
xchg
rcrl
out
cmp
scas
sbb
dec
fstpt
in
jns
call
rcll
push
lock
cltd
mov
mov
imul
xor
fimull
jmp
call
mov
int3
dec
xchg
inc
push
push
in
in
xchg
fildl
mov
mov
xor
sub
pop
lret
xor
fwait
cmpsb
add
movsl
scas
rorl
sub
pop
mov
into
cs
jecxz
mov
in
imul
dec
cmp
dec
out
jge
shrl
flds
jbe
in
pop
jge
jb
jecxz
shrl
imul
lahf
sbb
mov
mov
dec
iret
repz
sahf
andb
pushf
loopne
addl
in
adc
shrl
dec
cmp
ds
adc
cld
inc
or
movsb
dec
out
push
lret
pop
adc
mov
sub
cwtl
pop
hlt
pop
sbb
in
push
push
push
cli
in
sbb
test
xchg
dec
adc
stos
xchg
fldcw
sahf
sbbb
pop
inc
imul
repz
test
sub
mov
push
mov
lds
test
xchg
sbb
cmp
mov
cli
cmpb
cs
ljmp
psubw
repz
cmp
pop
jmp
int
das
mov
fs
xchg
cmp
in
dec
mov
pop
popa
push
les
or
dec
xor
push
push
jl
adc
sbb
outsl
mov
bound
arpl
lret
scas
ds
addr16
idivb
jecxz
bound
ja
in
in
add
loope
idiv
or
stos
sbb
aad
add
mov
out
into
adc
subb
push
mov
push
xor
push
adc
inc
outsl
rcrb
in
add
lods
cmp
negl
jne
mov
stos
popf
mov
ja
data16
xlat
inc
sarl
sarb
clc
push
in
sub
xchg
jns
rolb
inc
clc
pop
aaa
sub
or
into
imul
ljmp
mov
pop
cmc
mov
or
bswap
and
aaa
pop
mov
scas
addl
pop
jl
cld
roll
jge
outsb
xor
nop
cltd
and
fdivl
xchg
sbbl
push
pop
fsubl
enter
sahf
inc
std
xchg
pop
sbb
je
les
dec
inc
push
lret
adc
sbb
mov
pop
adc
jae
push
push
add
xchg
inc
or
pop
orl
mov
cmp
push
jg
xlat
sbb
inc
fwait
cli
mov
decb
sbb
push
mov
xchg
pop
pop
fdivl
xor
fnstcw
mov
cli
dec
cmpb
sbb
nop
mov
pop
or
out
xchg
lds
cmp
sub
mov
jbe
movsb
in
ja
setbe
daa
into
es
and
sbb
xor
fwait
inc
jle
sub
xor
dec
mov
or
test
sbb
andb
xchg
adc
pushf
inc
rorl
pop
jne
inc
add
shll
bound
call
push
fisubl
aas
sbbl
xorl
das
add
sbb
push
cmp
mov
inc
mov
pop
int
or
stos
bound
add
or
mov
loop
jb
push
int3
jbe
mov
test
xor
mov
jg
pop
lcall
push
in
outsl
add
bound
jnp
xor
repnz
xchg
iret
shlb
aad
sub
pop
mov
int
xchg
addl
sub
fiadds
shlb
push
fcmovnbe
push
icebp
mov
push
lret
in
add
mov
cmp
movl
jno
push
push
adc
stos
fistl
fsts
out
push
sbb
dec
dec
cmp
add
mov
lret
fdivr
jg
lds
aad
int3
scas
xor
repz
out
outsl
mov
dec
or
loopne
addr16
int
jno
hlt
dec
pop
insl
add
push
and
sbb
pop
movsl
ret
in
shlb
inc
pusha
adc
loopne
cmp
pop
xchg
shrl
jl
adc
jo
jmp
add
ficoml
bound
fistpl
sbb
mov
dec
imul
and
gs
jb
jp
pop
lahf
repnz
xchg
cmp
mov
jb
int3
mov
imul
push
dec
nop
std
push
sub
mov
std
mov
sub
es
mov
andb
in
adc
mov
xor
xchg
cwtl
das
mov
lods
push
mov
jp
adc
cmpsb
xchg
mov
add
std
dec
rorl
out
inc
adc
dec
negl
loope
or
sub
insb
lea
movups
data16
loopne
fistps
lea
push
repnz
xchg
dec
or
xchg
pusha
sbb
lret
sub
sbb
sub
push
out
mov
cmpsb
aaa
fnsave
jle
sub
adc
mov
adc
and
ret
mov
dec
data16
cmp
aaa
jbe
jge
pusha
scas
adc
add
add
sub
push
dec
lret
sub
xchg
decl
inc
add
mov
xor
mov
jmp
outsl
dec
aad
iret
pusha
in
sbb
mov
fisubl
test
add
sbb
rep
das
dec
push
jb
shlb
jp
adc
dec
jb
mov
jnp
cmp
cld
jle
dec
sbb
cld
nop
sbb
dec
pusha
xchg
stos
or
mov
jle
pop
pop
push
and
loop
mov
xor
mov
add
enter
stos
loopne
mov
fisttps
fdivrl
mov
adc
cmp
pop
movsl
sbb
add
jg
jmp
fwait
jne
insb
aad
jle
ficomps
orb
call
jge
out
mov
xchg
add
fisttpll
pop
popf
xor
and
xchg
add
jmp
loope
icebp
mov
ljmp
divl
sbb
jbe
enter
sbb
mov
fwait
xor
adc
mov
add
test
divl
rorl
loope
sbb
push
std
in
fmuls
push
dec
xchg
push
push
pop
lret
add
dec
jae
icebp
js
mov
sub
inc
fs
push
push
mov
jns
lcall
adc
loope
pop
pop
jmp
leave
jb
pop
xchg
mov
dec
hlt
cmp
addr16
outsl
pop
imul
sbb
pop
xchg
pushf
out
and
loope
mov
out
es
cmp
mov
pusha
pop
mov
js
in
or
sub
cs
inc
inc
xchg
repz
pop
cli
sti
xchg
test
adc
stos
int3
fs
loopne
or
add
sub
mov
loope
fnstsw
pop
fsubrl
or
scas
push
aaa
call
sbb
mov
loop
push
mov
mov
shlb
outsl
into
stos
xchg
dec
push
testb
fmuls
mov
jl
mov
test
arpl
xchg
mov
push
sub
cmpsl
ret
loopne
xor
into
dec
mov
shlb
notl
loop
arpl
add
insl
adc
pop
mov
and
xor
imul
sub
mov
loope
popf
mov
jb
lds
mov
shrl
out
jbe
and
int3
movsl
loop
mov
xchg
imulb
les
insl
sbb
fs
mov
test
adc
rcl
loope
popa
jmp
pop
into
push
cld
loope
fbld
jb
das
into
out
and
cmp
fcmovu
sub
cmp
sub
je
or
daa
dec
cwtl
mov
inc
cmp
outsb
jnp
fcoms
sahf
lcall
dec
popl
jmp
pop
fldenv
imulb
arpl
and
cld
mov
icebp
xchg
mov
inc
xlat
jne
cmp
jge
xchg
jnp
sti
jge
mov
jns
sub
sub
adc
clc
adc
push
icebp
sub
cmpl
xor
repz
sub
cld
frstor
xchg
add
or
fwait
adc
scas
push
ret
lret
stos
lcall
fistps
movsb
in
insl
mov
sbb
and
outsl
mov
jmp
or
lods
pop
jnp
jne
xchg
cmp
or
inc
push
mov
inc
dec
mov
pop
int
cs
adc
incl
mov
cmpl
pop
mov
push
cltd
decb
mov
dec
mov
push
lahf
jno
cwtl
xor
loopne
xchg
fiaddl
test
notl
es
stos
jmp
out
and
lods
les
push
pop
icebp
outsb
inc
adc
movsb
sbb
push
enter
pop
gs
call
ds
add
jp
cmpb
adcb
sbb
mulb
dec
xchg
fildll
das
sub
mov
inc
in
clc
xor
into
pop
inc
cltd
in
sub
mov
ds
fs
jge
addr16
jae
xor
in
xor
push
push
sub
cmp
mov
pop
cmp
aad
xorb
inc
sbb
cmp
loopew
inc
cs
push
cmp
loop
dec
xchg
into
stc
add
jne
lock
push
mov
insl
mov
clc
divl
push
int
addl
mov
popa
adc
js
jp
cmc
xor
cmpsl
outsb
and
notb
pop
dec
cmpsb
sbb
mov
mov
sbb
enter
push
sub
mov
cwtl
mov
pop
ja
inc
jge
jle
mov
jbe
fwait
mov
mov
inc
popa
out
lds
call
pusha
fdivl
cmpl
push
fwait
inc
lods
cmp
test
and
pop
ss
mov
outsl
adc
dec
jg
cs
inc
pop
out
jmp
dec
clc
inc
push
decl
lea
testb
mov
sub
rcl
addl
movsb
mov
jae
push
xchg
mov
fldenv
dec
jmp
lds
testb
cmp
scas
xchg
xlat
enter
movsb
mov
add
loopne
roll
or
arpl
dec
ror
pop
mov
testb
in
cld
sub
clc
cwtl
xchg
sub
push
out
insl
aad
adcb
int3
and
or
add
cmp
cmp
add
sbb
clc
mov
stos
xor
es
push
sub
arpl
mov
fbld
popa
movsl
scas
and
push
jb
out
xchg
cmp
inc
xor
inc
add
mov
mov
adc
inc
pop
cltd
add
sub
movsb
in
pop
jl
push
adc
add
out
jae
jg
and
mov
arpl
jbe
xchg
jno
jns
sub
dec
sahf
xabort
cwtl
shr
test
mov
lds
pop
pop
cwtl
or
jle
xchg
and
aaa
adc
movsb
shll
push
jnp
repnz
int
in
add
movsb
cs
icebp
stc
cmp
xor
test
or
xor
sbbl
lret
cmp
mov
lret
lcall
xor
adc
xchg
pop
inc
mov
xchg
fildl
jns
adc
mov
or
imul
add
sbb
inc
andl
or
in
push
div
mov
or
in
or
pusha
mov
data16
dec
adc
adc
mov
fidivl
sbb
cld
outsb
mov
int3
jmp
sub
sub
sbb
test
into
lods
pushf
leave
fisubl
ja
fnstsw
push
jmp
or
mov
xchg
push
sub
gs
lds
ret
mov
mov
lret
clc
xchg
xor
enter
and
xor
sub
xor
aas
mov
mov
in
inc
mov
push
xor
mov
xor
xlat
in
cwtl
mov
jbe
jp
lds
add
test
arpl
cmp
push
dec
lods
adc
adc
and
int3
jae
inc
xor
adc
mov
lret
and
xor
xor
push
dec
filds
mov
divb
iret
pop
arpl
or
jle
mov
movsb
cwtl
adc
jo
push
cmpsb
inc
dec
out
add
and
lods
ja
hlt
ljmp
sarb
inc
sub
sarl
pop
jbe
inc
dec
stos
mov
pop
cmp
cwtl
lock
int3
ljmp
push
mov
sub
inc
mov
mov
jb
mov
lods
or
shlb
xchg
push
int3
xor
cmp
incb
pusha
lret
and
imul
jecxz
fstl
dec
vphaddubw
cwtl
mov
cmp
in
xchg
adc
es
mov
xorl
push
fwait
in
push
fcoms
out
lea
in
pop
pcmpgtb
add
scas
jns
js
loopne
add
in
pop
lret
rorl
inc
cmpsb
out
xor
ljmp
cli
mov
aaa
cmp
cmp
arpl
out
mov
and
and
xor
push
fwait
push
shll
aaa
push
mov
fildl
es
arpl
add
inc
dec
fiaddl
scas
mov
jns
and
dec
pop
pop
sar
mov
push
mov
ljmp
out
adc
cmp
pop
jno
mov
mov
dec
iret
ror
ljmp
xor
inc
mov
and
or
jg
jns
or
outsb
inc
dec
scas
xchg
ss
hlt
xlat
xchg
xchg
out
push
mov
and
cmp
mov
jb
push
dec
in
roll
dec
insb
leave
cmp
popw
nop
je
inc
leave
dec
out
mov
imul
xor
addr16
icebp
mov
imul
push
fidivl
incl
mov
cmp
jb
push
data16
dec
cs
in
push
lods
jle
outsb
sub
jmp
push
adc
stc
arpl
pop
jbe
imul
adcl
mov
adc
adc
imul
xor
pop
pop
sub
pusha
in
cmp
dec
cmp
mov
and
pop
cmpsl
or
test
sub
jl
pop
in
mov
gs
fsubrs
outsl
dec
or
mov
stos
jae
mov
sbb
sahf
push
add
push
xchg
sbb
ret
aam
cs
xor
loope
push
movsb
call
jno
int3
mov
les
mov
cwtl
xchg
stos
push
notb
xor
repnz
jnp
or
dec
jl
cltd
and
lret
cltd
scas
cmp
andnps
iret
and
adc
pop
mov
or
mov
adc
jnp
loop
xchg
push
xor
ret
out
out
mov
rolb
ret
sar
cmp
mov
pop
ja
dec
in
dec
mov
xor
out
sbb
cmp
jmp
movsl
lret
push
pop
lret
iret
cmp
into
push
cmpsb
mov
push
outsb
daa
mov
push
int
dec
or
and
cs
and
pop
pop
sti
ljmp
popf
and
xor
dec
rolb
cmp
push
pop
mov
ja
cs
mov
inc
fisubrl
adc
xchg
imul
dec
add
sbb
cmp
cltd
push
ja
std
movsb
inc
sub
roll
mov
jbe
testb
and
ljmp
lds
mov
xchg
lds
and
roll
dec
cltd
fnstenv
pop
mov
xor
sbb
pop
repz
sub
ds
adc
jae
or
fcomps
pop
sub
mov
imul
aaa
jg
pop
mull
jle
push
mov
pop
jno
fistpll
push
dec
ret
cmc
inc
mov
jo
jbe
repz
lret
out
je
pusha
jl
dec
not
das
nop
lock
mov
mov
xchg
push
mov
push
lock
sbb
imul
pushf
stos
scas
add
mov
pop
in
orb
push
or
inc
push
inc
jno
jno
inc
add
dec
push
jo
xlat
adc
push
jbe
xchg
das
popl
ret
jmp
lods
mov
pop
scas
arpl
xor
imul
mov
imul
fists
test
push
xchg
int
sub
xchg
sub
xchg
cmpsl
push
mov
mov
sbb
fdivrl
and
xchg
call
pop
xor
lds
in
add
xor
cld
or
leave
adc
cld
iret
jl
mov
sti
mov
fistps
pop
rcrb
out
andl
imul
imul
jno
or
cmp
dec
cltd
push
dec
xchg
nop
inc
xchg
and
xor
faddl
cwtl
mov
insl
sbb
fisttpl
inc
test
icebp
leave
lcall
cmp
dec
test
lock
lahf
or
push
in
notb
or
jecxz
push
shrl
call
hlt
pop
push
xchg
adcb
or
mov
fisubrl
and
xchg
enter
push
lock
sti
sub
push
into
mov
enter
repz
fwait
test
pusha
push
pop
pop
pop
xor
sbb
imul
mov
xchg
mov
insl
mov
cwtl
xor
and
aam
fiadds
xchg
lahf
mov
in
sub
adc
or
mov
push
fcoms
ljmp
scas
add
dec
loopne
decl
jecxz
jns
pop
xchg
adc
cwtl
insb
cmp
jae
in
and
mov
out
pop
call
dec
imul
or
mov
sbb
sub
and
add
iret
pop
fwait
mov
pushf
mov
inc
cmp
cltd
jae
jle
push
inc
jl
cmpsl
je
lahf
call
mov
and
aam
mov
cld
out
in
xor
fdivl
pop
push
jge
cmp
lret
jmp
cmp
das
push
dec
js
fisubs
neg
dec
insb
jl
adc
xchg
cwtl
scas
push
sub
mov
cld
dec
in
mov
sub
not
std
and
pop
lcall
in
popf
lahf
pusha
adc
mov
lea
cmp
out
test
mov
nop
ljmp
sahf
sti
decl
test
loop
or
inc
cmp
int
or
incb
jnp
test
mov
shll
jmp
and
int
iret
negl
sub
push
in
mov
and
adc
cmp
enter
out
das
or
pusha
mov
add
mov
or
aad
jne
lahf
mov
adc
scas
or
xchg
cld
push
jmp
enter
sbb
jae
scas
mov
mov
push
inc
adc
movsl
pop
mov
adc
stos
out
es
push
icebp
add
push
ja
in
push
jne
xlat
mov
add
cmp
sub
adc
daa
shrb
into
das
int
lcall
gs
push
sbb
andb
gs
sbb
push
mov
xchg
popf
pop
aam
jno
in
push
aad
pop
pop
lock
rorb
cwtl
dec
lea
test
fwait
jne
push
stos
adc
ret
cmc
xor
and
mov
in
pop
ret
loope
bound
sub
imul
xchg
sub
sub
jp
mov
xlat
or
stos
inc
jno
movsb
mov
outsb
mov
insl
xlat
or
clc
xor
inc
aas
pop
mov
push
jg
and
fstpl
xchg
add
leave
lret
mov
paddsw
pop
push
push
fistpll
mov
iret
jecxz
cmc
mov
stc
loopne
mov
stos
or
mov
stc
iret
jnp
cli
mov
ja
pop
test
lcall
outsl
inc
scas
xchg
and
add
test
ljmp
arpl
xor
pop
dec
pop
cld
lds
adc
jmp
leave
inc
je
lock
xchg
jno
dec
fdivrs
jmp
xchg
mov
ja
xchg
push
pop
int3
cmp
lds
adc
sub
shlb
shll
xor
adc
movsl
cltd
inc
jmp
stc
in
mov
xchg
push
jg
sbb
pop
addr16
mov
data16
mov
lahf
xor
mov
mov
jae
fiadds
mov
mov
movl
test
cmp
xor
mov
enter
jo
in
sbbl
lret
dec
jg
out
push
inc
add
pushf
and
sub
call
cwtl
sub
out
ljmp
ja
mov
pop
mov
ds
fwait
pop
cwtl
jno
cmp
lods
push
shl
mov
xor
push
mov
xor
xchg
xor
ja
push
gs
lret
fcmovne
jb
xor
inc
add
sti
jg
cmpsb
xacquire
pop
xchg
out
push
xchg
test
sbb
xchg
jo
leave
or
mov
mov
jno
dec
and
push
xor
shll
adc
ss
icebp
mov
lea
and
in
stos
mov
imul
orb
jno
jbe
push
cmp
mov
adc
movb
mov
mov
xchg
cmpsb
imul
push
icebp
sub
inc
aad
sbb
negb
scas
xchg
fs
loope
adc
lret
into
xchg
scas
insb
sub
mov
inc
mov
pop
out
jne
add
jp
mov
outsb
jo
int3
not
arpl
sub
adc
nop
stos
lret
outsb
ja
cmp
gs
sbb
orb
mov
ror
orb
js
fld
dec
ds
ja
xor
int3
add
popf
mov
pop
lods
cmp
sbb
dec
sbb
stc
ret
in
rcll
mov
or
mov
mov
in
lock
push
ja
mov
push
inc
cmp
jno
push
push
loop
or
mov
imull
add
lret
das
out
cmpsb
xor
jae
or
bound
sub
push
pop
inc
loop
xchg
pop
inc
loope
or
inc
jae,pt
rolb
or
leave
sbb
jge
scas
cltd
adc
das
lcall
adc
sub
jmp
jg
mov
ljmp
add
je
add
rcl
lcall
push
jnp
outsl
dec
in
mov
cwtl
repnz
and
add
mov
adcb
dec
dec
pop
test
pop
fs
pop
mov
data16
cmpsb
add
das
fsubl
mov
std
inc
movsb
jp
xchg
sbb
pop
xchg
fdivs
or
inc
aaa
xor
insb
mov
iret
adc
cmp
das
iret
jmp
ljmp
sub
or
in
jmp
xor
mov
and
cmp
out
flds
sub
jno
jo
jge
repnz
stos
insl
lcall
inc
sub
or
inc
dec
pop
sahf
out
mov
int
cmpsb
cmp
call
loop
mov
sbb
pop
insb
les
jbe
stos
lret
sbb
testb
cld
jno
ljmp
or
leave
dec
mov
jp
test
int3
orb
dec
das
outsl
xchg
inc
bound
adc
cltd
jae
sti
out
fnsave
loop
testb
ja
sbb
in
inc
jno
cmp
dec
out
jno
xchg
and
mov
xor
incl
push
loopne
mov
dec
fs
in
repnz
cli
add
test
push
subb
push
addr16
xchg
or
inc
out
shufps
mov
test
cmpxchg
test
test
leave
fcomps
popl
sbb
aaa
mov
jle
or
sahf
push
pushf
or
pop
ja
sub
das
stc
push
push
inc
push
es
movb
lret
push
mov
dec
rclb
dec
dec
dec
push
js
pop
js
cmp
cmp
xchg
or
sub
shlb
aam
sbb
cld
in
add
push
fsubr
xor
xchg
sbb
test
loopne
mov
int3
cld
xchg
notb
sbb
mov
pushf
sub
lods
or
xor
mov
cltd
sub
iret
or
jmp
aas
ficompl
in
sub
movsb
aam
and
jb
xlat
cmp
lods
mov
jecxz
jb
dec
dec
es
stc
add
lock
dec
in
lea
dec
hlt
dec
js
push
jl
cmp
push
jle
push
pop
sarl
imul
xchg
out
das
and
mov
lahf
call
cmpsb
int3
scas
fisubrl
dec
xor
sbb
rolb
insb
ss
icebp
lcall
and
push
inc
insl
mov
and
mov
data16
enter
leave
sub
rcrl
cli
decl
xor
test
cmpsb
fdivs
add
lods
testl
outsl
js
sub
xchg
js
dec
mov
cmp
xor
and
push
jle
lret
and
mov
pop
pushl
aam
cld
jle
iret
arpl
fdivr
pop
mov
mov
in
push
out
in
add
inc
push
aaa
mov
sub
push
ljmp
and
test
xlat
repnz
sub
dec
dec
daa
cmp
sbb
xchg
lods
shr
nop
dec
xor
aam
dec
mov
pop
cld
mov
pop
lea
fsubs
adc
notl
imul
ret
xchg
jns
push
xor
push
dec
dec
cmp
mov
cmpsb
jl
inc
js
add
jno
jle
roll
inc
push
adc
cld
sbb
test
cmp
pxor
pop
ss
add
or
xchg
or
jne
push
fstl
and
xor
mov
mov
lcall
sub
cli
mov
adc
pop
sbb
mov
push
in
popf
lret
push
pop
jl
xor
cmp
outsb
mov
push
sti
orb
mov
shrl
nop
and
inc
arpl
push
mov
bound
push
inc
mov
or
popf
and
mov
jecxz
negl
sub
jl
xchg
lds
add
lods
shrl
inc
loop
test
or
sub
add
sub
pop
push
jbe
ds
xchg
mov
or
cmp
ficoml
mov
in
sti
mov
mov
mov
adc
push
jl
dec
dec
les
pmaxsw
dec
add
in
dec
jb
and
inc
xchg
mov
jl
cltd
mov
ret
jp
test
sub
imul
hlt
push
ror
iret
test
or
insb
inc
inc
mov
cmp
sbb
add
dec
iret
repz
fcompl
inc
or
loopne
xchg
int
imul
pop
inc
sub
aas
into
mov
jp
sub
rorl
xchg
dec
arpl
mov
mov
movsb
cmp
xor
es
mov
popf
ficoms
dec
xchg
mov
jb
in
inc
aas
add
mov
mov
push
cmp
sbb
cld
xlat
fisubrs
lret
inc
enter
sub
fisttps
cwtl
mov
mul
xchg
add
sbb
paddusw
ret
dec
scas
dec
jmp
and
sub
adc
rcrl
xchg
dec
lods
dec
cmp
mov
sub
arpl
clc
pusha
mov
loop
mov
xchg
push
cmc
loop
jmp
jg
lret
sahf
push
pushf
jo
inc
sbb
xchg
mov
loopne
pop
lret
movl
xor
adc
add
test
ds
adc
outsb
xchg
popf
shll
cmp
jmp
icebp
dec
orl
sbbl
aam
cltd
cwtl
das
jnp
clc
inc
xor
push
cwtl
int
jl
sub
pop
outsl
jl
insl
cmp
sub
aad
mov
mov
mov
cmp
xor
pushl
adc
xchg
mov
add
mov
and
call
add
push
fidivrl
push
mov
xchg
dec
ss
xor
push
sub
mov
adc
add
xor
sbb
xor
or
lds
mov
or
push
enter
shlb
and
cld
xor
sbb
jae
mov
loopne
cltd
jg
out
enter
adc
popa
adc
mov
jno
mov
ljmp
aam
mov
push
sarb
fsubl
icebp
and
pop
lods
scas
shlb
xchg
pop
clc
sub
stos
lret
jl
orl
and
or
mov
in
test
xlat
push
jae
je
mov
lds
mov
xchg
add
xor
repnz
mov
jg
add
push
pop
fs
nop
push
fs
ret
loop
sbb
jno
test
insb
push
into
popa
enter
inc
lods
pop
dec
jne
adc
dec
dec
in
stos
sub
jne
jb
jp
mov
lods
fs
leave
sub
mov
sub
mov
xchg
ret
mov
outsb
and
push
adc
or
fcompl
inc
loope
adc
cmp
mov
cwtl
jbe
adc
and
cmp
cltd
aaa
jo
in
mov
inc
dec
mov
xor
push
xchg
pop
fcom
push
inc
push
xchg
pop
outsb
fucom
add
lods
mov
dec
xchg
daa
jl
mov
lock
popa
push
rcrb
or
pop
dec
rorb
aad
or
sbb
xor
cmp
loopne
sbb
xor
xor
xchg
movsb
sbb
jns
mov
negl
sub
add
les
lods
jle
adc
shr
mov
xchg
popf
fsubrl
js
sub
ljmp
pop
mov
test
fldcw
fidivrl
pop
pop
cmp
pop
sub
test
rcll
shll
mov
es
cmpb
inc
lret
iret
push
push
fs
cmp
int
mov
add
xchg
ds
aaa
mov
xor
les
mov
lret
add
lock
mov
jbe
fldt
lea
in
or
cwtl
xor
fwait
fs
or
xchg
pop
scas
add
jno
sarb
out
xor
pop
leave
movsl
shlb
dec
loope
xchg
mov
push
in
arpl
in
adc
jbe
push
xchg
mov
test
cmp
mov
outsb
cmpsb
mov
aam
mov
leave
std
sbb
mov
jl
jns
dec
shr
enter
outsb
outsb
daa
xchg
push
les
push
mov
mov
push
lahf
inc
sahf
cs
mov
or
push
dec
xchg
mov
dec
popl
stos
dec
mov
pusha
mov
cmpsb
push
jle
sub
in
fisubl
jle
cli
dec
or
icebp
push
fcompl
rcrb
addr16
pop
sub
push
jmp
mov
or
xor
cmp
dec
stos
sbb
mov
mov
mov
pusha
xor
rcl
pop
insl
xchg
jne
xchg
jl
lds
xchg
dec
mov
or
cwtl
mov
xorps
adc
jno
in
adc
imul
decb
fcmovu
outsb
inc
fs
insb
outsb
mov
or
pop
aas
enter
insl
nop
dec
int
lret
sarl
jb
cli
in
call
leave
dec
or
cmc
mov
sub
sbb
sub
sub
xor
xor
xor
adc
jne
shl
dec
pusha
push
aaa
sbbl
push
jae
test
aad
inc
mov
push
push
jo
xchg
add
jl
mov
sub
xor
clc
push
pop
push
jmp
inc
addb
dec
lea
mov
int
sbb
div
jne
mov
mov
jle
loope
loopne
lret
add
pop
pop
sub
popa
data16
adc
bound
mov
icebp
cld
cmp
lds
or
sbb
lods
add
xchg
jo
add
fimuls
in
dec
cs
subl
pop
pop
lock
fiaddl
loopne
popl
cs
pusha
inc
mov
xor
outsl
and
mov
push
shrl
cmp
inc
loop
jae
stc
ja
or
inc
jp
nop
mov
das
enter
add
in
or
jp
dec
dec
sub
xor
stos
cmp
push
mov
shr
paddw
sbb
jl
pop
push
movl
stos
in
xchg
sub
mov
mov
jmp
rcrb
sti
into
lock
xchg
mov
vhsubpd
xor
inc
out
xchg
imul
dec
loope
mov
cs
fs
daa
push
lock
dec
push
sub
cmp
test
shll
loopne
js
lods
cmpsb
sub
xchg
loop
repnz
fsts
mov
dec
mov
mov
cmp
lock
pop
cmp
nop
add
in
dec
pop
sub
inc
movsb
gs
insb
jbe
adc
mov
mov
xor
sub
lock
inc
pushf
ja
mov
add
out
pusha
in
pop
into
mov
lock
mov
into
push
xchg
rcll
jl,pt
add
addr16
sub
add
pop
mov
test
mov
ret
stos
dec
adc
sbb
xchg
xchg
lahf
pushf
test
cmc
loop
or
xchg
mov
and
cmp
test
hlt
pop
jb
xor
jl
push
xor
dec
not
call
xchg
ljmp
mov
cltd
adc
pop
in
or
popf
jb
jle
mov
cwtl
sbb
push
jo
mov
jnp
jp
enter
mov
nop
adc
lret
scas
repnz
xchg
xchg
divl
ss
xchg
iret
clc
rcll
cmp
stc
push
sbb
mov
repnz
push
and
add
jmp
cltd
inc
pop
stos
ret
cmp
imul
sti
movsb
dec
sbb
fldcw
cmp
in
shll
test
cmp
cmpsl
dec
sbb
test
push
test
push
sbb
imul
es
dec
inc
mov
fidivs
insl
mov
xor
push
cmp
cld
jecxz
lods
ja
xor
fsubl
fisttpl
js
adc
test
dec
xor
lds
lret
dec
lret
out
mov
bound
sti
scas
sti
inc
xchg
testb
dec
out
mov
xchg
or
or
adc
stc
fs
fyl2xp1
push
and
scas
cmp
sahf
loope
mov
or
mov
push
mov
jo
cmp
lock
xchg
mov
sub
mov
dec
test
pop
pop
mov
mov
sub
jb
std
push
add
movsb
jg
scas
jno
out
inc
cmp
vcvttpd2dqy
jmp
scas
mov
mov
imul
out
mov
inc
pop
mov
push
in
mov
movsb
aad
or
lahf
sbb
push
std
in
pop
cmp
or
xchg
add
insb
inc
mov
and
in
std
scas
int
insl
inc
jbe
pop
lcall
lds
lea
jp
ljmp
aas
cmp
xlat
and
lret
cmp
add
std
iret
add
std
xor
push
nop
mov
push
int3
jne
ss
cltd
pop
lods
sub
inc
jmp
adc
ret
in
xchg
out
std
scas
imull
push
lea
mov
je
sbb
out
xchg
in
mov
mov
inc
cld
sub
cld
loopne
push
into
test
and
or
mov
mov
adc
in
popa
and
lods
sbb
xlat
push
push
add
cmp
loopne
loopne
sbb
pop
pop
fidivl
ret
test
adc
xor
sub
jae
sub
sbb
lds
imul
pop
shll
fbld
daa
loop
lods
fscale
xchg
out
cmp
jnp
hlt
lea
in
or
dec
xor
sbb
and
aas
mov
sub
popa
xchg
sahf
mov
lahf
stos
jmp
inc
stos
ss
sbb
xchg
fstps
pop
xor
cwtl
fwait
adc
dec
adc
xchg
lea
sbb
or
pop
mov
mov
pushf
dec
mov
ss
push
shr
fwait
dec
jg
faddp
xor
fsubs
push
mov
push
lret
fcomps
addr16
sbb
shrb
jg
sti
sub
mov
leave
jne
push
lcall
ljmp
lods
aaa
loopne
or
cwtl
lods
lods
mov
and
push
arpl
ds
lret
lahf
mov
mov
repz
xchg
push
clc
xchg
inc
xor
jp
aaa
mov
push
mov
adc
loop
xchg
or
je
add
insl
sub
xor
xchg
push
and
insl
jae
jmp
movsb
mov
fld
aad
sub
xor
cmp
outsb
lret
in
outsb
mov
cmc
pop
dec
gs
orl
fstpt
push
pop
sbb
mov
xor
lret
mov
cmp
cmpsb
jo
insl
pushw
lods
sbb
fmull
pusha
add
out
mov
xor
imul
cltd
fcmovbe
imul
push
and
cli
in
lock
bound
fildl
jmp
leave
jg
pcmpeqd
popf
out
mov
enter
sar
lds
cmpsl
xchg
sub
movsl
addr16
mov
popf
lahf
add
and
or
int3
push
outsb
mov
mov
xchg
fldl
xchg
add
daa
adc
lods
movsl
mov
cmp
rclb
xlat
test
xlat
add
pushf
xchg
pop
pop
dec
dec
sub
or
inc
xchg
lock
aaa
jge
pop
into
jno
xchg
pop
jle
icebp
in
mov
std
shrl
inc
int
fcmovne
test
shl
xchg
jae
jno
xchg
push
insb
ss
pushf
pop
push
pop
adc
fwait
and
cmp
rcrl
imull
bnd
movsl
divl
push
daa
mov
and
sbb
and
ja
lcall
push
and
and
int
sub
loopne
xor
xor
aaa
pop
out
add
mov
or
cmp
mov
push
xchg
dec
sbb
xor
inc
enter
jnp
shll
test
jg
sbb
fildll
movsb
adc
roll
mov
xchg
out
push
int
cwtl
mov
and
add
loopne
inc
sub
out
push
aaa
sub
in
das
ret
xchg
outsl
and
pop
xor
add
sub
repz
jg
sarl
inc
out
adc
dec
xor
scas
or
xchg
add
mov
push
ficoml
and
push
out
push
or
jmp
inc
and
mov
int
mov
mov
subl
fnstcw
push
out
pop
add
imul
mov
arpl
cld
pop
mov
lret
add
lea
pop
sub
pop
sub
mov
sub
aad
pusha
leave
adc
fidivl
rcll
fstpt
cltd
addr16
aas
gs
dec
aaa
std
es
push
aaa
sbb
popf
adcl
sti
jo
enter
push
insl
pop
sub
outsb
pop
push
jp
sub
cmp
sub
xchg
sub
fistps
repnz
call
packssdw
add
shrl
jb
jbe
or
dec
push
mov
in
aaa
mov
fcmovnb
sub
pusha
and
jge
das
fmulp
mov
sub
lods
rol
xor
sahf
mov
cmp
mov
add
pop
push
pop
sub
xlat
inc
lret
pop
in
lahf
xlat
xor
mov
or
or
push
mov
push
inc
mov
int
sub
fstp
lods
xchg
mov
push
in
dec
xchg
lock
sti
sub
mov
daa
xlat
push
add
fstl
xor
mov
sbb
or
mov
cmovo
cmp
movsb
enter
sbb
ljmp
iret
dec
push
scas
shll
add
cld
aam
inc
adc
scas
call
nop
lcall
mov
insb
dec
cld
std
pop
mov
and
jmp
cltd
or
add
emms
out
push
stc
addb
scas
les
adc
sbb
test
mov
or
enter
leave
jnp
push
dec
cltd
mov
mov
mov
and
push
cltd
sbb
mov
flds
cli
dec
loope
inc
mov
inc
dec
sbb
sahf
mov
dec
xchg
and
pop
jp
xchg
outsl
stos
adc
lods
shlb
scas
xlat
mov
mov
int
call
add
lahf
adc
xor
xchg
loopne
xor
loop
mov
enter
lahf
pushf
xchg
add
ret
ret
in
dec
add
test
enter
add
jle
popf
lahf
mov
pop
cmpsl
jge
dec
int
call
inc
call
cmp
or
pop
dec
sub
adc
popf
sahf
mov
push
pop
pop
das
or
mov
fimull
jae
inc
repz
pop
fsubl
xchg
xor
pop
mov
add
imul
adc
loopne
jg
test
and
jb
xor
jge
aad
xlat
fidivs
mov
sbb
pushf
aaa
or
test
fnsave
sbb
cwtl
add
lods
adc
jne
shl
xchg
push
sbb
and
sub
mov
xor
sbb
pop
cmp
add
cmp
sahf
jnp
mov
push
lds
pop
jnp
movsl
push
xor
cmp
sbb
movsb
sti
aas
xor
mov
sarb
int3
inc
data16
push
nop
mov
jno
cltd
or
jl
inc
sub
pop
shlb
and
iret
imul
loop
aas
mov
and
arpl
fisubrl
mov
jmp
out
cltd
jno
out
shrb
out
aam
jmp
sub
data16
and
scas
ja
pop
and
fisttps
mov
lea
fldt
ja
stos
mov
xchg
dec
sbb
aam
jo
or
icebp
sbb
jecxz
xlat
js
jae
lret
ja
jle
leave
and
ja
lods
repnz
inc
scas
dec
mov
rclb
lcall
in
jb
sbb
mov
aad
jl
sbb
pop
test
inc
nop
in
scas
lcall
inc
jb
jno
mov
xor
out
ficompl
or
or
mov
cwtl
je
or
mov
mov
loopne
out
push
dec
sub
ja
fists
sbb
clc
push
adc
xchg
jl
dec
sbb
xchg
or
xchg
xor
xor
and
xchg
inc
sbb
xchg
aad
cwtl
cmp
jbe
add
imul
push
ficompl
repnz
push
loop
cmc
xchg
lock
aaa
out
mov
arpl
and
jno
jb
xchg
outsb
jnp
sbb
lret
jle
sbb
jns
jl
arpl
das
in
xor
pop
mov
dec
jle
or
jmp
andb
jno
jno
mov
sti
mov
sarl
mov
jo
cld
loop
sbb
jnp
mov
mov
shll
pop
jecxz
mov
dec
cwtl
aad
roll
cmpsb
mov
inc
aaa
sbb
arpl
andl
mov
mov
adc
or
push
mov
icebp
scas
cmp
mov
xchg
sub
addr16
push
add
sbb
repnz
pop
in
dec
in
outsb
xchg
add
rcl
in
cmp
in
xor
in
xchg
jp
bound
jge
fstp
pusha
and
lea
push
outsb
xchg
dec
leave
orl
lock
inc
mov
pop
mov
scas
cmpsb
mov
mov
cltd
pushf
cmpsl
call
arpl
scas
add
inc
mov
inc
repnz
push
push
clc
mov
push
xchg
test
movsl
xor
jns
sub
rcrb
scas
jae
xor
inc
lret
das
notl
push
jl
cmp
jae
bound
stos
xchg
and
outsb
mov
rorl
lock
mov
sub
jmp
clc
push
cli
clc
lock
sbb
fisttpl
adc
xorb
sbb
fistpl
in
sub
adc
insb
cmp
cmpsl
es
test
test
push
rclb
sub
das
jp
mov
inc
arpl
idiv
fwait
mov
or
xor
mov
adc
lods
pop
faddp
outsb
cmc
xor
push
mov
mov
lea
and
jne
stos
ljmp
pop
xchg
pop
lods
jno
push
test
push
cs
call
inc
push
xchg
and
std
sbb
js
pusha
push
jnp
rcll
je
js
test
outsl
cltd
sbb
daa
js
setae
adc
mov
rcrl
inc
mov
testl
and
xor
and
jmp
push
out
pop
cmp
mov
inc
pop
mov
sub
cmp
pop
fldenv
mov
push
mov
outsb
lret
add
inc
cmp
push
push
pop
xor
mov
sahf
filds
cmp
or
test
adc
and
scas
das
sbb
xchg
icebp
clc
add
cltd
inc
pop
pop
jne
in
shrl
inc
xorl
outsl
mov
adc
adc
pop
pop
mov
mov
imulb
sub
jle
push
fcomps
mov
mov
cli
mov
add
mov
ja
mov
push
or
negl
stc
dec
decl
and
xor
jmp
ljmp
addb
test
ud0
jb
add
xchg
or
cmpsl
push
ret
pop
add
pop
jge
jbe
pushf
scas
push
or
adc
pop
rorl
fs
mov
jp
data16
and
xchg
into
fisubs
es
mov
and
shll
xchg
mov
popf
faddl
and
sub
mov
int3
cli
lret
out
pushf
mov
lcall
js
ret
xchg
scas
aad
xor
inc
mov
or
lcall
stc
sub
mov
rclb
inc
leave
mov
add
jle
ret
sti
cmpsl
sti
aad
pop
outsl
fdiv
jp
push
mov
scas
lcall
pushf
lcall
or
mov
jnp
fimull
imul
mov
mov
jns
int
xor
stc
pop
cmp
inc
xor
and
nop
mov
call
mov
xor
movl
lds
cmp
sti
pop
enter
pop
inc
mov
pop
xchg
lcall
sbb
jge
cmp
add
outsl
cmp
hlt
loop
call
pop
ror
push
insl
lahf
roll
mov
mov
jns
hlt
cltd
roll
scas
in
inc
mov
test
jl
sti
fs
mov
out
adc
arpl
arpl
xchg
fwait
lods
add
cmp
dec
mov
sub
cld
lods
in
mov
cwtd
popa
xor
movsl
js
lock
push
pop
and
stos
cmp
xor
movsl
sarb
in
inc
out
pop
stc
ljmp
icebp
ljmp
sbb
mov
lret
sbb
pop
mov
pop
xchg
js
mov
inc
dec
lods
nop
mov
popf
stc
mov
dec
push
mov
push
frstor
xchg
dec
repz
mov
add
scas
popa
push
test
xchg
jl
clc
ds
pop
sbb
mov
mov
push
out
popa
jne
je
inc
add
pop
jp
cmp
fnsave
jae
fldt
sub
cmpsl
inc
mov
outsl
push
sub
lret
in
xchg
out
out
dec
push
into
icebp
or
cmp
sbb
pop
xor
jg
fsubl
test
add
xchg
cmp
aaa
shll
cmpl
stc
mov
push
fldl
mov
xchg
push
push
mov
mov
repz
sub
dec
sarb
mov
dec
loop
jne
dec
push
stos
repz
test
add
stc
lret
mov
push
inc
xor
iret
lds
dec
or
or
add
pop
shll
or
cmp
addl
mov
repnz
hlt
pop
arpl
pop
lahf
sbb
jae
and
leave
lea
or
js
dec
cmp
test
scas
sub
pop
sub
dec
push
clc
jecxz
xor
and
push
lahf
mov
movsl
jnp
std
pusha
mov
les
inc
jno
dec
loop
jnp
clc
sub
xchg
insb
xor
sub
xchg
mov
test
int3
lret
pop
add
mov
jg
jg
test
mov
pop
or
loopne
in
ret
jmp
push
shlb
mov
lods
push
add
arpl
rolb
or
fnstsw
or
or
sub
inc
divb
mov
mov
into
mov
push
mov
dec
testl
scas
mov
js
or
movsl
cwtl
xchg
or
pop
ljmp
or
fwait
rcrl
cmp
mov
sbb
xchg
mov
pop
std
icebp
aam
add
adc
xor
pop
fnstenv
shlb
je
mov
ss
xor
in
out
pop
divb
mov
cmp
fisubl
inc
dec
lret
mov
push
or
arpl
repz
incl
cmp
jl
add
inc
nop
xchg
add
lret
xchg
iret
idivb
in
xor
hlt
sbb
sub
clc
mov
enter
xlat
out
pop
xchg
lea
push
xchg
fwait
stc
xchg
nop
adc
lds
ret
inc
clc
arpl
loop
adc
cwtl
shll
outsl
fsts
push
and
lods
xchg
gs
repz
add
fidivs
jo
pop
xchg
movsb
lret
jp
lods
push
jb
xor
enter
add
mov
add
pusha
sub
mov
mov
std
pushf
xor
adc
loop
pop
push
popa
repz
mov
ret
mov
std
pop
movsb
inc
pop
or
ljmp
cmc
inc
inc
xchg
leave
divps
jp
leave
repz
pop
pop
lods
jp
and
lret
scas
jno
in
xor
mov
or
push
xchg
mull
rol
fs
push
mov
jecxz
add
js
popa
shr
inc
imul
dec
lea
push
insl
add
adc
repz
mov
jle
lods
pop
lea
data16
push
sbb
ljmp
int3
cmp
mov
push
into
push
rorl
aas
inc
add
data16
popa
ret
push
sbb
push
push
lea
xlat
mov
sub
xlat
call
test
mov
ja
pop
jo
dec
sub
subb
sbb
mov
loop,pt
les
lea
adc
push
add
daa
in
shll
dec
repz
cmp
into
mov
das
cmp
loopne
push
inc
adc
or
cmp
cs
mov
push
seta
pop
rclb
lods
mov
jmp
inc
imul
mov
les
sbbb
pop
in
push
je
aaa
xchg
bound
pop
add
mov
je
adc
ds
ja
dec
jo
pop
jecxz
in
mov
jnp
fidivrs
lock
adc
jns
lock
jle
pop
jae
nop
daa
fldcw
hlt
or
sti
aaa
popf
jns
xchg
setno
pusha
add
ret
jbe
push
jno
push
mov
lock
divl
insl
pop
lret
push
ja
mov
leave
mov
sarl
adc
xchg
insb
aad
rcr
lds
in
gs
jno
lret
ret
stc
xchg
and
push
jle
retw
push
xchg
inc
xor
cmp
pop
push
cwtl
pop
push
pminsw
imul
cmc
stos
mov
mov
sti
sahf
sub
fcomi
mov
mov
sub
xchg
dec
mov
push
and
test
jnp
scas
mov
cld
cli
xchg
jp
inc
mov
sbb
mov
xor
jmp
xchg
loopne
andl
ja
ds
rcrb
lods
mov
out
aaa
ja
mov
aam
jl
out
add
mov
cmpsb
ds
nop
mov
icebp
imul
pop
xor
lock
jae
add
and
pop
jb
xlat
cmpsb
dec
sub
sti
xchg
mov
pop
lock
xchg
sbb
cmpsb
pushf
add
incb
xchg
mov
stos
scas
xor
mov
jo
or
xor
xor
dec
testb
cmpsl
lea
mov
sub
jnp
enter
js
out
jno
jb
das
stos
js
sub
xor
and
dec
arpl
aam
add
push
xor
push
ds
dec
lock
xor
mov
sub
or
imul
ss
push
sub
inc
push
fnstsw
in
les
pop
call
mov
cli
jns
sbb
sbb
rcrl
and
loope
push
push
cmp
mov
xchg
xor
adc
jge
out
loopne
push
push
xchg
hlt
shl
push
push
xchg
adc
test
sub
lret
mov
movsb
jp
or
cmp
push
mov
mov
insl
xchg
in
outsl
iret
bound
lret
loope
mov
xchg
int
scas
lods
pop
adc
or
cmp
pusha
pusha
xor
sub
aam
lret
xchg
inc
pushaw
sub
shl
imul
shrl
mov
shrb
xor
mov
mov
dec
fidivrs
or
pop
push
ja
cmc
add
imul
out
mov
and
fcoml
push
mov
dec
repz
cmp
push
adc
mov
dec
in
sbbl
push
lods
call
jg
jno
jge
sub
sub
or
call
pop
cmpb
in
out
movsl
insb
ds
dec
in
push
cmp
xor
sbb
cmpsl
jmp
pop
xchg
test
bound
adc
dec
in
mov
addr16
imul
pop
dec
xchg
xchg
or
scas
sub
fcmovb
mov
insl
imul
pop
in
lods
test
testb
and
xchg
ja
cmp
stos
push
es
inc
sbb
and
mov
ljmp
test
fadd
ss
test
repnz
out
les
cs
inc
leave
frstor
mov
xchg
xchg
das
mov
or
das
movsb
mov
daa
divl
push
mov
cmp
js
clc
xchg
sbb
call
xor
lcall
push
pop
popa
negl
mov
sbb
push
lea
cs
in
sub
pushf
xor
xchg
js
cld
dec
scas
outsb
ljmp
sar
adc
cli
adc
pop
fnsave
cmp
pop
xchg
fwait
pop
sub
negb
ret
lcall
mov
push
lea
andb
ds
sub
push
pop
cmp
imul
add
xchg
push
mov
jl
dec
divl
scas
sbb
xchg
dec
add
fidivrs
std
pop
or
jmp
test
ss
jmp
sub
inc
mov
push
js
rclb
fwait
sbb
xchg
sbb
divl
xchg
enter
jo
inc
xchg
jecxz
bound
cmpsb
arpl
mov
or
adc
pop
mov
xchg
cltd
dec
xchg
push
dec
jne
mov
sbb
mov
mov
int
loopne
and
xchg
sub
sub
shll
lret
mov
push
std
cmp
in
push
cltd
mov
fidivrl
repz
jmp
into
pop
jle
inc
dec
sbb
call
adc
lret
sqrtps
jno
or
repnz
inc
loop,pn
jne
stos
ret
repnz
std
jae
and
add
movsl
loope
push
stos
scas
movsl
shll
mov
aam
repz
les
inc
mov
push
ficompl
xchg
push
cmpl
imul
iret
ss
lods
nop
sbb
aaa
aad
add
pop
subb
dec
cld
or
fs
dec
push
cwtl
lahf
out
loop
xchg
pop
mov
cmp
data16
pop
adc
add
out
cmp
pop
mov
arpl
daa
les
adc
test
and
enter
popl
scas
cmp
mov
in
and
or
sbb
xchg
stos
fbstp
or
nop
sbb
loopnew
out
stc
inc
mov
sub
push
cmp
mov
and
out
jle
ds
mov
aas
xor
sub
and
les
mov
std
sbb
les
xchg
test
xchg
test
fdivr
add
jns
cli
ret
mov
cmp
icebp
dec
jmp
hlt
xlat
dec
rorl
jae
mov
bound
inc
lds
jns
mov
cltd
jno
xor
testl
movsb
xor
push
jb
push
mov
xchg
repnz
add
int
xchg
cmp
sub
cmc
jge
in
in
add
out
stc
lods
push
xchg
inc
dec
out
xor
cld
jns
add
xchg
push
dec
xlat
mov
jge
sub
xor
addr16
hlt
pop
sub
sbb
ret
mov
pop
pushf
inc
lods
lret
sub
mov
sub
mov
test
mov
dec
sti
inc
mov
addr16
dec
mov
dec
adc
loopne
stos
sbb
stc
mov
mov
sbb
iret
insl
addr16
sub
inc
cli
lfs
dec
mov
push
in
cmc
pop
cmc
rcrl
push
adc
cld
fstps
mov
orl
fwait
adc
add
rol
xlat
add
mov
je
or
cmp
orb
lret
lock
xor
cmp
cli
pop
sub
mov
addb
cmp
cmp
fmull
inc
xorl
jge
data16
sub
fwait
adc
imul
ds
in
cmc
pop
test
cmpsl
xchg
leave
push
fstpl
aad
js
scas
add
adc
inc
lea
fwait
aad
test
ror
js
imul
lods
xlat
or
push
and
clc
fsubs
loope
fistl
mov
jnp
mov
xchg
lret
lods
adc
push
pop
fisttpll
data16
adc
cmp
jle
insl
out
aad
sub
xor
out
dec
cmp
loope
push
add
notb
jp
rcl
sbb
jle
in
jo
pop
sbb
mov
push
fcoml
pop
aad
out
or
mov
xor
xor
add
aad
xor
jmp
arpl
test
mov
add
push
pop
int3
jne
cwtl
leave
dec
sti
sub
js
cmp
mov
shrl
xchg
repz
adc
jbe
or
jmp
std
stos
mov
sub
icebp
shll
dec
jae
movb
cli
jnp
sub
addl
mov
jle
dec
and
sbb
or
mov
mov
clc
mov
add
mov
xchg
imul
jge
sbb
sub
jmp
shll
push
push
fsub
addr16
arpl
les
inc
imul
movsl
je
xchg
or
fucom
je
mov
lahf
xchg
lock
test
mov
das
in
stc
push
pop
xchg
mov
fbld
push
pop
dec
jl
mov
sbb
mov
jp
ret
xchg
jmp
sbb
ss
enter
ja
es
out
std
xor
and
loop
jnp
mov
push
mov
pop
inc
ds
mov
inc
outsl
cmpsl
sti
loopne
addr16
cmp
loopne
mov
test
imul
sub
cld
push
ret
xchg
pop
notl
rolb
xchg
adc
sbb
pusha
pop
jg
sbb
stos
lock
lret
test
dec
cmpsl
sub
or
cld
leave
pop
cli
sbb
cmp
sbb
xchg
push
push
xchg
sub
push
mov
pop
and
insb
adc
in
fdivrl
inc
repnz
in
fs
out
jbe
mov
xor
stos
mov
xchg
mov
jno
enter
lock
bound
mov
jne
or
hlt
mov
in
inc
and
ret
or
mov
mov
ret
rcrb
lods
insb
mov
jo
pushl
add
jbe
aam
sub
ret
push
push
fmull
mov
popf
cli
mov
insl
in
daa
in
fs
pushw
sub
stos
ja
and
dec
mov
mov
scas
ja
aad
dec
aas
cmp
out
xor
cmp
ds
insl
ret
push
xchg
mov
out
outsb
add
sub
sbb
add
sbb
outsb
sbb
andb
jp
mov
data16
inc
je
jnp
pop
stos
mov
inc
sbb
push
pop
out
sbb
xor
or
lea
in
add
mov
mov
add
mov
out
dec
sbb
sbbb
ds
or
and
push
lods
pop
and
bnd
dec
cmp
sarb
xor
sbbb
jmp
fwait
arpl
dec
lahf
test
stc
jnp
mov
inc
inc
addr16
pop
dec
push
mov
repz
adc
jl
mov
sbb
xchg
fstp
leave
jecxz
gs
jmp
enter
or
xchg
ja
cld
hlt
aam
xchg
das
and
or
jmp
fwait
xchg
daa
sbb
jg,pn
sar
dec
scas
in
aas
pushf
jl
lods
ret
loopne
inc
sbb
xchg
ret
in
ja
sub
call
or
push
inc
mov
out
movsb
ret
out
xchg
int3
cmc
gs
sbb
push
sub
push
xchg
xchg
adc
xor
jle
aas
adc
add
pop
arpl
pusha
dec
icebp
pop
pop
mov
push
mov
mull
out
and
repz
movsb
inc
pusha
cwtl
xor
fimuls
mov
das
mov
dec
out
stos
movsb
jns
sbb
sti
rcrb
repnz
cmp
jb
jno
enter
xchg
pop
sahf
push
lods
loope
rorl
sahf
xor
or
xchg
add
fadds
sbb
shlb
sbb
fsubs
nop
mov
shrl
jl
imul
push
sbb
dec
ss
dec
pop
xchg
loop
mov
sbb
mov
sbb
jb
ljmp
out
mov
decb
das
jb
fwait
outsb
sti
repz
lods
daa
sti
fcmovnu
notl
adc
pop
mov
or
push
js
ljmp
xchg
scas
ds
inc
pop
lock
push
out
cmp
cmp
cmp
jnp
push
shll
mov
pop
mov
adc
loope
mov
iret
in
arpl
xchg
push
fdivl
push
jno
dec
adc
mov
mov
cmp
fstps
lods
add
mov
mov
lock
ljmp
clc
test
dec
pop
js
push
adc
push
outsl
add
sub
icebp
je
inc
lret
hlt
rcl
cvttps2pi
lods
mov
jge
dec
test
xchg
mov
jbe
mov
cmc
into
cs
adc
mov
push
incb
xchg
mov
sbb
sub
repz
orl
adc
loop
lock
leave
js
add
adc
dec
in
call
cmp
pop
popa
clc
loop
adc
mov
ss
sub
or
add
je
les
push
aad
adc
out
push
sti
cmpsb
out
sub
das
pop
jb
fbld
pop
mov
pop
call
mov
mov
in
jl
das
cmc
je
std
xchg
test
and
inc
dec
xor
and
xchg
lcall
mov
repnz
adc
ljmp
mov
mov
xor
dec
das
sbbl
mov
push
pop
and
mov
mov
mov
add
push
push
test
xor
loop
dec
adc
jge
xchg
sbb
imul
inc
or
xor
mov
aaa
push
popf
les
and
add
mov
popa
pop
ret
push
mov
inc
inc
xor
pop
xchg
xchg
xchg
jne
mov
aad
dec
fsubrl
mov
cmpsb
ds
xor
sub
mov
mov
fistpll
jecxz
pop
jbe
xchg
push
pop
push
sub
stc
xchg
xlat
setne
lods
imul
dec
dec
arpl
push
mov
call
shrl
xchg
add
push
sti
movsl
imul
fildll
xchg
lock
jbe
mov
scas
xor
pop
clc
xor
inc
icebp
mov
push
and
cwtl
rcl
inc
jmp
mov
sub
cmp
xor
sub
mov
sarb
cmp
cmp
sahf
dec
xor
add
add
into
repz
test
bnd
les
cli
scas
push
in
jmp
push
jp
bndldx
xchg
mov
fdivrs
or
jb
fdivp
add
mov
ja
std
jmp
lcall
add
repnz
cmpb
daa
scas
and
mov
or
add
clc
pop
dec
dec
push
push
jmp
inc
inc
push
dec
jno
sub
push
je
roll
xchg
call
inc
cmpsl
and
sub
pop
cwtl
aam
xor
dec
mov
sbb
insl
mov
push
leave
loope
test
iret
sub
pop
popf
push
cmp
js
das
xchg
pop
add
sub
cwtl
mov
mov
repz
imul
dec
ja
mov
mov
fildll
pop
pop
sub
data16
mov
stc
sub
xorl
xchg
in
idiv
sbb
arpl
fiadds
dec
insl
clc
cmpsb
inc
icebp
in
xor
or
sub
fldcw
fldl
popf
loop
mov
stc
fnsave
pushf
ds
pop
jno
pop
out
call
and
xchg
loopne
and
fisttpl
mov
loopne
idivl
inc
pop
call
sbb
xchg
ror
int
pop
xor
mov
xor
lahf
cld
xchg
jl
jmp
pop
pop
and
jnp
mov
or
daa
hlt
and
and
cmp
lcall
push
or
jecxz
fbld
mov
push
daa
inc
fldenv
mov
adc
add
aaa
cmpb
dec
popf
imul
lock
lods
jg
jmp
repnz
push
inc
xlat
mov
nop
add
enter
adc
jne
sbb
test
mov
or
in
sbb
jne
push
data16
and
dec
iret
or
lret
in
sub
gs
mov
xor
arpl
imul
imul
sbb
cmpsb
enter
dec
shll
lcall
lods
cmp
ds
xorb
push
and
addl
xor
sub
je
inc
xor
push
add
mov
adc
push
mov
push
sbb
dec
jne
loopne
pop
and
cmovp
ja
aam
ja
or
pop
stos
push
div
cltd
ret
mov
jp
sbb
movsl
in
xchg
int3
and
aad
sbb
pop
mov
mov
inc
aaa
leave
scas
rolb
sbb
sti
lahf
cmpsl
daa
pushf
shrb
enter
inc
push
sbb
mov
mov
lcall
test
sbb
mov
mov
lahf
and
push
cmp
bound
test
gs
dec
and
inc
push
cmp
jno
and
rcrb
cmp
leave
shl
test
and
enter
fcmovne
inc
ret
jg
out
icebp
rorb
ficoml
in
xor
fs
lods
movsl
adc
adc
jge
mov
and
mov
stos
mov
mov
incb
mov
dec
andb
xchg
inc
push
and
addr16
stc
or
push
or
pop
pop
lcall
cld
inc
testl
sub
mov
xor
in
cltd
pop
das
mov
jp
rclb
xchg
lock
inc
lret
ja
inc
ficomps
xchg
pop
dec
pop
ror
fld
or
adc
jge
call
stc
jae
xchg
aam
shrl
arpl
popa
mov
imul
mov
jp
push
popa
add
in
mov
mov
test
inc
jecxz
pop
ret
inc
les
jl
sbb
leave
xor
mov
inc
into
xorb
xchg
xchg
and
xor
sbb
pop
lcall
adc
sub
shlb
mov
add
adc
mov
or
lods
jns
stc
pop
dec
mov
hlt
cs
pop
jge
push
lods
cmp
icebp
sub
cmp
jmp
mov
dec
mov
ss
mov
data16
xchg
adcl
mov
sub
and
fiaddl
xchg
mov
adc
out
jne
jl
and
cmpsb
push
subl
mov
xor
adcb
ret
push
enter
aaa
sub
das
pop
insb
mov
inc
in
aas
ds
mov
sbb
sub
cmp
gs
dec
xchg
sti
sub
fistpl
repnz
add
movsb
enter
lret
in
scas
fwait
mov
dec
outsl
sbbb
add
add
jge
and
ret
pop
hlt
mov
in
stos
sub
mov
movsl
cs
xchg
insl
lret
xor
jp
or
mov
in
mov
fsts
and
push
outsb
aam
out
xor
cmc
cmp
pop
cmc
shrb
add
jecxz
movsl
push
adc
insl
lods
jl
mov
add
mov
cs
or
rorb
mov
clc
xchg
cmp
mov
mov
out
orb
es
adc
inc
mov
in
cmp
pop
and
cmc
std
in
call
adc
mov
xchg
mov
adc
data16
fucomi
repnz
xchg
bound
mov
mov
aas
imul
sbb
imul
scas
pop
test
inc
fstpl
cld
xchg
push
stos
call
cmp
inc
imul
xchg
dec
sub
fstsw
std
pushf
mov
stos
mov
clc
jp
cs
or
pop
cwtl
hlt
xor
mov
xor
test
xor
cli
sbb
std
xchg
adc
les
adc
mov
adc
loopne
fwait
adc
lahf
fdivrs
imull
and
in
enter
xor
aas
sahf
inc
push
inc
pushf
sarb
addl
rcl
xor
pop
jp,pt
sub
and
std
push
mov
leave
lds
pushf
cwtl
push
aaa
adc
adc
xchg
inc
cmp
leave
cmp
cmp
adc
cmp
mov
lret
and
jns
push
iret
or
adcb
sbb
sub
adcl
adc
push
and
iret
je
adc
jmp
xchg
jecxz
adc
push
cli
xor
mov
and
jne
pop
cs
xchg
cmp
out
cmp
aam
push
aad
push
loopne
fwait
std
lcall
in
xor
cmp
mov
adc
cmp
in
mov
jp
bnd
popa
in
sub
orl
jb
loop
pop
ljmp
es
repz
cmc
divb
mov
pop
daa
outsb
mov
pop
inc
pop
push
pop
test
and
mov
lcall
add
cmp
mov
lret
out
jge
stos
push
xchg
and
rcl
pop
out
movsb
scas
and
add
stc
aas
arpl
out
sub
ret
pop
outsl
fcoml
orb
lods
xor
out
imul
jb
lods
aas
lods
stos
shr
inc
fnstcw
clc
mov
push
lahf
cld
pop
mov
cli
sub
mov
add
push
das
sub
cltd
push
addr16
push
out
xchg
push
mov
xchg
imul
cmp
sub
push
dec
xor
and
shrl
mov
or
push
lcall
xchg
lcall
push
xor
sbb
push
jno
sub
or
or
sub
lock
loop
and
fsubrs
xchg
mov
fxch
xor
dec
and
mov
jb
repz
sarb
pop
scas
test
bound
pop
test
test
je
mov
cmp
sub
xchg
pop
ja
jmp
cmp
loop
idivl
jne
mov
jno
add
sub
dec
rorl
xchg
dec
jo
dec
jae
push
push
or
mov
popf
les
ja
fsubp
inc
push
push
jbe
jae
imulb
mov
sub
in
inc
cwtl
gs
sbb
xor
rcrb
xchg
cmp
call
imul
insb
mov
jle
dec
sub
mov
xor
test
push
jo
jns
mov
pop
jmp
in
mov
xor
ja
arpl
jp
push
jge
leave
mulb
negb
jmp
pop
das
out
xchg
ss
aad
maskmovq
notl
enter
ss
mov
push
mov
pop
xchg
stos
mov
jb
dec
fisttpll
pusha
cmc
fstpt
push
ljmp
iret
jmp
icebp
daa
sarb
je
fs
adc
add
mov
dec
and
pop
and
sbb
xor
xorb
and
shlb
shl
dec
mov
mov
jecxz
shll
rcl
push
sub
addr16
das
pop
sahf
xchg
xchg
outsl
iret
adc
mov
imul
push
lcall
dec
xchg
and
sbb
mov
sbb
mov
and
sti
sub
imul
xchg
in
add
xchg
std
shlb
dec
dec
stos
sub
mov
add
jmp
fldl
add
and
scas
push
inc
lcall
pop
repz
stos
out
in
scas
nop
rorl
loop
fwait
daa
pop
inc
pop
push
out
in
or
movsl
js
inc
popf
xchg
fadd
lcall
sbbb
sahf
jecxz
mov
arpl
cmp
mov
add
mov
xchg
shl
movsb
add
insb
add
inc
arpl
nop
sbb
fsubs
lock
dec
inc
popa
testb
xor
inc
ja
sbb
pop
loop
xor
movsl
mov
sbb
jg
jmp
inc
out
pop
pop
inc
jmp
mov
mov
cli
xlat
aad
jmp
add
into
hlt
sub
adc
imul
xor
in
cli
fs
bound
imul
push
inc
xchg
add
cmp
inc
mov
fwait
lods
test
and
lahf
ficomps
scas
lods
lcall
rcr
pop
mov
loopne
addr16
movsl
jl
loopne
lret
je
sbb
push
js
stc
push
xor
lahf
cmpsb
mov
movsl
dec
test
in
rcll
loopne
add
adc
inc
shll
inc
or
mov
pushl
rcrl
sbb
cmp
xchg
loopne
aad
cltd
rclb
push
std
lea
enter
test
mov
aad
call
into
or
mov
pushf
push
lea
insb
dec
outsl
cwtl
mov
pushf
push
clc
cs
jno
pop
lods
dec
adc
ret
pop
push
punpckhbw
xorl
adc
imul
sub
cmpsl
sarb
idivl
inc
xorl
mov
frstor
or
cld
rcrb
push
cli
loop
adc
rorl
xor
pop
cld
mov
and
mov
jle
aaa
test
push
ret
mov
and
cmp
or
push
jle
fildl
fsubrl
movsl
inc
lret
and
pop
sub
mov
dec
dec
or
push
cmp
push
test
enter
negb
cmp
xchg
repz
mov
push
mov
xchg
insl
divb
rorb
mov
ror
xchg
mov
xor
and
ljmp
aas
jp
mov
lea
push
add
mov
inc
pop
psraw
mov
leave
inc
popf
es
neg
sbb
mov
leave
mov
popf
mov
ds
in
pop
sbb
xor
cmp
adc
mov
in
push
and
jae
xor
cltd
aas
dec
mov
xchg
push
aas
fistps
ror
cmp
xor
lds
orl
roll
push
push
push
lret
lret
inc
and
pop
push
push
mov
cmpsb
dec
or
mov
pusha
lret
das
adc
incl
and
xor
xchg
arpl
xor
jecxz
add
pop
iret
inc
les
inc
adc
mov
je
mov
lods
fidivl
dec
ret
sub
and
mov
and
int
int3
lahf
or
add
add
mov
mov
xchg
inc
daa
xchg
jp
push
arpl
shrl
cltd
stos
push
pop
adc
push
inc
mov
loope
sub
aas
inc
fldl
sahf
insb
mov
das
push
in
mov
mov
xor
pop
sbb
or
adc
enter
out
enter
stos
push
stos
out
mov
xor
lds
inc
repnz
cmp
es
or
xor
sub
jns
xchg
pop
repnz
push
clc
and
or
addr16
sub
lret
pop
jmp
mov
fsub
imul
jle
xlat
adc
in
sub
mov
pop
jnp
jae
sahf
fiadds
mov
mov
addb
xchg
lds
or
dec
lcall
cmpb
int3
fwait
sbb
mov
mov
push
xor
sbbl
outsl
or
mov
frstor
cmpsl
dec
jo
imul
xor
std
js
jns
pop
test
mov
dec
and
mov
cltd
jmp
or
jns
int3
lods
pop
add
ret
jo
push
fisttpll
icebp
push
xchg
cs
jb
adc
cs
test
mov
test
lock
movsl
xor
aam
xchg
movl
push
pop
mov
scas
xchg
adcl
popf
pop
pop
jmp
std
xor
push
rorb
stos
pop
mov
pop
mov
mov
add
popl
cmp
aam
sti
cmp
xor
pop
pop
pushf
imul
add
xchg
jle
testl
lahf
aad
movsl
mov
mov
cmp
mov
pop
mov
dec
xchg
xchg
cmp
xchg
sub
iret
adc
pop
and
mul
mov
hlt
imul
and
in
ljmp
clc
dec
cltd
sbb
push
pop
inc
mov
pop
cmp
mov
int3
lret
jle
push
popa
in
js
push
lahf
dec
pusha
or
orb
jmp
scas
pusha
aad
pop
fmul
cld
shlb
fisttpl
and
adc
fisubrs
mov
and
xchg
idivb
mov
fiadds
dec
jge
xchg
sub
sahf
xlat
out
xor
iret
mov
mul
jmp
lcall
cmc
je
xor
fsubrs
push
push
xchg
aas
adcb
pop
jae
push
jbe
xor
aaa
pop
repnz
mov
inc
fs
lahf
or
test
stos
jae
repnz
pop
addr16
es
dec
lock
add
and
sub
push
jge
scas
out
sahf
mov
fcompl
jae
rcrb
push
xchg
mov
cmp
mov
cli
nop
lds
out
push
inc
xor
lret
or
jb
sar
add
add
repnz
mov
xor
std
std
mov
mov
pop
js
loop
fincstp
push
push
cmp
mov
sbb
push
push
cli
inc
or
mov
loope
inc
or
outsb
pop
sar
jbe
pop
mov
mov
data16
sub
pop
scas
dec
xchg
iret
xchg
xchg
push
push
cmp
or
aam
xchg
fidivrl
jae
jae
out
into
jmp
dec
outsb
mov
cmp
inc
jns
in
outsb
dec
mov
es
adc
mov
and
cmpl
jno
push
pop
hlt
and
adc
into
test
sbb
dec
outsb
mov
xor
or
je
mov
jp
xor
and
adc
imul
ret
fdivl
movsl
mov
sbb
test
sub
push
mov
jns
xchg
sbb
ret
mov
push
test
fisubrs
push
pusha
insb
repz
pop
aas
pushf
cmp
std
jmp
in
pop
out
pop
insb
and
out
icebp
xchg
mov
push
inc
push
hlt
test
inc
xor
pop
inc
das
push
xlat
sbb
movsl
fucomip
inc
sub
inc
in
dec
cmpl
addr16
xchg
into
jne
pop
jge
loope
jae
mov
and
cmove
ja
in
in
mov
mov
loopne
sahf
lds
pop
pusha
adc
aas
test
sbb
sub
repnz
gs
and
aad
dec
scas
andl
mov
mov
sub
push
xchg
aad
jp
ficoml
jae
push
stos
or
sub
pop
fdivs
cmp
dec
ss
jecxz
xlat
push
pushf
mov
out
mov
lret
dec
push
addb
std
cmpsl
rorl
xchg
pusha
rcr
xlat
mov
add
cmpsb
ja
gs
xchg
out
dec
insb
jns
insl
aad
adc
call
jl
or
pop
and
loop
xchg
xor
loopne
fs
data16
dec
or
jb
mov
std
jg
jle
out
iret
sub
jmp
cmp
sbb
ss
inc
cmp
mov
xor
iret
movsb
fisubl
fistl
fcoml
inc
lea
jmp
push
addb
cmp
sub
hlt
adc
and
or
xor
cmp
pop
sbb
out
vprotb
jge
andb
mov
rol
adc
mov
mov
inc
fnstsw
pop
xchg
pushf
shr
sub
sarl
cmpsl
jmp
ret
js
shll
cmp
jae
inc
sarl
ficoml
cld
mov
push
leave
mov
jno
lcall
les
jns
xchg
lret
mov
stc
push
and
stos
shrl
movsb
mov
pop
int
mov
pop
pushf
pop
jb
leave
loop
xchg
enter
adc
mov
and
sbbl
mov
outsl
lea
es
add
insl
lds
clc
sub
ljmp
rorb
fwait
sbb
jne
outsb
xorb
call
rcl
lds
xor
inc
mov
daa
mov
pop
jae
mov
ret
popf
scas
imul
dec
aad
test
fmul
jnp
rcrb
into
into
in
movsl
sub
leave
mov
adc
fdivr
outsl
sub
lret
mov
sbb
int3
test
add
testl
mov
ret
push
addb
mov
sbb
insb
xchg
mov
jo
cld
ljmp
pop
insl
sahf
mov
imul
mov
imul
inc
adc
mov
xor
mov
lret
add
jl
data16
jb
lea
and
dec
jne
sub
loop
push
jmp
xor
lret
xchg
push
dec
aam
or
jne
jecxz
cmp
sbb
mov
mov
mov
movsl
lahf
popl
xor
mov
push
push
jne
xor
ret
lea
pushf
negb
and
mov
or
jmp
cmp
adc
sbb
lcall
hlt
cmp
cmp
xchg
sahf
sahf
mov
das
mov
das
sbb
fbld
jnp
out
push
jecxz
fimuls
mov
mov
ret
lahf
scas
inc
lret
out
and
pop
dec
movsb
xlat
fstps
outsb
push
cmp
xchg
addb
add
vmread
xchg
ss
addl
dec
rcrl
data16
int
js
xchg
sbb
fistpll
cmpsb
enter
cmp
add
add
call
sub
sbb
cmp
dec
push
test
fstpt
test
out
mov
xor
xchg
stos
fldt
fwait
mov
out
repnz
xor
cmp
iret
popa
cld
add
shrb
lahf
insb
pop
fstps
inc
rorb
icebp
loopne
mov
ficoms
out
ds
imul
loope
out
fwait
push
int3
or
mov
mov
and
sbb
cmpsb
push
push
pop
jecxz
add
in
mov
clc
es
sub
sbb
aad
dec
add
inc
pushf
inc
jae
ja
jp
int
popf
lock
xor
cmp
outsb
cltd
lods
aas
jge
mov
out
adc
mov
lret
pop
ret
int3
mov
pop
dec
mov
push
jo
xchg
jno
lret
cmp
aaa
xchg
jns
cmp
dec
arpl
inc
push
sbb
lock
jg
pop
xchg
insl
xor
push
lock
idivb
sti
dec
mov
mov
add
mov
push
jne
jg
mov
xchg
icebp
test
imul
mov
aam
bnd
cmpsb
xchg
mov
mov
xor
dec
jne
xchg
dec
mov
ror
jnp
mov
in
xchg
mov
in
or
lcall
jae
stc
outsb
mov
mov
xchg
or
mov
into
fs
fstpl
test
std
popf
pop
mov
adc
aad
out
jb
in
add
repnz
popf
jle
mov
inc
sbb
or
pop
sbb
fcmove
sbbl
cli
loope
jl
cmp
ljmp
mov
sbbb
push
xchg
mov
in
daa
pop
xlat
fwait
dec
test
lahf
dec
and
cwtl
dec
jmp
mov
push
or
add
pushf
stos
or
lods
jae
cltd
push
fadd
mov
pop
mov
and
loopne
xor
push
test
sbb
clc
imul
xchg
adc
mov
xchg
ss
into
pushf
cmp
pop
pop
mov
pop
and
enter
mov
sub
pop
mov
cmp
pop
rolb
mov
lock
mov
jbe
xor
jae
into
mov
push
movsb
pop
out
inc
jno
and
dec
test
mov
adc
mov
xchg
push
insl
fmul
inc
jne
and
cmp
sbb
jne
sub
fists
pop
outsb
cltd
inc
xchg
cltd
jbe
ljmp
dec
pop
in
push
fwait
test
mov
mov
insb
ljmp
jo
pop
aam
imulb
adc
cmp
push
fildl
sahf
testb
jnp
sub
and
dec
xchg
call
out
in
dec
jo
mov
test
mov
inc
int3
cltd
jbe
fwait
sub
jbe
pop
ja
mov
int3
push
jne
mov
cmp
xchg
or
loop
lds
pop
aas
dec
daa
add
ja
push
and
sub
std
cmpsb
add
xlat
push
subb
stc
loop
jno
pop
rcll
cltd
std
out
cltd
push
cltd
inc
test
mov
mov
arpl
mov
pop
lods
push
mov
xchg
scas
adc
dec
arpl
add
shl
mov
mov
mov
mov
jg
and
add
jl
mov
pop
jge
aad
xor
rorb
cmc
mov
xor
mov
stos
movsl
jno
mov
xchg
jle
sarb
jnp
dec
sub
repz
add
int3
adc
jl
sbb
xorb
out
test
in
or
loope
iret
test
jns
xchg
cmpsb
xor
in
imul
int
sbb
jle
xchg
mov
lods
xchg
fbstp
iret
adc
xchg
jnp
push
push
sbb
adc
inc
inc
cwtl
rorl
insl
test
jno
jns
cmp
and
mov
and
shl
fdivrl
and
cmp
testl
xor
mov
daa
push
or
dec
in
sbbl
in
in
dec
scas
push
and
adc
jns
push
add
xor
mov
bound
cmp
xchg
add
cmp
lock
pop
dec
cmp
cwtl
pop
push
inc
jnp
cmpl
in
cmp
cltd
in
popa
test
xchg
sub
loope
rcr
adc
pop
or
rorl
or
sub
outsl
dec
in
pop
push
jne
jns
testb
sbb
cmpsl
out
mov
je
stc
mov
and
inc
je
leave
adc
je
inc
jmp
shlb
cwtl
jg
bound
loope
pop
les
push
xchg
rcl
popa
scas
lret
mov
leave
cmpsb
test
pop
or
andb
push
daa
imul
scas
fucomi
adc
pop
cmp
xchg
dec
dec
popf
sbb
icebp
pop
or
mov
lods
xor
jb
loopne
dec
data16
inc
fs
std
sub
push
xchg
movsb
enter
xor
pop
cmp
push
add
lahf
cmp
stos
test
sarl
movsl
paddd
fstpt
xchg
sti
sbb
lahf
xor
xor
xchg
std
push
add
pop
dec
sar
pop
dec
mov
aaa
dec
imul
cli
movsb
add
dec
loop
movl
jbe
dec
mov
adc
pop
mov
xchg
jecxz
xchg
nop
jns
shll
or
je
mov
add
jo
sbb
pusha
mov
jae
or
jecxz
mov
mov
ljmp
cltd
inc
pushl
cmp
lret
fwait
xchg
orl
movsl
dec
insb
add
push
inc
test
adc
ljmp
dec
lds
mov
bound
les
in
push
andb
ja
inc
xchg
push
mov
or
sahf
or
push
mov
shll
sub
jmp
leave
xlat
push
sti
ret
fcmovne
call
hlt
orl
out
hlt
jecxz
rorl
pushf
fildl
outsb
gs
lret
ds
imul
data16
xchg
rcrb
and
xor
ss
jmp
cmpsl
jmp
add
icebp
lods
or
push
leave
add
push
xchg
int
inc
push
jg
push
fs
cmc
sbb
fwait
pop
xor
xor
cmc
fistps
sub
jne
push
mov
in
dec
rcrl
pushl
mov
das
sbb
out
cmpsb
daa
push
mov
jnp
movsl
ds
add
mov
shll
das
loope
pop
mov
cmp
xchg
enter
mov
mov
out
int
and
push
sbb
loop
aam
pop
outsb
outsb
loop
sub
test
adc
sub
pop
sub
inc
ds
mov
jb
js
lds
sub
je,pt
fiaddl
xchg
out
sub
or
push
fadd
mov
adc
push
mov
push
jmp
pop
pop
mov
lods
push
pop
or
popa
out
push
cmpsl
in
hlt
adc
lea
cmp
test
push
mov
xchg
mov
rolb
pop
xor
rcrb
aaa
mov
xchg
xor
mov
lret
xor
mov
aaa
loope
int3
enter
add
push
fcoml
sub
mov
loopne
jg
or
jno
pop
dec
xorl
sarb
mov
rcr
or
orb
sbb
dec
je
mov
scas
jp
int3
and
jo
shl
das
test
dec
push
pop
lock
and
mov
xchg
stos
cmc
add
cmp
pop
insb
jns
pushf
in
inc
push
add
incb
fdivp
and
fidivs
xchg
je
xlat
sbb
push
add
addr16
pop
push
inc
adc
in
iret
and
jl
popf
cmp
jns
pop
jmp
fldenv
sub
leave
add
ss
int3
testl
inc
jg
pop
enter
cmpsb
xchg
stc
jle
push
stos
jae
iret
stos
je
sbb
jns
loop
cmp
mov
push
and
cli
movsl
out
mov
addr16
adc
xlat
mov
fimuls
out
inc
inc
jns
add
push
addr16
sbb
aam
inc
in
cmp
sbb
daa
sti
popa
shlb
cld
adc
call
mov
in
dec
movsb
jo
dec
ret
or
sub
into
cmp
jnp
stos
int
sbb
xchg
dec
push
xchg
pop
xchg
push
ljmp
icebp
adc
popf
mov
mov
in
xchg
push
xchg
cmp
dec
add
aas
imul
mov
sbb
imul
dec
stos
and
push
mov
and
les
insb
fcmovbe
pop
outsb
jo
and
lret
xor
data16
push
lret
sbb
push
mov
bound
adc
add
insl
jmp
in
dec
movsb
or
icebp
push
sbb
mov
cltd
pusha
jns
mov
dec
push
in
inc
jno
imul
cmp
mov
enter
fcmovnbe
lods
loopne
bound
cltd
mov
dec
dec
add
shll
lret
int
jnp
sub
movl
xor
mov
mov
out
jo
daa
xchg
ds
std
push
mov
pusha
dec
xchg
cmp
decb
push
jl
jmp
or
xchg
ljmp
push
mov
jne
jbe
mov
push
dec
call
imul
sbb
lcall
mov
pop
sbb
jmp
aas
dec
call
mov
fnstsw
stos
pop
aad
imul
sub
out
add
pop
lods
cmp
mov
das
test
xchg
xchg
push
fisubrl
and
scas
idivb
dec
in
sub
repnz
xor
mov
dec
add
leave
cltd
pop
stc
mov
xor
or
dec
mov
mov
push
pop
xchg
cmp
jg
xchg
mov
jl
push
push
loope
movsl
and
jg
push
inc
xchg
insb
mov
pop
sub
sti
outsb
sub
push
int
cmp
outsb
daa
out
sub
jne
xchg
jnp
xchg
push
inc
movsb
fabs
test
sbb
lret
mov
movsb
inc
movsl
ja
cmp
bts
fildl
sahf
into
dec
into
movsl
rcrl
popf
inc
aaa
mov
mov
cmp
xchg
notl
mov
daa
test
sub
jmp
mov
rcl
rol
mov
xchg
add
add
shlb
mov
mov
xchg
bound
lods
repz
faddp
sbb
mov
mov
xchg
flds
fbld
test
dec
sub
mulb
mov
int
dec
movsb
and
outsl
mov
scas
mov
xchg
or
outsb
push
pop
gs
push
add
in
inc
loope
dec
xchg
shl
or
adc
outsb
test
mov
inc
mov
jp
fimuls
cltd
mov
mov
mov
call
rcrb
addr16
je
jp
ss
in
xor
popl
pop
icebp
adc
test
and
jae
icebp
dec
icebp
mov
sbb
aaa
mov
repz
add
lcall
imul
insl
mov
dec
pop
lock
fsub
xchg
sub
push
mov
mov
es
sbb
popa
mov
add
call
push
bound
sub
cmp
add
xchg
jbe
xabort
push
insl
fldcw
ss
in
pop
dec
aad
popa
cmpsb
popf
cmpsl
jmp
fstpl
in
push
aam
and
arpl
xchg
daa
mov
jae
mov
stos
lret
in
or
cmc
cld
jp
cmp
mov
ds
fstps
cmp
mov
pop
in
int
add
pop
push
clc
sub
pop
ljmp
int3
mov
jbe
and
xchg
lods
pop
jnp
rcrb
push
mov
mov
push
inc
mov
pop
jl
cmp
mov
in
jg
xchg
dec
mov
pop
jle
daa
sti
fisubrl
in
inc
or
jno
dec
dec
pop
bound
testl
add
or
jmp
push
stos
inc
pop
xor
into
inc
ja
or
dec
decl
xor
sbb
in
mov
mov
mov
cmpb
repnz
push
outsb
fistpll
push
data16
xlat
scas
cmp
jnp
lret
sub
mov
mov
out
jns
cmp
daa
or
outsl
sbb
sti
mov
cmpsl
fs
test
stos
or
mov
adc
mov
xor
test
hlt
push
mov
inc
repz
repnz
inc
fcom
pop
sub
push
push
jno
xchg
mov
jbe,pt
cmp
inc
adc
adc
out
mov
jg
adc
fnstenv
mov
scas
arpl
outsb
mov
clc
lret
out
pop
pop
into
add
xlat
out
andb
push
xchg
scas
ljmp
inc
sub
fisttpl
sbb
rcrl
insl
sub
jl
int3
pop
outsb
pop
xchg
pushf
aaa
pop
icebp
jbe
mov
popa
jle
aas
pop
xor
jecxz
or
orb
stc
mov
out
maskmovq
mull
aaa
mov
or
popf
fisubl
and
fldcw
xor
repz
loop
mov
and
or
cltd
sbbb
iret
push
std
cmpsb
sbb
sbb
inc
cmp
in
scas
fildll
push
shlb
pop
push
movsb
adc
mov
jg
dec
xchg
inc
popf
jno
xlat
jg
pop
pop
add
jp
mov
jecxz
lret
fistpll
movsb
cmpsb
mov
jbe
mov
jg
test
and
ss
pop
mov
cmp
inc
gs
frstor
add
das
pop
push
push
call
dec
mov
jb
loopne
mov
push
sbb
push
jl
std
jle
pop
or
mov
movsb
cmp
div
loopne
rcrb
add
dec
inc
sarb
sub
pop
adc
mov
mov
mov
das
jno
push
in
jmp
mov
movsl
in
arpl
push
xor
sbb
mov
movsl
or
mov
jl
fstl
inc
bound
adc
jmp
pusha
mov
sub
fwait
lret
pushf
push
adc
outsl
mov
dec
adc
out
xchg
and
pusha
lods
and
dec
sbb
jne
das
cmpb
jnp
cmp
into
js
or
xchg
mov
aam
test
mov
sti
push
rcrl
fcoml
lods
lods
mov
jnp
cwtl
dec
cmp
lock
xor
mov
icebp
iret
lcall
pusha
jp
inc
mov
mov
rol
sub
addr16
mov
add
jnp
frstor
sarl
je
xchg
mov
and
loope
pusha
push
movsb
rorb
push
adc
cmp
push
sbb
inc
push
or
mov
mov
mov
sbb
or
inc
pop
jb
and
imul
lss
call
into
repnz
mov
stc
gs
out
mov
loop
mov
test
push
xlat
pop
dec
das
sbb
mov
cwtl
and
push
loope
sbb
pushf
scas
push
bound
or
shlb
cli
mov
add
sti
or
out
movsl
jl
cli
jecxz
loop
add
popf
ret
jnp
sub
xchg
xchg
pop
out
dec
fidivl
or
cltd
push
mov
lds
push
add
sbb
jns
dec
flds
add
gs
mov
test
mov
or
lods
out
jg
outsl
inc
loopne
xor
ja
enter
fs
dec
sbb
rcrl
leave
and
mov
mov
popa
lcall
xor
repnz
xlat
in
lock
sub
mov
arpl
mov
mov
mov
dec
dec
fwait
pop
insb
sbb
pop
aaa
xor
bound
pop
adc
mov
adc
jecxz
scas
mov
jae
pop
pop
xor
mov
out
fsubr
adc
das
or
rcr
xor
xchg
adc
cmp
mov
cwtl
xchg
mov
je
push
mov
fcmovnbe
ret
sub
test
daa
nop
sbb
mov
hlt
mov
sbb
jmp
adc
dec
sbbb
add
jb
jmp
add
push
cmpsb
int
mov
push
adc
ljmp
or
insl
pushf
mov
idivl
out
test
sub
mov
sbbl
negl
hlt
clc
mov
test
sub
lret
inc
out
repz
ret
out
cmpsl
jecxz
cmc
ret
int3
scas
out
xchg
test
jno
sub
mov
orb
test
outsb
mov
fwait
jo
test
lret
leave
sti
dec
and
adc
ss
jmp
cli
jp
xor
xchg
test
fwait
or
push
xchg
adc
fistpll
jb
cltd
jb
cmp
mov
test
sbb
sti
mov
adc
fists
jns
sub
pop
xchg
push
fcomi
dec
xchg
mov
out
or
dec
mov
stos
jp
popl
popf
dec
push
and
out
inc
adc
push
push
inc
jb
cmp
jnp
mov
or
pop
movsb
cmpsl
sahf
mov
dec
lahf
mov
test
hlt
adc
icebp
fcoml
or
xor
cs
sub
xlat
mov
sti
or
ficompl
xchg
ja
push
sub
outsb
xchg
and
xchg
adc
mov
inc
and
aas
pop
test
cmp
icebp
dec
scas
test
out
stos
add
add
subl
push
cmp
stos
roll
jg
pop
out
out
cmpsl
dec
repz
fs
test
cwtl
aas
fisttpl
adc
lods
jp
test
jae
mov
xlat
or
out
xchg
sub
sarl
mov
sbb
loopne
mov
sarb
add
jo
fldenv
imul
xor
aad
and
dec
mov
ret
jmp
hlt
adc
and
dec
into
scas
loop
out
sub
dec
mov
dec
stos
pop
fwait
test
adcb
or
or
ljmp
pop
jmp
adc
pop
orb
xchg
fnstcw
sub
js
sbb
dec
adc
jbe
rcll
push
inc
lods
adc
pop
addr16
ret
jecxz
dec
mov
pop
add
jnp
xchg
mov
iret
dec
xor
pop
or
sbb
xor
or
inc
imul
in
loope
jbe
in
hlt
aad
mov
frstor
mov
mov
into
pop
dec
ja
outsl
daa
mov
adc
addr16
hlt
sbb
mov
les
adc
scas
loop
sbb
ss
xchg
jns
cmp
test
cmp
test
or
add
push
test
dec
xchg
sub
xor
sahf
adc
shlb
ljmp
and
or
enter
fisubs
mov
cmpl
nop
sti
mov
cmp
loopne
mov
jp
cltd
mov
xchg
jns
jl
notl
roll
repnz
add
adc
lcall
jmp
cld
inc
test
push
popf
lret
xor
mov
pop
push
pusha
in
in
lods
iret
mov
lock
mov
shl
aad
fbld
add
outsb
mov
jnp
je
pushf
nop
pop
sti
add
mov
aam
jl
icebp
pop
add
mov
xchg
mov
and
je
mov
push
cmpsb
inc
out
mov
rcll
mov
mov
into
imul
cmp
insl
jge
adc
or
push
sub
dec
movsl
in
sbb
movsl
in
test
fwait
jle
jl
push
push
loopne
test
mov
mov
aaa
push
or
nop
add
adc
into
lock
sbb
cmp
sub
fistl
fcoml
dec
mov
mov
add
jno
je,pt
xchg
jo
mov
dec
leave
je
push
push
dec
and
movsl
jne
pop
mov
fnstcw
push
sub
jo
dec
rcr
outsl
insb
jl
cmpsb
hlt
adc
addb
or
mov
sub
mov
int3
lret
test
test
pop
bound
movb
or
dec
sub
shr
into
outsl
xlat
dec
mov
pop
mov
mov
popa
jmp
sbb
jno
fsubr
loopne
dec
out
pop
sbb
cwtl
sbbl
lds
sbb
loop
fldenv
push
in
mov
leave
test
lahf
out
jge
lcall
movsl
aaa
popf
nop
adc
outsl
sbb
pop
out
lea
jae
in
outsl
push
mov
sub
test
xor
sbb
test
icebp
fwait
lahf
pop
enter
jmp
outsb
mov
loope
scas
es
push
pop
dec
sub
mov
xor
push
or
test
xor
test
pop
sti
sbb
int
fdivl
or
push
xor
fisubl
cld
push
repz
adc
ror
xchg
adc
jle
int3
sbbb
mov
adcb
fwait
sub
sub
push
sub
mov
nop
cmp
sbb
push
sub
lcall
in
push
jb
imul
loope
insl
or
test
xchg
test
xchg
add
rorb
aad
sahf
inc
xchg
lods
pop
loopne
aam
mov
xor
jns
pop
mov
fiaddl
or
subb
xchg
push
mov
lret
inc
and
in
jne
xchg
cltd
xor
xchg
xor
andl
movl
or
adc
cmpsl
mov
insl
leave
aam
and
xlat
push
lahf
xchg
xchg
bound
dec
adc
aam
xchg
inc
cld
popa
push
sub
pop
push
sub
jecxz
insl
call
pop
mov
mov
xor
mulb
arpl
xchg
mov
mov
in
sti
arpl
mov
or
xor
es
xor
cld
dec
dec
lea
scas
into
mov
push
jbe
int3
xchg
mov
cli
sub
lods
loopne
jmp
mov
sub
xorl
aam
imul
ljmp
pop
mov
cli
cmp
testl
jl
outsl
cmpsl
push
ja
outsb
fldl
cmpsl
inc
jne
pop
inc
ljmp
out
mov
dec
dec
jg
sbb
push
fwait
aas
dec
mov
xchg
or
das
mov
or
or
imul
pop
xorb
mov
leave
aam
out
aaa
mov
gs
jl
xchg
mov
jmp
movl
test
lea
call
out
outsl
xchg
mov
mov
sahf
lock
sbb
lahf
aaa
sbb
arpl
xor
sbbb
push
mov
aas
push
sbb
clc
dec
jmp
arpl
insl
sbb
or
nop
repnz
mov
mov
out
roll
stos
mov
popa
lea
lret
pushf
inc
sbbl
mov
mov
mov
push
insl
mov
xchg
loopne
adc
pop
sbb
scas
mov
insl
add
ljmp
or
pop
sub
pop
rorb
mov
xchg
sbb
subb
or
push
inc
insl
fcoms
nop
popa
push
mov
in
lcall
enter
xchg
lods
mov
mov
inc
push
fbld
in
std
or
mov
dec
inc
sub
or
adc
call
jl
outsb
addl
add
jl
stos
ja
orb
js
int3
call
add
xor
scas
shrd
mov
push
lcall
dec
pop
push
xor
pop
inc
repz
faddl
dec
mov
push
inc
repnz
stos
jno
fwait
mov
sti
repz
ret
das
iret
inc
adc
xor
out
or
and
mov
sub
inc
shr
ficoml
nop
mov
out
sbb
inc
fsubs
or
mov
movsl
das
cmc
sbb
rolb
test
pop
xchg
and
mov
sub
shrl
sub
into
imul
mov
leave
push
or
insb
adc
xchg
in
lods
sub
addl
fimuls
jae
inc
mov
std
dec
lock
sub
jb
movsl
call
xchg
ret
mov
add
add
out
or
sahf
sbbb
adc
pop
loopne
sbb
pminsw
adc
cmp
jg
test
cmpb
or
mov
jmp
ret
xlat
ljmp
stos
dec
lock
clc
lahf
in
jle
cmc
sub
pop
jmp
sbb
ret
and
xchg
frstor
push
stos
pop
dec
test
inc
mov
and
aas
dec
rcl
imul
and
adc
bnd
and
lods
add
in
into
and
ds
pushf
aaa
sub
pop
dec
mov
xor
outsb
xchg
ret
pop
ss
sbb
xchg
cmp
pop
or
test
test
inc
out
daa
xchg
and
das
idivb
mov
icebp
push
jns
jne
out
push
and
loope
inc
jl
push
shrb
inc
mov
mov
xchg
mov
mov
cs
rcrl
add
fstpt
movsl
movsb
sar
dec
iret
jae
ficomps
xor
out
mov
sub
outsl
lret
jo
ja
jae
jns
pop
sti
roll
pop
popa
rdmsr
hlt
pushf
pop
jno
push
sub
mov
popf
fs
mov
std
and
pop
push
jge
leave
add
fisubl
clc
mov
movsb
mov
testb
divb
mov
xor
lods
pop
pusha
pop
inc
mov
leave
test
dec
xchg
cli
push
mov
movsl
lock
hlt
adcb
ret
pop
dec
sti
enter
inc
sub
jmp
jle
int3
mov
inc
sbb
and
pushf
sbb
popa
outsb
xor
mov
or
jne
adc
mov
out
dec
out
ja
out
mov
push
lcall
inc
and
movsl
add
inc
push
xchg
mov
push
xlat
mov
movsb
nop
out
arpl
pushf
fisubrs
test
push
mov
xlat
aas
fcomps
sbb
inc
xor
dec
dec
and
push
add
sarb
adc
clc
push
adc
roll
push
mov
mov
sub
xor
mov
push
lcall
daa
mov
mov
mov
mov
mov
dec
lret
in
sti
inc
jmp
xor
movsb
sbb
hlt
dec
or
add
dec
mov
jmp
adc
ret
xchg
adc
icebp
outsl
xor
ja
pop
and
push
int
cmp
and
lods
jmp
mov
and
inc
sahf
jle
mov
or
sbb
out
leave
aas
xor
icebp
inc
xor
cmp
sub
pop
pusha
jb
hlt
addr16
inc
jnp
sti
jae
mov
and
movsl
mov
pop
mov
sub
lods
js
sub
jmp
sub
out
rcrb
push
sarb
mov
pop
mov
mov
call
pop
cld
mov
lds
movsb
sbb
dec
movsl
test
addr16
sti
adc
sub
outsb
nop
stos
or
and
cmp
cli
mov
lock
inc
dec
lods
int3
inc
sahf
sbb
je
jae
inc
jb
lock
dec
shrl
out
cmpsb
lds
out
mov
out
and
xchg
es
out
adc
jg
imul
out
mov
sti
and
int
sarb
jecxz
and
sbb
cmpb
cmp
mov
fsubs
out
je
xchg
lea
mov
push
out
lea
mov
pop
js
ds
push
loope
cmpsb
jno
fimuls
test
cld
mov
xlat
enter
test
cmpl
cli
push
push
aaa
cld
xor
sub
cmp
in
sbb
dec
push
nop
imul
xor
mov
test
add
add
shll
add
push
jg
pusha
sahf
pop
cld
ret
or
sub
loopne
or
push
jns
test
mov
xchg
add
filds
test
xchg
or
stc
add
push
xor
xlat
aaa
push
in
push
xchg
fucom
dec
loope
push
and
fidivl
repz
insl
lods
mov
mov
filds
xchg
cwtl
adc
ja
cmpsb
out
add
cld
xchg
mov
dec
add
xorb
into
jmp
daa
push
sub
or
fisubrl
lret
mov
test
jno
and
mov
fdivrs
inc
ret
mov
xor
and
mov
xchg
repnz
and
fld
les
fs
lods
jae
js
and
add
lods
int
push
inc
jbe
icebp
leave
dec
test
fcmovbe
movsb
andl
dec
push
ret
jmp
and
xchg
flds
cld
push
sub
push
stc
push
cmc
outsl
addr16
dec
cltd
push
sbb
std
lahf
imulb
frstor
xchg
jmp
xchg
pop
dec
movsb
fcoms
cmc
in
mov
rclb
inc
cmc
or
ficoms
negl
subl
aas
adcb
mov
mov
adc
jge
fstl
outsl
xchg
fadds
push
out
mov
mov
icebp
out
rep
jl
je
xor
shrl
sbb
adc
dec
mov
mov
shlb
mov
mov
fsts
fstpl
lods
outsl
pop
cmp
outsb
xor
mov
outsb
pop
jno
adc
dec
cmp
sub
pop
das
lds
test
xchg
mov
in
and
lods
pop
mov
ror
mov
aad
test
in
pop
popa
out
hlt
mov
loope
stc
pop
das
out
mov
fsin
stc
into
cwtl
xor
or
adc
jl
addr16
lds
call
add
dec
sti
dec
nop
repnz
popa
and
aad
dec
sbb
cwtl
pop
lcall
jne
add
les
and
or
cltd
loope
imul
mov
and
xchg
mov
mov
sub
jno
xor
sbb
frstor
xchg
sahf
mov
loopne
lods
mov
ret
ss
and
mov
imulb
andb
xchg
mov
fmull
outsl
mov
jbe
sahf
sbb
dec
ret
inc
lods
sti
sub
adc
cltd
xor
or
pop
push
jo
xchg
loope
imul
mov
inc
gs
cmp
mov
fsub
insb
loop
cmp
stc
ficompl
mov
xchg
jp,pt
pop
sbb
xchg
out
filds
xorb
jne
inc
sbb
sub
fwait
sbb
cmpsl
pop
dec
aaa
sbb
xor
push
movsl
lret
xor
out
inc
dec
jnp
sub
sbb
adc
loop
cmp
add
fisubrs
ja
lret
fimull
mov
pop
jo
jae
or
in
jno
fwait
mov
cmpsb
push
in
jns
mov
lcall
nop
sbb
iret
sarb
rclb
sub
cmpsl
mov
into
mov
insl
xor
pop
and
pop
roll
push
inc
je
xchg
pop
pop
push
mov
int
dec
aas
test
imul
idivl
rorl
test
sub
adc
in
inc
out
dec
mov
sub
ja
jl
iret
xorl
or
cli
lcall
fldl
mov
adc
aam
popa
int
es
rcrl
call
xchg
mov
lea
outsl
loopne
pop
lods
jns
mov
push
leave
sub
enter
mov
aaa
outsl
push
adc
dec
cmp
shl
jecxz
push
test
dec
les
mov
sub
push
paddw
mov
or
lods
jl
mov
outsl
and
xor
cmp
movsb
cmc
jnp
dec
hlt
pop
sbb
and
push
sub
lahf
subl
sub
rcrb
stos
mov
mov
out
add
hlt
ja
jg
pusha
push
lods
cmpsb
js
ja
fwait
stos
test
jne
xchg
inc
inc
inc
pop
lock
xor
cli
mov
xor
mov
shl
pop
cwtl
sbb
jnp
cli
ret
push
sub
gs
and
in
mov
jle
lds
push
repnz
int
push
push
cmp
jno
fs
sub
loopne
out
roll
aam
and
mov
push
xor
pop
xchg
adc
lods
cmp
mov
sbb
mov
push
sbb
loop
in
mov
inc
mov
in
fwait
test
fs
shlb
imul
mov
ss
jns
mov
inc
xor
sub
jne
cmp
fnsave
fwait
adc
pop
xchg
iret
mov
outsb
mov
loopne
xor
movl
mov
mov
cmp
mov
enter
xor
inc
scas
popa
ds
push
xchg
call
insb
xchg
mov
lds
daa
test
push
add
push
leave
std
fstpt
push
cltd
cltd
daa
mov
out
push
cwtl
or
cwtl
pop
mov
je
and
push
mov
cli
std
and
nop
rcll
sub
add
js
adc
push
adc
cli
jmp
mov
xchg
or
dec
mov
or
aam
mov
mov
dec
mov
stos
jmp
push
cmp
shll
jle
xor
scas
js
push
mov
inc
fcoms
or
mov
shll
les
ss
lahf
inc
repz
add
testb
mov
mov
outsb
xchg
imul
push
into
lcall
jl
push
jl
int
mov
jnp
and
mov
sbb
rcl
lock
fcoml
push
mov
dec
repz
xlat
push
fldcw
les
std
mov
jb
sbb
push
movsb
mov
inc
fistpll
push
subb
sub
out
test
cs
cli
nop
fs
and
pop
xchg
dec
test
add
cmpsb
inc
mov
mov
repnz
loopne
call
js
inc
mov
jge
scas
nop
rcrl
mov
shlb
int3
fsubrs
enter
mov
inc
pop
sahf
out
dec
lea
cmp
scas
xchg
hlt
sub
push
gs
fdivrl
call
xor
shlb
lods
fsubrp
jle
dec
adc
jle
aad
leave
outsb
nop
cmp
movsl
repz
daa
int3
pop
jge
and
or
fcomip
es
mov
xchg
xchg
push
mov
mov
jo
push
pop
adc
out
movsl
cmpsl
push
mov
push
mov
movsl
adc
hlt
ljmp
dec
sbb
sub
push
mov
jle
sub
addr16
call
jnp
xor
cmpsb
insl
rorl
mov
jmp
idivb
mov
jecxz
xlat
popa
inc
nop
in
add
jmp
aaa
nop
fstl
sbb
in
xchg
scas
out
lret
adcl
sbb
inc
or
sahf
or
addr16
popf
cmp
pop
lahf
movsb
sub
cmp
mov
shl
sub
mov
xor
push
inc
imul
cmp
add
xchg
js
movsb
rcrl
gs
mov
out
xor
sbb
sbb
xchg
not
adc
call
mov
and
sarl
mov
mov
mov
mov
inc
fcomip
fs
in
in
stos
mov
and
pop
fdiv
push
sbb
lock
jmp
je
xchg
xor
lcall
jp
addr16
repnz
cmp
cld
lcall
rdtsc
mull
xchg
adc
jle
mov
decl
cld
rcl
iret
in
ficoml
or
call
iret
add
mov
push
inc
cltd
sub
es
int
mov
sub
popa
sarl
pop
mov
add
cmp
jne
cld
push
inc
repnz
repz
jo
cmpb
cmp
data16
sub
dec
rolb
aas
adc
inc
fdivs
push
fnstsw
mov
insb
xchg
rcl
fcoms
cli
adc
stos
xor
dec
repz
xor
loop
movsb
pushf
enter
mov
add
push
pop
adcb
lahf
and
cs
lcall
adcb
loop
sbb
cmp
adc
int
test
or
push
xchg
or
outsb
xor
xchg
and
aas
addr16
sub
sbb
sbb
mov
jle
sti
out
addl
xlat
ss
fwait
rclb
jle
imul
xor
insl
mov
lahf
mov
push
fcmove
xor
jg
pusha
push
jns
cmc
std
fstps
push
xchg
xchg
sub
js
jl
imul
xor
in
mov
dec
push
dec
or
jmp
cmp
lahf
adc
flds
mov
mov
rclb
lret
sbb
js
mov
mov
push
enter
mov
sbb
inc
rcll
cmp
pop
mov
aaa
shll
fwait
push
cli
sbb
ljmp
sub
cmpsb
xor
xor
roll
stos
xor
ss
dec
push
adc
add
mov
pop
mov
lahf
enter
call
and
mov
stc
push
out
adc
add
lret
xchg
mov
lods
pop
push
les
daa
cs
ret
mov
mov
lds
dec
fdivs
mov
mov
ljmp
xchg
and
mov
mov
das
jmp
daa
mov
cmp
mov
xchg
or
adc
xor
adc
pusha
jns
rclb
in
mov
inc
ss
je
sub
je
leave
jno
mov
jns
mov
push
cmpsl
insb
jge
scas
push
mov
mov
jmp
sarb
arpl
paddsw
mov
ret
les
sbb
aad
ja
out
stos
and
jle
in
inc
imul
mov
dec
test
insb
jae
gs
sahf
mov
mov
mov
and
int3
pop
ret
sub
cmpsb
mov
adc
mov
fdivl
push
sub
mov
cmp
adc
pop
dec
test
aas
pop
pop
add
pop
pop
ss
xor
movsb
out
cmp
add
sub
inc
add
fisttps
dec
sbb
adc
xchg
adc
sub
jge
adc
push
cmp
dec
pusha
aaa
push
cltd
cwtl
cld
nop
std
add
sbb
push
and
jno
mov
inc
stos
xchg
cli
jmp
pop
cmp
roll
xchg
add
mov
push
mov
lret
adc
push
push
and
lahf
rclb
push
dec
xchg
inc
cmp
arpl
fsubrs
mov
imul
rorl
cwtl
leave
fnsave
sbb
mull
out
inc
das
fistpl
je
xor
mov
dec
mov
scas
pop
das
loope
repnz
lods
push
cld
std
pop
cltd
sub
mov
outsl
add
mov
mov
sub
sub
cmp
sub
jmp
into
xchg
dec
dec
mov
fadds
jge
mov
dec
inc
shrl
loop
push
xor
loop
and
jmp
rorl
push
mov
loope
clc
jnp
xor
jns
fimuls
push
ss
cltd
push
mov
mov
outsb
xor
jmp
sbb
pop
cmpsb
push
dec
cltd
jbe
and
and
and
jnp
adc
and
sbb
dec
loop
xor
add
dec
gs
adc
rep
mov
jns
mov
push
adc
insb
dec
sub
mov
sub
push
fsubrl
inc
push
aas
inc
mov
dec
rol
cld
jmp
ret
xor
inc
fldenv
dec
movsb
int
mov
sarl
fbstp
addr16
xchg
roll
sti
stos
ds
sub
shll
cmp
testb
inc
bound
addr16
repnz
test
adc
jae
mov
sub
mov
add
inc
roll
sbb
dec
pop
mov
and
call
loope
sarl
cmp
jbe
mov
stos
iret
fistps
iret
push
push
sub
push
sub
ret
xor
push
sar
addb
nop
movsb
cmp
and
sub
push
and
fwait
xchg
xor
loop
adc
test
clc
sub
fmulp
test
sbbb
jne
mov
mov
pusha
cld
push
sarb
divb
in
xlat
add
dec
dec
inc
in
addr16
data16
stc
sub
ret
and
icebp
fimuls
ljmp
int3
dec
je
inc
inc
gs
fidivs
repz
inc
mov
mov
aad
mov
popa
sub
lea
fsubrl
loop
mov
rclb
repnz
or
xchg
sahf
jae
into
xor
dec
dec
lods
mov
pop
fidivrs
mov
cmpsb
pop
push
sbbb
outsb
xor
pop
outsl
fisubs
out
adc
mov
sbb
pop
adc
rorb
or
outsb
loop
inc
sarl
jl
dec
jns
insl
scas
repnz
pop
and
mov
test
cmpsl
or
pusha
cltd
aas
flds
jp
scas
add
data16
jb
mov
xchg
aad
or
sbb
cmp
push
mov
mov
cmp
test
mov
rsqrtps
xchg
aad
jl
lcall
and
mov
cli
fldl
sbb
das
es
aad
je
add
das
add
inc
xchg
repz
test
jb
push
repz
inc
arpl
lea
enter
jmp
pop
lds
clc
and
test
sbb
and
adc
push
inc
cmp
or
sbb
xchg
push
push
lock
into
cmpsl
mov
mov
fnstenv
xchg
ds
xor
adc
imul
push
popf
loope
rcr
scas
cwtl
jle
push
xchg
cmp
into
ss
jo
xor
sub
jnp
lock
or
lods
rclb
add
sub
add
mov
and
xchg
int
mov
cwtl
adc
loop
xchg
mov
jg
mov
sarl
add
sub
loop
mov
jo
js
bound
or
stos
loopne
mov
adc
ret
insb
add
pop
push
mov
stc
or
xchg
or
stos
out
inc
sti
jmp
pop
sbb
sub
jmp
movsb
addb
xchg
jl
mov
lret
pop
shrl
incb
push
sub
or
jle
popa
sbb
popa
dec
les
push
add
mov
sub
mov
inc
jecxz
mov
jne
out
dec
icebp
call
repnz
lret
jmp
pop
xor
imul
push
testl
ret
sbb
test
sbb
popa
popa
lret
repnz
iret
mov
or
mov
mov
fwait
pop
jae
mov
mov
leave
fcoml
cwtl
lret
in
mov
out
arpl
push
test
test
mov
mov
pop
lea
fcoml
fidivrs
pushf
popa
pop
jle
int
xchg
cltd
rcrb
fiaddl
orb
loopne
js
xor
inc
jae
addr16
mov
es
repz
addb
mov
mov
rol
dec
jno
cmc
pop
jne
add
mov
stos
dec
inc
push
pop
or
cmc
adc
loope
push
and
ror
adc
mov
int3
dec
movsl
adc
lret
lods
enter
or
iret
fisubl
inc
lret
xchg
outsb
lds
xor
xchg
insl
clc
call
mov
das
pop
lea
xchg
aaa
sahf
add
sub
mov
push
incl
das
addr16
lods
add
adc
dec
pop
mov
movsb
leave
inc
pop
cmc
or
decl
shl
les
dec
andb
mov
ret
add
mov
mov
pusha
push
jmp
ja
jle
sarb
popf
push
mov
movsl
push
xor
mov
pop
dec
sub
cwtl
jb
cli
js
xor
sub
fisttpl
jae
test
incb
xor
mov
adc
cmp
repnz
inc
out
stos
bound
test
inc
addl
lods
xchg
stos
aas
push
lds
push
imul
scas
pop
push
cmpsl
gs
pop
in
inc
cmp
adc
jle
ja
int
and
mov
pop
sub
jo
popa
dec
push
jne
aam
pop
dec
fwait
test
out
fisttpll
jp
mov
fld
mov
jns
push
or
lods
cltd
call
int3
aas
loope
jl
jl
sub
mov
cmpsb
lcall
dec
mov
push
cmp
aam
pop
or
test
mov
mov
jbe
add
sbb
adc
jne
cmp
pop
lea
mov
sahf
pop
out
mov
push
dec
cmp
fdivs
push
enter
cmpb
mov
out
leave
xchg
fisubs
bound
push
mov
pop
dec
jmp
dec
inc
outsb
add
lea
jle
mov
fstpl
lods
mov
lods
in
mov
enter
ret
jmp
sub
fsub
lea
pop
xor
push
imul
ss
add
ret
jg
cmp
push
insl
mov
int
xor
fsub
lret
repnz
mov
add
aam
adc
fnstenv
mov
adc
ds
cs
or
dec
rolb
das
shlb
pop
rol
push
push
daa
xor
sub
ret
scas
scas
cld
or
pop
pop
xor
cmp
jmp
popf
sub
scas
lret
aaa
sbb
dec
jge
shll
lcall
call
pop
out
data16
cmp
mov
incl
push
int
xchg
xchg
add
mov
pop
fbld
out
jl
and
xchg
sbb
cld
inc
cmp
aaa
rcll
and
fadds
lret
jns
fs
incl
ds
mov
ret
shll
in
je
stc
popa
mov
xlat
aam
pop
das
xchg
ja
push
nop
or
fidivs
xor
jecxz
push
sub
pop
cmp
or
add
push
push
jl
push
xorl
scas
cmpsl
jbe
sub
add
xchg
add
inc
sbb
push
pushf
idiv
lret
inc
repz
stc
je
pop
adc
dec
mov
and
adc
pop
cmp
mov
inc
sub
jl
and
add
test
out
inc
or
sub
push
jb
roll
lcall
clc
shll
lahf
and
loope
cmpl
mov
popf
xchg
ljmp
test
jns
pop
jns
push
jns
mov
jno
out
inc
mov
jp
dec
ret
ss
or
mov
adc
rclb
sarl
test
aas
movsl
mov
mov
add
push
add
xchg
xor
dec
insb
dec
xor
aam
test
aaa
xchg
add
lea
sub
xchg
push
cmp
pop
ljmp
ret
adc
pop
xchg
inc
dec
mov
dec
pop
mov
inc
fdivrp
sahf
jge
add
jp
jmp
jae
mov
das
jnp
jnp
pop
decb
sbbb
dec
sti
call
scas
cmc
inc
cmp
in
mov
xor
dec
jne
je
aad
aam
es
loopne
jp
mov
dec
sarb
adc
push
shrb
sbb
rolb
push
stc
outsl
outsb
adcl
insb
repnz
inc
jb
sub
stos
push
xchg
mov
mov
and
sbb
add
mov
jnp
addr16
dec
mov
pop
test
pushf
lock
imul
mov
lahf
mov
fmull
xchg
xor
sub
in
int
mov
cmp
jbe
dec
push
mov
int3
xlat
enter
sarb
sahf
sti
iret
and
mov
ret
rclb
movsl
sbbb
loop
dec
divb
dec
imul
jecxz
int
outsl
pop
popl
cmp
daa
mov
das
dec
out
ret
inc
jmp
out
cmp
jne
or
insb
es
mov
imul
lcall
xor
cmp
sahf
xchg
jbe
fisttpll
sbb
bswap
inc
shl
mov
pop
and
push
aad
popa
iret
sbb
lret
lock
gs
xchg
and
push
inc
sarl
fdivrl
mov
push
or
pop
fisttps
test
cmpb
ret
fdivrl
mov
mov
mov
sub
adc
dec
test
and
adc
jns
nop
xchg
xor
lock
enter
mov
fidivrl
mov
in
sub
lgdtl
call
mov
sub
test
sbb
shrb
push
jl
inc
sub
push
sbb
aaa
or
aad
mov
mov
mov
sub
aaa
aam
scas
xchg
cmpsl
mov
lds
mov
in
lods
mov
fwait
push
dec
jno
mov
fisubrl
cmp
mov
mov
sarl
outsl
xchg
jo
cmp
jns
pop
data16
inc
outsl
scas
rcrb
pop
clc
cmc
dec
rcrl
ficoms
jnp
enter
bound
cld
cwtl
cmp
mov
adc
jb
xchg
pusha
xor
push
notl
inc
mov
mov
fsts
pusha
jno
outsl
cmp
push
shld
adc
inc
pop
mov
movsl
movsl
jne
les
add
add
jmp
cmp
push
pushf
inc
sub
mov
fsubrl
sbb
xor
xchg
out
mov
mov
outsl
aam
roll
mov
scas
mov
cmp
leave
mov
adc
mov
fstl
fs
xor
jbe
pushf
pop
lock
scas
inc
fistpll
ret
shll
adc
bound
outsb
in
dec
or
mov
test
push
movl
mov
loopne
sahf
lods
pop
pop
pop
cmp
cmpl
xchg
out
sub
fistpll
jo
ret
add
adcl
test
outsb
cmpsb
mov
adc
xchg
loope
bound
std
sbb
pop
and
in
ss
dec
mov
pushf
add
push
es
out
cmp
loope
insl
dec
ds
testl
push
rcr
rcll
add
push
adc
enter
mov
push
dec
out
lahf
stos
mov
cmpsl
aam
addb
mov
mov
xor
xchg
mov
jge
jo
push
inc
les
xchg
add
das
push
xor
call
aam
jmp
rol
fmull
adc
cli
ja
and
ja
sbb
add
sarl
lcall
jge
pushf
sti
fisubrl
cs
xchg
inc
xchg
push
sbb
lahf
dec
arpl
xor
cltd
lods
ljmp
and
fistpll
in
lods
xchg
mov
and
hlt
add
inc
int3
push
inc
mov
int3
adc
stos
test
mov
xchg
mov
push
out
loope
dec
inc
mov
fucomp
pop
inc
and
scas
mov
sub
inc
outsl
outsb
adc
test
push
pop
adc
jle
ja
xchg
mov
fucomip
out
addl
in
jecxz
xor
cwtl
pop
inc
je
cli
push
pusha
mov
outsb
lret
insl
and
in
mov
xchg
frstor
jnp
bndldx
mov
rcl
add
pop
push
mov
enter
into
mov
aam
cmpsb
out
imul
mov
adc
pop
addr16
xor
rolb
call
mov
xchg
mov
imul
mov
mov
icebp
xchg
mov
popa
dec
mov
lcall
mov
aad
mov
lfs
push
cmpsb
jno
aam
add
lret
imul
es
or
or
adc
push
hlt
fxch
dec
mov
jle
xchg
aaa
xor
pop
test
or
mov
data16
sbb
xchg
xchg
cmp
mov
cmp
test
cmpsb
xchg
sbb
xchg
jmp
cmp
outsl
jl
loope
fwait
mov
push
inc
aam
dec
call
add
xchg
cwtl
out
mov
in
outsb
sbbb
mov
push
shlb
sti
das
xorb
out
fsubrl
dec
mov
cmpsb
cmpsb
mov
jnp
jno
leave
jns
cmp
lea
iret
scas
mov
cmp
dec
ljmp
and
decb
inc
sbb
fnsave
cmpsb
jmp
loopne
add
lcall
fsubl
push
sbb
dec
daa
dec
inc
addr16
aaa
sbb
leave
sahf
das
mov
out
and
cmc
out
xor
inc
add
data16
add
loope
mov
call
mov
pop
out
jge
lcall
inc
shrb
cmp
jnp
add
daa
shll
jmp
lods
jl
inc
cmp
or
out
sbb
icebp
adc
dec
rclb
xchg
shll
xchg
repz
mov
mov
rcl
jp
lods
xor
fcmovnb
adc
stos
int
pop
pusha
adc
mov
pop
push
and
xchg
push
testb
push
xchg
mov
or
sbb
popf
loopne
fucomi
pop
adc
pop
ss
or
lcall
add
inc
movsl
adc
push
pop
ret
mov
mov
push
jns
sbb
cmpsl
inc
inc
push
inc
or
jl
xchg
ret
mov
and
daa
sbb
cwtl
push
add
xor
or
jb
ljmp
mov
aad
roll
mov
cli
cmp
das
jle
insl
pop
ss
sub
dec
bound
inc
ret
stos
adcb
in
shlb
xchg
sub
lea
xor
xchg
shlb
mul
repnz
push
repz
mov
xchg
cmp
bound
xchg
mov
mov
pushf
dec
out
mov
dec
test
cmp
or
and
jecxz
mov
jnp
int3
rcrl
pop
mov
jg
jns
mov
xor
leave
lahf
xchg
push
inc
or
sub
pop
scas
jmp
enter
mov
cld
jmp
clc
scas
pop
test
jne
sbb
in
adc
push
repz
inc
clc
jmp
sub
cmp
test
sub
bound
xchg
lods
jmp
loopne
xchg
mov
xor
icebp
ja
mov
push
push
or
testl
jg
mov
sbb
xor
outsb
jle
sbb
mov
imul
mov
xor
dec
ljmp
filds
mov
xor
fistpl
mov
push
or
xchg
les
add
dec
dec
movsb
fmull
lds
and
es
and
jmp
xchg
lcall
lods
lea
lcall
mov
cmp
fs
int
mov
outsb
aaa
and
cltd
lret
addb
scas
mov
inc
xchg
and
mov
xchg
push
xor
mov
mov
unpcklps
leave
fisubs
orl
dec
adc
sbb
sysret
mov
pop
iret
mov
mov
dec
xchg
xor
shll
sbb
inc
mov
inc
jle
pop
fcoml
stc
sub
push
ror
dec
lahf
ret
psubw
mov
je
out
das
cmp
das
ljmp
mov
jns
pop
jp
scas
cmp
or
out
mov
inc
adc
pop
cs
pop
mov
mov
mov
sbb
ret
push
dec
fwait
test
xor
sbb
xor
das
outsl
push
and
imul
hlt
fs
xor
dec
mov
lret
jmp
cmp
imul
cmpb
hlt
sub
mulb
xor
mov
jae
jle
addb
inc
out
xchg
test
outsb
mov
sbb
stc
out
push
out
out
and
inc
xchg
mov
mov
fs
mov
xchg
push
mov
fcomi
clc
or
int3
cmp
add
cld
and
xchg
orb
outsb
test
cmpsl
xchg
jp
pop
mov
xor
inc
call
testl
lods
and
mov
cmpsl
mov
pop
or
repz
xchg
ja
jnp
push
mov
and
and
mov
cmpsb
pusha
or
sub
addb
adc
push
xchg
and
outsl
pop
pop
in
xor
mov
xlat
mov
clc
loopne
pop
scas
ss
dec
je
add
mov
dec
adc
jbe
sub
mov
sti
pop
loop
xor
repz
cli
mov
or
mov
sub
fidivrs
rcll
mov
jnp
test
push
mov
pop
mov
cmp
xor
loop
vandps
xchg
pop
xchg
adc
popf
out
inc
pop
sub
das
int3
mov
jns
shl
xchg
add
push
add
test
mov
fwait
rorb
or
jmp
xlat
mov
and
xlat
xchg
scas
sbb
cmpsb
xchg
bound
out
ja
fstpl
mov
jo
jae
dec
xchg
dec
ds
lock
mov
sub
sub
inc
dec
outsb
jecxz
das
cmp
push
and
adc
lods
lret
mov
adc
cwtl
in
sub
std
xchg
bound
inc
inc
fwait
and
adc
jecxz
jo
adc
sbb
je
divb
sub
push
mov
insl
call
inc
pop
adc
jl
dec
insb
mov
stos
or
xlat
add
or
push
inc
and
jns
andb
mov
sub
cs
int
clc
ja
mov
nop
and
mov
movsl
inc
aaa
outsb
aas
aaa
sbb
xchg
ficoms
pop
cmpsl
out
stos
sbb
mov
cld
or
dec
mov
xchg
fistl
jmp
dec
and
rcrb
sbb
pop
test
xchg
xor
ds
mov
daa
ds
clc
and
jnp
push
xor
jno
pop
push
leave
paddw
adc
xor
lret
push
push
jnp
rcll
lods
inc
mov
pop
scas
push
rclb
mov
xchg
push
inc
adc
in
jl
sub
dec
jbe
icebp
mov
jle
movsl
xchg
jmp
mov
xlat
ljmp
popa
cltd
std
inc
sub
xorb
push
pop
pop
les
repnz
dec
fisubl
rorb
popf
jle
fnstcw
inc
mull
dec
jp
or
sahf
and
xchg
addb
clc
jo
stos
sub
pop
dec
ljmp
lcall
sub
dec
or
ret
getsec
insb
sub
test
mov
push
addr16
nop
mov
adc
rorb
fsubs
mov
jns
dec
push
ficompl
push
mov
add
mov
inc
repz
js
push
sub
xor
ret
sbb
stc
std
lock
pop
jle
pop
in
xor
fincstp
sub
in
sti
cld
pop
shrl
mov
lock
or
repz
xchg
jge
push
fidivrs
adc
cli
in
pop
popf
stos
leave
adc
sub
aaa
stos
pop
movsb
xor
scas
sbb
fldenv
test
insl
jge
in
mov
int3
dec
repz
movsb
sub
xchg
shlb
negl
ja
pop
outsb
cmpsb
xorl
pop
cmpsl
sub
ror
xor
mov
loopne
jl
std
fldl
pop
repz
lret
inc
cmp
xorb
out
movsb
or
imulb
pusha
or
aam
mov
popa
add
xor
sbb
out
sub
mov
pop
jae
adc
dec
imul
sarb
add
in
jno
mov
rcll
in
xor
jne
cmpsl
jbe
gs
cwtl
add
test
pop
and
sbb
xchg
lea
cld
sub
pop
sbb
inc
mov
pushw
mov
aas
mov
jb
lock
pop
xchg
adc
out
mov
fstp
xor
push
adcl
shll
mov
nop
jmp
xchg
add
cs
mov
push
sub
inc
mov
sahf
adc
rcll
inc
sbb
nop
mov
stos
mov
stos
test
fsubrs
bound
add
push
jmp
mov
cwtl
fwait
jne
shlb
mov
sbb
xlat
cmp
sbb
cld
imul
pop
pop
pop
push
push
inc
inc
mov
ja
out
int
test
fwait
sub
test
loope
pushf
cmpsb
repz
popa
subb
je
inc
clc
fidivrs
mov
int3
ljmp
sbb
jg,pn
int3
inc
inc
dec
call
dec
pushf
aad
xbegin
sbb
sbb
and
sbb
mov
int3
and
cmpsl
add
ljmp
nop
scas
inc
cmp
sti
push
add
xchg
jg
js
imul
push
push
xchg
xchg
pop
sub
iret
mov
call
in
movsb
lret
mov
les
adc
add
jp
mov
mov
hlt
jle
pop
sub
xchg
iret
in
dec
call
pop
inc
std
adc
push
lea
rolw
push
loope
pop
insb
xor
inc
cmp
clc
jge
cmpsb
enter
xor
imul
push
ret
cmp
xor
xor
loop
scas
je
lock
sub
aaa
xor
inc
test
sbb
adc
sbbl
or
das
mov
pop
loop
sub
aaa
movsl
test
cmp
sbb
mov
jnp
xor
sbb
xchg
je
sub
add
mov
arpl
lret
mov
jae
shll
call
xchg
and
or
and
loop,pt
mov
mov
sar
or
xchg
push
incl
cmp
inc
out
popa
jb
sub
ficoml
test
bound
mov
mull
push
cli
in
fisubl
xchg
insb
stos
out
lea
ficoms
iret
pop
mov
cmc
jnp
stos
inc
push
push
cld
imul
mov
cmp
cmp
xor
add
out
and
test
cmp
gs
js
dec
xorb
test
xlat
xchg
loopne
push
xor
repz
xchg
xchg
mov
pop
out
movsb
mov
inc
lods
adc
jnp
xchg
test
sbb
mov
xor
mov
and
cmpsb
xchg
xorl
jle
lea
adc
dec
mov
push
jns
xchg
leave
movsl
idivb
out
sub
insb
mov
decl
out
es
cmpsl
fstps
inc
xchg
rolb
jmp
xor
or
or
fisubl
cld
out
xor
inc
stos
mov
sub
jg
pop
lods
ret
ror
jmp
stc
leave
xchg
cs
push
loopne
in
push
cltd
pop
mov
or
int
clc
cmp
jge
mov
jge
stc
les
loopne
int3
leave
test
rcr
pop
jmp
orb
adc
mov
mov
in
roll
out
xor
push
adc
cltd
adc
out
in
mov
lcall
addl
daa
or
stos
dec
imul
pop
dec
and
sub
sti
jmp
dec
lods
mov
pop
adc
gs
jmp
jle
cmp
mov
ljmp
mov
mov
fisttps
out
fistpl
mov
xor
loope
jmp
inc
mov
or
or
add
sub
mov
inc
gs
xchg
push
xchg
adc
and
aad
dec
outsl
or
adc
push
cwtl
adc
mov
jbe
rclb
ja
nop
fistps
aam
sahf
inc
cli
cmc
in
out
fst
xchg
or
out
jns
inc
mov
test
sbb
scas
rorb
adc
xchg
je
std
sub
lods
jg
sub
call
mov
hlt
mov
std
repz
mov
sahf
test
es
repz
popf
js
mov
fs
cmp
push
add
pop
jmp
dec
lea
inc
faddl
pop
aaa
bound
dec
mov
mov
loopw
xchg
adc
lahf
jecxz
imul
inc
popa
testl
mov
cli
test
scas
ds
sahf
cltd
add
aaa
int3
or
mov
or
pop
jb
lcall
mov
push
mov
lods
push
mov
mov
cmp
daa
add
fstl
dec
stos
mov
lret
gs
mov
xchg
adc
fwait
push
xchg
pop
push
gs
cs
not
mov
push
or
adc
push
xor
xchg
push
call
mov
inc
hlt
popa
outsl
rolb
xor
hlt
mov
add
pop
add
out
rcr
shl
xchg
sub
mov
xor
scas
in
sub
cli
xor
add
mov
jge
sbb
bound
outsl
dec
cmp
not
xor
mov
rol
inc
aaa
push
pop
mov
jo
mov
dec
out
dec
test
fs
lea
les
or
idiv
xchg
decb
xchg
pop
in
mov
add
inc
mov
in
dec
das
div
fmuls
adc
sub
daa
pop
test
mov
fisubs
ret
je
xor
aas
ds
nop
test
xorl
fcmovnu
add
int
and
pop
out
sbb
mov
aad
push
loop
jbe
loopne
sarl
roll
xchg
in
fisttpll
pop
insb
jge
cmp
je
ficoml
xor
or
adc
mov
mov
push
xlat
js
xchg
dec
ja
icebp
add
pop
mov
pop
push
popa
mov
repz
mov
xor
mov
xchg
xor
mov
jns
cmp
add
and
push
sbb
repz
pop
cld
test
inc
or
jne
mov
add
xchg
arpl
out
iret
aad
sahf
shrb
clc
outsl
jbe
int3
stos
add
sub
push
xchg
jl
ffree
pop
inc
dec
clc
mov
enter
dec
push
fs
pop
cmovns
cmpb
cmp
jge
das
sbb
std
pop
insl
sahf
and
imul
lret
mov
mov
inc
add
jnp
in
and
gs
inc
sahf
cmp
repnz
push
adc
mov
jge
dec
xor
mov
jmp
sbb
les
lahf
sbb
sub
mov
aas
and
xchg
mov
sub
xchg
shll
adc
pop
and
or
enter
outsl
sarb
mov
test
leave
enter
cmpsl
shrb
test
daa
dec
pop
imul
pushl
mov
fistl
fnstenv
leave
loop
inc
jo
frndint
and
sub
push
pop
xor
fsubs
adc
rcr
fcoml
and
or
and
and
pop
mov
mov
inc
mov
out
push
test
jmp
push
ljmp
xor
and
clc
loopne
ret
xchg
outsb
xchg
xchg
push
test
cltd
add
sti
sbb
mov
xchg
push
popf
mov
lds
stc
and
lahf
push
xor
sub
sbb
mov
cmp
and
insb
mov
dec
fbstp
dec
cmp
mov
mov
cld
loope
or
andb
jae
xchg
cmpsl
int
cs
push
cwtl
mov
aaa
push
jns
jbe
pop
in
cmp
add
pop
dec
filds
mov
and
in
mov
xorb
data16
dec
outsb
lret
ret
imul
insb
adc
call
insb
dec
cli
push
negl
mov
mov
sahf
jg
jp
mov
es
pop
hlt
sarb
test
mov
cmp
scas
out
into
gs
sbb
mov
jne
fs
dec
cmp
into
sbb
xor
cmp
jnp
bound
jmp
add
pop
lret
addr16
sub
call
xor
shlb
dec
rcrl
and
mov
out
xchg
pop
sbb
icebp
out
lds
jmp
sub
jbe
jo
xchg
in
lcall
sbbl
cmpsb
mov
je
int3
jp
push
scas
sahf
stos
pop
shlb
fdivrl
nop
jp
add
js
dec
or
sti
mov
jne
mov
adcl
xchg
and
out
pop
cmc
mov
inc
dec
dec
mov
fdivr
fs
test
data16
or
mov
lahf
rclb
cwtl
sub
enter
xchg
lds
rolb
inc
sbb
mov
xor
inc
cld
adc
cmp
push
mov
mov
mov
shlb
mov
cld
sbbb
cld
xor
lds
pop
in
jbe
popa
ja
fcoml
ret
mov
int3
xor
movsb
xor
xchg
push
add
push
sub
mov
xchg
imul
cmp
gs
xchg
pop
mov
push
inc
jl
mov
ds
icebp
int3
pop
sub
aad
lahf
pop
shlb
mov
xchg
lret
push
imul
std
dec
or
lcall
popf
mov
lds
out
xor
pusha
mov
dec
sarb
leave
dec
mov
xchg
scas
imul
mov
inc
aaa
jne
shl
aam
out
fildl
loop
ficompl
sahf
add
mov
les
repz
jle
loopne
push
aam
out
mov
mov
push
stc
dec
mov
mov
bound
insb
push
jae
mov
aam
mov
je
mov
jl
pop
lds
cmp
test
arpl
daa
lods
sub
in
sbb
jne
add
mov
hlt
subl
out
fwait
and
je
pop
aaa
lds
ss
int
push
mov
xchg
add
stos
and
icebp
dec
scas
mov
sbb
aaa
xrelease
cmp
into
or
in
add
icebp
cmp
cwtl
pop
dec
jle
xor
jp
popa
mov
orl
imulb
movsl
push
and
sahf
and
in
inc
xor
hlt
push
pop
addr16
push
popa
into
stos
sub
mov
stos
ds
mov
push
popf
dec
mov
ss
inc
mov
xchg
mov
sub
sub
jae
xor
cmpsb
push
leave
clc
ss
jl
insl
cmpsb
loope
sti
test
mov
mov
int
mov
push
lods
or
mov
dec
mov
mov
clc
dec
fldenv
shlb
iret
stc
and
xlat
es
push
adc
imul
test
jne
lret
mov
push
js
shl
cwtl
cmp
or
mov
std
cmp
iret
cmp
cmp
into
mov
add
jb
sub
stc
pop
mov
cmp
hlt
pop
dec
mov
pop
dec
adc
int
addr16
dec
lret
inc
or
mov
test
push
mov
add
out
or
stc
das
cmp
sbb
and
xchg
dec
pop
sub
cmpsb
outsb
sar
loop
mov
adc
outsb
sbb
dec
imul
xor
jno
sub
sahf
push
pop
aam
scas
cmp
jmp
xchg
fwait
xor
mov
push
cmp
loopne
dec
adc
xor
dec
jl
arpl
outsl
cmc
jp
lcall
addb
jb
mov
dec
xlat
out
sub
sbb
movsb
sub
movsb
push
pop
into
jle
push
popa
xor
fidivs
adc
inc
jbe
pushl
out
add
outsl
sub
hlt
adc
fsub
xor
cli
imul
fs
or
ljmp
add
insl
mov
xchg
outsb
cmp
xchg
mov
nop
loope
jle
shll
outsl
mov
loop
pusha
addl
aaa
subl
ret
jne
jp
mov
dec
pop
fwait
pusha
xor
fcoms
add
dec
iret
jge
jle
sub
push
fwait
js
addr16
daa
jmp
push
add
stos
pop
jle
pusha
shlb
xchg
mov
cmp
pop
jmp
in
stc
cmp
pop
rclb
rcll
push
mov
cmpb
clc
fs
fildl
jmp
xchg
mov
jle
mov
dec
sub
xchg
sub
repnz
in
dec
sar
add
outsl
mov
gs
sub
repz
lret
xor
jge
popf
add
cwtl
push
jbe
mov
call
inc
mov
xor
out
sub
sbb
adc
jg
std
xor
mov
push
fisubrl
imul
xchg
loopne
enter
loope
cs
mov
sahf
mov
or
rcrb
jae
lret
lahf
fmul
dec
sbb
out
ret
mov
imul
dec
hlt
pop
ja
adc
shr
mov
test
mov
jg
cmpsl
push
btsl
inc
repnz
mov
lods
xchg
mov
jno
jl
subl
jp
mov
push
shll
ljmp
mov
mov
pusha
dec
sub
mov
and
shl
dec
xor
bswap
sub
stc
pop
cmp
push
leave
adc
out
out
mov
mov
mov
or
aam
cmc
iret
mov
aad
jmp
cld
add
adc
ljmp
mov
sbb
out
sbb
cmp
inc
rolb
addr16
or
jle
pop
cmp
mov
stc
icebp
int
push
mov
stc
xor
sub
adc
or
loope
adc
fwait
ds
cmp
int3
je
test
mov
fs
std
and
ljmp
sahf
mov
cmpsl
scas
or
fcmovbe
adcl
in
cmp
push
sbb
fistpll
repnz
sbb
aam
les
or
les
aad
push
push
in
pop
and
loope
inc
imull
add
movsl
pop
mov
xchg
rcll
les
mov
add
hlt
jecxz
into
into
inc
cmpsb
jnp
into
pushf
lods
pop
jecxz
sub
aaa
jns
out
pusha
ficompl
mov
cmpb
xchg
lret
or
popf
pop
jb
push
out
lea
mov
push
ljmp
leave
jbe
dec
insl
in
mov
int3
repz
iret
iret
cmp
sbb
pop
bound
aaa
adc
jg
cld
sub
pop
test
int3
je
leave
adc
nop
pop
outsl
mov
pop
mov
lods
js
push
push
lret
je
sbb
lret
sbb
adc
imul
cmp
xlat
push
popa
jb
jns
out
mov
pop
pop
adc
push
ljmp
ret
popf
scas
add
movsb
test
mov
fdivrl
or
shl
movsl
into
arpl
xor
dec
aam
pop
icebp
outsb
pop
dec
jl
sbb
jns
repnz
adc
sub
mov
ja
jl
lea
mov
nop
stos
popf
hlt
dec
nop
outsl
xchg
mov
push
pop
jo
mov
mov
mov
push
es
mov
movsl
mov
pusha
cmpl
ret
ljmp
ds
in
out
pushf
gs
mov
loope
cmpsb
jmp
push
fsubr
and
mov
mov
gs
pop
or
mov
jbe
ss
mov
xchg
sub
xor
xor
js
jo
cs
mov
or
mov
orl
xor
mov
cltd
rolb
mov
jle
jne
pusha
mov
jns
dec
in
mov
aaa
mov
in
pop
into
stos
aad
sti
fstl
mov
xchg
mov
aad
sarb
push
pop
mov
push
cmp
pushl
sub
aam
cld
daa
aam
rorb
sti
cmp
pop
push
stos
shrl
dec
ja
iret
xchg
movsl
loop
xor
nop
add
pop
mov
mov
add
fstpt
adc
rcrb
aaa
mov
cmp
pop
std
mov
pop
adc
push
dec
jp
cli
sbb
dec
iret
icebp
fucomip
mov
push
or
fcoms
shlb
inc
jge
cmp
cmp
std
cld
cmp
ss
adc
sbb
shr
xchg
inc
out
int
rclb
jo
scas
push
daa
insl
lock
das
push
add
sbb
dec
jle
inc
xchg
mov
rcrb
push
lcall
inc
enter
add
pop
sub
add
outsl
popa
pop
dec
fcompl
xchg
mov
dec
sbb
pop
test
or
shrl
jb
xchg
test
jo
mov
mov
and
ficomps
pop
jnp
aaa
cmpsb
sub
push
fsts
stos
in
jno
and
cli
into
adcl
adc
stc
subb
jne
sbb
pop
loopne
arpl
inc
jb
mov
pop
aad
xor
xchg
mov
dec
inc
jb
sbb
sahf
xchg
mov
pop
mov
cltd
inc
sub
test
loope
lods
cmpsl
in
push
test
xor
lahf
or
mov
stos
jne
jns
mov
sub
out
pop
dec
test
jl
xchg
mov
addr16
push
roll
cmp
cwtl
cmp
mov
outsb
mov
leave
fs
lea
lock
fwait
mov
repz
data16
aas
xor
stc
fsqrt
push
jne
pop
cld
sub
mov
cmp
pop
push
add
gs
lock
dec
mov
push
fistpll
mov
adc
jge
pop
test
jbe
xchg
xchg
pop
fdivp
aam
lcall
xchg
mov
cmp
mov
les
scas
xchg
aaa
pushw
inc
test
lds
push
and
push
sub
fsubrl
dec
cmp
xor
mov
stos
popf
rcl
shl
or
pop
pop
mov
xchg
mov
jl
jnp
pop
mov
nop
adc
loop
out
loope
in
dec
outsb
inc
push
aas
jbe
mov
cmp
xchg
ds
sbb
xchg
mov
int3
and
fildll
xchg
lcall
shl
dec
arpl
les
mov
xlat
inc
fs
xor
cs
push
sbb
sbb
out
mov
insb
jl
fisttpl
xor
out
xlat
and
in
mov
jb
push
in
pop
js
in
xchg
leave
cmc
scas
repnz
test
sub
or
xchg
or
push
lcall
andb
ljmp
and
pop
int
hlt
adc
xor
add
mov
or
lods
jp
xchg
testl
cwtl
jg
cli
add
bound
mov
sbb
add
aas
pop
pushf
jge
push
jg
orw
mov
jle
in
clc
ret
vcvttsd2si
dec
fistpll
mov
pop
mov
leave
jl
clc
in
jp
push
jge
jmp
imul
subb
cmp
push
push
pop
subl
stos
mov
push
xchg
fnstenv
mov
push
adc
cli
sahf
clc
adc
es
push
and
cli
fisttps
lret
insl
xor
ret
xor
mov
and
lcall
ret
sbb
ds
mov
mov
xchg
push
dec
cmp
imul
mov
ss
shlb
sti
cmp
push
stos
and
mov
pop
rclb
xchg
push
mov
push
add
or
sub
mov
hlt
jp
inc
andb
jne
ja
add
cwtl
dec
pushf
fwait
movsl
icebp
fldl
xchg
movsb
cli
xor
out
test
je
mov
in
arpl
xchg
ret
jbe
mov
inc
mov
mov
iret
push
mov
aam
push
bound
lods
mov
aam
stos
mov
push
mov
mov
cmpsl
movhps
xchg
test
stos
pusha
outsl
sbb
mov
sbb
clc
mov
pop
inc
or
loop
mov
mov
addr16
pop
daa
xor
or
outsb
call
rcrb
adc
ret
out
ja
fs
dec
scas
sbb
mov
sbb
popa
or
cwtl
jb
dec
add
push
clc
inc
ds
lea
xchg
nop
notl
cs
loope
rcrl
adc
mov
inc
fildl
xor
inc
adc
and
out
dec
mov
mov
cmp
repz
jb
loop
cmc
rcrb
int
mov
cli
sarl
fistpl
fldl
int
pusha
xchg
xor
lret
sub
sbb
popf
rcrb
adc
add
pop
iret
sub
sbb
cmp
mov
out
jg
enter
push
sbb
ds
xchg
in
mov
jne
cs
cmp
stos
xchg
mov
inc
jge
out
mov
stos
xorb
cmpsb
ljmp
scas
mov
mov
cld
push
xor
sub
pusha
sti
les
adc
inc
jns
pop
xlat
insl
xchg
int
fnstcw
jno
sti
loope
icebp
jnp
shll
in
loopne
push
xor
cmp
inc
lret
mov
loopne
in
xchg
fldl
sub
xchg
outsb
jp
dec
in
dec
pushf
popf
outsl
push
ss
test
sub
jns
enter
xchg
cs
sub
inc
add
cmc
mov
mov
test
jne
xor
pop
xlat
flds
pop
and
cs
jmp
outsl
cmpb
lret
lods
popw
jae
out
jmp
loope
imull
lcall
sbb
adc
out
xchg
lahf
ss
add
insl
lods
add
xchg
call
adc
inc
fidivrs
xchg
aam
mov
and
jo
mov
xor
mov
test
repnz
sub
jg
rorl
out
fists
lret
cmp
insl
fnstsw
fsubrp
xchg
lcall
enter
xor
mov
arpl
negl
jns
les
sub
rorb
shll
fmuls
push
idivl
and
xlat
add
inc
fdivr
mov
mov
gs
jne
xor
enter
mov
stos
les
addr16
mov
add
push
imul
push
dec
lock
dec
in
dec
or
add
dec
movsl
jno
lods
push
test
dec
lret
mov
inc
xchg
pop
test
and
mov
or
sub
xchg
ljmp
xlat
mov
in
xchg
or
push
rcrl
pusha
push
lahf
xchg
and
cltd
mov
push
ljmp
mov
movl
xor
mov
bound
push
add
fildl
fbld
push
jb
shlb
cmp
pop
hlt
jne
out
mov
xchg
cmp
cltd
arpl
or
mov
or
mov
aas
sti
cmp
into
les
inc
xchg
hlt
sub
jnp
mov
add
adc
mov
xor
inc
sub
pop
xor
in
js
mov
jae
stos
or
stos
fnstcw
cmp
repnz
mov
cmc
jne
or
bound
movsl
inc
test
fwait
loope
xor
xor
jbe
in
std
inc
jno
out
or
or
lret
pop
pop
in
addr16
dec
sub
idivb
push
or
roll
leave
sbb
addl
outsl
xchg
adc
fwait
jecxz
adc
add
loop
lret
mov
rorl
mov
jns
jne
mov
in
cmpsb
mov
int3
lods
scas
or
sti
cmc
dec
inc
out
movsb
push
adc
icebp
xchg
cmc
clc
daa
std
xchg
shlb
jne
fld
scas
rcrb
cmp
push
fidivl
repz
sub
mov
enter
lods
push
mov
repz
inc
sahf
pop
and
or
sarb
rolb
add
and
ds
adc
ror
iret
ficompl
or
orl
inc
or
cmp
sub
lret
and
repz
sub
movsb
lock
sti
in
jnp
rorl
pushf
movsl
fisttps
sub
dec
mov
outsl
dec
lcall
or
inc
jp
in
mov
sbb
into
outsb
cmpsl
xlat
pop
iret
or
push
pop
dec
lcall
aam
lret
pushl
sub
cmp
in
insl
aad
jge
daa
sub
xor
adc
divl
and
and
jge
shll
mov
adc
jo
adc
or
xor
and
addr16
add
repz
pop
jl
xor
and
cmc
mov
pop
cmpsl
addr16
mov
sub
jle
inc
pop
add
sub
addr16
dec
mov
jne
xor
dec
push
into
adc
sysret
test
push
bndldx
jno
mov
addr16
je
jbe
lock
or
mov
dec
test
pop
fwait
mov
push
push
mov
int3
jae
cmp
mov
add
pop
sbb
pop
adc
lock
cwtl
data16
mov
inc
jo
lret
or
dec
inc
inc
divl
jo
je
push
adc
mov
push
or
xor
xchg
jmp
inc
sti
mov
xor
sub
popa
imul
iret
orl
sbb
cmp
pusha
jge
ds
imul
mov
leave
cmp
into
mov
shl
into
arpl
pushf
data16
bound
pusha
adc
pop
hlt
leave
pminub
mov
lret
lock
in
lods
int3
mov
clc
xor
add
adc
inc
shlb
and
jecxz
xlat
xor
cmp
fisubrs
pop
fcmovnb
cmp
decb
adc
inc
and
push
dec
jl
fisubs
mov
cltd
repnz
je
sbb
pop
adc
into
scas
sub
cli
mov
sbb
sub
aas
pop
or
mov
pop
cmp
add
outsl
pop
jp
ret
push
sub
xor
pop
push
jbe
add
mov
in
fidivrs
rclb
pop
pop
movsb
std
jg
add
int3
hlt
ret
cltd
int3
or
add
xchg
nop
scas
es
mov
pop
xchg
gs
out
enter
xor
gs
xchg
cs
xor
mov
xorl
ret
sbb
lds
push
mov
or
hlt
mov
mov
loop
loopne
xor
jl
sub
stc
cmp
lahf
inc
shr
add
xorb
inc
into
sbb
scas
cmp
fcomps
lcall
add
sub
push
xor
jno
xorl
das
in
sbb
pop
add
fiadds
jne
mov
dec
shrb
xor
pop
cmp
shll
insl
sbb
es
arpl
popa
andb
or
and
mov
jb
sbb
xchg
and
not
lret
mov
dec
adc
mov
filds
sub
and
mov
iret
data16
in
add
mov
xchg
mov
and
push
jbe
add
xor
cmpl
jp
gs
cmp
pop
outsb
sub
imul
lcall
jne
int
loope
sub
pop
mov
add
jne
mov
inc
inc
and
int
rol
lds
mov
mov
lds
movsl
ss
repnz
dec
and
stos
lcall
mov
add
mov
leave
mov
push
faddl
push
jns
cmp
mov
mov
aad
mov
mov
mov
test
pop
sub
add
rorb
leave
mov
or
aaa
cs
xchg
das
sub
mov
adc
and
jbe
mov
sub
insl
stc
pop
jns
repnz
pop
popf
arpl
xor
addb
into
jns
xlat
cmpl
mov
test
mov
dec
xlat
xchg
push
popa
adc
or
push
insl
imul
das
inc
jns
cli
push
popa
sahf
jge
fldl
outsl
push
xor
dec
sbb
push
mov
fstl
out
sti
push
jne
or
mov
in
pop
ja
xlat
mov
arpl
xchg
stos
sti
scas
cli
movsl
rcrb
pop
add
pop
sahf
cmpsb
lods
jb
and
add
and
pusha
xchg
and
mov
call
or
fisttps
rorl
sub
aas
cld
cmp
mov
sbb
mov
lret
jae
movswl
dec
jae
pusha
insb
movsb
fistl
sbb
adc
scas
aas
mov
xlat
cmp
pop
sbb
addr16
add
leave
jmp
jnp
cltd
imul
test
sti
es
lret
mov
mov
outsb
pop
mov
mov
xchg
mov
mov
xor
inc
sub
cmc
out
cs
cmpsb
or
push
orl
icebp
loopne
sbb
test
xlat
pop
out
jge
ja
std
ret
xchg
hlt
out
unpcklps
int3
lock
mov
sub
fxam
dec
jnp
out
data16
cmp
dec
mov
dec
les
insl
add
xchg
push
and
jl
or
sar
mov
mov
cmp
jp
in
jmp
rcr
adc
aas
and
xor
insl
xchg
adc
push
lock
pop
xchg
mov
xlat
and
movaps
pop
in
mov
ds
add
fisubs
push
add
mov
jmp
or
dec
mov
aaa
cmp
cmpsl
lods
gs
into
aaa
je
push
insb
mov
js
adc
cmpl
je
pop
sar
stos
mov
lods
and
imul
and
idiv
xor
sarl
shrb
pop
inc
push
sub
ficomps
out
mov
lea
mov
idivb
in
pop
test
cmp
std
call
fdivs
out
jne
movsl
mov
dec
test
jg
push
mov
and
pop
pop
lret
inc
sub
sarb
idivl
mov
pop
xlat
and
test
sbb
and
and
xchg
dec
jl
cs
inc
dec
sbb
and
enter
das
mov
lcall
stc
pop
push
andb
xor
lret
adc
dec
push
aam
icebp
sarb
pop
inc
in
ja
or
push
mov
cmpl
dec
out
cmpsl
pop
mov
xor
add
mov
mov
fdiv
or
adc
cmp
pop
and
dec
and
js
mov
push
xor
or
idivb
icebp
cmp
ret
mov
inc
adc
lret
mov
mov
mov
mov
enter
into
icebp
or
inc
and
arpl
jne
addr16
and
imul
ffree
fstpt
mov
dec
jae
aad
ss
ja
mov
aas
pop
sub
dec
iret
adc
jne
cld
je
hlt
cmp
or
adc
pop
outsb
lods
lret
mov
pop
push
push
daa
mov
shrl
out
xchg
int
js
adc
dec
scas
jle
add
mov
mov
push
icebp
xchg
std
push
add
clc
jl
stos
out
mov
inc
rcrl
pop
clc
outsl
sti
jbe
mov
insb
aaa
shll
inc
ret
fistl
repnz
es
loop
lods
arpl
and
mov
call
fisttps
jg
popa
ja
ljmp
push
or
fnstcw
add
cmp
xor
shll
aam
inc
xchg
ret
jl
or
pusha
jge
jb
jae
rorb
push
test
lcall
test
dec
pop
sub
scas
inc
out
jns
sbb
add
dec
jnp
xor
jo
out
xor
aaa
loope
jb
mov
daa
pop
pop
scas
xor
pop
fs
or
inc
mov
les
repnz
xor
mov
cmp
inc
cmp
and
xchg
push
and
les
inc
gs
push
mov
add
dec
vmulps
jl
repz
les
adc
pop
je
lds
icebp
add
adcl
ret
jbe
cs
cwtl
mov
xor
ljmp
mov
or
or
ljmp
fildl
ljmp
fisttps
jecxz
stos
push
jns
lods
outsb
aaa
scas
mov
push
push
mov
repnz
sub
xlat
notl
pusha
xchg
hlt
jl
or
xchg
cs
shlb
fsts
mov
into
mov
jp
je
call
out
rcrb
addr16
jmp
jae
aad
xchg
sbb
sbb
push
cwtl
aad
ja
sti
lock
lds
mov
push
jnp
ret
scas
loope
dec
leave
faddp
call
insl
or
or
pop
jmp
scas
popa
les
adc
pop
mov
cmp
lea
leave
in
mov
xor
shll
aam
inc
xor
push
xor
aam
aaa
dec
mov
mov
fsubl
mov
call
mov
loope
push
cld
sub
or
cli
dec
ret
shlb
bound
add
fucomip
jmp
mov
pop
icebp
mov
imul
pop
push
mov
js
jae
adc
test
pop
sub
or
adc
jecxz
mov
xlat
pusha
cmp
adc
lcall
iret
clc
mov
scas
lahf
ljmp
xor
pop
test
xor
push
cmp
push
testl
repz
adc
adc
xchg
in
iret
and
add
sub
xchg
int3
je
jne
js
movsl
test
sub
arpl
cs
leave
cmp
push
sub
iret
mov
aas
aaa
xor
sbb
cbtw
and
jg
xchg
pop
cld
jo
gs
adc
and
lret
daa
mov
mov
add
lds
adc
add
push
adc
cmp
mov
jns
and
daa
or
xchg
xlat
push
dec
push
pop
cmc
js
sarb
or
loope
cmp
mov
mov
xchg
push
xor
cmpsl
ljmp
ja
fwait
xchg
jle
dec
ret
movsb
sti
or
mov
mov
and
pushf
insb
add
and
jmp
cmc
mov
dec
xchg
popa
cld
add
xchg
shl
push
insl
repz
mov
arpl
add
into
popf
imul
push
popa
testb
std
pop
leave
push
mov
in
mov
xchg
bound
dec
rclb
push
inc
mov
xlat
mov
mov
in
lods
cmc
dec
dec
in
pop
mov
sbb
out
pop
testb
in
cmpsl
push
imul
jp
aad
jo,pt
push
call
mov
sahf
add
test
add
push
push
add
xlat
xor
pushf
xchg
sbb
call
push
inc
jmp
sahf
mov
idivl
jecxz
push
xor
rol
push
jmp
mov
jno
fmull
mov
or
nop
cmpsl
mov
in
push
pop
lods
test
mov
cmp
push
xor
sbb
pop
ja
in
js
dec
shrl
mov
stos
enter
dec
inc
or
test
sbb
inc
scas
mov
add
jns
lock
inc
push
iret
adc
push
cmpsl
daa
inc
mov
jge
cmp
xchg
cwtl
cld
jge
sbbl
push
lea
or
stos
enter
xlat
add
mov
outsb
pop
ret
and
aam
push
sub
mov
jmp
mov
adc
xlat
cmpsb
jecxz
cli
lods
sbb
mov
inc
ja
mov
jae
mov
loope
sbb
fistl
sbb
push
and
lret
sahf
and
and
fwait
test
push
test
inc
mov
push
push
js
sub
add
outsb
cmpsl
xor
xor
mov
into
jne
pop
fidivl
rorb
leave
and
pop
lods
sbb
shr
dec
out
out
xchg
testb
fmuls
in
out
aad
test
xchg
call
enter
jecxz
rorl
mov
and
icebp
les
inc
fcmovnb
inc
mov
xlat
inc
rorb
stos
dec
sub
sarb
loopne
cwtl
jp
cmp
push
adc
mov
out
or
adc
fnstsw
or
nop
cltd
xchg
fs
ret
gs
mov
xor
fstpl
lock
fs
and
add
xor
sbb
fcoms
cmp
mov
ja
mov
jp
push
das
lods
push
sbb
adc
sub
sti
xchg
stos
mov
push
dec
cmp
stc
xor
and
imul
xchg
adc
cs
imulb
inc
or
fimuls
fs
mov
popf
dec
call
mov
stos
ja
test
jns
sub
mov
inc
cwtl
mov
int3
and
sbb
xchg
sti
ret
leave
fisttpl
hlt
pop
dec
ds
pop
dec
sub
iret
iret
ljmp
pop
popa
pop
lea
filds
adc
mov
movl
imul
test
icebp
cmpl
sub
xorb
xor
clc
xchg
jecxz
movsl
cmp
inc
scas
dec
test
movsl
mov
cld
xor
jge
jne
lods
repz
push
cmp
int3
adc
mov
fstpl
push
inc
push
in
dec
std
adc
sbb
insl
jmp
mov
fnstenv
les
icebp
lahf
cmp
out
mov
bound
xchg
mov
into
adc
ds
daa
ror
das
subb
scas
int3
pop
fdivrs
lahf
or
jg
movsl
lock
mov
dec
mov
xchg
stos
xor
out
pop
sarb
jmp
mov
pop
sbb
aam
mov
ret
pop
xchg
mov
xchg
or
xor
mov
mov
ja
adc
ljmp
ss
push
cmpl
xor
dec
ljmp
jb
push
mov
sbb
push
add
insb
adc
cmp
push
ja
test
cmp
leave
iret
cli
imul
xchg
sbb
mov
push
mov
das
push
add
int3
mov
leave
icebp
add
lock
mov
ret
out
dec
ss
sbbb
pusha
pop
es
data16
ss
mov
lods
lret
mov
lods
call
ja
pop
int
scas
daa
in
inc
sub
dec
dec
jns
inc
pop
roll
push
adc
jl
daa
pop
je
into
shl
jb
mov
or
lret
cs
lods
out
push
mov
loopne
rcrl
fs
cs
fdivs
mov
or
fisttps
in
inc
mov
daa
or
mov
xor
push
mov
dec
test
adc
xor
mov
icebp
leave
subl
pushf
call
inc
add
jns
je
cmp
add
dec
orb
stc
sub
test
push
xchg
mov
mov
loope
mov
sbb
shl
lahf
and
aad
mov
mov
movsl
jecxz
pop
dec
aas
xchg
pop
xorb
pop
shlb
aad
call
inc
mov
push
sahf
lods
fs
data16
je
pushf
mov
jle
and
dec
dec
idivb
dec
aad
sub
or
push
lods
and
and
notb
sub
adc
dec
sbb
out
nop
fnsave
cmpsb
clc
out
test
jae
adc
and
std
pop
and
scas
mov
push
push
push
xor
push
mov
pop
fwait
aad
xor
and
gs
dec
cld
lret
aam
mov
mov
scas
js
adc
pushf
les
mov
movsb
stos
fists
jmp
add
insl
sbb
lahf
cmp
push
xor
dec
repz
stc
mov
push
add
cmpsb
add
sub
pop
insl
out
or
js
pop
cmp
mov
lods
xor
je
aaa
in
sub
xor
jb
leave
jb
dec
clc
xchg
mov
pop
adc
das
xor
sbb
and
movsb
out
test
mov
jl
mov
cwtl
jmp
mov
sbb
mov
jecxz
lahf
jp
mov
pusha
pushl
xchg
pop
and
jmp
not
mov
push
push
mov
jmp
iret
in
xchg
idivb
cli
arpl
jecxz,pn
ja
mov
in
mov
xchg
clc
pop
jp
dec
inc
sub
xchg
xor
push
mov
push
mov
rorl
in
cmp
sub
pop
pop
jnp
enter
push
bnd
inc
outsb
mov
pop
jns
jle
mov
mov
sub
push
bound
mov
push
daa
adc
pop
mov
inc
scas
hlt
rcrb
es
orl
adc
sub
mov
lahf
addr16
lret
out
jbe
hlt
outsb
sub
xor
aam
stos
xchg
mov
mov
xchg
insl
mov
pop
push
pop
cmp
test
cmpsl
mov
xchg
inc
jecxz
in
movsb
add
mov
mov
outsl
mov
das
repnz
push
xor
mul
sub
pop
add
data16
outsb
mov
test
sub
test
adc
cmpsl
dec
sar
in
rolb
mov
xchg
insl
aad
dec
add
popf
ret
and
lods
pop
movsb
and
adc
xor
push
negb
sub
push
inc
push
sub
xchg
add
cmp
lret
pop
rcl
iret
daa
fnstsw
push
popa
add
js
jno
inc
dec
sbb
dec
jmp
sbb
inc
jo
fsubrs
in
aas
int3
stos
pop
or
fisubl
lods
cld
adc
jne
dec
push
or
in
jle
enter
pushf
inc
mov
int3
insl
or
xchg
xchg
dec
leave
jg
jge
in
dec
lret
por
or
pop
mov
shrb
cltd
mov
mov
movsl
mov
xor
out
repz
lret
std
or
arpl
mov
in
jns
sbbb
and
and
sub
add
scas
inc
aad
push
out
lock
inc
fcoml
fcoms
loop
test
int3
pop
jo
cmp
xchg
test
push
adc
je
add
jmp
jle
in
adc
push
add
mov
mov
push
rep
xchg
dec
inc
sbb
fnsave
push
adc
xorl
xor
xchg
and
fwait
cmpsb
popf
aad
ja
or
ret
and
dec
pop
sub
fchs
aas
push
lods
ret
int
mov
insl
and
and
jle
pop
loop
leave
mov
adc
or
popa
add
adc
dec
mov
cmpsb
jle
xchg
dec
divl
adc
aas
mov
test
lods
aad
daa
pushf
es
mov
and
cmpsb
out
testl
mov
idivb
jecxz
mov
dec
dec
xor
sbb
popa
push
add
sub
int
xor
imul
lret
push
jb
lock
fcoms
or
cmp
cmpb
movsb
adc
lsl
pusha
subl
pop
test
mov
add
arpl
inc
mov
pop
lcall
stc
inc
outsb
inc
mov
adc
rcrl
loopne
and
test
xor
inc
add
mov
int
iret
adc
push
mov
test
dec
sub
pushf
scas
movsl
or
add
mov
push
jge
ja
push
push
movsl
in
adc
cmp
xchg
aad
pop
fstpl
addr16
sub
fistl
mov
adc
repz
mov
stc
test
movsl
xor
sahf
adc
dec
mov
inc
pop
stc
imul
arpl
dec
mov
pop
sarl
mov
ds
jnp
push
ficoms
icebp
add
push
hlt
lea
cmp
stos
or
fimuls
jge
pusha
sarb
push
dec
sub
bnd
mov
mov
sub
sub
lea
cltd
jg
movsl
sbb
inc
jp
dec
nop
outsb
nop
cmp
sub
shl
lret
pop
xchg
jge
sbb
pop
scas
xchg
les
mov
rorb
lods
vprotq
decl
repnz
mov
lods
sbb
inc
mov
inc
sbb
cmpsl
in
pop
es
repnz
ficomps
mov
in
jnp
adc
inc
xchg
ljmp
and
cmp
int3
mulb
ret
jbe
jns
push
es
jmp
movsl
outsb
shrb
popf
pop
push
add
hlt
push
add
into
icebp
lods
bound
leave
rcl
xchg
stos
lock
jns
sbb
add
sbb
not
and
add
in
call
xor
mov
roll
xchg
in
rcll
imul
lcall
and
mov
mov
test
imul
mov
dec
cmpsb
jns
in
sbb
push
repz
test
filds
dec
mov
aas
or
and
mov
pop
mov
mov
add
sarl
aas
push
popf
mov
sub
daa
test
or
cmp
movsb
movsb
cmpsb
mov
adc
inc
popf
push
add
mov
push
out
iret
lahf
lock
xchg
insl
enter
mov
fisttps
mov
iret
mov
mov
or
mov
pop
lods
scas
or
adc
cmp
jmp
test
test
or
dec
inc
jno
out
inc
xchg
sarb
fwait
add
inc
cmp
cmp
xor
push
cmp
and
and
fbld
push
inc
jne
in
push
lcall
into
lahf
lret
pop
jbe
bound
insb
pushf
sbb
out
rclb
frstor
jecxz
fstl
add
cmp
jmp
pusha
or
push
and
push
push
pushl
ds
jae
dec
inc
out
sti
or
pop
adc
fisubl
loopne
xor
xchg
pop
insl
dec
divb
cmp
xchg
push
pop
repnz
adc
inc
or
rcr
cld
dec
test
and
insb
or
mov
dec
push
jnp
sbb
shll
jg
mov
jne
sub
cmc
ds
pop
sbbl
cmp
lea
xchg
fmull
aas
imul
mov
fmull
mov
mov
pop
xor
xchg
dec
in
cmp
inc
shlb
js
xchg
lods
or
mov
add
and
push
movsl
pop
sub
push
push
xor
and
lea
cmp
xor
cmp
and
enter
cmp
imul
cld
add
repnz
xchg
jmp
divb
jnp
lahf
loope
cmpsl
and
in
xchg
fnsave
push
push
leave
xchg
xchg
lcall
popa
sahf
sbb
enter
add
test
dec
mov
filds
repnz
cmp
mov
lea
imul
inc
shlb
ds
or
push
and
push
pusha
mov
fucomip
cmp
dec
jbe
ja
repz
test
jecxz
or
sub
test
push
dec
fwait
js
pop
call
std
adc
push
cli
loop
syscall
repnz
int3
mov
test
dec
in
or
popa
lea
cmc
cmpsb
sbb
in
xor
adc
cli
movsb
jg
mov
xchg
xchg
xchg
cmpsl
pusha
cmpl
popf
mov
jp
jl
dec
pushf
shl
es
stc
test
mov
out
repz
mov
add
jb
cmpsl
dec
pop
ja
pop
das
insl
shrb
sar
push
mov
roll
idiv
push
mov
inc
or
cld
jmp
test
mov
dec
xchg
push
mov
push
push
mov
jmp
lahf
idivl
dec
stc
xchg
lock
dec
jp
lret
addr16
push
test
lret
pop
mov
outsl
push
fidivs
push
insl
mov
lds
stos
fisubrl
aas
inc
jnp
arpl
mov
pop
dec
ret
out
cmp
cltd
stc
mov
dec
xor
mov
mov
je
int3
jo
outsb
sahf
sbb
dec
shlb
shlb
cmp
dec
mov
xor
lahf
into
mov
out
xchg
xchg
fadds
in
adc
lds
push
shr
nop
cmp
inc
sbb
leave
mov
fcmovnu
or
hlt
xor
filds
push
movsb
adc
rorb
adc
test
add
sub
les
out
push
and
adc
pop
mov
mov
pushf
or
outsl
mov
xchg
xor
fwait
add
enter
mov
decl
push
mov
popf
leave
sub
sub
adcl
lods
lret
or
call
mov
mov
repz
push
scas
jge
add
inc
and
notb
outsl
sbb
sbb
inc
movsl
xchg
mov
cmp
jge
jbe
fistl
cmp
jns
pop
out
dec
mov
cmp
add
lds
mov
sbb
out
or
or
daa
xchg
pop
mov
std
cmpsb
data16
pop
push
jg
cs
or
dec
mov
pop
stc
arpl
sub
lea
mov
scas
xorb
repz
sub
mov
adc
mov
daa
push
andl
or
cmp
sti
mov
xchg
push
push
xor
leave
push
pop
dec
mov
mov
test
or
nop
inc
divb
sbb
jmp
xor
xchg
loop
ret
aaa
pushf
loopne
out
cli
sbb
ja
mov
adc
dec
orb
mov
dec
push
xor
or
popf
add
call
popf
into
xor
ss
out
leave
or
xor
mov
arpl
cmp
pop
or
arpl
dec
lahf
fsubrl
sti
subb
add
sti
cmp
mov
stos
cli
out
adcl
sub
or
xchg
out
fcoms
imul
or
xorl
ror
fstl
add
cmp
pop
std
inc
and
xchg
push
mov
cmpsl
mov
fnstenv
repnz
test
or
iret
sbb
dec
popa
mov
add
and
in
in
test
rclb
shrb
mov
fidivs
inc
jge
push
std
pop
pop
mov
mov
xchg
or
jb
lea
loope
mov
imul
shl
and
in
js
stos
or
inc
or
out
mov
adc
xor
addr16
or
push
jns
outsl
ss
lea
push
jnp
mov
enter
add
mov
inc
aas
es
add
xchg
out
jmp
xchg
sub
or
cmp
aas
mov
frstor
xor
cmpl
or
ds
ret
sahf
imulb
push
popa
imul
popf
mov
or
in
test
and
inc
sub
jns
test
add
dec
test
sub
dec
adc
pop
int
pop
rcll
sarb
movsb
cmp
js
xchg
jbe
xchg
cld
ss
cmp
lods
daa
xlat
mov
adc
popa
and
add
sub
sbb
test
mov
mov
push
dec
mov
loopne
pop
testl
je
mov
mov
sub
mov
ficomps
dec
adc
pop
out
inc
lods
push
iret
andl
sbbb
inc
push
fstpt
fwait
cs
mov
das
fdiv
mov
aam
dec
ss
or
leave
out
divl
xchg
add
adc
nop
pop
jb
faddl
sub
insb
icebp
xchg
or
unpcklps
jnp
xor
jae
or
mov
pop
or
mov
repnz
push
int
cmc
cmpsb
sahf
mov
xchg
data16
stos
and
mov
call
mov
mov
mov
aam
adc
fisttps
call
sub
or
idivl
leave
cli
lods
pop
mov
push
xor
add
and
cmp
fwait
jge
in
std
mov
frstor
jns
cmpl
xor
push
shlb
push
sar
add
sbb
cmp
adc
fcomip
js
push
test
adc
sbb
lahf
es
outsb
mov
nop
xchg
imul
xor
js
sub
push
or
fisttps
mov
loop
ljmp
inc
dec
push
mov
movsb
notb
ficoms
sub
sbb
mov
sbb
push
je
das
arpl
pop
lea
rorl
imul
into
nopl
jne
adc
jecxz
mov
mov
mov
add
bound
lret
jno
jno
mov
dec
rcrb
dec
aaa
pop
fsubs
std
push
dec
lds
mov
loope
mov
ret
shll
cmpb
xor
cld
cmp
cmpl
jo
idiv
sbb
test
and
sub
clc
dec
mov
icebp
push
jb
pop
outsb
mov
fidivrs
push
sbb
mov
push
out
lea
jne
cmpl
stos
sbb
add
push
lods
push
sbb
dec
inc
cmp
subl
divl
and
mov
xorb
aad
pop
inc
fildll
xor
push
dec
mov
and
sti
std
fiaddl
fimuls
add
loop
in
sbbb
mov
dec
push
or
cltd
jbe
adc
cmpl
dec
loope
inc
call
add
stos
fdivrs
enter
xchg
lea
je
mov
jl
ljmp
mov
outsl
negb
pop
add
fcom
inc
mov
inc
adc
xchg
push
outsl
lcall
out
aad
dec
jp
mov
mov
and
ljmp
xchg
es
insl
insb
mov
lods
rorb
sub
jecxz
lds
cli
aam
jl
in
push
divb
into
xcrypt-cfb
cmpsl
and
push
push
pop
in
int
add
inc
movsb
dec
movsl
cmp
add
jns
sub
out
jecxz
jecxz
aaa
cld
or
arpl
in
add
push
and
test
repz
mov
jns
cmp
in
aaa
pop
data16
jno
jo
pop
stos
xchg
dec
test
mov
mov
imul
es
cltd
mov
adc
mov
rcrl
xor
push
dec
pop
rclb
pop
push
and
lock
cmp
stos
inc
sti
dec
fadds
mov
insl
call
sahf
inc
shrb
adc
imul
aad
leave
inc
ret
ss
test
pop
pop
repz
jmp
iret
pop
xchg
mov
and
test
and
lea
push
pop
mov
fstl
push
shll
mov
mov
nop
stos
call
adc
sahf
inc
movsb
cmp
fwait
mov
jns
xor
aaa
insb
mov
ja
lcall
sbb
shl
mov
dec
and
mov
xchg
mov
andl
imul
icebp
adc
mov
xchg
dec
mov
jns
and
repz
outsb
cli
mov
gs
mov
sub
sbb
dec
dec
jmp
mov
test
inc
sub
mov
xchg
out
aam
sub
int
pop
cltd
jb
loopne
cwtl
inc
mov
xchg
xchg
mov
xchg
sub
repnz
sub
call
xor
daa
sub
lret
pop
push
es
xchg
enter
ljmp
mov
add
add
dec
and
shrb
ficoml
cmp
std
sub
dec
fs
in
sub
xchg
push
xor
nop
imul
cltd
push
mov
xor
lods
cmp
out
in
pop
dec
add
push
in
int
je
sub
dec
pop
dec
mov
daa
sahf
outsb
add
and
stc
in
hlt
int3
adc
out
repz
loop
mov
add
bound
xorl
inc
enter
ret
jle
add
xor
xor
mov
add
in
add
je
cwtl
shlb
clc
adc
cmp
push
pop
pushf
arpl
mov
jp
movsl
movsl
mov
pop
test
push
cs
and
mov
shl
daa
mov
mov
leave
fdivrl
pop
add
jle
fs
pop
dec
add
cmpsl
cmp
icebp
pop
mov
mov
mov
dec
sbb
fcomp
stc
mov
ljmp
adc
addl
test
mov
xchg
or
inc
or
cmp
addb
or
gs
sahf
imul
insb
scas
jl
xor
push
cmp
pop
les
iret
test
add
jl
cltd
pop
add
lret
enter
dec
mov
lea
push
add
test
into
jp
test
push
scas
jg
cmp
and
mov
iret
adc
adc
test
popa
aaa
daa
imul
faddl
push
pop
pop
roll
inc
push
shll
jge
xor
mov
push
jns
ret
int
mov
sbb
dec
aas
xchg
xchg
addl
fucomip
fisubrs
sub
sar
mov
sbb
xorl
mov
adc
jns
push
sub
cmpsl
fistl
mov
mull
cmp
addr16
clc
push
add
fcoms
in
loopne
cmp
push
das
ljmp
hlt
arpl
movsb
mull
or
in
sub
cmp
imul
nop
push
sub
xor
fdivrl
cmp
test
enter
add
pop
dec
mov
sahf
mov
js
sti
loope
push
stos
ds
xor
pushf
sub
fcoml
pop
sub
sub
test
mov
pop
adc
out
jg
dec
rep
pop
inc
cltd
pushf
negb
clc
rcrl
or
mull
push
outsl
cltd
xchg
jge
das
push
insl
add
loop
imul
xchg
fadd
pusha
pop
lock
cmc
adc
dec
das
xor
rcll
and
mov
insl
cmp
xchg
out
pop
lcall
int
movsb
cltd
inc
test
stos
inc
pushw
fistpll
out
imul
mov
inc
push
cltd
insl
negl
mov
lds
mov
loopne
adc
repnz
mov
sub
ret
mov
js
xchg
ljmp
ficoml
mov
push
notb
or
rcrl
out
xchg
in
or
xchg
jge
add
xor
adcl
dec
enter
mov
cld
loope
test
aas
and
xor
inc
dec
and
in
pop
pop
loope
adc
hlt
jno
inc
and
inc
xchg
shrd
pop
int3
aam
cmc
mov
xchg
dec
adcb
fildl
jnp
or
fsts
xlat
and
push
jno
in
stos
mov
sub
xchg
pusha
dec
bound
pop
fsts
pop
fsubr
push
xlat
jno
ffreep
andl
jb
outsb
out
ljmp
test
and
mov
jnp
pop
inc
push
int
add
jo
fs
pop
jno
sub
icebp
push
sbb
out
fs
pandn
sti
mov
inc
and
clc
mov
popf
jae
push
sub
testl
subb
addr16
push
fistl
stos
cmp
mov
lcall
pusha
insl
jge
cli
pusha
lock
ss
or
mov
or
sbb
stc
sub
fs
mov
adc
lock
jae
add
mov
ss
dec
mov
filds
out
fcoms
inc
stos
sbb
mov
ss
dec
push
popf
cld
sbb
jb
xchg
jecxz
insb
cmpsb
xchg
xchg
or
scas
sarl
sbb
push
aam
lret
mov
jmp
adc
stos
scas
mov
adc
jbe
adc
adc
pusha
lret
hlt
pop
lock
mov
push
add
addr16
filds
lahf
and
insb
cmp
add
cmp
sub
mov
das
push
shlb
push
cld
mov
pop
pop
add
cmpsb
xor
xchg
fwait
stc
fs
mov
pushf
push
dec
fimuls
xchg
imul
xor
lcall
adc
jmp
cmp
into
daa
cmpsl
cmpsl
imul
inc
mov
xor
shrl
dec
pop
aam
sbb
popf
mov
adc
into
rcll
test
cmp
or
in
rorb
test
repnz
out
rcrl
push
je
mov
pop
sarb
and
xor
mov
jmp
jnp
add
aam
fstpl
xchg
push
jecxz
push
dec
mov
mov
lea
pop
shl
jl
movsl
jge
mov
shl
adc
lcall
orl
sbb
xor
or
sub
je
mov
hlt
pop
push
jno
jnp
adc
inc
fwait
add
out
rcll
mov
cmp
push
or
das
mov
js
test
movsl
inc
rolb
std
xor
and
insl
iret
jnp
enter
pop
cmpsl
jno
stos
inc
jecxz
les
jnp
jne
popf
fnsave
cmp
mov
lods
mov
mov
pusha
xor
into
push
aaa
xchg
or
pop
or
test
sub
es
adc
aam
jno
clc
aas
sahf
jle
pop
aas
xchg
jo
aad
in
call
push
shl
mov
xor
jg
addb
adc
cmp
stos
cwtl
pushf
pusha
fwait
or
dec
pop
adc
jp
adc
sub
cmpsl
aas
aam
adc
dec
sbb
pop
stc
inc
mov
xchg
pop
sub
iret
or
dec
sub
jne
mov
enter
or
daa
xchg
push
cmp
pop
imull
notl
sbbl
mov
gs
outsb
lds
arpl
add
pop
dec
in
enter
inc
inc
mov
adc
jle
push
out
and
pop
mov
sbb
repnz
popa
cmp
sub
jecxz
das
and
xor
int3
outsl
mov
mov
adc
push
clc
mov
test
out
lods
xlat
dec
mov
mov
pop
cmpsb
sub
sub
jle
ja
push
push
cmpb
dec
ret
inc
lds
or
dec
das
les
xchg
outsl
add
ds
popf
push
push
inc
cmp
ror
jge
ss
push
push
rolb
jb
in
push
daa
jae
rcll
in
les
scas
sub
mov
push
mov
cs
add
test
lods
mov
xchg
sbbl
lcall
xor
pushf
fcmovnbe
andl
stos
mov
movsb
gs
mov
cmpl
pop
addr16
out
push
mov
jp
into
push
stos
sub
push
dec
mov
xchg
pop
aas
pusha
les
lea
push
lock
xor
jmp
lcall
pop
in
dec
fcomps
pop
lods
xorb
addb
out
nop
mov
mov
sbb
cli
adc
stc
int3
popf
push
mov
sbb
mov
rol
pop
cli
lret
xor
sub
aaa
ja
call
test
mov
adc
mov
std
fbstp
out
dec
jge
dec
lods
dec
cmp
subb
ret
dec
loope
or
push
adc
lds
fdiv
push
pushf
jmp
or
bound
pop
sbb
clc
mov
adcb
in
sbb
loop
fists
je
jbe
sbb
das
test
mov
int
ret
jae
mov
shl
popa
xchg
mov
js
inc
mov
insb
fmulp
imul
mov
mov
jo
adc
inc
out
fsubr
mov
adc
insb
flds
push
push
pop
xor
xchg
addb
push
or
add
pop
sbb
jmp
repnz
data16
jle
cld
xlat
xor
mov
or
pop
stc
cmpsl
and
lret
jge
sbb
sbb
cmp
jne
iret
cmp
scas
rcrl
xchg
mov
or
xchg
fistpll
add
pop
out
in
cmpsb
push
pop
aam
or
out
lea
or
sbb
push
lret
sub
shll
fisttpl
sbb
pop
inc
pop
pop
loope
push
mov
pop
mull
xchg
jle
aad
insb
ss
xor
inc
mov
push
jle
inc
adc
leave
mov
aad
mov
adc
mov
faddp
data16
je
dec
add
lds
mov
outsb
shlb
movsl
lahf
mov
pop
shr
cwtl
dec
inc
lahf
lcall
and
cmp
mov
lahf
xchg
push
into
aam
hlt
fwait
xor
repz
adc
jecxz
dec
mov
pop
aaa
jmp
inc
in
or
adc
pusha
mov
sbb
insl
cmpsl
repnz
outsb
leave
mov
mov
pop
adc
in
xchg
aaa
cmp
lret
test
cmp
pop
lds
mov
pop
pop
xor
push
cltd
mov
pushf
jl
jo
sub
sub
mov
jno
mov
xor
test
jge
xor
icebp
jno
fiaddl
and
mov
sbb
dec
aam
repnz
out
cltd
ss
push
js
mov
xor
lods
jb
mov
xchg
cli
dec
xchg
pop
xor
flds
popa
movsb
pusha
sub
push
sbb
add
flds
addl
fnsave
andl
fstpt
stos
fs
in
dec
cmp
jmp
movsb
shlb
cmpsb
enter
stc
test
mov
mov
pop
inc
or
lock
outsb
mov
pop
je
loop
sub
ljmp
in
fucom
scas
mov
popl
movsl
test
pop
xchg
outsl
test
lret
mov
inc
pop
xor
dec
inc
popa
and
cmpb
or
cmp
daa
mov
fsub
cmpsb
push
jno
sbb
fimull
mov
xchg
push
ret
imul
popf
push
add
ret
sub
mov
sub
loopne
push
sbb
lret
lcall
mov
adc
cltd
out
push
cmp
xor
into
dec
lods
xor
xor
jno
xchg
jbe
outsl
jno
clc
mov
std
imul
adc
xor
adc
mov
bound
xor
mov
mov
dec
enter
pusha
jb
push
cmp
bound
rcrl
sar
xchg
adc
mov
sti
xor
in
jp
mov
sbb
cmc
cmc
enter
add
into
or
test
mov
ret
mov
adc
pop
rolb
std
jns
in
rcll
and
push
orb
inc
sahf
aam
movsb
fldt
outsb
repz
adc
push
ficoml
lea
out
mov
data16
sbb
ljmp
fimuls
cmpsl
mov
mov
call
and
mov
movsl
pop
lret
sbb
imul
xlat
rcll
inc
cmp
iret
stc
cmpsl
mov
cli
scas
push
add
sub
xor
cmp
cld
and
dec
repnz
addr16
adc
shll
repz
cld
xchg
inc
jnp
mov
push
insb
in
jmp
xchg
sti
out
int
and
dec
addr16
and
in
and
adc
cmpsb
xchg
xchg
push
rcrb
xlat
movsb
sti
je
mov
jle
insl
jecxz
xor
inc
ljmp
or
stc
pop
lock
fldt
ja
adc
iret
mov
jno
int3
mov
fisttps
out
inc
clc
mov
cmp
mov
cld
mov
xlat
jmp
sub
mov
shll
push
cmpsb
mov
dec
sbb
inc
jne
fstps
adcb
lods
test
dec
and
cmc
inc
imul
push
jb
or
or
ljmp
or
call
xor
aaa
inc
mov
and
pop
in
push
adc
ljmp
pop
jbe
mov
lock
or
test
push
daa
cmc
mov
mov
loope
out
mov
lods
call
js
push
inc
xchg
xchg
mov
dec
lock
inc
daa
jnp
test
or
pop
sti
adc
mov
or
sub
adc
pop
dec
mov
pop
fsubrp
aad
sub
rcl
inc
jecxz
mov
dec
ja
loopne
sbb
test
xchg
xchg
pop
push
movsl
and
pop
es
dec
add
ss
sarb
pop
loopne
popf
sbb
ficoml
pop
jge
xchg
outsb
lea
subb
shl
sahf
sub
dec
push
push
dec
xchg
mov
push
add
lret
repnz
or
data16
mov
sti
iret
xchg
jp
ret
test
imul
and
lods
jne
bound
shlb
lods
or
inc
adc
cmpsl
jb
ret
and
push
jne
jg
fistl
inc
out
xchg
call
push
mov
das
sub
jle
cmpb
sbb
sub
fsts
dec
arpl
lea
mov
ds
jmp
outsl
pop
mov
call
or
jo
push
push
xor
fsubrl
adc
add
scas
pop
mov
xlat
rcrl
fcmovu
mov
and
dec
cmc
mov
sbb
dec
inc
mov
pop
and
dec
icebp
sti
aas
ss
jbe
cmc
mov
loopne
pop
daa
jo
add
and
sbb
insb
pop
lahf
push
aad
in
cld
xor
inc
ja
pop
enter
call
insb
xchg
mov
outsl
out
in
and
or
push
jmp
cmp
mov
sbb
push
fstpt
pop
inc
and
test
outsl
add
sar
or
cltd
sub
sub
arpl
loopne
std
push
mov
push
jle
or
repnz
testl
xor
aaa
jae
shlb
loopw
fsubrl
dec
xchg
xchg
push
stos
xlat
mov
mov
repnz
cli
js
inc
sub
test
push
xchg
push
lret
insl
fdivrl
lds
cmp
push
inc
in
mov
sub
xchg
fldcw
mov
jo
sub
dec
cmp
aaa
cwtl
mov
arpl
les
loope
int
cmp
dec
sub
mov
xor
bound
fimuls
sbb
dec
jne
divb
mov
nop
lahf
mov
repz
jne
lods
jnp
int
rorl
nop
int3
fwait
or
daa
arpl
dec
rol
inc
sbb
outsl
lahf
xor
sbb
mov
dec
imul
sub
in
out
sbb
loope
and
xchg
lea
fs
xchg
jo
cmp
nop
jle
jb
cmp
imul
cli
inc
scas
cmp
adc
xor
mov
xchg
jno
lcall
xchg
push
xchg
lds
inc
jns
fwait
stc
lcall
loope
inc
out
testb
fxch
adc
cld
mov
push
shr
and
inc
xor
xchg
sub
cmp
stos
sub
mov
xchg
push
mov
xor
sbb
shl
cmp
sarl
push
gs
xor
sbb
in
jne
lahf
adc
int3
and
mov
xlat
jecxz
fisubrs
pop
dec
mov
mov
mov
fisubs
or
jl
ficoml
negl
pop
xor
repnz
cmp
int3
and
jge
aam
mov
stos
cmp
cli
inc
iret
test
jle
pop
fdivrs
sbb
icebp
ss
mov
aad
es
mov
mov
lods
aad
or
inc
mov
adc
aas
inc
cmp
jo
xor
data16
dec
mov
xchg
pop
add
push
rorl
outsl
in
stos
jns
jg
das
cmpsb
push
shrb
outsl
popa
inc
shlb
cmp
sub
loope
mov
imull
mov
imul
in
iret
fisttpl
sbb
clc
pop
mov
pop
push
mov
lahf
add
enter
fmull
jb
pop
out
sti
mov
mov
ds
cmp
adcb
aad
outsb
scas
xchg
adc
or
lea
adc
ret
pop
cmpsb
xchg
cmp
pop
sbb
jecxz
push
aam
stos
imul
cld
or
je
aad
out
fucomi
imul
cmp
push
ja
loope
adc
pop
cmp
adc
mov
repnz
xchg
and
xor
or
add
sub
xchg
test
jle
mov
cmc
pop
adc
and
pusha
insl
test
das
pop
sub
lock
in
aad
cmc
fisttpl
pop
lock
sub
pusha
inc
xor
nop
ljmp
ja
jp
cmp
lods
xchg
add
inc
mov
lea
cmp
xor
flds
adc
aam
cmp
stos
xorl
sbb
xchg
rcpps
and
inc
and
ljmp
and
in
add
sub
push
dec
aaa
int
icebp
mov
xchg
mov
mov
mov
push
xor
jb
xchg
pop
push
out
cmp
orb
sahf
rcl
insl
pop
lock
mov
mov
loopne
cmpsb
out
mov
pop
mov
js
subl
sahf
out
mov
inc
je
jo
push
inc
lcall
inc
ljmp
scas
insb
movb
out
jne
repz
mov
sbb
cli
pop
popf
dec
xor
jmp
sbb
lods
jno
dec
imul
mov
fsub
xor
shrd
xchg
jns
push
ret
rcrb
cmp
xor
fistps
mov
and
xchg
jmp
and
push
pop
sub
nop
inc
jmp
mov
xor
jg
xchg
or
jne
fwait
or
adc
mov
push
mov
xchg
add
fiaddl
dec
mov
enter
pop
adc
mov
sbb
iret
outsb
xchg
clc
stc
inc
dec
adc
stos
jge
das
pop
daa
test
imul
fsub
sets
pop
cmc
pop
ds
jae
mov
je
push
push
stc
mov
jge
adc
imul
lods
or
test
or
jmp
cmp
push
pop
dec
or
popa
inc
mov
pop
insl
mov
mov
fcoms
inc
and
bound
fnsetpm(287
loop
push
ja
cmc
enter
mov
std
enter
sti
leave
stc
inc
js
iret
test
scas
fwait
dec
ljmp
outsb
dec
push
mov
fistps
add
push
addb
xchg
mov
pusha
ret
push
push
stos
scas
add
outsl
push
clc
jge
xchg
xchg
ret
adc
push
add
testl
sar
daa
icebp
cmp
shlb
push
jl
loope
or
jl
addb
bound
xchg
mov
mov
out
fwait
lods
out
push
aas
andb
pop
imul
imul
loope
test
pop
cmp
js
fdiv
push
test
jg
mov
jno
aas
sub
daa
jmp
inc
inc
lret
cltd
mov
imul
stc
adc
repnz
cmpsb
loope
lea
gs
stc
and
in
inc
mov
int3
mov
cmp
add
add
ljmp
testl
mov
pop
shlb
dec
std
fildl
int3
dec
mov
and
test
pop
les
daa
aaa
enter
fs
ja
inc
mov
outsl
outsb
inc
or
call
lods
push
insb
mov
cmp
imul
subl
in
lret
cli
pop
es
fs
add
pop
fstpl
add
add
stos
add
out
cmp
jle
cli
mov
movsl
movsl
loopne
sbb
and
inc
and
lahf
aas
shlb
adc
sub
push
int3
mov
les
xchg
mov
sahf
adc
mov
mov
inc
nop
add
sbb
iret
out
jno
mov
out
sti
mov
das
loopne
pop
pop
fwait
mov
mov
cld
xchg
jge,pn
cmp
loopne
or
push
pop
adc
in
sub
dec
jmp
cmp
out
movsl
or
dec
or
int3
mov
mov
aad
testl
adc
sub
or
enter
xor
sub
add
cli
lock
bound
nop
insl
scas
dec
pop
std
pop
adc
pushl
cmp
hlt
jle
mov
pop
popa
mov
or
dec
ss
cmp
dec
add
aam
mov
sub
sahf
and
and
cmpsl
cmp
pusha
cltd
cmp
pop
jb
cwtl
cmp
jg
push
cmpsb
cmp
loope
outsl
dec
out
cmp
mov
jl
arpl
inc
or
jne
lock
xor
fsubrl
pop
sbb
mov
repz
sub
jecxz
out
cmp
and
jecxz
pop
stos
lock
hlt
adc
cltd
mov
xchg
jg
int3
fnstcw
shrl
mov
loopne
les
inc
mov
nop
leave
lock
or
push
mov
and
into
pop
stos
adc
fcomps
and
add
ss
xor
leave
dec
jg
jns
lock
mov
fwait
out
push
jg
mov
stos
push
jp
mov
pop
test
imul
pushf
jno
out
sahf
out
lcall
cmp
out
inc
pusha
sbb
jne
jg
and
sbb
cmp
mov
insl
and
int3
pop
push
mov
test
adc
push
push
cmp
scas
rolb
call
fisubs
xor
push
pop
cmpxchg
dec
sbb
inc
sub
testb
dec
aad
cmpsl
sbb
insl
movsb
pop
mov
dec
xor
push
jp
jmp
mov
lret
test
inc
and
mov
mov
dec
xor
les
push
fldt
sti
in
sbb
mov
insb
and
xor
inc
pop
dec
inc
dec
ret
in
mov
aam
or
add
xchg
jo
bound
add
pushf
inc
popf
inc
mov
sub
imul
imull
jno
fwait
push
bound
sbb
cli
lea
sbb
push
lock
cmpsb
lahf
test
int
lret
inc
xchg
lods
rclb
inc
lcall
mov
mov
inc
push
addr16
std
fisubs
out
push
test
nop
shl
mov
mov
mov
into
les
adc
outsl
cmp
lds
pop
fwait
inc
cmpsb
push
cld
sbb
cmpsb
nop
or
push
adc
mov
bnd
insb
cmp
pop
mov
dec
ljmp
sbb
cld
cmp
test
mov
shr
xor
int3
push
lret
rcrl
jp
dec
ret
or
mov
or
dec
and
out
mov
stc
scas
rolb
not
push
sbb
fstps
rorl
push
mov
outsb
out
xchg
call
mov
pop
fcmovne
xchg
fdivrl
es
pop
ss
mov
mov
jl
mov
jmp
adc
adcl
inc
push
cmp
in
or
mov
push
jbe
pop
insb
in
lock
ret
cs
hlt
int
shr
fnstsw
mov
mov
sbb
jmp
dec
jmp
xor
daa
mov
cltd
jne
cmp
and
cmp
mov
cmp
inc
xchg
in
push
dec
in
inc
push
hlt
lret
rcr
dec
inc
pop
xor
fs
fwait
pop
mov
xor
xor
hlt
outsl
ss
roll
rcr
loope
jae
push
sti
jg
jmp
int3
out
enter
iret
mov
pusha
inc
aam
pause
jp
fisubl
push
dec
pop
scas
inc
mov
ret
pop
pop
cmp
cld
fdivrs
jne
push
fs
outsb
scas
mov
aas
call
ljmp
sbb
js
test
push
lods
rclb
loop
dec
pop
lods
je
dec
sbb
mov
mov
xor
adc
out
addr16
orl
lods
cmc
jp
xor
jge
lahf
gs
addr16
mov
daa
cmp
cltd
repz
sbbb
mov
daa
lea
lcall
xor
jg
pop
fildll
adc
imul
xchg
add
sub
ja
adc
mov
insl
push
fwait
bound
clc
cmpsb
add
mov
std
aad
sub
test
data16
or
idivb
js
xor
lret
push
push
inc
adc
xchg
leave
aam
xchg
sub
push
and
fwait
mov
jb
into
adc
xor
shlb
jb
movsb
lds
xchg
add
mov
cwtl
xlat
mov
aas
int
xchg
fwait
iret
mov
and
jae
int3
in
mov
scas
addr16
dec
add
fcomps
ss
xchg
adc
push
jge
aad
mov
sbb
popa
mov
pop
stc
xor
sbb
fisttpl
sar
push
insb
mov
jg
dec
pop
mov
or
loopne
xchg
cltd
inc
jmp
idiv
xchg
mov
mov
pop
mov
mov
stos
arpl
loop
decl
lock
jl
mov
mov
sbb
push
jecxz
pcmpgtd
lcall
sub
lock
cmc
hlt
ja
sbbl
cmp
xor
cmp
or
mov
clc
pop
push
dec
imul
adc
fnstcw
add
mov
lahf
enter
jecxz
das
daa
mov
add
adc
lahf
test
or
xchg
xor
xchg
outsl
push
pusha
cmpsl
jp
or
jo
jecxz
pop
sbb
sub
sbb
lods
les
jecxz
add
sbb
lods
push
and
pop
pop
out
pusha
andb
xor
mov
ja
pop
lret
mov
sbb
stos
dec
fmul
push
cmp
nop
xchg
sbb
cmp
icebp
sbb
rolb
dec
jne
xchg
fadd
mov
rcrb
pop
inc
push
jno
cmp
add
cmp
push
push
int3
icebp
je
leave
mov
pop
fwait
or
bound
jecxz
je
mov
add
jg
stos
jp
xchg
push
or
out
test
nop
adc
ss
jl
rcrb
inc
or
push
cmpsl
push
inc
jae
cmpsl
lods
or
lahf
mov
int
adc
mov
divl
inc
mov
add
test
xchg
inc
mov
dec
cmp
push
sub
int3
xor
dec
popf
mov
or
pop
push
outsb
cmpsl
jae
ds
aam
and
not
sub
cmc
jnp
imul
cmp
mov
stos
addr16
xchg
mov
lret
int
ffreep
cmp
sub
mov
dec
lahf
xchg
fimull
mov
rcl
call
loop
data16
lds
mov
or
mov
pop
in
xor
and
mov
add
lahf
or
xchg
dec
popf
inc
jno
hlt
pop
sbb
mov
in
jg
lds
dec
iret
int3
std
lds
pop
sbb
addr16
cmp
inc
fwait
outsb
repz
ljmp
loop
push
jg
stos
cmp
and
and
das
dec
aad
jnp
push
sti
xchg
sbb
push
cs
ss
aam
popf
jae
shlb
pop
rol
push
fs
mov
push
scas
cs
xor
mov
fmull
push
mov
adc
mov
pop
or
movsl
and
fldt
sub
xchg
mov
test
cmp
xchg
xor
lret
cmc
lods
xchg
je
fsubl
dec
mov
xchg
fimull
jp
mov
out
cmpsl
inc
jno
movsb
jg
cmc
enter
inc
inc
sub
aas
aam
jl
lea
cs
popa
mov
pop
mov
out
jmp
jae
mov
dec
mov
add
jl
inc
dec
add
in
rolb
enter
insl
pop
lcall
mov
cmp
sbb
test
dec
xor
dec
and
in
rol
out
sahf
cmpsl
aad
repnz
add
subl
psubusb
pushf
dec
mov
sbb
inc
push
imul
testb
scas
mov
andb
lret
fadds
cmp
out
in
sbb
dec
dec
sub
sub
jecxz
xor
test
ss
mov
das
fstpl
add
push
inc
xchg
in
scas
mov
in
push
cmp
cmp
ret
andb
jl
and
nop
not
jb
jns
ret
jbe
insb
fldt
scas
repz
stos
adc
test
adc
imul
mov
fcmovne
mov
jecxz
cmp
jo
sbb
hlt
sub
test
out
fdivrl
xor
jno
pop
jnp
int3
in
sbb
loop
add
test
notb
mov
fsubrl
xchg
jnp
mov
pop
cmp
insb
xchg
aaa
dec
push
add
imul
xchg
mov
cmc
insb
das
andl
mov
insb
sahf
into
into
in
movsb
adc
notl
dec
out
jmp
push
and
pusha
jg
enter
stos
and
out
mov
sbb
mov
adcl
in
pop
mov
stc
lahf
add
out
andb
sub
out
cltd
out
mov
movsl
push
insb
inc
adc
cltd
mov
cmp
jge,pt
add
jns
mov
lea
xlat
data16
jl
dec
mov
mov
and
and
mov
mov
xor
nop
mov
fs
lods
xchg
pop
mov
mov
pop
dec
mov
arpl
mov
xchg
dec
jl
or
adc
mov
stos
dec
or
leave
jmp
mov
lret
mov
scas
arpl
loope
cmp
jb
add
xlat
fldenv
lret
push
stos
inc
jo
pop
rol
mov
xchg
frstor
je
pop
jg,pn
out
cmp
and
mov
cld
scas
jns
ljmp
pushl
push
inc
in
aas
mov
movsl
repz
push
movsl
ds
scas
int3
cmp
mov
cmp
imul
push
push
pop
imul
fidivrl
stc
adc
xchg
inc
or
ret
fwait
into
ljmp
mov
rcll
sbb
mov
push
pop
aas
das
mov
rolb
test
out
sbb
jp
mov
adc
push
outsb
add
ljmp
fadds
loope
jnp
ret
stc
sbb
dec
inc
xchg
ret
mov
lock
ljmp
cld
and
aaa
rcl
sub
movsb
addb
push
mov
pop
mov
add
mov
leave
pop
xchg
sub
add
imul
mov
lds
sub
pop
lret
in
inc
xor
ss
cld
pushw
out
scas
adc
ja
adc
leave
pop
add
xchg
decb
aas
xchg
dec
add
sbb
bound
jne
das
imul
inc
push
jl
loope
or
dec
mov
or
dec
mov
sbb
dec
push
mov
or
and
pushf
lods
sbb
mov
mov
and
push
subl
pop
sub
adc
xor
xor
jl
push
xchg
cltd
mov
sbb
xchg
scas
mov
je
out
ja
cmp
push
hlt
mov
mov
dec
imul
insb
jg
pop
xor
js
add
roll
jnp
rorb
pop
insl
pop
fcoms
mov
into
dec
push
cmp
bound
popa
add
outsl
stos
pop
fwait
sub
lahf
popf
cmp
aas
xchg
add
dec
lods
pop
out
insl
int
test
add
mov
dec
fdivr
es
mov
pop
les
jno
sahf
cmpsl
sub
xor
jecxz
sti
inc
cmpsb
cltd
fisttps
fnstcw
sti
enter
and
in
mov
push
sub
cmp
sahf
out
mov
mov
clc
aas
cmp
mov
pop
or
loope
sub
cmc
hlt
push
xchg
sbb
ss
lret
cmp
pop
lret
cmp
getsec
arpl
es
fsubr
stos
or
psubd
mov
mov
xor
push
fsubl
int
xor
pop
or
mov
xor
push
scas
lcall
fsts
int
cmpsb
mov
jne
cmc
aas
test
sbb
aad
fadds
cmc
add
sbb
xchg
push
xchg
insb
push
test
xchg
xor
addr16
sbb
outsb
inc
fisubrs
xchg
mov
fstpt
dec
lcall
inc
inc
push
repz
cld
cs
pushf
cmpsb
adc
loopne
mov
cmp
mov
aam
test
xor
inc
xchg
sub
mov
mov
ret
popf
int3
sbb
ret
and
push
mov
movsb
adc
hlt
jmp
mov
dec
jmp
or
mov
repz
into
in
out
xor
test
and
and
cli
outsl
test
mov
cmp
xchg
cli
sub
flds
out
mov
add
sbb
ret
cmc
imul
pusha
fldcw
shll
inc
inc
inc
imul
jmp
xchg
xchg
mov
fwait
or
sbb
xor
add
push
dec
sbb
inc
mov
mov
sahf
daa
mov
outsb
rol
int3
imul
dec
rclb
fs
xchg
imul
pop
xchg
or
mov
sbb
addr16
sahf
xchg
cli
push
cmp
mov
push
xor
aam
lock
add
out
inc
jne
mov
push
into
stos
sub
popf
scas
xor
or
inc
out
sbb
insl
test
daa
gs
sub
inc
rcll
xchg
cltd
leave
sub
shrb
imul
mov
addr16
xor
or
add
aas
inc
cmp
clc
xchg
jmp
mov
pop
outsl
jbe
mov
fisttpl
mov
imull
cmp
push
fildll
inc
iret
push
ficompl
aam
cmp
cmp
test
dec
and
jne
mov
xchg
inc
xchg
push
out
pop
push
cmpsl
mov
xchg
sbb
sahf
movsb
test
add
lret
les
adc
mov
mov
movsb
test
ret
or
outsl
mov
arpl
mov
aam
xor
mov
mov
cmp
xchg
jge
in
rol
stos
and
test
subb
es
stos
add
lret
mov
pop
xchg
orb
loop
pop
into
sub
mov
icebp
lahf
sbb
les
jge
pop
xor
test
data16
or
cmpsl
pop
push
shll
pop
fimull
loop
out
pop
scas
repnz
xor
push
loop
imul
xchg
mov
bound
sbb
js
sub
lods
fisttps
pop
jnp
loope
addr16
pop
dec
mov
sahf
inc
xchg
pop
xor
shl
sub
sbb
mov
arpl
push
jno
add
jmp
cmp
pop
lods
or
test
cmp
mov
clc
push
sbb
or
fwait
xor
sub
es
xor
cmc
rorb
jl
jmp
int3
inc
sub
xor
pop
insb
rcrl
jb
pop
ljmp
jbe
fiadds
push
repz
cwtl
out
adc
cmp
addb
out
mov
jl
data16
cmp
pop
and
mov
sbb
dec
jp
roll
xorl
pop
cmp
xor
loop
dec
jecxz
add
push
cmpl
push
xor
leave
mov
lret
ret
sub
scas
fistl
jne
jp
sub
xor
fsubrl
loop
mov
les
pop
test
call
fstp
xor
outsb
movsb
and
mov
or
or
inc
loop
mov
fiaddl
adc
pop
imul
cmc
out
jb
inc
push
stc
mov
dec
ret
mov
imul
mov
test
jl
lea
push
in
mov
mov
adc
insl
xchg
jo
mov
push
mov
adc
add
adc
loop
sbb
dec
es
adc
inc
mov
adc
jecxz
and
jge
or
xor
or
xchg
adc
mov
cmp
xchg
push
inc
dec
pop
test
xchg
mov
test
push
dec
mov
and
push
je
je
jl
pop
mov
push
dec
xchg
mov
sub
pop
sub
fnstenv
cmp
cld
cs
add
push
add
inc
mov
push
fldt
sub
or
mov
jg
inc
inc
and
sub
lcall
mov
jne
add
mov
ret
adc
sbb
arpl
mov
pop
xor
lahf
pop
and
sub
mov
xchg
loop
in
shll
stc
push
insl
ja
and
loope
scas
mov
lock
xlat
add
mov
aaa
shrd
aad
cltd
ds
xchg
repnz
pusha
xchg
in
int
aaa
xor
jge
dec
jge
in
out
push
jl
jnp
mov
inc
nop
fistps
filds
mov
mov
lods
movsb
in
in
lahf
sbb
popf
adc
jmp
sarl
xlat
inc
shll
jbe
rorb
adc
inc
popa
cmp
icebp
mov
dec
rorl
into
stos
fadds
cmp
int
add
or
jg
push
ret
inc
mov
cmp
mov
push
pop
fisttps
pop
jbe
mov
insb
jnp
and
subb
mov
mov
add
mov
jmp
and
push
jmp
xchg
in
repnz
xchg
pop
aad
sub
out
dec
fs
sbb
test
push
mov
sub
mov
cld
push
inc
pop
xchg
or
imul
push
ja
mov
jl
mov
arpl
jns
pop
notl
imul
fcoml
sarb
cs
cli
cwtl
xor
cmp
jnp
mov
inc
sbbb
repz
cld
xchg
adc
popf
into
aaa
arpl
sub
cli
inc
dec
leave
push
insb
inc
or
and
mov
push
cmp
mov
mov
rclb
adc
das
popa
inc
add
sbb
in
arpl
push
push
insb
sub
movsl
shrl
sub
shlb
mov
xor
jb
dec
xchg
subl
mov
into
fists
mov
ljmp
dec
test
scas
mov
jnp
cltd
adc
shlb
in
mov
jb
flds
xchg
lcall
push
and
and
xchg
popf
add
add
xor
mov
es
lret
xor
inc
mov
sub
stc
cld
popf
xchg
lds
fldl
jo
mov
test
shl
add
xchg
and
jl
xchg
mov
mov
xor
jmp
mov
js
push
std
gs
cmp
sub
mov
cmp
lcall
cmp
xor
mov
fcompl
or
cmp
xchg
testl
inc
fmuls
xchg
mov
int
into
sbb
xorl
dec
lahf
add
cli
mov
outsl
xchg
mov
nop
faddl
lahf
adc
dec
lock
out
ret
cmp
daa
es
and
imul
cmp
mov
fsts
call
mov
jb
repz
dec
add
or
jle
cmp
cltd
fiaddl
xchg
stos
rorl
xchg
movsl
or
int
mov
cmpb
mov
jae
cwtl
sahf
test
push
xchg
sbb
or
xlat
sarb
cmpsl
sbb
cltd
mov
sbb
pop
sbb
stos
mov
mov
ljmp
loop
test
fsubr
ffree
lock
mov
mov
sbb
loop
into
shlb
data16
push
in
mov
sar
decb
pop
mov
fcoml
shll
rorl
push
mov
jp
jge
sarl
decb
ret
fsubl
lds
lret
lods
jae
mov
mov
mov
mov
mov
xchg
mov
and
inc
sbb
popf
mov
adc
jp
fiaddl
test
decl
into
shl
outsl
and
xchg
mov
clc
sub
jns
ja
push
out
mov
lds
adc
fdecstp
jns
sarl
repz
ds
insl
cmp
cwtl
or
jle
stc
pop
pop
mov
enter
enter
lds
pushf
mov
push
push
mov
xor
pusha
dec
movsl
popf
push
sti
cmp
jae
pop
or
sbb
push
mov
arpl
cmpsb
arpl
and
mov
and
je
shr
arpl
inc
cltd
enter
dec
push
pop
xorb
int3
push
xor
into
in
movsb
cltd
aaa
push
pop
push
and
fdivr
sbb
nop
jns
lods
xchg
push
jg
adcl
enter
push
loopne
xchg
bound
push
inc
pop
inc
lahf
insl
mov
sub
and
jb
mov
mov
imulb
lock
lahf
fdivl
aad
and
movsl
insb
outsb
dec
jp
adc
iret
das
inc
jp
ljmp
mov
mov
cmc
xchg
test
mov
push
stos
xor
loopne
jae
int3
jecxz
mov
add
add
fcomi
loope
or
mov
jmp
cli
cmpsb
xor
cmc
outsl
cltd
popf
adc
sub
xchg
in
mov
sub
mov
add
fiaddl
into
mov
cli
shll
mov
pop
jb
cld
sahf
xchg
add
add
ljmp
rcl
dec
dec
fucomi
jmp
add
fistps
jae
aad
pop
push
ljmp
repnz
mov
jns
imull
ss
jb
icebp
sub
inc
mov
jle
lahf
and
incl
out
into
cld
pandn
pop
stos
enter
gs
enter
xlat
in
insl
mov
sub
sbb
mov
jb
adcb
jns
in
pop
idivb
push
out
lcall
js
jg
aad
cmp
icebp
mov
fistps
cli
lahf
jp
mull
dec
decl
scas
outsl
js
popa
xlat
dec
xchg
inc
test
shll
or
dec
dec
mov
and
inc
dec
loope
xchg
jb
fisubrl
mov
ljmp
mov
fdivl
cs
ret
xchg
scas
call
cwtl
lret
and
pop
xchg
sub
fisubs
push
out
lahf
lods
into
fwait
sti
out
ror
lret
jecxz
sbb
add
mov
fcmovu
inc
loope
dec
adc
adc
stos
sub
leave
shlb
sub
sub
push
scas
jb
or
jle
ret
cmp
add
insl
pop
ret
insl
xchg
adcb
aam
push
in
and
daa
loop
inc
shrl
popf
pop
inc
iret
mov
out
add
and
addr16
push
imul
mov
add
iret
packuswb
testl
pop
sub
sbb
dec
pop
loop
dec
inc
mov
mov
cmp
xor
mov
xchg
mov
mov
mov
sahf
jbe
xchg
shrb
js
mov
xchg
loop
mov
pop
fiadds
out
push
mov
cmp
call
data16
cltd
enter
das
lret
ss
aas
orl
cmp
jmp
lret
cld
dec
add
adc
js
jmp
lea
add
and
ljmp
out
sub
xor
dec
stc
or
pop
add
mov
lret
int
jp
in
fdivrs
stc
push
mov
hlt
xchg
je
aas
mulb
in
les
cmp
jb
cmp
or
xlat
adc
fidivrs
inc
outsb
sub
dec
jo
outsb
rorb
pop
xlat
rcll
adc
mov
repz
je
fsubrs
ss
pop
mov
into
mov
das
cmc
or
pop
dec
hlt
jno
aaa
out
sbb
xchg
mov
jmp
lods
xchg
push
inc
test
add
jl
lcall
into
sbb
inc
arpl
roll
sbb
es
ret
xlat
sub
mov
pop
das
xor
cmp
aas
add
pop
iret
push
lods
out
fisubs
xchg
fidivs
lods
and
or
je
sahf
jg
or
jns
jge
xchg
inc
xchg
dec
add
into
xchg
xor
or
add
popf
adc
adc
les
dec
inc
sub
aaa
fildl
xchg
loope
adc
mov
es
cwtl
aam
dec
frstor
adc
adc
xchg
jbe
add
inc
inc
adc
mov
out
xor
cwtl
cmp
push
push
ret
pusha
mov
jnp
mov
daa
mov
fs
fisubl
div
jmp
or
xchg
leave
mov
pop
pushf
sbb
insb
test
mov
sub
xor
jno
push
dec
and
loopne
aam
push
cmp
add
and
push
dec
lret
push
pop
sub
add
fsts
scas
pop
mov
cmp
insl
ljmp
roll
inc
mov
jmp
add
jae
test
rcrb
gs
mov
push
test
and
pusha
adc
mov
sbb
sahf
fnsave
int3
sbb
clc
in
test
push
xlat
sbb
insl
fiadds
mov
addl
cmp
dec
cmpsl
aaa
xor
pushf
cmp
insb
push
imul
lahf
bound
push
ret
xor
fcmovu
ret
fisubrs
or
cltd
rolb
arpl
dec
cmp
sbbb
mov
nop
cmpsl
jns
ficomps
mov
mov
pop
cmp
jl
into
pop
cld
jge
fs
into
add
sbbb
std
loopne
ljmp
dec
jp
repz
push
xor
mov
cmp
scas
pop
and
retw
pop
fwait
inc
push
pop
movsl
inc
rolb
add
jo
xchg
add
mov
faddp
aas
push
lods
es
cmpsb
std
push
mov
movsl
cmp
fbstp
or
sub
pop
mov
or
xor
in
jecxz
or
gs
mov
decl
xor
mov
je
xor
mov
mov
or
push
jns
loope
out
cmpsl
jge
aam
fldt
add
pop
js
lret
ss
inc
inc
stos
pop
adc
sbb
cs
push
mov
lods
push
adc
call
repz
add
sbb
inc
dec
push
xchg
test
xchg
in
lods
cld
loope
fstpt
dec
sarl
adc
xchg
int
push
ss
les
xor
push
push
push
data16
inc
pop
daa
nop
cs
and
scas
test
dec
or
xchg
bound
rcl
push
and
pushf
arpl
test
pushl
test
mov
adc
in
pop
jne
mov
xchg
cmp
aam
shl
movsl
adc
lods
jae
xchg
mov
adc
jae
scas
ret
out
pop
into
lahf
inc
pop
xor
sbb
mov
in
dec
test
enter
fs
rol
ljmp
and
push
mov
mov
or
insb
fstps
imulb
sub
mov
jne
popf
stos
xchg
xlat
xor
xchg
fcmovnu
popa
mov
xchg
repnz
sub
nop
insb
mov
repnz
cmp
fcompl
adc
cmpsl
jns
loop
jo
addr16
pushf
cwtl
dec
sti
dec
jno
lret
mov
jg
cmp
sbb
pop
stos
sbb
xor
jmp
xchg
mov
mov
hlt
out
mov
and
jo
mov
xor
pop
sbb
pop
dec
inc
adc
jns
push
mov
and
mov
stc
xor
mov
in
ja,pn
inc
rclb
inc
inc
out
mov
ljmp
in
pandn
dec
insl
mov
adc
fsubrl
inc
test
pop
push
shrb
jnp
adc
enter
mov
mov
cmpsl
fsubrs
cltd
sub
loop
cltd
mov
cmp
fstps
mov
cmpsb
jmp
inc
adc
adc
push
xchg
jle
cmp
xchg
mov
sub
pop
push
pop
inc
fwait
pop
lods
xlat
adc
call
push
lods
shrl
std
mov
mov
into
into
jl
insl
jge
dec
xchg
fdivr
inc
popf
aam
jno
jecxz
jmp
mov
insl
or
inc
fiadds
lahf
push
jp
cltd
dec
sub
inc
and
fbstp
push
jle
lret
out
lds
lock
mov
jnp
mov
fs
hlt
arpl
jnp
sub
and
setl
push
mov
jbe
int
ljmp
idivb
and
mov
orl
imulb
inc
outsl
jns
and
or
lahf
arpl
dec
xchg
jbe
inc
cli
xchg
ja
lahf
xor
mov
xchg
outsl
dec
insl
mov
lock
inc
ja
adc
and
jle
lahf
loope
push
stos
sbb
sub
add
mov
lcall
xchg
push
and
insb
push
lock
push
imul
and
push
mov
sub
arpl
insl
and
inc
lds
insb
daa
outsb
neg
jb
mov
sbb
clc
das
arpl
mov
fisttpll
insl
shll
std
test
push
mov
pushf
inc
and
arpl
fldl
cmp
cwtl
inc
iret
rorl
jne
repnz
arpl
pusha
or
lret
mov
testb
sbb
es
xlat
in
into
aad
stos
or
inc
inc
jmp
add
mov
inc
cwtl
push
sarl
aaa
lds
push
jmp
mov
sti
push
xchg
dec
add
inc
mov
or
mov
ret
repnz
inc
jg
push
lret
jne
les
xor
fldpi
or
mov
aad
scas
loope
imul
enter
jecxz
addr16
add
mov
xlat
mov
loopne
inc
dec
push
fcoms
mov
pop
std
mov
inc
pop
push
pop
mov
cmpsl
pop
push
pushf
sahf
mov
mov
aaa
sbb
shll
add
bnd
icebp
jmp
mov
mov
pusha
adc
xlat
cmp
aam
test
xor
and
aaa
and
idivb
xor
xchg
push
xchg
imulb
xchg
das
mov
shr
push
mov
enter
xorb
ficompl
shll
js
mov
into
sahf
lcall
mov
ja
sbb
xchg
pop
xchg
fistpll
xor
mov
jns
mov
movsl
or
fsubrl
mov
lret
pop
sahf
ja
inc
lcall
data16
cmovle
test
adc
add
aas
dec
mov
and
lahf
dec
mov
jge
inc
fdivr
jb
lods
lods
aaa
cmp
and
pop
sbb
jne
dec
pop
ds
mov
and
xor
lods
pusha
das
movsb
mov
and
js
push
pop
dec
jecxz
sub
push
mov
xchg
testl
in
pusha
imulb
dec
cmp
ljmp
dec
nop
inc
loop
add
dec
xor
jbe
sbb
cmpsl
add
faddl
and
out
mov
sbbl
xchg
fdivrs
jle
pop
jmp
and
das
or
aaa
out
cld
jns
aas
aam
lea
iret
xchg
jnp
sahf
pop
xorb
or
or
fisubl
adc
stos
hlt
xor
fimull
fwait
adc
jecxz
out
mov
aad
xchg
lret
mov
dec
add
hlt
cwtl
pop
jne
mov
sbb
inc
in
int3
ljmp
das
jno
ret
ljmp
jle
lahf
aad
cmp
les
inc
cmp
pop
vprotw
mov
arpl
test
lea
mov
stc
pushf
imul
xchg
mov
mov
pop
adc
sub
jmp
xor
movsl
fcoml
cltd
adc
jnp
or
pop
aaa
lods
or
xor
loopne
fcmovu
add
sub
xchg
pusha
mov
add
xor
stc
push
mov
push
push
fidivl
shrb
jecxz
movsl
lahf
push
jmp
cwtl
lods
fldl2t
push
idivl
dec
ds
test
mov
out
into
jle
outsb
rclb
sub
in
fisubs
mov
test
call
sub
cli
movsb
das
xor
imul
mov
pop
outsb
pop
sti
cmpsb
sti
sahf
test
jo
mov
and
shl
sub
xor
fisttps
shrl
lahf
xchg
divl
dec
adc
jg
movsl
xlat
fiadds
imull
mov
xor
and
adc
jae
imul
cmp
dec
cmp
sti
sub
cmp
sti
or
jae
mov
aaa
xchg
mov
movsl
jp
jl
sahf
cmpb
incb
dec
jmp
sbb
sub
js
mov
std
lods
inc
call
push
inc
xor
push
sti
add
repz
sbb
scas
push
jbe
dec
call
insb
xor
int
hlt
or
rcrb
or
xchg
pop
jno
push
cmc
hlt
imul
mov
mov
xor
sub
dec
sub
inc
sbb
lods
aaa
movaps
clc
xor
sti
inc
pop
test
push
xchg
repz
pushf
xor
jo
xor
out
call
and
pushl
cld
xchg
fists
pop
mov
and
xchg
js
scas
mov
pop
xchg
cmp
and
jb
mov
loope
cmp
aad
mov
dec
punpckhdq
stc
cmp
sub
push
pop
and
push
add
xchg
jg
mov
sub
inc
mov
fs
mov
jge
mov
push
inc
test
jnp
inc
jmp
jno
dec
jbe
sbb
push
rcll
jmp
sbb
pop
aad
mov
adc
jnp
sbb
mov
clc
sbb
mov
les
xor
xchg
sbb
mov
and
mov
sbb
mov
inc
out
pop
cmp
mov
adc
lcall
adc
orl
pop
push
mov
loop
push
scas
mov
sub
mov
cmp
scas
jmp
mov
add
fnsave
popf
or
ss
xchg
pop
ficoms
cli
sub
jmp
movsl
xor
in
ret
cmp
mov
xor
aaa
or
push
mov
sbb
leave
leave
ret
sbb
add
rcr
popa
dec
jne
rcll
outsl
cwtl
insl
repz
enter
aaa
loopne
jmp
ljmp
shl
mov
nop
lds
insb
lcall
out
in
mov
test
cmp
shrl
mov
xchg
adc
mov
fsubrs
out
jg
pop
jb
cmp
lock
gs
psubusw
daa
push
add
jnp
cmp
ret
vpunpckhqdq
adc
inc
lahf
fwait
pop
js
std
or
into
inc
inc
jmp
ss
iret
cli
adc
jno
cmp
in
mov
add
sub
push
sbb
insb
cld
mov
add
loop
or
adc
ss
xor
mov
pusha
decl
in
ret
inc
test
jmp
mul
pop
popf
aad
jecxz
std
jae
sbb
popf
push
imul
es
mov
sub
pop
pop
das
jne
mov
lahf
es
inc
ret
jne
rcrl
sahf
arpl
pushl
mov
call
xchg
adc
daa
bswap
cltd
cmpsl
arpl
mov
imul
leave
lret
xchg
xchg
bound
cwtl
lock
idivb
push
inc
jb
fisubs
out
out
sti
cmp
stc
xor
cltd
xor
sbbb
xor
lret
sbb
insl
imul
fmull
add
sbb
icebp
cli
push
addb
inc
jae
jne
ss
rclb
mov
call
mov
repnz
jbe
push
pop
xorb
add
push
dec
repnz
leave
sub
mov
mov
mov
cli
cmp
mov
sbb
mov
sysret
and
imul
mov
push
pop
data16
sub
gs
sbb
cmpsl
push
iret
andb
add
jno
xor
orb
mul
pop
das
test
xchg
enter
popa
out
pop
movl
mov
loopne
mov
incl
jmp
shll
jmp
mov
lods
lea
stc
adc
scas
sar
das
repnz
xor
cmpsl
push
je
je
xchg
rorl
and
lahf
jae
mov
push
mov
pop
jbe
and
cmp
push
mov
adc
mov
inc
fwait
jecxz,pn
lahf
pop
lock
sub
xchg
pop
movsl
es
ja
inc
rorl
hlt
xchg
push
bound
add
inc
push
mov
pop
push
jmp
sahf
int3
aaa
and
xchg
jl
lret
sub
jnp
test
ljmp
sub
cs
mov
fimuls
in
outsl
jno
mov
inc
int3
sbb
testl
je
cs
lcall
or
xchg
insl
sub
repz
dec
repnz
int
shll
mov
inc
jno
cwtl
ret
jo
xchg
dec
adc
pop
dec
push
addr16
int
mov
incb
ret
sbb
arpl
mov
rcrl
or
bound
rcrb
adc
push
inc
jns
aad
sbb
addr16
lcall
and
scas
iret
cltd
shl
mov
stos
dec
xor
repz
test
testl
ret
adc
add
std
cmp
mov
mov
cwtl
cmpsb
stos
cmp
lret
lea
cld
mov
ljmp
jmp
insb
cmp
fldt
mov
cmp
nop
cmp
push
jne
adcb
cli
xor
push
cmc
movsl
into
and
xchg
rorb
ret
pop
xor
mov
fs
lret
sti
dec
xor
lods
stos
test
or
aas
add
shlb
fidivrs
push
cmp
data16
fldcw
arpl
stc
and
xor
int
sbb
loopne
pushf
jge
pusha
ds
jmp
cmc
inc
mov
js
inc
cmp
rorb
inc
add
out
xchg
outsb
adc
xor
ret
popf
mov
cli
sbb
outsb
cmpsl
js
lcall
push
arpl
pmovmskb
iret
push
lahf
das
fiadds
jbe
nop
sbb
cli
pop
loop
mov
insl
roll
aas
int
lods
mov
mov
and
cltd
pop
jmp
scas
fisubrs
andl
or
into
mulb
scas
mov
adc
rcrl
fdivs
xor
lods
cmp
je
sub
jae
pop
imul
fnstcw
mov
icebp
addl
sbb
inc
orl
rcll
sub
add
sahf
push
in
adc
test
shr
sub
pop
sub
icebp
jo
jbe
xchg
enter
dec
and
xchg
popa
out
int3
into
sar
push
xchg
hlt
ss
idivb
cmp
scas
push
mov
popa
loop
daa
loope
pop
lea
jnp
out
pop
or
sbb
or
jmp
mov
push
jb
xchg
dec
xchg
sbb
push
loop
push
test
je
call
stc
adc
mov
mov
xchg
add
test
outsl
sbb
iret
cmp
call
in
jns
arpl
jmp
xchg
cltd
mov
pusha
pop
hlt
pop
adc
lods
xchg
push
out
insl
sti
test
call
mov
je
sub
in
sahf
jg
lcall
in
les
push
sbb
sub
sbb
xlat
push
adc
stos
mov
lock
and
iret
into
cs
xor
ja
jle
add
jle
push
mov
out
mov
cltd
nop
test
add
cmp
mov
andb
mov
xlat
add
sub
mov
lcall
jnp
adc
mov
shlb
dec
ja
fisttpll
in
fisubs
popf
addr16
add
pminsw
push
dec
xor
adc
xlat
test
inc
sbb
hlt
mov
out
mov
jae
adc
sub
repz
daa
cmp
inc
jnp
stos
ret
jl
data16
dec
inc
movq
notl
into
and
std
pop
mull
mov
adc
or
subl
xor
test
stos
pop
pop
or
stos
mov
in
aaa
pop
inc
fs
test
roll
cs
jae
add
movsl
dec
xchg
add
dec
dec
ret
int3
jbe
outsb
out
xchg
cmpsl
mov
or
lcall
je
ja
inc
pushf
outsl
mov
in
inc
inc
jo
in
sar
lahf
mov
mov
test
pop
cmp
mov
jbe
gs
adc
xchg
mov
dec
ret
fsubs
cmpsl
movsb
push
stos
lahf
jne
sbbb
leave
repz
int
and
xorl
rcll
sub
jno
das
push
mov
and
stc
xchg
pop
or
data16
dec
mov
sub
lret
mov
lret
jp
ret
pop
out
lcall
sbb
inc
fadd
cmp
fstpl
loopne
push
mov
cmpsb
lea
xchg
and
aad
pop
loope
mov
jge
leave
mov
xor
adc
cmp
push
arpl
xor
js
push
sub
jmp
xor
nop
enter
je
stc
xor
fwait
cmpsb
dec
jl
test
mov
mov
popa
jecxz
and
adc
testl
sub
or
inc
pop
xchg
cmp
andl
sub
repz
mov
int3
jge
mov
aad
xchg
ret
shrl
push
pop
cmp
push
sub
pop
out
mov
sbb
ret
push
subl
xchg
ja
inc
mov
mov
int3
dec
js
mov
fdivr
lods
dec
shll
jge
pop
fidivs
repnz
mov
dec
cmpsl
rorl
lods
scas
ljmp
xor
in
mov
pop
data16
xor
xchg
mov
fwait
cmc
jne
mov
mov
dec
sbb
pop
mov
inc
int3
jae
sbb
xchg
or
test
sub
or
fwait
test
gs
fwait
mov
ljmp
push
xchg
aam
dec
out
lods
imul
jnp
lea
adc
dec
pop
adc
jb
mov
pop
xchg
ret
nop
pop
xchg
fidivrs
aaa
dec
fcomp
push
jne
fsubs
mov
jne
push
push
out
mov
data16
outsb
pop
std
or
jl
subb
fpatan
fs
adc
test
inc
mov
ss
dec
icebp
push
fldcw
psllw
or
mov
cmc
scas
lret
adc
call
mov
xor
test
test
cmpsl
test
xchg
xor
sub
ljmp
sbb
mov
cmpsl
in
and
outsl
aaa
in
and
aas
stc
push
adc
mov
pusha
rorb
push
jbe
scas
pushf
inc
or
jmp
add
sbb
sub
out
mov
or
test
fisttpll
repz
push
adc
loope
jge
mov
arpl
dec
or
orb
loope
xchg
mov
std
sub
jno
js
stc
repz
or
int3
jmp
mov
xor
dec
fildll
ljmp
out
dec
in
mov
mov
or
das
xchg
jge
imul
pushf
xor
and
xchg
rolb
sub
popf
mov
jecxz
pop
std
xchg
out
or
hlt
stos
sbb
cmpps
aam
mov
cmp
mov
js
sbb
std
jns
sbbb
xor
mov
fbld
inc
out
repz
stos
daa
xor
cmpsb
add
mov
mov
data16
and
push
pop
pop
xchg
out
pop
leave
out
jp
clc
jmp
pushf
imul
jae
sbb
pusha
xor
arpl
and
adc
pop
sti
sbb
mov
sbb
inc
mov
fs
insl
outsb
sahf
imul
gs
xchg
mov
mov
and
inc
inc
fstpt
pusha
fadds
xorb
jle
andl
xor
and
xor
rol
enter
test
push
sbb
sub
cmp
sub
leave
add
or
jbe
clc
jmp
idivb
lcall
xor
jae
or
cmp
pop
sub
scas
das
mov
push
test
jle
lock
js
pop
lahf
adc
sahf
inc
es
icebp
fs
int
xor
adc
imul
test
enter
mov
dec
mov
xchg
or
sub
std
jnp
xor
in
daa
pop
and
push
orl
and
fdivr
cmpsl
aam
lods
mov
xor
repnz
in
test
or
inc
pop
mov
xor
mov
call
enter
pop
rcl
inc
sti
popf
aam
xchg
inc
ljmp
shrl
push
jb
xlat
jg
mov
xor
jne
mov
lret
aaa
cmp
xchg
cltd
ljmp
lahf
bound
push
pop
or
push
xchg
loop
dec
out
mov
dec
sub
test
jae
in
xchg
outsl
fisubrl
mov
mov
ss
jae
cmp
mov
adc
and
cmp
push
adc
xchg
aas
inc
gs
popf
push
mov
in
cld
test
push
push
int3
enter
and
sbb
add
and
xchg
jno
mov
stos
sbb
outsb
fistpll
test
sub
cli
mull
cmp
out
rcrl
jmp
lcall
cmp
sahf
sub
inc
das
cmpsl
and
pop
sbb
scas
sti
mov
fwait
imul
xlat
inc
test
mov
xor
stos
ret
into
aad
mov
insb
ja
ja
sub
loopne
mov
adc
push
fs
les
icebp
loop
mov
jbe
sub
mov
hlt
sub
sub
adc
cmp
mov
inc
and
xor
ret
pop
cmp
cs
aam
pop
icebp
out
adc
adc
negl
out
push
rolb
divb
pop
sbb
inc
shrb
fwait
jno
push
test
adc
mov
adc
arpl
call
adcl
sbbb
pop
push
push
xor
jecxz
mov
lock
push
mov
add
jno
or
jne
pop
lret
js
ss
aas
clc
dec
ja
sub
addr16
mov
ret
stos
fs
lock
lahf
ss
pop
punpckhbw
jle
adc
push
int3
cmp
out
dec
mov
push
decl
xchg
clc
out
dec
sub
hlt
lret
lods
pop
dec
or
repnz
xor
adc
loope
jle
in
sub
dec
dec
int
mov
sti
sbb
xchg
ds
outsl
ss
mov
jle
jp
out
repnz
mov
dec
jp
cltd
in
sub
leave
out
jno
mov
sbb
cmpsb
imul
dec
insb
out
or
fs
mov
push
xor
cld
lcall
add
fists
daa
in
les
dec
outsb
nop
mov
sbb
pop
sbb
pop
jge
je
xor
rcrb
adc
shl
das
xchg
fsub
dec
ja
ljmp
jmp
pop
jl
cwtl
jno
xor
xchg
jae
pusha
movsb
lods
cmp
out
loopne
mov
push
push
aam
xchg
je
popa
mov
push
out
outsl
cmpsb
xchg
mov
mov
add
adc
out
cmp
inc
pop
aad
xor
cmp
or
test
cwtl
out
lods
cmp
lods
push
cs
mov
adc
or
push
rcr
mov
fsubs
jb
arpl
push
movsl
icebp
fstenv
dec
imulb
inc
mov
cwtl
imul
adc
aad
pop
inc
stos
shll
lahf
inc
popa
mov
clc
xchg
mov
or
stc
mov
cmp
inc
sub
out
iret
xor
into
push
aad
test
sub
push
sbb
rclb
mov
jg
inc
mov
sarl
cli
add
lahf
pop
out
das
inc
and
xor
iret
aad
mov
rcll
inc
fcompl
and
rcrl
int3
sbb
push
mov
mov
in
mov
stos
xor
sbb
scas
mov
test
pop
lea
xor
xlat
mov
iret
push
sti
inc
repnz
mov
cmpsl
jmp
push
out
int3
sub
jbe
inc
in
jo
adc
dec
icebp
mov
aas
pushw
inc
fucom
mov
fists
pop
or
sti
push
fldenv
jne
fisubs
jle
mov
scas
pop
jno
add
ljmp
pop
or
mov
dec
xchg
xor
mov
and
pop
or
repnz
jecxz
xor
sbb
into
sub
arpl
sti
jle,pt
pop
or
lods
sbb
adc
aad
push
dec
imul
or
mov
xchg
lock
fistl
xorl
add
aas
inc
inc
stc
paddsb
dec
mov
out
xchg
or
mov
cmp
adc
aaa
ljmp
pop
ljmp
mov
fldcw
mov
insb
les
icebp
inc
mov
inc
and
push
lea
lcall
add
mov
iret
iret
fdivrl
dec
rcrb
cwtl
dec
mov
and
or
loope
lds
insl
hlt
jns
lret
imul
xchg
xor
mov
in
dec
add
xchg
fs
in
std
lea
in
xor
pop
ljmp
jnp
sarb
cmc
or
pop
pop
push
jne
in
inc
sbb
lds
clc
push
fidivs
sub
das
mov
dec
mov
fstl
add
jp
scas
lods
pop
jo
lret
mov
xchg
cltd
stos
push
inc
insl
and
or
repz
gs
push
fs
xorb
std
stos
cmp
and
or
lcall
xor
gs
mov
xchg
enter
daa
iret
ds
push
push
leave
enter
mov
repz
idivl
mov
jle
mov
push
int3
test
dec
sub
in
ficomps
or
fwait
out
test
push
stc
lret
adc
iret
jnp
add
push
push
loope
cli
jg
mov
pop
je
cld
cmp
fs
int
lds
add
mov
jg
mov
push
jl
test
dec
popf
jo
mov
push
std
sbb
add
add
xor
mov
or
and
call
sahf
jmp
das
jge
fisubrl
mov
sub
fidivl
and
negl
mov
inc
inc
inc
push
mov
sbb
mov
mov
daa
adc
roll
mov
push
inc
push
aaa
mov
add
push
sahf
jge
cmp
push
pop
jb
fsubrl
leave
add
mov
jns
lcall
xor
push
cmp
hlt
xchg
xchg
or
divb
dec
addr16
xor
jp
push
or
xchg
pop
out
xor
sub
bound
popa
and
stos
insb
mov
test
iret
jmp
adcl
jge
or
jnp
outsl
outsl
sbb
adc
xchg
dec
out
int3
mov
fldt
decl
push
push
dec
and
jge
es
push
icebp
or
cmp
aad
or
mov
incl
add
inc
test
xchg
scas
out
sbb
jb
xchg
stos
imul
dec
sub
push
add
sub
jmp
stos
mov
std
data16
push
vpsubb
lods
fdivrl
lea
dec
mov
scas
pop
lock
popf
mov
lea
fucomi
inc
outsl
inc
pslld
dec
sub
inc
xchg
or
jns
cmp
pop
cmp
push
and
and
mov
xor
scas
mov
fnstenv
cs
int
int3
sub
imul
outsl
jg
jbe
adc
cwtl
aam
stos
cmp
js
sub
mov
dec
pop
xlat
or
aam
xor
cmp
sub
outsb
jae
inc
mov
xchg
fsts
xchg
aas
stos
mov
fwait
and
cmp
pop
in
jo
sub
aas
cmp
add
mov
ret
mov
aas
push
mov
add
pushf
movsl
mov
hlt
add
sbb
ret
je
outsl
addr16
pop
cmp
mov
std
mov
pusha
mov
test
dec
mov
inc
push
and
loop
pushf
movsl
pusha
pop
inc
cmp
cmc
pop
les
mov
lret
mov
popa
jo
in
scas
int
loopne
xor
leave
mov
xchg
rcll
stos
inc
jle
shll
push
movsb
mov
stos
mov
or
pop
xlat
rol
mov
jl
pop
aas
cmp
xlat
or
xchg
cwtl
and
rcrb
cmp
testl
insl
sub
cmc
out
cmp
xchg
or
push
xor
xchg
dec
mov
push
mov
lods
adc
mov
mov
or
push
sbb
pop
cmp
inc
cwtl
fnstcw
sbb
lods
insl
fstpl
in
dec
test
sbb
and
ja
in
rcll
xchg
ret
mov
mov
xor
nop
sub
fldl
lods
inc
jge
out
sub
cmp
jae
enter
loope
std
lret
lods
fwait
and
scas
adc
dec
cld
cmpsb
and
nop
dec
push
xor
shrl
xchg
mov
lea
push
stos
mov
add
imul
push
jp
sub
jecxz
cmpsl
adc
sub
xor
add
and
and
xor
ficoms
cmp
sub
and
cmp
dec
jmp
call
mov
mov
movsl
push
sub
orb
aam
cmpxchg
aaa
push
add
mov
call
push
lock
xor
fsts
dec
ljmp
xor
ss
popa
add
mov
mov
iret
ret
js
xor
arpl
daa
inc
minps
mov
pop
adc
hlt
adc
fmulp
es
addr16
test
es
inc
imul
xor
add
popa
in
jnp
mov
lahf
and
add
push
in
into
into
jmp
inc
mov
sbb
out
das
insb
ss
scas
cmp
dec
dec
pop
aaa
jge
addb
or
sub
shl
addr16
ja
lods
pusha
mov
push
mov
and
jo
add
in
inc
mov
cli
dec
xchg
mov
jae
pop
and
mov
adc
add
ja
imull
xchg
xchg
stos
lds
push
orb
loop
cmc
pushf
shll
imul
clc
std
lcall
xchg
mov
test
dec
inc
mov
jnp
mov
push
xchg
movsl
inc
mov
scas
fidivl
sub
push
push
fcom
adc
pop
mov
push
mov
push
lods
mov
stc
in
lret
jo
shll
lods
dec
mov
add
push
sub
xor
cltd
jbe
dec
rorb
pop
mov
hlt
lret
sti
mov
jmp
cmp
repnz
inc
xlat
dec
add
add
repz
dec
in
sahf
mov
out
jns
jo
movsb
xchg
xor
inc
jbe
daa
add
enter
mov
jno
jb
or
push
f2xm1
jb
jo
sub
aaa
or
lcall
cmpsb
push
in
add
orb
in
cmpsl
dec
lret
xchg
mov
daa
les
push
inc
scas
and
and
xor
lahf
dec
adc
cli
decb
sbb
cs
pop
dec
pop
fsts
sbb
adc
dec
into
pop
cli
sub
inc
movsl
jp
xchg
arpl
ja
aas
mov
inc
push
mov
cmp
add
iret
mov
push
jmp
inc
rcl
repnz
and
cltd
loope
mov
pop
mov
mov
dec
sub
push
push
out
push
cmp
or
mov
sub
es
adc
xchg
jg
mov
dec
ss
iret
inc
loopne
push
in
pop
xchg
sbb
les
repnz
rcll
mov
dec
sub
push
push
lods
cmp
cmp
lret
cmp
cmp
mov
repz
mov
mov
push
ds
bound
int3
sub
pushf
adc
push
lds
insl
insb
pusha
and
inc
add
rcrl
lods
cmp
inc
subl
lahf
ds
into
movsl
nop
hlt
mov
cltd
adc
push
mov
inc
inc
inc
cli
fidivl
mov
dec
nop
cmp
js
xchg
mov
dec
mov
sarb
out
xchg
cmpb
dec
test
lods
aad
mov
lret
push
inc
and
pop
inc
pop
mov
push
add
dec
push
out
add
pop
push
adc
dec
repz
cmp
jmp
pop
roll
cwtl
push
roll
sbb
sbb
js
andl
dec
cltd
dec
inc
fdivl
lods
dec
shlw
jle
xor
cmc
lret
decl
sbbl
mov
pushf
mov
scas
push
lods
mov
lods
jbe
adc
sub
mov
scas
pop
shll
dec
mov
adc
mov
test
subl
xor
pusha
clc
sub
rcrl
popa
dec
fwait
push
jbe
ret
mov
insb
std
sahf
jmp
inc
cmp
addb
movsb
test
enter
pop
jae
push
loop
shl
les
lods
xor
lods
and
mov
mov
cmp
es
add
and
pusha
in
adc
call
mov
arpl
jns
xor
ror
dec
add
jl
jne
xor
insb
mov
adc
fcomps
hlt
test
lret
mov
cwtl
lret
lods
push
popa
dec
push
mov
sub
std
fldt
push
push
mov
xchg
push
movsl
dec
jo
sub
cmp
loope
shlb
mov
testl
je
xor
jnp
sarb
clc
dec
add
js
sub
mov
mov
test
popa
cmp
jmp
fs
jnp
iret
out
push
push
mov
leave
sahf
adc
pop
incb
mov
xchg
dec
pusha
mov
pop
xchg
xor
popa
xchg
aad
xchg
sbb
in
test
cld
mov
pop
stc
ret
mov
pop
ljmp
int
pop
inc
jo
add
sbb
mov
repnz
bound
pusha
jge,pn
movlps
jb
mov
jge
adc
jl
imul
cmp
stos
pop
fwait
dec
mov
xor
push
mov
lods
in
inc
add
daa
push
pusha
jge,pt
sbb
addr16
fsubs
stos
stc
push
pop
push
aaa
jnp
out
sbbb
fistpl
lret
les
mov
je
call
cmc
ficomps
push
ss
inc
push
fnstcw
lea
into
call
stos
stc
es
lret
xchg
imul
in
jb
call
rorb
xchg
and
frstor
jge
icebp
cli
fistps
in
mov
pop
stos
mov
out
and
xor
mov
bound
push
or
jnp
inc
mov
pop
pop
ss
or
cmp
mov
aam
inc
add
cmp
xor
subl
lea
fcomps
ret
cmp
and
xchg
cwtl
cmpsb
mov
adc
push
cmp
aas
push
push
iret
stc
insb
fisttpl
lcall
adc
inc
inc
mov
xchg
xchg
xchg
mov
adc
and
push
pop
cmc
sub
in
andl
fidivs
push
xor
in
inc
aaa
outsb
and
dec
in
jb
test
jnp
add
sub
pop
sbb
xor
mov
ja
dec
jae
daa
fs
mov
in
arpl
xor
push
ret
inc
pop
jl
icebp
xchg
repnz
mov
movsb
out
ss
repnz
ljmp
mov
inc
cltd
add
jp
fpatan
shrl
outsb
lods
negl
inc
cmpb
add
loopne
cmpl
cmp
xchg
fisubs
lods
insb
out
ret
aam
fidivrs
jne
inc
aaa
lcall
lcall
pop
das
and
js
pop
ja
pop
ja
sub
in
test
adc
xor
fiadds
daa
mov
ror
add
ds
mov
xchg
xor
sti
jg
cs
inc
sbb
mov
mov
in
sarb
aas
inc
lahf
popl
jge
shrb
jnp
in
jno
xchg
inc
dec
or
outsb
mov
inc
pop
xorl
jle
mov
shlb
mov
inc
jns
push
popl
or
sub
call
into
inc
fwait
or
mov
jmp
adc
mov
popa
or
clc
jecxz
cmpsb
loopne
xchg
insl
push
mov
inc
je
jg
gs
mov
shl
das
pop
cld
in
rcll
ret
pop
or
or
pushf
lods
lods
jmp
push
xor
iret
test
push
in
push
or
sti
aad
adc
xor
mov
adc
sub
jo
mov
je
in
sub
xchg
daa
aad
lret
jg
roll
sub
xchg
fwait
and
leave
inc
cwtl
pop
fbstp
nop
rorl
movsb
popf
push
movsl
sbb
mov
mov
adc
inc
xor
sub
mov
inc
xor
out
les
adc
jbe
mov
nop
push
orb
adc
test
pop
pop
les
in
popa
in
hlt
jg
add
adc
cmp
sub
push
mov
fadd
ds
data16
add
iret
jo
push
dec
aad
dec
add
sbb
cmp
or
or
mov
lahf
xor
jle
test
push
dec
pop
mov
jnp
push
in
xchg
pop
jnp
lds
cld
jmp
and
push
xchg
negb
je
rol
scas
adc
dec
fists
clc
mov
hlt
aaa
lea
orl
xor
aas
xchg
imul
iret
imul
jbe
inc
scas
in
mov
sbb
inc
bound
adc
outsl
or
inc
test
inc
test
add
scas
xchg
lret
push
xchg
enter
in
fstl
lock
andb
xchg
cmp
dec
xchg
cmpsb
sub
add
cmpsb
lds
sbb
mov
jbe
dec
xchg
outsb
outsl
push
repnz
xor
in
xlat
imul
dec
cmp
jge
mov
sub
ret
xchg
push
lret
mov
jae
and
out
adc
cltd
sahf
fdivrs
lcall
andl
lcall
and
sub
cmp
adc
sub
push
es
js
dec
mov
pop
lahf
sbb
in
sbb
add
inc
jmp
test
mov
mov
scas
fistl
jb
loop
lcall
jmp
jnp
sub
aad
adc
xchg
sbb
imul
sti
pushf
repnz
xchg
aaa
jmp
inc
imul
xchg
fs
xchg
fdivs
cwtl
and
push
mov
or
mov
leave
or
pop
jno
pop
ljmp
ficoms
and
cmp
hlt
pop
ljmp
pop
mov
fistpl
jbe
iret
jmp
cmp
test
pusha
pop
fwait
mov
sbb
in
mov
adc
pop
inc
rcl
mov
icebp
daa
add
and
jmp
mov
rcr
mov
subl
xor
mov
dec
adc
mov
cmpsb
aad
mov
mov
or
loopne
addr16
test
jl
lea
adc
jecxz
fistpll
jbe
movsl
ds
mov
idivl
lcall
lcall
bound
cmp
orl
xor
add
mov
dec
adc
aad
test
loop
push
jnp
or
lea
aas
outsl
mov
adc
jge
popf
out
clc
stos
hlt
xor
fwait
pushf
es
es
mov
mov
jecxz
mov
sarb
dec
ja
jg
scas
adc
imul
jns
roll
xor
inc
outsb
fucom
mov
insb
xor
jmp
shl
data16
xchg
pop
mov
leave
sbb
add
les
jecxz
inc
sbb
mov
daa
test
mov
jnp
popa
jl
fdivrs
mov
cld
xchg
sub
sub
push
xor
or
shll
loope
shll
jecxz
adc
scas
gs
outsb
cmp
inc
cmp
push
sbb
shl
push
aad
xchg
and
mov
add
and
cmpsl
inc
repnz
movsl
cltd
fistpl
lea
jecxz
outsb
pop
or
sbb
pop
sbb
mov
dec
xchg
sub
or
sbb
add
nop
aad
cmp
pop
subb
inc
dec
sub
imul
test
push
gs
cwtl
enter
mov
dec
iret
repz
aas
jp
mov
stos
add
mov
loope
xor
jp
xchg
insb
mov
sahf
xchg
mov
cmp
inc
addb
rorb
test
lea
mov
jmp
ljmp
cmpb
jbe
sbb
nop
test
cmpsl
jbe
adc
stos
mov
mov
xchg
pop
push
dec
jno
imul
sti
push
adc
pcmpeqw
rorl
sbb
mov
or
loopne
ja
idivb
test
xorb
out
hlt
xchg
outsl
fs
xchg
mov
cmp
pop
aad
add
mov
pop
push
stos
ljmp
std
fidivrs
inc
loop
xchg
jg
pop
in
jns
sbb
fisubrs
daa
mov
pop
fcmovb
xor
icebp
or
sahf
jae
push
xchg
xlat
sbb
subl
xor
je
pop
stc
addr16
sbb
notb
cmp
pop
out
xor
jl
lods
or
xor
cwtl
mov
push
adc
push
and
jbe
cmp
sbb
jo
mov
jnp
xchg
data16
xchg
test
lea
imul
repnz
pop
sub
pop
add
outsl
jg
imul
fcmove
mov
sub
jae
int
fldl2t
aas
sbb
jbe
iret
enter
sub
int3
pop
imull
adc
scas
mov
mov
jns
push
dec
add
sub
iret
xor
push
fmull
je
mov
adc
and
xchg
std
push
aaa
pop
insb
xlat
rolb
loopne
and
jl
xor
cli
adc
sbb
aaa
cmpsl
inc
xor
imul
stos
sbb
sbb
popf
nop
fsubl
insl
loope
stos
fdivs
cmp
stos
add
dec
sbb
cmp
xlat
jp
push
push
and
dec
cli
mov
push
inc
inc
sub
sub
rolb
in
mov
mov
push
insl
addr16
cwtl
loop
xchg
outsl
dec
addb
pop
jae
mov
test
cld
jle
rorl
sbb
cs
bound
and
or
sti
insb
xchg
cmp
jo
add
fldenv
fstl
pandn
xchg
cmp
xchg
daa
sahf
push
dec
push
scas
inc
repz
insb
pop
lods
imulb
mov
enter
lods
ss
lcall
sahf
cmp
pushf
pop
adcl
nop
fidivrs
into
mov
mov
dec
xchg
flds
int3
mov
mov
mov
jnp
mov
outsl
xor
add
jnp
cmp
pop
xchg
arpl
push
xor
enter
lcall
loop
icebp
rcr
daa
mov
popa
ret
sti
mov
mov
clc
and
lcall
inc
movsl
loop
add
or
ret
addr16
dec
pop
dec
ljmp
inc
mov
push
push
pop
push
adc
ds
jmp
xchg
pusha
adc
das
mov
cli
push
adc
lds
jae
jae
sub
movsl
adc
fstps
iret
das
mov
pop
push
adc
adc
push
hlt
lcallw
xchg
rclb
hlt
cmp
cmpl
js
loope
int
inc
mulb
fsub
inc
adc
push
xchg
jecxz
cld
aaa
mov
repz
push
lahf
and
sarl
mov
daa
push
sub
sub
jb
sub
test
xchg
or
scas
les
push
out
dec
push
mov
fistps
insb
icebp
imul
xor
cli
xchg
mov
loop
push
sbb
push
push
movsl
adc
fidivs
andb
cmp
lods
cmpsl
sub
int3
ds
xchg
pop
out
xor
add
inc
mov
pusha
or
push
in
mov
inc
js
jle
adc
ret
shll
and
aaa
out
nop
lock
sub
dec
and
xlat
lret
and
pop
shl
iret
sbb
and
inc
add
lods
jmp
jb
cli
xlat
inc
je
push
jnp
mov
test
inc
jbe
ret
jmp
scas
xor
jns
xchg
aam
aam
jecxz
xlat
mov
or
ds
ds
xor
and
outsl
lea
push
adc
lret
ds
ljmp
leave
js
sahf
jg
out
jle
scas
std
adc
mov
data16
pusha
jno
cmpsl
jbe
push
cmovl
je
sub
pop
and
push
lods
add
cltd
pop
sbb
aad
sahf
push
mov
pop
aaa
iret
sbb
inc
push
sub
push
jp
lret
mov
mov
repz
lret
addr16
das
test
scas
sub
mov
pusha
add
jl
push
jb
int
mov
lcall
pop
dec
adc
lret
jnp
add
cs
jge
in
std
test
stos
jb,pt
ret
sahf
pop
cmp
scas
stos
jbe
jae
clc
je
xor
and
je
jge
and
enter
dec
mov
enter
movb
test
cld
outsl
fsub
sbb
push
or
in
inc
pop
pop
jnp
mov
cmp
push
fs
out
lods
sbb
jne
add
push
lret
popf
loope
jge
dec
xorb
js
sub
mov
std
or
xor
in
rolb
test
rol
ret
lret
push
and
mov
fs
jp
pop
mov
cmp
add
ret
add
jb
xor
sub
insb
nop
test
pop
pop
jae
dec
in
xchg
mov
xchg
test
pop
xchg
jae
add
jmp
insb
adc
pop
add
jp
sahf
bound
cmp
test
test
int3
mov
dec
pop
xor
or
jmp
lret
std
jnp
sbb
inc
fst
sbb
nop
dec
or
sub
jg
repz
cld
loope
cmp
pop
int
movsl
into
xchg
xchg
push
mov
jnp
push
mov
sub
sbb
xchg
mov
clc
stos
jge
sbb
jle
cmp
dec
or
orl
aas
cmp
pop
addr16
xchg
icebp
jl
addr16
jmp
xchg
fidivrs
gs
sub
je
je
push
rcrb
xchg
pop
push
mov
xchg
sbb
cs
and
xor
pop
and
sub
insl
icebp
or
cwtl
inc
aad
inc
xchg
dec
aas
ljmp
adc
addr16
icebp
std
jb
sbb
mov
aam
testb
xchg
mov
push
clc
push
xchg
jecxz
aam
loopne
jmp
test
pop
adc
insb
aam
sbb
das
jno
adcl
daa
out
fbld
add
or
subb
loope
xor
aaa
mov
pop
out
mov
outsb
adcl
push
in
and
aas
push
inc
and
clc
mov
dec
xchg
adcl
inc
jb
dec
pusha
pop
iret
sub
cltd
sub
inc
cmc
jns
push
fcmovu
les
enter
push
popf
nop
sbb
push
test
push
movsl
inc
mov
das
cmp
lock
push
jb
jb
fldenv
and
sub
xor
inc
lcall
pop
movsl
or
xchg
test
mov
push
mov
aam
pop
cmc
cli
aam
call
or
xchg
xchg
clc
cmp
mov
lret
movl
mov
jb
jns
dec
xor
hlt
pop
sub
sti
sub
int3
fidivs
insb
jbe
test
xor
cltd
loope
mov
gs
outsl
jne
sbb
inc
scas
jmp
rcll
sbb
add
mov
and
sti
mov
ret
enter
popf
lcall
in
inc
inc
jp
sbb
roll
int
adc
gs
sub
inc
lds
movsl
and
aam
mov
subl
bnd
ds
push
mov
aam
mov
adc
sub
orl
sub
inc
mov
inc
lods
dec
push
push
lahf
andb
xchg
xor
sbbb
push
mov
cwtl
add
hlt
xor
ljmp
add
addr16
bound
sub
out
sbb
into
or
pop
incb
outsb
std
and
sbb
dec
jbe
sub
sahf
icebp
sar
xor
fadd
lods
mov
or
idivl
addr16
and
aaa
push
or
mov
mov
push
pusha
inc
stos
in
push
dec
cs
pusha
hlt
mov
ljmp
test
fs
je
popaw
pop
cmpsl
mov
bound
repz
mov
jmp
mov
adc
sbb
fadds
and
je
mov
sti
mov
xchg
xlat
loopne
add
stos
dec
and
sub
dec
mov
addr16
jno
cmp
cmp
sub
mov
xor
aas
scas
fstps
mov
aad
clc
stc
mov
inc
pop
jecxz
pop
pop
or
cld
fisubrs
adc
dec
out
inc
xorb
pushf
sub
jne
mov
imul
sub
pop
idiv
push
insb
enter
or
pop
mov
push
push
test
fcmovnb
pop
xchg
push
mov
jp
inc
sbb
lret
lcall
xor
ja
jp
stc
push
mov
iret
movsl
outsb
add
daa
pop
scas
dec
shll
test
aam
push
js
pop
mov
outsl
jmp
xchg
and
adc
outsl
jo
enter
jae
std
inc
xor
mov
dec
cltd
shlb
cmp
repnz
in
sbb
or
push
cs
loope
iret
enter
mov
pop
cmp
mov
sar
ljmp
mov
icebp
aad
xchg
out
and
lret
xchg
addr16
xor
loop
jecxz
push
lcall
sub
pop
les
add
clc
mov
sub
lret
sbb
test
test
imul
clc
fstl
sub
repz
add
jle
pop
call
notb
pop
bnd
push
sub
cli
in
call
sub
xor
addr16
insw
scas
into
and
push
mov
pop
inc
aas
xlat
rcll
loop
or
in
push
imul
test
outsb
pop
cltd
inc
std
out
dec
sbb
outsb
inc
or
push
sub
and
mov
popf
mov
mov
test
addr16
jge
dec
rcrl
xchg
je
les
mov
imul
jmp
orl
rcll
or
jo
shrl
jl
lcall
adc
in
mov
out
daa
out
bound
xor
lret
push
xor
les
fbstp
ret
int3
lret
sahf
cmp
ja
pop
add
je
stos
popf
mov
arpl
xorb
pop
call
loop
mov
imul
push
adc
push
mov
leave
loopne
or
sub
daa
aaa
or
mov
call
dec
lret
fsub
lock
hlt
pusha
push
enter
and
push
cli
sti
lea
aad
out
jbe
pop
outsb
cmp
sub
jmp
repnz
jo
rorl
sbb
in
scas
adc
cmp
or
aas
aas
pop
inc
int
xorb
loop
int3
dec
aam
sbb
mov
mov
xor
mov
push
cli
cli
mov
dec
jmp
test
add
clc
in
add
sbb
leave
ret
mov
dec
test
or
in
subb
mov
loope
or
pop
imul
stos
cld
test
mov
jg
push
je
xlat
fdivs
mov
in
dec
mov
pusha
nop
enter
push
jmp
test
lcall
leave
fimuls
in
adc
lret
dec
mov
fwait
adc
mov
test
jg
jg
xchg
pop
and
test
push
xchg
and
pop
or
in
push
add
mov
imul
insb
scas
xor
dec
jmp
dec
mov
dec
mov
mov
lods
cmpb
in
test
out
sub
addr16
dec
mov
fimuls
shrb
arpl
mov
jnp
xor
cmc
jp
ret
xchg
dec
or
cmp
pmuludq
xchg
cmp
aam
inc
jmp
adc
iret
aad
rorl
test
in
cmp
or
mov
mov
push
adc
xchg
imul
popa
test
cltd
aaa
jb
sub
mov
shrl
je
lahf
cmp
pushf
inc
adc
test
mov
not
xchg
mov
cmp
inc
push
std
in
out
and
pop
xchg
lock
pop
bound
outsl
sbb
in
dec
dec
push
enter
faddl
mov
xor
ret
add
int
fs
fs
lods
out
aad
in
xchg
and
lcall
xor
andb
sbb
movsl
add
cmp
popf
lods
sbb
fldl
xchg
loope
popf
popa
push
pop
xchg
or
jp
iret
ja
orl
cmp
inc
adc
dec
loopne
add
sub
xchg
in
jp
shlb
jle
cmp
push
insb
push
roll
addr16
jae
popf
sub
push
xor
les
mov
dec
cmp
jecxz
sbb
in
movsb
jmp
popa
and
testb
adc
mov
sub
fisttps
dec
pop
fnop
xchg
cld
in
sbb
jns
xchg
stos
dec
sub
outsb
sub
test
add
or
in
jnp
and
test
mov
inc
push
loopne
stc
sub
icebp
push
pop
or
cmp
enterw
cmp
mov
or
cmp
call
xor
orl
pop
cmpsl
add
sub
iret
add
rcl
stc
addb
faddl
push
inc
push
push
notb
cmc
cmp
push
repz
adc
pop
mov
jmp
pop
aad
jo
push
push
pop
int3
loope
popa
hlt
addr16
xchg
mov
dec
fs
xor
test
loopne
arpl
dec
jl
out
pop
aaa
call
xchg
sub
adc
mov
popf
jbe
in
rolb
scas
jle
call
in
or
rcll
es
cltd
cmp
add
and
les
add
lock
push
push
out
adc
aam
inc
in
iret
dec
xchg
sti
pop
push
sub
cmpsl
test
pop
cld
sbb
leave
xor
xor
aas
and
es
in
mov
shll
out
sbb
or
cli
or
xchg
inc
insl
sbb
fs
test
fs
das
mov
cltd
push
cli
testl
lret
mov
int3
sub
xor
xor
xchg
shlb
enter
aad
lret
aas
insl
dec
cli
pop
ljmp
aas
test
shlb
fmull
leave
cmc
out
fdivl
lcall
andb
icebp
call
gs
add
add
outsl
int3
xchg
mov
cmp
mov
dec
or
sub
push
sbb
mov
and
and
adc
jb
mov
outsb
xor
inc
daa
xchg
dec
loope
push
mov
addb
cmp
test
cltd
pop
mov
vpminub
mov
inc
inc
ja
xor
pop
mov
mov
test
add
xlat
or
insb
adc
and
test
jno
test
pop
mov
dec
pop
fldt
add
loope
icebp
gs
faddl
fwait
pop
add
les
loope
cmp
daa
push
mov
adc
jp
gs
mov
into
xor
rcrl
loop
decl
idiv
pop
les
jl
les
pop
out
xor
push
mov
push
mov
mov
pusha
arpl
adc
dec
outsb
push
inc
add
mov
xor
das
decl
pop
mov
ds
fildl
sub
dec
pop
lahf
inc
xor
stos
pushf
cmp
daa
xor
cmp
inc
xorb
add
rcll
stos
cmp
in
int
xor
mov
add
fimull
int
adc
or
outsb
and
jl
fistl
xchg
cmp
xchg
cmp
mov
iret
fnstenv
enter
and
aad
push
mov
push
pusha
fadd
dec
xor
rorl
stc
or
add
or
add
out
cmc
lock
pop
push
jmp
and
add
sahf
push
xchg
negb
cli
or
repz
repnz
out
cmpsb
jp
popf
jecxz
mov
dec
loopne
lcall
pop
mov
inc
and
fsts
outsb
sub
test
out
add
cmc
dec
mov
xor
fists
xor
cmp
setbe
push
outsb
dec
repnz
mov
mov
das
sub
jp
int
call
xlat
xor
mov
pop
pushf
aas
test
cwtl
mov
inc
inc
fwait
xor
lods
call
sbb
jbe
xchg
mov
aam
adc
aad
xchg
fldt
lods
xchg
adcb
xchg
ret
stos
xor
jne
cmpsl
cmp
movb
popa
and
incb
dec
xchg
ret
ror
inc
lods
jecxz
pop
and
jecxz
xchg
loop
add
clc
insl
aas
xchg
ret
outsl
repz
push
xchg
in
mov
sub
xchg
push
in
pop
data16
mov
ror
inc
adc
enter
cwtl
out
jp
adc
jne
insb
in
xor
fsubs
sub
fcos
and
push
rclb
mov
test
sbb
mov
dec
out
cmp
mov
in
movsb
pop
pop
jo
inc
arpl
stos
pop
lahf
pop
ja
or
inc
inc
and
inc
inc
ret
ret
and
dec
push
sti
push
xor
sbb
inc
es
icebp
popf
push
loopne
pop
std
and
push
clc
jge
ret
or
xor
jns
sbb
jge
aad
mov
push
inc
test
jge
pushf
ja
inc
or
sarl
rcll
inc
push
fdivr
xor
mov
imulb
insb
fdivl
data16
pop
and
loope
js
aas
insl
popf
xchg
ljmp
aaa
test
xlat
mov
lods
cmc
in
adc
mov
jle
jecxz
jns
lret
sub
jae
inc
insb
fimull
pop
inc
je
xchg
sub
jno
stos
mov
out
lret
rolb
cmpsl
push
xor
mov
and
fwait
lahf
adc
sub
out
lret
cmp
or
out
xor
sbb
xchg
stc
inc
rorb
mov
test
js
dec
lock
sub
pushf
jne
fiadds
idivb
andl
xchg
xchg
ret
push
cmp
mov
mov
out
fdivrl
add
xor
jne
mov
loope
les
add
ss
mov
pusha
push
int
pop
pop
cs
test
gs
andb
popf
lea
push
dec
sub
inc
lock
cmp
pop
add
or
cmp
jnp
mov
fiadds
xlat
imul
lret
sub
dec
int
cmc
idivl
add
aas
rcrl
cmpsl
add
jbe
inc
and
lret
out
sub
or
repz
data16
sbb
mov
nop
jl
push
mov
add
sub
bound
push
xchg
pop
and
test
stc
add
cwtl
sbb
mov
jp
jmp
lods
adc
cmp
xchg
cld
jbe
mov
aaa
and
lret
xchg
sbb
dec
movsl
or
pop
mov
addr16
push
sbb
xor
fucomip
pop
es
mov
mov
inc
fadds
adc
aad
aaa
rcr
cmp
jnp
xchg
or
and
daa
pop
cmpsb
stos
lock
push
push
cli
add
xor
loopne
lss
add
out
scas
test
dec
mov
inc
lcall
rorl
xchg
fcomps
in
jne
sub
jne
inc
pushf
jmp
jno
inc
dec
lret
fstl
cs
cmp
ds
roll
out
popa
dec
nop
pop
out
std
data16
cmp
dec
fisubs
pop
xchg
into
cmp
adc
mov
jecxz
int3
sbb
ret
ret
lds
lcall
push
cmp
lret
xorb
sti
fidivl
clc
mov
push
shrl
mov
jne
inc
imul
mul
jecxz
dec
test
inc
xchg
call
or
sbb
repnz
mov
lods
xchg
pop
ret
push
and
in
fwait
jbe
pop
mov
sahf
gs
lods
or
addr16
dec
lcall
inc
push
pop
fisubrl
shlb
outsb
add
aaa
adc
aad
ss
xor
jbe
mov
mov
mov
pushf
movsl
std
or
scas
mov
sbb
mov
frstor
inc
stos
and
adc
std
jle
loop
mov
addr16
mov
inc
enter
xor
lods
rclb
in
popl
sub
mov
out
int3
jbe
movsb
sbb
dec
mov
or
add
mov
aam
cwtl
inc
mov
add
mov
outsl
sti
add
test
pop
pop
jmp
inc
add
je
test
loope
ss
lcall
add
fdiv
xor
sti
cmp
pop
inc
mov
adc
daa
addr16
jmp
xchg
std
pop
xor
pusha
iret
jb
or
pop
aaa
inc
mov
int
inc
outsl
mov
insl
push
bound
jbe
inc
mov
mov
stc
enter
xchg
jl
push
lcall
std
sbb
inc
loopne
mov
ret
mov
mov
addr16
fisttpl
movsl
shll
or
cltd
lods
fdivrl
mov
out
fstpt
and
call
shr
mov
sbb
jne
inc
pop
loopne
cltd
jo
cmc
adc
imul
or
lods
lds
mov
mov
out
rorl
dec
dec
addr16
or
rclb
stc
std
mov
pushf
aam
sbb
sti
add
push
out
pcmpgtb
rcrl
push
les
lods
jbe
lds
cmp
mov
je
mov
xchg
and
outsl
push
jl
mov
iret
movsl
sbb
test
arpl
pop
jp
sbb
push
fldenv
je
jbe
shl
and
inc
fists
pusha
movsl
das
xlat
adc
mov
out
jnp
or
xchg
jmp
into
stc
call
mov
inc
iret
mov
fcomp
cmp
sbb
test
xchg
cmpsl
xchg
in
lret
leave
xchg
ficompl
sbb
sbb
rol
adc
push
divb
movsl
arpl
insl
in
push
loop
nop
cmp
scas
jno
mov
xchg
inc
or
repnz
push
lret
adc
ftst
enter
scas
jge
add
push
pop
pop
push
out
inc
cmp
dec
mov
mov
test
cmp
pusha
mov
sbb
jb
jmp
out
lds
mov
ljmp
fldenv
jge
cli
xchg
lea
shr
jae
ds
inc
in
push
stos
repnz
ljmp
jle
and
inc
dec
push
pop
daa
pop
lock
movsl
mov
std
xchg
sub
pop
daa
pop
stos
xchg
jmp
inc
mov
ds
stos
in
cmp
adc
cmp
mov
cmp
divl
mov
decl
leave
mov
jbe
sbb
mov
and
repnz
push
fldenv
pop
fsubl
jbe
mov
mov
std
cmp
nop
push
jge
jno
sub
and
nop
sbb
mov
test
sub
and
stc
cmp
adc
or
aad
push
mov
jnp
mov
sub
imul
adc
xchg
xchg
adc
lcall
dec
sub
ficoms
and
fistpl
and
xor
mov
addr16
cmp
mov
ret
cmpsb
push
sub
add
ret
add
adc
filds
mov
adc
dec
jnp
lods
lea
xor
arpl
mov
jno
leave
inc
xchg
movsl
xchg
push
stc
sbb
mov
pop
rorl
and
or
add
mov
mov
push
cli
pop
bound
jl
cmp
in
xorl
push
push
imul
popf
mov
ja
shll
aaa
or
mov
rcl
push
arpl
sbb
dec
pop
push
fwait
rorl
xchg
lcall
out
sti
dec
lahf
adc
test
sarb
sub
ret
lea
ret
adc
call
sbb
push
insb
fidivl
or
mov
int
cmpsl
push
mov
push
xor
sbb
adc
mov
dec
mov
xchg
mov
sbb
jmp
aad
dec
cmp
sbb
or
mov
pop
xchg
mov
ret
stos
jo
out
lds
icebp
loop
pop
inc
ja
push
in
push
xlat
mov
dec
mov
cmpsb
loop
stc
cmp
xchg
jne
and
leave
dec
sbb
xchg
int3
jno
xchg
dec
xchg
gs
push
push
ret
popa
lahf
inc
jmp
adc
push
test
jbe
mov
cmp
sub
in
mov
jbe
adc
pusha
cs
mulb
lock
xchg
rorl
pop
and
pusha
jnp
scas
call
pop
add
jge
loope
cmp
ja
jne
lret
jno
and
clc
mov
mov
lods
and
dec
pop
roll
in
mov
or
push
cmp
xchg
xchg
repz
cmp
xchg
jl
aas
fistl
xor
jmp
lret
sub
jbe
mov
mov
insb
push
jnp
sbb
call
adc
push
lret
ja
dec
enter
and
push
pop
dec
dec
gs
cmp
push
sahf
pop
push
fcoms
push
mov
shrb
mov
and
push
mov
jbe
out
scas
mov
and
xlat
sti
xchg
icebp
push
jo
insb
adc
enter
cmp
lret
xor
aad
adc
push
test
pop
imul
movb
pop
mov
cmpsl
and
xor
jns
dec
mov
add
push
mov
dec
sub
fcoms
cwtl
and
jmp
test
bswap
cmc
mov
mov
mov
or
mov
inc
pop
ror
inc
push
or
push
les
loope
sbb
scas
mov
dec
add
xor
repnz
rep
xchg
and
es
sub
sti
mov
icebp
insl
sti
pop
pop
pop
add
sub
and
fwait
xor
and
aam
rcll
int
in
cld
push
cmpsl
cwtl
rol
daa
mov
mov
jns
mov
in
mov
mov
jae
aaa
test
mov
add
push
mov
adc
movsb
outsb
lods
inc
popf
pop
clc
xorl
fsubl
xor
fmuls
insb
adcb
or
inc
jae
out
lods
jmp
sti
mov
movsb
icebp
mov
cmpsb
test
xor
jle
in
jmp
stos
inc
mov
stos
mov
inc
test
sbb
jns
imul
sub
cltd
lods
out
into
xchg
insl
mov
adc
sahf
gs
cs
xchg
xchg
xorl
sub
push
lods
popf
fldt
jp
dec
dec
xchg
mov
or
arpl
xchg
lods
xor
push
mov
inc
push
dec
push
add
add
cmp
fcoml
ret
movl
xor
xor
or
inc
or
jbe
dec
cli
xchg
dec
pusha
cmp
bound
inc
xchg
andl
pop
repz
aam
in
mov
mov
pop
scas
sub
lods
fdivs
sub
mov
push
aas
mov
mov
adc
xor
fistpl
jg
pusha
xor
pop
popf
in
test
mov
push
mov
loope
mov
sub
add
sti
scas
inc
ret
mov
mov
into
enter
ss
loop
cmp
in
mov
ds
cmp
iret
dec
dec
inc
int3
dec
in
cmp
mov
adc
mov
pop
xchg
in
fldt
dec
fnstenv
sbb
test
adcb
jne
sub
and
xchg
mov
cli
repz
cld
fchs
jp
mulb
das
xor
aam
pop
jl
in
fnsave
xchg
in
lea
and
mov
stos
add
sarl
sbb
in
cwtl
adc
mov
xlat
leave
testl
dec
push
jno
divb
mov
pop
xor
and
jne
jno
push
pop
or
add
lock
xor
sahf
in
xchg
sbb
mov
xor
out
dec
incb
xchg
shr
in
adc
aaa
or
sub
aad
fldcw
mov
cld
outsb
xchg
mov
add
xchg
sbb
jp
mov
xchg
mov
xor
lahf
outsl
pusha
cmp
test
popf
shl
pop
clc
jo
in
mov
mov
movsb
jb
loope
leave
cmpsl
cmp
xorl
pop
mov
enter
ficoml
leave
adc
pop
fxam
divb
clc
inc
inc
jo
xchg
mov
frstor
push
std
aas
sub
sub
dec
out
cmp
xlat
adc
vcvtss2si
xor
in
sub
xor
mov
xor
xor
sbb
push
sub
jne
enter
push
mov
cmp
testb
sub
mov
fidivrl
notl
gs
fimull
adc
inc
shl
test
inc
pop
enter
insb
mov
fnstenv
sub
pop
xchg
pop
repz
jbe
fsubl
leave
xor
cmc
adc
mov
cltd
fwait
das
rcl
mov
adc
xchg
rolb
cmc
roll
pop
mov
std
push
adc
mov
xor
cmp
lea
fdiv
ljmp
mov
xor
push
mov
test
mov
sti
mov
loope
hlt
fistpl
icebp
xchg
test
out
fwait
aad
in
rcrl
mov
jns
mov
shld
pop
sbb
aam
enter
movb
jmp
int
push
outsl
adc
lds
mov
dec
cmp
mov
jg
add
pushf
xor
mov
mov
out
or
mov
adc
sub
popf
mov
xor
test
sub
or
jno
imul
scas
ret
dec
push
mov
jge
fs
jmp
int3
jnp
mov
cmovbe
xchg
xchg
xchg
aad
leave
xlat
pop
jo
lds
mov
dec
jno
cmp
dec
lds
xor
xlat
in
je
gs
mov
mov
jbe
push
mov
mov
cmpsb
pop
jg
ret
push
icebp
inc
adc
sub
mov
mov
sub
cli
adc
loope
sbb
icebp
adc
push
push
and
inc
and
rorl
sbb
sub
sarl
inc
jmp
push
cld
sbb
add
or
movsb
into
jecxz
push
loope
gs
outsl
dec
jae
add
fisubl
in
hlt
xor
push
mov
shlb
cmpsl
test
jb
bound
movsb
and
mov
and
and
xor
sarb
mov
stos
jb
add
test
xchg
in
inc
jae
ds
lret
cmpsb
push
push
insb
lods
movsl
add
push
hlt
movsb
in
test
popa
sbb
jmp
rcrl
nop
xchg
repnz
out
cld
sbb
dec
enter
pop
movsl
nop
sbb
enter
movsb
cltd
outsb
arpl
inc
cmp
cmp
hlt
sub
stos
imul
mov
fmuls
or
jge
aaa
enter
jge
mov
xchg
mov
ret
jge
mov
cld
loope
sahf
mov
pop
push
or
ret
pop
or
test
sub
push
es
push
xchg
sub
sbb
dec
push
cli
into
adc
jmp
out
mov
inc
fcmovu
add
push
in
sbb
std
sahf
mov
lds
enter
div
outsl
xchg
inc
push
shr
sbb
pop
out
lcall
mov
sub
fdecstp
inc
mov
cmp
and
xor
emms
lods
push
push
mov
jae
movsb
and
in
xchg
lahf
into
sub
roll
das
gs
lods
and
fnsave
cmc
mov
enter
fs
inc
adc
push
cmp
test
sti
add
dec
sbb
int3
adc
jne
push
ds
mov
adc
test
mov
xor
jns
xor
xchg
pop
cmc
int
loop
fwait
roll
rorl
mov
pop
jnp
imul
popa
jae
popf
in
xor
ljmp
jbe
fisttpl
pusha
push
clc
aad
push
mov
xor
adc
fsubrp
daa
or
jmp
test
pop
sub
push
push
mov
push
fcmovne
cmp
outsl
xchg
sbb
add
popa
add
leave
sub
dec
jo
or
adc
mov
push
cwtl
and
stc
pop
sbb
cmpsb
lcall
sub
cmp
push
outsb
or
mov
pop
les
jae
and
cltd
mov
sub
add
stos
fnsave
mov
rcll
jno
inc
sub
call
out
fisttpll
int3
push
mov
push
dec
fmuls
movsl
add
xor
pop
call
add
dec
xchg
out
subb
jo
sub
inc
push
mov
pop
sbb
sti
imul
ficoml
fcoms
mov
pusha
push
sbb
test
outsl
and
std
enter
and
arpl
enter
sbb
inc
ja
fsubs
or
push
and
inc
loope
scas
fisttps
mov
into
test
pop
hlt
das
dec
mov
or
in
int
and
or
lods
mov
xchg
shll
xchg
xlat
test
repz
cltd
lret
add
outsb
jl
enter
pop
ficoml
movsl
mov
je
adc
sahf
push
mov
fistpl
sbb
js
mov
pop
repz
mov
ror
jnp
stc
rorl
xor
mov
pop
jle
movsl
pop
dec
cmc
inc
les
sahf
insb
pop
sub
dec
inc
push
lods
mov
sbb
jb
mov
cs
out
or
cwtl
pushf
scas
add
dec
lock
pop
dec
adc
stos
mov
xlat
adc
or
cmp
in
sub
adc
aam
jbe
movsl
daa
popa
movl
mov
adc
lret
mov
popl
dec
fsubr
je
jp
mov
sarb
push
sbb
jmp
mov
jmp
sub
adc
mov
enter
inc
ss
mov
jnp
pop
push
dec
shll
adcb
sbb
cwtl
pop
notl
jle
push
jo
fnsave
hlt
fisttpl
icebp
jmp
mov
cmp
fstl
dec
mov
dec
adc
cmpsl
fidivrl
repz
adc
sub
std
sbb
mov
arpl
imul
rcrb
gs
dec
aaa
pop
call
not
adc
xchg
insb
adc
bsr
gs
or
jg
sub
push
pop
andb
inc
rolb
pushf
inc
push
pop
aam
lods
fadd
aas
enter
lret
aad
out
inc
and
sbbl
xchg
inc
jae
xor
popf
and
mov
mov
or
cmp
sub
push
mov
int
mov
cmpb
je
rcrl
mov
pop
inc
or
inc
add
pop
das
scas
jp
mov
ret
insl
nop
out
mov
popa
jbe
iret
and
jecxz
dec
add
aad
inc
adc
dec
js
cmpsl
sbb
cwtl
jnp
fisttps
jl
mov
jp
xor
cmpsb
bound
fdivrl
sbb
mov
pop
outsl
rcl
inc
stos
add
fs
aad
push
jbe
mov
adc
mov
jl
stc
jle
xor
xchg
jae
add
scas
adc
insl
insb
daa
push
mov
adc
and
cmp
xor
sub
divps
pop
push
mov
scas
test
iret
dec
sbb
push
repz
or
aad
cmp
jae
xor
outsl
sub
xchg
in
daa
lea
dec
movsb
mov
insl
dec
out
adc
imul
cltd
xchg
jg
and
shl
pop
xlat
dec
popa
or
test
jo
test
pop
mov
mov
jmp
jae
fldcw
sbb
mov
inc
outsl
dec
icebp
mov
addr16
sub
and
cmp
int3
cltd
xor
pushl
pop
jp
fistps
sbb
jnp
jne
mov
xchg
mov
bnd
jbe
sbb
mov
mov
dec
jnp
xchg
lea
adc
jnp
nop
leave
cli
lret
sub
cltd
mov
jae
and
mov
jge
repnz
cli
lods
andb
out
in
mov
stc
adc
fs
ss
int
aas
mov
aaa
shrl
pop
in
push
nop
xor
cmp
int
nop
scas
mov
and
jbe
lcall
mov
xchg
mov
fcoms
xor
int
sahf
cwtl
mov
leave
jmp
push
test
or
mov
icebp
xchg
jg
daa
mov
inc
cmp
aaa
jg
mov
pushf
insl
inc
push
push
and
pop
jle
xor
jl
addb
pop
jl,pn
cmp
mov
dec
call
adc
lock
addr16
jl
testb
mov
adc
push
shlb
hlt
mov
in
mov
aas
fidivs
xchg
inc
sbb
test
imul
xchg
enter
fldt
out
pop
addr16
loope
lea
jno
push
jge
mov
mov
adc
jl
in
gs
pusha
repz
mov
es
fcoms
xor
adc
cwtl
sbb
test
jb
inc
add
loope
cmpsb
push
jg
adc
fsubl
out
daa
mov
inc
cmp
push
int3
aas
sub
cmp
insb
out
cs
repnz
int3
jg
cmp
jle
in
scas
push
sub
in
hlt
add
cmpb
in
in
scas
push
jnp
mov
push
cs
jecxz
jae
or
mov
inc
mov
cmc
mov
fmul
add
std
leave
cmpb
pusha
dec
dec
scas
jns
or
popf
loop
mov
mov
fdivp
scas
leave
push
test
mov
dec
popf
cltd
pop
jg
pop
cmp
jns
add
imul
ss
cmp
push
imul
stos
mov
adc
dec
pop
sub
aaa
adc
jg,pn
ja
push
fwait
insl
data16
adc
jno
adc
pusha
cld
inc
scas
cmpsl
sub
movsl
lahf
sbb
xor
jno
out
out
test
cmp
inc
icebp
fstpl
mov
push
cltd
aam
adc
ds
xor
test
xchg
es
mov
sub
lcall
xor
test
sbb
loope
adc
stc
push
arpl
mov
sbb
mov
sti
ret
and
dec
xor
push
xor
lahf
inc
imul
mov
pop
mov
int
xor
shlb
iret
test
or
imul
lret
orl
xchg
mov
pop
jne
hlt
or
jle
or
xor
ljmp
pop
lds
jno
insb
push
jp
sbb
xor
push
popf
cmp
stc
pop
out
pop
ret
dec
jmp
xchg
jecxz
dec
push
in
jmp
js
std
lret
lea
cmc
js
outsl
adc
fstpl
rcrb
mov
add
repz
add
fldcw
test
lret
push
add
clc
loop
xor
pop
push
pop
jo
dec
imul
mov
subb
or
pop
aaa
mov
and
push
sub
sbb
add
rsm
mov
xchg
into
popa
xor
je
cmpsl
cmpsl
fs
add
out
sti
shrl
hlt
xor
xchg
mov
aas
cmpsb
add
clc
aam
mov
or
adc
adc
xchg
xchg
mov
sbb
fs
mov
pop
xchg
and
adc
in
rorl
ds
fimull
fcompl
xchg
daa
gs
sub
dec
adc
test
bound
pusha
lret
out
cwtl
jbe
lods
out
and
jo
sub
movd
ja
mov
in
sbb
jbe
mov
dec
mov
pop
xchg
xor
add
adc
mov
add
mov
jp
jnp
xchg
call
mov
and
pop
xorl
outsl
rcl
mov
das
aas
push
data16
repnz
push
aas
jno
and
mov
cltd
ror
fistl
mov
sub
mov
mull
cmp
mov
popf
lret
dec
mov
sbb
cmp
test
inc
sub
das
cmp
stc
or
loop
pop
push
add
in
inc
xlat
in
jae
mov
xchg
nop
xor
imul
mov
add
jne
push
xor
ds
xadd
dec
mov
test
push
push
pinsrw
std
fimull
shrl
neg
jnp
dec
pop
popa
dec
outsl
sbb
loopne
dec
daa
xchg
hlt
fwait
mov
sbbb
lods
addr16
xor
repz
imul
mov
ret
jbe
js
aaa
jg
imul
mov
xchg
outsl
mov
mov
push
push
ret
xor
es
fmul
lds
scas
jmp
fwait
xchg
and
fnsave
cmp
shl
mov
cmp
dec
sti
pop
loope
shl
inc
mov
inc
imul
mov
jge
mov
xor
and
jg
jmp
pushf
jle
jmp
test
into
cmp
push
inc
xor
ljmp
or
mov
push
dec
shll
xchg
sub
mov
loopne
sti
mov
xchg
dec
fidivl
add
stos
filds
ret
add
jge
bound
adc
cmp
mov
mov
xor
pop
or
adc
and
out
mov
ja
lahf
pop
adc
in
sti
aad
shrb
in
rorb
daa
mov
call
fdivrs
inc
aas
sub
ffreep
js
in
xorb
aam
jb
inc
jnp
clc
shll
sahf
daa
hlt
stc
in
inc
add
js
nop
or
into
and
in
jns
stc
fnstcw
and
jecxz
mov
mov
or
sub
test
push
imul
in
jne
stos
add
out
inc
dec
pop
cmp
mov
aaa
mov
stos
ret
int
push
mov
cvtps2pi
xchg
rcrb
cmpb
popa
fistl
mov
sub
repz
mov
inc
xchg
inc
cmp
xchg
fstl
sbb
ret
add
aaa
cli
je
notb
sahf
mov
inc
mov
xchg
jno
cmp
xor
pop
adc
enter
add
cwtl
shrb
ljmp
repnz
dec
xor
push
clc
test
lods
int3
insb
lods
xchg
mov
rclb
aaa
mov
jl
dec
aad
loopne
test
pop
mov
xchg
push
xchg
jmp
clc
push
cmp
popl
xorl
push
jno
fucomip
fs
cli
jnp
shlb
mov
cs
pop
or
add
dec
jo
mov
sbb
sbb
xchg
cmc
cmp
or
mov
dec
jns
mov
test
mov
sahf
xchg
cld
sub
aaa
mov
jge
sbb
mov
adc
inc
pop
jbe
lcall
add
dec
and
jae
jge
sub
cmp
fs
adc
popa
jno
stos
pushaw
lods
mov
and
jecxz
push
rcl
movsb
sub
nop
js
sub
mov
aaa
shrb
out
jno
jo
clc
lret
outsl
cmp
aam
mov
pop
push
push
aas
push
xor
xchg
fidivs
lahf
sub
pop
inc
pop
das
mov
sbb
cmp
inc
pop
imul
imul
jae
in
xor
xor
aaa
or
rcrl
loope
cmp
outsb
lcall
push
xchg
pop
movsb
inc
add
rcl
call
cmp
std
or
mov
inc
sbb
xchg
in
je
sbb
out
cmpsl
out
cmpsb
inc
lcall
or
pushf
xor
lods
orb
mov
ds
ret
push
jo
jns
xchg
mov
sub
adc
sbb
loop
jecxz
int
mov
sub
xor
sbb
push
push
xlat
into
jnp
mov
lahf
std
ds
mov
call
dec
decl
xor
inc
mov
int
js
xchg
dec
cmp
sub
les
mov
pop
adc
in
cmp
jp
push
movsb
iret
test
sub
nop
mov
and
jbe
pop
xorl
call
fsubr
pop
xchg
mov
test
xchg
cmpsb
adc
int
inc
aam
cmc
jp
inc
xor
sub
loop
daa
cli
mov
push
in
cs
scas
inc
out
add
or
mov
push
dec
outsb
scas
push
mov
push
mov
les
jnp
popf
mov
imul
or
scas
sub
lods
popa
repz
loopne
push
ret
pop
icebp
xor
cli
popf
jne
push
std
push
lahf
jg
mov
sbbb
test
mov
sbb
cmp
ret
mov
popf
out
leave
xchg
imul
aas
mov
mov
lret
mov
inc
cmp
and
inc
xor
mov
es
sahf
xchg
rol
jl
or
hlt
outsl
xor
mov
bound
inc
push
jge
mov
xor
js
jge
or
fcomip
addr16
add
jp
pusha
xor
push
std
pop
stc
mov
xor
addb
inc
pop
or
ss
call
outsb
mov
das
cmp
repz
std
sahf
xchg
xchg
or
mov
adc
adc
pop
fists
popa
mov
nop
hlt
adc
fwait
mov
pop
gs
mov
fcoml
lcall
fcoml
cmp
jns
ss
push
sub
xor
stos
js
mov
xchg
add
and
out
shrl
ret
ljmp
or
inc
mov
and
add
jns
ret
pushf
test
mov
test
fnsave
fwait
push
iret
jge
jbe
out
sub
push
xor
xchg
pop
sub
push
mov
mov
push
mov
xlat
jmp
dec
mov
xor
push
add
cli
push
cmp
sahf
arpl
movsl
int3
mov
insl
cmp
mov
mov
push
roll
push
lret
bnd
in
dec
sub
and
iret
mov
das
sub
mov
dec
data16
les
xchg
dec
dec
call
xchg
into
mov
sbb
out
std
cs
push
push
imul
pop
jmp
negl
test
into
decb
pop
out
pop
fimull
jne
pusha
lock
sub
ficompl
cld
call
dec
dec
ja
push
xchg
add
inc
cmp
pop
push
xchg
cmp
mov
push
inc
xor
jmp
xlat
stos
fucomi
inc
call
add
sarl
pushf
clc
shrl
int
jl
dec
int
ja
je
cmpb
lods
inc
ret
scas
repz
adc
lds
pop
lods
cs
or
pop
sub
push
cmpsl
adc
sub
add
dec
jp
mov
xor
sub
into
bound
insb
inc
arpl
jg
jg
mov
and
jnp
or
leave
jns
push
adc
jmp
outsb
rorl
jnp
xchg
cwtl
andb
in
stos
cs
lock
mov
lds
out
gs
mov
pop
fcmovnbe
sbb
or
pop
mov
je
leave
outsl
mov
fcmove
in
sbb
pushf
mov
ret
fiadds
test
jg
mov
mov
movsb
shr
test
bnd
pop
jle
insl
sub
xchg
lcall
mov
push
test
je
cmp
fs
sahf
aaa
pusha
sbb
loope
lods
imul
fwait
adc
push
mov
mov
sarl
lret
jecxz
cwtl
idiv
push
xchg
pop
and
mov
gs
mov
shll
lcall
lods
mov
xor
clc
arpl
add
ret
imul
mov
xor
daa
stc
movl
data16
scas
nop
scas
lds
or
test
inc
insl
inc
add
enter
ficoms
sbb
sub
push
in
jbe
mov
fnstsw
adcb
call
fnstenv
inc
jnp
insl
mov
sarl
xorb
xor
xchg
inc
enter
popa
outsl
xchg
mov
loope
push
push
xchg
and
jo
fadd
js
pop
add
leave
and
fs
mov
data16
dec
aaa
add
mov
nop
add
pushf
pop
mov
rorl
lahf
lret
sbb
xor
sbb
mov
xor
pusha
shrb
or
dec
aas
ljmp
das
pop
repz
aas
ret
sbb
jl
or
sahf
int3
arpl
jbe
mov
adc
iret
shlb
jb
push
mov
fs
dec
in
adc
pusha
pop
pop
xchg
jmp
mov
loopne
and
dec
int3
ljmp
mov
lahf
or
jecxz
or
outsl
mov
test
lods
int3
mov
pop
cwtl
xchg
xor
mov
mov
andb
jmp
std
adc
jecxz
dec
loope
cmp
mov
dec
clc
and
dec
jge
fnstenv
movsl
sub
mov
sbb
jae
pushf
push
cmp
and
push
mov
insl
cmp
lret
pop
sbb
cs
out
inc
pop
lcall
loope
scas
add
inc
cmp
outsl
stos
stc
mov
xchg
fstpl
dec
cmp
sub
out
mov
cmp
mov
aam
ss
cmp
fists
sti
test
pop
imul
jp
mov
cmpsb
mov
scas
xchg
leave
lds
add
enter
mov
dec
imul
aad
andb
fimull
lock
xchg
sbb
leave
pop
jno
aaa
in
inc
out
call
cwtl
adcl
pop
pop
mov
sbb
mov
out
xor
mov
and
inc
cmp
or
mov
in
sbb
jmp
enter
pop
movsb
outsl
aam
sarl
lods
rclb
xor
icebp
bound
mov
inc
push
rorl
or
add
or
cmpsl
inc
fwait
pop
inc
mov
mov
divb
sti
sbb
adc
sbb
add
or
mov
inc
movsl
cmp
and
out
test
repnz
and
add
inc
lea
mov
insl
in
xchg
and
cmp
fidivrl
cmp
mov
stos
cmpsl
or
adc
adc
je
repz
stos
mov
push
cltd
outsl
xchg
push
xchg
push
dec
lods
mov
enter
sbbb
mov
fwait
jp
dec
mov
stos
cli
shl
or
movsb
xchg
sbb
jae
arpl
inc
inc
xchg
inc
lds
repz
movsb
mov
adc
mov
adc
fiadds
sti
pop
inc
sti
push
push
xor
adc
fcmovnu
push
popf
das
sti
stc
cltd
pop
daa
nop
mov
and
in
mov
sahf
popf
in
cmpsl
jns
and
xor
movb
loop
data16
dec
jns
shl
stos
or
and
mov
shrb
or
mov
add
cmp
add
ss
jg
mov
dec
lock
bound
sub
mov
cmp
andb
cmp
sub
outsb
and
das
add
lahf
cmp
pop
push
mov
cwtl
scas
test
xchg
aam
or
xor
movb
pop
inc
je
pop
sbb
xorb
or
mov
sar
ror
inc
jnp
mov
xchg
ljmp
sbb
mov
das
or
leave
je
add
jecxz
sbb
mull
rcll
daa
repnz
mov
js
rorl
popf
daa
jle
xchg
outsb
pop
negb
fdivl
outsl
dec
addr16
leave
in
in
cmp
add
jne
inc
inc
inc
pop
sbb
rcll
xorl
int3
pushf
jae
mov
lahf
sti
add
cwtl
dec
pop
jno
inc
and
movb
pop
mov
addr16
lahf
add
stos
lods
pop
ds
xchg
cmp
cwtl
rorl
dec
mov
mov
jb
jg
xchg
lds
sbb
xchg
test
mov
mov
lcall
mov
sbb
mov
push
bound
clc
scas
gs
mov
lret
sarb
stos
push
jle
imul
xor
fisubl
add
call
inc
sub
xchg
pop
and
add
into
dec
inc
out
fcoms
or
jo
ret
dec
fadds
ss
icebp
cmp
push
push
test
les
enter
jbe
fwait
cmpsb
or
mov
pop
xchg
xchg
adc
adc
int3
xchg
outsl
lock
cmp
cs
in
jecxz
fstpt
push
imul
mov
push
movsb
and
xor
mov
sub
outsl
xor
mov
fadds
adc
mov
add
movsb
in
test
sub
imul
fwait
cmp
cmc
out
aas
jl
loope
aam
cwtl
cmp
or
js
xchg
cmp
push
bound
fwait
ret
push
xlat
inc
mov
and
mov
ja
mov
dec
xor
fnstcw
add
stos
xchg
adc
inc
popa
xor
daa
push
test
sub
adc
insb
bound
stc
negl
addb
and
outsb
push
inc
cmpsb
push
add
movsl
aad
leave
shll
and
mov
mov
lahf
dec
xor
mov
subb
fstp
sbb
cmp
fcmovnbe
jb
ds
mulb
pusha
enter
xchg
fmull
add
adc
cmp
push
mov
outsl
pop
mov
and
sti
cs
test
dec
bound
push
aad
pop
cmp
inc
mov
popf
in
ret
insb
adcl
cmpl
jge
sarb
addl
aam
lahf
or
cs
inc
or
test
sbb
and
mov
scas
fldl
and
cmpsl
popf
cmc
add
faddl
add
sub
cwtl
xor
int3
xlat
sub
scas
outsb
lahf
sub
add
cmp
iret
mov
jne
pop
pop
add
or
ret
sub
mov
into
mov
jg
or
mov
lret
imul
insl
mov
sbb
clc
sub
xor
adc
fcompl
sbb
jmp
cmc
adc
icebp
inc
dec
and
lods
fs
call
popa
sub
dec
ret
into
xor
rcr
outsb
pop
insb
xor
xor
mov
rol
shlb
shlb
sbb
in
into
and
jge
mov
lock
loop
sub
inc
jg
pop
push
es
pop
jge
ljmp
dec
xlat
or
sti
inc
pop
les
inc
xchg
push
or
mov
mov
addr16
jmp
pop
cmpsl
xlat
mov
sub
clc
xchg
lds
jno
inc
pop
enter
jmp
iret
test
push
test
aas
aas
movsl
aad
cmc
aaa
popa
ss
loop
js
push
pusha
stos
push
in
lret
jns
inc
lahf
lret
insb
and
push
mov
cmp
jb
jae
mov
sbb
lds
jae
push
ret
jns
clc
push
xlat
cld
sarb
push
call
sbb
xor
inc
xlat
sarl
push
ja
out
cld
or
in
inc
les
lods
mov
adcl
fimuls
shll
test
out
or
xchg
addb
roll
loope
xchg
jecxz
jns
subb
add
xchg
jno
push
mov
pop
imul
add
movsl
mov
jo
sub
or
xchg
mov
add
push
fsts
popf
dec
mov
sti
pop
in
ss
repnz
pop
dec
outsb
fcomps
je
mov
icebp
push
push
cli
loop
shrb
ds
iret
aad
jae
out
xchg
stc
pop
adc
xchg
xchg
cmpsl
inc
dec
sub
aad
push
sar
sahf
repz
call
arpl
mov
dec
push
fld
jmp
sbb
faddl
sahf
fbstp
dec
test
movsb
mov
es
aaa
ljmp
pop
mov
fdivs
nop
sub
nop
push
cmc
xor
test
shll
cli
push
or
add
jl
stos
rcrb
iret
nop
xor
clc
arpl
mov
push
adc
push
sbb
mov
test
mov
adc
mov
cltd
jmp
sbb
dec
les
mov
sbb
inc
int3
outsb
ficompl
inc
fcom
xchg
movsb
les
jmp
sbb
mov
add
ficoms
cli
and
jmp
inc
mov
aaa
int3
ret
repz
je
sbb
popa
fdiv
cmp
cwtl
lea
fiadds
jmp
cmp
cld
lea
ja
ret
decb
mov
cvtpi2ps
addr16
and
adc
rcll
int3
push
or
mov
imul
xchg
dec
stc
adc
push
les
ds
frstor
je
adc
jnp
test
pop
xchg
sub
jno
jge
push
popa
arpl
hlt
or
gs
xchg
fsubrs
jmp
mov
xor
mov
test
dec
push
push
lret
push
adc
lods
lret
or
adc
mov
mov
int
jl
pop
iret
or
repz
jno
sbb
movsl
ja
test
dec
ja
mov
push
xchg
stc
outsb
add
pop
mov
sub
mov
fiadds
jae
les
cmp
outsl
int
xchg
adc
inc
outsl
addr16
lahf
adc
stos
mov
push
sbb
jbe
push
lahf
or
std
inc
loopne
jl
js
int
fwait
push
icebp
stos
fcompl
dec
mov
lcall
sbb
pop
enter
add
mov
mov
pop
cli
outsl
dec
out
ficomps
mov
or
xor
in
push
mov
ljmp
jmp
jno
sbb
xor
mov
lahf
mov
jl
in
and
pop
add
shl
lahf
lret
xchg
adc
mov
in
ret
mov
pushf
rolb
xlat
movups
je
mov
mov
lds
loop
pop
icebp
push
aaa
jne
pop
out
pop
lods
int3
jmp
ficoml
sbb
popa
daa
stc
xchg
sub
xchg
pop
xorb
jnp
pusha
popa
mov
sahf
mov
shll
adc
and
ja
mov
icebp
sub
adc
outsl
cmp
mov
dec
outsl
seta
es
dec
sahf
inc
pop
mov
xor
sbb
pop
pusha
rcrb
aam
addr16
call
inc
scas
cmp
aas
push
cmp
nop
pop
aas
aaa
sub
jecxz
adc
lds
fmull
mov
pushf
ret
iret
inc
cmc
bound
inc
xchg
lea
ret
aam
push
test
addr16
clc
mov
test
test
mov
je
pop
cwtl
shll
es
and
scas
aam
mov
jge
in
xchg
xchg
test
adc
mov
enter
inc
jp
aaa
cmp
push
cwtl
dec
adc
lea
cld
push
mov
push
cmp
adcb
insb
xchg
loope
mov
jns
popf
insl
cmpsb
cs
movsl
popf
test
repz
or
ret
push
pusha
aad
cmp
jmp
jp
andl
jge
jle
pusha
mov
ret
dec
orl
add
mov
mov
pop
cmp
outsb
test
std
lcall
nop
dec
and
in
inc
cmc
leave
pop
in
pop
or
or
inc
jo
cmp
mov
mov
scas
into
jne
loopne
inc
aaa
insb
mov
fldcw
insb
in
cld
push
pop
mov
fimuls
out
sub
pop
lods
cmp
inc
rcr
lods
fwait
dec
push
sti
pop
dec
jmp
jno
mov
sub
ret
cmpsl
and
cld
and
push
call
into
nop
push
xchg
sbb
sub
pop
mov
loope
sbb
sbb
insl
cmp
add
popa
les
lahf
dec
stos
cmp
xchg
jo
pop
adc
js
mov
push
cmp
mov
dec
in
imul
dec
mov
inc
mov
ds
rcl
test
movsb
out
fwait
rorb
mov
call
xorb
inc
push
pop
rclb
pop
jl
add
fs
fildll
pushf
or
dec
subl
fxch
or
mov
mov
or
stos
insl
shl
dec
mov
inc
push
inc
pop
scas
scas
and
test
add
in
inc
mov
daa
test
stos
mov
pop
cmp
gs
sub
repz
or
popa
addb
mov
cli
mov
xchg
mov
sub
dec
das
outsl
sbb
sbb
and
pusha
out
mov
imul
mov
ja
add
sub
xor
into
nop
xor
cld
or
insl
mov
js
insb
cmpsl
test
rcrl
mov
jno
test
inc
leave
lret
adcl
jmp
jecxz
mov
xor
das
mov
ja
arpl
fcompl
mov
mov
std
add
jp
loopne
pop
into
ficoml
mov
mov
mov
and
add
mov
add
pop
sbb
loopne
mov
rorl
decl
shlb
pop
js
aas
inc
roll
pusha
cli
jle
add
pop
or
fs
icebp
lea
test
cs
cs
rcrb
or
mov
mov
call
loope
add
cmpsb
adc
pop
push
cmp
in
sub
jmp
dec
sbb
or
popf
xlat
sub
sbbb
mov
jge
cmc
aad
pop
xor
sbb
inc
pop
push
push
insb
mov
shl
mov
mov
inc
test
lods
jbe
sarb
stos
mov
in
xor
cmp
inc
sahf
dec
sbb
lcall
inc
call
shr
or
mov
imul
pop
mov
nop
bound
int
setae
sbb
std
icebp
aad
cmpb
pop
das
jmp
add
stos
scas
lcall
sbb
fstpt
xchg
popf
mov
jo
mov
cmp
aam
fwait
jns
adc
mov
repnz
add
idiv
inc
jae
hlt
inc
pop
arpl
movsl
pop
out
lret
inc
test
movsl
das
xchg
stc
jb
sub
or
imul
int3
out
pop
cmp
cmp
or
mov
test
jno
outsb
mov
pop
lret
mov
dec
fidivrs
clc
mov
mov
dec
ss
jo
fadd
ret
pushl
mov
stos
inc
ret
adc
daa
inc
shlb
xor
scas
movsl
enter
and
xor
daa
pop
jo
out
fwait
scas
inc
xor
xlat
pushf
fnstsw
xor
lods
rorb
or
out
sub
cmp
rep
push
fsubrl
push
xor
sub
lods
rolb
lock
mov
mov
cmc
or
jns
add
roll
dec
mov
fdivl
pop
lahf
push
mov
pop
popf
rcr
inc
jnp
inc
adc
loopne
push
push
pop
loopne
inc
out
add
insl
xor
iret
inc
into
lock
inc
ret
jbe
ja
aad
fcompl
dec
push
ror
jg
rcll
push
pop
inc
ljmp
or
and
idivb
sbb
and
mov
mov
mov
lock
imul
add
repz
std
inc
push
mov
push
add
mov
repz
test
and
outsl
and
xor
stos
mov
mov
pop
cmp
inc
loope
adc
pop
jns
enter
cmpsb
pop
mov
adc
add
mov
adc
add
mov
or
push
mov
xchg
in
rorl
add
push
dec
nop
mov
cltd
xor
xchg
lea
stc
lds
in
xor
movsb
in
dec
push
ss
sub
aaa
cmpsb
xchg
add
xchg
lret
xorb
or
dec
mov
addr16
cmpsl
sbb
daa
push
repnz
mov
mov
pop
jnp
xchg
rorl
mov
nop
push
and
pop
imul
pop
sub
imul
xor
sbb
lods
jg
fisttps
dec
fnstsw
mov
mov
jp
xor
and
jg
push
mov
inc
push
cli
xor
xor
cmp
xchg
es
cmp
push
lcall
ss
inc
test
xchg
mov
xchg
ret
stos
inc
jl
xchg
out
and
movsl
addr16
mov
loope
pop
xchg
test
ret
and
fwait
mov
pop
cmp
jno
mov
mov
imulb
xor
inc
ds
mov
in
mull
add
jns
testb
les
xchg
ds
sbbl
inc
xchg
sub
mov
pop
dec
sub
fildll
push
sbb
pop
scas
cmpb
xor
adc
push
cwtl
cli
out
je
repz
jp
test
enter
iret
mov
and
sub
mov
call
aad
push
nop
sarl
cmpsl
inc
scas
xor
ret
test
xchg
add
or
sbb
into
mov
ret
stc
aam
test
mov
or
ret
bound
pop
pop
out
mov
dec
call
and
lret
ds
or
int
pop
add
push
and
pop
leave
leave
js
fistpl
mov
jmp
adc
aaa
inc
shl
or
sbb
data16
inc
mov
inc
scas
mov
ud1
dec
jle
ds
and
aaa
jmp
icebp
dec
cli
xchg
in
sub
loopne
mov
and
fisubrl
adc
or
loop
sbb
adc
rcrl
rcrl
or
jecxz
clc
inc
mov
cmp
mov
stc
dec
loope
jecxz
or
xor
fnstenv
lock
cmp
xor
scas
mov
xchg
mov
mov
in
enter
stos
inc
stc
cld
push
mov
dec
addr16
sub
add
mov
jmp
int
mov
movsl
inc
push
sti
lcall
mov
cmc
es
lea
lcall
jle
mov
rolb
xchg
add
dec
and
lds
pop
cmp
mov
insb
mov
jmp
lock
xchg
jp
or
pop
icebp
repz
imul
std
fisubs
pop
jb
div
mov
cmp
push
inc
test
jb
xor
repz
in
dec
int3
push
call
jmp
mov
incb
pop
lds
or
push
or
cmp
sub
sbb
or
or
sub
adc
cli
pop
jmp
pop
mov
pop
ja
ficoml
or
lods
movsl
and
xchg
xchg
fldenv
mov
movsl
xchg
dec
gs
mov
out
sbb
aam
rclb
push
inc
or
lock
je
sub
adc
ss
push
andl
fs
stos
and
cwtl
and
adc
xor
das
push
into
jl
inc
lds
out
cli
lcall
dec
mov
repz
push
ss
mov
jg
ljmp
mov
sub
jecxz
insl
add
mov
sub
inc
jbe
mov
decb
daa
inc
repnz
push
mov
in
mov
pusha
imul
dec
imul
pop
push
push
out
xlat
fistl
stos
xchg
mov
xchg
lods
inc
pop
mov
pop
iret
jmp
or
cmp
dec
into
ret
sbb
subl
lods
and
cli
out
sub
in
addr16
jp
jae
lahf
and
outsb
mov
aas
call
fwait
jmp
cwtl
mov
sbb
inc
add
ja
cli
pop
push
loope
jno
test
push
and
jecxz
sti
push
sarl
aam
push
ds
cmp
jno
rcrb
and
negb
lcall
lahf
mov
lahf
out
ds
test
dec
into
mov
mov
popf
cld
and
sti
and
mov
loopne
dec
fisttps
bound
jp
fmull
cltd
mov
cld
insl
out
adc
insl
sub
mov
in
sbb
xchg
cmpsl
xchg
adc
mov
add
in
outsl
and
pop
ss
mov
ret
pushl
lcall
cmp
movsl
xor
insb
mov
lret
and
and
lcall
aam
jo
sub
fldl
cwtl
lahf
add
scas
int
mulb
arpl
xchg
jns
inc
in
mov
orl
inc
jno
cmp
sub
shrb
cmp
ficomps
add
jp
inc
mov
sub
add
movsb
pop
mov
sti
xor
jle
into
or
adc
insb
sub
in
and
push
incl
dec
call
jle
jmp
cld
jp
cmp
jecxz
sbb
sub
and
popa
pop
icebp
unpckhps
imul
js
aaa
ljmp
lea
and
rcll
decb
fincstp
jns
lods
dec
mov
jmp
rol
inc
ja
xor
movsl
dec
mov
mov
adc
sub
imull
pop
seto
in
sarb
movsl
shll
test
cwtl
sti
pop
mov
xchg
inc
xchg
inc
inc
rolb
push
inc
mov
xor
mov
mov
xor
and
mov
sbb
jmp
sbb
mov
clc
push
lods
sbb
mov
call
sub
jne
mov
sbb
cwtl
dec
xor
lods
testl
fadd
mov
shl
dec
add
fbld
into
inc
loopne
shl
jl
mov
jb
stc
mov
pop
imul
into
fldcw
xchg
mov
pop
aam
sbb
lret
jns
cld
add
outsl
arpl
sub
and
jno
inc
sub
mov
add
test
jnp
xlat
rol
add
lret
dec
imul
add
cmp
sbb
les
scas
repnz
push
sub
addr16
clc
push
mov
imul
bound
jp
lcall
jo
adc
and
hlt
dec
lods
dec
pushf
add
push
pop
ret
icebp
sbb
jne
xchg
loopne
loop
adc
jg
inc
lods
jecxz
jle
insb
mov
icebp
sub
lcall
add
xor
jo
cli
mov
mov
test
mov
push
cmp
xor
jbe
sub
dec
mov
sbb
popa
fmul
popf
les
fimull
cmp
out
enter
out
inc
outsb
sahf
mov
out
movsb
xor
xor
ret
push
add
andb
imul
and
cmp
lcall
push
pop
sub
fistl
inc
push
rclb
rcrl
cwtl
ss
lods
or
pop
mov
jg
push
mov
das
addb
scas
jo
sti
adc
sub
lret
mov
xchg
mov
mov
adc
mov
pop
iret
cmc
ds
jnp
inc
inc
das
test
xlat
pop
cli
outsb
pop
xchg
jo
lock
fcompl
jo
scas
mov
mov
cld
sub
aad
loop
dec
pop
pop
push
cmpsb
or
not
sahf
jle
adcb
inc
xor
leave
and
push
ja
mov
outsb
in
inc
jno
xchg
xor
mov
jb
pop
mov
cld
dec
popl
xor
data16
jle
inc
popf
push
scas
cli
aam
mov
cwtl
jmp
cmc
stc
dec
into
out
movsl
jmp
push
cmc
inc
add
inc
sub
shlb
push
pop
inc
push
cmc
add
ret
xchg
jg
test
sub
lret
xor
mov
insl
popf
dec
sub
sub
stc
icebp
loope
sbb
fsin
ljmp
dec
pop
mov
mov
and
jle
jecxz
les
repz
cmpsb
pop
mov
jno
rcll
ss
jae
pop
xor
sbb
jo
mov
call
mov
pop
jl
aam
jle
leave
jae
ja
cmpb
loopne
loopne
shll
ja
xlat
mov
ja
loop
bound
mov
adc
mov
adc
jno
mov
mov
data16
sbb
in
pushf
daa
cmp
idivl
mov
dec
dec
dec
adc
cs
inc
repz
jae
xchg
lahf
mov
add
daa
inc
mov
fdivrl
mov
add
ret
pop
add
sti
jle
call
cmp
sbb
adc
xlat
into
adc
fcoml
xor
loop
cmp
aad
or
jne
inc
xchg
push
nop
inc
fisttps
cmp
mov
aad
fsub
into
test
adc
out
sbb
int3
test
push
shrl
stos
pop
dec
roll
out
xor
icebp
add
pop
je
pop
outsl
cmpsl
lods
jns
or
push
bound
cmp
nop
fstpl
mov
imul
dec
add
std
mov
lret
jbe
inc
movsb
xor
imull
lcall
arpl
in
dec
mov
adc
in
rorl
je
inc
dec
arpl
fs
mov
or
mov
shll
out
mov
push
popf
jmp
inc
inc
std
stos
pop
sbb
out
inc
dec
dec
pop
popa
scas
dec
dec
jnp
fisttpl
call
adc
imul
push
in
dec
insl
mov
pop
sbb
jae
jle
popf
pop
outsb
jle
rorb
pop
aaa
imul
ret
fisttpl
sbb
js
jne
dec
xor
shll
int
ja
xchg
jecxz
lods
pop
mov
outsl
je
sahf
mov
mov
gs
adc
out
push
dec
sub
xor
cld
jns
out
and
aad
xor
sbb
push
cs
or
xchg
cli
jp
int3
push
neg
repz
dec
scas
mov
mov
or
mov
xor
and
jbe
stc
imul
pop
and
cld
ret
sbb
xlat
mov
cwtl
insb
cwtl
packsswb
xor
push
add
xchg
test
push
lret
data16
fsubs
push
outsb
adc
mov
sub
imul
ds
jmp
sub
fs
xchg
out
xor
or
mov
jne
or
dec
adc
add
pop
push
out
pop
inc
and
adc
xchg
and
scas
cli
jbe
dec
scas
ja
pop
jl
push
ds
and
cwtl
inc
movsl
test
scas
add
push
xchg
xchg
xlat
cmpsl
inc
fsubl
aas
or
les
cmp
sahf
dec
stc
mov
enter
js
add
inc
out
xchg
aaa
jecxz
push
ss
xchg
inc
or
loope
mov
or
cmp
ja
xor
and
stc
fnstcw
mov
mov
std
adc
jne
dec
dec
xor
enter
mov
into
push
cld
push
stos
push
nop
int3
fnstcw
or
sbb
push
bound
jle
movsb
pop
ja
jae
lahf
scas
mov
scas
jge
xorb
push
aad
push
dec
mov
lods
push
call
sbb
cmp
pop
jno
je
dec
fwait
xor
sub
mov
add
frstor
call
dec
lock
mov
gs
test
jg
inc
repz
in
pop
mov
and
push
js
mov
popa
sub
mov
jmp
jne
loopne
adc
inc
push
jg,pn
dec
inc
aaa
test
cmpl
mov
pop
loope
cmc
inc
adc
sbb
popf
xchg
ror
cld
das
cld
xor
dec
push
roll
mov
test
dec
lret
push
dec
xchg
cmove
and
adc
jno
mov
xchg
adc
fisttpll
dec
loopne
or
and
scas
clc
popf
lret
xor
and
inc
cmp
mov
outsl
mov
fdivrl
push
mov
cld
push
or
cmc
add
sbb
dec
fildl
xchg
sar
insl
sub
aam
leave
adc
roll
aas
fwait
inc
mov
mov
mul
repz
in
fisttpl
sti
cli
add
mov
cmp
std
adc
ss
push
clc
mov
cld
fimuls
and
mov
xor
cld
sarb
jno
aaa
mov
xchg
popf
xor
push
dec
stc
or
in
les
sub
daa
scas
and
push
fwait
ror
mov
cmp
ljmp
and
test
fimuls
mov
and
sti
cli
sub
test
das
mov
aam
mov
leave
out
ret
into
cmpsb
out
ror
mov
je
xchg
dec
shrd
lahf
cli
xor
in
pop
pop
out
cmp
aas
popf
or
jo
in
cli
inc
loop
jle
arpl
cmp
jae
dec
dec
in
mov
jecxz
push
mov
dec
push
or
scas
inc
pop
icebp
icebp
loopne
adc
jmp
call
les
pop
jno
outsl
mov
movsb
insb
cmpsb
in
fdivrl
sbb
fs
dec
test
aas
xchg
lahf
mov
lods
sahf
out
mov
inc
or
popa
out
jg
push
fdivrl
dec
sub
push
in
outsb
sahf
in
cmpb
aad
and
andl
xchg
mov
jecxz
aam
mov
xchg
add
pop
pop
cwtl
fmulp
mov
loopne
mov
outsb
mov
test
test
xor
push
lahf
adc
and
bound
mov
push
aaa
inc
mov
cld
sahf
ds
loop
inc
mov
leave
les
push
aam
push
xor
jmp
dec
jg
std
add
xchg
in
dec
pushf
or
fcoml
test
inc
std
fstl
cmp
xlat
popl
xchg
fwait
out
and
sti
xor
jecxz
mov
faddp
cmp
jo
outsb
mov
cmp
and
and
or
int
je
dec
aas
rorl
xor
and
imul
xor
lret
in
lods
mov
mov
push
test
or
cmc
bound
push
xchg
add
lods
out
mov
ret
mov
xor
lods
cmc
or
in
sbb
xchg
sub
testl
mov
mov
sbb
pop
add
add
xchg
or
xchg
js
inc
cmp
frstor
sbb
int
fdivrp
sub
pop
hlt
jp
adc
mov
push
mov
ljmp
cmp
lret
xor
xor
add
popa
cmp
iret
cs
and
in
scas
push
xchg
lret
push
loopne
mov
jns
mov
add
and
test
jne
mov
mov
jbe
cmc
shll
mov
out
add
insl
js
lock
stos
sar
scas
mov
jl
xlat
movsb
push
je
or
sub
addb
pop
mov
or
xchg
ja
push
xchg
push
mov
in
ffree
dec
enter
shlb
jecxz
das
sbb
xor
fimull
pop
or
jo
push
dec
idivl
mov
fcmove
inc
sti
inc
push
fistl
shll
scas
js
adc
jl
push
lret
mov
mov
pop
cld
mov
clc
pop
pop
jns
xor
xchg
rorb
loop
mov
add
lods
fdivrp
add
push
in
adc
pushf
pop
mov
ljmp
cmpb
mov
ss
sub
je
lret
sbb
and
pop
sub
xor
adc
pop
ljmp
push
into
and
ret
dec
insl
lahf
leave
adc
add
aas
bound
aaa
in
in
jb
or
xchg
loope
sub
insb
adc
scas
mov
cmpsb
nop
xor
xor
push
int3
into
push
aam
pop
jo
cmp
aad
cmp
fldlg2
lods
shl
shl
mov
pop
push
lret
or
xor
orb
fistpl
sysenter
add
loopne
clc
or
int3
scas
inc
subl
loop
push
ret
lods
add
mov
inc
adc
stos
dec
inc
jle
sti
dec
dec
fcompl
xchg
push
insb
jnp
xchg
pop
jno
decb
mov
mov
mov
dec
imulb
test
jae
fucom
mov
cmp
xchg
orl
jne
pop
cmp
fdecstp
inc
ret
mov
dec
ja
inc
jg
popaw
inc
mov
adc
push
daa
cmc
push
xchg
mov
dec
outsl
leave
adc
les
mov
bound
sub
in
sub
daa
pop
imul
pushf
sti
inc
cmp
ss
push
cs
dec
xor
mov
lea
push
loope
out
stc
ss
sti
jno
sub
ds
ljmp
ror
dec
enter
xchg
push
jae
repz
xchg
lret
into
push
inc
or
lcall
mov
cli
in
lahf
sub
mov
ss
in
arpl
cmc
sti
cmp
ds
jne
movsb
pandn
pusha
lcall
rorb
xor
mov
cltd
mov
repz
lea
aad
out
push
and
adcl
add
xchg
cmpsb
dec
adc
test
out
movhps
sti
xchg
je
mov
daa
fld
xchg
push
fs
xchg
scas
fdivrl
mov
addr16
add
sub
ljmp
xchg
sub
aas
sti
lret
or
movsb
pop
inc
lahf
insb
add
pusha
insb
sbb
aas
cmpsb
add
in
pop
mov
cwtl
stos
jg
jg
xor
xor
lret
lret
sbb
cmpsl
sub
fldt
mov
fmull
insw
jmp
xchg
test
mov
rorl
jg
int
and
bnd
dec
cmpsb
pop
xchg
lcall
outsl
cmpsl
mov
add
mov
jb
lods
mov
jp
lahf
or
sti
mov
pop
xorl
or
and
js
add
and
in
and
fcompl
ja
jmp
arpl
push
inc
sub
add
in
and
add
frstor
jno
stc
xor
ds
fdivrl
inc
pop
mov
loopne
sbb
and
les
sub
pop
mov
movsb
xchg
inc
daa
pop
xor
sub
mov
orb
xlat
shrl
and
sbbl
or
pop
leave
pop
popa
sub
or
loopne
scas
leave
lods
jp
cmp
fstl
adc
and
or
sub
cmp
mov
mov
sbb
not
and
jb
jne
xor
and
dec
fstl
mov
cwtl
cmp
jp
xor
add
mov
add
ret
cmpsl
and
adc
cmpsl
jo
jecxz
popa
arpl
inc
cltd
sahf
pop
aaa
and
sub
pushf
cld
or
out
lods
pop
rcrb
xor
imull
jecxz
in
negl
loopne
lret
and
scas
mov
adc
call
and
jno
cli
out
mov
push
lds
push
lock
add
add
dec
push
push
cmp
shl
mov
movsl
jecxz
out
or
pop
loope
xchg
in
sbb
cmp
mov
cli
loop
test
out
jnp
jo
je
ljmp
and
jmp
jne
hlt
or
jge
cmp
xor
adc
pop
jbe
cmpsb
mov
cmp
fstpt
into
mov
push
mov
push
push
lods
cmp
ja
mov
orl
mov
dec
and
call
jne
cmpsb
fimuls
push
imulb
cli
lods
ss
pop
aad
dec
orb
outsl
xor
inc
movsb
sbb
xorb
xchg
cmpsb
or
les
int
inc
movsl
into
incl
into
mov
dec
and
test
mul
cmpsl
xchg
mov
movsb
adc
and
push
or
mov
test
fadds
lahf
movsl
dec
imul
pop
rcll
ret
xchg
sbb
inc
lret
ljmp
mov
dec
push
stos
fdivrp
std
push
xchg
sti
aaa
frstor
xchg
push
xchg
pop
lret
testb
popf
movsb
dec
xchg
pop
negl
jb
pop
outsb
loop
test
sysret
lock
int
out
bound
mov
push
in
rorl
mov
xchg
add
cmp
sub
sti
mov
mov
cmpl
dec
or
clc
push
xor
cmp
xchg
fcomps
cmpsl
mov
cmpl
xchg
cmpsl
inc
je
fwait
mov
mov
push
lods
pop
enter
sti
shl
push
ljmp
push
fwait
jb
cmc
fs
pop
mov
xchg
pop
loop
sub
pop
mov
pop
int
inc
push
or
mov
fwait
or
and
fsubrs
pushf
and
icebp
in
adcb
push
inc
mov
arpl
cld
cltd
out
shrl
dec
pop
cmpneqps
inc
inc
add
mov
fildll
outsl
ss
adc
rorb
in
mov
lds
loop
ret
je
mov
into
popf
jbe
orl
jns
lahf
cmp
pop
mov
stc
fisubrs
imul
push
insl
push
mov
xor
std
nop
lea
ljmp
loopne
push
addb
jae
out
scas
mov
and
addb
loopne
rcll
loope
adc
sbb
or
cld
ret
dec
out
mov
inc
insl
scas
into
int3
scas
push
pop
test
mov
or
cltd
adc
jbe
jecxz
jno
mov
xor
inc
pusha
ficomps
lret
xchg
subb
cmpsb
mov
lds
fildl
les
mov
loope
clc
push
and
add
aam
mov
lock
dec
je
movb
outsb
les
addr16
dec
aam
mov
mov
and
sbb
and
pop
xchg
mov
jge
int
std
adc
xor
outsb
pop
lock
fsubrl
xor
fs
dec
loope
pop
fs
popf
sti
lret
aas
add
xchg
leave
lods
mov
xchg
sbb
sbb
dec
and
mov
lret
push
cli
sbb
fwait
adc
push
add
mov
fs
xchg
mov
lcall
jbe
dec
mov
call
xor
rcl
xor
dec
sbb
fsubl
in
xchg
mov
jg
sub
push
and
dec
into
pop
data16
adc
outsl
inc
mov
rolb
in
out
add
pop
mov
andl
pop
push
lods
test
cmc
lret
addl
mov
aaa
mov
in
mov
out
push
sub
pop
cmp
nop
fisubs
cmpsl
adc
and
inc
scas
pop
dec
fdivr
cmp
lock
fildl
and
xor
outsb
mov
fiadds
dec
xor
push
push
ret
jns
and
push
and
sub
arpl
adc
negb
andb
imul
mov
loope
repnz
gs
cs
stos
lret
mov
cli
push
xchg
out
pop
cmp
sbb
clc
jmp
sbb
xchg
xchg
and
add
je
inc
and
push
jns
ret
nop
xchg
or
in
mov
pop
xor
pop
test
mov
push
jno
mov
lret
fdivrl
hlt
sbb
movsl
lds
les
xor
mov
jno
cmp
sub
aas
lret
jge
and
ficoml
pop
das
leave
fstp
mov
sahf
pop
xorl
and
pop
add
cs
mov
ja
adc
push
xor
je
mov
add
rcll
enter
out
dec
loop
jae
push
lock
dec
xchg
sbb
lcall
scas
in
jbe
dec
pop
std
sub
repz
xchg
cmp
pop
mov
dec
rcr
and
repnz
rol
pop
sbb
push
sub
pop
inc
out
je
daa
scas
dec
aaa
pop
and
pop
enter
push
sub
add
out
fcmovnb
ja
xchg
mov
mov
lods
sarl
jg
inc
mov
pop
or
mov
scas
mov
sub
mov
test
jg
mov
push
shl
jae
add
jge
add
int3
mov
sbb
jp
dec
sub
cmp
subl
xor
cmp
jecxz
or
in
mov
jbe
mov
and
sub
pop
int3
insl
aas
leave
lods
add
push
ds
add
pushf
push
lods
pop
and
mov
pop
lret
and
mov
in
mov
mov
cmp
pop
push
lods
mov
xchg
outsb
imul
fwait
ss
inc
movsl
dec
call
pushf
mov
xchg
imulb
pop
movsb
sbb
shr
cmpsl
loopne
xchg
xchg
sub
dec
aad
ret
dec
scas
mov
mov
lds
clc
das
movsl
sbb
mov
sti
lods
sti
pop
push
enter
int3
and
mov
push
xchg
cltd
cmp
xor
jle
dec
loop
fcomps
shr
push
dec
pop
xchg
xchg
pop
cmp
mov
sub
js
inc
outsl
pop
xchg
std
jae
adc
test
movsl
cmp
jecxz
cmc
pop
or
test
push
das
mov
mov
adc
sbb
pop
jb
int3
push
rolb
push
movsl
push
xor
sbb
mov
jbe
jl
push
lahf
or
insb
imulb
inc
nop
sbb
insl
dec
das
test
jo
insl
cmp
xchg
mov
out
lret
and
xor
jb
xchg
dec
ret
dec
xchg
std
inc
and
sbb
cmpsl
lcall
ret
jnp
mov
popf
frstor
sbb
cmpl
out
ret
inc
test
stc
fbstp
jno
cmpsl
push
out
orl
cld
mov
xor
cld
divl
ret
dec
push
daa
aaa
inc
scas
leave
adc
fdivl
ja
aad
jl
cs
mov
cld
jp
push
push
pop
inc
jbe
pop
cli
xor
cwtl
add
pop
nop
push
lcall
movsl
cmp
sub
idiv
bnd
lods
jg
pop
and
shll
add
jle
shl
sbb
in
imul
jmp
roll
pop
in
dec
lock
xchg
push
cltd
daa
fsubl
imul
sbb
jne
cmpsl
aaa
and
testl
into
sub
jb
ds
rclb
mov
dec
add
in
out
mov
push
sbb
pop
into
and
adc
sbb
pop
sti
sub
jmp
int
dec
testl
lahf
fstpl
mov
mov
xlat
cmc
psadbw
inc
xchg
dec
sub
lret
xor
xchg
push
add
call
mov
enter
xchg
pop
test
xchg
test
adc
xor
push
cmpsb
xchg
cli
pop
sub
or
cmp
repnz
pop
and
xlat
mov
daa
sub
repnz
sub
shl
pop
inc
insb
cmp
pop
cmp
and
stos
popa
mov
jl
sbb
jns
sti
and
lea
jbe
pop
xchg
xchg
or
or
jae
outsb
inc
sbb
xor
xchg
sahf
addl
add
call
shlb
roll
jmp
cwtl
loop
xor
push
lods
lcall
pop
fsubrl
lods
dec
cmpsb
cwtl
mov
xchg
lods
dec
or
xor
lods
push
fcomps
jmp
mov
xor
cmpsb
or
clc
mov
pop
jg
pop
xor
inc
or
dec
lea
mov
add
mov
in
sbb
and
inc
rcll
ret
inc
push
int
jecxz
add
push
dec
xor
cwtl
leave
shrl
xlat
mov
mov
lods
and
fidivs
lret
popa
adc
pop
sahf
ljmp
mov
xor
decb
movzwl
jecxz
sbb
es
cld
enter
jp
and
sbb
test
jne
xchg
add
cmpsl
and
in
lahf
inc
sub
jge
loope
imul
dec
aaa
stos
aam
sub
mov
dec
out
dec
mov
or
enter
ret
enter
int
cmp
sub
mov
inc
data16
push
inc
add
sub
sbb
inc
jge,pn
cltd
dec
jp
fdivrs
mov
mov
das
pushf
adc
xor
xchg
das
adc
shlb
push
lret
cs
push
adc
mov
addr16
fadds
clc
les
or
jbe
jp
fbstp
leave
js
and
sub
cmp
ret
pop
in
jo
jl
pop
ficompl
ret
sub
je
cmp
leave
xor
xchg
push
into
sub
inc
cmpsl
mov
mov
pop
inc
xchg
cmpsb
lods
hlt
ret
int
dec
das
cmp
mov
jg
insl
inc
add
lret
inc
fidivl
mov
flds
cwtl
ds
cmp
mov
sub
sub
add
or
test
ss
flds
pop
ljmp
int
mov
pop
xor
xchg
inc
mov
xlat
adc
mov
ror
js
ja
or
test
aaa
rcr
adc
adc
xchg
movsb
xor
lods
cmp
lds
dec
aaa
mov
jb
mov
test
mov
adc
mov
arpl
xchg
es
pop
add
jp
xor
adc
mov
sub
mov
xor
push
dec
cld
add
mov
and
dec
dec
jb
pop
mov
sub
es
ljmp
adc
cwtl
jo
jae
mov
mov
in
les
icebp
out
hlt
xchg
in
lods
push
outsb
jo
pop
mov
andl
or
sub
jnp
sub
in
mov
jnp
out
mov
mov
bound
adc
ret
call
mov
push
cs
scas
inc
xor
out
adc
dec
mov
or
xor
mov
pusha
push
add
jnp
in
or
sar
push
insl
fidivs
iret
jno
mov
jg
je
iret
mov
mov
pop
lods
js
cltd
mov
repz
xchg
push
cmp
mov
xchg
inc
outsl
subb
mov
outsl
inc
mov
and
cli
jge
mov
adc
cmp
mov
cli
dec
cmp
jmp
dec
mov
inc
mov
pop
das
pushl
and
push
sub
jno
fldl
addr16
fstpl
icebp
test
push
mov
lret
sub
dec
bound
fimull
sub
xor
cmp
xchg
nop
lock
pop
in
insl
lahf
adc
inc
cld
jb
repnz
xchg
cmp
pop
inc
mov
fs
rcr
lock
mov
subl
fstpl
mov
aam
dec
jno
jnp
dec
out
fucom
mov
insl
sub
in
mov
stos
inc
mov
xlat
cmp
add
aas
test
inc
arpl
lea
mov
sub
sbb
stos
movsb
test
xchg
xchg
fidivrl
iret
test
imul
repnz
xchg
push
mov
mov
jns
das
mov
addr16
xor
iret
stos
and
sbb
pop
fimuls
push
mov
adc
add
and
pop
sub
adc
add
jno
fildll
sti
cli
xchg
mov
jne
lods
mov
mov
and
les
sbb
push
loopne
jb
sbb
ret
lods
mov
enter
cmpsb
insb
pop
dec
xor
mov
adc
and
aas
cmp
inc
push
cmpsl
push
in
pusha
test
cltd
je
sbb
ja
imul
test
jo
daa
imul
inc
gs
adc
and
orl
pop
and
and
mov
sti
ljmp
sbb
pop
pusha
mov
mov
cwtl
data16
pushf
cwtl
jl
adc
cli
dec
xor
clc
addr16
lret
or
je
mov
sbb
jmp
jbe
fiaddl
cli
iret
mov
call
mov
movsb
dec
in
sub
xor
repnz
mov
daa
cwtl
xchg
mov
stc
and
mov
mov
sbb
out
sub
aaa
inc
push
push
xor
xchg
orl
push
std
bound
cltd
fwait
jmp
popf
push
nop
mov
pop
mov
xchg
pop
pop
andl
in
repnz
scas
pop
mov
stc
dec
and
add
push
outsl
jo
add
push
lret
cmp
andb
push
pop
mov
dec
les
sub
or
mov
lock
addr16
test
add
rolb
pop
mov
xchg
sbb
fildll
jg
fcompl
int3
sub
cli
xchg
fmuls
mov
ja
pop
and
into
mov
loop
xlat
dec
js
roll
push
movsl
push
add
sub
cs
loopne
xor
inc
test
sub
add
inc
cmpsl
push
mov
out
fwait
push
jg
push
iret
popl
or
pop
dec
mov
sbb
sbb
xchg
cmp
inc
xchg
xchg
fimull
dec
sub
mov
test
fwait
xchg
icebp
sahf
test
push
adc
xchg
fsts
and
fcomip
rorb
mov
sub
sbb
push
out
jp
push
sub
jg
clc
addr16
pop
repz
pop
pop
jp
fcmovnb
xchg
test
mov
inc
and
sbb
fdivrs
jne
outsl
aas
or
sub
cmp
and
test
movl
lock
xchg
pusha
fsub
pop
push
in
sub
xchg
arpl
pop
cltd
movsb
cld
mov
ljmp
push
ret
lea
mov
xchg
xorl
rcrb
pop
mov
push
repz
pop
xchg
mov
pop
mov
stos
add
sti
ds
mov
jle
cmp
mov
sub
sahf
cmp
xlat
sbb
leave
int3
jl
popa
mov
adc
imul
push
enter
out
cmpsb
adc
sbb
sbb
leave
fisttpll
leave
mov
cs
inc
mov
sub
lock
mov
hlt
pshufw
push
jo
js
and
sub
cmp
jnp
sarl
sub
add
popf
cs
lds
add
mov
adc
test
pop
leave
xor
push
ficoms
dec
aaa
inc
push
xchg
jge
mov
flds
inc
jg
popl
lcall
mov
dec
push
sbb
flds
ret
mov
shrb
fistl
ja
push
mov
cmpsb
lods
cmc
je
add
mov
lret
pop
addr16
cmp
mov
stos
xchg
dec
xchg
sub
aaa
mov
jmp
addl
mov
pushf
pop
repnz
int
xlat
movsb
cltd
dec
pop
sbb
je
testl
mov
xchg
out
hlt
popf
cmpb
xchg
adc
xor
icebp
pushf
popa
add
les
sub
stos
adc
pop
cmpsl
sbb
xchg
adc
pop
xchg
daa
adcb
push
inc
ja
or
dec
inc
push
push
sub
nop
aas
inc
test
enter
fcoml
cmpsb
aaa
and
jns
in
push
jne
sbb
test
push
mov
clc
sbb
test
xor
push
dec
imul
cmp
fnclex
sbb
push
push
dec
pop
sbb
add
xchg
inc
lahf
les
mov
rolb
jmp
xor
xorb
adcb
mov
shl
ror
jo
inc
lahf
push
in
arpl
iret
jmp
out
mov
xchg
shlb
movsl
sub
xor
and
add
adc
out
pop
ret
rcll
sub
or
mov
cmp
mov
andl
scas
fwait
add
or
push
mov
test
icebp
xchg
ljmp
inc
aam
int
cmp
call
dec
ret
sbb
mov
sahf
in
mov
push
mov
add
dec
fldcw
pop
xchg
ret
pusha
mov
cmp
movsb
loop
sbb
pop
add
sbb
popf
test
cmp
std
mov
ret
ficompl
cmc
test
shlb
push
dec
loope
cmpsb
or
ret
mov
push
dec
in
cmpsl
cs
faddp
sbb
mov
and
pop
mov
sub
iret
mov
xor
inc
cmc
add
mov
pop
jb
sbb
ret
insb
popf
sbb
jg
pop
cmovp
shlb
pop
jp
mov
sub
loopne
sti
sbb
js
or
push
jbe
std
aaa
or
mov
sub
mov
jns
adc
je
push
into
jmp
push
inc
xor
mov
sbb
mov
add
insb
dec
mov
leave
mov
sub
das
xchg
add
sti
or
stos
cmc
shl
mov
cmp
arpl
rorl
mov
sub
push
mov
mov
ret
out
jg
push
mov
iret
sub
xchg
rolb
and
pop
inc
nop
shll
lods
iret
lods
cltd
push
popa
stos
dec
int3
ret
jae
scas
jmp
loop
arpl
xchg
shlb
lods
and
bound
xchg
dec
fcoml
xchg
call
cmp
aad
iret
mov
push
std
jo
cmp
inc
popf
pop
aad
addr16
push
test
fdivs
mov
push
inc
jecxz
mov
jmp
inc
sub
add
sub
repnz
cmpsl
pop
add
add
in
gs
js
sub
mov
insb
sub
dec
inc
pop
std
push
int3
movsl
or
mov
data16
lock
or
cmp
in
mov
daa
cli
push
mov
aad
dec
xor
jae
and
push
rcll
mov
sbb
or
jmp
fdivrl
stos
dec
push
mov
mov
dec
jae
push
insb
fwait
ja
pusha
cmp
test
ds
leave
in
push
lods
test
test
daa
enter
mov
mov
js
mov
outsb
scas
hlt
mov
stos
rcrl
mov
inc
cmpsl
aam
lods
pop
mov
fimuls
add
scas
inc
adcl
dec
fcompl
int3
mov
test
sbb
outsl
xchg
mov
xchg
pop
cmp
loope
daa
xchg
xchg
fldcw
mov
stos
out
pop
or
cmp
cli
mov
cmc
stc
call
jecxz
sub
xchg
dec
outsb
mov
into
pop
nop
adc
in
push
lcall
sbb
imul
movsb
jo
fdivr
test
cwtl
mov
jb
push
mov
and
pop
stc
data16
cmp
js
ret
xorb
cmp
mov
pop
mov
call
insl
sub
mov
mov
mov
push
lods
cmp
test
test
pop
in
repnz
arpl
jae
or
mov
and
test
dec
popf
pop
outsl
cmp
addr16
push
pop
repz
dec
mov
and
out
push
aas
cli
out
fldenv
test
mov
mov
jl
inc
pop
ja
jp
mov
leave
pop
mov
xchg
sbb
ret
xchg
jp
das
pop
imul
push
or
jbe
push
sbb
add
out
ja
sahf
shlb
pushf
jp
aad
jge
sti
add
pushf
inc
je
xor
call
mov
repz
adc
push
imul
sbb
xor
jae
mov
imul
push
fcomip
outsl
pop
mov
das
pop
lock
or
dec
xor
dec
negb
aaa
sub
icebp
repnz
outsb
ljmp
test
scas
cmpsb
addr16
lcall
jne
pop
fsub
mov
add
jne
popf
imul
dec
std
int
mov
fstpl
loopne
or
inc
nop
mov
dec
test
and
sbb
dec
sahf
push
push
and
repz
pop
mov
in
xor
cld
push
inc
test
push
xchg
lea
push
xchg
sub
xlat
xor
mov
add
mov
mov
jae
cmpsb
flds
add
je
or
add
les
or
inc
inc
mov
insl
dec
push
decl
add
xchg
cmp
fs
or
dec
jecxz
cli
fcoml
repz
int
in
adc
mov
push
stos
push
lods
cmp
popf
adc
mov
fsubrl
outsb
sub
aam
sbb
dec
mov
mov
add
jmp
mov
dec
sub
pop
in
int
lods
pusha
lods
pop
fcmovnb
daa
out
push
loope
sarb
shl
sbb
aaa
stos
popa
mov
outsl
lret
and
mov
and
into
pop
sbb
sub
xor
push
add
mov
dec
ficompl
pop
outsb
push
jbe
and
and
imul
sbb
mov
xchg
ljmp
icebp
pop
push
inc
frndint
ret
push
xchg
arpl
out
jp
mov
in
mov
imul
jmp
test
mov
movlps
ret
scas
mov
std
and
cmp
mov
fdivrs
mov
mov
cmp
xchg
loopne
dec
fstpt
fildll
xor
sti
adcb
pop
dec
push
icebp
push
jmp
js
pop
aam
out
jns
lahf
jne
add
daa
outsb
sbb
ja
fwait
std
fs
push
test
add
sbb
cmpsl
fwait
mov
inc
push
jle
mov
mov
mov
inc
mov
repz
pop
dec
repz
push
sub
inc
fisttpll
dec
test
scas
cld
adcb
dec
adc
dec
adc
or
adcb
ds
xchg
push
ret
int3
shlb
cmp
shrl
in
inc
push
xor
lods
in
dec
test
out
das
pop
adc
lea
shrb
inc
jle
cmp
stos
loopne
das
add
cltd
xorb
rorl
das
jnp
or
mov
mov
xor
divl
loope
inc
xor
lods
jo
mov
mov
ret
shll
adc
jns
insl
pushf
xchg
xchg
mov
jl
daa
fldcw
pop
cltd
add
cld
test
mov
xchg
jbe
pop
xchg
in
lods
dec
icebp
pop
pop
mov
scas
fimuls
loopne
pop
mov
cmpsb
jmp
les
push
pop
sbb
cmpsb
sub
xchg
sub
arpl
divl
cmp
fsubs
push
loopne
adc
dec
or
cmpl
cmp
iret
and
test
int
psubd
jns
stos
int
push
les
stos
xchg
mov
cs
push
pop
mov
cld
imul
pusha
cli
mov
lods
pop
dec
inc
cmp
ret
cmpsl
sti
xor
mov
mov
fsub
insb
repz
and
enter
movsb
mov
cmpsl
stos
gs
cmp
aam
movsl
sbb
push
mov
pop
inc
jle
es
pop
enter
fidivrs
fldl
sbb
dec
xchg
test
dec
or
fisubrs
out
sbb
mov
dec
sbb
mov
xchg
insl
jl
mov
jl
or
negb
ret
iret
cs
cli
js
xchg
dec
mov
or
adc
pop
jno
cmp
cmp
test
add
shlb
sbb
xchg
hlt
jns
testb
nop
and
int
and
iret
sbb
inc
cmpsl
inc
movsb
xor
iret
mov
mov
add
xchg
add
pop
lcall
scas
push
je
or
dec
scas
sbb
fisubrl
inc
outsl
fdivrp
ret
add
mov
inc
out
in
gs
cmp
data16
xchg
mov
pop
adc
lds
inc
push
push
imul
jnp
or
cltd
push
and
divl
je
out
cs
jno
cmp
rol
inc
lods
stos
imul
repz
pcmpgtb
pop
jmp
rclb
and
xchg
jns
add
add
xchg
out
out
push
inc
inc
test
in
dec
lods
jns
cmp
scas
jp
bound
mov
sub
sub
shlb
nop
ss
xorb
imul
je
pop
push
sahf
cs
popf
and
sub
loope
sub
adc
jmp
sahf
pop
outsl
pop
pop
sbb
rorl
pop
sub
push
jnp
pop
push
pop
sbb
fcmovnbe
mov
je
mov
cmp
mov
inc
pop
sbb
cmc
fcomip
sti
sub
xor
or
jmp
test
push
xchg
mov
out
sbb
cmp
mov
xorb
push
add
test
inc
and
ljmp
sahf
cs
ret
mov
sbb
pop
jb
jb
out
into
test
stos
lahf
data16
rol
add
mov
jno
or
push
lods
test
fwait
inc
shrb
inc
push
sbb
sub
popf
leave
inc
push
pusha
mov
cmc
ret
addr16
outsb
into
mov
clc
pop
movsb
cmp
pop
mov
xchg
insb
sub
dec
sub
ja
mov
and
xchg
mov
push
pop
in
arpl
idivl
repnz
xor
mov
call
addr16
and
lahf
dec
jge
xor
and
pop
jne
repnz
psubw
mov
cmp
imul
pop
out
mov
fsubrl
mov
xchg
mov
pop
cld
jb
adc
jl
scas
inc
adc
cli
lea
pop
cmpsl
out
bound
xchg
hlt
mov
dec
sub
sti
sub
xor
lods
cld
fwait
mov
mov
push
push
rcrb
mov
xor
scas
out
mov
and
out
and
cmp
mov
cmpsb
sbb
hlt
testb
or
or
out
cmp
rcr
lods
pop
std
out
dec
adc
adc
mov
xor
add
jp
mov
inc
fdivrl
dec
cmpsb
test
mov
lret
movsl
dec
loope
cmp
aaa
out
std
mov
rorb
dec
fs
scas
lret
aam
mov
pop
loop
mov
adc
xchg
jle
in
fsubrl
mov
xor
pop
test
in
mov
loop
xchg
mov
mov
mov
lds
out
xor
aam
adc
adcl
scas
or
leave
push
sub
stc
mov
dec
pusha
cmp
mov
bnd
out
push
cmp
in
hlt
outsl
adc
and
mov
mov
or
cltd
dec
push
mov
xor
push
repz
cli
mov
push
mov
sbb
add
shlb
loopne
jnp
jae
sbb
and
ret
mov
ret
adc
mov
das
xor
sub
push
lret
aaa
bound
into
jg
or
adc
lock
test
xchg
inc
dec
sbb
repz
ret
xchg
cmp
fscale
mov
jmp
daa
popa
testb
add
in
clc
push
and
push
sub
add
inc
imul
out
ss
sysret
mov
xchg
xchg
inc
inc
xchg
mov
mov
dec
mov
lods
xchg
or
mov
cli
in
sbb
jne
lea
dec
rcrb
push
xchg
and
xchg
cmp
bound
inc
adc
push
inc
xor
in
and
fwait
arpl
mov
or
mov
mov
loope
notb
cmp
popf
int
push
std
push
mulb
or
lods
leave
fisttps
mov
cmp
push
or
inc
gs
pop
es
xor
or
es
mov
mov
dec
shlb
push
sar
es
mov
out
es
push
mov
test
add
cmp
sub
das
in
fstpt
ss
jbe
cmpsb
aam
ret
enter
testl
jge
cmp
stos
xchg
testl
insb
add
inc
cmp
sbb
fcmove
shrl
insb
pop
sbb
sbb
dec
loope
clc
dec
dec
inc
cltd
shrl
das
negb
in
int
xor
ljmp
pop
adc
sbb
rcrl
lret
sub
imul
cmpsl
mov
inc
jle
ret
push
test
nop
sub
repnz
out
mov
inc
inc
inc
push
stos
cli
add
out
out
xor
rcll
outsl
cwtl
movsb
repnz
cmp
xchg
lds
out
or
mov
imul
mov
sti
inc
xchg
pop
cmp
cmc
adc
xchg
push
out
xor
add
dec
fld
mov
mov
sbb
fistpll
loope
dec
push
jnp
or
mov
test
and
test
dec
pushf
add
mov
movsb
cmpsl
stos
out
clc
loope
cli
rorl
cmpsl
cmp
pop
in
imul
xor
movsl
ret
sub
je
jmp
cmp
mov
jns
cltd
fstpt
loope
test
je
pop
cmp
add
cmp
ds
adc
scas
repnz
sarl
inc
pop
leave
pop
cmpsl
sub
daa
fcomps
sbb
mull
mov
xchg
sbb
jne
cmc
test
test
cmp
fwait
in
push
or
jge
push
mov
nop
pop
inc
rclb
iret
adcb
outsb
orl
pop
sti
mov
orb
or
and
andb
pop
shll
clc
fsubrl
enter
sarl
jg
rcrb
jne
pop
arpl
std
dec
push
push
nop
sbb
or
xorl
int3
xor
inc
insl
mov
push
je
popf
pop
lcall
popa
pop
fldt
inc
out
filds
jb
adc
jp
es
jo
push
sub
push
push
idivl
jno
out
out
mov
xor
pop
pop
mov
in
mov
sub
or
mov
push
aam
and
insb
push
in
pop
icebp
js
cmp
les
dec
xchg
or
xlat
inc
enter
cli
mov
test
fwait
mov
nop
adc
scas
mov
push
xor
jmp
cmp
mov
shll
cld
and
xchg
test
sub
xor
sbb
xchg
aam
enter
sbb
xor
out
adc
movsl
xor
cmp
jne
les
push
xor
pop
adc
ret
and
mov
xlat
data16
stc
dec
test
dec
inc
imul
xlat
jge
call
cltd
lret
pop
jmp
cmp
bound
mov
or
jle
pop
sub
jg
fistl
pop
std
imul
arpl
push
sub
decl
aam
xlat
or
push
dec
cltd
jne
fdivr
das
and
or
xchg
add
sbb
jge
mov
add
shld
les
stc
cld
je
and
outsl
flds
push
imul
adc
int
mov
xchg
cmc
xchg
arpl
loopne
dec
es
fisttpll
movsb
dec
jb
sub
sbb
xor
outsl
lock
add
dec
jge
addr16
insl
xchg
or
mov
adc
xchg
fistpl
xchg
or
inc
push
adc
repz
dec
inc
das
cmp
xchg
mov
or
lret
cs
jne
jne
scas
and
fildl
movsb
add
ss
inc
ljmp
jg
rcrb
push
insb
or
jg
sbb
fcomip
push
popf
fiadds
fistl
leave
push
sub
mov
sbbb
xor
mov
jp
out
adc
dec
mov
int
rcl
push
pop
cmp
imul
pop
mov
inc
mov
insb
hlt
insb
sbb
adc
or
sub
adc
and
mov
and
cs
push
out
or
inc
lds
mov
jne
in
push
iret
adc
shll
mov
shrl
xchg
test
inc
xchg
mov
xor
mov
imul
jbe
cmpb
and
jns
popf
sarl
paddw
add
pop
std
jne
xchg
add
ljmp
mov
bound
dec
mov
fldcw
sahf
xor
pushf
push
mov
adc
sub
and
jno
adc
jecxz
lahf
pop
cmp
pop
fnsave
pop
mov
cli
stos
pop
pop
inc
xchg
mov
int3
mov
push
in
inc
cmp
lret
sub
jl
cld
sub
or
faddl
int3
dec
clc
shll
push
cmp
push
andb
outsl
xchg
dec
daa
cmp
and
adc
aad
cmp
add
xorl
cmp
sub
neg
loop
repnz
jno
stos
jge
xor
dec
sbb
pop
dec
cmpsb
add
je
repz
push
push
fstl
inc
push
outsl
sbb
pop
sbb
cli
cmp
dec
sbb
sbb
dec
hlt
pop
enter
fwait
pop
imul
jmp
mov
rclb
mov
repnz
mov
mov
addb
subb
sub
add
adc
mov
mov
mov
lock
iret
pop
imul
div
add
mov
cmp
and
idivl
es
cltd
pushf
in
stc
or
jl
das
ja
fiadds
out
aaa
pop
mov
call
insb
mov
pusha
mov
enter
lahf
gs
jmp
iret
mov
adc
sub
jnp
fsincos
aad
test
sbb
jo
fs
fs
sti
stos
out
outsl
xchg
out
lods
push
sub
mov
sti
mov
inc
mov
bswap
pop
decl
or
icebp
xor
repnz
dec
xchg
jbe
or
lods
mov
pop
out
xor
inc
adc
xor
movzwl
mov
add
aam
jae
xchg
loopne
mov
clc
addr16
out
popl
fdivrs
popf
int3
add
inc
aam
add
out
testl
mov
push
or
repnz
lods
jmp
push
jno
pusha
xor
fidivs
lock
add
scas
cmpsb
fdivrs
shlb
jmp
pop
xchg
scas
xchg
mov
ljmp
pop
cmp
int
cmpsb
movaps
lods
inc
or
sub
sbb
or
out
imul
lcall
loope
negb
jmp
pushf
ret
repz
mov
jae
ss
inc
jmp
outsl
rorb
cld
je
mov
aas
mov
xchg
daa
xchg
out
je
mov
sub
enter
jns
mov
mov
pusha
push
lret
push
push
adc
or
repz
cmpsb
insl
jno
mov
inc
sub
lret
sbb
hlt
test
mov
add
mov
ret
add
jbe
aas
ret
outsl
and
scas
test
fdivp
xor
jmp
in
and
add
in
sub
iret
cltd
cmpsb
cmc
ret
test
or
push
dec
outsb
inc
and
mov
push
jns
scas
jle
jl
leave
jne
sbb
aam
shr
out
inc
dec
push
cld
xor
insl
jmp
cmc
out
imul
call
xor
inc
loopne
push
in
jl
push
mov
hlt
cmp
test
pop
inc
int3
daa
cmp
test
lret
cmp
in
push
je
repz
ret
mov
pop
add
clc
dec
jg
mov
into
fnstcw
iret
test
jmp
add
push
or
cmp
adc
hlt
push
jo
adc
and
cmpsb
in
push
aas
xchg
iret
pop
pop
stos
cwtl
faddl
sub
mov
xchg
mov
mov
loop
pop
sbbl
xchg
adc
pop
sbb
ljmp
add
cli
gs
insb
mov
mov
and
xchg
movl
movsb
les
mov
call
xchg
xchg
jns
scas
xorb
or
xchg
shrl
insl
xor
ror
addl
mov
cwtl
jmp
and
cld
xor
add
je
pushf
les
mov
pop
jmp
lods
mov
inc
scas
add
test
sub
and
push
loopw
ljmp
in
js
jbe
jl
fnstcw
std
aas
adc
add
xor
aaa
pop
mov
push
arpl
ja
sub
add
jp
jo
lcall
push
jae
cmp
xchg
jle
jnp
lds
sti
pop
adcl
cltd
call
fnstcw
mov
and
pop
mov
or
cmp
cld
out
cs
aam
ljmp
xchg
test
outsl
lea
xor
xchg
pop
dec
pop
push
inc
sahf
addr16
dec
sbb
stos
pusha
or
sarb
xor
sbb
lcall
jae
lea
mov
jmp
push
in
lea
mov
mov
pop
cmp
sar
std
cmp
gs
ret
fidivrl
test
mov
je
cmp
jo
fs
call
lea
mov
les
xlat
jle
mov
outsl
ds
insb
lods
outsb
cmpsl
movsl
jmp
test
mov
pop
popa
push
jmp
sbb
adc
int3
dec
mov
stos
inc
or
jle
dec
movsb
xchg
mov
add
dec
rcrl
sbb
ret
push
out
jecxz
mov
negb
push
out
aad
movsb
rep
xchg
int
ss
ja
push
lret
lcall
repnz
leave
xlat
scas
mov
shrb
cmc
xor
es
add
cld
add
mov
fidivl
mov
in
mov
mov
flds
adc
out
test
fildll
inc
mov
lahf
fadd
sub
mov
sub
lret
out
push
fisubs
cwtl
and
fistl
out
je
jge
movsl
inc
fsubl
test
icebp
add
jp
or
sub
cmp
xchg
xor
fildl
jne
sub
dec
test
imul
dec
sub
imul
inc
xchg
dec
fdivl
xor
push
inc
dec
sbb
sarb
aad
and
insb
xchg
psubusb
push
pop
stc
mov
repnz
shr
lds
and
jle
mov
aam
enter
sub
mov
lret
scas
jle
inc
cwtl
push
and
test
xchg
test
jge
nop
xchg
pop
movsl
push
xlat
jmp
fisubl
mov
xorl
outsl
in
test
or
mov
push
mov
dec
push
bound
popa
pop
dec
adc
mov
xlat
mov
std
pop
aas
les
xchg
enter
inc
xlat
dec
push
in
lret
in
cmp
jge
sbb
cmp
iret
push
insl
xor
jmp
icebp
orl
aam
lods
jmp
xchg
popa
gs
repz
xchg
aaa
leave
cwtl
and
or
mov
aad
pop
loope
insb
jo
sti
xchg
or
shlb
adc
jge
add
lcall
aad
xchg
es
leave
inc
pop
and
enter
movsl
sub
pop
cmp
popf
enter
sub
dec
sub
jns
cli
mov
xor
dec
mov
and
sub
jmp
xor
add
movsl
jae
cmc
sar
mov
and
mov
pop
mov
sbb
addr16
mov
add
lds
lahf
pop
jns
movsl
inc
sarl
and
repnz
dec
loope
xor
push
xor
adc
xchg
mov
lahf
hlt
push
lock
xchg
xchg
mov
cmp
xor
push
dec
xchg
jg
into
mov
mov
xchg
testb
imulb
mov
xchg
push
sub
pop
sahf
mov
lods
movsl
adcl
imul
add
cld
cmp
arpl
jbe
push
ret
mov
fsub
and
xchg
jmp
mov
and
in
ret
popf
and
add
testl
pop
ja
add
mov
into
hlt
cmp
scas
sti
adc
xor
fstps
mov
leave
enter
mov
fdivrp
add
adc
test
scas
repz
in
shll
push
out
fwait
sbb
inc
sub
inc
js
test
mul
and
shlb
js
adc
push
in
daa
add
fwait
mov
xor
mov
jmp
jp
into
add
and
push
sub
sbb
sub
ret
fdivrl
icebp
bound
aaa
adc
std
pop
bound
push
xchg
les
mov
add
cmp
add
push
fadd
adc
loopne
fptan
arpl
scas
sbbl
jne
in
rorb
cmp
add
and
bound
push
or
cmp
test
jp
pop
les
hlt
sub
push
xchg
aam
push
mov
dec
scas
rolb
jecxz
and
jmp
lods
repnz
cld
jecxz
or
movsl
leave
fisttpl
xchg
sbb
fcomps
xchg
xchg
push
imul
xor
lods
cmp
or
lahf
adc
jmp
lea
in
xchg
add
inc
and
mov
mov
sti
rcr
popf
cwtl
or
xchg
lock
xchg
imul
or
shlb
loopne
xchg
add
or
in
ret
fbstp
and
xor
fdiv
mov
test
mov
jnp
pop
sbb
mov
fiaddl
jns
adc
mov
mov
and
xchg
pushf
scas
lret
movsb
or
aas
out
sbb
sub
bound
mov
add
cltd
addr16
and
popa
xchg
sub
out
rorl
cs
push
dec
xchg
movsb
sub
xor
sub
mov
xchg
pop
dec
leave
inc
add
repnz
outsl
loopne
xor
fistl
jae
imul
cmpsl
or
sbb
fsubrp
jb
or
sub
lret
mov
xor
stos
popl
adc
lods
mov
adc
mov
add
cmpsl
xchg
sbb
shlb
lds
loop
jns
orl
and
xchg
jno
insl
mov
mov
sti
pop
data16
int3
dec
mov
sub
lcall
dec
and
xorb
cmpsb
xor
xor
and
cmp
xor
jno
xor
popa
bound
mov
pop
out
scas
iret
cmp
or
into
out
pop
fnstcw
push
inc
jnp
jae
inc
cmpsb
cmpb
mov
push
imul
into
into
pop
cmpb
dec
xchg
call
sub
xchg
cli
in
lret
divl
push
ljmp
test
xlat
arpl
cmp
xor
xchg
mov
imul
enter
and
mov
outsl
incb
dec
xor
mov
lcall
jno
cmp
push
push
xor
jmp
cmpsb
test
lret
dec
fisubs
mov
add
cmpsl
fdivrs
push
xchg
xchg
xchg
mov
in
ficompl
xchg
pop
pushf
push
mov
push
and
pop
add
xor
xor
jbe
sub
fs
push
push
pop
and
icebp
aas
insl
test
xchg
inc
xchg
or
and
loope
enter
cmp
aad
mov
leave
loopne
push
movsl
jp
jmp
bound
cmp
pop
fs
stc
cmp
fildll
sbb
iret
cmp
cmc
nop
sub
mov
xchg
inc
outsb
mov
push
cs
sbbl
sahf
push
in
mov
dec
insb
fists
sahf
sbb
jmp
mov
adc
aaa
ljmp
and
addr16
ljmp
rcrl
sbb
or
aad
mov
lods
inc
icebp
mov
xor
adc
mov
push
out
lds
pop
xchg
stos
out
popa
dec
push
insb
pop
int3
adcl
iret
shrl
test
mov
add
adc
sbb
repnz
cmpsb
in
popf
cmp
inc
jg
inc
lea
fisubs
cmp
lcall
push
int3
jne
adc
cmp
dec
test
dec
add
fmul
stos
clc
loopne
insl
pop
mov
lock
fadd
adc
rorb
inc
xchg
push
mov
fdivs
xchg
fsubs
rcll
daa
je
jmp
sarl
cld
jo
nop
adc
fdivrl
jns
arpl
sarl
jbe
insl
inc
pop
mov
and
xchg
mov
cmp
js
ret
fcompl
icebp
sbb
repnz
icebp
ret
rorl
jno
xchg
mov
test
adc
push
outsl
in
xchg
fs
and
pop
push
xor
neg
movsb
jg
scas
outsl
and
sub
xor
in
mov
cwtl
add
push
push
rcll
imull
and
or
add
cmc
xor
mov
add
xlat
sub
aaa
arpl
dec
sahf
add
xorl
cmpsl
into
mov
sbb
pop
stc
stos
pop
xchg
push
xchg
xchg
mov
pop
push
push
loop
push
dec
das
fdivrs
insb
adc
divl
fimuls
dec
loop
bswap
pop
push
cmp
cmp
jnp
aad
mov
and
ljmp
push
mov
pop
cmp
iret
lea
lock
jb
stos
lahf
adc
scas
outsb
mov
mov
lret
fs
jmp
addb
sti
nop
or
std
sbb
xor
dec
clc
hlt
lea
jne
leave
push
adcl
lods
into
aaa
aam
pop
mov
je
addr16
adc
dec
shrb
jbe
mov
loope
push
adc
push
or
mov
add
ror
out
pop
mov
outsl
iret
test
mov
mov
je
daa
mov
out
loop
jge
cwtl
mulb
scas
and
dec
xchg
dec
jae
mov
sahf
mul
adc
lcall
fsubp
cmc
mov
in
push
out
comiss
dec
sti
lret
xor
add
cmp
ljmp
lahf
push
stos
dec
add
cmp
and
xor
sbb
xlat
test
cmp
dec
inc
mov
jnp
insl
loope
iret
pop
scas
out
clc
dec
cwtl
lods
pop
sub
in
and
sub
sbb
mov
fisttps
test
rcll
jno
das
out
lahf
out
push
popa
ror
inc
popa
test
or
sarl
mov
push
mov
stc
fmul
ja
lods
inc
cmp
ds
cli
push
lret
add
dec
lods
or
clc
push
nop
ud1
repnz
inc
jp
xchg
std
loope,pn
mov
insl
imul
cld
sahf
jecxz
and
xor
push
call
rcr
int
mov
mov
ja
mov
push
cmp
loopne
lock
push
and
jp
or
xor
dec
xor
movsl
jle
and
mov
mov
imul
iret
mov
add
ljmp
mov
out
mov
iret
xchg
jno
sub
xchg
lds
lods
enter
dec
sub
or
pusha
jno
and
push
inc
lahf
push
loop
adc
inc
mov
jns
pop
cmpsl
mov
xor
in
mov
sarb
dec
sub
sub
arpl
rol
mov
repnz
int3
mov
popa
js
shr
mov
lock
test
jl
loopne
sbb
mov
cli
pop
xchg
sub
sbb
into
cmp
ljmp
inc
sbb
roll
test
mov
scas
push
int
cmp
dec
adc
cmpsl
pop
mov
stc
popf
inc
cmp
cmpsb
sti
or
mov
sbb
aam
daa
xorl
cmpsb
push
enter
add
ja
popa
insl
fimull
xor
sbb
dec
imul
jbe
mov
imul
insl
inc
push
orb
insl
push
jecxz
fldz
sbb
xchg
or
push
or
jns
mov
setp
sbb
popf
sahf
scas
mov
pushf
fcomps
xlat
mov
pop
push
pushf
popf
nop
mov
push
punpckldq
pop
adc
je
test
mov
popf
jb
mull
aad
jp
xchg
push
dec
cmpsl
inc
add
daa
test
sbb
rorl
add
repnz
xor
sub
out
mov
sbb
mov
fbstp
outsl
hlt
shlb
or
loop
cld
es
cs
pop
xor
sub
add
cmp
filds
mov
lds
push
push
add
and
loopne
enter
add
adcb
cmp
imul
sub
in
out
pop
sbb
es
add
aad
lea
addr16
jl
nop
pop
or
and
inc
bound
leave
mov
movsb
lahf
and
pop
iret
sub
adc
rcr
int3
add
sub
cli
mov
pushf
and
inc
loop
fnstsw
es
sub
lret
aas
add
loop
les
or
call
ficoml
push
mov
daa
and
cmp
and
popa
leave
or
xchg
mov
jg
popa
mov
fimull
leave
stc
push
je
ss
mov
mov
mov
sub
lods
xor
mov
gs
int
pushl
lcall
xor
add
inc
add
imul
xor
xor
pushf
adc
or
sahf
in
jo
pusha
jnp
pusha
cltd
andl
test
stos
scas
inc
push
aaa
scas
testl
inc
test
add
shll
lods
add
test
adc
into
shrl
pop
adc
xchg
sahf
ret
in
gs
rcl
push
ljmp
insb
fwait
addb
popf
sbb
cmpsl
orb
dec
leave
jge
aas
ds
sbb
decb
data16
scas
or
ret
shr
xchg
lock
in
jns
jp
cltd
daa
imul
lret
and
xchg
xor
push
mov
inc
pop
pop
or
outsl
xor
lock
out
jmp
xor
loop
outsb
cltd
jg
outsl
dec
mov
sbb
ret
std
les
inc
push
pop
or
jb
mov
ret
ljmp
mov
cmp
leave
das
insl
std
arpl
aam
mov
iret
mov
sub
push
lds
dec
aaa
push
sahf
push
aas
and
test
in
out
filds
dec
or
jecxz
cmpsb
or
incl
pop
lods
and
sbb
xor
xor
mov
ljmp
fdivrs
mov
jae
xor
push
sub
hlt
call
push
mov
mov
xchg
popa
adc
or
subb
add
les
sarl
lcall
ds
fisttpl
lret
push
push
xchg
and
cmpsb
sbb
out
mov
mov
shll
xor
pop
pop
inc
sub
mov
cmpsl
jp
xchg
jo
mov
icebp
in
pop
or
cmpsb
jno
mov
jbe
mov
and
imul
mov
lods
or
inc
pop
pop
test
sub
ror
xor
call
ret
lahf
scas
mov
popf
push
ja
push
imul
dec
adc
push
ficompl
mov
mov
push
roll
in
dec
mov
pop
cmpsl
pop
xor
lret
orb
data16
adc
out
cmpl
aam
xchg
lahf
pushf
or
xchg
push
add
inc
inc
pop
xchg
jns
mov
loop
fisttpl
nop
das
and
xchg
add
mov
xor
or
insl
das
rcll
xchg
loop
jno
stos
out
popl
sub
mov
test
cmp
push
pushf
push
or
loopne
in
cvttps2pi
sub
fbld
jae
push
mov
jmp
push
adc
dec
cmc
push
inc
and
cs
shrb
ds
jae
and
adc
lods
test
xor
sti
adcl
mov
lds
inc
dec
addr16
xor
movsb
fwait
jecxz
jnp
icebp
sub
jmp
push
xchg
jnp
push
in
sti
test
dec
in
inc
jb
iret
fs
fidivs
hlt
push
ja
jnp
xchg
mov
sahf
jns
jnp
sub
sbb
iret
sub
adc
and
pop
jns
out
lea
pop
sbb
fimull
mov
aaa
pop
pop
or
push
or
scas
out
dec
add
mov
sub
push
sbbl
xor
ret
xlat
or
sar
jnp
outsl
movsb
in
mov
clc
sub
pop
das
cmp
push
pop
xor
int
mov
clc
sbb
sub
rcrl
loopne
cld
sub
xlat
stos
dec
and
mov
add
xchg
ds
inc
addr16
add
lds
ret
mov
cmp
xchg
jns
jp
loopne
or
ljmp
or
ja
jnp
mov
pusha
rorl
xchg
sarl
loopne
lahf
inc
and
call
mov
lret
aam
xor
in
sub
das
jge
and
orb
jp
xlat
stos
aam
and
out
aas
sub
inc
insb
mov
xchg
ljmp
scas
repnz
jmp
add
xchg
push
and
xor
loope
lahf
lods
cltd
clc
mov
adc
pushf
aas
insb
adc
sbb
jmp
fbld
addr16
jmp
dec
xchg
push
ss
push
inc
int
cwtl
mov
mov
fstpt
test
pop
cmp
in
ret
stos
jp
xchg
mov
out
mov
mov
popa
or
out
sbb
pop
lea
clc
jo
mov
test
stc
mov
pop
inc
int
cltd
jmp
ljmp
movsb
mov
pop
scas
rorb
sbb
push
in
fistpll
jl
mov
xchg
xor
mov
iret
add
mov
inc
loopne
dec
pop
mov
lret
xchg
cmp
in
pop
dec
sar
adc
mov
test
arpl
push
fwait
icebp
scas
adc
cmp
xchg
dec
repnz
xchg
adc
cmp
scas
adc
pusha
aad
xchg
test
fwait
into
adc
rcrl
xchg
shr
mov
pop
add
lcall
cmc
repz
inc
testl
icebp
insb
push
pop
inc
stc
mov
cld
sub
lcallw
xchg
inc
insl
jle
or
mov
and
dec
sahf
push
and
add
cld
dec
cmp
push
fistps
sbb
pop
cmp
jmp
enter
leave
popf
stos
stos
into
push
jb
mov
jb
xor
xor
xchg
popf
jo
imul
jmp
sbb
daa
sub
test
adc
inc
gs
xor
arpl
cmp
xlat
loop
push
inc
icebp
pusha
cld
fiaddl
xchg
imul
enter
cmpsl
xchg
adc
adc
add
rcrl
push
test
lds
fs
loop
mov
jns
fmuls
push
sub
inc
push
int3
push
fldcw
scas
push
push
mov
push
pop
mov
iret
outsl
lcall
mov
jnp
push
leave
insb
cmp
lods
mov
dec
adc
ds
pop
out
sub
mov
notl
outsb
ds
mov
mov
mov
cli
in
in
das
jg
or
lea
xchg
cmpsl
inc
mov
mov
cmp
cmc
in
shlb
xor
adc
adc
and
inc
lcall
aaa
pop
mov
clc
insl
sbb
mov
sub
aam
nop
jne
pop
mov
repnz
inc
xchg
sbb
outsb
sub
decl
cld
jb
lret
fsubr
lds
fdiv
test
mov
xor
lea
push
cmpsb
icebp
adc
adc
jmp
push
ret
dec
xlat
pop
sbb
inc
xchg
sbb
jns
or
call
clc
outsb
mov
lcall
pop
pop
push
cmpsl
sub
or
xchg
dec
in
scas
fistps
movb
pop
test
insb
hlt
add
jae
add
sub
pop
fsubp
mov
sbb
jmp
pop
jae
sub
mov
cli
push
repz
or
xchg
xchg
mov
mov
movsl
cli
into
jo
push
dec
cwtl
aad
jns
xlat
out
out
dec
push
cmp
dec
stos
lds
mov
dec
lret
mov
in
jmp
cmpsl
sub
setne
scas
mov
lcall
jns
loopne
mov
xchg
or
push
cli
mov
sbb
rol
xchg
mov
cmp
jne
rol
sub
je
add
imul
jnp
sbb
xchg
pop
add
jno
mov
orb
push
cmpsb
dec
adcl
test
inc
out
fs
leave
inc
dec
lret
add
dec
cld
cmp
in
push
pop
and
add
icebp
arpl
stos
pop
mov
loopne
sbb
repz
inc
repz
mov
cmp
adc
sti
xchg
sti
sbb
idivl
je
cmp
repz
mov
xor
pushl
mov
inc
mov
mov
and
cmpsl
add
dec
fstpl
into
std
ds
popf
into
mov
outsl
cmp
adc
test
fs
ds
push
dec
xchg
lock
fs
aam
scas
je
jg
xlat
test
das
gs
adc
ret
ljmp
or
fwait
in
jns
ds
push
sub
jge
add
jne
fnstenv
clc
or
mov
dec
sbb
test
fildll
jg
xor
cmp
bound
stos
iret
rorl
mov
mov
lods
sub
cmp
cmpsl
cmp
lods
rcl
fucomp
push
fcmovnbe
pop
mov
and
aad
pushf
in
or
inc
in
lods
xor
dec
adc
fldt
mov
mov
imul
jbe
add
lods
mov
cmpsb
jp
xchg
mov
mov
xor
addr16
lods
cli
add
lahf
nop
mov
xor
fcoms
mov
cld
test
lret
xchg
out
push
inc
fst
push
enter
xor
sahf
mov
sbb
fcoms
stc
or
nop
lock
iret
nop
adc
mov
stos
jnp
add
outsb
or
mov
sbb
pop
dec
sub
movsb
sub
addb
in
fidivs
push
or
adc
iretw
shlb
cmc
je
dec
inc
and
inc
ljmp
mov
cld
in
inc
pushf
inc
xor
pusha
jae
sbb
jge
pop
ljmp
fucomi
loope
out
iret
ja
jle
stos
aas
add
pop
sbb
je
das
aas
daa
cmp
notb
jne
push
scas
pop
add
or
jo
inc
sbb
and
sub
push
test
xchg
pop
inc
mov
and
xchg
cmp
jmp
xor
pop
xor
lret
out
push
add
cli
push
pop
sub
imul
leave
into
jae
call
shlb
pop
or
push
or
sbb
mov
rcl
mov
pop
movsb
leave
lret
out
sub
arpl
or
push
pop
fprem
xor
add
cmp
sti
jecxz
mov
adc
mov
scas
in
push
pop
subb
notl
inc
call
scas
fimuls
mov
sbb
daa
scas
lret
or
inc
loope
sub
add
jmp
adc
int3
roll
jmp
sub
outsb
push
mov
inc
inc
cld
xor
or
jns
std
sbb
or
imul
test
popa
jmp
adc
sbb
sbb
scas
cmc
pop
call
adc
jle
inc
icebp
adc
and
mov
jp
fwait
inc
jnp
xchg
call
jb
test
sub
divl
inc
es
mov
cli
enter
mov
sub
sbb
mov
mov
push
and
jg
lods
xlat
dec
jl
imul
sub
daa
push
aaa
mov
scas
cli
pop
in
popa
iret
rol
and
imul
and
scas
xchg
mov
mov
cmpb
scas
mov
mov
jl
dec
jg
mov
inc
outsl
push
into
ror
and
inc
mov
outsb
push
lret
mov
cmpsl
jle
sbb
sub
dec
loope
xorb
and
jb
add
fidivs
insl
paddb
lds
lret
inc
scas
leave
out
mov
push
cmpl
pop
dec
imul
or
or
in
shll
lret
push
cmc
cmc
hlt
gs
mov
adc
inc
stos
sbb
andb
push
outsl
push
jle
or
loopne
mov
pusha
jo
mov
imul
cmp
adc
cs
adc
adc
pushf
push
popf
mov
xlat
pop
out
inc
fstp
adc
cmp
inc
test
aas
xor
pusha
test
mov
icebp
jmp
pop
jg
mov
push
inc
loopne
inc
cs
outsl
lret
frstor
in
movsl
call
pop
or
adc
movsl
dec
inc
xor
rolw
icebp
jnp
shr
fs
sbbl
sub
negb
adc
xor
jge
out
mov
inc
fcmove
or
jg
mov
mov
into
mov
sbb
je
jmp
jmp
repz
jp
fmull
inc
test
icebp
into
les
push
jns
sub
or
jmp
jae
push
pop
addr16
hlt
sbb
add
loopne
push
arpl
add
xor
lret
mov
lds
sub
adc
stos
inc
das
xchg
dec
mov
sahf
cmp
lea
popa
inc
sar
js
cld
incb
mov
xchg
dec
aad
mov
jnp
jae
xor
mov
sub
lcall
push
mov
pop
push
outsl
addr16
sbb
jge
pushw
int
daa
push
insb
movsb
lret
xchg
daa
inc
jae
adc
mov
xor
push
addl
test
mov
pop
pop
ret
popf
sbb
adc
xchg
push
sar
adc
or
in
cmp
cmp
imul
call
fnstenv
adc
test
mov
insl
ret
clc
pop
je
and
sub
lahf
and
je
cmp
cwtl
movsl
fists
push
mov
aam
jmp
jmp
mov
jnp
push
dec
notb
dec
pushf
lods
adc
dec
imul
jo
call
insl
and
fs
int
pop
rclb
xchg
iret
inc
cltd
ljmp
mov
aam
pop
aaa
imull
sub
sbb
test
sbb
mov
repnz
je
cmp
xchg
pop
dec
adc
and
pushf
in
mov
movsb
jle
scas
jg
dec
mov
aam
push
icebp
pop
adc
jge
lds
pop
jbe
mov
test
fdivrl
xor
je
idiv
fwait
rcr
popf
mov
outsl
cwtl
dec
sbb
and
insl
repnz
popf
cmp
out
mov
or
inc
nop
xchg
loopne
fildll
loopne
mov
cltd
sub
out
xlat
ja
outsb
mov
into
nop
test
insb
orb
mov
add
addr16
push
inc
sbb
or
jmp
sarl
cmp
cmp
cli
shrl
fsubp
push
and
outsb
sub
sub
xchg
dec
out
and
mov
mov
lods
xor
mov
fstl
shrb
or
add
in
lock
hlt
jbe
mov
push
int
clc
xchg
popf
or
ror
mov
lds
dec
and
lock
imul
addb
lret
dec
xor
sbb
push
or
mov
jg
rolb
rolb
lods
in
insl
cmpl
mov
sub
dec
jno
loop
stos
inc
data16
mov
and
insl
mov
xchg
aaa
mov
adc
push
test
clc
push
inc
das
fldcw
xchg
iret
data16
js
fstpt
test
sub
ss
imul
inc
leave
xchg
fidivs
aas
or
stos
mov
fbld
xlat
push
push
or
sar
stos
rcll
pop
dec
das
mov
jae
sbb
xor
cmp
mov
sub
hlt
pop
movsl
inc
inc
lret
dec
mov
adc
loope
sub
stc
jl
negb
cwtl
fidivs
test
cli
pop
addr16
cmp
mov
jl
mov
dec
xor
fisubs
xchg
test
jae
dec
xor
xchg
sbb
leave
jmp
mov
sub
cmp
ss
ret
fwait
mov
lock
repz
pop
jle
imul
mov
push
jo
rcll
inc
xor
push
mov
or
mov
push
lret
mov
test
inc
push
inc
fxch
call
pop
cmp
or
dec
out
cmp
movsb
subb
fisubs
inc
pop
pop
pop
fucomi
cmpsb
jo
mov
mov
cmp
dec
stos
jl
mov
and
aaa
xchg
lar
inc
add
ret
mov
mov
sti
sbb
mov
adc
push
outsl
sub
in
add
jns
or
mov
sub
pop
push
hlt
cmp
sub
in
adc
add
jmp
repz
notl
lods
test
scas
stos
add
ss
scas
enter
and
xchg
jl
dec
inc
out
test
mov
fs
cld
adc
scas
mov
fsubr
inc
fadds
popf
imul
mov
mov
nop
mov
sbb
mov
xchg
mov
xlat
lods
movsl
push
in
sbbl
adc
pop
divl
inc
mov
mov
nop
cld
daa
and
cmpsb
sub
daa
mov
push
orb
imul
xor
stos
xchg
add
enter
adc
jbe
call
stos
ret
pop
test
and
rcrb
mov
jo
cmpl
mov
ja
lods
pop
ret
or
jmp
and
in
sti
dec
push
pushf
je
mov
mov
mov
mov
scas
lea
mov
sub
inc
int3
roll
int3
out
xchg
lahf
xor
stos
andl
mov
cmp
es
fsubr
insl
jne
xor
ljmp
sarb
out
fists
hlt
mov
cwtl
or
or
int
bound
jo
inc
mov
inc
fsubs
cmp
add
sbb
ret
adc
orl
insb
jno
stos
adc
mov
mov
lods
leave
sahf
add
imul
mov
sbb
jl
push
mov
scas
test
in
jle
dec
pop
dec
lock
fsts
push
into
mov
mov
xchg
cmc
push
incb
mov
popa
stc
inc
inc
xchg
adc
fldenv
inc
std
push
cltd
pop
mov
dec
adc
mov
ljmp
or
into
cwtl
push
mov
jnp
mov
xchg
jmp
js
int3
aas
sarl
sub
push
jns
movsl
pop
out
cmp
fcmovb
shll
adcl
mov
arpl
add
add
or
int
inc
cmp
mov
jns
sbb
testl
pop
aaa
daa
cmp
dec
pop
lcall
xchg
in
jecxz
push
and
stos
jecxz
mov
cmp
dec
scas
lahf
call
aad
test
sub
cwtl
fstl
jge
cwtl
int
or
xor
addl
dec
scas
aas
pop
insb
fbstp
pushf
mov
pop
push
fsubp
mov
icebp
push
out
mov
pop
mull
inc
push
pushf
jne
mov
andl
in
call
or
adc
into
xchg
insb
sahf
pop
and
jg
cmp
jle
jbe
clc
push
aam
nop
and
icebp
loope
lods
adc
sarb
cmc
ficoml
test
mov
jg
cs
dec
fstl
or
ret
lea
ja
ja
dec
aaa
lea
dec
repz
loope
pop
call
sub
push
mov
gs
mov
push
in
js
or
stos
cli
add
jne
push
dec
in
add
pop
loope
mov
inc
fisttpll
ss
test
or
push
jne
cmp
mov
xor
jnp
or
popf
cmp
sub
cmpsl
pushf
jg
push
js
add
ret
loop
scas
cmp
popf
push
rclb
mov
inc
jl
jae
inc
push
daa
dec
fistps
fsubs
cmpsb
pop
push
pop
testb
push
dec
mov
jg
testb
mov
push
insl
adc
and
call
xchg
mov
inc
mov
das
mov
cltd
repz
mov
and
nop
add
mov
push
xchg
fldl
outsl
sub
xlat
test
iret
pop
enter
in
or
rcr
or
mov
mov
sbb
ds
xchg
leave
xchg
icebp
mov
inc
xchg
push
mov
push
fiaddl
dec
lahf
fsts
sub
xor
dec
mov
and
push
xchg
lods
mov
pop
imul
test
cmc
scas
xchg
imul
sti
stos
out
filds
mov
shll
lcall
adc
pshufw
jno
xor
fidivs
in
dec
stos
dec
mov
movsb
shll
mov
lcall
jle
dec
or
lods
jg
out
addl
ja
leave
dec
jl
rcrb
aaa
or
pop
adc
popa
push
aad
sbb
aam
sbb
inc
pusha
out
mov
fcomi
xchg
sub
mov
jbe
xor
shrb
adc
xchg
mov
xor
pop
push
cwtl
ds
push
cmc
jae
cmp
mov
outsb
ja
mov
mov
movsb
or
dec
push
and
mov
mov
xchg
mov
sub
xor
popf
and
add
lcall
pop
stos
sbb
cmp
jno
mov
test
and
sbb
pop
cmpsb
mov
dec
int
call
lret
test
aaa
push
or
scas
test
sub
fwait
lret
and
push
adc
push
xor
cmp
jo
sbb
enter
jecxz
mov
and
lea
lds
mov
pop
inc
popf
enter
cmp
xchg
cs
scas
imul
inc
outsb
dec
push
popf
cmp
xor
fmul
dec
das
mov
mov
out
cmp
loopne
pop
sub
clc
adc
mov
adc
js
and
hlt
or
dec
pop
mov
lahf
cmp
iret
or
jo
movsb
push
lcall
test
idivb
jo
stc
push
faddp
jmp
rcll
jl
ss
ljmp
repz
xchg
or
lahf
rorl
dec
mov
cmp
lods
xchg
mov
mov
inc
fldz
fdivs
sarb
or
das
push
xorl
shr
popa
jno
or
loopne
or
subl
jle
iret
sti
fisttpll
nop
xor
lret
inc
sub
pushf
push
xchg
outsb
xchg
and
cmpsl
out
mov
pusha
xchg
dec
leave
lcall
fst
test
inc
dec
ficoms
clc
std
ss
sbb
cmpsb
xor
cmp
les
or
jg
icebp
leave
or
jg
fidivrs
cmp
add
adc
xorl
popa
shlb
push
outsb
sub
mov
sub
jae
add
pop
push
ret
popf
and
jb
je
mov
ljmp
mov
dec
adc
sbbl
out
push
xchg
and
stos
scas
and
or
push
fidivl
adc
adc
shll
jns
repz
or
push
out
ficompl
popf
jle
mov
outsb
mov
sub
sbb
stos
into
sbb
fdivs
sub
jns
sahf
jne
jb
cltd
movsb
ret
fbstp
xchg
add
cs
push
sahf
push
imul
jae
out
push
cmpsb
push
pop
data16
test
xor
sahf
ljmp
lock
mov
sbb
push
outsl
push
std
add
mov
adc
loope
sti
push
sbb
repz
fwait
cld
cli
mov
cmpsb
test
aaa
jnp
cltd
cmp
ljmp
inc
out
inc
xor
mov
enter
int3
add
cli
add
sbb
sub
mov
pop
pop
adc
jecxz
and
das
xchg
dec
rep
push
addr16
int
dec
fmuls
add
aaa
mov
ljmp
push
xor
dec
lods
in
cmpsb
mov
and
idivl
cs
inc
mov
pusha
cmp
push
subl
pop
lods
jbe
dec
sbb
pop
pop
xor
push
sbb
push
daa
es
add
jmp
daa
fld
stos
push
jno
in
pop
xchg
xlat
aaa
mov
repz
bound
sub
insb
cmc
xlat
dec
cmpsb
adc
dec
sub
sub
aas
push
jno
fmul
sahf
sub
mov
punpckhbw
int
insl
loop
stos
mov
outsl
push
movsb
cmp
std
ja
faddl
xchg
cmc
mov
adc
push
loopne
test
xchg
fcomps
jmp
jmp
loopne
mov
mov
mov
push
loope
jge
sti
lret
insl
in
call
mov
mov
into
inc
lret
adc
xor
and
insb
add
sub
jge
fs
mov
movsb
scas
stos
pop
sbbl
adc
fnsave
btr
inc
push
mov
loop
fdivrl
mov
mov
fistps
insl
rolb
add
cmp
xorb
shrl
sarb
adc
int3
sbb
clc
cs
mov
xchg
in
xor
mov
loope
mov
rcr
fnstenv
in
popl
lock
jp
jmp
push
daa
subb
mov
in
xchg
cmpsb
popa
inc
lahf
cmpsb
out
das
jne
mov
dec
xor
popa
jb
outsl
ficomps
adcb
lcall
jo
add
xlat
mov
stos
adc
jp
add
lea
dec
pushf
jae
or
test
sarl
js
jge
pop
add
je
rorb
mov
jp
leave
add
pop
int3
adcl
dec
sub
test
fnsave
cmpl
in
enter
fsts
cmp
mov
fldcw
fsubrs
les
insb
or
scas
pop
push
movsb
jo
rclb
xor
mov
gs
xor
mov
mov
dec
jae
outsb
pop
icebp
cmp
fsubl
ds
sbb
and
or
rcrb
sbbb
lea
xor
aaa
shrb
fdivl
xor
es
jle
pop
leave
dec
test
cli
mov
enter
pop
std
addl
out
push
push
sub
test
or
test
sub
jae
enter
scas
dec
xchg
cwtl
sbb
mov
aas
lock
in
sbb
mov
or
dec
add
divl
pop
jne
test
out
in
sar
xor
adc
mov
sbb
mov
fnstsw
pushf
xor
insl
aaa
cmp
or
xor
jno
in
mov
outsl
mov
enter
fs
xor
aad
lea
js
jp
arpl
mov
test
fcompl
push
out
sbb
test
push
cltd
xor
xchg
xchg
mov
or
fwait
mov
or
dec
into
and
fwait
in
adc
sarb
test
out
mov
les
mov
lds
push
clc
arpl
and
mov
je
adc
out
adc
inc
popa
pop
scas
clc
ja
iret
push
fscale
pop
repnz
inc
mov
sbb
scas
xchg
mov
test
shlb
xor
std
jne
gs
imul
ljmp
add
jno
and
jp
test
into
jmp
push
xor
rorl
inc
mov
pusha
push
lods
sbb
test
mov
out
cmp
add
push
or
rcrl
pushf
push
mov
xchg
push
loopne
mov
xchg
out
sub
fcmovnbe
sub
test
push
adc
xchg
inc
ss
rclb
jo
gs
int
stos
mov
hlt
inc
adc
xor
cmp
rolb
jno
cmpsl
jo
jns
mov
cmp
push
jg
pop
es
in
gs
int
adc
push
sub
repnz
movsl
xchg
mov
mov
adc
adc
xchg
sub
mov
int3
pop
adcb
jns
enter
out
pop
sub
adc
lcall
add
sbb
fidivrs
iret
cmp
cwtl
cmp
jle
push
xchg
mov
cmp
divb
mov
pop
push
inc
or
mov
cmc
call
pop
push
cli
mov
mov
mov
xchg
jmp
or
adc
add
mov
jl
and
adc
lods
mov
push
cmpsl
shrl
insb
push
cmp
mov
mov
push
sbb
or
lds
add
jnp
rcll
mov
outsb
lcall
pop
js
jo
in
jge
xchg
outsb
mov
dec
mov
xorb
mov
dec
int3
lahf
test
xor
push
mov
into
aaa
cmpsb
dec
icebp
push
test
jne
or
call
es
push
jns
xor
xor
mov
stos
xor
loope
hlt
or
mov
xor
mov
xchg
lds
fs
xchg
popa
pop
inc
adc
sbb
fwait
cwtl
cmp
popf
daa
aas
xchg
retw
mov
pop
adc
ss
or
xor
das
xchg
testl
movsl
aas
enter
xor
mov
xor
mov
pop
fs
mov
insb
fldenv
mov
sbb
ljmp
std
insb
ret
mov
push
outsb
xchg
testl
sub
lahf
and
mov
push
fwait
or
adc
push
jg
or
psubusb
mov
int
stos
xchg
xchg
leave
test
iret
jge
xor
scas
insl
das
inc
aaa
icebp
dec
lret
inc
jnp
faddl
add
adc
inc
clc
rol
jge
mov
pop
popf
push
stc
mov
and
ljmp
sbb
jp
jno
pop
cld
sbbl
pop
add
js
dec
push
jmp
push
or
jns
push
and
es
cmp
mov
sti
cmp
inc
leave
jp
aaa
sub
mov
xchg
push
aaa
inc
mov
mov
pop
mulb
pop
js
inc
mov
and
sbb
js
mov
pop
mov
fwait
fwait
in
mov
xchg
add
in
test
xchg
mov
and
dec
fisubrs
or
rcrl
jno
push
jb
iret
fwait
stos
mov
sub
jae
mov
pop
push
cmp
inc
jp
xor
cmpsb
push
popfw
stos
pop
sbb
stc
fbstp
fdivrs
rorb
clc
std
cmpb
cmp
xchg
adc
ret
xor
sbb
mov
mov
cmp
xchg
mov
pop
lcall
xchg
lret
ja
push
or
ret
fs
shll
pop
arpl
ja
push
mov
adc
adc
mov
stos
lret
mov
mov
jecxz
loopne
push
and
orl
fisttpl
adc
shll
std
sub
mov
inc
imul
adc
dec
movsl
popa
inc
adc
imul
cmp
popf
das
hlt
add
push
imul
sbbl
and
pop
cmpsb
pop
jmp
inc
mov
das
mov
aaa
dec
aaa
insl
adc
mov
xchg
fimuls
add
and
rorl
cwtl
outsb
mov
jmp
rorl
test
xorb
push
inc
inc
repz
add
repz
jecxz
scas
push
js
mov
lcall
fldenv
push
repz
jno
mov
mov
mov
xchg
mov
dec
and
jmp
dec
xchg
jle
out
gs
xchg
push
ret
dec
incb
sub
jg
inc
jno
add
push
push
adcl
pop
popf
loopne
xor
pop
adc
push
mov
inc
lret
xchg
sti
std
lods
cld
sbb
or
jns
inc
cmp
or
mov
xor
addb
dec
fwait
inc
jg
cmp
cmp
xor
jb
xchg
cltd
scas
xchg
and
aam
cmpsb
push
jbe
es
xor
dec
dec
jns
mov
jmp
push
sbb
nop
add
cwtl
into
mov
test
mov
jl
push
cmp
xor
add
cmpsb
cmp
mov
pop
push
inc
and
fidivs
out
jmp
lcall
sbb
loope
hlt
testl
gs
test
push
sbb
cs
mov
pop
add
je
add
lods
icebp
cmpb
mov
test
aam
or
dec
lea
push
mov
orl
fnstenv
pop
jno
aad
lods
push
stc
jns
adc
adc
mov
fcomps
inc
hlt
mov
push
pop
cwtl
sbb
jae
mov
push
sub
nop
pop
es
sbb
aad
lea
lods
sbb
inc
pop
or
jp
lcall
xchg
mov
mov
adc
mov
push
jno
addr16
lods
inc
sbb
ret
divb
aam
stos
mov
aaa
jns
lahf
negb
and
imul
jno
out
aad
or
stc
cmp
push
movsb
pop
push
push
into
mov
imul
sub
sub
sarl
stos
out
mov
mov
inc
repz
mov
pop
and
nop
shll
scas
ficomps
xchg
mov
scas
xor
lods
in
cmp
pop
sahf
pop
xor
jb
lods
jg
fisubrs
inc
shll
add
add
testb
mov
faddl
cmpsb
cmpsb
adcb
ja
mov
popa
in
xchg
clc
dec
and
adc
fmul
mov
dec
sahf
popf
lock
aam
enter
xor
xor
lret
outsl
pop
dec
jle
add
ss
sub
popa
push
pushf
jecxz
xchg
cmp
dec
sub
inc
pop
xchg
insb
scas
xor
cli
xor
xchg
pushf
mov
js
inc
pop
fistl
out
cmp
push
and
adc
pop
dec
data16
adc
out
pop
dec
jecxz
adc
fwait
mov
inc
les
push
add
call
mov
and
sbb
mov
ret
rol
mov
adc
rol
xor
jge
call
popa
mov
mov
mov
xor
js
movups
data16
push
sahf
jne
mov
mov
test
les
loopne
sbb
and
lea
fstpt
jmp
xchg
mov
loop
jbe
inc
fucom
movsl
xchg
xchg
sbb
xchg
or
call
cmp
xorb
mov
mov
jmp
je
lock
xchg
je
daa
lret
lret
outsl
lcall
adc
lods
adc
loope
inc
add
shll
push
dec
push
push
mov
sbb
stos
sbb
nop
les
cmp
pop
fs
xchg
adc
sbb
outsl
mov
pusha
mov
mov
pop
jnp
push
or
out
loope
jnp
in
out
inc
push
push
and
jl
push
outsl
lods
lret
int
xchg
pop
test
and
movsb
pop
repz
std
stos
call
mov
mov
ss
pop
xlat
push
int3
aas
fmuls
add
movsb
mov
fadds
cmp
scas
cld
mov
cli
sub
in
sbb
enter
add
mov
into
mov
fadd
sbb
iret
mov
ljmp
lret
cmp
and
out
inc
add
adc
popa
jmp
sarb
add
xchg
mov
jns
mov
loope
inc
ss
std
mov
push
outsl
dec
sbb
jle
jp
ss
stc
sub
flds
movsb
arpl
sbb
pop
xchg
sbb
cli
push
add
dec
stos
ret
jl
cmc
ja
mov
xchg
cmp
ljmp
mov
scas
mov
insl
int3
sbb
mov
and
test
push
jle
or
andl
add
stos
add
addr16
sbb
shrl
jo
mov
fstps
outsb
sarb
cmc
imul
mov
int3
stos
mov
push
adc
xlat
xchg
and
imul
push
test
shrb
sub
leave
jae
cmp
jge
lea
iret
cwtl
cld
mov
test
cmp
loope
sbb
add
xor
fwait
mov
push
dec
and
inc
pop
stos
adc
icebp
mov
xor
stos
sub
loopne
mov
imul
fmull
int3
rorb
movsb
arpl
jno
data16
add
dec
cmp
inc
and
mov
lea
mov
mov
mov
shlb
cmpsl
add
inc
js
cs
jecxz
lret
pop
out
pop
inc
mov
mov
push
or
pusha
mov
es
ret
mov
adc
mov
lods
xorb
jg
sub
sti
testl
lea
mov
rcl
repnz
fmull
adc
popa
push
cmp
flds
jno
ljmp
mov
push
push
test
and
call
push
mov
mov
push
lods
sub
cld
dec
lock
scas
sub
leave
sbb
fsubrl
xchg
roll
push
jmp
sub
cmp
mov
in
inc
cmp
hlt
cmp
flds
jmp
jp
dec
inc
inc
out
enter
xchg
sub
test
xchg
cli
mov
ret
test
or
mov
inc
cmpsb
out
push
rclb
cmp
aad
sub
inc
cmp
rorl
push
sbb
lcall
xor
jg
cmp
pop
bound
out
adc
or
dec
or
cmp
dec
cmp
add
loop
jne
es
inc
andl
dec
cmp
xchg
mov
popa
fcmovne
mov
lea
insb
das
fnstenv
mov
dec
xchg
push
out
pop
sub
out
sbb
into
adc
xchg
nop
and
xor
test
sarl
addl
sbb
pop
sbb
push
jns
scas
loope
addb
insl
mov
sbb
mov
xchg
loopne
sub
pop
fnsave
cmp
xchg
js
cmp
xchg
pop
fistpll
imul
lods
lea
push
rolb
in
bnd
mov
lcall
js
push
adc
xor
fnstcw
cmp
push
call
dec
inc
mov
pop
iret
mov
mov
into
daa
fnstsw
jnp
cmp
xlat
iret
insl
shlb
mov
cmp
dec
xchg
inc
aad
mov
int
sbb
ds
jb
sub
xchg
sbb
fstpt
mov
xchg
das
mov
and
push
in
and
js
scas
repz
mov
jno
ja
sub
ds
repnz
fisttpll
sub
pop
stc
lods
dec
loop
sarb
xor
xchg
loope
rorl
inc
add
dec
rcl
leave
pop
dec
add
jo
mov
ds
dec
into
sbb
inc
xchg
jg
gs
and
aas
cltd
mov
cmp
or
test
mov
dec
test
inc
ja
or
imulb
pop
xchg
inc
mov
mov
insb
ljmp
lret
clc
inc
mov
lcall
ret
xchg
mov
jge
xor
and
dec
outsb
fnsave
shl
loop
out
xchg
jmp
mov
fwait
scas
daa
sub
dec
negb
pop
add
xchg
and
cmp
cs
mov
stc
popa
movsl
cmpsl
dec
mov
in
sbbb
jno
iret
dec
lret
dec
addr16
jbe
inc
mov
clc
pop
cmp
sub
mov
adc
mov
test
ljmp
sub
cmp
cmp
cld
push
fdivr
push
lock
mov
dec
pop
aad
rcr
ret
fwait
inc
inc
enter
add
xor
pop
xor
xor
inc
pushf
adc
dec
pop
mov
lcall
add
fstpl
adc
xchg
inc
jnp
aas
fbstp
xor
push
add
sub
and
or
push
jns
cli
xchg
mov
cmpsl
mov
out
rolb
dec
lret
ficomps
movsl
sub
iret
sbb
movsl
sub
lea
and
cld
stos
addr16
adcb
add
icebp
push
mov
inc
les
mov
lret
pop
clc
hlt
dec
push
mov
popf
inc
mov
mov
les
adc
lods
adc
mov
fistps
in
fimuls
andb
test
cmpsb
dec
adc
add
js
lods
mov
sbb
jmp
pop
or
adc
xchg
dec
xchg
pop
and
and
or
inc
push
cwtl
insb
dec
pop
lea
pop
inc
mov
and
in
sub
out
cmpsb
lahf
xchg
jne
pop
mov
add
pop
mov
cli
out
inc
orl
xchg
sub
xchg
pop
mov
insl
int3
rorl
fs
test
jb
nop
fneni(8087
mov
imul
mov
shll
stc
addps
pop
je
fsts
int3
leave
xor
das
jno
mov
mov
xorps
jp
stos
test
mov
and
and
xor
mov
iret
mov
mov
andl
jne
test
imul
cmpsb
bound
mov
jns
int
test
cltd
lret
lcall
jmp
push
imul
adc
mov
pop
push
jns
aas
push
test
clc
and
clc
mov
cmc
xchg
cmpsb
out
lods
cli
imul
movsl
xchg
lahf
repz
mov
rcrl
jnp
enter
and
jmp
out
or
insb
jo
jl
hlt
sbb
sbb
ja
loope
or
or
xlat
hlt
rorl
cmp
mov
repnz
lret
dec
rcl
pop
inc
mov
scas
dec
cwtl
out
mov
cmc
ja
addr16
lahf
lods
cmpsb
test
dec
cltd
dec
cltd
adc
mov
mov
mov
ja
outsl
xor
test
scas
sub
fcoms
xor
jns
arpl
pop
xchg
dec
pop
jbe
bound
mov
add
out
inc
mov
push
or
leave
negb
and
ja
mov
or
lcall
push
push
loopne
insl
xor
insb
cld
cli
mov
cltd
xchg
pushf
push
pusha
jae
into
push
das
lods
sbb
in
pop
cli
or
pop
aam
mov
adcl
push
cli
repz
ljmp
jmp
dec
das
cs
push
xor
xchg
mov
mov
shlb
jmp
in
fidivrl
push
in
out
pop
repnz
xor
inc
daa
push
cmp
sub
xor
gs
mov
fisubl
add
rcrl
or
sbb
aam
fdivrl
scas
xor
jns
dec
loop
outsb
inc
cmp
jmp
mov
aaa
xor
or
ret
fistps
stos
mov
mov
pop
fidivl
add
movsl
push
xchg
int
sti
cmp
jge
mov
ret
shrl
mov
jne
mov
repnz
nop
in
enter
aas
sahf
lcall
xchg
popf
mov
push
imul
adc
cmp
stos
xchg
idivl
xorb
inc
outsb
mov
rep
cmpsb
cmp
pop
mov
push
fs
jne
cmp
dec
lds
fisubs
dec
jne
outsb
je
or
adc
mov
cmp
insb
andb
add
or
and
fldz
cmpsb
hlt
int3
outsb
cmpsb
out
jle
xchg
dec
pop
push
cs
xor
imul
sbb
pop
addr16
int3
movsb
pushf
daa
sub
cmp
adcl
sbb
in
pop
cwtl
adc
xchg
xor
inc
pop
mov
jecxz
or
push
aas
adc
xlat
or
fisttpl
jecxz
xlat
xor
nop
pop
cmp
xor
in
add
xchg
aaa
cli
repnz
adc
pop
lock
cmp
xor
aas
mov
lahf
inc
pop
popa
insl
xchg
adc
or
cmp
repz
xchg
cmp
jne
dec
cwtl
lds
dec
imul
jbe
cld
cmp
add
mov
sub
cmp
adcb
mov
fwait
pop
push
inc
out
jno
inc
pop
lret
push
dec
ss
scas
mov
pop
arpl
pop
daa
je
or
or
cwtl
jmp
mov
scas
pop
push
testl
adc
or
mov
mov
imul
inc
not
daa
pop
mov
xchg
not
xor
mov
push
inc
jns
lods
add
pop
mov
fildll
ret
in
sarl
movsb
push
mov
jno
outsb
add
cmc
mov
ds
inc
popl
ret
push
adc
mov
rclb
sub
sub
or
pop
xlat
dec
ds
xlat
enter
mov
pop
xorb
inc
pop
test
pop
xor
fsts
mov
inc
or
aas
inc
ljmp
mov
pop
jecxz
aam
ret
test
inc
ljmp
fsts
arpl
and
jns
xchg
mov
int3
or
neg
and
adc
bound
and
aad
sbb
or
xchg
inc
cmp
movsl
sub
push
lea
je
mov
popf
gs
inc
data16
jmp
pop
inc
iret
push
cltd
xlat
mov
sub
push
adc
xor
lock
ret
jl
dec
aad
or
ret
and
sbb
stc
lea
mov
push
add
dec
pop
cmp
pop
stos
pop
push
pop
cmp
sbb
inc
cmp
xchg
adc
mov
cmp
dec
or
aad
add
sbb
loopne
in
imul
push
add
lcall
sti
add
xlat
movnti
sbb
test
mov
xchg
popf
inc
cmp
inc
ljmp
mov
xchg
jg
cmp
scas
xor
cmp
push
mov
subl
scas
test
or
clc
les
outsl
pop
je
stos
sbb
fs
cmpsl
testl
xchg
data16
stos
gs
ret
aaa
imul
fsubl
orl
imul
test
ret
or
enter
insl
xchg
ret
cwtl
mov
insb
pop
inc
pop
lret
cld
add
push
xchg
mov
das
int
call
pop
cmp
aaa
int
inc
or
hlt
dec
outsl
inc
cli
fisubs
push
outsb
push
test
mov
pop
fiadds
inc
mov
mov
cmp
shlb
add
or
pop
jge
push
int
mov
or
add
rcrl
cmp
sub
test
pop
inc
xor
cld
xorb
mov
and
xlat
mov
faddp
jmp
ljmp
shll
adc
jnp
out
mov
dec
stos
ljmp
add
rorl
dec
sub
pop
sti
mov
sub
and
lret
mov
mov
in
jp
and
xor
movsb
outsb
pop
xchg
and
test
or
sub
gs
lret
inc
lcall
lea
inc
sub
mov
push
out
in
sbb
xor
test
and
jecxz
int
mov
mov
sbb
sti
insb
js
mov
mov
stc
das
shrb
xor
or
sbb
dec
loopne
jno
cmp
push
pop
pop
shrl
repz
mov
adc
xchg
cmc
or
sub
insb
push
dec
scas
cmc
xlat
lea
mov
sub
fcmovb
mov
push
flds
xchg
mov
push
adc
jnp
clc
aad
inc
mov
inc
mov
scas
mov
xchg
adc
ljmp
xchg
outsb
mov
test
xor
out
mov
call
lahf
sbb
mov
xchg
pop
sbb
pop
aad
test
mov
outsb
jbe
cmp
sbb
mov
jecxz
ja
out
mov
adc
pushf
mov
lods
and
fcompl
mov
and
xchg
movsl
and
xchg
test
in
dec
loop
loopne
and
lock
ficoms
pop
enter
sbb
mov
insb
add
repz
aam
outsl
adc
mov
insl
repnz
xlat
bound
mov
addr16
sti
inc
js
or
outsb
sub
scas
idiv
adc
xchg
xchg
xchg
pop
xchg
xor
pop
cmp
and
xchg
jp
dec
xor
and
loop
sbb
and
jge
mov
or
cmp
cltd
and
jnp
ss
mov
fisubrs
push
add
pop
in
in
dec
xchg
subb
dec
xchg
mov
add
out
arpl
push
sbb
enter
sbb
incl
nop
in
stos
jnp
push
pop
xchg
rolb
in
mov
test
icebp
sbb
or
jae
cmpsl
in
mov
xor
scas
cltd
movsl
push
clc
ljmp
pop
jmp
test
jecxz
mov
in
loop
gs
dec
cld
dec
fldt
sub
mov
les
call
cmp
sub
dec
pop
daa
xor
and
inc
fs
out
cltd
add
fcoml
gs
inc
mov
mov
sti
add
jmp
ss
mov
mov
dec
cld
loopne
jmp
jl
test
mov
ljmp
repnz
subb
pop
add
adcb
cmp
xor
loope
stos
mov
adc
bound
ret
pop
aas
mov
add
sub
mov
aad
popf
ret
into
cmp
mov
out
pop
mov
or
std
clc
mov
cmpsb
jb
inc
inc
xchg
clc
insb
mov
cltd
and
popf
inc
dec
js
inc
jle
add
dec
rcll
loopne
jbe
insl
sub
bound
xchg
lock
mov
test
jmp
jb
push
mov
xchg
inc
mov
mov
mov
mov
add
xor
cwtl
pop
mov
adc
daa
and
dec
push
pop
xrelease
dec
xchg
negb
iret
jecxz
xchg
mov
enter
xchg
jns
stos
push
mov
mov
icebp
leave
mov
adc
fsubl
in
test
dec
movsl
inc
pop
pop
sub
pop
les
add
sbb
lcall
inc
jns
or
sbb
aas
sbb
xor
push
imul
loopne
popa
xchg
mov
scas
mov
in
bound
push
lods
and
pop
outsl
inc
mov
pusha
jae
icebp
or
pop
cmp
lret
xor
es
mov
dec
jbe
cmp
or
mov
imul
bound
sub
mov
jns
cmp
mov
mov
and
faddl
fsubr
jne
xor
mov
adc
sub
andb
jae
jns
adc
xor
inc
mov
add
dec
xchg
mov
insl
inc
mov
clc
fcmovnu
test
js
aad
out
fbstp
push
adc
popa
mov
or
or
popa
push
dec
addb
mov
pop
xchg
int3
pop
mov
nop
sahf
dec
push
sbb
jns
cmp
sub
mov
hlt
jmp
ss
ficoml
mov
pop
xchg
adc
mov
ret
push
push
xchg
sahf
xchg
cli
repz
fcmovu
test
sbb
lods
add
dec
cmc
movups
aas
rcr
jg
jg
push
fstl
ja
sbb
jb
pushf
jle
jl
mov
stos
pushf
test
jmp
jmp
mov
lcall
sbb
lock
mov
loopne
dec
pop
aas
adc
mov
test
cld
out
and
or
and
fdiv
popf
sub
adcl
xor
pushf
rcl
test
jp
fsubs
mov
inc
pop
outsl
jmp
xchg
jl
int3
jge
cmp
xorb
xchg
cmp
pusha
ja
mov
fisttpl
cmpsl
in
and
add
insl
popf
imul
cmp
cmp
test
adc
fisubl
xchg
mov
inc
sub
std
push
pop
in
push
mov
inc
add
mov
lock
mov
sbbl
pop
adc
test
in
jmp
je
hlt
mov
cmp
mov
inc
mov
fwait
ljmp
loopne
sub
or
xchg
inc
mov
inc
fwait
pop
adc
outsb
dec
xchg
sahf
cmp
aad
push
imul
lret
loope
mov
out
es
mov
pop
fwait
dec
pop
mov
hlt
xlat
inc
arpl
sub
mov
rcll
pop
sbb
jge
pop
add
cmp
ffreep
mov
push
pop
sbb
mov
test
push
dec
lock
jne
mov
sahf
dec
sbb
fs
pop
mov
mov
inc
fs
jge
cmp
inc
pop
out
daa
fisttpll
repz
lret
lea
pop
lret
in
adc
push
xchg
or
cmpsb
bound
test
aaa
push
gs
add
ja
popa
jmp
mov
cmpsl
sub
mov
aad
not
mov
push
sti
add
aas
add
iret
push
clc
fcmovu
in
jl
shrb
lds
bnd
cmc
gs
ss
xchg
ret
or
fsubl
jbe
inc
andl
test
scas
adc
adc
xchg
les
sbb
jg
aaa
mov
mov
sbb
mov
dec
xchg
int3
loop
inc
push
mov
mov
fistpl
mov
aam
out
push
addr16
iret
pop
pop
cmpsl
mov
ret
push
test
call
pop
pop
out
cmp
bnd
lods
or
mov
inc
out
sub
push
inc
push
mov
pop
jns
push
insl
cmp
push
mov
mov
sub
pop
and
sub
mov
mov
test
mov
call
sbb
popa
sub
xor
pop
xor
lock
scas
xchg
stos
jg
sahf
xor
lret
cmpsb
push
jecxz
movsb
mov
mov
mov
xor
jnp
or
mov
push
scas
add
push
ljmp
sti
stos
sbb
xchg
decb
jp
jp
mov
jb
mov
mov
mov
stos
sub
pop
jns
inc
imul
imul
fcomi
ss
pushf
data16
sbb
ja
inc
mov
sub
lds
dec
aam
inc
sbb
fnstenv
scas
jge
shl
ret
leave
out
xor
mov
mov
and
fadds
daa
dec
rolb
dec
fdivrs
insb
adc
mov
push
leave
notb
jne
aas
mov
mov
add
xchg
enter
int3
add
cmpsl
or
pushf
addr16
rolb
stos
jbe
jle
jg
adc
dec
push
and
push
es
jle
je
adc
lods
popa
mov
aaa
mov
js
inc
jno
scas
add
cs
lods
mov
fwait
test
xchg
push
cmp
push
and
dec
xchg
je
gs
mov
inc
aas
test
jle
hlt
push
sahf
push
imul
insl
mov
ja
sbb
lret
je
jns
ja
ret
ss
mov
push
xorl
shrb
movsb
add
fadds
add
pusha
ja
arpl
gs
scas
cld
les
rol
or
add
mov
jmp
jb
adc
nop
movsb
mov
inc
xchg
nop
adc
xchg
sti
stos
in
mov
xor
jae
and
xchg
mov
sub
cli
vmovntpd
mov
std
in
mov
pushf
mov
push
lea
jecxz
mov
mov
and
mov
shll
sub
das
flds
scas
xlat
divl
mov
lods
xchg
push
decl
cmp
mov
out
jge
shrb
add
mov
lret
imul
cmp
test
mov
xor
mov
xorb
inc
push
stc
xchg
das
or
adc
add
xchg
loopne
stos
mov
adc
inc
std
sub
outsb
addr16
xor
je
add
pop
lea
lock
sti
fsubrp
in
and
or
iret
add
in
test
xlat
ret
mov
outsl
add
adc
mov
mov
add
jne
nop
icebp
fdivrs
jo
clc
loope
fnstenv
jecxz
pushf
or
mov
cwtl
jnp
dec
and
lods
or
popa
test
gs
mov
xchg
shrb
xchg
mov
sar
inc
xor
cli
aad
mov
cli
pushf
mov
sbb
insl
inc
cmp
loop
jmp
dec
mov
and
push
push
imul
fstpt
mov
xchg
loopne
cmp
fs
iret
fldcw
add
pop
aas
pop
xchg
jecxz
leave
xchg
clc
inc
rcrl
arpl
cli
out
sahf
mov
push
roll
add
ficompl
pop
pop
or
add
popf
adc
inc
ss
xchg
mov
shlb
cmp
mov
das
je,pt
pop
shlb
sbbb
add
jmp
lahf
push
call
mov
and
jp
mov
stos
aad
fwait
push
clc
cli
sahf
int
imul
pusha
xchg
sbb
ret
jg
pop
dec
mov
faddl
sbb
and
jge
mov
adc
sub
push
ror
xor
test
int
pushf
sub
and
cmpsl
lods
inc
and
pusha
dec
iret
clc
xchg
jb
lea
lahf
outsb
cmp
daa
stos
or
or
scas
push
cli
adc
mov
inc
cld
mov
jp
jnp
xchg
pop
push
jae
push
cli
aam
pop
int3
orb
pop
stc
xchg
add
cs
js
movsb
popa
jecxz
dec
mov
dec
mov
push
insb
adc
xlat
cld
mov
xor
xor
or
xchg
cli
mov
fisubs
dec
je
repz
sti
cmpsb
jmp
arpl
add
test
sbbb
inc
jle
enter
out
sbb
pushf
mov
pop
add
fcoml
pop
xchg
mov
xchg
cmp
mov
mov
cmpsl
cmp
in
cmp
cmc
and
cld
fstl
insb
lods
sub
hlt
mov
and
xor
jmp
negl
adc
aad
jne
fadds
test
dec
and
mov
and
stc
pop
les
jae
lea
stos
pop
xor
rcrl
outsb
xor
xor
stos
cld
lret
movsl
sbb
sbb
sahf
stos
outsb
mov
jl
mov
xchg
push
mov
lahf
outsb
lock
roll
sti
push
lods
mov
sbb
insb
sub
or
mov
pop
add
addb
xchg
sbb
andb
cmpsb
std
gs
xor
push
iret
mov
cmp
int
cmc
add
push
sub
pop
adc
outsb
in
stos
je
rcrl
inc
xor
fildl
mov
jmp
cwtl
ds
cmp
dec
adc
adc
dec
sbb
stc
sub
mov
push
or
loope
dec
adc
push
enter
push
mov
mov
mov
mov
mov
imul
push
lods
pop
jb
gs
sub
mov
sti
dec
fstpt
jns
cmp
pop
jge
pushf
add
mov
sub
aam
test
testl
stos
popf
in
lods
int
bound
cltd
fsubrs
lods
or
xchg
mov
jo
lea
icebp
jnp
cmp
ja
xchg
add
cmpsl
and
mov
pop
shrl
push
iret
or
xor
fadds
xlat
or
fists
and
sub
adc
or
mov
repz
mov
mov
call
jl
sbb
sarl
lret
xor
mov
mov
lods
dec
jmp
mov
sbb
test
enter
pop
fisubs
inc
add
ja
popa
dec
cmp
stos
push
aaa
mov
clc
icebp
loopne
add
jb
mov
clc
xchg
shl
jne
jno
adc
and
mov
js
push
daa
sti
fsts
xchg
cmp
jne
or
roll
and
jg
jnp
cmp
pop
cmp
and
add
scas
lods
divb
in
dec
xor
lods
xchg
movsb
aas
js
inc
insl
dec
enter
lret
cli
adc
mov
xorl
mov
dec
fistpl
mov
push
enter
loop
sbb
test
es
jns
sub
xchg
push
clc
lret
push
sub
adc
sub
mov
rcrb
adcb
les
sub
jp
ss
out
cmp
adc
out
push
push
leave
sti
lcall
push
add
xchg
or
mov
push
sub
inc
pop
out
xchg
pop
mov
jmp
cmp
or
jecxz
ja
inc
or
ret
inc
outsl
cmpsl
mov
test
dec
pop
cmp
mov
cmp
fld
xchg
jbe
mov
iret
sub
push
mov
bound
pop
mov
cld
in
push
out
cwtl
daa
or
repnz
lret
loop
cmc
mov
and
ljmp
push
stc
cmpsb
mov
fsts
loopne
xor
push
pushf
test
rol
and
adcb
dec
or
mov
fwait
xorb
jl
xor
pushl
cltd
pop
loopne
rol
jmp
or
out
push
push
sub
xor
mov
lock
pop
mov
jge
mov
jnp
enter
xchg
jg,pn
fwait
lret
sbb
adc
outsb
in
sbb
es
aad
mov
lock
add
push
jno
icebp
adc
mov
int3
out
sbbb
arpl
xchg
xchg
pop
mov
fiaddl
mov
rcl
icebp
sub
addl
adc
aam
dec
adc
pop
mov
push
sbb
mov
dec
inc
aam
xchg
cltd
push
sbb
cwtl
sbb
out
ljmp
mov
pop
ficomps
mov
mov
jl
lds
dec
add
gs
mov
sbb
loop
popa
pop
cltd
mov
cmpsl
mov
xchg
jo
adc
fmull
test
stos
out
adc
mov
fldl
inc
sti
cmp
repz
sbb
push
imul
imul
jge
cltd
fimull
cmp
adc
push
mov
sbb
or
out
insl
ss
xchg
xchg
jmp
mov
into
lods
lods
mov
add
and
dec
insl
push
inc
mov
popa
cwtl
subl
bound
aad
and
ljmp
adc
push
jle
jnp
jecxz
scas
insb
jne
add
mov
in
int3
out
cmp
cmpsb
sbb
fs
cltd
or
mov
jnp
mov
adc
mov
add
fcoms
xchg
ret
xor
iret
pop
imulb
push
push
sbb
jno
xor
cmp
jl
fucomp
in
rorl
bound
aad
lods
out
mov
scas
test
mov
test
pushf
jno
mov
sbb
lcall
pop
and
cmp
jmp
mov
jno
aaa
pop
xor
or
mov
adc
movsb
pop
cmpsb
mov
repz
and
sbb
lds
nop
roll
cmpsl
es
das
in
mov
mov
adc
int3
pop
out
mov
xorb
jo
xchg
int3
pop
inc
lds
jg
xchg
fcomip
outsb
mov
das
xchg
out
in
scas
lahf
adc
das
outsl
inc
ret
xchg
addr16
xor
inc
and
mov
lds
and
mov
cltd
loopne
jne
sub
out
dec
and
arpl
inc
loopne
aaa
ret
pusha
loope
lea
inc
cmc
jns,pn
adc
int3
ljmp
mov
pop
cmpsl
mov
sub
sbb
adc
pushf
mov
mov
call
mov
stos
pop
push
insl
aas
cmp
sub
mov
imul
sub
xor
popf
les
js
add
sbb
mov
mov
fwait
out
lods
xor
push
scas
test
xchg
and
mov
push
fsubrp
cmp
adcb
shlb
and
cmp
sub
xchg
mov
cmp
sub
jns
popa
pop
aas
cmpb
andl
mov
cmc
jb
pop
aas
loop
aas
lret
lret
xor
or
and
je
jne
sahf
mov
jae
mov
aam
aam
xor
push
xchg
xor
push
out
add
jb
rcrb
xchg
fildl
fwait
push
aas
cmpsb
in
loop
stc
add
enter
xchg
out
lock
sahf
add
add
bound
pop
and
pop
cwtl
and
jl
pushf
arpl
out
mov
mulb
sti
xrelease
enter
lret
cmp
jne
sbb
jp
enter
into
adc
bound
fsubl
cmc
ds
pop
or
or
sahf
ret
sahf
inc
mov
arpl
push
pusha
out
xchg
js
and
push
js
scas
mov
das
add
jmp
xorb
mov
rorl
stos
jae
js
xor
hlt
fcomip
jbe
fistl
iret
adc
mov
mov
les
out
dec
jl
iret
insl
out
sbb
mov
fwait
lret
adc
cmp
lret
mov
pop
pop
es
pop
mov
das
aas
and
or
mov
push
mov
inc
js
xchg
test
sub
test
push
insb
lods
or
sbb
movsb
xchg
jbe
mov
lods
stos
jo
jp
ja
ja
clc
mov
push
xchg
mov
adc
sahf
and
push
adc
mov
adc
inc
enter
out
sti
cli
imul
xorb
add
xor
mov
mov
inc
dec
imul
mov
sbb
mov
fildl
frstor
loopne
lcall
inc
xchg
cs
push
sbb
mov
add
mov
add
adc
cwtl
cmp
fsubrp
jb
or
pop
icebp
and
xchg
mov
aas
rcrb
movsb
jnp
push
sbb
jnp
in
sarl
out
mov
xorb
lret
jmp
imul
mov
or
negl
int3
xchg
das
shlb
cli
popa
loop
pusha
ret
pushf
mov
and
xor
adc
lock
aam
loope
fsubrs
fldt
xchg
lret
mov
insb
sub
pop
dec
pop
scas
shl
push
int3
mov
xor
add
xchg
adc
lea
stc
pop
push
je
test
insb
lock
fildl
imul
xor
add
out
inc
out
sbb
insb
hlt
sub
je
js
sbb
inc
gs
lock
jnp
inc
xor
xchg
mov
subb
sbb
cmp
std
lods
xchg
xchg
xor
dec
lcall
dec
dec
mov
push
jg
ret
pop
mov
pop
push
ja
pop
add
jne
mov
sub
mov
fwait
fwait
lods
mov
js
in
mov
mov
enter
ja
gs
aad
jae
test
test
int3
sahf
jmp
pop
iret
mov
lcall
inc
sub
nop
adc
jl
push
sbb
xchg
bnd
stos
or
sbb
mov
xchg
sub
movsl
jg
scas
movsl
mov
mov
cmpsb
mov
in
cmp
and
insl
lds
or
pop
subb
jge
jns,pt
aaa
push
pushl
sahf
inc
das
mov
dec
scas
hlt
fucom
cmp
int
pop
bound
adc
out
inc
rcrl
sub
mov
adc
add
ret
mov
xlat
lcall
inc
fbstp
fyl2xp1
inc
mov
loopne
or
mov
mov
jns
divl
insb
adc
iret
cltd
stos
pop
mov
sub
jge
adc
ret
inc
sub
loopne
jb
or
orb
cmp
call
cmpsl
cmp
loopne
add
imul
mov
jl
rep
mov
std
pop
dec
pusha
and
cltd
mov
adc
bound
scas
test
xchg
mov
jbe
add
or
cmp
push
testl
push
adc
sub
aad
cmp
ret
out
pop
mov
mov
jecxz
sub
lret
inc
sub
mov
jle
rcr
mov
fnstcw
ret
int3
xchg
mov
insb
sub
pushf
mov
push
test
push
push
iret
jnp
mov
es
pop
cmc
jmp
test
and
sbbb
pop
mov
pop
icebp
xchg
pop
jne
xor
push
gs
mov
dec
sbb
pop
inc
xor
lahf
bound
cmpb
fldt
xchg
imul
pop
ret
and
js
aam
fadds
pushf
pop
imul
push
add
sbb
data16
cmp
sub
in
xchg
out
dec
sub
jb
in
sub
mov
xchg
dec
mov
or
fistps
inc
mov
in
mov
fnstsw
outsl
jecxz
and
daa
mov
or
mov
xor
dec
repnz
out
addr16
sub
mov
cmp
enter
cwtl
jne
insb
loopne
dec
fbstp
jge
cmp
or
fs
cmp
mov
inc
or
fdivrl
aas
lock
pmulhuw
repnz
push
sub
or
jl
mov
fsubrs
rcrb
xchg
lock
stc
xor
cmp
xor
pusha
shlb
sbbb
and
mov
sbb
mov
dec
inc
sbb
shrl
mov
mov
mov
in
mov
sbb
mov
ret
pop
pop
cmpsb
fiaddl
dec
adc
xchg
negb
mov
mov
inc
in
sub
mov
inc
mov
fwait
mov
in
add
inc
xchg
fwait
lock
pop
bound
pop
xchg
pushl
test
ljmp
xchg
inc
xorb
ret
ljmp
nop
scas
rclb
addr16
add
scas
xchg
jge
mov
add
dec
add
lret
cmp
rorl
add
or
imul
xchg
cmc
push
repnz
pop
xchg
decl
mov
lret
nop
lret
dec
jbe
sub
out
aad
in
ss
push
push
pusha
nop
jg
fidivrl
pop
pop
test
sub
pop
les
xor
xchg
mov
and
xchg
sti
pop
mov
cli
jo
adc
pop
gs
fildl
rorl
bound
lahf
dec
push
iret
mov
fiadds
imul
and
pop
pop
in
out
ljmp
lods
or
js
ret
inc
pop
into
sbb
lret
iret
or
pop
iret
out
jno
xor
inc
pop
ret
and
xorb
test
push
shl
or
in
xchg
movsb
insb
mov
clc
shl
cmp
in
mov
sbb
loopne
xchg
out
pop
adc
or
push
fldcw
mov
mov
sub
jno
test
ss
xchg
mov
xor
dec
cli
mov
push
xor
mov
xchg
test
pop
lock
and
int
lret
loopne
ret
xor
aad
inc
clc
xchg
or
xor
xchg
cmc
out
mov
ret
inc
or
idivl
and
jae
cmp
or
stc
pop
push
xchg
into
dec
sub
mov
sbb
jno
push
repz
test
or
xor
lods
fisttpl
jno
cmpsb
dec
insl
dec
lret
ja
push
adc
jns
rol
add
outsb
push
arpl
mov
xorb
xchg
rcrl
xchg
fsts
enter
xchg
mov
xor
aas
lock
xchg
jg
push
adc
pusha
lods
subl
xor
pop
pop
rdpmc
mov
xchg
add
cmp
stos
cmp
pop
pop
jge
adc
dec
dec
push
push
cmp
loop
shrb
and
push
pop
push
sbb
cltd
stos
js
jle
push
outsl
pop
add
jl
inc
out
call
ficoml
int
leave
jl
xlat
and
inc
sarb
cmp
jne
das
add
in
dec
sub
inc
sbb
inc
push
rolb
in
xor
movlps
popa
and
aas
jmp
push
loope
mov
xorb
mov
popf
mov
cmp
clc
fwait
iret
mov
push
fistl
pop
and
ljmp
in
hlt
movl
hlt
lods
jmp
lret
jnp
outsb
sub
dec
ljmp
rcrb
enter
sbb
pop
jae
jmp
push
push
cmpsb
pop
sbb
adc
cmpsb
test
nop
jmp
je
ja
adc
inc
xor
inc
adc
inc
sub
iret
nop
dec
and
sub
repz
mov
xorb
mov
cmp
es
pusha
xchg
jmp
jmp
fs
lahf
mov
mov
mov
not
push
test
xchg
cmp
and
lods
mov
shrl
lcall
pop
stos
sbb
int
jle
xchg
push
test
xchg
xchg
aas
pop
lret
andl
ret
sub
sbb
pushf
cmc
or
stc
jnp
cli
adc
shl
xchg
push
fistpl
loopne
aad
sub
sbb
fimull
mov
jns
ljmp
dec
cmp
cmpsb
inc
scas
gs
ja
lods
push
xchg
out
push
inc
mov
sub
movsl
and
movsl
xlat
jecxz
or
push
dec
leave
outsl
inc
jne
or
cmp
dec
push
inc
imul
out
xor
nop
jnp
push
movsl
andb
adc
jmp
out
je
test
dec
cmp
test
sub
imul
out
fistl
xor
hlt
mov
mov
xor
int3
fwait
xor
push
iret
inc
je
xor
sti
stc
mov
sub
push
ja
imulb
cli
in
push
xorl
dec
push
lahf
jl
jl
jb
or
in
shr
mov
mov
xchg
je
mov
das
fmulp
subl
push
push
mov
mov
dec
iret
or
push
ret
dec
mov
mov
and
push
add
sti
dec
mov
ljmp
int3
jo
jle
imul
mov
jbe
sub
aas
fmulp
pop
pop
xchg
stos
xor
adc
in
mov
jno
mov
das
sub
sbb
stc
sahf
lret
cld
hlt
jns
cltd
test
jecxz
pop
test
pop
loope
fldt
xor
in
adc
push
mov
pop
mov
dec
cli
sub
dec
push
mov
outsl
shll
stos
add
mov
sti
gs
pusha
je
add
push
les
dec
and
dec
in
and
incb
adc
repnz
adc
sahf
mov
pop
and
adc
push
adc
dec
inc
test
jne
mov
fstl
ret
jns
push
das
iret
mov
out
fs
mov
ds
jno
fistpll
jg
fwait
pop
xor
sbb
and
in
add
icebp
xlat
dec
lods
mov
into
subl
add
cs
jp
jae
nop
inc
mov
ss
push
adc
aam
mov
out
mov
jmp
pop
lahf
or
cmp
mov
cli
mov
test
mov
inc
jae
fdivr
ljmp
gs
enter
cmp
or
clc
and
sti
adc
pop
outsb
les
inc
popf
popf
sbb
nop
loope
adc
cwtl
fildll
jae
jno
sbb
mov
adc
xlat
sahf
add
inc
je
mov
or
iret
lea
lea
gs
jge
arpl
jno
addb
push
shlb
pop
lret
daa
in
jecxz
and
aaa
outsb
stos
inc
movsb
pop
int3
daa
dec
pop
lret
inc
mov
out
sbb
cmpb
stos
das
push
dec
jae
cmp
lea
jne
outsb
xchg
add
mov
aaa
stos
in
xchg
push
pause
inc
dec
lods
mov
cmp
xor
pop
out
leave
jge
lret
sahf
xchg
shlb
movl
testb
rclb
jne
outsb
cmp
pop
push
pop
sub
fisubrs
movsb
es
into
sbb
in
adc
fsubs
imul
addr16
not
ss
dec
mov
adc
out
or
outsb
pop
shll
insb
lea
test
fs
test
push
push
repz
dec
adcb
mov
fsub
jbe
add
xor
ret
aaa
pop
mov
fidivrl
jmp
cmc
cmovg
mov
out
fs
mov
mov
rorb
ljmp
out
es
iret
xchg
pop
int
push
popf
inc
xor
adc
pop
stc
or
sbb
fcmovnbe
into
mov
and
aas
jmp
gs
test
cmp
ror
mov
cli
in
or
adc
mov
mov
lret
push
in
add
lods
repnz
or
shlb
pop
fstp
sbbb
or
inc
jl
popa
mov
xchg
fists
push
loopne
lret
fldt
outsl
adc
jno
pop
rol
cltd
mov
inc
lock
sub
push
fwait
pop
pop
mov
fiadds
in
rorb
arpl
movsl
idiv
push
fldl
in
sbb
mov
sub
test
pop
jb
ret
xchg
imul
adc
bound
fidivs
inc
cld
int
push
xor
icebp
jns
fstps
push
xlat
dec
std
pop
rclb
jge
sbb
add
loopne
rorb
aad
jnp
mov
dec
scas
add
sbb
mov
mov
mov
cwtl
mov
std
ds
clc
stc
stos
fstl
mov
arpl
cmc
pop
mov
jns
shlb
mov
icebp
push
dec
insl
mov
mov
mov
bound
xchg
cmpsb
jl
cld
subb
pusha
aaa
cld
dec
or
in
lcall
inc
pop
test
inc
lcall
xchg
xchg
dec
sbb
das
inc
inc
inc
out
cmp
sarl
loop
add
xlat
mov
cli
js
sub
pushf
aam
incl
cs
pop
into
dec
outsl
fwait
or
into
inc
cmpsl
sub
or
insb
mov
adc
pop
adc
int3
pop
xor
jae
movsl
push
mov
testl
subb
sbb
je
test
or
or
jle
ret
test
and
aaa
xchg
jno
pop
loop
loope
dec
data16
gs
loopne
mov
and
insl
add
xchg
jl
push
lds
cmp
xchg
loop
rorb
xchg
push
mov
xchg
push
loopne
in
mov
cltd
idiv
xchg
mov
xchg
push
sub
lret
ret
notb
lcall
adc
aas
mov
sbb
scas
subl
mov
xchg
sarl
cmp
dec
js
sub
sub
fs
sbb
pop
ffreep
xchg
std
cmpsl
adc
scas
mov
shl
popa
fisttps
stos
xor
repnz
fwait
mov
push
mov
stos
xor
adc
shrl
je
adc
out
cmovp
out
mov
push
repz
movsl
sub
shrl
pop
lea
in
pop
mov
jle
aad
and
mov
xor
xor
ja
adc
int
rcr
xlat
mov
ds
into
insl
scas
sub
addr16
jae
xor
popa
insl
inc
and
sbb
lcall
dec
std
imul
adc
adc
mov
jno
inc
jp
sbb
mov
icebp
xor
add
aas
jle
mov
leave
mov
adc
xlat
out
das
pusha
mov
pop
imul
dec
sub
xchg
and
je
sub
ljmp
mov
sbb
in
setae
into
adc
in
sub
mov
pop
cmp
mov
or
adc
add
jno
je
jecxz
call
sahf
mov
rcrl
mov
outsb
or
jno
ja
push
je
or
test
mov
xchg
push
js
iret
jne
mov
popa
popa
lahf
add
shl
lahf
xor
je
push
test
stc
adc
cmp
lock
and
or
inc
popf
hlt
mov
arpl
push
sub
ds
frstpm(287
gs
test
and
jp
call
dec
sbb
jp
push
pop
cmpsb
dec
jo
push
mov
xor
aam
pop
mov
sub
xchg
hlt
pop
push
adc
scas
mov
mov
mov
imul
dec
pop
xor
das
or
jno
adc
xor
pop
es
pop
jns
leave
jl
loop
cmp
push
arpl
sbb
cmp
pop
ds
lahf
mov
daa
daa
cmc
insl
int
repz
divl
jecxz
cmp
xor
and
loop
call
dec
mov
dec
fwait
imul
in
mov
mov
mov
push
jge
jne
cli
or
das
andb
and
cmp
sarb
mov
mov
inc
push
ret
das
stos
sbb
jmp
push
mov
cmpsl
arpl
aaa
clc
imul
sub
adc
fiadds
xlat
scas
cmc
dec
mov
pop
pushf
add
and
mov
out
mov
mov
js
andb
inc
sub
shll
test
es
and
mov
pop
or
fs
repnz
mov
popa
cmp
mov
movntps
cltd
mov
mov
sbb
or
and
add
lret
and
cmp
pop
jae
std
or
faddl
adc
in
sub
inc
add
xchg
incb
stc
xor
shrl
xorl
xor
bound
test
cmc
aam
nop
mov
sarl
sub
and
xchg
iret
xchg
push
lcall
aaa
out
and
xchg
testl
pop
dec
lret
sahf
jo
scas
sub
fistpl
or
add
stos
daa
xchg
ret
pop
ret
pop
cmp
xlat
or
or
xchg
decb
inc
call
pusha
fcmovnbe
dec
mov
sbb
movsb
jne
sub
and
roll
push
fists
aas
cmc
mov
sbb
jge
faddl
adc
mov
xchg
xchg
mov
test
lret
pop
rclb
inc
loop
nop
pop
lds
mov
in
sbb
xor
mov
mov
repnz
cmpsb
das
jns
popf
mov
adc
pop
push
mov
pushw
ss
sub
nop
add
add
or
js
sub
cmp
lea
xchg
push
enter
dec
lods
pop
ret
ds
mov
dec
add
mov
dec
andl
ret
stc
hlt
scas
pop
lret
sarl
popl
into
fldt
mov
jecxz
in
rclb
cmc
mov
daa
push
pop
fs
bound
popa
sub
test
lods
mov
push
adcb
icebp
sub
or
and
je
or
int
shr
sbb
aad
add
ljmp
dec
test
scas
ret
je
aad
lcall
lret
mov
ret
and
sub
and
negl
add
enter
xorl
jmp
faddl
mov
jecxz
addr16
lea
out
rorl
add
sub
mov
mov
inc
pop
arpl
inc
mov
pop
cs
xor
mov
into
movsl
fwait
inc
lret
inc
mov
mull
mov
inc
aam
or
scas
rep
in
out
lcall
dec
xor
mov
jb
sahf
andw
shr
arpl
and
xchg
mov
jae
lock
test
arpl
lcall
or
mov
cmp
push
dec
mov
scas
sbb
sub
popl
jbe
out
cmp
sub
clc
adc
scas
cmpsb
mov
lock
shr
stc
cmp
ljmp
dec
fcomps
dec
xchg
jb
arpl
dec
mov
ljmp
mov
popa
int3
adc
xor
mov
add
and
in
daa
pop
jg
pop
rcrl
sbb
mov
das
movsb
lods
dec
mov
mov
push
addr16
fisubs
jb
lds
sub
into
ss
cmp
add
lods
cmp
mov
adc
dec
call
add
enter
cmp
or
cmpsb
add
movsl
adc
jg
stos
adc
fwait
sbb
jne
jne
inc
or
adc
lock
sbb
mov
add
aas
fsubrl
push
out
jae
int3
scas
jge
xchg
sub
pushf
out
dec
or
repz
pop
mov
lcall
adc
gs
or
ret
mov
jns
outsb
xchg
mov
iret
inc
aad
int3
stos
add
aam
mov
or
rcrb
pop
dec
jp
inc
dec
xor
cmpsb
cmp
mov
test
dec
or
jge
sbb
popf
rol
aas
lods
lret
lcall
jp
xchg
jne
push
faddl
mov
sbb
mov
jo
rcrl
fwait
loop
imul
repnz
mov
out
sahf
fs
pop
sub
jmp
sub
xchg
fldl2e
ja
das
push
repz
lea
add
mov
xor
insb
leave
aas
stos
cmp
addr16
lds
ljmp
cmpsb
push
and
loop
push
jle
pop
iret
mov
mov
mov
xor
xchg
ja
cmpl
jb
rolb
sbb
xor
fidivrs
and
into
insl
push
ret
xchg
add
dec
pminsw
imul
lahf
jmp
popf
add
sub
mov
add
scas
mov
mov
add
push
andl
lods
lcall
push
or
shll
outsl
cmpsb
jb
sbb
push
or
mov
xchg
gs
lea
push
or
inc
inc
inc
in
xchg
cmpl
cmc
pusha
in
lahf
jle
mov
cmp
mov
jle
test
jne
mov
dec
sbb
mov
xchg
inc
push
lock
lret
cmp
and
lods
add
adc
mov
stos
imul
dec
jo
and
cli
iret
jl
push
and
sahf
outsb
gs
frstor
add
test
lds
push
dec
jle
in
scas
jecxz
xchg
add
xchg
dec
xchg
aas
sub
mov
test
mov
int3
out
idivl
pop
mov
fstpt
mov
aad
imul
push
jge
jg
mov
and
enter
pop
pop
adc
or
xchg
in
jp
call
or
leave
mov
pop
lret
inc
inc
leave
addb
pop
je
push
adc
lds
sti
fdivrs
stos
sub
dec
pop
insl
mov
pushf
fisubrs
xchg
lods
push
inc
sahf
push
cli
push
mov
dec
inc
int
adc
sub
xor
pop
shlb
cmpsb
cld
mov
fsubrl
dec
lea
push
insl
mov
jns
in
push
ret
rol
ds
dec
loope
stc
mov
pop
dec
mov
dec
roll
xchg
test
es
inc
pop
repnz
in
sti
sub
mov
add
jno
insb
stos
lods
mov
imul
inc
int3
ds
sti
and
ficompl
push
or
bound
mov
mov
popf
mov
inc
negb
out
out
imul
shrb
mov
fbld
hlt
xchg
jmp
inc
lea
fidivl
ret
out
mov
mov
sub
cmc
adc
daa
and
push
pop
and
add
mov
cwtl
inc
pop
xchg
lret
mov
sbb
mov
es
int3
movsb
mov
mov
sub
jp
cli
add
sbb
or
xor
mov
mov
lods
cmpsl
jnp
cltd
ss
xchg
into
mov
push
push
or
test
lcall
pop
mov
js
ror
in
sbb
or
push
aad
push
sub
call
push
adc
mov
jle
cmp
inc
mov
out
jge
mov
mov
lods
cmp
rcrl
jne
fstpl
jne
mov
push
sub
cmp
mov
xchg
outsl
add
add
cld
xchg
jbe
movsb
mov
or
or
jb
mov
mov
xchg
movhps
cmp
mov
imul
daa
ljmp
push
outsl
fwait
jns
cwtl
rcr
mov
mov
and
dec
sbb
push
rcrb
ja
sbb
or
sub
ss
and
jns
add
xchg
mov
les
nop
add
data16
movhps
ja
shrb
or
leave
cld
add
pushf
movl
xchg
jmp
mov
xchg
mov
xor
movsl
ret
inc
bound
lods
mov
cmp
scas
stc
int3
and
xchg
jmp
mov
mov
xchg
dec
add
push
xchg
mov
fadds
or
mov
jb
mov
addl
jns
and
jbe
jmp
movl
call
std
outsb
dec
lods
cmp
xchg
aaa
cmp
out
pushf
sub
leave
mov
aam
aaa
mov
into
pop
out
loope
jnp
cmp
in
mov
mov
xchg
pop
mov
call
test
add
test
xchg
xchg
ficoms
adc
test
shl
xor
lock
stc
add
dec
in
gs
cs
stc
or
xchg
hlt
adc
sbb
notl
call
and
sbb
loop
mov
notl
nop
push
push
jnp
mov
xor
iret
aam
cmp
repz
inc
fisubs
loop
mov
andb
lcall
xor
pop
sbb
std
mov
pop
and
jecxz
shr
rcr
out
lahf
pushf
pop
in
push
xor
add
out
ljmp
aad
sbb
inc
sub
cmp
xchg
push
xchg
fisttpll
cmp
jg
out
add
int3
sub
jb
popa
movsb
mov
rorl
push
iret
jns
jb
mov
mov
clc
pop
dec
cmp
fstpl
xchg
and
and
int
cli
add
mov
fsubr
andnps
mov
mov
sub
popa
iret
ret
aas
movsb
add
adc
sub
outsb
popf
ret
mov
mov
jl
pushf
dec
push
pop
cmp
sub
dec
add
dec
es
shll
dec
mov
fstpl
and
xchg
imul
inc
das
sarl
adc
icebp
adc
cmp
loope
pop
lds
test
nopl
xchg
aam
pop
push
push
lahf
fdivrl
imul
cmp
mov
mov
pusha
int
inc
inc
jmp
pop
lods
arpl
mov
xor
lret
js
push
xchg
testb
imul
push
orl
mov
mov
and
dec
stos
inc
pop
or
fwait
pushf
and
xchg
sbb
loope
imul
xchg
les
jmp
adc
lret
call
push
xchg
popa
ja
push
xor
ljmp
ret
jecxz
push
add
leave
inc
mov
fdivr
hlt
cwtl
xor
data16
mov
pop
adc
fisttpll
in
jecxz
adc
arpl
ret
jp
test
mov
sub
adc
jmp
sub
je
dec
adc
push
movsb
inc
sbb
jno
mov
xor
dec
mov
pop
sub
fsubp
imul
fdiv
aas
mov
dec
insl
pop
bound
pop
hlt
push
sbb
mov
dec
lret
cld
rol
insb
mov
mov
push
push
addr16
stc
outsl
jo
push
or
xlat
dec
ljmp
int3
cwtl
or
xchg
loope
mov
add
adc
xor
or
adc
cmp
xchg
push
add
mov
xor
dec
cld
cld
adc
loope
movsb
dec
xor
xor
cs
adc
jp
dec
mov
imul
lcall
jno
std
icebp
mov
push
jecxz
test
mov
sub
jbe
cmp
icebp
jnp
pop
clc
lahf
shrl
les
fdivp
inc
xchg
dec
mov
jno
scas
xorb
ja
rorl
daa
sub
mov
xor
test
adc
sbb
cs
jns
push
fisubrs
pop
xchg
lea
out
cmp
ljmp
cltd
xchg
adc
mov
outsb
pop
and
imul
adc
insl
aas
stos
pop
inc
aas
lods
loope
lcall
mov
jne
loop
aaa
rcll
push
std
enter
lret
pop
movsb
roll
imul
or
rol
pop
pop
mov
fisubs
jnp
mov
fsubrl
push
push
and
lahf
xchg
sub
es
repnz
mov
ret
rclb
adc
cmp
loope
xor
mov
stos
sti
pop
lods
outsb
imul
dec
xor
and
xchg
push
out
pop
pop
lret
pushf
xor
and
fiaddl
imul
mov
mov
das
je
insl
hlt
test
pop
pop
mov
fxch
sub
ljmp
aad
add
jo
push
and
sbb
test
js
push
mov
mov
mov
gs
loopne
push
cmp
pop
jl
in
jge
sub
dec
ret
pop
lods
add
xchg
pop
adc
ljmp
and
adc
xchg
cld
popf
orb
lods
fs
negb
pop
mov
cmp
cmp
or
cmc
test
and
push
pusha
movsb
lret
mov
mov
outsb
mov
cwtl
inc
dec
inc
fsubs
test
mov
jle
push
into
xchg
loopne
clc
cld
stos
mov
xor
jge
int
out
pop
jb
adc
aam
aaa
and
jno
pusha
mov
jb
mov
xchg
das
sub
imul
sbb
fildl
pop
mov
xchg
test
cmp
add
lret
push
out
pop
mov
xchg
les
fwait
pop
int
inc
jno
xchg
jg
scas
cmp
mov
jge
mov
and
ret
inc
imul
inc
dec
jle
lea
call
push
rol
fucomp
testl
popf
movsb
sub
stos
and
mov
loopne
mov
mov
jecxz
ret
pop
xor
loope
jnp
or
xchg
sub
and
push
imul
bound
cmp
call
xor
stc
pop
jmp
lcall
iret
xchg
test
dec
xchg
cmp
xchg
ja
call
callw
push
in
inc
xchg
dec
addr16
inc
inc
cmp
xor
jl
pop
mov
faddp
inc
arpl
loopne
mov
mov
dec
cmc
xlat
adc
icebp
mov
dec
pop
jnp
jp
stc
or
js
loopne
fsts
fdivr
int3
xchg
add
std
inc
cwtl
cmp
repnz
pop
xor
and
jmp
sbbb
xchg
rcll
insb
xchg
pop
test
mov
sub
movsl
mov
jmp
push
add
insb
subb
sbb
and
dec
add
jo
mov
cmc
lahf
adc
inc
stos
cmp
xchg
xchg
sbb
out
iret
lret
pusha
mov
cmp
pop
mov
jmp
xchg
dec
xlat
xor
ds
inc
insb
mov
dec
jle
fidivs
es
enter
pushf
mov
loopne
js
adcl
in
inc
leave
mov
jnp
push
outsl
inc
push
int3
jae
mov
adc
jns
cmp
mov
and
jmp
cmp
cli
add
fisttps
cmp
rcrb
leave
jnp
leave
sbb
movsl
push
pusha
je
in
xchg
loopne
cmp
inc
adc
pop
xchg
jne
in
shlb
inc
ljmp
sub
aaa
push
rorl
andl
xor
outsb
mov
jae
imul
jle
jne
dec
pop
and
push
mov
shrb
lahf
and
jbe
add
push
xchg
jae
cs
cmp
loopne
shlb
ss
ds
pop
fcmovb
jnp
mov
sbb
xor
xchg
in
int
icebp
add
push
pushf
mov
scas
inc
dec
push
push
movsb
repnz
insl
leave
in
call
xor
xchg
cmp
or
pop
pusha
lock
dec
xor
adc
mov
and
sub
and
mov
test
imul
bnd
loopne
jne
into
cmp
pop
or
xor
fwait
adc
fdivrl
add
inc
xchg
mov
cld
pop
dec
shrl
adc
repnz
js
rcr
ljmp
mov
xor
insb
scas
imul
dec
adc
mov
or
jmp
aam
sbb
int3
stos
into
sub
cmpsl
bound
cltd
or
lcall
jg
fisttpll
cltd
lahf
adc
movsb
sub
lock
sbb
sub
jp
and
decl
pop
mov
fbld
mov
subb
pushf
lods
in
fmuls
insl
push
mov
mov
jp
push
pop
leave
lea
or
hlt
and
xchg
mov
addr16
cmp
in
add
xor
dec
push
jnp
push
cmp
adcb
inc
sub
dec
inc
jnp
or
in
je
sbb
fisubl
fdivr
dec
shlb
fidivs
mov
jg
inc
lahf
daa
mov
mov
movsl
mov
inc
dec
xchg
mov
mov
rol
or
sub
jg
or
push
addr16
sub
pop
dec
push
sarl
xor
dec
xor
aaa
sub
xchg
imul
subw
pop
xor
out
insl
xor
std
fcmovnbe
pop
aas
ficompl
dec
jns
add
cmp
xchg
inc
inc
mov
jne
rorl
enter
cld
fcmovb
add
mov
mov
sub
and
xchg
xor
xchg
fucomip
cmp
cmp
lcall
rcr
jge
cmp
xor
or
imul
xchg
in
pop
xchg
dec
mov
lds
lret
mov
les
adc
cmp
add
lret
push
int3
pop
std
xchg
into
or
mov
and
aaa
xchg
sti
xor
insb
cmc
test
ljmp
or
fisubrl
jle
ds
repnz
scas
push
aaa
mov
lahf
mov
jmp
inc
or
mov
cmp
mov
in
dec
or
push
dec
out
popf
push
mov
hlt
sahf
shl
outsl
add
jmp
jns
out
adc
add
or
stos
add
out
adc
sbb
push
xor
shrb
pop
das
jle
imul
dec
mov
ja
sahf
mov
push
stos
mov
insb
xchg
adc
cmc
push
pop
clc
ret
btcl
cmp
xor
or
test
adc
fcomps
clc
adc
xor
les
dec
or
inc
pop
mov
mov
in
xchg
lret
das
or
push
stos
loop
aas
insb
stos
iret
loope
add
mov
adc
xchg
adc
or
xor
sub
mov
rol
jp
dec
xor
fiaddl
fistpll
jno
dec
inc
push
or
popa
test
xor
inc
or
pop
add
pop
ret
xor
sbb
dec
outsb
dec
std
out
xchg
popl
sub
xor
mov
adc
adc
out
repnz
cmpsb
pop
xchg
roll
ds
add
xchg
lcall
mov
or
push
xor
xor
pop
inc
mov
lea
pop
icebp
arpl
and
out
cmp
fisttpl
mov
push
into
push
mov
push
int3
dec
mov
adc
fdivrl
mov
lea
push
xchg
mov
shrl
test
mov
adc
xchg
sbb
jno
nop
xor
fnstcw
insl
faddl
mov
mov
sbb
insb
or
cmp
mov
push
outsl
lea
clc
faddl
mov
out
push
aam
push
cltd
mov
cmp
inc
sarb
or
xor
daa
ljmp
negl
insb
cwtl
bound
in
ljmp
mov
jecxz
sub
rol
int3
pop
and
jge
dec
xlat
sub
out
mov
imul
mov
in
push
icebp
call
and
setne
push
mov
jne
mov
fnstenv
jnp
jns
fdivl
lods
mov
mov
xor
mov
lahf
xchg
imul
sbb
jae
adc
jmp
popf
mov
in
gs
sub
cmpsb
and
fs
sub
jg
mov
lds
hlt
cmp
and
adc
adc
rcll
pop
cs
cmc
push
mov
dec
inc
sarl
pushf
xchg
jo
mov
mov
shll
sub
imul
xor
cmp
pop
push
divl
push
arpl
gs
fsubrl
outsb
jne
add
adc
bound
sbb
pop
and
lret
fsubp
test
mov
lahf
inc
xchg
sbb
push
dec
xchg
or
push
cmp
mov
inc
ss
leave
int
cmp
inc
mov
int
rclb
cmp
imul
and
das
fdivrs
movsb
sub
dec
sahf
and
hlt
ljmp
push
mov
insb
lods
add
xor
rolb
jae
adc
je
sbb
inc
ds
mov
fdiv
addr16
add
inc
shr
adc
ja
sbb
dec
je
sub
into
sub
int3
mov
lahf
xor
out
sbb
adc
in
xor
lods
in
ja
push
hlt
inc
stos
inc
jecxz
lret
xlat
xor
cmp
push
sbb
jae
in
or
das
sbb
sbb
aad
sbb
pop
cmc
xchg
jnp
xor
push
cmpl
fs
repz
pop
and
xchg
in
sub
push
test
push
mov
dec
mov
add
test
push
pusha
xchg
sbb
je
xor
gs
insb
aam
xchg
and
incb
ds
cltd
adc
cmpl
mov
pusha
cmpsl
shll
sbb
insb
push
stos
or
inc
cmp
popa
push
adc
pop
cltd
popa
es
arpl
fildll
sbb
sarb
mov
mov
xlat
rolb
dec
or
cltd
call
fsubrs
mov
and
jecxz
add
cld
sub
lods
imul
repz
into
icebp
test
adc
call
das
sbb
and
sbb
mov
and
insb
in
in
adc
daa
dec
jne
ja
and
leave
and
fidivs
rcr
dec
mov
cmpsb
fldt
test
pop
popa
mov
ficomps
lcall
stc
and
in
js
xchg
mov
sbb
call
add
rorb
pop
mov
jne
lcall
push
ret
leave
sub
inc
pop
ret
out
lret
jecxz
pop
outsl
lock
push
push
jecxz
mov
icebp
in
test
lock
popa
lods
es
cld
xchg
and
adc
negb
ret
inc
aas
mov
andb
inc
pop
leave
mov
ret
out
in
ficoms
lods
int
xchg
notb
add
fbstp
push
pop
push
and
sbb
hlt
lret
call
and
inc
hlt
dec
ror
loop
imul
or
pop
push
out
fmull
fwait
mov
test
pop
mov
add
sub
ret
pop
push
jp
ljmp
popa
xchg
pop
xor
sahf
loop
jno
jo
imull
pop
push
testb
cmp
mov
push
popf
ret
or
xchg
push
mov
popa
bound
iret
pop
ret
add
jmp
inc
jno
push
mov
imul
ljmp
inc
sbb
push
in
mull
je
and
ds
xor
push
xor
pusha
outsl
lret
in
cmpsl
into
je
push
pop
mov
imul
lds
xchg
dec
int3
shlb
push
sbb
fucom
movsb
popa
ret
xchg
subb
sbb
jg
inc
adc
std
mov
jmp
mov
and
pusha
push
imulb
ret
clc
inc
fcomps
sub
mov
sub
lods
inc
pop
mov
adc
shll
fsubs
pop
cld
pusha
fldenv
mov
in
repnz
jne
les
pop
sub
jge
jb
push
cmp
sti
cmpsb
enter
mov
out
xor
outsl
cmp
popa
leave
pop
icebp
or
jno
fistpl
or
out
mov
sbb
xlat
xor
movsl
jnp
call
sub
int
fcomps
jne
push
sbb
jmp
test
xchg
dec
xor
pop
stos
mov
lret
clc
adc
adcl
jb
cmp
scas
adc
inc
mov
orl
add
push
push
inc
fyl2x
inc
xor
jnp
stos
sub
jle
filds
mov
and
test
call
push
pop
cli
aas
outsb
aam
sbb
xchg
in
std
je
pop
subb
mov
es
and
in
add
mov
sahf
lahf
movsl
jp
cmpsl
push
pop
je
in
or
cmp
xchg
movsb
pop
std
int
into
cwtl
push
mov
les
jp
test
jmp
bound
dec
fwait
push
insl
stos
mov
xchg
fsubrs
push
mov
and
mov
sub
jecxz
adc
shl
popf
jecxz
push
lahf
fidivs
sbb
js
pusha
push
jnp
lods
add
adc
adc
into
mov
cld
jbe
inc
cwtl
jae
or
sub
or
ret
push
pop
xchg
call
cmpsb
cmp
xchg
add
mov
push
in
ret
sbb
xor
add
push
sbb
out
jne
xchg
cli
fdivl
or
orb
dec
pop
jno
sub
out
call
in
xor
test
testl
mov
iret
mov
test
add
or
jmp
imul
jge
je
xchg
je
jp
push
push
lods
sbb
sti
inc
out
jecxz
lods
fnop
pop
jecxz
shrb
lea
aam
faddp
mov
add
xor
aaa
inc
xchg
sub
jl
rdpmc
das
jg
mov
mov
dec
sbb
push
stos
mov
cmp
lahf
adc
or
test
jg
arpl
push
sahf
scas
cmp
stos
xchg
adc
jl
dec
pushf
dec
jbe
fiaddl
rorb
mov
and
movsb
sarb
xchg
imul
mov
sbb
mov
or
jmp
lret
cmp
int
mov
aas
fwait
add
mov
dec
jmp
cmp
cmp
pop
imul
sub
xor
das
andl
jno
inc
out
ja
jns
inc
scas
std
cld
add
jb
push
test
pop
adc
dec
dec
xchg
sbb
xchg
out
xchg
in
fistl
ja
cli
xchg
xchg
xchg
je
ljmp
and
pop
pop
push
out
lcall
out
mov
sbb
mov
je
aad
inc
cmp
inc
imul
xor
ss
fldl2t
das
adc
cmpsb
rorl
cmp
movsb
mov
insl
cmp
ret
mov
pop
test
mov
sub
call
sbb
shr
aas
sbb
fwait
push
ds
sbb
int3
lahf
sahf
xor
fildll
int
xlat
addr16
jno
out
pusha
adc
out
ret
aaa
pop
xlat
mov
ret
push
mov
imul
das
call
shrl
pop
frstor
cmp
pop
mov
cmpsb
add
nop
xchg
outsl
or
fsubs
cmp
push
xchg
sbb
pop
sbb
in
mov
xchg
std
out
or
out
out
mov
pop
pushf
xorb
les
or
out
dec
popf
adc
jl
or
adc
sti
jb
outsl
repnz
loope
push
xchg
mov
add
loop
movsl
fisttpll
xchg
adc
mov
mov
pop
clc
add
inc
out
mov
mov
inc
push
mov
or
in
dec
mov
stos
xor
ret
xchg
es
pop
fcomip
test
pop
cmp
adc
je
stos
lods
pop
add
addb
and
sub
push
insb
fdivp
cltd
in
push
jbe
add
lret
sbb
mov
hlt
imul
in
mov
inc
fsubp
adc
cmp
inc
in
dec
aad
adc
mov
xchg
ljmp
pop
pop
stc
dec
in
xchg
inc
das
dec
jno,pt
inc
std
pop
and
add
es
xchg
clc
push
fldl
stos
mov
xor
mov
or
xchg
lods
flds
push
jbe
movsb
fcos
lahf
pop
pop
lods
cmp
dec
test
mov
ja
adcl
cld
mov
cltd
push
insl
popf
sub
sbb
std
mov
fdivs
add
int
gs
lock
xchg
pop
and
xchg
sbb
inc
xor
lahf
cmp
push
repz
push
not
repz
jge
fsub
dec
pop
pop
sub
lods
fs
add
add
fstps
lock
adc
mov
xchg
lods
jae
push
push
in
daa
adc
popf
rcrb
in
xor
cmp
cmc
mov
gs
sbb
mov
pop
inc
push
ret
ret
mov
inc
cmp
clc
mov
inc
inc
dec
arpl
je
push
addr16
repnz
fwait
orb
add
xchg
out
call
sub
decb
or
sbbb
adc
cmpsl
mov
outsl
notl
mov
add
mov
sbb
enter
cltd
jg
call
mov
daa
xchg
mov
idiv
adc
lods
aaa
cmp
lds
mov
xchg
push
test
xchg
adc
stc
rorb
out
adc
mov
push
mov
mov
inc
rcll
shll
cld
in
stc
cmp
jp
daa
and
mov
ss
hlt
jp
filds
cmp
dec
sub
xchg
fidivrl
js
cmp
clc
inc
rcr
fsubs
push
call
or
mov
mov
xchg
shl
xchg
mov
fldl
test
mov
lret
fld
lahf
test
dec
cmpsl
cmp
sbb
inc
ss
xchg
lea
mov
daa
mov
mov
int3
mov
push
ljmp
popa
addl
inc
sbb
out
xor
nop
inc
jl
add
adc
in
push
jg
xchg
mov
cmc
lds
movsl
ret
push
and
loope
and
outsb
dec
xor
or
mov
and
sbb
inc
pop
ret
sbb
pop
out
rorl
jae
or
out
loop
aad
sub
or
push
enter
xchg
jae
xchg
idivl
aam
repnz
pop
mov
add
fwait
xor
pop
sti
cmc
mov
and
shr
js
push
xchg
add
mov
inc
in
xchg
mov
dec
push
inc
jle
popf
push
cmpsb
jecxz
add
mov
insb
mov
scas
lea
add
popf
sub
mov
push
dec
pop
shrb
push
cld
sbb
cmp
aam
sub
dec
jo
jo
fwait
clc
ds
jbe
pop
lock
rdtsc
rcl
cwtl
clc
mov
sti
pop
mov
add
ss
in
out
insl
or
sub
push
sub
ljmp
test
dec
inc
xor
je
cmp
mov
sbb
mov
inc
mov
testb
test
rclb
dec
int
pop
or
xor
sbb
pop
sub
push
int
cltd
popf
pop
movsl
lock
imul
add
ds
test
or
add
pop
push
mov
test
mov
cld
test
jl
and
dec
insb
bound
loop
fcoml
inc
xchg
add
rcll
fmuls
roll
popa
cmp
ja
sub
popa
pop
cmp
rcll
push
clc
cmp
dec
enter
das
adc
xor
cld
cmp
sub
add
pushf
shlb
lods
push
adc
test
decl
mov
mov
jle
aaa
cmpsl
pop
repnz
push
imul
inc
imul
scas
aaa
out
rorb
loop
mov
inc
test
shrl
in
ret
test
pop
stc
and
add
dec
psraw
jg
mov
xchg
adc
jns
jle
js
ror
mov
in
shll
and
adc
les
and
shlb
xlat
adc
mov
jne
jne
lods
lock
mov
jecxz
dec
imul
mov
inc
push
and
js
loope
jne
in
lods
mov
fs
shl
ret
inc
addb
mov
movsb
cmpsl
ret
xchg
push
xchg
mov
mov
aas
enter
inc
hlt
aad
movsb
push
xor
pop
adc
push
call
loop
scas
pop
test
sub
adc
scas
mov
ljmp
repz
mov
xchg
cmp
xchg
inc
jbe
mov
subl
das
xchg
fcom
xor
sub
mov
shrl
mov
push
or
stos
lea
xor
ror
pop
pop
data16
aas
and
and
xchg
push
inc
cmp
repz
inc
repz
mov
insl
pop
repnz
jmp
sub
iret
lea
mov
and
adc
cmpsl
lods
add
stos
int
sub
je
push
dec
xchg
sbb
lds
mov
aam
or
sbb
mov
pop
fisubrs
in
mov
cmpsb
or
enter
lcall
pop
test
jnp
mov
mov
xchg
addr16
push
ret
fisubl
xor
jns
cmc
xor
cmp
pop
jnp
push
lahf
jg
and
js
lret
out
push
add
xchg
sub
data16
mov
lahf
pop
loopne
jo
clc
jmp
inc
and
push
sbb
push
pop
cmp
sahf
jno
in
jl
aas
sbb
icebp
ret
cmc
add
xor
mov
dec
test
scas
loop
test
push
imul
pusha
mov
loop
sbb
cwtl
jg
clc
in
jl
xchg
cli
cld
push
mov
cwtl
add
loopne
mov
call
mov
adc
cmc
and
add
inc
lds
addr16
add
jecxz
cmpsl
lcall
std
repz
sahf
add
int3
push
ds
mov
inc
mov
loope
call
sti
popf
frstor
xchg
sub
xchg
mov
sub
shr
cmpsl
inc
mov
cmp
or
and
dec
jb
adc
inc
call
mov
rol
nop
mov
ret
mull
repz
dec
fs
ret
push
in
sbb
in
and
sub
adc
in
mov
xchg
mov
gs
repz
add
fistps
jne
ja
push
sub
incl
sbb
nop
push
adc
lea
mov
push
adc
sub
js
faddp
mov
jne
leave
jg
push
mov
test
ret
popa
pop
notl
or
inc
lock
loop
data16
repz
out
fs
call
cmp
mov
rorl
mov
test
adc
push
mov
xorl
iret
push
push
sbb
cmc
mull
lods
mov
and
push
cmp
xor
push
mov
xchg
ljmp
sbb
cld
stos
fdivs
data16
jmp
out
cli
mov
add
ljmp
lret
dec
std
xchg
mov
jb
les
les
je
mov
inc
fwait
adc
add
and
cli
dec
in
add
rclb
cld
and
xchg
inc
aad
pop
icebp
push
pop
dec
mul
adc
data16
lret
pushf
jnp
das
imul
lock
movsb
xchg
lods
incl
data16
mov
lret
sahf
testb
xchg
daa
lcall
pushf
fs
pop
pop
icebp
daa
out
ss
sbb
lods
mov
jl
add
scas
mov
xchg
and
shll
sub
stc
ss
cmp
mov
stos
ret
jo
enter
or
adcb
xchg
push
in
ljmp
jp
ljmp
orl
jl
arpl
dec
or
lock
repnz
pop
cmp
sbb
jno
dec
cs
push
mov
jmp
jmp
iret
pushf
xor
push
mov
and
inc
loop
mov
fcomp
mov
sub
das
fbld
pop
inc
je
nop
lds
pushf
outsb
jne
pop
add
adc
mov
jecxz
aaa
mul
sub
fwait
push
jnp
leave
aaa
push
fisubrs
adc
out
scas
in
aam
das
in
mov
jns
adc
pop
push
xchg
orb
pop
dec
adc
xchg
adc
or
jg
cmp
push
and
inc
movsb
aam
mov
mov
lea
sbb
pushf
test
rcl
movsl
add
xchg
ljmp
sub
cmp
pop
inc
sbb
arpl
fists
in
add
mov
xchg
cld
in
rorl
mov
dec
xor
mov
adc
addr16
mov
in
or
dec
mov
pop
mov
aas
daa
mov
or
rclb
insl
cmc
sbb
cmp
dec
jae
sub
dec
fstp
loope
push
stos
cmp
push
dec
mov
push
loope
mov
xchg
fdivs
jae
mov
fstpl
in
out
dec
rol
lock
sti
mov
mulb
mov
jbe
sbb
mov
adc
daa
js
loop
movl
cmp
scas
fnstenv
mov
add
lret
out
sahf
cwtl
js
and
seta
push
cmp
sahf
add
push
mov
or
or
mov
lahf
fs
shll
cmpsl
cmc
lret
int3
cmp
stos
add
cmp
and
mov
stc
and
sbb
mov
out
sbb
xchg
in
mov
add
dec
ret
xchg
pop
push
add
mov
nop
jmp
stos
leave
addr16
jne
ds
cli
push
cmpsb
xchg
pop
movsl
dec
mov
or
enter
cld
push
rcr
rcll
loopne
mov
call
jbe
addr16
lds
gs
or
xchg
dec
mov
dec
out
cmp
xchg
enter
push
ja
xchg
or
xlat
daa
cli
xor
add
push
xchg
out
add
push
addl
fs
int3
icebp
inc
push
cli
pusha
mov
cmova
push
mov
mov
cmc
sbb
aam
cmpsb
xchg
mov
xchg
sbb
push
xor
dec
push
push
cmp
jo
cs
jp
jp
ds
mov
gs
or
shl
inc
daa
lds
rcrl
xchg
push
inc
inc
mov
mov
pushf
pop
xchg
je
cli
mov
dec
jge
xchg
xor
scas
push
jne
scas
aas
and
xor
pop
rol
pop
inc
dec
ror
in
jne
adc
and
mov
mov
dec
push
or
jne
sub
test
vpsllq
call
mov
shlb
mov
mov
mov
lods
push
dec
push
lcall
data16
sahf
fists
insl
dec
jmp
std
fnstsw
and
aas
in
fstps
sbb
cltd
loope
sahf
fldl
and
jbe
mov
xchg
call
mov
pop
mov
jmp
rcll
enter
ficoms
fnstenv
push
imulb
movsb
inc
pop
sub
jne
or
cmp
dec
adc
dec
jae
push
scas
inc
dec
shlb
inc
cmp
shll
xor
test
out
mov
jne
rcrb
std
hlt
sbb
jb
adc
cmp
aaa
popf
out
in
in
fildll
loope
mov
ja
add
jmp
xchg
int
mov
xor
and
rolb
les
and
cmpsl
cmc
add
adc
xor
imul
pushf
cli
daa
or
aam
cmpsb
xor
or
in
or
jnp
into
ja
clc
xchg
enter
mov
rorb
or
push
stc
lcall
movsl
out
lock
and
mov
aaa
jb
xchg
inc
int3
jge
mov
xor
jecxz
aaa
sbb
addr16
xchg
mov
roll
mov
sub
mov
inc
mov
push
cltd
xchg
daa
cld
cmp
jecxz
ja
cli
test
loopne
into
mov
clc
loop
sarl
cmp
jo
fiadds
inc
jecxz
add
jnp
enter
mov
aad
dec
loopne
stos
jmp
lahf
xchg
push
add
pop
fs
les
stc
mov
out
dec
cmpb
fisubrs
sti
adc
jae
data16
xor
sbb
rcl
jmp
data16
icebp
adc
gs
inc
in
mov
ja
ljmp
cwtl
int3
nop
mov
into
idivl
shlb
stos
sub
out
negl
and
xor
push
adc
cmc
ret
not
scas
pop
popf
aad
pop
push
mov
sbb
imul
loop
push
fadds
orb
push
ss
mov
lock
outsb
jle
sbb
xchg
mov
loop
sbb
or
fmuls
mov
subl
adc
int3
inc
xor
xchg
shlb
ret
adc
pusha
pop
jo
test
push
inc
in
icebp
sub
fdivrs
cwtl
fwait
xor
mov
movsb
and
and
mov
adc
loopne
jno
pop
mov
fimull
mov
fdivl
dec
loope
lahf
pop
call
and
pop
aas
mov
hlt
push
out
cmp
out
jg
or
lea
lret
movsl
mov
xchg
sub
repnz
mov
lcall
dec
out
mov
sbbb
and
imul
xor
sarb
xor
mov
pop
notb
xor
add
arpl
filds
adc
sbb
cmp
nop
rolb
xor
andl
dec
fwait
dec
call
jp
ds
out
mov
jmp
aaa
and
popa
stos
test
and
mov
cld
and
mov
sub
ret
xor
icebp
icebp
leave
cmpsl
insb
sarl
aas
xchg
xchg
adcb
sub
loope
adc
fs
mov
notb
push
adc
push
pop
test
mov
mov
xchg
xor
fsubs
cwtl
dec
mov
cmp
je
shlb
in
pop
mov
shll
test
xor
xor
ja
fidivrl
push
push
pop
lret
or
daa
and
xor
pop
pop
pop
inc
push
pop
cmp
mov
or
stos
sub
test
movsb
sub
call
repnz
rcll
jge
and
sbb
incb
in
enter
sarl
cmp
pop
test
push
jae
jle
cmp
adc
in
mov
and
push
adc
push
mulb
ljmp
fsincos
scas
pushf
mov
mov
sub
sub
xchg
xchg
dec
outsl
xor
sbb
jecxz
dec
add
xchg
inc
jmp
sub
insl
jecxz
ss
xchg
cmp
popa
push
mov
lock
cmp
int
sbb
add
insl
or
sbb
adc
mov
clc
and
adc
push
or
fldcw
insl
push
out
idivb
pop
lahf
cs
lds
inc
jp
push
mov
pop
mov
fnstenv
flds
in
xorb
mov
dec
xor
push
loope
jmp
or
das
sub
popa
scas
out
fsubr
dec
lods
xor
shlb
cmp
data16
push
sub
mov
out
mov
sbb
cmpsb
push
movsl
xor
sbb
sarl
lea
stos
arpl
xor
xor
mov
jecxz
inc
or
iret
sub
mov
imul
fisttpll
adc
mov
mov
push
mov
and
cltd
pop
aaa
jnp
lcall
mov
dec
idivb
xor
cld
addr16
inc
push
mov
add
out
pop
and
xor
mov
mov
inc
mov
lcall
int
rcrb
xor
rorl
cmc
mov
pop
and
mov
fnstcw
adc
sbb
mov
std
mov
pop
popa
rclb
mov
sub
dec
shrd
shrl
sub
push
and
push
lret
inc
lmsw
push
aam
xor
clc
je
sbb
mov
out
cmp
movsb
mov
movsb
int3
or
sar
repz
stos
out
inc
in
jle
xlat
in
dec
push
repz
mov
clc
repz
jl
faddp
out
pop
jecxz
cs
push
pop
mov
lds
sbb
aam
jne
sti
inc
movsb
clc
and
pop
mov
mov
push
push
mov
or
xchg
pop
dec
mov
ja
xchg
icebp
adc
or
mov
loope
sub
loop
adc
add
adc
fldt
add
packssdw
fs
dec
shrb
pop
es
js
cmp
or
sbb
mov
shl
mov
mov
scas
stc
mov
ljmp
push
or
mov
shr
adc
push
outsl
xchg
add
data16
xor
scas
xorl
leave
popa
loope
inc
cwtl
lods
loopne
xor
cwtl
mov
fstl
les
add
clc
mov
cmpsl
into
mov
das
in
sbb
mov
or
gs
jp
int
or
addr16
pop
add
pushf
push
dec
cwtl
xchg
xor
sbb
rol
int
push
movsl
pop
mov
cmp
lods
out
pushf
lcall
mov
adc
sbb
std
sub
inc
xchg
jmp
push
cmp
jge
lret
sbb
and
ror
xor
fwait
pop
mov
mov
gs
adc
in
push
dec
mov
jmp
adc
sbb
xor
in
repnz
push
test
movsl
mov
mov
push
mov
sub
imul
pop
mov
adc
out
sub
push
sub
push
shll
in
mov
in
add
sbb
jns
out
mov
mov
out
cmp
jnp
iret
mov
xchg
push
cmp
sarb
push
out
in
push
push
push
and
lds
xchg
fmulp
jb
shrb
das
adc
mov
push
repnz
es
pop
mov
gs
push
xchg
dec
lret
jb
push
aas
gs
pop
pop
insl
mov
add
mov
incl
jmp
xor
mov
mov
call
adc
and
into
sbb
cli
fcoml
mov
jno
data16
loopne
in
cmpsb
mov
jns
imul
mov
jns
mov
add
inc
aaa
fistps
add
push
jge
sbb
mov
mov
adc
test
jnp
clc
lods
stc
add
or
aam
es
aaa
cmp
cmpsl
add
aas
add
cmc
mov
pop
pop
andb
out
std
mov
mov
push
popa
fnstcw
insl
mov
inc
push
in
sub
cld
arpl
add
jne
pop
dec
lods
fdivl
or
jo
mov
pop
sub
outsb
sbb
out
and
mov
fnstsw
adc
cld
negb
iret
xor
dec
mov
xor
jae
int3
int
roll
call
cmp
divb
js
jbe
inc
jecxz
inc
sub
cwtl
push
das
in
imulb
fcoms
push
push
leave
adc
ljmp
xor
mov
and
push
out
push
gs
adc
xor
pop
ss
jle
nop
push
out
adc
mov
pushl
jnp
shlb
nop
mov
sub
cltd
call
push
ds
ret
xchg
inc
loope
outsl
xor
sub
ret
dec
adc
mov
pop
pop
push
jmp
mov
jb
xor
imul
fwait
in
gs
mov
mov
mov
mov
hlt
nop
loop
xor
cld
in
lret
std
lods
clc
cltd
into
mov
adc
push
sti
aas
adc
in
pop
sarb
out
lret
clc
nop
mov
xlat
mov
add
xor
inc
dec
push
es
adc
xor
mov
sub
sbb
out
mov
jne
imul
popa
mov
pop
cmp
fbld
push
int
fldl
cmpsl
sub
cwtl
cmp
mov
mov
cmp
or
xchg
out
cs
addr16
pusha
lods
popa
push
mov
pop
xchg
test
dec
pop
nop
cmp
rcrb
cmp
push
mov
mov
push
jae
icebp
jae
and
imul
adc
insb
or
jmp
or
mov
mov
mov
test
dec
shrl
jnp
fs
pop
sub
sub
insb
sarb
push
clc
xchg
add
push
les
out
imul
or
into
push
push
push
cmp
dec
push
outsl
and
cwtl
xchg
mov
adc
subb
jp
out
xlat
sbb
cmpsb
cmpsl
das
test
cld
fsts
cmp
insb
push
insl
pop
xlat
iret
hlt
orb
movsl
inc
mov
into
dec
jo
nop
adc
sub
or
and
push
adc
mov
fstpl
adc
mov
xor
test
push
sub
or
stos
jne
cmp
fistpl
jl
fiaddl
push
inc
pop
push
repnz
xchg
xchg
insl
lret
sub
and
shrl
pop
ror
out
data16
pop
push
std
inc
mov
fsubl
push
dec
dec
add
test
mov
fs
aam
mov
mov
ret
cmpb
stos
addb
add
jp
mov
shrl
aas
inc
aad
lds
inc
addb
pop
jae
pop
adc
hlt
in
xlat
xchg
mov
sub
push
dec
cmp
divl
mov
std
mov
pusha
mov
cmp
repnz
int3
lcall
sbb
sbb
mull
pop
aas
dec
mov
in
cmpsb
ljmp
int3
xor
test
sti
das
dec
mov
xor
outsb
jae
add
insb
ja
mov
add
inc
scas
dec
jbe
rcrb
lods
dec
xchg
pop
pop
jno
orl
std
das
lret
sub
xchg
adc
scas
fmuls
inc
aam
aaa
dec
mov
fdivs
inc
sub
jno
push
xor
push
lret
out
adc
add
in
xchg
jbe
aam
xor
and
push
sbb
scas
inc
out
sbb
stc
inc
or
cmp
mov
dec
out
cmp
dec
into
popf
sbbb
sbb
test
aaa
iret
lods
add
push
cmc
xor
movsb
movsl
inc
lods
in
lahf
cmpsl
push
xlat
cmp
sbb
ds
add
xchg
shlb
mov
shlb
jg
adc
jl
sbb
fnstsw
dec
adc
pop
xorb
pop
fdivrs
add
test
mov
jmp
aad
sbb
and
push
popa
test
loop
es
dec
inc
fs
testl
cmp
inc
push
fisubrl
dec
sbb
cmpps
xchg
dec
shr
hlt
cmp
dec
fadds
cli
sub
insb
mov
dec
pop
stos
xchg
mov
and
push
xchg
mov
pusha
repnz
pop
jne
mov
fdivl
jnp
push
ret
arpl
pop
std
jb
repz
imul
mov
popf
pop
imul
jo
push
int3
int
or
jp
or
xchg
js
fidivs
pop
icebp
jl
xchg
lret
fdivs
popf
dec
sub
push
add
movsl
ja
mov
xchg
jl
inc
stos
push
jno
aam
jg
adc
and
xchg
xchg
shrl
imul
pop
mov
inc
add
adc
fcomip
mov
lds
mov
shl
xlat
dec
mov
shrb
popf
sarb
shr
cltd
jmp
jecxz
xchg
movsb
add
shll
add
in
adc
lahf
aam
jmp
test
pop
nop
xchg
hlt
fucomp
cs
enter
aad
jmp
cld
sub
sub
add
add
jo
test
std
inc
xor
daa
pop
jge
fisttps
cmp
ss
jge
inc
push
in
pop
xor
popa
loop
pop
es
loope
push
lret
in
xor
jbe
outsl
cld
or
add
add
xlat
pop
jo
pop
and
sub
loop
xchg
pop
cmpsl
fsubrp
xor
shl
lret
mov
pop
popf
jl
ret
lds
sbbb
arpl
push
out
out
push
popa
jmp
push
mov
sub
mov
sti
sub
hlt
mov
cmp
sub
ss
cmp
int
and
jmp
idivl
jno
scas
and
addb
loopne
xchg
jecxz
popf
inc
mov
test
jb
and
push
lcall
mov
inc
mov
into
leave
out
xor
push
cmp
fistl
stc
cmp
insl
popa
mov
jnp
add
push
jo
mov
push
push
xchg
and
cwtl
cmp
icebp
ljmp
xchg
test
incb
push
or
repz
push
inc
iret
push
mov
pusha
loope
push
sub
mov
dec
fists
xor
or
sub
aad
cltd
pop
outsb
sbb
into
negb
decl
jmp
xor
pop
xor
mov
sbb
cwtl
packsswb
pop
cwtl
jmp
aad
sbb
andb
adc
and
jnp
stc
add
loopne
xchg
dec
inc
sbb
rcrl
pop
jae
xchg
pop
andl
or
inc
nop
jne
inc
xchg
mov
nop
dec
nop
cltd
cld
push
das
aas
xor
mov
into
add
lahf
ret
enter
ficoms
in
mov
add
inc
inc
pop
popa
adcl
dec
sub
mov
mov
sahf
cli
ret
jns
inc
dec
sbbb
and
dec
pop
fwait
xchg
stos
mov
push
lods
adc
not
je
pcmpeqw
in
jo
jb
rcrb
into
mov
das
fsubrs
xor
inc
pop
arpl
jae
jle
add
lret
pushf
adc
pop
mov
adc
xchg
in
ss
iret
push
push
push
sahf
or
xor
cmp
lret
mov
pop
xchg
shll
jb
or
lods
mov
cld
dec
in
daa
and
shll
jo
dec
push
push
jl
mov
shr
loope
inc
sbbl
data16
in
cmpsb
mov
mov
jg
push
jg
repz
mov
jecxz
adc
push
pop
test
cmp
cmp
mov
pop
mov
mov
out
rorb
pop
lods
ret
stos
aad
mov
shll
dec
adc
stos
mov
scas
andl
pop
and
xchg
inc
insl
out
cmpsl
pop
push
push
sbb
and
aaa
lea
adc
stos
cmp
pop
movsl
lcall
adc
mov
mov
sub
inc
out
bnd
pop
das
call
push
dec
fidivrs
lahf
pop
bound
adc
sub
ret
mov
jle
or
xchg
jae
test
aas
dec
and
aad
jo
movsl
push
or
mov
ret
lcall
sub
mov
push
test
ds
push
pop
loopne
fiadds
push
mov
cmp
ret
cmp
daa
jno
mov
push
cwtl
jl
push
jns
addr16
add
xor
push
loope
std
xchg
loopne
push
fsubl
push
aad
cs
mov
pop
movsb
stc
loope
je
into
imul
in
scas
aam
mov
add
and
cmp
sub
test
sub
lods
mov
xchg
pop
jg
fabs
fldt
xor
add
pop
pop
gs
push
sub
out
dec
dec
push
lods
push
mov
adc
rolw
pusha
pop
shll
lea
loope
jo
mov
push
add
arpl
cmpsl
pusha
push
pusha
shl
int3
xchg
pop
xchg
xlat
jno
dec
pop
test
pop
mov
pop
inc
add
adc
ds
dec
jle
fwait
ds
xor
jp
push
movsb
xor
xchg
jne
les
imul
xchg
mov
add
enter
add
pop
mov
pop
or
pusha
xchg
insl
lret
ds
cmp
pop
mov
cli
ljmp
xchg
push
mov
xor
sub
inc
lds
movsb
pop
add
mov
and
les
and
decl
jb
add
jge
mov
fistl
je
std
xor
mov
fs
cmp
jae
fisttpll
jo
xchg
mov
leave
call
cld
cmp
out
cmpsb
popf
sti
inc
jecxz
daa
fsubrs
es
xchg
leave
arpl
cli
testl
cwtl
test
addr16
aam
xchg
sbb
leave
add
aaa
popa
cmc
repz
mov
ja
sbb
mov
hlt
or
ret
inc
ljmp
push
jmp
std
pop
test
daa
dec
movsl
mov
fbstp
mov
xchg
mov
mov
popf
push
xor
push
ss
rcl
add
sub
aad
hlt
adc
push
sub
aaa
lret
mov
lea
idivl
xchg
jp
or
mov
mov
enter
mov
cmpsl
add
or
mov
push
imul
pop
sar
xchg
sbb
mov
rclb
ljmp
ljmp
pop
dec
push
rorl
cmp
call
jns
sub
sub
add
pop
pop
in
pop
pop
inc
icebp
out
shl
dec
lret
or
push
sbb
mov
add
mov
mov
pop
popf
test
js
fistps
icebp
dec
push
xchg
push
xor
loopne
adc
sbbl
test
pop
inc
pop
hlt
sbb
inc
jl
pop
push
and
std
pop
mov
mov
or
mov
mov
fildll
imul
lahf
pop
xchg
lcall
sub
outsl
sar
fwait
lcall
dec
inc
push
mov
enter
add
adc
fdivrl
int
fdivl
scas
mov
and
mov
test
pop
loopne
xor
ja
adc
cmp
jp
pop
lea
std
lahf
xchg
ds
push
ficompl
aas
mov
dec
xchg
add
arpl
call
xchg
cmp
stos
adc
mov
sbb
cli
out
and
jnp
push
idivb
mov
jmp
ret
cs
inc
aad
ja
or
sahf
lock
mov
jbe
lcall
pushl
xchg
inc
xchg
icebp
push
call
or
test
inc
adc
jl
movsl
xor
and
jae
mov
test
and
jae
adc
aad
or
and
sbb
xchg
xchg
jmp
adcb
std
xlat
mov
shlb
sub
and
jg
aaa
ljmp
arpl
iret
adc
mov
mov
push
adc
lret
scas
repz
rcrb
push
push
out
outsl
aad
neg
iret
pop
inc
aam
pop
pop
mov
mov
xchg
nop
pop
sbbl
adc
lds
add
in
and
cmpsl
fidivrl
insl
fisubs
push
jbe
out
inc
mov
insb
pop
jge
pop
test
mov
mov
pop
rsqrtps
popf
inc
mov
ja
or
dec
sub
sbb
xor
cmp
fs
pop
insl
pop
add
bound
inc
sahf
lcall
xchg
jge
movsl
jns
jne
rcr
add
addr16
dec
mov
mov
mov
mov
js
gs
adc
shlb
mov
cmp
jno
mov
cmp
psubsw
jp
inc
aaa
xor
dec
lcall
pop
insb
dec
leave
test
leave
arpl
andb
fdivs
add
outsl
adc
cwtl
stos
popf
sbb
inc
push
clc
fstps
or
data16
mov
jno
jmp
int3
fcmovb
fisttpl
insl
xlat
jnp
jo
xchg
je
jle
cmp
fld
repnz
int
stc
jg
pop
getsec
loopne
bnd
aam
fldcw
mov
imul
cli
add
lods
adc
mov
mov
push
fdivr
inc
push
cmp
aam
or
cmp
and
jo
sub
pop
inc
mov
cwtl
add
shrb
jmp
jle
mov
int3
int
and
xor
mov
ret
in
bound
add
cmc
mov
cs
xor
lock
push
aam
xchg
aam
pop
in
mov
pop
or
push
pop
mov
inc
or
push
pop
fwait
das
xchg
sbb
xlat
shrb
jns
out
in
aaa
xchg
cmp
mov
adc
push
pop
push
cli
xrelease
out
clc
les
mov
and
mov
xchg
and
test
out
and
cmp
rsqrtps
xlat
mov
sbb
pop
mov
push
cld
ret
inc
leave
mov
xchg
and
push
mov
ja
mov
cmp
or
push
xchg
xchg
xorl
fwait
mov
inc
mov
lods
dec
lcall
cmp
xchg
in
add
clc
xor
popf
aas
fstpt
movsl
add
dec
mov
adc
andb
pop
mov
mov
imul
in
in
addr16
fdivl
inc
gs
xor
jae
cli
inc
inc
push
adc
pop
out
xchg
jge
jl
jns
adc
push
xchg
cmpsl
xor
loope
mov
fcmovbe
jne
mov
add
mov
xor
sbb
mov
mov
add
shrl
inc
std
lea
cmp
add
pop
mov
ret
cmp
mov
addr16
adc
push
push
movsl
out
repz
mov
lcall
bound
sub
jne
fmuls
adc
leave
xchg
sub
cs
imul
lret
fldenv
mov
inc
pop
jmp
movsl
push
xchg
test
xor
test
cltd
push
call
push
pop
dec
int
or
mov
dec
or
clc
in
dec
add
movsl
in
mov
out
test
aad
fiaddl
and
push
sub
cmpsb
mov
loopne
inc
xchg
mov
sbb
and
jnp
daa
xchg
sub
cmpsl
dec
or
shll
mov
jns
popa
cmp
notb
mov
push
mov
inc
mov
inc
dec
pop
add
add
cld
and
sbb
dec
push
out
jp
sub
xchg
lock
outsl
dec
fnstsw
jbe
lds
test
mov
adc
xor
cltd
sub
dec
imul
pusha
fmuls
insb
insb
cmp
sti
das
stc
pop
pop
push
iret
add
mov
repnz
fs
push
popf
aaa
out
aas
xchg
lahf
xor
adc
mov
enter
mov
out
mov
mov
push
pop
lods
xor
out
inc
lock
and
jg
mov
les
sub
sbbb
frstor
mov
push
jle
xor
lahf
insl
or
lods
add
sbbl
imul
push
lods
aaa
test
test
in
jae
fmuls
loope
packuswb
sbb
mov
or
lahf
sub
jp
jae
bound
lret
or
movsb
sub
cltd
cmpsb
ljmp
lahf
cwtl
imul
or
xchg
xchg
add
sahf
outsl
adc
sub
mov
icebp
xchg
movaps
cld
call
ljmp
stos
inc
shl
mov
icebp
imul
into
dec
shr
movsb
fisubrs
mov
scas
or
xor
and
fdivrs
popa
pop
aad
pop
aaa
cmp
mov
mov
pushf
xchg
lods
jge
cmp
pop
push
out
push
dec
sbb
cmpl
or
mov
leave
inc
repnz
add
add
lahf
push
dec
cmp
xchg
outsb
loopne
ret
and
incb
xor
test
lret
mov
xchg
adc
insl
add
scas
xchg
cmpb
mov
scas
and
adc
cli
sahf
cmp
fst
mov
dec
dec
int3
test
mov
into
clc
lds
mov
mov
dec
js
xor
rclb
sub
pop
jns
fs
sbb
mov
xor
mov
xor
mov
jecxz
add
cmp
jb
xchg
in
ss
add
call
scas
cltd
and
mov
out
call
and
cmp
xchg
hlt
mov
xor
jns
scas
in
cld
lcall
jmp
dec
xlat
pop
hlt
xchg
xchg
leave
shr
aad
aad
mov
aad
adc
adc
cmpsb
je
or
div
int3
test
xor
or
pusha
dec
lods
pop
jbe
pop
mov
cmpsb
adc
loop
dec
cmc
movsl
sbb
ja
xchg
ret
fsubl
arpl
sti
pop
int3
cmc
cmpsl
xchg
je
pop
add
test
jno
vaddsubps
sub
push
xor
mov
js
mov
push
loope
jbe
lods
cltd
aad
pop
imul
std
sub
sahf
je
nop
xlat
add
jge
sub
out
loop
sti
mov
ret
or
inc
jb
push
push
scas
loope
mov
cmp
fisubs
cmpb
cmpb
int
ljmp
cli
fsubrl
stc
pop
dec
adc
insl
std
mov
xchg
fldenv
test
pushf
push
jns
xchg
stc
movsb
hlt
mov
jl
xor
rcl
lock
xor
mov
sbb
ss
shlb
push
push
xor
out
pop
xchg
fstpl
iret
pop
in
mov
lahf
ja
push
movsl
mov
xchg
cli
and
jge
rolb
imul
std
sbb
test
inc
addb
flds
mov
mov
mov
or
adc
push
negl
jp
into
cmp
adc
push
xchg
loope
jne
lds
mov
adc
xchg
adc
jp
mov
xchg
inc
sub
aas
bound
mov
sbb
pop
push
punpckldq
mov
aaa
fs
lahf
aad
cwtl
pop
cmp
mov
push
int
push
mov
cmp
mov
arpl
mov
dec
mov
in
lea
rorl
cmp
jno
mov
mov
das
subb
jnp
bnd
pusha
mov
jbe
inc
or
mov
jo
ret
inc
ja
mov
les
aam
mov
adc
filds
inc
out
clc
and
mov
jp
test
insl
jne
scas
jle
adc
xchg
filds
dec
pop
imul
stos
sbb
les
or
subl
repnz
out
sbb
push
test
int
mov
aam
int3
push
jns
or
pop
or
add
fisubrl
sub
or
je
mov
add
rcl
mov
clc
xor
mov
fsubs
pusha
das
add
dec
pop
pop
ja
aam
leave
jge
in
sub
add
mov
psubd
aas
xchg
adc
lret
daa
lods
scas
loopne
cltd
insl
mov
xor
ja
and
fisttpll
ds
ret
sub
or
cmp
pop
sbb
mov
movb
test
jo
mov
inc
sub
outsb
add
les
jge
push
sar
popf
pop
push
nop
sub
jmp
mov
mov
push
adc
outsb
movl
rcrb
xor
shlb
out
ss
pop
fidivrs
ret
cmc
mov
ret
xchg
cmp
subl
popa
lret
fldt
mov
or
aas
or
pop
test
pusha
sbb
mov
or
popa
cmp
enter
enter
and
xor
mov
fiadds
sbb
imul
mov
int3
sbb
adc
fiaddl
sar
je
ja
mov
sahf
or
rcll
adcl
das
sub
arpl
scas
ficoml
xchg
mov
orb
loope
mov
xchg
sbb
mov
jecxz
and
mov
jmp
push
ret
jle
test
cmp
or
sahf
or
xor
pop
sbbl
push
mov
test
fsubl
shlb
imul
sub
sbb
sbb
push
cmpsb
das
mov
cmp
sarl
jbe
jns
out
sub
sbb
addr16
or
popf
push
lahf
ret
out
dec
stos
repnz
dec
lcall
jp
mov
mov
push
inc
mov
out
in
lcall
fnstcw
mov
inc
test
das
xor
es
out
xchg
rclb
jne
inc
sti
mov
call
mov
lods
lods
sti
rcll
inc
stc
out
pop
sbb
clc
aad
ret
dec
jle
or
fsubrl
pop
testb
popa
ljmp
mov
mov
dec
xor
int3
push
test
icebp
pusha
pop
mov
shl
push
aad
iret
cmp
das
add
xlat
cwtl
adc
or
or
lret
sbb
xor
aas
repnz
mov
push
push
pop
loope
ret
sbb
cmpsl
aam
add
and
scas
jl
xchg
aam
loop
xchg
test
push
inc
lea
xchg
push
mov
aaa
call
xor
in
cmp
arpl
pop
mov
adcb
sbb
push
loope
rol
sbb
fiadds
jb
pusha
adc
lods
xchg
xor
push
popf
setns
out
loop
pop
rcl
inc
out
dec
neg
shrl
dec
add
or
gs
mov
adc
lock
xor
icebp
xor
hlt
fs
movsb
dec
scas
sub
test
push
lock
mov
std
dec
shrl
stc
xchg
mov
mov
ss
lock
pop
mov
sub
lret
inc
and
xor
and
sahf
scas
push
cmp
popf
dec
sbb
pop
pop
add
sub
and
lahf
or
add
fsubrs
sarl
sub
or
push
add
lahf
xchg
lret
jbe
sbb
and
mov
jns
inc
inc
je
cs
out
scas
mov
jns
hlt
fisttpl
scas
decl
mov
icebp
rclb
push
leave
xchg
subb
mov
push
adc
push
daa
push
xchg
pop
push
xchg
nop
sarl
push
insb
movsl
sti
scas
aam
push
jle
data16
in
push
pop
jno
xchg
daa
jno
inc
mov
xor
fisttpl
sbb
fbld
jl
mov
mov
cmp
call
sub
lret
dec
scas
jno
loopne
or
lcall
jbe
or
lods
pushl
adc
inc
enter
fwait
cmpsb
call
xchg
dec
imul
fwait
mov
fs
popf
loop
dec
fbstp
sbb
push
mov
fwait
sub
pop
jae
test
add
dec
sub
mov
pop
adc
fs
jmp
push
enter
mov
cmpsb
pop
adc
cld
stos
push
jp
mov
and
nop
inc
pmulhw
shll
mov
push
fcmovbe
js
jno
adcb
xchg
add
xor
inc
aam
sti
insl
jbe
push
inc
scas
mov
aas
cmc
fimuls
in
in
pusha
repz
jg
outsl
scas
xchg
setge
fisubs
mov
jnp
jne
and
xor
arpl
inc
lret
leave
or
push
imul
outsl
mov
adc
lret
test
scas
fstpt
popa
dec
jno
call
inc
enter
sub
jmp
fsubs
xor
xor
iret
sti
lock
cs
inc
fwait
pop
mov
fsubrp
and
movsl
or
je
mov
mov
sbb
and
inc
enter
pushf
nop
iret
je
scas
mov
loop
sbb
push
jbe
decl
adc
gs
add
mov
test
fcompl
ljmp
jl
scas
cwtl
mov
cmpsb
cmpl
cld
push
daa
mov
test
cmp
in
inc
xor
dec
loopne
xchg
and
adc
add
es
push
mov
jb
xor
inc
les
xchg
lret
cmp
cmpl
mov
cli
and
hlt
cmp
push
stos
ljmp
jno
xor
mov
xorb
aam
mov
dec
in
roll
ljmp
sub
and
sbb
mov
sbb
pop
iret
sbb
cmp
xchg
inc
xchg
lret
push
pop
sub
xor
nop
adc
leave
inc
roll
xor
mov
add
mov
mov
addl
fs
jl
cmp
stos
or
je
testl
out
xor
fimuls
test
jge
lock
pop
adc
cs
adc
fnop
mov
lds
xor
shl
fwait
sti
push
lea
out
sub
xlat
mov
orb
lock
jne
fcmovu
lcall
cmp
rorb
aas
out
xchg
cwtl
addr16
inc
int3
das
loopne
sbb
jmp
pop
stos
out
test
fwait
lds
aaa
decb
imul
pusha
jnp
repnz
enter
inc
mov
adc
sbb
nop
add
add
in
int
and
pop
mov
adc
icebp
xor
call
push
lcall
arpl
mov
pop
jp
ret
lcall
sarl
out
adc
out
les
dec
lea
popa
mov
add
push
in
xor
inc
dec
mov
mov
jmp
data16
adc
lahf
out
dec
sbb
cwtl
lahf
daa
pusha
jge
xor
pushf
lock
push
push
push
mov
cli
inc
rol
jge
popa
ret
pop
aas
inc
or
mov
push
mov
out
dec
inc
push
mov
sub
lret
adc
add
scas
xchg
mov
xor
adc
mov
or
imul
fldt
out
in
pop
jle
fwait
mov
std
xor
mov
pusha
and
mov
xchg
lea
mov
int
xchg
call
cmp
shlb
js
ja
stc
inc
mov
dec
adc
pop
push
or
xor
lret
dec
leave
cmpsl
nop
mov
and
daa
add
cmp
inc
jbe
and
jmp
cmpsl
and
test
pop
pop
in
or
ljmp
xchg
data16
or
fs
pop
mov
fisubs
pusha
or
sbb
pop
cmp
sub
and
aad
push
inc
pusha
jmp
fcomps
in
adc
gs
in
pand
sbb
stos
sbb
or
out
stc
jecxz
push
divb
ret
dec
add
xchg
and
cmc
cmc
js
ljmp
lahf
or
sti
xor
pop
adc
mov
stos
xor
in
fwait
mull
cmp
mov
jmp
add
and
push
mov
xchg
inc
sub
mov
outsl
rcrl
jns
dec
jbe
pop
mov
lret
ret
mov
fwait
stos
roll
mov
sahf
add
movsl
ds
notb
int
sbb
push
add
mov
cmp
mov
push
pop
aam
loopne
adc
or
stc
ret
daa
jbe
adc
add
jns
cs
shll
add
pop
mov
mov
mov
pop
push
inc
fsubr
push
aaa
pop
in
cmp
fsubs
push
je
adc
outsb
dec
hlt
pop
sbb
jecxz
inc
fsubrs
std
int
cs
sbb
push
sbb
inc
xorl
jne
ficomps
in
icebp
inc
addr16
adc
pop
jne
sbb
call
push
js
mov
inc
xchg
and
jae
jbe
sbb
add
dec
arpl
jle
js
cld
sarl
in
std
shll
test
ret
inc
and
pushf
movsl
and
in
lcall
xchg
addb
pop
sahf
jmp
and
push
inc
daa
ret
cmp
mov
mov
leave
data16
mov
ret
sbbb
test
sbb
cmp
jae
sub
int
push
push
cmpl
out
cmpsb
mov
jae
fiadds
int3
push
loope
and
stos
loop
jl
jo
push
dec
out
push
and
jbe
shll
nop
push
mov
repz
sbbb
push
dec
loope
pop
scas
add
mov
out
cli
sub
pop
add
push
in
loopne
ss
ss
inc
ja
inc
xchg
jg
jmp
pushf
ss
pop
or
or
sub
inc
nop
xor
and
and
nop
insb
movsb
ret
sbb
xor
fdivs
xor
loope
jne
sub
arpl
xor
and
cltd
pusha
or
arpl
lods
mov
adc
jb
and
in
arpl
out
push
es
adc
lret
xchg
add
fisubrs
inc
bound
xchg
test
imul
jmp
push
mov
loopne
mov
pop
rcll
inc
inc
call
push
pop
pop
testb
adc
add
sbb
ljmp
arpl
stos
in
dec
add
xor
push
add
into
outsl
imul
lods
cmp
cwtl
lods
xor
inc
cltd
jnp
test
repz
sub
mov
pop
xchg
es
out
pop
call
js
dec
sub
pop
pop
push
idiv
cmc
ja
cmp
roll
push
sub
dec
imul
jmp
mov
sahf
test
loopne
mov
aad
jno
add
cmp
jle
jae
pop
popa
xchg
jno
cwtl
pop
sub
movsb
push
pop
pusha
push
push
jnp
cmp
pop
mov
sub
jne
or
stos
je
or
shrl
in
out
in
lock
test
rcrb
add
xchg
or
and
and
mov
lret
push
nop
inc
mov
dec
cmc
xorl
cmp
hlt
mov
mov
push
test
ficomps
out
in
adc
mov
adc
or
push
add
mov
cli
or
ds
stos
xor
jbe
movsl
inc
fchs
cmp
push
stc
or
stc
push
xchg
xor
ds
aam
and
pusha
loop
movsb
out
xchg
xchg
cmp
xchg
imul
xchg
filds
pusha
ret
mov
dec
dec
or
pop
cmp
push
or
or
test
adc
fsubrl
addr16
sbb
mov
nop
push
ret
addb
insl
std
or
repnz
fdivs
fidivl
lret
and
adc
lret
or
cmp
and
and
mov
mov
and
inc
push
outsl
cmp
aam
movsb
mov
test
arpl
jmp
lcall
xchg
mov
test
int3
push
popf
ret
sub
push
lock
outsl
add
cmp
orl
and
adc
jl
fwait
pop
xchg
ds
into
sub
dec
test
jb
jp
xchg
les
sbb
outsb
jne
ljmp
fcomp
sti
inc
jmp
sub
and
push
shll
xchg
mov
push
jp
insl
pop
dec
pop
jae
imul
lcall
dec
enter
lret
dec
nop
and
sub
sahf
icebp
push
leave
insb
cmp
aad
xchg
mov
lds
push
stos
inc
fists
pop
std
push
push
popf
sbb
lahf
push
lcall
idivb
stc
dec
sbb
mov
iret
ss
dec
out
sbbb
xchg
mov
roll
jl
cli
movsb
jbe
add
stos
mov
fiaddl
cmp
pop
fwait
jnp
fildl
popf
dec
cwtl
dec
inc
mov
stos
mov
xor
gs
push
test
mov
ja
outsb
inc
outsl
mov
mov
testl
xchg
in
fisubrs
mov
mov
cmp
mov
leave
cwtl
jl
gs
shrl
jle
mov
fisttpl
and
add
popf
shl
mov
mov
cmpl
ss
scas
flds
push
jae
mov
mov
mov
push
jo
mov
into
inc
mov
in
or
shlb
jle
js
jbe
lret
mov
popf
ljmp
leave
ja
dec
cltd
outsl
fists
pop
mov
pop
mov
mov
xor
xchg
push
faddp
inc
push
dec
pushf
fcoml
pop
xchg
adcl
jns
sub
rcrb
mov
xchg
xchg
jo
adc
arpl
mov
xor
xchg
xchg
jns
stc
fcoms
xor
sbb
testl
add
cltd
bound
mov
enter
inc
mov
cs
test
fsubrl
sbb
jecxz
xchg
pusha
sbb
mov
sahf
fcomps
or
int
jb
mov
sub
fld
sbb
ljmp
pop
cmpsl
mov
and
mov
lret
imul
xchg
scas
xchg
xor
leave
mull
lret
push
popa
mov
pop
icebp
xchg
push
sub
jnp
outsl
sbb
shrb
pop
ljmp
push
add
xor
outsb
push
fwait
mov
clc
mov
gs
pop
dec
movsl
gs
imul
sti
jmp
xchg
and
repnz
mov
xchg
and
shlb
sbb
and
sub
dec
mov
daa
or
dec
mov
sbb
jnp
fldt
fisttpll
jle
lahf
data16
push
mov
xchg
pop
mov
adc
add
xor
inc
in
sbb
inc
dec
sub
call
adc
pop
pop
iret
mov
ss
fcomps
push
rorb
stc
in
or
outsl
sub
mov
mov
add
adc
add
test
test
jo
dec
add
fiaddl
sbb
sub
ret
add
xchg
sbb
shlb
adc
lea
bound
or
mov
sbb
fcmovnu
inc
jo
test
pop
stos
test
mov
mov
repnz
jge
cmpsl
fisttpll
rol
cmpsl
fcoms
mov
mov
inc
inc
and
dec
in
test
scas
cmp
pop
repnz
mov
aam
sbbb
test
add
dec
jae
sbb
sbb
mov
das
fisubl
jb
sahf
je
jmp
inc
dec
rorl
out
int
dec
pop
cld
xchg
lcall
lock
lods
rcrl
mov
pushl
jmp
shlb
gs
add
out
enter
add
outsl
sub
adcl
mov
ret
shr
pop
inc
mov
xor
bound
jmp
bswap
ja
mov
sub
out
sbb
sub
out
icebp
nop
outsl
and
dec
inc
mov
ret
push
mov
pop
test
out
mov
add
pop
and
jle
scas
sbb
xchg
add
sbb
jp
stc
inc
fwait
cmp
aaa
mov
lret
lods
popf
cmp
add
xor
jbe
repnz
xchg
cltd
xor
mov
scas
js
dec
sub
test
mov
adc
inc
popa
inc
data16
cld
jns
int
popf
aaa
inc
sub
aas
fwait
mov
imul
mov
loope
filds
cmp
pop
sbb
fs
pop
outsb
dec
xor
stos
lods
inc
mov
mov
cmp
mov
xor
xor
xchg
sti
cmp
dec
sub
dec
sbb
in
addb
xor
fsubs
jp
jo
mov
jle
into
or
cmpb
iret
push
fimuls
adc
xchg
sbb
aaa
ret
imul
push
or
rorl
jb
sti
mov
dec
ja
and
mov
loope
orl
pop
stos
jns
pop
das
mov
popa
push
bound
jecxz
xor
sub
adc
push
pushf
dec
jnp
or
cmp
decl
rcll
dec
push
jecxz
lret
dec
imul
lahf
pop
nop
jnp
xor
add
add
sub
jp
cwtl
pushf
dec
aam
mov
dec
adc
cmpsl
and
dec
nop
arpl
inc
lods
pusha
mov
bound
out
sbb
mov
sti
inc
dec
jne
mov
fisttps
fs
into
leave
daa
arpl
mov
in
leave
js
sbbl
test
mov
mov
dec
gs
pop
daa
jmp
sub
call
jns
or
lcall
mov
mov
in
fidivrl
mov
mov
int
xlat
call
lods
out
data16
cmp
test
push
xchg
dec
and
adc
iret
sbb
outsb
clc
jmp
dec
movsb
mov
jge
and
jo
inc
fxsave
mov
inc
sub
jmp
xor
inc
cmp
pop
cltd
cmp
loopne
stos
ss
loopne
iret
shlb
push
and
call
pusha
ret
shll
fadds
cmp
into
or
xchg
insl
pusha
xchg
lds
xlat
inc
push
out
add
mov
sbb
inc
into
mov
and
jnp
sub
push
in
ret
mov
imul
into
cmp
sub
lret
adc
push
pop
clc
dec
push
mov
loope
shlb
movsl
add
jns
jno
imul
subl
es
cmp
xor
xlat
bound
out
mov
cwtl
inc
test
add
fs
dec
movsl
lahf
push
push
add
test
in
testb
sbb
push
add
test
jns
ficoms
cli
insl
dec
into
out
adc
enter
xchg
les
hlt
rolb
dec
in
mov
imul
mov
bound
xor
mov
decl
ljmp
mov
popa
xchg
xchg
fwait
scas
cmpsb
jl
and
popf
bound
addb
popf
mov
insl
outsl
mov
pop
cmp
push
ljmp
jnp
rolb
and
jae
imul
testb
cwtl
add
jb
arpl
lods
xlat
vminss
in
mov
outsb
mov
mov
shrl
pusha
aam
rclb
cmovl
adc
pop
mov
adc
xchg
hlt
into
aam
xor
inc
lcall
dec
adc
icebp
aad
lds
lods
xchg
push
push
movsl
aam
dec
negb
fiadds
mov
pop
rclb
jmp
sbb
xchg
mov
fisubrl
iret
lret
scas
cltd
xchg
repnz
fdivl
sub
mov
mov
jmp
popl
in
and
cwtl
xchg
pop
jecxz
pop
pop
pusha
jecxz
jl
imul
pusha
lret
ljmp
rcrb
inc
xchg
inc
sahf
sub
adc
sbbb
mov
sysret
imul
lods
push
js,pt
sub
ljmp
scas
jae
cltd
test
mov
push
idiv
mov
pop
lock
insb
mov
cmp
and
add
loop
int3
sahf
pop
inc
add
je
in
leave
cltd
xor
sbb
jecxz
or
enter
cmp
sub
push
das
lea
cli
dec
cmp
mov
cwtl
das
jmp
xchg
cmp
or
jno
aam
ficomps
lods
push
lock
fidivrl
imul
gs
cmpsb
jmp
sub
ss
fisttpl
stos
ss
je
xor
or
cli
out
and
sub
rolb
sahf
call
jo
ljmp
stc
and
or
mov
fsub
xor
and
sti
add
nop
jl
cli
push
inc
in
jecxz
push
jge
popf
shlb
mov
sbb
or
xor
sub
xchg
std
lret
mov
inc
test
test
xchg
shll
inc
xchg
test
test
or
pop
dec
popl
into
and
iret
ja
je
or
jge
lods
sbb
cmpsb
jmp
xchg
out
inc
addb
pop
xor
push
add
sar
adc
pushf
jp
push
addl
popa
dec
dec
sub
lret
xchg
daa
pop
jnp
dec
lods
pop
mov
lods
mov
push
sub
imul
das
sahf
inc
dec
jns
pop
cltd
add
pop
inc
mov
fs
add
mov
jne
call
adcb
test
fwait
int
lcall
xor
push
and
lret
add
test
js
out
lods
gs
mov
jne
and
xchg
cmp
rcrb
inc
movsb
sbb
xchg
dec
stc
xchg
arpl
std
in
faddl
mov
sbb
lret
shrl
imul
xchg
cwtl
imul
add
icebp
mov
fldl
into
cmp
xor
xchg
adc
add
pushf
cmp
cmc
aad
push
outsl
sbb
sub
out
mov
test
hlt
mov
stc
test
push
and
test
fstpt
movsl
outsl
cmp
fdivs
mov
das
push
pop
sub
ffreep
cmp
add
mov
stos
in
push
aam
ficomps
shll
cmp
cmp
dec
insl
inc
and
test
xchg
cmpl
sub
jns
es
mov
push
cmc
add
pop
sbb
dec
int3
repz
imul
add
je
cmpsl
loopne
cmc
xchg
cmpsb
addr16
stos
pusha
sti
cmc
cmp
adcb
xchg
mov
cmp
push
inc
xor
xor
adc
lods
inc
ljmp
iret
fcomp
cmpsl
loope
sbb
orb
sub
enter
and
repnz
in
inc
jg
dec
and
addr16
cmp
mov
mov
xchg
cmpsb
loopne
sub
push
hlt
call
sbb
sub
arpl
sub
test
loope
icebp
mulb
lea
cmp
jns
hlt
or
gs
lret
push
pusha
lods
insb
push
cmpsb
mov
testb
mov
lods
test
nop
dec
xor
iret
push
fcompl
sbbb
mov
faddl
rcr
imul
in
stc
push
mov
test
push
mov
inc
leave
das
into
arpl
mov
stc
mull
fld
xchg
cmp
push
lds
push
test
ret
pusha
arpl
push
fbstp
push
insl
cmpl
xchg
push
int3
pop
adcl
and
daa
test
push
jmp
cmp
mov
sahf
jne
adc
push
pop
and
pop
loope
cmp
xchg
cwtl
sub
mov
mov
and
xchg
aas
inc
sbb
cmp
adc
pop
mov
aad
shlb
add
add
xchg
pop
insb
xchg
xchg
sbb
sbb
xchg
cmp
cmpb
inc
sbb
dec
gs
lret
mov
mov
shll
call
scas
mov
popa
ret
test
xchg
ss
dec
sbb
xor
cmp
pop
in
les
mov
das
fs
inc
sahf
adc
fdivrs
add
aaa
lcall
fildl
cmp
mov
cmc
xchg
push
sub
mov
sbbl
into
ja
push
std
insl
jae
push
sbb
ret
push
mov
clc
out
mov
add
repz
xor
in
jp
in
aam
or
jmp
dec
mov
mov
xchg
jecxz
pusha
mov
popa
and
push
orl
out
lods
shl
imul
scas
fdivrl
mov
mov
dec
or
add
jae
mov
sub
test
fimuls
in
iret
fstl
stos
jge
mov
adc
vmread
fimuls
bnd
imul
mov
cs
mov
sub
stos
jmp
xchg
sbb
popa
jns
push
lret
popa
push
pop
enter
test
mov
lods
fcoml
out
or
movsl
mov
pushf
les
ret
stos
sub
out
setle
jmp
xorb
inc
sub
fcoml
imul
mov
repnz
mov
xor
pop
lods
negl
in
daa
sbb
repnz
inc
subl
xchg
xor
jmp
popf
mov
inc
repnz
jns
lea
test
mov
pop
hlt
fs
xchg
push
push
addl
hlt
xor
or
adc
stos
out
pop
cmpsl
hlt
cmp
xchg
sbb
addr16
pop
std
dec
mulb
jns
flds
jl
fucom
sbb
or
ss
in
push
cwtl
mov
xorl
sbb
ljmp
and
jns
dec
es
repz
ljmp
push
dec
jmp
or
jle
and
sbbb
not
lret
jno
sahf
loop
dec
outsb
imull
repnz
ret
scas
cmp
pop
push
popf
sahf
and
es
addr16
jle
push
insl
jno
ljmp
mov
jmp
rorl
mov
xlat
mov
jnp
out
jp
mov
or
fwait
je
rorb
loope
push
cli
fwait
addr16
lock
pop
mov
xchg
cwtl
pop
sbb
out
push
push
xchg
test
loop
cwtl
data16
test
adc
xchg
lret
sub
out
les
adc
pop
dec
push
cld
repz
jp
pop
les
sub
xor
pop
cmp
pop
fstpl
push
xchg
push
imul
inc
adcb
lods
adc
and
or
into
mov
gs
pop
dec
clc
sbb
dec
xchg
sub
push
xchg
xchg
data16
push
push
cmp
jbe
jbe
and
and
adc
dec
cld
stc
pusha
dec
in
sahf
xchg
outsl
lret
and
xchg
pop
test
jecxz
mov
cmpsb
fwait
sub
pushf
bound
sub
mov
xchg
push
xchg
mov
xorl
cmpl
enter
pop
stos
in
mov
aas
inc
ret
in
ret
negb
js
insb
clc
sbb
jae
fadds
inc
jmp
test
fldenv
pop
stos
xor
ljmp
jnp
inc
push
sar
arpl
les
xchg
or
stc
repz
std
push
andl
inc
xor
or
push
pop
jnp
and
cmp
mov
aad
jo
test
ss
sbb
insl
push
ret
sub
mov
inc
lahf
jb
xor
jl
push
scas
int
aas
pushf
lods
aad
ficomps
mov
xchg
adc
mov
iret
mov
test
pop
subb
mov
push
xor
scas
adc
sub
push
jp
mov
lods
mov
mov
clc
in
data16
adc
mov
out
mov
xor
ret
cmp
lret
pop
ljmp
mov
push
or
xchg
sbb
jge
daa
add
cmp
ret
dec
sub
add
cld
xchg
lahf
or
repz
repnz
mov
cmp
out
cmp
out
sbb
mov
rcrb
das
aas
sbb
das
cmpl
scas
sub
dec
push
enter
jge
push
lods
mov
mov
outsl
pop
out
dec
lds
fs
lcall
and
cmp
push
and
mul
pusha
xchg
in
cld
and
ljmp
ror
xorb
jmp
or
sbb
dec
shl
cs
and
push
mov
movsl
dec
sar
pop
jns
lret
cmpsb
pop
or
sahf
fisubrs
loopne
pop
adc
pop
mov
insl
fisubl
mov
push
negb
inc
xor
inc
mov
or
mov
or
jb
je
mov
and
lcall
add
push
fdivrs
test
iret
pop
pop
pushf
mov
int3
enter
aam
pop
pop
mov
lock
inc
mov
adc
mov
pop
dec
cwtl
ret
insl
jne
cmpsb
sbb
cmp
add
jmp
jbe
in
push
popa
arpl
clc
add
cmp
imul
loopne
fiadds
pop
mov
nop
cmp
gs
sbb
cmp
ds
dec
jle
jae
pop
scas
push
pop
push
inc
jge
fwait
lods
mov
xchg
int
out
and
ljmp
inc
add
and
ljmp
xor
mov
addr16
test
pop
shl
push
xchg
jae
push
sub
cmp
mov
cmc
jae
inc
call
lret
push
push
push
push
mov
adc
add
mov
jp
sahf
add
pushf
cmpsb
jle
lcall
mov
add
adc
lock
fwait
sbb
jo
sbb
imul
pop
or
push
or
lcall
adc
dec
mov
and
leave
dec
mov
pusha
data16
imull
das
add
mov
bound
push
aas
push
adc
stos
lods
enter
lods
or
add
in
dec
push
cwtl
ret
testl
popl
xor
add
ret
call
push
movsb
adc
nop
jecxz
movsb
mov
xchg
es
icebp
add
xor
push
lods
ds
xchg
pop
mov
ret
stos
jnp
sbb
gs
inc
inc
cmp
mov
jp
in
mov
dec
mov
inc
icebp
fisubs
jns
mov
jae
bnd
mov
out
add
sbb
mov
dec
sub
mov
mov
mov
lock
and
add
movsb
and
loope
sbb
mov
sub
push
stc
mov
adc
sbb
popa
sub
arpl
jl
cs
push
adc
fists
pusha
and
adc
repz
jns
pop
or
xchg
lret
mov
jg
lea
jns
dec
or
into
jbe
and
hlt
mov
jp
and
sbb
jp
jns
jl
push
lcall
jmp
adc
int
adc
loop
inc
jae
mov
cmp
das
xchg
mov
enter
push
loope
jge
add
cmovo
cmpsl
fidivl
lret
jmp
fisttpll
dec
jnp
xchg
jl
repnz
push
xlat
or
push
call
je
fdivrs
pop
nop
cmp
shll
mov
mov
ds
insb
adc
and
repz
jl
repz
inc
jecxz
sar
jo
scas
and
jb
test
daa
add
ja
xchg
clc
addl
ret
jmp
push
dec
adc
sub
inc
fldl
gs
dec
movsb
mov
adc
and
stos
enter
cmpsl
pop
lret
push
insl
out
add
dec
in
subl
nop
jp
mov
sbb
bound
xchg
jns
mulb
cwtl
out
xor
mov
mul
mov
lret
rorl
cs
pop
ljmp
xor
push
sbb
ljmp
push
cmp
pop
cmpsl
sbb
es
pop
dec
in
inc
pop
jbe
sbb
ror
shrb
daa
inc
cli
push
jl
mov
out
iret
jecxz
ja
jns
dec
rcr
sahf
sbb
test
mov
popf
aaa
loopne
hlt
scas
lret
fwait
jmp
add
jecxz
pop
mov
xchg
mov
push
mov
sbb
pop
xchg
imul
jp
int3
push
pop
stos
shlb
pop
je
rcr
mov
lea
push
lcall
fucom
ljmp
mov
shrl
push
aas
xchg
sbb
shlb
xchg
shl
cmp
mov
outsb
rorb
jb
adc
es
and
inc
addb
pushf
les
cld
push
add
adc
test
cmovae
xor
ja
cmp
or
lret
sbb
add
repz
cli
mov
jb
push
dec
sbb
fistl
and
jne
insl
dec
mov
and
push
xor
pop
inc
pop
dec
loope
aaa
in
inc
adc
mov
mov
add
aaa
in
fldl
jge
fnstsw
pop
jecxz
fbld
fldt
movsb
xlat
pop
leave
xor
insb
outsl
cmp
test
xor
out
in
in
test
inc
fistl
add
ds
mov
inc
xor
loopne
pop
add
dec
sbb
xchg
repnz
rclb
dec
pop
jae
adc
push
mov
sbbl
add
test
into
imul
dec
pop
or
divb
imull
cmpsb
ret
in
dec
ss
test
dec
jge
sbb
mov
cmp
and
mov
loop
popf
cmpl
popa
adcb
adc
mov
loope
and
pop
fxch
aas
lds
test
sbb
ljmp
ja
sbb
nop
add
scas
push
sbb
stos
add
push
cmpsl
add
pop
sub
push
in
xchg
frstor
fadds
cmp
xchg
rcrl
dec
dec
push
sub
lock
imul
xchg
sub
movsl
sbb
test
sbb
outsb
es
ret
adc
add
lret
lret
aaa
int3
mov
in
std
dec
dec
inc
fisubrl
inc
mov
sbb
adc
push
cmp
cld
insb
and
sub
dec
push
mov
dec
sbb
adc
add
sarl
repnz
mov
dec
mov
fiaddl
out
das
ja
rcr
inc
fistpll
popa
and
sbb
jl
mov
mov
cmp
mov
sarb
jmp
sub
movl
hlt
fldt
cmpsb
mov
scas
sbb
cmpsl
or
je
outsl
rcrb
mov
insb
jmp
xchg
call
jle
repnz
xchg
sahf
aas
lsl
lcall
cmp
mov
xchg
inc
test
enter
push
addr16
sub
loope
jmp
xor
mov
int
adc
jecxz
add
pusha
js
pusha
fstl
xchg
xchg
stos
in
in
je
jecxz
push
sub
test
pop
mov
mov
rorb
lods
into
pop
jp
icebp
sub
and
sub
lods
mov
and
lret
jbe
mov
scas
mov
pop
sbb
mov
mov
in
dec
mov
rcll
inc
int3
das
push
lods
jge
jle
inc
pop
cld
out
xchg
jb
push
aaa
sub
arpl
dec
inc
pop
in
mov
popa
std
cmp
push
jae
mov
sbb
pop
add
dec
stos
mov
out
jbe
pusha
outsb
mov
pop
sti
pop
inc
jae
loop
sbb
orb
mov
adc
inc
mov
dec
lcall
adc
jecxz
repz
lods
jnp
movl
aas
mov
cmp
fsubrl
aad
sub
add
insb
mov
add
jns
push
das
xor
jg
movsl
cs
cltd
lahf
sub
push
add
cmc
push
jne
cs
sub
loope
inc
repnz
int
inc
lock
lahf
pop
fwait
mov
in
scas
test
int3
adc
cmpsb
outsb
sbb
fadd
pop
cld
lea
push
inc
sti
cwtl
cmp
sbb
inc
ret
cmp
sbb
arpl
mov
fldl
push
xchg
mov
sub
sub
and
and
or
jae
pop
jecxz
fistpl
dec
push
dec
pop
adc
pop
rcrl
push
mov
or
xorb
mov
imul
cld
and
ds
jmp
cmp
ret
loope
outsb
ljmp
arpl
divl
out
into
hlt
xchg
add
xor
hlt
jnp
xchg
adc
and
jecxz
popa
and
push
sub
les
mov
mov
pop
push
push
sti
dec
insl
mov
jns
lods
sbb
and
daa
mov
lods
nop
xchg
std
add
cmpsl
in
fistpl
mov
xchg
mov
mov
push
dec
add
rcll
mov
jmp
and
or
pop
or
xchg
pop
lret
pop
mov
shlb
or
sti
shll
xchg
push
stos
jnp
mov
xor
jg
inc
pop
out
jb
push
lret
xchg
xor
mov
pop
shlb
push
lcall
into
pusha
in
bound
dec
out
bound
movsb
lea
push
mov
insl
out
jecxz
test
or
mov
pop
movsl
dec
iret
cli
aad
push
adc
sub
pushf
mov
in
imul
aaa
mov
cmp
dec
xchg
clc
rcrl
sbb
icebp
push
pop
test
insl
test
or
sbb
pop
sarl
push
cmp
dec
xchg
xchg
push
rorl
push
cld
mov
fstpl
cli
fdiv
fwait
jmp
push
mov
mov
das
sub
rol
push
sbb
rclb
jp
subl
add
cmp
inc
push
scas
and
xchg
push
push
scas
in
lock
pop
dec
adc
dec
cli
push
gs
jns
push
repnz
xchg
mov
jnp
xor
adc
pop
hlt
and
xchg
outsb
daa
aaa
and
imul
std
in
xchg
cmp
mov
jno
test
mov
ja
jae
and
adc
mov
xor
movsl
sahf
push
xchg
div
sbb
sbb
adc
sub
mov
les
pop
mov
dec
push
mov
mov
cmc
ja
bound
fsubrl
dec
sbb
sub
pusha
fbstp
lods
mov
cmp
jne
pusha
iret
sub
mov
shl
mov
adc
or
inc
lods
fildll
test
and
hlt
mov
sub
clc
add
aas
mov
addr16
stc
cltd
xchg
sbb
push
pop
push
mov
dec
orl
sub
cmp
popa
fsubp
ja
jb
ficoms
adc
andb
cmc
fisubrs
lods
cmp
fidivl
pop
scas
repz
je
dec
xorl
lret
in
push
mov
lret
pushf
xor
ljmp
subb
call
sub
xor
loope
hlt
jecxz
arpl
fsubp
jge
loopne
mov
jae,pn
test
cmp
js
sbb
mov
mov
ret
cmp
mov
cwtl
cmp
push
pop
out
mov
cmp
call
sbb
je
fbld
mov
dec
imul
iret
imul
icebp
and
push
mov
mov
dec
lahf
bound
lea
dec
int
dec
cmp
insb
decl
mov
int3
popa
add
ret
pop
out
ds
and
pop
out
cmc
inc
cmp
aas
call
mov
xor
fidivl
hlt
scas
pushf
inc
test
data16
push
or
cmpsb
cmp
inc
addr16
std
bound
popf
scas
jae
adc
add
cs
jecxz
push
and
lods
and
push
jno
adc
daa
adc
jae
add
movsb
fndisi(8087
fistl
mov
push
arpl
jno
pop
insb
push
and
inc
sarb
sub
or
sbbb
fcmovu
add
rcrl
lcall
xchg
jecxz
jg
test
cmp
push
push
push
pop
push
inc
ljmp
add
fcmovnb
sbb
xor
add
xchg
mov
cmp
sbb
je
xor
cmp
inc
fisubrl
cmp
mov
adc
pop
je
push
add
xchg
out
push
repz
sbb
jecxz
or
mov
jge
rcr
jns
inc
add
adc
divl
jne
and
movsb
push
ret
xor
aad
movsl
mov
or
cmp
sub
ljmp
in
rorb
jp
push
mov
inc
mov
push
ja
ss
test
push
or
arpl
call
jae
loop
jno
das
outsb
nop
xchg
sbb
std
adc
or
popf
nop
adc
or
mov
cmpsb
fs
ljmp
add
pop
mov
fldt
bound
std
push
xchg
sbb
outsl
lods
adc
push
jb
cwtl
jbe
shr
pop
das
jno
inc
in
fmuls
stos
dec
add
push
xchg
iret
sub
xlat
out
je
pop
cltd
adc
and
in
icebp
lret
test
mov
hlt
adc
cmp
or
xor
in
xchg
sbbb
and
popf
fsub
rol
mov
cltd
pop
or
call
das
aam
sarb
fsubr
xor
lret
sbb
jns
xor
pop
sti
mov
dec
inc
mov
shl
icebp
jg
cmpsb
sub
inc
test
scas
cs
cli
sbb
test
mov
push
iret
inc
sbbl
mov
and
xchg
clc
xor
shll
push
sbb
cmp
or
movl
mov
outsl
les
clc
sub
int
mov
fldt
xor
sub
hlt
xor
dec
dec
mov
add
outsl
jle
add
lds
mov
movsl
sbb
insl
pop
out
adc
sti
inc
sbb
inc
daa
push
icebp
fnsave
pop
mov
mov
jmp
aad
xor
into
mov
clc
and
cmp
iret
addl
std
adcb
cmp
es
mov
pop
mov
jbe
dec
jp
imul
pop
mov
mov
fld
sub
mov
or
or
jae
mov
or
ficoml
xlat
add
mov
dec
scas
pop
xchg
push
xor
and
lock
mov
jb
cmp
mov
and
adc
mov
inc
int3
sub
push
and
cli
push
lock
std
insb
push
push
inc
lahf
in
fcoms
jl
in
add
dec
arpl
ret
and
call
loopne
inc
jecxz
fst
push
test
shl
lahf
or
divb
mov
adc
xchg
iret
pop
and
lock
push
mov
mov
icebp
add
sbb
mov
jmp
in
fbld
iret
loop
dec
xlat
loop
pop
sarb
sub
xchg
jmp
cwtl
xor
xor
mov
fbstp
fisttpll
xchg
pop
repnz
inc
mov
shll
insb
shl
sahf
test
stos
adc
cmp
xor
bound
es
insl
sub
xchg
jecxz
push
popf
into
jmp
mov
call
cltd
sbb
adc
mov
aaa
xor
or
roll
arpl
lret
arpl
sub
push
dec
loop
imul
cmp
inc
mov
add
das
mov
push
mov
call
mov
ret
cmc
loop
and
or
aam
pop
imul
sbb
pop
fsub
int
jnp
aas
xchg
fnsave
out
movsl
jl
mov
jnp
mov
fidivl
mov
bound
mov
es
sub
push
mov
mov
cmpb
arpl
cmpsl
push
mov
adc
int3
or
add
fsubr
in
rolb
jb
push
cmpsl
mov
jge
push
push
fistpll
pop
lahf
jae
fimuls
in
adc
inc
sbb
pop
lcall
rorl
dec
lret
imul
pop
xor
out
dec
xchg
in
dec
dec
push
xchg
fmull
verr
lea
mov
mov
and
stc
loop
gs
dec
int
dec
xor
xchg
stos
cmp
and
in
shlb
pop
loope
inc
xchg
out
push
fwait
es
jle
sbb
negl
movb
mov
jmp
push
xlat
or
pop
mov
jno
insb
jmp
xor
push
loop
mov
sub
sub
clc
add
ret
add
lret
loopne
out
ljmp
fstpl
fadd
inc
mov
movsb
test
mov
pop
mov
inc
jnp
sbb
int3
inc
xchg
pusha
js
and
mov
or
inc
insb
subb
aas
rcr
mov
orb
js
or
or
loopne
outsl
pop
ja
not
js
mov
add
mov
fisubl
hlt
push
mov
popa
mov
cmpsb
inc
push
stc
aad
push
data16
jbe
add
push
out
mov
pushf
fistpl
out
jo
fucomi
pop
cmc
pop
loop
test
in
cmp
xchg
int
rcrb
mov
mov
insb
lret
loop
pusha
pusha
cmp
daa
out
popa
mov
sub
ret
jbe
das
cmpl
adc
and
mov
mov
cwtl
adc
xor
popa
rcr
jns
push
sbb
sub
out
hlt
mov
dec
add
in
rorl
int
mov
ja
pop
jl
adc
into
sarl
and
push
call
outsb
sub
int
clc
and
or
cmp
push
sub
mov
ret
pop
arpl
inc
pop
call
test
mov
xor
xchg
into
mov
mov
add
mov
rcrb
nop
ret
xchg
ret
lods
or
mov
sbb
fbstp
jnp
fcomps
add
sbb
out
mov
fmuls
cwtl
push
mov
pushf
out
cmp
add
lret
lahf
in
shrb
dec
andb
cs
inc
fadds
fwait
mov
stc
pop
outsl
mov
push
popl
xor
bts
outsl
jle
push
jp
xor
jne
add
pop
addl
in
cs
push
mov
xor
in
cmpsl
sbbl
sub
fdivs
adc
mov
out
es
xchg
mov
push
inc
out
notl
or
aam
sbb
into
pop
push
push
cmc
push
mov
sub
xor
data16
mov
push
ljmp
mov
or
fwait
aam
repz
or
pop
push
dec
jb
stc
xchg
js
loope
xchg
sbb
jmp
fimull
pop
push
xchg
cmp
in
sti
sbb
and
jo
int
jecxz
mov
test
xchg
cmpsb
push
mov
cli
dec
lea
aaa
aas
fwait
hlt
xchg
outsb
testl
push
xchg
rol
jmp
add
testb
push
xchg
mov
push
call
std
lret
cltd
xorl
pop
in
repz
xor
push
test
push
dec
call
ljmp
mov
jb
xchg
pop
or
decb
mov
or
push
int
test
pop
jle
xor
pop
push
stos
ret
xchg
test
xor
jmp
and
das
mov
into
cmp
or
icebp
xchg
jle
out
mov
or
fcoml
pop
jno
jno
sbb
pop
jb
xor
mov
mov
leave
add
movsb
xchg
scas
loope
shrb
pop
mov
push
nop
cmpsl
inc
std
repnz
xlat
loopne
cmp
lods
xchg
mov
add
daa
pop
push
mov
test
faddl
addr16
cwtl
sub
adc
push
rcll
enter
cmpsl
lret
das
mov
or
mov
fimuls
mov
mulb
push
pop
or
out
add
inc
add
movapd
jns
pusha
mov
cltd
inc
jno
mov
pop
ss
les
fbld
es
inc
push
lgs
cbtw
xchg
adc
inc
mov
inc
push
dec
cmpsb
xor
or
xchg
lods
les
inc
pop
cmp
fiaddl
cltd
lods
sbb
std
fldt
jno
call
sub
fnstcw
sub
jb
lret
fs
push
adc
ret
aaa
sbb
cmp
cmp
mov
mov
or
int3
mov
cmp
int
jecxz
jae
or
mov
fwait
je
cmp
stos
mov
jnp
or
sahf
addb
mov
insl
mov
or
in
mov
xor
and
daa
fcmovnb
pop
fisttps
shlb
mov
pop
xchg
push
jl
repnz
stos
mov
test
inc
inc
and
jp
mov
pop
stc
mov
or
fstpt
cmp
ret
xchg
sbb
imul
repnz
mov
movsb
mov
fs
in
mov
and
inc
hlt
lea
mov
roll
xchg
sub
cmc
sbb
dec
repnz
ljmp
jecxz
xor
sar
fsubl
or
mov
icebp
cmp
repnz
and
dec
js
mov
scas
mov
cmc
clc
mov
jecxz
mov
repnz
lds
out
cli
ljmp
or
mov
popa
stc
mov
cmpb
sbb
cld
mov
adc
mov
call
pop
pop
xchg
and
mov
and
dec
popf
mov
fistl
push
or
cmp
repz
shlb
rorb
inc
push
fld
mov
clc
rorb
idiv
sbb
or
fsubs
lcall
stc
mov
sbb
push
inc
sbb
ds
sbb
and
fidivs
mov
jnp
and
mov
and
and
jns
xchg
add
adc
mov
xchg
dec
xchg
push
out
fucom
fs
lods
xchg
cmpsb
in
daa
or
mov
adc
lret
pop
clc
pop
negl
js
scas
xchg
xchg
add
jae
dec
cmpsb
cwtl
sti
lret
movl
mov
mov
stos
fcmovbe
cmp
jns
loope
inc
and
add
dec
lea
incb
pop
sub
lods
xchg
shr
lcall
out
jecxz
add
cmp
mov
mov
sbb
mov
pushf
xor
push
bound
inc
sub
push
insl
inc
fildll
push
xchg
rcrb
xchg
lods
pop
aas
and
adc
or
dec
loopne
std
jg
dec
mov
cli
or
es
pop
and
icebp
jle
scas
stc
cmp
adc
xor
int
iret
push
adc
in
aam
adcb
mov
push
xchg
push
sti
or
int3
mov
aad
pop
hlt
jnp
cli
xchg
movsl
test
outsl
mov
inc
jmp
push
xchg
cli
pop
adc
mov
xchg
rorb
sbb
or
sub
subl
adc
vmovsldup
std
jo
jmp
scas
xchg
inc
cmp
adc
sahf
das
nop
sub
rorb
mov
stos
dec
test
or
push
cs
mov
shrl
adc
add
popf
adc
push
pop
xchg
into
lahf
sbb
sbb
adc
jecxz
dec
outsl
jnp
mov
or
add
popa
fadds
fisttpl
xlat
sub
lea
push
sbb
lret
adc
shrd
pop
sub
out
push
push
call
mov
sahf
cmp
je
addb
adc
fnsave
and
push
cmp
pop
mov
pusha
adc
push
test
xchg
int
mov
push
inc
mov
lds
xor
push
push
lret
pop
fmuls
and
cmp
repz
lock
sub
xchg
je,pn
cmp
lret
sub
fidivl
insl
jmp
xor
test
out
pusha
inc
ss
dec
mov
out
int3
cmpsb
fstpl
gs
push
mov
fstpt
outsb
shll
andl
daa
mov
mov
pusha
jns
out
pop
pusha
outsl
outsb
push
push
mov
cmc
stos
jge
pop
jl
cmp
stos
hlt
push
out
mov
icebp
lret
fs
cmp
movsl
ljmp
mov
xchg
mov
shll
mov
jp
cmp
in
stos
sbb
hlt
sahf
mov
lods
imul
ss
sub
dec
jb
in
mov
mov
fdiv
push
bound
mov
js
mov
push
testl
xchg
mov
cmp
jp
push
icebp
sub
cmpsl
mov
ret
pop
cmp
mov
imul
aam
shll
inc
ljmp
mov
loope
les
and
mov
outsb
inc
test
push
sub
in
adc
mov
fldcw
mov
push
xorl
xchg
subl
mov
xor
orb
dec
iret
movsb
mov
dec
add
test
stos
cmp
jae
fnstenv
xchg
lock
mov
cmp
movsb
ret
ds
inc
std
test
mov
xor
lods
push
cmp
add
fwait
or
or
bound
test
pop
jbe
jns
fs
sbb
push
outsb
and
lret
push
jno
push
std
scas
sahf
sbb
je
cmpsl
mov
ficomps
add
inc
je,pn
in
inc
cmp
arpl
adc
xchg
adc
int
dec
jle
out
jbe
daa
gs
cltd
mov
cmp
hlt
push
imul
imul
add
jb
adc
jl
mov
jae
mov
mov
or
jnp
add
pop
push
popf
outsb
xchg
in
xchg
rclb
out
test
jg
pop
insl
outsl
pop
mov
or
in
roll
cmp
jne
dec
sbb
js
xlat
leave
adc
mov
mov
sbb
push
push
dec
dec
js
sbbl
inc
sahf
push
mov
lcall
arpl
imul
pop
lods
pushf
fs
popa
sbb
lahf
insl
mov
scas
sbb
fcomi
mov
dec
scas
loopne
mov
and
flds
aaa
cmp
cmc
push
mov
mov
pop
inc
dec
popa
pop
sbb
sub
xor
out
xchg
mov
in
cmc
or
xchg
lods
dec
les
jae
mov
imul
pop
adc
cltd
lret
hlt
sbb
jns
leave
xor
rcr
sbbl
xchg
cmp
push
je
xchg
xor
or
insl
movsb
inc
xchg
das
cmpsl
pop
imul
pusha
lret
mov
mov
popa
mov
push
mov
test
mov
inc
sub
cwtl
test
hlt
clc
test
push
jmp
adc
sbb
jb
and
sbb
push
pop
ljmp
adc
iret
jle
mov
inc
dec
ret
mov
arpl
sub
adc
inc
push
addr16
je
icebp
pop
mov
mov
sub
ss
ret
mov
out
jae
push
leave
or
jbe
pop
stos
dec
add
subb
inc
ss
inc
jecxz
lods
cmc
push
mov
push
pop
das
mov
mov
int
mov
sbb
dec
cli
xor
stc
jle
mov
inc
cs
mov
aas
mov
push
jo
sahf
push
mov
lret
dec
es
or
in
gs
dec
mov
pop
nop
popa
pop
ficomps
mov
inc
inc
inc
mov
cmpl
xchg
adc
jne
inc
sbb
push
sub
mov
sbb
xor
sahf
push
scas
int
lret
jns
fbstp
pop
jg
add
mov
iret
lock
test
mov
fimuls
pop
lods
mov
test
adc
lahf
sbb
iret
jmp
fdivrl
addr16
inc
imul
adc
hlt
jge
lahf
cld
push
loope
repz
add
iret
insl
orl
and
adc
jbe
pop
sub
pop
bound
scas
jae
add
fidivrl
adcb
adc
movlps
test
mov
sub
data16
imul
test
jae
xchg
sub
imull
sbb
xchg
dec
ds
inc
fldt
jle
inc
dec
pusha
ret
sbb
xor
imul
fcoms
scas
xchg
fsqrt
aad
mov
xchg
std
nop
or
cltd
mov
adc
fbstp
test
ss
push
adc
ljmp
adc
in
and
shlb
ja
aaa
pop
popl
lods
lcall
sbb
je
sub
js
dec
and
push
mov
cmp
adc
test
sub
push
ja
icebp
addr16
push
jnp
dec
movsl
ret
and
testl
cmpsl
dec
mov
or
adc
out
jmp
xchg
mov
shll
mov
int
in
out
aam
fisttps
pusha
jecxz
push
push
imul
icebp
pop
push
in
adc
stos
cs
js
pushf
lret
mov
and
pushf
data16
fisubs
repnz
xchg
in
lock
in
lods
lcall
xor
mov
je
xchg
cmp
jb
dec
cmp
ds
jmp
rcrl
pop
clc
and
out
ds
adc
push
cmp
xor
add
lahf
cli
adc
add
je
jmp
and
adc
lock
inc
mov
pushf
loop
add
in
xor
xchg
or
push
push
lahf
sar
sti
popf
icebp
pop
test
aam
lahf
and
sarb
dec
or
imulb
mov
cmp
loopne
xchg
lods
and
in
rol
push
lea
xor
loope
imul
sbb
inc
and
je
lret
cs
mov
movsl
xchg
sbb
xchg
or
and
addr16
stc
hlt
outsl
pop
adc
mov
dec
cmc
jl
data16
mov
pop
adc
mov
mov
xlat
push
fidivrs
ficoms
test
es
cwtl
mov
cwtl
idivl
adc
pop
fcmovnu
out
mov
sbb
push
pusha
aam
mov
rorl
mov
cli
faddl
add
push
loop
cmp
popa
jg
mov
cld
fucomp
xchg
adc
out
sub
pop
and
xchg
xlat
cld
inc
pushf
pop
in
and
cmp
cmp
jmp
sbb
mov
nop
adc
mov
mov
bnd
sbb
and
pusha
jle
cmc
jne
push
cmp
cmp
les
int
incl
cmp
and
mov
insb
hlt
es
xlat
or
pop
outsb
push
out
and
push
push
lods
jmp
add
mov
pop
fistpl
pushf
push
rcr
mov
or
add
or
ljmp
ret
mov
adc
sbb
sahf
dec
rcl
cmpsl
das
es
addr16
mov
pop
aas
test
lahf
lcall
clac
movsl
push
jb
pop
movsl
push
fsubrs
popf
add
pusha
mov
js
inc
cmpsb
xchg
add
ja
fildl
syscall
pusha
push
sub
inc
xor
cld
push
mov
pop
xchg
xor
shrb
adc
lea
jle
or
das
mov
sub
js
mov
xor
mov
aas
pop
int
test
mov
mov
fists
xchg
add
jb
loop
sub
in
popa
push
iret
cmp
add
pop
pop
sbb
inc
jno
mov
mov
or
fdecstp
sbb
mov
sbb
es
mov
out
fsts
adc
pushf
xlat
sbb
cld
in
out
shr
add
pop
lock
inc
fsubrl
cmp
cltd
call
push
mov
jmp
pop
pop
sarb
shrl
popa
std
jo
mov
mov
jge
gs
dec
cmp
js
xchg
inc
sbb
shll
dec
mov
in
adc
add
sub
mov
shrb
aam
or
in
dec
xor
add
pop
sbb
mov
lcall
mov
ficoml
jge
cwtl
jbe
push
cwtl
cmpsb
pop
aaa
cmpsl
mov
leave
jae
sub
push
fisubrl
adc
lret
mov
cmpsb
aam
pusha
lds
push
mov
das
imul
dec
xchg
push
push
stc
adc
mulb
icebp
mov
in
xor
sub
dec
testb
pushf
sub
mov
lods
lea
pop
jp
je
dec
pcmpgtw
ljmp
push
adc
and
xchg
orl
dec
or
sbb
leave
rol
jle
je
xchg
push
jge
inc
repz
or
sbb
and
cltd
clc
sbb
movsl
fwait
mov
inc
lea
sub
push
xchg
and
jae
dec
mov
test
sbb
xlat
push
sub
imul
sbb
cmpsl
into
xor
repz
mov
cmp
add
shlb
jp
or
jne
mov
jns
push
push
mov
pop
and
jo
add
mov
sbb
call
gs
xor
bsr
fimull
outsl
fnsave
in
or
mov
cmp
sbb
add
insb
jle
stos
push
cmpsl
mov
sbb
pop
mov
xor
mov
and
sahf
adcl
std
inc
xor
in
dec
pop
arpl
push
sahf
dec
jge
cwtl
hlt
jno
cmp
ja
push
push
jns
cli
mov
add
xchg
mov
ret
std
add
jo
jecxz
leave
jne,pt
pop
jo
add
inc
lcall
aam
xchg
dec
or
loopne
cld
jns
adc
mov
out
scas
movsl
in
sahf
ja
insl
or
imul
icebp
inc
sbb
xchg
mov
mov
adcb
lods
popf
int3
xor
mov
pop
negl
sbb
js
or
int3
cs
daa
rcr
pop
dec
orl
insb
dec
push
lock
andl
arpl
xchg
dec
ljmp
push
push
adc
cli
lods
sub
mov
into
sub
in
rcrb
jb
push
pop
mov
inc
adc
in
cmp
clc
out
ret
pop
xor
pop
sub
sbb
mov
in
jns
adcl
push
movsb
dec
or
and
add
stos
push
push
es
test
repz
push
mov
sbb
repz
repnz
and
mov
int
imul
outsb
and
pop
test
add
mov
xchg
dec
lcall
sbb
adcb
xor
lds
xchg
arpl
sbb
jo
mov
cmpsl
mov
orb
cmpl
es
sbb
arpl
or
lods
icebp
xlat
push
jb
andl
lcall
pop
rclb
push
daa
dec
jl
in
fmul
fisttpl
dec
shll
pop
fs
fsubs
add
mov
dec
js
cmp
adc
insb
int3
aas
xorl
cmp
movsl
jecxz
out
daa
or
jge
mov
nop
les
orl
jge
scas
fcoms
mov
xlat
lock
dec
adc
xor
jl
out
sbb
sub
cmpsb
gs
push
mov
cli
xchg
dec
jg
cmpsl
rclb
pop
enter
jns
rclb
out
lret
rorl
or
sub
pop
adc
arpl
rolb
mov
test
cs
inc
xor
fmuls
and
inc
dec
adc
jo
test
hlt
cmp
insb
insb
cmpsl
js
sbb
aas
daa
push
cmp
loopne
imul
int
js
ljmp
data16
ret
mov
loopne
pop
pop
push
jb
sbb
pop
push
dec
cmp
fnstenv
int3
mov
mov
mov
divl
mov
scas
clc
or
push
test
dec
jb
xor
daa
pop
adc
lods
mov
mov
cmp
dec
clc
add
pop
in
inc
shr
mov
stc
inc
ret
cmp
jl
aad
outsl
pop
sbb
sbbb
das
test
dec
cmpsl
lahf
into
push
mov
sbb
xchg
xlat
pop
push
dec
or
sahf
or
into
push
fcomp
pop
mov
push
pop
ret
push
scas
add
mov
insb
pop
cmp
sbb
daa
cmp
xchg
jb
jo
mov
add
jb
fdivs
add
pop
sbb
xchg
inc
iret
mov
mov
or
push
fwait
outsb
imul
stc
flds
xor
jb
pushf
mov
ret
xor
daa
loopne
lret
ret
lret
mov
pop
notl
sub
mov
aad
ret
push
fsubrl
andb
iret
ficoml
add
cmp
ljmp
jnp
mov
mov
mov
jo
loop
outsl
push
jne
mov
fisttpl
cmp
mov
movzwl
push
or
les
cmp
filds
data16
mov
jl
sub
ss
bound
inc
fsubp
sbb
jbe
xchg
pop
mov
mov
add
add
mov
inc
imul
pop
mov
mov
mov
dec
cmp
jl
mov
dec
std
jecxz
movsl
push
jle
faddl
ja
les
ds
xlat
push
loopne
adc
sbb
je
stos
dec
xor
xor
cmpb
lea
xchg
in
inc
xchg
nop
push
push
cmpsl
xor
add
rcr
pop
loopne
mov
xchg
inc
ret
or
jo
arpl
test
xlat
nop
add
cmp
xchg
adc
iret
pop
cmp
pop
nop
mov
add
or
enter
mov
push
or
sub
inc
add
jl
sub
fldl
sub
test
jne
test
and
stos
ret
sti
xorl
jecxz
mov
sub
js
sub
or
dec
xor
or
fnsave
mov
enter
jo
test
mov
xchg
mov
lret
in
mov
rclb
mov
loope
repz
lods
shlb
aas
rol
and
call
ja
cwtl
inc
lret
fcoms
mov
add
jl
mov
mov
rcll
push
std
adc
enter
popf
or
push
mov
dec
cmp
mov
jge
inc
push
dec
push
add
fwait
xchg
popf
or
jbe
cmp
mov
popf
mov
repz
clc
movsb
in
rcl
add
mov
add
rclb
add
pop
dec
pop
call
out
xchg
mov
dec
or
push
inc
mov
insl
test
mov
xlat
mov
arpl
inc
ss
pop
add
insb
jns
adc
repnz
imul
cld
outsb
lret
dec
in
mov
xchg
add
mov
scas
or
adc
xor
mov
ficompl
cmc
inc
ficompl
imul
jg
push
call
push
pusha
hlt
lret
add
ljmp
pop
notb
mov
pop
iret
aaa
ja
mov
loope
sbb
jecxz
pushf
testb
inc
lret
pop
xchg
push
mov
adc
fwait
adc
rcll
jl
push
fcmovnu
xchg
aas
xchg
ljmp
push
js
adc
dec
icebp
xorl
dec
daa
movsb
iret
fwait
mov
adc
mov
push
into
sbbb
cmp
pushf
mov
jge
ret
or
dec
xchg
dec
inc
mov
and
icebp
lds
jle
sub
sti
push
mov
xlat
fcomi
mov
rcrl
or
push
ljmp
jp
cmp
sti
cmp
andl
lds
jo
add
or
jle
mov
test
ja
jno
decl
jge
loope
aas
dec
inc
addr16
popa
add
pop
jl
cmpsl
das
xor
xchg
cli
pop
xchg
ss
aam
pop
jge
add
adc
add
adc
mov
xchg
add
imul
mov
jp
in
sub
out
cmp
movsl
and
jp
push
clc
jp
jp
rorb
inc
pop
dec
or
add
std
mov
adc
push
adc
pusha
gs
popa
sbb
insl
xor
cmp
mov
or
sbb
mov
ds
scas
jp
xchg
and
add
insl
sub
fmull
in
les
dec
sbb
add
add
cmpb
ret
pop
shrl
pop
clc
test
ds
dec
sbb
mov
xchg
push
mov
fstps
test
clc
clc
sbb
ds
jb
dec
or
into
jl
adc
popa
insl
xor
dec
out
insb
sbb
int
scas
or
fistps
or
push
add
cmpsl
in
push
repz
out
push
in
imul
cltd
adc
sub
dec
add
roll
and
pushf
sahf
inc
std
pop
out
add
mov
mov
test
pop
lcall
test
test
loope
add
jo
loop
push
int3
loop
pop
lret
add
in
xchg
mov
mov
cs
mov
adc
lret
mov
mov
cli
insl
popf
xchg
push
or
jmp
out
scas
push
out
divl
add
rolw
loop
xor
xchg
rclb
sbb
out
aad
shl
and
push
cmpsb
mov
sti
hlt
push
jnp
cmp
xor
sbb
push
and
dec
aam
mov
push
xchg
or
mov
mov
jo
loope
movsl
dec
pop
mov
shrl
test
sahf
cmp
pop
adc
or
and
daa
jecxz
sbb
mov
sub
pop
and
push
mov
dec
lea
adc
inc
push
movsl
pop
adc
popf
test
iret
mov
data16
or
jo
pop
in
pop
mov
cmc
push
pop
push
push
aaa
and
imul
fbld
aad
pop
inc
outsl
push
cmp
sbb
jns
insl
lret
enter
xlat
xchg
jg
mov
cs
xor
mov
push
and
and
mov
movzwl
cli
int3
sbb
enter
ret
mov
test
lds
xchg
add
mov
daa
cmpsb
adc
sarl
shrl
lahf
inc
fmull
loope
jmp
add
cltd
jmp
add
pop
and
adc
or
lret
dec
andl
lahf
popf
jnp
mov
in
ds
push
sub
icebp
cs
aaa
aad
mov
mov
inc
sub
cmpb
pop
mov
xchg
push
lods
cmp
leave
int3
rclb
jbe
xchg
xor
mov
out
aam
pop
mov
mov
loopne
or
out
leave
sub
rcll
sbb
sbb
pushf
cmp
dec
cmp
cmpsl
inc
je
nop
ja
sahf
cwtl
or
int
repz
sahf
imul
lahf
sbb
in
dec
mov
sub
inc
in
sbb
and
pop
incb
mov
das
dec
adc
std
jnp
test
xor
fldl
pop
addr16
sahf
out
mov
stos
push
sub
cmp
xlat
mov
or
mov
cmp
and
sbb
loopne
jno
mov
mov
cmp
push
push
outsl
dec
pop
or
mov
icebp
pop
adc
and
xchg
sbb
jae
or
fidivs
lret
inc
adc
inc
push
mov
mov
or
cwtl
outsb
imul
mov
ficoms
insb
xchg
jb
lods
pushf
int
aaa
mov
test
xchg
mov
insl
mov
sarb
insl
sub
ret
mov
aas
fs
pop
fwait
push
in
or
leave
sahf
scas
xor
fwait
mov
or
jl
out
jl
inc
vpacksswb
fwait
test
pop
pop
add
and
int
clc
fistpl
insl
push
push
shll
mov
movsb
adc
xchg
inc
imul
mov
mov
es
xlat
jp
mov
add
repnz
fadd
mov
mov
aad
adc
ret
or
jno
stos
cmpb
gs
movsb
movsb
in
mov
xchg
loop
cld
int3
jae
dec
push
mov
pop
loope
ret
push
mov
mov
out
xorb
push
pop
push
rcrl
cmc
lret
pop
jecxz
jge
mov
jb
fwait
ret
faddl
inc
sub
sub
pusha
jge
addr16
mov
cmp
sbb
mov
imul
push
loopne
or
push
sti
das
jae
xor
andb
shr
xor
js
adc
cltd
jb
es
aad
jne
add
imul
pop
cli
lahf
adc
xlat
dec
jns
jb
add
jae
xor
call
jb
add
push
add
mov
sub
add
xor
cmpsl
call
sub
sbb
xor
cmp
mov
int3
sub
rorb
loope
sarb
sbb
xor
dec
arpl
pop
ja
pavgb
test
mov
test
add
sbb
lock
data16
fcomip
insl
or
lock
xchg
insl
cmpsl
sub
mov
in
movsl
cmp
sub
ss
imul
push
scas
daa
sbb
out
mov
pop
popl
jmp
xchg
test
mov
loopne
xor
in
or
sbb
mov
push
loopne
and
dec
lea
enter
sub
sti
pop
outsl
push
cmp
clc
fdivs
fisubrs
imulb
push
dec
push
enter
cltd
fs
loop
xlat
xchg
mov
cmpsl
out
xor
nop
cmc
xchg
pop
outsl
pop
cmp
js
out
cltd
sbb
jns
gs
adc
out
out
dec
outsl
jo
jmp
adc
jb
das
jl
cmp
fsubr
and
test
dec
cli
hlt
gs
pushf
shrl
add
push
xchg
fnstsw
mov
stc
sahf
fstpt
outsl
or
lahf
lds
pop
call
dec
lret
mov
pusha
fldt
xor
mov
repnz
pop
punpckhbw
mov
insb
clc
jle
dec
adc
sti
adc
imul
xor
mov
leave
push
int3
add
and
push
adc
jecxz
ss
les
xor
sbb
inc
sbb
sbb
pushf
sub
lret
add
pop
push
adc
cmpsb
les
pop
stc
incl
in
or
scas
scas
out
out
aad
arpl
popl
add
sub
stc
or
fldpi
stos
insl
jle
jne
dec
repnz
js
daa
out
adc
nop
cmp
push
sub
and
cli
imul
dec
stos
pushf
and
inc
in
outsb
addr16
sbb
mov
icebp
fnstenv
adc
lret
mov
mov
aad
adc
inc
in
cmp
es
ret
inc
fiaddl
frstor
cld
xor
imul
divb
fwait
cltd
lcall
add
int3
and
adc
rcrb
out
subb
jae
test
mov
jge
cmp
fstpl
popf
fimull
daa
jp
lahf
dec
clc
lea
pop
addr16
lret
inc
push
adc
mov
inc
xchg
adc
inc
shlb
xlat
in
je
addr16
es
cmp
sti
leave
popf
dec
mov
adc
insb
std
xor
jge
dec
jp
int
jge
pop
aam
rcrb
add
imul
lcall
bound
ds
in
fisubrs
mov
push
push
xor
inc
mov
mov
sub
mov
dec
cbtw
out
clc
mov
imull
mov
pusha
ret
test
xchg
lods
inc
cmp
in
ret
rolb
out
mov
sarl
mov
aas
push
lods
iret
int
adc
mov
xchg
xor
addl
mov
int3
pop
and
daa
jno
dec
pop
inc
sbb
lret
and
stos
xchg
lret
outsb
mov
lret
icebp
push
pop
sbb
call
or
xor
int
imul
std
push
popf
xor
adc
mov
or
pop
inc
lods
dec
or
arpl
call
je
xchg
sbb
xchg
lods
dec
inc
pop
cs
sub
jmp
out
push
inc
xchg
or
lea
ljmp
outsl
adc
test
popa
push
pusha
xchg
shll
add
cmc
cwtl
cmp
inc
out
ret
push
mov
inc
movsl
test
mov
and
dec
push
stc
jl
rclb
mov
xchg
adc
add
jl
mov
mov
cli
and
scas
mov
test
cwtl
ljmp
push
cld
scas
mov
fbstp
cmp
push
mov
mov
jle
dec
jge
dec
pop
and
add
cli
repnz
push
lcall
jmp
and
repz
lret
repz
cmpsl
outsb
xchg
ss
pop
outsl
daa
cmpsl
in
adc
out
jno
pop
push
jb
insl
pop
adc
and
inc
jmp
in
fwait
add
test
movsb
jno
scas
dec
jo
jecxz
xchg
mov
inc
test
xchg
stc
rorl
mov
mov
or
movsl
outsb
mov
sahf
lock
dec
lods
cmp
fcoml
sahf
bound
jp
sbb
inc
dec
orl
add
imul
test
iret
cmpsb
outsl
icebp
dec
push
inc
mov
push
mov
and
cmp
int
rcll
psraw
insb
jmp
sub
nop
inc
and
mov
je
aaa
push
das
jle
xlat
in
sbb
dec
int3
aam
stos
int
scas
sub
add
andl
pop
push
nop
flds
pop
js
repnz
jae
push
pop
cmp
outsb
dec
adc
movsb
fcmovb
or
sbb
add
inc
popa
xchg
and
sbb
das
aaa
add
ret
inc
hlt
fwait
mov
pop
imul
and
push
std
or
sub
stc
sarl
jg
enter
xlat
jo
xchg
cmpsb
cmpsl
cmp
fistl
mov
jno
fsts
mov
and
cmp
lahf
daa
aam
lret
pop
xorl
cmp
js
sub
push
jbe
pop
movsb
in
test
cmp
adc
sub
and
jns
jno
inc
xor
popa
loope
rcrb
cli
sbb
std
out
outsb
lret
mov
int3
ljmp
dec
shl
mov
xor
pop
popa
lods
mov
lcall
leave
int
movsl
out
sub
popf
mov
mov
push
jo
xor
pushf
je
or
aad
lods
std
mov
daa
inc
out
fwait
push
lret
testl
ret
or
jmp
sbb
js
lds
push
mov
add
outsl
mov
outsl
fcmovnbe
lods
sub
add
aaa
jle
sbb
movups
or
jecxz
js
inc
sub
loopne
imul
inc
outsb
loop
ret
mov
loopne
rolb
adc
dec
pop
lret
loop
jmp
cltd
test
pop
imul
iret
cli
gs
test
mov
in
lods
jg
inc
inc
std
pop
es
lds
pop
inc
daa
jg
mov
mov
mov
pop
insb
or
fs
mov
adc
inc
adc
sbb
xor
add
into
loopne
icebp
loop
pop
sar
mov
sub
fwait
dec
lahf
repz
fimuls
lcall
xchg
mov
cmp
insl
fucomi
insb
arpl
outsb
inc
fcoml
test
insb
push
pop
lods
and
dec
fisubrl
test
hlt
and
into
jp
xor
outsb
or
add
sbb
loope
and
push
push
fisubrs
sahf
inc
and
inc
test
cwtl
xchg
jne
scas
xlat
vcvtsd2ss
ds
sarl
addl
out
test
and
sub
insb
shrl
dec
aas
add
fdivs
jno
insb
push
or
xchg
cld
inc
movsb
aam
sti
icebp
or
sahf
cltd
inc
dec
mov
xlat
lret
jae
sub
adc
cmp
mov
cltd
fs
jo
pusha
arpl
rcrb
mov
or
shrb
sub
les
and
sub
add
xchg
add
sub
or
xorb
cli
andb
xchg
imul
int
or
dec
add
or
or
jae
out
les
mov
push
and
and
mov
test
mov
jp
mov
insb
cltd
jae
and
pop
imul
mov
jmp
push
inc
mov
icebp
push
mov
push
cmpsl
jge
stc
insl
fsubr
enter
cmc
adc
pop
andb
aad
jno
add
mov
outsb
dec
arpl
mov
sub
std
outsb
dec
std
lcall
fucomi
js
aad
pusha
xor
inc
xchg
decl
pop
sahf
inc
jns
push
in
mov
lods
vrcpss
stos
and
jnp
fldt
ret
mov
movsl
dec
loopne
ss
in
jno
inc
aaa
and
loopne
gs
aam
mov
lret
out
sub
pop
push
lock
jl
mov
pop
ds
test
ret
test
test
mov
arpl
xor
cli
mov
hlt
ds
js
sub
fbstp
sahf
imul
mov
mov
mov
leave
sbb
xor
cs
leave
stos
add
xorl
mov
fsubs
pop
pop
push
inc
add
lret
and
push
jmp
stos
mov
int
push
push
insb
les
jp
push
xor
stc
and
scas
ret
adc
push
in
arpl
lods
jmp
loope
hlt
testl
jge
mov
cmpb
push
pop
push
and
cmp
pop
mov
xchg
ss
fbstp
mov
das
push
push
loop
mov
fildl
mov
mov
test
sahf
leave
ds
adc
fwait
enter
sub
pusha
fildl
fstps
cmpsb
sbbb
mov
into
sbb
jne
stos
mov
test
adc
jp
movsb
rclb
leave
mov
xor
out
popa
adc
add
mov
mov
out
rcll
repz
xor
dec
lcall
ja
dec
rclb
scas
or
lret
daa
dec
add
repz
aam
cs
cmp
push
leave
dec
add
loop
arpl
nop
dec
sbb
loop
xor
out
int3
dec
pop
or
lods
xor
and
loop
sub
push
in
pop
mov
jecxz
add
xchg
aad
std
fisttpll
adcb
mov
or
add
or
outsb
mov
call
add
pop
repnz
cmp
das
aam
in
mov
test
inc
fs
outsl
cmp
push
test
repz
and
fucom
cwtl
xchg
inc
js
aad
xchg
repnz
mov
es
aam
scas
mov
repz
xchg
push
jmp
mov
dec
fs
and
sub
jp
add
or
or
cmp
fcomip
mov
cmp
sbb
ret
bound
outsl
sbb
divl
pop
push
inc
sub
fwait
nop
and
repz
lret
xchg
mov
sti
js
jo
mov
jmp
cmp
dec
daa
mov
dec
xchg
mov
mov
je
adc
and
lcall
cmpsb
das
sbb
sub
cwtl
dec
push
lock
icebp
inc
movl
test
cmp
and
in
pop
fsubp
sbb
or
cld
lock
lret
xchg
dec
mov
push
sbb
mov
mov
loopne
add
add
pop
push
add
dec
pushf
add
rol
sub
or
pop
fisttps
sub
lock
inc
fimull
sub
fucomi
xchg
iret
mov
inc
mov
fldenv
adc
cli
xchg
or
negl
dec
sub
cmp
outsb
clc
pop
xchg
or
cwtl
mov
shl
call
adc
xor
loop
lods
mov
jge
shll
dec
sahf
adcb
mov
fnstsw
and
les
sbb
dec
and
push
sbb
lcall
into
mov
cmp
xor
and
test
xor
xchg
fcompl
rclb
adc
mov
sub
pusha
faddl
aas
enter
pop
and
vmread
fidivl
push
jl
or
sub
movsl
dec
aam
aaa
cmp
cmpb
inc
mov
stos
mov
ja
xchg
cmp
mov
shrb
outsb
xor
fnsave
lret
jmp
ljmp
repnz
daa
add
add
cmpl
add
adc
sub
clc
int
adc
shlb
push
ror
out
cli
inc
jae
imul
mov
ret
fidivs
adc
xchg
fisttps
scas
jae
add
and
loop
cld
adc
sbb
sub
push
mov
out
or
mov
sahf
sub
jp
imul
add
xchg
xor
dec
and
xor
xorl
pop
pop
cmp
pop
outsb
add
jne
adcb
aam
cmp
ror
repnz
xchg
sbb
out
enter
out
sub
add
fdivrl
negb
insl
mov
push
dec
ret
hlt
lahf
mov
xchg
sbb
cltd
or
mov
data16
mov
cwtl
hlt
jg
repnz
push
insl
jge
insl
ljmp
ficoml
pop
lcall
stc
icebp
std
cmp
lcall
xchg
lods
ss
hlt
js
add
jp
or
or
cmpsl
aaa
stc
es
add
add
js
push
outsl
addr16
outsl
xchg
shrb
dec
add
inc
inc
cmc
xor
inc
cmp
add
pusha
imul
out
cli
xor
cmp
hlt
aaa
addr16
mov
popf
ret
or
in
ss
fdivl
pop
or
aad
push
mov
jnp
inc
in
es
sbb
sbb
jle
cs
xchg
pop
pop
cs
aas
mov
xorb
push
addr16
es
xchg
push
dec
adc
loope
arpl
push
loop
int3
shl
sbb
std
mov
dec
cld
mov
insb
rcrl
fldcw
push
cmc
xchg
adc
movsb
push
inc
pop
rclb
fstpt
test
sarl
fiadds
sub
outsb
rsqrtps
insb
sub
fstpt
jns
push
in
rolb
in
push
nop
pop
and
jbe
movsb
jns
lods
cmp
or
and
lods
dec
cmp
pop
xchg
sub
rclb
daa
out
push
push
inc
sbb
addr16
test
jecxz
das
shl
or
imul
pop
jne
fwait
dec
in
jp
int3
je
jae
lods
xchg
popa
cmc
sub
out
test
lods
xor
sub
xchg
xchg
and
ret
xor
xchg
xchg
push
inc
sub
sahf
rcrl
shr
and
xchg
sbb
inc
mov
dec
ljmp
fsubs
add
xor
insb
mov
and
add
in
shlb
rorl
adc
in
clc
inc
fcomi
dec
pop
int3
xchg
xor
fdiv
push
adc
fiaddl
push
or
jl
sbb
mov
sbb
xor
es
sbb
mov
stc
es
mov
clc
add
ljmp
stc
aaa
cmp
fldcw
pop
push
decl
iret
cmp
mov
imul
jle
jns
push
stos
pop
dec
pushf
addl
gs
ficomps
fadds
sbb
cmp
push
push
pusha
cmp
andl
loope
arpl
pop
pop
mov
sbb
out
icebp
inc
jge
dec
jmp
int
inc
jmp
xchg
and
imul
and
lret
mov
cmp
inc
mov
lods
stos
pop
lcall
push
cmc
fidivrs
mov
daa
xchg
pushf
push
fcmovne
xor
pop
roll
xor
test
mov
sarl
adc
lcall
cmpsl
mov
je
adc
icebp
mov
addr16
xor
stos
addr16
repnz
and
inc
and
mov
mov
imul
sub
and
adc
pushl
and
add
cmp
nop
fs
dec
cli
jbe
in
mov
fidivrs
lods
je
mov
pop
dec
cld
test
shl
in
mov
mov
xchg
data16
repnz
fdivrl
or
push
stos
ficompl
stos
or
sub
push
popa
in
pop
push
icebp
and
aas
push
pop
xor
cmpsb
fsub
repz
sbb
adc
jecxz,pt
inc
lret
lahf
push
xchg
arpl
lock
inc
addr16
add
or
cmp
sub
lock
xchg
add
loopne
scas
mov
push
push
add
cmpsl
in
cmp
push
aaa
sub
jge
dec
lds
enter
in
cwtl
lret
xor
xor
xchg
xchg
or
adc
add
loopne
ret
add
jno
push
mov
mov
or
add
test
dec
lods
lods
mov
pop
jns
or
fdivs
jns
sub
lods
sarl
xor
adc
push
xchg
push
sbb
mov
ja
jbe
sbb
imul
inc
pop
push
jne
xor
cmp
jg
dec
pop
ja
js
xchg
jb
xchg
xlat
xor
movsl
cmp
out
cmp
in
jmp
repnz
scas
sbb
nop
adc
cmp
mov
fs
jecxz
pop
enter
push
lahf
mov
scas
pop
adc
sbbl
or
pop
cmp
lods
pop
add
loop
sbb
dec
daa
mov
loop
stos
mov
mov
std
xlat
mov
jno
add
or
ret
cmpsb
jnp
stos
mov
sbb
test
lret
test
mov
pop
das
call
dec
jmp
push
dec
mov
mov
push
inc
stc
push
dec
push
stos
push
push
ja
or
lcall
outsl
mov
xchg
loop
sbb
aam
stos
out
aam
inc
in
jno
sahf
mov
sbb
movsb
xchg
push
inc
sti
clc
or
dec
out
mov
loopne
mov
lea
ds
add
xchg
jns
push
and
shlb
xchg
andb
inc
sub
mov
fs
outsl
mov
sub
lods
xor
xchg
xchg
sbb
pushl
sub
and
pop
gs
imul
mov
dec
adc
pop
sahf
sahf
cwtl
inc
inc
push
jb
mov
jo
mov
subl
shll
mov
out
clc
in
bound
push
mov
cmp
xchg
sbb
mov
rclb
pop
xchg
pop
jecxz
mull
ss
icebp
jnp
sbb
sub
ds
cmpsb
aas
lret
inc
inc
dec
and
fisubl
pop
popf
cmp
push
xchg
ret
sbb
loop
lods
aad
test
add
imull
ljmp
lea
sub
aas
nop
loopne
cmp
insb
pop
mov
daa
jae
stc
xor
int3
rcr
shrb
mov
inc
sbbb
incb
maskmovq
testl
and
cli
imul
pop
add
push
rol
and
xchg
xchg
fmul
hlt
inc
cmp
lds
mov
rcrl
stos
xchg
dec
cld
jae
cmp
repnz
or
add
xchg
mov
and
xlat
inc
in
outsl
and
and
sbb
jbe
movsb
out
or
xchg
and
mov
loop
or
cs
testl
jnp
jbe
xor
adc
xor
mov
push
mov
sub
fcomip
xor
xchg
jnp
adc
insl
jecxz
cmp
stos
jecxz
inc
sti
xor
pop
scas
or
push
cmp
lock
fisubrs
cmc
data16
jne
addl
lock
out
shrl
std
cld
inc
aas
test
xlat
and
pop
mov
sbb
push
mov
and
mov
test
in
xor
cs
adcb
out
test
pop
outsl
or
mov
sub
dec
dec
pop
ljmp
test
shrl
push
je
lahf
jge
int3
aas
pop
or
pop
sbb
xlat
or
xor
adc
adc
sti
scas
pop
cmp
mov
xlat
ja
rcll
push
push
mov
push
shrd
clc
or
hlt
push
lret
in
fsubrl
scas
mov
or
subl
xor
mov
jae
or
or
sbb
dec
std
or
sbb
mov
js
mov
push
pmulhuw
xchg
adc
in
les
and
fwait
add
cmc
jg
pop
mov
scas
dec
jbe
sub
mov
and
and
xchg
cmp
fcoml
test
fsubrl
mov
pushf
dec
and
mov
and
fisttpll
mov
fwait
cmp
in
dec
fnstcw
and
xor
insl
es
inc
inc
mov
cmp
push
lods
xchg
repnz
fimull
repz
adc
push
xchg
adc
shr
frstor
push
icebp
add
fldl2t
mov
js
std
test
mov
add
lock
adc
sbb
xor
data16
ss
add
or
shlb
mov
xchg
xchg
mov
sti
call
aaa
mov
mov
rorb
and
cmp
or
aas
add
int
pop
xlat
frstor
pmaxub
mov
loope
and
xor
jbe
jg
inc
aas
ja
cmp
inc
adc
xor
adc
outsl
bnd
xor
ljmp
or
stc
pop
leave
lea
cld
sbb
testl
in
bound
into
lods
lcall
pop
mov
inc
push
xor
test
out
stos
push
imul
cmp
adc
cmp
push
rol
lock
lret
adc
sbb
mov
out
mov
xor
xchg
rorl
sub
call
sbb
dec
outsb
or
aam
loopne
xlat
stos
sub
dec
and
jle
xchg
dec
add
rcr
mov
mov
data16
sbb
pop
mov
add
fnsave
jle
fadds
mov
jbe
dec
xlat
pop
cmp
sbb
cmp
dec
pop
mov
or
mov
and
adc
sti
dec
mov
sbb
cmpsb
scas
out
out
lods
dec
pop
out
js
xchg
popa
stos
sarb
stos
xchg
cmp
repz
out
je
mov
movsl
add
xchg
mov
pop
enter
push
jmp
ret
arpl
repz
pop
push
push
in
aad
mov
xchg
filds
mov
adc
cwtl
out
lret
cmpsl
jmp
jae
push
inc
int
pushl
mov
adc
push
rolb
xlat
jl
scas
mov
cmpl
cs
subl
mov
out
cmpsb
lahf
or
adc
loopew
jge
lcall
fdivl
shr
xchg
jne
test
ds
call
push
or
aam
jae
push
aas
mov
popf
fstl
les
inc
push
movsb
repz
adc
daa
pop
jl
add
cmp
jns
mov
jle
mov
mov
xor
int3
jae
mov
in
xchg
imul
add
xor
jne
cmp
mov
push
adc
and
aaa
adc
pop
mov
js
push
fldenv
lret
dec
push
inc
and
and
mov
lret
adc
add
ficomps
stos
push
and
imul
and
or
inc
xor
subb
fsubp
xchg
std
sti
jnp
jle
add
aas
into
inc
in
fnstcw
rclb
mov
push
sti
sahf
cmp
cmpsb
cmp
ret
or
dec
loope
movsb
xchg
xchg
mov
cmp
shlb
dec
jl
adc
pushf
adc
jno
fldenv
fwait
iret
dec
addr16
add
int
clc
test
outsb
lods
daa
mov
ljmp
lcall
cmp
ret
push
mov
int
sbb
mov
into
fnstenv
mov
cmp
xchg
repz
push
andb
inc
push
mov
adc
and
inc
les
mov
shr
lods
or
push
mov
xchg
xlat
test
subl
mov
mov
jl
mov
adc
pop
fwait
dec
push
loopne
ss
adc
cld
fwait
fwait
stc
cmp
jae
pop
mov
sbb
outsb
cld
mov
mov
mov
cld
leave
popf
fnstsw
das
cld
lods
jl
ljmp
and
add
adc
ret
test
dec
imul
mov
add
jge
push
out
outsl
call
icebp
xchg
push
pop
aam
inc
lock
cs
out
les
pop
inc
std
shll
pop
data16
xor
pushf
out
call
or
mov
bound
or
test
dec
aam
and
pop
shrl
mov
mov
je
or
jmp
stos
popa
and
dec
ljmp
int
mov
xor
adc
idiv
test
dec
dec
out
xchg
sub
mov
movl
test
stos
ljmp
int
popf
subl
andl
sbb
push
sbb
sub
aaa
jb
jb
jle
push
pop
sbb
adc
das
jle
jnp
lods
test
xor
sub
xor
xchg
dec
pop
adc
cmpb
and
jno
jnp
xchg
hlt
shll
fidivrl
add
stos
mov
stos
nop
mov
push
mov
cwtl
cmpxchg
clc
fsubrs
lahf
jl
cmp
mov
cmp
imul
cmp
dec
sar
pop
sub
sub
in
jne
fnsave
sub
sti
mov
inc
mov
push
or
mov
pop
fists
push
mov
xor
add
jno
shrb
cmpsb
fs
sbb
push
jecxz
in
cltd
aaa
sub
xchg
xlat
adcb
lahf
lods
inc
rcrb
stos
je
jbe
cli
out
xor
cmp
sub
out
out
sahf
pop
aam
loopne
adc
jns
dec
cmp
movsl
xchg
adc
pushf
sub
je
cmc
frstpm(287
or
outsb
ljmp
and
daa
pop
scas
adc
aam
push
jp
movsb
fstl
adc
data16
lock
jno
dec
call
loopne
outsb
or
mov
outsl
sbb
mov
sub
push
sub
jo
nop
xchg
hlt
lcall
pop
pop
lea
xor
icebp
xchg
xor
jo
push
dec
jge
je
inc
pop
mov
es
mov
insb
das
dec
test
push
dec
rolb
loope
cmp
mov
lods
leave
js
loopne
mov
das
jge
les
pop
jnp
sti
push
ja
add
int3
and
int3
pusha
mov
sbb
pop
lret
add
xchg
dec
inc
lahf
inc
xchg
enter
in
filds
pusha
pop
pop
les
cmpsb
xchg
int
add
clc
mov
mov
out
adc
out
and
hlt
sub
xchg
aaa
nop
nop
dec
shlb
jnp
in
lods
ljmp
mov
mov
mov
jle
loopne
or
inc
out
in
sub
push
stos
and
xchg
and
es
mov
push
adc
push
addr16
lods
movsb
cmp
adc
mov
or
pusha
sbb
outsb
call
int3
add
pop
bswap
adc
mov
adc
pop
insb
xchg
sub
lds
add
aas
adc
mov
pop
pop
cmpsb
lods
jmp
cmpsl
nop
adc
mov
mov
jle
add
addl
push
movl
movsb
testb
sbbb
dec
imul
mov
dec
adc
inc
inc
push
fucomip
aaa
adc
rcr
js
call
mov
and
jecxz
into
jl
scas
lahf
add
shlb
push
mov
bnd
push
bound
leave
pop
mov
and
out
jae
orl
push
in
jle
dec
ljmp
mov
outsl
jns
or
inc
lods
add
leave
mov
jae
add
cmc
or
or
pop
xchg
pop
xor
je
pop
pop
mov
inc
dec
adc
mov
movl
mov
adc
jg
mov
in
cli
aad
jns
loope
sbb
loop
and
nop
loop
fstpt
ljmp
xchg
insl
ja
dec
imul
stos
fld
scas
xor
aas
stos
push
cmc
push
adc
insl
pop
mov
sbb
or
cmp
cmc
jmp
mov
adc
icebp
loop
ret
cmp
imul
bound
sti
pop
arpl
mov
or
sub
int3
jno
mov
dec
xor
push
jmp
es
out
out
cmp
addr16
test
ja
out
xor
mov
adc
add
mov
test
xor
decb
in
xchg
cld
int
jle
xchg
dec
adc
mov
mov
push
out
out
dec
cld
xchg
nop
adc
xor
push
push
sti
gs
aam
int3
sub
pop
lcall
les
cs
fstps
sbb
cmpsb
xchg
mov
lret
out
fs
mov
jecxz
mov
stos
mov
sti
andl
sbb
push
ds
and
add
jno
jae
inc
inc
mov
inc
sahf
and
pop
enter
mov
cmp
adc
aas
rclb
repz
cmp
ja
xchg
adc
imul
lods
mov
sub
cmp
fdivl
inc
fbld
notl
test
loope
mull
or
dec
movl
xor
hlt
adc
xchg
hlt
adc
mov
and
imul
push
sbb
out
push
pop
dec
add
ror
fstpt
loope
hlt
xchg
xchg
cltd
in
fwait
sbb
cmp
pusha
lahf
roll
popa
dec
addl
aam
jo
loope
cltd
inc
jmp
gs
jnp
jns
enter
push
xchg
xchg
jb
push
rcrb
jns
int3
mov
jp
pushf
int
dec
jl
xchg
inc
int3
jmp
ficomps
xchg
pop
dec
mov
scas
fdivs
repz
shlb
pop
xchg
lcall
or
add
aam
aas
push
fwait
je
pop
mov
fsubrs
stc
lea
xchg
xorl
in
jae
cltd
shll
cs
or
cmp
movsb
out
fidivl
adc
scas
adc
rorl
push
ss
lock
rorl
cmpsl
xchg
pop
fisubl
arpl
sahf
dec
mov
dec
xor
cmp
pop
out
ror
jnp
ds
jmp
mov
dec
clc
cmp
mov
push
pop
repnz
jecxz
sub
out
bound
adc
ss
or
mov
mov
inc
push
scas
adc
hlt
cmp
stos
or
sbb
ljmp
push
js
adc
in
scas
out
sbb
sbb
or
dec
pop
mov
pop
insb
not
and
sub
mov
insl
mov
inc
xor
dec
xchg
mov
adc
xor
inc
fxtract
iret
xorb
cltd
jecxz
add
pop
mov
movsl
xchg
popf
por
mulb
jb
dec
mov
testb
mov
and
pop
test
das
xor
mov
mov
or
xor
inc
cwtl
or
lret
movsb
xchg
enter
cld
and
addr16
iret
cli
add
out
cmp
clc
push
pop
pop
aaa
cmp
adc
sub
push
popf
push
pop
inc
lahf
dec
sub
push
mov
lock
rcr
lds
dec
xchg
xchg
and
pop
mov
enter
adc
insb
adc
jmp
dec
fwait
lock
jecxz
les
dec
test
lock
fldl
dec
cli
shll
sub
sarb
sub
lret
jl
or
aas
inc
xchg
bndldx
stos
cli
mov
lods
sbb
push
les
ret
mov
jns
in
jne
mov
push
inc
or
into
dec
jb
push
mov
loope
xchg
fbstp
repz
mov
sbb
add
lods
sbb
xor
test
clc
adc
add
insl
pop
loopne
stc
push
leave
dec
sbb
cmp
pop
loopne
test
rcll
pushf
push
sbb
and
sbb
dec
gs
xchg
addr16
adc
rcrb
fst
les
iret
add
ljmp
jns
sub
sub
inc
fldt
jno
or
add
lods
test
dec
adc
ficoms
and
pop
or
mov
or
mov
cmp
sub
xchg
lds
lods
mov
notl
adc
cmp
js
push
push
push
leave
pusha
vcvtsd2si
scas
data16
loope
call
sar
es
fs
dec
xor
sub
and
idivl
dec
xor
frstor
mov
dec
pop
or
cltd
push
jmp
popa
orb
lret
sub
filds
push
cmpsb
xor
imul
inc
and
je
sbb
fdivrs
push
add
pop
or
mul
es
or
mov
inc
xor
push
or
push
sub
daa
pop
inc
aam
xchg
cmp
aad
pusha
cmpsl
and
xlat
pop
and
pop
push
xchg
add
dec
and
lods
lahf
mov
test
dec
push
mov
add
js
mov
inc
xor
popa
inc
and
clc
lcall
jecxz
repz
iret
push
jge
xchg
sbb
mov
sahf
sub
clc
mov
rcll
outsb
mov
mov
lock
cmp
xchg
jb
stc
add
lods
ds
dec
filds
add
sti
dec
insl
mov
xlat
inc
loop
adc
call
jns
in
jne
cld
ds
xchg
ret
and
ficompl
mov
inc
idivl
mov
pusha
popl
orb
and
lea
mov
sbb
add
rcl
sti
and
iret
sbb
out
imul
push
mov
mov
dec
jle
out
cmp
pop
bound
add
lods
cs
fdivl
xchg
scas
xor
jmp
push
cmpsl
sbb
stc
ret
sti
andb
sub
mov
or
mov
push
cmp
xchg
hlt
cmp
das
repnz
pop
push
sbb
fdivrs
aad
test
sub
sub
dec
lret
enter
aas
or
jae
stc
and
insb
movsl
add
int3
and
sarl
dec
and
cmc
pop
shlb
inc
sub
pop
xor
jno
int3
mov
scas
add
xchg
pop
and
leave
push
pop
test
scas
push
inc
xchg
adc
into
push
test
sbb
leave
idivl
fnstsw
std
das
pusha
pop
js
jne
popa
test
ror
mov
xchg
mov
push
test
outsl
or
cld
sub
clc
jp
popa
cs
mov
shrl
push
mov
mov
js
pop
repz
stc
mov
cli
leave
fildll
sahf
mov
lret
push
es
dec
and
jle
fwait
push
inc
sti
push
adc
fimuls
mov
rol
fcomps
je
push
mov
jmp
or
ds
jecxz
inc
mov
aad
mov
and
shrb
scas
mov
in
xchg
cmp
dec
jecxz
jbe
addl
sahf
cs
int
addb
xor
cmpsl
scas
jo
xchg
mov
dec
cmp
ss
mov
mov
inc
sub
jg
fsubl
mov
xchg
jg
cmp
notb
pushaw
pop
sub
xor
rcrl
mov
inc
mov
sahf
sti
int3
dec
xor
sub
std
repz
outsb
aas
das
lds
jmp
xor
or
and
cmpsl
add
imul
mov
cmp
shll
mov
aad
imull
lods
sbb
or
clc
pop
loop
shlb
add
ret
xor
mov
xchg
inc
sub
test
add
loop
dec
in
cmp
jbe
leave
inc
push
fsubl
inc
repnz
mov
gs
iret
cld
cmp
shl
inc
jbe
add
mov
leave
in
fadds
test
jo
mov
add
pop
or
cld
adc
xchg
leave
push
and
xor
pushf
test
repz
inc
ror
or
ret
dec
fucomip
ljmp
mov
je
dec
xor
into
aad
pushf
and
mov
xor
das
adc
mov
xchg
sbb
push
mov
or
jge
push
aas
mov
xor
jnp
fimull
daa
loop
popa
sahf
int
cwtl
ret
loop
movsb
sti
test
ja
jecxz
in
iret
adc
lcall
ds
inc
into
test
mov
lea
cmp
dec
outsb
mov
mov
sbb
out
add
adc
aad
je
scas
lret
aam
sbb
fidivrl
rorl
xchg
cmp
push
pop
adc
cmp
jbe
cmpsb
ret
jb
sbb
testl
xor
mov
cmp
pop
cwtl
arpl
inc
movsb
adc
xor
repz
sarl
stos
stc
es
mov
pop
mov
inc
add
repz
sbb
adc
add
mov
push
in
sbb
sar
repz
push
dec
scas
or
inc
es
loopne
popf
push
iret
push
add
push
mov
scas
test
in
repnz
or
orb
xchg
add
scas
test
mov
sub
lcall
add
push
mov
cli
xchg
mov
leave
push
mov
call
mov
dec
imul
arpl
pop
sub
or
popa
jns
adc
sub
clc
push
rcll
into
nop
cmp
test
cltd
sbb
leave
add
and
out
and
imul
cwtl
popa
inc
repnz
movsb
dec
icebp
mov
mov
cmpl
mov
xchg
fwait
xchg
xor
mov
sbb
shr
or
mov
jle
out
and
dec
es
idivb
ret
jmp
fmul
scas
fadds
shl
repnz
inc
hlt
push
repnz
movsl
cmpsl
jo
xorl
push
sbb
int3
xchg
xchg
sub
dec
jno
jecxz
repnz
lea
xchg
into
cmp
scas
pop
test
test
jnp
add
push
jnp
xorb
mov
sahf
push
insl
loope
dec
ret
das
push
mov
sub
and
scas
jmp
inc
lret
xlat
or
in
sbb
in
xlat
jle
shll
dec
lahf
dec
fidivrl
jecxz
repnz
iret
pop
cwtl
xchg
mov
mov
dec
jb
sub
adc
ljmp
nop
jbe
aad
pop
mov
paddb
inc
sub
or
cmp
mov
loope
in
pop
or
jmp
in
mov
arpl
movsl
push
std
sbb
fs
mov
inc
push
pop
xor
push
adc
mov
cwtl
daa
scas
jnp
cmp
cwtl
push
pop
add
ret
pusha
andb
mov
xor
adc
rcll
push
jne
cmp
jne
push
movsl
pop
dec
mov
jne
flds
xor
xor
jne
arpl
cwtl
daa
lcall
movsb
dec
push
or
cld
jle
mov
xchg
and
xchg
push
or
pop
xor
lea
mov
adc
out
ret
into
mov
inc
mov
sbb
daa
jae
lds
or
fcomip
jo
lods
push
mov
fwait
push
cwtl
nop
add
mov
or
pop
adc
cmp
jg
mov
fdivl
insl
push
lods
push
cltd
incl
dec
sbb
out
std
cmp
pop
push
sbb
dec
adc
dec
jge
mov
sub
xchg
es
pop
adc
je
xlat
add
sub
out
or
into
cmc
mov
repz
dec
in
imull
andl
xchg
pop
cld
stc
xor
cmp
push
push
bound
fstps
cld
mov
fisubrs
push
xchg
mov
mov
in
push
xor
insb
xcrypt-cbc
cmpsl
push
xor
sbb
jns
ret
pop
sbb
lds
xor
lods
scas
daa
out
add
enter
lahf
rcr
xor
push
sub
scas
enter
scas
mov
iret
testl
cltd
add
jge
jne
lock
cmp
mov
dec
cmp
jbe
cltd
push
sbbl
test
stos
and
mov
push
inc
enter
bound
adc
sbb
loope
pop
arpl
icebp
and
nop
out
fdivrl
mov
pop
jmp
inc
xor
pushf
sub
pop
sbb
call
scas
mov
jo
dec
fildl
or
sub
jns
or
sar
mov
and
mov
or
test
mov
or
xchg
and
test
add
cmp
sbb
icebp
cmp
aad
sub
jge
mov
xor
mov
jmp
or
call
jb
push
push
xchg
or
xor
dec
int
out
lea
mul
insl
push
andl
push
andb
ret
xor
push
add
sbb
cmp
movsb
mov
pop
arpl
aam
inc
add
push
movsb
pop
jns
sbb
mov
std
sub
adc
push
ljmp
in
cmp
adc
pop
into
repnz
idiv
fst
repz
xor
xchg
icebp
cwtl
xor
popa
movsb
xchg
or
adc
add
insb
mov
cmp
add
xor
outsl
cli
mov
leave
mov
pop
adc
ret
add
xchg
pop
icebp
dec
push
push
sbb
sbbl
test
sub
das
add
cld
jle
cmp
leave
sahf
pop
fs
sbb
enter
cmc
mov
push
dec
les
fdivp
jnp
pushl
push
mov
adc
decl
pop
dec
fdivrs
mov
fdivrl
andl
lcall
nop
stos
add
loop
cmp
push
out
jp
and
les
jmp
inc
inc
cli
mov
ds
int
cmp
adc
fmuls
cmp
mov
out
adc
test
daa
pop
aam
jns
cltd
test
fcomps
shll
pusha
jb
cmp
or
push
rorl
and
hlt
add
cwtl
das
or
ret
mov
hlt
mov
mov
adc
pop
lds
dec
xchg
sub
jge
jl
repz
inc
pop
sbb
dec
fdivl
lea
push
sahf
sti
imull
in
dec
std
cmp
lea
sbb
jbe
addr16
stos
sarl
jne
bound
pop
add
out
into
push
mov
btr
je
adc
lock
sub
adc
add
dec
push
push
xor
jmp
int
fcoms
cmp
mov
leave
cmp
xor
dec
inc
clc
add
lods
imul
stos
xchg
dec
adc
mov
jae
fwait
and
outsl
inc
popa
fmul
mov
or
mov
imul
mov
in
sbb
jl
mov
and
mov
loope
xlat
cli
call
outsb
cwtl
or
jle,pn
cmpsb
int
add
push
les
push
xacquire
xchg
fs
or
lcall
movsb
sbb
push
dec
cwtl
adc
inc
inc
cmp
mov
vmovss
dec
xor
dec
lock
js
push
inc
in
pusha
push
lods
add
mov
lea
arpl
adc
out
mov
test
inc
in
gs
lea
fdiv
xor
or
out
jg
mov
pop
inc
or
or
mov
andl
xor
imulb
leave
jne
sarb
test
imul
dec
hlt
mov
inc
inc
cld
adc
add
pop
sbb
ret
fwait
sbb
adc
andb
cmp
iret
arpl
jb
cmp
jbe
lea
mov
xchg
push
fs
cmp
cmp
fnsetpm(287
xchg
adc
ja
xchg
mov
pusha
jp
data16
cmp
push
scas
aam
daa
jo
js
jg
clc
std
dec
cld
pushf
test
mov
xor
push
or
xchg
sbb
fnstenv
jbe
addb
cmpsb
mov
add
add
out
fsts
je
inc
jge
data16
movsl
vpsrlq
add
cs
mov
stos
sub
pop
out
dec
inc
inc
movsb
ficoms
rorl
in
xchg
add
in
or
add
push
jo
xchg
inc
add
pop
mov
and
imul
orl
popa
cmc
add
dec
sbb
dec
xor
dec
aam
inc
jbe
aam
and
push
sub
sahf
fwait
and
test
in
loop
into
or
xchg
jmp
leave
cld
sbb
sub
mov
push
xchg
clc
push
jbe
inc
inc
xchg
mov
cmpsl
idivl
jo
dec
les
cmpsb
dec
mov
shr
xchg
cltd
into
cmp
or
jle
jnp
jg
jecxz
dec
cmp
xchg
fsubrs
repnz
mov
dec
dec
mov
mov
cltd
sahf
and
jmp
pop
out
adc
inc
add
push
loop
and
test
insb
xor
hlt
das
aad
xor
jo
aaa
sbb
call
and
push
xchg
stos
mov
jns
dec
jbe
fldenv
add
outsb
push
imul
push
xchg
data16
adc
lods
aam
inc
mov
cltd
pusha
jno
movsl
jmp
enter
loopne
and
add
orb
movsl
jge
pushf
mov
pop
dec
lahf
andnps
mov
mov
clc
cwtl
inc
mov
repnz
xor
div
xor
shlb
jbe
cmpsl
dec
jge
pop
mov
loop
es
sbb
pop
test
mov
jbe
sub
divl
push
sahf
cmp
dec
adc
sub
std
pop
fcmovne
aaa
add
mov
clc
fwait
pop
inc
adc
insb
cmp
sbb
lahf
add
loop
push
sbb
data16
imul
arpl
adc
xchg
add
test
jo
adc
int3
push
cli
push
mov
adc
pop
loopne
ror
jb
mov
pop
cltd
mov
xchg
pop
lock
inc
add
repnz
mov
shl
inc
fidivrl
mov
fwait
lcall
pop
addr16
sub
xor
jnp
ljmp
sbb
push
les
jge
daa
js
mov
mov
or
adc
in
mov
and
sbbb
aam
mov
jno
loope
mov
fidivl
xchg
fdivrl
mov
fs
xchg
fs
push
mov
push
popf
sub
movsl
mov
jno
addb
xchg
push
sub
das
enter
bound
sahf
sbb
sub
cmp
cmp
rorl
pop
es
jle
cmpsb
outsb
ret
mov
mov
orb
jmp
dec
int3
mov
adc
pushf
subl
cwtl
xchg
mov
push
lock
insb
adc
into
push
mov
xchg
cli
mov
mov
iret
push
inc
xchg
push
push
cmpsl
jns
ds
sub
mov
popa
jo
mov
add
push
out
jb
sbb
xchg
pop
insb
mov
dec
arpl
mov
xchg
fcomi
fisttps
out
insl
cwtl
pop
lods
sub
cltd
shll
xlat
xchg
and
inc
lahf
popf
inc
outsl
xchg
dec
sub
in
inc
push
mov
ss
fs
xchg
jae
jb
push
daa
fiaddl
into
or
bound
out
and
out
sub
movsl
test
sarl
add
mov
call
or
gs
jae
ljmp
adc
rorb
dec
fdivr
xor
cmpsb
mov
stc
inc
aaa
push
nop/reserved
js
pop
xor
loope
mov
arpl
shlb
adc
adc
mov
sbb
sbb
out
fwait
nop
fsub
jp
sti
jbe
ret
loop
pop
pop
xchg
mov
mov
fdivl
rcrl
jl
fwait
push
mov
test
loop
imul
and
lret
mov
fwait
int
fnstsw
rcrb
inc
out
push
jnp
xor
movsl
sub
and
mov
sub
mov
loopne
push
push
insb
in
test
sarb
lahf
mov
incb
pop
sbb
mov
push
rcr
into
xlat
out
mov
sbb
cwtl
jg
scas
enter
cmpsl
insb
pop
add
fs
mov
inc
lds
pushf
and
add
mov
fnstcw
dec
jns
inc
add
js
fwait
inc
shlb
nop
xchg
sbb
xlat
lods
xchg
xchg
inc
jns
and
fwait
ret
mov
jmp
mov
lods
lds
and
cmp
lret
scas
sbb
scas
insl
testb
lods
push
cmp
jge
mov
pop
insb
or
inc
out
mov
fcomip
movsb
inc
mov
push
ja
and
je
mov
sub
adc
test
rcr
jecxz
dec
aam
jge
sub
in
xchg
pop
rcrb
cmc
and
mov
pusha
test
mov
jb
xor
cwtl
lahf
testl
mov
ds
mov
add
stos
pop
sub
shl
int
ret
adc
iret
pop
addr16
jns
arpl
mov
mov
imul
outsb
pop
sbb
es
inc
push
mov
addb
xor
lods
aad
jne
cmp
sti
jmp
lahf
dec
fdivs
outsl
mov
push
outsl
cmc
subl
int
inc
shl
cmpsl
xchg
xchg
fwait
pop
sub
cmp
repnz
jae
adcb
mov
repz
rclb
sbb
xor
fs
jle
mov
out
push
inc
cli
fildll
les
scas
inc
add
xlat
sbb
cmp
or
lock
repz
sub
es
push
cmp
shrb
xor
das
clc
sub
andb
rorl
push
push
int3
push
scas
xchg
out
dec
in
lods
cwtl
mov
mov
sbb
out
out
mov
xchg
cwtl
adc
leave
mov
push
or
aad
insb
or
mov
js
add
jne
dec
lret
ficoml
mov
sbb
hlt
lret
pop
fsubs
lret
loop
adc
ret
mov
add
shrl
adc
pop
in
dec
xlat
inc
js
jg
std
int
out
in
mov
xchg
sub
fisubl
enter
pop
and
jecxz
arpl
nop
sub
andps
imul
xor
dec
and
adc
mov
addr16
xchg
and
mov
adc
add
adc
jg
xor
push
adc
xor
shll
popa
mov
lods
xor
and
popf
or
movsl
xchg
cmp
mov
nop
out
or
xchg
pop
mov
and
cmpsl
xor
cmp
mov
xorb
push
jle
sub
push
mov
mov
mov
out
ss
ds
insl
mov
mov
cli
xor
xlat
or
sbb
ret
shl
test
imul
subl
adc
loop
aad
add
mov
sub
pop
lock
sub
test
mov
add
and
jno
cwtl
enter
dec
add
mov
xor
testl
out
insl
sub
cmpsl
add
sub
sub
je
xchg
inc
fdivp
popf
xchg
int3
push
pusha
ret
iret
sarb
in
sbb
mov
jbe
cmp
pop
mov
outsl
and
cmp
add
adcb
insl
out
sub
xchg
push
xor
jne
fdivs
mov
dec
cmp
stc
test
add
add
mov
jns
in
out
add
mov
orb
dec
pcmpgtw
jo
jp
rcrb
cli
sub
mov
mov
out
pop
add
and
shlb
push
lock
dec
xlat
ret
lahf
mov
lret
mov
jbe
mov
jecxz
mov
mov
lcall
out
add
data16
out
in
push
xor
adc
std
adc
lods
cld
ffree
fwait
les
push
out
mov
movsl
jns
arpl
fstps
es
pop
and
xor
dec
imul
cmp
cmc
dec
ja
inc
adc
mov
mov
jo
sbb
sub
push
lea
or
imul
cmpsl
cmp
std
enter
cld
shl
sbb
jge
sbb
xor
or
leave
cmp
lods
xchg
call
in
push
dec
shl
lods
lock
xchg
mov
pmullw
or
pop
div
add
aad
ds
mov
mov
into
cmp
popa
pop
loopne
fwait
dec
add
sbb
push
rcrl
aas
cs
dec
or
out
fwait
and
pop
lods
cltd
xor
mov
pop
aam
pop
jne
jp
cmc
cmc
adc
mov
mov
xor
scas
int3
adc
lods
push
dec
and
lock
cmp
lods
push
popa
pop
add
std
push
je
lods
lock
mov
push
add
cmp
pop
lea
or
inc
pop
lea
mov
movsl
out
adc
sarb
sbb
mov
sub
sbb
push
xchg
enter
arpl
and
adc
hlt
fdivl
hlt
popa
insb
mov
jmp
aaa
mov
sub
stc
pop
mov
ljmp
lahf
repnz
and
cmp
std
fsubrl
xchg
inc
add
push
les
fcmovbe
inc
mov
pop
lods
jmp
loopne
cmp
sar
mov
fldl
and
mov
fstps
jo
sbb
fstp
mov
mov
arpl
add
adc
mov
lcall
xchg
rorb
mov
jle
lret
jge
cltd
and
jb
das
hlt
inc
cmp
jbe
mov
pop
mov
addb
pop
ret
mov
ds
jnp
ss
mov
lock
insl
push
xchg
mov
push
repnz
and
sti
out
sub
movsb
jno
pop
insb
mov
inc
sbb
sub
inc
loope
mov
mov
xchg
sbb
aam
lock
and
dec
xlat
pop
push
mov
jp
adc
pusha
add
cmp
faddl
fistl
mov
shlb
inc
neg
movsl
pop
fdivr
dec
shll
jae,pt
pusha
jmp
movsb
push
xchg
cli
xchg
pop
repnz
mov
sub
out
repnz
xchg
cmp
mov
in
pop
mov
into
dec
push
mov
and
and
addr16
lret
clc
xchg
jns
mov
out
inc
rcl
bound
iret
adc
fmul
push
inc
sub
pusha
shrl
mov
jo
imul
mov
mov
or
jg
push
rcll
imul
mov
push
stos
xlat
iret
dec
clc
add
notl
jns
aaa
in
mov
push
dec
popf
xchg
fistpll
jnp
cmpsl
lea
xlat
jmp
subb
cmp
jl
aaa
pushf
das
pop
lea
mov
push
rorb
clc
pop
out
jge
adc
xlat
or
mov
insb
scas
dec
repnz
jb
les
sub
loopne
in
popf
imul
outsb
aam
cmp
mov
nop
inc
addl
sub
stos
xor
or
sub
out
pop
ljmp
or
shrb
cmp
push
pop
inc
aaa
in
out
pop
inc
push
or
arpl
sbb
mov
rcr
jb
pop
jp
mov
or
std
in
xor
pop
xor
and
push
dec
lods
data16
adc
inc
cmp
or
jmp
popf
lcall
stc
arpl
jno
lahf
mov
cmp
mov
jae
cmp
imul
movsb
das
movsl
fdivp
shll
pop
or
or
negl
mov
mov
sarb
or
cmp
dec
jno
sbb
xchg
add
xor
out
mov
pop
negb
inc
lea
xchg
add
idivl
xor
inc
mov
mov
mov
test
inc
sbb
out
mov
pop
test
daa
jge
pop
add
dec
stos
testb
pop
dec
jae
repz
stos
out
les
adc
cltd
adc
jecxz
push
ljmp
mov
loope
inc
cmpsl
dec
lds
fimull
pusha
cmpsl
jnp
sahf
mov
leave
dec
stc
jbe
jb
imul
inc
xchg
outsl
xor
fidivs
mov
test
lahf
fwait
pop
fldenv
loopne
out
sti
out
sbb
dec
adc
mov
ds
insl
cmp
push
inc
jne
cmpsl
mov
cs
jns
sub
and
jl
push
mov
push
sbb
call
mov
adcb
mov
sbb
lea
inc
add
or
scas
dec
mov
xor
popa
out
rcr
mov
pop
cmp
xor
push
das
in
sub
xor
push
xlat
scas
insb
and
mov
std
stos
mov
sbb
scas
cmpsl
and
fxch
or
pop
mov
jmp
add
sbb
mov
mov
inc
insb
mov
and
icebp
cmp
jl
shll
inc
jecxz
pop
and
pop
adc
mov
hlt
ja
rorb
in
cmpsl
mov
mov
test
adc
jg
pop
loop
cmp
xor
lock
mov
mov
jno
sub
imul
mov
push
mov
icebp
inc
mov
and
cmp
imul
dec
aaa
xor
stos
fs
inc
push
push
pop
shll
jle
xor
lret
mov
lods
cmp
jnp
sbb
jns
push
cli
push
cld
out
in
sbbl
mov
mov
lret
nop
out
jno
inc
repz
mov
push
add
jl
add
jge
je
sub
adc
test
call
jmp
mov
jbe
adc
pop
test
xchg
jecxz
insb
pop
ficoml
mov
adc
xor
dec
push
in
jo
dec
push
xlat
lahf
or
rolb
lods
dec
push
fstps
mov
push
mov
daa
ret
sbb
gs
loope
popf
xor
xor
push
out
aam
pop
shll
jmp
dec
and
flds
add
subb
jae
hlt
jne
jnp
push
xor
repz
out
iret
adc
jge
push
dec
push
out
in
notl
mov
int3
cmp
popf
adc
in
imul
negl
imul
popf
jg
ficoml
mov
mov
xchg
mov
pcmpeqd
icebp
pop
call
jb
sbb
out
mov
repnz
sbb
lods
xor
pop
cmpsl
lahf
mov
jb
mov
jnp
dec
imul
std
arpl
mov
xor
call
jne
out
cmp
das
test
xchg
out
mov
imul
mov
lret
jns
mov
pop
mov
xchg
fwait
jae
xlat
add
or
or
mov
testb
imul
push
add
imul
enter
jecxz
sbbl
xchg
or
lock
adc
jge
cmp
ljmp
add
rcl
cmp
push
pop
pop
xchg
xchg
mov
mov
loop
xor
ljmp
cmp
lahf
push
lock
insl
sti
dec
loope
ret
push
into
xor
lcall
inc
pop
jne
mov
aam
loopne
shlb
fildll
in
ja
into
data16
jae
and
js
or
faddl
xor
add
lds
hlt
enter
gs
inc
scas
xchg
insb
xor
cmp
aad
push
inc
out
inc
shrl
stos
push
xlat
mov
sbb
add
jbe
lods
cwtl
and
imul
dec
nop
adc
out
mov
or
xchg
mov
pop
lret
cld
xlat
in
mov
mov
cmc
jbe
mov
in
in
sub
pop
mov
push
rorl
mov
lods
inc
dec
jae
icebp
ds
lahf
fwait
sub
loop
mov
je
roll
int
jnp
fcoms
lds
hlt
add
imul
stos
adc
push
cli
mov
sub
and
jns
push
inc
cltd
movsb
mov
pop
and
cwtl
pop
dec
push
pop
test
xlat
jp
jo
adc
dec
sbb
test
fisubl
jno
rcl
mul
jnp
lods
sbb
mov
fnstenv
xor
stc
jae
mov
pushf
leave
cmp
xchg
add
icebp
xor
fisttpll
out
push
mov
push
mov
and
iret
mov
dec
mov
jb
pushl
inc
pop
test
cmp
sub
adc
mov
xor
stc
mov
mov
int3
addr16
dec
mov
dec
imul
push
clc
push
push
mov
adc
arpl
dec
jne
and
pop
fwait
inc
pop
mov
or
sub
fmuls
xlat
lcall
adc
jnp
loopne
loop
push
mov
stos
xchg
ja
shlb
lods
xchg
mov
mov
sub
pushf
jb
mov
pop
push
pushl
insb
xchg
iret
das
mov
add
adc
das
mov
inc
cmpl
iret
and
push
add
popl
ss
push
stc
sub
add
push
xchg
cmp
in
adc
sbb
mov
push
jp
pop
shlb
push
xchg
sbb
adc
jmp
mov
shll
jb
inc
ss
push
jae
dec
imul
movsl
lret
or
cmp
xorb
fnstsw
jmp
mov
push
test
popa
sub
jnp
sub
jl
pop
pop
fsts
sub
mov
lret
add
dec
mov
cld
mov
mov
inc
or
xchg
add
movsb
clc
popa
sbbl
mov
dec
cmp
sub
dec
aas
imul
jne
sub
add
or
cmp
icebp
or
rcll
xchg
std
rclb
mov
lods
addr16
call
push
fidivl
mov
or
fistps
sbb
and
pushf
inc
ljmp
outsb
call
enter
push
and
xor
int
or
shlb
mov
push
push
das
add
dec
mov
stc
popa
cmp
int
mov
sahf
out
jl
fmulp
inc
mov
push
cli
mov
lds
xchg
and
jnp
pusha
add
ja
or
push
scas
push
or
repz
jl
shrl
mov
push
push
sub
jno
cmp
xor
xor
insb
ljmp
in
mov
stos
aas
mov
pop
aad
repz
adc
push
inc
sbb
hlt
and
dec
and
ficompl
call
out
es
mov
rcl
lea
push
cmp
mov
jl
rclb
xlat
jle
jp
sbb
mov
daa
aaa
aas
ret
mov
sub
scas
sahf
jno
sbb
fidivs
jle
sbb
xlat
out
pop
lea
pop
mov
xor
inc
push
jl
pop
xchg
pop
mov
sbb
lahf
mov
xchg
repz
mov
push
shrb
inc
movsl
mov
and
stos
bound
sahf
cs
add
lcall
push
cmpb
aas
add
jmp
fsubrl
aam
adc
mov
das
leave
lea
and
push
sahf
test
push
cltd
cwtl
imull
pop
jbe
push
in
dec
cmp
cltd
lahf
inc
test
or
cmp
test
sub
inc
ljmp
popf
std
out
jge
loopne
and
pop
loop
sub
sti
sbb
fsubs
inc
mov
mov
dec
and
cs
pushf
xor
jl
int3
jns
les
pop
cmp
lea
int
out
dec
loopne
out
add
inc
jg
or
mov
jmp
add
icebp
pop
nop
mov
test
insb
jns
les
dec
clc
sbb
sti
ljmp
iret
or
jmp
das
in
push
add
mov
popf
cmp
jnp
inc
mov
jle
xchg
xor
cmp
mov
addr16
adc
pusha
jmp
arpl
or
mov
into
adc
add
sbb
fists
jl
or
cmpsl
in
mov
jo
sub
data16
jne
and
jns
call
icebp
bound
cli
pop
popf
mov
shll
inc
dec
fsub
jno
lret
es
lahf
lea
or
pop
and
mov
fstl
inc
mov
mov
daa
jp
cmpsb
lcall
xorl
sahf
cmp
js
in
and
lds
jle
sbb
ret
cmp
xor
mov
loope
sbb
loopne
lahf
and
ret
mov
pop
out
in
pop
mov
imul
repz
xor
aaa
dec
mov
rcrl
aaa
xor
push
int
dec
mov
out
jo
push
cld
jecxz
jo
in
aaa
inc
in
cmpsl
cmpsl
cltd
jb
mov
loope
pop
test
insb
ficompl
out
xchg
push
dec
clc
cltd
out
mov
fbstp
shlb
xor
insl
push
scas
dec
rcll
xor
lock
les
in
or
dec
cmp
jns
movsb
arpl
mov
pushf
mov
jo
jb
pop
cmp
mov
shl
cmp
aam
and
pop
adc
pop
hlt
mov
add
push
cltd
inc
sub
incb
jg
mov
subb
pop
jg
outsb
inc
movsl
in
shlb
cmp
pop
mov
lods
jg
es
imul
push
cmpsl
inc
je
xchg
jns
xor
mov
sub
aas
popf
pop
aas
or
adc
xchg
sbb
imul
cmp
sti
dec
lahf
fimuls
mov
xor
add
mov
mov
jno
pop
pusha
add
mov
push
sub
adc
jge
xor
loopne
and
mov
ljmp
xchg
dec
cmp
scas
jns
xor
addl
mov
xchg
jp
lret
jmp
jmp
outsl
xor
ficomps
mov
test
pop
or
fwait
jge
sub
push
mov
mov
lods
test
notb
into
test
test
and
jo
mov
push
push
mov
test
jecxz
sbb
addr16
out
test
mov
dec
mov
and
dec
cmc
ret
aad
cmpb
mov
fstpt
add
mov
js
jbe
or
push
aam
push
stos
dec
jmp
pusha
lods
xor
in
in
bound
sbb
inc
push
cmp
mov
stos
arpl
out
xchg
sbbl
popf
push
ffreep
cmpsb
pop
popf
cmp
call
subb
mov
ret
jl,pt
push
test
inc
rorb
mov
gs
scas
movsl
mov
jg
push
push
push
rclb
xorb
cs
leave
rcr
or
movsb
test
inc
loopne
jge
push
jae
xor
or
dec
fabs
add
loopne
sbb
sbb
jns
ret
inc
sbb
aas
pop
loopne
jle
mov
or
imul
hlt
stos
adc
leave
cli
out
cmpsl
rclb
or
adc
lds
popa
add
pop
jo
leave
ret
pop
fbstp
test
pop
mov
sub
mov
sub
mov
mov
push
pusha
insb
loop
in
lret
or
push
jp
fistpl
push
jmp
push
cwtl
lods
adc
mov
fnstcw
gs
cld
out
adc
xor
fmull
fsubrl
ljmp
xchg
mov
mov
push
fbld
pop
or
fsubrl
cmc
push
leave
stos
add
sbb
sti
cwtl
pop
mov
addb
rcrb
aaa
xchg
nop
xor
xchg
xor
and
int
iret
movsb
sub
int
pushf
sub
pop
or
and
xchg
lea
adc
inc
xchg
shl
iret
imul
xor
in
mov
xor
data16
dec
pop
pop
inc
fcmovne
xlat
in
xor
outsl
mov
jg
lahf
xchg
adc
mov
pop
and
jl
gs
fcmovu
xor
test
jle
mov
inc
shl
jnp
sbb
lods
ja
push
adc
test
cwtl
sub
repnz
mov
js
mov
fs
push
mulb
pop
faddl
aad
ja
test
cmp
fs
test
pop
jae
cmpb
enter
div
jmp
in
sub
pop
sbb
inc
leave
out
shlb
add
mov
iret
leave
cmp
pop
out
cli
mov
movsl
jl
jle
data16
cli
lock
adc
lret
lds
and
jl
pop
lea
icebp
popa
sbbb
jbe
and
dec
push
loopne
lahf
inc
or
ret
and
roll
insb
cmp
or
ret
mov
mov
clc
in
mov
jg
mov
aaa
adc
daa
fwait
mov
lahf
iret
mov
or
add
mov
xor
insb
shrb
jb
cmp
sub
jecxz
push
sub
cmc
adc
ret
and
shll
lock
in
cld
sbb
or
rorb
push
inc
xor
enter
in
xor
ss
popa
mov
stc
stos
inc
mov
dec
jecxz
pop
add
mov
stos
jmp
pmulhw
sbb
lds
xchg
movsl
inc
pop
xchg
push
mov
push
mov
pop
push
sbb
ds
ljmp
loope
mov
mov
in
mov
shlb
out
mov
shll
jle
pop
and
jmp
test
mov
jbe
out
mov
xchg
mov
push
dec
clc
sti
add
add
push
sbb
pop
xor
inc
js
push
ret
inc
addr16
jb
xchg
lahf
cmp
insl
movsb
xor
inc
fwait
add
and
and
cs
inc
xor
out
lret
jns
sbb
sbb
test
mov
jae
ret
xor
in
in
mov
and
cmc
leave
pop
mov
xchg
push
frstor
mov
fstl
stos
dec
fcmovnu
push
and
add
add
xchg
fnstenv
lahf
out
bound
or
mov
dec
ficoms
xchg
xor
adc
lret
adc
lret
pop
clc
add
xor
add
rcrl
add
adc
dec
sarb
dec
push
test
test
fsub
sbb
subb
fists
sub
add
idivl
mov
pop
dec
and
mov
je
neg
clc
es
std
dec
jge
das
xor
pusha
insb
aaa
mov
insb
cwtl
ss
leave
adc
or
idiv
adc
add
sub
push
sbbl
std
sbb
es
out
outsl
popf
jae
inc
in
lret
jno
les
rorl
push
xor
or
data16
ljmp
pusha
orb
pop
lods
call
xor
sub
fildll
movsl
sub
jae
pop
pushf
mov
xchg
and
fcompl
jnp
loope
xchg
jo
dec
cmp
add
inc
hlt
pop
iret
inc
mov
cs
mov
aas
out
dec
add
and
jle
sbb
repz
pop
jbe
in
mov
ljmp
test
test
in
cmp
aas
call
sub
lods
jno
sub
insb
xchg
sub
and
int
mov
jmp
xchg
inc
in
test
xchg
adc
pushf
sub
pusha
inc
push
leave
jge
cmp
cwtl
aad
hlt
or
int3
sahf
imul
mov
fwait
cld
jmp
cmp
add
in
addr16
dec
sub
dec
and
xchg
js
loopne
dec
pop
pop
inc
push
sahf
enter
push
in
pop
shlb
mov
ja
ss
in
rcr
or
mov
mov
cmpsl
enter
or
adc
jnp
jns
xor
insb
hlt
dec
imul
cmpsb
movsb
movsb
jae
xchg
mov
push
or
add
jno
leave
dec
iret
xchg
popa
ljmp
cmp
pop
mov
adc
movsl
xor
lcall
cld
jecxz
adc
xchg
and
dec
fs
cmpsl
ds
ficompl
add
dec
bndmov
fcmove
fsubl
movsl
outsb
test
out
fildll
clc
or
lret
and
inc
cld
les
fdivl
add
lock
stos
jl
xchg
cli
dec
dec
arpl
jnp
xor
and
mov
out
in
dec
test
push
add
je
dec
adc
pop
adc
or
or
dec
pop
jmp
cmp
in
scas
and
fdivs
ror
cmp
xchg
test
cli
aam
iret
nop
pop
pop
fmul
out
jecxz
lret
pop
into
push
adc
xor
mov
mov
push
mov
mov
pop
jo
inc
pop
outsl
push
insb
ja
js
jno
xchg
jae
and
ret
cmp
push
mov
sub
in
scas
roll
mov
outsl
jmp
or
mov
popa
les
shlb
es
cmpsb
mov
popf
call
inc
adc
xor
mov
and
dec
push
sbb
inc
icebp
push
xchg
mov
jns
pop
mov
xor
fwait
xchg
jle
xchg
lds
ja
ret
into
imul
sar
ret
icebp
or
stos
add
or
dec
into
sbb
cli
inc
faddp
cmp
xchg
loope
test
clc
fstl
pop
pop
xchg
dec
mov
lcall
icebp
jns
lea
push
adc
xchg
out
sub
mov
fnsave
mov
fsubs
ret
dec
sub
xor
and
cmpsb
aam
or
shll
xchg
push
mov
add
push
mov
loopne
push
push
or
mov
add
imul
test
mov
jecxz,pn
inc
xor
enter
pop
shr
xchg
mov
push
enter
mov
push
je
cld
adc
or
rcrl
dec
mov
stc
push
movsl
xor
or
orl
push
clc
outsl
cs
inc
pop
mov
iret
mov
out
xor
lret
inc
test
jmp
mov
jecxz
out
adc
fiaddl
push
dec
imul
dec
push
inc
push
cwtl
scas
mov
icebp
mov
inc
pop
mov
into
pop
xor
iret
push
xor
mov
jbe
mov
add
xor
les
cld
aaa
jne
push
mov
mov
xchg
out
inc
jmp
and
pop
lret
cmp
andb
repz
call
dec
dec
cmp
jns
inc
pop
add
nop
adc
xchg
and
lea
inc
sbb
das
sub
push
nop
and
call
cmpsl
cmpsl
mov
sbb
push
inc
jl
jecxz
xor
sti
dec
push
cmp
adc
das
push
aaa
cmp
cli
jg
mov
les
or
mull
dec
adc
push
idivl
outsl
repz
inc
mov
cltd
xor
fisubl
nop
xor
stos
xor
push
xor
mull
lret
popa
push
xchg
push
mov
mov
pop
jge
aaa
push
js
add
lcall
lock
pop
es
adc
adc
inc
lods
and
scas
mov
push
nop
jecxz
mov
xor
das
int
stc
ja
xchg
jae
cmpsl
sub
mov
popa
shlb
xchg
adc
sub
cwtl
jl
xchg
in
pop
clc
les
sbb
cltd
not
int3
push
push
inc
cld
push
lret
push
mov
push
jnp
fnsave
mov
add
inc
int
sbb
lahf
sub
arpl
sti
fnstenv
lods
call
sbb
iret
stc
in
or
pusha
pop
imul
and
cld
jae
cltd
les
loop
or
add
pusha
xor
xor
add
arpl
iret
mov
jp
pushf
je
add
test
dec
call
pop
jae
call
in
pop
mov
lret
icebp
jae
out
jecxz
into
out
cmc
test
or
mov
mov
jns
pop
add
dec
xor
movsl
stos
popf
lret
sar
mov
sbb
or
mov
and
sbb
jbe
xchg
mov
fwait
dec
cli
fcomps
adc
adc
jle
shrl
mov
or
and
fnsave
outsb
repnz
aam
movsl
aam
mov
cmc
scas
push
sub
test
jne
mov
sahf
mov
bound
sub
stos
movsl
dec
adc
mov
out
fmul
pop
pop
scas
je
je
mov
lret
and
test
sub
lds
pop
repnz
fstp
xchg
jl
or
sbb
push
mov
sub
mov
movb
mov
shl
and
mov
pop
jae
mov
dec
loop
fcompl
outsl
psrld
dec
or
push
xor
sub
jecxz
ret
pusha
sarl
into
add
cmp
mov
pop
sbb
ror
jnp
lret
sub
inc
or
add
repz
or
addr16
or
jnp
dec
add
jmp
cs
dec
xchg
out
nop
repnz
mov
xor
lret
push
inc
add
inc
inc
sarl
push
mov
mov
push
test
sub
in
push
xor
iret
ret
sbb
and
rolb
pop
cmpsb
fdivl
mov
dec
pop
xchg
movsl
pop
test
stos
adcl
push
push
xor
pop
std
rcr
lds
or
movsl
hlt
jmp
ret
pop
aas
fadd
inc
mov
xor
or
fstps
or
bound
and
add
xchg
sbb
out
dec
stc
dec
lea
mov
mov
jle
push
pop
mov
out
nop
jge
test
out
lock
adc
aas
jmp
mov
xchg
and
jmp
inc
loope
outsb
inc
push
mov
ficoms
push
pop
pop
ds
in
mov
pop
aas
loopne
fxch
dec
pop
inc
addr16
and
in
push
daa
pop
dec
outsb
inc
add
pop
fs
xor
insl
ljmp
and
scas
aas
lods
call
loope
xlat
shll
inc
mov
jnp
das
pop
mov
or
jne
pop
and
cltd
stos
jmp
scas
or
out
xchg
lret
mov
jne
jae
sbb
clc
add
cmp
mov
sub
adc
sti
aad
cld
mov
aas
jns
js
loopne
inc
dec
movsl
xor
cmp
sarl
cmp
aas
and
jmp
in
push
xchg
imul
xor
dec
or
imul
arpl
cltd
aad
or
das
aam
les
repnz
and
mov
arpl
inc
pop
sub
iret
popa
inc
testl
cmp
adc
and
sbb
mov
stos
push
lret
loopne
in
subb
mov
jne
adc
test
pop
rcll
cmp
std
xor
xchg
in
dec
into
stc
inc
out
cmp
xorl
inc
scas
jno
or
sti
push
xor
in
addr16
xchg
sbbb
push
clc
rorl
pop
icebp
cltd
in
call
jp
push
das
cli
xor
cmp
into
push
cmp
rorb
mov
lds
cld
jns
fst
dec
cs
or
rorl
insb
call
sarb
mov
incl
test
adc
push
pop
xchg
lret
xlat
orl
cltd
sub
pop
cwtl
jb
ss
push
mov
lods
sub
mov
das
lods
subl
lods
bound
add
roll
xor
pop
ljmp
sar
sub
aas
jecxz
dec
out
clc
push
mov
inc
scas
sub
ds
es
pop
dec
cltd
ret
pusha
cmp
leave
and
mov
fld
daa
repnz
sbb
xlat
sub
mov
mov
push
iret
inc
jge
adc
test
sub
mov
add
or
loope
lahf
xor
inc
inc
popf
ja
rcrb
out
incb
addr16
mov
mov
imul
das
stc
call
adc
out
mov
jb
dec
pop
stos
outsl
out
xchg
add
stc
mov
xchg
pop
test
mov
cmovg
dec
mov
into
loop
xchg
sbb
int3
dec
imul
cmp
int
push
cmp
mov
lods
js
test
mov
mov
jmp
outsb
bound
inc
pop
xor
mov
mov
cmpb
cmp
cmp
xchg
adc
or
mov
and
insb
ret
popf
xchg
imul
dec
mov
popa
insb
adc
lods
out
ret
adc
call
pop
scas
and
sbb
enter
xchg
adc
dec
loop
stc
call
test
cmpsb
in
adc
sarl
std
xchg
repz
mov
mov
pop
gs
shl
rolb
add
jmp
cmpsl
mov
cmc
mov
jle
mov
int
push
roll
push
inc
popf
mov
hlt
loope
fstl
dec
ja
fnstenv
xor
jno
out
fists
in
xchg
flds
sub
js
mov
jmp
mov
xchg
cmp
and
lock
lret
lcall
rcl
push
jo
xlat
mov
lds
test
xchg
lea
xor
addr16
fiaddl
nop
push
push
les
pop
pop
out
sbb
fwait
mov
jne
pushf
test
repz
testb
push
lods
push
or
movsl
aam
inc
call
pop
arpl
sub
js
rorb
lods
fistpll
lcall
add
xorb
fwait
xor
out
push
mov
ret
imul
insl
dec
sub
ret
mov
int3
push
mov
inc
push
xor
inc
jae
add
or
push
aaa
xor
sub
mov
ljmpw
aad
sub
aad
lret
loop
aas
scas
ja
and
mov
pop
sbb
imul
clc
hlt
dec
xchg
pop
orps
push
pop
xchg
cmp
aaa
push
cmc
jl
out
push
push
sti
test
mov
inc
cmp
xor
fists
sbb
stos
jns
out
mov
xor
adc
add
or
add
mov
or
xchg
scas
adc
mov
enter
cmp
adc
adc
jmp
clc
scas
mov
fidivl
cmpsb
ja
mov
test
insl
sub
sub
jle
imul
pop
xor
xchg
add
jae
sarb
xchg
sub
dec
mov
adc
sub
xchg
pusha
inc
adc
xlat
test
in
test
push
mov
xchg
jns
push
pop
mov
mov
in
fs
dec
jbe
jo
jg
fbstp
das
cld
xor
movsb
cmpb
out
fiaddl
xchg
mov
aaa
pop
rorb
lods
lret
xor
cmpsb
mov
add
or
push
inc
subb
jo
nop
pop
push
dec
xchg
insb
jno
outsl
mov
fldl
push
mov
mov
sub
out
adc
sbb
and
fnstenv
xchg
fisttpll
mov
or
cmp
repnz
mov
icebp
addr16
fimuls
xor
aaa
push
ds
cmp
xor
xor
rcl
push
cltd
xchg
pop
sub
inc
rcll
pop
cmp
shl
fmuls
sbb
std
fidivrl
mov
call
bound
cwtl
add
daa
xchg
jns
cwtl
pcmpeqb
jp
xchg
pop
mov
xor
ljmp
cmp
xor
xor
mov
inc
fidivrs
mov
xor
pop
in
cli
push
ja
fnstenv
or
addl
adc
fs
daa
mov
lds
jmp
in
sbb
dec
andb
jl
jno
adc
jb
push
mov
pop
movsb
loop
ret
jbe
mov
scas
or
inc
mov
push
sbb
sti
aaa
xchg
jle
lret
mov
jg
add
sbb
es
pop
xor
dec
fwait
cmp
ds
jns
dec
xchg
repnz
jmp
sub
sub
mov
add
xchg
sub
pop
int
ljmp
mov
ds
ja
inc
int3
xchg
jb
push
and
xchg
js
sbb
aaa
mov
aad
inc
rclb
xchg
pop
test
sbb
adc
push
fs
stc
or
cmp
bound
push
adc
jno
mov
sub
loope
jge
xchg
hlt
push
dec
mov
or
xchg
xchg
push
pop
push
test
movsb
rclb
pop
inc
push
in
pop
sbbb
adc
repz
mov
ds
aas
adc
add
fbld
mov
xchg
shrl
cmp
cmp
mov
sub
dec
mov
mov
and
jg
lock
xchg
pop
lods
imul
fcoms
pop
jnp
in
cmp
aad
mov
ret
fs
cmp
jge
aas
adc
lods
filds
or
pushf
mov
xchg
or
inc
xor
mov
cwtl
mov
sbbl
scas
sub
test
dec
ljmp
push
nop
sub
mov
lea
mov
inc
fnstsw
je
cmpsl
dec
sub
pop
pop
out
iret
mov
inc
and
out
data16
rol
aad
ss
insb
add
cltd
fdivp
dec
mov
dec
dec
add
sbb
sbb
adc
fwait
loopne
push
outsl
add
mov
jns
jns
adc
les
outsl
lea
mov
xchg
movsb
sahf
rorb
and
nop
jecxz
imul
pop
test
test
scas
pop
jecxz
cmpsb
pop
in
inc
push
xchg
dec
xchg
or
dec
mov
or
sub
adc
mov
addr16
nop
in
adc
adc
mov
xchg
rcpps
mov
cmpsl
xchg
adc
mov
push
pop
sub
fs
lret
les
cmc
or
lock
and
mov
and
cld
push
ja
xchg
cmp
gs
inc
popa
ds
mov
clc
xor
pop
xchg
xchg
enter
cmpsb
cmc
aam
xor
adc
sub
mov
test
ret
sbb
sbb
pop
scas
add
push
add
mov
cmp
int3
in
fbstp
inc
out
jnp
fmull
push
fists
rorl
or
mov
or
sub
roll
mov
in
js
out
andb
push
lods
orl
lret
popa
add
and
dec
jecxz
subl
ret
pusha
sbb
into
into
push
adc
cmp
sub
mov
jb
add
scas
or
loop
or
jnp
into
out
out
xor
pop
mov
cwtl
sub
pop
addr16
jp
mov
cmc
pop
int
mov
mov
jp
dec
fdivrl
dec
scas
push
cwtl
mov
inc
cli
dec
xchg
int3
movsb
cwtl
pop
mov
inc
add
in
notl
xchg
popa
loopne
sub
or
not
sub
inc
aam
int3
cmpsb
ret
cli
addb
jl
xor
cmp
mov
rep
sub
outsl
aad
cltd
jmp
rcl
loopne
mov
negb
cmp
jmp
inc
jecxz
movsl
mov
rcl
cmp
xor
sbb
pushf
xchg
dec
xchg
pop
mov
das
outsl
mov
mov
mov
add
hlt
aaa
xchg
mov
fwait
jle
mov
mov
jmp
sub
loop,pt
push
mov
and
outsb
cmpsl
ja
je
pandn
dec
cmpsl
nop
mov
inc
mov
inc
jns
and
cmp
pop
shll
lods
incl
inc
es
inc
and
or
ficoms
xchg
sub
jecxz
cs
push
daa
sub
les
int
pop
cli
sbb
sub
pushf
cwtl
jnp
adc
xchg
fsubrl
lea
jae
inc
aas
mov
pop
dec
into
filds
inc
jbe
dec
mov
bound
cmpb
sub
fcoml
mov
xchg
es
aam
andb
xchg
addl
xor
clc
popf
stos
fsubs
stos
pushf
stc
mov
push
add
jne
aas
or
popa
push
stos
mov
mul
aaa
out
push
repz
cmc
lahf
aad
cmp
out
sub
test
jae
into
pusha
addb
inc
fadd
out
sub
and
pushf
xor
out
sbb
les
pop
pop
jmp
test
ret
mov
adc
in
ds
movhps
shlb
jg
mov
test
outsl
movsl
mov
out
les
dec
or
cmp
scas
imul
call
call
sub
xchg
and
test
gs
sub
and
data16
cwtl
adc
or
xchg
js
cwtl
xchg
xor
lret
outsb
pusha
imul
hlt
fs
test
push
pop
cs
xchg
xchg
mov
aam
into
lds
loopne
xor
mov
fimuls
mov
jb
imul
movsb
cmpsb
addr16
loop
mov
pop
push
rcrl
and
inc
sbbb
iret
sbb
jmp
ret
daa
inc
aaa
xlat
sub
cmp
out
and
aaa
negl
les
loopne
cld
mov
in
and
sbb
xor
push
pop
inc
push
sbb
cmpsb
add
icebp
lcall
mov
push
cmp
jno
shrb
call
jmp
sbb
cmp
inc
jne
and
xor
mov
mov
testb
ja
andb
mov
jns
mov
icebp
inc
inc
mov
jno
out
push
dec
scas
mov
and
xchg
mov
xor
lds
aam
addl
pusha
add
mov
sub
mov
orb
ficomps
push
push
cmp
push
popf
and
addr16
ficomps
cs
sbb
out
shl
mov
push
loop
sti
in
add
hlt
in
fistl
mov
imul
mov
ficompl
int3
cmp
lret
mov
nop
and
xchg
xor
jle
sub
cmp
popf
scas
data16
fsubrl
bound
push
pop
lods
and
test
sbb
loope
push
xlat
jl
cld
aaa
pop
lds
pushf
in
cmp
fcoml
pusha
sarb
xchg
pop
inc
and
push
pop
cmp
xchg
adc
push
maskmovq
testl
adc
mov
jp
xchg
icebp
addl
ret
pop
push
sahf
add
adc
popa
push
jnp
sub
adc
call
fldl
or
out
insl
or
sysenter
lcall
sbb
push
push
cmp
and
mov
stos
or
test
dec
dec
loope
in
push
xor
pop
insb
sub
adc
fbstp
in
je
dec
movsb
mov
lea
fcompl
mov
dec
adc
xchg
sub
sub
push
lock
xchg
dec
cmpsb
mov
into
maxps
rcrb
mov
and
shlb
das
mov
ja
cld
mov
inc
xor
cmp
push
dec
mulb
xchg
and
rcl
out
test
push
lea
fwait
and
aad
sbb
cmp
sbb
insl
jecxz
adc
add
loope
lret
in
xor
dec
movsl
push
popf
cltd
pusha
xchg
inc
sbb
xlat
push
sbb
lds
es
rcll
sub
add
je
scas
dec
dec
sbb
mov
test
aam
faddl
add
ljmp
dec
nop
sbb
fsubr
test
pop
jns
pop
and
mov
adc
call
xor
mov
jp
mov
addr16
out
lock
jne
push
adc
mov
fprem1
lcall
jmp
xor
adc
inc
add
dec
jg
adc
sub
add
insl
sbbl
mov
aas
sub
pop
loopne
idiv
mov
mov
das
mov
iret
xchg
sbb
lret
cmpsl
aaa
aas
jle
ret
cmp
cmp
sub
arpl
adc
xchg
data16
addr16
les
or
in
dec
sti
sti
or
scas
icebp
cmp
test
push
mov
pop
pop
or
test
repnz
push
dec
aas
shll
dec
ret
push
add
pop
dec
das
mov
xor
mov
pop
adc
add
lret
mov
adc
add
rcl
test
xorl
mov
mov
pop
push
add
ljmp
ds
in
arpl
xchg
fadds
ja
dec
je,pt
mov
int3
rcrl
fists
int3
mov
xchg
cld
in
lock
mov
dec
in
loope
pop
mov
pop
outsl
repnz
push
ss
sbb
mov
adc
pushf
dec
pop
sub
jae
adc
adc
loopne
bnd
pop
test
ja
lods
push
in
loope
dec
ds
xor
pusha
push
push
int3
leave
adc
jne
pop
aas
int3
adc
ror
dec
mov
pop
lea
imul
xchg
sbb
inc
in
mov
mov
cmp
out
sub
inc
xor
mov
int
stos
dec
and
xlat
test
and
into
ljmp
scas
dec
mov
outsl
dec
cmp
out
aam
mov
mov
xchg
mov
sbb
sbb
adc
scas
fnstcw
sub
leave
xlat
inc
fcmovu
xchg
addr16
pop
xchg
fwait
jecxz
dec
int
inc
in
popf
jnp
rcrl
lcall
fsubrs
push
arpl
pusha
fidivrs
sub
sbb
jg
aam
jg
sahf
mov
out
stos
mov
mov
and
in
jg
xor
dec
pop
imul
loopne
sub
mov
mov
fcompl
add
cld
xlat
lds
and
push
xchg
pop
or
and
adc
lahf
add
add
call
dec
jbe
ljmp
shll
cld
shl
mov
std
inc
fcomip
mov
xor
insb
test
jg
sbb
push
aas
cmpsb
xchg
cltd
xchg
flds
in
movsl
shlb
loope
stc
xor
cltd
addl
and
jl
fs
repz
and
rcl
iret
adc
cs
and
aam
push
pop
pop
adc
jae
lods
leave
jecxz
orl
dec
stc
pop
pop
add
pop
sti
cmp
aad
push
cmpsb
sub
and
cmp
ljmp
and
xor
bnd
ljmp
es
xor
shl
dec
jb
cmp
fnstcw
xor
push
inc
js
adc
imul
fiaddl
sbb
and
ficoms
stos
roll
or
xor
cmc
mov
jecxz
out
pop
repz
pop
xchg
popf
push
in
mov
pop
cmpsl
lods
arpl
jns
mov
aas
push
cmpsl
jmp
fstp
mov
je
xchg
lret
mov
pop
repnz
lret
pop
cmp
dec
fcmovne
ljmp
aaa
and
inc
int3
std
mov
das
popf
addl
imul
mov
lcall
lret
mov
aam
test
xor
cmp
cmp
mov
jae
jl
xchg
pop
vmovntdq
or
and
mov
rclb
sbb
sbb
lock
rcrb
test
mov
lret
pop
pop
outsl
jne
xchg
ljmp
leave
inc
sbb
rcrb
pop
lahf
add
push
fmul
dec
adc
mov
lds
and
push
and
mov
xchg
add
dec
int
ret
and
mov
sbb
or
nop
out
cltd
mov
or
sub
cli
mov
les
push
aam
adc
and
push
xor
negl
xor
mov
inc
ficoml
or
movsl
mov
jb
in
xor
push
or
mov
fbld
dec
push
mov
push
out
std
push
aas
out
mov
rcrb
cmp
adc
cmp
fimull
insl
in
dec
cwtl
in
mov
adc
or
cld
repnz
mov
mov
xlat
lcall
pop
stc
les
inc
lcall
inc
js
or
loop
sub
cmp
insl
xchg
gs
cld
adc
add
jmp
or
or
mov
cmp
cmc
sub
cmpsb
xchg
int
cwtl
push
movsb
lret
jne
shll
pushf
cmp
aas
cmpsb
sub
lea
sub
aam
insb
mov
xchg
adc
add
loop
lock
add
fldcw
iret
mov
cs
push
fcmovu
lock
adcb
mov
sub
movsl
jle
hlt
xchg
mov
mov
push
daa
push
stc
xchg
xchg
push
sahf
mov
adc
faddl
imul
mov
ljmp
aas
std
enter
es
into
mov
in
jnp
sub
mov
lret
fwait
dec
pop
daa
push
sbb
jp
xchg
icebp
and
jae,pt
jae
pop
test
mov
lods
sub
xorb
mov
rcrl
jmp
shlb
cld
push
fstp
jae
lret
xrelease
mov
out
cmpsl
or
mov
cs
das
pop
sahf
or
xor
lret
rorb
mov
popf
outsl
pop
aad
and
jbe
loop
cmpps
sub
stos
ss
adc
xchg
repz
fldcw
mov
sub
lea
test
syscall
sub
cmp
fnstcw
imul
imul
dec
and
mov
mov
je
daa
in
xchg
inc
push
das
and
icebp
out
xor
xor
dec
jg
sub
dec
enter
or
xchg
or
in
sub
popf
lahf
push
pop
jnp
mov
mov
mov
lahf
sti
loope
enter
dec
jge
mov
cmc
ficoms
cli
call
pop
add
and
push
lret
out
in
xchg
jbe
mov
pop
or
dec
stc
div
insl
aad
lods
rol
out
mov
fisttpl
fdivl
outsb
scas
imul
out
jno
leave
inc
hlt
js
push
adc
out
mov
adc
push
lds
inc
test
cmp
pop
push
das
xor
sarl
dec
leave
push
fnstsw
int
in
mov
loop
jp
lahf
lret
sub
xchg
pop
valignq
daa
inc
aaa
ljmp
divb
adcb
mov
lods
and
jle,pt
jle
aas
jne
fistpll
mov
insb
je
stos
jl
adc
jno
push
inc
inc
jg
mov
ret
loopne
xor
cmp
xchg
repz
subl
jmp
xchg
inc
or
out
sub
test
imul
das
into
orl
hlt
out
cmp
into
fidivrl
or
jp
jl
popf
mov
lock
adc
jne
add
push
add
inc
movsb
stc
push
pop
shrb
repnz
inc
in
lret
sbb
je,pt
mov
leave
rcrb
push
arpl
fcmovnb
cmp
fistl
lret
xchg
mov
or
jl
xor
sbb
daa
in
das
movsl
and
push
mov
inc
lahf
mov
int
sbb
gs
leave
cmp
rcll
cmc
fbstp
andb
popa
push
lret
shr
sbb
aam
outsl
xor
xchg
rol
pop
stc
mov
sbb
rolb
jae
aad
adc
mov
aam
call
xchg
mov
pop
adc
fbstp
jge
fsubrp
in
hlt
push
shll
mov
cld
jmp
jge
out
pop
mov
fmul
ja
into
mov
jo
mov
xor
fadds
push
insb
fiadds
pop
xchg
stos
enter
or
adc
mov
stc
mov
xor
pop
jbe
je
mov
xchg
mov
fcompp
ret
stc
dec
and
lds
jecxz
mov
pop
test
or
xchg
push
mov
mov
scas
aad
call
mov
sbb
jo
and
xchg
hlt
stos
cmp
sbb
gs
inc
xchg
inc
scas
loope
lock
inc
scas
fwait
fwait
in
testl
sbb
aam
call
or
stos
xor
lods
xor
sub
bnd
or
je
xchg
insb
idivl
ljmp
sub
mov
sahf
pop
imul
pop
pop
fcmovb
add
rorb
lret
jb
sub
sti
cmc
dec
stc
out
ds
repz
mov
into
es
sub
jge
push
push
mov
cmpsb
cmp
aam
xchg
push
test
or
and
add
xchg
ja
into
fs
ja
dec
xchg
or
decl
dec
data16
jno
daa
jge
aad
mov
es
pusha
xor
xchg
call
push
in
dec
rcrl
inc
mov
xor
mov
lods
cwtl
rorb
mov
aad
ss
jp
push
mov
out
fsts
mov
ret
scas
fs
and
add
arpl
pop
fisubs
leave
sbb
mov
pop
mov
adc
jmp
mov
jge
and
test
pop
adc
cmpsb
inc
mov
sbb
ret
dec
aas
add
or
mov
cmp
testl
jns
iret
xor
loope
mov
sub
sub
mov
push
testb
fiaddl
cwtl
mov
fidivrl
or
jecxz
bnd
inc
push
xchg
stos
jg
xor
rcll
dec
rcrl
mov
cmp
xchg
mov
cmp
mov
mov
aas
test
pusha
call
sti
or
mov
sub
popf
bnd
lods
sti
movsb
leave
push
adc
mov
cmc
dec
xchg
mov
dec
fiaddl
ja
je
adc
fsubrp
push
cwtl
lea
jp
int
mov
psrad
idivb
cld
push
es
lods
cld
mov
inc
pop
dec
ljmp
adc
xchg
dec
in
sub
jecxz
out
jp
jo
dec
push
gs
adc
mov
dec
cmp
outsb
cmp
loop
mov
cmpsb
cltd
xchg
enter
dec
lds
testb
jmp
sub
jecxz
xchg
sar
clc
pop
mov
mov
and
cwtl
data16
cltd
cli
push
pop
enter
jnp
xor
mov
adc
into
push
adc
add
xchg
pop
push
mov
test
scas
sub
inc
cmp
mov
or
mov
and
out
bound
push
pushf
daa
xchg
adcb
out
hlt
mov
out
or
inc
sub
mov
cmp
jge
leave
inc
outsl
mov
pop
cmpsl
dec
int
repz
mov
push
lods
testb
mov
shl
stc
gs
out
in
inc
push
aaa
scas
mov
mov
icebp
loope
xchg
ror
rcrb
shlb
pop
xchg
push
loopne
fld
cmc
ja
jmp
popa
add
cmp
sbb
and
xorb
loop
imul
call
and
call
sub
call
xchg
pop
stos
daa
lods
leave
jp
pop
fiadds
and
adc
or
mov
mov
mov
repnz
ret
push
xchg
aad
fcom
addr16
fcmovnb
icebp
or
fdivl
or
js
push
or
mov
addr16
sbb
adc
push
aaa
jmp
in
std
lock
xor
cmpsb
cmc
ljmp
outsb
in
dec
jl
pushl
mov
dec
inc
sbbb
mov
hlt
aad
into
sbb
cmpsl
jmp
pop
imul
sub
out
mov
mov
aad
jg
mov
aas
stos
xchg
fistpl
and
pop
push
lcall
mov
test
adc
dec
ret
sub
ficoms
dec
jp
add
sub
shrb
loope
inc
pushf
sub
imul
xor
pusha
out
pop
jp
xor
outsl
stos
jl
mov
inc
and
push
jns
int
inc
adc
adc
hlt
cmp
das
sbb
loope
loop
sbb
mov
sub
popf
dec
adc
std
add
aam
push
ret
cmc
pop
fmull
fsubrl
sub
sbb
ret
adc
inc
pop
scas
jbe
mov
dec
push
into
xlat
mov
fisubs
xor
adc
adc
push
inc
ja
out
mov
shl
jno
movsl
mov
cmc
pusha
popl
mov
xchg
aam
pusha
fldcw
fidivs
enter
inc
jae
mov
ss
jns
pop
push
sub
inc
cli
adc
sub
mov
mov
leave
mov
adc
pushf
and
sbb
movsl
dec
hlt
mov
adc
aas
sti
jbe
xchg
loope
imul
dec
ljmp
add
cmp
jb
pop
shlb
mov
stc
jl
mov
in
pop
xlat
jg
mov
dec
test
add
insl
shl
ja
jns
inc
sub
xor
shlb
sahf
cmp
or
and
loope
mov
scas
daa
and
scas
int3
xor
mov
in
stos
cli
sbb
or
ss
ja
decb
or
or
mov
push
arpl
mov
bound
lahf
sub
cmp
shll
in
fsub
nop
sub
lock
or
jp
jae
jecxz
ret
out
jg
cmpsb
dec
xchg
push
cmp
or
cmpsl
or
shlb
add
mov
push
push
add
out
test
mov
adc
and
inc
lcall
dec
pop
push
movsl
fistps
fisubrl
pop
lods
stc
fisttpl
mov
loope
sarl
icebp
inc
mov
ficoms
mov
bound
mov
sbb
sahf
sub
imul
les
mov
out
xchg
inc
xor
sub
jae
sbb
cmpsb
insl
sahf
add
out
dec
dec
lea
ja
fbld
mov
jl
or
inc
dec
int
jge
pop
dec
mov
push
push
mov
xor
or
fsubrs
sahf
sbb
ja
sbbb
cli
jnp
cmc
cmp
scas
inc
movsl
mov
push
inc
mov
ljmp
lods
hlt
mov
push
xchg
dec
jnp
roll
cmp
cmp
shrb
and
ret
pop
jno
mov
aam
xor
sbb
adc
lock
xchg
push
fs
rol
fwait
xchg
push
push
ljmp
test
insb
add
cmp
in
scas
jmp
stc
pop
mov
sbb
jo
sub
lahf
and
fstp
push
push
test
int
icebp
push
cltd
jns
shl
push
push
jae
push
fldl
ja
pop
sarb
das
pop
xchg
div
pop
lret
add
jl
dec
mov
push
iret
jecxz
mov
mov
popa
test
dec
aad
int3
xchg
lds
mov
sti
mov
daa
arpl
ret
ljmp
add
pushf
sub
adc
fs
lea
lods
jne
mov
xchg
dec
movl
int3
adc
sarb
jp
mov
sub
mov
jb
xorb
mov
in
fsubrp
sub
push
enter
adc
and
adc
in
in
loope
imul
cmp
cmpb
popf
sbb
pop
insl
loope
mov
xchg
add
xlat
fidivrs
dec
mov
inc
mov
push
jecxz
std
sub
rorb
ss
cmp
mov
push
insl
xchg
pop
inc
dec
es
imul
add
xchg
lea
lcall
jb
int3
push
js
loope
jge
dec
es
pop
sub
jnp
lods
xor
mov
imul
loopne
mov
cmp
pushf
outsb
lods
outsb
testb
insb
in
cld
divl
in
xlat
jmp
into
jno
xor
aaa
rcrb
daa
ja
test
out
inc
vpmaxsw
mov
test
push
bswap
fsubl
daa
sarl
fld
push
mov
shll
ljmp
cltd
cmp
cmp
pushf
cmp
rclb
fcmovnb
imulb
loope
inc
packsswb
push
sbb
andl
out
xor
in
xchg
aas
in
iret
cmp
mov
xchg
es
imul
aam
jb
inc
mov
sub
push
sub
jle
add
ret
push
mov
adc
insl
rcr
xor
dec
push
stos
inc
popa
pop
xorb
inc
insl
cltd
xchg
int3
aas
pushf
loopne
jno
nop
add
dec
adcl
sarb
push
xor
mov
lcall
cltd
push
sub
aas
test
pop
fisubl
ljmp
adc
inc
lret
mov
xor
shlb
cs
jno
adc
js
rcll
dec
jns
jb
push
xor
into
mov
test
pop
xor
lods
outsl
mov
add
lea
divl
add
pop
movsl
and
pop
xchg
mov
jae
inc
rclb
add
fistpl
das
repz
push
popa
in
cs
roll
jg
test
push
mov
mov
mov
adc
mov
in
mov
shrb
jne
das
pop
mov
mov
pop
fwait
jge
clc
mov
sub
jmp
or
pop
dec
sub
xor
test
shr
scas
outsb
icebp
push
ds
mov
int
jl
push
mov
xchg
js
cmp
cltd
sbb
sub
xchg
not
jp
and
sub
mov
push
xor
daa
outsl
rcl
mov
cmp
sahf
jbe
push
push
cld
aaa
sub
add
sbb
sbb
jecxz
mov
mov
jae
daa
movsl
sbb
pop
addr16
cmp
cld
cmp
dec
inc
insl
mull
cmp
sub
sbbb
int
add
mov
icebp
pop
ja
es
in
adc
test
mov
xor
gs
sbb
shrb
and
mov
fidivs
in
rcl
jp
sub
test
dec
mov
mov
ds
sarb
movsl
cmp
jecxz
add
dec
adcb
mov
aas
out
and
dec
jle
loop
lcall
mov
inc
jno
push
mov
pop
int3
sub
mov
add
in
ss
pushf
sbb
arpl
adc
xchg
and
cmpsb
call
pop
and
ds
out
push
and
imul
mov
cmp
mov
mov
aaa
rcrl
cmp
repz
in
ret
mov
js
scas
jnp
dec
movsb
data16
jno
pusha
fsubs
movsb
cmp
cmc
xor
xor
cmpb
fcmovb
rcrl
cmp
mov
and
xchg
or
cli
pushf
roll
jl
jne
nop
jge
xor
lret
inc
gs
int
cmc
enter
icebp
gs
mov
cmp
pop
loopne
cmpsb
mov
fildl
cmp
pop
and
mov
sub
inc
scas
je
jg
sarl
jnp
test
cmc
inc
mov
call
pop
loop
xor
mov
lcall
scas
jg
adc
outsl
in
loopne
jnp
arpl
jmp
loope
add
inc
incb
xor
xchg
push
jmp
mov
stos
ja
fmull
std
loopne
shrb
add
mov
adc
xor
das
push
lock
add
lahf
divl
js
cmp
cwtl
jge
dec
sub
inc
jecxz
popf
cwtl
lret
icebp
addr16
adc
lds
jne
mov
mov
adc
or
daa
pop
mov
in
mov
xchg
xor
or
mov
jne
xchg
ljmp
push
fcmovnbe
in
lds
pop
jns
mov
test
mov
test
les
cmp
push
xchg
xchg
out
out
sbb
mov
pop
enter
push
sarb
out
arpl
jb
andl
in
das
mov
push
jmp
clc
sbb
pop
stc
into
pop
jns
cvtpi2ps
mov
imul
mov
stos
or
dec
ljmp
sarl
negb
cli
xchg
addr16
mov
leave
je
mov
in
inc
test
sbb
and
cmpsl
out
pop
inc
or
in
clc
xchg
movsl
or
sarb
inc
dec
dec
test
cmp
xor
fdivl
orb
xchg
ja
push
xor
aam
mov
push
jae
int
sbb
mov
ret
sub
xor
mov
andl
mov
pop
or
rcrb
inc
mov
mov
pop
cmp
orb
in
mov
push
ljmp
xchg
fbstp
fdivr
outsb
mov
xor
fld
inc
in
jae
addb
sahf
cmp
xchg
cmpsl
stos
fidivs
outsb
insb
stc
stc
cltd
xchg
inc
lods
xor
xor
hlt
sbb
cmp
fidivs
lahf
notb
sahf
stos
inc
gs
jb
adcl
cmp
mov
fsubrs
xchg
les
jno
mov
aam
iret
cmp
dec
mov
or
jecxz
xchg
js
xor
and
test
shlb
js
and
pop
adc
and
mov
jle
pop
pushf
scas
mov
orl
xor
push
shrb
repnz
jl
inc
jnp
push
out
xchg
adc
xchg
fsubs
scas
hlt
sub
xchg
push
ret
cli
dec
cmpsb
out
mov
adc
enter
call
cmc
and
loop
and
leave
push
test
rorb
ss
pop
cs
cs
popa
sub
sahf
jmp
faddp
mov
jmp
dec
negl
ret
sbb
push
sarl
shrl
add
loop
mov
jge
jp
ja
jl
sahf
in
shl
cmpsb
and
inc
adc
mov
aad
xor
dec
dec
ror
stc
insl
jns
dec
or
mov
loopne
ss
lret
aam
xchg
aad
js
add
pusha
adc
sub
rolb
xor
jns
cli
cld
dec
out
clc
rcll
aad
test
pop
pushf
es
lods
sub
test
or
sbb
mov
imul
int
mov
aam
push
xor
mov
lods
jge
xchg
add
or
jg
nop
xchg
push
pop
pop
sbb
sbb
ret
je,pt
add
cmp
jge
loop,pt
jae
cmp
fwait
add
pushf
push
stos
dec
mov
inc
push
xor
out
ljmp
fst
jae
mov
in
scas
adc
and
or
hlt
xor
jb
dec
xor
clc
pop
cld
dec
pop
lock
imul
xor
lahf
sbb
dec
into
stos
cmc
outsl
js
jp
push
mov
dec
aas
mov
pop
popa
sbb
mov
clc
out
pop
jmp
jae
aaa
adc
or
pop
and
mov
mov
xor
movsl
pop
sbb
popf
pusha
jae
and
aad
hlt
jae
test
cmpb
sbb
xchg
into
sub
in
or
mov
pop
mov
cwtl
xor
jmp
pop
sub
lods
cltd
into
repnz
int
inc
pop
push
push
popf
cmp
jnp
lea
push
inc
stos
loope
or
cmp
push
cld
sbb
orl
mull
mov
dec
lret
xor
pop
mov
stc
into
push
mov
pop
sarb
inc
push
scas
das
arpl
or
jmp
add
mov
xor
jae
dec
dec
or
and
bound
push
mov
cli
xchg
mov
adc
popf
sub
call
and
add
lret
out
mov
test
sub
daa
inc
push
mov
sbb
lea
call
dec
push
ret
xor
shl
cltd
test
fnstenv
cmp
cmp
jge
sub
push
sbb
subb
in
add
cld
gs
pop
out
lea
aad
jp
les
aas
insb
push
push
sub
inc
or
mov
ljmp
pop
or
jb
or
sub
mov
sub
jbe
jg
insb
arpl
je
or
add
jle
cmp
jmp
mov
jmp
inc
jbe
mov
or
adc
iret
and
sub
xchg
fbstp
loopne
les
jmp
cld
sub
dec
and
mov
pop
in
and
mov
mov
mov
popf
xchg
movsb
mov
out
loope
xor
mov
push
aas
and
pop
add
xchg
dec
inc
call
pop
add
pop
and
push
lret
iret
int
jbe
jno
movsl
mov
add
mov
scas
sbb
jo
inc
push
jmp
ret
adc
cmp
lea
cmc
xchg
stos
std
adc
xor
dec
pop
loopne
leave
cwtl
test
lods
call
cltd
xchg
adc
insl
xor
or
jl
xor
xor
mov
lcall
repz
cmp
adc
or
in
jmp
ret
ret
xchg
pop
pop
inc
jne
jno
scas
or
cli
mov
iret
fldcw
sarl
sub
cmpsl
sub
shlb
arpl
pusha
or
andl
mov
fdivrs
cmp
rcll
ret
call
sub
out
cli
scas
xchg
iret
adc
cs
pop
cwtl
xor
xor
mov
mov
loop
dec
and
mov
add
imul
addl
sub
mov
int
xor
dec
in
and
outsl
xchg
in
movsb
and
inc
pop
adc
xorb
sub
jo
mov
jnp
mov
fisubrl
test
jmp
leave
sbb
push
cmc
jbe
push
mov
mov
ja
subb
imul
leave
pop
adc
rep
inc
out
jp
push
fs
sub
test
adc
ret
or
or
pop
pop
or
sbb
mov
lods
xchg
imul
std
mov
or
loop
in
push
inc
add
shll
mov
pop
cmpsb
mov
jo
add
dec
lods
xorb
test
inc
ja
or
out
rep
pop
lea
ja
jecxz
sbb
jp
sub
push
sarb
inc
dec
jg
lret
push
mov
adc
aam
lods
fisubrs
sub
lcall
sub
lods
sbb
sti
mov
add
rclb
push
add
nop
mov
aam
sub
push
dec
and
and
sti
cmc
mov
dec
lea
add
cwtl
mov
push
les
jecxz
jae
test
aaa
jmp
add
and
xlat
outsb
dec
mov
sub
jecxz
xchg
movsl
and
outsl
dec
cltd
xor
call
or
sub
loopne
xor
mov
sub
jle
pop
pop
push
push
push
xor
aaa
mov
push
or
ss
pop
pop
ds
loop
scas
lods
cld
adc
cld
xchg
inc
sbbl
jb
jnp
bound
pop
lret
mov
jne
shl
mov
outsl
jmp
xor
adc
push
pop
in
cmp
data16
xor
and
je
sbb
dec
adc
jg
loop
mov
es
dec
sar
clc
jae
sbb
mov
xchg
scas
js
cs
xor
hlt
pop
test
call
and
sarl
popl
loopne,pt
add
add
popf
cmpsl
push
pop
jbe
je
dec
movsb
shlb
loope
fadd
imul
lock
mov
pop
mov
stos
dec
xor
mov
mov
or
and
inc
imul
in
rorb
fsubrs
subb
and
mov
xchg
inc
flds
push
movsl
cmpsb
je
mov
lahf
mov
pusha
outsb
lods
dec
sub
lds
xchg
sbbl
xchg
mov
lods
push
jmp
inc
mov
pop
add
and
jae
fistpll
xor
addr16
test
mov
insb
dec
mov
ret
mov
call
sbb
int3
fldcw
inc
int
sub
scas
out
push
dec
push
in
cltd
mov
jnp
add
inc
int
inc
shlb
arpl
addl
cli
and
mov
pop
cmpsl
jmp
aas
bound
pop
mov
fldcw
mov
mov
pop
adc
mov
mov
push
fnsave
and
mov
sbb
cld
adc
rcrl
clc
dec
push
in
pop
push
std
fmull
hlt
pop
adc
xchg
push
mov
repz
stos
dec
sbb
idivl
and
xchg
push
mov
js
lock
jno
jb
pop
jae
jmp
fwait
rclb
mov
dec
push
ja
pusha
stos
hlt
inc
dec
mov
jne
sbb
sbb
in
cmp
xor
or
ret
ljmp
cmpsw
repz
dec
ret
xor
mov
and
icebp
imul
fisubrl
or
or
pop
sub
jnp
jmp
pop
mov
and
inc
inc
xchg
adc
mov
icebp
insl
ret
cmp
mov
push
lock
and
and
xchg
push
jbe
sub
sbb
out
lcall
jmp
jno
dec
cmpsb
cs
icebp
jl
test
leave
into
daa
push
lret
test
and
sbb
add
jno
lea
inc
outsl
sahf
rcrb
pusha
jns
out
insb
cmp
imul
xchg
aaa
adc
aam
arpl
cmp
jp
fwait
push
les
dec
mov
push
xor
fisttps
fdivl
xorb
and
pop
mov
fdivl
mov
adc
cmpl
and
mov
xor
cmp
or
lret
xor
lcall
in
lods
aas
pop
cwtl
mov
into
cmp
sbb
sub
pop
hlt
inc
jle
mov
jge
enter
pop
fs
mov
sub
dec
cmp
loop
dec
movaps
in
repz
mov
aad
mov
mov
ja
roll
cmp
and
and
fwait
xchg
pop
dec
push
in
mov
or
mov
xchg
fwait
addr16
xor
pop
std
rolb
shlb
jmp
shl
cmp
mov
inc
xchg
cmc
adc
hlt
or
pop
lcall
dec
hlt
jb
std
lret
cmp
pop
jne
cmp
ds
mov
sti
mov
pop
xchg
or
jo
das
add
mov
das
jnp
jge
movsl
icebp
inc
out
lahf
xor
xor
lahf
xchg
insl
mov
jge
and
mov
je
loopne
pop
cmp
jns
stc
or
push
or
shl
movsl
cmp
adc
lock
and
scas
nopl
lds
jns
push
testl
push
outsl
mov
loopne
push
cs
dec
cs
adc
cmp
insl
cmp
ret
xchg
and
into
or
jl
inc
jae
cmp
fsub
sub
push
ljmp
push
push
push
es
mov
jns
pop
inc
movsb
es
inc
and
popf
mov
jp
jo
cmp
and
mov
pop
add
adc
cmp
scas
add
lahf
ret
scas
mov
inc
mov
int
repz
ss
xor
cmp
jne
sbb
xchg
faddp
repnz
sub
jo
lock
loopne
enter
sahf
in
ret
or
fildl
movb
cmp
scas
xorl
mov
mov
jb
sub
fsubrs
jne
shll
push
inc
xor
pop
mov
cmc
xchg
and
mov
scas
sarl
mov
pop
int
xor
scas
ror
cltd
inc
int
outsl
test
pop
sbb
cmp
out
push
jp
fs
loop
enter
in
cli
push
add
dec
jl
fucomip
fimull
sbb
mov
adc
add
inc
inc
fistl
in
sbb
inc
or
jmp
jl
test
lea
cmpsl
inc
xchg
jae
mov
pushf
sbb
dec
mov
mov
xchg
inc
and
std
daa
cli
jae
dec
ljmp
adc
and
mov
scas
dec
dec
in
addr16
popf
cltd
sbb
clc
mov
movsb
sub
mov
mov
lods
sub
stos
ffreep
shr
inc
fmull
popf
aas
mov
cld
mov
je,pn
sahf
pop
add
xor
divb
loopne
imul
xor
ret
push
jge
pop
dec
inc
repz
pop
ret
cli
push
sbb
jo
stos
or
ljmp
lock
in
jp
mov
and
or
in
jnp
or
dec
xchg
lds
add
bound
or
fdivs
mov
mov
insb
insb
cwtl
mov
shlb
xchg
add
dec
je
or
sub
xchg
push
xchg
data16
ret
and
cmp
mov
fsubs
or
sbb
sti
nop
push
fildll
pushf
cmp
jbe
or
push
sub
add
iret
pop
cmp
xchg
fmul
stos
mov
mov
mov
dec
fsubl
xchg
adc
push
cs
inc
jns
in
mov
pop
fcoms
adc
mov
mov
mov
mov
and
aad
test
das
fstl
test
sbb
stos
enter
in
sub
jmp
jno
sub
lahf
jae
inc
jecxz
daa
pushf
xor
push
cmp
sub
dec
in
xor
jbe
and
push
inc
mov
test
dec
daa
sbb
popf
je
outsb
in
test
dec
pop
pusha
icebp
sbb
jnp
dec
test
jecxz
gs
xchg
lret
pop
lods
jno
push
sahf
cmp
loope
loopne
psubb
ret
jl
add
jnp
imul
add
in
call
es
xchg
lods
es
adc
ret
jnp
loopne
cmp
dec
and
fs
popf
mov
aaa
hlt
fdiv
jns
ss
lock
test
jge
notb
in
push
pop
push
scas
cmp
mov
mov
lock
out
movsb
jl
xor
cmp
mov
pop
and
aas
xchg
pop
fcmovbe
mov
mov
popa
sbb
out
fs
loop
and
lret
scas
nop
popf
popf
dec
and
dec
inc
mov
inc
and
ret
push
loope
push
out
pop
xor
fst
sbb
mov
xchg
imul
mov
adc
ret
jns
pop
push
push
and
insl
loop
out
inc
or
jp
sahf
mov
cmpsb
pop
aas
clc
push
pop
adc
stos
mov
mov
pop
addr16
add
je
xor
jp,pt
and
xchg
push
mov
jmp
mov
js
sub
pminsw
stc
jne
sbb
mov
daa
ljmp
sbb
data16
mov
xor
jo
push
std
mov
clc
movsl
fnsave
add
out
mov
fs
add
into
pop
ds
dec
xor
ljmp
adc
clc
mov
mov
pop
loop
pusha
push
and
orb
jmp
jne
jae
xor
inc
pop
and
sub
out
sbb
mov
dec
push
jg
add
call
outsl
adc
lock
aam
mov
lahf
addr16
stos
sbb
and
rolb
or
out
mov
dec
icebp
jp
sub
outsb
fstpl
shrl
ja
lds
pop
dec
stc
sub
sub
stc
ret
or
push
mov
or
mov
shrl
iret
movsl
lahf
mov
cmp
mov
jnp
mov
arpl
loopne
xchg
aas
or
mov
js
cmp
jb
int3
push
xor
xor
dec
test
andb
mov
push
mov
sub
les
mov
mov
mov
or
xchg
bnd
aam
and
mov
inc
popf
imull
push
imulb
xchg
inc
out
push
adc
pop
jns
das
andl
imul
jns
sbbb
prefetch
adc
jb
lahf
xchg
lock
pop
dec
dec
add
cltd
ljmp
shl
iret
mov
out
data16
fwait
xchg
nop
test
int
into
pop
xor
push
rclb
mov
out
xchg
dec
pop
into
sub
dec
je
dec
or
ss
push
scas
adc
mov
in
jp
mov
fld
pop
adc
fisttps
inc
ja
jo
shll
loopne
push
mov
inc
jns
repz
cmp
pop
or
mov
dec
xchg
dec
jnp
pop
sub
stos
sbb
push
dec
xor
mov
cld
loopne
int
xchg
mov
sbb
ss
xor
mov
dec
inc
iret
push
in
jmp
imul
cmp
cmp
mov
jge
pop
mov
push
iret
and
dec
sub
cmp
loopne
xchg
mov
inc
xor
xor
mov
scas
xor
jg
push
int3
xchg
shrl
loop
aad
push
lahf
imul
lods
test
push
or
push
adc
ds
pusha
push
stos
test
xor
pushf
push
xor
rcrl
sbb
pop
pop
arpl
adc
lods
or
iret
jmp
xchg
lea
add
pop
xchg
or
jb
cmp
mov
pop
jmp
popf
imul
ss
xchg
cwtl
sahf
pop
bound
addl
in
mov
dec
fwait
pop
sbb
insl
insl
in
ret
mov
mov
fbstp
cmpsb
leave
jne
int
outsb
xchg
adcl
pop
xor
mov
flds
dec
andl
sbb
imul
test
fs
aas
fstpt
mov
or
imul
cmp
loopne
in
mov
mov
lods
sahf
andb
rol
ss
sbb
setle
mov
aaa
int
into
sahf
inc
data16
lods
mov
xchg
sub
popf
jle
jmp
add
adc
or
sub
cmp
sub
mov
push
call
imul
lods
mov
ljmp
test
xchg
xchg
xor
adc
nop
push
dec
pop
aas
cmp
and
stc
rcl
enter
movsb
inc
push
in
push
in
adc
neg
mov
sbb
jae
inc
int
xchg
fs
or
inc
cmp
lock
imul
pop
cwtl
mov
aam
xor
sbb
or
dec
add
xchg
in
mov
ret
and
sahf
push
test
dec
cmpsl
roll
mov
je
xchg
xchg
mov
add
enter
xor
stc
cli
xchg
inc
jb
cmp
stos
and
mov
cli
dec
push
loopne
inc
into
push
pop
cld
movb
inc
inc
dec
pop
lock
cmpl
lods
movsl
add
das
rolb
lods
xchg
rep
sub
mov
inc
stos
and
in
repz
movsb
or
insl
jo
mov
sub
mov
sbbl
cltd
pushf
xor
xor
vcvtpd2psx
xlat
cld
aad
dec
mov
or
sarl
push
add
iret
mov
mov
aas
mov
add
inc
ljmp
push
imulb
enter
or
pop
inc
cs
fildll
cmp
out
sti
mov
mov
mov
mov
ljmp
mov
push
out
test
in
bound
loopne
daa
fsubp
cmp
cmpsl
jmp
add
xor
sub
xor
cmp
loopne
cmpsb
inc
dec
mov
push
add
pusha
clc
pop
imull
xchg
imul
imul
add
pusha
xchg
gs
fsts
push
pusha
cmp
dec
mov
jge
mov
adcl
xor
inc
repnz
pop
ljmp
push
mov
jl
aam
mov
or
inc
mov
jge
xchg
insl
das
pop
add
pushf
aas
pop
cld
arpl
mov
test
push
push
in
test
push
fs
fmuls
sbbl
ljmp
inc
xchg
jae
sbb
cs
jo
dec
sub
mov
orb
cs
sbb
enter
cmp
or
test
xor
pop
iret
les
pop
inc
enter
or
jo
add
or
mov
add
jmp
sub
js
aam
cmc
and
jg
scas
std
xor
jns
rcrb
sub
sbb
adc
inc
inc
pop
jge
ret
loopne
popf
mov
and
and
jmp
es
leave
js
stc
push
mov
cmp
jl
aam
out
mov
mov
push
cmp
xchg
icebp
lds
imul
jmp
popa
das
xor
push
xor
popf
leave
cli
xchg
or
inc
fndisi(8087
push
cmp
aam
pop
sbb
xchg
add
aam
dec
popa
roll
cwtl
mov
stos
cmpsl
xchg
and
add
frstor
fbstp
je
add
stos
xor
xchg
mov
xchg
mov
and
add
ljmp
adcb
push
sub
je
cmpl
jnp
fstp
jecxz
je
in
inc
push
imul
lds
push
or
add
gs
lds
mov
and
or
cmpsl
mov
jo
mov
insb
cmpsl
mov
jp
inc
mov
mov
and
jp
stc
inc
and
clc
or
fldcw
lret
je
lcall
xchg
adc
mov
sahf
pop
jecxz
jne
mov
jmp
rcrl
mov
test
sbb
mov
pop
or
mov
outsl
int3
cmc
or
cld
popf
cmp
sbb
or
add
and
js
adc
int3
sbb
inc
cmp
movsb
sub
mov
popa
imul
icebp
pmulhw
sbb
call
popf
and
ret
push
jg
mov
push
bound
jmp
lods
in
or
shr
popa
rdpmc
pop
xor
js
mov
and
jecxz
mov
sar
das
imul
xor
cmovae
add
cwtl
cmc
mov
mov
push
xlat
push
mov
daa
aam
fsubrl
adc
idivb
roll
pusha
mov
push
mov
jb
aaa
dec
push
inc
add
fidivl
jmp
clc
jmp
push
pop
aaa
cmc
test
dec
add
or
mov
inc
mov
xor
inc
jl
jb
adcl
pusha
insb
int3
hlt
lods
sub
add
sub
sub
outsb
int
inc
pop
lahf
arpl
repz
adc
clc
sub
cmp
popa
adc
and
insl
out
add
sbb
mov
clc
lods
mov
cmpsb
mov
dec
mov
push
xchg
fldl
jmp
and
arpl
xor
loop
jp
jb
jp
sub
divl
out
add
mov
push
jnp
jne
insl
fdivp
in
lods
aam
ss
fwait
jno
mov
daa
enter
test
jbe
jge
js
xor
mov
and
mov
sub
lods
scas
push
ja
icebp
mov
pop
add
in
aas
mov
xchg
xor
jno
inc
mov
js
lods
push
les
sar
add
or
push
fsubs
mov
cmpsl
enter
mov
in
jl
out
fistl
insb
adc
push
xchg
lret
pop
out
xchg
jl
adc
in
cmp
ficoml
clc
push
cmp
jmp
jb
mov
jl
fwait
divl
cld
xchg
leave
les
enter
mov
dec
push
xor
pusha
js
cmp
mov
push
lds
fwait
pop
rcr
dec
or
dec
ss
adc
sub
idivb
arpl
sub
or
test
cmc
fcmovb
ja
test
fcmovu
fdivl
and
sub
jo
lahf
push
ljmp
shrb
xor
jmp
and
cmp
jmp
sti
mov
add
push
mov
cli
lahf
pop
inc
jp
adc
call
add
daa
fsts
lods
mull
inc
cmp
and
mov
mov
shrl
and
inc
adc
lret
punpckhdq
cltd
loope
cmc
int3
sahf
pop
fidivl
shl
cmp
movsb
imul
mov
out
outsb
jns
mov
xchg
add
or
fsubl
jo
int3
bound
pop
imull
dec
push
mov
notl
xlat
jle
clc
cmp
movsb
dec
repz
cmp
lods
dec
icebp
adc
pop
cmp
fildl
lods
lock
mov
outsb
hlt
ljmp
ja
mov
ret
mov
or
push
mov
or
lds
unpcklps
movsb
aad
jns
cli
imul
mov
mov
push
jl
into
ret
repz
jp
or
xor
jmp
dec
push
dec
enter
or
pop
xchg
mov
adc
mov
loopne
mov
adc
sbb
fisubl
fisttps
jae
pop
mov
int
jmp
push
and
mov
push
sbb
sahf
pop
dec
pop
int3
jno
jne
mov
out
sarb
mov
sahf
int
loop
dec
mov
push
sbbb
jnp
jb
pop
adc
leave
outsb
push
pop
xchg
iret
jo
rclb
cld
mov
dec
movsb
cmp
insl
xlat
mov
sarl
cmpsb
inc
dec
inc
mov
mov
inc
xorl
xchg
ja
fcoml
inc
insb
call
xchg
and
sub
jae
insb
fcoml
push
jge
dec
leave
dec
mov
loopne
or
cmp
cmp
cmp
jb
data16
pop
xor
mov
imul
mov
xor
or
push
out
push
mov
sbb
pushaw
loopne
push
loope
mov
sahf
sbb
push
js
das
aas
cmpsl
pop
ss
testb
dec
mov
pop
pop
sbb
pop
rcrl
sub
mov
jecxz
push
mov
shrb
and
inc
popf
popl
lds
lea
inc
mov
das
in
sbb
in
and
or
in
xchg
daa
xchg
adcb
pop
pushf
dec
sub
push
stos
mov
call
leave
int3
xchg
jnp
and
mov
add
jge
or
or
cld
cmc
pusha
jp
outsb
cmp
jecxz
enter
test
xlat
jo
nop
jmp
push
xchg
mov
orb
add
mov
popf
sbb
hlt
cmp
lea
test
fs
fadds
repz
jnp
or
and
pop
push
int
in
adc
pop
xchg
xor
imul
mov
jecxz
and
add
imul
or
lods
push
and
pop
mov
push
and
jecxz
outsb
pop
scas
shlb
xchg
je
fmull
mov
xchg
add
jae
cmp
xchg
mov
cmpl
mov
fisttps
pop
inc
mov
cmc
push
xchg
jb
or
add
lods
lods
adc
mov
scas
cmp
outsb
jne
out
ret
mov
fstpl
or
fsubrl
jnp
mov
in
rol
sbb
mov
pop
pop
cld
xor
push
push
sbb
rclb
mov
pop
decl
bound
sub
pop
add
loop
bound
outsb
ds
cmpb
inc
pushf
adc
add
pop
scas
jecxz
test
lds
arpl
into
add
mov
lds
mov
loopne
cmpb
cwtl
mov
test
jb
lea
mov
mov
daa
decb
sbb
xchg
pop
call
sahf
adc
pop
or
xchg
das
push
shll
add
mov
rcll
xchg
aam
cmp
mov
testl
dec
mov
mov
add
inc
push
ljmp
pop
xchg
pop
push
aad
push
sub
out
dec
pop
mov
and
out
adc
xchg
xchg
dec
test
and
xchg
add
jne
loope
mov
cmp
aaa
sbb
jnp
sub
mov
int
iret
or
aad
xchg
mov
dec
stc
sbb
add
mov
sarl
loopne
fcomps
mov
sahf
popa
jmp
aam
and
mov
pop
popa
jne
mov
cmp
xchg
pop
subl
daa
xor
cmp
jb
xor
mov
divl
mov
sbb
push
mov
bound
les
mov
popa
mov
add
aaa
pushl
mov
imul
daa
adc
shl
pop
shrb
push
or
add
arpl
push
xorb
jge
out
out
addr16
push
xor
and
xchg
add
xchg
lahf
adc
mov
iret
lcall
adc
push
mov
mov
inc
cmp
es
fsubrs
adc
xor
adc
call
xor
sub
movsl
mov
or
outsl
movsb
add
dec
cmp
ds
pop
ds
mov
movsl
cmp
fxtract
pop
cmp
mov
outsb
adcl
insl
clc
fcom
mov
push
mov
cs
mov
dec
popf
aaa
test
aas
outsb
xchg
js
mov
xor
push
adc
xchg
pop
out
lahf
stc
ljmp
dec
mov
cmpsl
jno
rcll
in
cmp
test
pushf
sarb
dec
in
cwtl
jbe
push
fadds
dec
or
or
mov
in
cmp
push
pop
fsubs
or
pushf
stc
and
icebp
cli
ja
add
das
pop
lock
push
lret
push
repz
dec
adc
sub
or
sub
dec
stos
jno
mov
jns
in
outsl
mov
loop
push
mov
sarb
pop
movsl
enter
dec
pushf
fiadds
mov
decl
cmc
pop
cmp
mov
jge
jo
xor
or
push
ud0
int3
and
adc
test
xchg
sub
mov
mov
push
inc
xchg
cli
mov
add
mov
dec
es
mov
fcoms
sbb
pop
dec
inc
repnz
push
addr16
dec
or
mov
push
xchg
ret
std
nop
dec
pop
dec
fsubs
and
pop
jae
adc
cmp
out
inc
aad
mov
add
out
add
adc
or
pop
inc
cmpsl
add
mov
xor
mov
fnstenv
jl
pusha
mov
dec
lahf
jmp
or
cmp
inc
dec
aaa
push
lods
jecxz
aas
rorl
mov
js
je
cld
ret
sub
inc
pop
out
jae
xor
js
push
pop
push
xchg
daa
inc
pop
je
jns
sar
and
movsb
jbe
push
mov
inc
xchg
rcr
sbb
mov
push
fistps
cltd
dec
adc
lea
cmp
xor
push
fildll
rclb
fistl
fidivrl
lret
jbe
fdivrs
mov
cmp
xchg
jecxz
sub
lahf
cli
sahf
xchg
cmp
fisubs
dec
sbb
xor
push
mov
xchg
mov
aad
inc
scas
mov
xor
adc
clc
arpl
int
mov
ficomps
mov
inc
std
cmp
sar
icebp
rcrl
es
mov
inc
lods
mov
test
in
or
insb
inc
jb
addr16
fs
mull
or
or
sahf
dec
dec
scas
out
mov
jecxz
or
out
inc
cmpsl
stos
sub
andb
stc
mov
push
fbstp
imul
lahf
lahf
aas
shrb
adc
shr
mov
shll
adc
lret
jae
cmpsl
jp
orb
lcall
sub
and
push
je
mov
jge
and
push
pop
push
cmpl
scas
push
stc
pop
fdivl
jbe
fwait
loopne
mov
or
imul
add
aaa
rorl
pop
fwait
add
jno
pop
inc
cmp
mov
adc
adc
sbb
fnstsw
pop
push
dec
jle
movsb
adc
xchg
in
push
xchg
popa
and
pop
out
jge
xchg
lea
outsl
bnd
jo
mov
mov
pop
lahf
pop
cmp
nop
lods
mov
loopne
mov
sub
bound
outsb
bound
push
mov
add
adcb
or
inc
out
in
mov
jne
add
imul
jno
or
sar
cmp
movsb
xor
mov
and
dec
mov
push
sbb
inc
pop
sbb
sub
scas
jb
cmp
mov
scas
hlt
sbb
sbb
jl
test
ret
fisttps
cwtl
outsb
xor
push
mov
adc
mov
xor
and
js
dec
inc
add
subb
popa
ds
cmpsb
rclb
stos
cli
movl
mov
adc
out
and
imul
out
shrb
cltd
adcb
inc
mov
inc
les
add
pop
sbb
jb
xor
or
dec
es
rclb
insb
stc
pop
mov
lds
imul
movsb
into
mov
sub
or
repnz
or
leave
mov
nop
arpl
cmp
sbb
pop
insl
out
in
mov
fldcw
out
dec
dec
out
mov
pop
mov
daa
jns
divb
loopne
daa
repz
and
iret
movl
dec
clc
dec
or
xor
push
jmp
flds
inc
adc
dec
es
adc
sub
mov
fidivs
jb
in
ffreep
neg
add
into
add
in
jge
outsb
fstpl
pop
cmc
jecxz
rcr
fidivs
and
lcall
push
mov
add
imul
sub
mov
mov
inc
mov
test
and
dec
push
pushf
stos
jns
mov
cltd
cld
fadds
sbb
movsl
jbe
xchg
fstpl
iret
mov
mov
mov
inc
test
test
mov
pop
popf
into
cwtl
mov
pop
mov
into
out
out
jg
jg
mov
imull
xlat
sub
xor
cli
and
in
dec
sti
pop
pop
pushl
repnz
jo
out
adc
int
jb
xchg
inc
daa
jnp
sub
push
inc
sbb
xchg
xchg
push
inc
pusha
arpl
jbe
imul
pushf
fnstsw
and
dec
cmp
or
test
jmp
arpl
filds
dec
jl
fldz
test
fcomps
mov
arpl
cmc
fidivrl
xchg
pop
lcall
ja
xor
or
push
loopne
inc
jbe
pop
push
cmp
sbb
pop
mov
push
sub
negb
add
into
test
cltd
ret
shll
lahf
adc
push
les
jl
cmp
fnstcw
pop
mov
mov
test
out
in
sbb
imul
ds
leave
sub
sub
movsb
mov
scas
js
hlt
mov
fisttpl
out
push
aad
xchg
in
sub
pop
jmp
iret
inc
inc
ret
adc
mov
jae
ret
in
inc
pop
data16
mov
scas
mov
lods
pop
inc
mov
add
popa
in
mov
les
push
push
mov
jnp
add
lea
adc
dec
xchg
lods
popf
jns
inc
aam
fstps
mov
fs
sbbl
inc
pop
cwtl
verr
jb
aad
lcall
sbb
mov
bound
fsub
scas
jbe
sbb
testb
je
mov
leave
push
or
adc
repz
sbb
hlt
mov
push
test
jmp
shll
pop
inc
sahf
cmc
hlt
dec
outsb
dec
mov
pop
push
mov
iret
cmp
mov
inc
jg
cmpsl
cld
test
cmpsb
adc
cmp
pop
je
push
aam
mov
ja
mov
or
rclb
mov
push
pop
push
sbb
sub
push
push
add
loope
pop
in
mov
xor
mov
dec
test
sub
loop
adc
mov
addr16
add
fidivrl
add
jg
das
cmpsb
adc
movsb
loop
out
das
xor
mov
mov
xchg
push
mov
in
in
push
push
adc
or
mov
hlt
repz
adc
or
je
mov
adc
cs
in
push
mov
sub
leave
out
mov
pop
rorl
adc
mov
lods
sub
xchg
clc
jno
mov
and
lahf
xchg
push
fbld
xor
movsb
stc
jbe
cltd
jg
add
xor
getsec
popl
jb
sbb
add
inc
in
cmc
dec
js
popa
enter
jp
cmc
pop
out
out
out
sbb
sub
mov
lret
lret
mov
push
pusha
inc
stos
inc
dec
rcll
leave
addr16
aas
mov
mull
rclb
mov
or
call
popa
add
push
cltd
xlat
dec
popf
sub
pop
inc
pop
repz
fidivrl
xor
pop
pusha
cltd
cs
idivl
xchg
mov
pop
insl
push
adc
jbe
xlat
mov
jl
lock
jns
fcomps
hlt
push
into
outsl
or
mov
inc
jmp
popa
mov
inc
or
pop
daa
sysexit
lds
gs
pop
lea
mov
xchg
mov
mov
iret
mov
test
out
icebp
cld
inc
xchg
pop
addr16
cmp
pop
sbb
adc
shlb
aas
adc
dec
pop
cli
xor
adc
cs
dec
cmc
test
in
mov
or
push
xor
cli
sbb
add
xchg
lcall
rcrb
adc
xor
das
xchg
sbbl
jge
outsb
adc
mov
ja
push
sarl
rclb
and
sti
mov
mov
jne
mov
imul
icebp
je
mov
jb
leave
xchg
lods
fwait
mov
nop
stc
pushf
push
add
inc
pop
mov
adc
inc
js
adc
jge
jo
test
add
arpl
mov
dec
pop
call
mov
pop
sahf
sub
jl
xor
jl
adc
pop
pop
dec
inc
aaa
or
stos
dec
jae
add
icebp
test
push
mov
cmpb
and
adc
xor
mov
adc
xchg
cli
or
pop
ljmp
mov
sbb
cltd
add
or
xchg
and
fisttpll
rcl
out
lahf
inc
and
cs
jns
cltd
leave
aaa
in
push
xchg
sub
in
inc
push
dec
lahf
push
push
lret
jne
or
sub
ffree
daa
cmp
jle
pop
icebp
movsl
cltd
stos
sbbb
std
jle
stos
sti
dec
call
or
movsb
adc
sub
add
pop
sub
sbb
outsb
adc
pusha
mov
add
inc
jp
test
mov
movb
xor
sbb
or
push
adc
stc
inc
enter
int
sbbb
pop
mov
repz
cmc
subl
sar
pop
lods
test
adc
test
popf
adc
mov
push
cmp
xchg
stos
sar
xor
rorl
add
in
push
gs
mov
adc
lret
mov
sbb
mov
scas
mov
jmp
ja
pop
cmp
jnp
imul
add
inc
scas
xor
loope
dec
aad
repnz
cmp
and
out
pop
add
imul
sbb
and
int
mov
aam
pop
lahf
push
cwtl
jno
pop
mov
into
and
push
sub
lods
cmp
test
jmp
cmp
ret
mov
mov
fiaddl
lds
or
cmpsb
jno,pn
add
nop
fwait
inc
xor
fwait
sahf
xor
cmp
int3
jmp
nop
inc
stos
out
jns
inc
rorb
push
in
int3
lret
ja
xor
rolb
mov
fisubl
incl
js
push
mov
pop
cmpsb
cmp
lods
jge
push
xchg
push
adc
pop
repnz
fildll
sti
xchg
loop
testl
jecxz
adc
leave
ss
sbb
pop
sub
aas
push
add
xchg
into
xchg
or
js
test
mov
push
mov
mov
cltd
out
xchg
idivl
lahf
fisubs
roll
stos
sbb
repnz
xchg
sarb
ljmp
inc
add
in
adc
cmp
adc
mov
mov
or
iret
xchg
push
xchg
call
int3
subb
out
punpckhwd
dec
test
sbb
xor
xchg
cmc
mov
sti
xchg
xchg
in
xchg
and
adc
in
sbb
jecxz
pusha
fsubs
jecxz
xor
mov
jmp
jl
es
dec
shl
pop
inc
in
int
mov
lret
loopw
scas
cli
or
jp
mov
daa
mov
push
xchg
jecxz
sbb
mov
jecxz
out
sbb
dec
sub
ja
mov
cltd
loop
test
loope
in
mov
inc
lahf
dec
nop
mov
push
dec
in
es
inc
subl
mov
add
fldpi
pop
sub
in
hlt
fucom
xor
inc
loop
repz
mov
mov
add
mov
pop
pushf
push
and
dec
cmp
and
inc
push
cmpsl
punpckhwd
sub
lret
add
dec
inc
mov
xor
ficompl
movsl
js
sbb
mov
in
mov
dec
inc
scas
andl
mov
rep
cs
or
shlb
xchg
sub
and
and
lret
sbb
cmp
inc
add
jbe
or
clc
pop
jmp
push
adc
lds
push
pushf
xor
aam
mov
add
add
orb
test
mov
jae
test
push
sarb
faddl
cmpsb
mov
mov
loopne
rclb
stc
insb
jmp
inc
dec
call
sti
lcall
ret
aam
shrl
dec
push
nop
fdivr
out
lret
mov
cmp
popf
cwtl
push
pop
iret
stc
mov
mov
imulb
je
jnp
enter
aaa
rcrb
xor
cmp
iret
scas
testl
or
stc
leave
xchg
test
gs
jecxz
insl
cmp
aad
mov
pusha
pop
mov
dec
lds
dec
repnz
xor
inc
sbb
inc
ret
push
jmp
lcall
std
jmp
aad
test
pop
out
bound
cmp
dec
and
call
movsl
mov
sbb
pop
xor
jle
inc
pop
push
lds
ret
addr16
out
mov
sbb
jg
lret
ret
xor
int3
mov
pop
outsl
pop
push
or
push
mov
aam
test
repnz
in
sbb
orl
mov
enter
jb
test
sub
and
je
sarl
cmp
movsl
jge
sbb
iret
repz
mov
daa
jecxz
add
cld
das
shll
imul
xchg
push
fidivrs
mov
jp
imul
pop
push
dec
cmp
xor
cmp
jg
sub
adc
pop
mov
xchg
cmp
mov
in
std
sahf
pop
shlb
dec
mov
add
mov
push
nopl
sbb
out
add
lock
inc
xchg
test
push
data16
addr16
dec
shr
sbbb
cmp
xor
aaa
mov
mov
out
rolb
lret
stc
mov
jl
dec
xor
cmc
xor
or
hlt
ss
jnp
add
cwtl
ja
ret
cmp
pop
aad
gs
mov
mov
fisttpll
jl
push
inc
ret
dec
les
adc
shrb
pop
push
ljmp
cmp
int
iret
mov
lret
mov
lock
dec
and
lods
sbb
cmc
lea
int3
mov
or
lret
pop
dec
sahf
push
push
mov
pop
ja
aad
out
scas
sbb
mov
xchg
inc
out
mov
daa
ret
inc
jo
and
fbld
push
mov
hlt
clc
cwtl
sbb
cmp
dec
inc
std
daa
add
mov
dec
sbb
adc
jge
aaa
cmpsb
add
shlb
mov
mov
mov
outsl
fnstenv
mov
and
in
pop
out
and
dec
addr16
clc
xor
adc
lea
mov
adc
aaa
sbb
stos
daa
sub
mov
mov
mov
adc
nop
inc
repnz
cli
rcr
out
push
clc
xchg
pop
xor
push
add
aam
fsubs
mov
add
mov
das
pop
jmp
pop
xchg
xchg
jns
sbb
out
frstors
mov
and
xor
inc
mov
dec
add
ljmp
cwtl
das
and
and
into
sbb
aaa
enter
and
out
shll
ss
jp
cmpl
insl
push
movsl
stos
mov
push
mov
sbb
dec
xchg
int3
pushf
jecxz
in
or
fxch
cmp
and
pop
lahf
idivb
pop
xchg
pop
mov
pop
dec
xorb
adc
icebp
enter
pushf
inc
mov
jmp
push
test
aad
cmp
repz
aas
mov
or
xchg
inc
lret
out
iret
imul
popaw
dec
mov
push
push
dec
cmc
popf
aad
jns
cltd
pop
pusha
push
jle
xor
jae
or
xchg
loope
aas
sbb
data16
iret
or
inc
inc
test
pop
mov
fstl
mov
jne
in
push
pop
push
pop
sub
daa
js
mov
ja
les
stos
xor
jae
pusha
adc
push
lds
fnstsw
test
lds
mov
jno
or
sahf
outsb
test
test
pop
stos
lcall
cmp
sub
jnp
pop
fwait
movsb
cmpsb
mov
push
push
fbstp
les
mov
pop
stc
xchg
je
xchg
bound
fimull
mov
in
fnsave
hlt
mov
popf
cwtl
sbb
sub
mov
cmp
jl
mov
mov
mov
jle
or
push
lahf
dec
test
stc
jae
fdivs
push
inc
push
out
add
inc
imul
fildll
and
aaa
xor
cmpsl
and
push
inc
pop
adc
bound
adc
mov
cli
pop
add
addl
stos
mov
xchg
clc
insl
pop
repz
jo
push
jno
sub
or
addr16
loope
lret
scas
push
push
and
insl
mov
out
lret
repnz
pushw
and
sub
xor
in
roll
out
sub
and
push
pop
mov
lcall
and
or
pop
adc
add
or
cmp
xchg
loope
mov
das
jge
inc
addr16
sbb
shrl
out
ret
iret
ret
xchg
ja
lahf
pop
in
inc
jl
fidivrl
sub
sub
enter
dec
pop
jnp
call
imul
je
arpl
pop
push
sarl
sbb
notb
inc
insl
adc
imul
push
jle
pop
jne
bound
clc
xor
cmp
fnstcw
faddl
add
dec
subb
les
stc
mov
ja
mov
xor
mov
inc
xchg
push
dec
push
adc
loopne
cmpsl
imul
jp
cmp
ds
pop
shl
jg
push
repz
lds
scas
mov
sahf
inc
sti
out
sar
dec
cmpsb
xchg
push
pop
jb
lret
sub
jge
mov
xchg
push
jl
mov
fs
mov
rclb
jb
push
push
cmp
repz
xor
and
mov
enter
mov
lds
sub
mov
flds
mov
test
push
mov
pop
jb
push
test
xor
mov
fcoms
pop
sub
repz
dec
stos
fs
outsl
les
sbb
jne
xor
jl
dec
inc
adc
cmpsl
sbb
in
jge
jmp
jl
mov
icebp
jbe
js
and
cwtl
jae
in
cli
mov
add
ret
pop
ljmp
orl
int
pusha
add
mull
rcrb
mov
aas
enter
and
mov
pop
push
jmp
pop
cld
cmc
add
fcoml
aam
xor
shll
push
mov
xchg
inc
and
gs
inc
inc
xor
pushf
inc
add
mov
gs
arpl
jns
aaa
or
mov
inc
sbb
pop
jp
cmpsl
mov
addr16
pop
push
lahf
xchg
cmp
ficoml
subb
inc
arpl
xor
mov
xor
les
or
mov
sbb
iret
sub
lret
lods
mov
and
iret
rorb
jns
pop
pop
xchg
incb
test
mov
cli
mov
sub
or
in
mov
out
hlt
scas
jle
cltd
inc
lret
cltd
jge
mov
push
inc
fistpl
orl
sbb
push
add
mov
cmpsb
icebp
inc
sbb
and
std
mov
push
adc
addr16
popf
scas
cmpsb
mov
jo
fisubrl
mov
sbb
ret
in
push
adc
test
repnz
inc
sti
mov
or
hlt
sub
test
pop
rclb
xchg
loop
push
shll
inc
fbstp
aaa
jb
mov
xchg
mov
and
test
inc
mov
mov
mov
push
inc
outsb
adc
scas
dec
fstps
jne
roll
sbb
bound
add
bound
aaa
lret
enter
call
mov
iret
insl
fsubrl
repnz
pop
cmp
into
stc
pop
arpl
push
in
jnp
mov
and
sar
pop
jp
xor
arpl
rcl
pop
inc
out
roll
in
mov
inc
aaa
push
sub
pop
inc
loopne
lahf
in
and
mov
sub
lock
stos
mov
xor
jecxz
push
pop
jne
jmp
push
paddb
jp
mov
add
cmpsl
or
inc
jnp
push
ret
sub
insb
mov
decl
xchg
test
add
scas
or
inc
test
roll
and
dec
lds
dec
push
adc
push
push
rclb
xor
xchg
and
test
sub
out
in
or
pop
jns
jmp
jnp
push
mov
xchg
cwtl
fcmovnbe
xchg
add
es
and
popa
je
xor
arpl
cmpsl
shlb
mov
std
int3
adcl
cmp
mov
mov
fisttpl
ja
ds
mov
inc
movsb
inc
pop
hlt
xor
push
or
lahf
adc
xchg
lods
fwait
push
mov
inc
mov
adc
out
fmuls
dec
out
leave
mov
pop
addr16
jmp
pop
fisubs
cs
dec
mov
in
push
or
jae
out
xchg
adc
loopne
lret
sbbl
cwtl
test
div
aaa
sub
ljmp
jp
or
je
leave
and
loop
pop
push
or
repnz
addr16
test
dec
imul
lcall
rorb
push
sbb
aam
sti
cs
lods
cmpsl
inc
xchg
sbb
push
cltd
jne
sbb
movzbl
sub
cmp
xchg
popf
lret
mov
inc
jge
jmp
jno
xor
or
mov
lods
sbb
stos
mov
daa
insl
fwait
movsb
sub
inc
jge
test
fidivs
and
cmp
mov
ret
les
or
xor
into
sbb
xchg
test
mov
add
int3
xor
lds
fisubrs
daa
cmpsb
test
iret
dec
xchg
dec
out
jecxz
cmc
dec
pop
out
mov
scas
nop
fwait
xchg
mov
xchg
xchg
ljmp
or
lret
loop
in
add
and
andl
xor
dec
xchg
out
aas
jle
inc
xlat
flds
orl
inc
or
mov
xor
sahf
mov
mov
aas
jp
mov
add
cli
add
dec
insl
insb
lcall
cmp
lcall
dec
sub
push
push
aad
lcall
xor
and
and
fldt
mov
out
stc
iret
outsb
push
in
xor
aam
popa
stos
pop
sub
xor
sti
fimuls
pop
dec
in
pop
mov
shlb
outsl
xchg
push
and
ret
loop
dec
cmc
adc
push
fcoml
fisubrl
sub
or
mov
dec
out
lcall
hlt
fimull
test
ret
cmpsb
jmp
and
pop
and
popa
dec
cs
int3
aas
scas
std
mov
adc
or
jns
fs
push
xchg
das
or
pop
mov
movsb
jp
leave
lods
xor
pop
test
mov
data16
mov
sub
inc
push
adc
jae
cmc
stc
push
sti
mov
sbb
sbb
jp
sbb
mov
mov
fwait
sub
int
sbb
and
insl
push
xchg
sbb
mov
mov
cli
sbb
mov
fistps
dec
int
lods
pusha
sbb
xchg
subl
fstpt
loope
repz
jle
enter
push
es
mov
mov
xchg
daa
pop
add
test
lods
loope
mov
js
push
pop
pop
je
lock
push
and
lds
mov
mov
mov
mov
shll
sti
adc
jb
cmpsb
pop
das
jne
inc
hlt
xor
dec
movsb
cs
xor
add
mov
pop
fwait
call
push
in
es
xor
xchg
popf
add
leave
shrb
ret
addr16
push
jno
jl
push
insl
cmp
mov
xchg
cmc
aas
mov
pusha
sub
xor
mov
out
xor
frstor
cmp
and
cltd
test
insb
push
pop
xlat
aam
lods
and
add
out
pushf
addr16
out
dec
cmp
dec
jge
aad
mov
and
fwait
gs
pop
jp
popf
dec
xchg
test
shll
outsb
addr16
sbb
dec
xchg
dec
dec
loop,pn
scas
mov
outsb
push
add
cmpsb
clc
mov
lret
into
jecxz
lods
fbld
js
cmp
inc
pushf
les
adc
push
ficoml
xchg
inc
xchg
mov
push
in
cld
in
or
in
shrl
cmc
add
sbb
out
rorb
fnstcw
sub
cmp
and
pop
notl
fidivrl
jg
push
subl
jae
lret
fldcw
into
sbb
psubusw
or
fisubrs
mov
pushf
or
cmp
imul
cmp
clc
inc
xchg
fwait
mov
mov
out
xchg
daa
and
dec
dec
adc
pop
mov
jbe
inc
leave
mov
inc
add
repnz
jmp
or
mov
sbb
test
je
cs
shlb
mov
cmp
sti
mov
fiaddl
xchg
pop
xchg
subb
movsb
lret
lods
in
adc
cli
lock
into
pushf
into
daa
popa
movsl
lret
insl
jb
pop
xlat
insb
push
or
lods
loopne,pn
repz
jge
aaa
in
sbb
cmp
jp
mov
data16
inc
push
and
iret
ret
pop
scas
leave
xor
inc
sbb
cmp
mov
fcoms
rclb
push
adc
inc
jl
mov
lods
fstp
cmp
and
jb
lahf
mov
cmp
xchg
mov
test
cmc
pop
int
mov
xlat
cmc
adc
sub
push
repnz
pop
icebp
mov
adc
sahf
sub
xor
push
adc
xchg
stc
mov
popf
int
dec
or
sti
add
out
mov
pop
dec
push
aad
mov
pusha
arpl
adc
mov
push
ret
cli
sub
jp
push
ret
sub
adc
lret
ror
pop
pop
andl
cmp
mov
or
cmpsb
or
bound
xchg
js
loop
inc
xchg
mov
or
into
pusha
dec
gs
lods
aaa
sub
xchg
cli
pusha
cltd
adc
sarl
inc
arpl
jp
dec
aas
ret
sub
pushf
push
mov
std
fucom
and
push
pop
xchg
movsb
test
jecxz
js
imul
push
imul
data16
adc
aad
sub
mov
mov
inc
push
cli
xor
ret
bound
push
cmp
popa
mov
lahf
adc
pusha
adc
dec
outsl
repz
mov
push
xchg
imul
push
mov
jb
sub
adc
cli
bound
pop
stos
mov
cmpsb
enter
int3
cmp
mov
mul
mov
sub
cmc
loope
into
xchg
xchg
sbb
popa
sbb
mov
fs
dec
scas
ljmp
jbe
fnstcw
scas
add
loop
rolb
imul
lock
xor
inc
inc
outsl
fsubl
test
lea
inc
jnp
fdivrs
icebp
jo
push
xchg
test
push
mov
andb
mov
rcl
icebp
add
es
orl
cs
sub
mov
mov
rcll
or
jle
shl
or
xor
outsl
les
sahf
dec
mov
mov
push
xchg
cltd
ret
out
add
xor
xor
daa
sbb
fsub
out
jmp
add
mov
sbb
imul
cmp
dec
inc
cmp
pop
adc
sbb
cmp
sub
jo
xchg
enter
push
imul
dec
push
mov
scas
dec
mov
or
add
shlb
pop
mov
xor
xor
cs
sub
std
mov
jb
xor
outsb
gs
xchg
repz
mov
dec
jnp
test
aam
std
or
mov
push
movsb
mov
movsb
negb
aas
imul
sbb
popa
cmp
int
insb
push
xor
xlat
or
gs
push
fdivl
sbb
and
jecxz
divb
in
fcmovnbe
cmpsl
cmp
cmp
out
pop
arpl
clc
out
sarl
fldcw
mov
dec
sub
into
sub
test
arpl
mov
lcall
popf
jae
cmpb
cltd
sahf
xlat
lea
mov
es
mov
cmp
dec
nop
iret
cmpsb
inc
repnz
leave
dec
aaa
ss
push
or
into
adc
fs
pop
and
xchg
mov
mov
insl
sub
xchg
int3
and
inc
bound
mov
sbb
mov
aam
cmp
dec
adc
xchg
lds
shlb
pop
lahf
cmp
xchg
out
mov
jmp
hlt
sbb
cli
stos
jmp
loop
pop
pop
fdivrl
adc
es
mov
push
jp
popa
pop
inc
mov
push
mov
mov
dec
cmp
shll
push
out
sar
sub
orl
jo
mov
mov
pop
cmp
jecxz
mov
out
clc
jl
mov
stos
mov
xchg
and
fbld
dec
mov
sub
sahf
in
mov
xor
mov
inc
addr16
add
and
shll
daa
jo
push
mov
addr16
jle
lock
ret
aam
xor
or
add
lds
jb
or
popf
jg
fnstcw
sbbb
pushf
xor
mov
imul
cmp
notb
xor
popa
pop
sarl
popa
add
es
mov
lods
add
add
inc
mov
xchg
gs
xor
mov
cld
push
repnz
sbb
lret
fwait
sub
ds
inc
jbe
aaa
andl
adc
scas
loope
aam
pop
cmp
xor
inc
je
iret
iret
cmp
xor
shr
in
dec
mov
xor
jbe
dec
shll
xor
adc
adc
jle
xor
mov
cwtl
jns
iret
sarb
inc
inc
mov
xor
add
sub
cld
pop
arpl
jnp
sti
fs
xorb
popa
jl
jo
sbb
sub
nop
adc
ds
shrb
dec
sub
sub
jno
insl
pop
pop
mov
mov
jmp
adc
pop
push
xchg
sbb
lds
pop
sub
test
sub
test
adc
pushf
je
rorl
jp
stc
clc
fldt
cmpsb
jo
dec
mov
and
xchg
mov
sub
repnz
rcl
pop
push
adc
enter
popf
and
xchg
in
adc
addb
jge
iret
add
jae
cltd
or
mov
jmp
mov
sarb
clc
fidivl
in
sub
sti
pop
jnp
and
mov
jecxz
mov
sbb
bound
push
cmp
hlt
or
jno
lds
das
int
fcom
inc
idiv
fcomip
sub
dec
bound
xor
rcrb
in
pop
bound
mov
mov
scas
xor
xchg
test
xlat
enter
xchg
xor
xchg
mov
test
or
mov
scas
or
pop
cmp
in
sbb
ret
inc
lock
push
cmc
sbb
lods
mov
nop
ret
shrl
sub
lock
repz
pusha
dec
adc
or
add
lret
adc
push
push
inc
sub
inc
xor
mov
fistl
cltd
or
shl
fcomps
jbe
push
mov
das
cmp
or
adc
test
int3
lret
stos
fs
xchg
loope
sbb
das
sub
jmp
movsl
leave
and
enter
sbb
movsb
or
sub
out
fnsave
adc
push
lods
test
test
fdivl
std
cmp
jnp
pop
jge
and
push
pushw
notb
ss
push
mov
mov
jo
pop
inc
daa
icebp
vpmadcswd
push
mov
outsb
insb
push
aaa
sub
jae
lea
test
xchg
adc
pusha
mov
pop
push
mov
lea
pusha
sbb
pop
inc
or
fs
pop
or
sub
cltd
or
lea
adc
xor
mov
jecxz
outsb
cmp
movsb
adc
sbb
sub
xchg
mov
test
xchg
sbb
imul
out
aam
dec
jb
out
pop
mov
adc
push
loopne
out
mov
push
das
fs
ljmp
lods
sub
push
shlb
dec
or
aad
push
dec
inc
push
into
lahf
in
adc
ret
imul
inc
sub
sbb
dec
imul
inc
dec
out
cltd
ficompl
cmp
add
movl
sahf
add
push
or
dec
cmc
jg
es
ljmp
jbe
adc
sub
mov
xchg
daa
repz
xchg
stos
xchg
pusha
push
addr16
sbb
pushf
push
je
and
xchg
and
dec
nop
cmp
int
push
push
mov
pop
popa
shlb
push
or
mov
sub
pop
cmp
cmp
in
xor
dec
and
pop
sub
pop
test
lret
and
dec
inc
sbbb
push
imul
xlat
cmp
jg
push
arpl
inc
mov
popf
sahf
out
ficompl
sahf
notb
wbinvd
lods
movl
data16
adc
jmp
js
mov
cwtl
lds
lds
pop
sbbl
lods
xchg
pushf
insb
xor
jl
pop
and
dec
push
gs
or
test
dec
mulb
dec
mov
faddl
imul
lcall
or
push
and
insl
sbb
popf
push
xchg
sub
aad
fnstcw
les
sub
push
jecxz
cmpsl
mov
push
inc
out
shrb
or
out
jl
xchg
push
add
jb
adc
add
pop
adc
cmpl
dec
lahf
mov
mov
fisttpll
adc
popf
outsb
sti
sbb
aam
outsl
dec
add
adc
popa
xchg
sub
mov
jb
jl
sub
sbbl
xchg
jle
dec
sub
or
daa
xor
aam
out
loop
adc
dec
iret
xchg
sbb
lret
cmpsl
test
xchg
imull
push
xchg
aas
fdivp
xor
mov
loope
mov
and
popf
push
or
movsl
push
mov
lahf
dec
inc
int
push
pop
dec
mov
cmp
sub
sbb
mulb
and
dec
lahf
sub
js
jge
mov
dec
mov
imul
or
shr
mov
mov
push
lahf
jg
jmp
xchg
jmp
inc
add
ss
push
jne
xchg
xor
and
jne
into
inc
test
sahf
sbb
test
shlb
jmp
lods
push
into
in
jle
adc
pop
pop
inc
jns
sub
push
addr16
and
inc
sub
jmp
fbld
mov
loope
fbstp
insb
and
mov
pop
cmp
jb
cwtl
push
test
ljmp
decb
ret
pop
cwtl
mov
xchg
and
dec
jnp
gs
lcall
jg
jg
push
mov
mov
dec
fisubrl
cli
mov
jo
fmull
scas
insb
lea
cmp
push
imul
mov
ja
sbb
jle
hlt
notl
cltd
inc
xlat
add
mov
outsl
inc
in
ds
xchg
dec
stos
sbb
xchg
dec
into
or
cmpsb
fmuls
std
stos
adc
jle
js
popa
xchg
push
sbb
popa
es
pop
or
mov
adc
pop
dec
mov
sub
jg
and
pop
mov
ja
or
gs
out
insb
push
int
pusha
xrelease
and
std
push
fistl
inc
push
rcrb
loopne
cmp
out
rclb
push
adc
popa
and
iret
test
push
mov
aaa
std
add
add
xchg
lret
pop
orb
inc
lods
enter
pop
pusha
xchg
xlat
jp
stc
sub
scas
add
stc
pop
cld
xor
aas
aas
push
pop
mov
or
ret
repnz
in
jne
shlb
sahf
inc
ja
hlt
dec
imul
pushf
or
shl
adc
out
mov
data16
enter
sbb
sub
xor
pop
test
dec
std
xchg
pop
xchg
call
mov
ret
pop
roll
jmp
lret
cmp
add
mov
ljmp
gs
sub
xchg
mov
adc
neg
daa
sub
mov
adc
dec
insl
dec
adc
shl
or
rol
push
sbbb
ret
pop
push
pusha
add
pop
pusha
out
inc
pop
add
fwait
rcrl
add
adc
pop
aaa
aaa
iret
cmp
gs
mov
outsb
jns
imul
out
into
fadd
xchg
xchg
xchg
sbb
cmp
push
sti
lcall
mov
cli
iret
push
mov
inc
mov
and
xor
outsb
dec
movsl
add
pop
mov
push
push
sbb
ljmp
arpl
lods
js
loopne
and
pop
add
jg
mov
xchg
push
xchg
cmp
int
fwait
shl
mov
mov
or
sbb
int3
jmp
jmp
pop
ds
lock
inc
xor
in
cmp
cwtl
stos
call
fsubrl
cld
xlat
dec
push
xor
outsb
aas
and
jns
adc
orb
sub
and
mov
fwait
mov
aam
mov
and
clc
scas
shlb
mov
add
mov
imul
call
dec
aam
mov
aam
mov
out
pop
mov
push
loop
push
out
ljmp
mov
repz
jb
ja
fmuls
pop
xor
pop
cmpsl
jo
mov
in
iret
and
rorb
call
mov
sub
or
lock
sbb
xchg
cmpsb
push
jcxz
scas
lret
xor
stc
test
or
test
lods
jecxz
cmp
mov
push
das
push
pop
mov
mov
mov
mov
add
stos
xor
cmpsl
mov
shrl
mov
shll
outsl
or
push
int3
fisubs
rclb
fmull
sub
mov
jecxz
iret
aas
leave
mov
nop
in
out
roll
in
sti
xchg
popf
popa
mov
test
test
sbb
insl
and
pop
loopne
sbb
test
sub
mov
mov
cmp
add
shll
sub
les
int
or
fcoms
ficomps
xchg
jae
pop
xor
test
xchg
mov
in
push
jecxz
add
sbb
into
pushf
inc
mov
outsl
jl
jg
sbb
xor
imul
test
or
mov
lret
push
popf
and
pushf
mov
pop
dec
in
fadd
sbb
jp
or
add
fidivrs
mov
sti
fs
cld
add
cs
sbb
dec
mov
push
and
xor
leave
call
imul
fwait
mov
es
sub
cmp
leave
sub
sahf
ret
xchg
xchg
test
mov
cmp
out
cld
cmpsb
sahf
mov
cmpsl
inc
jl
movsl
xchg
xchg
in
cmp
mov
push
es
shlb
jno
sbb
cmp
mov
gs
push
and
fstps
cs
push
add
lcall
popf
jae
mov
jae
mov
inc
icebp
jmp
stos
mov
inc
jg
lret
aaa
cltd
mov
hlt
push
xchg
cs
jne
mov
outsb
cmp
pop
adc
aas
push
xor
adc
adc
sbb
aad
sub
sub
push
adc
sbb
ljmp
addl
pusha
jo
inc
nop
or
test
or
xor
xchg
mov
cmp
in
out
popf
mov
jno
test
call
mov
leave
add
mov
iret
mov
xor
sub
scas
int3
dec
inc
and
in
add
pop
mov
test
or
scas
hlt
int
outsl
shrd
sbb
xchg
in
pop
cli
cltd
dec
bound
jmp
mov
sbb
pop
popa
add
dec
jb
stos
jg
cltd
cmp
ds
outsb
push
ja
mov
movsb
in
cwtl
cwtl
lock
in
cld
sbbl
insl
pushf
inc
mov
jle
pop
and
cmp
xor
cmpsb
dec
fcomi
dec
or
hlt
test
pop
jl
aaa
mov
test
scas
pminub
mov
scas
ds
inc
push
jns
stos
mov
out
cmpsb
movsb
push
stc
ds
inc
flds
int
sbb
int3
shrb
fbstp
xlat
les
push
in
out
sbb
mov
mov
push
clc
daa
jecxz
dec
es
cld
mov
sub
cmp
xchg
in
ret
test
ds
daa
test
or
popf
out
cmpsl
dec
jle
adc
jmp
push
nop
cmp
cmp
xchg
and
enter
and
jne
fimuls
pop
les
mov
int3
aaa
sbb
mov
mov
jnp
mov
dec
outsb
or
sbb
cli
leave
mov
in
in
cmpsl
jl
imul
cltd
inc
push
orb
push
push
mov
inc
repz
bound
xor
cli
mov
sti
lret
ja
cltd
les
fimull
clc
jns
add
xchg
jns
mov
push
push
stc
inc
and
dec
inc
mov
sbb
jb
xchg
lock
jge
fcomps
add
repz
cltd
movsl
sbbl
loope
mov
scas
popl
and
push
cmp
cs
sbbl
mov
mov
mov
adc
fadds
jmp
and
daa
mov
daa
addb
inc
fisttps
mov
scas
mov
sbb
lcall
test
test
das
push
hlt
cmpsl
xor
xor
push
jecxz
mov
shll
mov
xchg
scas
outsb
pop
ja
adc
lahf
rclb
loope
cmc
cltd
ds
or
mov
add
jne
nop
aad
pop
mov
jns
push
cmp
outsb
mov
scas
out
sbb
int3
fstpl
rcrb
int
fcoms
arpl
nop
cmp
pop
jnp
fbstp
pop
mov
fcmovbe
dec
add
mov
inc
movsl
and
jo
and
test
pushf
aaa
xchg
xchg
test
ljmp
xchg
cld
fcompl
cmp
fldenv
jb
jns
sub
roll
out
mull
mov
scas
lods
stos
push
add
push
push
fisubl
pop
movsb
jns
cwtl
jne
out
mov
pop
mov
dec
fsubrl
xchg
rcll
push
sbb
pop
std
pop
mov
jnp
jae
icebp
jp
ljmp
or
stc
xor
in
mov
or
mov
mov
roll
jle
movsb
push
in
das
sbb
jp
sbb
cltd
add
xchg
mov
lea
mov
and
pop
xchg
ja
lret
dec
or
mov
lods
push
mov
mov
xor
mov
jno
sahf
loopne
sbb
dec
popf
test
imul
or
and
arpl
add
add
mov
js
xor
sbb
or
scas
cs
jnp
std
mov
sub
xchg
addr16
jbe
bound
andl
aas
jnp
cmpsb
push
push
xchg
xor
inc
jl
jl
add
test
mov
test
enter
js
lahf
dec
xchg
mov
fimull
pop
jmp
aaa
ds
xchg
test
scas
push
ds
loop
imul
jge
loope
clc
bnd
sub
loop
pop
call
pusha
inc
xor
nop
push
adc
inc
mov
bound
dec
rol
aaa
jb
loop
jl
adc
jne
cmpsb
cmp
inc
clc
add
stos
test
cmpsb
rcrb
pop
mov
fstp
mov
lds
cmp
jp
mov
push
xchg
outsb
je
repz
mov
test
sbb
or
dec
adc
daa
repz
out
aas
mov
jns
add
jo
rcl
call
imul
shrb
xor
lret
gs
adc
cmpsl
ror
lret
xor
rcrl
cmpsb
xor
jo
mov
inc
movsb
dec
ja
sub
stos
sbb
in
mov
sbb
sub
bound
xchg
adc
xchg
popa
xor
xchg
adc
xchg
cld
lock
stos
cli
mov
sub
push
mov
pushl
jmp
ret
mov
mov
movsb
scas
jecxz
xchg
push
xor
lret
push
sti
into
pop
lods
mov
in
xchg
ljmp
out
pushf
idivl
cli
adc
es
xor
inc
mov
push
sbb
js
pop
pop
inc
sub
sub
bound
dec
sbb
popf
xlat
mov
movsl
jne
cld
mov
xchg
pop
xor
lds
push
jno
cmp
out
ljmp
cmpl
insl
ret
inc
inc
jge
outsb
mov
popa
shll
adc
lea
mov
cltd
adc
repz
leave
iret
dec
cwtl
popa
dec
sbb
mov
test
push
jne
xor
lods
ja
mov
inc
in
mov
add
push
jmp
mov
xchg
loop
push
and
loopne
lret
adc
popf
inc
pop
scas
xor
shrb
sub
sub
shlb
cmp
cmpsl
mov
in
mov
push
sti
add
sub
arpl
popf
xchg
lds
dec
lret
lock
das
and
stc
jle
xchg
push
fldcw
xchg
or
push
mov
push
loopne
pop
push
rcl
adc
lea
jo
adc
xor
les
and
imul
es
xlat
push
or
testb
adc
xor
int3
mov
movl
out
sbb
ret
fldcw
mov
mov
sub
mov
aam
sub
inc
cmp
sbb
xor
mov
stos
mov
and
rcrl
loope
orb
adc
and
ja
aaa
mov
mov
dec
cmc
aam
mov
lahf
outsl
adc
jmp
lods
repnz
aaa
and
test
or
sub
data16
out
leave
lds
in
sbb
cmpsl
mov
pop
push
and
or
sub
ljmp
pop
or
int3
sub
popa
and
mov
xchg
ljmp
sti
add
lods
xor
mov
scas
mov
js
gs
aas
test
add
mov
jnp
in
fsubs
inc
inc
pop
lods
cli
dec
cld
out
pop
movsb
push
hlt
and
mov
xlat
scas
mov
fstpt
jne
add
pop
outsb
jg
cmp
add
fists
mov
popa
ret
jge
daa
bswap
mov
sbb
sti
ret
sub
sub
adc
cmp
daa
mov
pop
push
adc
cmp
subl
ds
int
pop
mov
inc
xlat
pop
fdivl
inc
movsl
dec
push
sub
out
adc
gs
jg
xorb
sbb
xchg
pop
dec
mov
pop
jge
rol
negl
rorb
in
xor
inc
test
movb
pusha
loop
mov
pushf
imul
imul
mov
out
sti
loop
lret
fs
stos
sbb
add
push
jg
mov
push
and
mov
and
jbe
rcrl
roll
cs
lods
decl
jge
xchg
shll
jne
or
jne
adc
cmc
pushf
data16
mov
out
mov
push
in
sbb
imul
cld
ja
imul
cmpsb
mov
pop
push
sbb
dec
sub
push
addb
and
inc
sahf
ss
adc
sub
dec
sahf
and
stc
mov
adc
fldt
lods
rcl
stc
cmpb
and
push
iret
xchg
fsubl
out
orb
inc
sbb
inc
adc
inc
xor
pop
sub
sahf
xlat
cltd
subb
push
cld
dec
sahf
and
dec
es
push
inc
loopne
loop
mov
lret
dec
data16
aaa
xor
mov
cmc
push
jp
and
mov
push
inc
das
arpl
sbb
jae
test
flds
frstor
movsl
dec
mov
mov
push
and
daa
xchg
jge
add
adc
dec
mov
mov
push
dec
cmpsl
sbb
lds
sub
pop
das
fcoms
repnz
mov
leave
xor
dec
xchg
fadds
xchg
mov
roll
inc
cmp
movsl
cmp
popf
push
into
arpl
les
sub
aaa
out
sbb
sbb
cmpl
outsb
in
fimuls
out
jno
outsb
icebp
pop
jp
mov
sar
test
mov
fistl
fistpl
sti
dec
imul
lahf
dec
adc
popa
jae
xor
aad
mov
mov
and
jo
cmp
mov
cmpsl
sar
aad
bound
lds
pop
in
lret
les
sub
and
xor
daa
ljmp
out
outsl
inc
mov
mov
push
mov
jge
pop
outsl
xchg
add
aas
js
fldt
and
mov
pushf
pop
out
lcall
popa
ss
push
lods
inc
sti
cmpsl
mov
ret
ret
ret
jp
out
sbb
inc
cltd
je
jno
jmp
rcrl
push
loop
mov
mov
lds
popa
daa
jp
shlb
xchg
lea
les
xor
xor
or
cmc
mov
cmp
sub
inc
in
pop
jne
test
cmp
scas
rolb
test
and
xor
and
or
sahf
mov
sub
push
repnz
or
mov
leave
cwtl
push
imul
adcb
xor
mov
add
and
loopne
rorl
fs
xchg
in
or
out
jmp
gs
adc
xchg
repnz
cmp
or
xorl
xchg
loop
stos
fldenv
and
ss
lds
mov
push
pop
test
fwait
and
mull
popl
pop
add
fsubr
outsl
inc
imul
pop
xchg
jo
push
jl
push
je
or
sbb
push
lods
nop
lahf
inc
dec
inc
bound
ds
clc
popf
xor
cmc
in
jmp
test
xor
call
push
shlb
mov
pop
inc
ljmp
or
data16
lods
repz
jb
xchg
dec
dec
and
jnp
call
xlat
or
mov
idivb
fidivrl
outsb
test
fadds
mov
xor
push
mov
jo
and
nop
push
sbbb
lahf
xchg
fisttpl
mov
jbe
stc
and
mov
mov
cmpsb
mov
sbb
xor
or
pop
ret
xchg
jns
jnp
ror
dec
pop
pop
stc
jbe
pop
or
jmp
sbb
stc
push
add
loope
or
push
jecxz
ja
inc
sub
lds
inc
leave
xor
or
jg
fmull
sbb
and
mov
push
test
mov
sub
imul
xlat
test
mov
dec
stos
cmp
roll
out
cmovle
dec
dec
mov
pop
hlt
mov
or
mov
xchg
fimull
xor
and
add
mov
xchg
cmc
testb
cltd
daa
sub
mov
das
js
mov
sbb
and
lea
xchg
adc
mov
dec
mov
mov
enter
dec
jnp
mov
inc
aas
addl
dec
lock
mov
imul
repnz
cli
dec
xchg
xchg
add
imul
into
mov
iret
loop
or
faddl
repnz
cmp
imul
push
insl
inc
mov
lcall
or
xlat
ds
xor
pusha
leave
push
enter
mov
mov
int3
push
sahf
push
add
lret
inc
xchg
adc
xchg
icebp
cmp
lret
xchg
mov
stc
push
sub
mov
mov
lret
jo
cs
adc
call
in
inc
and
in
jmp
insb
lods
push
aam
mov
mov
in
cmp
xchg
in
in
inc
nop
jo
mov
dec
and
mov
movsb
jl
mov
aad
cmpsb
rcrb
lahf
push
lods
jg
push
inc
mov
adc
or
lock
popa
clc
mull
shll
sahf
fnstenv
lods
imul
push
icebp
jne
push
xor
sbb
aaa
loopne
aaa
aaa
aaa
insb
in
dec
jne
mov
xchg
mov
or
jae
mov
stos
movsl
push
push
addr16
mov
mov
insl
fldl
push
pop
arpl
in
out
pop
out
rclb
scas
iret
rcr
std
push
imul
push
cmp
xlat
lea
insl
pop
jae
gs
popa
xchg
mov
scas
dec
xchg
pop
dec
out
push
mov
cmp
data16
into
xor
push
jb
xor
cwtl
sarl
nop
sub
pushf
dec
xchg
dec
dec
or
mov
cld
lods
outsb
push
cli
inc
adc
adcl
cmc
int3
fisttpl
adc
xor
aad
or
imul
cmp
in
scas
in
in
pop
sbbl
pop
xchg
xor
mov
cmp
pop
int
test
gs
cmp
imul
sbb
pop
insb
test
loope
jg
push
and
lods
pop
dec
add
push
dec
mov
add
gs
fstpt
out
loopne
push
or
gs
inc
fwait
and
push
out
movsb
orl
pushf
aam
jecxz
mov
cli
fstpt
or
mov
xchg
shl
mov
xor
lcall
fwait
mov
cmp
sub
sub
int3
xchg
dec
add
ret
es
mov
push
xor
aas
scas
les
sbb
sbb
in
mov
dec
inc
adc
shll
sub
add
lcall
outsl
pop
dec
push
mov
pop
cld
cmpsl
ljmp
inc
or
ljmp
sbb
jnp
sub
imul
nop
push
loope
ljmp
loope
xchg
cmpsb
fwait
xorb
les
jmp
std
jecxz
and
jae
sbb
pop
gs
dec
adc
jb
pushf
lret
ret
sub
sarb
push
js
adc
roll
outsb
mov
xchg
push
fdivp
outsb
xchg
ret
hlt
jecxz
inc
repz
cmp
test
cmp
jns
cwtl
and
test
movsl
cmc
jl
daa
pop
adc
cmpsb
rcr
fisttpl
inc
xchg
xor
fs
lret
dec
stc
add
fldt
cmp
sub
push
popf
sub
mov
mov
cmpl
mov
aad
push
shrb
loop
cmp
adc
push
cli
loope
mov
rolb
sti
xor
or
and
dec
or
imul
rcl
fisubrl
xchg
inc
pop
cmpsb
push
add
pop
mov
mov
adc
mov
lods
aam
repz
fisttpl
lret
sahf
in
or
xor
sub
imul
or
rorb
xor
or
fdivrl
mov
inc
mov
push
rorb
cmpsl
inc
sub
pop
push
push
dec
cmp
or
aad
adc
fmull
das
mov
mov
incl
mov
data16
movsl
orl
inc
ds
push
ss
xorl
inc
adc
sbb
movsb
icebp
mov
decb
cmp
into
push
int3
or
cli
push
rcrb
lods
es
loope
shl
aad
cmp
jmp
and
xor
xchg
stc
filds
inc
std
nop
sbb
push
dec
popl
int3
adc
push
cmpb
das
out
dec
cmp
jp
push
enter
insb
enter
in
mov
lea
outsl
imul
notb
insl
inc
xor
out
int3
ficoms
ret
xchg
pop
aas
adcb
mov
inc
lcall
adc
jp
lret
pusha
icebp
insl
lret
lods
aam
xorl
pop
sahf
cmc
mov
or
inc
sub
jbe
mov
aam
lret
jno
rcrb
jge
adcl
xor
sub
or
loopne
sti
test
dec
mov
scas
dec
mov
fsubl
dec
int3
icebp
pop
movsb
dec
aas
in
inc
pop
mov
xchg
cmp
sub
jne
out
inc
stos
add
jae
scas
pop
lret
fwait
loop
pop
mov
or
mov
fwait
and
lret
cli
lret
popa
pop
sbb
ja
xchg
fwait
or
dec
dec
push
mov
scas
popf
movsb
aad
inc
lcall
out
jae
pop
or
ret
mov
jb
cmovge
scas
fstpl
fs
push
paddusw
outsl
loopne
or
inc
int3
sub
mov
inc
ss
xlat
imul
inc
mov
test
js
push
jle
leave
inc
mov
lods
xorb
popf
les
jl
movsb
fiaddl
pusha
adc
mov
dec
in
and
lret
mov
sbb
pop
jle
push
fs
pop
in
mov
loopne
insb
test
sub
mov
mov
out
mov
ret
pop
mov
hlt
cs
scas
test
in
imul
inc
cli
jo
divl
repnz
std
xor
je
inc
add
xor
cltd
mov
add
das
outsl
push
outsb
pop
mov
pop
and
xchg
lds
jno
sub
jo
push
outsl
test
push
pushf
fs
mov
shll
sbb
push
fstps
mov
sub
cmpsl
nop
inc
inc
mulps
inc
inc
pop
dec
aad
mov
and
cmpl
fcoms
dec
lods
push
or
out
jns
inc
fcompl
aam
lcall
nop
jns
inc
sub
in
sub
or
fwait
rclb
cmp
and
out
loope
mov
clc
sti
or
xchg
mov
adc
mov
int3
and
jmp
iret
xor
pop
sbb
lahf
mov
dec
test
in
adcl
xor
sbb
xchg
or
mov
lods
xor
or
psubsb
push
lret
sarl
fdivp
shll
mov
add
pop
sub
addr16
push
inc
loopne
mov
test
lcall
repz
fucom
mov
mov
fdivrl
mov
xor
or
loop
pop
addl
xor
xchg
shlb
stos
in
test
int
int
dec
push
loopne
ljmp
clc
ljmp
push
lods
cmpl
mov
sbb
and
xor
inc
incb
ret
sub
add
in
sbb
sub
das
pop
lea
adc
int
lahf
repz
repz
jmp
test
dec
fdivrs
out
movsb
xor
inc
aaa
mov
xor
shl
lcall
sbb
jne
movsl
mov
mov
int3
cmp
xor
fnstenv
popa
pop
sub
sti
push
cmp
and
mov
decb
or
adc
and
outsl
test
lock
push
push
ds
call
nop
mov
xchg
lret
gs
jecxz
pop
push
xor
xor
in
xor
scas
or
gs
dec
iret
cmp
adc
fidivl
or
sbb
out
test
popa
ss
adc
adc
ds
daa
hlt
xstore-rng
cmpsl
xchg
insb
inc
mov
cld
or
pop
rol
or
mov
pop
pop
push
push
push
mov
imul
xchg
lahf
pop
push
rorl
sub
mov
cltd
jae
jo
movsl
sbb
cmc
outsb
push
sahf
lods
stos
xlat
aad
dec
jbe
mov
cwtl
cmp
mov
and
jne
repnz
out
fwait
mov
ljmp
lods
lods
sbb
rorb
push
ret
mov
aas
pop
mov
or
popa
je
jo
pop
popa
add
push
sti
fildl
nop
pop
and
xchg
cmp
cs
sub
lahf
xchg
cmpsb
inc
push
pop
iret
mov
jmp
hlt
mov
iret
adcl
cmp
inc
xor
orl
outsb
ret
repnz
or
xchg
sbb
push
fstpl
sbb
sub
lea
push
xchg
rcrl
push
lods
ss
or
jne
andb
and
xchg
adc
sub
inc
mull
or
aad
mov
or
filds
bound
aam
js
adc
mov
sub
pop
cmc
in
mov
mov
fwait
push
inc
and
mov
mov
adc
xor
cmp
xchg
fisttpl
inc
aaa
loopne
lahf
int3
push
jmp
inc
jae,pt
add
mov
js
shr
push
inc
pop
adc
and
dec
sub
push
pushf
and
addr16
dec
mov
add
or
xchg
jo
repnz
cmp
fidivrl
pop
jp
ret
cld
mov
mov
aas
ljmp
pop
mov
outsl
adc
add
sub
or
aas
movsl
sbb
ss
test
lock
lods
mov
cmp
add
bnd
jno
inc
iret
test
dec
inc
sub
iret
push
cmp
ljmp
fisubrs
jno
rorl
hlt
jge
cwtl
mov
sub
mov
imul
out
subb
out
jmp
sub
sbb
and
shrl
push
add
sbb
and
sbb
daa
call
xor
in
mov
cmc
jecxz
xor
test
add
sbb
cld
jns
jb
jp
push
stos
repnz
pop
xchg
adc
xor
xchg
loope
inc
sar
test
push
pop
les
pop
mov
orb
jmp
xchg
ljmp
adc
mov
out
sbb
mov
shll
hlt
sbb
inc
jmp
sub
mov
xchg
sub
adc
pop
mov
mov
or
dec
adc
mov
ja
mov
lret
adc
jmp
cli
sub
inc
xlat
mov
rcrl
dec
mov
fwait
and
loopne
adc
sbb
add
adcb
sbb
stos
popf
mov
iret
out
loopne
jo
subl
jle
stos
push
int
call
cmp
adc
lret
sarl
cltd
test
xor
pop
out
add
mov
lea
pop
cmp
cwtl
sbb
ds
mov
xor
lret
std
ja
or
in
push
lods
mov
sti
mov
or
xlat
rol
out
arpl
adc
push
mov
mov
mov
sarl
adc
in
pop
cmp
cwtl
into
imul
inc
mov
mov
std
repnz
or
sub
cltd
sti
mov
cwtl
lahf
pop
std
test
in
add
jecxz
mov
imul
out
scas
inc
fwait
leave
mov
add
mov
cmp
and
mov
xchg
mov
mov
fists
leave
xchg
xor
mov
sbb
mov
mov
and
fdivrl
lahf
mov
lods
and
sbb
push
cwtl
outsl
mov
pop
sbb
rcrb
xchg
cltd
mov
leave
rcl
add
cltd
shl
fimull
push
insl
inc
pop
mov
repz
movsl
push
inc
cmp
jne
repnz
sbb
popf
cmp
ficoms
xor
aaa
int
popf
daa
inc
imul
xor
cmc
push
jmp
jo
lcall
aad
xlat
push
aaa
jnp
test
imul
mov
push
shrl
es
hlt
mov
or
push
or
es
sbb
pop
enter
xchg
pusha
xor
inc
push
stc
sbb
mov
negb
or
mov
in
jle
push
cmp
xchg
mov
ljmp
in
insl
pusha
mov
or
test
add
in
out
enter
ljmp
fxam
cli
ljmp
mov
jo
fsubrp
dec
pop
mov
mov
cmpsl
adc
mov
insl
cmp
sub
xchg
sub
aaa
in
negl
loopne
dec
add
dec
add
add
repnz
stc
add
mov
push
pop
inc
pop
ljmp
inc
jp
std
orl
fildl
mov
or
xor
adc
aas
outsb
hlt
movsl
mulb
test
xchg
shlb
pop
pusha
xchg
push
sub
dec
push
pop
dec
inc
inc
mov
mov
cmpl
rcll
fwait
cmpsl
daa
inc
out
xchg
jl
add
adc
cmp
stos
lahf
pop
push
lods
sbb
inc
adc
jp
imul
mov
insb
negl
add
xor
addr16
idiv
xchg
cmp
xchg
dec
imul
stos
mov
xchg
or
int3
sbb
test
xchg
out
jnp
mov
mov
dec
dec
popa
pop
movsl
jo
or
pop
xor
pop
push
push
cmp
mov
jnp
movsl
aad
ror
sbb
inc
or
mov
xor
mov
fwait
inc
sub
shl
cmpsb
pop
xchg
sbb
jbe
pop
mov
shll
test
pop
ja
test
orb
mov
mov
sbb
xchg
push
rcrl
and
fsubrl
cmp
or
lds
addr16
jmp
xor
jno
and
popa
mov
inc
dec
icebp
pushf
icebp
loopne
in
xor
add
xchg
enter
push
mov
loopne
lcall
call
pop
jge
or
outsb
insl
fisttpll
mov
lcall
shll
aaa
dec
mov
push
jle
ret
lds
in
test
rol
rorl
sub
mov
and
lds
inc
xchg
cmp
inc
push
mov
xchg
data16
mov
jg
ja
cmp
or
pop
shrb
pushf
jbe
xor
mov
stos
cmpsl
fisubrs
inc
out
push
dec
rorl
imul
pop
push
aas
mov
xchg
repz
xchg
sbb
push
cli
adc
jp
lods
std
push
lods
test
xchg
test
push
sub
jmp
test
jle
add
jnp
cs
pushf
jbe
pop
mov
aaa
js
mov
jecxz
sbb
push
push
inc
jbe
rcrl
lcall
outsb
adc
popf
andl
insb
xchg
jno
outsb
pop
cmp
push
imulb
jno
or
push
movsb
imul
jmp
sub
pop
inc
adc
push
adc
dec
dec
or
mov
leave
dec
push
pop
push
sahf
pop
enter
fisttps
inc
sti
cmpsl
fwait
cmpsb
xor
mov
push
icebp
fmull
and
and
xchg
sub
lods
adc
jle
dec
or
movsb
and
stos
testl
leave
add
mov
inc
dec
and
mov
mov
js
dec
in
leave
clc
sbbb
or
fisubrs
in
or
jo
pop
cs
sbb
pop
xor
pop
xchg
sub
movsb
push
cmp
jp
mov
shl
inc
es
and
pop
dec
and
adc
jbe
out
and
fs
push
push
xor
adc
outsl
popf
xorb
scas
mov
mov
pushf
dec
test
mov
out
mov
out
jmp
jp
pop
xchg
idivb
dec
dec
aad
out
stos
ljmp
dec
rcrb
sbb
sti
adc
adc
and
lea
lea
jl
addb
add
cmp
subb
add
jmp
call
sbb
or
mov
inc
ljmp
fnstsw
xor
jnp
dec
lods
call
mov
push
dec
dec
outsb
aaa
dec
jecxz
inc
pop
jmp
popf
jle
addl
cwtl
lret
inc
pop
and
movsb
cld
or
jne
pop
mov
cmpsb
sbb
test
lock
in
xor
dec
lds
xchg
dec
inc
push
ret
leave
mov
movsb
adc
outsb
invd
sbb
inc
and
inc
push
or
repnz
pop
inc
cli
sub
inc
ret
push
adcl
fists
or
sub
call
imul
mov
cmpsb
cmpsl
cmp
inc
push
mov
ror
aam
pop
xor
push
or
adc
fwait
and
popf
adc
int
or
dec
mov
fsts
cmp
out
sub
mulb
out
lret
push
inc
jl
sbb
cmp
test
lret
inc
mov
and
and
shl
fists
xchg
inc
daa
je
cmp
lock
lahf
xor
test
mov
into
mov
int3
mov
imul
adcb
aad
sbb
call
je
loope
add
jle
lods
out
stos
pop
stc
mov
cmp
loopne
movsb
fisubrl
rolb
jne
test
or
push
inc
add
call
cmpsb
outsb
int3
inc
lock
loope
mov
sub
clc
pop
out
pop
cmp
xlat
lods
leave
in
dec
ja
cmp
movsl
inc
daa
jne
sbb
ds
popa
pop
pop
pop
jbe
inc
xor
adcb
mov
aas
cmp
daa
lahf
ret
mov
add
xor
pop
xlat
cmp
inc
inc
pop
adcl
mov
sbb
scas
mov
hlt
cmp
imul
mov
call
sar
or
in
xorl
out
leave
inc
jo
xor
push
out
call
test
or
push
movsb
xor
mov
pop
adc
sar
push
inc
cmp
sti
movsb
jae
clc
fwait
cmp
out
mov
js
sub
sub
or
sbb
scas
ljmp
shl
pop
ret
xchg
mov
icebp
push
jae
or
dec
lcall
cmpsl
cmp
or
hlt
int3
int3
mov
xchg
xor
xchg
mov
pop
cmp
test
lret
sub
mov
jle
decb
ret
jl
pop
and
xchg
and
or
lock
inc
mov
mov
and
repz
inc
in
jl
add
and
jmp
divl
cmp
push
scas
push
xor
jb
dec
add
pop
jecxz
insl
ret
mov
inc
dec
ds
mov
push
hlt
je
aam
daa
and
pop
ja
fcoms
mov
push
out
outsb
cwtl
mov
jbe
je
fistpl
cmc
add
cmc
dec
sahf
and
push
hlt
test
dec
popa
push
mov
je
shll
fnstcw
push
shlb
inc
push
or
push
pop
aad
add
adc
sub
addr16
inc
ficompl
lret
fidivl
mov
mov
sub
fidivs
mov
js
or
push
jg
nop
sub
mov
xor
adc
inc
mov
rcl
mov
add
mov
enter
dec
scas
adc
pop
ret
inc
test
std
mov
jbe
imul
subb
out
lds
push
out
pop
push
addr16
or
cmpsb
rcrb
xor
or
sti
loope
xchg
xorl
sbb
xchg
inc
fwait
inc
dec
in
das
cli
fnstenv
push
inc
push
mov
inc
sbb
mov
jmp
lahf
ret
jp
sub
and
pop
mov
ds
test
pop
push
aas
mov
gs
sbb
sbb
pop
xlat
and
cmc
cmovo
and
xchg
cmc
cld
jb
call
aad
call
imul
jl
dec
dec
loope
xchg
enter
push
adc
imul
push
out
xlat
ja
xchg
sbb
pop
sbb
scas
lret
adc
jecxz
leave
sub
data16
bound
lods
shl
lret
or
pop
hlt
mov
and
inc
push
mov
sti
jns
adc
negb
add
lds
lea
xchg
les
or
mov
lcall
inc
pop
xor
lret
xchg
add
cltd
adcl
xchg
leave
jo
pusha
shll
pop
dec
stos
dec
repz
subb
aas
scas
outsl
sbb
push
cmp
add
pop
xchg
jo
pop
popf
pop
ja
adc
push
hlt
push
out
pusha
xor
lock
dec
xchg
stos
lock
lods
push
jne
jns
jle
push
cs
out
popa
imul
arpl
inc
mov
and
lock
lret
ret
pusha
out
fsin
sub
cmp
or
shlb
out
orl
jns
addr16
pop
movsl
cltd
clc
or
aas
into
pop
leave
xor
lods
or
scas
jo
mov
or
stc
test
adc
lods
faddl
mov
xor
inc
mov
stc
mov
imul
mov
mov
lods
pop
inc
jae
mov
adc
jp
popa
mov
cmp
sbb
push
sbb
imul
mov
push
pop
rol
mov
lea
jecxz
mov
stos
adc
test
fadds
or
jp
sbb
or
push
aas
cld
push
or
xchg
cmp
int3
test
cmp
cmc
mov
pusha
sub
clc
iret
fidivl
imul
adc
in
loop
orb
sbbl
adc
sbb
fisubrs
fidivl
addr16
sub
into
enter
cmp
adc
popf
jmp
sub
into
in
xchg
mov
sarl
adc
sub
frstor
mov
out
fsts
adc
lahf
stos
xchg
sahf
ja
test
or
test
repnz
clc
lahf
sti
inc
add
mov
or
mov
jmp
sub
ljmp
dec
test
dec
loop
pop
lds
jb
add
jne
lahf
dec
cmp
imul
aaa
adc
out
ss
xchg
mov
xchg
jnp
mov
fdivs
sarl
sarb
popa
stc
or
std
cmp
adc
stos
cli
mov
out
or
mov
adc
roll
ljmp
mov
lret
xor
mov
repnz
mov
lds
adc
call
and
std
daa
cmpsl
fwait
add
repz
pop
inc
dec
ret
and
popa
xorl
adc
fwait
nop
sbb
push
aam
fdivs
addb
xor
mov
xchg
pop
lock
inc
xchg
stos
sbb
adc
dec
dec
fcompl
incl
cld
sahf
push
push
gs
aaa
lret
jnp
les
push
sahf
inc
inc
sub
dec
icebp
clc
shr
aas
sbb
das
out
or
dec
or
or
mov
stc
decl
aam
addr16
stos
sub
call
or
gs
push
jl
add
mov
cltd
in
loope
push
jae
push
ss
and
ja
push
sbb
xlat
orl
cs
std
out
outsl
or
aad
test
jne
in
adc
xchg
dec
iret
repz
add
mov
jp
adc
mov
lock
lock
loopne
xchg
loopne
jae
into
mov
dec
fldcw
push
cmp
int
fs
flds
push
fwait
nop
push
stos
test
dec
ja
fbstp
gs
or
push
add
inc
popf
or
push
xchg
jb
jae
cli
sub
and
leave
int3
lcall
cmp
add
push
add
imul
aad
ret
das
cltd
or
out
mov
dec
push
call
aas
mov
or
imul
and
dec
subb
push
insb
leave
jo
pop
mul
cltd
je
jb
pushf
add
lret
cmpl
mov
pop
int
fwait
jo
xchg
cmc
shlb
lahf
adc
jno
sub
leave
movsl
stos
arpl
xor
out
jae
je
mov
inc
dec
push
mov
ret
insl
aas
faddl
cli
fsubrp
ret
pushf
pop
pushf
movsb
pop
jecxz
mov
xor
jae
sbbl
and
nop
je
xchg
jno
inc
add
push
insl
pop
in
repz
repnz
mov
pop
ret
add
mov
mov
ds
inc
pcmpeqd
ds
in
dec
xchg
cs
adc
mov
ret
mov
and
nop
ret
jb
jo
sbb
inc
insl
xchg
or
cmc
aaa
cmp
leave
fwait
adc
and
push
mov
stos
call
repnz
repnz
fimull
adc
subl
push
lret
xchg
mov
fcmovne
push
sub
mov
stos
fucomip
xlat
and
cltd
push
imul
lcall
sbb
shrb
sbb
xchg
xchg
add
and
adc
dec
mov
enter
cmpsb
cs
popf
sbb
dec
dec
xor
push
out
push
add
mov
ljmp
scas
or
dec
pop
insl
das
push
push
wrmsr
cmp
dec
in
cmp
adc
sub
or
adc
leave
loope
sbb
shr
js
adc
pop
inc
jmp
sub
testl
inc
sbb
adc
xchg
orb
fcomip
loop
sbb
add
cwtl
sbb
out
cmpsb
imul
sbb
adc
stc
jge
sti
loopne
bound
inc
je
fdivrl
mov
and
mov
mov
fwait
lahf
mov
xchg
roll
xchg
jl
jbe
ljmp
jmp
lret
xlat
cmp
cmp
dec
gs
aad
fnsave
dec
fdivs
stc
adc
imul
test
loope
add
sub
and
and
es
jno
fiaddl
loope
ds
push
shl
ret
mov
sub
xchg
test
arpl
or
cmp
inc
aaa
out
pushf
jnp
mov
retw
insb
xchg
xchg
pop
xchg
mov
sub
mov
cli
aas
sub
cmpsb
imul
xor
sub
test
fcoml
or
push
mov
in
and
js
fs
sub
pop
jnp
jb
sub
add
mov
ret
xchg
mov
add
test
cmp
js
scas
adc
insl
shrb
inc
insb
stos
inc
in
daa
pop
shrl
and
mov
stc
add
daa
scas
pop
fldenv
ficoms
cmp
pop
and
lret
jle
es
mov
pop
popf
in
xchg
test
icebp
xchg
xor
insl
ss
imul
out
mov
cli
mov
add
pop
add
push
ds
push
cli
hlt
push
and
cmp
inc
shrl
ds
mov
cmp
xlat
seta
and
in
mov
out
int
sbb
lcall
ss
out
in
xor
lds
movsb
push
or
fistl
xchg
insl
mov
ja
lds
mov
adc
je
insb
xchg
lret
or
mov
idivl
out
mov
cwtl
das
cli
cmp
popw
sbb
dec
fwait
add
push
mov
imul
lret
data16
clc
mov
std
mov
rolb
neg
mov
mov
loop
lods
xchg
sbb
sbb
adc
xchg
popf
repz
xor
pop
mov
icebp
pop
jb
out
xchg
mov
pop
decb
xorl
mov
out
cmp
je
fwait
loopne
loopne
les
adc
jnp
or
test
rcrb
pop
adc
ret
shrl
dec
inc
and
pop
dec
shll
and
adc
into
fsubp
jmp
insb
pop
lods
xchg
test
out
xor
jo
xor
or
stos
xor
sbb
adc
icebp
outsb
in
sub
inc
inc
into
add
shll
std
adc
push
cmc
adc
push
pop
xchg
adc
cwtl
push
insb
stc
out
cmp
hlt
mov
mov
dec
in
cmp
mov
pop
push
inc
cmc
out
fucomip
xor
jge
test
aas
mov
mov
dec
mov
adc
xchg
push
xchg
shll
push
mov
add
mov
xor
xor
cmp
jns
cmp
mov
pop
aam
lea
push
test
js
sub
mov
sub
jmp
cmp
stos
fidivs
sahf
sub
enter
mov
add
sbb
shll
popf
lds
scas
dec
xor
stos
sbbb
mov
or
or
cmp
in
sbb
push
jmp
mov
inc
aas
mov
push
adc
pushf
inc
jno
clc
cmp
mov
imull
dec
dec
jecxz
into
mov
dec
or
out
lahf
popf
nop
mov
rdpmc
push
incb
and
lcall
xchg
rorb
jbe
mov
dec
sti
outsb
out
xchg
lea
inc
add
sbb
or
sbb
aam
aas
jo
incl
dec
cmp
outsl
mov
imul
rorl
dec
push
mov
pop
sub
imulb
cmp
jmp
negl
enter
push
xor
fiaddl
fadds
stos
test
sahf
pop
or
orl
ret
lock
mov
cmp
xor
mull
cmp
jmp
dec
imul
cmpsl
dec
rcr
mov
push
xchg
adc
ss
rcr
mov
push
fst
roll
roll
push
add
arpl
lds
cs
jge
mov
adc
pop
inc
popf
cmp
fnstsw
lret
test
xor
out
test
dec
adc
jmp
xchg
js
xor
cmp
add
fisttpll
xor
jmp
ffree
inc
hlt
cltd
cli
xchg
sbb
and
xchg
mov
adc
popa
sub
jmp
out
dec
cmp
add
mov
cs
test
test
decl
cmp
test
outsb
fbld
inc
fidivl
push
jmp
dec
sbb
cmp
dec
fistps
shrb
or
rorb
imul
jge
inc
std
mov
cmp
xor
mov
mov
lss
cmc
das
cltd
dec
mov
rcl
cmp
pcmpeqd
add
enter
into
sarl
or
call
inc
dec
mov
jb
xor
leave
add
inc
repz
cmp
jecxz
mov
xchg
out
add
shl
add
fwait
ss
xor
cmp
movsl
push
mov
insb
push
xchg
xchg
add
push
jecxz
jno
sub
lds
sbb
pop
cmp
push
push
and
int3
scas
xor
add
jbe
lods
xlat
inc
fs
pop
xor
dec
out
mov
inc
or
sbb
pushf
repnz
sbb
jge
add
adc
and
dec
xor
cld
ficomps
add
sahf
sub
pop
into
mov
jle
mov
push
mov
dec
add
xchg
fcomps
flds
out
cs
paddw
aas
cmp
and
add
fisttpl
icebp
mov
xchg
xchg
fnstenv
mov
mov
inc
sbb
pop
and
mov
stc
lret
mov
adc
jns
add
sbb
imul
jmp
ret
push
sub
cltd
xor
lds
test
lcall
adc
notl
cs
dec
dec
push
sbb
sub
insl
sti
xor
sbb
in
mov
mov
scas
loop
scas
xchg
jne
imul
add
lahf
sub
outsb
icebp
lods
pop
test
test
mov
push
sbb
xor
adc
mov
cld
jae
stos
jb
shlb
jae
aam
in
inc
push
pop
pop
pop
fstl
data16
je
pop
idivb
sbb
test
inc
jg
cmc
enter
pop
int
pop
mov
dec
jno
dec
add
push
push
jg
test
addr16
or
and
and
add
sub
mov
mov
inc
mov
je
stos
mov
movsb
shrb
xor
int
sbb
mov
movsl
lods
sbb
call
fstl
sbb
pop
push
xor
jo
pusha
and
pop
hlt
fsubrp
mov
scas
mov
mov
in
loope
or
scas
js
jb
sub
sub
pop
ja
es
push
xlat
out
or
gs
pop
jnp
out
and
push
stos
aas
dec
mov
mov
cltd
lods
movsb
leave
jb
sub
push
jg
lea
test
loopne
mov
pop
xor
lds
or
cmc
xor
and
sbb
mov
cwtl
lods
cmp
mov
popf
popa
ret
test
xchg
aam
sahf
ljmp
test
sub
push
and
call
inc
pop
adc
jns
gs
lcall
mov
popf
jp
sub
and
mov
cmp
popl
aaa
push
or
das
jne
out
movsb
mov
pop
xor
and
pop
mov
call
lahf
insb
sahf
lret
or
out
fimull
lret
pusha
push
lods
cmp
pusha
push
std
lock
mov
out
pop
sub
jp
push
xchg
mov
sbb
rol
jo
mov
adc
cmpsb
xor
sub
shll
fwait
iret
push
lahf
scas
aam
add
adc
cmc
gs
jns
lahf
shll
testl
mov
xchg
ret
sub
jns
pop
or
in
mov
rcrl
test
ss
addr16
pusha
inc
cmpb
stc
je
repnz
fcoml
jno
sbb
push
xor
outsl
dec
xchg
add
movsl
iret
add
xchg
mov
out
sbb
jecxz
mov
push
xchg
das
mov
push
out
cmpsl
sbb
in
out
push
pop
pop
outsl
mov
addr16
mov
out
mov
mov
pop
mov
xchg
mov
ret
into
or
fwait
adc
mov
arpl
adc
pop
sbb
popa
das
dec
mov
loope
out
movsl
mov
testl
sar
iret
pop
add
push
push
int
xchg
cmc
ret
insb
lods
popl
dec
dec
and
sbb
clc
leave
push
xlat
stc
sub
hlt
or
adcl
xchg
fnsave
push
ljmp
adc
ficomps
je
ror
jl
imul
dec
mull
cltd
sbb
add
adc
pop
loope
fnstcw
enter
je
stos
sub
lods
pushf
lds
sbb
push
add
scas
dec
add
dec
inc
jle
daa
pushf
jmp
cmp
and
xor
push
mov
pop
mov
dec
mov
mov
pushf
fwait
popa
push
jnp
sub
jne
adc
shl
mov
pop
jmp
out
adc
push
sbb
dec
xchg
fwait
xor
cmpsl
lcall
movsl
cmp
cmc
pop
push
lea
pop
aaa
and
aas
mov
mov
cwtl
fists
adc
jge
or
add
cmc
data16
and
dec
mov
cmp
adc
fwait
imull
jo
add
pop
rcrb
mov
insl
xchg
xchg
vpmulhw
fs
jne
push
adc
ds
lret
filds
movsl
fwait
icebp
mov
test
rcll
dec
mov
repnz
lods
sti
mov
enter
cld
dec
rcll
hlt
outsb
push
xchg
pop
push
repz
sbb
in
adc
inc
incl
fs
stc
pusha
xchg
test
testb
or
fdivrl
mov
inc
jmp
add
push
ss
inc
lret
loopne
pop
mov
pop
loopne
mov
lea
stos
cmpl
loopne
add
push
imul
sbb
jnp
mov
xlat
cmpsb
outsl
xor
sbb
mov
or
loopne
or
test
out
mov
inc
sub
inc
cwtl
xchg
mov
cmc
add
sbb
xor
mov
mov
adc
push
cli
js
test
mov
mov
xor
js
adc
inc
pop
adcb
xor
ss
jmp
fbstp
lcall
pop
xchg
jns,pt
cmpb
dec
push
movsb
loopne
dec
leave
push
data16
cmpsb
jp
hlt
cmpsb
cmp
xchg
xchg
insb
pop
lock
dec
gs
lea
sbb
movsl
aaa
repnz
arpl
push
sub
mov
shrl
insb
dec
xchg
int3
shr
pop
mov
pop
iret
cmpsb
cli
and
xlat
mov
ss
sub
xlat
pop
pop
rcr
lcall
popa
fs
push
cmpsl
inc
movb
enter
arpl
or
mov
lret
xor
push
shlb
mov
stos
out
mov
mov
icebp
jmp
loope
outsl
mov
and
push
loopne
or
push
popa
xchg
gs
pop
repnz
int3
test
ret
ljmp
xor
bound
xchg
stc
sub
xlat
and
and
pop
divb
or
sub
outsl
shr
mov
stos
int
sbb
into
dec
stos
or
cmp
movsl
insl
lea
je
mov
int
cltd
cmpsl
fldcw
stc
xchg
or
push
divl
jnp
xchg
repnz
xor
mov
call
sub
jmp
rcrl
lods
push
mov
xchg
mov
push
ret
fwait
rcl
lret
pop
xchg
ret
popa
pop
ja
out
cmp
les
lods
dec
aaa
std
enter
int3
repz
fisttpl
inc
jg
inc
push
lods
mov
in
pusha
cld
mov
xchg
clc
push
mov
cltd
mov
cmp
in
lock
mov
adc
xchg
aaa
repz
jb
adc
sub
pusha
push
fdivrs
and
dec
mov
data16
fidivrl
fistl
push
testb
outsl
pxor
mov
decl
sub
push
std
or
movsl
stc
push
mov
xor
jecxz
int
add
or
in
fxtract
mov
jmp
mov
repz
aas
cvtdq2ps
out
sbbb
jp
dec
mov
or
jb
add
jle
loope
les
pop
sub
or
and
jns
mov
scas
jmp
cli
push
mov
and
in
mov
out
cs
std
sub
add
jbe
sbb
int3
sub
out
inc
mov
enter
push
mov
movsl
into
add
xor
sbb
loop
call
aam
adc
cmpsl
mov
push
leave
sbb
adc
mov
shrb
adc
cmpsl
sbb
xchg
or
loop
adc
adc
dec
aad
cmp
mov
fdivrs
out
sbb
push
hlt
push
dec
iret
nop
out
add
xor
push
rcll
mov
incl
add
push
jle
jecxz
gs
xchg
xchg
out
xor
xlat
iret
roll
push
dec
pop
or
fildl
cmp
jg
pextrw
inc
inc
add
xor
cmp
mov
push
jne
mov
sbb
cmp
lcall
lods
and
loop
jge
push
gs
scas
mov
inc
push
push
mov
ret
mov
repz
jno
addr16
sub
je
jnp
int3
popf
mov
dec
mov
cs
lret
call
add
movsb
fisubrl
mov
and
int
movsb
jae
cmp
out
xor
mov
mov
jp
lahf
filds
and
psadbw
xor
or
mov
repz
cmc
dec
pop
jg
out
adc
and
int3
clc
jno
in
adc
in
add
cmp
into
aad
pop
insb
imul
sarb
inc
cmpl
ss
xchg
repnz
call
sub
je
adc
rclb
add
jle
out
bound
test
and
stc
sbb
sub
push
adc
pop
and
cmovne
scas
jge
mov
mov
and
into
push
psrlw
mov
mov
mov
pop
dec
inc
ljmp
or
inc
mov
in
mov
andb
sbb
pop
push
cmp
aas
iret
push
xor
jmp
mov
and
or
in
and
punpckldq
mov
pushf
dec
sbb
lahf
into
stc
sub
jmp
cmc
fisubl
inc
dec
ss
or
add
outsl
xor
leave
pop
push
sahf
lret
out
leave
sbb
mov
popa
scas
nop
fisttpll
lods
int3
xor
in
in
call
rcl
insb
es
out
test
stc
xchg
xchg
and
dec
andl
pusha
xor
arpl
mov
fs
xor
mov
in
cmc
push
ljmp
lret
dec
pop
pop
lea
and
inc
mov
push
ds
mov
lret
popf
dec
inc
dec
aad
xor
popf
push
xor
sub
mov
xchg
sub
inc
pop
adc
ret
xor
pop
movsb
mov
mov
xchg
clc
popl
js
pop
test
push
js
in
shl
push
push
data16
pop
or
pusha
push
xchg
gs
rcl
leave
jae
and
movsl
cmpsl
insb
fs
sub
outsb
cli
pushf
loop
js
lock
out
pop
stos
cmp
test
add
mov
cmp
xor
push
cmpsb
test
das
imul
cltd
mov
xchg
arpl
call
pop
call
pusha
sti
es
add
test
lea
mov
sub
dec
lcall
push
mov
lahf
jbe
icebp
ljmp
and
fists
push
sub
mov
push
pusha
loop
clc
and
inc
lret
out
sbb
push
sbb
and
movsl
out
sahf
jbe
xchg
daa
scas
push
aad
mov
mov
rcrl
mov
adc
mov
out
iret
add
test
pusha
mov
daa
push
cmp
mov
icebp
idiv
in
dec
mov
cmp
dec
iret
sti
stos
fcom
push
jne
jbe
push
aas
divb
or
stos
push
pushf
xchg
xchg
cwtl
dec
pop
or
rcll
inc
dec
imul
push
mov
pushf
mov
fdivs
fs
jno
xchg
add
xchg
jmp
xchg
xchg
jo
xchg
movsl
push
test
pop
arpl
inc
dec
or
inc
mov
out
inc
daa
cmpsl
popa
out
adc
cmpsl
add
mov
in
outsb
int3
in
pop
iret
sbb
iret
xor
cmpsb
xor
aas
pop
xchg
ret
lcall
ja
mov
stos
cmp
jg
clc
mov
mov
int
hlt
pusha
sbb
fdivrl
add
xchg
mov
mov
cmp
ret
and
das
in
push
inc
hlt
add
add
lods
adc
and
das
jle
insb
pop
mov
test
shr
data16
jge
leave
nop
or
xor
adcl
clc
mov
fbld
ffree
fdiv
daa
adc
cs
cmpsl
shll
xor
pop
sub
shl
cmp
cli
test
fs
add
jne
loop
out
xchg
mov
pop
stc
jle
arpl
inc
dec
jecxz
mov
in
outsb
cmp
in
adc
push
mov
jb
in
xchg
lods
inc
pop
enter
fdivr
lret
mov
and
leave
mov
scas
lds
sbb
pop
mov
sub
mov
cs
popa
add
lds
add
lret
and
lret
stos
insl
xchg
aad
jae
cmc
xchg
sbb
mov
xchg
push
mov
push
mov
jmp
mov
push
push
shrb
dec
xchg
cmpsl
jp
popf
je
and
xlat
loop
arpl
es
adc
bound
movsl
imul
push
and
clc
popf
lods
inc
adcl
lock
sbb
jbe
pop
lods
sbb
xor
outsl
and
dec
jmp
xor
sbb
rol
fisubrl
loopne
ficoml
ret
mov
in
neg
jbe
push
popa
add
out
notl
fstps
movsb
add
push
xchg
or
and
sti
mov
xor
in
repnz
ds
mov
shlw
xchg
jbe
out
mov
jno
repnz
sbb
in
in
sbb
jae
lea
adc
fbstp
sbb
jl
mov
je
sub
pop
roll
xchg
popf
inc
in
aaa
lods
xor
and
pop
inc
jecxz
bswap
cld
aas
repnz
pop
push
mov
mov
push
cmp
popf
jns
rcrb
and
aad
jp
and
scas
int
sub
jp
scas
push
mov
xchg
push
jbe
and
sbb
dec
aad
add
test
inc
sub
shll
and
repz
or
and
aas
cwtl
jecxz
dec
fcoml
mov
sbb
cmp
push
cli
es
call
jno
or
push
fwait
loop
xchg
pop
outsb
enter
xlat
push
subb
lods
fcoms
cmc
cmp
hlt
mov
or
es
cltd
outsl
jle
loope
outsb
mov
jns
loopne
fldcw
test
int3
add
add
stos
cld
test
and
push
fstl
mov
loop
xlat
jl
aas
pop
and
cmp
pop
cmp
stc
outsb
inc
and
push
shlb
inc
imul
pop
data16
inc
xchg
xor
pop
xor
push
div
lret
insl
pop
pushf
mov
push
insb
std
jp
xchg
sahf
call
stc
test
aas
cmp
stos
sbb
cld
mov
insb
je
pushf
inc
leave
es
inc
inc
int
lds
lock
or
loopne
sub
adc
xchg
iret
push
in
and
add
sub
ljmp
lret
xchg
fwait
and
nop
sbb
ret
mov
popf
clc
cmpl
xchg
out
ret
mov
adc
inc
push
iret
inc
jg
jle
je
add
insl
pop
adc
jbe
xor
or
sbb
cmp
clts
cmpb
mov
repnz
push
fnsetpm(287
inc
xor
push
mov
xor
inc
jns
xchg
fdivr
jno
push
adc
inc
or
pop
cmp
mov
sbb
outsl
pop
xchg
fisubs
out
hlt
outsb
push
mov
xchg
cmp
cmp
loope
push
insb
fildl
iret
addl
in
push
sbb
mov
dec
pop
sbb
mov
cwtl
cs
js
enter
das
xchg
sub
pushl
xor
pop
pop
push
sub
inc
sbb
inc
shlb
push
adc
movb
fs
mov
out
dec
les
mov
adc
jl
jb
and
or
xchg
cmp
xchg
out
fwait
fwait
inc
repnz
mov
push
jecxz
movsl
mov
or
ss
push
inc
add
repz
jp
in
in
inc
cmp
loopne
dec
ja
jl
jo
sbbb
pop
sub
add
xchg
in
adc
sub
or
lock
andb
out
push
ds
sub
pusha
xor
jp
or
stos
xchg
xchg
jle
sbb
ljmp
adc
call
lock
popf
ret
test
cmp
sbb
mov
push
mov
jecxz
adc
cmpsb
xor
loop
sub
nop
fwait
mov
out
sbb
inc
cmp
push
roll
in
insl
xchg
cltd
xchg
pop
add
sti
cmp
lahf
leave
jne
dec
cmc
mov
or
test
int
sti
dec
cld
lret
cld
mov
pop
mov
les
bsf
and
cmp
cmp
mov
arpl
lods
or
je
push
jb
out
lahf
insl
jns
shlb
bound
pop
xor
cmp
lret
push
subl
mov
push
xchg
pop
std
add
pop
dec
jp
rcl
lock
xor
sub
out
jno
f2xm1
adc
jmp
lcall
dec
adc
fldt
out
mov
jle
xor
loopne
jmp
stos
mov
gs
jne
out
mov
push
cmp
mov
jo
sbb
dec
dec
jp
push
and
dec
adc
test
fmull
loopne
je
insl
and
bound
cmp
idiv
in
cmp
movsb
xchg
or
mov
pop
mov
pusha
test
fnstsw
inc
jbe
aam
cmc
or
push
fwait
jg
jns
pop
cld
scas
popa
imul
sti
cltd
jp
xchg
clc
imul
sub
dec
enter
mov
sti
mov
xchg
mov
rolb
aas
int
lahf
jg
mov
arpl
aas
and
mov
xor
sub
test
xchg
cs
cli
add
mov
nop
adc
jne
mov
push
cmp
or
and
sub
gs
popa
push
in
lea
push
and
pop
fisubl
out
dec
cmp
xchg
mov
xor
scas
cmp
push
movl
cmp
int3
cmp
out
test
add
jg
mov
adc
sbb
push
or
jp
outsl
lret
dec
movsb
ljmp
and
nop
and
aas
leave
xchg
xor
mov
jmp
inc
mov
pop
pop
pop
dec
mov
mov
adc
dec
pushf
mulb
dec
ljmp
aas
mov
sbbb
or
cmp
and
dec
scas
jno
mov
inc
push
pop
and
bound
add
push
test
xor
pop
repz
lock
mov
and
rcr
xchg
into
push
or
loopne
inc
decl
fwait
mov
shrb
popa
js
dec
lahf
adc
mov
stos
cwtl
push
jmp
jmp
out
jnp
lret
data16
xchg
into
add
ja
loope
push
scas
jns
push
out
adc
jb
ret
inc
outsb
insl
insb
push
xor
and
cmp
mov
inc
cs
cld
lahf
dec
mov
das
mov
ljmp
add
sub
jecxz
mov
stos
jecxz
xchg
shll
shrl
and
outsb
xor
sbb
mov
mov
mov
cmc
mov
test
imul
cmp
jno
dec
push
aam
dec
in
iret
outsl
lret
das
fs
push
call
roll
push
cmpsl
std
mov
adc
sbb
pop
fnstenv
das
dec
sub
xor
jns
repnz
clc
call
pop
iret
sbb
stos
mov
jle
inc
mov
daa
test
xor
add
sbb
cmp
mov
mov
cltd
sub
sbb
addl
sar
js
shrl
add
and
mov
push
push
aad
inc
mov
aas
inc
mov
addl
test
loopne
out
cmp
xchg
popa
adc
pop
mov
movsb
adc
movsb
imul
cmp
insl
mov
sbb
mov
mov
loop
lods
mov
dec
mov
cld
pop
sub
cmp
dec
mov
aam
and
sub
inc
mov
call
jmp
cmp
jmp
std
dec
in
jge
cmpsl
adc
std
cmp
popa
jns
sub
lret
mov
sbb
mov
xchg
insl
jae
scas
lods
sbb
std
leave
icebp
dec
adc
fwait
sti
insl
dec
lods
ret
push
lea
std
ret
dec
out
xchg
mov
call
outsb
add
test
pop
push
cmc
out
icebp
cmpsb
sbb
mov
xlat
push
xchg
sub
or
dec
cmc
cmp
add
adcb
inc
out
jne
test
test
js
mov
insl
movsl
inc
aaa
lock
mov
xor
data16
mov
cmc
aas
inc
and
ss
outsl
xor
ljmp
push
jle
push
iret
test
enter
dec
repnz
inc
shrb
push
out
sub
loope
pop
hlt
dec
iret
popf
loop
sbb
loope
bnd
arpl
aaa
pop
mov
add
inc
fildll
xor
cmpl
insb
imul
xchg
mov
dec
and
dec
xor
sbb
xor
add
fmulp
fidivs
push
jg
sbb
leave
cmp
data16
fiadds
pop
imul
bound
aam
data16
dec
cmp
sbb
out
push
out
mov
aad
stos
xchg
cwtl
push
das
iret
xor
mov
outsl
out
test
outsl
stc
inc
add
aad
in
jp
jo
xor
paddb
js
cmc
xchg
inc
stos
lods
sub
or
inc
mov
push
divl
lds
test
dec
je
insl
fidivrl
push
add
jecxz
mov
arpl
xor
pop
nopl
das
jbe
leave
roll
push
mov
mov
push
sbb
std
movsb
sub
outsb
lahf
sti
loop
sub
or
adc
arpl
popl
mov
pop
inc
repnz
fldcw
xchg
sbb
cmpsb
negl
adc
sub
push
cmp
add
ret
pop
sbb
mov
or
sbbl
jg
sbb
jns
jns
and
pop
sub
dec
xchg
jae
leave
push
inc
sub
fcoml
jge
ds
nop
enter
xchg
push
test
xlat
pop
fnstsw
pop
lret
adcb
cld
test
pushf
lahf
scas
out
adc
addl
fsubrl
jecxz
cs
sbb
cmc
inc
push
sub
push
push
inc
into
loopne
rcrl
adc
pop
stos
inc
movsl
xchg
icebp
or
fmuls
inc
lcall
outsl
pushf
dec
aaa
xchg
cmp
lret
jmp
inc
adc
inc
dec
jns
nop
adc
and
iret
adc
pop
cmp
fwait
insl
add
test
mov
sub
adc
xlat
lret
bound
or
lahf
je
add
cmp
inc
test
aas
mov
divb
ret
xchg
test
shll
sbb
int
sub
jecxz
adc
xchg
aas
mov
psrlw
int
mov
add
es
dec
leave
test
mov
pusha
mov
dec
mov
jnp
js
xor
fldl2t
aad
in
push
xchg
cmpsb
adc
pop
cmp
push
adc
push
jg
cmp
mov
mov
cmp
xor
jecxz
adc
pop
cmpl
movsl
cld
sub
push
jmp
insb
jns
and
mov
push
xchg
roll
sub
outsl
push
push
loop
jne
out
popw
xchg
cmp
sti
daa
testb
push
clc
mov
ljmp
mov
subl
mov
xchg
and
inc
xchg
mov
cwtl
fcmove
lret
jmp
pop
xchg
aad
imul
scas
pop
mov
sub
leave
rorl
adc
fisttpll
sub
push
inc
sub
jne
dec
push
cmp
inc
cli
jg
mov
jae
ret
les
sti
mov
clc
cmp
cmp
cmp
mov
sbb
cmc
mulb
jb
jg
shrl
push
cmp
out
ss
hlt
repnz
nop
int
icebp
gs
outsb
movsb
push
cmp
call
decl
pop
mov
rclb
loopne
add
push
push
add
mov
pop
xor
loope
ss
adc
lods
sbb
lock
popa
xchg
jo
dec
roll
jbe
pop
add
push
mov
jbe
int
pusha
popa
fsubrp
rorb
add
test
test
ja
cmp
setae
roll
adc
mov
xchg
sti
add
fcmovb
gs
jecxz
inc
pop
pushf
lcall
icebp
jp
outsb
jl
or
movsb
sub
out
out
dec
outsl
iret
dec
repz
dec
or
pop
push
cs
stos
dec
dec
add
insl
jns
repz
aaa
add
ret
insl
lods
sar
rorb
mov
outsb
imul
clc
scas
dec
mov
out
jmp
enter
xchg
fwait
popa
push
andl
shll
fbstp
es
jecxz
and
mov
ss
int
add
jo
rcr
sahf
sbb
pop
aaa
mov
ret
sahf
dec
xor
hlt
popa
out
jb
addr16
mov
push
push
sub
fwait
mov
push
loopne
sub
roll
stos
push
xor
into
adc
inc
xchg
je
fs
xchg
xor
iret
push
in
or
cmpsb
mov
gs
scas
xor
fsubs
iret
cmp
or
ret
pop
inc
jb
gs
loope
cs
std
into
stos
and
aad
sbb
pop
das
fsubl
jmp
testl
push
push
xor
lock
dec
or
in
inc
push
xchg
mov
xor
pop
xor
icebp
mov
jge
ljmp
ret
add
dec
sbb
ret
pop
neg
cmpsl
fimull
push
iret
in
cmp
or
fwait
scas
cltd
jmp
aad
mov
pusha
imul
fcomip
out
imul
xchg
or
arpl
and
push
push
jge
in
out
xor
nop
xlat
jbe
inc
jbe
out
cwtl
pop
mov
nop
stc
jbe
xchg
sub
push
out
push
add
and
in
subb
cmp
in
shrl
scas
js
cltd
pop
pop
push
and
add
mov
cmpl
jnp
shr
je
lods
fcompl
and
jo
jle
fisttpl
shll
push
shlb
out
jl,pn
jge
jp
mov
or
bound
dec
cmp
std
in
sbb
push
decl
ret
or
inc
fistpl
insl
ja
xor
shl
push
call
push
insb
cltd
imul
cli
xchg
sbb
pop
mov
pushl
push
dec
push
pop
mov
push
mov
out
aam
xor
cmp
sahf
lcall
pop
xchg
out
adc
mov
mov
adc
int3
mov
pop
push
and
jecxz
mov
std
mov
add
push
out
xor
lret
xor
cld
andb
test
clc
or
inc
xchg
fsubr
xchg
scas
xor
jae
cmpsl
dec
jno
pusha
sub
jno
imul
ja
cmpsb
dec
push
das
mov
js
adc
lahf
ret
xchg
pop
inc
and
cmp
xor
mov
pop
inc
pop
pop
aad
in
sub
push
pop
dec
push
mov
sub
add
xchg
std
inc
imul
rclb
pusha
aaa
jo
cmp
jae
in
sbb
js
movsb
and
jmp
cmc
xchg
mov
out
sub
and
mov
imul
sub
mov
push
cmp
add
inc
sbb
mov
xor
add
or
ss
stos
cmp
lahf
shr
dec
movsl
outsl
mov
pmullw
jb
pop
mov
mov
jnp
in
cmc
mov
inc
aad
inc
adc
out
outsb
push
cmp
int
aaa
cltd
and
adc
xor
pusha
aas
call
dec
pushf
pop
mov
push
loopne
jae
jb
add
lret
push
out
sub
or
imul
lret
fcmovu
sbb
jmp
outsb
iret
ficomps
sahf
inc
or
or
add
cmp
mov
inc
mov
mov
add
cmp
out
cld
orl
addr16
aas
dec
cmc
fxch
cli
lock
xchg
jb
mov
repnz
fidivs
icebp
test
decb
insl
repz
cltd
popa
lods
jle
mov
dec
push
std
lcall
xchg
cld
or
xchg
cmpsb
jmp
lds
push
mov
inc
out
cld
dec
out
push
outsb
mov
cwtl
adc
lcall
aad
and
sbb
pop
cmovnp
push
pop
call
cmp
ret
mov
fldenv
out
mov
repz
pop
jecxz
popf
and
push
sbb
adc
mov
xor
mov
inc
js
inc
cmp
jle
mov
stc
jo
xchg
mov
pop
xor
xchg
cmc
shl
pop
pop
xor
adc
or
loop
mov
sbb
arpl
cmp
bound
jp
js
fs
dec
sbb
sub
fcmovne
lcall
outsb
out
fstpt
sbb
push
sbb
inc
push
test
jg
jae
lahf
sahf
cmc
jne
mov
movsb
frstor
ret
lret
fxch
outsl
gs
pop
xchg
add
gs
fs
insl
mov
ds
popa
pop
mov
sbb
loop
cmp
int3
outsl
mov
mov
lods
xor
push
or
xor
xor
or
xor
clc
add
inc
push
repz
hlt
fistpll
sub
lock
call
mov
xchg
stc
fucomp
stc
pusha
mov
xchg
or
xor
mov
pop
sbbb
out
outsb
sbb
xchg
push
lret
pop
in
adcb
insb
bound
out
adc
pop
ret
mul
call
mov
mov
xchg
in
inc
orps
icebp
mov
sub
ret
mov
sbb
sbb
outsb
sbb
repnz
ds
loope
je
sbb
xchg
adc
xor
sbb
fwait
mov
push
nop
mov
das
inc
lods
ret
imul
sbb
into
xchg
jnp
lret
xchg
popf
cmp
cli
mov
gs
xor
arpl
cltd
mov
xlat
addb
popa
pop
inc
aaa
push
cwtl
stc
sub
jne
sti
pop
cwtl
inc
xchg
and
jb
sbb
jp
pop
or
mov
xor
xchg
dec
xchg
imul
pop
lcall
pop
xor
inc
pop
clc
fistpll
lods
cmp
cmpsl
mulb
scas
pusha
push
fisttpll
fcmovb
cltd
lock
lock
push
mov
ja
or
outsl
push
aas
mov
mov
out
stos
std
das
xchg
dec
cltd
and
jg
push
movsb
ja
int3
icebp
sbb
push
jmp
xor
addr16
cmpsb
pop
dec
cmpsl
hlt
jecxz
in
sbbb
leave
cmp
cmp
in
outsl
dec
mov
xchg
mov
pop
aam
sarb
cmpsl
mov
push
into
std
jge
jle
xchg
and
nop
lds
mov
mulps
loopne
sbb
pop
ss
or
test
mov
or
adc
xor
inc
cmp
xchg
orb
or
ds
loope
fcmovnu
test
pop
jo
add
loope
xchg
push
aaa
hlt
pop
xchg
out
pushf
push
inc
inc
cmp
cmp
mov
xchg
sar
dec
and
push
mov
stc
and
cmp
jae
xlat
xchg
sub
inc
and
xor
out
fmull
stos
rorb
mov
sub
add
jle
loop
jb
popf
stos
cmp
dec
fbstp
inc
dec
xor
push
rorb
mov
jmp
and
cmp
jmp
stc
dec
fcompl
mov
arpl
imul
xchg
pop
ja
repz
lcall
gs
push
cmpsb
stc
jl
decl
loop
push
xchg
mov
mov
fs
stc
cltd
mov
inc
js
sbb
adcb
stos
cmp
outsb
lds
adc
adc
add
inc
xchg
shll
js
iret
add
leave
sbb
push
and
push
lods
loop
or
mov
push
ljmp
dec
add
ljmp
les
jmp
js
outsb
jl
dec
je
jno
ljmp
hlt
lods
dec
and
cmp
jg
push
rcll
push
push
sub
xchg
and
cmp
iret
jg
or
mov
jmp
xchg
out
pushf
andb
out
fadds
jg
lret
and
sbb
out
in
mov
andb
pop
sbb
push
and
dec
int3
or
notl
shr
sahf
int3
outsl
inc
add
lods
push
add
sti
jnp
outsb
jno
fsubp
xchg
shrb
jmp
xorl
or
into
xchg
out
sub
pusha
jno
mov
dec
pop
mov
scas
inc
loopne
repnz
outsb
push
daa
and
iret
fisttps
jmp
in
mov
icebp
loope
sbb
call
cmp
movsl
fimull
adc
fcomip
loopne
xchg
xor
stos
rcrb
mov
dec
sub
push
in
movsl
xchg
cmp
bound
stos
cmp
jne
test
xchg
mov
cmp
xchg
xchg
jbe
xchg
addr16
jg
xor
imul
int3
cmp
jg
jecxz
int3
xchg
insb
cmp
mov
mov
ds
mov
sbb
or
xchg
cmp
xor
push
and
in
inc
jl
orb
sahf
lret
adc
icebp
test
mov
test
scas
adc
std
out
out
arpl
sbb
fs
jmp
cmp
icebp
xor
icebp
mov
xor
ficoml
aam
and
adcb
test
stos
add
lods
cs
pop
outsl
ret
roll
addr16
mov
jl
jae
repnz
test
pop
add
pop
adc
cli
cmc
dec
jp
ret
xor
hlt
adc
push
jge
xchg
dec
addb
add
and
inc
sub
out
sbb
jno
ss
test
sub
sbb
add
jmp
sbb
shl
mov
fxtract
sub
push
push
add
push
or
mov
xlat
fnstenv
cmp
daa
push
movsl
xlat
jl
pop
push
std
aas
fldcw
int3
sub
faddl
cltd
jne
scas
and
test
rep
mov
cs
jbe
test
sbb
inc
popf
mov
inc
das
addb
or
xor
push
and
leave
dec
mov
pop
and
repz
jno
jo
cmp
push
push
push
insl
movsl
imul
sar
cs
or
adc
iret
ds
cli
sub
lret
add
ljmp
das
std
int
mov
inc
ret
xor
xchg
xchg
push
fs
mov
test
dec
iret
xchg
add
push
pop
stc
jne
sub
in
pop
xor
rcrl
sub
test
pop
push
pop
rclb
adc
icebp
jmp
jne
in
mov
dec
pop
sbb
out
and
dec
jno
push
dec
mov
shll
in
xchg
shll
cmpl
sub
cld
loop
or
mov
add
dec
xchg
in
ja
loope
add
sbb
mov
sahf
mov
int3
add
pop
loopne
inc
nop
mov
imul
xchg
mov
mov
adc
pop
adc
pop
rcrb
xlat
push
int
jnp
dec
outsl
push
cs
push
mov
sbb
imul
pusha
out
push
shrl
dec
xchg
out
push
jne
je
scas
ljmp
add
inc
push
test
add
test
sahf
jnp
sub
cmpb
mov
imul
cli
hlt
dec
addr16
xor
cmp
xorl
xor
jecxz
int3
sbbb
das
dec
cmp
in
cwtl
das
lret
pushf
cwtl
std
cmp
js
sti
dec
sub
or
push
lret
mov
sahf
inc
inc
jmp
or
xchg
adc
xchg
outsl
mov
jb
adc
push
cmp
xor
into
pop
loop
adc
cltd
je
les
mov
fisubrl
lahf
push
sbb
gs
sbb
stos
negb
mov
lds
int3
into
push
cs
push
das
icebp
jne
mov
push
and
popa
idiv
mov
jl
xchg
lods
jp
gs
adc
aam
cs
pop
jmp
idivb
xchg
mov
xlat
mov
mul
enter
mov
xchg
mov
cli
imul
ss
pop
mov
fs
sub
xchg
cmpsl
add
push
iret
mov
cmp
xchg
sub
xchg
xchg
in
mov
push
xor
fsubl
push
xorb
cmp
pop
out
ret
xor
movsb
pop
dec
push
jo
ret
mov
out
inc
sbb
jbe
in
dec
loop
sub
je
xchg
bound
mov
lea
imul
adc
shrl
in
filds
or
pop
inc
mov
push
popa
out
nop
shrb
out
stos
lds
inc
cli
sub
ret
lea
lods
jbe
iret
lock
and
push
adc
xlat
shl
push
dec
cltd
popf
hlt
pop
lods
test
cltd
int3
xchg
pop
in
sub
hlt
push
mov
in
xchg
and
outsb
repz
ds
test
push
adc
xchg
add
mov
pop
mov
ret
xchg
sub
popf
jl
mov
pusha
orb
and
shlb
pop
addr16
inc
add
fstl
pop
ret
enter
test
popa
mov
pop
inc
mov
das
fs
xlat
mov
mov
je
insb
jbe
out
mov
or
xor
not
push
aad
dec
in
mov
nop
xchg
cmp
push
mov
int
dec
xor
sbb
out
dec
fbstp
pop
push
adcb
lods
adc
xchg
fnstenv
inc
movsl
incl
ffree
sub
dec
xchg
je
jne
cmc
xor
xor
mov
xor
cli
sub
mov
in
movsb
addr16
je
outsb
sbb
jb
adc
insb
xor
pop
mov
mov
nop
xchg
fwait
decb
sub
sub
aaa
imul
loope
mov
outsb
scas
inc
pusha
pop
cld
push
jecxz
fsincos
xchg
or
into
xchg
dec
xor
sub
xorb
push
jno
push
cmp
cs
ss
pop
mov
mov
sbb
scas
and
add
repz
mov
int3
jns
outsb
pop
rcr
push
or
sbb
inc
pop
clc
and
cmc
pop
push
mov
cmpps
imul
xchg
insb
ds
cwtl
sub
iret
cmpsl
sbb
mov
rsm
cmpsl
or
sar
clc
mulb
jge
fistpl
xchg
cmc
mov
or
icebp
or
stos
cmc
pop
inc
fsubl
loope
es
out
or
and
jg
movsb
cmp
dec
dec
mov
mov
cmp
enter
out
and
idivb
mov
frstor
mov
jo
mov
mov
pop
cwtl
shrl
push
inc
out
sub
add
sbb
add
push
pusha
pop
xlat
push
jno
aad
mov
push
pusha
stos
scas
sbb
mov
mov
inc
xchg
sub
mov
add
jecxz
cmc
mov
push
ds
lea
jp
sarl
mov
nop
push
jle
push
dec
test
xchg
scas
enter
lds
mov
push
orb
and
lods
sub
push
test
cwtl
repnz
cwtl
lods
enter
and
xchg
sub
pop
dec
imul
mov
in
dec
shr
lret
cmc
jmp
mov
pop
add
xor
insb
xlat
int
mov
cmc
stos
test
cmc
mov
fmuls
mov
push
test
pop
xor
in
dec
mov
cmpsb
insl
pushf
xchg
negl
nop
test
push
pop
scas
fistl
ficompl
gs
insl
movsl
fwait
sti
sub
mov
sub
cld
test
sbbb
mov
push
cmp
mov
enter
dec
scas
fisubs
jp
jp
mov
jne
and
mov
sub
popa
pop
sbb
xlat
std
push
ss
cmpsl
mov
dec
shrb
mov
adc
add
add
out
push
add
iret
and
cmpsl
stos
jge
rcll
pop
jne
mov
fnsave
dec
lods
jns
daa
fwait
inc
mov
jmp
movups
inc
icebp
int
xchg
jle
cmp
pop
sub
inc
cmp
mov
sub
cmp
pop
push
orb
or
cmp
pop
dec
dec
push
cmp
xor
aad
scas
or
int3
loope
inc
mov
mov
xor
mov
mov
cwtl
jecxz
mov
ss
stc
add
popa
dec
in
or
aam
mov
mov
or
xchg
dec
xorb
test
dec
adc
jne
pop
inc
mov
pop
aaa
xchg
rcr
dec
xchg
pusha
imul
add
pop
jae
push
mov
mov
insl
cmp
push
arpl
jnp
shr
loopne
clc
push
cmp
xor
or
lahf
hlt
push
mov
outsl
mov
xchg
pop
cmpsb
out
sbb
add
sbb
mov
andl
jb
cmp
or
pop
lret
shrb
jecxz
das
fwait
addl
push
pusha
and
lds
es
sbb
mov
add
or
stos
adc
outsl
jge
mov
push
jl
fdivr
rcl
es
and
inc
dec
imul
mov
aad
mov
or
cmp
int
popa
test
mov
int
aas
pusha
push
jge
inc
ds
push
lahf
xor
out
fdivl
push
lock
iret
cmp
pop
or
add
mov
xor
adc
xor
test
sub
ss
sub
cltd
mov
dec
movsb
jns
jae
imul
mov
pop
in
fimull
dec
sbb
lea
stos
mov
dec
push
inc
pop
xor
stos
and
hlt
mov
and
outsb
clc
cmp
roll
jle
jne
pop
dec
in
push
popa
loope
repz
call
nop
jne
lret
daa
sbb
mov
or
xor
fwait
out
jle
mov
mov
cs
cmc
aas
xor
mov
sti
sbb
inc
push
add
scas
adc
jne
jge
adc
outsb
xchg
pop
sahf
adc
or
mov
cmp
sbb
sub
push
lea
xor
es
mov
scas
xchg
jmp
hlt
jno
ja
jns
or
xchg
ja
xlat
fs
mov
push
test
inc
adc
cmp
cs
enter
pop
adc
sub
popf
sub
pop
mov
cmp
push
push
popa
cmp
inc
fsqrt
pop
jne
in
in
std
movsl
adc
jne
nop
aas
insb
cmpsb
int
int3
je
jns
sub
push
xchg
mov
lahf
pop
mov
jbe
push
inc
orl
dec
imul
cmc
xchg
movsl
pop
push
je
mov
jl
or
mov
jecxz
fs
mov
mov
xlat
notb
jge
sub
shrb
sub
scas
adc
in
or
inc
sbb
jg
jno
inc
pop
push
xor
int
pop
sub
and
and
xor
sbb
test
sarl
fwait
in
test
mov
mov
jge
arpl
call
inc
cwtl
inc
dec
loopne
xor
es
dec
sbb
into
sbb
scas
into
dec
lods
je
hlt
std
mov
sbb
inc
hlt
xchg
out
lcall
and
gs
xchg
and
shl
popa
adcl
cmp
inc
insl
jne
mov
add
hlt
mov
std
cs
in
iret
mov
jmp
sub
xor
push
js
dec
lds
and
imul
lock
imull
adcb
out
call
mov
mov
and
in
push
adc
loope
jbe
in
daa
mov
sbb
rcrl
push
xor
js
imul
xchg
cli
cmp
fstl
ljmp
fucomip
dec
in
inc
lret
dec
cmc
push
adc
sbb
jnp
stos
and
shll
lods
mov
jecxz,pt
add
out
push
sub
sub
fsubr
ret
jmp
popa
rorb
js
lret
or
sbb
pusha
jo
js
sbb
add
add
push
xor
sub
push
push
fbstp
ss
fcomps
sub
jno
in
loop
cld
pushl
ds
je
mov
ss
sbb
push
dec
cmpsb
loopne
pushf
mov
mov
in
lahf
push
mov
cmc
inc
inc
in
aas
mov
xchg
push
pop
out
aaa
cmp
push
mov
or
pusha
xchg
mov
mov
mov
jle
pushf
mov
cltd
hlt
sub
push
mov
ja
dec
cli
inc
jb
xchg
into
mov
cltd
aas
xor
gs
fadd
jns
fsqrt
loopne
jae
inc
mov
call
sub
mov
setne
lods
sub
int3
dec
xor
aas
ja
lds
cmc
ljmp
cmc
orb
or
pushf
repnz
jae
lret
inc
inc
mov
js
ss
mov
fcomps
inc
mov
sub
lods
adcl
cld
adc
addl
jbe
adc
ja
pop
scas
icebp
xor
add
mov
adc
scas
jae
mov
xlat
push
push
outsl
mov
xchg
test
sbb
mov
rcr
mov
inc
sub
pop
pop
add
xor
xlat
mov
lds
ss
imul
or
fnstsw
imul
cmp
adc
inc
sti
ror
mov
mov
test
mull
add
outsl
negb
out
inc
xor
or
in
pop
jne
out
lds
out
call
add
push
or
xor
lock
push
add
pop
xorl
push
outsl
cmp
lds
mov
cmpsb
inc
aad
adc
sar
loop
push
sbb
push
adc
and
cmp
cwtl
ljmp
lock
inc
jg
cmpl
and
pop
mov
mov
dec
xchg
cmp
inc
adc
fsts
pop
lret
mov
sbb
push
and
mov
or
repz
jno
aam
sbb
dec
imul
sbb
lcall
mov
iret
int
ljmp
adc
jmp
test
mov
in
rcrb
sub
push
pop
vmread
pusha
daa
int
dec
rcll
enter
jns
in
pusha
sbb
rclb
cmp
inc
jge
mov
xchg
pushf
sub
aam
push
dec
jl
xchg
xchg
add
popa
cmp
push
testl
push
and
adc
cmc
out
cmp
jmp
std
sbb
push
test
cmp
ja
add
pop
out
xor
pop
aaa
daa
mov
popa
ljmp
hlt
mov
pop
mov
ja
sbb
fmull
pop
and
mov
dec
sbb
push
movsb
lcall
in
xchg
out
cld
in
cmp
jmp
insl
add
jecxz
jp
lds
pop
sub
repz
mov
repz
mov
lahf
ret
sbb
xchg
and
adcl
cmpsl
fimuls
push
pop
pop
fsubs
cld
js
iret
cmp
mov
hlt
dec
sbb
and
imulb
pop
add
mov
lods
rcrl
push
mov
stos
icebp
push
jns
sbb
add
jno
es
and
or
jmp
push
jno
jl
or
add
in
shll
fdiv
pusha
hlt
cmp
lods
lahf
cmp
add
mov
rcll
imul
fidivl
pop
sub
iret
jl
ret
andl
mov
or
mov
out
push
lcall
ljmp
fst
loope
insl
mov
lods
and
pop
loop
test
adc
rcll
add
scas
mov
mov
adc
pop
add
idivb
scas
jecxz
push
jnp
or
outsl
jnp
add
cli
lods
adc
js
movsl
or
push
ret
mov
fimull
in
in
das
xor
imul
sbb
loope
fstpt
add
iret
lahf
loop
in
test
stos
leave
lcall
jle
mov
rorb
icebp
push
mov
xor
push
out
inc
dec
fcomip
ds
xor
xchg
xchg
inc
mov
push
mov
sbb
outsl
and
mov
push
cld
mov
mov
and
jp
mov
loopne
loopne
and
mov
mov
mov
sarl
ljmp
push
movsb
xchg
repnz
jecxz
mov
push
cmp
mov
fadds
jmp
sahf
dec
lea
jo
insl
jecxz
movsb
xchg
add
jmp
sbb
dec
stos
pop
std
lods
or
out
or
and
pushf
lds
sbb
imul
add
mov
push
pop
cmp
jle
movsl
inc
ret
push
mov
in
sarb
mov
cmp
mov
adc
mov
popa
stc
sbb
movsl
jno
aaa
outsl
es
jmp
test
mov
cwtl
add
mov
insl
xor
aam
int3
sahf
lret
arpl
xor
jnp
cli
js
xchg
test
mov
xchg
or
pop
ret
lcall
add
mov
mov
lock
xchg
imul
add
mov
insb
je
xchg
in
popf
pop
push
adc
and
and
movb
std
call
daa
pop
stc
mov
arpl
outsl
push
inc
jle
pop
cmpsl
sub
je
fdivrp
outsb
shr
std
mov
jmp
push
pop
or
dec
mov
mov
inc
rorl
sub
ljmp
imul
pop
xlat
nop
adc
xor
xor
push
mov
push
es
and
xchg
jns
rcrl
adc
mov
sub
js
mov
movsb
jne
xchg
adc
cmp
inc
mov
xor
in
inc
add
push
cmpsl
call
dec
dec
mov
push
cmp
roll
stos
jge
adc
pop
hlt
jle
ss
andl
cmpsl
bound
daa
repnz
push
or
loope
ret
sbb
lahf
popf
inc
test
inc
scas
add
mov
sub
push
stc
movsb
fwait
mov
xor
jmp
rcrl
movsb
fdivs
pusha
rclb
or
sahf
xor
cmp
ja
push
ljmp
dec
lods
push
es
fwait
push
popa
add
or
sbb
or
xchg
mov
aad
lcall
cltd
repz
cmpl
dec
xchg
nop
cmp
xor
jnp
jle
adc
sbb
outsl
pop
pop
and
into
xchg
inc
fdivl
push
andl
mov
scas
incl
nop
mov
stos
in
imul
or
incl
add
or
in
clc
fldcw
mov
inc
jg
in
clc
add
fldl
leave
movl
mov
movsb
jl
cmp
mov
aaa
insl
inc
in
js
clc
and
push
mov
lcall
hlt
push
mov
jmp
scas
mov
sub
mov
inc
fnstcw
or
dec
mov
adc
jno
mov
mov
std
sbb
mov
aad
fsubp
fucom
movl
lods
mov
xchg
js
test
cs
jo
or
mov
test
pop
mov
adc
inc
les
pop
fwait
inc
fs
adc
adc
dec
shlb
mov
mov
sub
lock
cltd
sbb
je
push
jmp
insl
aad
add
ljmp
inc
not
addr16
sub
adc
ret
cmp
xor
mov
dec
pop
and
pop
imul
jae
fisubs
pusha
xchg
clc
popf
pop
scas
enter
icebp
mov
pop
dec
daa
or
mov
rcr
cmp
popf
outsl
test
mov
inc
xor
adc
push
push
mov
mov
test
rorb
jmp
stos
sbb
or
push
bnd
push
out
lcall
ljmp
lods
jo
out
inc
ljmp
notl
cmp
or
arpl
pop
movsb
dec
insl
push
lcall
movsl
dec
jo
scas
push
adc
iret
adc
jmp
jo
lea
jnp
adc
pop
lret
leave
jb
pop
outsl
mov
xor
xor
push
adc
add
les
xor
sbb
jns
out
push
or
cld
add
clc
scas
push
mov
cmp
cmpsl
and
in
pusha
or
sbb
mov
push
arpl
dec
fwait
into
lahf
mov
cld
mov
inc
xor
std
dec
decb
mov
or
and
cmpsl
pusha
js
shl
lods
jno
out
xchg
scas
or
dec
mov
jg
xchg
leave
add
mov
in
mov
pushf
mov
fisubs
nop
lret
incb
mov
orl
jae
sbb
pop
jmp
int
dec
shl
movsl
repz
adc
mov
test
orb
js
xchg
test
jae
mov
enter
scas
lcall
ljmp
aad
rol
sbb
jae
push
leave
pop
rcrl
int
and
xor
icebp
mov
adc
fstl
movups
das
dec
loopne
jns
jg
sbb
mov
jne
xchg
mov
mov
mov
test
test
sbb
xchg
push
sar
dec
fwait
adc
adc
arpl
cmp
jno
jge
mov
or
xchg
iret
icebp
xchg
xor
enter
jecxz
xchg
mov
enter
or
int
arpl
adc
xor
sahf
hlt
insb
cmp
sub
ret
icebp
push
test
push
cmp
dec
cltd
mov
sbb
lods
cmc
out
pop
inc
call
ja
popf
mov
dec
mov
fcompl
fisubrs
sbb
jbe
shlb
dec
add
mov
shll
imulb
fldcw
sti
repnz
loopne
addr16
and
mov
fs
repnz
sub
and
cmp
fwait
movsl
dec
ret
clc
dec
lahf
push
xchg
and
add
cmpl
pushf
jnp
in
or
jno
aas
or
popa
rcrb
push
push
outsb
cmp
mov
sub
enter
jbe
xor
adc
inc
mov
xor
jns
add
fidivrl
pusha
sbb
push
sub
mov
scas
or
inc
cmpsb
fwait
and
add
gs
dec
pop
cld
or
inc
jecxz
testl
pop
xor
lret
mov
pop
jle
sbb
jp
inc
pmulhw
xchg
movsl
out
ja
cmp
cltd
fcoms
cld
and
jbe
jle
outsb
clc
lods
call
rcrl
rcl
std
inc
mov
push
stc
mov
test
gs
je
hlt
or
mov
mull
xchg
mov
test
fs
dec
jbe
cmc
cmpsl
subb
xor
or
in
neg
mov
sbb
cwtl
add
enter
ds
cmp
dec
repnz
daa
mov
je
push
xor
pop
lea
mov
loopne
xchg
lret
in
bound
and
fwait
adc
cmc
rorl
arpl
arpl
sub
testb
sub
mov
inc
jecxz
xor
jmp
lock
jl
sti
mov
pop
jl
sub
sub
dec
into
test
dec
and
and
and
scas
mov
cmp
mov
dec
jns
jmp
les
add
sub
push
push
mov
jbe
ljmp
add
cmc
cmpsl
out
pop
mov
adc
test
add
adc
push
cmpb
adc
call
dec
addr16
sub
sub
int
xchg
xchg
jp
aaa
adcb
js
gs
mov
add
sbb
sub
mull
inc
xchg
rclb
mov
das
cwtl
xchg
popa
push
mov
mov
push
mov
cwtl
scas
icebp
and
scas
jnp
sub
mov
add
and
testl
bound
jp
imul
shl
push
push
clc
bound
pop
xchg
lea
shlb
xchg
adc
mov
push
xchg
and
jmp
ficomps
jg
or
lods
push
dec
mov
xor
dec
lods
pop
adc
cmp
dec
rcr
push
aad
dec
ss
push
nop
fwait
repnz
cmp
push
jnp
shrb
pop
xchg
lods
mov
push
jecxz
fsubl
and
mov
scas
sbb
jle
int3
jae
mov
mov
mov
ds
imul
ja
mov
inc
clc
jae
cmp
lods
and
cmp
rcrl
rorb
pop
jl
adc
pop
xlat
sti
jg
cmpsl
das
addr16
les
sbb
jecxz
ss
mov
out
shlb
mov
shll
xor
shrl
sub
xchg
mov
pop
clc
push
repz
lret
inc
add
or
inc
bound
lahf
mov
xor
xchg
or
les
test
mov
dec
nop
add
notb
mov
dec
inc
imul
js
dec
fiadds
and
cmp
flds
out
push
adc
popf
or
inc
call
mov
and
dec
jecxz
ds
out
sbb
stc
push
cltd
add
jne
ret
push
imul
inc
jle
push
stc
xor
mov
sahf
push
mov
ss
mov
mov
push
fs
ror
sahf
or
imul
icebp
push
sti
imull
dec
hlt
mov
fldt
stc
ret
cli
cltd
fdivrs
arpl
ret
sahf
and
inc
popa
xchg
dec
out
jmp
pop
xor
mov
adc
xchg
stos
mov
dec
cmp
fstpt
addr16
and
in
out
jg
xchg
out
into
adc
aas
and
or
cmp
pushf
aad
pop
test
sbb
in
shrb
lods
and
dec
orl
and
fldt
outsb
movb
das
arpl
loop
xchg
inc
pushf
int3
and
push
idivb
sti
mov
imul
jne
pop
pushf
scas
scas
enter
sbb
xchg
push
sub
and
jno
and
inc
inc
aad
push
pushf
xor
pushf
sbb
aaa
mov
add
in
lods
or
pop
fdivrs
add
roll
sbb
cwtl
xor
add
shlb
movsb
or
imul
aam
jecxz
rorl
inc
mov
movb
inc
shrb
inc
jae
insl
mov
jmp
test
push
outsl
mov
sbb
jg
in
sub
or
sbb
enter
xchg
jl
fnstenv
adc
call
push
test
jnp
adc
stos
sub
xor
mov
pop
jno
movsl
mov
aad
outsb
bound
or
fcomps
scas
fwait
or
nop
push
lcall
stos
lret
push
lock
jl
in
push
sub
jge
sbb
stos
fsubrs
repnz
xor
je
push
insl
sti
rcll
repnz
leave
les
ljmp
xchg
add
push
movsb
pusha
mov
mov
dec
and
rcll
pop
sbb
push
sub
sub
std
mul
imul
iret
addr16
je
add
fistl
or
repnz
add
insw
push
shll
loopne
push
rclb
mov
ret
test
jmp
xor
sbb
popa
jl
mov
mov
mov
dec
rorl
popa
adc
sub
lret
add
jbe
mov
mov
lods
bound
pop
scas
push
lret
mov
and
aas
xchg
and
and
cmpsl
addb
insb
cmpsb
ds
clc
cld
das
jecxz
cmp
inc
je
or
push
aas
fcomip
scas
xchg
imulb
xchg
push
test
add
leave
cwtl
jmp
fstpt
orb
jb
push
xchg
xor
jmp
pop
sbb
pop
sbb
mov
mov
dec
insb
scas
and
rorl
jge
or
inc
mov
jns
insb
popa
sbb
jns
mov
loop
jle
mov
cmp
dec
popf
or
dec
push
cmpl
lret
hlt
mov
enter
xor
xchg
lods
adcb
pop
ret
push
mov
int3
mov
cmpsb
add
push
push
stos
or
dec
or
scas
sub
fstp
lds
add
leave
into
mov
dec
gs
lahf
les
mov
sub
cmc
adc
push
dec
das
ja
js
push
pusha
stos
and
repz
cmp
ja
sub
sub
test
inc
push
xor
nop
cmc
clc
inc
push
mov
enter
jnp
cmp
xor
jb
sbb
jnp
sbb
aad
pop
mov
adc
xchg
mov
cmp
lds
inc
pop
roll
adc
in
cmp
jecxz
enter
repz
stos
pop
scas
test
mov
mov
jge
or
bnd
xacquire
push
and
and
sahf
test
ret
push
xchg
aad
call
stos
dec
dec
cmpsb
push
and
jo
mov
ret
mov
mov
nop
fbld
call
xor
test
shll
scas
inc
mov
cmp
dec
add
lods
mov
scas
xor
adc
pop
mov
push
mov
loop
mov
sub
add
out
outsb
xlat
jo
inc
sbb
in
add
push
imul
aas
fs
inc
daa
inc
clc
cs
dec
bound
jnp
sub
pop
xchg
add
mov
sub
dec
aas
ftst
or
jns
insl
mov
insb
adc
add
fdivr
test
cld
bound
sub
popf
mov
pushf
push
data16
xor
aas
jge
ljmp
sbb
pop
scas
fs
sub
xor
icebp
fldcw
movsl
fildl
push
into
mov
repnz
push
push
jae
dec
lea
fwait
push
lret
cmp
jecxz
outsb
divl
nop
sub
xor
xchg
cld
or
sbb
mov
in
lds
std
jb
cmpsl
sbb
repnz
lock
iret
inc
xor
xchg
test
negb
sbb
xor
pmaxub
adc
add
xchg
dec
xlat
add
sub
repz
push
and
arpl
out
mov
add
cmpsb
mov
sub
or
adc
sub
cli
pop
jo
lret
in
arpl
jp
pop
pop
pop
mov
pop
add
stc
xchg
xor
mov
jecxz
daa
sub
jecxz
cmp
sbb
movsb
movsl
pop
fld
sub
jge
js
ds
andl
daa
ja
in
inc
rcrb
les
mov
call
push
pop
dec
gs
sarb
call
push
inc
push
rcrl
loope
jbe
addr16
ja
hlt
mov
mov
pop
cmpsl
and
mov
dec
je
mov
fsubs
push
or
lods
mov
inc
popa
jnp
out
imull
shl
adc
jns
xchg
inc
sub
push
sbb
xor
cld
or
lret
push
jae
inc
or
pop
inc
test
test
mov
aaa
cmpsl
add
mov
mov
outsl
mov
test
and
push
test
out
insb
or
xlat
hlt
leave
mov
movsb
push
arpl
adc
lcall
incb
outsb
test
cltd
nop
stc
jno
mov
jge
cltd
in
mov
mov
dec
jne
movsb
cmp
ljmp
shl
push
nop
mov
push
or
sbb
mov
push
sarb
aam
aad
xchg
insl
mov
mov
iret
sub
insl
movsl
cmp
xor
jbe
ljmp
iret
add
aam
das
mov
outsb
lahf
mov
sub
ljmp
cmpsb
sub
mov
and
rcrl
inc
sbb
movsl
push
lret
andl
xor
aam
mov
ret
jl
add
ficoml
enter
in
adc
divl
xor
xchg
pop
pop
lret
pop
mov
mov
and
lds
cmpsb
xchg
je
or
xor
cmc
inc
pop
mov
xchg
cltd
inc
dec
mov
push
sbb
xor
cltd
or
stc
push
es
cmc
fnstenv
bound
xchg
lods
sti
cwtl
scas
shrb
mov
das
aam
das
fstl
inc
popf
or
mov
scas
aam
jge
sub
mov
pushf
pushf
jecxz
dec
ffreep
test
push
mov
mov
or
xchg
lret
movsl
or
aaa
pushf
sub
call
add
stos
mov
shlb
movsl
cmpsb
dec
movsb
pop
push
pop
hlt
xchg
sti
test
xor
es
aam
punpcklbw
lahf
and
lea
mov
cmp
jno
jecxz
or
lret
cmpsl
in
mov
jnp
add
arpl
inc
cmp
lock
fdiv
inc
rcll
mov
sub
push
pushf
xchg
cwtl
fisttps
in
push
dec
mov
cmp
xor
inc
pop
pop
loop
jno
ror
push
imulb
xchg
jge
mov
rclb
insl
lret
or
decb
xor
lret
mov
push
mov
pushf
sbb
mov
pop
mov
test
sub
adc
test
test
lret
mov
rcl
lock
jp
push
ret
fistps
addr16
adcl
leave
mov
pop
xchg
enter
xlat
cmc
int3
xchg
orl
xor
sbb
in
out
mov
fistps
push
mov
int3
les
xor
sbb
cmc
aaa
int3
outsb
test
push
jnp
sbb
sub
bound
ret
cld
mov
mov
sbb
push
sarl
cli
stos
push
dec
das
repnz
xor
inc
nop
fsubp
add
inc
push
movsb
call
test
insb
mov
jae
testl
lock
xchg
movsb
decl
mov
into
mov
je
adc
outsb
fucomi
insl
push
inc
mov
dec
add
in
fnsave
push
outsb
sbb
test
ja
cmp
and
mov
cmp
leave
xor
mov
jp
and
or
test
push
jnp
enter
push
aad
cmp
pop
sti
xchg
shll
outsl
ljmp
inc
stos
mov
and
inc
cld
pop
adc
lods
push
movsb
xchg
xchg
pop
int
sti
add
std
inc
shlb
loopne
inc
xchg
js
push
scas
xchg
xchg
test
mov
pop
pusha
xor
or
cmp
ret
push
cld
test
adc
out
pop
inc
add
out
test
jno
rclb
enter
or
add
lds
out
cmp
lahf
test
push
lret
xchg
cmpsl
adc
jnp
sub
mov
cmp
sahf
ret
int
in
xchg
jno
pop
out
cmc
push
dec
mov
adc
push
or
psubusb
ret
xchg
fstpt
inc
jmp
push
push
out
ds
lret
adc
xchg
pop
lcall
sbb
stc
in
clc
xchg
push
push
add
in
cmc
jg
mov
in
mulb
xchg
lods
imul
sbb
inc
cmp
fwait
inc
mov
xchg
fiaddl
loopne
movsl
add
ret
fistpll
inc
push
cmpsl
mov
sbb
in
leave
xchg
test
jp
rcrb
pop
sbb
arpl
orl
dec
add
xchg
mov
mov
pop
sbb
fwait
movsb
lret
ret
cli
or
mov
lcall
insb
mov
es
cmpl
mov
cmp
mov
roll
and
mov
cmp
cmp
cltd
cltd
cwtl
dec
loop
sub
sub
std
jbe
fstpl
lret
lret
nop
push
std
pop
arpl
mov
sbb
xchg
jo
addr16
mov
pop
ss
add
int
sub
mov
hlt
movsl
mov
push
and
scas
xlat
inc
adcb
mov
loop
pop
jecxz
dec
sbbb
adc
push
loope
mov
call
roll
cmpsl
aam
dec
pop
cli
fsubs
enter
cmp
xlat
or
cwtl
pop
je
rcll
fsubr
mov
add
out
ds
ljmp
data16
adc
daa
and
jo
iret
dec
adc
xor
fcomps
lods
test
loopne
daa
xor
lods
sahf
sub
adc
pop
inc
and
mov
negl
outsl
icebp
xchg
mov
push
popf
mov
movsl
adc
push
iret
cmc
fisttps
mov
sbb
or
dec
arpl
stos
xor
mov
xor
pop
cld
sub
dec
scas
aam
dec
cld
cmp
jae
out
andl
iret
fldenv
mov
test
mov
cltd
rcll
dec
lret
inc
jo
push
loope
pop
pop
xor
push
daa
fs
push
inc
testb
fdivrp
insb
js
lea
jg
sbb
push
int
pop
push
fs
pusha
sub
xchg
pop
aad
rclb
test
data16
jmp
das
sbb
adc
xor
ret
sbb
cmpsb
scas
push
pop
push
push
or
add
stc
das
dec
jno
in
mov
xor
pop
xlat
repz
add
fdivrl
ret
mov
pop
hlt
scas
out
xchg
and
xor
sub
push
mov
inc
repnz
sarl
jnp
inc
adc
lds
movsl
add
in
scas
jmp
mov
shrl
jb
fidivrl
sahf
fisubrs
dec
incl
fistpll
or
loopne
jmp
xlat
out
jbe
mov
lret
shll
xor
or
in
cltd
cltd
pop
mov
inc
insb
cs
add
or
std
ja
add
mov
ret
scas
orl
pop
xor
xlat
test
jbe
jns
cmpsb
test
sbb
insl
outsb
jb
add
push
stc
mov
dec
xchg
cmpsl
fimuls
sub
adc
and
shrb
cmp
test
pop
mov
fldcw
and
pop
jp
lret
cmc
mov
aad
jb
leave
xchg
jnp
in
mov
xor
dec
daa
add
inc
jp
shr
xchg
fcoms
bound
sbb
mov
push
cmc
xchg
test
sub
and
mov
or
andl
fs
jp
hlt
fldcw
mov
dec
jne
or
clc
cmp
lahf
mov
std
sub
fimuls
sub
aaa
div
lds
add
sti
pop
insl
pop
aas
daa
pop
popa
or
data16
jl
ja
sahf
jge
jb
lods
pop
sbb
cwtl
mov
pop
adc
sarb
dec
sarl
daa
loop
pop
mov
mov
ret
sti
push
dec
pop
adc
cs
push
cwtl
mov
js
movsl
jl
test
cld
imul
jae
adc
fadd
outsb
movsl
mov
push
sbb
in
xchg
mov
jmp
cmp
in
dec
pop
or
int
xchg
lods
jno
fistl
fiadds
popa
mov
bound
dec
rcrb
sarl
mov
lea
scas
movsl
add
icebp
lahf
sub
fcmovb
jge
or
mov
lgdtl
fcmove
pop
add
test
dec
pop
mov
subb
xor
scas
fadds
xchg
dec
daa
fsubrp
ret
test
aam
daa
testb
and
push
fsubr
dec
mov
mov
sub
push
sub
jmp
ss
adc
xchg
lock
jae
gs
loop
mov
and
mov
and
ljmp
stos
push
dec
addr16
xchg
imul
scas
insl
gs
in
mov
inc
jl
inc
push
add
call
or
xchg
popa
sbb
inc
cli
mov
test
sub
xor
cs
adc
xchg
movsl
je
andl
xchg
jmp
pop
adc
push
frstor
loope
xchg
jge
cmp
jecxz
neg
jnp
ret
in
mov
add
rorb
imul
push
mov
sub
or
ss
pop
push
adc
xchg
xchg
int
call
repnz
inc
push
ret
xchg
shlb
popa
jo
and
pop
or
push
push
popa
inc
sbb
cmp
sbb
jnp
add
or
cmp
and
push
arpl
gs
xor
cs
mov
mov
xchg
add
mov
xchg
out
dec
roll
stos
pusha
shrb
lea
adc
add
shrl
and
jmp
sub
sbb
pusha
ja
ljmp
pop
loope
fndisi(8087
inc
adc
mov
aad
push
mov
add
stos
cltd
xchg
jns
fstl
mov
int3
sub
jbe
movsb
push
adc
call
pop
dec
pop
fs
out
jno
mov
aad
outsl
mov
xchg
xor
xchg
mov
pop
xor
movsb
sarb
les
add
es
pop
mov
orl
mov
jbe
jg
aas
and
sub
push
pop
pop
cmp
pop
mov
push
xor
dec
fldcw
mov
inc
or
push
enter
cmpsb
xchg
outsl
addr16
and
xchg
sahf
je
cmp
xor
outsl
xor
add
ljmp
inc
xor
adc
mov
lret
sub
pop
push
sbb
mov
dec
push
mov
cmp
adc
insl
mov
incl
sub
jb
mov
jle
mov
enter
mov
xor
jle
mov
xchg
jo
and
fdivrl
pop
and
mov
mov
lock
fs
ja
test
fisubl
test
int
bound
je
add
dec
cmp
xchg
je
jb
lds
fdivrl
out
pop
xchg
in
iret
aad
pop
jne
or
mov
dec
sub
outsl
jg
inc
push
clc
mov
jno
jne
mov
fcmovne
out
js
dec
test
pop
mov
sbb
cmpsb
movsb
scas
xchg
push
in
push
adc
xor
jnp
xchg
or
mov
test
xchg
mov
push
adc
inc
test
jbe
in
mov
dec
mov
xor
test
xchg
push
shl
jge
xor
adc
sbb
pop
rcrb
add
daa
sqrtps
mov
loopne
and
dec
lea
or
xchg
inc
push
xchg
in
add
ficomps
or
jne
outsl
sbb
or
dec
clc
scas
sti
aad
sbb
jb
mov
mov
popl
out
lea
jae
xchg
mov
pop
or
les
int
xchg
pop
inc
jmp
ss
sbb
push
add
add
cltd
dec
xlat
shl
lret
mov
xchg
pop
inc
jp
jno
mov
pop
test
or
ja
cld
ja
mov
jl
jno
or
cmc
outsb
nop
mov
push
iret
test
fwait
pop
addl
iret
fwait
inc
ljmp
je
ret
aaa
or
cld
push
xor
adc
lahf
addr16
pop
jo
cmp
es
xchg
cmp
cmp
cmp
stos
loopne
mov
sbb
cltd
les
test
imul
aas
enter
loopne
xchg
inc
add
mov
lock
imul
inc
pop
and
sbbb
pop
incl
addr16
lret
push
sbb
mov
fs
or
bound
push
arpl
bt
loop
bound
sub
rorb
dec
push
cld
adc
add
imul
push
es
jp
in
outsb
out
ljmp
add
cmpsl
pop
and
add
jns
in
pop
imul
xor
sub
mov
pop
aad
loopne
lds
lods
cs
fsubr
pop
push
push
pop
xor
jns
shrl
into
jecxz
mov
lods
push
cwtl
inc
or
insb
sbb
push
pop
cwtl
pop
xchg
cs
mov
cmp
std
arpl
int3
jne
cmpsb
pop
or
mov
lret
or
inc
stos
imul
rorb
push
ror
push
rclb
inc
sbb
xchg
mov
pop
xlat
lret
mov
lret
adc
dec
outsl
pop
inc
lahf
fsts
mov
ds
movsb
cmpl
push
mov
insl
xchg
out
cmp
loop
lods
aas
jne
sbb
scas
jo
adc
ja
cld
loop
mov
enter
jecxz
mov
ds
add
xchg
mov
sarl
jp
mov
mul
cli
sti
and
mov
aad
mov
or
in
push
xor
mov
add
bound
mov
arpl
lods
das
mov
mov
mov
mov
mov
out
pushf
cmpxchg
mov
push
icebp
sbb
mov
fs
xchg
das
dec
mov
pusha
rorl
pop
push
in
jae
dec
es
and
mov
mov
push
pushf
nop
loop
cwtl
and
test
mov
push
jge
lods
mov
sub
rclb
xorb
inc
mov
ret
stos
outsl
idiv
enter
icebp
cmp
jnp
test
in
addr16
xor
mov
test
in
cmp
xchg
adc
adc
cmpsl
stc
mov
sub
shll
cmpsb
dec
pop
inc
pop
add
iret
adc
pop
and
loopne
outsl
sbb
mov
or
inc
mov
and
pop
inc
pop
adc
sub
add
or
xlat
jnp
xchg
cmp
sbbb
clc
mov
les
dec
mov
adc
addb
pop
call
sbb
jecxz
lds
nop
jbe
orl
add
mov
adc
mov
dec
sbb
pop
ds
movsb
in
cmp
or
addr16
test
mov
mov
cwtl
in
xchg
jmp
mov
cmp
cli
sub
dec
aaa
test
divl
pushf
dec
stos
xor
andl
das
frstor
jnp
xchg
pop
and
movl
dec
or
mov
lea
faddl
push
dec
std
fcmove
popf
test
in
call
fildl
push
push
insl
push
cli
sbbb
aam
mov
sti
test
ja
jnp
xchg
sub
pop
push
and
ljmp
sub
sti
mov
sub
cmp
add
out
adcl
cwtl
dec
pusha
pop
adc
loope
mov
xlat
mov
add
push
mov
sbb
mov
dec
faddl
mov
insl
out
xchg
lds
xor
jmp
rcrl
es
mov
and
js
repnz
lea
ljmp
cmc
ficomps
and
or
lcall
push
push
mov
mov
inc
aam
xor
pop
push
cmp
jne
mov
sti
push
mov
stc
stos
pop
dec
jge
lret
mov
into
jb
incb
stos
stos
push
jle
es
gs
loopne
and
lds
mov
sbb
adc
push
fistl
in
lea
jno
mov
jmp
push
pop
fcmove
je
int
xor
mov
outsb
movsl
in
insb
adc
mov
adc
mov
movsl
outsl
clc
cli
jns
ljmp
lods
cmpsl
in
xor
decl
shrb
dec
xchg
mov
fmull
dec
pop
dec
mov
incl
in
shl
leave
pop
xchg
jmp
mov
pop
icebp
ret
dec
iret
shl
lret
adc
testb
jne
lods
addr16
jbe
add
iret
jae
jle
lock
test
rorb
and
mov
add
dec
out
out
xlat
scas
push
fdivrl
sti
mov
mov
xor
fdiv
in
pop
iret
imul
fldl
jmp
movl
sbb
je
js
rcl
add
jnp
sbb
mov
lock
bound
mov
add
mov
mov
rclb
popa
push
lcall
xchg
dec
mov
adc
std
mov
in
jo
sub
mov
push
dec
xchg
out
cltd
das
dec
jl
sbb
call
aam
mov
loop
dec
aad
adc
imul
jge
sbb
popf
or
and
jmp
xchg
push
mov
mov
jo
lcall
push
and
mov
imul
jg
mov
mov
test
insl
lock
mov
mov
sub
movsb
push
push
jmp
jo
cmp
pusha
mov
sbb
lret
cmp
and
scas
dec
fsubs
cmp
shrl
mov
cmpsl
jns
insl
sbb
leave
xor
mov
pop
in
add
add
mov
xchg
sub
and
push
scas
insl
je
and
jne
insb
dec
dec
and
push
xchg
push
mov
mov
cmp
cmp
mov
cmp
add
sbb
and
insb
bound
mov
dec
aaa
fs
sub
or
and
and
push
fmull
or
js
dec
inc
sbb
daa
fadds
sahf
mov
stos
ljmp
jo
gs
movsl
lcall
push
xchg
pop
mov
or
mov
mov
movsl
test
cmpsb
aas
ljmp
lahf
add
dec
dec
adc
outsl
dec
pop
les
rclb
in
or
lods
or
pusha
out
xlat
int
call
fdivs
jmp
fildl
imul
mov
cs
lcall
roll
pop
xlat
loop
push
shlb
mov
mov
adc
sub
mov
daa
sbbb
inc
xchg
out
sbb
cld
xchg
or
je
test
insl
hlt
pop
std
or
adc
cmp
mov
out
sti
fstl
icebp
test
dec
cmp
jecxz
mov
push
aam
sbb
or
pop
xchg
xchg
ret
sbb
sub
sbb
add
std
fbstp
fsubrl
inc
adc
stos
mov
inc
and
adc
sbb
xchg
enter
pop
push
adc
add
rorl
or
int
cmp
xchg
inc
or
bound
sti
xor
add
cmp
jg
cmpsl
pop
inc
lea
fwait
cmp
sti
and
fs
adc
outsb
rorb
adc
pop
ret
cmp
popa
pop
popa
dec
clc
inc
lods
dec
pop
mov
popf
sti
mov
test
loopne
cmp
and
add
dec
mov
stos
xor
sbb
jle
fs
fs
std
sub
jmp
xor
test
jne
dec
in
xchg
into
cmp
lcall
cmp
icebp
jbe
call
testl
ret
in
inc
sbbb
icebp
das
aas
stos
push
test
jmp
mov
xor
test
add
push
sub
sbb
lea
repz
xchg
mov
sbb
loop
jae
add
cmpsl
push
std
and
cmp
sbb
cwtl
outsl
hlt
xchg
int3
xlat
or
mov
mov
and
jl
dec
jae
pop
ffreep
nop
dec
add
stos
ds
pop
add
inc
cmp
push
push
xor
test
scas
jp
jle
movb
outsb
inc
cwtl
mov
xchg
lods
mov
and
aam
fwait
cli
xor
lret
inc
inc
jl
scas
or
sti
inc
mov
xor
gs
cwtl
into
dec
xchg
in
mov
and
xchg
ljmp
test
aam
jo
dec
orb
xor
mov
hlt
insb
sar
inc
jp
loope
xchg
jl
mov
mov
push
and
inc
bound
adcb
idivl
ss
dec
pop
dec
sub
bound
cmp
dec
jmp
jmp
mov
sarl
int
xchg
ret
addr16
iret
adc
test
ja
xlat
imul
add
mov
flds
negb
insb
and
push
wbinvd
sti
shll
mov
push
out
cltd
add
mov
sbb
fadds
pop
jge
lds
or
xorb
cmpsl
inc
sbb
cmpsl
pop
inc
sbb
subl
vpshlw
mov
adc
ljmp
pop
out
add
ss
sub
sti
pop
sahf
push
add
cltd
int3
ffree
jg
push
ret
ja
and
fadd
and
xchg
sub
icebp
mov
and
jge
xchg
out
ss
xor
adc
xchg
jnp
sbbl
jl
mov
push
push
mov
movsb
ret
lahf
sbb
mov
push
jp
jp
fs
sti
aam
mov
add
repz
sbb
out
aas
in
sbb
es
test
loopne
fisubrl
subl
lods
test
lods
mov
push
sub
inc
sbb
cmp
ss
or
mov
mov
inc
imul
xchg
cpuid
pop
fs
iret
insl
inc
loopne
push
das
lock
mov
adc
mov
pop
dec
fwait
dec
or
jge
jp
in
jns
jnp
mov
stc
call
xor
int
xchg
sub
dec
and
pop
insl
dec
movsb
adc
addl
fcomps
push
mov
test
loopne
repnz
pop
xchg
inc
cmpsl
das
lcall
dec
sub
sbb
outsl
and
lcall
sbbl
into
add
or
sub
idiv
mov
cmpl
adc
jmp
pop
jnp
popf
sbb
call
sub
and
mov
outsl
dec
fs
popa
nop
mov
rcrb
imul
lods
imul
testl
in
mov
push
add
cmpsl
mov
fs
cmp
fdivl
mov
cmp
xchg
xor
xchg
mov
push
inc
adc
cmpl
jbe
push
rorb
test
cmpsl
sbb
leave
aad
or
and
loop
je
push
cmp
pop
xchg
mov
lret
mov
push
mov
fimull
testl
push
lret
xlat
out
popf
adc
mov
ficomps
mov
repnz
sbb
in
scas
inc
int
jecxz
push
lock
add
xor
xlat
sub
ficoml
lock
js
xchg
fwait
in
bound
rclb
or
push
dec
inc
mov
in
insl
xor
cwtl
add
mov
hlt
and
scas
sub
and
in
cmp
inc
arpl
dec
mov
xor
add
jecxz
imul
ss
sub
lods
imul
aad
pop
stos
les
fadd
xchg
mov
pop
in
xor
push
lret
int
inc
xlat
cmp
jbe
add
pusha
sbb
lock
dec
sub
cltd
scas
jbe
in
call
sub
sar
mov
insl
sub
ficomps
xor
dec
inc
imul
mov
and
shr
jg
inc
jae
stc
fcmovbe
fisubl
xchg
mov
jbe
stos
js
imul
xor
aam
lahf
sbb
xchg
clc
mov
aad
mov
mov
jmp
and
inc
jmp
or
testb
cmp
aaa
sbb
jb
lahf
mov
pop
inc
int
cmpsl
cmpsb
mov
dec
dec
xor
ss
fnstcw
push
imull
and
outsl
insl
aaa
mov
add
mov
add
mov
jp
fnstsw
push
cli
jg
add
adc
aaa
dec
add
insb
int
push
mov
cltd
pop
push
mov
ret
shrl
sbb
cld
insl
or
jl
pop
xor
fwait
cmp
mov
in
gs
mov
mov
xchg
arpl
std
pop
rorb
in
je
jb
inc
bound
adc
imul
cs
int3
dec
or
movsb
mov
call
aaa
mov
int3
imul
pop
clc
inc
jo
into
push
fucom
ret
sub
je
ret
pusha
outsb
pop
into
sub
pop
xor
or
data16
std
enter
and
add
jmp
call
jne
mov
ret
es
pop
cmp
xor
outsb
cmpsl
xchg
test
xchg
nop
popf
cmpsb
movsb
jmp
ljmp
push
arpl
sbb
add
xchg
popa
xadd
sub
jns
test
adc
jp
and
enter
bnd
sbb
or
push
or
or
into
popa
xor
fcoms
sbb
add
sbb
into
ror
lea
mov
das
lods
and
sub
test
data16
adc
sbb
mov
dec
pop
ja
lock
add
add
jp
lcall
repnz
inc
imul
xchg
je
jne
mov
adc
imul
push
inc
inc
stos
jnp
fprem
stos
push
cwtl
xlat
int3
jecxz
or
stc
sbb
mov
nop
jp
lcall
fld
cli
fisttpll
in
ds
mov
pop
dec
jmp
arpl
loop
stos
jmp
cli
iret
xor
rclb
loopne
push
in
stos
sbb
stos
pop
add
pop
int3
les
mov
inc
arpl
arpl
push
mov
and
mov
xchg
into
pop
jns
nop
jecxz
mov
test
xorb
add
rcr
fcompl
fiadds
xor
test
test
out
pop
mov
cmpsl
bnd
ret
xchg
and
and
movsl
cmp
repnz
push
stos
js
mov
sub
rcrb
xchg
or
lods
imul
lds
push
push
hlt
cmp
int3
mov
or
pop
inc
push
adc
cmp
leave
sti
and
sti
pop
daa
or
pop
xchg
xchg
xchg
shlb
mov
jb
out
jae
pop
xor
sub
pop
addr16
in
and
pop
ret
push
xchg
xor
call
jo
pop
pusha
push
xchg
fbld
adc
xchg
xor
pop
push
ja
or
repz
mov
into
mov
and
cwtl
sub
call
aam
test
test
loopne
loop
sub
lret
dec
inc
add
pop
test
hlt
and
lcall
xor
xchg
call
aad
xchg
fwait
or
sbb
gs
outsb
mov
cli
ja
ret
imul
ljmp
sub
sub
sbb
add
sbb
mov
or
push
sbb
scas
mov
cmpsb
jbe
ss
mov
outsb
dec
hlt
inc
xchg
dec
addr16
push
or
dec
or
fimuls
rcll
add
push
jle
dec
iret
cmpsl
in
rolb
int
scas
sbb
jnp
jl
mov
hlt
adc
outsl
push
mov
mov
sbb
mov
clc
pcmpeqw
or
mov
xchg
inc
sbb
pop
push
stos
sahf
inc
andl
cmpl
cld
adc
aam
repz
imul
mov
mov
or
lods
mov
xchg
add
fldt
sub
pop
jmp
xchg
or
fs
aas
in
push
jne
xor
jge
xchg
or
inc
outsl
fisttps
mov
sub
add
sti
imul
in
fdivs
pop
mov
jno
mov
cmp
xlat
sti
shlb
sbb
cmp
xor
inc
inc
dec
push
dec
push
add
in
addr16
dec
cs
pop
push
or
in
dec
jl
stos
jl
xchg
data16
push
imul
cmp
jae
jno
xor
mov
shr
clc
je
and
adc
pop
faddl
icebp
push
rcll
aaa
dec
and
cld
pop
icebp
jmp
or
push
sbb
adc
pop
and
je
jle
add
adc
inc
jne
fdiv
mov
cmpsb
ss
sub
mov
mov
pop
je
mov
pop
inc
cs
add
out
loopne
cmpsb
out
mov
icebp
xor
aad
lock
pusha
loopne
stos
ret
mov
jbe
push
push
sbb
addr16
jno
pusha
jl
and
pop
outsb
data16
inc
fimull
inc
push
or
outsb
data16
fwait
popa
lcall
and
imul
shll
pushf
hlt
stos
push
mov
scas
inc
mov
add
sub
cltd
push
popa
cltd
xor
out
stos
insb
fisttpl
repnz
ror
aam
or
xchg
and
in
dec
xchg
bound
inc
loope
fdivrs
fldenv
mov
dec
rorl
sub
xchg
cmp
vsubps
std
dec
dec
xchg
data16
repz
sbb
inc
pop
sbb
shrd
pop
adc
xor
push
leave
jecxz
dec
sub
test
xchg
jg
rcll
dec
int
pop
jmp
sbb
ficomps
lret
lret
push
fisttps
cltd
mov
jnp
push
inc
in
cld
jae
jnp
push
gs
pop
push
jp
and
insb
dec
lcall
adc
clc
sub
fwait
out
repnz
pop
jns
test
dec
add
cli
mov
mov
dec
mov
jne
idivb
orb
adc
and
push
out
mov
mov
pop
jmp
scas
sbb
aas
pop
pop
jg
dec
ja
dec
mov
lcall
push
call
add
xchg
mov
adc
xchg
lcall
jecxz
scas
in
pop
pop
jmp
movsb
ja
lods
lods
repnz
mov
test
pusha
adc
sbb
outsb
pop
adc
je
aad
orl
sub
sub
das
inc
or
test
and
jns
std
out
in
shlb
addr16
cmp
or
lods
mov
cltd
sbbl
subb
push
ret
in
fwait
insl
dec
add
nop
aas
leave
lcall
cmpsl
adc
jp
mov
fmull
pop
lea
sub
or
or
lahf
mov
push
and
movsl
loopne
xchg
sbb
push
push
mov
cmpsl
repz
vandps
fcompl
adc
or
cld
andl
dec
lods
lds
lods
or
jno
ret
test
das
cmp
mov
sub
xor
std
pop
stc
in
imul
push
sub
mov
push
inc
aad
push
loop
ftst
movsl
mov
sahf
cltd
test
push
popa
in
xor
insl
xlat
fistps
scas
pop
or
scas
jge
push
mov
sub
or
push
lahf
pop
js
fisttpl
or
daa
jl
outsl
int
inc
pop
mov
push
xchg
cs
mov
sbb
fdivs
xor
lods
sub
scas
loop
and
pop
xor
pop
mov
decb
mov
and
mov
sbb
cmp
fs
outsl
repz
imul
ficomps
mov
outsb
inc
sbbl
out
sbb
fcmovnb
lods
push
mov
sbb
and
sub
daa
ret
bound
shrb
cmpsl
inc
cmp
mov
adc
subl
push
xchg
mov
icebp
adc
loopne
adc
dec
cwtl
and
mov
in
ficomps
int
jp
testl
es
cmp
mov
movsl
jo
addr16
and
test
loop
sti
and
fdivs
inc
sub
inc
mov
lcall
mov
push
out
cmp
sbb
sub
notb
cs
sbb
lock
sub
mov
and
aas
mov
push
and
dec
sbb
mov
dec
adc
popf
and
in
jecxz
mov
and
pop
les
cltd
jo
insb
in
out
sti
sbbb
js
mov
scas
inc
xchg
or
push
jge
addr16
inc
fnstenv
sahf
push
in
mov
popf
icebp
das
sub
sbb
dec
xlat
or
adc
ljmp
movsb
sub
cmp
cmpsl
dec
aad
lods
sub
fs
mov
je
fwait
lret
inc
push
mov
nop
jmp
cmc
jns
arpl
pusha
jecxz
sub
das
pop
xchg
push
clc
xor
mov
clc
inc
inc
jmp
jnp
mov
loope
popf
outsl
mov
dec
pop
outsl
and
cwtl
clc
mov
jb
sbb
ret
adcb
mov
stos
aaa
sub
rolb
pop
enter
push
push
push
mov
sub
cmpb
scas
mov
mov
jl
jae
mov
hlt
outsl
add
or
stos
mov
pop
inc
sbbl
bound
sbb
insb
enter
mov
das
gs
sub
sub
and
jae
pop
jecxz
dec
gs
pop
sub
outsb
inc
adc
dec
out
aaa
popf
jae
adc
sbb
mov
daa
dec
arpl
lods
mov
aad
mov
rcll
test
xor
data16
in
or
inc
mov
xor
push
test
frstor
iret
mov
lcall
loope,pn
sbb
call
frstor
rcrl
incl
push
std
add
nop
adc
dec
aad
sahf
sbb
dec
mov
insl
mov
or
test
pop
xchg
out
dec
lock
repnz
push
shlb
test
inc
add
lahf
jp
lcall
dec
fdivp
inc
int3
lods
cmp
xchg
add
mov
mov
movsl
mov
mov
cmp
idiv
in
arpl
fwait
movsl
cmp
push
fstpt
jb
push
push
lret
mov
add
cwtl
mov
dec
sbb
mov
pop
adc
icebp
lods
add
mov
popa
xor
xlat
inc
int
pop
movsb
lcall
in
aad
jp
jge
inc
lret
sbb
scas
sti
push
fstps
xorb
cld
pop
repnz
mov
pushf
inc
sub
aas
inc
movsb
xor
test
movlps
push
inc
cmp
push
push
xor
std
xchg
push
pusha
fwait
adc
pop
sbb
ljmp
jg,pt
sbb
lods
rcr
iret
adc
aam
fbstp
jne
jp
inc
popa
cmp
mov
xor
test
push
xlat
rorb
dec
inc
mov
stos
cmpl
test
test
fadd
fistl
cmp
add
xchg
push
pop
data16
xchg
dec
movlps
add
pop
scas
and
mov
inc
inc
lock
jmp
das
inc
scas
test
outsl
fs
pop
mov
push
int
pushf
fs
or
push
pusha
arpl
repnz
fs
pop
and
xchg
xor
adc
in
stos
mov
ds
and
pop
or
xlat
jmp
xor
mov
ror
std
ljmp
or
outsl
xor
push
and
mov
mov
lahf
dec
jbe
sbb
pop
xor
dec
pusha
lret
sub
rclb
jge,pt
add
push
arpl
test
pop
mov
sbb
rorb
pop
xlat
repnz
adc
xchg
add
mov
xor
dec
or
mov
push
sbb
push
mov
sub
xchg
test
lds
cmc
adc
add
icebp
xchg
adc
leave
sub
mov
test
xchg
pop
push
pop
cs
pop
pop
push
inc
jo
loopne
jnp
jb
ss
out
ss
cmc
into
aad
dec
mov
nop
and
enter
push
inc
movsl
bound
xor
cld
mov
sbb
jecxz
sub
lock
jmp
sbb
jl
cli
xor
xchg
ret
insb
push
jbe
jle
pop
repnz
add
mov
repz
add
add
inc
pop
mov
fwait
pusha
lds
sahf
add
adc
loopne
and
jno
movl
fstpl
push
icebp
gs
shl
into
stc
adc
cmp
and
addr16
adc
pop
loopne
push
fnstenv
out
or
dec
jmp
fcoml
sbb
mov
je
sbb
ss
in
push
cld
sub
cmpsb
jb
inc
scas
repz
shrl
es
or
gs
clc
nop
and
mov
mov
ljmp
addl
add
fsubrs
jae
mov
dec
frstor
cmc
push
jle
xor
inc
mov
mov
or
arpl
mov
rclb
xchg
es
cmp
mov
push
mov
cwtl
inc
jmp
mov
jmp
repz
je
mov
add
ret
pop
lods
mov
mov
in
repnz
mov
jno
stos
mov
mov
and
dec
insb
jne
repz
pop
mov
sub
sti
xor
xchg
addl
jl
mov
shlb
imul
divl
xchg
mov
out
xchg
cmp
adc
mov
cmp
cmp
cmp
and
push
pushf
mov
jae
dec
sbb
mov
cmp
inc
sub
jno
rolb
into
push
mov
ljmp
add
prefetch
mov
mov
mov
fwait
and
int
ret
adc
aaa
xor
add
sbb
cmp
rolb
pop
imul
into
test
push
clc
dec
xor
cmp
mov
inc
lods
and
in
addr16
outsl
cwtl
insl
aad
or
jle
jp
add
pop
push
xchg
fistpl
cli
jbe
dec
mov
mov
jb
add
jb
push
outsb
leave
cmpsb
push
shl
xor
sti
xchg
xchg
pushl
fisttps
add
lret
cld
ret
inc
rorb
std
fcom
fildl
cwtl
into
shll
mov
and
dec
add
mov
sbbb
cld
arpl
call
cwtl
pop
sbb
out
lock
or
xchg
mov
bnd
mov
mov
mov
cltd
in
scas
es
loopne
add
into
sub
mov
push
int
dec
pop
aad
mov
xchg
cwtl
pop
sub
lret
mov
mov
scas
and
jl
repnz
add
es
lret
mov
popa
mov
ljmp
repz
cmp
inc
cmp
imul
das
push
popa
ret
lret
out
test
xor
mov
rclb
divl
jno
hlt
xor
test
repz
daa
insb
popf
mov
mov
add
jo
xchg
movsb
mov
add
dec
add
push
rcr
gs
popa
ret
xor
aas
sub
test
mov
xor
fs
mov
insb
push
repz
pop
xchg
hlt
xorl
ret
fcoms
mov
rcll
jae
sbb
inc
test
cmp
sub
xor
fmull
loope
mov
sub
mov
pop
gs
adc
pop
or
outsl
fdivrs
mov
scas
sbb
sbb
shlb
sahf
pop
or
push
mov
sub
ret
js
push
inc
jae
sub
cmp
inc
pop
mov
mov
mov
gs
pusha
xlat
mov
movsl
and
and
in
fcmove
test
mov
movsl
popa
xchg
inc
mov
and
pop
cmp
adc
mov
mov
dec
bound
pop
std
push
pop
scas
cmpsb
or
adc
notb
pop
push
int
mov
dec
fnstenv
xor
push
in
push
lods
aas
es
fucom
repz
cmp
fmuls
adc
rorl
sbbb
aaa
cmova
push
fldcw
push
ljmp
shlb
xor
daa
outsb
jnp
scas
in
jecxz
and
out
repnz
mov
xchg
fnstcw
jnp
jne
stc
mov
fldenv
fcomip
outsb
add
rorb
push
add
add
into
mov
xlat
sbbl
into
cmpsl
pop
push
push
cmp
jmp
push
leave
out
and
and
in
push
pop
mov
push
mov
push
add
cmc
loop
xchg
enter
push
lahf
enter
ret
inc
lods
addl
adc
imul
fdivr
stos
loope
addr16
clc
sbb
sbb
pop
jecxz
mov
popf
cmpxchg8b
lret
sbb
mov
imul
lock
or
cmpsl
dec
mov
and
enter
imul
cmp
incl
add
sahf
jbe
es
cli
pop
mov
adc
movsb
jl
das
fnsave
repnz
cmp
sub
sahf
xchg
sbb
dec
add
ret
in
cmp
out
sarb
and
push
xor
inc
in
icebp
mov
pop
sbb
fwait
jns
out
divb
xchg
lahf
jmp
popa
fildll
jmp
enter
mov
inc
pop
mov
lret
xor
sub
inc
mov
lahf
dec
mov
js
cld
cmp
or
add
in
cmp
movaps
and
lcall
pop
scas
out
in
stos
pushw
in
lret
mov
shrl
aad
shl
xor
xor
cwtl
int
dec
inc
mov
pop
scas
jno
push
sub
cmp
push
add
data16
insb
cmp
jb
xchg
int
mov
andl
dec
xchg
fld
addb
cli
mov
inc
int3
fs
arpl
xchg
jp
into
xor
ficomps
pop
mov
ds
mov
lahf
sub
jnp
cmp
jns
mov
cmp
mov
shl
pop
es
pop
mov
aas
xchg
cmp
repnz
andl
addr16
jp
mov
call
mov
aas
aaa
sbb
lcall
sti
jo
pop
mov
cltd
mov
or
push
outsb
pop
addl
es
cmpsl
loopne
jo
add
push
popaw
in
dec
jmp
stc
sub
outsb
adc
pop
push
mov
cltd
cwtl
imul
rcll
gs
cmp
arpl
xchg
aad
stc
mov
mov
shl
cmp
adc
aaa
add
jmp
in
cmp
sahf
je
mov
data16
out
inc
adc
xor
inc
addr16
xor
lret
mov
les
sbb
cmp
in
jle
dec
mov
scas
sbb
fidivrl
out
call
sbb
flds
popf
inc
mov
mov
mov
movsb
jmp
repnz
xchg
in
fbstp
cmp
pop
int
sti
xchg
stos
sub
xchg
arpl
daa
pop
out
mov
test
xchg
ja
ret
mov
aas
lret
in
inc
pop
fwait
mov
fdivrl
jno
ret
fldl
repz
or
sbbl
test
icebp
push
std
pop
dec
xlat
cmp
sbb
xchg
xchg
gs
push
cltd
jl
mov
xchg
aaa
stc
dec
mov
imul
clc
mov
adc
and
adc
movsb
add
sti
in
sub
sti
jecxz
fisubl
xchg
popf
repz
xor
mov
push
in
iret
frstor
pop
test
mov
and
jmp
mov
nop
jl
enter
cmc
pop
add
subl
sbb
fcoml
hlt
outsl
sub
jge
mov
fidivrl
test
cmpl
xor
mov
es
das
adc
in
jmp
lods
push
fwait
add
adc
sub
sti
jl
cmpsl
cmp
int3
dec
je
xchg
fisubrl
lahf
mov
cld
or
mov
rorb
outsb
fiadds
loope
and
dec
lods
jmp
lods
insl
mov
ja
pop
xchg
ret
xor
xchg
mov
adc
insb
nop
inc
lea
cmp
adc
js
xorb
ds
arpl
lea
int
int
push
push
cli
test
mov
imul
rorl
cmp
bound
pop
mov
sbb
xchg
sbbb
xchg
sti
arpl
mov
loop
push
fmul
test
cmpsb
add
iret
and
mov
mov
hlt
aad
std
push
std
pushf
mov
bound
hlt
aam
out
in
jno
lahf
adc
push
je
jns
pop
adc
adc
and
je
out
nop
repnz
les
jne
mov
insl
je
push
out
inc
pushf
popf
sub
in
lods
stos
cmp
rolb
ljmp
insb
xchg
mov
xor
call
shrl
aam
fidivl
cmp
jg
pusha
sbbl
xchg
mov
rcr
cmc
je
cmpsb
inc
in
in
sti
and
mov
mov
adc
movl
and
sbb
sbb
adc
push
xchg
or
cmp
xor
xor
lock
mov
orb
sarb
aad
shrl
stc
xor
mov
call
jl
jns
adc
cli
mov
std
call
mov
sahf
mov
or
pusha
cmp
inc
sbb
outsb
xlat
call
xor
pop
or
shrb
test
in
push
outsb
fisttpl
jge
nop
scas
push
data16
fwait
or
xchg
pop
mov
lret
push
or
sub
jbe
rorl
movsb
shl
sbb
mov
gs
add
daa
das
je
mov
test
inc
push
dec
mov
gs
lcall
je
in
mov
and
rorb
or
xor
std
xchg
scas
and
or
incl
lea
sahf
andb
mov
fldt
cmp
lahf
push
cmpsl
sbb
shlb
fsubl
sbb
adc
and
add
js
ud2
stc
push
outsl
add
sbb
popa
xor
mov
lret
sub
nop
pop
pop
cmpsb
or
shlb
das
test
loopne
jo
stc
sub
sub
outsl
int3
dec
insl
and
nop
or
inc
xor
filds
cli
test
ljmp
das
push
lcall
push
movsb
xlat
sbb
idivl
mov
es
jle
xchg
addl
dec
mov
cmp
fdivrs
mov
imul
and
push
das
icebp
rol
pop
adc
popf
or
xor
daa
shlb
movsb
ss
sbb
scas
xlat
sbb
in
mov
arpl
pop
xlat
adc
jnp
adc
mov
inc
xlat
inc
lret
loopne
sbb
hlt
mov
mov
les
push
lret
sahf
pop
sbb
arpl
adc
jae
and
sub
pop
mov
sbbb
shr
out
mov
pushf
gs
gs
cli
cld
pop
fiaddl
inc
mov
mov
daa
jno
adc
es
test
inc
shrb
enter
mov
movsl
sub
fisttpl
out
dec
stos
mov
or
cmp
lds
rol
mov
std
push
fsubr
add
inc
pop
bound
jp
xchg
cmp
lds
mov
out
jb
xchg
ret
cmpsb
inc
in
mov
mov
cld
push
inc
into
add
dec
imul
addb
repnz
iret
fwait
add
aad
xchg
imul
sbb
or
add
mov
xchg
xor
fst
iret
cmpsb
dec
jmp
mov
mov
shll
sbb
inc
jg
mov
xor
and
add
dec
sbb
xchg
jns
xchg
and
ss
movsb
adc
into
cmp
xchg
pop
aas
cli
mov
loopne
sti
in
or
dec
push
imul
aam
lcall
les
sbb
pop
mov
gs
push
jne
scas
ss
test
fadds
cld
inc
cli
in
cwtl
daa
jcxz
notb
sub
jb
xor
xlat
add
dec
xor
ror
pop
or
mov
lahf
mov
mov
ficoms
fprem1
out
aad
ficomps
xor
gs
mov
xchg
push
icebp
sbbb
or
mov
jae
adc
mov
scas
push
sbb
cwtl
or
lret
sub
and
movsl
jo
push
pop
mov
mov
aad
ljmp
add
cmp
pop
movsb
push
fstps
scas
push
das
cmpsb
cltd
sbb
int3
lret
fcompl
je
shrl
xchg
inc
stc
sti
jecxz
jle
push
or
jae
push
sar
inc
mov
in
pop
mov
push
mov
fldt
jge
aad
adc
popf
loopne
xorb
iret
sbb
or
test
push
sub
sub
popfw
cmp
xchg
and
push
iret
popf
push
jae
mov
pop
imul
xlat
push
jb
pushf
jg
push
sti
mov
push
jg
fisubrs
push
push
sub
mov
sbb
inc
dec
jl
enter
je
insl
jnp
mov
insl
ret
roll
sbb
in
xchg
xor
aas
insl
cmpsl
fmull
test
nop
clc
pop
lea
cmc
dec
lds
and
in
data16
daa
mov
std
imul
pusha
fs
cmc
sbb
lcall
les
sbb
add
sub
js
lcall
or
jb
daa
ret
call
aam
sbb
mov
loop
inc
stc
sahf
rorl
stc
inc
in
jecxz
inc
stos
add
add
mov
sti
mov
sub
mov
repz
adcl
je
xchg
inc
sahf
xor
lret
insl
and
mov
cmp
push
jnp
cmc
jae
pop
sub
repz
fs
sbb
sbb
in
jmp
cmp
test
fsub
in
scas
and
dec
pop
xchg
sbb
and
inc
or
mov
push
pop
or
mov
push
fs
sub
mov
fwait
clc
add
shlb
addr16
sbb
cmc
push
adcb
bound
pusha
inc
jo
xchg
jle
xchg
xchg
into
push
mov
fwait
rorb
inc
loope
xchg
hlt
or
jmp
shr
sti
jbe
aaa
sbb
pop
clc
in
xor
sbb
fidivl
xchg
dec
inc
rorb
clc
sti
sbbl
xor
gs
ret
loope
rcl
mov
push
ret
mov
cld
mov
popf
movsb
pop
es
inc
insl
mov
outsl
fwait
dec
leave
ljmp
popf
lods
xor
ds
or
inc
or
flds
cmpsl
iret
outsl
sbb
hlt
ds
movsl
jo
out
pop
jmp
pop
repz
or
dec
daa
jg
leave
inc
shl
adc
test
or
cmp
rcll
sub
arpl
cwtl
xor
mov
dec
adc
pusha
inc
cld
mov
pop
mov
pop
xor
xor
je
popa
outsb
clc
arpl
sbb
aad
fsubrl
adc
pop
jg
mov
push
loopne
call
cmpsb
inc
aas
jl
ja
stos
dec
mov
inc
xchg
mov
hlt
xchg
mov
pop
sub
mov
cmpsl
inc
adc
dec
jbe
adc
push
test
lock
adc
add
leave
dec
sbb
lcall
sbb
or
pop
mov
lea
pop
das
mov
sub
loope
lods
jae
or
dec
sub
lcall
ljmp
inc
bswap
mov
pop
cld
jno
jne
jns
sbb
pop
lock
xchg
fcoms
and
mov
sahf
mov
mov
outsb
pop
cwtl
xchg
mov
sub
mov
jo
rcr
lcall
sub
inc
sahf
xstore-rng
cmpsl
sub
dec
dec
imul
std
ror
ja
popf
loope
xchg
cli
mov
mov
cmp
add
mov
pusha
add
push
pop
jne
negl
inc
xchg
jg
movsl
mov
lock
pop
in
sbb
lock
and
mov
test
lcall
jae
xchg
dec
test
stos
push
xor
xchg
inc
dec
jge
inc
jle
fcomps
dec
push
inc
clc
cmpsl
loop
loopne
fcomps
dec
pop
bound
mov
xchg
aaa
addr16
mov
mov
xlat
popf
adc
adc
jbe
xchg
outsb
outsb
push
sub
mov
stos
mov
clc
es
jle
add
imul
mov
popa
out
cli
dec
int
mov
scas
add
xor
adc
sub
sub
je
scas
sbb
mov
inc
gs
fstpl
push
cli
in
jbe
push
dec
bnd
mov
lahf
jmp
jmp
mov
or
cmp
push
lcall
jg
xor
pop
mov
push
call
dec
push
inc
cmp
ljmp
ja
xor
pop
add
test
mov
sti
cmpsl
pop
jnp
bound
push
fldcw
js
out
cmc
mov
pop
push
and
repnz
mov
int3
insl
cld
sti
cld
mov
in
adc
out
mov
push
ret
mov
imul
ret
xchg
mov
dec
push
add
and
dec
stos
sahf
out
rclb
scas
and
aam
mov
lock
out
pop
push
cmp
pop
repz
data16
or
rol
testb
mov
and
jb
pushf
daa
xchg
test
lcall
mov
outsl
scas
aad
push
bound
or
xlat
outsl
pop
or
or
and
and
inc
cmp
push
xchg
or
pop
sub
xchg
decb
cmpsb
insb
jno
push
mov
out
enter
jns
pop
lahf
repnz
pop
xor
bound
push
mov
or
into
out
inc
sbb
into
lret
add
cmc
stc
xchg
test
mov
sub
and
scas
mov
xchg
and
sub
bound
push
loopne
cltd
test
pop
dec
mov
std
xchg
mov
cmp
jl
push
jmp
xchg
popa
xor
rorb
sub
add
inc
std
pop
cmp
mov
pushf
sbb
push
inc
cmpl
mov
adc
das
int
sub
sbb
cmc
dec
leave
jns
or
lds
enter
lahf
shr
pusha
ficompl
outsb
jp
push
lods
xor
push
mov
lahf
hlt
pop
repz
mov
mov
shll
test
pop
pop
jl
in
or
push
jp
cmp
pop
lods
mov
shld
into
mov
out
dec
std
mov
dec
adc
xchg
in
jg
add
xchg
inc
sbb
loop
enter
sti
out
pushf
pop
push
push
cmp
jb
mov
nop
dec
fdivs
pop
shl
pop
ret
add
cs
mov
ficomps
sbb
cmpsb
pop
sub
xchg
jns
jo
jo
sub
pusha
sub
jle
dec
js
stos
and
adc
inc
ja
sub
cmp
lds
xor
incb
lea
ret
pop
aad
insl
out
sub
add
inc
lds
pusha
mov
std
cmpsl
push
mov
repz
dec
gs
aas
insb
xchg
sub
push
scas
add
add
mull
fld1
test
arpl
cmpsb
lret
sub
sub
les
dec
and
adc
in
sbb
lock
gs
sub
jl
hlt
loop
adc
or
xchg
in
ror
mov
mov
push
mov
je
sub
test
ljmp
loop
or
cld
and
jbe
or
mov
mov
jmp
pop
hlt
mov
xchg
pop
arpl
scas
xor
pop
xchg
mov
add
into
in
neg
mov
or
jle
scas
sub
add
mov
dec
outsb
sub
ss
inc
adc
psubb
out
cmp
outsb
adc
dec
out
inc
xchg
std
daa
lcall
xchg
in
sbb
sbb
sti
lahf
faddp
sbb
sti
mov
repnz
dec
or
lcall
gs
jge
push
mov
jge
addl
imul
sarl
js
mov
in
jbe
cmpl
aam
jle
pop
mov
out
dec
jns
leave
jbe
notb
cmp
ret
out
cmp
lods
pop
fimull
and
mov
aam
je
xchg
ret
cmpsb
cmp
mov
stc
inc
mov
jg
addr16
xor
js
mov
arpl
push
sbb
mov
leave
add
cmp
mov
mov
xor
push
mov
xchg
jb
or
out
push
sbb
cmpsb
mov
jb
das
push
outsl
push
dec
xchg
xor
ror
sbb
cld
pop
movsl
push
loopne
sbb
fxch
xchg
and
movl
or
jl
sub
sbb
icebp
or
stc
lods
pop
loop
sbbl
adc
xchg
icebp
xlat
mov
xchg
mov
jno
ljmp
imul
int3
dec
jle
cli
daa
andl
add
fcomps
scas
arpl
in
push
sbb
popa
xchg
jge
or
cli
int3
mov
add
mov
inc
push
sub
dec
jge
push
sbb
mov
cmp
lcall
iret
flds
push
mov
in
cltd
sub
fisttps
arpl
adc
lcall
pop
sti
and
push
jo
test
out
sub
push
daa
mov
add
les
bnd
js
mov
mov
dec
dec
jae
mov
mov
aad
daa
fstps
imul
mov
in
fidivrs
sbb
bound
mov
jo
int
and
push
cmp
movsl
leave
mov
push
push
bound
cmp
call
adc
pusha
dec
scas
popf
xchg
fbstp
lcall
pop
out
std
bound
dec
adc
mov
movsl
mov
mov
and
ss
outsl
and
out
sub
cld
fld
adc
cmp
ljmp
jno
xchg
jo
sahf
out
loope
imul
and
and
push
xlat
outsb
lock
inc
dec
mov
push
mov
mov
push
xor
sahf
sti
mov
add
jmp
lret
and
dec
pushf
xor
dec
pusha
lcall
notb
out
jle
mov
push
jo
sub
mov
pop
mov
repz
mov
pop
icebp
sbb
gs
mov
adc
dec
pusha
out
nop
jns
das
dec
or
or
mov
inc
add
aam
cmpsl
es
ss
test
outsl
into
push
loope
xchg
or
daa
fldt
xor
jne
cmc
jmp
aas
movsb
enter
in
enter
jmp
loope
add
loopne
sub
inc
sahf
je
mov
jne
notb
sbb
cltd
lret
xor
mov
inc
push
lea
jl
xor
lret
mov
movsb
in
pop
sbb
mov
adc
mov
mov
adcb
push
idivb
pop
mov
lock
pop
sub
imul
dec
push
negl
sbb
in
pop
adc
dec
filds
push
cmp
mov
dec
mov
loope,pn
clc
jge
fs
iret
ror
ja
inc
nop
imul
divb
movl
scas
js
lods
mov
mov
in
sbb
push
mov
or
jl
lret
movsb
in
test
mov
ss
mov
jo
repz
mov
ret
cmp
setnp
xor
mov
imull
frstor
push
pop
mov
xchg
sub
roll
and
add
lea
xlat
jno
pushf
mov
sub
mov
xlat
sub
iret
jno
aas
or
lods
or
sub
int
cmp
lcall
cmp
push
aaa
comiss
jno
push
mov
ja
ficoml
xor
enter
out
add
je,pt
sub
scas
dec
loop
es
push
fldl
sahf
mov
mov
stc
xlat
andl
sbb
add
sub
add
pop
push
insb
je
pop
shlb
loopne
aaa
lcall
and
xchg
loop
clc
xor
lock
mov
cmp
mov
lret
cmpsb
js
lret
add
jge
xchg
xchg
lret
ret
pop
adc
push
push
and
mov
test
or
shll
push
pushf
loop
stos
mov
ror
inc
inc
pop
push
xchg
mov
jb,pn
insl
mov
dec
adc
insb
mov
dec
pop
sub
mov
imul
iret
cmc
mov
in
enter
sub
sbb
cltd
mov
cmp
and
ja
cld
dec
and
mov
stc
sbb
mov
aad
sub
int3
jge
fdivs
negl
js
jne
notb
inc
sub
sbb
fistps
inc
cmp
fwait
cmp
dec
movsb
aam
pop
or
lcall
fcoml
or
loopne
imul
jge
mov
mov
mov
jne
push
push
sub
lea
in
lcall
movsl
arpl
cmc
addl
mov
xor
dec
sub
jns
iret
mov
sbbl
adc
cltd
mov
daa
cmp
movsl
inc
jmp
xor
sub
jecxz
and
inc
ja
jmp
adc
jns
mov
in
insl
outsb
in
iret
jp
pop
dec
ja
and
pop
mov
mov
jno
gs
shll
shl
repnz
fsubrl
inc
out
pop
lret
loope
mov
test
adc
in
pop
mov
sbb
jmp
xacquire
mov
cmp
xchg
repnz
loop
mov
xchg
jp
pop
jge
iret
stc
cmpsl
sbb
dec
lahf
daa
mov
xchg
subb
cltd
fdivrl
or
adc
push
mov
in
pop
cmp
push
daa
and
pop
jne
into
imul
in
fldl
add
dec
movsb
xchg
adc
pushf
lock
cmp
pop
pop
jne
mov
and
rcrb
lods
jmp
pop
movsb
bound
add
in
aas
dec
insl
mov
fs
mov
mov
jl
mov
jecxz
inc
cwtl
adc
jae
pop
mov
inc
lret
inc
jne
sbb
pop
jmp
adc
fcom
dec
add
xor
shl
stos
je
cmp
out
xchg
das
mov
cmp
bound
adc
mov
ret
fcoms
and
sub
push
dec
loope
pop
jg
cmp
ret
in
adc
and
popf
dec
sub
fistpll
mov
adcb
pop
xchg
inc
mov
dec
and
sbb
adc
lea
xchg
int3
fisubs
inc
daa
push
mov
add
xor
aas
jno
enter
or
jg
test
lret
sbb
xor
aad
clc
cltd
and
mov
mov
xor
and
in
add
leave
in
inc
xor
xor
cmp
push
and
pop
cmp
enter
les
sti
cmp
adc
lret
lods
push
rcrl
sub
pop
ror
rcll
int
mov
mov
fcomps
icebp
lods
xor
inc
push
ucomiss
push
pop
lcall
adc
and
call
inc
jns
xor
xchg
int3
test
xor
cs
xor
insl
insb
stc
lods
sbb
or
push
adc
xchg
stc
mov
jp
imul
hlt
cmp
fmull
aam
cmpsb
imul
xlat
imull
stc
dec
cmp
or
push
sbb
ja
int
mov
mov
scas
js
add
int3
shlb
cmpsl
ljmp
xor
sbb
andb
fldt
sbb
jbe
loopne
push
adcb
jmp
jp
fwait
add
mov
mov
xchg
jmp
mov
inc
xchg
cmp
andb
dec
je
shlb
repnz
fs
jnp
mov
stos
in
hlt
xchg
je
sarb
sbb
add
pop
loope
pop
sbbl
imul
mov
fcomp
inc
clc
int3
cmp
and
push
jb
ss
mov
inc
and
inc
mov
popf
mov
ljmp
dec
outsb
jne
das
mov
sbb
sub
lret
and
mov
hlt
sub
or
imul
mov
adc
adc
adc
inc
inc
shrl
enter
pusha
xlat
mov
jo
mov
or
pushf
inc
test
push
push
ljmp
or
mov
test
loopne
fnstcw
push
adc
fisubs
cwtl
cld
sahf
sbb
pop
dec
push
lock
xor
or
aaa
inc
jbe
jp
adc
push
adc
pop
mov
adc
stos
jnp
xchg
out
sbb
fdiv
xchg
repz
mov
and
hlt
xchg
mov
fcompl
sub
mov
jbe
jmp
mov
mov
aad
push
cmp
xor
enter
insl
out
dec
inc
xor
mov
enter
fsubs
xchg
or
outsb
cmp
pop
in
test
push
jecxz
mov
rol
std
fdivrl
pop
int
das
ret
inc
subb
sbb
mov
mov
ja
adc
data16
cmp
mov
sbb
and
sahf
hlt
mov
jp
push
scas
outsl
mov
leave
jbe
fnstsw
mov
xor
lock
sub
cmp
out
pop
repz
imul
or
xchg
nop
imul
sbb
mov
fsubr
push
push
xchg
rolb
ret
les
cmp
jbe
je
in
dec
dec
push
cmpl
add
lret
xchg
jmp
rorb
add
xor
ret
pop
in
xchg
and
pop
ds
lret
xchg
xor
cmpb
int3
pop
icebp
clc
out
inc
jmp
xor
lods
arpl
cmp
ljmp
enter
or
inc
mov
enter
popa
add
pop
imul
mov
mov
mov
xchg
in
push
adc
push
cld
xchg
into
jne
jmp
fidivrl
in
pop
inc
or
add
cmp
sbb
inc
pop
cmp
pop
adc
push
scas
add
loopne
addw
shr
xchg
add
mov
rcrl
pop
test
sti
push
out
std
cmp
data16
daa
push
sbbb
loopne
mov
mov
idivl
addr16
adc
mov
pusha
xchg
aad
adc
arpl
dec
cmc
pop
push
mov
mov
das
mov
leave
aam
pop
iret
cmp
stos
ret
adc
pop
or
jmp
push
xor
pop
aam
cli
sbb
mov
outsl
mov
out
stos
js
and
cmp
sub
cmp
mov
jle
in
push
fisubrs
out
cmp
test
xor
pop
push
mov
sub
fsubrs
adc
sub
cmc
outsb
xorb
push
xor
add
rcr
cmpsb
out
into
pushf
or
jo
test
inc
test
cltd
push
loop,pt
add
jns
xor
popf
arpl
push
xor
xor
jmp
incb
add
incb
push
cmp
shlb
and
into
sub
add
cltd
daa
test
jne
sbb
ret
dec
xlat
mov
neg
insb
fwait
or
jne
ror
mov
jae
das
rcr
xor
pop
xchg
dec
sbb
and
pop
aad
cmp
dec
dec
mov
into
ss
mov
call
adc
mov
inc
scas
das
xor
bnd
cmp
out
mov
and
and
jge
cmc
xor
pusha
stc
js
arpl
scas
dec
popf
outsl
push
pop
or
scas
lods
call
jno
xchg
adc
dec
jmp
popf
jb
mov
push
aad
pop
push
and
mov
push
aaa
je
mov
rcrb
inc
stc
les
es
mov
jns
mov
jb
push
popf
imul
cmpsb
hlt
pop
mov
jae
arpl
pop
add
sub
out
cmpb
pushf
aam
scas
and
addr16
cwtl
clc
cwtl
mov
out
cmpsl
into
movups
adc
leave
fnstenv
mov
addr16
pop
mov
inc
ss
xchg
stos
add
push
in
fisubrl
cmp
je
cmp
rclb
mov
jb
or
push
in
inc
or
loope
cli
sbb
sbb
out
imul
bound
cmpb
punpcklbw
mov
lret
jae
cmp
push
out
xchg
push
out
and
mov
dec
xor
dec
pop
or
dec
xor
ds
loope
inc
pop
fcomps
into
sub
jmp
push
ror
out
mov
fxch
std
jb
push
mov
xor
pop
jl
fstpt
fldt
outsl
into
push
cld
imul
push
sub
insb
pop
lods
aas
and
ficompl
xchg
fsubl
cmpsb
mov
fisubrs
xchg
mov
push
cmp
lea
pop
jmp
dec
or
cs
loope
leave
mov
inc
xor
and
mov
enter
imul
imul
xor
push
pop
mov
sbbl
or
mov
aaa
hlt
cmpsb
and
push
daa
mov
push
inc
xor
pop
out
jbe
popf
jo
xor
dec
xchg
movsl
add
mov
mov
xor
sbb
sahf
add
and
cmp
sub
mov
adc
out
jae
pop
sub
push
jno
push
and
rclb
mov
ret
outsb
test
jnp
fwait
ss
cmp
jp
lods
das
push
cmp
inc
cmc
adc
add
cs
mov
fs
ljmp
and
inc
loopne
push
and
pop
pushf
and
cmp
cmpl
push
in
mov
mov
std
sub
movsb
icebp
add
fadds
mov
adc
scas
jbe
mov
mov
sub
add
mov
ret
ja
fsub
in
xchg
imul
sti
bound
cltd
lock
xchg
xorl
out
and
pop
repnz
adc
cmp
sbb
mov
cmc
lds
jmp
mov
jns
cmc
xlat
fdivl
hlt
mov
or
xchg
lock
inc
add
or
pop
loope
inc
es
push
add
pop
sahf
cld
xor
xor
out
mov
push
sarb
sbb
dec
xchg
sbb
mov
popf
jecxz
mov
mov
lods
pop
or
xchg
push
and
loopne
cmp
sti
add
mov
call
sub
mov
push
xor
insl
xchg
daa
in
inc
outsl
into
jbe
rolb
mov
cmp
cli
sbb
pusha
sub
fs
mov
dec
xor
jle
mov
out
idiv
arpl
test
insl
xor
mov
pop
cli
jae
xchg
mov
sbb
rolb
dec
xchg
add
sbb
lret
ret
inc
add
repz
mov
jmp
pop
fs
xlat
into
sarb
shr
or
mov
int
out
aaa
pop
pop
pop
jp
mov
test
xor
sub
mov
sbb
in
add
inc
int
adc
or
testb
iret
lahf
repnz
mov
and
mov
jae
int
mov
pushf
add
outsl
sub
and
push
loopne
sbb
je
movsl
push
or
sbb
dec
test
out
inc
pop
andb
cmc
mov
mov
insl
cmp
push
icebp
pop
cmpl
fwait
mov
ret
pop
inc
incb
insb
lret
test
sahf
imul
mov
xchg
jb
int
pop
out
mov
outsl
test
popa
mov
gs
jp
out
sub
inc
mov
cmp
fisubl
pop
push
xor
push
rcrl
adc
pop
cmp
pop
or
scas
out
or
push
or
pop
ljmp
test
fdivrl
inc
pop
jg
push
sahf
int
ja
fwait
mov
xchg
mov
xor
pop
inc
jnp
xor
fpatan
jle
fs
xlat
lds
out
fdivrs
test
dec
push
jecxz
xlat
adc
fwait
pop
pop
mov
xlat
add
xor
out
cltd
repnz
cmp
mov
sbb
ljmp
jl
push
enter
xchg
and
push
aam
js
fisubrs
aam
cmp
xchg
testl
iret
cli
mov
add
int3
xlat
adc
or
xor
mov
push
and
or
mov
ljmp
push
xchg
or
dec
mov
jnp
lret
out
xchg
and
push
insl
fwait
add
push
sub
push
icebp
cwtl
push
test
push
mov
stos
jp
repz
pop
xlat
push
xchg
mov
or
scas
or
aaa
call
into
add
sbb
les
and
hlt
dec
mov
sub
adc
out
jle
stc
sub
xchg
add
xchg
comiss
aas
and
inc
mov
sti
add
ret
aad
and
lods
sbb
movsb
sbb
pop
in
sti
sub
in
stc
add
lea
lret
push
pop
insl
jmp
mov
repz
xchg
aam
adc
inc
sahf
leave
mov
es
scas
js
dec
or
jecxz
out
ss
mov
add
jno
mov
push
int
add
aas
mov
negb
and
es
sbbb
push
sub
and
jae
lahf
dec
push
ds
xchg
jnp
in
pop
inc
jg
mov
scas
jp
mov
pop
jns
inc
rclb
aad
xlat
jle
jmp
mov
aam
push
inc
pop
jecxz
mov
outsl
jnp
mov
into
pop
cli
push
add
cmpsl
inc
push
dec
stos
inc
out
dec
dec
mov
lret
xchg
jae
xor
or
and
xor
adc
lea
push
mov
into
sbb
adc
movsb
arpl
jmp
enter
push
jl
sbb
mov
jns
dec
add
jns
xor
or
out
push
xchg
movsb
or
in
add
iret
es
subb
add
cli
xchg
out
into
push
sarl
jno
jne
in
fdiv
punpckhdq
pop
adc
xor
jmp
sub
pop
pop
into
lea
lds
xchg
jnp
out
test
scas
ds
dec
fiadds
call
push
arpl
xchg
inc
jnp
jne
dec
inc
cli
scas
enter
xchg
cld
push
or
ret
movsl
or
call
jle
ret
lock
imul
dec
in
push
adc
incl
cltd
test
ja
sub
stc
adc
mov
pop
mov
mov
mov
xor
sti
push
mov
gs
jp
dec
in
fpatan
jmp
inc
dec
pop
or
sbb
xchg
xor
filds
stos
fcompl
xor
inc
int3
mov
ret
movsl
outsl
out
arpl
pop
xchg
xor
ja
xor
mov
sub
fisttpll
testb
jp
sbb
out
pop
cltd
jl
ret
cld
inc
sbb
outsb
pop
imul
test
mov
mov
cltd
dec
movsl
fsubr
mov
leave
scas
push
ss
sbb
cmp
xlat
cmpsl
fsts
push
aas
ljmp
push
mov
test
xlat
mov
sbb
add
add
xchg
ss
stos
cmp
or
xchg
jns
repnz
sbb
pushf
and
sbb
fistl
daa
stos
outsl
cld
out
lds
fdivrp
stos
push
sahf
lea
mov
cli
mov
cmc
cmc
lcall
je
and
push
inc
fwait
insl
xchg
and
xor
mov
cmp
out
stos
std
mov
icebp
mov
testb
pop
xlat
clc
pop
mov
ret
cmp
xchg
sbb
ja
mov
into
scas
push
int
rcrb
pop
sbb
jne
popf
add
or
push
mov
call
imul
into
test
mov
fwait
or
sub
add
jp
notl
push
mov
mov
push
cmpsl
or
andl
cmpsb
hlt
mov
mov
std
mov
or
or
jns
push
js
xor
jmp
push
pop
lahf
jl
or
je
test
push
mov
sti
jl
xor
lock
fwait
in
mov
and
iret
lcall
adc
fists
adc
push
rcll
sbb
loop
fildl
mov
arpl
adc
cmc
in
nop
mov
stos
enter
sub
fs
push
jle
subl
add
andb
lods
js
mov
dec
cmp
shll
xchg
int3
push
loopne
sbb
in
pop
loop
and
out
or
push
inc
fsub
mov
xchg
and
push
jns
dec
mov
std
call
and
jb
pop
dec
jnp
out
jl
inc
jmp
sbb
mov
push
sahf
mov
sti
in
jae
add
lret
adcl
pop
mov
leave
scas
and
and
mov
daa
lods
push
pop
add
dec
xchg
pop
or
add
daa
mulb
inc
sbb
pop
mov
push
jnp
sub
jl
sbb
lcall
push
or
mov
or
sub
push
insb
cmp
imul
mov
js
mov
movsl
pop
fstpl
xchg
test
fisubs
sbb
cwtl
mov
popa
adc
shll
ljmp
jmp
mov
inc
insl
mov
scas
push
addr16
sub
test
cmpsb
pop
pusha
sub
xchg
or
jno
push
mov
sbb
push
in
jmp
mov
scas
test
inc
lcall
pextrw
cmp
lods
fisubl
push
push
mov
rorl
js
push
in
mov
shrd
and
sti
mov
push
xchg
arpl
dec
movsb
mov
loop
adc
mov
xchg
mov
cmpsl
scas
jecxz
or
pop
or
mov
push
lret
adc
fwait
movsl
aas
les
popa
repnz
out
xor
rcrb
jo
jno
lea
popl
mov
cmpsb
lret
jno
push
or
arpl
pop
bound
insb
sbb
jnp
notl
mov
lock
loop
movsb
xchg
adc
xor
movsl
cs
test
mov
push
pop
hlt
fsubl
lock
lret
dec
aad
ret
add
mov
lock
shrb
pop
ss
cmp
mov
add
add
mov
and
repnz
shll
sub
roll
xor
jge
xor
xor
mov
lods
dec
mov
aas
iret
dec
in
iret
push
test
xor
movsb
test
mov
stos
loopne
inc
mov
xchg
aam
add
push
adc
inc
outsl
ljmp
adc
ja
or
pop
fdivs
push
push
pop
lahf
ljmp
pop
dec
xchg
add
imul
js
pop
cmp
scas
jno
push
and
cmp
add
xor
rcrb
push
outsl
nop
cmp
imul
or
je
popf
out
cmp
xlat
fiadds
lods
or
stc
and
je
adc
je
sub
jns
sbbb
cwtl
pop
push
dec
cmpsl
fs
or
lds
cmp
fwait
pop
cs
in
test
sub
mov
in
orb
jge
mov
mov
xor
push
dec
aaa
rclb
cmp
bound
and
lds
mov
rol
jl
outsb
push
jo
js
stos
ja
cld
push
add
mov
sahf
xlat
jo,pn
mov
rcrl
fldl
jmp
fcomps
push
xchg
xchg
push
xchg
lods
andb
lds
test
inc
sub
sub
mov
stos
roll
or
arpl
repz
stos
dec
popa
jmp
xchg
ficomps
adc
iret
out
dec
mov
mov
xchg
lods
and
push
outsb
mov
xchg
lret
inc
cwtl
push
sar
jb
mov
data16
iret
mov
sbb
addr16
xchg
cmc
mov
xchg
lods
clc
cmp
mov
cmp
lock
movsb
nop
sub
dec
cli
or
sbb
dec
fiaddl
in
inc
and
je
fists
mov
xchg
repz
cmpsl
aad
pop
in
ficoml
pushf
fdivr
xchg
fbstp
adc
sbb
pop
hlt
inc
jns
cmp
repnz
test
cmp
jnp
hlt
sub
inc
sbb
pop
bound
out
test
inc
push
mov
xor
sbb
movsb
sbb
jne
cwtl
lods
dec
ja
dec
cmpsb
mov
mov
push
arpl
add
cmp
loope
outsl
mov
sti
in
inc
dec
inc
jp
mov
outsb
pop
mov
push
mov
inc
faddl
sub
addr16
enter
dec
cmp
sbb
jmp
mov
xchg
fs
repz
leave
add
cmp
sbb
ss
xor
and
push
stc
int
test
or
in
sbb
mov
jo
fs
or
inc
push
adc
aaa
xchg
sbb
fistps
sbb
fwait
outsl
ror
pop
aas
imul
roll
ds
inc
fstpl
leave
push
mov
stc
cmp
xor
movd
sub
dec
and
sbb
int
test
push
xchg
push
xchg
jp
dec
insl
bound
cld
push
push
cmp
xor
xchg
std
notb
jmp
fwait
or
mov
xor
inc
out
or
jno
push
sti
call
imul
sbb
xchg
xor
adc
mov
push
test
iret
fsubrs
cmp
jp
sub
fcmovu
sbb
dec
in
les
and
arpl
nop
lret
test
jo
shrb
cmp
lret
sub
sahf
arpl
frstor
xor
es
scas
add
mov
inc
sbb
jo
movsb
push
mov
ds
xor
pop
xor
push
lock
jb
adc
int
outsb
cltd
mov
rcl
in
fsubp
sub
adc
dec
aaa
cmc
push
jne
ret
das
add
push
out
lock
xchg
sbb
xchg
popf
cmp
cmp
sub
stos
xchg
mov
lahf
inc
xchg
sbb
add
bound
lods
sub
or
cmp
lea
jb
xlat
mov
jmp
sub
sbb
stos
xor
lret
pop
xchg
mov
scas
std
sahf
aam
xchg
arpl
mov
add
adc
sub
sbb
sub
add
dec
push
add
xchg
in
sbb
pop
mov
add
xchg
lock
in
insb
retw
jae
mov
xchg
push
gs
inc
daa
std
jmp
in
jmp
sarb
leave
enter
lods
mov
cmpsb
and
dec
into
sbb
test
negb
test
mov
mov
cltd
sub
sub
xchg
lock
call
cli
adc
inc
test
ljmp
mov
lock
adc
pmovmskb
mov
std
pop
jne
mov
sahf
test
decb
fs
xchg
ja
enter
fisubrl
fisubl
dec
clc
movsb
and
dec
jno
or
cmp
jmp
mov
cmp
scas
test
movsb
inc
insl
cld
mov
lock
pop
das
cmp
arpl
js
mov
gs
xchg
out
gs
mov
sbb
stc
iret
pop
mov
ja
gs
test
das
fimull
pushf
in
mov
and
sbb
mov
mov
std
mov
int
xor
xchg
jg
outsb
pop
data16
adc
pop
pop
xchg
xchg
lahf
add
add
int3
lods
jecxz
das
cmp
inc
xor
mov
jmp
lods
mov
pop
inc
inc
test
xchg
aas
hlt
cld
mov
mov
leave
aas
test
mov
mov
fwait
mov
iret
popf
js
sbb
int3
inc
xchg
mov
mov
mov
pop
sbbl
out
jne
sub
mov
mov
adc
pop
cltd
rorl
xchg
dec
xor
dec
adc
pusha
loopne
aaa
jno
movsb
aam
test
loopne
in
cld
insb
cmpl
mov
push
xor
sbb
adc
adc
in
xchg
fsubs
jl
lock
lahf
ds
les
stos
not
xchg
ja
cli
xor
cmovns
mov
in
pusha
mov
es
xchg
in
jge
lods
fcoml
dec
mov
cli
xor
js
or
mov
lret
jns
iret
lods
mov
sti
mov
xchg
or
xor
or
or
sbb
les
lods
aaa
int
dec
cmpsb
movsl
out
aaa
mov
movsb
inc
in
jmp
pop
cmpsl
repz
lods
mov
in
ret
imul
ret
mov
test
jnp
adc
lock
clc
xorps
sub
and
cmp
dec
adc
xchg
pop
flds
or
xor
lock
sbb
sar
int
cmp
pushf
ret
movsb
aam
mov
push
mulb
push
mov
ret
xchg
aam
mov
aas
pop
pusha
and
rclb
lods
lods
and
mov
aad
cmc
cwtl
hlt
pop
mov
cmp
push
sbbb
inc
xor
cmp
sbb
inc
mov
out
adc
xchg
jno
push
cmc
scas
inc
push
push
in
sub
inc
and
rcrb
fsts
aad
es
es
mov
pushf
mov
fidivl
xor
and
loopne
pop
inc
movb
mov
cmp
pop
inc
lret
cltd
add
cmp
cmp
xlat
mov
lods
dec
sub
mov
fdivp
roll
or
pop
sarb
scas
lcall
fwait
jmp
mov
lahf
orb
out
out
xchg
aas
mov
push
cli
inc
pop
cmc
insb
inc
psrad
sbb
jl
das
fnstsw
aam
push
lret
jne
daa
lahf
cmp
adc
and
sbb
popa
jecxz
mov
mov
cmpb
and
aad
inc
pushf
push
pop
cld
cwtl
iret
dec
xor
mov
push
out
loopne
aaa
mov
pop
ret
lds
adc
bound
mov
mov
in
or
es
fwait
push
xor
xor
les
dec
add
adc
push
push
addr16
jb
xchg
cli
shrb
ret
aaa
mov
mov
or
data16
icebp
lods
rcl
xchg
fdivrs
cs
std
and
add
cmp
mov
or
sub
fstl
loop
iret
cwtl
data16
rcrb
aad
fstps
and
add
mov
xor
xchg
jbe
push
push
inc
negb
je
sbb
fwait
mov
push
mov
mov
ljmp
nop
in
js
lret
in
cmp
xchg
addb
xchg
mov
stos
pop
push
and
add
xchg
jecxz
fs
pushf
mov
into
cmp
mov
js
adc
xchg
loope
mov
ficoml
test
push
and
imul
ret
mov
push
out
inc
sti
fwait
lahf
xor
shr
mov
mov
data16
test
pop
bnd
sbb
inc
or
repz
in
pop
clc
mov
loopne
and
addl
bound
roll
mov
or
jbe
cmc
cmp
cmp
pop
cld
psubw
icebp
mov
xor
je
and
bnd
xor
mov
mov
xchg
inc
shl
push
mov
mov
bound
scas
in
addl
rcrb
sbb
je
cmpsl
iret
iret
push
ss
jl
nop
aam
cmc
shl
xor
sbbl
adc
or
mov
inc
xchg
arpl
ror
sub
les
pop
push
sbb
sub
aam
lods
inc
das
and
lret
xlat
movsb
jmp
and
hlt
stos
repnz
xchg
xorb
pop
cltd
push
popl
fwait
xor
enter
sbb
idivb
add
sbb
test
inc
push
jl
daa
push
push
mov
shr
addr16
and
xchg
popf
mov
and
cwtl
pop
pop
sub
add
dec
push
fdivl
dec
ja
xchg
push
loopne
imul
rol
fildll
into
mov
mov
xor
xchg
negl
daa
jg
xorb
adc
daa
je
jg
test
out
insb
hlt
stos
aaa
js
inc
cmp
ds
jmp
movsb
sbb
mov
les
cmp
pop
push
mov
aam
jmp
neg
movsb
fcomps
dec
mov
xchg
dec
pop
ja
push
sub
jae
orl
xchg
xchg
ret
mov
jmp
out
dec
mov
push
lods
sbb
jbe
movsl
fdivrl
insb
xchg
jae
jno
fadds
jmp
call
sub
popa
mov
jge
arpl
adc
in
jge
pushf
mov
js
iret
mov
inc
jge
ljmp
pusha
dec
mov
stos
gs
sarb
pop
xorl
adc
loopne
xchg
fidivrs
pop
iret
lock
insl
push
pop
cmc
cld
mov
or
sub
sbb
movsl
and
adc
dec
jl
jle
cmp
stos
jns
mov
pop
aam
out
loope
out
dec
jp
jl
and
out
jle
mov
ficomps
icebp
mov
push
and
ja
gs
ss
pop
sahf
lea
js
pop
and
repnz
sbb
pop
ss
sub
loopne
repz
and
sbb
xchg
add
mov
mov
mov
icebp
imul
test
cmp
leave
xchg
aam
lret
ja
test
dec
add
adc
xor
sbb
jns
pop
ret
cmp
sbb
fstl
dec
or
lods
scas
je
inc
mov
std
push
xor
or
stos
das
in
arpl
ds
in
pop
pop
sbb
sahf
jge
or
jp
pop
into
shl
inc
ss
xor
mov
xchg
push
bound
xor
repnz
xchg
in
push
mov
or
mov
sub
push
cld
stc
rorb
clc
ret
imulb
test
pop
push
scas
mov
testb
cmp
jle
lds
mov
adc
pusha
push
sbb
bound
psrlw
into
js
gs
call
cmp
inc
jno
mov
ds
or
cmpsb
xchg
add
xchg
push
test
pop
or
fnstcw
sbb
push
jp
or
mov
fwait
xlat
sub
pop
fldl
mov
std
push
and
shr
lret
cltd
jb
mov
das
jle
and
jecxz
test
push
shll
add
cmp
orl
fwait
xchg
mov
jmp
scas
add
xor
xchg
cwtl
ficomps
sub
mov
clc
adc
flds
sub
mov
gs
mov
push
fcoml
inc
data16
adc
push
lret
push
cwtl
mov
roll
clc
xchg
mov
psubd
aad
nop
stc
inc
in
pushl
jno
in
mov
pop
or
loop
and
mov
xor
cmp
gs
out
cmpb
lods
lock
fwait
js
inc
gs
sub
jbe
pusha
push
add
or
jmp
cmp
and
and
test
push
js
rcll
jbe
inc
outsl
or
cmpsb
fildll
push
fcom
xor
ror
insb
lahf
cwtl
mov
pusha
fcompl
mov
lcall
xchg
rdtsc
imul
pop
loop
inc
push
subl
test
xchg
call
mov
add
dec
nop
loopne
jo
mov
addr16
out
push
clc
jb
pop
xor
fs
xor
cmpsl
mov
and
cmp
inc
insl
cmp
sbb
cld
mov
and
mov
js
les
lcall
pushf
add
iret
sub
xchg
out
jnp
shlb
std
inc
pop
push
jge
repnz
add
fildll
jmp
cmp
test
pop
notl
pop
std
in
jne
dec
insl
daa
dec
xchg
les
popa
pushf
out
jb
push
jne
pusha
mov
or
test
insl
or
cmpsb
call
out
and
adc
push
inc
loope
dec
je
or
push
inc
dec
popf
es
xor
and
and
pushf
in
mov
movsb
enter
pop
fsts
add
inc
mov
lods
inc
mov
stc
ds
cmpsl
mov
repz
pop
and
or
cld
je
cmp
stc
sbb
iret
stos
cmp
xor
inc
or
xchg
pop
pop
cmpsl
lods
pop
cmp
pop
xchg
dec
jge
push
stos
out
leave
cmp
mov
test
xor
xor
and
mov
ret
imul
jg
fistps
pop
loope
mulb
out
jge
xchg
mov
lea
mov
pusha
loope
js
xchg
mov
popf
sub
insl
jb
or
cmp
cmp
std
iretw
in
pop
pop
jle
cmp
roll
xor
lods
cs
push
push
mov
sar
xchg
cltd
xor
xchg
fdiv
loope
xor
inc
jae
in
pusha
cmpsb
push
repz
int3
inc
into
push
dec
rcrl
cmp
loopne
cmp
es
push
cmp
out
and
cmp
xor
js
xchg
pop
lods
call
out
xchg
das
mov
dec
mov
fwait
push
jbe
fcomps
mov
imul
adc
fidivrs
divl
fs
adc
xor
adcl
jnp
cmp
fmull
or
insl
adcl
dec
es
or
gs
out
pop
dec
scas
push
aam
xorl
xchg
pushf
add
add
sbb
jp
ret
outsl
xlat
xchg
sarl
jno
lock
lods
push
adc
movl
and
xor
loop
mov
sbb
inc
cld
out
mov
icebp
xor
fs
rcll
jmp
jo
aam
xorb
mov
mov
aaa
jne
sub
xchg
imul
pop
loop
add
xchg
jno,pt
adc
das
cmpsb
pop
pop
xor
inc
xchg
lcall
jecxz
xorl
scas
mov
inc
std
push
dec
xchg
inc
cmp
pop
push
dec
jae
mov
int3
pushf
loopne
adc
jp
and
mov
testb
sub
jnp
pop
repz
xchg
mov
out
shll
add
sbb
dec
pop
pop
adc
mov
das
push
mov
pusha
dec
cmp
add
stos
pop
lcall
dec
icebp
loopne
test
inc
test
mov
push
dec
stos
ror
test
loopne
push
pcmpgtb
or
and
scas
sti
cmp
mov
sub
mov
jp
mov
push
imul
mov
mov
inc
into
xchg
fbstp
mov
mov
test
add
addr16
and
jecxz
rcll
mov
push
sbb
inc
xor
clc
popf
mov
loop
rcll
and
mov
push
mov
mov
jmp
fisubs
lret
push
andl
out
pop
mov
std
das
jl
push
and
sarb
scas
fstpt
cmp
push
mov
inc
sbb
mov
shl
cmc
add
ljmp
test
xor
inc
mov
fstl
neg
pop
xor
imul
pop
cmp
lea
push
pushf
repz
mov
ror
xchg
clc
addl
mov
fs
dec
push
in
popa
jle
mov
mov
adc
cmp
push
jg
push
sub
lock
mov
pop
sbb
gs
mov
push
es
aaa
jp
sbb
mov
rorl
inc
dec
add
dec
and
xchg
and
data16
xchg
hlt
sbb
push
cli
sub
pop
inc
sahf
loop
frstor
loopne
fwait
xchg
pop
push
cmpsl
daa
jo
inc
test
xor
jnp
repnz
or
fidivs
pop
mov
xor
test
sub
inc
adc
decb
lods
jle
or
mov
dec
fnstsw
clc
mov
xor
dec
sub
xor
push
or
pop
xchg
and
stos
cmp
or
or
mov
mov
push
cs
scas
mov
and
out
lock
rcrl
fcompl
inc
and
mov
mov
popa
mov
movsb
js
and
arpl
xchg
mov
lahf
repnz
sub
pop
or
xchg
aam
sbb
sar
cltd
jl
lds
mov
repnz
xchg
push
pop
iret
clc
mov
sbbb
lods
dec
mov
nop
imull
push
outsl
int3
insl
lahf
push
les
inc
dec
shrl
leave
shl
xchg
mov
push
cmpsb
stos
add
push
sub
sbb
inc
clc
sub
lcall
push
out
push
icebp
push
xchg
xchg
dec
shlb
lods
jp
xorb
addl
out
or
stos
mov
or
cltd
in
add
add
fiadds
mov
add
jnp
pop
xorb
cltd
arpl
insl
and
mov
xchg
pop
stc
clc
imul
das
jge
inc
and
push
mov
push
addb
stos
lods
dec
and
xor
aaa
iret
outsb
xor
mov
in
or
repnz
cmpsl
cmp
inc
sbb
clc
lods
mov
mov
or
xor
mov
dec
jle
mov
xlat
loope
pushf
andb
sbb
pop
pop
insl
lods
adc
incb
lcall
pop
xchg
dec
pop
xor
ljmp
push
outsb
jnp
xorl
jle
ficoml
test
pop
icebp
xor
jmp
repnz
jb
jecxz
pop
xor
in
mov
adc
xchg
ds
dec
lcall
xchg
cmp
mov
cmp
or
adc
clc
push
mov
test
jecxz
add
xchg
push
inc
pop
cmpsl
in
out
jp
sarl
mov
jbe
pushf
dec
jno
sub
push
mov
cmp
push
das
pop
xlat
adc
cld
andb
into
lods
int
iret
mov
cmp
cmc
mov
xchg
xchg
mov
cmp
fists
push
jmp
jl
dec
adc
mov
xchg
shll
js
inc
and
cmp
shr
andl
mov
jbe
jo
loope
loopne
lret
out
sub
mov
inc
call
fstl
pop
jae
mov
push
sub
or
inc
imul
push
pop
movsl
cs
pop
fadd
out
sub
arpl
int3
icebp
jae
daa
xchg
in
inc
cmpsb
ret
mov
cltd
pop
clc
xchg
push
and
and
call
xchg
sti
in
mov
pop
icebp
add
cltd
cli
or
and
push
movsl
and
inc
sti
mov
out
out
das
pop
mov
icebp
jne
aam
and
std
mov
mov
rolb
loope
adc
cmc
cld
jge
and
mov
arpl
faddl
cs
cld
pop
mov
dec
pushf
add
push
add
in
mov
xor
into
shr
ljmp
inc
repnz
sub
fwait
aas
inc
xchg
adc
stos
lahf
imul
popa
xrelease
push
pop
ret
daa
ja
cmp
std
or
ficompl
not
lret
adc
or
add
adc
stos
adc
dec
jle
sar
in
inc
stos
adc
pop
pop
cmp
cmp
xlat
sbb
insl
inc
popa
push
mov
adc
push
dec
cli
jb
push
adc
push
jge
xchg
sbb
mov
daa
push
xor
xchg
and
es
pop
mov
popf
or
mov
mov
je
lods
shr
jbe
mov
push
test
mov
ret
xchg
int
jo
mov
and
push
or
jae
xchg
xlat
sahf
sti
push
add
ds
pop
pushf
cmp
cmpsb
leave
jo
inc
cmpsl
cmp
pop
push
jo
inc
insb
aad
push
jmp
call
out
dec
orl
aad
sbbl
popw
cltd
lret
mov
fwait
repz
lret
jg
sbb
leave
test
push
jb
xchg
jno
ds
fsub
call
inc
add
aam
mov
and
movsb
jmp
mov
and
mov
test
add
hlt
lcall
in
mov
push
inc
aaa
call
jno
dec
dec
adc
idivl
stos
dec
cmpsl
andb
loop
lret
xchg
int
jne
cmp
sahf
adc
daa
adc
sbb
scas
add
movaps
jmp
or
add
sbb
mov
and
mov
sbb
adcb
or
mov
stos
xchg
popf
aam
insb
movl
enter
dec
cmc
add
jl
and
js
jno
inc
imul
testw
jle
out
xchg
stos
push
xor
stc
and
sbb
and
sub
ret
sbb
cs
pop
das
stos
or
add
and
leave
not
push
mov
add
xchg
mov
fs
xor
js
aas
js
cmp
psllq
pop
dec
enter
add
pushl
gs
testl
les
sbb
scas
subl
call
or
or
and
pop
and
or
movsl
mov
sub
dec
imul
dec
xor
and
test
hlt
iret
mov
fs
xor
les
and
mov
leave
test
mov
fnstsw
cmp
cmpsl
push
sahf
sbb
test
jmp
shlb
bound
xchg
sbb
xchg
and
sub
mov
bound
movsb
out
and
sti
mov
mov
sub
push
mov
sbb
mov
mov
loop
pop
mov
pop
js
shlb
fwait
sbb
cmc
add
test
into
cltd
imul
repnz
lret
lret
iret
nop
rcl
js,pt
in
loopne
mov
icebp
lods
rcrl
push
lock
ja
xchg
pop
andb
jae
icebp
rcr
fimuls
cli
scas
stos
lldt
popa
ds
les
adc
mov
bnd
cmp
jne
jecxz
out
dec
pop
cmpsb
push
cld
mov
push
add
imul
jo
ds
jp
pop
sbb
in
adc
scas
mov
rcll
dec
lahf
ds
add
les
sahf
cmpsl
arpl
push
mov
pop
inc
rcr
add
lods
pop
or
sub
scas
outsb
fisttps
xor
loop
fsubrp
adc
int
cmp
ja
cltd
icebp
cmpsl
test
cld
outsl
orb
pop
push
or
test
xor
in
and
hlt
fldl
xchg
lret
jg
jmp
aad
test
dec
sub
mov
mov
pop
stc
push
xchg
jmp
mov
mov
rclb
shr
notb
inc
je
mov
das
cmpsl
lcall
push
rcr
repnz
leave
inc
xchg
in
insl
sarb
outsb
sbb
hlt
jl
fsts
mov
cmp
mov
dec
inc
lahf
inc
cmp
ret
mov
mov
rolb
testb
xchg
push
xchg
cmp
mov
adc
cmp
mov
push
loope
mov
cmpl
mov
addr16
sbbl
xor
add
cmp
fs
sub
xchg
sub
stos
addb
test
test
xlat
sbb
cli
cmp
loop
push
sbb
loopne
pushf
push
mov
jp
sub
sarb
add
frstor
lret
orb
pusha
lret
jge
dec
int3
sbb
push
inc
imul
je
add
popa
xor
and
push
fidivrs
pop
push
stos
push
push
add
mov
out
mov
cmc
jl
das
jmp
addr16
nop
mov
mov
push
inc
imul
ljmp
ds
xorb
and
rcll
pop
mov
mov
dec
aas
fwait
pushf
and
xchg
inc
jmp
pop
movsb
leave
nop
pusha
push
cmp
or
jne
pushf
pusha
inc
mov
subl
cmc
pop
repnz
fwait
pop
aaa
rcrb
icebp
pop
inc
xchg
xor
jo
mov
sub
mov
dec
jg
jnp
pop
testl
in
xchg
push
cmp
loope
in
xor
pop
mov
sti
push
and
into
aaa
mov
stc
into
lcall
sti
mov
testb
lock
mov
push
lcall
jge
xor
sub
test
lock
inc
adc
cmc
and
pop
lock
add
xchg
jp
lods
mov
ja
cld
in
jle
push
inc
xor
std
pop
mov
sahf
inc
clc
repz
or
push
push
or
mov
lods
daa
jge
jbe
jae
mov
hlt
jl
sbb
push
ss
out
repz
lds
lret
sbb
cmpsb
pop
and
xlat
mov
mov
pushf
cmp
add
les
pop
push
cwtl
push
add
inc
stos
jno
ror
out
sub
sti
iret
xor
addl
mov
cs
push
or
and
outsb
scas
jne
dec
fwait
out
popa
dec
jg
sub
xchg
lds
sti
mov
xor
daa
int
and
push
insl
popf
out
cmpsb
push
or
lret
inc
xchg
shrl
xchg
push
outsl
fistl
jae
rorb
push
mov
jb
jo
ljmp
pop
xor
xchg
addr16
or
cmp
push
lcall
or
fsqrt
or
dec
in
sub
int
pop
jmp
inc
addr16
push
jle
gs
and
stc
loop
xchg
push
lahf
pop
lods
repnz
mov
or
mov
rcrb
mov
cmp
or
sbb
out
add
jns
iret
enter
and
push
ds
icebp
mov
iret
push
insb
enter
add
cmpsl
repnz
scas
daa
and
pop
xor
adc
insb
sub
fisttpl
lea
mov
icebp
enter
sub
imul
icebp
pop
mov
xchg
lods
addl
inc
pop
ds
cmp
dec
cmp
push
dec
andl
push
cmpsl
outsl
lcall
dec
movsl
hlt
rcrl
cmc
xchg
push
ljmp
dec
dec
xor
mov
adc
push
shl
nop
js
es
mov
fsubr
out
inc
enter
inc
test
mov
rorl
cmpsl
sub
shrl
daa
and
adc
adc
push
out
xchg
gs
mov
jp
call
xchg
ja
mov
mov
cmp
dec
xchg
mov
xor
and
jg
ret
jnp
dec
cmp
pop
or
pusha
scas
es
pop
mov
in
scas
notl
jl
pushf
stos
int
mov
and
xchg
dec
leave
or
dec
ret
lcall
pop
sub
jp
dec
lock
sub
mov
ja
inc
insb
xor
cmp
pop
and
idivl
into
idiv
ja
pusha
bound
out
pop
sbb
lahf
jge
add
dec
lods
xchg
imul
xchg
xchg
cwtl
aam
push
movsb
cmpsl
jl
cmp
or
push
loopne
fildl
jge
sub
and
lea
xchg
jecxz
mov
in
orl
outsb
jnp
fwait
jecxz
pop
lock
loopne
mov
mov
jb
jle
pop
hlt
shll
cmp
call
push
sbb
jle
jp
dec
inc
call
push
mov
in
out
lcall
add
sbb
cltd
pop
and
pop
sbb
ds
xchg
call
jne
mov
imul
push
iret
mov
and
test
daa
push
ja
push
push
pushl
and
stc
cmpsl
fisttpll
sbb
sub
xchg
mov
bound
inc
push
fwait
aas
lret
lcall
cmc
mov
das
cmp
mull
xchg
xor
lods
and
rcrl
cmc
jnp
or
test
mov
mov
pop
and
pop
sbb
orl
xor
push
mov
jns
adc
cmpl
cmp
sub
cmpsl
xchg
enter
cmpb
in
mov
es
sbb
jb
in
pop
or
fs
push
in
inc
pushf
xchg
sbb
dec
push
mov
cwtl
cmp
int
jmp
xchg
adc
xchg
mov
inc
dec
mov
adc
xor
xchg
sbb
fsub
push
fwait
icebp
lahf
fisttps
mov
sub
mov
addr16
dec
pop
lret
imul
jl
cmp
in
inc
fistl
inc
lret
divl
cmp
jp
mov
mov
push
stc
jl
or
and
mov
push
xchg
bound
dec
rcl
sbb
sarl
mov
mov
and
push
push
js
mov
pop
dec
jo,pt
lds
movsb
fnsave
sbb
ret
mov
sarb
inc
pop
xor
pop
mov
je
fndisi(8087
sub
ljmp
sbb
sbb
sbb
in
cmpb
xor
mov
in
adc
hlt
xchg
pop
icebp
test
scas
pop
cld
fmuls
popa
add
sub
mov
stos
sbb
movsb
call
ret
pop
inc
sub
popf
adc
dec
pop
nop
leave
xchg
jg
sub
fldt
add
cmpsb
xlat
fidivrl
sbb
sbb
nop
shl
mov
push
lock
sub
add
xchg
aaa
xchg
adc
mov
movl
sub
into
cld
ja
mov
sub
push
push
iret
add
shlb
jp
ret
pop
pop
sbb
push
mov
push
mov
stc
fsubrs
negl
jbe
push
stos
xor
and
adc
call
repnz
mov
cmp
mov
pop
pop
add
adc
aas
mov
dec
test
repz
jbe
insb
adc
jp
js
add
insl
dec
popa
sub
xor
xchg
test
in
push
das
jo
sub
sub
pop
call
stos
jecxz
outsl
stos
push
push
cmp
add
mov
test
mov
shrb
sbb
jbe
mov
repnz
int3
pop
inc
xchg
push
xlat
arpl
pop
jb
mov
lahf
and
jmp
dec
icebp
jmp
das
daa
sti
mov
xchg
test
push
mov
mov
push
and
jp
or
mov
sub
popa
shrb
sub
lea
xor
insl
mov
rcr
movsb
jmp
mov
addb
mov
call
mov
inc
test
mov
inc
imul
xchg
jecxz
mov
fidivrl
sub
mov
test
in
shlb
mov
and
int3
aas
mov
lcall
test
or
gs
movsb
loop
add
sbb
push
cmc
push
adc
fistps
push
push
cld
mov
ljmp
in
pushf
test
mov
xor
fucom
repz
sub
xchg
xlat
shr
les
ficompl
faddl
or
mov
pushf
movsb
push
out
lods
mov
outsl
add
sbb
rclb
sbb
sbb
mov
or
sub
adc
cwtl
rolb
jmp
sbb
rcr
ficoms
or
mov
arpl
outsl
cmp
pusha
push
addr16
pusha
in
aas
jl
push
call
adc
fstpt
jb
movsl
fcmovu
jg
cwtl
sbb
dec
or
sbb
jge
jle
push
repnz
push
in
mov
lea
xchg
add
sbb
test
insl
push
or
and
movsl
aad
shrl
mov
int
enter
push
leave
mov
fisubrl
jg
in
out
cmp
addr16
xor
and
lods
fs
incl
cmp
lret
push
repz
cmp
push
das
sahf
inc
dec
movsb
pop
mov
push
cs
std
jge
mov
je
or
sub
insb
mov
mov
aas
jle
cmpsl
xor
pop
bound
jl
xor
add
sub
jne
mov
stc
push
push
nop
in
sbb
loop
insl
add
xor
aas
inc
or
clc
enter
cmc
lods
push
stos
sbb
pushf
xchg
mov
cmp
or
repnz
xlat
aad
fldcw
out
or
and
pop
mov
sub
loopne
stos
outsb
dec
sbb
mov
jo
push
pop
mov
fisttpl
or
cmc
shlb
aaa
inc
lcall
push
out
push
in
rcrb
adc
sbb
out
cltd
rorl
pop
jg
xchg
scas
jns
cmpl
xor
arpl
or
mov
xchg
mov
addl
cmp
xchg
or
pushf
inc
std
fadds
mov
daa
pop
popf
fs
shll
imul
jl
stc
inc
cmp
fs
sub
test
in
enter
nop
xchg
mov
add
push
adc
pop
xor
xlat
jmp
loope
or
adc
mov
mov
das
popl
daa
pushf
cmc
adc
xchg
mov
dec
sub
and
push
mov
fiadds
add
cmp
push
pop
je
pop
inc
out
xchg
je
repz
add
mov
dec
xlat
scas
sub
mov
push
xchg
dec
stos
in
adc
and
fdiv
cmc
push
push
call
loopne
push
add
push
jmp
movsl
push
hlt
je
push
pop
push
add
push
lret
mov
inc
push
xor
add
jl
mov
mov
jnp
repz
dec
inc
mov
inc
mov
mov
pushf
aaa
mov
mov
dec
ja
sub
dec
xor
sub
imul
imul
popa
lcall
cmp
loopne
cmp
or
sbb
ret
jmp
lret
mov
inc
aam
inc
daa
xor
and
jne
cli
and
lods
mov
data16
sub
adc
out
sbb
outsl
lods
xchg
sbb
fisubl
inc
mov
inc
mov
xchg
mov
popf
out
fiadds
push
ljmp
out
pop
or
out
cwtl
rorb
inc
loope
or
paddb
inc
test
mov
push
ljmp
movsb
and
pop
call
sarl
dec
add
ds
lods
pop
mov
pop
pop
insl
cmpsb
sahf
scas
movsb
test
je
test
cmp
dec
inc
jbe
loop
mov
mov
loop
jg
daa
ret
mov
adc
xor
sbb
push
insb
popf
ja
xchg
sbb
lret
or
cwtl
rcrl
out
filds
jmp
icebp
clc
pop
push
jnp
pushf
je
in
daa
jge
cmpsb
fwait
mov
mov
push
mov
arpl
sbb
sbb
movsl
leave
fdivrs
inc
or
push
push
lret
daa
xchg
fldenv
in
cmpsl
mov
or
stc
sbb
int3
mov
sahf
rcll
and
push
imul
arpl
push
push
push
push
es
aad
pop
insl
dec
push
push
mov
adc
gs
add
dec
push
js
jnp
test
outsb
pop
out
mov
lahf
ret
dec
mov
fadd
pop
out
mov
scas
cmp
jb
testl
dec
or
mov
xchg
add
adc
inc
push
add
dec
mov
inc
cli
lods
pop
pusha
fiaddl
ret
inc
ret
ss
inc
scas
dec
push
pop
adc
mov
cmp
lods
pop
push
scas
jno
xchg
pop
xchg
or
xor
lahf
xchg
dec
insb
repz
cli
gs
mov
mov
rorb
pop
lahf
sub
push
mov
jo
jmp
sub
push
push
aad
xor
shll
push
andl
dec
push
sub
stos
fdivrs
test
dec
sub
std
mov
fiaddl
lock
imul
xorb
repz
mov
xor
xor
xchg
fnsave
inc
jae
or
cmp
mov
jne
xor
repz
cmp
mov
and
sahf
subl
movsb
inc
imul
addr16
dec
arpl
fcompl
lock
fiaddl
inc
push
inc
mov
mov
outsl
fidivrl
xchg
adcl
cld
sub
aas
dec
ret
lahf
insl
loope
subl
xor
leave
pop
das
aam
dec
lea
fisubrs
xor
pop
adc
xlat
mov
sub
outsb
push
aam
mov
int3
rcrl
clc
movhps
mov
lret
adc
xchg
dec
mov
add
lea
sub
jecxz
cltd
aam
mov
nop
adc
jb
add
ljmp
mov
cmp
lahf
jl
pop
icebp
aaa
mov
xor
push
mov
mov
in
lcall
int3
enter
fmuls
jl
out
and
and
nop
mov
xorb
mov
inc
fs
pop
fwait
cmpsb
inc
and
ljmp
jbe
jne
aam
add
jl
test
pop
dec
adc
push
cwtl
incl
xor
fadds
push
sbb
mov
adc
cmp
mov
inc
dec
ror
hlt
sub
jmp
hlt
iret
ret
fcomi
xchg
fstpt
jns
mov
movsb
jecxz
lea
js
testl
fmull
jp
mov
pop
mov
fsubrs
repnz
bnd
hlt
dec
fs
ljmp
fisttps
inc
cmc
adc
xor
fbstp
sarl
jl
adc
pop
push
inc
mov
or
dec
push
loope
ds
out
add
cmp
or
sbb
leave
fstpl
add
call
aam
add
inc
roll
loope
jl
pop
fisttpll
int
cmp
sti
mov
xor
pushf
sar
jne
dec
and
orb
or
call
xchg
in
aad
and
and
aad
cmp
fbstp
cmp
adc
in
xor
js
cmp
jb
push
ret
push
dec
es
inc
mov
cs
cmp
jp
iret
add
jne
shlb
mov
movl
push
nop
adc
test
call
aaa
pop
xchg
scas
xchg
test
inc
aas
icebp
test
sbb
dec
std
xchg
mov
das
cmp
lock
pusha
mov
ror
sbb
cmpsb
lods
push
je
pop
popa
popf
fistpll
imul
mov
dec
lea
mov
lds
and
jb
xchg
in
add
rolb
and
cmp
fwait
xchg
xchg
and
enter
movsl
int
pop
mov
cli
shrl
hlt
push
pushf
adc
out
mov
push
outsb
xor
xchg
data16
insl
cmc
scas
test
or
sbb
out
loopne
test
movsl
lahf
or
sarb
daa
pop
or
mov
test
pop
ja
insl
inc
cs
out
xor
call
das
jae
add
into
into
fwait
test
mov
jle
icebp
adc
and
or
imul
adc
dec
aaa
pop
test
pop
sbb
ret
insl
push
jo
int3
nop
push
xchg
test
lahf
rcrb
test
xchg
add
cmp
adc
jb
icebp
lock
sbb
mov
faddl
mulb
data16
jo
lret
jo
loop
cs
lods
xlat
mov
loop
inc
insl
xor
ljmp
sub
sti
dec
push
mov
loop
popf
dec
mov
mov
in
and
xor
lret
repnz
inc
lods
lock
aam
out
and
cmpsl
inc
jmp
sbb
int
jbe
fldl
xor
mov
push
dec
cmp
imul
sbb
push
lret
push
lahf
xlat
ss
testl
idivb
dec
add
xchg
push
fcmovb
leave
addr16
popf
sbb
outsb
lcall
push
cmp
xor
stos
outsl
mov
xor
add
loope
cmp
ds
dec
jecxz
icebp
and
or
insl
and
dec
imul
xchg
xchg
aas
into
jl
js
cs
out
sbb
clc
rcll
dec
daa
in
xor
imul
adc
jge
push
sub
push
or
jbe
aam
out
cmp
mov
dec
out
mov
dec
push
lea
add
jns
xor
mov
rcl
rcl
jo
popl
jle
leave
mov
daa
idivl
add
mov
jo
mov
les
loopne
adc
or
jne
cmp
mov
inc
jnp
sbb
push
adc
inc
add
out
popa
loop
sbb
je
ljmp
jmp
adc
outsb
rcrl
gs
fwait
pop
insb
and
ret
mov
movsb
jo
sbb
mov
cmp
mov
inc
adc
movsb
out
pop
xchg
mov
push
lea
test
popf
adc
push
lods
xor
rolb
push
jbe
pop
sub
in
inc
int
punpckhdq
mov
xor
push
std
cmp
fistpl
es
jg
psubsb
add
push
jg
dec
mov
aaa
mov
int3
inc
mov
sub
pop
out
inc
sub
fdivrp
mov
lods
add
mov
dec
insb
sbb
test
add
cmpsl
adc
jns
pop
mov
aad
cli
jns
and
dec
popa
mov
mov
push
mov
pop
dec
mov
shll
aad
ret
test
xchg
test
mov
mov
scas
push
add
test
adc
push
sbb
lock
sub
scas
test
lahf
add
push
dec
dec
xchg
lea
dec
or
imul
lret
daa
fistl
mov
sub
mov
sti
xor
cmpsb
int3
popa
jp
es
mov
sbb
out
inc
fucomip
bound
push
and
sbb
call
cli
pop
push
xchg
data16
cld
pushf
inc
jl
push
cli
jecxz
inc
les
pop
cmpsl
enter
pushf
jl
add
out
pop
bound
lods
popa
and
lea
adc
lock
addr16
jnp
add
aam
sbb
mov
out
xor
bound
nop
cmovle
sar
add
xchg
xchg
dec
xchg
dec
sbb
mov
pop
ficoml
sbb
cmp
out
pop
pop
arpl
in
push
xlat
int
xchg
shlb
fidivs
fisttpl
add
fcoml
sub
xchg
inc
sbbl
pop
int
pusha
add
pop
ret
xor
adc
inc
enter
push
mov
pop
jge
push
pop
sub
and
loope
jae
decl
mov
cmc
xchg
push
fcmovb
push
lds
or
mov
loop
mov
adc
leave
add
or
cltd
jmp
in
inc
sbb
cmp
jne
adc
inc
or
jae
push
adc
lods
push
mov
xor
add
test
arpl
scas
adc
lods
or
inc
mul
cld
jecxz
mov
cmc
push
idivl
push
gs
xchg
sub
push
jmp
jnp
or
insl
fdiv
sbbb
rorb
xor
jae
adc
adc
mov
xchg
test
out
push
cmp
push
je
popf
adc
mov
mov
cli
jg
scas
clc
sbbb
jl
adc
fmull
fadds
mov
or
inc
inc
push
xchg
push
mov
loopne
pop
mov
or
mov
movsb
dec
fisttpl
stc
fcmovnu
loop
test
loope
jmp
rcrl
addr16
adc
cmc
xor
andl
daa
imul
iret
pop
and
imul
mov
ljmp
das
pop
fstpl
mov
mov
divb
out
jle
lahf
cmp
ds
xchg
lcall
mov
clc
mov
imul
shl
jmp
sbb
mov
inc
rcl
lods
dec
push
or
mov
push
leave
packssdw
lahf
adc
xor
cmp
ds
pop
sub
insl
mov
jecxz
xor
loopne
pmuludq
jmp
out
std
cli
or
mov
or
and
jmp
pop
sub
sub
loopne
clc
bound
xchg
cmp
inc
cmc
cmp
xchg
jmp
xor
adc
cmp
dec
xchg
das
cld
jnp
lea
mov
dec
push
jno
cmp
clc
adc
hlt
xchg
cmp
pop
cmp
cmp
xchg
divb
or
pop
lret
mov
sub
mov
jle
cmpsl
push
pusha
rorl
out
cmp
xchg
cmp
shll
das
leave
pop
notb
pop
cmp
jle
in
xor
in
xor
mov
clc
adc
mov
jg
or
in
movsl
xchg
dec
pop
jno
in
or
adc
xor
or
aam
jne
hlt
test
mov
push
push
mov
bound
or
movsb
push
movsl
mov
jle
out
fimuls
daa
loop
adc
add
add
cmp
mov
jp
or
lret
pop
testb
push
jnp
iret
jo
loop
iret
adc
xchg
or
imul
js
frstor
pusha
xchg
aas
mov
shll
pop
bound
scas
shl
leave
out
mov
pop
daa
push
fsubrs
ror
mov
je
lahf
mov
or
xchg
xchg
jae
or
xor
and
jne
mov
and
pop
lods
jno
iret
sbb
loope
dec
inc
stos
mov
loop
xchg
clc
inc
lods
sub
in
loop
or
inc
popf
out
sub
fisubrl
or
adc
repnz
cmp
adc
dec
sbb
rcrl
mov
movsl
lret
insb
xchg
cmp
push
daa
out
sbb
lods
jb
cmpsl
loope
xor
lds
inc
sbb
das
int
imul
push
pop
or
lods
dec
les
aaa
push
pop
inc
loope
add
add
lret
sub
iret
test
dec
rcrb
inc
add
add
dec
mov
loopne
dec
in
cmp
pop
inc
aaa
out
jae
mov
pop
repnz
cwtl
lahf
mov
inc
lret
pushf
into
pusha
int3
mov
lea
inc
push
pop
mov
mov
inc
push
fs
roll
mov
pop
mov
mov
lcall
in
dec
lahf
negl
in
aam
pop
and
stc
imulb
fs
inc
cs
enter
sbb
jne
push
pushf
repz
lods
adc
aaa
imul
js
movsb
pop
ds
repnz
ds
sbb
push
adc
ljmp
leave
push
push
jmp
mov
jge
sbb
xor
fwait
and
mov
ljmp
mov
pop
icebp
or
and
lret
push
mov
xor
pcmpeqb
je
je
sahf
jbe
aad
ljmp
add
insb
jb
inc
hlt
daa
mov
add
add
js
xchg
inc
dec
and
add
fs
pop
inc
sub
int3
sarb
xchg
push
hlt
or
cmpsl
loopne
ret
in
insl
or
nop
shlb
insb
pop
insb
jno
jae
stos
mov
popa
push
out
ja
fadd
and
out
dec
jns
idivl
loopne
aaa
mov
gs
mov
adc
cmpsb
mov
xchg
inc
xor
insb
pop
dec
push
stc
xchg
push
inc
mov
je
leave
mov
xchg
insb
insb
sbb
fistps
adcb
in
test
mov
add
test
addr16
sub
push
xor
ds
push
outsl
jb
lret
setle
clc
repnz
and
xchg
subl
dec
inc
addl
or
aaa
loope
les
das
adc
outsb
addr16
xor
loope
jo
movsb
and
jns
add
xor
in
push
stos
mov
stc
fdiv
pusha
and
or
sub
jo
out
dec
pop
xchg
rcr
movsl
jo
fidivrl
ss
mov
jne
out
pop
adc
push
jne,pn
lods
outsb
jns,pn
test
add
rorb
pop
add
das
and
xlat
stos
loop
and
inc
ja
mov
out
mov
mov
ret
pop
dec
addl
rorl
lea
mov
mov
pop
and
out
cmc
lcall
fstpt
test
repnz
test
andb
push
ret
sti
and
and
call
les
loop
dec
inc
nop
mov
jle
xor
dec
xchg
jo
dec
push
add
lods
cmpsl
add
int3
jp
inc
sub
lahf
mov
ja
push
shll
inc
push
inc
mov
dec
ljmp
jg
in
movsl
mov
jb
popa
fisttps
lea
fisubrl
jne
sahf
movmskps
inc
sti
lods
push
sub
jg
sbb
fstl
jp
hlt
sbb
idivl
jge
mov
cmp
mov
and
enter
adcl
mov
mov
aad
je
jo
sub
fs
inc
adc
lret
add
mov
insb
ret
or
in
in
sbb
add
xor
sbb
dec
adc
ss
out
push
aam
fcomi
inc
rcll
retw
ficoms
gs
adc
dec
mov
push
cmp
lret
push
cld
sbb
js
adc
aaa
stos
mov
mov
sbb
sbb
xor
pop
icebp
cmc
movsl
mov
mov
cmp
push
sbb
pop
stos
xchg
sar
fwait
repz
cmp
mov
mov
test
inc
push
es
dec
or
xchg
push
push
cmp
std
adc
jae
outsl
xlat
fbld
jge
popf
scas
sti
mov
push
push
and
jecxz
inc
push
add
xchg
enter
nop
mov
cmc
add
clc
push
inc
xchg
inc
ja
roll
sub
mov
pusha
mov
and
ss
out
inc
mov
iret
ret
xchg
aad
xor
enter
adc
cmp
xchg
scas
sbb
ret
sahf
mov
jge
cwtl
aaa
xchg
mov
imul
xchg
mov
sbb
mov
or
loop
into
xor
jo,pn
jno
xor
inc
xlat
insb
push
fnstsw
cli
movsb
fwait
out
jecxz
mov
jl
jle
mov
push
imul
or
shlb
loopne
arpl
in
dec
aaa
rolb
jmp
jne
and
cltd
lret
and
mov
cltd
outsl
push
and
daa
insb
out
test
int3
bound
test
aaa
xchg
fsubs
faddl
adc
std
sbb
stos
cmpsl
nop
pop
adc
xchg
xchg
push
mov
inc
xchg
into
push
sbb
or
jle
and
jle
cmp
scas
sarl
stc
or
pop
sbbb
dec
jp
int
mov
fstpt
pop
ret
xchg
stc
sub
mov
push
out
in
movsl
clc
inc
cmp
ret
or
sub
js
push
jbe
jns
mov
mov
int3
jbe
jae
add
or
pop
fisttps
cwtl
cmp
dec
sbb
popa
jbe
sub
mov
je
js
aas
mov
or
mov
gs
cmpsb
xchg
push
mov
or
cmp
cmp
adc
dec
add
stc
fimuls
in
lret
sbb
lret
adc
int
jns
cli
hlt
sub
jg
adc
iret
lret
outsb
test
inc
add
sub
inc
aaa
adc
cmp
ds
push
ds
jmp
add
jl
lahf
or
out
or
dec
jmp
jle
cmp
lcall
in
int
movb
mov
clc
jle
aaa
sbbl
roll
pop
divb
cmp
jmp
repnz
pop
cmp
mov
inc
sub
pusha
and
pushf
jb
pop
addr16
mov
dec
incl
repz
cltd
insl
pop
mov
jo
mov
das
addl
dec
mov
pop
add
jmp
dec
icebp
mov
dec
sub
pop
or
rcrb
loope
cltd
xor
fwait
push
dec
cltd
cmp
cmp
shl
cmp
lahf
out
repz
xor
loopne
mov
adcl
fyl2x
call
push
mov
sub
pop
sbb
jmp
mov
out
xor
xchg
pop
sub
xor
push
mov
cwtl
and
rcrb
popa
jb
andb
addl
pop
xor
sbb
out
adc
and
pop
mov
xchg
mov
test
pusha
mov
mov
add
jp
mov
cli
mov
jecxz
inc
loop
loop
xlat
xchg
es
add
repnz
inc
xor
sbb
out
add
add
divb
pop
push
loopne
popf
mov
std
ret
jg
cli
insb
jg
mov
xlat
pop
pushf
cmp
xorl
cld
and
pop
and
fs
sub
push
sti
jnp
fstpt
imul
sub
adc
cmpsb
incb
jae
cmp
mov
ljmp
rclb
dec
addr16
outsl
mov
shlb
out
cmp
les
sti
cwtl
fnstcw
mov
dec
mov
sbb
push
dec
rcl
xchg
lahf
jae
jbe
jecxz
mov
xlat
in
add
jns
and
dec
xor
jge
in
mov
inc
jge
jo
dec
rclb
int
loope
aad
jbe
or
push
push
mov
xchg
mov
inc
test
push
xor
and
fdivl
jbe
ret
cwtl
mov
ret
adc
out
or
les
fnstsw
jp
xor
jmp
inc
push
or
fcom
in
sbb
ret
mov
sahf
addr16
test
cmp
mov
jb
aad
leave
push
push
in
aam
int
sub
xor
aad
dec
test
push
xor
pushf
inc
stc
shll
inc
rolb
adc
mov
call
ja
pop
into
loop
outsl
sbb
mov
sbb
imul
sub
lods
movsb
mov
and
enter
adcb
lock
mov
bound
loope
das
pop
fnstenv
sub
pop
xor
out
test
and
mov
mov
dec
push
xchg
add
and
jmp
sbb
je
dec
or
dec
dec
jl
cld
rclb
push
sahf
je
pop
mov
sbb
mov
sbb
int3
mov
inc
cld
daa
loope
sub
jo
call
nop
mov
sarb
sbb
jne
outsb
adc
xchg
adc
dec
mov
sbb
mov
arpl
repnz
add
hlt
and
sti
daa
gs
mov
xor
pop
movsl
pushf
test
mov
xchg
mov
sbb
outsb
pop
lahf
mov
xor
push
fnstsw
adc
movsb
mov
mov
adc
mov
sub
dec
lea
cld
rcrb
call
mov
sbb
mov
xor
mov
jmp
js
fimuls
mov
popf
push
pop
adcb
or
push
pop
ret
cmp
sub
adc
and
andb
push
push
jp
inc
shlb
mov
insb
je
out
dec
rcll
xor
mov
pop
jg
xchg
iret
aad
sahf
xchg
mov
nop
or
jge
scas
xchg
xchg
jecxz
cmp
xchg
sarl
aam
int3
sbb
mov
shrb
fisubrl
ljmp
and
pop
jne
add
ja
cmp
imul
rclb
fldenv
aas
test
dec
insb
fldl2e
in
in
lcall
or
lcall
enter
adc
fwait
push
cmp
dec
negb
cs
aam
xor
sub
mov
in
mov
sub
sub
sbb
out
add
cmp
test
imul
pop
mov
or
jns
and
sbb
js
jns
out
push
aad
cmp
mov
ds
not
fimull
and
pop
mov
fildll
sub
stos
inc
mov
push
lods
repz
fisubrs
rcll
or
in
cmp
mov
push
js
xchg
ret
ja
push
xchg
ss
roll
call
pushf
out
sti
add
sub
shrl
movsl
xchg
popa
xor
xchg
call
orb
dec
jae
jl
sub
aad
rclb
mov
mov
add
mov
or
cmp
jmp
inc
out
mov
jb
outsl
jge
lds
shll
fiadds
jg
cmp
rorb
jge
push
dec
jae
imul
les
clc
fidivrs
repz
sti
jb
sbb
dec
lods
pop
popa
ljmp
xadd
sub
ret
xor
popa
inc
adc
leave
les
jl
mov
xchg
push
in
mov
clc
xchg
cs
pop
scas
mov
roll
xchg
adcl
jno
fs
popa
out
insl
lahf
mov
and
and
je
movb
jae
sar
add
or
pop
movsl
aaa
imul
fstp
mov
cltd
add
out
and
enter
or
lock
mov
or
scas
icebp
int3
scas
pop
add
inc
popa
ds
or
aam
add
dec
and
rol
fs
jae
inc
xor
leave
jg
sub
or
cmpsb
xor
addr16
in
pop
or
dec
out
in
or
cli
mov
jmp
pop
xor
loop
cmp
jno
sbb
sbb
out
mov
mov
push
ficomps
jg
inc
nop
cmp
test
mov
or
into
sub
mov
jno
stos
repz
in
cmp
cmovp
add
xchg
movsl
mov
data16
adc
shll
int
pop
dec
dec
int
jmp
jle
insl
les
sub
adcl
nop
fwait
imul
or
xchg
ja
pop
outsb
push
out
dec
dec
pop
cli
pop
xlat
xlat
aas
mov
rolb
xchg
stos
mov
jge
test
lcall
xchg
fs
mov
es
fmull
and
arpl
jecxz
jbe
fs
in
outsl
jle
jnp
mov
loope
or
stc
xchg
aas
rcl
push
push
rclb
adc
pop
inc
nop
or
jb
push
cmc
mov
cli
inc
lea
inc
add
mov
scas
stc
fld
loopne
repz
pop
xchg
shlb
pop
idivb
rclb
sbb
nop
add
es
sbb
lea
add
pushf
cwtl
shr
xlat
push
mov
shrl
jmp
mov
divl
xor
shll
and
cs
mov
xchg
pop
cmpsb
sarl
rorb
jno
fnsave
mov
sbb
frstor
pusha
dec
test
into
push
std
cli
lcall
add
scas
mov
rorl
dec
addr16
mov
mov
add
cmp
inc
repnz
mov
push
push
mov
iret
cmp
sbb
cwtl
dec
xchg
insb
jbe
es
shrl
or
test
pop
pop
leave
hlt
imulb
xorl
jg
mov
xor
xchg
es
insl
jb
popa
pop
je
push
notb
jge
inc
mov
lods
jg
sti
mov
ljmp
or
lret
pop
stc
jecxz
push
dec
iret
aaa
mov
lahf
mov
int
push
sub
xchg
mov
notl
mov
mov
mov
mov
mov
in
dec
sbb
les
subl
enter
inc
push
or
adc
push
xchg
push
push
mov
or
out
mov
mov
push
fdiv
cmpsb
and
mov
aaa
sbb
add
and
push
sub
stos
jo
repz
mov
bound
jp
repnz
mov
shl
nop
xchg
lcall
iret
test
jmp
arpl
mov
xchg
cmp
adc
repz
adc
xchg
add
xchg
cli
pop
add
and
xchg
sbb
sti
daa
insl
sub
adc
mov
int
jmp
cmp
xlat
xchg
xchg
fsubrp
ds
lahf
xchg
nop
ss
je
jbe
cs
loopne
imul
pop
jno
xor
xor
std
sarl
jnp
outsl
stos
lahf
arpl
pcmpeqb
into
sti
cmp
push
add
jne
lcall
and
and
sti
mov
jge
adc
pop
sti
popa
stos
add
ret
pop
and
add
in
pop
pop
sbb
repz
mov
dec
test
and
test
dec
mull
xchg
ret
dec
jmp
lea
mov
sahf
into
cmp
push
pop
repnz
scas
mov
xchg
sbb
loopne
push
sbb
pusha
cmpsb
mov
out
insl
stc
dec
dec
jno
mov
xor
ficoms
in
nop
xchg
and
sbbb
sbb
mov
jle
cmp
jecxz
out
scas
aam
shl
mov
mov
mov
fcompl
sub
in
jl
inc
pop
test
loope
enter
adc
cmp
je
int3
pop
outsl
mov
jns
loop
xor
sub
daa
or
inc
iret
insl
dec
pusha
pusha
in
sti
or
pusha
xor
popf
lahf
mov
sbb
idivl
movsl
mov
lret
pop
sbb
mov
in
or
mov
cmp
fimull
mov
fistps
nop
popf
push
push
xchg
imul
test
xor
pusha
sbbb
xor
out
notb
jne
shrl
sbb
ret
or
and
sbb
es
inc
jmp
jle
push
dec
out
cmp
jge
jne
jb
es
mov
cltd
lods
shlb
leave
outsb
pusha
fsubs
jecxz
rcrl
xor
lret
push
cmc
inc
pop
xchg
dec
jp
pop
icebp
lods
cmpb
push
or
or
fldenv
mov
bound
and
inc
cs
arpl
dec
and
add
sbb
adc
jg
fisttpll
cmpb
inc
or
clc
cmp
mov
xorb
pop
jmp
mov
es
test
mov
or
and
cltd
xchg
mov
call
lret
enter
xor
jmp
adc
sbb
mov
setno
xchg
cmp
sbb
cmp
ret
mov
stos
int
sbb
inc
icebp
mov
sbb
mov
scas
and
mov
jnp
stos
sub
shrl
addr16
jecxz
idiv
dec
lcall
movsl
pusha
cmpsb
dec
in
pop
inc
sub
mov
jp
pusha
outsb
outsl
scas
push
cmp
adc
mov
dec
insl
adc
adc
push
dec
or
cmpsl
xchg
add
movsl
push
decb
push
mov
fsubrl
pop
jno,pt
repz
pop
push
xor
dec
fisubrs
mov
inc
jo
cltd
sbb
push
shlb
repz
dec
dec
test
sti
mov
rcr
pop
lret
dec
adc
adc
pop
int
sub
mov
mov
aam
repnz
fs
test
or
adc
xchg
sub
jae
and
or
lds
sbb
inc
aad
leave
mov
inc
in
lods
pop
xchg
mov
imul
mov
fdivrl
movsb
iret
sub
push
adc
mov
or
push
inc
xor
mov
pop
mov
cltd
test
sbb
enter
dec
fs
shl
pop
add
fdivs
stos
fsubrp
push
dec
ljmp
mov
sti
jmp
ljmp
insl
gs
std
cmp
jno
in
enter
ss
xchg
ljmp
xor
push
fldcw
add
jle
push
nop
loopne
fs
cmc
dec
mov
dec
cmpl
jecxz
jb
add
es
xor
adcb
mov
lret
mov
mov
dec
mov
dec
in
lds
jns
sbb
pop
addr16
arpl
sub
pusha
adc
dec
dec
lea
movsb
adc
sub
push
sbb
inc
xchg
xor
ljmp
xchg
jmp
ret
or
adc
aam
ret
inc
int3
ds
idivl
push
sbb
fistpll
ds
outsb
mov
mov
push
scas
cmp
cmp
sub
cmp
int3
mov
xchg
jb
popa
xchg
jp
movsl
xchg
jb
and
addr16
sub
fisubrs
sbb
stos
cmp
mov
ljmp
mov
prefetch
in
mov
sub
repz
cwtl
add
loopne
and
pop
ja
dec
cmp
dec
pop
movsl
sbb
scas
lahf
xor
xchg
push
xchg
mov
gs
push
inc
xchg
xchg
xchg
lds
sub
fadd
lret
xorb
dec
xchg
push
xchg
or
jmp
push
sub
sahf
push
imul
jae
adc
xor
sahf
loopne
iret
and
dec
sub
das
cmpsl
sbb
mov
icebp
xor
push
lods
mov
and
sub
lret
mov
mov
and
stc
arpl
pusha
sbb
or
jmp
fdivrl
movsl
push
fs
inc
pushf
addr16
arpl
jns
sahf
or
mov
loopne
add
add
push
inc
add
mov
jecxz
int3
jecxz
add
jne
roll
lds
inc
sbbb
notl
lds
call
adc
add
mov
mov
push
mov
pop
test
jmp
mov
lret
jae
push
mov
cmc
pop
lret
jne
xor
jmp
out
cmp
negb
imull
data16
gs
push
pushf
shrl
in
loop
scas
lock
or
ret
or
loopne
pop
aas
jb
enter
xchg
push
cmp
repz
or
popf
sub
dec
mov
dec
pop
cld
fdiv
jbe
std
lds
adc
jmp
mov
and
daa
pop
pusha
aam
pop
cmc
call
inc
jb
mov
loopne
inc
stos
orl
pop
testb
sti
ljmp
mov
push
mov
jg
icebp
push
in
notl
ret
test
pop
mov
jl
mov
jp
addr16
cwtl
add
jg
or
push
fidivrs
ljmp
mov
cmpsl
outsl
sarb
xchg
icebp
lcall
xor
fstpt
mov
pop
add
in
popf
addb
pusha
cmp
mov
and
out
in
pop
outsb
sbb
lock
lret
and
inc
int3
xor
dec
nop
mov
lea
rolb
xchg
mov
pop
ja
movsl
add
sub
outsb
push
pop
jne
es
jo
les
mov
xor
cli
add
adc
lret
pusha
or
and
loopne
gs
into
sbb
cmp
aaa
push
in
filds
rcrl
xchg
mov
or
outsl
pop
push
mov
insb
outsl
pop
in
in
push
fwait
test
cli
std
cwtl
xchg
cmp
adc
imul
mov
sbb
and
jno
mov
in
push
pushf
movsl
bound
cltd
cmp
loop,pt
xor
inc
push
mov
inc
rclb
inc
pop
andl
jno
sbb
push
rcll
clc
cmp
add
loopne
dec
in
mov
sbb
jge
mov
xchg
sbb
mov
pop
shll
leave
fmul
add
pusha
or
sbb
push
in
das
mov
dec
inc
out
inc
push
push
add
pop
xchg
add
xor
add
test
sub
in
lods
and
mov
sub
aas
pop
imul
or
or
jo
dec
sbb
insl
jge
xchg
and
out
sub
popf
dec
adc
pushf
mov
shl
pop
lcall
pusha
pop
xor
jmp
ror
push
xchg
xchg
mov
js
jbe
dec
sbb
or
inc
ja
sbb
push
mov
or
mov
mov
lods
scas
rcll
push
notb
pop
out
out
sub
cld
adc
sub
lds
popf
cltd
cmp
icebp
cs
inc
movsl
push
jne
enter
push
js
pushf
add
pop
lcall
sub
pop
outsb
jnp
mov
push
mov
adc
lds
inc
sbb
jnp
sbb
mov
xchg
xor
dec
xchg
in
in
mov
in
xchg
lea
lods
xor
sbb
cmp
jo
adcb
push
xchg
aas
lcall
push
cmp
lahf
or
ja
lods
mov
das
dec
icebp
ljmp
es
xor
nop
mov
jns
ljmp
xchg
fs
bnd
inc
push
jnp
popl
sbb
xor
inc
jae
lret
movsb
cs
add
pop
push
pop
jmp
movsl
ljmp
push
mov
dec
ds
stos
add
movsb
fdivrs
lods
scas
cmpsl
sahf
xor
sbb
xor
mov
sub
cs
add
sbb
pop
push
pop
xlat
jo
outsb
sarb
subb
mov
loope
hlt
cmp
loope
ret
mov
and
not
movb
xchg
fistl
lods
mov
ret
or
jns
mov
dec
jae
pop
xlat
sbb
sub
rclb
leave
push
or
jo
sbb
inc
inc
xor
imul
js
adc
inc
jae
clc
dec
std
adc
testb
push
xor
xor
xchg
idivl
cmp
cmp
inc
pop
rolb
lcall
arpl
fcoml
pop
scas
out
mov
fs
jno
std
cs
test
loop
jmp
add
sub
dec
jnp
push
cmp
inc
ja
mov
fwait
xchg
jmp
leave
lea
mov
fcoml
ja
lret
jnp
inc
ja
push
div
icebp
mov
xor
cmp
push
or
add
cmpsl
or
test
dec
cmpsb
jl
xchg
and
insl
inc
xchg
pop
leave
testb
mov
adc
stos
push
inc
cmp
cmpsl
test
and
adc
cmpsb
mov
sub
into
cltd
daa
adc
inc
sbb
mov
jmp
jp
test
mov
sub
ret
xor
lcall
inc
imul
std
popa
ja
in
dec
jo
jne
shl
sub
fistpll
mov
jno
pop
sub
inc
cmpsb
test
icebp
and
mov
rcrl
es
mov
adc
xchg
xorb
cltd
daa
add
xor
sub
dec
add
cli
aam
dec
scas
ud1
and
add
cmp
lret
dec
repz
outsb
sub
mov
pop
int
xor
xlat
shl
cmpb
adc
lea
hlt
mov
mov
cmp
cmpb
mov
ja
adc
mov
jg
fdiv
push
or
mov
imul
test
imul
cwtl
and
lds
ljmp
popf
push
inc
les
mov
idiv
in
push
add
push
std
mov
push
inc
test
aad
fwait
add
inc
jge
or
or
or
xlat
cmp
sub
ljmp
mov
in
filds
shll
vfnmsubpd
mov
cltd
pop
lea
test
stc
lock
cmp
outsb
mov
mov
aas
pop
out
and
pusha
xor
insb
in
dec
ret
clc
mulb
add
sub
fists
xchg
ret
mov
and
fucomp
cmpsl
pop
in
subl
pusha
and
mov
pop
jo
pop
jmp
or
jbe
lahf
ret
dec
clc
sub
jmp
jge
xchg
addr16
xor
sub
cmp
mov
sahf
add
je
xchg
sbb
movsl
movsb
stc
lock
fs
lods
mov
adc
hlt
rclb
or
icebp
xchg
aad
test
jns
push
stos
xchg
cmp
mov
aas
dec
mov
pop
pop
test
repz
shlb
filds
xchg
xchg
xor
aam
and
ret
xchg
sub
jl
sub
repnz
repnz
sahf
inc
xchg
sub
mov
jg
pop
ljmp
push
mov
sbb
imul
mov
in
push
sahf
int
scas
pop
lret
adc
xor
fistpl
xlat
repnz
mov
fists
icebp
dec
cmp
out
pop
mov
mov
cmpsl
hlt
add
and
pop
cld
xchg
int
aad
mov
jne
je
dec
outsl
into
icebp
jmp
and
cmc
push
test
mov
fildl
lds
movsl
aam
xor
movsl
out
lods
pop
pop
fsubrs
and
mov
jno
rclb
mov
inc
add
jmp
mov
lods
iret
inc
rolb
shlb
pop
mov
sbb
and
sub
jbe
scas
pop
dec
ljmp
inc
pop
push
jns
loop
test
movsl
mov
in
stc
orb
jo
jnp
cs
lcall
shr
dec
jecxz
ret
add
data16
call
je
clc
arpl
pop
popa
fmul
cmpsl
mov
dec
mov
out
fstpl
xchg
popl
mov
out
mov
pop
arpl
xchg
clc
lret
jnp
inc
dec
nop
imul
cmpsb
stos
pop
leave
or
enter
dec
and
cmpsb
sbb
jl
jns
sbb
rolb
bound
sahf
pop
dec
loopne
rclb
dec
pop
enter
sub
jmp
xchg
xor
pusha
shlb
dec
pusha
call
dec
xchg
dec
test
mov
test
fwait
adc
sti
shll
push
scas
adc
dec
sarb
in
addr16
jo
push
imul
data16
testb
loop
arpl
add
sub
or
js
sbb
xchg
insb
lea
push
dec
daa
sti
push
insl
leave
es
iret
adc
ffreep
popf
mov
xor
mov
loopne
notb
das
pushf
insb
hlt
ljmp
pop
inc
lods
cmp
pop
fdivl
sti
inc
inc
pop
push
les
adc
popf
xchg
xor
scas
add
push
movsb
addr16
shll
imul
adc
cs
les
addl
jp
sub
and
sub
xchg
test
and
insb
push
adc
popa
es
call
andb
js
sub
aaa
mov
cmp
jmp
sub
stos
outsl
cli
xchg
sbb
test
mov
das
insb
stos
enter
mov
in
loop
das
arpl
test
inc
ss
cmp
les
fwait
push
shll
icebp
mov
sub
xlat
mov
jmp
jnp
data16
jne
iret
pop
dec
stc
pop
jbe
je
inc
mov
add
imul
scas
push
ljmp
idiv
insb
pusha
cmp
push
push
xchg
xchg
test
add
and
pop
popf
dec
pop
mov
bound
scas
fsubr
ss
gs
hlt
xor
out
push
cmpsb
ds
lods
cmpsl
add
pop
or
adc
mov
rcll
cwtl
mov
pop
pop
mov
push
test
stc
ret
jg
lods
xor
data16
gs
lcall
lds
pop
out
repnz
mov
xchg
arpl
into
in
in
outsl
aad
mov
jp
add
mov
ja
jae
mov
push
fbld
pop
mov
sub
and
lods
andb
fwait
lods
jmp
test
inc
ss
mov
xchg
dec
pop
loope
mov
dec
lods
ror
fstl
loopne
jbe
pop
loope
dec
pop
mov
mov
add
lret
pop
push
xchg
dec
adcl
push
dec
cmp
insl
mov
ret
into
mov
push
sub
neg
fstps
push
scas
xor
sahf
pop
jp
lods
test
aad
dec
dec
sbbl
enter
jl
xor
sbb
xor
push
data16
ss
mov
xor
in
sbb
ret
push
aam
mov
icebp
pop
notl
lea
dec
jno
imul
mov
xchg
sbbb
adcb
das
addb
pushf
pop
inc
pop
fwait
dec
jnp
pop
dec
and
fcomps
push
jbe
adc
das
cs
lods
sbb
daa
ror
dec
adc
sahf
cltd
repz
mov
out
jns
mov
xor
aas
lock
shll
mov
mov
cltd
adc
popa
insl
test
iret
in
jg
and
mov
jb
add
mov
xchg
add
sbb
xor
out
outsb
add
lock
push
pop
mov
adc
xchg
ds
push
cltd
xchg
clc
inc
sub
daa
cmpsb
fcmovbe
push
mov
push
daa
or
lcall
gs
int3
lret
testl
negb
cmp
sub
jmp
or
mov
and
loope
pop
sub
sar
hlt
dec
in
pop
push
loope
leave
repz
adc
notb
inc
lods
lock
fcoml
cs
dec
into
jbe
fldl
and
shrb
push
jns
or
add
gs
decb
roll
inc
dec
sbb
and
fidivrl
jecxz
fcom
push
xor
and
insl
daa
dec
test
inc
adc
jne
stos
sbb
mov
lods
aam
push
repz
xor
sahf
ds
out
add
adc
je
popf
cmpsb
sahf
int3
inc
daa
pop
lret
test
aas
sbb
add
clc
push
cmp
mov
add
les
mov
dec
fld
stos
xor
inc
cmp
rcll
shl
add
repz
cmp
insl
jb
bound
push
cmp
cmpsb
pop
lods
lea
xlat
test
mov
fcoml
adc
jb
add
hlt
inc
sub
in
imulb
jmp
bound
adc
sbb
lock
add
jb
fidivl
pushf
rorb
mov
je
jmp
mov
test
adc
iret
pop
aaa
stos
das
aas
test
xchg
push
outsb
push
xchg
xchg
lods
sub
push
sub
cmc
mov
std
xlat
in
ret
add
add
lret
das
lcall
mov
aas
iret
sbb
pop
sub
rep
inc
mov
sub
sub
adc
pop
stos
jbe
sbb
rorl
popa
inc
and
jge
dec
push
and
push
mov
sbb
dec
aam
mov
xchg
cmp
or
gs
xor
mov
cmp
jno
sahf
pop
push
movsl
dec
add
fs
lahf
loope
push
add
jmp
fisubs
mov
shll
mov
shlb
cli
cltd
enter
call
jl
sbb
ret
cltd
jecxz
pop
push
mov
mov
dec
and
mov
pushw
cmp
jb
ret
movq
push
outsl
icebp
lods
mov
jecxz
aad
cmp
adc
subl
stos
or
pop
xchg
es
xor
add
aas
scas
mov
repnz
lds
add
nop
xchg
lods
hlt
push
jmp
jnp
cli
icebp
icebp
sub
cmp
arpl
insb
xchg
push
sub
inc
cmp
fs
fwait
cmp
outsl
cmp
adc
leave
cmp
jg
sarb
sbb
hlt
insb
xchg
mov
dec
ja
divl
popf
xchg
hlt
sub
cmp
cmp
das
mov
or
or
jae
lret
sbb
movsl
jne
call
mov
clc
fcmovnbe
dec
pop
mov
mov
xor
mov
mov
and
hlt
pushf
in
lods
cmpsb
jmp
addr16
testb
lods
loopne
clc
pop
stos
int
jno
insl
mov
leave
cmpb
test
adc
andb
add
cli
ss
shll
sbb
mov
lock
push
and
cmp
pop
call
psubsb
jge
outsl
add
jno
out
sbb
jle
sbb
in
dec
inc
inc
lret
jbe
push
jp
in
rep
loopne
pop
mov
jae
pcmpgtd
push
xchg
xlat
int3
pop
notb
cmp
ljmp
fisttps
out
stos
dec
push
cmpsl
xchg
push
out
fwait
bound
in
inc
pop
fwait
bound
int3
sti
out
outsb
sbb
js
sub
aam
mov
pop
push
pop
dec
mov
pop
rcl
adc
into
and
pop
pop
jo
add
sub
pop
fs
push
sahf
ja
addr16
or
fldcw
fs
test
or
sbb
push
inc
sub
fbstp
inc
inc
das
sub
jecxz
hlt
push
outsl
icebp
xor
pop
or
pop
mov
sub
jge
lret
pop
ret
jnp
mov
sbb
fmull
xor
stos
test
jg
sbb
dec
and
fwait
inc
and
and
lret
or
push
push
into
xchg
test
pop
cmp
movsb
lock
mov
sbb
jmp
notb
aaa
inc
cmpl
cmp
mov
daa
and
test
repnz
loop
cmc
jae
push
fwait
push
ss
jo
cmp
repnz
setp
enter
xchg
jbe
jb
sbb
sub
push
add
xchg
ljmp
int3
ja
xor
sub
fistpl
cmpsb
pushf
ds
fildl
mov
dec
shl
pop
out
call
cmp
popa
jne
inc
scas
sub
in
pushf
out
stos
repz
rcll
sub
pushf
lock
or
mov
adc
mov
sbb
push
sub
lret
mov
orb
orl
notl
and
mov
sub
popa
inc
push
mov
push
jo
outsb
dec
repz
pop
nop
push
jp
les
sbb
inc
cltd
popf
call
sbb
ja
sbb
jno
lods
cs
jbe
hlt
test
fisubrl
out
popf
pop
bound
stc
mov
aaa
cmp
jnp
push
dec
in
out
sub
lock
xchg
xchg
mov
test
cmp
and
jo
add
into
sub
das
or
add
or
shr
leave
outsb
dec
dec
or
jg
test
mov
pop
push
sub
std
and
loopne
vpavgb
push
rclb
sahf
and
popf
stc
xchg
cmp
sti
pop
call
aam
cli
aaa
jp
shrb
popf
or
add
adc
sub
mov
cmp
pop
or
or
cltd
dec
daa
push
jl
iret
out
fwait
outsb
add
adc
jne
fidivrs
mov
pushf
xor
inc
jl
outsl
or
pop
sbb
in
lods
adc
lcall
loopne
pop
sti
in
imul
roll
mov
iret
roll
lea
repnz
mov
dec
aas
jnp
add
mov
pusha
jnp
sub
fstpt
cmpsl
loope
push
cmp
hlt
adc
cmp
fwait
adc
rcrl
sbb
and
sub
mov
mov
sti
popa
jecxz
std
and
jne
je
pop
test
jnp
in
repnz
cltd
jecxz
sbb
cltd
cmp
bnd
data16
jae
aam
sub
push
mov
jl
repz
sbb
ror
cs
arpl
gs
movsl
outsl
lds
xchg
insl
pop
jne
mov
lret
dec
adc
add
jmp
shll
mov
xchg
nop
loopne
in
fistpl
data16
jae
jns
xlat
stc
or
out
xchg
jg
fildl
jne
push
aam
das
andb
inc
pop
mov
addb
shl
pop
sub
pop
mov
fnsave
push
jp
push
fbld
jecxz
insl
idivl
xorl
jne
inc
lret
xchg
and
scas
pop
jge
call
adc
ss
subb
cmpl
xor
push
aaa
data16
loope
aad
mov
cld
pop
les
pop
outsl
add
push
sub
movsb
push
in
es
adc
outsb
fwait
hlt
mull
jb
sbb
cli
popa
lds
add
cmp
xchg
xor
enter
fsubrs
leave
xor
mov
loop
pop
dec
mov
xor
subb
pop
cmp
xchg
push
int3
leave
mov
ficoms
pushf
loope
call
add
mov
call
cmpsb
mov
fnsave
sub
add
out
pusha
dec
stos
je
mov
inc
ss
pop
dec
jno
push
faddl
adc
jno
inc
sti
lret
add
aaa
iret
addl
jbe
adcl
push
popa
jge
jo
lea
mov
mov
add
adc
insl
xchg
lock
push
sti
mov
and
sub
jge
jbe
in
cmpsl
jb
lods
push
inc
sub
xor
pop
cmpsl
testl
jbe
nop
cmp
cwtl
pushf
mov
xchg
jae
and
adc
int
xchg
dec
push
mov
pop
mov
lret
sub
and
adc
dec
adc
mov
add
and
add
int
outsb
xchg
or
inc
lds
repnz
adc
dec
dec
push
imulb
add
lcall
scas
outsb
es
in
imul
shlb
mov
or
test
jp
into
scas
pop
mov
and
test
cli
sub
pop
jb
fwait
jecxz
jle
in
test
cmp
test
out
es
pop
fstl
mov
or
in
movsb
lock
pop
movsb
cli
sbb
or
or
push
in
dec
xor
insl
xor
mov
std
dec
xchg
iret
aas
outsb
call
xchg
pop
imul
push
mov
rol
pop
inc
subl
js
scas
int3
push
mov
fldenv
inc
dec
sub
jg
in
out
sbb
mov
das
mov
add
inc
lret
inc
mov
jo
in
xchg
sub
mov
sub
aaa
icebp
mov
mov
dec
test
xorl
orb
and
cmpsd
dec
dec
pop
inc
sub
jmp
sti
cmpsl
xorl
in
inc
movl
daa
mov
ficoms
cmp
xor
ss
rcrl
sub
imul
xor
mov
outsb
dec
stos
xor
test
js
push
sbbl
std
sbbb
fxch
stos
data16
jg
jno
xor
lods
xorl
sahf
cltd
inc
push
mov
out
in
pop
enter
jae
fidivs
out
mov
add
sub
xchg
imul
sub
leave
jl
xor
xchg
xchg
mov
adc
out
sbb
mov
nop
imulb
lods
sbb
cld
xor
popa
or
movsb
sub
add
push
mov
sbb
jnp
into
mov
dec
inc
lret
in
outsb
jno
lcall
sarl
hlt
or
cmpsl
adc
sbb
mov
dec
dec
fs
out
hlt
mov
push
sarb
inc
push
sbb
push
movsb
lods
dec
mov
dec
andl
push
mov
andl
sti
and
add
aas
mov
ret
lods
or
loopne,pn
mov
push
es
dec
jbe
je
ljmp
pushf
fisubs
dec
in
sub
pop
fisubrl
inc
fwait
mov
dec
xor
imul
adc
jae
mov
pop
xchg
cmp
out
adc
subps
add
dec
inc
add
and
stos
pop
cwtl
sub
and
stos
cmp
jecxz
mov
and
lods
enter
js
in
jg
je
or
aad
repz
push
shr
dec
dec
out
sub
popf
sbb
jns
lahf
mov
add
jbe
mov
decb
into
dec
not
lahf
jns
test
incb
mov
out
push
pushf
cmpsl
inc
outsb
jl
divl
push
es
dec
xchg
adc
cmp
es
outsb
sub
xor
or
outsl
fs
fwait
lcall
mov
sbb
lret
dec
jo
int3
and
xchg
rcrl
jecxz
xor
push
and
mov
mov
jo
in
cmp
int3
inc
outsb
in
jl
sti
sti
sub
repz
and
xchg
mov
imul
push
mov
pop
and
push
fsts
loopne
pop
fsubrs
loope
int3
add
out
out
push
jp
fisttpll
fwait
shrl
cmp
or
enter
ja
inc
inc
test
sub
or
scas
aam
and
ds
lods
inc
and
in
movsl
clc
pop
lahf
inc
cmp
mov
shrb
adc
loopne
loop
add
jnp
lock
lods
cmp
push
jl
dec
sub
xchg
xor
pop
out
icebp
inc
mov
jno
rclb
es
js
es
mov
push
cwtl
test
movsb
iret
lods
inc
nop
aaa
out
xor
adc
adcb
out
mov
fstl
adc
jo
insl
and
pop
cmpb
push
dec
xchg
in
mov
sar
mov
arpl
pop
cmp
fistpll
stos
xchg
and
stos
jmp
and
sti
adc
adcl
sbb
sbb
mov
pop
mov
adc
mov
ret
dec
sub
shl
sahf
inc
or
adc
pop
scas
pop
xchg
mov
jbe
js
lcall
sub
ret
pop
pop
inc
xor
xchg
dec
jp
add
je
push
sbb
pop
inc
sub
shl
ficoms
sbb
or
push
insl
push
mov
inc
dec
or
fs
inc
rol
cmp
xchg
jecxz
lea
pusha
cltd
push
nop
out
int
jbe
mov
inc
cmp
ret
test
and
push
mov
inc
out
sub
data16
mov
sti
leave
cmp
pop
adc
sub
pop
in
mov
lret
mov
sbb
daa
leave
pop
lret
cli
jae
jl
out
push
sbb
mov
pop
dec
jo
dec
mov
adc
dec
arpl
jmp
xchg
pushf
dec
jns
ja
in
cmp
repnz
jo
xor
insl
inc
xchg
repnz
nop
xchg
icebp
xchg
mov
add
lret
and
fwait
lahf
lods
std
mov
push
mov
insb
cmpb
pop
mov
imul
rcr
inc
mov
pusha
pop
adc
aaa
in
lret
cmp
inc
jge
js
inc
xchg
les
shll
scas
out
mov
xlat
aas
push
dec
sub
mov
xchg
stos
push
in
es
hlt
test
cs
aas
mov
add
mov
jb
xchg
cmp
in
movsl
xchg
mov
lahf
scas
xor
loopne
fsubrs
dec
adc
sub
test
and
push
push
and
push
pop
fwait
jns
bound
dec
sub
ss
jle
inc
push
push
sti
pushf
sbb
or
sahf
adc
mov
mov
xchg
sub
ret
xchg
cld
bswap
or
mov
sbb
clc
or
lcall
jl
repz
adc
sub
jb
movsb
cwtl
ljmp
loopne
pop
pusha
aad
sbb
insb
ret
rorb
or
mov
or
cmp
or
cmpsl
dec
xor
out
fdivrl
sbb
inc
mov
and
xlat
je
in
mov
in
fs
or
jbe
xchg
xchg
mov
lret
pop
adc
add
shll
push
outsb
cmp
cwtl
pop
mov
dec
fildl
fucom
inc
dec
jle
jns
stc
inc
not
jle
loop
dec
jbe
jl
aam
push
stos
dec
pushf
sub
push
jno
add
dec
sahf
xchg
fmul
mov
test
push
inc
mov
xor
ljmp
subb
out
jo
pop
inc
pop
ss
test
lods
jle
xlat
and
xchg
dec
mov
mov
mov
dec
pusha
mov
mov
adc
lds
sub
or
pop
cwtl
and
push
repz
xor
mov
sbb
lock
into
gs
in
cld
xor
out
jnp
outsl
sbbl
dec
stos
js
xchg
mov
test
test
dec
popf
dec
stc
notl
sub
les
dec
addr16
outsl
xchg
das
daa
aad
xlat
mov
jae
push
cwtl
int
ret
sti
mov
fildl
iret
or
or
and
push
sub
dec
cld
test
ret
dec
inc
dec
dec
imul
cmp
test
repz
add
rcrb
mov
es
xlat
xor
ret
dec
movsl
jno
inc
movsl
push
xor
rdtsc
popf
mov
jo
xlat
mov
les
bound
push
push
idivl
and
mov
and
mov
adc
dec
mov
or
out
cmp
mov
lods
mov
mov
fldt
sbb
and
mov
xchg
mov
out
testb
fidivl
mov
int3
push
mov
pop
leave
sub
cwtl
ss
adc
mov
jl
adc
orl
inc
pop
inc
test
push
adc
push
adc
stc
or
sbb
mov
jo
inc
fisubrl
adcl
cmp
shll
fists
outsb
loope
jmp
xor
test
pop
sub
rcr
pop
repnz
sub
sub
adc
cmp
fdivr
xchg
dec
fwait
pop
cmp
aas
cmpb
into
addb
xor
mov
sbb
sbb
stos
pop
sub
inc
add
mov
cmp
jmp
loope,pt
mov
mov
aas
xchg
inc
jb
mov
sbb
lods
inc
xchg
loop
inc
sti
pusha
sbb
aaa
jae
ror
roll
sub
les
mov
and
sub
das
mov
pop
inc
rcrl
into
mov
je
or
filds
mov
and
in
dec
xlat
push
sbb
jns
lock
and
lods
loope
xchg
dec
mov
push
xchg
mov
mov
mov
xchg
shll
dec
xchg
aas
inc
iret
arpl
clc
pop
mov
mov
mov
aad
mov
cld
pop
xor
jle
lret
dec
push
cmp
idivb
int3
adc
aam
xchg
dec
sub
stos
das
jb
push
or
xor
xor
mov
lods
inc
adc
mov
mov
lahf
inc
out
or
sbb
fcoms
xchg
sar
stos
test
cltd
adc
ljmp
xor
xor
mov
pop
push
xchg
cli
xor
ret
mov
push
cwtl
lods
negb
jae
cmc
in
lret
xchg
scas
jno
jns
ds
lret
out
vpunpckhbw
ljmp
and
dec
push
lods
out
daa
jno
pavgw
outsb
arpl
inc
xchg
mov
push
xor
mov
insb
aam
inc
pushl
push
cmp
push
out
xor
adcl
and
dec
add
repz
push
push
cmpb
out
bound
add
inc
cmpsl
test
lret
mov
fistpll
jp
adc
mov
pop
hlt
sbb
mov
fwait
lret
pop
sti
pop
xor
add
adc
jmp
clc
jae
dec
xchg
lret
mov
outsl
pop
inc
xchg
stos
or
filds
shll
imul
xor
lods
stos
jle
mov
mov
outsl
add
push
insl
sbb
mov
aad
daa
jecxz
xchg
mov
mov
jmp
test
jp
popa
xchg
fsubs
jo
xchg
inc
xor
sub
xor
mov
jg
movsb
mov
sub
rolb
loope
pop
adc
sti
rol
and
cltd
insl
sbb
inc
push
stos
loop
or
push
cmp
xchg
sbb
xor
and
aam
mov
mov
das
ret
icebp
es
lret
pop
mov
sub
sbb
stc
mov
ds
mov
mov
push
shrl
mov
repz
mov
in
inc
fistl
das
mov
ret
movsb
addr16
addl
jecxz
pop
mov
inc
or
mov
cmpl
xchg
xchg
and
shll
push
aas
and
nop
inc
cmpsl
dec
pop
in
jecxz
pop
xchg
xchg
push
inc
jecxz
out
jl
push
adcl
ffreep
mov
insb
repz
inc
push
cmpl
std
jns
mov
jle
roll
jbe
test
add
ds
dec
lret
cmp
push
add
sub
xchg
mov
cmp
aaa
mov
mov
lcall
jo
cli
push
pop
gs
cwtl
push
arpl
repnz
mov
push
cmpsl
and
jge
ret
addr16
test
pop
lods
lret
inc
ss
jae
adc
inc
jg
ss
cmc
inc
insl
xchg
add
les
or
shr
xchg
dec
xlat
push
outsl
movsl
sub
movsl
cs
cmpsb
enter
aam
addl
and
fnstenv
xchg
and
enter
pop
ret
mov
mov
push
ffreep
pop
mov
pop
push
fwait
sarb
fsubl
int3
test
xor
les
loope
cmc
lock
push
inc
je
iret
aas
xchg
xor
sub
xor
cld
mov
fldt
xor
addl
test
aam
imul
pop
out
stc
dec
test
fs
add
sbb
mov
psubw
pop
test
daa
pop
imul
imul
jmp
jne
lret
pop
pop
add
leave
adc
cmp
cwtl
lods
mov
xlat
repz
pop
jp
sarl
es
xchg
sahf
sbb
adc
add
or
sub
or
sbb
pop
push
pop
inc
adc
xor
jns
add
push
xchg
fwait
ja
sti
mov
cmp
add
iret
aam
push
xchg
mov
mov
sub
adc
inc
leave
adc
push
enter
sbb
std
pusha
out
mov
mov
pop
dec
mov
sahf
sarl
scas
clc
lods
negl
scas
cmc
cmp
cmp
scas
or
out
adc
xchg
insl
ret
adc
je
sbb
imul
popa
cmp
enter
xchg
mov
pop
je
ret
repz
iret
test
inc
popf
fldcw
fstp
subb
lea
push
cmp
fstpt
data16
or
lds
shl
fnstcw
pop
and
movsb
dec
fwait
pop
orb
enter
pop
pop
and
push
cltd
cmp
mov
movsl
test
sbb
cmp
mov
mov
gs
in
mov
push
cmp
pop
neg
scas
sbb
aaa
mov
xchg
jb
xor
loope
dec
mov
jmp
roll
or
mov
lret
cltd
into
and
pushf
dec
je
js
xchg
ret
mov
mov
lret
add
cmp
sub
add
lret
mov
mov
pop
mov
cmp
push
lahf
mov
ror
jb
data16
dec
pop
shrl
testl
dec
jbe
sahf
jae
jae
xor
mov
insb
dec
xchg
lds
sub
jo
stos
jnp
fistpll
or
jae
cltd
ljmp
mov
out
push
mov
mov
mov
push
insb
sub
daa
pop
movsb
mov
testb
cli
or
das
ss
movl
sarl
cmp
cmp
sub
xchg
xor
xor
arpl
pop
aaa
mov
sbb
lahf
pop
add
lret
mov
out
and
loopne
out
push
adc
jge
iret
xor
insl
repnz
cmp
push
and
adc
inc
clc
mov
push
xchg
insl
mov
xchg
out
xor
push
xchg
mov
mov
xor
jae
pop
lcall
cmp
xchg
jg
out
jle
xchg
outsb
addr16
ret
arpl
xlat
push
hlt
cs
int
mov
xchg
std
push
xor
fs
jb
jnp
jmp
test
das
call
lea
mov
pop
test
xchg
into
stc
xlat
test
xchg
mov
outsl
or
adc
int
xchg
in
or
sbb
jnp
adc
cld
daa
pop
mov
ds
pop
aad
cltd
add
je
push
enter
sbb
scas
insl
test
pop
or
sbb
xchg
sbb
out
pop
xlat
cwtl
inc
adc
test
or
stos
fisubl
pop
pop
in
mov
pop
mov
in
lods
pop
mov
add
enter
imul
outsl
mov
sub
cmpsl
test
outsl
add
mov
xchg
pop
jmp
inc
outsl
inc
inc
sti
gs
imul
mov
mov
cs
call
sbb
sub
cld
cmp
add
adc
mov
push
sbb
xor
stc
and
jle
lds
xchg
fcmovnb
dec
inc
je
xchg
inc
mov
inc
xchg
xchg
fildl
ret
sub
test
xchg
hlt
xchg
jmp
pusha
sarb
pop
jecxz
inc
inc
push
push
roll
popf
test
clc
xor
jno
ficompl
rcll
xor
dec
call
dec
dec
mov
sti
push
out
inc
icebp
mov
sub
jno
inc
stc
hlt
sahf
orb
xchg
dec
ret
scas
mov
andl
outsl
lret
mov
shl
loopne
and
or
in
rcl
mov
int
out
push
aas
cmp
jecxz
pop
les
arpl
and
ja
push
lahf
stc
mov
call
or
test
xchg
call
and
push
nop
imul
push
xorl
mov
dec
cmp
stc
sub
cli
adc
in
add
pusha
pop
pop
xor
or
outsl
scas
stos
jae
scas
icebp
ja
lock
lcall
push
and
out
test
xor
mov
push
test
outsl
cmp
movsb
notb
mov
lcall
and
sub
subb
inc
push
add
arpl
push
das
mov
push
sub
pop
rclb
stos
fwait
or
data16
lea
push
sysenter
test
adc
xor
or
sbb
inc
test
jl
xchg
add
cmp
jo
mov
fldenv
dec
mov
in
pop
inc
inc
adc
jg
pop
shl
mov
jge
adc
or
into
scas
mov
fsubrl
les
mov
xor
mov
xchg
scas
daa
pop
add
or
or
inc
test
ss
push
rcrl
aaa
push
call
dec
gs
adcl
icebp
jnp
jnp
das
and
imul
or
push
dec
dec
push
arpl
adc
sbb
ret
pop
scas
xor
sti
cs
inc
mov
call
cmp
adc
xor
scas
cli
test
sub
outsl
outsl
out
xchg
mov
shrl
out
cwtl
xchg
test
repz
iret
test
stos
std
sbb
xchg
push
pop
sub
movsb
push
mov
and
inc
jbe
fnstenv
sub
mov
out
push
das
pop
mov
popf
cwtl
pop
push
add
insl
lods
shrb
or
sbb
stc
outsl
into
or
jmp
addr16
hlt
cmp
push
inc
inc
gs
push
adc
cwtl
adc
push
jl
cld
mov
gs
mov
sbb
cmp
insb
pop
mov
daa
adc
ljmp
sub
xor
pop
push
fisubrs
mov
sahf
mov
sub
cmp
adc
jnp
mov
inc
cld
sub
int3
dec
cwtl
push
ja
cmp
cwtl
jnp
jge
fwait
sbb
jle
mov
mov
in
rcll
or
loopne,pn
push
mov
popa
and
les
jg
jb
scas
push
movsb
inc
pop
push
sbb
mov
repz
cmc
jge
jns
xor
sub
dec
push
mov
test
mov
xor
pusha
xchg
jmp
mov
js
or
cmp
cld
adc
test
addb
add
mov
push
sbb
sub
sub
sbbb
pushf
movsb
lret
inc
inc
xor
repz
xor
xchg
das
xchg
movsl
popf
lcall
out
lahf
pop
mov
mov
mov
adc
jb
adc
mov
lea
cmp
mov
push
inc
divb
push
pop
int
sbb
sub
xchg
jmp
in
push
fwait
jmp
out
stos
mov
mov
and
imul
icebp
inc
sti
sbb
test
inc
cmp
ret
mov
insb
nop
popa
ljmp
neg
xor
or
lock
mov
cs
xor
aad
std
addr16
stc
in
adc
mov
iret
mov
rcr
sub
fisttps
outsl
lahf
xchg
je
in
sbb
movsb
dec
je
xor
shlb
sub
div
cmp
add
popf
inc
out
addr16
xchg
int3
inc
pop
push
adc
fcoms
push
lods
sub
xlat
sub
leave
or
rcl
mov
cmp
out
std
ja
std
sub
aas
sub
repnz
aas
das
les
mov
subb
mov
dec
scas
mov
dec
into
or
das
cltd
mov
jns
jle
movsl
stos
adc
fs
in
sbb
cltd
sbb
lret
popf
dec
xor
ret
mov
xor
dec
imul
loop
dec
mov
cmp
sbb
jle
fidivrs
je
rcll
adc
cmpsl
lret
push
movsl
fdivr
fistpll
mov
pop
popa
xchg
outsb
sti
cwtl
scas
pop
push
repz
cwtl
pusha
in
mov
das
in
sbb
call
mov
shll
inc
loope
push
xor
sub
jae
push
ret
sbb
jp
pop
int3
mov
stos
or
pop
repz
imul
sub
iret
bnd
cmp
dec
fnsave
cmp
iret
add
stc
loope
add
add
push
or
ja
test
mov
fldenv
mov
or
shrl
ljmp
push
ficompl
mov
cld
sbb
pop
jge
gs
in
imul
add
mov
mov
popf
mov
sub
test
push
out
sbb
dec
sahf
jle
dec
mov
mov
dec
daa
pop
jg
push
cltd
std
inc
lds
cs
insb
mov
lret
not
jo
jbe
mov
xchg
scas
and
call
dec
mov
mov
fisubs
xor
or
or
out
cmp
dec
lcall
push
popf
aad
js
mov
push
test
mov
xchg
xchg
fbstp
int3
sti
sub
scas
xor
pushf
push
stc
adc
gs
ss
pop
push
inc
sub
sbb
jmp
clc
pop
in
dec
jmp
sub
add
pop
cmpsb
jbe
mov
inc
cs
pusha
sbb
loope
jmp
sahf
out
sub
nop
mov
mov
rol
inc
and
or
mov
or
xchg
xor
pop
push
repnz
cmp
rcrl
sbb
sbb
cmp
push
lock
lock
pop
bswap
ds
js
mov
out
xor
mov
sub
clc
mov
les
cli
es
cmc
je
mov
jb
mov
dec
cs
enter
ret
and
sahf
popa
in
dec
sub
loop
test
xchg
sub
xor
jmp
loop
clc
stos
pop
add
sbb
daa
arpl
inc
mov
jbe
and
ret
add
sbb
adc
scas
xchg
fisubrl
pop
rorb
fwait
cmp
in
cmp
sub
mov
loope
pop
outsb
int3
cmp
aaa
pop
ja
xchg
ds
loop
inc
dec
sbb
mov
cmp
mov
add
adc
push
in
jne
pushf
mov
mov
xchg
jne
paddd
mov
mov
shll
or
and
add
cmp
outsl
or
outsb
mov
jae
idivb
in
sahf
test
je
inc
lea
jnp
ljmp
add
repnz
movsb
adc
cmc
icebp
arpl
dec
leave
sbb
test
cmp
ss
das
dec
loop
shrl
jp
mov
push
arpl
ror
push
js
inc
jl
mov
mov
cmp
or
fmul
out
or
push
in
js
or
dec
scas
mov
mov
inc
inc
aas
decl
xor
jns
inc
stos
xchg
add
dec
dec
shlb
pusha
add
or
jns
dec
adc
mov
mov
and
or
fldl
sti
mov
mov
mov
dec
loopne
jecxz
dec
xchg
cltd
adc
mov
outsb
jge
xchg
dec
aaa
je
je
sbb
pop
push
lock
fldl
lods
fimull
push
dec
inc
or
mov
mull
std
xor
data16
fistps
loope
mov
xor
inc
jmp
outsb
xlat
into
cmpb
clc
xchg
jbe
adc
adc
adc
hlt
adc
sbbl
xor
data16
movsl
mov
into
movsb
jbe
xchg
adc
ss
dec
fimull
outsb
xchg
mov
push
aaa
loopne
push
cmp
pop
scas
sarl
add
loope
and
imul
stos
xor
push
mov
cltd
push
add
mov
inc
pop
and
mov
mov
es
sub
popa
xor
in
out
lahf
das
mov
test
mov
push
in
test
xchg
mov
push
test
cmpsl
inc
cli
xchg
ljmp
sub
fnstcw
icebp
xor
mov
sub
add
mov
mov
xorl
or
xchg
and
mov
inc
pop
ret
repz
roll
xor
or
arpl
dec
adc
pop
std
push
call
cld
pmaddwd
pop
add
mov
lods
loop
add
in
cwtl
or
ss
shl
sub
jle
pop
lcall
in
loopne
jae
in
mov
mov
jnp
xchg
xchg
cmpsl
cld
repnz
icebp
shlb
clc
out
mov
loope
mov
mov
xchg
cmp
jne
mov
push
pop
xor
pushf
std
push
in
bound
adc
into
sbb
pop
loop
pop
xchg
pusha
cwtl
add
sub
jbe
idivl
stos
pop
addr16
mov
pop
inc
xor
in
jb
js
xor
mov
mov
aam
lcall
pop
or
sub
call
cmp
push
popa
jns
jne
popa
imul
retw
pop
cmp
outsl
ret
xchg
scas
pushf
add
aad
inc
cmp
pushf
sbb
loopne
dec
add
add
sbb
leave
inc
xchg
ret
enter
enter
not
cmp
imulb
jmp
addr16
add
dec
push
pushf
inc
movsl
pushf
xchg
test
jle
lods
jmp
mov
xchg
sti
mov
mov
repz
add
sub
push
dec
lock
mov
mov
arpl
pushl
push
loopne
cmp
shlb
fnstcw
xchg
sbb
out
jns
cld
int
xor
mov
divb
pop
or
mov
test
mov
outsb
pop
cmp
xchg
push
in
push
daa
sbb
xchg
popa
out
jle
cwtl
add
inc
inc
adc
orl
cmp
lret
in
push
in
fwait
addl
mov
jecxz
dec
mov
cltd
inc
and
push
arpl
imul
pop
pop
in
es
movsb
adc
cmpsl
inc
fdivr
ret
cmp
out
mov
add
pop
aaa
pop
mov
xor
sbb
mov
xchg
sbb
in
subl
divl
sub
jp
xchg
jmp
push
cmp
jbe
ljmp
push
divl
aas
test
subb
push
testl
mov
pusha
js
pop
push
sarl
icebp
or
jno
and
inc
sub
ficoms
fwait
shl
push
mov
cmp
imull
or
dec
dec
mov
std
ret
jo
push
shll
jecxz
into
out
fdivs
mov
fwait
jae
lods
das
or
sub
xchg
xor
addl
and
sbb
and
adcb
testl
flds
jno
mov
push
push
jnp
push
pop
cmc
repz
and
roll
or
pop
arpl
jmp
fs
ret
insb
ret
into
in
push
sub
sub
ja
mov
lods
icebp
cli
cmpsb
ja
xor
and
ret
mov
ret
dec
pop
push
shl
push
mov
push
mov
jne
int
popa
ljmp
enter
mov
cmp
leave
pop
dec
xor
inc
movsl
xlat
pop
es
and
mov
arpl
shll
pusha
jbe
or
mov
out
insb
inc
fcomi
inc
stos
jge
scas
into
imul
push
nop
aas
out
stos
or
fcompl
mov
inc
ret
and
mov
adcl
xor
and
xchg
cmp
leave
imul
ficoml
aaa
mov
orl
in
inc
xor
adc
aam
out
pop
pop
dec
insl
std
lcall
push
mov
mov
push
cmc
mov
lods
push
popa
jmp
cmp
xor
mov
mov
lcall
xchg
mov
cs
jb
ret
mov
pop
mov
ljmp
xchg
outsl
mov
lret
pop
andb
inc
jg
enter
sbb
lcall
loope
lret
loopne
dec
mov
mull
sbb
xchg
mov
adc
repnz
or
push
xchg
inc
push
cmp
pop
dec
jmp
mov
xchg
ret
mov
jbe
dec
pop
xlat
dec
adc
aad
jnp
xor
orl
jmp
lods
dec
add
fsubrl
pop
push
inc
xchg
mov
std
repz
mov
sbb
negb
and
sbb
adcb
push
and
enter
rcrb
pop
loopne
loope
stc
les
adc
sbb
add
adc
fdivl
lret
adc
in
lcall
add
rclb
xor
xchg
and
xor
scas
loopne
mov
negb
into
mov
fldenv
mov
insl
xor
lcall
jl
stos
or
call
or
adcl
or
lods
push
imul
ljmp
rcl
scas
stos
sub
lds
jo
adc
xor
adc
dec
stc
and
ljmp
aaa
rolb
movsl
cld
int3
cmp
mov
sbb
aaa
pushf
insl
pop
sub
pop
jno
push
push
lods
mov
fwait
dec
call
pop
inc
fildll
xlat
jmp
mov
divb
hlt
or
dec
lcall
cmp
jb
dec
daa
and
loopne
mov
push
mov
push
bound
mov
mov
xor
or
add
xlat
popa
push
cmpsb
fsubr
repnz
daa
imul
repz
and
xchg
add
dec
and
clc
lock
xchg
mov
imul
mov
repnz
loopne
cs
jp
daa
jne
fildl
mov
xchg
rdpmc
inc
cmc
dec
mov
insb
pop
das
daa
push
inc
clc
sbb
loopne
cmp
sahf
sub
push
clc
dec
and
sahf
cmp
or
mov
xchg
nop
sub
lret
xor
movsb
cmc
pop
and
mov
jle
out
leave
cmpsb
shrl
lcall
cmpsl
add
mov
mov
into
push
add
aaa
dec
inc
pop
lret
cmp
sbb
jno
pop
fisttps
push
fistps
pop
mov
cli
xchg
lods
jecxz
add
cld
sti
xchg
adc
mov
loop
fiadds
add
lock
in
jecxz
mov
jne
jmp
int
mov
inc
insl
mov
mov
int
ret
dec
lods
arpl
in
in
into
mov
sti
rol
in
arpl
jne
mov
push
push
dec
xor
fst
in
not
sbb
jl
cli
mov
push
push
cmc
movl
or
dec
xor
cmp
fsubrp
daa
loopne
sub
imul
aam
or
inc
push
daa
mov
fldcw
rolb
dec
jmp
cmp
repz
lcall
mov
xchg
dec
pop
jb
mov
pop
mov
inc
arpl
movsb
push
fdivs
inc
sbb
dec
add
mov
sub
lock
es
std
hlt
not
push
test
dec
into
jp
add
or
dec
loop
mov
test
pop
ljmp
add
pushf
jl
repz
mov
inc
push
mov
popa
into
mov
jge
call
cmp
jecxz
das
insl
pop
xchg
and
out
imul
mov
aam
pop
outsb
cmp
xor
pushf
dec
sub
sahf
mov
cmp
sti
add
push
push
fs
xor
mov
xorl
inc
jo
aas
sub
ja
push
mov
in
inc
xor
sarl
cmp
fcomps
in
pop
test
mov
subb
jg
das
xchg
popf
jmp
imul
inc
inc
in
xor
inc
imul
mov
mov
add
mul
xor
cld
inc
add
xor
xchg
pop
rorl
lods
mov
lcall
pop
sbb
icebp
dec
mov
sbb
dec
push
xlat
cs
loope
test
sbb
popf
push
dec
test
ret
hlt
mov
int3
sub
xchg
ss
mov
sbb
push
enter
sahf
movsb
add
jp
cltd
xchg
sbbl
cli
adc
push
xchg
fwait
out
sbb
jmp
adc
in
imul
push
into
stc
cmp
mov
lahf
inc
and
dec
in
pusha
add
scas
sti
out
push
add
pusha
test
pop
xorb
sbb
pop
or
fcomp
pop
sub
dec
movsb
xchg
and
out
loop
repz
fildl
mov
and
adc
es
in
ds
mov
cmpsb
cmp
je
int
int3
pop
jne
sahf
mov
or
loopne
mov
and
lds
arpl
inc
outsb
scas
jo
shlb
lret
outsl
mov
mov
pushf
aad
dec
call
bound
mov
jmp
int
jle
lret
mov
in
ja
imul
mov
adc
scas
xor
pop
push
mov
ljmp
test
jbe
cmpsb
xor
insb
out
or
xchg
jns
cmp
mov
arpl
jo
aas
push
lea
scas
mov
js
sub
stos
sub
lcall
ja
add
lea
test
push
fisttpll
jae
adc
sub
mov
xchg
xor
js
mov
outsl
and
xor
ja
lea
add
sub
je
jg
mov
imul
pop
gs
repz
sbb
xor
dec
sbb
mov
test
div
int
or
ficomps
pop
gs
and
stos
jns
leave
sbb
push
je
xchg
leave
sahf
sbb
rcll
mov
adc
mov
repnz
adc
popf
jno
scas
data16
js
popf
push
cltd
cmc
jmp
xor
lahf
aas
scas
scas
sbb
cli
aaa
mov
clc
mov
or
mov
cmp
jns
mov
or
daa
aaa
rcr
adc
adc
lahf
loop
hlt
addr16
std
mov
inc
sub
dec
and
pop
pop
cmp
fs
ret
sbb
and
pop
stos
adc
outsb
sub
push
push
mov
inc
movsb
sbb
cmpb
sbb
std
popf
inc
add
pop
xchg
adc
sarw
lods
push
mov
inc
mov
sbb
inc
inc
fldenv
jmp
aas
mov
nop
sub
mov
es
scas
push
mov
jmp
addl
sub
or
sbb
jns
aam
adc
push
cmp
sbb
pop
pop
cmpsl
in
jg
fwait
push
jnp
pop
cmp
jnp
ret
repz
outsb
jnp
cmp
jle
incl
int3
jb
jge
add
stos
pushf
gs
xchg
fwait
adc
shl
arpl
sub
pavgb
jle
int
sbb
or
std
push
lds
jle
stc
cltd
rcrl
aam
aaa
jge
dec
add
xor
cmpsb
fildll
sub
mov
cmc
mov
in
xchg
and
lcall
mov
mov
push
rolb
sbbb
or
pop
ret
sub
inc
testb
or
out
add
aam
xchg
in
in
mov
sub
push
fwait
xchg
mov
or
imull
js
shll
ljmp
push
jle
dec
xchg
aad
xor
fmuls
sbb
ss
sti
insb
push
add
pop
insl
dec
cmp
sub
div
shl
or
xchg
inc
inc
aas
adc
pop
lods
in
lods
add
movsl
mov
xchg
adc
pop
cmp
stos
int
push
daa
or
pushf
jmp
out
icebp
or
aad
inc
insb
jle
cld
clc
mov
or
jne
cmpsl
push
out
sub
lret
pop
hlt
lds
sub
subb
lret
and
fidivl
sub
xor
cltd
dec
in
or
fcompl
pop
repz
popf
sub
cmpb
lods
cmp
cltd
mov
aad
stc
fcompl
sub
cmp
jg
xchg
dec
dec
in
or
aad
adc
icebp
test
stos
aaa
ret
xchg
xor
xlat
dec
xor
xchg
lods
movsb
add
fwait
add
push
pushf
xchg
out
scas
out
pop
push
sbb
js
rcr
ret
scas
cld
arpl
ds
int3
push
popf
test
retw
sub
cltd
pop
mov
into
jbe
xchg
sub
mov
cmc
popa
inc
fisubrl
mov
xchg
loop
fstps
pop
mov
ret
arpl
lea
dec
sbb
shl
outsb
pop
fstl
add
jno
gs
inc
push
mov
mov
es
stos
xchg
divb
movsb
jecxz
push
dec
mov
fcomp
in
int
pop
arpl
dec
ds
bound
popf
push
clc
push
fbstp
jmp
pop
pushf
js
mov
or
dec
add
enter
inc
push
push
cmc
leave
popf
adc
sub
ficomps
push
aam
mov
cltd
testl
xor
out
sbb
and
inc
pusha
cs
shll
inc
jnp
ret
rcrl
mov
mov
inc
out
mov
cmpsb
popf
cmp
stos
sub
cmp
adc
cld
mov
xchg
pop
mov
leave
icebp
out
rcrb
push
out
pop
or
jbe
outsb
popa
lods
push
and
xchg
or
dec
pusha
mov
jl
enter
mov
mov
mov
jg
cli
mov
or
enter
repz
or
xlat
lcall
mov
icebp
ret
fisubl
rcll
push
pop
and
mov
test
mov
and
addr16
popf
or
int
in
and
lret
fisubrl
fbld
xlat
enter
xchg
push
aaa
testl
jbe
dec
mov
pusha
mov
mov
outsb
xchg
sub
sbb
lock
pop
ja
ret
xchg
inc
std
in
xorl
popf
jne
outsl
mov
sbb
push
push
inc
mov
mov
fcomps
cmp
jno
lds
loop
shlb
paddsw
adc
xor
movsl
sbb
xchg
pop
mov
test
push
push
dec
cmp
and
push
outsb
sub
cs
js
mov
or
imul
mov
divb
loop
fstpl
jae
push
cwtl
lahf
mov
xor
ja
mov
push
mov
aam
fcoms
imul
repz
nop
mov
xor
fwait
jg
pop
out
sub
or
cmp
add
pop
cld
call
les
rcll
inc
add
inc
movsl
fucomp
xlat
pusha
outsb
call
idivl
lret
adc
mov
lret
subb
cmpsl
sub
fdivr
outsb
lahf
cli
lret
jnp
jmp
adc
jno
xchg
and
mov
mov
push
test
dec
clc
adc
fwait
dec
lds
inc
sub
int3
xchg
mov
aaa
dec
and
shlb
jbe
jp
mov
cmc
aas
add
pop
adc
mov
push
inc
add
scas
arpl
jb
clc
pop
enter
push
push
xor
pop
pop
or
lods
hlt
or
out
sahf
cmp
xor
insl
cmc
movb
push
mov
xchg
gs
stos
popa
ja
js
jp
pop
sti
pusha
cld
lea
out
fbld
ljmp
das
jmp
add
mov
jmp
dec
pop
jo
or
inc
push
xor
lcall
jle
insb
ja
dec
in
jmp
addb
jo
pop
out
out
iret
push
and
fcoml
jle
imul
shrl
dec
and
add
mov
adc
ljmp
popf
mov
mov
mov
je
inc
nop
call
lods
sub
out
psrlw
std
out
mov
cmp
ret
push
or
insl
lods
mov
mov
xchg
sub
pop
sbb
mov
cltd
or
rorl
fldt
jo
fstpl
in
in
bound
jns
push
out
in
xor
fisubs
mov
loopne
pusha
push
lret
repnz
into
pop
sahf
mov
imul
lods
push
sarl
inc
push
test
out
aad
daa
add
cwtl
sub
pop
mov
sbb
test
mov
insl
dec
dec
mov
fstp
xchg
decb
sub
push
inc
adc
push
aas
jb
mov
push
stos
mov
mov
insb
xchg
or
or
xor
pop
push
add
push
repnz
sbb
jl
ds
dec
mov
pop
ja
in
gs
xchg
fildl
jnp
filds
imul
inc
mov
cmp
xor
cmp
popf
xchg
and
je
cmp
in
xchg
inc
push
xchg
and
push
shll
dec
fidivs
int
mov
lret
mov
dec
and
push
cmc
ja
push
or
add
ret
push
mov
pushl
es
notb
testl
mov
std
in
repz
xor
xchg
sbbb
gs
scas
pop
add
xor
push
outsl
pop
mov
or
int3
jne
cmpb
mov
mov
mov
mov
cmp
cmp
je
cmp
ss
xor
mov
sub
lret
ds
adc
inc
lret
out
adc
push
lods
in
test
call
mov
dec
inc
pop
mulb
pop
clc
cmp
aad
stos
jnp
ret
notb
pop
dec
push
fwait
push
push
lcall
cmp
popa
mov
inc
imul
push
mov
mov
and
jae
data16
iret
lds
jae
cli
jns
xchg
insb
psadbw
mov
sub
fists
xchg
lcall
scas
std
repz
shr
into
es
scas
jl
adc
pop
jmp
faddp
fistps
jg
mov
rcll
addr16
cmpsb
lock
xchg
bound
jnp
dec
and
or
dec
push
cld
and
pop
inc
pushl
push
dec
call
or
lds
add
push
cltd
stos
mov
mulb
lds
mov
out
mov
inc
or
inc
aas
push
cmp
rcrl
sub
hlt
xchg
js
jmp
aad
mov
dec
pop
xchg
add
pop
pop
mov
js
test
insl
mov
addr16
add
adc
notl
shll
push
inc
adc
insb
inc
sbb
jle
ret
mov
fisubs
jp
shl
and
xor
push
pop
aas
cmp
and
or
mov
mov
aaa
aam
outsb
push
fiadds
jle
cmp
les
jg
mov
fmul
jae
sbb
xchg
push
or
icebp
icebp
lock
pop
dec
sti
fildll
nop
rcr
fs
sbb
mov
movzwl
bsr
daa
pop
and
add
mov
test
add
loopne
int
mov
add
scas
inc
aad
dec
ffreep
mov
rclb
imul
xchg
int
mov
aam
xor
imul
inc
jg
cmp
sti
leave
dec
push
jmp
dec
xchg
stc
mov
fidivrs
mov
cmp
and
insb
jne
dec
xchg
scas
into
dec
jge
outsb
sbb
fmuls
xchg
ljmp
mov
js
push
mov
js
into
sub
dec
adc
xor
or
and
sti
mov
testb
jge
in
add
aas
xchg
in
mov
hlt
inc
arpl
and
push
lods
pop
mov
scas
pop
push
popf
push
out
ficompl
in
test
shll
pop
orb
in
mov
sarl
adc
jb
and
cmpsb
out
fldl
out
test
enter
mov
add
mov
add
stos
push
lds
jge
mov
jb
or
adc
pop
ror
adc
or
add
add
push
lcall
pop
inc
add
in
mov
push
pop
inc
das
mov
out
hlt
test
pusha
push
sbb
pop
cmp
xor
add
int
fildl
and
adc
mov
push
std
in
jp
outsl
in
push
fwait
or
fwait
sbb
jge
adc
ror
loopne
cmpsb
mov
push
or
mov
adc
mov
xor
int3
arpl
xchg
in
std
mov
cwtl
push
outsl
adc
adc
scas
push
out
mov
inc
push
jbe
or
add
sbbl
fidivrs
fisttpl
lock
imul
into
iret
clc
ljmp
jbe
xchg
jmp
xor
dec
lds
pop
add
dec
loope
sar
sbb
es
sub
pusha
in
aam
jp
lods
popf
sub
jne
lds
lock
lret
xchg
or
and
add
jp
dec
or
shlb
mov
loopne
arpl
cld
cmp
mov
repz
dec
push
leave
xchg
scas
push
lds
imul
cld
pop
inc
fadds
sbb
or
or
fimuls
mov
fs
sub
and
mov
fnsave
push
fidivl
push
scas
rcl
pop
adc
cmp
into
xchg
out
sahf
cmp
push
sub
in
pop
add
subb
cmc
int3
lret
mov
insl
mov
sbb
ljmp
push
les
push
lcall
cwtl
test
loopne
leave
mov
outsb
sahf
inc
mov
push
popa
xor
out
imul
mov
movsb
adc
mov
aad
mov
xchg
push
add
lret
scas
inc
fdivl
xor
add
bound
dec
or
mov
mov
fiaddl
xor
shl
xchg
call
and
jl
mov
mov
daa
aam
pop
push
filds
hlt
pop
sbb
push
insb
inc
jno
mov
sahf
push
xor
xor
cld
or
fnsetpm(287
add
cmc
and
int3
into
incb
pop
mov
or
cmp
std
fwait
test
cld
stos
mov
lea
sub
push
pop
int
dec
mov
pop
jbe
jmp
dec
clc
mov
mull
jno
sbb
std
pop
je
sub
pop
mov
or
inc
push
cmc
arpl
jo
subps
mov
mov
cltd
fcomps
push
jmp
cs
mov
pop
stos
fwait
pusha
stc
xor
fmulp
sbb
jl
or
lahf
aas
cmp
sbbl
in
push
int
jmp
imul
or
dec
fstpt
sbb
xor
lahf
test
lds
mov
mov
push
fsubrl
outsl
mov
data16
inc
lods
fldl
mov
mov
mov
jg
or
ljmp
xchg
das
ja
xchg
cmpsl
pop
or
mov
jb
inc
adc
test
pop
cmp
xchg
outsb
inc
decb
sub
add
je
cmp
mov
and
adc
les
es
clc
cmp
into
lods
xlat
lret
das
mov
loop
add
cmp
lcall
popf
sbb
or
out
addr16
xor
xor
mov
adc
or
iret
lds
into
mov
and
daa
fstps
cmc
aam
inc
andl
pop
push
push
rorl
push
and
xchg
pop
sahf
sbb
or
and
into
ffree
jnp
or
push
dec
test
and
insb
rcrb
jg
loopne
andb
sbb
je
cmp
enter
movsl
pop
mov
test
jne
orl
loope
jg
sbb
mov
loope
stc
xor
and
stos
in
jae
lods
fwait
out
int
mov
xchg
mov
frstor
mov
cmp
das
imul
mov
sub
sahf
mov
sub
adc
add
fs
push
clc
stos
sub
add
xchg
adc
adc
jecxz
or
shrl
into
push
xchg
fwait
cli
fwait
lods
xchg
mov
push
sub
je
push
test
and
in
es
cmpb
lds
mov
out
xchg
jbe
push
xor
mov
in
ficoml
movsb
outsl
add
mov
sbb
nop
sbb
stos
sbb
ss
dec
mov
call
pop
lock
add
dec
ret
xchg
in
mov
pop
lods
sbb
mov
xor
mov
rclb
push
stos
shlb
add
adc
dec
shrb
orb
cmpsl
aam
push
xor
loop
fisttps
pop
cmp
into
xchg
cmpsl
mov
mov
cmpsl
sbb
fninit
rcrl
xchg
pop
gs
in
into
mov
lret
add
xor
cld
pop
in
mov
idivl
push
mov
orb
xchg
or
dec
ljmp
into
test
es
xor
push
jne
dec
sub
fnstsw
ja
rorl
fisttpl
sarb
ret
xor
jne
push
bound
and
movsl
jp
add
xchg
cltd
dec
add
rclb
mov
push
mov
push
fcoml
mov
imul
aaa
xor
and
jnp
into
inc
or
mov
push
into
repnz
fabs
mov
adc
fistpll
cmp
dec
into
test
test
leave
dec
jbe
sar
mov
mov
gs
aas
ds
lea
jns
inc
and
mov
movb
sbb
rorl
sbb
sub
pop
mov
fildl
inc
xchg
jo
mov
repz
or
inc
imul
popf
aad
dec
aam
clc
mov
pop
jp
aaa
pushf
mov
je
pop
sbb
cs
setns
sub
ret
leave
test
xor
sub
and
inc
idiv
fnsave
push
push
xchg
push
lods
add
cmp
xchg
adc
sub
dec
ja
and
cmp
flds
je
pop
sub
and
test
repnz
xor
jmp
aam
adc
jmp
bound
cmp
mov
sbb
dec
cwtl
inc
mov
mov
add
mov
jnp
mov
rolb
pop
jno
cmp
sbb
sbb
jae
pop
xchg
cmpsb
mov
call
lret
out
jecxz
clc
mov
cmpsb
clc
mov
or
mov
mov
and
subl
pop
jle
mov
jmp
roll
xlat
mov
add
xor
fidivs
pop
push
pop
popf
inc
std
outsb
mov
pop
jl
sbb
aas
out
adc
arpl
sub
loop
pop
bound
pushf
sbb
sub
ljmp
pop
leave
js
cli
inc
mov
insl
mov
pop
inc
push
and
mov
cld
or
jbe
cmp
pop
xchg
jae
dec
pop
imul
jp
cmp
enter
mov
in
imul
xchg
shll
mov
mov
add
fbstp
xor
and
fsubrs
or
xor
sub
lock
sbb
push
cs
add
cmpsb
hlt
and
pushf
ss
or
and
cmp
mov
push
push
nop
out
mov
jg
or
jns
or
and
gs
push
gs
xstore-rng
cmpsl
ret
out
imul
xchg
call
cli
mov
push
dec
dec
xor
jae
mov
jbe
pop
push
lcall
lods
or
cmp
inc
test
fisubrs
cwtl
shll
fdivrs
mov
xor
add
mov
dec
cli
sub
push
cld
pop
lea
push
inc
inc
jecxz
out
mov
mov
mulb
inc
outsb
imul
mov
xor
mov
adcb
jo
and
and
inc
in
inc
cmpsl
dec
push
mov
jne
pop
add
ja
push
mov
mov
int
or
into
dec
sarl
clc
jmp
lahf
cld
ds
cmpsl
xor
mov
xor
cmp
sub
imulb
int
mov
mov
adc
dec
data16
leave
les
jle
sbb
adc
jno
pop
imul
call
sbb
test
lahf
mov
loopne
inc
pop
insl
aad
aam
arpl
xorl
mov
xor
jmp
push
mov
out
jns
push
jp
jl
in
fnsave
orb
inc
in
mov
pop
pop
xchg
fdivs
mov
lods
add
push
pop
scas
add
add
adc
jg
mov
iret
pop
cmpsb
out
mov
arpl
and
out
and
mov
and
cmp
in
lods
adc
jne
mov
mov
repz
mov
es
inc
jmp
sub
pop
and
idiv
mov
flds
pop
adc
xlat
mov
jne
jp
test
jmpw
ds
jecxz
add
pusha
jl
mov
aam
aaa
lods
xor
push
pop
mov
fimull
adc
xchg
xor
jg
inc
adc
jmp
mov
inc
xor
lret
jno
repz
lods
popa
xor
pop
push
cmp
cltd
bound
mov
inc
or
cmp
rcr
push
adc
lods
mov
data16
scas
cwtl
push
mov
mov
fwait
vpmulhuw
std
mov
xchg
test
lret
lods
outsl
stos
in
test
cmp
ret
jg
adc
cli
xchg
sbb
mov
jge
mov
lock
push
repz
sbb
jae
sbb
fstpt
dec
loopne
jl
adc
mov
cmp
mov
outsl
push
leave
cwtl
sbb
mov
mov
pushf
push
and
addl
mov
mov
xchg
movl
sub
repz
ret
add
dec
lods
push
aad
add
adc
test
add
jle
xchg
mov
or
mov
mov
aam
push
sub
xlat
mov
push
dec
xchg
push
push
pop
and
jecxz
stos
repz
jl
or
fnsave
inc
cltd
test
outsb
jl
into
int3
cmp
mov
sbb
decb
sbb
js
mov
push
xor
pop
and
lock
push
mov
and
cli
in
push
sub
fsub
jns
movsb
pop
cli
adc
and
lods
add
addr16
cmp
sbb
add
inc
iret
and
mov
sti
insb
loop
push
leave
jnp
jbe
mov
pop
cmpsb
les
jp
inc
stos
mov
loop
cmp
test
or
adc
addl
les
jmp
adc
jge
mov
cmpsb
in
dec
in
out
mov
iret
shrl
repz
xchg
pusha
adc
mov
sbb
stos
scas
jno
lret
adc
and
ljmp
pusha
insl
aam
sbb
scas
xchg
mov
cmp
adc
mov
ljmp
push
sbb
and
lds
sarb
mov
je
stos
outsb
lds
mov
cmp
nop
cmp
or
lods
mov
lcall
xchg
jecxz
mov
lds
lcall
jge
sbb
scas
mov
lds
imul
pop
aas
mov
jb
dec
out
bound
sbb
sahf
xor
in
mov
loope
shlb
lods
cli
adc
mov
mov
rcrl
scas
bound
js
in
js
pop
push
sti
add
test
shlb
outsb
and
or
mov
popf
mov
call
out
outsb
ret
mov
and
mov
cmpsb
daa
cmpsb
aad
cmp
push
ret
fmuls
push
out
pop
outsb
xor
les
inc
shll
inc
mov
push
neg
add
jmp
mov
mov
inc
inc
xchg
pop
xchg
dec
je
in
fimuls
sahf
ror
mov
leave
adc
adc
loope
movl
jmp
inc
subb
loop
jnp
sbb
mov
shr
lds
arpl
jecxz
adc
outsb
push
and
stc
mov
les
movsb
add
bound
andl
stos
adc
out
pop
test
pushf
push
cs
mov
dec
push
dec
inc
mov
xor
push
int
mov
inc
cmpl
inc
jno
and
sbb
and
sbb
adc
aaa
rclb
push
pop
jo
jo
sbb
dec
adc
push
aad
es
inc
cmpsl
inc
mov
and
movsl
cmpb
cmpsb
add
das
movsb
test
cmp
dec
loope
sbbb
push
rcrb
jle
adc
mov
pop
lds
cmp
fstl
mov
add
mov
or
push
pop
popa
or
sti
scas
jae
push
int
jb
ljmp
stc
xor
outsl
pop
sbb
scas
scas
cltd
lods
ficompl
fsincos
dec
xchg
pop
inc
and
mov
pop
test
pusha
movb
enter
bound
mov
jbe
xchg
sbb
es
inc
xchg
xchg
mov
sti
fildl
les
insb
stos
sti
lea
push
fdivr
mov
in
cli
pop
ss
js
imul
out
cmp
ja
push
jns
andl
ss
dec
xchg
imul
outsl
mov
fidivrs
xor
pop
mov
das
add
rolb
stos
bound
hlt
insl
cli
lods
loopne
or
xchg
out
pushf
loop
cmp
adc
aad
add
in
mov
xlat
hlt
rorl
fistpll
push
addr16
and
loope
adc
lahf
add
into
push
dec
pop
mov
fmull
out
mov
jmp
cmp
jne
pop
int
test
cmpsl
cmpsb
and
out
xlat
push
fimull
sahf
xor
or
xchg
mov
test
into
adc
std
sarl
in
mov
xchg
stc
jbe
pop
jno
cmp
pop
pop
sti
mov
mov
test
fistps
jmp
xor
arpl
sub
lcall
pop
lcall
addw
stos
jmp
je
js
sbb
inc
imul
xor
icebp
adc
mov
adc
add
ds
lock
jecxz
int
arpl
fildll
dec
mov
add
cmp
push
lret
lods
lods
and
xor
mov
add
cmp
lods
push
stc
push
mov
ds
sub
aas
fists
jo
cmp
out
repnz
jmp
je
xchg
repnz
leave
mov
ljmp
xor
ss
or
popa
jne
inc
xlat
movsb
sbb
inc
dec
sub
es
cmp
iret
fsubrl
cmp
push
fidivrs
and
out
das
fwait
mov
sti
iret
adc
pop
xchg
into
adc
xlat
movsl
jno
push
insb
pop
push
dec
cs
and
call
mov
push
or
dec
sub
sbb
imul
ficoml
push
mov
xchg
dec
jae
push
call
mov
mov
push
push
xor
aas
data16
sbb
xchg
pop
fwait
jmp
rorb
jno
fisubs
repz
stc
xor
jno
mov
inc
jmp
enter
dec
add
pop
cmp
mov
mov
jnp
mov
add
pop
cmp
std
cmp
add
inc
or
dec
cltd
mov
aaa
sub
loopne
mov
js
out
push
jmp
nop
cli
jecxz
repnz
psubb
inc
push
lahf
lret
cmp
push
out
fwait
testl
pop
mov
iret
out
pop
cmp
pop
sahf
in
in
lods
mov
in
loopne
add
pop
ja
push
mov
movsl
dec
ret
jae
imul
push
and
sar
test
push
adc
popa
add
lods
out
popa
sub
mov
rolb
lods
aad
icebp
mov
sub
cmp
icebp
adc
cmp
jne
dec
sub
sbb
lret
and
xlat
andl
adc
push
shrl
stos
aas
mov
and
test
cmp
divl
dec
movsl
cmp
cmpsl
xchg
sti
js
jnp
iret
subb
out
or
xchg
cmp
popa
pop
sahf
jo
jg
push
mov
push
popa
aam
dec
test
aam
jle
mov
push
xor
mov
sbb
and
dec
cltd
jne
pusha
cmp
pop
add
mov
popf
push
es
in
loopne
mov
pop
sbb
stc
add
jmp
insl
sbbl
popa
cmp
scas
inc
shrl
dec
jno
loop
and
mov
pop
imul
fdivr
pop
lods
repnz
lcall
test
push
fstpt
dec
mov
add
pop
enter
mov
insb
push
js
lods
sbb
lock
dec
es
pop
adc
xchg
js
add
adc
xor
sbb
jmp
pop
loopne
dec
lahf
test
xchg
jnp
jg
mov
pop
idivb
inc
and
out
stc
or
mov
jbe
jmp
xchg
fisubl
jl
jnp
jmp
rcr
rcrb
cmp
push
inc
ss
enter
push
sub
cltd
mov
jnp
and
repz
mov
lret
nop
xor
or
jmp
ret
mov
push
lods
js
dec
stos
pop
int
jge
gs
mov
out
lock
lret
scas
add
scas
jns
push
xlat
out
push
in
adcl
push
inc
sbb
jo
xor
sub
mov
out
cmpsb
pop
int
shl
add
push
dec
scas
inc
push
dec
or
lock
mov
cmp
jmp
dec
sahf
lahf
jae
sub
outsl
and
xchg
out
push
cmp
ljmp
int
mov
adc
push
jl
mov
push
aas
sbb
mov
jmp
cmp
cwtl
fdivs
rcrb
jecxz
ficomps
mov
leave
xchg
daa
sbb
or
andl
fsubrl
cmpsl
cltd
imul
add
inc
inc
adc
je
fcmovne
pop
dec
add
test
mov
cmp
cmp
pusha
sbb
pusha
cmp
test
sub
in
stc
pop
sbb
inc
or
das
push
loopne
rcll
cmp
fdivrs
mov
addr16
dec
jo
xor
imul
cld
lcall
jno
jle
inc
out
and
lock
xor
mov
push
add
dec
aas
out
sbb
fsubs
into
fmuls
pop
dec
out
in
cld
out
sub
xchg
insb
in
cmpsl
pop
lret
xlat
jle
rclb
or
inc
dec
sarb
hlt
mov
orl
cltd
stos
mov
xor
inc
xor
dec
jnp
outsb
icebp
mov
inc
sbb
push
stos
jae
aas
jge
pop
jl
aas
mov
sahf
sahf
and
jb
inc
xlat
add
mov
lea
xlat
enter
popf
xchg
inc
and
lock
or
in
sub
push
push
mov
add
hlt
outsl
in
cmp
pop
xor
push
jae
out
add
cmpsl
and
int
sbb
sbb
mov
cmpsl
and
loop
inc
sbb
mov
sub
cli
pushf
ret
outsb
orb
xchg
sbb
cmp
xchg
xchg
bnd
and
movsb
and
xorb
adc
hlt
jno
or
fucomi
neg
insb
add
lds
xchg
mov
arpl
outsl
fsubrl
and
mov
clc
popa
push
mov
add
mov
push
sub
mov
fsts
jge
fucomi
cmp
cld
add
out
xchg
lcall
add
dec
fcmovne
psubd
daa
push
stos
cmc
mov
fwait
xor
mov
adc
adc
negb
push
jo
test
fwait
mov
cltd
jl
sarl
pop
outsl
inc
mov
dec
sbbl
cmpsl
jecxz
rcll
aaa
sbb
stos
jno
mov
dec
adc
loope
addr16
cmp
jle
adc
ljmp
xlat
js
int3
or
in
dec
dec
out
push
xchg
movsb
fadds
xor
inc
sbb
imul
dec
aam
ljmp
out
icebp
enter
outsb
adc
cmc
sbb
dec
cmp
cmp
fisubrl
jo
cmp
and
or
xorb
xchg
cwtl
push
popf
jbe
push
adc
fbstp
mov
lret
inc
sbb
iret
lods
sub
rcrb
imull
ds
shlb
ja
cmpb
xchg
dec
mov
sbb
sti
push
in
cmpl
mov
ficompl
test
ss
aas
les
and
xchg
cmp
pop
cwtl
test
mov
subb
in
lea
pop
mov
sub
ds
outsb
movb
or
lods
sbb
dec
mov
lods
xor
sub
lcall
jecxz
xor
lahf
fidivrl
icebp
popa
movsl
cs
push
add
cmp
fimull
xor
pop
sub
cmc
inc
sub
dec
mov
jmp
xchg
mov
int
sub
sbb
aam
xchg
cwtl
imul
adcb
push
pop
fwait
lret
insb
pop
aas
out
fld
push
les
les
dec
sbb
aam
fwait
mov
adc
fs
adc
and
es
xor
mov
ja
loopne
adc
xchg
rcrl
imul
jp
scas
pop
je
push
repz
jo
std
xchg
add
jns
call
inc
lret
iret
jb
scas
or
cmp
jge
xchg
xchg
fistpll
pop
ja
nop
fidivrl
stos
in
repnz
lahf
jno
lds
clc
notl
je
mov
in
jge
adc
pop
lahf
mov
or
je
out
cs
jp
or
xchg
shrb
mov
inc
sub
push
jne
jmp
loopne
xchg
in
cs
test
xchg
sub
es
repnz
add
sub
jns
push
add
push
xor
repnz
push
xchg
es
xchg
imul
dec
not
xchg
add
push
movsb
test
mov
fcoml
lahf
add
js
jge
or
mov
mov
call
sub
push
adc
pop
xchg
js
or
inc
fidivs
xorb
and
dec
sub
lcall
adc
mov
popa
or
cmp
xor
adc
stos
bound
push
lret
xchg
int3
cwtl
pop
fwait
arpl
bound
ss
daa
loop
pusha
push
jb
daa
aam
push
xor
daa
scas
lret
stos
imul
pop
mov
scas
movb
fsubrl
xchg
and
scas
out
push
jle
pushf
push
adc
cli
femms
sbb
dec
mov
cmp
sbb
jl
sub
push
mov
je
lahf
inc
xchg
mov
aaa
sti
out
mov
fdivl
or
mov
out
aas
data16
push
rcrl
ret
add
sub
lret
adc
cmpsl
dec
hlt
lea
mov
jle
dec
les
std
push
xlat
enter
rcrl
lods
fadds
ja
ret
test
iret
rol
dec
inc
scas
std
scas
jmp
push
out
outsl
dec
push
dec
imul
into
lret
inc
aam
icebp
xlat
daa
mov
test
fnstenv
mov
dec
dec
xchg
mov
aas
or
in
push
jbe
push
jb
inc
pop
jne
pop
sub
les
pop
insb
loopew
pushf
loop
dec
lods
sub
rorl
mov
mov
repz
and
lcall
jmp
lods
movsl
xchg
cli
or
shl
jnp
dec
out
data16
add
add
rcrb
outsl
std
mov
pop
clc
jo
pop
and
mov
adc
fstp
lret
into
lock
gs
xor
shlb
mov
and
enter
mov
fwait
or
inc
cmp
push
ficompl
call
fcmovnbe
fwait
out
lds
fwait
cmp
call
mov
outsl
ffreep
sahf
cld
jl
jae
loop
subl
push
or
lods
ret
outsb
repz
pop
outsl
arpl
mov
popf
rcrb
imul
fldcw
mul
jmp
or
dec
jns
je
cmp
pop
cmp
mov
sar
pusha
push
add
fcoml
sarb
divb
push
cs
fsubrl
lods
sbb
mov
loop
and
repnz
loop
sbb
aam
out
mov
push
xchg
xchg
or
inc
clc
jns
into
imul
bound
cmpsl
mov
or
jmp
jb
mov
sub
data16
adc
iret
iret
insl
xor
testb
lods
lcall
jno
dec
or
inc
sbb
lret
sti
cmpsb
ret
inc
mov
sahf
xchg
sbbb
setg
sub
cltd
xor
into
data16
inc
punpckhbw
mov
push
xchg
movsl
popa
jnp
shll
mov
add
mov
push
pushf
rcl
inc
push
jns
dec
jnp
jmp
inc
outsl
jno
and
mov
xlat
int3
outsl
mov
sub
push
ret
jo
mov
pusha
pop
mov
mov
sub
sbbl
xor
lock
xchg
sub
idiv
insl
adc
mov
xchg
rcll
loopne
dec
sti
pop
xlat
xchg
fnsetpm(287
aad
ljmp
daa
movsb
in
cltd
mov
jecxz
lea
stos
jns
outsb
mov
sbb
mulb
aam
out
jmp
cltd
enter
cmp
sbb
mov
fs
insb
test
in
jns
call
ret
addr16
mov
sbbl
cli
int3
orl
push
mov
xor
icebp
addb
out
and
sbb
mov
into
dec
inc
dec
bound
das
ret
nop
jno
ds
mov
add
cmp
out
popf
xor
sbb
adc
jo
dec
dec
aam
mov
mov
ror
js
cltd
inc
push
xlat
enter
adc
arpl
and
dec
movsl
nop
lea
mov
jae
push
add
push
lahf
aaa
mov
cmp
out
mov
out
aas
test
fidivs
fmul
xor
pop
xchg
leave
rclb
sbb
stos
inc
mov
inc
jne
mov
test
mov
xchg
push
cwtl
push
push
or
fnop
xor
arpl
sbb
mulb
mov
enter
das
mov
or
jno
jno
adc
or
inc
adc
xlat
mov
addl
loop
and
push
xor
aaa
sub
xchg
push
mov
adc
int3
xchg
push
adc
xor
xchg
pop
ljmp
or
lret
in
and
insb
cli
out
decl
inc
add
mov
xor
dec
clc
mov
sbb
aas
sub
cmpsb
dec
xor
and
pusha
lret
fcmove
aaa
adc
or
xor
sub
aaa
mov
mov
mov
xor
dec
into
insl
xchg
pop
mov
jmp
repz
stos
or
xchg
in
test
fcomi
dec
sub
rorb
jns
xor
ljmp
lret
mov
shr
push
push
movsb
test
cs
sub
hlt
test
aad
in
and
test
aas
or
sbb
enter
lcall
sbb
push
popa
dec
sbb
scas
add
xchg
xor
leave
ret
adc
cld
jb
adc
lods
in
jmp
sub
addr16
mov
mov
mov
sbb
sbb
movb
mov
fstl
fmuls
xor
orb
sti
enter
xchg
rorl
stc
ss
mov
mov
icebp
fwait
and
mov
and
push
xor
mov
shl
fsubl
cld
xor
pop
aam
xchg
xor
sub
rcll
std
inc
xchg
call
jp
lcall
fldt
out
sbb
icebp
in
fisubrl
repnz
pop
outsl
adc
out
xchg
rcr
ret
aad
and
mov
jg
xor
addr16
cld
lds
xchg
lcall
shll
pop
imul
test
cwtl
mov
inc
jecxz
subb
in
xor
clc
xchg
imul
push
or
fwait
sub
sub
rol
test
cmp
or
xor
mov
sub
lods
push
jae
pusha
cmp
lods
jns
jb
jecxz
mov
fmull
xorb
insb
out
sahf
cmpsb
rcr
mov
sbb
xor
pop
pop
xor
nop
out
add
adc
mov
and
adc
repz
cwtl
leave
loopne
sbb
and
ficoml
sub
stc
popf
xchg
add
dec
jp
outsb
inc
jae
sub
push
pop
rol
test
xchg
pop
cli
ret
lods
xchg
enter
icebp
test
mov
repz
imul
inc
jne
into
sbbl
incl
cmp
sti
adc
loopne
popa
xor
into
out
jne
sub
xchg
and
jnp
xchg
sbbb
rcr
cs
xor
dec
push
or
or
test
int
in
add
mov
mov
adc
inc
ljmp
mov
nop
ret
xor
sub
mov
icebp
pop
push
push
add
mov
adc
stc
insl
sbb
dec
mov
or
scas
aas
dec
mov
sub
loop
mov
xchg
in
dec
pop
icebp
adc
pushf
je
sub
or
stos
or
incb
stos
mov
insb
cli
xor
pusha
jae
xor
cmovbe
xor
jge
je
xor
aas
jno
lods
jg
mov
sub
push
dec
lcall
call
mov
in
xchg
or
in
ficompl
shrl
idivb
jp
inc
pop
sub
cmp
pop
popf
inc
xchg
movsl
pop
jmp
es
repnz
popa
into
mov
in
fistl
and
imul
fnstcw
in
and
xchg
stc
sub
mov
dec
cmp
jl
xchg
lock
sub
jne
fiadds
inc
mov
nop
and
cmp
inc
nop
sbb
push
sub
js
ljmp
and
pop
sub
aas
jne
jae
mov
dec
cmp
cmp
mov
xor
shlb
scas
std
pop
loope
mov
add
xor
xchg
mov
fstps
pop
lcall
scas
arpl
mov
mov
jle
nop
dec
aas
push
inc
movsb
xchg
popa
push
mov
scas
adc
pop
sti
mov
call
mov
enter
fsubrl
test
sub
and
mov
mov
mov
xor
or
outsl
scas
fnsave
scas
scas
pop
clc
shr
push
test
mov
dec
test
int
adc
adc
rep
in
notl
jle
in
pushf
iret
dec
push
cmp
je
jle
xchg
cwtl
out
mov
push
loopne
inc
adc
dec
testl
jne
hlt
or
or
mov
and
sub
ljmp
inc
jl
jge
adc
aas
push
jbe
pop
js
loopne
mov
fmuls
push
xchg
test
es
xor
push
les
sbb
pusha
jmp
je
ja
sub
sahf
addr16
sbb
mov
xchg
add
dec
rep
xor
and
in
pop
test
dec
cli
pop
insb
ja
scas
xchg
jmp
cltd
dec
cmp
mov
fs
in
das
test
inc
stos
outsl
cmp
and
ds
std
daa
mov
loope
jne
mov
andl
inc
imul
pop
imul
stos
xchg
push
adc
xor
add
or
aaa
aas
xchg
pop
scas
mov
cmpsb
push
sbb
punpckhwd
gs
inc
stos
imul
mov
or
mov
adc
mov
outsb
push
test
fnop
das
push
fcmovb
push
shlb
mov
scas
xor
fwait
jo
jae
scas
loopne
lret
xor
in
xchg
pusha
sub
pop
mov
sbb
sub
insl
imul
dec
and
test
shl
mov
mov
mov
jns
or
cs
ss
lock
mov
in
and
pop
xchg
addb
pop
clc
fiaddl
mov
mov
or
cltd
push
loope
outsl
pushf
rcrb
popf
bound
mov
adc
jns
aas
das
sbb
call
add
inc
repz
test
out
sbb
jbe
fsubrl
add
push
fwait
or
inc
xchg
inc
repz
jle
lods
ds
rol
fidivrs
pop
push
aas
cld
pop
fmuls
sbb
loop
mov
mov
adc
lcall
xlat
jae
or
lcall
inc
lods
dec
cmpsl
pop
inc
int
leave
xchg
fldl
xchg
fsubrs
dec
cmp
sahf
int
imulb
adc
inc
clc
push
clc
push
and
call
adc
into
cmp
aaa
pop
decb
dec
fsubr
js
add
sbb
xor
or
insb
in
ja
mov
mov
dec
pop
dec
push
adc
pop
mov
adc
jmp
pushf
pop
lret
mov
adc
ret
inc
lret
lcall
iret
mov
xor
push
je
adc
cmpl
mov
stos
inc
ficoms
mov
subl
in
xlat
jne
icebp
xchg
jmp
sbb
or
xchg
jp
fwait
jae
mov
dec
xchg
mov
add
cs
inc
add
or
adc
xchg
aad
mov
mov
mov
in
or
lret
std
sar
fldl
in
xor
inc
enter
addr16
xchg
mov
mov
test
pop
cltd
fnstcw
orb
pop
add
and
decl
inc
cld
rcr
fs
adc
push
adc
add
sbb
sub
inc
push
cmp
in
cmp
add
lea
lods
scas
shll
cmpsl
arpl
lahf
mov
popf
neg
xchg
arpl
fisubs
enter
fxch
shll
popa
fnstcw
cmp
fcmovnu
jg
out
mov
xor
mov
iret
bound
inc
test
mov
pop
push
sub
imulb
pop
ljmp
and
fadds
mov
dec
shrb
lods
mov
mov
outsl
push
es
ret
fs
repz
push
mov
jns
add
or
fucom
pushf
repnz
mov
in
fidivrl
jno
sti
loop
lock
sub
outsb
lods
cmp
nop
ja
loop
je
adcl
dec
lcall
jb
ret
sbb
mov
aaa
test
and
fcmovnu
and
jg
mov
jp
push
dec
mov
sarl
jg
xchg
ret
xchg
adc
fisubrs
push
popf
repz
ret
in
roll
mov
lods
pop
repnz
push
shlb
mulb
mov
pop
stos
xor
jno
int3
mov
jne
data16
dec
hlt
dec
dec
addr16
cmc
shlb
dec
outsb
das
shld
gs
scas
lret
push
pop
xor
add
lea
js
push
add
jl
pushf
pop
xor
xchg
adc
insb
add
out
das
jl
cmpsl
xchg
icebp
test
push
add
adc
imul
xor
pop
and
dec
sahf
jns
rolb
dec
sti
xchg
jmp
arpl
cltd
inc
ja
pop
pop
add
dec
mov
cmp
add
cltd
adcl
xchg
inc
pop
in
cmp
gs
out
lock
add
das
adc
imul
inc
lret
adc
cmp
dec
mov
sahf
mov
test
data16
inc
push
push
jle
not
pushf
mov
test
pop
or
sahf
aas
addr16
jle
push
pushf
xchg
sub
in
mov
pop
push
sub
xlat
ds
push
adc
ljmp
mov
mov
das
adc
sbb
test
jmp
push
push
or
loope
js
mov
cmpsl
outsl
stc
punpckhwd
ret
test
cmp
mov
fistpl
mov
std
dec
cmp
shrb
in
cmp
mov
inc
hlt
mov
mov
loopne
jne
leave
arpl
dec
jno
gs
dec
mov
fdivs
iret
or
adc
or
cli
icebp
mov
mov
cmp
in
loope
ret
dec
mov
mov
addr16
mull
movsl
sbb
push
inc
jo
sub
lods
stos
cmp
lcall
pop
popf
cmp
aas
push
sub
stos
xchg
or
or
xchg
leave
mov
in
or
pop
jo
and
nop
mov
cmp
xchg
push
fdiv
jae
imul
pop
pop
or
or
hlt
sbb
lcall
enter
lret
test
mov
push
fwait
adcb
cmp
ja
int3
icebp
push
push
or
movsb
sbb
jge
jb
xor
pop
out
ljmp
daa
gs
or
outsl
push
xor
mov
mov
xchg
test
xorb
push
das
fnstcw
out
dec
into
mov
mov
mov
sub
pop
jg
out
ficoml
in
mov
jg
test
cmp
fimull
lds
lea
call
lahf
cltd
fucom
jne
jle
sbb
aaa
daa
cli
pop
lea
mov
test
add
fisttpl
sbb
out
or
sub
dec
xchg
mov
xchg
cmpsb
or
repz
and
jae
lcall
fcomp
rcrl
sbb
cmp
adc
or
sbb
inc
fstpl
mull
cmpsl
fmul
or
adc
add
push
loopne
jle
aad
pop
xlat
aas
rolb
fnstsw
or
inc
dec
pop
pop
sbb
aam
mov
call
inc
fdiv
lret
mov
add
fs
and
dec
pop
xlat
jo
shr
cmp
enter
dec
mov
dec
xchg
mov
push
jp
pop
call
pop
xchg
cwtl
jae
push
mov
sarl
movsb
sbb
adc
xchg
hlt
repz
pop
test
psllq
xchg
pop
ss
in
xlat
add
ja
imul
add
mov
lods
leave
inc
push
push
outsl
rorl
add
test
nop
mov
pop
and
test
iret
xchg
gs
dec
fisubrl
or
mov
jecxz
mov
cli
fisubrl
or
ja
and
pop
pop
inc
pop
imull
mov
or
test
jb
xchg
enter
mov
xchg
je
xchg
add
cmc
and
es
xchg
add
pop
lea
lds
roll
rolb
cld
out
lahf
pop
jmp
push
sub
mov
std
adc
jae
mov
iret
call
notl
pop
in
mov
sbb
dec
popa
or
adc
add
mov
aam
push
sarb
cmp
rcrl
repnz
into
mov
in
dec
pusha
fdivl
inc
in
push
mov
xlat
pop
mov
xor
icebp
push
pop
out
push
mov
inc
rcll
mov
add
jnp
out
sub
xor
sbbl
mov
lret
sbbl
sti
adc
ss
ret
fsubs
dec
xchg
push
sahf
ret
or
mov
jmp
mov
into
inc
mov
das
or
adcb
mov
inc
push
fiaddl
push
and
test
nop
mov
push
cmpsl
mov
xchg
xchg
jmp
mov
inc
xchg
gs
insl
mov
jnp
cli
lea
sub
inc
lds
mov
js
sbb
cmp
icebp
push
loope
jmp
imul
loopne
rorb
adc
mov
and
jge
fisttpll
pop
xchg
and
mov
outsl
loop
cmp
in
jmp
sub
scas
fimuls
or
daa
add
or
push
scas
sti
sub
loop
lret
pop
lea
mov
inc
loope
adc
mull
pop
mov
xchg
daa
cld
pop
roll
add
and
inc
cwtl
mov
sbb
mov
lea
xchg
dec
sbb
movsb
lea
ret
out
xchg
or
js
adc
or
and
cmp
jge
push
mov
sbb
dec
mov
jecxz
loopne
int
sar
cmp
popa
ds
leave
pop
jge
push
xor
xchg
cwtl
add
fcmovu
pop
xchg
lcall
inc
jo
mov
loop
sbb
pop
stos
cmp
sbb
lods
iret
inc
cmp
push
mov
ud2
and
icebp
hlt
sbb
imul
cmp
pop
add
enter
mov
ret
push
xchg
rolb
mov
test
ficoms
test
mov
pop
lret
sbb
jnp
adc
int
inc
xchg
scas
push
imul
pop
rclb
pop
push
imul
or
mov
and
mov
rorb
in
add
add
fisubrs
ret
outsb
cltd
repnz
jl
adc
adc
out
xor
cmp
and
mov
std
aad
mov
test
or
sbbb
in
cmpsl
cmpl
pop
mov
clc
test
aad
sbb
jne
xchg
adc
sti
inc
jp
inc
inc
mov
xor
imul
jb
outsb
sub
xor
cli
add
sub
popf
ss
xchg
jl
cli
dec
jno
btr
cli
in
lahf
lcall
push
xchg
pop
mov
test
mov
sub
cmp
aad
push
ds
mov
dec
add
pop
pop
dec
addr16
add
aaa
fs
loop
sbbl
pushf
adc
dec
cmc
pop
out
ljmp
loopne
das
rorl
jno
inc
inc
stc
iret
shlb
or
mov
fmull
jecxz
dec
sub
and
je
imul
xchg
pop
inc
or
mov
loopne
popa
popf
sub
sti
push
dec
es
leave
in
divb
pcmpgtw
mov
aas
cs
clc
lock
test
mov
dec
inc
fs
dec
mov
cmp
inc
inc
mov
test
xor
incb
outsl
outsb
sti
bound
in
pop
nop
clc
pop
aas
mov
test
out
out
aam
repz
or
jb
les
push
int
aaa
inc
and
je
or
dec
jne
rol
push
push
gs
pushf
mov
sbb
in
pop
mov
or
jnp
insb
inc
mov
sbb
mov
mov
mov
outsb
icebp
out
outsb
fisubl
faddl
rep
gs
push
fisubrl
jnp
jmp
pop
test
test
jmp
jns
cmp
daa
insb
fstps
and
lcall
push
fadds
push
xor
out
push
mov
jmp
jmp
dec
in
fisubl
inc
scas
fiaddl
mov
add
xchg
sub
xor
xchg
or
xor
cmp
popf
subl
and
mov
mov
push
rcrb
es
test
fcmovb
jge
jnp
adc
mov
fidivl
mov
xchg
dec
cwtl
fdivl
inc
pop
inc
rorb
aam
fs
popf
lahf
ljmp
fistps
mov
add
cmp
leave
insb
addb
push
aas
add
push
sub
pop
xchg
inc
fdivrs
clc
inc
xchg
sbb
fimuls
into
push
jae
fsts
roll
pop
inc
or
testl
nop
int3
and
cmp
call
mov
add
and
mov
mov
out
out
addb
dec
ret
neg
mov
out
push
pop
lds
mov
out
pop
scas
movsl
cld
pusha
cmp
sbb
inc
pop
push
mov
cmpsl
pminsw
enter
ss
jae
enter
cld
fnsave
lea
cmovs
fs
shlb
leave
pop
addr16
pop
pushf
es
ror
mov
movsb
push
enter
fsubs
idiv
push
leave
dec
push
sti
and
outsl
dec
int
and
sub
mov
xorb
fs
fmuls
dec
pop
popa
fcom
in
lcall
arpl
test
jp
jmp
push
xchg
inc
push
adc
mov
xchg
mov
fld
sub
inc
mov
add
mov
pushf
scas
jo
jmp
cmp
xchg
pusha
or
repnz
insb
dec
mov
sbb
jle
pop
out
mov
xchg
xor
adc
fistl
pop
mov
mov
pop
lds
roll
popa
iret
pop
stos
or
adc
arpl
or
sbb
subl
cmpsb
arpl
adc
movsl
imul
fldl
add
xchg
fld
inc
fdivrs
in
fsubl
je
sbb
push
pushf
add
cmp
xchg
jne
xchg
sahf
or
sub
and
out
jge
lods
call
cmc
rcr
dec
int
ret
cltd
sub
test
dec
insl
mov
sbb
fiadds
shlb
pop
jnp
inc
adc
mov
std
mov
test
pop
std
mov
sub
sbb
add
repnz
or
lods
push
rol
cmp
and
mov
cwtl
dec
jg
out
ds
mov
cld
mov
cmp
xchg
in
adc
sbb
out
jl
mov
out
adc
mov
test
sub
jns
aaa
cmp
cmpb
in
push
sbb
out
jge
test
dec
mov
test
mov
push
sub
mov
and
test
adc
rol
sbb
jmp
movsb
sbb
push
mov
sti
jne
in
int3
sub
xor
fwait
mov
cmp
imul
jo
sar
xor
in
in
sbb
aam
cmpsb
enter
pop
insb
mov
cld
push
je
sub
stos
les
scas
mov
mov
shll
jecxz
lods
mov
adcl
mov
sub
cmp
ret
in
push
pop
and
das
adc
inc
dec
paddb
into
mov
shrl
jecxz
fsubl
dec
cmp
inc
mov
bound
loope
mov
subb
fiaddl
inc
push
push
cld
dec
movsb
ds
bound
mov
adc
pusha
jl
xor
testb
gs
fldcw
clc
ja
push
or
jl
dec
lock
lea
pop
ljmp
sub
loope
jo
pop
clc
push
mov
mov
in
mov
push
leave
aaa
test
sub
mov
pop
mov
adc
lcall
xchg
sahf
cwtl
and
aaa
mov
mov
shrb
js
out
leave
int
mov
fcoms
mov
ret
jnp
in
jbe
mov
mov
inc
stos
fists
enter
add
and
aaa
stos
mov
pop
inc
ficoml
popf
or
int
dec
add
inc
ret
jle
add
dec
dec
rolb
cmp
dec
aad
dec
jo
testl
sbb
sub
push
or
fwait
xorb
icebp
ret
push
sar
lahf
pop
and
cmpsl
test
pop
cmp
jmp
xadd
jecxz
cs
mov
icebp
adc
mov
inc
mov
xor
in
stc
pop
and
dec
or
iret
fnstcw
loope
ret
fucomi
insl
das
test
cltd
enter
xor
xchg
add
add
std
pop
lock
andb
iret
push
xchg
dec
leave
cmp
lds
fcomps
push
pushf
in
mov
pop
and
push
cmp
rclb
inc
daa
jae
clc
mov
ss
xchg
xchg
fildl
xchg
fs
clc
js
mov
push
loopne
pushf
repz
lods
jecxz
lcall
push
xor
sti
ljmp
xorb
fisttps
adc
xor
ss
inc
enter
push
enter
ret
dec
or
stos
inc
lret
fstp
push
push
sub
pop
or
sbb
pusha
and
sbbl
imul
sub
xor
cmc
dec
ret
or
mov
add
test
lds
subb
jl
add
gs
sub
imul
add
add
out
xchg
mov
xchg
cmp
out
push
xchg
mov
lods
mov
int
sbb
mov
popa
mov
mov
xor
cmpsb
arpl
xchg
mov
or
mov
into
mov
ja
pop
fsubs
add
push
push
dec
xchg
pusha
inc
daa
jo
inc
xchg
das
push
in
adc
cmp
push
cmp
fistpl
int
enter
call
insb
pop
inc
jl
ljmp
push
bound
add
add
or
mov
frstor
shr
sbb
fists
cmpb
stc
dec
stos
rclb
addl
fwait
enter
aam
mov
sub
add
sbbl
xor
mov
dec
lds
loop
mov
mov
xor
gs
bound
cmp
lea
or
loopne
sub
cmp
mov
mov
and
adc
dec
mov
pop
mov
jmp
repnz
sub
dec
cs
mov
nop
aad
jge
std
rorl
jmp
sub
cli
daa
fadds
pushf
push
xlat
scas
fisttps
xor
cmp
adc
iret
mov
xlat
fcmovbe
fiaddl
jmp
dec
andl
aaa
lahf
sbb
dec
fs
xlat
dec
mov
mov
iret
shrl
jns
mov
push
sub
lock
xor
mov
sbb
jae
fisttpl
xchg
out
jp
gs
test
jecxz
mov
xlat
popf
sub
sbb
andl
pop
sbb
fildl
insl
dec
mov
scas
fwait
stos
inc
lcall
cmp
daa
movsb
pop
in
js
pop
aaa
shrl
daa
add
sarl
nop
shrl
ja
push
jl
adc
jecxz
mov
lock
push
fsub
push
push
insl
dec
icebp
ljmp
leave
sub
repnz
sbb
sti
out
adc
or
mov
lcall
jbe
out
loop
imul
int
in
adc
popa
sbb
ljmp
std
cmp
sbb
scas
xor
loop
ss
inc
adc
pop
insb
or
sbb
js
das
push
inc
cltd
pop
rcr
mov
or
pop
dec
xchg
jmp
test
mov
mov
xor
jbe
stc
in
lock
and
push
add
dec
pop
loop
jmp
xor
or
inc
sub
or
fisttpll
sbb
sub
jo
xor
cmp
sbb
lea
push
fcomi
or
ss
mov
and
dec
jecxz
and
dec
cmp
stos
mov
jl
icebp
dec
int
push
inc
mov
push
fwait
push
cmovno
imul
loop
cmp
test
adc
cmp
popf
in
pop
jns
out
ljmp
cmp
aaa
dec
or
outsl
cmp
fnstsw
lahf
mov
and
orl
sub
inc
jb
loope
repz
sbb
cmc
fstl
xor
jle
ds
cmp
inc
cmp
fwait
lret
jp
mov
xor
xchg
push
mov
sti
sbb
shll
dec
mov
jmp
sti
add
mov
cmp
pop
mov
inc
arpl
xlat
adc
ljmp
sub
out
adc
mov
call
add
or
xchg
sub
imul
inc
add
dec
push
mov
mov
fs
mov
scas
ss
iret
insl
and
cmp
pop
mov
push
lods
dec
or
out
out
pop
pop
sub
push
sub
add
add
pop
jle
rcrb
push
mov
push
mov
sub
lods
mov
mov
xor
imulb
pop
adc
mov
stos
ds
ja
add
jb
cmc
movsl
outsl
mov
in
xlat
push
push
std
cmp
adc
repz
jmp
pop
or
push
mov
popa
mov
fldl
lret
aas
and
pop
loopne
sub
dec
aaa
pop
jmp
fistpll
sub
and
aas
out
dec
scas
call
sti
addr16
add
and
loopne
cmpsl
and
movsb
fidivrs
movsb
lret
xchg
dec
mov
lds
cld
jbe
fsts
or
sub
fcmovbe
outsb
nop
loopne
shll
and
into
sub
popf
ljmp
pop
repz
lds
fstl
stos
cwtl
adc
adc
scas
insl
cmp
sub
mov
jle
das
cwtl
adc
dec
xchg
mov
lods
cmpsl
xorb
jle
jp
pop
mov
cld
popl
orb
jge
cmp
mov
jns
xor
xor
dec
cltd
jae
outsb
inc
mov
mov
dec
fcmovbe
nop
jl
push
mov
cli
test
out
cs
dec
and
aam
pop
mov
clc
mov
aad
dec
sbb
cmp
mov
push
outsl
jmp
test
mov
add
xchg
adc
imul
les
movsb
or
sub
jno
or
push
clc
adc
jno
push
repz
sub
aas
fs
loopne
inc
jg
aas
mov
pop
filds
orl
ljmp
mov
inc
insb
push
pusha
sbb
xlat
aas
push
xlat
pop
mov
add
jnp
gs
mov
jle
popf
js
ret
xchg
int
mov
in
xchg
repz
mov
push
jg
sbbb
aaa
fdivs
pushf
push
outsl
decb
scas
pusha
nop
movsl
push
inc
insb
cli
mov
jno
jp
cli
imul
lahf
shrl
dec
popf
dec
out
jno,pn
aad
cmpsl
daa
loop
cmpsl
jl
mov
lods
scas
ds
fwait
xlat
cmp
loope
pop
shrb
inc
cmp
daa
and
popf
les
mov
fcmovb
sub
cmp
in
xchg
cmp
lcall
xor
popa
push
xchg
iret
pop
movsb
mov
inc
negl
mov
in
adc
leave
jg
gs
leave
mov
jmp
loopne
scas
mov
aas
fistpll
pop
pop
stos
sarb
or
in
lds
sbb
rol
imul
test
aaa
mov
icebp
lahf
arpl
xor
je
in
jge
push
add
sbb
jmp
lock
or
cwtl
out
imul
push
xor
jmp
lcall
mov
sub
inc
xchg
hlt
popa
orl
or
jno
out
mov
xorl
les
push
pop
loopne
loop
fimuls
inc
daa
loopne
in
sti
dec
out
ret
int
sbb
xchg
or
jle
cli
adc
jle
pop
push
addr16
inc
pop
cmp
pop
cmp
dec
jmp
mov
inc
or
jmp
shl
mov
xor
xchg
lcall
stc
outsl
push
lret
jl
pop
icebp
test
push
mov
mov
push
retw
mov
add
insl
xor
ja
and
adc
outsl
or
adc
gs
pop
inc
bound
inc
mov
push
lcall
or
mov
and
cmc
cmp
sub
sbb
sub
xchg
dec
and
hlt
mov
xchg
addb
xchg
push
inc
sarb
dec
std
mov
vmovntps
rorl
cmpb
andb
jae
pop
clc
cmp
insb
pop
fs
lods
mov
inc
stos
leave
adc
inc
or
add
sub
and
dec
cmpsb
mov
sti
add
out
cmp
orb
pushf
fucomip
add
adc
aad
sub
jl
js
aam
adc
xor
fwait
dec
insb
lock
mov
jp
imul
push
xor
roll
jnp
sub
outsb
lods
pop
sbb
notb
test
or
xchg
mov
dec
jo
mov
push
mov
add
out
mov
rcrl
jecxz
cs
loop
fldl2e
mov
dec
or
or
sbb
fwait
sub
inc
das
std
shr
xor
xor
gs
sbb
mov
and
rcr
inc
xor
or
mov
cs
gs
inc
lea
stos
fistl
jnp
repnz
or
leavew
repz
mov
mov
mov
push
out
mov
out
mov
jnp
push
jbe
sub
jg
or
cmp
mov
in
push
es
mov
jmp
push
bound
bound
in
lods
idivb
push
push
insl
pop
cmp
and
subl
out
push
movsl
dec
inc
aam
mov
cli
mov
jmp
mov
mov
cmpsl
mov
and
push
and
subb
cmc
mov
insl
cmp
pushf
lret
mov
hlt
jp
ljmp
xor
movsl
js
lds
mov
inc
inc
push
out
outsb
adc
mov
push
vrcpss
repnz
jge
loope
cmp
sub
out
inc
mov
mov
mov
sub
out
sahf
call
xchg
sahf
cli
inc
aad
aas
jnp
jno
enter
inc
cmp
jns
xor
pop
sbb
stos
adc
pop
mov
leave
mov
nop
xor
inc
jb
insb
dec
jl
and
push
iret
pushf
cld
clc
adc
mov
out
mov
xor
lahf
outsl
fwait
lods
mov
sbb
imul
mov
in
push
pop
icebp
mov
shlb
repz
jo
jg
pop
jne
lret
cmpsb
aam
cmp
sub
xadd
mov
rcl
das
sub
pop
lea
dec
push
cmpl
inc
inc
xchg
pop
data16
xchg
add
popf
dec
mov
xchg
pop
jne
jne
bound
and
imul
iret
je
add
cmp
push
jge
hlt
lret
sbb
test
bound
jo
cld
sahf
iret
push
add
inc
aaa
inc
ja
out
jne
fisttps
jmpw
mov
mov
mov
in
in
icebp
imul
push
pop
imul
mov
push
mov
stc
jge
add
lret
mov
inc
jg
clc
push
mov
xor
jp
iret
and
xchg
or
push
jge
daa
mov
pop
push
jnp
dec
pop
mov
gs
or
cmp
mov
loopne
push
xchg
sbb
movsl
cmp
jmp
mov
nop
and
scas
das
xchg
aaa
xor
getsec
daa
sbb
jl
outsl
pop
fcomps
push
sbb
outsb
das
push
add
xlat
jge
sbb
shlb
lcall
mov
adc
xchg
lret
repz
xchg
push
ret
xor
jo
enter
ror
sbb
out
or
inc
ljmp
fidivl
subb
push
add
xor
or
pushl
sbb
int
fistl
pop
and
pop
cmc
mov
clc
inc
cli
shl
dec
loop
and
jmp
shrl
ret
sub
pusha
arpl
lcall
cmc
xchg
pop
mov
ljmp
jecxz
aaa
lock
imul
out
sbb
cli
adc
mov
test
loopne,pn
push
mov
jl
push
dec
ljmp
inc
sahf
in
les
cs
pop
idivl
popf
xchg
cmc
lret
cmc
dec
insl
mov
sub
xchg
xchg
aad
jle
lods
xor
in
add
fiadds
push
fldt
iret
pop
xchg
pop
stos
push
sbb
rorl
stos
pop
xchg
cli
inc
mov
fwait
dec
popa
shl
insl
movsb
arpl
push
daa
scas
mov
adc
push
xadd
nop
fwait
inc
ja
mov
mov
loop
shlb
pushf
mov
fsubs
fdivl
fbld
loop
pop
outsb
mov
jae
fmull
ljmp
jecxz
icebp
pop
mov
mov
popf
sub
sti
lret
rcrb
in
lret
in
sarl
lcall
pusha
adc
or
testl
mov
inc
fs
cli
adc
pushf
sub
sbb
out
fwait
jecxz
test
or
fcmovb
cmc
movsl
lea
movsb
jecxz
fwait
enter
and
jp
in
dec
sbb
mov
leave
push
das
pusha
bound
sbb
loope
sbb
pop
pop
cmp
jo
shl
aad
jp
add
out
or
decb
cld
pop
xchg
push
sub
cmpsl
leave
repz
mov
out
out
data16
and
push
sbb
nop
sub
dec
arpl
in
insb
lea
sub
jp
xchg
scas
push
js
aas
push
icebp
dec
in
jo
clc
pop
xorl
lret
jmp
int3
mov
inc
aad
mov
daa
sbb
inc
dec
jns
pop
dec
outsl
pop
push
mov
insl
pop
and
mov
mov
cmp
inc
push
and
push
mov
push
data16
sar
sub
pop
movsb
push
movsl
ljmp
aad
xor
shlb
movsl
jmp
test
jno
pushf
mov
jmp
enter
xorl
fisubs
push
arpl
dec
inc
test
gs
inc
loop
dec
or
xchg
stos
mov
or
enter
and
add
andl
call
outsb
pusha
out
call
jmp
lahf
inc
xor
movsl
push
mov
sbb
js
test
aaa
out
jnp
sarb
xlat
add
jo
pop
push
jb
push
adc
jp
mov
in
pop
sarb
cli
mov
scas
mov
int3
cld
std
repz
pop
adc
jg
mov
das
stos
and
mov
lahf
xor
out
push
adc
mov
aad
test
das
test
mov
pop
roll
pop
popf
call
inc
sub
lcall
mov
stc
aad
jb
mov
cmp
std
cmc
xchg
push
andl
xor
add
pop
andb
lea
pop
mov
inc
loop
mov
das
je
pop
mov
adc
lods
adc
nop
xchg
adc
push
lahf
cmp
ljmp
and
mov
push
sbb
xlat
push
test
arpl
jnp
mov
pop
lock
mov
pop
fsubs
stos
mov
xor
in
mov
jns
call
add
push
cmpl
popa
and
es
sub
add
dec
in
fdiv
sbb
and
outsl
sub
or
lock
dec
fdivrs
inc
cs
xchg
hlt
into
clc
test
xchg
out
inc
out
inc
sbb
mov
aam
lret
lahf
inc
push
mov
add
sahf
cwtl
xor
jp
repnz
sbb
cmp
or
pop
and
test
fs
imulb
sbb
and
mov
incb
ljmp
push
mov
jne
addl
mov
pop
jmp
loop
shrb
js
dec
xor
bound
or
lods
scas
xchg
push
cmpsl
rolb
sbb
xchg
jge
stos
enter
imul
loope
aam
fbstp
aaa
std
je
clc
stc
in
inc
cmp
sti
push
xchg
fistpl
andb
cli
push
sti
mov
xor
xor
inc
jbe
cmp
push
and
fisttpl
fbstp
dec
and
mov
cmp
scas
adc
add
jmp
test
lret
inc
mov
jp
sbb
adc
xor
clc
mov
xor
mov
xchg
push
cmp
jge
test
xchg
push
fcoml
cmp
sbb
fldenv
fwait
test
das
orb
jl
pusha
in
push
mov
mov
icebp
xor
insb
popa
ja
pushf
cmp
cwtl
cs
jp
int3
mov
xchg
movsl
jmp
or
jnp
mov
imul
or
xlat
cmp
aas
dec
sbb
sbb
xchg
scas
push
xchg
incl
adc
xchg
xchg
cli
outsb
mov
fmull
push
outsb
mov
mov
pop
imul
int3
mov
push
xor
xor
fwait
jmp
roll
scas
xchg
shlb
fadds
fdivs
inc
cmp
sub
int3
pop
xor
aad
imul
or
sti
movsb
rcrb
stos
int3
div
jp
mov
icebp
adc
mov
mov
fdivrl
call
or
cld
adc
iret
test
pop
lds
dec
cltd
push
aam
addl
rcrb
xchg
nop
push
pop
std
adc
scas
sbb
ja
adc
mov
xor
les
cmp
adc
rcr
or
adc
nop
cmpsl
rol
adc
sub
push
xor
das
scas
xchg
and
inc
adc
paddd
mov
or
add
push
pop
sub
icebp
push
mov
jmp
mov
mov
pop
dec
mov
cmp
xor
test
mul
lret
sub
rcrl
xor
in
jmp
lock
mov
jb
std
pop
and
mov
mov
push
call
add
jo
ja
rcll
outsb
js
fcmovnu
test
gs
dec
adc
push
test
cli
xor
mov
and
pop
jno
dec
push
inc
sbb
push
cli
dec
into
adc
imul
rcll
lods
jbe
clc
in
mov
stos
lods
test
cmp
xor
stc
jns
fistps
lret
pop
jnp
clc
xchg
fstpt
adc
xor
adc
out
adc
pop
mov
in
dec
loope
lods
lods
cltd
nop
insb
mov
dec
into
mov
out
adcl
xchg
test
repz
dec
inc
mov
popa
jp
icebp
xlat
std
lahf
lea
lret
add
xchg
out
sub
cmp
inc
fdivrl
lret
lcall
sbb
fldl
mov
pop
ljmp
cmpsb
lds
dec
xchg
and
insb
mov
out
xor
xchg
sbb
mov
push
out
daa
or
and
stos
cmc
pop
call
mov
pop
pop
enter
arpl
fstps
jle
xor
push
lods
mov
jmp
push
cld
js
push
iret
dec
pushf
mov
cmp
cmp
jle
pop
aam
clc
aam
push
mov
inc
or
jl
fs
add
insb
fs
dec
movsl
repz
jno
fistps
rclb
cmp
mov
mov
into
leave
sbb
loope
cmp
lock
or
jg
pop
movsl
jbe
loop
scas
xor
cmpsl
cmpsl
aam
jg
gs
mov
sbb
fcoml
cmc
adc
sbb
fs
test
subb
rolb
adc
adc
shrl
and
ja
stc
pop
mov
mov
pop
sub
imulb
pop
outsl
test
in
aas
adc
aam
shrl
mov
pop
adc
xchg
xchg
imul
iret
imull
aad
nop
rcll
fmull
and
inc
sub
mov
and
enter
cld
ss
pusha
outsb
push
adc
mov
or
and
xchg
lea
fldl
jo
insb
mov
sbb
stc
addr16
cmp
stos
clc
jae
mov
std
adc
test
lcall
outsl
pop
lcall
and
push
ret
ja
imul
xor
add
cmc
pop
orb
lcall
xchg
bnd
cmp
insb
cmp
sahf
xchg
mov
ret
loope
push
sbb
sub
vphadduwq
leave
xchg
es
inc
call
mov
pop
sub
inc
push
into
gs
adc
jmp
out
stos
leave
dec
test
jb
fiadds
jl
sbb
pushf
imul
inc
mov
sbb
xchg
repnz
pop
adcb
xor
sbb
mov
sahf
cmp
and
mul
imul
jecxz
fstpl
push
insb
andps
sbb
mov
push
int
repnz
pop
addl
push
in
mov
jb
jns
out
cmp
or
mov
enter
jae
lock
into
jmp
add
adc
mov
movsl
cwtl
mov
addr16
pop
jb
cmpsl
jge
xor
fcmovnu
sbb
xlat
sub
pop
xor
xorps
js
test
cmp
lock
lods
lock
pusha
mov
jo
mov
lea
jb
dec
jle
out
mov
les
ljmp
xor
test
fimull
fsubrl
pop
lods
mov
out
or
xor
sbb
xor
mov
js
or
add
mov
add
lcall
stc
xchg
jnp
xlat
add
callw
jl
imul
sbb
adc
cs
adc
cld
orb
jmp
insb
scas
mov
push
mov
jmp
ja
jmp
cmpsb
bound
adc
lcall
mov
dec
mov
lods
jl
pop
sub
cmp
inc
mov
mov
imul
cmc
pop
ficomps
aam
dec
jo
enter
fistpll
cmp
mov
int3
and
adc
imul
or
stos
xor
mov
pop
subb
adc
or
ret
rol
mov
out
jp
xor
mov
sub
dec
sbb
inc
dec
nop
test
and
jo
lods
sub
flds
mov
mov
jnp
sbb
daa
mov
popf
aam
addr16
popf
ret
jne
or
push
sub
cmp
lds
test
stos
cwtl
out
xlat
movsb
repnz
xor
adcl
inc
test
subl
iret
push
or
fs
mov
xchg
and
inc
sub
aad
aaa
in
adc
and
scas
call
test
adc
xchg
cmc
xorb
mov
imul
scas
mov
pop
repz
fldcw
fisttps
ret
scas
scas
stos
mov
lods
lds
jmp
clc
pop
mov
push
fwait
push
xor
push
test
jp
lahf
sub
pop
dec
lods
xchg
fldenv
repz
push
loope
pop
pushl
inc
inc
xchg
and
xchg
iret
and
push
push
ds
cmp
imul
fs
lods
popf
sbb
jne
mov
in
xchg
mov
mov
inc
imul
lret
mov
inc
sub
int3
jne
add
cli
lods
push
sbb
mov
jnp
push
inc
loope
cwtl
sub
sbb
cmpsb
sub
out
jnp
in
in
sub
xchg
insb
sub
xchg
jb
dec
std
mov
cwtl
fcoms
jmp
jo
mov
lea
mull
mov
sti
lahf
cs
xchg
pop
mov
lahf
mov
insb
cmp
sub
mov
into
mov
leave
mov
lcall
loope
hlt
aam
int
or
mov
stos
fcomi
imul
mov
pushf
mov
mov
adc
sbb
or
mov
sub
mov
stos
xchg
push
mov
mov
inc
mov
mov
and
and
cmpb
ss
and
cmp
inc
xchg
jle
int
pushf
outsl
ljmp
and
add
ja
cmp
cmp
inc
jno
push
test
or
shlb
lret
in
xchg
cmp
lcall
stos
out
mov
outsb
jb
sahf
push
aas
js
sbb
jmp
mov
cld
dec
push
in
sbb
aas
mov
fidivs
mov
lret
les
lods
sbb
je
push
adc
pop
mov
mov
mov
sub
insl
fisubrl
addl
ret
dec
js
xlat
loope
mov
cmp
lea
imul
ret
xor
ljmp
test
loop
and
pop
stos
sub
adcb
bound
sbb
subl
dec
xlat
nop
push
mov
out
notb
and
push
int
cld
dec
jae
dec
sbbb
cld
push
pop
mov
push
ja
pop
jmp
lret
inc
dec
jg
nop
push
inc
pusha
push
mov
jmp
fnstsw
imul
push
or
les
adc
inc
sbb
stos
fsubs
mov
jo
loop
outsl
adc
xor
pop
xchg
pop
jns
push
insl
in
mov
dec
cmp
scas
imul
cltd
dec
lds
sahf
jb
dec
add
add
in
aad
adc
cmp
testb
sahf
push
sti
call
ja
adc
mov
mov
mov
push
push
jnp
iret
int
test
push
push
xlat
jge
divl
and
or
arpl
int3
bound
test
or
es
mov
pop
dec
imul
jmp
mov
call
inc
inc
in
adc
into
pop
inc
loope
push
rcrb
imul
shlb
in
negb
int3
mov
xor
int3
icebp
jle
add
das
in
aas
push
push
sarb
xchg
lahf
sub
dec
dec
fisttpl
or
jb
push
mov
les
call
out
fldenv
cld
outsb
xor
call
mov
popf
mov
sbb
push
mov
icebp
nop
fwait
jg
imul
lcall
ror
and
and
loopne
int
jnp
adc
shll
dec
sub
mov
loop
addr16
lock
arpl
sbb
pop
sub
add
test
mov
pop
insl
adc
add
pop
lock
dec
cltd
lods
push
es
pop
inc
mov
xchg
orl
pop
lret
mov
aam
push
lret
roll
sti
add
cmpsl
mov
dec
aaa
lods
xor
mov
call
vpermps
jbe
lret
out
sbb
push
push
adc
inc
jnp
imul
fs
popa
or
cmpsb
add
ds
lock
pop
fistps
aam
data16
mov
jbe
pop
imul
cmp
fwait
or
leave
ret
mov
call
jb
jg
jl
xlat
sbb
mov
ds
pop
mov
pop
rcrb
rol
dec
mov
test
pop
mov
cmp
ja
movsl
sbb
xor
out
jmp
test
inc
rorb
iret
andb
fcomp
insb
push
inc
iret
pusha
pop
roll
lret
xchg
out
sub
jns
lods
orl
shlb
mov
mov
adc
mov
cmp
xchg
mov
shll
fistl
imul
icebp
dec
movsb
and
cmpsl
in
out
ficoml
pushf
cmp
jmp
dec
into
or
into
aam
jecxz
out
cmp
sub
enter
xchg
cwtl
inc
sub
mov
inc
lcall
xchg
shll
jns
sahf
inc
mov
xchg
orl
loop
pushf
inc
push
mov
cmp
pusha
shll
push
xor
outsl
dec
pop
movzbl
xor
aad
sub
imul
insl
mov
cwtl
xchg
ja
fimull
aas
das
fsts
cmpsl
imul
push
lods
je
lock
mov
je
cmp
in
or
jmp
mov
jl
push
sub
repz
test
bound
daa
fwait
mov
test
into
mov
loop
fildll
dec
bound
scas
xchg
ss
mov
push
ja
inc
cmp
pop
sub
inc
jl
stos
je
mov
in
xlat
into
cmp
fadd
fisttps
test
jge
sbb
lahf
movsl
xchg
pop
shrl
sarl
jo
add
das
ja
addr16
push
les
shll
mov
lods
jg
sub
xchg
test
or
xchg
dec
push
add
outsb
mov
pop
fidivl
lret
ds
mov
and
cmp
sub
imul
lea
push
cmpsb
xchg
mov
pop
mov
jg
in
sub
std
jmp
or
sbb
js
mov
and
xor
or
lock
xor
scas
sbb
adc
dec
mov
out
xor
pop
add
pop
dec
mov
fxch
and
dec
mov
or
stc
pop
test
in
imul
cmp
add
xlat
cmpsl
popf
add
sub
inc
pop
outsl
divl
lret
in
pop
mov
mov
sbb
imul
jo
cmp
sbb
inc
adc
mov
mov
std
dec
std
es
cmp
jae
inc
sarl
cmpb
jge
insb
scas
nop
in
and
dec
pop
out
lahf
movsb
mov
jmp
jo
fbstp
push
dec
insb
sbb
mov
mov
or
testb
sti
loop
jp
iret
jge
imul
xor
jge
lods
pop
mov
out
add
dec
mov
sub
sbbl
out
cmpsl
sbb
movsb
jl
pop
fwait
pop
pop
scas
call
incl
mov
adc
and
ficoml
cmp
pop
adc
jecxz
or
xor
lcall
outsl
pop
punpckldq
or
sub
in
icebp
inc
sub
cld
sbb
inc
popf
hlt
push
pop
sbbb
stos
mov
in
mov
movb
dec
stos
jmp
adc
out
pop
movsb
push
sti
movsb
out
mov
pop
cmpsl
mov
aad
mov
push
aam
fs
sti
cmp
sbb
lea
cltd
movsl
xchg
pushf
fst
sub
push
mov
pop
test
inc
data16
mov
ret
pusha
jmp
mov
add
clc
dec
cmp
rorb
inc
shl
sarb
sub
fidivs
iret
ss
int
rcll
mov
addl
outsl
sbb
out
std
loope
jmp
test
pop
in
sub
clc
add
pop
ret
notb
das
xlat
imul
pop
xchg
in
and
mov
dec
mov
dec
cmpsl
pusha
loopne
je
sbb
aam
mov
nop
pop
and
mov
in
cmp
test
into
and
mull
or
scas
mov
neg
cmp
or
sub
icebp
sub
das
cmpsl
fidivl
arpl
xor
loope
in
jecxz
movsl
mov
jp
push
and
inc
mov
cmp
call
cwtl
mov
mov
rorb
inc
add
xor
jl
mov
pop
push
inc
arpl
fs
pop
add
loope
xchg
or
test
push
xchg
aam
adc
adc
xor
xchg
nop
movsb
outsb
sahf
cmpsl
fdivl
lock
adc
stos
iret
jnp
sahf
jle
aaa
lret
aaa
lcall
push
ret
rcll
adc
scas
ret
addr16
jnp
cli
jge
add
jae
adc
xchg
mov
insl
push
pushf
pop
leave
pop
xchg
in
push
and
mov
xchg
popa
pop
jp
repz
ljmp
xchg
aam
imul
out
mov
cmpsl
nop
xor
dec
sbb
push
sti
iret
rdtsc
push
push
pop
sbb
xor
push
nop
lahf
call
cmpsl
and
das
scas
lods
addl
xor
pop
xchg
stos
mov
mov
sub
jae
arpl
xchg
dec
sub
pop
shll
int3
or
lock
jge
cmp
rcl
jp
jl
jp
jo
in
les
int3
mov
sub
sbb
sbb
cs
imul
jmp
insl
dec
pusha
pusha
rcr
out
push
xchg
inc
mov
inc
jmp
pusha
sub
in
sbb
dec
cld
fsub
sbb
rcll
fs
aaa
cmc
mov
pusha
jmp
jae
sub
pop
push
sub
sbb
xor
and
popa
mov
or
sbb
fldl
inc
repz
or
sub
fwait
inc
in
gs
sahf
inc
jp
aad
xchg
in
sbb
cmp
cmp
into
loop
icebp
sti
out
jnp
mov
fisubs
mov
stos
xor
fmul
loope
jmp
cmp
popa
inc
lea
adc
xor
packsswb
jmp
mov
test
and
stos
lcall
mov
mov
jmp
fcomip
cmp
sarb
push
jle
stos
jo
push
insb
mov
pop
jl
mov
mov
js
test
fcompl
popa
loope
pop
mov
aam
inc
inc
ja
mov
mov
fcomip
test
pop
xor
or
inc
xchg
fs
xor
inc
js
inc
add
in
jp
push
out
clc
push
fstp
mov
add
stos
loope
popa
cwtl
push
hlt
jo
push
iret
push
inc
adcl
jl
push
rol
pop
nop
lea
mov
jg
add
je
xchg
test
ret
in
aad
push
je
cmp
cmpsb
std
jle
cmp
loop
mov
dec
and
adc
xor
push
sub
xchg
ljmp
loop
inc
jp
mov
pop
mov
push
fld
lea
ja
cmp
push
shll
out
xchg
aad
xchg
cmpsl
add
ss
movsb
pop
cs
stos
fldenv
fistpll
add
lahf
lods
push
or
movsb
dec
lret
jns
mul
jo
cmp
pop
sub
mov
xchg
cmpsb
fwait
sub
jecxz
xor
or
data16
xor
fdivrl
and
leave
mov
fcoml
mov
mov
int3
fdivr
pop
mov
mov
xchg
movsl
jae
or
xchg
dec
out
addr16
dec
leave
out
adc
or
aas
lret
enter
pop
js
je
sbb
xchg
into
adc
fs
sub
ljmp
inc
add
pcmpgtw
out
cmc
scas
mov
je
insb
mov
mov
mov
popa
add
inc
and
insl
add
loop
or
test
stos
sub
stc
xchg
ja
movsb
shrb
adc
bound
mov
xchg
das
cmp
push
stos
sbb
xor
mov
adcb
inc
sbb
or
ret
cmp
push
daa
add
pop
fildl
in
jmp
into
cmpb
jg
loope
mov
int3
iret
jecxz
in
test
mov
scas
xchg
add
jb
std
repnz
gs
inc
ret
add
fs
fnstenv
or
pop
hlt
imul
pop
and
fdivrs
ffreep
lock
sti
les
aad
repnz
xor
sbb
stos
aad
fs
mov
jp
sti
add
es
inc
mov
xor
pop
pop
fdivrs
xor
mov
and
adc
clc
shll
cltd
cmp
xor
push
cwtl
jg
adc
es
xchg
pop
jne,pt
das
and
int3
aad
push
dec
mov
pushf
ret
cmc
pop
shll
roll
aad
xor
dec
push
shlb
dec
into
xchg
jno
mov
jnp
sub
addl
and
testb
push
mov
or
cwtl
ja
cltd
cmp
sub
pop
ret
sbb
mov
xchg
int
xor
jae
inc
jge
push
aas
repnz
std
jl
xor
call
adc
add
jns
out
lods
push
dec
push
fldenv
or
or
mov
and
ljmpw
dec
or
xchg
les
jge
cmpsl
pushf
mov
cmp
pushf
push
xor
inc
cmp
or
add
les
dec
fwait
es
mov
inc
push
push
subl
cli
cld
aaa
xor
int3
ds
mov
mov
mov
into
pop
dec
loopne
mov
inc
ret
pop
mov
in
mov
xor
mov
xchg
mov
in
les
lock
fwait
cmp
jae
fwait
inc
push
shlb
add
mov
xchg
pop
cmp
ss
scas
pop
outsl
adc
fadd
jno
add
mov
jmp
sub
fsubrs
jns
push
pop
mov
jns
es
testl
rorb
jecxz
lret
nop
add
aad
xchg
mov
mov
imul
cld
cmp
scas
sbb
repz
in
loopne
add
dec
lods
ficomps
adc
subb
or
adc
shlb
test
dec
inc
lock
fisttps
xchg
fwait
and
movsb
pop
frstor
lcall
les
cmp
push
int3
mov
sbb
sub
push
fwait
or
les
out
jge
fstpt
enter
adc
loope
cmp
test
int3
pusha
fisubrs
xchg
sbb
push
push
push
xchg
mov
xchg
or
stc
in
adc
subb
clc
add
sub
shl
loope
aad
mov
js
mov
std
hlt
sub
or
outsl
ret
lock
jnp
mov
inc
adc
pop
out
jnp
cs
int3
dec
popf
cwtl
pusha
pop
call
inc
pushf
dec
movsb
mov
sub
sti
inc
add
mov
adc
rcr
sub
loopne
leave
mov
call
mov
testl
mov
outsl
inc
pop
cmc
jae
mov
cmp
rorb
mov
jmp
bound
mov
out
xchg
hlt
cmc
cwtl
mov
mov
add
lock
out
hlt
lret
add
jmp
push
cmp
and
inc
mov
push
push
xor
and
movsb
repnz
jnp
xchg
jnp
jecxz
dec
inc
das
dec
pop
dec
sti
lds
scas
add
shr
lds
pop
mov
fwait
push
or
outsl
add
xchg
cmp
mov
mov
scas
adc
outsb
rorl
xchg
push
test
xchg
mov
outsl
mov
mov
cmp
mov
sbb
cmp
mov
add
sbb
xchg
test
mov
mov
das
lea
call
inc
sti
lea
enter
mov
mov
adc
mov
nop
push
aaa
cmp
mov
jo
sub
adc
push
mov
pop
xchg
push
jnp
ret
sub
sbb
push
add
inc
mov
enter
test
movsl
push
pop
shl
mov
test
test
adc
jge
adc
inc
sahf
or
push
clc
fnstcw
mov
inc
ljmp
daa
jne
sub
jbe
sbb
jb
mov
mov
or
jecxz
mov
adc
or
mov
pop
lcall
fimull
pop
mov
sub
mov
inc
inc
ret
and
adc
xchg
fisttpl
aaa
scas
cmp
je
adc
dec
cmpsl
subl
insl
jl
rclb
aad
movsb
ja
and
adcl
xor
fbstp
lea
push
push
pop
lcall
xor
and
add
adc
hlt
mov
int
rcll
inc
test
ret
jmp
jle
xor
lahf
inc
xchg
pushf
xor
lea
mov
lock
pop
stc
into
sub
shll
pop
mov
fcmovbe
jo
fsubl
mov
data16
aas
mov
movsl
dec
sub
cmp
pop
mov
jns
in
or
mov
ja
je
pop
dec
sbb
sahf
cli
cmpl
sti
adc
lret
cmp
stos
lcall
jmp
outsl
sahf
cmpsb
push
xlat
adcb
out
es
outsl
mov
subb
cmp
push
xchg
icebp
sbb
pop
outsb
lahf
jle
xor
movsl
fcmovne
or
popa
or
xchg
enter
test
pop
pop
call
adc
mov
and
mov
sub
inc
filds
inc
outsl
cmc
jae
push
cmp
fst
sub
jo
cmp
cld
pop
jne
cwtl
jne
sub
out
enter
pop
adc
sbb
loop
add
jle
jmp
mov
sub
push
clc
lahf
inc
add
lds
out
int3
dec
xchg
in
xchg
pop
movlps
lret
popa
test
lods
xor
sub
or
out
add
jmp
sub
lods
pop
and
std
fistpl
scas
icebp
mov
pop
cmp
les
sar
lds
js
push
mov
test
into
jle
push
sub
sbb
mov
and
add
int
or
inc
outsl
pop
cmc
mov
mov
dec
lods
scas
mov
scas
jg
cmp
rcl
xchg
cmpsb
pop
dec
xor
cld
test
sub
mov
sbb
nop
rorb
inc
cmp
pop
jnp
mov
push
jp
pop
lret
lret
push
idivl
insl
test
imul
addl
test
lods
loopne
bound
mov
in
cmc
inc
mov
cmp
aad
mov
andl
adc
add
imul
sbb
shlb
cmc
mov
push
xor
call
das
cli
nop
push
sbb
arpl
pop
ss
insl
push
and
fcomps
aad
cmpsl
popf
jne
call
adc
cmp
dec
decl
loop
popf
pop
fidivrs
test
mov
dec
insb
out
enter
or
pop
mov
stc
rclb
sub
inc
push
test
pop
fwait
cmpsb
ret
jns,pn
pop
dec
cld
push
cmpsb
sarl
aad
ret
mov
mov
hlt
mov
icebp
xchg
loope
or
jne
enter
cld
jle
sti
mov
mov
test
leave
scas
sub
aas
std
aad
push
int3
int
jmp
pop
ds
in
stc
sbb
popf
mov
inc
jno
ljmp
inc
mov
sarl
mov
mov
cmc
mov
fdivrs
inc
negb
add
rcrl
mov
outsb
jo
push
and
inc
pop
js
popa
pop
stos
movsb
jb
sub
push
dec
movsb
dec
add
sub
cltd
aas
test
cmp
push
into
push
dec
loop
mov
mov
xor
idivl
sbb
xor
fbstp
int
addr16
pop
xlat
sbbl
mov
icebp
insb
push
jo
es
push
pop
xchg
lea
push
test
outsb
jne
clc
movups
call
aaa
mov
add
jno
or
pop
cmp
popf
scas
jnp
sti
mov
fst
sbb
cmpsb
and
ja
loopne
add
xor
pop
ret
mov
sub
call
add
jne
add
pop
push
adc
pop
sbb
nop
mov
xlat
dec
jnp
test
js
bound
mov
xor
push
push
icebp
shlb
mov
push
add
icebp
sbb
repnz
adc
push
xchg
test
insl
pop
out
scas
mov
push
pop
out
cmp
lods
std
lods
xor
sbb
rcl
inc
leave
mov
lcall
add
nop
scas
test
and
xor
add
or
jb
dec
and
icebp
xchg
mov
lcall
stc
insb
xchg
pop
in
inc
out
sbb
not
inc
andb
data16
bnd
inc
hlt
inc
jle
fwait
mov
inc
adc
hlt
xchg
xchg
pop
jmp
dec
jl
fsts
or
push
nop
in
int
clc
stc
call
sbb
lret
sti
lds
mov
stos
jns
sarl
pop
outsl
dec
inc
roll
sahf
cld
lds
mov
add
sub
das
push
jge
repnz
add
inc
orb
sarl
and
psubb
adc
int
cwtd
sbb
scas
inc
aam
rcrl
ret
sub
push
dec
push
mov
leave
mov
mov
test
mov
out
fsubl
and
and
daa
dec
aad
push
fidivl
sub
outsl
dec
ljmp
cmp
rcrl
sub
rcrl
mov
mov
int
xchg
loop
adc
lock
sarl
roll
dec
inc
push
sbb
jge
cwtl
or
outsb
stos
iret
into
xchg
mov
dec
jl
and
scas
imul
sbb
adc
adc
mov
sbb
jae
cmc
ret
mov
sbb
mov
xor
sub
xor
stc
fdivl
flds
icebp
sti
ret
mov
iret
nop
push
incb
pop
sahf
bound
je
xchg
dec
dec
jns
jle
jbe
je
jmp
test
pop
add
mov
push
jns
mov
ficoms
or
std
sbb
add
add
jb
ret
fisttpl
inc
sti
mov
call
lahf
stos
lret
mov
dec
mov
push
mov
in
adc
sub
cmpsl
jle
jg
in
push
jmp
ret
test
in
int
jne
inc
incb
jns
xchg
ret
test
arpl
mov
mov
es
jge
rcrl
mov
arpl
xchg
jle
mov
jp
into
sbb
aaa
cmpsl
pop
test
dec
jmp
ret
pop
xchg
sub
and
xor
pop
lcall
insl
pop
jle
fmul
inc
pop
add
adc
mov
dec
in
pop
aad
inc
sbb
mov
push
xor
je
push
inc
or
sub
jns
cmpsl
cltd
push
push
inc
inc
pop
scas
fs
sbb
push
aas
out
push
xchg
pusha
jle
aad
sub
adc
adc
pop
xchg
mov
jle
cmp
jno
dec
fisubs
je
cli
or
fnsave
push
pushf
adc
mov
jge
jno
int
jne
lret
mov
push
pop
ja
cs
mov
add
xchg
mov
and
jge
popa
xor
dec
push
mov
in
xor
pusha
pusha
popa
repnz
test
ret
push
lods
push
sahf
push
rorb
sti
lods
pop
or
push
les
cli
dec
adc
test
cmp
add
or
mov
test
pushf
in
jns
inc
rcll
jge
jl
addr16
xchg
pushf
push
in
sahf
xor
call
adc
adc
clc
jge
cmp
sbb
add
mov
int
rorb
ljmp
out
jmp
inc
js
push
shl
lock
mov
test
inc
test
push
jmp
xor
adc
cmpsl
mov
ss
pop
pop
mov
clc
loopne
insb
inc
sbb
mov
sti
scas
ret
push
cli
push
mov
icebp
sbb
add
out
sbb
pop
mov
adc
jne
sub
adc
xchg
jne
add
ljmp
in
fbstp
mov
outsb
sub
mov
inc
xor
jge
int3
lods
jg
subl
pop
sub
enter
jmp
or
push
fdivs
std
jb
sub
pop
aad
xchg
cmp
shrl
adc
push
out
and
movsl
mov
addr16
mov
dec
lret
push
sub
xor
lret
xchg
mov
sbbb
jae
data16
aad
mov
mov
mov
jmp
or
hlt
negl
outsl
pop
test
ret
mov
aas
out
pop
popa
xor
add
add
mov
pushf
fyl2xp1
lods
dec
mov
ret
lahf
fcmovu
sub
push
mov
mov
mov
adc
ret
dec
das
idivl
fwait
pop
mov
jo
test
mov
mov
xchg
gs
cmpsb
scas
shr
dec
mov
jns
insl
aaa
jg
xchg
xchg
xor
out
jae
sub
push
in
add
push
leave
cmp
das
lret
dec
jb
shr
sbb
inc
sub
rcrb
cmp
add
std
lock
loope
mov
and
insl
cmc
push
lds
pop
mov
mov
mov
mov
push
push
add
cmc
aad
push
movsb
mov
add
cmc
popf
mov
pop
mul
and
push
mov
cli
sbb
xchg
xor
pop
sub
out
std
int3
jo
pusha
pop
or
jne
cwtl
push
mov
loope
jle
mov
popf
int
mov
movsb
icebp
sbb
and
inc
repz
lods
jnp
mov
sub
leave
sarl
inc
sub
pop
inc
inc
cmp
fimuls
mov
repz
inc
xor
sbb
push
mov
mov
inc
js
mov
nop
outsb
inc
int3
jno
fiadds
iret
mov
test
sbb
cli
test
call
sub
pusha
mov
jecxz
sahf
mov
out
loop
pop
mov
arpl
int
or
mov
rcrb
push
sub
fcomps
sti
insl
mov
dec
lahf
ja
sarl
test
fiaddl
or
pop
test
sbb
xor
subb
mov
jge
stos
add
in
loopne
sbb
sti
push
inc
loope
mov
sti
dec
push
add
enter
sbb
or
mov
cmpsb
mov
add
out
flds
cmp
arpl
push
rcr
call
outsl
int
dec
fwait
arpl
pop
mov
in
mov
sub
enter
sub
stos
loopne
data16
stos
cmpsl
ljmp
dec
lcall
mov
les
outsl
jle
mov
call
adc
pop
sub
push
xchg
jg
mov
aam
pop
loopne
pop
movsb
jp
pop
lcall
dec
fcoms
mov
xor
xor
jge
sub
hlt
and
jp
aad
inc
cmp
shr
movsb
fistps
imul
and
test
jg
out
iret
sbb
sbb
or
and
scas
fisttpl
stc
cltd
pop
lods
stos
cld
in
outsl
dec
fistpl
cs
dec
fmul
fisttps
xchg
mov
cmc
add
lds
das
pop
and
mov
stc
dec
test
cmpsl
push
jae
adc
and
mov
fisubl
dec
test
mov
bts
leave
xchg
sarb
xor
pusha
lods
jae
int3
dec
push
fdivl
sub
pop
dec
cmc
sbb
outsb
rorl
mov
pop
js
cmpsb
sub
mov
popf
xor
cmp
cmp
push
adc
add
xor
cmpsl
aad
call
aaa
jmp
rol
movsb
dec
es
outsl
dec
dec
lds
into
xor
insl
cmpsb
jbe
xor
fsubs
mov
fstpl
dec
push
push
daa
sbb
sub
out
daa
or
mov
rcr
ss
leave
adc
or
test
hlt
push
sbb
xchg
jns
out
push
jl
imul
es
in
push
lock
xchg
repz
sbb
shr
push
ljmp
test
je
and
cs
sub
mov
xor
sub
cmp
mov
mov
jg
loop
pop
mov
cli
inc
cld
mov
inc
std
xor
push
pushf
jmp
scas
xor
xor
aad
and
stc
pop
lods
rcrb
xchg
out
and
xchg
ret
add
cmpsb
insl
or
lds
nop
pop
imul
or
sub
add
push
test
rcr
gs
push
into
pushf
in
inc
lret
pop
rcr
xchg
shrl
les
cld
mov
cmp
mov
sbb
das
rcrl
fwait
pusha
add
mov
outsl
jge
adc
ret
xchg
pop
dec
cmp
sarb
cmp
aas
add
dec
inc
adc
loopne
sub
mov
or
loope
inc
dec
push
mov
adc
lea
sub
inc
jge
out
rcr
popf
add
sub
rcll
shll
jno,pn
jmp
in
xchg
rol
push
iret
xlat
cmp
pop
fnstenv
sub
mov
lea
pop
mov
repnz
loope
loopne
int3
inc
fisttpl
cmpl
ja
mov
jmp
ffree
sbb
lret
popf
and
xor
mov
into
and
mov
incl
mov
mov
jnp
out
xchg
rcrb
mov
xor
loop
subl
stos
imul
cmp
dec
xor
push
sub
int3
lret
scas
aam
mov
or
test
int
cld
sub
inc
add
mov
or
scas
iret
loop
dec
mov
loopne
pushf
loopne
pop
pop
cmp
add
inc
adc
cwtl
cmp
cmp
ror
xor
mov
sahf
dec
repnz
push
add
shr
in
push
cs
adc
mov
or
jbe
test
xchg
fdiv
xlat
roll
push
pop
dec
js
ret
movsl
jnp
notl
sbb
pushf
mov
xor
clc
sbb
xchg
push
xor
dec
xor
jb
cmp
inc
bound
stos
cmp
ret
bnd
bound
inc
pop
jbe
imulb
int3
clc
fildll
ds
mov
lcall
jbe
jno
shl
mov
xchg
rcll
push
sbb
adc
iret
jnp
jmp
jns
insb
nop
iret
fisubs
fcmovnu
mov
jg
or
leave
xchg
mov
mov
inc
add
pop
fwait
js
or
xorl
shll
push
lock
mov
ret
shl
outsb
test
xchg
aad
ret
dec
mov
sub
lret
addr16
movlps
adc
pop
or
lahf
loop
mov
pop
mov
mov
les
jb
add
icebp
js
inc
xlat
mov
xor
int
aam
pop
adc
rorb
lahf
pop
mov
pop
shrl
stc
add
je
test
jp
mov
out
push
hlt
hlt
cmpsb
ljmp
mov
sbb
pop
cltd
mov
test
stc
aad
aas
leave
sub
ret
jbe
jp
adc
cmp
test
mov
mov
movsb
cmc
cmp
xlat
iret
mov
adc
aas
insl
dec
cmp
jae
stos
rol
call
push
mov
cld
inc
sub
cs
or
ror
ja
dec
lods
lods
andl
enter
mov
fdivs
xor
mov
xchg
adc
dec
sarb
fildl
in
out
xchg
add
pop
sarl
pop
cmp
fcmovbe
lret
sub
or
mov
shlb
sarl
std
mov
hlt
dec
inc
addr16
aad
xorl
sbb
shll
lds
xor
cs
and
jae
test
jno
or
sbb
mov
cmp
mov
sbb
in
jg
adc
cld
lret
mov
fisubs
adcl
inc
push
cmp
xchg
push
add
mov
out
inc
int3
sbb
add
fwait
push
cmp
movsl
cwtl
mov
cmp
mov
iret
call
out
push
push
or
test
dec
mov
scas
and
inc
adc
adc
sub
lea
jle
imul
sar
es
mov
jno
imul
out
mov
sbb
clc
jmp
pop
movsb
xchg
popa
mov
jmp
test
xchg
mov
mull
scas
fwait
sub
cmp
xchg
rolb
std
add
dec
jmp
or
inc
dec
pop
pushf
adc
movsb
dec
stos
xchg
adc
cmp
gs
xchg
sub
inc
dec
std
leave
inc
in
adc
mov
popa
cmp
popf
add
mov
jg
mov
rcrb
push
out
in
jg
adc
mov
cmp
and
popa
aad
jge
adc
addr16
xchg
mov
sbb
add
mov
mov
cmp
xchg
popa
or
in
movsb
lea
jg
loope
movlps
out
enter
cmpsl
sbb
xchg
cmc
adc
mov
adc
add
cmp
dec
xor
inc
sub
pop
mov
fimull
arpl
adc
movsb
popf
jl
pop
adc
inc
enter
sbb
ror
mov
push
jo
fucom
sub
xor
mov
rcrl
or
es
movsl
aas
dec
popf
fsubrs
imul
pop
subl
inc
mov
mov
pop
xor
sbb
testb
scas
cmpsb
mov
mov
lods
xorl
repz
push
pop
jmp
hlt
mov
inc
jle
jecxz
jmp
pop
mov
ss
int
call
mov
out
xor
push
fbld
or
jmp
shlb
imul
jae
fisubrl
pop
pop
mov
dec
test
sub
sbb
add
rcl
mov
lret
bound
sub
xlat
ret
dec
cmp
pushf
mov
outsl
mov
fdivrl
aaa
clc
fidivrl
sbb
pop
sub
hlt
push
lock
xchg
roll
js
rcl
jmp
les
push
movsb
loopne
fimull
jnp
mov
push
and
xchg
xchg
aaa
pop
notl
ds
lcall
mov
xchg
fimull
ljmp
jnp
lds
cmc
popa
jp
and
in
jae
xchg
mov
mov
inc
filds
mov
and
pushl
pop
mov
jnp
loopne
xchg
scas
pop
std
outsb
and
mov
leave
jle
fldcw
rclb
iret
xor
cs
cmp
into
xor
jle
dec
or
clc
cmp
lock
fwait
adc
push
push
les
test
int
data16
pushf
shr
je
mov
std
notb
fisttpll
add
shrb
push
push
xchg
mov
fldl
mov
xor
std
incb
mov
add
test
ljmp
mov
lods
orb
lods
mov
iret
mov
popf
xor
pop
xchg
mov
mov
cwtl
out
hlt
dec
jmp
das
sub
lods
or
xor
fwait
jns
jmp
xlat
xchg
aam
aaa
mov
xor
cmp
adc
pop
arpl
pop
daa
mov
dec
mov
aad
mov
xchg
dec
insb
xchg
pop
xchg
add
add
aad
push
nop
notl
mov
sub
idivb
fistpll
testb
cmp
cltd
mov
jae
adc
jle
jecxz
mov
jl
mov
dec
mov
mov
jmp
inc
jecxz
jmp
insl
out
imul
pop
mov
shlb
outsl
rcl
adc
push
roll
pop
sbb
sub
hlt
xchg
pop
push
out
sub
fnstenv
add
test
push
addr16
mull
data16
sub
sarl
bound
sub
into
xor
mov
and
push
lret
insb
fs
bound
push
dec
in
and
add
dec
movsl
xor
rol
dec
ds
push
mov
in
inc
cld
mov
pop
js
nop
test
in
xchg
jle
stos
sub
popa
sbb
add
jl
cmpsb
mov
mov
loope
pop
loopne
push
push
cmp
addr16
xor
mov
cmpsb
mov
cmc
aas
jp
mov
adc
es
cmpsl
int
jo
cmp
add
ljmp
lcall
mov
ret
int
push
clc
out
pop
mov
and
repz
sub
fistl
scas
decb
ss
std
loopne
xorl
movsl
orl
mov
pusha
outsl
fs
into
pop
sti
jo
pop
outsl
mov
and
popf
jbe
sbb
stos
rorl
sub
stc
divl
mov
das
sub
cmp
cmc
add
mov
dec
test
sub
sbb
icebp
and
notb
insl
jo
ja
icebp
dec
into
cli
mov
out
cmpsb
das
mov
cmp
dec
sub
xchg
adc
fisubl
imul
push
ss
je
mov
lret
loope
inc
mov
xchg
insb
inc
mov
inc
mov
dec
jmp
push
or
adc
ds
pop
inc
sbb
mov
mov
ret
lcall
inc
scas
repz
hlt
jns
mov
scas
mov
pop
dec
lds
mov
and
and
mov
inc
into
xchg
xchg
adc
xorb
jns
xchg
push
cmc
shlb
cmp
add
sarb
fiaddl
inc
stc
jno
cwtl
aaa
dec
clc
inc
xor
decb
and
fwait
mov
jns
mov
movsl
cmp
in
icebp
adc
mov
lret
out
sbb
pop
sbb
lcall
arpl
xchg
fsubl
and
push
fsubrs
and
xchg
pushf
sub
jae
mov
shrl
sub
mov
push
aam
gs
adc
call
sub
jae
dec
das
lods
paddd
sti
loope
adc
inc
mov
aas
adc
ja
pushf
ljmp
or
jmp
jecxz
pop
inc
push
inc
sbb
cmpsb
mov
cli
fwait
stos
push
addr16
pop
add
pop
sub
ret
or
push
xor
xchg
aaa
inc
or
pop
insb
clc
rcrb
inc
sbb
out
pop
je
jecxz
shrl
aad
in
test
shl
shll
js
out
mov
fcomip
xor
mov
lock
hlt
fdivrl
push
bound
mov
sbb
sbb
and
adc
rep
xlat
adc
cmp
popa
push
xor
push
lret
fwait
mov
add
cmp
xchg
mov
mov
int
xorl
loope
cmp
dec
cli
icebp
ret
ret
sti
fisttpl
add
push
xchg
cmp
xchg
into
inc
jl
mov
outsb
sbb
gs
cwtl
xor
rolb
imul
jmp
ja
not
dec
and
xchg
in
scas
add
pushf
jecxz
add
jne
dec
inc
cli
jge
push
ss
sti
outsl
dec
sbb
push
push
cmc
add
pop
inc
pop
jb
gs
bound
out
out
and
jmp
mov
sbb
dec
add
data16
in
lret
sbbb
orl
dec
lcall
flds
push
cmp
test
mov
xchg
adc
jno
or
xchg
lock
jle
mov
mov
jle
push
xor
sub
aaa
aam
mov
adc
jnp
cmp
shll
sub
scas
mov
sbb
inc
ss
pop
je
mov
jecxz
xchg
div
pop
mov
pop
jb
fnstcw
imul
dec
andl
sarb
loop
mov
cs
mov
into
adc
repnz
mov
or
lods
scas
std
jnp
enter
and
adc
sub
sub
adc
sbb
mov
jge
mov
adc
std
aam
xor
push
jp
jo
sbb
sub
inc
jl
loope
lods
mov
fstpl
loop
pop
jno
push
dec
mov
push
jg
or
lds
mov
loopne
adc
adcb
and
into
fwait
in
cmpsl
push
ja
divb
sarl
pusha
and
enter
jae
gs
xor
cmp
mov
and
addl
mov
pop
mov
xchg
push
es
test
pop
adc
sub
fbstp
inc
and
sahf
push
out
mov
loope
loope
mov
push
dec
mov
push
dec
adc
sahf
cmp
mov
cld
push
mov
mov
jle
outsl
outsl
adc
mov
les
push
imul
pop
ss
arpl
mov
andl
cmp
jp
jp
lods
inc
mov
jg
clc
dec
jne
mov
shlb
aad
mov
mov
cli
sbbb
cmp
cmp
pop
mov
xor
jl
mov
ret
push
mov
and
adc
sub
out
mov
in
and
sbb
adc
sbb
data16
subl
xchg
inc
jne
pop
fdivrs
insb
out
mov
arpl
into
lock
shrl
xchg
mov
fcomps
lsl
lahf
jb
movsl
inc
jmp
jp
out
cmp
lods
popf
nop
mov
js
xchg
jo
mov
repnz
push
pop
sbb
pushl
fistl
inc
inc
mov
xchg
push
push
fdivs
add
mov
mov
mov
pop
push
popa
mov
add
aaa
mov
push
push
out
lcall
inc
mov
aad
push
inc
in
insb
in
mov
sbb
movsb
ret
xchg
shll
cs
mov
testl
movsb
cmp
cli
xor
mov
imul
pop
cs
push
sti
insb
fcompl
es
push
inc
sub
movsb
in
jecxz
push
cmp
into
mov
push
xchg
or
jle
mov
pop
xor
push
mov
shl
lds
loop
dec
shrb
rcr
call
xchg
xchg
scas
cmp
int3
inc
mov
fcomps
cmp
int
push
mov
daa
popf
iret
cmpsb
call
pop
inc
mov
ljmp
inc
push
cmp
pop
test
shlb
sub
out
cwtl
cltd
pushf
add
inc
jbe
addr16
jb
xchg
pop
cli
imul
test
sub
repnz
repz
movsb
imul
jg
mov
sub
stos
mov
jle
mov
not
loope
dec
lahf
adc
pop
jb
scas
pop
aaa
gs
scas
xor
or
mov
push
stos
repz
fwait
mov
shl
push
enter
aam
jae
mov
ljmp
sahf
adc
mov
add
jnp
add
push
xor
inc
sub
scas
out
cltd
cs
mov
pop
loope
aaa
test
mov
add
enter
push
pop
xor
stc
insl
out
sbb
jns
cmp
mov
cmp
push
jnp
dec
sarb
sub
test
in
cmp
aas
ss
push
fmuls
cli
mov
push
push
das
std
divl
sbb
inc
inc
sbb
pop
aam
or
mov
frstor
pop
popf
test
cmp
mov
mov
call
sbb
pop
bound
xchg
mov
stos
mov
pop
push
adc
clc
jmp
loope
jno
and
pop
or
mov
movsl
jmp
or
mov
jl
or
iret
xchg
sbb
xchg
lods
fisubs
out
xlat
adc
pop
ret
dec
inc
ret
rolb
mov
mov
lret
mov
dec
xor
and
imul
cli
cwtl
sbb
jo
add
arpl
mov
push
sub
loop
fsubs
insl
sbb
push
mov
fwait
cs
nop/reserved
mov
rorl
out
push
cmp
das
xor
push
pop
bnd
cmp
pop
sbb
sti
andb
fsubs
out
xchg
out
shl
cmpsl
test
sub
jnp
test
jl
mov
scas
lods
clc
loop
in
xchg
cs
movsl
lods
lock
cli
push
test
and
sub
popa
cmc
int3
mov
sub
ret
lds
pushf
jp
mov
leave
imul
adc
shl
je
ror
stos
add
mov
mov
lods
cld
iret
mov
movsl
out
dec
or
sub
adc
dec
xchg
insl
jno
ljmp
sbb
cmp
jl
fsubrl
sbb
mov
mov
gs
or
insw
xor
cld
es
mov
mov
mov
mov
mov
push
in
jg
pop
loopne
lock
push
andl
dec
subl
jmp
mov
or
jle
jge
fs
add
mov
xchg
sub
cwtl
sub
sbb
imulb
sbb
sahf
ss
pop
rorl
add
jmp
mov
popf
jp
out
test
es
pop
mov
sti
jmp
cmpl
mov
xchg
mov
pop
outsl
inc
scas
add
sub
and
sbb
sub
aas
xchg
outsb
lcall
inc
movsl
or
mov
mov
cmp
test
int
je
adc
rcll
aas
shll
xchg
or
mov
pop
xor
imul
nop
lods
or
je
loopne
test
inc
or
push
test
mov
ds
fs
stos
leave
cmc
pop
mov
or
ja
insl
and
int
ret
aad
std
mov
mov
cltd
jge
scas
fnstcw
movsb
psubsw
std
sarl
daa
pop
je
leave
shlb
jg
imul
xor
je
mov
sahf
ds
cmpsb
dec
fistl
fstpt
jb
popa
push
adc
mov
dec
enter
loop
ja
cmp
pop
jmp
leave
fldenv
ret
lock
int
sub
shrb
push
and
test
sbb
fwait
or
dec
std
xor
in
or
sub
hlt
push
push
inc
mov
xchg
cltd
es
out
jg
inc
xchg
mov
mov
cmpsl
jb
movsb
std
dec
pop
dec
movsl
mov
push
frndint
movsb
call
and
inc
xchg
push
es
int3
pop
or
cld
cltd
mov
insl
cwtl
test
xchg
jmp
and
inc
fidivl
adc
jnp
ljmp
loop
imull
and
push
stc
scas
arpl
cwtl
out
xor
fildll
lea
test
mov
sub
fdivs
dec
and
jbe
xchg
pop
lcall
inc
je
ss
orl
inc
mov
mov
sbb
sahf
mov
push
cmp
loope
sub
sar
pusha
inc
dec
mov
xchg
das
in
movsb
xorb
sbbb
arpl
add
dec
dec
insl
dec
and
mov
stos
out
jae
notb
fdivrs
bsr
aad
lods
mov
sub
out
sub
jmp
and
cli
pop
adc
push
cmp
jbe
pop
aaa
lock
in
call
test
outsl
pop
negb
push
fildll
fsubrs
test
xlat
adc
rcr
or
aam
xchg
test
lahf
or
repnz
pop
xor
adc
scas
outsl
mov
jb
jne
inc
sti
lret
mov
sbb
leave
pop
adc
fsubrp
mov
ds
push
lcall
or
add
push
cmp
cmp
in
pop
insl
popa
pop
and
sub
sbbl
and
sub
stos
cld
test
fildl
sbb
xor
xchg
out
fbstp
push
push
inc
pushf
inc
addl
scas
ss
push
sbb
loop
std
mov
inc
push
out
fs
xchg
and
ret
mov
cmc
mov
add
jle
repz
leave
call
std
mov
sbb
jbe
pop
and
dec
inc
jl
aaa
push
aad
mov
insl
mov
cmp
cmc
push
les
pushf
jno
jne
pop
enter
arpl
pop
mov
cmpsl
pop
xchg
sti
inc
adc
imul
cmpsl
sahf
pop
mov
push
mov
lret
pop
out
pop
jno
pop
add
mov
xor
xchg
jns
les
cltd
pop
jl
int
xlat
and
daa
sbb
jp
rcrb
out
clc
movsl
or
dec
dec
repnz
test
dec
lods
mov
push
xor
enter
or
test
sub
push
inc
lret
ret
arpl
mov
add
jno
inc
adc
andl
in
pop
decb
in
or
les
xchg
pop
inc
mov
mov
push
push
xor
icebp
sbb
jmp
adc
insl
ljmp
lea
jp
and
sub
push
inc
adcb
fbld
mov
outsb
cmpsl
sub
ds
push
dec
icebp
sub
dec
sarl
divl
push
cli
jle
dec
inc
mov
std
jne
addr16
inc
sub
mov
pop
jmp
cs
sub
cwtl
add
add
enter
push
leave
loope
push
xchg
and
loopne,pn
add
and
lret
xor
inc
add
out
pushf
xor
mov
add
dec
mov
cld
jmp
dec
cltd
mov
jmp
push
sbb
aaa
rolb
dec
and
jne
lahf
das
scas
cli
pop
or
jecxz
lret
jle
addr16
or
insl
add
inc
dec
ret
adc
mov
mov
pop
xor
lcall
jp
pop
cs
icebp
inc
adc
sahf
and
add
or
sub
andb
sbb
test
jp
pop
movsl
add
mov
add
and
daa
push
inc
push
lods
jmp
aaa
mov
sub
sti
jne
mov
pop
hlt
adc
sti
jge
jae
push
mov
cld
sub
data16
pop
push
pop
repz
insb
insb
jp
clc
xor
mov
and
ret
mov
clc
mov
sti
andl
and
xchg
jmp
mov
jbe
xor
fisttpl
lret
sti
pop
adc
xor
sbb
pusha
fisttpl
shrl
and
mov
rdtsc
in
les
sub
maxps
dec
loope
lcall
jl
arpl
mov
in
mov
inc
fcomps
sub
pop
xchg
popf
aaa
mov
sbb
pusha
mov
or
mov
int3
std
clc
in
dec
icebp
lods
shrl
mov
or
pop
jo
scas
jge
stos
pop
dec
roll
push
in
inc
stos
push
xchg
and
loope
je
outsl
out
cwtl
mov
aaa
sub
std
inc
sbb
lods
jp
xchg
xchg
sbb
hlt
cltd
and
push
add
jae
repnz
sbb
ss
mov
cli
sbbb
cmp
nop
daa
inc
shlb
mov
push
lret
lods
in
sub
cmc
cmc
mov
sti
dec
test
loope
pop
cmp
lea
fbstp
and
lods
add
sbb
and
and
aaa
cmc
iret
inc
loopne
xorb
shr
push
push
in
push
dec
pop
mul
push
es
xchg
ja
into
xor
mov
movsb
cmp
iret
fidivs
mov
push
jne
jmp
mov
aad
push
stos
sbb
test
sbb
mov
sbb
push
xchg
jp
test
inc
xchg
cmpsb
xor
outsb
inc
pop
mov
rorl
pop
sbb
sbb
pop
rcrb
cmp
or
jp
jg
push
mov
cmc
jo
loopne
cltd
pushw
jl
notb
lock
cmp
aad
dec
fidivrl
daa
dec
add
imul
push
mov
push
cmp
cwtl
in
sub
dec
in
push
sub
sbb
je
mov
iret
add
mov
rolb
leave
jge
std
cmp
out
dec
test
ret
dec
out
sbb
ja
inc
cmp
js
lret
push
mov
insb
mov
or
pop
cli
or
cltd
and
dec
scas
in
outsb
jo
clc
cltd
sbb
rolb
adc
pop
orl
adc
std
mov
lds
js
inc
test
das
popf
cmc
shrl
jg
aam
jp
mov
faddp
icebp
imul
pop
lcall
inc
cmc
mov
mov
mov
add
testb
push
or
mov
sub
fimuls
xor
scas
mov
inc
adc
mov
xchg
jecxz
cmpsb
inc
leave
inc
sbb
vpsubusw
shlb
mov
enter
iret
bound
add
std
std
fcmovnb
jmp
into
dec
pop
pop
stc
icebp
lcall
xchg
nop
pop
loopne
xchg
pop
jg
lea
and
sti
sub
xchg
sub
cld
cmp
daa
pop
imulb
loop
mov
pop
inc
into
ja
pusha
aas
shrl
test
adcl
sbb
mov
dec
fdiv
in
lea
adc
pop
sub
jge
addr16
inc
out
mov
jmp
push
cli
mov
push
sbb
shr
pop
push
cmpsl
ret
popa
pop
adc
and
imul
cmp
cs
mov
mov
fisubrs
xchg
das
jecxz
sbb
or
lods
stos
andl
mov
ljmp
es
xor
xor
imul
jge
or
mov
xchg
push
push
adc
mov
aad
mov
test
push
fwait
inc
mov
les
lahf
std
es
cmp
cmp
cs
jno
je
iret
and
mov
rol
out
out
push
or
cmp
push
and
fistps
lret
pushf
xor
xor
push
mov
xchg
pop
fcomps
xchg
out
test
jl
lock
dec
sbb
jbe
lds
outsl
fdivr
xchg
in
xchg
lahf
jb
pop
sub
into
mov
pusha
add
popf
cltd
fidivl
test
xlat
insl
scas
decb
addr16
push
cmp
push
andl
in
je
xor
xor
stos
hlt
loopne
or
out
cmp
lea
cmc
inc
inc
dec
push
dec
lods
sti
dec
push
aas
fsubrp
sbb
pop
fsubl
mov
adc
lahf
inc
mov
mov
and
adc
and
js
adc
les
pop
add
push
aad
loop
push
dec
sbb
scas
push
dec
mov
mov
mov
and
out
hlt
dec
jl
pop
or
mov
and
add
sbb
jns
rcl
dec
out
roll
jne
xor
shlb
adc
aad
stos
sti
in
sub
inc
stos
and
pop
jmp
data16
xor
stos
mov
jae
stc
pusha
cmp
adc
sbbl
dec
movsl
jge
fs
stc
pop
loopnew
push
jnp
out
mov
leave
jns
adc
dec
xchg
jae
mov
hlt
testb
pop
shlb
sub
in
mov
iret
mov
cmpsb
in
cmpl
sub
lcall
les
cmp
gs
je
fsts
mov
mov
jp
pop
shrl
mov
sbb
es
jge
push
cmp
or
cmp
mov
xchg
inc
adc
xchg
push
jle
stc
adc
and
jne
out
movsb
pop
cmp
ret
sub
pop
les
dec
jecxz
push
insb
pop
mov
stc
push
push
and
imul
in
sbb
cmp
cli
loop
or
mov
xor
enter
dec
pop
scas
loope
mov
sub
jge
jg
dec
data16
call
and
and
add
or
sbb
push
lret
int3
push
inc
pushf
test
cmp
and
adc
xor
inc
loope
xlat
inc
out
or
pop
mov
mov
call
dec
add
fsubs
inc
pusha
ror
dec
movsl
xlat
jmp
jno
mov
add
and
notl
lock
jns
mov
mov
xchg
pushw
imul
push
imul
xor
sub
dec
sbb
sbb
jno
addr16
jns
icebp
pop
lcall
jp
sbb
cmpsl
push
mov
les
rorb
ljmp
push
mov
inc
mov
or
sbb
push
test
pop
cmc
push
or
aaa
mov
pop
mov
mov
mov
mov
xchg
jmp
or
shll
inc
sub
loop
leave
sub
inc
fisubl
add
pop
inc
lret
mov
or
cmp
scas
mov
dec
push
imul
xchg
out
mov
dec
out
xchg
adc
out
imul
add
fmuls
mov
sub
test
mov
add
repnz
push
icebp
sarb
into
movsb
xchg
sbb
aaa
imul
dec
xchg
mov
outsl
sbb
sbb
movsl
cmp
sbb
xor
int3
rcll
incl
cmpsl
daa
dec
xchg
js
mov
push
mov
xor
imul
cmpsb
sbb
xorl
xor
cmpl
xlat
mov
jb
add
aad
fsubs
inc
int
scas
mov
mov
dec
sbb
dec
jle
pop
xor
fdivr
push
xor
pop
mov
cli
pop
pop
mov
mov
movsb
dec
adcb
push
adc
or
jp
data16
imul
mov
mov
fldcw
jp
push
xchg
rclb
movsl
mov
mulb
mov
mov
mov
stos
cmpl
push
inc
push
pop
or
sub
xchg
fisttpl
mov
inc
fistps
xchg
test
in
mov
mov
dec
push
les
jl
repnz
lods
cmp
push
mov
mov
and
mov
daa
test
sub
jne
test
jnp
leave
sbb
aam
decb
out
das
pop
iret
lret
mov
in
mov
and
out
mov
and
inc
jle
dec
or
or
lods
jecxz
int
scas
clc
sbb
nop
mov
pop
cmc
push
pop
or
sbb
xor
ret
insb
aaa
repz
push
test
outsb
les
sbb
mov
sbb
xor
lock
popa
mov
ret
push
mov
or
lahf
sub
dec
outsl
fmull
jbe
push
subl
loope
repz
mov
xchg
ljmp
mov
clc
mov
sbb
fcmovne
adc
jge
push
shll
daa
add
pop
dec
js
or
mov
add
and
push
movsb
stos
imul
sub
xor
xchg
xchg
lret
ljmp
test
imul
movsl
mov
mov
inc
clc
jns
inc
ljmp
repnz
lret
cmp
loop
mov
arpl
rorl
jo
in
lret
push
pop
adc
mov
jecxz
pop
push
and
and
cmp
pop
popf
cmpsb
sub
push
dec
in
mov
lds
lods
jg
xchg
rcl
inc
nop
ja
je
adc
nop
int
mov
xlat
push
cmp
lods
push
cwtl
icebp
push
sti
pop
pop
in
and
push
mov
pop
pop
sbb
shl
add
lcall
scas
sti
fidivs
cmp
and
mov
cmpb
pop
pop
xor
jne
lcall
enter
enter
gs
mov
mov
mov
xor
jbe
lock
addl
cwtl
jae
test
sub
loopne
add
xor
pop
cmpsb
xchg
enter
mov
inc
test
pop
jae
sti
mov
lock
or
cli
or
leave
repnz
jne
pop
idivb
ds
popa
jmp
and
sub
push
imul
dec
sub
dec
push
sbb
jb
xchg
xchg
dec
or
and
test
movsl
ret
lret
outsb
outsb
cli
sub
xor
lcall
adc
insb
push
fwait
insl
pusha
roll
addr16
test
loope
pop
mov
sbb
dec
or
inc
pop
ds
mov
mov
scas
mov
pop
testb
sarb
dec
mov
mov
jp
mov
xor
jecxz
loope
es
rcll
insb
sbb
xor
cmp
test
repz
xor
fcmovb
lds
mov
jg
cltd
mov
or
sub
imul
cld
popa
movsb
push
xchg
mov
insb
xchg
dec
imul
adc
mov
sub
lds
xorl
into
sub
fsts
adc
test
adc
add
jo
push
mov
dec
lock
cli
add
and
fadds
adc
sub
mov
ja
and
repnz
jmp
stos
ret
out
ds
mov
mov
xchg
idivl
sub
fisubrs
subl
ret
loope
cmp
sahf
xchg
mov
xor
or
mov
out
pop
sub
xchg
adc
or
sub
outsb
pop
call
mul
xlat
addr16
stos
pop
mov
pop
mov
or
fnsave
jle
add
or
dec
loope
es
shll
cmpsb
pushf
cmc
push
adc
jbe
gs
mov
pop
jno
cmpsb
pusha
sbb
rorb
jmp
repnz
lds
mov
cmp
loope
out
jo
mov
adc
inc
leave
out
mov
xchg
movsl
aam
lret
stos
scas
or
fs
in
outsl
fwait
jo
test
cmp
cmpsl
jge
add
inc
jge
cmpsl
fwait
cmp
jb
push
push
push
push
sbb
cmp
or
dec
cmpsl
lods
sub
add
nop
dec
enter
imul
pop
xchg
and
mov
jp
add
lods
fs
daa
imul
mov
pop
jecxz
xchg
sete
inc
sti
push
aam
xor
aaa
jo
mov
das
les
out
cmp
fcoml
mov
adc
bound
sub
mov
mov
dec
out
xor
mov
mov
aas
push
stos
pop
xor
push
jge
pop
mov
pop
es
repnz
push
mov
xchg
testb
daa
mov
mov
loope
mov
insl
sbb
fwait
pushf
cltd
mov
cld
rcll
sbb
mov
test
cmp
dec
add
xor
xor
fldenv
push
mov
inc
or
jae
or
int3
insl
and
jbe
scas
lods
xor
cmc
add
jb
jmp
sub
mov
inc
pop
sti
cs
push
lcall
xchg
ljmp
jb
cmp
out
sub
aaa
mov
rolb
jb
push
xor
dec
push
test
lods
adc
in
les
adc
dec
mov
sbb
dec
jg
ljmp
rcrl
mov
lods
adc
cmpsb
ret
hlt
imul
cmp
add
lahf
jge
xor
das
jno
popf
mov
out
ds
pusha
and
xchg
fisttpl
adcl
jle
js
sahf
gs
popa
in
shlb
mov
fs
xchg
xchg
fimull
mov
add
fwait
mov
jecxz
pop
inc
jnp
adc
push
xchg
push
xchg
in
fdivl
mov
push
cmc
pop
inc
mov
fistpl
and
sub
xchg
xchg
inc
jo
lods
js
xchg
xorl
sub
in
xchg
inc
dec
xorl
sbb
xchg
outsl
sub
add
push
inc
xorb
mov
popa
sub
imul
add
cmpsl
repz
ds
push
test
inc
mov
mov
sub
and
aas
adc
mov
inc
mov
or
ret
push
je
nop
lods
pop
sub
imul
mov
mov
xor
pop
dec
inc
inc
out
cmpsb
insb
bound
or
cmp
es
addl
sub
je
mov
lret
pop
repnz
cmp
and
sub
out
call
cmp
mov
push
aad
js
xor
movsb
jb
clc
inc
push
in
jecxz
into
mov
sbb
mov
fwait
adc
enter
ret
lret
xchg
ds
mov
push
cltd
or
xor
mov
mov
inc
orb
or
fisttpl
repz
cli
rcrb
add
cmp
aad
dec
and
fisttpl
ljmp
add
mov
or
pop
pop
lcall
idivb
daa
cmp
in
outsl
std
stos
rcl
adc
pop
adc
loopne
pop
test
sub
mov
rcrb
lcall
ret
push
pop
repz
repz
xchg
xlat
dec
mov
fnstcw
enter
and
sub
inc
pop
lcall
jl
loopne
cwtl
into
adc
mov
outsl
sarb
sbb
mov
mov
lret
pop
add
and
cmpsl
and
jle
cmp
mov
inc
push
mov
in
add
push
test
pop
xchg
jo
pop
aaa
mov
mov
sbb
jne
sbb
lahf
lds
xor
push
adc
push
je
mov
call
dec
insl
mov
rclb
xor
xchg
inc
jo
xchg
or
adc
in
mov
dec
push
subb
hlt
ret
insb
outsl
xor
ficoms
mov
cmp
jmp
imul
jae
pop
and
mov
mov
xchg
movsl
in
jb
push
mov
adc
popf
adc
add
push
enter
push
sub
jge
rorb
ljmp
and
das
insl
and
cmp
xchg
loop
fwait
addr16
inc
aad
push
and
outsl
xor
scas
les
ds
or
test
iret
or
cltd
test
dec
loope
les
stc
in
or
lahf
adc
mov
fimull
mov
imul
leave
into
scas
es
pop
mov
mov
xchg
lahf
outsl
sub
xor
xchg
dec
fdivp
push
loope
out
mov
sti
xor
ret
cmpsl
cmp
leave
js
stos
or
fwait
mov
mov
pop
out
xchg
addl
and
in
sbb
sti
cmp
sti
push
cld
fs
or
fucomi
cli
fcmovnbe
imul
lahf
outsl
push
aam
push
clc
xchg
push
repz
mov
aam
fnstcw
xor
scas
lret
test
add
sub
addr16
out
xor
xlat
imul
faddl
xchg
push
test
insb
xchg
out
mov
push
fbld
mov
and
call
lods
and
mov
jo
mov
mov
scas
xor
mov
mov
xchg
roll
fdivs
in
in
aaa
jmp
mov
scas
pop
ss
sbb
insb
cs
loop
push
mov
xlat
fnstsw
fstpt
pop
imul
dec
jmp
inc
cmpsl
sbb
rcrb
adc
out
inc
stos
sarb
jmp
and
rep
jb
adc
das
and
out
jge
inc
sub
sbb
bound
xor
faddp
add
jae
pop
cmp
mov
test
loop
or
jge
dec
dec
mov
push
rolb
sbb
dec
push
xor
inc
loop
jp
add
aad
and
sti
icebp
sub
stos
outsb
mov
loope
adc
cmp
ds
sti
xchg
pop
sahf
add
xchg
sub
lea
sub
sbb
inc
clc
out
xchg
mov
cmp
inc
dec
cmp
repz
sbb
insl
dec
aad
dec
xor
orb
inc
inc
sahf
add
mov
jecxz
dec
mov
xor
mov
cld
xor
cmp
mov
xor
sub
outsl
jle,pn
mov
fisttps
pop
and
cmp
scas
mov
jbe
jae
inc
jnp
inc
mov
jl
mov
stos
sbb
mov
sti
and
pop
nop
xchg
add
dec
adc
testb
jp
rcll
adc
sahf
cmpb
mov
adc
sub
add
pushf
es
dec
cmp
fidivl
mov
inc
leave
fisubs
scas
xchg
adc
loope
cmpsb
inc
cltd
xchg
call
or
pusha
sbb
scas
out
jmp
in
inc
lods
pusha
shll
inc
inc
push
jns
testl
dec
enter
pop
inc
fsts
lahf
jle
mov
pusha
es
dec
test
cld
call
inc
inc
and
ja
mov
xor
and
mov
dec
push
cwtl
or
repz
mov
sbb
ret
outsl
mov
subb
sub
jne
xchg
das
and
andb
shll
ret
dec
test
dec
inc
je
mov
jmp
push
cmpsl
dec
ret
or
ljmp
push
inc
repz
mov
pop
dec
in
push
jnp
ja
and
lret
jae
mov
pop
add
cli
and
or
push
jns
loop
cmpsb
mov
sub
sti
les
and
iret
fdivp
and
cmp
sbb
jne
int
cmp
add
push
xor
js
fs
jno
les
and
das
out
rcl
stc
and
jl
adcl
pusha
andl
insb
mov
sub
sub
inc
imul
pop
dec
adc
clc
lret
call
pop
push
jb
enter
push
cmp
push
add
pop
jge
shll
and
pop
fstpt
mov
imull
repz
sub
lcall
adc
fcmovbe
jb
pusha
add
or
or
lcall
lcall
add
pop
scas
pop
andb
pusha
sbb
add
int3
or
in
mov
repnz
inc
addr16
mov
and
xor
aas
mov
cmp
roll
adc
xorb
xor
or
lcall
or
sub
mov
movsl
inc
fists
fs
push
mov
shlb
stos
into
cltd
push
mov
push
in
mov
jns
sub
xchg
into
pop
inc
inc
pop
imul
jnp
push
dec
xchg
in
add
mov
cs
cli
pop
shl
sub
sbb
pop
or
fwait
clc
mov
mov
in
ret
icebp
pop
sbb
jnp
mov
mov
cmc
lcall
dec
ss
lret
outsb
push
push
adc
ja
je
inc
xor
std
adc
pop
mov
cmp
popf
mov
int3
ja
mov
sarl
insb
mulb
or
fisttps
std
mov
pop
sub
daa
adc
xchg
data16
mov
mov
push
repnz
jg
sbb
jmp
loope
xor
mov
sub
push
mov
inc
jge
pavgw
or
les
cmp
push
sbb
daa
push
stos
add
cwtl
je
jns
je
insb
sub
cmpsl
arpl
jl
test
enter
insb
rorl
pop
dec
shr
clc
xchg
xchg
push
sahf
mov
movb
not
addr16
push
and
and
mov
hlt
inc
mov
push
daa
dec
js
mov
cmp
mov
outsb
and
or
nop
pop
pop
xchg
lahf
adc
or
fisubs
push
je
js
out
mov
sub
adc
inc
mov
cmp
test
jbe
nop
loop
out
out
jnp
int
pusha
mov
xchg
mov
iret
push
sub
mov
das
ds
mov
jl
int3
xchg
fcmovnu
cld
shr
sbb
ficomps
aaa
dec
je
cmpl
jne
loop
add
adc
imul
int3
mov
adc
mov
xchg
mov
out
add
mov
ss
stc
aam
inc
popf
jle
push
mov
xchg
cmpsl
xor
push
aaa
test
push
push
xor
pop
testl
hlt
pop
lret
ds
mov
outsb
shlb
aas
out
stos
insb
adc
rorl
clc
test
subl
jbe
aaa
adc
xchg
mov
mov
pop
cmpsl
mov
mov
ss
xchg
pop
stos
mov
inc
mov
push
jnp
pop
push
je
out
loope
in
inc
push
inc
lods
jno
out
pop
cmpsl
std
xchg
out
pop
jo
add
sbb
mov
outsb
dec
shrl
mov
cmp
pushf
out
int3
aas
lret
adc
daa
jl
pop
cmp
jns
xchg
imul
fwait
ljmp
cmp
and
push
aaa
add
ja
loopne
xchg
into
and
movsl
mov
mov
cmp
daa
mov
insl
push
jecxz
cmc
cmpsl
shll
in
cli
dec
jl
fisubrs
lret
repnz
les
and
push
mov
add
sahf
inc
mov
jae
add
filds
in
push
xchg
popf
add
mov
incl
test
xchg
iret
add
jne
jge
sbbl
sbb
mov
mov
dec
imul
sbb
ljmp
push
jmp
loop
cmp
mov
mov
jb
sub
hlt
cmp
and
repnz
insl
push
stos
aam
push
aam
dec
add
sarb
cmpsb
mov
xor
nop
pop
sbb
xor
mov
insl
fwait
sub
loop
jbe
push
out
xchg
xchg
fisubrl
or
lret
jo
jne
in
jp
in
iret
mov
sahf
push
les
sbb
push
or
mov
dec
scas
mov
movsl
inc
aas
sub
push
add
cltd
and
adc
jmp
cli
xor
cmpsl
cmp
lods
das
fstpt
movsl
sbb
pop
pusha
mov
xor
ficoms
sbb
enter
push
pop
sub
pop
dec
jbe
xlat
mull
cmpl
clc
adc
pop
fiaddl
add
cmp
sbb
call
sub
loopne
sbb
hlt
test
imul
test
mov
mov
ret
mov
adc
fsubp
scas
dec
popf
add
mov
je
fwait
mov
aad
sbb
shrl
shlb
cmpsb
jne
mov
stos
sub
sub
adc
bound
pop
lcall
lret
sub
add
inc
sub
push
xchg
sbb
outsb
data16
and
jb
jmp
mov
ljmp
fpatan
out
stos
stc
je
jnp,pn
push
ljmp
aas
das
mov
test
cli
cmp
in
add
xchg
jp
xor
sub
cli
insl
or
cltd
xchg
shlb
mov
xchg
inc
in
mov
mov
daa
sbb
xchg
rol
cltd
adc
mov
jo
cli
nop
pop
inc
int
icebp
ret
and
adc
cmp
cltd
scas
xchg
in
push
add
add
fcompl
mov
mov
leave
pop
imul
xchg
cmpsl
out
repnz
sbb
je
popa
add
mov
outsl
xchg
mov
mov
or
faddl
mov
out
lods
inc
push
xchg
jns
or
pop
test
into
sahf
test
aaa
clc
xorb
jge
fcoml
psubw
andl
sbb
xor
adc
push
cmp
loop
rcrb
jb
jnp
pop
push
in
enter
inc
lock
pop
inc
lods
test
movsb
sbb
ljmp
imull
sub
movsb
jecxz
dec
pop
dec
pop
repnz
negb
inc
add
and
call
ja
sti
fisttps
ds
fisttpl
pop
add
repnz
add
inc
jge
scas
cmpsb
test
bound
mov
mov
push
lret
sarl
pop
xchg
sub
mov
stos
mov
sbb
outsb
mov
adc
arpl
jae
and
mov
out
std
sub
inc
or
jbe
in
push
add
test
in
xor
es
mov
xchg
nop
cmp
out
mov
xchg
test
mov
jb
gs
add
dec
mov
and
xchg
leave
js
flds
into
sbb
ja
jb
sub
dec
lea
testb
sub
xor
insl
in
dec
or
out
xchg
nop
pusha
insb
pushf
bound
pusha
sbb
sbb
lahf
xor
cmp
xchg
mov
fidivs
mov
cmpsl
imul
pop
mov
cmp
ds
jg
fs
rclb
leave
in
jge
mov
mov
xorl
out
xor
adc
xor
adc
repnz
daa
mov
mov
jnp
dec
fists
push
mov
scas
sbb
jmp
aas
repnz
xor
add
or
cmp
sub
xchg
sub
clc
inc
mov
jns
mov
xor
adc
mov
fcmovnu
sbb
fists
push
scas
jne
fdivs
lret
pop
push
dec
and
mov
sbb
xor
ja
xor
push
repnz
insb
jne
aas
es
cmp
xchg
test
add
lods
lods
sub
pop
jg
sub
pop
test
adc
jae
add
adc
lds
addb
sti
sahf
ja
lcallw
mov
mov
mov
sahf
push
push
mov
and
dec
stc
out
xor
xchg
push
xor
xchg
pop
mov
or
xlat
xchg
xor
inc
push
sub
in
jmp
adc
dec
cmp
fildll
mov
xor
mov
jns
in
xchg
out
xchg
mov
adc
pop
dec
int
jg
inc
or
popa
scas
stos
jmp
loopne
cld
xchg
fiadds
sbbl
pop
push
sbb
push
lods
xlat
mov
push
icebp
inc
fsubs
add
jnp
xor
jl
mov
fsts
icebp
add
inc
mov
lock
pushf
scas
jp
gs
pop
add
hlt
ror
call
pop
mov
test
nop
lret
iret
out
shlb
push
in
filds
pop
addr16
xchg
push
sub
out
cmpsb
scas
mov
push
mov
notb
or
nop
mov
pop
insb
outsb
push
fiadds
adc
in
test
pop
xchg
push
imul
lods
xor
or
jmp
sbb
xchg
loop
leave
mov
add
insb
out
aad
shrb
in
outsl
pop
mov
mov
pusha
push
push
insb
mov
fcomi
pop
add
call
dec
faddl
iret
sbb
sbb
movsb
pusha
inc
mov
adc
outsl
repnz
clc
mov
leave
sbb
shll
mov
test
lods
sbb
inc
and
mov
out
inc
mov
ret
mov
push
leave
fildl
lea
sahf
mov
xchg
or
add
sahf
add
add
in
and
stc
popa
mov
mov
and
push
sbb
sbb
cltd
shll
adc
popa
jo
cmp
pop
sub
iret
pop
inc
call
push
test
pop
xchg
mov
dec
hlt
adc
push
bound
mov
and
jecxz
sub
xchg
or
xchg
jle
repz
fsubrs
mov
out
mov
js
mov
xor
stos
inc
add
fucomp
test
les
mov
mov
stos
out
add
push
push
push
xchg
repz
loop
popf
jg
sub
pop
insb
shl
pusha
jmp
cld
adc
push
jge
shll
jmp
cli
repnz
outsl
cmp
xor
inc
mov
xor
push
xor
cmp
imul
loop
fcomp
gs
rclb
xor
jecxz
pop
ds
aaa
lahf
jo
test
addr16
test
mov
outsl
insb
stc
fistpll
or
push
aam
insb
xor
sbb
jno
and
push
mov
das
insb
test
fwait
lcall
ljmp
dec
sbb
in
pop
push
jae
jmp
sub
jbe
or
push
cmp
dec
push
and
sub
addl
aam
or
xchg
lcall
mov
shl
fcmovnb
xchg
jno
sbb
sbb
pusha
mov
jl
xor
cltd
sub
orl
mov
sbb
mov
sub
popl
xlat
into
mov
cs
cmp
lods
int3
jnp
es
xchg
push
mov
or
xor
fnstsw
pop
rcr
push
mov
mov
dec
js
aad
loope
je
cmpsb
lock
adc
loope
leave
insb
push
sub
pop
mov
rorl
jbe
sub
popf
mov
lock
rcll
test
sub
mov
fisubs
lret
fnstsw
push
cmp
testl
mov
leave
sbb
std
insb
addr16
xchg
dec
popa
adcl
aad
jl
dec
mov
dec
xor
mov
xor
ja
out
mov
pop
or
sub
cmp
or
add
lcall
je
sahf
push
inc
mov
pushf
jnp
ror
mov
mov
es
outsl
or
test
stc
lock
sub
out
lods
cmp
lret
jnp
jmp
ror
stos
sbb
mov
rolb
inc
pop
lods
push
movsb
popf
ja
popf
fistl
sub
outsb
rol
int3
mov
dec
mov
aad
aas
cmc
push
xchg
jne
test
mov
orl
rclb
jbe
jne
jae
clc
sub
loop
sub
lcall
in
push
mov
jp
test
enter
push
movsl
cli
inc
out
push
movaps
fisubs
in
fsubrp
sub
movsb
shll
pop
std
and
jo
outsb
add
cmpsb
leave
stos
mov
lret
jno
cltd
jno
out
scas
call
sub
or
push
mov
mov
add
imul
adc
sbb
sahf
icebp
mov
mov
sbb
jae
push
in
jbe
cmp
sub
cmp
push
ja
cmp
fistps
xor
push
cmpsb
fisttps
sbb
mov
lods
shlb
or
or
mov
out
ja
fistps
lret
adc
int
andb
cmpsl
cli
popa
cmp
cmpsb
push
leave
ficoml
pop
inc
xchg
loopne
lds
xor
mov
in
sarb
push
dec
mov
in
push
insb
repz
fadds
cmc
iret
pop
mov
mov
ret
and
insl
sbb
xchg
add
push
jle
fwait
dec
jmp
xor
ret
daa
inc
inc
shld
std
rcr
mov
int3
and
sub
inc
mov
shl
cmc
adc
mov
mov
adc
dec
cmp
mov
enter
std
mov
mov
addr16
in
jno
scas
js
lods
filds
inc
lcall
outsb
mov
pusha
mov
inc
mov
sbb
orl
repz
int3
push
and
xor
add
or
sbb
cmp
arpl
or
sub
dec
inc
fimull
pop
test
adc
clc
or
jmp
scas
add
das
mov
movb
push
je
mul
jae
icebp
jnp
cmp
popf
addr16
lods
repz
scas
jle
lret
jne
out
out
dec
loope
mov
sahf
xchg
out
add
enter
daa
test
repz
loopne
jae
jb
or
lods
jns
mov
into
jl
cmp
aas
jne
fsub
xor
jl
mov
mov
mov
sahf
aas
or
add
jno
add
int3
vpmovmskb
pusha
dec
jo
test
jns
dec
xchg
jmp
jbe
mov
das
ljmp
test
jnp
xchg
sub
mov
mov
test
call
in
fwait
jnp
movsl
filds
xchg
shrl
mov
inc
outsl
movsb
jecxz
outsb
pop
push
mov
lahf
movsl
adc
or
dec
lretw
js
incl
insl
sbb
leave
xchg
insb
in
pop
add
or
les
outsb
orb
cmpsl
push
lods
xchg
inc
jmp
test
icebp
stc
jp
push
nop
jbe
pop
rolb
fimull
imul
add
aas
test
stos
pushl
adc
aam
mov
sub
lods
lret
rorl
push
movsb
or
pop
hlt
push
push
loope
and
adc
testl
sbb
mov
fstpl
repnz
dec
sbb
mov
jo
pop
cmp
pop
adc
stc
scas
lods
std
in
popf
icebp
std
mov
pop
and
int3
std
fsub
mov
dec
popf
push
xor
iret
std
popa
xchg
inc
sbb
xchg
inc
ja
lret
in
cmpb
mov
iret
mov
mov
das
xchg
dec
dec
packuswb
das
es
int
mov
adc
pop
je
sbb
insb
xlat
push
inc
inc
mov
mov
push
loopne
sti
cmpl
xchg
push
popf
bound
inc
popf
lret
pop
insl
dec
cmp
movsb
jae
lea
out
pop
jecxz
std
ret
outsb
add
data16
add
call
fsts
cs
mov
lcall
adc
test
loop
repnz
pop
movsl
mov
xchg
out
mov
add
lds
flds
push
ja
aad
lret
arpl
xor
add
add
xor
sbb
fbstp
jecxz
test
and
lds
xchg
xchg
push
test
scas
xchg
cmpsb
mov
test
ret
sbb
in
mov
fcomi
xlat
mov
lret
loop
sub
aas
adc
add
sbbb
stos
xchg
jge
cmc
sbb
arpl
aad
add
cwtl
jl
lret
scas
mov
sub
mov
loope
or
inc
insl
lahf
lret
push
aas
out
inc
mov
pop
xor
sbb
cld
cmp
sbb
xchg
and
test
mov
mov
push
add
lea
dec
test
out
mov
lcall
cwtl
test
ljmp
mov
mov
cmp
outsl
push
cltd
push
xor
cmpsl
stos
and
xor
mov
push
mov
add
pop
xchg
push
sub
cmpsb
mov
sbb
push
jle
xor
xchg
pop
xor
push
popa
mov
stos
dec
sbb
insl
cmp
pop
pushf
loop
xor
or
cmp
out
clc
repnz
lods
xor
xor
and
mov
repz
xor
jl
and
iret
mov
or
outsb
mov
pop
lret
jb
sub
adc
mov
and
cld
bound
jle
xor
pusha
push
and
imul
pop
imul
out
mov
cmpsl
jl
mov
notb
and
jmp
jne
cmpsl
mov
mov
push
sti
xchg
xchg
push
cmpsl
sti
add
push
mov
and
cmpsl
lock
fmul
dec
dec
inc
xchg
jae
mov
and
je
dec
push
jl
cs
xor
jno
adc
pop
rorb
stos
jne
fidivrs
cs
inc
ror
out
dec
or
loopne
popf
mov
outsb
inc
mov
out
mov
jg
mov
mov
arpl
sub
push
hlt
push
sub
push
jbe
fwait
jnp
inc
mov
or
aad
jnp
lcall
mov
mov
xchg
rorb
test
sbb
mov
out
jae
xor
mov
cmpsb
cli
and
movb
lock
sbbl
xchg
out
jnp
mov
xlat
pop
mov
and
dec
and
xchg
xchg
jge
mov
sbbb
fstps
xor
nop
daa
xchg
das
xchg
mov
dec
adc
mov
and
mov
je
sti
lahf
or
pop
jge
xor
test
inc
in
sub
add
ret
aaa
paddb
add
lods
xchg
testl
or
jnp
push
sbb
mov
pusha
and
les
lret
testb
out
sahf
out
mov
inc
mov
test
popf
stos
rcrl
sub
sbb
inc
scas
sub
rorl
mov
sbb
push
dec
enter
cmp
shll
in
dec
adc
ljmp
jns
sbb
das
push
stc
jb
inc
out
and
push
lock
push
lahf
push
fs
and
jbe
dec
in
xor
out
mov
sub
push
and
inc
inc
pop
std
scas
pop
test
or
mov
loop
lods
and
testl
add
mov
push
mov
xor
inc
daa
xlat
sbb
jae
mov
mov
lret
xchg
ss
inc
jnp
mov
adc
push
imul
inc
imul
pop
mov
jbe
dec
in
jg
cli
enter
mov
jne
ds
daa
je
mov
pushf
cmp
cmpsl
lret
push
mov
cltd
sub
dec
sub
sbb
or
sbbb
or
dec
mov
fwait
andb
lea
and
imul
jg
xchg
sahf
jno
pop
pusha
sub
xlat
add
jp
lret
fcomp
pushf
jae
addr16
mov
sub
incl
out
inc
sub
mov
xchg
jb
lcall
cmpsl
in
cmp
mov
and
movsl
js
add
outsl
aas
push
pop
adc
loop
dec
jb
std
sub
cmp
mov
and
jae
adc
and
adc
rclb
sub
push
and
xor
mov
hlt
jl
outsb
push
addr16
cmp
mov
shrb
scas
mov
sbb
jae
mov
inc
push
mov
dec
jl
inc
push
jno
sbb
pop
std
pop
cmp
or
dec
outsb
cld
fsubrs
xor
addb
mov
inc
sahf
xchg
xchg
pop
xchg
push
xorb
dec
ret
fdivl
lods
shrb
jb
sbb
or
mov
push
mov
cmc
leave
shrl
xor
fwait
rcr
ret
pop
cmp
jo
dec
jmp
into
jp
shl
push
cmp
repnz
dec
cli
fucom
loop
dec
sbb
sbb
mov
mov
mov
inc
mov
je
jp
call
cmp
sbb
dec
xchg
xor
pop
pop
aam
xor
jb
xchg
dec
repz
sub
xor
fwait
xor
sti
mov
xchg
inc
rolb
in
outsl
mov
cmp
addr16
adc
pusha
add
push
pop
inc
mov
dec
imul
or
jmp
mov
ja
negl
fistpll
cmp
push
pop
cmp
sbb
enter
cmp
mov
add
nop
jp
inc
sub
aaa
je
dec
mov
inc
push
pop
adc
mov
push
inc
jnp
sbb
mov
mov
in
or
mov
mov
sbb
mov
sbb
int3
icebp
or
add
mov
xchg
pop
call
push
inc
dec
lcall
push
or
jge
xchg
cmpsl
pop
les
into
pop
popf
cmp
ss
add
sub
mov
mov
push
sti
inc
xchg
outsb
or
jb
out
sbb
xor
inc
xchg
incl
iret
add
imul
add
jne
cwtl
rcrl
pop
test
jle
sbb
fisubrs
sti
nop
ds
lret
shlb
orl
sub
cmp
sbb
gs
les
clc
out
je
add
call
lock
clc
sub
jbe
ret
and
or
xor
cld
ficompl
enter
jne
dec
js
xor
rolb
xchg
push
add
push
addl
mov
lea
lods
xchg
add
and
stos
xchg
stos
jecxz
imul
pop
mov
and
inc
xor
arpl
mov
ret
fbld
mov
cmpsl
cli
repz
lret
push
pushf
mov
aaa
scas
dec
mov
cmpsl
cmpsl
pop
mov
mov
sub
loop
mov
jo
add
cli
pushf
pop
test
cld
in
lahf
mov
or
cltd
and
or
inc
xchg
lds
jne
outsl
cs
ret
cwtl
aas
sti
ljmp
sbb
inc
pop
cltd
push
aaa
mov
adc
mov
incb
rolb
xchg
scas
out
ficomps
xor
iret
or
xchg
xchg
inc
mov
pop
lea
lret
fidivl
insl
test
sub
jns
inc
cmp
inc
hlt
loop
loope
call
push
pop
jge
or
xlat
imul
mov
cmp
dec
sub
insl
mov
push
idiv
mov
sar
inc
stos
xchg
sbb
movsl
mov
mov
mov
xor
pop
test
ficoml
xchg
adc
inc
inc
outsb
fcoms
insl
inc
rorb
xchg
xchg
inc
mov
xchg
popa
pop
cltd
cmpsl
in
dec
jno
movsb
je
iret
mov
clc
imul
notl
mov
fbld
cmp
shll
adcl
arpl
lds
and
xor
jmp
dec
inc
xor
fs
cmp
xchg
aas
push
add
jg
repz
les
clc
aas
addr16
into
fs
xlat
push
jnp
rcr
xor
pop
or
aaa
and
and
xor
push
jae
out
nop
or
jg
repz
push
test
rolb
pusha
mov
push
icebp
or
cmp
test
lcall
push
pusha
shr
push
loop
add
outsl
iret
int3
and
dec
push
ret
fdivl
outsl
jmp
cmpb
mov
loope
sbb
cmp
pop
es
mov
or
fisubrs
sar
mov
insl
cmc
or
cmpsl
jp
adc
and
testl
cli
js
movsb
mov
cmpsb
aad
jo
jb
imul
jg
mov
mov
test
insl
divl
sub
add
dec
mov
xchg
loope
popf
mov
subb
xor
psubusb
loop
and
lds
and
data16
sbb
test
push
adc
fmull
cmp
cmc
fbstp
jo
das
enter
inc
pop
outsb
xor
out
bound
insl
repnz
test
and
jb
mov
mov
mov
xchg
fwait
push
mov
mov
std
pop
jbe
lret
addr16
fdivrl
jbe
dec
cmp
cmc
dec
movsb
notb
adc
fstps
out
pop
push
jnp
lods
call
add
dec
je
dec
fldl
lods
enter
aad
mov
xchg
gs
jg
mov
movsb
into
sti
fsubrs
dec
jg
cmp
rolb
popf
lods
lret
sub
je
rclb
and
in
inc
pushf
fbstp
adc
fdivrs
movsb
mov
push
or
jmp
adc
dec
xchg
daa
and
out
loope
and
pop
dec
out
jns
lret
cmpl
push
or
clc
xchg
push
mov
xchg
roll
and
sub
mov
jne
fcomp
add
pop
lea
ret
cmp
or
mov
cs
adc
or
lods
and
inc
jbe
dec
mov
pop
inc
iret
mov
scas
lea
repz
sahf
push
cmpsb
test
out
jo
push
cmp
in
mov
add
addr16
aas
and
cmp
sub
jl
xlat
ror
or
ds
stos
adcl
jb
lcall
je
pop
mov
inc
std
setg
xor
fidivrl
mov
jbe
mov
add
loope
test
dec
jge
inc
jo
leave
aad
scas
jae
cld
aam
mov
push
mov
movsl
filds
dec
data16
jb
pop
mov
cmp
dec
jnp
inc
les
xlat
pop
lahf
mov
out
shr
cmp
popa
mov
aad
iret
jno
jge
mov
shrb
inc
xlat
jmp
ret
imul
sahf
ljmp
lahf
sub
popa
inc
add
adc
mov
jmp
jg
jecxz
packuswb
adc
or
mov
lcall
loop
xor
xor
mov
lock
mov
pop
pop
jecxz
pop
dec
jmp
shrl
xlat
push
aad
push
shll
call
dec
inc
add
ja
sub
pop
xor
or
cli
dec
sbb
jne
mov
in
test
xchg
popl
pop
pushf
xchg
fisttpll
ljmp
mov
cmp
stc
test
push
stc
push
xor
lcall
xchg
pusha
gs
cmp
xchg
mov
ret
inc
push
sbb
lahf
pushf
push
clc
mov
pop
jb
sub
mov
mov
addl
push
out
sub
mov
sub
add
pop
leave
icebp
adc
jle
jne
xlat
or
aad
in
sti
out
test
stc
xchg
jl
adc
mov
pop
fisubs
gs
xchg
cmc
outsl
mov
jle
repnz
xlat
pop
sub
cli
jne
mov
lcall
mov
stc
mov
aam
jnp
in
cmp
cmp
andb
mov
pusha
mov
pusha
jb
dec
test
mov
int
out
hlt
jns
mov
pushl
xlat
lahf
push
push
cmp
hlt
or
push
movsb
testb
jbe
movsl
xor
neg
cmp
rolb
sbb
in
test
arpl
jmp
adc
and
jns
in
movsb
hlt
aad
lret
lds
add
inc
enter
fs
in
fidivrl
scas
mov
mov
cmp
ja
insl
hlt
sub
sbb
xchg
inc
sbb
add
xchg
adc
test
loope
in
sti
lods
pop
test
icebp
jns
mov
psubsb
loope
push
cmp
pop
mov
xor
push
or
outsl
into
data16
fistpl
push
mov
aad
jecxz
mov
xor
inc
rcr
out
lds
sub
movsl
xlat
cli
cmp
cmp
pop
stos
rolb
sbb
cmp
mov
push
cmp
aad
jecxz
mov
and
xor
lods
pop
jp
shl
lods
and
mov
cmpb
aam
sti
xchg
and
mov
lods
pusha
cwtl
sti
pfadd
mov
cs
cmc
jle
push
inc
fcomip
test
cli
pushf
popa
pushf
pop
addr16
fbld
inc
mov
add
lods
jae
js
fistl
mov
xor
es
insb
in
pushf
pusha
push
cmpsl
lock
stos
xchg
pusha
stos
enter
imul
loope
insl
xlat
cmpsl
jb
popf
enter
fsts
cmc
push
cltd
sub
mov
out
jbe
in
das
leave
sbb
leave
js
xchg
scas
dec
or
fxch
ljmp
sub
hlt
imul
jbe
and
insl
cltd
cmp
popa
add
jno
jno
test
lret
int3
and
std
insb
adc
js
les
popf
scas
pop
std
orl
testl
ja
ja
lcall
jnp
stc
xchg
lock
sub
ljmp
aaa
cmp
mov
jle
sbb
cmpsb
xchg
mov
xchg
dec
mov
sti
or
mov
ljmp
push
faddp
mov
hlt
pop
das
loop
lret
pop
frstpm(287
enter
fstp
insb
into
cmpsl
in
fisttpl
xchg
ret
push
aas
aaa
fisttps
jnp
inc
adc
push
jle
mov
inc
rcr
std
fwait
jg
rcrl
out
inc
adc
cli
mov
cmp
pushf
cmp
sbb
jae
pushf
je
xor
and
push
pop
add
push
inc
shlb
sbb
sub
mov
add
out
mov
test
adc
inc
ret
add
dec
lock
popa
rcrb
xchg
out
sub
or
hlt
int
dec
or
shl
or
push
push
dec
jnp
mov
mov
pop
xchg
or
jne
or
pop
fisubs
mov
jb
mov
cmpsl
xchg
mov
fisubl
jmp
je
pop
arpl
mov
xchg
cltd
testb
fs
mov
rcl
xor
pop
fildll
jle
popa
xchg
into
and
dec
enter
adc
imul
loope
jns
jl
xchg
push
xchg
inc
push
fsubl
cmp
mov
repnz
jp
gs
mov
fidivrl
packuswb
lret
daa
mov
mov
sub
sub
mov
push
insl
cmpsb
push
sahf
and
adc
mov
dec
xchg
xchg
push
ret
xor
stc
sbb
xchg
ja
push
pusha
addl
sbb
xor
adc
add
and
sub
daa
icebp
into
jns
push
push
jg
jl
lea
in
test
out
mov
xchg
cmc
sub
xchg
call
shl
mov
push
mov
out
icebp
pusha
xor
dec
pinsrw
mov
mov
aaa
add
sbb
mov
fs
cwtl
mov
mov
loopne
pop
mov
add
sub
leave
push
xor
push
push
movsb
insl
lcall
mov
or
addb
fwait
adc
int3
push
mov
iret
or
scas
push
xlat
pusha
lods
pushf
imul
lods
jae
mov
cmp
outsb
dec
outsb
xor
push
movsl
xchg
pop
dec
pop
sub
jae
push
push
daa
scas
cvtps2pd
push
xchg
xlat
or
or
out
or
pop
sub
dec
popf
dec
aam
lahf
sahf
mov
sbb
loopne
dec
mov
cltd
dec
test
mov
lahf
pusha
les
shrb
aam
or
stos
cmp
stos
stc
dec
and
insl
jnp
lds
icebp
xchg
dec
je
gs
jge
add
fisubs
stos
push
and
adc
and
cmc
mov
scas
or
lock
inc
lea
adc
scas
mov
imul
xor
lods
pop
ret
xchg
out
popf
pop
ja
ja
ja
jne
cmp
adc
lods
icebp
dec
fdivrs
dec
sub
cwtl
ljmp
mov
push
fldcw
jg
or
daa
jge
in
movups
mov
mov
repz
or
cmpsb
dec
into
xchg
hlt
and
and
fwait
andb
jl
loopne
and
je
stos
xchg
fistl
inc
inc
in
inc
mov
cmp
mov
cwtl
adc
xor
and
xchg
adc
xor
fcmovne
shll
mov
in
sub
in
and
mov
sbb
sahf
mov
rcrl
lret
xchg
dec
std
or
push
push
popa
aaa
jmp
das
shrb
sub
sbb
fst
les
sti
mov
ja
out
cmpsb
outsb
mov
iret
dec
fcmove
ja
inc
mov
inc
into
mov
sub
out
rcll
sub
mov
negb
mov
sub
push
popa
and
dec
test
and
dec
imull
out
ss
ret
outsl
sub
cltd
imul
fidivl
inc
mov
mov
test
popa
adc
xor
sbb
mov
mov
push
lret
pop
jmp
aam
cmp
mov
shrb
mov
mov
ljmp
out
call
scas
xchg
fmulp
das
out
adc
ljmp
sti
movhps
mov
xor
pop
add
and
ja
mov
inc
or
negb
or
stos
mov
jo
dec
pop
rcrl
or
sbb
icebp
test
mov
xchg
pop
test
add
mov
fs
xchg
mov
nop
mov
or
xchg
pusha
sbb
jecxz
xlat
ficoml
inc
aaa
mov
gs
stos
jne
sahf
or
lret
mov
enter
lcall
add
add
cld
push
std
sbb
add
pop
or
cs
xchg
inc
out
mov
incb
lds
inc
sahf
dec
cmpsl
adc
mov
movsb
adc
jl
mov
sbb
pmuludq
mov
jl
scas
cmp
push
or
sbb
jg
cwtl
push
adc
aaa
vaddsd
add
push
pop
inc
mov
ljmp
xchg
adc
movq
jge
ljmp
inc
push
lcall
data16
add
mov
push
inc
movsb
xor
jae
test
test
in
lods
in
mov
fists
mov
js
leave
hlt
mov
adc
dec
in
arpl
pop
mov
gs
mov
cltd
shl
sahf
mov
mov
adc
dec
dec
repnz
sub
mov
lods
pop
push
cld
test
repnz
xor
pop
testl
mov
jg
push
js
xchg
add
jae
xchg
repnz
out
das
mov
fnstcw
sub
pop
mov
xlat
cld
pop
adc
mov
fldt
into
pop
sbb
int
jl
daa
loope
shrl
cld
or
insl
das
nop
fadd
movsb
movsb
adc
pop
rcll
push
mov
outsl
inc
sub
jns
or
dec
mov
pop
xchg
sub
push
rclb
mov
out
lea
push
cmp
aam
addl
jb
and
adc
sbb
dec
and
scas
sub
je
cmc
push
xchg
and
mov
rcl
and
mov
dec
jo
out
cltd
mov
ffreep
mov
mov
aam
sub
mov
mov
fdivrs
sub
movsb
int3
and
shlb
sub
lcall
mov
in
aaa
xchg
dec
jl
xlat
js
xor
dec
push
mov
clc
xor
add
sbb
jbe
imulb
xor
mov
push
push
lea
mov
dec
mov
in
fwait
mov
test
xchg
stc
lret
dec
jl
inc
call
sti
loopne
loope
push
mov
sbb
mov
cmp
mov
outsl
add
aaa
shll
repz
and
xchg
pop
ljmp
neg
aaa
int
std
cmc
jae
fmul
loopne
push
faddl
iret
mov
sbb
lretw
fmull
pop
andl
mov
mov
insl
jmp
test
popl
aad
arpl
jnp
loop
or
pop
mov
mov
mov
cmpb
cli
lds
pop
shll
lds
sbb
lds
sbb
add
cmp
jns
sub
bound
mov
adc
dec
lret
jge
into
test
mov
xor
xor
popa
sbb
mov
adc
scas
cli
add
push
cwtl
aam
sbb
cmp
sub
dec
pusha
sbb
or
sahf
rclb
cmpsl
stos
orb
out
insl
faddl
cmp
jb
cltd
dec
incl
aam
sub
xchg
cmp
lahf
mov
int3
adc
hlt
jg
rcrl
xor
mov
data16
rcrl
add
aad
jne
pop
sti
and
test
icebp
int3
mov
lcall
xor
jle
lock
add
mov
fs
testl
in
xor
stc
xchg
adc
jno
xchg
sbb
popa
cmp
lea
xchg
adcb
xor
or
scas
pop
pop
adc
mov
ds
xlat
adc
int
xchg
dec
test
mov
fdivl
outsl
imulb
sarb
clc
pop
lods
dec
sub
scas
lods
pop
in
in
gs
add
mov
in
popf
int
sbb
mov
adc
stos
sbb
rol
addl
mov
subl
and
add
xchg
je
xchg
mov
xor
icebp
inc
push
fisubs
jbe
dec
pop
rcll
sahf
or
jbe
inc
mov
and
inc
mov
adc
push
iret
setbe
push
xor
jne
repnz
setl
imul
outsl
sub
mov
or
test
loope
adc
icebp
mov
sbb
in
sahf
xchg
lods
xchg
enter
icebp
je
jmp
or
mov
or
push
pop
jecxz
jne
dec
mov
cmp
jecxz
in
movsl
adc
add
cmp
pop
push
and
into
pop
dec
mov
lahf
mov
sbb
repz
mov
hlt
mov
loope
xor
fdivrl
add
bound
fldl
aas
mov
pop
orb
mov
test
into
sbb
fbld
lret
mov
dec
loope
xor
mov
inc
xchg
cmp
pop
xor
or
pop
cmpsl
mov
pop
mov
sbb
dec
in
mov
out
pop
xor
pop
shlb
sbb
imul
mov
jae
fistl
jg
movsl
mov
out
sub
scas
mulb
ja
fdiv
notb
push
and
data16
mov
mov
pop
xor
fsubl
lds
stos
bound
mov
jns
cmp
cmp
sub
sbb
push
lahf
cmp
sub
xlat
jbe
ret
mov
int
js
sbb
int
mov
xchg
scas
adc
push
sti
movsl
fldenv
std
push
stos
and
data16
sar
movsb
sub
adc
dec
cmpsl
clc
pop
fidivrs
add
incl
mov
dec
fwait
push
jle
sahf
add
es
test
inc
adc
shrl
dec
ficoml
jmp
pop
popf
jl
push
in
sub
cmpb
mov
pop
loope
rolb
mov
cmp
xchg
sti
or
fs
mov
mov
enter
imul
das
mov
sahf
enter
mov
or
repz
stos
out
iret
pop
test
mov
gs
je
or
lods
dec
mov
adc
out
fwait
clc
ljmp
xor
fildll
andl
aas
xchg
cmpsl
and
sub
pushf
inc
add
jb
cmp
in
pop
jns
lock
xchg
cmp
icebp
fisttpl
shlb
pop
sbb
fnsave
iret
cmp
negb
xlat
sbb
adc
xchg
add
cmp
inc
xor
cs
dec
mov
in
push
jge
add
xor
daa
jae
push
psubusb
mov
lret
fldln2
cmp
jg
ja
cltd
call
bswap
leave
mov
mulb
imul
cli
mov
in
repnz
lahf
adc
mov
call
std
sbb
jge
fstpt
pop
mov
xlat
sub
adc
mov
lret
cld
leave
adc
arpl
pop
sbb
xor
leave
fldenv
cmpsl
push
inc
sub
pop
xorb
lret
gs
sub
clc
mov
cwtl
das
or
mov
or
jmp
xchg
es
lret
add
arpl
cmp
or
mov
mov
jb
loop
or
lds
les
scas
std
and
cltd
mov
subl
enter
push
pushl
roll
gs
pop
xchg
out
sbb
adcb
and
sahf
push
jns
sbb
sub
adc
or
dec
jle
sub
stos
or
pop
repz
xchg
push
je
ret
lds
inc
loopne
xlat
icebp
scas
out
sub
xchg
cmpsb
xor
repz
das
cmpsb
mov
popa
loopne
mov
pushf
out
sub
push
pop
nop
dec
mov
stos
lcall
sub
xchg
jmp
cmp
or
push
inc
fldl
push
sti
push
stos
pop
scas
scas
adc
xchg
movsb
and
loop
sbb
nop
clc
cmp
adc
gs
into
mov
cmp
add
jbe
jne
cmp
mov
sub
ds
shlb
sbb
inc
mov
pop
jo
xor
dec
fnstsw
pop
add
ret
lret
push
mov
xor
lods
push
repz
mov
push
mov
dec
in
out
mov
dec
mov
pop
cli
or
ret
or
je
das
pop
jno
aam
add
xchg
inc
or
inc
cltd
mov
faddl
xor
mov
lock
mov
pop
inc
dec
jl
inc
adc
push
rcrl
aaa
ds
enter
lret
push
and
push
jp
and
dec
lods
pop
adc
push
stc
dec
rcl
sbbl
addr16
sub
add
xchg
in
call
xchg
jge
cmp
insb
cli
repz
cs
mov
stc
ret
fisubrl
notb
pop
ret
pushf
jp
inc
jecxz
add
add
int3
dec
and
loopne
std
mov
dec
into
inc
faddp
cmp
std
loopne
mov
xchg
stos
push
add
ljmp
pop
xor
or
cmp
test
cltd
cmpsl
pop
xchg
out
dec
movsb
xchg
inc
dec
fnsave
ret
adc
pop
stos
or
lret
out
jecxz
cmc
test
loop
daa
jle
mov
inc
in
sub
int3
jno
inc
push
nop
mov
lock
orb
stc
adc
inc
repz
sub
test
call
dec
in
add
sahf
cmp
inc
out
ja
loop
sub
imul
and
xor
or
out
mov
cmpsb
adc
in
cwtl
fstps
es
or
out
ja
or
aas
rcrl
add
dec
rorb
lret
jecxz
jg
sbb
arpl
and
outsb
mov
dec
jae
aad
test
jge
push
lcall
stos
add
mov
mov
bound
jo
push
xchg
push
mov
scas
sbb
pop
sahf
stos
mov
sub
out
sahf
xchg
mov
ds
push
xchg
inc
imul
pop
nop
cmc
jns
repnz
lods
push
out
arpl
pop
cmp
sub
or
push
imul
negl
data16
sub
cmp
inc
jmp
mov
sbb
and
dec
repnz
push
aad
lds
adc
lea
push
jnp
out
cmp
insb
pop
inc
pop
jmp
cmp
sub
add
bound
jae
push
sbbl
mov
test
jns
xchg
jp
int
iret
pop
pop
mov
loopne
cli
sbbb
xchg
clc
jne
jecxz
psubb
or
js
xchg
insb
sub
ljmp
mov
xor
or
sub
popa
push
add
hlt
repz
jg
xchg
pop
fimull
jle
clc
pushf
dec
xor
in
daa
pushf
sub
stc
sub
jb
cmp
les
insb
sbb
push
ja
mov
xchg
hlt
pop
and
mov
cmp
xor
in
mov
mov
ljmp
enter
xor
sbb
gs
shrl
push
aas
mov
and
sub
cmp
jae
mov
adc
std
sub
out
adc
xchg
fs
icebp
mov
push
xchg
imul
popf
mov
mov
mov
ja
push
inc
inc
sahf
punpckldq
pop
push
adc
mov
int3
loope
mov
cmpb
cmpsb
xchg
sub
cmpsb
sbb
cltd
add
daa
lock
std
xor
push
jecxz
imul
push
jb,pn
xchg
pop
mov
fstps
xlat
cmpsl
call
mov
and
mov
loope
imul
xor
icebp
push
and
rcl
fldcw
nop
fisubl
in
cmp
movsl
mov
scas
mov
sub
inc
icebp
fs
dec
jp
mov
out
lods
mov
es
adc
cmp
mov
add
outsl
ja
sbb
cli
adc
xchg
push
jge
push
loop
insb
xlat
fwait
ljmp
mov
jbe
loop
sti
frstor
fcompl
outsl
mov
dec
cmpsb
sahf
ficoms
jl
cmp
scas
mov
dec
ja
sahf
mov
mov
cmp
sub
sub
and
sbb
inc
pop
insb
or
int
cli
int
jnp
data16
orl
test
in
push
sbb
cmpsb
lds
mov
xor
pop
fildll
lahf
jl
mov
cs
or
jecxz
and
push
mov
xchg
xchg
sar
loop
sub
rol
sti
cwtl
in
imul
dec
out
xchg
repnz
daa
ja
pop
ja
mov
fcmovb
jne
push
fdivr
js
mov
je
outsb
mov
lods
and
rcr
fs
daa
cmp
in
sub
sbb
fisubrs
pop
scas
cmpsl
or
clc
imul
pop
gs
pusha
sbb
xchg
fiaddl
push
inc
mov
shlb
mov
mov
movsb
ret
outsl
xlat
dec
jp
jns
clc
sbb
push
mov
sub
test
out
fbld
rcrb
or
div
push
outsl
ljmp
xlat
mov
in
mov
and
clc
pop
jno
add
dec
inc
stos
into
ja
add
ja
or
jnp
sub
xchg
cmp
fcmovnu
rolb
adc
andb
cmp
ret
adc
mov
pop
mov
xor
sbb
pop
add
sub
ret
push
fs
aaa
jns
lret
mov
shl
mov
jo
movsb
jmp
inc
addl
xchg
mov
je
cmpsl
out
pop
popf
bound
stos
push
das
out
rorl
sti
adc
push
lods
fwait
xor
lods
xor
nop
jge
pusha
fmul
xchg
std
imul
or
jp
dec
jle
aaa
xor
add
fidivrs
jnp
cld
and
imull
mov
rcrb
mov
fbstp
jg,pn
testb
push
repnz
enter
mov
call
adc
repnz
int3
mov
in
and
cmp
dec
loopne
mov
xchg
lock
push
mov
mov
addr16
xchg
int3
int
comiss
pushf
ds
sbb
outsl
inc
mov
or
xchg
cs
jo
sub
movsb
rcrb
dec
mov
pop
cmc
push
push
xchg
lea
mov
cwtl
inc
jne
push
stc
mov
or
xor
movsb
int3
pop
cmp
push
sbb
outsb
test
xchg
mov
dec
pushf
fst
fcmovnb
mov
adc
ret
push
outsb
pusha
push
divl
mov
aad
negl
xchg
arpl
jle
mov
push
cmpsl
sahf
pop
jae
or
sub
inc
fs
scas
lcall
in
sbb
pop
in
mov
inc
out
mov
repz
cmp
loopne
jae
data16
mov
adc
add
mov
test
in
imul
push
jmp
lret
add
adc
sbb
mov
out
test
sbb
scas
add
loopne
scas
or
xor
dec
adc
pushl
xchg
jg
xor
stos
fldt
enter
pop
shr
cmp
int3
daa
xchg
loopne
sbb
xor
push
fucomip
lret
rcr
pop
add
mov
divb
mov
adc
xchg
in
popa
mov
or
push
incl
icebp
fcmovbe
rorb
fwait
pop
and
jl
push
xchg
notb
les
cltd
add
jb
jbe
fs
mull
dec
sub
mov
dec
mov
icebp
scas
inc
or
pusha
sarb
outsl
lret
or
pop
and
je
aaa
jg
jae
xor
or
call
mov
jecxz
shr
shlb
cmp
mov
jne
pop
dec
xchg
loop
imul
popf
mov
fidivrl
push
stc
push
aas
sub
enter
and
shrb
mov
in
dec
je
or
mov
dec
or
nop
mov
lds
add
xor
cmp
in
mov
mov
xchg
inc
lret
xchg
dec
jle
je
jbe
add
addb
je
xor
loopne
iret
push
hlt
xor
sub
jno
enter
fadds
mov
sub
push
mov
jp
in
mov
arpl
push
mov
insb
or
jno
pop
jl
fisttps
into
lea
rorl
testl
cmp
sub
in
or
js
xchg
filds
je
fadds
mov
in
push
ljmp
lea
lret
xor
sbb
mov
adc
lods
jl
pop
dec
pop
xchg
mov
or
inc
push
cs
mov
lahf
xchg
push
fxam
push
push
xchg
mov
jb
mov
push
lds
xchg
sbb
les
push
mov
mov
pop
cmp
cvtpi2ps
adc
rcrl
ret
out
inc
in
les
in
leave
daa
jb
push
mov
test
inc
lahf
repz
nop
jmp
fildll
enter
scas
push
add
punpckhbw
jne
cmpsb
add
mov
aam
dec
insb
xor
shll
cwtl
xchg
adc
push
jns
popf
lret
sarb
adc
add
sbb
cmp
test
in
mov
pop
cmp
shr
sbb
mov
mov
jb
aas
inc
aas
dec
repnz
jae
push
cmp
mov
jge
fldl
fwait
pop
shl
xchg
loope
cmp
cmp
ss
push
mov
stos
pop
out
add
mov
push
dec
outsb
fbstp
jmp
mov
hlt
test
and
aaa
sbb
sub
iret
fbld
mov
repnz
and
fwait
dec
adc
add
in
aaa
arpl
shll
loope
mov
xchg
jmp
or
sbb
lods
jnp
adc
mov
sbb
add
das
icebp
nop
dec
mov
fwait
push
xchg
dec
pop
sub
sub
xchg
sbbb
rclb
push
inc
mov
cmpsl
ret
jecxz
ficomps
fdiv
mov
in
push
mov
test
pop
mov
pusha
mov
and
or
roll
cmpsl
cwtl
stos
mov
repnz
mov
mov
dec
mov
mov
adc
xchg
repnz
inc
sbb
add
ss
pop
stc
pop
inc
push
xor
outsl
dec
lret
test
dec
test
cmpsb
sarl
xor
mov
subl
lret
inc
xlat
pushf
jmp
dec
push
hlt
aaa
outsb
lsl
fsubs
mov
pop
in
sbb
and
fisubrl
das
ret
push
xor
subl
mov
jno
inc
lock
movsl
cmp
inc
in
out
jmp
out
cld
cwtl
shrb
clc
inc
mov
pop
adc
sbb
pop
xchg
jno
and
test
inc
jns
mov
add
jno
or
cs
dec
mov
jae
mov
mov
inc
lea
mov
shll
mov
loopne
leave
mov
dec
bound
lock
scas
rclb
cld
sub
inc
ja
lret
inc
movsb
out
pop
push
mov
or
xchg
xchg
popa
mov
dec
into
mov
aas
jecxz
cmc
sti
jp
arpl
clc
jb
andb
jbe
dec
jecxz
loopne
jo
jmp
add
test
and
or
int
cld
jbe
shlb
dec
jno
repnz
pushf
loope
negb
xor
fldenv
fwait
pop
mov
ljmp
js
xor
leave
mov
push
fsub
imul
movsl
fs
dec
sahf
mov
scas
imul
or
jnp
mov
dec
iret
and
xor
es
loopne
mov
fdivs
add
or
dec
mov
cltd
mov
int3
rclb
enter
shll
inc
pushf
mov
clc
gs
in
cmp
mov
out
add
inc
jo
or
les
cmp
js
sahf
cmp
stc
cmp
aam
pop
arpl
imul
xor
jg
lahf
aad
cmpl
bound
dec
or
mov
fmuls
mov
or
fimull
rorb
lock
inc
jno
adc
es
or
lock
xor
cwtl
lods
inc
jno
mov
mov
mov
mov
inc
sub
rcrb
ret
ret
pop
and
pop
mov
xor
stc
leave
add
inc
adc
pushf
repnz
daa
jnp
xlat
int
lret
push
mov
xchg
adc
mov
mov
out
jo
ror
adc
xor
mov
fnstenv
mov
stos
in
fsubrl
in
jge
fists
lahf
sub
call
dec
sti
sbb
out
ljmp
mov
cmp
push
push
or
pop
xor
xor
sub
andb
dec
data16
cmpl
pop
inc
imul
fdivs
loopne
sbb
std
int3
mov
lock
or
and
inc
add
xor
pop
mov
sbb
push
enter
and
gs
cmpsl
pop
jnp
addr16
rclb
push
int3
inc
jns
pop
pop
sbb
out
lret
ja
cmc
pop
pusha
lahf
mov
mov
rclb
test
sbb
mov
test
popa
imul
pop
pop
push
in
test
xchg
sarl
pop
adc
cmp
jbe
add
ret
dec
sbb
dec
dec
aas
mov
jae
mov
push
pop
ds
jle
adc
push
insl
cmp
or
roll
jns
enter
insb
mov
mov
ss
push
daa
out
fs
or
mov
testb
cli
pop
insl
jl
adc
test
mov
daa
push
fldl
aas
inc
shrl
sarl
inc
mov
mov
mov
in
nop
mov
xchg
loopne
jecxz
cmp
shlb
push
sub
push
stos
and
mov
cmp
repnz
je
cmp
orl
dec
inc
adc
and
fdivl
pushf
dec
add
aas
fcompl
movsb
ds
adc
sbbb
sbb
pop
imul
jnp
push
sub
cmp
mov
mul
roll
data16
jmpw
es
shlb
fdivrs
and
in
pop
pop
arpl
call
mov
mov
movsl
aaa
xor
adc
dec
test
cwtl
int3
out
jnp
and
cmp
add
into
test
sub
iret
lahf
aas
sbb
mov
sahf
stos
scas
mov
jo
scas
push
lcall
jb
sub
in
mov
ret
xchg
xchg
mov
mov
shl
fcomps
les
jno
hlt
pop
push
inc
stos
rorb
in
test
xor
arpl
and
cmp
push
dec
mov
pop
push
fnsave
imul
sub
jbe
test
into
cs
lods
aaa
scas
mov
sbb
mov
test
sbbb
movsl
push
mov
fiadds
stos
ljmp
das
test
sahf
out
push
mov
bound
or
push
out
stos
cmpsl
cmp
imul
shl
test
shr
jo
mov
dec
jle
inc
mov
xchg
mov
inc
jno
jle
cltd
mov
add
pop
stc
test
cmp
jns
int3
add
mov
sbb
sub
sbb
cmp
sub
sarl
ret
mov
xchg
xor
fxch
pusha
fldpi
cld
add
outsl
sahf
sti
in
jnp
sbbl
int
mov
popa
cmp
dec
jmp
clc
mov
rcll
dec
fbstp
or
bnd
inc
stos
in
sub
movsl
pushf
lahf
add
xchg
cmc
push
dec
out
pop
jmp
fs
in
jb
out
shl
and
adc
add
add
sbb
aad
lock
push
mov
popa
jle
dec
addr16
stos
jg
imul
into
repz
in
fstl
mov
push
or
jb
xor
jbe
out
in
out
mov
arpl
loop
push
mov
add
mov
movsl
loopne
int
xchg
jb
adc
jle
cmpsl
outsb
cli
mov
lss
hlt
scas
or
sub
inc
out
cmp
cld
cmp
es
ss
or
mov
or
or
lock
out
pop
lds
shlb
in
ja
lds
jbe
stos
dec
xchg
nop
mov
jge
or
push
push
into
sub
push
lods
shl
fdiv
stos
sahf
cmpsl
sub
je
ror
xchg
xchg
repnz
and
xlat
cmpl
pop
sbb
or
xchg
dec
mov
adc
pop
pop
nop
dec
outsl
sbb
cltd
cli
es
dec
lret
sarl
aaa
xlat
fsubrs
in
push
mov
call
mov
decl
cmp
dec
sbb
sbb
push
loope
or
dec
sbbb
rorb
enter
scas
je
fcmovnb
cwtl
incb
cmp
mov
decb
lds
push
aam
jmp
inc
lods
fistpl
outsl
jo
negb
call
adc
mov
pop
xlat
or
addr16
xchg
inc
cwtl
jge
cmp
fldlg2
add
iret
adc
or
pop
and
inc
xchg
jmp
and
cmp
or
xlat
hlt
inc
push
jns
pushf
into
push
sbb
jne
sahf
and
gs
test
mov
inc
lods
into
je
cmp
mov
xlat
jb
and
jp
push
cmc
or
pop
pop
mov
cmp
adc
cltd
mov
jno
ret
lahf
adc
movsb
ret
int
add
ss
push
loope
fildll
push
cltd
ret
fsubl
pop
and
mov
xchg
out
jno
xchg
or
arpl
xchg
scas
and
outsb
jp
jmp
stos
fmul
dec
mov
sub
mov
je
fucom
cld
in
adc
mov
fnstenv
jg
dec
push
andb
mov
test
or
lahf
mov
adc
rorb
testl
ret
outsl
jo
and
cmpsb
add
fldenv
aaa
bound
sub
into
mov
cmpsb
push
imul
add
and
aas
cmpsl
outsl
mov
jnp
rorl
cmp
pop
bound
mov
mov
jno
ds
stos
popf
imul
test
push
dec
or
push
xor
std
fcoml
or
or
lea
movntps
int
in
clc
scas
pop
in
cmpsb
mov
jmp
adc
sbb
ror
jae
ret
sahf
sbb
mov
nop
jg
fs
cmp
out
jno
mov
in
mov
cmp
loope
gs
xchg
js
stos
jbe
repnz
repz
lods
andl
out
imul
jecxz
adc
add
mov
popa
mov
mov
mov
dec
and
lods
xlat
xchg
push
mov
fisttps
sbb
adc
jecxz
dec
mov
aad
jmp
fstpl
insb
adc
test
mov
xor
and
fldenv
dec
mov
xchg
dec
cmp
and
testb
aas
sub
outsl
pop
movsl
stc
movsb
into
adc
int3
mov
add
movsb
js
xchg
adc
das
cmc
sbb
gs
inc
enter
in
fstps
mov
inc
add
pop
pop
dec
int3
mov
xor
loopne
or
ret
stos
fcomp
std
sub
and
popf
mov
je
and
clc
sbb
stc
pusha
adc
shlb
out
ljmp
loop
push
stos
imull
jnp
and
js
or
es
mov
out
enter
jne
movsb
comiss
sub
fistpl
mov
mov
daa
jb
test
lock
movsl
aaa
popa
sub
mov
or
push
pop
mov
and
dec
leave
mov
jecxz
jo
mov
mov
mov
icebp
fistpl
mov
and
loop
bnd
mov
arpl
add
cmp
inc
rcll
adc
sub
cmpsl
pop
ja
xchg
xchg
adc
lret
mov
jno
ljmp
stc
lea
sub
dec
mov
add
adc
pusha
out
sti
in
bound
xchg
pop
cmp
adc
dec
js
xchg
xchg
dec
push
scas
inc
jno
add
jo
add
aad
daa
addr16
sbb
mov
jnp
inc
mov
adc
xor
jmp
sahf
imul
inc
dec
jo
push
lret
add
jp
dec
es
scas
lcall
lods
xor
inc
sub
xchg
loopne
mov
fistpl
inc
popa
xchg
sub
aam
cli
dec
das
cmp
mov
mov
loop
mov
sbb
mov
jb
or
xor
in
sbb
xchg
lret
mov
xchg
cbtw
jb
mov
push
xchg
mov
jnp
mov
ret
cmc
adc
cli
add
les
push
pop
cmc
xchg
add
inc
pop
popf
dec
stos
stos
dec
dec
inc
loop
xchg
loope
mov
sub
dec
movsb
andl
adc
insb
dec
int
jne
iret
push
jmp
test
and
mov
jno
movsl
mov
out
jns
daa
xchg
icebp
cmpsb
xor
cmp
sbb
pushf
xchg
or
out
arpl
dec
jl
add
adc
ficomps
outsb
jle
jb
xchg
inc
dec
lds
frstpm(287
mov
mov
das
arpl
mov
mov
je
xor
pop
ss
imul
fucomip
cltd
cmp
push
cmc
mov
and
call
inc
jecxz
cmp
lods
test
or
bound
adc
int3
mov
sub
add
add
lret
cvtps2pd
dec
rorl
and
shlb
mov
mov
or
ss
dec
cmpsb
ja
jg
dec
jbe
orb
fcmovbe
pop
rcl
enter
popf
xchg
xlat
inc
idivb
aam
sarb
or
shr
inc
cmpsl
rcrl
mov
clc
add
inc
bound
adc
adc
fimuls
cmp
call
ret
sbbb
push
cmp
subl
daa
pop
push
push
out
pop
xlat
jp
mov
test
mov
jge
addr16
sbb
sbb
mov
dec
or
mov
and
sti
inc
push
mov
mov
mov
jo
inc
adc
movsb
rolb
mov
push
fmul
mov
sub
sbb
sahf
jmp
std
jno
mov
imul
mov
stos
cli
or
push
cltd
loopne
push
addb
nop
adc
jl
fisubs
or
add
mov
cmp
jg
mov
dec
ficoml
aad
aaa
cmpsl
or
or
enter
in
mov
pop
sar
sbb
negb
loopne
jg
mov
popf
ret
imul
ds
adc
gs
sbb
sbbl
xchg
out
cmpsl
sbb
adc
arpl
push
nop
jb
adc
dec
addl
xchg
inc
shrl
dec
push
jbe
adc
sbb
bound
mov
jle
subl
xor
sgdtl
xchg
add
dec
ret
add
in
shll
sub
inc
sbb
bound
mov
dec
cmp
jnp
iret
mov
xchg
mov
pusha
xchg
andb
add
popf
pop
fdivs
mov
movsb
movsl
xchg
pop
push
cltd
into
and
inc
xor
jl
in
hlt
shrb
pop
cmp
mov
mov
dec
shrl
fdivl
insl
fbld
mov
push
std
mov
int
dec
lea
outsb
mov
mov
push
pop
clc
push
push
cltd
mov
aam
cwtl
jecxz
rcrb
push
add
pop
jno
ss
stc
jae
por
adc
mov
adc
sbb
jnp
nop
jo
sub
aam
jecxz,pn
push
xchg
lcall
out
ret
add
repz
andps
sahf
data16
les
cs
fdivrs
div
fmuls
orb
fwait
in
stos
js
dec
or
jl
out
push
lea
push
cltd
inc
aaa
mov
add
push
add
pushf
lret
mov
jnp
aas
adc
call
sbb
lret
loop
lret
outsl
in
lea
adc
enter
int
mov
xchg
pop
mov
aad
imul
sub
xor
and
lea
push
lds
or
cmp
arpl
adc
mov
bound
sbb
js
mov
xlat
sbb
sub
xor
jb
fdivs
pop
into
lock
adc
sbb
sbb
cli
fidivrl
inc
mov
mov
ljmp
sbb
mov
test
addl
xchg
popa
adc
insb
icebp
loop
pushf
inc
test
ja
fwait
mov
pop
adc
jno
orb
insb
cltd
jecxz
fwait
cld
jecxz
flds
mov
mov
fsubrp
mov
sbb
jb
cmp
std
jmp
xor
ljmp
cltd
cwtl
and
in
mov
inc
out
xor
cmpsb
insb
jg
mov
adc
adc
lahf
arpl
and
mov
shl
mov
sbb
xchg
aaa
mov
cmp
inc
dec
cmp
jmp
jns
or
sub
sub
push
xor
enter
jbe
xor
pop
rcll
xchg
pop
adc
pop
add
xchg
mov
mov
or
mov
loopne
mull
repnz
aam
xchg
xor
es
cmp
adc
popa
jno
dec
push
push
js
or
movsl
mov
icebp
sub
mov
in
jne
fmul
sub
xor
sub
pop
pop
sbb
dec
into
jl
inc
push
ret
mov
movsl
push
loope
or
insb
sbbb
jno
mov
insb
arpl
out
cmp
popf
pop
push
cmp
out
sbb
sbb
negl
gs
ret
push
data16
xchg
and
pusha
dec
push
and
insl
xlat
es
jo
les
push
hlt
les
inc
add
push
jne
xchg
lods
mov
cwtl
inc
lret
mov
frstor
ljmp
mov
pop
xchg
inc
xchg
rcll
lods
xchg
outsl
sbb
inc
and
dec
push
pop
dec
xchg
int3
jo
rclb
jmp
cmp
xchg
sub
dec
lret
cwtl
bound
cmp
popl
adc
xor
dec
jbe
clc
aas
ljmp
pusha
in
inc
mov
les
ljmp
mov
mov
aaa
cli
cltd
call
stos
rorb
enter
sbb
jmp
and
mov
pop
add
mov
jno
cmp
jo
pop
popa
inc
sub
cmp
adc
rolb
insl
out
sti
in
jp
mov
xor
stc
insl
jae
daa
mov
sbb
inc
xchg
push
lea
lcall
das
adc
cli
dec
adc
faddl
push
mov
imul
pop
adc
xlat
push
pop
mov
daa
in
andb
sub
jmp
xor
jmp
loope
leave
adc
mov
leave
das
pop
xchg
jmp
jnp
push
aad
sbb
cmp
cwtl
sbbb
insl
add
daa
sbb
lret
fwait
jge
sub
sub
sbb
xor
jecxz
mov
test
out
ljmp
push
lahf
in
and
cmc
add
cmpsb
andl
ret
loopne
push
jae
jge
cmp
inc
mov
pusha
inc
shrb
mov
scas
data16
dec
xor
pop
inc
lahf
roll
repnz
inc
cmc
ss
insw
sti
pop
sahf
les
repnz
mov
jp
lret
sbb
dec
add
mulb
push
dec
inc
xlat
and
lds
outsl
push
ret
xorb
dec
jnp
or
cmp
cmpsl
mov
jp
pop
jl
or
cmc
xchg
mov
jns
jmp
dec
stc
data16
in
fistpll
xlat
cmp
in
push
xor
pop
loope
sbb
xchg
mov
outsb
xor
in
cmp
dec
clc
daa
push
pop
stos
add
ja
test
or
insb
mov
cmp
jl
mov
push
or
cmpb
fldt
div
dec
testl
imul
mov
in
mov
sub
adc
pop
cmpsl
jnp
jmp
stos
dec
lcall
out
fs
out
mov
jmp
push
gs
sub
ljmp
arpl
inc
stos
popf
daa
inc
sbb
and
push
cli
in
icebp
aad
test
ljmp
add
or
sbb
popa
icebp
sub
leave
nop
imul
loope
repnz
inc
xor
sub
mov
and
jae
xor
inc
js
xchg
xchg
out
jbe
xor
out
add
mov
push
aaa
add
clc
roll
andb
xchg
mov
shlb
pop
arpl
jl
dec
add
loop
shrb
ret
dec
sub
mov
xor
xchg
lea
js
xor
or
pop
adc
push
jnp
mov
nop
jg
and
or
sub
or
push
loopne
shl
stos
pop
dec
xor
clc
and
insl
notl
cmpsl
arpl
fwait
pushf
sub
call
lods
leave
mov
push
in
sarl
inc
mov
sbb
dec
addl
mov
fsts
jmp
inc
or
jge
bound
cmpsb
clc
sbb
pop
arpl
push
cwtl
fistpll
lock
mov
mov
inc
subb
rorl
sbb
cmp
dec
add
sub
aaa
loope
fadds
insl
sbb
fidivl
iret
in
mov
loop
sub
push
mov
xchg
xchg
bound
pushl
lcall
loopne
loop
dec
testb
dec
cs
mov
xor
ret
pop
inc
int
in
or
fwait
inc
call
ror
aam
inc
adc
dec
popa
push
add
dec
mov
vfrczss
adc
pop
sbb
shll
xor
movsb
aad
or
lods
stos
adc
lods
sub
lock
loope
in
xchg
cmpsb
sbb
cmp
jbe
xchg
enter
in
xor
popa
cltd
in
rorl
mov
mulb
in
and
mov
popf
or
jge
int3
inc
enter
addr16
enter
dec
jne
negl
test
mov
ret
movsl
in
or
add
imul
stc
push
lock
les
loop,pt
or
lret
cmp
adc
movsb
pop
push
test
push
pop
mov
fwait
imulb
jb
out
xor
push
in
xchg
test
jno
js,pn
mov
xchg
repz
cld
adc
js
js
icebp
add
jp
and
in
stos
xchg
mov
jp
mov
mov
sar
movsl
or
add
enter
xor
iret
shrl
cmpsb
xor
jo
je
and
loopne
mov
add
jae
mov
lahf
jmp
cmp
mov
or
push
pop
lds
fs
adc
cmp
dec
das
and
out
adc
jns
loopne
in
andl
adc
and
sbb
icebp
and
insl
cs
shlb
xchg
pushf
imul
cmp
sbb
jb
mov
cwtl
mov
xlat
cmc
call
mov
dec
cmp
movsl
mov
out
in
push
inc
subb
test
lret
push
push
out
jb
push
add
fdivrl
mov
data16
push
fdivrs
mov
adc
pop
iret
and
into
cmp
addr16
cmc
daa
cli
cli
xor
paddd
filds
hlt
inc
xchg
cmpsb
jns
hlt
inc
jae
loop
lret
scas
or
repnz
add
outsl
and
pop
in
xchg
inc
lea
in
aad
lea
push
flds
subl
cmp
xchg
and
cwtl
xchg
mov
js
add
scas
xchg
jno
enter
mov
sbb
xchg
outsb
xchg
bnd
fwait
sub
mov
jae
xchg
push
in
or
or
and
mov
rep
sahf
sahf
adc
ja
out
push
push
sub
lods
adc
je
in
popa
push
mov
stos
adc
repnz
dec
and
push
jo
mov
mov
xlat
std
pop
popf
aam
jae
dec
adc
pop
lods
nop
lcall
xor
adcb
mov
mov
inc
mov
popa
ljmpw
sbb
mov
ja
mov
xchg
and
aad
pusha
js
push
inc
test
or
outsl
out
inc
cmp
enter
xor
push
andb
xlat
mov
push
imul
xchg
sub
jp
clc
cltd
and
dec
sub
jo
loop
rolb
aam
and
push
mov
out
ljmp
sbb
or
inc
adcl
inc
ror
sbb
push
test
inc
cmc
rcll
xchg
sub
loop
mov
push
cmpb
inc
daa
popf
test
in
bound
mov
pusha
jo
xor
andl
dec
lcall
in
dec
gs
cmpsb
push
mov
mov
lahf
jb
into
mov
mov
mov
es
scas
out
xor
test
sub
sbb
ret
andl
xchg
inc
or
pop
andl
scas
xchg
mov
pusha
shr
push
in
push
or
gs
fadd
or
stos
sbbl
sub
xlat
cld
lret
pusha
mov
jmp
mov
xchg
xor
outsl
sub
or
repz
pop
insb
arpl
fisttpll
popf
cwtl
test
xor
pop
or
jecxz
fmul
stos
test
stc
push
jge
neg
std
mov
inc
dec
adc
and
or
call
adc
bound
sbb
repz
sub
dec
sbbl
fstps
cmpsb
ss
jbe
and
repnz
mov
call
and
popf
lahf
inc
cmpsb
jne
jbe
adc
fimuls
mov
movsb
fnstcw
int3
dec
je
cmp
loope
xor
sbb
hlt
inc
push
mov
dec
push
stc
pop
test
pop
cmp
imul
mov
int3
xor
in
and
jmp
mov
sti
mov
or
mov
lcall
push
ret
add
mov
movl
test
ss
mov
xchg
les
and
push
adc
cmp
mov
test
jae
pop
in
xchg
scas
decb
pslld
jmp
jo
out
push
dec
mov
repz
jne
js
jae
mov
test
lea
mov
ret
test
push
lea
arpl
aas
stos
test
loop
xchg
data16
ficoms
sbb
scas
sbb
dec
or
adc
sar
call
pop
dec
jo
insb
iret
push
nop
lcall
or
pusha
and
shlb
cs
push
repnz
mov
out
lds
bound
cmpsl
fs
es
cmpsb
sub
rcrb
ljmp
mov
inc
in
pop
xchg
sub
adc
push
jb
in
gs
pop
cli
cmc
sub
mov
repz
mov
adc
pop
push
sub
mov
mov
sub
repz
cli
jbe
stos
push
sbb
jne
lock
sub
enter
movsb
pusha
push
adc
rolb
sub
popa
insb
push
mov
adc
decb
insb
mov
ret
xor
ja
mov
arpl
sbb
enter
inc
sub
data16
sub
xor
and
xchg
icebp
push
outsb
iret
ret
ss
cli
push
xchg
and
pop
ljmp
rorb
mov
xchg
les
pop
dec
dec
loop
leave
clc
and
dec
lea
std
dec
lock
in
daa
adc
shlb
push
cmpsl
popf
xchg
add
mov
ds
fld
in
daa
data16
adcl
push
adc
dec
mov
inc
mov
dec
xor
arpl
in
pop
sbb
jge
hlt
test
ret
add
je
lock
pushf
adc
inc
repz
pop
icebp
clc
pop
imul
mov
inc
sub
inc
jge
mov
in
xchg
out
add
or
inc
push
jno
int
mov
jle
ja
mov
es
cmpsb
mov
insl
jnp
orl
fnstsw
ret
ret
mov
cmp
jp
addr16
dec
xchg
stos
dec
dec
js
in
push
jge
push
in
pusha
negl
aaa
cmp
adc
cltd
xchg
mov
imul
cmpl
push
data16
jle
into
mov
repz
and
ret
aam
fistpl
les
add
daa
shll
jnp
sbb
vmulss
adc
pop
and
rcr
in
and
rolb
add
sub
js
xor
xor
add
loope
xchg
or
lock
jo
icebp
ds
daa
in
lret
cmp
daa
lock
mov
inc
insb
into
jae
js
test
jbe
mov
pop
sbb
outsb
popa
enter
mull
fmulp
add
pop
inc
in
int3
xchg
jo
sbbb
xlat
mov
dec
mov
cmp
push
lahf
pop
int
fwait
xchg
fcoms
repz
sub
ret
inc
cltd
mov
jmp
pushf
movsb
adc
or
fisubrs
fcompl
les
cltd
pop
jmp
mov
sar
mov
sub
fs
cmp
xor
test
xchg
out
std
xchg
loopne
inc
pushl
mull
das
dec
repnz
icebp
in
ds
bound
adc
pusha
or
lods
outsl
shll
sub
cmpsl
hlt
cmp
sbb
test
add
cmp
ret
dec
xchg
mov
test
imul
cmp
xchg
icebp
fsub
inc
xchg
roll
xor
mov
aad
adc
mov
add
aas
in
ret
sbb
push
aad
mov
iret
mov
hlt
sbb
pop
xchg
sub
dec
sub
fs
cltd
sahf
or
mov
adc
lret
cmp
fwait
lock
mov
push
mov
pop
mov
xor
fildl
mov
add
xlat
add
out
jecxz
in
xor
push
movsb
jge
out
xor
jne
enter
pop
sbb
adc
aam
movsl
stc
fbstp
xor
inc
sbb
in
sbb
stc
xor
jnp
cmp
in
js
fdivs
and
and
mov
inc
adc
sub
rolb
movsl
sarl
pop
stos
adc
repz
cmp
stos
insl
sbb
cmp
xorl
push
pop
push
in
jp
xor
mov
hlt
fs
or
pop
fs
mov
in
mov
lcall
or
test
call
insb
ljmp
ret
sub
pop
push
dec
mov
shl
adc
ss
xor
xor
and
or
das
rolb
push
mov
xor
imul
scas
sti
pop
aad
in
dec
sub
into
dec
cmp
mov
pop
fwait
cmp
lahf
cpuid
shr
or
add
outsl
or
imul
aas
fs
xor
lret
hlt
rorl
cmpsl
mov
pop
xchg
xchg
jo
fs
cmc
jecxz
scas
add
mov
test
pop
jmp
cwtl
fisttpll
push
inc
xchg
dec
mov
jl
jmp
in
cmp
jno
pop
xchg
cmpsl
jmp
pop
sub
lret
stos
dec
mov
dec
mov
lods
jp
jmp
or
pushl
pop
xor
lret
sbbl
nop
aaa
dec
std
jmp
mov
in
pop
ds
jns
sarb
sti
daa
test
idivl
jbe,pt
push
test
mov
test
push
mov
out
sbb
cli
ss
lods
sub
test
xchg
xor
loop
sbb
jnp
ds
int
test
inc
jle
mov
cmp
je
dec
rcll
out
ja
les
or
push
insb
in
pushf
push
ret
fbld
stos
mov
stos
je
mov
sub
fwait
pushf
xchg
fnstsw
sbb
push
and
movsb
jb
shll
dec
mov
sbb
in
inc
cs
xor
dec
test
xchg
xchg
in
adc
or
into
xor
movsl
and
adc
inc
std
hlt
ja
sahf
mov
outsb
pusha
jle
cmc
movsl
iret
mov
dec
in
sti
into
push
adc
xor
xchg
daa
loopne
jmp
dec
pop
int
mov
in
cmp
lods
imul
dec
cmp
xchg
lret
sub
push
or
or
push
adc
cmp
insl
push
clc
test
xchg
imulb
gs
inc
push
pop
loop
adcl
pop
loope
sbb
mov
pop
mov
addr16
dec
outsl
push
popf
test
cmp
call
outsl
test
xchg
xor
mov
lcall
inc
fdivl
aas
in
std
movb
mov
mov
jmp
mov
fstl
adc
inc
shrb
sahf
test
mov
xlat
dec
and
sub
testb
jns
fsub
je
push
dec
cwtl
mov
movsb
cld
sahf
dec
xchg
pop
jg
clc
in
jle
dec
cmpsb
js
mov
pushf
rcll
notb
fucomp
pusha
repz
jg
jae
jae
push
jnp
push
outsb
sbb
pusha
pop
fmul
sub
dec
sub
xor
imul
push
leave
jbe
xchg
je
jg
mov
repz
popl
aaa
loope
mov
das
test
stc
arpl
aaa
cld
outsb
imul
aaa
dec
mulb
test
cmc
adc
stc
jmp
mov
jmp
push
sub
mov
lret
stos
sti
or
xor
fcoms
pop
fs
imul
lods
inc
push
call
bnd
cmp
faddl
push
mov
stos
cmp
outsl
push
scas
and
lods
and
bound
and
mov
mov
sub
and
fs
test
mov
jp
lock
xor
fidivs
push
mov
pop
stos
mov
and
adc
lret
sbb
aam
add
lock
mov
sub
cmp
loope
das
shrb
cli
jne
mov
jp
sbb
push
push
or
rcrl
inc
fiaddl
insl
and
sub
cmpsl
daa
loope
jl
and
jnp
adc
adc
or
outsb
sbb
shlb
repz
int
mov
sbb
mov
outsl
jnp
pop
mov
cwtl
sbb
scas
cmp
adc
add
push
cmp
loop
cmp
loopne
mov
add
lcall
sbb
ds
push
dec
lret
mov
jmp
sbb
xor
ror
loopne
pusha
aam
hlt
mov
mov
xchg
ss
stc
inc
test
mov
js
pop
mov
jp
aas
dec
mov
mov
test
sbb
out
sbb
sub
mov
mov
pop
loop
inc
fbld
cmp
xchg
mov
popa
stos
jb
add
cmp
inc
sub
movlps
xchg
imul
std
fists
jp
dec
test
daa
push
inc
jno
mov
mov
inc
addb
aam
test
add
adc
stos
pusha
gs
es
mov
inc
fadds
es
cmova
loop
fists
mov
mov
int3
and
sti
in
xor
fwait
xor
mov
lea
out
add
insb
push
insb
ret
test
dec
add
sub
and
jle
aas
mov
lea
mov
cmp
adc
movsb
sbbl
xchg
loopne
lods
jbe
and
leave
ficompl
pop
sbbl
mov
repz
mov
push
push
mov
insl
ret
rcl
inc
and
lcall
adc
jmp
sets
lret
xchg
dec
xor
cmp
out
test
cmpsb
out
jne
fimuls
push
ja
add
rolb
loopne
push
and
xchg
ds
lods
fsubrl
loopne
pop
lock
add
push
popf
mov
out
mov
adc
in
dec
in
shrb
xchg
repz
fcompl
mov
xchg
lods
loop
arpl
mov
das
mov
mov
rolb
or
test
inc
cmc
das
jne
mov
imul
lea
mul
jle
xchg
outsb
push
push
ss
fstps
xchg
mov
repnz
xchg
sub
push
push
lret
std
mov
cmp
mov
stos
push
jp
and
push
push
sub
cmp
adcb
ds
jno
push
icebp
or
xchg
in
int3
les
mov
lahf
repnz
ja
je
add
ret
into
cltd
sbb
inc
ss
pop
shl
sub
inc
pop
stos
cwtl
mov
cmp
aaa
loope
xchg
std
popf
repnz
mov
loope
add
cmpb
inc
or
jmp
or
xchg
push
mov
xchg
das
sarb
or
incl
js
dec
inc
int
outsb
fdivrs
out
fsubrl
rclb
pop
outsl
in
lret
sub
pushf
nop
mov
xlat
shll
das
out
push
and
mov
mov
out
xor
in
push
testb
in
in
sub
int
cmp
pop
dec
je
mov
fs
mov
inc
lds
arpl
les
mov
xor
lods
iret
adc
xor
and
mov
iret
clc
adc
dec
fsubl
sar
dec
pop
mov
add
int
or
pop
jbe
adc
jno
mov
imul
cmp
mov
les
stos
inc
test
shl
loop
inc
into
dec
je
pop
pop
sbb
sub
loope
dec
or
lds
fsubrl
cmp
cmpsl
out
sub
cmp
dec
xchg
jle
test
xor
fistpll
jo
jns
jg
das
dec
add
adc
mov
dec
fwait
sbb
pop
daa
addb
xor
mov
arpl
sarb
mov
or
and
fistpl
jecxz
pusha
pop
push
sub
das
inc
popl
push
jecxz
mov
orps
lods
jl
mov
pop
pop
or
js
inc
jg
jb
xchg
jl
out
sub
mov
or
ret
call
out
fimull
xchg
mov
push
and
cmp
mov
mov
lahf
sbb
mov
mov
andb
or
mov
cld
xor
jbe
stos
fs
xor
or
fnstcw
inc
repz
or
or
sub
push
cmp
jo
jnp
cmp
call
mov
mov
jge
add
icebp
jecxz
mov
xchg
iret
cmp
stos
jb
and
mov
int3
rcrb
mov
or
adc
cs
lret
jns
lcall
mov
into
jp
cltd
or
cmp
stc
jl
push
adc
and
pop
and
xchg
mov
inc
pushf
jmp
test
or
sbb
repnz
pop
sbb
mov
dec
jo
fbstp
ret
xchg
sub
aas
mov
aaa
jle
in
pushf
cmc
xor
mov
jp
jmp
sbbl
dec
bound
push
ja
scas
sub
dec
fimuls
add
pop
push
dec
jg,pt
fwait
mov
aad
jmp
pop
cld
sbb
mov
frstor
stos
enter
mov
mov
jecxz
pop
fsubs
mov
add
pop
bound
pop
cs
jo
adc
xchg
fstl
sub
les
sub
scas
sbb
stos
aad
inc
xchg
sbb
xchg
pusha
push
cwtl
loop
push
sub
fdivrl
pop
or
loopne
sub
fwait
dec
ret
or
cmp
push
mov
or
or
shlb
jp
nop
outsl
dec
icebp
xchg
into
and
outsb
pushf
testb
xchg
mov
cmp
mov
xchg
and
mov
adc
mov
ds
dec
call
pop
fdivrl
pop
mov
stos
out
out
inc
cltd
adcb
lahf
xchg
inc
sbb
pusha
mov
bound
mov
sbb
or
imul
cmpsb
pop
popf
add
mov
add
lea
sarb
xorb
aas
imul
hlt
movsl
xor
repnz
scas
dec
cli
stos
stos
orl
lods
xor
push
add
or
insb
int
mov
int
outsb
fidivrl
and
sti
fwait
jp
add
movsb
imul
and
fistl
sub
push
das
sti
fldl
push
aaa
stos
lods
cmp
mov
lahf
iret
std
mov
adc
icebp
stos
jecxz
gs
loope
or
push
jae
cltd
inc
mov
insb
jl
and
dec
mov
xor
cli
xor
push
subb
sbbl
push
inc
xchg
lock
sub
cmpsl
shl
jecxz
sbb
adc
or
mov
mov
loop
mov
fists
dec
mov
sub
push
pop
test
repz
add
adc
adc
std
data16
shrl
xor
lahf
sub
das
push
push
xchg
mov
lret
fldenv
lods
je
mov
xchg
adc
xchg
movl
out
cli
sub
adc
push
or
les
and
sub
popa
insb
mov
loope
je
pop
add
sti
out
out
cmp
push
xor
jmp
sahf
cli
aaa
mov
jae
out
or
mov
shrb
mov
mov
adc
add
adc
lahf
push
jmp
push
dec
mov
xor
pop
cmpb
lcall
ds
cltd
out
andb
cmp
and
lret
pop
cmpsb
dec
bnd
xchg
sub
cmp
repnz
pmaxsw
inc
xchg
jge
aaa
rep
movsl
int
cmp
hlt
dec
jl
sub
add
adc
add
imul
jmp
in
mov
mov
jbe
dec
dec
fsubs
mov
xchg
popa
leave
sti
inc
in
jle
enter
xor
lcall
lea
insl
mov
inc
xchg
jmp
pop
in
leave
cmp
jge
fcoms
aaa
ficoml
cmpsb
and
sub
arpl
mulb
into
popa
cmp
js
sub
sahf
mov
jg
popf
cs
cltd
jmp
fadds
lahf
jbe
xor
pushf
sub
pop
add
pop
pusha
cmp
dec
bswap
aam
pop
imul
pop
xchg
fcmovbe
jmp
fists
outsb
push
sti
sub
out
cmp
dec
dec
sti
jo
pop
int3
dec
test
outsl
and
push
add
pop
jle
adc
out
outsb
ret
test
aam
sbb
outsl
adc
sbb
adc
lea
mov
in
or
sahf
push
mov
inc
inc
negl
push
mov
lock
movsl
cmp
xor
iret
inc
push
les
inc
inc
out
fsts
out
adc
mov
mov
pop
daa
out
out
xchg
cmpb
pop
xorl
cli
inc
fcoms
pop
jl
lods
sub
arpl
pop
jae
lret
out
pusha
cli
jns
and
dec
push
jns
pop
in
adc
sub
pop
addl
and
lret
and
je
lock
popa
jno
dec
in
pop
push
mov
les
xchg
test
or
xor
into
cmp
jns
mov
jns
jns
mov
push
push
jle
loopne
arpl
iret
pop
adc
mov
adc
jmp
inc
add
fisttps
pusha
loop
push
jo
xor
orb
jge
fisubs
call
es
icebp
test
std
push
fisubrs
call
xlat
mov
dec
push
push
pop
in
sub
fwait
mov
gs
lea
or
jae
and
mov
mov
sub
add
jmp
cmpsb
cld
rcl
jecxz
ror
adc
inc
scas
xor
cmpl
jg
add
movsb
push
pop
pop
movsl
sbb
nop
and
or
and
sbb
jne
pop
inc
sub
inc
rcl
negb
lret
jge
mov
cmp
stos
pop
mov
outsl
shlb
aaa
add
mov
mov
adc
fidivl
ret
sbb
jp
pop
mov
or
mov
aad
sub
add
xor
adc
push
jmp
cli
sub
bnd
rorl
mov
jns
cmp
fbld
scas
sub
add
call
mov
xor
dec
mov
js
mov
out
jp
out
loope
mov
push
jns
mov
pop
insl
aam
sbb
or
lods
movsb
push
dec
xor
mov
inc
out
dec
fs
imul
dec
dec
pop
insb
inc
scas
jne
or
mov
or
push
jbe
ljmp
mov
mov
lahf
dec
clc
dec
fdivs
adcb
loope
popf
lds
lret
xor
mov
cld
mov
or
iret
cs
mov
test
jns
sub
jecxz
imul
out
popf
fcomps
lret
pop
fisubrs
xchg
fwait
push
push
ret
add
sub
clc
and
push
ret
imul
jnp
ja
hlt
sub
lods
aam
jbe
stc
push
pop
jmp
push
int3
sub
push
imul
shl
fcmove
fcomip
stos
mov
mov
pusha
sbb
cs
cmpsb
ret
mov
adc
sti
test
push
iret
dec
ffree
and
rolb
inc
testb
mov
faddl
sub
or
test
rol
jo
xchg
int3
mov
shll
pop
inc
xor
lods
out
xor
pop
out
popf
jmp
jmp
inc
hlt
adcb
mov
insl
rcr
push
jns
dec
out
push
das
mov
in
adc
cmpsl
mov
xor
sub
mov
sti
lret
in
inc
out
sbb
aad
cmp
xchg
inc
jp
mov
cli
jo
or
ret
out
mov
mov
and
or
sub
sti
pusha
or
enter
aad
sbb
mov
pop
into
cmpb
daa
push
or
and
adc
adc
or
mov
xchg
adc
mov
test
push
aam
jmp
xchg
sbbb
out
jl
outsl
jle
out
stos
jns
push
ss
mov
fimull
xchg
mov
test
lcall
and
lahf
sub
pop
inc
ss
ds
outsl
movsb
sbb
and
test
xlat
aaa
mov
lock
fbld
jns
rclb
pop
aam
cmp
pop
xor
in
inc
inc
insl
scas
mov
scas
push
sbb
or
mov
cmc
popf
inc
add
mov
inc
jnp
jecxz
adc
lods
test
push
loopne
push
mov
mov
cmp
mov
sub
add
test
xor
sti
jge
loopne
subb
int3
hlt
std
cmpl
pop
scas
test
pop
or
mov
pop
in
ret
mov
inc
cwtl
dec
push
sub
js
mov
cltd
pop
ljmp
add
test
cmc
push
mov
sbb
test
lcall
dec
dec
das
push
out
mov
cmp
jnp
mov
mov
pop
in
cmp
imul
cmp
lret
lcall
shl
push
test
sbb
jne
pop
rclb
andl
fcmovne
mov
in
in
sub
or
push
mov
insb
xchg
mov
movsb
mov
mov
rorl
xchg
mov
imul
stc
push
mov
pushf
stc
inc
aam
into
push
aad
sbb
pop
mov
xor
fs
mov
lret
pop
loope
sub
loop
xchg
loopne
scas
rol
push
pop
mov
jmp
data16
lea
mov
jbe
add
jb
mov
mov
mov
pop
aad
inc
into
xacquire
test
in
movsb
nop
fsts
fistpll
sti
xchg
pop
inc
in
shrb
daa
sub
push
clc
imul
dec
and
loop
mov
fildll
dec
jge
fists
ss
push
out
xor
testb
imul
push
cmp
inc
and
dec
test
ret
movsb
loop
stc
or
xchg
ficoml
enter
fsub
pop
sbb
mov
addr16
inc
jbe
mov
mov
inc
adc
mov
jo
daa
push
idiv
push
mov
imul
adc
adc
mov
int3
sub
inc
inc
in
mov
out
daa
cmp
push
insl
mov
push
pop
rcll
popa
mov
lret
cld
fistpl
daa
sbb
les
fs
pushl
enter
xor
pushf
js
xchg
xchg
call
and
push
aam
push
dec
into
dec
sbb
push
cs
inc
ret
jmp
and
push
mov
or
mov
sti
fistpl
repnz
mov
lds
add
inc
or
jo
bound
fsubrl
sub
dec
icebp
pushl
dec
out
jecxz
mov
sbb
and
test
xchg
sub
aas
cld
dec
sub
xchg
test
jns
adc
lret
xor
mov
ljmp
inc
stc
mov
out
in
imul
test
pop
mov
mov
iret
dec
push
cmp
cmp
jb
xor
or
sbb
ss
lods
mov
loop
jb
xchg
xchg
cmpsl
sub
push
ret
fucom
popf
mov
das
add
aad
in
adc
jnp
xchg
sub
sti
mov
or
push
push
xor
fscale
les
mov
mov
jg
adc
push
xor
or
subl
cmp
xchg
inc
ss
mul
xchg
loope
pop
lahf
test
cmpb
sarb
subl
cmp
lea
addr16
arpl
dec
push
jmp
mov
sar
sbb
stos
pop
test
mov
pusha
xor
sub
pop
test
or
test
test
ret
loop
xor
mov
jne
test
cmpl
push
mov
lods
inc
jp
adc
inc
add
and
arpl
insl
mov
orb
sbb
iret
dec
arpl
push
roll
out
xchg
ljmp
enter
lret
das
inc
adc
cwtl
shl
dec
push
sub
xor
push
fistl
xchg
push
cwtl
adc
sbb
push
call
or
and
xlat
xchg
xchg
lods
jle
xchg
je
and
xlat
mov
movsb
adc
rorb
sbbl
mov
and
cmp
sti
jg
popa
sahf
outsb
outsb
popa
ret
mov
aas
mov
scas
xor
add
popf
and
push
push
sub
jge
out
cmp
jmp
add
inc
jnp
and
mov
popa
nop
in
mov
push
sbb
inc
sub
fwait
outsl
outsb
dec
pop
dec
lahf
mov
pop
mov
dec
fsubrl
xchg
fisttpll
stos
mov
add
mov
and
push
lea
inc
xor
push
pop
mov
push
repz
mov
mov
adc
ret
iret
adc
jp
xor
mov
stos
and
mov
push
fldcw
dec
sub
sub
data16
lea
sbb
xor
in
test
stos
lcall
in
or
and
jge
jns
push
adc
sub
test
mov
pop
pop
repnz
js
addb
pop
inc
add
and
cmp
jns
xchg
test
je
mov
pushf
filds
scas
add
std
sub
mov
popw
push
and
icebp
or
data16
inc
adc
adc
lock
std
mov
push
outsb
push
rorl
pop
inc
sbb
and
outsl
jl
rcl
inc
divl
test
push
sub
jo
jne
lods
xchg
lret
pop
loope
fcompl
xchg
arpl
pop
enter
push
xor
clc
lds
fldcw
mov
int3
xchg
addr16
fdivrl
mov
mov
lret
mov
out
adc
sbb
xchg
jg
rol
cmp
mov
enter
out
das
or
and
pop
hlt
arpl
push
ja,pn
cmpsb
mov
hlt
jne
out
mov
out
jnp
jl
xchg
lods
fistpll
insl
lods
mov
add
mov
out
mov
dec
mov
pop
sub
ss
sbb
adc
in
dec
fsubl
mov
mov
adc
cmp
sbb
lret
xor
jg
aad
mov
es
jbe
xor
in
lret
lret
rcrb
clc
dec
outsl
js
arpl
insb
sub
fisubrs
arpl
or
ss
cmpsb
adc
insb
mov
add
xor
dec
fcoml
cmp
insl
push
mov
and
dec
mov
iret
xchg
in
and
sub
test
xor
push
and
or
es
loop
scas
jle
daa
call
add
aad
ss
xor
scas
jne
sti
xor
add
rorl
dec
or
cs
loopne
mov
jb
lahf
sti
lods
jl
jno
lods
xchg
addl
pop
xlat
loope
add
sbb
out
out
adc
addl
scas
pop
sub
sbb
xlat
sbb
dec
jae
adc
clc
push
cwtl
vmaxps
notb
dec
sub
stc
je
cmpsb
dec
shlb
pop
mull
mov
mov
pop
pop
xchg
notl
add
and
gs
inc
sbb
ja
xchg
loop
mov
sub
or
popa
mov
and
js
sbb
adc
test
adc
or
aaa
and
or
ret
out
les
sub
add
pop
imul
xchg
pop
in
xlat
into
jle
inc
pop
inc
jnp
int3
mov
and
fldl2e
jg
push
inc
cmp
add
fsubrl
insb
pop
fdivl
mov
push
jge
cld
in
inc
xor
lahf
pop
insb
scas
and
add
cli
pop
push
das
shll
sbb
rol
mov
push
jge
mov
fs
es
sahf
mov
fcmove
movsl
add
popf
cmp
dec
fidivrs
imul
pushf
insl
push
ja
shrl
sub
das
das
test
ret
xor
pop
fcoml
pop
mov
mov
fisttps
inc
fdivrl
aaa
mov
outsl
dec
fistpll
popf
aaa
and
dec
adc
or
sbb
jg
xchg
aaa
sar
or
or
in
sahf
xlat
pop
inc
inc
inc
mov
or
mov
fisttps
mov
mov
and
jo
arpl
test
pop
push
jnp
mov
je
and
push
mov
pop
icebp
sub
in
jb
sub
dec
push
mov
cld
xor
sub
fmul
mov
xchg
cld
xchg
push
lds
ss
sub
jo
into
mov
imul
pop
fiadds
filds
sbb
movsb
mov
mov
jo
pop
iret
inc
mov
das
fcoml
div
sbb
rolb
pop
roll
mov
jno
rol
sbb
hlt
xchg
sahf
insl
dec
in
adc
sub
xchg
xchg
cli
movsl
jp
out
idivl
mov
xor
ljmp
repz
push
mov
mov
test
dec
fistpll
push
out
mov
fs
mov
inc
repz
pop
pop
lret
gs
and
xchg
sbb
add
mov
mov
das
xor
pop
cwtl
dec
mov
mov
lret
imul
int
iret
inc
fstl
mov
les
mov
movsl
sub
inc
dec
cli
int
sbb
iret
lods
lods
sub
lahf
lahf
popf
mov
rcrb
test
mov
sbbl
push
xlat
scas
cld
loop
jbe
push
jmp
lock
mov
cs
dec
in
cmp
adc
mov
mov
rorl
push
mov
int
call
lret
sarl
sub
jns
cmp
cmp
dec
dec
lea
adc
clc
inc
push
mov
xchg
pusha
dec
xchg
jmp
inc
stos
add
ljmp
cltd
push
push
xor
mov
std
test
fsubl
adc
fildll
xchg
into
aad
sub
aam
xor
mov
sub
dec
mov
push
mov
cld
in
outsb
ret
jle
xor
or
xchg
jg
ljmp
and
ss
cmp
rclb
or
imul
fisubrl
mov
jne
mov
mov
test
bnd
out
add
mov
gs
add
stos
sub
sub
mov
stc
shrb
jb
popf
mov
xor
mov
push
filds
andl
add
adc
cwtl
xor
in
dec
cmpsb
aad
imul
xor
and
dec
jp
or
mov
mov
cmp
inc
out
mov
imul
sbb
cmp
pop
test
loopne
xchg
jl
adc
popf
cmp
sub
scas
pusha
fwait
xor
lods
cmp
int
testl
and
movsb
add
push
int3
aas
xor
mov
gs
shrb
sbb
lcall
in
ss
sarl
sahf
call
shl
mov
call
lea
xchg
jne
fisubs
mov
mov
pop
pop
mov
lcall
ds
and
or
xchg
rorb
mov
push
rcrb
clc
in
dec
in
or
push
sub
rcll
jo
xchg
sub
repz
xlat
lds
cltd
cmp
loopne
call
mov
or
lea
rcrb
add
jp
dec
jle
add
js
out
and
in
xor
roll
jp
sub
lods
mov
mov
sub
inc
shr
mov
jl
dec
out
jbe
adc
jno
add
fs
inc
inc
hlt
or
or
ljmp
lret
cmp
pop
add
mov
inc
into
cmp
mov
mov
xchg
push
jmp
push
out
add
jb
lock
popf
mov
cmp
lret
mov
push
shll
jnp
fwait
cmpsl
out
out
mov
mov
adc
cwtl
cmc
punpckhwd
hlt
out
mov
push
mov
cwtl
xchg
jbe
dec
arpl
and
sub
cmpsl
push
cmp
scas
fs
pop
in
mov
mov
loope
pop
aaa
sub
push
pop
insl
pop
rclb
sbb
xchg
xchg
subl
gs
aam
inc
adc
popf
addl
dec
mov
xchg
rorb
jge
icebp
mov
xchg
pop
xor
xchg
hlt
mov
addl
add
rcr
sahf
dec
dec
mov
outsl
jb
imul
int
mov
mov
cmp
or
sbb
dec
ds
mov
pop
scas
pop
mulb
mov
or
repnz
sbb
add
pop
mov
lahf
cmp
mov
and
sbb
ja
pop
in
or
movsl
pop
les
dec
daa
cmp
sub
push
sub
push
mov
dec
and
push
test
mov
icebp
sahf
sub
mov
xor
pushf
jae
loop
sbb
int3
iret
xchg
push
sub
ljmp
mov
sbbb
mov
push
test
sbb
or
dec
roll
cld
inc
xchg
jo
in
jnp
push
push
jne
das
add
cli
dec
imul
sub
loope
test
movsb
mov
mov
test
push
cmp
fbstp
sbb
jnp
out
xchg
jl
lds
je
mov
cli
arpl
into
push
jle
cli
cmp
push
pop
pusha
xlat
lahf
cld
xchg
sbb
ret
fld
mov
add
xchg
js
and
out
notb
arpl
jmp
fsubrl
test
loopne
sbb
pusha
dec
fdivrs
mov
nop
xor
lret
pusha
lahf
leave
jge
dec
sbb
mov
or
fs
or
inc
mov
cltd
and
rcrb
sbb
pop
mulb
sub
mov
jnp
pusha
sbb
insb
mov
cltd
gs
rcll
lods
insl
push
cs
push
mov
xchg
inc
mov
shll
mov
sti
xchg
or
nop
test
cwtd
xchg
push
mov
cmp
xor
push
or
jne
fildl
popa
pop
mov
das
scas
in
sub
add
lods
adc
les
adc
or
rolb
jno
repnz
btcl
and
jecxz
sbb
out
int
adc
int3
mov
push
mov
out
jne
mov
pop
imul
pusha
and
jp
bound
incl
lods
dec
adc
mov
shlb
std
push
jb
dec
mov
pop
in
add
js
std
cmp
in
cmpsb
fmul
dec
icebp
pop
fwait
iret
mov
rorb
jbe
out
cmp
clc
outsl
addr16
scas
mov
test
ffree
add
jmp
pop
out
mov
or
jle
mov
jl
xchg
in
fisubl
jge
ficoml
cwtl
repz
mov
outsb
push
pusha
repnz
test
jp
and
or
add
inc
pushf
jbe
push
out
mov
movsl
insb
mov
pop
out
push
pushf
sub
cmp
lret
je
mov
cmpsl
pop
add
shrl
stos
jecxz
or
ss
sub
add
cltd
stc
adc
out
xchg
push
push
mov
clc
into
push
jp
and
xchg
or
js
mov
test
push
xor
pop
adc
pop
lds
cmpb
and
enter
das
cmp
addl
push
mov
add
sbb
jle
jle
cli
in
add
lahf
into
enter
rorl
sub
into
repnz
lock
rorl
cltd
sbb
mov
test
mov
out
sub
mov
mov
hlt
sbb
jbe
ja
pop
call
outsb
mov
pop
push
cmp
xor
jp
mov
jmp
mov
das
xor
call
add
into
test
lret
mov
jg
or
pop
js
loope
mov
hlt
jno
fs
jbe
mov
mov
cmpsb
and
inc
sub
or
mov
dec
xor
movaps
and
pushf
out
push
adcb
imul
cwtl
orb
mov
add
dec
cld
push
lods
in
jmp
out
xchg
and
pop
push
addb
scas
jae
push
shll
out
adc
int
jnp
push
ret
pop
hlt
cmp
mov
stos
les
jb
jnp
xor
pop
cwtl
xor
stc
lds
pop
idiv
or
xchg
and
mov
out
in
cmp
adc
and
ss
cmp
shl
mov
mov
pop
xchg
dec
mov
mov
dec
inc
mov
xchg
int3
xchg
arpl
cmpsl
mov
aad
ds
dec
jnp
and
pop
ffreep
lret
fldl2e
dec
dec
std
jb
loopne
mov
mov
mov
insb
xchg
push
mov
lret
arpl
or
hlt
adc
cmc
test
mov
cmp
movsb
or
pop
popa
dec
es
loope,pn
popa
or
sbb
sti
ds
movsl
mov
dec
pushl
push
fs
push
test
push
int
pop
ficompl
in
mov
xor
stc
rol
call
movsl
div
pop
mov
shrb
lcall
mov
ret
hlt
xor
repz
bound
sbb
fcmovbe
stc
mov
push
inc
into
xor
xlat
es
test
fmull
inc
loope
dec
rorb
sbb
clc
arpl
je
outsl
mov
in
icebp
jo
cmp
lcall
lods
movsl
push
cli
inc
adc
dec
sahf
and
mov
stc
push
aas
mov
in
dec
jb
mov
jecxz
insb
cmp
call
iret
les
and
xor
sahf
push
mov
sbb
cmpsl
scas
pop
sub
popa
out
cmp
hlt
add
mov
push
bound
test
roll
lds
test
mov
insb
mov
dec
sbb
stos
pop
jmp
add
mov
or
add
stos
shrb
push
test
gs
mov
add
jno,pt
aam
mov
and
mov
outsb
sbb
call
gs
out
cmc
mov
call
mul
lods
addb
lods
sub
adc
repz
mov
sbb
sar
test
pop
cmp
xchg
in
jge
lods
stos
stos
scas
fcoms
movsb
xor
sahf
jp
mov
sbb
shrb
xor
xor
mov
in
mov
repnz
mov
adcb
adc
sbb
sti
xchg
fists
push
add
sub
std
fcomi
js
cmp
inc
sub
imulb
loope
scas
cmp
bound
jns
outsb
and
mov
inc
jg
movsb
shll
sbb
and
cmp
stos
jg
mov
add
dec
inc
call
stos
xchg
dec
adc
into
inc
pop
and
loope
cmp
addr16
mov
das
pop
mov
and
adc
lds
lds
cmpsl
out
nop
xchg
rcrl
ljmp
icebp
cmpsb
arpl
mov
push
mov
jmp
mov
mov
mov
xor
scas
test
mov
out
pop
jne
in
or
subl
dec
repz
adc
loope
adc
nop
mov
pop
inc
jnp
inc
cmp
or
stos
cs
xchg
mov
dec
imul
fmuls
loop
cmp
test
test
pmulhw
dec
xchg
jo
icebp
into
fsubrs
push
int
cmp
jne
out
orl
cmpsb
pop
repnz
popa
dec
into
mov
loope
push
mov
xchg
fmuls
cmp
into
adc
xchg
mov
xchg
out
das
test
pop
roll
mov
int
scas
ret
rcrl
sbb
push
adc
repz
cmpsb
das
lock
xor
frstor
push
lret
xchg
out
sti
xchg
lds
test
cmpxchg
mov
orl
bound
dec
pop
fwait
int3
mov
dec
jp
push
subb
aam
movsb
cmpsb
and
cmp
ja
aas
popf
mov
dec
out
xor
cld
out
neg
push
pop
repz
lods
xchg
sub
int
lea
and
xor
ret
mov
pop
xor
push
pop
fidivrs
and
xlat
pop
sahf
loop
xor
f2xm1
fimuls
dec
fisubl
lea
xchg
call
pop
mov
rcrb
repz
bound
xchg
imul
fucomi
testb
imul
pop
inc
dec
xor
push
mov
push
rcrl
lret
fdivrl
jbe
stos
sub
cmp
xor
mov
pusha
add
mov
and
popa
push
mov
rcll
sub
pop
fcompl
xchg
nop
adc
push
mov
mov
lock
out
pop
sub
and
lret
sub
mov
mov
rol
mov
pop
rol
mov
lods
push
dec
out
xor
xchg
sti
sbb
cltd
pop
lret
lods
adc
dec
sub
jmp
jge
clc
jae
enter
xchg
jecxz
orl
div
push
ss
sti
das
adc
mov
dec
mov
jmp
mov
lahf
jnp
imul
cld
and
sub
int
xchg
js
inc
mov
loope
pop
in
sub
rcll
or
insb
scas
int
loop
ja
rcr
sbb
dec
jle
psraw
jle
gs
cs
cmp
mov
mov
leave
sub
mov
movsl
cmp
out
sahf
scas
pop
cwtd
xlat
je
sub
lods
push
mul
dec
fs
sub
es
bound
jp
and
lods
cmc
ljmp
push
loope
js
enter
pop
and
dec
imul
out
or
ljmp
add
pop
imul
xchg
les
adc
dec
cmp
out
cld
or
mov
add
ss
imul
cli
mov
jbe
clc
push
rcr
je
adc
sbb
in
sbb
pusha
xor
scas
ficoml
pop
dec
das
xor
pop
ja
negl
cmc
pop
pop
pop
mov
jg
dec
mov
mov
call
mov
mov
push
outsb
test
imul
jp
lods
aas
movsl
push
jle
in
push
pop
sub
lock
or
ljmp
shl
pop
es
mov
fldt
test
dec
nop
sarl
pop
mov
add
pop
dec
xchg
pop
sbb
out
jo
int
adc
mov
popa
fs
in
mov
add
jle
pop
sub
pop
aas
nop
mov
scas
mov
pusha
and
sbb
add
jns
aam
pop
inc
jg
cwtl
push
cmpsb
add
mov
push
push
sbb
and
in
sub
push
xchg
or
pop
adc
xchg
and
scas
mov
ljmp
mov
adc
mov
mov
je
pop
lret
arpl
pop
lods
adc
pop
adc
pushf
add
pop
and
ja
call
dec
arpl
push
mov
pop
mov
dec
out
sub
mov
std
pop
inc
cli
adc
mov
inc
stos
mov
pop
xor
push
inc
enter
in
or
mov
fdivrl
mov
lods
push
aam
inc
pusha
arpl
adc
addr16
xchg
cmp
cmp
push
xor
jg
lcall
subl
push
push
loopne
mov
jp
in
pop
shl
jno
cmp
fildl
insb
xchg
push
mov
push
repnz
clc
je
mov
inc
mov
pop
jno
lea
in
mov
cltd
jns
imul
mov
or
lcall
leave
jb
pop
xor
jle
fnstsw
fistpll
inc
sub
shll
es
dec
xchg
mov
test
rcll
cld
dec
shlb
mov
mov
jmp
xchg
ljmp
or
ret
insb
out
xchg
or
test
add
pop
gs
fisttpll
sub
sub
in
mov
and
sahf
test
rcll
daa
mov
sbb
pushf
mov
dec
int3
notl
xor
xchg
enter
test
inc
mov
jnp
aad
ret
mov
sbb
imul
mov
add
add
cmpsb
pop
sar
push
fidivrl
dec
pop
test
lea
es
jo
lods
inc
xor
dec
jp
nop
stc
js
fnstenv
cmpsb
dec
shrd
andl
lds
xchg
add
cld
and
lret
add
pmulhw
cwtl
in
sti
sub
mov
sbb
and
inc
pop
xchg
or
lret
stos
std
push
jle
xor
push
int
cmpsl
cli
adc
add
add
xor
xchg
inc
and
aam
push
mov
or
push
xor
pop
jge
pusha
bound
and
or
cmpsl
mov
out
dec
jb
inc
sbb
ljmp
and
enter
test
mov
pop
test
lret
leave
fadds
test
and
pop
xchg
or
dec
cwtl
sbb
pop
dec
sub
inc
mov
enter
ffree
decl
push
xchg
aas
xlat
xor
and
push
test
adc
test
inc
movsl
mov
cmp
imul
movsl
shl
fstpt
ret
push
push
adc
mov
aas
mov
lods
sub
jle
pop
sbb
negb
adc
repnz
cmp
xchg
push
inc
test
shll
sbb
cmp
cmp
inc
test
sbbb
mov
xchg
mov
test
pop
or
icebp
xchg
pushf
fisttps
sbb
jg
call
sti
pop
loopne
bound
adc
js
aaa
das
outsb
fwait
mov
pop
push
out
adc
inc
dec
iret
push
in
outsb
pop
inc
inc
fcmovnbe
dec
lods
pop
pop
jbe
test
in
xchg
stos
sbb
jne
xchg
aam
test
jnp
sahf
jnp
out
push
and
pop
rcrb
fbstp
xchg
mov
int3
test
adc
pop
jecxz
lock
sbb
push
and
in
adc
aaa
xchg
imul
btcl
and
inc
shll
insb
mov
pop
cmp
dec
adc
or
fucom
push
mov
mov
sbb
jns,pn
aam
movsb
imul
incb
add
mov
icebp
pusha
repz
jl
jmp
fimull
repz
mov
mov
mov
push
xchg
xchg
and
neg
cmpsl
test
sbb
hlt
sbb
std
loope
inc
test
call
inc
jecxz
cmp
call
xchg
fs
xchg
inc
call
pop
push
hlt
add
out
loope
subb
in
jp
sub
xchg
jecxz
cmp
push
xor
loope
xorb
push
cwtl
cmp
fwait
lds
mulb
or
mov
mov
mov
mov
push
jne
sbb
jmp
dec
or
shll
mov
je
mov
iret
dec
aas
adc
mov
xor
das
or
es
add
mov
or
lock
mov
mov
push
pop
or
mov
push
fnstcw
adc
ret
mov
ds
nop
fucomip
ja
daa
rorl
cmpsb
mov
xchg
sbb
mov
js
cmp
cwtl
outsl
jmp
jle
or
imul
or
mov
lods
jecxz
mov
sbb
adc
out
mov
out
inc
pop
lods
fsubl
xchg
mov
cmp
pop
sbbb
xor
xchg
sbb
pop
enter
lds
sbb
jns
jg
adcl
dec
sub
push
orb
xchg
mov
jne
fldt
push
aaa
shrl
es
rclb
adc
je
test
xlat
add
add
mov
mov
or
fcoms
popa
movsb
adc
leave
pop
mov
icebp
movsl
add
mov
int3
and
std
fcmovb
std
mov
sti
rcpps
inc
xbegin
dec
stos
jbe
data16
add
dec
lock
test
mov
and
cld
push
lods
dec
dec
sti
fwait
pop
in
mov
insb
mov
xor
aas
mov
push
dec
pop
mov
pop
js
jnp
sar
or
pop
push
and
xor
mov
mov
sub
popa
pushf
inc
call
cmp
sbb
xchg
pop
or
fstps
jae
ja
int3
fildl
inc
in
inc
inc
outsl
or
pushf
mov
aas
jp
stos
xchg
sbb
mov
rorl
push
dec
pop
xor
int3
idivl
fisubrs
daa
pop
out
pushl
xor
es
xchg
sahf
mov
test
inc
jo
mov
push
dec
repz
jl
push
repnz
icebp
das
cmp
and
minps
aam
notb
push
fcmovbe
fldl
jae
or
sbb
xchg
and
scas
lret
xchg
push
out
pop
xchg
call
adc
outsb
mov
and
ret
icebp
in
lods
add
xor
jl
push
mov
cmpsb
addl
imul
inc
dec
mov
jg
aad
or
shl
jnp
xchg
mov
mov
stos
adc
loop
call
test
and
mov
push
lret
mov
nop
add
stos
xchg
jno
lds
hlt
xor
lahf
scas
xchg
pusha
scas
add
sub
xchg
shll
roll
sub
xchg
aas
shlb
fs
imul
sub
cmp
xchg
rolb
loop
int
insl
loopne
fsubr
imul
adc
ss
ss
mov
cltd
mov
aad
lea
movsb
and
dec
mov
mov
push
cmc
int
inc
inc
xchg
adc
bound
lahf
sbb
dec
inc
or
mov
sub
and
sahf
cli
xchg
push
mov
call
jmp
dec
lahf
lea
adc
notl
sbb
push
stos
insb
iret
lods
jmp
adc
mov
sti
imul
xchg
jmp
xchg
int3
cmp
pusha
and
mov
dec
xlat
jecxz
test
mov
test
mov
inc
lds
aaa
pop
or
adc
dec
lods
je
pop
mov
dec
pop
out
jecxz
std
in
ror
sbb
insb
rcl
out
mov
dec
and
sbbl
jmp
add
je
cltd
jmp
inc
fwait
daa
sub
jbe
mov
test
or
mov
sbb
insl
mov
cmp
loop
scas
mov
neg
jl
inc
stos
out
int3
leave
or
dec
popa
test
mov
lods
rcll
sub
mov
pusha
push
mov
add
lea
andl
mov
or
inc
xor
pop
xchg
push
ss
lret
rcl
mov
jo
test
out
jg
fstpt
and
pop
aad
bound
adc
jl
les
out
leave
in
imul
in
mov
hlt
fs
out
in
not
cmp
int3
insb
in
xchg
xchg
sub
pusha
cmp
or
push
iret
inc
mov
popf
mov
add
mov
shlb
mov
cmpsl
mov
inc
fldl
cmp
shll
dec
sub
nop
and
and
inc
sub
fisttpl
xor
jg
test
and
dec
clc
jns
pop
andb
xchg
sahf
ss
fnstcw
dec
cmc
in
stc
add
int3
jns
inc
sub
icebp
inc
loopne
sbb
popa
stc
add
roll
or
mov
xchg
adc
or
out
mov
adc
xchg
aas
loop
repz
or
pop
jecxz
jge
arpl
icebp
addl
sub
fs
scas
scas
idivl
adc
xchg
and
je
flds
mov
mov
and
insl
push
jecxz
rcll
pusha
xchg
cmp
xor
mov
aas
es
pop
sti
push
add
push
cmpsl
push
roll
popa
lock
rcr
push
lea
ret
in
lcall
cli
mov
dec
es
jnp
mov
push
outsl
lea
ret
sbb
or
ljmp
inc
sbb
push
mov
in
inc
clc
xrelease
ss
jae
mov
repz
push
xor
out
loope
cli
inc
cmp
lcall
pop
or
cli
and
lock
arpl
xchg
adc
mov
add
push
mov
dec
leave
bound
jg
xchg
in
std
test
lods
jbe
pop
jbe
hlt
icebp
cmp
stos
js
and
add
rorl
imul
push
jmp
mov
mov
sbb
insb
fwait
sarl
inc
cmp
lock
dec
lods
mov
xor
push
jno
mov
xchg
scas
fsubp
sbb
popa
add
dec
or
cld
sub
mov
sbb
popa
jns
sub
adc
dec
xor
sub
jecxz
test
mov
dec
imul
in
mov
dec
mov
dec
insb
pop
sub
jg
push
dec
sti
push
mov
orl
pop
out
ljmp
test
dec
mov
and
rcrl
repnz
pushf
pop
lock
inc
fwait
xchg
lods
pushl
dec
js
xor
mov
add
dec
pop
cmp
outsl
xchg
stos
sbb
xor
outsb
bound
sbb
ret
pop
arpl
insb
shlb
loopne
xor
push
cld
mov
inc
cmpsl
mov
lret
dec
push
lods
pop
stos
cltd
or
xor
push
xchg
and
stc
sub
jle
mov
loopne
adc
add
sbb
mov
lret
push
sbbl
aas
test
jno
jae
repnz
add
std
sub
and
fwait
add
pop
jns
bound
pop
and
test
dec
clc
jl
movsb
xchg
cli
sahf
mov
mov
cmc
dec
cltd
mov
push
int
mov
sbb
aas
xchg
in
stc
insl
scas
fiaddl
cli
je
or
imul
aam
mov
push
rclb
rep
push
xor
lods
jo
adc
jo
clc
sub
dec
ds
pop
fsubrp
fsts
mov
dec
jne
add
std
insb
test
mov
sarb
pop
xorb
hlt
adc
xchg
jne
movsb
push
jecxz
fwait
loope
shl
add
popf
jbe
stc
or
lods
lahf
mov
mov
test
mov
dec
popa
and
ljmp
in
or
aas
or
sub
push
xchg
les
fsts
push
mov
inc
dec
adc
test
dec
push
add
int
iret
int
fdivr
movsb
int
js
and
sbb
loope
or
cmc
dec
inc
or
leave
lahf
push
dec
dec
push
rclb
jno
imul
loopne
das
adcl
nop
jp
jne
mov
pop
pop
sub
xchg
subl
rcr
cmp
decl
cltd
cs
clc
aaa
xlat
mov
or
iret
xchg
or
or
out
sbb
dec
ja
fcmove
cvtps2pd
mov
push
scas
jecxz
enter
xchg
jno
push
xor
dec
out
push
scas
in
xor
enter
jl
mov
pop
scas
jmp
adc
fs
test
and
push
push
sbb
mov
lret
mov
popf
mov
and
dec
mov
pop
orb
fstpt
das
mov
or
pop
dec
shlb
decl
mov
pop
pop
fiaddl
insl
cmpsb
mov
arpl
shr
loopne
rcll
inc
inc
data16
jecxz
nop
pop
and
decl
pop
push
cmp
push
sbb
push
std
lods
mov
cmp
and
jo
push
aam
ror
xlat
sbb
lock
mov
mov
adc
mov
jne
pop
xor
push
mov
std
clc
or
imul
shlb
data16
xchg
mov
pop
ds
jo
sub
mov
jmp
pop
inc
gs
cmp
into
rclb
test
insl
pop
push
out
xchg
imul
lcall
jo
lahf
in
and
jbe
lret
out
pop
xor
jp
or
jmp
cmp
cmpsl
jmp
jmp
xchg
mov
int3
cmp
movsl
or
rol
fistps
cmp
cld
nop
jne
rolb
mov
insb
xchg
mov
sbb
mov
mov
jbe
jns
inc
lea
jbe
cmp
loop
dec
push
pop
fwait
gs
out
cmpl
or
stos
mov
xchg
int3
out
jb
sub
int3
iret
testl
xor
mov
cmp
jae
mov
xchg
jmp
and
dec
push
adc
adc
je
mov
aaa
mov
in
fildll
int
fadds
jb
jnp
mov
cmpsl
sbb
dec
inc
hlt
cltd
cli
movsl
sub
and
repnz
xor
adcl
je
je
pop
lcall
push
out
loope
fdivl
bound
jne
pushf
adc
adc
sbb
or
xchg
test
mov
loop
aad
and
jne
in
jecxz
test
xor
iret
ja
add
les
push
jg
sti
xor
out
xchg
cwtl
les
mov
dec
inc
shr
sbb
cltd
test
cmp
andb
lret
mov
stos
xchg
xlat
dec
out
fcompl
xchg
or
in
and
xor
xor
mov
sbb
add
mov
fs
hlt
out
or
stos
inc
adc
les
mov
adc
loop
or
xor
push
mov
pop
add
push
xchg
adc
xchg
and
sbb
or
push
test
xchg
or
shlb
les
push
lock
or
push
pop
scas
mov
push
push
lock
add
adc
leave
fsts
cmp
into
stc
js
sbb
ret
scas
adc
leave
js
sub
lahf
sub
inc
fidivs
cmp
scas
insl
into
mov
fsts
imul
cwtl
dec
pop
dec
and
mov
dec
and
iret
add
dec
jne
nop
push
pop
mov
roll
push
or
sbb
dec
sub
jle
test
imul
ret
pop
sti
inc
xor
mov
iret
sbb
push
call
inc
in
xchg
popl
lods
maxps
dec
xchg
dec
out
push
std
dec
dec
std
xchg
shll
inc
mov
out
ret
popa
mov
popf
ds
out
inc
das
mov
sbb
loope
jbe
lds
push
lahf
loopne
cmp
pop
add
mov
leave
xor
notb
iret
inc
pop
fists
stc
mov
jmp
cmp
ret
jge
inc
xorl
mov
add
sbb
pop
hlt
mov
or
sbb
mov
or
xchg
fs
pop
fwait
adc
xor
into
insb
xor
mov
push
fidivrs
shrb
repz
inc
mov
cmc
leave
or
jecxz
inc
inc
mov
lea
and
movsb
xchg
jg
lods
insb
xchg
jle
push
mov
pop
lock
push
push
lock
or
push
mov
mov
sbb
xchg
fimuls
mov
cmc
push
push
xchg
dec
sti
pop
outsl
hlt
jle
fmul
mov
jnp
sbb
movsl
adc
adc
cli
and
inc
jmp
repnz
scas
xor
int3
mov
into
or
divl
cs
lea
dec
das
scas
add
mov
out
adc
mov
cmpl
cltd
daa
sbb
mov
mov
test
fnstsw
push
das
sbb
inc
add
fisttpll
fcos
jo
mov
clc
xchg
outsl
push
sbb
lcall
inc
mov
je
stc
arpl
sar
imul
sbb
xchg
outsb
adc
cmpsl
jecxz
daa
loope
sub
mov
stos
imul
mov
or
pop
sbb
xor
call
fsubrl
xor
inc
push
stos
xchg
cmc
scas
jne
lret
int
or
pusha
lds
xchg
insl
adc
push
xlat
push
inc
push
push
js
sti
push
int3
popf
sbb
cmc
inc
push
ja
mov
shrl
push
ffree
scas
sbb
arpl
pop
xchg
pop
pushl
push
popf
xor
out
cmpsl
sub
das
mov
adc
loop,pt
into
push
outsl
shrb
out
add
ret
cli
mov
mov
je
cmp
imul
pop
push
mov
shll
xchg
stos
sub
push
test
outsb
mov
ffree
xchg
in
loop
xor
push
dec
movsl
daa
cmp
sub
imulb
adc
push
aaa
fisttpl
add
push
sub
xorb
rcr
sti
out
mov
jl
adc
or
out
clc
jle
test
hlt
inc
dec
mov
pop
ljmp
rorl
jg
pop
cmpsb
cwtl
mov
adc
mov
xor
ss
sub
nop
popa
daa
in
jnp
add
jp
mov
mov
or
xchg
nop
loope
aaa
lcall
jnp
int3
dec
mov
sbb
inc
and
nop
sbb
cmp
sub
popf
addr16
rcl
mov
sbb
xlat
jo
and
xor
and
or
aas
lcall
adc
rcrl
mov
out
sbb
mov
loop
and
jo
out
outsl
dec
out
mov
notl
jnp
ret
mov
sub
pop
and
jnp
add
dec
cmp
les
fimuls
push
mov
sub
popf
push
stos
loop
call
shll
mov
mov
sbb
int
hlt
out
ds
mov
in
mov
mov
jg
push
inc
or
sub
sbb
pusha
fwait
mov
push
pop
leave
jmp
lds
push
cmp
push
ret
pop
out
xchg
popf
aaa
inc
push
xchg
enter
and
push
dec
xchg
daa
or
sub
inc
sbb
test
sbb
pop
mov
pop
dec
sub
xor
mov
mov
roll
sub
pop
push
nop
fldt
adc
cltd
out
int
ds
cmpsb
and
into
andl
call
push
and
sahf
inc
push
cmp
adc
sub
ret
inc
imul
dec
cmpsl
pop
jp
cmp
pop
xchg
repz
fnstsw
xchg
orb
stc
sub
pop
cmpsb
arpl
and
sbb
pushf
mov
push
fsin
dec
test
xor
popf
push
icebp
test
sub
jnp
ret
push
in
pop
push
or
je
inc
xor
loopne
call
iret
lock
cmc
aas
pop
cmovge
cmpsb
jns
negl
cmp
push
shrl
jnp
imul
push
add
mov
mov
and
leave
lock
scas
adc
ss
inc
push
jae
test
push
or
ss
mov
cmp
pushf
test
dec
stos
aam
clc
add
inc
push
jmp
jle
sbb
xchg
xor
bound
subb
mov
lds
loope
es
sbb
les
add
dec
cmp
mov
jno
push
jns
jg
push
in
rorl
xchg
mov
outsb
inc
out
pushf
repnz
mov
loop,pn
iret
mov
adc
stos
jl
add
inc
xchg
xchg
mov
pop
cmp
adc
jae
inc
jmp
iret
or
mov
dec
adc
or
inc
in
mov
loope
je
imul
fcomps
in
cmc
sub
decb
arpl
cmp
pop
pop
scas
dec
lds
lock
aam
pop
push
idivl
push
push
jle
mov
cmpsb
mov
push
addr16
pop
lods
icebp
je
repnz
das
mov
imul
jns
and
jb
loop
and
jnp
xor
cmp
pop
lock
call
jecxz
movsl
dec
fsts
xor
jl
jae
sbb
ficompl
jne
imul
imul
stc
jmp
sub
and
cltd
mov
decl
in
rclb
aaa
cli
ja
icebp
mov
lcall
adc
dec
pop
and
push
or
scas
push
cmp
aas
push
add
jae
sbb
sbb
fldenv
xchg
icebp
lahf
dec
dec
out
push
cmp
stos
or
outsl
pop
inc
fisubrs
stos
cmp
ds
xlat
mov
mov
or
orl
push
dec
std
inc
or
mov
in
lret
cmc
fs
out
fsubs
mov
xor
and
ret
scas
xchg
adc
rclb
into
jbe
cmp
push
adc
into
enter
iret
lcall
mov
xchg
pop
test
mov
lret
adc
dec
cmp
idivb
pop
inc
test
jecxz
jl
jbe
fdivp
flds
in
popf
lret
mov
mov
mov
cli
shlb
mov
mov
es
sbb
inc
mov
add
push
cld
jbe
xchg
loope
add
sbb
sbb
push
insl
scas
mov
fdivrs
jno
leave
push
push
test
sub
arpl
out
mov
mov
sbb
insb
popa
movsl
ss
sub
popf
popf
adc
xchg
xchg
dec
push
jno
mov
outsl
jae
adc
in
xchg
inc
shlb
pop
dec
fsubrl
and
loopne
lahf
cwtl
lock
xchg
std
fldl
stc
imul
jl
xor
pushf
mov
sub
push
xor
andb
xor
insl
loop
mov
jg
pop
insl
js
adc
popl
fstl
std
cmpsb
sub
add
mov
insl
jmp
clc
dec
rorl
push
movsb
clc
pusha
pushf
das
mov
daa
scas
xchg
lret
mov
cmp
jne
push
mov
scas
loope
inc
hlt
and
addr16
scas
sub
mov
in
xchg
mov
je
sub
adc
rcrl
xchg
shl
loopne
mov
xor
int
xchg
xchg
out
jns
cmp
sbb
andb
mov
pop
xor
add
mov
xor
sbb
adc
push
and
xchg
jno
pop
mov
test
je
pusha
xor
decb
inc
and
stos
cmp
push
in
insb
mov
ret
and
cmp
sahf
push
add
ficoms
sbb
jne
repnz
sbb
testb
sti
subb
aas
ret
call
mulb
xchg
out
fsubr
pop
adc
jp
mov
outsl
pop
jle
sub
cmc
sbb
sub
hlt
in
sub
sub
rcrb
push
and
mov
mov
xchg
mov
out
sbb
cmp
pusha
rolb
es
jbe
fbld
into
mov
fwait
icebp
add
jns
lea
sbb
adc
xchg
mov
cmpsb
insb
lds
xor
lret
cs
mov
cmp
call
or
xlat
inc
mov
mov
or
daa
je
repnz
mov
adc
cmpsl
mov
xchg
fbld
cmpsb
jns
xlat
in
incl
jo
cmp
mov
jmp
sbb
add
mov
lahf
cmp
fs
rcrl
pop
mov
xchg
inc
out
std
mov
daa
imul
repz
adc
mov
sti
add
pop
and
filds
mov
xchg
pop
fucom
outsb
xor
xor
adc
orb
sbb
or
and
decb
lock
in
or
jo
sub
lock
shlb
out
add
lods
sbb
jle
dec
mov
ret
pop
dec
cmpsl
inc
push
out
ficompl
repz
mov
push
adc
mov
lret
pop
mov
mov
mov
xchg
fidivs
rorl
sarl
sbb
pop
popl
pusha
dec
pop
rclb
pushw
pop
adc
push
stc
sbb
mov
mov
fwait
js
lds
xlat
inc
inc
inc
xor
test
mov
cmpsl
mov
sbb
iret
mov
les
icebp
jno
or
dec
mov
xchg
adc
and
dec
mov
mov
or
ds
inc
cli
sub
in
pop
mov
mov
in
or
xor
inc
int3
cmp
divb
fs
lods
xchg
mov
pop
xor
jnp
xchg
pop
rolb
dec
mov
sbb
lret
mov
adc
push
mov
jo
mov
sbb
in
cs
lcall
mov
sub
bound
mov
or
test
fldt
mov
imul
or
test
lea
push
push
imull
cwtl
sub
int
pop
enter
sub
inc
fstpl
imul
dec
lock
push
and
jb
sarb
aam
inc
dec
out
dec
out
icebp
push
in
pop
sbb
mov
add
mov
push
sub
test
sti
mov
sarl
sbb
imul
cmpsb
dec
pop
cmp
push
mov
inc
xor
add
sbb
mov
ret
sti
lds
push
scas
adcb
loopne
std
or
cld
cmpsb
sub
push
xchg
xor
rcl
jle
das
jae
xor
fucomi
sbb
sbb
fmul
and
outsb
adc
pop
mov
inc
fld
pushf
xchg
xor
sbb
cmc
push
popa
pop
lret
push
add
out
mov
and
mov
fucomi
push
test
ljmp
pop
push
shl
ljmp
cmp
popf
ds
shlb
push
dec
push
sbb
mov
mov
mov
jge
test
add
push
xor
gs
fdivl
sub
es
imul
clc
inc
ficompl
dec
xor
mov
jp
sbb
mov
lods
mov
int3
push
push
adcl
adc
sbb
sub
add
insl
cs
push
aad
mov
inc
xor
fmull
movsb
scas
mov
bnd
lret
jno
jbe
inc
repnz
push
jae
das
lock
push
sahf
nop
addr16
pop
pop
sub
into
mov
adc
mov
scas
sub
mov
dec
and
gs
sub
jns
push
jge
mov
lret
cli
repz
pop
jle
cmp
aad
jle
icebp
in
jmp
add
and
aam
sub
test
mov
fidivs
mov
lods
cmp
add
cmp
jmp
scas
addr16
lret
xchg
outsb
sub
dec
push
mov
lods
xchg
jae
or
test
sub
stos
mov
and
imul
add
imul
clc
mov
lea
or
fdivl
pop
sub
aam
sub
xlat
cltd
xchg
rcll
aad
mov
out
fistpll
into
mov
rorb
cmpsl
jecxz
cmp
lods
cmpsb
add
test
ss
stos
adc
xchg
repnz
iret
add
jp
aaa
and
in
xor
xchg
jb
xchg
xchg
fbstp
cmp
sbb
daa
mov
outsl
dec
cmp
inc
div
in
mov
push
bndstx
test
mov
dec
fmul
nop
fsub
mov
and
mov
lock
lret
dec
mov
iret
xchg
mov
aas
pop
cld
dec
mov
mov
lcall
sbb
fcomps
mov
jno
vxorps
add
into
cld
enter
jmp
jge
adc
jb
push
mov
sub
mov
loop
push
fcmovnb
mov
ret
or
cltd
mov
imul
sbb
and
mov
dec
arpl
or
fwait
pop
cmp
xchg
xlat
add
sbb
mov
cli
sub
aas
lcall
mov
scas
mov
xchg
jle
jge
dec
mov
aam
xchg
pop
stc
sbb
in
or
pop
xchg
mov
jns
sahf
dec
and
lret
mov
xor
pop
sbb
aam
jl
mov
enter
jge
and
aam
pop
into
cmp
jl
jecxz
sub
and
cmc
sub
push
adc
sub
aas
lods
shlb
cmpsl
mov
fbld
xor
sahf
jl
testl
mov
repz
out
ja
jge
add
decb
pop
mov
iret
daa
push
xchg
punpckhbw
sub
lods
adc
cmp
and
jmp
test
loopne
jle
ja
scas
sbb
repz
jns
mov
push
inc
fs
pop
and
cmp
aaa
mov
addr16
cmpsl
adc
fldcw
scas
sub
mulb
or
add
mov
sbb
mov
pop
das
rcr
xchg
ds
xor
xchg
dec
dec
xchg
pushf
dec
out
adc
test
test
jbe
cmp
lock
add
xor
int3
sub
add
push
adc
stos
stos
and
push
xor
sysenter
daa
dec
jne
fsubl
inc
dec
shll
mov
mov
mov
push
and
and
jns
shr
nop
movsl
in
test
pop
adc
addb
or
lahf
sbbb
jg
repnz
adc
mov
sbb
or
xchg
mov
xchg
aad
repnz
cltd
pushf
pop
inc
jecxz
jno
xor
jns
mov
mov
sub
test
mov
xor
push
lea
adcl
inc
or
sbb
xor
mov
inc
test
or
dec
insb
pusha
and
adc
xchg
or
fwait
int
aaa
mov
push
nop
push
into
inc
xchg
sahf
cli
mov
dec
jp
jl
push
mov
add
sub
pusha
add
in
shrl
hlt
sub
iret
cmp
dec
repnz
shlb
xchg
loopne
pop
add
push
push
arpl
insb
mov
xchg
xor
and
push
jno
jmp
shlb
out
je
fimuls
fbstp
pop
into
push
gs
pop
rorb
aaa
dec
pop
int
or
jae
adc
mov
lds
in
jns
aam
xchg
cmp
lods
notl
jo
js
dec
mov
add
xor
out
fwait
pop
hlt
or
mov
aam
pop
inc
scas
mov
adc
ljmp
mov
imul
mov
adc
pop
scas
mov
adc
dec
pushf
jns
fld
sub
enter
xchg
xchg
jae
mov
sbb
sub
out
fnstsw
xlat
cmp
cmc
push
add
cmpsb
test
sub
shrb
add
movlhps
sahf
cmp
pop
push
nop
lret
adc
jne
stos
pop
xchg
sbb
mov
scas
mov
mov
clc
loope
xor
cmp
scas
mov
ret
fldenv
cltd
inc
jl
rcll
add
mov
xor
es
cs
dec
es
sbb
out
inc
mov
outsl
movsl
ret
ret
mov
push
sbb
mov
in
fwait
inc
mov
and
cli
mov
jle
adc
loop
push
jp
mov
fcmovne
xchg
movsl
lahf
dec
cwtl
jmp
stos
ds
jp
sbb
jb
push
push
jl
dec
push
stos
fcomip
rorl
fwait
movsb
push
sub
gs
addr16
mov
jecxz
fs
notl
ficoms
inc
mov
mov
inc
push
jle
sahf
jb
adc
rorl
sahf
push
mov
adc
jge
jmp
clc
jecxz
jmp
mov
mov
mov
outsl
cmp
mov
dec
shrb
pop
inc
inc
lret
or
or
cltd
xchg
mov
pop
sbb
mov
lret
push
fisubl
push
lea
push
pop
loopne
loope
mov
fmull
dec
dec
jl
mov
push
out
pop
js
mov
mov
push
repnz
mov
test
push
or
dec
push
test
data16
xorb
push
cli
addb
pop
push
out
fmuls
push
stc
push
loopne
mov
fs
sbb
cmp
fldenv
xchg
mov
adc
mov
scas
mov
stc
inc
fldt
popa
pop
leave
loop
dec
mov
addr16
push
push
inc
jbe
xorb
or
cli
jecxz
adc
subb
adcb
ja
pushf
clc
adc
xchg
xchg
mov
sub
rcll
inc
push
xchg
xchg
popa
cmc
cmp
loop
rol
stos
fwait
enter
mov
dec
dec
mov
cmc
push
xchg
out
test
sarb
mov
pop
ljmp
pop
pop
or
mov
mov
movsl
or
inc
in
mov
add
mov
orl
inc
pop
push
sbb
xor
fst
je
into
push
dec
sarb
fucomp
dec
xchg
repnz
jg
xchg
in
not
add
jmp
jl
inc
loope
push
scas
xlat
adc
lret
outsb
gs
int3
rorb
dec
mov
dec
shll
mov
mov
dec
jmp
sub
jo
sahf
ficoms
movl
sbb
inc
push
test
mov
repnz
aas
fs
sub
mov
jae
dec
mov
add
add
cli
lods
fwait
movsb
add
cmp
jno
cmp
lret
or
mov
fwait
aad
xchg
arpl
into
add
lods
pop
scas
add
loop
push
popa
cli
aam
fstl
shll
sub
dec
sub
mov
inc
fildll
pop
dec
loope
dec
call
mov
stos
mov
or
xchg
adc
lret
or
add
out
xor
mov
mov
ss
adc
dec
xchg
pop
sbb
bound
scas
lds
inc
push
hlt
xchg
sbb
and
add
adc
cmp
shrb
or
xor
xchg
stos
cmp
mov
fcoml
jmp
dec
popa
lcall
arpl
mov
je
xor
mov
mov
and
daa
inc
fbld
adc
sti
ud0
gs
or
leave
xchg
push
adc
adc
dec
sahf
and
je
popf
jl
loopne
sub
pop
cmp
call
jb
daa
mov
xor
cmp
lret
and
adc
fistps
xchg
jo
mov
xlat
or
mov
fimuls
insl
push
add
loopne
adc
mov
icebp
out
or
loop
loope
dec
fs
xor
pop
iret
pusha
loope
test
add
pop
mov
dec
imul
outsb
sbb
push
push
sub
shlb
jge
mov
fsubrs
mov
or
sub
popl
sbb
mov
cltd
andl
push
stos
imul
pop
out
and
xchg
xor
mov
out
mov
bound
clc
test
xor
inc
lods
bound
loope
push
push
gs
push
pop
lds
loopne
sbb
mov
outsl
mov
in
sbb
push
jmp
adc
or
out
bound
scas
lar
call
sub
xchg
std
loope
gs
add
je
inc
adc
rcl
add
std
int3
jne
repnz
and
aas
sbb
pop
das
pop
xchg
es
inc
pop
fwait
inc
ja
cmp
push
leave
std
das
dec
movsl
mov
pop
jae
pop
fwait
in
jecxz
cmp
pop
out
and
negb
test
mov
iret
out
cltd
cmp
push
ret
sub
shlb
cmp
dec
sub
outsl
mov
or
sub
push
inc
and
dec
lret
faddp
cltd
inc
add
lods
leave
testb
or
or
daa
xchg
xchg
push
pop
repz
pop
mov
pop
push
xor
test
pop
out
int3
push
cmp
mov
xchg
push
sbb
hlt
ret
fbstp
mov
test
dec
mov
and
fidivs
sbb
mov
fs
mov
mov
xor
dec
aas
imul
scas
or
test
xor
xor
repz
xchg
adc
lds
stc
sub
pushf
xor
mov
mov
pop
loopne
jns
sbb
xchg
aad
mov
mov
mov
out
jns
mov
or
das
fisubrl
inc
pop
into
jmp
add
daa
out
cmp
xchg
add
mov
test
adc
and
xor
cltd
jne
sub
test
ljmp
fwait
sub
and
test
push
mov
sub
jnp
sbb
inc
insl
ljmp
mov
int
xchg
jecxz
je
or
sub
ds
or
cmp
leave
gs
pushf
fdivrs
fcomip
into
xchg
cmc
xchg
ficoms
fmuls
scas
pop
or
fwait
mov
mov
and
sub
cmp
lock
pop
and
test
jg
jb
fisttpl
jge
mov
cwtl
sbb
pop
mov
mov
pop
mov
push
jbe
add
daa
push
fbld
test
dec
adc
and
rcll
incl
pop
icebp
mov
sbb
adc
fcomps
push
das
jnp
or
sub
sub
test
mov
push
nop
gs
pusha
pop
push
ret
rorb
cmp
faddp
fsts
inc
loop
aad
sub
xchg
cmpsl
xor
adcb
rol
cli
lds
dec
mov
adc
mov
inc
xchg
jne
inc
add
mov
in
pop
js
add
inc
jle
jno
jg
cltd
sbb
popl
cwtl
notb
mov
push
fcoml
nop
cmp
shrl
movsl
sahf
lods
adc
jl
jne
mov
in
or
int3
ljmp
jnp
popa
push
shrb
pop
mov
sub
mov
inc
pushf
das
popa
xchg
sub
cli
popa
jl
push
fstpt
out
repz
xchg
sti
pmuludq
pop
js
enter
inc
incb
std
add
cmp
mov
xor
das
aam
orl
insl
and
scas
and
sbb
out
xchg
sbb
cmp
es
in
and
dec
mov
cmp
fdivs
jne
ds
dec
push
imul
rcl
in
xchg
xchg
adc
into
push
or
dec
mov
dec
inc
repz
mov
xor
mov
push
jae
ret
dec
decl
mov
test
fisubrs
mov
cmp
adc
clc
dec
add
rcll
out
add
dec
mov
jo
cmp
inc
jbe
flds
aam
dec
in
mov
call
inc
push
test
push
pop
out
aam
jo
fists
sub
fnstsw
in
adc
popl
in
test
testb
sub
mov
fldcw
imul
add
adc
popf
js
push
xor
push
jg
loopne
fucom
lret
popf
lcall
gs
adc
xchg
sbb
aaa
mov
nop
lock
fwait
mov
pop
push
loop
mov
push
cli
and
cltd
in
scas
rcll
rep
ja
popf
sbb
addr16
cmovb
loopne
or
push
jbe
and
pop
dec
js
outsl
sbb
xchg
popa
xlat
leave
testb
pop
mov
popa
push
push
xchg
cmpsb
nop
cmp
popf
jno
inc
sub
jno
jne
inc
cltd
push
xor
dec
outsl
cmp
popa
cmp
ss
dec
das
xchg
cmp
mov
arpl
xor
push
push
cmp
das
es
rclb
adc
sbb
gs
jl
out
dec
pusha
and
lret
fiadds
lea
in
lods
pusha
inc
call
xor
xor
jne
test
lret
sbb
add
pushf
insb
jo
push
mov
or
push
xchg
sbb
and
mov
mov
out
adc
std
xlat
xor
leave
das
nop
ss
popf
dec
jecxz
mov
or
inc
xor
rcl
ss
or
sbbb
mov
out
push
mov
inc
xchg
test
jnp
lock
aad
dec
mov
jns
push
negb
mov
incb
imul
and
xchg
lret
jnp
add
sub
jne
repnz
lds
scas
fucomp
mov
dec
std
loopne
js
into
into
loop
pop
lcall
sbb
shlb
sbb
mov
mov
or
sub
loop
stos
mov
adc
xor
imul
lret
jbe
add
cltd
cltd
lahf
jb
mov
or
and
mov
mov
adc
pushf
divb
sbb
in
mov
aaa
das
das
xchg
push
xchg
aas
fdivl
cmp
mov
daa
sbb
cli
fwait
clc
mov
shlb
mov
pop
psubq
divl
jbe
and
movb
mov
adc
outsb
scas
xor
rorb
push
add
mov
fwait
push
dec
movsl
sub
jb
stos
ja
mov
daa
addb
dec
jge
jl
fisubrl
or
loop
lret
pop
mov
and
lret
xorl
jmp
xchg
popa
cld
pop
outsb
push
ljmp
incl
push
idiv
adc
lret
fs
jnp
orb
xor
lret
lods
mov
sbb
mov
imul
push
in
cmc
pop
cmp
aad
jg
popl
mov
pop
xor
push
popa
pusha
insl
sarb
mov
mov
mov
xchg
outsb
mull
inc
push
imul
sbb
jge
test
fstps
mov
lds
in
cltd
repz
dec
test
inc
xor
cwtl
sbb
dec
std
cld
rolb
xchg
mov
sbb
mov
mov
pop
sbb
jne
sar
lock
arpl
mov
dec
loopne
xchg
mov
sahf
jno
insb
mov
mov
adc
jg
lcall
repnz
and
push
or
adc
mov
jl
jge
mov
fs
fiaddl
loop
pushf
clc
sub
cmc
flds
shll
fidivl
std
hlt
cli
fldt
pop
sub
cmp
add
lock
hlt
icebp
jns
jbe
subl
lds
adc
cmpsb
dec
and
mov
addr16
mov
mov
sub
cmp
jmp
bound
jbe
pop
push
lock
inc
cmp
in
data16
jne
jb
mov
out
sub
dec
mov
iret
cmp
dec
dec
mov
in
xchg
das
lret
and
mov
adc
lods
xchg
pusha
shll
pop
stos
in
int3
in
mov
mov
mov
rcrb
cmpb
test
inc
adc
push
and
xchg
repnz
adc
lret
incb
jne
int3
andl
imul
sbb
mov
lret
lds
rorb
leave
icebp
xchg
pop
and
push
fs
add
xlat
gs
mov
out
call
xor
clc
lods
int3
enter
movsb
pusha
aaa
mov
push
pop
push
test
out
pop
rsqrtps
add
push
cmp
push
es
sub
add
xchg
lods
insl
sub
jl
add
mov
jo
cmp
sbb
xor
adc
cmp
xchg
xor
lret
ljmp
jmp
dec
inc
mov
ficoms
cmp
mov
outsb
shlb
sbb
jl
test
push
arpl
xchg
scas
pop
cmp
mov
test
popa
sub
adc
ret
loop
iret
flds
fisttpll
lods
add
scas
or
pop
enter
mov
outsb
sti
xabort
and
jne
cli
lock
test
or
xchg
push
pushf
das
test
loop
nop
xchg
pop
or
leave
pop
sub
addr16
mov
sbb
clc
jmp
imul
cmp
or
inc
nop
xchg
mov
xor
out
daa
cli
mov
sbb
loopne
lods
mov
fsubr
mov
adc
push
sub
jne
sub
push
cmp
lds
ror
lods
enter
stos
scas
shlb
adc
clc
test
mov
leave
aaa
insb
mov
sub
std
test
cmp
mov
in
add
jno
pushf
popf
push
incb
push
jbe
or
jmp
sbb
dec
push
jae
xor
or
sub
xchg
arpl
dec
shll
push
ja
cs
fwait
push
rcrl
xor
imul
sbb
sbb
mov
xchg
jle
xchg
mov
mov
fisubs
in
dec
out
pop
mov
movsb
mov
loop
mov
mov
sub
xor
mov
push
clc
add
jno
rcrl
jns
xchg
out
and
sbb
dec
gs
fisttpll
push
xor
je
sbb
ret
enter
lcall
adcl
les
daa
nop
xlat
mov
repnz
sbb
sub
pop
insb
ret
cmp
aam
cmp
lcall
out
ja
xchg
ret
jl
loope
pop
mov
les
inc
jmp
dec
dec
jbe
and
mov
inc
loop
fldl
mov
adcl
lock
xchg
ret
aam
jbe
push
xchg
cbtw
jmp
mov
or
int3
nop
sbb
mov
into
leave
lock
and
xchg
xchg
stos
int3
jns
aad
adc
push
dec
push
lret
cmp
sbb
shl
jmp
shrb
xor
ds
mov
pop
loope
mov
jne
nop
pop
std
out
or
fdivrs
jl
scas
mov
add
xchg
mov
outsl
orl
in
push
pusha
shlb
repz
pop
jb
ljmp
jns
lahf
inc
push
and
fcoms
add
push
mov
cmp
mov
test
inc
cld
pop
dec
popa
pushf
inc
mov
out
ja
push
gs
loop
ss
add
cmpsb
fstpt
push
sar
sahf
xor
out
rcrb
sub
in
out
xchg
adc
jno
cmpsb
pop
xor
loope
in
xchg
mov
cs
jae
xor
jecxz
jge
popl
push
push
adc
inc
test
push
pusha
pop
xor
mov
ss
loop
into
test
sbb
shl
and
call
mov
cmp
dec
negb
xor
pcmpeqw
jb
inc
pop
std
ds
testb
jno
jo
sbb
lea
dec
ret
cmp
or
in
stos
sbb
shlb
xchg
mov
dec
fsubl
pop
into
or
cmp
mov
inc
test
ss
loope
push
stos
adc
add
pop
pop
dec
pop
jno
nop
dec
sahf
aaa
inc
and
dec
xchg
popf
sti
and
repz
aam
or
insl
aas
push
sub
sub
jno
mov
add
mov
std
mov
lods
aaa
and
movb
pop
jns
aaa
negb
mov
adc
je
in
jle
aad
je
jns
lret
sub
test
std
fistl
dec
mov
nop
cwtl
sub
mov
pop
inc
mov
sbb
cld
aaa
or
pop
mov
push
pop
push
mov
pop
out
icebp
jno
call
xchg
mov
push
jge
mov
movsl
pop
lods
in
mov
ja
xchg
cwtl
add
les
dec
xor
mov
mov
jp
push
dec
push
out
fs
in
mov
imul
inc
fwait
scas
addr16
pop
xor
mov
push
dec
loop
imul
and
and
inc
or
and
arpl
std
sub
push
subb
pop
out
test
cmp
dec
out
sahf
aam
and
xchg
mov
int3
xchg
repnz
rolb
mov
jl
cmpsl
sar
adc
mov
xor
ret
sub
adc
insl
outsl
mov
push
aaa
mov
sub
ret
xlat
mov
repz
mov
aam
sahf
imul
out
mov
push
int3
imul
add
imul
cmp
cmpsb
bound
inc
ljmp
cmp
int3
xlat
rorl
sub
bound
add
aaa
add
sub
sbb
jo
jae
push
cmpsb
aam
and
or
lahf
cmp
mov
pop
js
and
push
xor
test
aad
mov
filds
and
sub
imul
pop
fists
dec
aad
mov
jae
adc
je,pt
or
cs
test
mov
ret
adc
fcomps
sub
jno
dec
push
pop
pop
inc
cwtl
pusha
std
std
push
bound
push
cmp
cmp
fdivrs
lea
subb
dec
jo
push
mov
push
mov
cmc
adc
dec
pop
lret
out
sarl
mov
xorl
or
orb
adc
and
insl
insl
in
loopne
testl
fldl
mov
aaa
inc
outsl
push
ret
nop
clc
push
xchg
icebp
or
in
lock
adc
or
aaa
in
rclb
cli
sbb
cmp
push
cmpsb
jb
repnz
push
jge
jle
fadds
pushf
ja
dec
cmp
push
push
push
jnp
ficomps
repnz
lock
push
dec
movsb
and
ror
mov
addl
subb
dec
cmp
cmp
es
pop
es
jne
push
sbb
lods
mov
loope
xchg
jmp
jp
add
loopne
or
mov
rcll
pop
pop
outsl
xor
pop
lods
or
stc
jbe
and
es
sbb
cli
xchg
xchg
xor
xchg
pop
aas
mov
mov
dec
mov
ror
mov
mov
loopne
pop
xor
mov
iret
push
or
sbb
popf
fldt
das
dec
sub
inc
sub
push
jbe
sub
adc
push
es
jb
cld
xor
repnz
sub
pop
push
mov
cwtl
cmpsb
daa
dec
test
leave
inc
ret
nop
push
pop
cltd
mov
popf
out
mov
and
cmp
ss
lahf
mov
and
cld
sub
gs
sahf
or
xor
inc
mov
jle
fiaddl
mov
pop
cld
in
cltd
inc
pop
mov
xor
cli
ret
or
enter
cmp
pop
pop
jne
pop
in
lds
or
test
or
aaa
pop
inc
cld
xchg
ja
push
pop
insl
ja
jg
mov
test
fs
cmpsl
in
mov
mov
mov
cs
mov
rcr
or
xchg
leave
xor
push
mov
jmp
das
add
lods
call
add
hlt
push
sbb
icebp
lea
test
pop
outsb
aaa
out
or
push
lahf
jmp
inc
jns
xor
sub
push
imul
sub
xchg
mov
jmp
fdiv
fcompl
rcr
dec
inc
or
popa
xor
and
or
pusha
xor
sub
add
or
push
pop
sub
std
std
push
mov
stos
mov
cmpsb
enter
adc
clc
sub
xor
mov
sub
and
clc
cld
movsb
mov
inc
stos
pop
in
mov
fnsave
leave
fsub
addl
sbbb
cmc
in
push
js
mov
sarb
repz
loopne
fucomi
xor
cwtl
sbb
dec
rorb
shl
inc
in
test
std
push
pushf
mov
addr16
test
mov
ljmp
roll
mov
push
in
call
in
mov
jae
mov
fstps
icebp
adcb
rcrb
arpl
jp
jl
pop
mov
mov
dec
arpl
pop
ds
pop
jne,pt
movsb
insb
xlat
es
aaa
iret
jae
pop
push
sub
and
inc
aad
jnp
cmp
pop
xchg
push
fstl
test
mov
stos
xchg
inc
stc
push
add
xchg
push
js
fiaddl
dec
movsl
push
out
lret
mov
subl
add
or
pop
sub
lret
cmp
inc
fs
leave
shl
adc
xor
cmp
inc
and
mov
in
sub
out
mov
inc
stos
outsl
movsl
pop
cltd
mov
fsubrs
movsb
shr
mov
test
filds
sbb
or
dec
mov
push
loopne
add
fstpt
xor
and
or
sub
dec
xor
ret
inc
and
into
push
std
out
xchg
add
cld
mov
in
xchg
movsl
pop
mov
and
arpl
cmc
aas
into
inc
cmp
mov
mov
mulb
pop
rcr
pop
add
icebp
sub
loope
fs
ret
loope
aam
pop
and
andl
pop
sbb
adc
aas
pop
mov
mov
mov
push
outsl
mov
mov
int
fmull
push
mov
and
mov
adc
mov
mov
lods
push
scas
out
roll
inc
mov
insb
in
cld
shrb
pop
outsl
popa
adc
subb
js
scas
mov
xor
fisubs
cmp
lcall
das
adc
jo
std
xchg
sbb
sbb
arpl
clc
or
std
add
aaa
sarb
push
cmpsl
jecxz
out
cltd
ret
push
xor
test
add
mov
into
not
ljmp
int3
shrl
mov
ljmp
mov
movsb
cld
jp
mov
or
push
sub
lods
bound
scas
out
stos
lea
push
pop
sbb
in
adc
es
rorb
fbstp
adc
mov
mov
out
sti
pop
pop
in
aam
ret
fists
push
out
lods
pushf
rcl
jg
out
cmpsb
xchg
push
jno
xor
cmp
leave
and
push
les
icebp
add
call
cmp
std
mov
add
out
in
or
push
jno
push
inc
pop
rclb
pop
enter
xchg
sbb
pop
mov
or
sbb
imul
rcrl
push
test
dec
pop
cwtl
push
adc
mov
ja
cmp
pop
dec
xchg
adc
push
lahf
ret
mov
fisttpl
test
fsubrs
mov
jecxz
cmp
jbe
sub
jne
orl
nop
mov
mov
std
jl
lret
fcomp
inc
mov
loopne
adc
mov
sahf
inc
mov
mov
hlt
enter
fbld
and
test
clc
sbb
xor
popf
mov
imul
cmp
adc
xor
arpl
dec
das
push
fcomp
or
mov
jmp
sti
mov
add
into
inc
popf
test
aam
cmp
fldt
addr16
les
inc
mov
fs
xchg
jo
inc
add
sahf
addl
push
repz
pop
xchg
imul
sub
mov
sbb
inc
sub
mov
dec
jg
das
push
mov
add
shlb
lea
dec
sub
push
lods
movsl
imul
rclb
pop
adc
loope
sbb
push
jb
inc
gs
lock
out
inc
sbb
mov
cmp
add
sbb
sarb
inc
sahf
jmp
loopne
mov
pop
push
cld
adc
mov
cmp
cmp
pop
push
cmp
or
or
add
mov
cld
xchg
ret
cmpsl
xlat
in
subb
mov
push
inc
sbbb
int3
stc
hlt
jo
mov
daa
jno
mov
ret
stos
mov
inc
and
add
cmc
outsb
mov
xchg
xchg
sbb
pop
mov
pop
jecxz
jbe
dec
mov
in
lret
or
call
adc
mov
lds
mov
cmc
insb
js
adc
pop
ja
jmp
adc
out
aas
aam
push
insb
xchg
push
mov
jecxz
prefetch
or
stos
sbb
xlat
sub
lret
jecxz
loopne
jge
in
jbe
cmp
or
stos
into
sbb
sub
mov
scas
shll
xorl
out
pop
data16
push
jo
cli
mov
add
mov
stos
jp
repnz
movsb
idivl
xchg
in
daa
test
push
scas
jecxz
add
adc
xchg
insb
sbb
lahf
and
sub
cmp
cs
add
popa
mov
push
and
pop
pop
repz
mov
xor
mov
xor
mov
pop
push
addr16
in
pop
sbb
sub
popa
inc
icebp
sbb
testl
lea
out
push
test
pushf
enter
cmpsb
cld
fsts
jg
enter
mov
gs
test
mov
shlb
or
mov
jnp
mov
mov
out
xchg
sbb
call
inc
add
push
mov
cltd
push
xor
les
xor
inc
fisttps
cmp
xor
mov
lea
add
sahf
jmp
dec
les
inc
mov
jns
push
mov
rcrb
aas
sub
mov
fcoms
int
pop
and
shld
push
mul
in
cwtl
mov
jae
lret
sbb
push
pop
sbb
push
or
xor
adc
adcl
inc
mov
mov
push
xor
and
iret
rorb
mulb
jl
ja
call
into
sahf
test
xor
in
sub
mov
popl
add
je
inc
stos
sub
dec
add
xchg
push
xchg
jo
out
pushf
mov
ss
mov
and
push
pop
das
mov
mov
jp
mov
sarl
addr16
mov
push
pop
cmp
rol
jecxz
dec
pop
test
inc
test
add
div
in
sbb
pop
cmovnp
repz
out
pop
cld
into
or
in
sbb
dec
in
mov
jnp
xchg
and
mov
add
inc
push
push
sub
adc
pop
or
pop
into
mov
movsb
scas
aas
inc
mull
leave
out
pop
or
out
push
movl
push
add
outsl
jp
lods
lods
add
and
pop
ret
xchg
imul
or
leave
in
mov
popa
dec
lcall
adc
push
push
ljmp
ljmp
inc
nop
cwtl
into
data16
loop
fsubr
mov
cmpsb
or
lods
mov
or
mov
jmp
jo
loop
in
getsec
loope
sbb
out
lahf
xchg
xchg
and
adc
imul
dec
lock
xlat
in
jns
test
fiaddl
sbb
xor
or
adc
jae
dec
ja
or
imul
lods
xchg
pop
popa
cmp
dec
fistpl
and
sbb
mov
sub
mov
mov
repz
sub
push
cltd
push
mov
ret
rcr
mov
out
aad
movsb
lds
pop
xchg
add
xchg
lret
cmp
pop
sbb
jbe
scas
and
mov
cmpsb
pop
xchg
subl
dec
and
into
arpl
dec
sub
popa
add
adc
inc
scas
rcr
movsl
out
dec
loope
adc
mov
ljmp
xchg
push
mov
sbb
mov
push
lret
cli
xor
adc
xor
call
add
fwait
push
push
cmpsb
aas
cmc
xor
push
stc
rol
pop
ret
push
cmp
sbb
and
sbb
sub
daa
jno
shll
push
dec
pop
push
jae
std
pop
mov
mov
mov
dec
pop
dec
adc
insb
jno
dec
jno
xchg
jg
push
ljmp
in
xor
bound
jnp
xchg
mov
mov
test
xchg
cwtl
sub
jne
dec
mov
add
shl
aas
arpl
leave
jbe
pop
cmc
xchg
jl
jne
clc
cmc
fwait
mov
lcall
out
out
mov
push
or
sti
lahf
daa
pop
cmpb
call
adc
bound
shlb
cld
mov
lods
cli
pusha
rclb
cmp
ja
dec
out
rcrb
cli
fisubrl
inc
bound
into
ret
loop
mov
xchg
mov
cmp
xchg
pop
mov
aaa
xor
pop
std
js
sbb
sbb
mov
cwtl
cvtdq2ps
cli
insb
add
mov
jecxz
lods
inc
test
nop
mov
jmp
mov
or
xchg
jne
out
roll
scas
int3
cmp
ret
fildll
mov
inc
sub
shrb
dec
jg
mov
sbb
xchg
pop
js
xor
inc
jle
cmp
sub
mov
pop
inc
pop
outsb
fildl
jge
mov
inc
jl
pop
push
rcll
or
fucomi
loopne
arpl
mov
stos
loope
ja
bswap
dec
mov
and
and
jae
mov
aaa
sbb
adc
aaa
mov
jne
fisttpll
and
ffreep
rcr
stos
jns
mov
stos
lods
aam
out
xor
push
push
cltd
xor
mov
vpandn
xchg
mov
mov
inc
mov
push
sahf
jno
sarl
cmpsl
mov
cwtl
in
mov
push
int3
add
testl
xor
xchg
cmp
stc
ss
dec
mov
aas
pop
movsb
lods
in
imul
pop
dec
mov
jbe
daa
or
cmp
xchg
xor
scas
clc
repz
in
test
in
cmpsb
in
sarb
mov
decb
mov
jmp
ds
sub
push
in
xchg
cld
fdivrl
add
xchg
mov
fstl
mov
inc
in
jne,pn
int
call
dec
cmp
sub
pop
mov
fcmovne
pop
mov
jp
sub
fcomp
repz
xorl
xchg
notl
sti
add
fnstenv
scas
leave
ds
das
loopne
in
jp
sbb
push
in
repnz
push
lods
inc
push
ficomps
mov
notl
int
mov
dec
xlat
push
adc
test
mov
insb
push
sub
mov
call
cmpsl
mov
pop
int3
fsubrs
jbe
or
test
jns
or
or
sbb
lcall
xchg
inc
xchg
enter
sar
add
iret
or
xchg
pop
jmp
cmp
add
xchg
sub
xchg
fwait
mov
vaddsubps
dec
les
out
push
push
add
aad
jle
lock
lock
mov
mov
dec
mov
or
call
testl
outsl
test
test
stos
mov
jmp
movsl
stos
sbb
xchg
in
jae
out
repnz
jge
aas
movsl
mov
pop
outsb
xchg
mov
ss
cmpb
daa
dec
adc
mov
add
cmpsl
pop
fucomip
pop
nop
flds
xlat
dec
lahf
cs
xchg
lret
pop
fdivs
pusha
mov
movsb
movsl
vpaddb
ss
rorb
out
cmp
xchg
dec
ljmp
or
xchg
dec
sbb
aas
fistps
add
ljmp
in
or
sub
and
or
out
pop
ret
pop
fsub
cmpb
mov
loope
cmp
frstor
jle
cwtl
push
daa
mov
fnstsw
xor
or
stos
lcall
mov
arpl
enter
insb
xchg
push
or
mull
dec
js
sbb
stc
stos
jae
and
negl
sahf
jmp
aas
lahf
xchg
pop
stos
aaa
cmpsl
daa
mov
pusha
xchg
daa
fwait
leave
xchg
ret
mov
das
fisubrl
fldenv
sub
mov
push
enter
test
aaa
movsb
add
ljmp
mov
mov
jo
es
pop
in
pop
data16
adc
stos
inc
mov
xchg
inc
int
lock
fucomip
loop
and
rorl
mov
rol
or
cltd
incb
test
mov
in
aas
pop
jno
jno
mov
inc
pushf
jno
pusha
in
push
jae
sub
scas
sub
cli
imul
repz
out
sbb
sarl
and
push
jl
mov
or
sbb
mov
add
xchg
jnp
test
arpl
mov
test
std
fcmovbe
cld
int3
lods
jbe
cmp
push
mov
and
xor
test
push
fisttpl
scas
mov
je
mov
xchg
push
xchg
sbbb
push
jl
js
cli
stc
cmpsb
mov
mov
popa
shlb
or
pop
jl
cmpsl
subl
xor
ja,pt
ffree
in
sub
sub
rcrl
pop
and
jle
sti
daa
jge
mov
mov
mov
mov
stos
xorb
xor
pop
int
dec
pop
gs
xor
ds
scas
cltd
je
imul
cmp
pop
mov
mov
ret
in
and
aad
aam
fistpll
cmp
lods
push
sti
stos
data16
jecxz
test
push
adc
jecxz
pop
lcall
lret
and
mov
imul
fiaddl
pop
pusha
lock
stos
push
mov
mov
lods
sbb
push
inc
insl
aas
fisubrl
lea
pop
test
dec
mov
adc
jge
push
insl
push
jl
nop
add
pop
or
jmp
inc
sbb
mov
inc
into
sbb
stc
ficoms
mov
in
jmp
and
call
mov
sar
adc
mov
in
loope
sbb
loop
or
dec
mov
pop
loop
xchg
sub
fs
mov
lahf
repz
stos
in
sbb
sub
stos
adc
rcrl
jnp
pop
sub
movsl
xor
cvtpi2ps
fisubrs
daa
sub
and
lods
xchg
or
iret
sbb
adc
xor
repz
add
mov
lcall
icebp
push
xor
xor
filds
rorb
xor
pop
lods
push
mov
inc
push
mov
inc
dec
cmpsb
rcll
int
mov
stc
cli
xchg
jb
cwtl
push
test
gs
stos
push
cmp
andb
jecxz
ficoml
ficomps
or
imul
pop
pop
leave
add
rcrl
sti
loope
pushf
mov
pop
scas
cmp
icebp
xlat
xchg
sub
or
or
jmp
outsb
xchg
jb
addr16
push
outsb
pop
jae
mov
add
pop
les
ret
sbb
pop
icebp
int
or
aaa
jle
sbb
dec
out
mov
pop
std
xlat
mov
imul
movlps
gs
dec
mov
mov
adcl
adc
cmp
dec
int
xor
jns
call
sarb
jbe
int
popa
lea
and
jbe
shrb
imul
jns
testl
flds
lret
pop
into
cmpb
mov
popf
adc
filds
fcompl
fwait
dec
dec
mov
or
or
and
daa
lock
sahf
call
daa
dec
push
cmpsl
ret
mov
ffreep
sbb
xchg
leave
push
mov
js
scas
xor
xor
movsb
xor
or
mov
jne
loopne
mov
and
push
mov
incl
mov
shrl
sub
arpl
add
xor
pop
and
mov
mov
push
or
jno
xlat
or
aad
cmp
sub
push
mov
sbb
cmp
adc
iret
sti
fbstp
cld
in
scas
ss
or
repnz
dec
push
insb
dec
lds
cmc
push
xchg
out
adc
jmp
test
imul
jmp
lret
nop
jnp
xor
add
dec
movsb
cmp
gs
pusha
shlb
jg
mov
and
mov
push
pop
jmp
add
cs
sbb
adc
popf
pop
xchg
sbb
xchg
adc
cmpsb
inc
cmpsl
int
xchg
push
hlt
pop
push
loope
cli
cwtl
cmp
sub
add
addr16
sub
nop
cwtl
insl
data16
inc
mov
mov
dec
movb
xor
dec
fs
jle
enter
aad
push
cmc
dec
movsl
mov
lret
and
jae
sub
cltd
lcall
lahf
movsl
jg
ja
in
je
sahf
mov
jnp
pushf
xchg
sbb
push
outsl
xchg
ret
ss
push
add
and
lods
xchg
hlt
sub
orb
jmp
movl
sub
js
test
push
mov
les
pop
loope
and
daa
jl
addr16
push
out
jg
add
jecxz
sbb
sbb
pop
xor
bound
dec
test
cli
xor
roll
call
adc
mov
jge
jno
insb
scas
cmp
cmc
xor
mov
and
jmp
xor
insl
adc
push
loopne
dec
addr16
popa
or
add
dec
daa
insl
lret
outsb
leave
pop
hlt
inc
or
and
movsl
daa
add
jne
jns
punpcklbw
mov
and
lret
fstps
sbb
and
test
cmc
mov
jmp
and
push
sub
or
nop
xchg
mov
popf
jmp
add
pop
cmp
push
test
lcall
ret
xchg
mov
les
jns
orl
sub
jae
sbb
pop
lret
or
mov
xor
mov
mov
or
mov
pop
rcll
ljmp
cld
xor
aas
or
ljmp
pop
std
sub
sub
cmp
add
std
add
mov
xor
sbb
add
xchg
stc
out
cwtl
mov
test
lret
push
cmp
pop
mov
je
int
bound
lock
dec
test
mov
ret
and
or
cld
movsb
mov
and
repnz
adc
add
push
insl
fcompl
xlat
call
pop
stc
ret
fildll
scas
ret
or
xor
dec
ja
std
mov
inc
push
mov
xchg
int3
scas
xor
mov
lcall
ja
adc
popa
shrb
ficoms
or
cmp
mov
jo
or
iret
sahf
adc
lret
xor
stc
xor
xor
ret
leave
cmp
out
ds
pop
pop
je
pusha
inc
jbe
push
mov
pop
inc
push
adc
or
jp
mov
mov
inc
outsl
in
jno
sbb
or
and
jle
pushf
push
adc
cmp
or
add
adc
orb
mov
daa
adc
cmp
pop
xchg
cmp
cmp
into
lret
dec
mov
adc
in
dec
jb
nop
lds
push
scas
add
cmp
std
mov
mov
movsl
fcoms
xor
jmp
jb
or
ret
fwait
xlat
push
jns
lret
jne
outsl
ror
xchg
std
jmp
mov
mov
adc
outsb
cmpsl
adc
jp
push
pop
test
mov
add
push
or
jmp
pop
cmp
ret
repz
push
dec
mov
fwait
mov
addr16
mulb
or
jnp
ficoms
imul
dec
lods
jbe
dec
mov
aam
mov
addr16
dec
cmpsl
inc
push
imul
lahf
mov
ss
jbe
push
pop
or
push
and
push
shll
aam
mov
mov
int3
mov
insb
xchg
nop
sbb
adc
jne
clc
arpl
dec
adc
rclb
data16
cmc
push
jge
mov
or
repz
mov
sbb
xchg
xor
pop
bound
lahf
inc
mov
and
shrb
ljmp
or
adc
cs
push
movsb
add
cmp
bsf
int
lods
lret
popa
inc
xchg
arpl
icebp
pop
es
ds
pop
pop
out
jo
rolb
lods
insb
pop
push
mov
leave
sbb
outsl
dec
mov
dec
loope
xor
or
or
scas
leave
mov
jl
jecxz
sbb
ja
sbb
pop
sbb
push
sahf
ret
xor
dec
cmpsb
inc
and
lock
es
scas
out
xorb
aaa
push
mov
pop
aad
mov
pop
mov
dec
mov
sahf
add
pop
scas
enter
jbe
mov
daa
xorb
je
das
aad
jbe
fs
fisubs
les
fldcw
je
adc
dec
mull
or
sbb
pop
in
sarb
sbb
xchg
cld
jg
rcr
sbb
push
ret
in
cwtl
fadd
popf
push
call
addr16
stc
gs
push
xorl
out
push
movl
sub
cmp
notb
jne
popl
mov
and
or
das
out
jno,pn
sbb
inc
xchg
dec
fmull
mov
bound
adc
mov
ret
or
pusha
mov
fs
push
imul
dec
mov
stc
mov
inc
push
mov
cmpsb
sbb
sbb
pop
mov
pop
jae
int
push
lea
mov
int3
mov
loop
push
sbb
mov
dec
leave
jecxz
xchg
jns
sbb
dec
add
pop
lret
push
xchg
xorl
push
inc
inc
fs
movsb
fsts
lret
mov
adc
js
xchg
pop
cmpsl
popa
or
iretw
sbb
in
std
sarl
sahf
icebp
popa
xlat
lds
sbb
sub
pop
in
or
mov
pop
jae
pop
xor
mov
adc
bound
xchg
aam
inc
mov
and
stos
lret
xlat
fsub
lret
mov
cltd
cmp
aad
ret
mov
jb
sbb
shlb
in
dec
push
cld
pop
in
and
mov
divb
mov
cwtl
push
push
out
mov
ret
insl
adc
stc
jno
repz
cmc
add
push
int
or
cmpsb
dec
pop
sbb
gs
adc
dec
mov
pop
in
jle
scas
push
sbb
movsb
sub
in
mov
movsb
lea
push
dec
push
ljmp
pop
fnstcw
push
dec
repnz
lods
jecxz
sbb
enter
mov
mov
ds
insb
js
xor
mov
sahf
loopne
adc
mov
fisubl
inc
insl
mov
push
dec
fdivr
popf
sub
loopne
negl
sbb
in
jmp
andb
stos
cmp
pop
jmp
cli
loop
sahf
loope
push
unpckhps
adc
push
aam
mov
pop
dec
sbb
dec
mov
mov
adc
xor
xchg
sub
mov
adc
adc
adc
or
aad
inc
ret
nop
fidivrs
rclb
sub
or
cmpsb
jp
push
iret
pop
jbe
xchg
inc
xor
xlat
test
aad
inc
in
lret
rcr
out
xchg
fnstcw
add
mov
and
divb
pop
lods
rolb
mov
sbb
add
fisubrs
adc
jmp
mov
xchg
and
sahf
arpl
push
cmp
push
mov
cmp
mov
push
cmp
cld
or
push
shrl
lret
notl
in
fdivrl
das
mov
std
mov
adc
dec
add
inc
movsl
inc
scas
fwait
inc
mov
pop
outsl
aaa
mov
stos
push
ss
sbbl
in
xchg
shrb
pop
into
adc
aad
pop
push
es
pop
mov
sub
daa
pop
xchg
outsb
jnp
sahf
mov
fcomp
ds
jmp
mov
lods
or
or
adc
mov
mov
xor
in
repnz
in
imul
push
sub
jge
pop
sub
pop
inc
jge
addl
xor
push
adc
out
mov
std
lret
dec
pop
mov
mov
pop
aaa
push
ds
and
psllq
fists
mov
es
je
shrl
xchg
lock
test
or
or
pop
push
arpl
movsb
xchg
add
mov
xchg
add
add
movb
jo
lods
mov
push
pop
pop
pop
xor
std
fwait
popa
jae
ret
insl
mov
add
inc
or
jbe
cltd
mov
mov
xchg
jne
mov
call
rclb
push
mov
push
pop
loopne
sar
pop
scas
lds
mov
movsb
fiaddl
mov
mov
imul
inc
cmp
rolb
and
in
xchg
ja
jno
push
js
js
sbb
add
mov
fimuls
popf
pop
jg
dec
data16
push
iret
jp
inc
pop
insl
push
xchg
ljmp
jne
push
push
daa
xchg
loop
mov
pop
push
fs
outsl
jmp
xor
pop
clc
xchg
call
inc
cmp
inc
test
and
cmp
enter
add
jecxz
sub
ret
pop
js
repz
xchg
aaa
cltd
jno
lea
leave
dec
les
movsb
adc
inc
mov
daa
mov
orb
or
dec
pop
push
mov
in
xchg
inc
push
imul
sbb
cltd
add
mov
pop
sub
jae
stc
les
lods
je
push
mov
scas
mov
add
nop
rol
cmp
jne
notb
push
aas
imul
fimull
jp
pop
loop
ret
cmpb
fucomp
push
or
or
mov
mov
xchg
imul
xchg
incb
mov
ja
in
xchg
or
orb
cmp
lahf
fistpll
sbbb
add
mov
cmp
and
pop
cmp
push
pop
popf
pop
fisttpll
out
jmp
ds
lds
xor
inc
aas
sub
mov
lret
pop
les
push
cmp
jae
adc
jp
xor
push
mov
andb
pop
sub
dec
loope
jl
mov
testl
loopw
popa
xlat
aad
sbb
stc
adc
cmc
push
push
test
sbb
ret
aaa
jle
pop
sub
adc
sub
inc
call
inc
daa
xor
push
test
fdivl
add
push
es
mov
add
into
sub
fmull
mov
fcmovnu
and
mov
pop
sub
xchg
push
xchg
inc
shl
pop
test
adc
xchg
inc
push
scas
sub
out
inc
sub
lds
iret
loope
mov
mov
or
hlt
test
sbb
imul
cmc
lret
inc
out
addr16
std
pop
cmp
insl
mov
xor
sub
mov
das
ss
xchg
cmp
hlt
repnz
adc
loope
int
movsb
lods
mov
adc
repnz
xchg
stos
push
cmp
dec
xchg
sbb
mov
or
mov
pop
inc
inc
inc
loope
icebp
xor
pop
add
add
test
and
cmc
ficoms
into
adc
mov
stos
fisttps
cmpsl
jne
sti
icebp
push
mov
sbb
outsl
lea
adc
xor
inc
js
pop
pop
in
std
push
mov
mov
movsl
cli
lcall
mov
xchg
and
sub
dec
fldl
sub
push
ds
mov
das
add
jne
xchg
insb
inc
push
out
stos
daa
xor
in
pop
mov
dec
in
std
bound
jns
xor
ficoml
or
push
xchg
fdivrs
es
add
and
fstpl
jbe
jge
or
call
push
das
sahf
enter
lahf
jle
pop
cwtl
jno
or
xor
outsb
into
pop
scas
mov
sarl
es
push
xor
mov
lcall
jle
add
xor
mov
jne
mov
iret
dec
jge
pop
clc
mov
mov
fs
sbb
pop
in
push
into
fiaddl
mov
jno
mov
es
es
adc
mov
ja
mov
xorb
cwtl
outsl
bound
cmpsb
cs
sbb
popf
adc
pop
push
popa
jg
ficomps
aam
scas
sbb
scas
js
xchg
out
cmpb
xor
lods
sub
jb
cmp
push
push
push
inc
push
or
push
aad
sbb
jmp
mov
push
cli
outsl
xchg
cmp
mov
shrl
fmull
mov
mov
mov
jae
sarl
add
xchg
xchg
mov
sti
mov
adc
int3
pop
mov
dec
fiadds
int
arpl
scas
mov
adc
aaa
mov
inc
xchg
scas
dec
pop
or
sbb
mov
xchg
test
mov
mov
mov
sbb
repnz
imul
lret
shl
outsb
push
in
test
in
xchg
pop
es
inc
xor
cmp
xchg
arpl
out
inc
dec
pop
lds
push
in
je
adc
in
cli
xchg
imul
xor
cwtl
mov
cmp
cmpsb
pop
add
xor
cmp
scas
xchg
scas
push
add
ss
lock
fwait
scas
daa
shrl
xor
xchg
stos
xor
pushf
subl
popl
mov
and
shll
jnp
dec
xchg
rcr
push
xchg
jg
and
stos
pop
mov
mov
push
aam
dec
and
jae
aaa
loopne
sarb
aad
cmpsl
in
adc
xchg
push
or
lds
dec
add
and
inc
ret
lds
in
jmp
ret
repnz
jmp
adcl
pop
pop
cmpsl
addr16
sbb
lea
xchg
test
notl
cmp
inc
sub
sub
inc
add
in
scas
xchg
add
or
lods
imul
inc
mov
rcrb
sbb
ret
sbb
adc
shlb
jb
push
icebp
pop
shlb
mov
sarb
gs
shrl
pop
xchg
jp
and
push
mov
cltd
sbbl
imul
mov
push
sbb
inc
jp
dec
mov
mov
popf
aas
pop
xchg
sbb
jne
sub
mov
outsb
stos
xchg
jo
and
and
xchg
inc
cmp
pushf
shl
push
add
adc
add
mov
in
or
mov
aad
sub
fiaddl
popa
sub
jecxz
ljmp
into
cmp
adc
in
in
pop
jb
xorl
push
xlat
stc
in
and
add
stc
cmp
pushf
mov
cmp
ja
aam
fadd
sbb
and
lods
push
pop
adc
jp,pn
aaa
xor
jmp
add
pop
jb
mov
pop
xchg
sub
mov
cmp
ljmp
mov
jmp
lods
pop
ret
pop
pusha
mov
insb
xchg
mov
cmpsb
xchg
xor
jl
sbb
jmp
sbb
xchg
inc
scas
cli
mov
bound
adc
push
mov
sbb
enter
das
lea
dec
imul
insb
lret
cmc
push
cwtl
dec
adc
lret
lret
iret
test
iret
xchg
scas
mov
mov
mov
pop
pause
dec
jbe
inc
cli
andl
adc
enter
xchg
push
pushf
pop
jge
xor
add
mov
test
xor
scas
mov
iret
shlb
int3
cld
pop
cmpsl
mov
lret
mov
dec
pop
hlt
mov
arpl
jno
fidivrs
dec
sti
inc
xor
add
pop
add
cmc
mov
in
jp
add
stos
sub
xchg
cmp
add
pop
js
dec
out
jecxz
dec
adc
mov
mov
cwtl
mov
jae
xor
cmp
mov
subl
inc
sahf
push
pop
adc
xchg
lret
fisubs
push
push
mov
add
aas
jbe
stos
mov
xchg
xchg
into
jp
or
jne
movsl
lea
clc
add
xor
push
rcrb
inc
xchg
sub
mov
ja
int3
push
cwtl
xchg
les
loopne
push
mov
sbb
leave
adc
adc
enter
jmp
xchg
or
inc
mov
out
movsb
in
jae
arpl
fildll
cmp
push
mov
seta
cs
fs
repz
xor
dec
xchg
jge
imul
mov
xchg
push
adc
stos
mov
dec
mov
cli
imul
or
xchg
cmp
pop
das
loop
iret
adc
in
add
repnz
inc
or
add
loope
popf
icebp
pop
mov
outsb
mov
rol
mov
fidivrs
flds
in
mov
pop
jp
lahf
or
in
sbb
push
xchg
add
xor
lahf
xchg
call
loopne
xor
sbb
push
mov
mov
sbb
jg
jns
jnp
imul
incl
xlat
and
and
mov
pop
dec
mov
inc
jne
push
sub
rolb
stc
xchg
in
subb
sub
cmp
xor
dec
push
sarb
or
nop
rorl
loopne
add
mov
sbb
pop
mov
push
aas
push
add
fs
jbe
fninit
and
push
test
push
fldenv
js
mov
ror
push
push
or
rclb
ret
xor
es
and
inc
sub
push
xchg
popf
xor
out
pop
xchg
jecxz
jne,pn
cmp
rol
sbb
mov
lret
push
rcrb
les
pusha
iret
leave
or
cwtl
xchg
roll
popa
jns
inc
mov
pop
xchg
jmp
in
mov
xchg
adc
jle
sbbl
inc
imul
and
mov
adc
add
or
inc
sbb
popf
jp
fsubr
add
sbb
push
aad
pop
cmpsb
xchg
out
sti
js
xchg
in
addr16
lods
mov
dec
dec
push
adc
call
lock
aam
out
xchg
mov
pusha
repz
add
or
lds
cmp
mov
cld
xcrypt-ofb
cmpsl
sub
out
addr16
lods
and
out
mov
push
ret
ret
imul
sahf
mov
cmp
movsl
pop
mov
cmp
cmp
scas
jecxz
pop
sti
aad
adc
jno
add
or
adc
je
xchg
jg
stos
push
lret
mov
testl
loop
dec
das
mov
mov
mov
lods
cmpsb
inc
add
movsb
cli
call
push
setnp
xchg
iret
cmp
mov
mov
mov
scas
push
mov
jbe
jecxz
ss
xchg
outsb
mov
cli
movsl
pop
fdivrs
push
or
imul
out
in
push
jp
mov
daa
or
ret
lock
mov
push
push
dec
lds
movsl
xchg
cld
pop
cs
mov
aam
jmp
rcrb
pop
push
sbb
jp
loope
shr
movsb
pop
or
repnz
or
and
subb
mov
mov
mov
or
inc
and
or
fcomps
loop
stos
in
mov
lret
adc
adc
bound
inc
test
aaa
push
iret
dec
scas
xchg
cmpsl
in
push
mov
xchg
add
mov
mov
adc
icebp
dec
dec
sub
cmpb
std
and
xor
jo
test
mov
lock
fidivrs
fcoml
cwtl
test
push
add
pop
cmp
lret
push
pop
es
pop
arpl
jb
out
call
mov
je
arpl
ror
pusha
mov
push
sub
adcl
add
xchg
mov
scas
loopne
mov
or
sarb
std
xchg
call
or
mov
in
xchg
lods
sub
shl
xchg
fstps
mov
pop
pop
jno
sbb
jecxz
lods
fadds
pop
adc
fstps
sub
sub
out
pop
ret
hlt
or
int
adc
pop
inc
push
jg
pushf
cltd
stc
std
mov
popa
mov
ret
cmp
add
imul
repz
inc
test
xchg
cmp
call
fdivl
adc
sti
dec
mov
pop
cwtl
pop
xor
pop
jp
scas
mov
cmpsb
and
jge
add
pop
insb
gs
fwait
mov
and
leave
shll
inc
test
ds
or
sahf
mov
and
mov
cmpb
adc
scas
jae
mov
lea
cli
mov
cmp
mov
lods
xor
aad
cmp
add
lock
push
hlt
imul
or
cmc
sub
out
sub
adcb
or
imul
fcompl
out
pusha
mov
jno
xlat
or
and
into
xchg
es
shll
or
dec
jae
jo
out
int3
push
cli
adc
std
jnp
and
mov
pop
jecxz
lret
cmp
inc
sub
lret
mov
sti
jg
fnstcw
stos
inc
inc
sbbb
scas
fmull
push
insl
mov
inc
insb
addb
jmp
add
movsb
fs
jl
xor
and
and
cmp
xchg
pop
cmp
fwait
sahf
cmc
sbb
push
roll
sub
testb
mov
sub
and
rclb
push
test
add
add
popf
mov
cmp
mov
inc
add
sub
ffree
jle
sahf
cmc
push
mov
cli
cltd
lcall
push
out
or
push
cs
jl
sub
shlb
sbb
pop
aam
nop
mov
adc
push
push
dec
idivb
jle
jl
adc
testl
push
mov
test
adc
sub
mov
testb
xor
aaa
mov
test
test
test
pop
cmp
xlat
cmpsb
xchg
imul
stos
or
das
clc
pushf
subb
test
push
and
ja
in
jge
ljmp
and
and
jp
in
cmpsl
push
cltd
lock
loopne
push
das
sti
sbb
mov
mov
notb
cmp
shll
into
cli
js
js
inc
clc
loope
fsubrs
xchg
sub
pop
xchg
xchg
dec
arpl
orb
mov
add
adc
stc
lds
add
outsb
xchg
add
push
inc
arpl
cmp
in
xchg
int3
lahf
mov
or
fwait
rclb
mov
cmpsl
lods
lods
sti
push
cs
adcb
mov
fnstsw
pusha
lods
cmpsl
jnp
aaa
inc
test
es
out
dec
xchg
fcoms
adc
mov
dec
jb
mov
cli
jl
call
mov
cmp
sbb
adc
push
xchg
divb
lods
cmpsl
push
fwait
dec
mov
mov
sbb
stc
mov
push
cmp
sti
push
push
lods
sbb
jmp
dec
pop
jbe
add
js
push
mov
sbb
cmp
cmp
movsl
bound
in
ljmp
in
sbb
xchg
push
je
aad
fldt
dec
roll
adc
xchg
mov
jp
add
xchg
inc
stc
mov
inc
push
inc
int3
mov
add
mov
inc
rcll
cmp
push
adc
mov
mov
and
push
addr16
aaa
aam
adc
stc
push
dec
stc
sahf
out
arpl
stos
xchg
fcomp
push
push
lock
sub
out
shrb
outsb
pushf
jns
cmc
test
xor
popf
dec
xor
jb
xor
and
leave
cmc
cltd
or
outsl
pop
add
icebp
faddp
jle
sbb
xlat
fildl
dec
mov
repnz
mov
jmp
imul
hlt
sbb
inc
sub
pop
inc
aaa
mov
hlt
fistl
jbe
js
fisubrl
clc
pop
xchg
and
adcb
or
daa
je
push
jmp
lret
jp
pop
lret
cwtl
xchg
ja
pushf
cs
mov
inc
mov
sub
adc
mov
out
imul
dec
pop
inc
sub
mov
fnstcw
sbb
aaa
adc
xchg
test
push
icebp
iret
fiadds
stc
pop
mov
stos
ret
push
xchg
jae
mov
mov
xorl
mov
outsl
repz
ret
cmp
loop
push
lods
das
negb
nop
xor
es
das
cmp
sbbl
and
aas
push
ror
mov
sbb
jecxz
cwtl
inc
sub
jg
icebp
jne
mov
faddp
cmp
outsb
xchg
movsl
std
and
xchg
sbb
push
jns
xor
jb
pop
push
mov
and
lods
cwtl
and
inc
dec
movsb
cmp
pop
adc
lret
fisttpll
mov
in
jne
push
xor
int
adc
jbe
out
cmpsb
sbb
out
test
push
ret
iret
jle
sbb
data16
outsl
mov
sub
adc
sub
mov
inc
or
into
mov
mov
cwtl
ljmp
leave
into
mov
dec
mov
pop
or
sub
fidivl
mov
xchg
xlat
push
push
pop
mov
or
aas
lcall
into
jl
cld
and
aas
sub
cmp
push
clc
lahf
jp
mov
adc
sbb
jnp
cmpsb
pop
dec
insb
test
cld
stos
xchg
cmp
and
jl
ja
cmpsb
fimull
xorb
mov
mov
and
outsl
xchg
xor
aad
push
cmp
loopne
inc
popa
js
and
mov
aas
inc
loop
xchg
es
xor
fidivl
lcall
and
mov
push
xchg
outsl
mov
or
cmpsl
imul
inc
pusha
in
mov
xlat
push
push
mov
repnz
jle
mov
cmp
pop
push
aad
pushf
xchg
mov
cmp
push
xor
mov
call
mov
push
cmc
and
dec
xor
mov
push
fmul
int
mov
xor
inc
outsb
xchg
mov
mov
xchg
and
std
jns
ljmp
pop
out
and
call
repnz
test
scas
jne
fdiv
sbb
mov
stc
mov
popf
scas
add
push
loop
leave
push
outsl
sub
adc
mov
lret
pop
scas
pop
das
mov
dec
nop
scas
pop
mov
and
repz
or
dec
int3
add
ret
xorl
xchg
push
or
push
dec
lock
cs
dec
shl
movsb
inc
ss
aaa
out
rcll
push
sbb
mulb
xchg
je
or
xchg
mov
xchg
add
and
int
push
or
cmc
insb
dec
mov
mov
jmp
cld
jecxz
nop
add
shr
push
ret
lahf
idivb
enter
rcrl
jbe
push
and
jge
les
andb
pushf
mov
cmp
push
pop
lea
pop
or
pop
outsb
fstpt
add
out
pop
jb
lret
mov
je
add
cmpsb
adc
sbb
jae
in
inc
sub
push
dec
push
loop
jno
test
dec
pop
push
lea
mov
repz
mov
rorb
jle
fistps
ret
out
push
mov
pop
mov
xchg
push
adcl
xor
push
pop
test
add
inc
push
stos
mov
das
stc
sub
jns
out
or
mov
xchg
das
je
fwait
out
pushf
mov
leave
cltd
icebp
pop
shlb
cmpsl
mov
mov
jg
rorl
pop
mov
ror
jae
or
cmp
imul
adc
mov
mov
mov
popa
cmp
pushf
iret
loop
push
aas
out
cmp
call
stc
jae
pop
push
clc
shll
mov
sbb
aas
cmp
daa
icebp
dec
xchg
out
lret
cltd
cmp
test
dec
mov
inc
jno
sti
xchg
xor
movsl
repnz
enter
pop
jecxz
mov
inc
outsl
mov
jg
pop
cmpsl
icebp
cmp
incl
mov
or
aad
xchg
arpl
pop
stos
cmp
mov
mov
adc
jae
mov
push
stc
cmp
dec
rcr
xchg
mov
adc
mov
jb
movsl
mov
daa
test
and
dec
call
loopne
stc
push
sbb
or
mov
adc
inc
sbb
jge
sbb
push
xchg
repz
jecxz
cli
mov
mov
sub
mov
mov
jb
adc
xor
push
pusha
adc
or
jbe
xlat
adc
lcall
insb
mov
jge
sub
add
or
scas
je
and
ja
test
cmp
and
inc
or
or
jmp
xlat
fistl
fs
stos
mov
and
aaa
adc
divps
push
test
imul
lret
sub
inc
shl
out
nop
cli
cmp
in
or
and
in
push
and
sub
xor
cmp
scas
cmpb
mov
jno
popf
cmp
adc
aaa
mov
or
pop
sub
imul
push
jo
in
dec
out
xchg
fwait
mov
stos
xchg
mov
adc
mov
stos
lods
scas
movsb
bound
push
sub
or
cmp
jg
popf
movsl
and
popf
test
popa
nop
xchg
jne
mov
mov
or
sub
sbb
jge
push
shr
bnd
or
jne
xchg
jo
pop
xchg
adc
cmp
bound
jo
sbb
mov
xor
addl
out
imul
aaa
sub
fstps
lahf
cld
or
jge
ret
pop
mov
cld
pop
std
faddl
sub
stos
sbb
inc
nop
cmp
popa
lea
push
fld
into
pop
insb
rclb
mov
push
not
loopne
add
jnp
fdivrl
inc
cwtl
xor
pushf
xor
xchg
addr16
icebp
call
xlat
xor
cmp
incl
xor
xlat
or
sbb
inc
adc
inc
fadd
loop
sub
dec
cmpsl
jmp
hlt
pop
mov
lret
repz
inc
sub
adcl
or
xchg
cmp
adc
sub
mov
dec
repz
loope
xchg
loop
lods
repz
enter
and
dec
out
pop
stc
push
pop
aaa
sub
jle
les
idivl
out
sarb
clc
inc
and
jno
pop
movsl
xor
inc
dec
cmp
lahf
inc
push
mov
xor
out
lods
mov
xchg
adc
or
lds
ror
out
js
jbe
xor
pusha
and
mov
hlt
cmp
decl
or
je
sbb
cs
mov
sbb
sbb
sar
ror
mov
loop
cltd
xchg
js
shl
cltd
cld
cmp
mov
ds
inc
ss
mov
lds
xor
jne
fsubrs
adc
mov
pop
jne
mov
mov
cs
cmpsl
outsb
je
inc
inc
and
into
or
int
les
mov
adc
nop
cmp
push
fmull
inc
dec
repz
xchg
adc
rcll
pop
int3
cmp
arpl
insb
inc
mov
inc
jg
pop
out
stos
ret
pop
push
repnz
and
jo
inc
imul
aam
sub
cwtl
xchg
cmc
cltd
xchg
in
sbb
pop
insl
lock
inc
xchg
mov
cmp
cmp
adc
push
mov
dec
xchg
push
int3
ret
out
andl
add
insl
push
jecxz
and
or
mov
jae
enter
jnp
xor
test
and
xor
mov
pop
adc
insl
fiaddl
or
repnz
in
cmp
mov
cmp
push
push
icebp
add
test
add
xchg
and
push
addr16
bound
inc
notb
and
call
fsubrl
scas
gs
std
stos
ret
repnz
sub
add
cmp
jo
xchg
mov
inc
les
rclb
xchg
fidivrs
repnz
hlt
std
mov
in
lret
fldt
xchg
cmp
mov
pop
or
lds
nop
call
outsb
inc
ficoml
adc
push
adc
mov
xor
xchg
xor
outsl
dec
xor
out
xchg
adc
fwait
scas
jbe
scas
jg
pushf
mov
pop
mov
rcrl
xor
test
and
sbb
pop
push
xor
jmp
xchg
add
mov
pop
inc
mov
jns
cmp
pop
fisubrl
sub
lcall
inc
xorb
sub
adc
cltd
sbb
adc
pop
test
sbb
push
je
jne
rolb
out
arpl
dec
xchg
call
dec
repnz
push
mov
das
js
inc
outsl
lods
xorl
dec
nop
adc
jg
pop
inc
or
roll
pop
roll
mov
pop
mov
leave
cld
out
add
adc
cld
cmpsl
inc
outsl
hlt
imul
mov
outsb
call
sbb
adc
inc
jo
sbb
mov
sub
sarl
test
ja
stos
in
adcb
xchg
add
je
and
sbb
add
iret
add
or
or
xor
push
adc
xchg
push
es
cmp
into
mov
lds
cmp
lods
sub
mov
aam
lock
das
pop
push
outsb
aaa
shrb
or
pop
cmpsl
or
xchg
mov
bound
sbb
fsubr
rol
adc
mov
xchg
mov
and
or
jae
rorb
xchg
pushl
mov
add
cld
rcrb
cmpl
mov
ljmp
fmulp
dec
sub
cwtl
loop
les
and
mov
shl
dec
adc
and
push
jne
sbb
rolb
jae
in
xor
pop
orl
repz
inc
addr16
sub
cmp
push
mov
inc
ret
sub
mov
lcall
dec
pop
push
inc
subl
popa
stos
mov
pop
cli
addr16
xor
jno
orb
test
mov
pop
fadd
cwtl
mov
andl
and
mov
sub
mov
jecxz
sbb
lock
stc
cld
cmp
mov
or
jecxz
pop
cmpsl
movsb
push
outsl
sti
psrlw
sbb
adc
out
push
in
pop
push
testl
les
in
push
sub
test
jbe
sbb
leave
call
mov
int3
negl
dec
pushf
push
mov
test
repz
push
mov
pop
rcll
test
jmp
add
repz
xor
iret
sub
jns
fucomp
or
mov
push
mov
cmpsb
sub
sbb
xor
sahf
aas
fdivrl
and
cmp
push
add
pop
mov
sarb
aaa
pop
pop
add
in
and
cltd
mov
or
sbb
cltd
mov
aaa
nop
adc
outsl
xchg
jge
sbb
movsl
sbb
mov
sub
loopne
cmpl
js
push
and
int
jl
and
lret
rcrb
loopne
mov
imul
mov
incb
cmp
pop
jnp
and
adc
mov
push
cltd
shl
ss
and
add
mov
adc
iret
daa
cmpsl
jp
push
or
lahf
ds
andl
inc
int3
push
ret
dec
mov
stos
mov
cmpsb
and
test
stc
aas
mov
xchg
cmp
mov
cmpsl
out
lds
andl
adc
out
jo
jnp
scas
sub
lret
shrl
adc
pop
sbb
cmp
xchg
push
jae
rcr
xchg
cli
pop
lods
adc
xchg
hlt
adc
stos
aas
cwtl
mov
mov
push
ret
xchg
inc
jg
pop
repnz
fildll
xor
test
or
testb
jl
mov
cli
cmpsl
out
das
shl
adc
les
inc
jle
pop
push
das
shll
mov
in
xchg
fsubrl
aad
addr16
xor
mov
sbb
inc
mov
jno
sbb
loopne
jl
fwait
xchg
imul
movsb
jp
sub
imul
ret
cs
mov
in
sub
xchg
mov
mov
adc
lea
icebp
sar
loopne
call
lret
dec
data16
xchg
loop
push
scas
dec
xor
imul
push
jnp
add
sub
mov
out
adc
pop
pusha
jmp
inc
in
jo
stos
out
sar
aad
outsb
cmp
push
pop
or
xor
mov
jmp
out
imul
into
jl
push
std
ret
pop
loope
mov
les
repz
loop
aas
dec
stos
in
jecxz
push
dec
pop
jge
add
xor
pushf
pusha
xchg
sub
sbb
push
cmp
dec
sbb
xlat
andl
stos
inc
jb
out
dec
leave
fldl
push
testb
pop
fwait
cli
out
fdivs
push
add
jp
dec
shlb
pop
nop
xchg
xor
xchg
adc
lret
sub
test
fdivrl
cwtl
lret
addr16
mov
shlb
push
stos
lods
popa
mov
add
enter
pop
sbb
mov
fstl
jl
xchg
xor
pop
mov
push
mov
lods
add
fisubl
adc
push
sub
ror
push
jl
sbbb
jb
xor
sub
out
xchg
outsl
push
jne
add
adc
scas
sbb
cmp
fimull
mov
lea
in
sub
loope
fwait
in
xlat
repz
jecxz
hlt
push
xchg
xor
ljmp
xchg
out
mov
pop
xor
pusha
mov
testl
inc
int
xor
mov
outsl
inc
mov
aas
out
sub
out
cld
cwtl
pop
push
jne
sbb
aad
mov
es
test
rcrl
movsl
dec
test
popa
xor
add
pushf
jnp
mov
xlat
in
push
inc
in
pop
xchg
cmp
mov
xchg
mov
adc
or
jb
jae
andl
sub
sbb
dec
insl
nop
mov
jle
inc
mov
divb
or
mov
and
push
jle
sbb
cld
in
pop
ret
mov
inc
sub
dec
mov
push
push
jb
std
movl
add
stos
xor
pusha
or
push
loopne
mov
jp
xchg
enter
mov
loope
dec
xchg
mov
nop
xchg
jne
scas
mov
xor
jns
cmp
xlat
inc
loopne
scas
push
ds
inc
jo
in
subl
jne
and
mov
test
push
addb
insb
xchg
sbb
out
fs
jge
and
xor
xor
andb
cmpsb
fs
mov
cmpsl
mov
or
call
addr16
shl
imulb
in
cmp
xchg
ljmp
popf
daa
les
pushf
popf
inc
ljmp
sbb
je
call
sub
add
lds
ja
and
xchg
mov
mulb
scas
popf
sahf
movb
cmp
movsb
jb
repz
stos
dec
xchg
rclb
test
scas
or
popl
cltd
pusha
insl
scas
mov
outsl
jecxz
sbb
stc
mov
inc
ds
or
or
mov
inc
jbe
adcb
mul
sub
pop
mov
das
mov
out
xor
sbbb
inc
cld
roll
mov
cli
xor
push
dec
xchg
in
pop
dec
ds
push
inc
pop
pusha
sahf
jl
ficompl
xor
sub
or
mov
sub
and
mov
sub
sub
call
push
inc
lret
sbb
mov
mov
push
inc
arpl
inc
lods
push
push
jns
fistps
cs
sbb
movsb
mov
inc
shl
mov
loopne
dec
enter
jne
leave
or
push
dec
ror
in
js
sub
adc
stos
sarb
pop
lahf
push
sbb
jb
pop
xchg
add
popf
popa
iret
sub
out
mov
jle
sbb
xchg
push
in
mov
mov
mov
std
rorl
adc
mov
and
add
mov
push
or
jmp
mov
mov
cmp
sbb
rcrl
pop
or
jnp
mov
imul
daa
cmp
hlt
mov
mov
lds
out
mov
bound
push
sub
call
jp
cmove
jne
mov
pop
xchg
jmp
jle
jno
push
sub
adc
sbb
jb
hlt
and
pop
leave
aaa
sub
das
mov
push
mov
push
pop
mov
push
mov
inc
push
sub
ds
popa
inc
dec
xor
sbb
xor
mov
daa
fists
push
pop
push
in
add
sbb
nop
and
jno
out
sub
ljmp
pop
mov
sbb
sbb
cwtl
loope
sarl
nop
les
dec
lds
push
mov
xchg
jp
cmp
fistpll
sub
sub
push
hlt
inc
imulb
leave
dec
mov
adc
in
xlat
jge
in
dec
mov
int3
pusha
fwait
repnz
jl
movsl
mull
add
lods
cld
mov
jg
jmp
les
xchg
pop
sbb
and
scas
inc
inc
push
mov
or
aad
out
cmp
fstps
sbb
and
xchg
cmpsl
jecxz
ss
jne
jo
sbb
das
push
inc
xor
xor
inc
ret
ljmp
or
ja
push
incl
cmp
stc
pop
adc
or
imul
or
outsl
jb
pop
lret
lea
jl
cld
pop
push
xorl
add
jbe
lcall
das
mov
xlat
dec
test
outsl
inc
add
add
gs
adc
mov
or
push
out
mov
lcall
jbe
mov
ljmp
mov
sbb
shrl
fisttps
cmp
in
imul
js
sbb
lods
cs
insb
mov
xlat
mov
dec
enter
fwait
mov
icebp
mov
push
lds
aas
stos
cld
ret
xchg
shll
xchg
mov
shlb
mov
pop
fmuls
mov
jbe
ret
push
mov
mov
rcr
sub
or
or
fstpl
lret
mov
jns
pop
insb
push
into
lret
aaa
add
xor
mov
add
popf
or
jge
cmp
add
mov
adc
xorb
mov
fistpll
aas
cmp
imul
dec
mov
fsub
adc
jge
mov
jp
add
inc
out
call
nop
pop
ret
sbb
lahf
pop
pop
loopne
push
popf
push
adc
scas
dec
loope
es
add
jecxz
xchg
out
ss
sbb
sbb
jecxz
and
cmp
push
in
mov
sub
adc
dec
arpl
sub
adc
pop
imul
xor
and
lcall
flds
xchg
xor
es
into
push
pushfw
push
add
mov
lock
mov
cmp
cmp
popf
enter
sbb
dec
lret
jno
pop
vpaddw
inc
aad
out
jnp
cwtl
cmpsw
and
pop
sti
push
and
sbb
test
xchg
cli
mov
ljmp
ljmp
mov
ljmp
cwtl
pushl
sbb
gs
mov
sbb
jmp
xchg
push
push
push
lahf
inc
pop
fbstp
pushf
lock
andl
movsl
test
xor
jg
pop
stc
out
daa
repnz
gs
sbb
sbb
or
pop
pop
subl
or
jae
sub
mov
cmpsl
inc
dec
mov
and
mov
andl
les
idivb
sarb
fistl
jne
sub
xchg
inc
and
or
mov
pop
sub
push
les
insb
movsb
fisubrs
aam
clc
mov
cmc
outsb
jecxz
sbb
sub
inc
loope
outsb
dec
lods
repnz
pop
idivb
or
xor
sahf
cmpsb
ds
outsl
pusha
or
and
pop
ja
xchg
xchg
andl
sub
push
pop
jecxz
daa
cmp
pop
hlt
xchg
test
jge
add
jle
pop
inc
cmp
xor
push
add
adc
es
repz
fidivs
jb
push
pop
push
mov
jns
sub
sbb
push
dec
xchg
testl
push
pop
cld
lds
push
aas
mov
aad
test
inc
or
or
aad
jp
enter
xchg
push
out
adc
mov
mov
xchg
mov
adc
cli
mov
add
fcmovnbe
js
stos
sti
fdivl
jl
sbb
sbb
mov
lret
push
leave
mov
xlat
stc
xchg
xor
dec
pop
jnp
jge
cmp
dec
popa
pop
pushf
fs
pop
fdivl
and
cmp
cli
cld
xor
inc
rclb
scas
xchg
aas
push
popf
cld
push
or
and
jnp
aas
enter
lret
subb
popa
push
and
sbb
mov
sub
dec
fdiv
movb
adc
jle
mov
fstpt
pop
fistl
mov
repnz
ret
loop
stos
cmp
lds
les
ss
shll
mov
cs
xor
and
int3
and
test
jge
aas
fmul
ja
jmp
mov
int3
idivl
rdtsc
lods
pushf
gs
nop
hlt
imul
dec
mov
jle
lret
mov
cld
cmp
insb
cmp
cmp
repz
jae
imul
adc
xchg
pop
shr
nop
cmp
shrb
xlat
mov
movsb
mov
outsl
sbb
arpl
mov
mov
addl
push
nop
push
mov
inc
jmp
cmp
rorb
pop
dec
insb
xchg
rolb
sbb
fwait
shr
add
push
push
xor
push
fsubrs
jecxz
mov
shlb
push
shlb
dec
enter
popf
into
mov
pushf
xchg
sti
add
pop
inc
xor
jp
stos
cmc
les
pop
data16
sbb
bound
cmp
push
adc
jne
xchg
es
inc
rcll
loop
cmp
cmpsb
stos
nop
sbb
jge
sub
out
ds
jb
jmp
repz
pop
ss
dec
loop
mov
push
jmp
pop
lcall
or
mov
aam
inc
dec
aam
in
and
subb
jmp
xchg
mov
loopne
out
lods
pop
clc
or
stos
dec
jnp
sub
mov
scas
lahf
lods
aad
mov
mov
mov
sarl
mov
loope
inc
popa
push
xchg
sub
add
cmpb
xor
jecxz
push
jno
push
cmpsb
jne
je
test
push
inc
loopne
outsl
mov
shr
inc
or
subb
sbb
loopne
stc
mov
jle
lret
xchg
cmpsb
fsubs
mov
adc
push
jp
retw
inc
lea
fisttps
mov
inc
push
jp
mov
inc
pop
in
mov
or
pop
inc
lret
or
into
popa
mov
cs
cmp
bswap
inc
xchg
mov
mov
mov
lret
pop
test
stc
push
ficomps
mov
and
popa
in
mov
mov
ss
jns
push
pop
add
in
loop
push
fnstcw
andb
insl
stos
push
cmp
loopne
sbb
dec
or
or
sbb
out
pusha
mulb
out
push
inc
cmp
arpl
sbb
mov
negb
push
mov
int3
sbb
jecxz
inc
fmul
sub
aaa
fcomps
adc
inc
fxch
flds
loop
add
out
divl
sbb
push
and
jp
fnstenv
xor
rclw
pop
jmp
cmp
mov
jle
jecxz
nopl
je
inc
mov
jnp
int
rcr
les
std
fwait
jmp
mov
int3
adc
jl
add
pop
mov
xlat
inc
jg
pop
aam
jbe
xchg
and
adc
insb
and
ret
movsl
iret
jae
sub
test
mov
mov
fldl
xchg
cli
enter
daa
push
fbstp
cmpsb
popf
mov
pop
ret
ds
lods
pop
push
jbe
orl
aas
lret
mov
jb,pn
fcmovnbe
rorl
in
lods
leave
shll
cli
sbb
xchg
mov
shrl
movsl
sub
mov
xchg
out
mov
mov
outsl
add
repz
into
mov
je
std
add
adc
sub
pop
lret
mov
mov
jmp
or
jmp
add
inc
mov
cmp
cmc
sbb
jmp
pop
fstp
pop
enter
xorl
in
sti
pop
popa
and
imul
dec
sub
into
clc
lock
push
fdivr
mov
or
lahf
pop
enter
push
sahf
mov
push
cmp
icebp
cmp
pop
cltd
out
out
adc
mov
add
bnd
mov
loopne
sub
int
adc
jl
sbb
jbe
mov
jbe
push
add
or
jecxz
test
popl
adc
pop
inc
mov
shl
add
xor
fsubp
movsl
xchg
or
cmp
incb
jnp
inc
cmp
mov
or
int3
sbb
add
inc
mov
outsl
cwtl
dec
sbb
repnz
and
imull
testb
xor
push
dec
push
dec
jnp
mov
sarl
add
mov
sub
arpl
cltd
lcall
mov
les
clc
mov
les
std
sub
mov
pop
popa
repnz
rcrb
scas
or
sub
xor
out
aad
mov
scas
and
mov
pop
xchg
inc
or
cmp
in
sub
mov
add
inc
adc
stos
add
fdivl
mov
jecxz
movsl
test
in
les
add
sbb
and
cli
arpl
faddl
pushf
stos
sti
inc
imul
outsb
xchg
jae
sti
loope
jp
dec
test
ret
jg
pusha
sbb
data16
sti
xchg
rep
daa
aas
dec
jo
sbb
push
push
adc
scas
andl
jno
xchg
push
mov
movsb
sbb
lahf
mov
jp
fiadds
daa
data16
xchg
jno
pavgb
int
adc
into
dec
push
lsl
test
push
dec
dec
jecxz
dec
daa
push
mov
mov
in
in
cmpsl
inc
mov
jl
imul
fdivrs
adc
mov
scas
push
push
stos
out
outsb
inc
dec
xchg
jecxz
jmp
mov
pop
ss
sub
inc
dec
jmp
outsb
outsl
out
das
shll
insb
inc
divl
or
cmc
ficompl
lahf
je
push
out
mov
mov
sub
push
out
es
sub
pop
in
xchg
xchg
adc
mov
sti
xchg
in
pop
adc
push
in
jmp
les
es
mov
or
adc
inc
push
and
cltd
sahf
out
loop
push
insb
push
or
loopne
pop
stos
add
popa
hlt
in
push
cmc
mov
push
push
mov
push
movsb
inc
mov
in
add
xchg
cli
jns
sub
pop
dec
mov
jbe
inc
dec
into
aas
xchg
jbe
fwait
jb
adc
mov
dec
std
pop
mov
xorl
mov
sbb
push
enter
in
data16
nop
imul
js
mov
jne
fiadds
or
int
imul
mov
sbb
cmc
addl
xchg
sub
mov
mov
dec
push
bound
dec
pushf
mov
popfw
xchg
xor
cmovp
sbb
mov
mov
and
repnz
xor
and
movsl
cmp
jns
int3
jle
pop
mov
addr16
fldl
inc
and
ficoml
repnz
sub
lret
enter
leave
lcall
mov
jl
jmp
jbe
and
sub
push
jbe
iret
pop
aas
adc
fmulp
imul
mov
adc
cmp
mov
sbb
out
adc
pop
aaa
pop
jecxz
mov
movsl
xor
dec
ss
cli
add
int
dec
lcall
cmc
stc
ret
out
mov
jnp
jmp
das
es
mov
jnp
xor
or
mov
sbb
adc
mov
hlt
into
daa
adc
rorl
shll
sbb
inc
aaa
add
nop
sbbl
dec
push
mov
push
outsb
lcall
pop
aas
aam
jle
inc
aam
mov
repz
in
dec
ja
or
mov
cld
xchg
jae
mov
ljmp
loope
push
cmpsb
mov
dec
push
jp
mov
divb
dec
pop
mov
sub
jnp
inc
mov
out
push
and
es
fcomip
lahf
fwait
cmp
dec
jp
arpl
test
shlb
nop
push
aam
cmp
mov
cwtl
dec
mov
arpl
adcl
xor
cmp
sbb
xchg
lea
cmc
add
jns
out
mov
aaa
addr16
xor
loope
mov
ret
adc
and
push
xor
js
jecxz
xor
imul
int
les
mov
jmp
mov
mov
jmp
and
dec
mov
dec
mov
jb
scas
out
fnstenv
mov
jbe
xor
stos
jl
push
in
push
outsb
int3
sbb
inc
pop
fildl
pop
fwait
push
and
icebp
add
mov
jne
push
loop
mov
jmp
sbb
mov
pop
add
pop
dec
stos
jnp
in
js
jle
dec
xchg
aaa
xor
sub
cwtl
xor
cld
or
hlt
and
jg
push
jbe
sbb
aam
push
inc
cmp
cld
pop
mov
jns
test
xchg
pusha
out
sub
out
popa
cmp
dec
jg
repz
repz
mov
repz
insb
and
lcall
insl
pop
es
push
cwtl
int3
stos
shr
sub
outsb
xchg
cltd
or
js
xchg
jp
bound
push
stos
xor
push
lahf
loopne
sarl
inc
fucomip
push
std
scas
xor
imulb
mov
jo
inc
out
inc
inc
sahf
jmp
loopne
push
cmp
push
loope
bnd
pop
cld
pop
jl
popf
adc
jne
out
pop
and
jno
xchg
dec
ror
inc
push
mov
jecxz
sti
push
dec
nop
pop
xchg
push
sbb
push
fcoml
mov
jle
jb
push
sahf
add
cmp
add
shll
add
push
ret
add
das
dec
xchg
cmc
pop
jnp
mov
sti
xchg
mov
add
push
clflush
insl
loopne
shlb
test
mov
xlat
mov
int3
test
ret
xor
mov
and
movsl
cli
dec
sbb
sbb
or
notb
lock
xor
shlb
and
xor
mov
aaa
and
push
sub
std
dec
mov
gs
insl
test
cmpsl
in
leave
xchg
sub
bound
or
jbe
aam
dec
pusha
pop
lret
movb
jae
iret
fiadds
das
imul
data16
scas
iret
rclb
fdivrs
mov
cmp
rcll
mov
jmp
inc
sub
mov
test
sub
fdivr
sub
jecxz
add
add
jecxz
pop
mov
sti
cmp
dec
sub
stc
push
mov
fldcw
in
shrl
pop
sub
mov
pop
cli
fisubrs
push
inc
mov
lret
scas
mov
xorb
mov
sahf
jmp
sbb
dec
jmp
xchg
stc
pushf
es
lcall
cmpsl
sub
jg
jne
adc
cs
test
jg
add
xchg
sti
mov
fadd
lret
pushf
outsl
arpl
inc
scas
mov
test
insb
int3
movsl
xor
mov
fscale
push
ljmp
aam
ret
cld
and
aam
sub
adc
push
cmp
inc
sbb
inc
inc
inc
fildll
hlt
adc
fcmovb
jbe
inc
sbb
dec
inc
jbe
fcoms
jns
sbbl
sub
push
dec
repnz
lahf
fadds
cmp
mov
das
and
xchg
out
ss
cltd
call
sahf
rorl
mov
and
mov
out
fcoms
or
loopne
and
out
sbb
in
aas
adc
int
lock
cwtl
mov
shlb
xor
mov
mov
dec
mov
jo
xchg
push
int3
addr16
fimuls
out
je
add
sub
jp
jo
xchg
xchg
test
lcall
push
out
dec
jmp
cmp
outsb
mov
jp
pop
dec
sub
inc
xchg
cmp
xor
mul
xchg
test
inc
and
pop
push
or
pusha
shlb
push
cmp
cwtl
stos
xor
lods
xor
sub
xchg
sbb
je
mov
cmp
int3
sub
mov
jecxz
ret
cmc
loopne
xchg
push
cmp
jle
xor
jne
or
enter
push
test
cmc
or
popl
mov
xchg
out
mov
fisubrs
andl
jmp
add
test
in
lret
dec
adc
lea
sub
push
push
mov
inc
arpl
movsl
mov
adc
cmp
push
popf
icebp
and
mov
outsl
std
cmc
rcl
loope
movsl
and
jge
test
inc
jp
adc
cmp
aaa
sub
out
xchg
insb
lock
cmpsl
dec
dec
rcll
cmp
scas
pop
shlb
push
add
out
das
xor
xor
ss
push
filds
mov
aam
pop
in
ljmp
pop
jne
mov
scas
aam
or
inc
and
nop
pusha
daa
out
ret
lods
sbb
add
jge
mov
mov
inc
mov
lcall
rolb
jecxz
sbb
nop
and
xchg
or
inc
enter
or
ss
ja
sub
mov
jne
sub
lea
and
sub
mov
sub
dec
lea
inc
sahf
jno
inc
add
pop
movsb
push
or
cmpsl
xchg
sbb
loopne
out
lods
sub
movsb
in
imul
xor
pop
int3
inc
xchg
mov
mov
sub
hlt
out
sbb
cmp
xchg
add
pop
jne
ljmp
outsl
jno
icebp
sahf
ja
push
stc
out
mov
clc
pop
dec
cltd
push
movsb
mov
or
jge
mov
mov
cmovge
push
pop
cmpb
cmp
mov
fdivl
and
stos
jl
sahf
lret
adc
das
and
jge
adc
mov
stos
adc
cltd
sbb
mov
xor
push
call
xchg
packsswb
xor
pop
inc
das
sub
adcl
cmp
imul
dec
aas
pushf
dec
pop
mov
bound
in
lods
ret
aaa
jl
bound
leave
cmp
dec
push
xchg
pop
pop
xchg
add
dec
dec
adc
cmpsb
jnp
outsl
push
and
rcl
mov
shll
push
ljmp
xchg
in
push
adc
mov
sub
add
mov
sbb
daa
dec
bound
and
data16
mov
xor
push
pop
inc
push
daa
test
sarb
or
cwtl
cld
or
push
cwtl
in
in
popf
popa
repz
xor
or
jecxz
cmp
sbb
punpcklwd
sbb
push
inc
xchg
add
inc
inc
xorl
rol
lret
or
add
or
inc
mov
in
movsb
imul
xlat
movsb
stos
ret
xchg
sub
cmpsl
add
xchg
arpl
mov
cbtw
sub
cltd
loop
mov
inc
ds
ja
jb
or
lret
jp
lcall
les
or
fdivs
push
adc
sub
pusha
cmp
data16
inc
jmp
and
dec
push
xchg
sti
sub
inc
mov
pop
mov
add
sbbl
aas
xor
mov
loopne
cld
test
mov
jne
push
mov
mov
jge
mov
das
adc
stos
xor
jb
pop
inc
pop
inc
dec
notb
mov
jo
add
sbb
stc
adc
les
fistpll
lcall
sub
push
daa
int3
mov
jne
ds
test
jl
jge
or
mov
int
pop
dec
repnz
pusha
insb
daa
nop
inc
clc
or
in
inc
fwait
ss
pop
imul
inc
dec
test
ret
out
fisttpl
jbe
std
add
rcrb
pop
push
cmpsl
or
push
push
pop
pop
les
out
insl
or
into
stos
cmc
inc
bound
lds
cmp
in
fs
xchg
popf
xchg
lods
sbbl
push
pop
icebp
xor
push
adc
jle
test
mov
fs
mov
lock
xor
mov
iret
cmp
pop
pop
popf
nop
sub
sbb
pop
adc
mull
gs
mov
xchg
sub
fdivrs
mov
loopne
dec
aam
inc
std
ja
cld
push
xchg
ret
mov
dec
push
addr16
scas
jl
jg
jp
mov
addl
jmp
leave
loop
mov
xor
sbb
add
cmc
and
sbb
fldt
fisubrl
sub
or
jnp
sub
fwait
sbb
std
mov
pop
out
je
cmpsb
movsb
test
aam
stos
sub
push
lods
inc
filds
js
ja
icebp
or
insl
mov
add
and
arpl
popa
cmp
push
cmpsl
sbb
lcall
enter
cmp
std
or
js
pop
mov
lret
mov
mov
lahf
jge
int
adc
icebp
xlat
icebp
sub
push
negb
movsb
sbb
xchg
aas
jecxz
in
mov
add
add
lods
das
sahf
xchg
stos
ja
movsl
push
mov
pop
in
arpl
and
jbe
sbb
xchg
add
sub
xchg
mov
pop
pop
adc
arpl
pop
mov
or
push
push
lods
repz
or
je
mov
add
jb
sub
sar
pop
pop
popl
mov
adc
ja
inc
faddl
mov
mov
and
mov
add
inc
clc
pop
mov
dec
xchg
and
notl
cli
ret
sarb
adc
inc
mov
jg
into
inc
xchg
dec
cmpsb
jbe
repz
repz
sub
pop
sub
sub
test
xor
pop
sti
inc
mov
fstpl
xor
xor
rep
mov
repz
lea
lock
popa
pop
test
mov
lret
pushf
fldl
test
and
adc
and
mov
fstp
les
lods
out
lcall
push
cli
xor
test
sub
jbe
mov
mov
xchg
xchg
push
out
xchg
mov
jge
je
test
adc
mov
lret
cwtl
je
or
loop
shlb
add
clc
lcall
leave
mov
fimull
xor
mov
call
xchg
sub
insl
scas
mov
add
or
mov
iret
adcl
jno
xchg
mov
out
popf
xchg
testl
or
dec
cmp
push
loope
aad
inc
jmp
mov
xor
push
cmp
jb
sbb
add
lea
gs
xor
bound
pushf
and
shlb
jg
dec
mov
insl
jmp
add
xchg
ss
push
pop
aas
pop
shl
inc
cs
pop
outsl
test
or
cmp
push
aas
mov
loop
xchg
mov
xchg
push
sub
xchg
cwtl
xchg
and
inc
mov
push
or
fmull
loope
mov
inc
push
cmp
xlat
lock
scas
shll
out
ljmp
jmp
jae
inc
bound
aaa
sub
or
prefetch
push
jmp
inc
inc
pushf
ret
jo
sbb
es
aas
aaa
push
imul
pop
mov
pop
call
rorl
or
inc
fdivrs
add
fistl
or
inc
out
scas
mov
add
mov
cld
mov
fsts
lcall
sub
inc
xchg
in
mov
push
aas
fs
inc
jle
jno
das
sub
cltd
leave
rorl
jns
jle
jp
fbld
stos
push
test
jp
in
mov
dec
iret
push
lcall
aam
fwait
mov
daa
push
sti
xchg
sbb
cmp
rcll
xlat
or
mov
push
cltd
lcall
and
lahf
divb
xor
iret
stos
clc
cmc
pop
jle
pop
ljmp
rcrb
xchg
shr
adc
mov
jmp
and
imul
jge
adc
movsb
mov
mov
or
adc
mov
mov
aas
xchg
xor
jne
inc
inc
lds
jns
sbb
cmp
cmp
sub
jae
xchg
push
popf
in
int
pop
adc
pop
clc
pop
addr16
ret
icebp
dec
pushf
or
stc
or
movsl
inc
movsb
inc
rol
cmp
call
stc
dec
icebp
lods
lods
and
insl
xchg
sbb
push
clc
xorb
xchg
mov
insl
lods
sahf
and
push
js
add
test
push
xor
faddl
enter
dec
pop
pop
sahf
loope
iret
insl
sbb
push
dec
xor
jmp
inc
mov
lods
push
lcall
or
aad
filds
and
std
jne
jl
xor
jle
xchg
lock
mov
imul
cltd
repz
popf
inc
lods
leave
pushf
or
rcrb
and
add
test
dec
sub
data16
in
xor
inc
xor
cltd
pusha
dec
mov
adc
adc
ja
xchg
int3
adc
jns
mov
sbb
dec
das
shlb
pop
mov
sub
push
test
les
rcll
inc
fldl
rcrl
push
lock
and
into
push
das
jo
cmp
push
popl
adc
loopne
repz
mov
nop
negb
fwait
in
aas
add
fisubrl
adcl
inc
xor
ss
stos
add
dec
pop
stos
push
lods
jmp
inc
cmpsl
rdtsc
jno
pop
aad
pop
aaa
sbb
push
cltd
or
push
lea
jmp
sub
sub
or
sub
jno
xor
lods
push
cwtl
cmp
dec
or
xchg
fsubl
aas
jno
popa
sbb
stos
jb
aaa
mov
cmp
lods
mov
adc
or
popa
mov
ret
push
adc
push
cli
and
das
ss
out
pop
push
clc
fwait
xor
adc
lds
add
cmp
pop
jp
arpl
cli
xor
jae
xor
push
fmul
nop
enter
stos
shrl
scas
adc
std
jae
add
lret
rcrb
mov
mov
lods
leave
inc
mov
xchg
mov
cmpsb
mov
sub
and
xor
pslld
mov
lcall
jnp
outsl
jns
xor
dec
pop
mov
cmpsb
rcl
std
or
adc
jbe
clc
and
dec
jg
mov
jl
stos
push
out
outsl
gs
xor
jae
clc
inc
or
xchg
add
paddusb
aas
mov
add
cmp
push
pop
sub
mov
mov
lretw
sbb
loop
sahf
insl
sbb
cmp
mov
sub
pop
xor
mov
repnz
outsb
out
jne
add
sub
test
adc
repnz
dec
scas
fdivs
jmp
jns
ret
xchg
mov
adc
mov
leave
sub
adc
icebp
dec
push
pop
mov
andb
lods
aam
jg
notl
add
push
jecxz
cmpsl
das
jmp
hlt
fcoml
imul
mov
adc
xchg
lods
mov
dec
aad
cwtl
and
test
jg
std
inc
repz
jne
fidivl
mov
xchg
pop
xor
fsubrs
aas
mov
cld
sub
inc
and
xchg
push
addr16
jnp
std
sahf
shll
movsl
insl
mov
enter
outsb
movsb
adc
daa
sub
insb
inc
test
sbb
enter
push
fstpt
fmull
jno
push
cli
mov
cmp
dec
sub
test
les
xchg
xor
cmp
xor
in
xchg
ljmp
xchg
sub
daa
insb
sbb
ja
mov
mov
or
mov
sub
push
or
popa
lods
mov
pop
push
movsb
pushf
mov
dec
and
imul
in
stc
push
movb
jno
inc
jmp
out
sbb
push
ret
call
add
fsubr
insb
imul
test
pop
nop
add
cmp
out
mov
push
jo
or
out
jbe
nop
icebp
sbb
stos
lods
pop
pop
adc
outsb
shl
imul
fisubrs
addr16
add
push
dec
cli
popa
mov
sar
imulb
ss
fdivrs
ret
cld
xchg
cmc
lcall
lds
sbb
repz
cli
jge
imul
mov
data16
stos
pop
mov
sbb
jge
insb
cltd
push
ljmp
xchg
scas
or
add
or
push
aam
adc
dec
and
cpuid
lea
rol
cmpb
xchg
push
shlb
loop
push
gs
inc
or
mov
insl
arpl
in
jge
mov
mov
cmp
repz
jmp
adc
lahf
les
cmc
ret
and
daa
ss
cmpsb
mov
cmp
arpl
xchg
xchg
xchg
fisubrl
sub
lods
ficoms
jns
and
mov
ds
dec
cmpl
sbb
popa
notl
mulb
orb
mov
into
cmpsb
cmp
arpl
mov
jle
mov
popf
pop
mov
pop
out
jp
ja
loopne
push
fimuls
mov
ja
leave
pop
push
or
mov
cld
jp
jp
mov
andb
lea
adc
mov
inc
jo
addb
inc
add
insl
add
add
push
push
out
sub
cli
or
fdivrs
fsubrp
push
or
lods
fisubl
int3
jp
pop
cmpl
sti
inc
adc
sub
lret
mov
sub
xchg
imul
sbb
push
fwait
cwtl
lods
scas
or
pop
cltd
xchg
jmp
fisttpll
sti
movsl
cltd
insb
jg
pop
in
das
stc
xchg
cmp
fwait
dec
inc
scas
ret
outsl
popa
pop
cltd
pop
xchg
pop
pop
mov
jno
imul
call
in
ret
popa
stos
adc
inc
pop
add
adc
pop
std
andl
negb
jbe
iret
push
or
stc
data16
inc
xor
fwait
clc
neg
inc
pop
sbbb
sub
testb
push
cmpsb
pop
mov
punpcklbw
sub
pop
inc
and
jmp
rorl
pusha
popa
jmp
pop
and
in
lret
or
pop
int
jle
cli
sub
xor
inc
mov
into
imul
inc
test
jae
cli
outsb
test
push
outsl
add
cmp
and
add
sbbb
add
int3
or
xchg
mov
mov
orl
adc
fs
outsb
mov
outsb
mov
lret
shl
test
das
push
insb
inc
dec
aaa
mov
push
dec
dec
mov
scas
and
mov
cmc
sbbb
ja
in
mov
addl
mov
ja
pushf
mov
mov
test
notl
or
dec
insb
ret
dec
jb
addl
inc
inc
inc
xor
xor
push
in
inc
movsb
xchg
pop
test
outsb
jmp
pop
jmp
xchg
cmp
jle
insb
mov
ljmp
jns
xchg
cmpsb
test
and
dec
hlt
in
and
movd
sub
push
repz
push
pop
add
adc
daa
xchg
je
jnp
cs
push
dec
mov
mov
mov
mov
inc
sbb
cmp
cmp
dec
arpl
scas
inc
dec
aam
les
dec
aam
xor
std
jmp
xlat
imul
mov
jmp
inc
jecxz
mov
cltd
pop
or
cmp
pop
jo
add
in
lret
cmpb
mov
ficoml
dec
xlat
push
adc
and
jl
and
mov
fmul
dec
inc
dec
ss
pop
xchg
aas
leave
leave
jnp
filds
ret
test
outsl
xor
mov
insl
leave
outsb
aaa
rcr
daa
cmpsl
std
cld
mov
mov
jne
mov
arpl
cltd
pop
add
or
push
ljmp
push
push
loopne
mov
mov
xchg
jb
lahf
xor
mov
shlb
inc
cltd
hlt
mov
leave
roll
stos
jnp
outsb
stos
imul
mov
fnsetpm(287
and
ja
out
lds
adc
cmp
jle
inc
cli
or
xchg
inc
je
mov
loop
mov
fldcw
mov
push
pop
cs
pop
push
insl
or
enter
ret
lret
int3
cld
lret
or
cs
add
ja
cmpsb
mov
addr16
mov
xchg
jne
ss
arpl
push
repz
mov
jmp
inc
mov
jp
inc
add
lea
xchg
repz
xchg
add
stos
mov
pop
data16
adc
push
cld
das
xchg
dec
andl
cmpsb
imul
hlt
xchg
call
and
cmpsb
mov
std
aas
fisttpll
push
or
and
or
jl
mov
mov
mov
fsts
imul
repnz
mov
movsl
popa
movsb
push
fnstenv
dec
fs
stc
sub
mov
and
js
mov
out
xor
mov
call
mov
fisubrs
into
std
sbbb
pop
jg
aaa
lods
cmp
mov
mov
adc
fs
jne
out
add
insl
ss
mov
cmpb
xor
mov
clc
shrb
xchg
cmp
dec
or
mov
mov
mov
push
and
bound
and
and
lahf
mov
stos
mov
mov
push
hlt
rolb
repz
mov
lret
lcall
mov
add
dec
cld
jae
dec
nop
lods
pop
pushf
cmpsb
pusha
lds
push
fwait
mov
push
mov
into
push
aas
sub
push
push
inc
pop
lret
or
popa
dec
mov
iret
pop
aad
addl
pop
mov
daa
test
mov
inc
inc
cwtl
or
fnstenv
ljmp
pop
mov
scas
imul
mov
test
je
lods
in
pusha
dec
mov
roll
std
xchg
xchg
add
leave
pusha
sbb
push
add
mov
imul
mov
jge
ds
inc
lcall
ret
or
add
push
insl
pop
pop
ficoms
pop
pop
fistpll
sbb
ds
xor
lahf
scas
insl
arpl
js
maskmovq
notl
pushl
insb
cs
bound
mov
xor
push
xor
rorb
jmp
out
int
pop
and
es
jo
push
mov
in
imul
sbb
sahf
or
ror
mov
pushf
or
pop
aas
or
sbb
xchg
repz
incb
sub
or
es
lahf
cwtl
clc
lcall
xor
push
xchg
addl
xchg
inc
mov
xor
push
sbb
pop
xchg
push
jne
xchg
daa
mov
inc
in
mov
stos
push
dec
add
mov
fildll
flds
cmpsl
pop
lds
repz
sbb
cmc
addr16
pop
aaa
push
les
xor
lods
mov
push
jge
loopne
ret
or
xchg
cmp
sbb
in
add
mov
fstl
leave
mov
and
jp
sub
fisubrl
mov
xchg
addb
add
out
in
xor
int3
gs
daa
mov
shr
jbe
insb
xchg
dec
in
das
addr16
xor
stos
xchg
roll
rclb
cmp
pop
xchg
xchg
aaa
or
outsl
ja
call
ror
movsb
sarl
mov
rol
aam
mov
mov
adc
add
dec
cmp
mov
cmp
xchg
orl
sub
and
fs
shll
movsb
std
inc
loop
enter
push
xchg
movsl
dec
clc
xchg
je
lcall
test
aas
or
ret
in
ss
and
xchg
cli
push
stos
pop
call
shl
xor
ljmp
clc
outsb
pop
xchg
test
cmovp
fdivl
sub
outsl
test
pop
sahf
push
cmc
push
mov
pop
jecxz
dec
and
mov
dec
in
mov
rorl
push
mov
adc
jle
push
or
cmpsb
insb
into
jo
ds
jp
add
inc
pop
out
test
andl
fcoml
std
std
push
mov
sti
push
xor
aam
dec
cmp
and
xor
xchg
inc
mov
out
mov
push
sbb
ja
aam
test
cmp
insl
push
xor
mov
sbb
sahf
sbbl
mov
es
js
notl
jnp
sub
and
scas
sbb
pop
rcr
sbb
xor
ja
pop
jle
fnstcw
adc
mov
and
pop
call
movsl
push
fwait
add
mov
roll
pop
mov
cli
and
bound
xchg
aad
out
jge
push
test
mov
test
add
test
adc
mov
sub
mov
jp
jns
and
aam
adc
pushf
cmp
movsb
stos
test
lods
push
xchg
pop
mov
mov
adcb
jno
cmc
je
cs
cltd
cmpsl
jns
cmp
mov
inc
dec
movsl
sub
ss
jns
jno
push
xchg
pop
dec
mov
xchg
cmpb
pop
mov
xchg
pop
gs
addb
add
jp
mov
sub
push
clc
arpl
and
xor
hlt
imul
test
cwtl
sbb
pop
xor
mov
and
or
fdivrl
add
mov
mov
sahf
int
in
adc
data16
pcmpeqd
mov
mov
das
add
rcr
push
mov
fadds
ret
jg
scas
lahf
jp
jge
mov
xchg
jno
mov
jp
xchg
push
data16
test
es
mov
mov
mov
je
adc
inc
lahf
dec
outsl
js
out
dec
mov
xor
fstl
pop
mov
loop
sub
push
xchg
cmp
hlt
js
and
or
imul
call
add
mov
clc
out
movsb
or
jle
lds
int
loope
adc
cltd
jnp
mov
fidivs
push
insb
jno
sbb
jg
sbb
push
test
ret
lcall
push
jmp
scas
icebp
mov
iret
dec
lds
or
push
int
xchg
push
les
es
jnp
lea
lock
clc
rclb
pop
or
mov
fisttps
adc
xor
push
cltd
xor
jl
sub
insb
jmp
icebp
js
cmp
xchg
faddl
dec
xchg
nop
fwait
test
hlt
jbe
mov
jg
add
push
push
mov
dec
push
sub
loop
lds
fwait
cmp
sub
cmp
mov
pop
sbbl
pop
incl
repz
jg
sbb
pop
inc
mov
cmp
inc
imul
jb
out
jno
js
fdivrs
fcompl
lret
adc
das
mov
bound
lea
stos
cmp
addr16
sub
ljmp
pop
adc
xor
je
sbb
sbb
lods
cmpl
aas
fnstsw
and
xor
ljmp
scas
bound
cmpsb
stos
dec
aad
cmp
jge
aaa
push
ffree
loope
adc
in
add
xchg
scas
pop
sbb
mov
lret
xor
mov
sbb
out
inc
inc
cwtl
jle
into
and
stos
loopne
insb
xchg
shlb
pushf
stos
cltd
mov
lcall
add
push
cmpsb
out
xor
lcall
mov
xchg
jno
xor
mov
pop
nop
pop
rcrb
mov
nop
ljmp
outsb
addb
jo
subl
arpl
xchg
cmc
cs
int
js
bound
mov
ss
pop
pop
pop
pop
mov
or
call
push
aad
in
ret
filds
popa
fwait
sbb
fwait
push
dec
push
lock
or
shll
pop
psadbw
inc
cli
rcr
jecxz
sbb
lret
push
xchg
out
test
mov
scas
lods
inc
xor
sub
lahf
jg
fsubrs
aad
jae
mov
push
adc
push
repz
dec
jle
subl
mov
cmpb
pop
and
in
fidivl
scas
sbb
push
gs
mov
xor
xchg
out
sbb
js
inc
mov
pop
jnp
mov
sbb
cmp
js
pop
pop
enter
xchg
daa
mov
pop
pop
xchg
xor
lret
push
out
sbb
mov
mov
jno
das
js
iret
mov
cwtl
negb
inc
or
push
rorb
aam
jmp
mov
sbb
cmp
js
ss
mov
int
insl
sbb
cmp
ret
or
outsb
xor
insl
in
daa
and
mov
xor
cmpsb
cwtl
mov
inc
bnd
in
mov
scas
repnz
cmc
sbb
icebp
jbe
mov
push
xor
pop
pop
xchg
mov
dec
or
leave
cwtl
loopne
bnd
in
int3
xor
xor
dec
in
mov
in
jno
divl
lret
bound
xchg
and
lods
addr16
jne
sub
adc
push
out
adc
mov
fwait
jne
jno
arpl
xor
cmp
xor
or
lret
push
imul
movsb
outsb
hlt
adc
aad
int
test
paddsb
jecxz
mov
fs
stos
inc
jp
push
or
outsb
add
movsl
mov
ss
in
mov
stc
or
pop
xor
mov
mov
mov
or
adc
and
cmp
push
dec
sbb
test
pop
xor
sub
push
xor
add
mov
dec
mov
mov
inc
dec
mov
mov
xlat
sub
fs
push
sub
sbbb
test
and
pop
jmp
adc
mov
je
push
in
ljmp
dec
lret
in
adc
insb
rol
push
arpl
lret
movb
std
ret
push
mov
sti
rorb
outsb
popa
mov
xchg
mov
lret
xlat
idiv
mov
dec
add
pop
or
stos
push
pop
sub
sahf
xchg
pop
push
xor
lods
mov
fsubs
mov
or
repz
push
mov
mov
jo
mov
cli
xor
sarb
dec
hlt
mov
mov
ret
xlat
ljmp
inc
rcl
idiv
das
lret
in
das
clc
fmuls
inc
or
test
sub
push
insl
cwtl
xlat
orb
push
arpl
je
pop
test
dec
cmp
sarb
pop
or
aam
in
iret
push
xchg
roll
sub
jns
xchg
pop
xchg
xchg
cwtl
add
cmp
mov
mov
stos
inc
mov
jnp
xor
add
rcrb
loop
pusha
hlt
mov
add
add
push
movsb
sbb
jbe
bound
adc
repz
xor
mov
lea
nop
pop
and
cli
icebp
cmc
jne
notl
or
sbb
jno
out
sti
dec
in
add
and
enter
and
push
psubusb
inc
xchg
inc
xchg
scas
inc
cwtl
mov
movsb
sub
flds
inc
sub
sti
aam
pop
push
pop
inc
inc
andl
push
xchg
jg
add
inc
insb
and
aad
lcall
imulb
nop
push
pop
aaa
inc
fdivp
xor
in
sbbl
test
fadd
push
into
loop
imul
divb
jl
xchg
mov
adc
sub
ret
and
addb
cmp
ja
inc
cli
je
add
bound
lahf
pushf
mov
std
in
nop
scas
mov
sub
xchg
xchg
daa
dec
lods
loopne
mov
mov
ficoms
add
outsl
test
jnp
aad
dec
add
cmp
push
out
xor
jbe
jmp
adc
mov
outsb
iret
mov
nop
in
push
or
or
decl
adc
pop
mov
or
jp
dec
in
xor
xor
vmwrite
mov
or
inc
pop
jae
mov
dec
clc
add
pop
cmc
and
jl
dec
in
and
lock
lods
mov
xor
call
icebp
out
insl
inc
repnz
xchg
adc
inc
bound
sarl
sub
sub
shll
xor
imul
mov
sub
jbe
stos
fwait
push
in
cmp
ror
frstor
fisubs
dec
pusha
lods
enter
inc
test
lret
add
leave
cmp
outsb
imul
and
hlt
sbb
repnz
repnz
adcb
loopne
dec
mov
out
dec
or
jne
addr16
pop
mov
sarb
xor
jmp
pop
int3
test
out
mov
pop
loop
add
xchg
test
cs
or
mov
pop
lret
mov
sub
in
xlat
sub
addr16
mov
and
add
push
dec
pop
xchg
fs
std
mov
push
and
pop
cmp
inc
in
shlb
jg
xorl
in
pop
outsl
sub
and
aam
mov
add
aaa
flds
lods
mov
bound
pop
dec
or
jno
bound
test
jg
fwait
push
imul
test
daa
mov
jo
icebp
cmp
adc
scas
hlt
lret
pop
outsb
je
or
das
call
pop
xchg
dec
xor
loop
push
mov
or
add
pop
inc
aam
mov
mov
dec
into
dec
jns
mov
add
adc
andb
mov
dec
or
test
xchg
insb
add
adc
imul
lods
jno
cli
cmova
jae
shll
or
mov
add
inc
inc
cwtl
dec
mov
xchg
fwait
adc
shr
pop
and
arpl
mov
push
mov
in
fisubrs
lret
mov
rcrl
cld
imulb
fisttpll
xchg
add
stos
rcrl
notb
call
enter
rcrb
push
insb
enter
sar
sbbb
fisubs
in
pop
movsb
pop
xor
addr16
jp
cmpsb
repnz
cmp
cmp
sub
flds
imul
inc
subb
shlb
inc
push
mov
inc
pop
adc
and
dec
popf
and
sub
movsl
xor
xchg
lds
inc
inc
cld
sbb
cmp
out
xchg
fnstsw
out
cmp
adc
in
push
adc
out
xor
inc
mov
mov
bound
inc
push
lds
stos
cmp
jns
pop
jae
shlb
js
push
loop
and
sub
mov
xchg
out
push
scas
sub
xor
sbb
jl
sub
mov
test
xchg
cmp
aas
gs
repz
or
cs
xor
cmc
push
xor
fldenv
jmp
imul
std
in
mov
mov
ljmp
dec
sbb
pop
inc
stos
dec
push
sub
push
sbb
dec
fwait
loope
fldl
arpl
popa
neg
push
insl
test
insl
sbb
adc
or
insl
shll
adc
setbe
mov
inc
mov
xor
std
lahf
or
cmpsb
lods
xlat
or
sbb
push
gs
sub
enter
push
repnz
lret
mov
and
movsl
testl
and
lcall
or
mov
pop
push
xchg
jl
popf
cmp
lock
jge
in
sbb
jge
and
test
dec
orb
aaa
pop
mov
call
andl
jns
mov
lret
in
repz
clc
pushf
mov
adc
movsb
lcall
mov
int
inc
sbb
mov
jle
push
repz
pop
ja
mov
jae
xor
or
inc
daa
dec
mov
sti
adc
jl
mov
cltd
push
fsubp
mov
pop
stos
out
xchg
cmp
lahf
jae
sar
adc
les
jae
in
aad
notl
int3
xchg
sbb
lods
jo
or
fbstp
cmpsl
aas
xor
in
cltd
lods
stos
sub
lods
inc
lea
fimull
addr16
dec
in
movsb
aaa
lods
sbb
jle
sub
pop
dec
and
popa
adc
jp
idiv
pushf
lock
mov
xchg
sub
dec
ficompl
insb
stos
aaa
rorb
lret
jg
ljmp
mov
icebp
ljmp
out
jne
cmp
nop
dec
outsb
cmpsb
cmp
clc
fucom
test
fidivrs
xor
xchg
or
insl
fwait
mov
jle
and
and
rcrl
and
jne
adc
stc
jae
xlat
mov
in
xor
test
lret
or
mov
inc
push
jno
sub
fistps
outsl
sub
mov
mov
fmuls
push
jmp
scas
add
jge
int3
cmpsb
mul
cmp
xor
hlt
lret
jmp
in
push
in
arpl
sub
fimull
xor
pop
fistpl
lret
mov
sub
xor
adc
push
out
mov
in
insl
dec
jns
adc
dec
cld
push
mov
push
mov
or
mov
pop
inc
push
repz
gs
lcall
movsb
add
mov
cs
mov
add
mov
jb
add
repz
jg
ret
push
and
out
jno
push
insl
or
push
imul
lods
stos
add
psrlw
leave
popf
dec
enter
mov
mov
add
push
jg
push
push
fsubrl
cmp
xlat
dec
ret
lock
outsl
mulb
adc
shr
loope
clc
loopne
cmp
ljmp
inc
test
nop
inc
movsl
mov
sub
lret
push
pop
pop
xchg
adc
sub
lods
pop
test
adc
cmp
ret
inc
mov
je
xor
je
out
out
mov
sbbl
std
stos
test
ljmp
mov
mov
mov
push
das
scas
or
cmp
mov
sub
sub
ret
inc
addr16
fucomip
sub
dec
aas
ljmp
jg
imull
stos
pop
cli
cwtl
cmp
mov
mov
stos
jae
addl
je
push
jo
ret
push
dec
sub
sbb
and
pop
jbe
bnd
nop
cmp
gs
aaa
repnz
mov
xchg
out
jne
push
sub
mov
cmc
adc
mov
pop
adc
mov
jg
sbbb
out
notl
in
cmpsb
xchg
lret
and
cmp
mov
ret
stos
mov
push
adcb
mov
lret
jl
scas
xchg
inc
mov
and
ficoms
cmp
mov
mov
test
add
in
addr16
lcall
xor
pop
pop
adc
insl
ficoml
mov
js
pop
jmp
ret
mov
sub
jle
cmpsb
shrl
and
xchg
inc
mov
pop
int
icebp
dec
mov
std
add
shlb
or
or
push
stc
xchg
into
mov
add
mov
inc
rorl
jecxz
les
test
cmp
stc
dec
insb
fdivrp
xchg
dec
inc
mov
mov
push
lods
mov
sbb
clc
dec
out
stos
ret
std
lds
movsl
rclb
sbb
out
js
add
fdivr
mov
and
mov
iret
out
inc
imul
insl
je
les
clc
inc
daa
pop
scas
inc
testb
cmc
imul
fs
cmp
sbbb
pop
cmpsb
jo
lret
pop
lret
cltd
cwtl
push
les
fsub
xor
iret
lods
in
addb
adc
sbb
cmovbe
repz
cwtl
sbb
pop
cmp
xor
mov
dec
test
scas
cmp
mov
adc
mov
lcall
cmp
adc
fdivrs
cld
bound
nop
cmpsb
jns
rcrb
fwait
push
jnp
ss
jmp
xor
cmp
outsb
push
or
xchg
add
mov
dec
mov
inc
pop
mov
adc
jecxz
jecxz
orb
bound
in
mov
mov
jae
inc
pusha
cld
popf
insl
pop
pop
lods
jo
xchg
xor
push
mov
cltd
push
push
mov
les
aas
enter
jg
xor
out
or
jle,pt
push
xor
pop
stc
xlat
xor
lret
clc
xor
dec
cmp
ud1
roll
ret
dec
loopne
sbb
pop
xchg
int3
xchg
or
test
es
jle
mov
inc
movsl
xchg
mov
inc
rcrl
mov
pop
mov
jge
mov
sbb
dec
pushf
das
adc
xchg
inc
xchg
sub
cmp
add
jg
arpl
inc
jb
iret
cli
mov
in
inc
xor
repz
daa
scas
fs
repnz
and
mov
into
mov
xor
je
hlt
popa
push
xchg
sbb
fstps
clc
push
dec
test
cld
cmp
ja
sub
daa
imul
xor
cmp
into
gs
insb
mov
push
scas
dec
inc
pushf
ja
movsl
mov
test
shll
js
and
fcoml
add
in
jge
mov
mov
cmc
fxam
fwait
push
sbb
mov
pop
and
xchg
push
pop
popf
cmp
addr16
test
loopne
xchg
mov
mov
cmpb
jecxz
xchg
ss
push
xchg
int
mov
mov
andb
mov
xchg
shll
adc
mov
push
jbe
sub
repz
mov
dec
dec
xor
pop
mov
dec
sti
outsl
mov
rorb
mov
mov
jae
xchg
pushl
int3
xlat
shr
sti
hlt
pop
inc
fst
xchg
hlt
xor
pop
ja
cmp
inc
sub
loopne
cmp
dec
fnsave
fnstenv
aas
cld
scas
pusha
sub
scas
scas
xchg
sub
xchg
lcall
pop
push
out
pop
add
fldl
rcr
cmp
repz
mov
fwait
loope
adc
movsb
mov
repz
mov
push
aad
out
adc
divb
inc
push
dec
jb
jae
scas
adc
imulb
loop
mov
js
cmp
or
mov
ljmp
int3
pop
decb
cmp
loope
push
testb
outsb
aaa
add
cld
push
dec
xor
shll
and
ja
sti
loope
xor
fldl
cltd
mov
sub
arpl
popf
mov
ja
ret
mov
sbb
push
repnz
lret
lcall
je
lahf
mov
mov
push
or
jmp
cs
push
xchg
dec
sahf
lea
stos
rolb
movsb
pop
dec
xor
xor
mulb
fidivl
add
mov
push
loopne
adc
clc
xor
mov
dec
repnz
xchg
pop
scas
adc
cmpsl
test
jp
adc
ret
sti
xlat
mov
mov
mov
out
xlat
mov
jae
push
and
lret
imul
lcall
adc
sbb
mov
rol
lds
aaa
loopne
jle
add
rcll
out
iret
cmc
fstpt
mov
sbb
lock
dec
sub
add
fists
lret
in
ja
or
mov
cltd
jns
xchg
push
call
xchg
mov
nop
es
cmc
xchg
sub
or
jb
or
cmp
in
ljmp
or
inc
mov
popf
clc
mov
mov
sub
cmp
xchg
adc
xchg
adcb
push
mov
fbld
jb
jae
test
push
inc
or
je
test
adc
dec
mov
hlt
les
mov
vmovapd
pop
daa
popa
shrl
outsl
insb
ret
or
inc
pop
xchg
xchg
lock
cmp
and
xor
sbb
lods
fucomi
lret
cmc
movsb
negl
mov
imul
aaa
loopne
iret
ud2
add
push
scas
inc
test
cmp
outsl
dec
dec
adc
mov
pusha
jae
mov
sbb
push
push
imul
and
outsb
jle
dec
pusha
xchg
lahf
aaa
ss
and
and
inc
sti
mov
shlb
pop
pop
movsl
test
enter
add
and
rol
int
mov
pop
aas
fmull
xrelease
and
mov
sarl
push
mov
cld
xchg
adcl
call
jmp
arpl
lds
js
adc
loop
fiaddl
push
xchg
mov
and
dec
dec
jne
push
xor
sub
rcr
xor
or
popa
mov
cmc
sub
lock
lret
xchg
pop
bound
sbb
imulb
fbstp
xor
test
sbb
in
push
ret
sub
stos
pop
test
mov
xor
ret
pop
clc
dec
aas
or
mov
pushf
popf
jecxz
es
cmc
arpl
pop
cmp
mov
jle
mov
rcrb
xchg
mov
xchg
mov
jg
nop
ret
xor
lods
inc
sub
cmc
pop
repnz
or
in
push
jg
sub
ss
mov
cmp
pusha
and
mov
je
pop
fwait
jae
fs
pop
cs
mov
repnz
cmpsb
add
pop
dec
in
rorl
push
inc
xlat
in
dec
adc
or
fs
cmp
sti
ss
scas
inc
cmp
lret
sbb
mov
in
sbb
pusha
lahf
enter
lds
inc
bnd
add
inc
sub
sahf
mov
or
push
mov
and
aas
cmc
jl
out
dec
sbbl
dec
into
test
xchg
pop
pushl
jl
adc
or
adc
jb
adc
xor
add
fnstenv
movsb
in
fidivl
lods
in
int3
cltd
cmpsl
fsubr
in
mov
mov
mov
lds
mov
daa
mov
xchg
mov
sub
addr16
repz
in
push
push
sub
sub
push
xor
arpl
stos
ret
das
sbb
inc
push
out
xor
in
in
roll
aaa
jno
pop
popf
and
or
out
push
mov
cmp
pop
and
jo
or
xor
addr16
xchg
mov
repz
xlat
addb
cmp
cltd
movsl
enter
mov
leave
notl
mov
arpl
in
inc
call
out
push
pushf
sbb
pop
out
fistpll
pop
das
xchg
sbb
imul
mov
pop
push
rclb
push
push
sbb
xor
cld
or
xchg
pop
int3
xor
clc
and
mov
leave
dec
not
aad
repnz
mov
xchg
pusha
xlat
ror
sbb
lods
cs
stos
repnz
sub
cli
mov
out
and
cmpsb
mov
cmp
inc
mov
cmp
fwait
scas
xchg
mov
je
fld
cwtl
nop
xchg
add
pop
cmp
mov
ficomps
pop
repz
jge
add
test
sub
mov
data16
aad
xlat
add
fcomps
enter
rolb
test
leave
mov
gs
cmp
in
adcb
xor
cwtl
lret
stos
aaa
imul
test
pop
scas
pop
imulb
inc
sub
pop
mov
sub
sti
test
bound
arpl
lock
cmp
sbb
divb
leave
iret
pushf
push
in
jle
sarl
jbe
dec
xchg
dec
ret
or
leave
lock
arpl
es
out
pop
jp
dec
les
popf
dec
loopne
sbb
pusha
jb
dec
in
and
or
ret
or
mov
sbb
and
jp
xchg
mov
lret
cwtl
push
cmp
jno
icebp
ret
mov
scas
stos
mov
daa
dec
xor
roll
xchg
cmp
mov
loop
push
push
fnstsw
cmp
fs
cmp
mov
cli
fwait
in
xchg
jno
add
xchg
lds
aas
fbstp
xor
mov
inc
daa
or
popl
add
daa
or
lcall
dec
iret
out
mov
jl
or
repz
mov
out
cs
pop
fs
xchg
ja
or
insb
cmp
call
xchg
push
add
stos
xor
daa
mov
xchg
int
cmp
mov
bound
push
sbb
mov
lcall
xchg
aad
nop
xchg
dec
lahf
jnp
orb
fdivs
and
cmp
and
jp
mov
adc
cmpsl
mov
jmp
insb
fdivs
in
imul
push
js
das
mov
lret
imul
pop
adc
in
cltd
loope
mov
jmp
xor
jne
into
loopne
iret
addr16
pop
pop
sbbl
xor
data16
jmp
fsubr
aas
or
popf
mov
cmovno
addr16
mov
sbb
les
je
jnp
adc
mov
xchg
mov
lods
mov
xor
imul
and
inc
insl
stos
jae
fmull
insb
pop
into
sub
push
daa
pop
and
out
gs
push
or
inc
pop
pop
or
push
popf
xchg
mov
mov
mov
inc
xchg
xor
sub
out
pop
iret
fldl
xrelease
int
dec
mov
pop
stos
jle
lods
std
movl
push
xchg
pop
push
out
cwtl
out
cmpsb
pop
xlat
out
jg
pushf
mov
mov
loopne
cli
div
sti
fnsave
mov
inc
movsl
push
lcall
mov
lock
push
popf
je
mov
and
inc
push
out
mov
sbb
xchg
and
jns
add
ljmp
push
dec
add
emms
insl
sti
push
push
push
sub
shrb
ja
xchg
jns
jo
cmp
mov
fwait
dec
xor
pop
int3
jb
loopne
rcr
das
insl
pushf
push
bound
cmc
shll
jecxz
jge
dec
push
int3
imul
movsb
sbb
shlb
push
insl
adc
cmp
xchg
mov
insb
mov
xchg
sub
dec
icebp
pop
sbb
pushf
xor
sbb
iret
xchg
lret
addr16
pop
inc
bswap
mov
cmpb
pusha
nop
sub
cmp
aad
and
lret
dec
popa
push
fs
push
sbb
fsubrp
dec
pop
out
inc
test
dec
xchg
aam
adc
or
cmpsb
inc
inc
inc
lahf
scas
pop
lret
adc
movb
nop
cmp
mov
xchg
ds
inc
jle
sti
loop
mov
dec
or
mov
xchg
pop
push
rolb
mov
or
cmp
inc
cmp
aam
pop
stc
jmp
cli
scas
loope
sbb
in
ja
pop
ja
pop
movsb
cmpsl
cmp
popf
sbb
or
mov
adc
lock
inc
test
mov
clc
sub
push
outsl
jo
push
mov
loopne
fcoms
pop
mov
sti
sbb
inc
aaa
movsl
or
test
cmp
filds
xchg
movsl
inc
xchg
push
push
gs
push
and
lea
inc
out
adc
mov
jbe
nop
mov
push
jg
or
pop
inc
jns
adc
lret
cmc
add
ret
arpl
xor
xor
adc
sbb
add
rol
mov
jnp
dec
xchg
inc
mov
sub
iret
dec
cli
or
mov
pop
test
add
cld
sub
jecxz
pop
mov
inc
cmp
xor
dec
inc
push
clc
inc
adc
push
ss
addr16
adc
and
pop
adc
sbbl
mov
mov
jnp
lock
and
pop
lock
call
outsl
sahf
incl
mov
sub
sbb
dec
call
mov
dec
sub
pop
xor
into
lcall
stos
clc
sub
fwait
out
hlt
and
outsl
push
cmp
in
jb
cmc
xor
fwait
jl
dec
aas
push
inc
inc
pop
cli
sbb
cltd
and
pop
cmp
mov
xlat
xchg
repnz
mov
xchg
or
cmpsl
rcr
clc
shl
mov
shll
shll
push
add
mov
test
xchg
inc
cmp
add
sub
test
negl
out
push
lock
pop
clc
mov
popa
adc
or
or
insl
fwait
movsb
je
shlb
push
lds
jae
imul
mov
push
push
xchg
push
dec
pushw
mov
cmp
adc
iret
hlt
sbb
push
ja
mov
mov
inc
rclb
outsb
into
mov
mov
stos
in
push
mov
frstor
outsl
cmpl
notb
shlb
sub
inc
sbb
pusha
and
mov
lcall
pop
je
std
xchg
daa
dec
xchg
pop
outsl
inc
mov
iret
sbb
push
andl
inc
cmp
xchg
xchg
cmp
icebp
mov
mov
or
ds
or
jmp
cmc
outsb
shr
out
pop
roll
pop
loope
divb
pop
lds
imul
ja
or
mov
out
pop
inc
jecxz
pop
mov
cmp
pop
mov
xchg
nop
subb
push
xchg
scas
int3
loopne
mov
fdecstp
enter
ret
xlat
repz
mov
notl
and
scas
lds
lret
pushf
and
push
add
adc
xor
dec
add
xchg
jge
sub
enter
sbb
sub
clc
push
or
aaa
or
pop
jb
sbb
scas
icebp
mov
sub
mov
cli
fs
cmp
je
mov
pop
adc
hlt
mov
jnp
jae
lahf
popf
xor
push
cmp
mov
dec
xor
sub
dec
mov
pop
insb
stos
frstor
test
xchg
rorl
jae
dec
push
fs
and
pushf
dec
fnsave
in
jne
adc
sub
push
outsb
mov
push
xchg
in
lock
ret
xlat
stos
push
lods
lcall
sub
stos
inc
subl
mov
sub
sub
lcall
cmp
sub
adc
mov
pop
imul
cmp
lock
aaa
jne
and
mov
je
movb
rcl
jno
mov
inc
pop
jo
cmpsl
xchg
inc
orb
mov
dec
call
fists
mov
mov
sub
inc
dec
test
inc
nop
adcl
or
orb
loopne
cmpsb
and
add
fwait
jmp
sbb
into
pop
cmp
scas
rol
mov
cwtl
cld
ljmp
inc
xchg
gs
test
and
es
adc
ret
mov
lret
mov
push
test
jb
test
pop
xchg
lret
inc
gs
int
pusha
and
xchg
push
inc
std
push
mov
mov
imul
jns
or
movsl
lahf
loopne
jle
push
arpl
dec
mov
sbb
xlat
pop
mov
mov
mov
adc
mov
call
cmc
in
movsb
inc
push
jmp
push
sbb
or
xor
dec
lahf
divb
loope
iret
out
sub
xor
add
aam
addr16
mov
movsl
pop
lret
jg
adc
and
dec
lcall
xchg
pop
sti
xchg
cmpsb
divb
xchg
je
in
push
push
jge
out
dec
add
cmp
stos
aad
cmpsb
insb
lds
xchg
lods
fstp
dec
movsb
mov
inc
or
cmpsb
imul
jb
sbb
mov
aam
jns
pop
shll
pop
stos
bound
lods
inc
arpl
xor
push
add
fisubrl
movsb
jl
fists
test
pop
lods
push
sbb
lahf
clc
sbb
fbld
push
xchg
int3
adc
jecxz
movsl
push
pop
pop
sub
adc
push
shrb
inc
mov
stos
push
add
in
lret
dec
xchg
adc
movsb
subl
outsl
push
inc
xor
fwait
sahf
mov
mov
mov
clc
fcmovnbe
fistl
mov
pop
push
or
mov
adc
dec
shlb
mov
mov
sub
push
xor
inc
push
cmpsb
sub
sub
stos
aam
xchg
push
or
dec
sahf
inc
nop
mov
cmc
lcall
xlat
loopne
add
pop
es
fisttps
sub
sbb
out
xchg
bound
jg
mov
mov
sbb
jae
xor
andb
test
mov
cmpsb
xlat
iret
ret
add
mov
clc
cli
je
jnp
sbb
aas
fisttpl
dec
mov
lcall
testb
pop
jecxz
mov
sti
xchg
lea
aad
or
xchg
add
and
push
insb
cmp
xchg
and
xchg
and
insb
cs
mov
shrl
shl
inc
scas
mov
es
ljmp
pop
mov
in
stos
out
out
mov
inc
daa
das
in
fldl
mov
jmp
scas
test
jns
inc
lcall
in
cmpsb
push
cmp
mov
or
and
out
lds
push
mov
and
ret
or
and
jmp
push
xor
jl
dec
push
mov
jae
stos
or
mov
filds
movsl
sub
leave
loop
loope
xchg
aaa
cmpsb
dec
xchg
and
gs
mov
test
sub
and
dec
loope
xchg
or
push
int
in
orb
or
and
dec
jmp
enter
fucomi
ja,pt
lret
stos
loop
sbb
outsb
dec
cmp
or
cld
out
or
outsl
lahf
cmp
fwait
dec
sub
sbb
mov
xchg
imul
rorb
cmp
xor
hlt
push
and
in
test
or
inc
mov
adc
pop
mov
call
and
lret
in
loop
fs
cli
out
jp
mov
in
shlb
pusha
adc
mov
ds
sti
fistpl
scas
push
stos
mov
push
xor
sahf
jnp
xchg
add
leave
cmc
lods
rcr
outsb
insl
mov
je
cmp
jecxz
js
test
in
inc
push
xchg
pop
mov
in
ret
idiv
mov
sub
dec
stc
xchg
sarl
dec
movsl
sbbl
aaa
mul
daa
mov
loopne
ja
push
pop
xchg
inc
add
sub
outsl
mov
sub
sahf
data16
repnz
xchg
mov
inc
sub
inc
inc
icebp
in
inc
cmp
mov
and
scas
push
adc
push
insb
imul
mov
xorb
repnz
cmpsl
push
mov
fisubrl
mov
push
and
pop
mov
jbe
mov
push
out
orl
addr16
ss
push
cld
out
outsb
push
cmp
int3
push
ja
dec
jl
clc
inc
dec
cltd
popa
sbb
cltd
loopne
ds
call
in
jg
cmp
jge
ja
push
ret
sbb
push
addl
xchg
inc
rcl
out
nop
lds
fildll
xchg
lea
mov
mov
adc
mov
repz
test
dec
push
jnp
jle
or
mov
dec
xchg
ds
mov
popa
jo
xchg
arpl
inc
or
adcl
dec
dec
add
stos
mulb
or
lret
add
std
xor
sbb
imul
data16
cmpsl
loop
xor
out
js
lea
hlt
jp
sub
or
mov
out
push
lock
sub
mov
scas
add
mov
test
int3
out
xchg
push
add
pushf
cmp
pop
ljmp
xchg
dec
and
or
orl
in
xor
aam
mov
or
mov
xchg
sahf
jns
and
xchg
test
cmp
inc
or
adc
pop
xchg
xchg
insl
mov
lods
sbb
sbbb
mov
inc
cmp
call
repz
in
cmp
insb
dec
out
orb
dec
jne
aam
xor
inc
insb
ss
out
adc
sbb
iret
scas
lods
adc
mov
mov
int
ret
jg
mov
es
insb
push
pop
xlat
xor
imul
loop
lahf
fdivr
ljmp
xchg
stos
dec
jno
fsub
mov
cli
inc
out
bound
js
or
js
fst
push
jno
mov
mov
push
mov
jp
adc
scas
or
inc
add
push
push
rcll
sub
aaa
popf
xlat
into
cmp
mov
dec
add
jle
into
test
inc
adc
inc
pop
loop
fists
mov
mov
lds
and
xor
add
movsl
xchg
movsb
dec
je
push
int
mov
fidivs
data16
inc
jle
lods
cli
mov
xor
call
push
loopne
addr16
lcall
cmp
sbb
inc
fidivrs
adc
cmp
add
xor
xchg
loopne
pop
shll
cmp
rcrb
push
stc
pop
xchg
sub
mov
addb
inc
imul
femms
push
aaa
add
mov
sbb
sub
fists
and
mov
clc
iret
push
pusha
incl
xchg
cmc
mul
stos
mov
sti
and
cmp
and
loope
or
stc
subl
add
cli
int
hlt
and
stos
pop
xor
imul
out
int
add
and
ljmp
and
jns
push
pop
xchg
and
pop
or
aas
fisttpl
enter
aaa
loop
lret
pop
pop
sbbb
ja
hlt
inc
lret
sbb
inc
mov
mov
sbb
clc
in
push
int
xor
imul
fwait
xor
fs
popa
gs
lret
aam
mov
xorb
out
out
jno
xor
fnstenv
cltd
add
jle
jp
sub
scas
mov
jecxz
imul
dec
jne
scas
push
xlat
adc
jl
sar
fwait
stos
mov
adc
insb
clc
jbe
add
mov
bound
arpl
mov
std
sbb
adc
es
fwait
dec
orb
dec
ficomps
icebp
int
gs
jns
rorb
call
add
sub
scas
cmp
or
adc
mov
adc
aas
jmp
hlt
jnp
and
lahf
in
sub
loop
sbb
mov
aad
aam
iret
idivl
sarl
inc
stc
jbe
xor
dec
arpl
xchg
pop
mov
xchg
add
adc
dec
fs
orps
xlat
stos
sbb
jno
dec
inc
inc
jge
sub
jle
insb
mov
shlb
mov
cmc
xor
jae
pusha
add
cmp
addl
xor
adc
out
adc
enter
ds
or
sti
data16
xlat
call
lock
jo
cmc
repnz
aam
xlat
cmp
fidivs
ret
scas
out
mov
sbb
fcmovne
lods
sbb
jecxz
sahf
and
xchg
adc
push
out
imul
mov
ja
cwtl
add
xorl
out
movsb
cmc
aas
cmp
enter
cmpb
out
add
imull
mov
call
jg
xor
cwtl
fdivrl
mov
fptan
pop
xchg
xchg
mov
out
mov
fldenv
sbb
fistpl
push
xchg
add
pop
outsb
and
dec
stc
pop
pop
imul
andb
or
rcll
fsubr
stos
addb
add
out
pop
fists
jo
push
mov
idivl
inc
add
sbbb
lds
cmp
xchg
mov
push
adc
xchg
rcl
daa
arpl
cmp
es
je
lods
ds
jg
adc
sbb
sub
push
xchg
mov
xchg
icebp
push
cmp
stos
jbe
add
aam
call
pusha
xlat
icebp
mov
fstl
les
rorl
mov
xchg
push
jne
lock
sbb
sub
dec
das
mov
fdivl
mov
pushf
xor
pop
and
je
xor
pop
bswap
outsb
repnz
adc
int
pop
arpl
jb
cmp
xlat
add
jp
pusha
call
push
inc
mov
inc
inc
mov
or
adc
popf
movsb
int3
and
cltd
out
xor
inc
fs
jne
sbb
push
repz
insl
jmp
lahf
and
or
mov
push
jnp
jmp
mov
xor
es
mov
inc
rcl
jl
dec
adc
fdivs
clc
inc
xlat
pop
and
lock
mov
pop
dec
sub
cwtl
inc
mov
mov
rcrb
out
ret
mov
into
xchg
mov
ljmp
cmc
ja
mov
or
lcall
lock
sub
loop
push
in
lret
pushf
ss
xchg
mov
shl
push
or
imul
push
and
mov
or
arpl
fstpt
adc
jle
xor
push
mov
pop
jo
jbe
rcrb
int
addr16
shr
bound
fmul
xchg
mov
lea
cmp
test
xor
sbb
clc
nop
pop
std
aaa
push
imul
and
lea
testl
or
mov
test
pop
and
jnp
sahf
pop
ss
int
xchg
std
notl
xor
cmp
cmpl
inc
mov
xorb
mov
cld
in
pop
sbb
push
xchg
out
out
push
fmul
inc
es
into
aaa
mov
sti
imul
lods
jno
push
imul
mov
mov
or
dec
pusha
scas
decb
add
scas
push
cmp
and
mov
jmp
xchg
pop
sbb
push
mov
xor
mov
xor
in
mov
inc
ss
sbb
mov
mov
loop
push
int3
jno
fxch
std
and
pop
movsb
cmpl
das
test
es
mov
mov
and
js
jle
or
ja
sbb
lock
pop
ds
ret
push
shlb
icebp
jge
lret
push
lods
hlt
mov
movsb
pop
push
fucomp
cmpsb
xlat
add
fs
pop
ret
into
jge
mov
dec
mov
int3
int
xchg
fbld
test
jg
dec
ja
jl
ret
mov
or
jnp
sub
test
in
lret
idiv
inc
cmp
fimuls
js
xor
enter
and
fldenv
mov
int
xchg
push
ljmp
lahf
or
ror
inc
lea
in
dec
inc
out
jno
mov
xor
mov
mov
hlt
xchg
cmp
test
xor
adc
adc
daa
xchg
fsubrp
aas
fdivrs
jo
mov
add
xor
mov
push
jp
out
and
jb
popf
cltd
orl
loope
ret
mov
pop
outsl
sub
and
aaa
aad
je
add
mov
mov
xor
jb
pop
cs
xchg
pop
nop
divb
lods
push
je
and
arpl
xor
inc
pop
lcall
pop
rol
and
mov
add
in
gs
cmp
mov
xchg
sub
imull
fisttpll
adc
scas
xor
xor
les
dec
clc
jmp
rcrb
data16
push
cld
sbb
mov
js
es
jg
sbb
cld
popf
fidivrs
adc
std
push
int3
pop
add
sub
iret
xchg
add
mov
xor
mov
decl
in
or
lods
inc
js
lret
and
gs
test
divb
push
xchg
and
add
pop
jmp
and
out
lock
fildl
loope
jmp
test
cltd
movsb
es
repz
xchg
dec
sub
mov
arpl
clc
leave
fucomi
adc
aaa
clc
dec
pop
test
mov
mov
gs
mov
int
cmp
pushl
jmp
insb
repnz
and
or
jbe
dec
scas
xchg
push
mov
out
stos
subb
jnp
xor
ss
mov
mov
std
cmp
sbb
lret
sbb
push
out
mov
fstl
xchg
sub
loop
scas
dec
cmp
sbb
pop
lods
pop
loope
and
mov
std
push
sub
sub
mov
mov
shrb
fwait
inc
jo
sbb
cmc
fcmovnbe
mov
pop
pop
mov
call
jne
pop
push
rcrb
add
push
push
mov
mov
pop
sub
out
fdivl
adc
lea
clc
push
stos
xchg
data16
mov
mov
stos
arpl
fnsave
sbb
fistpll
push
aaa
pop
addr16
jae
lea
and
iret
pop
push
inc
xor
cwtl
and
movb
inc
jmp
sti
andl
repnz
inc
xchg
pop
xchg
mov
test
iret
test
mov
push
and
sar
sbbb
clc
or
mov
adc
test
rclb
and
cmp
sub
mov
loope
out
fdivrp
test
sbb
addr16
jl
movsl
pop
inc
in
das
scas
push
aam
sub
in
or
add
jne
mov
push
iret
xor
dec
pop
imulb
add
stc
iret
gs
mov
aad
dec
add
push
stos
fwait
shrl
mov
jg
mov
lea
cmp
clc
mov
mov
fdivrs
push
inc
test
pop
push
and
mov
mov
adc
adc
stos
xchg
test
push
mov
and
adc
popa
insl
push
xor
jmp
shrl
pop
out
xlat
loope
push
insl
int
inc
xadd
add
push
push
dec
xor
xchg
outsl
insb
sub
inc
ss
mov
cld
aaa
dec
mov
add
xor
test
pop
addr16
data16
stos
test
push
ret
aad
adc
jl
xor
std
dec
aam
ret
pop
mov
cmpsb
cmp
pop
aad
dec
xchg
add
cmp
and
cld
dec
cmp
dec
adc
mov
sti
aad
pusha
stos
xchg
jbe
or
out
inc
cmp
xor
mov
pop
dec
mov
test
sbb
dec
fildl
cmp
daa
xchg
jno
loope
loopne
adc
loopne
divb
rorl
daa
dec
mov
mov
mov
dec
cmpsb
mov
mov
cmc
stos
inc
std
sbb
cmp
mov
ja
adc
sbb
inc
xor
or
xor
sarb
mov
jle
sub
ljmp
test
nop
mov
jmp
hlt
dec
fldenv
mov
hlt
sub
sub
xor
adc
enter
daa
ja
rcrb
in
xchg
jne
xlat
push
in
rolb
or
arpl
rorl
lods
dec
aad
loope
xor
sub
jg
jbe
xchg
stos
lcall
imul
mov
test
jmp
int
subb
arpl
add
xorb
xor
shrl
add
sub
loop
mov
inc
out
jg
sub
or
push
adc
es
sahf
sbb
pop
cmp
outsb
xchg
dec
pop
lods
pop
jae
mov
fldenv
lret
ret
push
adc
xor
jmp
mov
mov
cmp
xchg
or
out
test
mov
sbb
scas
ficomps
mov
pushf
push
or
sub
frstor
addl
je
cli
sti
mov
lds
adc
cmp
cmp
jbe
sub
cmp
dec
arpl
aaa
jb
fwait
lock
jle
aam
lcall
daa
ljmp
testl
inc
inc
xor
std
shl
pop
xchg
jl
cmp
lock
dec
xchg
dec
mulb
add
mov
inc
mov
stos
pop
pop
mov
lret
push
fnstenv
xlat
lea
mov
mov
or
push
lcall
mov
add
mov
gs
lret
sub
mov
xchg
movsl
or
out
dec
aaa
and
xor
stos
test
pop
sahf
add
sbb
lcall
cmp
mov
lret
pop
xor
xor
push
xor
stos
push
pop
jle
pusha
pop
enter
out
or
xor
fdivrl
es
sub
add
cmp
outsb
sub
popl
lods
jae
push
into
jbe
add
mov
imul
ljmp
mov
push
xchg
xor
or
add
popf
test
pop
in
leave
adc
inc
cmp
add
cmp
jmp
inc
inc
xor
sahf
xchg
adc
test
cmc
dec
adc
or
aaa
mulb
jmp
jle
fistpll
out
hlt
data16
xlat
push
sub
push
mov
iret
adc
sbb
aam
push
inc
mov
dec
stos
mov
push
push
loop
loopne
inc
cmp
xor
xor
mov
add
das
sub
daa
pop
rcrb
ss
jge
sub
xor
dec
jb
mov
push
sbb
shrl
pop
sub
outsb
lods
fidivl
in
sti
lret
inc
push
cmp
ja
jle
xchg
adc
dec
xchg
pop
pusha
iret
test
out
sub
ljmp
sub
cld
push
push
clc
rorl
jg
push
movsb
shrb
mov
sarl
mov
pop
mov
mov
lds
repnz
sahf
int
ljmp
mov
cltd
inc
movq
lods
pop
jge
push
push
js
xchg
cmp
push
fcompl
rcrb
inc
mov
jnp
cmp
jge
and
mov
xor
iret
push
enter
push
pop
orl
imull
inc
sbb
xor
scas
push
mov
adc
test
ret
loopne
int3
insb
leave
xor
push
sbbl
icebp
sub
test
xor
pop
rorl
mov
imul
orb
test
dec
inc
mov
inc
outsb
test
test
mov
push
imul
cmc
out
pushf
add
gs
or
push
ss
fs
add
pushf
test
or
andl
lock
pop
pop
popa
gs
decb
insb
iret
cmp
orb
xlat
xchg
mov
fcomp
int3
movsl
cmc
movsb
jo
lret
loopne
fcoml
fs
test
pop
fmull
popf
cwtl
fdivl
cmp
das
dec
test
sbb
adc
mov
jns
dec
sbb
fmuls
xchg
pop
adc
adc
ja
dec
decl
inc
fnstsw
add
fldt
inc
daa
inc
inc
pusha
jecxz
scas
sbb
test
pop
jle
stc
push
rcll
cmpsb
enter
mov
jb
popa
ljmp
mov
test
push
mov
adc
iret
sub
sub
popa
popf
xchg
xchg
push
mov
fs
mov
fwait
mov
cmp
cmpsb
test
or
pusha
inc
jge
mov
cmp
bound
or
ret
and
xlat
cmp
xor
dec
xchg
lds
icebp
dec
lret
lds
push
lahf
inc
aas
ret
mov
xchg
xchg
pop
mov
lahf
and
adc
sti
push
jns
add
fwait
imul
leave
mov
scas
and
lods
ds
imul
sbb
push
xchg
mov
lret
dec
fs
iret
vmwrite
in
scas
shl
mov
pop
enter
adc
xor
push
mov
cmpsb
sti
not
cmp
inc
or
cmc
stc
mov
cmpsb
clc
inc
clc
mov
add
dec
data16
int
lds
xchg
push
sahf
add
bound
or
push
sub
cmpsb
jb
xchg
bound
sbb
add
imul
sub
xlat
lds
lcallw
cmp
icebp
push
mov
cmc
arpl
xor
cmpsb
int3
mov
pop
sti
jp
adc
or
add
pop
pusha
movsl
out
or
hlt
outsl
mov
pop
add
arpl
cmp
nop
jne
xchg
enter
pop
or
jb
xorb
mov
das
add
ja
mov
push
stos
sbb
lret
movsb
and
fadds
dec
outsl
mov
stos
dec
int3
or
adc
lret
int3
pop
rcrl
sbb
rclb
faddl
xlat
xchg
sub
or
mov
push
ret
jo
bnd
js
fsqrt
sbb
enter
mov
sbb
fmulp
and
dec
jnp
test
scas
xlat
pop
rorl
popl
mov
adc
xchg
arpl
mov
pushf
arpl
jb
sahf
fadds
clc
inc
mov
jmp
inc
sbb
push
inc
mov
xor
mov
outsl
imul
test
or
addr16
mov
loope
and
icebp
lret
cmp
test
cli
and
lahf
scas
subb
push
inc
push
or
dec
fsubr
cmp
jmp
lret
insb
lock
pop
mov
push
mov
rcrb
jne
jnp
push
cli
insb
xchg
jo
sbb
loopne
add
js
add
and
clc
rorl
or
sbb
leave
xor
pop
rorb
pushf
and
push
xchg
arpl
lods
out
jnp
mov
out
bswap
mov
nop
mov
cmp
dec
adc
jns
popf
adc
pop
mov
and
mov
jge
or
out
ja
popf
iret
xor
test
dec
outsb
lods
test
and
inc
loopne
xlat
adc
ja
fxch
dec
jae
rcrl
pop
push
popf
and
dec
les
sub
das
and
mov
mov
cmp
sub
icebp
jne
mov
mov
je
cltd
or
les
pop
adc
mov
mov
and
mov
sbb
cmp
jle
mov
xor
mov
mov
out
arpl
add
in
ljmp
jb
out
mov
sub
ss
pop
sbb
mov
ds
xor
shll
popa
or
dec
daa
jae
mov
cmp
ds
xor
out
out
xor
popl
adc
out
adc
jge
sub
arpl
stos
cmp
add
xchg
mov
dec
xchg
call
or
add
mov
mov
insl
rcl
push
or
adc
sub
fadd
mov
mov
ljmp
pop
pop
dec
call
shlb
sbb
in
out
pushf
cld
es
add
sub
ret
insl
rolb
inc
in
mov
sbb
push
loope
or
or
sbb
xchg
mov
insb
adc
dec
pop
adc
sti
pop
or
clc
fstps
xchg
jmp
mov
test
adc
mov
mov
dec
sub
push
lret
cld
mov
fsubr
ret
subb
mov
mov
and
mov
mov
mov
cmp
xchg
sub
out
and
cmp
jg
orl
out
xchg
clc
adc
push
lods
pop
mov
insl
out
test
notb
stos
popa
mov
pop
fs
inc
mov
movsl
aaa
inc
add
push
loope
sahf
xchg
jmp
jl
or
adc
xchg
add
sbb
mov
cli
fwait
mov
mov
add
cwtl
mov
inc
xchg
jne
rcrl
jne
mov
loop
ret
and
inc
inc
dec
popa
nop
jp
in
pop
fistpll
shlb
push
and
push
arpl
sub
mov
cmp
add
ds
dec
sti
lods
addr16
shl
mov
pop
hlt
xchg
cltd
or
mov
sub
inc
pop
xor
in
mov
mov
or
stos
sarb
stc
pop
arpl
jae
mov
repz
jl
sub
cli
rclb
inc
out
push
dec
jmp
std
ret
inc
mov
ret
pop
jns
pop
mov
aam
push
jbe
sahf
ffreep
mov
popa
sbb
xor
popa
pop
mov
cmpl
mov
xor
shrb
sbbl
fldcw
adcb
adc
push
add
xor
mov
stos
adc
mov
jecxz
adc
and
xchg
fistl
push
sbb
jne
xor
dec
out
jecxz
in
mov
push
daa
jmp
mov
fdiv
rolb
xchg
cmc
and
ja
out
mov
mov
dec
fucom
insb
push
jnp
lahf
rorb
pop
cld
push
jno
mov
sbb
lock
ds
add
and
sbb
bound
cld
mov
mov
mov
jmp
neg
popf
std
jecxz
jne
rcl
loope
push
scas
pop
int3
cmp
shlb
inc
xchg
nop
jle
cmp
jl
xchg
data16
add
cwtl
movsl
and
clc
mov
add
ds
push
das
dec
cmp
xchg
loopne,pn
cltd
push
add
dec
mov
cmpsb
mov
pop
decb
mov
mov
adc
stos
sub
adc
roll
out
fldcw
adc
rcr
pop
push
sub
movsl
gs
cmp
fistpl
popf
ja
mov
in
or
or
push
hlt
lret
ljmp
push
and
mov
mov
aaa
jg
add
ret
jae
jge
out
shl
and
mul
gs
cs
pop
cmp
adc
fcomps
xchg
push
cmc
sub
hlt
adc
cltd
sub
popf
lock
xchg
in
in
xchg
outsl
xor
repnz
pop
sbb
sub
cmpsb
xlat
pop
aaa
or
cld
lret
mov
add
into
jne
and
push
or
xor
shr
mov
cmp
xchg
clc
faddl
in
adc
jo
test
sbb
jp
sarl
in
mov
repnz
jmp
xchg
fwait
cmp
push
mov
fimuls
popf
movsb
sub
jns
mov
sbb
pusha
sbb
push
lock
shr
jle
rdtsc
xchg
push
lahf
lds
fwait
mov
lods
push
subb
int3
loop
mov
idiv
or
sarb
icebp
test
jge
add
cmovp
popf
inc
mov
cmp
outsb
std
add
add
cmp
cmpsb
inc
mov
xor
inc
sbb
dec
jae
enter
call
icebp
dec
insb
pop
xchg
out
pop
fisttpll
int
out
addb
dec
inc
mov
ljmp
aaa
test
mov
mov
and
inc
adc
sbb
insb
xlat
pop
fimull
out
sub
add
lahf
inc
dec
sub
dec
push
xchg
push
cmpsb
push
xchg
xor
push
nop
mov
inc
and
xchg
push
mov
add
jecxz
cmp
and
jecxz
cltd
xchg
and
mov
xchg
xor
addb
sti
xchg
pop
xchg
mov
pop
inc
out
pop
lock
out
cmp
pop
out
lock
or
dec
jmp
cmp
rcrl
pop
jecxz
cmp
xchg
cld
and
dec
scas
cld
aam
add
cmp
push
pop
inc
adc
jl
add
jge
jle
js
mov
mov
jno
adc
sarb
sti
jg
mov
and
test
aad
pop
xchg
fimuls
dec
xchg
mov
push
mov
imul
mov
push
loope
dec
adc
gs
mov
cmp
nop
adc
shlb
mov
xchg
inc
mov
inc
mov
jnp
loope
xor
sbb
test
bound
cs
addr16
push
je
dec
inc
jae
jg
dec
fnstenv
add
lret
stos
adc
or
cmp
inc
mov
bswap
adc
adc
pop
out
shll
scas
inc
movsb
loope
std
mov
xor
leave
add
lret
adc
sbb
je
cmp
clc
into
test
int
jbe
xor
xor
sub
ret
sub
data16
ror
les
xor
sub
cmpsb
fdivrl
into
xorl
mov
dec
gs
jp
pop
or
out
rcrb
stos
and
out
jae
mov
mov
xor
adc
add
addr16
push
fs
outsl
add
dec
dec
popa
aaa
cmpsl
xlat
div
clc
cli
stc
dec
jno
aaa
adc
je
data16
jnp
imul
adc
push
shll
into
xorb
je
enter
ljmp
outsl
push
cmpsb
cmp
jno
lock
sub
jb
into
mov
cwtl
dec
sti
iret
sub
inc
lcall
stos
and
insl
int
dec
mov
xchg
pop
fisubrs
xchg
cwtl
std
in
ficomps
negb
je
inc
ja
sbb
mov
push
xchg
in
rclb
add
sbb
imul
pop
out
pop
sbb
idivb
and
dec
cwtl
pop
sub
sbb
or
xor
sti
sbbl
pusha
mov
pop
stos
xor
and
cmpsb
cmp
std
jmp
sbbl
cmpsl
flds
mov
mov
shl
pop
xor
mov
scas
mov
lock
sub
ds
repnz
adc
pop
inc
test
shlb
imul
adc
mov
loope
subl
add
pop
push
cmp
push
mov
mov
loopne
test
or
and
sbb
cmc
repnz
daa
aas
rclb
mov
cmp
xchg
sahf
jge
dec
test
dec
adc
xchg
jnp
push
sbb
mov
movsb
sahf
pusha
mov
inc
xchg
push
enter
pop
inc
subl
pop
popf
mov
sbb
xorb
shrl
xchg
and
jg
mov
push
pushf
push
insb
jnp
dec
movsl
sahf
mov
int
sbb
seto
pop
std
int3
xchg
fwait
xchg
insb
xchg
jae
sbb
xor
jmp
mov
ljmp
mov
rcrl
xchg
std
push
adc
cmpb
in
ret
psllw
xchg
stos
fbld
xchg
xor
scas
jg
mov
rclb
xchg
insl
push
add
cs
jae
xchg
push
mov
mov
sbbl
call
fsubr
das
bound
test
int
jo
push
adc
pop
lahf
xor
cs
shll
notl
and
shlb
loopne
xor
xor
mov
mov
mov
adc
jnp,pn
cmc
call
jo
aas
andl
daa
mov
push
ret
insl
lcall
or
mov
jnp
pushf
mov
inc
rol
fldenv
cltd
and
pop
in
adc
pop
xchg
fiaddl
adc
call
cld
jl
push
adc
out
incl
sahf
or
mov
jg
addl
mov
scas
test
and
add
pushaw
nop
stc
xchg
fists
pop
mov
out
mov
cmp
jnp
test
js
jae
mov
loope
dec
push
aam
or
nop
pop
adc
lea
mov
ds
cltd
loopne
test
mov
fidivrs
icebp
cwtl
out
ret
push
and
lea
pop
mov
ror
push
or
xor
and
adc
sub
adc
mov
ds
and
jns
or
jnp
setbe
or
daa
or
lahf
xchg
jl
cwtl
outsl
leave
cmp
sbb
pop
shr
mov
cmc
push
mov
push
lods
push
sbb
pop
scas
xor
dec
daa
les
jmp
mov
pop
cmpb
jns
push
rcl
add
dec
cmp
add
stos
pop
mov
dec
fimull
lcall
int3
ja
sub
jo
mov
jg
sbb
stc
out
mov
in
pop
cmp
dec
push
inc
iret
and
rclb
pop
jns
das
aaa
rcr
dec
es
enter
into
add
jbe
sub
daa
or
cmp
push
rcrl
xchg
sbbb
mov
push
push
mov
jno
sbbb
cmp
and
loopne
xor
pop
into
jae
sub
pop
hlt
pop
clc
insb
in
fwait
outsb
arpl
loopne
cmp
jb
add
xchg
ret
aam
inc
push
cmc
in
xorb
in
decb
pop
cmpb
xchg
xchg
ds
aas
push
aam
push
and
push
dec
bound
xor
mov
pop
lods
adc
lea
outsl
in
sbb
sub
call
cld
jg
in
and
mov
cs
dec
pop
fwait
xchg
dec
arpl
add
jmp
cli
arpl
and
sub
dec
mov
mov
cs
and
arpl
fwait
cmpsb
rol
or
sbb
out
jo,pt
scas
push
dec
ret
cs
lock
enter
testb
mov
or
fldl
insb
aad
dec
aam
jecxz
fs
sbb
jae
subl
mov
or
dec
mov
inc
dec
push
out
gs
daa
ljmp
dec
test
and
push
ss
sub
mov
fldcw
fwait
sub
pop
cli
xchg
push
add
xchg
mov
je
push
cmp
cmp
mov
flds
outsb
stos
push
scas
pop
mov
cmpsl
adc
lahf
enter
fildl
mov
sbb
xor
mov
lea
mov
fmull
icebp
daa
fsts
inc
xor
or
lahf
jecxz
je
xchg
test
cmpsl
push
icebp
rcrb
subb
daa
xor
push
pop
das
cli
xchg
push
inc
inc
sbb
out
cmp
jno
mov
sub
jmp
movb
aad
sub
es
lea
out
lods
mov
out
sti
loope
sar
stos
sbb
loope
out
mov
cmp
or
mov
jecxz
ss
adc
movsb
xchg
dec
cmp
in
bound
lahf
loop
cmp
movsl
cmpsl
sub
push
inc
or
pop
xchg
mov
outsb
sbb
stc
push
hlt
push
aad
js
aad
fs
mov
jb
mov
or
sti
loop
popf
xchg
jns
xchg
sbb
mov
cld
mov
add
lods
inc
mov
fidivrl
push
js
shr
xchg
into
mov
int3
push
pop
cwtl
scas
and
fsubl
dec
subb
jg
inc
pushf
xor
mov
mov
xchg
hlt
sbb
pop
pop
add
sub
mov
sidtl
jo
or
mov
lock
int
xchg
data16
sbb
sub
mov
shll
jnp
inc
mov
cmpsb
adc
stos
cmpsb
add
adc
xchg
or
pop
adc
outsl
mov
adc
inc
sub
xor
xor
sbb
pusha
mov
loope
loop
out
mov
inc
inc
pop
pop
aam
sti
lods
mov
jecxz
test
lret
fcmovne
xor
mov
test
sbb
in
jmp
and
jge
mov
sti
dec
mov
mov
jl
dec
inc
outsb
pop
mov
and
pop
imul
es
bound
mov
adc
pop
and
or
mov
dec
dec
outsb
jns
cmp
pop
xlat
xchg
inc
call
test
dec
fldcw
sbb
popa
xchg
inc
push
into
ret
mov
lret
push
out
hlt
or
cmc
mov
rclb
adcl
ljmp
adc
inc
inc
aad
mov
adc
pop
and
and
out
leave
das
mov
cmp
aam
aaa
inc
xlat
pop
or
or
scas
sbb
fcompl
nop
mov
dec
clc
fldcw
push
xor
out
iret
sbb
sbb
inc
stc
gs
jne
movsl
inc
punpckldq
add
lock
in
mov
mov
int3
pushf
sbb
lds
mov
es
test
call
and
adc
lods
and
repz
aaa
xor
sbb
push
push
into
ss
subl
mov
dec
into
cs
add
ret
add
movsl
lods
jl
sbb
bound
jns
dec
les
or
ljmp
mov
add
subb
jns
bnd
push
dec
push
or
push
addb
shlb
jb
rolb
aad
or
stos
ljmp
shrb
lea
mov
mov
add
jnp
popl
sub
sbb
fiadds
push
insb
mov
mov
cli
aad
mov
aaa
cwtl
jbe
dec
mov
in
mov
push
out
xchg
and
or
dec
add
inc
jle
cmp
lcall
xchg
cmpsl
add
into
pop
testb
sar
scas
inc
orl
mov
nop
imul
sub
fnstcw
sub
stc
xor
mov
xor
je
movsb
iret
xor
sti
and
or
ja
cs
mov
dec
test
push
and
ljmp
insl
mov
and
imul
sub
movsb
hlt
orb
test
out
cmp
cmpsl
stc
xor
cmc
int
inc
icebp
xor
in
in
xchg
xor
cli
pop
pop
or
add
lret
popa
or
leave
in
aad
enter
push
push
subb
xlat
xchg
sbb
aam
mov
push
cld
xorl
out
xchg
daa
xor
inc
and
les
jge
dec
orb
dec
xor
cmp
push
fdiv
xchg
loop
cmpsl
fiadds
push
notl
lret
inc
in
pop
lds
jae
sahf
clc
adc
sbb
and
push
mov
negb
add
dec
mov
jo
loopne
loop
enter
addb
pop
jle
xchg
pushf
xchg
sbb
xchg
xchg
divl
xchg
xchg
test
sbbb
and
push
faddl
dec
cmc
add
fstpt
pusha
shll
ja
mov
arpl
dec
sub
repz
cmpsl
push
mov
clc
lcall
neg
mov
add
xchg
jae
or
push
daa
mov
dec
xlat
vmwrite
insl
fs
jge
cmp
mov
cmp
imul
testl
sbb
pop
dec
mov
pop
mov
andb
and
lea
ret
stos
xor
fstl
adc
stc
push
mov
shl
lcall
mov
jp
adc
fwait
lcall
push
call
jns
rcl
cmp
inc
push
or
xor
jge
cmpsb
out
pushf
and
dec
test
xor
cmp
fnstsw
xchg
dec
pop
add
data16
mov
sbb
rcrb
push
push
pop
insb
cmp
dec
clc
int3
cmpsl
sbb
and
leave
adc
cmpsb
xor
push
lds
adc
lcall
shl
daa
les
mov
addr16
fisubrl
sub
jmp
pop
lods
lahf
hlt
xchg
jp
pop
push
jne
gs
lret
mov
dec
jne
in
add
fcoml
push
je
push
mov
imul
mov
lods
jbe
iret
leave
daa
fdivr
inc
mov
sub
adc
mov
pop
fldt
lcall
in
xchg
into
sub
adc
pop
data16
movsb
mov
out
jno
cmp
out
xchg
jp
jge
ljmp
mov
cmp
cltd
in
test
loope
xchg
cmp
shl
sub
iret
dec
imul
std
addb
mov
mov
shrb
dec
shrl
and
xchg
jne
xor
dec
je
or
dec
xor
cli
jg
out
ret
addb
mov
fstl
jmp
fs
test
mov
push
lods
inc
mov
mov
cmpsb
ss
in
mov
lea
cltd
sbb
pushf
mov
nop
inc
add
and
enter
sti
adc
jns
sub
ja
lea
jmp
push
imul
cmp
sbbb
push
xor
out
sbb
or
popa
jle
inc
mov
mov
mov
sbb
and
sub
sub
aad
stos
test
and
sbb
lock
mov
xchg
push
out
dec
inc
xorb
push
shr
in
hlt
lret
ja
push
push
push
xchg
sbb
add
pop
out
add
sbb
fisubs
int3
push
push
lock
test
sub
sbb
out
pop
cli
sub
fdivl
xor
sahf
cmp
int
dec
lret
std
sub
jmp
negl
test
mov
outsb
jno
pop
aaa
fwait
xchg
aad
lds
mov
dec
movsl
inc
stos
pop
int3
pop
filds
cwtl
sub
cmp
in
xor
lods
mov
in
xchg
sbb
xor
loope
sub
cmp
rorl
xchg
cmp
out
pop
out
bswap
cmpb
lcall
xlat
mov
test
aad
xor
xlat
xchg
cwtl
xor
aad
insl
pop
xchg
add
adc
loope
cwtl
or
je
adc
sub
mov
cld
imul
ljmp
mov
jno
stc
test
stc
inc
mul
and
pusha
or
adc
scas
mov
pusha
cli
add
and
aad
je
mov
pop
xchg
decl
out
popf
fidivl
rcrb
fdivrs
push
jae
js
mov
cmp
push
fs
and
std
test
rcrb
nop
out
ficomps
fldenv
push
cmp
pop
or
lds
xor
in
icebp
in
mov
daa
and
xchg
jecxz
addr16
push
lret
or
and
jle
insl
and
pushl
inc
jno
cmp
mov
ljmp
aaa
inc
aas
pop
xchg
xchg
stc
test
pop
ret
cmpl
mov
xchg
adc
xor
dec
mov
fcoml
mov
cmp
xor
sahf
leave
pusha
jmp
ret
xchg
int3
stos
jns
jmp
pop
mov
into
loop
and
je
mov
les
loopne
xchg
and
jnp
pop
mov
imul
aaa
mov
sbb
cmp
stos
mov
push
or
xchg
mov
std
sub
jle
xchg
inc
or
jb
loop
lds
push
mov
loop
insl
jae
mov
dec
mov
pop
inc
inc
push
cltd
pop
jmp
cltd
lahf
in
pusha
jo
aas
and
decb
imul
nop
xchg
loop
ja
out
or
stos
pop
inc
inc
or
sahf
mov
testb
fdivr
mov
mov
in
pop
sbb
lret
jb
or
popf
mov
test
push
outsb
mov
je
dec
cmp
mov
mov
lret
test
in
aam
shrb
je
loope
jge
in
jmp
test
repz
adc
push
add
and
stos
sub
dec
mov
int3
pop
push
stos
inc
and
add
sarl
sbb
mov
aad
cmp
das
jp
mov
xor
push
inc
xchg
insb
fsubl
push
push
lcall
mov
lcall
push
cmp
and
scas
insb
cmpb
inc
ja
pop
in
pop
cli
xor
sbb
xchg
or
xchg
mov
jmp
xchg
lcall
jl
add
xchg
add
ja
stos
lods
in
or
lret
pop
in
cmpb
push
in
roll
lretw
push
jne
loopne
sbb
stos
shll
das
or
push
adc
dec
xchg
in
pushf
orb
stos
pop
or
rcrl
mov
aad
imul
or
add
test
shl
inc
add
aaa
jno
mov
rolb
in
fstl
and
xor
jno
pushf
and
jb
enter
mov
mov
push
add
loop
adc
add
sub
mov
lret
es
testb
cmpsb
dec
mov
data16
fiaddl
xchg
jg
push
push
jne
inc
jge
cmp
fldenv
add
ljmp
lods
pop
adc
sbb
mov
cld
xlat
fs
lret
dec
push
xchg
scas
icebp
xchg
cli
cltd
xchg
dec
movl
adc
cwtl
mov
mov
xor
jb
sub
adc
cmp
mov
leave
lret
std
cwtl
jecxz
xchg
lea
icebp
fsts
subl
jl
into
adc
imul
insb
nop
sub
dec
call
and
aaa
mov
jecxz
inc
lds
mov
rorl
inc
xor
std
mov
mov
addr16
jb
jbe
sbb
dec
xlat
push
idivl
call
int3
orb
in
daa
dec
ret
fadds
int
std
scas
push
add
bound
outsl
xor
push
cmpsb
sarl
mov
out
adc
inc
pop
add
cmp
xlat
into
xchg
jns
imul
mov
xor
adc
pop
in
insb
icebp
pop
pop
mov
inc
adc
shrl
xchg
aaa
ud2
scas
mov
mov
dec
in
fadd
sub
jne
xchg
fildll
jno
xchg
sti
adc
sub
mov
jp
jae
add
sub
push
xchg
push
maxps
ja
jbe
push
inc
add
icebp
mov
out
mov
cmp
sub
mov
mov
enter
imul
cmp
or
call
sti
mov
pop
aad
pop
sarl
repnz
lea
bound
dec
repz
mov
lods
xor
data16
ds
xchg
sub
mov
insb
stos
or
xor
inc
popa
mov
mov
inc
ficompl
jecxz
mov
roll
sub
inc
arpl
inc
cmp
in
jmp
push
or
cmp
xor
mov
hlt
movsl
fdiv
push
loope
sub
cmp
rcl
hlt
and
mov
adc
xor
gs
mov
int
aaa
cs
arpl
inc
add
int3
insb
out
lods
outsl
mov
test
popa
fistl
outsl
cmp
mov
cmpsl
sbb
mov
dec
pop
in
xchg
mov
sbb
jo
or
xchg
xchg
scas
mov
mov
ficompl
lea
push
mov
fs
int3
int
xor
notl
mov
sbb
cmc
in
fildl
or
pop
idivl
gs
mov
lock
dec
xor
mov
add
ljmp
mov
xchg
das
mov
ss
mov
inc
or
xor
test
xor
loop
arpl
inc
fmull
stos
xor
xchg
push
mov
das
sbb
push
sti
cmp
std
in
ret
mov
xor
pop
adc
rolb
push
jb
clc
into
ds
xchg
mov
fdiv
sbb
nop
pop
fists
and
sbb
inc
pop
mov
mov
or
imul
add
loopne
out
add
fisttpl
mov
scas
mov
push
cli
sub
lods
dec
cmp
cli
pusha
sub
push
lret
iret
sub
mov
movsl
aad
popl
push
dec
sbb
lds
aaa
stc
cld
scas
pop
je
inc
push
mov
mov
hlt
ret
out
test
popa
push
push
jo
addps
cltd
jb
inc
adc
jmp
stc
mov
js
push
mov
call
pop
sbb
xchg
lods
mov
cmp
lcall
movsl
add
xorl
jne
std
mov
leave
mov
sbb
xchg
pop
push
pop
pop
xchg
std
mov
xchg
sahf
jae
ja
stc
mov
das
and
leave
test
into
outsb
test
cmp
jle
push
xchg
ljmp
std
mov
cmp
incl
push
lahf
fcomip
dec
loop
mov
popa
shll
sbb
inc
cs
mov
mov
lods
xor
pop
mov
movsl
lret
lods
xchg
leave
inc
jmp
out
adc
push
mov
pop
insb
push
push
addb
cmp
lods
inc
lret
lea
xor
cmpsb
or
cmpsl
add
lea
stos
cmp
mull
loop
insl
mov
lea
jge
stos
out
push
pop
out
xlat
jmp
jl
call
es
and
mov
nop
cmp
call
xchg
mov
ret
stos
inc
push
pop
subb
dec
jmp
xor
gs
lret
movsl
out
arpl
or
imul
into
mov
andb
push
xor
pop
testl
js
sahf
push
mov
push
inc
or
push
sbb
xorl
rclb
imul
jb
mov
sbb
in
xchg
sub
mov
pop
mov
test
ud2
clc
divb
outsl
lock
jne
mov
lods
add
lret
test
testb
test
out
and
mov
xor
sbb
aaa
loopne
lcall
fwait
cmp
aad
adc
mov
cmpsl
insl
add
fidivrs
iret
add
mov
outsb
sbb
mov
movsl
push
es
int3
dec
mov
mov
push
aaa
dec
loope
mov
and
cmp
icebp
shlb
mov
add
jae
xchg
push
xor
and
in
xchg
mov
push
mov
in
leave
out
ljmp
jmp
add
clc
cmpsl
sub
mov
add
fiaddl
sti
cmp
fldt
in
loopne
call
insl
shrb
sub
mov
and
jmp
lret
cmp
mov
aaa
cmp
int
pushf
lods
jge
adc
scas
xchg
sub
arpl
cmp
xor
int3
rcrb
lds
mov
jb
movsb
je
sub
adc
gs
stos
jne
lahf
sarb
cmp
in
aas
test
pop
stc
into
mov
adc
mov
sbb
je
add
or
sarl
call
pop
repz
add
lods
mov
sbb
and
xacquire
fisubrs
mov
pop
jle
sbb
lods
fldenv
inc
add
comiss
faddp
popa
sbb
and
arpl
add
inc
stos
xor
js
lea
lret
push
push
ja
and
xor
test
sahf
and
inc
aaa
gs
push
cltd
xchg
cs
xor
dec
ja
add
add
fidivl
mov
ret
ja
mov
dec
insl
pop
inc
xchg
lods
outsl
mov
mov
imul
js
mov
adc
mov
add
jns
insl
push
ja
or
xchg
lods
push
push
sub
mov
cmp
cmp
mov
pop
jnp
inc
cmpsb
enter
lcall
xchg
stc
push
or
and
rcr
xor
adc
push
pop
xchg
cli
clc
dec
xor
lods
daa
cmp
pushf
pop
inc
jb
cmp
dec
or
mov
or
cmpsl
xor
fnstenv
sbb
dec
mov
mov
dec
sub
pop
xor
pop
mov
mov
dec
out
cmc
pushf
testb
sarb
cmp
sbb
inc
adc
pusha
lock
push
xchg
pop
jecxz
inc
mov
cmpsl
pop
push
je
cmc
decb
leave
sbb
sub
cmp
inc
cli
push
sub
out
add
or
cmp
pop
pop
mov
lahf
imul
scas
dec
adc
sub
adc
insb
mov
jg
cli
xchg
xchg
test
mov
jle
xchg
add
ds
add
pusha
mov
push
in
popf
push
ret
rcll
jl
mov
xchg
push
clc
fcmovbe
lea
xchg
js
jns
mov
mov
pop
lods
fists
dec
add
movsb
or
mov
in
jmp
cmp
lea
inc
test
add
inc
pop
out
movsl
lret
jmp
ffreep
lods
es
test
test
rcrl
cltd
add
clc
iret
adc
mov
int
lahf
jmp
cld
orl
mov
dec
insb
add
push
xor
add
xchg
mov
lret
jno
int
mov
lahf
pop
rcr
jg
add
adc
cmp
cmc
shr
fwait
or
outsb
cmp
push
fucomi
jmp
mov
rcl
adc
sbb
push
push
cmp
mov
hlt
movsb
inc
cmc
mov
xor
xchg
inc
inc
out
push
jnp
cmp
test
and
add
stos
inc
test
xchg
cmpsb
sbb
xor
ja
mov
cmp
and
add
and
pop
jecxz
dec
dec
sub
je
xor
loop
outsb
or
in
rcll
cltd
into
add
rolb
pop
iret
outsl
xor
xor
and
jg
movsb
je
pop
leave
inc
enter
leave
fwait
sysenter
js
fucomi
push
pushf
je
hlt
add
xor
cmp
jmp
xor
or
mov
in
stos
xor
jmp
clc
addl
cltd
mov
mov
das
push
inc
jmp
lods
jb
jle
fsubrs
mov
in
and
das
fbld
mov
mov
gs
aad
push
pop
cmp
cmp
jno
pop
insb
add
std
mov
add
sti
mov
std
loop
addr16
xchg
mov
xor
pusha
stc
loopne
aas
lcall
in
ret
fwait
mov
dec
lods
dec
lret
mov
mov
pop
push
lea
and
in
cmpsb
je
sarb
mov
mov
inc
push
hlt
fdivs
test
out
pop
int3
cwtl
scas
leave
jge
push
jmp
fdivrs
mov
mov
jl
mov
popa
jnp
cmp
lahf
test
mov
repnz
lret
dec
ds
push
mov
aad
test
push
dec
ret
cmp
insb
out
lea
push
xchg
bound
fdivl
fldt
cmc
push
aad
mov
test
or
mov
test
stc
mov
adc
pop
sub
movb
frstor
lret
cmpsb
movb
sub
idivl
dec
dec
add
test
test
mov
mov
cmp
add
idiv
ljmp
pushf
cld
lods
popl
xchg
iret
fwait
lret
adc
stos
insl
sub
test
andl
dec
in
pusha
insb
xor
jp
retw
outsb
push
add
mov
push
clc
mov
push
out
sti
jbe
pop
inc
or
sbb
xlat
sbb
data16
aas
push
xlat
adc
mov
pop
adc
mov
fwait
imul
push
pop
cmp
sbb
fwait
addr16
cmp
mov
cli
repnz
and
movsb
shrb
lods
add
mov
test
ja
fstps
cs
cs
lds
enter
pop
outsb
and
shlb
popa
sbb
aam
mov
pushl
sub
fidivl
fiaddl
jae
lods
insb
lret
sub
add
ss
mov
lcall
mov
adc
repz
xor
inc
loop
sti
jbe
shlb
ljmp
pop
push
cmpsb
or
cbtw
xchg
mov
outsl
lret
insl
jl
lcall
mov
push
push
inc
mov
xor
inc
push
push
stos
loop
popf
in
add
movsl
push
test
add
fsts
jmp
cmc
mov
jle
stos
popl
cmpb
add
dec
fwait
test
cs
sbb
aad
mov
xchg
cmp
sbb
into
dec
out
mov
jne
pop
aas
call
shlb
hlt
mov
ret
cmpsb
fwait
ljmp
fisttps
dec
add
sbb
mov
cmp
outsb
sti
sti
je
rcl
stos
repnz
xor
sti
fnstenv
ss
movsl
insl
bound
fstpl
mov
add
mov
sbb
aas
iret
jns
jmp
cmp
stc
sub
scas
or
mov
nop
sbb
movsl
add
mov
and
xchg
sahf
xchg
sub
jno
fucom
ret
rcrl
outsl
jns
mov
jg
add
mov
mov
insl
flds
pop
scas
sbb
xchg
popf
mov
sub
xor
adc
nopl
lds
sub
jecxz
push
es
or
jge
lret
mov
enter
jmp
xorb
xlat
loopne
xor
inc
daa
jb
pop
int3
les
sub
jo
cmp
mov
xlat
outsl
shlb
pop
arpl
add
cmp
adc
jns
les
bound
sub
xchg
push
sbb
adc
mov
push
into
out
lds
aam
and
push
push
lahf
sub
jp
xlat
iret
pop
pop
sbbl
mov
jno
daa
out
imul
loop
push
cmc
cmp
jle
push
test
push
add
popa
cmp
fimuls
jne
hlt
pop
outsl
push
js
pop
scas
sbb
jo
xadd
mov
out
cs
loop
negb
pop
pop
testl
push
sbbl
jl
pusha
jmp
and
gs
sbb
repz
sub
cmpsl
pop
cs
inc
rcrl
out
lock
cmpsb
cmpsl
jg
sub
adc
les
lcall
pushf
lock
popf
jmp
adc
sahf
mov
js
cwtl
data16
push
mov
insb
scas
sub
rorl
cli
cmc
push
mov
xchg
mov
cmp
mov
ja
outsl
lcall
mov
inc
lods
mov
daa
mov
ds
aaa
jp
in
icebp
dec
jmp
divl
jp
cmp
loopne
in
cmp
pop
lret
pop
stos
inc
scas
aad
xor
test
cmp
push
lods
push
les
jns
or
pop
aas
ret
or
mov
jbe
pop
mov
push
addr16
stos
lods
sub
mov
or
add
mov
jnp
icebp
add
xchg
mov
je
push
je
mov
sti
insb
les
xchg
aaa
dec
push
push
sub
cmp
push
jne
sahf
jno
fimull
mul
les
das
stc
in
das
jecxz
xor
stc
inc
rorb
and
sub
pop
sar
rolb
movsb
dec
add
test
sub
insl
mov
xchg
and
gs
inc
xlat
sbb
mov
push
fdivrs
cmc
jge
xacquire
lock
sub
scas
shlb
sbb
lea
sub
inc
outsb
adcb
lret
loopne
dec
add
push
out
rcll
cmpsb
xor
clc
insl
jnp
mov
popf
jmp
jbe
ja
add
mov
jg
cmp
arpl
test
lret
cmp
cwtl
and
add
popa
cmp
je
mov
cmp
pop
sahf
insl
mov
or
xor
mov
pop
fsub
inc
sbb
mov
insb
mov
pop
jns
inc
add
sti
int3
call
jle
add
bound
loope
imul
aad
loopne
mov
sbb
iret
jo
out
loop
mov
insl
inc
jle
pop
lcall
or
mov
jbe
add
imul
push
adc
aas
or
cmpl
addr16
jle
addb
popa
adc
orb
and
lcall
mov
push
mov
mov
iret
pop
stos
loop
xor
insb
sti
push
cmp
test
mov
xor
and
mov
mov
pop
rorl
jns
ror
daa
mov
rcl
add
cmpsl
jle
int3
add
mov
movb
dec
add
xchg
dec
sti
js
sbb
inc
sbb
xchg
pop
loope
push
aaa
xchg
adc
aad
iret
jno
shll
aas
jl
out
jns
sbb
int3
xchg
pop
pop
iret
lock
and
movsl
loop
scas
dec
push
cmp
data16
and
and
lahf
pop
ljmp
cmpsb
andl
adc
and
jle
inc
popa
addr16
sub
xor
xchg
addr16
pop
ljmp
enter
inc
mov
xor
or
mov
fsubs
imul
push
call
mov
lds
and
mov
cmc
iret
stos
or
xchg
fldl
cmp
bound
pop
xor
js
in
mov
syscall
cmp
dec
aad
pop
or
test
dec
mov
pop
ficoms
incl
imul
dec
rcll
ljmp
in
sbb
xor
fidivl
inc
mov
and
out
xor
jns
mov
hlt
jne
xchg
cs
cmp
movsb
jmp
cld
dec
and
mov
scas
js
inc
jne
rcrl
jl
and
mov
adc
sub
adc
loope
outsb
dec
pop
addl
and
inc
out
icebp
sti
xor
rcr
scas
lods
outsl
push
add
or
and
xchg
push
daa
int3
int
mov
loop
push
sbb
xor
loop
mov
pop
pusha
je
adc
lar
mov
pop
in
jno
sbb
pop
sbb
and
fwait
mov
or
mov
cmp
ret
mov
jno
je
mov
sub
jle
sub
cli
jb
addr16
loopne
xor
in
dec
ret
xchg
subl
inc
xlat
scas
push
pop
sbb
jbe
gs
xchg
adc
mov
add
jl
dec
loopne
dec
enter
test
xchg
rorb
push
in
push
lods
in
popa
call
xchg
shlb
sub
mov
mov
dec
mov
sahf
rcrl
fcmovnbe
jo
dec
into
sub
mov
lock
dec
cwtl
ss
lcall
ljmp
dec
and
out
cmpsb
sub
insl
stc
stos
sbb
out
int3
lods
jae
push
dec
movsb
pushf
adc
fistpll
cld
pop
push
jge
push
or
adc
sahf
fldcw
sub
mov
int3
movsb
inc
iret
gs
mov
mov
xchg
fs
adc
es
stc
mov
xchg
mov
mov
inc
clc
shrb
adc
xchg
xor
test
mul
out
lcallw
enter
push
pop
fcmovb
test
pop
mov
inc
lods
fmul
ljmp
jb
or
call
xchg
dec
sub
out
cs
mov
lds
dec
inc
sahf
jae,pn
push
andb
push
pop
cmpsw
popf
rcrl
pop
gs
xchg
push
pop
jb
sub
xor
cmp
shlb
daa
test
sub
or
je
sbb
push
rep
shl
lahf
lcall
jl
pop
pop
xor
fisubrs
sahf
or
sub
incl
int3
sub
pop
fnstcw
test
and
cmpb
xor
fbstp
sbb
stc
das
jp
lahf
imul
cs
xchg
inc
mov
int
in
dec
adc
mov
pushf
inc
enter
and
popa
loopne
xorl
xchg
add
std
in
popa
shlb
repz
fsubl
mov
dec
in
adc
add
aaa
repz
inc
out
nop
cli
jns
repz
mov
shrl
mov
add
sub
mov
out
in
ss
leave
add
inc
sbbb
cmp
adc
mov
xor
mov
cmpsb
and
xor
test
mov
outsb
aaa
mov
cli
inc
xchg
sahf
aas
popf
inc
pop
push
fistpll
and
lock
dec
aas
push
push
and
incl
enter
neg
or
test
jne
push
dec
imul
push
push
xchg
xorb
pop
std
negl
mov
nop
adc
int3
repz
ret
out
jg
xchg
and
aaa
push
sbb
dec
les
ljmp
push
add
cld
mov
rcl
inc
lea
popa
pop
das
movsb
jne
fs
mov
shrl
hlt
mov
sbb
icebp
shll
lods
pop
jge
lcall
adc
ss
or
pop
addr16
lock
ror
xchg
adc
add
push
cmp
jp
shlb
movsl
cmp
pop
lea
aaa
add
jns
pop
add
sub
xchg
daa
pop
jmp
and
addb
jns
jle
mov
push
xchg
xchg
lret
loope
xorb
cld
aas
arpl
pushf
and
ret
lods
xchg
mov
pop
ljmp
rcr
cmp
ss
mov
pop
mov
xchg
dec
movsb
das
push
in
dec
mov
mov
xor
adc
fmull
sub
in
adc
dec
or
lods
popa
call
int3
stc
push
ds
mov
lods
xor
scas
sbb
push
lret
mov
arpl
notl
cmc
pop
pop
mul
loopne
dec
fisttpll
dec
les
jmp
mov
test
jae
jbe
or
sub
ljmp
and
dec
push
or
or
xchg
mov
fs
repz
mov
mov
loopne
and
mov
xor
cli
out
sbb
and
adc
jmp
pusha
sub
popa
cli
dec
mov
fwait
jb
pop
add
push
and
inc
loope
mov
ror
int
aas
loope
or
and
bound
addl
dec
out
pmullw
clc
nop
sub
push
shll
ja
push
imul
jne
out
sbb
mov
shll
pop
dec
adc
push
movsb
pop
fadd
push
addr16
icebp
xchg
jmp
sbbl
xchg
aad
out
daa
data16
and
ljmp
or
jl
adc
cmp
add
mov
or
pop
insl
mov
repz
leave
movsl
dec
in
dec
pop
cltd
ljmp
mov
bnd
mov
int
dec
sarl
aam
push
sub
out
cmpsb
push
jo
rclb
adc
adc
mov
aaa
xor
inc
es
daa
test
jno
movsb
cmp
sbb
addb
mov
fsubl
pop
xor
add
fwait
mov
test
cmp
hlt
inc
movsb
std
adc
fstpt
movl
fs
scas
adc
sahf
rcll
je
inc
push
push
daa
jae
mov
mulb
xchg
sarb
xor
add
xor
inc
adc
cltd
ficoms
adc
dec
jno
push
add
adc
jmp
inc
fstps
rclb
fists
xor
jp
ret
cmc
loopne
out
lret
call
xchg
leave
pop
inc
movsb
or
test
push
xchg
push
clc
or
rcll
sbb
add
les
sbb
sti
mov
cwtl
in
sub
hlt
cwtl
inc
sarl
xchg
sbb
sbb
mov
inc
jnp
insl
sti
mov
mov
jnp
rclb
pop
dec
mov
outsb
mov
jge
push
add
es
ret
cmpsb
ss
mov
push
bound
mov
ficomps
pop
inc
xchg
jle
sar
or
data16
pop
movb
mov
jle
add
mov
adc
jae
pusha
dec
mov
movsb
mov
cld
add
cmp
dec
out
inc
push
cltd
aam
cmp
pop
sbb
shlb
dec
sbb
shr
and
jns
dec
dec
pop
xor
leave
sub
imull
pushf
pop
push
mov
imul
js
call
cmp
and
imull
cmpb
je
push
inc
and
add
xor
lock
pop
add
lcall
mov
xchg
ret
mov
add
stc
ja
mov
mov
mov
xlat
xor
aad
xchg
jno
fcos
mov
movq
xchg
dec
lret
jno
xlat
jp
dec
cmp
pop
mov
inc
pop
mov
push
addl
mov
dec
insl
xor
dec
adc
cmp
sbb
mov
stc
insb
and
sbb
gs
dec
fists
jno
loopne
fstl
pop
arpl
insl
mov
add
add
mov
mov
je
push
js
rclb
jnp
repz
jg
inc
jbe
dec
sub
mov
movsl
push
inc
stc
in
and
stc
daa
pop
rorb
xchg
xor
imul
js
dec
dec
aam
adc
lcall
hlt
jnp
fildll
outsb
neg
rclb
sbb
in
pop
and
push
shl
push
or
idivb
dec
popa
push
sar
loop
cltd
mov
fs
push
cmp
or
sub
loop
lcall
stos
inc
inc
push
and
jns
adc
sbb
pop
and
movsb
push
sahf
and
add
test
or
jg
pushl
jp
cwtl
loopne
and
jae
out
movsl
add
in
bnd
mov
nop
sub
pop
out
inc
mov
push
sub
stos
rorl
sub
lock
lcall
outsb
xchg
ss
cld
mov
loopne
inc
sti
pop
cmp
xchg
dec
push
ja
jae
adc
enter
jnp
jo
sbb
adc
mov
cwtl
aaa
mov
push
mov
sub
and
pop
xor
mov
lahf
sub
jmp
inc
pop
pop
add
and
test
cmp
mov
lret
in
stc
rorl
jns
xor
push
loop
sub
out
add
test
or
clc
stc
or
jmp
stc
mov
cwtl
inc
imul
cs
mov
repz
movsb
call
xchg
iret
xor
push
mov
aaa
loop
adc
and
fdivr
shlb
pop
fbstp
data16
inc
jb
mov
cs
repz
sbb
inc
xchg
inc
push
sahf
jae
adc
lods
cmp
xchg
test
dec
imul
movsb
aas
adc
pop
or
xor
ljmp
push
enter
mov
icebp
pop
dec
mov
fwait
data16
test
xor
outsl
cmp
or
sarb
sbb
imul
lcall
cmp
mov
mov
sbb
mov
out
repnz
fisttpl
lahf
add
pop
jno
aad
pop
cld
lods
pop
jns
leave
push
push
test
mov
mov
les
dec
jmp
lret
loope
jge
mov
int
add
mov
add
jmp
in
cltd
scas
sti
popf
dec
pop
movsl
addr16
pop
adc
xchg
mov
pushf
lods
or
dec
xchg
lock
insl
mov
imul
pusha
dec
fmuls
xchg
ret
jne
loop
xor
mov
mov
ret
and
inc
idivl
xchg
mov
xor
mov
xor
mov
mov
test
insl
aad
dec
push
mov
shlb
pop
dec
movb
sbb
cmovl
bound
loope
push
incl
jbe
xor
push
xor
jp
mov
clc
out
add
sysret
adc
jno
mov
pop
stos
or
aad
cmp
fsubrs
dec
negb
fadds
fwait
mov
inc
je
ds
pop
cmp
jle
and
dec
xchg
mov
sub
int
jns
sti
adc
lret
int3
outsb
pushl
pop
lea
mov
ds
pop
sub
movsb
movsl
mov
test
movsb
scas
fwait
test
add
push
pop
mov
jmp
imul
aaa
lea
rorl
inc
inc
popa
daa
dec
mov
jl
aam
mov
lods
xchg
push
rcrl
mov
jo
add
mov
adc
imul
leave
mov
mov
ja
inc
mov
loopne
sti
pop
cltd
xchg
ret
in
add
popf
mov
pushf
and
scas
push
inc
xchg
add
xchg
test
or
arpl
ss
cwtl
mov
xor
cld
mov
adc
scas
imul
pop
inc
jb
pop
or
mov
xor
mov
or
call
shl
xor
mov
scas
xchg
inc
mov
jl
outsl
mov
pop
push
mov
or
shll
xlat
cwtl
lahf
and
sti
adc
test
cmpsb
stc
and
ret
jp
int3
push
repz
dec
mov
in
jne
xchg
ret
jp
in
popa
adc
add
mov
mov
pop
xchg
jg
cmp
scas
es
mov
imul
sbb
cmp
das
push
bound
sub
das
fcomp
cli
sub
cmp
mov
pop
rcll
sarb
outsl
inc
shl
arpl
and
push
arpl
sbbl
aad
push
push
or
push
stos
fisubs
sub
stc
imul
shl
test
divb
jge
fldl
dec
je
add
cli
inc
pop
push
outsb
and
jge
scas
inc
pop
ss
lea
cmc
mov
mov
insl
int
inc
and
push
and
mov
fadds
push
pop
inc
cltd
mov
arpl
clc
js
daa
jno
mov
movsl
test
mov
shlb
push
scas
or
inc
dec
scas
sub
loop
cwtl
jo
adcb
dec
and
dec
scas
adc
dec
std
cmp
test
cltd
out
cmp
or
inc
idivb
mov
or
mov
clc
pusha
out
mov
imul
mov
add
stc
fiadds
inc
pop
aad
rcr
lods
cmp
mov
xchg
or
paddb
out
adc
icebp
mov
mov
sbb
jge
mov
movsl
mov
inc
pop
mov
js
and
mov
les
in
lds
mov
sbbb
addps
into
push
insl
xor
mov
aaa
inc
xchg
sub
jne
mov
mov
fwait
sbb
pushf
sti
outsl
pop
shlb
pop
mov
xor
mov
cmc
dec
pusha
jge
fcompl
pop
mov
ja
cwtl
or
or
xchg
dec
add
sbb
mov
loope
add
fldcw
mov
cwtl
inc
lods
mov
mov
sarb
adc
pop
mov
mov
popf
jmp
xchg
enter
rclb
sahf
mov
fwait
sub
aas
push
jno
loop
jmp
in
xlat
hlt
pop
dec
pop
dec
out
fldcw
sbb
mov
inc
lock
int3
pushf
gs
mov
loopne
call
fwait
lahf
cmp
rcl
repnz
insb
jg
jecxz
les
mov
pop
js
notl
rcl
mov
xchg
shlb
dec
and
idiv
loop
mov
sbb
call
xchg
nop
sbb
xlat
mov
cltd
stos
lret
sub
in
repnz
into
andl
or
loopne
incb
movsb
lret
sbb
lret
jge
fsubl
in
iret
mov
push
lret
mov
pop
pop
out
xchg
jo
aas
and
pop
cwtl
dec
mov
mov
adc
mov
push
pop
fwait
outsb
adc
shrb
cwtl
popa
cmpsb
bound
jne
mov
mov
shr
adc
cmp
iret
add
push
cmpsl
stos
movsl
dec
adc
mov
inc
out
pushf
mov
fsubl
dec
movb
sub
mov
test
mov
lahf
xchg
rcrl
rcrl
je
push
cmpsl
pop
sub
jp
dec
push
cmp
mov
neg
jb
mov
and
push
test
mov
mov
insl
ss
jge
mov
push
mov
inc
sub
outsl
pop
fwait
inc
mov
cmpsl
or
out
pop
movsb
gs
mov
ds
popa
xor
sub
jp
push
push
lcall
pop
pop
imul
dec
sbb
or
shlb
out
sbb
add
jbe
mov
clc
cmp
lds
stc
lods
cmp
mov
cmp
push
and
jge
pop
into
ret
pop
test
fadd
mov
sub
jns
dec
push
push
add
mov
mov
dec
imul
jg
mov
or
nop
aam
cmpsb
sbb
push
test
mov
scas
cmp
adc
ja
or
mov
out
insb
sarb
loope
sbb
rcll
stc
cmc
lods
cmp
stos
fs
inc
cmpsb
clc
mov
pop
call
loop
or
cmp
decb
repz
mov
cmp
mov
jb
pop
fstpt
mov
xor
dec
imul
mov
jmp
jns
rcrl
test
or
mov
jnp
test
add
lret
add
mov
leave
xor
mov
dec
xlat
lcall
push
add
xor
inc
out
stc
fcomps
cltd
insl
jge
scas
lock
inc
mov
lods
jg
dec
mov
daa
pop
dec
and
pusha
add
popl
loopne
iret
shll
dec
sub
out
test
mov
icebp
push
or
xor
and
and
fs
rcrb
sti
jmp
in
mov
outsl
add
call
xchg
xchg
adc
out
push
xchg
xlat
ljmp
xor
push
dec
push
pop
leave
mul
out
xor
sbb
add
jle
ja
neg
andb
sbb
sub
sub
push
test
inc
jmp
fstl
int
sub
and
push
push
adc
out
jl
and
faddl
insl
pop
mov
mov
popa
popa
aam
xchg
mov
ljmp
ja
mov
lcall
test
rorb
mov
hlt
iret
xor
stos
jbe
mov
xchg
ljmp
pop
or
sub
mov
mov
scas
mov
test
es
sub
out
loop
lods
add
cmp
fwait
iret
sbb
aaa
mov
lds
movsb
ret
addr16
and
jne
roll
sub
movsb
int
push
sbb
pushf
xor
cs
inc
mov
lea
cmpsb
adc
loope
sub
dec
ret
add
xor
mov
imul
out
push
xor
daa
std
cmpsb
fstl
out
scas
mov
sub
dec
test
inc
lods
pop
jnp
xor
or
push
sbbb
insb
mov
sbb
mov
mull
xchg
dec
cmp
xchg
cmp
insb
dec
jmp
jl
pushf
arpl
jle
stos
xchg
jae
stos
inc
lock
stc
mov
cmc
movsl
and
fmulp
das
test
xor
adc
pop
push
arpl
daa
fwait
push
mov
mov
leave
xchg
lret
inc
outsl
sub
sub
jns
push
jge
ficompl
and
outsl
cmc
aam
es
xor
inc
nop
int3
xchg
dec
xorl
subl
movsl
pop
dec
xchg
ljmp
lret
xchg
jae
sahf
mov
or
pop
out
sbb
loope
lahf
sub
lds
fsub
movsb
push
pop
jmp
push
xor
sub
lods
sub
sarb
loopne
gs
dec
push
movsb
call
mov
push
xchg
inc
fcoms
mov
aaa
pop
stos
nop
fbld
dec
data16
mov
jle
outsl
in
inc
push
jge
sbb
mov
push
addr16
movsb
testb
xchg
cmp
sbb
sbb
out
jl
lods
loope
pushf
dec
cmp
push
cld
pop
test
out
addr16
dec
pop
pop
push
cmpsl
or
jge
lods
sbb
cmp
mov
je
cmpsb
into
imul
push
add
xchg
mov
inc
xor
dec
scas
lret
xor
lahf
xchg
xchg
shll
testl
lret
cwtl
pop
lahf
xchg
pop
mov
js
inc
int3
outsl
cmp
mov
xor
bnd
sub
push
dec
xor
stos
negl
mov
mov
cwtl
fstpl
lcall
mov
mov
dec
bound
dec
or
stc
sub
xchg
lret
clc
mov
and
add
xchg
add
dec
fstps
jbe
cmpl
out
test
mov
inc
paddusw
into
add
fadd
call
outsl
enter
insl
and
inc
pop
xchg
aas
ret
lret
inc
hlt
jo
lahf
lret
mov
add
xchg
ds
aam
mov
faddl
pop
inc
jle
dec
cmp
sbbb
sbb
xlat
stc
push
cmpsl
pusha
cli
mov
mov
adc
stos
stc
sbb
les
jmp
lahf
stos
aam
int3
inc
add
mov
mov
dec
out
inc
mov
lea
rolb
std
divl
rcr
add
mov
pop
out
and
push
cs
adc
mov
pop
add
lods
sahf
inc
push
sub
shll
mov
les
inc
pop
in
inc
adc
sbb
mov
inc
or
push
les
das
or
cmc
loopne
std
fstpl
push
popf
cmpsl
or
sbb
sbb
into
les
ret
mov
sti
in
int
scas
jnp
adc
std
outsl
jge
jmp
push
mov
ret
adc
and
push
mov
mov
mov
in
mov
jl
je
inc
adc
data16
jae
cmp
fimull
fsubrl
dec
lock
dec
xchg
lcall
rcrb
inc
dec
popf
inc
cwtl
mov
daa
rorb
and
xchg
scas
imul
scas
pushf
sbb
cmp
mov
cli
dec
xchg
adc
mov
jmp
xchg
cmp
into
cmc
rclb
mov
lret
xchg
cmp
cmp
sbb
ds
test
mov
xchg
cmp
in
shlb
xchg
call
arpl
pop
mov
jo
cmc
cmp
adc
cli
in
mov
sti
sbb
or
inc
popa
add
xlat
cwtl
aad
fimull
xchg
dec
jmp
jb
jp
stc
mov
adc
testl
mov
bound
gs
xor
cmovb
aaa
insb
fldl
movsb
lret
pop
sbb
clc
add
push
adcl
cmp
fstl
mov
dec
scas
cmp
sar
jns
fimull
popa
divl
or
adc
shrb
xlat
fcomip
aaa
push
sub
xor
ds
pop
cmc
add
sub
lods
fisubrs
xchg
nop
testb
bound
push
shl
xchg
cmp
lock
push
push
out
pop
or
ficompl
inc
fistl
lret
sub
xchg
mov
add
add
xchg
outsb
dec
decl
pop
cltd
pushf
fnsave
or
scas
xchg
or
test
cld
inc
jle
push
testb
mov
push
push
pop
adc
rorl
movb
imul
repnz
call
push
and
pop
sti
push
mov
stos
cmp
xchg
xchg
insb
xor
outsb
pusha
add
xor
cmp
sbb
aaa
cli
xchg
imul
fwait
outsb
call
rol
pusha
cld
mov
mov
add
aas
add
and
mov
mov
lret
das
push
js
das
fnstsw
inc
into
add
cmp
das
lret
dec
add
outsb
jl
jb
pusha
hlt
jmp
cmp
xor
inc
mov
and
aas
arpl
imul
sti
adc
test
mov
jg
es
push
sub
inc
addb
sbb
rcrb
pop
sarb
clc
or
push
sbb
repz
fcoms
or
popl
adc
cmpsl
adc
cmpsb
jbe
add
xchg
repz
push
or
es
push
das
mov
shl
and
in
inc
cmpsb
sub
cmp
lods
push
in
in
cmpsb
pop
jmp
and
stos
xchg
mov
repnz
xchg
xor
or
push
sub
push
fcomi
jecxz
push
test
ljmp
shlb
xchg
adc
lods
mov
lods
in
add
ja
in
int3
mov
jmp
mov
int
movsb
repz
mov
pop
rcrb
mov
fnstsw
mov
test
loope
stc
mov
call
xchg
pop
movsb
ds
sbb
dec
jbe
lods
adc
pmulhuw
inc
adc
imul
jge
shrl
pop
mov
outsb
shrb
fcoml
loopne
or
or
fists
mov
xor
sub
lock
andl
int3
test
out
dec
mov
adc
fidivl
inc
lahf
popa
insl
loope
pop
outsl
rcrl
bound
gs
cltd
or
repnz
in
xor
fdivs
inc
dec
xchg
rcl
out
lcall
pusha
jo
cmp
daa
mov
insl
cmp
pop
pop
in
test
das
xor
xchg
jmp
xchg
push
cmp
inc
cmpsl
jmp
mov
dec
xor
xlat
pop
mov
push
popa
mov
dec
loop
loop
das
loop
sahf
push
sub
outsb
cli
stos
dec
pop
xor
subb
mov
aam
push
rcll
movsb
icebp
push
dec
dec
or
std
dec
push
in
and
mov
inc
mov
push
dec
cmp
cmp
std
icebp
aaa
and
fimuls
adc
dec
addr16
rcrb
testl
out
in
loope
push
in
xor
push
push
and
lock
dec
outsb
inc
fists
mov
xor
add
adc
cmc
jno
stos
inc
popa
das
adc
sub
mov
rclb
mov
sbb
cmp
mov
mov
push
fists
mov
xor
inc
jnp
or
int3
xor
adc
cmp
cwtl
pop
lret
jne
setg
xchg
or
inc
mov
aaa
push
clc
lods
sbb
scas
insl
loope
test
std
fmul
aad
jp
leave
mov
cmpsl
xor
xor
mov
mov
mov
lods
aaa
mov
les
xor
adc
ss
and
adc
pop
mov
push
push
data16
sbb
and
push
lret
inc
sarb
push
js
sti
notl
or
push
pusha
popa
subb
adcb
leave
and
inc
sbb
imul
xor
icebp
pop
aam
mov
push
sub
sahf
xchg
sub
mov
repz
int
lret
call
jl
pop
dec
mov
les
cmp
xorb
loope
xor
daa
repnz
stos
test
sbb
mov
mov
inc
in
add
addr16
add
mov
mov
lea
mov
stc
mov
stc
mov
loop
xlat
xchg
xchg
sub
lcall
lods
out
adc
pop
int
ror
or
dec
sbb
sbb
sbb
sbb
jb
jbe
push
inc
test
jae
push
jb
jno
push
sbb
sti
roll
shl
fidivrs
and
dec
cmp
and
cmp
ret
cmp
mov
in
test
outsb
fcmove
lahf
cmp
mov
repnz
cmp
rorl
pop
dec
aas
pop
pusha
ret
cmpb
in
cmp
ja
push
in
inc
mulb
add
xchg
lahf
out
jp
out
add
jmp
rcll
mov
in
addr16
ret
adc
pushf
fsts
cmpsl
lock
pop
mov
test
out
dec
or
jmp
ror
jns
repnz
dec
test
lahf
or
add
sahf
and
std
push
add
repnz
sbb
jmp
insb
mov
mov
xor
bound
lret
jp
jbe
cmp
fiadds
mov
jmp
mov
pop
cwtl
add
push
cmp
sub
mov
jmp
mov
sub
roll
sub
enter
out
in
push
adc
in
jle
repnz
ret
xchg
test
cld
inc
xor
cmp
mov
push
jl
mov
scas
jno
or
push
and
and
mov
and
std
pop
test
sbb
jbe
imulb
xchg
enter
push
test
int
push
lods
cmp
cmc
sbb
scas
stc
sti
cmp
xchg
sbb
insb
insb
sub
aam
xchg
lret
lahf
lock
or
lods
aas
sbb
xchg
lea
fcomip
cmp
repnz
push
scas
movsl
clc
ss
lods
test
test
pushf
dec
add
bound
into
push
push
out
ss
repnz
xlat
mov
dec
or
xor
pushf
mov
popf
adc
mov
and
in
scas
out
jecxz
pop
mov
mov
cmp
jo
outsl
rcrl
idiv
pushf
adc
das
lahf
mul
rorb
fistps
pop
adc
dec
mov
stos
cmp
dec
adc
cmp
pusha
dec
jge
push
add
out
mov
scas
or
aas
test
jg
push
in
push
outsb
jnp
xlat
dec
sub
push
nop
dec
cltd
cltd
jbe
add
jg
shrb
sub
adc
push
xor
push
out
loopne
dec
xchg
sbb
pop
lea
lock
push
or
notb
mov
or
cmpsl
popa
dec
or
xor
xlat
aad
dec
jns
in
and
push
sbb
leave
bound
mov
stc
jl
mov
ret
je
cmp
jmp
mov
xor
shlb
or
adc
jl
xor
ljmp
mov
lods
pop
mov
cmc
insb
xchg
lock
dec
outsb
cmp
fsin
pop
adc
xor
adc
rclb
xchg
and
leave
xchg
gs
sub
cltd
cli
cmp
xchg
jge
je
add
mov
mov
jno
cld
mov
and
insl
sarl
sbb
pop
pop
push
sbb
jecxz
cltd
out
jo
test
mov
ss
scas
and
ror
loope
cmpsl
stos
fisubrl
inc
pop
adc
out
sub
xchg
mov
pop
inc
movsl
add
pop
dec
pop
arpl
aam
fwait
xlat
addb
jecxz
loope
sub
adc
and
inc
out
sti
jmp
in
leave
pop
gs
dec
mov
lret
mov
add
ljmp
push
mov
cwtl
sub
jne
push
inc
repz
push
adc
fucomip
push
jge
sbb
mov
cmpsl
lahf
sub
xlat
les
cmp
in
mov
out
andb
jo
add
push
sub
push
cmpsl
mov
push
inc
mov
xor
sti
cld
inc
xor
inc
cmp
daa
rclb
push
sbb
push
sar
test
xchg
dec
adc
fs
ja
arpl
in
mov
cmp
jge
je
sbbl
adc
add
mov
fwait
mov
push
les
push
inc
cmp
jp
and
xor
pop
dec
sbb
xor
dec
mov
repz
enter
jns
ret
inc
movsb
ret
adc
jno
mov
lods
fsubl
inc
xchg
push
or
pop
pop
adc
clc
ret
dec
mov
or
inc
dec
mov
nop
xlat
xchg
xor
imul
cmp
mov
xor
cmp
into
cmc
jmp
in
mov
popf
push
mov
mov
sbb
xor
inc
bound
je
sub
mov
xchg
jg
movsb
movsb
push
jmp
scas
std
cmp
inc
ss
add
pop
pop
int3
in
mov
out
sub
movsl
push
flds
test
push
cmp
insl
mov
and
mov
addr16
mov
popf
and
loopne
rcrl
fdivrs
dec
in
add
or
ret
mov
mov
lock
inc
leave
insb
xchg
jecxz
mov
rcrb
mov
and
inc
dec
scas
int
arpl
shl
mov
sbb
iret
je
cmp
mov
adc
and
in
aad
outsl
xlat
cld
loope
pop
mov
insl
movl
mov
mov
fs
les
xchg
aam
dec
mov
cmpsb
sti
mov
call
nop
arpl
data16
inc
mov
ret
mov
inc
pop
pop
sahf
pop
stos
loop
push
xlat
imul
pop
cmpsl
push
sahf
and
mov
aam
test
cvtdq2ps
inc
add
nop
dec
sub
xchg
xor
push
je
shl
mov
xor
inc
mov
or
add
cmp
sbb
mov
popa
xchg
xchg
xor
enter
movsl
ja
or
pop
lods
loop
xor
fisttps
mov
sub
xchg
mov
or
scas
test
push
cwtl
sbb
inc
lds
pop
icebp
frstor
add
jne
xlat
lcall
mov
cld
mov
pop
push
dec
lcall
or
aas
fidivrs
sbb
mov
add
and
push
decb
or
out
xchg
and
hlt
sahf
jo
dec
mov
outsb
test
sbb
cmp
outsb
mov
cs
clc
mov
dec
cmp
idivl
pusha
mov
and
outsb
arpl
jnp
adc
inc
sarl
mov
data16
int
cld
sub
stos
jae
daa
aam
and
in
or
enter
ja
cs
or
pop
push
fildl
ljmp
add
pop
dec
gs
add
int
test
cld
jmp
mov
sarb
call
lcall
jle
test
jl
lds
in
les
mov
shl
idivl
data16
fistl
xorl
xchg
cs
sub
jne
add
test
bound
or
mov
sbb
pusha
ret
add
xchg
jg
mov
js
fs
ror
mov
and
cmp
push
mov
and
aaa
adc
sarb
inc
cmp
dec
in
add
and
or
cmpsb
cltd
cmpsl
cmp
arpl
fcmove
or
filds
mov
mov
cmc
int3
add
imul
aad
sub
gs
lea
pop
xchg
xchg
daa
mov
test
mov
mov
scas
cmpsl
xor
jp
leave
push
xor
gs
lret
aaa
and
jne
fadds
das
push
sbb
mov
sub
mov
fistpl
movsb
pop
aaa
mov
push
scas
jns
dec
mov
mov
mov
ljmp
or
xlat
dec
lcall
lret
test
stos
push
cmc
pop
pop
cli
les
aad
icebp
pop
les
pop
repz
jbe
xor
push
ds
lods
add
loope
stc
cmp
out
and
test
loop
das
cmp
inc
sub
pop
andb
sub
xor
lods
in
cmc
aad
jb
xor
dec
ds
loope
jg
push
cmpsl
lock
mov
in
inc
xchg
lds
jmp
clc
out
incb
pop
xchg
adc
imulb
jecxz
pop
mov
lret
jo
jle
roll
mov
add
aas
js
orl
mov
aad
pop
mov
aaa
repz
and
scas
scas
and
adc
push
addl
pusha
in
subb
pop
sbb
mov
mov
mov
pop
les
pop
ljmp
sbb
sbbl
mov
lock
dec
cmpl
xchg
test
mov
ret
fwait
adc
fstpl
xchg
pop
aaa
mov
cld
imul
xlat
dec
ss
loope
enter
or
or
adc
sub
ljmp
nop
rcl
mov
xchg
ja
jle
shrl
pop
or
jbe
sbb
and
enter
insb
stos
loopne
imul
das
push
cli
nop
jne
test
inc
cmpsb
xchg
sbb
adc
outsl
push
test
xchg
leave
jae
lods
cmp
push
inc
push
and
fcmovbe
out
add
mov
repz
popf
add
sti
stos
mov
sbb
mov
loop
dec
cmp
xlat
es
cmp
int
inc
jp
sbb
pop
push
repz
pop
cwtl
sbb
insl
faddp
mov
fs
xchg
adc
imul
rorl
gs
inc
inc
xor
outsb
xor
ja
adc
test
leave
je
scas
push
push
pushf
icebp
fnstenv
sub
or
movsl
repz
inc
mov
inc
dec
mov
cwtl
lea
mov
cmc
dec
rclb
mov
push
cmp
or
lods
lahf
jg
movsl
push
sub
cmp
xchg
adc
in
xlat
pop
movsb
test
mov
cmp
ljmp
xchg
out
and
or
mov
cmc
mov
leave
sbb
out
mov
and
lock
mov
outsb
bound
test
je
les
push
sbb
mov
or
and
cmp
push
orb
or
push
imul
mov
popf
cld
mov
leave
fnstcw
ds
push
mov
push
mov
jae
outsb
push
shl
pop
push
movb
lret
xlat
xchg
mov
in
loopne
icebp
xlat
push
adc
cmp
mov
aaa
inc
sbb
sti
inc
push
fcomp
adc
stc
mov
sbb
and
cwtl
sahf
xchg
pop
repnz
rolb
pop
mov
or
push
mov
sbb
sub
stos
inc
mov
insl
cmp
faddl
xchg
gs
stos
jae
push
es
scas
jae
out
push
sub
popa
out
add
adc
pop
and
test
adc
cmpsl
push
les
mov
or
into
add
pushf
movl
mov
mov
or
popa
mov
pop
aas
jp
inc
push
pop
test
lret
push
xor
lock
push
imul
popa
and
jecxz
dec
add
pop
pop
repz
jl
arpl
push
jae
lcall
xchg
and
rolb
mov
xchg
and
imul
aam
shll
sub
mov
mov
outsl
mov
movsl
call
push
das
mov
data16
or
push
mov
aaa
stos
mov
xchg
jg
aaa
int
jnp
fisubrl
cmp
jne
pop
xlat
cmp
aam
inc
push
mov
outsb
imulb
push
dec
loopne
dec
sub
data16
dec
or
jp
insb
sarl
jno
sub
jp
dec
jne
cmp
sbb
imull
das
aaa
lahf
and
enter
inc
sbb
lea
mov
mov
sbb
mov
jle
repnz
xchg
push
jbe
out
and
jns
sbb
cmp
and
lds
arpl
jb
sub
stos
shr
or
mov
bound
sub
and
xor
fdivrs
mov
dec
pop
and
ret
xchg
mov
test
mov
jb
aam
inc
loope
ja
inc
shr
push
test
insl
mov
adc
mov
loope
inc
mov
xor
orl
push
jbe
pop
aas
bnd
jmp
xchg
dec
and
fwait
dec
mov
jmp
gs
or
mov
ret
ja
adc
cld
adc
adc
nop
test
cmp
iret
pop
fcmovnbe
rorb
jg
mov
push
xchg
sahf
ret
mov
xor
jle
out
pop
sbb
push
jge
dec
xor
call
cmc
test
stos
add
jne
add
inc
inc
jb
fsubs
in
mov
xchg
aad
jne
aaa
inc
mov
daa
arpl
push
inc
xchg
sub
cmp
xorb
push
ljmp
xchg
mov
jge
jge
adc
pop
xchg
jmp
and
xor
adc
or
or
shrb
jp,pn
lock
sti
xchg
pop
lcall
mov
je
jmp
imul
mov
pop
fsubrs
insb
bound
sbb
repz
mov
push
cmp
mov
add
repnz
mov
push
jmp
jecxz
int3
xor
pop
jne
mov
adc
jns
fs
mov
jp
insl
add
xchg
xor
sub
cmpsb
popa
and
jnp
inc
gs
mov
push
push
push
push
stos
mov
fsubrp
jecxz,pt
test
push
or
ja
rolb
pusha
mov
ds
lods
rcll
movsl
idivl
stc
cmp
jg
adc
nop
cmp
cmp
and
sbbl
push
sub
inc
add
dec
into
test
mov
jg
push
mov
xor
cmp
lcall
xchg
push
and
sub
neg
mov
cmpsb
lcall
in
cltd
sbb
clc
xor
in
in
stos
mov
stc
sub
imul
cmc
js
pushf
enter
jle
jg
pop
mov
jmp
inc
sub
adc
xor
daa
jne
jb
sbb
cmp
repnz
inc
adc
push
mov
daa
xchg
int3
adc
test
xchg
or
nop
xorl
sahf
repz
dec
and
loope
jae
adc
das
aaa
jg
popf
push
dec
inc
mov
mov
jae
mov
cmp
mov
stc
mov
adc
lea
push
test
ficomps
xchg
cwtl
xor
inc
mov
mov
mov
add
cmp
jae
dec
call
xor
lds
adc
loopne
dec
xor
mov
ja
idiv
jle
inc
leave
loop
test
int3
sub
or
inc
hlt
leave
data16
pop
and
mov
out
iret
or
inc
enter
aaa
insb
pushf
xchg
roll
xor
jns
mov
add
aas
mov
enter
pop
lret
insl
repz
and
imul
xchg
jecxz
mov
push
jno
jb
cmc
and
mov
mov
dec
mov
xchg
cli
jns
xor
push
jo
les
aam
sbb
stos
cmpsb
push
test
cltd
bnd
cwtl
or
fnstcw
xor
rcr
mov
ss
jns
leave
sbb
cmp
sbb
andb
clc
mov
ja
bound
dec
mov
sbb
cmpl
fimuls
mov
push
xchg
imul
dec
pop
dec
xchg
outsl
outsb
push
shll
jmp
push
in
adc
into
mov
int3
inc
xchg
orb
mov
mov
fsubrl
in
xorb
icebp
cmc
je
sbb
insb
outsb
sbb
dec
cmc
pop
inc
push
dec
lock
les
add
popf
outsb
adcl
xor
out
insb
mov
push
jmp
outsb
pop
cwtl
nop
mov
dec
movsb
rclb
scas
dec
inc
imul
and
jle
mov
sub
pop
test
stos
das
mov
jno
dec
fs
imul
in
hlt
flds
pop
sbb
jae
repnz
inc
shlb
xchg
divl
shll
xlat
inc
iret
adc
fldcw
adc
das
and
fnstsw
or
dec
scas
and
adc
sbbb
adc
neg
in
movups
push
xor
std
add
mulb
cmpsb
adc
popl
bound
neg
dec
mov
mov
and
shlb
pop
cwtl
iret
lea
cmpsl
dec
icebp
fdivrl
adc
fcmove
fsub
add
out
push
cmp
iret
test
mov
xor
pop
repz
sarb
add
jbe
cmc
mov
push
test
pushf
ret
ret
dec
jbe
sub
std
bound
adc
push
sbb
test
add
pop
inc
ja
mov
fadds
in
mov
mov
loop
leave
mov
rorb
loopne
out
pop
imul
in
jp
stc
cmp
data16
insl
out
test
xchg
add
or
and
stc
popa
clc
leave
jnp
mov
dec
or
xor
mov
arpl
push
leave
mov
fists
lds
push
mov
push
loopne
push
add
jbe
pop
xorl
loop
sti
cmp
outsb
xchg
das
outsb
mov
jmp
in
mov
xor
add
ss
popa
pop
jmp
jne
adc
sub
repz
iret
mov
xchg
pushf
popa
mov
lret
cld
add
jb
outsb
jl
inc
lods
cmp
xchg
daa
mov
ja
pop
xchg
add
adc
movsb
dec
or
sub
dec
jbe
inc
and
test
mov
mull
mul
repnz
lea
test
mov
jg
xchg
movl
push
cli
popa
sbb
in
popa
fistpll
shrb
ds
xchg
jle
mov
iret
xor
or
mov
mov
cmp
sbb
and
lcall
sarb
add
fstl
or
add
mov
mov
lret
stos
test
mov
jecxz
adc
pop
ljmp
sub
mov
xor
imul
dec
sub
ljmp
mov
ss
add
int3
inc
jge
pop
dec
pop
data16
and
notb
add
inc
or
mov
dec
xor
int
jne
int
ret
stos
dec
les
push
xor
pop
cwtl
call
int3
lds
mov
cwtl
addb
inc
pop
loope
jne
inc
cmpsl
adc
mov
and
xchg
addr16
pop
sub
adc
dec
pmaxub
pop
repnz
sub
movsb
adc
xchg
adc
loopne
xor
pop
and
and
lds
or
cmp
push
pop
std
leave
cld
rorl
sbb
cmp
jbe
mov
mov
in
push
test
push
sbbb
das
sbb
pop
pop
popf
das
inc
rorb
pop
mov
sahf
add
das
cmp
pop
jae
scas
xchg
cli
jmp
mov
fadds
add
add
cmc
ficoms
popf
cmp
pop
jge
xchg
mov
push
fmul
xchg
pop
sbb
xor
rcrw
lret
jbe
notb
shlb
lods
mov
push
xchg
in
jl
mov
mov
clc
ret
popa
into
add
dec
mov
shl
jnp
fstpt
stos
dec
test
lahf
icebp
jecxz
xchg
sbb
notb
and
outsl
icebp
adc
add
mov
cmp
jne
fisubrs
std
dec
fldcw
or
adc
xor
lds
sbb
popa
sti
pusha
add
cmp
loopne
testb
pop
fucomp
dec
call
inc
loop
clc
add
xor
outsl
xor
push
mov
lods
mov
sysret
xchg
orl
mov
xor
mov
and
and
and
aam
cmp
mov
pop
pop
or
insb
dec
pop
lea
cmp
das
xor
icebp
movsl
lret
pop
out
adc
imul
inc
cmpsb
mov
jns
lea
or
mov
mov
xchg
push
cmp
xor
inc
jno
add
fwait
mov
andl
sbb
cmpsl
inc
xchg
addr16
adc
add
mov
mulb
stos
mov
mov
xor
repnz
arpl
mov
dec
cmp
adc
cli
clc
mov
fsubrs
daa
ret
pop
scas
adc
gs
push
adc
inc
lods
inc
cli
jp
push
xchg
lds
lds
inc
outsl
arpl
xor
mov
or
inc
dec
dec
or
stc
pop
push
popa
aas
leave
cld
das
out
aaa
cmpsb
ljmp
mov
sub
pop
mov
fdivrl
or
push
push
lret
and
jl
mov
adc
xorl
mov
js
push
inc
sub
sbb
pop
aam
ret
dec
mov
es
arpl
push
test
negl
popf
idivb
call
jg
pop
cwtl
cs
lds
mov
pop
jl
in
lret
mov
lret
fcmovu
scas
imul
sub
test
xchg
ja
or
inc
pop
mov
insl
loopne
clc
push
pushf
rcll
aaa
lods
fs
xor
push
inc
lock
xchg
rorl
sahf
xchg
mov
pop
mov
and
ror
jl
das
add
int
lahf
and
mov
es
mov
add
push
xchg
add
in
addb
ret
add
push
pusha
out
jnp
jp
in
adc
xchg
mov
inc
inc
sarl
adc
mov
cmp
jnp
outsb
stc
out
gs
rolb
cmpsl
lock
pusha
loopne
mov
jb
mov
jb
rorl
jbe
xchg
pop
mov
icebp
jbe
mov
sti
mov
mov
sub
mov
int3
jb
nop
jg
cld
sub
sbb
icebp
inc
dec
insb
mov
cmp
ljmp
push
aaa
out
push
pop
mov
push
inc
lds
add
loop
call
mov
out
xchg
outsb
aad
fldt
leave
dec
mov
pop
push
mov
cli
xchg
aaa
inc
pop
sbb
test
sahf
push
push
jne
sbb
dec
ljmp
hlt
mov
in
adc
adc
test
cld
ficompl
ss
cli
jns
xor
xchg
fcomp
fisubs
pop
pop
mov
push
push
js
lds
cmpsb
xchg
lods
lcall
popf
push
rcr
hlt
xchg
mov
clc
xor
mov
sbb
jmp
int
jg
xor
sub
movsl
pop
cmp
rorl
popl
lods
adc
or
js
enter
adcb
mov
loopne
push
shll
inc
testb
pop
pushf
sub
or
push
xchg
stos
and
sub
jo
imul
fs
jnp
sbb
pop
push
sub
cmpsb
xchg
sbb
ja
xor
or
fdivs
jo
jmp
pop
lds
je
cld
les
jno
aam
dec
xor
cmp
jg
dec
iret
pusha
fisubrl
pop
outsb
cmp
mov
daa
add
cmpsl
inc
nop
push
adc
dec
jmp
les
sub
mov
ret
int
hlt
mov
pop
test
mov
int
into
cs
ja
adc
xor
stos
inc
lods
jb
push
jo
dec
adc
scas
sahf
mov
or
mov
xor
and
int3
xor
push
xchg
test
inc
je
and
out
mov
and
mov
sbb
ret
lds
ret
ds
cmp
inc
iret
inc
add
push
gs
sub
cmp
mov
jno
mov
aad
shl
cmp
cmp
inc
movsb
sub
div
mov
xorb
push
push
jl
mov
shl
cmp
xor
in
cld
add
jmp
into
and
xchg
cmp
inc
and
add
cld
je
cmp
call
pop
jmp
sub
dec
stos
sub
jg
xor
xchg
mov
fucom
je
inc
ret
imulb
jle
pop
andl
aad
jne
mov
pop
dec
xor
fstl
int
mov
pop
cmp
adc
fidivrs
jno
mov
testl
add
shrl
jae
dec
sbb
push
movsb
jg
xchg
mov
xchg
stc
pop
mov
jb
shl
out
jp
stos
push
fwait
push
pop
icebp
mull
add
and
pop
and
in
pop
cld
mov
inc
add
movsl
movsl
lods
das
inc
fstl
in
lods
pop
cmpsb
push
mov
xor
shr
sbb
cli
stos
gs
aad
xchg
sbb
jb
test
mov
outsb
mov
mov
mov
adc
aad
push
pop
add
je
adc
into
sbb
xchg
in
in
repnz
pop
and
arpl
arpl
push
pop
cmova
inc
out
xchg
movb
pop
mov
in
or
in
repnz
pop
jg
in
push
call
arpl
aam
std
fcmove
in
jg
push
fidivrl
out
jne
sahf
sbb
ds
test
sub
mov
loope
sbbl
fldenv
sbb
add
popa
fldl2t
pop
or
repz
push
sbb
lcall
sub
push
push
das
mov
xor
testl
mov
jge
iret
lahf
popa
popf
xchg
mov
jo
push
sbb
push
inc
push
je
xor
in
dec
sar
lcall
jnp
mov
sbb
or
ljmp
sbb
xchg
cmp
enter
icebp
sbb
sbb
push
mov
data16
push
popf
lea
sbb
jg
sbb
mov
gs
push
jne
out
je
rorl
xchg
in
outsb
data16
std
movsl
aad
int3
inc
inc
test
inc
dec
mov
cld
fwait
ja
or
mov
sub
rorl
sti
lds
xchg
dec
mov
adc
jmp
rorl
pop
mov
in
lret
inc
mov
sahf
sub
push
aas
repnz
jne
pop
or
ss
push
nop
and
mov
jno
in
sahf
sbb
lods
ret
adc
rcl
faddl
xchg
shlb
push
pop
in
xchg
xchg
test
leave
cmp
mov
cmpsl
mov
mov
mov
add
dec
cltd
loopne
xchg
lret
int3
adc
aam
inc
push
sub
or
pusha
cmpsb
push
xlat
jne
inc
dec
shr
fisttps
in
imul
xor
sub
imul
inc
cli
out
or
jb
loope
cmp
cwtl
aam
sub
icebp
jnp,pn
mov
xchg
and
mov
insb
sti
sbb
in
adc
pop
sbb
popf
adc
mov
mov
pusha
insl
jl
fs
lahf
out
aam
cmp
std
jne
lret
mov
das
cmp
int
jns
mov
pop
sbb
pop
xchg
dec
add
xchg
lret
xor
jnp
pop
std
aam
jle
notb
sub
push
mov
jb
sbb
dec
ret
mov
pop
sub
jae
leave
test
jl
andb
test
push
jo
fdivs
jne
jnp
add
sbb
inc
pop
pusha
test
cmp
or
sub
call
pop
jge
lock
xchg
sub
mov
jb
mov
add
fs
ss
jp
mov
insl
xor
les
loop
lret
gs
jbe
cmp
enter
scas
or
inc
dec
pop
popw
xor
mov
int3
idivb
and
jl
insl
rcll
ljmp
and
dec
sub
jp
or
movb
aaa
cmp
inc
cmp
test
mov
add
in
aad
loopne
dec
std
jne
jne
cmp
ljmp
lods
adcb
and
sti
inc
jle
jp
stos
xor
and
outsb
into
sbb
das
dec
arpl
pop
sub
out
cmp
sub
subb
pop
cs
jle
adc
xchg
lods
hlt
xchg
mov
test
and
sbb
mov
jle
ljmp
mov
pop
push
lea
movl
add
sarl
push
mov
fdivrs
mov
ja,pt
cli
jb
xorl
ja
pusha
push
inc
mov
mov
imul
push
mov
jg
mov
add
and
aaa
sti
add
or
cli
cmc
xor
or
iret
mov
lock
jmp
iret
sub
loopne
insl
inc
lahf
inc
popa
sbb
or
mov
mov
rcr
sti
fsubrp
jne
push
xchg
push
imul
sub
call
imul
test
test
pop
aad
dec
mov
loopne
xchg
mov
lods
push
push
loope
mov
dec
iret
arpl
jle
fwait
inc
aam
lods
jg
pop
add
and
jmp
dec
mov
xor
add
mov
in
and
dec
pop
cmpsb
pop
jae
scas
leave
nop
cld
int3
sub
lock
jno
mov
dec
jp
out
mov
mov
mov
xchg
jmp
mov
pop
dec
and
insl
movl
cmp
arpl
mov
mov
cmp
push
dec
and
orl
cmp
rcrb
ja
jo
scas
gs
in
sub
sbb
mov
mov
scas
pushf
dec
icebp
pop
cmc
or
popa
add
fsubs
push
push
mov
mov
movsl
push
ss
xor
lret
pushf
mov
mov
pop
mov
or
or
lahf
push
push
jae
in
adc
sahf
sub
insl
into
pusha
std
aam
cmp
pop
insb
jne
imul
pop
jg
push
mov
popf
push
fistps
je
xor
push
sub
xchg
aaa
jb
mov
xchg
mov
lock
push
push
imull
movsl
xchg
mov
lock
push
and
inc
out
in
pop
add
movsb
test
std
aad
mov
xchg
inc
inc
jo
pop
adc
sub
mov
mov
loop
jp
fidivl
sbb
cmp
or
dec
pop
push
loope
dec
out
shrl
xor
xor
jne
mov
xor
add
rcrl
sbb
scas
push
mov
cmpsl
outsl
cmpsb
fsubp
mov
mov
push
std
inc
sarl
test
sbb
sub
clc
dec
std
clc
inc
lds
in
pop
pop
loop
loop
bound
cwtl
sbbb
sub
dec
and
sub
lds
rorl
gs
mov
je
lds
push
movsl
lret
push
adc
xor
cli
xchg
jge
test
fsubp
sbb
test
loopne
pop
jg
or
push
lods
dec
stos
outsl
sbb
push
xchg
xlat
iret
mov
adc
adc
insb
repnz
pusha
cs
push
mov
jae
adc
add
cmpsl
stos
mov
lds
dec
cmpsl
and
cmc
adc
mov
inc
mov
adc
movsl
jp
xor
jg
sub
mov
or
cmp
shl
push
mov
popa
fistl
jae
xchg
ljmp
mov
push
inc
jg
leave
jmp
ss
in
std
sbb
jbe
aas
xchg
daa
xchg
aad
rolb
push
shlb
mov
cmp
pop
pushl
dec
sbb
cs
pop
jne
jns
sbb
jmp
loope
stos
sbb
push
mov
sub
lcall
cmc
mov
cmp
test
sbb
pop
mov
xchg
and
mov
fs
cltd
pop
repnz
jmp
jge
out
lds
mov
pop
outsl
mov
dec
xor
cwtl
mov
inc
pop
xchg
fisubs
mov
mov
sub
mov
in
or
and
lahf
and
cwtl
enter
or
ja
scas
pop
inc
xchg
out
js
jno
add
inc
jle
or
push
pop
aas
sub
xchg
mov
xor
cmp
das
out
mov
mov
inc
pop
scas
call
lea
mov
xor
movsl
xchg
shrl
std
xchg
mov
stos
jae
mov
inc
or
dec
in
fwait
loope
out
arpl
aaa
mov
pop
nop
mov
insb
or
sbb
ret
xor
lret
jnp
xchg
pop
daa
inc
add
xor
int
or
icebp
in
sbb
leave
fnstcw
ljmp
inc
mov
mov
dec
xchg
rorl
popf
sahf
scas
scas
nop
rcrb
sub
xchg
popa
dec
out
lock
sbb
push
and
mov
mov
sbb
loopne
pushf
int3
inc
into
cld
js
shlb
xchg
ljmp
or
loopne
inc
insl
pushw
jno
inc
iret
xlat
cmp
and
mov
jnp
dec
cmpsl
les
dec
fwait
mov
or
filds
cmc
loope
sub
xchg
sbb
mov
test
mov
pop
loope
movsl
jg
jl
push
cmp
cwtl
sub
jne
in
divb
daa
or
pop
push
mov
in
insb
mov
push
adc
cmpsl
mov
je
sub
mov
mov
mov
mov
mov
push
xor
inc
jno
aaa
xor
sbb
or
push
mov
pop
xorb
out
mov
pop
cmp
push
fsubp
pavgw
xor
inc
popa
cmpsl
adc
data16
das
cld
mov
dec
call
cmpl
pop
add
pop
cwtl
test
xchg
bound
pop
popf
sar
lods
inc
jbe
dec
or
mov
hlt
loop
movsb
je
test
xchg
std
mov
xor
lods
sbb
cmpsl
jge
or
pop
stos
in
outsl
pop
cmp
jmp
mov
out
inc
adc
rcll
in
mov
lret
pop
out
push
daa
and
cmpsb
xchg
or
movsb
lahf
pop
sub
scas
sbb
data16
cmp
scas
mov
enter
mov
data16
dec
push
test
push
cmp
xor
dec
cmp
dec
scas
mov
into
and
sbb
cmp
cmpsl
stos
hlt
push
aaa
inc
fs
adc
sbb
movsb
adc
cmp
cmp
imul
hlt
dec
and
push
fsubr
test
popf
add
mov
test
aas
and
or
mov
cli
dec
push
ljmp
cmpsl
ret
es
pop
das
inc
rorb
cs
out
push
mov
ret
lods
and
inc
arpl
shl
ja
insl
enter
je
in
scas
or
leave
aad
in
push
sub
add
push
in
in
mov
clc
xchg
pop
inc
push
lock
nop
shll
jmp
xchg
mov
mov
fwait
inc
add
push
xchg
xchg
std
cmc
ret
fdivl
xchg
mov
xchg
jb
ret
lcall
push
cmp
push
jl
ss
lret
decl
adc
or
sbb
ret
xchg
inc
jle
scas
roll
push
and
cmc
mov
mov
dec
xchg
shrl
cwtl
push
push
es
das
xchg
shll
sub
jge
cmp
in
das
std
sbb
xchg
nop
call
rcl
pop
push
xchg
or
mov
and
mov
sbb
adc
jl
xor
sub
dec
loope
inc
sub
dec
hlt
sub
inc
ret
std
mov
add
mov
js
pop
aaa
add
fs
cmp
dec
out
jno
push
and
cmp
pop
and
sbb
mov
adc
push
mov
out
mov
xchg
sbb
push
mov
sti
or
cmpsb
adc
adc
xchg
jne
dec
leave
out
arpl
shll
test
sbbl
cmpsb
sub
in
mov
clc
movsl
push
aam
movsl
scas
repz
jnp
sti
out
sarl
std
sub
mov
test
and
hlt
pushf
or
mov
sub
jne
leave
inc
xchg
out
pop
ret
xchg
jae
sub
inc
mov
pop
sbb
mov
jmp
fdiv
pop
cli
mov
mov
sub
out
mov
mov
xchg
inc
stos
xor
pop
xlat
stc
call
ljmp
xchg
sub
sub
mov
mov
or
inc
push
cld
fdivrl
and
add
scas
in
sbb
ds
imul
std
leave
test
sub
xor
pop
or
leave
jecxz
push
rclb
loope
cld
ljmp
in
sub
and
add
mov
nop
mov
jo
int3
call
out
repnz
jge
nop
dec
and
lods
pop
push
les
das
mov
jb
xchg
idivl
imull
daa
xchg
mov
shlb
leave
and
aas
loopne
cmp
sbb
aaa
bound
dec
dec
test
shrl
push
pop
xchg
ret
push
jg
cli
mov
push
dec
ret
call
sub
sti
adc
hlt
adc
shll
icebp
je
push
sarl
lock
jbe
xchg
or
inc
bound
mov
add
dec
mov
jle
jecxz
leave
xor
mov
cli
mov
paddsb
dec
jecxz
xchg
mov
jne
cmc
pop
outsb
mov
cmpsl
insl
inc
pop
push
cmp
cmp
pop
mov
adc
mov
sbb
jge
fnstsw
ret
lahf
jge
mov
shll
mov
out
sub
imul
jae
xor
lcall
sbb
call
sbb
icebp
orb
lods
loopne
and
ficoms
sbb
mov
mov
scas
xchg
fidivrl
pop
shl
addl
mov
inc
ror
ja
repnz
decb
sbbl
mov
and
sub
adc
cld
or
lock
cwtl
popa
xchg
jmp
inc
sbb
stos
mov
out
lea
icebp
mov
outsl
xchg
loop
in
jno
lea
lods
jg
cmp
inc
hlt
ljmp
out
rorb
mov
cmp
lret
aas
sahf
xchg
fcomp
cmp
lods
xchg
aas
testb
fimuls
das
daa
mov
cmp
mov
or
cmp
lret
fcomps
daa
outsb
insb
cli
aas
mov
into
mov
dec
dec
pop
insb
sbb
shll
cmc
into
rolb
outsb
mov
xor
lock
gs
dec
cwtl
mov
and
sub
sbb
inc
ret
adc
and
movsl
inc
fisttps
inc
or
pop
dec
push
push
mov
arpl
pusha
mov
lock
ljmp
and
out
stos
xor
popf
dec
dec
in
xor
mov
jmp
add
jge
icebp
adcb
sub
mov
loop
dec
mov
stos
xchg
leave
sub
jmp
scas
add
xor
cmp
inc
pop
cmp
inc
jge
in
cmc
inc
mov
test
inc
mov
sti
dec
mov
adc
das
mov
sub
cmp
ja
in
add
fildl
das
pop
imul
movsl
and
push
jmp
psubsw
je,pn
jb
insb
insb
add
in
inc
lods
shlb
dec
xorb
add
ror
int3
xor
pop
push
or
jmp
dec
mov
dec
shlb
jbe
int3
push
pop
add
std
cmp
lods
xchg
push
fistpl
out
xchg
out
xorl
rcrb
push
movsb
mov
sti
arpl
mov
inc
in
xchg
jo
cld
outsb
add
outsl
scas
sub
sub
cltd
sbb
dec
icebp
and
ret
cmc
dec
sub
lods
lret
or
ret
pop
mov
std
sbbl
sarl
xchg
and
push
inc
shll
add
xchg
mov
dec
jg
aas
mov
test
mov
fsubrs
imul
push
stos
lds
ret
lds
or
pop
sbb
sub
lret
jnp
loop
notb
loopne
jecxz
das
icebp
pusha
inc
push
cltd
fistpl
xor
fcmovu
cwtl
jle
jge
jbe
jo
cmp
mov
sbb
mov
push
sbb
sbb
or
add
push
xor
adcl
addr16
mov
test
mov
xchg
or
lock
jno
jns
shl
and
repnz
lcall
mov
stos
in
xorl
xchg
cmpsl
bound
out
hlt
int
iret
xchg
rorl
and
enter
idivb
sub
jl
lret
and
mov
stc
or
xchg
call
mov
dec
fnstsw
cmc
xchg
in
adc
fstl
jp
roll
cmp
test
sub
shrl
fisttpl
and
mov
fisubs
inc
pop
jbe
cmp
or
sub
push
faddp
add
or
subb
pop
and
aas
mov
mov
mov
and
pop
mov
mov
xor
popa
dec
test
cmp
lea
sar
lds
xchg
mov
clc
fiadds
enter
and
mov
pop
cmp
or
int3
sbb
sbb
push
rcl
pop
xor
popf
out
push
lods
jmp
or
xor
pop
cltd
pusha
cmp
fs
inc
loop
sub
fldcw
jae
into
xchg
or
cmpsb
cmpsb
icebp
fwait
dec
dec
test
insl
mov
mov
fldl
xchg
out
mov
out
pop
mov
movsb
js
pop
iret
pop
or
sub
scas
jo
enter
dec
cld
subl
int
int3
movsb
or
xlat
adc
adcb
test
jl
loopne
mov
dec
push
rcll
pop
jge
push
das
mov
dec
ffreep
adcb
push
lods
mov
xchg
in
shlb
mov
sub
jle
lods
js
std
mov
mov
popa
push
arpl
pushf
pop
rclb
test
aas
clc
test
xchg
std
rclb
imul
imul
mov
and
cs
or
outsb
and
movsl
popa
mov
add
mov
xor
cs
lcall
lock
xchg
sbb
loope
aas
in
scas
jnp
sub
rorb
scas
sbb
jmp
pop
les
pop
xchg
jp
and
push
and
jecxz
popa
imul
into
orb
imul
movsl
test
sub
testl
fstl
es
inc
imul
subb
add
mov
sub
ljmp
jbe
je
add
inc
xor
xor
rclb
xchg
or
aam
ficompl
sbb
loop
and
scas
inc
push
in
andl
js
lea
pop
mov
mov
jnp
xchg
insl
add
mov
test
sbb
mov
jno
nop
pop
aaa
sbb
xchg
jno
scas
mov
sub
int
stos
icebp
adc
add
gs
inc
pop
cld
sbb
xchg
jge
or
sbb
inc
enter
lcall
test
lea
sub
mov
pop
icebp
stos
into
push
scas
movsl
mov
xchg
sbb
fcmove
or
push
pop
loop
ret
sbb
or
mov
shll
and
movsb
and
fs
jecxz
inc
sbb
icebp
and
and
sarl
jbe
mov
test
iret
aaa
pop
jae
cmp
sbb
add
outsb
fwait
ja
sub
nop
jnp
pop
out
xchg
push
test
sub
cmp
js
les
jae
jmp
icebp
push
sub
aaa
xor
cmpsl
test
lret
xchg
cltd
out
push
pop
nop
adc
adc
fcmovnb
jle
pop
inc
jbe
pop
xchg
mov
pop
xor
and
push
and
testb
das
rcrl
adc
mov
aam
in
sub
or
mov
push
out
jbe
test
mov
adc
aam
xorps
xchg
sbb
shl
daa
inc
sbb
in
shrl
xor
xor
cmp
push
out
outsl
jo
xor
pop
or
mov
push
insl
mov
fldcw
int3
iret
lahf
push
test
push
jp
loop
or
ja
shr
mov
mul
loope
push
xchg
dec
fisubrl
dec
fiaddl
shll
mov
lock
jg
lods
sub
aad
inc
pop
sahf
mov
je
mov
inc
mov
inc
and
and
or
rorl
inc
dec
push
ror
aas
xor
ret
xchg
jae
adc
stos
jmp
push
lret
subb
add
and
pop
xor
add
mov
mov
fs
je
aas
cmc
imul
mov
jmp
jg
push
mov
aas
inc
dec
push
dec
mov
popa
inc
lods
js
les
and
pop
or
inc
jne
std
cmp
ds
call
es
out
popa
cltd
add
rcll
sti
mov
push
repnz
leave
stos
stos
lcall
jo
push
xor
jo
jae
filds
enter
xchg
shll
call
sub
cld
cli
push
jecxz
cmp
ljmp
dec
imul
and
pop
add
xchg
or
push
inc
jo
xchg
adc
pushf
and
add
scas
cld
inc
cmp
mov
hlt
cmp
add
js
enter
cmp
popa
push
xor
scas
sahf
mov
jle
test
mov
fdivrs
or
dec
inc
ljmp
ffreep
lock
mov
cwtl
mov
rcr
imul
push
test
jae
mov
test
out
fsts
xchg
cs
push
nop
xor
xlat
mov
daa
push
aaa
lods
scas
lfs
test
stos
iret
cmp
negl
imul
orl
adc
imul
scas
mov
sub
fdivrl
or
ljmp
adc
movsl
xor
sbb
dec
add
in
ficomps
iret
add
mov
gs
inc
loop
pushf
push
cmc
jnp
jge
xchg
dec
rcll
ret
inc
xor
mov
ficomps
lods
sbb
pop
cltd
in
repnz
aam
mov
mov
or
mov
mov
pushf
mov
dec
loop
lods
pop
fs
fsubrl
push
jl
daa
sbb
and
inc
addl
mov
mov
cs
cld
sub
xchg
jl
cmp
adc
xchg
ds
cmc
xchg
fisubrl
ljmp
xchg
xchg
sbb
je
mov
pusha
sbb
jo
mov
jne
cmp
popf
pop
fnstcw
mov
mov
mov
mov
pop
lods
lods
imul
push
dec
dec
in
xor
jbe
or
faddp
sub
call
cmp
jp
scas
sub
rorl
or
add
dec
sub
sub
in
and
call
jbe
inc
or
add
xchg
push
or
shlb
or
rcl
lret
outsl
insb
insl
sub
and
pop
sub
xlat
out
clc
shlb
push
add
or
sbbl
rorl
xlat
cmp
pop
js
ss
loope
xorb
pop
cwtl
pop
into
mov
lds
mov
outsl
in
mov
mov
or
lock
int
lods
xchg
pusha
pop
iret
rolb
fcomps
inc
xchg
xchg
sub
dec
nop
push
movsl
sbb
mov
push
inc
lods
jp
mov
mov
add
iret
popa
mov
and
inc
cmc
ret
dec
and
add
sub
movb
out
inc
loop
gs
rolb
nop
add
mov
or
inc
dec
sub
lcall
xlat
and
std
orb
push
nop
mov
lock
clc
dec
mov
sbb
add
call
adc
xchg
sti
fs
dec
jmp
pop
mov
fstps
xor
push
jae
pop
mov
pop
mov
push
push
xor
outsb
test
xor
jp
movsl
int
jne
or
dec
outsl
ud0
stos
and
ficompl
or
push
jp
mov
nop
insb
dec
cld
je
fimull
sub
xchg
xchg
cmp
sbb
and
cmp
mov
or
push
rol
iret
js
les
andl
mov
jns
pop
out
jae
mov
addr16
xchg
dec
in
cmp
aas
fistps
rolb
mov
movl
pop
push
or
rorl
sbb
fbld
out
mov
mov
ds
test
dec
popa
imul
fdivl
push
pop
sub
test
xchg
clc
jns
mov
adc
mov
jle
insb
xor
mov
or
test
sbb
xchg
cltd
in
sbb
mov
jo
out
loope
push
aas
pop
adc
mov
mov
cmp
faddl
mov
mov
push
int
push
lods
xor
xlat
mov
adc
out
jnp
into
push
aam
inc
jge
xor
jge
push
subb
pop
add
scas
adc
imul
xlat
ret
cmpsl
fiaddl
pop
pop
enter
sbbl
push
test
icebp
and
xchg
xor
lahf
pop
and
mov
pop
pop
pop
push
enter
inc
adc
jle
mov
xchg
lret
or
mov
hlt
pop
inc
scas
pusha
fimull
movsl
jge
int3
mov
cs
or
sub
lods
xchg
or
push
pop
lea
pop
ljmp
mov
scas
push
fmuls
loope
loop
divb
fcompp
mov
jl
bound
jae
and
inc
je
push
popf
or
add
mov
inc
fstps
mov
pop
jb
mov
fs
jecxz
adc
movsb
adc
mov
das
push
sub
or
fs
push
pop
xchg
or
pushf
les
push
pusha
sbb
idiv
mov
jge
pop
leave
sub
xor
cmpsb
mov
mov
pop
rcl
mov
or
and
sbb
xor
jns
inc
xchg
loopne
jp
lret
lahf
jge
push
sub
sub
inc
mov
inc
rcl
pop
add
ljmp
es
shll
fs
pushf
xor
in
ret
cltd
jae
mov
push
inc
pop
inc
aas
push
or
subb
sub
aas
out
outsl
push
sbb
jnp
xor
sub
outsl
xchg
aas
and
or
rcr
xchg
les
mov
je
mov
add
fistl
dec
cmp
out
into
aas
imul
cmc
mov
loop
lret
into
xchg
pushf
mov
repnz
cmp
popa
sbb
mov
popl
or
pop
data16
ret
icebp
mov
stos
mov
cltd
add
dec
lock
xchg
sbb
out
adc
iret
inc
testl
cmp
dec
insb
daa
xor
enter
and
mov
les
push
adc
imul
pop
xchg
mov
mov
fdivrl
xchg
in
inc
clc
pop
cmp
or
mov
imul
scas
push
and
mov
xor
mov
fsubs
inc
ret
mov
lret
sub
sahf
jns
arpl
fs
mov
inc
cmp
lods
clc
js
sbb
hlt
test
mov
fcompl
test
shrb
insb
cmp
pop
push
pop
lods
mov
mov
fninit
push
inc
outsl
mov
xchg
sub
cli
outsl
sub
mov
stos
push
leave
pusha
test
or
hlt
int
mov
fdiv
adc
sub
sbb
mov
cli
mov
sub
fbstp
lods
mov
or
in
nop
js
decb
sbb
scas
sbb
fimuls
loop
data16
mov
aad
jg
mov
and
mov
pop
out
or
push
pop
xchg
enter
mov
out
fildll
inc
dec
arpl
cltd
mov
mov
xor
add
or
lret
jecxz
dec
cmp
push
adc
loope
int
out
cmpsb
xor
loope
sub
je
enter
xor
mov
subl
insb
cmp
adc
add
jge
add
mov
iret
xorl
mov
jo
xor
lret
sti
out
stos
xor
hlt
cmp
ficoms
mov
jb
pop
jbe
xor
outsb
rcl
scas
pop
mov
cmpsb
mov
inc
adcb
inc
sub
adcl
popf
nop
and
out
pop
cmpsb
pop
adc
clc
xor
fstpl
and
jmp
xor
out
repnz
xchg
jge
std
or
icebp
mov
mov
push
nop
pop
into
daa
out
out
shll
fcomps
xchg
shrb
in
scas
dec
fadds
aaa
xchg
mov
cmp
shrb
xchg
cmpsl
pmaxsw
xor
jl
pop
fidivrl
pop
mov
jae
frstor
pop
inc
cmp
mov
adc
mov
in
pop
push
jmp
or
pop
movsl
inc
pop
adc
mov
mov
cmp
cmp
sar
insb
push
and
jo
sbb
mov
mov
jno
jle
sti
xorl
test
aas
sahf
stos
mov
in
gs
sbb
or
mov
or
lds
fmull
mov
adc
jb
into
jbe
ja
enter
and
mov
call
clc
sbb
fs
adc
sub
int
fst
out
inc
pop
or
add
inc
xchg
jmp
int
popa
pushf
push
push
cltd
aam
sub
inc
jno
dec
pop
fnstsw
sbb
mov
lcall
fldt
mov
lcall
cmovg
lret
stos
fs
dec
push
dec
stos
cmpsl
adc
ror
sub
lcall
inc
stos
rcll
jmp
scas
sarl
or
mov
mov
mov
in
inc
rcrb
fdivrs
movb
push
out
aaa
jb
dec
xchg
mov
jbe
push
ja
int
xchg
hlt
push
out
dec
les
fwait
lods
outsl
sbb
xchg
ljmp
lods
inc
outsb
or
jmp
jae
xchg
xchg
jno
insb
jmp
jecxz
dec
inc
mov
and
daa
sbb
fdivrl
fnsave
sbb
sub
mov
cs
repz
popa
rcrb
push
xchg
and
aad
or
push
std
stos
fisubrl
fwait
mov
lahf
shrb
je
test
adcl
out
in
push
cmp
xchg
or
addl
push
push
xor
fsubs
hlt
and
sti
in
adcl
aam
mov
inc
cmc
shl
push
mov
aam
sarl
mov
stos
into
idivl
sahf
int3
fdiv
ja
shlb
inc
arpl
cmp
push
in
popf
jp
sahf
int3
pop
aad
sbb
in
fmull
inc
clc
sbb
pop
lea
push
xchg
inc
inc
out
xor
cltd
repnz
rorl
loop
cli
dec
insb
xlat
mull
lock
std
jg
mov
sub
xorl
sbb
cmc
jle
cmp
fbld
push
pop
mov
aas
lods
pop
mov
clc
sub
nop
fidivrl
push
daa
cmp
xor
jae
sbb
xchg
int3
xor
cmc
ds
mov
int3
sar
pop
mov
dec
mov
mov
ljmp
popl
shll
shlb
arpl
fnstsw
int
stos
cmp
cmpsl
shll
lret
jo
mov
or
cmpsb
sub
mov
cmp
nop
xor
lods
pop
jo
imul
movsb
push
push
push
std
adc
scas
jp
fst
movsl
loope
mov
fisttps
repz
divb
xor
repnz
mov
mov
aaa
sub
push
cmp
xchg
shr
mov
mov
pop
test
lret
popf
mov
arpl
pop
jmp
push
sbb
cmp
cmp
dec
loopne
lahf
dec
imul
enter
and
mov
mov
imul
testb
mov
lret
shlb
mov
and
jne
jb
cli
out
and
js
pop
sub
icebp
bound
cmp
cmpsl
jp
inc
xchg
idivb
mov
mov
mov
dec
std
cs
mov
jno,pt
sbb
push
xor
jle
xlat
mov
test
push
dec
in
jmp
cmpsl
mov
imul
or
pop
add
and
mov
or
in
sti
testl
loop
addr16
add
xchg
out
jge
aaa
in
out
dec
mov
loope
lcall
enter
push
pushf
pop
mov
sub
data16
xchg
pop
push
pop
or
jb
aad
inc
out
pop
jl
pop
imull
les
dec
jno
imul
loope
cmp
outsb
jbe
pop
xlat
add
pop
repnz
mov
push
lea
cli
mov
ss
adc
mov
xorl
mov
out
push
xor
pop
gs
and
leave
jns
adc
push
daa
push
inc
out
dec
mov
fldenv
nop
xchg
jb
lock
cmp
sbb
cmp
jno
pop
push
ror
sub
andb
cmp
mov
xchg
fnstenv
mov
ret
mov
mov
dec
inc
test
std
ss
rolb
cwtl
mov
xchg
mov
mov
jmp
test
shll
mov
bswap
jge
loop
mov
mov
outsl
add
clc
repnz
rclb
xorb
in
add
and
dec
or
cmp
mov
mov
ret
in
or
mov
or
fbstp
ret
cmp
jp
cmpsl
stos
lret
in
mov
jnp
and
pop
testb
xlat
int3
mov
dec
aam
or
jg
test
sub
adc
das
mov
scas
js
dec
js
dec
or
push
sti
fidivl
sub
dec
xor
pop
jno
jne
jmp
arpl
push
cmpsl
adc
test
add
and
mov
push
sbb
mov
mov
clc
cltd
inc
int
sbb
pop
mov
movsb
inc
xchg
test
cmp
imul
jecxz
repnz
iret
cmp
mov
mov
lods
pushf
into
es
cmp
out
std
add
mov
aad
gs
imul
cmpsb
rclb
je
loopne
adc
inc
mov
sub
stos
and
leave
pusha
or
xor
sbb
sub
adc
and
rolb
out
pop
fsubl
adc
push
xor
fsubrs
aas
mov
mov
cmp
mov
sub
shl
pop
xchg
dec
scas
stos
insb
fdivrl
ret
mov
stos
jno,pn
and
shrl
sti
pop
out
xchg
mov
push
push
scas
pop
mov
xor
or
push
xor
pop
xor
ljmp
jne
mov
jns
or
ret
xchg
mov
js
cltd
push
das
or
inc
jge
lea
dec
rcrb
push
leave
pop
sahf
lock
sbb
cwtl
fdivl
inc
insl
rorl
int3
outsl
mov
inc
daa
int3
inc
push
clc
xor
test
std
shlb
adc
cmp
jle
add
adc
sub
adc
pop
imull
inc
sub
cmpsl
test
daa
sub
lret
inc
pusha
imul
dec
inc
test
pop
mov
cmp
das
cmp
mov
in
push
sbb
scas
mov
aad
add
insl
iret
frstor
push
test
aaa
negb
mov
push
sbb
push
es
push
js
mov
lds
mov
lahf
into
cmp
jne
movsl
lcall
cmp
inc
or
insb
loop
inc
movsl
out
iret
insb
pop
xchg
adc
or
mov
pop
lods
or
adc
add
std
xchg
fidivrl
stos
lock
jecxz
sub
filds
imul
cmpl
ret
mov
btr
call
popf
shl
or
jecxz
call
shlb
xlat
push
mov
adc
xchg
sub
jo
dec
adc
jle
sahf
mov
and
or
or
repz
push
adc
sub
loope
xchg
add
into
repz
lret
mov
loop
jl
mov
loopne
insb
mov
sub
pop
and
sub
loope
xor
repz
aam
call
sarl
add
add
pop
jge
rcll
fsubs
sti
outsl
push
negl
aad
pusha
jle
fs
mov
cmpsl
nop
inc
sub
xchg
inc
stc
mov
ret
adc
xor
mov
orb
hlt
ja
add
and
loopne
mul
pop
or
xchg
inc
pusha
pushf
imul
movsb
lods
ss
ret
scas
push
cmp
add
inc
iret
push
cmp
test
cpuid
arpl
cmovl
icebp
sub
rorb
rcrl
pop
ja
fisttps
dec
jl
scas
jle
cmp
jg
pop
std
add
ret
mov
call
jmp
out
add
sbb
repnz
cld
repnz
jns
shl
cmp
stc
adc
cs
pop
xchg
add
lods
sub
mov
repnz
pop
pop
std
mov
jmp
cmp
jg
xor
iret
sbbb
call
cmp
xchg
mov
das
divb
jg
je
jl
pop
mov
push
xchg
addr16
notl
ja
repz
out
sarl
add
xchg
jnp
stos
and
lock
xchg
jbe
aad
movsl
lahf
xor
xchg
int3
push
lahf
or
cmpsl
pusha
jl
mov
mov
aas
clc
pop
sbb
daa
pop
push
dec
ss
xlat
mov
mov
dec
add
sbb
adc
cwtl
jmp
les
js
loop
clc
idiv
sbb
loope
imul
push
fcmovbe
push
aaa
or
push
es
cs
jge
or
out
cmpsl
cs
sub
adc
dec
mov
and
mov
lock
cmpsb
add
inc
mov
imul
sti
arpl
push
sub
push
adc
inc
pop
lds
outsb
pusha
and
sar
aaa
outsl
cltd
shl
fiaddl
or
jbe
sti
sub
ja
push
vpaddsw
and
insb
lcall
pop
iret
pop
hlt
sub
int3
stc
dec
mov
jno
add
xchg
rcrl
jo
push
sbb
push
loop
daa
dec
pop
xlat
mov
mov
push
xlat
sbb
stc
add
pop
and
push
mov
rcrb
inc
mov
data16
mov
ror
inc
mov
push
cmp
xor
jo
mov
push
xchg
xchg
xchg
fisubl
sarl
add
hlt
insb
aad
out
test
mov
aaa
repz
pop
dec
xchg
arpl
and
adc
add
test
ret
sar
sbb
pop
pop
add
fst
fstps
sbb
adcl
cs
xor
jne
fldcw
pop
or
mov
call
sbb
pop
pushf
movsb
ljmp
pop
xor
sbb
sti
int3
add
iret
nop
inc
sbb
call
movsb
dec
das
fs
or
jge
dec
in
jnp
std
push
sub
nop
pop
arpl
xchg
jmp
sahf
pop
mov
mov
xlat
loopne
jmp
xchg
cmp
mov
inc
mov
notl
test
and
jmp
shll
int
cmp
ficoms
cld
jle
rclb
xchg
ja
js
bound
push
mov
xor
mov
sbb
imul
fisubl
jnp
or
cmp
enter
xchg
loopne
mov
xchg
jbe
xlat
aam
out
mov
cli
inc
push
sub
adc
push
lret
mov
out
clc
sbb
aaa
pop
shlb
pop
test
mov
mov
push
xlat
sbb
movsb
je
mov
xchg
test
inc
loopne
lods
popa
mov
cmp
lret
nop
test
adc
icebp
in
repz
dec
inc
xor
inc
mov
jmp
xchg
pop
xor
push
mov
movsl
repnz
loopne
xor
mov
push
mov
dec
fnstsw
adc
or
xchg
jl
enter
mov
mov
mov
push
lock
fwait
hlt
int3
inc
repnz
es
mov
push
or
jecxz
subb
add
repz
adc
aam
mov
das
xor
and
imul
add
sub
pop
xlat
push
jmp
xchg
pushw
outsb
sub
and
ss
and
pop
jg
jp
inc
je
sahf
iret
adc
or
ret
xor
aaa
mov
lea
xor
mov
movsl
insb
in
dec
je
jle
xchg
lea
push
movsb
test
cmp
add
push
cmc
arpl
in
fs
gs
cmp
cltd
stos
or
jge
xchg
mov
mov
lods
mov
xchg
ficomps
loop
cmp
push
daa
xlat
ret
or
inc
mov
mov
js
add
es
clc
xor
movsl
xchg
bound
push
jne
jecxz
ret
and
hlt
cmpsl
and
xchg
fs
mov
jp
sbb
and
cmpsb
fildl
dec
dec
push
cld
jne
pop
sub
loope
outsl
imul
stos
pop
mov
cmp
pop
sbb
out
fisttps
repnz
xchg
adc
iret
hlt
adc
xchg
enter
je
add
lea
repnz
ja
cli
push
push
lds
push
mov
xchg
mov
dec
fbstp
xchg
data16
subb
jge
mov
and
pusha
sub
or
jb
jae
pop
enter
sahf
or
jp
dec
push
sbb
inc
xchg
lods
push
mov
and
pop
ficoms
test
aad
xchg
mov
aam
push
dec
cmovo
jnp
lods
mov
stos
xchg
mov
cli
lahf
add
push
test
rorl
repnz
lock
xchg
add
subb
lock
add
cs
pop
nop
in
nop
jnp
and
les
sti
out
push
cli
mov
sub
add
jnp
add
stc
adc
int
or
mov
repz
adc
or
mov
cmc
pop
aaa
cmpsb
lods
out
orps
sarl
jae
mov
nop
cmp
call
enter
pop
xor
lds
sub
jb
js
mov
stos
mov
and
cmpl
lods
cmp
inc
cmp
subb
mov
ss
cli
sbb
data16
add
dec
xchg
js
test
aaa
imul
inc
sbb
mov
push
cmp
mov
rcrl
scas
mov
outsb
xor
pushf
scas
sub
push
sbb
push
sbb
jnp
rcr
push
loopne
fbstp
lods
mov
or
mov
enter
cmp
pop
notb
aas
cmp
mov
fwait
ja
lret
jl
sarb
test
dec
mov
std
mov
or
pop
jle
data16
lods
push
cmc
das
in
pop
mov
ja
inc
std
sti
mov
xchg
mov
xor
fisubl
stos
loope
stos
jnp
sti
fdivrs
cmp
cwtl
mov
jbe
js
xor
push
and
scas
xchg
jle
aas
jne
out
enter
cmp
and
mov
es
jno
into
mov
xchg
je
test
mov
leave
js
loop
or
and
or
inc
cmp
cmp
sbb
adc
movsb
loope
sbb
je
adc
incb
test
stc
xor
lcall
push
adc
cmp
sbb
mov
imul
js
enter
sbb
adc
rcll
cmp
push
mov
mov
mov
fsubp
xchg
mov
stc
out
push
stos
or
ljmp
in
ljmp
outsl
mov
jg
movsb
adc
cmpsb
xor
dec
nop
call
mov
daa
jge
and
xchg
mov
inc
jmp
fbstp
push
pushf
repz
pop
rclb
xchg
push
xor
pop
enter
mov
stc
popf
pop
ss
sub
icebp
cli
mov
xor
roll
xor
mov
call
mov
mov
pop
xor
cmpb
or
sub
data16
cmp
xchg
xor
test
sub
aas
sub
loop
int
icebp
and
mov
push
sarb
mov
js
mov
and
xchg
pop
outsb
and
xchg
pop
ret
push
mov
and
sti
lds
cmpsl
hlt
clc
es
faddl
test
push
lods
xchg
mov
mov
sub
cli
inc
std
sub
cmp
cld
lock
jb
mov
stos
and
mov
dec
pop
pushf
mov
xchg
test
jbe
sbb
lret
cmp
repnz
pop
loopne
js
sub
push
xchg
ret
gs
repz
imull
outsb
push
in
push
cs
jno
xchg
push
notb
push
out
xor
inc
mov
sub
mov
ja
inc
shrb
repnz
ss
nop
fisttps
sbb
jo
push
cmp
cmp
mov
add
lea
sub
xchg
dec
cltd
out
and
xchg
mov
dec
nop
xor
cmp
out
pop
adc
fdivl
fisttpl
push
dec
cmpsb
mov
dec
xlat
pop
sbb
movsl
cld
xchg
les
mov
outsb
out
pop
lahf
push
mull
daa
movsb
je
and
sti
push
xor
outsl
outsb
int3
cltd
push
cmc
lods
aaa
jbe
cld
cmpsl
ljmp
imul
cmpsl
cmp
cmp
sbb
lret
sbb
xor
je
jp
mov
mov
outsb
testb
inc
je
dec
xor
adc
dec
mov
int3
fstp
push
adc
xchg
addr16
mov
incb
repz
add
mov
sub
pop
mov
gs
push
xor
arpl
cmp
mov
inc
es
mov
jb
xor
jns
adc
imul
in
mov
cmp
add
movsb
push
in
rcll
jb
insl
sub
mov
pop
enter
and
aas
push
addl
test
and
add
mov
ja
popf
hlt
into
xchg
push
les
push
push
pop
sbb
adc
pop
add
es
mov
test
xor
and
pop
pushf
cli
cmpsl
or
aaa
dec
daa
mov
or
es
push
mov
pop
stos
jge
stos
test
or
mov
stc
xlat
inc
popa
lods
insb
dec
mov
cmp
xchg
mov
inc
enter
xor
pop
scas
mov
out
xchg
or
inc
or
into
xor
jnp
xchg
mov
pshufw
or
mov
push
lds
push
icebp
int3
test
stos
jns
or
roll
aad
sahf
jmp
fcompl
mov
adc
mov
mov
stc
push
mov
jno
mov
mov
mov
jnp
mov
pop
aas
mov
loope
xor
mov
mov
mov
push
and
lret
sub
call
mov
repnz
fs
dec
divb
sub
xchg
icebp
fisubs
popf
add
mov
adc
adc
push
shlb
sti
outsb
daa
jp
ret
jae
dec
add
aas
pushf
mov
xchg
jle
jmp
sub
pop
es
dec
test
dec
loopne
jl
outsb
xor
xor
inc
xor
inc
iret
test
nop
push
data16
in
push
xchg
bnd
pop
or
mov
icebp
mov
mov
or
lret
ret
in
arpl
mov
adc
and
sbb
mov
fistpl
pop
movb
add
pop
leave
dec
fidivs
adc
in
bound
mov
inc
lds
mov
add
add
cli
in
pop
pop
push
test
push
adc
ljmp
push
out
cmp
xchg
sbb
fs
mov
stc
out
repz
lret
and
jno
pusha
xchg
adc
adc
pop
or
dec
cmc
and
inc
cwtl
out
dec
ret
and
nop
and
sbbb
xchg
dec
jmp
cmp
and
adc
mov
in
fs
mov
ds
cmp
idivl
push
cmpsl
iret
leave
clc
pop
mov
iret
sub
or
insb
aas
dec
mov
xor
mov
dec
aas
push
mov
aas
sahf
sbb
or
sbb
out
mov
xchg
sbb
in
adc
hlt
pop
jo
ljmp
push
cmpsl
xorb
push
pop
cmpsl
out
adc
int
xlat
test
inc
mov
mov
adc
adc
inc
sbb
cmpsb
mov
pop
pop
cmp
in
and
bound
js
out
cmp
xchg
clc
lcall
pop
jbe
sub
or
xchg
fbld
cltd
mov
pop
pop
ffreep
pop
xor
test
sarb
out
xor
mov
out
sarb
sbb
push
enter
stos
mov
cmp
sbbb
sub
gs
jae
popa
cli
clc
dec
xchg
adc
flds
mov
ds
out
fadds
jbe
leave
lret
mov
jnp
test
push
nop
mov
frndint
int3
sbbl
sahf
cmp
dec
int
out
or
scas
aad
sbb
loopne
xor
mov
bnd
in
fsubrs
mov
aaa
rcrl
bnd
adc
int3
pop
repz
mov
sbb
mov
fsts
xor
pop
enter
fidivrl
inc
mov
jbe
fs
rorb
cmp
push
out
dec
pop
popa
test
mov
mov
cld
pop
arpl
dec
xchg
enter
add
in
push
jno
imul
into
xor
inc
loop
fwait
cmpsl
popf
scas
and
push
push
inc
cmp
in
adcb
in
aas
jns
adc
bnd
jg
inc
icebp
orps
mov
adc
pop
iret
out
aaa
xchg
mov
push
scas
add
cwtl
inc
push
es
ret
sbb
inc
xchg
stc
xor
jnp
int
mov
lds
lods
and
inc
clc
je
cmp
fcmovbe
daa
inc
sbb
xchg
ss
jp
dec
cwtl
fidivl
decl
lret
xchg
loopne,pn
push
leave
test
ret
cmp
data16
mov
xchg
lods
xchg
popa
enter
dec
mov
rorl
out
int
xor
adc
pop
fnstcw
mov
out
repnz
jnp
rcrl
mov
xchg
loope
inc
cmc
aas
fsubs
sbb
stos
inc
pushf
sbb
test
xor
in
sbb
fnstcw
in
xchg
push
stc
outsb
sbbb
clc
aas
add
rorb
jmp
imul
ds
imul
gs
pop
jo
add
addb
pop
pushf
fwait
adc
pop
inc
leave
jecxz
push
xchg
pop
add
jle
call
bswap
jbe
push
fwait
add
push
addr16
js
xchg
or
push
scas
cld
add
add
rcrb
pop
mov
out
push
mov
repz
mov
dec
cmpsl
xchg
aaa
test
mov
fcmove
mov
clc
jo
mov
insl
sub
faddl
lret
pop
mov
jmp
pop
aas
mov
mov
lahf
pop
pop
test
outsl
mov
fidivs
inc
add
movb
jno
or
adc
out
jge
lods
les
in
pop
inc
pusha
loopne
or
rorb
lahf
xchg
cwtl
lds
int
pushf
leave
into
mov
fsub
add
add
test
jae
push
dec
sbb
loop
loopne
inc
scas
in
xor
ja
sahf
out
push
mov
adc
jecxz
pop
out
inc
adc
test
xor
stos
add
or
ljmp
mov
aad
jbe
dec
lahf
insb
mull
mov
ja
mov
push
sbb
add
cmc
int3
rcrb
hlt
inc
jle
add
popa
leave
xor
mov
push
push
clc
add
and
shrb
addr16
add
xor
cmp
and
push
cmp
and
adc
add
pop
mov
lahf
mov
bound
shrl
stos
sahf
sub
dec
sarl
xor
jl,pn
xor
sub
in
or
jmp
xor
jo
faddl
or
dec
sbb
insl
jns
jnp
ljmp
stc
das
mov
jp
stos
fs
push
cmp
push
push
ja
in
adc
fsts
fldl
sti
inc
addl
push
mov
mov
and
test
repz
fstp
cmp
ds
outsl
cmp
xlat
mov
fsub
aaa
pop
mov
jns
icebp
lahf
and
jno
das
cmpsb
xor
push
jne
stos
incb
lea
or
sub
loop
imulb
out
pop
sbb
je
push
jmp
ss
add
mov
addl
ds
mov
pushf
icebp
sub
pop
jle
je
cli
xchg
inc
xchg
shl
leave
sbb
push
rolb
js
ret
cs
inc
sbb
stos
cmp
lock
sub
loop
jl
or
lea
fistpl
pusha
pop
insl
jbe
out
adc
decb
mov
jnp
movsl
mov
mov
fwait
or
pop
cs
jle,pt
xor
imul
arpl
add
jp
mov
mov
fldcw
lahf
jmp
and
push
mov
add
out
out
pop
into
nop
lahf
repnz
sub
gs
jmp
xchg
xorl
stos
inc
pop
push
inc
pop
mov
sti
xchg
in
mov
in
add
aad
sbb
movsb
dec
mov
lahf
fisttps
pop
insl
sahf
mov
loop
push
fxtract
int
icebp
sbb
or
xchg
cmpsl
or
jae
xchg
sbb
jg
jmp
fstpl
adc
in
pusha
cmpsl
push
mov
xchg
hlt
out
scas
or
std
lret
arpl
mov
pop
pop
add
cmpsl
dec
leave
out
sub
lods
sbb
lods
pop
cmp
fcoml
mov
pushl
lods
push
push
push
movsl
pusha
std
mov
test
loopne
in
lods
test
jnp
lahf
mov
mov
loope
scas
cmp
jae
lcall
int3
test
jnp
dec
pop
out
jo
and
data16
notb
lea
mov
sbb
jae
in
sbb
mov
scas
xchg
lods
inc
mov
shll
dec
ja
xchg
lret
insb
xchg
daa
sub
mov
dec
and
jae
cmpsb
cmc
xor
push
mov
cmp
fneni(8087
int3
out
mov
lods
xchg
leave
into
push
sbb
je,pt
pop
mov
add
ret
sbb
jb
lods
xor
or
out
sbb
cs
mov
jo
or
idiv
cmp
mov
dec
test
adcb
sbb
add
inc
cmp
ljmp
add
xor
inc
push
sub
daa
leave
mov
push
jnp
cmc
pop
push
adc
push
fstl
test
xchg
mov
xor
nop
adc
outsb
jl
orl
sti
inc
pop
push
mov
pop
insb
into
adc
adc
mov
nop
xchg
test
mov
jb
lock
loopne
xchg
add
call
pop
cld
fsts
jnp
rolb
ljmp
jbe
lahf
xorl
sub
jo
sub
ret
mov
fsubr
in
hlt
or
xchg
rorl
fisubrs
jne
ds
sbb
lcall
movsl
or
sub
add
in
stos
push
push
push
push
popf
xchg
cmp
add
mov
orb
push
sahf
adc
addr16
dec
imul
aam
sbb
add
add
mul
sub
push
xchg
add
scas
sbb
sbb
movsl
xor
hlt
sbb
jp
adc
mov
xlat
add
mov
outsl
es
int3
test
mov
mov
rcl
subl
inc
loop
in
stc
sahf
mov
mov
arpl
mov
push
cld
jns
sub
xchg
and
cltd
imul
cwtl
mov
adc
ret
in
lahf
jg
ds
es
jns
enter
mov
cmpsb
fmul
rcrb
fs
mov
movsb
adcb
mov
ja,pt
ret
movsb
cmp
push
adc
pop
inc
jl
xchg
inc
dec
adc
jns
shl
mov
icebp
mov
out
jnp
sub
push
pushf
cmc
cmp
push
mov
outsb
pop
dec
push
clc
fmull
xchg
pop
addr16
sti
xor
cmp
out
push
ret
aas
pop
pop
push
stos
fdivs
cmp
inc
lds
fs
mov
sarl
or
daa
mov
pushf
icebp
pusha
cmp
ror
jo
cmp
jle
out
rcrl
shr
fwait
xchg
jecxz
pop
mov
pop
test
in
insb
jne
push
push
mov
ror
outsl
loopne
cmp
dec
push
dec
daa
inc
mov
adcb
sarl
dec
faddl
jl
jo
xchg
adc
mov
jne
mov
sbb
sbb
pushf
cmp
push
dec
lock
in
jl
dec
jl
mov
hlt
xchg
dec
test
adc
inc
sarl
rcrb
iret
jno
push
jns
push
push
stos
add
daa
push
adcb
dec
pop
push
int
mov
xchg
or
add
sbb
push
lock
xor
adc
add
xchg
inc
or
sbb
jbe
test
mov
insb
shl
sbb
lods
popf
mov
inc
lcall
sbb
sbb
sahf
dec
xchg
fs
pop
test
jmp
mov
inc
push
sub
ret
hlt
xchg
imul
inc
icebp
je
inc
fisttpl
dec
mov
ljmp
xor
js
aam
cmpsb
shl
dec
cmpb
jp
scas
lret
and
stos
arpl
shl
pop
imul
dec
sub
shrl
std
clc
sti
jbe
inc
mov
xor
insl
ds
pushf
repnz
leave
push
ret
jecxz
fwait
and
pushl
in
push
dec
adcl
jmp
cmp
dec
outsl
mov
cmp
push
in
bound
sbb
cld
jbe
pop
ficomps
ret
jp
fildl
or
push
lahf
adc
mov
jno
jecxz
rcr
adc
mov
jno
gs
clc
and
cmp
mov
or
aad
jno
pop
mov
testl
xchg
cmp
sub
xlat
and
push
aam
sub
ljmp
rorl
jb
sub
popa
adc
test
mov
and
lods
ljmp
lret
fs
test
dec
fidivs
imul
and
gs
xchg
and
js
add
push
inc
adc
pop
pop
stos
and
pop
repnz
cld
jb
and
jmp
out
addr16
sarb
dec
mov
sub
add
je
push
imul
and
add
out
mov
loope
or
mov
push
pop
loope
pop
mov
mov
cmp
sub
jns
xor
movsl
sub
cwtl
pop
mov
push
cmova
gs
or
incl
fwait
mov
add
in
mov
cs
jnp
fdivrl
fbld
inc
scas
pop
xor
out
fidivrl
cmp
dec
sbb
insb
jge
ja
xor
stc
push
repz
dec
lret
mov
pop
movsb
fisubs
les
cmp
jmp
stc
data16
mov
fdivp
push
fwait
out
jg
jb
movsb
leave
stos
aas
out
push
or
aad
xchg
lock
cmp
mov
pop
add
and
jecxz
push
out
jp
sbb
jp
ffreep
stos
xchg
shlb
mov
fcmovne
sbb
leave
sbb
xor
insb
mov
jmp
sub
int3
aad
repz
aaa
pop
mov
cltd
scas
sbb
fistpl
popa
aam
xor
and
dec
sub
xor
mov
mov
sub
ds
pop
call
imul
pop
testb
mov
mov
les
jnp
jae
out
sbb
cmp
lods
out
pop
adc
add
cmp
addl
or
pop
lds
insl
inc
push
sbb
and
test
and
xor
dec
sbb
out
mov
xor
imul
cltd
sub
push
or
dec
in
leave
and
cmp
xchg
pop
cmp
cmp
insb
xor
push
add
popa
dec
out
out
aad
push
je
insb
and
cmp
and
jge
sub
dec
mov
xchg
mov
pop
xorb
sbb
pop
mov
mov
jecxz
aad
movsl
ficompl
xor
or
mov
pop
xchg
insl
inc
pop
test
out
lret
pop
xor
out
mov
mov
mov
fidivl
and
shrb
lahf
loope
out
sbb
mov
sbb
outsb
xchg
add
test
inc
xor
cmp
es
out
mov
ret
xchg
test
and
dec
int
mov
cmova
out
negl
fcompl
stc
mov
mov
and
push
pop
inc
and
rorb
outsb
int
sub
lds
inc
mov
lahf
fstpt
es
stos
pop
pop
daa
aam
jmp
pop
xchg
inc
into
int
mov
mov
pop
or
aam
or
mov
scas
dec
mov
cmp
inc
mov
mov
aam
dec
imul
idivl
insl
ret
stos
mov
ret
int3
xchg
xlat
dec
shl
in
sahf
movsb
dec
sbb
test
xchg
pop
in
mov
cmp
js
dec
pop
iret
adc
sti
inc
push
pop
push
xchg
cmp
lock
push
aad
inc
xor
lahf
cmc
popf
xor
inc
mov
test
pop
adc
cs
pusha
mov
add
xor
cmp
loopne
pop
sar
gs
or
pop
xchg
add
fucomi
out
ja
mov
or
adc
lahf
jns
rcr
mov
xchg
dec
inc
in
adc
nop
ds
xchg
dec
jle
mov
bound
dec
pop
push
adc
push
es
pop
mov
sub
adc
nop
mov
clc
push
aas
add
sbb
stos
les
inc
mov
add
jno
cmp
mov
rol
mov
or
mov
pop
clc
shrb
dec
jg
imul
in
pop
aas
pop
xchg
inc
push
dec
sbb
imul
push
mov
test
cli
ljmp
addr16
pop
mov
jbe
inc
aam
adc
cmp
sbb
mov
call
mov
cld
pop
fwait
jns
adc
lar
ret
xorb
or
or
pop
or
outsb
sahf
test
sub
imul
int3
inc
mov
mov
sub
dec
xor
xchg
shrb
push
push
inc
dec
push
mov
or
imul
pop
jge
or
or
and
and
jo
jge
repz
add
xor
cli
popf
mov
add
and
dec
mov
pop
add
ss
push
cmp
out
pop
sub
add
scas
pop
xchg
mov
pop
adc
test
inc
mov
cli
stc
stos
xor
inc
cmpsl
add
mov
dec
out
or
ret
hlt
pop
ds
xor
mov
dec
xchg
ljmp
sub
lea
push
fdivp
mov
sbb
xchg
scas
and
pop
pop
push
mov
push
lret
dec
fisttpl
jae
cmc
xor
mov
rcrb
clc
test
push
pop
mov
xor
mov
aad
add
lret
sti
in
jne
add
inc
insb
test
mov
ss
pop
or
or
lcall
mov
fstpt
arpl
popa
fnsave
add
push
jmp
mov
lods
cmp
mov
movsl
adc
aas
xor
or
mov
xchg
aam
ret
fcomip
bound
dec
lock
mov
pop
test
xchg
xchg
adcb
pop
push
fldl
adc
adc
and
push
xchg
push
mov
sub
cmp
pop
push
dec
mov
test
out
cmpsl
ds
sbb
sbbb
int
xchg
pop
test
xchg
pusha
loope
outsb
insl
add
sub
add
pushf
cmp
dec
mov
mov
adc
xchg
xchg
sbb
fiadds
or
jg
inc
mov
or
pop
push
sahf
movsb
jmp
xchg
push
bound
adc
jo
add
or
pop
dec
push
std
or
mov
out
pop
lahf
push
adc
xchg
jp
or
insl
cmp
xchg
popf
inc
xchg
cmp
xchg
mov
push
jecxz
repz
lds
fbld
push
jp
out
popa
add
xchg
xor
fsub
fistps
lock
popa
gs
xchg
mov
xchg
cmp
inc
add
mov
aas
mov
shlb
loopne
jo
dec
shl
repnz
icebp
xor
xchg
ficoms
fiadds
xchg
int
xchg
jae
lea
dec
push
mov
dec
int
ljmp
cmp
jmp
sbbl
push
cmpsb
mov
mov
inc
sbb
hlt
cltd
dec
inc
leave
adc
inc
sub
add
cmp
shlb
mov
jno
cltd
jg
cmp
adc
cld
sbbb
and
in
fwait
pushf
sbb
lods
mov
dec
adcl
int
incb
bound
or
rcrl
scas
mov
movsb
test
or
sti
fnstsw
mov
push
inc
xchg
aas
jnp
dec
addr16
mov
cltd
mov
sub
add
mov
or
cmc
incb
dec
jo
or
fdivs
les
loope
pop
xor
jno
pop
ds
sub
aaa
push
jo
testb
inc
ss
in
cmp
push
xchg
aad
xchg
pop
shr
js
jecxz
repnz
shrl
push
and
dec
xor
pusha
pusha
mov
adc
mov
insl
xlat
lahf
push
test
cmp
mov
repz
and
data16
jb
out
mov
repz
cmp
cmpsb
xor
mov
xchg
mov
test
lock
mov
and
popa
pop
cmp
jns
dec
pop
jg
xor
cmp
mov
mov
mov
xor
mov
out
or
loopne
test
jbe
iret
pop
das
movsl
outsb
std
mov
pop
xor
lods
dec
lods
sarb
sub
js
sbbl
fnstsw
and
int
pushf
sbb
lret
dec
mov
sbbb
inc
sbb
inc
mov
sub
imul
in
dec
push
pop
test
xor
lods
mov
outsl
add
xchg
jno
imul
imul
fisttpll
cmpsb
outsl
mov
pop
loop
inc
pop
std
add
jo
ret
ret
lock
xchg
push
rorl
icebp
int3
inc
jno
jo
push
int
jns
icebp
cwtl
test
dec
int3
mov
push
jmp
std
cmp
aaa
out
nop
loopne
outsl
in
mov
dec
fisubrl
arpl
adc
call
mov
xor
xor
jno
cld
jmp
movsl
insl
fldt
inc
es
out
xchg
test
fnstcw
adc
jb
sarb
out
cmp
in
push
or
dec
cmp
out
fistl
negl
mov
clc
jo
jg
adc
mov
cmpsl
xchg
push
push
notb
ret
dec
cwtl
sbb
mov
in
mov
xchg
cmp
inc
pop
inc
dec
andb
pop
add
add
mov
xor
push
out
test
scas
push
cld
jo
aaa
enter
adc
clc
pop
jecxz
mull
iret
mov
mov
cli
pop
pop
pop
data16
int
dec
adc
xor
xchg
les
xor
lock
add
jp
mov
int
and
push
fnstsw
cmp
out
xorl
mov
repz
xchg
and
mov
es
stc
and
cmp
stos
pop
jno
lcall
addr16
cmpb
push
xchg
adc
mov
and
mov
or
add
into
pop
cmpb
adc
dec
imul
into
adc
jp
out
clc
jecxz
rorl
fildl
mov
addr16
jge
insl
jl
cli
scas
ret
int3
jb
pop
cltd
pop
xchg
out
out
fwait
insl
in
mov
dec
xchg
mov
sbb
rcrb
insb
fldcw
fdivr
outsb
sbb
aad
jne
jnp
nopl
cli
cs
je
mov
cmp
dec
fcmove
loopne
inc
inc
cs
ss
push
stos
xor
ds
and
dec
push
push
xchg
rcll
in
arpl
std
movsb
or
inc
jae
test
nop
sbb
and
pusha
mov
dec
inc
mov
pop
test
fldt
lods
sub
push
push
and
sbb
out
lock
repz
out
xchg
jmp
xchg
mov
push
dec
pop
mov
es
push
inc
jo,pn
mov
dec
stc
push
call
shll
rol
jno
imul
out
xchg
movsb
push
sbb
in
lock
fadds
cld
adc
loope
dec
push
in
and
adc
imul
sub
sbb
in
mov
add
xchg
lds
mov
adc
push
xchg
mov
addr16
add
bound
pop
frstor
fdiv
fldt
lret
rorb
sbb
shr
in
aas
xor
or
mov
dec
mov
repz
cmp
inc
jp
adc
pop
push
outsb
repz
les
daa
jp
ret
jo
aad
daa
sbb
sub
int3
fists
loop
or
dec
fucomip
add
add
jp
sbb
sub
mov
fsubr
insb
fcmove
cmova
stos
movsl
pop
xchg
out
pop
dec
psubsb
cltd
out
in
daa
push
push
lds
sub
mov
sbb
out
aaa
cmp
push
cmp
insl
or
out
fnsave
xlat
lret
mov
ret
mov
lahf
cmp
fstps
fwait
ret
xor
sub
lcall
or
push
or
pop
inc
mov
push
lods
arpl
jo
mov
out
loope
gs
mov
xchg
stos
dec
jmp
fidivs
mov
addl
in
push
jns
sahf
add
fists
lcall
and
dec
mov
push
aam
cmpsb
fsts
push
cmpl
dec
lds
pop
dec
pop
dec
fistpl
scas
gs
fidivrs
es
pop
push
jns
pop
repz
ljmp
pop
jns
push
jmp
mov
test
shll
cltd
mov
out
mov
fildll
enter
sbb
sti
jecxz
cli
sub
jmp
mov
xor
jecxz
fdecstp
pop
inc
push
push
bound
lods
es
mov
adc
clc
insb
fistpl
enter
lea
sbb
outsb
dec
scas
xchg
jp
xorb
sub
jg
sti
jg
lret
iret
jbe
mov
jno
add
mov
push
jne
cmp
sub
adcb
inc
test
pusha
or
les
sub
push
jnp
pop
out
mov
insb
in
mov
into
push
sbb
lods
xor
mov
pop
push
fdivs
lods
inc
mov
repz
push
xor
mov
cmpsb
aam
xchg
mov
leave
push
icebp
call
test
fs
jae
sbb
pop
dec
sub
iretw
and
dec
daa
pop
cmpsl
loope
addr16
dec
cltd
xchg
push
push
adc
inc
mov
dec
hlt
bound
scas
rcll
mov
jns
int
fbstp
cmp
jns
sti
icebp
cmp
and
sti
jbe
cmc
xchg
pop
push
lahf
lock
decb
pusha
mov
sahf
fisttps
loope
mov
je
outsb
add
popa
pop
repnz
push
jge
fsts
cmp
jne
sub
mov
pop
fstpl
in
rclb
es
jp
jle
cmpsl
mov
mov
xchg
jo
xor
loop
and
dec
jo
push
adc
sbbl
sub
cwtl
mov
outsb
int
xor
aam
xchg
outsb
pop
test
lcall
sbb
dec
pop
cltd
aaa
pop
out
xchg
or
push
fs
decb
cmp
sub
lcall
gs
adc
sarb
insb
cbtw
sbb
lods
jbe
pop
mov
insl
out
loope
xchg
aas
jae
les
out
inc
fstpt
fwait
sbb
dec
push
repz
out
cmpl
cs
jae
jbe
lret
pushl
mov
mov
mov
sbb
ud1
sbb
in
add
cld
mov
lods
ret
cmp
fisubs
pop
cmp
cmp
or
icebp
add
lods
xchg
jbe
add
lcall
jp
vmaxss
dec
rcll
dec
ljmp
jbe
adc
push
stos
mov
lahf
scas
dec
pop
sar
jle
and
jmp
push
aaa
loopne
out
adcb
in
sub
jle
mov
jg
mov
mov
testb
mov
je
mov
lods
ret
push
push
aad
add
js
jne
int
ljmp
push
int
mov
cmp
xchg
push
notb
fadd
int3
out
xchg
aaa
dec
mov
stc
cmp
mov
fisubl
cmp
lea
in
insl
aad
fs
or
aas
xchg
lds
push
enter
push
xchg
jecxz
xlat
xchg
testl
nop
and
mov
or
adc
loop
cmp
loop
or
cmp
mulb
imulb
cmp
movsb
mov
pop
mov
dec
clc
outsl
xor
xor
mov
es
lret
aam
data16
adc
ror
loopne
int3
cmpb
notb
ljmp
sarb
xor
cmp
scas
adc
addr16
fldl
inc
test
and
pop
or
pusha
out
xor
data16
ja
out
cmc
shll
clc
dec
nop
cmp
loopne
out
imul
xor
push
scas
or
or
mov
testl
loop
cs
sbb
insb
dec
dec
lds
mov
push
inc
in
push
inc
cmp
or
iret
and
mov
xchg
pavgb
mov
cmp
cltd
repnz
inc
jl
sbb
cwtl
push
xor
popf
arpl
int
xor
xchg
inc
pusha
stc
cli
push
dec
jbe
pop
vmovntdq
mov
push
or
xchg
sbb
mov
aas
pop
mov
push
pusha
push
or
sub
xchg
jmp
iret
and
add
push
daa
cwtl
ret
ss
jns
cld
adc
sbb
stc
sahf
scas
arpl
cltd
notb
ret
and
ss
into
in
out
jg
xorl
popf
jb
rcll
push
and
daa
pop
cli
push
popf
fcmovnb
testl
lock
out
fists
insl
mov
or
push
cmp
cmpb
stc
sbb
add
pushf
out
add
ror
sbb
shlb
mov
jbe
xchg
dec
test
push
xor
decb
fidivs
es
xlat
sti
mov
sbb
mov
arpl
cmc
adc
es
cld
cmp
jns
mov
push
out
lcall
loop
or
pop
nop
sbb
ss
and
cmc
pop
xor
test
imul
mov
adc
fstpl
fs
jno
dec
pop
push
ret
mov
push
adc
loop
addr16
mov
loop
aas
mov
jmp
inc
cmpsl
aad
add
cmp
insl
iret
adc
mov
shll
in
arpl
gs
mov
xchg
sti
and
inc
out
daa
orl
inc
inc
cmpb
les
aas
bnd
leave
xchg
mov
mov
iret
in
mov
ret
lods
ja
inc
sti
cmp
mov
push
lods
in
dec
movsb
jno
and
push
mov
push
idivb
ss
sub
js
aas
jmp
repnz
addr16
mov
sbb
or
pop
and
outsl
mov
arpl
jb
cmp
jg
fdivrs
iret
es
xor
sub
xchg
or
inc
enter
outsb
adc
sub
xorl
aaa
in
cmp
pop
insl
mov
pop
jl
add
or
xchg
pop
mov
mov
push
dec
push
mov
add
xor
popf
out
xchg
rep
and
xchg
stos
dec
sub
or
insl
mov
sbb
das
xchg
into
clc
and
pushf
push
lret
lahf
jp
pop
movsb
repz
scas
xor
pop
adc
push
repnz
pop
and
mov
loop
insl
cld
xchg
mov
outsl
movsl
in
push
cli
pop
pop
pusha
aaa
adc
sahf
push
mov
mov
repz
cmp
stc
mov
subl
lods
push
or
fcompl
pop
sbb
sbb
cltd
scas
nop
sahf
in
outsb
inc
iret
cmp
push
pop
enter
add
out
repz
jns
adc
std
push
rorl
mov
imul
rcll
gs
cltd
nop
imul
out
cmp
xchg
popf
mov
clc
push
lock
enter
or
xor
xlat
test
dec
cmpsb
popf
aaa
mov
jmp
insl
outsb
popa
jbe
add
ror
js
inc
push
push
mov
lret
testb
mov
pop
xchg
dec
xchg
rorl
fildll
insl
aas
mov
xchg
rcll
int
sub
sarb
mov
mov
mov
loopne
je
les
movl
roll
ss
xchg
aas
nop
fldcw
push
pop
faddp
and
je
lock
test
in
sbb
xchg
push
cli
in
jae
imul
xor
adc
sbb
xchg
and
aaa
jp
or
sub
sub
inc
mov
loop
sti
in
mov
mov
sub
pop
mov
xchg
enter
sti
aas
mov
in
insl
sbb
or
loope
imul
sarb
sbb
loop
mov
popa
stos
stos
out
and
imul
cmp
mov
loop
mov
jge
in
sub
daa
out
ljmp
push
int
dec
stc
loopne
decb
sti
xchg
out
insl
cmp
mov
jo
sbb
mov
fldt
mov
fwait
dec
pop
lahf
cmp
hlt
cld
lods
dec
xlat
or
cld
push
sbb
lret
dec
jecxz
xchg
test
test
jb
daa
adc
push
inc
jb
insl
ja
sbb
mov
ds
sub
mov
inc
inc
push
in
or
loopne
pop
out
repz
or
cmc
adc
into
mov
fstps
mov
jg
and
jno
jmp
nop
aam
jbe
loopne
push
pop
das
mov
xchg
cmp
fnsave
push
mov
pop
fcoml
sub
fisubl
sar
call
push
xor
sbb
xor
xchg
int
inc
adc
sbb
mov
cmp
push
sahf
lahf
pop
sti
bound
xchg
push
out
cmc
add
and
and
in
retw
add
arpl
daa
and
push
inc
sbb
outsb
xor
mov
or
fnstcw
inc
inc
sub
jl
jp
jo
xor
lret
sarl
cmp
mov
pop
scas
pop
or
pop
cwtl
inc
sub
mov
out
pop
xchg
insl
jno
int
fldln2
adc
scas
fs
daa
jno
pop
add
bound
idivl
dec
out
add
vmulps
and
pop
cmpsl
xchg
popa
or
sub
pusha
loop
xchg
xchg
inc
cld
pop
aad
mov
pop
inc
dec
or
sub
or
mov
call
pop
sar
push
lret
mov
fucomp
js
inc
fists
push
xor
scas
sub
mov
pop
fisttps
jecxz
push
lods
fs
sub
push
dec
les
arpl
or
outsb
scas
pop
or
or
mov
lods
cmpsl
call
call
ret
add
pslld
sub
das
adc
or
sbb
ret
aam
pop
inc
jmp
push
insl
adc
sbb
push
push
xchg
movsb
ds
mov
push
sbb
adc
data16
mov
xlat
sahf
pop
dec
mov
icebp
shr
daa
sub
jns
mov
out
roll
data16
xchg
scas
xchg
cmp
mov
mov
es
inc
loop
fsubr
sbb
scas
cmp
fistps
int3
jb
cltd
xchg
repz
xorl
push
xchg
mov
push
pop
mov
inc
push
push
inc
mov
mov
mov
std
std
mov
ds
dec
imul
lcall
inc
sarl
jp
mov
jno
movl
sarb
es
mov
or
in
fdivs
jbe
add
and
or
sub
ljmp
fwait
jns
push
jle
sub
xor
out
mov
and
mov
jecxz
cwtl
lahf
mov
and
xchg
les
ffreep
lods
cmp
aaa
cld
inc
add
popa
push
push
bound
jnp
mov
jp
fbld
out
mov
aad
jnp
inc
jle
xchg
mov
mov
adc
xor
mov
dec
cmp
xor
rorl
mov
push
das
sub
lcall
out
dec
pop
lret
inc
and
inc
ds
ret
or
dec
sub
inc
lea
ss
fs
cmp
push
push
lahf
add
imul
mov
or
xchg
jge
push
iret
cmp
in
lods
sub
fiadds
sub
in
int
daa
scas
mov
in
rorb
mov
inc
or
aad
sbbl
fbld
adc
xchg
lods
mov
and
popf
insl
and
cmp
or
in
pop
insl
iret
xor
les
adc
fsubs
int3
mov
push
and
mov
jl
sbb
push
and
mov
testl
push
mov
cld
into
popf
and
dec
xchg
mov
je
adc
mov
sbb
fsubs
fcoms
je
mov
xchg
mov
and
xchg
cltd
cli
sbb
das
pop
test
mov
xchg
sub
cltd
push
test
fucomp
xchg
xchg
mov
cltd
jne
and
je
push
push
xchg
pop
or
mov
insb
in
leave
mov
mov
jbe
mov
xorb
cmc
dec
and
call
in
fsub
out
pusha
jle
stos
out
mov
mov
push
in
mov
adc
pop
add
sbb
dec
test
cs
repz
mov
mov
pushf
lods
test
mov
aas
int
ljmp
js
mov
andl
sub
push
in
xchg
pusha
in
push
cmp
and
cwtl
lahf
cli
aam
insl
xchg
arpl
movsb
mull
cmp
jp
pop
fidivrs
mov
out
rcll
inc
es
mov
sub
jbe
mov
insb
cmpl
push
sub
pop
ret
bndldx
bound
sbb
mov
ss
xchg
inc
movzwl
arpl
ja
cltd
pop
xchg
xor
xchg
dec
jns
cwtl
fstpt
mov
sbb
in
push
pop
pop
mov
jne
sbb
xchg
xor
inc
aam
fsubs
pusha
hlt
jae
scas
pop
push
clc
scas
jbe
sub
dec
cmpsl
push
xchg
aas
mov
pop
outsb
icebp
add
mov
add
vzeroupper
jns
je
das
fmulp
orb
push
lret
push
imul
in
das
iret
loope
jns
lcall
jno
insb
mov
jo
mov
out
jns
movsb
dec
mov
sub
adc
ret
cli
mov
call
adc
mov
cmovne
daa
jo
pushf
gs
cltd
mov
push
pop
in
pop
cli
or
mov
pop
mov
mov
mov
add
or
jecxz
cmp
inc
insb
xor
daa
xchg
lods
mov
sub
cmp
mov
mov
adc
jge
or
or
clc
cmp
into
les
sbb
loope
adc
xor
out
push
jno
jae
add
lret
xchg
add
imul
and
orl
cmp
cmp
adc
mov
mov
pushf
es
in
jne
adc
jb
sub
add
xchg
outsl
add
in
frstor
mov
ret
xor
adc
xchg
adc
push
jbe
and
mov
pop
addr16
sub
mov
mov
pop
push
push
subb
ljmp
push
dec
test
xor
add
popf
aaa
mov
and
sbb
pop
into
and
xchg
jp
adc
cwtl
loopne
ljmp
mov
xchg
jl
xor
cmp
js
mov
push
mov
scas
rol
jae
leave
ds
cmc
push
jl
xor
cli
roll
mov
dec
movsl
mov
push
sub
icebp
filds
dec
int
push
imul
add
leave
popf
adcb
loopne
lods
adc
push
adc
adc
daa
or
jns
jbe
add
stos
lcall
outsl
lret
push
out
xchg
xor
xchg
hlt
mov
xor
shlb
xlat
mov
cwtl
fldl
mov
fisubl
add
jno
jbe
adc
cmp
mov
rcll
add
adc
mov
mov
jbe
addr16
inc
mov
repz
cmp
sbb
jg
dec
dec
loope
insb
js
xchg
clc
pop
int3
sarb
push
std
add
mov
xchg
cmp
or
mov
in
aas
lock
bts
xlat
stc
jecxz
mov
popf
shlb
sbb
lock
adc
push
cmp
sbb
dec
in
lock
shrl
pop
std
lcall
in
into
hlt
pop
fs
dec
repz
xchg
fdivrp
js
push
push
pop
cltd
jle
mov
xchg
or
sbb
mov
cmpsl
fcoml
shll
jg
or
push
fsubrs
inc
xor
jo
sub
loopne
pushf
imul
jns
mov
and
fcoml
and
or
mov
in
sbb
into
lahf
sahf
adc
mov
sub
les
push
xchg
and
mov
and
in
dec
pop
aad
insl
pop
loop
dec
repnz
or
lods
push
jmp
adc
addr16
jns
push
xor
jne
push
fildl
sbb
pop
jnp
arpl
jle
fcmovnb
jge
insb
dec
jb
lret
add
jmp
pop
lahf
test
xor
jbe
mov
or
mov
enter
movsb
push
or
jae
mov
add
mov
dec
jo
fsub
pop
adc
dec
mov
adc
push
imul
fistpll
fmuls
mov
aad
xchg
and
jae
jp
jmp
repnz
mov
into
out
pop
mov
cmpb
pop
push
inc
adc
or
push
ja
jbe
ret
mov
xchg
dec
pop
dec
fwait
mov
lock
out
mov
repz
es
add
das
loop
push
insl
pop
inc
sahf
mov
jne
jecxz
call
iret
mov
inc
pop
daa
push
test
ss
mov
mov
ljmp
shrb
and
pusha
mov
sub
imul
mov
xchg
cmp
mov
rorb
inc
in
or
and
clc
ljmp
pop
mov
movsb
sbb
jno
out
xchg
movsl
adc
cli
leave
push
shl
dec
in
adc
nop
adc
cwtl
sub
rorb
cmovne
inc
and
and
cs
sbb
mov
leave
fmul
mov
rorl
inc
jge
cmp
cltd
xor
jb
sub
mov
pop
shl
fisubl
cwtl
outsb
dec
mov
add
movsl
push
call
or
out
hlt
cmc
mov
pop
clc
movsb
xor
lds
push
shrl
pop
mov
mov
pop
adc
lods
shlb
jne
ret
add
xchg
lods
ss
mov
add
into
xor
iret
icebp
movsl
sbb
cmp
jp
push
scas
arpl
or
push
xor
mov
test
adc
pop
loopne
inc
sbb
push
xchg
or
dec
aam
popa
fldt
or
cmc
out
adc
dec
in
add
xchg
movsl
lret
loopne
mov
cmp
push
xor
icebp
cmp
sbb
nop
push
mov
fidivl
sub
fidivs
out
xchg
sahf
aas
int3
scas
ljmp
push
out
cmpsl
push
mov
push
inc
js
jae
push
lahf
loope
jg
jno
int3
dec
adc
jne
insb
or
push
test
into
pop
rclb
lds
sti
and
and
aam
test
enter
scas
jbe
pusha
cltd
inc
cmc
imul
sub
jle
loop
add
push
mov
and
push
out
cmp
cmpl
and
lods
adc
mov
cmp
pushf
mov
sahf
mul
into
ja
push
and
inc
mov
cmp
cmpb
es
dec
gs
xor
in
jg
inc
outsl
popa
ljmp
xchg
cmp
mov
gs
test
jg
out
xor
loope
into
aas
fisttpll
iret
xor
fdivrp
cmp
sub
dec
fwait
adc
lahf
std
mov
add
repnz
pop
scas
or
xchg
xor
dec
mov
popa
popa
xchg
fbstp
fisttpll
or
loopne
pop
subb
add
out
sub
mov
add
jge
pop
cmp
pop
mov
pop
addr16
jmp
push
jp
xorl
jbe
out
je
mov
mov
es
sbb
cmp
aad
mov
mov
orb
push
push
movsb
or
push
jp
cld
jo
and
fcompl
out
add
lret
stos
inc
jno
pop
lret
sub
sbb
into
loopne
loope
inc
or
or
xchg
dec
and
push
cmp
inc
add
add
into
stc
das
mov
add
gs
inc
insb
fwait
popa
js
push
inc
fildl
mov
jnp
mov
add
inc
rcrl
add
mov
jl
pushf
or
jp
fdiv
jmp
jecxz
outsb
lea
pop
aad
cmp
addl
or
stos
popa
stos
mov
push
xor
or
test
xor
mov
andb
cmpsb
inc
dec
pop
dec
ljmp
cltd
imul
test
je
arpl
insb
fistpll
aad
lret
sbb
hlt
add
mov
fxch
xor
xor
stos
xchg
inc
jp
incl
ja
insl
shlb
stc
pop
cli
repz
push
stc
push
dec
cmp
add
xor
xchg
jno
call
lods
mov
mov
pusha
add
dec
sbb
inc
mov
pushf
or
nop
test
cmc
faddl
and
inc
jo
outsl
push
xlat
xchg
push
fldenv
inc
mov
clc
xchg
sbb
cmp
fistpll
xor
in
int3
test
adc
data16
dec
es
add
add
push
stos
mov
add
dec
mov
inc
mov
in
mov
lods
pop
mov
push
or
xchg
orb
test
fnstenv
mov
cmpsl
out
ljmp
test
and
jbe
call
aad
outsl
or
jmp
mov
xchg
pop
add
iret
addl
add
push
inc
sbb
out
jbe
push
shlb
xorb
test
push
into
jmp
jb
mov
jmp
addr16
mov
scas
cmp
fstpl
or
in
pop
aas
push
ljmp
pop
sbb
dec
sub
loope
aad
arpl
mov
push
outsl
mov
mov
or
and
xchg
xor
outsb
sbb
jnp
fsubr
rclb
adcl
jecxz
and
and
sbb
adc
xchg
ds
aam
add
or
mov
dec
pop
lock
out
pop
jne
lea
add
popa
push
xor
jmp
mov
rclb
adc
push
fidivl
imul
idivl
sarb
pop
dec
pushf
cli
mov
xor
xchg
xor
dec
add
dec
push
test
pop
js
or
ss
mov
jae
int3
mov
adc
adcb
rolb
pop
and
dec
and
jecxz
push
test
mov
fs
cmp
shrb
jo
insb
lret
outsl
pusha
mov
arpl
ret
aad
test
je
mov
mov
push
inc
mov
lods
push
aad
pop
mov
xchg
add
movsb
xor
into
sub
add
adc
jle
inc
sub
pop
sbb
pop
bound
and
test
mov
aas
or
subb
jge
push
in
int
push
fildll
aaa
movsb
xor
sub
sbb
pusha
sub
cli
mov
test
sbb
repz
flds
xchg
test
add
mov
sbb
gs
in
mov
aam
push
and
push
ficoms
dec
je
into
movsb
mov
enter
cmp
movsb
jb
jnp
shll
add
sbb
jp
mov
xor
mov
xchg
rcrl
cmc
outsl
push
out
cmp
adc
mov
in
push
std
pop
loope
pushf
mov
cmp
test
lds
dec
frstor
test
rcr
inc
sbb
sti
jno
pop
lea
xchg
pop
sub
sub
mov
stos
int3
and
mov
push
out
int3
jne
out
dec
mov
fildll
push
push
in
xor
pop
sti
in
stc
mov
jns
or
inc
scas
xchg
push
jg,pn
inc
or
adc
pop
out
inc
dec
jbe
inc
arpl
jo
inc
in
cs
into
int
push
mov
repz
jne,pn
xchg
push
push
mov
outsb
daa
xchg
mov
add
xor
xor
mov
or
mov
jmp
lds
push
sbb
jo
push
js
xor
xchg
push
divb
in
xor
sbb
lods
push
dec
jae
in
sbb
insb
jo
data16
out
inc
jnp
pop
aaa
cmp
shr
jp
enter
xlat
pop
pusha
mov
adc
nop
xor
mov
and
pop
inc
pop
cli
rclb
or
lods
lds
ss
mov
xchg
sahf
das
popa
lcall
xchg
frstor
dec
out
mov
ss
arpl
vmovupd
xchg
mov
and
cwtl
cmc
pop
push
push
cmp
jno
inc
ffreep
and
xor
daa
scas
fs
push
add
jge
hlt
ficoms
or
xchg
scas
xor
mul
outsl
outsl
scas
add
add
mov
scas
xchg
dec
das
imul
add
loopne
jnp
in
xchg
mov
nop
or
cmpsl
push
mov
mov
pop
aam
jns
bound
fdivrp
push
jbe
xchg
push
arpl
xor
testl
inc
fyl2x
sub
mov
add
test
jle
cs
xor
sub
push
rorl
or
sbb
sbb
cmpsl
dec
fildll
clc
cltd
rclb
ja
popa
repz
push
int
inc
addr16
push
test
sub
xchg
ficompl
jno
and
cmp
mov
icebp
ret
push
sub
movsl
cmp
addr16
xor
outsb
aam
loopne
jmp
out
imul
pusha
jle
mov
and
jns
fwait
icebp
icebp
xorl
lahf
mov
mov
fmuls
arpl
mov
outsb
and
roll
dec
and
lods
mov
mov
push
xchg
sbb
sbb
insl
jbe
dec
cwtl
lahf
pop
jne
int3
je
test
dec
and
insb
mov
stc
aam
ljmp
adc
adc
cmp
lret
inc
orb
push
inc
in
jecxz
jbe
or
add
xchg
icebp
inc
sub
stc
jb
int
jb
andl
shlb
sbb
jp
mov
ja
ja
cld
xor
add
je
hlt
dec
fistpl
shrl
test
jbe
test
ret
into
nop
mov
sbb
das
out
out
icebp
add
adc
xchg
subl
lods
dec
dec
and
ljmp
test
fistpll
cmp
daa
add
sub
inc
or
lods
push
pop
dec
or
adc
bound
bound
rcl
jo
mov
jmp
sbb
daa
push
adc
nop
aam
sahf
pop
fidivrl
std
or
leave
arpl
adc
cmp
pop
lods
addr16
xor
leave
adc
lods
jnp
xlat
pop
movsb
pop
mov
or
out
bound
aaa
dec
jecxz
inc
fdivrp
push
lcall
les
and
push
shl
movsl
movsl
mov
mov
push
jg
jbe
out
or
inc
lock
inc
daa
add
xchg
push
jmp
repz
clc
pop
lahf
xor
mov
icebp
xchg
andb
push
lods
std
addl
js
cmp
xchg
outsb
lahf
jne
inc
mov
cld
push
push
jno
dec
dec
add
and
test
lock
loop
insl
popf
jo
call
and
stc
ss
lock
push
clc
stc
or
div
std
pop
adc
into
push
xchg
xor
mov
mov
sti
cld
mov
in
mov
mov
push
adc
pop
pop
pop
lock
xchg
mov
scas
fsubrs
fidivrs
and
xchg
sbb
mov
and
and
jl
out
mov
clc
lret
subb
lret
add
in
adc
rcrb
jae
bound
movsb
cltd
dec
lret
rcl
mov
lock
adc
jbe
cli
outsb
jns
push
imul
ds
bound
xor
or
add
pusha
hlt
mov
cmp
pop
repnz
fsub
sahf
insb
movsb
insl
outsb
or
ja
or
ljmp
push
inc
sbb
pushf
call
repnz
sbb
adc
cmp
jns
call
mov
pop
cmp
jo
aas
orl
popf
mov
pop
mov
or
push
and
int
jo
mov
outsb
adc
daa
push
sub
mov
mov
sbb
push
ja
jnp
push
test
dec
dec
movsl
fcompl
lcall
fs
hlt
fadd
imul
rclb
ss
gs
mov
in
sar
shlb
pop
test
stos
inc
ret
pop
fisubrl
mov
sbbl
scas
fdivrl
adc
push
cmp
sbb
call
pop
xor
stos
or
mov
jmp
pushf
push
andb
sbb
mov
mov
fwait
jp
jno
repz
or
jno
rcrb
stc
add
dec
addb
and
inc
test
sub
gs
adc
leave
sbb
pop
in
jno
push
cli
and
pop
hlt
fisubl
sahf
xchg
ficompl
pusha
push
mov
stos
clc
repnz
push
push
or
cltd
mov
imul
or
and
and
mov
jo
push
mov
lea
sbb
sub
sbb
daa
les
dec
push
sub
adc
repz
pop
inc
pop
je
out
xorb
dec
pop
push
hlt
inc
fwait
push
xor
movsl
inc
rcl
and
jnp
push
xchg
nop
mov
or
ljmp
jne
push
lcall
sbb
repz
daa
daa
inc
xor
push
repnz
pop
push
dec
cs
scas
aam
xor
pop
fucomp
push
inc
out
getsec
sbb
outsl
sbb
testl
or
jne
inc
mov
aam
sub
or
mov
push
mov
mov
dec
out
mov
insl
lea
cwtl
outsb
into
cmp
loopne
loopne
repnz
lret
mov
icebp
out
leave
jmp
ljmp
fmul
lret
xchg
scas
adc
sbb
enter
cmp
mov
inc
fcmovb
popf
push
int3
mov
cmp
dec
sbb
roll
cmp
jge
xor
cltd
xor
rclb
mov
or
notl
jno
lahf
xchg
ret
rclb
mov
aad
testl
popf
dec
mov
movsl
ret
movsl
sbb
xlat
mov
xchg
pop
pop
repz
sub
mov
adc
imul
out
sub
add
es
sbb
in
mov
out
sbb
dec
add
popf
lcall
popa
in
inc
adc
mov
xchg
cli
sahf
mov
adc
std
out
and
addb
dec
pop
lahf
sarb
fdivrl
or
loope
add
out
mul
mov
sbb
sub
in
dec
lret
xchg
fldt
dec
sub
push
ret
adc
mov
inc
loope
dec
cmc
xor
cmp
ja
dec
shlb
sti
or
xor
testl
sarb
les
cwtl
mov
jl
pusha
mov
mov
int
add
xchg
adc
rol
sbb
and
mov
cmp
pop
cmc
pop
push
xchg
mov
testl
add
idiv
adc
push
jl
jns
mov
loope
je
ss
test
or
cmpsb
adc
xchg
ds
fs
adc
lahf
xchg
cmpsl
push
test
push
leave
jb
movsl
dec
dec
es
cltd
jo
cmc
push
sub
fisttpll
xchg
fsubs
popf
lahf
dec
and
ss
rclb
add
xor
std
loop
in
dec
cmp
mov
stos
orl
insb
sbbb
add
jnp
icebp
jge
push
sbb
jge,pt
adcl
push
icebp
add
add
icebp
stc
sbb
lods
dec
in
xorl
dec
lahf
fwait
push
fstpl
dec
dec
dec
dec
lods
movsb
mov
ja
or
insl
cmp
repnz
push
dec
sbb
xor
mov
mov
ljmp
xor
mov
test
test
adc
pop
pop
adc
out
or
pop
int3
jbe
dec
xchg
jge
add
push
lods
lcallw
mov
adc
push
jp
addr16
dec
pop
mov
sbb
icebp
stos
daa
negl
data16
loope
jns
movb
pushf
adc
fstpt
sbb
not
testl
mov
mov
gs
cmp
xor
imul
push
mov
jp
sbb
insb
sub
fisubrl
insb
xor
or
cmp
imul
mov
daa
push
fildll
mov
jecxz
jle
cwtl
std
xor
cli
popf
shlb
cmc
adc
aad
movsb
outsb
xor
inc
sbb
xor
cs
cmc
imul
lret
lea
repnz
rcrb
shlb
or
das
andl
iret
outsb
cmp
pop
add
jge
cltd
lock
mov
mov
shlb
xor
push
das
ja
sub
cmp
mov
out
es
push
je
sahf
repz
inc
xor
add
pop
mov
push
push
inc
call
sub
shlb
cmp
ficomps
mov
data16
insl
push
not
lret
imul
cmc
int3
mov
xchg
mov
popf
adc
jne
dec
ja
pop
pusha
sub
xchg
mov
xor
enter
pusha
dec
sbb
xor
in
inc
arpl
pop
jge
cltd
dec
jb
shll
sbb
mov
sub
jmp
mov
dec
sbb
mov
or
lock
imul
xor
and
xlat
aad
inc
sti
out
out
and
lods
pop
stos
cmpb
into
push
out
push
jmp
add
xor
mov
in
cmc
push
mov
cmc
out
int3
test
sahf
cmpsb
pop
xor
fwait
andb
aam
dec
movl
ret
sub
es
mov
clc
sbb
xor
hlt
xchg
adc
push
xchg
and
repnz
lock
fsubrl
adc
cwtl
mov
jb
sbbl
in
mov
mov
mov
sti
cmp
sub
mov
sbb
cmpsb
cwtl
jb
jmp
pushf
repz
push
mov
xchg
sub
xor
movsb
out
loope
mov
pop
xor
data16
jl
clc
pop
mov
lods
int
es
pop
push
mov
mov
mov
xor
sub
iret
jp
fadds
jb
inc
test
in
mov
movl
icebp
loop
mov
sbb
cmpsl
xchg
popf
lea
push
jg
xorl
jge
pop
dec
cmp
inc
cmp
loop
ljmp
sub
js
cmp
rorl
loopne
and
jns
cmp
ds
test
push
push
pushf
rorl
and
and
pop
adc
add
nop
sbb
mov
push
daa
popf
add
and
push
jne
jl
fcompl
mov
cld
cmp
mov
in
loope
cmp
in
adcb
inc
scas
jnp
aam
mov
sub
nop
mov
scas
dec
add
scas
bnd
jae
adc
cmp
scas
mov
dec
out
mov
mov
jbe
xor
xor
rcrl
cmp
stos
and
fwait
sub
mov
or
movl
aam
lret
xchg
shl
jp
dec
imul
fstps
in
jno
mov
pop
sub
jmp
jecxz
adc
loope
cmp
loop
cmp
les
sahf
pop
insl
jmp
fwait
mov
aas
add
jno
xlat
cmp
push
stc
aas
or
repnz
mov
mov
xor
sbb
cs
testb
insl
pop
je
push
icebp
add
mov
nop
lock
pusha
cmpsl
stc
xor
fldl
push
sti
push
sahf
xchg
dec
insl
mul
sub
jns
ret
or
add
icebp
add
loopne
sbb
test
xor
or
cltd
mov
ret
xchg
cmp
mov
jnp
js
xchg
jge
pop
out
cmp
jae
push
lret
inc
cmp
mov
rclb
cmpsb
shll
clc
std
fbstp
push
and
movsb
lock
lahf
les
jb
mov
cmp
out
mov
lods
lock
or
mov
mov
cmc
jge
or
into
lea
adc
push
cmpl
inc
movsb
sti
and
mov
push
xlat
push
adc
scas
sbb
adc
lds
add
push
popf
and
imul
dec
cmp
stos
scas
in
adc
mov
enter
cmp
mov
mov
mov
jmp
xchg
add
outsl
jl
movsl
sbb
imul
mov
loopne
scas
test
aad
into
dec
jbe
push
cltd
int
scas
push
inc
mov
test
dec
cmp
movsl
push
lea
xor
pop
jnp
cli
lods
nop
loope
push
lods
aad
lea
bound
cmp
mov
jmp
daa
and
shlb
test
inc
and
adc
aaa
loop
mov
mov
pop
inc
std
andb
xor
lret
mov
or
dec
mov
shr
mov
xchg
ffreep
pop
test
xor
mov
mov
ss
jbe
outsb
fwait
cmp
jbe
xchg
shrb
dec
out
mov
popf
data16
dec
or
xchg
mov
mov
shrb
xorb
inc
out
xchg
sbb
mov
add
and
imul
es
inc
pop
push
lret
sub
ja
fs
pop
or
fwait
xor
mov
lock
sbb
jge
leave
cmp
push
fisubrs
dec
lret
sub
out
dec
push
or
sub
push
xchg
xchg
fs
mov
push
je
add
pop
xchg
mov
xor
mov
popf
mov
or
adc
sub
and
imul
jge
lcall
sbb
xor
mov
and
popf
mov
mov
mov
aam
adc
and
jmp
nop
dec
jo
repnz
xchg
push
jno
cmc
sub
cwtl
lds
fildll
daa
adc
pop
mov
pop
sbb
aas
jmp
xchg
xorb
pop
jo
sbb
xor
shrb
adc
ret
and
xlat
inc
or
idivl
xchg
je
add
inc
test
or
int3
cmp
test
inc
pop
sub
cmp
std
lcall
rolb
cmp
add
jl
imul
lahf
cld
dec
inc
mov
xor
rol
cltd
cmpsl
dec
pop
enter
mov
mov
jae
aaa
pop
loope
xor
sub
mov
sub
xchg
cld
roll
pushf
cmp
jb
cmpsl
xchg
push
mov
pop
xchg
sbb
addl
mov
les
cli
sub
jne
hlt
add
mov
sbb
sub
cmp
dec
cmpsl
idivl
mov
stc
nop
xor
repnz
sbb
subl
popf
mov
daa
popa
xchg
dec
js
mov
fnstsw
ja
mov
nop
fadd
pop
mov
jne
mov
pusha
jne
lea
jl
xchg
cmpsl
cmp
jl
cmpb
popa
out
cmpsl
xor
inc
daa
mov
cli
pop
mov
sub
xchg
lock
out
stos
jl
nop
jbe
inc
outsb
sbb
int3
jns
cltd
jp
cli
xchg
shlb
jg
xchg
sar
ja
insl
or
jp
bnd
sbb
leave
sahf
mov
sbb
push
and
gs
testl
pop
fisttps
test
fidivrs
or
cltd
xor
icebp
jbe
push
stc
lcall
mov
inc
lods
cltd
mov
jge
add
jmp
mov
cmp
sub
pop
jmp
xchg
std
inc
jl
push
mov
pop
dec
push
fistpll
xor
sub
ret
rcrl
jbe
fcmovnu
sarb
or
lcall
xor
cmp
sbb
daa
into
mov
mov
mov
mov
ljmp
imul
inc
xorb
push
daa
stos
mov
and
sbb
sbb
ss
mov
add
mov
push
loopne
pop
dec
jns
notb
xchg
imul
ljmp
inc
aam
adc
pop
faddl
int
in
jge
insl
and
pop
xchg
jbe
ds
xchg
or
pop
in
into
pop
jne
ja
xor
jle
lds
dec
rcll
les
mov
mov
push
loope
divb
fucomip
and
mov
fwait
jae
jnp
sahf
jmp
inc
fiaddl
mov
incb
into
jnp
enter
jmp
xchg
icebp
jns
mov
jne
mov
adc
inc
adc
mov
fld
subl
data16
mov
outsl
mov
das
pop
orl
xchg
dec
cmp
dec
cmpsl
dec
cltd
sbbl
lcall
jle
mov
pop
in
lret
adc
sahf
sti
xchg
inc
scas
scas
xchg
icebp
xchg
into
lods
xor
pop
pop
sub
into
or
loope
inc
or
lds
inc
add
fistpll
mov
mov
mov
sub
aam
ficoms
mov
mov
sub
and
jg
es
mov
sub
cs
push
xchg
push
sahf
xorb
daa
xor
dec
jb
ret
in
dec
in
sbb
lret
insb
ljmp
loop
inc
mov
and
or
pop
out
mov
enter
cmp
lcall
fimuls
imul
dec
shrl
cld
xchg
hlt
cmp
mov
sbb
push
leave
movsb
xor
je
fcmove
adc
or
outsl
or
scas
sub
call
inc
xchg
or
and
sbb
jp
mov
icebp
add
push
outsb
cmp
push
out
shrb
jns
clc
xchg
cld
xor
andl
insb
rorl
scas
cmpb
sub
int
cs
jb
imul
lea
push
or
sub
xchg
add
mov
mov
mov
shl
dec
out
scas
imul
popf
outsl
xchg
cmpl
push
adc
lahf
pop
idivl
xor
out
and
sub
add
and
sbb
dec
popa
pop
pop
lea
fwait
enter
sets
aam
addr16
xor
and
add
push
xchg
sbbb
xorl
cmp
clc
es
repnz
ljmp
jo
inc
sub
stc
fs
popa
adc
lock
push
sbbb
and
mov
imul
roll
xchg
frstor
sbb
out
shlb
pop
cmp
push
push
sbb
lock
cwtl
sub
push
test
pop
movsl
lret
orl
sti
dec
int
mov
dec
cltd
cld
stos
ficoml
pushf
loopne
pop
mov
xchg
clc
xlat
push
mov
stos
inc
jns
inc
hlt
mov
mov
lock
mov
mov
xor
push
fcoms
sbb
jbe
outsb
into
sub
shrb
shll
jl
or
inc
sbb
sub
cmpsb
xchg
cwtl
sub
loope
sbb
sahf
mov
aad
clc
add
adcb
push
dec
xor
popf
inc
ror
pushf
and
out
xor
fwait
adc
dec
push
jmp
inc
sbb
pop
loope
mov
pop
push
std
cmpsb
hlt
test
jbe
jno
push
pop
ljmp
movsl
lock
pop
inc
mov
or
out
js
add
repnz
dec
jb
sbbb
out
es
call
dec
int
pop
hlt
in
icebp
in
lea
jne
jmp
and
xor
mov
pushf
mov
nop
mov
mov
pop
popa
je
adc
imul
jo
or
jns
addr16
sbb
out
nop
fwait
sbb
gs
inc
lcall
push
pop
inc
push
jns
scas
mov
scas
popa
cld
fbld
jg
push
pop
xor
ja
dec
faddl
loopne
rorb
cmpsl
and
mov
mov
aam
xchg
inc
fs
and
gs
je
movsl
fs
iret
mov
pop
and
adc
movsb
dec
cmp
cmpsl
shll
imul
xor
dec
xor
or
ljmp
or
sub
xor
and
movsl
push
fildl
jl
adc
movq
cmp
and
fsubl
adc
in
cmc
cmpsl
insb
shlb
test
xor
bound
inc
mov
push
sbb
sar
push
jg
mov
leave
push
ss
pop
rcll
mov
sub
inc
lea
cmp
xchg
and
add
aas
sub
or
mov
lea
inc
cmc
or
popl
inc
sar
clc
cmp
and
leave
ds
and
shlb
insl
dec
xchg
or
iret
jmp
mov
fists
cmpsb
out
mov
sbb
xchg
or
scas
data16
lods
pop
pop
jle
bound
int3
iret
hlt
and
bound
sbb
push
adc
cmc
test
jne
scas
inc
lea
sub
or
xor
je,pn
pop
mov
mov
sbb
pop
sarl
dec
out
and
stos
xor
test
shrb
stos
orb
pop
gs
mov
popf
leave
fwait
es
and
xchg
enter
lock
xor
jno
lock
hlt
dec
rorb
sti
sbb
lret
sbb
icebp
sub
gs
lds
imul
sub
out
add
faddl
daa
sbb
pop
dec
cmp
fistps
xchg
mov
les
sbb
or
fwait
shll
jmp
pop
jno
inc
pop
pusha
xor
neg
cmp
add
jo
shrl
into
ljmp
jns
inc
add
sbb
fdivrl
test
int3
inc
call
outsb
data16
lret
test
sbb
push
inc
mov
dec
popa
cmpsl
popf
sahf
cmc
inc
in
mov
jle
xor
push
pop
mov
dec
pusha
cmp
push
imul
movsb
scas
add
clc
int
cmp
cmp
loopne
fwait
dec
and
sub
icebp
push
insb
push
ljmp
jae
and
enter
pop
pushf
dec
pop
push
stos
mov
in
xchg
testl
out
dec
loop
sbb
repz
pusha
jne
loope
sbb
mov
pop
jmp
mov
jo
sarl
lret
mov
inc
cmp
sub
test
sarb
hlt
xchg
bound
push
sub
stos
sub
stos
pop
mov
shll
jmp
fwait
sub
sub
mov
popf
leave
xor
mov
jmp
aaa
clc
sbb
dec
cs
xor
dec
ftst
test
jbe
add
inc
jmp
test
popa
or
aas
mov
lret
push
popf
cmp
push
push
adc
sub
jbe
imul
xchg
or
stc
and
std
or
test
mov
mov
popa
test
push
xor
inc
mov
icebp
lods
arpl
and
sbb
and
inc
mov
cmpsb
lods
test
dec
xchg
push
repnz
cmp
jge
mov
aad
xchg
std
call
movsb
xchg
and
xor
lret
lcall
stc
xorl
xchg
enter
jmp
clc
pop
xchg
negb
mov
loop
adc
fnstcw
das
fistps
cli
lahf
iret
xor
insb
push
inc
xchg
pop
jp
shll
jge
outsb
or
rcll
cmp
cmp
mov
xor
xor
and
ss
out
xor
mov
popf
roll
icebp
insl
stos
shrl
jno
cmp
adc
jae
fcomp
cmc
mov
ja
cmp
pop
push
inc
cmc
rcl
pop
jmp
xchg
or
cmp
notl
es
lahf
insb
xor
fcos
pop
lcall
pop
enter
push
mov
push
sbb
js
push
pusha
scas
dec
mov
pop
mov
in
jb
or
adc
or
insl
mov
pop
sub
imul
pop
je
xchg
dec
movsl
mov
inc
add
xlat
mov
mov
ljmp
add
mov
push
dec
enter
add
sbb
push
mov
in
imul
insb
mov
dec
movsl
mov
sub
inc
push
sbb
rclb
jno
push
xor
xor
dec
pop
or
pushf
and
xchg
jbe
jno
outsl
jne
hlt
mov
and
xchg
sahf
cmpsl
cwtl
cmc
mov
inc
out
mov
mov
inc
xchg
mov
sahf
iret
sbb
push
lock
cmp
dec
movsl
adc
jle
pop
dec
mov
les
loopne
add
in
inc
sarl
jae
add
sub
jmp
cmpsl
sbb
mov
pop
jb
scas
mov
add
cmpsb
jl
ss
call
pop
mov
sub
jle
adc
scas
xchg
decl
lds
loope
fldcw
cmpsb
fcoml
add
clc
cmpsl
aad
scas
sub
dec
pop
inc
mov
pop
shl
ds
ficomps
lock
fnstenv
xchg
test
imul
inc
sub
or
inc
jl
lret
popf
shl
jp
xchg
call
sub
test
inc
nop
cmp
add
pushf
push
shll
cmp
xor
call
inc
inc
inc
scas
jne
xor
icebp
clc
loop
adc
out
fstl
gs
arpl
sahf
aad
or
xchg
mov
aam
movl
push
adc
dec
jl
lock
ljmp
jae
cs
jo
lods
cmp
xchg
push
xchg
xor
faddp
subb
not
int3
dec
or
cli
or
shll
pop
pop
mov
fadd
cmp
addr16
nop
mov
adc
cmc
inc
in
fidivs
mov
and
in
and
stc
out
fsubrs
out
inc
xor
pop
sbb
out
cltd
iret
data16
and
lea
test
pop
cld
jae
lods
out
and
fsubrs
xor
sahf
mov
lock
adc
push
int
xchg
xor
jae
test
cmc
push
pop
and
repz
xchg
xor
lods
stos
fxam
jbe
push
movsb
outsl
xorl
add
add
test
add
jle
jecxz
push
or
jb
sahf
rorl
or
cli
out
lea
sub
in
fsts
cmpsl
lcall
dec
out
jge
xchg
fnstcw
and
outsl
addr16
cld
int
bound
pop
push
cmpb
pop
mov
cmpsl
cli
ds
movsb
adc
int3
aam
cmp
sbb
pop
push
outsb
sbb
push
out
popf
jbe
sbb
test
mov
popa
cmpsl
rorb
outsb
or
cld
outsl
std
sub
and
add
loopne
outsl
or
int3
xchg
aaa
test
in
subl
stc
lds
xorl
roll
add
add
mov
sbbb
dec
jmp
xlat
pop
in
cmpsb
inc
rcrl
icebp
ljmp
jno
and
mov
daa
or
imul
loope
sbb
gs
movsl
push
cmp
mov
push
into
orb
rorl
scas
imul
std
sub
aam
push
pop
cld
repz
xchg
dec
out
jo
pop
adc
adcl
outsb
nop
xor
out
jnp
or
imul
push
int
cmp
loopne
ss
outsb
adc
jne
inc
stos
push
mov
sub
ds
and
adc
sahf
sbb
fdivs
push
and
fsubl
lcall
lods
insb
push
testb
pop
insb
cltd
nop
out
mov
gs
iret
push
jecxz
jnp
fucomip
arpl
fisubl
mov
loope
mov
jnp
jecxz
mov
sahf
mov
out
out
fldenv
outsl
push
lret
push
jnp
xchg
mov
rcrl
aaa
iret
xor
cmp
inc
mov
lcall
lret
les
ja
mov
hlt
fwait
dec
jp
cld
dec
push
xlat
cmpsl
xor
fwait
not
loop
pusha
iret
jb
sbb
leave
popf
stc
mov
sub
pushf
jl
push
mov
push
or
shll
bound
jnp
lcall
pop
stos
cmp
es
scas
fsub
adc
cmpsb
xor
jnp
roll
xchg
in
dec
dec
inc
sbb
inc
dec
and
or
aaa
sbb
xor
pusha
sub
icebp
dec
sbb
mov
fisttpll
mov
je
dec
jne
daa
clc
into
test
arpl
mov
inc
enter
jmp
outsb
lods
das
shlb
lret
mov
lods
aad
and
sub
mov
jns
add
mov
adc
pop
push
jo
ret
imul
and
add
cwtl
les
pop
popa
insb
sub
cmpsl
dec
inc
rol
test
pop
fs
dec
stos
push
adc
push
and
fisubrs
jl
sbb
push
rorb
xchg
pop
sbbl
push
adc
ja
dec
es
dec
rcrb
dec
fmuls
addb
fucomip
dec
out
and
push
cmp
sar
mov
adc
pop
pop
inc
fildll
cs
lret
das
loopne
iret
mov
mov
in
add
cmp
ftst
repz
ljmp
testb
push
vmovaps
lret
popa
pop
mov
jbe
test
cwtl
inc
sub
js
js
inc
jne
ret
repz
leave
xchg
dec
jge
ljmp
sbb
mov
popf
jecxz
xor
not
dec
lret
pusha
xor
arpl
repz
cmp
mov
mov
sbbb
jae
mov
popf
test
lcall
in
fsts
mov
jmp
sbb
pop
push
mov
pop
test
lret
cmpsl
sbb
leave
fdivrs
mov
ss
clc
arpl
xlat
fistl
ret
mov
testl
arpl
push
les
insb
pop
jl
fistpl
adc
mov
pop
loopne
mov
push
test
adcb
test
mov
add
jns
pop
cmp
movsb
sub
rcll
xorb
ljmp
or
out
xor
xorb
out
dec
cld
icebp
mov
fbstp
std
int3
sub
test
stc
adc
mov
dec
jns
or
dec
xchg
jns
xor
dec
adc
cmp
push
iret
in
cmc
lds
in
mov
push
inc
add
pop
out
shll
mov
scas
xlat
mov
aam
ss
clc
mov
push
insl
xchg
xchg
xor
roll
cltd
xlat
sarl
sbbl
lret
jp
repnz
cmpsb
cmp
addr16
xchg
xor
push
movsl
inc
pusha
fidivrl
sbb
mov
pop
cmpl
fmul
push
aaa
push
mov
jg
pop
int3
sbb
iret
in
cltd
jnp
ret
loop
lret
gs
adc
xchg
mov
movsb
cld
fs
gs
aaa
jb
ret
call
add
test
fwait
xchg
add
and
xchg
ds
loopne
adc
clc
pusha
mov
and
mov
std
push
jb
lods
inc
daa
lret
xor
ret
xchg
adc
js
sahf
xchg
inc
or
orl
or
in
xchg
mov
in
add
adc
adc
dec
test
popf
movsl
xchg
pop
or
or
mulb
mov
rcll
cwtl
in
nop
and
sti
push
in
mov
mov
sbb
clc
mov
loop
stos
xchg
shl
lds
adc
stos
lret
mov
out
orb
mov
pop
dec
jae
push
outsl
cli
mov
lods
ret
cmp
cmpsl
push
fisttpll
add
arpl
ljmp
leave
into
xor
adc
rolb
shrb
inc
push
xor
xor
mov
mov
lods
sub
xchg
arpl
test
enter
addr16
jp
pop
push
xchg
imul
sub
sub
mov
push
stos
sahf
sti
pop
loopne
push
out
mov
cmc
sbbw
xlat
mov
inc
ret
xchg
jge
test
or
fcomps
fisubrl
inc
repz
dec
bound
add
sub
lret
add
push
daa
pop
pop
lret
jbe
xchg
loope
mov
inc
adc
ret
inc
inc
pop
ljmp
pushf
in
cld
dec
sbb
jmp
rorl
fucomip
les
int3
and
jns
or
add
add
cmpsb
dec
and
mov
cli
mov
adc
dec
popf
mov
or
fidivrs
test
aad
or
into
jge
aaa
cmpsb
test
mov
scas
xlat
add
sahf
add
fsubr
jbe
xor
push
mov
adc
imul
fdivrs
ret
mov
insl
mov
xchg
dec
ss
add
outsl
shlb
movsb
sbb
adc
pop
out
das
mov
cli
lret
sub
adc
pop
movsb
out
xchg
lods
sub
hlt
ljmp
add
add
add
rorb
mov
std
jae
jecxz
mov
divb
or
insl
pop
cmp
inc
cwtl
popf
dec
adc
adc
icebp
ljmp
push
mov
sbb
lods
pop
and
cmp
das
insb
jns
mov
repnz
enter
scas
ja
mov
decb
into
dec
fisubs
std
stc
xchg
jle
call
mov
jo
cmc
mov
nop
inc
rclb
lcall
cmc
hlt
lea
out
dec
pop
mov
shrl
mov
jmp
mov
aaa
inc
push
jge
xor
insb
fldl
jge
data16
adc
ss
shlb
mov
add
push
pop
mov
int
xchg
lret
jmp
pop
in
fadds
push
mov
pusha
adc
cmpsb
in
dec
pop
jecxz
cmp
inc
mov
jecxz
push
sub
push
int3
sbb
push
mov
inc
add
cmp
dec
fwait
add
mov
dec
out
mov
repnz
ds
icebp
mov
ds
sub
mov
lret
xchg
cltd
enter
int3
jle
iret
daa
in
addr16
cmc
adc
out
sub
loope
ds
sub
js
rclb
lahf
xor
or
add
sahf
inc
sbb
repnz
jno
lods
and
dec
in
xchg
inc
shll
mov
pushf
pop
push
stos
add
in
icebp
stos
push
and
jae
fwait
cmp
aam
mov
adc
mov
sub
popa
mov
and
jp
xchg
push
xor
add
ret
outsl
not
push
lret
or
jne
clc
push
in
stos
lahf
out
shr
ss
sahf
in
sbb
adc
out
repz
sbbl
sub
mov
mov
cmc
shr
dec
xor
lds
lahf
out
sarl
out
jg
test
xchg
sbb
mov
sbb
mov
mov
sub
xchg
mov
popl
jle
jl
adc
lcall
imul
in
fcmovu
xchg
es
add
cld
stc
addl
cmp
scas
mov
or
les
mov
jl
push
sbb
mov
mov
mov
dec
jo
and
jmp
xchg
mov
inc
push
adc
mov
or
mov
mov
in
stc
cmp
pushf
inc
xor
imul
ljmp
adc
mov
push
loop
int3
inc
cli
in
add
add
dec
mov
out
out
clc
xor
popf
sbb
mov
fisttps
xor
cmpsl
dec
pop
ror
pop
push
adc
dec
push
fmul
mov
in
push
sub
inc
cmc
or
push
test
mov
dec
ret
mov
mov
and
fucom
mov
inc
das
std
mov
xchg
clc
mov
add
push
in
cmpsb
push
mov
rol
addr16
fldl
out
out
adc
and
gs
inc
jns
loopne
inc
loope
push
aam
sar
ljmp
and
xor
shlb
lret
sub
popa
hlt
mov
or
movsb
or
jge
and
add
lcall
pop
push
xchg
fcompl
icebp
xchg
mov
sbb
out
or
cmp
test
dec
push
cmp
jbe
or
dec
repnz
cltd
mov
and
inc
cwtl
pop
jae
mov
imul
jl
push
out
dec
hlt
lahf
push
mov
mov
mov
adc
xchg
mov
dec
mov
fucomp
xor
stc
stos
popf
daa
xchg
out
lods
adc
inc
adc
mov
cmp
leave
jns
cmc
ret
data16
inc
shlb
sub
je
es
outsl
mov
enter
dec
shl
xor
gs
bound
and
lret
mov
cmp
xor
sub
jg
imul
inc
jnp
push
dec
adcl
or
cmp
pop
lcall
mov
insb
inc
mov
lahf
xchg
idivb
dec
and
cwtl
mulb
popa
sub
pop
scas
mov
add
hlt
testb
mov
fildll
inc
cmp
sahf
dec
test
cmp
fmuls
xchg
addr16
mov
in
xchg
mov
into
adc
push
addb
js
xor
popa
xor
test
lahf
repnz
fnstcw
cmc
or
or
mov
cmp
and
popa
jne
or
xchg
movsb
movsb
jns
cmpsb
jg
mov
jbe
push
daa
mov
roll
mov
mov
leave
es
sub
test
sub
leave
orl
movsb
lcall
sbb
les
or
loopne
aas
lret
mov
cmpb
aad
pop
xor
das
and
push
jge
jecxz
aad
mov
test
int3
shrb
insl
cwtl
movsl
xchg
movsl
call
jb
testl
sarb
je
pop
popf
jp
xchg
movb
cmpsb
movsb
dec
xchg
mov
pusha
std
repz
mov
in
xlat
dec
scas
in
mov
pop
outsb
gs
shrl
mov
pop
cs
mov
cmp
flds
cs
lock
pop
mov
aaa
das
adc
jecxz
test
dec
insl
push
std
nop
out
push
sbb
out
out
jecxz
lods
push
outsb
xchg
imul
divl
xchg
shlb
popf
pop
dec
fists
mov
ljmp
lret
lock
iret
or
inc
sub
or
outsl
mov
xor
jnp
cmc
in
es
jne
fildl
mov
push
ret
pop
loope
add
cmp
inc
inc
adc
repnz
inc
aam
cli
push
test
lahf
leave
pusha
adc
arpl
subb
fdivrs
mov
jns
addr16
xchg
push
dec
das
and
hlt
outsl
jp
mov
cmp
push
es
and
cmp
xchg
ror
sbb
sub
or
add
jno
xchg
mov
movsb
rolb
pop
sti
jb
mov
inc
or
out
je
cli
jmp
cmp
jl
cwtl
inc
inc
daa
mov
in
out
pop
inc
mov
dec
divb
sahf
mov
call
sahf
jo
push
xchg
xchg
push
sub
shr
mov
push
es
ja
sbb
in
and
out
imul
aaa
adc
pop
add
mov
mov
imul
inc
sbb
lahf
sbb
jmp
push
lahf
pop
out
std
inc
cmp
push
xchg
pusha
xchg
push
jge
fidivrs
es
pusha
cld
cmc
sub
sub
sub
cmp
leave
adc
and
dec
add
adc
pop
sbb
stos
bound
lds
scas
ja
mov
xor
xorl
outsl
add
mov
lods
inc
fldl
loope
push
fldcw
jne
mov
ss
scas
scas
std
mov
and
pop
sti
mov
and
mov
cmpl
cmc
xor
jmp
cmc
and
add
sti
or
cmp
std
test
divl
adc
repnz
jae
xchg
jge
int
bound
jle
iret
dec
cmp
push
jnp
shrl
pop
sahf
imul
mov
aaa
fisubrs
add
repnz
dec
ljmp
push
or
lret
add
into
jns
lds
shrl
cs
sub
lcall
xor
dec
inc
sti
cli
xlat
mov
push
push
adc
sub
mov
stos
out
add
fimuls
mov
xlat
pop
mov
and
push
inc
mov
sub
sbb
mov
add
push
loopne
nop
adc
xor
fiadds
dec
jmp
addl
into
out
jns
inc
sbb
insb
fwait
stos
insl
xor
xchg
sub
push
cmp
sub
adc
mull
mov
sti
pop
cli
push
add
iret
lahf
ds
insb
xor
sbb
sarl
mov
jbe
cli
aas
mov
mov
sahf
adc
out
movsb
addr16
sbb
mov
mov
lret
lock
out
pop
into
or
adc
xchg
pushf
dec
aam
dec
sahf
sbb
xchg
jl
mov
outsl
cmp
or
sahf
test
push
push
test
js
push
mov
or
dec
fs
push
popf
std
out
dec
inc
sub
test
cmpsl
add
xchg
pop
dec
repz
mov
add
and
inc
jnp
xor
xchg
inc
shrb
cmp
pop
les
dec
mov
data16
sbb
cltd
inc
pop
mov
push
stc
idivb
mov
iret
pop
and
cli
mov
negl
and
aas
mov
out
push
mov
sub
cmp
scas
jmp
lret
add
dec
aad
inc
mov
jge
push
ror
cmp
leave
ss
loop
scas
pop
ret
nop
inc
iret
mov
or
cld
push
jl
adc
sbb
rolb
in
cmp
sub
fistpll
lahf
push
ss
and
and
jecxz
push
gs
and
in
xchg
jbe
sub
pop
cmpsl
cmp
outsl
push
je
sti
sub
pop
inc
xor
cmc
das
shrl
add
add
adc
nop
sbb
push
sbb
insl
outsl
daa
lock
pop
xor
mov
cmp
jno
movsb
rcrb
and
jp
push
lods
cmp
nopl
pop
add
out
adc
lods
stos
push
push
push
dec
into
nop
lahf
jl
and
mov
nop
dec
lock
into
aam
pop
xor
mov
sti
iret
sub
add
pop
cmpsb
divl
push
jb
pop
xchg
cld
sub
push
and
fs
in
or
jno
xorb
pop
div
repz
fiaddl
mov
mov
xorl
das
xchg
jo
inc
fnstenv
lret
fcomi
in
xlat
bound
mov
es
iret
pop
inc
pop
shlb
push
or
jae
dec
mull
pop
xor
scas
jb
add
push
enter
cmp
loopne
mov
push
arpl
test
into
dec
ror
adc
push
xchg
pop
dec
sbb
inc
movsb
mov
jge
mov
icebp
punpckhwd
std
cs
mov
xchg
xchg
int
or
iret
sub
sub
lcall
sti
mov
add
jge
jbe
lock
mov
cmp
movsb
int3
ss
ja
pop
dec
scas
pop
mov
stos
popa
or
sbb
inc
adc
lcall
adc
je
xor
add
js
xchg
mov
mov
test
incl
scas
dec
imul
mov
es
mov
test
clc
movsb
lahf
xchg
roll
dec
sbb
enter
jnp
push
rcrb
jmp
add
popa
testl
push
jb
ss
test
or
pop
push
inc
add
mov
cmpsb
cmp
mov
in
xor
dec
jp
jmp
movsb
leave
hlt
jne
lahf
pusha
jo
scas
icebp
add
shll
sbbl
mov
orl
fisttpll
dec
shlb
ljmp
dec
mov
call
imul
cmc
push
loop
stos
andl
xchg
loop
or
adc
mov
pop
outsl
dec
mov
shlb
roll
ss
fstpl
dec
out
mov
adc
daa
jbe
add
int3
push
jns
adcl
pop
sub
jmp
mov
inc
jbe
fildll
mulb
add
adc
jl
xchg
sbb
pushf
adc
int
out
mov
js
bound
mov
xchg
inc
add
jo
cmp
mov
sub
mov
dec
outsb
cmp
shrb
inc
mov
out
jae
push
adc
jnp
jno
and
mov
mov
xchg
loopne
jecxz
dec
sbb
iret
inc
sti
or
mov
scas
lods
or
cltd
push
mov
orl
lods
and
in
adc
adc
cmpsb
and
adcb
cmpsb
jecxz
outsb
add
dec
pop
cli
lds
movsb
rcrb
mov
and
jmp
pusha
add
in
mov
dec
and
mov
cmp
popf
lds
int
in
mov
ljmp
lods
insl
js
sbb
mov
mov
inc
popa
scas
mov
loope
xchg
sbb
sbb
ja
mov
cltd
sub
cmpsl
mov
loopne
push
lods
push
or
test
cmp
xor
jne
sbb
and
jne
adc
fsts
jae
inc
inc
mov
shlb
inc
pop
test
imul
mov
jp
inc
mov
pop
insl
int3
dec
and
nop
xor
add
psubw
cmp
and
lret
in
cwtl
xchg
adcl
imul
cli
push
jg
dec
imul
push
mov
rcrb
sahf
mov
jmp
lea
pop
dec
pop
xchg
ljmp
xchg
orl
xchg
rorl
inc
inc
lock
or
fisttpl
leave
mov
ds
adc
imul
fcomi
jae
jno
pop
push
mov
mov
xchg
test
mov
loop
sbb
push
mov
add
push
fwait
xchg
pop
push
jmp
pop
lcall
scas
lods
mov
xchg
into
imul
cmpb
stc
mov
insb
dec
in
or
data16
leave
sbb
dec
mov
push
ss
mov
cli
inc
sbb
mov
ret
pop
mov
sbb
jecxz
mov
stc
insl
sub
aam
xor
es
jg
push
rclb
xchg
out
lea
out
add
jmp
or
mov
or
dec
icebp
enter
xor
mov
mov
aaa
rorl
and
jg
sbbl
pusha
pop
ljmp
xchg
mov
lea
xchg
xchg
pop
insb
xlat
stos
pop
testb
int
adc
and
cmp
out
mov
sbb
sub
ja
inc
cmpl
and
data16
bound
sbb
xchg
xor
rorb
and
mov
mov
xchg
sub
jl
std
sbb
and
xchg
call
je
push
jo
push
daa
inc
rol
and
mov
xchg
xor
sbb
test
mov
ficomps
adc
loop
sti
dec
mov
std
repz
mov
int3
sub
jl
lret
push
push
mov
lcall
sub
mov
into
adc
out
ret
hlt
outsb
cmpsl
mull
fisttpll
cmpsl
stos
push
mov
push
or
or
sahf
repz
lret
imull
push
cmpsl
jge
aad
int3
jbe
sub
idivb
mov
mov
scas
pop
popa
data16
shlb
ljmp
lahf
xchg
outsb
lret
mov
fisubl
cltd
popa
ret
fmul
addr16
scas
movsl
jne
std
fsubrl
in
push
mov
mov
sub
cmp
pop
in
pop
std
cmc
jae
jmp
mov
jne
pop
adc
sbb
rorb
jmp
jmp
test
shrb
popa
dec
pop
pop
addr16
add
mov
xchg
mov
inc
movzwl
push
push
push
pop
mov
insl
daa
sti
jnp
cmpsb
fiadds
push
mov
mov
aas
cmp
mov
or
movsl
jmp
out
cmp
adc
scas
dec
popa
adc
sbb
adc
jl
in
add
and
lea
sbb
repnz
xor
test
fs
sarl
and
outsl
jb
les
pop
fisubrl
lods
scas
out
mov
cltd
mov
outsb
loop
or
push
notb
test
jle
ljmp
leave
stos
jmp
ljmp
pop
dec
push
ljmp
add
and
inc
add
push
cmpsb
lret
cmp
lcall
jecxz
outsb
adc
pop
cmp
outsb
push
addr16
adcb
mov
inc
adc
addr16
lahf
test
repnz
cs
dec
xlat
scas
and
jmp
xchg
les
cmp
gs
xchg
arpl
ss
xchg
std
mov
nop
inc
push
mov
or
je
out
stos
jbe
sub
fcmovb
cli
test
dec
lds
inc
cmp
and
sti
add
mov
jno
adc
stos
js
mov
dec
push
pop
mov
out
sbb
jbe
pusha
clc
das
ljmp
mov
mov
inc
jmp
add
pop
sub
sbb
insb
jecxz
sub
mov
jo
pop
jne
outsl
jns
and
hlt
leave
mov
push
int3
lods
pop
mov
adc
ljmp
mov
shl
adcb
or
test
hlt
shrb
je
adc
sbb
fadd
adc
nop
mov
jecxz
cmp
fidivl
pop
outsb
mov
iret
pusha
ds
inc
hlt
cltd
out
in
aam
push
addr16
pop
mov
sarb
adc
add
ficoml
xchg
push
push
std
outsl
in
stos
hlt
in
fnsave
push
xor
scas
mov
mov
and
ficoml
ljmp
nop
incl
mov
scas
ret
pop
inc
lea
outsb
inc
popa
filds
int3
xor
pop
inc
aam
aad
sarb
mov
in
xlat
mov
call
in
and
mul
aam
dec
inc
or
das
or
ret
and
mov
mov
cmp
sarl
stc
outsb
aad
mov
mov
cmp
push
mov
insb
pop
std
popa
xor
pop
loop
cmc
inc
and
and
in
inc
mov
dec
push
cmp
push
ss
cwtl
into
mov
outsl
add
pop
adc
icebp
adc
mov
cwtl
jne
xchg
pop
pushf
aas
fnstsw
hlt
mov
ret
into
dec
ljmp
insl
mov
jo
add
adc
cmpsb
call
fs
test
ret
ret
out
xchg
ja
inc
sub
jb
and
or
ret
cli
lds
repz
mov
jb
repnz
pop
stc
jno
fbstp
js
nop
or
mov
cmpsl
out
pop
cmp
inc
in
lock
idivl
mov
js,pn
cwtl
mov
lret
and
test
push
mov
in
inc
xor
in
in
cmp
xor
out
xchg
test
add
jb
sub
stos
adc
adc
sahf
fiaddl
je
cmpsb
ds
bound
push
mov
outsl
cmp
in
mov
test
out
imul
mov
or
jmp
push
fisttpll
xlat
hlt
lds
mov
push
pop
push
jg
xchg
and
bound
dec
mov
repnz
push
cltd
shll
out
insl
dec
dec
lahf
sub
add
pop
adc
insl
inc
insl
inc
adc
test
sbb
xor
lea
into
les
push
xor
aad
push
scas
sub
sub
lcall
dec
enter
inc
stos
xor
idivb
fsub
int3
movsb
outsb
mov
jne
fstpl
mov
pop
cmc
adc
adc
movsb
cmp
cli
or
mov
loope
cli
sub
xchg
inc
out
and
out
sub
lods
cmp
xor
cwtl
daa
out
or
adc
cmp
sarl
inc
das
sbb
in
jo
aas
mov
cmp
mov
push
or
jge
pushf
add
mov
jp
repnz
test
out
xchg
xchg
sub
jo
jl
jbe
hlt
mov
add
loope
arpl
mov
lods
mov
ds
cs
fucomip
push
outsl
aaa
decb
bound
sti
imul
sub
inc
je
adc
push
mov
mov
pop
pop
aad
fwait
inc
xlat
es
jnp
fadds
jns
mov
ss
pop
cmp
and
cli
sbb
and
gs
ja
sub
sub
out
mov
shll
fnsave
inc
xchg
adc
sbb
pushf
inc
sbb
cld
sbb
dec
lret
cmp
jae
rol
sub
jns
shll
mov
jnp
aad
stos
daa
push
xchg
jle
dec
push
repnz
stc
sbb
add
cmp
icebp
pop
jmp
hlt
pop
inc
pop
out
and
gs
mov
mov
test
outsl
sti
add
movsb
fsubrp
mov
xchg
jbe
adcb
out
pop
lahf
lret
push
lds
xchg
ficoml
or
adc
and
push
cld
in
pusha
fcomp
movsl
dec
mov
in
icebp
sub
sbb
mov
pusha
bound
pop
dec
push
cltd
sub
jmp
cmp
inc
mov
inc
daa
pop
add
push
lods
add
or
fists
leave
cmp
aaa
pop
pushf
inc
sarb
lea
xchg
pop
fists
push
jnp
notb
pop
add
adc
push
pusha
xchg
cli
lea
push
in
or
xlat
into
hlt
sbb
out
inc
scas
jl
aam
cli
inc
push
add
jle
add
scas
les
mov
adc
mov
sahf
sub
cmpsb
cli
push
push
jle
ficoml
movsl
cmp
shll
push
shrd
push
or
test
js
es
popl
push
lahf
data16
aad
dec
and
push
insl
dec
xchg
je
insb
sti
fdivrp
orl
mov
pop
mov
and
inc
pop
dec
cmc
cli
int
int
cmc
lret
adc
in
test
jo
add
xor
inc
dec
xchg
cwtl
jb
sub
xchg
sub
aam
faddp
adc
das
mov
sbb
sti
dec
mov
sbb
or
inc
or
dec
xchg
sahf
in
mov
out
aaa
cmp
xor
or
scas
out
inc
mov
jle
jp
push
dec
imul
dec
xchg
sub
std
and
inc
mov
jge
insb
or
add
movsb
in
hlt
test
addr16
mov
add
push
push
and
mov
out
mov
jns
xor
movsl
adc
sarb
push
in
xchg
ret
pop
in
sub
arpl
maxps
push
les
fbstp
mov
loope
adc
pand
cmp
jbe
loopne
insl
mov
aas
dec
iret
add
dec
cmp
lahf
mov
push
mov
mov
lret
mulb
add
inc
xor
gs
test
jae
scas
jb
subb
mov
iret
mov
lret
adc
aam
in
lahf
ljmp
dec
je
mov
imul
arpl
frstor
cmpsl
add
mov
xchg
xchg
mov
lret
insl
std
fcompl
rorb
jae
xchg
negb
push
sbb
cld
mov
inc
mov
iret
push
insl
aas
les
rcr
pushf
adc
fstl
push
inc
sahf
mov
lock
incb
loope
push
sbb
sbb
adc
mov
ljmp
pushf
add
outsl
xchg
insl
out
jg
andl
and
aas
push
leave
or
cmpl
cmp
loopw
xor
dec
in
xor
sbb
mov
mov
lods
fisubrs
test
in
rorl
push
xchg
fdivrl
dec
mov
shl
mov
jns
lods
orps
inc
add
pop
push
and
dec
xchg
rolb
push
push
test
mov
call
push
mov
stos
fimuls
dec
inc
cli
push
or
arpl
inc
sbb
mov
pop
popa
add
sub
leave
lcall
fdivs
popa
scas
call
mov
jns
repnz
xchg
daa
mov
dec
xor
icebp
decb
mov
pop
sub
cmp
int3
pop
mov
add
pop
arpl
aaa
lret
movsb
push
adc
test
adc
mov
jge
xchg
push
mov
fnstsw
jmp
or
fwait
push
ret
add
fsub
jb
inc
cmp
fldt
sbb
lock
jmp
push
call
and
push
negl
mov
in
mov
nop
test
sbb
gs
sbb
mov
fstps
xchg
movsb
xchg
or
dec
jmp
inc
cmpsb
loopne
adc
lock
aam
inc
cmpsb
fcmovnu
pop
pushf
sub
jl
ffreep
mov
mov
mov
ja
mov
pop
lret
add
mov
mov
sub
repz
daa
push
lea
in
sbb
xor
mov
iret
test
andl
xor
cltd
jmp
mov
adcb
pop
add
lret
push
and
add
jo
push
ss
or
jbe
xor
mov
popa
or
out
jne
add
mov
sub
sub
inc
or
adc
dec
mov
js
sub
add
xchg
in
add
jbe
mov
xchg
daa
pusha
aad
sahf
scas
cwtl
fsubrl
daa
sbb
popf
jne
and
rcrl
lcall
addr16
adc
sbb
fwait
mov
pop
xacquire
sti
call
mov
fldenv
imul
movsl
xlat
mov
loop
jae
lret
sti
push
dec
mov
addb
jg
inc
out
ds
xchg
cmc
xchg
and
ds
xor
aad
stc
adc
call
pop
jne
push
fistpll
cmp
iret
or
movsb
insl
andl
stc
inc
es
fdivl
xchg
pop
imul
sub
xlat
push
ror
xor
mov
adc
gs
hlt
mov
popf
enter
imul
mov
jmp
cli
movsl
add
mov
cmp
sbb
popf
js
sub
sbb
fdivp
imul
cmpsl
adc
jg
sbb
adc
bswap
repz
pop
repnz
gs
jge
push
icebp
push
addb
push
cmp
test
iret
sub
push
inc
enter
arpl
xchg
push
xor
cltd
shl
mov
xor
add
movsb
dec
sub
cmpsl
adc
inc
movsb
dec
data16
inc
sub
aad
outsl
pop
or
js
out
sbb
cmp
fistps
cmp
dec
vmwrite
or
jae
ficoms
and
fcom
push
loope
rcrl
std
cs
mov
andl
mov
mov
sbb
mov
movsb
movsb
jne
data16
jmp
mov
pop
fs
push
sub
imul
in
es
sub
mov
pop
cmp
push
pop
cld
sahf
imul
fsubrl
sti
mov
xchg
push
scas
outsb
inc
test
jbe
jb
repz
test
jg
mov
pop
sub
mov
cmc
inc
daa
mov
inc
test
adc
sahf
mov
xlat
pushf
insl
push
repnz
rcll
cmc
clc
sahf
fldenv
push
xchg
movsb
cmpsl
repnz
adc
int
mov
or
cs
clc
hlt
or
cld
lods
ret
dec
addl
push
sub
adc
cs
jg
pop
nop
adc
das
ret
mov
adc
addr16
xorb
and
cltd
sbb
mov
push
push
xchg
ret
inc
adc
adc
cmp
pop
and
sub
sbb
int3
sbb
stc
lock
jecxz
jo
mov
inc
pop
notb
push
mov
mov
dec
add
inc
xchg
add
jecxz
xlat
jno
in
scas
iret
push
stos
xlat
scas
stc
mov
cmp
bound
ret
dec
and
adc
or
cmp
mov
out
xor
and
outsl
sub
sbb
cmp
mov
mov
push
mov
je
cmp
call
sti
mov
push
notb
cmp
mov
jp
add
adc
mov
imul
inc
pop
jmp
out
iret
lods
pop
pop
push
mov
rclb
insl
jne
fiaddl
hlt
mov
pop
mov
jo
pop
fcmovb
leave
jg
adc
addl
stc
cli
out
insl
dec
icebp
push
fimull
adc
icebp
xchg
mov
inc
into
xchg
push
or
sahf
push
cwtl
out
cmpb
xchg
std
repnz
jp
nopl
into
lret
push
mov
adc
mov
fstl
clc
loop
in
sub
popa
mov
xabort
mov
out
inc
inc
shlb
lds
pop
loopne
xor
sub
lds
vsubps
sbb
in
dec
add
xchg
push
cmpsb
fiadds
clc
pop
stos
iret
in
lock
or
incb
push
stc
or
mov
jae
mov
mov
jne
sahf
mov
fdivrl
or
subl
fwait
icebp
mov
test
fisubrl
mov
shrb
inc
xor
leave
sub
pop
icebp
lods
xor
fst
out
sbb
dec
xor
inc
fwait
shll
ss
sub
repnz
xchg
ret
fistps
outsl
clc
test
inc
in
mov
and
leave
inc
repnz
xor
imul
and
les
rorb
cld
lods
pop
in
mov
inc
aas
es
sub
cmp
mov
add
cs
add
sub
jp
outsl
pop
imul
mov
jge
xor
data16
mov
cmp
aad
stc
arpl
call
rcrl
pop
out
cmp
inc
testb
jp
pop
xor
out
test
in
cmpsl
pop
xchg
adc
les
cmp
repnz
int3
dec
sbb
inc
dec
or
int3
cmp
test
adcl
lods
and
and
pop
lods
sub
dec
sbb
xchg
cld
sub
lds
xlat
cmp
aam
inc
or
cmp
xor
imul
xlat
xchg
push
pop
inc
and
ja
mov
or
nop
fisubl
out
test
fs
push
in
cmp
mov
jp
or
repnz
mov
mov
jo
subb
lods
fstpt
sbb
inc
dec
insb
imul
inc
add
dec
in
repnz
adc
inc
test
clc
fmull
repz
and
mov
testb
mov
js
movsb
fs
jmp
mov
push
in
mov
adc
imul
gs
lods
inc
jns
in
sahf
ds
icebp
fdivrl
stos
mov
inc
das
outsl
jne
lods
out
jecxz
popf
aaa
mov
movsb
sub
popa
stos
ds
lods
or
clc
sub
push
pop
xchg
sahf
popl
mov
cmp
xor
outsl
jle
call
or
jg
add
movsl
pop
fcomip
insl
dec
data16
sar
xor
adc
xchg
idiv
mov
sbb
push
insb
es
or
das
add
int3
mov
mov
mov
xchg
aas
inc
sub
outsl
jg
lods
lret
pop
add
fsts
push
in
into
ret
fwait
add
mov
cld
mov
cmp
add
xchg
inc
scas
mov
sbb
push
xor
orl
test
xchg
scas
fs
cli
lods
xor
dec
xchg
mov
pop
mov
pop
lahf
in
xchg
mov
stos
aad
xor
jb
lcall
aas
mov
pushf
mov
shlb
in
das
adcl
xor
movb
testl
add
cs
mov
jne
mov
les
xor
mov
std
cwtl
icebp
call
or
loop
cs
mov
and
mov
insb
lahf
roll
in
mov
bound
push
out
sbb
scas
xor
jecxz
sub
cmp
sub
add
sub
mov
subl
lds
jne
sbb
push
or
lods
fidivrl
movsb
and
mov
push
pop
sub
inc
push
cmp
insl
mov
pop
inc
and
aam
pushf
or
leave
mov
lcall
dec
loop
adc
cmpsl
sub
pop
dec
dec
mov
and
shrb
cwtl
push
lcall
sahf
xor
lds
lock
iret
push
cmp
fnstsw
test
mov
dec
mov
sar
cmp
xchg
pusha
iret
stos
cmpsl
mov
sti
pushf
mov
aam
lret
loope
push
cmp
push
outsb
cmpsl
push
adc
cmpl
sbb
pop
icebp
inc
sarb
mov
jge
andl
push
outsl
or
push
sbb
and
lret
adc
inc
push
leave
test
dec
xchg
add
rorb
sub
std
xorl
mov
icebp
aaa
jge
bound
sub
and
dec
jnp
or
outsb
push
dec
sub
pusha
inc
int
dec
mov
mov
jl
into
xchg
sahf
outsl
mov
das
xor
push
adc
aaa
mov
addr16
out
out
loope
mov
imul
pop
call
aad
dec
bswap
out
cmp
jp
mov
pop
jnp
fs
ja
sbb
in
sarl
movsb
push
shrl
sub
adc
add
pop
push
mov
jb
es
gs
addr16
rcrb
cmp
es
add
jnp
gs
or
or
cmp
cwtl
int3
mov
into
sbb
mov
int
pop
jno
mov
and
and
xchg
imul
aad
mov
add
loop
sbb
lcall
mov
leave
in
sbb
rclb
bound
pushf
sbb
fwait
pop
push
cmpsl
or
ljmp
notb
xchg
mov
fstl
cmp
call
movsb
cmp
push
xlat
out
jno
test
fsubl
push
call
test
mov
jge
lock
out
popa
lds
lods
cmp
xchg
daa
jl
mov
iret
cmc
mov
popf
and
lret
pop
inc
sbb
sbb
pop
mov
jg
cmp
xchg
dec
jo
xor
stos
adc
addl
fcmovnu
or
push
stos
shlb
push
stos
mull
mov
fld
cld
aas
cmpsl
add
aad
push
add
nop
jl
xchg
xor
mov
fsubrl
lods
pop
fdivl
out
jbe
push
mov
cmpsl
adc
or
sbb
es
test
add
sbb
mov
inc
sbb
sahf
pop
popf
subl
insl
dec
mov
rorb
add
mov
gs
lcall
jnp
xchg
sbb
sub
aas
xor
pushf
ss
call
arpl
add
lods
shrb
mov
sti
jns
cli
outsb
xrstor
jbe
hlt
scas
mov
vmovq
aam
jg
push
cli
cmp
xlat
mov
es
lods
mov
shr
xlat
add
mov
mov
jo
jbe
stc
xor
adc
outsb
pop
in
jecxz
push
imul
scas
shlb
and
lret
xchg
and
add
xchg
movl
xor
jbe
push
cmc
lret
push
jmp
push
add
inc
lds
dec
mov
jle
push
repnz
loope
push
push
cmpl
sub
fstpt
fwait
mov
jmp
outsb
adc
xor
call
daa
dec
das
sbb
sahf
pop
or
test
dec
lods
imull
add
scas
lcall
pop
or
lcall
or
pop
or
sbb
repz
sti
imul
cmp
pop
add
cli
jle
test
in
jnp
jno
and
cld
flds
icebp
push
in
out
inc
inc
mov
data16
sbb
mov
je
int
push
mov
inc
enter
loopne
js
pop
pop
data16
inc
cmp
inc
dec
pop
lahf
jg
jnp
in
loop
jns
or
cmp
cmp
ss
push
dec
movsb
repz
cmp
lods
jecxz
jge
or
aad
fcomps
adc
xor
xor
pushf
orl
mov
cld
xor
imul
cmp
mov
dec
imul
imull
arpl
jmp
cld
orb
cmp
arpl
adc
les
push
push
aas
inc
lock
dec
and
jge
andl
jg
pop
sub
cmc
in
dec
inc
gs
bound
stc
scas
add
fsubr
imul
cmc
dec
jns
inc
push
daa
xchg
push
and
test
push
inc
test
stos
in
lds
inc
xchg
adc
bound
push
orl
movsb
push
aam
sbb
xor
pop
rclb
stos
pop
or
aam
ror
jle
push
cmpsb
cltd
jbe
lret
call
std
test
jmp
mov
stos
xchg
push
xchg
inc
icebp
push
mov
xchg
jbe
mov
pop
pop
loope
fiadds
out
loopne
iret
mov
mov
imul
and
outsb
xchg
jmp
scas
xchg
cmp
movsl
xchg
mov
fidivrl
ds
pop
cmpsb
jge
outsb
mov
aam
dec
popa
movsl
xchg
pop
and
mov
sub
addr16
inc
faddl
lahf
pop
jae
subl
pop
ret
rol
test
inc
fs
cmp
push
scas
xor
push
fdivs
xchg
fistpl
jmp
jmp
mov
mov
repz
inc
mov
mov
mov
jp
lcall
ljmp
repz
enter
cli
out
xor
dec
push
and
imul
mov
notb
stos
mov
xor
jns
pop
jnp
fldl
pop
ja
xchg
pop
xor
mov
aad
dec
jmp
das
dec
add
repnz
bound
xchg
loopne
xor
mov
or
in
dec
into
in
pop
mov
lods
and
repnz
ret
sbb
sbb
nop
cmp
push
mov
sbb
push
cmp
movsl
bound
mov
std
jge
in
mov
sbbl
test
or
cwtl
int
scas
add
jge
insb
sbb
jge
ret
jnp
pop
mov
mov
leave
cmc
adc
outsb
dec
movsb
dec
dec
cmpsl
and
ljmp
mov
adc
sbb
fwait
aad
cmp
stos
loopne
and
push
jge
or
shl
inc
jl
sub
or
insl
pop
pop
rclb
movb
ret
aad
pop
scas
push
int
rcll
dec
fbstp
xchg
cltd
jmp
jo
aaa
pop
add
mov
fwait
adc
jg
out
dec
lahf
ljmp
add
out
pop
pop
out
jbe
cmp
cmp
imul
mov
jo
xor
cmp
inc
andb
add
jae
sbb
xchg
xchg
cmpb
pop
mov
sbb
or
add
cmp
mov
mov
and
xchg
fidivrl
rclb
add
cmp
jbe
lret
imul
mov
leave
insl
mov
mov
and
shlb
popf
fdivs
fwait
scas
rcrb
cmp
mov
push
mov
jo
aaa
xchg
jp
sub
test
push
insl
xchg
ret
jbe
push
sbb
cmp
ret
cmpsb
rorb
mov
data16
mov
add
mov
add
gs
rcrb
adc
push
ret
pop
ret
shl
and
push
addr16
jbe
test
repz
jae
mov
push
lods
or
pop
jle
cltd
pop
xor
mov
movb
mov
jnp
dec
dec
xchg
leave
sbb
jg
insl
sub
pop
sbb
mov
lock
into
aam
into
dec
in
shll
aad
and
xor
dec
mov
popa
mov
movsl
cmp
mov
or
popa
or
imul
and
lods
jbe
sub
test
out
lods
pop
icebp
cmp
push
sbb
inc
int
mov
fidivrs
jle
ret
imul
cmp
mov
mov
call
inc
mov
dec
push
sbb
lea
sahf
ds
sub
pop
push
push
mov
addl
mov
mov
mov
sub
lds
repnz
inc
add
dec
xchg
std
xchg
cltd
or
xor
mov
out
pop
or
daa
popf
les
jns
lea
mov
inc
je
mov
cld
je
sub
loop
or
xchg
in
jns
adc
mov
lret
cld
mov
mov
dec
jg
stos
lods
mull
pusha
add
mov
mov
or
jl,pn
rorl
push
popf
cmc
insl
jb
sbb
xor
mov
roll
adc
dec
sbb
fstps
shrb
jge
add
aam
lcall
mov
xor
cwtl
and
pop
out
fstpt
lods
shlb
jl
inc
push
or
fmul
adc
lods
or
stc
loop
xchg
adc
out
enter
cli
scas
inc
test
adc
inc
rclb
lods
xor
xchg
int3
jne
mov
mov
xchg
sub
bswap
push
dec
stos
and
sbbl
adc
mov
sbb
xor
stos
add
loopne
pushf
pusha
mov
cwtl
icebp
mov
popa
mov
int3
in
in
or
adc
notl
ficoms
inc
sub
mov
inc
cmp
fwait
or
andl
test
adc
jl
pop
dec
or
adc
lret
and
mov
or
mov
jmp
loopne
shlb
add
insl
add
out
mov
aaa
imul
in
mov
pop
arpl
jl
fcmovb
pop
fnsave
out
popa
xor
pop
shll
or
mov
inc
cmpl
mov
outsl
nop
ljmp
dec
addr16
out
mov
push
sbb
ds
sub
scas
loope
jge
cmc
loopne
or
lcall
pop
ds
movsb
into
sbb
jge
add
mov
push
clc
jmp
in
jmp
cmp
test
mov
mov
and
popf
subl
lret
add
aad
fwait
sbb
cmp
pop
in
fistpll
add
cld
and
mov
in
arpl
xchg
repz
pop
mov
punpckhwd
int3
xor
add
sarl
push
inc
insb
cld
sub
mov
mov
daa
xchg
ds
ret
fidivrs
sti
mov
adc
hlt
scas
fdivrl
lea
sbb
push
dec
sbb
xor
aam
insl
cmpsb
and
xchg
mov
xchg
pop
pop
imulb
test
push
clc
cmp
aam
arpl
adc
xchg
shl
push
andb
mov
mov
shll
bound
mov
das
lret
xchg
push
sub
mov
imul
popa
push
pop
daa
cs
stos
fs
daa
inc
xorl
in
lret
imul
sbb
ret
push
inc
lods
sahf
pop
nop
dec
stos
or
scas
daa
int3
std
cmp
and
push
xchg
cmp
push
call
sar
lock
push
aaa
cld
mov
decl
add
and
popa
mov
in
mov
sbb
jmp
sbb
mov
mov
lea
iret
add
testb
out
and
das
movsb
lea
and
ret
movsl
into
mov
push
sbb
pop
sbb
mov
insl
dec
movsb
int
pop
das
faddp
push
jo
ret
pop
cmpl
mov
fwait
clc
inc
imul
int
mov
pop
add
sub
cmc
fstps
sahf
mov
add
mov
cmp
cltd
inc
push
test
xchg
xor
movl
mov
cwtl
mov
enter
dec
sbb
sub
pop
mov
ret
sahf
bound
adc
sub
fnstsw
xor
sbb
push
addl
gs
push
fimuls
xorb
add
jns
jmp
lock
add
jae
es
outsb
dec
add
xchg
adc
icebp
add
das
mov
jl
push
push
cmpb
mov
ret
inc
lea
repz
and
cmp
dec
ja
fdivrl
pop
dec
xchg
and
jnp
jns
es
adc
adc
pop
cmpsb
mov
pop
push
adc
jo
mov
or
mov
inc
lods
ljmp
scas
mov
mov
mov
or
fsubl
js
inc
xor
adc
ja
shrb
pop
je
repz
sub
mov
jmp
fcompl
or
jns
ljmp
mov
and
dec
xchg
dec
incb
or
cmp
es
sbb
mov
inc
xor
scas
popa
in
cwtl
push
imul
nop
pop
xchg
and
mov
push
mov
dec
sub
hlt
and
les
ljmp
fimull
gs
jge
push
push
jp
xchg
int
push
dec
dec
lahf
dec
mov
pop
in
in
cmp
or
cld
fsubl
in
or
xchg
mov
xchg
push
push
mov
inc
cmp
adc
repnz
shll
roll
dec
or
ret
dec
stos
dec
jecxz
pop
stos
stos
dec
jo
repz
pop
and
push
sbb
pop
data16
cld
ja
dec
cmp
fdivrp
test
or
cltd
push
xor
pop
test
mov
adcb
fs
mov
and
sbb
loope
test
xor
inc
or
in
popa
mov
sbb
sti
imul
or
inc
mov
js
mov
pop
push
dec
and
cmp
cmpsb
sub
outsb
jp
pop
sub
in
outsl
sub
in
int3
mov
or
loop
push
jbe
in
lock
mov
addr16
mov
mov
loopne
jbe
shrb
sbb
push
out
xor
hlt
fsubrl
mov
in
nopl
ljmp
and
add
xchg
or
shrl
fsubs
xchg
cs
sbb
pop
mov
pusha
addr16
push
lahf
in
adc
shrb
in
jo
adc
movsb
movsb
pushf
insb
pop
imul
jp
xor
pop
call
ja
lea
sbb
repz
fwait
mov
push
adc
shll
loope
mov
push
iret
mov
or
dec
fistps
das
xor
je
movsb
push
loop
pop
jp
mov
cld
and
sub
mov
int3
imul
push
sbb
cmp
cmp
adc
cli
subl
nop
std
and
pop
int
rcl
scas
or
mov
dec
fimuls
push
mov
xchg
jb
ficomps
xlat
cmpl
outsl
hlt
sbb
movsl
movl
out
cmp
repnz
clc
and
mov
mov
pop
lcall
xchg
daa
out
push
out
rol
xor
ficompl
pop
dec
sahf
jbe
or
fstpt
incb
or
fs
enter
lods
or
xor
lods
lods
fcoms
pop
push
mov
test
outsb
mov
data16
pop
dec
dec
inc
push
fnsave
test
add
in
add
pop
cs
mov
stc
std
sbb
stos
dec
clc
and
jl
imul
and
sbb
push
mov
pop
xor
add
mov
cmpsb
xor
inc
cmp
jne
dec
fldl
lret
into
mov
jg
mov
js
mov
inc
xor
or
sub
mov
shrb
mov
cmp
inc
push
lahf
inc
mov
xchg
pop
scas
dec
imul
pop
mov
scas
outsb
push
fsubs
jmp
aaa
aam
jne
pop
hlt
fdivrs
outsl
aaa
mov
clc
shlb
inc
test
out
sbb
cltd
idivb
dec
loop
js
test
push
mov
mov
dec
into
push
int3
gs
add
push
jnp
xchg
inc
mov
inc
or
pop
pop
or
loopne
xlat
pushl
inc
std
sbb
loopne
call
push
lret
insb
jno
insl
and
imul
nop
sarl
jno
scas
xorb
enter
or
mov
lahf
lds
cmp
rcll
dec
aad
pusha
sub
jb
xchg
adc
inc
pop
jmp
fs
arpl
fsubrs
and
jns
push
cltd
sbb
jno
add
test
and
das
test
in
insb
xchg
bound
push
sbb
xchg
aam
xor
xor
std
ret
ljmp
pop
inc
ljmp
xor
push
pop
jg
push
jne
mov
pop
push
sub
jle
loopne
ror
sahf
ljmp
jb
mov
push
sub
out
repz
mov
or
sbb
cli
cs
cmpsl
push
cmp
jecxz
xchg
mov
repnz
shrb
add
test
insl
imul
test
and
adc
push
inc
mov
push
mov
pushf
stc
int3
cwtl
and
mov
inc
jmp
sahf
test
sub
sub
fnstsw
data16
inc
test
pusha
mov
arpl
jecxz
test
es
pusha
push
loopne
cli
or
push
cmp
mov
mov
add
add
imul
loopne
lcall
insl
enter
pop
call
dec
mov
dec
into
iret
or
push
mov
fisttps
repnz
ja
and
cmp
add
push
pop
stos
or
lock
incl
xchg
das
in
mov
test
movsb
cmpsb
mov
mov
aam
pop
pop
ss
cmp
sbb
je
jo
jne
add
stos
clc
mov
movsl
mov
bound
mov
mov
call
mov
outsb
clc
jle
lret
daa
mov
and
fwait
jg
into
push
ror
stos
mov
aas
test
jmp
pop
xor
cli
mov
imul
mov
sti
rclb
leave
lods
mov
xchg
loopne
adc
addl
inc
sbb
popa
nop
shll
and
ds
out
inc
in
das
rcrl
std
sbb
cli
in
xor
ret
lds
xor
push
or
dec
inc
inc
xchg
xor
add
ret
das
test
inc
and
sbb
mov
pop
xchg
jae,pt
mov
cmp
adc
roll
scas
call
jno
imul
and
movsb
sbb
imul
in
xor
xchg
xchg
sbb
mov
roll
les
into
xor
fsts
mov
dec
push
call
mov
sub
cmp
lds
pop
mov
add
ficompl
mov
pop
sub
mov
xor
add
loopne
outsb
sub
jmp
xor
xchg
cli
sub
stc
pop
stos
clc
int
cmp
fisubrl
in
xchg
push
jnp
stos
xchg
sarb
xchg
add
in
jl
ss
cmp
push
and
lea
insb
cmp
rorb
or
pop
inc
fnstenv
shr
and
jge
dec
out
in
fists
daa
lret
xorb
push
pop
cltd
sub
cmp
and
sbb
mov
cli
pushf
je
or
stos
hlt
jbe
add
sarb
pop
gs
dec
stos
pop
jmp
js
mov
xchg
subb
mov
push
mov
lret
pop
cwtl
mov
aas
mov
cwtl
outsb
ja
flds
dec
int3
in
lock
out
push
xor
or
incl
adc
add
mov
pop
push
leave
shrb
sbb
pop
js
testl
xor
xchg
ljmp
pop
xchg
rcrb
xlat
push
js
adc
rorl
xchg
fwait
sub
lock
inc
cmp
xchg
shrb
push
xor
jge
into
imul
mov
lds
aaa
dec
bound
rcr
mov
sub
out
push
mov
add
cmpl
leave
xchg
and
sbb
dec
test
lods
cltd
js
or
jne
lods
sub
fisubrs
out
in
mov
mov
inc
dec
fcmovbe
cwtl
popf
cmp
jno
or
pop
dec
mov
or
jno
cmp
mov
adc
fdivrs
and
mov
bound
mov
xor
jns
or
pop
into
pop
push
sub
xchg
dec
imul
cmpw
ja
fbstp
or
or
bound
lea
in
sbb
in
sub
imul
cmp
pop
cmp
js
pop
mov
add
lock
loop
icebp
jmp
ss
mov
dec
jmp
bound
adc
adc
mov
push
push
cmp
cmp
ja
inc
pop
aad
cmp
mov
fstpl
mov
outsb
xchg
lcall
insl
ljmp
xlat
lods
shrb
push
cmpsl
int
mov
int3
xor
push
nop
xchg
lret
or
aad
mov
loop
and
mov
aam
inc
fisubrs
mov
mov
jmp
adc
jb
xchg
pop
pop
pop
aam
jne
shl
fidivs
flds
xchg
sub
sarb
les
movsb
test
es
add
incl
sbb
dec
aam
pop
inc
in
dec
repz
cmpsb
cmp
dec
inc
out
mov
iret
pop
xchg
pop
out
fnstsw
pusha
add
cli
xor
jp
mov
or
push
and
add
fnstcw
jge
leave
mov
add
mov
mov
aaa
jp
sub
in
or
mov
iret
insb
cld
imul
and
mov
das
lock
jg
arpl
or
mov
js
add
insl
dec
jmp
es
cmp
sahf
js
cmp
stos
sub
lock
xlat
fcoml
hlt
mov
mov
inc
flds
jo
lret
xchg
push
ror
dec
notb
xchg
mov
rorl
dec
ljmp
sub
jbe
dec
dec
fsts
out
out
lahf
ljmp
sbb
inc
enter
lahf
iret
xchg
loope
xchg
mov
ja
cmp
sub
inc
cmp
andl
dec
pop
test
repz
scas
add
sbb
cmp
data16
in
mov
dec
sub
enter
pop
mov
mov
mov
jo
ret
add
add
or
mov
fidivrs
cmp
fimuls
test
mov
or
pop
xor
out
jbe
fisubrs
mov
loopne
or
jns
pop
dec
fmuls
push
es
dec
out
mov
lret
test
xchg
xor
add
sub
leave
test
gs
aas
inc
loope
sbb
ss
stc
xchg
jb
int
aas
inc
dec
icebp
nop
jnp
jl
mov
popf
ljmp
fmulp
lods
push
stc
pop
daa
xor
dec
pop
rolb
add
cld
pusha
dec
insb
out
dec
bound
orl
fmulp
outsl
subb
lahf
push
xor
sub
mov
sub
popf
mov
xchg
je
hlt
jecxz
fistps
and
dec
add
or
mov
dec
loope
fs
stos
xchg
pop
shlb
and
jle
push
jbe
arpl
fisubrl
rol
jne
stos
fidivrl
jl
push
pop
xchg
nop
out
mov
sbb
subl
test
mov
jecxz
arpl
int
mov
scas
into
pushf
ja
nop
push
cmp
mull
sbb
mov
dec
dec
jl
test
xor
aas
repz
outsl
repnz
lahf
jle
sbb
xchg
and
ds
outsb
std
push
out
cmpsb
outsl
idivl
dec
lret
push
xor
add
xchg
es
pop
push
sub
jo
jle
lret
or
pop
mov
es
int
sbbl
dec
jno
jle
jmp
jno
rorb
pop
lods
popaw
mov
pop
sub
scas
sbb
pop
xchg
aas
inc
or
pop
mov
aaa
jns
mov
inc
pop
out
xchg
cmc
outsb
inc
daa
imul
fbstp
mov
fnsetpm(287
mov
das
in
shll
pop
loope
ss
cmc
pop
dec
pusha
cld
cmpsb
jmp
sub
inc
mov
in
inc
pusha
into
test
adc
pop
popa
sub
mov
out
movsb
lea
pushf
jnp
shlb
jle
jbe
nop
dec
divb
leave
xor
mov
sub
cmp
lret
push
call
mov
sbb
xor
pop
sub
addr16
call
in
fcmovb
ss
imul
or
sub
cwtl
sahf
negb
jo
cmp
push
xchg
cmp
push
add
imul
xchg
mov
loope
pop
insl
lods
ficoms
dec
sbb
mov
or
jb
dec
sbb
stos
fcoms
add
insb
push
sub
mov
and
in
lret
rcl
jne
cmp
inc
sbb
add
ss
cmpsl
fldt
inc
movsb
es
mov
mov
in
cmc
or
int3
sbb
jnp
mov
adc
xchg
scas
imul
rorb
xchg
sbb
jge
and
xor
fs
je
test
rcrl
inc
loopne
cmp
out
or
sbbb
mov
dec
mov
dec
shll
loopne
xchg
das
imul
push
scas
jp
push
jo
psllq
cmp
mov
rclb
repnz
scas
mov
adc
stos
mov
mov
add
call
fdivrs
lock
xlat
mov
ss
call
mov
xchg
cmp
loopne
inc
pop
xchg
push
int3
jns
add
or
sbb
aam
mulb
adc
cmp
mov
inc
sarb
pop
pop
or
rcrb
jle
sub
sti
inc
cs
scas
jp
mov
pop
sub
frstor
mov
insl
or
jecxz
add
pop
cs
scas
push
cs
mov
stos
or
popa
ss
in
pop
sbb
addr16
sub
nop
les
je
repz
sbb
and
clc
je
adc
xor
into
out
js
ljmp
fnstcw
mov
mov
test
outsb
adc
dec
outsb
stos
push
inc
mov
fdivr
insb
aam
popa
scas
adc
xor
inc
lea
add
pop
fiadds
push
sbb
lock
xchg
inc
mov
jmp
push
xor
test
incl
out
incl
shrb
gs
lret
scas
cmc
push
shlb
sbb
push
or
sub
and
jle
push
into
jmp
adc
cmp
fldt
and
mov
xchg
ret
test
cmpsl
ss
jecxz
sub
sbb
sub
repz
imul
adc
stos
popf
pop
and
cmp
push
jp
mov
xchg
jmp
pop
repz
fs
jnp
pop
movsl
or
test
xchg
lock
ja
mov
dec
xchg
xchg
lcall
dec
cmp
out
mov
adc
and
je
mov
bswap
or
push
rol
adc
je
rolb
cmpsb
or
push
arpl
data16
mov
add
pop
in
xchg
in
cmp
inc
in
push
mov
outsb
sbb
or
pop
cmp
jne
cli
mov
push
mov
cmpsl
pop
sub
repz
sub
mov
pop
pusha
sbb
add
ja
jp
loope
add
into
ret
sub
in
push
pop
sub
inc
mov
mov
cwtl
pop
shrl
cmp
pop
cmc
enterw
int3
stos
pop
rol
sbbb
xor
inc
test
stc
pop
mov
je
fidivrs
js
xchg
ror
xor
mov
movsl
xor
mov
lods
pop
enter
popa
sbb
mov
adc
jo
lea
inc
mov
inc
and
mov
loop
insb
imul
add
pop
push
push
xor
loop
pop
aas
in
daa
jl
stos
cmp
cmpl
pop
jne
mov
jne
ficoml
fwait
mov
mov
lds
or
pop
popl
shrl
stos
stc
ficomps
in
sbb
jg
arpl
lcall
add
pop
scas
pop
cli
adc
pop
push
lods
sbb
pushf
jge
or
out
inc
adc
mov
outsb
mov
js
leave
sbb
insl
mulb
lea
dec
jbe
xchg
push
sub
and
aas
aad
ret
cmp
jg
mov
jno
mov
add
mov
mov
inc
in
rep
aas
aam
push
push
arpl
dec
jge
mov
out
es
int3
clc
mov
push
popf
lahf
subb
gs
ret
adc
outsb
mov
decl
xor
rolb
testb
and
popf
lock
test
mov
pop
fists
sub
xchg
jb
aaa
mov
nop
jno
or
mov
cli
mov
xlat
cmp
inc
sbb
pop
mov
mov
inc
loope
cmp
push
jp
fbld
jg
stos
cmc
cmpsl
in
sbb
cli
jecxz
cmpsb
fs
xchg
add
bound
inc
cmp
and
das
fsubl
in
dec
test
subl
vandnps
xchg
lahf
adc
add
in
les
sbb
mov
scas
icebp
rcrl
xchg
dec
in
pop
sub
and
test
sahf
sbb
lcall
pop
add
xchg
dec
adc
and
out
jecxz
out
pushf
insb
cld
cmp
adc
cmpsb
add
sbb
les
push
aad
mov
xchg
fdivrl
or
cmp
in
mov
call
stos
subl
imul
int
push
cmp
add
out
imul
popf
pop
jbe
test
mov
push
sahf
inc
nop
jle
nop
test
jae
lods
mov
cwtl
xchg
aas
int
mov
stos
mov
int3
lods
xchg
testb
daa
and
popa
jb
cld
rorl
xor
rcll
int
movb
fisttpll
testl
test
cmp
repz
leave
repnz
cmpsb
inc
fcomip
xor
jb
cmp
fbstp
loope
or
imul
test
pop
mov
sbb
stos
dec
sti
or
cmp
sbb
adc
mov
jnp
jp
std
inc
sbb
and
mov
ds
out
movsb
cmp
fimull
cmpsb
and
or
in
mov
lds
xchg
push
mov
sbb
test
arpl
iret
insl
ret
mov
int
aam
lods
mov
shrb
sub
leave
imul
adc
shld
fcomps
fldenv
into
push
sti
push
int
xchg
cli
cld
shlb
call
aad
jnp
jp
sub
jecxz
je
repnz
ds
inc
pop
pushl
stc
scas
pushl
jecxz
shrl
add
push
sahf
sahf
out
push
stc
insb
cmp
xchg
pop
bound
aaa
pop
adc
jbe
shrb
sti
repz
movsb
sub
leave
jne
into
inc
inc
aaa
idivb
xchg
ficoms
add
adc
fwait
in
into
mov
mov
lret
out
push
dec
les
aam
cmp
mov
pop
mov
cmpsb
nop
dec
cmpsb
out
and
push
popf
stos
ficompl
nop
pusha
dec
add
jnp
lahf
push
fdiv
sbb
mov
subb
sbb
jno
mov
mov
xchg
pop
jl
mov
pop
sbbl
and
xchg
inc
cs
and
sbb
sbb
rcrb
pop
lcall
repz
xchg
testb
rdmsr
fisttpll
sub
aad
mov
mov
cli
outsl
in
add
and
in
cmpsb
popa
in
inc
es
andb
mov
cmc
lds
lfs
sub
dec
lret
cs
mov
sub
std
in
sahf
push
fld
call
test
cmp
fistpl
push
ss
decb
popa
xor
push
mov
mov
mov
rol
add
jo
imul
das
arpl
or
ja
clc
jae
dec
cmpsb
fistpll
sub
pop
sub
test
push
js
cwtl
pop
cmp
add
mov
mov
jmp
sti
dec
cmpsb
push
dec
cmp
lods
gs
out
arpl
mov
nop
jae
dec
add
insb
leave
repnz
loop
ss
sub
clc
enter
sub
popf
decl
in
mov
rol
jl
add
pop
jmp
jnp
subb
out
xchg
hlt
xor
movsb
lods
cmp
xchg
es
inc
mov
sbb
cmpsb
test
dec
fldt
sbb
shrl
aas
jle
imul
pushw
sahf
push
add
lahf
push
sub
push
and
jmp
mov
pop
push
sahf
xor
jmp
push
fnstsw
inc
rol
loopne
xchg
aas
xor
cli
sub
inc
push
jp
cmp
mov
jne
fidivl
rorb
mov
clc
ficompl
xchg
dec
and
mov
cmpsl
das
sbb
iret
in
and
push
push
inc
into
pop
mov
call
iret
dec
inc
fildl
push
xchg
dec
lock
xor
push
push
dec
sub
frstor
or
movsl
daa
cmc
into
fidivrs
xchg
in
and
mov
insb
pop
dec
sub
mov
loop
lea
xchg
xor
xor
imul
inc
test
cwtl
sub
jno
dec
mov
mov
push
ret
mov
xchg
mov
sahf
popf
mov
jbe
mov
xchg
fmull
ss
pop
add
xchg
ljmp
pop
adc
mov
mov
mov
mov
int3
div
lds
shl
mov
pusha
in
sbb
iret
cmpsl
aas
mov
icebp
adc
std
mov
add
inc
fld
mov
dec
dec
lds
jl
jmp
jnp
movsl
add
insl
push
enter
add
clc
lret
fsubl
je
jecxz
pop
mov
and
jae
cmp
adc
cmp
out
fwait
psubq
aad
inc
xchg
pop
sbb
nop
lods
popa
out
xchg
and
xchg
xchg
repz
pop
cs
cmp
lock
xchg
fsub
xor
jbe
jl
in
jmp
rorl
cmp
add
int3
sub
in
fisubl
cli
pop
cs
add
and
or
lock
add
jne
ret
jl
and
xor
stos
repz
sarb
adc
adc
xchg
push
sar
cmp
adc
popf
dec
testl
cmpsl
sahf
sbb
sbb
repnz
and
or
push
mov
and
mov
xchg
jmp
pop
pop
lea
icebp
sbb
testb
cmp
mov
dec
fnstcw
dec
jge
in
flds
stos
adc
fstpl
add
sub
cwtl
mov
stc
roll
cld
stc
aas
ljmp
push
dec
ficompl
ret
popf
scas
jle
or
pop
imul
pop
or
push
mov
mov
cltd
enter
and
in
xchg
subb
mov
sbb
dec
insb
jnp
adc
mov
dec
push
xor
jae
les
in
push
ret
mov
jge
iret
cmp
ljmp
leave
gs
fscale
xchg
popa
fidivrl
cmp
mov
and
das
inc
mov
ja
jmp
mov
loop
xchg
fsub
movsb
in
lret
outsb
ljmp
mov
hlt
mov
imul
ret
adc
ja
mov
mov
lods
imul
adc
fstpl
test
sub
adc
iret
dec
jb
mov
inc
nop
addr16
loope
lock
mov
movsl
mov
xchg
lds
or
sbb
cmpsb
in
cs
imulb
lea
xor
fistpl
jge
rclb
shlb
addr16
mov
push
fxch
inc
mov
add
daa
adc
jnp
bound
xlat
imul
fs
mov
shrb
sbb
sbb
popa
push
lcall
pusha
repz
xor
adc
dec
data16
ss
adc
jecxz
sbb
add
dec
lret
xchg
sti
add
cs
iret
mov
jo
mov
loop
std
xchg
out
cltd
cwtl
mov
xor
push
sub
inc
jmp
das
lcall
sbbl
sahf
daa
xor
mov
dec
and
jo
push
sbb
pop
cmp
fwait
sti
push
dec
pop
sbb
and
xor
ljmp
jg
sub
push
fistl
mov
sbb
outsb
loope
js
hlt
add
or
ja
jnp
xchg
or
cmp
arpl
mov
out
popf
addl
sbb
out
jge
es
dec
stos
jne
fwait
cmp
and
push
xchg
mov
xchg
sarb
add
clc
xlat
aaa
jmp
cmc
mov
cmpl
clc
fisubrs
enter
sbb
sub
pop
mov
and
ret
cli
adc
insl
inc
xorl
in
xchg
lock
popa
lods
cmp
pusha
das
cmp
out
or
adc
cmpsl
and
and
test
xor
push
jp
lods
mov
jns
aaa
jbe
les
sbb
xchg
repnz
shl
sti
ljmp
and
icebp
xor
fnop
adc
cs
les
mov
sbb
xchg
test
ljmp
sti
das
lods
imul
imul
ja
cld
mov
in
xor
fnstsw
bound
das
ret
adc
dec
sub
es
es
arpl
push
pop
gs
pop
ret
std
aam
jnp
sub
xchg
adc
or
ret
mov
outsb
in
inc
mov
push
dec
int
test
sub
xor
xor
ds
mov
clc
sub
xchg
sbb
shll
and
sbbb
or
popf
mov
rclb
mov
inc
adc
call
daa
sti
daa
adc
dec
popf
cmp
into
fsub
cmp
ret
jno
cmp
test
fucomp
mov
dec
dec
push
flds
clc
cltd
imull
test
aaa
in
sbb
movsb
jmp
pop
ror
xchg
and
xor
cmovs
jnp
pusha
lahf
adc
adc
xorb
pushf
xor
jecxz
outsl
or
xchg
outsl
sub
popf
clc
mov
xor
data16
ljmp
dec
pop
popf
inc
jge
dec
inc
xchg
mov
or
arpl
or
cmp
inc
or
inc
push
ret
lea
test
movsb
dec
orl
sub
dec
pop
pop
fistpl
pop
test
lock
jmp
pushf
push
stos
rcl
jge
xchg
insl
jo
mov
lock
push
mov
add
cmpsl
shlb
inc
mov
dec
push
xchg
xchg
fisttps
dec
and
xchg
ja
dec
inc
mov
ret
ds
mov
push
std
nop
jmp
dec
mov
out
cmp
jmp
pop
add
adc
mov
sbb
xchg
iret
cltd
add
imul
mov
test
gs
das
movsb
jne
and
out
rolb
cltd
xor
adc
inc
xor
fcomps
nop
inc
cltd
sub
jecxz
repz
pop
mov
mov
ds
jae
mov
sub
hlt
push
fisubrs
lahf
out
mov
lahf
addr16
leave
sar
jp
push
pushf
lds
fidivs
mov
int3
je
ja
stc
je
inc
fstpt
mov
jb
pop
pop
pop
jmp
mov
xchg
sbb
xlat
jne
lcall
sub
jo
lods
fdivrp
icebp
cmpsl
stos
shrl
pop
jmp
pusha
push
into
mov
adc
or
rorb
push
cs
mov
dec
and
rolb
dec
jle
inc
push
decb
aad
insb
or
lock
push
mov
rorb
pop
iret
in
push
xchg
xchg
inc
jmp
mov
rcrl
mov
loope
lret
pop
les
orb
sub
and
and
fs
cmc
xchg
mov
andl
lock
stos
mov
call
lret
andl
or
pop
mov
mov
xchg
jae
fwait
sarl
leave
mov
jg
outsl
jb
mov
or
jecxz
filds
imul
cmp
cmpsl
dec
mov
sub
xchg
push
out
or
cmpsb
pop
cltd
and
push
add
cli
fwait
ret
daa
dec
int
xchg
push
imul
addr16
and
cmp
or
and
jne
cwtl
or
fldt
test
adc
sbb
mov
xlat
sbb
pop
xor
xchg
movsl
add
xor
lret
jno
nop
and
orb
dec
jl
and
ffree
ja
add
mov
xor
popa
mov
arpl
xor
fs
cld
pushf
xor
push
mov
mov
inc
cld
dec
mov
mov
shrb
jmp
pop
loopne
pop
jmp
add
mov
jbe,pn
sbb
loope
mov
es
mov
fcoms
outsb
adc
cwtl
and
sub
xchg
lahf
xchg
xchg
xchg
mov
sti
add
inc
inc
mov
pop
sbb
aas
xchg
out
shlb
dec
jbe
sbb
pop
xor
push
popa
mov
scas
sete
popa
mov
inc
pop
les
aas
mov
mov
jecxz
xchg
jg
int3
and
jp
jp
popf
or
mov
pop
dec
arpl
test
adc
lods
in
pop
cmpb
jmp
pop
outsb
mov
loope
sbb
fbstp
pop
movsb
mov
repnz
push
cmp
mov
pop
cmc
mov
ret
push
push
sub
xor
or
xchg
or
mov
test
mov
data16
dec
pushf
mov
cltd
out
outsl
scas
push
xor
mov
cmp
xchg
xchg
pop
push
jnp
ds
out
out
sbb
jge
test
push
loopne
xchg
mov
inc
xchg
cmp
orl
cltd
cmp
pop
bnd
push
cmp
pop
sarb
xor
in
pop
adc
lret
inc
cld
outsl
jg
or
xor
clc
arpl
xchg
lret
jmp
shrl
lret
shrl
imul
sbb
out
lock
insl
adc
sub
push
add
iret
xchg
adc
sbb
cmp
add
adc
xlat
int
dec
lods
cld
pop
fdivp
iret
xchg
xchg
hlt
dec
lock
icebp
sbb
cwtl
xchg
in
decl
cld
and
sbb
pop
out
shll
inc
xchg
push
inc
out
and
jmp
andb
shll
pop
cltd
jbe,pn
adc
pop
dec
push
or
inc
or
mov
imul
ret
add
gs
fnstsw
fcoms
addl
mov
push
add
ds
cmp
and
adc
shll
pop
adc
push
and
dec
jb
xchg
jb
mov
test
pusha
movsl
dec
xchg
cwtl
ss
repnz
xor
mov
out
jne
push
pop
es
cmpsl
add
xchg
iret
lcall
push
ret
outsl
jae
cmp
aam
xchg
adc
pop
int3
cld
rorb
cmp
fwait
mov
push
mov
je
mov
xor
test
test
inc
inc
dec
or
mov
inc
ret
addl
adc
test
out
nop
iret
mov
pop
adc
mov
lock
pushl
pop
jge
push
push
data16
jnp
rorl
push
pop
jmp
test
and
jnp
lods
cltd
cld
push
inc
cmp
movsb
movsl
decb
jmp
dec
xchg
aam
aad
imul
insl
cmpsl
es
in
mov
call
push
inc
icebp
int3
lahf
pop
sub
jl
cwtl
lock
negb
outsb
push
aam
mov
fisttps
adc
mov
or
mov
mov
loopne
scas
and
push
add
push
cs
sub
sbb
or
add
repz
call
mov
push
sub
fdivr
gs
sub
and
das
add
cltd
jp
enter
add
movl
adc
in
lock
sahf
fistps
in
pop
cmpsl
sahf
cwtl
jns
jmp
call
imul
dec
ljmp
adc
and
mov
nop
jnp
leave
aaa
test
mov
jne
int3
cmpsl
fimull
jp
aam
mov
cmp
mov
stos
push
jne
lret
jg
lret
sub
inc
imulb
adc
xchg
mov
add
dec
mov
sbb
sahf
mov
jg
cwtl
fistpll
add
push
add
mov
pop
push
jno
jae
mov
lcall
push
in
or
movsl
arpl
sub
fisubrs
mov
jg
les
dec
add
or
lock
push
fincstp
mov
cld
inc
mov
inc
inc
push
mov
xchg
xchg
push
push
inc
dec
in
and
enter
icebp
fistps
pop
push
aaa
cmpsb
cs
sub
lock
push
jae
movsb
mov
shl
and
or
jne
lret
dec
cmp
out
stc
jne
sti
lahf
push
push
out
mov
dec
ja
xor
mov
xchg
mov
sti
and
xlat
mov
push
bound
xchg
add
xchg
sti
mov
sarl
outsl
pop
cmp
mov
push
jmp
std
cmp
pop
mov
frstor
shrl
mov
mov
xchg
lcall
pop
or
mov
cli
xchg
cmpsb
aad
xchg
pop
test
mov
adc
leave
and
nop
out
cmp
stos
inc
hlt
hlt
or
add
pop
adc
lock
pusha
shl
mov
xchg
xor
adc
mov
cmp
jecxz
outsb
cltd
and
xchg
ljmp
movsb
stos
jo
xchg
mov
scas
or
cmc
dec
add
stos
mov
pusha
call
stos
test
adc
jmp
inc
jae
inc
pusha
test
jecxz
clc
dec
mov
lods
cmp
push
and
push
sbb
cli
push
lret
and
push
pop
sbbb
sub
cmpsl
sahf
push
ja
pusha
sbb
dec
mov
lods
fistpll
cmpsb
jle
xchg
sbb
jle
rolb
inc
out
inc
sti
shrb
jg
mov
adc
hlt
sbb
cmp
test
int3
insb
cmc
pop
jmp
mov
pop
test
subb
popf
cmp
in
push
lret
sbb
sub
loope
cltd
xchg
xlat
aas
cltd
xchg
js
dec
pop
inc
out
sub
xchg
in
stc
dec
xchg
call
lret
jecxz
rclb
icebp
iret
ret
bound
lcall
mov
add
mov
adc
xor
lahf
out
mov
push
fsubl
sbb
push
lret
mov
test
sub
push
sub
sub
ljmp
xor
rorb
sbb
rclb
leave
cmp
inc
adc
cmpsb
adc
rdtsc
push
divl
cmpsl
xor
sahf
filds
xlat
pop
mov
cli
xchg
jp
add
mov
adc
mov
movsb
mov
mov
roll
xor
loope
negb
ret
pushf
xor
xor
sub
mov
cmp
rcr
pop
pop
mov
jno
xor
mov
mov
shll
adc
test
add
int3
and
insl
jae
and
repz
pop
sub
imul
cmpsl
inc
or
pop
gs
xchg
jecxz
cmpsl
or
stc
bound
aad
fldl
dec
pop
push
shl
lret
call
xchg
in
cltd
sub
dec
sbb
mov
cmpsl
xor
inc
or
push
ja
dec
and
sub
pop
and
test
ror
mov
bswap
add
outsb
sbbb
xchg
add
cmp
push
xchg
xchg
aaa
popf
push
mov
mov
aas
inc
jno
pop
loopne
ljmp
movsb
xor
inc
or
ja
mov
popa
cmc
icebp
pop
sahf
fidivl
push
push
add
sbb
mov
or
mov
xchg
add
aam
sti
xlat
cmp
push
mov
sbb
lret
xchg
shrl
jecxz
dec
xchg
ss
adc
js
adc
outsb
addr16
pop
cs
cmp
in
pop
pop
cmp
pop
xchg
shrl
nop
cmp
push
in
int
call
stos
jno
leave
out
ret
mov
mov
adc
fmull
loop
lahf
mov
or
ja
or
je
inc
push
and
push
xchg
ljmp
in
in
lret
jns
psubq
leave
mov
mov
push
xchg
xchg
cmpsb
mov
mov
adc
or
into
and
dec
mov
mov
pop
fdivp
add
or
fs
mov
icebp
pop
xchg
pusha
sub
aas
xor
lods
inc
pop
mov
cmp
sti
jge
outsl
sti
add
cmpsl
enter
fxch
cmpsl
or
jp
jmp
sti
mov
and
mov
xor
mov
cmp
mov
cmp
out
ret
cmp
jmp
fidivs
mov
stos
push
jbe
xchg
repnz
inc
push
out
sbb
cltd
cs
dec
pop
repz
and
test
ljmp
cltd
cmovs
scas
xor
imul
stos
push
jp
outsl
data16
in
mov
inc
push
repnz
lret
and
sarb
push
xor
loopne
pop
movsb
adc
inc
scas
and
push
mov
inc
aas
movsb
int3
push
bound
cltd
sub
stc
js
in
sub
cmpsl
xchg
jno
push
dec
mov
and
cmpb
imul
push
repz
or
mov
xchg
jp
das
mov
inc
push
outsb
and
inc
adc
les
add
es
insl
push
jle
mov
inc
mov
rclb
jb
movsb
and
lods
add
xorl
xor
jmp
nop
push
xchg
idivl
xor
adc
fmul
pop
aad
loop
inc
shlb
insb
xchg
sbb
scas
push
jle
xchg
xor
std
fadds
ret
pop
dec
xchg
nop
jb
jbe
jl
dec
mov
inc
mov
inc
cmp
xchg
cmp
outsl
jnp
push
adc
inc
in
jae
dec
add
xchg
test
mov
insl
xchg
outsb
or
push
dec
mov
hlt
cmp
inc
dec
inc
add
xor
enter
jle
clc
xor
xorb
mov
and
jnp
fwait
cmp
pop
add
jg
test
arpl
xor
in
mov
fistps
add
hlt
dec
adc
cmp
pop
stc
xor
mov
stos
sub
aas
mov
mov
mov
out
mov
and
push
scas
loopne
mov
pop
dec
sub
rorl
push
sbb
cmp
push
cmpsl
jecxz
sub
jb
push
add
mov
jl
xchg
roll
xchg
fldcw
out
and
movsb
lods
les
sar
inc
sahf
and
adc
enter
pop
and
mov
inc
jbe
icebp
sahf
add
push
cmpsb
lods
sub
mov
xlat
imul
mov
cmp
xor
sub
out
daa
jg
aam
and
lahf
mov
add
outsl
les
ds
jecxz
pop
pop
and
addr16
cmp
xor
dec
das
outsb
lods
pop
imul
pop
adc
add
outsl
imul
pop
sbb
push
adc
sbb
mov
shrb
incl
addr16
iret
ret
in
mov
sub
xor
cmp
inc
sub
sbb
or
or
loope
movsl
push
js
pop
repnz
jg
jge
scas
and
rclb
or
aaa
and
mov
shlb
xor
push
push
aaa
mov
push
push
sbb
sbb
cmp
mov
jb
sub
in
lret
jns
sahf
and
mov
inc
jne
icebp
push
gs
mov
mov
mov
lcall
mov
or
rcr
sub
mov
inc
dec
and
clc
xchg
mov
xchg
or
fisttps
dec
mov
xchg
arpl
lahf
test
mov
or
repz
adc
je
bound
ja
inc
stos
ss
inc
out
jecxz
jne
hlt
fldl
sti
jo
lret
inc
sbb
pop
jl
das
push
mov
push
sub
xor
dec
mov
pop
rcll
lods
cmpsl
cmp
sub
or
int
push
addr16
out
addr16
xor
jp
aas
sub
std
rclb
clc
cld
cmp
inc
jge
test
xor
adc
jne
push
imul
sub
in
jne
xchg
sbb
mov
xlat
mov
fisubs
pop
inc
test
rclb
add
sbb
fistps
push
fdivrl
xchg
pop
sub
cmpsl
fimull
jle
pop
sbb
idiv
mov
call
mov
jmp
shrb
push
adc
shrd
jbe
jae
std
mov
jmp
xchg
test
fisubl
xchg
pop
push
mov
stos
mov
or
xor
and
je
xchg
int
lock
stos
lret
cmp
sahf
ljmp
addr16
pop
jecxz
aad
outsl
std
fcmovb
hlt
aam
or
sbb
add
mov
xchg
fists
mov
dec
inc
cli
xchg
cmpl
ss
out
lds
pop
lahf
or
rolb
cwtl
sbb
xor
std
fdivrs
and
xchg
mov
enter
push
push
jmp
leave
sbb
test
ss
fidivs
and
mov
sbb
rcrl
imul
js
enter
mov
sbb
xchg
push
gs
sub
pop
cltd
stos
div
and
sub
push
sbb
fdivrl
test
inc
rcr
mov
add
add
inc
insb
test
adc
fisubs
mov
xchg
movl
out
add
mov
popa
adc
shr
sbb
push
sub
and
pusha
nop
out
jmp
mov
ljmp
inc
cmp
in
push
es
mov
push
push
clc
jbe
sub
in
or
jl
rolb
js
cs
cmp
shlb
add
nop
shll
mov
add
shll
xor
inc
decl
mov
inc
mov
dec
sbb
sbb
xchg
mov
int
push
sbbb
jno
mov
in
pushf
xlat
and
mov
movsl
jae
cwtl
lcall
cmpsb
lods
push
sbb
outsl
xor
cli
lea
outsb
imul
or
mov
imul
inc
push
lahf
and
or
test
inc
ret
aaa
sbb
dec
dec
xchg
cmp
cmp
and
push
outsl
mov
xchg
push
cmp
mov
in
and
adc
jno
add
movl
pusha
out
jle
pop
dec
jnp
fmuls
and
add
mov
insl
xchg
aaa
setle
dec
mov
jp
mov
jno
sqrtps
outsb
lock
cmpsl
mov
ja
lret
ja
ret
mov
roll
cmp
stos
movl
jp
cltd
inc
push
xchg
nop
mov
cld
test
push
nop
cmpb
cwtl
add
dec
xchg
scas
lret
add
sti
outsl
adc
pusha
inc
add
outsb
notl
mov
jb
xchg
sahf
jecxz
xchg
xlat
pusha
mov
shrl
pop
in
sbb
pop
inc
mov
jae
sub
ret
sub
pop
addl
lock
lret
sbb
test
test
mov
stos
jl
jns
in
jb
sbb
and
push
fisubl
lahf
xchg
in
fwait
lea
in
je
ret
push
test
rolb
ds
lods
inc
or
shlb
mov
adc
pop
sub
mov
fisubrl
xor
push
fcoms
clc
fnstsw
fwait
rolb
xchg
cmpb
pop
adc
dec
push
dec
cmp
sub
mov
testl
adc
adc
jae
push
adc
push
je
jecxz
dec
aaa
push
mov
and
sbb
add
mov
push
imul
add
scas
sbb
pop
in
and
mov
mov
lods
push
push
inc
jbe
jp
jne
push
xorb
jmp
mov
mov
xlat
ds
dec
adc
sbb
insb
dec
lods
loop
xorb
mov
mov
cli
popa
cmp
and
out
or
push
es
sub
push
lea
sub
push
cs
sub
add
sub
mov
and
push
leave
xchg
pop
aam
imul
jnp
jecxz
pop
lods
jmp
into
aas
jle
xor
hlt
add
sahf
push
push
lds
lods
fld
and
shlb
sub
push
rcrb
in
push
lcall
sbb
or
dec
pop
pop
jne
aas
push
inc
adc
loope
pmullw
mov
sbb
into
push
push
ljmp
jns
jo
adc
or
ficomps
xchg
ret
lock
pop
pop
out
xor
cmp
movsl
ret
mov
xorl
outsl
pop
xchg
aam
or
aas
push
ja
mov
js
insl
mov
fildl
subb
fidivs
mov
arpl
test
fbld
es
add
sahf
outsl
test
push
jecxz
movsl
call
lret
movsl
test
das
popf
push
shl
bound
mov
or
popa
jmp
lret
xlat
or
imul
lret
movsb
out
test
pop
fwait
add
fistpl
sub
add
cmp
test
or
je
inc
popa
and
add
pop
lret
stos
add
iret
jle
mov
sti
mov
cmp
push
movsl
jecxz
iret
sbb
mov
xor
inc
mov
mov
ret
sbb
iret
movsb
mov
jae
ja
mov
xchg
pop
mov
push
bound
fwait
mov
repnz
ljmp
inc
mov
mov
clc
test
add
xor
icebp
js
add
out
mov
andl
sub
test
pop
lds
in
mov
xor
push
scas
add
jnp
xorl
jbe
test
fwait
push
mov
lock
mov
jns
aaa
xchg
call
lods
sub
add
daa
js
movsl
push
lock
aas
sbb
xchg
or
aad
mov
sbb
das
adc
jnp
push
pop
cmp
loop
and
lods
mov
adc
pop
fisttpll
outsb
push
cltd
cmp
cmp
jns
jno
mov
cmp
fnstenv
test
addr16
pop
insb
dec
sub
mov
je
pop
xor
repz
mov
mov
repz
inc
xlat
adc
out
in
mov
and
into
mov
ja
test
lret
loopne
cld
push
jecxz
lret
adc
push
in
mov
sbb
add
inc
jmp
mov
sahf
arpl
enter
dec
push
push
inc
cmc
scas
jnp
jecxz
add
xchg
xchg
mov
stos
mov
jae
adc
pop
loope
sbb
roll
xor
adc
sbb
xchg
daa
cmp
add
inc
daa
insl
xor
jp
sub
and
mov
outsl
into
leave
xor
aaa
mov
cmc
sahf
test
pop
jmp
pop
je
stos
leave
std
cmpsl
push
nop
pushf
test
int
test
dec
mov
int3
nop
adc
mov
xlat
push
xchg
lcall
inc
push
xor
xchg
mov
jb
xor
cld
ljmp
lret
in
sub
sbb
adc
push
stos
out
int
and
out
mov
fsts
loope
jae
cltd
mov
imul
scas
mov
xlat
cltd
sub
out
scas
jmp
pop
mov
iret
imul
iret
cmpsl
or
hlt
jle
push
fistpl
and
fnsave
inc
mov
movsb
jbe
dec
adc
testl
es
popa
mov
cmc
jle
fbld
ss
or
adc
mov
mov
popa
int3
and
int
adc
cltd
jbe
lods
insl
fnstsw
dec
sub
ret
mov
movsl
and
xor
and
sbb
pop
mov
sbb
xchg
arpl
subl
or
jl
mov
jp
inc
pop
stos
fnstenv
mov
mov
and
sub
push
test
adc
int3
cli
test
mov
mov
mov
test
test
icebp
push
inc
jbe
push
rcll
cwtl
mov
push
mov
flds
push
shlb
sar
pop
sbb
xor
add
or
mov
popa
xor
imul
push
pop
imul
adc
push
leave
cmp
inc
xchg
or
cmp
loop
repnz
push
cmp
mov
push
sub
fs
rorb
adc
cmp
mov
mov
fwait
mov
jp
push
inc
movsl
mov
and
pop
je
dec
jnp
pop
mov
rclb
push
jecxz
mov
mov
call
inc
xchg
fsubs
lds
sbb
inc
in
lea
loopne
jp
pop
xchg
mov
push
repz
push
push
add
pop
push
repz
pop
lcall
mov
and
in
sbb
and
mov
mov
and
push
dec
pop
mov
xor
mov
adc
lock
ljmp
sbbl
push
addb
test
jnp
mov
add
adc
ljmp
in
cmpsl
xchg
push
or
in
push
iret
pop
xchg
push
adc
xchg
and
pop
leave
pop
jae
inc
jmp
jb
aad
testl
xchg
in
jp
pop
pop
xchg
cs
imul
xchg
ja
jp,pn
pop
jecxz
test
mov
inc
fcmovnbe
pop
xor
popf
xchg
nop
push
or
icebp
fwait
push
int3
mov
fadds
push
inc
sahf
lret
pop
jno
xor
icebp
sbb
lcall
pusha
pop
icebp
repz
and
fsubr
xor
sbb
movl
sub
add
popa
mov
out
cmp
sqrtps
fsubrl
add
sbb
stc
cmpsl
test
adc
xchg
cli
and
cmpsl
xchg
xor
jno
cmp
outsb
sbb
adc
daa
and
fmull
repz
fcompl
int3
and
mov
not
bound
or
fildll
leave
fdiv
icebp
or
pop
leave
daa
jns
sbb
in
add
outsb
jnp
lcall
std
ljmp
jecxz
add
and
std
mov
jmp
aad
pop
cmp
mov
out
fcompl
inc
insl
cmpsb
scas
filds
bound
cmp
inc
mov
test
aas
push
jle
in
clc
push
mov
mov
js
inc
cld
pop
pop
or
pop
dec
lcall
dec
xchg
sub
push
push
inc
divl
std
jmp
mov
in
or
sti
push
adc
mov
sub
cmc
cld
lods
push
sbbl
fdivr
adcb
hlt
pop
repz
stos
sub
ja
scas
push
mov
pop
insb
bound
xor
mov
xor
xor
and
bound
jp
in
inc
inc
gs
adc
jnp
rcrl
sahf
arpl
test
mov
sbb
or
loopne
and
out
fistpl
push
mull
jle
ja
fsubs
aaa
arpl
push
jge
lods
mov
es
jne
and
out
outsl
sub
xor
fdivrl
fcomps
loop
iret
cld
bswap
inc
icebp
test
adc
adc
adc
je
inc
test
es
in
add
dec
xor
push
xchg
lcall
in
test
cmp
cltd
rorb
add
adc
jge
and
insb
cmp
pop
data16
xchg
mov
rcl
fnstenv
outsb
jo
jb
xchg
xor
mov
xchg
data16
dec
add
movsl
cmpsb
test
add
jno
das
in
jnp
sub
lcall
sub
push
fwait
and
xchg
xlat
cmp
sti
dec
jno
dec
test
pop
sbb
out
pop
and
mov
cmp
push
aad
ficoml
jp
fwait
push
jmp
cmp
xchg
addr16
cmpsl
jae
mov
mov
cmpsl
xchg
rorb
or
jne
pop
jmp
stos
data16
xor
scas
dec
inc
dec
add
push
xor
rorb
mov
or
mov
mul
scas
sbbb
mov
leave
out
cmp
les
in
pop
fistl
adc
pop
sbb
mov
dec
add
mov
mov
xchg
stos
shlb
jb
les
fidivl
push
push
pop
data16
push
pop
es
push
jmp
mov
pop
outsl
dec
xchg
sahf
dec
cmp
outsb
add
addr16
xor
daa
ret
cmp
js
es
clc
loop
inc
push
sbb
ret
jb
inc
add
in
fwait
xchg
xchg
inc
jbe
sbb
push
jg
je
pop
and
addr16
adc
sarb
add
jecxz
testl
jmp
scas
rolb
hlt
xor
jb
xchg
shr
mov
mov
xchg
adc
or
xchg
ret
mov
rol
jecxz
xchg
or
adc
icebp
jp
test
pop
ret
das
sbb
push
adc
xor
jae
push
fisttpll
sub
push
add
and
outsb
jne
jle
xchg
pop
or
adc
xorl
inc
mov
inc
rolb
sbb
push
lods
push
les
push
lds
popa
and
sub
jae
arpl
mov
loop
arpl
adc
test
xorl
or
push
out
ret
fcoms
jmp
push
lea
cld
pop
add
mov
inc
sarl
jl
push
push
enter
loope
div
data16
out
pop
mov
jns
dec
sbb
adc
dec
xor
jb
and
push
sti
es
dec
mov
jno
sbb
xchg
inc
and
aam
dec
lea
sub
xchg
jo
js
icebp
mov
fs
cmp
arpl
shrl
dec
cs
push
sti
lods
and
push
daa
in
cltd
daa
pushf
xor
dec
xchg
jmp
daa
xlat
lahf
imul
rolb
xchg
std
mov
add
ret
movsl
movsb
push
fisubrs
push
jle
jns
xlat
repz
or
push
mov
mov
adc
std
sub
xlat
mov
fldenv
mov
pop
sbb
insl
push
push
push
cmp
insb
test
sbb
rcrl
scas
ss
and
paddusb
mov
adc
out
icebp
nop
jle
pop
leave
or
fisubrl
insl
fwait
push
xor
inc
repnz
fwait
je
mov
ds
mov
sbb
mov
push
stos
jb
cmpsl
lods
sbb
or
xchg
or
ss
xor
mov
inc
inc
mov
leave
jae
push
xchg
sub
fnstsw
xchg
xchg
iret
jmp
jne
and
std
sub
push
movb
dec
mov
push
jl
sbb
lods
mov
movsl
lock
inc
add
xchg
cmp
sbb
jge
adc
add
pop
enter
insl
sub
xchg
jno
iret
push
and
leave
and
push
mov
out
sbb
stc
call
jge
std
aas
es
popa
mov
jo
inc
orb
lcall
or
lds
lock
mov
mov
mov
int3
push
xchg
pushf
les
dec
jo
push
xor
sub
mov
out
in
dec
mov
inc
incb
repnz
int3
int
mov
jg
cli
call
lods
mov
xor
adc
jns
test
lret
add
mov
cli
push
loop
ret
dec
jl
pop
fisubl
leave
mov
cmp
mov
xchg
or
xchg
pop
fisttpll
stos
mov
dec
ret
cmpsb
dec
sbb
mov
xor
lods
mov
or
sbbl
xor
insl
or
or
mov
insl
inc
cmp
push
je
outsb
add
cmp
ds
xchg
cmc
orb
add
filds
mov
test
fdivr
xchg
pop
adc
es
ja
cmpb
fidivl
shlb
ds
mov
fdivs
adc
cmp
pop
and
shll
sub
xor
add
sbb
imul
hlt
xchg
adcl
out
faddl
nop
test
pushf
sbb
ja
js
fwait
pop
subl
ficomps
pop
inc
cmp
movsl
test
mov
test
out
push
negb
fwait
cli
push
arpl
or
les
jl
faddl
fldl
loope
gs
jge
outsl
call
in
and
sub
and
cwtl
dec
xchg
mov
gs
mov
and
andl
sbb
daa
mov
ret
push
jne
divl
imul
test
int
inc
lea
and
sahf
add
shll
cltd
jmp
push
out
push
or
add
mov
add
mov
or
jae
into
mov
mov
cld
call
push
and
mov
push
xchg
push
outsb
mov
push
clc
fwait
out
mov
out
pop
mov
data16
dec
fmuls
icebp
imul
pop
sub
pop
jle
sbb
mov
pop
xchg
mov
cmp
rclb
and
dec
push
push
lret
loop
and
andb
sbb
movsl
pop
mov
in
cmpsl
mov
xor
jle
aad
insl
testl
repz
mov
cmpsl
fwait
int3
mov
or
fidivrs
icebp
push
scas
cwtl
mov
movb
and
inc
ja
pslld
out
mov
dec
mov
xchg
mov
mov
sub
faddl
or
fistpl
sbb
cwtl
divb
mov
or
or
push
int3
popf
mov
jo
cmp
mov
insb
rolb
rorl
lea
std
outsl
popf
out
xor
jno
pop
push
and
push
mov
adc
pop
pcmpeqd
mov
or
out
and
repnz
xchg
cmpsl
movsb
mov
movsl
in
jns
es
xor
xor
xor
inc
ss
cmp
mov
jmp
mov
fcomi
daa
addr16
out
xor
cmpsb
jmp
shll
mov
xchg
inc
fnsave
ret
leave
mov
pop
xchg
lahf
lds
push
xor
in
jne
jge
cltd
xor
cmpsl
push
mov
mov
fwait
cwtl
mov
xchg
daa
inc
add
popf
fsubrl
fistl
sub
push
fdivrp
inc
sub
pop
cmpsb
push
xor
jl
mov
loop
pop
jmp
sar
insb
pop
into
clc
adc
sti
fcmovnbe
fmul
lods
sbb
jp
call
pop
add
sahf
xor
jb
adc
lahf
call
lds
fisubrl
mov
sti
mov
add
loopne
fs
sbb
in
dec
aaa
aaa
hlt
mov
outsb
int3
add
enter
call
push
repnz
push
out
sar
fcomi
mov
mov
mov
jmp
fld
int
inc
adc
inc
loop
xor
inc
frndint
push
mov
mov
insb
lock
xchg
js
inc
jno
movsl
mov
sahf
cli
lret
xchg
fidivl
xchg
hlt
mov
push
mov
dec
sub
pop
adc
push
jmp
push
int3
mov
je
pop
sahf
clc
xchg
sbb
fiadds
andl
mov
arpl
repz
int
dec
js
cltd
push
or
jecxz
jge
adc
popf
mov
or
xor
cmp
pop
add
subl
inc
mov
mov
adc
pop
push
in
les
pop
dec
jne
mov
pop
inc
xchg
js
aam
mov
xchg
add
sbb
fimull
pop
push
aas
fsubr
not
xlat
mov
clc
stos
rcll
dec
xor
mov
scas
mov
in
dec
cmc
repz
mov
or
in
sub
repz
insl
cmpsl
outsb
shrb
insb
int
mov
loopne
pop
mov
ljmp
cmc
add
mov
outsb
call
xchg
scas
push
inc
and
lcall
pop
pop
mov
outsl
or
and
pop
pop
cli
frstpm(287
add
lahf
fucom
add
push
mov
call
cmp
mov
push
loopne
fists
or
dec
ds
dec
adc
sbb
or
pusha
ja
push
les
sbbl
lods
cld
lret
imul
dec
aam
push
mov
xor
push
xor
dec
or
ret
pop
jg
adc
jo
cmpsb
fdivrp
out
lea
cmpsl
mov
pop
inc
aad
test
xchg
or
adc
mov
cmp
mov
adc
push
adc
inc
jno
arpl
xlat
mov
cmpl
bound
sbb
jns
aaa
xor
mov
dec
ss
inc
sti
testl
jmp
in
xchg
adc
sub
or
mov
cmpsb
in
repz
add
icebp
cmpb
sbb
mov
pop
push
cmp
jp
mov
stc
adc
mov
pop
jp
into
dec
or
fdivrs
inc
mov
inc
das
ret
xor
mov
xchg
cmpsb
ss
roll
popa
xor
mov
and
cmpsb
xor
cmpsl
test
sub
adc
adc
mov
adc
cltd
mov
or
sbb
inc
mov
insb
pusha
mov
sahf
das
push
xor
xor
in
jno
push
mov
stos
enter
inc
hlt
movsl
pop
cmc
imul
pop
in
sbb
xchg
fwait
push
movsl
sahf
ljmp
clc
add
cmp
pop
adc
icebp
push
mov
mov
arpl
mov
sbb
jbe
fcompl
icebp
mov
adc
sahf
add
aad
sub
movb
shrl
inc
in
adc
or
testb
test
sbb
pop
xchg
mov
push
xlat
xchg
lret
pop
out
push
cmp
push
inc
or
pextrw
sbb
das
sbb
mov
mov
sub
ret
sub
lret
popl
mov
mov
lret
inc
adc
xchg
lret
pop
mov
ret
inc
and
push
push
icebp
or
xchg
push
jns
mov
lret
and
cwtl
psubb
lds
ljmp
sub
and
mov
in
orb
pop
or
pop
das
aad
loopne
fcoms
gs
and
test
and
jns
push
jno
iret
xchg
cld
popf
test
idivb
jle
add
pop
mov
rolb
dec
push
jo
mov
mov
and
inc
lahf
dec
sbb
xor
test
adc
push
mov
and
sub
sti
popa
mov
mov
and
xchg
push
mov
gs
jno
outsl
xor
mov
out
push
pop
imul
or
adc
fsubs
sub
jo
sub
sub
cli
mov
cmp
stos
daa
mov
dec
push
pushf
mov
or
mov
push
das
out
jge
data16
xchg
adc
or
push
and
les
xchg
mov
inc
jns
cld
and
cmp
mov
imul
outsl
test
and
mov
cmp
aam
dec
or
or
test
sti
mov
cmp
or
stc
ljmp
imul
cmc
shll
or
popa
inc
js
or
and
push
ss
fldcw
xchg
jae
es
out
xlat
and
iret
xor
and
ret
stos
fucomi
pop
and
es
push
pop
das
or
leave
inc
sti
cmp
dec
and
hlt
sbb
rcll
add
adc
mov
jns
outsl
lods
jl
fisttpl
es
mov
cmp
test
sub
sub
mov
leave
or
jmp
lret
in
inc
jg
and
or
or
loop
test
mul
adc
jbe
mov
mov
dec
or
xor
aas
dec
or
in
cmp
ret
mov
test
sub
push
cmpsb
mov
icebp
test
fwait
push
and
sub
jge
pop
jle
fmull
movhps
xchg
insl
or
dec
out
and
mov
fildll
add
movsl
add
loopne
lea
cli
lret
int
jl
xchg
mov
out
imul
hlt
stos
mov
stc
rclb
mov
jl
cmc
pusha
imul
cmc
test
data16
inc
and
fnop
testl
jae
test
mov
jmp
fs
adc
sbb
add
inc
loope
sbbb
rol
aam
xchg
xlat
jae
or
lock
jle
std
sti
xor
push
loope
jno
lahf
sbb
jl
cmp
mov
or
int
cmp
or
mov
mov
and
ss
gs
rcr
scas
mov
mov
stos
or
xor
xchg
lods
push
ss
xchg
dec
push
mov
repz
pop
das
add
jb
mov
cli
xchg
test
mov
mov
push
leave
ss
dec
adc
jp
jmp
sub
push
popf
pop
inc
xchg
xlat
popf
adc
xchg
adc
push
mov
jge
xor
adc
mov
popa
or
sub
jmp
lahf
clc
cmpsl
mov
mov
lret
sub
imul
cmpsb
push
aas
push
sbb
jge
lods
testl
add
lods
test
sahf
popa
and
in
or
cmp
pop
test
xor
push
jbe
addb
lahf
mov
and
mov
aas
xchg
dec
aam
mov
inc
mov
ss
mov
mov
stos
orl
add
test
push
das
jmp
mov
sub
push
into
lret
push
mov
vmulss
push
mov
dec
jg
xchg
xor
int3
add
add
rcrb
add
int
adc
inc
loope
mov
bsf
sbb
mov
xchg
sbb
mov
lods
xlat
xchg
bound
lods
inc
ljmp
lcall
stos
rorb
into
mov
xor
push
lods
or
add
push
sbb
mov
mov
inc
leave
movsb
push
addr16
dec
ret
xchg
sub
in
or
sub
inc
jl
dec
test
cld
sbb
jp
outsb
dec
fstpt
ljmp
std
lret
lret
pop
cmpsl
xchg
aaa
fdivr
notl
xchg
adc
push
pusha
jo
bound
adc
pop
mov
fiadds
xor
cli
pop
hlt
divl
fs
pop
mov
add
or
dec
mov
push
lahf
mov
push
lret
ja
add
addl
pop
jnp
push
divb
test
filds
movsl
stc
inc
inc
add
and
lods
adc
fists
mov
out
pop
xor
adc
jno
enter
pop
stc
xchg
pop
xlat
cli
out
adc
xor
bound
push
mov
daa
repz
cmp
cmp
nop
cmp
js
jo
stos
enter
movsl
movsl
in
mov
xchg
add
or
jbe
jae
std
bound
insl
and
adc
aad
leave
adc
cmpsb
sub
loopne
xor
mov
loope
fwait
sub
popa
jecxz
inc
test
mov
shrb
cwtl
mov
movd
in
cmpsl
and
je
dec
xor
or
imul
sbb
mov
push
push
add
jle
xor
in
and
imul
addl
adc
or
cmp
push
insl
jge
ffreep
inc
shlb
xchg
lret
adc
xchg
xor
cltd
cld
push
cmpl
test
inc
arpl
cmp
sbb
xchg
and
stos
or
out
adc
mov
xchg
adc
test
insb
cmp
pop
les
inc
lahf
adc
push
cwtl
jns
dec
pop
lret
xorl
aas
fadd
or
push
or
nop
mov
lahf
mov
inc
xchg
mov
pop
pop
jmp
scas
sub
mov
dec
mov
out
pop
lret
push
test
addl
out
js
or
cmp
inc
push
cltd
daa
xchg
pop
sti
mov
bound
mov
pop
pop
dec
jbe
fsubl
cs
repz
movsb
mov
push
in
jecxz
les
jge
mov
test
mov
cmpb
xchg
inc
daa
cmpl
jbe
push
out
shr
loopne
leave
lret
dec
mov
mov
or
aas
inc
ret
push
sarb
xchg
mov
cmp
imul
and
jno
out
push
cli
ficomps
inc
mov
jo
outsb
in
mov
fildl
push
out
cmpsb
aas
inc
ret
in
sidtl
and
xor
lret
xchg
test
cmp
push
out
icebp
inc
mov
arpl
nop
cs
daa
push
mov
mov
test
adc
adc
repnz
insb
jp
pop
lock
or
cs
aaa
pop
orl
leave
sbb
and
and
ret
sub
mov
mov
sub
cmpsb
or
pop
adc
jb
xchg
int
cmp
cmp
adc
mov
and
inc
mov
imul
insb
inc
adc
pop
aad
int3
or
dec
jmp
mov
scas
inc
gs
cwtl
outsl
push
mov
add
cmc
lcall
jb
xchg
push
add
dec
push
bound
shll
sbb
push
xor
mov
rorl
jge
lret
pop
out
movsl
pop
mov
or
push
in
fistpll
shll
mov
jl
jge
cmpsl
movsb
pushf
aas
movsb
pop
mov
pop
subl
and
out
mov
jecxz
addr16
or
inc
xor
lock
lock
xor
fbstp
jb
mov
movsl
std
pop
dec
outsb
mov
leave
repz
xchg
push
sub
mov
mov
push
mov
xchg
dec
jnp
cli
sbb
daa
mov
cmp
je
jmp
pop
pushf
dec
hlt
aam
add
gs
loope
add
bound
xlat
mull
or
dec
adc
lcall
mov
add
aam
dec
adc
xchg
push
xchg
push
popf
push
mov
out
sbb
jno
mov
push
mov
adc
aam
in
nop
cmp
out
scas
cmc
mov
jecxz
push
es
push
xor
push
mov
pop
bnd
add
pop
rcrb
icebp
or
repnz
test
mov
mov
js
fwait
lahf
inc
shrl
push
mov
jb
notl
and
pop
cld
or
sahf
adc
es
xor
cmp
movsb
adc
mov
xor
mov
cmp
bound
cli
fiadds
jmp
xor
add
mov
cmp
adc
lea
xchg
add
xor
or
loope
icebp
fs
popa
cmpsb
dec
pop
mov
jg
jp
dec
mov
ss
and
lret
mov
insl
scas
push
lgs
jae
xchg
push
pop
fldenv
vmwrite
mov
movsl
xchg
mov
mov
push
pop
into
out
outsb
aam
dec
inc
inc
mov
push
out
addr16
hlt
cmc
jne
pusha
mov
inc
fidivl
xchg
xchg
into
jecxz
push
mov
test
hlt
fldl
pop
cltd
pop
pusha
dec
dec
leave
adc
outsl
push
aad
pop
xor
gs
xorb
pop
push
enter
inc
mov
aas
rorb
push
and
mov
loope
xchg
lret
push
push
jb
pop
pop
dec
jecxz
stc
mov
push
or
adc
cltd
dec
cltd
jns
test
sub
mov
xchg
icebp
fldcw
cwtl
test
mov
ret
mov
xchg
and
mov
mov
test
lahf
mov
jns
mov
into
cmp
lock
lahf
pop
jl
cli
dec
int3
push
mov
adc
shll
movsb
add
mov
out
xor
push
cmp
pop
sbb
add
cs
jnp
pop
cli
stos
jmp
mov
adc
mov
jnp
lock
or
shrl
or
add
into
sub
jne
fbstp
pop
push
std
add
jle
and
sub
or
paddsb
xchg
push
adc
cli
sbb
daa
pop
cmp
rorl
dec
loope
jmp
mov
cs
add
in
lahf
and
inc
pop
clc
cmp
cltd
push
mov
mov
mov
lea
out
lahf
add
add
in
or
cwtl
inc
inc
push
cmp
add
jbe
loopne
sbb
dec
jo
sarb
insl
add
mov
repnz
cmpsb
lahf
add
fstps
in
and
and
xor
xchg
dec
cmp
or
jge
cmp
mov
mov
sub
call
jo
sbb
xor
mov
addr16
rcrb
cmp
divl
dec
movsl
lret
jb
std
lods
and
sbb
popf
pop
adc
fnstsw
clc
and
lcall
fiaddl
jnp
jbe
push
or
ficoml
clc
adc
push
loop
and
test
mov
out
popf
cltd
adc
ret
repz
jle
cltd
xor
jp
cwtl
jmp
cs
add
mov
test
cmp
movlps
push
and
jo
aaa
inc
in
xchg
xorb
mov
add
negl
fwait
aad
popa
mov
push
out
pcmpeqw
dec
xchg
ret
push
cmp
std
push
jno
loope
loopne
pop
mov
jnp
mov
imulb
cli
xchg
scas
sub
or
insl
sahf
scas
adc
add
cld
in
mov
lret
push
loop
mov
rcr
mov
inc
sub
arpl
dec
cmp
cli
xchg
mov
mov
repnz
mov
loop
pop
mov
iret
cmp
sti
lods
out
jp
dec
mov
xchg
stc
push
call
es
ljmp
jno
xor
mov
popf
lahf
aam
les
jg
div
sub
test
mov
adc
dec
adc
pop
push
jge
or
imul
lahf
data16
cmp
pushl
xchg
push
xor
jge
test
in
dec
les
mov
pop
dec
pop
and
fwait
xchg
jle
xor
leave
cs
negb
add
rolb
cmpsb
dec
clc
dec
mov
mov
sahf
cmp
pop
dec
cmp
xor
mov
stos
sti
add
xor
jge
xor
add
add
pop
xor
xchg
inc
push
enter
into
lahf
push
psubd
mov
outsb
xor
pop
outsb
outsl
jmp
add
mov
cmpsb
mov
sbb
lret
jns
sti
addb
sti
nop
jb
out
inc
add
inc
sbb
add
cmp
cmp
ret
jbe
cmp
mov
ret
push
push
xchg
and
call
sbb
in
pop
xchg
sub
test
push
mov
cmc
stos
cmp
xor
or
pop
or
in
cmpsl
es
ret
pop
clc
push
dec
mov
jl
std
pop
mov
fildl
xchg
aad
lcall
xchg
cli
mov
sub
fsts
cmp
add
adc
lods
out
sub
fsubr
lret
pop
jne
push
push
aaa
notl
pop
pop
pop
lea
sub
in
add
test
sbb
cmpsl
adc
mov
add
sub
subl
fld
adc
dec
jmp
ror
or
jmp
or
clc
and
dec
scas
pop
push
imul
push
les
push
imull
int3
and
mov
push
mov
testl
sub
push
sbb
xlat
lods
inc
pop
xchg
and
cwtl
mov
jno
xchg
mov
out
mov
int
lds
fs
shlb
leave
stos
mov
clc
mov
add
or
pop
inc
dec
xchg
mov
daa
mov
mov
imul
jmp
dec
outsl
sub
adc
lock
cmp
xchg
sbb
insl
clc
out
jo
negl
incl
or
std
je
lods
sbb
icebp
in
mov
inc
sub
out
or
outsb
fidivs
ljmp
je
js
add
push
test
andnps
inc
cmpsl
jo
dec
or
or
pop
jmp
into
sbbl
mov
push
shrl
out
addl
push
push
sub
and
test
or
cmpsb
dec
inc
adc
jl
cmp
testb
nop
mov
mov
aas
mov
sbb
outsl
test
jg
loope
adc
pop
dec
adc
imul
dec
decl
inc
mov
add
sbb
add
sbb
cmpsb
out
lds
daa
jns
xchg
push
push
xchg
jne
sahf
and
xor
jns
cmp
imul
xchg
and
ret
pop
insl
movsb
mov
nop
jb
into
dec
fadd
in
push
add
jl
lock
nop
loopne
cmpsl
jecxz
and
push
sub
xchg
in
push
ja
jmp
push
iret
pop
sub
lock
jnp
jns
movsl
imul
cmp
dec
call
loop
stc
cmp
ret
stc
mov
and
add
jae
nop
xchg
fadd
out
notl
jno
jg
mov
mov
popa
pop
mov
push
mov
popf
pop
movb
lahf
sar
loop
scas
add
outsb
jbe
orl
repz
in
rolb
imul
or
mov
mov
imul
push
sti
and
inc
mov
push
push
cmpsl
popa
xor
stos
lcall
divb
adc
dec
inc
in
fdivs
in
shr
repnz
dec
jl
sbb
fidivrs
lods
jecxz
pop
lock
leave
lahf
out
push
adc
in
sti
repz
sub
jp
push
aas
mov
push
lock
js
mov
inc
fildll
lcall
dec
push
addr16
inc
fadd
inc
jg
in
mov
fcoml
jl
aaa
push
inc
addl
pop
pop
mov
notb
data16
add
cwtl
movb
cwtl
movsl
in
ss
xchg
add
movsl
sbb
out
scas
iret
add
lods
adcl
pop
dec
cs
cmc
aad
cmpl
mov
fxch
pop
or
push
mov
stc
insb
sub
mov
inc
stos
push
je
fucomip
fwait
repnz
push
hlt
mov
int
mov
push
ret
popa
cs
mov
xchg
mov
and
out
xchg
inc
pop
lds
fidivs
hlt
cmpsb
movsb
ja
xlat
lret
lcall
call
lret
and
imul
fidivrs
pop
jmp
jne
or
inc
inc
xor
gs
or
aaa
adc
dec
fs
jl
xchg
jnp
mov
cmp
push
lahf
insb
pop
dec
into
aad
push
push
or
sbb
xor
jp
ss
rcrb
xchg
in
pop
sarl
mov
mov
les
scas
addb
or
test
lahf
in
bound
into
scas
push
pushf
xchg
sarb
or
gs
ds
pop
ljmp
scas
sbb
adc
int
mov
pop
lea
filds
add
loope
ds
push
dec
ficompl
lahf
pop
lcall
out
mov
in
jle
decb
test
mov
mov
mov
mov
ret
push
nop
cmpsl
sbb
idiv
xor
mov
mov
jmp
inc
lret
adc
xchg
outsl
add
fdivs
push
mov
pop
ret
aad
js
test
fwait
enter
fwait
movsb
and
insb
mov
fbstp
sahf
add
stc
push
orb
pop
push
push
mov
xor
movsl
mov
push
adc
pop
in
out
lods
jns
test
fwait
rcl
pop
divb
push
rolb
jecxz
or
mov
or
pop
pop
mov
inc
and
pmulhuw
dec
ljmp
mov
out
cld
sub
cwtl
push
xor
lcall
lret
leave
into
inc
repz
lcall
movb
xchg
fdivrs
push
aam
inc
dec
jp
addl
repnz
mov
rclb
xor
repz
int3
cmpsb
pop
in
sti
inc
pop
and
cmp
ds
insb
aaa
clc
je
sub
arpl
jmp
dec
out
hlt
js
in
and
int
jbe
xlat
ljmp
push
mov
pop
jno
mov
xor
or
imul
xchg
push
inc
dec
xor
dec
ret
fbstp
lahf
cmp
mov
mov
xchg
adc
jo
pushl
daa
fldt
daa
jge
jg
fwait
jbe
pop
push
repz
out
jle
cmp
xchg
mov
dec
or
xchg
mov
inc
add
lret
jne
je
fcmovnbe
les
xchg
mov
inc
sti
sbbb
or
outsb
pop
iret
jae
fsubrs
test
push
sub
int
mov
mov
jb
pop
add
jmp
jns
in
mov
mov
cmp
cmp
rorl
sahf
stos
mov
jae
sub
adc
or
pop
jae
fisubrs
dec
adc
stos
mov
or
xor
sbb
inc
pop
mov
insl
jnp
out
push
inc
ret
aaa
adc
hlt
sub
jno
jb
aas
add
popa
add
add
pop
roll
xor
fdivr
jmp
aam
push
mov
mov
loope
sub
inc
push
into
insb
ljmp
rcll
enter
xor
rcr
testb
pop
lcall
movsb
dec
daa
enter
popa
xchg
pusha
xchg
popf
add
push
mov
push
or
movsb
xchg
mov
or
sbb
lods
popa
sbb
test
in
sub
cld
repz
fcomps
cmpsl
int
dec
mov
jp
cmp
mov
shr
xchg
sbb
ja
in
enter
push
imulb
sbb
mov
stos
popf
jnp
sarl
push
xor
mov
out
cli
jns
sbb
pop
lcall
jle
pushf
mov
jnp
repnz
adc
sbb
dec
push
push
jae
and
pop
scas
xchg
mov
dec
movsl
lret
mov
sub
inc
outsb
imul
aad
out
xor
mov
loope
sti
dec
test
mov
fildl
movsb
pop
mov
aam
loop
lahf
popf
xor
xlat
ficoms
or
or
mov
shl
pop
cmpsb
mov
jns
and
cmp
jnp
call
shlb
xor
mov
push
or
mov
add
adc
aam
pop
bound
jns
lock
lahf
push
pushf
sysenter
js
lcall
dec
int
mov
aas
loope
mov
and
xchg
int
imul
dec
xor
mov
mov
movsl
fldenv
inc
int3
pop
and
push
dec
cltd
insl
setge
jle
push
lods
push
adc
outsl
add
mov
enter
sub
mov
sbb
xor
fsts
push
jnp
mov
add
push
ljmp
rol
pop
ss
sti
negl
jno
xor
mov
mov
inc
pop
cmp
pusha
push
jb
sbb
shrl
shrl
sub
addr16
mov
pop
inc
xchg
xchg
mov
mov
jo
movsl
fucom
jmp
cmc
xchg
sbb
aam
cwtl
pushf
cwtl
dec
mov
sub
repz
shll
lcall
cwtl
shrb
fisttpl
mov
mov
pop
jnp
cltd
and
or
ljmp
daa
pop
mov
jb
xchg
add
pop
ss
pop
jns
mov
imul
adc
insl
jnp
orb
or
cmp
xor
and
out
pop
out
ret
sbb
out
adc
fisubl
or
jmp
jae
je
test
loope
scas
dec
sub
or
gs
fstpl
scas
or
test
aas
or
add
mov
mov
sbb
pusha
sbb
mov
shlb
or
mov
loop
sbb
mov
lock
mov
sbb
das
xchg
gs
adc
cmp
int
cmpsl
scas
xchg
or
and
dec
sarl
mov
ds
loopne
push
xor
popa
mov
pop
call
sub
bound
push
lock
lea
mov
cmc
or
jo
pop
in
hlt
int3
das
rcrb
xor
xlat
jle
and
mov
pop
pop
mov
xor
sub
shlb
sub
or
jl
sub
or
add
mov
cltd
sar
mov
cmp
pop
push
inc
jl
sbb
sahf
hlt
xchg
pop
cmp
xacquire
popf
mov
or
xchg
or
adc
sbb
scas
popa
jecxz
adc
std
dec
mov
cmp
ret
loop
mov
or
mov
cs
pop
outsb
cmp
cmp
and
mov
int
dec
adc
dec
push
mov
iret
in
pushf
movsl
push
xor
push
cmc
or
cmpb
mov
adcl
stos
push
and
cli
mov
test
dec
andb
and
push
adc
xchg
jecxz
xchg
pop
out
xor
and
ja
cmp
cmc
cld
cmpsl
jp
fnstenv
cmp
and
js
sub
inc
push
sar
xchg
pop
pop
mov
pushf
jp
rcrl
sti
pop
pop
frstor
push
inc
push
xchg
fwait
neg
xchg
sbb
pop
lods
add
sbb
pop
rclb
xchg
dec
xor
pushf
je
mov
out
mov
imull
ret
scas
jnp
adc
movsb
dec
mov
lret
shlb
inc
jl
pop
insl
in
or
sbb
sbb
push
rorb
sahf
dec
scas
mov
in
adc
push
push
mov
push
iret
sbb
inc
out
add
sub
data16
mov
leave
aam
add
sbb
popa
sbbl
lahf
or
leave
divb
inc
jp
dec
mov
cmp
mov
add
mov
adc
ss
add
les
out
fsubrs
cmc
test
sub
mov
adc
push
jle
cmp
rolb
cwtl
inc
ret
xchg
out
dec
xchg
jne
inc
xchg
in
movsb
leave
fcoml
cmp
mov
pop
pop
lahf
mov
mov
out
in
inc
icebp
jns
push
pushf
sbb
lods
dec
dec
subb
cs
movsb
jle
xor
or
pop
sbb
jae
push
fisttps
jo
fsubs
push
push
mov
mov
subl
aad
xchg
outsl
mov
cmpsl
scas
add
je
add
stos
rorb
in
adc
mov
ud0
filds
es
adc
cmp
mov
pop
xor
mov
imul
loop
insl
cmp
scas
xchg
mov
lahf
mov
cld
xchg
lahf
fldt
test
fldt
cltd
les
sub
dec
jnp
sbb
rolb
mov
bound
pop
loope
pop
fisubs
pop
jge
pop
mov
or
xor
popf
pop
mov
jb
cmp
fdiv
mov
adc
jecxz
adc
mov
pop
cmp
jmp
lds
aas
adc
ljmp
add
icebp
push
testl
or
adc
lahf
cmp
pop
bound
fidivrl
xchg
clc
shrb
repnz
sub
or
mov
inc
xchg
push
pop
xor
inc
in
stc
mov
pop
pop
and
add
pop
add
fstl
les
jno
and
inc
nop
test
push
or
push
mov
pop
mov
ljmp
jg
mov
mov
aaa
fildll
cld
xor
into
fistl
stos
add
push
cmpsl
stc
cli
test
jl
test
xor
jmp
mov
xchg
out
jl
lret
dec
mov
pop
ds
outsb
lods
cmp
adc
or
mov
adc
fs
adc
adc
cmpl
lds
fmuls
mov
das
loopne
shll
mov
es
in
mov
int3
mov
and
dec
xlat
xchg
sahf
sahf
bound
xor
jo
cld
mov
fldcw
or
orb
movsl
shlb
mov
xchg
add
sub
je
enter
sbb
icebp
dec
mov
mov
adcb
inc
loopne
and
out
and
sub
loop
sub
push
mov
inc
and
xchg
xor
sahf
xor
jmp
xchg
rcl
sbb
ss
lahf
jp
rcrl
sahf
cmp
mov
mov
inc
mov
push
sbb
repz
shll
in
adc
xchg
mov
cli
xchg
mulb
ficomps
sti
inc
inc
mov
and
xor
les
dec
bound
ret
lea
sti
popf
and
sbb
add
jle
imul
lock
adc
stos
add
cmpsl
in
ds
fisubrl
icebp
jnp
xchg
leave
shll
mov
aaa
pop
jge
push
mov
xor
mov
enter
jle
push
xchg
jmp
dec
cmp
inc
scas
xchg
inc
imul
pushf
jne
outsb
lret
sub
adc
aaa
mov
mov
add
hlt
clc
filds
lahf
gs
jg
lds
es
push
aas
pop
push
leave
out
negl
sbb
add
and
or
fiaddl
les
mov
dec
or
lret
outsl
jmp
mov
rcll
sbb
jbe
pushf
cmp
aad
lcall
or
xor
lret
mov
dec
movsb
mov
fs
stos
mov
inc
pop
rep
mov
adc
mov
enter
cmc
pop
xchg
mov
xchg
aad
dec
fcoms
imul
test
mov
mov
jmp
push
aam
test
mov
cmpsl
pop
cmp
pop
enter
jge
out
dec
sub
pop
loopne
pusha
lds
lret
pop
or
nop
stos
jge
xor
shlb
push
imul
or
xchg
lods
lcall
sub
and
in
lea
xor
dec
mov
clc
sub
inc
repz
iret
xchg
sub
repz
js
push
xor
and
push
push
in
add
int
inc
ficomps
mov
sub
add
inc
hlt
stos
outsb
inc
push
cmpsb
push
jg
jbe
xchg
dec
and
adc
mov
loop
jnp
orb
add
jno
jne
pop
sub
arpl
sub
insl
xchg
sbbl
xchg
std
jl
rcr
cmc
nop
inc
outsb
xchg
xchg
lds
cwtl
pop
dec
cmpsl
jmp
lea
pop
xor
dec
or
mov
xchg
adc
imul
push
imul
or
dec
push
outsb
jecxz
sahf
dec
mov
repz
sbb
adcl
mov
lea
mov
inc
pop
out
inc
mov
subl
pop
sub
mov
hlt
fcmovbe
cmp
sub
dec
jecxz
xchg
rorb
cmp
jl
incl
push
mov
add
jo
sahf
xchg
xlat
ret
xchg
add
das
mov
jnp
push
mov
ja
mov
add
adc
xchg
lahf
cmpsb
insb
fidivs
movsb
rcll
pop
sub
fmuls
arpl
jb
fsts
dec
or
jg
and
jmp
xor
adc
cs
sbb
stmxcsr
into
outsl
fs
test
test
xchg
dec
adc
sub
dec
sub
insb
lods
jecxz
addl
mov
pop
stc
push
or
mov
mov
push
stos
ret
add
mov
adc
pushf
pop
insl
cltd
sahf
cmp
mov
rcrb
loopne
inc
inc
ficoml
mov
aam
data16
and
imul
add
pop
sbb
movsl
cmp
test
push
xchg
pop
test
push
dec
xor
enter
jge
sub
outsb
sub
pushf
jne
mov
xlat
mov
xchg
aam
mov
mov
jmp
lret
rcrb
icebp
jns
imul
fwait
add
ja
aas
mov
jl
lret
xor
pop
jb
mov
add
repnz
cmp
and
inc
daa
push
add
lock
jmp
mov
decl
add
xchg
xor
daa
outsl
flds
leave
lods
lcall
loop
sbb
mov
fsubr
inc
xor
push
sub
add
orl
cmp
ljmp
or
sub
cmp
jo
notl
mov
cltd
sub
xchg
pop
sub
sbb
ret
out
mov
sbb
imul
out
daa
cmpsb
xchg
mov
movsl
in
test
addr16
aaa
inc
or
insl
mov
icebp
je
test
mov
push
out
inc
test
adc
pop
cli
push
pop
push
inc
adc
pop
dec
cmp
jo
sub
icebp
dec
mov
sbb
es
imul
fcompl
xor
movsl
mov
cmpl
mov
mov
push
mov
mov
add
mov
add
add
inc
icebp
adc
mov
out
js
dec
jae
adc
scas
sahf
pop
bound
jb
fdivl
fldl
xchg
test
and
andl
addr16
add
xchg
out
add
mov
hlt
pop
cmp
jg
and
xchg
lret
inc
xor
std
sbb
xchg
jb
in
sti
and
imul
popa
xchg
nop
mov
insb
jns
inc
das
xchg
sub
dec
hlt
jmp
lods
hlt
fsubrl
stos
adc
mov
lahf
mov
cmp
or
pop
or
push
and
jo
das
and
add
sub
pop
sub
sbb
bound
ja
lcall
cld
into
mov
out
fldcw
leave
or
and
sbb
cmpb
sub
or
pop
dec
rol
xor
mov
sub
loope
xor
add
pop
pop
call
push
pop
pop
xchg
test
and
and
lahf
sahf
ret
or
pusha
dec
cld
or
aam
push
incl
jne
xor
lock
xor
fidivrl
cwtl
push
aad
orl
jp
gs
imul
push
xchg
mov
mov
sbbb
pushf
push
xchg
popa
mov
cmp
inc
test
mov
mov
mov
fwait
sbb
cwtl
and
les
pushf
pop
imul
imul
mov
push
aaa
lds
outsl
fldl2e
sahf
xchg
push
popf
je
sbb
in
scas
mov
adcb
add
xor
loop
mov
jge
jae
fwait
push
jno
pop
jno
inc
sti
outsl
cltd
lcall
jne
lock
mov
fdivs
sbb
push
orl
js
mov
add
xor
and
aad
icebp
in
cwtl
cltd
testl
mov
push
mov
inc
and
movsl
fcmovne
dec
mov
out
xchg
cli
in
loop
xlat
cmp
test
loopne
mov
mov
fistpll
insb
mov
or
mov
pop
xchg
cmp
lea
inc
jge
mov
xchg
aad
shrb
sub
mov
mov
or
fidivrs
and
and
cli
push
mov
mov
mov
push
mov
jne
outsl
push
movsb
or
inc
jle
xorb
adc
pop
sub
rorl
xor
inc
dec
mov
decb
or
cwtl
push
ss
lcall
push
pop
xchg
vmwrite
cmp
push
fwait
jae
outsb
pop
imul
ljmp
sub
cld
mov
push
sub
mov
lcall
loop
cltd
nop
fwait
jl
icebp
adc
dec
loope
arpl
mov
push
inc
inc
lret
push
cmp
mov
and
and
addl
andb
mov
aaa
fnstenv
xor
imul
xchg
stos
imul
push
enter
jg
fs
mov
pop
out
inc
adc
inc
ret
adc
xor
bound
jmp
and
dec
mov
movsl
fidivs
addr16
mov
gs
outsl
pop
bound
jp
mov
push
pop
shll
dec
pop
pop
dec
hlt
lock
aas
mov
push
hlt
add
rorl
mov
into
sbb
in
cmp
fucomi
xchg
pop
sbb
pop
mov
cmp
enter
mov
inc
aad
lret
decl
test
and
es
cmp
adc
gs
pop
outsb
lock
adcb
and
mov
cmpb
sti
xor
testl
sti
add
dec
push
negl
ror
adc
lcall
adc
jno
mov
push
sub
lds
hlt
xor
mov
stos
aam
mov
sbb
sub
push
or
add
cmp
pop
sti
jl
cmc
dec
xchg
in
popf
inc
gs
daa
rorb
cmp
jmp
jbe
pop
fxch
jbe
enter
mov
xor
jo
dec
cmpsb
xchg
nopl
clc
ret
scas
add
and
adc
pop
adc
jb
push
inc
sbb
dec
ret
dec
pop
fdivl
dec
fisubs
mov
es
push
out
mov
xor
fsubs
je
inc
je
push
push
insb
faddl
in
scas
int3
and
mov
and
movl
xchg
cmp
jae
inc
pushf
and
jae
ljmp
jb
or
aaa
ret
ss
jae
push
xor
push
in
iret
fldl
loope
or
xrelease
xchg
mov
xchg
push
jns
pop
aam
add
test
sbb
stc
sub
arpl
flds
push
lea
test
sbb
lods
rcr
pop
add
inc
and
push
insl
mov
or
ret
fdivrp
inc
mov
cmp
sub
sbb
inc
push
outsl
andl
jno
cmpxchg
xor
sbb
inc
jg
add
cmp
jp
das
test
mov
rcl
pusha
jae
jp
mov
or
mov
jmp
jno
sbb
aam
mov
jg
jae
dec
add
pop
pop
pop
cld
ret
mov
mov
shrb
cmc
das
das
daa
dec
inc
cmp
mov
jg
sbb
rcrb
mov
fisttps
in
inc
xor
push
push
jno
mov
jg
lods
imul
ds
xor
insl
insb
sbb
mov
mov
dec
hlt
and
cmp
xor
ljmp
aam
nop
jno
inc
mov
and
mov
push
xlat
push
aad
lahf
scas
pop
aas
lds
lods
lods
dec
hlt
mov
dec
data16
test
call
cs
cmp
push
xchg
aam
sahf
add
lcall
or
ds
daa
xor
pop
pop
mov
jnp
mov
das
jecxz
mov
mov
lahf
push
xchg
jp
loop
aas
mov
popf
cmp
roll
add
shll
mov
sbb
gs
xorl
out
movsb
sub
mov
out
idiv
push
repz
test
scas
sbb
std
ja
pop
jecxz
ljmp
inc
out
sarb
imul
daa
andb
sub
push
movsl
lret
sahf
jg
movsb
jbe
xorl
subb
cltd
cmp
mov
scas
loop
push
repnz
arpl
lds
pop
jne
mov
push
add
mov
es
aam
ljmp
xor
movsb
or
repnz
mov
loope
sti
xor
pop
mov
int3
lods
adc
mov
aad
shll
cmp
dec
addr16
fucomp
adc
dec
adc
mov
add
mov
inc
mov
bt
pop
inc
fs
add
ficomps
xchg
sub
or
scas
test
clc
and
mov
pop
cmpsb
cmp
add
xchg
dec
pop
push
movsb
ljmp
js
in
negb
aas
into
in
pop
mov
movsb
mov
fadd
sbb
xchg
fst
scas
out
and
mov
mov
dec
mov
add
adc
shl
pop
cwtl
push
negl
test
pop
sbb
ljmp
push
or
inc
mov
cmpl
negb
cmpsb
xchg
mov
mov
push
outsb
mov
xor
cmp
cmpsb
cli
adcb
pop
pop
sbb
cmpsl
dec
sub
lods
aaa
cmp
inc
in
mov
adc
insl
pop
sbb
xor
imul
adc
mov
mov
push
fcoml
icebp
stos
scas
stc
inc
add
add
or
or
sti
test
adc
sub
das
addr16
push
add
pop
stos
out
inc
sbb
and
inc
add
sbb
adc
ret
adc
mov
aam
push
pop
sub
add
in
clc
aad
xchg
in
or
ss
scas
aaa
lods
dec
mov
cltd
dec
xlat
jl
decb
loopne
xlat
in
out
cmp
es
shll
jp
aam
test
sub
sarl
mov
int
add
imul
xor
push
mov
adc
sahf
cli
push
adc
mov
adc
enter
mov
mov
loop
lahf
mov
jmp
pop
mov
mov
mov
xchg
cmp
and
add
out
lds
adc
mov
fs
les
push
jecxz
mov
jge
outsl
gs
mov
mov
add
jnp
push
mov
loop
loop
mov
and
dec
push
push
mov
push
add
mov
mov
add
lret
in
hlt
imulb
push
xchg
jns
cmp
outsl
rolb
xor
in
pextrw
mov
push
and
and
xor
jb
dec
test
sub
jbe
outsl
jge
je
add
std
pop
push
in
stos
lret
mov
mov
push
jmp
push
and
cmc
sub
rcll
mov
sbb
push
lret
mov
andb
ficoms
push
pop
mov
sarl
shrl
ljmp
xor
nop
mov
sbb
push
jmp
cmp
push
mov
push
emms
dec
fcmovnbe
mov
mov
inc
loope
xorl
jl
jge
loope
and
mov
jl
sbb
outsb
es
nop
test
dec
bound
dec
or
lcall
test
mov
cmp
jno
fxch
sub
sub
movsb
popf
cmp
out
cltd
inc
cli
test
hlt
outsl
iret
xchg
adc
call
push
out
or
movb
add
pop
loope
push
pushf
lahf
aam
jne
int3
test
mov
aam
push
or
mov
sub
aad
sub
add
push
ja
pushf
pusha
cmp
aam
cld
mov
push
test
jae
xor
xor
xchg
push
ljmp
xchg
push
cmpsl
push
adc
jns
popa
sub
add
dec
cmp
outsl
test
arpl
push
inc
xchg
inc
jns
es
test
jle
cmp
out
negb
mov
adc
pop
xor
mov
lods
push
mov
popf
jl
push
std
imul
mov
fst
sbb
dec
or
mov
icebp
cs
push
test
fiadds
lret
aad
js
xchg
aam
pop
fisttpll
push
daa
and
lock
and
lret
sub
dec
fcomip
repz
bound
mov
lahf
lods
jmp
ljmp
cmp
out
mov
aas
xor
ja
xchg
movsl
dec
nop
rclb
leave
push
xchg
cmp
mov
iret
sarb
scas
hlt
adc
aad
pop
sub
fisubs
xchg
cli
ret
cld
push
loop
sbb
or
nop
or
ret
cmp
cli
pop
loope
mov
out
imul
out
lods
mov
frstor
and
ds
cmpsl
addb
adc
repnz
xor
and
shlb
dec
or
push
rolb
cmpsb
sti
loop
jae
cli
rorl
dec
cmp
dec
cmc
fsts
test
jmp
inc
xchg
jo
dec
imul
mov
dec
sahf
jge
leave
and
mov
pusha
jae
push
pop
lret
stos
sub
mov
xchg
rcrl
mov
test
leave
lods
xchg
stc
and
es
xor
or
jle
push
loope
adc
pop
cmp
mov
insl
pop
rcrb
jg
cmp
push
and
and
or
pop
aad
push
or
jne
mov
cmp
xchg
jmp
inc
pop
cli
adc
jb
pop
push
movsb
cmp
push
adc
mov
jl
test
mov
push
mov
das
and
push
xor
ret
fadds
enter
daa
test
mov
xor
mov
fwait
mov
test
bound
sub
adc
sbb
sbb
nop
cmp
or
xor
jp
in
imull
mov
es
bound
xorb
add
stos
jp
sahf
push
jle
lea
inc
push
sub
adc
pop
and
shl
out
and
fmull
cld
std
xor
les
inc
mov
aad
call
inc
aad
xchg
shlb
xor
cmp
aad
jnp
movsb
pop
mov
ret
cmp
xchg
mov
jno,pn
mov
sahf
stc
aad
cmpsb
rcrb
int
and
sbb
cmp
mov
daa
mov
aam
jg
push
push
daa
pop
mov
jecxz
dec
fisubrl
inc
and
mov
xor
movsb
xor
bound
imull
xchg
jp
mov
cwtl
in
xor
mov
jne
dec
lret
jecxz
shll
incb
loopne
push
cmpsl
or
add
sbb
add
add
gs
arpl
and
xor
mov
mov
adc
scas
mov
rcll
ret
mov
aaa
adc
subb
popf
adc
test
out
push
inc
or
mov
jl
jl
dec
jp
int
xchg
mov
pop
movsl
ja
xchg
fadds
jmp
inc
sub
mov
addr16
rcrl
jp
cli
sub
in
jo
test
in
jmp
mov
mov
cmp
cs
pop
enter
out
mov
mov
inc
scas
pop
je
sub
and
inc
shll
or
int3
pop
pop
call
das
pop
xchg
add
adc
jg
jmp
in
imulb
inc
repnz
cwtl
sbb
fsubrl
test
or
pop
mov
dec
mov
add
push
enter
ja
add
xchg
mov
xchg
or
sub
hlt
les
cmp
and
or
es
mov
cltd
dec
and
insl
mov
add
icebp
js
push
lahf
xchg
dec
and
idivl
in
hlt
insl
pop
push
adc
dec
mov
popa
sub
adc
xchg
push
pop
and
test
add
push
iret
jl
daa
push
pop
pop
into
sub
into
pop
fsub
push
pop
mov
mov
jbe
leave
stc
jg
int3
sarl
popa
pushf
cmp
insl
jae
pop
aad
les
mov
adc
hlt
push
mov
subb
jnp
adc
in
dec
ret
pushf
out
and
loope
push
adc
addr16
lahf
mov
adc
aad
mov
mov
jle
sbb
fisubrl
inc
flds
mov
hlt
repz
cmpsl
dec
out
mov
adc
lods
adc
jne
sub
mov
mov
fwait
int
sub
ljmp
cli
insl
sahf
push
sbb
mov
jge
and
jl
mov
push
loopne
or
loope
mov
and
shlb
into
pop
daa
jb
mov
ret
sub
mov
inc
data16
mul
mov
pop
fsubs
mov
push
push
jne
repnz
mov
aad
jo
mov
pop
jae
cmpsl
iret
pop
sub
add
mov
and
add
sbb
jmp
adc
sahf
rcl
rcrl
mov
sbb
cmp
mov
lods
cmpsb
lds
ret
divb
inc
test
cmp
cld
jmp
out
pop
fisttps
leave
imul
shl
or
xchg
jecxz
stos
lock
cmp
test
push
cmp
je
mov
inc
dec
mov
das
cli
imul
adc
shr
mov
aam
in
outsb
cmc
xchg
add
cmp
icebp
pop
repnz
add
ja
mov
cmp
xchg
lea
bound
push
mov
leave
aam
pushf
repz
cmpsb
and
or
dec
mov
leave
xchg
int
jno
xchg
daa
xor
test
mov
xchg
jo
dec
sub
pop
lcall
pop
fcoms
popa
mov
sbb
push
xor
jp
sbb
push
sub
in
out
jge
adc
jne
ljmp
inc
jae
mov
and
pop
into
cltd
jo
mov
stos
fst
pushf
mov
ja
mov
sub
arpl
inc
fistl
jmp
scas
xor
xchg
adc
pop
sbb
jnp
cli
pusha
insl
or
fs
push
push
xor
je
pop
stc
jb
faddl
push
movsl
jl
out
pop
mov
cli
adc
mov
loope
dec
lods
sbb
scas
mov
inc
xchg
mov
lcall
dec
je
dec
or
inc
out
out
insb
jp
clc
xor
js
xor
sbb
les
adc
gs
fisubrs
ds
addr16
or
add
jl
mov
lods
fnstcw
icebp
jecxz
jecxz
adcb
pop
sti
fs
jae
es
testl
cltd
xchg
imul
sti
test
jnp
dec
xor
pop
inc
inc
inc
sub
outsl
rcll
xor
and
mov
fwait
pusha
insb
loope
mov
lret
mov
fucomi
stc
je
cwtl
dec
and
inc
and
jae
jns
dec
xchg
mov
mov
add
lahf
imul
jp
pop
jo
emms
aaa
mov
aas
nop
jne
pop
adc
cmpl
enter
push
mov
je
fadds
jecxz
mov
out
rcl
pop
cmp
or
test
add
pop
lock
test
mov
ljmp
mov
dec
jbe
sub
mov
mov
push
scas
cmpsb
xchg
in
adc
sub
pop
div
mov
popf
inc
fiadds
repz
orb
pop
jae
cmp
lock
aaa
add
fimull
lret
push
push
push
jecxz
mov
lcall
dec
roll
mov
jle
bound
sbb
out
ds
pop
ret
pop
push
inc
ret
jno
inc
xchg
add
mov
push
icebp
push
add
mov
sbb
jle
cmc
and
sub
jb
test
into
add
and
bound
ffreep
ss
enter
lret
fldl
xchg
call
sub
outsb
and
mov
xlat
in
and
insl
clc
fdivrs
inc
sub
icebp
sbb
sbb
addr16
mov
lret
inc
ljmp
add
mov
push
dec
insl
in
mov
lea
push
cmc
add
xchg
stos
outsl
add
fisubrs
stos
in
shll
mov
add
out
mov
nop
outsl
and
push
inc
dec
push
mov
inc
das
pop
pop
je
int3
out
jmp
decb
into
inc
loopne
outsl
stos
scas
ss
jns
adc
mov
test
jle
ret
scas
jns
cmp
icebp
add
lret
xchg
xor
jo
inc
fwait
add
mov
data16
in
sahf
pop
add
out
push
or
pop
test
mov
and
cmpb
mov
mov
insb
rorb
mov
popa
adcl
in
add
sub
xlat
sbb
pop
push
push
pop
xor
repnz
imul
lcall
js
sbb
in
pop
out
dec
fwait
dec
cwtl
pop
mov
sbb
repz
dec
lea
push
int
mov
cmpsb
sbb
sbbl
out
adc
ja
jnp
jge
mov
and
dec
aas
bnd
std
hlt
mov
sub
dec
imul
mov
cs
fldpi
inc
pop
test
pusha
cmp
imul
push
aas
jnp
iret
lahf
cmpsb
insl
movsl
push
dec
ret
adc
fldenv
and
mov
xorb
add
cltd
lods
pop
cld
sbb
dec
rcr
add
or
scas
into
jecxz
push
rcll
mov
shr
or
pusha
xor
inc
mull
add
pop
xor
push
repz
fsubp
cld
test
lea
mov
lock
mov
jmp
xchg
push
int3
push
loop
ret
dec
push
clc
pop
orb
jge
lea
and
cmpsl
ret
mov
popf
out
cmpsl
lret
test
insb
push
jmp
xlat
popf
adc
pushf
cmc
pop
sbb
dec
adc
jge
push
insb
jmp
lock
or
mov
dec
aaa
add
mov
gs
add
push
xor
ret
inc
pop
fsubrl
fwait
and
xchg
cmp
push
push
addr16
or
jmp
scas
adc
xchg
inc
cmp
es
jge
scas
popa
mov
adc
push
mov
xchg
pop
ret
int3
lea
xchg
aad
movd
and
cmp
adc
push
dec
push
add
ljmp
mov
sbb
jb
shll
cmp
xchg
mov
dec
xchg
out
das
out
fadds
jecxz
aas
xchg
pop
outsl
sti
jae
fwait
negb
inc
in
add
xor
test
lods
add
sub
lcall
fcmovnb
nop
dec
loope
mov
sbb
andl
shrb
inc
imul
jle
inc
push
or
and
push
loope
jecxz
lcall
and
ret
nop
and
aad
push
or
push
pusha
rorl
cmp
addb
dec
push
sub
push
lret
cmc
adc
lret
outsl
cmp
ret
mov
inc
or
pop
fsubr
pop
popa
ljmp
sub
cmp
mov
bound
push
loop
sub
sar
loope
cld
cmc
stos
pusha
fs
and
pop
push
lahf
add
rclb
mov
jg
stos
lea
stc
cmc
int3
ss
mov
add
jmp
in
sbb
mov
mov
cmp
addb
movsl
jecxz
stc
orl
shll
test
pop
inc
mov
nop
jo
dec
aas
pushf
or
in
ja
mov
test
pop
sub
adcb
ja
ss
push
in
les
xchg
hlt
shrl
xchg
add
mov
sub
adc
icebp
xor
lcall
inc
idiv
or
dec
idiv
scas
addr16
sbb
mov
sti
in
int3
repnz
stos
insb
mov
jge
inc
cmp
imul
shl
imulb
std
shrb
add
push
cli
sub
icebp
inc
jo
push
jmp
xchg
cmp
jl
xchg
fmull
xor
adc
stc
lods
mov
jg
sub
pop
mov
xor
div
or
aas
pop
push
push
sbb
cld
mov
aam
jae
idivb
je
or
cmc
sub
xchg
xchg
adc
pop
daa
and
out
cmp
jle
jle
mov
cmp
in
ret
fwait
adc
jno
adc
adc
sahf
add
aad
add
and
sbb
or
stos
inc
cmp
adc
aam
loop
dec
push
in
jg
push
addr16
incb
sbb
mov
filds
pop
and
in
insb
sub
adc
sti
pop
imul
scas
and
pop
dec
cmp
push
rclb
jl
stc
xchg
add
pop
iret
mov
dec
repz
xor
testb
mov
scas
dec
xchg
lret
mov
or
mov
push
ror
ds
jg
in
fnstcw
icebp
fidivrs
dec
out
test
sbb
mov
ljmp
shlb
sbb
and
sbbb
lahf
push
inc
leave
das
jae
or
push
ret
jne
or
lods
lods
lahf
leave
pop
ret
and
lea
mov
jbe
push
xchg
out
scas
dec
lods
or
push
sbb
adc
insb
clc
pop
mov
xor
ret
cmp
adc
jo
lods
popf
fcmovu
in
out
out
jge
into
jae
idiv
leave
cmp
vunpckhpd
adc
cmp
sbb
xor
sub
vmwrite
outsl
std
nop
stos
ja
les
insl
cmp
mov
pop
sbb
push
popf
mov
fcompl
adc
cmpl
inc
outsb
int
mov
cmpsl
jno
jle
repz
sbb
pop
stos
dec
icebp
and
sbb
mov
inc
inc
andb
repz
repnz
lret
add
lcall
mov
adc
aas
or
pushf
inc
pop
cmc
and
sbb
lea
lahf
xchg
xor
inc
out
out
push
dec
dec
arpl
ljmp
scas
cmp
stos
inc
xor
divl
ret
insb
mov
or
push
pop
aas
pop
gs
mov
outsl
aam
mov
arpl
mov
push
cmp
add
jbe
adc
mov
faddl
lret
sahf
push
dec
je
mov
mov
fnstenv
cmc
dec
aas
daa
inc
or
xor
add
xchg
jg
or
pop
scas
jmp
inc
jae
loop
xchg
rol
ss
fiaddl
gs
dec
fs
sbb
adc
shrb
push
sbb
test
clc
inc
xchg
dec
jnp
xchg
dec
clc
fidivrl
jne
and
insl
and
dec
mov
cmp
mov
ret
cmp
ja
test
adc
mov
or
push
mov
dec
xor
adc
xlat
outsb
aaa
lods
jle
jle
popf
ret
adc
stos
pop
js
stc
mov
xchg
out
sbb
jmp
rol
fidivs
roll
fmuls
jae
add
push
adc
jae
fdivrl
mov
push
daa
mov
adc
or
xor
bound
test
mov
add
cmp
pusha
mov
fs
cs
sti
lret
into
fldl
icebp
cmpsl
psrlq
cmp
sub
xor
hlt
stos
sub
sub
sub
loop
mov
and
dec
xchg
adc
cmp
test
movsb
or
mov
jae
into
add
stos
pusha
mov
push
add
sahf
xor
mov
and
addb
ficomps
xor
push
jle
xor
jecxz
aas
mov
testl
push
inc
pop
imul
decl
sarl
sbb
mov
fsin
aaa
testl
push
jb
cmpsl
xor
push
test
nop
mov
inc
pushl
add
mov
and
push
fldl
icebp
scas
or
xchg
dec
leave
aam
push
es
jp
movsb
leave
xchg
je
pop
or
push
add
pop
gs
push
inc
das
ljmp
xor
mov
inc
add
xchg
loop
jno
inc
pop
xchg
loop
jb
insl
out
lret
xchg
fidivrs
or
scas
pop
ret
mov
jo
xchg
dec
dec
mov
mov
push
out
pop
pop
sub
out
mov
mov
into
push
repnz
fs
fstps
jle
or
pop
xchg
popa
pop
sub
sub
loopne
push
push
int3
rcl
mov
stc
movsb
popf
not
mov
lret
adc
xor
add
dec
push
mov
fdivs
sti
lea
or
in
loopne
pop
inc
lret
pop
aas
ljmp
outsb
repnz
dec
xchg
xchg
inc
and
add
cmp
scas
hlt
pop
add
rcll
psubw
xchg
jl
cmp
xchg
dec
mov
mov
insb
and
fdiv
cmpsb
cmp
in
sahf
sbb
mov
cli
ja
cmpsl
pop
or
jecxz
fidivl
pop
nop
sub
cmp
inc
loopne
or
daa
dec
sub
or
bound
into
inc
mov
sub
out
mov
push
xlat
xlat
mov
ja
cld
or
adc
cmc
neg
or
test
adc
mov
jb
jne
mov
fcmovu
dec
popf
jmp
jo
jnp
pop
pop
scas
cmp
enter
mov
fdivl
cmp
lret
out
push
stc
cmpsl
xchg
add
mov
bound
push
sti
and
test
inc
lods
sahf
outsb
jne
push
loop
mov
mov
jge
sbb
xor
mov
cli
cmp
mov
or
adc
dec
cmpsb
daa
push
jo
mov
xor
iret
int
lcall
test
inc
fidivl
aam
and
mov
loopne
imul
stos
adc
dec
sub
sub
testl
shlb
or
dec
dec
arpl
mov
in
cmp
outsb
lods
cmp
mov
push
cs
xlat
imul
inc
and
std
out
lods
add
or
cmp
adc
inc
lahf
add
push
cmpsb
add
pop
add
and
inc
movsl
or
andl
fwait
sahf
sub
jno
jle
js
or
sbb
scas
sbb
stos
int3
cmp
mov
mov
cmpl
cmc
xchg
xor
pushf
fsubrl
push
adc
outsl
cmp
pop
aaa
sarl
das
push
out
out
mov
push
cltd
sbb
or
lahf
into
sbb
aas
jbe
aad
pop
mov
aas
insb
inc
imul
rolb
fsubr
ljmp
sub
cmp
int
movl
loop
xchg
jge
aaa
aas
es
test
push
or
call
shll
mov
dec
mov
pop
popa
push
enter
jl
decb
inc
lock
cmpsl
cmp
cmp
int
arpl
faddl
out
or
mov
adcl
int3
test
jne
mov
je
out
inc
sub
push
pusha
jnp
sbb
xchg
xlat
movsb
leave
push
pop
ja
and
ficomps
cmpsb
stos
pop
add
xchg
pop
ret
mov
das
jno
fwait
lods
jle
xchg
mov
ret
lret
iret
dec
sub
jecxz
decl
lods
inc
jge
jle
mov
imul
fildll
insl
lcall
iret
mov
arpl
xchg
mov
mov
rcl
in
add
es
pop
fucomi
das
sub
jmp
sbb
test
or
in
push
cmc
push
xor
fs
mov
stc
dec
pop
iret
in
mov
imul
jl
cmp
mov
ds
idivb
pop
rolb
sbb
mov
push
shl
out
in
lret
sub
add
cmp
lock
loop
call
mov
mov
or
sbb
ja
andb
test
inc
insb
in
jle
mov
pushf
imul
je
test
pop
xor
xor
aaa
mov
insl
gs
ret
outsb
pop
xlat
push
sbb
jle
ja
xchg
inc
jmp
sub
inc
inc
jbe
mov
aad
cmc
lea
call
or
lret
dec
shlb
iret
je
fcomi
adc
ret
fidivrl
std
in
jns
or
imul
pop
in
inc
outsl
mov
fwait
cmpsl
insl
imul
scas
mov
xchg
xor
xchg
jae
mov
cli
sti
out
fcomps
mov
test
aaa
xlat
pop
outsb
add
xchg
push
jl
or
cmpb
mov
dec
xlat
cli
incl
enter
ljmp
push
pop
sub
xchg
aaa
cmp
shl
ljmp
add
inc
pop
mov
mov
inc
sub
lea
hlt
or
jecxz
mov
cltd
lods
orl
out
jns
int
pop
loopne
xchg
or
rcr
das
cmp
shl
xor
push
mov
out
push
pushf
jno
jno
pop
sub
cmp
push
or
sbb
insb
and
inc
ret
inc
fwait
std
add
addr16
out
loop
push
xchg
loope
aaa
or
push
adc
xchg
lds
movsb
jbe
xor
and
sbb
fnstsw
pop
jg
test
out
out
mov
jne
sbb
das
pop
mov
pusha
ds
outsl
mov
jp
stos
fwait
repz
xchg
pop
xchg
stos
dec
dec
imul
cmpsl
cmc
popa
negb
int3
in
push
add
mov
loop
xlat
jbe
sub
sub
andl
or
push
lds
js
fadds
pop
inc
xor
icebp
add
mov
and
shlb
bound
pushf
icebp
push
fs
add
lea
lea
test
stos
xor
xchg
cltd
out
and
sub
or
push
aaa
pop
mov
add
jno
add
jl
pop
and
add
mov
outsl
inc
inc
stc
push
jno
sar
enter
lahf
jno
popf
pop
test
adc
add
bound
cwtl
das
lahf
ja
fmul
pop
cli
aaa
inc
xor
and
mov
hlt
add
pop
pusha
dec
inc
jmp
add
mov
mov
scas
lahf
cmp
xchg
xor
xchg
das
lret
xlat
or
cltd
or
sub
cmpsl
xchg
cmp
mov
xchg
pop
gs
std
in
jl
sbb
xchg
stos
dec
shl
pop
loop
jo
stos
mov
stos
and
jecxz
movsl
add
hlt
rcrb
sbb
iret
dec
pop
cwtl
pop
adc
call
sub
push
xor
jg
jmp
sbb
dec
in
xlat
mov
enter
std
jmp
fists
mov
cmp
mov
sub
xor
mov
inc
insb
pop
pop
lds
les
xchg
outsl
pushf
mov
ljmp
dec
fidivrs
ret
mov
xchg
fcmovne
push
mulb
test
adc
loop
icebp
xchg
dec
pop
mov
push
test
loopne
cmp
cltd
pop
mov
popa
leave
sbb
js
arpl
fisttps
pop
in
or
xchg
adc
test
xchg
std
push
into
push
push
push
inc
mov
jnp
add
cmp
mov
jmp
hlt
mov
mov
xchg
mov
dec
lret
push
jo
movsl
or
jl
icebp
imul
sub
push
ret
sbb
mov
mov
jae
rolb
push
jle
lret
cs
gs
data16
outsl
cmp
dec
jle
insb
push
xor
add
inc
popa
jnp
hlt
pop
mov
mov
shll
jno
out
movsb
push
pop
cmp
mov
and
ret
adc
push
mov
dec
lods
add
or
imul
addb
int3
lea
push
sub
shrb
push
cmp
or
int3
dec
bound
shll
mov
repnz
or
test
ja
add
cmpsl
scas
mov
dec
mov
shl
push
dec
push
mov
cmpsl
jp
dec
sub
cmp
cmc
hlt
stos
ss
sahf
fistl
sarl
rcrl
jno
mov
loope
sbb
js
sub
in
mov
imul
imul
jns
jb
movsb
pop
mov
xchg
lock
cmp
arpl
dec
push
xor
cli
sub
jp
scas
out
xlat
mov
mov
gs
mov
jb
aad
test
mov
sbb
xchg
jge
addr16
loopne
test
pop
stos
out
ret
xchg
ret
cmc
pop
push
sub
testb
pop
clc
out
mov
push
push
or
out
jg
add
push
sbb
out
push
push
subps
inc
push
mov
jae
gs
sub
jl
xor
push
test
cltd
and
rorl
sub
or
sti
iret
push
jns
mov
gs
popa
shrb
cmp
sbb
cltd
hlt
push
mov
pop
insl
jmp
xchg
into
and
xor
jns
sahf
ljmp
aas
pop
cmc
adc
add
dec
mov
insl
xchg
faddl
sbb
mov
mov
fs
imul
aaa
in
ljmp
sti
lahf
mov
mov
pop
stos
lahf
mov
in
pop
add
dec
or
mov
add
push
add
rcl
cmp
dec
stc
adc
jo
pop
out
pop
pop
fistps
insl
cmp
loopne
jno
or
add
mov
push
xchg
add
add
sub
jbe
pop
stos
fisubrl
mov
rcll
or
rol
addr16
cmp
imull
pop
insl
mov
push
push
jb,pt
enter
add
push
sbb
out
mov
and
sbb
push
cmp
repz
in
pushf
in
mov
xchg
cmp
push
arpl
ret
cli
pop
std
mov
jg
aas
mov
xor
dec
popa
jno
ret
fisubrs
popf
jae
inc
les
sub
add
test
in
jb
dec
stc
xor
and
xor
call
cwtl
movsb
push
iret
xchg
into
repnz
out
sti
xlat
sub
bound
stos
pop
ja
in
in
mov
push
push
leave
xchg
test
arpl
sub
test
pop
icebp
sbb
xor
fildl
mov
seta
roll
xor
movsb
loopne
lahf
mov
ljmp
bound
stc
out
pop
out
or
jmp
aad
scas
ss
push
add
jno
push
nop
or
inc
cwtl
jo
rclb
loop
adc
fwait
mov
repnz
cmpsb
adc
jo
mov
cwtl
sub
adc
cmp
push
add
push
jp
test
add
fdiv
fs
sahf
std
repz
mov
outsl
jnp
xlat
call
ret
sbb
aam
cmc
repz
or
pushf
add
sub
jae
inc
scas
inc
lods
or
sub
sub
loope
popa
addr16
adc
sub
call
jp
pop
shll
aaa
xchg
ljmp
and
pop
and
cmp
mov
mov
dec
test
push
cmp
fdivs
inc
std
rorl
int
xchg
enter
push
mov
iret
fsubl
dec
aaa
mov
int
sarb
inc
ljmp
mov
pop
stos
pop
lcall
adc
mov
mov
and
lahf
jg
test
jl
lahf
cmp
lret
cmp
mov
loopne
and
adc
fdivrs
call
adc
xchg
push
cwtl
xor
inc
jns
or
xchg
lods
outsb
stos
int3
lahf
cli
dec
lock
mov
or
daa
mov
jns
addr16
cmp
imul
out
lods
int3
sbb
mov
push
xor
lods
repnz
mov
call
movb
scas
arpl
push
adc
xchg
cmpl
fidivrl
hlt
sti
stos
popa
pop
pop
inc
pusha
repz
jno
stc
pop
outsb
insl
xor
inc
jle
push
mov
cs
stc
and
xor
sub
daa
aad
rsqrtps
mov
mov
out
lcall
ljmp
dec
std
mov
push
out
sahf
pop
sub
fidivs
cltd
adc
mov
pop
loopne
lcall
outsb
mov
sub
sbb
push
outsb
in
mov
es
dec
push
add
pop
loopne
sbb
fimull
sbb
push
daa
jnp
imul
adc
push
in
or
bswap
call
aaa
mov
sbb
mov
fs
popa
push
adc
es
pop
aad
xchg
repnz
jge
clc
sub
push
inc
mov
stos
scas
dec
mov
imul
sub
jb
push
es
loope
mov
mov
stos
cwtl
cmp
out
mov
cltd
lods
pop
mov
mov
repz
iret
and
lods
in
out
das
rorl
mov
loope
cvtpi2ps
lret
jbe
loope
push
aas
cmp
pop
icebp
sti
cmp
sub
out
sahf
leave
fiaddl
fisubrl
fists
stos
into
inc
add
sbb
adc
ss
in
pop
icebp
adc
dec
subl
idivb
mov
xchg
pop
xchg
cli
xchg
push
pop
mov
adc
aaa
sbb
inc
dec
or
mov
pop
adc
shrb
or
clc
clc
or
mov
and
and
cmpsl
push
aas
lds
aam
movsl
jmp
inc
insl
adc
adc
sbb
sub
or
xor
fldcw
sti
xchg
sbb
and
movd
inc
cmpsl
and
scas
sahf
stc
mov
jne
dec
adc
stos
fistps
ds
dec
jb
out
repz
ds
mov
lcall
popa
fwait
stos
clc
test
mov
das
lods
mov
out
imul
push
lret
xor
inc
cmp
mov
stos
inc
lret
adc
in
insl
mov
push
mov
arpl
sbb
jo
sub
add
jae
stos
xchg
push
pop
filds
iret
int
ja
push
jmp
jbe
das
sbb
cmpl
dec
dec
sbb
xchg
ss
push
adc
int3
outsl
cmpsb
jno
aaa
and
cltd
repnz
pusha
push
mov
imul
movsl
mov
or
xlat
mov
inc
pop
mov
lret
jp
sbb
mov
xchg
dec
inc
or
xor
lret
dec
mov
arpl
mov
lock
push
out
jno
push
in
add
xor
cmp
clc
xchg
les
xchg
in
jno
mov
or
fsubrs
sub
sbb
cmp
mov
pop
push
lods
pop
jecxz
inc
and
cmp
and
shll
dec
push
les
cmp
test
cmp
jnp
dec
fisubs
push
icebp
adc
mov
cmc
xor
lret
rol
dec
jo
std
sub
push
rorb
cmp
jns
fcmovnb
in
sbb
insl
push
inc
or
stos
dec
sub
adc
movsl
adc
into
shll
sub
test
xor
std
ret
in
adc
mov
dec
aas
sti
leave
stc
call
sub
sarl
aam
xor
nop
sub
aam
and
sbb
test
adc
rcl
lds
rcll
and
dec
sti
sub
mov
loop
push
mov
icebp
jp
jne
sub
dec
xlat
scas
fsubr
movsb
and
mov
pop
ljmp
stos
jb
ds
pcmpeqb
fdivs
add
daa
sub
add
add
imul
push
out
call
pop
fwait
add
insl
lock
dec
out
enter
and
aam
ljmp
sbb
mov
add
xchg
fwait
xchg
lods
sub
mov
adc
mov
lea
pop
clc
dec
adc
in
das
sub
stos
xor
add
outsl
test
jbe
adc
je
test
mov
cmp
inc
inc
data16
outsl
test
or
ds
pop
and
incl
or
and
pop
pop
dec
xchg
mov
mov
mov
sti
outsl
insb
dec
jbe
pop
pop
sbb
loop
loope
lock
sub
das
test
jmp
or
jp
inc
adc
cld
xchg
sbb
and
outsl
add
mov
enter
mov
aaa
repz
xor
std
pop
aad
ret
push
xlat
xchg
imul
mov
jge
test
adc
lret
xor
ljmp
pop
sbb
test
rcrb
mov
js
cltd
stc
scas
popf
mov
lea
push
jle
lods
adc
roll
lock
sbbl
into
mov
mov
pop
gs
jb
je
cwtl
cmp
push
jb
data16
inc
jbe
out
xor
leave
in
or
jbe
fisttpll
or
xor
repnz
mov
sub
mov
in
bound
add
insb
and
xor
dec
ror
dec
enter
inc
dec
pop
outsb
dec
or
fidivs
fst
fbld
ds
dec
pop
movsl
shll
aaa
pop
push
js
pop
adc
mov
hlt
gs
lret
sbb
adc
or
inc
cmpsl
mov
jo
stos
rol
or
stos
adc
call
inc
gs
inc
ds
jmp
mov
in
mov
int3
lock
or
dec
inc
mov
inc
mov
add
test
ret
mov
iret
insl
add
push
sbb
or
int
shll
divb
cmpsb
push
mov
rorl
sbb
lock
add
aaa
mov
inc
add
mov
sti
cld
or
or
call
add
lea
hlt
pop
jae
inc
ss
xchg
sbb
mov
lds
and
sub
arpl
and
dec
arpl
xlat
les
ret
pop
das
lods
test
inc
fwait
push
cwtl
mov
movsb
mov
xorps
xchg
jnp
outsb
mov
popa
andb
les
cmc
inc
mov
or
sub
enter
and
sub
jp
adc
insl
push
rcl
dec
imul
clc
mov
int3
cmp
pop
jbe
cmp
dec
in
jp,pn
mov
xchg
sbb
test
aam
mov
jno
cltd
pop
lret
rol
shr
and
xlat
cmp
data16
sti
js
iret
aad
fmuls
push
xor
jecxz
shl
dec
sub
mov
loopne
cmpsb
mov
or
dec
leave
pusha
mov
push
xor
imul
jl
adc
xor
mov
jbe
sti
jns
mov
aaa
xchg
adc
mov
xlat
aam
repnz
dec
adc
xchg
sub
xor
aad
jne
mov
push
outsb
adc
adcl
cld
mov
mov
push
push
jp
push
jne
in
and
push
cs
push
ret
mov
mov
fistpl
test
js
pop
stos
push
mov
dec
stc
pop
sbb
xchg
cmpsb
movsl
adc
add
dec
shr
fldt
push
mov
movsl
les
xlat
push
pop
mov
dec
test
or
movsl
inc
popa
stc
dec
push
and
sti
sbb
int
pop
test
push
popa
call
xor
in
add
sub
pop
xor
or
or
xor
mov
cmp
fmul
xchg
push
pusha
cltd
cmc
sbb
shlb
jecxz
rorl
cli
xchg
pop
das
int3
inc
mov
incb
call
shlb
icebp
addb
and
sbb
pop
addr16
add
cmp
adc
or
daa
nop
jns
inc
shll
mov
inc
jnp
xlat
dec
mov
pop
pop
mov
cli
iret
aaa
push
fdivl
mov
arpl
add
outsl
jbe
rcll
fistpll
dec
jno
xor
ret
lods
xchg
stos
into
adc
leave
and
shrb
les
jae
pop
out
sti
push
jecxz
sub
js
pop
pop
pop
adc
shrl
sub
les
fimull
jb
aaa
xor
xchg
daa
jbe
stc
push
out
mov
inc
loop
mov
cmp
pop
frstor
imul
mov
jmp
add
and
ret
cmpsb
arpl
mov
mov
push
ja
add
ds
mov
pop
add
mov
dec
test
push
in
sbb
scas
imul
mov
gs
addb
fdivrs
out
stc
jp
insl
inc
std
fcoml
push
jno
lret
xor
out
dec
std
mov
fcomps
mov
rorb
xchg
mov
adc
dec
test
jg
xor
mov
mov
sahf
bound
and
or
xor
ja
mov
push
stos
mov
lock
in
or
xor
les
sbb
in
pop
jns
mov
lret
pop
mov
test
sub
push
nop
cmpsl
aad
sub
push
lock
pop
jp
dec
cli
mov
push
call
insb
jmp
pop
ret
js
xchg
imul
cmp
adc
push
xlat
push
dec
sysenter
pop
decl
sbb
cmp
sub
add
push
xchg
cmp
stos
imull
lea
mov
jnp
out
xchg
data16
jle
add
pop
pop
pop
sbb
sbb
pusha
inc
clc
test
dec
push
daa
popf
add
outsl
jne
add
das
sbb
add
jle
fdivs
inc
pop
fstps
cwtl
mov
or
pushf
mov
adc
lock
das
test
xor
inc
jmp
sbb
xchg
xchg
fadds
xchg
adc
dec
lcall
sub
add
pushf
cwtl
sub
out
mov
sub
aad
push
out
iret
aas
repnz
fcom
mov
cltd
je
mov
add
aad
push
pop
stos
dec
mov
sub
adc
in
mov
mov
imul
testb
mov
push
daa
jg
loope
adc
lods
or
fsubl
sar
ljmp
out
adc
sbb
cmp
inc
lea
arpl
jecxz
mov
xchg
pop
shrb
ss
subb
dec
jge
lret
add
adc
sarl
mov
dec
lds
lock
fidivrs
xchg
and
lahf
adc
incb
lahf
mov
xchg
imul
sub
filds
cs
xchg
pop
push
enter
xchg
scas
int
mov
cwtl
mov
insb
in
dec
inc
xlat
iret
in
sub
xchg
push
mov
sahf
insl
dec
sbb
stos
add
clc
jg
ret
test
jno
xchg
jg
orl
cld
pop
movsb
jl
rcll
push
nop
enter
push
enter
adc
cmpsb
nop
mov
sahf
jbe
pushw
push
xchg
cmp
mov
loope
xor
jl
cmp
pop
add
pop
lock
jp
popf
dec
mov
cmp
inc
add
cwtl
popa
inc
dec
inc
cmp
fisttps
jbe
inc
push
rclb
add
or
pop
leave
dec
adc
jnp
sbb
sbb
sbb
adc
push
arpl
jno
mov
insb
push
push
cld
jb
mov
das
test
negl
hlt
adc
fs
sub
xchg
lret
cmp
jl
es
int3
adc
jns
dec
in
rcr
or
or
mov
and
adc
and
sub
jmp
xchg
xchg
or
add
lods
dec
mov
subb
enter
lcall
push
lods
jle
orb
jo
or
rcrb
test
ds
jmp
add
paddsb
dec
fisttpll
rclb
xor
std
movsb
sub
jmp
iretw
into
dec
xchg
and
and
push
pop
push
mov
mov
cmp
pushl
fcoms
dec
xchg
cmp
add
push
lahf
out
xchg
add
lret
push
arpl
out
cmp
add
dec
push
in
add
xchg
add
loop
lods
adc
ja
jae
das
jmp
repz
push
rcrb
push
pop
jnp
fisubrl
icebp
lahf
fbld
sub
lret
push
and
and
dec
inc
mov
mov
js
std
jno
stos
dec
push
pop
test
jo
stos
jb
out
loop
fcmove
jmp
push
in
in
scas
sbb
xor
cmp
dec
cmpsb
xchg
ret
pop
mulb
daa
clc
jae
scas
jo
cwtl
xchg
dec
or
imul
jno
js
push
fiaddl
pop
cmp
lahf
push
cltd
repz
nop
call
lea
sbb
xor
pushf
popa
sbb
cmp
mov
sbb
mov
jb
dec
inc
int3
arpl
mov
or
stc
mov
adc
test
dec
sbb
mov
shll
icebp
pop
mov
xchg
inc
adc
dec
nop
and
or
add
adc
add
cmc
ljmp
mov
jmp
mov
adc
daa
or
cmp
je
hlt
and
cmp
mov
xchg
jge
shlb
inc
and
std
clc
mov
jns
or
mov
shl
push
imul
scas
pop
aas
dec
mov
addr16
xchg
pusha
fwait
adc
fs
jge
adc
cmp
mov
outsw
push
add
mov
and
pushf
adcl
shll
push
jl
movsb
fnsave
or
negl
out
xchg
cmp
lds
scas
pop
cmpl
les
lods
cwtl
mov
cmp
pop
in
arpl
sub
inc
sub
push
xor
mov
ljmp
in
mov
int3
movb
xor
xchg
inc
and
sbb
add
dec
mov
sub
mov
shll
add
inc
cmp
xor
push
popf
das
pop
or
std
faddl
daa
dec
fs
add
aam
jno
inc
rcrb
lock
jle
insl
ja
or
adc
nop
pusha
daa
jae
sahf
out
or
bnd
sarl
jbe
or
add
or
mov
call
sahf
icebp
outsl
add
or
pushf
stos
incl
fidivl
dec
jbe
popf
out
fs
cmp
int
xor
loop
test
and
xor
cli
or
out
and
xor
testb
ret
dec
sbb
xchg
xchg
inc
jle
cmp
cmp
pusha
wbinvd
add
mov
xchg
push
add
shlb
inc
push
out
mov
cld
sbb
movsb
cmpsb
dec
dec
adc
ja
inc
mov
or
sbb
jge
les
jb
dec
int
imul
push
shll
daa
and
pop
cmp
or
in
imul
cmp
scas
inc
cmpsb
bound
rolb
sub
les
cmp
add
xchg
mov
push
lock
add
push
fisttps
xchg
mov
mov
scas
into
mov
int3
lcall
lret
adc
sub
movl
fs
loop
stc
xchg
in
mov
cmp
jno
mov
xchg
add
dec
mov
jle
mov
stc
and
fcoms
mov
lock
xchg
inc
fisttpl
lcall
imul
test
test
pop
sahf
repnz
jnp
inc
cmp
mov
jg
pop
das
mov
add
jb
jo
sahf
mov
or
leave
push
push
cld
nop
mov
adc
pop
cmpsb
pop
jne
je
arpl
insl
push
push
iret
mov
cmpsb
inc
ficoms
insl
push
insl
mov
shrl
xchg
outsb
pop
pop
push
les
xchg
or
outsb
mov
jg
xor
stos
mov
sbb
fs
lret
popa
mulb
dec
xor
push
or
mov
xor
pop
mov
xchg
inc
mov
sub
out
fdivs
mov
jmp
sbb
aas
cmp
xlat
movsb
repnz
imul
sbb
jp
jp
pusha
loope
add
loopne
add
xchg
push
push
repnz
shl
addb
imul
loopne
xchg
jecxz
jmp
ret
xchg
punpckhwd
int3
mov
rorl
jge
mov
out
fadd
call
lahf
ja
jmp
shrb
push
cmp
daa
out
or
stos
jle
fidivrs
mov
jo
push
cmc
jns
jge
jne
nop
or
mov
lahf
cli
inc
outsb
push
pushl
sub
sub
mov
add
and
push
sbb
daa
mov
cmp
sbb
ucomiss
in
out
sbb
rolb
cmp
push
cmp
mov
adc
mov
cmp
mov
xlat
jns
sti
inc
xor
dec
aad
push
aad
jne
out
pusha
mov
stc
mov
ljmp
sub
inc
rorl
jmp
and
repz
aam
adc
cmp
fbstp
adc
sbb
xor
fmul
fcmovnu
pusha
int3
rcl
rcll
mov
pop
cmp
adc
inc
mov
std
xchg
out
push
scas
sarb
cmp
inc
inc
movsb
sti
loope
dec
dec
mov
and
mov
enter
push
in
inc
ljmp
mov
sbb
mov
inc
repz
mov
and
and
lcall
lods
pop
xchg
addr16
mov
pop
push
or
ljmp
fldenv
shll
cmp
in
inc
lods
inc
pop
cltd
or
cwtl
sarl
cs
into
inc
adc
in
shlb
sbb
push
mov
in
jge
imul
repz
mov
push
mov
cld
notl
xchg
adc
dec
cmp
inc
les
cmp
movsb
in
test
testl
mov
add
dec
pop
mov
mov
outsl
gs
test
push
inc
lea
rcll
repnz
cs
ljmp
clc
sub
scas
jg
dec
iret
call
into
xchg
or
cmpsl
in
mov
stc
mov
or
das
sub
add
inc
mov
or
repz
cli
cld
dec
pop
mov
insl
mov
xchg
aad
jae
mov
sub
jne
mov
jns
ds
imul
daa
into
mov
add
cmp
cltd
push
scas
jl
push
arpl
sbb
imul
mov
and
push
dec
xchg
movsl
push
mov
popa
pop
jmp
mov
mov
testb
dec
mov
test
lahf
xchg
xor
adc
and
pop
arpl
imul
mov
cmpsl
je
sub
aas
mov
xchg
fsubr
pusha
inc
fsubr
mov
icebp
sbb
leave
pop
mov
stos
mov
daa
and
out
cwtl
stos
jns
pop
sar
cwtl
popa
mov
push
mov
adc
mov
mov
mov
add
ss
mov
scas
sarl
rclb
cli
sub
mov
outsl
push
in
mov
sti
ss
das
push
jae
jo
cmp
inc
lcall
inc
leave
mov
icebp
js
jo
or
es
std
je
std
rclb
xorb
mov
imul
out
sti
repnz
mov
pcmpeqw
notl
xor
ret
mov
mov
add
pop
mov
dec
addr16
mov
mov
pop
mov
hlt
adc
jns
idivl
jle
dec
sub
ror
mov
pusha
iret
mov
mov
icebp
mov
out
shrb
mov
stc
pop
pop
sbb
xchg
cmp
mov
js
stos
jle
sbb
jns
jg
push
mov
test
cmc
pop
mov
inc
shlb
call
shlb
popf
sub
jge
push
andl
cwtl
dec
jecxz
pop
jnp
int
mov
mov
or
test
xor
push
pop
popf
stos
pop
push
aam
leave
adc
rorl
ret
insl
or
pusha
push
xchg
sbb
add
lcall
mov
cmp
add
xchg
jle
xchg
xor
push
in
lret
lods
xchg
add
movb
mov
mov
mov
sbb
inc
mov
push
dec
jo
xchg
jno
sbb
jp
push
cmp
adc
cmp
add
insl
daa
out
mov
xchg
lea
push
ss
mov
sub
daa
dec
cmp
xchg
adc
jbe
loope
sub
mov
mov
and
sbb
test
jmp
xchg
divl
sti
inc
inc
mov
imul
gs
cwtl
xchg
jo
push
dec
mov
pop
cmp
cwtl
sahf
pop
mov
or
je
xor
cmc
insb
mov
sahf
fidivs
mov
dec
adc
movsl
pushf
enter
scas
das
repnz
fdivs
xor
mov
mov
bound
mov
into
loopne
in
cs
adc
insl
popf
aam
and
or
loop
addr16
adc
adcl
sbb
sub
mov
xchg
and
loopne
scas
shll
jp
in
mov
mov
test
sub
push
sub
mov
mov
lret
arpl
pop
call
adc
cli
insb
adc
cmp
loope
movb
iret
inc
xchg
push
andl
push
jo
bound
xchg
push
js
mov
in
adc
gs
mov
sbb
xchg
xchg
bound
and
jp
loopne
jle
mov
hlt
imul
push
or
scas
fs
jns
push
dec
dec
ss
pop
push
jecxz
in
es
in
push
pop
add
xchg
sbb
enter
test
jecxz
lret
mov
mov
push
outsl
cmp
test
adc
jle
hlt
test
insb
mov
popf
jno
sbb
ss
not
mov
mov
pop
push
push
push
cmpsl
dec
sahf
nop
pop
sbb
sbb
cmp
movsl
dec
imul
mov
mov
cmp
out
iret
add
lahf
push
cwtl
roll
jp
jmp
sbb
orb
cmpsb
loop
jge
sarl
sahf
jle
jbe
das
loopne
das
stc
pop
jmp
adc
aad
mov
mov
pop
pop
clc
insb
mov
sbb
hlt
sbb
clc
movsl
shrl
lock
dec
inc
fwait
in
insb
inc
or
insl
adc
jmp
xchg
and
xor
shrl
lcall
or
cmp
hlt
out
jp
rclb
mov
dec
cld
xor
cmp
cmc
loop
cmp
in
mov
push
test
add
cwtl
cltd
aas
mov
add
cmpsb
lods
or
aam
aam
fwait
outsl
sbb
pop
push
push
pusha
mov
fdivrs
cmp
mov
sub
call
mov
lods
mov
inc
das
mov
mov
out
aam
jl
jbe
jecxz
pop
daa
das
mov
mov
pop
sbb
mov
push
fimuls
sub
xor
sub
xor
cmc
mov
js
cmp
data16
ss
sti
stos
js
mov
pushf
adc
sub
lcall
je
pop
or
sbb
cmc
out
rorb
jg
sbb
in
xchg
dec
pop
scas
mov
mov
fistps
pop
xor
push
sub
in
inc
in
mov
cmp
fsubp
cmp
or
mov
out
push
jns
jecxz
or
inc
jmp
hlt
imul
xchg
lea
bound
sub
and
cltd
aaa
add
sbb
fstpt
mov
or
adc
fs
lretw
test
xor
xchg
lret
scas
arpl
insb
mov
mov
xchg
sbb
add
mov
sub
and
mov
mov
aad
add
pushf
lret
xor
into
out
fisttps
and
add
ret
jecxz
or
lret
gs
xor
push
jl
pop
jns
adc
incb
stc
stos
arpl
jbe
sbb
cmpsl
loope
fmul
pop
sub
clc
mov
fists
cmp
daa
xchg
in
push
and
lods
cwtl
lar
lods
mov
adc
int
sbb
jle
sbb
int
cmp
xchg
or
mov
pop
sarl
data16
sub
mov
out
and
hlt
mov
pushf
cltd
xchg
fiadds
or
or
mov
mov
sarl
jle
or
in
or
adc
jp
jl
xor
shlb
fbstp
sub
xor
mov
xchg
mov
pop
je
dec
jl
hlt
jbe
pop
or
stos
lds
or
lods
mov
mov
sub
inc
pop
imull
lods
mov
repz
outsb
push
sahf
add
sub
add
aaa
xorb
sub
and
xor
subl
call
or
push
inc
sub
jecxz
xorl
mov
pop
lret
pop
cmp
cmc
shl
adcb
andb
cmp
sbbb
sbb
mov
or
xchg
or
enter
cltd
call
cmp
pop
xor
xlat
xchg
jmp
rclb
adc
xchg
mov
fidivrs
add
ja
lea
dec
jnp
out
pop
mov
enter
into
in
sbb
mov
loop
mov
sbb
int
cmp
ljmp
paddq
movq
insl
xor
and
movsb
fbld
adc
add
and
jecxz
inc
outsl
testb
add
and
xor
loop
xor
dec
sti
movsl
dec
jbe
lahf
sub
mov
fists
mov
mov
or
push
push
push
pushf
mov
mov
xchg
js
adc
out
lcall
lcall
lea
pusha
xor
imul
movsl
mov
rcrl
mov
test
adc
dec
lods
cltd
jecxz
rcrl
jbe
sbbl
loope
loop
pop
mov
fdivrp
mov
fwait
movsb
inc
fs
je
pop
mov
add
mov
inc
or
mov
or
ret
out
shll
push
or
push
jae
inc
in
test
popa
xchg
mov
sub
dec
fidivrs
dec
rolb
cli
arpl
or
jle
add
lahf
cmp
sbb
mov
bound
mov
out
stos
xchg
lret
lret
mov
cltd
daa
gs
test
jecxz
and
in
scas
ja
enter
jb
or
cwtl
adc
pusha
xchg
std
ret
dec
mov
into
sahf
cltd
push
test
push
repz
jl
stc
xchg
scas
push
inc
inc
lcall
mov
daa
int
dec
inc
xor
and
inc
sbb
repnz
push
aam
imul
lea
xchg
mov
imul
ficoml
imul
push
fdiv
add
rolb
rorb
loope
mov
mov
push
xchg
push
cmp
aam
pop
test
push
pop
sbb
mov
mov
add
or
shll
add
inc
sbb
aam
jae
sub
hlt
ret
sbbl
xor
imul
and
sahf
test
push
out
xor
jnp
movsb
and
cmp
mov
xor
rcll
adc
enter
inc
jb
repz
inc
ljmp
adc
or
xlat
iret
sbb
mov
gs
mov
sbb
aaa
loope
in
jp
cli
ja
cmc
push
adc
xorb
add
leave
push
pop
push
orb
mov
and
out
or
and
dec
inc
scas
xchg
sub
in
jge
imul
pop
hlt
sbb
shrl
mov
xor
pop
xor
push
and
les
mov
push
std
mov
iret
mov
sub
xchg
and
incl
mov
nop
and
lret
dec
mov
data16
les
icebp
lea
cmpl
scas
fs
sub
pop
mov
pop
jae
add
rcrb
enter
add
and
cmp
xor
sub
movsl
mov
cmp
pop
repz
jnp
xor
cld
dec
lret
adc
mov
jl
adc
or
jb
xchg
sbb
shl
sub
shll
or
push
cli
sub
loop
stc
loop
mov
shrl
popl
push
jp
push
xlat
and
push
iret
cld
aad
jnp
jno
xchg
mov
andb
test
fiaddl
adc
pop
stos
cmpl
sub
and
sbb
jb
mov
fnstcw
cli
mov
daa
cmpsb
xorb
dec
dec
dec
leave
loopne
jmp
in
xorb
and
stos
push
repnz
into
xchg
cmp
popa
sub
mov
std
xor
loope
adc
mov
inc
scas
mov
das
cmp
mov
dec
lock
jg
sahf
pop
shll
data16
ss
popf
mov
jae
dec
jbe
lcall
std
xor
dec
mov
es
sub
or
call
sub
jl
pop
jno
or
cs
xor
imul
mov
sub
mov
cwtl
out
xchg
dec
daa
lret
or
sahf
fistpl
sahf
inc
fucomp
das
arpl
lock
dec
lcall
jg
fstl
nop
dec
test
sbb
cwtl
mov
sbb
cmpsb
jl
and
int3
or
or
add
cld
mov
inc
scas
pop
jns
fnstcw
sbb
roll
fisttpll
mov
nop
and
lock
adc
and
loop
inc
mov
xor
mov
mov
add
cmpsb
lea
jno
dec
inc
rclb
jo
add
insb
inc
add
inc
dec
shlb
xchg
and
mov
ficomps
push
stos
mov
cmpsl
xchg
out
les
add
or
loopne
lea
addl
sub
adc
inc
dec
jecxz
mov
andl
adcb
mov
push
fcmovnbe
cld
mov
or
xor
cwtl
int3
inc
rcrl
pop
sbb
cmpsb
pop
insl
push
mov
rol
sub
mov
mov
iret
push
push
es
loopne
push
cld
shrl
ds
dec
ret
lock
pop
lock
sahf
repz
pushf
fnsave
and
inc
adc
das
std
or
gs
leave
pop
xchg
loop
add
ret
stos
sub
imul
pushf
jno
nopl
mov
nop
inc
and
push
dec
push
sub
xchg
and
pop
test
add
mov
ss
nop
push
sub
sbb
out
iret
aam
test
pusha
mov
add
or
cwtl
push
rolb
mov
iret
xor
jne
jns
data16
jp
dec
les
fcoms
pop
pop
mov
out
lret
dec
es
imul
scas
mov
xchg
and
mov
sarb
add
ss
sub
push
add
add
mov
addb
xchg
fiaddl
xor
movsl
mov
mov
popf
ljmp
sahf
int
fisttpl
sbb
pop
cwtl
push
fdivr
mov
sub
jns
jae
xlat
jp
jge
adc
loopne
mov
repz
or
cmpl
mov
test
xor
adc
push
and
ret
mov
lock
loopne
mov
adc
add
bound
xchg
push
and
out
cmp
mov
xchg
hlt
push
cs
movsb
aaa
sub
fs
xchg
push
dec
jo
inc
mov
and
cltd
jo
lds
jl
or
rolb
jo
sahf
dec
f2xm1
jmp
mov
push
psrld
inc
rol
sub
pop
dec
xor
int
fwait
shll
shlb
xchg
pop
test
mov
adcb
idivb
jecxz
push
rcrb
and
adc
lea
add
and
and
xchg
jmp
xchg
fcmovnbe
mov
test
add
inc
lret
jo
aas
jbe
mov
xor
into
mov
iret
dec
push
popa
pop
push
ss
jp
out
add
xor
out
push
data16
in
dec
inc
jle
mov
repz
das
mov
lea
sbb
xor
adc
imul
lret
mov
xor
shrb
jmp
dec
xchg
jge
ds
stos
push
sbb
aam
out
jno
jno
dec
cmpsb
addl
adc
xchg
push
pop
test
cltd
or
jb
xor
mov
sub
sbb
fnstsw
adc
mov
jns
lret
sbb
mov
dec
enter
popa
aaa
arpl
out
outsl
std
stos
outsl
test
xor
sahf
outsb
push
jle
jno
out
stos
ret
cmp
cmp
jne
fcomps
xchg
and
adc
xchg
inc
cmp
jbe
andb
lods
shr
in
dec
sub
daa
clc
xor
mov
cmp
push
test
mov
pop
mov
lock
cmc
rcrl
mov
dec
outsl
mov
imul
imul
adc
cmp
loope
push
xor
out
repz
inc
into
mov
xchg
mov
mov
mov
cld
adc
sub
mov
xchg
cltd
pushf
cmp
and
mov
sti
xchg
mov
cmpsb
add
ljmp
sub
add
lds
mov
sub
pop
inc
mov
in
pop
mov
dec
in
xchg
or
inc
xchg
dec
add
sbb
gs
rclb
pop
xor
sarb
push
sbb
sub
sbbb
push
mov
jae
mov
add
pop
mov
inc
sub
dec
mov
mov
incb
subb
xchg
test
int3
xchg
jb
sbb
jae
xchg
sub
call
mov
push
imul
pushf
into
add
add
sub
xchg
repnz
lock
in
cmpsl
icebp
jb
inc
or
xchg
mov
pop
int
adc
and
imul
cmp
dec
pop
shll
test
mov
mov
push
aad
push
xchg
pop
pop
or
jecxz
leave
enter
repnz
in
and
mov
mov
mov
popa
out
pop
and
push
push
out
loope
movsb
and
mov
add
rolb
push
movsl
lock
add
inc
into
adc
dec
xchg
test
loop
and
xor
adc
xchg
mov
jns
stos
lret
mov
add
inc
pop
sbb
inc
out
mov
into
loopne
or
mov
mov
in
or
js
push
pop
imul
mov
mov
mov
aam
sbb
xchg
push
push
sub
push
push
push
call
cli
xchg
ret
aas
xor
stos
clc
sbb
jecxz
xchg
dec
cmc
mov
stos
add
mov
sub
mov
data16
jge
cmpsl
into
or
test
pusha
clc
add
push
xor
sub
and
aas
mov
inc
pushf
cltd
lods
sbb
xor
pop
imul
xchg
jnp
sbb
push
out
and
sbb
popa
sbb
push
mov
andb
lret
jecxz
lcall
sub
xchg
mov
fdivrl
pop
leave
leave
cmp
fidivrl
popl
mov
dec
xor
outsb
scas
imul
aam
xlat
std
mov
and
sub
mov
or
in
jae
out
mov
jp
mov
sub
mov
movsb
inc
inc
test
pop
xchg
fwait
jo
sub
mov
push
pop
push
fwait
ret
int3
gs
shrb
mov
xchg
nop
mov
fldcw
xor
adcb
xlat
mov
add
test
movsb
lods
bound
or
rcrb
outsl
ljmp
mov
and
pop
icebp
pop
lods
pop
lahf
adc
sbb
jmp
popa
xchg
lcall
sub
fs
pop
pop
dec
mov
incl
and
pushf
pop
call
lods
insb
lcall
dec
adc
sbb
imul
outsl
jl
sub
or
mov
xor
jmp
adc
stos
bnd
pop
addr16
hlt
pusha
fiaddl
ljmp
roll
imull
ljmp
fdivs
jns
xor
jge
mov
out
je
and
adc
push
aam
lcall
xor
jmp
lcall
inc
add
cli
cld
pop
inc
call
daa
leave
sub
in
mov
gs
int
mov
add
ds
jno
lods
add
pop
jmp
inc
xchg
xchg
aad
sub
addr16
mul
xor
shl
outsl
rcl
xchg
mov
pop
cmpsb
jmp
gs
in
in
mov
or
inc
add
jmp
mov
push
jnp
mov
adc
mov
pushf
jno
mov
xlat
mov
in
lds
add
xlat
mov
in
push
cmp
jmp
sbbb
in
repz
or
mov
pop
push
or
sub
repnz
or
fcoms
xchg
mov
out
aaa
hlt
xchg
sbbl
mov
fld
push
popf
rolb
stos
xor
test
loop
idivl
sbb
mov
repnz
bound
shll
insl
adcb
push
mov
mov
xor
std
imul
shll
lret
icebp
outsb
call
dec
loope
pop
inc
fs
leave
pop
or
sar
inc
lahf
outsl
mov
stos
loopne
lahf
jns
mov
sbb
mov
lret
hlt
mov
sub
data16
inc
repnz
repnz
andl
call
gs
pop
les
in
jne
add
int
jg
into
mov
gs
add
jmp
push
in
fcompl
aam
adc
daa
inc
fistpl
out
push
mov
iret
lock
push
and
push
and
cmpsl
pusha
neg
cmpb
dec
out
incl
dec
sbb
jbe
jle
pop
das
in
ret
clc
data16
addb
jle
sub
jmp
cmp
push
sahf
test
add
cld
popa
or
scas
push
popa
or
insl
push
add
arpl
out
jg
pop
dec
sbb
dec
mov
aas
cmc
xchg
jg
hlt
cmpsl
sbb
add
out
adc
dec
movsb
pop
fs
test
mov
mov
sub
adcl
mov
ret
and
xchg
int3
xchg
pop
mov
loop
popf
sbb
std
xchg
pop
test
xor
mov
imul
pop
and
sub
mov
aad
in
fldt
das
test
mov
and
jns
cmp
push
js
iret
mov
push
sub
shrl
cmp
mov
enter
scas
imul
adc
or
setg
push
mov
push
ss
mov
int
push
add
int
icebp
mov
in
in
int3
leave
xchg
sbb
adc
and
mov
xchg
add
push
fcmove
and
rcll
mov
cli
dec
mov
das
ret
and
xlat
mov
nop
sbbl
outsb
mov
repz
rcrb
jnp
sub
outsl
sbb
mov
ret
mov
mov
pop
mov
jnp
inc
xchg
jg
repz
dec
lret
fst
cmp
stos
std
adc
pop
xchg
mov
xor
in
cmpsl
outsl
mov
cmc
roll
push
aaa
lahf
outsb
lods
repz
aas
je
movsl
adc
push
inc
int
cmp
mov
pop
mov
add
mov
fs
mov
push
push
lahf
int3
adc
outsl
pop
mov
lea
mov
jne
pop
es
out
in
mov
push
inc
adc
imul
sbb
gs
scas
aas
inc
cmp
roll
fs
mov
mov
xchg
stos
mov
adc
jno
jl
push
jo
repz
pop
jne
or
jle
lret
add
push
repnz
rclb
nop
and
mov
adc
push
lock
ds
add
cmpsb
es
test
pop
adc
in
lods
push
popa
outsb
push
fidivl
jp
jmp
stos
sti
mov
pop
or
aaa
mov
lcall
dec
xchg
xor
aam
arpl
call
pushf
repz
pop
xor
int
mov
cli
inc
xchg
outsb
fs
jmp
fcoml
fbld
ljmp
push
test
jns
out
pop
int3
pop
cmp
jmp
cmp
sub
mov
sub
test
mov
jle
test
imul
mov
test
or
pop
mov
js
rcrb
pop
xchg
inc
mov
icebp
cli
in
daa
jmp
fcmovbe
cmp
dec
mov
out
xor
push
xchg
sub
insb
cmpsl
pusha
push
jmp
lahf
es
mov
lock
xor
in
jle
push
inc
test
or
ficompl
adc
xchg
and
adc
lds
sbb
pop
movsl
cmp
ljmp
adc
xor
sahf
and
sub
js
adc
lahf
jbe
push
sub
fs
insl
jmpw
shlb
cld
aam
lret
shll
in
and
mov
pop
jmp
out
stos
pop
xchg
xor
int
jbe
mov
xor
dec
dec
loop
xchg
test
push
out
sarb
jo
js
into
jbe
cmp
push
xchg
in
aad
sub
sub
dec
mov
mov
dec
cld
pop
gs
push
push
xchg
jmp
flds
cmp
xor
and
xchg
lea
pop
lcall
cmp
aaa
add
pusha
jg
and
adc
pushf
aas
aaa
mov
leave
outsb
jbe
mov
cmp
xor
aam
pushf
mov
xchg
pop
inc
cltd
test
sbb
xchg
mov
fistpll
and
mov
inc
push
dec
mov
ret
int
outsb
ss
rcll
cmc
in
in
cmp
cmp
cmpsb
push
push
xchg
jbe
jns
xchg
jb
in
cmp
xor
mov
adc
xorl
outsb
rcr
not
sub
stc
std
loop
pop
je
mov
lock
daa
adc
cs
aas
add
cmpsb
cmp
popf
sub
mov
mov
mov
sbb
stos
push
arpl
jae
daa
aas
mov
dec
inc
pop
pusha
jg
ret
xchg
pop
xor
push
xor
test
mov
ss
push
call
jns
adcb
jl
les
sub
sbb
mov
dec
mov
cli
flds
pop
xor
mov
jp
push
stos
jl
mov
mov
in
dec
loope
xor
mov
sarl
dec
dec
fs
pop
lcall
jp
xchg
popf
loopne
mov
insl
popl
lea
fisubs
sbb
int3
nop
sub
xor
sarb
shlb
rolb
or
movsb
push
mov
push
or
dec
jb
add
inc
push
push
loope
add
mov
adc
roll
xchg
jl
unpckhps
cltd
xor
stos
mov
fnsave
popfw
cmpsb
mov
pop
mov
push
gs
cmp
pushf
movsb
xor
mov
lcall
adc
add
sbb
pushf
inc
sbb
push
int
int3
in
insl
mov
in
inc
notl
xor
shll
xorl
sub
cmpl
add
loopne
mov
xor
fdivrl
std
in
or
rsm
loopne
xchg
cmp
int
pop
fnsave
jno
aaa
or
pop
lret
jnp
jp
jle
lahf
fstpt
cs
imul
sub
xchg
or
mov
sub
lcall
cltd
xor
jns
test
mov
in
jae
sub
lods
jns
imul
outsl
hlt
adcb
pushf
ret
sbb
and
shl
dec
mov
daa
adc
lcall
sahf
inc
movsb
popf
jnp
jcxz
icebp
pop
jb
movsl
push
cmp
pop
sub
sti
dec
daa
loopne
push
cmp
mov
stc
lcall
pop
xchg
xchg
cmp
cmpl
roll
and
pop
rclb
lcall
stc
pop
or
cvtpi2ps
fisttpll
insl
into
stos
jge
push
std
rcrl
dec
mov
sbb
mov
dec
movb
add
cmpl
lahf
aam
pop
mov
ds
in
in
sub
outsb
and
push
inc
cmp
pushf
mov
daa
hlt
sbb
fidivl
pop
cs
jecxz
push
mov
js
and
mov
dec
fisubrl
loopne
and
pop
cwtl
dec
das
push
add
dec
into
stc
add
test
dec
sarl
lcall
call
popa
addr16
mov
insb
cltd
sub
cmp
lock
std
bound
mov
inc
inc
ret
jns
lea
call
jne
and
xchg
sbb
add
dec
and
inc
xchg
xchg
jne
cmpsl
sti
dec
in
insl
add
pop
aam
mov
lock
mov
pop
pop
xchg
out
mov
imul
subb
je
iret
xor
cld
and
imul
idivb
xlat
sub
mov
int3
data16
loope
rcrb
loopne
arpl
mov
cs
and
out
imul
rolb
pop
dec
popa
jmp
in
test
jge
adc
sbb
cmp
lcall
shlb
lods
or
jge
add
movsl
mov
mov
sub
test
sub
and
push
gs
cmp
pop
and
ljmp
sbb
pop
mov
cmpsl
fdivrs
stos
xchg
pushf
fdivrs
cmp
addr16
mov
sub
into
adc
dec
in
cmp
jmp
les
stos
cmp
fwait
shll
imul
sub
negb
daa
sbb
cmpsb
and
xchg
int
xor
xor
iret
shl
aas
mov
fisubl
fldt
in
adc
xchg
ret
pushf
ficoml
mov
fs
mov
je
xchg
stos
mov
mov
lods
roll
or
das
rcrb
and
push
sbb
lret
leave
mov
mov
notb
loop,pn
gs
jne
mov
xor
mov
sbb
inc
mov
mov
nop/reserved
movsb
lcall
sbb
jg
xchg
pushf
stc
sub
and
cwtl
dec
add
jne
roll
xorb
push
lods
xor
int
stos
mov
jnp
jg
lcall
add
ret
test
push
mov
jae
aam
sub
xor
inc
bound
push
lods
loopne
fwait
ret
clc
mov
push
xor
and
rol
push
sbb
clc
gs
ficoml
cmc
mov
mov
push
inc
adc
jo
sbb
pop
imulb
fimuls
jae
push
test
mov
pop
fstps
xor
sbb
or
sbb
push
mov
in
orl
idivl
enter
in
insl
addr16
cmpsl
and
adc
mov
fmulp
daa
movsb
adc
push
inc
loopne
pop
fbld
pop
test
lods
sub
data16
imull
mov
aas
sarl
mov
and
xor
sbb
mov
push
inc
dec
xchg
je
stos
add
push
ror
sub
or
test
mov
idiv
jbe
gs
xchg
xor
jge
xchg
testl
push
or
lods
mov
xchg
xlat
lods
mov
test
sbb
push
cmp
jmp
shlb
dec
aas
test
dec
bound
mov
pushf
sbb
cld
loope
pop
test
mov
dec
jo
sbb
add
je
mov
mov
fcmovu
das
loop
xchg
sub
jns
lret
lea
cmp
rorb
int3
jmp
sbb
enter
add
sbb
add
je
inc
les
mov
mov
lods
xchg
lret
fidivl
ret
stc
fcmovbe
lds
mov
je
ds
sbb
out
imul
push
add
pop
dec
aas
jne
pop
cltd
cmpsl
push
cs
xchg
dec
pop
cmp
lea
cmpsl
ret
rcr
jae
lea
movsb
in
or
cld
dec
andnps
pop
push
fwait
lar
xor
dec
push
js
aas
push
insb
test
push
xlat
lahf
lcall
sbb
push
lods
rol
xchg
pop
lcall
jno
pop
icebp
sbbl
mov
pusha
popf
movsl
push
push
pop
cwtl
insb
aam
xchg
mov
insl
repz
gs
imul
fiaddl
std
inc
outsl
arpl
dec
lret
addr16
cmc
out
mov
mov
add
mov
mov
xor
or
jg
jmp
ficompl
jns
fildll
lods
out
jle
icebp
dec
xor
pop
test
aad
mov
call
int3
mov
jb
pop
stos
xchg
push
sti
xchg
inc
js
clc
ljmp
adc
rolb
shl
movsl
pop
push
mov
cmp
mov
mov
mov
adc
ss
and
mov
inc
sbb
pop
rcr
sbb
pop
and
test
add
shrl
in
lds
repz
dec
add
mov
nop
mov
lods
sub
in
push
cmp
scas
outsl
aad
nop
and
mov
xor
add
test
pop
ja
jl
xor
xchg
outsb
aaa
or
mov
scas
push
sub
idivb
frstor
mov
and
and
xlat
xchg
inc
and
out
loope
mov
jmp
sbb
sbb
or
push
in
stos
mov
out
sbb
push
out
mov
into
push
int3
fs
lea
test
cmp
xor
or
mov
cmpsl
jo
push
jl
insb
cmp
push
ja
bound
cmpsl
add
add
outsb
fstpl
xchg
cmp
dec
and
lods
sub
ljmp
pop
cltd
aad
and
add
scas
or
hlt
xor
or
mov
inc
sub
cmc
pushl
out
in
mov
sub
mov
mov
cmc
mov
push
lea
add
outsl
jae
xor
movsl
push
scas
jmp
aam
inc
data16
dec
push
pop
push
sbb
scas
loop
test
adcl
xor
testl
ret
lock
xchg
std
pop
je
stos
pop
fldcw
or
js
push
push
bound
outsb
push
mov
scas
sar
test
xchg
add
push
adc
test
ret
pop
lcall
xor
inc
sbb
jne
mov
in
leave
xor
lcall
test
xchg
jb
sub
icebp
pop
inc
or
push
or
add
lea
mov
fmuls
pop
stos
lods
mov
cmp
dec
pushf
fwait
xchg
add
lea
lods
lods
jns
les
inc
xorb
adc
in
aad
and
loopne
mov
adc
das
ja
rolb
jb
in
mov
out
fdivrs
push
fs
push
int
std
jb
cmp
outsb
int3
jle
lret
or
mov
lds
jno
addr16
pop
adc
push
sbb
loopne
or
pop
xchg
cwtl
jp
adc
ds
xchg
in
push
sbb
das
mov
push
jl
clc
rcll
sbb
ret
aam
popf
aas
xchg
es
xor
daa
pop
cmpsb
pusha
in
cli
insl
bound
jo
sub
dec
arpl
push
cmp
xor
mov
dec
xor
sbb
sub
pop
stos
or
pop
mov
bound
mov
out
bnd
adc
lahf
sub
cmp
rcl
cs
sbb
mov
and
fbld
xchg
cmp
sbb
inc
jecxz
push
fbstp
adc
ss
inc
cld
push
dec
out
mov
mov
dec
lds
addr16
data16
push
pop
sub
and
sub
jg
adc
jns
ret
and
sbb
add
push
mov
rcrb
add
cmovge
push
or
cmpl
add
push
orl
pop
dec
mov
xor
imul
jbe
xor
jle
xchg
xchg
lods
lahf
and
dec
and
pop
dec
push
imul
push
dec
out
fadd
lret
test
push
lock
stc
in
movsb
sub
icebp
sbb
std
shrb
test
cld
pusha
or
inc
cld
jle
aad
xor
add
mov
scas
fisttps
pop
xchg
xchg
pushf
sub
inc
test
cmp
jns
xor
mov
cmovge
mov
pushf
push
lds
ds
fadd
shll
addr16
push
shr
add
mov
push
mov
jge
lret
jbe
cmp
aaa
inc
mov
cmpsl
outsl
dec
xchg
ret
test
sbb
lods
insb
test
iret
jne
cwtl
jge
insl
lock
les
xlat
push
mov
jge
cmp
cmp
push
inc
dec
js
out
mov
xchg
cmp
fmul
ds
dec
or
mov
nop
push
pop
xchg
int3
xchg
mov
jo
test
call
inc
or
add
mov
rorb
xor
dec
imul
adc
cmp
xchg
inc
jo
mov
mov
push
sbb
loope
adc
lock
sbb
sbb
sub
xor
lret
cltd
push
lea
std
xchg
and
aam
popf
mov
pusha
or
add
inc
lea
pop
xor
call
sbb
outsb
add
int3
out
mov
sti
out
add
inc
adc
loop
sub
in
das
loopne
pop
lock
and
sbb
stc
mov
jp
es
mov
fbstp
fildl
push
add
aad
inc
cld
stc
adc
cmp
loope
xor
mov
rol
mov
daa
pop
fbld
sub
int3
rcl
mov
xor
scas
cwtl
add
rcrl
add
adc
mov
sti
cmp
or
je
push
inc
test
test
or
leave
pop
and
jno
mov
cmp
cmp
xchg
fwait
or
xor
daa
faddl
adc
adc
mov
incl
inc
mov
push
cmp
in
test
cltd
xchg
scas
icebp
add
dec
sbb
addl
out
and
mov
mov
fs
lds
out
or
adc
scas
insl
fiadds
jmp
mov
add
mov
push
sbb
ret
hlt
insl
neg
je
aas
sbb
leave
mov
or
adc
pop
in
andb
loop
movsb
negb
pop
lock
and
or
add
jbe
cmpb
mov
fildll
test
xchg
inc
push
sub
xchg
dec
push
mov
xchg
cmp
push
or
push
pop
test
mov
fistpl
outsb
jae
inc
cmp
mov
or
loope
pop
hlt
test
push
mov
mov
clc
das
adc
adc
call
sub
nop
outsl
in
lret
lds
pop
cmpb
enter
addr16
sub
les
dec
sub
jb
dec
test
cmp
jns
lret
pushf
enter
push
je
push
hlt
xorb
mov
inc
add
popf
and
imul
lea
inc
sub
lods
lods
pop
dec
jo
stos
lahf
repnz
jle
mov
lcall
or
ja
outsl
daa
ljmp
xor
pop
movsb
daa
pop
cmc
arpl
clc
daa
sbb
xor
push
fbstp
sub
jae
cmp
push
lcall
sti
fisttpll
insl
nop
cmp
sbb
jge
ret
mov
push
in
jmp
stc
int3
jmp
pushf
repz
or
adc
and
push
sbb
pop
jae
ret
push
out
shl
cli
push
icebp
stos
push
add
fdivl
imul
sbb
sub
mov
xchg
xchg
inc
lods
jnp
int
sub
push
jp
stos
mov
subl
lcall
inc
test
mov
popa
or
mov
pop
mov
add
mov
add
sti
leave
mov
adc
mov
and
and
xchg
loope
xor
stc
outsb
and
jl
fists
jp
icebp
xchg
nop
lock
xchg
pop
or
pop
xlat
mov
in
mov
jne
adc
loope
cmp
insb
js
aaa
out
ret
sbb
fxam
js
les
scas
inc
mov
mov
pop
test
fbld
movsb
pusha
sbb
inc
jg
lods
movsl
shr
or
nop
jae
push
mov
gs
popa
sub
out
jp
push
cmp
inc
lods
and
dec
adc
roll
subb
sti
iret
cmp
ret
xchg
xchg
mov
jg
iret
ljmp
scas
je
sbb
cmp
and
push
testl
repnz
pop
jle
nop
jmp
stos
cmpb
push
or
aaa
mov
dec
rorl
push
jl
pushf
popf
repnz
inc
xchg
xchg
outsb
mov
pushw
mov
xor
movsb
jno
inc
lods
xchg
sub
xor
aam
push
jb
fcomps
enter
mov
cmp
and
jle
stc
push
fbstp
lds
std
jecxz
cwtl
mov
push
movsl
lret
sub
push
mov
mov
jge
mov
jae
xor
adc
mov
xchg
imul
test
mov
mov
rcrb
mov
xchg
add
imul
out
in
mov
or
stos
sarb
mov
out
xlat
fisttpl
jne
insl
mov
in
lcall
aaa
das
pop
lret
push
gs
sbb
movsb
jo
rcl
sti
sub
push
add
push
fdivl
lret
pop
aam
jno
cmp
mov
push
xchg
lcall
aam
fimull
add
jecxz
aam
jnp
mov
mov
leave
sti
in
pop
testb
std
into
fidivrl
popa
lret
fs
pop
add
mul
repz
sub
loopne
adc
in
push
jns
cwtl
inc
insl
jnp
push
pop
inc
mov
cwtl
pusha
stos
fidivs
push
insl
clc
test
lea
and
rorl
fists
and
xchg
aam
shr
and
mov
jb
sub
sub
mov
aad
push
stc
pop
inc
icebp
add
push
fwait
xchg
test
xchg
sti
xor
push
fs
lock
rol
mov
out
mov
leave
in
or
cmp
in
sbb
push
mov
mov
pop
add
pop
inc
and
bound
push
adc
lahf
fcomi
add
sbb
sahf
pusha
cmp
xchg
or
mov
or
ficoms
push
jp
lcall
call
push
jbe
pop
sbb
ret
push
push
cmp
xor
push
mov
mov
nop
int3
sub
rcr
clc
adc
inc
add
and
sub
mov
or
mov
mov
xchg
xchg
inc
add
dec
add
stos
mov
sub
lret
jo
in
call
stc
xchg
fdiv
clc
mov
adc
jge
inc
subb
push
mov
sub
inc
out
fistl
pop
xchg
xchg
ret
test
cwtl
mov
cmp
xor
adc
int3
xchg
pop
xor
popa
cmpsb
out
ficompl
incl
or
cltd
imul
sub
mov
iret
inc
xchg
add
or
mov
add
icebp
je
mov
int3
mov
ds
fxch
mov
rclb
shlb
insl
jo
sub
outsb
adc
in
jb
mov
adc
jle
xlat
loope
sbb
jge
fdivrs
imul
add
pop
scas
cli
pop
cmc
lods
sarl
mov
adc
xchg
sub
push
sar
das
out
jnp
dec
dec
in
cmpsl
inc
cmp
push
inc
ss
imull
push
and
ds
popa
pop
and
out
pushf
xchg
movsb
push
or
push
sbb
fisttpll
stos
cmpsb
sbb
push
xor
jge
push
fidivl
xor
les
arpl
enter
xor
mov
pop
insl
jnp
decb
ret
or
pop
imul
sub
ss
stc
and
sub
pop
dec
rorl
jecxz
stos
xchg
loopne
inc
mov
xor
and
clc
mov
jg
push
inc
sub
and
inc
adc
in
into
mov
add
fwait
sar
lret
jg
dec
pop
mov
shlb
sub
dec
push
bound
lock
pusha
cmp
dec
pop
ljmp
ja
ljmp
cmp
ss
mov
mov
push
aad
lret
jmp
mov
repz
xor
mov
add
mov
ja
cmpsb
fadds
mov
xor
leave
jmp
and
sti
add
cmp
push
push
mov
mov
inc
shlb
mov
dec
or
push
add
mov
fisubl
repz
call
mov
mov
xchg
sub
outsb
leave
repz
xor
jno
pop
enter
push
movsb
int
jle
sti
mov
pop
push
mov
jecxz
daa
and
pop
clc
add
adc
scas
xchg
dec
pop
sub
lret
xor
mov
cmpsb
mov
daa
mov
lcall
cmpsb
push
jmp
lret
clc
int
xlat
popa
cltd
cmpsb
das
pop
inc
pop
pop
and
out
inc
push
shr
mov
mov
or
das
xchg
dec
xchg
into
dec
imul
sub
jmp
jo
cmp
loopne
add
xchg
and
call
in
dec
popa
adc
adc
imul
push
std
xchg
lahf
adc
dec
push
fbld
mov
dec
sarb
xchg
adc
jae
aas
dec
xchg
jmp
cmp
pop
mov
ds
sub
aad
push
mov
cmp
mov
fmull
cmpsb
test
inc
pop
sbb
sub
inc
in
pop
mov
xchg
adc
pop
divb
mov
jb
jbe
iret
inc
fsubrp
pop
push
cmpsl
xchg
xor
dec
push
mov
and
mov
xchg
xlat
push
push
mov
jo
xlat
mov
lock
into
lods
addr16
in
or
jg
adc
pop
push
sub
lret
and
fidivl
sbbb
rcll
push
push
jo
sti
test
test
dec
push
rcrl
jne
cmc
add
pop
pusha
dec
inc
test
imul
sahf
daa
mov
mov
je
push
hlt
gs
stos
sbb
sti
push
gs
mov
dec
inc
jecxz
push
fsubrp
ret
jae
or
and
adc
lret
sbb
ret
andb
jmp
out
rcr
push
sub
mov
sbbb
iret
xchg
xchg
daa
cmp
ret
and
lret
push
or
xchg
imul
idivb
repnz
insl
cmpsl
scas
loop
dec
daa
or
push
data16
mov
ja
out
loope
jne
cld
es
or
or
in
mov
xchg
shll
or
nop
insb
sub
xchg
outsl
stos
mov
dec
mov
rclb
mov
fwait
in
push
jecxz
loop
fldcw
imul
or
repz
ret
dec
stos
insl
lock
xlat
out
and
lret
mov
xchg
mov
imul
or
into
jp
dec
push
cwtl
mov
xchg
lods
pop
or
mov
notl
mov
shll
in
sbbb
dec
lahf
fnstcw
and
mov
out
jecxz
inc
iret
mov
js
inc
mov
xchg
xlat
jp
xchg
sbbb
repz
fisubs
sub
int3
fisttpl
sub
sub
or
loop
lret
nop
adc
ja
sub
xchg
cmp
mov
jp
push
cmp
cmp
test
pusha
xchg
iret
std
daa
fnstcw
mov
cmpsb
shll
sbb
sbb
mov
push
sub
mov
pop
add
sti
idivl
jmp
and
sub
mov
xchg
insb
stc
pop
arpl
jge
cltd
aam
mov
push
sub
jnp
std
jne
mulb
repz
test
cli
push
pop
ss
es
inc
nop
mov
movsb
xchg
popf
pop
lods
int3
add
mov
jg
xchg
les
insb
push
jno
push
add
adc
lods
jecxz
icebp
mov
xchg
mov
mov
pop
inc
int3
jg
cmp
inc
fsubs
xor
mov
call
out
mov
out
adc
cmpsl
mov
test
aam
lea
lods
pushf
mov
clc
xchg
jae
or
roll
pop
xchg
hlt
dec
jo
in
mov
pop
push
jge
into
enter
loop
xor
ret
in
mov
call
arpl
dec
cmp
aam
lret
das
into
arpl
xchg
cs
jmp
add
repnz
dec
repnz
or
outsb
dec
jne
rorl
sahf
add
cmp
sub
fsubl
push
pop
cld
push
fsts
lcall
sbb
xorb
insl
je
pop
pop
dec
andw
mov
push
jnp
cmp
ss
sbb
add
lret
push
add
and
stos
rorl
jmp
lret
adc
xchg
in
hlt
mov
test
sti
dec
fists
sbb
icebp
xchg
xchg
sbb
addr16
data16
xlat
add
lret
dec
lods
idivb
cld
rorb
cmpsl
xchg
stc
ja
lret
push
sub
jns
sub
fbstp
ret
outsl
inc
mov
into
mov
inc
sahf
jae
jo
sub
ss
push
stos
scas
xchg
sarb
push
push
mov
cmp
popa
ficomps
adc
iret
mov
xlat
inc
sbb
lock
rcrb
pop
cmp
dec
pop
and
jge
sahf
aad
dec
xor
int
aam
sbb
or
add
push
pop
rorl
mov
aad
inc
das
lcall
xor
inc
addl
adc
cmp
jmp
adc
adc
cld
cmc
ss
xor
dec
fdivrl
pop
or
push
add
dec
dec
aas
out
sub
fidivrs
inc
mov
in
test
sub
je
xor
push
xchg
sete
insb
sbb
lret
pop
insb
mov
sahf
sub
shll
ss
inc
scas
dec
insl
ja
int
jle
adc
imul
mov
mov
sub
push
mov
adc
rclb
lds
inc
sub
pop
sbb
pop
dec
mov
push
and
ds
sbb
divb
mov
or
and
pop
inc
adc
mov
cmpsl
imul
out
fcmovnbe
stos
fmull
repnz
test
ljmp
insb
dec
mov
sarb
mov
mov
repnz
adc
dec
pop
add
cmp
pop
push
sti
je
sub
adcl
pop
dec
mov
push
shll
dec
dec
sbb
in
repz
test
add
xchg
dec
andl
sbb
int3
fidivl
arpl
push
pushf
sbb
push
insb
mov
sbb
iret
or
mov
loop
push
mov
mov
add
pushf
negl
xchg
fs
pop
pop
pop
or
pop
gs
mov
and
add
mov
sbb
popa
insl
daa
jb
mov
ss
add
fs
lock
lods
jbe
subb
or
loope
jl
sbb
adc
adc
cmp
sahf
jg
lahf
loopne
push
fsubrs
adc
repz
sarl
mov
mov
and
mov
mov
jmp
fiadds
ret
jo
push
pushf
push
jnp
and
mov
xor
pop
outsl
rcr
mov
push
fsubs
pop
sbb
enter
add
xor
notb
or
mov
xchg
push
subb
xlat
xchg
mov
or
in
repnz
fdivs
in
insl
and
inc
shlb
out
push
ret
mov
xchg
cld
popf
add
and
mulb
shl
sbb
pop
lahf
rorl
jg
jno
pop
jge
adc
and
or
test
sbb
clc
add
test
push
out
dec
and
dec
cmp
mov
add
es
dec
je
dec
xor
mov
mov
out
push
lea
test
inc
out
mov
push
jae
leave
test
push
mov
test
lock
fwait
pop
push
pushf
inc
cltd
pusha
xchg
loopne
cld
into
and
cmp
sub
fwait
push
push
data16
jle
jo
mov
xor
ret
lret
hlt
ja
in
push
gs
call
sbb
mov
cmp
cltd
out
hlt
mov
pop
movsl
int
pushf
out
xor
push
adc
bound
adc
fdivrs
sub
rorb
sti
mov
das
inc
mov
hlt
adc
pop
test
les
mov
cmp
sbb
jge
mov
scas
shlb
dec
sub
sub
sbb
loope
stc
insl
mov
mov
mov
mov
incl
daa
jge
push
jno
sub
mov
xchg
out
shl
adc
xor
outsl
mov
xlat
js
cmpsl
mov
jns
or
inc
push
mov
negb
repz
mov
popw
xor
sarl
ljmp
cmpsb
faddl
add
pop
xor
push
sub
cmpsb
dec
jg
test
or
jns
mov
cmpsb
adc
hlt
sbb
dec
xor
cs
cli
mov
stc
inc
xor
xchg
scas
arpl
mov
stc
stos
cltd
pop
xchg
imul
pusha
mov
xchg
jo
aas
sti
ss
outsb
inc
call
aaa
lcall
push
iret
lret
popf
mov
imul
sub
inc
call
cs
xor
pop
call
call
adc
pop
in
gs
dec
test
popa
hlt
repz
or
inc
lret
fcompl
mov
add
rcr
cmpsb
mov
mov
push
subps
jg
mov
mov
push
sti
xlat
popf
cmp
aaa
stos
xchg
roll
mov
adcl
and
dec
fiaddl
repz
push
cld
and
push
shll
daa
movsb
lahf
dec
test
mov
mov
pop
outsb
mov
mov
test
into
cmp
cmp
sub
fists
xchg
mov
fadds
adc
cmp
stos
mov
push
iret
retw
stos
ja
pop
cmp
push
inc
dec
mov
inc
xor
arpl
mov
mov
pop
sahf
inc
inc
push
sub
adc
movsl
dec
sbb
je
movsb
popa
jno
int
mov
repz
push
sub
es
pop
stos
into
sbb
pop
xchg
shlb
mov
pop
shl
xchg
push
mov
jb
jl
in
rcrl
mov
test
adc
aad
gs
cmc
mov
pop
add
stos
in
addl
ficomps
xchg
and
sbb
sub
xor
mov
ja
push
pop
pop
mov
inc
pop
sub
imul
std
data16
and
mov
sbb
pop
pop
cmpsl
out
push
rorb
lret
adc
add
push
fdivrl
clc
mov
frstor
movsb
insl
push
cmp
aaa
add
loopne
je
xor
imull
mov
icebp
mov
cwtl
inc
mov
pop
push
sub
arpl
inc
xlat
or
leave
pusha
mov
notb
rcrl
push
push
inc
or
das
jle
and
in
jmp
dec
fsubp
lock
rcr
out
pop
sub
xor
or
xorb
sub
mov
fucomp
mov
sbb
repnz
mov
push
jle
shrb
out
inc
jmp
sahf
xor
popa
sbb
out
stos
xchg
inc
xor
mov
and
mov
adc
div
lcall
cmp
xlat
outsb
adc
cmpsl
adc
test
mov
pushf
jg
gs
shlb
xchg
test
mov
daa
mov
scas
addl
push
notl
mov
loope
add
cmp
lret
and
arpl
adc
or
cmpsb
adc
adc
mov
xor
jbe
xchg
je
out
jnp
fstpt
stos
stos
pushf
sbb
lock
pop
cmp
push
cs
loope
dec
jmp
les
cld
shrb
jp
aad
mov
jae
js
bound
loop
pop
popf
xor
cli
or
enter
icebp
cmc
loop
jo
cmp
insl
push
or
std
loop
xchg
cmpsl
pop
xchg
xor
push
ss
xor
mov
fisubrs
inc
je
jecxz
xor
sbb
push
shlb
xchg
xor
push
ds
sti
push
imul
icebp
cmc
repnz
adc
push
dec
addb
mov
out
lret
stos
xor
mov
and
in
sub
jnp
mov
mov
push
mov
push
je,pt
in
cmp
xor
sub
fimuls
imul
xorb
push
and
add
pop
xor
jmp
jns
sub
xor
pop
lods
sti
add
or
fwait
sbb
ffree
scas
pushf
testl
into
pop
data16
jns
pushf
mov
xchg
fcompl
outsl
jp
push
test
std
xchg
loop
mov
pop
stos
cmpsl
divb
std
inc
sub
dec
mov
jo
mov
or
shl
mov
repnz
xchg
lahf
cltd
addr16
mov
or
adc
addr16
in
or
pop
add
mov
pop
aas
mov
in
cs
fldl
pop
mov
call
jmp
ja
dec
and
pop
cmp
loope
shll
loopne
cmp
and
pop
popf
loop
jle
loopne
imul
fistpl
pop
xchg
cmpsl
lods
cmpsb
xlat
mov
sub
mov
dec
out
loope
lods
mov
adc
or
icebp
sbb
repnz
inc
mov
mov
dec
push
sbb
push
in
sti
cmp
daa
and
out
xor
xor
movsb
fidivs
dec
or
dec
int
popa
dec
xchg
mov
mov
js
xor
cmc
mov
push
out
jecxz
int
mov
xchg
test
popa
jne
jg
jb
pop
hlt
jb
sbb
mov
jnp
addr16
test
outsb
pop
push
xchg
sbb
stos
in
add
mov
cmp
test
hlt
lods
dec
pop
xchg
push
aad
inc
pop
push
sbb
xor
cmp
push
fwait
cld
sub
cmp
xor
mov
test
in
push
test
add
insl
jmp
xor
cld
sbb
insb
sbb
xchg
mov
add
sub
lahf
sbb
xlat
into
loopne
adc
add
jmp
sbb
xor
cltd
push
mov
cmpsb
and
push
push
pop
out
xchg
jbe
std
dec
add
insl
fwait
int
ret
nop
rcl
mov
test
mulb
mov
add
xchg
stc
xchg
jg
aad
insl
pushf
fidivrs
stc
jle
add
xor
ret
mov
dec
jb
lds
inc
gs
cs
jle
push
mov
movsl
push
lea
das
mov
fwait
jbe
int
add
adc
das
leave
jae
movsl
push
leave
adcl
daa
jb
fcmovnb
std
jne
inc
xor
adc
inc
mov
aam
cmp
sbb
fdivrl
mov
in
int
lea
int3
lods
scas
xchg
push
in
push
data16
sub
gs
lods
sbb
mov
adc
lods
call
jge
ret
aam
jle
loope
xor
pop
adc
scas
std
add
or
ret
fstpl
cmpl
data16
hlt
push
loop
es
jnp
aam
fnstenv
fs
push
adc
sbb
push
gs
inc
and
push
and
add
and
ljmp
mov
inc
inc
jmp
bound
jno
fistpll
aam
filds
cmc
int3
push
xor
jbe
imul
adc
test
cld
push
mov
pop
add
data16
pop
jo
sbb
movsb
inc
pop
push
dec
push
das
out
daa
loop
fdivrs
jge
dec
sub
cmp
lahf
leave
in
adc
inc
in
or
fisttpl
movsb
enter
sub
xchg
js
popa
je
push
cmp
and
or
mov
cmp
mov
in
iret
push
les
jg
fsubrl
jmp
and
les
cmpsl
cmp
sbb
pop
add
mov
push
jb
fwait
sub
in
dec
jmp
subl
mov
loopne
cmp
ss
pop
cmp
mov
ret
sahf
aas
sub
cltd
sub
std
mov
cmp
adc
lret
imul
cltd
add
dec
xchg
jle
movsl
pop
addr16
nop
inc
xchg
sub
enter
mov
push
lahf
es
push
jp
cmp
add
adc
xchg
push
incl
ret
int
pop
pop
or
mov
js
popa
lods
pop
mov
sub
fsts
push
xchg
addr16
out
jno
adc
les
push
jmp
shll
dec
rcll
mov
xchg
inc
sub
hlt
scas
jmp
gs
mov
and
mov
cmpl
xor
ficoms
adc
dec
lret
lahf
fdivs
cmc
sub
cmp
scas
mov
insl
lret
jmp
repnz
nop
fwait
xchg
test
or
add
test
cli
jmp
stos
pushf
dec
rcrl
fdivrs
sbbl
sbb
add
outsb
dec
js
jnp
jno
dec
push
push
add
and
pop
daa
mov
lret
ffreep
dec
into
addr16
dec
sub
sahf
cmp
js
and
add
pusha
rcrl
sarb
add
movl
fs
outsl
movd
sub
and
lods
lret
aam
mov
adc
cmpsl
inc
loopne
adc
push
call
jmp
orl
mov
lock
push
lock
xor
jg
xchg
and
push
xchg
mov
ds
add
sub
jnp
rep
outsb
mov
lea
sub
aad
or
shl
shlb
push
push
lcall
push
call
and
xchg
cli
movl
inc
in
add
mov
xor
imul
jg
and
sub
lods
ja
movsl
int
xchg
lahf
or
mov
jmp
xor
add
ljmp
lcall
pushf
arpl
popa
xlat
loope
xchg
xlat
mov
inc
mov
cmp
lcall
cltd
pop
pop
pop
jecxz
mov
jnp
fsub
lock
cld
xchg
imul
out
sub
mov
jo
add
jl
gs
jg
mov
xchg
inc
les
lods
xor
and
mov
loope
mov
fadds
sub
int3
clc
cmpsb
jbe
mov
loope
in
leave
sarl
pop
adc
les
cmpsb
rcr
ja
jge
mov
sbb
dec
rorb
inc
or
movsl
repz
xchg
gs
push
push
sbb
es
rol
insl
jne
jge
xchg
scas
sub
jecxz
and
xchg
fucomi
pushf
lret
mov
jl
xchg
xchg
pop
sub
jp
sub
stos
mov
add
adc
jae
js
and
lcall
insb
add
jmp
inc
add
push
les
cmp
mov
or
jge
mov
gs
cmp
xchg
mov
inc
push
mov
push
in
nop
aas
outsl
in
push
xchg
int3
shlb
dec
jne
cmpsb
ret
sub
daa
cli
add
std
ja
lea
push
sti
pushf
hlt
movsl
cmp
or
mov
xchg
jnp
cmpsl
cli
or
dec
hlt
jnp
jmp
repnz
push
and
stc
dec
je
ror
mov
insb
std
in
mov
adc
xlat
push
out
mov
jmp
fsubrs
xor
popa
cmp
push
clc
add
dec
sbb
jmp
lods
ds
add
mov
and
mov
stc
or
cmp
std
jbe
mov
inc
add
add
adcb
or
or
iret
fildll
jecxz
jo
js
rclb
popa
je
stos
iret
mov
pusha
jmp
push
or
or
add
bound
add
cwtl
test
cli
cmp
notb
push
std
sub
pushf
jmp
addb
mov
and
call
cmp
in
shl
leave
inc
cli
out
xchg
sub
cld
cmp
mov
push
outsb
mov
js
aam
inc
pop
jmp
out
add
mov
outsl
pop
xor
shll
pop
cmp
xor
adc
int
push
shrb
test
and
sbb
bound
add
jmp
and
xchg
dec
jno
sub
into
std
cmc
out
add
paddd
mov
loop
xor
fisubrl
mov
out
pop
push
dec
ljmp
shlb
and
jl
lods
sbb
out
dec
push
sbb
pop
mov
ss
jmp
bound
stc
jns
jo
pshufw
xchg
mov
push
roll
sbb
push
mov
in
jo
das
cs
jp
mov
arpl
add
mov
fcomp
jecxz
push
lcall
repz
cmpsl
or
je
adc
mov
sub
mov
popa
push
sbb
dec
xchg
cli
inc
xchg
arpl
in
stc
dec
mov
mov
adc
xor
outsb
mov
xchg
es
push
push
push
add
out
sarl
pop
scas
jge
movsl
insb
dec
pop
mov
xor
or
mov
popa
push
aaa
lcall
cmp
into
incl
mov
outsb
adc
sub
cmp
data16
jmp
rclb
cmp
jge
mov
mov
pop
in
imul
ds
cmpsl
mov
mov
outsb
inc
and
inc
inc
pushw
cmc
js
xchg
pop
cli
les
or
pop
addr16
rorb
pminsw
sub
ss
notl
pop
push
or
cmc
xchg
cli
ret
pop
loopne
inc
mov
push
mov
jae
xor
sbb
xchg
push
inc
xorl
pusha
daa
jmp
lods
in
pop
nop
cs
adc
out
jns
loopne
xor
cltd
jmp
mov
xchg
aaa
jb
rorl
dec
xor
and
push
inc
and
sarl
and
jae
test
imull
inc
pusha
cmp
das
mov
push
sub
nop
dec
mov
sub
loop
and
mov
sbb
mov
fldenv
mov
add
pop
es
mov
or
fdivr
mov
cmp
fs
je
sub
imul
and
clc
les
outsb
cmp
mov
pop
rclb
xlat
push
cld
adc
insl
sub
or
xchg
les
in
pop
sub
fisubrs
mov
lock
xchg
cmp
imul
fwait
sub
ss
in
jle
fsub
lcall
mov
outsb
out
mov
imul
shll
xchg
add
bound
inc
mov
cli
bound
add
call
add
pusha
sbb
rorb
arpl
dec
mov
orl
dec
lret
mov
aad
sbb
ret
mov
testl
test
push
je
sub
dec
add
int3
inc
pushf
and
lock
jb
sbb
repnz
jp
es
mov
hlt
dec
xchg
stos
lock
ja
inc
pop
jns
std
adc
std
imul
jb
sahf
es
idivl
mov
aad
dec
shll
sahf
sbb
daa
mov
orb
jo
hlt
int3
lret
ss
nop
cmpsl
sub
cmpsb
or
mov
cld
sub
neg
xchg
mov
and
int3
fisubrl
sbb
add
mov
stos
ret
out
push
push
inc
jns
repnz
pop
dec
mov
mov
xor
jmp
mov
fdivrs
cs
fld1
loopne
xchg
decb
subb
lea
addl
xchg
sub
inc
xchg
dec
bound
mov
mov
sti
outsl
movsl
inc
xor
add
cmpsb
pusha
gs
adc
rorb
mov
orb
scas
xchg
and
xor
xor
xor
push
mov
roll
jbe
adcb
repnz
push
sbb
cld
je
insb
iret
push
lds
mov
add
pushf
add
adcl
xor
and
jo
jmp
ret
or
xor
testl
popa
sbb
aas
pusha
sub
scas
test
bound
insl
adc
add
rolb
leave
or
cs
mov
nop
pop
mov
dec
cmp
jbe
int3
mov
outsl
js
dec
push
inc
jae
push
lahf
popa
inc
sub
or
in
adc
lods
sub
mov
int3
dec
jne
inc
das
sbb
das
and
push
pop
mov
sub
int
ja
sub
fisubl
dec
xchg
test
xor
frstor
inc
mov
fdivl
xor
ret
mov
test
pop
mov
xor
insl
mov
push
fdivl
xchg
mov
sub
inc
sub
shll
sub
das
push
pop
xchg
lock
sbb
or
pop
scas
xor
and
test
bound
bnd
mov
push
jbe
cmpsb
out
and
dec
rorl
ja
jge
sub
aad
push
dec
pop
mov
mov
push
aam
shufps
stos
scas
push
lret
stc
lret
shll
adc
dec
movsl
xchg
add
push
sbb
pop
jb
push
fsubs
adc
shll
pop
cmpsb
add
repnz
fsubl
in
adcl
xchg
hlt
fists
mov
jp
enter
lds
dec
push
jmp
adc
push
cmp
scas
sub
clc
push
adcl
gs
loop
sbb
mov
das
xor
repz
lret
jge
mov
ret
ja
sbb
lret
sub
hlt
bound
in
add
cmpsl
leave
xchg
pop
pop
out
jmp
jne
cltd
hlt
inc
push
call
xor
in
popa
sbb
scas
mov
jmp
je
cmp
inc
into
test
rcrl
stos
dec
std
enter
icebp
bswap
outsb
aaa
outsl
aam
pop
in
in
push
mov
mov
ss
xor
pop
repz
adc
in
cmp
test
pop
imul
adc
cmp
cmp
sub
test
in
xor
js
mov
jle
jne
mov
xor
ret
std
ss
sti
data16
sbb
imul
jecxz
ret
adc
xlat
fsubl
pop
dec
mov
imul
push
mov
je
icebp
scas
test
jae
jle
pop
fsubs
ret
stc
loopne
xor
fwait
in
mov
xchg
in
cld
cmp
test
sub
out
enter
dec
inc
xchg
jp
push
bnd
cwtl
cmp
ljmp
in
xchg
inc
or
fcomps
rol
lahf
in
add
xchg
ret
hlt
push
jnp
cmpsl
insl
mov
movsl
aas
dec
rcrl
and
js
sub
pop
xor
mov
lea
orl
sub
shrl
fstl
mov
xchg
scas
jp
imul
mov
fimuls
repz
sarb
fcompl
jae
jo
mov
fdivrl
jmp
xchg
sbbb
push
xchg
mov
or
mov
dec
mov
hlt
inc
cmp
push
shll
push
out
push
test
fcom
add
add
sub
out
or
and
test
in
mov
pop
lods
adc
je
or
jae
jne
xchg
ret
xor
pushf
pushf
lret
add
xor
xchg
imul
sbb
lea
mov
mov
repz
pop
push
mov
mov
test
fpatan
stos
jge
jns
jg
pop
mov
out
pop
cltd
adc
sahf
adc
out
inc
out
orl
cwtl
aam
xlat
ret
jo
movsl
clc
insb
insl
pop
loop
je
mov
push
insb
adc
clc
pop
sbb
cmp
mov
mov
cmp
fiaddl
or
cmpsl
mov
std
mov
das
push
mov
das
xchg
pop
dec
jmp
push
push
or
mov
roll
cmp
pop
push
jge
mov
mov
imul
xchg
insb
mov
out
sahf
sarl
stc
or
xchg
push
jns
loopne
jle
pop
xor
lock
sbb
jg
xchg
fisubrs
data16
dec
cmpsb
add
xor
mov
mov
fisubl
mov
scas
ret
sbb
es
shll
shr
jbe
pcmpeqd
nop
arpl
outsl
dec
or
in
loope
lds
fcomps
add
add
sbb
insb
cmp
inc
mov
aas
pop
test
inc
cmp
xchg
out
mov
lcall
mov
mov
cmp
imul
hlt
cmp
or
dec
and
push
xchg
adc
jl
punpcklwd
or
add
lahf
in
cmp
cwtl
addl
aas
sub
clc
mov
addr16
jno
dec
sbb
mov
shl
mov
hlt
jo
push
push
pop
data16
pop
cwtl
clc
mov
ds
int3
fstl
cmpsl
mov
jae
addr16
pop
pop
mov
mov
add
popf
icebp
adc
aaa
in
dec
jbe
je
into
loope
inc
out
adc
outsl
adc
cmc
into
xchg
out
adc
push
mov
sbb
mov
rcrl
pushl
jno
mov
or
push
pop
jne
movsb
sub
pop
pop
push
adcl
jno
mov
ficoml
lret
xchg
mov
cmp
add
mov
mov
das
sub
xchg
mov
in
cmpsl
mov
xor
push
mov
dec
call
adc
jns
dec
mov
cmpsb
mov
stc
mov
jae
jge
sti
or
cmp
int
mov
outsl
xchg
in
add
mov
mov
inc
sub
cmpsb
xchg
mov
lea
mov
jmp
in
add
jge
fxch
mov
sbb
neg
test
jecxz
lret
mov
nop
push
or
insb
xlat
adc
je
xchg
add
andb
in
divb
repnz
mov
sub
imul
push
insb
stos
mov
sub
pop
push
pop
mov
mov
aaa
mov
addb
iret
lock
jl
mov
jae
push
dec
ds
popf
std
out
test
mov
push
repz
mov
pop
xchg
leave
adc
jp
push
xchg
or
push
insl
or
xor
cmc
rolb
je
std
movsb
imul
and
push
ffree
sub
js
mov
push
xor
pop
fists
cs
sarl
ljmp
cmp
mov
fldcw
fnstsw
mov
and
fwait
jle
inc
and
in
xor
daa
popa
stc
sub
movl
mov
jmp
es
repz
fisttpl
inc
adc
inc
sbb
push
adc
dec
icebp
popf
push
ficompl
addl
or
and
mov
insb
popa
imul
xchg
cli
loope
in
ficomps
add
jnp
mov
mov
clc
out
jle
xor
std
jnp
pop
xor
test
fmull
jle
or
test
sub
out
jl
push
or
idivl
aaa
cmp
adc
sub
stos
incb
and
and
pop
aam
ficompl
testl
xor
test
pop
xorl
cmpsl
ja
loope
add
js
or
jnp
out
lret
mov
push
out
out
or
lahf
pop
inc
stc
enter
ret
jae
fnstsw
test
bound
jle
mov
pop
pop
or
pop
mov
lods
insl
or
lahf
push
loop
cmpsl
movsl
ficoms
rcr
pop
daa
stc
or
sub
or
sti
inc
jp
stc
lret
mov
jno
lods
and
push
enter
pop
bnd
mulb
mov
and
push
jns
sbb
imul
aam
xchg
add
xor
xchg
testb
gs
aad
mov
adc
js
and
mov
fsubrl
test
and
xor
pop
mov
outsl
adcb
push
push
aad
push
adc
std
inc
push
sub
pop
xor
mov
sbb
and
mov
and
adcl
fs
rcrl
add
gs
dec
test
push
test
mov
adc
xlat
int3
repz
sbb
shlb
ror
mov
icebp
lods
mov
xorb
push
rcr
jae
inc
stos
jbe
pop
push
data16
hlt
pop
shrl
ret
aam
cmc
in
pop
push
stos
jmp
xor
sbb
in
cli
mov
pop
repz
add
xchg
loopne
xor
fs
in
push
lahf
insb
mov
xchg
loope
jmp
les
cltd
sti
jmp
dec
rol
cmp
call
mov
cli
in
pop
pop
aas
mov
push
xor
cld
mov
sahf
add
or
fisubl
mov
mov
and
or
shr
jg
jno
aaa
mov
test
clc
jmp
stos
out
or
stc
imul
xor
inc
aam
addr16
test
push
cmp
xlat
loope
les
push
enter
fsubl
push
test
lock
mov
imul
pop
imul
xor
xchg
mov
xchg
cltd
mov
mov
xchg
sub
sbb
mov
or
cmp
and
push
cmpsb
sub
mov
imul
lock
int
push
sbb
sub
cmp
pop
sbb
jne
ror
cmpsl
fs
push
out
push
and
stos
out
jne
lds
js
dec
sub
lcall
orb
xchg
and
loopne
lret
pop
pop
sbb
jns
jle
inc
enter
or
mov
xchg
push
das
jb
sti
popf
sbb
mov
fdivl
mov
fisttps
xchg
aaa
insl
push
lods
data16
fbstp
pop
inc
aad
jecxz
mov
mov
xor
mov
aad
inc
pop
jl
sub
sub
fistpll
cmp
addr16
lea
jle
imul
addr16
adc
add
and
jno
push
aaa
out
xchg
lret
push
push
xor
pop
movsl
mov
mov
shl
cmpl
lahf
addr16
xchg
ljmp
sub
and
ret
aad
inc
fs
data16
mov
push
sub
sbb
test
aam
xor
and
mov
adc
sahf
xchg
fidivs
cmpsb
adc
sbbl
popa
xchg
jae
adc
dec
xor
mov
jns
mov
inc
jl
test
dec
lret
pop
mov
repz
enter
fidivl
mov
or
or
gs
stos
js
or
in
iret
pop
cmp
imul
repnz
fnsave
dec
xor
sub
push
lret
idivb
out
cmp
jl
inc
push
stos
cmp
mov
jmp
jns
push
or
push
and
push
jae
dec
xchg
and
insl
in
dec
inc
jle
int3
mov
and
notb
lahf
fmull
adc
in
cmp
ja
push
fidivrl
fdivr
test
adc
cmp
cmp
jecxz
adc
jl
flds
mov
jnp
loope
push
arpl
lret
xor
pop
shr
outsl
es
lods
add
and
adc
mov
test
pop
inc
call
jecxz
gs
cs
jge
push
sahf
fdivrs
dec
pop
into
inc
imul
loope
mov
sti
adc
cli
nop
add
xchg
dec
pushf
ja
js
xor
std
add
and
out
loop
push
cmp
sub
mov
int
mov
xlat
negl
inc
mov
push
icebp
popa
sub
in
fdivs
mov
dec
loopne
mov
popa
cltd
adc
shlb
aaa
lahf
mov
icebp
mov
ror
insb
je
in
es
ja
dec
inc
cmpb
inc
sbb
dec
jle
pushf
pop
jmp
sbb
addr16
jno
pop
je
ljmp
arpl
lea
testl
lods
cmp
cmpl
insb
daa
movnti
jl
subb
test
xchg
popa
ja
push
ljmp
inc
dec
adc
jae
shlb
adc
loopne
inc
pop
pop
xchg
xor
out
sti
loopne
fisttps
sbb
popf
loopne
cmp
adc
jmp
sbb
cmp
popf
pop
xor
adc
xorl
idivl
shrl
mov
fs
iret
stos
mov
hlt
subb
push
mov
mov
or
xor
sbb
add
xor
cmp
jns
jmp
cmp
jno
ss
or
sub
sahf
inc
sub
cmp
jecxz
je
push
es
dec
repz
das
jne
inc
jae
sub
sbb
mov
mov
inc
cmp
repz
stos
ds
movsb
adc
lret
adc
or
jecxz
push
jae
orl
mov
bnd
cmp
fs
aaa
sahf
and
cmp
cmc
call
jne
sub
sahf
into
scas
xchg
jl
cmp
adc
scas
add
cmc
pop
test
lcall
fld1
outsb
daa
repz
push
mov
xor
rcll
adcl
dec
sbb
lahf
fidivl
clc
arpl
dec
lea
jae
je
push
cli
cmpsl
mov
fs
stc
xor
mov
lods
imul
push
xchg
dec
push
test
xchg
lods
fisttpll
push
imul
vmovdqa
fmull
or
lahf
subb
adc
mov
adcl
add
enter
pushl
xor
lds
imul
xchg
dec
test
jecxz
popa
adc
mov
cld
enter
scas
sub
pop
sbb
lret
scas
mov
cmp
movl
popf
sbb
adc
je
movsb
jne
mov
and
xor
mov
arpl
test
push
xchg
shlb
mov
jge
movsl
js
xchg
or
mov
lock
scas
jb
jp
out
mov
mov
addb
inc
xorl
mov
add
cmp
and
loop
loopne
xchg
out
or
shrl
aad
mov
mov
icebp
shlb
in
sbb
repnz
mov
jp
cmp
mov
and
mov
aas
jne
jns
cmp
test
jg
xor
inc
or
not
mov
subb
jnp
dec
mov
loop
aad
aas
jle
xor
mov
mov
pop
pusha
jnp
jae
pop
adc
cmp
inc
das
jb
mov
outsl
lea
pop
imul
icebp
cmp
sub
sti
pop
test
dec
push
jecxz
fnstsw
adc
push
add
fwait
jmp
mov
lret
test
xchg
jmp
ret
popa
dec
cmpsl
inc
adc
or
pop
push
popa
mov
addr16
pop
out
jbe
push
aad
xchg
imul
push
pushf
jmp
sub
incb
mov
sub
mov
movsb
push
out
fsubl
sbb
xchg
jbe
out
mov
mov
sbb
pop
negb
rorb
xchg
daa
into
call
cld
fstl
xor
jle
js
cwtl
xor
inc
aaa
cmpsb
mov
jle
fdivrs
insl
sub
shll
mov
xor
sub
les
sbb
sahf
stos
arpl
inc
mov
aas
adc
mov
cmpsb
adc
xchg
xchg
ljmp
jp
cmp
mov
pop
repz
cmp
cmp
xchg
sti
jl
xchg
frstor
xchg
push
test
loope
sbb
stos
adc
dec
shll
sbb
test
adc
mov
cmp
sub
pop
cmpsb
mov
out
jbe
xchg
mov
or
sub
pop
mov
adc
cmpb
mov
jg
fs
shll
xor
add
rcrb
xchg
and
ljmp
sahf
mov
aas
push
push
cmp
ficoml
into
mov
lods
jg
stos
push
aam
ja
sbb
jge
imul
mov
inc
adc
mov
xchg
sahf
dec
push
cmp
js
daa
daa
test
xor
call
cmpsl
cmp
bound
cmp
loopne
xlat
pushf
add
inc
cmc
dec
sub
repnz
cs
dec
jp
push
mov
setp
rorl
pop
cmpsl
or
lods
ljmp
or
xchg
inc
rcrl
aad
or
add
add
sub
mov
push
insb
dec
dec
loopne
jb
pop
leave
stc
icebp
lret
sbb
fdivrl
pop
or
xchg
jmp
inc
out
ljmp
xchg
xor
add
pop
add
out
xchg
in
push
rcr
mov
sbbl
push
mov
scas
test
leave
lods
lret
mov
mov
xchg
jnp
xchg
ljmp
cltd
adc
pushf
mov
mov
hlt
inc
jmp
jmp
adc
pop
mov
push
pushf
lret
fwait
negl
xchg
or
xor
dec
push
insl
imul
das
lret
pop
data16
lds
iret
out
les
loop
push
jo
push
clc
loope
push
sbb
or
pop
dec
xchg
sub
sbb
sub
clc
push
inc
sub
lods
mov
xchg
outsl
sbb
rcrb
sti
xchg
rolb
clc
lcall
add
repnz
jne
andb
fadds
mov
ficomps
cmpsl
pop
out
fsubs
clc
jge
push
lcall
xchg
stos
adc
ret
jle
mov
pop
js
inc
sbb
sbb
inc
lea
js
mov
push
mov
movsl
rcrb
cmp
sbb
push
insl
xor
inc
inc
subb
mov
jb
vandps
sbb
mov
mov
out
dec
cli
mov
js
mov
lea
inc
xlat
loop
icebp
in
cmp
lods
out
and
inc
nop
ss
fstps
mov
mov
out
sub
pop
bound
lahf
and
and
outsb
ret
sub
fiadds
xor
pushf
mov
push
aaa
add
adc
hlt
nop
outsl
dec
lock
xchg
mov
inc
mov
jmp
sub
sahf
mov
xor
xor
mov
push
out
je
xor
push
or
cs
stos
inc
fwait
imul
sub
mov
arpl
pop
ret
subl
or
dec
sub
pop
imul
dec
insl
push
loope
mov
mov
stc
popf
test
out
fistl
or
iret
pusha
mov
push
push
lahf
test
or
iret
add
pusha
scas
adc
push
lods
sbb
aam
and
dec
test
jnp
mov
sbb
push
scas
decl
adc
mov
mov
data16
push
imulb
out
insl
adc
lods
dec
outsb
xchg
pop
jae
mov
pop
inc
lea
test
arpl
sub
outsl
sub
jns
loop
lret
popa
popa
sub
push
xchg
mov
mov
sbb
imulb
jp
xchg
orl
mov
jbe
pusha
cmc
popa
xchg
add
leave
jnp
pushl
addb
out
pop
xor
dec
adc
iret
stos
fidivrs
jns
pop
mov
aaa
jp
adc
enter
push
add
and
loope
nop
sbb
stos
push
inc
pop
cs
jb
jecxz
push
ret
adc
arpl
ret
push
xchg
or
ret
sub
sub
mov
mov
loope
mov
cli
mov
xor
dec
iret
cmpsb
test
pop
jecxz
inc
pop
pop
push
or
xor
dec
imul
lods
xlat
int
fistps
icebp
dec
fnstenv
mov
inc
mov
add
push
out
inc
int3
loop
and
and
cmpsl
fadds
pusha
xor
mov
mov
cli
add
xlat
arpl
adc
sub
pop
xchg
mov
pop
cwtl
gs
push
xlat
imul
add
xor
xchg
testl
push
jo
add
sub
int3
jne
dec
repnz
dec
add
sti
pushf
cwtl
jae
in
inc
out
cmp
xor
pop
xchg
pushf
xchg
test
jecxz
fs
cmp
push
xor
lds
outsb
xor
jmp
loope
ret
and
cmp
cli
je
rcrb
rcll
insl
popf
dec
jp
imul
mov
shrl
jnp
lods
cwtl
xchg
addl
fnstsw
cmp
fadd
icebp
mov
das
add
test
repz
pop
mov
pop
cmpb
fsubrl
or
fimuls
leave
jnp
adc
jle
sub
js
test
ljmp
dec
cmc
insb
jle
dec
mov
fidivl
jg
pushf
sti
fstpt
call
movsb
cs
fisubs
add
rclb
fsub
cmpsb
jb
add
cli
cs
dec
dec
mov
and
pushf
push
loop
int
and
aaa
push
in
jne
mov
les
cmp
fdiv
insl
dec
mov
adc
cmpsb
ja
sub
push
sbb
dec
sbbl
sahf
xor
jno
fstpt
rep
jg
stc
adc
jae
jns
ss
lods
ss
mov
stos
dec
push
fwait
cmp
sbb
jbe
push
pushf
ss
hlt
notb
inc
inc
or
adc
push
adc
call
or
or
push
sar
les
inc
sub
lea
pop
fbld
mov
mov
test
mov
pop
mov
test
add
xchg
xchg
popa
loopne
das
mov
dec
jo
cmpsl
sti
xor
sbbb
mov
sub
mov
push
outsl
adc
mov
add
leave
pushf
pop
mov
mov
loop
pop
mov
fstpl
cmp
notb
adc
pop
test
fwait
lea
hlt
dec
jmp
sub
pop
sub
mov
outsb
rol
cltd
test
and
in
pop
movsb
add
insb
ss
and
push
xor
push
mov
pop
cmpsl
xlat
xor
sub
outsl
cmpsb
lahf
ror
fldl
xor
dec
daa
test
rorl
adc
js
mov
mov
adc
icebp
das
xchg
sub
sub
jg
and
rcll
sahf
and
sahf
lahf
imulb
mov
lods
inc
sub
fidivl
test
mov
lahf
arpl
lock
outsb
aad
sub
push
adc
xor
mov
push
push
xchg
pop
mov
cs
imul
sbb
orb
cltd
sbb
jns,pt
pop
in
mov
fldt
xchg
lret
dec
hlt
push
jno
fcmovbe
arpl
jnp
push
mov
lcall
daa
enter
arpl
stos
out
les
stc
aam
scas
inc
loope
aam
dec
daa
dec
into
mov
mov
in
dec
mov
mov
jg
pop
push
sbb
push
jp
mov
ja
bound
and
lret
jbe
jno
inc
mov
sarl
scas
outsl
loop
dec
mov
push
dec
subl
imul
push
sbb
mov
ss
notl
pushf
andb
clc
mov
popf
pusha
mov
xchg
stc
pop
xorl
call
mov
jns
movsb
jns
iret
call
adc
mov
or
fucomi
hlt
sub
mov
push
subl
fsubrs
imul
lods
sub
add
jmp
push
xor
out
fsubrp
lret
das
cmp
rcll
dec
push
test
jl
push
je
pushf
ja
out
clc
dec
aas
scas
into
loope
mov
cmp
call
js
js
mov
adc
out
addr16
pop
pop
cmp
sbb
pop
icebp
sbb
aam
mov
mov
push
and
addr16
aad
out
daa
notl
xor
iret
push
push
mov
out
cmovno
dec
cmp
sbb
jl
paddq
roll
push
dec
test
xor
mov
fldt
sbb
lret
cmp
mov
adc
xchg
mov
jle
sbb
push
in
and
push
ret
sub
fcmovne
xor
in
movsl
pop
push
ja
sub
ret
jmp
stos
mov
sub
inc
into
add
lahf
push
scas
or
mov
cmp
and
outsl
nop
mov
addr16
push
xor
lods
sub
bswap
mov
fwait
icebp
test
pusha
aam
inc
clc
inc
out
push
push
inc
arpl
sti
es
aaa
cs
adc
xor
push
push
es
xlat
mov
call
ror
dec
adc
fcompl
lcall
outsb
daa
lret
jno
imul
scas
mov
dec
add
cli
inc
fdivr
xlat
ret
mov
test
and
dec
fs
add
add
je
out
or
repz
aam
cmpsl
cmp
sbb
pop
fcomps
loopne
mov
dec
pop
cmp
or
icebp
movsl
mov
xor
mov
sbb
jle
or
sbb
jecxz
mov
out
std
sbb
jg
fdivl
xor
dec
rolb
add
add
stos
jl
leave
in
idivl
lds
popa
or
jmp
inc
pushl
std
sub
mov
dec
inc
mov
pop
fstpt
rolb
ds
xchg
fsubl
enter
popf
femms
jge
test
lea
lods
inc
pop
pop
shrb
movsb
mov
sbb
push
pop
mov
cli
jo
rorb
aas
mov
mov
inc
call
pushf
data16
cwtl
pop
lret
ljmp
gs
lods
enter
mov
mov
inc
fsubr
jae
bound
pop
aaa
xchg
push
inc
sbbb
testl
test
rcr
ja
inc
lds
inc
sbb
fistpll
and
and
jbe
lcall
and
pop
sbb
sti
jne
mov
aas
dec
es
mov
shrl
and
cmp
scas
mov
mov
mov
mov
sub
dec
xlat
adc
jle
int
push
jae
leave
movsl
xchg
popf
mov
xor
or
mov
xchg
or
and
repnz
rcll
push
mov
push
and
inc
lret
movb
inc
in
popa
lcall
bound
scas
mov
das
das
into
adc
divl
pop
lds
xor
sub
cltd
shlb
out
imul
and
cltd
rcl
fwait
cmp
scas
and
aad
fs
xchg
pop
push
or
adc
and
daa
inc
push
xor
jecxz
jns
into
jns
xchg
fidivs
repnz
jbe
int
aam
les
pop
ss
es
sahf
cmp
inc
fcomps
adc
and
sbb
pushf
fdivl
add
jno
mov
daa
pop
pop
mov
stos
mov
mov
aam
cmpsl
xchg
std
mov
sub
push
cmp
mov
push
aas
fbld
fisttpl
cmc
pop
and
xchg
xchg
cmp
lods
outsl
sub
subb
mov
add
xor
ss
add
jp
xchg
movsl
sbb
mov
rol
pop
ret
adc
and
daa
enter
popf
jle
cmp
push
sub
les
fsubrs
fnstenv
mov
popf
push
in
jbe
in
jae
sub
inc
push
sub
xchg
mov
cwtl
sub
push
jg
cmpsb
push
hlt
fcmovnb
sub
lahf
fwait
mov
adc
aam
xchg
divl
adc
fcomps
nop
push
jne
out
xchg
pop
outsl
inc
sarb
mov
data16
sbb
and
aas
dec
push
loopne
pop
in
pop
cmpsl
dec
jle
es
stos
cmp
jns
sbb
jnp
inc
push
jae
mov
pusha
cs
mov
outsb
fmul
dec
insb
stos
lahf
icebp
mov
rol
fimull
insb
jne
cli
pop
insb
xchg
hlt
pusha
lahf
add
ss
sub
or
sub
mulb
in
jmp
add
mov
adc
jl
xor
xchg
leave
sbb
in
imulb
sub
fstl
xchg
push
pop
jnp
clc
push
push
pop
popf
dec
push
pop
test
mov
out
bound
notb
in
mov
lret
jl
cmp
jae
or
test
add
xor
imul
mov
xchg
xchg
add
mov
mov
aaa
mov
cmp
cmpsb
sub
outsb
idivl
mov
pop
insl
jp
push
mov
imul
mov
mov
xchg
cmp
inc
fldenv
in
pushf
lea
mov
mov
cmp
out
inc
arpl
pop
fwait
and
popa
int3
in
jo
xor
dec
mov
fcmovnu
jbe
or
inc
add
sub
popa
ds
push
and
xchg
fdivrl
sub
out
rcrb
movl
inc
lods
shl
popf
pop
aas
aaa
fdivrl
mov
subb
stos
clc
rcrl
ds
ficoms
add
pop
scas
pop
xchg
xor
stos
pop
shlb
lahf
rol
pop
xor
enter
outsb
adcl
cmp
jmp
inc
ds
gs
mov
fadd
xchg
vfnmsub231pd
ja
xchg
mov
inc
imul
push
xor
scas
pusha
scas
mov
mov
leave
cmp
xchg
jp
push
cmp
testl
dec
xor
aas
pop
mov
add
add
adc
add
mov
add
dec
repnz
push
dec
push
sti
addr16
xchg
inc
stc
and
cmpsb
mov
xchg
addr16
stos
push
insb
mov
pop
pop
clc
xchg
jae
rcr
psubb
orb
sub
popa
aaa
rorb
jmp
dec
jle
icebp
sbb
test
cmp
cmp
inc
lods
push
or
ds
pushf
movsl
das
jnp
or
lods
lahf
dec
in
pushf
lods
pusha
addl
dec
arpl
cltd
andps
and
idivl
dec
je
cmpsb
bound
popf
sbb
call
xchg
mov
fwait
addl
lcall
dec
popf
and
cli
aam
mov
inc
js
sub
jno
add
sub
outsl
movsl
divb
cld
outsb
jne
inc
or
xchg
pop
sub
adc
push
and
popf
sbb
outsb
dec
adc
dec
pop
lret
cld
js
aam
add
mov
sub
lret
loope
les
loop
addb
mov
dec
adc
mov
and
mov
or
push
fisttpll
pop
mov
add
pop
stos
add
lds
xor
call
movsb
daa
test
test
fwait
jbe
push
sub
or
mov
in
div
jo
dec
and
mov
push
lea
lahf
xor
sbb
fs
loope
mov
xchg
jo
mov
ficoms
stos
pop
cs
jae
mov
inc
dec
mov
into
test
xorl
daa
cmc
rcrl
adc
lds
pop
xchg
push
fistl
push
imul
sub
or
arpl
mulb
sub
arpl
aas
mov
mov
push
clc
fstps
pop
cmp
add
or
fidivl
and
mov
push
ja
dec
out
outsb
ja
neg
mov
outsl
sbb
test
loop
lock
push
sub
aam
lds
or
adc
mov
aam
pop
sub
or
xor
pop
push
mov
pop
jae
cmp
mov
scas
iret
or
xor
lcall
cmpsb
sbb
dec
adc
jmp
sub
cmp
popa
add
in
testb
stos
jge
jge
sub
ret
or
popf
lea
inc
or
xchg
xor
cmp
imulb
hlt
push
sub
mov
lods
xor
xor
sub
cmp
int3
xor
jbe
pop
push
cmp
jmp
aas
std
pop
sub
cmp
add
jo
inc
aaa
sbb
jne
enter
mov
ret
jo
mov
adc
mov
pop
dec
js
aad
xor
push
dec
sarl
and
sahf
jge
scas
sbb
mov
lods
sbb
sub
push
jg
cmp
mov
aam
sub
push
jmp
xor
push
ja
jg
push
rorb
xor
dec
push
push
sbb
mov
jle
push
sbb
ret
xchg
or
jae
hlt
jecxz
mov
push
fcoml
add
movsb
stc
sbb
test
mov
hlt
mov
scas
xor
pop
jle
push
insb
push
jge
shl
jb
add
movsl
push
ds
hlt
scas
push
lret
jns
popf
pusha
xchg
mov
gs
push
mov
pop
outsb
icebp
cmp
fstps
jbe
pop
mov
call
cmp
outsb
fwait
sbbb
aam
shl
stos
push
sub
xor
mov
pop
cld
adc
mov
xchg
and
mov
fwait
sub
cltd
out
fsub
fimuls
push
cwtl
into
xchg
mov
xchg
int
adc
push
js
bnd
testb
add
dec
jmp
in
pop
call
cld
sbb
fisttpl
idiv
jne
aas
push
enter
push
int
outsb
outsl
pop
imul
fdivrl
aad
cmp
add
adc
movsl
xchg
mov
dec
adc
test
mov
fnstenv
jl
stc
out
xor
add
aad
cmp
push
std
mov
push
mov
mov
xchg
cs
je
fwait
adc
inc
rcrb
and
adc
and
fdiv
and
lahf
pop
inc
jb
xor
or
fcoml
pushl
jae
in
movsb
lret
rolb
std
call
mov
fwait
pop
repz
xor
sbb
sub
jg
cltd
cmc
adc
clc
and
int3
js
adc
mov
aad
adc
sub
mov
fwait
int
cmp
xchg
aas
mov
daa
outsb
mov
cmp
aam
ret
pop
sar
jb
and
xchg
and
loopne
mov
popf
sub
je
push
ds
dec
and
aam
push
enter
cld
mov
imul
addr16
sub
subl
loope
pop
scas
dec
repz
pusha
shrl
mov
sub
imul
pop
push
inc
mov
cmpsb
adc
dec
stc
rcll
cwtl
test
add
sti
xor
mov
and
jo
mov
imul
mov
jae
push
sbb
mov
insl
fs
or
cmp
mov
pop
dec
adc
jno
subl
sub
and
jg
sub
or
cmpsl
jns
jmp
xchg
stos
scas
mov
out
stos
push
dec
pop
xor
jle
mov
shld
orb
cmp
rcrl
ljmp
mov
mov
cli
icebp
dec
cmp
orb
inc
rorb
call
test
jae
jp
das
ljmp
in
add
jl
std
roll
xchg
sti
or
inc
pop
fidivs
or
push
adc
leave
imul
inc
rcll
mov
cmpsb
and
pop
mov
les
mov
popf
cmp
jg
and
dec
xor
stos
jae
sbb
ret
insl
icebp
mov
adc
mov
mov
fsubr
dec
push
in
mov
dec
pop
fdiv
inc
mov
xchg
lret
iret
jae
push
add
divb
call
and
shll
dec
cmpsb
mov
xchg
or
mov
iret
cmp
out
ja
push
mov
or
testl
fiaddl
pusha
je
pushfw
addb
mov
or
je
rorb
cli
pop
cli
loopne
in
insl
pop
inc
cmpsb
sti
or
rorb
sbb
push
int
inc
push
aad
jo
xchg
cmp
inc
arpl
jbe
fsubrs
push
cmc
enter
xchg
int3
cmc
push
mov
outsb
in
std
sub
in
stos
dec
negl
outsb
adc
adc
arpl
cmpsl
test
fsubl
ret
push
pop
sarb
orl
jae
dec
push
test
cmp
jle
out
movsl
mov
jmp
xchg
shld
addr16
sub
stc
cmp
add
pop
mov
xchg
icebp
fidivrs
xlat
adc
lcall
int
into
popf
mov
jl
mov
mov
lcall
sti
cmp
mov
mov
push
xor
mov
mov
sarl
inc
hlt
aaa
xchg
test
sarb
inc
fnstenv
or
cmpsl
cmp
movsb
shrl
fidivrs
mov
loopne
dec
dec
xlat
lods
out
es
mov
inc
imul
push
push
sub
imul
and
ds
xor
and
fidivrl
jmp
dec
outsb
sbb
xchg
mov
insl
sahf
icebp
inc
andb
pop
fisubl
adc
shll
inc
cmp
int
lods
insl
mov
mov
ret
repz
jo
or
call
cmp
sub
add
ret
clc
or
jge
jnp
cmpsl
clc
jmp
cmpsl
jno
bound
xchg
sub
int3
pusha
jae
jmp
repnz
push
fisttps
movsl
loop,pn
mov
into
inc
cld
push
in
sub
fldl
scas
test
pop
call
add
xchg
insb
ret
lahf
vpsrlw
xchg
sbb
iret
arpl
inc
inc
pop
sub
repnz
stos
loopne
mov
iret
pop
and
arpl
ror
lods
dec
nop
sbb
mov
int
cmp
fnstenv
jno
in
jp
mov
out
and
push
pop
sbbl
data16
daa
mov
fsubrs
inc
movsl
dec
push
pop
in
jl
cmp
push
xlat
icebp
jecxz
xchg
les
cld
jns
into
inc
pushl
xor
pop
cmp
pop
xchg
stc
push
or
in
push
push
add
inc
xor
int
js
xchg
out
out
cmpsb
fistpl
add
loope
cli
xchg
mov
iret
jb
xchg
mov
push
gs
xchg
mov
iret
dec
pop
jne
test
aam
stos
hlt
mov
push
mov
or
jl
rcl
rol
rcl
arpl
dec
adc
push
jge
adc
and
loopne
pop
movsl
outsl
dec
scas
dec
in
push
roll
push
mul
in
push
hlt
mov
andl
call
xchg
adc
lahf
add
push
sahf
mov
sub
mov
cmc
push
popa
rcll
sub
stos
lods
sahf
jl
pop
mov
test
pop
mov
mov
out
or
sub
xstore-rng
cmpsl
cmpl
and
and
sub
lods
push
call
leave
cs
inc
shl
and
xchg
je
lahf
pop
lds
fwait
and
sahf
xor
sub
jecxz
sub
sahf
sbb
xorl
cmp
out
add
insl
rorb
mov
pop
icebp
sbb
rclb
push
push
jle
inc
negl
mov
adc
push
push
cmpsb
sub
xchg
inc
dec
xchg
mov
add
test
test
push
mov
xor
mov
ss
and
scas
xchg
mov
bound
scas
sarb
jge
cmp
in
mov
pop
pop
mov
mov
jbe
out
push
jo
es
sub
jne
and
dec
jl
xor
cmp
and
pcmpeqd
pop
xchg
add
aas
movsl
or
inc
rcrb
inc
fwait
inc
stos
sub
add
sub
mov
repnz
std
cwtl
xchg
stos
push
shll
test
cld
sbb
iret
add
jecxz
add
jne
imul
fisubs
nop
test
push
pop
lock
shlb
jl
add
inc
xchg
or
mov
and
mov
insl
xor
rol
jge
jl
in
daa
rcrl
xor
xchg
cmpsb
cmpsl
pop
cmc
mov
push
dec
cmc
push
repnz
fidivrs
jno
jns
cmp
adc
dec
test
push
mov
pop
fwait
data16
pusha
in
fdivrl
push
out
aad
mov
imul
jnp
ret
dec
adc
icebp
aad
sahf
clc
xchg
aaa
dec
movsl
scas
push
int
lahf
icebp
xchg
movsb
push
fucom
mov
in
xchg
pop
mov
mov
mov
and
xor
xchg
xchg
ja
pop
dec
inc
pusha
fnstenv
cmpsl
push
pusha
and
cltd
dec
cld
sub
xchg
dec
xchg
cmpsb
lock
cs
fs
mov
jns
aam
popa
mov
xor
stc
test
arpl
mov
ret
loope
sahf
sbb
and
jl
xchg
imul
fwait
mov
lds
xchg
out
adc
cwtl
mov
test
mov
leave
outsl
push
rclb
lea
icebp
jecxz
cmp
testl
mov
out
push
jl
repz
shr
xlat
mov
jbe
push
inc
not
fimuls
push
addr16
push
ljmp
lods
popa
cmp
les
arpl
pop
jbe
mov
mov
or
andb
add
enter
fisubs
test
xchg
xor
or
sub
cmp
xor
fwait
push
dec
pop
mov
mov
sub
shll
js
clc
movsb
mov
inc
sti
push
aas
dec
cmp
dec
jmp
jl
arpl
jo
outsb
daa
ss
cmp
lcall
int3
hlt
dec
lods
inc
or
lods
lea
inc
jns
xor
enter
xor
les
sbb
push
addr16
fwait
push
mov
mov
mov
inc
enter
mov
mov
jae
xor
add
in
sub
mov
daa
in
push
nop
push
addr16
scas
xor
cmp
stos
lock
mov
xorb
mov
push
pop
scas
stos
sub
sbb
orb
jb
insb
lahf
stos
sahf
mov
mov
mov
inc
pop
mov
sub
xchg
xor
in
gs
push
jge
sbb
adc
adc
dec
sub
dec
xchg
stc
cli
jmp
adc
shrl
cmp
shlb
stos
cmp
push
pop
sbb
je
lea
mov
jno
add
xor
gs
dec
out
lods
pop
sbb
lahf
arpl
xor
sub
lods
cmp
xchg
fsub
pop
xchg
mov
add
out
shl
into
clc
push
xchg
dec
xchg
dec
imul
sub
call
call
cmp
ljmp
and
sbb
imul
gs
pop
inc
ret
dec
jge
dec
sbb
jmp
sbb
jp
add
cmc
sub
inc
hlt
enter
add
push
das
cltd
cld
repz
inc
xchg
daa
cmp
leave
fisubrl
cli
in
push
outsb
adc
ja
out
fs
push
out
jnp
out
dec
or
loopne
mov
or
fldt
push
xor
xchg
push
dec
pop
adc
xchg
ja
mov
xor
cli
out
sub
fisubrl
repz
cmp
dec
fsubl
cmc
scas
testl
test
push
cmp
cmc
push
jo
test
cmpsl
push
dec
mov
clc
icebp
in
imull
push
std
cmp
pop
jnp
stc
lock
notb
and
adc
or
mov
daa
mov
xchg
scas
pop
and
imul
icebp
push
push
cmp
int3
jno
fistpll
fdivrs
pop
jb
mov
mov
test
test
mov
adc
loop
pop
push
sbb
dec
cltd
test
les
fucomip
insl
push
and
push
lds
xchg
imul
xchg
arpl
or
into
dec
loope
dec
call
inc
jecxz
mov
push
sub
pop
push
push
xchg
out
add
xor
mov
hlt
mov
cltd
ja
adc
sub
fucom
stc
es
push
sub
mov
and
idivl
adc
out
mov
repz
mov
push
je
enter
idiv
pop
pop
and
dec
lret
mov
aas
fimuls
jae
or
lds
cwtl
sahf
adc
lahf
cltd
imul
mov
out
dec
daa
adc
ss
sbb
push
hlt
stos
test
dec
call
pop
xor
mov
popa
sub
inc
imul
jbe
cs
add
cmpsl
cmp
cmp
push
je
fwait
pop
or
test
int3
xchg
sbb
jnp
js
or
pop
xchg
xchg
and
int3
cmpsl
orl
adc
icebp
sti
cltd
xchg
adc
insl
lds
outsl
or
sbb
mov
xor
jnp
mov
mov
xchg
dec
cmp
out
insb
in
pop
cs
mov
loope
pop
add
mov
cmp
cmp
add
in
dec
gs
pop
jmp
adc
sbb
cmpsl
mov
inc
lret
mov
into
loope
mov
int3
push
int
aaa
shll
dec
sbb
jne
ret
test
jo
outsl
in
jb
aaa
pop
and
xchg
mov
jae
xchg
loope
arpl
xchg
push
hlt
sti
sbb
rcr
lods
xor
adc
inc
std
cmc
mov
hlt
or
fs
mov
inc
fwait
andl
insb
pop
or
sbb
cmp
mov
jnp
js
popf
mov
xchg
sub
data16
or
shrl
sub
fldt
and
push
mov
fisttpl
add
mov
pushf
mov
push
xchg
lods
sbb
dec
jmp
ds
adc
cmp
call
jp
in
outsb
dec
sub
cmpsb
fisubs
callw
stc
aad
in
jl
or
cmpsb
loopne
inc
add
fidivs
and
mov
divb
add
lahf
test
cmpsb
mov
xchg
pop
lret
and
jo
nop
je
cmp
xor
or
test
test
gs
xor
adc
lcall
xor
adc
xchg
in
enter
add
mov
in
inc
shr
mov
or
inc
jl
jnp
fsts
xchg
imul
mov
mov
hlt
ret
cltd
fisubl
sub
and
add
pop
pop
lods
mov
push
in
test
jp
inc
fs
cmpsl
mov
or
lods
jno
push
in
lds
xor
push
ret
mov
and
int
sbb
xchg
dec
sbb
mov
jg
rorl
shll
lret
in
pushf
in
pop
sahf
fcomip
cli
lods
sub
std
pop
add
gs
jo
sbbb
call
ja
pop
dec
xchg
add
aas
fstpl
pop
sub
stos
leave
adc
inc
pushf
int
mov
add
push
decl
xchg
out
andb
push
push
dec
adc
ljmp
imul
push
adc
lea
adcl
ljmp
sbbb
mov
mov
push
lods
fistl
pop
rcrl
enter
inc
sbb
dec
xchg
mov
leave
mov
inc
verr
pop
shll
xchg
lahf
bound
add
lods
enter
loope
out
cmp
push
jb
xor
xor
adc
mov
loopne
sub
stos
xchg
adc
pop
xlat
pop
cmp
leave
insl
gs
stos
ret
sbb
lds
and
cmp
jae
cwtl
in
gs
into
popa
decb
das
cmc
hlt
mov
or
fwait
cmpsb
lcall
ret
mov
out
jae
ljmp
out
mov
xor
stos
fwait
push
and
sbb
mov
sub
lds
mov
out
mov
sub
adc
iret
mov
xchg
subb
and
xchg
cmp
push
sub
xchg
icebp
xchg
inc
dec
mov
xchg
sbb
aad
inc
cmpsb
xlat
iret
daa
xchg
push
inc
das
inc
in
rorb
lcall
jg
xchg
xlat
adc
jp
iret
xor
aas
push
sti
jmp
mov
cmpsb
sub
jp
loopne
cmp
xor
lcall
mov
fadds
data16
and
sahf
mov
pusha
test
add
movsl
icebp
cmpsb
jnp
mov
push
push
mov
sub
and
mov
ret
sub
dec
xor
jmp
sti
cld
jecxz
shrl
lods
mov
sbb
mov
into
sbb
mov
xor
dec
sbb
xchg
fwait
imul
inc
push
fwait
adcb
jg
bound
jecxz
jae
adc
and
add
cmpsb
cmp
adc
test
adcl
sub
movsl
jb
lds
mov
jg
shll
ja
pop
xchg
xchg
pushf
push
int
mov
aaa
adc
lea
pop
adc
xchg
push
add
stos
jo
sub
popa
int3
add
lock
pusha
ret
fwait
jp
scas
inc
mov
jp
enter
sub
scas
or
add
sub
adc
add
mov
fildll
rcrb
mov
xchg
outsl
std
fsts
loop
gs
xchg
insl
push
sub
loope
or
inc
and
cmp
pop
out
rcrb
xchg
push
or
dec
push
mov
mov
leave
outsb
leave
idiv
aas
fs
popa
lret
mov
repz
dec
hlt
push
lret
lret
cltd
imul
ljmp
or
mov
mov
pop
sub
inc
mov
push
inc
and
sub
pop
or
cmc
mov
sbb
and
inc
xchg
or
xor
nop
cld
dec
jge
xchg
jl
xor
std
imul
pop
subl
jbe
inc
arpl
mov
stos
call
and
dec
pusha
mov
cmp
aas
inc
lahf
or
xchg
or
sub
mov
shlb
jle
aas
outsb
jo
and
push
or
mov
mov
add
sub
mov
sbb
mull
cmc
sbb
jle
notl
cmp
pop
jns
mov
mov
push
xor
xor
ds
adc
fwait
cmp
shll
ljmp
pop
aas
ja
push
push
mov
jp
sbb
arpl
dec
xchg
push
ret
outsb
cli
push
mov
pop
pop
cltd
cwtl
push
mov
mov
xor
aad
inc
push
push
push
lods
das
insb
imul
nop
pop
push
sarb
sbb
pop
cmp
add
imul
nop
mov
push
cld
daa
fidivrl
xchg
lock
jg
aaa
mov
dec
pusha
lcall
scas
cli
dec
imul
cwtl
cmpb
dec
mov
jp
in
int
jbe
dec
ss
loope
sub
lea
das
fsubrp
shll
pusha
loope
daa
ja
fdiv
mov
add
es
mov
dec
mov
pop
mov
jae
iret
adc
jge
mov
fwait
push
ret
mov
xchg
jo
fldcw
pop
loopne
lret
insb
push
sbb
fdivr
pop
aas
ja
pusha
mov
dec
mov
mov
iret
cmpsb
pop
sub
es
lret
pop
mov
inc
pop
and
mov
pop
cmp
mov
pushf
out
cmp
js
pop
es
hlt
mov
add
mov
push
adc
sub
addr16
and
mov
sbb
jp
jnp
dec
pop
mov
int
push
mov
sbb
push
lods
add
mov
sbb
pop
ja
jne
dec
ficoml
outsb
and
jnp
xlat
lcall
js
sub
jae
jne
ds
jbe
add
or
hlt
mov
cmp
leave
fisttpl
and
int3
or
jb
loopne
jb
mov
clc
or
push
shll
jmp
rcrb
out
add
jmp
dec
inc
adc
or
mov
repnz
movsb
sbb
lock
fcmovb
cltd
adc
jp
les
push
ret
testb
mov
cmpl
push
mov
dec
pop
out
shlb
out
test
sarb
gs
push
or
and
aam
pop
dec
pusha
inc
enter
loopne
mov
je
and
notb
pushf
cli
imul
sbbb
sbb
rorb
lea
jo
xchg
or
fdivrp
insl
rorb
mov
fcmove
outsb
adc
adc
pop
lods
mov
inc
imul
in
mov
pop
fwait
lea
xchg
data16
pop
xchg
cmp
repz
adc
in
or
test
mov
push
mov
push
popf
rolb
cs
jle
inc
sbb
sahf
jp
xor
cmovb
pop
and
popa
or
loopne
cs
mov
aad
and
push
mov
gs
jg
push
bswap
jns
wrmsr
mov
mov
out
test
test
cmp
das
adcb
cltd
aam
das
sbb
add
test
push
cmpsb
mov
arpl
popl
dec
jo
push
sub
scas
les
iret
movsl
insw
adc
pop
fs
push
bnd
leave
or
cld
jp
xchg
inc
out
dec
subb
jg
stos
and
jbe
in
test
test
clc
mov
jl
push
cmpsl
aam
rolb
in
jecxz
icebp
push
sub
or
mov
cmpsb
xchg
push
mov
pop
or
dec
jae
cltd
clc
sub
and
jnp
mov
adc
add
xor
sub
pushl
sub
cmpl
or
bound
xor
ret
mov
fidivrs
les
aam
xchg
xor
push
stc
mov
out
mov
xor
insb
fcmovu
test
cmc
push
jge
inc
mov
mov
movsl
push
mov
jl
mov
jle
inc
xor
lods
mov
cld
xor
stos
dec
or
add
iret
cld
imul
cmpsl
repz
add
gs
xor
and
shlb
lcall
aam
clc
xchg
jge
sti
adc
lock
cmp
and
movsl
sbb
fdivs
std
fstl
divl
xor
mov
xchg
ret
ret
jle
stc
icebp
cmp
insl
adc
sub
lods
mov
dec
xchg
adc
gs
jb
pop
mov
in
push
loope
mov
push
aaa
ret
repnz
aas
pop
out
js
fistpll
out
fsts
lea
jg
aam
clc
ret
inc
mov
xchg
cmp
in
mov
cwtl
mov
jne
dec
in
ret
iret
adc
add
jae
fimull
std
lods
adc
pop
mov
sub
repnz
add
ss
add
mov
inc
xor
shlb
add
repnz
xor
push
popf
shll
loop
rcl
dec
mov
cmp
xchg
xorl
fbstp
and
insl
mov
repnz
outsl
push
shlb
xchg
xchg
pushf
mov
ds
das
lds
xor
add
rcrb
mov
inc
mov
ret
in
mov
sbb
fsubr
iret
movsb
rcrb
shrb
and
mov
pop
imul
or
inc
xchg
ret
sbbb
fisubrl
mov
cwtl
leave
xor
add
lahf
push
movsb
xchg
aad
lea
adc
sbb
add
mov
mov
dec
iret
inc
rcll
mov
inc
sbb
loope
push
xchg
stc
jnp
insl
mov
sbb
mov
rorb
cmpsb
adc
and
pop
imul
inc
lods
scas
push
incl
stos
cmp
mov
mov
incl
jb
sbb
mov
mov
cwtl
adc
or
out
cld
dec
dec
loop
test
aam
jbe
inc
xor
aas
pop
cmc
sarb
icebp
dec
lcall
bound
or
pop
in
jg
dec
push
mov
fildl
inc
fstps
movsl
imul
sub
jo
in
inc
enter
adc
cmp
test
jge
sub
pop
ja
pop
fstl
test
sbb
inc
xchg
add
les
pop
pop
mov
push
mov
sub
adc
std
jbe
int
jmp
mov
sub
and
sbb
stos
pushf
out
repz
rcll
fistpl
cmp
in
lods
or
mov
loope
add
mov
or
fsubs
pop
mov
add
je
insl
fstl
jae
pushf
xchg
jl
das
jo
stos
dec
leave
adc
pop
es
pop
nop
and
inc
fisubl
mov
cwtl
jp
leave
nop
push
push
adc
xor
pop
test
dec
pop
xlat
dec
leave
repnz
xor
cs
xlat
lds
test
addr16
push
pusha
out
fiaddl
add
loop
sbb
fcomps
lods
test
mov
es
mov
dec
call
sbb
jge
sahf
pop
cwtl
ljmp
mov
lea
adc
jbe
fisubs
xchg
outsb
jmp
mov
les
mov
sub
outsl
cmp
mov
dec
pop
xchg
push
dec
sbb
xor
fdiv
mov
out
cmp
or
or
dec
int
push
xor
inc
nop
mov
or
stc
push
loope
sahf
dec
xchg
push
cmc
adc
mov
cmc
dec
or
sub
jg
push
movsl
cli
pop
xor
jno
fcoml
mov
mov
popf
or
fwait
add
js
nop
pop
test
inc
outsb
push
xor
or
sub
data16
lock
imul
push
inc
xchg
in
shlb
bound
push
pop
adc
test
insb
ja
or
pop
aas
push
rclb
xchg
push
or
xorb
xlat
idiv
dec
and
inc
xchg
sub
les
pop
mov
or
xor
xchg
neg
jge
sub
pop
test
adc
nop
rorl
pop
pushw
xchg
repnz
inc
ss
inc
je
adc
add
adc
test
jb
xor
stos
repz
add
js
clc
nop
xor
js
sbb
sarb
into
fisubl
mov
adcl
and
fwait
dec
test
in
cld
dec
bound
icebp
push
loope
cld
jp
sub
xor
lahf
sbb
imul
int
int3
das
cmpsb
jge
push
fidivrl
movsl
push
cmpb
or
test
fcmovnu
fistl
jge
jecxz
enter
mov
jge
cmp
daa
or
mov
pusha
fnstcw
xor
adc
scas
aad
aam
sti
fucom
fs
inc
jae
shlb
ds
test
mov
xor
lea
add
or
inc
or
inc
out
lahf
mov
mov
lcall
xchg
inc
jl
cwtl
es
and
popa
dec
dec
push
adc
jne
loop
pop
test
pop
out
divb
in
sub
iret
mov
mov
daa
fldcw
out
xor
sti
lea
xchg
lods
mov
popa
add
movsl
test
pop
test
push
cmp
dec
mov
mov
sbb
mov
and
jno
popf
shlb
insb
xor
imul
inc
xchg
fmull
mov
pop
daa
inc
jl
cmp
clc
xor
and
nop
nop
aas
cli
das
xchg
movsl
mov
sahf
out
pop
or
xchg
and
in
jmp
in
faddl
ds
sub
and
mov
add
out
pop
adcl
out
cmp
sarb
cmc
jmp
mov
push
inc
push
xor
and
in
dec
cld
dec
dec
aad
popa
int
mov
push
enter
and
mov
jnp
xor
in
and
push
sahf
adc
jg
dec
mov
dec
outsl
mov
lods
pop
stos
jno
pop
add
mov
sbbb
lods
int3
cli
aam
rcr
jns
mov
fcom
sbb
dec
cmp
fistl
inc
inc
sbb
sti
jp
mov
outsl
pop
mov
test
insl
ret
and
and
xchg
jno
mov
es
ss
push
or
push
pop
out
dec
imul
cld
xchg
mov
add
dec
xchg
mov
xchg
adc
mov
out
test
in
shll
lret
lret
and
outsl
stos
cld
lea
rol
lahf
and
inc
aas
cwtl
inc
mov
mov
cwtl
cltd
popa
jecxz
lds
pop
sbbb
lret
xor
jne
mov
ljmp
scas
sbb
pop
jae
sub
loope
fisubrs
lds
xchg
jb
loopne
lea
xchg
push
pop
xchg
lahf
push
xchg
inc
xor
push
mov
add
fwait
jnp
dec
mov
fstpt
adc
int
pop
mov
lret
js
sub
mov
or
mov
dec
jge
dec
push
scas
aad
scas
mov
es
mov
mov
call
mov
pusha
cmp
push
int3
sub
hlt
push
mov
sub
mov
mov
or
dec
inc
sahf
adc
or
popa
dec
and
jmp
data16
dec
fnsave
ret
xor
mov
adc
rcll
imul
pop
vphaddudq
clc
xchg
popa
mov
hlt
or
loop
imul
dec
sbb
movsl
adc
and
push
adc
loop
repz
nop
ret
sbb
andl
jl
and
cmp
jns
icebp
ja
or
mov
fidivs
jnp
lea
mov
inc
mov
sahf
mov
and
adc
imul
pushf
sub
ficoms
mov
cmp
ss
mov
ds
fdiv
push
add
push
adc
leave
inc
dec
jns
inc
hlt
cld
ja
jecxz
stos
sbb
push
adc
mov
lcall
jle
dec
loop
sub
movsb
mov
xchg
inc
cmpsb
arpl
test
mov
push
jno
fcoml
dec
cmp
fbld
das
jae
test
sarb
jb
int
jb
sbb
add
pop
jo
cwtl
gs
push
push
lods
dec
add
into
hlt
insb
ljmp
fiadds
xor
and
aaa
jmp
mov
aad
cmp
dec
and
inc
out
iret
bound
mov
mov
sar
cmp
scas
fidivrl
hlt
or
jb
jns
lock
es
mov
aad
sbb
xchg
or
int3
push
inc
dec
push
enter
inc
pop
mov
pop
inc
fdivrs
lcall
jle
adc
xchg
lcall
outsb
ret
xchg
in
jp
enter
fucomp
xchg
jae
adc
push
fisubl
jno
outsb
and
pop
lods
cmp
add
jle
jae
cmc
lahf
sub
lahf
sbb
fcmove
loopne
pusha
inc
xor
sbb
or
inc
lods
and
mov
push
sub
shr
push
pop
mov
popf
pop
inc
sbb
pop
jae
pmulhuw
mov
cmpsl
add
cmp
leave
xor
icebp
ret
or
push
fcomip
aaa
inc
lret
hlt
fwait
lcall
into
jp
popf
push
lcall
xchg
inc
push
cmc
jmp
cmp
aam
pop
cli
pop
rol
jo
ja
gs
insl
mov
jne
call
loop
icebp
imul
insb
dec
inc
in
push
jl
sti
out
aad
inc
loope
xor
or
jae
xor
cmpsb
lods
mov
xor
add
daa
into
mov
in
inc
lahf
cltd
mov
inc
in
fisttps
jp
pop
repnz
data16
jp
dec
sbb
cltd
dec
testl
lods
jp
mov
sub
in
fistps
adc
mov
pop
mov
mov
sbb
inc
je
fistl
inc
loopne
inc
cld
sbb
les
xchg
push
pop
orb
fs
sub
push
push
xor
push
jp
add
sti
push
xchg
addr16
ret
mov
ds
ljmp
and
data16
addl
inc
lahf
lcall
lods
popf
pusha
pop
movsl
dec
sbbb
stc
xchg
push
loope
insl
dec
cmp
lea
lods
loop
fsubl
xor
and
mov
cli
push
mov
insl
loope
and
push
add
clc
andl
fistl
pop
rclb
jae
sub
xor
clc
decl
xchg
insl
addb
adc
insb
sub
repnz
pop
rolb
leave
push
aad
sbb
int
or
popa
xchg
mov
jge
mov
out
mov
add
test
cmpsl
or
lret
or
pop
mov
mov
cltd
cli
jecxz
inc
pop
pop
xchg
fcmovb
fcmovnb
cmp
inc
notl
sbb
mov
mov
popf
ds
sbb
push
roll
lds
test
ds
ja
jmp
mov
xor
fistpll
fs
mov
xorl
add
cmc
lret
xlat
inc
push
push
jb
popf
push
imul
xchg
out
call
mov
mov
movsl
fisubrl
js
add
pop
ja
inc
jae
inc
or
pop
push
or
inc
enter
divl
and
push
dec
es
lods
pop
jne
rcrb
sti
leave
adc
jae
add
sarb
leave
arpl
icebp
sub
jo
pop
dec
mov
jl
into
sbb
inc
out
xchg
jge
adc
or
jno
and
sub
fists
arpl
or
xor
mov
rcll
mov
push
jg
xor
inc
call
repz
sbb
nop
jns
scas
adc
fs
popa
cmp
sub
mov
mov
orb
mov
sub
ficoms
not
ret
out
insl
cwtl
iret
pop
inc
cwtl
dec
or
dec
test
or
sar
mov
xor
mov
jne
ret
fidivl
hlt
or
int
mov
sbb
daa
fisubl
xor
cmc
push
std
push
add
lock
jo
xor
sub
js
jo
repz
xor
adc
insb
mov
arpl
add
ss
shr
test
cld
or
sub
cmp
stos
add
ret
test
and
ret
mov
rorb
sbb
cmp
movsb
push
popf
cmp
imul
shll
mov
rcrl
lods
movd
pop
dec
das
ja
adc
insb
dec
iret
push
addr16
daa
pusha
mov
hlt
push
mov
leave
test
push
fisubrl
xor
push
adc
leave
jl
popa
pop
scas
ret
sahf
xchg
shr
aas
add
mov
jl
adc
xor
push
sub
xor
inc
sbb
push
dec
js
cmpsb
cwtl
mov
cmp
jne
dec
cmp
loopne
mov
jbe
icebp
push
shrb
mov
in
push
jecxz
repnz
enter
das
mov
mov
scas
jge
rcl
shll
sub
out
sbb
cmpsb
mov
test
lods
sbb
lock
cld
add
inc
scas
adc
or
jge
mov
mov
jno
ljmp
leave
sahf
ljmp
lods
add
lret
gs
and
in
lods
mov
cmc
jb
out
adc
jecxz
push
scas
adc
mov
ss
dec
dec
cmp
cmp
mov
push
out
jb
loopne
nop
sbb
sbb
cld
movsb
mov
mov
mov
jae
in
std
je
fs
and
in
test
notl
mov
pop
sbb
mov
mov
popa
icebp
stos
out
outsb
cmp
pop
jbe
jno
in
add
lock
imull
jmp
adc
test
test
xchg
pop
push
es
test
mov
sub
testb
mov
cwtl
aam
je
out
in
ds
cmp
pusha
hlt
sbb
test
xchg
fs
fs
xchg
adc
in
fmull
dec
xchg
out
fisubs
adcl
stos
and
stos
push
inc
sub
sub
and
call
xchg
jecxz
sarb
in
pop
shll
std
xor
inc
push
dec
sub
jle
xor
sub
mov
cs
push
addr16
and
cld
push
outsl
loopne
test
inc
dec
xchg
shrl
add
cmc
test
pushf
inc
test
push
out
jne
jp
in
or
sar
gs
loop
jmp
push
aas
rcrl
ss
cmp
mov
int
dec
orl
pushf
xchg
add
out
loopne
xchg
add
xor
popa
mov
pop
sub
lods
xchg
add
insb
sbb
loope
adc
shr
xlat
movsl
pop
clc
es
faddl
das
fsubrs
xor
ret
dec
adc
cmpsb
pop
dec
out
aas
pop
pop
repz
aad
or
mov
imul
and
mov
popf
scas
and
push
stos
sti
cmpsb
adc
pop
cmp
inc
pop
adc
fcompl
mov
scas
fiaddl
outsb
xchg
repz
fcmovbe
jo
dec
loope
inc
dec
and
push
rcl
inc
in
cltd
jge
lret
mov
pop
fwait
jnp,pt
xor
sub
subb
ficoms
movsl
popa
or
into
leave
inc
imull
stc
das
cld
lret
and
pop
or
push
scas
fimuls
lahf
cmp
sbb
mov
xchg
sahf
ds
data16
movsb
ja
std
dec
shrl
repz
into
outsb
mov
bound
xchg
pushf
adc
sub
sub
test
or
in
js
pop
xor
mov
mov
pop
inc
mov
cltd
popf
lds
xchg
pop
lret
xchg
je
jle
adc
mov
mov
mov
inc
adc
outsb
push
adcl
das
xor
jge
stos
and
les
dec
pop
call
inc
mov
sub
loope
mov
test
insb
scas
xchg
das
fisubl
insl
push
push
xchg
testl
aam
iret
addr16
sub
insb
je
jb
xor
ret
push
push
xor
rcrb
mov
sbbb
nop
jo
cld
add
add
jae
xchg
mov
aam
enter
cmp
mov
dec
pop
and
push
mov
push
sub
mov
das
dec
arpl
jbe
scas
pop
xor
sbb
push
sbb
fstp
and
ljmp
xor
or
stc
lret
out
fildl
pop
fildl
ljmp
pop
pop
pop
cld
xchg
out
ja
and
mov
cmp
and
hlt
mull
imul
mov
ret
aam
lock
sahf
xchg
pop
and
shrl
int3
shll
outsl
xor
subl
and
add
sub
fisubs
pop
xchg
in
fsubr
scas
adc
cmpsl
inc
loope
test
mov
xchg
std
mov
and
pop
cli
lods
imul
cmp
out
xchg
add
es
push
outsl
and
insb
add
pop
lahf
mull
inc
sbb
lock
lea
popa
cmp
popa
dec
frstor
icebp
mov
ds
hlt
inc
cmp
daa
movsl
xchg
inc
jne
sub
cmp
fsubrl
sbb
lret
jnp
sbb
cmc
cltd
lahf
xchg
lret
dec
dec
sahf
pop
imul
das
rcr
bound
xor
mov
xor
and
mov
enter
clc
mov
js
cwtl
jp
jge
or
aas
pop
cs
dec
or
jl
out
xchg
jae
cmp
hlt
adc
outsl
and
jns
push
add
pop
data16
pop
jp
mov
mov
push
jge
into
dec
loopne
push
cmp
xor
adc
stos
cmpsb
mov
jbe
cmp
decb
xchg
jmp
outsl
jg
dec
sbb
dec
cmpb
loop
jg
pop
lock
and
jecxz
xchg
icebp
popf
mov
mov
mov
lock
fistpl
cmp
cmpsl
dec
lret
into
in
adc
pop
mov
ret
inc
mov
mov
loopne
jmp
out
pop
mov
bound
out
sub
sub
or
cwtl
ficoml
aas
movsl
pop
xor
dec
mov
pop
add
shrl
jmp
lock
rcr
xchg
mov
fs
xor
ror
lds
ds
rcrb
mov
cmp
repz
sbbl
mov
xchg
outsb
push
inc
sub
mov
loope
xchg
push
fildl
sub
inc
sahf
fldcw
js
int
jno
pop
push
jecxz
les
mov
mov
inc
push
mov
mov
jmp
adc
sub
stc
cmpsb
clc
inc
cmp
ja
pop
pop
pop
cwtl
pop
cmp
xchg
mov
mov
addr16
mov
push
inc
mov
sbb
in
mov
jmp
xchg
adc
cmp
lahf
and
push
push
lock
mov
lahf
lea
pushf
mov
xchg
pop
cld
stc
les
or
or
mov
stc
fmuls
mov
mov
popl
xor
ficompl
ret
out
fstpl
dec
push
xchg
push
cmpsl
mov
pop
imul
sbb
fdivr
rolb
inc
dec
sub
xlat
add
cwtl
test
add
ja
push
inc
adc
outsb
push
jne
stos
mov
pop
xchg
cmp
movsl
in
outsl
mov
clc
mov
add
jnp
arpl
push
call
ds
call
push
out
jmp
dec
pop
pop
xor
mov
pushf
enter
fisubrs
insl
push
lret
mov
cltd
in
lds
push
push
pop
lahf
in
out
pop
mov
repnz
jge
mov
mov
cmc
fidivrl
or
mov
cmp
addr16
es
push
or
mov
jne
lds
jl
adc
aam
lret
or
or
movsb
mov
jbe
pop
inc
fs
ror
and
lcall
jecxz
dec
push
loopne
call
cmp
xchg
stc
call
jne
rcrb
shlb
adc
inc
inc
lods
push
lahf
inc
sti
mov
push
sbb
das
push
jno
popf
call
and
mov
ja
cmpsl
push
mov
aas
pop
jp
or
pop
or
sahf
fcmovne
cld
xchg
pusha
out
mov
iret
dec
js
pusha
fiadds
mov
daa
jl
cmpsb
neg
jbe
add
mul
inc
scas
in
addr16
jne
subb
rol
jne
lcall
or
fwait
js
ja
pushf
push
or
loop
sbb
sub
stos
sub
pushf
movsl
sahf
ss
xchg
push
adc
jl,pt
lret
les
sub
test
imul
xor
adc
cmpsb
inc
dec
hlt
in
sub
or
mov
scas
push
jp
pop
aaa
imul
push
sbb
sub
cmpsb
out
push
xchg
data16
jl
bswap
out
or
push
xlat
lods
cs
loope
pop
push
insl
ret
push
push
cs
arpl
pop
int3
outsl
adc
pop
popa
iret
fiadds
je
out
cld
repnz
scas
mov
or
mov
xchg
push
aam
xchg
mov
xchg
dec
and
xor
or
mulb
loope
sti
scas
in
xchg
cli
std
mov
jb
add
ds
push
in
jecxz
imulb
mov
ret
sbb
cmp
dec
dec
jge
xchg
in
imul
cwtl
cmp
cld
outsb
mov
inc
mov
jb
xchg
sbb
mov
pop
loope
insb
movsb
xchg
cmp
inc
pop
enter
mov
enter
lds
js
or
push
mov
cvttps2pi
rorl
cmp
in
jno
add
jne
subl
xor
xor
lods
nop
jmp
push
sti
cmp
and
call
adc
jecxz
lret
pop
inc
cmp
pop
nop
scas
push
js
dec
scas
in
andl
sbb
inc
sub
inc
xor
loopne
dec
lea
sahf
pop
mov
cltd
movsl
push
mov
cmp
mov
out
lahf
in
enter
aas
inc
rorb
dec
pushf
sub
fdiv
mov
addr16
mov
ss
test
xchg
lock
dec
cvtdq2ps
or
les
push
sahf
insb
and
testl
repz
push
addl
jo
in
lret
data16
sub
popa
jge
dec
shlb
xchg
cwtl
xor
shlb
sti
int3
cs
test
add
mov
jge
out
arpl
push
scas
cwtl
cmp
or
lret
jns,pt
or
jmp
jl
jg
fstpl
mov
stos
lods
adc
inc
sbb
and
sbb
enter
pop
mov
aas
jbe
cmp
mov
mov
out
loopne
fsubl
les
mov
lea
pop
push
jae
popa
pop
aam
jb
xchg
xchg
popf
out
dec
xchg
add
adc
add
imul
jns
out
insl
in
adc
imul
jns
pop
cmp
dec
mov
pop
movsb
jo
sub
das
and
test
data16
mov
loopne
xchg
push
jo
pusha
enter
xchg
adc
in
sub
add
add
jp
jae
fdivl
jmp
fimull
mov
ret
and
xchg
mov
dec
xchg
cltd
mov
dec
into
in
imul
dec
ja
dec
or
mov
cmp
mov
pop
js
in
hlt
fdivp
rcrb
dec
or
je
ljmp
iret
rorb
mov
mov
lods
jge
pop
sub
jns
xor
shrb
je
push
out
jae
jns
lret
xchg
mov
les
jecxz
xor
fidivrl
out
push
jl
outsl
pop
add
xor
les
fs
cmp
sbb
enter
jnp
push
xor
loope
ljmp
shlb
imul
mov
mov
sbb
inc
cmp
xchg
cltd
out
fwait
mov
adc
adcl
sbb
add
loop
cwtl
rolb
push
jo
mov
sub
repnz
ljmp
mov
and
pop
sbb
rorb
sbb
push
inc
mov
xor
roll
cmpsb
fisubrl
mov
dec
sti
fisttps
out
test
test
sbb
push
movsb
outsl
leave
push
ja
push
lahf
mov
xchg
stos
pop
fneni(8087
dec
jge
in
roll
lret
mov
adc
or
xor
in
iret
add
dec
aaa
push
push
xchg
fadd
jae
cmpsb
sub
jbe
mov
inc
jmp
and
push
mov
xchg
scas
mov
cmp
in
jg
ja
std
cwtl
inc
fwait
and
nop
pop
roll
adc
mov
stos
bound
mov
sarb
cmp
pusha
fnop
jge
mov
cmp
add
mov
mov
pop
fisttpll
pop
lahf
jmp
shrl
int
and
shll
mov
rcl
das
movsl
shll
dec
dec
mov
addr16
pop
add
cs
jne
xor
add
mov
out
mov
xlat
cwtl
mov
sti
jb
stc
xchg
jne
push
hlt
inc
aad
loopne
add
adc
or
scas
sub
leave
sbb
insb
out
inc
insb
int3
sub
add
in
xchg
fnsave
sbb
xlat
xor
or
fstl
adc
mov
cmc
dec
stos
jl
pop
mov
sub
inc
sub
dec
lods
dec
loopne
dec
mov
fimuls
sub
mov
into
mov
mov
or
lods
insb
adc
xorl
inc
out
jnp
push
out
bound
pop
pusha
or
call
pop
sbb
sbb
inc
mov
ljmp
jmp
and
mov
dec
loope
push
outsl
or
mov
xor
nop
mov
iret
outsl
cmp
xchg
inc
add
aad
lods
or
ret
fstl
cmp
pushf
bound
lods
dec
sbb
loope
xor
sbb
clc
fsubrs
shrb
add
imulb
int
scas
jbe
push
xchg
push
lods
test
and
xchg
mov
pop
in
or
mov
lcall
pop
cmp
dec
xor
pop
lcall
ja
inc
andl
jp
push
call
js
sbb
jp
sbbb
movsb
xor
mov
jmp
jo
test
mov
lods
ja
or
les
or
mov
sar
jmp
hlt
dec
cmpsl
repnz
loop
xchg
and
push
inc
mov
and
out
in
and
cmp
mov
xchg
push
cmp
jnp
lods
outsl
out
or
in
push
popf
es
test
pop
jge
mov
mov
mov
mov
shlb
add
or
cmpsb
mov
cmpsb
mov
in
and
push
mov
dec
push
fwait
mov
movsl
mov
mov
inc
adc
inc
jno,pn
ds
pushf
inc
jmp
adc
inc
stos
cltd
jg
lds
inc
push
dec
ds
in
addr16
push
jae
jle
shll
adcl
sbb
into
pop
jp
icebp
or
sub
lods
sub
xchg
into
mov
mov
xchg
jne
mov
push
iret
ret
cs
outsl
pop
js
add
inc
jns
popw
or
xor
in
jge
or
or
iret
jp
and
xchg
lahf
dec
jne
xor
cmpsb
adc
cmp
cmc
stc
popl
inc
imul
mov
pushf
xchg
or
mov
jecxz
pop
and
xorb
adcl
inc
loop
sar
ret
inc
rorb
mov
insl
mov
mov
mov
mov
dec
jl
cmp
arpl
pop
les
dec
push
or
mov
nop
out
neg
movsb
xchg
xor
xchg
mov
sub
in
jecxz
adc
imul
fcompl
iret
insl
lahf
call
pop
lods
xor
jbe
sub
hlt
aam
pop
fistpl
dec
sub
mov
adc
dec
xorl
aas
out
pop
aas
sbbb
jmp
cwtl
and
mov
sahf
mov
inc
mov
dec
cmp
add
pusha
popa
mov
sbbl
push
add
je
ret
push
mov
dec
and
addr16
loope
lcall
mov
dec
fistps
loop
out
jl
addb
int3
repz
mov
sub
test
mov
push
sti
negl
inc
xor
push
jo
jne
mov
mov
fsubs
arpl
lods
push
dec
in
shl
sbbb
jne
mov
daa
imul
inc
and
push
inc
imul
cmc
sbb
dec
fildll
jne
imul
dec
in
aam
les
leave
int3
repnz
push
loope
sub
sub
ljmp
dec
hlt
cs
fnsave
add
int
stos
add
icebp
dec
adc
pop
lret
es
mov
or
push
addr16
mov
iret
push
aam
arpl
pop
shrl
xor
stc
mov
outsl
jg
cli
scas
and
out
sbb
aas
mov
fwait
jne
rcrl
mov
dec
xor
push
xchg
mov
jne
std
pop
fistl
cltd
mov
dec
in
xchg
jp
xchg
push
test
or
or
jle
dec
mov
adc
mov
or
inc
jnp
test
fstpt
pushf
fdivl
imul
stos
les
inc
sbb
pop
inc
hlt
mov
xor
inc
inc
rcll
dec
mov
ss
aas
xchg
mov
int
mov
and
inc
fisttpl
dec
iret
cmp
and
out
xor
lds
scas
xor
sbb
jnp
xor
push
pop
pop
pop
scas
dec
mov
scas
adcl
or
sbb
lcall
pop
cmp
ficoml
xorl
mov
jno
stc
repnz
mov
or
shlb
filds
ja
add
lret
repz
adc
add
pop
sbb
je
jmp
ret
inc
sbb
xor
test
add
out
mov
mov
jle
cmp
pop
shrl
and
nopl
fldl
scas
scas
or
stc
stc
clc
icebp
pop
movsl
xchg
jns
dec
jmp
or
xchg
xchg
testl
jg
ljmp
mov
in
xchg
sarl
insb
movsl
cmpsl
push
std
adc
pop
xchg
mov
push
mov
pop
dec
cmp
xchg
out
dec
mov
out
das
xchg
dec
test
popa
pop
cmpsl
sub
dec
insl
dec
cmp
sbb
in
test
mov
call
je
add
xor
jl
clc
and
sbb
je
popa
test
cmp
neg
movsl
xchg
rorb
push
jl
jmp
adc
push
push
fidivl
pop
movsl
pop
cmpsl
push
lret
cmp
repnz
js
jo
jo
dec
scas
sub
inc
push
xchg
ret
movsb
pop
dec
js
pop
es
push
shlb
mov
jmp
enter
repnz
xor
dec
pop
pop
pop
dec
sbb
pushf
mov
cli
mov
es
dec
fwait
out
sub
pop
iret
lea
test
pop
iret
aad
cmp
pop
sub
sbb
adc
and
data16
mov
xchg
push
mov
fnstcw
inc
mov
mov
in
or
cs
lods
mov
xchg
fwait
mov
pusha
rcll
std
lds
add
adc
ret
js
cmpsb
adc
out
hlt
adc
lods
mov
fistpl
stos
add
pop
adc
xor
sbb
jle
adc
or
movsb
push
pop
mov
shlb
push
xchg
subl
jp
clc
shl
push
jns
and
adc
jle
jae
dec
ret
dec
xorb
jb
shl
mov
sbb
shll
fiadds
xchg
xor
fs
xchg
out
outsl
repnz
test
dec
mov
push
addr16
sbb
in
ficoml
push
or
xchg
add
push
add
inc
mov
or
lds
int
leave
ret
lock
push
lods
jns
xor
aas
rcl
stos
push
notb
push
pop
pop
clc
int3
pop
lret
loop
into
cwtl
divl
ds
cli
repnz
cmp
frstor
xor
clc
and
adc
pop
push
cmp
xor
shrb
cli
xchg
add
dec
imul
cmp
jno
inc
popa
filds
or
mov
and
sbb
fwait
lret
int3
rcrb
stos
fwait
out
movsl
aam
ds
ror
pop
repz
insl
outsl
in
rdmsr
push
test
mov
or
lahf
mov
in
aaa
mov
inc
lret
std
popf
push
lcall
pop
jno
mov
jo
jg
jecxz
lds
sbb
imul
fdiv
dec
jns
repz
xlat
jg
jecxz
add
mov
in
enter
out
movups
les
cmp
mov
sbb
scas
sub
add
or
xchg
insl
mulb
loop
call
push
mov
cmp
es
lds
push
mov
arpl
iret
push
dec
repnz
adc
xchg
std
xor
test
cltd
push
pushw
fildll
repz
pop
pop
nop
mov
add
mov
loop
out
imull
les
sbbb
or
pop
sarb
cs
xor
inc
lret
int
sub
pusha
gs
outsb
push
scas
mov
pop
mov
pushf
test
jl
stos
pop
sbb
push
jbe
ficompl
xor
pushf
test
and
fwait
outsb
loopne
cwtl
imul
popl
jns
pop
ja
int
add
cltd
mov
in
push
and
shrl
shll
xchg
push
and
lea
and
es
in
mov
inc
sti
lods
mov
repz
insl
in
cltd
enter
mov
add
fsubrl
adc
sub
or
cmp
lea
mov
pusha
es
cmp
push
sub
xchg
imul
add
add
cmp
and
jne
sbb
daa
call
in
pop
scas
pop
inc
xchg
ds
ja
mov
lods
dec
push
stc
idivb
mov
xor
adc
inc
pop
mov
push
fldcw
push
push
adc
mov
sbb
outsl
pop
jge
roll
sbb
or
or
xchg
test
jmp
inc
push
push
cmpsb
in
mov
push
cltd
bound
pop
cmp
aas
add
mov
lods
xor
lahf
inc
mov
mov
pop
imul
mov
mov
clc
jmp
add
mov
cmp
mov
sti
subb
filds
clc
movb
pop
jno
lret
ret
stos
mov
sti
mov
inc
stc
mov
inc
gs
jae
sahf
xlat
mov
repz
push
and
adc
call
bound
pop
cmp
push
push
je
xchg
movsb
sub
std
or
mov
sahf
pop
gs
mov
dec
xchg
hlt
mov
pop
push
fwait
sbbb
aad
jle
jg
bsr
dec
imul
push
int
mov
cmc
add
inc
mov
dec
gs
push
lds
fwait
lods
add
push
inc
xchg
je
push
and
push
daa
in
push
mov
andl
stc
int3
jne
mov
push
je
repnz
xchg
mov
pop
add
xchg
mov
insb
pop
mov
xor
fs
ss
es
movsl
mov
jmp
movsb
mov
aas
mov
or
cmpsb
out
mov
js
in
outsl
pop
dec
and
loope
popa
pushf
fsubs
and
aam
dec
jne
rorl
imul
pop
pop
adc
sbb
xchg
push
imul
ficompl
adc
mov
or
xchg
xor
sub
xlat
jb
add
inc
vpunpckhwd
std
jnp
xor
insl
stos
test
dec
mov
xor
jle
or
outsl
pusha
mov
push
loope
sbb
notb
xor
pop
jnp
popf
scas
je
pop
pavgb
rol
jmp
scas
pop
sub
jne
mov
push
repz
jbe
clc
movsb
add
push
and
sub
bound
and
stos
aaa
icebp
add
inc
jmp
sti
xchg
add
div
das
fstpl
jle
out
xchg
mov
dec
xlat
cmp
jmp
fiadds
xor
pop
jmp
mov
cwtl
lcall
psllq
add
lcall
inc
rol
bound
mov
xchg
ljmp
clc
notl
pushf
push
mov
stos
mov
cltd
arpl
adc
lahf
xchg
or
xchg
push
fsubs
adc
in
push
cmp
insl
les
je
orb
pop
or
ret
push
jmp
mov
fldl
cmp
out
mov
ss
fstl
aaa
imul
in
gs
xchg
inc
lea
repnz
inc
mov
rolb
jns
cmp
call
mov
mov
inc
jb
push
rclb
ficoml
mov
idivl
test
ss
or
lea
sbb
mov
inc
aam
fdivrs
xchg
aas
jno
jle
pop
gs
cmp
lret
shll
pushf
loope
xor
jae
fwait
mov
mov
push
stos
std
mov
aaa
dec
vpcmpeqb
add
adc
mov
mov
ljmp
fistpll
cmp
repnz
adc
aaa
loopne
int
imul
repz
into
pop
lea
jb
hlt
or
in
dec
push
and
push
add
pop
ljmp
add
dec
mov
or
icebp
or
add
mov
jo
jno
lods
inc
pushf
es
mov
loopne
scas
push
xchg
mov
lds
push
daa
in
pop
adcb
push
jne
mov
adc
add
outsl
xchg
icebp
adc
xchg
cld
std
or
inc
push
push
mov
js
sub
daa
lret
addl
testl
js
daa
push
xor
push
xorl
push
pusha
jno
cmc
les
push
imul
pop
in
mov
lcall
clc
mov
mov
dec
mov
mov
and
mov
out
repnz
and
cmp
mov
adcl
inc
jb
flds
jmp
and
pop
test
fldl
stc
dec
pop
test
adc
loope
call
jmp
adc
lds
and
xor
into
loope
pop
adc
ds
mov
iret
imul
or
lods
addr16
inc
fs
lods
leave
in
movsb
mov
mov
dec
inc
sub
pop
xchg
jge
dec
xor
testb
pop
pop
ljmp
pop
imul
nop
mov
lahf
jbe
inc
test
jecxz
jecxz
and
pop
xor
daa
fsubrs
push
ljmp
push
mov
fs
jns
dec
jae
dec
loopne
cld
sbb
stc
sbb
sti
jb
stos
lods
ret
ja
mov
leave
cwtl
out
es
xchg
push
cmpsl
xor
or
adc
es
shll
and
pop
jp
fs
xor
sti
or
ret
inc
sarl
leave
sbbb
mov
stc
testb
adc
movsl
pop
movsb
lea
mov
movsb
inc
arpl
icebp
cli
movsb
imulb
out
dec
imul
push
out
test
fmul
cmp
cwtl
jno
lock
adc
adc
lds
jno
or
xlat
or
mov
test
xchg
lea
daa
pop
mov
in
inc
icebp
dec
push
aam
push
sub
scas
rolb
jp
aas
movsb
sbb
mov
bound
push
daa
cli
mov
push
push
aaa
fmul
push
add
shl
cltd
inc
mov
scas
in
add
xchg
inc
shlb
pusha
test
inc
in
fsts
pop
sub
xchg
ss
fisubs
fwait
xlat
dec
cmp
mov
mov
je
push
dec
into
aaa
ss
or
call
fdivl
jmp
fstpt
fidivs
out
outsl
pop
int3
fstps
es
sbb
cmpsb
outsl
sbb
mov
pop
rorl
jg
adc
lock
lcall
cmp
cli
mov
loop
sub
out
xchg
sub
xlat
or
xor
mov
fistpll
in
jno
push
scas
xor
pop
xchg
cmp
inc
inc
clc
inc
mov
clc
inc
or
filds
stos
out
mov
push
mov
inc
adc
xchg
mov
mov
adc
push
test
lret
fs
inc
add
add
cmp
test
sbb
lods
mov
js
iret
add
fwait
popa
aas
sub
in
cmpsl
xlat
and
pop
xchg
ret
mov
idivb
int
and
pop
in
xor
dec
ljmp
and
mov
xchg
sahf
and
mov
fildll
mov
pop
mov
sub
test
xor
xchg
insb
xlat
dec
and
dec
es
pop
push
or
movsl
sti
outsb
es
movsl
mov
enter
negl
and
aad
lea
inc
mov
adcb
jnp
cld
es
aam
iret
test
add
and
adc
cli
push
imull
xor
xchg
ret
xchg
xor
mov
mov
sub
test
cmc
xchg
shll
xchg
push
mov
cmp
xchg
test
sbb
nop
dec
sub
dec
repz
cmpsb
lock
dec
cmc
push
add
push
mov
and
lods
in
or
mov
push
push
push
push
lock
mov
push
fcmovne
rorl
test
push
mov
aaa
cld
jle
jbe
loope
cmpsb
iret
int3
push
mov
adc
mov
clc
test
in
mov
pop
fcoms
dec
push
xlat
lret
jg
mov
dec
in
inc
xor
mov
inc
fnstenv
addr16
mov
ja
jb
jne
jmp
in
mov
inc
mov
aas
pusha
repz
ss
lock
les
inc
loop
lcall
mov
cmp
fs
dec
iret
push
pushf
cmpsb
popa
pop
adc
mov
ss
sbb
adc
call
mov
or
fwait
movsb
pop
jbe
jl
mov
adc
dec
xor
xchg
mov
imul
inc
mov
jbe
push
mov
jp
jbe
in
mov
adc
push
lds
subb
imul
imul
push
push
or
pop
testl
cltd
lahf
cmp
jb,pn
jg
test
dec
mov
pop
push
stc
dec
adc
mov
idivb
cmp
adcb
xor
sub
pop
inc
fs
gs
hlt
xchg
mov
pop
dec
scas
adc
jbe
cmpsb
lret
fwait
push
and
mov
pusha
adc
mov
outsb
and
push
or
ss
jno
cli
daa
and
test
jg
rorb
jle
add
leave
lea
sahf
arpl
or
adc
mov
push
xchg
sahf
mov
pop
mov
jns
adc
aaa
fcmovbe
orb
lods
mov
mov
fdivs
in
mov
jno
cmp
jmp
cli
xchg
jl
aaa
leave
push
imul
stos
cmp
nop
pop
xor
ljmp
lret
sub
loopne
lods
pop
push
xor
sub
or
cld
xor
mov
jge
sbb
scas
cltd
mov
iret
sarl
pop
scas
data16
insb
sbb
fsincos
leave
ret
mov
dec
jnp
pop
adc
mov
dec
sti
mov
fcomps
add
mov
xchg
jns
in
xchg
aam
inc
jo
push
jae
lods
pushf
sub
stos
imul
icebp
dec
pop
add
iret
push
gs
iret
cld
push
adc
jl
xor
xor
shlb
daa
shlb
xchg
dec
pop
cmp
repnz
xchg
mov
fcmovb
imul
xchg
jle
lcall
cwtl
lcall
loope
call
loop
loop
push
aam
cmpsl
lods
je
or
push
ljmp
sbb
fdivrl
and
xchg
das
sarb
jno
or
jb
mov
inc
sbb
cmpsb
mulb
jp
in
xchg
pop
in
pop
mov
and
lock
pop
out
sub
xchg
pop
adc
mov
jne
add
or
repz
aas
lahf
cmp
pop
inc
jle
mov
adc
mov
sbb
sbb
aas
adc
lret
add
jmp
xchg
xchg
add
rorb
mov
xor
loopne
mov
mov
adc
jmp
and
or
cmpsb
cmpsl
mov
mov
mov
push
cmp
push
dec
out
ret
daa
out
enter
xor
xor
mov
or
push
inc
cmp
fs
jae
xchg
dec
xor
testb
adc
or
decb
sub
xchg
adc
sahf
mov
jp
add
jbe
movsb
or
sahf
out
test
adc
push
pusha
push
mov
pop
cwtl
xorl
loop
add
in
or
xchg
and
mov
mov
inc
lods
mov
cs
aas
sub
cmp
pop
inc
and
adc
mov
mov
scas
pop
push
inc
jno
outsb
add
mov
xchg
mov
push
xchg
ljmp
gs
sub
es
mov
pop
int3
dec
outsb
or
mov
xor
ret
imul
fisubrs
xor
adc
inc
jp
aaa
ret
mov
xchg
mov
test
sbbl
and
xor
popa
add
sbb
push
mov
mov
xor
repz
xchg
ret
add
dec
inc
ret
sub
ss
mov
fdivs
addb
rol
sub
xchg
xor
js
xchg
lret
cs
mov
push
mov
adc
push
out
xchg
mov
nop
es
dec
jns
jns
lock
shll
mov
pusha
mov
lret
addb
data16
int3
rorb
popa
sbb
cltd
sar
push
and
and
outsb
pushf
imul
mov
scas
pop
add
imul
push
adc
mov
cmp
sub
jne
fisttps
sub
inc
mov
test
xchg
flds
test
fistpl
jp
or
pop
xchg
mov
or
xchg
xor
jl
adc
cmpsb
add
movl
in
mov
int
push
pop
lds
rcll
and
sub
rcll
jbe
xor
nop
cmc
push
jns
outsl
lret
push
stos
and
xor
add
xchg
mov
hlt
rorb
xor
in
xchg
bnd
enter
inc
andb
or
lcall
iret
clc
bound
xchg
cmpsl
loope
shl
mov
xchg
mov
xchg
pop
dec
lea
nop
sub
lods
push
fsub
fcoml
jge
repz
sub
jae
mov
push
outsb
xor
jb
sub
push
inc
xor
int3
add
jecxz
outsb
negb
mov
jne
hlt
pop
mov
call
cmp
dec
adc
mov
pop
mov
std
mov
ret
add
dec
jle
or
adc
push
dec
shlb
cmp
cmpsl
or
lea
jle
xor
std
cmp
sahf
and
jg
pop
fcmovne
in
roll
sbb
repnz
dec
cmp
cmp
push
into
xchg
inc
add
xchg
pushf
push
bound
dec
jbe
hlt
xor
popf
sub
idivb
mov
push
shrb
scas
push
fdivl
pop
roll
add
das
sbb
inc
dec
jns
repz
mov
cld
int
ret
jo
loop
jg
cmp
mov
fcomi
addr16
sarb
movsl
repz
mov
sub
sub
pop
xchg
cltd
mov
insb
hlt
arpl
xchg
dec
mov
scas
sbb
in
xchg
mov
dec
ret
aad
mov
xchg
inc
or
and
xchg
shrl
clc
testb
mov
mov
aas
mov
jge
test
pop
inc
xchg
add
in
mov
pop
popf
mov
stos
pushf
sbb
sahf
cwtl
sbb
mov
into
mov
fcompl
idiv
mov
cmp
inc
divb
and
popf
jle
push
scas
or
sub
cmp
and
imul
inc
xchg
sbb
sbb
fisttps
into
sub
clc
aam
sub
ljmp
fnstsw
push
xor
mov
mov
or
sbb
adc
xchg
mov
mov
xchg
call
outsb
movsl
insl
xchg
add
les
mov
loope
gs
add
push
stos
adc
cli
pop
enter
and
outsl
sub
pop
dec
push
xor
fcmove
mov
movsb
and
out
mov
lcall
repnz
dec
out
jb
cld
and
popf
aad
fdiv
js
mov
sbb
and
repz
jle
inc
leave
into
iret
push
data16
sbb
loop
out
xchg
dec
cli
dec
or
or
mov
sub
dec
lret
sub
in
lret
pop
mov
xor
or
loopne
les
xor
scas
jnp
aaa
xor
nop
and
addr16
ja
xchg
cmc
outsl
fmull
mov
add
repnz
test
add
lods
js
inc
cwtl
add
inc
mov
iret
aaa
jecxz
filds
ret
mov
mov
pop
pop
pusha
jno
xorl
cld
pushf
das
jbe
enter
cmp
lods
push
sbb
pop
mov
in
add
nop
dec
repnz
insb
xchg
insl
mov
outsb
xchg
xor
icebp
adc
insl
inc
sub
and
lahf
cmp
cmpl
cmp
popa
sahf
or
mov
out
and
dec
xlat
pop
mov
mov
lret
into
repnz
cmp
mov
popa
test
ret
and
bound
lcall
push
je
cmp
insb
bound
adc
xor
cmpl
sahf
pop
int3
mov
icebp
jo
push
inc
ja
aad
add
xchg
cmp
subl
mov
pop
stos
aaa
or
sbb
shll
setae
fdivr
bound
test
fldt
nop
loopne
mov
push
out
mov
adc
cmp
push
flds
xor
pop
jge
ret
test
daa
or
xchg
lea
mov
cmpsl
orb
adc
ror
xlat
lods
mov
pushf
sub
popa
xlat
pushf
popf
dec
std
fisubrl
in
xchg
int3
adc
jb
cltd
dec
call
test
repz
imul
jl
fdivrs
and
scas
orl
sub
out
js
iret
dec
inc
movsl
mov
xor
les
sbb
enter
push
dec
mov
push
stc
jno
repnz
xchg
adc
xchg
xorl
mov
mov
add
or
cmp
mov
mov
mov
into
jecxz
mov
pop
dec
inc
aad
pop
sbb
or
xor
enter
pop
cltd
jl
ficoml
adc
mov
repnz
cmp
test
cltd
notb
dec
popf
test
repz
mov
es
inc
nop
inc
out
test
pop
in
aas
xchg
mov
insl
xchg
fdivl
sbb
or
das
in
or
or
jle
cmpsb
bound
push
mov
enter
arpl
sub
repz
pusha
in
push
pop
mov
test
inc
push
pop
in
and
movsl
cmpsl
rorl
out
xor
aam
out
int
data16
repnz
roll
mov
mov
lcall
loope
cltd
or
lea
xchg
fwait
int3
push
jg
flds
das
arpl
test
std
lods
inc
ss
cmp
jl
xor
insb
mov
mov
mov
testl
test
arpl
and
imul
iret
or
pop
jmp
push
or
insl
or
sub
arpl
js
pusha
sub
out
fsubs
push
push
add
sub
push
inc
xchg
push
pop
mov
dec
add
ret
test
in
imul
cmc
mov
lock
mov
jl
push
xchg
aam
enter
mov
les
movsb
or
mov
ljmp
dec
inc
xchg
movsl
inc
or
orl
insl
jb
call
lcall
das
push
lret
add
dec
lcall
and
js
dec
in
stc
lds
xchg
and
push
lods
fidivrs
call
in
cmpsl
cli
clc
jne
rorl
push
dec
adc
clc
inc
scas
in
scas
stos
mov
push
repnz
mov
dec
test
pop
data16
add
stos
fcomp
pop
push
cmpb
push
lcall
out
lret
pop
mov
xchg
xchg
loope
mov
out
sbb
test
outsb
loop
test
push
arpl
jno
xlat
cmc
push
dec
sub
mov
sub
adc
mov
inc
xor
mov
rcrb
cmc
lret
std
in
xchg
shlb
mov
movsl
sarb
pop
jbe
xchg
jbe
stos
dec
xchg
aad
sbb
lea
or
mov
data16
and
pop
sub
adc
sbb
adc
rcrb
lret
mov
adc
lods
out
xchg
hlt
fwait
into
pop
jnp
pushf
inc
enter
mov
xor
or
popa
xor
lock
aaa
lods
loop
mov
sbbl
movsl
pop
fdivl
fdivrl
xor
rorl
mov
jne
lret
inc
cmp
push
daa
leave
lds
pop
sarb
mul
adc
icebp
xchg
xlat
call
push
lret
sahf
mov
ss
push
lds
or
jmp
jo
mov
jl
ja
sub
xchg
leave
sub
mov
into
mov
mov
das
cld
movsl
lds
jno
sub
mov
mov
fwait
sub
int
mov
in
dec
aas
dec
les
push
jmp
lds
aam
and
lret
lods
sbb
and
insb
fidivrl
movsl
mov
cmc
mov
ret
and
out
xor
jb
pop
and
push
inc
sub
pop
popa
add
arpl
js
ja
add
loopne
mov
and
push
add
and
sbb
aam
addr16
or
loop
bound
repz
cmc
lods
outsb
pop
push
into
out
mov
jb
test
adc
push
repz
mov
arpl
xor
pop
push
lock
fstp
pop
mov
and
jnp
pop
insl
imul
rcl
mov
sbb
test
jge
sti
insl
stos
dec
xchg
inc
enter
xchg
or
jl
sbb
push
jle
and
pushf
fwait
or
fdivrs
inc
aam
lea
lea
or
cmc
sub
jge
inc
repz
pushf
out
es
jae
imul
sub
inc
or
jg
sub
repnz
xchg
movsl
insl
icebp
dec
pop
or
out
and
sub
push
pusha
xchg
out
ss
jge
inc
push
addr16
push
in
rcrb
shlb
or
popf
inc
into
xchg
movsb
push
popf
popa
fdivrl
mov
cld
sub
adc
add
scas
sub
and
jae
movsb
sub
cmp
pop
loope
popa
mov
xchg
lock
pop
pop
fimuls
out
loop
dec
and
dec
je
mov
sub
inc
mov
xchg
dec
aas
xor
in
xor
xor
mov
adc
adc
dec
int
mov
jnp
cmp
shll
ljmp
xchg
jp
repnz
jmp
in
shlb
mov
fstpt
clc
es
sub
ret
roll
popl
mov
into
scas
sbb
xor
push
in
cmp
mov
das
adc
cmpsl
mov
jae
lea
xor
lds
lds
xchg
xor
adc
jge
mov
das
mov
xchg
jl
mov
dec
lahf
ret
xor
fdivrs
js
pop
addb
mov
lcall
mov
nop
adc
ss
mov
orl
xor
rcr
lock
popa
fisttps
fstl
movsl
in
mov
xor
and
and
mov
adc
out
nop
leave
stc
lods
inc
lock
mov
stc
mov
dec
por
ss
jge
imul
and
inc
cltd
aad
or
jecxz
mov
jns
sub
jns
sti
repz
pop
mov
loopne
inc
call
enter
repz
inc
mov
cmp
pop
sbb
or
stc
or
das
fcompl
xchg
sub
outsb
mov
out
das
cmp
imul
sbb
mov
movsl
filds
lret
cmp
cmp
decb
pop
pop
call
popf
add
lret
packuswb
adc
js
hlt
mov
rorl
scas
inc
jecxz
into
mov
jmp
cmp
push
adc
mov
mov
int
xor
mov
icebp
dec
inc
orb
push
adcb
mov
mov
popf
cmpsl
mov
outsb
leave
mov
mov
pop
jb
mov
fbld
xchg
adc
push
dec
lock
call
push
add
loope
mov
inc
pushl
loop
enter
aad
jne
loope
push
repnz
inc
outsb
lds
add
mov
adc
xchg
xor
dec
test
jnp
fwait
ja
nop
iret
cmp
insb
or
jne
cmp
sbb
std
xlat
call
je
clc
push
shlb
jo
mov
jae
jnp
cli
sahf
enter
leave
insb
sub
inc
adc
cmpsb
inc
enter
sbb
repz
loopne
std
sarl
sub
fldt
incl
sbb
shll
mov
hlt
mov
jecxz
xor
lods
mov
scas
cmp
xchg
fsin
dec
lahf
stos
pop
xor
cltd
rcr
fisubl
sti
outsb
fidivrs
cwtl
shlb
fwait
repnz
bound
jl
mov
out
mov
jb
imul
aam
cmpsb
and
lods
scas
enter
dec
adc
arpl
mov
xchg
and
pop
mov
xor
das
lock
jl,pt
cmp
jne
pop
or
sbb
pop
addr16
scas
lods
jl
rolb
xlat
lock
loop
jbe
lcall
xchg
or
and
stc
xor
pop
jmp
sbb
mov
or
outsl
jne
jecxz
daa
or
into
push
or
imul
js
lea
data16
jecxz
mov
xchg
push
pop
dec
int3
icebp
adc
cmpsl
pop
dec
mov
xchg
and
add
bsf
and
int
icebp
sbb
mov
mov
nop
jno
mov
jnp
push
mov
insl
jecxz
aaa
in
push
push
insl
xor
sub
cmpsl
out
dec
iret
repz
jnp
js
fldenv
testb
and
mov
pop
mov
xchg
insb
in
movsl
shll
sbb
pop
inc
sbb
hlt
mov
mov
lods
xchg
addr16
adc
dec
inc
pop
jnp
xchg
gs
cltd
mov
in
pop
test
dec
test
data16
daa
mov
pop
movsb
mov
sub
and
add
out
adc
clc
push
ja
jge
icebp
loop
add
push
sub
sub
sbb
mov
inc
out
shlb
adc
adc
xchg
pop
add
lods
mov
pavgw
jnp
jge
adc
or
mov
and
xchg
ret
mov
das
fidivrs
pop
in
mov
adc
js
aam
push
cltd
sbb
outsl
mov
xchg
and
sbb
in
enter
add
mov
jg
sbb
lcall
sub
aas
pop
push
negl
mull
insl
adc
xor
scas
mov
idivl
cmpsb
sub
xorb
or
sub
xchg
int3
sbb
jg
sbbb
lods
inc
and
cmp
cmc
lds
mov
fisubrl
fwait
mov
js
mov
into
or
aad
jmp
cmp
push
fwait
ret
mov
sbb
and
xor
xchg
xchg
xchg
sti
cwtl
jle
pop
or
fcoml
test
ja
dec
ret
push
jl
mov
std
iret
adc
adc
stos
loopne
xor
xorb
xchg
popf
mov
pusha
dec
data16
das
test
add
push
ds
lcall
mov
fwait
mov
rolb
bound
xchg
sbb
xor
aaa
sub
es
cwtl
ret
xchg
repz
jb
cmp
movsb
and
cmc
popa
xchg
jmp
sahf
xorl
xchg
ss
mov
pop
popa
enter
inc
insl
scas
and
cmp
sub
aaa
ret
in
xlat
cmp
inc
dec
and
out
cmp
adc
add
pop
mov
mov
rolb
stc
mov
adc
adc
scas
aas
mov
js
xor
mov
pop
cmp
xor
lods
lea
adc
loop
call
sub
mov
movsl
sub
lret
cmpsl
shrl
jl
std
sbb
add
jmp
mov
lods
bound
mov
sar
and
adc
sub
fwait
clc
outsb
dec
sub
rolb
xchg
insb
inc
cltd
xchg
pop
enter
xor
rcll
sbb
mov
or
mov
lret
jle
rcr
mov
loop
and
sbb
aaa
or
mov
lea
adc
or
lahf
sbb
sbb
sub
adc
stos
inc
fdivrs
inc
or
xchg
jbe
sarb
push
fistl
fcomip
pop
or
sub
repz
dec
in
imul
xor
push
loope
scas
std
dec
and
mov
cmp
xor
popa
insb
cmc
adcl
dec
fnstenv
ret
into
out
mov
leave
movsb
adc
mov
or
jmp
sub
push
into
dec
push
and
push
fists
cmp
mov
pop
ret
cwtl
out
pop
sub
inc
fwait
sub
inc
xorl
lahf
mov
push
mov
xor
sub
jl
cli
bound
xchg
mov
mov
int3
cmc
xor
pop
in
mov
and
sbb
xor
jne
dec
mov
insl
jno
stc
cmpsl
push
lcall
pop
jle
in
sarl
hlt
mov
sbb
mov
shr
or
loope
push
mov
mov
xchg
das
inc
push
enter
shrb
mov
pop
adc
test
lock
icebp
inc
add
pop
jbe
xchg
inc
mov
lods
pop
addr16
rclb
sub
out
cmpsb
fldt
adc
add
and
mov
add
jmp
test
and
jnp
dec
xchg
rolb
add
loopne
sbb
mov
aad
insb
dec
jecxz
pop
stc
movsl
push
iret
les
jle
xor
nop
movd
int
add
fnstsw
jb
add
sbb
rolb
or
xor
push
cmp
mov
inc
movsl
out
and
xchg
loop
lock
cmc
and
aaa
insb
and
cld
shrb
xchg
adc
sbb
xchg
sub
imul
xor
mov
jae
les
jg
popa
sbb
or
insb
std
test
mov
sub
stc
xorl
fsubl
icebp
cld
out
les
pop
xor
adc
mov
daa
shrb
pop
decl
xlat
movsb
mov
movl
decb
std
fcmovbe
or
mov
xor
inc
cmc
sbb
jle
pop
call
ljmp
pop
enter
mov
push
mov
xchg
mov
stc
cmp
dec
inc
push
mov
std
lock
js
xchg
dec
fldl
lret
sub
andl
sbb
in
push
out
imul
xchg
fidivl
jbe
int3
imul
sti
xor
outsb
dec
jl
push
movsb
adc
jbe
movsl
xor
cld
xor
ss
pop
insl
adcb
adc
pop
dec
cmp
xchg
add
bnd
pop
mov
push
js
adc
mov
mov
out
ja
pop
jl
arpl
push
in
jns
daa
pop
sbb
xor
test
insl
mov
std
ss
shll
bound
das
fmuls
popf
mov
cmp
inc
leave
test
sbb
mov
xchg
pushf
mov
push
sbb
popf
mov
repz
cld
call
aad
push
cs
loopne
mov
xor
mov
insl
push
mov
mov
shl
push
adc
aas
sub
mov
hlt
test
cmpl
mov
enter
leave
outsb
sbb
cmp
stos
stc
mov
test
push
ret
push
pop
mov
cmp
test
mov
jmp
lock
es
mov
jnp
add
lahf
sub
mov
sbb
pusha
int3
cli
cmpsl
mov
dec
fiaddl
call
cmpsl
lcall
mov
sub
jno
cmp
rcll
mov
dec
pop
mov
sbb
pop
sbb
cli
out
test
rcr
ret
xor
lret
fdivrs
fisttpll
repnz
xchg
push
push
adc
adc
lds
repz
in
sub
shlb
mov
mov
lock
push
jo
cwtl
arpl
sub
or
xchg
cmp
mov
es
dec
jl
xor
roll
cmp
pop
mov
adcb
mov
fdivr
std
cs
test
mov
lcall
test
shlb
pop
sbb
mov
enter
xor
popa
adc
jns
clc
mov
adc
repz
adc
and
clc
inc
sub
push
in
mov
fistps
or
ret
ljmp
push
xchg
dec
cmp
sti
dec
stc
mov
gs
xchg
in
adc
outsb
mov
shlb
mov
pop
xchg
xchg
inc
mov
insb
mov
mov
xor
sbb
fisttps
push
fnstsw
icebp
fldenv
fidivl
hlt
cmp
cmp
and
adc
stc
in
dec
pop
sbb
dec
movsl
data16
cmp
loope
sub
xchg
or
pop
adc
pop
inc
test
cmpl
jp
movsl
and
scas
push
in
in
xor
xchg
pusha
jb
nop
cmp
mov
sub
sub
and
lock
mov
addr16
fisttps
cmp
ret
cltd
xchg
cmp
sub
ret
add
sub
mov
sub
pop
jecxz
movsb
shrl
std
fisubs
pop
das
sbb
fisttps
dec
or
stos
divb
mov
dec
push
push
cmpsb
clc
pop
rcrl
aam
loop
xor
movb
insb
xchg
xchg
popf
fdivrs
fidivs
call
push
or
pop
pop
mov
mov
xor
jmp
mov
jno
loope
sbb
add
push
xchg
push
test
into
jg
nop
xorl
movsb
cmp
cmp
xlat
adc
cmp
jnp
push
lods
or
push
cmpsl
or
stos
sbb
int
dec
popf
sti
sub
js
add
gs
push
push
mov
push
je
ds
mov
cmp
ficomps
push
dec
or
add
icebp
jns
pushf
dec
mov
or
mov
inc
xchg
arpl
jle
aas
push
mov
jb
fsubs
jae
mov
enter
xor
hlt
loop,pn
or
in
mov
jb
jp
rol
xchg
dec
out
mov
scas
outsb
push
push
xor
dec
or
lock
inc
lock
in
ja
jb
clc
pop
mov
or
sub
js
les
imul
jo
pusha
inc
push
add
repz
pop
cmp
imul
pop
imul
xor
pop
mov
push
adc
nop
mov
sbb
push
sbb
ret
dec
push
jp
jo
pop
es
ret
xor
mov
mov
inc
sahf
scas
out
mov
xor
lahf
les
sub
fstl
cmp
pop
insl
je
mov
cmp
mov
mov
or
outsb
or
stos
inc
cmp
icebp
int3
push
mov
aam
push
js
add
out
fwait
mov
sub
xchg
inc
out
add
or
mov
xchg
mov
stos
push
xor
and
inc
adc
sbb
xchg
sbb
out
gs
int3
je
scas
mov
jne
cld
movsl
mov
in
cli
pop
bound
mov
push
push
aam
mov
pop
adc
pop
mov
scas
mov
and
adc
outsl
enter
pusha
inc
and
xor
mov
xor
scas
je
fwait
pop
xor
loopne
adc
icebp
mov
push
imull
movl
fwait
and
add
mov
push
idivb
fsubrl
je
scas
pop
xchg
jg
and
pusha
mov
int
loopne
cltd
cmp
imul
fmull
outsl
mov
inc
cmpsb
aaa
roll
cmp
push
and
call
out
xor
pop
sub
ds
mov
dec
je
jno
loope
and
pop
dec
mov
out
xchg
pop
outsl
pop
arpl
enter
in
jle
pop
inc
xor
cmp
rcr
out
out
mov
inc
mov
xor
aas
sbb
loope
enter
jl
jno
dec
scas
aas
je
adc
shlb
pop
dec
pop
adc
iret
test
pusha
push
lds
jae
sbb
mov
cmp
inc
sbb
scas
cmp
movsb
mov
in
or
enter
jae
fidivrl
fstpl
dec
inc
flds
ja
mov
in
sti
dec
les
push
insb
dec
test
inc
mov
lods
in
pop
shlb
and
add
sub
leave
mov
fdivs
scas
pop
xchg
lea
xchg
data16
dec
xchg
stc
mov
popa
rcrl
inc
inc
pop
arpl
std
jmp
dec
repnz
stos
repz
cs
icebp
add
je
pop
rcll
adc
cs
xchg
dec
movsb
test
fildll
test
icebp
icebp
mov
ret
and
jae
sti
out
sbb
call
mov
push
pop
cwtl
jnp
ja
negl
ret
outsl
inc
test
sbb
fsubrl
jb
js
lds
push
xchg
xchg
rcrl
mov
int
cmc
lock
push
push
daa
outsl
negb
xchg
cmpsl
out
insl
mov
cmpb
or
or
cmp
test
movhps
cld
enter
imul
cmpsb
lds
sbb
xchg
mov
sbb
aas
pop
sub
xor
inc
loope
pop
sub
push
cmp
mov
imul
dec
repz
dec
mov
sbb
add
xor
insl
mov
push
and
movl
add
cmp
or
movsl
xor
mov
daa
mov
pop
loop
cmpb
inc
dec
addb
mov
jae
dec
nop
fstpt
mov
ss
jnp
insb
mov
cli
fisttpl
xor
sbb
pop
or
sub
adc
mov
je
and
adc
push
insb
popa
lock
roll
in
push
cmp
push
stc
push
pop
adc
es
sbb
jno
and
shr
call
cmp
cmp
sub
push
loopne
mov
sub
outsb
out
ljmp
cmp
inc
pop
and
push
mov
dec
jl
sub
jmp
std
out
shl
xchg
or
pop
xchg
enter
cmp
imul
inc
je
pop
lcall
lds
hlt
dec
ret
adc
jg
jl
xor
aam
and
popw
outsb
mov
xor
jle
push
mov
xchg
mov
jle
adc
movsl
xchg
aam
pop
pop
jno
jnp
add
inc
iret
inc
in
push
xor
lcall
adc
xor
dec
jno
mov
push
das
adc
aam
jbe
mov
ljmp
add
rcrl
mov
sbb
loop
and
jbe
and
iret
pop
push
loop
dec
js
cli
movsb
testl
les
mov
mov
sub
pop
push
push
decl
movsl
bound
test
and
ss
jns
adc
rorl
mov
mov
or
sbb
adc
jb
lahf
mov
add
jo
packsswb
ja
mov
mov
sub
push
cmp
cli
cmpsb
sub
or
push
std
mov
sbb
test
pop
mov
cwtl
scas
cmp
call
dec
and
jmp
push
out
loop
shlb
fnstsw
enter
enter
inc
lret
dec
lea
jg
xchg
popa
pop
xchg
sub
mov
daa
mov
push
xchg
adc
push
ret
fisttpll
mov
cwtl
push
cmc
aam
sbb
dec
inc
mov
sub
mov
jle
push
ss
mov
pop
jo
pop
push
adc
test
in
xchg
inc
rolb
lret
out
sub
sbb
mov
adc
icebp
and
mov
das
and
mov
mov
rorb
je
and
scas
shr
adc
out
mov
mov
xor
mov
or
mov
cmpsb
inc
out
inc
mov
cli
xchg
mov
dec
pushf
fistps
lods
mov
syscall
minps
jbe
pop
mov
or
xor
insl
lahf
jge
ss
pop
xor
cmp
adc
push
xor
sub
jmp
adc
in
mov
pop
jb
dec
fstps
pop
int
test
or
and
outsl
lret
pushf
aaa
mov
es
rclb
lcall
cmpsl
fbstp
std
push
loopne
fwait
pop
sub
mov
ds
mov
sbb
mov
or
stos
push
sbb
xchg
adc
stos
jnp
cmp
gs
sbb
fidivs
sub
stos
jl
mov
gs
hlt
insb
pushf
fstl
pop
daa
dec
xchg
or
stos
mov
out
in
mov
mov
jae
rolb
jno
cmp
out
es
imul
xor
mov
mov
repnz
xchg
inc
pop
push
add
sbb
pusha
sub
and
mov
jmp
xor
mov
mov
push
data16
scas
mov
loope
test
out
pop
dec
ds
sbb
out
ss
in
xorb
dec
xchg
lcall
call
out
mov
sti
mov
sub
sub
int
sbb
repz
stos
mov
out
push
pop
repz
pop
inc
lcall
mov
push
bound
lcall
push
daa
xchg
sahf
pusha
bound
inc
mov
mov
in
dec
in
subb
imul
rcl
aaa
and
imul
dec
pop
adc
lods
aad
sub
push
lcall
out
fs
lret
push
jb
push
push
xor
and
scas
icebp
inc
test
xor
pop
jl
cmp
cld
hlt
jne
lea
mov
out
in
adc
hlt
lahf
scas
test
shlb
icebp
movsb
jp
pop
iret
xor
leave
mov
popa
push
cmp
xorb
pop
or
repz
adc
divl
mov
mov
sbb
inc
fists
pop
aas
stos
add
movsl
outsl
inc
mov
or
dec
ret
outsb
in
add
adc
mov
and
dec
jo
push
int3
jmp
mov
mov
aam
fstps
jne
or
popf
xlat
sbb
push
loopne
mov
xchg
or
ror
sbb
cmp
insb
inc
mov
xlat
je
in
loopne
cli
or
xor
push
sbb
mov
popa
xor
arpl
mov
loop
push
add
inc
sahf
and
adc
push
test
fs
inc
pusha
sub
fildl
xor
out
imul
cmpsb
cmp
mov
push
pop
test
cmp
test
ret
jl
push
mov
inc
clc
xchg
iret
leave
mov
add
popa
mov
cmp
inc
sar
movsb
jle
outsl
pop
jecxz
mov
jae
loopne
lret
jo
in
mov
mov
adc
lock
jbe
sbb
int
jne
cmp
dec
test
push
lret
mov
insl
mov
push
adc
call
cli
insb
cli
pop
test
cmp
push
mov
mov
mov
scas
aas
insl
sub
adcb
mov
push
sub
aas
insb
xor
sbb
in
sbb
jmp
xor
push
push
imul
iret
shr
jle
lret
cwtl
xor
in
mov
xchg
jns
inc
add
int3
pop
jle
cmp
mov
jmp
pop
orl
popa
outsl
dec
mov
dec
sahf
jp
mov
inc
in
or
add
insb
push
les
mov
pop
pop
fpatan
xor
jge
mov
jg
add
lret
sbb
xor
pop
out
jbe,pt
pop
pusha
divb
mov
repnz
xor
pop
push
pop
pop
push
sbb
shlb
jg
xchg
into
rcrl
sub
pushf
rcrb
add
mov
leave
mov
test
jo
loop
scas
cmp
or
xor
cmp
push
xchg
fstpl
lea
js
setae
out
cmpsl
adc
lea
mov
in
xor
add
cmp
pop
ret
aam
mov
test
and
test
loop
sbbl
xlat
fs
mov
in
icebp
lds
test
sub
sub
mov
pop
mov
dec
mov
cmp
je
mov
mov
xor
andl
lret
fmul
mov
repnz
add
out
jl
rorl
adc
imul
mov
mov
mov
xor
sbb
dec
jle
pushl
cltd
sub
dec
jno
stos
std
inc
dec
cmp
ds
mov
mov
dec
xor
jmp
lahf
push
jbe
pop
jns
inc
jg
add
pop
sub
dec
outsl
ret
cltd
and
cmp
dec
and
cmpsl
mov
popf
xor
xchg
popf
mov
ljmp
int
outsb
add
lahf
subl
enter
out
leave
ret
mov
fistl
inc
xor
mov
in
das
mov
xor
jo
or
sbb
mov
inc
into
mov
jg
mov
scas
mov
xchg
into
insl
cs
pop
push
in
add
mov
jae
sub
fimull
add
mov
mov
mov
mov
sbb
in
je
lods
push
pop
mov
ljmp
dec
mov
shrl
out
test
and
pop
ja
push
cmpsl
mov
mov
mov
push
imul
neg
mov
mov
xchg
and
jbe
subl
add
add
fwait
inc
ficoms
lock
in
jmp
jecxz
out
lcall
loop
loop
aad
dec
add
add
pusha
lock
js
jp
in
cmpsb
xor
iret
lea
jo
dec
pop
inc
addl
xchg
cmp
sub
pushl
push
stos
mov
iret
inc
mov
add
in
mov
dec
lock
or
add
add
inc
inc
iret
mov
mov
mov
out
repnz
ds
cwtl
int3
jbe
imul
xchg
cmp
xchg
adc
xor
add
jne
mov
repnz
jp
in
je
mov
in
cmp
cmp
push
in
dec
cmpsb
xchg
movsl
gs
popa
movl
inc
enter
aas
pop
jo
out
sbb
jge
lds
daa
push
xor
push
popa
mov
push
mov
adc
mov
sbb
xchg
arpl
sub
bound
sub
scas
fnstsw
out
xor
cmp
xor
je
or
bound
cld
test
fs
mov
cld
out
mov
scas
shrb
add
jne
or
ret
sbb
jmp
ljmp
scas
and
in
and
lcall
or
xchg
or
repnz
es
mov
out
and
xchg
or
test
aaa
sub
in
dec
mov
xor
divb
and
adc
xchg
mov
icebp
pop
lods
inc
negl
jae
fimuls
jecxz
incl
cwtl
push
adc
sub
cld
xchg
fisubl
into
add
inc
sub
mov
ja
mov
popf
push
inc
push
cmp
mov
cmp
ret
adc
scas
fcompl
das
sbb
and
and
cwtl
dec
cwtl
lock
movsb
test
fcmovne
popf
xchg
lret
std
test
dec
shrl
xchg
push
loopne
and
stos
cmp
psubsb
scas
ret
xlat
sbb
rorb
mov
push
pop
mov
les
shll
js
or
out
dec
sarb
adc
sub
mov
jo
dec
mov
jg
sti
or
jo
mov
push
xor
setno
es
mov
xor
sub
jle
inc
inc
sub
gs
inc
sarb
inc
jge
jle
outsl
sahf
iret
rorl
lret
mov
vmwrite
pop
stc
mov
mov
mov
pop
repnz
andb
stos
jmp
pop
mov
int3
in
or
rcll
fwait
jp,pt
je
adc
pusha
inc
daa
cmc
sub
ss
jno
mov
lods
and
orb
adc
push
mov
mov
outsl
mov
mov
cmp
xchg
das
out
aas
imul
fisubrl
mov
pop
xor
push
mov
adc
cmp
enter
inc
xlat
push
mov
and
pop
sbb
sub
adc
xchg
pop
bound
and
and
loope
clc
or
or
mov
xchg
les
rcrl
push
popf
popf
aad
or
rcrb
call
mov
mov
repnz
mov
or
leave
mov
mov
or
mov
jbe
sbb
dec
cld
xor
push
mov
inc
sahf
cmpsl
iret
mov
fisttps
sbb
scas
xchg
shrd
js
push
push
movsl
pop
jmp
mov
xchg
dec
lret
pop
cmpsb
jne
inc
hlt
push
xchg
mov
cmp
stos
leave
in
sti
mov
dec
daa
sbb
adc
mov
sub
repz
xor
cli
jmp
mov
rclb
cmp
push
insb
mov
ljmp
and
sub
lock
push
mov
in
inc
ja
xchg
testl
inc
cwtl
rolb
jmp
shll
pop
or
mov
cmp
mov
cmpsb
out
test
xchg
stos
jae
push
jg
rorl
push
test
fsts
int
sbb
stos
imul
ret
sub
arpl
dec
idivl
mull
jne
sub
fdivs
hlt
sbb
movsl
dec
or
lea
mulb
or
fdivrp
and
sbb
jmp
pop
jbe
mov
out
into
ret
aam
adc
sub
xor
mov
cmp
imul
das
imul
ja
xor
fisubl
mov
xchg
xchg
out
mov
add
je
fdivs
cmc
sbb
cs
int3
rcrb
out
sti
leave
mov
xchg
les
mov
sahf
das
in
cmp
movsl
push
hlt
push
lods
aas
or
adc
ds
mov
adc
cmp
cmp
inc
out
mov
push
xor
push
aas
gs
inc
lret
rep
pop
jns
inc
stos
push
outsl
cs
cmp
and
adc
cmp
je
mov
pop
repnz
push
stos
insb
rdmsr
lods
mov
adcl
sti
lods
push
insb
push
dec
adc
icebp
inc
insb
pop
add
push
addr16
ljmp
sub
pushf
jle
jb
cli
push
cs
xchg
enter
shll
xchg
sbb
stc
ljmp
xchg
leave
inc
shrl
sti
imul
push
loope
popf
out
in
jmp
mov
fsts
shl
xor
inc
adc
rcrl
stos
js
push
imul
aas
jecxz
mov
lea
fwait
mov
mov
push
imul
mov
mov
das
lock
insb
push
inc
pop
mov
into
das
pop
dec
xchg
fbld
push
xchg
out
bnd
pop
leave
cmp
adc
cmp
jbe
push
iret
ret
or
pop
repnz
lock
push
cmp
push
shr
in
fcomps
xor
mov
jp
jbe
cmpsb
lret
sbb
inc
packuswb
repz
adc
add
sbb
sub
addr16
adc
add
loopne
int3
shll
xchg
lock
addb
xor
adc
add
cmp
mov
decb
mov
cwtl
lods
mov
stos
cmp
ds
int3
cmp
sub
rclb
mov
add
ret
lds
or
rcll
pushf
xor
push
hlt
mov
pushf
ficoms
dec
inc
nop
inc
push
leave
pop
bound
popf
add
push
inc
loopne
push
mov
lret
mov
js
add
jne
cmc
inc
out
dec
jne
mov
adc
adc
mov
fiadds
es
sbb
mov
je
loop
sub
jmp
in
ljmp
loope
ret
pushl
jge
mov
in
in
dec
and
and
rclb
loopne,pn
add
mov
flds
popa
repz
mov
fcmovne
aas
or
jns
jnp
cmp
jle
mov
int3
mov
in
ret
push
mov
ljmp
int
lahf
mov
das
shll
test
cmp
ds
mov
mov
add
daa
rcrl
int
sbb
mov
mov
jle
jae
inc
shrb
inc
mov
xchg
xchg
lret
jl
ss
dec
fwait
aam
inc
fimuls
sub
mov
js
or
jg
inc
lock
add
xchg
jecxz
hlt
call
mov
iret
hlt
in
daa
ja
jae
mov
push
shlb
mov
jns
add
mov
je
pop
pop
push
jne
jmp
pop
dec
jb
clc
push
sahf
divb
sbb
stos
dec
add
fnstenv
daa
mov
jle
pop
stos
incl
ss
sbb
mov
jb
bound
xor
dec
lahf
xchg
mov
mov
add
push
xor
sbb
daa
les
push
add
ja
lret
add
jg
jp
je
sub
inc
loope
ljmp
pop
jle
cmp
sbb
xor
dec
add
dec
out
out
cld
or
dec
test
mov
cmp
jmp
sbb
mov
jle
int3
daa
jmp
inc
pop
xor
or
imul
push
add
or
ret
pop
xchg
arpl
iret
sbb
jns
sbb
sub
and
pop
sub
jle
scas
jbe
loope
mov
sbb
lcall
loope
add
inc
pop
xor
fadd
xor
nop
xor
stos
stos
xchg
fisttpll
sti
aad
loopne
sti
sub
std
inc
mov
sub
stos
mov
inc
test
fidivrl
or
incl
pop
fildll
xor
imul
sbb
js
lahf
fs
and
sbb
sahf
popa
mov
dec
mov
jo
dec
mov
inc
jecxz
xchg
or
pop
pop
pop
int3
xor
in
adc
lcall
into
aaa
int3
js
in
lds
xchg
leave
ja
sbb
or
shl
cmp
jmp
decl
stc
fs
push
leave
stc
mov
sbb
jne
jl
add
xchg
scas
hlt
jo
and
fistpl
loope
adc
ss
das
idivl
fdiv
cmpsl
mov
aas
sub
add
shlb
inc
mov
aad
aaa
std
pop
xchg
iret
and
ret
mov
repz
stc
xchg
popf
test
stos
stos
sar
sbb
nop
fimull
sbb
mov
inc
cmp
adc
push
andl
sbb
sub
sbb
pop
add
mov
xchg
pop
mov
into
ficoml
fcoml
into
adc
adc
sbbb
roll
jp
fs
sti
shl
xlat
cmp
in
les
xchg
cltd
fsts
addr16
inc
xchg
shrl
test
push
aaa
stos
cmp
int3
pushl
test
or
in
sbb
dec
test
mov
jle
fcomps
fcmovbe
xor
mov
sub
cmc
xor
xchg
cmpsl
mov
hlt
ret
mov
fdivl
mov
sahf
xchg
xor
jg
iret
in
sub
dec
cmp
mov
jp
push
testl
test
and
cld
or
ss
push
dec
aad
jae
add
jo
or
rolb
stos
dec
adc
xchg
fcoml
mov
or
sub
idiv
enter
imul
push
ficoml
fsubl
loopne
or
push
jmp
mov
lret
xchg
movsl
jnp
jle
xchg
jo
cmpsb
lods
popa
js
mov
inc
popf
dec
dec
popa
aas
add
pop
add
adc
das
add
pusha
rcll
bnd
add
dec
mov
dec
sub
adcb
push
push
xor
add
or
fdivrs
shlb
fsubrl
repz
daa
fstpl
xchg
aas
jne
adc
xchg
scas
adc
rcrb
ret
insb
aam
sbb
js
xlat
in
xchg
subl
mov
iret
aam
jp
inc
fs
jp
xchg
ja
dec
or
dec
lcall
fistpll
or
imul
push
iret
sub
sbb
loopne
xchg
jp
jecxz
xchg
cmp
lea
push
leave
mov
aas
in
in
ficoml
jp
push
cmpsb
pop
jbe
inc
sub
mov
cmc
inc
stos
subb
jae
fs
mov
rorb
push
jns
sbb
mov
push
and
pushf
lds
mov
aaa
mov
mov
mov
inc
idivb
das
dec
loop
add
inc
popf
daa
test
add
into
leave
pop
jl
daa
fsubrl
or
pop
cmpsl
pop
inc
jecxz
add
and
jns
sbb
test
adc
mov
mov
aam
cmp
sbb
cmp
cmpsb
enter
into
insl
push
cltd
andb
push
inc
or
jbe
xchg
xchg
mov
lret
mov
inc
dec
push
in
cmp
ss
clc
pushf
insb
xorb
lock
jecxz
aam
xchg
jo
cmp
xlat
xor
cmc
out
inc
adc
pop
ret
imul
jae
push
loopne
rclb
sbb
jb
test
and
push
incb
cmp
mov
aaa
jg
fwait
popa
fiadds
pop
sub
and
addb
xchg
pop
imul
pop
movsl
pop
xchg
sahf
add
inc
jl
mov
add
lret
sahf
pop
fs
enter
add
repz
sub
xchg
jp
pop
or
pusha
lods
add
mov
fdivl
imul
cmp
jno
sbb
mov
xor
mov
pop
mov
sti
int3
mov
push
sbb
mov
mov
fcompl
xor
xchg
repz
push
add
jecxz
loopne
dec
inc
mov
inc
sub
cmp
inc
orl
nop
insb
decl
jg
jmp
ss
test
jmp
push
out
mov
adc
out
inc
outsl
popa
xchg
mov
inc
test
daa
xor
dec
mov
and
sbb
xor
loopne
cwtl
xchg
xchg
imul
mov
cmp
lcall
pop
stos
inc
aad
enter
xorb
inc
mov
sar
rolb
sbb
lret
sbb
bound
xchg
ljmp
stos
xor
enter
cmp
mov
dec
cli
jno
loop
fucom
or
stc
and
or
or
test
xor
or
adc
xor
ljmp
popf
jecxz
push
out
add
div
out
pop
sub
lea
pop
xchg
add
dec
mov
test
mov
lea
pusha
jnp
sub
movsl
cli
outsl
cmp
jle
test
negl
sbb
mov
adcb
xor
ljmp
xorl
sbb
data16
shl
pop
mov
jecxz
lods
push
test
mov
loope
ja
dec
cmp
pusha
fcomip
sbb
dec
repz
shlb
mov
fdivs
movsl
pop
xor
mov
mov
push
mov
and
scas
int
lock
dec
dec
mov
adc
cli
pop
push
jbe
iret
mov
jmp
mov
sbb
sti
pushf
add
xchg
inc
fcmovnb
jo
mov
add
hlt
mov
xchg
xchg
std
mul
bound
inc
add
hlt
icebp
aad
leave
js
sbb
xchg
dec
xlat
mov
mov
xor
push
push
lds
lods
add
mov
xor
xchg
jbe
out
pop
fiadds
push
cmp
fldcw
and
dec
sub
cmp
loopne
add
and
pop
mov
inc
ja
mov
sarb
shlb
xor
mov
insl
je
iret
jge
jno
les
rorb
add
mov
ret
pop
icebp
popa
dec
mov
push
stos
xchg
mov
inc
and
iret
pop
mov
stos
in
fstl
imul
in
push
ret
mov
lds
add
pop
sub
out
addb
push
cmp
das
les
dec
int
push
fisubrs
xchg
iret
jge
scas
aaa
das
fimull
or
fcoml
loopne
cs
mov
lret
jmp
cmp
test
xchg
sahf
lods
lods
mov
call
pop
mov
mov
mov
add
sahf
sub
mov
mov
push
mov
scas
mov
out
pop
ret
cmpsb
xchg
inc
inc
push
add
or
jl
push
mov
dec
mov
push
sub
push
adc
les
shrl
push
add
andl
dec
clc
sbb
popf
inc
adc
push
dec
in
adc
pop
sahf
pop
mov
sub
jge
adc
lods
fnstcw
push
call
xor
xor
and
cltd
adc
jno
xchg
inc
pop
push
rcll
mov
fldcw
xlat
pop
lea
mov
and
xchg
int
sub
movsl
ds
pop
mov
je
inc
lods
pop
jb
mov
fs
or
jge
mov
repnz
mov
ret
and
mov
fisttpl
stos
pop
push
xchg
and
aas
outsb
movl
lods
pop
mov
mov
je
int
nop
add
jo
push
aam
sbb
mov
xchg
jg
loop
dec
repnz
subb
dec
lock
and
mov
pop
add
mov
pop
dec
movsb
js
sbb
sete
pop
push
dec
lret
fsub
sub
mov
stos
mov
imul
xlat
add
fildl
repnz
stc
push
dec
daa
push
and
gs
sbb
mov
xchg
jno
pop
xor
test
and
es
movsl
adc
adc
cld
jecxz
pop
pop
add
rorl
lret
inc
dec
jecxz
lret
inc
inc
popa
or
jl
js
pop
dec
int3
jecxz
mov
mov
testl
pop
lods
sbb
add
pop
insb
enter
subb
cmpl
out
int
xlat
or
sbb
sbb
ret
adc
andb
and
mov
mov
add
sbb
pop
adc
sbb
mov
mov
jnp
call
adc
mov
xchg
lds
mov
int3
xor
loopne
sbb
test
test
faddl
xchg
sub
inc
insb
enter
hlt
out
loop
xor
inc
xor
mov
adc
movsb
out
std
push
cli
or
mov
xchg
sbb
arpl
mov
sar
push
jnp
ss
lea
negb
dec
test
push
sub
clc
pop
mov
jne
stc
pop
jge
test
cmp
jbe
xchg
mov
call
outsl
stos
std
mov
into
in
xor
mov
mov
dec
bound
jne
ss
push
cmp
push
arpl
nop
mov
cltd
pusha
sub
adc
push
in
pop
jmp
stc
cmpsb
outsb
xchg
pop
sbb
adc
jg
jge
mov
aaa
mov
dec
xchg
add
mov
in
pushf
mov
adc
out
imulb
je
sarb
cmp
xor
adc
iret
mov
jecxz
gs
push
stos
shll
sbb
cmp
jb
jno
enter
mov
mov
test
pop
aam
fistpl
push
jns
or
cmp
andb
daa
xchg
sbb
and
xchg
bnd
in
sbb
pcmpgtb
xchg
adc
insl
lcall
cmpsl
jne
fadd
jp
mov
faddl
ljmp
cmp
push
mov
jo
dec
push
inc
lods
inc
ret
es
popf
xchg
inc
and
popf
hlt
je
int
pop
jl
pop
outsl
mov
pslld
push
icebp
lret
dec
aad
mov
cmp
pop
jnp
test
jnp
decl
ljmp
dec
sarb
xor
mov
cwtl
jp
sbbl
icebp
or
cmp
cmp
les
shll
aaa
sub
dec
test
repnz
sub
xor
movsl
or
loope
jne
ret
add
in
xor
pop
mov
xchg
sbb
sti
pop
outsl
sbb
push
loop
loopne,pt
loopne
insb
sbb
loopne
push
lock
push
push
js
mov
scas
push
jecxz
mov
jbe
lds
fiaddl
push
push
cli
dec
out
push
cmc
push
iret
inc
add
cmp
xchg
cld
push
adc
loope
fsts
inc
ljmp
ljmp
popa
addr16
popf
push
addl
pop
div
sub
into
std
or
push
inc
subb
das
loopne
or
inc
or
iret
fisubrs
clc
cmpl
mov
sbb
add
stc
or
xor
std
xchg
or
sub
or
jo
sub
lret
div
ja
xchg
lcall
je
fcoms
mov
cwtl
cmpsb
add
dec
sbbl
stos
das
jmp
test
jae
push
movl
scas
dec
jp
xor
insl
jnp
sub
in
push
xchg
push
daa
in
pop
cli
out
xchg
push
bound
test
jnp
dec
mov
xor
pop
stos
insl
sbbl
push
mov
jp
pop
mov
add
jo
outsb
mov
data16
sbb
pop
repz
mov
fwait
xor
jb
sub
xchg
sbb
cli
fdivr
imul
test
push
rcl
or
and
and
in
pop
aas
cmp
add
pop
xchg
pop
pop
rcrl
xchg
mov
out
pop
push
adc
fcmovnb
mov
stos
add
in
shrl
rcll
sub
stos
sbb
and
mov
pop
xor
xlat
call
psllw
dec
xchg
sub
push
add
inc
jbe
adc
jo
das
shll
push
cmc
push
jne
aaa
sti
imulb
shll
jl,pt
daa
cli
mov
rorb
inc
xchg
jmp
shr
push
pop
pop
aam
je
shr
or
xor
cmp
das
ljmp
nop
mov
xchg
xor
ljmp
sti
sub
out
mov
cs
sbb
cmp
lds
movsb
pushf
cmp
add
add
sub
push
ss
fisttpl
mov
mov
daa
lret
lret
xlat
sub
jl
push
inc
rorl
mov
xor
lds
inc
fbstp
push
push
and
out
mov
pop
and
lret
shlb
loope
and
and
xchg
jecxz
movsb
push
fcompl
in
out
dec
and
stos
fistl
jae
xchg
fistpll
jmp
pop
pop
mov
sahf
xor
mov
fwait
into
out
add
cmp
xorb
pop
xchg
xor
mov
cmc
enter
ficoml
mov
mov
out
movsb
lret
cmpsl
and
call
inc
mov
sub
je
jbe
orps
outsl
add
int
outsb
mov
daa
js
pop
lods
test
mov
push
mov
pop
enter
push
je
xchg
dec
cmpsl
mov
xchg
test
mov
jb
dec
enter
mov
inc
test
pop
lods
push
jl
popf
ficomps
inc
cltd
dec
lock
cmc
ret
jo
test
loop
cmpsl
jae
xchg
scas
out
mov
icebp
ret
pop
mov
aaa
insb
add
daa
xchg
call
and
or
cld
adc
add
jl
sahf
and
js
push
add
push
out
aas
bound
inc
dec
iret
push
push
dec
stos
and
pop
es
fiadds
lea
aam
fldl
lods
dec
push
mov
cmp
cltd
jg
pop
ret
cmp
sub
jmp
lock
jp
mov
addl
mov
cmpsb
cmc
insl
and
dec
addr16
ja
cmp
icebp
or
sbb
mov
movsb
push
test
sbb
bound
lahf
sub
incb
in
push
pop
test
je
aas
je
push
jl
stos
add
push
xchg
and
cmp
mov
fs
sub
lret
push
adc
sub
cmp
dec
pop
push
jmp
mov
mov
test
addr16
inc
inc
leave
insl
and
dec
xchg
and
rcrb
movsb
pop
pop
add
sub
shll
mov
xor
into
jbe
push
outsb
or
inc
xchg
cmp
and
mov
mov
xor
dec
inc
jle
jbe
pop
jbe
repnz
jl
mul
decb
mov
rorb
js
das
inc
neg
test
push
aaa
icebp
or
out
in
aam
in
mov
pop
mov
push
jl
nop
sbb
shl
jne
aad
stc
mov
mov
mov
jp
add
pop
add
push
sti
inc
ret
or
xor
sbb
decl
andb
popa
decb
xchg
fmuls
pop
cltd
bound
stos
popa
lds
or
xor
adc
dec
in
fidivl
adc
cmp
rorl
int3
or
add
adc
adc
insl
jno
movsb
dec
shl
and
sbb
out
add
fsts
sti
sahf
test
hlt
gs
add
jg
in
push
iret
dec
cmp
push
jg
into
ja
bnd
es
cmpsl
ds
mov
in
push
pushf
inc
xchg
imul
fisubl
clc
popa
cmc
mov
push
mov
fwait
fwait
or
inc
dec
leave
js
and
mov
pop
std
jae
xor
pop
xor
pusha
fxsave
push
cld
push
mov
repz
icebp
lcall
pop
xorl
fldl
cmp
mov
mov
mov
cmp
imul
pop
sbbb
insl
sahf
outsl
pop
dec
insl
test
rolb
cmpsl
repnz
adc
loope
sbb
jbe
loopne
fstp
sarl
popa
clc
aad
inc
insl
pushf
dec
jno
adc
outsb
dec
or
inc
loopne
insb
lcall
jge
cmp
push
lret
jae
xchg
or
push
or
loop
es
daa
add
lret
popf
vshufpd
add
inc
lcall
movsb
test
sbb
pushf
in
mov
cwtl
daa
aam
outsb
pop
sti
adc
xor
mov
push
adc
fisttps
jmp
repnz
lock
add
dec
jo
sahf
inc
testb
sub
loop
mov
mov
and
aam
push
and
movsl
adc
push
mov
adcb
ljmp
inc
pop
rolb
repz
push
arpl
test
fnsave
jb
pop
cwtl
std
cmp
lods
loopne
sahf
cld
aad
dec
je
ss
leave
push
jmp
shll
jmp
aam
mov
stc
nop
insb
stc
jno
les
adc
mov
mov
mov
xchg
mov
dec
push
cmp
xor
test
popf
lock
mov
inc
inc
out
arpl
ljmp
ds
add
pop
ljmp
mov
dec
adc
fwait
aad
xchg
mov
addl
jb
or
and
jmp
cmp
inc
loop
out
mov
arpl
ret
or
cltd
adc
jg
arpl
jge
xchg
sbb
aaa
loopne
dec
aam
insl
xlat
push
pushf
sbb
cmp
and
clc
shll
and
push
and
xor
out
movsb
pop
sbb
fmuls
xchg
adc
int3
test
adc
call
push
push
xrelease
lods
js
stos
divb
mov
mov
js
es
dec
xorb
or
iret
scas
jne
pop
push
push
add
mov
or
test
rcl
pop
cmp
push
aas
dec
lea
jns
ret
das
adc
add
push
xchg
pusha
xlat
cmp
add
sbb
cmc
adc
aad
fnstenv
jnp
outsl
sub
movaps
cmovs
stos
jne
mov
cwtl
lods
mov
int
test
mov
js
leave
movsl
cld
cmc
dec
fsubs
int3
xchg
push
hlt
jecxz
push
add
mov
faddl
out
inc
arpl
pop
push
cmpsb
add
out
xchg
rcl
sbb
loop
sbb
sub
and
inc
xchg
fs
push
or
jle
mov
and
lds
ret
pop
out
push
inc
or
xchg
pop
mov
add
scas
test
mov
jns
jle
decb
dec
pop
scas
xor
pusha
ds
arpl
fs
insl
xor
cmpsb
shll
mov
dec
jmp
or
mov
into
cmp
jl
inc
adc
pop
cmpsb
mov
in
int3
cmp
clc
in
or
sbb
push
fs
xchg
sbb
lods
outsb
aas
inc
sub
stc
inc
test
dec
ja
add
mov
inc
vpavgw
xchg
cld
stc
sahf
ss
cmp
mov
les
sarl
pushf
int
mov
push
lret
icebp
or
aas
test
dec
cmpsb
jns
sbb
aaa
and
imul
add
cmp
cld
mov
cmc
mov
push
neg
fs
stos
and
ret
xor
stos
cmc
dec
pop
or
adc
mov
jne
mov
mov
cmp
clc
xchg
mov
and
jnp
test
jge
ljmp
rolb
cmp
cmp
adc
push
sbb
jl
lret
xchg
call
add
mov
gs
hlt
mov
mov
pop
int3
or
jno
dec
fs
pop
push
shrl
or
mov
ret
xchg
js
dec
ret
lods
push
cmp
pop
mov
mov
xor
or
stos
mov
inc
push
push
push
pop
sbb
dec
push
jno
push
aaa
pop
lret
jg
xor
clc
pop
pushf
xchg
mov
adc
sbb
cmpsl
push
add
mov
cmp
lods
je
mov
cs
lods
mov
mov
cmpsb
sub
jns
jp
and
adc
jne
pop
sbb
cld
inc
push
in
test
insb
loope
int
push
mov
pusha
mov
jb
inc
stc
mov
inc
xchg
movsl
lea
popf
and
pop
pushf
sub
dec
dec
pop
pushf
pop
and
aad
in
popa
dec
fmull
inc
loopne
jno
fwait
orl
test
loop
daa
andl
mov
mov
jecxz
dec
into
rcl
je
leave
sub
pop
fnsave
push
pushl
shll
xor
add
fnstcw
mov
scas
das
xchg
sub
mov
enter
in
jb
xor
pop
sbb
and
rcrb
pushf
scas
adc
icebp
fidivl
call
nop
cmc
sub
dec
mov
fwait
sahf
adc
and
rorb
dec
lahf
lock
sti
iret
test
das
jbe
fmuls
jno
xchg
daa
subl
mov
mov
test
mov
movsb
inc
push
insb
or
inc
jmp
lock
push
out
testb
lods
shrb
mov
mov
push
stc
push
and
lods
daa
sarl
aam
pop
push
out
lahf
addr16
dec
leave
aam
popa
mov
cli
mov
xchg
test
add
xchg
cmp
pop
jge
fnstsw
sbb
hlt
push
sahf
movsl
insl
and
sub
mov
jns
fs
lds
es
adc
fbstp
shlb
rcr
and
lds
cltd
pop
jge
sbbl
loope
mov
push
leave
sub
insb
fdivrs
dec
cmp
int
sbb
jns
and
inc
cld
dec
mov
fisttpl
or
lahf
lods
xchg
mov
sbb
mov
or
dec
scas
mov
insl
sub
xor
fwait
arpl
inc
out
pop
pushf
adc
lcall
stos
mov
xchg
mov
mov
repnz
fdivr
inc
dec
push
call
mov
inc
and
frstor
ljmp
xchg
mov
adc
ficomps
dec
lret
add
clc
and
inc
xchg
mov
xor
adc
push
mov
imul
push
in
loope
in
mov
dec
push
mov
mov
lea
je
jecxz
mov
xrstor
and
cmpb
push
push
sub
mov
jno
addl
lock
jne
scas
mov
imul
sbb
cmp
push
mov
cmp
repz
xlat
dec
push
mov
call
inc
test
outsb
int
and
adcw
test
jns
inc
cmpsb
stc
cmpsb
test
jecxz
outsb
push
sub
sahf
adc
pop
push
cwtl
inc
or
xor
mov
sub
jp
aas
push
ret
int
xchg
mov
push
add
dec
pop
sbb
push
pcmpgtw
loope
cmc
mov
aas
inc
xchg
mov
mov
lds
or
aaa
int
pusha
sbb
xor
idiv
jo
cmpsl
add
jbe
in
pop
mov
add
adc
fsts
xchg
sbbb
repz
test
out
cmpsl
xchg
ja
adcl
jge
stc
in
fdivrs
rorb
sub
add
iret
dec
mov
adc
sahf
and
mov
jne
int3
jl
cmp
jb
cmp
arpl
cmc
in
cmp
pop
mov
and
pusha
aad
popf
jnp
shl
pop
mov
jne
jecxz
add
das
ljmp
mov
xchg
jb
in
sbb
mov
inc
jo
stos
ret
add
cmp
jg
mov
aaa
es
pusha
push
add
in
mov
repnz
jb
movsl
and
imul
stos
jbe
negl
push
dec
jns
or
mov
dec
insl
and
xor
mov
sbb
ret
jmp
sub
ret
jp
and
cmp
fisubrl
repnz
push
add
cli
sti
adc
cmp
cmpl
cmpsl
in
leave
call
imull
mov
sbb
jl
addb
and
xor
loope
lods
xchg
fisttps
jle
sbb
cwtl
xchg
shlb
cmpsl
pusha
sub
ds
insl
fwait
aam
sub
fsubl
cmp
dec
outsb
mov
pop
inc
daa
jl
andb
push
mov
pop
pusha
int
lahf
add
rol
in
rcrl
inc
adc
loope
dec
sbb
add
cmp
js
lret
das
out
mov
xchg
lahf
dec
xchg
stos
arpl
add
mov
and
push
add
jge
and
jbe
aam
jbe
fistpll
daa
xchg
push
test
xor
and
dec
movsl
in
jnp
and
rol
xchg
mov
test
add
cltd
jp
mov
lock
les
mov
out
pop
sbb
les
out
jo
pop
pop
and
or
nop
test
popf
xor
inc
mov
xlat
dec
cld
int
inc
push
imul
lea
xchg
cli
fistl
xchg
gs
addl
insl
in
and
int3
xor
out
insb
pop
pop
imull
es
dec
or
repz
enter
cmpsb
pop
xlat
jl
insb
fildll
test
fbld
xchg
dec
pop
cmp
jae
mov
jg
lea
sbb
fisubrs
cmpl
in
push
fbstp
lahf
les
arpl
cmp
sar
jb
jmp
loope
adc
inc
lahf
pop
outsl
arpl
repz
insb
imul
fstpl
ljmp
cmp
fiaddl
jno
lea
stos
mov
insb
jmp
fstps
cs
xrelease
in
out
cmp
adc
int
repnz
fsubrl
sbb
subb
les
or
ljmp
repz
ds
cmpsb
jl
iret
xchg
sub
enter
pop
out
push
sbb
leave
jmp
imul
jle
pop
icebp
mov
test
mov
test
pop
sub
or
mov
mov
adc
in
sub
movl
pop
mov
bound
jg
mov
mov
inc
xor
das
sbb
jecxz
pop
in
ss
fwait
push
hlt
in
pop
push
push
rolb
pop
and
test
sbb
adc
fs
test
mov
ret
movsb
sub
ss
fcmovnb
xor
ds
lods
push
cs
sub
fdivl
pop
cmp
mov
nop
lock
pushf
rcll
adc
inc
lock
aad
add
dec
jo
test
xor
ret
sub
jae
les
inc
das
rcll
in
lahf
roll
add
pop
and
cmc
ja
mov
and
push
cmpsb
inc
xchg
mov
pop
fisttps
popa
fisubs
push
sub
inc
xchg
sbb
cmp
popa
push
adc
inc
push
sub
inc
jne
pop
jp
loopne
xchg
scas
xor
add
je
push
pusha
scas
out
xchg
xchg
adc
add
mov
ljmp
dec
aaa
pop
sahf
or
imul
or
mov
jnp
adc
mov
or
fwait
mov
insb
mov
lret
sbb
les
add
sahf
movsb
jmp
loopne
mov
cmp
adc
dec
jo
push
inc
cmp
cli
es
and
scas
mov
loopne
xor
xchg
cld
push
mov
pop
or
and
and
or
aad
inc
in
sarl
inc
xchg
insl
adc
sbb
bound
xchg
aas
sub
es
sbb
adc
cli
mov
inc
inc
mov
xchg
or
pop
jo
push
in
ss
repz
cmpsb
mov
adc
repnz
loopne
push
hlt
jge
hlt
jne
dec
or
pop
jno
int
jo
test
pop
xchg
filds
dec
jl
out
mov
sbb
cmp
mov
es
adc
mov
ret
in
dec
sub
sub
xor
mov
and
or
arpl
iret
hlt
outsb
pop
shr
inc
inc
pop
repnz
or
sbb
adc
popa
outsb
dec
inc
sbb
in
inc
dec
adc
lea
hlt
dec
cmp
pushf
fisttpl
and
jbe
jb
xchg
flds
int
lds
test
and
mov
in
mov
pop
loop
xchg
out
fldt
xchg
xor
xchg
xchg
inc
mov
cwtl
adc
push
pop
out
xchg
mov
sbb
rcrl
push
les
pop
xlat
mov
xor
fstps
add
stc
jmp
inc
inc
pop
pop
push
ret
push
sub
sahf
add
int3
pop
lret
stos
je
or
cwtl
ds
inc
mov
mov
xchg
or
xchg
fistpl
inc
mov
mov
lret
xor
mov
mov
aad
cmp
into
in
mov
int
ds
add
mov
push
das
lea
mov
or
push
daa
in
insl
push
gs
nop
ret
mov
jmp
jb
lea
sbb
leave
dec
push
aam
mov
inc
shll
add
dec
mov
xchg
push
lock
lods
pusha
dec
pusha
int
dec
outsb
call
cmp
inc
and
sbb
jge
cmp
outsb
xor
mov
insl
sbb
adc
ds
add
xchg
sub
mov
int3
roll
lds
fcom
xchg
mov
xchg
rcrl
adc
lods
mov
add
scas
mov
icebp
es
sub
les
not
hlt
fwait
out
scas
pushf
xchg
and
mov
push
pushf
in
inc
andb
shlb
pop
or
jmp
aad
fistl
cmpl
xchg
add
fcomps
dec
pop
push
repnz
pop
xchg
aad
pusha
mov
add
jmp
mov
call
mov
mov
fisttpll
cmc
fwait
aam
test
pop
lahf
jmp
or
mov
ljmp
imul
or
test
push
push
adc
dec
out
and
add
cmp
add
sub
xchg
pop
push
push
fcompl
and
shll
scas
jle
pop
inc
jl
push
xor
sahf
mov
imul
roll
sbb
fwait
bound
test
fists
fistpl
xor
adc
ret
mov
fs
pop
add
inc
or
add
inc
lret
xlat
pop
cmp
les
int3
leave
mov
jne
xor
mov
cmp
adc
cmp
cmp
xor
popf
or
cmp
mov
add
mov
in
adc
out
mov
shrl
repz
inc
xlat
or
outsb
adc
inc
xchg
movsb
mov
jle
loopw
add
adc
pusha
insl
fyl2x
adc
sbb
fldt
and
dec
mov
inc
lahf
dec
movsb
leave
mov
inc
out
push
pcmpeqw
addr16
das
aam
arpl
cmpsl
repz
fs
dec
push
sahf
xor
ds
or
jnp
mov
stos
jae
imul
and
mov
jp
arpl
xchg
add
mov
inc
lds
push
push
xorb
push
jp
xlat
cs
xchg
call
inc
push
ds
xor
or
inc
mov
xchg
iret
pushf
jp
mov
xchg
mov
jbe
pop
das
or
bound
push
lret
mov
mov
test
in
sub
cmpsb
out
xor
xor
cmp
lds
dec
ror
mov
sbb
cltd
xor
repz
std
xchg
cltd
mov
aad
test
sbb
adc
int3
sbb
in
push
andl
aad
pop
mov
mov
mov
or
sbb
sbb
jmp
addr16
or
adc
push
in
and
jne
mov
pop
ljmp
es
pop
push
lds
add
xchg
xchg
lods
push
sbbb
fs
ja
pop
data16
movsl
inc
pop
out
xchg
in
popf
enter
in
and
xor
arpl
in
test
imul
add
cli
push
lea
jmp
jecxz
or
mov
mov
push
or
out
stc
push
jecxz
jns
fldenv
sbb
mov
lds
test
add
and
ja
aaa
loope
movsb
subl
clc
dec
or
shr
add
fildl
icebp
add
clc
or
ja
ret
sbb
setne
xor
scas
test
clc
jp
leave
xchg
dec
mov
sbb
xchg
loope
test
xchg
popw
sub
sbb
dec
out
cmp
ja
lock
jne
in
cmc
push
mov
jo
xchg
sbbb
mov
pop
stc
mov
push
mov
test
bound
es
mov
xor
add
lods
xor
mov
cmpsl
js
in
rcl
repnz
in
dec
inc
sbb
loopne
or
or
ja
jecxz
push
movsl
test
pop
mov
outsb
mov
mov
fwait
or
mov
mov
sbb
inc
icebp
repnz
sbb
sub
jo
leave
or
jb
and
ret
jg
xchg
js
loopne
andl
daa
ret
cli
push
cld
or
in
nop
push
jecxz
xlat
adc
mov
nop
dec
sub
add
insb
inc
mov
xor
scas
jns
adc
insl
enter
inc
icebp
ja
push
or
addr16
xor
sub
push
rol
daa
inc
clc
or
ja
cmp
push
jno
ljmp
fdivr
test
adc
subb
pop
and
repz
adc
fdivp
iret
cmp
imul
mov
outsl
pop
jno
movsb
ficomps
mov
nopl
and
add
add
in
out
rol
add
pop
popa
or
mov
inc
pushf
mov
dec
scas
mov
jge
lret
aaa
dec
les
in
dec
ds
inc
jg
mov
pop
or
aas
jle
xchg
movsl
pop
pop
and
cmp
push
mov
fistps
test
aam
movsl
stc
dec
sub
int3
mov
cmp
mov
push
loop
pop
lock
jmp
sti
int3
nop
push
aaa
in
scas
inc
das
xchg
mov
and
jbe
loopne
adc
andl
sub
int3
xchg
out
fwait
xchg
mov
jnp
test
mov
lock
arpl
pop
xor
xchg
add
test
dec
sbb
sbb
push
dec
fsubs
push
dec
sub
daa
cmpl
mov
ljmp
cmp
loope
inc
lahf
loope
jp
mov
stc
in
fistps
hlt
mov
lcall
lret
imul
std
pop
xchg
cli
leave
adc
push
cmp
adc
push
push
in
mov
mov
add
pop
movsb
add
sarl
and
ret
mov
cmp
mov
aas
jne
push
mov
cmpsl
add
push
xchg
mov
dec
add
cmp
dec
push
fcoms
int
xchg
pop
xor
adc
leave
sub
xor
int3
lcall
inc
es
push
push
xchg
je
int
pop
fmuls
adc
mov
jecxz
cmp
imul
fildl
out
mov
lahf
xchg
lods
sbb
jecxz
lret
je
aas
pop
lret
out
push
push
pop
jecxz
clc
aas
out
cmp
mov
test
push
fisubrl
push
adc
dec
xor
rcrb
jns
aam
mov
mov
sbb
or
gs
xchg
mov
adc
cmp
fcoml
xchg
dec
push
jge
aam
add
jle
jno
adc
mov
xchg
pushf
or
xchg
fidivs
adc
loope
and
js
test
gs
sbb
outsl
aad
sti
xor
movswl
lods
loop
dec
mov
xchg
mov
or
lret
or
out
mov
xchg
adc
sub
mov
jbe
jp
sub
jmp
aad
pop
in
xorb
xchg
and
xchg
jo
leave
stc
push
and
xchg
movsb
push
add
add
jl
shr
icebp
out
jp
push
mov
xchg
jl
data16
push
data16
test
pop
sub
addr16
arpl
scas
cld
bound
sub
pusha
sbb
add
clc
or
repz
insb
pop
out
xchg
mov
jno
out
bound
xor
leave
pop
adcl
hlt
data16
or
pushf
push
clc
inc
and
mov
mov
xchg
sbb
dec
push
push
mov
cmp
lea
js
rolb
pop
idiv
inc
cmp
leave
shl
dec
in
sub
cmpl
dec
pop
pop
repnz
push
xchg
test
jmp
push
aas
or
cmpsb
cmp
inc
lahf
in
popa
scas
mov
jae
pop
insb
push
js
xchg
rcrb
pop
mov
repz
mov
mov
loopne
sub
or
popf
xchg
in
or
out
xor
int3
inc
xor
ja
out
mov
sbb
aam
xor
xchg
daa
sbb
push
lods
out
popa
es
push
push
loopne
into
xchg
aaa
and
jmp
adc
enter
mov
repnz
mov
xchg
add
jbe
jecxz
addb
ret
int3
or
hlt
dec
push
mov
sahf
cli
or
jecxz
mov
mov
icebp
cmp
pop
push
cwtl
add
clc
fucomip
cmpb
outsb
xchg
sub
and
add
lret
mov
or
mov
inc
insb
mov
aaa
jb
popf
or
stos
jg
cld
and
push
stos
adc
jmp
push
negb
dec
sub
lods
les
ficomps
ds
mov
push
mov
mov
jo
mov
fdivrp
fwait
push
fstl
stos
push
fsubl
adc
clc
pop
sub
dec
outsb
rdpmc
arpl
mov
inc
stos
mov
jo
pusha
sbb
dec
and
mov
cli
roll
pop
bound
sbb
repnz
pop
cmp
sbbl
or
cltd
xchg
mov
push
fwait
outsb
sbb
add
andl
push
cli
xor
push
mov
inc
xlat
xchg
pop
mov
push
test
add
fisttpl
sbb
push
push
or
and
test
jne
sub
pop
lods
jmp
leave
stos
and
jnp
int
sahf
jmp
int3
jne
cmp
jae
fiaddl
sbb
shrl
les
loopne
int3
lea
int
ds
sbb
stos
lret
mov
xor
loopne
mov
scas
lahf
push
in
xor
fdivs
lret
cmp
lret
inc
scas
pop
or
mov
cmpsb
aam
aad
mov
mov
xchg
inc
ljmp
insb
lret
jns
add
dec
cmp
push
mov
pop
js
outsl
jne
adc
sbb
cmp
pop
dec
push
sub
pop
or
mov
mov
push
xor
fbstp
sti
sbb
std
xchg
xchg
out
pop
dec
lods
nop
jno
xchg
nop
jmp
mov
xchg
pop
lret
repnz
and
jbe
leave
aas
sti
fmull
scas
or
mov
and
mov
mov
fcoms
repz
rolb
popa
mov
lcall
fisttpl
icebp
mov
clc
mov
popa
in
xor
pop
mov
cwtl
adc
mov
aaa
sbb
or
sub
int3
cmc
push
jle
inc
push
inc
mov
xchg
in
pop
sbb
out
add
and
rcl
pop
cmp
and
out
loope
fs
xchg
loopne
pop
into
test
add
sti
jae
mov
mov
clc
out
loope
nop
mov
push
xchg
fdivrs
ret
add
lods
mov
decb
out
addr16
cmpsb
jnp
icebp
cmp
aam
enter
jne
mov
inc
cmc
leave
ja
test
push
rclb
fldcw
cmpsl
lods
outsl
je
cmp
loope
decb
lahf
mov
sahf
push
mov
dec
cltd
and
shlb
mov
aas
sub
push
cwtl
inc
mov
pop
ss
adc
xchg
mov
mov
xbegin
in
imul
std
out
xchg
jns
sbb
cmp
add
leave
into
xchg
pop
push
movsl
sbb
xchg
sbb
mov
add
mov
dec
sbb
imull
shll
jbe
push
push
popf
das
in
add
cmp
push
sub
loop
xchg
cld
lcall
insb
fwait
adc
loope
inc
sub
dec
test
mov
insl
cmp
call
cmp
cmpsb
add
mov
mov
dec
jecxz
ret
mov
movsb
cmc
dec
xchg
or
test
imul
jne
enter
repz
jae
mov
mov
add
xchg
jg
add
pushf
dec
jecxz
mov
movsl
fwait
outsb
add
mov
loope
lods
icebp
dec
pop
push
stos
inc
iret
xor
add
sti
jae
rcrl
in
push
or
popa
movsl
cmp
mov
fnstenv
shrl
fildll
int3
jmp
das
cwtl
pop
dec
mov
sub
jae
inc
push
popf
jmp
enter
fs
lods
jle
ret
roll
popa
test
sahf
mov
push
lahf
mov
adc
and
mov
inc
int
push
xchg
xchg
imul
jo
pop
cmpl
jns
aaa
andl
fmull
daa
fistpll
sub
or
shrl
jnp
inc
aas
sbb
mov
out
sub
dec
aad
dec
mov
and
loope
stos
outsb
jo
dec
mov
or
nop
xchg
inc
imul
jmp
lds
fs
repnz
aam
out
call
iret
mov
jp
pop
fstpt
mov
jo
out
int
fisubrl
cmc
xchg
pop
jl
daa
cmovg
enter
ficoms
cltd
mov
in
gs
mov
test
xchg
push
test
pop
xchg
add
push
iret
test
xchg
adc
sub
adcl
xor
cltd
out
fsubrs
int3
xchg
pushf
insb
jo
sub
bswap
mov
or
ss
es
mov
jmp
sbb
imul
xor
lahf
aad
dec
pop
jnp
jbe
mov
push
imul
or
sbb
mov
mov
or
fsts
or
xchg
sbb
sub
dec
pop
inc
pushf
push
mov
cmp
dec
push
push
insb
jle
xor
dec
fs
movl
push
daa
push
sub
fistpll
and
jns
push
sub
sub
add
addr16
in
lods
ds
ds
out
fs
sbb
popf
ficoml
je
int
imul
addl
loope
fisttps
cmp
test
jbe
fbstp
mov
lea
ja
pop
popa
adc
jo
xor
adc
pop
jns
fisubs
fidivs
inc
dec
mov
les
add
xchg
cwtl
test
mov
mov
or
insl
adc
and
not
dec
mov
mov
jb
repz
pop
mov
xor
out
into
cmp
loope
push
push
dec
subb
jno
shl
movsb
addr16
jmp
sub
mov
add
ret
xor
neg
mov
fs
rclb
lahf
cmove
pop
cli
decb
mov
test
pop
es
or
and
imulb
add
insb
cmp
hlt
adc
cwtl
and
mov
inc
sub
es
sti
push
in
push
inc
and
movsl
xor
shlb
mov
pop
pop
out
jmp
jecxz
pushf
in
das
jae
jns
imul
roll
ja
add
inc
push
push
mov
outsb
jmp
es
fistl
shl
insl
pop
test
xchg
dec
cmp
push
aad
xchg
idivb
push
icebp
lret
aad
fisttps
mov
adc
icebp
xor
mov
les
sahf
lods
push
pop
idiv
add
ret
adc
lods
inc
les
dec
ss
and
arpl
dec
and
rorl
mov
inc
mov
cli
jg
ficomps
mov
cmp
push
outsl
dec
jb
and
fstps
mov
or
adc
lock
cmp
xchg
sbb
addr16
rolb
test
push
jp
pushf
ficomps
push
mov
add
cmp
sub
lret
mov
and
cmp
adc
cmp
sbb
jge
add
aad
inc
jmp
cmp
test
cwtl
shrl
xor
data16
add
mov
jg
push
xor
xor
in
stos
xlat
data16
out
sub
outsb
or
cs
aad
negb
pop
imul
dec
mov
push
fsubs
ret
js
pop
lret
adc
sahf
mov
nop
out
dec
loopne
mov
or
jg
pop
out
inc
mov
push
out
mov
pop
std
mov
fimuls
pop
fiadds
push
fdivrs
outsl
divb
cmc
test
add
sub
sub
pusha
test
ret
lcall
sub
push
lods
mov
push
sbb
jno
adc
and
inc
pop
lock
call
imul
pop
xor
outsb
ja
in
loop
imul
push
pop
lcall
ss
lds
ja
push
xor
pop
or
inc
ds
jp
cltd
jecxz
jp
mov
aaa
jns
in
adcb
dec
popa
fistpll
lret
sbb
fistps
insl
jp
aam
adc
int3
fneni(8087
and
hlt
pusha
add
js
add
mov
test
popf
es
push
or
sbb
lret
sbb
xchg
call
pop
mov
jbe
mov
scas
push
and
push
icebp
shll
out
mov
jmp
pop
enter
pop
pushf
test
mov
jmp
push
stos
sub
lock
mov
pop
jne
add
or
mov
mov
dec
xchg
and
push
rol
mov
ret
xchg
fisubrl
cmp
push
mov
stos
ss
out
ljmp
push
imulb
andb
cmp
ja
mov
popf
icebp
dec
jecxz
movsb
lret
cmp
and
push
test
mov
insb
fidivrs
jnp
mov
pop
mov
cld
jg
dec
sbb
cmp
xlat
out
aam
xchg
pushf
jns
mov
xchg
pop
add
mov
inc
jp
cmp
cmpsb
movsl
jle
or
pushf
scas
or
mov
pop
aam
dec
push
inc
sbb
mov
or
xchg
mov
push
mov
mov
inc
iret
and
jnp
sbb
repnz
aad
ja
or
push
jecxz
addb
das
out
lahf
push
cmpsb
das
add
test
lcall
fisttps
and
jns
or
das
or
and
mov
push
mov
hlt
push
mov
dec
hlt
or
sbb
ret
jle
jae
push
test
sbb
mov
xor
imul
sub
movsb
push
jb
or
hlt
pop
fdivrl
test
pop
dec
mov
repz
jecxz
add
out
add
push
je
xchg
mov
inc
repnz
outsb
movsb
iret
mov
mov
jnp
xor
fsqrt
pop
xchg
addr16
cmp
imul
xor
inc
mov
sub
movsb
sub
in
fstl
xor
xchg
or
mov
into
bound
int
repnz
popa
xchg
cmpsl
dec
push
jo
in
mov
cmc
sbb
fwait
call
dec
pop
call
stos
push
rcr
push
add
jno
dec
sbb
cltd
stc
jl
ss
fnsave
push
or
insl
test
fildll
lcall
xor
movl
jno
ljmp
push
ficoml
mov
insl
xor
gs
sub
mov
ret
mov
jnp
xlat
jns
push
movsl
out
imul
rorb
jg
jg
testb
aad
jns
jnp
cmp
jae
cmp
jb
xlat
fsubl
pop
mov
xchg
aad
jp
sahf
divl
adc
xchg
cmp
or
shrb
and
popf
pop
ret
arpl
outsl
lock
adc
xchg
aas
pushf
out
sub
addr16
sub
add
or
cmp
fs
add
pop
repnz
fnsave
mov
int3
test
out
cmp
xchg
pop
and
mov
jno
aad
cmp
lods
in
pusha
adc
xchg
inc
push
scas
dec
sub
cmp
insl
daa
xchg
push
pop
and
mov
cmp
arpl
leave
pushf
xor
and
inc
mov
test
mov
loop
sbb
push
pop
lret
pop
fsubs
ficompl
into
idivb
sti
xlat
clc
xchg
mov
les
adc
testl
cmp
fcompl
shlb
scas
pop
in
addb
aam
movsb
loop
and
insb
adc
cmpsb
cmp
add
push
pop
mov
sbb
dec
xchg
adc
das
jno
shrb
test
xorl
cmpsb
loopne
lcall
test
fwait
xchg
mov
std
imul
jecxz
cltd
sbb
add
shlb
movsl
adc
inc
push
movsl
jg
and
ret
in
mov
push
add
popf
add
inc
aam
dec
orl
int
push
mov
imulb
out
psrld
dec
push
push
push
das
jno
or
xchg
popa
aaa
cli
jge
icebp
inc
mov
mov
sarl
leave
popa
xor
das
mov
add
aaa
xchg
arpl
push
lods
xor
imul
jl
mov
jb
pop
hlt
push
fsts
imul
xor
adc
icebp
int3
out
int3
mov
out
or
outsb
inc
loop
adc
xchg
popa
xchg
adc
push
arpl
push
test
clc
lcall
cmp
lcall
adc
jmp
jnp
lock
push
mov
lea
sub
mov
jae
imul
dec
and
pop
mov
sti
sub
mov
bound
push
inc
jl
mov
mov
ret
sub
loop
inc
lds
adcl
xor
insl
mov
rclb
inc
sub
lret
loop
stos
movsl
aad
push
pop
mov
cmpsl
jns
and
pop
nop
cld
pop
inc
xlat
adc
jnp
xchg
push
fcompl
xor
push
cli
dec
vcvtpd2psy
pop
cmp
mov
mov
in
cmpsb
mov
pop
fisttpll
stos
sub
lods
daa
fnstsw
push
dec
hlt
inc
xor
mov
and
mov
sbb
ja
cmp
push
call
mov
pop
adc
mov
cbtw
xor
addr16
xlat
adc
sti
lret
and
xor
sub
insl
add
pop
mov
sbb
aad
xchg
in
in
push
adcb
xor
lea
dec
popa
jnp
sub
xchg
out
cmc
fdivs
inc
ret
and
fcmovnbe
loop
fnstenv
mov
push
enter
sub
xor
sbb
adc
or
lret
dec
loopne
mov
dec
sbb
in
out
cwtl
or
lods
imull
out
mov
xchg
loope
add
mov
ret
push
loop
test
lea
or
mov
xchg
mov
cmp
dec
push
xor
in
sbb
pop
inc
jo
pop
enter
and
stc
inc
fwait
xchg
inc
std
addl
push
cmpsb
es
dec
jb
xor
daa
decb
gs
dec
jl
push
cmp
jecxz
and
ret
push
cpuid
cmp
mov
sbb
adc
shlb
ret
dec
xor
jmp
xor
sbb
dec
inc
or
imul
stos
mov
das
test
stc
gs
cmc
push
sub
call
xor
cmp
xorl
addr16
pop
inc
ficomps
lock
js
xor
pop
test
rol
or
je
aad
cmp
stos
mov
movsb
mov
adc
xchg
cmc
pop
adc
mov
in
push
and
lea
loope
push
pushf
iret
pop
das
dec
push
mov
pop
or
daa
int3
xchg
push
scas
mov
lds
bound
decl
inc
jecxz
cmp
pop
pop
jge
xchg
mov
enter
push
inc
sub
or
jne
push
cmp
pop
test
mov
cwtl
adc
cs
inc
pop
mov
or
iret
add
pushf
dec
and
xor
loopne
mov
add
inc
sbb
ficoml
cmc
ret
arpl
adc
xor
rorb
aad
outsl
xchg
in
and
mov
imul
lea
test
ret
sti
sub
xor
push
sbb
add
pop
in
enter
xor
pop
push
insb
push
scas
jo
and
outsb
hlt
inc
push
fisubrl
inc
test
les
fdiv
and
mov
mov
mov
pop
or
inc
pop
into
cltd
dec
inc
in
jp
pop
imulb
push
aam
jp
out
jbe
sub
and
daa
sub
mov
jo
dec
arpl
test
push
std
sub
jns
jae
and
aad
mov
mov
xorb
std
cmp
sub
pop
rol
pop
addr16
sar
mov
jl
cmpsl
inc
sbb
inc
je
dec
jno
clc
dec
faddl
ficoms
sbb
pop
imulb
push
xchg
mov
pushf
iret
std
insl
xor
iret
adc
cmp
push
lret
mov
lds
xchg
xlat
inc
cmpsb
xchg
cwtl
pop
fcomp
fdivs
cli
push
std
sub
push
cmpsb
adc
loope
clc
fwait
jno
sbb
cmpl
or
push
lock
shr
es
sbb
outsl
adc
mov
add
sub
lods
movsb
movsl
xchg
les
testl
cmc
cld
mov
out
add
push
mov
jbe
jo
jns
sub
mov
addr16
jae
push
clc
mov
push
out
cmp
lock
daa
outsl
xchg
repz
ret
sbb
mov
push
jb
iret
mov
xchg
ss
hlt
jne
cmp
xor
or
divl
mov
sub
mov
into
out
lret
jnp
adc
aaa
lock
mov
fnstenv
ds
lret
fists
inc
gs
cmc
mov
mov
sub
and
mov
sarl
push
inc
orb
xor
add
or
je
cltd
cs
xchg
into
and
inc
ljmp
sahf
pop
and
ds
and
sbbb
mov
popa
jae
std
pop
push
out
sub
fsubrp
es
ret
mov
call
mov
fldcw
or
out
out
sub
outsb
mov
xor
sbb
push
cs
sub
ja
clc
push
pop
jl
dec
inc
cmp
je
cmpsb
addr16
adc
jle
shlb
sub
aam
aas
call
push
loope
iret
dec
aaa
cld
inc
jge
and
push
out
shrl
or
xchg
dec
inc
mov
and
or
jmp
data16
arpl
push
xchg
gs
fistpll
movb
test
sub
hlt
or
in
out
jbe
push
test
jecxz
or
repnz
shl
push
shll
outsb
dec
fwait
cmp
testb
cmp
inc
shl
movsl
jno
mov
cmpsb
stc
shrl
mov
notl
add
xchg
bound
shrl
mov
movsb
and
dec
dec
std
push
or
mov
imul
je
inc
xchg
sbbb
fsub
pop
aas
sub
lock
icebp
mov
fwait
xor
bound
testb
xchg
mov
gs
mov
jle
sti
adc
out
clc
ret
cmp
jl
mov
out
lds
cmpsl
fbstp
aas
repnz
mov
stc
mov
out
adc
sbb
std
lock
push
adcb
popf
cmp
add
outsw
mov
aam
cmc
adc
sub
xor
ror
in
ret
jge
mov
ficompl
mov
sub
fistpll
cmp
xor
xchg
addr16
inc
dec
inc
fsubl
mov
fildl
rcll
jno
lret
scas
out
cmp
pop
aam
xchg
in
inc
pop
jns
jg
lahf
ljmp
popa
or
out
lea
or
xlat
inc
jmp
jnp
mov
push
insb
pop
mov
pop
cmp
xchg
pop
jbe
push
icebp
rol
stos
leave
fisubl
or
std
inc
outsb
cmp
mov
add
dec
out
or
push
cmpsb
mov
mov
pop
test
xchg
imul
cld
lret
mov
in
ljmp
js
jmp
or
dec
add
xor
out
sub
imul
cwtl
jl
xchg
popa
or
xchg
push
insl
dec
push
arpl
push
push
dec
jmp
popf
add
fbld
fldt
adc
shl
or
les
and
cmp
ja
cmp
mov
mov
mov
push
mov
xorb
lret
add
or
pop
scas
xor
push
jmp
lret
leave
mov
or
subl
pop
push
nop
icebp
mov
push
sbb
sub
outsb
adc
mov
repnz
rcr
jbe
jno
js
sub
mov
shll
push
adc
pop
adc
stos
cmp
aad
cmp
xchg
addr16
mov
es
mov
xor
ret
out
test
les
out
call
xchg
pop
dec
jno
xchg
int
cltd
mov
leave
xchg
fdivrl
add
add
loopne
sub
lock
arpl
cmp
pusha
aam
sub
xor
add
mov
loope
sbb
push
mov
fcom
ja
or
lock
push
stos
add
lcall
rorl
bound
inc
mov
and
jne
adc
das
mov
cmp
cmp
leave
js
outsb
or
jno
pop
add
lret
mov
xor
cmpsb
add
loop
mov
pop
ds
push
cmp
cwtl
hlt
in
or
cmp
outsb
jle
dec
sub
or
loop
xlat
xchg
mov
rolb
jle
dec
push
lock
mov
and
inc
out
add
hlt
imul
inc
adc
xchg
adc
jae
inc
pop
inc
test
and
ret
dec
cmc
or
test
inc
push
mov
lcall
xlat
mov
fsubl
or
push
daa
rcr
hlt
or
dec
dec
scas
inc
unpckhps
cs
jo
mov
jmp
inc
outsb
push
pop
jge
xor
xor
push
xlat
out
in
sbb
lds
jge
mov
js
sbbb
sbb
in
add
inc
push
and
loop
iret
in
jle
insl
ret
mov
dec
push
dec
rcl
push
push
mov
mov
mov
shrb
cs
inc
js
inc
sub
cmpsb
stos
into
outsb
test
lret
imul
data16
pop
loope
sbb
lods
mov
add
inc
or
push
inc
xchg
mov
sbb
flds
and
stos
cwtl
jmp
add
pop
int
dec
call
jae
pop
xchg
mov
gs
cwtl
and
ret
cmpsl
and
insb
mov
jne
mov
mov
xchg
int
out
jo
mov
xor
dec
sbb
enter
repnz
jecxz
sbb
mov
xor
insl
pop
mov
fstl
lret
test
jg
inc
pop
adc
movsb
fcmovnu
jbe
adc
mov
jp
mov
mov
add
sbb
inc
lock
xor
stc
and
sbb
adc
mov
and
pusha
sub
cmp
jb
push
out
stos
or
stos
shlb
out
push
insl
mov
sub
loope
nop
ja
js
mov
fcomps
jg
ss
dec
cs
xlat
mov
lock
insb
jmp
adc
jo
data16
sbb
ja
jl
push
mov
es
ds
push
push
or
mov
xor
lahf
nop
add
xchg
mov
cmp
or
xor
and
ljmp
daa
shll
add
pop
pop
jns
mov
pop
incb
sbb
sub
mov
mov
jmp
xor
xchg
cwtl
mov
fwait
pop
fwait
and
inc
push
inc
in
fsts
rolb
les
out
add
jp
mov
push
pushf
xor
data16
push
fsubl
test
mov
mov
fidivrl
inc
jae
sahf
cmp
adc
push
inc
adc
fwait
pop
and
pop
addr16
icebp
fwait
or
scas
inc
call
inc
adc
push
mov
dec
fnsave
mov
rclb
jnp
jno
mov
push
test
imul
subb
ret
sbb
mov
pop
xchg
dec
inc
fs
pop
xchg
jno
movsl
enter
inc
mov
mov
dec
loop
inc
les
fdivrl
out
shll
sbb
cmp
jno
out
cmp
popa
cli
sti
inc
sub
xchg
xchg
ljmp
scas
in
shl
jne
and
pop
popl
stos
imul
scas
cltd
std
mov
andl
jnp
dec
ljmp
aam
jae
test
cmp
ss
mov
cld
popfw
js
aaa
mov
jnp
jnp
pop
xor
xchg
push
test
int
dec
sbb
popf
xor
movsl
lahf
push
rorb
addl
fidivs
push
xor
cltd
mov
xor
lret
into
add
clc
jl
out
jmp
daa
sbb
jnp
cwtl
pop
and
push
repz
shlb
dec
scas
imul
xlat
sub
movsl
and
outsb
push
inc
scas
xchg
ss
rcrb
mov
test
mov
push
aad
in
push
loopne
clc
mov
cli
das
hlt
jl
mov
cltd
repnz
imul
daa
aam
push
cmp
int
jno
push
pop
fistl
or
sbb
jl
and
adc
nop
add
sub
and
je
movsl
iret
dec
jge
subb
addb
lods
sbbl
mov
and
hlt
xchg
icebp
scas
hlt
pop
adc
push
dec
mov
cmp
push
mov
mov
aaa
sti
lahf
cmp
divl
stos
leave
in
push
push
mov
stos
push
insl
add
add
es
arpl
or
pop
xchg
mov
cmpsb
loope
and
aas
in
sub
adc
xor
in
xchg
fisttpl
push
mov
pop
enter
repz
lea
and
sti
lea
pop
and
fnstenv
ja
inc
addb
lods
insl
ds
mov
pop
les
mov
xchg
push
cs
jo
call
lods
stos
xor
loopne
sub
dec
mov
mov
pusha
popa
jb
cmpsb
mov
stos
stos
sti
adc
imul
and
inc
shrb
sbb
mov
jge
movsb
into
jle
add
cli
mov
xlat
das
push
or
js
push
mov
lods
insb
jle
jge
leave
in
and
or
shrb
pushf
jbe
aam
sbb
sti
mov
mov
inc
lret
mov
addr16
or
pusha
cmp
jg
xchg
leave
popf
cmp
repnz
lahf
jg
ljmp
or
fisubrs
push
and
mov
es
add
das
sub
jl
mov
push
decl
into
in
aas
mov
mov
xchg
xchg
flds
push
aas
pop
out
pop
repnz
test
jge
pop
sub
cmc
das
mov
push
sbb
xchg
xchg
push
fimuls
arpl
sbb
call
xchg
fs
shrl
add
adc
mov
icebp
roll
jl
mov
std
arpl
adc
lcall
xchg
add
mov
push
xchg
xorl
or
fwait
outsb
imul
adcl
mov
mov
out
cld
xchg
popa
out
and
out
gs
inc
lds
mov
fcmovu
ljmp
xchg
es
mov
arpl
repz
sub
out
mov
jo
dec
jns
sub
or
jmp
xchg
sbb
cmp
ss
mov
dec
dec
inc
rcl
jne
lea
xor
push
pop
cwtl
hlt
mov
icebp
mov
push
out
loope
fisubrs
or
xor
push
shlb
xchg
sub
popf
inc
push
sbb
repnz
mov
push
push
or
dec
movsb
cmp
fimull
cmpl
std
inc
cmp
push
stos
out
out
aas
loopne
pop
add
jae
jle
xchg
dec
push
ud1
and
test
adc
ljmp
jbe
pop
loopne
ljmp
xchg
xor
add
cmp
test
mov
mov
or
imul
cmpsb
sbb
jl
xchg
fstpt
dec
push
xchg
cli
or
lds
or
sbb
movsl
mov
mov
adc
push
lock
lahf
in
rolb
iret
jbe
mov
pop
cmp
aas
fstpt
into
xchg
sbb
fmul
jnp
add
popf
lock
adc
mov
jecxz
push
mov
mov
or
outsl
inc
dec
mov
in
mov
std
jmp
into
xlat
xor
adc
icebp
pop
sbb
cs
or
sarb
fbld
mov
xchg
lods
call
neg
mov
mov
xchg
and
inc
add
mov
xchg
mov
push
pop
mov
xchg
adc
mov
mov
clc
mov
test
or
adc
mov
lcall
inc
ret
xor
pusha
jno
icebp
pop
xchg
mov
and
dec
loop
adc
aad
loopne
sub
add
mov
adc
scas
bnd
push
sub
nop
xchg
push
outsb
and
leave
lea
dec
sbb
in
leave
mov
movsb
pop
push
jp
pop
cmp
push
aaa
in
mov
mov
daa
xchg
stc
sub
push
jge
dec
addr16
inc
pop
loope
mov
or
adc
aam
xchg
mov
add
push
or
cmpsb
out
jno
or
sub
xlat
push
or
mov
shlb
cmp
jge
sbb
into
sub
lret
repz
and
in
mov
pop
adc
jno
xor
adc
or
pop
jg
jmp
lods
fwait
push
sbb
shl
mov
lcall
mov
cs
pop
daa
mov
and
jmp
push
sub
or
jmp
cmpxchg
leave
data16
adc
adc
push
dec
lret
shll
xchg
popf
and
int3
test
int3
mov
pop
addl
cmpsl
leave
jns
adc
loop
sub
sbb
mov
scas
int
push
in
jbe
mov
jbe
mov
int
data16
push
cmp
mov
adc
mov
rcrl
pop
dec
or
jl
dec
xchg
mov
or
mov
inc
faddp
cltd
popf
xchg
test
les
cmpsb
fwait
pop
jmp
mov
pop
fmuls
adc
test
int3
mov
sbb
adc
pop
mov
ret
jge
cmp
and
addr16
and
pop
aaa
add
jno
sbb
xor
loopne
jo
cmpb
xchg
push
fstpt
dec
add
cwtl
adcl
mov
push
movl
and
mov
arpl
daa
sahf
inc
fiaddl
add
out
sbb
dec
stos
and
insl
push
push
movsl
sub
add
push
stc
cs
out
mov
sub
pop
dec
xchg
repz
xchg
sbb
xor
icebp
adc
jp
jne
add
dec
bound
in
pop
and
adc
std
popa
aad
xor
jecxz
xlat
cmpsb
out
push
add
adc
call
mov
mov
cmp
or
in
decb
inc
or
outsl
data16
aad
mov
push
cltd
stos
xor
fnstenv
icebp
dec
push
inc
mov
push
shll
vpcmpeqb
jp
repnz
xchg
inc
dec
fs
mov
sub
jb
add
xchg
cmp
pop
daa
mov
lds
rol
xchg
lret
inc
repz
imul
pusha
push
or
imul
jmp
mov
push
iret
jmp
inc
test
xchg
iret
cmp
dec
daa
pop
mov
movsl
add
data16
int
push
jecxz
jne
mov
ljmp
and
aam
pop
xchg
popa
movsl
lret
mov
xchg
les
lock
xor
or
cmc
arpl
ret
arpl
imul
adc
hlt
lds
jmp
jno
stos
leave
jg
outsb
out
push
jmp
je
call
dec
jnp
outsb
pop
sub
ja
dec
out
enter
repz
pop
fdiv
mov
pop
dec
scas
out
push
xchg
ja
mov
div
leave
add
out
sbb
lret
push
es
xor
inc
cmp
and
fnstenv
incb
jg
loopne
mov
xlat
pusha
xor
push
pop
mov
xor
mov
add
adc
cmpsb
adc
mov
dec
aam
push
cmp
jp
mov
adcb
push
adc
cmp
adc
mov
bound
mov
loop
jle
inc
idivl
scas
inc
cmp
adc
mov
jmp
stos
jle
incl
dec
xchg
je
xchg
mov
loope
jnp
cmp
mov
pop
and
adc
gs
popa
push
std
ror
test
movsl
outsb
leave
and
xchg
jle
aam
pop
mov
add
lock
push
fwait
and
push
loop
popf
or
ss
cwtl
rorl
mov
aad
enter
jmp
mov
dec
push
loope
jb
loop
roll
mov
jnp
ja
xchg
jne
pop
sub
adc
mov
dec
sbb
sbb
sbbl
fwait
adc
xor
adc
push
in
orb
cltd
repnz
or
pop
ljmp
mov
popa
addr16
loopne
wbinvd
xor
add
clc
xchg
push
push
mov
mov
test
dec
imul
dec
adc
jnp
cmc
push
add
cmp
cmp
inc
data16
mov
call
cltd
fs
fwait
push
lea
adc
pop
sbb
push
mov
das
pop
inc
jno
jge
andb
clc
outsl
test
jbe
add
mov
or
push
mov
mov
dec
sub
add
lods
dec
or
enter
ret
pop
loope
in
dec
test
and
lods
in
push
pop
pop
loopne
fwait
lods
test
dec
sbb
cmp
sub
add
scas
mov
inc
sarl
dec
jb
cmpb
sbb
xlat
sbb
pop
arpl
cltd
xchg
test
inc
test
and
ja
out
pop
adc
ljmp
out
add
pushl
cmp
bound
sub
jne
mov
cmpsb
sbb
shl
inc
add
lods
mov
add
mov
in
or
mov
adc
jae
mov
mov
out
repnz
imul
mov
popa
dec
arpl
aad
movl
cld
test
inc
movsb
fcmovu
addr16
jmp
aas
dec
sbb
arpl
stos
jo
popa
lretw
rcll
add
pop
xchg
ret
lods
pusha
xchg
lcall
sti
bound
popf
imul
mov
outsb
sahf
data16
inc
inc
test
cld
inc
aaa
negl
lahf
push
fisubl
ss
sub
shrl
cltd
test
sbb
aaa
jecxz
fnstcw
mov
aad
jge
xor
or
jno
aad
and
push
inc
push
les
lahf
les
imulb
inc
dec
push
jg
xchg
fists
subl
scas
mov
imul
inc
pop
daa
addr16
pop
lods
pushf
pop
or
cmp
xchg
aad
jge
jecxz
cwtl
cld
jle
sti
mov
scas
mov
jge
nop
push
pop
arpl
adc
daa
mov
je
add
cmpb
shl
add
xchg
jb
popf
push
adc
stc
std
jg
icebp
or
fwait
or
outsb
mov
shlb
mov
repz
shll
stos
lcall
jmp
insl
cmp
popf
cltd
sahf
mov
ljmp
or
daa
pop
movsl
jg
mov
ja
stos
push
push
xor
es
fldcw
les
pop
mov
ret
mov
mov
sti
daa
insl
movsl
xchg
xor
mov
loopne
pop
push
cld
mov
and
rorb
fwait
rorb
test
lret
pop
arpl
gs
cmpl
leave
push
pop
or
pop
in
adc
pop
pop
cmp
lods
out
ret
in
aas
les
xchg
das
pop
mov
mov
xchg
mov
test
xchg
jp
icebp
adc
enter
mov
pop
icebp
cld
pop
sbb
mov
adc
clc
jp
pop
inc
or
stc
insl
lret
sub
fstpl
xlat
dec
mov
jp
subl
hlt
sub
jne
xchg
pop
cltd
dec
fsts
aad
lock
xchg
mov
cs
into
lods
dec
jae
lcall
jb
inc
adcl
aaa
adc
xchg
cltd
stos
ja
pop
fs
mov
cmp
aam
jns
inc
in
and
cmc
pop
push
nop
push
inc
push
mov
das
stc
cmpsl
lock
cli
outsl
push
loopne
and
ljmp
sbb
test
es
mov
aaa
xchg
push
push
andb
test
cmc
movsl
add
mov
lcall
add
mov
push
jl
in
decl
adc
push
fists
mov
pop
outsl
imul
mov
adc
add
rolb
push
jne
aad
aad
hlt
mov
xchg
dec
pop
movsb
out
jo
lret
dec
cwtl
imul
out
jbe
and
notl
les
aas
clc
hlt
cmp
cli
fbld
jmp
ss
jbe
sub
lret
js
sub
push
inc
inc
xchg
jb
les
test
imul
cmovp
pusha
and
scas
jmp
adcb
or
adcb
mov
enter
clc
jbe
rorl
cmp
and
dec
push
repz
fsubp
out
repnz
lahf
or
or
add
pushf
or
stos
fdivrs
push
dec
cmp
pop
out
in
jae
mov
jae
or
imul
popa
pop
bound
pop
fwait
lods
sbb
mov
ret
repnz
js
ljmp
gs
push
xchg
andb
cmpsb
sbbb
test
ljmp
testl
popf
popa
mov
arpl
xor
out
push
jo
mulb
into
cs
pop
sbbb
fcoms
out
clc
mov
pop
cmpsb
xchg
lds
mov
lds
mov
xchg
cs
jne
stc
dec
fnstenv
inc
fisttpll
mov
je
mov
mov
jo
mov
xchg
lods
and
icebp
and
mov
jnp
push
in
insl
bound
fidivrs
rclb
cmpsb
out
shl
sub
stos
scas
cmp
mov
in
cs
push
and
inc
sub
mov
xor
cmpb
sbb
out
push
filds
mov
inc
mov
stos
pop
cmp
and
stos
loop
nop
and
add
in
lds
or
std
inc
cmp
push
std
loopne
mov
shrl
arpl
pop
inc
cwtl
jmp
xor
mov
lret
xlat
and
mov
stos
in
ja
movsl
andb
js
cmp
scas
inc
xor
mov
pop
sbb
push
jle
movswl
aad
ficomps
daa
mov
mov
sarb
push
jge
movsl
testl
xlat
adc
add
mov
cmpsl
stos
push
pop
push
pop
test
add
ficoml
and
ja
scas
jge
in
in
sbb
dec
sub
or
cli
cmp
dec
mov
insb
or
jl
adc
loop
jle
mov
out
fisubrl
mov
cmp
sbb
or
push
pushf
sub
cltd
or
repnz
ret
jmp
or
fadd
out
outsb
xor
clc
out
out
cld
jne
fistpll
pop
push
push
in
into
je
aad
push
maxps
rorb
pop
es
jns
frstor
adc
xchg
xchg
cs
repnz
xchg
push
or
pop
shll
xchg
ljmp
popf
inc
in
ficomps
mov
push
push
push
jmp
call
gs
nop
mov
and
or
ljmp
cmp
mov
insl
lahf
dec
xchg
dec
imul
mov
inc
negl
ds
or
mov
lret
call
push
int3
jb
mov
sbb
dec
ljmp
pop
outsb
in
aam
add
or
cmp
lods
push
fsubs
loopne
mov
pop
insb
or
sbb
stc
cwtl
push
fwait
mov
lods
xchg
mov
mov
adc
aam
and
into
fs
ds
jo
add
movsb
jg
imul
into
stos
jmp
sahf
mov
pandn
inc
cwtl
add
mov
xchg
adc
shl
xor
cmc
adc
fs
sub
add
fwait
imul
ror
adc
incb
lock
jge
push
xor
push
dec
leave
mov
jl
dec
je
scas
dec
lods
and
lods
clc
lock
mov
mov
icebp
cmp
in
or
mov
jo
fstpt
mov
cmpl
test
xor
shll
push
je
sarb
or
mov
jbe
and
lock
lahf
test
adc
insl
stc
jo
adc
insb
cmp
and
xchg
adc
std
rclb
andl
loop
rcll
icebp
aam
loopne
addb
ret
push
mov
cmpsb
or
adc
sysenter
jns
je
lahf
and
adc
xchg
nop
xlat
xor
jp
mov
lds
pop
mov
pop
adc
push
in
or
and
repnz
cs
popa
jnp
mov
jmp
xor
enter
and
lcall
bound
sub
mov
cli
enter
pop
jp
shl
lret
pusha
mov
lret
dec
aas
rcrl
addr16
push
aad
lock
inc
stos
and
cmpsb
loop
aam
test
rorl
xchg
jnp
sub
lret
inc
popa
mov
in
mov
in
inc
addr16
mov
mov
idivb
inc
dec
push
dec
lea
sahf
gs
mov
or
cmp
stc
dec
mov
mov
lahf
mov
sbb
rcr
push
mov
and
sbb
popf
cld
stos
add
jbe
rcrl
loope
cwtl
inc
dec
scas
mov
push
sbb
push
lods
adc
pop
clc
rcrb
lea
cli
in
test
and
pop
cmpl
dec
ret
xchg
or
cmp
jb
imul
jecxz
sub
jnp
dec
jno
inc
adc
mov
add
mov
lea
sub
xchg
aad
pop
mov
xchg
sti
jb
test
outsl
push
or
pop
scas
out
lcall
in
or
loope
cmpsl
dec
fistpl
cltd
mov
xor
add
mov
mov
ds
in
loop
pop
ret
fsubr
popa
adcb
call
scas
xchg
push
data16
and
mov
pop
inc
cmp
cltd
xchg
or
inc
mov
mov
pop
xchg
pavgw
out
rclb
arpl
in
mov
adc
cmp
ss
push
adc
mov
cmp
add
mov
cmp
and
mov
aaa
sbb
inc
popa
aad
repz
jnp
lods
mov
popf
mov
imul
imul
in
mov
push
fstpt
jno
mov
jmp
lret
fs
lahf
sahf
xchg
xchg
dec
sarb
sub
imul
sub
into
or
mov
dec
loope
or
pusha
xor
imul
cmc
outsl
test
fdivrs
js
xor
push
int3
mov
or
aad
bound
loope
shll
or
popf
imul
cmp
dec
repnz
test
push
add
xchg
sbb
pushf
or
push
repnz
fstpl
mov
arpl
outsb
rcrb
fst
inc
imul
jns
or
hlt
std
in
shll
dec
cmp
addr16
xchg
outsl
mov
in
lods
test
and
sbb
popa
popa
pop
push
test
add
lahf
push
loopne
addr16
push
outsb
pop
mov
sub
into
pop
push
push
testb
xchg
jmp
push
xor
or
imul
inc
mov
or
and
cmp
jb
mov
subl
xor
dec
pop
sub
dec
ljmp
cld
jne
dec
loop
dec
popa
aaa
xchg
or
shll
adc
or
xchg
lds
mov
jle
in
cld
and
sub
imul
mov
mov
stos
add
inc
xor
mov
xchg
inc
xchg
cmp
mov
sub
lock
pop
sub
lods
cmp
enter
dec
fwait
ss
push
pop
adc
xor
sub
outsl
push
sbb
bound
int
or
dec
and
xor
xor
repz
in
imulb
cli
testb
pop
pop
or
push
shlb
mov
jecxz
call
dec
mov
dec
jnp
jl
sbb
mov
ror
js
adc
int3
jmp
mov
sarl
lcall
add
and
fimull
inc
jne
fisubrs
fwait
aas
ret
imul
out
inc
cli
icebp
xchg
addl
jbe
out
fisubrl
cmp
xchg
gs
push
mov
dec
xchg
xchg
pop
in
sbb
loope
jnp
pop
shlb
push
leave
jne
stos
popa
lea
pop
xor
push
imul
mov
jnp
ror
cmp
and
lods
sub
cli
xchg
xor
mov
mov
test
sub
or
scas
sub
add
ffree
pop
loopne
jge
fwait
jge
mov
adc
outsl
cli
inc
and
xor
adc
sete
std
lahf
aad
mov
mov
fwait
xchg
push
fiaddl
jg
jp
insb
add
xchg
bound
jg
or
xchg
dec
pop
mov
cmp
lret
mov
and
inc
xchg
push
mov
or
or
xchg
xor
jge
push
mov
lods
pop
add
cltd
data16
lods
push
mov
test
add
cltd
shr
cmp
pop
mov
rol
sbb
mov
or
dec
ret
in
add
mov
inc
cli
clc
xor
dec
jns
xlat
mov
test
aam
jmp
out
dec
push
xchg
mov
cmpsb
mov
in
andl
out
popa
mov
ds
int
sbb
adc
ja
adc
cmp
xchg
jl
jns
sub
xchg
js
aaa
sbb
fdivrs
pop
popf
pop
cld
rolb
arpl
or
incb
int3
xor
fisubrs
in
pop
mov
mov
pop
mov
xchg
xchg
jl
js
aam
mov
xchg
imul
pop
and
and
or
inc
decb
pop
sahf
bound
mov
sbb
mov
ds
in
sar
idivl
and
in
xchg
cmpb
mov
mov
sbb
or
sbb
jno
inc
and
and
insl
dec
mov
outsb
popf
mov
cs
or
shll
pop
ljmp
push
inc
jb
in
or
mov
mov
pop
out
adc
xchg
cmp
stos
mov
mov
lods
sub
data16
mov
test
inc
jg
sbb
jo
and
push
add
shll
das
dec
pop
pop
ret
xchg
scas
push
pop
pop
das
mov
adc
inc
mov
adc
adc
fldt
dec
in
xchg
push
jno
test
test
add
jmp
pop
xor
aas
xor
lret
jne
int
mov
repnz
insb
jmp
jmp
arpl
inc
cmp
outsb
adc
add
ffree
or
sub
mov
jae
push
loop
test
stos
or
sbb
sub
sbb
in
jg
xor
jo
xchg
cmp
or
adc
and
pop
in
pop
stc
std
sbb
mov
xchg
dec
jg
dec
mov
fisubrs
push
lock
cmp
jo
jno
js
scas
call
xor
dec
loop
xchg
pushl
and
hlt
pusha
inc
aaa
aam
insb
aaa
xchg
mov
ret
mov
stc
lret
mov
inc
push
jb
ret
pop
mov
dec
int
pushf
je
lret
cli
insl
xchg
xor
push
fwait
inc
rolb
mov
push
pop
cmpsb
mov
fcom
adc
push
lock
popf
jo
push
cltd
popa
in
cmp
std
imul
out
push
sub
sti
dec
cli
out
cld
pop
jg
cmp
adc
lcall
outsb
ljmp
inc
mov
xchg
and
sti
pop
ljmp
scas
adc
or
aas
sub
jb
jg
and
mov
popa
xlat
pop
roll
shl
push
dec
mov
arpl
dec
lcall
pusha
and
imul
gs
sbb
scas
cltd
test
out
dec
je
push
add
aad
pusha
add
pop
push
fsubr
pop
sub
mov
mov
sub
das
pop
adc
mov
les
dec
fs
pop
xlat
xchg
push
xchg
sbb
imul
and
jle
jge
loop
push
aaa
jmp
pop
fwait
xchg
inc
sar
orl
fsubs
dec
jno
insb
add
pushf
and
xchg
jge
dec
pop
dec
movl
mov
daa
sbb
popf
or
sbb
fcomi
jo
out
sbb
loop
aas
cmp
xor
jo
into
andl
jae
mov
fs
adc
les
movsl
and
push
and
popa
fnstenv
pop
jg
bound
or
pop
mov
mov
orl
sbb
mov
loopne
icebp
loopne
loope
adc
pop
cltd
js
sbb
jge
cmp
xchg
push
pop
jecxz
iret
into
aad
mov
ljmp
ret
or
aaa
stc
pushf
adc
and
ljmp
push
hlt
daa
lods
clc
fwait
or
pop
jne
and
sbb
lret
cmpsb
jmp
lods
and
jbe
test
loope
ljmp
test
push
stos
push
pop
jns
outsl
fistpl
xchg
andb
sbb
out
arpl
sub
dec
xlat
dec
ret
inc
scas
ret
pop
and
imul
int3
jmp
and
xlat
out
repz
jae
mov
lret
loopne
scas
add
mov
bound
push
out
dec
rcl
inc
aam
xchg
js
flds
mov
add
adc
das
mov
and
in
fiadds
xchg
mov
adc
sti
es
xor
stos
testb
push
add
call
mov
sbb
mov
aaa
pop
mov
xor
adc
cmp
jne
dec
icebp
sub
pop
inc
insb
or
lods
mov
mov
sub
icebp
or
xchg
cmp
xor
dec
ja
mov
out
xor
cltd
adc
adc
sub
rcl
mov
adc
sub
sti
add
rclb
sbb
and
xor
xor
inc
cmp
scas
lea
mov
pop
sbb
jae
pop
mov
or
imul
cmp
mov
fcmovb
movsl
adc
xor
mov
mov
sub
sbb
clc
and
nop
cli
out
push
dec
add
int3
cmp
push
sub
pop
lea
shl
dec
ljmp
filds
push
mov
icebp
mov
imul
pop
ret
jne
dec
add
out
xchg
mov
mov
movsl
cli
cmp
popf
hlt
push
cli
push
xchg
cwtl
je
repnz
pop
dec
dec
mov
icebp
dec
xchg
mov
push
into
rcrb
ja
cmp
out
gs
pop
inc
jo
popa
mov
popa
mov
push
addr16
push
jno
sub
inc
xchg
or
jne
inc
mov
in
insb
daa
je
dec
outsl
negl
and
das
pushf
add
out
pop
fwait
or
cmp
xor
adc
es
mov
popf
pop
mov
lds
adc
pop
sub
into
cltd
mov
sub
test
and
add
add
int
rclb
lods
clc
push
sahf
cmp
xchg
inc
mov
and
cmp
arpl
data16
xchg
adc
aas
rcl
out
dec
lahf
incb
scas
add
cmp
mov
ljmp
mov
jge
sub
mov
loopne
lret
nop
jns
lds
dec
xchg
jbe
push
sub
push
or
rolb
daa
das
inc
je
test
xchg
imul
mov
lahf
mov
jne
dec
or
push
out
push
pusha
icebp
push
mov
xchg
popa
in
sarl
cmp
and
mov
cli
cwtl
subl
push
pop
mov
xchg
int3
insl
jl
cmp
mov
hlt
aaa
pop
xor
fistps
cmpsb
cmpsl
xchg
mov
push
cltd
pop
or
clc
in
negb
aam
cld
mov
mov
lock
dec
pop
cmpsl
mov
dec
dec
and
popf
mov
pop
imul
ret
rorl
in
dec
mov
jecxz
cmp
repz
adc
sbb
xchg
mov
stos
inc
movsb
xchg
popa
das
or
dec
jmp
scas
add
adc
jno
dec
xchg
jecxz
mov
int
out
popf
jecxz
gs
popa
inc
imul
jge
dec
sub
cmc
movsl
imul
fldl
gs
mov
inc
fsubrs
inc
lcall
je
insl
inc
mov
sbb
fstpl
adc
js
and
dec
push
dec
movsl
lret
enter
xchg
jge
std
mov
stc
js
test
cmp
std
pop
rcrl
repz
xchg
sub
fidivrs
ds
scas
jp
mov
or
jp
pop
fimuls
jbe
or
repnz
adc
mov
repnz
cmc
ljmp
mov
adc
xor
jns
loope
xor
movsl
jmp
cmp
xor
bound
xchg
imull
std
xor
cmp
xor
adc
sub
pop
add
inc
jge
or
dec
sub
add
cmp
daa
aam
lcall
xchg
push
nop
mov
stos
stos
pop
loope
mov
inc
arpl
mov
pop
mov
and
loop
cmp
cmp
sub
iret
scas
icebp
mov
jnp,pn
popf
mov
inc
push
popa
sarl
xchg
adc
xchg
sbb
loop
push
mov
gs
adc
inc
mov
fdivrs
inc
out
push
outsb
and
mov
test
icebp
adc
mov
jnp
mov
mov
xchg
push
inc
mov
jmp
sar
jmp
sbb
daa
std
int3
lret
fcomps
xchg
repz
mov
push
push
xchg
imul
cmpb
subb
js
int3
sbb
cli
pop
rcr
sbb
mov
push
jns
push
lds
and
push
repnz
scas
lea
mov
push
dec
adc
cmpsb
add
scas
arpl
jb
jle
cmp
adc
xor
jp
sti
stc
filds
add
test
xlat
iret
and
lods
add
aad
adc
adcl
push
js
shll
popa
cmc
data16
sub
push
loopne
mov
cs
sbb
mov
xor
and
push
pop
push
push
divl
stos
aaa
jnp
test
pop
ja
jmp
bound
ret
addb
cmpsl
pop
add
fdivl
xorb
adc
hlt
aaa
mov
mov
dec
aam
or
pop
sub
loopne
aaa
cmp
inc
cmp
shl
ret
cmpsl
inc
out
or
sbb
fsubl
sbb
sub
stos
xor
sub
sbb
jno
scas
and
mov
out
cmc
sub
test
fisttpll
cmpsb
insb
out
dec
loope
stc
ret
xchg
pushf
mov
push
ss
push
adc
add
push
push
mull
pop
push
test
pop
popf
lea
cmp
fcomps
inc
xor
call
xchg
mov
xchg
push
and
xchg
inc
faddl
xlat
xor
cltd
xor
add
hlt
jp
jbe
imul
adc
cwtl
sub
mov
es
movsb
xlat
outsl
test
push
mov
negb
xor
pop
pop
mov
fldenv
loop
addr16
iret
xchg
pushf
jmp
xchg
addr16
fistpl
xor
scas
jbe
push
js
xlat
scas
je
int
into
cmp
pop
cli
rcl
dec
ja
pop
into
xchg
repnz
xor
and
ss
outsl
mov
inc
mov
lds
push
cmp
pushf
mov
cltd
pop
shr
add
xchg
pop
fmull
pop
mov
jge
xor
dec
inc
xor
pop
fcoml
lret
and
testb
xchg
int3
rorl
lods
sbb
lahf
xchg
sbb
sbb
cmp
into
adc
sar
clc
jno
aad
xor
xchg
lds
lds
mov
or
addr16
lods
or
stc
std
and
push
mov
pop
loop
jae
mov
shrl
lahf
sub
ja
inc
push
repnz
ret
inc
stos
std
mov
mov
jp
add
popa
cmp
int
jg
int3
mov
xchg
jns
adc
push
ljmp
sub
mov
push
jnp
pushf
mulb
pop
or
cmc
jno
sbb
rol
sbb
out
adc
pop
outsl
imul
fisubs
mov
inc
inc
mov
push
xchg
fmuls
jno
jae
mov
lods
sbb
lods
je
sbb
call
mov
dec
ret
ljmp
popl
lcall
in
sbb
mov
loope
jle
lcall
ss
pop
insb
xor
aad
and
pop
xchg
jg
mov
mov
jno
ret
lret
or
cli
sahf
jl
xchg
int3
gs
ret
aad
repz
xor
or
cmp
sbb
cld
fs
dec
add
test
add
dec
lret
sub
dec
stos
inc
enter
mov
insb
scas
in
cmpsb
sbb
xor
in
rolb
addr16
xlat
add
arpl
push
inc
dec
fcomi
aaa
lret
das
add
push
sbb
rorb
in
xor
jbe
mov
int3
hlt
loopne
iret
mov
adc
movsb
sarl
xor
xorb
or
nop
add
lret
push
jecxz
loope
mov
and
add
jmp
adc
popa
add
dec
call
lret
add
dec
mov
je
aaa
je
xlat
sbbb
jecxz
mov
adcb
shlb
or
shufps
jge
fdivr
add
sahf
dec
xor
fmull
sub
stos
cs
pop
sbb
jne
jns
ret
test
out
loopne
push
jbe
out
sbbb
mov
inc
pop
incl
xchg
or
or
shll
jb
cld
sbb
cmp
fdivs
mov
inc
cmp
xchg
push
cmp
mov
andl
dec
jmp
xor
or
into
test
aas
mov
xor
and
jne
stc
mov
ljmp
or
xor
cmp
push
mov
dec
adc
push
sbb
fcomi
inc
clc
hlt
fs
xchg
sbb
cmp
fmuls
cwtl
xor
cmpsl
jnp
xor
pop
andl
pop
dec
fiadds
adc
mov
push
and
dec
jbe
jne
je
insl
lods
int
cmp
xor
pop
mov
xchg
inc
sahf
mov
imul
negb
stos
mov
mov
push
out
bound
fisttpl
xor
and
insl
enter
icebp
mov
or
stc
insb
mov
nop
notb
popa
std
jo
ljmp
stos
mov
icebp
add
dec
fs
arpl
daa
loopne
or
call
test
mov
bound
and
loope
imul
pop
test
sti
stc
lods
pop
push
ret
mov
cmc
mov
sbb
scas
pop
adc
call
pop
outsl
fdivl
gs
mov
pop
inc
fwait
jmp
and
mov
test
clc
or
outsb
inc
call
xor
out
xchg
call
pop
icebp
jg
inc
ret
int
inc
lret
dec
cmp
int3
jae
call
addb
loope
and
fs
mov
imul
sub
sub
std
movsb
imul
inc
xchg
cld
bound
test
or
push
pop
xor
out
jbe
lret
sub
lea
jo
out
push
lods
repnz
ret
mov
add
lcall
ror
push
je
negl
andb
push
jmp
adc
fstl
mov
or
cmc
test
loope
mov
xchg
adc
mov
std
je
test
in
or
fadd
adc
jno
add
cmp
cmc
sar
jle
stos
popl
mov
pop
dec
jo
dec
jge
and
jno
mov
mov
pop
sbb
adcb
pop
inc
cmp
mov
and
sbbl
xchg
xchg
adc
repz
adc
sub
sub
ss
sub
pop
das
les
iret
sbb
or
push
push
dec
pop
jno
popa
js
js
stos
stc
addr16
stc
in
mov
mov
adc
xchg
push
ret
push
xor
sub
xchg
inc
call
shlb
testb
cmp
rol
data16
mov
sbb
mov
hlt
fiaddl
sarb
mov
xor
mov
lock
ja
repz
sbb
cld
mov
fmuls
test
pop
jno
jns
cmp
push
mov
and
imul
movsl
imul
insl
lods
subb
loopne
jecxz
cmp
adc
fs
ss
test
inc
mov
jo
sub
mov
push
cmpsb
push
fwait
cmc
test
in
js
insb
mov
test
rolb
movsl
cmp
xor
sub
pop
scas
test
add
test
call
mov
lea
cld
xchg
popa
daa
cwtl
movsb
sub
xchg
lea
pop
std
mov
mov
mov
enter
add
aaa
outsb
push
sbb
test
mov
imul
ret
dec
jp
cmpb
addr16
push
jnp
dec
clc
mov
add
inc
iret
push
cld
out
and
pusha
xor
sbb
cltd
mov
cmp
sub
cwtl
pop
or
mov
and
ret
pop
lods
repnz
and
cmpl
inc
sbb
dec
pop
jne
es
into
aaa
std
xchg
stos
mov
xchg
push
mov
and
pop
stos
jb
pop
push
scas
push
xchg
rol
lcall
stc
sbb
and
jne
mov
adc
sbb
push
imul
adc
mov
sahf
add
lock
and
xor
sub
cmc
and
data16
xchg
cwtl
bnd
and
iret
subl
sub
xor
mov
xchg
mov
sub
push
inc
mov
imul
mov
sub
pop
out
sti
adc
das
subl
repz
lods
xchg
or
and
test
les
fstpl
sbb
clc
push
into
jg
jmp
imul
cli
into
aas
adc
fwait
dec
scas
push
sbb
ret
dec
mov
inc
mov
gs
clc
mov
jnp
adc
inc
inc
push
dec
push
rep
inc
mov
leave
pushf
movsb
icebp
xor
orb
out
sub
mov
out
jg
pop
icebp
rorb
adc
xchg
cmc
pop
push
add
mov
imulb
loopne
jns
int3
inc
and
sarl
add
push
and
mov
dec
lods
fildll
cmp
aas
aas
aaa
mov
lahf
mov
imul
loopne
and
xor
out
out
xchg
movl
and
xchg
imul
shlb
fimull
dec
pop
pop
mov
loopne
dec
xchg
negl
or
sub
hlt
adc
adc
pavgb
push
mov
iret
mov
jecxz
mov
stc
sti
xor
jge
mov
dec
out
adc
in
pop
push
jb
arpl
mov
clc
and
push
mov
rcrl
jae
ret
call
enter
xor
pop
cli
add
call
sbb
mov
mov
ret
mov
xor
inc
jo
ss
push
dec
sub
pop
and
cwtl
fidivs
lea
cmp
adc
leave
icebp
lcall
fisubl
dec
jg
xor
jmp
je
shlb
inc
inc
les
ficoml
pusha
xor
mov
test
andl
gs
or
mov
xchg
aas
pusha
rolb
sbb
jecxz
mov
mov
fcomps
insb
in
adc
movsl
leave
inc
jge
xchg
pop
and
lods
arpl
cmp
out
inc
or
dec
xorl
das
xlat
dec
fdivp
mov
inc
mov
movsb
push
push
jl
outsl
roll
adc
push
ljmp
push
xchg
mov
adc
push
mov
and
jns
je
out
xchg
and
cmp
push
inc
lock
js
lret
xchg
rolb
mov
arpl
mov
insb
ljmp
arpl
icebp
mov
sub
int
pop
adc
leave
push
dec
sub
jmp
dec
clc
ret
jne
mov
test
in
fs
out
ds
jle
fldlg2
cmc
insb
push
sub
xchg
orb
xchg
push
xor
subl
lret
mov
mov
dec
sbb
call
das
mov
movsb
loop
pop
repnz
pushf
push
test
adc
jb
jl
lcall
push
cmpsb
xchg
aam
insb
mov
adc
mov
lods
outsb
fucompp
pop
jp
cmp
out
mov
mov
inc
adc
mov
outsb
pop
loopne
cmpsb
jae
cmp
mov
jmp
adc
loope
lea
in
xchg
push
in
push
pop
call
pop
stc
stos
fucomp
mull
xchg
popa
imul
ret
mov
lcall
or
insb
xchg
mov
test
sar
or
addr16
mov
fs
movsb
xchg
pop
dec
or
mov
xchg
scas
inc
dec
xchg
ja
pop
lods
inc
mov
jg
imul
rcl
adc
adc
notb
mov
sbb
lret
sbb
mov
sti
in
lods
or
jae
jne
inc
lods
pusha
add
jmp
popa
rcrl
aaa
nop
adc
and
test
add
or
mov
fdivrs
fdivrl
rcrl
add
jecxz
pop
ljmp
push
mov
neg
jle
cli
pop
pop
xor
adc
int
push
test
inc
pop
lahf
cmc
sub
dec
shr
lock
push
int
jb
adc
aaa
or
fwait
bound
int3
add
test
jnp
or
and
iret
mov
lods
cmpsb
andb
fisttpll
in
aam
xor
jmp
in
popl
mov
jae
mov
clc
pop
aaa
lock
mov
inc
lds
sub
push
inc
sbb
mov
lahf
fmul
in
xchg
loop
dec
inc
int
push
sbb
push
push
inc
lea
pop
fbstp
stc
pop
inc
cmp
ret
iret
jmp
mov
out
xchg
sub
stc
daa
aas
dec
les
xor
jmp
popf
inc
test
fnstenv
or
icebp
lea
or
insb
rcrb
mov
lret
jnp
jnp
arpl
mov
or
and
ret
push
mov
mov
add
mov
pop
xor
inc
jecxz
and
sti
push
in
rcrl
push
loopne
mov
mov
mov
add
lahf
cmpsb
push
testl
adc
xchg
pop
pop
xlat
pop
mov
das
mov
stos
movsl
sbb
fadds
loop
fmul
les
xrelease
sbb
mov
add
std
sti
push
mov
xor
push
outsl
mov
add
mov
ljmp
fcomip
cmp
fldl
int
and
jno
cmp
and
mov
bound
subl
push
push
call
or
test
inc
icebp
sub
push
jnp
scas
dec
sbb
cmp
addr16
inc
scas
out
adc
hlt
lds
mov
daa
mov
pop
cltd
inc
decb
cmpsb
ficomps
stos
scas
push
xchg
or
mov
addr16
push
sbbl
es
pop
shr
cpuid
arpl
or
aas
dec
in
sbb
mov
test
and
mov
ss
xchg
lret
movsl
pop
fimuls
fisubl
and
pop
mov
jbe
lret
pop
cmp
sub
insb
mov
and
push
imul
stos
dec
push
sub
push
leave
cwtl
push
cmp
fildll
call
inc
movsb
cld
sub
inc
inc
fcoml
fldl
loop
mov
cmp
pop
and
mov
aam
popf
pop
lret
pop
cli
sbb
lcall
lods
add
lock
pop
out
imul
jbe
mov
repnz
imul
mov
insl
dec
test
mov
icebp
stos
pop
negl
mov
pusha
pop
pusha
fcmovnbe
das
neg
cmpb
xor
jmp
into
call
pop
movsb
outsb
movsb
loopne
sarl
sub
shrl
jno
fld
or
fbld
adc
sub
mov
pop
fsubl
outsl
dec
rcr
out
cmc
push
xor
lcall
adc
fadds
push
dec
or
ss
test
shl
lahf
movsl
or
adc
repz
or
push
pusha
cmc
sub
dec
sub
dec
outsl
jg
lret
adc
xchg
sahf
mov
pop
sahf
cmp
hlt
insb
inc
jb
jle
lock
mov
inc
xlat
xchg
xchg
adc
xchg
jmp
loopne
mov
clc
xchg
and
mov
pop
testl
push
cld
adc
clc
pop
ds
fcompl
pop
pop
pop
push
adc
jb
or
out
dec
out
pop
push
sbb
popf
adc
pop
sbb
sub
or
mov
pop
out
into
add
lcall
mov
pop
rol
sbb
push
into
xor
loop
sub
gs
jl
test
mov
mov
cli
xchg
iret
jge
dec
push
cli
shlb
mov
mov
test
and
add
dec
aaa
js
dec
call
push
jg
into
pop
push
mov
or
loopne
mov
lods
leave
mov
sar
enter
and
dec
jnp
sti
stc
lea
push
addr16
sbb
mov
sub
sub
mov
fiaddl
xchg
push
jp
pop
aam
aas
xorb
add
adc
mov
and
inc
pop
fstl
test
cltd
fimuls
dec
sti
stos
dec
lods
out
or
fnstenv
dec
in
arpl
inc
test
pop
cmp
or
sub
pop
ljmp
pushf
fidivl
popf
es
push
push
cmc
and
add
sbb
aas
sub
and
test
in
inc
inc
sbb
int3
xchg
jno
lret
fistpl
dec
sbb
and
xchg
rolb
mov
outsb
adc
es
test
cmp
fidivrl
lea
repnz
dec
xchg
and
int3
bound
cmp
jno
scas
mov
dec
lds
sub
aad
mov
mov
vmovsd
je
fdiv
jae
pop
push
imul
jge
fcmovnbe
inc
add
pop
xor
mov
enter
adc
divl
adc
adc
pusha
int
jecxz
test
mov
jb
rorl
imul
lret
mov
xchg
je
pushf
and
outsb
jp
rcll
xchg
jb
inc
dec
xlat
dec
call
sub
clc
jnp
lret
lods
push
jmp
dec
cmpsl
mov
je
cmp
std
jg
cli
outsb
rorb
in
lods
scas
sub
cs
inc
ret
cmp
aas
icebp
in
pop
pop
lahf
in
in
leave
nop
xchg
imul
sub
dec
or
pop
mov
mov
imul
lahf
jb
sub
cmp
sahf
icebp
or
fmulp
mov
jmp
inc
adc
cli
testb
jnp
test
sbb
add
add
lock
js
mov
nop
pop
inc
les
or
shrb
add
pop
scas
jmp
arpl
mov
lret
inc
pushf
adc
inc
rcrl
push
push
in
push
xor
mov
shl
movsb
lock
iret
push
dec
fcomps
sub
sbb
insl
out
test
mov
sub
lods
and
cli
push
inc
mull
popa
xchg
sub
insb
mov
pusha
test
mov
inc
adc
lahf
xchg
imul
mov
scas
aam
or
cmpsl
imul
jp
push
mov
xor
pop
sub
pop
mulb
mov
cmp
pop
and
pusha
mov
cmpsb
add
iret
outsb
orb
ja
icebp
jecxz
xor
ja
xor
aam
jnp
test
data16
es
push
movsl
inc
jl
and
mov
jg
aad
sti
sbb
push
and
shrb
dec
out
xchg
daa
sbb
pop
pushl
push
lretw
repz
ljmp
mov
fdivl
fsubrs
mov
scas
test
les
add
or
inc
and
mov
aas
and
mov
loopne
ja
xor
xchg
mov
addl
or
paddusb
sarb
ja
dec
xor
out
stos
scas
xchg
out
lods
inc
push
push
fstps
mov
mov
mov
add
or
xchg
lods
mov
in
push
pop
jecxz
inc
dec
push
aaa
adc
cmpl
mov
cmp
daa
dec
imull
test
dec
pop
or
xchg
mov
fldenv
sti
add
fs
dec
lret
cs
pop
lods
push
push
adc
mov
sub
bswap
mov
lds
adc
jno
dec
push
xor
out
mov
sub
aam
aaa
mov
lods
pop
sub
xchg
mov
xchg
into
cmp
push
push
leave
mov
add
gs
mov
dec
add
inc
jle
fucom
jne
pop
sahf
addr16
in
mul
lahf
jle
mov
testl
ret
fldl
inc
repz
pop
lods
xor
addr16
pop
ljmp
test
cwtl
add
mov
fwait
pop
mov
stc
cwtl
push
scas
andl
add
bound
sub
sub
out
cs
cmpsl
fldcw
call
jae
and
pop
pop
dec
xor
jbe
clc
orl
cmp
pop
cmpb
xor
mov
sbb
cmp
fdivr
xor
sar
scas
hlt
mov
out
pop
jg
sub
dec
inc
and
rcr
add
leave
lods
in
hlt
sub
rcrl
clc
imul
lret
cwtl
sti
add
clc
rcll
imul
push
subb
nop
mov
mov
sbb
dec
pop
pop
jb
and
adc
and
rcll
aam
xchg
gs
adc
jb
lcall
inc
pushf
mov
cmc
pop
stos
mov
mov
mov
loop
xchg
pop
xchg
daa
and
call
cmc
lock
inc
cld
add
gs
int3
or
jl
iret
push
add
cmc
mov
pushf
or
fcoml
jmp
mov
popa
ljmp
sub
or
xchg
or
rorb
aas
aas
aas
aas
mov
dec
xadd
aas
imul
jb
stos
das
mov
fisubl
lods
cmp
jns
mov
push
mov
dec
xor
or
mov
adc
jg
jne
das
mov
xor
repz
mov
mov
lret
or
xor
adc
call
adc
test
mov
les
push
clc
cmpsl
aaa
std
movsb
inc
dec
outsl
push
fs
xchg
stos
mov
dec
ficomps
jg
ds
jecxz
hlt
insl
std
sbb
xchg
mov
mov
int3
mov
xchg
cmp
sahf
loope
push
pop
rcrb
mov
js
cltd
dec
mov
cmpsl
leave
outsb
mov
fcmovnbe
je
cwtl
loopne
fs
stc
adc
adc
lahf
cs
mov
fmuls
nop
addr16
mov
mov
xor
add
cli
cmp
xchg
fs
mov
sahf
pop
daa
icebp
xchg
xlat
iret
js
fdivl
loopne
adc
cmp
adc
pop
sub
rcll
jb
lea
cmp
js
dec
sbb
imul
scas
cmp
nop
arpl
pusha
xor
in
aam
std
je
xor
icebp
add
mov
xchg
dec
movsb
pop
pop
add
push
jmp
push
or
daa
pop
mov
add
out
add
mov
hlt
mov
pop
mov
shrl
adc
xchg
dec
ret
add
push
fcoms
cmp
and
xchg
addr16
loop
pusha
sbb
ret
sarb
jecxz
fsubrs
test
dec
sub
dec
pop
jbe
or
dec
push
roll
repz
fisubl
inc
and
xor
jp
sub
arpl
xor
fcmovnu
sub
clc
lds
xchg
cmp
in
mov
and
adc
cs
xchg
cmp
dec
out
sar
mov
in
push
xchg
rorb
in
lea
dec
add
pop
xlat
cld
push
sbb
mov
sbb
xlat
mov
cmpsb
incb
xchg
shrb
cmp
mov
mov
xchg
repnz
and
push
jnp
inc
or
test
ror
mov
push
outsb
jno
pop
jge
push
lret
push
adc
pop
test
sub
repnz
stc
sbb
imul
pop
inc
insb
sbb
cmp
aam
cli
lahf
subl
sbb
jb
inc
cmpsl
stc
mov
loopne
jo
int
adc
cmp
stos
xchg
inc
cltd
popaw
lahf
jmp
daa
sbb
mov
in
adc
lret
pop
dec
fwait
mov
sbb
pop
scas
cmp
lds
scas
dec
mov
daa
fwait
out
pop
inc
xchg
xchg
push
ret
iret
cwtl
loope
sub
std
ja
int
and
jns
fcompl
pop
nop
or
lock
outsb
flds
and
sub
mov
stc
xor
loopne
jl
add
sub
cmp
push
aas
pop
ja
xor
movsb
outsl
dec
add
addb
js
jle
lds
jmp
pop
jp
pusha
je
pop
cmp
inc
push
scas
lds
push
inc
dec
mov
mov
popa
cmpsl
gs
lahf
in
fidivs
into
sub
loope
data16
hlt
movsb
xchg
sbb
hlt
rclb
inc
xchg
repnz
add
mov
xchg
das
pop
or
cmp
lods
lods
adc
cs
push
push
fmul
adc
dec
rcrl
ret
mov
and
dec
jg
or
ljmp
cmp
sahf
sbb
adc
enter
ret
jae
clc
or
adc
mov
cmp
out
pop
ljmp
mov
inc
mov
leave
mov
and
orl
dec
in
push
rorb
int3
or
fsubs
sbbb
push
pop
pop
insl
sbb
lock
sbb
xchg
ret
mov
aaa
adc
in
pop
addb
and
ja
shl
jmp
ljmp
out
mov
insb
xlat
cmovo
mov
scas
jns
lea
push
popf
adc
or
push
dec
arpl
shlb
fcmovnbe
xchg
in
sahf
mov
inc
add
sub
jo
pop
inc
cld
push
mov
cmp
movsl
mov
xlat
mov
mov
jae
gs
mov
or
jge
pop
jl
sahf
mov
js
leave
cmp
pop
mov
outsl
mov
mov
or
leave
mov
or
stos
mov
insl
scas
aaa
sti
aas
shlb
test
mov
mov
mov
pop
in
mov
jne
xchg
insb
lea
mov
sub
aaa
fwait
adc
les
add
cltd
dec
cmpsb
std
jae
lahf
cmp
lret
out
shll
iret
fnsave
inc
out
addr16
or
push
jae
dec
out
push
ret
ss
shrl
ret
das
ja
lret
ss
pop
in
add
ret
mov
xchg
scas
lock
inc
rcll
aaa
sbb
sahf
push
lret
mov
mov
nop
mov
xor
inc
sbb
adc
xchg
xor
shll
out
aam
mul
lock
pop
outsl
sbb
push
es
sub
pop
xlat
outsb
pop
in
inc
mov
add
out
ja
cmpsl
cld
ror
or
add
cmp
scas
push
ret
pusha
leave
fnsave
in
mov
popa
mov
xor
adc
ss
cmp
or
jns
fsts
daa
push
fistpll
pop
hlt
adc
or
stc
jb
jg
fiaddl
pop
loopne
addr16
add
push
in
mov
mov
xor
sti
popa
and
pop
xchg
sbb
mov
mov
les
mov
inc
loop
xor
fimull
loopne
pop
mov
test
mov
pop
mov
movsl
push
mov
cmpb
adc
adc
dec
pop
dec
cmp
mov
aas
inc
testb
subl
in
add
aad
movsl
shl
add
stos
call
lods
sbb
jo,pn
pusha
les
loop
pushw
jno
mov
imulb
dec
cltd
decl
in
ret
mov
pop
add
insb
mov
or
mov
jp
jo
rclb
mov
inc
cmc
lret
adc
add
orl
in
mov
cmp
mov
popa
loope
sahf
dec
jb
or
add
test
fimull
mov
fwait
mov
and
jnp
add
das
xchg
lods
js
lods
fwait
dec
sub
pop
andl
pop
test
and
push
int3
xchg
push
imul
ljmp
test
add
sbb
stos
movsl
xchg
cmp
fdivr
mov
cmpsb
rclb
or
mov
in
daa
xchg
lcall
sbb
mov
adc
movsl
hlt
mov
into
and
outsb
out
pushf
inc
hlt
jne
imul
inc
push
dec
stos
outsb
lret
jp
pop
loope
inc
pop
cmpl
add
xchg
xor
jp
push
cltd
hlt
push
nop
mov
test
inc
enter
mov
outsl
push
stos
pusha
mov
test
jl
insl
pop
lret
cmp
in
mov
lea
loopne
out
adcb
test
shlb
or
test
dec
sub
mov
call
movsb
sbb
lock
imul
and
das
fwait
je
mov
xchg
lcall
call
mov
scas
popf
push
rcrl
mov
inc
pusha
mov
mov
aaa
inc
iret
int
stos
xor
test
inc
mov
pop
out
in
divl
cmp
fs
sbb
sbb
mov
cmc
int
sbb
sub
ret
icebp
or
add
popa
sbb
rsqrtps
jno
aam
mov
push
lcall
scas
movsl
cmp
or
lret
pop
inc
clc
mov
jecxz
push
fwait
stos
push
data16
xor
mov
mov
pop
jbe
loope
inc
movsl
lds
xchg
or
xchg
into
lods
fdivr
in
mov
dec
mov
insl
dec
shl
fstp
sbb
xchg
pop
and
dec
pushl
dec
mov
jno
mov
inc
sbb
dec
push
xor
jnp
incb
aaa
mov
jae
inc
ds
jg
cmpsb
adc
adc
movsl
xor
mov
push
sbb
push
out
adc
mov
add
outsl
xor
adc
xchg
outsb
xlat
aad
movsb
jge
and
mov
jno
mov
mov
test
xor
lock
inc
mov
adcl
dec
jne
sub
add
shl
mov
addr16
xchg
add
pop
fisttpll
xchg
inc
push
jl
fstpt
dec
xchg
in
ja
lret
sbb
mov
out
cwtl
rcrl
mov
jp
and
pop
pop
mov
in
loopne
add
sahf
stos
push
sbb
hlt
add
pusha
mov
cli
jecxz
pop
fcoms
jle
roll
rclb
pusha
icebp
or
push
mov
jnp
aas
jle
sub
lret
push
test
pop
lret
pop
fsubr
push
cld
iret
insl
mov
pop
icebp
cld
push
or
jno
loop
xchg
jge
nop
jne
ds
mov
adc
cmp
xchg
stos
sub
inc
mov
jp
xor
cmpsl
test
bound
dec
mov
xchg
sbb
mov
dec
xchg
inc
mov
outsl
push
pop
and
cltd
adc
dec
or
fwait
inc
mov
out
cmp
cmpsl
lcall
stos
jae
lahf
sub
fucomp
repz
div
scas
mov
adc
icebp
in
xchg
inc
mov
pusha
xor
shrl
jmp
ja
outsb
adc
lahf
jo
fs
push
repnz
sbb
mov
in
jbe
pop
lret
sbb
fists
inc
sub
negb
jns
mov
sarl
test
mov
jnp
xorb
cmp
shrb
jns
sar
jno
int3
scas
cmp
frstor
shlb
aam
jae
popa
xor
push
shrl
xchg
fildl
mov
jo
mov
cvtpi2ps
cltd
aas
in
loopne
mov
lcall
push
loopne
flds
dec
lcall
sbb
out
cmp
hlt
jb
dec
fnstenv
inc
and
jnp
dec
dec
jl
lods
or
cmc
dec
fistpll
and
or
popa
and
imul
jle
sti
outsl
jb
ljmp
cmp
cmc
clc
mov
popa
or
popa
dec
outsl
test
push
mov
arpl
sbb
mov
mov
add
mov
pop
repz
out
mov
push
inc
lods
in
mov
loop
push
cmpsl
dec
lcall
jp
addr16
push
xor
mov
jmp
les
xor
ja
pushf
sahf
in
out
out
push
pushf
mov
xlat
jg
xcrypt-ctr
cmpsl
fisttpl
dec
ljmp
iret
mov
xor
in
hlt
sahf
sbb
jns
inc
fdivrs
in
cli
jbe
mov
pop
ret
fdivrl
decl
push
int
test
or
bnd
mov
aad
xchg
rorb
imul
into
imul
dec
xchg
roll
popa
clc
jl
scas
adc
cmp
bound
inc
lods
adc
insb
cli
cli
pop
out
xor
test
out
pop
fs
fidivrl
lock
xchg
and
call
dec
outsl
push
cmp
popf
repnz
sub
mov
jae,pt
fldenv
cmp
lahf
ds
es
dec
mov
xor
ror
icebp
dec
mov
das
cmp
sbb
dec
mov
mov
jns
xchg
inc
mov
movsl
clc
push
movsb
outsl
test
bound
rorb
incl
cmpsl
sbb
in
les
mov
cld
jmp
xor
or
bound
popa
cltd
imul
jns
add
and
sti
mov
in
dec
cltd
adc
mov
scas
cmp
mov
mull
outsl
js
sub
mov
arpl
nop
mov
and
inc
xor
pop
in
in
lahf
cmp
es
stos
test
cs
mov
ss
push
push
cli
jb
lea
dec
adc
xchg
mov
xchg
sub
arpl
jmp
cmp
push
mov
pop
aas
mov
cmc
cmp
xchg
stos
popf
out
cli
mov
ljmp
dec
mov
in
ficoml
sbb
loop
jns
movsl
fnstcw
shlb
ds
fcoms
jb
mov
in
jmp
out
lret
cmp
fildll
daa
inc
lret
pop
jns
mov
adc
inc
xor
inc
or
cmp
adc
std
and
stos
and
out
jo
in
aas
and
push
cmp
add
dec
xorl
jmp
or
fwait
incb
sub
jno
cmp
inc
dec
nop
stc
iret
hlt
int3
stos
enter
int
loop
ret
fdivrs
pop
mov
fstpl
sub
pop
or
mov
stos
push
mov
dec
aam
pop
outsb
or
test
lahf
add
xchg
mov
outsl
rorb
mov
jp
push
test
inc
scas
push
leave
xchg
popf
jb
int3
shlb
dec
int3
mov
pushf
jge
cmc
mov
cwtl
xor
repnz
dec
inc
mov
mov
call
outsb
add
mov
inc
xchg
xchg
pop
int3
shr
nop
jle
sub
mov
xlat
dec
ss
sarb
rcll
jno
repnz
adc
leave
add
mov
rclb
inc
mov
int3
or
push
movsl
inc
andb
adc
addr16
push
cmp
jmp
cmpsl
out
jecxz
jmp
adc
mov
test
mov
ret
aam
les
call
xchg
pop
sbb
int
outsb
stc
fidivrl
sub
test
scas
lock
sbb
test
outsb
push
mov
ret
hlt
inc
lds
adc
inc
in
out
loope
xchg
movsl
jne
shl
outsb
and
push
sub
xchg
ljmp
outsl
popf
push
out
lds
stos
loopne
xchg
lods
jmp
mov
jl
mov
sub
xor
inc
pusha
adc
mov
pushf
loope
sbb
jecxz
sub
add
lea
mov
cmp
mov
inc
mov
std
push
mov
mov
aas
push
pop
sbb
lret
stos
adc
lahf
push
sbb
dec
stos
lret
mov
sub
rep
in
push
mov
rclb
je
aaa
scas
pop
sti
inc
adc
or
sub
fisubl
mov
pop
notb
cmp
sub
dec
cmp
mov
stc
cmp
pop
loopne
rcl
xchg
out
ret
sbb
mov
imul
shl
sbb
out
sarl
fisubrs
mov
imul
or
div
dec
sti
xor
cmpsl
and
push
mov
or
mov
xor
mov
mov
and
arpl
je
data16
mov
adc
arpl
jp
adc
pop
inc
fbld
test
daa
test
sarb
call
in
xor
jg
ret
shlb
push
dec
add
sub
dec
mov
xor
call
cld
push
loope
cmp
mov
inc
bound
jns
insb
mov
add
add
mov
lcall
mov
mov
pop
aad
xchg
push
xchg
pop
mov
lds
mov
mov
xchg
es
repnz
sbb
xor
xchg
insb
jbe
inc
push
inc
aam
add
test
int3
out
jecxz
fidivrs
scas
jl
in
dec
outsl
mov
push
aad
ss
jnp
and
test
and
bound
push
push
pop
xchg
in
ss
ja
stc
in
sub
push
out
loop
xchg
push
cmp
sbb
ret
js
shll
xor
clc
mov
int
cmc
mov
dec
js
outsl
jg
xchg
xor
fs
or
xchg
dec
in
loopne
mov
inc
add
xchg
cld
mov
icebp
movsb
xor
mov
adc
subl
mul
cmpsl
add
popf
rcr
ljmp
hlt
aas
add
les
hlt
sbbw
push
mov
fsub
or
out
mulb
sbb
cwtl
aas
mov
cltd
jnp
mov
fldt
mov
pop
addr16
je
mov
fmull
jmp
ret
fcompl
xor
adc
out
or
sti
add
roll
xchg
xchg
lahf
pop
pop
sub
xor
jbe
lcall
out
mov
xlat
mov
lea
dec
inc
pop
loope
mov
adc
into
loope
popl
fs
mov
inc
jge
inc
ds
ss
push
mov
movsl
sahf
mov
lods
cmovs
jo
push
jge
fldl
mov
in
cmc
stos
and
push
sub
jbe
fsubrl
add
sbb
inc
ljmp
ss
sub
mov
xor
mov
in
jbe
cs
ret
inc
sbb
push
push
sub
push
ds
rcll
ds
in
outsb
popa
dec
mov
sbb
jle
push
fldenv
xchg
push
ds
push
adc
add
push
outsl
adc
dec
sbb
or
sbb
popa
icebp
xchg
ljmp
mov
xor
push
mull
jmp
rcll
inc
xchg
xor
add
xchg
pop
cli
nop
adc
test
and
pop
mov
mov
dec
mov
mov
pop
pop
mov
xlat
xchg
mov
add
adc
imulb
repz
fstl
adc
aaa
in
int3
or
sbb
xchg
adcb
cltd
icebp
faddl
xor
cwtl
fsubrs
fnstsw
push
mov
and
jl
xlat
push
mov
adc
jb
sbb
cmpsb
stos
clc
lahf
lds
push
push
or
outsb
rorb
mov
jo
push
pop
mov
repnz
cmp
std
jno
cmpsb
adc
arpl
out
push
jo
ja
and
test
flds
lods
call
inc
test
dec
sub
push
lock
xchg
scas
outsl
int
int
rcll
mov
cmp
lods
and
inc
mov
pushf
call
dec
and
jg
addr16
int
add
insl
dec
xchg
dec
inc
cmc
sbb
jmp
mov
cmpsl
dec
pusha
and
dec
xchg
mov
outsl
test
nop
inc
jae
mov
mov
pop
cld
test
cli
adc
push
push
std
xchg
fwait
add
fcomps
das
data16
xchg
jno
lock
ljmp
leave
lods
loope
fnstcw
aas
dec
inc
or
sbb
mov
fs
aad
out
sub
mov
push
ljmp
addr16
outsb
jecxz
lods
jmp
pop
cld
in
push
outsl
ds
mov
add
insl
fcmovnb
xchg
push
or
jmp
movsl
js
shlb
sub
sub
adc
movsl
aam
mov
fwait
mov
xchg
int
mov
sub
aad
dec
insl
push
and
xchg
push
inc
jp
push
or
loope
inc
push
lret
popa
scas
mov
mov
dec
mov
std
ret
sbb
jae
push
shrb
or
inc
movsb
sbb
pop
mov
fidivl
bound
xchg
fs
aad
push
cmp
xchg
cld
push
push
cli
fdivs
movsb
shll
cli
enter
add
scas
push
lods
mov
pop
jno
mov
sahf
mov
fldenv
mov
and
xchg
adc
stos
stos
cmp
or
es
xlat
daa
outsb
lea
addr16
xchg
mulb
fbld
mov
mov
je
ljmp
arpl
add
push
incb
imul
push
fcomip
fdivrs
mov
sbb
icebp
add
lea
xchg
loope
push
jns
out
or
sbb
pusha
xchg
dec
cmp
xor
jmp
repz
xlat
dec
out
mov
sub
call
fs
mov
dec
xor
imul
adc
hlt
fwait
add
jns
pusha
dec
ja
push
or
cmp
cmp
xchg
frstor
es
mov
sbb
sbb
ret
lods
sub
repnz
in
adc
push
pop
pop
dec
inc
enter
movsb
inc
sarl
int
jae
ljmp
int
dec
cmp
sub
loop
loopne
movsb
pop
pushf
jmp
outsl
adc
in
jp
aam
fidivs
dec
xchg
mov
or
cs
mov
xchg
mov
mov
add
adc
sbb
int3
dec
dec
mov
stos
add
or
push
aam
and
je
xlat
xchg
scas
inc
push
push
mov
mov
jns
call
sbb
es
repnz
aaa
sub
push
inc
fistps
xchg
xor
lahf
sbb
add
cld
lret
jbe
test
rcrl
or
lods
or
mov
notl
dec
mov
dec
sbb
push
incb
popf
mov
gs
repz
int
xchg
add
jo
insb
mov
lret
sti
adc
pusha
sub
mov
addl
fnstsw
stc
and
mov
leave
sub
or
jecxz
imul
xchg
or
sahf
mov
ret
and
and
lock
jae
loope
fpatan
mov
aad
mov
punpcklbw
stos
xchg
shl
xor
adc
push
sbb
push
fldt
mov
jl
push
fnsave
pop
test
mov
cltd
nop
pop
pop
outsb
loope
xchg
insb
inc
mov
sub
or
cld
inc
jo
loop
orl
cmp
imul
mov
sbbl
subl
pop
xchg
test
rclb
xchg
xor
jge
add
pushf
dec
sbb
jnp
arpl
push
sahf
xor
jo
lret
test
xchg
xchg
mov
test
ret
stos
dec
lahf
mov
mov
mov
dec
add
xchg
jecxz
stos
mov
ret
jp
push
add
mov
in
dec
dec
inc
js
ficoml
pop
pop
repz
mov
mov
push
dec
das
mov
lds
mov
insb
loop
fcmove
or
push
ljmp
and
mov
lods
cmp
lcall
call
pop
mov
loopne
loope
ficoms
jmp
dec
fisttps
scas
mov
jmp
insl
sbb
push
nop
pop
xor
jmp
in
push
mov
movsl
jbe
test
jecxz
xchg
mov
lods
test
cmp
adc
adc
int3
rorl
rcrb
lods
jbe
adc
fisubrs
in
cld
in
lea
loop
jle
lods
lods
inc
pushf
push
adc
xor
cmp
stos
push
aaa
test
daa
cmp
push
xchg
push
cltd
mov
popf
fmulp
call
mov
fbld
cltd
jnp
je
fnstcw
push
adc
arpl
jmp
jg
dec
out
fs
mov
test
fwait
jecxz
test
xlat
dec
cli
fdivp
jle
repz
idivl
aam
subps
sbb
cmpsb
and
pop
cs
inc
ja
imul
sub
das
pop
and
lahf
jnp
dec
cli
add
mov
mov
inc
push
mov
lcall
addr16
cmp
fs
data16
push
inc
push
pop
ret
pop
mov
clc
fs
mov
pusha
adcl
xor
in
je
cs
aaa
xchg
out
lahf
mov
mov
scas
or
sub
cmp
mov
mov
nop
pop
mov
jl
outsb
imul
ror
pop
xchg
adc
pop
xor
push
cmp
push
push
sub
push
jecxz
mov
ret
sti
into
dec
inc
mov
or
jno
mov
dec
mov
sbb
bound
outsb
push
fcmovnb
push
xchg
mov
mov
rcr
or
ficoms
pop
xchg
sbb
xchg
out
sub
xlat
mov
xor
adc
arpl
or
addr16
xchg
movsb
xchg
cs
addr16
inc
ret
lock
pop
clc
pop
popf
push
jae
add
pop
adcl
inc
sbb
or
dec
subl
nop
adc
sahf
pop
sbb
sbb
jne
jl
cs
xor
out
dec
mov
stc
aas
div
loop
gs
cmpsb
mov
ret
mov
adc
push
fisttpl
add
sbb
ljmp
aaa
stos
and
aaa
daa
push
sub
jl
cld
stos
jmp
jmp
movsl
subl
mov
scas
scas
loope
sti
lcall
cmp
insb
mov
jmp
int
aad
sub
stos
fmul
imul
mov
loop
clc
sub
jp
out
mov
test
popl
pop
adc
rcrb
aad
jle
addr16
cmp
iret
gs
mov
fidivrs
mov
les
jg
mov
in
sbb
inc
pop
or
bound
mov
push
xchg
outsl
pop
ret
sub
inc
mov
test
push
add
je
subb
enter
nop
cmpsb
rcl
or
push
dec
popa
xorl
scas
pop
and
cltd
dec
xor
sarl
sub
out
dec
sub
jle
lahf
or
clc
push
in
outsb
jl
dec
sub
sti
cmpb
mov
fimull
fistps
push
mov
mov
addl
add
adc
sahf
pop
mov
inc
outsb
andb
sbb
lods
repnz
mov
dec
stc
cmpsb
inc
mov
lret
push
inc
sub
je
inc
jl
scas
jae
lcall
loope
sbb
inc
and
pop
movsb
add
outsb
inc
repnz
outsb
pop
sub
jnp
mov
not
mov
fwait
push
jecxz
jmp
sub
mov
sbb
lds
and
xor
out
out
xchg
test
or
pop
and
in
ret
outsb
mov
inc
push
push
clc
push
hlt
xor
xchg
pop
imul
stos
imul
cs
pop
cli
imul
jae
lods
mov
aam
and
xorb
in
cwtl
push
or
rcrb
test
mov
jecxz
xchg
xchg
jbe
mov
test
push
dec
repz
in
jmp
in
xor
mov
sbb
lea
icebp
cmpsb
jnp
inc
js
decb
cmovbe
dec
or
ror
xchg
inc
insb
out
xchg
inc
jmp
add
fs
fdivrl
jo
insb
mov
mov
lahf
jne
sub
les
test
sub
sar
lods
mov
test
cwtl
or
fdivr
or
loopne
adc
sbb
adc
aaa
icebp
iretw
adc
jb
loop
and
xchg
xor
insb
sbb
iret
push
aad
xor
jno
popa
movsb
sub
je
sub
add
sbb
jmp
stc
jns
add
mov
pop
subl
sti
out
fisubs
adc
jge
insl
mov
insl
mov
popa
cmpsb
aam
ss
adc
popf
xchg
fnstsw
and
cmp
sub
xor
jb
inc
shrb
cmc
mov
or
dec
adc
mov
lret
ss
push
fdiv
sahf
sub
pop
dec
push
sub
lods
cmp
and
jns
and
sub
sahf
test
jno
pop
jge
data16
jno
fstpl
mov
sub
sbb
dec
inc
aad
daa
pop
lcall
mov
and
xor
das
push
jo
mov
fwait
and
push
dec
das
out
adc
xor
fs
fwait
inc
sbb
daa
xlat
inc
xchg
popa
test
mov
xor
mov
mov
mov
push
outsb
xor
stos
inc
pop
lcall
mov
sbb
or
sub
adc
push
jg
pop
jne
push
cwtl
int3
fisubrs
mov
pop
fildl
shlb
ljmp
stos
inc
add
cmc
mov
rorl
mov
stc
pop
push
lret
popf
sti
pop
xor
cltd
adc
mov
mov
adc
cmp
xcrypt-ecb
cmpsl
mov
sub
divl
enter
or
test
bound
xchg
inc
adcl
sbb
lret
movsb
and
sarl
and
sti
jmp
loope
mov
jo
add
sbb
imul
sbb
jl
push
add
add
call
dec
dec
xchg
xor
frstor
dec
clc
add
xor
mov
add
pop
pop
jne
es
in
pop
mov
sub
jne
jns
out
or
jne
sbb
xchg
or
ds
adc
ret
lret
in
shlb
leave
int
or
push
inc
fstl
sub
divb
xchg
insl
hlt
icebp
cmpsb
xchg
hlt
inc
sub
sbb
jg
mov
xchg
push
test
sub
into
mov
fs
dec
test
push
push
fs
out
fwait
dec
cmp
or
mov
mov
sub
push
insb
push
inc
sbb
imul
mov
push
inc
jae
mov
or
rep
push
ss
js
dec
and
test
mov
test
jns
test
jecxz
xchg
out
in
sub
sbb
loopne
push
loopne
mov
adc
sub
mov
sahf
mull
fistpl
cmp
data16
jb
fildll
add
cmpsl
pop
add
in
roll
in
movsl
and
fidivs
jbe
inc
mov
lret
push
lea
adc
dec
inc
mov
mov
jmp
in
lods
lret
sbb
mov
and
and
imul
ljmp
outsb
xchg
mov
dec
sahf
and
in
movsl
out
add
push
cld
daa
outsl
lret
mov
nop
mov
je
mov
mov
cli
mov
dec
popa
jle
orb
push
or
int3
je
lods
pop
dec
lea
lods
clc
sbb
and
lock
int
add
test
jnp
add
lret
or
or
enter
adc
loope
xor
movaps
jp
and
pop
xchg
cmc
mov
mov
je
sbbl
ds
test
roll
aam
sbb
push
hlt
cmp
pop
sbb
fstps
mov
call
inc
add
dec
and
rorb
es
cmp
and
bound
jnp
out
inc
inc
int
lea
repnz
nop
cld
rolb
test
imul
sub
add
xor
or
mov
jbe
cmp
dec
cwtl
movsl
loop
jne
out
xchg
adc
lret
dec
jae
ss
adc
pop
loopne
aad
dec
pop
shrl
loop
push
pop
cmp
popf
loop
xor
dec
jns
xchg
js
xchg
sbb
mov
out
push
xchg
sub
dec
into
repnz
cmp
inc
sbb
std
cld
pop
add
and
inc
push
inc
mov
add
adc
sbb
cmpsb
lock
dec
mov
push
xchg
popf
mov
and
push
dec
js
int3
lea
jne
neg
in
bound
das
sub
mov
or
mov
mov
cmc
cmpsl
test
dec
jge
imul
in
cld
and
outsb
ret
adc
pusha
es
std
aad
outsb
test
add
mov
and
fildl
adc
xchg
rcrl
int
mov
lods
test
jmp
and
xor
xchg
xchg
popa
lcall
mov
add
mov
add
and
mov
icebp
mov
shll
dec
cmpsl
scas
adc
std
mov
imul
movsl
dec
sbb
sbb
jmp
fistpl
pop
fsubr
lods
mov
fwait
pop
cmp
pop
in
add
push
test
xlat
push
aam
xchg
mov
sub
nop
mov
cmc
mov
pop
cmp
pop
add
outsl
leave
aad
dec
push
adc
stos
lock
or
test
push
outsl
sbb
fsubs
xchg
repz
iret
test
lea
dec
fisubl
or
mov
dec
mov
fimull
or
pop
add
imul
insl
test
add
sub
xor
add
stos
icebp
mov
inc
ficomps
ds
jns
dec
stc
push
cmpb
lods
mov
outsl
es
clc
clc
outsb
ret
mov
cwtl
int
shrb
std
aas
jecxz
mov
insl
dec
add
int3
insl
add
adc
lret
loopne
movsb
out
cli
lock
pop
popa
jne
hlt
jae
ret
sub
lret
xchg
push
and
sub
mov
cmp
adc
and
dec
or
push
add
and
pop
mov
inc
add
mov
and
cmp
pushf
dec
aas
test
cli
int3
jecxz
and
into
ret
ret
push
mov
in
pusha
adc
in
jnp
add
loope
nop
call
pop
subl
pop
mov
jno
mov
test
ds
push
out
pop
ret
lods
xchg
pushf
mov
jns
adc
daa
pushf
push
and
add
rclb
clc
xor
nop
lret
movsb
jbe
sub
xchg
inc
aas
xor
sahf
add
pop
fimuls
sbb
sahf
insb
jns
out
sbb
jmp
sti
add
and
int
mov
xor
stc
aam
div
xlat
xchg
xor
fsubr
mov
xor
aam
mov
adc
xor
rcll
mov
imul
out
lahf
mov
call
and
pushl
inc
mov
sahf
sub
js
cmp
mov
mov
inc
jl
into
xchg
popf
test
aas
sbb
sub
call
out
stos
push
into
out
sbb
nop
dec
rcrb
je
scas
mov
push
sub
dec
dec
test
sbb
jbe
sbb
lahf
xor
and
in
cmp
cmp
push
inc
pushf
cmc
outsb
cmp
imulb
and
mov
add
lock
push
fcomps
out
adc
insb
jne
xor
dec
cmp
outsb
jnp
int3
xor
cmp
cwtl
shlb
into
imull
scas
repz
fiadds
sub
inc
push
mov
rcl
dec
out
stc
adc
test
cmp
cwtl
cmpsb
mov
cld
fucom
cwtl
decl
mov
sub
and
adc
in
pop
or
cmpb
and
fnstcw
lock
mov
mov
jb
dec
aaa
cwtl
mov
inc
test
cmpsl
add
and
dec
cmpl
mov
and
shll
pop
fcomi
add
loopne
sub
jb
insb
inc
cld
or
inc
mov
cmp
mov
jle
setle
push
ficoml
push
lret
inc
pushf
xchg
push
lcall
cs
or
arpl
jmp
cli
xchg
push
dec
into
push
shll
ja
cmp
cbtw
mov
sub
pop
pop
ja
sarb
aaa
and
jnp
or
dec
pop
mov
fistl
addl
cld
dec
xor
cmp
ljmp
add
inc
mov
cmp
test
xchg
xor
sbb
mov
loop
fwait
test
loope
pop
push
scas
ret
adc
sarb
lret
jl
mov
adc
leave
cli
push
inc
bound
imul
shr
idivl
out
pop
jl
lcall
adc
ret
insb
or
push
lret
adc
ficoml
pop
mov
lret
lret
lea
push
jecxz
push
gs
cmpsb
sbb
pop
add
sub
mov
adc
les
dec
xor
cmpsl
xchg
pop
lods
jnp
cmp
loopne
sbb
jo
iret
jl
fbld
lea
out
hlt
jnp
adc
shll
enter
inc
jge
clc
sti
fstpl
jne
in
xor
ret
mov
mov
repz
or
push
sub
jnp
negl
sar
lcall
ret
je
pusha
sbb
or
cmp
or
jle
sub
mov
xchg
pop
xchg
push
testl
inc
xchg
movsl
dec
decb
test
icebp
movb
xchg
mov
cmpsb
gs
jbe
push
arpl
jecxz
mov
push
pop
xchg
cmpsl
add
imul
jg
lret
and
inc
sbb
mov
cmp
int
xor
or
mov
pop
dec
mov
sar
dec
ds
in
pop
xor
pop
sbb
mov
pop
sbb
pop
popf
jmp
aaa
pusha
push
outsl
scas
fadd
fcom
cltd
sbb
rcll
cs
sahf
pop
cmpsb
aaa
test
sbb
cmp
inc
mov
xor
dec
inc
jle
inc
mov
in
inc
andl
mov
and
mov
arpl
lahf
inc
cmp
xor
lds
jge
or
jae
xor
test
mov
jnp
ds
fsubr
sti
jb
push
xor
lcall
push
repz
sbb
daa
je
int
into
cld
pop
add
rorb
jge
mov
inc
lock
and
outsb
mov
movsl
into
cmpsl
push
xor
adc
fsubrl
push
adc
xchg
fcompl
outsb
dec
xlat
and
push
ljmp
sbb
adc
int3
lock
lods
inc
xor
jno
std
xor
push
xchg
dec
add
jp
inc
dec
push
fstpl
inc
jmp
lcall
mov
adc
ds
stc
imul
test
out
jbe
lea
fst
leave
mov
mov
adc
mov
cmp
jnp
add
push
push
dec
test
sbb
out
pop
adc
add
push
rcrl
sub
cld
sbb
shr
mov
inc
int3
add
clc
cli
dec
hlt
aad
aas
movsl
inc
adcl
sahf
rcl
cmp
leave
sarw
push
push
lock
cmc
pop
outsl
fdivrl
cmpsl
fisttpll
pop
or
test
add
out
sub
cmp
loope
test
mov
out
mov
mov
mov
mov
out
dec
bound
mov
jno
mov
cli
pop
sahf
sbb
inc
ss
fadds
push
add
ja
call
add
incb
scas
mov
cmp
daa
movsb
mov
cmpsb
xchg
jle
sbb
scas
xor
sbb
cltd
adc
lahf
mov
adc
mov
cs
mov
sbb
jnp
int3
jl
out
std
inc
push
outsl
jno
and
es
sahf
test
out
inc
pop
xor
repz
lods
dec
mov
lret
jns
mov
mov
daa
andl
xchg
popf
mov
mov
push
adc
arpl
lret
mov
sub
dec
and
insl
xchg
mov
jbe
mov
xchg
jp
jbe
mov
dec
pop
push
push
sub
lock
xlat
or
dec
int3
arpl
enter
inc
push
mov
and
leave
mulb
popf
mov
imulb
aas
stos
popl
testl
xorl
jo
adc
jo
mov
and
dec
mov
pop
aaa
icebp
mov
hlt
jb
dec
inc
xchg
outsb
std
dec
clc
pop
fxch
pop
cmp
mov
daa
and
sub
mov
ret
stos
jns
mov
lock
jle
imul
inc
mov
enter
sahf
inc
repz
sub
outsl
lea
lahf
sbb
data16
popf
adc
sbb
jns
scas
bound
call
rol
add
mov
sub
cmp
mov
and
xor
push
xchg
outsb
cmp
mov
cmc
test
mov
and
loopne
cmp
jb
testb
test
push
arpl
xchg
aas
les
inc
cmpsl
jb
es
aas
popf
aad
pop
jmp
scas
mov
push
adc
dec
pop
cwtl
rcl
and
inc
inc
mov
loopne
inc
xor
push
int
mov
shlb
cld
xor
mov
cmpsb
shlb
inc
cmp
xchg
jg
cmp
pop
sub
pop
adc
in
das
loopne
and
hlt
inc
jns
repz
jbe
or
movsl
adc
add
cmpsb
mov
aaa
jp
mov
and
addr16
push
stos
dec
popa
push
dec
cmp
xchg
mov
mov
bound
lret
mov
xor
movsl
jo
call
rcll
sbb
jle
jg
inc
add
push
jnp
loope
push
mov
hlt
bound
cwtl
imul
imulb
or
mov
sbb
outsl
cmp
mov
mov
addb
mov
or
aaa
and
push
pop
test
mov
fsubrp
or
lock
dec
sahf
lret
pop
add
ja
cmpsb
popf
mov
add
push
rcrl
fs
fcoml
popa
mov
sbb
lds
push
scas
adc
andl
addr16
daa
hlt
cli
and
loopne
hlt
pop
sbb
push
movsb
ss
mov
pop
jg
dec
mov
cmp
xchg
xlat
mov
out
cmp
bound
cmp
ljmp
les
fcomp
xor
and
cmp
xor
dec
and
cs
fisttpl
jmp
imul
loopne
dec
xor
cli
std
icebp
inc
sbb
or
scas
pop
mov
xchg
mov
cmpsb
pop
mov
pop
mov
sub
push
repnz
pop
leave
pop
rolb
xor
add
jg
adc
push
in
add
cld
ds
sbb
inc
lret
pop
mov
gs
xor
add
cmp
or
pop
xlat
xor
cmpsl
data16
jne
sbb
and
mov
out
push
fwait
addr16
adc
shll
dec
hlt
leave
xlat
mov
enter
lret
mov
test
push
add
push
dec
push
xor
test
mov
xor
les
cs
mov
lods
sbb
dec
add
ret
add
data16
or
fsubs
nop
test
xchg
or
in
shll
pop
mov
jno
dec
fsts
sbbl
push
scas
or
dec
ds
pop
fiaddl
xchg
imul
inc
movsb
or
leave
jecxz
xor
inc
stc
cmp
pushl
jb
dec
xor
daa
popa
into
mov
mov
test
sbb
xchg
mov
sbb
sti
insb
cmp
scas
xchg
mov
mov
stos
fwait
test
clc
rcr
movsl
mov
shl
jo
movsl
add
lret
pop
cmp
shl
aam
xchg
mov
push
sbb
mov
mov
jns
jnp
push
inc
mov
jmp
inc
pop
pop
cs
notb
mov
ret
ljmp
scas
mov
insb
in
out
mov
ret
and
popf
pop
adc
mov
cltd
leave
leave
or
adc
out
cli
adc
mov
jns
inc
mov
js
aas
lods
sub
stos
sbb
nop
incl
les
jp
fldenv
data16
push
xchg
pop
movl
xchg
fstp
stos
xchg
mov
out
adc
in
lret
jle
movsb
aas
mov
aad
or
or
jp
je
mov
aaa
xor
loop
gs
push
mov
pushf
repnz
push
or
inc
or
aaa
flds
movsl
addr16
add
icebp
push
and
jmp
js
dec
dec
outsl
pop
mov
push
or
mov
push
fdiv
orb
push
cmc
jp
into
cwtl
das
cmp
mov
popf
push
popa
xchg
xchg
movsl
outsb
in
cmp
sub
addr16
jge
dec
flds
sti
and
and
pop
cwtl
sub
or
int3
push
cmp
push
push
add
jge
fstl
jg
mov
sarb
cmc
xor
sbbl
add
push
das
push
adc
mov
pop
dec
adcl
les
movsb
sub
test
push
inc
or
jecxz
sahf
jg
pop
inc
insb
fiadds
mov
adc
jecxz
mov
ja
movsb
push
ds
push
jb
sbb
mul
push
cmpsl
jg
mov
lea
mov
sub
sahf
imul
sbb
cmpsb
sbb
push
pop
arpl
movsl
mov
sbb
movsb
clc
popa
rcll
sti
ret
cmp
scas
fistps
jge
pop
sub
ret
mov
cmp
cmp
addr16
lret
dec
jmp
adcl
leave
lods
sahf
sub
push
mov
dec
pop
ja
mov
cli
xchg
ljmp
bound
jno
cmpsl
xor
fdivrp
stc
cwtl
cltd
xor
pop
lret
cmpsb
mov
dec
sbb
popa
clc
filds
xchg
mov
gs
imul
lret
jg
jo
xchg
aas
shl
xor
sbb
movsb
add
sar
xchg
cs
out
clc
mov
inc
cli
xor
mov
add
push
jnp
mov
xor
cs
xchg
xlat
jo
ss
cmp
add
inc
lcall
shrw
inc
fcmovnb
lea
in
inc
aad
push
aam
mov
jp
jl
icebp
loopne
sbb
cmpb
mov
mov
xor
mov
sahf
push
sub
cmpb
mov
pop
in
sbb
sub
inc
fcompl
shlb
and
pop
andb
lods
mov
je
mov
scas
jns
ret
in
mov
pop
jnp
pusha
sbb
inc
cmp
mov
inc
add
shlb
inc
aam
mov
js
inc
pop
jmp
out
fistl
dec
or
aaa
and
add
sub
fcomps
insb
mov
decl
scas
jp
inc
fwait
ss
xor
test
xchg
pop
sbb
dec
mov
sbb
rcrl
mov
add
mov
lcall
push
pop
cltd
adc
ret
or
jns
cmp
jecxz
shl
movsb
jo
or
xchg
adc
shl
add
or
dec
das
add
and
push
inc
gs
nop
lahf
dec
dec
mov
jae
cmpsb
and
add
lods
es
cs
xor
cli
xchg
pop
sbb
into
and
xchg
aas
imul
mov
mov
movl
cmpsl
push
mov
dec
fisttps
mov
or
jg
mov
adcl
adc
lahf
xchg
negb
xchg
xor
mov
lcall
aad
push
out
jnp
jecxz
data16
and
mov
repz
cld
imul
lods
push
das
mov
ffreep
push
das
aam
sti
adc
sti
or
ficoml
mov
test
loopne
jmp
sbb
fwait
inc
enter
insl
add
scas
dec
cltd
imull
icebp
inc
nop
lret
iret
push
cmpsb
fstpt
pop
inc
adc
and
jo
repz
xor
pop
roll
or
lret
fwait
mov
fwait
loopne
lret
int3
push
inc
aad
mov
dec
lcall
outsb
push
pop
mov
fs
insl
xchg
or
mov
xchg
test
dec
or
and
cld
cld
cli
ror
cmpsb
loop
rorl
mov
les
dec
sbb
push
sti
mov
loope
sub
movsl
cmp
into
lock
and
cwtl
or
in
pop
pusha
mov
mov
dec
ja
jns
popa
or
repnz
imul
insl
ja
fcmovu
sub
ja
jecxz
mov
mov
xchg
xchg
or
enter
inc
jnp
sti
les
jo
cltd
fs
and
les
cmp
jmp
push
xor
lods
fs
mov
popa
shll
jns
sub
adc
inc
mov
clc
xchg
das
ror
lcall
leave
testb
adc
popa
std
sub
loopne
pushf
sbb
rorb
mov
mov
jmp
stc
mov
xor
push
addl
aas
popf
loopne
adc
lar
popf
out
or
mov
mov
sbb
sti
mov
mov
mov
adc
jnp
or
push
mov
mov
mov
sub
outsl
popa
xor
xchg
cmp
mov
dec
daa
movsb
push
in
sbb
in
inc
xchg
cmpsl
jle
pop
sti
and
mov
xchg
test
inc
push
aad
paddusw
or
sarl
push
lea
js
dec
test
fsubr
shlb
loope
sahf
add
sub
jne
test
bound
and
clc
add
dec
pop
sbb
lret
pop
jle
dec
xor
adc
push
inc
lea
pop
xchg
data16
shrb
dec
sbb
jno
or
pop
sbb
icebp
inc
pop
push
jg
adc
mov
fildl
cmp
mov
mov
sub
orb
xchg
or
stos
mulb
pop
inc
push
lds
cli
sub
ss
jne
add
add
lret
fdivrl
sarl
pop
pop
fldenv
pop
in
or
add
xlat
fwait
cmpsl
jo
cmp
jecxz
scas
aas
or
push
or
adc
cltd
popa
cld
xchg
inc
jnp
inc
sub
xchg
sbb
cmp
inc
sub
or
add
scas
and
out
add
add
mov
cmp
push
movsl
test
gs
jne
xchg
test
ja
rorb
jp
cwtl
inc
jb
mov
sarl
shrl
inc
push
test
pop
mov
test
mov
adc
lock
lock
jae
loopne
xchg
movsb
cmp
daa
dec
adc
add
scas
das
push
xchg
sahf
and
cmp
sahf
fbld
jne
outsb
or
inc
rorl
andl
icebp
xchg
in
jge
ret
lcall
es
repnz
add
enter
push
into
inc
cmpsb
mov
repz
pop
and
iret
scas
loop
push
add
rcrb
mov
jo
mov
call
jae
xor
lods
jne
jg
pop
in
inc
test
or
push
mov
cmpsl
cmp
js
cld
push
push
lods
cltd
dec
outsb
push
mov
add
mov
rorb
sti
xchg
repz
test
inc
inc
xchg
mov
sbbb
inc
dec
mov
fsubrl
or
inc
jg
loopne
rorl
or
sahf
iret
loop
inc
mov
lret
sub
iret
and
cli
dec
xchg
imul
shrl
fdivrs
inc
leave
xor
pop
les
jne
stos
jmp
xor
sbb
mov
jnp
insb
adc
mov
pop
inc
jb
jp
out
shll
pop
pop
jnp
repz
push
and
fs
pop
or
adc
inc
jg
outsb
sbbb
fwait
adc
sub
lods
out
rclb
xor
mov
fistl
insl
addr16
or
push
mov
hlt
adc
xor
mov
js
or
pop
jae
icebp
lds
cmp
jnp
pop
cmc
popa
jg
test
jo
ss
std
clc
les
sar
fnsave
pushf
std
gs
ret
jnp
leave
pop
push
mov
sbb
addl
mov
out
call
adc
enter
pop
in
jmp
push
push
push
pop
aam
movsb
sub
rcrb
pop
xlat
rclb
xor
inc
dec
mov
lods
arpl
push
aam
fs
into
stc
xchg
xor
xchg
adc
inc
and
xchg
push
mov
inc
adc
or
sbb
mov
sbb
test
movsl
sbb
push
inc
mov
add
sbb
fcompl
pop
iret
add
inc
pop
cmp
xlat
jp
imul
jl
mov
and
insb
xchg
push
push
dec
xor
ljmp
jmp
fisubrl
pop
adc
clc
stos
add
leave
xor
inc
adc
punpcklbw
sub
lock
movl
popf
jge
push
mov
cmp
mov
scas
fstpl
add
daa
push
push
ss
rclb
pop
pop
adc
clc
data16
xor
add
pop
push
and
or
cmp
mov
sbb
jae
stc
stc
pop
add
inc
stc
mov
mov
out
push
dec
shlb
inc
loop
cld
pop
in
icebp
or
mov
call
insb
mul
push
movsl
shll
cmp
rol
mov
inc
movb
dec
xor
mov
out
fsubl
jbe
std
and
notl
nop
gs
lcall
pusha
xor
jle
jmp
js
or
jo
jle
divl
push
xchg
pop
add
enter
dec
mulb
popa
push
inc
gs
cmp
dec
ljmp
cld
dec
jb
add
xchg
sbb
and
aas
out
jg
stc
mov
movsb
xchg
test
sub
xor
ror
fbstp
pop
fiadds
jnp
and
pushf
aaa
push
mov
adc
mov
inc
leave
jb
movsb
int3
test
add
test
scas
sub
or
daa
stc
fcompl
dec
icebp
push
jg
call
pop
cmc
aam
dec
xchg
cmp
or
inc
adc
mov
cmpsl
call
adc
scas
or
icebp
cmpsl
out
mov
xchg
je
mov
stos
dec
jp
or
mov
lock
mov
sbb
pop
jb
enter
xor
test
push
jp
mov
dec
dec
nop
push
mov
xlat
adc
push
sbb
mov
into
movsl
shll
int3
push
andps
cmp
inc
xchg
dec
mov
push
xor
stos
pop
jno
adc
inc
sahf
outsl
xchg
daa
mov
nop
movsb
jmp
outsl
lahf
jne
dec
aaa
cmp
aaa
leave
jmp
mov
pop
lret
and
orl
and
mov
and
into
inc
and
daa
ss
cmc
aas
inc
test
pop
test
jbe
stos
dec
mov
sbb
cli
int
mov
xlat
xor
push
andb
cs
xor
push
shrb
addr16
mov
pop
pop
fdivr
xor
xor
je
fs
jecxz
jno
out
leave
xchg
lds
dec
jge
movsb
test
add
out
scas
stos
push
std
pop
xchg
mov
scas
cli
repz
jl
out
or
lods
add
pop
jae
aaa
cwtl
pushf
loopne
xchg
in
lahf
inc
cli
pushf
add
mov
inc
iret
ds
adc
or
inc
xor
out
imul
iret
dec
xlat
sub
mov
bswap
xchg
jmp
jge
dec
or
loope
mov
aam
rcrl
leave
inc
xlat
inc
xchg
test
decb
pop
push
mov
hlt
dec
pop
pop
jnp
sub
in
adc
enter
lret
jb
mov
xlat
into
scas
sbb
shl
lock
addb
and
inc
sbbl
ds
mov
out
inc
sbb
cmc
mov
in
aam
or
stos
add
shr
cltd
lcall
lock
or
xor
jb
xlat
les
stc
sti
sbb
adc
stos
int3
nop
jg
shll
aad
test
or
xchg
jmp
jmp
mov
push
inc
adc
mov
subb
xchg
mov
into
jne
data16
aas
clc
aaa
xchg
ret
popa
xchg
clc
inc
lcall
mov
or
aaa
push
daa
fisttpl
mov
push
leave
movsl
inc
xor
data16
lods
mov
int
push
sub
bound
pop
ljmp
call
inc
lret
pop
lcall
add
mov
movsl
int3
cmp
pushf
mov
inc
mov
add
lcall
pop
imul
xchg
out
loope
mov
loopne
lcall
cmpsl
decb
dec
in
dec
sub
fwait
addr16
imul
inc
bound
test
sub
sbb
fldenv
psrlq
mov
in
ret
jns
popl
xchg
mul
stos
add
inc
jecxz
je
xchg
pushf
push
test
aad
lret
xor
add
bswap
adc
mov
scas
fildll
xor
daa
pop
push
ja
sbbl
and
lahf
dec
in
jl
cmpl
dec
test
add
jp
xor
mov
pop
and
lods
jns
test
daa
mov
popa
cmp
cltd
cmpsl
bound
mov
cmp
leave
push
mov
cmpsb
mov
dec
push
inc
shl
or
lahf
repz
sti
sbbb
add
push
or
or
push
and
in
or
jbe
pusha
mov
jae
loop
outsb
or
adc
outsb
cltd
mov
push
fbld
pop
or
cmp
add
test
daa
mov
sub
xchg
jle
mov
mul
scas
sbb
dec
shlb
xchg
leave
mov
daa
andb
jmp
test
adc
rclb
mov
into
mov
jae
dec
out
loop
push
add
hlt
mov
popa
scas
sub
cmp
fwait
push
mov
xor
jne
push
ds
pop
pop
mov
xchg
xor
loope
lods
dec
mov
lea
sub
mov
push
stos
mov
nop
sbb
ds
ljmp
jle
jg
lods
add
ss
fsubrs
push
dec
ss
push
jnp
sbb
mov
sbb
pop
cli
int
js
sub
fs
aad
dec
pop
and
ljmp
jmp
hlt
pop
ret
in
jp
imul
test
mov
mov
mov
add
mov
jb
in
js
sti
jae
pop
fwait
jp
push
sbb
aad
pop
mov
sti
jl
mov
or
jnp
pushf
jae
call
xchg
cmp
xchg
rorb
or
movsl
mov
lds
and
lea
jno
in
out
or
out
imul
pop
lock
pop
cld
cwtl
push
push
dec
sbb
je
adc
or
leave
shlb
ljmp
fimull
test
pop
pop
cmc
pop
neg
pop
aaa
repnz
add
adc
or
das
mov
add
in
lods
enter
sbbb
fiadds
dec
or
adc
div
adc
xchg
fidivrs
xor
arpl
jl
cltd
xchg
decb
push
mov
push
push
xchg
inc
pop
dec
test
xor
fcompl
in
ret
ds
inc
mov
addr16
mov
inc
pop
ds
sbb
sbb
roll
push
jp
push
pop
jecxz
loop
inc
in
sub
leave
pusha
cltd
push
cmp
addl
out
xchg
xor
shrl
lock
ret
sbb
xchg
push
and
xchg
dec
dec
xchg
dec
cltd
aad
mov
subb
xor
clc
jp
mov
push
std
pop
ds
dec
cmpl
dec
lods
push
and
or
or
cwtl
and
mov
xchg
sarl
fildl
cli
sti
ds
push
dec
icebp
test
xchg
and
pop
pop
xor
push
push
fbstp
mov
lcall
push
or
sbb
inc
in
shrl
pop
rcrl
icebp
pushf
cltd
xchg
pop
lods
dec
iret
fcomps
hlt
jge
dec
dec
pop
pop
push
scas
mov
or
mov
test
jp
outsb
jg
jecxz
fucomi
pop
or
je
inc
out
inc
mov
hlt
je
pop
cmpb
daa
mov
mov
decl
sbb
push
mov
in
lods
jae
cmpl
adc
iret
xchg
mov
call
daa
add
adc
paddsw
nop
xor
adc
pushf
fcmovnu
mov
test
or
and
mov
jmp
mov
add
jle
mov
cltd
dec
pop
inc
dec
inc
cmc
loop
pop
jmp
lret
jbe
sti
orl
jmp
fs
fstpl
sarl
push
jne
outsl
and
mov
sbb
xor
sbb
sbb
test
xchg
stos
xchg
out
mov
xchg
or
cmp
arpl
pusha
ret
dec
jbe
test
cwtl
xchg
cmp
push
mov
repnz
mov
and
cld
xchg
or
mov
repnz
add
xor
rcl
addr16
scas
inc
push
fcmovne
and
sbb
popf
ja
icebp
push
mov
fiadds
scas
cmp
mov
test
call
mov
pop
cmp
sti
xor
or
xor
stos
mov
inc
shll
mov
iret
xor
and
sub
repnz
lods
add
mov
dec
test
jl
push
adc
add
and
xchg
fdivrp
hlt
pop
lcall
dec
lcall
pushf
test
cltd
jl
orl
aaa
adc
inc
or
dec
lret
shrl
mov
mov
inc
cmp
and
fs
pop
add
mov
lret
pop
or
and
add
xchg
mov
sbb
shlb
jnp
push
xorb
std
ljmp
add
in
and
cmp
int
cli
pop
jno
push
rcll
not
in
jmp
pop
adc
and
lahf
push
mov
imul
xchg
pop
mov
popa
jno
xor
jmp
dec
sub
clc
std
cmp
movsl
xor
lcall
je
inc
in
loop
imulb
fadd
mov
sbbb
jl
and
sbb
leave
ss
sarb
pushaw
add
hlt
aaa
loope
xchg
rcll
push
ret
icebp
jns
dec
mov
xor
pop
dec
ficoms
dec
mov
cmp
lock
test
sub
mov
adc
incl
add
add
repnz
bound
mov
out
jbe
lods
jb
orl
ret
fstpl
jae
sub
popa
and
lock
mov
fwait
mov
in
clc
pop
lods
mov
fistps
push
in
movb
or
sub
ds
icebp
mov
pop
lods
loope
inc
repnz
out
or
jge
sub
lds
inc
or
xchg
jb
inc
jno
push
sti
jae
adc
pop
pop
orl
mov
fstl
mov
fs
lds
cwtl
ljmp
lcall
pop
sti
in
jb
sub
or
and
mov
rorl
inc
mov
sub
mov
cmp
imul
push
jmp
push
xchg
push
xlat
sub
repz
stos
xchg
jns
lock
jbe
mov
lret
push
dec
in
popf
movhlps
repz
sbb
mov
mov
enter
pop
stos
jge
pop
adc
jne
or
add
sub
aaa
sub
dec
mov
sub
pop
inc
lea
sarl
bnd
pop
addr16
inc
aad
enter
fcompl
dec
in
test
rcll
fstl
and
xchg
outsb
sub
add
mov
bound
fs
test
into
xchg
out
push
cmp
out
test
imul
aad
xor
rolb
out
adc
aas
and
dec
sub
adc
outsb
ja
add
ret
cs
push
in
aad
in
sub
pop
lock
aaa
bound
dec
jno
mov
call
repnz
mov
push
mov
mov
scas
jbe
or
mov
out
inc
pop
ja
pop
fisubl
clc
jecxz
add
dec
lea
jae
dec
cmpb
addr16
dec
or
jmp
sub
les
outsl
xchg
int3
jp
xor
imul
js
ljmp
mov
aam
push
call
fldl
lahf
ret
or
stos
ficomps
cld
and
mov
sbb
jnp
dec
fwait
outsb
jle
sub
jl
xchg
inc
popaw
lcall
out
dec
movsl
xor
mov
cmp
mov
loop
call
add
xchg
nop
cmpsb
scas
xchg
lods
fadds
movsb
loop
cmp
pop
push
sub
jbe
daa
or
push
add
jne
out
pusha
bound
or
xor
lret
cmp
add
in
mov
je
repnz
push
in
push
and
mov
pop
in
aaa
je
xchg
test
jbe
inc
adc
jbe
mov
rorb
pop
ja
pop
jne
push
cwtl
test
or
jl
std
sub
sarl
add
xor
sbb
jno
push
imul
stos
dec
push
nop
outsb
and
and
hlt
scas
mov
ja
mov
loope
lods
mov
cmc
mov
inc
fdivs
inc
nop
hlt
sbb
jmp
bound
fbstp
iret
cmc
xchg
ss
cmp
sbbl
mov
adc
and
pop
call
ret
jb
ds
cld
or
pop
mov
imul
cwtl
pusha
xor
push
loop
popf
mov
push
adc
jl
icebp
jl
jo
mov
ret
push
ljmp
adc
jle
scas
xlat
push
jp
pop
mov
scas
jle
mov
aaa
push
mov
fistpll
push
and
add
out
push
dec
lret
mov
shll
bound
fs
xchg
sub
add
sub
mov
loopne
clc
pop
lods
or
mov
addr16
cmp
mov
adc
push
xlat
sub
sbb
xchg
enter
xor
inc
cmpsb
scas
sti
push
mov
add
outsb
testb
push
sub
rcll
imul
pusha
mov
addb
and
test
ljmp
mov
fisttpl
mov
sarl
das
jbe
xchg
xchg
jb
pop
mov
mov
not
jns
pop
adc
sarw
cwtl
fucomip
fstpl
aad
and
cmp
xor
lds
js
enter
int3
lret
fsubrl
sub
movsl
scas
cmp
div
cmpsl
jecxz
sbb
or
cmp
int3
mov
mov
sbb
push
jno
sub
cmp
sbb
clc
sub
add
test
jb
popf
cmp
jle
and
and
mov
add
je
or
push
pop
and
xor
xor
pop
cwtl
mov
jmp
js
inc
cwtl
icebp
pop
cmpsl
out
jmp
loope
leave
jg
dec
gs
sub
lahf
inc
xchg
xchg
int
mov
mov
ret
sbb
rcrb
xor
xchg
iret
mov
loop
add
mov
mov
push
out
push
mov
out
jbe
sbb
dec
outsb
xchg
push
xchg
ja
xlat
xlat
imul
aam
or
xor
push
or
mov
mov
divb
push
xlat
fisttpll
and
sbb
mov
jecxz
icebp
and
movsb
hlt
xchg
mov
push
mov
cli
sub
xor
lds
push
out
inc
xlat
imul
push
or
push
pop
jge
mov
adc
sbb
mov
data16
dec
or
pop
test
jmp
cli
movsb
jo
sub
xor
or
pop
fnstenv
fdivl
adc
stos
cli
dec
xor
mov
repz
adc
insb
lds
adc
out
hlt
xor
je
ds
xchg
and
outsb
lret
mov
mov
fcmovnu
mov
pushf
mov
jno
push
pop
in
mov
pop
into
mov
outsl
mov
adc
jmp
xor
mov
dec
aas
addr16
addb
jmp
inc
es
in
cmp
fsubl
and
xchg
inc
stc
fcmovnu
xor
pop
sub
inc
xchg
jo
mov
mull
fs
mov
sub
mov
sbbb
xor
adc
daa
aaa
dec
xchg
gs
stc
push
or
sbb
call
cli
fcoml
xchg
dec
call
rol
xchg
iret
roll
cmp
jbe
nop
ret
sbb
fadds
xor
enterw
insb
dec
dec
mov
add
mov
idivb
jbe
pop
call
adc
int3
fsubs
jns
jo
ret
mov
jmp
out
lods
movsb
pop
hlt
mov
stc
mov
lret
int3
push
addr16
insl
test
inc
cmp
cld
call
pushf
rol
lret
lock
pop
pop
or
xlat
sbb
pop
fidivrl
mov
adc
xchg
insl
or
insb
sub
inc
inc
inc
pop
add
sarl
xchg
mov
mov
inc
xchg
mov
scas
dec
sub
out
fbstp
mov
inc
or
pop
add
push
mov
insl
push
cmp
jmp
loop
adc
imul
js
fs
stc
jnp
dec
inc
pop
xor
or
and
int3
jp
mov
aad
movsb
mov
lahf
call
ret
push
pop
std
push
cmpsb
add
testl
pop
call
fdivrl
rcll
pushf
testb
loop
scas
sbb
adc
enter
jge
icebp
pop
stos
adc
jmp
lds
std
dec
jns
in
bsr
and
es
add
mov
jae
push
mov
sahf
pop
sahf
lcall
jecxz
add
push
push
inc
add
repnz
or
adc
dec
or
xor
push
daa
push
popf
sub
mov
shrl
cmp
decb
rcrl
imul
addb
mov
stos
xchg
pop
sub
pop
jg
sbb
inc
inc
repz
push
hlt
and
dec
outsb
sub
ja
inc
mov
ds
adc
dec
push
fiadds
pop
cld
fs
out
and
dec
stc
or
or
push
xchg
sti
xor
cmc
ljmp
adc
add
push
int
fisubrl
push
inc
sbb
lahf
or
mov
mov
js
int3
and
xor
jecxz
mov
mov
mov
pop
hlt
mov
int3
jno
add
pop
mov
popa
daa
repnz
push
and
add
sub
and
es
mov
popf
mov
xchg
pop
gs
push
dec
and
test
mov
sub
js
and
dec
pop
fwait
shr
dec
sub
mov
sub
push
int
mov
jp
lds
adc
push
push
xor
xchg
lahf
mov
ljmp
mov
stos
sbbb
repz
out
out
cmp
sbb
rorl
pop
jns
add
mov
aad
imul
cmc
movsl
mov
data16
pop
stos
and
mov
inc
and
imul
orl
adcl
shl
pop
xor
int
jmp
scas
push
lahf
ret
rol
inc
jle
std
aaa
mov
mov
add
inc
ds
out
sub
sub
mov
inc
fs
fiaddl
std
add
inc
mov
inc
arpl
pop
or
mov
pop
std
aaa
and
lahf
pop
iret
ljmp
xchg
ja
xlat
pop
lret
test
std
pop
mov
mov
sbbl
test
lods
jmp
mov
arpl
xchg
or
jo
fwait
pop
das
loopne
in
mov
or
cmp
in
loope
sub
subl
xchg
lea
sub
out
shlb
data16
pop
mov
sbb
push
push
scas
shlb
sub
into
jp
loope
lea
repnz
jg
movsl
fcmovnb
or
sbb
test
pop
push
cmpsb
jp
ss
rolb
jle
cmpsb
out
jg
in
mov
imul
repnz
imul
scas
cmc
fisubrl
jns
jno
dec
push
push
and
lods
ja
into
sbb
mov
stc
aam
cltd
imul
mov
lahf
jne
push
notb
and
jae
pop
pop
pop
cmp
push
dec
adc
xor
cmp
mov
sbb
dec
fcompl
xor
sub
clc
xchg
int3
jno
cld
pop
sub
arpl
enter
ljmp
pop
and
push
inc
addr16
inc
lock
mov
and
cmp
cmp
and
int
mov
cld
jp
shll
push
jne
ret
jbe
adcl
repnz
add
xor
out
rolb
adc
bound
das
inc
arpl
and
mov
mov
pushf
mov
pop
mov
stos
repz
or
push
cmpsb
dec
adc
push
pop
aam
aam
sub
jecxz
inc
or
sub
mov
push
mov
inc
pop
dec
ljmp
mov
sbb
xlat
sbb
mov
lret
es
in
xor
in
decb
mov
mov
mov
outsb
adc
and
div
scas
mov
das
mov
loop
scas
jne
xchg
ret
pop
test
pop
mov
adc
add
imul
rorl
test
daa
dec
movsl
dec
mov
mull
inc
jb
pop
inc
pusha
out
sbb
imul
insl
sbb
ror
mov
mov
int3
or
aad
clc
inc
cmp
inc
xchg
ss
xchg
aaa
sbb
ret
out
push
mov
pushf
repnz
mov
scas
cs
aaa
or
rorl
loop
mov
xchg
iret
rcll
outsl
mov
enter
sub
mov
in
mov
nop
mov
sbbl
test
lods
mov
push
rorl
gs
and
jbe
mov
psrad
pop
dec
mov
and
jge
ds
or
cwtl
xor
out
imul
lods
sbb
cltd
pop
les
cli
jmp
testl
inc
rcrb
or
icebp
sub
xchg
mov
daa
and
jbe
xor
lahf
movsb
push
xor
mov
xchg
push
ljmp
push
dec
mov
adc
push
push
add
sub
hlt
cmc
add
xchg
or
jl
ds
out
orps
cmp
inc
mov
mov
mov
mov
or
inc
aas
into
push
dec
xchg
les
mov
xchg
shlb
aas
sub
adc
cmp
frstor
or
data16
movsl
fwait
pop
jmp
iret
adc
out
aaa
call
cmp
psrld
pop
jb
xchg
mov
shlb
cwtl
cmpsb
pop
fdivl
xor
out
lret
cmpsb
std
cmp
aad
dec
ret
mov
es
mul
or
push
jp
jecxz
xchg
mov
das
js
stos
mov
sbb
jne
xchg
and
dec
sbb
pop
xor
jp
xor
jle
add
pop
mov
loope
jg
gs
pop
mov
iret
std
sbb
mov
aaa
push
pop
cltd
imul
or
pop
insl
and
push
lods
incl
xchg
shlb
mov
sub
roll
jne
ret
lods
ficompl
imul
popf
adc
mov
cwtl
ljmp
mov
lret
stos
xchg
jecxz
dec
mov
insb
dec
lret
xor
nop
and
or
sbb
loop
pop
inc
jnp
sar
pusha
xchg
jne,pt
fstpt
repnz
lods
cmp
add
inc
pop
xor
cmp
push
lea
cmp
test
pop
fdecstp
les
loopne
adcb
add
pushf
push
scas
or
add
es
pusha
cs
lcall
mov
shrl
and
fcmovbe
and
xor
mov
adc
pop
adc
ret
lods
mov
xor
lods
ja
ror
fsubrs
pop
imul
stc
ss
jae
jg
repz
pop
cmp
test
sti
xchg
shl
roll
adc
movsb
or
dec
fmuls
into
or
das
inc
shr
push
or
xor
out
in
fsqrt
lcall
cmp
les
mov
jnp
jo
inc
adc
push
fs
mov
in
fisttpll
vmread
sub
dec
loopne
cwtl
fwait
jnp
lahf
fcoms
movsb
push
push
cmpsb
mov
xchg
jecxz
xchg
pop
cmp
cwtl
cmp
bound
xchg
and
xor
aaa
das
xor
jmp
cli
adc
cmc
inc
cmc
iret
mov
call
sbb
movmskps
imul
insb
add
popf
ja
mov
or
sub
jae
mov
xchg
fwait
push
adc
ljmp
outsb
and
inc
xchg
xchg
xor
in
loope
ljmp
test
push
push
div
stc
sub
movsb
cmp
inc
popf
mov
xchg
mov
jmp
and
mov
pushf
add
xlat
jp
push
bound
push
cld
xlat
jge
lods
xor
cmp
mov
aad
outsl
xchg
sub
pop
test
aam
pusha
fs
push
enter
cmc
jl
mov
mov
jp
rolb
jae
push
stc
cwtl
les
nop
cmp
cltd
imul
mov
xor
push
call
outsb
add
pop
mov
loopne
push
sub
pop
loope
jp
test
shll
pop
scas
lahf
sub
pop
mov
push
push
aam
jns
negb
fadd
mov
cmp
xor
sbb
pop
fdivl
pop
std
mov
inc
jmp
repnz
ret
dec
push
testb
or
cmp
sbb
dec
add
sbb
out
aas
imul
sub
sbb
scas
test
cs
or
or
xlat
adc
dec
inc
addb
ds
mov
inc
out
inc
mov
sbb
out
imul
xchg
sbb
cld
dec
push
mov
outsb
xchg
inc
xor
test
mov
and
mov
imul
add
cmc
and
gs
mov
sbb
push
xchg
mov
outsb
xor
orb
out
mov
adc
lcall
mov
cltd
outsb
mov
jne
pop
addr16
fcomps
jno
fdivrl
dec
adc
pop
cwtl
xchg
mov
xor
cli
sub
jb
subl
mov
enter
mov
push
mov
int3
fnstcw
stc
daa
lcall
or
mov
cmp
enter
mov
fildll
jl
add
test
sub
flds
mov
mov
inc
mov
aaa
and
mov
sbb
ja
or
lahf
and
xor
es
lods
ficoms
inc
mov
mov
cs
dec
sbb
inc
pop
add
and
and
mov
repz
pop
cmpsl
sti
mov
push
call
cwtl
dec
xor
inc
push
mov
sbb
push
xchg
int3
pop
lcall
lods
jbe
dec
rcrl
push
ljmp
aad
sbb
pushf
test
popa
int
bswap
jmp
in
adc
mov
loopne
jp
xor
bound
outsb
lahf
pushl
clc
cs
cltd
std
out
xchg
pop
mov
ljmp
fwait
mov
arpl
dec
sub
lret
mov
xor
inc
and
in
shll
out
mov
xor
mov
mov
bound
xchg
rorl
pop
out
mov
fwait
dec
mov
push
fcoms
cmp
mov
adc
lds
jecxz
fidivrl
inc
xlat
jecxz
lret
aas
out
lock
std
jg
dec
mov
inc
xor
pop
sbb
testl
nop
mov
adc
lods
sub
push
in
bound
int3
fwait
xchg
ljmp
aam
ds
ljmp
pop
mov
fs
sbb
bound
int3
and
sbb
out
je
sar
pop
adc
lds
out
cmp
in
dec
das
imul
dec
dec
cld
sbb
add
xchg
cmp
sbb
lds
sub
sbb
xchg
mov
loopne
cmp
shll
mov
jb
jne
pop
ljmp
sbb
out
jecxz
shlb
sub
in
pop
test
insl
xchg
cmp
fidivs
dec
popa
faddl
xor
arpl
les
adc
cmp
scas
insl
pop
ret
push
pusha
in
mov
cmp
lods
in
nop
cmp
sub
xor
push
loopne
sbb
push
sbb
xlat
pop
cmp
xchg
insb
fwait
push
and
in
fbld
lds
dec
mov
loope
xchg
mov
insb
dec
popf
jmp
cmpsl
xor
movsb
add
adc
xlat
int3
int3
inc
in
xchg
into
ja
inc
rolb
pop
movsl
aaa
add
addr16
pop
cli
mov
mov
fiadds
mov
push
lds
stc
lcall
repnz
mov
adc
add
clc
jo
xchg
enter
add
mov
pop
call
pushf
imul
lock
cwtl
inc
aad
mov
inc
stos
cmp
xchg
nop
in
fisttpl
push
push
and
mov
cmp
cmp
mov
movsb
data16
mov
iret
loopne
idiv
dec
ss
insb
scas
addr16
and
mov
rclb
popf
mov
push
mov
out
add
cmp
push
jg
cltd
lea
mov
test
jns
sub
or
out
mov
adc
push
neg
test
arpl
push
adc
cmc
lods
lcall
adc
clc
mov
mov
ret
add
inc
mov
fisubrl
fwait
icebp
sub
popf
insb
repnz
out
pop
sub
insl
mov
xchg
mov
adc
pop
adc
adc
add
ret
test
mov
gs
mov
mov
pop
xchg
aad
push
xchg
stos
sahf
jecxz
add
mov
clc
mov
or
movsb
push
scas
aas
dec
out
xchg
pop
mov
bound
sti
push
jnp
bound
into
insb
call
dec
add
js
pusha
sbb
stc
inc
jle
call
mov
push
nop
call
and
mov
insb
dec
inc
out
mov
inc
mov
mov
lods
dec
imul
inc
jge
add
in
faddp
inc
jne
xor
add
loop
pop
arpl
cld
dec
fidivrs
push
sbb
in
outsb
test
inc
cld
jmp
sub
xor
addr16
pop
cmp
sub
imul
dec
lock
out
int
jl
inc
jge
clc
pop
iret
sub
and
push
or
into
jbe
jo
shll
xor
jo
jbe
stos
mov
popa
xchg
ret
mov
subl
dec
filds
das
cmp
hlt
lahf
adc
enter
mov
popf
xor
test
mov
and
std
dec
fwait
cmp
xchg
mov
push
mov
adc
sbbl
xchg
call
jb
std
in
push
fs
lds
mov
xlat
pushf
xor
sub
jo
push
add
pop
popa
popa
jge
xchg
fadds
call
xchg
cmp
scas
xor
push
mov
or
pop
bound
jp
push
mov
adc
test
push
out
dec
mov
cmp
les
int
pushf
mov
xchg
or
sub
dec
lods
push
sbb
xchg
roll
addl
jecxz
jl
jge
sahf
pop
push
xor
xchg
scas
push
push
testl
fisubrs
jbe
nop
sbb
and
pop
into
in
ror
mov
arpl
imul
adc
bound
es
mov
mov
and
shlb
inc
inc
and
xor
xchg
roll
mov
fistps
je
cmpsl
cmpsb
out
cmp
out
movsb
cwtl
insl
sbb
cmp
aad
sub
mov
inc
gs
test
mov
push
repz
xor
add
jmp
mov
mov
cs
push
pop
cmp
pop
xchg
lahf
jg
stos
push
xchg
ja
aam
add
bound
xchg
add
stc
out
mov
sbb
icebp
push
pcmpgtd
xor
and
jo
sbb
cmp
call
jns
inc
fmuls
adc
repnz
outsb
lods
iret
xchg
daa
clc
mov
pop
popa
jnp
pop
je
pop
cltd
test
mov
xchg
popf
mov
out
rcrb
jg
xchg
jbe
js
test
or
mov
add
lret
sub
sahf
daa
mov
sbbl
push
cmp
jg
int3
fwait
clc
sbb
push
divb
dec
sub
push
add
test
mov
in
adc
mov
mov
and
hlt
mov
out
movsl
and
cmovne
sub
adc
push
mov
mov
add
cmp
sub
xlat
pop
std
push
shrb
pop
adc
cld
sub
mov
adc
lock
mov
mov
cmp
add
das
pop
push
testl
arpl
jmp
xor
inc
and
and
push
orb
inc
cmpb
std
mov
adc
xchg
scas
insl
inc
insb
addr16
ljmp
dec
movsb
sbbl
push
and
push
mov
aas
mov
icebp
inc
pop
mov
push
les
mov
lea
lret
jo
and
cltd
xor
into
add
jne
ss
in
inc
fbstp
jnp
inc
in
je
icebp
lods
lret
fcomps
test
mov
and
nop
imulb
movups
ds
xchg
lds
xchg
fs
inc
dec
jp
push
cmpsl
or
lret
push
movsl
mov
xchg
leave
scas
ds
xor
sbb
pushf
and
mov
in
mov
cwtl
call
pop
mov
dec
addr16
fbstp
cmp
cli
jb
mov
fwait
das
int3
cmpsb
xorl
adc
idivb
ss
subl
adc
mov
and
adc
and
subb
push
negb
insl
stos
sbb
lock
scas
addr16
jne
rol
out
and
push
cmpsb
mov
inc
out
sub
jb
add
mov
push
scas
adc
sub
xor
xchg
aam
pop
or
into
idivl
out
mov
dec
add
sbb
pop
mov
jmp
push
andl
je
pusha
jae
shlb
adcb
out
sahf
dec
push
adc
dec
lret
xchg
and
idivl
lret
add
cmc
push
andb
add
xlat
mov
hlt
cmp
pop
push
lock
mov
lock
and
pushf
and
or
mov
cltd
in
and
fs
mov
mov
adc
popf
cltd
orl
jle
dec
scas
cmp
scas
mov
inc
jg
test
fisubl
bnd
pop
pushf
push
push
sahf
or
jle
lods
xor
daa
and
push
pop
inc
rcrb
jo
sti
in
mov
xor
push
ror
mov
int
test
inc
sub
sar
or
sbb
pop
add
cmpsl
shll
or
lea
push
add
adc
in
test
std
cmp
mov
iret
jge
inc
aad
xchg
sub
outsl
cmp
ljmp
inc
xor
daa
enter
fadd
addr16
mov
outsb
nop
gs
insb
fstpt
in
sbb
hlt
sub
jnp
jno
ljmp
xor
fbld
dec
xchg
cmp
scas
jge
movntq
jge
pop
xor
sub
jg
repnz
fcmovu
sub
mov
inc
scas
adc
lods
jg
pop
mov
jmp
cmpsl
popf
adc
inc
mov
mov
pop
js
inc
stc
cwtl
fcmovnu
add
fs
or
xchg
push
xchg
jg
pop
inc
adc
xchg
repz
out
pushf
xchg
ret
test
mov
cmc
cli
stos
and
push
sbb
pop
mov
jmp
push
stc
pop
adc
inc
inc
imul
and
inc
in
pop
jo
pop
mov
cli
pop
fldcw
loop
dec
cld
xlat
cmp
in
sub
lea
adc
jp
ljmp
and
mov
mov
mov
cwtl
out
aas
inc
jmp
cmp
xor
inc
mov
mov
ss
jbe
sub
xlat
jno
icebp
jne
and
popl
lods
push
mov
shrl
mov
hlt
int
stos
and
leave
sub
jo
jo
xor
mov
cmp
stos
xchg
lahf
sub
mov
xchg
cltd
pop
repnz
lock
push
mov
call
mov
dec
inc
or
repnz
and
jl
mov
gs
pushf
xchg
xchg
and
or
andb
lods
add
lcall
orb
lahf
push
sti
shrb
xor
jo
pop
xchg
lea
xchg
mov
xchg
push
pop
xlat
or
mov
ret
call
jmp
ljmp
dec
haddps
mov
mov
push
jo
out
push
icebp
lds
inc
iret
arpl
out
push
lret
lock
daa
push
jecxz
orb
inc
in
pop
cmpl
jl
lock
jne
jle
mov
in
xchg
ss
xchg
aas
xchg
loopne
repnz
mov
orb
push
mov
pop
aam
add
mov
xchg
push
pop
addr16
fnsave
stc
pop
cmp
cmp
xchg
jle
mov
dec
pop
push
imul
jo
fisttpl
inc
pushf
cld
je
push
lock
mov
sbbl
cmc
paddq
jo
pop
xor
in
push
dec
in
cmp
stc
and
push
dec
dec
add
sti
xchg
xor
mov
fadds
xchg
sbb
call
fwait
call
cmp
cmpb
aad
cmp
inc
xchg
insl
in
cmp
pop
leave
mov
pop
cmpsl
aam
pop
int3
ret
add
jne
subb
add
jg
ja
push
cltd
push
sub
fs
into
sub
adc
cmpsl
and
dec
fildll
jne
inc
cwtl
push
gs
addr16
imul
add
lea
jmp
mov
cmp
negb
mov
cmp
les
adc
xor
cmp
push
sub
clc
xor
cmpsb
dec
ret
cmpsb
sub
mov
lret
adc
setne
subl
jp
mov
sub
push
inc
adc
fimull
ds
std
xor
test
xor
and
ja
testb
in
inc
outsl
sbb
loopne
mov
shll
cmp
loope
mov
daa
pushf
dec
mov
dec
clc
stc
ret
lods
mov
and
mov
pop
and
adc
cwtl
ds
inc
js
cmp
xchg
jne
rcl
ss
xchg
ds
push
xchg
aad
pop
andb
jnp
cmp
inc
mov
fnsave
jg
movsb
fisttpll
movsb
mov
lds
stc
xchg
aaa
xchg
pop
rolb
fwait
sub
fldl
mov
popa
or
cmp
xchg
mov
sbb
xchg
imul
xchg
xchg
cmp
mov
xchg
pushf
mov
add
ds
out
dec
addr16
scas
stos
out
js
in
lea
jl
dec
neg
cmp
arpl
jae
pop
mov
outsb
sbb
xor
inc
sbb
mov
pop
cmp
mov
out
cwtl
sub
ss
loop
inc
pop
movsb
mov
and
les
cwtl
pop
sub
mov
and
popa
stos
cmpsb
shrl
mov
imulb
mulb
inc
fcmovu
lea
imul
mov
fdivs
xor
mull
sbb
outsl
sbb
jmp
in
mov
ljmp
jae
cmpsb
jp
mov
xchg
jp
xor
dec
mov
cmp
xchg
cmp
dec
cmp
inc
sbb
xchg
js
sbb
xchg
lock
push
xchg
mov
cmp
lods
dec
adc
lea
mov
addr16
jae
jo
dec
push
push
mov
sub
or
fistpll
push
xor
jg
or
sub
cltd
xlat
fs
ds
lods
mov
dec
pop
push
and
movsl
js
fstpl
sub
ficompl
mov
aaa
or
cmp
leave
int3
enter
ss
cmpb
xchg
pop
push
lret
lock
jg
sbb
scas
lret
xchg
insb
popf
xor
pop
insb
mov
out
aam
xor
inc
mov
fadds
or
out
mov
add
stos
mov
lcall
push
ljmp
nop
cmp
shlb
mov
xor
mov
xchg
test
xchg
fwait
xor
push
sub
icebp
icebp
cmp
push
lock
aaa
jno
pop
jnp
ljmp
out
jg
insl
adc
int3
sub
push
pop
sub
sub
or
movlps
ljmp
pop
cld
or
mov
mov
sub
sbb
sub
xlat
outsb
stos
lock
mov
lahf
adc
add
pop
ret
lret
out
je
out
mov
scas
xor
arpl
mov
repnz
push
imul
sbb
add
mov
dec
mov
xor
dec
fiadds
outsb
scas
shl
push
pop
jg
xor
mov
int
push
subb
xchg
add
add
inc
push
into
addr16
jp
jp
xor
mov
repnz
ja
sbb
jnp
xlat
lods
aam
inc
lret
mov
sahf
ja
cmp
jge
loope
cli
or
js
mov
ret
fsub
mov
mov
aaa
lcall
and
jno
fnstsw
fisttpl
fidivl
lret
idivl
jno
aad
pop
fadds
push
sbb
pop
rorl
cmpsb
mov
enter
rorb
push
mov
or
das
aas
add
pop
insb
pop
fldt
mov
sbb
adcb
or
jo
pop
mov
pop
outsb
xor
icebp
jecxz
nop
test
push
subl
xchg
or
aas
adcb
cmp
ljmp
inc
pop
repz
sti
mov
hlt
mov
cmp
insb
adc
dec
cmpsb
or
xchg
mov
pop
push
mov
fwait
sbb
adc
cmpsl
pop
sub
lahf
push
sbb
aaa
mov
lahf
inc
cmpsl
fsubl
test
je
mov
popw
mov
cmc
stos
push
mov
lcall
in
or
adc
call
adc
rclb
push
fisttpl
dec
jno
mov
mov
cs
outsl
in
rcrl
movsb
mov
out
lahf
jmp
and
sahf
sbb
xchg
sbb
hlt
sbb
cmpsb
cmc
icebp
adc
in
les
add
xchg
fiadds
insb
aam
daa
jne
outsb
sbb
ss
and
scas
insl
jp
in
iret
je
test
xchg
repz
push
push
push
loope
gs
fsubrs
mov
fidivl
mov
xchg
inc
stos
push
imul
ss
lods
push
daa
add
fnstenv
test
push
jo
jo
push
xlat
es
cmp
test
cmc
dec
sbb
daa
mov
mov
out
outsb
jb
scas
js
push
sub
dec
ja
incl
mov
mov
enter
sub
idivl
faddl
or
dec
xchg
push
imul
lahf
mov
xor
mov
stos
in
or
inc
inc
clc
pusha
and
cmpl
inc
fildll
push
int3
mov
clc
jmp
loope
out
das
pop
loopne
push
ret
std
arpl
pop
xchg
xchg
sbb
xlat
shl
ljmp
sub
lret
push
or
dec
test
pop
adc
scas
aas
pushf
mov
shll
ret
je
loopne
outsb
sbb
fnsave
mov
in
int
mov
shlb
mov
ja
adc
and
pop
inc
dec
adc
insb
es
xchg
in
mov
out
add
out
mov
outsb
xor
out
pop
jnp
jns
cmpsl
ja
ljmp
xor
lds
push
push
sbb
inc
loop
and
shl
lods
jecxz
clc
mov
jmp
pusha
les
mov
sub
xchg
lcall
push
js
jecxz
test
movsl
imul
dec
in
jae
testl
sarb
leave
jge
mov
aad
in
cvttps2pi
test
dec
aam
ficomps
hlt
lret
pusha
mov
shl
and
dec
nop
sub
mov
dec
dec
push
int3
xchg
cmpsl
lret
ret
dec
adc
mov
add
pop
psrlw
dec
xchg
fistpll
andl
sbbb
les
sarl
pop
push
jbe
enter
xchg
lds
jne
sbbb
mov
popf
std
sbb
clc
cld
mov
repnz
inc
clc
and
jo
dec
cmp
idivb
mov
adc
outsl
cmp
push
xchg
lcall
adc
add
lret
mov
xchg
adc
in
lods
lret
popa
out
scas
decl
cwtl
push
inc
js
xchg
mov
xchg
mov
sarb
jmp
xor
loope
hlt
out
xchg
mov
ds
cmpsb
and
xor
cmp
xchg
and
pop
pop
dec
scas
cmpsb
cmp
dec
sub
int
or
jecxz
fcoml
aam
gs
pop
movsb
sub
or
fisubs
into
in
push
rcll
int
inc
aam
and
leave
lcall
cmp
push
out
test
loopne
jl
rolb
pop
jge
fwait
jge
loop
push
adc
cmpsl
hlt
hlt
sti
aam
jnp
rclb
sbb
sbb
dec
cmpsl
rcr
xchg
sysexit
cmpsb
ret
or
rorl
movsl
push
cmp
push
jle
shll
mov
fstps
mov
aaa
lcall
icebp
dec
enter
into
je
js
mov
cmp
jae
sbb
lea
and
popf
lods
or
mov
dec
jae
jmp
cmpsl
push
mov
fidivl
stos
adc
mov
loope
int
pop
test
in
mov
add
gs
sbb
and
cwtl
pusha
sub
and
dec
loope
ficoms
imul
mov
mov
cmp
add
pop
arpl
add
mov
stc
and
mov
adc
jno
and
les
cmp
loop
push
lock
loopne
mov
add
popf
packsswb
mov
clc
jno
cld
cmpl
cmp
inc
adc
imul
dec
out
daa
mov
pop
sbb
stos
fsubl
fwait
out
xchg
adc
add
sbb
test
jle
out
add
mov
rclb
dec
dec
xor
outsl
popf
adc
xchg
lret
outsl
lea
dec
pop
ja
and
jecxz
sar
setns
pop
xor
out
dec
stos
mov
mov
movsb
loopne
cmp
dec
xchg
test
jo
pop
scas
imul
mov
test
test
xchg
mov
out
sarb
inc
xor
inc
outsb
lahf
lock
js
and
inc
dec
lret
mov
push
pop
jns
popa
dec
mov
and
pushf
repz
clc
sbb
lret
arpl
dec
lret
lods
notl
fidivrs
out
cmpsl
pusha
jmp
test
shll
xor
pop
imul
orl
adc
jae
add
cmp
mov
jmp
adc
mov
mov
inc
ss
sbb
cli
loopne
mov
or
and
xor
push
les
xchg
js
gs
sub
mov
or
cltd
mov
mov
movsl
adc
test
xchg
dec
pop
daa
pushf
addb
cmp
adc
cwtd
js
adc
iret
sub
mov
xchg
fwait
clc
mov
mov
cmp
and
jge
xor
in
add
jnp
lods
xchg
sbb
popf
fmul
xor
cld
jmp
adc
cmp
inc
jbe
call
mov
cmc
mov
lea
insl
mov
lahf
xchg
xchg
push
mov
xchg
fiadds
cmp
fistpll
sbb
and
cmp
pop
lret
stos
test
and
mov
stos
push
outsb
cmp
aaa
std
xor
or
xchg
and
and
mov
imull
popa
scas
push
das
leave
jl
mov
inc
sub
push
ss
xor
xorl
and
mov
jl
fisttps
push
and
add
adc
es
sbb
inc
xor
add
inc
clc
sbb
and
jbe
push
nop
xchg
mov
xor
lea
xor
jno
or
add
fsubs
mov
push
or
cmp
leave
and
sti
in
sbb
lds
in
cli
push
jp
xor
shlb
clc
in
cmp
cmp
xchg
popf
xor
add
mov
cmpsl
sahf
mov
cmc
push
nop
add
imul
in
nop
pop
xchg
mov
test
cmp
push
and
pop
mov
dec
mov
add
cmp
fildll
lods
xchg
les
sub
add
in
jb
fstl
xor
aad
xorl
fs
int3
stc
adc
ret
add
dec
enter
mov
xchg
cmc
lret
mov
add
inc
cmp
xor
ljmp
or
outsl
mov
jns
lret
adc
notb
pop
cmp
sub
or
arpl
scas
xchg
lea
xor
cmp
sarb
and
ljmp
jg
cmp
adc
mov
jmp
and
and
repnz
sub
es
pop
stos
mov
mov
hlt
repz
pop
stos
out
ret
data16
scas
or
ficompl
jb
repz
fstpl
out
outsb
out
inc
rcrl
xchg
adc
fildl
mov
push
into
inc
push
call
and
lods
or
cld
mov
inc
jbe
sbb
jg
mov
push
pop
rcll
and
subl
lods
inc
adc
fdivl
arpl
divl
and
pop
mov
xchg
gs
xchg
cltd
in
repnz
xchg
jecxz
ret
pusha
scas
and
xor
xchg
clc
aam
gs
es
or
repz
or
popa
pop
mov
loop
inc
iret
sub
imul
dec
xor
jns
imul
mov
cmp
scas
xor
push
movsb
insl
adc
xchg
js
xor
mov
xchg
pop
mov
rclb
sti
pop
add
out
pop
rclb
sub
mov
jle
push
out
mov
cmpsb
xor
jmp
ret
push
in
jle
dec
add
mov
cmpsb
jge
mov
in
adc
pop
push
xchg
xchg
jae
or
lea
xchg
jb
sub
decl
rolb
jl
cmp
push
in
repnz
shlb
in
push
sbb
inc
popf
add
ret
fistpll
loope
aaa
rcll
into
push
cli
test
jl
imul
xor
pushf
or
in
out
mov
jb
inc
push
cmpsl
imul
mov
jmp
test
ljmp
gs
incb
aad
adc
ja
jecxz
in
inc
aam
cli
gs
repnz
and
icebp
cmp
lock
dec
cmpsb
into
leave
clc
push
enter
flds
call
jo
xchg
pushf
movsb
push
movsb
pop
sbb
adc
repz
ljmp
inc
in
jge
orl
cli
sbb
adc
cmpsb
shl
xchg
jge
xchg
int
dec
xor
mov
je
outsl
sbb
cmp
sbb
add
pop
js
or
es
jg
out
test
aas
vpaddusb
mov
popa
in
repnz
jge
xchg
jb
xor
in
mov
aas
call
dec
loopne
xchg
push
iret
es
lret
inc
jge
pop
jbe
and
popf
sbbl
lods
inc
adc
testb
ret
xchg
sub
scas
mov
pop
or
mov
sub
scas
pop
out
xchg
xor
jne
ret
xor
mov
sub
shlb
jmp
rcrl
cmpsb
in
cmp
repnz
dec
je
sbb
inc
xchg
mov
nop
or
out
jae
idivb
adc
iret
nop
push
xchg
repz
nop
and
loope
repz
xor
mov
add
or
xlat
sbb
repz
push
ror
and
add
insb
add
sbb
neg
jecxz
add
loope
jns
jmp
pop
bound
into
std
ljmp
xchg
jnp
pop
and
repnz
xor
cmpsb
rorl
mov
adc
imul
mov
out
and
out
or
xorl
icebp
fwait
inc
in
sub
in
loopne
dec
div
pop
mov
ret
cmp
ret
filds
cmp
in
rcll
in
lret
jae
mov
inc
xor
inc
xchg
jb
faddp
fmuls
pop
add
sahf
inc
ds
adc
or
cwtl
idivb
mov
sub
cmp
lahf
sahf
sahf
out
test
inc
decl
test
cmpsb
lret
bound
fcmovb
subb
rcr
ss
fwait
cmp
cltd
outsl
outsl
shl
daa
push
xchg
lods
inc
mov
popf
xor
xchg
in
jb
mov
out
push
push
lods
mov
or
pusha
lret
jp
mov
xchg
stos
sbb
movsl
mov
cmp
arpl
xchg
bound
inc
pop
ret
rcrb
push
sbbb
and
push
mov
jg
and
and
add
push
adc
adc
push
add
imul
push
bound
push
fwait
xchg
or
cmp
or
or
popf
stos
mov
call
add
fdivl
inc
push
xchg
push
xchg
lods
and
pop
lret
cmc
xchg
shrb
xchg
cmc
arpl
mov
into
jns
dec
scas
inc
push
fildl
push
test
loop
xor
out
jnp
push
sub
jge
and
mov
mov
cltd
fwait
scas
cmp
cltd
xchg
std
rcrb
fistpll
sub
pop
push
les
mov
mov
adcl
repz
dec
jb
fwait
ja
ret
xchg
mov
icebp
pop
out
imul
cld
stos
push
jnp
push
lds
movsl
addb
fbstp
xchg
fldl
mov
mov
cmp
pushl
push
out
gs
pusha
dec
cmp
insb
out
ja
add
mov
or
mov
lock
scas
dec
mov
mov
jl
fdivl
movb
imul
std
int3
inc
mov
jge
test
pusha
sub
stc
adc
pop
loop
sub
ja
mov
or
inc
out
pop
adc
jmp
bound
sub
stc
lock
sbb
sbb
push
in
pop
pop
cmp
xlat
fwait
adc
in
jbe
fdivl
adc
pop
cld
or
lret
loope
ds
sbb
sahf
push
mov
outsb
pop
cmp
mov
push
je
pop
lods
stos
pop
fsubs
mov
sbb
or
sbb
in
push
sbb
inc
cli
xor
lods
fucomi
mov
stos
and
pop
push
mov
dec
or
jp
pop
lret
stos
inc
cmc
inc
inc
js
adc
scas
xchg
aad
mov
icebp
sub
in
in
xchg
pusha
mov
pop
lods
sbb
jg
rcl
sub
jnp
push
call
cld
adc
aam
dec
bnd
sub
shrb
dec
jno
jecxz
ss
push
jbe
out
insl
jb
xchg
and
ljmp
fidivl
addl
jb
push
cmc
imul
push
pmulhuw
fcom
add
das
mov
and
xlat
popl
push
inc
push
sub
insl
adc
cmp
cli
xor
jno
sub
mov
ds
loope
shrl
inc
jecxz
ljmp
adc
and
pop
jmp
pop
mov
in
ds
xor
shl
cmpl
and
mov
dec
pop
clc
lock
dec
mov
push
jmp
movsb
and
notl
movsb
xor
loop
sub
aas
outsb
and
inc
and
inc
push
jmp
xchg
out
dec
cwtl
or
std
cmpl
mov
mov
scas
imul
mov
push
out
mov
mov
xor
xchg
repnz
pop
ficoml
or
mov
pushf
pop
repnz
jae
enter
xchg
test
dec
push
push
xor
call
lock
pop
adc
inc
xchg
cld
fsubrl
pop
and
cmp
push
arpl
ficompl
cmp
sbb
inc
leavew
sbb
sbb
mov
mov
add
das
or
push
icebp
push
movsl
add
cltd
push
test
pop
and
ds
cmp
inc
and
push
pop
das
cmp
clc
shrl
mov
mov
das
cmp
in
insl
xor
mov
xchg
mov
cld
out
daa
dec
loop
inc
nop
xchg
sbb
icebp
pop
out
xlat
xchg
dec
aas
cmp
scas
mov
lahf
call
mov
dec
xchg
call
addr16
addr16
push
test
cmpsl
add
pop
out
mov
lock
icebp
and
icebp
mov
dec
or
into
jne
je
pop
pop
faddp
adc
pop
push
lea
add
mov
in
mov
shrb
xchg
dec
cmc
sbb
push
sbb
jp
xchg
adc
xchg
adc
xor
lods
add
jne
cmpsl
inc
nop
jp
je
pop
je
or
sbb
xchg
je
pop
cmp
scas
inc
jns
popf
ds
xor
aas
loope
or
pop
fnstsw
cmp
pop
in
sbb
shrb
fwait
and
inc
add
in
sub
and
rclb
jmp
aad
aam
rolb
call
sub
lcall
add
push
mov
add
xchg
jae
lea
sbb
pop
fsubrl
stos
addb
mov
addr16
ficoms
cli
popa
sub
xchg
lods
filds
inc
in
nop
xchg
or
push
movsl
add
mov
dec
scas
dec
mov
lret
adc
mov
popf
icebp
cmp
jge
pushf
sub
xorl
xchg
fisubl
stos
add
mov
arpl
imulb
sti
rolb
sbb
or
rolb
xor
out
in
out
xorb
movsl
fincstp
sub
movsb
jno
inc
dec
popa
and
cld
sub
jmp
and
jb
leave
cmp
add
fistpl
jno
inc
sub
adc
xchg
push
mov
loop
or
adc
dec
mov
add
andb
xor
inc
enter
out
pop
push
lds
pop
and
xchg
cmp
mov
insl
test
loope
add
in
roll
std
mov
and
icebp
mov
push
hlt
clc
std
sub
popf
andb
push
mov
clc
ret
dec
les
scas
mov
push
imul
inc
out
stc
and
and
jae
addr16
out
mov
mov
daa
cwtl
jb
addr16
in
mul
pop
add
outsb
imul
imul
mov
or
xor
repz
orl
mov
push
mov
fmull
add
sub
ja
sbb
push
sub
fwait
cmp
mov
cmpsl
sbb
fidivs
je
adcb
divl
add
jg
lahf
cltd
dec
and
popf
gs
adc
and
es
loop
stos
push
or
loop
daa
insb
inc
xchg
jb
mov
nop
jl
les
cwtl
test
xchg
fs
aas
int3
es
mov
leave
push
fs
ds
and
pop
dec
int
pop
hlt
xchg
push
std
popf
or
jo
fiadds
cmpsl
shr
push
das
nop
mov
add
xchg
sub
loopne
or
adc
arpl
movsl
sbb
push
mov
cli
and
adc
icebp
cmp
daa
out
lahf
js
test
push
std
cltd
movsl
mov
fs
pop
inc
rorb
mov
mov
mov
jbe
iret
push
orl
fdivl
sub
dec
jmp
int
in
xor
dec
pop
aas
push
mov
pop
inc
js
pop
out
dec
into
sbb
pop
cmp
jo
fsub
imul
mov
cmc
fadd
and
loop
mov
xchg
or
mov
out
lods
imul
and
aaa
inc
pop
lret
xor
popa
xchg
pop
pop
mov
fdivl
les
test
rol
jg
xor
jae
cmp
test
divb
int3
hlt
aam
sahf
insb
add
dec
shrl
inc
icebp
mov
lret
insl
inc
int3
xchg
fiadds
pop
push
ja
rolb
xchg
xchg
sbb
call
rcr
cli
ficompl
sbb
adc
test
fmull
inc
les
in
orb
popa
jp
inc
jl
inc
mov
mov
dec
xor
mov
enter
movsl
lods
cmc
es
aad
xor
cmp
pop
orb
xchg
imul
pop
imulb
movsb
pushl
sahf
add
inc
lock
xor
in
pop
lret
sub
mov
addr16
or
jbe
xchg
dec
fldcw
stc
xchg
rol
in
mov
mov
xor
in
adc
es
mov
js
push
lcall
push
in
or
push
lret
add
pop
dec
jmp
sbb
std
push
jno
cwtl
ds
rclb
or
add
and
jmp
gs
inc
ret
shl
call
cld
pop
mov
fdivl
jnp
cltd
pushf
mov
mov
jmp
and
mov
adc
outsl
jno
fbstp
mov
push
adc
xlat
sub
into
lods
sbb
inc
mov
popf
cmovg
rcl
dec
stos
xchg
stc
shl
adc
pop
mov
mov
les
cmp
movsl
dec
and
leave
stos
enter
es
mov
movsl
mov
and
ljmp
push
push
and
cli
sbbl
mov
xchg
repz
xor
inc
js
mov
mov
cmpsl
jl
sbb
jns
lods
jecxz
scas
pop
fmuls
jnp
pop
inc
mov
loope
xchg
mov
jle
mov
sbb
pop
insl
loopne
dec
cmpsb
mov
push
loopne
push
sub
push
aas
repnz
movsb
out
inc
loopne
mov
dec
sub
inc
push
add
fsubrl
outsb
jno
iret
xchg
les
aaa
cmpb
inc
push
fadds
ljmp
cmpsl
popa
maskmovq
negl
aaa
jmp
call
xchg
push
dec
xor
push
insb
mov
aas
popl
icebp
add
cmpsb
out
gs
sbb
mov
push
xchg
cmovno
jbe
roll
inc
fildl
hlt
fucom
add
dec
mov
xchg
fcmovu
mov
cs
xchg
dec
push
ds
pop
cltd
lret
add
push
stos
mov
out
xlat
cmp
repnz
adc
ss
mov
lock
mov
jl
push
in
cmpsl
jns
ja
sub
jne
mov
push
in
and
test
and
mov
mov
push
cmp
lods
mov
pop
mov
in
movsb
adc
in
xchg
jne
mov
lcall
in
bnd
and
stc
xor
and
cmp
int
push
popa
xor
jge
call
sbb
repnz
movsb
psubb
shlb
mov
add
das
loop
int3
neg
movsb
test
out
sbb
cmp
xchg
into
or
bswap
push
or
fistpll
pusha
jmp
push
add
stos
lds
inc
and
aaa
cmpsl
fs
push
dec
mov
dec
jge
mov
add
dec
aam
jmp
cwtl
lret
ljmp
jbe
daa
jns
bound
imul
pop
addb
aam
fnop
xorb
hlt
daa
stos
cmp
adc
inc
and
push
and
jmp
pop
iret
mov
test
push
fsts
xchg
push
cltd
push
int
call
push
adc
mov
and
push
adc
popf
pop
popf
lret
or
repz
int3
inc
inc
or
jb
xlat
and
sarl
inc
cmpsb
or
stc
jmp
repnz
flds
mov
inc
std
inc
mov
shl
psraw
bound
arpl
sbb
push
cmp
and
daa
dec
pop
int
stos
push
into
dec
mov
adc
cmpl
xchg
jo
xchg
int
push
cmp
rolb
imul
cmc
dec
adc
pusha
add
iret
sbb
push
leave
test
xor
inc
leave
call
cmp
sbb
lahf
fsubl
and
fisubl
mov
jmp
sub
sub
push
int3
lea
enter
jne
xchg
mov
rcr
sub
aad
fcomp
jmp
add
cs
das
inc
jno
push
cmp
or
inc
or
imul
das
push
inc
mov
sbb
cwtl
repnz
imul
inc
int
xchg
jge
in
mov
negl
out
insl
shl
lret
jns
dec
out
fnstenv
jae
push
xchg
push
mov
mov
stos
orl
sbb
mov
not
cmp
xchg
push
xlat
xchg
pop
popf
clc
mov
xor
lret
je
rorl
adc
loopne
xchg
and
stos
pop
lock
adc
sbb
lds
inc
xchg
sub
mov
int
or
stos
xor
sbb
repz
xchg
aad
stos
scas
xor
inc
lret
jecxz
pushf
sti
inc
into
cwtl
ss
mov
lahf
neg
adc
ja
mov
or
jle
shl
cld
std
pop
sbb
xlat
mov
cmpl
movntq
rcrl
pop
lret
aaa
nop
pop
dec
decl
mov
sub
add
les
out
ror
repnz
pop
jp
jne
pop
popf
and
bound
aad
sbb
pop
xchg
and
mov
clc
ljmp
xchg
incb
rol
dec
push
xchg
lock
je
xor
call
jle
dec
and
fdivl
js
dec
sarb
repz
inc
out
cmc
pusha
pop
adc
dec
clc
sbb
iret
push
and
mov
cmpsl
icebp
dec
ljmp
in
in
and
adc
mov
shl
jecxz
repz
out
mov
rorb
cltd
enter
xchg
mov
and
jecxz
es
lahf
dec
cmc
mov
adc
xchg
out
jle
into
repnz
jg
xchg
rolb
xchg
xor
inc
outsb
js
mov
arpl
and
dec
ret
push
repz
rcll
pop
jns
fxch
aas
cmp
mov
pop
into
xor
jg
push
mov
and
pop
jg
jo
push
ja
mov
stc
cmpsb
and
dec
gs
xor
orb
jmp
les
inc
mov
or
jbe
movb
andb
jle
scas
call
inc
inc
or
cmp
push
xorb
repnz
xchg
jb
mov
mov
xor
xchg
mov
movsb
std
xchg
mov
jmp
inc
xchg
or
dec
insl
cmp
bound
inc
test
shl
cmpsl
sbb
xchg
add
lock
mov
push
xchg
or
push
cmp
ljmp
dec
scas
jno
xchg
pushf
jp
inc
les
inc
xor
shlb
ss
nop
inc
arpl
mov
jmp
leave
lds
repnz
ljmp
imul
out
cwtl
arpl
pop
jmp
insl
lret
and
sub
jp
neg
or
adc
pop
lret
jns
push
rcrb
xchg
or
mov
repz
mov
push
xchg
add
dec
jecxz
pop
push
inc
sub
cli
cmp
push
nop
outsb
ror
es
cli
xchg
out
xchg
outsb
or
cmp
ljmp
add
sbb
dec
enter
adc
dec
orl
and
cwtl
orl
push
inc
inc
frstor
test
inc
stos
xchg
push
lock
imul
pop
and
fdivs
cmpsb
fnstcw
scas
push
mov
mov
jecxz
mov
les
std
cld
sbb
outsl
push
leave
xor
aam
dec
jl
push
jecxz
mov
adc
sti
add
int
mov
mov
scas
jae
loopne
jns
push
stos
push
daa
jnp
hlt
arpl
push
push
in
pop
pop
jp
aam
mov
popa
and
scas
stc
sub
div
repnz
popa
arpl
inc
add
addr16
mov
xor
ljmp
xor
inc
adc
jge
ret
mov
pop
or
cmc
and
or
jns
out
dec
dec
pusha
leave
push
push
pop
xchg
push
xchg
sbb
enter
jae
sbb
xor
jne
dec
mov
hlt
out
das
ret
divl
cltd
sub
addr16
jb
pop
imulb
fdivrs
out
inc
push
pop
outsl
dec
xor
mov
or
jo
es
das
inc
fcom
movsl
mov
iret
dec
dec
mov
add
loop
or
out
je
enter
sbb
mov
jnp
jne
loopne
int3
fimuls
add
arpl
call
mov
shrb
jge
icebp
lods
pop
jle
decb
je
imul
call
sbb
mov
pop
lret
mov
mov
icebp
negb
sarl
sbb
into
inc
int3
jg
mov
xchg
adc
jo
pushf
in
or
in
jo
aaa
mov
jbe
xor
das
mov
cmp
jge
jecxz
std
lcall
sahf
ret
inc
sbb
pusha
cmp
mov
push
or
lahf
clc
outsb
or
fcoms
les
add
fwait
adc
lods
push
jbe
cmp
jnp
fcomps
rcr
xor
jge
cmc
xchg
pop
or
pop
fcmovnb
das
in
jnp
pop
out
ljmp
leave
jns
popl
or
push
pop
mov
cld
pop
push
inc
imul
dec
pop
aas
sbb
mov
shll
mov
mov
int
outsl
lret
cltd
js
sbb
adc
mov
sbb
leave
nop
sub
out
mov
xchg
cmp
push
mov
mov
jmp
or
clc
pop
pop
push
inc
lahf
jns
movsl
cli
cmpsl
insb
js
mov
ret
push
jmp
hlt
dec
out
cmpl
adc
and
cmc
cmp
inc
jo
cld
xchg
subb
jp
test
fwait
notb
pushf
adcb
mov
lret
out
clc
out
cmp
lds
xchg
inc
clc
stos
mov
sub
cmp
dec
int
fs
mov
mov
rorl
jmp
mov
loop
cmp
icebp
or
mov
xchg
mov
pop
loope
loopne
fxch
mov
daa
inc
jne
arpl
jecxz
pop
sbb
and
pop
jge
fimuls
inc
or
sarl
cltd
sub
pusha
adc
idivb
mov
sbb
xchg
fsubs
add
mov
movsb
inc
mov
sub
ja
and
cli
insl
cltd
xor
cmp
test
cmpsl
xor
ljmp
mov
push
bound
repnz
mov
xlat
add
scas
insl
loopne
fsubr
out
js
mov
and
push
clc
std
es
movb
lea
jb
unpcklps
sti
lea
dec
test
cwtl
add
std
fidivrs
test
add
xchg
ds
test
adc
mov
repnz
or
aas
std
mov
mov
jo
and
addr16
cvttps2pi
fisubl
xchg
lock
call
add
cmpsb
inc
lret
jbe
mov
dec
stc
dec
push
sarb
scas
and
stos
lahf
fcompl
add
lahf
inc
dec
cltd
inc
addr16
mov
daa
xor
cmpb
bound
ret
push
movsl
sbb
pop
ret
or
movsb
into
movsl
sahf
xchg
mov
sub
jle
inc
pushl
cs
shll
jle
adcl
adc
test
xor
imul
int3
in
inc
ret
pop
sbb
ja
sbb
xchg
lods
bound
add
sbb
xchg
cmp
xor
mov
lea
int3
add
xchg
dec
xchg
adc
rcrl
jnp
xor
ja
leave
mov
inc
or
lahf
and
and
mov
push
and
enter
cwtl
test
imulb
inc
lock
rclb
jecxz
pop
and
and
mov
ljmp
jbe
jbe
inc
sbb
aas
dec
das
out
gs
loop
push
mov
ja
stos
in
mov
jbe
out
pop
mov
push
or
insl
fstpl
imul
inc
inc
repnz
pushf
and
sbb
xor
divl
and
sub
popa
dec
shrb
sarl
jmp
loop
sbb
lcall
clc
push
pushf
in
ja
push
jne
sbb
inc
sbb
adc
hlt
fwait
xchg
jns
push
push
dec
iret
pop
push
xchg
mov
mov
mov
clc
int
sbb
rcrb
cmpsb
outsl
sti
pop
pushf
inc
jo
dec
repz
lret
push
mov
cmpsb
pop
mov
loope
mov
and
gs
enter
mov
popa
fnstcw
pushf
xchg
xchg
xchg
mov
ja
mov
ret
out
incb
and
cli
mov
mov
rolb
icebp
cmp
dec
sqrtps
cmpsl
bndldx
dec
xor
mov
les
cmpsb
icebp
fisttpl
cmp
lret
or
fcmovnbe
popa
inc
clc
pop
push
lret
cli
lds
inc
lret
mov
mov
scas
std
aam
lcall
in
popa
push
aad
mov
pop
roll
xchg
call
fldl
cld
mov
insb
pushf
add
and
int3
add
xlat
ljmp
repnz
sbb
call
inc
loope
jo
pushl
mov
add
mov
or
sub
or
pop
cli
fs
nop
nop
push
xchg
mulb
lods
jecxz
in
outsb
je
ds
dec
arpl
push
push
and
pusha
pop
jecxz
push
cmp
mov
hlt
int
repz
test
ss
incl
bound
fwait
xor
fwait
xchg
sub
or
lret
dec
and
fwait
in
xchg
aam
das
negl
movsb
sbbb
sub
minps
into
jae
dec
add
push
shrb
pushf
adc
dec
rorb
test
xor
add
cltd
and
js
push
dec
sub
lds
adc
jnp
sbb
mov
sbb
iret
and
aad
mov
hlt
jnp
movb
lds
xchg
xlat
decb
popa
gs
mov
js
dec
mov
cli
xor
jno
xchg
mov
mov
in
push
rcl
mov
mov
jb
or
pushf
adc
cmp
pop
mov
mov
mov
dec
scas
mov
fcomp
nop
mov
pop
add
lret
xchg
popf
push
add
je
or
inc
psrld
push
adc
jle
data16
dec
xor
ret
mov
add
dec
int
rolb
or
in
cmpsl
or
je
mov
inc
and
mov
das
push
pop
inc
sahf
cmp
call
adc
out
xlat
cli
lock
push
shr
mov
xchg
jmp
test
xlat
sbb
pop
or
in
and
pop
cmp
mov
loope
mov
and
xchg
inc
fs
sub
ja
gs
js
lods
icebp
lahf
cld
ret
das
and
imull
mov
cmp
call
mov
inc
mov
push
add
dec
cmp
jno
in
push
sbb
sti
xchg
mov
mov
lret
mov
jo
repz
adc
or
push
fsubr
xor
xor
cli
mov
popf
push
cli
push
daa
sbb
inc
inc
pop
rorl
loope
loop
hlt
or
inc
xchg
pop
das
aad
mov
shll
jg
stos
repz
bound
mov
cs
cmpsb
pop
addr16
xor
fimuls
jmp
sbb
imul
movl
inc
out
cmp
je
mov
loop
sub
aam
dec
in
daa
xor
xor
fsubr
bound
lret
xchg
dec
ret
dec
dec
ja
add
fwait
mov
dec
jb
lods
insl
bound
jno
aam
cmp
enter
pop
jns
jge
add
mov
pop
add
or
cmp
mov
inc
inc
lcall
add
mov
dec
jl
sbb
xchg
or
xchg
push
dec
sub
lods
xchg
test
cld
scas
hlt
inc
sbb
dec
dec
sub
sbb
mov
mov
push
cld
nop
lods
inc
push
pcmpgtb
out
arpl
mov
jl
and
shrb
lods
xchg
aas
inc
or
adc
test
and
sbb
mov
aas
or
stos
fists
xchg
xchg
pop
and
sbb
dec
cmpsl
gs
inc
adc
les
mov
out
jo
mov
gs
adc
xor
je
push
imul
mov
imul
or
xor
out
mov
addr16
jg
adc
sub
mov
xor
cltd
insb
test
mov
lock
jo
mov
rcrl
ljmp
xlat
adc
ss
xchg
insb
push
lds
push
ss
incl
inc
mov
addr16
loope
in
mov
dec
dec
jmp
mov
loopne
cmp
in
sti
mov
test
jnp
adc
aas
push
in
inc
jne
xchg
bound
push
pop
push
std
std
adc
loopne
mov
jge
std
cmpb
imul
stc
fistpl
int
sbb
add
inc
imul
sub
dec
jmp
mov
stos
or
aaa
out
fnstsw
popa
leave
out
fsubs
pop
pop
inc
iret
push
adc
sbb
mov
cmc
insl
dec
xchg
nop
aam
push
repz
dec
pop
mov
fmuls
dec
lods
ret
notb
stos
out
in
movsl
cwtl
push
mov
nop
jnp
nop
ret
jae
adc
jbe
in
bnd
addr16
pusha
ret
in
xchg
lret
xchg
test
stc
mov
daa
xor
mov
dec
data16
ss
sahf
bound
imul
sub
jl
je
cmp
dec
lods
pop
xchg
cwtl
lock
out
jmp
mov
jb
scas
nop
stos
jmp
or
xor
cmp
cmp
test
fnstenv
xor
push
or
leave
pushf
jbe
mov
or
mull
addr16
or
and
cld
cltd
stc
pop
popf
in
pop
pop
mov
xchg
mov
fmulp
jecxz
in
mov
out
mov
push
aas
lock
pop
lea
arpl
add
add
jno
ficoms
xor
or
rcrb
push
aas
pop
sub
dec
scas
mov
inc
mov
loope
addr16
enter
xchg
out
add
addr16
and
add
add
or
xor
addb
push
pop
fidivl
xor
fwait
push
jo
mov
cmpsb
mov
mov
jmp
mov
hlt
add
fcoml
jb
inc
das
test
in
sbb
cmp
lods
jno
mov
cmp
adc
adc
xchg
ljmp
std
mov
int3
je
inc
jecxz
mov
outsl
rclb
scas
int3
int
add
jmp
add
clc
xor
push
fists
mov
je
adc
sbb
dec
mov
cmp
cmc
pop
daa
sub
sub
lahf
lds
and
dec
cmp
cmpb
push
pop
in
xchg
mov
add
je
pop
fdivrp
push
and
clc
mov
leave
push
mov
xor
dec
into
jnp
push
or
jmp
dec
adc
test
add
loope
cmp
pop
jecxz
push
ljmp
test
push
sub
jns
or
inc
scas
and
mov
nop
aas
and
mov
stc
pop
stos
mov
pop
mov
shl
xchg
lahf
outsl
and
lock
mov
loop
jp
mov
add
dec
in
mov
dec
fsubr
int3
aaa
pop
push
pop
or
fsubrp
out
jp
jne
inc
leave
mov
in
jne
mov
loopne
mov
dec
mov
add
mov
xchg
scas
mov
mov
int3
jbe
cltd
fwait
rcr
mov
iret
push
push
scas
out
sbb
cmp
lret
jno
lcall
repnz
inc
mov
std
inc
cmp
test
test
test
lds
cmp
push
ficoml
js
mov
pop
out
loopne
mov
enter
mov
cwtl
add
pusha
push
pop
icebp
std
pop
jmp
insb
js
jo
mov
jl
mov
std
or
stos
sbb
dec
jge
in
js
dec
add
push
iret
sub
popf
paddw
fisubs
pop
insl
arpl
icebp
es
cmp
lahf
dec
push
fdivr
sub
adc
push
pop
push
pop
inc
mov
insb
push
rclb
clc
add
cli
jmp
test
rcll
dec
and
adcl
das
cmp
lods
inc
shl
push
xor
iret
test
std
and
enter
and
out
enter
imul
in
shll
insb
jns
mov
adc
add
out
lea
addr16
dec
add
xor
js
popf
sub
fwait
movsl
sbb
xor
inc
adc
lods
dec
stc
sub
rcl
push
lds
fstps
jo
mov
shlb
xor
insb
mov
cmpsb
jl
testl
cwtl
mov
sbb
sbb
adc
mov
sbb
test
ljmp
jo
fsts
popa
dec
push
fidivrs
incl
jle
into
push
dec
loope
mov
hlt
pop
cmc
sub
mov
xor
pushf
xchg
das
sbb
jmp
add
jnp
iret
pop
inc
into
test
cs
stos
fs
jne
adc
icebp
sbb
mov
jne
and
jecxz
mov
icebp
xor
sub
out
ret
repz
test
add
pop
mov
mov
mov
ljmp
xor
rorb
insl
je
sar
and
mov
jle
sbb
mov
rcrb
mov
sbb
add
out
fisubs
orl
mov
fcmovnu
dec
sbb
sbb
xor
xchg
cmpsb
fsub
ret
shll
or
mov
aad
mov
jge
aaa
les
inc
pusha
idivl
shrl
inc
fsubl
xchg
and
xor
into
mov
out
inc
cmpb
push
mov
push
cmc
test
mov
mov
pushf
sbb
mov
xchg
jb
inc
out
out
xchg
fucomi
dec
pop
enter
es
push
sub
aad
or
jno
les
lret
jo
jnp
aad
fisttps
adc
data16
inc
push
fdiv
inc
cmc
shlb
test
add
subl
pop
popf
aam
fistpl
and
insl
ds
sub
and
push
sub
mov
gs
std
imul
scas
mov
cmp
dec
sub
lcall
sbb
mov
lods
push
xor
xor
xorb
mov
inc
ljmp
sbb
scas
mov
mov
cli
test
sub
and
enter
cli
shll
movsl
repz
cs
mov
daa
aad
pop
lea
inc
push
pop
sbb
adc
cld
dec
dec
push
stc
inc
mov
inc
sub
push
xor
data16
roll
or
popa
push
inc
cmpsb
ret
fmuls
aas
dec
push
jge
sub
mov
icebp
jae
leave
call
scas
or
test
test
adc
push
jl
jne
and
pop
mov
xlat
fisttpll
jp
push
sbb
pusha
dec
jge
xchg
xchg
cltd
insb
inc
push
mov
sbb
rorb
push
dec
xor
push
or
andl
adc
adc
icebp
stos
mov
lea
out
stos
icebp
pop
pop
cltd
cmc
and
movsl
add
push
insl
push
dec
inc
xchg
xor
cmp
enter
jae
mov
movsl
fs
and
jecxz
lock
xchg
xchg
pop
cmpsb
add
and
mov
cmpsl
xor
xchg
cmpsl
js
inc
dec
and
lods
pop
and
test
bound
jns
inc
mov
out
xchg
and
adc
loop
cli
adc
pusha
sub
in
bound
xchg
addr16
lods
lock
sub
lret
dec
aas
pushw
mov
out
lret
adc
push
les
cmc
sbb
lods
out
xchg
push
daa
jg
mov
sarl
jnp
lret
adc
aaa
lcall
mov
dec
xchg
pop
outsl
jbe
mov
mov
pop
inc
out
mov
leave
push
cmp
popa
push
xchg
out
das
mov
ficoml
hlt
adc
fildll
popf
call
jge
mov
lret
jnp
outsl
pop
lahf
mov
cli
cmpsb
xor
mov
cltd
and
mov
dec
jp
scas
jmp
inc
loopne
adc
cmpsb
out
xchg
xlat
ljmp
push
popl
push
pop
divb
mov
rolb
int3
xor
mov
fsub
pusha
pusha
mov
mov
mov
xor
pop
inc
jns
out
inc
mov
loope
xorl
or
fstpl
jge
add
jmp
cmpsl
popa
sbb
lds
pop
cltd
sub
shll
out
mov
xchg
pop
aam
adc
aam
aad
cs
popf
or
mov
ds
mov
pusha
mov
cld
pop
fdivr
inc
cwtl
cmc
repz
jge
mov
int3
data16
test
test
or
test
test
fcom
inc
loop
push
out
out
sub
loope
movl
pop
add
rcrl
add
jle
push
push
inc
inc
sbb
js
sbb
xchg
jmp
daa
cwtl
mov
pop
xor
sub
int
enter
pop
icebp
in
aas
inc
fwait
mov
xchg
inc
cmp
and
jmp
jo
popa
and
mov
mov
outsb
jne
pop
lods
xchg
inc
cmpsb
loop
push
mov
sti
aam
pusha
xchg
out
pop
popf
or
popa
pop
or
jg
ljmp
mov
idivb
xchg
mov
xor
leave
mov
std
jb
xchg
pop
cmp
pop
jno
xchg
and
fidivrl
int
cli
andb
addr16
test
loope
int
mov
or
xor
xor
jmp
or
adc
mov
and
and
addb
pop
nop
push
inc
cs
sahf
daa
enter
in
loop
xor
push
dec
jmp
dec
int
pop
mov
fcoms
aam
outsb
push
jge
jle
loopne
push
ret
jge
in
mov
rorb
insb
test
sets
bound
inc
inc
js,pt
push
jp
insl
lcall
nop
add
repz
xchg
loope
jl
enter
rorl
dec
jmp
pop
cs
setb
insl
add
nop
pusha
in
loopne
in
call
scas
jno
jnp
mov
mov
mov
push
aas
xor
insb
sbb
jb
dec
mov
lods
ret
shll
sbb
push
mov
popa
and
insb
std
adc
adc
into
push
in
faddp
inc
lods
pop
lret
fs
addr16
iret
push
adc
ljmp
and
mov
insl
mov
adc
push
adc
sbb
int
rclb
add
mov
sbb
sbb
or
sub
mov
test
and
sub
addr16
test
js
int3
sub
bound
mov
mov
xchg
pop
push
sbb
sub
jb
mov
or
ljmp
fs
pop
out
mov
call
icebp
xchg
push
and
jbe
lahf
pop
dec
push
mov
ljmp
dec
cltd
and
loope
mov
and
add
out
lods
adc
adc
push
loopne
mov
push
inc
xchg
std
in
pop
jecxz
adc
outsb
jne
mov
adc
popa
adc
inc
ljmp
ljmp
ljmp
lahf
mov
jo
popa
mov
xchg
lret
inc
push
cld
cwtl
cmp
pop
jl
cmp
push
ds
xchg
jo
jae
sbb
jmp
jb
push
mov
outsb
jle
aas
sub
mov
sub
cmp
outsl
int3
jo
or
xor
arpl
jns
nop
xchg
testl
mov
mov
inc
pop
dec
hlt
orl
cmc
dec
aad
mov
scas
fldenv
dec
imul
xor
adc
test
push
lahf
push
das
orl
aad
bound
dec
inc
sti
jbe
adc
test
and
outsl
xor
imul
and
pop
or
push
frstor
test
cmp
cmp
cmc
jge
xor
ret
mov
cmpsb
xchg
cmpsl
repz
aaa
inc
sub
xorb
xor
cmp
add
stc
cmp
pop
cmp
test
int3
sub
enter
add
out
jecxz
test
ficoml
in
das
mov
pusha
cmc
jmp
or
cltd
fwait
mov
cmc
into
push
arpl
add
adc
adc
mov
pop
sbb
sub
mov
push
in
xor
ss
jmp
mov
mov
inc
sahf
cwtl
adcl
rorl
incb
add
push
fdivp
arpl
push
pop
cmpsb
dec
aam
mov
loopne
cmp
sbb
mov
rcrb
jne
fisubs
push
mov
int3
lret
add
roll
adc
xor
enter
jge
xchg
dec
inc
lea
subl
arpl
mov
es
icebp
adc
insl
mov
ret
hlt
daa
std
cli
daa
in
std
test
gs
jo
mov
bound
adc
jge
fldt
pushw
int3
cld
add
nop
stos
cs
into
jmp
scas
cwtl
adc
fstps
inc
outsl
mov
faddl
adc
cltd
cmp
sub
fldt
and
cs
cmc
push
iret
mov
dec
jno
popf
pop
and
fidivrl
test
les
xchg
dec
lss
test
dec
cmp
inc
lea
mov
dec
jno
inc
fisttps
sub
cmp
scas
inc
stc
mov
cmp
dec
stos
sub
lret
mov
cmc
and
in
or
sub
cmpxchg
xor
inc
pushf
xor
pop
lock
dec
xchg
lret
cmpsb
fldcw
jb
mov
push
arpl
cld
xchg
mov
dec
ljmp
pop
sub
imul
in
adc
jecxz
jp
fsubl
jo
pop
xor
jne
test
fwait
mov
sbb
and
je
cmp
lcall
sub
add
and
es
push
lret
push
repnz
and
and
adc
pop
hlt
fdivr
testb
leave
pop
pop
cmpl
mov
cmpb
xchg
add
lahf
loope
lcall
dec
pusha
inc
scas
cltd
fisttpl
sub
push
mov
aaa
or
mov
push
jp
xchg
xchg
jecxz
stos
xor
xlat
push
fisttpll
loope
stos
stos
fdivr
jb
roll
out
aaa
in
pop
outsb
mov
into
sbb
sub
sbb
into
je
daa
xchg
jnp
and
xchg
sti
xor
out
inc
stos
pop
xor
dec
cmp
rorb
push
pop
addb
lret
push
fildl
es
divb
jg
mov
rorb
das
daa
push
or
sub
adc
in
out
int3
cmp
js
lcall
outsl
loopne
xchg
and
ds
es
outsb
les
jl
sub
add
lea
out
mov
sbb
mov
xchg
mov
into
ja,pt
jge
inc
adc
dec
in
out
cmpl
push
cmpsl
aas
pop
add
and
add
andb
lcall
dec
nop
lahf
jae
push
addr16
imul
xor
mov
xchg
arpl
or
fisttpll
iret
push
xchg
mov
push
and
cmpsb
shrl
cmp
and
xor
decb
or
fnsave
dec
sbb
popa
in
gs
pop
fcmovnbe
fstl
inc
add
or
inc
insl
pop
dec
mov
cwtl
push
mov
jb
or
out
cmp
sbb
xor
jg
bound
xchg
jmp
dec
les
jecxz
fmulp
or
xor
cltd
and
in
push
sub
lock
ja
adc
scas
rolb
repnz
in
les
push
jne
enter
adc
jae
adc
ss
add
dec
mov
loop,pt
pop
jb
add
or
ret
adcl
arpl
xchg
in
es
jnp,pn
test
leave
mov
inc
mov
and
pusha
sbb
xchg
sti
cs
jle
sub
jle
push
mov
cmp
jo
shll
loop
xor
sbb
inc
sbb
xchg
andb
out
and
arpl
shr
xlat
xchg
lods
outsl
pusha
ret
loope
mull
pop
pop
ret
jge
pop
data16
push
mov
xchg
pop
jno
cmp
movl
in
dec
and
fnstsw
dec
inc
ds
cmp
mov
orb
cltd
std
rcrb
and
xchg
xchg
out
sahf
adc
in
movsb
clc
dec
mov
fucom
jge
and
push
pop
fwait
pop
lods
loope
aas
jmp
mov
repz
in
jl
push
mov
mov
mov
aas
push
fnstenv
sub
inc
pop
repnz
pushf
fs
jecxz
insb
sbb
sub
jno
mov
pop
cmc
xor
sahf
push
mov
sub
dec
inc
shr
mov
shl
add
sbb
lret
mov
into
push
or
xor
or
into
cwtl
int3
leave
or
xor
lret
adc
xchg
push
in
add
mov
dec
insl
dec
sarw
push
mov
inc
xchg
enter
fidivrs
lods
push
out
ja
sbb
jmp
or
inc
ret
pop
mov
dec
jp
xchg
add
cmp
arpl
popl
cmp
xchg
stc
gs
mov
adc
ss
aad
add
xor
ss
out
inc
scas
adc
mov
cmpb
and
sub
scas
stos
sub
fld
push
pushl
push
jo
arpl
sbb
adc
sub
push
mov
pushf
jno
cwtl
lahf
or
mov
adc
daa
sarb
dec
repz
aaa
push
sub
mov
cmp
in
std
daa
enter
cmc
xor
inc
out
cltd
mov
mov
pusha
adc
sahf
push
stos
pop
inc
cwtl
data16
movsl
mov
xchg
jne
addr16
nop
scas
cmc
daa
call
push
jmp
inc
mov
out
sti
dec
xchg
fstpt
pop
movsb
ljmp
cmp
sub
or
adc
mov
in
inc
leave
es
shll
xor
addb
lahf
push
call
pop
arpl
lds
in
dec
mov
out
cmp
inc
push
subl
or
jg
or
dec
insb
and
ja
jmp
test
cmp
mov
jmp
lret
jbe
jb
cltd
das
add
inc
shrb
xchg
lods
out
int
test
sub
je
hlt
std
xor
push
mov
xchg
cmpsl
pop
pushf
xchg
aad
mov
inc
push
add
insb
mov
mov
shll
imul
test
test
js
das
xor
xchg
addr16
push
iret
das
cmp
push
xchg
or
add
push
es
fisttpll
adc
cmp
call
pop
repnz
sub
mov
mov
jnp
lahf
test
adc
dec
push
gs
in
pop
lea
sub
push
and
rorb
nop
inc
sub
das
sbb
insb
mov
xchg
scas
testb
mov
and
sub
push
filds
das
pushl
xchg
add
jmp
xor
mov
sbb
cmc
clc
inc
sar
pop
pusha
divl
mov
loop
dec
pushl
dec
and
lcall
add
and
and
cmp
rol
pop
adc
inc
cs
and
movsb
pusha
in
shll
mov
or
dec
test
mov
hlt
outsb
test
jge
jle
mov
jnp
push
loope
or
jne
jecxz
divl
les
xchg
and
xor
lahf
sub
push
or
into
mov
mov
dec
mov
cmpl
pushf
popf
loope
in
or
cwtl
shll
pop
out
addr16
ror
call
leave
add
inc
or
pushl
pusha
sbb
cmpsl
sahf
mov
cwtl
test
mov
dec
adc
gs
sti
mov
addr16
repz
lea
mov
mov
jns
out
sub
adc
pop
repnz
les
mov
mov
jns
push
test
sbb
in
mov
push
ss
ret
repnz
xchg
cmp
addr16
pushf
push
fisubrl
fwait
adc
add
lods
aaa
xchg
lret
imul
xor
cmpsb
sbb
sbb
daa
sti
into
ficomps
push
push
aad
movsb
mov
das
fldenv
xchg
std
mov
and
pop
popa
push
insb
sbb
hlt
jmp
shl
rorl
ljmp
mov
pop
sub
pop
pop
dec
leave
les
adc
xchg
jle
push
or
movsl
or
les
fidivrl
insb
adc
push
sbb
movsl
lods
inc
in
repnz
ret
mov
loop
mov
aam
jns
fbld
sbb
xor
adc
mov
pusha
xor
js
inc
dec
sbb
fisubs
add
adc
and
dec
push
mov
incw
lret
sbb
adc
dec
imul
jo
or
push
cmpl
jge
es
xchg
test
aas
adc
arpl
adc
leave
xor
cwtl
jg
cli
call
jecxz
lock
mov
dec
sti
jae
mov
inc
and
sbb
jo
mov
or
out
inc
inc
xor
adc
mov
loope
in
push
shrl
sub
stos
hlt
inc
test
shl
sahf
mov
inc
sub
leave
cltd
add
mov
sub
and
icebp
lahf
add
cmp
mov
sub
adc
repz
jg
mov
push
and
jno
xor
or
dec
outsl
jl
iret
xchg
iret
sub
js
xchg
mov
test
mov
je
je
aaa
rorb
pop
daa
movsl
jle
adc
daa
jbe
xor
mov
xor
cmpsl
mov
push
cmp
cltd
or
fnstcw
adc
push
sti
xchg
adc
mov
loope
or
ljmp
inc
jg
mov
and
gs
int
loop
adc
jne
scas
out
aaa
bound
das
push
mov
mov
ret
scas
cmc
ljmp
stos
jg
push
dec
cmp
test
imul
sbb
jns
mov
sahf
sbb
pop
inc
adc
xlat
add
xchg
fildll
out
rclb
scas
lret
cld
xor
sub
dec
or
mov
aad
push
outsb
imul
push
pop
mov
icebp
shrl
pop
inc
loopne
not
lds
lcall
das
mov
mov
jno
das
cmp
into
out
into
int3
lock
pop
cmp
mov
dec
add
out
push
mov
daa
push
xor
add
cs
pop
xchg
imul
sbb
test
cmp
hlt
addb
pushf
mov
or
lret
sub
mov
pop
push
add
mov
rcrb
fildl
out
jle
aaa
fwait
jnp
imul
fwait
movsbl
add
dec
sbb
inc
aas
lahf
je
add
and
or
rorl
cltd
jp
pop
fstps
addl
es
cmp
cmp
adc
push
sar
fidivrl
pop
mov
inc
cmp
sbb
xchg
fsubs
jmp
sbb
loope
cmpsl
mov
cmc
out
mov
jmp
out
aam
js
push
mov
pop
shlb
dec
rorb
jo
insl
aad
mov
aaa
pop
nop
stc
scas
popf
jl
push
scas
les
xlat
inc
stos
sub
outsl
cmpsl
ljmp
xlat
shlb
pop
insb
adc
mov
cmpsl
pop
sti
pop
lods
popa
lods
sahf
adc
insb
mov
xchg
in
test
lahf
jae
inc
cltd
dec
dec
bswap
daa
inc
sub
rcrb
jle
and
adcb
pop
sub
ret
and
or
frstor
imul
mov
stc
sub
xor
push
and
mov
in
data16
cmpsl
inc
dec
push
jne
ds
add
faddl
arpl
sar
cmp
inc
out
cmc
mov
jne
imul
js
fidivs
repnz
clc
xor
jecxz
rcr
mov
and
ds
or
add
test
adc
es
out
push
push
xchg
xorl
push
inc
shr
ret
fiaddl
inc
loopne
out
data16
adc
pop
xor
sahf
das
lcall
inc
je
dec
cmp
fistps
pusha
popa
mov
std
sahf
stc
insb
fmuls
mov
gs
dec
mov
mov
mov
repnz
xor
jle
in
rorl
pop
int
cld
inc
cmp
aad
dec
mov
sub
mov
and
push
cmp
inc
cmp
xchg
xlat
nop
pop
mov
dec
loope
imul
dec
movsl
daa
adc
loope
cltd
dec
fs
shll
pop
les
in
mov
sub
push
fmull
daa
sub
xor
into
in
jb
mov
sbb
jne
push
jmp
lret
scas
sub
outsl
shll
add
stos
mov
dec
divl
mov
dec
push
adc
xchg
pop
sub
sbb
imul
shl
mov
movsl
movl
rclb
mov
push
dec
das
xchg
push
aam
out
xchg
and
jle
and
mov
cmpsb
loop
sub
int
or
in
mov
enter
add
out
fldcw
out
xor
popf
push
inc
jge
add
push
jb
nop
push
scas
test
daa
push
push
adc
test
or
outsb
push
or
mov
lret
push
push
stos
int
std
sub
js
xchg
add
ror
jbe
daa
frstor
loopne
ja
push
call
scas
pop
xlat
wrmsr
cwtl
call
iret
xor
add
iret
test
sbb
sbbl
pop
push
gs
in
xchg
jge
add
test
mov
jns
imul
emms
sub
imul
ljmp
sbb
sti
cmp
fwait
clc
cld
xchg
sbb
bound
dec
test
jb
sbb
or
mov
fists
movsl
xchg
repz
loop
std
shll
call
push
shrb
test
popf
lods
test
sti
and
out
mov
jmp
ficomps
in
imul
xor
mov
sbb
jl
sub
shl
addr16
inc
adc
push
or
push
xor
jb
pop
add
lea
and
cltd
sub
cmp
xlat
mov
shrb
inc
or
ds
add
mov
cli
inc
or
mov
sbb
add
in
push
or
add
out
in
stc
sbb
lock
stos
loope
outsb
sbb
cli
push
cltd
jo
leave
jno
in
adc
incl
mov
pusha
aaa
jl
loop
test
mov
sub
mov
iret
mov
insb
pop
pop
inc
and
push
js
stos
xor
stos
loop
icebp
ja
fwait
roll
push
and
sbb
cmpsl
mov
sbb
lods
test
add
push
movsl
aam
mov
pop
lret
loopne
cwtl
mov
and
mov
dec
inc
pop
xchg
stc
lcall
into
std
add
rolb
xlat
popa
and
imul
push
push
movsb
pushf
out
xor
sub
push
adc
hlt
lahf
idivl
outsl
ror
scas
jnp
ljmp
dec
into
inc
cmp
inc
ret
js
inc
push
aam
xor
out
ret
adc
cmp
and
push
cltd
fistl
sbb
les
icebp
cmp
xchg
lods
sbb
fwait
jmp
mov
js
cmpsl
dec
pop
shrl
imul
and
aad
sub
jge
lods
adc
cld
dec
xor
sub
in
hlt
shl
sub
mov
push
test
mov
adcb
pop
cmp
mov
adc
adc
xchg
ja
adc
xor
fnstsw
add
dec
ret
pop
int3
pop
and
jnp
sub
add
fs
int
mov
xor
xor
push
stc
stos
idivl
mov
in
mov
sbbl
call
imul
fisttpll
adc
ja
and
in
xor
enter
insl
pop
fstl
sub
mov
cmpsl
inc
pop
pop
outsl
xchg
cmp
rcl
jmp
xor
jbe
mov
in
adc
int3
test
insb
fsts
adc
sub
push
leave
adc
mov
xchg
cmp
mov
inc
and
push
xor
nop
cmp
push
adc
cmp
js
imul
ficomps
stos
inc
xchg
scas
aaa
aas
jmp
aam
cmc
mov
lahf
mov
shlb
jp
pop
or
jecxz
mov
jmp
mov
xchg
jno
imul
jmp
fcoms
pushf
fstps
mov
jns
outsl
out
jb
inc
js
mov
je
imul
sub
and
mov
ret
out
dec
push
lcall
adc
and
scas
cli
out
iret
loope
mov
push
mov
int
mov
pop
test
push
in
jmp
pop
aaa
add
xor
arpl
dec
sub
and
add
shlb
mov
insl
in
or
push
mov
lea
add
pop
dec
xorb
adc
pop
cmp
loopne
imul
popf
xchg
hlt
jb
add
dec
xchg
jns
dec
lret
hlt
jl
ljmp
arpl
inc
sbb
xor
and
xchg
xchg
enter
popa
mov
loope
testl
sbb
mov
xchg
movsb
xor
lcall
insl
dec
xor
aaa
dec
es
jbe
arpl
or
jmp
cmpsb
pop
jecxz
in
fistpl
xchg
sar
int
xor
jne
xor
imul
shrl
rclb
gs
fmul
mov
popa
and
data16
test
add
cld
sub
xchg
lods
push
dec
jns
aas
xor
jge
stos
jecxz
mov
test
movsb
pop
into
jae
adc
mov
jle
dec
call
shrl
icebp
cmp
cmp
push
push
pop
les
fsts
fcmovnb
popa
pop
cmpsl
pandn
inc
and
dec
xchg
in
jmp
hlt
xchg
jge
inc
sub
jnp
xchg
nop
sub
sbb
sub
fisubs
js,pt
stos
mov
sti
cmp
test
push
lock
pop
out
in
scas
inc
inc
in
or
mov
push
push
jl
pop
xchg
movb
fwait
pop
imul
leave
jmp
or
inc
in
mov
loop
cli
push
aam
adc
ror
jg
repz
cmp
fidivs
sub
mov
mov
mov
sahf
dec
ljmp
in
jg
mov
adc
jle
mov
add
gs
mov
out
call
gs
aaa
or
mov
jns
insb
das
add
or
jbe
loop
imul
inc
jmp
adc
cli
and
lock
xor
sbbl
lea
inc
lret
cli
mov
mov
and
mov
push
movsb
mov
mov
std
cmp
xor
ss
fistpll
call
test
leave
and
std
mov
jno
add
fiadds
jnp
add
cmp
xorb
cmp
loope
mov
outsb
jl
out
and
dec
or
inc
mov
cli
repz
lods
dec
mov
arpl
cmp
inc
jle
sub
mov
or
daa
fsts
aam
cmp
notb
cmpsb
rcl
mov
mov
jg
add
jns
movsl
dec
mov
divl
pop
mov
pop
fiadds
loope
xchg
es
pop
inc
mov
sbb
cli
addb
and
push
rcrl
out
and
cmpsb
test
cmp
sub
push
lock
cmp
in
sub
jb
or
cmp
icebp
leave
testw
mov
sbb
lcall
adc
loope
push
je
jmp
rcrl
inc
mov
cmp
outsb
dec
in
pop
pusha
mov
push
xorb
xor
jge
cmp
cmp
clc
pop
cmp
cmp
test
clc
sbb
dec
scas
pop
insb
shl
mov
es
jle
lret
cltd
out
add
sbb
and
push
mov
push
xor
mov
xchg
int
inc
test
test
xor
sub
dec
dec
push
jbe
jl
out
std
fisttpll
xor
cs
push
pop
movsb
mov
outsl
daa
pop
aam
std
mov
jae
ss
enter
add
inc
xlat
or
add
popa
adc
xchg
mov
ret
xlat
outsb
cmp
mov
cmp
into
cli
xor
icebp
fstpl
jle
je
mov
fprem1
mov
addr16
in
xchg
pop
icebp
pushf
out
enter
or
aas
insb
mov
mov
push
scas
lds
pop
popa
push
mov
stc
push
and
and
int3
push
es
jo
icebp
pop
rcr
xchg
outsl
xlat
mov
sbb
jnp
lret
sbb
mov
add
cmp
jb
in
les
push
lods
add
lods
add
ljmp
inc
jecxz
out
push
imul
sahf
pop
int
loope
in
jg
fsubp
ja
adc
add
leave
adc
mov
and
data16
mov
inc
loopne
mov
pop
or
pushw
fldl2t
push
aad
int
iret
lret
pop
xchg
adc
ds
popf
setle
dec
dec
fs
xchg
cmc
imul
lea
cmp
dec
push
stc
les
lods
push
and
xchg
push
mov
and
cli
mov
cmc
mov
push
adc
push
mov
sbb
mov
cmpsb
jmp
add
pop
mov
mov
inc
cli
rcl
out
rcr
imul
call
out
add
shl
lock
test
enter
or
jb
popa
dec
pop
jns
push
inc
std
insl
adc
jle
pop
mov
in
cmpsl
loopne
aaa
xchg
fldenv
outsb
xchg
or
iret
mov
aam
xchg
and
out
insl
push
int
movsl
pushl
cmp
adc
je
or
shlb
fildll
mov
or
call
pop
adc
push
xchg
mov
ljmp
pop
jp
cli
inc
xchg
jne
sti
fsubrp
movsb
dec
xchg
cmp
push
fldl
stc
cmp
imul
clc
lods
repz
inc
xor
scas
adc
push
lahf
xchg
add
vrcpss
cmp
imul
movsl
add
test
out
pop
xchg
push
aad
lahf
std
and
lret
out
jmp
testb
aad
push
es
hlt
popf
cmp
sbb
out
sub
pop
lcall
stos
andb
or
mov
pop
sub
xor
mov
aaa
pop
dec
jb
flds
lock
push
or
cmp
sub
sbb
daa
incl
jecxz
mov
mov
mov
std
mov
repnz
mov
push
add
xchg
sbb
imul
mov
cli
negl
shll
add
jbe,pt
mov
mov
cli
sub
adc
pop
add
add
test
add
cld
push
aaa
sbb
inc
into
xchg
push
or
lahf
ss
sub
ret
add
cwtl
push
adc
adc
out
insb
cmpsb
lcall
mov
in
aas
mov
cmp
test
enter
popf
dec
js
or
data16
xor
mov
fld1
add
iret
pop
cwtl
shlb
pop
xchg
push
mov
dec
mov
fnsave
add
mov
add
xor
dec
int3
roll
iret
jge
add
pusha
in
and
sub
cmp
push
dec
fisttpll
sbb
pushf
shll
pop
sbb
cmc
ljmp
inc
pop
fwait
ret
pop
loopne
test
stos
and
add
or
inc
nop
sti
in
cli
pop
xchg
scas
popl
add
jnp
or
fsubr
popf
xorl
mov
jne
sbb
mov
mov
push
mov
push
or
fcom
or
dec
push
mov
jae
mov
les
inc
fwait
ret
mov
loop
dec
jge
adc
mov
ds
add
shlb
lea
rol
stos
jmp
sbb
mov
and
pop
in
int3
jg
xchg
push
jo
push
sbb
add
xchg
pop
dec
dec
sub
out
mov
add
cmpsb
push
popa
js
dec
cli
cmp
icebp
sbb
fsub
fsubl
xchg
sub
enter
mov
inc
cmp
movsb
icebp
lret
and
mov
cmp
mov
inc
xor
ja
outsb
out
ficoms
lods
cmp
add
jl
cltd
ds
not
mov
or
rcll
ret
stos
pop
imul
xor
xchg
push
ss
mov
loop
and
iret
ja
xor
fdivl
outsb
inc
lea
les
shll
mov
sbb
jbe
fdivrl
int3
iret
das
jp
stos
imull
ret
loopne
test
into
neg
addr16
pop
mov
cmp
lahf
lret
pop
push
fsubrs
cmp
lret
cmp
pusha
shll
or
jae
push
dec
jl
dec
inc
out
into
movsb
cmc
dec
jl
mov
insb
aas
xchg
inc
ljmp
xor
jnp
sub
push
and
pop
jmp
inc
jle
daa
pop
mov
push
add
pop
mov
inc
sti
push
xchg
push
cmc
xchg
inc
std
and
dec
inc
xor
into
insb
pop
bound
jle
xor
sbb
test
pop
jmp
movsl
inc
and
dec
out
jg
add
lods
ds
addb
dec
mov
lds
pop
lods
arpl
cmc
ret
lds
in
pop
xor
in
cmc
or
std
dec
pushf
push
xor
lret
cmp
sbb
sub
xchg
jbe
and
in
leave
xor
lods
mov
mov
test
mov
and
lcall
sbb
xlat
jno
add
inc
popa
pop
mov
and
add
dec
fnstsw
sarb
push
dec
adc
lcall
jge
roll
lcall
jbe
inc
icebp
jl
addr16
dec
iret
enter
mov
pop
jle
aad
adc
or
mov
jmp
and
cmc
cltd
xor
lds
sahf
or
sbb
dec
jp
mov
fs
shlb
cmp
cmp
out
mov
sub
push
xor
repnz
daa
fbld
mov
cltd
fcmovu
mov
mov
and
push
mov
xlat
and
mov
les
dec
push
daa
mov
out
sub
stos
mov
adc
dec
mov
xchg
cli
pop
cwtl
gs
stc
test
out
sub
xchg
jl
les
out
jp
adcb
mov
sbb
jbe
dec
push
scas
lea
pop
xor
in
xchg
or
nop
lcall
outsl
cmpsl
add
bound
arpl
sub
xchg
rcrb
lock
repnz
repz
popf
movsl
test
pop
xor
imul
mov
aam
cmpsb
adc
inc
movsl
mov
or
int
test
popa
mov
div
sub
rcrb
test
mov
pop
adc
mov
test
sbb
test
lahf
rcr
push
fwait
lcall
test
out
jle
pop
pop
mov
sahf
push
jns
add
aad
push
je
rcl
negl
cmp
sarb
lcall
push
mov
ret
outsb
leave
jmp
and
mov
xchg
jb
stos
dec
mov
inc
loope
inc
adc
adc
test
pop
cmp
sub
jecxz
test
xlat
sahf
fstps
dec
push
clc
outsb
in
popf
cmpsl
shll
inc
cmp
jb
sbb
xor
add
mov
mov
cmp
xor
jb
inc
sbb
sbb
das
push
sarb
in
mov
daa
inc
xchg
pop
dec
out
ss
in
jne
inc
xor
push
stc
sbb
push
mov
jb
lahf
mov
negb
cmp
rcr
or
cmp
mov
xchg
mov
popf
sar
lret
xchg
fs
mov
cmp
mov
dec
test
arpl
mov
clc
lahf
push
fwait
insb
mov
cmpsb
or
jl
andb
imul
ret
ficoml
dec
out
xlat
lds
jg
xchg
inc
mov
pop
mov
mov
jle
shll
leave
push
mov
xchg
push
ficomps
xchg
addr16
xchg
xchg
arpl
mov
insl
sbb
mov
data16
loopne
repnz
add
xchg
xor
add
test
icebp
out
movsl
mov
lds
sub
push
sub
inc
arpl
cmp
in
inc
into
imul
loop
rcrb
push
jg
jns
fidivrl
jno
sub
rcrb
cltd
mov
mov
adc
dec
xchg
in
hlt
shr
enter
cmp
sarl
jge
mov
lahf
mov
push
dec
mov
push
test
movb
inc
ds
ja
pop
imul
dec
je
fisttpl
nop
and
add
stos
lods
dec
fmuls
cltd
pop
or
cltd
xchg
dec
fldt
pop
mov
push
mov
mov
inc
adc
lahf
cmc
pop
ficoms
ficoms
ljmp
mov
sub
and
xor
push
inc
leave
or
imul
jp
ljmp
aas
adcl
daa
insb
pop
jmp
mov
enter
dec
jbe
lret
imul
jg
sbb
shrb
mov
add
nop
xor
sbbl
fistpl
mov
int
xor
mov
push
cmp
lock
loopne
in
mov
call
jbe
mov
repnz
mov
or
fcoml
jge
mov
jecxz
lds
jnp
add
loope
gs
arpl
mov
mov
xchg
cmp
add
xor
out
test
xor
jmp
test
fs
stos
cmc
mov
dec
jo
imul
mov
enter
sub
movsb
imul
fadd
stc
lcall
incb
icebp
dec
lods
add
mov
mov
sub
push
push
test
test
test
sbb
test
hlt
xchg
push
sbb
daa
mov
loop
insb
xchg
dec
lahf
push
mov
dec
clc
out
dec
scas
xchg
lods
rol
pusha
sub
mov
jb
pusha
mov
or
or
or
mov
loopne
or
mov
and
call
xchg
lock
pop
bound
cmpsb
pusha
ljmp
adc
ds
push
lods
movsl
cmc
nop
fldcw
jo
mov
sub
cmp
adc
push
popa
or
cltd
push
movsl
push
es
pop
lds
xchg
cmp
dec
pop
mul
lret
push
into
out
jmp
cmpsl
mov
je
or
in
inc
out
mov
test
dec
cld
jecxz
jl
mov
mov
aad
and
andb
mov
dec
lods
lods
je
cmpl
into
adc
add
pop
dec
out
pusha
test
cmc
mov
iret
fistl
lods
cmpsl
test
pop
dec
nop
hlt
add
or
data16
lret
push
mov
daa
xor
arpl
sbb
call
xchg
sub
adc
lahf
int
adc
sbb
imul
sub
lods
test
arpl
scas
popf
mov
ljmp
std
out
dec
jne
cwtl
stos
xor
leave
mov
mov
jbe
fadds
and
and
sub
dec
lret
ljmp
sbb
cs
lock
xchg
cmpb
cwtl
mov
mov
leave
ret
pop
mov
js
ret
sti
mov
or
dec
jo
jne
pop
push
jns
aaa
push
xchg
fistl
cld
xchg
jnp
arpl
addr16
fcompl
dec
sub
repnz
jp
repnz
test
mov
fisubs
sbb
xchg
xchg
inc
push
sub
cmp
stos
and
inc
shl
daa
fildl
imul
jno
and
lcall
adc
test
xchg
and
pusha
inc
add
test
in
cwtl
fimull
adc
xor
mov
in
mov
out
ljmp
rorb
or
sti
fildll
inc
insb
lahf
lock
and
cli
pop
out
test
sub
pushf
xor
fwait
sti
pop
jl
mov
sbb
icebp
sahf
jmp
mov
push
sbb
aas
in
sti
sbb
xor
sub
test
jne
in
and
or
gs
arpl
mov
lods
dec
ja
daa
fldt
cmp
mov
mov
fs
dec
push
testb
jmp
test
fwait
cmovno
mov
sub
and
sbb
aas
sbb
gs
xchg
ret
stc
aas
fdivrs
sub
push
dec
mov
add
mov
cmc
out
paddsw
mov
shrl
in
int
adc
pop
daa
in
mov
cmpsl
imull
out
push
pop
outsl
mov
xchg
mov
xlat
shll
dec
mov
xchg
push
or
test
lock
out
stc
lods
dec
inc
or
mov
mov
sub
test
arpl
dec
lret
push
adc
xchg
ds
jno
push
xor
into
cmc
xchg
stc
iret
cmp
fsub
daa
inc
pop
pushf
cmpsl
dec
adc
sub
repz
aam
mov
incb
push
sti
adc
andl
ret
inc
or
mov
es
push
adc
jg
add
pop
into
aad
out
jmp
scas
sub
jo
dec
in
ret
mov
fcoms
fsubrs
fwait
mov
pushl
add
in
icebp
sbbb
xor
aad
add
cltd
nop
add
andb
jl
test
mov
adc
mov
mov
mov
daa
in
or
cmp
xor
outsl
out
popa
cmpsl
inc
mov
mov
gs
cmc
and
repz
mov
dec
insb
cmp
shl
popa
in
mov
xor
sub
sub
aad
xor
bound
push
or
movsb
xchg
loopne
cmpsb
inc
lea
int
stc
cmp
sbb
mov
lahf
push
xchg
out
ret
mov
daa
mov
cmp
sbb
xor
push
xchg
dec
aas
pop
mov
addb
cmpsb
mov
push
sti
inc
movsl
loope
and
lods
adc
loopne
aam
xor
into
je
mov
iret
aas
and
lahf
push
xor
mov
nop
sub
test
pop
push
cmp
or
test
cmp
pop
mov
inc
nop
sub
jne
lahf
es
add
mulb
inc
pop
movsl
mov
sub
int
ret
add
addl
scas
aad
push
sub
push
adc
fsubrl
fs
repz
push
je
leave
add
out
outsb
repnz
aas
lret
mov
inc
mov
stc
ret
lods
push
lret
mov
shll
and
and
rorl
dec
inc
jb
popa
imul
xor
mov
gs
pop
cmp
add
cmpsb
mov
test
mov
jb
jmp
rcll
dec
iret
and
inc
rcl
out
add
lcall
push
sub
dec
arpl
push
loopne
das
out
call
inc
dec
lret
sbbl
test
sub
fs
scas
sbb
aaa
aad
lahf
nop
jecxz
inc
mov
cmpl
jae
xchg
inc
lods
cmp
gs
add
aam
iret
mov
mov
mov
mov
cmpb
clc
push
loop
xor
mov
cmpsl
loope
dec
out
rep
insb
lahf
cmp
ds
insb
pop
pop
or
or
sti
shrb
iret
out
mov
clc
mov
cmpsl
out
ffree
test
hlt
xor
and
test
mov
push
imulb
push
or
mov
popf
inc
dec
fdivrs
xchg
loope
jp
ret
adc
mov
mov
cmp
and
cmp
loopne
cmp
xchg
inc
dec
xor
cltd
pop
repz
mov
adc
mov
inc
jmp
movsl
rorb
lret
insb
cmp
mov
loopne
out
push
mov
mov
mov
dec
mov
loope
orb
mov
sbbb
je
int
dec
insb
xchg
push
xchg
jmp
imulb
mov
loopne
inc
stc
imul
dec
enter
lds
and
or
test
ljmp
pop
cmovo
ret
inc
mov
lea
add
lods
and
ror
sbb
rolb
sub
dec
fucomi
xchg
push
je
mov
std
imul
dec
pop
push
pop
jns
pop
in
loop
ficoms
sbb
nop
xchg
test
inc
dec
stos
stos
add
pop
cmpsl
fnsave
sbb
mov
push
push
push
and
lret
mov
dec
xchg
inc
cmp
add
pop
adc
test
setb
sarb
push
lock
aad
mov
adc
and
pushf
call
push
imul
jge
mov
push
jle
pop
gs
jp
and
add
xchg
icebp
or
xor
xor
dec
into
into
pop
push
cmc
jg
push
imul
addr16
mov
inc
icebp
jb
popa
int3
cmpsb
and
adc
adc
mov
mov
in
movsl
add
test
push
daa
dec
in
xor
cmp
lods
shll
inc
fistpl
sub
pop
ret
stos
jns
pop
loopne
mov
pusha
mov
test
pop
mov
inc
lods
push
stc
mov
ret
js
mov
push
mov
jno
in
mov
lods
mov
fxam
repz
add
jae
inc
jp
aas
mov
imul
dec
adc
add
sub
pop
xchg
xchg
jnp
stos
call
test
cmp
and
rcl
pushf
enter
jnp
leave
scas
adc
and
pop
shrb
aas
inc
mov
cli
fldl
mov
ds
push
loope
pusha
out
inc
xchg
ret
pop
adc
or
mov
pop
sub
mov
lods
rol
mov
lock
cmp
lea
xchg
mov
lods
jecxz
jl
xor
cld
xchg
mov
cmpsl
cltd
push
aam
test
insb
mov
cmp
rorl
add
sbb
mov
lock
sahf
jns
int3
adc
ja,pt
leave
icebp
sbb
add
fiadds
jl
sbb
decb
ds
jno
cwtl
call
inc
or
and
data16
enter
ss
pop
jp
add
cmpsb
cmp
stos
cmp
dec
adc
popa
xchg
pushf
int3
pop
lods
mov
cld
mov
lcall
clc
inc
jecxz
aam
mov
cmp
dec
bound
icebp
cs
fisubrs
push
int3
leave
fadds
jle
outsl
cmp
outsl
mov
sub
mov
inc
jmp
dec
jmp
pop
xchg
cmpsb
das
dec
outsb
cli
adc
xchg
cli
outsb
jp
mov
sub
mov
test
nop
sub
repnz
jno
pop
and
sbb
push
daa
cwtl
push
call
mov
push
mov
add
inc
popl
aas
jne
pop
push
sub
xchg
jno
mov
xor
test
push
loop
daa
sub
jo
sbb
ret
cs
imul
lods
adc
cmp
or
loopne
mov
cltd
popw
mov
aaa
push
pop
push
stc
insl
push
insb
je
add
punpckldq
int
fidivs
mov
lods
mov
xlat
dec
int
cld
test
out
negl
nop
imul
xor
add
imul
popf
inc
jl
xor
dec
sub
in
xor
sub
jb
fstl
mov
fmulp
aaa
mov
fdivrp
mov
jecxz
popa
outsb
mov
out
test
test
cmp
mov
pop
iret
dec
aaa
in
mov
call
fld
push
mov
push
jle
push
xchg
ss
shll
push
mov
in
or
daa
jecxz
mov
fs
repz
pop
sub
mov
enter
xchg
in
pop
leave
add
in
jle
fs
cs
loop
pushf
mov
enter
sub
adc
adc
incb
dec
cli
mov
push
pop
and
popa
aaa
pop
les
jecxz
std
push
mov
xchg
sahf
jbe
aad
dec
mov
scas
sbb
push
sub
scas
mov
adc
inc
test
adc
sbb
xchg
inc
popf
pop
jle
push
sbb
inc
add
inc
cld
pcmpeqd
loope
aaa
mov
dec
fwait
add
out
popf
mov
cmp
sub
je
and
out
imul
ja
addl
test
sbb
mov
daa
inc
dec
mov
loope
dec
jbe
into
das
mov
add
dec
push
inc
js
mov
pop
mov
xchg
ja
pop
cmp
add
mov
pop
test
bound
mov
mov
test
fcomp
add
push
sahf
jmp
es
cmp
div
push
jge
ds
mov
adc
test
in
fnstsw
outsl
mov
add
lods
into
jmp
daa
inc
jl
cmpl
jno
into
fisubs
pop
ds
flds
test
rorl
in
add
xchg
xchg
cmpsb
dec
push
xchg
lret
mov
scas
dec
aam
adcb
jae
lret
xor
incl
bound
jp
data16
push
xorb
movsb
cmp
xlat
push
ss
js
insb
dec
cmp
aad
mov
roll
test
unpcklps
cmp
push
testl
mov
cmp
xchg
jno
ja
or
loopne
enter
cld
or
adc
mov
sbb
imul
faddp
cmp
or
aaa
or
mov
xchg
mov
test
imul
xchg
xchg
mov
mov
push
lret
xchg
je
xchg
jge
cmp
push
aam
push
dec
popa
sub
jb
daa
aad
ljmp
orl
xor
ds
pop
cmp
fdivl
mov
arpl
xchg
jns
mull
mov
xchg
mov
inc
addr16
repnz
dec
mov
pop
loopne
mov
cmpl
jnp
sbb
stos
push
add
fsts
scas
push
fistpl
pop
cmp
or
imul
mov
inc
cli
lcall
pop
mov
sbb
aaa
mov
mov
cmp
mov
lods
jge
cmpsb
movsl
jp
mov
dec
int3
xor
cmc
movb
pop
dec
lret
inc
nop
pop
ja
jbe
cmp
sub
xchg
cwtl
loopne
fmuls
xchg
int3
dec
bound
imulb
xchg
sbb
xor
je
dec
cmp
push
add
inc
or
insl
dec
xor
add
out
lds
fldpi
nop
dec
repz
xchg
mov
sbb
mov
fistps
add
sti
pusha
in
arpl
xchg
mov
cld
xchg
or
dec
pop
sti
push
daa
mov
or
pop
stos
cmp
cmp
or
test
push
jmp
arpl
mov
cld
mov
call
jno
lret
jecxz
inc
mov
sbb
loope
cmp
sbb
out
sbb
loopne
insb
test
enter
xlat
lahf
fldenv
pop
in
adc
lock
lahf
inc
jg
rol
push
out
xchg
sub
shlb
jo
or
jmp
pop
out
xchg
aam
add
idivl
push
cwtl
xchg
jl
mov
into
ret
mov
adcl
dec
add
push
imul
repz
xor
sahf
int3
pop
fcomps
pushf
int
sbb
sbb
jo
call
shr
push
fdivrl
xor
stos
lret
cwtl
jg
test
adc
rcl
dec
addr16
movsb
loope
lcall
les
xchg
mov
out
in
push
and
cltd
xchg
bound
xor
pop
xorl
xchg
adc
mov
test
adc
pop
or
popf
sbb
mov
aad
aaa
js
or
ficoms
rcll
push
fs
fildll
xlat
fdivl
push
cmpsl
test
xor
pusha
mov
insl
cmpsl
call
pop
mov
ret
cli
call
sub
mov
into
mov
movsb
scas
test
jns
pop
in
cltd
xchg
add
fwait
xor
sbb
adc
mov
xlat
sub
in
popf
push
xchg
mov
cmp
cltd
cmp
mov
push
scas
jns
lods
mov
movsl
hlt
push
jne
fst
icebp
sub
and
loop
bound
add
fdivs
sub
outsl
cmp
cld
or
xor
push
or
out
or
enter
dec
cmpsb
push
pop
xchg
pop
adc
insl
leave
add
insb
xchg
inc
sahf
shrl
lock
aaa
movsb
popa
add
fs
mov
out
inc
mov
dec
movsb
add
or
jno
mov
lret
dec
inc
aas
xchg
arpl
xchg
push
fwait
adc
mov
stos
mov
fs
aam
mov
jbe
negb
lock
xchg
enter
out
mov
sub
push
jnp
adc
aad
inc
cld
adc
inc
pop
popf
pushf
pop
loope
xor
fcoms
jle
jne
sbb
mov
add
out
loopne
insl
dec
adc
push
outsl
ljmp
mov
notl
les
xchg
cmpb
jp
jle
jno
stc
mov
and
dec
data16
cltd
push
jge
gs
pop
dec
das
jbe,pt
xor
mov
fadds
cmp
pop
in
je
push
xor
mov
mov
cmp
test
sbb
pop
push
into
and
lcall
mov
dec
xlat
inc
shr
test
jg
sahf
pop
and
jns
lds
popa
in
push
sub
cmpsl
call
adc
adc
aaa
cs
out
jle
cli
insl
cli
add
lock
inc
imul
xor
movsb
test
add
dec
cmp
pop
cld
ss
mov
push
xchg
in
shr
mov
cli
popa
xchg
popa
out
divb
das
push
sbb
gs
lock
inc
enter
and
enter
out
add
hlt
jmp
mull
popf
enter
int
movsb
jg
movsl
repnz
pop
addr16
jmp
cmp
cmpsb
outsb
in
test
clc
test
or
xchg
aad
int
mov
push
shll
addr16
sub
jecxz
dec
jns
test
jo
fimull
xor
addr16
in
leave
mov
push
lods
imul
aas
push
iret
fadd
pop
ret
popa
and
mov
sub
sub
inc
dec
fists
cli
sub
jbe
sbb
adc
hlt
and
and
inc
bnd
mov
mov
push
enter
jg
addr16
and
xlat
leave
pop
ds
jle
mov
inc
and
fldcw
sti
mov
mov
mov
xchg
fcoml
sbb
ja
mov
jae
aaa
push
daa
or
es
sti
cmp
ljmp
pop
inc
insb
lea
and
fdivrl
js
cmp
in
cmp
adcl
jbe
aas
stos
orb
jle
push
ret
jmp
sub
sub
loopne
mov
lock
lods
movzbl
push
mov
js
mov
and
jecxz
orl
test
pushf
or
imull
aam
sub
cli
fcmovu
lods
lock
pop
lods
push
xlat
data16
jbe
inc
jmp
and
pop
inc
lods
cld
in
ja
test
sbb
enter
or
mov
add
sbb
push
jae
xchg
adc
inc
idivl
aaa
jno
test
dec
cmc
jmp
dec
cmpsb
mov
mov
les
and
jno
in
testl
dec
sbb
jg
sbb
push
fisubl
mov
aas
filds
fidivl
jne
leave
dec
cmpsb
jo
jle
push
adc
sub
pusha
iret
scas
inc
outsb
leave
mov
pop
xorb
mov
and
lahf
push
mov
cwtl
sti
addr16
push
and
sub
jl
mov
xchg
mov
sub
push
mov
gs
cwtl
test
leave
clc
rcll
ret
adc
outsb
pop
aad
mov
das
sub
mov
sahf
out
mov
loop
dec
pop
ror
scas
mov
adc
mov
imul
sbb
ret
loopne
and
jae
add
fwait
xor
or
pop
aaa
pop
stos
mov
mov
add
ret
mov
lock
cli
cmp
shrl
pop
imul
imul
cmp
push
rcll
mov
pusha
jmp
jl
jne
leave
outsl
sbb
cmpsb
stos
int3
add
cmp
pop
ja
fiaddl
cmp
mov
mov
mov
jmp
lods
cmc
in
pop
dec
imul
loope
lock
out
push
gs
xchg
xchg
jmp
mov
mov
or
cwtl
adc
test
into
jmp
addl
mov
outsl
or
fwait
adcb
cmpsb
aaa
inc
jb
add
cmp
scas
dec
das
xor
mov
cmp
rol
insl
jp
xchg
ret
add
add
stc
in
push
rolb
sub
sub
ljmp
subl
imul
fisubs
mov
pop
pop
xchg
fwait
add
rep
notl
add
jns
or
leave
push
and
sub
sbb
and
sbb
mov
pop
jecxz
adc
cwtl
clc
mov
pop
mov
push
jp
out
sbb
push
mov
inc
mov
mov
sbbb
cltd
lods
dec
ds
dec
arpl
jb
cmpsl
shr
pop
addl
dec
aaa
fldt
push
cmp
shlb
outsb
cmp
ds
mov
or
and
popa
jno
cmpsb
dec
mov
xor
mov
push
xchg
inc
sub
and
shlb
push
and
pop
push
and
imul
inc
push
lret
loope
bound
imul
dec
add
out
mov
pushf
xchg
test
xor
push
out
movb
push
pushf
loopne
stc
sbb
adcl
inc
jns
sub
loopne
sub
cwtl
xor
in
mov
movsl
arpl
or
popf
mov
jmp
push
loopne
dec
fdivs
jb
lock
popa
or
dec
dec
fnstenv
aaa
notl
in
aaa
movsb
aam
fnstenv
adcl
or
ss
sahf
push
cmp
sub
mov
das
jl
push
push
mov
inc
ds
push
cld
addl
xor
aad
test
mov
mov
push
daa
push
or
notb
and
xchg
pop
xor
adc
or
lcall
pop
adc
in
gs
addl
jno
fdivrp
jg
fwait
jp
jo
sbbl
cmp
inc
ret
xchg
mov
lcall
nop
jge
or
int3
aaa
fiaddl
xchg
jle
add
cmp
imul
sub
push
xchg
pop
fwait
insl
mov
sti
adcl
nop
xlat
push
push
into
test
lahf
mov
xor
xchg
sbb
sbb
mov
popa
mov
push
adc
into
fidivrl
int
daa
jb
mov
mov
test
and
repz
sub
push
jns
and
push
add
mov
jne
cmp
les
lret
and
fnsave
lcall
ja
xor
cld
sub
push
stc
xchg
cmpsb
adc
mov
bound
jnp
jno
div
outsb
jb
xchg
push
mov
sahf
push
jnp
push
lock
nop
adc
in
inc
push
sub
inc
pop
in
xor
push
inc
popf
sbb
ss
cs
sbb
dec
insb
adc
shlb
bound
inc
dec
pop
cmp
cmpl
push
sahf
and
pause
pop
lahf
inc
sahf
jno
imul
mov
leave
add
test
loope
repz
jno
aas
mov
and
sub
jne
pop
inc
std
sub
cmpsl
in
mov
jne
cmp
pop
jl
xor
scas
inc
mov
pop
fs
dec
mov
cmp
xchg
xor
sbb
adc
mov
adc
xchg
jae
xchg
cli
dec
insl
inc
cltd
lea
cmp
cmp
js
jns
aaa
mov
dec
or
rep
cld
hlt
popf
aaa
push
xchg
sbb
xor
mov
mov
pop
sarb
daa
cmpl
popa
out
pushf
out
cli
call
pop
dec
rorb
add
mov
adc
aas
dec
pusha
and
into
faddl
ljmp
jecxz
test
xor
lea
jmp
fistpl
sub
ja
imull
pop
popf
mov
push
cmp
cwtl
xchg
xor
out
frstor
inc
and
cmp
lret
lods
jbe
movb
lods
repnz
sub
test
xlat
mov
out
xchg
xorb
jno
rcll
and
pusha
mov
xchg
sub
sub
daa
push
fadd
lahf
add
fsubrs
fistpll
inc
test
std
test
pop
jae
pop
xor
test
cmpl
mov
push
ljmp
filds
push
push
mov
stos
stos
sbb
lcall
fmul
push
call
out
mov
hlt
call
lock
sub
fcoml
mov
push
rcl
mov
push
cld
gs
push
gs
fs
mov
dec
in
jle
out
xchg
outsl
aaa
test
add
or
and
or
sub
cmp
mov
mov
mov
inc
ljmp
ss
push
sub
pop
in
and
insl
int3
subb
mov
icebp
xchg
mov
ds
sub
pop
pop
inc
sbb
dec
enter
dec
into
add
inc
mov
or
fildl
andl
inc
inc
leave
or
hlt
jmp
cmp
out
imul
movsb
jnp
cmp
cwtl
xor
int
js
lock
jnp
in
rclb
add
xor
sti
pop
loope
mov
fcmovb
jp
cmp
dec
fidivs
mov
pop
sbb
mov
cwtl
in
fimuls
pop
adc
popf
lret
cmpb
mov
mov
test
cli
pusha
mov
int
and
mov
add
xlat
xor
rorb
popa
adc
loope
leave
xor
sub
cltd
scas
scas
leave
aaa
cmp
xor
inc
inc
ficompl
cmp
sbb
dec
les
mov
xor
sbb
add
out
jo
fs
loop
mov
mov
sbb
insb
adc
std
gs
push
push
pop
and
icebp
sub
add
push
mov
mov
xchg
cmc
sbb
scas
mov
jp
pop
xor
cltd
adc
sub
or
xchg
addb
jne
add
out
movsb
stos
add
cltd
pop
mov
pop
add
and
inc
jae
aaa
clc
dec
adc
mov
mov
jmp
ds
adc
inc
cmpsl
adc
sbb
out
xchg
clc
test
mov
insb
lcall
and
push
not
ret
ret
pop
sbb
inc
cmp
movsb
sahf
sbb
add
jecxz
sub
pop
lret
or
aam
jecxz
or
in
mov
int3
pop
cmpsl
inc
mov
and
mov
add
push
leave
jecxz
dec
xchg
sti
sub
or
xor
in
xchg
iret
dec
test
cwtl
mull
or
enter
fdivl
adc
xchg
test
xchg
cmp
inc
lcall
jae
ffree
cmpsl
fdiv
xlat
dec
jge
aad
inc
shrb
test
out
jno
cs
scas
dec
xchg
popf
cmp
sub
and
mov
or
xlat
jns
pop
cmp
inc
inc
sub
xlat
daa
bound
mov
jne
cmpsl
lock
inc
es
loop
sub
mov
mov
xchg
outsb
insb
aam
cmp
inc
shrl
test
insb
outsl
lea
test
les
ds
or
incl
test
ds
incb
sub
add
xor
cmp
jmp
sub
outsl
ja
mov
push
inc
adc
ss
roll
inc
push
mov
repnz
jmp
mov
push
ds
lock
fwait
outsl
repz
scas
std
pusha
push
adc
and
cmp
stc
dec
add
lahf
push
push
or
dec
arpl
cmp
testb
pop
call
rep
mov
repnz
mov
mov
jnp
insl
enter
push
push
lock
test
mov
seta
cmp
and
test
inc
add
and
dec
lcall
lea
mov
mov
or
hlt
adc
mov
inc
or
and
sbb
les
push
add
push
iret
lret
pop
mov
repz
mov
push
mov
int3
sub
mov
add
fwait
imul
xchg
sub
adc
addl
dec
fcoml
cmpsl
mov
aaa
adc
adc
mov
sbb
sub
jp
inc
mov
mov
push
stos
cmpsb
pop
xor
push
lcall
repz
push
js
data16
lret
bound
enter
mov
icebp
adc
inc
push
stc
gs
leave
pop
inc
mov
mov
mov
mov
mov
mov
mov
push
scas
cwtl
stc
jbe
aad
out
fidivl
cli
daa
cli
incl
repnz
shl
sub
call
push
push
jp
das
daa
es
sub
ja
cmpl
icebp
in
iret
std
jnp
fisubl
notb
std
adc
decb
cmp
cmp
aaa
jns
test
ja
adc
mov
lcall
dec
pop
loopne
sub
pop
int
jno
push
dec
xchg
mov
and
or
hlt
push
icebp
sbb
in
repnz
mov
cs
subb
inc
jmp
mov
daa
push
cmpsb
out
dec
fwait
adc
sar
test
pop
fcomps
or
arpl
jae
xchg
mov
call
mov
shrl
je
enter
push
lahf
push
data16
xlat
mov
repnz
outsb
out
inc
fiadds
repz
jle
lock
js
addps
xor
hlt
rcll
pop
sub
adc
or
pop
sahf
leave
aad
mov
mov
scas
xor
pop
jecxz
loope
popf
sbb
mov
jge
push
aas
shll
jge
jb
std
cwtl
mov
rcr
adc
adc
push
fdivs
outsb
idiv
push
ror
push
jge
pop
test
adc
lcall
in
daa
adc
mov
mov
mov
inc
adcb
cwtl
jmp
inc
cli
mov
lea
push
shlb
jo
mov
mov
xor
mov
fidivs
jp
repnz
xor
jns
xor
icebp
mov
add
or
scas
xchg
adc
movsl
cmp
ss
inc
movsl
out
add
or
aaa
push
aad
cs
icebp
push
mov
inc
inc
mov
out
movsl
outsl
mov
icebp
jbe
imul
dec
jg
xor
lcall
inc
aas
sub
aas
loop
xor
dec
mov
push
push
mov
nop
les
js
insl
push
es
dec
push
stos
jb
sub
mov
push
shll
mov
or
scas
fdivl
mov
add
mov
fisubs
dec
inc
shll
fdiv
jb
ljmp
mov
cmp
inc
fldenvs
fisttpl
js
add
ret
std
loope
leave
popf
cwtl
out
mov
ljmp
icebp
push
movsl
pop
pop
xchg
fs
bound
ljmp
stos
mov
pop
xchg
or
test
dec
jbe
std
fdiv
jns
pop
sahf
stc
adc
dec
and
in
xor
shl
pop
dec
pop
insb
mov
cmp
ret
sub
sbb
in
pop
mov
in
add
sub
push
cmp
cmp
iret
cmp
dec
jno
cmp
pop
cs
pushf
and
in
iret
jo
xor
xor
das
mov
push
hlt
push
addl
sub
test
push
inc
jg
pop
add
fdivrs
icebp
sub
jle
inc
cltd
xorb
fsubl
daa
pop
ficoml
mov
out
loop
inc
idivb
xor
jmp
jp
fldenv
sbb
dec
rorb
jecxz
inc
ja
out
xorl
insl
cmp
push
rol
dec
sbb
shl
cmp
jmp
fs
insb
xchg
aaa
jae
popf
xchg
test
sub
out
or
stos
push
cmpsl
repz
mov
mov
cmp
inc
out
mov
dec
cmpsl
fwait
jge
sbbl
pop
cmp
mov
aam
adc
andb
rcrl
xor
ljmp
mov
stos
sub
mov
mov
pop
mov
aad
push
imul
jle
xor
add
mov
pop
or
inc
nop
pusha
mov
xchg
outsb
jmp
imul
xchg
cmp
dec
pop
xchg
or
mov
cmp
and
mov
insb
ret
pop
inc
cmpsl
cmpsb
cmpsl
jmp
add
outsl
shll
lock
mov
and
rcrb
jns
leave
out
decl
jo
xchg
shrb
mov
aaa
std
bound
pushf
pop
aad
frndint
bound
mov
inc
sbb
fbstp
mov
push
cmp
aaa
fcompl
cwtl
push
and
idiv
ret
or
pop
addr16
jg
fcmovnb
jnp
or
mov
aaa
imul
jae
lea
cld
es
push
leave
mov
mov
dec
addr16
dec
dec
push
lea
or
jnp
cmp
mov
hlt
push
push
cmp
stos
loop
sub
mov
ja
mov
jp
cmp
cwtl
je
ja
fidivrs
cmp
push
and
call
mov
xor
xor
mov
sbbl
inc
into
sub
bound
clc
pop
pop
mov
jb
inc
xchg
xor
mov
repnz
out
notb
fmuls
ret
sub
dec
shlb
mov
stos
fs
sub
mov
xchg
cld
fcoml
cld
sub
pop
aam
mov
or
inc
test
jno
sub
mov
and
ficoms
and
movsl
sbb
scas
and
dec
fisubrs
xchg
xchg
sarb
aaa
call
push
pop
lock
in
mov
mov
gs
jmp
out
pop
pusha
mov
ss
xorl
dec
ret
mov
ficompl
shl
push
out
pop
mov
mov
aad
aam
fiaddl
sub
outsb
daa
jo
mov
pushf
cld
mov
aam
push
lcall
push
out
mov
int3
in
and
imul
testb
test
mov
call
pop
sarb
xorl
sbb
push
test
scas
std
ficoms
and
jne
push
xchg
jl
mov
leave
sahf
and
push
xor
mov
push
add
add
jae
sbb
xorb
adc
lahf
fadds
loopne
add
push
ficomps
xor
inc
js
add
inc
lods
insl
stos
cmp
popa
adc
call
and
add
mov
mov
dec
mov
int
pop
dec
xchg
idivl
mov
xchg
ret
movsl
shrb
dec
aaa
push
or
xlat
aad
xor
xor
sbb
cs
xor
jmp
xchg
sbb
fcmovnu
imul
lods
dec
addr16
cmp
fists
push
push
add
cmpsl
add
test
cmp
and
jns
lret
int3
adc
mov
or
out
mov
popa
dec
loopne,pn
sub
xchg
inc
inc
dec
aad
mov
jno
cmp
add
call
inc
mov
sbb
xor
cmp
or
pop
cmp
add
push
mov
jns
dec
aas
xchg
add
or
ds
ds
mov
cmp
inc
idivl
pop
sub
lahf
mov
into
div
adc
sbb
jo
js
rcrl
test
imul
repnz
jmp
sbb
mov
popf
outsl
ret
lret
out
inc
mov
data16
std
inc
xchg
stc
sbb
call
imul
fcomps
pop
fwait
aam
outsb
inc
int3
pop
dec
push
pop
pop
jmp
add
or
mov
and
das
iret
das
shrl
fmuls
insb
adc
cmpl
mov
fdivr
cmc
or
sbb
repnz
test
repnz
in
or
sbb
sub
push
fs
and
inc
js
pop
in
and
or
jb
xchg
cmp
out
jnp
mov
xchg
jb
imul
xor
js
jg
jl
inc
push
xor
into
mov
clc
pop
pop
jb,pn
jmp
jo
push
roll
ja
sbb
int3
or
repnz
inc
fidivl
dec
loop
arpl
int3
fistl
int
jbe
pop
pop
idivb
xlat
shrl
aad
sub
pop
mov
mov
rorb
push
mov
es
ret
cmp
push
shrb
popf
adc
push
pop
cmc
loop
mov
mov
lea
shl
popf
or
pop
test
incl
mov
and
dec
adc
outsl
cmp
sbb
or
mov
imul
or
movsl
loopne
pop
jno
dec
pop
test
ror
ret
lret
popf
inc
divl
push
pop
ja
scas
stos
jle
sbb
cmpsb
mov
cmp
inc
pop
cmpsl
lret
lcall
sub
lahf
pop
cmp
jp
cmp
xchg
nop
aas
lods
xor
daa
mov
xchg
xchg
jg
jge
sarl
dec
sahf
lds
mov
js
orl
rol
jmp
ret
lahf
lods
nop
xchg
xor
sub
fwait
lret
lret
or
add
dec
sbb
and
cmc
dec
clc
and
jo
sbb
mov
mov
gs
sub
test
out
test
cmpsb
jge
push
sbb
xchg
xchg
mov
iret
cmp
aas
add
push
jne
in
xchg
dec
and
pop
sahf
mov
outsl
cmp
test
lods
int3
mov
sub
push
xor
sbb
xchg
and
inc
add
jg
ljmp
sub
sbb
push
cmp
aaa
xchg
in
je
inc
sub
icebp
repz
jno
out
jne
push
add
arpl
insb
sbb
mov
clc
mov
jno
dec
push
jmp
sub
and
fptan
pop
sub
push
push
shrl
or
mov
add
popf
adc
jmp
xchg
sahf
jno
out
push
int3
jae
icebp
dec
bound
je
adc
mov
cmp
pop
ljmp
mov
add
fisubl
aad
or
jg
in
popf
jns
popa
inc
ficompl
mov
and
pushf
xor
addb
mov
mov
mov
loopne
jo
aaa
aas
push
mov
imul
test
dec
mov
mov
pop
or
jbe
sarb
loopne
jg
hlt
push
sub
jl
rcll
cmp
lcall
jmp
mov
jbe
xchg
icebp
out
imul
iret
push
repz
aad
dec
int
mov
push
lahf
lret
jge
sub
sub
adc
dec
cmp
jg
fildll
lcall
mov
or
jp
and
movsb
push
sarl
pop
jno
xor
dec
jmp
addl
adc
sbb
ss
xchg
or
rcrl
jns
add
shrl
pop
pop
mov
dec
popa
add
pop
arpl
xchg
mov
mov
pop
jbe
adc
mov
das
mov
pop
jmp
scas
gs
xchg
popf
out
aaa
and
mov
jbe
out
cmpsl
test
popa
push
jge
cli
sbb
inc
adc
xchg
sub
push
aam
arpl
dec
mov
cmp
sub
sbbl
jb
dec
ret
sahf
ljmp
adc
lock
pop
and
mov
add
icebp
or
push
and
pop
add
lahf
fs
or
or
in
xchg
rol
sbb
xchg
iret
sbb
push
inc
push
xor
lahf
jbe
xchg
dec
lea
test
nop
sti
fstpl
adc
mov
lcall
jle
inc
sub
movsl
xor
inc
lock
adc
xchg
pusha
sub
xor
fnstenv
xor
jns
hlt
push
mov
add
ret
incb
jg
les
test
in
xor
iret
cwtl
mov
mov
dec
mov
test
dec
pop
cli
mov
inc
scas
test
cwtl
and
movsl
mov
jl
push
test
cmp
div
pop
fs
adc
scas
ret
cmp
or
cmp
add
jno
out
cmc
stos
add
push
pop
adc
pop
inc
adc
pop
test
mov
sub
sub
movsb
push
cmc
dec
jne
loope
mov
and
je
push
sbb
fimull
mov
mov
mov
out
fidivrs
xchg
gs
scas
inc
outsl
and
loop
mov
jbe
mov
push
push
movzwl
cmp
inc
push
pop
cmpsl
xor
insb
adc
xor
adc
lcall
test
in
and
jns
popf
std
dec
lods
jo
daa
mov
cmpsl
scas
pop
and
jmp
xor
adc
inc
or
and
and
pusha
push
pop
out
push
xor
loop
xor
cmp
aaa
hlt
inc
jne
cmp
bound
outsl
icebp
sbb
push
addr16
icebp
ljmp
stos
je
and
lcall
add
incb
cmp
in
sbb
mov
mov
add
cmpsb
lods
xchg
sub
fwait
xchg
ret
push
pop
fcomps
mov
or
lret
sub
pop
add
pop
push
adcb
outsl
inc
adcb
xchg
lret
mov
lods
shl
testb
or
shrl
mov
adc
call
xchg
jns
adc
sub
movsl
mulb
dec
inc
dec
scas
sbb
lods
std
sbb
adc
iret
xor
ret
in
ja
lock
cmc
aaa
prefetcht0
mov
test
add
sbb
outsb
inc
shll
das
testb
popl
jecxz
gs
and
sub
sub
jo
lock
notb
fst
sub
lods
xchg
and
dec
sub
out
ret
xor
jl
cltd
fbstp
sub
sub
inc
lds
cmp
sarl
out
mov
and
cmp
mov
fcompl
in
push
xchg
xchg
jne
sahf
xchg
inc
mov
sbbl
es
lods
les
xchg
mov
push
jle
and
ja
andl
daa
mov
out
push
shll
fstpl
mov
into
dec
mov
xor
pop
cmp
inc
dec
push
cltd
ds
hlt
and
sbb
pop
cwtl
in
les
sbb
negl
push
jb
scas
xlat
jle
push
ret
xchg
inc
pop
rol
push
or
shrl
jl
pop
mov
call
lods
mov
mov
gs
fstl
pxor
jecxz
popa
sarl
sbb
in
dec
loope
mov
fldcw
scas
stos
jo
xor
mov
cmpl
loop
rcll
pop
xchg
stos
loope
sbb
cs
test
xchg
shlb
pop
ret
or
mov
mov
out
movsb
mov
mov
pop
imul
je
aad
mov
icebp
loope
adcl
fimull
cld
call
sbb
xor
mov
loop
sbb
cmp
es
loop
xchg
inc
mov
es
jl
xchg
xchg
lret
mov
cmp
mov
sub
repnz
lock
sub
add
pop
icebp
outsl
adcl
cmpsl
xchg
adc
push
fdiv
mov
xor
push
popf
pop
insb
pop
push
push
inc
imul
icebp
mov
sahf
dec
add
xchg
inc
cs
adc
fisubl
clc
rcll
lea
mov
daa
lret
add
ljmp
repz
sub
sbb
add
inc
pop
push
les
pop
lret
push
jne
and
fs
out
mov
shr
cmp
int3
mov
cmp
mov
fdivr
cs
sub
out
in
and
paddsw
jne
sub
sub
stos
sub
adc
push
mov
jo
rcr
sbb
or
test
pushf
ss
fildl
xor
sbb
pop
push
add
and
bound
in
repz
xor
outsb
xor
in
ret
sti
int
in
in
sbb
rcll
popf
pop
jo
jl
sbb
xor
push
inc
mov
dec
je
inc
dec
out
mov
push
sbb
xorb
xchg
inc
into
mov
xor
push
or
call
mov
ficoml
jns
jle
ret
push
int
mov
mov
gs
stc
flds
imul
xor
bound
push
inc
in
out
mov
js
mov
std
or
imul
jp
jbe
xor
out
ficoms
sub
push
into
dec
test
sub
mov
fnsave
cld
setns
fdivrl
push
arpl
divb
fidivrl
out
pop
jg
push
leave
fwait
xlat
into
mov
addb
xchg
scas
icebp
sahf
les
sbb
cld
add
test
pop
pop
sbbb
xchg
out
addr16
int
std
es
je
lcall
pusha
sbb
mov
and
adc
jl
test
test
push
xchg
sbb
das
inc
sti
push
sbb
add
ljmp
bound
add
push
mov
fimuls
cwtl
in
jg
addl
imul
xchg
lea
insb
pusha
mov
popf
and
pop
mov
adc
mov
sbb
lock
xor
ficoml
pop
jbe
xor
jmp
in
test
or
movsb
fwait
sbb
scas
mov
dec
test
incl
ficomps
mov
lret
negb
push
dec
outsb
aad
fwait
push
jp
pop
push
cwtl
movsb
sbb
insb
sbb
or
popa
subb
shr
cmp
sahf
pop
and
mov
cmp
xchg
cmp
or
pushf
mov
adc
movb
jmp
mov
xor
push
push
and
adc
sub
mov
mov
jo
sbb
jns
jb
pop
fildll
pop
dec
mov
mov
push
push
mov
rcrl
adc
cmp
mov
mov
mov
mov
idiv
jle
mov
sbb
fidivrs
out
mov
gs
popf
addr16
sbb
xchg
jg
push
dec
andl
sbb
sbb
jno
in
inc
sub
hlt
int
push
pop
rcr
mov
xlat
or
leave
fists
test
sbb
in
adc
int3
rclb
stos
inc
mov
adc
mov
xchg
rcll
hlt
sbb
enter
xchg
pop
add
outsl
pop
stos
nop
aaa
mov
lret
enter
fnstcw
and
loope
test
test
jmp
sbb
fistpll
xchg
push
sar
sar
les
sbb
jp
icebp
push
dec
sbb
push
mov
rcl
clc
je
jmp
dec
sbb
into
push
inc
jg
cwtl
insb
andl
int3
or
mov
xchg
fs
divl
rcrl
and
into
pop
mov
xchg
fnstcw
cmpsb
xchg
fs
push
jbe
pop
mov
cmpsl
jne
cli
pop
rolb
clc
dec
sub
das
sub
iret
push
mov
sar
push
outsb
leave
popf
pop
xor
mov
ret
cwtl
inc
ljmp
mov
sub
ret
outsl
dec
xchg
dec
movsb
pop
or
xor
jno
and
cmp
or
xor
jp
sub
stos
mov
pop
mov
or
sub
jno
mov
lcall
lds
and
pop
or
lock
mov
add
sbb
push
nop
xlat
mov
push
shll
cwtl
or
add
jmp
mov
inc
lcall
pop
xchg
pop
cli
sbb
into
sub
bswap
sahf
sbb
add
das
daa
xchg
mov
adc
pop
aaa
arpl
sbb
inc
push
sub
cmpsl
or
fsubr
xchg
pop
insl
dec
adc
jp
addr16
repnz
jp
adc
loop
xor
cmp
cmp
xchg
sub
sbb
sarb
add
fcmove
adc
sbb
clc
mov
and
xor
jg
rol
dec
lods
xor
sahf
popf
adc
sbb
sub
or
mov
and
adc
sbb
dec
or
int
dec
enter
mov
fs
cld
push
fs
movsl
jbe
jbe
inc
push
les
je
popf
push
xor
movsb
test
daa
mov
jcxz
clc
gs
add
daa
xor
sbb
sbb
cmp
jp
jnp
push
jge
aas
imul
sub
and
inc
mov
pop
dec
jns
mov
inc
push
lds
jl
inc
out
dec
adc
or
push
nop
sbb
popw
mov
add
rolb
neg
insl
lahf
xchg
push
imul
lret
dec
dec
loop
adc
xchg
rcrb
or
mov
adc
or
sahf
jno
push
int
or
or
mov
popa
inc
adcb
stos
scas
xor
add
and
mov
js
cmp
sub
aam
lret
sbb
test
and
inc
not
stos
mov
ret
add
aas
or
and
jno
fwait
in
je
pushf
mov
cmp
push
sub
pop
sbb
insl
pop
mov
int
adc
cmpsb
xchg
insb
mov
jp
mov
sub
sub
add
jno
mov
jg
jmp
mov
push
pusha
cmp
mov
mov
push
lret
inc
les
xchg
nop
cmp
ds
hlt
pop
mov
xchg
cmpsl
stc
inc
shlb
movsb
jb
cmp
pop
fldenv
push
out
mov
and
out
cmp
adc
ljmp
pushf
cmp
cmpsb
pop
and
stc
mov
aam
in
addb
mov
sbbl
mov
cltd
outsl
adc
inc
xchg
inc
mov
in
aad
ljmp
sti
pusha
shlb
adc
dec
sub
subb
mov
roll
fcomps
dec
loopne
jl
add
push
jecxz
mov
sub
int3
adcl
test
mov
pop
dec
cmpsb
inc
daa
stos
or
inc
pusha
ds
std
sbb
mov
jmp
push
fdivr
cmp
push
aas
fs
dec
fs
shr
mov
or
jne
push
or
negb
push
mov
jne
cs
fcmovnbe
pop
sahf
mov
xlat
adc
leave
nop
push
xlat
push
out
and
mov
int
mov
imul
sub
aas
xor
cltd
fwait
das
data16
xchg
shlb
inc
jae
rcrb
mov
jnp
movsb
lcall
xlat
insl
jp
imul
notb
mov
cmc
push
scas
les
cltd
scas
stos
addr16
inc
aad
aad
cmpsb
sub
pop
or
push
js
jno
test
lods
mulb
xchg
cmp
ss
pop
ja
pop
xor
ret
fld1
jmp
adc
lcall
xlat
push
and
cli
stc
sbb
in
jle
repnz
imul
into
test
cmp
lods
les
out
scas
push
adc
arpl
xor
shr
lock
cmp
outsl
xchg
in
xor
push
add
js
sub
push
imul
sub
push
xchg
int
adc
add
or
mov
je
jg
mov
fdiv
movsl
add
mov
and
mov
fidivrs
xchg
stos
mov
cs
sbb
add
jl
pop
xor
push
pcmpgtw
mov
cmpxchg
rorb
push
mov
dec
pusha
push
pop
cld
dec
test
in
pop
and
iret
push
cmc
insb
jne
adc
push
mov
xchg
jb
sub
imul
lret
mov
adc
dec
xchg
adcl
cmc
sbb
push
push
jp
rcll
stos
push
scas
and
pop
in
fstpl
add
cmp
push
inc
push
pop
xchg
xchg
pushf
mov
ret
ja
push
jl
sarl
jl
mov
lods
test
sahf
xchg
aam
sbb
cltd
out
jg
test
jmp
xchg
xor
add
cmp
into
adc
out
dec
aaa
lret
stc
mov
test
cmpsb
add
xor
push
xorl
adc
add
scas
ret
and
aam
jg
fistpll
inc
incb
addr16
stos
inc
sbb
gs
adc
dec
push
xchg
lret
pop
jns
int
aam
jecxz,pn
je
pop
push
add
push
sbb
inc
xchg
addb
ja
aam
xchg
sahf
lret
scas
xchg
rclb
pop
cmpsb
pop
mov
cld
pusha
repnz
std
xchg
mov
push
xchg
xchg
or
push
jmp
or
aaa
jno
push
lcall
inc
int3
mov
sbb
mov
adc
xor
cmp
ret
hlt
ret
lret
adc
fildll
mov
cmp
push
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
sub
jae
pop
mov
mov
jae
mov
mov
cmpsb
adc
dec
lret
shll
es
mov
lock
sub
les
subl
mov
sbb
int3
push
lret
adc
xchg
in
jg
adc
repnz
push
ret
cmpsb
movsb
jbe
ljmp
dec
mov
imul
ja
or
jae
mov
pop
stos
cld
scas
sub
mov
cmp
rorl
jp
pusha
xchg
push
jl
cmp
out
mov
filds
push
jns
pop
jne
js
out
push
test
sbb
gs
add
or
cmp
subb
pop
in
in
xchg
xor
scas
or
mov
fucomip
xor
sub
inc
andl
into
push
pop
in
pop
in
sahf
mov
test
xor
pop
add
stc
test
mov
mov
das
test
pusha
les
lock
mov
push
push
cmpsl
jecxz
sub
shrb
pop
xchg
add
ret
mov
dec
mov
outsb
xor
iret
pushf
mov
add
pop
push
and
divb
xchg
cmpsb
mov
inc
adc
or
cli
outsl
and
sub
fisttps
dec
rcrb
pop
shl
jnp
enter
xchg
mov
in
popf
gs
mov
adc
stc
pop
jecxz
mov
xchg
sbb
cwtl
sub
jg
popf
xchg
packsswb
cmp
cmc
addr16
xor
xchg
icebp
jne
fmull
lods
mov
das
jnp
push
ret
call
outsb
xchg
mov
sbb
enter
xchg
aaa
push
push
dec
mov
mov
mov
in
les
adc
adcl
pop
aas
rcll
dec
cmp
jae
push
rcll
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
outsb
add
outsb
add
insl
