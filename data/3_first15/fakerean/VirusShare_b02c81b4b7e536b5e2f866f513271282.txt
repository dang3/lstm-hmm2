jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
shlb
mov
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
cmp
adc
inc
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
rcl
inc
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
in
roll
ja
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
insl
mov
sbb
pop
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
sub
add
mov
mov
test
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
movl
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
inc
add
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
cmpsb
inc
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
out
inc
add
fidivs
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
das
mov
add
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
pop
xlat
inc
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
or
inc
add
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
sbb
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
int3
mov
dec
dec
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
movsb
inc
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
mov
adc
add
jne
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
call
inc
and
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
cmpsl
inc
add
push
and
mov
movl
movl
movb
aad
add
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
mov
push
and
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
enter
mov
add
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
add
add
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
testb
movl
je
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
or
add
mov
mov
xor
mov
test
jns
mov
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
push
call
xor
test
je
mov
orl
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
testl
jne
mov
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
add
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
add
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
pop
je
lea
mov
mov
mov
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
call
cmp
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
jne
xor
mov
jmp
xor
jmp
mov
mov
jmp
push
mov
push
mov
lea
push
lea
push
pushl
movl
call
mov
mov
and
neg
sbb
not
and
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
lea
mov
mov
call
add
sub
jns
mov
push
push
lea
push
push
call
cmp
jl
mov
mov
call
test
je
test
je
test
je
test
je
lea
lea
lea
mov
mov
movl
jmp
lea
addl
addl
mov
mov
mov
mov
mov
mov
add
cmp
mov
je
cmpl
jne
call
mov
and
mov
mov
shl
shr
lea
lea
or
mov
mov
mov
add
cmp
movl
mov
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
or
mov
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
lea
or
call
subl
jne
push
push
push
lea
push
call
mov
pop
pop
pop
pop
add
ret
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
int3
int3
int3
int3
sub
push
mov
test
je
push
mov
movl
mov
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmpb
jne
mov
test
je
push
mov
lea
movl
call
mov
test
je
mov
mov
mov
push
call
lea
call
cmpl
je
xor
pop
pop
pop
add
ret
mov
mov
call
test
jne
mov
mov
call
test
ud0
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
and
jne
push
push
lea
call
xor
add
cmp
je
mov
movl
mov
lea
cmp
movl
movl
movl
mov
mov
je
mov
mov
push
call
test
mov
je
mov
mov
push
call
mov
test
je
xor
call
add
or
mov
mov
mov
push
push
push
call
mov
push
add
add
scas
jns
add
xor
mov
add
push
jge
rcll
incb
popf
aam
add
add
push
jne
test
add
xchg
add
stos
in
jle
add
idiv
add
add
add
pop
test
add
add
stos
call
add
imul
add
lea
movsl
sbbb
pop
mov
pop
pop
hlt
add
add
add
add
add
lea
add
add
scas
outsl
test
lret
pop
cld
loop
fdivl
mov
add
xchg
add
mov
add
add
test
add
lods
add
in
add
push
push
push
push
lea
push
push
call
add
enter
add
add
pop
xchg
add
add
aam
nop
lods
add
outsl
xchg
ficoms
lods
jne
shlb
out
rolb
add
add
cmpsl
add
add
add
lea
sar
push
fwait
lahf
add
add
loopne
int
mov
bound
movl
popl
push
lea
push
push
push
lea
push
push
lea
push
call
lea
add
addl
popa
mov
faddl
add
xchg
add
in
jl
test
pop
insb
imul
add
add
add
jbe
push
addb
xchg
add
fidivl
movsl
movsb
shlb
add
repnz
in
add
icebp
in
fwait
add
fs
cwtl
ficomps
clc
aam
jns
xchg
xchg
add
stos
ja
int3
add
add
add
mov
lea
pop
push
push
push
push
push
push
push
call
add
in
int
add
mov
addr16
add
add
lods
addl
add
xchg
sarl
repnz
imul
cmc
leave
insb
add
pop
out
test
lret
push
push
lret
repnz
add
add
add
aad
lcall
jne
mov
add
add
pop
push
push
push
push
push
push
push
push
lea
push
call
add
pop
test
int3
in
add
add
add
mov
xchg
xchg
pop
popf
mov
pop
lds
jmp
add
mov
add
mov
lahf
xchg
pop
xchg
out
mov
int
popa
jmp
add
ljmp
lods
test
sahf
mov
lea
pop
push
push
push
push
lea
push
push
call
sar
add
add
loop
mov
jno
add
nop
repnz
mov
test
mov
test
add
add
js
add
add
xchg
add
jne
add
lods
add
ljmp
int
add
mov
hlt
pop
repnz
pushf
xchg
add
add
into
add
mov
divl
addr16
lea
pop
call
push
lea
push
push
push
push
call
pop
add
xchg
in
add
lods
add
add
add
movsl
movsb
movsl
pop
addb
lcall
add
add
add
add
add
out
cmpsl
jae
mov
add
add
add
add
mov
jno
add
add
add
lods
xchg
lods
push
in
add
mov
add
add
arpl
call
push
call
push
push
push
call
push
add
jno
add
add
shl
add
arpl
add
leave
jbe
jnp
test
add
mov
mov
ret
add
add
shll
add
pusha
xchg
add
pop
pop
cmpsb
mov
add
out
shl
jne
rolb
movb
add
lcall
cmpsb
add
pop
jmp
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
fucomip
std
js
add
pusha
mov
int3
add
mov
bound
push
add
pop
insb
clc
out
ret
push
add
add
pop
addb
add
scas
add
movsl
bound
add
push
add
outsl
add
add
mov
aam
popa
mov
add
test
int
out
add
add
add
in
add
mov
lea
pop
ret
mov
push
push
push
push
call
add
mov
lahf
push
jb
lret
add
add
jecxz
arpl
mov
add
loop
mov
add
lods
pop
je
imul
add
mov
mov
aad
add
add
pop
in
int3
mov
imul
xchg
add
add
sahf
add
mov
lea
pop
mov
add
push
lea
push
push
push
push
push
push
push
push
push
call
add
gs
add
stos
into
imul
add
xchg
stc
add
xchg
js
or
pop
cwtl
in
mov
call
jle
lret
mov
loop
add
push
add
leave
add
iret
jecxz
in
in
aam
js
push
imul
jns
adcb
jecxz
add
push
xchg
mov
add
pop
add
push
lea
push
push
push
push
lea
push
push
push
call
add
xchg
add
pop
add
xchg
add
add
fildl
pushf
add
loop
push
adcl
push
add
scas
int
jp
lods
add
add
popa
jne
add
push
push
aad
add
xchg
add
add
fiadds
sahf
mov
ja
mov
add
fisubrs
lcall
add
jnp
ja
mov
mov
lea
pop
add
mov
xor
push
push
push
push
push
push
push
lea
push
push
call
cwtl
add
test
fisubrs
lahf
pop
lock
mov
addl
add
mov
add
jl
add
push
icebp
add
add
add
add
add
add
add
push
push
add
jecxz
add
movsb
fildl
outsl
mov
xchg
add
divl
add
push
ja
add
cmc
xchg
jb
add
xchg
lret
mov
cld
lea
pop
add
push
push
push
call
mov
lods
add
add
fadds
mov
add
mov
add
scas
add
push
mov
outsl
sahf
lcall
xchg
pop
jns
in
add
add
add
add
in
mov
mov
add
data16
xchg
add
lods
rolb
jns
add
mov
int
mov
lea
pop
call
mov
push
push
push
push
call
push
mov
arpl
mov
mov
add
loopne
jno
xchg
popf
movl
add
loopne
fstl
add
jge
add
add
add
add
mov
ret
pop
js
stc
mov
add
mov
test
add
mov
int
add
pop
hlt
push
add
add
mov
lea
pop
xor
push
push
call
pop
add
mov
jo
insb
add
jns
arpl
mov
jmp
popf
into
pusha
mov
cmc
fs
lods
addb
fwait
add
lret
add
add
shl
test
out
popf
je
add
push
clc
ja
jo
mov
add
xchg
add
pop
test
add
add
add
add
add
incb
loop
movsb
add
scas
add
add
mov
lea
pop
add
push
push
lea
lea
ror
push
xor
add
not
ror
dec
rol
sub
rol
rol
rol
shl
pop
add
dec
not
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
jne
xchg
add
add
add
add
add
add
adc
push
out
add
pop
mov
xchg
add
jne
mov
rclb
pop
add
pop
stos
popa
jp
add
loopne
pushf
pop
add
add
add
add
mov
jmp
mov
mov
add
jno
imul
pop
jl
push
push
push
test
testl
pusha
and
jne
call
mov
push
push
push
call
mov
faddl
jb
add
add
cbtw
push
add
addl
add
addb
mov
add
add
push
cltd
pop
int3
add
jns
add
addb
jns
jmp
add
flds
jle
lahf
scas
mov
aam
mov
add
mov
out
add
fmull
inc
loopne
add
add
push
lea
push
push
push
call
ljmp
add
add
add
mov
xchg
add
add
add
add
mov
scas
loop
mov
add
mov
shrb
jo
add
jns
mov
call
outsl
pop
mov
add
add
add
in
add
mov
jns
leave
imul
incb
fstp
mov
stos
pop
add
pop
push
push
push
push
push
call
add
test
cmpl
int
popa
nop
add
jl
roll
lea
push
add
out
imul
movsb
cmpsl
clc
jb
add
add
jge
add
leave
mov
jl
int3
add
lret
push
add
xchg
add
out
into
add
add
enter
fiadds
add
add
mov
out
mov
lea
pop
pushl
push
push
push
lea
push
push
lea
push
call
mov
mov
rcl
mov
mov
push
outsl
add
xchg
add
loop
add
insb
add
lods
add
roll
add
andl
addr16
rolb
in
out
cmpsl
add
pop
enter
add
addl
mov
add
add
mov
add
gs
add
add
loope
lea
lahf
clc
jo
add
icebp
add
pop
pushl
push
lea
push
lea
push
lea
push
push
push
push
push
call
sbbl
jl
add
pusha
add
add
bound
test
add
add
add
add
add
rolb
add
roll
fadds
idivb
cmpsb
stc
add
rcr
cmpsb
add
add
add
test
add
add
fwait
jl
pop
sarl
cmpsl
mov
in
xchg
add
mov
pop
call
pushl
pushl
push
push
push
push
call
jno
add
enter
cmc
xchg
cmpsl
pop
add
add
iret
roll
add
add
fdivrl
aam
mov
mov
scas
push
add
scas
push
stos
add
push
mov
mov
add
add
insb
out
cld
aad
aad
add
mov
push
add
add
jmp
mov
shlb
iret
add
jmp
push
add
pop
call
push
push
shr
inc
push
push
pop
add
ror
lea
sub
ror
xor
not
pop
add
add
rol
add
pop
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
loope
cmc
add
mov
add
clc
add
lcall
push
cmpsb
jno
add
mov
test
add
add
add
test
arpl
lds
lcall
into
data16
movsl
sahf
add
clc
add
jecxz
mov
mov
int
jecxz
fldenv
int3
lea
pop
pushl
call
push
push
lea
push
push
push
lea
push
push
lea
push
call
into
xchg
xchg
mov
je
mov
add
add
add
clc
xchg
add
add
xlat
push
jp
test
mov
add
js
jo
mov
add
xchg
mov
add
mov
xchg
mov
insb
add
xchg
scas
add
mov
out
stos
add
xchg
clc
mov
lods
lods
add
cld
mov
mov
lea
pop
push
push
push
shr
ror
push
or
inc
add
dec
sub
sub
lea
shl
pop
lea
pop
push
push
call
mov
mov
jge
fiadds
add
push
lret
jo
rolb
xchg
add
cltd
into
add
fstpl
test
add
add
orb
pop
add
in
call
fcomi
hlt
mov
add
pop
jecxz
lods
push
mov
mov
test
leave
add
add
cmpsl
sti
mov
lea
pop
push
push
push
push
push
lea
push
push
push
call
add
add
add
test
xchg
outsl
add
addr16
loop
ja
jl
iret
jecxz
push
mov
in
mov
add
add
add
bound
cwtl
jle
rolb
gs
mov
add
fadds
mov
imul
add
mov
mov
cld
jge
orb
popa
sbb
rorb
mov
cmp
push
push
push
push
call
add
xorb
add
add
xchg
add
sub
jl
mov
bound
add
push
test
add
add
adc
add
add
std
xchg
add
rcrb
add
add
push
jnp
add
add
add
add
jmp
mov
add
xlat
fsubrs
mov
lea
pop
push
push
push
lea
push
push
push
push
call
add
add
xchg
sahf
add
lea
push
test
out
push
add
clc
add
add
pop
imul
xchg
cmc
add
lret
pop
fildl
shrl
push
add
mov
mov
push
mov
mov
pop
add
repnz
scas
out
push
mov
add
add
stc
add
add
jb
pop
in
jmp
pop
xchg
mov
lea
pop
mov
add
push
push
lea
push
push
push
lea
push
lea
push
push
call
xchg
pop
movsb
lock
idivb
add
stc
stos
add
bound
outsl
cmc
add
xlat
add
add
add
mov
loope
add
add
jbe
in
push
movb
leave
add
add
add
jnp
add
fstpt
xchg
add
loope
mov
add
ret
add
mov
jl
hlt
lea
pop
add
push
push
push
push
push
lea
push
push
push
lea
push
call
int3
add
add
pushf
push
add
add
add
popa
add
pop
jns
add
out
lds
in
enter
jmp
fcmovnbe
test
fsin
lea
pop
divl
push
add
mov
add
call
xchg
xchg
roll
frstor
add
add
add
add
out
jno
lahf
add
cld
lea
pop
add
mov
xor
push
push
push
push
push
call
ret
shll
add
pushf
xchg
enter
mov
mov
je
lcall
pop
add
mov
add
out
call
pop
stos
add
push
add
lock
incb
mov
add
mov
roll
mov
stos
add
ljmp
imul
add
add
add
mov
lea
pop
add
push
push
push
call
add
pop
in
add
fistps
add
pusha
mov
add
add
jno
mov
xchg
pop
add
roll
test
lret
out
popf
add
jne
mov
add
roll
add
cwtl
add
add
out
testl
mov
fdiv
add
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
lods
mov
xchg
test
push
popf
cli
add
add
push
enter
pop
pushf
jno
pop
jle
fbld
add
test
add
mov
add
add
addl
add
add
mov
add
add
mov
add
add
push
xchg
ljmp
jecxz
jo
mov
jns
pop
stos
add
aad
add
add
in
ja
add
pop
xor
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
add
add
add
push
add
add
add
add
lea
in
add
jno
lahf
popl
mov
jmp
mov
movl
fidivrl
stos
push
add
jge
lret
add
xchg
add
add
pop
xlat
mov
add
mov
add
add
repnz
lea
pop
add
push
push
lea
push
lea
push
push
call
lahf
add
cwtl
add
add
fdivr
xchg
add
pop
add
aad
pop
jno
add
pushf
add
imul
scas
jle
add
xchg
add
mov
lods
leave
cld
test
aad
into
xchg
add
out
pop
mov
fisttps
add
add
in
push
cmpsl
cmpsl
imul
fwait
mov
lea
pop
add
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
mov
add
icebp
add
cld
xchg
ret
cmpsb
pop
int
fldenv
mov
data16
xchg
add
xchg
xchg
in
repnz
stos
lods
add
add
rorl
add
jnp
add
push
clc
add
add
fisubl
jns
add
add
loope
jecxz
add
mov
sub
dec
sbb
icebp
movsb
shll
inc
fwait
mov
push
lea
push
lea
push
push
push
lea
push
push
call
add
jl
cld
add
lcall
enter
in
cltd
add
add
aad
fiaddl
add
add
iret
add
in
hlt
add
jns
add
add
clc
xchg
add
add
add
add
push
je
cwtl
jp
add
xor
cmpl
jle
out
lcall
add
hlt
lea
pop
push
mov
push
push
push
push
push
push
push
lea
push
call
mov
hlt
mov
int3
cmc
insb
add
in
cmpsl
mov
add
add
popa
mov
push
jo
xchg
mov
add
xlat
add
loope
fucomip
add
add
add
jmp
add
add
add
pop
stc
jae
add
cmpsl
nop
fwait
pushf
outsl
jo
call
lods
mov
mov
roll
add
add
into
mov
lea
pop
xor
push
push
push
lea
push
push
push
call
xchg
add
add
push
in
insb
arpl
add
mov
rol
imul
add
add
cmpsl
outsl
xchg
add
lods
push
add
add
xchg
add
mov
int
add
add
icebp
add
add
add
in
jb
add
add
push
jnp
jnp
add
pop
add
push
push
lea
push
lea
push
push
push
call
insb
movsb
enter
fcmove
out
mov
jmp
out
add
fadds
add
leave
mov
call
add
test
notb
add
movsb
mov
sahf
movb
fldl
in
loope
add
sahf
pop
add
add
add
add
fiaddl
add
shlb
rolb
jle
scas
pusha
jo
outsl
movsl
add
mov
lea
pop
sub
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
cld
add
pop
push
nop
push
add
mov
jne
out
pop
mov
in
add
jle
lds
test
add
xchg
pop
subb
add
add
aad
add
in
popa
ja
std
cmpsb
into
iret
mov
add
mov
add
push
jb
aam
add
jnp
in
rcll
mov
lea
pop
rep
push
push
push
push
lea
push
push
lea
push
call
fisubrl
aad
scas
addl
fwait
pop
in
imul
lea
popf
stc
rcll
add
add
add
xchg
jae
add
add
xlat
fsubrl
leave
add
loope
cli
popf
loopne
hlt
add
arpl
lahf
in
add
add
add
add
sti
jge
leave
mov
mov
lea
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
lds
call
mov
add
pop
loopne
push
add
jno
sti
flds
fnstenv
pushf
mov
jp
xchg
hlt
push
jbe
scas
scas
push
mov
add
shlb
xchg
add
add
pop
add
add
test
add
add
test
fwait
cwtl
movb
fs
lock
add
add
pop
mov
add
add
push
push
push
push
push
push
push
push
push
call
jae
add
jecxz
jmp
add
push
mov
in
xchg
add
add
mov
jnp
into
enter
fldl
clc
fcoml
faddl
loope
xchg
add
mov
xchg
lock
add
lock
add
stos
pop
lret
int3
aad
add
fst
jae
mov
add
add
in
add
add
addl
mov
lea
pop
add
push
not
pop
mov
xor
mov
push
push
push
call
add
cmpsb
add
jb
mov
loopne
add
lret
mov
cmc
add
add
popf
xchg
pop
xchg
lcall
add
shl
add
mov
lret
mov
add
mov
add
add
mov
into
shrl
shlb
cltd
out
jbe
add
cmc
add
out
mov
lea
pop
xor
push
push
push
push
push
call
mov
cltd
pop
add
pop
add
rol
loopne
add
clc
pop
shrb
lea
pushf
fs
mov
xchg
insb
rol
push
test
add
add
ror
add
sti
xlat
stc
add
add
add
mov
jbe
enter
push
pop
ljmp
jb
leave
lds
add
mov
lea
pop
add
push
push
call
add
xchg
push
rcl
push
fdivl
cwtl
add
add
mov
add
stos
lods
loop
cld
mov
add
or
mov
mov
add
add
add
xchg
add
xchg
add
mov
rcrb
add
jb
add
add
pop
mov
push
push
push
lea
push
push
push
call
mov
pop
add
insb
push
leave
push
mov
addl
icebp
lds
mov
add
add
jnp
add
arpl
movl
lahf
in
mov
add
cli
leave
fmul
fisubrl
add
add
jae
out
add
jb
add
scas
add
add
mov
mov
lock
std
jle
add
mov
adc
xor
push
push
push
push
push
push
lea
push
push
call
mov
movb
insb
out
jo
add
add
stos
add
add
insb
sarl
pop
xchg
jmp
mov
sti
mov
test
add
mov
mov
push
add
add
add
fiadds
in
jle
add
mov
lods
xchg
pop
push
fiadds
add
lret
int3
add
mov
lods
hlt
xchg
fmull
les
add
add
push
lea
push
push
push
lea
push
push
lea
push
call
add
mov
add
add
pop
ret
add
imul
jae
add
jle
mov
ja
lcall
jns
mov
rolb
add
add
add
test
mov
fdivrs
add
test
clc
mov
jb
lret
pushf
in
add
lret
mov
add
mov
mov
lea
pop
add
push
push
lea
push
push
push
call
add
movsl
push
add
add
cmpsb
fiadds
add
pushf
jne
add
add
jb
into
enter
xchg
xchg
fstp
repnz
mov
test
push
into
add
xchg
pop
test
leave
jge
fildl
push
pushf
leave
ja
lret
mov
bound
add
pop
push
popa
lods
scas
jecxz
addl
lock
lods
add
movsb
add
jae
cmpsl
mov
jge
add
add
add
add
add
mov
lea
pop
mov
push
push
lea
dec
ror
inc
push
xor
add
sub
sub
sub
shr
pop
shl
pop
push
push
push
push
call
add
add
lea
loop
mov
jecxz
lcall
out
add
test
xchg
add
testb
mov
mov
call
pusha
out
add
add
add
mov
fidivs
mov
add
test
movsl
add
add
add
add
add
mov
out
test
add
push
repnz
add
add
cld
lea
pop
pushl
push
add
dec
pop
call
push
push
push
inc
not
lea
rol
push
or
inc
add
sub
dec
rol
pop
add
xor
pop
push
lea
xor
rol
dec
pop
push
push
lea
push
push
call
add
add
push
mov
add
jb
add
add
mov
push
std
jnp
flds
faddl
jl
mov
jno
add
add
add
add
push
add
insb
push
mov
int3
jle
adc
add
mov
lds
imul
stc
movsb
cmpsb
lret
jbe
ja
add
pushf
jp
fst
mov
jns
movl
add
pop
push
call
mov
push
push
push
push
push
push
lea
push
call
push
cmpsl
mov
add
mov
mov
shl
stc
fistpll
add
js
add
add
loopne
cmpsb
lea
add
lret
sahf
loop
add
xchg
add
into
add
add
add
add
mov
add
mov
add
add
add
xchg
mov
lea
pop
push
push
mov
push
ror
shr
rol
pop
add
push
push
push
lea
push
push
push
push
call
add
cwtl
add
mov
push
mov
lods
add
add
mov
mov
test
jmp
add
add
clc
adcl
add
add
mov
repnz
add
mov
in
add
add
lahf
add
int
cwtl
pop
mov
andb
aad
out
fldl
add
add
pop
add
push
push
push
call
add
les
add
add
mov
cltd
pop
add
aam
add
add
out
ja
xchg
test
add
in
addl
fadds
add
add
insb
in
add
fiadds
xchg
aam
add
pop
imul
add
add
incb
bound
cld
outsl
cmpsb
bound
add
mov
mov
mov
mov
lea
pop
add
push
push
push
call
je
add
jo
mov
jo
add
add
fwait
jle
push
add
add
jmp
fwait
xchg
fsubl
nop
imul
add
add
add
mov
add
jp
add
add
pop
push
lods
add
loopne
pop
jo
add
mov
ret
xorb
scas
int
push
nop
mov
ret
add
mov
lea
pop
mov
xor
push
inc
pop
add
push
mov
push
push
push
push
push
push
call
gs
xchg
int3
lahf
fmull
mov
hlt
jo
add
mov
add
mov
add
add
les
bound
mov
add
mov
out
add
cwtl
jo
movsb
lods
in
js
add
jbe
add
fildl
add
add
addl
add
add
mov
lea
pop
xor
push
push
call
add
in
out
shrb
addb
push
add
pop
add
mov
rcll
sti
mov
stc
add
add
fldl
add
add
pop
rcl
add
scas
add
roll
add
out
mov
stc
add
mov
loope
mov
mov
add
xchg
add
cmc
shr
mov
lea
pop
add
push
push
push
push
call
mov
add
add
sub
arpl
add
xchg
add
push
pushf
push
add
fwait
add
shll
mov
add
add
add
add
mov
cwtl
repnz
jae
add
add
test
mov
clc
popa
fldl
push
jae
add
mov
lea
pop
add
push
add
shl
pop
pop
mov
push
push
push
push
push
push
lea
push
call
add
add
popf
add
xchg
popf
pop
in
jge
push
out
mov
mov
add
xlat
cmc
add
stos
mov
xchg
add
ja
add
int3
add
mov
add
loopne
mov
add
pop
stos
lcall
jns
movl
in
outsl
jnp
rorb
mov
lea
pop
xor
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
out
add
add
add
pop
add
add
pop
add
add
scas
push
xlat
xchg
fwait
cmpsl
out
add
out
add
add
mov
je
add
push
add
jp
jmp
mov
push
push
add
add
in
add
mov
add
add
stos
fnstcw
roll
add
add
arpl
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
mov
add
clc
add
add
fwait
mov
add
jbe
in
add
cmpsb
stos
add
jae
add
add
add
roll
push
add
add
add
add
cld
add
sti
cmc
outsl
jge
add
mov
xchg
add
movsl
int3
or
xlat
add
add
call
jae
add
add
pop
sar
addb
add
add
enter
sti
push
mov
int3
lea
pop
rep
mov
push
push
push
call
add
push
shl
add
mov
fs
add
popf
add
add
add
roll
add
test
roll
xchg
test
xchg
jne
xchg
test
add
pop
add
mov
add
lods
lret
cmpsl
push
add
icebp
add
aam
add
aad
les
add
addl
lds
mov
add
arpl
in
mov
add
int3
lea
pop
xor
push
push
push
call
xchg
add
push
mov
add
in
add
add
add
add
mov
test
add
add
iret
xchg
out
add
add
imul
jmp
sahf
add
mov
add
jmp
jo
mov
push
popf
add
add
xchg
mov
add
add
mov
lea
pop
add
push
lea
push
push
push
call
in
add
add
shlb
ljmp
aam
add
icebp
add
lahf
in
add
add
in
mov
cmc
add
add
pop
jne
icebp
loope
out
add
add
mov
fcmovne
arpl
add
add
int
add
xchg
add
in
add
test
je
add
adc
leave
je
mov
xor
push
shl
pop
mov
push
push
push
call
roll
add
xchg
lret
sti
jge
ret
jle
add
cmc
repnz
lock
sar
add
add
add
jns
xchg
lds
xchg
mov
je
jo
out
add
add
int3
mov
stos
clc
mov
push
addr16
add
mov
add
mov
mov
add
in
jbe
je
ljmp
add
jge
push
pop
xchg
jmp
push
add
clc
mov
lea
pop
xor
push
push
push
push
call
fldl
in
add
xchg
out
popl
add
lcall
jno
add
add
pop
int3
push
test
add
pop
arpl
repnz
add
mov
stos
out
outsl
add
add
lods
imul
add
xlat
add
add
mov
aam
mov
jmp
mov
lea
pop
add
push
inc
not
sub
add
pop
add
push
not
lea
pop
add
push
pop
push
mov
push
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
popa
stos
add
jno
js
sarl
lds
pop
push
add
mov
mov
add
jno
addb
mov
add
mov
jge
add
pusha
add
add
add
pop
rolb
add
xchg
push
add
add
add
mov
add
add
ljmp
sub
add
push
push
push
push
push
push
push
push
push
lea
push
call
pop
pusha
pop
cmpb
iret
add
jb
xchg
enter
xchg
ja
add
add
push
mov
sarl
xlat
add
add
add
mov
mov
mov
in
jo
mov
add
mov
add
pop
ljmp
mov
ret
movsl
jecxz
add
add
cld
lea
pop
add
push
lea
push
push
lea
push
push
call
add
add
add
sti
pop
pop
shl
mov
js
fstpl
add
in
add
add
and
out
lcall
ret
add
fadds
pop
js
stc
int3
add
orl
jno
add
jno
add
test
pop
add
push
add
pop
add
pop
push
push
push
push
push
lea
push
push
push
call
push
mov
mov
in
addl
jb
add
xchg
scas
add
add
sahf
jecxz
jge
push
mov
fdiv
pop
test
jle
pop
add
leave
mov
add
mov
ja
add
xchg
aam
add
mov
mov
fstl
add
fdivrl
addl
add
add
mov
jl
lea
call
and
movsb
push
pop
mov
xor
push
lea
push
push
push
lea
push
push
push
push
push
call
jns
jbe
push
mov
les
int
mov
push
add
mov
add
mov
shlb
xchg
stos
add
mov
leave
pop
add
imul
add
add
imul
ret
add
push
cld
add
incb
add
frstor
sarb
arpl
loop
mov
cmpsb
add
rcrb
js
jmp
lea
pop
or
je
mov
push
not
pop
add
push
shl
xor
pop
add
push
push
push
push
call
mov
loop
pop
add
jge
hlt
into
mov
add
addr16
in
add
mov
add
add
jb
pop
mov
pop
add
add
xchg
add
jp
mov
add
mov
add
mov
add
jnp
lods
add
add
add
ja
movsb
popf
mov
add
mov
lea
pop
rep
push
lea
push
push
push
push
call
add
fbld
add
rolb
sahf
jns
mov
roll
push
mov
add
mov
mov
leave
add
add
jno
out
add
in
js
mov
movl
xchg
mov
lds
xacquire
lea
lahf
lods
add
shrb
add
mov
lea
pop
pop
push
push
not
sub
push
xor
add
dec
sub
sub
add
shr
pop
add
not
pop
pop
push
lea
push
push
push
lea
push
push
call
cmpsb
add
iret
add
mov
jno
rolb
mov
lcall
lret
add
add
add
jae
into
std
add
add
mov
xchg
in
add
pop
add
add
addr16
fs
add
add
loopne
loope
arpl
ror
add
fidivrs
data16
jne
mov
push
add
rol
pop
mov
push
push
lea
push
push
push
call
scas
add
js
stc
repnz
add
jnp
xchg
add
mov
jae
add
scas
ret
into
push
jnp
add
testb
mov
roll
imul
add
jb
add
push
add
lods
hlt
fiadds
in
add
into
repnz
data16
into
mov
mov
add
add
fmull
loopne
push
add
lea
sub
ror
pop
mov
add
push
push
lea
push
push
push
call
mov
mov
add
int3
leave
xchg
cwtl
add
add
add
add
sti
add
aam
stc
idivb
loope
cmc
sti
add
in
add
ja
aam
add
add
add
xchg
in
add
add
jmp
push
popa
add
mov
mov
xchg
jo
add
mov
lea
pop
push
push
lea
push
push
push
call
add
push
loop
jmp
add
mov
add
add
add
mov
mov
pop
add
cli
jb
mov
add
add
clc
add
pop
loope
mov
add
movl
add
add
pop
add
push
mov
add
pop
push
push
push
push
push
push
push
lea
push
push
push
call
lahf
add
jno
into
add
movsl
cmc
clc
add
mov
fdivp
add
add
add
leave
add
mov
popa
cli
mov
add
push
imul
add
lcall
add
sti
out
add
add
add
hlt
add
add
add
push
add
stos
scas
add
add
add
push
jns
add
add
pop
push
push
push
push
push
push
push
call
rolb
mov
incb
nop
fadds
cli
jbe
sti
add
add
add
test
loopne
jo
add
out
add
pop
shrb
stos
add
fcmove
add
add
mull
jmp
rcr
jle
add
cmpsl
jp
hlt
repnz
std
int
add
xchg
add
mov
lea
pop
mov
pop
pop
push
push
push
push
push
call
xlat
add
add
push
test
ror
add
add
add
je
push
add
ror
leave
insb
add
add
add
add
push
jnp
jne
add
add
add
add
jmp
shl
popf
filds
rcrb
add
mov
add
add
jbe
iret
xchg
push
add
cltd
add
int3
aam
push
cwtl
add
add
nop
add
call
lea
pop
pop
pop
push
lea
push
push
push
call
mov
fcmovbe
add
mov
add
lods
add
push
fildl
add
mov
xchg
mov
add
xorb
add
lret
mov
add
sub
add
lahf
loopne
add
cltd
add
fadds
add
jle
filds
test
add
fyl2xp1
add
xchg
sbbl
arpl
pop
leave
push
push
push
lea
push
push
push
push
call
jbe
add
xchg
movsl
add
add
imul
add
xchg
cmpl
add
lods
les
nop
jp
add
std
add
mov
pop
pop
rorl
mov
add
clc
fdivrs
add
add
call
int
orb
add
pop
mov
fstpl
mov
add
add
add
fmull
or
push
pop
push
mov
add
push
push
lea
push
push
lea
push
lea
push
call
push
add
lret
add
mov
mov
add
lahf
lods
add
pop
test
add
add
out
rorb
add
xchg
test
lcall
pop
ljmp
xchg
add
add
lahf
add
cld
jo
xchg
orl
in
rolb
pop
mov
jbe
push
jp
add
pop
mov
jp
add
jo
add
add
add
add
mov
lea
pop
push
push
shr
shr
sub
rol
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
add
jae
add
add
mov
cwtl
push
add
mov
test
add
xchg
pop
push
cltd
lds
add
lds
ret
leave
fcoml
scas
mov
cltd
lods
out
pop
stc
add
mov
cmc
add
xorb
mov
popl
pop
fdivs
outsl
add
mov
lea
pop
push
push
push
push
push
call
out
pop
add
mov
faddl
pop
add
movsb
mov
clc
xchg
pop
lds
sti
hlt
add
add
xlat
add
mov
in
jo
add
xchg
add
loopne
mov
add
add
add
iret
add
pop
les
push
add
incb
add
jne
mov
add
add
add
jl
add
in
mov
lea
pop
push
movl
addl
push
push
lea
push
lea
push
call
filds
add
movsb
lret
add
xchg
addl
outsl
rolb
xchg
leave
cmpsb
loopne
mov
add
add
add
mov
out
mov
pop
test
add
jl
add
mov
pop
add
rcll
fneni(8087
fdivr
cltd
add
add
hlt
lea
pop
test
je
mov
push
lea
push
push
push
push
push
push
push
push
push
call
scas
push
movb
lods
mov
jo
test
roll
add
add
xchg
fcomps
mov
in
mov
add
xchg
add
jb
scas
push
stos
add
jns
mov
test
add
mov
push
bound
int3
add
lcall
pop
icebp
fiadds
in
mov
add
jl
jp
add
add
pop
bound
pop
pop
pop
pop
push
lea
add
pop
pop
leave
ret
push
push
push
push
push
push
push
push
push
call
movb
add
add
out
add
nop
pop
bound
xchg
add
aam
jecxz
add
pusha
add
fldl
lock
clc
filds
mov
mov
add
mov
sahf
add
mov
add
jbe
add
stos
jo
lods
add
lret
mov
add
add
mov
lea
pop
push
mov
push
push
lea
push
push
lea
push
lea
push
push
call
std
lods
add
add
flds
add
add
out
add
pop
mov
mov
add
roll
loope
xchg
pop
add
push
add
cli
jae
stc
add
mov
jbe
add
ret
into
shll
testb
notl
add
push
jle
repnz
cmpsl
add
fcmovnb
add
add
push
fstps
bound
add
push
push
push
push
lea
push
push
push
push
call
mov
jl
add
add
filds
in
add
add
out
roll
imul
fldl
mov
bound
add
add
add
add
add
ror
add
xchg
add
add
icebp
add
add
mov
add
mov
pop
lods
cltd
jmp
add
add
add
add
fdivr
mov
lea
pop
push
push
not
pop
push
push
push
push
push
push
call
add
aam
add
jle
stc
mov
add
push
add
pop
lods
pushf
adc
in
mov
xchg
mov
out
add
jb
add
stc
gs
push
shl
add
mov
shrb
add
pop
bound
sbbl
add
push
popf
add
cmc
add
test
orl
mov
mov
add
lods
insb
add
fmull
push
lea
push
call
xchg
out
mov
add
add
xchg
fiadds
ja
addr16
add
pop
jle
mov
pop
leave
adc
pusha
arpl
rolb
icebp
add
lods
add
add
fbstp
iret
add
icebp
mov
add
add
je
lods
pop
lret
jo
xchg
mov
lret
aad
lea
stos
jle
push
mov
lea
pop
testl
addl
push
push
add
add
pop
call
push
not
pop
mov
pushl
push
lea
push
push
push
push
lea
push
call
ret
sar
add
add
cld
mov
add
add
push
add
add
add
bound
pusha
add
cmpsl
cmpsb
add
add
mov
andl
popa
mov
add
in
add
add
fldt
add
mov
add
add
add
js
pushf
aam
add
movsl
add
in
ja
fwait
mov
lea
pop
push
push
lea
push
lea
push
push
call
add
mov
notb
xchg
mov
std
add
xchg
add
add
add
cmpsb
add
add
add
stos
add
pop
fldl
add
add
int
stos
insb
sahf
ja
add
add
add
jl
out
add
mov
movb
add
icebp
mov
push
add
mov
xchg
add
add
stc
add
pop
push
push
push
push
push
push
push
lea
push
call
add
add
jne
add
testb
add
arpl
pop
sti
clc
movsl
hlt
nop
pusha
popl
add
out
add
add
add
std
test
add
orl
add
add
out
mov
add
add
fwait
add
cmc
add
iret
mov
add
add
add
addb
add
push
stos
mov
faddl
out
add
add
add
jbe
mov
lea
pop
call
push
ror
lea
add
pop
cmpl
jne
push
add
ror
xor
inc
pop
pop
push
dec
ror
ror
pop
pop
pop
pop
push
ror
not
pop
leave
ret
push
shl
pop
push
push
push
push
push
push
call
pop
pop
add
push
jle
add
add
cwtl
mov
add
add
add
add
add
movsb
mov
test
scas
fsubl
add
mov
add
mov
add
cmpsb
out
add
add
jb
mov
add
add
jnp
lds
lds
into
add
mov
arpl
add
add
add
add
mov
lea
pop
mov
add
push
push
push
lea
push
call
cli
pop
jbe
add
popa
add
pop
sti
push
add
scas
add
mov
add
addb
cmc
mov
mov
add
jge
int3
push
bound
add
add
push
xchg
push
stc
add
hlt
bound
add
mov
incb
xchg
test
add
add
bound
lahf
add
mov
mov
rcl
aam
bound
push
push
push
push
lea
push
call
scas
jbe
add
leave
test
add
add
jo
addl
add
scas
add
add
add
add
je
out
push
add
mov
shlb
loope
into
faddl
pop
add
test
into
leave
ja
stos
out
fsubrl
jbe
add
test
shll
imul
sarb
add
jge
mov
lea
pop
push
movl
push
dec
add
pop
push
call
push
push
shr
inc
pop
call
subl
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
shlb
mov
xchg
std
add
add
add
jge
fstpl
add
add
pop
add
fimull
mov
jne
xchg
lcall
mov
lds
add
addr16
add
xlat
loopne
mov
add
add
add
push
pop
push
jne
jbe
add
add
popf
jns
mov
mov
lea
pop
cmpl
jne
push
add
not
xor
pop
pop
push
push
push
call
add
add
add
add
ljmp
add
rcr
in
out
mov
pop
jecxz
add
cmpsb
add
cli
add
add
lods
xchg
mov
test
mov
js
lds
add
sti
les
add
add
add
add
add
jnp
ja
add
fwait
add
mov
mov
lea
pop
pop
pop
push
push
lea
push
push
push
call
arpl
loopne
mov
rcll
cmpsl
add
mov
out
mov
pop
mov
fstps
jp
add
add
add
clc
add
add
add
mov
cmc
pop
scas
addb
mov
add
pusha
hlt
repnz
fstpt
add
mov
mov
hlt
aam
iret
sahf
add
loopne
test
fmull
push
push
lea
push
lea
push
call
arpl
cmc
jecxz
jp
add
add
add
pop
add
scas
add
add
shlb
push
add
add
add
loopne
mov
lds
jp
mov
scas
in
shll
add
jae
pop
add
clc
mov
pop
call
out
add
fsub
jb
repnz
add
movsb
jns
add
add
pop
leave
push
push
push
call
mov
push
add
push
adcl
add
popf
cltd
nop
add
xlat
add
cmc
add
fcompl
add
add
add
add
pushf
pop
add
add
in
xchg
mov
xchg
add
add
xlat
out
pushf
out
xchg
bound
add
xchg
mov
add
les
imul
sti
mov
lea
pop
ret
push
push
rol
pop
mov
add
push
push
call
test
jecxz
jae
outsl
push
test
fcoml
add
test
mov
pusha
lods
jb
add
scas
add
mov
fs
pusha
roll
repnz
mov
add
add
vcmpss
data16
xchg
add
jbe
pop
add
add
ja
xchg
add
mov
add
add
jle
add
jb
add
lea
pop
push
push
dec
pop
push
push
push
push
lea
push
push
push
push
push
call
pop
nop
mov
cmp
add
repnz
add
add
testl
pop
jl
add
jbe
je
ficomps
fxch
add
fwait
jae
add
add
mov
add
scas
std
add
add
into
add
pushf
add
movsl
je
mov
std
js
push
add
stc
add
cltd
mov
lea
pop
mov
lea
push
push
push
push
push
call
test
pop
add
lret
cltd
imul
add
mov
jne
fldl
jo
mov
xchg
add
incb
mov
push
testb
leave
pushf
outsl
add
add
add
shll
out
push
lret
add
mov
jne
std
in
add
pushf
add
test
jno
add
repnz
mov
pop
jbe
fwait
add
jne
mov
lea
pop
sub
push
pop
mov
push
push
push
push
push
call
call
add
scas
push
iret
add
mov
xchg
filds
add
jmp
add
push
jnp
add
add
push
cltd
push
mov
add
add
mov
push
push
add
add
mov
add
add
add
add
test
add
addb
xchg
jne
add
pop
shr
push
lea
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
lea
push
add
mov
int3
add
clc
push
xchg
xchg
push
pop
add
add
mov
lea
add
mov
xchg
add
mov
add
add
mov
xlat
aam
mov
roll
fdiv
aam
add
add
add
push
push
rcrb
push
mov
ret
add
in
xchg
mov
mov
mov
lea
pop
add
push
sub
pop
mov
mov
push
push
push
call
mov
stos
pop
lds
cmpl
in
pop
roll
testb
jge
xchg
mov
cli
call
add
sahf
add
push
add
mov
add
xchg
mov
add
mov
xlat
lret
xchg
jl
in
iret
mov
f2xm1
add
add
iret
hlt
data16
out
add
fmull
inc
or
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
add
mov
mov
push
xchg
mov
subb
add
pop
sub
sti
mov
ret
add
pop
jle
add
xchg
js
js
mov
jne
add
lret
push
add
loopne
lds
lock
lea
pop
add
push
push
push
push
push
push
push
call
add
add
add
add
add
push
icebp
add
mov
mov
out
pop
lea
add
push
pop
add
movb
push
add
mov
add
mov
jge
mov
add
mov
arpl
mov
rolb
add
add
xchg
iret
loope
pop
loopne
xchg
push
fcomps
jmp
jmp
lea
pop
mov
mov
cmp
jne
push
push
push
lea
push
push
push
call
add
addr16
add
arpl
mov
add
add
add
add
jmp
xchg
test
iret
add
sarb
mov
add
add
add
add
popf
fucomp
and
xchg
ficoml
add
add
rcrb
pop
jmp
in
add
aam
bound
pop
cmp
jne
mov
movl
push
push
lea
push
lea
push
push
push
push
call
rolb
pop
out
add
mov
add
mov
lahf
addb
jp
add
add
add
add
jbe
add
add
shlb
xchg
mov
icebp
sti
add
push
mov
push
mov
ret
pusha
mov
add
incb
cwtl
or
std
mov
hlt
in
mov
lea
pop
jmp
push
xor
not
pop
mov
mov
sub
jne
push
push
push
push
push
push
push
lea
push
call
in
xchg
addb
out
std
add
add
push
add
lret
jne
mov
ja
shlb
imul
pop
add
jb
in
in
out
xchg
cltd
pushf
add
mov
mov
stc
mov
add
add
in
pop
lods
add
add
add
add
add
out
mov
lea
pop
mov
push
push
lea
push
push
call
lret
xchg
add
cld
xchg
fildl
jbe
icebp
mov
iret
fisubrl
jo
aam
add
std
add
add
add
sarl
add
add
add
add
mov
add
add
add
add
add
add
add
call
add
mov
add
add
pop
movl
push
shl
pop
jmp
mov
push
push
lea
push
push
lea
push
call
add
lret
lods
add
add
mov
in
js
negb
mov
mulb
jnp
add
shl
add
cltd
add
push
jl
mov
imul
add
add
add
xchg
lret
xchg
addb
add
add
out
add
lret
fiaddl
pop
mov
rclb
mov
lea
pop
mov
push
push
lea
push
lea
push
push
push
push
call
mov
movsb
pop
popf
add
add
mov
add
lods
out
pusha
fadds
data16
xchg
pop
scas
test
jl
add
movl
mov
add
rorb
add
stc
add
mov
loop
add
add
pusha
xchg
add
add
add
imul
xchg
add
aam
les
cli
add
test
inc
adc
call
pusha
add
cwtl
mov
mov
ljmp
mov
add
pop
add
int3
xchg
addl
add
cltd
add
add
ljmp
add
test
jp
pop
xchg
sti
add
repnz
push
add
mov
add
jp
mov
lea
pop
movl
push
push
push
call
mov
add
scas
add
ljmp
mov
mov
add
xchg
add
push
jle
orb
movl
fiaddl
js
movsl
add
stos
add
push
jp
mov
loopne
imul
add
xchg
add
add
shll
push
add
fcompl
add
add
add
mov
mov
test
out
jge
les
test
add
push
lea
push
push
push
push
push
push
push
lea
push
call
add
cmpsb
sti
push
mov
outsl
push
add
jns
mov
xchg
popa
sti
jmp
js
movsl
add
leave
test
mov
add
add
aam
add
incb
add
mov
jns
in
add
add
roll
add
std
add
add
cmpsl
add
add
add
mov
add
add
add
pusha
rorb
pop
mov
cmpw
jne
push
pop
mov
movl
push
rol
sub
add
shl
pop
jmp
pushl
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
jne
lds
add
xchg
add
mov
add
push
add
lods
add
mov
mov
shll
addb
add
lret
add
jb
loope
add
xchg
pop
mov
rorl
cmpsl
push
lods
jmp
xchg
xorl
add
pop
add
loopne
add
testb
pop
mov
add
add
add
std
mov
push
andb
pop
mov
push
push
push
push
call
mov
add
testb
les
mov
push
int3
xchg
add
add
add
add
mov
add
add
add
aam
loope
lea
add
mov
out
add
imul
add
add
popf
jb
xchg
add
add
add
lret
js
imul
pop
mov
mov
push
push
add
push
and
add
inc
sub
rol
not
pop
pop
push
push
lea
push
push
push
push
push
lea
push
call
pop
clc
faddl
mov
add
rcl
add
add
add
loopne
add
mov
movsb
pop
hlt
jp
add
jge
iret
lods
add
sahf
add
mov
xchg
ljmp
in
add
add
push
add
stos
add
pop
jecxz
jbe
lret
add
add
fs
add
push
mov
add
add
add
add
in
enter
xchg
add
mov
lea
pop
push
call
push
lea
push
push
call
add
add
add
add
lea
rcrb
jl
in
xchg
pop
iret
add
jno
xchg
cltd
addr16
rolb
fcoml
test
add
add
icebp
jle
in
add
mov
xlat
add
pop
imull
cmpsb
aam
add
add
fsubrp
add
add
add
popa
or
cmpl
je
push
push
sub
shl
shl
inc
push
push
pop
add
dec
sub
sub
sub
add
pop
ror
ror
pop
push
push
lea
xor
rol
pop
call
push
lea
push
call
add
push
add
add
add
mov
add
outsl
mov
push
mov
push
add
push
fidivs
mov
mov
add
aam
test
cmpsb
jmp
roll
insb
add
loop
add
pop
add
mov
scas
add
jne
add
push
add
repnz
popl
mov
lea
pop
cmpl
je
push
push
lea
push
push
pop
add
ror
xor
not
sub
dec
xor
pop
ror
rol
ror
pop
push
add
xor
sub
ror
pop
push
call
cmpl
je
push
push
add
add
not
push
xor
add
rol
xor
add
sub
rol
xor
pop
sub
shl
shl
pop
push
add
dec
dec
pop
push
push
dec
pop
call
cmpl
je
push
push
xor
lea
dec
push
push
pop
add
add
add
add
sub
shr
pop
dec
pop
push
ror
pop
push
push
push
call
push
neg
sti
mov
lock
lods
jo
jge
add
test
push
add
add
jl
xchg
mov
add
mov
add
lret
add
add
add
pop
xlat
cmpsl
cmpsl
cli
xchg
pop
pop
pop
add
gs
add
in
les
sarb
mov
add
stos
imul
or
add
add
cmpl
je
push
push
inc
xor
push
and
add
lea
not
sub
ror
not
pop
shr
pop
push
sub
sub
shr
pop
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
mov
push
sahf
mov
add
lods
push
xchg
mov
icebp
mov
add
cmpsb
add
popa
jns
sahf
int3
add
aad
add
pop
jne
add
add
sbbl
cltd
cmpsl
add
add
mov
popa
add
cmpsb
mov
add
imul
add
mov
cmpb
add
pop
add
lods
add
mov
lea
pop
call
cmpl
je
push
push
shl
sub
dec
push
or
inc
add
add
sub
inc
pop
inc
lea
pop
push
sub
xor
pop
push
push
dec
add
shl
pop
call
push
push
push
lea
push
push
push
push
call
imul
outsl
pop
cltd
imul
jmp
data16
imul
add
add
lcall
call
mov
add
jno
add
add
add
add
jp
mov
add
mov
pop
mov
pushf
add
add
cld
mov
mov
add
int
add
stos
shll
mov
lea
pop
cmpl
je
push
push
add
shl
shr
push
xor
add
sub
sub
shr
ror
pop
sub
pop
push
shl
pop
push
call
cmpl
je
push
push
inc
dec
push
push
pop
add
shl
sub
sub
shl
sub
pop
ror
pop
push
add
xor
inc
pop
push
call
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
sti
add
add
fwait
add
enter
mov
data16
rolb
add
jnp
add
mov
clc
add
add
push
add
add
jge
scas
add
add
mov
add
ljmp
fists
popa
rcl
out
pop
int
enter
mov
popa
sub
cmp
rol
je
push
push
add
push
push
pop
add
shr
ror
sub
add
pop
lea
rol
inc
pop
push
lea
push
push
push
push
push
push
push
call
add
add
fistpl
out
add
jbe
add
xchg
mov
stos
je
pop
jge
cli
add
les
push
add
add
mov
mov
xchg
add
add
pop
add
pop
add
add
mov
mov
add
aad
popa
pop
add
add
addb
add
add
ret
add
add
lea
pop
push
call
cmpl
je
push
push
push
and
add
not
sub
add
sub
ror
sub
xor
not
pop
sub
xor
add
pop
push
push
push
push
push
push
push
call
scas
add
scas
add
leave
xchg
add
add
popa
loope
fisttps
add
push
cld
pusha
in
rcrl
jnp
mov
jl
add
repnz
lcall
add
outsl
add
rorl
mov
insb
add
filds
int
add
in
add
js
in
add
mov
add
xchg
add
lea
pop
push
call
cmpl
je
push
push
ror
sub
push
xor
add
inc
sub
lea
add
pop
shr
ror
sub
lea
pop
push
sub
sub
pop
push
push
push
push
push
push
call
add
lretw
add
gs
lcall
xchg
add
mov
loopne
mov
out
mov
add
in
iret
add
mov
movsb
std
mov
add
add
mov
add
nop
mov
add
add
rorb
add
add
add
test
mov
lcall
lahf
cmc
ja
pop
test
pop
call
cmpl
je
push
push
add
sub
push
sub
add
shr
xor
sub
sub
xor
pop
pop
push
shr
shr
ror
pop
push
call
push
push
call
jmp
enter
add
add
add
add
xchg
pusha
add
fs
push
add
mov
jbe
jle
add
add
stc
add
aad
fidivs
add
add
lods
insb
ljmp
mov
shrb
in
fadds
add
mov
add
lea
pop
cmpl
jne
mov
movl
push
shr
add
ror
lea
pop
jmp
push
pop
xor
pop
pop
push
rol
xor
ror
pop
pop
pop
push
rol
pop
leave
ret
push
push
lea
push
push
push
push
push
call
add
imul
cmpsl
add
int3
add
aad
sti
xchg
sahf
ret
add
xor
lret
out
pop
add
lods
movsb
nop
add
add
push
add
xorb
push
add
movsb
xchg
mov
std
add
add
bnd
add
test
roll
push
pop
add
shll
test
push
shr
pop
mov
lea
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
stc
add
out
movsl
lds
icebp
mov
lods
mov
mov
pop
cmc
add
add
add
jno
add
rcrb
stos
fiadds
out
pop
lds
add
add
lret
add
add
imul
add
fstpl
add
addb
add
pop
mov
push
add
pop
add
cmpl
jne
push
push
sub
shr
xor
push
or
not
add
inc
inc
sub
lea
sub
lea
pop
add
pop
push
pop
pushl
push
not
sub
pop
call
push
call
push
lea
push
push
push
push
push
lea
push
push
call
enter
mov
add
fcompl
out
icebp
pop
add
lods
imul
add
nop
mov
fiadds
stos
jbe
ret
les
clc
add
mov
mov
mulb
jl
cmpsb
add
add
add
add
loope
add
ror
test
push
repnz
js
leave
pop
add
cmpsb
push
add
add
push
add
add
lea
pop
jmp
push
push
call
push
stos
movsb
add
add
add
into
add
movsb
mov
mov
xchg
push
mov
add
add
add
add
xlat
in
enter
add
mov
mov
popl
xlat
jb
in
add
fs
jbe
ficoms
add
jmp
push
fucomp
add
filds
add
mov
lea
pop
cmpl
je
push
shr
lea
pop
cmpl
jne
leave
push
inc
pop
add
push
add
sub
pop
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
test
shrb
mov
add
push
fldcw
add
lock
add
sbbl
add
add
pop
mov
mov
jo
sar
mov
add
adcl
add
mov
jns
movb
outsl
push
add
mov
cmpl
repnz
mov
imul
movl
into
add
push
add
orb
sub
push
add
lea
pop
pop
pop
push
push
call
add
faddl
ljmp
add
jne
pop
addl
add
sar
call
jo
push
shlb
add
xchg
aad
arpl
mov
mov
jbe
std
add
push
lret
mov
add
pop
pushf
xchg
add
mov
fwait
mov
push
add
incb
movsb
mov
lea
pop
leave
add
ret
push
not
add
sub
pop
jmp
push
shl
lea
pop
cmpl
jne
push
push
inc
add
xor
push
push
pop
add
xor
sub
not
sub
pop
inc
not
dec
pop
pushl
push
push
push
lea
push
call
lret
add
mov
add
add
add
out
cmc
add
movb
jmp
scas
shll
pop
mov
add
fs
add
mov
in
add
add
aad
cmp
add
add
add
adc
and
loop
mov
push
nop
xchg
sti
pop
mov
mov
add
iret
add
add
int3
lea
pop
call
push
sub
pop
push
call
jmp
push
not
pop
cmpl
jne
mov
mov
push
dec
pop
push
push
push
shr
inc
push
sub
add
lea
add
sub
add
pop
pop
push
lea
ror
pop
pushl
call
call
push
push
shl
shr
add
push
xor
add
dec
sub
xor
pop
not
xor
add
pop
push
push
lea
push
push
push
call
add
mov
in
mov
push
arpl
add
lret
mov
add
add
add
popf
jno
add
push
mov
add
mov
add
js
jnp
add
jno
push
add
add
hlt
je
shlb
jns
lock
out
add
mov
ret
mov
out
add
mov
lea
pop
pushl
push
push
push
call
outsl
add
fcmovne
add
test
add
add
add
add
aad
icebp
cmpsb
add
aam
fildl
add
add
mov
add
mov
mov
jp
add
add
push
mov
add
xchg
rclb
mov
iret
add
jle
add
add
add
mov
or
call
push
add
pop
call
push
push
shl
sub
lea
shr
push
or
inc
add
add
add
xor
sub
inc
inc
pop
rol
pop
push
lea
push
push
push
lea
push
push
push
call
scas
add
pop
add
cmpsb
mov
ja
mov
popa
pusha
addl
popl
cmpsl
add
cld
mov
movb
add
add
cmpsb
addb
add
lea
add
insb
stos
out
cmc
addr16
add
rcl
add
insb
add
add
jo
add
add
xchg
loopne
mov
lea
pop
pushl
call
push
add
sub
pop
call
push
push
shr
rol
push
push
pop
add
shl
sub
lea
pop
shr
dec
rol
lea
pop
push
push
sub
add
not
add
push
or
inc
add
add
dec
sub
shr
dec
pop
sub
rol
add
shr
pop
push
sub
xor
pop
call
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
iret
xchg
mov
ret
xchg
add
add
gs
mov
scas
jne
scas
add
data16
add
add
add
movsl
ljmp
add
lock
mov
add
mov
pop
mov
jge
jae
popl
add
les
jmp
mov
cld
div
cltd
arpl
test
xchg
add
mov
jp
mov
pop
sbbl
jp
aam
bound
pop
push
push
lea
push
lea
push
call
add
add
cltd
cld
add
lods
add
lock
add
aad
xchg
add
add
mov
add
arpl
ljmp
pusha
fwait
mov
addr16
cli
add
loopne
add
roll
mov
aad
mov
fildl
mov
add
mov
add
mov
lea
pop
dec
jne
push
push
call
imul
mov
subl
outsl
add
add
mov
fmul
add
add
xchg
add
outsl
xchg
add
add
add
mov
add
leave
cli
add
loop
in
rcrl
add
add
jne
push
cltd
add
add
add
mov
aam
xorb
add
enter
jecxz
mov
lea
pop
call
jmp
push
add
sub
pop
call
push
push
lea
push
xor
add
sub
dec
ror
not
pop
sub
pop
pushl
push
push
push
call
imul
mull
imul
push
add
add
jb
add
lods
xchg
push
add
out
pop
xchg
pushf
iret
add
add
add
adcb
mov
add
jecxz
movsl
push
in
mov
add
add
add
ljmp
in
add
movsb
sarb
add
rol
add
push
add
mov
lea
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
push
call
cltd
mov
jl
mov
cwtl
add
ljmp
add
pusha
movl
nop
add
jmp
xchg
add
add
lea
loop
jnp
add
add
cmpsb
cltd
add
add
hlt
mov
cmpsl
aad
push
pop
mov
add
add
add
add
into
popa
cltd
add
add
add
flds
add
in
fwait
xchg
mov
lea
pop
push
push
lea
ror
shr
pop
call
mov
lea
push
push
dec
push
xor
add
ror
sub
lea
rol
shl
pop
sub
not
pop
push
push
push
call
mov
push
lods
add
test
loop
scas
popa
scas
stos
out
add
jp
icebp
push
lret
push
lret
data16
sti
add
push
jno
pusha
push
out
add
mov
enter
add
xchg
lods
push
mov
mov
add
add
add
mov
add
xchg
mov
mov
flds
add
add
incb
push
int3
out
orb
pushl
call
push
not
sub
pop
push
push
push
push
push
lea
push
push
push
call
jmp
pop
add
add
add
pop
push
add
movl
mov
add
add
cmc
mov
arpl
add
leave
jae
add
mov
add
in
std
jp
out
int
add
jge
add
jo
add
pop
add
mov
add
leave
shr
mov
mov
lea
pop
call
push
push
ror
not
not
push
or
not
add
sub
rol
shl
sub
inc
pop
add
pop
push
sub
pop
pushl
push
push
push
lea
push
call
lret
out
fistpl
repnz
jp
in
mov
fiaddl
rolb
add
add
add
push
push
sahf
add
add
jl
add
mov
mov
add
add
add
stos
loope
addb
out
add
add
add
loop
xchg
loope
fs
push
stos
jns
add
addr16
xchg
std
pop
lret
pop
cwtl
loope
mov
add
mov
lea
pop
call
call
mov
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
test
stc
add
mov
addb
add
push
add
iret
shl
leave
add
js
test
add
add
add
add
add
lds
add
sti
lds
int
xchg
pop
test
add
mov
add
add
jecxz
xchg
mov
lea
pop
lea
push
push
add
push
or
inc
add
add
sub
shl
shl
shr
pop
rol
pop
push
sub
add
add
inc
pop
pushl
call
lea
push
push
lea
push
call
ljmp
mov
pop
add
mov
push
add
cmc
notl
enter
testb
je
add
add
jo
jmp
add
gs
bound
pop
mov
popf
jo
call
add
add
push
movsb
arpl
mov
cld
add
std
popf
add
nop
cli
add
add
add
add
test
mov
add
mov
push
add
pop
push
push
push
push
rol
shr
not
add
pop
pushl
push
push
not
push
and
add
add
sub
inc
xor
inc
xor
pop
rol
pop
push
push
inc
pop
call
push
push
inc
dec
add
shl
push
sub
add
rol
sub
ror
dec
add
pop
ror
rol
rol
ror
pop
push
xor
pop
pushl
push
add
rol
sub
pop
call
push
add
pop
push
call
push
push
not
xor
xor
push
sub
add
inc
lea
dec
add
sub
add
inc
shl
pop
add
pop
push
push
call
sbbb
not
gs
add
add
add
lahf
shl
add
xlat
xchg
shll
add
jl
scas
add
mov
add
movl
add
add
int
add
cmpb
roll
jb
jl
mov
pop
add
clc
js
out
add
add
add
add
movsl
jle
add
add
xchg
int3
mov
lea
pop
pushl
push
push
call
insb
cmpl
fisubs
add
int
imul
add
hlt
add
pop
addb
add
nop
add
push
out
cwtl
add
lods
add
stos
add
pop
fildl
add
stos
jne
add
add
add
add
mov
pushf
add
ljmp
mov
push
add
add
add
add
add
push
add
add
int3
lea
pop
call
call
jmp
push
lea
lea
pop
pushl
mov
jmp
push
push
ror
add
push
sub
add
sub
shl
xor
sub
sub
not
inc
pop
add
sub
sub
sub
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
fdivrs
mov
call
out
add
leave
add
xchg
cmpsl
jb
lods
in
add
ljmp
mov
test
rolb
add
add
movsb
mov
loope
insb
stos
outsl
cltd
xchg
add
add
ret
ret
add
push
pop
std
into
add
fistl
rolb
mov
xchg
add
push
outsl
push
add
push
aam
add
pop
add
scas
pop
rorb
pop
pushl
push
push
push
push
push
push
push
call
add
loopne
add
test
fildll
mov
add
add
std
clc
add
add
add
xlat
cmc
add
xorl
jge
js
lcall
add
in
sti
stos
hlt
mov
add
notb
scas
add
xchg
add
clc
leave
add
int
jge
std
add
pop
add
fwait
add
hlt
lea
pop
call
push
call
push
push
xor
add
inc
push
push
pop
add
shl
sub
add
rol
dec
pop
pop
push
push
lea
push
call
add
add
jnp
add
out
add
mov
popf
cmpsb
add
arpl
xchg
in
cld
orl
add
xchg
add
add
loopne
pop
rolb
jns
fnstsw
add
mov
add
je
push
add
out
add
lret
add
jge
add
fs
add
pusha
or
pushl
call
push
lea
add
pop
push
call
leave
push
push
push
push
push
push
push
call
je
cwtl
shl
js
add
loope
add
pop
outsl
pusha
add
jo
add
pop
leave
lret
add
fildl
testl
add
sarb
xchg
scas
jbe
add
cli
cmc
nop
jns
mov
repnz
jo
pop
add
add
jbe
shl
pusha
int
add
mov
add
outsl
add
rolb
mov
lea
pop
add
push
rol
not
sub
sub
pop
pop
push
add
xor
pop
pop
pop
push
not
pop
pop
push
push
lea
push
push
push
lea
push
call
add
rcrb
push
cld
add
fwait
add
add
mov
int
sahf
add
scas
sti
lcall
add
rcrb
add
jmpw
mov
lods
add
fidivl
lods
jno
add
data16
hlt
add
fisttpl
clc
js
mov
imul
pop
leave
add
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
in
add
push
xchg
add
jb
testl
add
add
mov
sbb
stos
add
aam
add
add
gs
xchg
mov
add
ja
stc
test
adcb
jb
add
add
mov
add
xchg
xchg
sarb
mov
lea
pop
ret
push
dec
add
pop
leave
ret
push
push
shl
sub
pop
mov
cmpl
jne
mov
push
push
push
push
push
push
push
push
call
aam
xchg
pop
add
test
add
lret
add
add
pushf
push
add
add
mov
pop
flds
push
jmp
roll
add
lcall
add
lods
mov
mov
add
stc
add
cmc
add
add
add
loopne
jo
aad
aam
lds
pop
jmp
mov
and
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
loope
add
int
add
cmc
add
sahf
add
xchg
jge
push
add
add
add
xchg
xchg
fistpl
cmpb
test
imul
xchg
popl
jbe
iret
cwtl
jns
push
add
in
loope
add
andl
add
add
bound
pop
xor
push
rol
pop
xor
push
push
push
push
push
push
push
call
decb
xchg
push
add
add
add
add
stos
sbb
int
add
test
xchg
fistpl
add
fisttps
add
add
add
add
jnp
out
jne
push
add
mov
aam
add
add
fiadds
ficoml
push
xlat
in
add
add
mov
mov
lea
pop
add
xor
dec
push
sub
sub
shr
pop
sub
push
push
lea
push
push
push
push
lea
push
push
call
add
stos
cmpsb
out
in
add
add
mov
lahf
call
lock
add
cmpsb
fldl
add
add
sahf
out
arpl
mov
loop
add
push
add
fadds
add
cld
repnz
bound
add
outsl
add
xchg
add
add
add
cmp
movsb
add
push
add
add
add
jo
in
add
int3
lea
pop
jmp
push
lea
push
push
push
call
add
mov
into
push
push
add
stos
push
pop
add
in
idivl
add
add
add
add
test
roll
bound
out
add
imul
push
add
popf
add
add
lcall
push
add
aad
mov
popa
adc
add
add
push
sub
pop
pushl
push
rol
sub
not
xor
pop
pop
push
push
push
push
call
add
fadds
xorl
add
movsl
fiaddl
add
mov
js
push
popl
mov
rcrb
add
add
iret
scas
in
add
add
add
cmpsl
add
xchg
add
add
add
pop
jns
add
add
xchg
add
std
add
mov
push
movsb
mov
mov
pop
mov
in
int3
lea
pop
sub
cmp
jne
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
mov
jbe
sahf
test
lock
scas
lea
add
xchg
pop
popl
stos
stc
lods
sahf
pop
sahf
repnz
lahf
jmp
add
add
cld
mov
add
test
add
jmp
fwait
out
add
add
cwtl
fidivrl
addr16
mov
outsl
popf
add
cmc
mov
push
push
mov
add
nop
out
mov
lea
pop
mov
lea
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
add
scas
xchg
add
add
std
add
add
loopne
js
add
add
mov
jmp
add
jge
xchg
in
add
add
push
jle
push
jnp
scas
add
add
mov
aam
add
jle
add
hlt
mov
add
call
lcall
fisttpll
pop
sub
mov
shr
push
not
not
sub
add
pop
add
sub
pushl
push
xor
sub
add
add
pop
pop
push
pop
shr
and
push
shr
xor
inc
pop
sub
cmp
jne
push
sub
pop
leave
push
push
push
call
add
push
popa
mov
xchg
mov
add
pop
test
lock
add
subl
negb
add
xchg
scas
pop
fmuls
les
addb
add
bound
fs
push
outsl
push
lea
add
pop
mov
add
xchg
add
add
add
add
lcall
icebp
add
filds
mov
lea
pop
ret
push
push
push
call
add
add
jmp
jne
clc
add
int
add
mov
mov
test
jecxz
cmpsb
lea
sti
out
xchg
call
pop
add
pop
add
movsw
add
push
jns
add
jle
pusha
mov
add
add
iret
add
add
js
add
fnstcw
enter
lahf
add
mov
mov
lea
pop
push
push
lea
push
call
mov
repnz
add
add
mov
jns
jno
imul
add
pop
add
jae
jmp
mov
add
repnz
jns
add
xchg
jo
push
add
repnz
push
add
add
mov
pop
mov
add
notl
imul
lea
add
add
aam
bound
pop
mov
add
push
push
push
call
add
add
jns
jo
add
std
add
int3
mov
fiaddl
les
add
pop
add
xchg
add
add
outsl
fiaddl
popl
fsubrs
add
mov
add
stc
jnp
add
mov
mov
push
add
add
lahf
add
jnp
add
add
add
orb
lea
pop
push
push
dec
ror
pop
push
push
push
inc
pop
push
mov
lea
push
not
shl
add
dec
pop
sub
mov
push
push
push
push
call
mov
lcall
pop
pop
incb
pop
mov
flds
jno
lret
mov
add
jle
data16
or
in
add
add
stos
add
mov
add
add
add
call
add
pop
add
leave
loopne
add
pop
add
mov
add
lahf
jge
add
sahf
add
mov
mov
arpl
pop
shr
push
lea
push
push
push
push
lea
push
call
mov
add
add
lds
in
mov
js
sti
movsb
add
add
add
xchg
fwait
jb
add
add
xchg
add
mov
add
loopne
call
add
add
in
add
shlb
mov
filds
add
fldl
push
add
jb
push
gs
fldl
mov
xchg
add
jecxz
xchg
fiaddl
mov
lea
pop
add
mov
push
add
pop
add
push
push
push
lea
push
lea
push
lea
push
call
mov
roll
out
add
xchg
pop
add
mov
popfw
addb
add
xchg
enter
add
add
rolb
add
out
add
insb
add
pop
xchg
fdivrl
push
fsubrl
lea
add
push
xchg
imul
add
add
sti
add
add
add
add
add
jecxz
mov
mov
lea
pop
mov
add
push
add
sub
pop
xor
mov
and
push
add
rol
lea
not
pop
call
push
rol
pop
add
cmp
je
push
add
ror
add
pop
add
push
push
push
push
push
call
add
jle
add
mov
mov
out
je
fildl
clc
add
iret
add
add
jmp
mov
add
add
mov
jmp
jo
fxch
add
add
push
add
add
enter
test
ror
add
cld
add
add
in
add
add
push
jb
add
add
add
int3
push
bound
popf
mov
bound
adc
cmpl
jne
push
ror
pop
xor
push
sub
pop
pop
push
sub
ror
sub
pop
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
cltd
add
xchg
add
add
loop
add
add
in
rolb
out
push
in
scas
lock
je
scas
add
sar
jle
add
cmpsl
shll
push
popf
add
xlat
out
jbe
iret
jge
outsl
add
cmpsb
push
fiaddl
add
add
into
add
add
rolb
mov
insb
in
xchg
mov
add
fisttpl
pop
pop
pop
push
not
sub
shl
inc
pop
leave
push
sub
pop
ret
push
push
push
lea
push
push
push
lea
push
call
sti
add
add
stos
add
clc
xchg
lret
mov
add
lret
add
je
loopne
add
pushf
ljmp
add
jne
addr16
jmp
add
enter
out
out
jl
push
out
mov
add
in
out
stc
call
add
mov
out
jl
add
in
lea
add
xchg
ja
add
roll
xchg
adcb
pop
mov
add
push
push
lea
push
push
lea
push
push
call
mov
add
addl
loopne
xchg
xchg
ljmp
cmpsl
add
out
pop
add
add
add
add
iret
clc
push
add
add
add
add
cltd
add
add
pusha
add
add
mov
mov
jle
add
mov
js
xchg
add
jge
scas
pop
loopne
mov
lea
pop
push
push
rol
shl
pop
pop
push
lea
pop
pop
mov
push
push
push
push
push
lea
push
push
call
ja
lahf
add
movsl
lock
nop
pop
roll
add
pop
pushf
mov
xchg
xchg
push
add
add
add
icebp
pop
mov
hlt
add
add
mov
in
mov
add
xchg
add
pop
in
add
jne
lret
push
out
jae
add
add
testl
stc
add
xorl
sahf
out
scas
push
add
fs
push
add
push
add
mov
outsl
fistps
sbb
inc
repz
call
cwtl
pop
xor
push
push
lea
push
push
lea
push
push
lea
push
call
add
test
mov
add
sbbb
mov
test
add
mov
mov
xchg
pusha
fsts
rol
rolb
mov
jge
add
mov
fidivl
stc
ljmp
mov
add
add
mov
mov
jbe
add
add
mov
scas
aad
add
add
ret
pop
lea
cmpb
sbb
pop
push
pop
pop
pop
push
push
lea
push
call
xchg
pop
mov
add
rolb
add
insb
xchg
lahf
jp
mov
mov
jmp
loopne
add
add
add
add
pop
mov
jecxz
testb
lahf
cmpsl
shll
add
ret
add
add
add
ret
loope
add
or
pop
pop
push
push
push
push
call
cmpl
mov
add
into
add
lcall
fisttpll
cld
jae
add
add
test
mov
push
les
lods
add
jnp
filds
push
gs
clc
add
fldcw
jbe
lcall
add
add
add
add
call
adc
ret
push
push
pop
mov
push
push
push
push
call
stos
mov
lret
add
je
test
add
add
jne
xchg
push
incb
addl
movsl
popf
mov
fs
cli
push
add
jmp
add
pop
add
mov
stc
add
jae
div
add
add
add
ja
push
sarb
aad
add
jp
push
mov
insb
xchg
hlt
add
js
push
add
mov
lea
pop
add
push
xor
pop
push
push
dec
pop
push
push
push
add
add
xor
pop
push
push
push
push
push
push
push
call
roll
roll
add
cli
out
mov
add
sahf
add
mov
int
mov
lahf
mov
jno
je
add
add
jne
add
add
add
lahf
pushf
add
movsl
add
push
add
imulb
cli
add
ret
roll
fs
mov
cmpsb
lea
push
popa
jno
add
lods
mov
lea
pop
mov
push
push
push
lea
push
call
imul
add
sti
clc
fistpl
add
in
add
add
in
cli
popf
je
movsl
add
pop
jns
add
add
sar
add
loope
add
push
jge
add
add
add
imul
add
push
add
data16
out
add
lret
add
push
add
int
sahf
ficoml
add
add
arpl
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
cld
rclb
add
add
scas
in
fiaddl
add
add
jmp
loopne
add
jo
test
mov
mov
add
mov
add
add
add
add
mov
test
add
pop
andb
pop
in
add
arpl
mov
stc
add
xchg
add
in
loopne
pusha
fstps
cld
lea
pop
pop
lea
push
shr
add
dec
pop
sub
push
push
call
mov
lods
add
loope
leave
lods
add
add
pop
add
add
add
add
add
lcall
xchg
mov
testb
xchg
std
jmp
popf
jl
js
add
mov
add
scas
pop
add
jecxz
pop
add
cmpsb
lahf
add
add
int3
lea
pop
mov
push
ror
pop
shr
add
mov
push
add
sub
pop
add
push
sub
inc
pop
pushl
push
xor
dec
add
lea
pop
popl
mov
add
push
push
push
call
in
in
push
mov
add
popa
add
add
pop
lods
add
add
add
pusha
push
loopne
push
add
add
aad
add
jl
call
add
popa
mov
add
add
add
jp
jnp
pop
add
add
add
into
mov
add
fadds
pop
std
add
popa
add
add
pop
xor
lea
push
shl
sub
not
pop
mov
add
xor
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
rolb
ret
loope
add
scas
mov
mov
fiaddl
mov
push
roll
add
push
mov
rolb
out
int
test
movb
push
in
loopne
add
in
mov
add
add
loop
lahf
xchg
pusha
add
clc
mov
add
test
fildl
in
push
movsl
mov
out
les
jae
add
add
push
xor
ror
rol
lea
pop
nop
push
push
lea
push
lea
push
lea
push
call
mov
add
xchg
ret
push
mov
add
add
push
jnp
sti
in
add
addl
xchg
mov
insb
jb
call
add
pop
scas
jmp
add
cmc
pop
fnstenv
lock
adc
movsb
in
jp
push
stc
jmp
fiadds
mov
test
mov
lea
pop
nop
push
add
pop
cmp
je
push
push
lea
push
push
lea
push
call
mov
jmp
sti
fcomp
mov
clc
mov
add
add
jae
add
jle
jae
add
int
add
add
lock
loop
aam
add
add
nop
add
fwait
add
ja
mov
movb
fiaddl
jp
movb
in
mov
bound
push
cwtl
add
add
add
push
imul
nop
push
lea
push
call
push
jo
aad
add
not
test
add
fiaddl
add
add
fcomp
mov
mov
add
add
scas
incb
mov
js
jle
add
test
add
ja
cmpsl
pop
add
repnz
mov
pushf
filds
add
add
rcll
add
add
gs
fstp
idivl
add
add
mov
mov
pop
nop
inc
push
lea
push
lea
push
push
push
call
add
add
addr16
add
lret
add
push
add
add
stc
add
pop
pusha
mov
add
sahf
add
add
lock
shr
add
add
in
roll
leave
add
cld
leave
add
shrb
add
push
hlt
mov
add
fwait
mov
xchg
loopne
ret
pop
add
pop
nop
nop
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
xchg
movsl
mov
add
xchg
pop
mov
add
pop
shl
movsl
mov
jmp
add
rcl
mov
add
in
add
test
add
add
fidivrs
in
mov
in
pop
icebp
popf
pop
lock
add
aam
aad
cld
add
cld
add
xchg
bound
pop
cmp
jb
xor
jmp
push
shr
shl
shl
pop
mov
push
dec
pop
add
push
lea
push
lea
push
lea
push
push
push
push
push
call
push
xlat
ret
add
pop
add
add
add
add
add
lret
lahf
add
jmp
outsl
je
add
repnz
ret
cltd
mov
add
add
mov
pusha
add
call
add
add
pop
add
out
testb
into
add
add
jl
movsl
notl
lcall
cld
lea
pop
movzwl
push
add
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
add
arpl
add
add
add
loope
add
mov
add
add
add
repnz
cmc
leave
roll
add
mov
sbbl
cmpsl
roll
addr16
add
incb
std
add
fstp
add
add
add
add
push
ljmp
push
add
aad
add
mov
lea
pop
add
push
not
xor
pop
mov
xor
xor
push
push
lea
push
push
push
push
lea
push
call
add
add
push
jl
addr16
mov
add
add
mov
call
mov
cli
enter
add
xchg
popf
jbe
jno
roll
xchg
loop
xchg
add
mov
add
add
add
xchg
js
pop
lret
scas
add
pop
sahf
pop
push
into
lret
mul
add
fwait
mull
pop
fwait
mov
lea
pop
shl
push
ror
dec
not
pop
xor
push
lea
pop
shl
push
add
rol
shr
pop
xor
shl
xor
push
push
push
lea
push
push
push
push
lea
push
call
mov
lea
fadds
xchg
add
add
add
push
ret
sahf
popf
add
add
shr
mov
les
push
add
pusha
add
add
test
add
xlat
add
mov
add
add
rorl
mov
leave
pop
add
lret
add
scas
out
cmc
sar
add
add
and
roll
hlt
push
lea
push
push
push
call
insb
out
add
xchg
add
lahf
xor
push
cltd
popa
test
fistps
add
movsl
add
stc
orl
push
nop
jb
add
lods
add
insb
imul
add
fs
fcom
add
add
xchg
mov
cwtl
add
add
add
or
add
out
push
les
pop
pop
push
ror
sub
ror
pop
pop
pop
push
sub
add
pop
pop
push
push
push
push
push
push
call
test
mov
add
push
add
add
add
jle
std
ljmp
scas
mov
add
add
cmpsb
mov
add
mov
fisubl
mov
lahf
mov
std
sbbl
in
add
add
add
mov
mov
jns
movsl
xlat
add
jns
mov
jl
mov
fldenv
add
mov
lea
pop
leave
push
shr
shr
inc
pop
ret
push
inc
pop
push
mov
push
sub
rol
pop
push
push
push
push
push
push
push
call
jns
test
pop
shl
out
mov
jns
in
xchg
add
mov
gs
out
out
mov
in
lods
add
add
flds
add
scas
enter
xchg
xchg
mov
imul
jmp
gs
jecxz
add
xchg
add
add
fiaddl
addb
test
in
int
faddl
loopne
data16
add
mov
add
push
imul
enter
jno
jb
add
lea
pop
push
push
push
push
push
push
call
jbe
push
add
in
add
xchg
xchg
sti
add
rolb
push
loopne
add
addr16
push
lods
sarb
stc
mov
jl
lret
add
add
scas
testb
add
add
addb
add
add
hlt
jmp
shl
lahf
pop
les
lods
out
scas
add
add
insb
jo
test
add
xchg
push
add
filds
add
add
mov
lea
pop
mov
mov
mov
push
add
lea
pop
test
je
push
lea
push
push
call
ljmp
jnp
add
lea
ret
add
roll
add
xchg
push
movsl
cmc
ret
add
jge
pop
push
add
stc
pop
add
add
add
mov
xchg
call
jl
jmp
fadds
ror
adcl
add
cwtl
xchg
mov
mov
pusha
or
mov
push
pop
test
je
push
ror
inc
rol
sub
pop
mov
mov
mov
push
lea
push
push
push
push
call
pop
bound
outsl
enter
add
pusha
js
add
ja
add
nop
add
add
xchg
lret
pop
mov
ljmp
clc
mov
push
add
add
add
repnz
repnz
int3
add
arpl
hlt
aad
mov
add
add
add
mov
push
imul
scas
add
add
sahf
add
pop
add
mov
lea
pop
inc
push
push
push
push
lea
push
call
jmp
cltd
add
add
mov
jns
add
leave
pop
std
rolb
lret
nop
add
loop
out
xchg
add
add
add
add
fnstsw
pop
pop
lcall
movsb
add
add
std
fldl
add
mov
fadds
jp
movl
jle
cmc
add
add
push
int
jae
xchg
mov
lea
pop
cmp
je
test
je
mov
push
push
push
call
fs
push
add
add
repnz
movsb
loope
fsub
fs
lahf
pop
mov
ret
pop
add
fildl
in
push
push
add
push
xchg
add
add
mov
jmp
pop
scas
je
movsl
sub
cmc
sahf
fiaddl
fisubl
add
movsb
add
add
add
mov
iret
fidivl
mov
lea
pop
inc
cmp
je
push
lea
push
lea
push
call
add
add
add
push
ror
lret
in
add
add
mov
jb
add
add
xchg
mov
mov
jecxz
push
add
add
lock
mov
xchg
fiadds
mov
add
jp
jp
add
add
shlb
jo
push
push
add
add
add
out
jl
test
fsubrs
jnp
stos
xchg
add
jbe
lods
out
fsubl
data16
test
jne
xor
push
ror
shr
sub
pop
pop
push
push
lea
push
call
add
add
xchg
add
in
icebp
cwtl
lret
movsl
call
add
lea
out
add
push
les
mov
cmpsl
add
mov
lret
roll
lret
mov
add
jmp
xlat
fs
shlb
add
mov
add
je
mov
add
in
imul
pop
scas
arpl
leave
mov
aam
arpl
cld
add
cmpsl
add
shr
add
movl
or
pop
pop
pop
push
add
pop
leave
push
push
call
roll
push
pop
arpl
add
add
add
add
mov
cmpsb
popa
xchg
add
imul
fwait
xchg
bnd
int3
mov
push
pop
je
filds
push
cmp
test
lret
add
add
add
xchg
in
lret
int3
test
push
scas
mov
lea
pop
ret
mov
push
lea
push
push
lea
push
push
push
push
push
call
add
lds
xchg
arpl
add
stc
add
scas
add
push
ja
jge
push
mov
add
mov
push
fmulp
xchg
xchg
add
xchg
jo
add
movl
out
jno
add
add
loop
add
imul
shrb
movsl
movsl
xchg
mov
jl
mov
lea
pop
inc
push
pop
cmp
jne
lea
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
mov
popf
lret
add
add
popa
xchg
add
mov
push
add
xchg
pushf
lcall
push
add
mov
mov
fldl
mov
xchg
lret
imul
jbe
add
pop
mov
add
add
add
test
movsb
outsl
mov
ret
jle
push
jb
add
insb
jbe
add
add
mov
les
in
test
add
push
inc
add
pop
mov
add
push
sub
pop
cmp
jne
mov
push
push
push
call
enter
lea
add
flds
sub
push
stc
add
add
enter
test
hlt
add
leave
nop
ror
mov
lods
loopne
mov
out
add
jecxz
add
add
arpl
mov
pop
mov
add
shll
add
add
fs
add
add
add
lock
mov
add
icebp
addr16
lea
pop
test
je
mov
push
add
shl
xor
add
pop
add
cmp
je
push
not
add
xor
add
pop
jmp
xor
push
push
push
push
push
push
call
pop
add
in
addl
add
add
nop
adcl
add
add
add
jl
jno
add
popl
xchg
add
cltd
ljmp
imul
mov
add
xchg
mov
push
call
add
fs
jp
mov
mov
lret
xchg
add
pop
pop
push
push
push
push
push
call
mov
mov
xchg
test
fdivs
add
add
mov
xchg
add
cmc
cwtl
pop
fwait
add
cltd
add
jo
in
jne
add
add
fwait
jge
xorl
mov
gs
mov
add
fs
in
xchg
pop
mov
test
xchg
add
pop
xorl
int3
lea
pop
pop
push
pop
pop
push
shr
shr
pop
pop
push
push
push
push
push
lea
push
push
call
add
arpl
addb
popa
jae
lock
push
int3
add
ja
hlt
out
mov
fnstsw
push
add
add
stc
xchg
add
rol
movsl
fiadds
cwtl
pop
stos
add
pop
add
shrb
pop
bound
jbe
in
add
jge
add
add
jb
popf
add
mov
lea
pop
leave
ret
lea
push
lea
add
pop
pop
pop
push
add
shr
xor
pop
pop
pop
leave
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
add
test
jne
add
out
mov
add
idivl
add
fs
add
add
test
add
stos
incb
repnz
gs
int
lret
leave
loopne
popa
add
shl
add
add
add
xchg
jecxz
rorb
cltd
mov
add
fistpl
in
jbe
int3
imul
fnstenv
out
pop
addb
je
out
fadd
add
movl
add
mov
lea
pop
ret
push
sub
sub
xor
not
pop
mov
pop
pop
push
dec
pop
pop
push
add
sub
pop
pop
leave
ret
push
push
lea
push
push
push
lea
push
call
push
add
add
sti
leave
in
out
cmpsb
add
xchg
lret
add
add
jecxz
popa
jecxz
into
add
add
mov
scas
add
mov
test
pop
add
arpl
loopne
outsl
mov
mov
add
add
jmp
push
mov
pop
sub
add
test
add
loope
add
mov
add
add
xchg
mov
lea
pop
rol
rol
xor
push
shr
pop
inc
cmpb
jne
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
add
sti
movsb
mov
mov
sti
push
inc
mov
sti
movsb
sub
sti
push
push
mov
add
jge
inc
repz
push
hlt
inc
mov
nop
outsb
repnz
fdivs
pop
jne
out
jg
xor
sbb
xchg
and
pop
int3
sti
pop
sbb
sub
cmc
enter
lahf
cmp
daa
lahf
dec
mov
jno
pop
jo
fcmovb
dec
sub
mov
adc
add
add
push
gs
cli
pop
xchg
or
lods
test
pop
jle
and
mov
xor
lods
cmc
scas
mov
es
adc
testl
push
notb
xchg
xchg
dec
nop
outsl
push
inc
mov
push
adc
in
imul
ret
add
adc
jmp
arpl
sub
mov
mov
addb
push
cld
mov
xor
xchg
scas
pop
hlt
andl
sub
add
sub
and
mov
adc
push
jae
fadds
xchg
repz
mov
add
sbb
dec
int
ljmp
sbb
or
dec
js
divb
out
adc
dec
inc
out
mulb
mov
push
clc
add
xor
pop
pop
stc
aas
dec
push
jle
sbb
icebp
jge
cli
mov
sub
cmpsb
sub
xchg
lahf
and
xchg
leave
jge
mov
js
aaa
scas
into
add
inc
xchg
or
add
daa
mov
or
imul
out
pop
xor
movsl
fidivrl
adc
sbb
xor
shlb
out
inc
pusha
dec
movsb
add
fwait
sbb
ss
cltd
pop
dec
icebp
scas
push
fdivs
mull
jmp
adc
mov
test
cmpsl
mov
repz
jb
xchg
pop
cmp
mov
cld
sahf
outsl
or
pop
jle
jmp
jns
out
in
jp
and
daa
hlt
scas
mov
xchg
cmp
scas
mov
lret
adcl
ljmp
xor
aad
push
lcall
inc
mov
js
pop
push
adc
or
subl
inc
add
cmp
adcl
or
movsb
shrb
jge
jecxz
mov
cmp
cmp
pop
out
movsl
push
xchg
lret
dec
loop
xchg
test
ljmp
out
jg
jmp
inc
inc
pop
movsb
mov
pop
out
cltd
adc
roll
ret
std
in
scas
mov
std
sub
add
add
or
dec
inc
cmpsl
out
lods
cld
out
add
push
out
jne
jge
mov
sarl
adc
ret
loop
xorb
mov
jnp
int
mov
xchg
out
in
orl
add
mov
lcall
lock
lea
xlat
scas
loopne
adc
inc
push
fisubs
jo
jmp
cmp
inc
jmp
cmp
nop
outsb
sar
sub
in
leave
cld
cmp
dec
cmpsl
stos
enter
cld
xchg
dec
mov
cwtl
clc
out
iret
mov
out
div
mov
xchg
jbe
or
mov
inc
or
cmp
aam
iret
xchg
scas
icebp
jns
fsubp
aas
cmp
and
mov
fwait
popa
cmpsb
xchg
xchg
icebp
xor
or
lret
xor
in
lods
pop
pop
and
bound
mov
int3
mov
icebp
out
jmp
inc
mov
push
fldl
call
scas
outsb
test
add
jmp
pop
xchg
lcall
or
adcl
cmp
pop
push
jae
jb
jp
in
inc
mov
pop
jge
gs
and
loopne
ficomps
scas
lods
mov
shlb
xchg
dec
stos
dec
shll
cmpsl
hlt
std
mov
dec
icebp
add
cmp
inc
cld
jp
jmp
push
jmp
push
xor
loopne
in
mov
pop
sub
pop
adc
mov
mov
loopne
outsb
test
movsl
dec
mov
add
cs
push
orb
enter
pop
jmp
sbbb
push
sbb
icebp
cmp
out
bound
xchg
pop
fst
jne
lock
cmpsb
sub
pop
pop
out
push
pushf
cmp
rcll
jb
sbb
popa
movsl
xor
idiv
orl
push
or
push
test
nop
xlat
or
push
nop
lea
inc
outsb
scas
movsl
bound
mov
loop
in
pop
mov
test
mov
fimuls
add
xchg
jle
in
or
or
xor
pop
add
cmpsb
jmp
xor
ljmp
shrb
ds
sub
data16
jne
push
loopne
aad
in
mov
or
push
fnstenv
push
pop
inc
mov
and
jl
ret
imul
imul
icebp
adc
pop
movsb
fsts
mov
fcompl
aad
fstpl
repnz
cmc
sbb
negb
hlt
and
lret
push
mov
fs
jbe
push
arpl
out
jg
test
std
ds
shr
fisubrs
cmp
icebp
jle
jno
test
xchg
mov
gs
cmpsl
pop
mov
js
fistps
jae
push
mov
mov
cld
enter
outsl
mov
test
fwait
inc
scas
jp
pop
enter
jne
testl
movsl
push
shr
cmp
test
push
dec
push
cli
lret
adc
daa
sbb
pop
arpl
into
inc
cmp
loope
xchg
sbb
cmp
xor
jle
lds
xchg
stos
sbb
or
movsl
iret
call
test
xor
mov
mov
mov
lock
mov
lods
mov
jge
imul
mov
call
fwait
inc
into
pop
pop
jb
loope
shrb
jl
mov
push
nop
out
push
inc
outsb
sbb
mov
cmp
jecxz
icebp
jp
or
sbb
jecxz
enter
lds
dec
nop
sahf
mov
jge
icebp
cmp
loope
xchg
xor
ds
sub
es
lret
hlt
rorl
sbb
out
pop
jecxz
adc
sbb
lods
mov
adc
es
xchg
lods
mov
or
in
inc
adc
xchg
leave
aam
mov
fadd
mov
xor
pop
xor
xor
push
sbb
aas
pop
pop
mov
add
in
sub
or
dec
test
loop
push
and
cwtl
pusha
out
push
aad
das
push
subb
nop
mov
and
xchg
popa
dec
adc
in
mov
xor
stc
bound
add
sub
dec
aam
test
mov
cmp
sub
adc
mov
test
pop
pop
or
or
dec
sbb
dec
add
push
fwait
hlt
call
mov
cmp
pop
mov
jo
mov
cmp
movsl
pop
cwtl
mov
aam
test
test
push
mov
pushf
push
ret
pop
push
xor
dec
pop
test
xor
sub
mov
add
pusha
lods
xor
sti
jp
rcr
std
fcmovne
sub
fdivrp
not
pushf
and
jle
push
les
aad
loopne
fsubrl
popf
cli
test
inc
mov
xor
jbe
out
aam
insl
jae
push
pop
xchg
sahf
fcoml
mov
out
sub
dec
pop
pop
lods
bound
icebp
push
jle
mov
sahf
and
out
mov
rorl
mov
dec
mov
inc
dec
sub
dec
or
inc
fnsave
scas
jle
popf
out
aam
cmp
repnz
jo
and
pop
cmp
nop
push
mov
jne
mov
xor
ds
and
ljmp
enter
js
jbe
push
lods
xchg
ret
pop
inc
push
es
mov
push
repz
stos
dec
mov
mov
imul
or
or
movsb
imul
cmp
mov
in
cmp
cs
fs
push
call
cmpsb
push
ror
shlb
mov
cltd
adc
pusha
cmpsl
jmp
mov
sbb
cmp
lret
pop
mov
insb
xor
mov
or
ss
cltd
imul
movsb
out
imul
mov
je
incb
cli
repnz
jl
pop
cmc
imul
icebp
les
sarl
xor
adc
push
movsb
sti
mov
mov
ja
fwait
pushf
pop
push
pop
out
cmpsb
insb
loope
jle
aam
lock
cmp
mov
sbbb
pusha
add
push
or
xchg
in
rcrl
adc
dec
lods
push
dec
pop
imul
sub
dec
lods
cli
xor
mov
into
jae
mov
stos
dec
stos
out
js
dec
cmc
pushl
cli
inc
test
int
mov
shrl
shlb
add
ret
inc
andb
and
out
mov
xchg
and
ret
out
sbb
xchg
imul
and
andb
js
icebp
cmp
add
fistps
sahf
es
pop
lret
sbb
dec
xchg
mov
xor
sbb
and
sbb
arpl
inc
cmp
repz
jb
lcall
enter
xchg
pop
dec
test
cmc
outsb
pop
dec
adc
sbb
adcl
sbb
je
out
arpl
sub
cmp
hlt
nop
mov
insl
ss
adc
pop
test
xor
adc
inc
cmc
std
adc
nop
fidivs
mov
rorb
fisubrs
cmpsb
jmp
ret
and
ljmp
sti
dec
or
adcb
or
add
push
or
fmul
aad
jge
and
or
push
dec
insl
icebp
cli
xchg
sti
jns
js
push
dec
cli
push
cmp
insb
sti
dec
ret
dec
ljmp
je
cs
mov
xor
outsb
cmp
and
xor
dec
lcall
adc
mov
xchg
imul
xor
xchg
mov
dec
fs
or
iret
das
push
pushf
out
sbbb
ret
arpl
pop
scas
dec
sar
arpl
arpl
inc
das
ds
packssdw
lods
in
mov
cli
mov
dec
xorb
gs
inc
and
pop
fists
push
xorb
mov
adc
das
cmpb
pop
sub
sub
std
gs
sub
bound
lods
aaa
loop
std
dec
mov
mov
and
dec
add
pusha
scas
hlt
pop
ss
repnz
jnp
xchg
jb
pusha
test
roll
push
rorb
or
mov
or
mov
sbb
mov
sbbb
and
xor
xchg
ret
mov
push
cmc
sti
sbb
jo
std
add
and
adc
or
push
aam
lods
std
lock
xor
push
jp
mov
iret
pushf
popf
cmp
andb
dec
sbb
inc
int3
xchg
loope
or
mov
pusha
out
rcrl
sarb
in
repz
sbb
stos
je
and
jns
push
mov
sbbl
stc
sbb
jl
add
pop
outsl
repz
in
bound
pop
jb
xchg
mov
shll
xchg
sbb
dec
push
sbb
gs
jae
hlt
and
mov
rcrl
push
push
lret
jl
pop
xchg
add
sub
jns
xchg
mov
sub
cld
movb
push
push
and
fs
dec
imul
loop
enter
and
es
out
mov
notl
ret
mov
scas
jb
adc
stc
add
scas
dec
mov
mov
stc
xchg
pop
shrd
fiadds
fnstsw
xor
and
mov
fisubl
xlat
pop
sbb
xor
or
sub
or
in
push
jge
and
pop
jns
adc
fisubl
sub
push
adc
mov
cmp
xor
or
add
outsl
dec
cltd
adc
movsb
mov
cwtl
cmp
sub
sbb
jb
add
imul
popa
stc
xchg
mov
xor
repz
sbb
fistl
popa
xchg
int3
fisubl
mov
into
pop
inc
push
jg
mov
imul
std
ss
enter
leave
sub
fxch
int3
addl
out
aaa
inc
pop
pop
ret
scas
dec
repnz
bound
bound
xor
sub
test
fcompl
xor
scas
nop
cwtl
cli
push
repz
push
pushf
test
pop
mov
dec
mov
push
push
mov
inc
clc
or
out
cmpsb
cmp
xchg
leave
jns
and
inc
lret
icebp
shlb
sbb
mov
adc
and
fldcw
shrl
scas
shlb
fsubp
bswap
xchg
in
dec
cs
fidivrs
adc
jno
es
push
and
pop
shll
add
cmp
lds
daa
xchg
or
adc
and
xchg
mov
stos
dec
pop
insb
shrl
movsl
jecxz
push
test
sbb
xor
mov
ret
adc
shrb
jge
dec
sbb
add
popf
enter
push
sahf
mov
outsl
mov
inc
adc
xor
fsts
or
and
mov
std
mov
lret
jbe
xchg
in
mov
rorl
pop
sarb
negb
adc
and
xorb
sub
fnstsw
sbb
lods
fidivrs
sbb
in
hlt
dec
aas
xchg
inc
inc
lahf
sub
roll
inc
shll
cmp
pop
es
sub
xorl
adc
jp
mov
lods
xchg
dec
out
in
cmpsb
jnp
mov
rorb
or
mov
pushf
xor
cmp
mov
shll
cmpsb
cmpl
jg
ja
insb
arpl
adc
cltd
add
add
xor
mov
mov
mov
add
dec
in
incl
rol
xchg
out
cmp
sub
inc
pusha
pop
cli
scas
sti
or
idivl
mov
pop
xor
lods
add
push
call
fbstp
idivb
jne
imul
ret
pusha
out
movb
out
iret
xlat
lcall
cmp
pop
les
mov
mov
mov
daa
aaa
jp,pt
into
out
or
sarb
push
jae
or
add
inc
and
test
js
test
jmp
jmp
aas
push
xlat
cmp
inc
outsb
xlat
lock
icebp
sub
je
idivb
sub
and
sbb
mov
jns
test
es
shrl
dec
sbb
mov
mov
adc
std
xor
test
adcl
clc
sbb
je
in
jnp
push
xchg
nop
in
xor
sub
jns
xor
jnp
mov
xor
int
pop
cmp
sub
inc
mov
mov
shl
and
fcmovnb
dec
cli
add
push
rcll
jp
cmp
xchg
pop
xchg
daa
sbb
fdivrl
lock
mov
pop
xchg
aas
pop
lcall
push
push
aad
inc
in
sar
out
sub
pusha
inc
stos
push
loopne
mov
addr16
jmp
enter
push
pop
push
ja
pop
cli
je
imul
into
jmp
sbb
mov
call
dec
mov
aas
mov
std
or
xchg
sbb
pop
sbb
xchg
mov
xchg
dec
rep
sbb
ficoml
sbb
ljmp
call
sbb
add
aam
shrl
cmp
ret
lcall
pop
sahf
lods
dec
and
ret
insb
mov
xor
inc
xchg
sbb
je
xor
pushf
cli
js
lock
push
call
xlat
aas
loope
and
xchg
push
pop
xor
sbb
stos
int
jmp
out
adc
addr16
pushf
jmp
sub
adc
jge
push
rcrl
push
cs
cmp
xor
xchg
in
cmpsb
cmp
pmulhw
sbb
test
arpl
sti
inc
insb
sub
enter
addr16
jmp
push
dec
sbb
sar
push
insl
sbb
loopne
push
adc
mov
dec
pop
js
cmp
mov
adc
aaa
and
push
sahf
mov
push
lahf
adc
adc
ja
rorl
out
movhlps
jmp
xchg
push
mov
sub
les
sbb
idivb
add
or
push
jnp
addr16
ss
mov
jae
xlat
and
push
in
enter
push
cmpsb
jp
mov
xchg
mov
xchg
inc
test
inc
xchg
cmp
jnp
push
neg
stos
mov
imul
dec
inc
xchg
frstor
jno
int
inc
push
dec
jg
pop
jne
sub
out
cmpsb
pop
xchg
aaa
scas
cmpsl
inc
in
sbb
add
es
rcrb
mov
ret
pop
sub
mov
int3
ljmp
call
and
les
fisubs
pop
sbb
cmp
in
bound
rorb
push
ds
pop
popf
xchg
or
scas
sbb
ljmp
insl
and
xchg
mov
jmp
out
jns
pop
sarl
jnp
mov
orb
xchg
jns
shll
add
outsl
outsl
fisubrl
fistpll
rcrl
xchg
nop
les
fs
imul
leave
out
repnz
daa
adc
sub
out
and
out
jmp
mov
or
inc
pop
pop
paddsw
dec
sbb
cmp
fnsave
push
js
mov
mov
aam
jmp
cwtl
jle
mov
shlb
adc
add
clc
pop
mov
mov
outsb
and
cld
cmp
push
scas
adc
fbld
fs
gs
cmp
xchg
mov
and
mov
sbb
jbe
mov
xchg
pop
notb
in
mov
mov
movsb
lahf
scas
mov
ljmpw
jmp
ret
std
outsl
and
aas
lods
mov
push
cmp
loopne
mov
jg
push
mov
inc
ret
adcl
aad
pusha
out
mov
mov
mov
jle
lret
xor
push
ror
sub
pop
imul
iret
adc
pop
mov
stos
add
loop
test
lcall
pop
sbb
pop
scas
in
sbb
push
repnz
xor
xor
jle
mov
add
inc
cld
cmp
push
push
xchg
sarb
inc
xor
fsub
and
aas
pmovmskb
xchg
fdivs
lahf
adc
imul
inc
outsl
repnz
lods
stos
nop
xchg
xor
mov
fcmovu
add
add
cmp
insl
outsl
ret
cmp
leave
test
call
push
stos
mov
out
cmp
xchg
into
dec
movswl
and
ljmp
and
xor
xor
xchg
or
adc
xchg
and
mov
bound
xlat
out
mov
scas
ficoml
adc
lea
out
aas
dec
mov
loopne
mov
ja
push
sub
not
cmp
push
shrb
movsb
rorb
add
xchg
xor
movsb
xor
insl
mov
fcomps
scas
push
cwtl
out
sub
pushf
lock
test
push
cmpsl
sahf
hlt
push
and
aaa
adc
nop
in
mov
pop
push
in
fxch
shrb
out
rclb
jnp
test
in
scas
orb
mov
lea
and
jns
data16
aam
dec
addb
mov
pop
sbb
js
shl
fisttps
sahf
jb
lds
push
movsb
fsub
dec
cmp
pop
push
outsl
xchg
push
add
cmp
es
add
dec
xor
ljmp
xchg
push
and
cmc
aas
repz
and
pop
test
mov
add
lahf
lods
in
aad
pop
loopne
push
shrb
mov
pusha
add
sbb
movsb
popf
xor
push
hlt
xor
ss
dec
and
jno
testl
or
cmp
jae
fdivl
pop
push
xor
lods
stos
lret
ds
cmp
int
xlat
je
jmp
xchg
mov
pop
pop
xchg
lods
jo
or
adc
test
fiadds
jl
mov
ds
sti
pop
xlat
jb
inc
adc
or
mov
mov
pushf
jb
mov
leave
push
in
dec
xorl
ret
shrb
negb
mov
cmp
lea
mov
mov
dec
add
cwtl
push
xchg
int
test
sub
test
sbb
sbb
rcrb
dec
outsl
add
mov
mov
xor
lods
jnp
int3
inc
mov
dec
iret
data16
ja
cmpl
mov
lret
sbb
jae
out
inc
cmp
pushw
or
sbbl
add
mov
xchg
mov
mov
mov
fld1
scas
adc
adc
sub
dec
xor
ja
jae
les
mov
aaa
clc
mov
out
imul
mov
mov
pop
fsub
adc
xchg
lcall
push
fdivs
aam
mov
test
ss
das
push
push
clc
ficoml
dec
scas
das
mov
dec
rcr
addr16
push
stos
pop
cld
xchg
lahf
adc
gs
pop
addb
mov
mov
push
sbb
aaa
xor
rcrl
in
or
scas
int
jg
scas
adc
jge
mov
cmpsb
mov
cmc
push
pop
fimull
mov
cmp
mov
xchg
in
dec
sbb
in
xchg
out
push
nop
jl
and
adc
in
and
ds
hlt
dec
pop
pop
adc
push
loopne
adc
mov
stc
push
push
xchg
in
mov
stos
mov
jno
xor
or
ds
sbb
inc
xrelease
jo
popf
popl
fistpll
ds
gs
xor
mov
mov
cmpl
popf
out
dec
adc
data16
ja,pt
aas
jecxz
lds
inc
ffreep
stos
movsb
mov
scas
movsb
lcall
data16
repnz
fcompl
ds
cmpsl
pusha
mov
cmp
xchg
xchg
outsb
mov
shll
jno
jmp
add
and
mov
sub
inc
jb
add
es
ds
mov
clc
fdiv
inc
daa
jmp
stos
jp
outsb
rol
xor
test
mov
movsl
inc
jbe
sbb
iret
jnp
test
out
or
and
inc
sub
push
push
cmp
hlt
stc
push
pushl
add
addl
lret
test
add
mov
and
insl
xor
jmp
add
inc
sbb
arpl
inc
repnz
push
fisubl
das
ret
out
or
rcrl
rorl
push
test
aam
shl
pop
das
jnp
xchg
jne
sbb
cmp
cmpsl
lds
lods
cmp
mov
mov
test
dec
rcrb
mov
pop
fisttpl
xchg
aas
dec
inc
xchg
push
or
mov
jge
je
rcl
filds
dec
fwait
insl
sub
fnsave
fcmovbe
scas
fwait
pop
add
insb
mov
insl
repnz
ficoml
push
out
cs
cmp
out
jmp
cmpsb
mov
cmp
in
out
cmp
je
add
rorl
or
push
shll
fadds
cmc
mov
mov
ret
mov
jo
jb
in
jmp
jae
loop
and
insl
out
xor
sbb
fiadds
enter
ljmp
subl
add
dec
push
mov
outsl
clc
outsb
pusha
or
cld
jbe
clc
pop
sub
jno
xchg
fldl
ljmp
cmpsl
bound
xchg
mov
jnp
movsb
push
pushf
jne
aas
imulb
add
fdivl
in
xor
jns
dec
jmp
sub
inc
lods
sub
aad
mov
xchg
out
jl
cmp
add
dec
jno
cmpsb
leave
inc
fisttpl
sbbb
pop
rorb
mov
sub
mov
jg
add
pop
mov
cs
sarb
cmp
test
xor
add
divl
insl
mov
push
mov
xchg
out
inc
fisttps
enter
fistl
ja
dec
cld
or
cmpsl
sbb
or
xchg
or
popf
test
or
nop
stc
cltd
adc
pop
xchg
popa
push
shll
and
mov
add
jl
shlb
aas
out
adc
roll
out
shrl
lds
bound
loope
inc
pop
push
dec
jns
stc
pop
test
shrb
add
outsl
lock
mov
mov
mov
ret
paddsw
mov
test
sub
aad
mov
pop
mov
jbe
mov
push
mov
push
pop
adc
fcoml
inc
pusha
mov
lret
add
icebp
addr16
mov
pop
fists
test
inc
imul
in
lea
std
jb
adc
adc
mov
inc
pop
cmp
adc
xorl
lock
dec
outsb
sti
flds
adc
ret
xchg
jbe
add
jge
xchg
roll
sub
inc
dec
push
sub
cld
adc
dec
jne
mov
cmpsb
add
daa
das
dec
fimuls
cmp
hlt
cmpsb
cmp
push
mov
out
test
addb
test
lret
sbb
daa
fildll
xor
movsb
add
roll
mov
ja
cli
mov
pop
push
dec
iret
lret
jg
sti
clc
push
push
pop
pusha
xor
pop
jl
loopne
out
les
in
jne
ret
pop
out
out
mov
idivb
and
sub
shl
xor
movsb
cmp
cmp
addl
cmp
mov
stc
push
cmp
out
test
rcrl
mov
cmp
ss
fldl
lcall
es
int
jb
shll
mov
sti
sbb
jne
idivl
pop
cmpsl
bound
jo
add
push
adcb
out
cwtl
xor
and
fidivl
cmc
push
inc
inc
jo
or
sub
cmpsl
or
rcll
daa
mov
dec
pop
scas
mov
cwtl
ret
les
insb
inc
xchg
imul
push
outsb
js
fwait
pop
mov
sti
adc
inc
in
es
movhps
mov
inc
xor
inc
and
xchg
cmpb
sbb
push
mov
mov
insl
adc
aam
xor
or
xor
les
mov
adc
add
ret
sub
enter
xor
sbb
inc
dec
leave
and
lods
lds
push
pop
cwtl
inc
je
mov
adc
push
cmp
cmpsl
pop
mov
aad
jbe
xchg
in
cmp
sbbl
loope
dec
dec
push
mov
xor
adc
inc
shlb
and
in
mov
cmp
out
pop
sbb
repnz
out
addr16
subl
data16
movsl
into
repnz
xor
jne
cltd
inc
push
or
ljmp
xor
sub
mov
stc
rclb
fildll
jle
and
inc
and
notl
mov
int
rorb
pop
shl
mov
and
push
or
sub
mov
dec
stos
pop
pop
and
sub
xchg
pop
out
mov
xchg
pop
cmpsb
xacquire
imulb
sbb
mov
js,pt
inc
sarb
popf
repz
xor
mov
loop
aad
ja
sbbb
cvtdq2ps
push
and
clc
insl
ja
insl
adc
imul
pushf
jmp
outsb
pop
mov
sub
or
int3
sti
fwait
test
dec
fisubl
and
into
push
jno
arpl
fistpl
xlat
pop
loope
in
cmp
xlat
and
mov
xor
aaa
push
jne
or
mov
lds
repnz
sbb
mov
daa
lret
or
fists
ficoml
push
inc
mov
push
jp
add
test
rolb
popf
aas
lods
insb
loopne
fdivs
and
stos
loope
out
rorb
add
insl
xchg
adc
add
in
cmp
add
cmc
fcmove
sbb
cmpsl
cmp
mov
pop
mov
outsb
inc
test
push
aam
jl
mov
aam
leave
fisubrl
jl
aaa
lea
addr16
jb
out
std
into
xor
in
mov
cmpsl
sub
iret
fistps
dec
jnp
mov
cmp
in
xchg
push
xor
ds
mov
mov
mov
cli
insl
mov
xor
nop
das
gs
xchg
mov
xor
cs
loopne
test
push
xchg
std
or
cmp
mov
hlt
das
xchg
mov
aad
hlt
jo
mov
inc
xchg
cmp
jb
add
lods
dec
test
pop
addr16
lret
ret
jno
mov
or
mov
movsl
cmpsl
mov
aam
arpl
in
adc
mov
lea
mov
fwait
sahf
scas
stos
gs
and
jl
xor
inc
cltd
fwait
sbb
lret
push
or
inc
jg
aad
jbe
test
dec
pop
add
push
xorb
bound
push
mov
sbb
gs
push
nop
mov
pop
ds
stos
ficomps
xchg
sti
pop
loop
mul
xor
xchg
mov
cwtl
scas
dec
xchg
inc
lret
push
mov
sbb
negl
aaa
xor
rorl
sbb
scas
lods
jns
mov
mov
push
jne
movsl
fistpl
pop
frstor
test
mov
jae
or
loopne
dec
pusha
sbb
mov
loop
add
mov
cmp
mov
sahf
std
test
cltd
push
aaa
adc
lock
je
add
test
in
xor
fs
and
cmpb
in
mov
jno
xor
dec
mov
xchg
jne
cltd
and
js
insb
cmp
shrl
dec
loop
mov
ret
xchg
and
aad
sbb
loope
mov
int3
xchg
je
jbe
loopne
lock
cmp
lret
fldpi
lea
cmpsb
icebp
inc
adc
out
testl
add
movsl
push
repnz
mov
into
cmc
mov
loop
les
testl
lea
xor
stc
jno
jae
cmp
mov
add
inc
sub
jae
fnstcw
xlat
xchg
leave
out
dec
jae
imul
icebp
mov
sahf
dec
or
lcall
xchg
in
cltd
add
and
int
or
ja
inc
movsb
repnz
jnp
popa
jl
xor
pop
cmpl
xchg
movsl
in
mov
sahf
outsl
lret
aas
std
push
aas
ss
mov
pop
popf
scas
sbb
into
adc
mov
push
add
ss
shrb
imul
out
push
xchg
xchg
xlat
mov
inc
repz
jb
or
insl
imul
orb
loope
mov
push
xchg
mov
push
ret
mov
jns
ss
pop
ret
mov
int3
in
sbb
fisubrs
daa
mov
mov
shrb
jbe
inc
pop
push
ja
pop
cmp
aaa
jge
mov
jge
nop
lea
inc
mov
push
int3
ret
pop
push
test
inc
mov
xor
iret
pusha
test
push
mov
add
jg
xchg
popf
push
test
add
jl
les
or
in
xorl
cwtl
add
scas
lret
push
sbb
int
ds
xchg
xor
push
daa
mov
sarl
adc
mov
and
mov
ss
or
stc
out
add
lret
xor
dec
inc
test
add
cmp
sbb
out
lock
mov
jb
pop
sbbb
mov
push
test
sub
sub
sbb
sbb
sub
sub
or
jno
fnstenv
jle
push
in
test
nop
movsb
mov
add
std
les
dec
daa
dec
or
lahf
adc
decb
xchg
jnp
out
add
int3
cwtl
jle
in
adc
mov
push
sbb
in
outsb
push
inc
insb
adc
movl
mov
fimull
fwait
int3
icebp
xchg
mul
ret
insl
cmp
push
pop
adc
mov
jmp
nop
mov
rorl
mov
addr16
xor
jmp
mov
sub
dec
dec
inc
push
mov
icebp
out
inc
mov
and
in
lcall
cli
scas
cmp
cmp
jp
xor
dec
ja
popa
mov
icebp
xor
outsb
xchg
outsb
icebp
imull
inc
mov
jecxz
sbb
push
pop
push
cld
and
cmp
jns
pusha
sahf
js
xchg
jb
push
outsl
int
es
addr16
shlb
pop
cmpsl
add
push
ret
test
lods
movsb
pop
sbb
dec
inc
sub
jns
adc
aad
cwtl
andb
xchg
sarl
je,pn
aad
jo
mov
push
push
aas
mov
das
mov
jo
sbb
lcall
jge
xlat
jbe
pushf
js
gs
jecxz
sub
push
vpsllw
push
repz
cmp
stc
ljmp
or
repnz
add
fcompl
ljmp
in
in
inc
int3
jno
lret
mov
pop
add
pop
dec
ljmp
inc
adc
and
or
jp
push
push
out
sub
mov
xor
mov
movsb
push
in
jle
xor
pop
das
fists
sbb
jnp
lahf
icebp
cmpsb
jae
push
loopne
or
mov
push
xchg
imul
jnp
mov
push
fsubrl
xlat
pop
pusha
clc
cwtl
repz
sarl
fwait
jns
inc
push
movntps
push
inc
cs
push
lock
scas
mov
cmpsb
out
xchg
mov
push
ja
shl
fldenv
adc
test
mov
arpl
xchg
mov
sbb
scas
lret
dec
stos
lahf
clc
das
loope
lds
lret
cmp
test
cmc
xchg
jo
jo
nop
jmp
sbb
dec
ret
mov
xchg
xor
sbb
cmc
jae
pop
cmpsl
pushl
bnd
test
ret
cmp
lahf
ds
sahf
adc
mov
scas
adc
mov
jecxz
lock
imul
adc
xor
out
pop
popf
sbb
js
fisubrs
add
add
bound
lods
mov
push
adc
mov
in
in
sbb
push
fildl
fs
mov
inc
push
les
push
jno
test
ficoms
enter
xlat
adc
and
pop
sbb
movl
insb
aam
or
add
lahf
adc
mov
test
sub
lret
dec
pop
mov
adc
jb
lods
scas
fisttpl
cmp
leave
je
jge
or
dec
jbe
xchg
jl
sbb
scas
push
negb
loope
mov
rol
mov
lahf
subb
mov
inc
nop
stc
jno
dec
sbb
fcoms
mov
xchg
pop
xor
fdivr
sbbl
xchg
sub
stos
jb
orb
sbb
std
dec
orl
subl
mov
sub
mov
fcoml
mov
fisubl
gs
adc
mov
fdiv
xor
jge
cmpsb
sarl
cli
mov
fdivp
cmp
jae
inc
cltd
mov
lcall
stc
add
pop
push
jle
adc
push
arpl
cli
jl
inc
insb
mov
mov
cmp
xor
mov
lock
orl
jl
push
pusha
pop
scas
inc
ljmp
mov
xchg
cmc
gs
and
je
dec
inc
adc
sahf
jge
cld
int
std
xchg
mov
and
jp
dec
cmpsl
insl
mov
popf
fbld
pop
mov
cmpsb
xor
out
jae
inc
lds
xchg
xchg
inc
push
jmp
leave
lret
mov
inc
push
cmc
aad
push
mov
xchg
mov
cmpsb
popf
in
outsb
or
and
or
ret
fldl
ror
cltd
pop
xchg
aam
fistps
addr16
movsl
push
out
inc
mov
add
push
and
push
push
jns
daa
ds
push
fnstsw
sbb
mov
mov
xor
loop
imul
jb
mov
mov
outsb
outsb
lods
dec
call
movsb
xchg
sbb
mov
pushf
std
dec
adc
pusha
scas
mov
xchg
add
jnp
jnp
cli
or
mov
mov
pop
jmp
pop
fs
xchg
lret
jp
push
sahf
lods
xchg
jnp
cmpb
xchg
cmp
and
ja
sbb
fcompl
insl
ljmp
and
mov
int
fcmovu
stos
push
xchg
jecxz
mov
in
and
testl
fdivrl
test
aad
shll
ret
loopne
and
test
insl
enter
push
ss
push
icebp
insb
popf
push
xor
test
lock
add
lahf
fnsave
movsb
popf
ror
and
std
nop
add
adc
inc
stc
or
shl
stos
adcl
pop
popa
pop
scas
xlat
shrl
fists
loope
jl
jbe
add
jns
iret
je
fiaddl
rcl
and
push
sub
outsl
add
movsb
sbb
push
ljmp
mov
xor
mov
dec
jbe
mov
pop
stc
xor
adc
clc
push
fdivrs
mov
stos
sbb
or
jmp
in
xor
jg
pop
sub
adc
es
mov
das
jle
cld
fmul
xchg
sub
push
out
in
out
aaa
mov
into
jb
clc
sub
jge
icebp
fidivl
pop
jl
and
cltd
mov
sbb
dec
inc
xchg
aas
sub
cmp
pop
iret
fildl
mov
insl
and
jecxz
in
push
out
inc
xor
lods
xor
or
dec
inc
test
jno
jmp
shll
lahf
push
push
shll
mov
xchg
jb
add
mov
mov
shrl
leave
test
scas
nop
xsha1
cld
loopne
aas
mov
out
pop
push
outsl
or
xchg
mov
fs
pop
mov
push
test
lds
stos
adc
add
and
xchg
daa
in
std
scas
ja
movsb
lahf
insl
pop
cwtl
mov
jl
mov
lods
insb
cmpsl
adc
sub
or
mov
sbb
dec
add
fnstsw
push
ret
cwtl
pop
repz
inc
sub
dec
xchg
std
sub
int
inc
stos
pop
gs
mov
xchg
inc
movsb
out
test
mov
enter
cmp
pop
pop
jne
mov
xor
ja
pop
mov
in
roll
bound
fiaddl
nop
xchg
addl
icebp
pop
mov
sbb
popf
dec
xchg
push
jns
sbb
adc
fs
dec
jno
or
and
fstp
es
push
adc
ficoml
loop
push
out
fsubl
mov
mov
and
add
cmc
ror
scas
das
rclb
jne
adc
movsb
je
imul
scas
adc
insb
or
inc
jnp
ss
dec
stos
jmp
adc
push
mov
inc
xchg
mov
pop
or
adc
fs
repnz
xor
push
sbbl
mov
ficoml
aas
cmp
notl
cli
add
mov
cmpsl
into
repz
ja
adc
cmp
rcrb
jle
andl
aam
movsb
stos
lods
mov
fwait
or
xor
cwtl
stc
jge
lcall
push
stc
js
jmp
xor
xchg
adc
push
xchg
loope
inc
repz
xor
mov
sub
arpl
sbb
cmpb
fs
push
ljmp
pop
jno
int
mov
cmc
lock
nop
inc
ds
sub
lret
cmp
pop
jge
sbb
add
shl
pop
dec
stc
mov
xchg
insl
and
mov
outsl
jmp
jp
aad
dec
loope
push
in
pop
mov
and
mov
mov
xor
push
or
xor
std
and
icebp
out
push
filds
push
outsb
dec
jb
mov
dec
jno
sbb
hlt
aas
out
adc
mov
or
popf
gs
mov
lods
movsb
lods
sbb
jmp
pop
mov
pop
mov
dec
xor
cmp
addr16
pop
adc
pop
mov
add
popf
arpl
mov
cld
fstpl
mov
in
orl
insb
shrl
fs
arpl
cs
add
push
dec
add
cmp
mov
mov
cs
mov
sarl
js
out
jle
pop
sbb
adc
jnp
mov
push
xchg
std
outsl
pushf
pop
pop
xchg
stos
out
imul
pop
inc
clc
jmp
cmp
push
pop
repz
push
and
adc
aad
fs
jo
jg
mov
aam
das
and
fldenv
pusha
sub
loop
add
ret
lret
leave
push
enter
or
std
jle
fsubl
sbb
inc
mov
call
dec
addb
addl
push
dec
sahf
popa
mov
mov
and
pop
xchg
cli
test
xrelease
xorl
mov
cmp
xor
cld
popa
sub
fs
cltd
repz
stc
insl
push
test
cmp
inc
addr16
fmull
inc
and
push
rep
sbb
shll
or
or
xchg
pop
ds
xchg
iret
or
movsb
xor
int3
loop
into
movsl
jle
push
or
mov
repnz
sti
ljmp
leave
aaa
stos
mov
push
fnstcw
pusha
mov
mov
repz
sbb
adc
scas
pop
jle
jo
loopne
btr
or
mov
arpl
push
sub
stos
mov
jecxz
lret
aad
sti
mov
push
insl
cmc
sahf
or
or
add
arpl
ja
mov
test
mov
ss
cmp
inc
sub
test
test
jmp
stos
push
dec
push
pop
mov
xchg
mov
cltd
daa
or
cmpsb
adc
out
out
inc
cmpsb
sbb
sub
cmc
mov
aad
clc
or
je
sub
call
ss
push
scas
aas
mov
pop
xor
dec
dec
jge
mov
jno
pop
scas
andb
jmp
pop
hlt
mov
fnsave
pusha
orl
les
xchg
enter
mov
daa
outsb
xchg
mov
add
insl
push
push
xchg
pop
mov
mov
dec
sbb
lods
inc
nop
sbb
pop
imul
inc
sub
jecxz
jne
mov
ficompl
fld
sub
fstpt
push
dec
cwtl
sti
clc
jmp
in
out
mov
and
jno
sbb
mov
xchg
sbb
adc
dec
push
mov
lcall
xor
dec
dec
loopne
stc
xchg
jbe
inc
fidivs
cld
add
daa
cli
sub
daa
jne
into
jno
je
clc
daa
adc
mov
or
inc
test
shlb
pop
idivl
cmp
aam
lret
dec
dec
imul
cmc
xchg
sbbb
or
shl
lods
repz
inc
pusha
push
sahf
scas
inc
out
inc
cmpsb
imull
loope
adcb
or
in
icebp
mov
enter
xor
popa
nop
shlb
cmp
andb
cli
pop
andl
mov
mov
sarl
or
mov
mov
ljmp
jo
fcmovbe
mov
mov
add
jp
inc
push
outsb
stc
cld
xlat
push
scas
sbb
dec
cmp
xchg
aaa
pop
push
dec
push
xchg
shll
adc
jae
mov
negb
insb
mov
mov
adc
stos
push
inc
sub
pop
mov
push
xchg
and
gs
stos
mov
jp
arpl
sbb
dec
xchg
sbb
shll
and
ret
mov
xor
in
push
rorl
xor
mov
pusha
jae
inc
leave
adc
and
jl
in
das
cmp
push
in
fsub
enter
dec
pop
aaa
and
popa
test
or
ror
call
sub
fistpll
pushf
cmpsb
pop
sbb
push
inc
aas
in
rorl
xor
roll
sub
pop
dec
into
jne
jb
aaa
addl
push
jno
push
dec
into
mov
adc
jo
sub
rol
add
dec
fidivl
sub
scas
ljmp
loope
sub
push
fcmovb
daa
mov
jbe
cli
in
inc
mov
ja
outsb
pop
test
mov
gs
sbb
mov
adc
stos
adc
jne
addr16
push
daa
or
sbb
adc
fldt
sbb
aad
ficomps
cmp
leave
lods
jb
add
lea
in
xchg
mov
mov
mov
jg
es
imul
push
rcrb
pop
jl
jle
xchg
scas
stos
stos
jne
pop
aas
mov
insb
push
xchg
loopne,pn
push
ds
xor
out
aas
pop
insb
cmp
dec
ja
or
and
mov
sub
arpl
xlat
mov
sub
ss
push
pop
jg
imul
pushf
test
xchg
fdivrs
cwtl
mov
popf
call
jg
jno
jno
mov
mov
push
mov
mov
aam
ret
in
cmp
bound
data16
cmp
scas
into
cld
fucomp
adc
fistl
popl
xor
sub
aad
or
xlat
add
int3
and
nop
cmc
adc
push
inc
add
inc
roll
mov
mov
lret
mov
and
xor
lods
jne
and
sbb
add
orb
testl
fistl
movsl
aad
mov
outsb
jae
cmp
dec
cmpsl
mov
sub
pushf
insb
mov
loop
dec
ja
jle
iret
xor
movsl
mov
inc
cmp
mov
pop
test
testl
push
cs
lahf
outsb
mov
inc
mov
jbe
leave
mov
xchg
mov
xchg
adc
dec
jb
out
adc
popf
hlt
mov
int3
mov
stc
js
xchg
js
push
add
test
mov
push
pop
add
inc
jmp
fidivl
sbbb
xchg
mov
mov
push
mull
inc
mov
cmp
mov
out
nop
mov
add
push
fs
aam
jl
daa
pop
jne
sbb
loope
cmc
mov
xor
or
cs
mov
iret
mov
insb
fcomps
lahf
pop
xchg
push
and
adc
dec
pusha
add
jl
mov
and
lods
ljmp
and
mov
cli
mov
imul
mov
mov
cltd
stos
nop
add
in
pushf
notl
sahf
cmp
mov
xchg
inc
mov
out
in
jecxz
adc
cld
or
leave
jae
je
mov
cld
out
ljmp
mov
loopne
add
fcoml
and
jp
aad
ss
test
imul
cmp
sub
stos
xor
xor
cmp
outsb
mov
lds
xor
add
lea
adc
jmp
xlat
mov
or
mov
mov
add
sub
adc
cwtl
in
add
fadd
sbb
jge
scas
push
or
push
out
loop
call
xlat
aam
ljmp
jno
and
pushf
pop
mov
imul
clc
mov
push
adc
and
cltd
aaa
repnz
outsl
and
jno
stos
enter
sbb
pop
and
mov
stos
push
loopne
jle
ror
addb
xchg
in
adc
cld
mov
jnp
mov
popa
xchg
sub
adc
test
fimuls
push
leave
decl
add
mov
out
dec
adc
clc
in
dec
imul
das
es
or
out
xchg
stos
sub
mov
inc
imul
and
mov
cmc
jg
sbb
xsaveopt
push
shll
es
lods
push
imul
jne
imul
lea
mov
rcl
mov
ds
mov
mov
jo
data16
ds
pop
push
xor
inc
inc
shrb
dec
dec
dec
dec
es
mov
add
addr16
xchg
jbe
sbb
mov
ret
cltd
rolb
sbb
pusha
jmp
or
mov
ja
jae
jb
loopne
push
mov
lds
push
aas
sub
dec
xor
mov
out
leave
mov
inc
push
lea
lcall
andb
inc
mov
fdiv
imul
adc
and
jne
dec
ds
xlat
xchg
fs
sbb
and
jno
jo
fidivl
pop
pop
jno
add
ret
xor
pop
push
lahf
jo
adc
pop
sbb
das
dec
push
and
sub
pop
icebp
out
andb
xchg
push
sub
jnp
add
pop
push
shll
and
std
std
xor
add
pop
sub
and
imul
jle
and
les
jb
mov
jb
xor
xchg
stos
mov
pop
or
loope
inc
icebp
cmp
mov
add
or
insb
pop
xlat
sub
daa
push
sub
inc
hlt
xlat
daa
mov
js
js
and
xor
push
add
shrl
and
fcmovnb
outsb
lea
rcrb
dec
popa
push
cmp
lods
test
aas
test
fldpi
xchg
cmp
add
popf
or
cmp
ljmp
rcll
aad
pusha
int
stos
nop
iret
pusha
push
cmp
push
or
sbb
loope
jmp
inc
mov
outsb
sub
loop
fwait
in
into
in
mov
push
jno
adc
addr16
jb
lods
dec
lret
xlat
aas
out
repz
cltd
pop
push
jb
xchg
js
adc
or
test
xor
je
pop
mov
xchg
scas
out
cld
repnz
ljmp
inc
inc
mov
cltd
ss
aaa
push
mov
adc
lahf
pop
nop
sahf
mov
int
lea
mov
out
aaa
inc
inc
subb
gs
and
push
and
cmpsb
sbb
mov
jmp
xor
lea
or
mov
sbb
ljmp
sti
push
test
popa
pop
mov
inc
outsl
sti
mov
mov
push
sub
mov
movsb
fs
add
and
mov
inc
dec
sub
xor
or
adc
iret
fcoml
fs
ret
outsl
iret
adc
aam
pop
scas
adc
adc
cmc
insl
leave
xchg
ret
add
push
pop
cmp
lahf
push
push
inc
out
cmp
stc
add
and
movsl
push
xor
and
sahf
dec
push
dec
in
add
mov
adc
xchg
push
shl
jmp
dec
pop
into
mov
mov
int
cmpb
outsl
int3
dec
je
out
data16
sbb
mov
jge
cmp
jecxz
fsubs
pop
mov
mov
pop
in
fidivl
adc
pop
mov
adc
mov
dec
and
push
sbb
mov
pop
cmpsl
addr16
movsl
popl
enter
fsubrp
lret
mov
inc
sbbb
pop
sti
xor
pop
xor
or
je
xor
stc
mov
jne
leave
push
push
fdivr
negb
pop
scas
fdiv
lods
bound
andl
jne
insl
mov
push
insb
sbbl
and
jno
mov
stos
imul
loop
test
imul
bound
rol
ss
xor
push
mov
inc
push
arpl
cltd
arpl
mov
test
xchg
fbstp
push
inc
in
rcrl
clc
add
inc
fcmove
int
and
push
jae
insb
insb
mov
stc
mov
repz
add
fisttpll
xor
fsubrp
call
jl
xchg
out
add
push
jnp
out
into
push
jne
cs
insl
loopne
fldcw
mov
or
xor
mov
mov
rol
push
xor
cld
xor
cmp
add
xlat
cmp
cmp
add
repnz
add
pop
rcrb
stc
xchg
jae
add
lods
mov
add
rolb
cmc
stc
sahf
bound
lods
sbb
push
lods
into
add
pushf
pop
cwtl
loope
icebp
incb
inc
lret
clc
out
lret
adcb
jl
cmp
in
mov
lds
inc
mov
lret
aad
or
into
or
adc
enter
xorb
out
sarl
pop
adc
dec
sub
pop
std
cld
lret
cmpsb
mov
jmp
push
outsb
mov
fdivl
lock
jp
cmp
push
iret
std
or
in
stos
adc
lahf
stos
cmpsl
stos
test
dec
sbb
jl
push
div
je
xchg
pop
outsl
dec
jg
dec
push
jb
or
cmp
dec
pop
dec
sti
mov
sarl
xchg
ja
cmpsl
outsl
scas
push
loope
dec
jg
push
or
in
sub
je
sti
das
sbb
jbe
aaa
lcall
push
or
hlt
daa
inc
iret
jl
add
jnp
imul
or
and
call
outsb
das
int
adc
lret
lock
jl
imul
imul
sbb
xor
sahf
mov
and
ljmp
fcmovbe
loop
movl
lods
scas
cmp
rcll
data16
and
xlat
dec
movsl
jo
outsl
mov
and
or
add
xchg
in
lcall
push
adc
movsb
lock
int
rolb
xchg
enter
cmc
insb
cmp
cwtl
addr16
sarl
sub
ljmp
lret
bound
gs
loopne
movsb
add
repz
mov
rcll
imul
push
or
mov
stos
jmp
sbb
inc
sbb
add
inc
mov
daa
loope
ret
jno
mov
roll
test
inc
out
cmp
xorl
pop
mov
movsl
movb
mov
rcl
nop
jmp
jl
xor
clc
sbb
cli
loop
jae
in
xor
fsubp
mov
dec
fwait
sub
lods
pop
mov
ss
jbe
stc
push
out
fwait
xor
xor
and
xchg
cmpsb
js
in
daa
mull
cmp
push
jl
xor
sub
addr16
mov
pop
outsb
cwtl
popa
pop
adc
mull
shll
sbb
int
popa
add
mov
adc
sbb
jne
test
stos
js
pushf
jns
push
fdivrs
loope
push
outsl
loopne
xorb
sbb
test
push
adc
mov
and
mov
pop
fbstp
mov
sub
pop
add
fbstp
xchg
pop
or
gs
dec
mov
cwtl
into
jb
mov
sbb
insl
mov
enter
and
sbb
push
lcall
imul
pop
push
stc
xchg
lret
xchg
lahf
mov
sbb
adc
aam
rclb
test
lea
call
push
mov
insb
and
scas
and
sub
into
into
push
adc
movsb
jo
loopw
push
cmp
nop
ss
dec
jno
in
mov
loop
idivl
push
neg
jmp
xchg
mov
push
sub
mov
mov
cwtl
jne
mov
das
shlb
subb
mov
pop
cmp
fwait
out
ljmp
clc
orb
push
sbb
cwtl
jb
cmp
push
lahf
xchg
lea
lret
not
daa
loopne
popa
inc
cmp
fwait
adc
or
cltd
lahf
xchg
fmuls
out
cmpsb
rcrl
xor
sbb
xor
mov
mov
xor
iret
js
and
fnstenv
jo
push
add
xchg
xchg
pop
scas
cli
std
lret
xchg
imul
add
outsb
iret
jo
shlw
pop
popf
mov
je
in
push
sbb
inc
cmc
in
stc
enter
std
cmc
mov
sbbb
adc
imul
sub
lock
dec
mov
scas
dec
and
xor
jns
das
das
sbb
addr16
testb
cmp
imull
lcall
movsl
mov
dec
xchg
repnz
xchg
and
cltd
popa
test
pop
shll
outsl
aad
test
xchg
mov
daa
dec
push
imul
inc
jb
pop
cmp
or
loope
lods
je
dec
jecxz
fistl
jnp
lock
test
mov
std
inc
sbb
das
xchg
and
xchg
push
jo
pop
xchg
outsl
rorb
out
mov
daa
loope
add
cmpsl
loopne
lret
and
arpl
aad
cmp
sbbl
insb
bound
fnstenv
int
add
and
lahf
or
out
lds
push
lret
imul
fwait
aas
inc
test
addl
leave
movsb
pop
iret
mov
test
push
cmp
test
add
data16
mov
fldt
subb
negl
mov
ss
insb
inc
stos
scas
dec
int
pop
xor
fldcw
dec
push
pop
je
mov
push
les
adc
mov
mov
dec
or
outsl
or
fwait
push
dec
jo
jns
aad
mov
outsl
mov
xlat
xor
out
lods
jge
add
pop
inc
dec
mov
and
dec
pop
fidivrs
adc
sbbb
mov
filds
lods
sbb
jne
adc
mov
sti
pop
or
mov
mov
mov
sbb
arpl
and
repz
mov
jmp
iret
cli
aad
aas
fmul
pop
fstps
movsb
mov
enter
mov
lock
add
and
mov
shrb
ficoml
jp
cmc
xchg
push
das
sbb
shl
shrl
and
adc
push
adcb
lret
cmp
adc
loope
push
mov
lahf
add
shlb
pop
or
test
aaa
mov
movsl
mov
pop
icebp
mov
dec
gs
jbe
in
inc
mov
add
xor
and
call
daa
nop
ret
pop
push
xchg
dec
lods
in
leave
cmp
pop
mov
lods
mov
cmp
lret
push
mov
push
mov
daa
in
fidivs
jb
push
cmp
push
data16
cmp
lds
test
or
lods
inc
mov
push
mov
ss
jnp
pushf
xlat
adc
xchg
pusha
and
jg
push
outsl
add
aas
mov
out
xor
stos
and
sbb
arpl
or
fisttpl
push
or
ljmp
adc
shrb
fwait
outsb
inc
in
mov
jl
add
lahf
in
push
inc
dec
arpl
push
pop
ret
push
pop
int
fdivs
mov
mov
ror
jno
sbb
pusha
cmp
or
je
xchg
flds
divb
cmpsl
fs
push
mov
stc
fadds
jl
add
push
cld
xor
scas
movsl
mov
movsb
sbb
sbb
arpl
notl
or
shlb
cltd
dec
xchg
lret
dec
adc
mov
call
mov
shrl
adc
inc
repz
nop
pop
push
mov
clc
xchg
add
push
outsl
sahf
mov
add
ljmp
xchg
jecxz
xlat
mov
data16
inc
push
and
xor
mov
jbe
fwait
jl
movsb
mov
lahf
ret
mov
out
popf
add
push
outsb
icebp
and
lods
cld
test
xor
loop
mov
push
shl
mov
jmp
lock
and
shlb
jno
das
in
pop
xor
or
outsb
xlat
std
inc
mov
and
push
test
add
movsl
mov
cmp
data16
outsb
into
cmp
nop
add
mov
and
cwtl
pushf
in
push
nop
data16
clc
test
adc
rcr
adc
int3
dec
jmp
cs
mov
pop
fndisi(8087
scas
cli
cltd
leave
push
mov
cmp
mov
rol
cmp
mov
mov
xchg
inc
or
int
jmp
xlat
or
ss
sarl
cmpsb
pop
jg
aaa
shlb
repnz
xlat
jb
pop
dec
das
addb
stos
inc
mov
bound
shrb
aad
cmp
mov
scas
bound
das
pop
pusha
push
mov
adc
or
mov
das
pop
push
mov
add
aam
out
aad
stc
test
lret
pop
mov
adc
xlat
stos
push
call
stc
push
cld
xchg
in
pminsw
rcll
jo
fwait
daa
fisubrl
push
mov
xchg
ret
dec
sbb
popa
xchg
pushf
lcall
lods
dec
out
dec
mov
push
mov
lds
enter
imul
mov
ret
xlat
sub
jne
pop
and
mov
jnp
xchg
insl
push
adc
jle
sbb
dec
fwait
and
mov
fldl
imul
cli
xor
js
push
mov
mov
sbb
sub
es
mov
add
jae
sbb
nop
adc
stos
sub
movsb
fists
pop
gs
or
mov
test
xchg
out
int3
sub
dec
sbb
cwtl
fcoml
test
out
call
adc
arpl
inc
daa
adc
mov
push
les
pop
fdivrl
inc
add
mov
and
and
push
int
xor
dec
jae
sahf
or
inc
jp
and
aam
or
cmp
mov
movsl
mov
xchg
movb
xor
or
cmp
ja
stos
jae
fistpl
add
mov
jns
push
lcall
xor
jmp
loop
jns
in
mov
out
scas
nop
sbb
andl
xor
adc
cmp
out
pop
jbe
cmpsl
jns
pusha
xchg
out
loopne
fidivrs
sbb
mov
popf
jb
add
push
push
add
mov
in
mov
mov
cmp
shlb
sti
in
ss
jae
dec
push
xor
xchg
in
data16
stc
push
loopne
mov
mov
xlat
mov
shr
add
or
cltd
iret
pop
ret
push
adc
loopne
aas
sbb
test
inc
xchg
outsb
jle
inc
jecxz
add
push
movsl
mov
bound
orb
scas
ss
js
imul
xor
movsl
cwtl
xor
cltd
cmpsb
rol
iret
fists
inc
sub
mov
xorb
fadds
push
out
push
jmp
mov
xchg
xlat
cltd
pushf
adc
inc
inc
repz
mov
push
push
cmp
cmp
fldenv
ret
int3
xorl
and
cwtl
ret
outsl
jne
fnsave
lea
jp
lcall
cmp
out
pop
sub
mov
movsl
dec
xchg
cmp
cli
mov
pop
int3
and
ret
push
pop
mov
inc
mov
lock
xchg
xchg
fwait
pushf
into
jns
mov
into
and
stos
enter
addr16
mov
mov
cltd
shll
xlat
bound
and
xchg
adc
in
jae
dec
mov
rorl
stos
aam
int3
in
dec
or
into
pop
sti
add
dec
push
mov
popa
xor
mov
jge
sti
jae
add
dec
iret
rcrb
in
andb
das
leave
xchg
mov
rclb
lds
not
test
or
inc
stos
jl
leave
rolb
sbb
xchg
cmp
adc
sarb
pop
popa
ss
jb
pop
mov
popa
xlat
xor
cmp
pop
fstpl
shlb
inc
mov
cmp
pop
icebp
xchg
xchg
push
pop
sbb
xor
jns
loopne
xor
outsb
push
or
in
push
movsl
xor
pop
out
cmp
in
lret
sub
xchg
cs
sub
cltd
add
lcall
iret
stos
add
aam
jmp
sahf
jle
ljmp
icebp
push
jnp
mov
mov
mov
lcall
pop
inc
mov
lahf
inc
and
orb
pop
test
jb
or
inc
dec
daa
fdivp
les
add
out
mov
mov
dec
lock
subb
jmp
hlt
outsl
test
xor
push
cltd
pop
iret
add
sbb
push
fstl
mov
mov
les
and
push
mov
fadds
mov
xchg
inc
imul
push
lock
jo
push
add
test
ret
mov
inc
into
pop
adc
sbb
sahf
lods
dec
mov
mov
xchg
push
gs
imul
inc
mov
xor
sbb
mov
enter
xchg
ja
add
push
jb
xchg
mov
ds
aas
cmp
xor
bound
movsl
and
movsbl
mov
in
dec
rolb
ljmp
shr
jmp
je
leave
jle
fnsave
pushf
mov
movsl
sbb
xchg
pop
scas
iret
xor
arpl
out
cmp
insb
aaa
jo
mov
and
scas
push
add
lds
into
in
sbb
jo
ret
xor
std
mov
shr
pop
xor
cwtl
inc
in
ficompl
mov
xor
dec
in
popf
fnsave
push
mov
idivl
mov
sarl
adc
mov
inc
aaa
imul
in
dec
es
sub
movsb
mov
push
push
insl
pop
out
pop
dec
repz
push
and
lods
pusha
push
sub
popf
push
mov
out
adc
push
sub
dec
adc
push
rclb
xlat
add
mov
inc
rolb
lock
sbb
in
pop
dec
lcall
sti
rcrb
adc
mov
subb
xchg
adc
push
out
cmp
mov
mov
stos
sti
sbb
stos
out
testb
popf
cmp
push
shlb
into
mov
mov
xor
pusha
add
repnz
push
out
jge
lds
jbe
loope
or
fcoms
insl
push
out
or
lahf
dec
stos
cmp
adc
sbb
xchg
sbb
jecxz
sub
ret
xor
daa
fwait
add
stc
push
xlat
pop
mov
xchg
in
pandn
insb
push
pop
mov
push
repnz
dec
es
dec
mov
pusha
add
aaa
jle
cmc
stos
mov
mov
mov
into
mov
fnstenv
cmp
repz
lods
es
xchg
jns
xchg
or
or
imul
fldcw
inc
xchg
and
movsl
insl
leave
ret
xchg
push
stos
repz
fldl
jb
add
aam
adc
mov
scas
int
inc
lret
aam
out
out
test
das
mov
push
jg
mov
and
call
int
jne
bound
out
mov
inc
cwtl
out
and
mov
jne
mov
dec
enter
int3
out
sub
popf
std
pop
and
test
pop
pop
movsl
into
addr16
hlt
pushf
mov
xchg
mov
out
nop
das
jl
call
or
aam
test
testb
scas
loopne
jo
ljmp
sahf
xor
out
mov
pop
cwtl
mov
jecxz
out
or
push
loope
xor
bound
push
mov
cli
adc
andl
sub
imul
shlb
cs
xchg
xor
shl
cmpl
adc
mov
xor
ljmp
ljmp
sub
dec
add
inc
push
xlat
sbb
cmp
dec
fiadds
fldenv
push
add
dec
sbbl
aam
cmp
cmp
add
lret
addr16
jmp
repz
lods
rcll
gs
mov
xor
scas
outsb
lea
cltd
fnstenv
mov
sbb
mov
shrl
rorb
shll
cli
sub
pusha
lahf
stc
testb
notb
cwtl
sub
addr16
ror
mov
add
sub
jl
and
jae
mov
mov
ds
adc
xor
aaa
jmp
adc
stc
or
out
mov
fcompl
push
mov
repnz
jb
int
in
jne
push
dec
repnz
repnz
lret
mov
arpl
mov
mov
xor
push
xchg
pop
imul
and
mov
pop
fbstp
lods
mov
add
push
pusha
sbb
dec
loopne
fmuls
imul
ljmp
sbb
jbe
cld
dec
mov
sarb
decl
dec
bound
adc
and
fs
repnz
pusha
cmp
mov
pop
mov
data16
lahf
test
lea
push
add
adcl
in
aam
jge
cltd
dec
loope
adc
clc
aam
mov
inc
rclb
sahf
lds
xlat
mov
fbld
test
insl
jmp
pop
ret
movsl
mov
movsb
inc
out
cmp
std
push
das
fs
pusha
sbb
mov
dec
xor
bound
lea
sub
jne
rorb
stos
push
outsb
rcrl
and
hlt
aaa
cs
mov
push
push
fcomps
mov
jne
pop
cltd
outsl
pop
fwait
arpl
inc
and
in
lods
fisttpl
mov
pushl
or
cmp
sbb
inc
subl
cmp
int3
sahf
cwtl
jecxz
mov
or
cld
push
xor
lret
pop
lods
xchg
inc
in
ret
pop
imul
fistps
jg
iret
mov
or
cmp
mov
stc
icebp
sarl
cwtl
fwait
lods
repz
out
hlt
jnp
imulb
aad
not
mov
popa
xor
fcmovnu
push
or
jmp
xchg
pop
xor
sbb
mov
xchg
lods
push
pop
bound
xor
sbb
popf
xlat
ds
bound
cli
mul
or
mov
or
mov
shl
outsl
jne
jmp
pop
push
out
or
mov
fwait
and
push
mov
or
hlt
jnp
adc
fisubl
ds
nop
orl
sub
xchg
cltd
stc
pop
aad
jne
xor
add
inc
inc
test
nop
dec
stos
inc
jo
dec
and
mov
dec
fsubs
es
test
mov
ljmp
sbbb
xchg
mov
clc
mov
or
pusha
in
adc
ret
mov
ds
jb
dec
sbb
pop
mov
push
jge
leave
adc
pop
rolb
xchg
jne
add
rolb
mov
pop
jae
lds
js
push
mov
pop
lock
or
inc
jno
subb
pusha
pop
mov
xor
xchg
insl
pop
pop
and
adc
mov
pop
cwtl
cmpsl
and
scas
lods
pop
stos
mov
call
out
adc
lds
pop
icebp
adc
push
push
push
popf
aaa
jmp
xor
sbbl
out
sub
jne
int
lods
aam
jg
fld
cmp
movsb
sub
mov
imul
mulb
sbb
adc
fildl
cli
out
xchg
insl
xorl
fs
push
inc
in
adc
repnz
sbb
mov
xchg
ret
mov
mov
xchg
test
je
xchg
movsb
mov
dec
adc
out
and
aad
push
into
shlb
xchg
out
pop
xor
dec
icebp
loop
cmp
dec
out
adc
loop
xchg
and
sub
pop
push
clc
sahf
sub
xor
inc
ss
lahf
dec
fcmove
jg
enter
push
mov
cmc
addr16
xchg
adc
push
adc
or
adc
test
xchg
or
pop
imulb
adc
and
lcall
xlat
into
gs
pusha
push
push
in
jns
shll
pop
cltd
popa
mov
std
aaa
aas
lods
cmp
jns
push
jo
pop
iret
dec
jge
lret
cli
adc
sbb
mov
add
orb
xor
in
pop
mov
dec
outsb
ret
cmp
add
popf
adc
sahf
mov
inc
adc
ja
and
pop
dec
hlt
jl
adc
cmp
popa
in
mov
pop
out
sub
push
sbbb
sbb
add
mov
ss
mov
out
sub
add
pop
mov
jb
adc
dec
sub
cmp
mov
movsl
sbb
arpl
stos
jno
in
jecxz
pop
cmp
push
and
jmp
ss
imul
jmp
xchg
hlt
test
std
jnp
repnz
sahf
das
in
mov
jecxz
inc
vmovddup
hlt
pop
jg
xchg
fildll
xor
mov
or
testl
cmc
sbb
es
popf
adc
gs
std
fidivrs
sub
sbb
mov
sub
inc
mov
pop
mov
inc
pop
fmull
cmp
fildll
or
faddl
mov
movsb
out
daa
and
or
xor
mov
shlb
ja
pop
testb
ja
sahf
mov
and
stos
inc
movsb
mov
fs
fsubr
cmp
les
cmp
mov
lock
mov
mov
hlt
sub
xchg
addb
clc
sbb
test
jp
push
or
icebp
jae
add
xchg
loopne
arpl
gs
loop
xchg
mov
je
or
lret
lret
mov
arpl
sub
push
into
outsl
pop
push
imul
cmp
adc
lods
cmp
insb
or
jne
xchg
movsb
sbb
int3
add
or
xchg
jno
sbb
jae
sub
cmp
out
aas
xor
adc
cld
adc
cld
loop
stos
adc
or
push
out
and
fucomi
adc
cltd
or
sbb
fimull
pop
std
out
addr16
push
insb
cmpsb
mov
cltd
mov
or
inc
fdivs
dec
cmp
push
push
jno
add
cmp
hlt
addr16
mov
push
mov
imul
jae
jle
xchg
add
dec
xor
out
inc
mov
cli
push
or
test
lahf
fwait
sub
jne
pushf
adc
cli
lods
inc
ja
ds
enter
nop
enter
mov
and
lahf
cmp
inc
or
les
pushf
lcall
cmp
fcmove
lahf
enter
push
ret
mov
pop
fildl
add
push
in
cmp
fdivr
xchg
dec
and
pop
cwtl
cmc
mov
mov
adc
xchg
nop
cs
fs
dec
jle
sub
pop
fsubs
push
daa
pop
jecxz
es
js
icebp
push
repz
mov
nop
adc
mov
out
pop
add
push
dec
mov
out
stos
scas
push
mov
mov
cmpsl
sbb
inc
outsb
addr16
add
or
out
outsb
or
add
sti
ds
sub
jnp
iret
mov
jp
in
dec
into
or
ret
mov
jnp
pop
jge
xchg
aas
dec
daa
add
pop
repz
out
or
adc
push
pop
mov
cli
in
movsl
mov
jecxz
mov
xchg
and
jp
or
testl
loope
in
add
pop
mov
test
xor
in
sahf
xchg
sbb
pusha
add
pop
in
adcl
mov
push
clc
cs
mov
pop
add
divl
sub
mov
test
mov
js
mov
inc
xchg
mov
clc
xchg
jno
test
and
ss
mov
cld
mov
or
mov
jg
ffreep
sub
or
scas
jmp
popf
or
icebp
mov
sbb
mov
xchg
mov
out
std
jns
fwait
mov
rclb
pop
cmpsb
lea
inc
jae
mov
xor
adc
cmpsl
pop
dec
pop
push
rcrl
repz
jae
sbb
mov
je
mov
sbb
les
sbb
mov
mov
push
scas
test
mov
punpckldq
jnp
jae
divb
ret
movsb
leave
push
add
cmp
sbb
sbb
out
pusha
scas
fcompl
adc
mov
iret
or
or
mov
push
outsl
sbb
cmp
sub
cmp
sub
ds
add
imul
in
in
lret
sahf
jmp
int3
cmovne
dec
push
sub
sub
dec
out
xchg
std
inc
fsubrp
aas
inc
ficomps
fimuls
fwait
xor
jmp
adc
es
jo
jnp
xor
std
xchg
xchg
mov
stos
lods
xchg
jl
mov
jecxz
mov
cmp
xchg
lahf
popa
cmp
pop
scas
mov
lds
aad
or
ljmp
xchg
inc
xchg
and
xor
adc
mov
mov
adc
or
icebp
out
pop
stc
aaa
cs
or
push
imul
cmp
mov
aas
iret
repnz
jae
cmc
fwait
movsb
mov
jno
add
inc
jb
xchg
xchg
test
aaa
mov
es
shlb
aaa
nop
xchg
sbbb
outsb
pop
xchg
test
xacquire
jge
mov
test
mov
negl
push
pop
cmpb
sbb
adc
lods
mov
ficoml
or
jl
mov
icebp
sub
out
fistpll
add
sub
imul
test
stos
mov
popa
sub
cmp
fnstcw
sub
mov
adc
cs
push
jle
xchg
fstpt
push
xchg
and
push
push
popf
dec
mov
mov
scas
dec
jno
adcl
dec
vmovupd
sub
lods
ret
lods
xor
lea
jle
mov
movsb
lock
fwait
mov
clc
aas
lods
cmp
mov
and
in
cwtl
mov
add
mov
mov
pop
add
lahf
cmc
scas
xchg
sub
xor
adc
ds
ret
dec
cmpsl
and
or
test
jno
inc
mov
mov
inc
ret
cmp
mov
inc
mov
sahf
sbb
fsts
xchg
cmp
fisttpl
cmc
mov
lret
lds
adc
call
pop
shl
pop
cmp
out
inc
jbe
and
ficompl
lods
cmp
sbbl
cmp
push
dec
jmp
dec
lds
lods
loopne
adc
cmp
ds
pop
out
or
mov
add
cltd
jns
jge
add
pop
das
dec
adc
xchg
movsl
jb
mov
xchg
pop
sub
mov
xlat
fwait
popa
sbb
and
or
add
jmp
lods
sub
out
xor
dec
dec
push
adc
mov
xor
inc
jns
pusha
xor
xchg
jmp
addr16
ljmp
sti
scas
cmp
cld
add
xchg
inc
inc
iret
icebp
add
add
push
hlt
insb
add
sub
les
hlt
movb
gs
stc
ss
jg
mov
fbstp
inc
addr16
call
xchg
filds
daa
pop
popf
add
push
out
lock
lods
pop
mov
orl
jl
xchg
and
sahf
pop
mov
mov
test
repz
movl
cmpsl
jge
dec
clc
frstor
xor
and
insl
mov
mov
pop
sub
add
aad
or
movsb
sub
sbb
je
jbe
push
xchg
inc
mov
xchg
pop
push
das
cwtl
and
lahf
ret
mov
fcompl
shll
js
sub
or
cmp
or
leave
sahf
loopne
jl
push
mov
adc
pop
xchg
cmpb
shlb
lret
mov
neg
mov
sbb
pop
inc
popa
and
jno
inc
mov
ljmp
into
pop
add
xchg
xor
lea
fwait
mov
sbbl
mov
aas
fiaddl
mov
movsl
test
aam
and
pop
mov
lcall
cltd
mov
cs
addr16
cltd
les
xlat
adc
lock
cmpsb
mov
mov
dec
lds
clc
les
dec
mov
jmp
xor
das
imul
mov
arpl
mov
jno
lods
fcomi
movsb
mov
jb
push
inc
repz
mov
testb
lcall
or
decl
and
icebp
hlt
fdivrs
dec
xor
jge
subb
das
mov
daa
jle
jo
xor
call
add
push
mov
xchg
shl
xor
jecxz
ret
adc
flds
xorb
stc
dec
imul
sti
stos
push
xchg
xchg
fisttpll
add
pop
into
mov
pop
lcall
negb
fistpl
in
les
or
fidivl
mov
popf
adc
jo
sbb
dec
pop
outsl
cmpsl
jge
popa
shlb
iret
push
arpl
das
jl
sti
test
ds
cld
iret
or
xchg
add
repz
in
leave
cmc
cmp
cli
add
pop
xor
outsl
es
lret
lods
sbb
nop
xor
push
xchg
cmp
mov
ljmp
aaa
cld
test
mov
stc
mov
out
xchg
aas
jbe
mov
inc
popf
pop
xchg
dec
sbb
fbstp
imul
jge
cwtl
mov
cmpsl
mov
mov
dec
testl
mov
and
xchg
lds
or
mov
cmp
mov
inc
call
fstl
cli
and
scas
xor
stos
jns
or
call
jo
jo
aad
cmp
cltd
test
push
sub
inc
sbb
repnz
mov
mov
js
fistps
lret
dec
into
stos
ja
pop
dec
push
stos
adc
in
imul
jnp
xchg
shrl
lds
ja
push
push
xacquire
imul
inc
xchg
xor
mov
xor
imul
add
pop
jns
fdivp
sub
jne
scas
jle
jmp
push
jno
popa
push
ljmp
xchg
push
repnz
test
pop
jne
cmpsl
and
mov
insl
divl
cld
mov
cli
jno
and
jl
stos
push
js
pop
jae
mov
mov
mov
mov
adc
dec
pushf
loopne
or
jl
das
fistl
and
fildl
sbb
sub
fdivs
dec
xlat
push
fidivrl
pop
imul
add
mov
in
cmp
mov
pop
mov
rorb
pop
gs
mov
pop
and
xchg
xor
mov
pop
outsb
dec
inc
fisubrl
lea
cwtl
repz
fdivl
insb
stc
movsl
adc
push
pop
cmpsl
sbb
sub
pop
add
loope
add
xor
arpl
scas
add
fmulp
pop
add
jns
mul
icebp
pop
cmp
test
loopne
sbb
lods
xor
mov
aas
jg
pop
mov
and
push
shrb
sbb
cli
aas
add
fsub
adc
add
push
cltd
es
mov
mov
in
sbb
sbb
mov
and
push
das
data16
fcompl
push
inc
test
stos
idivb
jb
jge
inc
push
in
add
mov
fsub
adc
sbb
cmp
je
xor
and
cmp
push
sub
jg
movsl
jg
push
scas
xchg
cmpb
inc
pop
cmpsl
jo
pop
adc
xor
data16
outsb
cmp
fucomip
lret
xor
jae
and
inc
jne
cmp
add
cwtl
cltd
jg
or
mov
mov
xor
lret
or
int3
jge
xor
aaa
sub
sbb
jge
mov
mov
dec
mov
bound
push
frstor
int3
or
movb
xor
adc
jae
lods
fidivl
jne
jb
cmp
sbb
es
cmpl
iret
cmp
add
inc
pop
daa
jbe
test
lods
mov
mov
test
mov
xor
mov
jp
cmp
jmp
outsb
iret
testl
addr16
stos
in
nop
xor
nop
dec
xor
xor
dec
sbb
iret
popa
pop
jle
mov
mov
popl
push
and
fmull
push
add
movsb
ljmp
dec
repnz
dec
mov
or
jns
cmp
sbb
ljmp
inc
push
and
cwtl
mov
in
lock
mov
ja
outsl
mov
xor
inc
mov
xor
pop
jnp
xchg
jne
add
sub
xor
cmpsl
cmp
in
sub
sub
add
cmp
mov
push
fcmove
mov
mov
pop
push
jle
jl
and
ljmp
or
add
mov
aas
rcl
cmp
push
in
jecxz
mov
add
mov
subb
dec
cmp
cld
jmp
and
pop
pop
sub
xchg
push
cs
push
mov
sbb
mov
sbb
dec
repnz
aas
out
sub
xchg
push
mov
or
jle
mov
and
cmpsb
cld
mov
push
xchg
pop
jnp
into
aad
hlt
leave
mov
xchg
aad
adc
or
daa
fnstcw
xor
and
ret
dec
xchg
push
push
iret
xchg
push
inc
xor
and
stos
mov
andb
xor
fs
repz
xchg
push
rcrl
stos
fldlg2
mov
sub
sbb
lods
daa
cli
cltd
pop
imul
ds
mov
mov
mov
lahf
mov
out
cmp
movsb
xor
adc
sysret
cmp
mov
loopne
sbb
dec
or
fidivl
aaa
cli
imul
inc
pop
mov
sbb
pop
cltd
jp
outsl
and
stos
aaa
vunpckhps
pop
cltd
outsl
dec
mov
call
push
xchg
jne
inc
or
nop
call
in
and
adc
fwait
in
pop
rcr
ds
sub
add
pop
outsl
dec
movsl
in
dec
add
daa
cmpl
or
shll
adc
cmpsl
sub
mov
push
leave
ljmp
pop
inc
je
mov
shll
sub
loope
jp
sub
mov
add
pushf
sbb
roll
sahf
ljmp
mov
mov
jno
cmpb
es
and
das
mov
mov
ss
insl
mov
aam
and
xorb
mov
test
mov
stos
sub
cmp
mov
and
dec
adc
fldl
in
bound
sbb
fs
fimuls
pop
xchg
mov
cmp
clc
pop
inc
push
mov
cmpsl
arpl
js
mov
mov
mov
sub
dec
jae
mov
pusha
dec
pop
addr16
mov
cmp
loop
shll
and
sbb
sbb
dec
jbe
and
cmp
sbb
pushf
pop
and
sti
out
push
xchg
push
inc
es
cmp
repz
test
dec
je
or
dec
cmp
inc
push
pop
pop
and
mov
stos
test
xchg
dec
xchg
fisubl
in
je
ret
in
and
cwtl
movsl
inc
test
or
jbe
and
jg
add
xor
in
sbb
aas
xchg
jnp
popa
dec
xchg
out
pop
xor
and
jnp
xchg
popa
xor
dec
gs
adc
mov
push
or
cmp
bound
mov
fcmovnu
out
int
cmc
mov
sbb
inc
ljmp
add
dec
adc
or
push
enter
jp
mov
jo
jno
xchg
adc
xor
inc
and
ja
shll
push
loope
jg
sbb
insb
mov
fsubr
cmpsb
mov
adc
mov
ret
dec
pop
push
add
sahf
push
adc
ret
xchg
das
clc
mov
mov
mov
movsb
pop
pusha
and
cs
lods
aas
xor
dec
sub
scas
and
fwait
pop
cmp
addb
in
or
fistl
test
call
and
outsl
jl
cmp
mov
in
sub
aas
push
push
inc
lret
cwtl
jbe
dec
pop
jno
cmpsl
pop
pop
repnz
xor
loop
popa
mov
cltd
loope
fs
dec
mov
mov
dec
stos
jno
in
cli
mov
nop
ficompl
add
push
push
rolb
and
mov
inc
sub
call
pusha
jg
ss
or
cmp
repz
pusha
dec
out
inc
lock
insl
mov
ds
lock
lea
mov
dec
jo
jmp
mov
addl
testb
lods
mov
cmp
popl
arpl
mov
push
out
outsl
loope
dec
jg
pop
fcmovnu
jecxz
scas
dec
in
push
es
pusha
push
sub
jp
es
pop
loop
cmpsl
mov
mov
leave
imul
into
mov
sub
xchg
bswap
je
xchg
adc
or
dec
mov
ret
shrl
data16
cli
or
add
jbe
xor
js
gs
cltd
sbb
or
add
into
pop
pop
adcb
cltd
and
mov
adc
pop
pop
lods
imul
cmp
shll
xor
mov
test
sbb
xchg
data16
int3
mov
popa
cmp
adc
or
dec
sub
mov
je
icebp
sbb
in
mov
lds
ljmp
adc
or
xor
xchg
or
mov
loope
and
iret
lcall
pop
xor
loop
xchg
sub
js
pusha
fstl
out
cmc
mov
push
mov
mov
subl
mov
add
pop
mov
mov
mov
loopne
scas
jb
jo
ljmp
aas
int3
sub
pusha
out
mov
dec
jl
rcrl
pop
push
xor
inc
ret
loope
mov
pop
pop
and
xor
enter
ja
push
ret
pop
mov
mov
nop
pop
push
mov
mov
in
in
cmpsl
stos
inc
xchg
inc
jecxz
adc
add
or
xchg
stos
mov
xor
cmp
loop
ret
into
pop
insb
lcall
dec
jl
arpl
add
xor
loop
das
pop
jne
push
fs
pop
push
data16
xchg
sub
jnp
xchg
ret
imul
jno
rcll
mov
and
push
cmpsb
and
cwtl
adc
push
jne
push
push
adc
dec
ljmp
jae
adc
push
push
lret
adc
stos
adc
aaa
sbb
sub
in
jmp
push
cwtl
pushf
dec
mov
cmp
rclb
jbe
icebp
cmp
or
out
push
mov
inc
cmc
std
aam
ja
sub
mov
in
jmp
xor
jmp
mov
lds
ja
andl
icebp
js
fisubs
add
aaa
or
cli
xchg
xchg
mov
cmpsb
inc
sti
mov
adc
enter
pop
mov
mov
pop
mov
cld
push
orl
push
ret
mov
lods
xchg
adc
jnp
jg
jb
lds
stos
cwtl
dec
and
xor
call
arpl
xorl
mov
mov
cmp
outsb
push
mov
mov
xchg
mov
jecxz,pt
imul
sbb
sbb
xor
scas
std
shrb
jecxz
cltd
in
rolb
jns
jmp
in
sub
in
cwtl
adc
dec
pop
bnd
pushw
daa
or
fdivr
div
loopne
test
mov
rcrl
sub
adc
divl
mov
xor
outsl
adc
lcall
pusha
inc
sub
mov
dec
mov
out
pop
and
sbb
push
add
out
adc
data16
inc
xchg
shr
lahf
push
es
les
mov
pop
call
xor
xor
aas
daa
into
gs
insl
xor
outsl
xor
push
gs
ss
xchg
mov
sbb
mov
mov
aaa
add
adc
xchg
jp
pop
repnz
loopne
popf
pop
ja
bound
test
jo
repz
jecxz
push
xchg
pop
dec
lea
and
ss
subl
mov
imul
dec
or
sub
int3
add
scas
mov
pop
aam
sub
aaa
dec
popf
out
sbb
mov
mov
sbb
in
and
push
xor
cmc
setp
lods
adc
mov
lahf
dec
int
dec
and
out
cltd
add
imul
leave
push
fistps
xchg
xor
pop
test
adc
sbb
push
jecxz
xor
push
cld
mov
call
out
lret
push
mov
add
xchg
das
xchg
ds
pop
pop
std
cltd
xchg
push
mov
jle
jne
push
insb
cmp
and
es
mov
aad
into
stos
test
pop
ret
pand
fstps
fucompp
clc
cmc
ljmp
pop
or
out
xchg
push
jae
dec
pop
movsl
jo
mov
dec
lds
or
mov
sbb
loope
loopne
sbb
dec
xchg
or
jbe
inc
sub
add
sbb
adc
es
pusha
mov
mov
jl
xlat
pop
dec
and
insb
adc
leave
incl
sbb
fwait
and
out
xor
mov
inc
mov
mov
ja
jno
xor
and
es
sbb
sahf
cmp
and
cmp
mov
test
xchg
ss
sub
pop
add
cmp
mov
mov
push
ljmp
cmc
repz
std
jo
pop
test
jle
shlb
test
push
icebp
sub
sub
std
fldt
cmp
mov
xchg
add
dec
test
insb
xchg
je
adc
mov
adc
or
add
movsl
mov
cmc
incb
push
add
lea
jp,pn
scas
aas
stc
out
add
push
add
loopne
imul
test
jnp
dec
add
gs
xchg
push
loopne
pop
loope
mov
cmp
push
xlat
in
imul
cmp
sbb
mov
pop
mov
cwtl
xor
fcompl
dec
ficomps
inc
xchg
and
out
sbb
mov
xchg
xchg
mov
adc
or
xchg
sbb
and
add
sub
add
xchg
mov
push
adc
stc
xchg
jne
ret
push
in
mov
jnp
addr16
in
cmp
andb
cmpsb
icebp
dec
push
enter
inc
mov
jne
mov
jp
push
adc
imul
inc
xchg
or
add
dec
xchg
sbb
dec
bound
lret
xor
mov
xor
ret
mov
popa
jp
adc
adc
mov
bound
std
cmpsb
sub
and
shll
inc
sbb
push
mov
inc
repnz
hlt
push
flds
inc
mov
rol
jbe
adc
faddl
clc
outsl
stc
cwtl
adc
sub
das
ret
xor
pop
sahf
ret
pop
je
mov
mov
mov
add
fsubs
fcoml
test
dec
jmp
test
popl
cmp
gs
stc
lods
pusha
sub
cmpsl
js
xor
sbb
jmp
sbb
bound
jge
sbb
and
mov
dec
xor
test
push
push
xchg
call
mov
or
xor
cmp
pop
pop
mov
xchg
lods
hlt
mov
and
jbe
movsl
mov
xor
sub
mov
jle
fs
inc
fildll
xor
mov
adc
movsb
outsb
or
xchg
repnz
cwtl
insb
lods
mov
insl
jae
or
cmp
pop
rcll
or
data16
clc
test
daa
lret
orb
sub
fimull
mov
outsb
insb
lret
jg
cmp
sbbl
pop
lret
mov
adc
or
sbb
mov
out
andl
pop
inc
mov
fldl
inc
shrb
aam
cmp
scas
xchg
mov
pop
movsl
or
addr16
popa
xor
push
cmc
xchg
mov
mov
push
or
jmp
lods
rcrl
sub
jns
sbb
fstps
int
mov
push
movsb
mov
and
leave
stc
sahf
adc
pop
ljmp
clc
in
cli
jge
add
mov
push
pop
ds
mov
mov
adc
sub
xchg
mov
mov
xor
sub
movsl
mov
fs
inc
insb
pop
stos
jmp
pop
sub
data16
cltd
dec
testl
xor
ja
sbb
rolb
or
dec
enter
pushf
insb
fisubrl
and
xor
jl
test
push
daa
adc
xchg
cmpsb
movsl
inc
push
push
mov
pop
mov
mov
lods
sbb
cmc
test
mov
or
outsl
ljmp
adc
mov
ljmp
fistpll
scas
add
push
xchg
xor
jb
inc
mov
hlt
enter
pop
add
ljmp
fcoml
adc
push
repnz
add
das
loope
push
scas
sti
cmp
mov
insb
arpl
dec
out
leave
mov
fstpt
lahf
pushf
cmpsl
sbb
lds
fsubrs
fdivrs
jbe
xchg
xchg
sbb
inc
lock
or
mov
push
jne
sub
cmp
das
cmp
mov
add
pop
aad
or
or
icebp
fcompl
pop
cltd
mov
dec
mov
sub
and
dec
mov
mov
packssdw
nop
jae
iret
loope,pn
mov
mov
pop
mov
add
jo
add
popf
fmull
scas
jne
and
cltd
push
fs
or
lods
mov
pop
out
fisttpll
adc
int3
sub
add
xlat
jnp
and
mov
pop
pushf
repz
movsb
mov
fnstenv
adc
or
xchg
jne
inc
repnz
sbb
jl
xor
int
push
add
mov
and
adc
lds
xor
and
and
scas
jbe
xor
push
mov
mov
mov
int3
dec
cmp
out
insb
add
jbe
cld
sub
aaa
fidivs
jae
cltd
sub
adc
test
mov
mov
fcoml
das
ljmp
or
lea
add
enter
int3
shll
daa
bound
xor
adc
adc
push
xchg
loopne
into
mov
arpl
aad
add
scas
popa
imul
cmp
pop
outsl
sbb
lret
sti
xchg
xchg
popa
jbe
in
std
shrb
inc
ljmp
xchg
incb
push
pop
outsl
loop
add
lea
lock
push
dec
adcb
dec
inc
mov
dec
jno
mov
vpavgb
mov
and
xchg
xchg
cmpsb
and
mov
ret
outsl
add
sub
dec
int3
xor
sbb
pop
vunpcklpd
dec
and
cmpsb
testl
out
es
aas
ret
sbb
mov
sbb
shll
stos
lcall
stc
jbe
push
or
cmpsb
xchg
sub
push
adc
push
or
xor
jo
insb
lea
jge
xor
pop
jb
inc
or
aas
imul
lahf
movsl
add
mov
xchg
insl
or
pop
pop
stos
mov
enter
add
int
sub
jl
or
dec
or
pop
lea
ss
sbb
fnstenv
sbb
out
clc
mov
enter
jae
push
movsb
cmp
dec
mov
cmpsl
inc
mov
mov
test
loopne
das
pop
out
es
add
push
lcall
imul
pop
jo
jb
jge
outsb
xchg
sahf
lcall
or
xor
and
push
stc
pop
inc
dec
xchg
test
stos
lea
mov
movsl
inc
mov
jo
divl
push
scas
or
inc
stc
sbb
push
pop
dec
sti
fs
adcb
das
push
cmpsl
jmp
repnz
or
popa
jmp
mov
lds
xchg
call
sbb
cmp
negb
jne
jp
fidivs
fsubrl
mov
adc
jl
sub
adc
scas
insl
enter
ret
insl
cmp
mov
cmpsb
sub
xchg
jnp
int3
popf
cmp
mov
jmp
mov
sub
mov
mov
and
pop
fsubrs
xlat
daa
sub
popf
push
jns
daa
cmp
pusha
xor
and
cld
adc
add
jge
mov
jge
cmp
and
fmuls
test
loopne
popf
aam
mov
out
mov
pop
and
inc
inc
push
gs
daa
cmp
xchg
in
insl
outsl
xor
ret
push
pop
cwtl
lea
xor
mov
cwtl
xor
push
adc
out
jle
sub
pop
aas
xchg
loopne
sbb
xchg
xchg
int3
daa
call
sbb
inc
add
push
or
mov
insl
push
rcll
jmp
cmpb
lahf
subl
mov
add
mov
cmp
mov
lret
stc
add
in
aad
xchg
sub
out
loope
xchg
in
in
inc
sti
inc
xchg
popf
xor
fsin
fs
mov
jno
pop
sbb
push
add
out
icebp
sbb
mov
jb
in
fiadds
in
into
std
insl
cld
dec
es
mov
push
loopne
sbb
rcl
mov
push
not
pusha
sub
pop
lahf
insl
or
jg
lret
dec
and
out
int
in
aad
push
clc
sbb
out
mov
mov
jl
jno
cmp
pop
int
pop
outsb
stos
jle
mov
push
cmp
inc
pop
xchg
leave
lods
jae
cmp
adc
fnsave
lret
sahf
mov
pop
jns
jge
ljmp
jp
or
pop
out
and
aam
xor
lock
ds
cli
or
rorl
push
ja
pop
inc
frstor
mov
xor
movb
fdivrs
out
push
in
adcb
shlb
xchg
mov
int3
cmpsl
jne
out
inc
pop
inc
push
adc
in
or
cmpsl
aas
dec
and
sahf
leave
adc
dec
fmul
aad
jp
lret
icebp
int3
cli
lahf
dec
aas
test
or
aam
int3
imull
sti
add
negl
xlat
push
add
das
pop
fs
pusha
sub
imul
subb
lret
insb
aaa
cmp
in
aam
jecxz
mov
xor
daa
cmp
lea
sub
hlt
ret
gs
pop
mov
cmp
push
orl
cmpsb
rcll
mov
or
mov
jae
mov
inc
jae
jmp
and
movsl
in
addb
pop
out
aaa
rolb
xchg
jno
or
and
jmp
mov
adc
jg
cmpsl
popa
cmp
jg
and
repnz
bound
repz
inc
push
xor
fucom
add
lds
imul
xor
jnp
rcll
push
and
cmp
push
adc
in
in
fstpt
sub
std
lods
push
jl
or
xor
add
enter
inc
xor
repnz
pushf
iret
xor
dec
into
pushf
cli
sub
and
sbb
lods
cmpsb
pop
adc
sbbb
loop
cli
aam
nop
cmp
sbb
imul
or
movsb
cmp
outsl
arpl
sbb
add
stos
add
xchg
jecxz
in
push
xor
sub
pop
mov
dec
mov
xor
jge
push
or
movsl
ret
mov
xchg
pop
dec
xor
outsl
sar
jge
imul
in
rep
dec
mov
adc
xor
pusha
jbe
popf
push
enter
inc
inc
mov
push
nop
and
mov
or
jno
dec
mov
add
aam
xor
xchg
or
add
xor
xchg
xchg
push
pop
sub
mov
dec
cwtl
sbb
fistpl
or
cld
jno
pop
int
and
rcrl
int3
xchg
lods
cli
xchg
pop
inc
js
nop
sbb
aad
shr
gs
insl
xchg
mov
outsl
dec
xor
fcompl
inc
or
xor
dec
mov
adc
pop
mov
cld
out
jno
jp
dec
jecxz
int
xchg
xor
in
mov
imul
sahf
jbe
lret
jb
cmpsb
stc
jb
pushf
xchg
or
jbe
inc
fs
insl
xor
xor
jle
shrb
pop
push
mov
icebp
jp
push
xchg
dec
jnp
fwait
and
into
inc
divb
cli
sub
or
fisubl
and
pop
xchg
pusha
cld
loopne
jno
jp
push
leave
dec
and
and
popf
into
fstpt
addr16
dec
inc
inc
sbb
repz
xor
jg
adc
push
lea
test
sub
lahf
sub
mov
lock
repnz
sub
dec
jp
sbb
mov
cwtl
mov
inc
mov
xchg
js
mov
lcall
out
mov
lods
cmp
push
pop
or
sbb
jl
pop
repz
lock
xor
stos
xchg
sbb
pop
xchg
cld
mov
sbb
fisttpll
movsb
fstpt
jg
push
xchg
jnp
jbe
aas
repnz
sti
paddw
xchg
ret
sbb
sahf
imulb
insb
pusha
add
cmp
push
mov
inc
out
or
dec
push
fs
mov
fdivp
out
jp
xor
sbb
mov
insb
test
ficoms
lock
insb
sbbb
jbe
mov
jge
xor
jbe
mov
mov
mov
in
mov
outsb
mov
add
mov
mov
sub
int
lock
fsubs
sub
aas
jae
pop
lahf
ss
bound
iret
jle
and
out
roll
imul
add
loop
xchg
fiadds
outsl
lea
icebp
mov
out
adcb
cmc
and
jg
dec
mov
push
jbe
lret
adc
cmpsl
cs
fdivs
es
adc
mov
xchg
negb
mov
cmp
lods
cmp
push
fadd
sbb
scas
mov
pop
mov
lods
sub
test
aam
sub
cmp
ret
out
movsl
xor
xchg
stos
mov
and
decb
xchg
int
test
loopne
addl
fldenv
daa
inc
inc
ret
sti
jns
cmp
rolb
lahf
imul
and
and
push
jns
aas
imulb
scas
sbb
fisubrs
imul
out
xor
sub
jb
inc
orl
push
stos
imul
mov
xchg
push
ljmp
and
cmp
sbb
push
lahf
xchg
jl
popa
jecxz
jne
fmuls
inc
cmpsb
insl
sbb
into
sbb
mov
insl
jmp
xchg
adc
cld
std
pop
cld
mov
xor
rol
insl
es
jo
pop
cli
jecxz
xchg
and
add
dec
popa
inc
pop
les
pop
sub
adc
mov
xlat
inc
cs
add
and
push
push
pop
dec
inc
mov
xor
cmp
leave
into
push
fadds
iret
adc
and
sub
jae
pop
cmp
fmuls
mov
push
push
mov
in
adc
dec
push
into
add
push
xor
inc
daa
in
icebp
mov
add
adc
xchg
addr16
in
cmp
flds
xchg
cmp
js
jp
add
push
xchg
sti
loope
sub
and
lea
pusha
mov
bound
mov
jmp
push
daa
mov
out
xor
fiaddl
stc
in
fwait
mov
nop
pop
in
shlb
jmp
test
stc
push
ds
pop
mov
int
aam
push
nop
sbb
jb
orb
mov
addr16
nop
mov
xchg
aad
push
je
sbb
addr16
xor
aaa
dec
lcall
je
scas
stos
imul
and
imul
outsl
xchg
lods
mov
cmc
mov
incl
scas
jo
scas
test
iret
fs
shl
or
rol
in
movsl
sbbl
or
fdivs
ficomps
and
int3
xor
jl
xor
fsubr
in
test
cmp
push
jl
stos
lcall
jnp
lcall
scas
or
xchg
add
andl
xor
mov
rcrb
scas
nop
packssdw
fnsave
inc
in
leave
push
and
dec
add
pop
xor
xchg
mov
or
or
and
icebp
cmp
out
dec
fldl
pop
repz
push
insl
or
lret
dec
mov
repnz
xor
enter
gs
out
test
cs
aaa
fsubr
call
xchg
aam
cmpsb
movsl
lock
incl
shl
lahf
aas
int
movsl
mov
dec
repnz
mov
movb
sub
je
mov
xchg
btc
sar
sbb
mov
push
cmp
jo
push
add
jns
loop
mov
jb
mov
mov
push
and
sub
pop
mov
fdivrs
or
sub
mov
xor
dec
jns
and
mov
mov
cmp
mov
sbb
icebp
push
push
icebp
and
gs
fwait
dec
push
mov
lods
imul
out
dec
das
dec
mov
aaa
and
inc
pusha
sbb
aaa
bound
inc
sub
insl
sti
sarb
sbb
xchg
popf
push
orb
sub
ja
mov
rcr
test
lahf
jge
xor
xchg
lahf
std
ljmp
andl
dec
pop
xor
sub
adc
lods
std
fildll
add
call
fwait
notl
mov
aad
popa
das
das
jge
stc
cmp
ficompl
int3
movsb
repnz
jo
and
sub
call
jp
clc
shr
inc
mov
and
mov
mov
ret
pushf
push
dec
jo
mov
outsl
adc
ret
adc
adc
cmp
lcall
das
pop
or
jno
cmpsl
adc
out
movsl
popa
scas
and
mov
jmp
jo
xchg
js
cli
inc
jno
jecxz
mov
pusha
mov
out
fwait
call
sbb
jmp
mov
jmp
pop
mov
jle
ljmp
out
push
jno
pop
insb
mov
jnp
xchg
xor
and
inc
cmp
sbb
cld
push
in
mov
add
out
sahf
sub
hlt
pop
xchg
xchg
push
loopne
xor
push
ljmp
popa
shll
clc
imul
daa
push
xchg
lcall
scas
rcll
mov
shlb
adc
sbb
sub
adc
jp
cmp
cld
push
pop
xchg
pop
adc
xchg
fs
push
xlat
test
out
jmp
pop
mov
mov
add
sbb
std
cmpb
iret
inc
dec
fsubl
sub
jg
aas
add
push
inc
xor
fiadds
orl
out
cld
in
insl
sbb
out
lret
sbb
outsl
xlat
pop
sub
pushf
stc
push
jle
lahf
mov
cmpsl
shlb
movsb
xor
sti
cmp
pushl
jo
cmp
jne
lahf
cltd
push
dec
lds
inc
rclb
lcall
fdivs
sub
scas
lods
and
aaa
in
fstl
xor
enter
xor
cmp
add
pushf
xchg
cld
ds
or
add
cli
pop
xor
jge
fstpl
add
or
stos
cltd
mov
ficoml
popf
sub
lahf
inc
pop
dec
adc
into
dec
repz
add
repz
aad
aaa
lods
pop
pop
push
push
out
lea
daa
mov
push
mov
pop
outsl
adc
xchg
add
pop
push
or
xchg
add
leave
mov
rcll
insl
ds
je
ss
sbb
repnz
cmp
mov
pop
sbb
xor
sbb
sarl
int
rorl
sbb
push
loopne
in
add
xchg
outsb
leave
insl
frstor
fwait
jge
fbstp
or
mov
push
movlps
ret
jbe
jg
xchg
xrelease
pop
xor
das
in
adc
xor
rcll
fisubs
push
add
add
imul
sub
mov
cltd
add
jnp
andl
or
sarb
mov
cmp
je
xchg
cmpsb
jl
adc
test
js
sub
jle
mov
ret
and
adc
out
sub
rorl
outsb
int3
loopne
mov
adc
dec
mov
cmp
int
mov
mov
cmp
cmp
jo
jb
js
andps
ds
push
and
je
adc
pop
jnp
mov
bound
aad
jmp
and
or
mov
inc
clc
icebp
aad
jne
ret
xchg
pop
lods
pop
mov
or
jp
cmpsl
outsb
notb
jmp
jo
and
mov
test
sti
test
into
gs
outsl
mov
rcrb
xor
mov
cmp
sbb
push
or
stos
xor
mov
out
das
xlat
mov
dec
push
dec
cltd
mov
jle
dec
and
xchg
scas
and
mov
mov
outsb
add
xlat
test
bound
lret
jno
movsb
add
sub
mov
mov
nop
sub
clc
mov
add
lods
rcll
adc
addl
and
fildl
xchg
daa
add
cmpb
xchg
lods
mov
aad
aaa
test
push
jmp
aaa
mov
xchg
inc
cmp
inc
out
mov
dec
xor
mov
pop
movsl
inc
and
pop
dec
repnz
dec
popa
loopne
xor
xor
cmp
sbb
sti
std
xor
imul
sarl
shrl
mov
es
sbb
in
mov
or
or
sbb
and
dec
addb
pop
in
jle
lret
mov
cmp
push
hlt
rol
fpatan
in
int3
fnstsw
lcall
jo
adc
fmuls
out
push
inc
pop
insb
xlat
sti
push
cwtl
adc
in
jg
mov
adc
xor
xchg
jns
clc
xchg
push
dec
xchg
shlb
pop
cmp
outsl
enter
pop
xchg
inc
aad
addr16
movsl
mov
jmp
xchg
mov
lret
out
aad
cmp
insl
mov
jbe
sbb
pop
sti
int3
adc
add
leave
aad
jns
pop
mov
testb
mov
xchg
testb
push
lret
jmp
stos
dec
popa
mov
lock
xchg
adc
mov
lcall
jo
je
test
fxtract
test
pop
inc
stc
sbb
std
shll
mov
test
aad
xchg
xchg
cmp
test
ud0
and
pop
and
and
fmuls
mov
jmp
out
das
jne
in
mov
cmp
push
push
dec
in
dec
mov
mov
jae
fcomps
xor
iret
mov
repnz
push
jbe
or
popf
xor
mov
mov
add
jne
imul
cvtps2pi
mov
movsl
sar
int3
pop
aaa
gs
mov
jecxz
cltd
mov
mov
mov
je
inc
xlat
xorb
fildl
popf
xor
ret
call
call
jmp
sti
jg
pop
mov
xchg
and
sub
out
jmp
pop
sbbb
movsl
mov
scas
dec
push
fs
fists
cmp
ss
popf
inc
out
movsb
dec
icebp
push
iret
xchg
imull
icebp
pop
mov
stos
fildl
fldcw
negl
xor
mov
repz
jne
rcrb
and
out
fidivs
fsubs
ljmp
lods
mov
mov
xchg
xchg
jle
inc
and
dec
data16
xchg
xor
sub
ja
pusha
mov
enter
mov
cwtl
or
sub
movsl
inc
stos
scas
test
jno
inc
inc
movsb
or
cmp
ja
or
pop
ret
xlat
ljmp
cltd
hlt
loope
fcoml
mov
shrl
mov
cltd
dec
popa
sbb
inc
mov
pop
mull
sahf
loopne
or
mov
je
daa
sbb
push
cwtl
xor
rcrb
es
jmp
icebp
arpl
cmp
imul
popa
int
in
dec
ret
test
mov
xor
addb
mov
repz
es
call
mov
inc
add
ds
push
ja
leave
jecxz
mov
and
pop
rol
jmp
add
insl
repnz
jmp
stos
inc
push
negb
sbb
pop
cmp
sti
mov
sbb
mov
xor
test
js
lods
pop
mov
jle
lea
xchg
mov
cmp
ret
sti
add
push
inc
pop
inc
xor
outsb
lcall
xor
mov
sahf
js
sub
ds
jo
cmp
inc
aaa
xor
inc
or
push
push
adc
mov
pop
or
rclb
cld
loop
ljmp
mov
xchg
adc
fiaddl
sub
sbb
mov
mov
sbb
push
adc
ficomps
mov
lods
scas
inc
xchg
das
arpl
subb
sarl
or
int
outsb
mov
jecxz
out
lcall
adc
hlt
cli
popa
and
imul
add
cwtl
pop
xor
xor
iret
or
adc
or
insb
jne
sti
mov
imul
loopne
mov
dec
xchg
jecxz
rclb
iret
in
jo
out
add
lods
shrl
push
in
clc
test
cmp
inc
ud2
xchg
jle
mov
or
in
leave
pop
and
nop
gs
mov
pop
icebp
in
dec
cmc
mov
std
push
xchg
adc
pop
xor
sub
xchg
dec
pop
mov
and
rcrl
xchg
or
or
test
rorb
aaa
lods
adc
push
sbb
movsl
aas
enter
gs
inc
sbb
pop
mov
ror
xchg
pop
pop
das
pop
mov
adc
cmpb
jae
pusha
pop
sbb
flds
add
inc
adc
mov
or
aas
push
pop
add
pop
xchg
and
and
insb
mov
decb
push
orl
sbbl
mov
lods
call
sbb
dec
addr16
sub
cmc
mov
fmuls
fs
inc
dec
jp
pop
scas
inc
rol
dec
mov
cmp
push
inc
sbb
push
pop
sbb
les
and
and
andl
fidivrs
adc
xor
and
xor
fdivrs
xchg
fisttpll
add
sarb
insl
loope
adcl
inc
bound
push
add
in
enter
aad
mov
mov
outsb
mov
or
adc
inc
call
pusha
push
pushf
push
pop
ljmp
push
xchg
adc
mov
gs
dec
mov
inc
mov
add
cltd
push
inc
sbb
out
shrb
pop
outsb
and
das
cwtl
mov
int3
lock
sub
mov
hlt
push
insl
jae
inc
in
and
xor
add
and
and
cmp
scas
rclb
flds
dec
push
int
dec
aaa
pop
push
iret
inc
push
adc
or
es
mov
stc
add
cmp
push
inc
jnp
xor
aad
push
add
clc
sbb
cmpsl
lods
sbb
mov
mov
jge
inc
mov
add
inc
sti
inc
nop
data16
sti
mov
call
decb
pop
outsb
xchg
mov
mov
in
divl
stos
adc
inc
popf
test
es
push
mov
adc
push
push
sub
push
nop
xor
sbb
xorb
lcall
incl
arpl
jecxz
inc
les
add
iret
push
xlat
xlat
mov
or
repnz
mov
lcall
dec
inc
pop
rcrl
push
lahf
out
pop
xchg
arpl
push
xchg
xchg
jae
mov
adcb
adc
addb
adc
inc
mov
dec
aaa
call
cli
repnz
inc
pop
outsb
mov
pop
lcall
sarb
sahf
inc
enter
jb
push
or
sahf
idivl
adc
push
mov
inc
pop
push
dec
push
cmp
sub
pop
sti
and
push
sbb
outsl
rcrl
inc
or
dec
mov
cltd
jno
or
pop
into
ffree
aaa
dec
roll
pop
xor
cmpsb
cld
into
imul
adc
inc
cmp
rorb
or
mov
repnz
pop
cmp
xchg
mov
jp
xor
mov
xchg
mov
jbe
ljmp
push
insb
or
xchg
lret
xor
scas
inc
cmp
xchg
jmp
pop
insl
dec
loop
aad
sub
push
pop
inc
nop
xor
arpl
mov
mov
xchg
arpl
mov
mov
add
jns
hlt
je
jmp
inc
jb
pop
fsts
sbb
dec
fisttpl
xchg
mov
fbld
aaa
and
enter
adc
rol
cmp
xchg
in
int3
pop
pop
pop
mov
in
int3
dec
cli
adc
mov
fcmovnbe
mov
movsl
setle
jns
imul
movsb
xchg
jno
hlt
in
cmp
subl
jg
sub
pusha
leave
jg
stos
xchg
dec
mov
in
or
repz
test
roll
xchg
out
mov
stc
and
dec
add
cwtl
xlat
push
clc
and
xlat
into
xor
je
mov
inc
js
mov
lds
out
insb
jae
pop
in
mov
ret
mov
pop
fidivl
outsb
and
pop
mov
mov
jle
push
cmp
loope
mov
jo
shrb
mov
or
jecxz
fwait
dec
mov
in
iret
jb
xlat
pop
xchg
test
hlt
push
inc
mov
add
lahf
imul
jno
sarl
inc
bound
inc
pop
insb
push
scas
add
loopne
test
cmc
xchg
inc
icebp
add
sub
or
in
fstcw
mov
push
mov
push
inc
out
shl
inc
jno
mov
mov
in
cmp
cltd
out
jge
add
bnd
mov
out
adc
fcoml
push
fwait
mov
push
je
jne
mov
cmp
mov
adc
pop
mov
test
pop
sarl
addr16
pop
add
je
clc
mov
xchg
aaa
je
mov
mov
push
mov
rolb
jecxz
dec
sbb
or
add
andb
ds
xchg
push
rclb
lds
shrb
mov
jp
and
in
cmp
faddl
push
fdivl
mov
test
mov
dec
xchg
cmp
aaa
and
cwtl
aam
xchg
mov
mov
std
dec
sbb
cmc
inc
xlat
dec
jge
pop
jl
adc
adcl
fisubrl
scas
sub
lea
xchg
scas
pop
loopne
sub
out
pop
out
cmp
out
push
movsb
lods
jae
and
xlat
jns
and
dec
inc
insb
notl
fstpl
ljmp
cmp
outsl
stos
jae
mov
imul
push
or
leave
cmp
lock
daa
leave
sahf
js
adc
xor
insl
test
xor
ss
std
in
inc
les
fnstenv
aad
mov
mov
or
leave
jle
ljmp
inc
inc
xchg
insb
inc
pusha
shrl
test
test
adc
sahf
dec
scas
inc
fstl
mov
inc
imul
adc
ja
add
xchg
push
sub
movl
das
adc
xchg
pop
push
dec
es
hlt
hlt
xchg
xlat
sub
daa
shrb
dec
fstpt
cmp
or
sti
cwtl
jp
cmp
jns
out
inc
add
test
and
mov
jle
cmpsl
mov
add
dec
popf
fcmove
icebp
sbb
dec
mov
pop
andl
js
dec
cmp
out
pushf
and
pop
mov
pop
adc
mov
and
or
jle
test
sub
push
inc
mov
out
ret
pop
aam
add
push
xor
movb
sub
jne
sti
popa
pushf
movsb
repz
sbb
pop
les
mov
adc
or
dec
mov
push
pushf
dec
push
jb
cmp
pop
aas
in
push
xor
iret
push
push
in
in
inc
lds
call
add
or
xor
mov
mov
sbb
pop
lock
repz
shrl
mov
lcall
hlt
loop
in
push
mov
sahf
cmp
dec
loope
fildll
js
insb
dec
cmpl
dec
sarb
push
std
scas
loope
push
and
insl
lret
xor
push
push
jg
dec
test
add
and
mov
into
mov
rcrl
or
sti
daa
mov
das
xchg
sub
inc
daa
js
push
cli
lfs
pop
insl
xchg
mov
pop
aas
outsl
add
adc
mov
xor
jmp
sub
mov
xchg
fmull
notb
xorl
movsb
and
adc
dec
lods
mov
fs
incl
pop
xor
xlat
arpl
and
or
imul
lcall
and
push
mov
mov
pop
jb
popa
mov
test
cmp
push
fisubrl
mov
mov
stos
ss
adc
pop
inc
xchg
sbb
nop
sub
sub
push
dec
pusha
lods
test
cmp
test
clc
idivb
repnz
add
repz
scas
orb
pop
cli
loope
jno
or
and
sbb
jne
cmpsl
xor
aas
mov
pop
or
mov
rolb
sub
ljmp
pop
mov
jae
inc
fiaddl
mov
and
inc
xchg
pop
fmull
inc
sub
mov
inc
movsl
in
mov
push
nop
rolb
and
sahf
les
mov
outsl
xchg
aaa
imul
inc
hlt
and
pop
adc
imul
add
xchg
stos
push
stc
mov
inc
adc
pop
push
dec
and
pop
movsb
sub
les
jae
adc
fcoml
sub
xor
jle,pt
dec
dec
mov
or
into
loop
repz
inc
test
aaa
scas
sbb
into
push
jnp
in
jecxz
and
movsl
in
sub
orb
mov
or
fsts
aaa
mov
mov
in
xchg
fsubr
cmc
mov
mov
daa
sub
cmp
imul
push
out
xchg
sti
or
mov
sbb
mov
and
orb
pop
jnp
clc
shlb
or
inc
lret
mov
sbb
add
imul
xchg
jns
insb
xlat
xor
pop
in
out
push
mov
jl
mov
je
mov
lea
sub
jo
test
push
cmp
dec
fcoms
aam
sub
add
dec
lcall
pop
sti
cmpsl
movsb
incb
jge
aaa
inc
cltd
mov
cmp
imul
xchg
pushw
ja
jecxz
imul
filds
jns
mov
adc
pop
in
push
lods
inc
push
pop
xor
jecxz
sbb
mov
pushf
jmp
and
jle
dec
pusha
or
int
jmp
imul
gs
cs
and
lods
xor
pop
mov
mov
in
mov
aam
jl
ror
jg
adc
jne
inc
xchg
xor
pop
or
mov
or
dec
or
aas
jnp
icebp
aad
call
cmpsb
popa
push
dec
ror
xchg
jmp
jmp
cli
iret
fs
add
cli
cmp
sbb
shrl
imull
mov
jae
aaa
call
sub
outsl
jl
and
push
mov
push
sbb
mov
lahf
add
mov
jg
aam
mov
lea
dec
cmp
dec
xchg
push
data16
cs
stos
jl
arpl
loop
in
or
dec
mov
out
shl
lret
pop
cs
fmull
xlat
out
push
jb
adc
sarl
add
sbb
push
push
test
push
test
jg
push
test
sub
lods
xchg
lods
adc
pusha
test
popf
lret
xor
leave
aad
mov
cmc
fldt
out
mov
push
adc
mov
inc
pop
pop
sub
outsb
push
mov
orb
mov
jae
push
sbb
or
push
mov
inc
gs
push
dec
sub
cwtl
push
sub
pop
fs
test
adc
mov
cmp
dec
stc
inc
rorb
neg
jle
icebp
aaa
mov
jp
mov
xchg
rcrl
jecxz
ja
sbb
and
lret
sysenter
test
cwtl
add
push
mov
mov
mov
sti
pop
sub
lahf
ret
out
das
pop
inc
sub
fmull
add
sbb
mov
xor
cmpsb
pop
cmp
add
pop
jns
jl
insl
fwait
es
test
ret
ss
sbb
sbb
cmpb
ljmp
ja
out
push
out
dec
xor
jp
mov
cmp
mov
mov
je
sub
test
aaa
adc
sub
inc
push
imul
daa
inc
jl
lret
mov
jge
or
sbb
or
adc
jle
cmpsb
cmp
jp
stc
mov
jecxz
rcrl
stos
mov
gs
inc
pop
mov
pop
or
rcll
push
xchg
fstps
fisubs
cmp
push
out
xchg
dec
jl
mov
int3
mov
jbe
in
jp
fwait
ljmp
add
bound
rolb
push
mov
mov
push
icebp
pop
push
push
out
mov
sub
cmp
mov
sub
cmc
mov
xchg
mov
dec
adc
jo
lods
adcb
sbb
and
ss
clc
mov
sti
fcompl
push
test
cld
in
push
jl
in
jecxz
out
mov
sbb
imul
sub
dec
movsl
and
xchg
sub
pop
or
jae
sti
adc
in
pop
adc
jno
das
push
sbb
das
xor
push
mov
add
lret
sub
pushf
push
lock
push
ja
jp
aam
pop
inc
scas
outsb
stos
psubq
sbb
cmpsb
cmc
add
fs
xor
push
popf
outsl
jg
bound
add
loope
adc
inc
xchg
xchg
mov
mov
mov
xorl
xchg
dec
lods
jae
jmp
dec
push
fdivrs
mov
pop
int
sub
je
xlat
xchg
dec
lcall
cmpsb
cmp
cmp
xchg
sbb
insb
cmp
xor
sub
out
push
in
lods
repz
pop
fucomi
jp
mov
pop
add
mov
jno
add
adc
aaa
or
into
adc
push
xchg
repnz
fldt
repz
jns
and
popf
pop
icebp
mov
push
jb
or
sbb
mov
push
stc
jp,pt
and
cld
std
in
insl
gs
sbb
add
vpcmpgtb
sbb
int3
pushf
xchg
aas
pop
push
jno
mov
fiaddl
push
shrb
mov
cld
add
pop
xor
xchg
dec
xor
or
adc
push
inc
sti
mov
or
movsb
mov
mov
hlt
ds
jmp
mov
jl
popa
inc
pop
mov
jne
cwtl
sub
shlb
and
or
or
imul
jmp
pusha
test
push
data16
leave
js
nop
or
dec
jle
mov
push
push
outsl
mov
adc
call
adc
xchg
out
mov
pop
rorb
mov
mov
mov
xchg
je
addb
dec
add
adc
add
cmpl
dec
jno
icebp
lea
divl
mov
loope
sti
and
mov
xchg
xchg
fsubrs
repnz
or
or
sti
xchg
icebp
cmp
mov
ret
pop
loop
push
inc
test
sub
rcll
cmpsl
xor
sbb
fisttpl
sub
loope
cwtl
daa
jmp
mov
sbb
iret
xchg
jecxz
mov
pop
and
mov
mov
or
push
mov
sbb
and
mov
pop
movsb
xchg
push
lds
scas
add
dec
addr16
loop
fsub
cmc
mov
sarb
push
dec
ja
fs
push
daa
dec
xchg
jecxz
outsl
out
loope
sbb
push
std
mov
fdivr
and
pop
mov
mov
sar
or
int
pop
pop
pushf
jb
or
cmc
pop
popf
pop
mov
repnz
jmp
pusha
or
xlat
lcall
arpl
subb
aaa
mov
jle
cmpl
or
xor
insb
sub
pop
mov
and
jg
sbb
add
mov
and
jns
jae
test
jmp
lds
mov
adc
jae
lock
dec
out
push
lock
andb
in
mov
test
mov
lea
jmp
cs
pop
loope
mov
movsl
js
lcall
xchg
loop
pop
xor
popa
sub
jne
insb
and
cs
in
cmp
sub
or
fisubrs
dec
enter
imul
jne
mov
lcall
jecxz
mov
xchg
push
cmpsb
shll
test
jmp
jnp
mov
fsubs
adc
push
dec
pop
repnz
jecxz
aaa
data16
mov
jno
cmp
inc
jl
xchg
mov
push
dec
cmp
pop
mov
lods
add
jne
inc
cld
add
in
cwtl
jno
dec
fwait
adc
push
jle
adc
push
sub
jecxz
jp
daa
sub
xchg
gs
mov
add
mov
jge
pop
lahf
inc
mov
in
ljmp
mov
mov
add
rcrl
stc
xlat
lods
adc
dec
or
test
inc
mov
sbb
xor
iret
inc
outsb
pushf
cmp
jmp
iret
cmp
cmp
sbb
mov
mov
jns
subb
ss
pop
push
das
aas
adc
inc
sub
jo
adc
cli
cltd
sbb
stos
scas
xor
cmp
je
and
imul
icebp
aad
mov
call
jo
push
mov
imul
fucomp
cwtl
shrb
sub
and
mov
pop
hlt
fwait
mov
lds
fwait
xor
mov
push
out
dec
mov
sbb
fdiv
add
sub
daa
sbb
xchg
lret
xor
fcomip
and
mov
lods
dec
ret
xchg
iret
insl
inc
jecxz
push
pusha
mov
or
out
xchg
lret
cmp
mov
push
loope
push
jmp
fcomps
test
scas
cmp
or
pop
push
subb
es
xchg
xchg
inc
subl
fcomps
add
xchg
dec
push
sbb
movsb
xor
or
data16
jl
nop
jmp
push
sub
jle
lock
aam
fcmove
leave
cmp
clc
repnz
push
push
insb
mov
scas
or
jle
ja
cmp
enter
loop
jns
or
bound
mov
ret
rolb
lret
aam
mov
out
push
movsl
xchg
xchg
es
mov
outsb
daa
hlt
or
mov
dec
mov
mov
popf
mov
cmp
shlb
orl
ret
test
add
ret
jmp
ja
jg
sbb
xchg
or
and
addr16
pop
cmc
lahf
push
mov
jae
xchg
lods
jb
movsb
xor
ja
ds
dec
xchg
dec
xchg
rclb
lock
push
ret
andl
pop
repnz
ret
xor
sti
dec
inc
faddp
cmpsl
push
pusha
cmc
xor
sbb
mov
outsb
scas
xchg
fstpt
imul
das
fcmovb
leave
std
ret
mov
lahf
ds
xchg
mov
insb
push
dec
inc
adc
fdivl
ja
push
shr
loopne
clc
das
repz
dec
daa
fmull
int3
xchg
into
mov
jg
mov
pop
jb
push
js
cmc
stos
mov
push
mov
out
mov
loop
xor
gs
xor
jb
or
jp
inc
jns
and
mov
sbb
or
xchg
aad
cs
int3
pop
jmp
jge
inc
nop
out
add
mov
lock
mov
xchg
fdivs
add
clc
pushf
test
pop
ja
mov
in
xchg
mov
pop
adcl
cld
test
das
mov
cmp
lods
sbb
das
xor
dec
mov
push
pop
lods
mov
movsb
lret
das
xchg
lock
sbb
xor
into
mov
inc
ret
adc
iret
fisttpl
xor
mov
sbb
sub
cld
jle
shlb
or
or
jno
sahf
and
clc
mov
inc
hlt
cmp
dec
or
nop
dec
in
test
in
aad
mov
mov
push
loopne
lahf
aas
mov
dec
aaa
lods
pop
fs
lret
scas
sarb
std
imulb
inc
xor
mov
sub
rol
jo
dec
mov
jb
xchg
cltd
add
rol
push
repnz
inc
pop
lahf
cmc
mov
call
cmp
dec
mov
adc
push
ja
sub
cmc
insb
and
mov
push
test
mov
cs
cs
sahf
push
jnp
pushf
mov
push
les
xor
cld
repz
mov
rcll
lock
inc
sti
loope
loope
incl
mov
mov
daa
fcomip
xchg
loopne
es
mov
popa
inc
inc
or
push
cs
retw
pop
in
jp
rcr
int3
jecxz
orl
test
pop
daa
or
sbb
ficoms
scas
out
inc
daa
mov
jns
dec
mov
test
loopne
gs
mov
sub
adcl
or
sub
mov
and
sub
pop
ds
mov
andb
sub
xor
pop
ljmp
mov
dec
xchg
std
loop
andb
adc
inc
mov
cmp
or
mov
stos
jp
imul
jnp
hlt
and
pop
not
xor
test
and
jge
outsb
xchg
mov
shl
cmp
or
xor
sub
out
ljmp
lret
stos
pop
imul
jmp
imul
sub
cmp
cmp
test
jge
stos
xchg
sbbl
icebp
sub
lcall
stos
push
mov
push
fildl
scas
cmpsb
enter
inc
cmp
cmp
jbe
xchg
adc
lahf
mov
js
out
dec
mov
jno
mov
out
aaa
in
sbb
push
mov
iret
and
push
pop
stos
gs
sbb
imul
in
push
in
stc
mov
andb
push
cwtl
cs
clc
sub
and
sub
in
pop
dec
lds
cltd
int3
sbb
pop
js
lret
movl
inc
mov
sub
add
sub
scas
popl
push
in
dec
mov
mov
cmp
js
add
pop
rclb
xor
add
in
ret
adc
xor
aam
mov
inc
jg
xlat
es
fcompl
imul
jno
adc
or
pop
data16
adc
out
mov
push
dec
dec
push
or
push
pushf
adc
mov
cmp
insl
lock
cmp
addr16
mov
lods
and
arpl
jnp
jge
mov
imul
add
cld
dec
cwtl
pop
arpl
and
mov
push
in
mov
sahf
jecxz
jl
scas
sbb
jno
insb
and
xor
in
in
das
mov
jge
mov
rcrl
fldl
adc
lods
mov
mov
sbb
hlt
xchg
or
sahf
sarl
dec
push
pop
pop
jl
pop
push
add
sub
dec
push
test
push
dec
lret
xor
int3
aas
lock
mov
jl
fbld
std
jmp
bound
xchg
jp
loopne
into
xor
or
mov
ja
movsl
lahf
in
cld
mov
mov
inc
push
pop
scas
mov
push
pushf
xchg
iret
pop
jl
xor
iret
je
push
scas
mov
inc
enter
mov
clc
in
mov
out
jbe
dec
adc
mov
js
outsl
dec
sar
cmp
jmp
cmp
movsb
inc
in
mov
pop
clc
inc
leave
inc
add
mov
mov
pop
mov
jae
mov
mov
in
or
dec
loope
iret
pusha
mov
cmp
out
sti
aas
cli
das
call
fnop
adc
jle
cmp
sbbl
ret
in
cmp
adc
mov
cmp
leave
pop
lods
fidivl
push
sub
stos
pushf
mov
int
hlt
inc
fildll
inc
pusha
cmpl
insb
das
xor
lcall
in
in
lret
fucomip
adc
shll
into
inc
sbb
dec
cmp
lret
mov
xor
loope
ds
outsb
pushf
dec
push
fists
jne
jnp
add
cltd
insb
ljmp
test
sbb
push
push
in
pop
in
aam
add
insb
dec
icebp
cmc
jp
int3
pop
mov
test
mov
addr16
pop
rclb
outsb
cmp
adc
loope
mov
pop
scas
push
mov
cmpsl
sub
xchg
adc
sbb
mov
or
icebp
add
xchg
ret
jmp
aad
xor
out
inc
jbe
stos
jmp
xchg
cmp
inc
xchg
idivl
fdivs
push
fs
jmp
movb
out
ljmp
aad
aas
data16
outsl
aaa
or
test
call
pop
in
outsl
push
dec
mov
mov
cmp
cmp
or
stos
out
push
in
icebp
mov
insl
xor
inc
inc
mov
inc
sub
jg
pop
push
and
and
loopne
dec
inc
jl
add
lock
dec
pop
add
enter
movsl
int3
adc
nop
scas
xor
jbe
jo
scas
or
outsl
cmpsl
cltd
pop
icebp
mov
inc
jns
int
inc
icebp
mov
ja
out
fimuls
rcrb
cmc
push
enter
fnstcw
mov
fcompl
mov
leave
ss
sbb
and
pop
adc
sub
sub
push
insb
stos
sub
sbb
or
pop
dec
add
mov
cmp
sub
mov
popa
inc
fwait
aam
fsubr
jecxz
and
or
dec
stos
cmpl
push
inc
dec
push
adc
leave
stos
push
hlt
movsb
clc
daa
aas
dec
movsb
imul
lahf
pop
cs
ret
fsubp
fsubl
bound
notb
dec
ljmp
or
add
hlt
stos
push
add
insb
xchg
outsb
mov
mov
jns
movsb
pop
ja
or
fs
pusha
lock
shll
mov
xchg
jns
push
adc
aad
outsl
push
in
roll
daa
sub
in
jae
orl
fld
test
enter
push
or
enter
push
push
mov
out
lret
lock
out
clc
pop
pusha
push
insl
rolb
and
pushf
dec
arpl
xor
incl
arpl
repz
xchg
ja
repz
cmp
lret
mov
xor
loopne
jb
daa
adc
and
orl
fisubl
jmp
adc
sbb
out
jo
mov
test
inc
outsb
or
or
fucom
mov
das
push
loope
outsl
icebp
mov
aaa
movsb
sub
test
aam
aas
pop
lods
and
jo
adc
in
sub
mov
bts
or
loope
rcrb
pushf
push
xchg
les
inc
push
mov
jmp
pop
shlb
mov
xor
andb
push
pop
addr16
and
loopne
lret
jmp
xor
xor
or
xchg
and
jnp
ja
ss
sar
fmuls
jecxz
addr16
insl
jg
lds
and
std
ja
xchg
shl
pop
mov
popf
pop
mov
fiadds
jmp
pop
sbb
mov
lret
rcrl
leave
inc
ja
jne
aad
mov
dec
jmp
mov
imul
jmpw
jb
loope
xchg
mov
xorl
mov
xchg
fprem1
js
cmp
in
dec
xchg
outsl
call
adc
or
ljmp
inc
test
add
dec
jbe
mov
jae
jl
lcall
jg
lcall
shlb
ret
sarb
popa
mov
mov
jmp
add
fcoml
jnp
aaa
nop
cs
push
xor
pop
add
jae
adc
jle
outsl
push
dec
and
scas
in
push
xor
add
mov
push
hlt
imul
in
push
ds
bound
cmp
pop
sub
ss
pop
cmp
sbb
jb
adc
inc
adc
or
cmpsl
inc
stos
in
mov
mov
jle
sbbl
xchg
test
cltd
mov
mov
mov
add
jecxz
rclb
repnz
sbb
xchg
sub
and
addr16
orb
gs
sahf
cmpsb
jo
adc
push
or
in
orb
inc
in
mov
ret
push
fdecstp
mov
mov
insb
mov
xorl
sti
sub
inc
jmp
ja
inc
test
inc
mov
nop
pop
notl
mov
lea
mov
inc
xor
pushf
xor
sub
push
jno
xor
ficompl
jge
imul
shl
pushf
adc
adc
aaa
in
bound
fwait
mov
push
loope
or
sti
in
mov
mov
out
cwtl
inc
dec
imul
xlat
sub
and
cmp
imul
push
sub
or
call
pop
cmp
push
pop
iret
mov
sub
mov
mov
jmp
mov
add
mov
cmpsl
mov
sub
icebp
icebp
in
cmp
push
jnp
jns
gs
cmc
sub
testb
xor
ret
dec
popf
outsb
mov
and
inc
enter
dec
pop
gs
out
cld
jg
inc
mov
mov
hlt
repz
pop
mov
je
adc
sub
sbb
mov
out
adc
xor
pop
arpl
leave
cmc
inc
pop
add
dec
loopne
rclb
insb
mov
ret
fmul
add
pop
loop
stc
pop
int
xlat
mov
sbb
stos
repnz
stos
cmp
lods
into
filds
xchg
or
popa
xor
push
iret
arpl
inc
inc
sub
cmp
dec
int3
inc
inc
mov
sbb
rcrl
loopne
stos
test
or
popf
out
orb
lahf
inc
mov
call
scas
jg
call
xchg
cmpsb
xor
push
out
repz
push
repz
jae
sahf
std
dec
pop
push
dec
jne
fwait
mov
and
jge
jmp
push
inc
test
jbe
xor
addl
je
dec
out
mov
in
mov
out
mov
inc
mov
hlt
pop
or
push
mov
in
pop
mov
adc
fstl
push
cmpsb
push
inc
mov
insb
dec
and
inc
mov
adcb
inc
push
cmp
add
fcoml
xor
push
xor
and
jns
loope
cld
cmpsl
jecxz
mov
ss
fs
cwtl
lock
insl
pop
cmp
popa
test
mov
cmpsl
inc
add
pop
cld
mov
inc
movsb
xor
call
insl
mov
add
sbb
xor
mov
loop
lea
push
dec
enter
mov
push
pop
scas
sub
call
lahf
out
aam
sub
hlt
cmp
stc
jae
add
push
and
ja
cs
ror
scas
push
adcb
shlb
mov
sbb
ret
testb
cli
xchg
fcoms
pushf
mov
xlat
in
dec
daa
orb
out
out
sub
stos
inc
push
mov
rcrb
pop
sub
aam
lret
dec
xlat
shr
addr16
imul
loop
jae
js
inc
daa
add
leave
in
xchg
xor
hlt
add
mov
adc
mov
mov
loop
stos
insl
sub
ljmp
dec
sbb
addr16
dec
fnstcw
push
scas
imul
shlb
lock
int3
add
sbb
mov
cmpsb
lods
add
jp
mov
inc
imul
mov
or
mov
xor
cmp
xor
pop
mov
add
pop
sbb
dec
dec
aaa
movsl
pop
js
ljmp
hlt
xchg
stc
lods
outsl
test
sub
shrl
insl
xor
dec
testl
testb
insl
mov
xor
imul
add
out
movb
js
ret
inc
sub
leave
sbb
scas
mov
and
or
sbb
cmp
add
pop
mov
xor
repnz
mov
inc
sti
sbb
loope
sbb
mov
sub
aas
das
pop
dec
in
pop
sub
shll
mov
daa
mov
imul
pop
out
jnp
mov
fildl
mov
cld
push
add
jae
pop
daa
leave
je
mov
jle
mov
sbb
test
mov
mov
in
rcll
lods
push
pop
cmp
ss
mov
inc
repz
mov
jmp
in
test
pop
outsl
dec
sub
pop
push
aas
sbb
mov
ret
scas
stos
xchg
inc
jno
into
jno
cmc
lock
subb
lods
lret
mov
aas
sarl
sbb
ja
xor
mov
inc
and
mov
adc
adc
or
das
adc
mov
sub
pop
inc
sub
ljmp
inc
imul
ss
in
aas
and
jbe
mov
mov
faddp
leave
mov
and
in
dec
add
mov
icebp
xchg
cltd
inc
loope
aas
cmp
dec
rolb
lret
jecxz
rorb
repnz
mov
mov
movsb
stc
fldt
xor
sbbl
add
and
mov
cmp
cmc
hlt
leave
sahf
jns
jmp
aas
push
jge
rcll
pop
popa
sar
or
mov
pop
aad
mov
hlt
jb
ljmp
aas
lret
inc
insl
jbe
or
adc
nop
jle
nop
xchg
jo
push
enter
lods
pop
adc
jmp
mov
es
pop
fisubrs
inc
lret
aaa
add
ret
je
in
sub
pop
leave
push
icebp
mov
roll
mov
jle
sub
lods
mov
mov
movsb
aad
icebp
cmp
incb
dec
mov
push
pop
sub
lret
jns
xor
xor
cltd
adc
xorl
adc
sti
push
mov
mov
call
xchg
adc
jg
sarl
lcall
xchg
cmpsb
cmp
es
imul
dec
and
sub
sti
mov
mov
xchg
loopne
jns
lret
bound
jno
xchg
sti
xchg
add
pop
fnstsw
out
jmp
flds
hlt
mov
call
inc
fstpt
dec
lahf
push
mov
jecxz
sub
or
sbb
lods
imul
insb
repz
ret
mov
scas
sub
ret
pop
mov
movsb
shrb
ss
push
jp
mull
xchg
cmpsb
sub
fwait
mov
xchg
push
out
popa
push
gs
ficomps
adc
fisttps
dec
dec
ficoms
shll
std
sbb
xlat
pop
test
pop
lcall
xchg
arpl
xor
insb
jno
lcall
scas
mov
daa
inc
int3
and
call
addr16
dec
sbbb
pop
add
mov
mov
sub
loopne
xchg
adc
add
and
aam
xchg
sti
movsl
dec
les
cmpsl
call
imul
ret
shlb
lahf
fcompl
sahf
cmp
mov
js
and
push
cmp
mov
jmp
mov
jmp
int
adc
mov
bound
dec
xchg
shlb
popf
sbbl
std
adc
sarl
xchg
xchg
fcmovnb
dec
lods
xchg
jo
aaa
inc
fidivrs
adc
or
rclb
in
rol
shrl
adc
push
stos
fnstsw
mov
push
add
mov
insl
xor
push
xor
outsl
pusha
xchg
mov
add
and
fisubrl
xor
xor
jae
push
mov
push
cmp
mov
fs
or
jg
mov
xchg
hlt
data16
cmpsb
pop
push
xchg
adc
cmp
mov
xchg
stos
and
cld
das
lret
and
inc
mov
fcompl
pop
xchg
mov
push
xchg
popf
incb
jmp
mov
cmp
sbb
dec
outsl
data16
call
lds
cmp
sbb
add
in
sub
test
adc
and
fptan
out
sub
scas
fcomi
jmp
inc
inc
sub
pop
sarl
dec
sub
fistpl
add
in
cs
fwait
pop
push
mov
xor
cmp
xor
lods
mov
in
pop
sbb
cmpsl
add
icebp
fnstcw
loopne
in
arpl
sub
and
pop
inc
popf
mov
shrb
shrl
mov
sub
adc
sub
repz
sbb
imul
adc
push
adc
dec
int3
or
shrl
mov
call
loope
mov
jp
iret
push
inc
daa
lods
and
aam
mov
divl
roll
add
pop
jmp
mov
sub
jo
int3
stos
pop
out
jns
sub
nop
fcomp
pushf
cmp
mov
pop
cmp
lret
lahf
outsb
dec
pop
dec
and
pop
mov
test
in
nop
leave
or
fidivl
mov
fwait
mov
xor
daa
sub
lods
xor
pop
lcall
mov
pcmpeqw
jbe
popa
mov
sar
xchg
jge
gs
xchg
or
and
xchg
pop
jnp
xor
cmp
mov
add
and
lcall
dec
and
pop
jle
fcoml
mov
dec
aaa
sub
das
outsl
jno
decb
xchg
sti
lods
push
mov
pop
scas
in
cmp
stc
jns
addr16
int
xchg
adc
mov
das
mov
dec
repnz
cmp
faddl
xchg
lcall
ror
push
sub
cwtl
and
aam
mov
adcb
jbe
rcrl
cmpsb
outsl
jbe
and
mov
test
dec
cli
leave
cld
push
aas
imul
mov
das
jmp
sti
pop
add
or
aaa
or
add
movsl
mov
nop
xor
jg
inc
cmp
and
pop
pop
inc
sbb
dec
imul
xor
mov
lock
cmc
push
ds
xchg
xor
lcall
mov
lret
iret
sub
xor
into
test
add
mov
xlat
repz
nop
fdivp
andl
sub
and
lret
xchg
xchg
test
inc
out
cs
inc
xor
jle
lret
pop
mov
cmp
js
scas
out
cmp
dec
out
dec
cld
js
addl
dec
mov
and
movsl
sub
cltd
fsubrp
call
mov
ja
cs
push
hlt
pop
or
sub
lahf
test
gs
ljmp
mov
inc
mov
pop
mov
mov
xchg
xor
pushf
xchg
mov
ud2
enter
xchg
inc
adc
jnp
in
dec
and
test
pop
push
mov
int3
mov
mov
add
call
push
sti
pop
scas
jmp
in
out
jecxz
lahf
add
sbb
jmp
mov
xor
pushf
shlb
pop
pop
outsb
lret
mov
data16
js
inc
adc
jg
fistl
scas
cmp
ret
push
pop
jmp
lds
insb
sti
pop
adc
cwtl
lock
sub
sahf
ljmp
mov
je
mov
test
lods
and
shlb
mov
sbb
fimull
outsl
and
and
gs
push
cld
lahf
stos
ret
data16
rclb
mov
mov
xchg
push
pop
in
cld
test
xchg
icebp
and
jg
fs
mov
dec
loopne
in
xor
pop
or
movsb
and
and
jecxz
es
jle
rcrb
jmp
cmpsb
in
mov
inc
pushf
enter
mov
jmp
mov
mov
cmp
out
xchg
adc
lds
stos
loopne
and
popa
push
add
mov
push
int
lods
addb
mov
ds
dec
shll
xchg
sub
cmp
fnstsw
mov
out
imulb
hlt
inc
imul
xchg
sbb
pop
outsb
adc
inc
out
lcall
out
mov
lea
rcr
cli
xchg
inc
push
leave
mov
add
es
leave
clc
adc
testl
test
js
mov
or
pop
cmpsb
rorb
sub
mov
loope
ficomps
sti
aad
adc
in
add
das
cmc
imul
in
mov
fs
ljmp
insl
cli
icebp
dec
mov
into
mov
lds
fcom
sarb
out
adc
add
inc
test
in
add
inc
popa
cmp
jg
scas
mov
xor
popa
scas
jb
pop
dec
insb
fnstsw
adc
lock
push
xchg
dec
and
sarl
jp
mov
ss
imul
jnp
push
xor
inc
xchg
cmpsb
push
xchg
sub
cmp
add
cmp
ret
ljmp
in
int3
cmp
pop
fsub
loope
dec
cld
cltd
sub
add
mov
stc
rorb
inc
das
je
or
add
or
icebp
mov
test
bound
jns
insb
dec
lods
mov
xor
push
or
mov
je
xor
int
mov
rorb
xchg
xchg
popf
rorb
xchg
pusha
lea
or
mov
dec
shlb
and
jns
aam
test
mov
adc
outsb
fwait
outsb
lea
movsb
sbb
mov
cli
inc
and
xor
mov
mov
xor
pop
xchg
xor
add
add
stos
mov
daa
out
mov
sbb
jl
jns
push
xor
arpl
imul
cli
arpl
sbb
sub
test
cmpsb
pop
sbb
cmpsl
lds
push
jle
or
lods
sbb
inc
xchg
jmp
add
imul
pop
sub
out
mov
std
incl
mov
ds
mov
mov
jbe
addb
push
fcompl
and
mov
jnp
lahf
es
sbb
sarl
frstor
pop
imul
insl
test
sbb
lret
repnz
xchg
cmp
jmp
add
sub
jle
cli
lock
mov
int
imul
sub
adc
inc
xor
sub
popa
movsb
mov
or
xchg
out
mov
aas
in
paddsb
xchg
call
cmp
or
cmp
push
cltd
cmp
mov
testl
cmc
push
mov
test
fs
xchg
jb
stc
arpl
fsubrs
adc
push
xchg
cmc
mov
pop
cmp
pop
lret
push
dec
divb
jae
lods
push
fs
mov
aam
int
popa
stc
imul
jecxz
pushf
cmp
inc
dec
mov
push
inc
arpl
dec
cmp
js
shlb
xchg
xor
mov
inc
push
xchg
xchg
insl
push
std
cli
pop
cmp
inc
adc
push
ss
xor
jns
cmp
xor
xlat
cmc
test
pop
sbb
js
mov
inc
fdiv
dec
mov
sub
mov
into
shll
pop
into
dec
push
les
lret
mov
int3
loope
js
es
in
push
loop
mov
mov
push
test
roll
sbb
xchg
xchg
mov
imul
outsl
sbb
push
stos
inc
pushf
sti
mov
jnp
adc
mov
movsb
xor
ljmp
in
sti
xchg
fs
stos
jbe
mov
sti
mov
lea
dec
mov
andl
ljmp
and
shl
stc
pop
add
jp
cmp
pop
mov
jg
rclb
dec
fistpl
sbb
cmp
ljmp
shll
ljmp
lcall
out
jns
sbbb
mov
insb
aas
lock
xchg
in
push
or
add
movsl
lds
fsubs
sti
sti
in
and
push
pop
popa
rcrb
in
sub
mov
jmp
sub
inc
mov
notb
push
scas
mov
mov
gs
rcll
xor
mov
loope
in
pop
sbb
aaa
lahf
aad
sbb
adc
xor
bound
lods
sarl
mov
loope
xor
xchg
andl
xchg
push
out
out
out
xor
jae
jae
push
and
shrb
jb
xchg
jbe
xor
mov
faddl
mov
dec
mov
shll
jl
ret
jl
or
jns
cwtl
ljmp
ret
mov
push
sbb
cmpsl
sub
jo
pop
mov
pushf
mov
jg
and
push
ljmp
btr
adc
dec
cmpsb
jae
dec
mov
ja
push
mov
pop
std
push
xchg
punpckldq
mov
push
jno
pop
jg
mov
cs
inc
push
out
and
scas
pop
cmp
push
add
mov
fistl
mov
mov
test
repnz
lret
sbb
xlat
push
add
adc
int3
and
push
in
inc
add
fstps
add
cltd
push
sbb
dec
push
push
mov
xor
jmp
stc
xchg
push
stc
jae
mov
jg
push
lcall
sub
jle
addr16
aam
bound
cmc
xor
ret
lds
mov
icebp
mov
jp
xchg
add
xchg
stos
dec
pop
outsl
clc
lock
jbe
push
pop
or
jns
ret
ret
movsb
sbb
test
loope
lret
stos
in
mov
scas
push
stc
mov
jmp
loop
mov
xor
dec
push
jb
stos
xchg
push
dec
arpl
out
outsl
mov
jns
inc
test
js
jge
stos
negl
add
out
inc
xchg
pop
das
sub
jbe
cwtl
incb
ss
sahf
clc
loope
or
hlt
and
jns
mov
aas
fsubr
or
sub
clc
xor
fwait
shl
adc
jle
pushl
sarl
notb
repz
movsl
movsl
dec
push
adc
jmpw
shlb
jecxz
call
scas
mov
scas
xor
jns
outsl
sub
push
movsl
out
mov
xor
push
lahf
fnstsw
in
mov
mov
fwait
dec
insb
loopne
les
rolb
cld
ror
pushf
repz
xchg
xor
nop
popa
xor
fdivl
fdivl
mov
fimull
push
push
inc
popa
out
rolb
ret
mov
xchg
jl
stos
xchg
adc
jg
xchg
sqrtps
cmp
sbb
imul
push
les
lds
fsubs
dec
lea
jae
rclb
lock
call
mov
xchg
test
xor
push
inc
pop
mov
inc
push
jbe
fwait
ljmp
je
arpl
fcomps
fisubs
es
push
hlt
aaa
in
adc
mov
dec
push
xor
add
in
mov
or
cs
or
mov
je
cmp
fcomip
xor
push
hlt
sub
sbb
xchg
xor
stc
add
mov
xchg
repz
into
sub
pop
mov
push
mov
shll
mov
jmp
xor
test
or
call
out
xor
add
push
add
test
cltd
dec
scas
out
add
and
adc
shrb
xchg
ret
arpl
shll
in
int3
pop
daa
jns
out
add
jp
int3
fucomp
loop
daa
out
cltd
sub
fisubs
or
ret
fildll
addl
jmp
add
pusha
enter
imulb
push
gs
popa
loop
sbb
adc
andl
cltd
mov
imul
repnz
push
aam
add
fldenv
in
cli
mov
push
out
push
fs
data16
cmp
and
jge
incl
dec
pop
sbb
lahf
pushf
lret
ljmp
jno
notb
inc
rol
lds
movb
pop
adc
fstps
lcall
iret
mov
cmp
add
sahf
and
sbb
push
xchg
ja
jo
orb
and
sbb
sti
out
scas
fwait
and
add
lds
into
hlt
and
mov
cmp
ror
dec
in
or
and
sti
cwtl
inc
and
pop
mov
shll
cmp
lods
mov
add
std
xorb
popf
shl
lahf
shrd
jl
scas
outsl
pop
repnz
xor
lahf
stc
sbbl
sbb
ret
into
pop
lea
dec
in
negb
pop
and
arpl
mov
loopne
ret
adc
out
ja
cmpsl
enter
or
insb
outsl
dec
pop
sti
stos
mov
test
pop
cmp
sub
inc
in
sbb
jge
and
stos
and
adc
or
test
cmpsb
or
aaa
scas
js
cmpsb
notb
or
popa
push
sahf
enter
inc
lcall
fbld
xor
inc
and
pop
push
push
mov
mov
fcompl
inc
negl
adc
push
outsl
or
push
pop
pop
push
dec
movsb
outsl
xor
xchg
clc
aam
int3
mov
fbld
xchg
inc
adc
int
scas
gs
imul
sub
inc
mov
fadd
rcrl
mov
push
insb
lea
popl
cmp
mov
cmovns
hlt
imul
sbb
adc
fisttps
pop
sub
cmpsb
test
call
cmpsb
enter
pop
mov
loop
cmp
fwait
pop
jns
stos
add
loopne
clc
cmpsl
arpl
rolb
lds
repz
andl
out
mov
clc
mov
rcll
jne
scas
subl
es
insb
xchg
mov
lret
lahf
out
imul
pop
jl
xor
dec
xchg
jecxz
xchg
lret
ret
mov
jae
cli
sahf
lea
rorl
jg
pushf
push
add
popa
mov
pop
lods
icebp
and
mov
loop
or
sub
rcrl
xchg
fsts
lcall
mov
dec
cmp
mov
out
cmc
popf
push
and
je
sub
mov
das
sbb
xchg
mov
jno
in
fyl2x
lret
ljmp
out
mov
out
pmuludq
jo
test
sbb
je,pn
cmpsl
rcrl
cmpsb
push
lret
pop
push
mov
push
and
adc
xor
shll
ljmp
xor
std
add
mov
movsl
je
fnstsw
jb
pop
int3
adc
mul
ss
mov
lret
lcall
mov
fs
add
into
dec
adc
cmp
sub
sub
sbb
das
or
pusha
inc
out
mov
stc
cwtl
push
mov
jmp
xchg
jmp
xor
xor
fcmove
in
cs
cmpsl
mov
mov
outsb
ret
or
jge
in
shl
lock
rol
pop
sbb
dec
mov
loop
xor
dec
sbb
in
arpl
xchg
cmc
shlb
or
cltd
fildl
fwait
mov
stc
mov
stos
jecxz
sbb
jle
mov
xchg
mov
push
and
adc
mov
sub
sub
aas
lock
inc
into
out
add
cmp
push
xor
fwait
mov
xchg
sbb
push
push
jae
dec
mov
pushl
xchg
jge
dec
js
ficoms
inc
pop
pop
sub
or
or
or
fwait
icebp
loopne
pop
imull
in
lea
je
and
enter
sti
lcall
stos
call
push
xchg
fcoml
push
push
or
pop
pop
inc
xor
das
mov
mov
out
mov
in
nop
inc
jae
sub
adc
or
push
dec
push
cmp
adc
jmp
push
arpl
jle
jae
pop
fsubrp
mov
xchg
inc
imul
jp
pushf
add
mov
test
movsb
imul
sbb
and
xchg
shl
add
push
push
roll
fimuls
idivl
cmpl
rorl
nop
mov
inc
add
cmp
push
nop
std
mov
dec
int
cmp
loopne
cmp
push
pop
das
popfw
sub
adc
fistpll
mov
lret
mov
loope
adc
inc
sahf
dec
cmp
mov
sub
lods
ficoml
movsb
orl
xor
pop
mov
in
mov
icebp
insb
std
into
sub
adc
jg
arpl
sbb
add
loop
xchg
jge
cmp
sub
sti
cmpsl
fisttpll
dec
dec
jno
cmp
insb
lock
rcrb
pop
adc
sub
push
mov
sbb
shlb
xor
push
std
cmpsl
cltd
notb
jecxz,pn
pushf
pushf
stos
leave
movsl
test
sbb
sbb
add
fwait
xor
lock
aas
pop
or
jge
test
movsb
cltd
repz
fs
inc
jae
sbb
repz
jmp
stos
dec
mov
std
add
imul
ret
push
nop
xchg
and
xchg
cmc
sbb
and
xor
imul
call
mov
add
int
push
push
lds
fcomp
adc
pop
cmp
clc
aam
mov
lods
dec
add
mov
mov
adc
mov
ret
jb
rcl
mov
ficompl
push
cmp
repnz
out
cli
in
cmp
and
loope
and
push
nop
rolb
out
ja
data16
mov
pop
aam
lret
pop
jl
inc
imul
adc
pop
cmpsb
outsl
push
aas
sahf
mov
jle
xchg
int
xchg
subb
mov
add
std
mov
leave
sbb
or
jg
xchg
leave
jl
push
jbe
out
stc
and
imul
ja
lcall
mov
popf
jmp
jp
cmp
imul
pop
jae
lahf
xor
or
cmp
addr16
xlat
inc
test
gs
jnp
pop
dec
jbe
out
dec
xor
in
xchg
jg
push
loopne
and
fldenv
fiadds
in
push
fisttps
add
out
stos
insb
pop
test
in
push
and
sbb
iret
and
push
dec
xchg
mov
insl
addl
aad
adc
xor
fs
outsl
fldl
xchg
xchg
or
sbb
mov
ficomps
mov
lds
add
mov
out
xor
jg
add
daa
shlb
and
hlt
add
pop
in
int
inc
jg
imul
jl
sub
mov
ds
pop
pop
mov
xor
push
das
mov
popa
iret
and
cli
cli
push
fisubrs
mov
icebp
jecxz
mov
stc
fidivl
mov
and
sub
mov
inc
cmp
jbe
and
cs
push
mov
jns
jo
subl
inc
cmpl
outsb
ss
scas
jp
mov
or
subl
test
mov
jns
int3
hlt
out
daa
pop
shlb
and
push
popf
fs
lods
ljmp
dec
sarb
cmc
xor
dec
mov
jne
rcll
adcl
sbb
int
fs
and
hlt
cmpsb
lret
das
lcall
fwait
xor
std
mov
std
dec
andb
mov
inc
xor
loop
push
jmp
sbb
jnp
loop
dec
mov
mov
imul
jnp
inc
dec
adc
loop
pop
fwait
cmp
pop
cmc
adc
nop
aas
aad
push
pop
int
jl
cmp
mov
cs
jecxz
lods
pop
or
mov
mov
dec
inc
clc
adc
addr16
mov
mov
andl
add
faddp
xchg
jge
dec
jg
jl
xor
cmp
fadds
adc
movsb
inc
lret
pushl
fdiv
add
dec
loop
mov
dec
cmp
js
or
stc
popf
pop
lahf
sbb
push
mov
push
fildll
lds
mov
subl
clc
pop
cmp
arpl
imul
and
push
cmp
addr16
fcom
jae
mov
aaa
xchg
jecxz
sahf
xchg
or
stc
push
into
movsb
and
pop
ret
adc
fbstp
sub
test
imul
jge
movsb
movsb
push
jns
roll
inc
leave
aaa
mov
repz
or
dec
gs
repnz
sub
cmp
push
push
dec
add
jle
push
mov
pusha
mov
addl
xor
cltd
fld
pop
mov
mov
sbb
cmpsb
add
repz
sub
stos
dec
xchg
mov
lock
inc
je
xor
xchg
mov
push
cmp
fisttpl
inc
lods
lods
sbb
xor
add
imul
fwait
cmpsb
jno
xor
mov
in
addr16
sub
insl
add
inc
adc
xlat
test
les
rclb
inc
bound
ret
test
add
jge
and
inc
fisubrs
shl
mov
outsb
popa
movsb
and
stc
testb
and
fidivs
lret
adc
lcall
loope
ljmp
out
mov
mov
mov
mov
push
icebp
clc
addr16
mov
xor
sahf
mov
data16
shl
stos
sub
call
insb
xchg
cmc
lea
lods
jns
xchg
jbe
dec
mov
dec
mov
add
cmp
std
or
adc
scas
out
dec
imul
push
adc
pop
xchg
sub
inc
push
cltd
push
popf
pushf
inc
pop
and
xchg
out
ja
test
ljmp
shl
mov
mov
jmp
jmp
adc
adc
adc
movsb
icebp
and
leave
test
push
repnz
imul
sub
pop
inc
xchg
int3
xchg
xor
ljmp
jl
insl
in
insl
mov
mov
lret
aad
std
mov
popa
stos
call
fnsave
out
data16
push
adc
jmp
daa
inc
xlat
arpl
fwait
rolb
pop
stc
lret
cmc
loopne
xor
faddp
mov
push
xchg
in
rorb
in
leave
std
push
mov
push
es
fs
xor
pop
and
stos
cmc
popf
mov
add
insl
rcl
gs
mov
mov
lea
cmp
push
sub
icebp
rorb
inc
outsb
adc
rcr
or
mov
stos
mov
mov
dec
sub
imulb
shl
and
cs
fdivl
dec
mov
imul
ret
add
iret
push
lahf
and
loope
mov
and
or
adcb
clc
cmpsl
xchg
lcall
pop
pop
and
push
movsl
jle
lret
mov
cmc
xor
jbe
ja
cltd
jecxz
adc
popa
cmc
repnz
jg
mov
ljmp
fistl
pop
sbb
aad
arpl
outsl
int
xor
pop
cmp
daa
mov
and
mov
mov
rorb
dec
mov
popf
lods
out
pop
add
movsl
inc
mov
icebp
outsb
daa
gs
aad
pushf
call
inc
adc
and
or
or
adc
push
xchg
mov
push
xor
push
pop
or
outsl
lds
lahf
jne
mov
mov
call
fwait
inc
inc
push
imul
testl
add
mov
add
cmpsl
fld
pop
add
in
ss
test
les
push
ljmp
imul
adc
dec
xor
rol
jmp
lret
sahf
inc
mov
vrcpss
pusha
std
into
andb
inc
loope
icebp
push
outsb
mov
and
cmc
scas
and
fiadds
data16
sbb
jp
pop
xchg
inc
push
lock
mov
mov
push
rorl
push
icebp
sahf
and
aad
lea
daa
popa
scas
lock
test
adc
inc
xchg
inc
jae
xor
sbb
mov
cwtl
stc
sub
mov
fimull
fs
xchg
add
and
sub
mov
sti
out
xchg
xor
xorb
push
mov
scas
outsl
xor
xchg
into
into
sub
in
pop
add
sub
pop
iret
and
iret
push
cmpsl
out
out
inc
fisttpll
sti
sub
ds
push
rclb
sbb
jns
xchg
cs
push
fdivl
cmp
mov
pop
bound
das
pop
mov
loope
insb
testl
push
pusha
and
mov
inc
cmpsl
xchg
shll
sbb
pop
mov
sbb
mov
imul
jae
gs
movsb
dec
call
push
mov
push
filds
jmp
lahf
sbb
in
xcrypt-cbc
cmpsl
adc
jb
cs
shld
test
pusha
jg
sub
decb
or
ljmp
insl
xorl
es
ja
dec
mov
xor
mov
pop
or
mov
and
sbb
pop
fistps
mov
cld
push
addr16
into
cmpsb
xor
rcr
out
es
sbb
dec
enter
mov
filds
adc
fstps
ret
shll
iret
leave
data16
fdivl
scas
sub
imul
arpl
jbe
sub
inc
xor
mov
or
inc
xor
test
sbb
ss
in
jb
mov
jp
test
sbb
pop
in
jle
dec
movsl
push
cs
mov
cltd
jmp
mov
fs
mov
push
insb
mov
pop
dec
jg
insb
js
cwtl
fisttpl
xor
lock
lock
cli
or
sbb
stc
push
fldl
mov
cmpsb
sarb
sbb
jmp
mov
out
into
std
mov
mov
or
rorb
adc
loop
xlat
lcall
pop
outsl
adcb
pop
fcompl
stc
add
out
push
test
and
fmull
in
pop
dec
dec
in
fdivrl
clc
push
aam
pop
cmpb
test
daa
jle
popa
sub
pop
fmull
jle
in
loop
shll
mov
mov
push
cmp
xchg
add
jb
cmp
outsl
lods
dec
ss
test
fstl
xlat
push
in
dec
and
mov
jp
pop
mov
aaa
mov
jb
cmpsl
mov
cmp
xchg
movsb
push
sub
add
xchg
in
cmp
and
inc
mov
push
or
stos
push
jae
inc
gs
push
clc
sbb
sub
adc
mov
ss
push
orl
push
imul
dec
setle
cld
pop
or
je
dec
mov
push
xchg
mov
into
mov
int3
dec
push
ret
sar
fnsave
ss
imul
inc
lds
mov
jg
xor
fistpll
bound
xor
mov
xchg
movsl
mov
add
movsb
lahf
mov
shl
test
mov
imul
movsb
or
std
and
out
inc
in
mov
and
movsl
adc
clc
dec
push
jae
adc
xor
dec
or
ret
insl
push
mull
mov
filds
movsl
out
sarb
fcomip
fisubl
in
call
jne
pusha
pop
ds
cmp
mov
shrb
adcl
inc
push
jge
add
mov
push
add
int3
mov
pop
inc
fld
je
in
pop
push
push
push
addl
jge
push
adc
loop
mov
loopne
bound
repz
sbb
adc
xchg
xor
jp
or
cmp
or
iret
jge
and
push
xor
popf
pop
cmc
mov
sbb
push
mov
push
lds
inc
in
cmpsl
jmp
cmp
shrl
aas
movsb
jnp
cmp
mov
pop
adc
adc
outsb
sar
push
push
ljmp
data16
and
loop
xchg
dec
pushf
push
mov
loop
sbb
push
out
outsb
loope
xor
dec
pop
xchg
fwait
jg
rclb
mov
cmp
xlat
xor
adc
fst
jne
pop
pop
cs
outsl
dec
outsl
test
xchg
cmp
mov
push
rcrl
ret
clc
fucom
mov
and
push
lahf
add
mov
fists
adc
dec
add
jl
leave
pop
in
fisttps
rorl
in
aas
dec
out
lods
call
mov
lods
jb
jecxz
loope
lret
adc
js
sarl
xorb
sbb
pop
push
je
mov
jns
xor
stc
andl
pop
add
shrb
mov
imul
jno
pop
adc
pop
dec
outsl
aad
js
add
rorb
int3
test
adc
jle
sbb
push
into
jo
jmp
dec
aaa
xchg
movsl
inc
inc
xchg
ss
jnp
pop
add
pop
out
cs
pop
cmc
int
jge
sbb
mov
bndldx
inc
add
in
inc
inc
mov
jb
sbb
xor
es
fcmovbe
jo
ss
or
dec
jne
int3
jge
ja
mov
mov
xchg
mov
and
xor
outsb
mov
inc
insl
mov
nop
test
ds
shlb
out
push
nop
sbb
fidivs
adc
jg
nop
sbb
js
or
imul
gs
test
dec
rorl
js
les
or
add
daa
adc
mov
push
add
push
mul
mov
push
pop
jp
push
frstor
mov
add
mov
adc
hlt
test
test
decl
xor
hlt
pop
fstps
gs
jg
push
or
push
out
mov
sub
lahf
pop
mov
sahf
push
and
push
cmp
xchg
testl
sub
mov
ja
push
pop
add
sbb
mov
jb
sbb
test
enter
fildl
bound
das
daa
mov
stc
daa
loop
mov
pop
jnp
jge
pop
mov
and
inc
pop
cld
mov
loop
xor
mov
pop
xor
mov
adc
out
or
inc
add
xor
or
mov
inc
fimull
inc
fnsave
cmp
mov
icebp
iret
push
and
pop
jns
test
js
imul
or
pop
sub
inc
inc
and
cltd
dec
cmpsl
shll
mov
in
test
loope
sbb
inc
gs
in
xor
sbb
pop
out
and
std
cmp
jno
jbe
gs
aas
mov
ds
mov
int
inc
adc
xchg
shrl
push
loope
xor
enter
jbe
mov
push
xor
fs
out
call
jl
cmc
lret
jne
add
out
bound
push
rorl
jns
push
mov
pop
fnsave
gs
mov
adc
mov
jmp
ss
jge
adc
rcr
test
and
adc
loop
jp
lcall
outsb
out
pop
jb
mov
adc
insl
mov
fwait
inc
xor
gs
mul
mov
jne
jne
in
push
sbb
ficoms
adc
aaa
jle
and
js
mov
jmp
mov
push
lret
jo
aas
sbb
mov
loope
sbb
mov
les
xchg
cmp
inc
add
inc
pop
mov
pop
test
adc
or
or
inc
leave
inc
out
adcl
fidivrl
mov
fmull
stc
stc
lds
mov
in
idivb
lea
inc
sub
sbb
pushf
sti
sub
sbbb
jg
adc
xchg
mov
jb
mov
ljmp
push
mov
jnp
incl
cmpsl
sbb
push
test
mov
pop
fwait
jle
sub
stc
jecxz
add
jae
mov
pushf
pop
scas
cld
push
data16
outsl
mov
pop
dec
pop
mov
xor
aam
and
or
les
cmpsb
data16
dec
loope
add
ds
pop
sbb
test
int
xlat
in
dec
ficoms
mov
loope
inc
jae
sub
mov
mov
mov
ret
ljmp
dec
dec
push
sub
test
cmpsb
inc
sub
incl
dec
shrb
mov
test
rolb
sbb
pushl
lret
or
xorb
call
add
hlt
lcall
in
sub
or
push
lcall
imul
cmp
xor
dec
int
xchg
fwait
pop
imul
mov
mov
sbb
push
and
mov
mov
and
fdivl
mov
mov
pop
scas
push
lea
aaa
out
call
add
fdivrs
pop
test
pop
inc
mov
fs
push
aas
cmp
inc
cli
lock
xchg
cmpl
xchg
or
cmp
addr16
mov
mov
add
ret
inc
movsb
shrb
pop
icebp
xchg
push
cs
in
jns
xchg
pop
lahf
sbb
and
mov
cmc
imul
sbb
ficoms
movsl
es
or
push
pushf
mov
push
data16
outsl
std
adc
jl
loopne
jbe
pushf
fsubrl
pop
mov
xchg
sbb
imul
filds
jge
ljmp
mov
jmp
call
push
repnz
clc
lds
rcl
and
pop
in
adc
aaa
jl
dec
adc
out
dec
inc
lods
stos
push
mov
mov
xor
jbe
testb
pop
rorl
movsb
mov
xor
cmp
arpl
add
ja
mov
dec
fidivrs
xor
aam
inc
inc
shl
cwtl
ret
ja
pop
push
cli
daa
test
cwtl
add
sbb
mov
mov
jmp
or
aas
add
lret
pop
jp
or
add
xor
push
jl
mov
sbb
adc
mov
pop
adc
push
cmc
iret
lcall
xchg
pop
out
rorl
lahf
and
pop
mov
cmc
outsb
or
lahf
js
les
add
jecxz
pop
std
dec
xor
push
dec
pop
movsb
nop
incb
sub
jns
mov
cmp
clc
repz
out
fisttps
xlat
sub
pop
pusha
xor
cmp
mov
mov
xchg
add
lods
idivb
pop
pop
cmp
lea
inc
sbb
mov
inc
and
pop
clc
or
push
mov
mov
cmpsb
imul
mov
es
mov
xchg
rolb
mov
std
imul
xchg
dec
add
mov
mov
jmp
insl
loop
add
sbb
out
pop
xchg
loopne
jp
or
imul
inc
xchg
out
add
in
pop
or
mov
out
arpl
sbb
jl
or
jl
repnz
or
xor
xchg
popf
pop
repnz
out
or
push
mov
ds
lret
cs
popa
fldln2
fs
ja
add
mov
clc
jne
push
mov
pop
int
cmp
cmp
xor
cwtl
ss
lea
sti
das
lock
andb
jbe
enter
jmp
fisubs
pop
mov
aad
fisubrs
mov
push
inc
xchg
sbb
out
fsubr
mov
scas
rol
cmc
and
jg
jp
pop
fdivs
push
stos
out
or
orb
fbld
scas
mov
inc
add
imul
stc
dec
jo
cltd
jbe
cltd
stos
pop
lock
jl
mov
int
lcall
or
sbb
hlt
jge
int3
xor
pop
lock
add
fisubl
fs
push
incl
test
movsb
add
mov
inc
fimuls
jb
testl
adc
pop
and
fimuls
std
mov
pop
rclb
sub
cmp
pop
mov
bound
push
enter
mov
daa
jnp
mov
lahf
pop
aam
and
mov
hlt
std
add
xlat
pcmpgtd
mov
sbb
pop
daa
pop
sub
or
lea
cltd
icebp
pop
jp
sbb
femms
int3
push
hlt
push
faddl
in
shll
xchg
sub
ss
pop
xchg
and
jl
lock
cli
dec
outsb
jno
mov
test
lahf
cli
add
mov
jne
sbb
mov
fistpl
xor
fidivl
mov
pop
lods
aaa
mov
mov
xor
mov
and
push
xor
loope
inc
int3
push
add
clc
jno
jmp
push
cld
iret
cli
and
std
mov
imul
mov
subb
popa
fcomps
icebp
cmp
sbb
shll
jbe
push
jg
les
jge
jle
test
cli
loop
sarb
push
add
cltd
add
adc
aas
cmp
in
seta
in
nop
jne
adc
addr16
cs
mov
in
loop
mov
pop
hlt
cltd
or
andb
cmp
xchg
dec
and
orb
clc
mov
mov
mov
lret
cmpsb
das
rep
loope
pop
scas
or
cmp
and
push
xor
xor
cwtl
lds
adc
cmp
out
shlb
ja
arpl
jns
imul
loop
dec
adc
xor
add
adc
push
out
cmp
repnz
dec
pop
pop
ret
add
lret
ficoms
or
xor
imul
mov
arpl
ret
in
call
xchg
ret
mov
jp
inc
or
sbb
or
dec
mov
dec
mov
sbbb
pop
cwtl
outsb
or
pop
xor
cld
mov
mov
sub
sbb
add
out
mov
rcrb
into
mov
cmp
inc
pop
rcll
cltd
pop
mov
repz
lods
imul
xchg
mov
cmp
stos
cld
stos
xchg
stos
xchg
test
pushl
ficoml
or
inc
dec
jae
jno
push
sbb
mov
pop
lds
and
sub
cmp
fsubs
and
lods
xend
sar
jb
lods
mov
scas
int
adc
je
cld
lods
jns
popf
mov
pusha
add
cmp
out
inc
push
fdivrl
mov
loope
arpl
loop
repnz
filds
push
sub
sbb
popa
imul
scas
sti
dec
and
push
call
into
ficoml
dec
orl
xchg
sti
out
xchg
mov
mov
pushf
lods
sbb
mov
lods
xchg
pop
fmull
push
fidivs
cmc
ret
sbbb
fsubl
loop
mov
sbb
insl
xorb
mov
mov
jecxz
dec
vpunpcklwd
lea
push
pop
inc
push
mov
mov
fs
das
push
mov
imul
mov
call
arpl
fs
mov
push
es
paddusb
out
mov
rsqrtps
xchg
mov
loop
ds
or
fcmovnbe
dec
adc
add
push
lods
lret
add
xchg
push
cmp
dec
sub
jns
repz
cli
pop
mov
jp
mov
vxorpd
daa
sub
jmp
xchg
and
mov
daa
sarl
sub
test
inc
push
into
inc
clc
xchg
inc
jecxz
mov
mov
jae
xor
jb
push
jne
test
insl
push
lock
pop
andl
cmp
push
lods
inc
xchg
mov
aaa
movl
fisttps
jecxz
add
push
xchg
adc
xchg
pop
addr16
cmpsl
pop
or
shl
cmc
push
push
int
movsl
daa
rorb
add
cmp
mov
pop
inc
cltd
sbb
and
lods
dec
add
ret
cmp
xchg
xchg
outsl
mov
xor
rorl
mov
loopne
pop
add
sbb
xor
inc
popf
dec
dec
pop
pop
popa
sbb
and
pushf
push
sub
mul
cltd
sub
xlat
mov
mov
sub
fcomip
insl
lds
stc
or
push
stos
es
rcl
cltd
dec
pop
inc
loop
fsubp
adc
lcall
jg
clc
xor
pop
jbe
mov
test
jecxz
aam
mov
sub
xor
mov
outsb
jle
fists
mov
fsubl
enter
stc
sbb
inc
lock
mov
add
dec
mov
ret
inc
mov
rcl
fcomi
into
daa
mov
dec
aam
sub
std
les
aam
gs
inc
scas
faddl
mov
mov
ret
into
mov
sbb
push
xlat
sub
aaa
test
imul
adc
wbinvd
cmpsl
fldenv
inc
adc
cmp
imul
negb
mov
dec
std
sub
jae
pop
inc
jb
fsubp
and
sub
sub
jl
in
scas
mov
fdivrl
dec
cmpl
das
pushf
je
or
mov
mov
lock
cmp
adc
jl
sbb
mov
fwait
xchg
xor
jae
stos
or
sbb
repz
push
notl
mov
lods
inc
push
stos
push
loope
xlat
jb
push
add
clc
fcomp
push
cmp
push
hlt
outsl
or
stos
test
pop
lret
in
lods
dec
mov
lahf
mov
fs
dec
bound
movsb
inc
cltd
decl
movsb
sarb
repz
jns
xor
cmp
gs
out
and
push
xchg
and
jmp
xor
cmpb
mov
jmp
insb
mov
sahf
sti
js
gs
xchg
jl
into
adc
shrl
fcmovne
enter
push
popf
push
stc
jo
jmp
or
je
pop
std
dec
out
rorb
xchg
xchg
pop
mov
les
mov
jb
pop
mov
out
xchg
sub
iret
icebp
mov
xchg
mov
add
sbb
push
int3
bound
jnp
xchg
filds
push
sub
xchg
aaa
cmp
nop
push
ret
push
ret
adc
fcomi
fsub
paddusb
push
sahf
or
mov
loopne
inc
push
cltd
lret
ljmp
adc
shll
push
iret
repz
pop
jno
js
mov
jecxz
pop
jmp
addr16
inc
fdivrs
jecxz
shrl
mov
mov
jge
xchg
dec
movsb
cmpl
icebp
push
jnp
jl
sbb
mov
mov
aam
mov
test
jns
outsl
aad
xchg
or
aaa
inc
dec
test
push
in
fadds
adc
xchg
and
adc
shrl
jno
dec
cwtl
and
push
xchg
inc
sbb
paddb
fldpi
xorb
sbb
mov
ds
xchg
mov
pop
ja
jmp
insb
push
sub
in
icebp
out
je
and
cltd
jge
iret
mov
lods
imul
imul
fsubs
xchg
push
cmp
push
inc
xlat
fisttps
fdiv
add
es
mov
or
adc
lcall
push
inc
adc
lods
push
push
add
pop
push
lret
add
xor
fwait
jnp
sub
mov
xlat
incl
test
repnz
and
orb
or
outsb
leave
ret
mov
sbb
cwtl
fs
hlt
mov
ret
flds
dec
xlat
inc
cmp
cmpsb
jl
push
push
stc
sub
pop
and
pop
jg
xor
jge
maxps
pusha
in
in
js
iret
and
call
add
jle
leave
adc
repnz
fstp
ja
fidivs
rclb
xchg
nop
xchg
div
negb
xor
add
xor
xchg
nop
mov
push
and
out
sub
imulb
movsl
stc
push
mov
dec
push
ret
fisttpl
add
in
cld
mov
dec
aad
cmp
movsb
jne
push
lds
cmp
add
inc
cwtl
inc
bnd
loop
add
ja
push
fadd
jo
pop
push
mov
lods
ret
ret
add
leave
test
in
dec
cmp
ret
mov
and
movsl
push
adc
and
addr16
jo
cmpsl
jnp
add
jle
lea
lods
adc
or
into
into
in
aas
fistps
lods
jmp
add
jp
ljmp
sahf
inc
mov
leave
lods
rcrl
fdivs
pop
fadds
lea
jnp
dec
js
adc
mov
jmp
add
loop
lret
push
jp
xor
pop
sbbb
add
scas
add
pop
inc
inc
add
adc
mov
jbe
dec
jp
ja
addr16
cmp
pop
xor
add
push
cmpsb
icebp
pop
cmp
and
dec
mov
stos
into
mov
mov
arpl
pushf
nop
cs
sub
fwait
cld
out
nop
jl
pop
mov
loop
test
jbe
adc
ret
xchg
inc
sbb
cmp
dec
fs
xchg
rcl
std
lahf
fs
ds
jbe
add
inc
mov
pop
mov
mov
pusha
in
jnp
xchg
dec
pop
int
jbe
cmp
or
dec
pop
adc
in
push
pop
pop
cmc
sbb
pop
insb
push
fucomi
stc
push
push
or
cmp
call
adc
xchg
or
mov
xchg
add
xor
sub
movsl
loop
add
and
inc
push
testl
xchg
shrb
cmp
xor
or
add
cli
imul
data16
stos
pop
ds
xchg
mov
adc
std
xor
inc
mov
add
xchg
jae
int3
mov
dec
cmp
inc
aaa
into
mov
inc
pop
out
pop
popa
jnp
pop
adc
adc
scas
ficomps
cmpsb
popf
aaa
test
mov
cmpsl
cltd
adc
aaa
cmpsl
jecxz
test
cwtl
ret
inc
jmp
mov
into
push
decb
pop
gs
stc
popf
xchg
mov
fmul
insl
mov
mov
lret
inc
jne
aas
sbb
shl
and
popl
out
repz
aad
es
inc
pextrw
add
movsb
rol
pop
hlt
hlt
out
or
das
insl
and
aaa
scas
cs
pushf
mov
sub
push
inc
adc
sub
mov
inc
lret
cwtl
jns
mov
movsl
ficompl
push
movsl
sbb
fisttpll
nop
add
sahf
cmpsb
iret
jo
cmp
das
aad
rclb
mov
sub
into
push
icebp
leave
pop
movsb
jo
and
mov
lods
dec
push
pop
push
cmp
cmp
jge
push
and
mov
cmpsb
divb
sbbb
mov
rolb
adc
xor
stc
popa
xor
add
sahf
jl
or
int
push
jg
clc
scas
in
dec
sbb
inc
daa
mov
sub
das
inc
xor
and
xchg
pop
scas
cmpsb
sub
jg
push
dec
add
ret
sti
outsl
xchg
adc
js
jmp
fmull
loope
sub
mov
test
cmpsl
rsqrtps
ja
les
xchg
movsb
adc
jbe
insb
inc
lea
jae
imul
xchg
mov
fwait
in
sti
sbb
cli
xchg
outsb
mov
out
and
inc
call
dec
xor
nop
lea
jmp
or
adc
jns
std
and
pop
xor
shrl
adcb
repz
and
mov
mov
mov
lock
dec
mov
stc
push
enter
jl
mov
jae
cmp
push
sbb
pop
push
imul
mov
rorb
xchg
adcl
jne
outsb
and
mov
js
repz
dec
or
jae
mov
sbb
cmp
test
fld1
icebp
stos
xor
push
adc
and
repz
mov
push
push
xor
hlt
xor
lods
repz
mov
xchg
xchg
sarl
push
ljmp
push
jg
and
jl
xchg
inc
sub
pop
sbb
inc
pop
sub
fimull
cmc
and
sarl
hlt
and
or
or
lcall
pop
mov
bound
xor
shlb
popf
mov
lcall
or
mov
mov
push
or
sbb
add
mov
pmaxub
lods
push
addb
jl
push
sbb
adc
mov
pop
cmp
fld
adc
je
mov
sahf
jns
xor
mov
shlb
data16
addl
stc
pop
test
ret
aad
inc
jmp
fs
loop
ret
loope
es
mov
cli
inc
fs
stos
test
enter
dec
cmp
jae
push
and
mov
imul
cmp
aaa
jecxz
jno
push
int3
cmc
aad
or
and
aaa
pop
mov
adc
inc
std
and
mov
dec
mov
pop
inc
push
clc
dec
andb
sub
adc
xchg
dec
xchg
pop
mov
mov
fcomps
and
pop
jae
lods
ret
mov
cmp
adc
add
gs
mov
outsl
xchg
sub
dec
fwait
test
add
jp
mov
lcall
dec
mov
push
xchg
sbb
andb
or
mov
dec
daa
shll
cmp
dec
pop
lds
or
cmp
push
in
icebp
adc
jne
lret
sti
stos
push
shll
pop
lds
push
std
jnp
daa
sbb
into
pushf
lcall
sub
clc
jmp
xchg
fcoml
adc
add
push
fcomps
sbb
or
sbb
mov
or
repz
xchg
pop
jae
shlb
push
pushf
jnp
mov
dec
inc
pop
sub
pop
movsb
mov
sub
repnz
push
mov
rclb
in
fldl2t
inc
iret
scas
mov
pop
pop
loope
and
mov
mov
adc
jne
enter
std
inc
cs
push
movsb
lcall
xor
ret
shll
inc
mov
push
xchg
fs
lods
pop
mov
mov
xchg
mov
adc
adc
repz
popf
ds
movb
sub
es
xor
test
or
lret
adc
and
mov
mov
test
test
repnz
sub
nop
aam
in
scas
mov
jb
inc
cmp
dec
dec
push
stc
pop
add
imul
cmp
dec
sub
mov
orb
outsb
push
mov
ss
cmp
aad
jge
lcall
test
out
xchg
shrl
icebp
in
mov
push
sbb
fmuls
je
in
arpl
leave
mov
je
add
pop
xchg
xchg
mov
fwait
les
inc
mov
insl
or
xchg
arpl
add
sub
push
mov
addb
mov
sbbl
mov
je
shll
ds
push
dec
push
fistl
dec
lcall
cmpsl
pushf
popa
cmpsb
je,pt
lds
fmuls
dec
mov
dec
mov
in
pop
rolb
je
mov
ja
xor
bound
in
push
dec
sub
xor
cs
add
movsb
nop
mov
jno
xor
mov
sub
decb
fwait
ljmp
or
repnz
mov
mov
mov
push
sub
sub
pop
je
loopne
gs
loopne
and
fsubrs
lods
pop
sti
ficompl
adc
mov
and
leave
stos
add
hlt
push
adc
loop
imul
or
cmpsb
dec
sbb
fwait
fwait
inc
mov
shl
ret
dec
dec
jno
and
dec
int
lret
pop
push
push
test
pop
ret
vmovmskps
outsb
jo
je
in
fwait
mov
mov
sbb
add
and
js
js
cmpsb
inc
into
xor
dec
adc
jns
lret
or
xlat
add
xlat
sub
loope
data16
and
int
inc
jne
mov
jnp
movsb
nop
test
xchg
fisubl
in
push
inc
mov
pop
mov
mov
push
inc
out
adc
sbb
xchg
leave
icebp
dec
sbb
dec
mov
xor
jae
mov
adc
int
filds
xchg
mov
push
or
or
dec
or
xorl
addr16
dec
xor
ljmp
daa
pop
ds
mov
cs
ffree
lds
adc
out
mov
sbb
jecxz
fcmove
and
cmpsl
ja
scas
movsl
add
lea
and
inc
dec
xor
xlat
lahf
mov
data16
call
or
repnz
mov
sub
je
popf
cs
rclb
aas
iret
into
subl
or
mov
pop
jl
aaa
pushf
jnp
cwtl
ss
mov
adc
sahf
xchg
out
or
jb
mov
sahf
or
sub
inc
sub
nop
sbb
mov
adc
sub
pop
xchg
lods
jnp
mov
mov
fstpl
testl
adc
test
stc
adc
popf
cli
sub
aad
fdivl
enter
out
fwait
dec
inc
mov
daa
mov
push
in
pop
mov
or
adc
jl
orb
pop
addr16
adc
or
pop
adc
arpl
testb
dec
xchg
aam
lret
lret
sub
xchg
and
xor
notb
xor
sarl
sub
ret
stos
or
xor
pop
push
cmp
push
sahf
cmp
pushf
stos
sub
int3
nop
aam
and
cmp
je
call
sub
fwait
roll
in
dec
mov
mov
fdivl
mov
push
sbb
pusha
gs
and
mov
mov
test
xor
inc
sbb
adc
ja,pt
push
mov
out
jbe
mov
loop
jae
fnstcw
dec
jl
jb
push
out
and
cmp
cmp
sbb
dec
movsl
lods
sub
mov
cltd
icebp
lret
sti
movsl
xchg
mov
xor
jp
icebp
frstor
adc
stos
les
mov
leave
inc
push
inc
pushf
out
sbb
adc
shll
data16
in
push
push
xchg
mov
push
push
shrb
insl
mov
cmp
push
fsubl
fisubs
scas
mov
mov
mov
cwtl
stc
pop
addl
nop
fistl
add
push
mov
fstpl
cwtl
adc
jecxz
xor
lret
cmp
mov
test
and
lods
jns
ret
loop
test
adc
cmpsl
adc
pop
push
in
insb
or
in
pop
aad
push
adc
dec
jp
mov
ja
out
mov
test
lahf
cwtl
pushf
cwtl
mov
add
stos
fldenv
iret
push
aad
repnz
je
or
rcll
outsl
mov
inc
or
inc
or
das
and
lret
xor
fdivs
push
mov
clc
sub
sub
sub
test
mov
ret
pop
nop
dec
cs
xchg
or
xchg
push
pop
popa
int
negl
cld
mov
mov
popa
add
push
cmp
rorl
rcrb
icebp
xchg
loop
pop
lods
mov
jo
lret
aas
adc
das
mov
mov
inc
dec
icebp
sub
lret
data16
add
pop
andb
add
jo
jnp
lahf
pop
ja
and
out
testl
aam
sub
fsubrl
insl
adc
jl
movhps
lret
xor
xchg
adc
jne
fisttpl
icebp
jp
imul
ja
xchg
data16
popa
js
cmpsl
push
mov
sti
mov
pusha
enter
pop
stc
das
jno
jle
jno
cmp
les
mov
mov
xchg
fnsetpm(287
push
push
sbb
pop
popf
aaa
push
add
or
loopne
fiaddl
mov
movsl
sbb
lods
out
inc
sub
repnz
lock
push
lds
sbb
or
pop
fdiv
push
fstps
insl
dec
lcall
xchg
and
lock
sub
jle
orb
call
out
stc
sub
push
mov
mov
aas
jbe
add
jle
push
or
repz
pusha
fs
adc
fwait
push
das
xor
popa
xchg
mov
jmp
mov
divl
pop
push
ljmp
out
pop
out
pop
movsl
mov
push
sbb
mov
clc
std
jb
cs
das
in
enter
pop
mov
mov
and
xor
iret
addr16
cmp
inc
dec
pop
mov
nop
rcrl
push
sbb
stos
mov
movsb
loop
outsw
xchg
iret
fistpll
xchg
ja
mov
or
insb
rcrl
push
ficoms
icebp
cwtl
mov
and
mov
in
aad
ret
je
jl
jmp
lods
cmpsb
call
xor
push
lock
push
movsl
push
push
notl
xchg
mov
inc
enter
mov
and
fsubr
xchg
pop
test
scas
xchg
mov
xor
daa
jne
pushf
dec
gs
jge
push
or
lret
enter
cmp
aaa
andl
in
pop
sbb
int
negb
jb
neg
push
pop
pusha
in
push
addb
mov
or
vrsqrtps
lea
pop
xchg
hlt
xchg
add
sti
pop
dec
jg
sub
sbb
fstl
pusha
pusha
mov
jge
cli
cmp
mov
movsb
loopne
faddl
inc
vmread
mov
xor
mov
adc
outsl
cmp
mov
mov
add
push
mov
dec
dec
fiadds
je
bound
mov
shlb
outsl
pop
aam
mov
pushf
adc
and
mov
test
push
and
int3
mov
jae
cmp
lahf
adc
lods
push
xlat
add
mov
cmp
rorl
mov
lahf
stc
pop
cmpsb
fdivrp
out
data16
push
imul
cmp
scas
sar
das
icebp
xchg
scas
fidivrs
adc
jo
pusha
inc
jl
cmpb
cmp
and
cmpsb
mov
movsl
sarb
pop
faddp
xchg
dec
xchg
cmp
mov
daa
jb
sahf
mov
push
xchg
adc
bound
fwait
adc
shlb
out
stc
jae
aas
add
pop
xor
mov
inc
sbb
xchg
cmp
cwtl
ficoml
push
pop
imul
insl
push
or
movsb
icebp
or
cmp
loop
cli
mov
sbb
adcb
mov
mov
xor
out
cmp
xchg
xor
mov
mov
rcr
dec
dec
push
mov
movsl
cmpsl
lds
xchg
popf
clc
xor
pop
cmp
adc
pushf
addl
pop
loope
jle
movsb
jo
sbb
ja
mov
sbb
adc
lahf
xchg
int3
push
jg
push
fbld
sti
adc
xor
lahf
xchg
shll
mov
sub
mov
dec
rorl
inc
mov
jecxz
cmpsl
rclb
stc
popf
pop
mov
sub
sahf
or
pushf
jg
cmp
push
in
push
subl
mov
mov
mov
lock
loop
leave
out
xorb
inc
cmpsl
pop
cwtl
xchg
pop
cltd
jg
insb
xchg
xor
mov
andl
push
sahf
mov
mov
mov
insb
sbb
cmp
sub
push
out
out
test
adc
pop
rcll
les
xchg
int
dec
in
mov
sar
mov
mov
mov
shlb
jge
mov
mov
mov
int
and
mov
add
repz
dec
adc
shlb
dec
enter
insl
shlb
jo
mov
mov
std
scas
or
in
adc
js
sarl
out
cmp
pop
and
cs
or
jb
in
lcall
aaa
sarl
icebp
mov
insb
and
sarl
insb
xlat
mov
or
imul
jbe
cld
shr
popf
xor
es
sbb
jo
sbb
jge
adc
aam
lahf
xorb
cmc
outsb
out
insb
jno
flds
xor
dec
movsb
lahf
add
sub
dec
jnp
xor
ja
ret
mov
in
dec
xor
xor
lds
lds
xor
inc
push
mov
sub
aam
add
inc
addr16
mov
pop
dec
mov
xchg
cmp
pop
popa
adc
int
jo
fidivrs
dec
ret
mov
xchg
mov
inc
jno
mov
shl
lods
daa
ljmp
mov
add
fdivl
pop
loope
fistps
xchg
popf
adc
out
inc
mov
jle
xor
mov
mov
mov
jno
xor
repnz
popa
inc
adc
mov
adc
iret
int
add
xchg
aam
sahf
popa
sub
mov
add
inc
mov
dec
test
ret
xlat
push
xchg
daa
jo
mov
rol
repnz
imul
dec
sar
cli
hlt
out
pop
arpl
out
negl
pop
testb
or
loop
divl
ja
mov
sti
sahf
sbbb
and
in
fldcw
test
leave
out
xor
rorb
mov
fldenv
add
and
mov
icebp
roll
cmp
dec
jo
cmpsl
inc
xchg
cmp
fldl
push
aad
jge
jnp
jmp
jle
sti
xchg
sub
mov
fistpll
bound
icebp
mov
mov
stc
daa
or
jmp
cmp
rcr
adc
ja
push
out
ljmp
adc
mov
add
mov
mov
mov
cwtl
pop
inc
jp
ficoml
sub
cltd
push
or
inc
pop
jl
xchg
fisubrl
sahf
pushl
dec
xchg
arpl
mov
push
mov
mov
sub
xor
xchg
push
cld
les
pop
push
jge
outsl
inc
mov
push
iret
aam
pop
cmp
popf
xchg
imul
mov
out
mov
jl
sbb
mov
call
jns
stc
sbb
out
fs
jb
imul
out
fmuls
mov
pop
jecxz
xchg
jg
cld
add
xlat
lock
mov
js
sub
jnp
popf
mov
popf
sub
mov
lea
test
xchg
jmp
mov
mov
inc
addb
mov
sub
mov
int3
sbb
mov
push
or
and
mov
push
pop
mov
fisubl
es
dec
mov
mov
int3
pop
mov
imul
daa
test
das
and
mov
inc
xchg
xchg
in
push
cmpsl
js
xorl
dec
xchg
nop
mov
repnz
sub
cmpsb
popa
add
mov
fdivr
and
mov
ficoms
xchg
pop
xchg
lea
inc
cld
call
imul
mov
loop
jl
jecxz
adc
or
jae
fists
mov
mov
and
mov
mov
insl
test
mov
loop
fnstenv
xchg
sbb
cs
pop
lret
inc
cwtl
cltd
iret
loopne
pop
cmpsb
sbb
lods
inc
inc
inc
cmp
pusha
dec
xchg
lahf
out
sti
cmp
mov
jg
repnz
lcall
out
mov
inc
in
mov
shl
mov
push
or
jnp
test
pusha
shrl
pop
shrl
dec
inc
or
jbe
sbb
sbb
cmp
sub
in
pop
pushf
cmp
fldt
push
out
rolb
xchg
jecxz
add
adc
aaa
mov
loopne
pop
repz
fdivl
mov
cmpsl
lcall
mov
aad
pop
mov
push
mov
jne
xchg
nop
out
push
sti
mov
mov
in
mov
add
mov
inc
inc
pop
in
sbb
mov
das
mov
jne
fstps
jne
dec
mov
add
dec
xchg
add
sbb
xor
jae
xchg
mov
je
rcll
sub
imul
pushf
mov
mov
xor
call
xor
lahf
std
std
pop
sub
jl
cs
call
mov
movsl
cli
scas
cmp
mov
adc
cmc
jae
std
inc
das
dec
inc
cwtl
sub
cmc
fsubl
ja
insb
inc
fdiv
xchg
jg
jg
js,pt
je
cmpsl
cmp
xor
adc
fnstenv
jmp
xorl
mov
stos
ret
arpl
fisubl
xor
repz
imul
es
enter
enter
xor
shll
push
test
jmp
xor
fnstenv
or
popf
lret
lcall
out
dec
push
aam
or
mov
push
mov
cmpsl
xor
je
cmp
dec
xor
cmp
aad
inc
cld
mov
popa
repnz
or
xchg
fnstenv
mov
xor
mov
mov
cli
xchg
jae
out
push
push
incb
mov
mov
iret
sahf
movsl
mov
sub
insb
mov
mov
pop
in
dec
in
lcall
data16
push
repz
popf
aad
mov
incl
les
nopl
push
testb
sub
mov
cmpsb
mov
out
ja
repnz
stos
dec
repnz
add
mov
int
or
jo
mov
inc
xchg
jne
mov
sahf
leave
sbb
mov
rorb
sahf
xchg
xchg
or
outsl
ljmp
xor
fwait
mov
cli
push
repnz
mov
cmp
loope
add
addr16
and
jmp
insb
hlt
repz
add
or
or
cmp
sahf
leave
orb
sub
or
cs
or
cmp
popa
mov
sub
or
mov
jle
les
fmull
mov
int3
test
in
fwait
into
addr16
jb
pop
jns
sub
pop
scas
clc
pop
jge,pt
fisubrs
subl
mov
in
mov
sbb
mov
sahf
es
pop
lret
or
std
dec
mov
cwtl
jo
mov
repz
cmpsl
lret
inc
mov
fdivr
mov
aad
adc
repz
gs
cmp
sub
mov
movsb
pop
and
xchg
sub
or
dec
jmp
push
ja
movnti
jne
aas
xchg
xchg
incl
movsb
and
adc
out
movsl
cmp
in
lret
xor
xor
nop
push
rorb
orb
sbb
xor
scas
inc
andb
or
mov
mov
fwait
mov
cmp
cltd
adcb
mov
nop
xchg
cs
inc
xchg
pop
xor
lret
xchg
data16
xchg
adc
icebp
stos
push
je
push
sub
repz
dec
jne
mov
mov
daa
mov
out
movsb
scas
mov
out
mov
movsb
fisttpll
add
lock
shrb
xchg
in
faddp
dec
mov
ja
or
in
mov
iret
and
popf
cltd
in
xchg
and
fs
xor
sub
in
scas
in
shrl
add
push
mov
xchg
xor
sbb
leave
out
iret
inc
mov
push
pcmpgtb
cmpsb
dec
pop
xlat
cmp
inc
push
xchg
jae
rcrl
pop
iret
or
sbb
out
gs
push
mov
mov
out
fs
or
sbb
nop
inc
inc
add
jae
jmp
inc
notb
sbb
adc
aas
jnp
or
in
je
sbb
rcrl
xor
xor
sbb
andl
jne
pop
xor
mov
cltd
sbb
or
dec
aas
jbe
je
mov
cltd
push
cmovge
in
lret
mov
sbb
lcall
dec
cld
cmp
push
add
ja
jle
jo
sbb
jl
and
nop
jg
sbb
pop
lea
cmp
pop
mov
js
push
xor
sarl
call
lret
mov
and
push
lods
mov
push
rclb
jns
jl
stos
jl
push
jp
repz
daa
stos
push
jno
movsb
mov
or
xor
pop
paddsb
and
arpl
out
aas
push
jmp
aad
int
adc
nop
inc
mov
add
mov
test
mov
pop
scas
push
dec
mov
fwait
popf
mov
mov
jno
push
sbb
pop
aad
push
roll
rcr
sarb
inc
xchg
aad
jmp
into
jb
lahf
push
push
sub
xor
and
pop
jge
mov
fwait
shll
popf
push
packsswb
mov
mov
out
mov
into
ss
stos
xchg
stos
clc
in
inc
sbb
test
pushf
outsb
push
fidivrs
es
out
push
enter
repnz
mov
mov
sbb
movsl
lods
scas
mov
mov
xchg
lds
sub
loope
sbb
pop
mov
into
sub
rcrl
inc
sub
jl
mov
and
mov
inc
stos
inc
in
cmp
scas
in
scas
cwtl
stc
xchg
incl
cmpsb
in
test
movsl
and
jl
mov
loope
or
sub
mov
das
stos
xor
sbb
pop
dec
cld
jg
cmp
pushf
and
fnstcw
loopne
addr16
out
sub
mov
inc
ret
loope
cltd
ret
sbb
sbb
sub
int
test
into
scas
xorl
fs
repnz
or
push
push
mov
sbb
movsb
stos
and
loope
sub
movb
xchg
into
leave
sahf
imul
and
sti
jg
in
insb
int3
xchg
movl
xchg
data16
in
cs
mov
lea
shlb
daa
push
shll
jl
dec
cmp
mov
out
xchg
sarl
sub
cmp
ret
xlat
rclb
mov
mov
and
add
pop
mov
adc
aam
ss
clc
ss
sbb
and
xchg
xchg
mov
ficompl
inc
cs
scas
cmp
mov
cmp
xlat
sti
aad
loopne
fcmovbe
jg
jo
aam
mov
adc
cmpsb
adc
rcrb
sbb
std
mul
dec
aad
mov
loopne
outsl
fiaddl
nop
jl
adc
gs
stos
push
out
cli
push
fsub
mov
add
cmc
les
mov
mov
inc
ret
sbb
mov
and
and
fiadds
aam
dec
mov
pusha
pop
sbb
cmpsl
add
pop
addr16
out
adc
aaa
mov
lret
push
inc
sub
dec
or
ss
inc
insl
inc
pop
dec
mov
sub
das
or
jmp
call
or
aas
mov
lret
out
ret
push
cmp
les
mov
push
out
or
cwtl
or
cmp
aas
adc
pop
hlt
mov
inc
mov
outsl
imul
imul
adc
repz
and
rcl
test
bound
mov
fcompp
xchg
ljmp
pop
adc
mov
lahf
or
pop
and
dec
loopne
inc
scas
jp
mov
mov
clc
cmove
xchg
std
js
pop
lcall
mov
test
imul
pusha
pusha
mov
pop
nop
mov
xor
mov
into
sbb
xchg
aaa
xor
leave
and
jg
test
jl
dec
fcompl
dec
jecxz
fdivl
lcall
mov
fwait
arpl
int
cs
sbb
jne
and
lds
sub
cwtl
adc
test
jo
cmp
ljmp
rcrl
repnz
push
jge
stos
sub
lret
out
enter
push
movsb
jne
or
pop
fs
cltd
movlps
fnstenv
push
jb
or
pop
mov
adc
movsb
cmp
xchg
iret
fistpl
imul
jle
jp
cmp
add
push
jno
mov
test
sbb
sub
test
insl
xor
ffreep
shlb
and
fwait
lret
mov
fnstenv
popf
outsl
or
hlt
pop
int3
das
mov
and
dec
dec
fistpl
jbe
or
jne
sbb
xchg
movsl
xor
or
adc
and
mov
jno
dec
leave
mov
mov
aad
adc
in
hlt
enter
sbb
mov
mov
ficoms
jno
inc
inc
lcall
ja
sbb
add
pop
or
insl
es
cli
fdivs
xor
xchg
popf
and
mov
std
neg
adc
pushf
popa
ficompl
xchg
ffree
xchg
push
sbb
or
mov
sti
enter
adc
jl
lds
mov
insl
and
jmpw
test
sub
out
mov
subb
dec
jne
imul
mov
jp
hlt
adc
sti
pop
add
cwtl
sbb
das
mov
scas
lcall
mov
cmc
cmp
jl
add
les
in
mov
cld
aas
mov
aaa
sub
cld
lcall
in
cmp
test
fstpt
pop
pop
push
mov
mov
dec
pop
mov
sbb
movsb
jae
mov
dec
int3
inc
mov
sti
leave
shr
scas
data16
cmp
enter
cmpsl
xchg
cmp
pushl
sbb
out
mov
lds
jne
mov
mov
scas
lcall
adc
pop
out
mov
inc
lret
faddl
mov
mov
loope
sbb
and
in
and
test
dec
xchg
int
fmul
adc
test
and
push
in
add
push
mov
leave
testl
mov
sbb
js
and
dec
es
xor
jge
push
rcrb
sbb
cmp
les
call
jns
jns
pop
push
cmp
sbb
popa
punpcklbw
push
xchg
add
pop
loop
fmull
lock
call
and
ds
add
inc
addr16
and
fiadds
push
out
dec
mov
test
mov
cmp
jbe
add
hlt
cmc
and
loopne
sub
daa
hlt
add
pop
add
int
lret
rcll
pop
es
leave
sub
sahf
pop
cmp
and
cmp
inc
ss
inc
push
adc
add
icebp
repnz
mov
or
sub
outsl
loopne
push
sbb
cld
sahf
loope
push
arpl
xchg
mov
scas
lods
add
push
xchg
lret
fisubs
cmpb
fimuls
mov
test
mov
lods
inc
dec
pop
jp
cmp
sbb
and
xor
insl
mov
push
js
inc
sbb
arpl
xchg
add
aad
pop
xchg
xchg
sahf
or
shl
lea
ret
std
and
mov
in
and
dec
inc
cmp
fwait
jno
pop
std
push
jo
shl
data16
inc
popa
loopne
or
add
adc
jae
out
mov
fwait
inc
lods
fldt
loope
pop
movsb
fnstcw
sbb
idivl
or
xor
jl
fmul
fsubrs
fstpl
jg
fisttpl
push
mov
adc
mov
scas
xchg
xchg
or
lea
jo
cmp
and
int3
adc
out
mov
ds
add
sahf
jmp
popf
aam
mov
pop
xlat
mov
aam
push
adc
aas
ret
mov
in
adc
popa
test
mov
xchg
rorl
scas
filds
dec
mov
mov
xor
mov
je
test
sahf
push
push
pop
imul
lcall
xchg
lods
flds
sbb
mov
testl
xor
jp
into
leave
in
dec
pop
pop
mov
jns
inc
mov
fnstcw
adc
fwait
add
xchg
aas
mov
and
pop
cmpb
stos
out
xor
enter
pop
jle
mov
and
push
iret
ds
enter
push
cmp
bnd
jns
out
sub
in
das
cmp
adc
add
lods
data16
in
out
call
je
bnd
negb
xlat
sarl
xchg
pop
push
lret
push
inc
jecxz
xchg
pop
imul
push
scas
fnstcw
iret
test
push
popf
jnp,pn
dec
mov
jecxz
add
xchg
fisttpll
jl
xor
jmp
cwtl
addr16
mov
hlt
fnclex
imul
fwait
jecxz
mov
dec
and
enter
jbe
mov
fcomps
mov
sbb
xchg
sub
or
pushf
out
and
idivl
sbb
push
lock
sub
sbb
dec
enter
adc
hlt
pop
cmp
jne
add
mov
icebp
push
psubw
sbb
je
jns
push
in
adc
aam
jnp
xor
mov
inc
mov
or
xchg
push
or
repz
inc
sbb
nop
jp
and
jecxz
repnz
mov
mov
aas
idivb
cld
sub
sub
dec
inc
xchg
xchg
inc
xchg
and
jecxz
cmp
daa
fucomip
jnp
cmp
cmpsl
das
ljmp
mov
jmp
addb
je
lcall
adc
sub
orl
add
ret
mov
cmpsb
shll
cmp
mov
fnstenv
and
pop
pop
lret
jnp
sbb
mov
lock
lock
sbb
mov
popf
jmp
imulb
push
pop
sbbb
mov
insl
push
insb
out
jl
cmc
sahf
xor
movsb
mov
dec
mov
fcoms
sbb
cmpsb
add
lcall
and
idivl
insl
ret
rclb
pop
popa
and
inc
push
jb
inc
adc
pushf
mov
orb
or
cmovo
cltd
dec
push
cwtl
fnstenv
push
rorl
ficoml
inc
lea
out
jp
pop
cltd
and
cmpsl
mov
inc
fadds
movsl
fwait
mov
mov
lahf
mov
fstpl
cmp
iret
xor
mov
sbb
inc
arpl
movsb
lods
jg
pusha
in
sbb
add
jle
cltd
cmp
pop
adc
push
pushf
push
add
dec
or
add
inc
sbb
cmp
pop
xor
lret
mov
mov
je
out
jp
js
mov
rorb
stos
adc
adc
mov
call
clc
mov
in
lahf
sub
push
or
mov
xor
sahf
dec
push
xchg
inc
dec
adc
inc
push
leave
push
daa
push
arpl
push
in
movsl
cltd
mov
and
sub
mov
iret
fstps
pop
jb
sub
cmp
jo
mov
mov
orl
movsl
sbb
or
mov
jle
mov
ret
icebp
mov
mov
jmp
push
pop
and
mov
popf
data16
jmp
xor
jnp
mov
lret
mov
packuswb
scas
addr16
jb
push
mov
jno
fistpll
mov
pusha
and
adc
inc
mov
fimuls
fs
mov
adc
cli
sbb
push
mov
std
cmpsb
push
pop
test
mov
imul
add
xor
xlat
sbb
cmp
pushf
mov
sti
lret
inc
jmp
sub
jge
sti
cmp
stos
roll
imull
push
mov
push
mov
jb
data16
aam
cltd
push
rorb
in
mov
call
enter
mov
lds
mov
jg
sbb
pop
or
push
xchg
test
fs
das
xor
das
xchg
insl
loope
arpl
jp
mov
scas
inc
out
jnp
inc
xor
or
lds
pop
lods
fwait
div
jbe
lods
cmp
fs
inc
pop
jo
in
jno
jne
add
stos
mov
adc
xchg
xchg
sub
xorl
adc
lea
jbe
mov
es
sbb
mov
imul
push
mov
gs
jne
add
push
sbb
insl
or
lods
cmc
rcrb
pop
cmp
aaa
rcrl
loope
cmp
dec
mov
sahf
xchg
mov
sbb
andl
pop
addr16
frstor
mov
sub
orl
iret
ss
je
movsb
dec
fwait
jp
cmp
mov
std
mov
xor
pop
push
and
ds
adc
mov
cwtl
lea
cmp
cld
xchg
dec
pop
daa
fdivl
dec
repnz
and
xchg
jb
xlat
or
in
shl
movsl
stos
inc
pushf
mov
ret
push
adc
pop
add
nop
fnstcw
dec
xchg
in
jo
or
enterw
idivl
jg
xchg
test
int3
or
jmp
mov
sti
xchg
lcall
or
lock
sbb
imul
lret
inc
sub
mov
in
test
xor
inc
xor
pop
gs
add
and
xchg
clc
inc
clc
adc
inc
pop
lahf
adc
or
movsl
fistpl
jg
fwait
scas
aam
jp
add
inc
push
rcl
jmp
fiaddl
aad
dec
xchg
imul
mov
insb
jne
sbb
imul
jmp
mov
mov
dec
add
jnp
stos
test
mov
inc
jae
xor
push
mov
mov
push
hlt
fildl
jbe
iret
std
repz
dec
mov
or
outsl
xor
jge
and
xor
inc
pop
movsl
ret
inc
mov
fs
in
imul
scas
call
lds
pop
adc
jg
fcompl
push
fmull
fisubl
cli
ret
and
adc
mov
aaa
frstor
je
jmp
pop
aad
lods
jmp
adc
fiaddl
pop
xor
add
xchg
movsb
jl
inc
scas
in
stos
icebp
lcall
shll
xor
jno
loop
mov
loopne
pop
xor
inc
movsl
cs
in
popa
pop
data16
mov
lock
movsb
imul
inc
shr
fdivrs
mov
in
popf
xor
pop
out
jb
std
sbb
sbb
out
lods
fcompl
divps
test
stc
lds
jecxz
in
fs
daa
mov
aam
sbb
add
cmp
inc
clc
stos
add
bound
out
jno
shll
mov
loope
adc
mulb
dec
sub
or
or
shl
xchg
or
popa
fs
push
scas
xor
shll
or
xchg
mov
jl
push
or
scas
int
pop
jo
pop
out
lods
sbb
pop
enter
mov
sete
pop
xor
ds
leave
cmp
mov
addl
ss
mov
pop
stos
popa
jo
mov
rol
xor
mov
dec
mov
add
xchg
or
rorl
mov
pushf
mull
test
call
adc
fucom
lea
push
adc
jge
arpl
pop
mov
adc
loopne
jb
or
loop
in
cltd
xchg
xor
fadds
movsb
mov
mov
and
imul
adc
jmp
fwait
mov
inc
sbb
lahf
adc
push
mov
sbb
and
stos
jge
and
xor
fiaddl
or
mov
pop
and
hlt
into
cld
xchg
sub
fldt
and
sbb
pop
adc
pop
push
adc
test
xor
pop
jmp
fsubs
lret
filds
fcmovne
pop
cld
sbb
in
pop
fwait
aas
inc
push
das
stc
sbb
stc
mov
add
in
lods
out
addr16
xor
push
mov
add
mov
andb
fs
add
out
ss
fsubl
and
dec
pop
bound
mov
cltd
sbb
or
shrb
pop
mov
fldl
fsub
xor
jns
je
pushl
fwait
repnz
test
test
mov
test
lcall
sub
adc
test
int3
mov
imul
fmull
xchg
andb
mov
xchg
inc
lods
outsl
xor
lock
sahf
adc
cmp
fidivrs
xor
gs
cld
xchg
sbb
sbb
push
aad
cmp
fstl
sbb
dec
nop
jmp
dec
mov
pop
sbb
jno
scas
xor
test
or
or
fcompl
fs
rolb
movsl
data16
scas
mov
pop
fisttpll
iret
fs
push
mov
fwait
mov
dec
aas
movsb
jns
xchg
aad
sub
cli
out
inc
push
repnz
lcall
fdivl
lock
pop
jo
jns
fldt
test
cmc
xorl
popf
push
aaa
mov
add
outsl
pop
outsl
ret
imul
cmp
mov
pop
lret
dec
stos
jne
or
lds
add
jae
inc
mov
cmp
jb
or
std
xchg
out
xlat
xor
leave
dec
cmp
xchg
lods
addr16
repnz
jbe
jle
jecxz
mov
dec
mov
pop
ja
cmpsb
sar
jecxz
sbb
loopne
ljmp
xor
sbb
xor
jge
movb
addb
jno
or
fsubp
xchg
xor
cmp
xor
xor
enter
cs
popf
pop
dec
dec
fadd
addr16
jae
inc
dec
or
or
sub
jecxz
sub
add
add
mov
andb
ljmp
sub
add
pop
mov
hlt
fstps
xchg
lock
pop
ja
xchg
movsl
jbe
scas
jno
pop
insb
imul
test
inc
jne
lods
adc
sbb
out
outsb
fcom
pushf
inc
xchg
pop
mov
ljmp
movsl
dec
outsl
xor
popa
out
sbb
pop
push
fwait
aas
outsb
jle
dec
filds
dec
mov
inc
mov
or
and
xor
mov
add
test
mov
push
pusha
imul
lock
jne
in
and
cmpsl
inc
jg
adc
and
pop
flds
inc
idivl
and
mov
leave
dec
insb
repnz
mov
push
das
push
jo
xchg
icebp
inc
push
xchg
pop
cmp
fs
xor
hlt
or
pushf
push
pop
sarl
out
lock
in
icebp
sub
lahf
push
fdiv
xchg
push
dec
mov
test
repz
in
jmp
je
rcl
stos
ja
lods
cmp
cmovnp
xor
jo
inc
jo
add
ljmp
lods
mov
dec
out
out
scas
mov
repnz
xor
rorb
les
test
imul
sub
stc
loopne
pop
dec
push
push
xchg
dec
out
xor
adcb
shl
mov
mov
pop
icebp
cs
icebp
pushf
jo
xchg
xchg
inc
cmp
pop
sahf
jno
mov
pop
dec
pop
jns
fwait
cltd
push
lock
pop
sar
bound
scas
int
pop
enter
mov
ja,pn
fiadds
into
fsts
fldl
fbld
aad
lea
out
add
inc
mov
mov
sbbb
or
xchg
dec
scas
loop
iret
xchg
insb
xchg
pushf
pop
and
insl
xor
mov
inc
inc
fidivrl
or
jnp
ficomps
push
inc
sbb
inc
inc
test
bound
sub
jae
push
xor
cwtl
cmp
lret
ret
mov
rclb
and
test
sbb
aas
and
xlat
icebp
jne
stos
inc
push
mov
aad
pop
add
pop
xchg
sti
dec
xor
in
push
sbb
adc
mov
cmp
or
xchg
mov
pop
cwtl
addr16
sbb
imul
pusha
fists
sbb
cmpsl
les
fisubrs
xchg
add
sub
inc
pop
sti
out
or
push
pushf
cmp
jae
or
loopne
lods
cltd
sbb
loop
ljmp
or
stos
jmp
icebp
add
into
stos
repz
mov
jg
jp
insb
push
adcl
xchg
into
push
das
icebp
aam
arpl
iret
xorb
inc
xor
mov
shll
xorl
add
inc
jl
mov
imul
cmpb
sub
and
pop
and
xor
inc
cwtl
mov
lret
or
imul
enter
inc
fadds
scas
inc
test
sbb
sub
into
pop
lret
mov
in
movsl
in
out
lods
ja
mov
imul
mov
mov
in
adc
jg
sub
fxch
sub
cs
ret
lret
cmpsb
adc
imul
and
loop
nop
pop
xadd
push
and
dec
into
xchg
pop
mov
mov
cwtl
test
data16
xor
pop
inc
adc
xorl
rcrl
fdivr
fisttpl
xor
rorb
cld
loope
out
in
xchg
lods
and
jne
test
mov
or
xor
and
and
rorb
negl
and
jno
push
push
pop
or
push
add
mov
xchg
or
iret
in
xor
pop
jbe
into
iret
add
or
ljmp
int
mov
or
in
cmpsb
stos
rcrb
push
imul
stc
and
hlt
xor
jmp
add
pop
cmp
insb
enter
inc
out
or
test
add
fistpll
ja
xor
mov
ljmp
in
push
filds
repnz
movsb
cmc
jecxz
ret
daa
add
fldl
xchg
inc
mov
cld
bound
jbe
js
gs
aam
lret
ret
in
cmc
pop
push
mov
cmpsl
popa
je
cltd
lods
push
ret
mov
sbb
stos
mov
mov
pop
jne
bound
mov
jb
ljmp
shll
pusha
les
pop
mov
mov
xchg
xadd
pop
mov
mov
lret
aaa
insb
inc
dec
fcom
mov
xor
cwtl
or
rorl
insb
jg
dec
xchg
lods
and
hlt
xchg
mov
or
sarl
addr16
inc
scas
inc
add
inc
jmp
fstp
cli
push
out
pusha
leave
pop
fwait
cmp
cmc
nopl
imulb
sahf
pop
insb
ret
push
lods
dec
divl
pushf
xorl
scas
mov
repnz
sbb
movsb
and
sbb
test
cmp
inc
dec
or
adc
add
sub
mov
arpl
or
aaa
xchg
mov
sub
sbb
mov
shlb
adc
mov
push
jecxz
pop
add
add
ljmp
dec
aaa
in
sub
cmp
mov
add
sbb
stc
int3
mov
jg
aaa
andb
or
dec
mov
cltd
xchg
inc
sarl
mov
xchg
sbb
and
data16
sbb
jmp
in
lods
mov
out
cltd
scas
sbb
loopne
cmpl
out
inc
mov
push
dec
mov
fwait
mov
ja
subb
jg
lds
dec
loope
push
jp
push
iret
int
sbb
stos
xor
hlt
pop
int
cmp
jmp
aas
inc
sar
or
jno
pop
aad
mov
pop
adc
cmpl
xor
mov
adc
sti
or
ret
inc
loopne
or
xor
xchg
xchg
jae
sub
fldl
fbld
push
jg
push
ret
or
repnz
pop
decl
jbe
addr16
jg
jne
or
xor
fisubs
imul
pop
mov
dec
imul
xlat
adc
test
out
fidivrl
pop
lods
sub
push
adc
jb
das
xorb
pop
ss
fldenv
add
mov
cmpsb
xor
faddl
xlat
mov
add
aas
lods
pushf
das
dec
filds
pop
stos
push
dec
xchg
adc
jne
mov
fisubl
orb
std
out
cwtl
in
lret
mov
inc
adc
je
fwait
sbb
arpl
jae
sbb
imul
lods
cwtl
enter
out
popf
cld
pop
xchg
je
and
adc
dec
mov
pop
sar
idivl
mov
repz
out
loop
mov
sub
cmp
xchg
pop
mov
cld
lcall
mov
push
xor
jl
sub
in
test
mov
jecxz
xchg
or
insb
test
jb
out
dec
cmpl
insl
mul
aad
and
push
call
and
or
aaa
or
xor
imul
pusha
adc
mov
sbb
inc
sti
shr
push
add
div
jo
add
js
scas
push
mov
lahf
fistpl
movsb
mov
xchg
mov
or
xchg
lock
add
cmp
pop
ret
enter
adc
dec
dec
sbb
imul
ja
adcl
adc
push
dec
insb
jg
jmp
stc
shrb
adc
xchg
jnp
inc
mov
adc
sub
outsl
mov
or
cltd
jl
sub
in
cmp
popa
mov
std
lock
jp
stc
out
int
je
cmp
popf
pop
aad
cltd
subl
fcoms
mov
inc
mov
push
stos
lret
fisttpll
xchg
pop
fcom
adc
call
leave
mov
dec
mov
idivl
test
bound
mov
test
or
inc
addr16
xchg
js
fisubrl
push
xorb
push
mov
movsl
jge
outsl
mov
xchg
adc
jge
rcl
imul
mov
and
or
xchg
adc
push
rcrb
jno
add
ja
aam
in
dec
adc
xor
xchg
mov
std
gs
mov
les
gs
fs
mov
mov
mov
stos
mov
addb
push
cmp
mov
cmp
cli
in
jbe
mov
xchg
mov
dec
movsb
aad
inc
rorb
pop
xchg
fisubrl
mov
mov
push
or
loope
addr16
fistps
test
cmpsb
xor
adc
inc
or
push
pushf
xor
add
xchg
ret
fs
jle
lahf
or
fcomps
add
inc
imul
adc
mov
inc
lock
popf
shlb
outsl
lea
in
push
in
add
insl
jle
jge
fidivrs
push
mov
pop
fmuls
mov
and
jb
icebp
in
ret
push
int
pop
jno
mov
into
ljmp
out
popf
rorl
lahf
fists
pushf
mov
scas
mov
hlt
mov
inc
and
sbb
das
mov
repz
push
outsb
into
inc
adc
sub
dec
aas
fdivrl
movsb
dec
icebp
sub
sub
pop
inc
adc
ja
mov
sbb
pop
fnstcw
and
scas
scas
loop
fldenv
dec
mov
add
push
pop
jno
rorl
or
cltd
pop
mov
adc
xchg
adc
mov
enter
mov
mov
ret
push
aaa
xor
fs
or
pop
icebp
movb
and
xor
insl
xchg
mov
adc
ficoms
push
jge
data16
pop
push
sub
mov
xorl
or
daa
sti
pop
test
fbld
stos
jge
xchg
push
je
in
or
dec
push
inc
rcr
pop
sub
popa
pop
inc
and
repnz
int
inc
sbb
out
shlb
mov
sahf
pop
fistpll
std
mov
ret
fs
jae
mov
flds
call
adc
inc
mov
sahf
and
or
or
mov
and
outsb
adc
pop
int
xchg
sub
std
adc
cli
js
pop
stos
dec
rcrl
iret
aad
dec
mov
loopne
bound
sahf
mov
pop
pop
test
flds
sbb
jle
adc
ret
pushf
dec
jg
into
pop
sbb
pop
xchg
sarl
cmp
mov
pop
int3
adc
lods
mov
pop
sbb
cmc
sbb
cltd
out
test
push
pop
insl
mov
inc
dec
inc
lods
pop
mov
mov
pop
jnp
xchg
xlat
add
ret
sbb
popf
int
fiaddl
mov
jns
jle
inc
fwait
ret
mov
mov
in
mov
shll
rol
xor
jno
shrb
xor
hlt
fcmovnbe
jne,pn
mov
sub
nop
pusha
push
dec
cltd
roll
inc
push
aam
pop
mov
xor
jl
sub
stos
or
or
cmp
mov
ja
or
int
push
pop
dec
mov
ds
mov
test
mov
mulb
sbb
ja
insl
jp
sahf
cmp
cmp
enter
lcall
xchg
shrb
jecxz
aam
sub
dec
and
fwait
inc
btr
pop
cltd
repnz
inc
int3
data16
das
loop
xchg
inc
dec
mov
lods
jo
mov
scas
push
loop
dec
xor
mov
hlt
lcall
lods
cmpsl
mov
xchg
and
icebp
test
je
shl
pop
sbb
push
mov
or
nop
jnp
push
scas
shll
movsb
or
mov
xor
cmpsb
jge
mov
sbb
insb
scas
fwait
mov
js
cmp
lock
test
cmpsb
or
js
add
repz
fldenv
ja
push
mov
nop
cmp
add
popf
sarb
addr16
adc
mov
cmp
into
push
sbb
inc
sub
shrb
cltd
sbb
fisubrs
lods
jns
out
mov
add
jo
xor
inc
test
imul
cltd
test
mov
cmc
jae
adc
cmpsl
hlt
stos
xchg
dec
push
mov
pop
loopne
loopnew
xchg
js
sub
lea
or
fs
fsts
gs
jle
sub
xchg
xchg
mov
testl
sub
shl
outsl
mov
inc
dec
push
inc
mov
roll
call
or
sbb
pop
adc
mov
mov
or
or
mov
leave
cwtl
fistpll
pop
lds
ljmp
clc
cld
jns
sub
loopne
sub
adc
xor
mov
dec
gs
out
fistpll
jg
pop
xor
pop
test
test
sbb
enter
dec
js
dec
lcall
inc
pop
mov
repz
mov
lahf
mov
insl
idivb
loop
fdivrs
jp
cmp
adc
nop
jns
loop
jmp
outsl
xor
mov
adc
dec
andb
mov
jne
adc
cmp
mov
xor
mov
sub
ret
or
ljmp
in
cli
call
sahf
mov
scas
out
and
jmp
decb
cltd
nop
jno
adc
nop
adc
out
push
in
pop
cmc
div
movsb
ficoms
loop
cli
dec
fcoms
mov
inc
mov
or
scas
sub
xlat
xchg
lahf
or
sti
dec
in
jno
cmc
loope
outsl
fisubrs
mov
cld
aad
mov
iret
mov
fs
mov
add
jb
shrl
push
in
cmp
sbb
out
lret
jl
dec
pop
and
shll
jne
es
lods
adc
push
sub
adc
lods
lret
mov
xchg
jle
aad
rorl
mov
mov
loop
icebp
out
out
in
imul
ret
and
sub
sbb
mov
cld
xorl
test
ficomps
iret
and
push
loope
xchg
push
or
dec
push
lahf
ds
js
or
outsl
movd
cwtl
xlat
cmp
jl
in
xor
adc
pop
in
and
cmp
nop
lods
dec
sbb
push
or
je
daa
pop
jg
outsl
js
outsl
mov
test
cmpsb
add
ret
mov
dec
loopne
xchg
sub
sar
sub
sub
mov
push
push
dec
data16
xor
ljmp
ret
sub
mov
jl
inc
addl
in
pop
out
mov
rorl
scas
adc
out
or
stos
lahf
cmpsl
loope
cmc
adc
lds
mov
push
cwtl
lea
xor
add
cltd
xor
xor
inc
imul
xor
add
mov
addr16
pushf
and
stos
jl
cmp
xlat
js
sbb
jno
pop
add
sub
sti
insb
pop
aad
aaa
sub
into
cmp
fcoml
arpl
int
or
je
inc
outsl
xchg
clc
xor
repnz
push
sub
push
dec
mov
sbb
xor
imul
mov
xchg
cltd
lcall
iret
lret
sub
sbb
sbb
in
leave
test
stos
icebp
push
inc
xor
push
addr16
jg
loop
mov
mov
scas
and
fwait
push
jl
outsl
jae
pop
outsb
dec
push
jmp
xchg
mov
fisubs
ret
and
paddusw
into
add
inc
ds
lods
xchg
dec
add
orl
mov
lds
fndisi(8087
and
sub
out
xchg
cmp
push
lahf
inc
sub
lea
push
and
xchg
lea
xor
dec
add
rcll
jbe
int3
xlat
hlt
nop
cmpsb
dec
mov
xlat
mov
push
jmp
mov
push
cmp
loop
ficompl
cs
and
jno
dec
lods
fisttpll
adc
and
xchg
inc
jae
ljmp
sbb
aam
xchg
sarb
popf
xchg
mov
inc
pop
pop
push
andb
or
stc
fbstp
loope
jmp
clc
test
pop
xchg
mov
fstpl
aas
and
sub
fidivl
jne
xchg
mov
je
push
mov
cltd
test
mov
cmpl
lods
loope
repnz
jp
and
mov
aad
mov
cmc
xchg
sar
sarb
stos
sbbl
or
mov
and
sbbb
fincstp
cmp
insb
jo
daa
push
cmpsb
adc
mov
cld
pop
test
push
dec
cmp
adc
inc
add
mov
adc
xchg
aad
lds
movsb
and
xchg
roll
jo
pop
jbe
leave
lahf
jge
adc
lahf
out
jmp
cli
pusha
push
repz
xchg
out
shll
push
jo
cmp
jnp
jecxz
and
add
xor
inc
xchg
js
aaa
fsubp
mov
testl
jno
cli
add
fnstenv
adc
out
push
push
xor
orb
xor
test
add
mov
push
fwait
out
dec
pop
cli
lret
and
test
xchg
and
outsl
int3
pop
sti
mov
mov
ljmp
sub
stc
mov
out
in
std
dec
push
dec
pusha
cmpsb
mov
out
add
cmp
shll
xchg
das
fucomi
and
out
leave
test
out
xlat
mov
addb
pop
push
and
ds
divl
mov
xor
push
pop
add
cmp
out
mov
in
movsb
mov
jl
adc
and
add
test
aam
jae
mov
sub
push
pop
pushl
mov
xchg
mov
out
jge
mov
shll
pop
push
fdivrl
add
mov
jo
lcall
xchg
adc
inc
movsl
sbbb
pushf
test
mov
lds
dec
les
xor
sub
pop
push
mov
xchg
inc
stos
out
or
jbe
cmp
xchg
mov
or
cmc
aam
mov
test
roll
xchg
mov
xchg
fbstp
and
xchg
inc
cmpsl
jae
inc
pop
enter
clc
and
loope
popa
or
xchg
and
das
cmpsl
pushf
int3
add
jbe
test
repnz
xor
mov
jne
mov
sbb
push
cmp
int3
aaa
scas
inc
push
xlat
adc
out
sub
pop
hlt
add
bound
xchg
loopne
sub
dec
inc
or
dec
mov
inc
dec
outsl
mov
pushf
neg
in
add
xchg
push
inc
stos
jge
cmp
ja
sub
pop
xorb
mov
push
xor
inc
push
mov
outsl
mov
jno
int3
mov
inc
xchg
mov
mov
push
sbb
jns
sub
sbb
dec
inc
cmpsb
xor
mov
lods
inc
fmul
aad
int
add
jle
mov
jecxz
stc
rorl
mov
push
xchg
negl
divb
sbb
mov
mov
pop
pop
fmulp
mov
pop
mov
shrb
test
jae
push
je
popf
lods
subb
lods
les
lahf
inc
icebp
dec
sub
and
mov
nop
and
lea
mov
inc
cmp
ss
lahf
mov
sti
pop
test
arpl
mov
mov
push
insb
mov
jmp
fidivs
add
xchg
call
dec
lods
lret
inc
fadd
mov
dec
mov
lahf
jbe
mov
insb
dec
adc
cmp
outsl
int3
arpl
xlat
pop
mov
push
jmp
fnstenv
scas
leave
stc
fisubs
out
push
scas
popa
mov
test
clc
fwait
pop
arpl
cmp
jnp
cmp
adc
adc
clc
mov
xchg
push
push
int
cld
cwtl
mov
pop
in
out
mov
and
cs
jns
out
add
inc
jle
popa
outsb
jbe
dec
frndint
and
or
cmc
scas
adc
shlb
inc
pop
imul
sahf
fs
pop
in
flds
jnp
cs
and
push
sbb
pop
lods
fdivl
scas
mov
into
mov
scas
nop
jl
and
mov
rorb
push
fwait
cmp
inc
push
imul
cmp
dec
sbb
repz
adc
jns
ret
cmp
and
dec
repnz
mov
jne
mov
mov
lcall
push
pop
mov
mov
sahf
push
add
jne
add
inc
stc
call
rol
jbe
jo
daa
ds
and
fstp
dec
int3
shr
lcall
jo
fldt
mov
add
xchg
icebp
xor
and
adc
fs
push
pop
jmp
mov
lret
or
push
or
xor
mov
sbb
repnz
jb
sbb
add
mov
faddl
jle
mov
pop
push
inc
xchg
inc
mov
popf
sbb
push
insb
addb
cmp
imul
scas
arpl
xor
add
pop
xchg
fmull
xor
fcmovne
sub
dec
inc
jne
inc
rolb
push
scas
add
cli
cmp
push
and
out
push
jp
jle
jo
dec
adc
enter
imul
push
iret
loopne
and
inc
adc
xor
or
sub
add
mov
dec
rolb
int3
cmp
sbb
subb
out
push
dec
les
hlt
dec
mov
pop
mov
sbb
xchg
add
xlat
pop
leave
dec
aaa
xor
mov
mov
scas
lea
pushf
sbb
and
jb
loope
je
pop
pop
cmp
mov
adc
sub
pop
mov
mov
dec
sbb
ret
addr16
pop
sbb
mov
jno
cmc
pop
cmp
testb
push
or
adc
and
out
ficomps
push
cs
mov
sub
add
inc
xlat
or
mov
jecxz
int3
mov
lret
in
mov
aas
inc
ds
in
and
insb
dec
pop
stc
inc
out
mov
call
test
in
pushf
insb
cmp
xor
dec
fdivr
push
jnp
inc
add
outsl
insb
jnp
pop
jg
adc
les
add
sub
arpl
out
aaa
xlat
cmpsl
mov
or
movsb
shl
mov
pop
rcr
mov
lds
lods
dec
fs
lea
push
inc
xlat
add
int3
stc
cmc
jae
pop
gs
dec
addl
mov
and
addr16
lods
shlb
sbb
pushw
testb
push
jmp
add
sub
push
jae
addl
sub
push
sbb
inc
pop
fwait
and
sub
sub
inc
fs
fwait
cmp
out
lret
je
cmc
mov
daa
xor
mov
out
icebp
scas
pop
dec
add
lods
adc
xor
sbb
fmull
adc
outsl
fwait
pop
push
in
stos
ret
xor
adc
pop
out
test
daa
sbb
in
sbb
sub
cmc
or
or
jmp
mov
popa
sbb
adc
arpl
sub
and
ss
js
mov
xor
xor
inc
jle
pop
inc
xchg
jle
or
push
int
mov
mull
mov
popa
inc
cmpsl
mov
ja
lods
mov
test
pop
mov
mov
fwait
push
adc
sbb
je
scas
frstor
cmc
out
into
cmp
imul
jecxz
cmc
lahf
push
fimull
mov
fdivrs
sub
mov
neg
mov
decl
jns
ret
push
fldcw
out
jg
movsb
or
add
ss
push
out
dec
test
shll
gs
ss
lods
cli
dec
dec
or
sub
cli
jnp
add
test
fwait
lods
mov
mov
cwtl
lds
sub
cmp
movsl
mov
or
arpl
in
fcoml
push
nop
cmp
mov
and
lods
mov
ret
xchg
pop
ffreep
inc
push
shrl
or
adc
cmp
sbb
and
shr
ja
mov
cmc
cmc
sbb
std
adc
pop
enter
shl
mov
push
push
add
inc
shrb
inc
loope
fsubr
lods
fdivrl
es
xor
jnp
pushf
fdivr
pop
sbb
mov
outsb
imull
enter
fs
pop
inc
xchg
pop
leave
loop
imul
adc
xchg
je
and
cmp
inc
push
test
lret
add
push
nop
sbb
xchg
adc
mov
std
xor
cmp
adc
out
inc
arpl
push
jmp
mov
lods
xchg
adc
rorb
inc
aas
fdivl
sti
les
mov
in
mov
xchg
mov
mov
popf
sbb
mov
cmp
jns
jecxz
lea
pop
jns
call
adc
mov
in
or
out
loop
mov
sarb
adc
enter
xlat
popf
jb
mov
jmp
cmpsb
add
or
enter
test
inc
mov
adc
jmp
inc
mov
in
or
inc
push
xchg
scas
fsubrp
sbb
mov
popf
pop
inc
inc
mov
mov
bound
sub
mov
cmpsl
mov
jne
push
and
jns
test
mul
rcr
mov
cmpsl
cld
dec
in
push
iret
popa
xchg
sub
mov
xchg
push
jmp
ret
gs
in
in
cs
mov
and
ret
cltd
mov
test
iret
ret
hlt
cmp
jmp
lcall
ret
jp
lea
loop
pop
cmp
add
mov
fwait
cmovbe
out
insb
fisubs
icebp
add
pop
leave
inc
push
cltd
movsl
out
adc
shll
inc
out
mov
push
mov
sarl
xchg
pop
sub
sbb
je
xchg
mov
xchg
jp
insb
cmpsl
out
cwtl
cmc
add
aad
inc
pop
xor
es
hlt
mov
cmp
popf
out
fwait
mov
clc
xchg
ret
or
dec
cmp
shlb
cmp
mov
jp
scas
jle
mov
xchg
xlat
ret
xchg
add
shrl
outsl
or
or
orl
push
out
pop
mov
mov
imulb
dec
in
dec
out
sbb
push
lret
adc
mov
push
adc
negb
movsb
call
bound
out
pop
iret
mov
dec
mov
call
andl
push
dec
jp
sub
insb
imul
dec
rcll
test
jmp
pop
cs
inc
jle
push
popf
nop
inc
lret
pop
push
bound
dec
das
inc
sbb
xchg
in
cmp
adc
sub
push
fisttps
cld
pop
in
outsb
idivb
aaa
pushf
pusha
add
pop
inc
insl
mov
sbb
mov
aaa
js
xchg
subl
add
sub
sub
sbb
push
xor
sbb
inc
cs
imul
bound
and
xor
pushf
lods
pop
cmp
cmp
outsl
aaa
dec
and
mov
push
inc
push
xchg
sub
mov
push
mulb
inc
aas
xchg
pop
arpl
lods
adc
xor
or
fstpt
push
ljmp
push
enter
pop
hlt
mov
testl
xlat
mov
decl
pushf
fsubrs
or
mov
mov
xor
aam
clc
daa
test
xchg
mov
jns
fisttpl
popf
xor
add
xor
je
mov
sbb
imul
push
mov
mov
sarb
adc
nop
out
sbb
cwtl
jg
inc
repz
mov
imul
push
pusha
insl
insb
sub
cld
inc
rorl
and
sbb
test
or
xchg
clc
adc
aaa
rcrl
fimull
pushf
or
sbb
int3
xchg
dec
mov
and
insb
xor
loope
or
test
mov
sbb
jo
cwtl
mov
addr16
call
jg
dec
clc
push
leave
nop
loop
xor
cmp
sbb
push
xchg
lret
sarb
mov
and
mov
je
test
jle
jecxz
filds
pop
mov
bound
mov
int3
or
negb
jo
fidivs
push
test
lods
outsl
movsb
jge
inc
fs
orb
outsl
xchg
jecxz
pusha
dec
xor
dec
loop
rclb
and
fucomp
mov
or
js
shrb
lahf
inc
int3
xor
jb
in
andl
ljmp
push
adc
cmp
fwait
add
jge
xor
sub
push
cmp
push
sbb
rol
out
lret
add
mov
out
pop
clc
in
push
test
sarb
mov
sbb
sbb
push
in
mov
fwait
cmp
mov
mov
andl
cmpb
andb
cli
lds
dec
mov
dec
cmp
aad
scas
fsts
sahf
imul
loop
test
inc
or
pusha
adc
stc
out
adc
clc
mov
pop
mov
dec
or
inc
ret
fimull
jmp
lods
pusha
sahf
dec
sbb
mov
mov
xlat
xchg
fmul
xchg
jb
or
jae
imul
jo
mov
rorb
mov
xchg
cmpl
lcall
scas
inc
jo
stc
ret
dec
js
sub
movsl
dec
mov
jg
dec
out
cmp
mov
idiv
les
dec
push
cmp
push
and
popa
mov
inc
loop
pop
xor
pop
cltd
addb
xlat
mov
cmpsb
mov
xchg
jg
adcl
mov
out
cmp
adc
dec
in
inc
cmpsl
scas
popf
jg
out
dec
out
cmc
mov
dec
lods
and
cwtl
adc
frstor
push
loop
ss
lahf
inc
rol
das
data16
shlb
dec
divl
xor
lcall
add
jb
cmp
outsl
fildll
loope
jb
push
inc
xchg
in
and
push
xor
in
fsubs
mov
fcomps
push
add
imul
shll
inc
fld
popf
cs
mov
dec
mov
pop
cmp
adc
clc
lds
jne
ret
lcall
mov
in
vmread
add
shrl
add
aad
paddw
sbb
sbb
sub
sbb
or
gs
sub
cs
int
in
or
xor
jno
fildl
repnz
pop
add
fimuls
int3
cwtl
add
imul
adc
sub
inc
jl
pop
mov
fnstsw
dec
lds
mov
mov
adc
push
icebp
push
and
dec
mov
fbstp
shlb
cmp
xchg
ror
stos
in
idivb
cs
xor
flds
jno
insl
jl
mov
add
fldenv
enter
sub
sahf
dec
dec
sbb
sbb
push
cmp
pop
push
loopne
arpl
fimuls
xor
push
jge
xchg
xchg
lcall
lods
mov
sahf
inc
or
test
add
idivb
stos
jns
cltd
add
jl
in
in
add
out
sbb
sub
insb
arpl
cmovle
push
addr16
pop
adcb
inc
stos
push
dec
lcall
imull
xchg
add
mov
adc
scas
pop
pand
movsl
ja
out
xchg
jp
frstor
and
sub
imul
insl
dec
ficomps
cmp
popa
or
inc
xchg
int
mov
rclb
push
lea
and
adc
lret
mov
test
mov
xorb
rorb
mov
jbe
xchg
cli
lcall
mov
xchg
fldcw
mov
mov
xorl
jno
sub
scas
push
sub
pop
cmpsb
push
mov
adc
fs
mov
cmp
in
dec
les
mov
repz
popf
ljmp
mov
xor
inc
cmpb
sbb
sti
scas
shrl
add
jns
mov
cmp
dec
bound
ljmp
xor
xor
sub
inc
inc
jne
xchg
mov
loope
das
test
std
mov
xchg
popa
inc
sub
scas
outsb
aad
xchg
or
test
pop
dec
clc
addl
sub
jbe
cmp
das
in
imul
les
fisubs
arpl
inc
scas
lcall
dec
sbb
mov
in
inc
jns
xchg
jge
pop
imull
sbb
sahf
addb
scas
and
pop
mov
push
xor
sti
in
jns
dec
inc
pop
dec
ljmp
fwait
and
mov
add
mov
fiaddl
popa
push
stos
dec
ret
lcall
rcll
add
xor
test
mov
stc
or
sub
shll
aaa
cltd
xlat
mov
imul
in
cmp
pop
pop
aaa
pop
es
mov
jl
ds
adc
push
sub
loopne
or
and
and
sbb
adc
dec
lea
es
sbb
subl
add
das
sbb
out
in
push
test
push
fwait
dec
mov
pushf
pop
push
fsubrp
inc
imul
dec
arpl
clc
loope
je
das
int
adc
sti
inc
inc
jge
mov
inc
outsb
scas
das
out
insb
test
jno
int
push
jle
fucomip
pop
jo
cmp
dec
push
imul
fwait
mov
mov
test
std
cmpsl
scas
je
or
lods
aad
dec
not
loopne
pop
xchg
test
cld
jl
jno
hlt
fcomps
or
mov
xchg
sub
mov
mov
dec
stos
xchg
lcall
cli
pushf
loope
cmp
mov
aad
lds
repnz
arpl
in
cmp
shlb
push
mov
mov
lret
pop
hlt
sti
cmc
out
cmpsb
ss
inc
cmp
or
stos
pop
pop
or
fldenv
mov
test
mov
movsl
pop
popa
dec
test
int
xchg
pop
mov
xchg
int
enter
hlt
stos
fsubl
clc
fucomi
or
out
divb
int
mov
xchg
in
dec
jns
push
xchg
ret
sbb
rclb
aas
mov
cmpsb
mov
xlat
iret
push
push
sar
gs
sti
sahf
pushf
add
dec
dec
ds
shl
mov
cmc
pop
adc
xchg
and
fadd
sbb
mov
mov
mov
jmp
cmpsl
sbb
pop
test
test
frstor
push
lds
xor
ret
push
lods
movsb
xor
cmpsb
sti
mov
xchg
lods
pop
outsb
jo
mov
inc
dec
xchg
scas
xchg
pop
dec
xor
movsl
rcll
cli
loope
adc
test
add
call
push
or
out
jmp
push
sbb
jp
xor
dec
icebp
inc
scas
subl
sub
cli
cmpsb
test
cs
or
dec
cmpsl
xchg
pop
lds
pop
bound
xlat
mov
dec
mov
lock
adc
mov
inc
add
cmpsl
js
outsb
push
inc
inc
push
test
mov
jae
pop
push
inc
or
mov
mov
cltd
mov
int3
pusha
outsb
pop
push
in
sbb
sub
psllw
sbb
or
pop
jle
bound
inc
pop
sbb
fwait
and
add
vsqrtsd
pushf
pushf
xchg
inc
mul
cmp
dec
enter
cmpsb
out
stos
or
or
pusha
fcoml
xorl
adc
sub
int
xchg
bound
dec
int
popf
js
lods
cmp
out
insb
out
mov
leave
mov
cmpl
call
repnz
add
cmp
xchg
jmp
movsl
bound
repz
adc
mov
les
into
mov
sahf
pushf
int
dec
stos
movsb
inc
repnz
test
adc
cmp
fsubs
push
and
rcll
pop
in
sub
xchg
outsl
jg
into
iret
mov
ds
scas
dec
fdivr
in
mov
lock
fwait
nop
subl
xor
add
popa
mov
dec
push
or
aam
push
lcall
adcl
push
sahf
sub
bound
pop
inc
sbb
xorl
and
insb
lods
in
dec
xchg
dec
mov
ds
leave
movl
iret
sbb
or
pop
sub
cmpsb
imul
sti
xchg
test
push
lret
mov
pop
fwait
inc
cmc
test
mov
leave
inc
push
test
loopne
cwtl
jecxz
insb
push
mov
sub
push
mov
mov
push
or
jl,pt
addb
mov
xchg
aad
jo
arpl
ljmp
xchg
jmp
outsl
dec
sbb
insb
rclw
mov
ja
xorb
shl
cmpsb
push
mov
adc
outsl
pop
int3
hlt
mov
leave
xor
outsl
mov
cmove
sub
xchg
or
ja
sarl
out
add
fsubl
in
ss
sub
subl
aam
and
push
test
stos
test
inc
dec
out
movsl
inc
loopne
fcompl
push
dec
das
std
sub
std
dec
pop
mov
xor
mov
fwait
movsl
dec
xor
cltd
sahf
push
scas
pop
fidivrs
cmp
sbb
mov
and
xor
mov
cwtl
jns
or
iret
mov
add
push
cmp
lcall
iret
pusha
in
and
push
scas
push
mov
cmp
cmpl
sbb
or
sub
pop
pop
and
adc
pop
inc
in
imul
adc
push
out
cmpsl
lds
pusha
jno
bound
xorb
push
in
xchg
push
stos
xchg
sub
mov
iret
arpl
es
sub
addr16
mov
lahf
dec
rorb
push
push
notb
mov
sub
xchg
mov
sub
mov
popf
sti
mov
out
mov
stc
mov
loopne
fadds
adc
jecxz
push
push
jp
loop
or
sar
push
stc
sub
es
cltd
stos
sub
pusha
or
mov
loopne
cs
xchg
adc
or
inc
push
popa
jns
stos
jmp
popa
scas
dec
jecxz
imul
and
jae
test
mov
popa
push
arpl
int3
cmp
cmp
xchg
inc
jbe
dec
and
adc
sub
pop
xchg
repz
adc
popf
dec
mov
fst
mov
pop
pop
dec
data16
push
dec
or
inc
movsl
pop
insb
ss
push
cmp
adc
mov
xor
add
mov
test
jnp
inc
pop
aad
xchg
xchg
movsl
repz
fstpl
insb
mov
cmp
movsl
jo
inc
pusha
sbb
outsl
es
sbb
xor
cmpsb
inc
mov
test
out
mov
fs
test
nop
or
inc
push
lods
xchg
pop
js
test
lds
xor
mov
shl
std
stos
jmp
icebp
adc
int
scas
pop
jmp
xchg
mov
movsl
fsts
mov
inc
jns
shrl
rolb
ja
mov
in
in
bound
inc
jp
imul
test
insl
add
setg
lcall
push
fwait
and
push
mov
icebp
add
popa
xchg
push
mov
daa
pop
stos
fidivrl
sbb
jae
cmp
flds
cltd
xchg
dec
lds
lods
pusha
or
mov
push
and
es
and
lahf
rcll
dec
sub
loopne
popa
cmp
mov
sarb
pop
int
arpl
movsb
ffree
sub
pop
outsb
xchg
sub
lock
add
imul
jns
sarl
fwait
sti
sbb
outsl
mov
div
add
lds
and
hlt
jecxz
and
jp
sbb
popl
add
jecxz
xor
xor
cmp
adc
inc
adc
movsl
adc
xor
stos
adc
lods
enter
xor
insl
ret
cmp
cmc
mov
sbb
cltd
cli
xchg
int3
cmp
in
jae
mov
int
inc
sbb
push
xor
cwtl
mov
movsl
dec
lods
sbb
daa
dec
addb
out
jno
cmp
mov
sbb
fiaddl
fidivs
lods
jg
sahf
out
icebp
adc
mov
dec
out
or
jbe
xor
mov
arpl
std
xor
aas
push
xor
jle
xchg
filds
stos
or
fcomps
in
stos
lret
pop
repnz
nop
add
jp
ljmp
fcomps
shrb
mov
icebp
sub
ror
and
push
jbe
sti
jmp
xor
dec
push
bound
cltd
lds
cmp
xchg
lret
and
icebp
fildl
out
rclb
or
sbb
imul
adc
inc
call
push
xchg
push
cmp
sti
or
mov
into
cs
or
add
mov
stos
scas
rolb
or
add
dec
jbe
push
test
repnz
xor
loope
xor
test
push
orl
mov
xchg
inc
cmp
jno
mov
add
bound
mov
add
cltd
sbb
push
and
testl
jl
es
mull
mov
fldenv
jo
xlat
fimuls
aad
xchg
cmp
mov
adc
mov
mov
nop
and
sub
mov
lret
xchg
dec
mov
pop
repnz
xor
and
mov
push
andl
cmpsl
add
sahf
movsb
jno
sub
push
jmp
into
sahf
cli
xor
mov
test
les
leave
and
daa
out
add
sbb
ret
cmp
ret
mov
outsb
js
add
out
mov
sub
cmp
pop
sarl
sbb
iret
loop
icebp
and
outsb
fsubrl
sbb
sbb
pop
test
mov
add
fsub
mov
mov
jge
dec
xor
loopne
lea
rcrl
adc
pop
jge
jmp
daa
mov
jbe
popf
mov
adc
into
rep
inc
movsb
fildl
inc
inc
dec
mov
dec
jmp
aas
les
mov
inc
shrb
lcall
loope
xchg
nop
dec
mov
mov
xchg
mov
inc
pop
jge
pop
insl
lcall
cmp
ss
fisubrl
mov
ffree
xor
stos
dec
or
cmpsl
xchg
or
pop
add
in
in
sbb
xchg
lea
push
inc
push
and
sbb
jmp
mov
pop
mov
jo
push
dec
adc
push
mov
and
mov
and
dec
adc
xor
aad
sbb
push
add
bswap
roll
lea
cli
pop
ja
mov
mov
jecxz
outsl
cmp
or
cmp
in
jae
mov
add
ljmp
lret
sbb
pushf
sahf
xor
fs
iret
cmp
and
inc
sbb
fsubl
ljmp
adc
imull
outsb
rclb
push
pop
adc
data16
xor
or
inc
jns
je
stc
test
pop
scas
xchg
xchg
loope
lahf
inc
dec
in
mov
push
and
loop
mov
jle
pop
sarb
clc
pop
aaa
shlb
push
mov
mov
jbe
nop
sbb
sub
inc
cmc
rcll
mov
push
rolb
rcr
outsb
add
pushf
sbb
imul
pop
and
adcb
fwait
lahf
mov
and
arpl
push
out
push
pop
cli
mov
fsubl
loope
xchg
fstl
sbb
fistpl
scas
mov
xchg
in
push
inc
mov
inc
outsl
popa
jo
es
xchg
fiaddl
mov
pushl
pop
jmp
std
fwait
xor
sub
lea
jge
xor
mov
cltd
sbb
fisubrs
cmp
mov
lods
popf
mov
push
xchg
repnz
pusha
loope
xor
outsb
mov
pushf
sti
push
out
jmp
sub
mov
add
adc
xchg
adc
fs
cmp
sub
pop
jbe
push
lahf
mov
adc
nop
dec
mov
insb
lret
mov
and
aas
mov
fdiv
lret
stos
jo
cs
jge
bound
mov
jnp
bound
out
test
movsb
adc
mov
xchg
loop
push
insl
call
push
inc
jmp
addr16
loop
sti
add
jnp
or
lods
xor
das
push
shlb
push
cmpsl
xchg
scas
mov
int3
add
movsb
jl
jns
scas
lcall
mov
bound
sbb
adc
sbb
cmp
dec
data16
xchg
lock
insl
sbb
push
cmp
xlat
retw
sti
loope
bound
pop
das
ljmp
or
add
scas
lcall
inc
sub
mov
sbb
push
sub
mov
jecxz
int3
dec
and
dec
fimuls
aam
mov
adc
hlt
xor
xor
insl
pop
int
mov
mov
cwtl
cmp
cwtl
xchg
mov
mov
dec
jo
stc
add
inc
sub
mov
fsubrs
cmpsb
sbb
adc
stos
test
or
mov
adc
ss
push
pop
inc
mov
xchg
cmp
mov
aaa
test
test
imul
sub
jne
mov
push
mul
adc
xchg
pop
jle
mov
dec
inc
cli
pop
xchg
mov
jle
iret
dec
popa
pop
cmp
nop
stc
adc
stc
mull
fisubl
mov
mov
fsub
popa
xchg
add
mov
push
cld
scas
jmp
jns
add
and
add
mov
mov
shll
lea
stos
xlat
mov
out
icebp
mov
mov
push
idivb
fs
imul
add
cmc
out
ficoml
ror
aaa
test
cmp
mov
pop
cmp
sub
repnz
ret
inc
addr16
push
enter
mov
xor
push
pop
mov
add
fisttpll
cmp
or
sbb
ret
clc
and
scas
lcall
xchg
lahf
pop
test
ljmp
adc
insb
dec
into
sbb
repnz
push
pop
mov
mov
std
jnp
insl
dec
jg
sarb
push
dec
jp
jno
stos
iret
cmp
or
mov
sti
test
and
sti
mov
dec
popf
xor
xchg
iret
lds
test
imul
pop
xor
jg
andl
pop
fstp
in
paddq
mov
lret
mov
add
subb
jae
insb
push
xchg
daa
mov
insl
jp
sbb
xor
adc
enter
out
mov
leave
sub
mov
jmp
push
std
and
ja
jno
mov
cmp
inc
fcom
xor
andl
inc
pop
xchg
aam
xor
xchg
je
xor
ret
lock
clc
inc
aam
sub
inc
xchg
sbb
adc
inc
fwait
inc
pop
test
mov
dec
xchg
push
dec
adc
lahf
xor
sub
xlat
ja
mov
not
repnz
outsb
jg
clc
mov
cmpsl
push
sub
adc
sbb
dec
xchg
loope
scas
add
cld
jnp
xor
les
and
pop
es
arpl
xor
jae
mov
mov
negb
and
mov
jno
pop
sbb
je
mov
inc
repnz
push
fs
mov
aas
mov
sti
lods
cmp
or
mov
jb
add
sub
jmp
sbb
push
cmp
add
jno
divl
adc
push
sti
mov
in
cmp
pcmpeqw
test
xor
push
cmp
inc
sbb
pmulhuw
jbe
mov
lock
dec
movsb
lret
or
in
lret
mov
stos
imul
idivl
jmp
dec
lds
pop
arpl
push
xor
sahf
add
addr16
lock
mov
add
mov
in
cmp
or
cmp
test
jl
les
add
xor
ljmpw
jo
cltd
sub
and
jno
mov
or
test
mov
pusha
cltd
mov
or
and
es
xor
pop
dec
adc
outsb
popf
mov
mov
ficoml
dec
ficompl
or
scas
lock
mov
cmp
jb
pop
shrb
push
stc
inc
jle
and
and
jmp
cwtl
repnz
insb
cli
push
push
lods
cltd
dec
dec
aaa
stc
ror
add
dec
jge
dec
sub
pop
nop
cmp
or
xor
mov
mov
in
jmp
sub
push
adc
and
es
outsl
or
cmc
xor
sbb
sub
and
sub
ljmp
aam
add
push
outsb
lret
lea
inc
inc
jmp
mov
dec
sbb
inc
mov
rolb
and
popf
in
sub
shrb
stos
stos
mov
sti
xchg
dec
inc
mov
mov
mov
mov
stc
icebp
daa
sub
rclw
negb
mov
mov
sub
jo
sbb
xchg
cmpsb
std
dec
dec
cmc
mov
lock
je
pusha
fisttps
push
lock
mov
inc
fwait
xchg
out
mov
fs
scas
jmp
nop
add
sbb
lcall
and
sbb
ret
xor
sub
adc
and
imul
xorb
test
in
jmp
ds
inc
in
or
xchg
out
loopne
push
pop
and
xchg
pushl
push
notb
xor
or
mov
dec
inc
or
mov
and
daa
ss
insb
cld
call
or
and
test
js
aad
and
in
adc
addr16
cmp
mov
shll
out
sub
xlat
sub
dec
mov
ror
jecxz
inc
mov
mov
int3
lods
inc
sbb
push
scas
sub
ljmp
pop
cltd
iret
sar
jg
test
sub
push
ss
xchg
lcall
push
test
xor
addr16
or
jp
xchg
or
mov
lock
adc
push
mov
xor
cwtl
sahf
cmp
jl
push
insb
fwait
iret
sub
sub
pop
enter
lock
add
pop
and
xor
add
push
ret
or
data16
mov
nop
inc
or
fsts
sub
fstpt
push
pushf
push
idiv
rclb
jb
cmp
xchg
insl
ret
and
fdivr
mov
out
out
in
mov
mov
in
push
lret
lea
ja
dec
add
pop
out
popa
jno
mov
pop
jns
dec
dec
sahf
push
sti
cmp
lcall
xchg
icebp
cmpsb
or
add
sub
mov
mov
pop
ljmp
and
test
loope
nop
or
dec
ds
out
orb
movsl
dec
pushf
outsb
lods
pop
xlat
sbb
sub
and
and
xor
gs
repnz
rorl
imul
shrb
mov
adc
loope
icebp
cltd
xor
rcrl
subb
ja
inc
sub
mov
dec
fprem
cmpsb
mov
int3
in
push
or
js
add
xchg
int
mov
adc
mov
aam
mov
mov
movsl
lret
mov
and
jmp
push
cmc
lock
addr16
movsb
cmc
mov
sub
unpckhps
cli
mov
inc
popa
jb
lret
push
repnz
mov
xor
sbb
sbb
dec
mov
mov
cmc
or
jge
sbb
mov
fistpll
ficoms
dec
xlat
lods
xor
test
mov
add
inc
pusha
pop
jbe
jo
xor
sbb
or
jo
imul
xchg
rolb
pop
loop
lahf
add
cmp
in
mov
xchg
sarl
pop
sti
xchg
xchg
testl
jnp
iret
xchg
xchg
mov
xchg
stos
insl
hlt
xor
cmp
pop
movsb
sub
lcall
mov
orl
pop
mov
es
rcr
pop
dec
insl
out
in
out
orb
jae
and
xchg
lods
je
mov
lret
insb
sub
dec
mov
mov
xchg
pusha
push
icebp
cld
add
outsl
daa
add
aaa
imul
fwait
mov
sub
lret
addb
or
aaa
imul
std
pop
sub
pop
xor
iret
cwtl
jo
pop
xchg
pop
and
cmp
push
arpl
sbb
xchg
stc
int3
pop
popa
mov
mov
push
sbb
mov
outsb
add
xor
sub
inc
jg
mov
lret
test
mov
mov
fmuls
cwtl
dec
jns
hlt
cli
and
mov
mov
mov
cmp
cmp
xchg
in
dec
cmp
xchg
mov
mov
jmp
fs
std
and
stos
sbb
pop
pop
imul
xorl
sbb
or
or
sbb
rcll
in
and
dec
adc
iret
mov
mov
or
ljmp
insb
es
andl
sub
out
es
test
push
test
lods
not
imull
popf
and
subb
push
add
mov
push
add
aad
mov
out
jle
jbe
outsl
subl
and
jb,pn
pop
mov
pop
push
push
lahf
mov
adc
stos
js
ds
mov
mov
sti
out
adc
fwait
lods
iret
arpl
add
pop
xchg
mov
sahf
push
inc
rolb
loope
xchg
or
pop
or
add
mov
xchg
inc
jns
xchg
out
fsubrl
pop
aad
cmp
lds
add
fucomip
out
sbb
dec
es
xchg
nop
mov
in
outsb
jnp
lock
imul
inc
jecxz
call
jne
pop
adc
jne
aaa
dec
mov
sbbb
enter
loope
iret
fmuls
sahf
shll
inc
cs
outsb
adc
add
stos
ret
in
cmpsl
lods
cmp
mov
out
ror
mov
mov
jl
fisubrl
sub
lcall
sub
and
adc
cmp
sub
xor
add
ret
sub
insb
push
xchg
sbb
mov
inc
cmc
xchg
movsb
jbe
bound
arpl
xchg
sub
push
cltd
repnz
mov
cmpsl
mov
pop
xchg
mov
leave
sub
add
adc
mov
lock
and
loop
stos
ret
movsb
mov
stos
mov
xor
cltd
sub
popf
inc
add
push
incl
dec
mov
add
sub
iret
decl
mov
sahf
add
arpl
xor
subb
xchg
pop
mov
mov
adc
aam
xchg
dec
movb
mov
adc
xchg
fs
pop
repz
mov
shll
mull
push
pop
push
sub
scas
andb
pop
lahf
fisttps
xor
std
pop
add
jle
js
mov
or
gs
divb
fcoml
mov
mov
aaa
mov
rcrb
lahf
jecxz
jle
push
lcall
into
idivl
int
lds
jno
loope
and
inc
in
setno
xchg
mov
xchg
loopne
xchg
pop
or
cvttps2pi
add
out
das
pop
jae
cmp
sbb
in
or
sbb
cwtl
inc
push
enter
mov
hlt
sarl
sbb
sub
sub
gs
repnz
push
jmp
xchg
sub
repz
jns
inc
jnp
or
mov
or
in
mov
in
sahf
sub
cli
das
shll
jno
in
jmp
push
cwtl
mov
lcall
cmpsl
loop
incl
mov
push
xchg
mov
ja
adc
pop
rcrl
int3
and
lea
mov
xchg
jg
sbb
lods
xchg
sbb
pop
mov
pop
sbb
mov
jge
push
ja
int3
iret
or
dec
and
mov
or
cmp
pop
add
test
jmp
dec
dec
jecxz
into
pop
arpl
hlt
or
xchg
imul
aad
pop
mov
mov
mov
mov
xchg
sti
cmpb
lods
into
out
insb
ljmp
lea
sbb
dec
cmc
hlt
mov
lahf
adcb
gs
add
mov
ss
push
adc
sbb
mov
jmp
subb
xor
mov
hlt
fstpt
ret
mov
call
int
test
and
movsb
and
mov
ds
adc
iret
sbb
jge
jle
add
loopne
inc
repnz
cwtl
inc
fcmovb
sub
ljmp
test
dec
xor
call
sub
sub
out
shl
push
push
mov
loopne
mov
or
mov
cmpsl
je
cmc
fdivrs
mov
xor
hlt
stos
mov
enter
jecxz
push
fisubl
push
fstp
and
fwait
pop
mov
pop
mov
jns
pushf
dec
lock
xor
into
jae
jo
lods
idivb
mov
adc
lods
cmp
mov
push
mov
mov
lds
xchg
mov
nop
inc
aad
push
fmull
sbb
into
mov
adc
bound
ljmp
cmp
inc
mov
mov
and
movsl
mov
into
and
cmpsl
sbb
rcrb
jmp
dec
adc
pop
mov
cmpsl
cmpsl
inc
pop
loope
paddq
icebp
sbbl
or
sub
loopne
aam
insl
cmp
xchg
push
mov
jo
bound
xlat
fnstcw
jbe
xor
daa
mov
mov
mov
ficomps
sub
dec
push
xor
xchg
adc
pop
fcmovnu
mov
xchg
lods
insb
icebp
pop
adc
push
mov
pop
daa
ret
loopne
jecxz
sahf
mov
push
mov
push
xor
xor
mov
xchg
lock
pop
hlt
adc
out
in
insl
leave
sub
cmp
mov
jae
sbb
lods
sub
push
mov
ret
daa
movl
inc
inc
fisubl
clc
dec
inc
bound
xchg
mov
ret
enter
mov
fdivrl
stos
add
vaddps
scas
and
mov
shrb
mov
out
mov
and
mov
jnp
and
pop
shl
mov
and
lock
cmp
pop
fwait
xor
cmpsb
out
xor
mov
test
mov
or
pop
outsl
push
daa
cmp
jg
es
movsb
push
jae
mov
jp
mov
call
dec
lret
lods
sub
mov
loope
xchg
hlt
jmp
xchg
das
mov
in
push
lret
pusha
lods
add
cmp
xchg
adc
dec
stos
out
into
lahf
xor
jmp
or
and
push
jns
adc
sbb
in
pushf
les
movsl
mov
dec
adc
paddsb
cmpb
mov
dec
adc
push
or
fsub
clc
data16
xor
push
mov
xchg
mov
push
inc
in
cmp
out
sub
pushfw
imul
lds
add
arpl
aaa
lret
push
jle
lods
leave
push
sbb
cmc
adc
and
lret
scas
mov
scas
ljmp
mov
mov
dec
jl
lods
xor
setae
cmpsb
call
fisubl
pusha
subl
stos
push
xor
jmp
and
dec
insl
sbb
sbbb
xor
fldt
cmp
outsl
jmp
inc
call
push
xor
rolb
add
int3
testb
enter
repz
push
cltd
dec
nop
push
sub
push
dec
scas
pusha
lods
sub
icebp
imul
push
lret
add
test
loop
mov
subb
jno
inc
sub
out
pop
lret
xchg
pop
add
mov
aaa
add
cmp
lods
xchg
mov
pusha
aaa
fwait
sarb
and
shrb
and
cmp
mov
jnp
insb
jbe
orb
push
ret
lods
shlb
int3
pop
dec
inc
dec
sub
mov
inc
mov
xor
cld
sbb
loopne
jns
sub
pop
into
mov
mov
testl
inc
sti
test
pusha
cwtl
mov
int
cmp
xchg
add
mov
outsb
in
ljmp
insl
or
mov
jb
add
lahf
sub
std
jbe
fildll
cmp
sbb
movsl
xor
mov
jnp
mov
mov
cld
mov
decl
or
sbb
arpl
aas
push
outsl
addb
dec
fstps
jmp
sub
out
loopne
add
jg
lret
add
add
push
ficoml
icebp
outsb
lcall
pop
xor
sub
xchg
test
push
insb
xlat
xor
fsubs
adcl
lds
inc
out
dec
shr
xor
mov
and
cmp
loopne
xor
jns
add
aam
xchg
push
in
iret
jecxz
cmpsl
adc
xor
cmp
addr16
add
dec
into
xor
aad
push
out
es
push
loopne
addr16
int
inc
ret
xchg
pop
add
popa
lret
push
jmp
mov
into
data16
imul
adc
mov
lea
fwait
sbb
pop
add
aam
sbb
jecxz
sbb
sub
sbb
push
push
sbb
ja
add
inc
cmp
pop
and
fmull
xchg
push
xchg
mov
mov
sbb
fstpl
jno
popf
out
movsb
sub
imul
rcl
xchg
cmp
ljmp
in
xor
xchg
mov
ss
push
pop
movsb
test
lods
sub
je
sub
out
pusha
xchg
std
int3
jno
push
sbb
outsb
pop
lret
movsl
aas
ror
std
dec
inc
cmpsb
repnz
aaa
imul
jle
mov
orb
mov
inc
add
mov
jmp
out
addb
repnz
xchg
mov
xchg
push
pushf
inc
jl
loop
pop
xor
or
cltd
sahf
cltd
fwait
cmc
push
cs
sti
adc
mov
mov
mull
movsl
aam
lock
dec
sbb
mov
xchg
cli
push
pop
add
pslld
and
cmp
pusha
xor
cmp
sub
jno
mov
push
xchg
into
push
adc
jnp
cmp
orb
lock
push
push
fs
xorb
in
fstpt
push
fadd
loope
mov
mov
mov
dec
mov
adc
out
out
push
test
popl
aam
mov
mov
int3
out
xor
jo
cmpl
cmp
mov
mov
int
pushf
in
fs
push
daa
aam
stos
and
mov
cli
dec
mov
xchg
add
mov
cwtl
js
imul
mov
test
aam
movsb
fimull
jmp
mov
les
gs
addb
dec
mov
js
mov
fsts
repnz
loope
inc
cli
cli
loopne
fcoms
ja
cld
or
sbb
loopne
pop
lock
mov
imul
sarl
fisttps
lds
scas
rcll
call
mov
add
push
sahf
inc
scas
rcrb
inc
jae
sbb
orl
shr
jo
ss
ret
mov
jae
lock
movsl
sub
mov
push
adc
jns
mov
cmpsb
loopne
xchg
ret
arpl
dec
fdivs
xor
sbb
jle
mov
or
sti
add
pop
mov
pushf
out
pop
dec
insb
insb
adc
mov
xor
ss
xor
jg
jg
insl
rorl
push
add
mov
mov
into
daa
sub
aad
xchg
outsl
sub
test
lahf
pop
ja
repnz
mulb
shrl
jg
sti
loope
sub
sarl
outsl
jge
loope
jl
jno
dec
les
mov
adc
js
push
test
fldt
fmuls
fisubl
push
adc
adcb
movsl
adc
sub
loop
ds
dec
adc
mov
jle
sub
ds
hlt
jmp
stos
add
xchg
mov
mov
sbb
rcrl
sti
cwtl
inc
fldcw
rclb
sub
cmpsl
push
ljmp
dec
and
ds
aam
jg
xor
cld
adc
nop
mov
jg
imul
pop
pop
sub
imul
repz
pop
xchg
xchg
insl
scas
mov
and
cltd
xchg
mov
jbe
or
in
mov
fdivl
cld
xchg
push
adc
ds
pop
cltd
adc
add
mov
int
pop
imul
jmp
in
sub
inc
adc
sbb
ficoms
mov
inc
mov
andl
pop
inc
pop
outsl
push
sbb
data16
ret
or
popf
insb
stc
or
push
jno
clc
cmp
inc
add
xor
outsl
incb
sbb
dec
mov
and
pushf
outsl
shll
xchg
aad
test
adc
cmpl
aam
or
shll
cmpl
pop
rolb
mov
leave
xchg
fsts
imul
ds
pushf
ficompl
sub
testl
lret
ret
aad
mov
mov
and
insb
mov
xor
jnp
insl
sbb
adc
mov
jecxz
ds
mov
or
and
gs
aas
add
inc
fldenv
jbe
cs
popf
push
pop
inc
jo
cmpsb
mov
jb
sbb
or
ret
jbe
mov
inc
mov
pop
jnp
dec
jae
sbb
mov
test
aaa
loopne
loope
mov
fs
inc
push
sbb
push
jno
mov
cmp
pop
jge
xchg
js
mov
sub
test
loopne
lea
testb
inc
test
inc
mov
inc
or
or
xchg
dec
std
inc
mov
sub
inc
mov
mov
sub
fmuls
shrb
sbb
cli
aam
repz
mov
dec
inc
mov
roll
jbe
fidivrs
inc
jb
stos
push
cmpsb
cmp
idiv
andb
inc
mov
in
adc
dec
test
dec
push
mov
or
sahf
stos
dec
mov
popa
sarb
and
faddl
sahf
out
jmp
push
xor
imul
mov
daa
shll
insl
xchg
push
pusha
insb
das
cmpsl
mov
int
cmpsb
fisubs
adc
jmp
push
sbb
subl
insb
push
xor
lcall
mov
xchg
leave
popf
je
pop
add
dec
fs
lcall
lock
aas
andb
push
push
out
shrb
jge
pop
inc
jmp
adc
and
and
adc
push
mov
sbb
movsl
and
lret
inc
pop
aad
sar
pop
test
push
mov
int
cmp
cmpsb
add
mov
lds
add
fistpl
sub
jge
sbb
cmp
push
cmpsl
jae
dec
and
fwait
test
pop
pop
sti
jmp
ret
inc
imul
xchg
adc
mov
ds
lahf
in
ficoms
in
loope
add
inc
adc
push
xor
xorl
xor
pop
cmp
sbb
jae
inc
cld
sbb
ds
rcr
out
xchg
repz
sti
inc
mov
sbb
daa
daa
arpl
je
dec
mov
iret
pushf
popf
inc
pop
fwait
and
jge,pn
push
sbb
dec
mov
xchg
add
sbb
sbb
mov
adc
roll
scas
mov
push
lea
pop
mov
stc
les
mov
jno
adc
mov
xchg
xchg
dec
jne
outsl
lret
dec
mov
mov
lcall
pop
lea
mov
in
ja
xchg
int
ja
or
fsubrs
je
mov
pop
inc
ds
test
add
aas
mov
mov
lods
into
movsb
lods
mov
inc
or
mov
push
mov
lds
cld
js
or
mov
inc
mov
fstpl
icebp
push
mov
pusha
inc
lods
loop
outsl
jb
sub
cmp
call
dec
or
xchg
cld
fidivl
imul
mov
adc
shll
xor
cmp
push
jmp
cmp
pop
jge
out
cmp
mov
aad
xlat
scas
inc
imul
mov
shl
mov
pushf
aad
and
push
dec
sti
shll
sbb
cmpl
dec
sub
add
xlat
and
push
mov
cmp
mov
xchg
cltd
cmpsl
adc
jo
outsb
add
lds
xor
ja
mov
movd
subb
jb
pop
dec
mov
dec
xchg
and
pop
sub
mov
orb
movsl
inc
push
pop
imul
push
sbb
sbb
cmpl
mov
cmp
adc
femms
add
popa
popf
ja
fistps
jnp
insl
and
pop
out
inc
xchg
je
lret
pop
pop
cmpsb
xor
rorl
jnp
out
sbb
mov
lods
mov
push
ds
lock
mov
sarb
cmp
mov
jecxz
fbstp
fwait
adc
fbld
sbb
xor
out
out
cmp
mov
adc
pushf
in
pop
inc
sbb
dec
adc
push
outsl
sub
pop
out
rcrl
jo
sub
cwtl
in
leave
sub
mov
jl
outsb
and
inc
pop
or
movsb
cmp
out
sub
bound
movsb
in
test
out
add
mov
xor
adc
fcompl
cmpsb
sbb
faddp
or
out
cmp
dec
stos
inc
je
shrb
sub
aam
lods
cmp
popa
inc
mov
je
enter
adc
dec
adc
stc
aad
lods
mov
or
test
repnz
rcll
aas
xchg
loope
daa
inc
das
sub
out
negl
dec
lods
loop
push
mov
push
ret
fs
add
loope
movaps
and
bnd
adc
mov
adc
popf
inc
out
pmulhw
ret
sub
enter
das
mov
hlt
jge
in
je
mov
dec
mov
pop
movsb
push
lret
push
call
xchg
and
rclb
and
sbb
out
xchg
aad
loopne
cmp
mov
inc
push
jle
mov
lea
shlb
and
dec
es
stos
out
popa
sub
add
adc
test
les
pushw
mov
insb
pop
ds
out
and
daa
xor
adc
sbb
out
adc
mov
xor
jp
cs
pop
mov
lret
sub
sub
lds
or
sbb
push
mov
pop
dec
push
subl
subps
fsubr
fsubs
jge
sbb
ds
aas
movsb
into
mov
enter
rol
mov
add
pop
imul
adc
std
xorb
and
fadd
in
in
add
scas
xchg
pop
and
mov
dec
stc
xor
icebp
ja
lret
inc
jno
and
es
stos
fcomps
rolb
dec
pop
lock
outsb
push
xchg
bound
pop
dec
lret
sbb
mov
pop
or
add
lcall
fistps
push
loop
push
adc
stos
sbb
pop
jnp
rcl
loope
lcall
sub
aas
test
pop
dec
and
aad
pop
imul
arpl
xchg
popa
pop
fldenv
sahf
sub
mov
cmp
mov
mov
inc
sbb
dec
push
scas
pop
stc
fildl
inc
stos
ljmp
push
enter
rcrl
loope
sub
jecxz
and
mov
lcall
mov
icebp
bound
lret
fdiv
icebp
jecxz
push
mov
fsubs
ficoml
filds
lods
nop
scas
pop
popf
mov
inc
loope
jo
dec
sbb
scas
sbb
adcl
movsl
cmp
and
in
cltd
mov
mov
xchg
adcb
imulb
ja
mov
aam
inc
sub
mov
or
ljmp
adc
adc
in
push
add
aaa
jae
and
orl
stos
lret
daa
inc
movw
xchg
shlb
adc
push
push
jge
or
push
les
and
dec
mov
adc
cltd
das
mov
movsl
sbb
xchg
sub
repnz
rorb
add
aam
popf
int
test
in
data16
int
fildl
push
sub
mov
fisttpll
aaa
loope
out
sbb
enter
mov
lods
orb
mov
cmp
push
inc
dec
fwait
std
inc
sti
pusha
sbb
and
cwtl
cmp
jns
push
dec
js
mov
pavgw
int
arpl
sbb
pop
pop
shlb
xchg
inc
mov
stos
into
inc
dec
stc
gs
cmp
add
repz
sub
adc
ss
rclb
lods
mov
xor
dec
xor
push
mov
out
cmpsl
cmp
dec
pusha
sub
push
popa
jb
out
daa
add
jae
and
in
leave
in
ret
stos
insl
xchg
dec
jbe
cmp
push
mov
or
pop
out
push
mov
or
rcrl
nop
cltd
cwtl
icebp
ret
pop
sarl
fistpl
mov
xor
pop
dec
jl
adc
repz
repz
test
or
in
cwtl
pop
jp
aad
or
push
adc
sarl
cmp
stos
add
pop
and
and
or
shl
es
sti
fstps
fistps
ja
mov
call
push
pop
in
jge
add
lock
leave
jnp
cltd
xchg
adc
and
mov
mov
xchg
idivl
push
cmpsb
shr
shlb
loop
inc
jb
clc
aad
jmp
push
shr
sbb
ljmp
or
add
inc
dec
ja
rcrb
int3
and
leave
cmpsb
out
movsl
xchg
adc
outsl
dec
or
in
stos
into
mov
push
aam
pop
fbld
mov
adcl
push
xchg
lds
movq
sub
ret
add
mov
addr16
sbb
cmp
mov
inc
push
push
js
iret
clc
push
out
adc
xchg
push
in
call
aas
push
or
sti
adc
aad
and
push
ja
shll
mov
xor
pop
pusha
xor
jl
cmp
and
cmpsb
xlat
and
sbb
lods
jns
push
movsl
mov
aam
inc
inc
sub
xor
pop
inc
pop
xchg
fistpll
add
stos
orb
je
jnp
aam
push
pop
bound
test
pop
push
add
jns
pop
or
in
add
or
and
and
xchg
mov
loop
pusha
mov
mov
in
pop
push
jle
loope
inc
xor
icebp
faddl
push
push
ss
scas
pusha
lcall
fadd
test
push
inc
xlat
leave
add
jge
out
add
xchg
sbb
mov
jne
pop
xchg
xor
push
sarl
sub
sti
jecxz
mov
nop
out
pop
icebp
dec
sub
sub
pop
rorb
std
fldt
pop
data16
or
push
xor
and
and
scas
ret
pop
cmp
adc
sti
out
out
xchg
ljmp
dec
lret
loopne
insl
das
jnp
lods
xchg
inc
mov
push
push
fs
mov
adcb
pop
daa
push
sub
push
and
inc
jno
idivb
add
add
cmp
mov
dec
dec
fldenv
call
xchg
fstpt
sbbl
xor
push
pop
mov
and
repnz
mov
lcall
mull
sarl
outsb
out
leave
stos
call
add
mov
mov
sahf
fstps
cmp
mov
mov
mov
scas
adc
lea
sbb
inc
cmpsb
neg
test
xchg
bound
sub
addr16
jecxz
lret
test
and
push
mov
xchg
add
movsb
pop
sub
je
negl
ljmp
sub
dec
ss
aas
cli
dec
in
out
fstps
cwtl
mov
cwtl
xlat
or
or
aas
jne
pop
adc
outsb
movsl
push
push
pop
mov
push
mov
push
std
icebp
mov
jmp
and
mov
or
jnp
rorl
cmp
gs
roll
insl
pop
pop
lcall
lods
push
mov
inc
xchg
imulb
dec
stc
mov
adc
mov
cld
mov
xchg
call
out
rcrb
inc
fildll
push
out
imul
mov
xchg
repz
jmp
dec
mov
hlt
inc
aad
xchg
test
inc
loope
mov
out
aad
add
push
push
mov
fsubrs
push
xlat
jb
jp
dec
fimuls
xor
orb
xchg
xchg
daa
jb
ret
in
adc
adc
mov
test
cltd
icebp
mov
ret
daa
lock
add
sti
sub
out
mov
mov
subl
clc
rorb
data16
mov
int3
xor
fidivs
pop
lock
and
jecxz
mov
lock
or
fists
jb,pn
mov
sbb
inc
fldenv
dec
dec
jne
pop
sbb
lods
fstpt
pusha
pop
jae
push
repnz
mov
lock
outsl
and
inc
cli
ret
repnz
or
dec
jo
xor
stos
mov
les
and
lea
outsb
call
xor
pop
cmp
mov
add
or
lods
mov
sub
dec
cmpsl
mov
xchg
add
insb
mov
ljmp
ss
jo
or
lock
out
mov
jo
in
je
sub
xchg
dec
je
inc
in
jmp
ds
mov
cmp
xchg
popl
push
mov
out
push
ror
mov
and
sbb
dec
or
leavew
add
and
loopne
pop
dec
in
mov
mov
xchg
insb
mov
jne
nop
outsb
mov
inc
ret
flds
add
mov
or
push
lea
sbb
jge
pop
fsubrp
push
and
dec
mov
jb
push
insb
cli
push
inc
lcall
test
sahf
lret
jns
mov
xor
cmp
daa
das
mov
imul
xchg
jp
insb
mov
pop
adc
inc
jg
jbe
fwait
sbb
movsl
les
aam
subb
and
mov
sbb
jge
jge
xor
addl
push
dec
and
push
mov
bound
daa
add
add
and
and
fstpt
data16
cs
jle
xlat
push
adc
xor
mov
push
sbb
xchg
dec
or
addr16
pop
adc
mov
mov
je
es
out
cmp
jge
pop
sbbl
jp
in
jle
cltd
mov
xlat
or
mov
movsb
dec
iret
adc
inc
aad
cmpsb
jae
subb
adc
pushf
std
or
xchg
daa
aas
jl
test
lret
rorl
inc
xor
or
jbe
sbb
sub
std
push
sbb
push
push
sbb
and
mov
popf
inc
pop
pop
jmp
pop
insl
sub
sahf
add
ja
fs
je
cmp
cwtl
and
dec
gs
insl
nop
imul
adc
jbe
cmpsb
adc
iret
mov
jge
xor
dec
lret
je
in
mov
mov
in
mull
xchg
cmp
pop
sub
pop
mov
cli
and
push
pop
jnp,pt
mov
stos
or
iret
lods
mov
int3
adc
dec
inc
jle
sub
jge
lret
mov
fwait
sbbl
lret
or
push
mov
sti
arpl
xor
mov
test
sahf
fisubl
sbb
xchg
mov
sbb
xor
cmpsb
ficomps
push
ss
add
sub
lods
orl
jae
lret
jnp
mov
mov
xor
std
rorl
push
out
dec
jmp
fisubrl
mov
sti
dec
sbb
arpl
mov
or
sub
js
mov
push
jb
idivb
lret
bound
stc
xor
xor
ficoml
xchg
mov
es
adc
stos
cmp
movsb
out
imul
cmp
cmpsl
ja
pop
mov
pop
shrl
pushf
rcrl
ss
inc
popa
arpl
lods
stc
loope
pushf
into
iret
or
das
ljmp
lods
decb
in
jbe
pop
mov
mov
mov
mov
shrl
adc
mov
js
push
lods
es
xchg
notb
and
jle
push
ret
inc
push
into
enterw
push
repnz
insl
icebp
ja
mov
sbb
mov
lods
scas
mov
mov
pop
addr16
dec
xor
sub
xor
push
in
add
movq
pop
hlt
add
iret
cli
xchg
and
cli
pop
push
adc
aad
shrl
clc
imul
mov
mov
popa
cli
jmp
jo
jl
ja
pop
add
cwtl
add
xor
jp
jmp
aad
push
mov
adcl
push
fld
scas
add
xor
pop
pop
fisubl
out
movsb
sub
cmp
cmc
xchg
push
insb
xchg
icebp
mov
mov
aam
jae
xchg
add
lock
jl
sbb
xchg
push
xchg
mov
test
inc
sub
shll
scas
incl
ss
jp
xor
pop
movsb
push
jle
push
mov
ret
xor
roll
inc
and
insl
mov
lods
mov
das
testl
aaa
xor
and
imul
add
insl
fwait
cld
stc
sub
daa
or
pop
mov
aas
movsb
imul
xchg
push
mov
and
int3
inc
iret
cmpsb
mov
inc
ret
fistpll
out
or
inc
call
lock
sub
and
lds
dec
add
fsubrs
and
repz
xchg
push
push
inc
inc
push
sahf
inc
scas
adc
push
movsb
lret
scas
push
call
xor
xor
bound
dec
lods
outsb
mov
cli
push
mov
lea
xor
arpl
push
xor
pop
mov
or
adc
addr16
mov
enter
inc
lretw
jge
std
push
jge
int3
sti
xor
hlt
jno
std
xor
int
cmp
cwtl
shll
mov
push
fwait
inc
in
xor
cld
sub
push
mov
mov
fisubl
pop
xchg
imul
popf
int
sbb
in
dec
in
adc
push
or
pop
inc
inc
daa
and
in
jle
add
in
fisttps
lret
jge
aam
jo
leave
lock
push
add
daa
jb
sub
xchg
xlat
xor
sbb
ja
orb
imul
inc
mov
mov
xorb
inc
cmp
outsl
adc
mov
push
mov
jp
sbb
jmp
sbb
aad
jl,pt
hlt
mov
call
arpl
mov
outsl
imul
mov
shl
rolb
cmp
xorl
aas
test
push
popf
inc
mov
adc
sahf
cli
mov
mov
addb
scas
jne
xchg
lds
orl
scas
je
arpl
insb
jle
jle
mov
or
test
scas
pop
in
sbb
xor
push
pop
fcomp
mov
out
adc
inc
cmp
inc
adc
jecxz
xchg
xor
add
outsl
pop
mov
cmp
dec
xchg
and
push
aaa
and
inc
sub
test
push
inc
xchg
add
mov
out
push
inc
sahf
jnp
sbbl
call
hlt
call
pop
cld
dec
mov
inc
xchg
sub
rcr
pop
jge
fistps
xchg
xor
rcll
aaa
or
mov
inc
shlw
pop
in
jmp
jns
adc
mov
mov
test
pusha
out
mov
jg
int3
outsb
pop
jle
mov
or
xlat
jne
dec
loopne
jmp
push
ds
or
jge
add
sbb
addr16
stc
lods
rcl
sti
sbb
add
sub
and
bound
sub
mov
xor
or
jp
adc
js
xchg
je
or
ret
jmp
jne
popa
sbb
push
cmp
movsl
jb
jmp
or
repnz
jecxz
push
mov
imulb
xor
mov
cmc
push
cwtl
xor
and
fbstp
mov
test
add
aam
sub
mov
mov
daa
push
xor
cmpsb
notl
shll
push
mov
xor
test
ret
daa
loopne
cmpsl
movsb
shl
jno
fsubrs
xchg
inc
test
test
stos
jecxz
fisttpll
call
fistps
pop
mov
adc
int3
dec
mov
fs
jnp
cmp
adc
push
cmp
xchg
sbb
out
dec
inc
add
sahf
pop
mov
insb
dec
xor
jmp
cmp
sub
fcompl
and
pusha
inc
mov
xchg
mov
mov
cmp
je
jmp
add
sbb
ret
jge
xchg
bound
movsb
leave
imul
andl
inc
repnz
mov
add
mov
push
mov
test
sahf
cmp
sub
mov
mov
lret
out
add
rcr
scas
data16
sbb
sub
std
push
add
xchg
xor
aas
add
add
loope
and
xor
push
rclb
pop
mov
inc
jbe
push
dec
adc
fdivp
jnp
insl
lahf
inc
decl
lahf
out
mov
cld
leave
or
orl
or
sbb
sbb
sti
sub
cwtl
fisubrl
push
inc
jmp
jno
cli
lcall
xchg
jecxz
sbb
out
dec
pop
jmp
inc
jg
mov
pop
jecxz
gs
jb
sub
mov
out
jecxz
pop
sbb
push
iret
fidivrs
faddl
aam
andl
nop
sub
ret
sbb
addr16
xor
pop
in
cwtl
int
fidivs
jbe
and
mov
and
dec
pop
fdivrs
mov
cmpsl
dec
mov
mov
sub
mov
pushf
ja
mov
mov
pop
mov
lahf
adc
sbb
mov
in
add
push
pop
cli
in
add
xchg
sub
pushf
jbe
pop
js
push
cld
arpl
sarl
lahf
mov
inc
rorl
nop
add
aad
mov
lahf
lcall
fwait
nop
movsl
leave
test
add
xchg
push
in
adc
cmp
in
jl
loopne
or
adc
imulb
fidivs
sub
inc
incb
icebp
sahf
inc
into
mov
repz
fildll
xchg
adc
xchg
cmpsl
loop
xchg
mov
inc
and
lret
shll
and
add
test
test
xchg
xchg
negb
inc
lret
ret
loope
inc
ds
xchg
add
sbb
jnp
roll
hlt
inc
test
jne
xchg
repnz
or
mov
call
dec
xchg
aas
lods
mov
inc
lret
mov
popa
pop
mov
xor
add
xor
aam
stos
dec
lret
sub
aad
or
jmp
xor
lret
fisttpll
inc
xor
hlt
or
jle
mov
mov
xchg
or
add
and
mov
xor
fiaddl
ret
jl
adc
xor
cmc
sbb
stos
adc
adc
movsb
xchg
aad
test
loop
mov
mov
mov
out
inc
xchg
stos
fstl
and
jge
lods
push
jnp
cmp
gs
bound
daa
lret
adc
or
fsub
mov
int3
repz
ret
dec
mov
sbb
in
shlb
inc
xor
movsl
int
js
cmp
mov
add
jge
addr16
ss
scas
out
in
push
jb
mov
and
es
ficoml
das
pop
jge
xorl
call
jg
test
imul
in
aam
sbb
jae
subps
pop
imul
inc
bound
cltd
jo
clc
rcrl
cmp
repz
aas
push
xchg
cmp
shr
ss
xchg
mov
pop
movsl
xor
pushf
cmp
imul
lret
mov
lahf
out
and
lcall
mov
or
mov
xor
fs
dec
sub
sahf
jmp
mulb
outsl
xchg
enter
bound
hlt
jge
and
jb
sbb
mov
jns
cmp
scas
xchg
jno
inc
cld
xchg
imul
outsb
addr16
mov
popa
push
stos
scas
jg
sbb
add
jp
test
push
leave
jns
xchg
lcall
fcoml
jmp
push
mov
xchg
mov
loop
push
and
pop
xchg
fldenv
mov
nop
movsb
cld
or
lret
jl
and
pusha
inc
jae
or
fst
cwtl
aad
mov
mov
jb
pop
dec
pop
ficoms
or
adc
pop
js
ja
xchg
pop
sbbl
in
xor
loopne
push
sub
nop
xchg
hlt
pop
pop
cmp
push
pop
scas
cmp
mov
out
cli
and
cmp
xor
sub
loopnew
adc
gs
fmul
mov
lea
add
mov
sub
hlt
fidivrs
sbb
and
jp
cmp
aaa
rcll
notl
fwait
stc
inc
sbb
xchg
mov
sbb
push
and
icebp
mov
adc
jmp
sti
push
outsb
test
hlt
daa
xchg
dec
xor
cmp
xchg
xchg
jle
push
adc
mov
sub
imul
push
jno
ret
mov
shlb
fldenv
jle
inc
mov
dec
sbb
sub
jo
lods
lcall
adcl
fldcw
icebp
ret
mov
in
movsl
mov
int3
mov
je
push
lods
rcl
or
sbb
bound
push
sahf
sub
sahf
jge
roll
adc
adc
ret
rol
loope
insl
add
pop
ds
mov
repnz
inc
sub
add
cltd
loope
jp
leave
xlat
leave
popa
lods
insb
xchg
xchg
scas
xor
stos
adc
xchg
gs
mov
cmp
mov
hlt
xor
lea
loope
test
push
sbb
mov
adc
lret
in
adc
mov
mov
jne
add
mov
cli
das
push
xchg
mov
fiadds
jae
stc
mov
mov
cmpsb
scas
lea
xor
repz
scas
and
mov
sbb
push
xor
mov
adc
push
shrl
sub
in
rdpmc
out
aam
sbb
mov
aam
loope
int
ret
sub
movl
das
or
sub
and
push
ljmp
mov
das
push
cmpsb
je
xchg
stc
inc
add
dec
lods
xchg
or
sbb
sti
jmp
push
sbb
loop
fistpll
cmp
