mov
fistpll
in
ret
mov
sahf
ja
xchg
mov
leave
and
cmpsl
sbb
dec
out
orb
jae
outsb
ret
jae
inc
mov
jo
jle
roll
iret
or
cmp
fnsave
xor
jbe
loop
push
cmp
push
bound
inc
dec
push
sahf
out
in
sub
cld
pusha
pop
mov
and
mov
mov
loopne
add
out
pop
stos
adc
xor
lret
sbb
xor
fisttps
je
mov
jns
adc
dec
ljmp
jo
ljmp
outsb
popfw
rol
sbb
int
ret
cmp
mov
out
sub
mov
cli
js
notb
mov
mov
fbstp
xchg
lahf
xor
and
sub
sbb
aam
jb
cmp
cmp
cli
and
sbb
inc
mov
fisttpl
xor
xor
sbb
scas
push
int
ret
hlt
incb
or
insl
loope
shrb
jnp
jb
and
loope
sbb
icebp
or
ret
shlb
push
loopne
cld
lret
jno
inc
fadds
js
daa
pop
sbb
mov
insl
insb
pop
pop
sub
je
cmp
add
ficoml
jb
inc
scas
popf
jae
mov
xchg
sbb
jecxz
shl
ret
push
jp
push
hlt
iret
out
add
mov
stos
lret
int3
xchg
add
mov
dec
sub
push
add
leave
push
push
jle
addr16
push
fwait
jmp
loop
jg
mov
sti
enter
les
popa
movsl
push
mov
push
mov
clc
adc
pop
cmc
cwtl
aas
push
fbstp
pop
gs
mov
dec
daa
mov
out
ljmp
jl
cmp
mov
ds
xchg
test
nop
test
jp
jl
dec
shrl
mov
testb
push
xchg
outsl
popf
pop
flds
sub
subl
in
sbb
push
add
std
jle
cmc
fisubrl
test
mov
andb
sub
imul
loopne,pt
jae
out
cwtl
push
pop
fisubs
or
in
jb
cltd
outsb
xor
mov
rcrl
mov
cmpsl
sbb
adc
mov
mov
xchg
mov
imul
jg
adc
mov
dec
insb
inc
pop
mov
ret
jb
enter
ss
sub
mov
std
loop
adc
xchg
pop
aam
dec
jne
add
dec
mov
scas
lcall
adc
sub
pusha
rclb
pop
mov
sub
mov
popa
imul
fdivr
test
jmp
cmpsb
and
ficompl
scas
cmp
ds
cmp
xchg
outsl
dec
pop
cmpsl
mov
mov
sbb
aaa
idiv
xchg
mov
sub
or
xchg
gs
and
repz
mov
mov
addb
bound
cs
jo
ret
dec
std
pop
dec
inc
je
add
dec
or
and
and
pop
scas
inc
mov
xchg
movsl
jg
mov
xchg
jbe
mov
push
jnp
subps
icebp
sti
leave
loopne
in
mov
dec
es
ret
dec
cmp
cmc
orl
mov
xorl
jns
cmp
sub
gs
ret
insl
push
sbb
je
test
loope
faddl
lds
es
aas
jmp
dec
mov
pop
jle
in
mov
into
or
mov
xor
mov
stos
movl
fcmovnu
push
sub
in
add
dec
stc
enter
xchg
sbb
inc
jecxz
and
push
or
xchg
into
mov
cmp
add
pop
jo
icebp
add
mov
push
imul
roll
rcll
xor
pop
idivb
mov
shll
fs
push
cmovns
cmp
cmp
bound
rcrb
jb
test
xor
mov
enter
xor
fst
xchg
test
adc
pop
pop
jno
mov
int3
popa
inc
pop
mov
xchg
mov
sbb
push
pusha
adc
rcpps
mov
inc
testb
test
xor
hlt
outsl
mov
fdivr
mov
mov
imul
xorl
and
pop
arpl
xor
xchg
jae
xor
cmp
int3
jle
xlat
sbb
adc
cltd
test
fadd
and
xchg
arpl
ja
aam
stos
add
loopne
jae
push
mov
adc
sbb
into
test
sbb
test
cmpb
xor
loope
cltd
xor
and
and
pushf
sub
rcrl
inc
jle
mov
test
inc
push
lcall
fmull
fsubr
test
aas
sarl
xor
popf
mov
outsl
xchg
fistps
mov
out
aas
dec
cltd
int3
aas
test
mov
and
adc
mov
push
cmp
cld
xchg
jae
dec
and
repnz
jno
fmull
add
pop
lods
sbbb
subb
pop
lahf
bound
je
movsb
pop
mov
es
or
xchg
xor
pop
adcb
push
idivl
cmp
mov
cmp
arpl
leave
lods
inc
or
dec
fs
or
into
push
or
fldt
out
mov
jne
mov
ljmp
das
pop
xor
sub
test
lahf
cmp
xchg
mov
adc
lcall
inc
aas
dec
hlt
sbbl
pop
add
push
sbb
enter
dec
gs
stc
mov
addr16
push
mov
notl
mov
xchg
shrl
and
pop
mov
jo
fdivrl
xlat
jg
shl
sbb
cwtl
jge
fnsave
xchg
dec
inc
dec
adc
mov
cmpsl
fstpt
or
inc
aas
dec
gs
adc
xor
xor
add
sub
dec
jae
lea
out
loope
jne
sbb
xchg
ret
lods
mov
inc
ret
sti
add
es
jmp
in
sub
iret
testl
jle
out
test
fisubrl
jecxz
dec
in
in
push
aas
aam
jb
push
mov
pusha
jno
push
dec
pusha
aam
loope
mov
mov
pop
or
rol
xchg
fwait
pop
ficompl
fisubrl
jnp
jae
psllw
cmp
sub
fs
jne
sbb
jp
xchg
jne
imul
xor
jl
out
jle
es
pop
mov
outsl
mov
inc
inc
xor
pop
mov
mov
push
jmp
das
jge
xchg
jae
fwait
imul
das
adcb
and
add
insl
add
clc
adc
mov
in
jecxz
aaa
lods
pushf
dec
pop
sbb
mov
dec
movsl
imul
adcb
ss
test
imul
popf
add
enter
and
push
and
sbb
insb
pushf
arpl
nop
data16
shrl
ret
ljmp
pop
add
jl
js
loopne
loop
and
icebp
xchg
cmp
inc
fdivl
int
cmp
addr16
rcl
insb
adc
data16
cmc
in
xchg
jmp
jg
loopne
int3
pushl
xor
int3
mov
xor
pop
bound
pop
cmp
sbb
mov
aaa
repnz
jg
xchg
ds
out
mov
pop
pop
pop
shrb
pop
repnz
outsl
aad
divl
pop
and
cld
sub
and
aas
xorb
fdivrs
ja
pop
or
scas
retw
xlat
iret
sub
jae
test
or
scas
repnz
xchg
push
mov
stos
lcall
mov
or
push
int3
gs
insl
jmp
dec
xchg
lds
mov
outsb
idivb
scas
mov
cmp
mov
call
leave
xchg
out
ror
xchg
imul
ja
add
ret
cmp
pop
movsl
xorl
inc
mov
gs
mov
rcll
mov
push
dec
arpl
mov
stos
mov
push
in
sub
aad
int3
push
push
adc
sub
add
jne
push
movsb
inc
mov
mov
sbb
lods
lock
rorb
push
stos
in
jl
lock
shrl
movsl
adc
inc
sti
mov
xchg
jb
movl
lods
enter
daa
pusha
xor
sub
mov
sbb
sub
pop
insb
and
sarl
jge
enter
hlt
jle
push
sar
push
push
lods
cmp
mov
and
ss
bound
or
and
xchg
sti
int
pop
cmp
call
adc
cmp
in
loope
pop
sbb
lea
or
jae
and
sbb
sub
push
push
sbbl
inc
inc
push
or
mov
cmp
mov
into
or
loope
sub
jp
jmp
loop
mov
into
pop
leave
mov
es
test
movsb
imul
xchg
ljmp
mov
call
push
outsl
mov
cld
xchg
or
into
jmp
pandn
push
adc
jnp
mov
and
pop
sbb
push
mov
fisubrl
repz
ljmp
mov
lcall
or
mov
cmc
lock
inc
in
xchg
inc
jbe
mov
add
mov
and
mov
mov
jb
add
fcomi
mov
jecxz
sbb
inc
add
lret
cmc
sub
aas
pop
repnz
cmp
mov
xchg
push
push
mov
and
mov
insb
or
cmp
push
xchg
push
arpl
mov
jge
mov
cmp
pop
testb
adc
in
mov
mov
mov
cmp
lods
test
push
mov
andb
xor
pushf
xor
jns
add
xchg
dec
pop
cmp
mov
jno
jecxz
jb
cld
dec
and
sub
xlat
loopne
inc
idivb
and
mov
daa
js
mov
or
mov
jg
je
mov
jl
xchg
xor
dec
movsl
loop
repnz
pop
fcmovbe
test
pop
in
out
addr16
adc
stc
jno
mov
rclb
and
into
and
dec
stos
aad
mov
push
add
cmc
mov
test
push
test
adc
nop
lock
fstpt
mov
adcb
sbb
loop
xor
xor
xchg
hlt
mov
clc
mov
shl
sbb
add
xchg
inc
ret
stos
imul
out
add
sar
pop
mov
aad
dec
inc
sub
imulb
cmp
rcl
xchg
jge
mov
push
fbld
loopne
jb
mov
push
sbb
stc
cli
das
rorl
arpl
sbb
pop
ret
jnp
lret
nop
jnp
mov
repnz
lods
jp
mov
pop
in
out
adc
mov
gs
lahf
mov
sarb
jmp
pop
scas
in
xchg
push
pop
mov
jge
xchg
popa
jbe
inc
xor
jle
xor
sbb
int
test
dec
xchg
push
das
mov
lcall
insb
jbe
xor
imul
inc
mov
mov
cli
inc
stc
hlt
in
mov
lds
dec
lahf
push
sub
mov
rcll
out
sub
leave
mov
push
aad
xor
dec
outsl
add
das
stc
ljmp
mov
mov
push
fidivs
add
jne
imulb
popa
cmpsb
icebp
jp
call
and
pop
aaa
icebp
std
sub
sub
mov
aam
aas
in
sbb
or
jno
jnp
fdivr
scas
in
out
cmp
dec
shll
shrb
js
sar
iret
test
push
inc
mov
lds
and
mov
pop
mov
xchg
ja
mov
stos
mov
std
mov
fisttpl
sub
jne
fidivl
adc
ds
je
mov
mov
xor
inc
sub
out
or
call
scas
cli
sbbl
push
sbb
call
mov
xchg
xchg
sbb
daa
xchg
cli
pushf
push
inc
pop
lds
loope
out
fcomp
mov
in
in
test
mov
dec
in
add
sub
stos
sbb
addr16
xchg
mov
mov
pop
punpckldq
loopne
mov
mov
and
dec
add
subb
jmp
mov
stos
cmc
fistps
push
scas
mov
test
adc
mov
dec
hlt
imul
addb
lods
xor
addr16
lods
push
ret
ja
cld
cmp
pop
push
xchg
cmpsl
fisttpl
xor
shr
push
sbb
inc
mov
dec
inc
pop
mov
mov
out
push
jmp
jle
scas
mov
jbe
sub
sahf
mov
repz
mov
xchg
shll
mov
call
outsb
arpl
cmc
fcmove
jne
mov
mov
push
add
into
mov
inc
sub
fisubs
adc
jl
ja
sub
test
jecxz
pop
pop
and
jle
dec
lea
ret
fildl
sub
addr16
push
es
xchg
pop
aam
rclb
mov
cmpsl
add
nop
xchg
jp
or
sbb
pop
pusha
mov
test
mov
bound
xlat
dec
nop
inc
das
repnz
ret
xor
mov
dec
xchg
pop
or
add
ss
mov
sub
clc
aad
sarb
gs
das
test
or
add
xchg
cmp
push
sbb
push
sbb
push
je
inc
je
jnp
daa
adc
notb
dec
jmp
and
or
hlt
fxch
popf
sub
pop
loopne
cmp
imul
movl
test
cmpb
lock
scas
push
testl
push
and
jmp
xchg
fmull
fiadds
div
mov
aas
sbb
pop
sti
decl
inc
cmpsl
lock
sbb
and
xchg
fildll
std
jnp
or
imul
mov
rolb
call
mov
movsl
xor
jmp
movb
data16
stos
adc
ljmp
lods
fwait
mov
cs
mov
xchg
lret
push
test
push
fwait
cmpsl
push
jne
pop
mov
test
arpl
adc
cmp
xor
jo
adc
and
mov
dec
inc
pop
jge
pusha
mov
ficoms
pop
add
pop
sub
inc
xchg
lret
pop
mov
aam
pusha
mov
push
or
lahf
test
popf
jl
jae
xchg
jp
std
lods
mov
andnps
fcmovnu
dec
icebp
out
dec
dec
push
xchg
pusha
mov
subb
mov
jp
pop
xchg
into
mov
out
push
fs
into
sahf
cwtl
add
insb
add
repnz
aaa
cmp
jecxz
cs
xchg
xchg
inc
jecxz
hlt
adc
ljmp
push
or
adc
mov
xor
ss
dec
les
pop
das
mov
push
movb
fsubl
mov
aas
cmp
fcmovnu
cmp
mov
call
popf
pop
sub
pop
pop
mov
adc
mov
cmp
call
or
fs
adc
xlat
repz
inc
test
push
add
cmp
and
gs
rcl
sahf
iret
inc
xchg
push
ja
push
lds
faddl
dec
mov
sbb
mov
jo
std
push
adcb
pop
cmp
pop
ljmp
sbb
adc
xor
out
push
push
int3
adcb
xor
out
push
xchg
and
icebp
repnz
int3
or
xchg
lea
cmp
rcrl
cld
xchg
arpl
movsb
fsub
sub
cli
nop
push
mov
out
push
mov
ds
sub
in
pop
test
sub
cmp
adc
xor
in
dec
nop
addr16
rolb
dec
je
int3
in
push
sub
mov
push
aas
sub
dec
stos
push
and
inc
insb
sub
xchg
xchg
cmp
pop
xchg
ror
mov
inc
sbb
xlat
shll
xlat
cld
bswap
xchg
pop
pushl
and
or
pop
aad
push
add
mov
dec
xor
lret
pop
cmpb
cltd
add
mov
ret
test
inc
pop
cmp
shl
incb
xor
mov
fdivl
mov
iret
pop
sbb
das
push
cmpsl
incl
and
mov
fbstp
jbe
adc
rolb
cmp
ficompl
js
addr16
lea
mov
xor
call
jmp
cmc
dec
jle
mov
bound
ret
testl
scas
jl
dec
icebp
inc
lret
inc
push
das
xchg
pop
shll
cld
cmpb
xor
fstps
out
lea
clc
call
test
iret
cmp
adc
dec
int3
stos
movsl
aam
cltd
sub
cs
sub
lahf
or
ljmp
xor
repz
lret
test
jl
pop
punpckhdq
and
lret
cmpsb
pusha
mov
jbe
sahf
cli
or
lcall
mov
loop
fwait
cmpsb
sub
lcall
adcl
ret
xor
sub
mov
and
add
sub
mulb
cmp
repz
xor
mov
xor
imul
and
stc
xor
add
cmp
dec
clc
movsl
or
daa
scas
xchg
ret
test
mov
jp
sahf
cli
leave
in
ret
lods
jbe
push
or
xchg
and
test
fidivs
js
cmp
hlt
mov
cmp
divl
pusha
or
xor
cwtl
adc
sub
fwait
pop
pop
adc
jbe
lods
sbb
jne
out
push
jbe
shlb
int3
clc
xlat
shr
imul
fwait
mov
xor
and
xchg
outsl
das
arpl
jns
adc
dec
faddl
aad
cmp
bound
or
ljmp
call
add
fldt
fs
adc
adc
outsl
lods
jg
imul
inc
mov
out
jne
jmp
cmova
shll
adcl
bound
push
outsl
push
lea
data16
pop
and
imul
sahf
insb
int3
push
or
loop
mov
out
ffreep
xor
jno
popf
test
testl
mov
push
pop
dec
inc
loopne
ret
mov
lahf
outsl
das
leave
jae
inc
sahf
jbe
cmp
sbb
loop
repnz
and
add
das
mov
push
jnp
mov
adc
movsl
sbb
pop
mov
fcompl
add
gs
cmp
jbe
mov
js
mov
sub
lret
mov
fs
insl
mov
in
fiaddl
or
popf
sti
mov
cli
pop
push
fdivl
test
mov
ds
mov
nop
jne
stos
ret
sub
pop
sbb
inc
add
sub
push
sub
xor
add
mov
add
repnz
test
push
test
push
sub
ret
loopne
call
cmp
dec
cmp
dec
jo
jmp
dec
ja
jmp
clc
ja
pop
ret
ja
cmpsl
and
mov
or
cmp
mov
pop
xor
jb
and
adcl
outsl
cmp
sahf
inc
ss
aaa
push
mov
push
mov
inc
fsubr
iret
ja
addb
hlt
mov
add
mov
jp
outsl
test
inc
dec
out
test
in
xchg
pop
scas
les
mov
xor
sbbl
inc
sbb
gs
fnstenv
sbb
ss
inc
push
insl
cmp
roll
adc
subl
aad
nop
sahf
jnp
xchg
stos
pop
mov
lcall
add
dec
mov
stc
xchg
icebp
pop
int3
and
push
dec
push
inc
icebp
fisttpll
mov
sbb
adc
push
jno
ljmp
adc
gs
or
stos
push
das
inc
pop
mov
mov
dec
imulb
xchg
jge
jle
jno
adc
inc
sub
aas
xchg
jg
outsl
in
in
outsl
jb
jnp
inc
jne
sbb
scas
or
ljmp
cltd
pop
ficoml
idivl
ja
or
or
sbb
jp
btr
insl
fimuls
mov
xchg
mov
fwait
mov
enter
dec
push
adc
jmp
mov
lea
shl
pop
aad
scas
and
dec
xor
fadds
movsb
add
out
pop
popf
loop
movsb
orl
push
es
dec
xor
das
addr16
push
push
es
xlat
cmc
stos
xchg
mov
arpl
repz
and
mov
mov
pop
adc
sub
shl
in
es
test
pusha
mov
sahf
jp
pop
movsb
jae
aaa
mov
adc
and
cmc
jae
mov
sbb
pushl
addl
lods
and
das
fldenv
lea
mov
cld
clc
xor
or
xchg
cmpsb
lret
lret
and
push
mov
cmc
lcall
cmp
jg
jp
loopne
mov
int
shll
lahf
inc
lods
dec
mov
pop
xor
in
sbb
ja
push
push
dec
das
sahf
popa
push
in
pop
cmp
sbb
in
jno
mov
sbb
bnd
mov
pop
mov
adc
sub
mov
sbb
dec
pushl
popf
jne
ret
pop
ret
sti
ret
dec
enter
test
out
xor
test
dec
mov
test
lahf
in
push
out
loopne
push
add
imul
idivb
inc
inc
sub
lock
jne
mov
ds
arpl
rorl
jl
je
inc
adc
scas
dec
mov
push
mov
fisubrs
mov
js
xlat
and
sti
mov
jmp
pusha
imul
push
push
xor
mov
inc
lods
mov
mov
push
mov
jnp
xor
notb
shll
adc
fdivs
inc
mov
loopne
rcl
sarl
push
add
in
adc
aas
ds
xchg
push
pop
je
scas
mov
dec
out
aad
inc
mov
pushf
pop
pop
sbb
or
in
or
fsubs
dec
mov
push
shrl
mov
sbb
push
mov
insb
lock
cltd
lahf
loope
inc
enter
sub
fdivrl
movsb
xchg
and
shll
cli
subb
cmpsl
ljmp
mov
push
push
clc
push
loop
int
and
sub
dec
mov
push
gs
into
xor
lods
in
imul
fisttpll
repnz
iret
push
pop
push
js
test
lea
je
jo
or
data16
jbe
loop
fisttpll
pop
leave
xchg
mov
push
insb
mov
xorl
fistpl
ja
jg
pop
stos
or
push
std
xchg
adc
mov
sub
push
mov
movsl
gs
jg
stos
xor
pop
sbb
scas
imul
push
mov
cmc
leave
xor
xor
mov
dec
stos
lds
push
icebp
mov
arpl
add
pop
stos
jno
gs
call
divb
sub
cli
jb
imul
jp
filds
sbb
fcomps
cmp
adc
fsts
out
mov
push
mov
jns
push
sbb
adc
dec
and
setl
and
testl
jne
js
cs
orl
jb
cmp
cmp
aam
jo
pop
addr16
mov
scas
jnp
add
adc
les
cmp
rorb
call
mov
push
pushf
aam
mov
mov
lret
roll
ss
or
and
xchg
ret
sbb
pop
mov
cmc
push
clc
sbb
test
sbb
mov
lock
xchg
dec
nop
mov
mov
shll
pusha
in
sbb
sbb
sub
pop
iret
jnp
jb
jae
sbb
inc
test
insl
icebp
mov
ss
dec
std
stos
fiaddl
push
mov
call
cmpsb
mov
fwait
out
push
cs
imul
imul
pop
hlt
ljmp
jae
inc
shll
stos
pop
and
xchg
xchg
add
lret
sub
inc
jg
pop
push
push
jno
push
or
adc
add
pop
push
in
mov
in
shlb
xchg
jle
cld
fidivrs
arpl
sbb
sbb
adc
fldl
stos
mov
stos
scas
push
in
outsb
cwtl
pop
mov
sbb
mov
jecxz
add
cmp
or
and
iret
xchg
aaa
out
and
repnz
xchg
outsb
jo
lret
andb
adc
in
jns
leave
sbb
repz
push
sbb
insl
pop
repnz
jle
jl
faddl
cmpsl
mov
popa
addr16
adc
aaa
mov
cmp
jg
pop
sub
fwait
fwait
and
cmp
and
jo
jno
jl
pmaxsw
shr
out
mov
mov
imul
pop
mov
popa
fidivrs
xor
insb
push
ljmp
stos
fildll
pusha
dec
int3
inc
scas
lock
mov
test
fwait
ja
inc
cmp
call
xor
ds
mov
mov
push
pop
mov
pop
sbb
jg
insb
daa
push
push
sahf
or
ss
cld
mov
loope
mov
and
sbb
inc
pushf
jl
gs
fisttps
mov
shl
or
inc
mov
fsubrl
shl
sub
jbe
cmp
mov
inc
adc
lods
scas
jbe
xor
fnsave
xchg
sub
aaa
jmp
negb
xor
iret
out
ja
test
and
xchg
fwait
push
das
in
ds
ror
sbb
out
stos
push
xor
dec
mov
aas
mov
inc
xor
in
leave
ljmp
pop
sbb
mov
inc
push
negl
lret
push
cmpsl
dec
stos
sarl
mov
jne
jne
mov
xchg
jl
cvtpi2ps
test
dec
pop
imul
and
mov
ja
xchg
cmp
test
mov
addr16
and
loope
xchg
cmp
in
lea
push
enter
inc
cmp
shlb
aam
popa
inc
jge
cli
imul
rcrb
lods
pop
imul
add
testl
sub
or
stc
sbb
mov
lea
push
scas
push
xchg
dec
jmp
inc
sbb
xchg
cltd
mov
cli
mov
js
mov
sub
stc
sub
fwait
pusha
je
mov
or
dec
sub
lret
clc
mov
das
addl
jle
fisttpl
cmc
int3
mov
bound
inc
dec
pop
nop
int3
mov
vmovdqa
enter
int
pop
ljmp
imul
fwait
es
lcall
int3
or
xchg
mov
call
adc
jb
pushf
mov
cmp
fs
fwait
fwait
push
push
hlt
aam
loope
lods
fildl
sahf
fwait
mov
in
push
test
jecxz
mov
jmp
mov
ja
in
std
mov
mov
xor
sar
add
shll
cwtl
sub
and
rorl
jg
mov
in
pop
sub
mov
gs
mov
aaa
add
add
jnp
js
dec
movsl
int
jns
data16
movsb
daa
push
jge
xchg
mov
orl
aas
jp
and
jo
pop
lret
orb
or
je
int
cmpsw
sub
inc
outsl
pop
cmp
cmp
jp
mov
in
dec
lods
sub
loopne
adc
gs
mov
out
scas
in
sub
lock
test
ds
mov
add
jp
push
repz
fwait
mov
frstor
aad
pop
ja
mov
xchg
cltd
clc
out
loopne
repnz
dec
pop
sahf
enter
jl
and
nop
jne,pn
mov
mov
test
mov
mov
movsb
jno
ljmp
ja
int
shl
or
pop
mov
js
cmpsb
jo
rolb
stos
mov
push
hlt
mov
adc
or
mov
adc
ret
or
inc
insl
pop
xchg
fstl
rclb
cmp
push
adc
jns
sbb
call
pop
cmp
sub
cmp
call
daa
int
inc
push
div
dec
hlt
lods
lret
pop
testb
pop
aad
sbb
stc
lret
dec
or
insl
cmp
jns
mov
or
je
pop
mov
idiv
sbb
mov
jno
addr16
fistpll
sub
out
mov
xor
mov
xchg
push
xchg
xchg
add
lret
les
fidivs
inc
movlps
mov
adc
and
ficompl
sbb
add
mov
int
std
insb
fcmovnb
rolb
test
cmp
xlat
cmpsl
gs
fsub
data16
repnz
sbb
pop
sub
cmpsl
cmpsb
outsl
aaa
pop
stos
or
pop
add
in
sbb
xor
inc
fldcw
push
pop
xor
stc
lods
mov
dec
loop
pop
repnz
xbegin
fcmovnb
sub
ds
shll
jmp
add
outsl
dec
insb
imul
adc
lods
popf
ss
pop
icebp
cmp
dec
in
push
pop
inc
lds
mov
sbb
dec
aaa
aas
lahf
and
mov
adc
push
dec
push
mov
jb
je
cmpsb
cld
nop
jno
mov
cwtl
add
and
imul
push
gs
mov
outsl
lret
push
loope
jno
mov
js
jbe
ret
movsl
sbb
inc
mov
clc
mov
loopne
loopne
dec
cmp
sarb
sbb
leave
xchg
jnp
sbb
mov
dec
fstp
fistpl
jmp
mov
iret
add
aaa
daa
fiadds
mov
sti
add
in
cmc
and
xor
xor
sbb
sbb
add
xchg
fmull
mov
test
cmc
xor
stc
outsl
adc
mov
test
xchg
lods
repz
out
push
rorl
pop
add
xor
loopne
mov
test
dec
add
jno
incl
adc
sub
icebp
ret
cmpsl
enter
dec
in
imul
xlat
add
ss
sub
sub
push
lea
negb
lods
mov
test
test
pop
aaa
lret
repz
fldt
mov
sub
scas
movswl
imul
sub
cmpsb
addr16
or
sub
push
cltd
mov
std
inc
lahf
xor
push
cld
dec
mov
mov
fs
mov
sbb
add
cli
push
xor
je
clc
cmpsl
enter
dec
push
lahf
test
fwait
inc
nop
jle
push
imul
pop
loopne
mov
iret
jl
icebp
jo
dec
xor
je
push
push
int
jecxz
xchg
mov
sbb
repz
adc
mov
push
or
imul
push
add
movsb
mov
sahf
movsl
cwtl
inc
lock
mov
cmp
les
sbb
pop
cmc
ret
scas
mov
push
jecxz
push
movsb
mov
add
mov
cmp
sarl
in
jl
and
pop
inc
in
pusha
cmp
aaa
cmp
out
or
fiaddl
pop
sbb
les
data16
test
jle
fistps
cmc
push
mov
add
ds
in
or
add
cmpsb
add
cmp
test
sub
lods
and
negl
stos
data16
xlat
adc
mov
sti
and
setbe
mov
jne
mov
jae
mov
and
push
jecxz
sbb
xchg
push
popa
dec
sbb
xchg
pop
arpl
out
push
cmp
xchg
inc
lahf
repnz
and
pop
xor
push
sti
mov
inc
test
push
sub
or
inc
ljmp
test
rcll
push
imulb
out
mov
fmulp
in
jo
aam
sbb
sub
and
jo
movsl
std
pop
mov
shlb
js
and
jle
outsb
push
jns
mov
sbb
push
in
pop
dec
mov
xchg
sub
add
and
out
stos
in
jno
pop
addb
daa
std
push
add
mov
pushl
sub
xchg
rcrl
mov
test
data16
repnz
cmp
fs
test
out
push
rolb
repnz
push
ror
ds
shlb
leave
mov
test
addr16
js
fisttps
test
sub
mov
mov
sbb
xchg
lcall
sar
fsubrl
jecxz
fdivp
fiadds
pop
inc
sub
int
sub
imul
test
jae
push
sbb
xchg
clc
xor
jl
sbb
cmp
shlb
testl
ret
push
mov
inc
fwait
out
or
lds
mov
test
dec
adcl
loop
aam
clc
repz
outsb
ds
mov
out
popf
imul
arpl
push
or
sub
push
lcall
mov
add
and
xchg
adc
inc
mov
adc
cmpsb
sbb
adc
mov
enter
inc
cmp
cmpsb
sub
mov
sahf
mov
inc
shl
jb
stc
pop
fisubl
jmp
jmp
push
aaa
dec
mov
les
cmpl
mov
nop
ror
add
pop
or
pop
mov
xchg
mov
shrl
mov
sbbb
push
pushf
xor
nop
mov
popa
adc
inc
push
adcl
movb
sbb
ja
cmp
aad
fdivs
mov
fiaddl
stos
ss
xor
pop
fwait
shlb
jb
push
adc
vmovhps
mov
mov
loope
sbb
cmp
or
lods
test
push
fisttps
sbb
inc
cmpsl
jno
lds
adc
shrb
pop
sub
ss
hlt
pop
cmc
jns
sbbl
lahf
mov
sub
jmp
mov
insl
sub
loopne
ja
rorb
lods
or
and
jge
jg
fwait
sub
lret
sbb
nop
mov
rolb
ret
or
xorb
adc
mov
cltd
jle
jle
arpl
lahf
ret
mov
cld
ljmp
jbe
mov
iret
and
ret
add
cmp
dec
mov
sbbl
pop
mov
rcll
inc
xor
aaa
push
dec
scas
jne
pop
xchg
bound
xchg
add
sub
adc
mov
das
push
mov
int
in
pusha
mov
gs
insl
mov
out
jae
xchg
movsl
sub
hlt
hlt
shlb
int
mov
int3
add
js
incb
andl
daa
cltd
or
xor
mov
hlt
jnp
aas
adc
cmp
in
sbb
cwtl
pop
test
jnp
add
or
jae
lahf
shr
clc
xchg
ret
cmp
and
pushf
jle
roll
or
sub
or
push
pop
in
jl
adc
xor
movb
mov
test
jns
ret
fistpl
rorl
rorl
xor
mov
push
xchg
sub
scas
pop
lret
stos
es
push
sub
push
mov
movsl
cmc
mov
icebp
push
movsl
popa
sahf
inc
imul
lcall
in
fisubs
dec
int3
lods
ljmp
mov
mov
jmp
fists
lds
stos
pop
pop
cli
mov
lock
and
or
add
sbbl
mov
mov
lods
orl
xor
sbb
sub
mov
xor
cmp
in
push
cmp
bound
mov
sbb
jecxz
mov
push
addr16
addr16
je
xor
and
movsl
jmp
push
add
ss
push
jmp
jnp
lock
xor
and
cmp
jno
pop
cs
je
jp
jge
daa
pushf
ss
sahf
push
and
adc
outsl
add
sbb
into
push
je
sub
dec
xchg
addr16
or
cmp
lahf
addb
xor
int
lret
adcl
daa
ds
mov
shl
mov
fsave
xchg
and
push
outsl
call
shr
loopne
scas
and
daa
imul
pop
fidivl
test
iret
sub
mov
jae
mov
and
cli
shll
ficompl
cmp
lea
push
xor
fildll
push
sub
jge
xchg
cld
cmp
ds
in
enter
jl
and
std
int
xor
outsb
in
clc
lret
decb
jg
push
out
or
mov
inc
and
shl
xlat
aaa
cli
adc
lods
pop
cmpsb
aas
jne
adc
scas
or
pop
or
cld
inc
add
call
dec
mov
push
pop
dec
mov
aas
adc
pop
call
pop
cld
test
fnsave
les
jmp
insb
sahf
addr16
mov
js
mov
insb
sub
xchg
jbe
mov
leave
pop
fists
push
sub
fucomi
xor
rorl
push
into
inc
cld
enter
inc
dec
fcoml
rolb
push
mov
push
test
leave
cmp
mov
insl
pop
cmp
nop
lcall
xchg
push
xchg
daa
out
or
cmp
mov
jmp
mov
sarl
pop
jbe
notl
fdivs
cmp
jge
mov
fstps
sub
js
iret
inc
arpl
mov
rclb
aaa
sbb
and
call
daa
pusha
mov
shl
movzwl
in
test
movsb
mov
mov
lret
sbb
in
ja
cmpsl
les
shrb
loopne
mov
scas
pop
xor
mov
xor
popa
cmp
push
jnp
fucomp
aad
mov
jle
or
xchg
out
cmpsl
out
push
or
xor
inc
sbb
mov
adc
or
sub
pop
adc
loope
mov
mov
jb
movsb
outsl
std
scas
cmp
int
jns
shr
mov
int
adc
or
negb
pop
ret
add
xor
mov
movl
shlb
mov
mov
aaa
jnp
sub
popa
in
push
pop
int
out
out
in
and
jp
sti
orb
push
adc
mov
and
arpl
test
push
xchg
cmp
mov
imul
mov
out
and
pop
lahf
roll
dec
push
ss
test
xchg
daa
loope
lret
gs
inc
bound
ljmp
out
std
jns
loopne
sahf
push
fs
movaps
lock
mov
jl
xchg
xor
fisubs
scas
xor
or
add
push
cmp
xor
sub
lret
adc
pop
push
cmp
stc
mov
push
push
lods
and
shr
push
cltd
xchg
jp
into
mov
push
sbb
lret
mov
out
add
mov
cmpsb
jg
test
mov
pop
xchg
xchg
out
pop
loopne
mov
outsl
test
push
xchg
leave
iret
cmpsl
cmpsb
push
mov
stc
fsubs
sub
test
ret
lcall
scas
push
mov
dec
cltd
and
pop
inc
jb
sub
sub
movsl
mov
xchg
or
mov
es
push
sub
inc
nop
cmpsb
add
hlt
pop
sti
xor
push
add
mov
sbb
lea
mov
mov
les
xor
push
lock
mov
es
cmc
arpl
nop
add
inc
push
adc
and
pop
push
mov
stos
pop
cli
loope
or
fs
ret
call
sbb
bound
mov
std
xchg
sub
movb
mov
test
in
out
popf
rol
lock
sti
xchg
dec
movsb
data16
add
pop
mulb
adc
inc
add
cmpsl
xchg
test
hlt
and
int
sbb
pop
cmpsl
das
les
test
les
fnstcw
jnp
cmpl
dec
mov
rolb
arpl
je
xor
lods
out
pop
pop
sti
dec
mov
pop
aad
xchg
mov
out
adc
mov
adc
pop
stos
adc
mov
imul
lock
leave
adc
push
jmp
idiv
push
xor
push
mov
xlat
lods
add
fistpl
xor
jmp
xor
sbb
fcompl
pop
imul
dec
mov
pop
mov
cmp
cli
movsl
pop
ss
sub
in
out
mov
inc
cmc
std
sub
out
dec
sub
push
and
sbb
addl
and
out
sub
or
add
in
xchg
scas
inc
xchg
mov
cmp
mov
clc
fbld
in
mov
cmc
movsb
jg
sbb
xorl
lcall
mov
mov
mov
push
repz
jmp
scas
pushf
leave
jbe
or
mov
or
loop
shld
xor
jecxz
arpl
xor
push
and
xorb
sbb
sub
in
add
xor
icebp
sbb
repnz
adc
ja
pop
icebp
mov
mov
inc
enter
cmp
dec
or
mov
mov
out
movsl
pop
jg
outsb
dec
pop
cmpsl
cmp
lret
lahf
or
cli
jbe
jp
aas
lcall
dec
dec
hlt
add
mov
mov
std
add
addl
lcall
clc
test
push
aas
lea
sbb
lcall
clc
jl
in
adc
outsb
rolb
std
adc
lahf
fcompl
sub
ret
les
daa
inc
loope
xor
cwtl
ds
fstl
and
pop
and
push
lods
cmpsl
jns
in
fmuls
mov
bound
sahf
pop
test
and
push
jmp
fdivp
stc
fcompl
pop
and
enter
jmp
lods
jge
fwait
loope
push
xchg
hlt
mov
pop
in
or
stos
je
push
loope
scas
jnp
xchg
lods
gs
ret
jge
inc
addr16
sub
lret
aad
mov
repz
std
psadbw
adc
mov
and
mov
sub
and
fistps
xchg
mov
sub
loope
add
test
imul
hlt
lods
fisttpl
ss
rcl
jg
or
aad
aas
cwtl
mov
shrl
jg
bound
imul
sub
out
cld
imul
and
mov
push
adc
and
jl,pn
movsb
jle
mov
xchg
and
xchg
int
ja
stos
test
jmp
addr16
pop
xor
dec
lods
or
popa
out
mov
sbb
fwait
lahf
rol
std
test
inc
push
cmp
jecxz
jae
roll
xchg
bound
stos
xorb
push
ljmp
inc
fmull
cmp
mov
mov
fdivl
pushf
dec
clc
xchg
push
inc
ret
bound
jae
xchg
pop
xor
sbb
ror
ds
sarl
sbb
in
clc
daa
imul
dec
cmp
jl
and
cmp
dec
jmp
out
pop
call
push
xchg
mov
add
pusha
sbb
push
fwait
lds
add
push
sub
xchg
lcall
cmpsl
fwait
aas
stos
inc
mov
mov
pop
mov
outsb
and
movntq
out
jne
inc
dec
xchg
stc
xchg
sbb
hlt
xchg
pop
mov
popf
iret
pop
int
mov
gs
pop
mov
orl
or
mov
ljmp
xchg
ja
add
xor
addr16
sub
mov
fwait
xchg
je
aas
sti
xchg
ljmp
adcl
mov
aam
sahf
pop
lods
inc
leave
push
cmp
testb
std
dec
sti
jg
inc
lahf
push
lds
sub
and
sub
ret
repnz
nop
inc
sub
mull
dec
xor
jbe
daa
jl
mov
ljmp
lcall
push
cmpsl
decb
xchg
scas
add
sti
mov
pop
aaa
std
out
push
add
js
mull
jge
mov
cmc
xor
push
pusha
jae
mov
frstor
out
and
ss
test
hlt
mov
cs
dec
inc
lods
in
and
jbe
mov
cmp
int
jmp
inc
mov
js
mov
dec
xor
rorb
shrb
std
cmp
sub
in
or
out
into
mov
inc
inc
and
push
rol
rcl
hlt
pushf
mov
sub
push
and
xor
sub
sub
pop
or
sti
pop
push
shll
ja
xchg
fstpt
int
cmc
aaa
or
fiaddl
or
inc
pop
xor
mov
pusha
inc
pop
mov
cmpsl
scas
std
jge
add
in
insl
mov
sub
sub
or
adc
xor
js
adc
sub
out
mov
mov
push
flds
xchg
daa
pop
xchg
sti
xchg
xor
scas
add
loopne
push
push
ja
frstor
andb
in
loope
jl
mov
pusha
rol
decb
cmp
sbb
xor
and
jbe
rorb
xchg
jmp
mov
sub
and
add
sbb
add
out
pop
cmp
ss
mov
adcl
push
inc
rcr
icebp
pop
mov
mov
jnp
data16
ja
adc
adc
fnstsw
mov
xorl
popf
icebp
pusha
clc
sbb
mov
and
mov
leave
imul
ss
subl
nop
and
xchg
xchg
test
mov
inc
scas
movsb
in
imul
ds
filds
mov
pop
lods
lret
or
xchg
mov
rorb
adc
pop
int3
push
gs
js
pushf
mov
ds
fnsave
pop
std
rcll
rorl
cmc
push
and
lods
es
fisubs
dec
nop
sub
int
stc
mov
dec
add
shlb
push
cmp
clc
enter
jmp
das
insb
ficoml
addl
mov
imulb
shrb
inc
js
mov
testb
pop
push
fxch
gs
stc
push
push
cmp
jo
cmp
std
mov
clc
je
jmp
addb
fs
jp
jns
cltd
jb
insb
xchg
mov
xor
shll
daa
mov
jg
scas
ret
test
vpshad
adc
dec
sbb
jo
fcompl
mov
jo
jo
xchg
ss
or
xor
mov
fiadds
nop
add
sub
or
sub
xchg
out
sarb
xor
lods
or
sub
adc
int3
sbb
mov
or
icebp
shrl
jl
cltd
mov
push
dec
filds
leave
call
ljmp
pushf
dec
mov
xor
hlt
lahf
mov
pushf
fdivs
divl
xchg
push
inc
cltd
mov
pop
fisttps
jl
push
stc
les
or
sub
sarb
or
mov
push
repz
mov
adc
testl
mov
pop
jp,pt
into
mov
cli
cmc
sbb
lea
xor
popf
add
sub
psubd
test
popf
loop
loope
aas
xor
call
pop
pop
dec
insb
or
inc
std
scas
adc
xchg
dec
pop
push
inc
mov
test
mov
ror
out
cmpxchg
insb
fldcw
mov
cmpb
xchg
adc
bound
mov
test
or
fcompl
enter
sti
pop
push
mov
fistpll
dec
sub
leave
push
movhps
imul
out
inc
xchg
add
enter
mov
outsl
cmc
mov
repnz
sub
jl
insb
mov
jno
pop
movsl
icebp
xchg
xchg
outsl
push
jl
fwait
inc
mov
jbe
movb
xorb
js
out
fsub
fsubrl
movsb
call
fmuls
mov
xlat
test
jecxz
inc
sub
in
repnz
ss
testl
rcr
out
out
mov
jmp
ss
push
out
int3
pop
sub
xchg
fistps
insb
fisttpll
and
or
xor
out
xor
xor
or
add
pop
fldcw
stos
int3
adc
add
mov
cmp
mov
adcl
mov
mov
xor
add
out
ja
out
cs
test
in
cmp
mov
push
jne
mov
and
jecxz
ljmp
xchg
add
push
and
lret
push
mov
insb
mov
jno
or
inc
aad
std
adc
jb
mov
xor
or
adc
mov
xor
sub
out
mov
dec
js
idivl
mov
and
mov
mov
dec
jp
pop
xchg
mov
jo
lods
les
pop
mov
cmpsl
sub
inc
pop
dec
lret
sar
fsubl
xchg
pop
and
sbb
leave
push
inc
jg
stos
cld
repnz
pop
jmp
mov
lcall
and
mov
fiaddl
and
bound
or
mov
fstl
pop
fimuls
xor
cmpb
stc
xlat
or
adc
shlb
sub
je
xchg
pop
and
xor
daa
sub
in
mov
fdivrs
clc
jnp
dec
sbb
mov
pop
gs
dec
testb
out
andl
lahf
sbb
pop
loop
sub
idivb
test
aas
mov
jbe
test
das
daa
in
dec
fnstenv
pop
movzwl
out
mov
lods
insl
xor
jle
repnz
sub
cmp
icebp
adc
xlat
imulb
sub
loop
jo
adc
sub
dec
xlat
notl
and
pop
scas
add
in
mov
sbb
mov
mov
jle
cmp
icebp
xor
icebp
ljmp
movl
lock
stos
bnd
shrb
inc
and
mov
push
pop
cmp
int
xor
fldcw
xchg
xchg
ret
add
push
mov
fadd
pop
out
in
cltd
mov
in
sti
movsb
lret
movsl
jp
sahf
adc
cmp
add
imul
js
cmp
rcrb
hlt
add
and
imul
jmp
cld
cmp
iret
cmp
stc
xor
xor
and
pushf
arpl
and
mov
call
and
sti
or
inc
sub
inc
bound
mov
push
nop
cmp
sub
nop
mov
mov
pop
lock
inc
push
fcmovne
cs
or
repz
aad
iret
call
addb
mov
adc
xor
mov
icebp
pop
imul
pop
push
dec
dec
dec
inc
data16
je
push
add
movsb
pop
sbb
fstl
enter
sti
inc
push
adc
sbb
add
call
inc
jns
sub
pop
push
sbb
mov
jmp
jae
sti
mov
ficompl
cmp
jnp
inc
leave
inc
sahf
jns
jmp
xchg
mov
xor
xchg
mov
cmpsb
sti
jnp
mov
mov
div
lret
sub
stos
orb
hlt
addr16
mov
mov
or
fsub
stos
xor
ds
sub
jbe
jle
inc
outsl
ljmp
dec
mov
fucom
sub
mov
ljmp
adc
jae
and
inc
cmp
mov
mov
stos
aas
pop
in
call
test
jl
in
shrl
call
push
scas
test
cmp
loop
cld
enter
push
sbb
add
jmp
xor
or
sub
sbb
push
stos
outsb
cmp
jecxz
pushf
mov
stos
int
mov
loop
mov
dec
push
push
or
inc
divb
scas
hlt
pop
inc
out
clc
cmpsl
in
mov
mov
mov
popl
and
hlt
mov
pop
sbb
leave
subb
jae
int3
sub
mov
jno
bnd
enter
test
fld
pop
cmp
aaa
sub
in
lods
shlb
adc
je
cmp
fdivl
xchg
jmp
ja
cld
cmpsl
mov
icebp
pop
mov
adc
mov
testb
psubusb
shl
fdiv
xchg
inc
jmp
dec
pop
aam
dec
fnsave
es
int3
loop
enter
iret
sub
inc
cmp
mov
sub
mov
test
cs
xor
sbb
loopne
pop
xchg
out
mov
ret
enter
or
aad
jnp
adc
mov
mov
push
in
cmp
and
in
arpl
push
add
sbb
aas
sbb
add
es
sbb
pop
rclb
xchg
fwait
xchg
xchg
cwtl
and
pop
or
inc
xor
bound
outsl
sub
test
icebp
mov
test
cmp
xchg
sub
iret
xchg
rolb
mov
in
idivb
notb
and
lret
pop
fstpt
adc
pop
cmp
mov
xor
jae
test
subl
mov
rcrl
dec
sbb
jmp
dec
sahf
cmpsl
jmp
xlat
mov
scas
dec
xor
jmp
stc
leave
xor
xor
pop
and
cmp
mov
enter
out
xor
in
adc
adcl
ss
movsb
jge
pop
mov
mov
adc
add
gs
mov
in
dec
das
and
pop
pop
push
and
unpckhps
test
jecxz
ret
es
dec
inc
jg
or
add
cs
sti
xchg
fstpt
mov
lahf
outsl
inc
adc
mov
cmpsb
or
scas
inc
sub
lahf
out
fisubrs
push
loope
sub
mov
lds
dec
mov
iret
rcr
pusha
push
aad
in
test
mov
arpl
inc
and
scas
inc
adc
mov
ds
push
xchg
test
aam
jl
push
push
mov
repz
push
pop
out
mov
iret
ret
repz
je
insl
inc
out
sahf
push
push
incb
pop
and
push
and
add
addr16
std
inc
and
idivb
push
cs
sub
rol
mov
dec
inc
pop
mov
push
or
cs
fadds
int
adc
jg
xor
dec
inc
sbb
test
mov
sbb
outsl
movsl
or
or
xor
xor
and
scas
js
shrl
loop
lock
cwtl
cld
dec
negb
add
add
pusha
jmp
cmp
and
pop
cltd
xor
dec
mov
cmpsb
in
xchg
sahf
xor
mov
daa
repnz
push
aas
ror
int3
bound
je
xor
mov
je
ret
mov
popa
cmp
out
inc
push
std
es
add
es
adc
ret
xor
outsl
jp
sub
xchg
mov
or
xchg
test
push
pop
inc
push
pop
pop
mov
add
xchg
cs
xlat
fistpl
loopne
cmp
push
cmp
je
and
and
aam
imul
add
lock
xor
scas
cmp
clc
dec
sbb
xchg
cld
fwait
mov
rcrl
shll
gs
push
pushf
adc
insl
add
icebp
mov
jmp
jae
repz
push
pop
sub
fisttps
rorb
push
shll
jbe
and
or
pop
lcall
es
or
pop
push
lcall
push
lock
rol
push
pop
inc
loop
cmp
icebp
mov
mov
and
adc
jle
mov
dec
inc
ja
dec
sub
mov
mov
out
mov
lock
xchg
jns
aad
ds
mov
pop
xchg
push
cmp
lea
xchg
xor
xchg
and
and
xlat
pop
bound
enter
lock
jle
xchg
gs
sub
outsl
add
ret
pop
or
movsb
lea
mov
gs
pop
jno
sbbb
scas
lret
push
and
xor
push
or
jge
decb
jge
or
pop
fs
test
inc
mov
inc
sti
adc
jmp
xlat
shrb
cmpb
mov
pushf
enter
enter
test
gs
mov
push
movsb
call
lods
sahf
repnz
xor
sbb
inc
mov
and
push
cwtl
aam
or
xor
int3
std
push
fildll
pushf
loop
scas
lahf
nop
jns
lods
nopl
fwait
movsb
cmp
orl
fsts
or
les
push
das
jmp
pop
sub
lret
test
mov
sbb
mov
jge
jne
and
movsb
lea
insb
adc
xor
mov
push
adc
jg
lcall
nop
jg
test
dec
mov
fwait
xor
push
jae
pop
out
push
pop
inc
sbb
pop
jge
sub
test
je
sbb
push
jb
cmp
ss
sub
stos
push
or
test
loop
push
inc
fsubl
inc
cmp
jae
adc
mov
pop
dec
pop
insl
aas
fnstenv
sbb
and
loope
adc
aaa
pop
lahf
pop
push
roll
jmp
inc
imul
int
scas
sbb
ljmp
subb
out
loope
dec
lea
aam
jbe
dec
pusha
mov
sub
xchg
adc
sbb
sahf
mov
test
movsb
and
and
aad
cmc
lds
adc
mov
or
es
into
clc
mov
loop
sub
adc
bound
and
ftst
xor
push
jns
stos
aad
into
jmp
inc
fdivrs
mov
fdivrs
mov
enter
pop
mov
xchg
adc
mov
xchg
inc
lcall
into
jl
mov
jmp
in
xor
sbb
imul
fcmovbe
pop
es
inc
cmp
std
fdiv
subl
sbb
in
pop
in
ja
jl
test
mov
adc
jmp
les
cmp
dec
mov
gs
ja
and
imul
sub
adc
ds
mov
in
pop
insb
inc
pop
and
push
push
pushf
call
mov
ljmp
jno
repnz
mov
cli
loop
xchg
jo
pop
insl
test
xor
mov
ret
push
pop
sbb
insb
push
add
cmp
xor
pop
mov
imul
cmp
into
call
or
or
popf
icebp
mov
mov
lods
push
cmpsl
xchg
js
mov
scas
pop
lods
out
arpl
cmp
xor
dec
inc
xchg
xor
jb
and
and
lahf
fs
sub
xor
xchg
push
loopne
ja
cli
pop
lahf
lcall
int3
das
sbb
jnp
arpl
ds
icebp
ret
stc
lret
cld
add
mov
push
dec
mov
and
pushf
ljmp
push
xchg
adcl
sahf
lret
dec
jno
mov
jecxz
inc
dec
lods
test
fistpl
dec
inc
sti
mov
loopne
movsl
jns
xorl
ss
xor
enter
aad
int
push
test
cmp
xor
push
dec
push
scas
cmc
dec
push
das
cmc
mov
mov
dec
test
call
pop
add
test
push
fcomps
add
xchg
xchg
push
inc
dec
fildl
mov
bound
enter
add
stos
mov
sahf
mov
mov
push
lret
mov
mov
clc
bnd
mov
mov
out
dec
or
into
jl
std
in
out
mov
adc
dec
call
imul
adc
cwtl
xor
push
xchg
es
loopne
dec
xchg
jbe
push
rcll
into
popa
mov
xchg
xchg
icebp
mov
hlt
pop
push
lahf
loopne
clc
adc
inc
mov
bound
int3
or
sti
lds
out
adc
pop
push
fistpl
mov
jl
xor
push
cs
xor
lret
sahf
sub
test
mov
bound
sahf
cmpsl
dec
sti
cs
cld
ret
aam
mov
jb
cmpsb
and
js
sbb
and
int
testb
mov
test
inc
jmp
push
les
mov
mov
push
lahf
in
ljmp
xchg
mov
loop
fcompp
iret
cli
aas
jle
pop
jno
mov
faddp
fidivrl
push
call
rcll
jno
mov
mov
pop
sbb
sbb
sub
mov
mov
xchg
pop
in
adc
and
lcall
dec
into
scas
xor
pop
pop
int3
or
out
pushf
dec
enter
or
fidivrs
andb
loope
dec
je
insb
adc
xchg
sbb
push
mov
dec
cmp
mov
mov
mov
sub
popf
rorb
pop
ja
ja
adc
or
in
out
dec
cli
aaa
es
jo
lds
rcl
pop
or
mov
pop
stos
ds
mov
mov
sub
out
pop
shlb
mov
dec
test
xchg
inc
cmp
and
jae
jo
mov
rorl
in
cmc
out
sbb
add
lcall
in
push
popa
fldt
aas
or
xchg
ljmp
adc
jecxz
ljmp
mov
fnstenv
xchg
in
pop
leave
lea
stos
js
xor
pop
jl
jle
arpl
push
xlat
adc
arpl
movsb
lcall
and
fsubs
mov
iret
dec
mov
mov
aad
xor
out
out
xchg
mov
andb
push
push
sbb
shlb
mov
mov
push
pushw
mov
out
cli
xchg
nopl
lea
pop
push
adc
dec
jp
or
jmp
push
push
xor
push
jmp
test
lahf
mov
sahf
adc
repnz
outsl
data16
jbe
mov
flds
out
inc
imul
lea
adc
out
mov
int3
push
negb
cmp
adc
in
jp
push
push
nop
cmp
mov
mov
sbb
push
inc
inc
mov
sbb
aam
mov
cld
mov
mov
xor
movsb
ficomps
xlat
fcmovnbe
or
hlt
mov
and
pop
sub
mov
or
pop
sub
addl
fists
xchg
test
adc
jecxz
outsb
es
add
inc
push
or
adc
xlat
or
out
sub
inc
gs
jge
leave
push
xor
cmp
xchg
jmp
out
insb
sbb
ret
fwait
sub
dec
movsb
icebp
faddl
jmp
add
push
jmp
xchg
les
out
fyl2xp1
push
fidivrl
sub
adc
ret
add
adc
mov
or
xlat
into
shl
lods
mov
jnp
negl
test
jg
jp
xchg
jns
cmpsl
iret
or
fldl
stos
idiv
xor
pushf
jnp
push
fwait
cmp
xchg
fimull
and
jge
mov
test
push
xor
push
insb
pop
fisubl
jnp
addr16
sub
sbb
sbb
mov
aaa
mov
jl
pop
dec
insl
xor
jae
cli
jno
and
movsl
push
in
pop
popa
jle
stos
out
lahf
xchg
push
inc
and
insl
sbb
xchg
into
jle
rcl
clc
sbb
xchg
sbb
aaa
jo
aaa
loop
stos
mov
cmp
jbe
mov
xchg
stos
dec
in
std
jg
cmp
mov
add
and
out
dec
xor
and
movsb
outsb
dec
push
mov
cld
gs
add
mov
mov
mov
sbb
das
inc
mov
xor
pop
push
movsb
or
adcb
pop
rorb
cs
inc
in
sub
cmp
push
ja
or
imul
cmp
xchg
jl
ja
arpl
sub
add
out
sbb
scas
or
call
stos
out
sbb
insl
int
push
sbb
scas
add
cmpsl
adc
sub
push
pop
subb
or
rol
movsb
jge
mov
mov
xchg
mov
pop
dec
ljmp
mov
mov
test
mov
ret
int
dec
ret
pop
inc
imul
jne
lcall
push
mov
mulb
or
push
mov
jle
or
lods
jg
mov
mov
mov
scas
out
add
test
cmpsl
lret
pushf
dec
inc
fs
jmp
scas
lods
mov
daa
fiadds
cmp
adcb
popa
jns
xchg
pop
ret
pusha
divb
mov
sub
arpl
inc
jge
imul
sub
jle
movsl
adc
inc
mov
repnz
jl
stc
addl
xor
rcrb
sub
cli
or
ljmp
popf
shlb
out
dec
xor
fcmovnb
pop
rcrb
jo
inc
dec
lods
cli
pop
pop
jb
mov
loop
jno
mov
mov
es
inc
in
and
fdivr
sbb
adc
nop
sub
clc
fldcw
icebp
insl
add
lret
es
xor
or
insb
inc
hlt
mov
push
test
or
cmp
xor
adcl
lahf
adc
or
or
jns
push
sbb
mov
adc
jle
test
inc
inc
lea
dec
movsb
xchg
inc
aad
adc
xchg
imul
sub
out
dec
and
pop
arpl
jae
out
popa
popf
stos
sub
pop
iret
fidivrs
mov
mov
test
in
pushf
adc
and
cli
cmp
xor
cltd
outsl
xor
ss
sbb
sub
rcrb
fstl
faddl
push
adc
mov
jb
andb
push
test
das
adc
push
das
stos
adc
jbe
mov
into
ret
adc
inc
sbb
lcall
jmp
movsl
lret
push
sub
and
mov
aad
test
out
insb
and
fstl
fisubrs
in
ljmp
or
fistpll
cmc
push
mov
push
ret
je
add
sub
jg
cmpsb
popf
xchg
ljmp
pop
inc
add
lock
inc
pop
arpl
pop
push
adc
insl
jnp
test
shll
shl
ret
arpl
pop
ffreep
add
mov
and
fcoml
jl
adc
in
andb
pop
aam
ds
js
test
mov
sbb
pop
adc
jne
fistpll
scas
dec
cmp
push
shll
pop
test
shlb
mov
push
stos
add
clc
adc
xor
fstp
cmp
jmp
adc
sub
push
mov
xor
and
sbb
movl
mov
mov
scas
sbb
cmp
inc
leave
int
mov
cmp
adc
jnp
or
pusha
lock
or
cmpsl
sub
push
and
mov
mov
ficoms
ret
sub
andb
lods
ja
jle
sti
cmpb
bswap
imul
sar
lods
xchg
hlt
bound
adc
test
sub
push
push
mov
mov
testb
stc
adc
xor
pop
mov
mov
adc
adc
rcrb
mov
idivb
sbb
xchg
ss
frstor
scas
dec
and
popf
xor
and
adc
ret
mov
mov
and
xlat
jl
popa
cmpsb
loope
add
das
and
jns
ljmp
mov
aas
rorl
mov
jle
lcall
inc
cmc
pop
jno
mov
stos
pop
sub
jo
bound
sbb
push
sbb
loopne
ret
push
call
jle
sub
movsb
mov
andb
movsb
mov
jl
pop
mov
stos
xchg
fbstp
pop
inc
adcb
fidivl
and
outsl
push
adc
stc
or
pmulhuw
xchg
int3
dec
sub
push
jmp
fists
aas
arpl
mov
cmp
insl
mov
rclb
ret
popa
pop
or
adc
adc
scas
mov
rorl
frstor
push
les
cmp
cmc
mov
adc
adc
adc
les
inc
xchg
shr
mov
sbb
and
xor
or
xor
iret
dec
insl
jnp
inc
cli
popa
mov
rorb
mov
add
xor
and
mov
aaa
ds
sub
das
xchg
iret
ret
xlat
jmp
mov
test
or
in
int3
mov
imul
hlt
mov
inc
cltd
stc
and
dec
loope
ljmp
sub
push
cmc
pop
sbb
pusha
push
inc
std
and
inc
inc
mov
sbb
fstpt
sbb
bound
or
jle
ljmp
push
lea
xchg
xchg
es
notb
inc
mov
mov
cld
orl
scas
jne
cmp
and
inc
mov
addr16
insl
inc
mul
sahf
xor
xor
popf
lds
cmp
movsb
xor
jle
mov
out
test
adc
int3
mov
cmpsb
int
rorl
mov
adc
dec
daa
add
xor
cli
push
mov
and
mov
dec
mov
xchg
arpl
push
xchg
adc
jmp
call
push
test
jp
sbb
data16
cli
test
push
test
dec
addr16
loope
neg
xchg
jmp
scas
sub
stc
cmc
dec
mov
cmpsl
roll
ja
and
sbb
mov
mull
fdivl
repz
popf
push
or
adc
stos
push
aas
adc
pop
xchg
rcrb
sbb
jb
dec
ret
add
repnz
add
mov
mov
shl
int
inc
ds
jecxz
ds
int
sti
mov
adc
ds
pusha
dec
mov
jno
push
fldl
jae
gs
cmp
adc
push
int3
imul
adc
push
mov
and
nop
flds
cmc
push
out
or
adc
and
lret
and
jp
out
fsubr
cltd
fabs
insl
lds
sub
mov
fimull
mov
hlt
aam
mov
in
cmpsb
xchg
cmp
pushf
mov
add
or
mov
cmp
and
imul
mov
inc
popf
ja
mov
pop
out
divl
push
fbld
lock
loopne
xlat
mov
and
xchg
cs
mov
fcompl
in
js
lock
ret
sarl
cwtl
loopne
xchg
push
sbb
sub
add
add
bswap
sbb
lods
stos
and
pop
cld
and
faddl
decl
pusha
lods
outsb
nop
inc
jg
daa
pop
enter
cmp
out
sti
lcall
add
cmp
mov
out
xor
mov
cld
sbb
sbb
adc
mov
inc
inc
lahf
shll
movsb
leave
or
call
and
inc
aas
sub
mov
mov
rcrl
shl
jbe
pop
fldl
fsubrl
dec
and
push
add
sahf
add
inc
mov
or
cmp
daa
test
jne
jne
push
xor
adc
scas
shll
es
divb
xchg
jp
lahf
jl
pop
aaa
mov
sub
cmp
inc
lea
enter
sbb
add
cli
mov
mull
daa
popa
jge
out
push
mov
mov
pusha
testl
imul
daa
jmp
call
push
aam
inc
pop
jg
dec
and
sbbb
mov
sbb
jnp
sti
xchg
sub
inc
clc
push
mov
dec
ljmp
mov
out
jo
jnp
or
cmp
in
jno
std
negl
cmp
jecxz
test
pop
test
arpl
clc
pusha
mov
int3
inc
test
pop
xor
or
push
mov
and
lds
jbe
pop
sbb
push
js
cmc
push
leave
arpl
aaa
daa
mov
fldcw
xchg
sbb
notl
pop
mov
xor
clc
in
sub
mov
test
dec
bound
pop
cld
jge
movsb
out
push
dec
xor
jg
push
lock
ficompl
sbb
fs
xchg
xor
aas
ss
in
orl
xchg
sub
std
jnp
push
inc
and
or
arpl
rol
lret
fwait
in
pop
xchg
lahf
xchg
or
pop
xchg
xor
mov
pusha
icebp
data16
cmp
out
xor
or
pop
popa
mov
das
mov
sub
pop
call
pop
mov
jbe
mov
xor
rcll
mov
leave
xchg
cwtl
cmp
data16
out
sbb
cmc
call
lcall
add
mov
and
pop
jmp
sahf
cmp
xchg
sbb
add
mov
sub
jnp
nop
cmpsl
popa
push
sub
push
stos
ds
mov
outsl
cmp
fsubrs
jecxz
adcl
call
sbb
mov
jne
nop
mov
xchg
mov
sti
add
pop
sti
mov
dec
insb
shlb
aas
divb
xchg
pop
mov
scas
iret
jl
sar
inc
mov
insl
jbe
lods
xchg
push
pop
and
stc
int
xchg
hlt
aas
or
mov
fldl
sbb
fs
jg
or
movsl
call
xchg
mov
lock
add
adc
jb
insb
xchg
icebp
jno
sub
inc
sti
daa
bound
sub
push
and
inc
mov
lods
pop
inc
cwtl
pop
adc
xchg
xchg
neg
lds
mov
mov
dec
mov
popf
pusha
je
imul
add
loop
mov
dec
jle
mov
xorb
push
adc
inc
ljmp
ja
das
add
fsubr
push
mov
scas
or
fwait
hlt
adc
sbb
int
sahf
jne
pusha
xchg
scas
xchg
lock
push
test
mov
enter
sub
adc
repnz
addr16
adc
jo
fstp
lret
div
jp
call
stos
xor
pop
mov
cmp
ret
push
xchg
mov
jmp
iret
cmp
stos
cli
xchg
dec
or
and
fstp
lock
in
pop
push
das
leave
pusha
sub
cmp
test
xchg
inc
jge
ds
int3
sub
and
lret
insl
pop
ret
out
pop
mov
into
fsub
hlt
scas
add
insl
mov
push
imul
bound
push
sbbb
imul
add
test
les
inc
imul
mov
xor
loope
sub
mov
fs
shlb
mov
sub
out
repnz
sbb
xchg
sbb
insb
loope
negb
dec
out
xchg
fisttpll
mov
mov
push
jno
gs
pop
dec
fs
lret
dec
loop
shlb
stc
push
orl
cwtl
xor
subb
fdivl
sbb
push
xchg
pop
insl
cmc
add
add
outsb
test
sbb
stos
xor
dec
jge
mov
cld
enter
mov
mov
ret
xor
adc
inc
sbb
dec
lock
sub
ljmp
dec
roll
iret
adc
pop
jge
pop
mov
les
popf
jp
popl
and
mov
das
push
sbb
push
mov
lret
repz
test
dec
mov
mov
scas
cmp
pop
mov
je
imul
xchg
or
mov
mov
push
scas
push
jecxz
rcll
lea
xor
out
dec
mov
sti
pop
cmp
sahf
shll
xor
inc
ret
rorb
insb
rorl
adc
rcl
cmp
cltd
sub
push
fldt
mov
repz
adc
xor
icebp
aas
pop
jge
dec
aas
ficoms
xchg
rcr
add
adc
enter
xchg
fdivrs
jo
cs
cmpsb
mov
out
mov
mov
cmpsl
dec
ffreep
xchg
lods
sahf
out
mov
rcrb
inc
inc
mov
adc
cli
xchg
fiaddl
in
adc
adc
jns
and
or
push
lds
inc
xor
call
pop
sbb
add
push
cmp
or
xchg
or
iret
add
inc
push
mov
sub
sbb
dec
int3
xchg
loopne
imul
inc
mov
xlat
daa
mov
arpl
xchg
push
test
lds
mov
and
push
imul
pop
pop
in
mov
outsl
sub
xchg
std
xor
push
pushf
adc
mov
adc
ret
in
xlat
mov
sbb
or
cmp
xchg
in
popa
lcall
add
fsubl
lret
aam
cmp
or
mov
and
push
aas
jb
push
es
in
addr16
les
xor
add
add
popf
out
or
fisttpll
addr16
lock
faddl
popa
testl
adc
ds
add
mov
jo
xchg
add
jmp
mov
xchg
lods
sub
pop
popf
cmc
stos
pushl
sbb
mov
sub
push
mov
add
lods
test
loope
add
dec
jne
push
stos
ljmp
stos
jns
pop
or
inc
mov
xlat
adc
xor
bound
adc
sub
enter
sub
outsb
push
cmp
ds
mov
lret
mov
sbb
imul
cltd
addr16
out
or
mov
popa
jnp
jge
or
neg
stos
fwait
mov
sbb
push
rclb
mov
xchg
push
mov
pop
add
dec
aam
pop
sbb
hlt
in
bound
push
and
sbbb
dec
pop
pop
out
and
in
jmp
rol
test
bound
cmpsl
cli
arpl
aaa
jp
or
jg
shrl
mov
mov
adc
hlt
sbb
inc
adc
push
movsb
test
cmp
adc
sahf
adc
in
test
dec
mov
mov
iret
fcompl
in
stos
or
mov
mov
lods
add
jge
fcmove
inc
mov
enter
pop
aaa
push
aad
jb
pop
or
inc
cmp
sbb
mov
jmp
sbb
jmp
jg
xchg
and
push
clc
insb
sahf
xchg
pop
add
mov
xorl
sub
aaa
aaa
and
out
pop
inc
xor
test
sarb
fsubs
fstpt
mov
outsl
sahf
mov
addl
bound
mov
xchg
js
insb
icebp
jecxz
shrl
imul
xchg
popa
pop
pop
movsb
int3
mov
jge
subb
or
cmpxchg
fldenv
or
pushf
jne
rcrb
cs
and
mov
and
jg
push
sbb
xor
inc
push
mov
add
repnz
out
aaa
mov
in
cwtl
cmp
in
hlt
adc
push
out
out
dec
and
movsl
xchg
call
rcrb
outsl
scas
jg
push
mov
js
gs
aam
std
jmp
rol
add
mov
pop
call
adc
roll
pop
adc
mov
xchg
imul
cmp
mov
dec
ds
ja
sti
inc
ljmp
ficompl
pop
jl
mov
mov
cltd
sbb
sahf
lahf
inc
sbb
aam
aad
pop
mov
scas
stos
push
ret
jl
or
cmp
test
jmp
les
cli
imul
fisubrl
imul
mov
bound
and
shll
jnp
jb
push
movsl
cmp
ret
and
movsb
push
stos
or
xchg
lods
cwtl
lcall
xchg
stc
pusha
test
es
mov
pop
enter
scas
jno
shll
or
fdivs
xchg
xor
mov
pop
push
xor
mov
popa
in
aaa
pop
cmp
jmp
jo
movsb
xchg
mov
push
inc
inc
and
or
mov
sub
dec
out
adc
cmp
mov
aaa
popa
daa
addr16
add
or
xchg
xor
add
jmp
mov
mov
shlb
push
dec
insb
insb
icebp
mov
dec
xchg
loopne
jne
lret
das
adc
scas
pop
stos
test
fcoms
sub
bound
out
xchg
rcl
or
loope,pt
imul
adc
fisubl
shl
jle
lcall
loope
andl
cmp
and
imul
and
xchg
mov
int
xchg
adc
in
pop
jo
mov
xor
jle
sbb
cmp
fcomps
fdiv
mov
mov
and
sbbb
and
shr
pop
sub
xor
inc
xor
test
stos
dec
inc
and
ljmp
and
into
and
pop
sarl
add
xlat
xchg
or
aad
jmp
icebp
cmp
out
jne
xor
daa
mov
and
incb
les
imul
mov
pushf
dec
push
stos
imul
outsl
sbb
mov
mov
mov
sub
insb
call
inc
sbb
push
jecxz
add
fwait
rorl
scas
out
xor
and
test
xor
pop
aaa
push
fdivr
outsb
push
mov
aad
jo
push
lock
test
out
mov
enter
push
add
lret
adc
test
xlat
repnz
cmp
ret
data16
and
lret
inc
cmc
nop
jp
fldcw
stos
sub
in
jg
sbb
into
xor
or
mov
push
cmp
dec
pop
sahf
std
sub
push
adc
imul
pop
pop
xchg
xchg
repz
fs
out
shll
out
mov
repnz
pusha
or
shrb
dec
xor
lret
ficompl
cmp
xlat
adc
inc
push
icebp
in
adc
faddp
aas
fidivrl
add
ss
mov
mov
jne
incl
jnp
out
lret
cmp
ljmp
and
push
inc
in
aas
mov
inc
rcl
inc
test
cmp
pop
or
and
mov
xor
lea
inc
xchg
out
xchg
rcl
xchg
sub
outsl
xchg
cs
xchg
or
idivl
mov
jbe
add
pop
mov
jno
repz
popf
ljmp
jnp
bound
mov
cmc
adc
pop
add
sbb
push
scas
jns
sbb
jg
jl
test
das
clc
mov
test
lea
inc
xor
aam
cmp
loopne
pop
adc
push
out
lret
arpl
xchg
inc
in
adcb
pop
daa
pop
push
shlb
imul
rcll
cmp
or
push
fimull
jb
arpl
imul
add
pop
or
or
cmp
dec
cmp
and
sub
xchg
add
shlb
xor
mov
loop
cwtl
jns
or
pavgw
outsl
xchg
dec
push
sti
xchg
arpl
lods
out
ss
xchg
dec
push
test
aad
mov
icebp
std
inc
or
fstl
push
mov
insl
int3
test
mov
adc
jbe
popf
sub
push
inc
shr
sub
mov
repnz
jmp
sub
mov
adcb
dec
icebp
ss
jbe
mov
movsb
hlt
rclb
pusha
std
sub
fnstenv
pusha
jl
cmp
xchg
mov
mov
popf
cs
in
mov
cmp
inc
cld
mov
stos
lea
inc
dec
dec
shrl
in
in
inc
adc
xchg
inc
jp
addr16
mov
insb
inc
adc
pushf
mov
loope
cmp
adc
inc
and
xor
arpl
or
popa
scas
mov
mov
adc
cld
xchg
ja,pt
push
repz
and
push
lea
rcrl
aas
or
mov
out
fnstsw
cmp
sbb
inc
fadd
dec
cld
mov
mov
mov
inc
mov
insl
dec
and
mov
pop
insl
out
xor
fistpll
enter
push
and
ja
cltd
mov
stc
leave
cmp
xor
inc
or
jg
out
cmpsl
mov
les
cld
pusha
inc
je
xchg
xorb
in
lds
jo
ja
jg
mov
loop
js
or
scas
gs
insb
and
fsubrl
int3
test
sar
je
xchg
fwait
jns
sahf
mov
sub
insl
adc
push
pop
dec
mov
fwait
lds
push
pop
jae
jmp
xchg
jnp
cmp
pop
mov
daa
jno
jle
out
xchg
push
jcxz
lahf
cmp
fsub
mov
mov
movsb
mov
rol
pop
lea
sgdtl
jl
arpl
mov
setne
jno
cs
xor
cmp
push
jg
aaa
inc
push
lret
decb
out
aaa
bound
pop
mov
icebp
icebp
cmp
or
cmp
out
add
fimuls
jno
fwait
mov
sub
push
jne
or
adc
arpl
fldt
fisttps
mov
inc
mov
xchg
mov
xor
push
cli
fucom
push
mov
insl
adc
mov
xor
cmc
bound
mov
shll
mov
cwtl
fists
stos
out
add
lock
adc
into
lods
dec
push
cltd
and
sub
jns
pop
xchg
add
ljmp
hlt
mov
push
loop
mov
adc
sbb
cmp
stos
clc
sbb
inc
stos
addr16
imul
jne
jns
js
addr16
stc
pop
push
inc
mov
stos
inc
mov
cmp
icebp
xorl
xor
cmp
xchg
pop
add
jecxz
mov
mov
daa
pop
lods
addr16
cmp
sahf
pop
cmpsl
adc
daa
ss
sti
aas
mov
cld
pop
cmpsb
cmpsb
add
shrl
mov
adc
inc
lds
rol
and
outsl
movsl
movsb
or
loopne
cmp
jmp
sub
aas
inc
add
mov
mov
test
xor
imul
ja
and
push
imul
cmp
in
repnz
call
push
jns
inc
push
dec
add
clc
and
sbb
xchg
pop
arpl
pushf
aam
sbb
and
lahf
mov
dec
mov
pop
mov
mov
mov
pop
js
outsl
stc
out
push
je
dec
pop
fldenv
xchg
jns
in
mov
mov
mov
fiaddl
imul
mov
pop
or
inc
sbb
cmpsl
or
xor
adc
lods
clc
mov
loop
mov
mov
push
sub
jns
mov
and
notb
sarl
mov
cmp
lods
lret
inc
mov
jl
jbe
lock
stos
repz
mov
std
push
clc
mov
push
push
out
into
inc
negl
bound
test
ja
inc
outsb
emms
andb
pop
lods
gs
adc
lea
jmp
cld
push
xchg
jmp
sbb
addr16
push
aad
ret
out
sbb
icebp
enter
pushf
inc
push
mov
fisubrs
roll
idiv
sbb
rol
mov
testl
int
jg
sbb
sbb
jnp
cmp
and
xorb
loop
and
dec
aad
mov
fistps
mov
iret
lcall
loop
mov
into
xor
inc
movsl
aas
cmpsl
ss
adc
in
sarl
and
pop
movsl
cmpsl
in
jnp
stos
mov
or
xchg
mov
mov
mov
addr16
das
xchg
fldcw
cmc
jle,pn
sub
xor
add
xor
loopne
push
fdivr
scas
mov
and
adc
adc
fistpll
and
mov
sbb
lahf
dec
rol
jl
cli
mov
pusha
and
icebp
inc
xchg
movsl
jae
cmp
shlb
je
mov
jbe
mov
jge
out
mov
lods
jmp
in
dec
or
sub
or
mov
and
inc
adc
jle
test
rolb
jle
xchg
push
dec
jmp
sbb
adc
and
dec
fists
jge
dec
ficomps
clc
negl
adc
insl
mov
popa
sub
bound
sub
cmp
jb
xor
sti
aam
ds
ss
rorl
mov
sti
shl
cltd
sbb
push
shr
inc
mov
add
cli
jne
sub
insl
sbb
xor
pop
data16
aas
ss
push
in
mov
sbb
mov
cs
out
jl
or
stc
aas
and
sbb
cltd
xchg
push
xor
inc
inc
pop
xchg
fcmovb
dec
hlt
loope
push
shr
adc
adc
insl
sub
and
stos
sub
enter
pop
fidivrl
mov
subb
test
enter
rorl
push
outsl
notb
pop
aas
mov
mov
mov
fnstsw
hlt
mov
or
movsl
inc
jecxz
push
xor
movsl
aaa
pminub
cmp
pop
and
inc
push
sub
dec
mov
jge
cmp
mov
pop
int3
addr16
sbb
dec
roll
test
in
jle
or
cmp
popa
fstpt
pop
int
mov
es
lret
cmp
rorl
xchg
and
sar
movsb
in
bound
lods
das
pop
pop
out
mov
or
mov
int
les
xor
inc
cwtl
insl
sub
xchg
js
out
ret
call
data16
mov
les
fisubs
aad
cmc
adc
sahf
sub
andl
das
push
xchg
xor
jb
jno
pushf
cmpsb
jae
xchg
jle
movsb
fdivrl
imul
or
int
insb
xchg
xor
dec
out
adc
int
xlat
push
icebp
push
mov
shlb
lret
imul
cmp
mov
stc
clc
dec
loop
or
xor
push
insl
dec
or
gs
cmpsl
mov
cli
loop
es
mov
nop
xchg
sahf
dec
lcall
mov
jnp
out
jmp
into
ret
ds
sub
fdivl
pushf
aaa
lret
in
ja
dec
push
js
cmp
cmpsl
jb
sbb
divb
pusha
add
das
jne
push
add
xchg
outsb
jae
adc
rolb
cmp
test
sub
jae
cmp
ror
cltd
jmp
or
push
ja
push
adc
and
lret
inc
sub
pop
cmp
ret
shr
das
jbe
xchg
aaa
sar
jp
ss
lea
ljmp
xlat
dec
rorb
jg
xchg
mov
divb
and
jmp
pushl
mov
cmp
inc
jne
imul
jecxz
push
ret
imul
mov
push
push
out
jno
mov
push
gs
add
sub
pusha
and
sub
cmp
lds
mov
mov
mov
je
sbb
scas
pop
jnp
dec
sub
add
sub
xor
xor
or
rcr
xchg
inc
scas
jecxz
push
mov
shll
js
stc
ja
and
roll
ds
fldenv
adc
mov
rcrl
imulb
sahf
mov
aaa
stos
ficoml
inc
pop
nop
icebp
jns
adc
stc
idivb
or
loopne
clc
xchg
inc
xchg
mov
push
gs
xchg
cs
punpcklwd
imul
addb
dec
xchg
fsubl
mov
xchg
sub
arpl
sbb
stos
push
mov
pushf
stos
imul
xchg
add
sub
sbb
test
shll
push
jmp
pop
insl
lods
ljmp
jo
pushf
jnp
nopl
int3
adcl
add
jecxz
mov
test
add
mov
mov
add
sbb
dec
sub
sub
bswap
shlb
in
fistpll
jmp
out
in
jo
out
movl
test
jge
jl
mov
dec
cld
jb
fsubrl
add
cltd
push
cmp
xor
andb
test
add
or
cwtl
in
loope
mov
xor
and
cmpsb
fsubrl
dec
inc
bound
push
inc
push
sbb
inc
dec
jo
dec
ret
int
jo
aas
xchg
push
push
push
call
les
popf
pop
cs
xchg
mov
jg
iret
mov
add
mov
sub
mov
pop
mov
pop
aaa
pop
lret
in
sub
pop
dec
inc
push
notb
add
mov
xchg
inc
push
ljmp
inc
loopne
push
cs
jp
imul
test
pop
fistpll
rorl
pop
inc
cmp
dec
popl
lock
inc
fimuls
por
rolb
movsb
jmp
and
sbb
test
push
push
scas
sub
outsb
out
mov
int3
add
inc
insl
mov
mov
inc
adc
bound
or
and
jns
pop
inc
jge
int
and
mov
sub
mov
iret
push
lcall
ja
mov
sub
adc
rcrl
sub
std
or
pop
pop
in
shrl
jp
jnp
jno
xor
fs
cli
mov
lahf
pushf
mov
or
scas
out
jo
repz
int3
repz
and
jge
lret
div
sbb
out
shrl
mov
add
dec
lret
cmpsl
call
dec
jg
aad
iret
xchg
pop
cld
cmp
or
lcall
shl
push
add
pusha
stc
nop
add
push
in
cmp
aaa
outsl
mov
mov
fcmovb
in
or
cmp
loopne
mov
sbb
pop
icebp
inc
add
mov
xchg
aad
movsl
jnp
je
nop
adc
loop
and
and
sbb
sbb
dec
cmp
pushf
pop
mov
or
ja
sub
mov
test
push
fisubl
cmc
ficoml
inc
jns
cmovle
test
repnz
repnz
push
xor
sti
or
and
adc
addb
loopne
loopne
stos
push
arpl
adc
fwait
test
ss
divl
fs
fdivs
andb
dec
xlat
popa
sahf
jge
cvtdq2ps
insb
mov
addl
imul
push
test
ljmp
ja
aad
inc
jae
mov
mov
push
mov
xchg
call
daa
jne
outsb
adc
sti
fwait
mov
pop
repnz
pusha
stos
and
negl
sbb
push
movsb
lods
stos
movsb
mov
je
push
jo
xchg
cmp
sbb
dec
jne
in
mov
cltd
mov
test
xchg
imul
push
ljmp
mov
push
outsl
jge
repz
loope
or
jecxz
xchg
lds
lock
cmpsl
pop
or
das
xor
push
movsb
lcall
in
jg
push
ja
addr16
fnsave
mov
addb
andl
mov
mov
pop
jns
and
inc
fildll
enter
sahf
inc
movsl
sub
mov
les
cld
test
in
pop
fstpl
xchg
das
cmp
adc
fcompl
push
and
xor
loop
sbb
lea
cltd
ds
and
push
cmp
mov
lock
pop
mov
ret
out
rorb
xorl
out
or
gs
add
xor
outsl
xchg
fildl
clc
xchg
test
scas
add
repz
adc
mov
and
mov
cmp
repnz
icebp
xor
or
cmp
cmp
inc
sub
leave
cli
ljmp
enter
inc
sbb
in
lock
shlb
bnd
repnz
mov
push
rorl
fucomi
jg
aad
jbe
test
xchg
and
adc
ljmp
cltd
adc
in
enter
insl
adc
in
jl
sub
je
pusha
push
in
jp
adc
push
push
ss
xor
insl
adc
sbb
fwait
mov
lock
jne
jb
mov
inc
arpl
dec
notb
sti
inc
aaa
inc
push
sub
mov
mov
sbb
out
xor
mov
xchg
shr
jecxz
cmp
int3
push
aam
dec
test
sbb
mov
icebp
sub
adc
and
sahf
fwait
pushf
out
mov
int3
sbb
xchg
pop
mov
dec
mov
sahf
mov
jne
lcall
jmp
aad
xor
mov
mov
inc
push
mov
clc
jl
cmpsb
xchg
pop
jle
sub
push
inc
es
outsb
test
roll
lea
mov
dec
out
shl
repnz
sarl
in
inc
call
insl
push
out
lcall
jbe
fcmovb
jle
negb
stos
inc
push
or
adc
cltd
adc
lea
lds
cmpsl
xor
aas
mov
mov
xchg
cmp
cmpsl
scas
int
outsl
stc
repz
pop
and
cmp
cwtl
in
lret
ss
std
mov
mov
das
and
stos
cltd
stos
loope
out
outsl
cmpsl
jge
cs
lods
mov
add
ss
inc
adc
in
aas
xchg
pushf
pop
imul
ret
inc
adc
sub
pop
mov
loope
push
mov
and
cmp
mov
cmp
movsb
jno
dec
add
movsb
jp
in
adc
xchg
and
push
mov
scas
pop
gs
loopne
inc
lret
or
nop
mov
add
imul
inc
fsub
insb
dec
add
movl
xor
xchg
pop
mov
inc
sub
push
rorl
or
sub
fs
dec
xor
repnz
mov
or
mov
mov
test
rolb
inc
push
imul
gs
xchg
sub
lret
leave
std
movsl
out
int
fimuls
cmpb
xchg
push
add
xor
add
fwait
xor
les
jge
push
pop
ja
add
xor
push
shl
lret
push
scas
lahf
push
jle
cmp
loopne
push
sbb
and
test
jmp
fsubl
cs
fs
mov
fdiv
and
pop
push
mov
inc
lock
ja
insb
xchg
push
shrb
and
add
fcoms
inc
lret
dec
push
jmp
and
jmp
inc
mov
and
xchg
cmp
sub
push
aas
and
stos
xchg
cli
xchg
push
mov
or
pop
rorb
mov
les
es
adc
xchg
lahf
cltd
stc
test
mov
aaa
sbb
and
jg
inc
jns
mov
sbb
ljmp
xchg
push
shrl
sbb
iret
sbb
cmp
mov
call
mov
jb
subb
jle
fimuls
mov
jecxz
cmp
dec
cmpsb
aas
pop
mov
adc
add
nop
sti
mov
sahf
cmp
push
fstps
inc
jbe
clc
out
std
push
xor
push
call
out
add
xchg
int
fstl
mov
lods
orl
pop
sub
mov
in
inc
or
lods
pusha
ret
fwait
add
sub
loopne
outsl
mov
mov
in
gs
loop
and
outsl
jne
fwait
pop
xchg
shll
jg
fcom
scas
sbb
outsb
adc
push
lods
cmpsb
pushf
mov
mov
test
xchg
dec
and
xlat
sti
cwtl
lea
jge
adc
xchg
cs
lock
push
int3
mov
mov
inc
add
mov
inc
add
mov
lea
movzbl
dec
sub
add
dec
add
xor
lea
add
mov
inc
movzbl
inc
dec
add
and
lea
mov
inc
dec
inc
add
inc
mov
and
lea
sub
sub
dec
cmp
jb
add
xor
xor
lea
mov
mov
inc
mov
dec
add
inc
add
xor
lea
inc
inc
mov
dec
inc
cmp
jb
add
mov
lea
mov
xor
sub
inc
xor
inc
inc
pop
add
lea
test
jbe
imul
sub
inc
add
inc
xor
lea
add
add
add
dec
sub
lea
mov
dec
dec
inc
sub
sub
xor
lea
imul
inc
and
inc
dec
mov
inc
xor
movzbl
lea
mov
add
inc
inc
and
inc
inc
mov
add
lea
mov
add
mov
inc
add
mov
dec
sub
lea
imul
inc
dec
dec
jne
dec
mov
dec
or
lea
mov
dec
sub
add
dec
or
lea
mov
mov
inc
inc
inc
inc
xor
lea
movzwl
mov
inc
inc
test
jbe
add
add
sub
lea
mov
inc
dec
dec
sub
add
lea
mov
dec
inc
inc
inc
dec
add
lea
imul
dec
inc
and
inc
inc
mov
and
lea
movzbl
mov
inc
add
sub
inc
and
inc
jmp
lea
movswl
inc
inc
pop
ret
push
inc
inc
and
lea
mov
dec
sub
inc
sub
inc
push
xor
lea
mov
dec
push
dec
inc
push
dec
sub
push
lea
mov
push
inc
dec
inc
dec
add
lea
mov
dec
dec
inc
dec
sub
lea
mov
dec
call
sub
inc
add
dec
imul
or
lea
movswl
inc
inc
sub
dec
and
lea
imul
inc
inc
inc
dec
or
lea
imul
dec
add
sub
inc
add
lea
mov
dec
inc
inc
add
sub
lea
mov
inc
cmp
je
dec
sub
dec
and
lea
mov
inc
inc
inc
dec
or
lea
mov
inc
dec
inc
add
xor
lea
movswl
dec
inc
inc
add
sub
lea
mov
dec
inc
dec
inc
sub
lea
mov
dec
inc
sub
inc
xor
lea
mov
inc
inc
inc
dec
and
lea
mov
inc
add
dec
dec
add
lea
mov
ret
add
add
pop
sub
ret
push
sub
mov
add
lea
push
mov
dec
add
dec
dec
push
inc
push
or
push
lea
jmp
or
mov
lea
mov
movzbl
dec
sub
mov
dec
sub
mov
sub
lea
movzbl
mov
sub
add
inc
add
and
sub
add
movzbl
lea
mov
xor
inc
dec
inc
inc
add
or
lea
mov
inc
inc
dec
inc
add
dec
jne
lea
mov
mov
inc
pop
dec
add
pop
add
sub
pop
lea
imul
dec
add
add
dec
or
lea
mov
add
add
add
ret
push
dec
inc
xor
lea
movswl
inc
inc
dec
push
push
push
push
dec
xor
lea
push
mov
inc
inc
inc
add
xor
lea
mov
add
mov
sub
push
inc
inc
xor
or
lea
push
mov
dec
push
inc
inc
pushl
add
call
and
add
lea
mov
inc
inc
dec
inc
add
pop
ret
movsbl
sub
inc
dec
call
inc
and
lea
push
mov
inc
xor
inc
mov
dec
mov
sub
and
mov
lea
imul
test
je
sub
inc
inc
sub
or
lea
mov
sub
add
mov
inc
dec
mov
add
lea
imul
inc
repnz
add
dec
add
dec
jmp
sub
lea
mov
inc
inc
dec
dec
xor
lea
mov
pop
pop
ret
push
dec
sub
inc
inc
or
lea
mov
inc
dec
inc
sub
or
lea
mov
add
add
inc
add
or
lea
mov
add
dec
add
inc
xor
lea
mov
pop
ret
sub
sub
mov
inc
add
mov
inc
sub
mov
lea
mov
mov
inc
dec
xor
add
inc
mov
and
lea
inc
mov
dec
dec
inc
sub
sub
cmp
jb
lea
push
imul
dec
push
inc
add
push
sub
or
mov
lea
movzbl
xor
add
dec
xor
add
inc
xor
add
lea
push
mov
dec
xor
sub
jmp
or
add
adc
add
jne
add
adc
add
sub
mov
mov
js
add
add
inc
add
cmp
push
sub
add
inc
add
sub
add
les
ret
push
add
inc
mov
sub
lea
mov
dec
inc
dec
dec
or
lea
mov
dec
call
dec
inc
dec
xor
lea
imul
add
dec
add
add
sub
lea
mov
dec
dec
inc
inc
xor
lea
movswl
inc
dec
dec
dec
call
or
lea
mov
inc
call
inc
dec
sub
add
call
lea
push
mov
add
dec
sub
add
call
xor
lea
mov
inc
inc
add
call
inc
pop
xor
lea
mov
add
inc
pop
sub
dec
pop
inc
xor
lea
imul
pop
inc
dec
inc
dec
xor
lea
movsbl
dec
pop
dec
dec
pop
inc
or
mov
lea
imul
call
inc
add
dec
dec
ret
add
lea
push
imul
inc
push
dec
dec
push
inc
add
push
lea
mov
push
add
inc
mov
dec
inc
push
add
ret
push
lea
push
imul
inc
push
add
inc
push
inc
or
push
lea
mov
push
add
sub
dec
call
inc
add
lea
add
dec
inc
add
add
lea
mov
inc
inc
dec
dec
and
jmp
les
push
xchg
and
jo
mov
sti
add
adc
dec
test
outsl
pop
shl
movb
mov
lahf
orl
ja
mov
inc
cltd
das
popa
repnz
pop
outsl
mov
cld
xor
adc
insb
rcll
nop
and
xor
adc
scas
add
fsubrs
jnp
int3
xor
lds
loope
stos
push
xor
cmpsl
aad
push
push
mov
pop
push
stc
mov
cmp
xchg
je
add
sub
lds
adc
xchg
js
xchg
addr16
fistl
mov
xor
sub
sub
nop
jmp
popf
call
xor
aad
fisttpl
ja
fistpl
imul
dec
idivl
mov
push
flds
pushf
mov
dec
ds
mulb
js
sub
sub
jbe
jp
jecxz
sub
sbb
call
notl
and
lods
xlat
push
int
mov
inc
and
imul
iret
pop
loop
inc
cmp
xlat
lock
pop
jmp
popf
jecxz
or
bswap
test
sarb
addr16
cmp
mov
cmp
inc
dec
push
mov
sub
inc
mov
mov
and
lock
jge
mov
addl
sub
ret
lock
fsub
pusha
mov
repnz
pushf
mov
mov
or
jo
dec
es
adc
inc
sub
fisttpl
xorl
push
cwtl
xchg
lods
xor
push
sub
repnz
mov
push
sahf
int3
adc
rcl
aad
push
ljmp
scas
jle
sbb
lcall
xchg
mov
das
jle
lret
sub
jg
xor
jmp
out
xchg
aaa
scas
scas
xchg
cmp
lods
or
sbb
mov
sti
lock
js
outsl
cmp
ja
in
mov
scas
fdivrs
mov
add
cmp
insb
add
ret
xor
stc
loope
jo
loopne
enter
xor
sbb
lret
rcll
mov
inc
sub
cmp
lock
jno
jmp
pop
pushf
dec
in
call
inc
or
loop
adc
mov
insl
push
repnz
add
add
insb
leave
mov
push
repnz
cmp
repz
push
cltd
roll
scas
xchg
in
dec
lret
bound
out
xchg
ja
and
mov
inc
mov
les
imul
pop
jecxz
push
leave
mov
mov
xchg
xorb
add
and
pop
xchg
sbb
push
and
pop
jecxz
xor
xor
jb
cs
pop
mov
adc
inc
push
mov
ja
and
xchg
add
lods
leave
neg
inc
adc
sub
xchg
or
sahf
stos
pop
lret
and
incl
inc
hlt
cmc
and
stos
stc
cmp
dec
cs
jmp
and
and
out
test
int
xchg
push
inc
pop
fcmovbe
nop
mov
mov
dec
cs
shlb
jmp
mov
clc
lds
imul
in
enter
lret
lret
imulb
push
mov
leave
mov
jmp
mov
icebp
out
insb
pop
in
dec
lock
jo
or
mov
movsl
mov
push
and
mov
mov
mov
push
mov
popl
movsb
out
loope
movd
mov
sbb
add
lods
sbb
das
ret
xchg
mov
sub
dec
ret
lods
adc
arpl
and
repz
lahf
dec
scas
data16
jp
pop
cmp
int
and
dec
jns
lods
xchg
bound
daa
lea
in
cwtl
pop
cmpsl
cltd
push
inc
or
xor
xchg
mov
cwtl
push
std
pop
jno
cmp
call
push
subl
add
outsb
in
imulb
cwtl
test
mov
sahf
jne
pop
es
cmp
subb
push
pop
cwtl
fcmovbe
push
gs
mov
xchg
xchg
mov
mov
pushf
in
push
cmp
fcomip
mov
xchg
popf
shll
and
shl
aaa
and
ljmp
pop
fnstenv
insl
and
out
shl
out
add
stos
jbe
dec
and
xor
pop
cwtl
ret
pop
shl
mov
movsl
test
jecxz
les
xor
cld
lcall
mov
mov
mov
scas
push
sahf
sbb
jmp
hlt
lret
and
pop
inc
push
lcall
add
pop
cmpb
pop
lret
arpl
push
movsb
mov
jae,pn
popa
pop
insb
aam
jae
incb
mov
bound
jge
loop
inc
jns
push
jl
dec
rcrb
cs
xor
imull
mov
clc
xor
mov
push
dec
insb
cmp
lods
cli
add
leave
sbb
and
movsl
add
repz
xchg
jg
sbb
or
or
outsl
push
hlt
sahf
movsl
xchg
push
mov
push
jp
insl
out
iret
and
lret
cmp
stc
aaa
je
push
ds
and
push
mov
ret
movsl
shll
rcl
dec
mov
cmp
mov
sub
push
sub
outsb
nop
das
stc
inc
adc
mov
insb
sub
sub
lods
fstl
mov
lods
lret
jno
fld
pop
into
test
inc
cmpsb
jns
push
jnp
ss
push
xor
sbb
repz
idiv
pop
fwait
inc
xchg
ret
mov
jae
jno
pop
repnz
ljmp
js
inc
sub
addl
lahf
mov
pop
lahf
fstpl
mov
cmc
jns
gs
lds
test
cmovns
std
and
push
in
nop
ror
data16
idivl
or
xchg
repz
cs
lods
scas
dec
pop
repz
sub
push
mul
out
ss
scas
dec
ja
imul
lods
add
cmc
xor
bound
int3
mov
jnp
xor
arpl
in
jne
xchg
xchg
bound
sub
xor
push
mov
js
mov
adc
ret
inc
je
jb
mulb
rclb
jmp
jge
cmc
xchg
gs
lea
std
in
outsb
das
push
dec
mov
mov
sbb
sahf
stos
push
xchg
cmp
imul
clc
leave
sub
leave
ljmp
xchg
lcall
and
scas
sahf
test
cmp
sub
ret
mov
xchg
xchg
fnstsw
mov
sbb
or
into
int
inc
mov
loope
adc
outsl
scas
inc
jg
or
xchg
jle
fbld
jns
inc
aad
xor
add
popa
mov
jnp
mov
mov
cmpsl
scas
out
adc
pop
push
add
xchg
mov
or
push
scas
rol
scas
mov
repnz
idivl
xor
scas
pop
test
jnp
stc
xor
addl
in
jno
dec
sbb
adc
push
xor
rcrl
push
sbb
mov
test
dec
push
sbb
das
mov
shl
xchg
jb
mov
jge
mov
ficoms
inc
in
jno
jg
pop
inc
loop
push
inc
rcrl
cmp
add
mov
xlat
pusha
dec
test
jno
js
jb
or
xchg
daa
iret
mov
pop
jnp
aad
jecxz
push
lret
int
jl
push
mov
dec
insl
xchg
xchg
sub
add
fcoml
push
jecxz
fsub
and
aas
pop
push
adc
push
icebp
orl
push
mov
sbb
or
inc
push
push
and
add
fwait
lds
movsb
je
push
and
xor
testb
sar
dec
ret
dec
imulb
pop
les
sbb
sbb
mov
jbe
sbb
mov
sub
roll
sbb
xor
push
push
lock
lahf
push
pop
enter
repz
fiaddl
push
imul
mov
sub
stos
movl
fsubrl
aad
insb
and
ret
xchg
out
cmp
sarl
es
leave
adc
inc
sbbb
jo
clc
cmp
xchg
sbb
outsb
adc
lahf
sub
out
and
subb
imul
pop
and
sahf
xor
ret
ja
pop
mov
sub
dec
pop
in
sar
mov
cmp
in
dec
adc
popa
cmp
icebp
or
pop
cmpsb
dec
inc
cwtl
inc
jle
xor
ss
and
push
cltd
sbb
jge
mov
adc
in
inc
pusha
movsl
mov
jne
ds
sti
rcrb
in
adc
mov
repz
andl
cmc
mov
push
cmc
js
pop
divl
cli
adcb
rcrb
mov
inc
push
fs
xor
loop
push
cmp
bound
shll
mov
adc
sub
mov
icebp
sbb
mov
into
ret
gs
popa
xchg
or
ds
mov
cmpsl
in
mov
or
push
popf
mov
test
cmpb
in
cs
pop
xlat
jmp
push
sbb
dec
shrl
out
sahf
mov
out
add
imul
jno,pn
cltd
dec
and
inc
mov
jmp
mov
jno
push
adc
mov
insb
ret
sub
push
jns
lds
in
stos
cmp
sbb
dec
fwait
data16
sub
add
jg
insb
scas
int
iret
xchg
jmp
rdmsr
adc
push
es
jnp
rorb
dec
xor
mov
stos
mov
xchg
pop
aas
insl
pop
pop
jecxz
inc
out
mov
push
insb
int
insb
mov
cmp
orl
jne,pt
sbb
addb
or
pop
cmp
pop
inc
jno
sbb
pop
xor
xchg
fcoml
dec
ljmp
mov
xlat
cli
add
mov
arpl
pop
orl
daa
lret
int3
xor
mov
test
aaa
rcl
jge
cs
xor
mov
dec
jnp
rorl
hlt
xchg
mov
imul
xchg
out
daa
stos
jmp
in
xlat
leave
roll
ficoms
mov
pop
shll
and
cwtl
push
jmp
push
insb
lcall
inc
cmp
xchg
int3
cmpsb
lock
add
or
and
js
dec
adc
fimull
add
into
hlt
fsts
pop
repz
outsb
inc
out
mov
lret
or
aas
rcll
arpl
pop
ljmp
fimuls
xor
ret
enter
xchg
vxorps
mov
dec
jno
mov
xchg
sahf
xor
loope
ss
or
cmp
fldl
outsl
jmp
in
sub
jg
insl
fs
test
mov
fnstenv
je
cmp
inc
aaa
popa
jno
or
sbb
mov
xchg
push
jne
stos
sbb
outsb
outsb
xchg
mov
mov
or
outsl
xlat
repz
je
js
and
and
out
sti
imul
jge
jns
cmp
popa
lret
mov
cmc
lahf
pop
mov
popa
push
lret
add
add
sbb
gs
and
xor
add
mov
adc
sub
sub
cmp
leave
sub
sub
hlt
popa
repz
incl
les
dec
out
mov
rolb
inc
pop
jecxz
xor
in
and
negl
sbb
cmp
test
mov
mov
push
xchg
adc
jg
in
ja
into
mov
sub
mov
in
inc
push
jns
xchg
mov
scas
fcompl
inc
out
loope
dec
loop
and
jne
in
pop
imul
jecxz
testb
xlat
repz
cmp
xor
lea
bound
mov
and
jne
cld
and
inc
mov
inc
test
push
xchg
and
pop
push
mov
inc
pop
mov
pushf
lahf
sub
pusha
dec
cld
rcl
dec
popa
jmp
stc
jo
fildll
xor
in
mov
lods
lds
jl
add
in
mov
inc
stc
push
test
mov
push
gs
stos
aaa
sub
arpl
fidivs
mov
pop
sbb
or
jmp
sub
dec
mov
push
stos
mov
mov
ret
fwait
rorb
or
or
dec
mov
mov
xchg
fistpll
in
push
xor
pop
cmp
in
popf
cmp
lods
jo
mov
add
test
stos
pusha
cmp
movsb
icebp
cmp
shll
shrb
fdivrs
fstp
jg
sbb
std
pop
sub
out
ljmp
pushl
pop
pop
adc
lahf
jns
jl
into
and
mov
sub
popa
and
sbb
stc
adc
push
cmpsb
mov
movsb
xchg
sbbb
test
and
ljmp
or
push
and
movl
sub
pop
and
xor
rcrb
jmp
adc
adc
dec
fidivrs
mov
push
inc
jecxz
add
sbb
loopne
fs
insl
stos
mov
pop
jle
and
lds
cmpsl
jmp
jecxz
dec
xor
test
xchg
daa
stc
in
dec
mov
mov
sahf
push
ss
loop
roll
jl
xchg
repz
rep
nop
cmp
sbb
cmp
stos
das
or
or
dec
cwtl
lahf
cmp
loope
shlb
jo
push
ja
and
cltd
ret
insl
dec
popa
aad
pop
in
push
int
das
cmpsl
pop
inc
aas
fbstp
mov
rclb
sub
jp
int
fistpl
mov
pushl
mov
mov
xchg
and
std
shlb
in
aam
cmc
mov
mull
popa
loop
loope
push
inc
std
mov
out
mov
sub
lods
dec
jecxz
sbb
push
pop
push
imull
mov
out
mov
arpl
pusha
iret
xchg
sub
sub
mov
cmp
mov
jmp
xor
xorl
dec
mov
ret
cmc
jmp
ljmp
xchg
dec
fcmovnb
sti
xor
sub
jb
cld
jno
pop
addr16
sahf
sahf
xor
xchg
nop
test
add
jne
out
sub
into
mov
cmpsb
sub
das
mov
jns
jnp
fisttps
inc
push
jbe
aam
or
insb
fcomps
push
push
cld
gs
lods
sub
or
xchg
mov
sahf
jbe
add
push
inc
dec
fbld
pop
sbb
cld
jbe
adc
popf
shlb
daa
cli
mov
and
insl
shr
addl
ljmp
ficoms
repnz
pop
jb
mov
xchg
lret
dec
aaa
lretw
lds
pop
inc
or
lock
jle
bound
jbe
inc
orl
inc
pop
or
nop
and
xchg
mov
repnz
stos
jns
or
inc
clc
scas
ljmp
movsb
shlb
push
adc
cmp
sbb
adc
addr16
out
or
repnz
dec
add
cli
lret
jo
mov
and
push
aam
lcall
call
mov
lret
dec
inc
pop
mov
test
mov
sub
scas
out
popl
pop
test
lock
sub
and
mov
jg
test
mov
mov
pop
mov
sbb
mov
mov
sbb
decb
adc
test
movq
scas
jmp
sahf
js
push
push
fimull
push
test
add
jp
bound
push
cmp
push
xchg
loopne
in
test
and
fstpt
pop
mov
lret
fists
xchg
mov
lods
push
insb
or
aam
or
mov
es
push
fsub
jge
jmp
add
fsub
aas
fmuls
cmp
cmpsl
sub
pop
outsl
popf
inc
pop
movsl
ret
out
call
outsb
push
lret
std
loopne
mov
sti
jge
jne
shr
lock
push
dec
popf
repnz
adc
inc
sub
mov
or
push
test
add
cmp
cs
clc
mov
and
cltd
data16
loop
jne
in
mov
shrl
and
mov
jge
push
xlat
inc
fwait
call
addb
xchg
in
js
and
hlt
mov
add
mov
mov
jns
pop
add
inc
xor
aas
sbb
add
push
imul
dec
test
lcall
jb
cmc
mov
icebp
imul
jge
dec
jl
data16
cmp
push
jl
cmpsl
es
les
ror
stos
loop
popf
scas
xchg
xor
enter
jae
into
fidivrl
add
jne
add
jnp
sbb
mov
insl
cli
ficoml
cmp
xchg
int
hlt
popa
xchg
pop
adc
mov
lret
roll
pop
push
scas
dec
andl
jnp
inc
push
arpl
mov
leave
std
jnp
and
inc
insb
add
mov
std
loopne
mov
jl
popa
push
pop
cmc
cs
xchg
stos
or
out
xchg
movsb
daa
lock
aad
or
out
stos
aaa
dec
and
mov
xchg
sbb
rorl
jbe
in
mov
fnstenv
pop
mov
jb
xchg
xchg
cmpsb
scas
rcr
jl
mulb
sti
inc
push
das
adc
addr16
push
adc
mov
mov
mov
sub
hlt
xchg
xor
stos
shlb
sbb
sbb
inc
jae
cs
mov
inc
mov
dec
sbb
sub
rcpps
add
inc
cmpsb
sbb
add
ficomps
roll
or
lahf
cli
push
stos
subl
add
pop
loope
push
cmc
mov
decb
std
loopne
and
loope
xchg
icebp
add
test
fcmovnu
push
stc
addr16
sub
in
xchg
cmp
fwait
stos
jae
or
pop
scas
arpl
fildl
fs
iret
inc
cmpsb
jecxz
mov
add
pop
lods
mov
inc
add
fs
out
icebp
fistps
sbb
into
jecxz
sbb
mov
jae
pop
lods
xor
sbb
pcmpeqw
pop
popf
mov
int3
sub
dec
inc
mov
xchg
xor
scas
inc
or
sub
adc
std
adc
push
and
cmp
xor
mov
fcomps
ficoms
testb
add
mov
jo
fidivrl
pop
out
add
lahf
jmp
push
out
sub
inc
das
stos
jae
inc
addl
dec
ljmp
test
sub
or
xchg
xor
scas
mov
sub
mov
sbbb
and
rcr
negb
pop
mov
lea
notl
jnp
and
jmp
and
call
pop
enterw
ss
lahf
mov
inc
mov
adc
xlat
test
cmp
or
mov
add
sbb
xor
cmp
fisubrs
lahf
out
stos
loope
fldenv
sub
dec
xor
mov
xchg
jecxz
sub
js
lock
aad
sub
out
loop
mov
pop
setp
out
mov
mov
xchg
sbb
loopne
or
or
adc
pop
pop
push
push
sub
in
ljmp
add
add
call
cwtl
sbb
test
xor
or
pop
mov
mov
cs
or
or
mov
mov
mov
in
inc
das
mov
mov
sbb
sti
test
adc
jbe
add
pop
add
scas
sub
inc
into
xor
push
ljmp
mov
jbe
iret
pop
or
adc
lret
jg
ja
aaa
mov
mov
in
sbb
inc
icebp
jecxz
js
pop
leave
insb
sarl
in
xchg
lcall
add
push
mov
loopne
movsb
outsb
push
sub
push
lret
orl
je
std
sub
lock
out
dec
pop
or
and
sbb
pushf
mov
hlt
push
ret
scas
cmp
adc
jmp
sbb
or
adc
adc
iret
xchg
sahf
rcll
notl
ja
add
adcb
ja
scas
sub
fsubr
je
push
sarl
cmp
jmp
lret
scas
jmp
mov
inc
or
sub
lret
mov
mov
mov
jae
and
lods
ret
lcall
out
xchg
push
je
stos
mov
in
fcomp
mov
pusha
pop
sarl
jl
mov
fcompl
rcrb
js
pop
shrb
insb
pop
std
repnz
popl
jmp
dec
xchg
cli
jp
mov
repnz
add
aaa
dec
and
and
mov
cmp
inc
mov
dec
arpl
lea
mov
cwtl
mov
adc
movsb
pushw
jmp
xchg
sub
stos
inc
push
pop
repz
fsts
je
pop
mov
mov
in
ds
sub
mov
mov
xchg
fstps
inc
jnp
jg
push
je
sbb
mov
mov
push
lock
outsb
nop
adc
pusha
ss
mov
lock
repnz
jle
fmulp
cmp
mov
aad
lock
sub
mov
cli
inc
fbld
xchg
test
sub
lret
cmp
out
cmp
cmp
jns
and
jnp
mov
cmc
xchg
inc
jecxz
fsts
fimuls
add
push
mov
int
and
out
std
xchg
int3
repz
sub
outsl
push
in
inc
in
in
out
mov
rcrl
inc
push
adc
push
mov
and
nop
xor
addb
and
rcrb
xorb
sbb
jle
mov
stos
mov
xor
mov
js
sbb
js
or
sub
jmp
sbb
mov
mov
inc
out
inc
imull
clc
inc
fsubl
xor
faddl
pop
fldl
xor
xor
push
or
subl
and
fs
lds
mov
jne
sub
xchg
sahf
fcomi
push
pushl
xlat
dec
push
arpl
and
in
cli
cwtl
jmp
ja
push
dec
xchg
fwait
cmp
mov
jecxz
notb
insb
repnz
mov
sub
jge
push
or
jge
cwtl
cmpl
pop
pop
aad
or
daa
int
sbb
icebp
ficoms
imul
addr16
in
xchg
es
jle
dec
sub
lret
aaa
xor
ret
inc
imul
rcl
negl
dec
mov
cmpsb
jecxz
mov
mov
inc
push
pop
loopne
stc
mov
aam
jg
add
addr16
mov
mov
cmp
sti
push
test
mov
push
add
stc
mov
sahf
sub
add
ds
js
orl
jmp
int
mov
stc
sbb
ja
cmp
testb
cmp
xchg
jnp
sub
or
gs
jge
mov
xchg
push
das
sbb
fcomps
push
and
mov
dec
faddl
and
jae
hlt
insb
or
dec
ljmp
ja
ret
fstps
jne
add
and
loope
ljmp
pop
ficoms
stc
jno
test
and
and
mov
mov
test
push
pop
ret
adc
and
imul
int
sbb
dec
xor
test
mov
push
gs
test
lret
push
lods
fs
xchg
cmpsl
testl
fwait
adc
pcmpeqd
pusha
pop
icebp
adc
mov
popf
and
out
aas
insb
mov
test
jno
dec
test
mov
pop
dec
push
loopne
cmpsb
jecxz
adc
ja
lcall
cmpsb
sub
mov
push
mov
cmp
add
std
dec
ret
dec
bound
xchg
sbb
xchg
out
inc
mov
xchg
mov
xlat
add
pop
rcll
sahf
jp
jnp
inc
and
std
sub
cmp
sbb
add
push
lret
mov
ror
in
sti
adc
add
rcrb
or
leave
xchg
es
gs
xor
repz
pop
xchg
cmp
sub
jg
jecxz
lret
in
test
aam
xorb
popa
loopne
js
mov
adc
daa
popa
add
pop
or
xlat
rcrl
fxch
adc
sub
iret
xchg
push
imul
and
mov
inc
or
sbb
cwtl
pop
rcr
mov
scas
ljmp
sti
xchg
fs
adc
push
pop
popa
loop
dec
xor
shlb
push
add
sbb
popf
repz
xchg
inc
cmp
aam
je
mov
push
jmp
push
jo
repz
xchg
adc
inc
mov
movsl
stos
inc
dec
adc
jg
out
xor
movups
sub
inc
ds
cmp
dec
cmp
pop
xchg
push
pushf
add
add
cmp
add
enter
mov
int
pop
inc
push
push
dec
fdivrs
js
dec
gs
mov
or
push
mov
imul
fcompl
or
and
inc
loop
mov
mov
or
test
jae
mov
xchg
inc
mov
pop
clc
insl
adcl
adc
mov
sbb
xchg
daa
xor
pop
cmp
mov
pop
jnp
fisttpl
out
sbb
sbb
mov
add
fwait
rorb
ret
call
cmpsl
inc
push
pop
or
pop
clc
repnz
mov
dec
cmp
jge
out
sub
inc
movsl
rcll
fisubrs
insb
jmp
bound
enter
out
and
lods
mov
cwtl
jecxz
mov
fst
dec
cmpsb
cmp
imul
in
and
add
js
sbb
enter
cmp
shl
aaa
xor
sub
xchg
cmp
aas
dec
push
cmp
pop
jno
cmp
dec
bound
addl
push
and
inc
inc
je
arpl
push
cs
add
data16
mov
popa
jg
imul
or
std
adc
jl
sbb
adcb
ja
pop
cmp
jp
outsb
fdivr
dec
mov
out
daa
push
popf
cs
movsb
jae
mov
cmp
movl
or
dec
lahf
pop
xchg
sbb
push
add
dec
sub
and
cmp
xchg
ret
test
rclb
push
cli
insb
lods
push
sti
outsb
orb
xchg
out
push
cltd
xor
xchg
add
into
or
sti
repz
push
or
inc
dec
nop
sbb
int3
and
mov
inc
orb
jbe
test
std
mov
jge
sbb
jecxz
cmp
es
and
add
dec
pop
adc
imul
mov
xor
stos
cmp
int3
jo
xchg
sub
xlat
shl
imul
mov
mov
in
jbe
cmp
cmp
pop
je
dec
lcall
jecxz
jp
in
int3
fwait
add
xor
scas
fdivs
inc
imul
dec
mov
mov
lea
push
jge
lods
and
and
fmuls
pop
xor
test
jp
in
add
push
pop
xchg
dec
add
stos
jno
std
push
test
in
jno
mov
aam
cmpsb
inc
ljmp
dec
fdivs
icebp
xorl
push
xor
nop
sub
addb
inc
sbb
cs
push
inc
pop
pop
sbbl
or
adc
dec
jmp
out
sbb
cmp
cmp
sti
arpl
ret
movsl
enter
outsl
or
cmc
aaa
pop
arpl
add
xchg
mov
aam
sub
dec
fistpll
jbe
in
and
int3
jl
jbe
inc
inc
int3
jb
clc
adcl
faddl
fwait
scas
out
or
fldenv
rorb
stos
cmp
aas
mov
mov
out
adc
and
add
movsb
ljmp
xchg
ja
inc
ret
sbb
movzbl
adc
mov
aaa
test
icebp
sbb
mov
xchg
adc
mov
pop
inc
sbb
gs
or
add
in
popa
jnp
pop
xor
movsb
lret
stos
repz
mov
sbb
adc
fnstenv
or
pop
int
lret
fcompl
fbld
shrb
std
divl
xor
push
cmp
cmp
insb
xchg
mov
stc
cmp
test
pushf
xchg
xchg
std
into
shrb
mov
adc
dec
shlb
ret
sahf
jecxz
daa
sahf
lods
scas
into
xchg
mov
test
test
jg
jmp
scas
mov
pop
cltd
jb
mov
lcall
js
clc
xor
inc
jecxz
bound
movsl
mov
test
movsl
loop
dec
jg
insl
imul
mov
dec
icebp
test
push
in
mov
dec
jnp
cmp
imul
dec
fs
push
xchg
fstps
sub
rclb
mov
ficomps
cmp
pop
xor
jbe
xchg
lds
cld
sbb
mov
xchg
sub
jo
lahf
adc
sub
and
les
xorb
packssdw
add
or
cwtl
inc
adc
sbb
jg
dec
xchg
ret
sahf
sub
lods
cmp
or
repnz
lret
ret
xchg
add
or
push
fisubl
sahf
sbb
je
cld
adc
cmp
andl
ljmp
fcoms
pop
stc
loope
movsb
cld
subl
outsb
into
ret
sub
adc
out
mov
cltd
aas
loopne
and
repz
mov
pop
push
push
pop
xchg
bound
loopne
fwait
dec
js
loop
sbb
sbb
stc
sbb
lds
mulb
xor
or
push
movl
xchg
pop
mov
and
in
or
stos
sub
cmp
sbb
mov
rcrl
or
scas
andb
leave
inc
jecxz
test
inc
inc
cmc
jmp
cmpsb
in
bound
xor
fimuls
ljmpw
inc
mov
mov
mov
repnz
inc
imul
dec
push
je
xor
mov
in
jg
push
pop
pop
fwait
mov
or
pushf
sbb
sbb
pop
ljmp
add
js
in
insb
int3
test
out
stos
enter
int3
movl
sti
fisubrs
xor
cltd
dec
js
lock
mov
fbld
sbbb
shrl
mov
or
add
sti
push
sbb
lret
xchg
dec
mov
test
jae
dec
jns
mov
xchg
es
cmp
js
or
imul
cmp
pop
xchg
lret
arpl
jge
jle
or
pusha
jno
add
xor
les
xor
sub
stos
cmp
rclb
or
out
sub
mov
call
jg
sub
pop
into
dec
gs
pop
nop
sub
sbb
xchg
xor
test
sbb
das
xchg
cmp
lods
into
cwtl
iret
jp
xchg
cmpsl
repz
adc
adc
iret
aad
aaa
enter
dec
cmpsl
and
mov
movsb
or
mov
adc
inc
inc
pop
sbb
push
mov
sarb
outsl
sbb
sbb
pop
add
or
mov
lods
clc
fildl
mov
cmc
in
push
xchg
shr
dec
shlb
nop
ret
fldcw
jl
pop
mov
sbb
add
arpl
pop
inc
aad
popf
lock
testl
jne
fwait
mov
dec
in
cmpsl
jle
mov
xchg
pop
adc
and
sub
cmp
imul
sub
call
lret
push
xchg
in
and
lods
stc
push
mov
xchg
mov
nopl
iret
int
das
cmp
sub
push
movsb
push
jge
jp
dec
lock
mov
lret
inc
sti
and
cmp
mov
sbb
jno
or
mov
sbb
push
jbe
divb
pop
loop
jne
xchg
pop
or
or
or
xchg
push
and
out
xor
cs
or
nop
orl
mov
sti
sti
out
jns
jns
sbb
in
adc
dec
daa
jmp
inc
daa
cmp
sub
mov
pop
int
pop
xchg
outsl
int
sbb
adc
sub
lret
sbb
inc
cmp
daa
aad
pushf
call
lcall
push
mov
sbb
cmpsb
push
cld
nop
fstpl
std
and
test
mov
aas
cwtl
or
adc
imul
mov
cli
popf
insl
xchg
inc
cmp
mov
add
jmp
mov
lret
call
sbb
out
cmp
jecxz
sarl
mov
fistl
sbb
xor
imul
xchg
adc
sbb
mov
push
sti
les
inc
imul
pop
jl
pop
ds
mov
jae
mov
sbbb
sub
xlat
loope
mov
push
dec
cmp
xor
sbb
test
arpl
push
int
fisubrl
mov
js
add
clc
testb
sub
mov
xor
lds
fbld
mov
mov
in
ss
int3
sub
outsl
jecxz
mov
insb
notb
addr16
jns
jne
fisubl
icebp
push
or
movsb
imul
mov
jae
xchg
loope
fsubr
jl
je
push
mov
mov
jno
das
or
push
icebp
jo
mov
aam
or
es
xchg
cmp
push
aas
lret
cmp
adc
xchg
dec
jae
outsl
xor
mov
scas
lcall
or
cmpsl
leave
cmp
aas
push
dec
popa
jg
daa
mov
cld
or
lret
loop
mov
cld
std
and
dec
les
cmpb
stos
adc
cmpsl
and
inc
mov
inc
xor
cli
inc
lds
shlb
push
out
or
ja
pop
loope
test
fcom
inc
xorl
sbb
xchg
or
and
mov
mov
jg
xchg
add
in
cmpsl
les
das
out
pop
lea
inc
cmp
insb
test
push
cmc
add
fisttpll
lcall
xor
xchg
and
pop
out
mov
mov
int3
popa
and
loope
rcll
mov
popa
hlt
loopne
fists
mov
or
gs
mov
sbb
jg
xchg
adc
popf
test
xchg
mov
stc
mov
xchg
xor
add
lds
mov
les
adc
adcl
mov
aad
jecxz
jl
push
dec
loop
.byte
