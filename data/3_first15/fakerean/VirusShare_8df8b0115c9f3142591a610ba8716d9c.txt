add
xor
jne
andl
mov
lea
call
mov
test
je
cmpl
jne
cmpb
jne
lea
call
xor
pop
pop
leave
ret
mov
push
call
mov
call
mov
push
call
jmp
mov
mov
add
jmp
add
jmp
andl
mov
mov
cmp
jae
mov
lea
mov
mov
mov
mov
mov
lea
mov
call
test
jne
incl
mov
addl
cmp
jae
jmp
andl
push
call
test
pop
je
mov
mov
call
push
call
pop
jmp
xor
jmp
mov
push
call
cmp
jbe
cmp
jb
cmp
jbe
add
cmp
ja
xor
inc
ret
cmp
je
cmp
jae
cmp
ja
xor
ret
push
mov
sub
push
mov
push
xor
cmp
push
mov
je
lea
call
test
je
push
lea
mov
call
mov
mov
add
lea
mov
call
xor
cmp
jne
mov
push
mov
call
cmp
je
push
lea
call
lea
call
mov
pop
pop
pop
leave
ret
pushl
mov
lea
mov
call
cmp
je
cmp
jne
lea
call
jmp
push
mov
call
cmp
pop
je
add
mov
inc
add
add
add
hlt
mov
cmp
je
mov
push
call
cmp
pop
mov
jne
lea
add
mov
call
pushl
call
testb
jne
cmpl
jne
orl
test
mov
je
mov
push
call
lea
mov
call
pushl
call
testb
je
lea
call
pushl
andl
mov
lea
call
pushl
mov
mov
call
test
lea
je
call
lea
call
xor
jmp
pushl
mov
inc
add
mov
call
mov
test
je
lea
mov
call
mov
dec
push
mov
call
push
mov
call
test
pop
je
mov
call
push
call
lea
jmp
push
mov
push
push
push
mov
mov
shr
je
test
jne
mov
lea
cmp
jae
mov
mov
movzwl
cmp
jae
addl
cmp
jb
add
test
push
je
mov
push
call
test
pop
pop
je
mov
test
jbe
xor
mov
mov
mov
shr
add
inc
cmp
mov
jb
mov
mov
and
and
lea
xor
mov
mov
pop
leave
ret
call
test
pop
je
mov
mov
shr
push
pushl
push
call
add
orl
jmp
push
mov
sub
cmpl
jbe
xor
leave
ret
pushl
pushl
call
test
pop
pop
push
jne
cmp
je
push
mov
lea
call
push
pushl
mov
call
lea
call
pop
leave
ret
int3
int3
push
mov
push
push
mov
mov
mov
push
mov
sub
sar
lea
cmp
jae
test
je
mov
mov
lea
mov
mov
sub
mov
add
add
test
jne
pop
pop
pop
xor
pop
ret
cmp
ja
mov
test
lea
jne
lea
push
call
add
test
je
mov
lea
mov
mov
jmp
lea
push
push
call
add
jmp
mov
jmp
push
mov
push
push
push
mov
mov
mov
add
push
lea
mov
mov
call
mov
neg
sbb
and
jne
test
jne
pop
leave
ret
mov
jmp
mov
push
call
push
lea
mov
call
jmp
push
mov
push
cmpb
jne
mov
test
movb
ja
movl
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
jne
push
mov
call
mov
pop
mov
movb
pop
leave
ret
dec
mov
jmp
pushl
mov
dec
mov
call
jmp
push
mov
call
mov
call
test
jne
pop
ret
push
lea
mov
mov
push
call
mov
pop
xor
pop
jmp
push
mov
push
mov
cmpl
je
mov
mov
call
test
je
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
mov
call
test
je
mov
test
je
add
push
call
xor
mov
mov
jmp
add
inc
add
decl
mov
jne
movl
lea
movl
call
push
call
pop
xor
pop
ret
push
mov
push
mov
mov
test
je
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
test
je
push
pushl
push
call
pop
pop
pop
ret
push
mov
and
sub
push
mov
push
push
push
mov
call
lea
call
mov
test
je
mov
mov
push
mov
call
test
je
mov
mov
push
call
mov
push
mov
mov
push
call
cmp
jne
add
mov
call
cmp
jne
lea
call
test
jne
andl
mov
pop
pop
mov
pop
mov
pop
ret
mov
cmpb
jne
xor
ret
cmpb
je
xor
inc
ret
mov
mov
movzwl
push
movzwl
movzwl
add
sub
movzwl
add
mov
pop
ret
mov
movzwl
movzwl
sub
add
ret
mov
mov
xor
inc
mov
mov
movzbw
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
test
push
mov
push
mov
movl
jle
mov
mov
mov
lea
push
mov
mov
jmp
lea
mov
cmp
mov
mov
jae
mov
cmp
je
mov
cmp
add
mov
mov
movzbw
movzwl
mov
movzwl
test
movw
jbe
movzwl
mov
mov
xor
movzwl
movzwl
mov
shr
add
mov
and
jns
dec
or
inc
mov
add
add
shr
movzwl
lea
add
and
lea
movsbl
mov
cmp
jne
cmp
jb
cmp
ja
movsbl
mov
cmp
jne
mov
sub
add
movzwl
cmp
mov
mov
je
mov
mov
mov
add
mov
sub
add
test
jg
pop
sub
sub
mov
mov
sar
mov
mov
mov
pop
pop
add
ret
push
push
call
mov
add
test
jne
add
cmp
jb
jmp
cmp
jne
movzwl
movzwl
add
movzwl
movzwl
sub
add
movzwl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jb
cmp
ja
mov
ret
xor
ret
int3
int3
int3
sub
mov
mov
mov
push
mov
push
mov
lea
cmp
push
mov
movl
jae
mov
mov
mov
mov
lea
movzwl
mov
movzwl
test
mov
movl
jbe
xor
mov
movzwl
movzwl
mov
shr
add
mov
and
jns
dec
or
inc
mov
add
add
shr
movzwl
lea
add
and
lea
movsbl
mov
cmp
jne
mov
cmp
jb
cmp
ja
movsbl
mov
cmp
jne
mov
sub
add
movzwl
mov
cmp
je
mov
mov
mov
add
test
je
cmpl
je
mov
mov
cmp
jne
cmpl
jb
mov
movl
mov
mov
test
je
add
mov
sub
cmp
mov
jb
mov
mov
sub
sar
sub
mov
pop
pop
mov
pop
add
ret
mov
add
cmp
jae
mov
jmp
mov
mov
xor
jmp
cmpl
jne
movzwl
cmp
jb
movl
jmp
push
mov
mov
push
call
mov
add
test
je
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
add
pop
ret
sub
mov
mov
mov
push
push
mov
push
mov
push
mov
mov
lea
add
mov
sub
sar
mov
mov
mov
mov
sub
mov
mov
cmp
jne
mov
mov
push
push
lea
push
push
lea
push
push
mov
call
mov
add
mov
add
cmp
lea
je
mov
sub
sar
sub
mov
sub
add
pop
pop
pop
pop
add
ret
mov
mov
cmp
je
cmp
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
push
mov
add
push
lea
mov
mov
mov
cmp
movl
jb
mov
mov
cmp
je
mov
sub
sar
mov
sub
mov
mov
mov
cmp
mov
lea
push
push
jne
add
push
push
push
call
mov
mov
add
cmp
lea
je
mov
mov
sub
sar
sub
pop
sub
add
pop
pop
pop
add
ret
int3
mov
cmp
jb
mov
mov
mov
mov
mov
ret
xor
ret
int3
sub
push
push
push
push
lea
xor
push
lea
mov
push
lea
mov
mov
movl
mov
call
testl
jne
mov
mov
push
lea
call
mov
mov
lea
push
push
push
call
test
mov
js
mov
mov
push
push
push
push
mov
call
mov
push
lea
call
mov
mov
lea
push
push
push
call
test
mov
js
mov
mov
mov
mov
push
call
push
call
add
mov
xor
lea
cmp
je
mov
mov
mov
mov
mov
mov
cmp
jne
lea
push
lea
push
lea
push
lea
push
push
call
cmp
mov
jne
cmp
jne
cmp
jne
mov
cmp
jb
movzwl
mov
shr
mov
shr
and
shr
test
je
mov
mov
call
movzwl
mov
movzwl
mov
mov
mov
cmp
jne
lea
push
lea
push
lea
push
lea
push
push
call
cmp
mov
jne
cmp
jne
cmp
jne
mov
cmp
jae
cmp
jb
cmp
ja
add
jmp
movzwl
mov
shr
mov
shr
and
shr
test
je
mov
mov
call
mov
movzwl
movzwl
mov
mov
mov
cmp
jne
lea
push
lea
push
lea
push
lea
push
push
call
cmp
mov
jne
cmp
jne
cmp
jne
mov
mov
mov
mov
cmp
setne
mov
add
add
cmp
jbe
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
movzwl
movzbw
movzwl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmpl
je
mov
mov
mov
mov
xor
cmpl
push
sete
mov
mov
mov
cmp
jg
lea
xor
cmp
jae
mov
movzbl
movzwl
cmp
mov
je
add
add
cmp
jb
sub
sub
mov
mov
mov
pop
sar
pop
mov
pop
ret
lea
mov
jmp
mov
push
call
add
cmpl
jne
mov
lea
push
push
call
add
test
js
movl
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
movzwl
mov
and
push
lea
mov
mov
shr
cmp
jne
pop
pop
pop
add
ret
mov
push
mov
movzwl
fiadds
adc
mov
push
pop
and
movzwl
mov
shr
add
cmp
jle
mov
push
push
lea
shr
push
call
movzwl
movzwl
shl
or
pop
mov
pop
pop
pop
add
ret
mov
movzwl
aad
inc
add
mov
movzwl
movzbl
test
jbe
mov
sub
mov
and
cltd
idiv
test
jne
mov
mov
add
jmp
int3
int3
int3
mov
sub
cmpl
push
push
push
je
xor
jmp
lea
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
lea
push
mov
lea
push
lea
push
push
push
mov
call
add
mov
mov
mov
add
add
test
mov
js
cmp
jne
push
call
xor
add
cmp
je
mov
xor
mov
mov
mul
seto
neg
or
push
call
mov
mov
mov
mov
mov
add
mov
mov
add
test
je
addl
mov
test
mov
jne
mov
mov
jmp
mov
mov
pop
pop
xor
pop
add
ret
xor
jmp
int3
int3
int3
int3
push
push
push
push
mov
mov
mov
lea
lea
movzwl
movzbl
movzwl
add
movzwl
cmp
jg
mov
cmp
jbe
cmp
jb
mov
cmp
je
lea
shr
cmp
je
lea
mov
jmp
mov
cmp
je
cmp
ja
lea
shr
cmp
je
add
mov
mov
jmp
mov
pop
pop
pop
pop
ret
pop
pop
mov
pop
pop
ret
movzwl
movzbl
test
jbe
movzwl
movzbl
mov
sub
cltd
idiv
test
jne
mov
pop
mov
movzwl
pop
pop
add
pop
ret
mov
mov
mov
push
mov
pushl
push
call
mov
mov
andl
mov
mov
dec
lea
and
mov
cmp
pop
je
dec
inc
and
mov
xor
ret
push
mov
push
mov
andl
mov
push
mov
movl
lea
mov
mov
mov
push
mov
call
test
mov
je
mov
push
call
mov
push
call
mov
mov
lea
call
call
mov
mov
cmpl
jbe
andl
mov
mov
imul
lea
mov
lea
push
call
cmpl
jne
mov
call
mov
mov
cmp
jl
jg
mov
cmp
ja
mov
mov
test
jl
mov
jg
test
ja
mov
call
mov
mov
incl
mov
mov
cmp
jb
mov
test
jne
pop
pop
mov
pop
pop
ret
mov
mov
jmp
cmpb
push
mov
push
jne
pushl
mov
call
test
js
cmpl
mov
jne
pushl
push
push
call
test
jne
push
mov
call
mov
and
neg
sbb
and
pop
pop
ret
mov
push
push
movl
call
test
mov
pop
mov
je
push
push
push
mov
call
test
pop
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
add
mov
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
push
mov
mov
mov
push
mov
lea
mov
call
mov
test
je
mov
push
call
test
je
push
mov
call
mov
neg
sbb
and
add
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
lea
call
cmpl
je
lea
call
mov
mov
mov
mov
mov
lea
push
push
call
mov
cmp
je
xor
inc
movl
pushl
mov
push
pushl
lea
pushl
push
pushl
push
push
mov
call
mov
test
js
mov
test
je
pushl
mov
push
call
pushl
pushl
call
pushl
pushl
call
add
xor
jmp
mov
test
push
push
je
mov
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
push
push
push
mov
xor
push
lea
movl
mov
call
mov
cmp
je
mov
mov
push
call
push
lea
cmp
jne
lea
cmp
jne
lea
call
mov
call
mov
cmp
jne
mov
mov
or
inc
add
ret
je
lea
push
call
test
pop
je
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
mov
jne
test
je
push
call
pop
mov
mov
test
pop
je
lea
push
call
test
pop
je
movl
pop
pop
pop
pop
ret
test
je
inc
mov
push
push
push
mov
xor
push
lea
movl
mov
call
mov
cmp
je
mov
mov
push
call
push
lea
cmp
jne
lea
cmp
jne
lea
call
mov
call
mov
cmp
jne
mov
mov
add
add
ret
je
lea
push
call
test
pop
je
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
mov
je
lea
push
call
test
pop
je
mov
mov
test
pop
je
lea
push
call
test
pop
je
movl
pop
pop
pop
pop
ret
test
je
push
call
pop
jmp
push
lea
sub
mov
xor
mov
mov
cmpl
push
mov
push
mov
mov
jge
mov
test
jne
mov
mov
push
push
push
call
test
js
push
push
mov
call
test
js
lea
mov
lea
mov
mov
mov
lea
mov
push
mov
pop
mov
lea
push
pushl
mov
xor
mov
mov
movb
mov
mov
mov
movb
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
jne
andl
lea
push
pushl
mov
mov
lea
movl
movl
movb
call
pushl
mov
push
push
call
testb
mov
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
pop
xor
pop
call
add
leave
ret
lea
movl
movl
movl
call
lea
push
push
mov
mov
call
test
pop
pop
je
mov
mov
cmpl
jge
cmpb
je
lea
push
push
call
pop
pop
pushl
lea
call
mov
lea
call
test
je
mov
cmp
je
mov
lea
call
andl
mov
lea
push
lea
lea
push
mov
call
pushl
pushl
call
pop
pop
pushl
pushl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
lea
push
pushl
mov
call
mov
test
pop
pop
jne
pushl
pushl
call
pop
pop
jmp
mov
add
call
mov
jmp
cmpl
je
mov
push
push
pushl
call
mov
mov
test
pop
je
pushl
pushl
call
mov
test
js
mov
call
push
push
push
push
call
orl
mov
call
mov
pop
pop
ret
push
mov
push
push
pushl
mov
call
mov
andl
push
mov
lea
call
mov
test
jne
lea
call
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
andl
lea
lea
push
mov
mov
add
adc
add
movl
movb
call
test
js
push
lea
lea
call
mov
neg
sbb
and
xor
test
setne
testb
mov
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
leave
ret
push
mov
cmpl
push
jne
lea
call
test
je
mov
mov
push
lea
call
test
je
mov
mov
push
call
mov
test
mov
jne
xor
pop
pop
ret
andl
push
lea
movl
call
call
test
mov
je
mov
push
call
mov
lea
push
call
pushl
lea
push
call
mov
pop
ret
push
xor
mov
mov
push
mov
push
lea
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
push
mov
cmc
movb
test
je
mov
orl
push
mov
call
test
je
mov
orl
pop
pop
mov
pop
ret
push
mov
push
cmpl
jne
mov
test
je
push
mov
cmp
jne
movl
pop
leave
ret
push
push
push
push
lea
call
lea
mov
push
lea
mov
call
cmp
jne
mov
mov
call
xor
cmp
pop
sete
pop
mov
jmp
xor
cmp
setne
ret
mov
push
mov
call
xor
pop
ret
push
mov
sub
cmpl
push
push
push
mov
je
call
test
je
xor
push
lea
mov
call
mov
neg
sbb
and
cmp
jne
call
call
cmp
je
mov
push
mov
call
test
pop
js
push
call
cmp
pop
je
cmp
mov
mov
movl
mov
je
mov
push
call
mov
cmp
je
mov
push
call
push
lea
mov
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
push
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
cmpb
jne
pushl
add
pushl
push
call
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
mov
mov
mov
xor
pop
pop
ret
mov
movl
jmp
mov
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
mov
push
mov
call
test
mov
jne
mov
mov
call
test
jne
andl
cmpl
jne
lea
push
pushl
push
call
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
push
mov
push
mov
push
pushl
push
call
test
js
pop
pop
pop
ret
mov
movl
xor
jmp
test
push
mov
je
lea
push
mov
push
call
test
je
mov
push
mov
call
test
je
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
jmp
xor
jmp
xor
jmp
push
mov
push
push
mov
andl
andl
lea
push
push
push
call
test
js
mov
lea
push
push
push
call
test
js
cmpl
je
xor
inc
leave
ret
xor
leave
ret
push
mov
sub
push
mov
push
mov
mov
cmpl
push
mov
jge
mov
andl
andl
testb
je
mov
test
jne
cmp
jl
jg
cmp
ljmp
dec
inc
mov
call
test
jne
mov
mov
mov
add
adc
cmp
jl
jg
add
and
mov
test
je
add
adcl
mov
cmpl
jge
lea
lea
in
inc
add
xor
test
jne
mov
test
jne
xor
pop
pop
pop
leave
ret
call
test
js
testb
jne
jmp
mov
orl
test
je
jmp
mov
lds
sbb
andl
mov
mov
lea
lea
mov
call
test
lea
jne
lea
mov
mov
sub
mov
mov
mov
jmp
mov
jmp
push
lea
sub
mov
xor
mov
mov
andl
mov
push
mov
lea
mov
call
mov
test
je
andl
push
push
push
pop
lea
push
lea
lea
push
mov
movl
mov
mov
movb
movl
movl
movl
mov
push
call
testb
jne
testb
jne
andl
lea
mov
mov
mov
lea
push
movl
mov
movb
mov
push
call
cmpl
je
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
pop
pop
mov
xor
call
add
leave
ret
push
mov
push
push
mov
sub
movl
test
jg
pushl
pushl
push
call
add
test
jl
test
jg
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
test
je
test
je
cmpw
mov
je
add
cmpw
jne
sub
sar
test
jg
test
je
mov
push
mov
push
push
mov
push
call
add
pop
ret
xor
ret
push
push
push
call
test
pop
je
mov
andl
lea
movl
call
test
je
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
jne
mov
test
mov
je
mov
push
call
mov
test
mov
jne
mov
mov
mov
mov
mov
ret
mov
add
call
inc
add
mov
test
je
mov
mov
test
mov
je
mov
push
call
xor
ret
cmpb
je
movb
cmpl
movb
jne
mov
call
ret
push
mov
push
push
push
push
mov
mov
xor
test
push
jne
mov
call
test
je
mov
cmpl
jne
cmpb
je
andl
movl
mov
lea
mov
cmp
jb
cmpb
je
lea
mov
cmpl
jne
cmpb
je
mov
cmpl
jne
lea
mov
cmpl
jne
mov
cmpl
jne
cmpb
je
mov
test
je
xor
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
push
call
test
jne
pop
pop
pop
leave
ret
pushl
mov
pushl
shr
pushl
push
push
call
ret
push
mov
sub
push
mov
push
mov
call
test
mov
mov
jne
push
push
pushl
call
pop
pop
leave
ret
push
mov
push
push
call
test
pop
je
push
push
pushl
mov
call
andl
xor
inc
movl
mov
andl
mov
test
lea
je
lea
orl
lea
movl
mov
movl
movl
movl
mov
call
test
je
lea
push
lea
call
mov
pop
pop
leave
ret
xor
leave
ret
push
mov
mov
cmp
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
pushl
call
pop
movb
pop
ret
cmp
push
push
jne
mov
test
lea
je
mov
call
mov
test
mov
jne
mov
andl
test
je
call
movb
pop
pop
pop
ret
cmp
jne
mov
test
lea
je
mov
call
mov
test
mov
jne
mov
andl
test
je
call
movb
jmp
push
mov
mov
andl
sub
push
push
push
mov
mov
call
mov
test
mov
mov
jne
andl
mov
mov
and
xor
or
je
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
add
xor
add
mov
add
add
mov
and
or
jne
test
jne
mov
andl
andl
push
mov
lea
call
mov
test
je
andl
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
testw
jne
mov
call
push
mov
call
mov
mov
cmp
je
andl
andl
mov
mov
mov
lea
push
mov
call
mov
cmp
jne
mov
andl
lea
call
pop
pop
xor
pop
leave
ret
orl
jmp
mov
cmp
je
jmp
mov
cmp
jne
mov
testb
jne
mov
shr
and
je
xor
test
setne
jmp
xor
cmp
sete
ret
movzbl
shr
and
jmp
mov
and
or
je
xor
jmp
xor
push
mov
mov
test
je
mov
cmp
je
add
add
jmp
cli
or
xor
pop
ret
mov
mov
mov
add
or
mov
ret
mov
movl
xor
ret
push
mov
test
push
je
cmpl
jne
xor
pop
pop
ret
cmpl
setne
ret
push
mov
mov
sub
cmpl
push
mov
push
push
jge
lea
mov
mov
test
jg
xor
pop
pop
pop
leave
ret
pushl
pushl
call
neg
sbb
inc
ret
push
mov
push
mov
cmp
jne
mov
push
mov
push
push
pushl
pushl
call
test
pop
jne
inc
pop
pop
ret
xor
jmp
push
mov
push
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
flds
flds
fucompp
fnstsw
test
jp
lea
push
mov
mov
movl
call
test
je
lea
lea
call
test
je
lea
lea
call
test
je
xor
inc
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
sub
add
add
test
jne
mov
pop
ret
movzwl
movzwl
sub
je
xor
pop
ret
push
mov
sub
push
push
mov
mov
mov
inc
cmp
jb
lea
mov
movl
call
test
je
mov
mov
lea
movzwl
cmp
push
jne
mov
mov
cmpl
je
xor
test
sete
andl
push
lea
movl
movl
inc
add
push
push
call
mov
mov
call
test
mov
je
xor
test
setne
inc
testb
mov
jne
testb
jne
mov
pop
pop
pop
leave
ret
xor
jmp
cmp
je
xor
jmp
lea
cmp
jb
cmpw
jne
xor
jmp
push
mov
sub
mov
mov
xor
inc
push
mov
mov
mov
lea
lea
lea
movl
movl
movl
mov
call
pop
leave
ret
int3
mov
cmp
jne
test
push
je
mov
mov
jmp
lea
mov
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movzwl
movzwl
sub
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
cmp
jb
mov
mov
lea
mov
mov
cmp
jne
push
mov
push
mov
push
mov
push
push
call
test
pop
je
xor
pop
add
ret
mov
pop
add
ret
push
mov
sub
push
mov
push
push
xor
push
inc
mov
call
test
je
push
mov
call
test
je
cmpl
jne
mov
add
call
test
je
mov
mov
call
mov
lea
lea
mov
mov
movl
movl
movl
call
test
jne
mov
xor
inc
lea
lea
mov
movl
movl
mov
call
test
mov
jne
movl
mov
mov
call
mov
lea
push
mov
call
testb
mov
pop
mov
jne
testb
jne
mov
test
mov
je
mov
mov
cmp
je
add
mov
test
jne
jmp
cmpl
je
mov
cmpl
jne
push
mov
mov
call
test
je
cmpl
jne
cmpw
jne
mov
cmpl
jne
cmpl
jne
xor
inc
lea
call
mov
pop
pop
pop
leave
ret
push
mov
call
test
je
mov
cmp
ja
jmp
push
push
mov
add
push
mov
call
mov
test
je
xor
push
inc
mov
call
test
je
lea
call
xor
inc
jmp
mov
mov
add
jmp
cmpl
je
jmp
push
push
mov
add
push
mov
call
jmp
mov
stc
in
add
mov
adc
mov
add
inc
adc
push
inc
adc
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
cmpl
je
push
push
mov
mov
call
cmpl
je
mov
test
je
cmpl
je
mov
test
je
push
call
pop
mov
mov
xor
mov
pop
ret
push
mov
lea
movl
movl
call
inc
add
add
call
pop
mov
pop
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
mov
test
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
call
test
jne
xor
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
mov
sub
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
mov
cmp
je
mov
push
push
call
lea
mov
lea
push
mov
lea
movl
movl
mov
lea
call
mov
test
jne
pushl
mov
call
mov
test
jne
pushl
mov
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
add
adc
jne
mov
cmp
jne
mov
test
je
lea
jmp
cmpl
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
cmpl
jle
mov
mov
sub
cmp
mov
lea
jl
lea
mov
add
mov
mov
leave
ret
push
mov
mov
mov
mov
sub
push
cmp
jb
mov
lea
cmp
je
mov
push
mov
mov
sub
cmp
jbe
inc
mov
inc
cmp
jne
pop
mov
mov
push
call
mov
pop
pop
ret
mov
mov
sub
je
sub
je
sub
jne
ret
mov
cmp
je
sub
neg
sbb
not
and
mov
jmp
push
mov
and
mov
sub
push
push
push
call
test
je
mov
mov
mov
mov
mov
sub
neg
sbb
and
push
call
mov
push
call
lea
mov
call
cmp
mov
je
call
cmp
je
mov
test
je
mov
push
mov
call
test
je
mov
mov
mov
mov
mov
mov
cmpl
jne
mov
call
test
jne
lea
push
push
push
call
push
push
push
mov
call
pop
mov
call
test
je
mov
call
mov
push
sub
push
push
pushl
mov
call
mov
jmp
push
mov
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
mov
call
cmp
mov
lea
lea
movsl
movsl
movsl
mov
movsl
je
cmp
je
cmp
mov
je
mov
sub
sub
add
cltd
sub
mov
sar
andl
test
mov
lea
jl
lea
mov
cmp
mov
jne
mov
lea
push
lea
mov
mov
call
mov
mov
mov
lea
add
decl
call
mov
mov
neg
mov
mov
mov
neg
mov
mov
mov
add
add
add
mov
lea
push
add
lea
mov
call
mov
push
lea
push
mov
call
push
lea
call
mov
cmp
jne
mov
and
xor
or
jne
pop
pop
pop
leave
ret
push
mov
mov
sub
push
push
push
call
test
je
mov
push
mov
mov
call
lea
call
mov
push
lea
call
mov
mov
mov
mov
mov
add
out
sbb
test
je
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
call
add
add
lea
movsl
movsl
movsl
movsl
mov
mov
xor
lea
aaa
mov
add
add
call
ds
jae
push
call
push
lea
push
mov
call
lea
call
mov
test
jne
push
lea
call
mov
and
xor
or
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
call
xor
cmp
pop
je
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
mov
mov
mov
mov
cmp
je
mov
push
mov
mov
pushl
mov
pushl
mov
call
mov
push
mov
mov
push
lea
mov
mov
push
mov
mov
mov
call
pop
pop
mov
pop
leave
ret
cmpl
je
mov
push
push
pushl
call
mov
mov
test
pop
je
testw
je
testb
je
call
push
call
test
pop
je
mov
mov
mov
movl
andl
andl
mov
andl
mov
mov
push
call
test
je
mov
mov
mov
push
call
xor
pop
pop
ret
xor
jmp
mov
test
jne
ret
mov
mov
call
test
je
mov
ret
push
mov
push
pushl
mov
call
mov
pushl
mov
mov
mov
lea
lea
movl
movl
movl
add
cmp
add
inc
add
shll
dec
cmp
movl
mov
call
andl
mov
call
mov
test
je
mov
test
je
push
mov
call
test
je
lea
push
lea
mov
call
pop
mov
pop
pop
ret
xor
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
cmp
je
cmp
push
mov
lea
push
mov
mov
pop
lea
mov
mov
mov
mov
mov
je
lea
mov
mov
mov
lea
push
push
mov
mov
mov
mov
call
mov
pop
pop
lea
push
lea
push
push
call
testb
mov
jne
testb
jne
testl
jne
mov
push
call
test
je
mov
lea
push
push
call
pop
pop
testb
pop
jne
testb
je
pushl
call
pop
mov
mov
pop
xor
pop
call
add
leave
ret
mov
push
pushl
call
mov
mov
test
pop
je
mov
mov
mov
push
call
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
add
push
mov
add
movl
je
cmpl
push
lea
mov
je
mov
lea
lea
push
mov
mov
push
lea
mov
movl
movl
movl
movw
movl
movl
movl
call
mov
mov
test
mov
jne
test
jne
test
js
or
lea
call
test
je
mov
push
mov
test
jbe
xor
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
cmp
jb
lea
push
call
mov
mov
add
mov
pop
mov
test
jne
test
jne
mov
pop
mov
pop
xor
call
add
ret
push
lea
sub
mov
xor
mov
mov
push
push
push
mov
lea
push
push
xor
push
push
push
call
test
jne
mov
lea
push
lea
push
lea
push
push
lea
push
lea
push
pushl
mov
pushl
movl
mov
movl
call
cmp
mov
jne
cmpl
jne
cmp
je
cmpw
je
push
pop
lea
mov
push
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
push
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
push
xor
mov
call
cmp
jl
mov
push
lea
call
test
je
mov
cmpl
jae
or
lea
call
mov
mov
neg
sbb
and
push
call
pop
lea
push
xor
mov
call
cmp
jl
mov
push
lea
call
test
je
mov
cmpl
jae
or
lea
call
mov
mov
neg
sbb
and
push
call
cmp
mov
pop
je
push
lea
mov
call
mov
neg
sbb
and
cmp
je
mov
cmp
je
push
mov
incl
lea
lea
call
testb
jne
testb
jne
testb
jne
testb
jne
incl
cmpl
jne
xor
mov
pop
pop
xor
pop
call
add
leave
ret
xor
jmp
push
mov
push
push
push
mov
lea
neg
sbb
and
mov
je
mov
push
call
mov
test
je
xor
test
js
lea
mov
push
push
call
mov
test
jne
lea
call
pop
pop
leave
ret
push
mov
push
push
call
test
pop
je
call
test
push
mov
je
mov
push
call
mov
test
je
pushl
mov
push
call
test
js
mov
pushl
mov
push
call
test
js
mov
pushl
mov
push
call
mov
test
js
mov
mov
mov
mov
push
call
lea
call
mov
pop
leave
ret
xor
jmp
push
mov
mov
cmpl
push
mov
push
mov
jge
testb
jne
mov
test
jne
cmp
jne
test
jne
cmpl
je
xor
cmp
mov
sete
push
xor
add
lea
adc
mov
lea
mov
mov
pushl
pushl
push
push
pushl
push
push
call
lea
test
je
lea
pushl
mov
add
mov
pushl
mov
pushl
mov
push
push
call
test
js
mov
mov
pop
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
mov
xor
cmp
je
push
mov
cmp
je
push
lea
mov
cmp
mov
jne
mov
cmp
je
push
lea
mov
call
pushl
lea
push
pushl
push
call
add
mov
test
mov
jne
mov
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
mov
call
test
jne
pushl
mov
pushl
mov
pushl
pushl
pushl
push
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
mov
test
je
cmpl
je
push
mov
lea
call
mov
lea
call
mov
lea
call
xor
pop
pop
ret
push
mov
push
push
lea
push
mov
call
mov
push
push
call
test
pop
pop
js
lea
push
call
lea
push
push
call
test
pop
pop
js
mov
lea
call
xor
pop
pop
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
mov
test
movl
je
push
call
pop
lea
call
lea
call
lea
jmp
mov
mov
mov
push
mov
push
add
cmpl
push
mov
jne
push
call
pop
mov
mov
push
push
mov
call
mov
call
xor
mov
mov
mov
pop
pop
pop
ret
push
mov
sub
andl
andl
push
lea
push
lea
lea
movl
movl
mov
call
mov
test
jne
mov
pushl
mov
push
call
test
mov
jne
mov
mov
mov
mov
push
call
xor
lea
call
mov
pop
leave
ret
mov
jmp
xor
cmp
sete
ret
push
mov
mov
cmpl
push
mov
je
pushl
pushl
push
push
call
test
js
mov
testb
je
mov
mov
mov
test
push
je
mov
test
je
cmpb
je
mov
test
je
mov
mov
call
test
jne
mov
mov
push
push
pushl
mov
call
pop
pop
pop
ret
mov
call
jmp
xor
jmp
push
mov
push
mov
and
push
push
je
xor
je
xor
pop
pop
leave
ret
mov
push
pushl
mov
mov
call
pop
ret
mov
mov
ret
push
push
xor
cmp
mov
je
push
lea
cmp
push
je
push
call
pop
push
push
pop
push
pop
mov
call
test
pop
je
lea
push
call
push
push
pop
push
pop
call
pop
pop
pushl
mov
mov
call
pop
pop
pop
pop
ret
mov
jmp
push
mov
call
test
je
mov
mov
mov
call
test
jne
push
call
mov
call
test
je
mov
push
pushl
mov
call
pop
ret
push
mov
push
lea
mov
test
je
mov
test
jbe
push
mov
test
je
lea
mov
mov
lret
inc
add
push
cmp
call
dec
jne
pop
lea
call
pop
xor
pop
ret
xor
jmp
xor
jmp
push
mov
test
je
push
mov
push
lea
mov
test
je
mov
push
push
call
test
je
mov
push
call
test
je
lea
mov
push
push
call
pop
xor
pop
pop
ret
xor
jmp
xor
jmp
mov
mov
add
call
xor
ret
push
lea
sub
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
test
je
pushl
mov
pushl
call
test
pop
pop
je
mov
mov
push
call
testb
mov
mov
jne
testb
jne
xor
pop
pop
pop
mov
mov
inc
add
insb
leave
ret
andl
loopne
add
adc
inc
mov
mov
movl
mov
call
push
push
mov
call
xor
cmp
pop
pop
push
mov
sub
push
push
push
push
lea
push
lea
push
push
call
les
lea
fdivl
fstl
enter
jns
lea
add
push
add
pop
mov
enter
call
jl
add
push
movl
add
mov
test
add
add
in
call
push
push
push
lea
push
push
call
pop
popf
stos
mov
lret
xchg
add
add
jb
jns
add
out
add
push
jb
add
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
in
xchg
add
pop
add
pop
addb
add
add
bound
add
add
push
pushf
push
add
add
scas
jo
xchg
add
sub
pop
push
push
lea
push
call
add
xchg
cltd
scas
popa
add
add
pop
stc
in
mov
mov
add
mov
addb
add
jnp
jns
add
add
add
out
iret
in
clc
in
add
add
mov
fistl
push
sub
pop
call
push
push
lea
push
push
call
out
lret
subb
jno
fninit
fiaddl
stos
pop
mov
add
lahf
aam
add
pop
mov
std
out
lods
rolb
cmpsl
push
pusha
add
jne
faddl
lds
in
hlt
pop
call
jmp
push
push
push
lea
push
push
push
call
les
test
mov
mov
jmp
js
jp
jno
add
mov
add
lock
loopne
add
mov
add
add
lret
insb
jmp
jno
incb
push
add
mov
add
add
cmpb
loop
jno
sub
pop
ret
mov
push
push
lea
push
push
push
push
push
call
push
repnz
push
mov
mov
add
popa
fcomps
nop
jecxz
add
repnz
jle
xchg
clc
cmpsl
push
push
xchg
jb
jge
cmpsb
je
add
add
mov
add
jns
push
pop
loope
stc
add
addr16
add
addb
pop
mov
push
push
push
push
push
push
call
mov
add
test
add
pop
sahf
out
mov
add
add
mov
jb
jge
jnp
mov
xchg
mov
lret
add
leave
add
mov
data16
add
add
testl
add
hlt
add
je
add
add
in
call
add
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
add
fiadds
faddp
scas
add
add
add
imulb
cmpsb
add
pop
imul
mov
faddl
add
stc
mov
pop
add
push
push
push
call
add
cltd
add
int
popa
add
imul
add
ja
add
jb
add
jo
aad
add
add
add
add
rcrb
add
add
test
mov
test
ret
daa
inc
add
push
push
push
push
lea
push
push
push
call
insb
xchg
imul
rcl
add
aad
mov
add
fisubs
add
and
mov
push
mov
sub
pop
mov
push
push
lea
push
call
pop
add
jge
add
pop
add
adcb
pop
add
add
jne
mov
add
add
add
push
jae
mov
add
mov
xchg
in
add
add
jno
xchg
fiadds
fnstenv
enter
add
int
testl
add
icebp
aam
in
clc
lcall
sbb
push
push
push
push
push
call
mov
add
enter
mov
add
push
nop
int3
xchg
addl
pushf
lret
ret
add
lcall
je
add
jb
cmpsb
scas
fwait
add
test
sub
pop
add
push
push
shr
add
push
or
inc
add
sub
not
lea
shr
sub
inc
rol
add
pop
ror
dec
xor
pop
push
push
lea
push
call
pop
mov
xlat
add
add
jle
push
mov
xchg
shrb
je
add
pusha
jl
jnp
call
push
sti
loop
roll
add
add
mov
xchg
mov
in
hlt
pop
pushl
call
push
lea
push
push
push
push
push
push
push
lea
push
call
xchg
pop
cltd
mov
imul
movsl
cmpb
push
ret
out
stos
mov
add
bound
fistl
lret
fcompl
inc
lock
push
push
push
push
lea
push
push
call
jge
mov
test
pusha
adc
xchg
lods
test
push
add
mov
icebp
add
mull
fiadds
imul
jge
add
je
add
xchg
enter
mov
in
lcall
inc
call
push
push
push
lea
push
push
push
push
call
add
jmp
mov
pop
jp
push
xchg
imull
mov
jle
add
add
jmp
insb
addb
jge
mov
add
mov
call
cmpl
add
pusha
mov
in
lcall
inc
call
push
push
push
push
push
push
push
call
add
push
mov
rol
add
jmp
pushf
mov
mov
jnp
add
mull
addb
add
pop
add
jns
push
add
pushl
push
push
push
lea
push
push
call
add
jb
pop
push
xchg
jnp
movsl
add
jmp
mov
out
add
add
push
push
mov
call
arpl
imul
aam
lods
add
add
add
add
jb
add
lret
sub
pop
pushl
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
cli
cld
mov
add
jbe
mov
add
add
add
jp
addl
jmp
lahf
jl
into
add
add
add
filds
push
int3
sub
pop
call
pushl
push
push
push
lea
push
push
push
push
push
push
call
int3
stos
add
jo
xchg
movsl
mov
add
rcrb
cli
in
sbb
add
jb
add
push
lock
loop
mov
cld
fwait
add
mov
out
add
shr
mov
popa
cli
mov
lcall
jne
call
push
push
shr
sub
rol
push
xor
add
sub
lea
sub
ror
ror
pop
sub
rol
dec
pop
push
push
push
push
push
lea
push
call
cmpb
xchg
lea
fnsave
add
jmp
add
loope
les
xchg
add
mov
jp
cli
add
cli
test
popf
icebp
add
jnp
fs
add
mov
fdivrl
add
lcall
jne
push
lea
push
push
push
push
push
push
push
push
push
call
fdivrl
mov
repnz
add
add
add
add
jae
cli
cli
xchg
roll
pusha
add
nop
push
add
out
fwait
sahf
add
lea
filds
mov
add
add
jb
cmpl
lds
hlt
add
jae
in
jne
imul
faddl
push
pop
je
jno
mov
in
fcomps
dec
add
push
push
push
lea
push
call
add
add
xlat
add
add
popf
push
cwtl
add
add
add
add
add
add
mov
jge
add
lea
fcomps
mov
sahf
jno
add
add
call
loopne
lret
pop
test
add
lcall
fs
mov
lock
lcall
inc
push
push
inc
sub
not
push
or
not
add
sub
sub
lea
sub
shl
dec
pop
shr
shr
inc
shr
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
rclb
addr16
push
push
push
mov
test
les
add
fisubrl
mov
cli
ret
in
fdivr
lcall
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
xchg
xchg
mov
sahf
jne
sti
mov
add
jp
xchg
jno
js
jmp
loope
add
add
add
fwait
test
pop
arpl
add
lret
mov
nop
add
cltd
pop
pop
popf
add
ljmp
push
mov
sub
pop
call
push
push
push
lea
push
push
push
call
lcall
nop
cltd
cmc
shrl
add
testb
add
scas
addl
gs
add
icebp
pop
pop
out
pop
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
call
clc
fcmovnu
add
lods
pusha
add
aad
add
mov
fbstp
add
mov
mov
test
mov
jo
imul
outsl
mov
pop
fs
in
add
add
cli
mov
aam
lods
add
add
lcall
mov
push
lea
push
lea
push
lea
push
push
call
add
mov
jge
pusha
pop
add
add
cwtl
fisubs
stos
ret
pop
nop
pop
test
clc
add
add
jbe
add
cltd
push
cmc
subb
data16
mov
in
pop
add
add
push
push
push
call
add
add
stos
add
xchg
add
shrb
add
arpl
pop
add
add
rcl
mov
add
add
cli
add
aad
add
add
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
pop
leave
xchg
out
mov
jbe
xchg
cmpsb
xchg
add
fildl
call
in
fs
test
popf
fnstsw
in
call
xor
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
pop
push
enter
add
add
fldcw
add
lret
pop
add
add
add
scas
push
add
push
xacquire
add
pop
fadds
add
cmpb
sub
pop
add
push
push
push
push
push
push
push
push
call
pusha
add
jb
add
or
mov
add
add
je
fadds
aad
add
add
add
push
sub
pop
add
push
push
push
push
push
push
push
push
call
add
roll
rorb
cmpsb
adcl
loop
fisubl
jne
in
add
scas
add
test
lret
mov
add
addb
hlt
mov
push
lret
add
push
stc
add
stos
add
rolb
enter
jp
mov
add
add
lcall
push
push
lea
push
lea
push
push
lea
push
call
hlt
cmc
lock
mov
test
rolb
testl
out
pop
mov
add
aam
add
xchg
mov
sub
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
mov
add
add
mov
in
pop
add
xchg
add
loopew
fdiv
loope
xchg
loop
test
pusha
add
int
add
out
jp
in
fdivr
lcall
lock
push
push
push
push
push
push
push
lea
push
push
call
lret
add
add
call
jno
add
add
add
jne
fcmove
in
divl
add
add
xchg
add
add
add
add
add
ljmp
push
fs
pop
scas
add
fiadds
je
xlat
add
in
mov
aad
int
add
je
sub
pop
mov
xor
push
push
push
push
push
call
add
movsb
add
sarb
xchg
push
mov
movsb
jmp
fdivr
out
lret
add
in
xchg
fcomip
sub
pop
push
push
push
push
call
cld
fsubrl
xlat
pop
pop
aam
int3
sti
add
add
add
add
lods
add
mov
fisubl
mov
add
in
je
mov
cld
addb
arpl
xchg
jae
add
divb
pop
add
add
in
hlt
pop
mov
push
push
push
call
loopne
in
add
add
stos
cmc
add
jns
pop
mov
add
pop
mov
sti
loopne
add
add
add
loop
xlat
add
mov
imul
add
scas
jo
imul
jge
add
add
xchg
add
in
add
add
push
push
push
push
push
push
lea
push
call
pop
add
jb
add
sahf
jmp
je
popf
mov
add
roll
add
add
push
add
enter
stos
add
add
add
add
push
push
add
add
rolb
popf
add
popa
in
add
add
sub
pop
add
push
push
push
push
push
call
mov
add
add
mov
std
lds
sarb
xchg
add
nop
mov
clc
rol
add
jmp
aam
add
add
add
xchg
add
lcall
enter
push
push
lea
push
push
push
push
call
lret
cltd
testl
cmpsl
je
add
fiaddl
ljmp
add
mov
fs
xlat
add
jb
testl
je
add
enter
mov
adc
jns
fwait
jecxz
in
fdivr
lcall
rep
push
lea
push
push
call
add
in
add
xchg
add
mov
out
add
mov
jmp
out
insb
pop
cmpsb
mov
add
movsl
push
pop
add
add
add
imul
std
push
loopne
jae
test
add
lcall
lcall
push
push
lea
push
call
add
ja
add
pusha
xchg
insb
add
std
push
xchg
ljmp
mov
int3
imul
push
mov
add
aam
add
bound
nop
icebp
add
adcb
add
hlt
lcall
pop
hlt
push
push
call
add
add
add
mov
aam
add
shlb
add
adc
push
add
push
jne
mov
add
add
jnp
xchg
add
in
xchg
sub
pop
add
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
jle
mov
add
fwait
add
int3
pop
push
add
add
mov
movsl
scas
stc
add
add
add
add
add
movsl
popf
mov
add
xchg
add
pop
imul
add
add
sub
pop
add
push
push
lea
push
push
push
lea
push
call
mov
mov
cmpsb
add
add
add
add
xchg
int
pusha
imul
xchg
add
cmpsb
int3
jbe
in
je
push
leave
add
mov
add
add
add
add
xlat
lret
jns
arpl
mov
iret
add
ret
daa
inc
add
push
push
call
add
lret
add
scas
add
jne
add
pop
mov
out
jns
add
add
int
push
add
je
repnz
in
add
scas
mov
aam
pop
call
lds
sub
pop
mov
push
push
push
push
push
push
call
pop
mov
fistpl
outsl
add
pop
add
add
pop
loopne
lret
add
in
std
loope
add
lea
int
mov
add
mov
scas
mov
sub
pop
xor
push
lea
push
push
push
push
push
push
push
push
call
jno
add
pop
lret
add
mov
lds
xchg
jbe
cld
out
add
add
add
add
pop
add
mov
add
add
lahf
sahf
data16
add
nop
push
pop
sub
pop
add
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
fxch
add
arpl
pop
jge
add
test
arpl
fs
aad
pop
movsl
add
add
add
repnz
cli
jl
div
sub
pop
mov
xor
push
push
call
lret
cmc
pop
movsl
xchg
aam
fmuls
lods
add
data16
lahf
push
test
pop
push
jno
mov
data16
xchg
add
add
add
ja
xchg
movsl
add
jb
add
jecxz
popf
add
lea
mov
fadds
dec
sub
iret
push
lea
push
push
lea
push
push
lea
push
push
push
call
fcmovnbe
add
add
in
push
cmc
xchg
add
test
lcall
cmc
add
jmp
add
addr16
add
movsl
hlt
add
add
add
jecxz
mov
add
xlat
jmp
jbe
cld
xchg
add
xchg
add
add
insb
add
int
jb
hlt
lret
ljmp
lcall
ret
push
push
push
push
lea
push
call
add
add
addb
add
call
leave
xchg
fcomi
stos
cltd
add
aad
add
int3
jae
jno
js
add
test
pop
fsubrp
add
jge
add
jo
sarb
aam
add
in
lods
flds
cltd
mov
mov
add
add
lcall
fsubrs
inc
mov
push
not
add
not
push
or
inc
add
sub
sub
lea
dec
sub
dec
pop
xor
add
pop
push
lea
push
push
push
call
in
add
popf
roll
add
gs
popa
mov
add
imul
mov
add
movsb
filds
arpl
popa
add
add
add
cltd
scas
out
in
lock
lcall
jne
push
lea
push
push
push
push
push
push
push
push
call
fldt
xchg
mov
add
mov
fadds
add
add
add
rcll
add
add
mov
lahf
jmp
in
fdivr
lcall
mov
add
loope
lldt
lret
mov
push
pop
add
rol
add
sub
lea
sub
shl
ror
pop
ror
sub
xor
pop
push
push
lea
push
push
call
add
add
popa
into
fiaddl
loopne
clc
add
xchg
add
jne
pop
gs
icebp
pushf
add
test
fimuls
add
addr16
add
shl
add
add
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
call
rclb
add
lret
mov
add
add
xchg
mov
mov
add
mov
flds
cmpsl
iret
flds
add
cwtl
rcrl
loop
add
lds
leave
imul
pop
cmp
pop
add
stos
mov
in
call
push
push
lea
push
call
mov
add
movb
add
add
jle
add
out
add
imul
push
movsb
imul
add
add
imul
jns
jp
add
add
add
imul
sub
pop
call
push
lea
push
push
call
insb
enter
mov
stos
xchg
jecxz
fwait
out
aad
ja
movsl
arpl
fwait
jmp
add
add
xchg
fadds
add
add
add
add
add
jb
jno
incb
add
movb
add
push
add
in
hlt
lcall
clc
push
push
push
push
push
push
push
push
lea
push
call
lret
scas
std
add
add
xchg
std
cmpsb
add
add
repnz
repnz
xchg
lret
clc
add
push
add
add
out
popf
add
add
push
add
xchg
nop
insb
shll
push
add
add
xchg
icebp
push
int3
int3
icebp
add
in
sub
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
test
mov
add
notb
lcall
mov
jno
add
add
cld
cltd
lods
lcall
sarl
cmc
add
jmp
add
into
jns
data16
add
add
sub
pop
mov
push
lea
push
push
call
add
push
add
lods
add
pop
scas
in
jo
mov
int
filds
fwait
jp
add
adcl
popf
cli
mov
cmpsl
mov
in
sahf
xchg
add
add
loope
in
add
mov
jge
imul
jb
enter
ficompl
lret
add
hlt
in
xchg
push
out
add
lcall
pop
in
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
add
sahf
push
mov
lret
add
aad
add
test
add
loope
int
mov
add
add
push
cmc
cmc
cmpsl
pushf
add
add
lcall
ret
add
add
add
push
lea
push
lea
push
lea
push
push
call
add
add
mov
pop
push
lock
sti
mov
add
into
mov
add
mov
add
add
in
add
fwait
loopne
add
add
add
push
movsl
sahf
add
jno
add
jae
xor
push
push
lea
push
push
push
call
mov
outsl
jae
fmull
aad
shl
add
jp
add
xchg
roll
xorl
add
add
lock
add
imul
push
add
int3
nop
add
lcall
jne
push
push
lea
push
push
call
mov
add
add
add
lahf
test
add
add
push
in
mov
pusha
imul
add
jp
xchg
add
add
rclb
in
hlt
lcall
inc
adc
out
int3
iret
iret
push
push
push
push
push
push
push
push
push
lea
push
call
iret
fucomip
add
loopne
add
add
loop
lcall
out
add
pop
iret
xchg
mov
int3
fsqrt
lds
add
lods
stos
frstor
add
add
jmp
loope
add
add
sub
pop
xor
push
push
push
call
add
fdivs
lds
mov
fmul
push
add
mov
in
into
int3
loop
movsl
add
iret
add
mov
push
in
pop
jo
clc
add
add
add
data16
xchg
sub
pop
add
push
lea
push
call
mov
add
hlt
add
cli
negl
jmp
shlb
xchg
mov
imul
mov
add
mov
xchg
popa
arpl
scas
add
sti
add
mov
out
push
add
and
bound
push
add
ja
lods
jp
ja
movsl
sub
pop
add
push
xor
ror
ror
add
pop
pop
push
push
call
add
push
mov
mov
jmp
add
aad
push
add
test
cli
mov
add
add
push
push
in
add
sub
pop
mov
xor
push
lea
push
push
push
push
push
call
fdivs
movsb
jge
add
cwtl
push
add
shl
adcb
xchg
mov
mov
lret
push
lods
lcall
add
push
in
mov
add
add
lods
add
in
call
sub
not
ror
shr
pop
mov
xor
push
ror
add
sub
pop
or
je
mov
xor
push
lea
push
lea
push
call
add
add
add
je
sti
add
hlt
pushf
add
add
add
add
mov
add
add
add
sub
pop
mov
push
push
push
push
push
push
lea
push
call
ljmp
rol
lock
lds
jae
add
mov
add
in
fdivl
add
js
in
fldl
pop
mov
fisubs
xorb
call
push
push
push
lea
push
push
push
push
push
push
call
push
xchg
xchg
into
add
data16
fldl
cltd
add
mov
add
mov
call
pop
jae
js
mov
fbld
mov
ljmp
add
ljmp
andb
add
add
mov
push
add
push
add
sub
pop
add
push
push
call
xchg
fiaddl
out
mov
add
in
add
addr16
add
add
add
add
add
in
fdivl
mov
add
mov
leave
insb
add
add
iret
stos
add
add
push
mov
add
add
jb
add
add
fiadds
lcall
repnz
push
lea
push
push
push
push
push
push
call
clc
add
pop
add
icebp
imul
lods
add
aad
push
add
add
mov
rclb
jb
add
add
scas
scas
add
jne
cmc
mov
add
scas
xchg
test
add
lcall
jne
push
push
push
push
push
call
jno
add
jnp
push
mov
mov
testb
jecxz
add
add
xchg
lret
std
add
mov
aad
cmpl
out
scas
fnsave
rcr
lea
jge
int
add
inc
or
int3
iret
iret
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
stos
add
add
repnz
add
add
push
fldt
mov
add
faddl
std
push
ljmp
arpl
push
mov
mov
mov
in
pop
mov
xlat
jp
add
push
stc
popf
jle
into
jmp
add
add
lcall
add
push
lea
push
lea
push
lea
push
push
lea
push
call
fcmovnb
lret
in
cmpsb
add
ficoms
lahf
int3
xchg
movb
testl
js
add
add
fiadds
jge
xchg
add
out
mov
add
sub
pop
add
push
push
lea
push
push
push
lea
push
push
call
add
add
pop
repnz
add
jmp
add
pusha
add
mov
push
jnp
mov
mov
fcmovnb
xchg
testl
add
lock
push
push
push
push
push
push
call
mov
rol
lahf
lds
rcl
rolb
add
test
fwait
add
test
jge
mov
popa
popa
js
push
rcll
jnp
adcb
stos
call
in
call
rep
push
not
pop
mov
xor
push
push
push
push
push
push
push
call
lods
push
add
add
ja
outsl
in
add
add
jb
repnz
pushf
faddl
pop
loope
test
cmpsb
add
push
out
iret
add
jns
rorb
add
fidivrl
test
lea
add
popf
add
cwtl
add
xlat
mov
popf
enter
add
sahf
arpl
leave
je
push
add
add
pop
mov
add
push
lea
push
push
call
add
add
bound
jl
push
std
jmp
add
xlat
aad
add
xchg
repnz
mov
mov
xchg
sahf
jecxz
add
add
add
imulb
test
cmpsl
add
imul
movb
add
push
add
rol
dec
pop
rep
pop
push
push
not
not
push
sub
add
sub
lea
not
sub
sub
sub
not
lea
pop
inc
add
pop
push
sub
ror
pop
pop
push
rol
pop
mov
push
push
call
add
scas
add
add
add
iret
outsl
sahf
jp
mov
clc
add
add
mov
add
fwait
les
cmpsb
add
add
add
movb
sti
imul
add
add
add
test
add
add
roll
hlt
mov
push
sub
pop
mov
mov
push
add
pop
jmp
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
fildl
add
popa
add
xchg
mov
std
mov
add
sarl
mov
data16
add
add
jns
fwait
shrb
xchg
xlat
add
add
xchg
bound
push
out
add
mov
sub
pop
push
push
shl
lea
dec
lea
pop
mov
push
pop
add
push
add
xor
add
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
jnp
iret
pop
imul
jecxz
cmpsl
push
imul
rcrb
push
jno
add
jne
mov
pusha
enter
add
int
mov
add
insb
add
add
mul
pop
lea
mov
rolb
in
loopne
push
push
push
not
add
xor
pop
mov
push
xor
shr
dec
pop
pop
push
push
push
push
push
lea
push
push
push
call
lods
add
add
xchg
mov
add
stc
lcall
add
add
add
mov
add
add
jecxz
add
xchg
xchg
add
add
add
stos
pop
add
pushf
popf
add
sub
pop
pop
push
push
push
lea
push
push
lea
push
call
lcall
add
ja
int
add
add
push
test
mov
movsl
add
mov
add
pop
pop
ror
repnz
sub
pop
pop
push
inc
shr
pop
pop
leave
push
lea
push
lea
push
push
push
push
lea
push
push
call
into
xorl
add
loope
test
std
jge
add
push
jbe
out
test
xlat
out
addr16
add
add
add
mov
push
cmc
push
add
add
add
add
stos
push
mov
lcall
or
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
add
mov
flds
add
test
mov
add
rorb
pop
add
jl
mov
mov
pop
mov
push
push
push
lea
push
push
lea
push
push
call
fldcw
add
add
xlat
mov
xchg
add
pop
mov
js
add
pop
jns
jo
add
add
add
jle
sub
pop
add
push
lea
push
push
push
push
push
call
xchg
pop
mov
add
jbe
mov
add
add
lret
leave
add
add
mov
pop
add
lods
mov
sahf
add
fiaddl
mov
add
mov
mov
lcall
add
ja
add
in
add
lcall
push
push
pop
push
push
push
push
push
lea
push
lea
push
call
hlt
mov
out
add
add
pushf
out
ja
push
outsl
add
add
add
movsl
mov
xchg
add
mov
add
add
stos
aad
push
xchg
sub
pop
movl
push
lea
push
push
lea
push
lea
push
push
call
push
mov
lds
mov
imul
arpl
leave
lahf
add
jnp
fmulp
icebp
add
ljmp
sub
pop
addl
test
je
push
not
rol
xor
pop
mov
pop
push
push
push
lea
push
push
call
lahf
outsl
xchg
imul
pusha
add
rolb
add
je
add
clc
add
in
add
add
cmpl
lcall
push
xor
pop
pop
push
ror
rol
rol
pop
pop
push
lea
push
push
push
push
push
push
call
add
add
in
testl
add
push
mov
push
xchg
pop
mov
add
loopne
add
clc
lock
fsubs
mov
add
out
mov
pop
xchg
mov
push
add
fadds
in
add
in
in
leave
push
add
shr
pop
ret
push
push
pop
mov
add
push
ror
shr
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
rorl
add
add
lods
faddl
add
xchg
add
add
mov
add
xchg
add
lret
mov
fists
add
mov
in
add
std
pop
icebp
jp
add
add
add
jb
jl
mov
add
add
xchg
loopne
sub
pop
push
push
push
push
call
cld
add
subb
push
add
add
add
data16
pop
mov
stos
pop
add
add
pop
cli
stos
mov
xchg
xchg
add
cli
sarl
add
mov
add
xchg
lock
add
add
add
add
add
lea
sub
pop
push
push
xor
add
pop
push
push
add
lea
add
add
pop
testl
addl
push
rol
inc
pop
push
push
lea
push
push
push
push
push
call
popf
cld
lods
push
add
add
mov
cmc
lret
jae
lea
mov
push
out
mov
cmpsb
mov
mov
out
data16
jno
fcmovbe
add
addb
ror
add
pop
add
add
incb
add
push
sub
pop
call
push
lea
push
push
push
push
push
lea
push
call
pop
mov
add
add
add
aam
add
add
int3
int3
pop
adcl
je
add
push
add
mov
add
addl
mov
loopne
test
add
test
mov
test
add
inc
cld
push
push
push
call
imul
mov
rcl
std
add
jecxz
mov
sar
mov
in
add
add
add
jno
pop
add
call
xchg
push
push
add
test
add
pop
into
shlb
add
mov
add
xchg
add
sub
pop
pushl
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
clc
add
add
lods
jne
loop
add
push
popa
xchg
lret
rcrb
push
ret
push
data16
add
add
aad
arpl
add
add
xchg
clc
jno
add
push
bound
add
jnp
sub
pop
push
call
push
add
not
add
add
pop
cmpl
jne
pop
push
add
pop
pop
pop
push
push
push
push
lea
push
push
call
add
mov
jmp
add
mov
addl
test
in
mov
jae
data16
add
lods
pop
add
jmp
add
add
add
stos
jl
nop
into
add
lock
repnz
mov
add
in
add
out
xchg
movsl
add
sub
pop
pop
leave
push
shr
ror
add
pop
ret
push
push
ror
lea
pop
mov
add
push
rol
ror
sub
pop
push
push
push
push
lea
push
call
jmp
add
add
add
cmpsb
pop
jno
add
mov
mov
mov
add
push
add
jno
mov
hlt
add
add
fcmove
add
add
mov
add
mov
add
clc
add
cli
nop
data16
lcall
push
xor
sub
pop
push
push
pop
push
push
shl
xor
xor
rol
pop
movl
push
sub
pop
push
call
push
add
add
dec
pop
push
push
not
pop
call
push
add
sub
lea
add
pop
subl
push
lea
push
push
push
push
push
push
push
push
push
call
add
aad
add
add
add
add
add
push
add
push
xchg
roll
sub
pop
cmpl
jne
push
shl
pop
pop
push
push
lea
push
push
push
call
add
add
mov
add
mov
leave
jbe
subb
in
int
mov
call
std
add
jae
negl
lcall
ljmp
add
mov
add
add
data16
lcall
pop
push
push
push
call
jns
add
add
push
outsl
mov
jne
add
pop
call
jnp
mov
jmp
lock
add
add
add
sbbl
cld
add
push
add
out
xchg
add
add
add
jl
add
in
hlt
pop
pop
push
rol
add
pop
leave
ret
push
lea
push
push
push
call
mov
add
mov
add
mov
add
xchg
fiaddl
add
pop
cwtl
lock
iret
add
pop
add
mov
add
push
incb
add
add
sahf
out
push
add
add
add
add
xchg
add
notl
into
nop
mov
in
lock
lcall
push
lea
shr
dec
pop
mov
push
lea
push
call
jb
add
lret
popl
xchg
add
cltd
add
add
add
push
jmp
mov
add
xchg
pop
fwait
add
lcall
cld
push
push
call
lret
add
add
addb
mov
out
add
out
mov
shl
fnstcw
add
leave
add
hlt
cli
mov
nop
sub
pop
push
push
push
push
push
push
lea
push
call
jno
add
stos
add
cld
add
push
jge
add
imul
movb
xchg
add
add
add
add
pop
out
in
in
lcall
push
push
push
add
xor
ror
push
and
add
dec
sub
inc
sub
add
add
pop
not
pop
push
add
pop
pushl
push
push
push
push
push
call
add
faddl
add
jmp
push
stos
roll
scas
add
ljmp
lahf
add
gs
mov
sahf
stc
add
push
add
lds
loopne
addl
add
push
add
inc
ror
pop
call
push
push
sub
inc
push
sub
add
sub
add
dec
sub
sub
lea
dec
inc
pop
pop
push
push
push
push
call
aad
ja
leave
jns
mull
lods
js
lods
add
pusha
rcll
mov
test
jbe
jecxz
mov
mov
into
add
stc
add
stc
sub
pop
pushl
push
add
lea
sub
pop
call
call
push
push
inc
push
or
inc
add
sub
not
not
sub
sub
ror
sub
pop
shr
pop
push
not
pop
pushl
push
lea
ror
pop
call
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
jp
movsl
add
add
fsubl
add
arpl
les
add
sbb
xchg
add
jnp
flds
jbe
fdivs
add
mov
popf
add
jns
roll
add
faddl
js
add
data16
scas
add
add
into
add
ror
scas
sub
pop
call
push
push
sub
add
push
push
pop
add
rol
xor
lea
sub
add
pop
xor
sub
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
mov
mov
sti
cltd
movb
jb
add
shlb
pop
clc
faddl
arpl
add
push
mov
pop
xchg
hlt
add
add
push
add
mov
add
add
add
add
fmulp
lret
jo
add
add
frstor
add
in
fdivr
lcall
jne
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
nop
add
add
hlt
jne
fs
add
jl
add
push
fidivrl
mov
add
add
fildl
imulb
add
add
test
add
out
cmp
add
rclb
movsb
out
adcl
add
add
lods
xchg
jp
imul
flds
hlt
in
jecxz
icebp
add
mov
rolb
mov
into
ja
add
call
ja
jnp
in
clc
lcall
inc
or
push
push
lea
push
lea
push
push
push
call
add
lock
mov
leave
notb
in
stos
xchg
data16
add
jae
and
add
call
add
push
cmpsl
pusha
scas
add
add
in
in
lea
push
pop
sub
push
push
push
push
call
push
jge
fcoml
xchg
add
add
mov
xchg
add
push
nop
add
out
enter
mov
outsl
mov
jmp
movsl
popf
cld
add
add
mov
shl
push
add
flds
out
mov
outsl
stc
loop
mov
add
jns
jmp
in
lock
lcall
add
call
pushf
add
fcmovnb
out
dec
pop
add
push
push
push
push
push
push
push
call
add
mov
loope
add
js
add
lret
add
add
rolb
mov
cmpsl
jnp
cltd
mov
fiadds
out
mov
push
nop
add
mov
cltd
cli
loopne
sub
pop
mov
mov
push
add
not
pop
add
push
not
lea
pop
add
push
push
push
call
hlt
add
insb
ljmp
scas
add
add
shlb
ljmp
mov
shl
stc
test
add
into
add
in
add
sub
pop
mov
mov
push
lea
push
lea
push
push
push
push
call
add
add
testl
mov
lods
add
shr
mov
add
add
mov
mov
xlat
aam
mov
add
add
add
xchg
add
add
add
mov
out
add
xchg
add
fs
add
add
lcall
pop
outsl
jne
cmp
jne
push
push
push
lea
push
push
push
push
push
call
mov
add
test
add
add
add
lods
arpl
mov
add
add
add
add
add
stc
add
popf
int3
push
add
add
fdivs
aam
mov
cmpb
mov
add
sub
pop
mov
movl
push
push
call
add
testl
shlb
add
add
std
pop
js
jp
call
add
adcb
lods
jle
into
jle
add
ja
add
add
mov
out
add
add
xchg
or
sahf
lods
push
fwait
add
imul
add
add
add
lcall
sub
add
push
rol
add
pop
mov
push
add
shr
add
lea
pop
mov
push
not
shl
pop
sub
jne
mov
push
push
push
push
push
push
push
call
add
add
add
add
fadd
add
mov
je
out
push
add
mov
iret
add
stos
lock
add
imul
loop
xchg
xchg
mov
add
add
filds
mov
cmpsb
mov
xchg
cmpsl
mov
in
in
lcall
add
add
jmp
push
ror
pop
mov
push
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
add
mov
push
add
mov
mov
mov
add
xlat
add
add
cld
xchg
add
insb
push
add
fsts
add
xchg
add
push
add
add
add
aam
add
icebp
add
mov
add
lods
popf
add
add
add
push
add
add
repnz
test
in
in
fcompl
cli
add
test
add
add
ret
push
xchg
not
pop
mov
movl
push
pop
jmp
mov
push
not
dec
pop
cmpw
jne
mov
push
ror
lea
sub
pop
movl
push
push
call
push
lods
add
rcrl
add
add
popa
loopne
add
out
xchg
call
add
fxch
add
fcmovnbe
jne
add
mov
xchg
sub
pop
jmp
pushl
push
lea
push
call
mov
scas
loope
add
jge
lock
add
hlt
push
ljmp
add
in
xchg
add
pop
hlt
lock
jo
ja
aad
add
sbbl
jmp
add
add
hlt
add
mov
mov
stos
repnz
add
add
jmp
je
in
clc
pop
pop
push
lea
push
push
push
push
lea
push
push
call
loopne
fwait
mov
add
lcall
mov
test
pop
add
mov
lods
add
pop
out
mov
push
mov
lock
js
lods
pop
jmp
test
add
jl
add
xchg
push
add
add
insb
roll
jae
cltd
add
add
insb
add
nop
addl
or
push
push
lea
push
lea
push
lea
push
push
call
mov
xchg
add
rol
outsl
pop
nop
scas
add
push
xorb
stos
movsb
add
add
fldl
rolb
test
in
pop
add
add
mov
mov
add
xchg
add
testl
add
add
pop
add
add
sub
pop
mov
push
rol
pop
mov
push
push
shr
xor
shl
push
sub
add
shr
sub
sub
pop
not
pop
push
ror
ror
shl
pop
push
call
push
sub
ror
pop
cmpl
je
push
push
shl
sub
add
push
and
add
shr
sub
inc
sub
inc
pop
not
add
pop
push
push
push
push
push
push
push
lea
push
push
push
call
mov
add
add
push
mov
bound
loope
add
fnstenv
call
mov
fbstp
out
in
jne
mov
add
push
add
scas
add
mov
stos
add
icebp
gs
pop
push
call
push
push
lea
push
push
push
call
roll
out
mov
add
add
add
out
add
mov
pop
add
stos
mov
movsb
lods
xor
fiaddl
mov
in
in
lcall
js
int3
fldz
ret
je
add
push
push
rol
rol
push
and
add
inc
sub
xor
ror
shl
pop
inc
lea
pop
push
inc
pop
push
push
push
lea
push
push
push
lea
push
push
call
addl
imul
add
mov
in
add
mov
push
push
cmpsl
scas
xchg
lahf
flds
add
xchg
push
add
mov
push
test
lcall
aaa
xor
add
or
test
add
add
xchg
leave
into
push
shl
sub
ror
push
xor
add
shl
shr
sub
inc
pop
lea
add
inc
pop
push
ror
add
inc
pop
push
push
xor
not
dec
pop
call
push
add
not
lea
pop
cmpl
je
push
push
dec
push
or
inc
add
lea
ror
sub
dec
not
pop
lea
pop
push
push
push
push
lea
push
push
push
push
call
add
mov
add
add
popf
xchg
mov
fldl
fsubrs
mov
in
jne
incb
jb
add
stos
addb
add
add
add
mov
jne
add
xchg
add
movb
sub
pop
push
call
push
push
call
loope
imul
lock
pushf
into
pop
add
out
add
push
add
in
add
add
add
lods
data16
add
in
clc
lcall
js
xor
ret
test
nop
stc
ja
add
inc
push
sub
add
ror
sub
add
pop
sub
pop
push
shl
add
pop
push
push
lea
push
call
add
xchg
mov
add
cltd
add
mov
out
add
mov
test
xchg
add
add
fwait
add
add
add
outsl
add
sti
jle
imul
mov
lods
add
add
lahf
mov
scas
fsubrl
pop
repnz
sub
pop
call
push
push
push
push
push
push
push
push
push
call
cwtl
sti
mov
lahf
push
subl
negb
push
add
add
add
add
lods
add
add
add
add
clc
xchg
add
sub
pop
cmpl
je
push
push
not
push
sub
add
dec
dec
sub
not
pop
not
dec
sub
add
pop
push
push
lea
push
push
push
push
push
push
call
lods
addr16
enter
add
lds
mov
js
fstp
pusha
mov
lds
add
jl
add
jmp
std
add
leave
xchg
add
add
add
mov
sti
filds
in
jl
mov
mov
loopne
push
call
push
dec
shr
sub
pop
cmpl
jne
mov
push
add
sub
rol
pop
movl
jmp
push
not
pop
xor
pop
push
push
push
call
cmpb
pop
stos
add
sti
add
jmp
iret
xchg
test
add
add
pop
mov
lret
mov
add
enter
mov
loop
stos
mov
add
sub
pop
pop
push
push
lea
push
push
lea
push
push
call
lds
add
mov
les
lcall
popa
insb
mov
xorb
outsl
mov
push
sub
pop
pop
push
push
push
lea
push
push
push
push
call
add
leave
fwait
pop
out
add
add
jge
mov
arpl
add
addr16
orb
loope
mov
jb
xchg
aad
fldcw
outsl
mov
adcl
gs
pop
pop
leave
push
push
push
lea
push
lea
push
push
call
pop
pop
add
bound
mov
xchg
add
add
mov
add
fadds
loopne
add
add
push
add
pop
out
pop
out
add
jge
push
mov
ljmp
add
loope
add
imul
test
js
push
aam
mov
lcall
or
push
push
add
shl
ror
pop
mov
push
add
rol
sub
pop
add
cmpl
jne
push
push
shr
sub
push
sub
add
ror
sub
xor
inc
sub
sub
pop
inc
pop
push
lea
pop
pushl
push
push
push
push
push
push
lea
push
lea
push
push
call
xchg
faddl
add
add
jecxz
add
add
jno
jo
mov
add
fcmovu
fldlg2
pop
add
add
add
xchg
mov
negl
mov
in
push
andl
cwtl
add
aam
fisubrl
sub
pop
call
push
ror
ror
dec
shl
pop
push
push
ror
sub
pop
call
push
shl
shr
shr
shl
pop
jmp
cmpl
jne
push
shl
pop
mov
call
push
push
push
push
push
call
movb
add
add
scas
mov
add
jb
jge
popf
add
add
push
leave
int3
test
add
roll
dec
mov
lahf
xchg
add
cwtl
adc
cmc
faddl
test
add
idivb
add
add
add
popf
add
add
popf
popa
push
add
jmp
push
lea
push
call
loope
mov
lret
test
add
neg
cli
sar
add
add
fmuls
jmp
js
in
clc
lcall
jge
add
test
aas
sub
xlat
push
shr
dec
add
push
or
not
add
shl
sub
shr
lea
sub
pop
add
rol
dec
pop
push
inc
ror
pop
pushl
call
push
push
push
push
lea
push
push
call
test
cli
add
mov
add
add
lahf
xchg
pusha
pusha
outsl
add
add
nop
flds
push
add
out
testb
in
lea
add
add
jb
add
mov
add
add
call
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
pop
enter
fmulp
jnp
add
mov
add
int3
pusha
add
std
add
add
mov
mov
add
fisttpl
pop
pop
add
stc
add
incb
cmpsl
add
out
add
jge
add
pop
lea
lcall
rclb
sbb
test
push
scas
sub
push
push
call
xchg
cld
add
add
jl
repnz
add
add
add
jbe
add
sti
mov
add
mov
jmp
fadds
pop
add
pop
mov
add
pusha
stc
add
or
add
cmpl
je
push
push
push
push
push
lea
push
call
add
roll
out
add
clc
add
add
add
lret
add
add
add
popf
cltd
add
test
add
add
add
mov
sub
pop
cmpl
jne
mov
push
push
push
lea
push
lea
push
push
push
call
mov
push
lahf
xchg
jne
mov
jmp
popl
add
add
jbe
add
loop
add
enter
mov
in
add
addb
jnp
addl
stos
mov
cld
sti
fildl
scas
mov
movsb
sti
gs
xchg
add
add
cli
lea
add
add
push
push
push
call
test
popa
add
mov
data16
add
mov
xchg
scas
add
ljmp
add
int3
xchg
fisubs
add
movb
pop
push
push
push
push
push
call
add
jns
movsl
jbe
mov
jle
fadds
addl
fldl
test
add
add
sahf
mov
roll
add
shr
add
add
icebp
test
fwait
add
nop
pop
test
jmp
jle
add
add
xchg
pop
cwtl
add
sub
pop
ret
push
push
xor
push
push
pop
add
not
inc
lea
sub
dec
inc
xor
pop
add
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
hlt
pop
sahf
push
add
push
mov
les
jecxz
add
mov
mov
scas
fidivrs
pop
mov
filds
pop
jae
push
cmc
stos
add
nop
xchg
int3
add
jmp
in
movsb
add
imul
sub
pop
pushl
push
push
call
add
add
fists
add
pop
pusha
cmpsb
jecxz
add
testb
add
sar
add
add
jmp
add
xchg
add
xchg
mov
fiaddl
xchg
js
sahf
add
lods
cltd
mov
mov
enter
jecxz
lea
std
pop
je
in
clc
lcall
xchg
sub
add
shrb
pusha
int3
cmp
push
pop
add
add
rol
sub
shr
not
dec
sub
pop
xor
pop
push
sub
pop
pushl
call
push
push
call
add
add
add
mov
mov
in
mov
mov
add
stos
icebp
sarl
add
lret
jl
cmpsl
test
jecxz
add
add
pop
lock
scas
add
jno
mov
add
shrb
mov
push
push
add
inc
push
or
not
add
rol
rol
sub
lea
sub
pop
dec
pop
push
push
push
push
push
push
push
push
call
rolb
hlt
fiadds
add
add
test
add
fsub
lcall
mov
add
mov
mov
add
jle
loopne
jne
add
addr16
call
lcall
jne
call
push
inc
dec
add
pop
call
push
push
rol
shr
dec
push
sub
add
sub
add
add
sub
add
ror
pop
xor
pop
push
push
push
push
push
push
push
push
push
call
xchg
mov
jp
addl
pop
xchg
add
add
scas
add
xlat
insb
out
mov
ljmp
imul
mov
xchg
add
ja
sti
mov
sub
pop
pushl
push
shr
inc
pop
call
push
push
lea
push
push
push
lea
push
lea
push
call
bound
jo
enter
mov
jmp
mov
sbbl
lret
mov
add
ljmp
add
ljmp
add
movsb
out
mov
loop
add
mov
xchg
addr16
mov
pop
call
push
push
sub
sub
ror
push
push
pop
add
sub
sub
rol
shl
pop
sub
pop
push
push
push
lea
push
push
push
push
call
xchg
fwait
add
add
add
add
add
mov
aad
add
out
sub
pop
pushl
push
not
pop
call
call
push
push
shl
dec
push
or
not
add
shl
sub
inc
pop
add
dec
pop
push
xor
sub
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
push
call
add
test
in
mov
mov
jge
testb
gs
lcall
add
add
insb
mov
lds
lcall
pop
and
push
push
add
push
or
not
add
dec
shr
sub
dec
sub
inc
shr
xor
pop
sub
pop
push
push
call
add
enter
fsin
jo
add
add
add
sub
xlat
std
add
stos
mulb
addr16
popa
mov
add
add
xchg
add
add
add
add
pop
mov
ljmp
lcall
jne
push
not
shl
lea
shl
pop
call
push
push
call
popa
add
add
add
jp
rcr
add
out
add
mov
in
xchg
add
add
iret
add
popa
sub
pop
call
push
push
dec
not
push
push
pop
add
ror
ror
sub
ror
inc
ror
pop
not
pop
push
sub
ror
lea
add
pop
pushl
push
lea
push
call
in
add
cmpsl
cmpl
add
cmpsb
jp
add
test
xchg
add
add
xchg
mov
addr16
rcrl
add
les
insb
xchg
clc
loope
add
add
add
add
mov
ja
add
cmpsb
add
lcall
out
add
push
push
push
push
push
lea
push
push
push
call
add
add
scas
repnz
mov
mov
add
jmp
add
mov
stc
add
js
lock
jb
test
sahf
aam
jno
in
loopne
call
push
push
xor
shl
push
push
pop
add
ror
rol
sub
add
add
pop
sub
add
pop
push
lea
push
push
push
lea
push
push
push
call
add
xchg
popl
lcall
push
scas
sti
je
xchg
int
in
test
je
add
nop
add
out
add
xlat
mov
clc
roll
mov
in
in
lcall
jne
call
push
push
push
push
push
push
push
push
push
call
jmp
mov
cli
add
add
mov
icebp
leave
add
add
add
je
add
jnp
lret
arpl
movb
add
push
add
cmpsb
push
addr16
add
stos
add
add
xchg
adcb
into
aam
ja
sub
pop
call
push
push
sub
dec
sub
push
or
inc
add
shr
sub
rol
sub
pop
add
not
shr
rol
pop
push
lea
push
push
push
lea
push
call
stos
int
pop
out
test
add
add
fiaddl
lcall
mov
cltd
mov
add
mov
aad
popf
add
xchg
add
repnz
bound
add
jne
push
shr
ror
pop
call
push
pop
lea
push
push
push
push
push
push
call
pop
jmp
loope
add
cmpsb
out
add
out
loop
add
iret
bound
mov
sti
add
add
in
in
call
push
push
lea
push
push
push
push
push
push
push
call
movl
mov
add
jo
mov
mov
subl
je
mov
pop
call
push
push
dec
lea
shr
rol
push
push
pop
add
sub
sub
ror
add
sub
shr
pop
not
sub
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
insb
aam
mov
add
add
add
push
xchg
add
push
add
addb
add
mov
mov
mov
jne
mov
ja
js
xchg
test
enter
mov
pop
pushl
push
lea
push
push
push
push
lea
push
push
lea
push
call
lahf
add
lods
lods
xchg
sti
cltd
lret
cld
xchg
xchg
mov
xchg
jle
add
add
data16
pop
pop
je
add
add
push
mov
into
mov
pusha
test
arpl
les
data16
add
jo
cld
mov
cld
test
call
call
push
push
shl
sub
push
or
not
add
lea
sub
sub
shl
pop
add
shl
sub
sub
pop
push
push
push
push
push
push
push
push
call
add
negb
aad
add
stos
leave
add
imul
cmpsl
scas
lret
mov
notl
push
hlt
xchg
add
add
out
add
add
jno
mov
in
loopne
pushl
push
push
push
call
add
xchg
jl
sahf
mov
push
add
mov
fiaddl
add
stos
add
movsl
mov
add
lret
jb
ret
test
cmc
add
push
add
sbb
push
add
lcall
adc
add
push
shr
rol
shl
pop
call
push
push
sub
push
or
inc
add
not
add
sub
sub
dec
pop
pop
push
add
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
call
add
shrb
data16
add
jmp
push
iret
je
push
push
add
mov
add
add
lock
add
test
mov
arpl
fsubl
lret
hlt
int
add
push
add
push
push
push
push
push
push
push
push
push
call
mov
idivl
add
add
mov
add
aad
rclb
add
add
loop
add
pushf
sub
pop
call
push
push
ror
shr
push
xor
add
sub
ror
sub
sub
pop
ror
add
dec
pop
push
lea
push
push
push
call
add
int3
add
ror
test
test
add
shlb
add
add
gs
pop
mov
in
xchg
addb
add
in
xlat
int3
xchg
add
add
jne
push
push
call
add
add
add
test
jmp
add
shrb
test
add
loop
lods
mov
add
lahf
add
add
fistps
jp
std
insb
jle
add
xchg
aad
mov
pop
movl
sbb
or
add
ror
rol
push
or
inc
add
add
not
sub
dec
pop
dec
rol
xor
ror
pop
push
push
shr
shr
push
sub
add
sub
not
shr
pop
pop
push
push
push
push
push
push
push
call
jp
add
add
loopne
mov
add
mov
arpl
lahf
add
jns
add
push
pop
mov
jo
in
in
lcall
rclb
push
call
jp
js
push
add
cwtl
bound
add
jmp
gs
add
xorl
jns
add
lahf
add
jl
lds
pop
push
push
add
add
mov
add
in
pop
sarb
movsb
jb
mov
popf
sarb
in
hlt
lcall
push
ror
xor
pop
dec
jne
push
push
add
push
and
add
sub
sub
pop
ror
inc
pop
push
shl
shl
pop
pushl
push
push
lea
push
call
add
pop
cmpsl
pop
pop
add
add
add
jge
add
stos
retw
test
add
add
add
jecxz
add
fadds
add
faddl
sti
hlt
lret
add
cmpsb
sbb
add
call
lea
push
push
shr
not
lea
sub
push
or
not
add
add
rol
inc
inc
sub
inc
ror
ror
pop
ror
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
repnz
add
cwtl
test
roll
add
test
ljmp
push
add
add
out
test
clc
sti
popf
xchg
cmpsl
ljmp
fiaddl
add
mov
add
mov
lds
movb
xchg
int
xchg
jmp
hlt
add
add
test
in
fcomps
jne
push
add
pop
call
push
lea
pop
lea
push
push
lea
push
call
cltd
fldt
sahf
add
push
add
mov
add
imul
jge
add
cmc
sbb
mov
mov
stos
xchg
mov
lcall
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
add
add
lock
add
push
add
add
mov
add
jno
add
push
icebp
out
add
jns
add
push
add
into
push
pop
icebp
sub
pop
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
arpl
aam
add
add
jmp
pop
imul
ljmp
add
add
push
or
mov
lock
je
loop
lds
push
out
fwait
jle
jns
mov
mov
negb
xchg
add
arpl
mov
sub
pop
push
pushl
push
push
push
or
not
add
inc
ror
rol
sub
xor
pop
not
not
pop
push
rol
pop
push
push
push
push
push
lea
push
push
call
add
jne
mov
add
mov
add
add
add
add
jo
int
out
cli
les
mov
out
mov
in
call
call
push
add
pop
call
mov
push
lea
push
lea
push
lea
push
push
push
call
xlat
fildl
rcl
mov
test
add
mov
add
add
add
add
fldenv
int
mov
scas
jns
add
scas
cwtl
mov
sub
pop
lea
push
push
xor
rol
push
sub
add
xor
sub
shl
ror
shr
inc
pop
dec
sub
shl
pop
push
ror
add
add
add
pop
pushl
push
inc
pop
call
push
push
push
lea
push
push
call
add
add
jecxz
int
jl
add
push
cmpsb
add
xchg
push
add
lods
add
pushf
fmul
lret
add
add
xchg
neg
add
add
add
add
mov
int3
add
lcall
push
push
lea
push
push
call
pop
pop
jne
ljmp
ret
xchg
imul
cmpsl
clc
pushf
rcll
fcmovne
sub
add
add
mov
xchg
aad
popa
fdivl
add
add
add
flds
lcall
shrb
out
ljmp
xor
add
sub
rol
sub
sub
sub
pop
shr
lea
shr
sub
pop
push
sub
pop
pushl
push
add
shr
shr
lea
pop
call
call
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
xchg
add
add
lahf
add
icebp
les
add
add
gs
rcll
add
add
ljmp
lcall
inc
cld
push
sub
dec
shl
pop
lea
push
push
shl
push
sub
add
rol
inc
rol
dec
sub
shl
sub
add
shr
pop
add
shr
dec
sub
pop
push
dec
rol
shr
dec
pop
pushl
call
push
ror
add
lea
shr
pop
lea
push
push
lea
push
call
jns
cmpsb
mov
out
add
mov
push
test
jl
ja
jge
into
fiadds
stc
mov
fwait
lret
add
add
mov
out
in
add
out
jne
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
loop
pop
jle
hlt
test
add
add
xchg
mov
cld
add
add
out
add
loopne
add
iret
clc
mov
mov
in
fcomps
add
jne
push
push
push
or
inc
add
shr
rol
sub
ror
pop
add
not
pop
push
inc
xor
lea
pop
push
call
push
push
add
sub
push
xor
add
dec
lea
dec
sub
shl
shl
pop
shl
pop
push
dec
pop
pushl
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
imul
call
add
xchg
lds
jl
loope
add
ja
aam
ja
add
add
jl
add
lahf
pop
pop
add
add
incb
mov
call
push
sub
lea
pop
push
call
push
push
shl
push
push
pop
add
add
add
add
sub
sub
pop
inc
shl
shr
not
pop
push
inc
lea
shr
rol
pop
pushl
push
lea
dec
ror
shl
pop
call
push
add
lea
pop
call
push
lea
pop
pushl
mov
push
sub
sub
ror
pop
jmp
push
push
sub
xor
ror
not
push
or
inc
add
not
shr
sub
add
add
dec
pop
add
lea
not
pop
push
push
push
push
push
push
push
push
lea
push
push
call
scas
add
jns
add
iret
mov
add
add
lds
bound
filds
cltd
iret
in
pusha
add
outsl
jns
roll
add
add
add
add
lret
data16
fdivr
mov
jns
jle
subl
les
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
push
call
mov
rolb
add
add
add
add
add
add
add
jo
clc
stos
iret
add
out
pop
add
popa
add
add
push
add
jne
add
push
sub
pop
call
push
lea
pop
push
call
push
push
lea
push
xor
add
dec
sub
dec
shr
not
pop
dec
dec
xor
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
jl
add
fdivrs
mov
pop
add
addl
add
add
out
xchg
mov
jge
add
mov
push
mov
add
xchg
add
std
add
enter
lahf
add
lcall
jne
push
push
push
push
push
push
push
push
lea
push
call
add
add
mov
mov
shr
stos
in
into
add
add
fadds
add
jmp
leave
add
js
sti
add
mov
add
add
mov
add
add
add
xchg
mov
pop
push
add
add
iret
xchg
lock
mov
in
fcompl
sub
add
push
push
push
push
lea
push
push
push
call
add
xor
fists
rclb
add
add
add
add
bound
fiadds
mov
scas
mov
add
add
stos
xchg
jmp
sar
test
add
lods
add
add
test
in
in
push
call
push
lea
push
call
mov
add
cli
aad
mov
add
xchg
add
add
lcall
add
sti
pop
add
add
mov
fs
mov
mov
lods
add
xchg
ja
add
loopne
insb
rcrb
in
clc
lcall
add
push
push
push
push
call
lods
mov
test
mul
add
fcmove
add
add
mov
jbe
test
lock
lcall
push
push
push
call
std
jo
add
xchg
imul
add
mov
jge
js
shll
add
fs
mov
add
nop
add
mov
add
ja
add
pop
add
cld
add
xchg
cltd
lods
add
ret
add
lcall
pop
push
lea
pop
xor
push
push
push
push
call
int3
add
jl
mov
lock
mov
add
push
lret
stc
jecxz
pop
pop
movsb
fildl
in
scas
sahf
fstps
out
ret
cld
add
add
stos
roll
add
jmp
fbld
add
fmul
add
in
lock
inc
push
ror
xor
pop
ret
push
not
dec
pop
leave
push
lea
push
push
push
push
push
call
rorb
add
add
arpl
add
cld
addr16
add
imul
add
lods
aam
add
hlt
ficoml
popa
pop
add
add
add
stos
jns
popa
add
in
xchg
mov
add
fmull
add
add
leave
pop
add
bound
movl
ret
push
push
shl
pop
mov
push
ror
xor
not
pop
cmpl
jne
mov
push
sub
shl
pop
jmp
push
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
mov
xlat
int
mov
mov
push
add
add
in
mov
xchg
add
in
mov
in
loopne
and
push
push
push
call
andl
jo
push
jno
add
add
js
add
fldenv
std
mov
add
testb
cmc
add
popl
imul
jno
add
ret
push
add
add
movb
fiaddl
sub
pop
xor
push
add
inc
sub
pop
xor
add
push
shr
pop
xor
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
in
add
shll
mov
pop
jecxz
push
mov
add
add
add
pop
add
rcll
sbbb
pop
mov
cld
add
ficoml
xchg
fadds
add
js
jno
add
mull
insb
sub
pop
dec
sub
push
lea
push
push
call
fwait
cwtl
fiadds
add
arpl
lret
mov
loope
mov
cli
out
lods
add
fildl
nop
jecxz
scas
loope
add
out
popa
add
lret
add
add
mov
data16
add
jle
add
pop
js
call
mov
jbe
imul
add
lcall
cmc
add
add
inc
bound
fsts
test
hlt
xor
call
add
fs
xchg
add
add
mov
testb
mov
add
add
lods
add
add
testl
mov
xchg
in
lock
add
add
lahf
add
in
add
add
jmp
icebp
shr
add
jns
add
imul
jae
lods
sub
pop
sub
push
push
push
call
out
int3
add
add
mov
add
hlt
test
add
leave
add
enter
roll
mov
add
cld
cli
mov
je
in
lret
add
add
stos
lea
add
ror
push
add
add
repnz
cld
add
add
rcr
add
in
jno
leave
mov
mov
add
add
sub
pop
pushl
pop
push
add
dec
pop
sub
cmp
jne
push
push
push
push
push
push
push
lea
push
push
call
test
xchg
pop
add
add
add
out
mov
mov
movsb
rcll
ljmp
aam
mov
push
jo
xchg
mov
add
lcall
enter
mov
addb
out
push
lea
push
push
push
call
in
jmp
add
add
mov
add
mov
int
into
xchg
into
repnz
xchg
add
add
add
add
popa
mov
add
add
lea
xchg
stos
arpl
pop
outsl
add
insb
js
add
sub
pop
lea
sub
push
sub
inc
pop
mov
push
push
push
lea
push
lea
push
push
call
add
add
in
push
jl
rcrb
add
add
ljmp
add
jge
add
add
add
out
jno
outsl
imul
addl
xchg
mov
add
mov
xchg
add
pop
add
mov
lock
jmp
push
push
lea
push
call
push
out
add
add
add
add
add
add
add
in
xchg
ret
add
xchg
jmp
add
roll
mov
jl
pop
nop
add
mov
cltd
stos
mov
movsl
xchg
add
add
lahf
add
mov
add
lcall
jmp
lea
push
push
call
xchg
add
jmp
shll
pop
mov
pop
lods
lret
add
cmpb
loope
std
ljmp
pop
bound
lcall
cwtl
add
add
add
loope
mov
mov
in
lock
pushl
pop
push
add
sub
shr
pop
shr
push
push
push
lea
push
push
push
call
rolb
add
js
aam
mov
add
lahf
cwtl
add
lods
add
mov
xchg
faddl
mov
outsl
popa
ret
ja
int3
mov
push
add
xchg
xchg
xchg
jne
jl
sub
pop
and
sub
push
lea
push
call
add
add
pop
arpl
mov
mov
cwtl
iret
mov
mov
lods
add
xchg
lods
add
hlt
add
jae
add
xchg
imul
add
add
add
add
test
add
add
stos
add
add
jno
mov
mov
call
sub
pop
cmp
jne
leave
push
lea
push
push
push
push
push
push
call
add
ficoml
jne
lahf
pop
add
add
push
je
mov
add
out
cltd
add
pusha
add
add
add
lcall
add
push
lea
push
push
push
lea
push
call
mov
jno
je
roll
mov
add
add
add
push
add
mov
mov
add
mov
in
in
pop
push
mov
push
inc
pop
add
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
imul
push
add
movsl
pop
mov
add
out
mov
add
mov
sarl
add
lcall
push
push
push
push
push
lea
push
push
call
out
jp
add
testl
mov
push
add
add
jnp
repnz
addb
fmul
clc
fadd
scas
sti
enter
add
mov
loop
into
add
mov
sub
pop
push
push
push
push
push
push
call
scas
mov
cmpsl
outsl
add
jp
fistpll
addr16
add
add
enter
xchg
call
pop
jmp
push
add
add
add
mov
pop
push
push
pop
mov
push
sub
pop
lea
push
lea
sub
add
pop
sub
push
dec
pop
mov
shr
push
add
xor
add
pop
add
push
lea
push
push
push
call
fdivrl
hlt
xlat
add
mov
add
push
mov
loop
jbe
add
jmp
loope
add
jl
int3
add
test
add
add
test
push
stos
add
add
add
add
cmpsb
pop
add
add
lock
js
cwtl
call
lock
lcall
fwait
addb
add
pop
or
pushf
sub
mov
push
push
push
call
stos
imul
add
add
xchg
lods
mov
in
add
xchg
stos
aad
jns
add
gs
sarl
je
add
add
in
xlat
bound
add
add
ret
push
jo
add
xchg
push
shlb
mov
movl
dec
add
pop
add
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
add
repnz
pop
xchg
add
in
repnz
roll
add
hlt
jno
pusha
movsb
mov
add
imul
ja
ljmp
lahf
jmp
add
mov
sub
pop
xor
push
pop
mov
and
push
xor
add
lea
pop
rol
push
lea
push
push
call
lcall
in
hlt
jp
iret
sbb
hlt
mov
push
add
jge
lret
add
fwait
roll
add
ret
pop
add
add
addl
lds
add
fldl
jle
cmc
xorb
sub
pop
rol
xor
push
push
lea
push
push
push
push
push
push
push
lea
push
call
sti
fwait
xchg
adcb
add
mov
push
add
add
add
je
push
aad
push
je
fwait
add
arpl
test
leave
add
lcall
push
shr
sub
shr
shr
pop
cmpb
jne
push
inc
shl
xor
pop
add
cmp
je
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
test
add
lahf
roll
lret
add
cwtl
add
push
rolb
mov
add
fstps
roll
stos
int3
add
mov
add
add
sub
pop
add
push
push
push
push
push
push
push
push
call
fimull
loop
pop
sahf
add
icebp
std
movsl
orb
mov
testl
add
lahf
icebp
add
xorb
out
loopne
push
mov
popf
xchg
call
mov
add
lahf
cmpsl
bound
push
imul
lcall
jnp
add
test
or
incl
push
push
call
mov
outsl
add
pop
pop
into
shll
push
add
cmpsl
push
push
loope
adcl
mov
jp
xchg
std
loope
add
pop
xor
push
xor
not
pop
pop
push
sub
not
shl
add
pop
pop
pop
push
rol
pop
pop
push
push
push
push
push
push
push
push
push
push
call
hlt
jp
push
mov
add
js
ja
int
add
js
add
add
data16
add
jge
data16
icebp
mov
xchg
add
add
ljmp
aad
std
add
orl
pusha
add
add
add
test
call
sub
pop
pop
push
shr
pop
leave
ret
push
shl
pop
mov
add
push
shr
shl
pop
mov
pushl
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
lret
iret
add
sti
repnz
mov
xlat
add
mov
sbbb
into
pushf
xchg
shll
add
enter
popa
int
shll
stos
xchg
add
loope
push
add
data16
movl
fdivr
lcall
les
push
push
push
call
hlt
add
scas
add
add
mov
js
add
lret
push
mov
fidivl
mov
loopne
add
add
addb
mov
add
jecxz
add
jmp
jmp
andb
lahf
lcall
jbe
add
add
int
in
lock
lcall
push
push
lea
push
push
push
call
push
icebp
mov
pop
pop
xchg
lcall
mov
xchg
add
mov
ret
add
rolb
add
add
outsl
roll
pop
lea
add
add
in
in
in
lcall
imul
call
lea
push
push
push
push
lea
push
call
add
add
push
add
ret
mov
into
push
add
add
mov
add
mov
in
add
add
add
mov
sub
pop
xor
push
push
push
lea
push
push
push
lea
push
push
call
jle
aam
jo
jl
add
add
push
add
rolb
call
xchg
sbbl
in
loopne
pop
pop
push
push
push
push
push
push
push
call
add
add
add
in
aad
adc
add
shll
fistpl
popa
add
add
pop
cmpsb
jns
mov
xchg
add
pop
out
add
add
jmp
out
add
xchg
jae
lcall
mov
jecxz
cmpsb
imul
jl
test
mov
in
mov
pop
push
push
push
push
push
lea
push
push
lea
push
call
pop
pop
add
pushf
addr16
jno
imul
mov
add
add
je
add
add
jae
mov
mov
in
enter
iret
add
add
add
out
add
loopne
pop
push
lea
push
push
push
lea
push
call
add
add
add
jp
test
add
popf
add
scas
lret
ret
in
jle
lock
ret
add
aam
add
cld
lea
push
pop
pop
push
sub
pop
leave
push
inc
not
pop
ret
push
push
call
add
pop
movsb
add
addb
mov
rolb
add
add
add
pushf
pop
add
mov
outsl
loop
jge
data16
add
arpl
ret
xchg
add
loope
add
add
lcall
push
xor
pop
mov
add
push
sub
lea
inc
pop
push
push
shl
sub
sub
pop
push
push
push
push
push
push
push
lea
push
call
add
add
popf
add
xlat
pusha
add
pop
add
add
add
enter
aam
mov
push
mov
add
add
xchg
enter
pop
add
mov
mov
add
add
bnd
jns
mov
xchg
lock
sub
pop
push
push
push
push
call
std
xchg
add
leave
add
add
add
add
jbe
xchg
loopne
mov
add
call
mov
in
add
add
lds
mov
add
mov
fiaddl
pop
mov
add
mov
lods
movl
addr16
rolb
or
sub
push
push
push
push
push
lea
push
push
call
add
add
mov
rcl
out
fsubr
add
std
repnz
leave
push
bound
add
add
lcall
pop
push
xor
shl
xor
xor
pop
lea
sub
push
push
push
push
push
push
call
mov
sti
push
mov
add
mov
pop
add
add
push
mov
push
add
add
imul
add
add
fbld
mov
in
add
add
mov
int
sahf
iret
xchg
add
sub
pop
mov
push
inc
sub
pop
shr
push
shl
add
ror
pop
add
mov
push
lea
xor
sub
pop
add
push
shl
pop
pushl
push
push
call
add
js
scas
mov
push
add
add
xchg
add
mov
add
sar
add
add
xchg
fwait
sti
add
add
add
add
jo
mov
add
add
xchg
aam
lods
jp
cmpsl
add
add
cltd
enter
iret
leave
add
clc
lcall
inc
clc
push
push
push
push
lea
push
lea
push
push
push
call
nop
add
add
mov
add
mov
jmp
xchg
add
and
add
loope
popa
push
mov
lahf
pop
add
mov
xchg
loope
mov
loop
int
fstps
add
lcall
jnp
push
xor
pop
add
xor
push
pop
lea
mov
push
lea
add
pop
add
push
add
pop
xor
push
lea
push
push
push
push
push
push
push
call
add
pop
aad
add
xor
add
add
icebp
add
mov
shll
aam
pop
mov
lahf
icebp
mov
in
loopne
lcall
rolb
push
push
push
lea
push
push
call
mov
loop
add
add
lds
mov
mov
ret
add
jns
cmc
pushf
jge
leave
push
pushf
add
fs
add
add
cwtl
mov
mov
mov
jo
add
int
add
mov
add
add
xchg
sub
pop
nop
push
push
lea
push
lea
push
call
pop
leave
xchg
lods
add
data16
add
add
cli
out
mov
add
imul
add
add
lret
aam
lcall
lahf
add
aad
outsl
mov
add
lcall
add
pop
nop
push
rol
sub
shl
pop
inc
nop
push
not
pop
nop
push
add
not
pop
cmpb
jne
push
push
push
push
push
push
push
lea
push
call
fistpll
add
push
add
mov
xchg
lods
add
xchg
mov
mov
les
faddl
add
push
out
mov
add
add
cmpsl
ret
mov
cmpsl
jl
lcall
sub
pop
add
push
push
lea
push
push
call
add
add
mov
gs
xchg
add
pushf
subb
add
add
imul
add
push
push
pusha
test
add
sti
je
popa
add
sub
pop
nop
push
push
call
ret
leave
movsl
add
add
idivl
jno
add
addb
xchg
std
pop
add
pusha
add
insb
nop
add
addr16
xchg
mov
sub
pop
nop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
jns
fistpl
add
fidivs
mov
icebp
mov
into
fdivrs
add
test
aad
mov
mov
mov
jne
add
incb
icebp
xchg
lods
jae
add
fiaddl
xchg
stos
push
push
loope
add
ror
movb
add
aad
in
fcomps
inc
or
test
add
push
shr
dec
add
pop
nop
nop
push
push
push
lea
push
push
push
call
add
rolb
popa
add
jle
add
nop
mov
ljmp
add
jecxz
roll
add
push
jae
mov
jae
jns
add
jbe
cli
add
lahf
add
add
popf
cltd
leave
add
in
add
mov
je
mov
lcall
push
shr
inc
not
pop
nop
push
not
shr
pop
nop
push
sub
xor
pop
cmp
jb
push
push
lea
push
push
push
push
push
push
call
loopne
add
icebp
xchg
int3
lret
add
jno
add
lods
push
ja
add
add
add
add
mov
xchg
addl
faddl
add
mov
add
jmp
fidivrl
sub
pop
xor
jmp
push
push
call
fldl
add
lea
jns
jo
loope
jns
jno
loope
arpl
add
xchg
fsts
data16
loope
fadds
add
mov
lret
sub
pop
mov
push
pop
add
push
push
push
push
push
push
call
mov
icebp
add
clc
lret
add
rcrb
enter
cmpsb
add
add
popf
add
add
icebp
add
mov
add
add
pop
jb
clc
mov
add
add
jl
add
add
test
in
in
call
jb
lea
lea
pop
mov
push
add
pop
add
mov
push
shl
inc
inc
pop
xor
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
ljmp
icebp
cwtl
test
cli
rolb
lea
icebp
add
add
add
test
mov
fucom
add
add
lcall
add
jae
jl
add
add
in
fcompl
dec
nop
add
mov
inc
sahf
inc
add
sub
pop
shl
push
push
push
push
push
lea
push
call
jmp
add
jle
add
add
add
add
add
add
add
lahf
in
mov
fistpl
add
fisubs
mov
add
mov
movl
loopne
add
sub
pop
xor
push
sub
pop
shl
push
add
pop
xor
push
push
push
push
push
push
push
call
add
pop
movsb
add
add
nop
add
add
addb
mov
je
xchg
jle
test
leave
add
add
add
fisttps
add
lods
add
add
add
in
in
lcall
loope
push
add
pop
xor
mov
push
shl
pop
add
push
add
not
inc
pop
pop
push
sub
pop
pop
push
add
shr
rol
pop
pop
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
testb
mov
add
add
mov
insb
add
jae
add
add
jp
xchg
mov
fsubp
sub
pop
leave
push
push
push
push
push
call
jl
mov
add
mov
add
jl
add
add
add
int
out
add
nop
lods
lret
mov
xchg
jae
pop
mov
out
add
movsb
add
add
rolb
jnp
jo
push
out
out
mov
int
cld
mov
add
test
add
cld
mov
in
lcall
or
push
push
sub
shl
xor
pop
mov
push
push
push
push
push
push
push
push
call
repnz
nop
mov
add
add
add
add
out
pop
std
into
out
xchg
clc
mov
add
add
push
add
cwtl
imul
push
jno
lahf
push
push
xchg
jecxz
loop
incb
add
faddl
add
cmpsb
movl
cld
test
in
loopne
lcall
push
push
push
call
movsb
jne
add
jns
in
stos
scas
add
add
in
inc
je
add
popa
pop
jmp
add
int3
add
add
addr16
add
push
add
mov
add
add
in
hlt
pop
push
push
push
push
push
push
push
call
fcmove
lret
add
call
add
ja
je
xchg
jae
add
add
add
add
pop
hlt
mov
add
add
data16
sub
pop
push
mov
push
lea
dec
sub
ror
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
test
add
add
int
cmpsl
add
movsb
add
xchg
add
jmp
lea
fstps
xchg
stos
out
add
ror
add
add
addb
add
in
fdivr
lcall
jge
test
je
push
sub
sub
pop
mov
test
je
push
push
push
push
push
call
add
mov
add
add
add
cmpsb
int3
add
popa
jp
data16
movsl
cmp
lcall
add
test
add
push
jp
cli
jb
add
add
popa
add
push
mov
add
lcall
testl
push
call
mov
out
xchg
add
jmp
add
loop
faddl
add
add
std
lahf
xchg
add
jns
add
stc
mov
mul
add
add
pushf
test
xchg
mov
imul
clc
lcall
rorb
test
rorb
jge
add
push
sub
pop
mov
push
push
push
push
call
add
popf
popf
add
out
in
mov
add
add
add
into
test
test
add
addl
xchg
add
jecxz
cwtl
lock
loope
add
pop
hlt
shrb
lods
xchg
add
jp
loopne
scas
lds
in
lock
inc
push
sub
pop
cmp
je
push
dec
pop
test
jne
xor
push
ror
add
add
pop
pop
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
shrb
add
mov
roll
add
jo
mov
jmp
rcll
add
fcoms
add
push
push
lea
push
push
push
call
rol
shrb
jne
mov
add
mov
pushf
cli
jo
add
scas
int3
jno
mov
scas
pop
fcoms
xchg
mov
popf
xchg
scas
push
add
aam
add
scas
add
lret
mov
xchg
or
add
jbe
int
aam
add
lcall
push
push
lea
push
push
lea
push
push
lea
push
call
movsl
mov
pop
cmpsl
movsb
add
add
push
std
pop
mov
add
addr16
movsl
pushf
pop
jl
add
hlt
int3
push
add
add
add
int3
xchg
stos
jbe
mov
loopne
add
roll
mov
add
jae
in
in
lcall
push
dec
add
ror
pop
leave
push
xor
pop
ret
push
push
push
push
push
lea
push
lea
push
call
add
imul
push
jge
cmc
les
cmc
add
icebp
mov
icebp
sub
pop
mov
push
add
sub
pop
inc
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
shl
xchg
push
fisttps
jge
cwtl
add
add
add
add
add
add
lahf
mov
push
icebp
add
cwtl
pop
add
movsb
fldl
test
add
in
jecxz
xchg
add
xchg
mov
add
mov
xchg
jp
cmc
add
add
movsl
icebp
add
loopne
nop
cld
add
roll
mov
lcall
lock
push
not
dec
lea
pop
lea
mov
push
push
push
push
call
pop
add
add
bound
sti
add
add
add
mov
fildl
scas
add
out
add
add
stc
cmpsl
add
add
clc
bound
add
add
pop
loopne
add
aam
add
add
sub
pop
test
je
push
add
add
pop
mov
add
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
lods
icebp
add
ja
out
mov
movsb
pop
add
add
fcmovne
mov
mov
in
fcompl
loopne
test
sti
call
out
aas
not
rol
pop
mov
push
pop
test
je
push
sub
sub
sub
dec
pop
mov
push
shr
inc
shr
pop
add
cmp
je
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
leave
fwait
mov
add
add
add
ljmp
sahf
add
add
push
ror
cmpsb
add
insb
orb
fcompl
xor
call
ret
psrlw
aad
xor
push
push
push
push
lea
push
call
add
pop
add
add
add
lock
pop
add
in
add
mov
lods
jnp
fldlg2
lcall
filds
hlt
fildll
leave
add
pop
jb
and
in
sub
pop
pop
pop
push
lea
push
push
push
push
call
aam
add
mov
add
add
mov
xchg
add
mov
into
out
add
add
add
fldl
add
xchg
add
add
pop
mov
fsubrl
add
jae
in
in
pop
pop
push
push
call
fs
add
pushf
movsl
icebp
add
repnz
mov
mov
cmpsl
sub
clc
ljmp
popa
add
jle
add
ret
fs
out
pop
movb
ret
add
add
add
out
push
imul
jne
jecxz
cmc
xchg
add
leave
push
sub
inc
dec
pop
ret
push
push
lea
push
push
lea
push
call
pop
mov
mov
jl
add
add
faddl
fildl
pop
fwait
ret
jne
add
jl
lds
push
add
add
imul
in
add
testl
add
add
lcall
out
add
movl
push
les
cmc
mov
lahf
add
add
in
in
lcall
inc
lcall
push
push
push
push
push
push
call
ljmp
add
arpl
add
test
add
add
jnp
add
xchg
add
mov
add
push
add
push
add
cld
push
clc
je
mov
icebp
ret
jno
cmc
add
out
movsb
clc
mov
add
pusha
cmpsb
add
lcall
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
lods
jne
add
test
add
vpunpcklbw
test
stc
pop
add
mov
add
lahf
add
add
pop
sar
add
xchg
mov
in
fcomps
leave
push
sub
add
shr
pop
ret
push
shr
rol
sub
pop
mov
push
lea
push
push
push
push
call
test
loope
add
movsb
cwtl
add
add
lods
jno
add
mov
movsl
in
lock
hlt
xchg
fldl
add
add
arpl
xacquire
add
enter
aam
add
rolb
jge
mov
add
add
add
rolb
lcall
push
push
push
push
call
add
add
mov
lods
movsb
add
add
imul
add
add
add
add
enter
icebp
xchg
push
mov
add
add
add
mov
add
mov
xchg
in
add
add
out
add
shl
add
mov
add
pop
pop
push
lea
push
push
call
add
ficoms
add
pop
add
add
push
out
enter
addl
mov
add
add
ja
hlt
push
add
jnp
ljmp
add
pop
sub
pop
pop
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
pushf
jbe
shrb
jo
loope
add
add
movsl
push
lds
add
movl
add
into
add
cwtl
add
sti
jo
add
add
add
push
lea
push
push
push
push
call
fwait
xlat
add
add
data16
add
add
int3
rcrb
push
add
incb
aad
add
pop
add
lret
mov
push
add
fwait
lock
mov
imul
add
mov
push
into
rclb
into
and
jp
movsl
out
mov
pop
ret
out
jl
iret
out
jl
iret
ds
iret
iret
out
lods
lret
iret
out
lods
iret
iret
sbb
iret
iret
dec
iret
iret
out
fmul
iret
out
iret
iret
iret
xchg
add
iret
divl
xchg
mov
sbb
cltd
sub
sbb
jb
rorb
insl
jle
ror
sti
jg
pop
leave
xchg
xor
jle
shll
jmp
pop
adc
add
mov
ficoml
inc
in
or
mov
jmp
cmpsb
stc
xchg
rorb
cmc
stc
popf
inc
mov
loopne
aam
into
cmp
adc
xchg
imul
mov
shlb
in
xchg
inc
not
mov
sub
mov
sti
sti
add
push
jae
xchg
xor
xchg
stc
sti
and
shr
jecxz
pop
mov
mov
out
lret
xor
lea
mov
jecxz
jge
pop
pop
and
arpl
loope
sbb
bound
out
mov
pop
dec
mov
inc
movsl
jecxz
shl
lcall
pushf
jp
mov
jecxz
inc
mov
push
or
xor
sub
pop
lods
lret
xlat
xchg
jnp
cmp
cmp
insb
jae
xor
lock
add
pusha
jl
cmpsb
sub
pop
mov
sahf
inc
and
mov
xor
repnz
fcom
pop
nop
push
repz
mov
sub
or
lcall
aad
cmp
popf
mov
stc
or
push
jno
push
in
push
and
dec
xchg
sub
jecxz
bound
push
sbb
jle
ja
std
xlat
mov
sbb
ret
into
or
pushf
or
push
call
es
decb
icebp
data16
jbe
out
or
cmp
and
aad
push
in
cli
hlt
fmull
ds
ljmp
mov
test
fwait
sub
idivl
or
enter
pushw
push
xchg
lcall
popl
std
dec
or
ljmp
push
lods
inc
xchg
pop
repz
ss
mov
fs
fildl
jge
lods
rol
pop
fistpl
outsl
int3
pusha
mov
idivb
jecxz
inc
jnp
ficoms
fisubl
cmc
inc
mov
pop
lret
and
aas
xchg
addr16
into
sub
pop
sub
aaa
jp
stc
xor
mov
mov
imul
fbstp
jecxz
in
outsl
roll
push
outsb
fildl
sub
sahf
jns
xchg
sbb
sbb
push
psubsw
adc
xchg
dec
pop
jl
push
cltd
cmp
test
mov
sbb
and
inc
inc
in
cs
scas
sub
pop
insb
paddusb
cld
or
xchg
idiv
rclb
inc
ss
leave
sbb
push
sbb
and
xor
sbb
mov
insb
gs
push
mov
jmp
mov
mov
dec
ss
insb
repnz
inc
jbe
push
movsb
in
xchg
jp
into
movsb
lods
sub
mov
add
mov
fisubs
fisttpll
or
mov
negb
addl
loopne
ret
test
ret
in
push
mov
adc
insl
movsb
sbbb
and
test
push
push
pusha
je
adc
pop
cmpsb
inc
mov
stos
fwait
pop
test
inc
out
aas
jns
pushf
xor
add
pop
jmp
insb
outsl
dec
adc
test
cmpsl
mul
mov
ds
inc
loopne
pusha
je
jns
hlt
lretw
aad
repnz
ljmp
in
lret
mov
push
daa
aam
outsl
push
aad
stos
jno
cmpsb
pop
adc
mov
in
cmp
leave
dec
sbb
add
int3
fsubrp
mov
stos
pop
mov
test
adc
adc
and
pop
repz
push
testb
paddq
rorl
outsl
stos
bound
dec
roll
sub
fidivrs
add
enter
sbb
dec
pop
test
stos
mov
movsl
pusha
cmp
ficomps
insl
xor
jge
cwtl
lret
enter
and
popa
adc
jb
xor
adc
ret
ficoml
add
inc
sbb
sbb
clc
mov
imul
xchg
sub
mov
push
aad
enter
call
dec
movsb
pop
cmp
push
pusha
nop
mov
sub
and
lea
xchg
xor
adc
mov
pop
les
lret
sub
mov
ss
mov
dec
mov
sub
mov
in
xor
aas
jmp
sub
aam
addb
jl
fmull
xor
mov
xchg
jmp
dec
dec
frstor
pop
mov
mov
fimuls
es
test
jnp
or
aad
cwtl
xchg
mov
mov
inc
jbe
fcoml
in
aam
dec
imul
std
sbb
imul
mov
shl
inc
inc
mov
or
insl
sbb
push
jo
ret
popa
cs
in
mov
les
jmp
gs
sti
pop
jne
inc
sub
daa
inc
loope
mov
stos
scas
and
bound
lds
ds
jmp
xchg
rorb
or
idiv
inc
or
mov
or
mov
in
inc
xor
imul
movsb
pop
test
iret
jp
push
or
das
cmp
mov
dec
lret
dec
pusha
mov
ss
pop
dec
mov
cltd
xchg
dec
jo
lcall
aaa
pop
loop
mov
test
and
inc
and
call
ret
add
repz
insl
jl
pxor
add
cmp
shl
mov
dec
enter
out
xor
iret
movsb
icebp
leave
shrl
sub
aad
fisubs
fisubs
jno
dec
notl
mov
inc
sarb
icebp
adc
shrb
mov
test
or
mov
clc
pushf
push
addb
xchg
aaa
pusha
das
ret
push
outsl
jo
mov
mov
shr
rcrb
insl
call
rcr
mov
fisttps
and
lock
mov
xchg
out
movsl
pop
dec
mov
aam
js
in
repz
push
jnp
icebp
xor
add
mov
mov
sub
mov
sbbb
adc
fsub
add
mov
dec
loope
mov
lods
sbb
jno
sbb
push
in
cld
mov
push
lds
push
add
jle
popa
jae
popa
scas
jns
out
jg
mov
xchg
xor
jo
xlat
stc
cmp
push
mov
rcl
pop
in
fisubl
bound
ds
sub
mov
mov
mov
push
lds
xchg
fmulp
or
mov
cmpl
cltd
leave
inc
aam
or
fwait
add
inc
rclb
adc
aad
push
es
repnz
jne
add
or
mov
shl
fistpl
adc
stos
or
sub
sub
jns
outsl
movsb
stos
and
out
enter
adc
xchg
xorb
dec
xchg
xchg
pop
or
dec
adc
inc
arpl
into
and
clc
inc
std
and
icebp
scas
scas
js
ss
or
das
dec
dec
sbb
xor
adc
pop
cmp
jecxz
mov
pop
pop
pop
push
fistl
xchg
fs
sbb
aam
test
arpl
sbbb
sbb
add
mov
outsl
or
jecxz
pop
cmp
pop
pusha
jl
xor
in
cmp
xchg
daa
popw
and
hlt
jp
mov
add
push
cld
and
dec
xlat
mov
jae
jnp
lods
push
test
sub
or
jmp
test
sti
int
jnp
pop
cmp
dec
lret
xor
jp
adc
push
pop
inc
push
xchg
insl
sub
inc
jl
xor
repnz
mov
rol
xchg
repz
push
adc
hlt
mov
sbb
movsb
cld
ljmp
jb,pt
in
push
push
test
lock
cmpsl
lea
cmp
cmp
bound
mov
fnsave
mov
in
cmpsl
adc
and
jne
jp
pop
jecxz
mov
fsubrs
mov
imul
jae
clc
jbe
ljmp
shrb
cwtl
dec
and
rolb
lods
add
pop
sahf
jne
xchg
stc
cs
fwait
mov
movsl
xchg
fldl
pop
pop
xlat
cld
push
xchg
cmc
call
out
add
and
or
mov
xor
jge
mov
and
mov
cwtl
sbb
adc
inc
or
dec
pusha
mov
sub
lea
insb
mov
dec
pop
jecxz
inc
inc
popa
mov
dec
lds
shl
jge
sahf
add
idivl
inc
xchg
xchg
or
test
pop
adc
jmp
lds
test
pop
fidivl
mov
sbb
mov
stc
mov
inc
push
mov
push
adc
adc
mov
loope
call
mov
movsl
ljmp
jns
push
sbb
fstp
out
mov
ficomps
int
or
outsb
bt
cwtl
add
jmp
xchg
cmp
xchg
popa
aam
pop
or
clc
mov
popa
popf
mov
dec
pop
inc
call
mov
bound
nop
lds
outsb
adc
xor
dec
gs
push
outsl
enter
and
cmp
xchg
pop
or
or
ds
jb
cmpsb
fs
jb
bound
or
das
test
cltd
into
xchg
jg
outsl
popa
subl
dec
xor
imull
adc
push
dec
xchg
mov
push
mov
mov
mov
or
dec
jo
jl
sbb
mov
xlat
movl
test
cbtw
ffreep
mov
push
or
push
jns
sti
sbb
mov
out
push
out
jg
cwtl
loope
call
and
sbb
sbb
lret
adc
lret
or
cmpsl
fldcw
les
pop
xchg
sub
pop
loope
in
cltd
pop
enter
loop
adc
call
cwtl
ds
ret
jne
jnp
jmp
mov
outsb
fwait
leave
dec
or
xchg
shll
cli
ljmp
mov
rcl
mov
mov
icebp
and
mov
or
jae
sub
sti
popa
jnp
addr16
ja
pusha
imul
cld
or
mov
sub
xchg
shrb
in
imul
dec
ret
imul
dec
aad
add
mov
out
jmp
push
ret
test
mov
int
in
add
push
arpl
or
sbb
xchg
and
cmp
sar
cli
dec
lds
std
jl
sti
cs
sbb
fiadds
ret
mov
js
xchg
hlt
shr
mov
loope
sub
pop
xchg
cmp
mov
jns
sti
insl
nop
mov
jb
inc
mov
cmp
mov
pushf
push
xor
adc
dec
stos
incl
sbb
adc
enter
fsubs
das
jmp
in
push
cmp
push
test
adc
mov
popf
inc
rcrb
cmp
mov
loope
lcall
jnp
fwait
das
in
sub
divl
loopne
test
cmp
pop
push
sbb
or
inc
mov
test
clc
xor
cmpsl
pushf
scas
in
pop
mov
add
push
jle
insb
and
outsl
in
js
mov
ljmp
stos
jp
xor
fcoml
sub
daa
adc
repz
ficoms
cmpsb
ficoml
call
and
sub
pop
inc
daa
sbb
addr16
mov
sub
mov
mov
loope
fcomi
add
cld
outsl
and
sub
add
imul
cs
push
fdivl
xchg
cmpsl
inc
inc
mov
jne
fldl
jecxz
imul
pop
frstor
out
je
dec
jmp
inc
adc
mov
out
pop
addr16
jle
test
test
icebp
push
fsubrp
shl
sub
xchg
hlt
or
cli
pop
sub
mov
sbb
cmpsb
pop
mov
insb
lahf
push
mov
fs
push
test
push
fs
push
std
mov
imul
mov
ret
les
adc
and
jne
sub
cmp
bound
or
jnp
stc
cmc
sub
idivl
sbb
int3
adcb
enter
popf
adc
adc
orl
cmp
fists
cmp
inc
roll
push
mov
xchg
push
xor
push
add
in
sbbl
pusha
in
mov
in
leave
add
mov
mov
push
dec
test
or
xlat
mov
and
fcmovnb
ja
popa
xchg
ja
hlt
gs
clc
xchg
sbb
xchg
jmp
push
mov
pop
add
push
in
mov
ss
mov
cmp
inc
ret
mov
addl
push
in
pop
cmc
cmpsl
fwait
jge
or
cmp
pop
stos
inc
fsubs
jmp
fstps
xor
push
dec
mov
push
push
aad
cltd
and
sbb
imul
sbb
xchg
movsl
mov
scas
sti
or
fdivs
gs
stos
pop
daa
sahf
jp
ja
xor
in
dec
rcrl
mov
addb
pop
mov
int3
lcall
ljmp
jbe
jnp
jnp
pop
lods
jge
sti
lock
ds
add
scas
xor
aas
js
or
mov
jae
dec
mov
popf
push
push
test
lods
mov
cld
mov
mov
push
sub
sub
pop
mov
aaa
lret
push
mov
mov
fstl
lea
lcall
js
shll
aaa
jo
int
lahf
dec
sbb
mov
ja
sbb
mov
mov
push
jns
sub
mov
lcall
sbb
fldenv
jle
xor
fcomp
pop
cmp
mov
adc
xchg
mov
mov
push
dec
minps
push
sbb
dec
lods
mov
pusha
jg
pushl
add
lahf
inc
and
sbb
mov
cmp
xor
xor
lcall
dec
in
sbb
fs
cld
add
repnz
push
das
sub
inc
btc
incb
add
jg
pop
dec
loop
xor
sub
push
xor
push
sahf
fiadds
in
push
orl
in
mov
lock
xor
dec
mov
inc
lahf
jg
jmp
div
test
mov
mov
stos
pop
test
push
sbb
mov
inc
movsl
iret
fstps
xor
shrb
int3
lret
cmp
xor
cli
jbe
ja
je
push
push
mov
lods
push
cmp
outsl
pop
sub
jo
test
push
in
inc
push
insl
jge
pop
lods
xchg
or
push
push
js
arpl
add
dec
mov
aaa
mov
andl
inc
mov
inc
les
test
mov
std
imul
sbb
mov
out
adc
adc
jle
adc
fildll
sbb
inc
mov
mov
adc
dec
mov
jle
xor
adc
add
std
test
cmp
inc
movsl
pop
mov
lret
or
movsl
rcrb
push
add
aam
sub
dec
jg
push
xlat
mov
xchg
cmp
in
fldcw
xchg
popa
sbb
xchg
add
push
push
push
int
cmp
jne
push
cmpsl
mov
push
adc
push
cmpsb
mov
and
sbb
pusha
nop
adc
pop
call
cmp
and
xor
cmp
repnz
out
pusha
ret
aam
inc
or
mov
bnd
test
arpl
inc
ja
insb
jmp
sbb
pop
test
or
js
adc
jns
je
fistpll
popf
out
scas
call
lret
fcomps
pop
mov
or
mov
add
mov
fsubrs
mov
cmp
fstpt
sbb
js
adc
add
mov
iret
aas
icebp
mov
jle
in
das
mov
popa
fwait
push
adc
jmp
mov
lcall
pop
jnp
test
aas
or
xor
jo,pn
or
sbb
int
stos
mov
clc
jbe
xchg
pusha
inc
clc
popf
stc
push
xchg
inc
lahf
jns
mov
sub
push
repnz
xchg
movsb
xchg
nop
xorl
ljmp
adc
aaa
data16
js
pop
addr16
imul
mov
clc
jno
xchg
out
push
repnz
pop
movsl
into
mov
enter
pop
jg
loop
pop
push
std
xor
cwtl
cmpsl
push
fidivs
mov
ss
inc
xor
xor
fwait
loope
out
mov
pop
insb
push
bound
out
decb
mov
outsl
fadds
daa
repz
sub
outsl
sub
mov
mov
aad
ret
orb
adc
loopne
cmp
mov
mov
fsubp
mov
call
loopne
inc
sarb
mov
or
push
xchg
pop
cwtl
sbbb
scas
andb
inc
imul
mov
and
popa
jp
dec
repnz
xor
inc
mov
in
lea
sbb
inc
mov
in
and
add
jp
xchg
cmp
xor
sbb
push
mov
mov
xchg
clc
pop
mov
xor
stos
orl
and
pop
es
inc
dec
and
dec
fnstcw
adc
aam
test
push
or
in
leave
mov
mov
sbb
add
pop
les
inc
xchg
mov
sub
lods
push
es
jp
ds
popf
cld
shrb
pusha
fbld
decb
sub
adc
repnz
popa
mov
cmpsb
clc
iret
xor
push
lret
push
pusha
ljmp
test
in
ds
adc
xchg
test
lods
std
icebp
lcall
pop
insl
cmp
mov
in
sbb
ljmp
nop
cli
outsl
fildl
push
cwtl
inc
into
pop
fwait
sbbb
sahf
mov
push
and
jne
fmull
adc
cmp
xchg
dec
test
xchg
pop
clc
jae
pop
arpl
jecxz
and
out
jnp
inc
jecxz
ja
mov
mov
out
mov
mov
pop
sub
inc
cmp
test
test
stos
adc
idivl
mov
cmp
push
push
xchg
ffree
fsubl
dec
xchg
jo
arpl
xchg
dec
rcr
insl
mov
aas
xchg
ret
jmp
dec
imul
dec
ret
stos
popf
sahf
lcall
fdivrl
adc
inc
cmpb
sbb
jbe
rcll
gs
bswap
test
lds
dec
imul
ret
dec
out
jb
cmpl
int
push
sbb
ss
movsb
popa
cmp
inc
mov
pushf
inc
in
outsl
sarb
pop
repz
popf
out
nop
repnz
xor
jp
cmp
test
push
mov
out
pop
idivb
dec
cmp
dec
jb
inc
dec
jbe
int3
aad
negl
out
push
jno
mov
rcll
dec
lret
lods
mov
in
gs
mov
jne
xchg
sarl
inc
int3
inc
pop
dec
popl
and
push
xchg
xchg
mov
int
and
outsl
loope
cltd
sbb
xor
inc
es
add
pop
and
outsb
and
xchg
push
rcl
push
jae
cltd
mov
pop
xor
lea
and
pop
aas
and
cltd
cltd
daa
sub
xor
mov
xor
sbb
cmc
outsb
mov
add
push
int3
jmp
fwait
mov
add
pop
mov
xorl
pop
pop
jo
jp
out
dec
sti
and
cmpsl
shrb
lock
imul
into
push
xchg
mov
sbb
jae
cwtl
dec
sbb
shll
mov
fisubrs
test
lods
inc
mov
xor
jbe
insl
cmp
shl
outsl
sbb
popa
lea
mov
repnz
mov
jo
cs
cmpsl
out
sub
stos
cmpsl
inc
out
adc
movsl
or
andl
dec
mov
mov
mov
mov
mov
add
data16
add
stc
add
mov
das
fs
mov
mov
loopne
and
pop
in
or
mov
dec
orl
and
cltd
aad
push
cltd
loopne
test
dec
push
and
pushf
cli
inc
add
mov
push
jmp
xor
nop
daa
outsb
add
sahf
repnz
out
xchg
push
sbb
push
shlb
je
fmulp
pop
add
pop
dec
es
shrl
mov
ret
dec
mov
mov
loopne
adc
std
daa
mov
mov
test
xor
or
inc
sub
data16
mov
push
mov
sub
push
aam
lcall
inc
nop
inc
jg
imul
loop
inc
loope
daa
not
push
leave
xchg
divb
pop
movsl
stos
repz
or
stos
loope
xor
xchg
cltd
dec
sbb
mov
jne
mov
jp
mov
cs
mov
push
hlt
jbe
stos
stc
mov
sbb
ds
mov
xor
lret
inc
pop
xor
pop
je
lret
cmp
jl
cmpsl
dec
and
add
test
out
push
jbe
stos
out
mov
jle
fs
andb
cwtl
cld
adc
stos
sbbb
fxch
mov
icebp
mov
ja
lret
pop
lods
lea
mov
add
sbb
inc
mov
lcall
xor
sar
dec
cld
fiaddl
out
test
int
adc
sahf
loop
mov
push
std
add
mov
xor
out
jle
data16
sbbl
jbe
and
mov
mov
fnop
push
insl
arpl
or
addr16
ss
mov
xor
cmp
shr
scas
nop
rclb
add
jle
pusha
push
js
pop
sbb
push
out
adcb
push
fdivp
nop
xchg
movsb
test
fs
fildl
stos
imul
fisttpll
push
sbb
xchg
pop
lods
push
movsb
fisubrs
add
sub
mov
int3
mov
or
rorb
loope
rorl
push
pop
jne
nop
lods
sbb
rclb
test
jo
sbb
daa
xor
xchg
pop
pop
sarb
ja
and
push
aas
dec
pop
add
jno
add
sbb
leave
enter
fmuls
std
int3
lea
out
pop
jmp
mov
jo
imul
push
push
jno
mov
daa
lods
or
scas
jmp
loope
xorb
adc
xor
mov
cwtl
lret
dec
shrl
adcb
pop
mov
cmp
and
mov
xlat
cltd
jns
movsl
in
test
and
or
or
ljmp
mov
inc
inc
and
mov
add
ret
iret
lock
dec
loope
sbb
sbb
pop
pop
leave
sub
hlt
orb
popa
lahf
js
cmp
cwtl
call
inc
add
je
adc
pop
add
pop
shlb
lods
sub
stc
iret
fldl
je
adc
jae
shl
std
incl
daa
sbb
gs
stos
dec
push
cmp
mov
jbe
sbb
dec
les
mov
jb
sbb
movsl
jae
jae
test
test
sub
pop
mov
xor
xlat
imul
pusha
mov
out
mov
adc
inc
sarb
iret
adc
jle
daa
xchg
stos
inc
jp
jne
fbld
imull
rcl
inc
popf
cmp
mov
pushf
mov
push
test
push
pop
adc
ja
push
adc
shll
mov
addr16
mov
jl
xor
flds
fildl
mov
and
inc
jle
std
and
mov
add
lret
rorb
and
xchg
cmp
fld
mov
inc
lods
testl
xchg
stos
cmpsb
jmp
jae
push
or
sbbl
mov
lods
mov
pop
sub
adc
roll
fnstcw
pop
jle
repz
fimuls
outsl
orb
cwtl
add
stos
inc
dec
lret
sub
pop
xchg
add
movsb
ds
es
loope,pn
cltd
sahf
push
sbb
enter
add
push
and
loopne
mov
inc
xchg
lcall
mov
clc
popf
lahf
dec
cmpl
add
sbb
mov
loope
aad
and
outsb
clc
sub
ja
mov
lret
jmp
xchg
sahf
dec
arpl
rcrl
outsl
lods
in
cwtl
xor
orb
loop
test
popf
and
and
sbb
inc
pop
add
lock
pop
push
sbb
sub
and
sub
insb
lahf
jo
pop
and
add
add
cld
xchg
rcll
and
stos
cs
add
int
testl
dec
sar
jmp
or
sahf
cmp
push
dec
inc
ret
lret
pop
and
daa
xor
div
cltd
out
sbb
add
pop
xchg
jecxz
loop
enter
fnstenv
cld
mov
sub
sbb
mov
shrb
aaa
dec
lds
cmc
test
xchg
pop
mov
ljmp
loopne
add
push
pop
fidivl
cmpsl
dec
push
jne
rcl
dec
jno
xchg
outsl
orb
pop
adc
in
pop
pop
inc
add
push
add
pop
push
ficoms
pusha
loopne
sti
pop
jl
sbb
loope
or
xchg
pusha
stos
or
and
ret
push
mov
push
pop
or
and
cmpsb
arpl
loop
inc
loopne
shll
add
inc
cmp
rcrl
xchg
rcll
std
dec
orl
iret
aam
ret
and
popa
stc
ret
add
jb
je
repnz
xor
stos
out
imul
jno
xchg
pop
aam
stc
outsb
mov
imul
mov
mov
pusha
add
scas
nop
cld
mov
ret
adc
inc
insl
mov
cmc
adc
mov
addr16
xor
jae
mov
out
lret
gs
mov
push
adc
fistps
jae
mov
shrl
jmp
jp
fcomps
mov
in
aaa
xchg
cwtl
adc
pop
outsb
pop
insb
sahf
in
cmp
in
rol
bound
fsubrl
pop
jo
pop
inc
mov
jmp
rcll
mov
add
pop
mov
test
test
fadds
popf
inc
xchg
push
ja
daa
lret
into
scas
pop
out
ficoms
iret
mov
add
lret
push
subb
mov
clc
loop
icebp
or
push
and
orl
sbb
out
imul
jmp
mov
adc
cmp
jp
add
jno
dec
outsb
addl
add
mov
rorl
sbb
push
leave
sub
mov
fwait
xchg
into
push
sub
lahf
int
push
lret
addb
sub
nop
cld
sbb
ljmp
cli
pop
nop
test
lcall
mov
adc
fiaddl
adc
lcall
dec
lcall
outsl
sar
pop
cmp
or
pop
xor
loopne
outsb
outsl
dec
out
mov
inc
xor
fs
dec
mov
andl
pushf
sbb
out
daa
fadd
ljmp
ror
xor
test
std
cmc
or
lret
in
jne
and
xchg
aam
hlt
push
gs
add
or
xchg
cmpsl
xor
sub
push
mov
stc
mov
add
shll
aas
push
add
xchg
adc
int
xchg
jge
jmp
js
jge
pop
arpl
mov
xor
popf
jae
aad
xor
fisubrl
ret
mov
in
jae
lcall
shl
aad
repz
push
repnz
adc
push
pop
push
ja
push
scas
fcmovnu
test
enter
jb
ljmp
popa
cmp
neg
inc
shrl
xchg
movsb
pusha
mov
or
cmp
pop
dec
or
jmp
xchg
cmc
lea
adc
fsubs
rclb
jmp
pop
movb
sub
mov
imul
add
and
repnz
sti
jge
les
scas
enter
mov
shlb
push
push
in
movsl
inc
dec
in
sti
xchg
jle
jmp
insb
lcall
mov
arpl
lds
sbb
add
inc
mov
lods
ja
adc
shll
lahf
lods
daa
dec
and
xor
or
xor
push
sar
roll
adc
fcmovne
add
icebp
pushf
stos
dec
push
cmpsb
mov
xchg
loope
mov
into
ljmp
or
or
add
jmp
sub
dec
sbb
xlat
shl
out
dec
shll
lods
mov
mov
lcall
pusha
repnz
lcall
fs
nop
pop
sbb
mov
ja
and
inc
sbbl
and
lods
xchg
cltd
and
jmp
fstl
imul
cmp
jno
or
imul
stos
push
cs
in
jl
aas
fmull
bound
pop
or
popf
push
push
or
lods
sbb
stc
xor
cmp
dec
loop
stc
push
jp
dec
adc
out
outsb
sbb
andl
lahf
std
into
cmp
lret
or
inc
cld
jnp
cmp
lods
mov
xchg
mov
sbb
ds
inc
jnp
xchg
cmp
fs
xor
pushl
xor
xchg
lret
fisttpll
add
inc
bound
lods
jo
and
dec
add
ret
xor
fisubrl
sarl
sub
aaa
leave
mov
mov
add
mov
and
pushf
and
inc
testl
mov
cmpb
dec
int3
push
pop
clc
sub
fnstcw
stc
jae
cld
out
daa
ds
push
sbb
jge
and
cmc
jne
add
popf
sahf
jge
lcall
outsb
out
pop
mov
dec
add
fdivs
ja
fld
dec
mov
jmp
mov
test
inc
jnp
clc
adc
xlat
iret
mov
rcr
cmpsb
clc
pop
lds
cwtl
xchg
dec
lahf
jge
inc
sbb
sbb
cld
pop
bound
jl
xchg
adc
push
lret
call
pop
xor
data16
outsb
lret
mov
lcall
xor
xchg
in
add
jle
xchg
fimuls
xchg
arpl
iret
mov
pop
push
cmp
imul
lcall
out
ret
add
add
pop
popa
popf
jmp
fcomps
cwtl
sbb
lret
lods
inc
xor
pop
mov
fdivs
mov
addr16
imul
aas
lods
pop
xchg
popa
movsl
out
fmul
push
add
pop
jle
sbb
jg
rcrl
dec
and
inc
xor
push
fisttps
push
xchg
xchg
and
adc
or
outsb
inc
out
add
sbb
inc
adc
push
push
xchg
cmp
push
inc
fs
sbb
dec
push
push
inc
lret
mov
xor
shll
xchg
xchg
lret
push
inc
cmp
xchg
or
sahf
sbb
adc
adc
adc
test
sub
fisubrs
dec
out
iret
sbb
int
push
sbb
in
adc
mov
mov
jge
jp
lahf
out
lods
fbstp
js
aam
das
gs
mov
cmp
mov
aaa
cwtl
data16
jmp
scas
stos
cmp
sbb
cs
mov
roll
inc
push
add
test
popf
rorb
fadd
adc
mov
add
dec
add
jno
or
adc
shl
stos
jae
jns
pop
or
xchg
jl
mov
jnp
mov
cmc
aam
fsubrl
cwtl
loope
mov
icebp
jecxz
inc
dec
mov
rolb
xchg
xor
fdivl
icebp
or
push
clc
pop
test
lret
or
popa
leave
inc
adc
es
jb
out
in
xor
jge
fs
pop
mov
scas
push
icebp
imull
sbb
mov
mov
and
insl
jle
outsl
and
mov
loop
subps
jbe
cmc
cmp
push
ja
inc
cmp
ja
cs
leave
loop
jmp
daa
mov
cwtl
enter
sub
xor
cld
pushf
sbb
xchg
sti
mov
cld
insl
sbb
adc
mov
or
inc
adcl
dec
clc
stos
mov
push
or
testl
push
out
inc
sub
jge
popa
outsl
in
lcall
popf
out
ljmp
sbb
adc
cmp
add
mov
mov
call
or
add
sbb
fwait
xchg
xor
mov
enter
dec
int3
xchg
lret
negl
push
dec
shrl
push
pop
aaa
mov
mov
mov
cmc
mov
movsl
jno
jp
pop
xchg
pop
test
fcomps
push
cmp
addr16
dec
jb
mov
sub
jno
pop
imul
xchg
idivl
xchg
cmp
mov
pop
inc
and
fucomp
lods
test
pop
inc
mov
fldenv
sub
mov
mov
pop
push
lahf
mov
mov
es
sbb
popl
cmc
test
sbb
ljmp
sub
push
dec
movsb
cwtl
jmp
icebp
lret
stos
mov
scas
jne
loope
dec
lods
je
inc
mov
shlb
mov
inc
dec
or
hlt
or
sub
cmp
mov
rep
sub
jmp
xor
lret
out
in
adc
xchg
push
push
lret
dec
cmpsl
mov
xor
mov
mov
xchg
cmpsl
out
mov
cmc
lock
mov
out
cmc
fwait
add
mov
clc
cli
les
test
mov
scas
sub
aas
fld1
push
jnp
lret
sbb
inc
cld
popa
xchg
cmp
popa
int3
mov
add
add
push
movsb
popa
adc
stos
in
jg
push
pop
pop
les
jo
loopne
in
movsl
adc
sbb
xchg
scas
xchg
and
xor
sbb
sub
inc
das
push
inc
cli
or
out
add
add
int3
and
adc
xor
mov
icebp
mov
aaa
insl
lret
loop
out
push
sub
negb
ljmp
sub
mov
xor
dec
xor
push
out
push
clc
aas
pop
mov
push
aam
cmp
jnp
mov
push
sbb
bnd
iret
adc
mov
je
pop
divl
push
sbb
movsl
fsubr
mov
inc
push
adc
out
xchg
lcall
pop
imul
pusha
push
mov
xor
arpl
xlat
ljmp
in
sub
mov
dec
push
arpl
fists
sbb
test
rolb
xchg
sub
incl
mov
aas
jns
mov
test
arpl
mov
sti
pop
cmp
imul
push
leave
fdivrp
sub
cmp
movsl
xchg
ficoms
cmp
mov
mov
mov
mov
and
hlt
dec
xchg
push
mov
repnz
ja
in
fsub
push
mov
sbb
pop
mov
js
das
mov
sbb
aam
dec
mov
mov
in
std
or
cmp
movsb
add
ret
jns
in
xchg
dec
or
fimull
dec
hlt
movsb
out
jle
mov
test
pop
das
pop
inc
call
imul
idiv
lret
shrl
fcompl
fstl
iret
in
fldenv
test
push
jmp
inc
loopne
inc
enter
adc
or
xlat
std
je
mov
fcompl
lock
mulb
xor
stos
aas
popf
pusha
les
ljmp
add
xchg
jp
mov
cltd
stos
gs
data16
add
fsubrl
pop
push
ljmp
cmp
pop
test
mov
mov
out
xor
push
mov
xchg
xorb
mov
das
and
in
pop
stos
or
stc
in
or
push
int
fisubs
je
test
add
mov
mov
into
pop
andb
leave
dec
movsl
push
mov
mov
sbb
cmpsl
mov
add
add
leave
iret
stc
iret
mov
popf
cli
inc
mov
dec
cli
rcl
into
adc
pop
or
sbb
movsb
sub
sbb
push
push
daa
xchg
cli
dec
dec
jae
loopne
loopne
dec
test
pop
outsb
cmpsl
inc
adcl
aad
fbld
or
aas
sub
les
cmp
pushw
loopne
insb
stc
and
dec
jo
inc
repnz
idiv
sbb
fdivs
xchg
and
cmp
cmpsb
cmp
sub
movsl
sub
inc
dec
cli
ljmp
sub
hlt
enter
cmp
scas
sub
jno
inc
lock
push
push
rol
cli
stc
jmp
lcall
cmp
and
cltd
cli
jns
inc
xchg
jle
lret
adc
jmp
sbb
sbb
xchg
fidivrs
cli
mulb
outsb
iret
lahf
out
int
sbb
xchg
jno
push
das
sbb
add
cmp
lahf
rcl
inc
mov
jbe
shlb
xchg
adc
call
sbb
cmpsl
push
rcrl
adc
lret
sbb
push
dec
inc
icebp
out
mov
or
lods
fs
aaa
pop
jns
insb
sbb
xchg
pusha
add
pop
cli
xchg
aam
add
mov
add
push
arpl
das
movsl
push
lods
add
or
sahf
popa
push
push
mov
pop
ja
lahf
daa
cltd
inc
add
mov
popa
lcall
addl
pop
loopne
jecxz
into
pushf
int
lret
jmp
fsubrp
xchg
fisttpl
imul
data16
mov
aas
sbb
xchg
icebp
or
xchg
out
jb
sarb
pop
mov
in
aaa
repz
cmp
fs
in
pop
push
inc
sub
popa
inc
fsubl
loop
int3
push
push
add
mull
inc
ret
lea
cld
xchg
or
stos
add
aam
adcb
xchg
ffree
fcmovnb
scas
cmp
bound
mov
ret
xchg
or
jae
add
jmp
dec
sti
out
jecxz
sbb
xchg
pop
int3
cmp
mov
jns
dec
int
cltd
sub
movsb
add
and
mov
pushf
aam
xor
push
stos
mov
gs
pusha
add
nop
mov
dec
popa
inc
sbb
jg
test
push
fidivrl
popf
cmp
fldl
sbb
jle
and
sbb
xor
cs
mov
dec
push
bound
aaa
xchg
adc
push
nop
incb
add
icebp
jp
mov
insl
jge
push
xor
cmp
loope
cmp
das
jp
jnp
mov
mov
mov
popa
mov
mov
sarb
lcall
ja
in
xchg
lret
cmovnp
mov
cmp
cmp
repz
push
shrl
cs
ds
ljmp
cmpsl
push
xchg
aad
cld
mov
fsubrl
jne
mov
xchg
mov
or
mov
jne
in
fwait
jbe
and
mov
mov
xchg
push
cmp
sub
daa
insl
fcomps
pop
push
stos
xor
adc
lock
sub
and
sub
jge
pushf
and
sub
or
adc
out
imul
icebp
pop
pop
lods
jmp
in
lods
iret
out
lock
pop
lahf
jg
or
mov
mov
sbb
test
js
mulb
fnstcw
mov
mov
mov
aad
mov
aaa
fcmovnb
aad
in
mov
and
cli
sarb
push
orl
shll
leave
out
jnp
into
sub
or
repz
push
push
dec
fwait
add
pushf
lahf
mov
mov
cmpsl
push
mov
cmp
mov
mov
scas
inc
in
fcoml
cmpsb
sub
and
imulb
fs
pusha
pcmpgtd
push
add
adc
add
or
lock
mov
int3
pop
sbb
xchg
and
adc
pop
push
adc
inc
xchg
imul
xchg
loope
dec
mov
arpl
gs
cmp
sbb
jno
mov
adc
fidivl
dec
or
sub
inc
inc
pop
add
jmp
cli
jno
mov
mov
subb
enter
pushf
ret
push
incl
insb
jo
es
stos
cmp
jmp
test
and
pop
cmp
mov
or
insb
jnp
jns
lret
mov
ret
fdivp
or
movsl
loope
push
aad
sub
mov
sub
mov
mov
adc
fiadds
xlat
jno
lods
movsl
out
or
xor
stos
pop
sbb
xchg
mov
jmp
daa
fmull
or
leave
loope
lock
push
jmp
ja
out
int3
fdivr
inc
dec
outsl
dec
cmp
flds
xor
mov
rcr
jnp
add
out
mov
leave
cld
pop
out
dec
sarl
adc
mov
mov
xor
adc
icebp
and
sbb
mov
outsb
lods
mov
push
js
or
mov
sub
xor
adc
add
jp
adc
aam
les
xchg
jbe
or
ljmp
mov
mov
test
cmp
clc
popa
pop
jg
fwait
xlat
pop
and
rcrl
mov
sbb
ds
das
roll
sub
or
out
cmp
gs
dec
mov
ljmp
movsb
pushf
sub
cmp
sahf
ret
adc
jnp
pop
sarb
adc
outsl
leave
icebp
mov
movsl
out
movsb
xchg
movsl
mov
addr16
push
xchg
pop
lods
jecxz
xchg
push
sub
xchg
lret
mov
nop
inc
ljmp
enter
scas
mov
adc
push
inc
xchg
fidivrs
enter
mov
sub
fldt
xchg
push
xchg
xchg
sahf
ret
mull
sti
mov
add
cmpsb
mov
out
jle
mov
sub
sub
jne
mov
loopne
fcompl
sarl
stc
dec
shr
pop
jge
enter
push
sub
cld
mov
sahf
out
sub
adc
jae
fnstenv
xor
stc
ljmp
push
or
add
and
and
dec
adc
andl
fwait
roll
push
or
dec
popa
and
inc
lock
or
pushf
pop
sbb
adc
mov
repnz
dec
js
jb
scas
sub
lahf
cmp
clc
xchg
cltd
jno
push
add
filds
sub
clc
out
in
push
xlat
jno
mov
jne
add
add
add
cwtl
shl
in
sub
mov
addr16
xchg
or
insb
loope
push
xor
jnp
jno
fisttpl
and
mov
xchg
lods
or
add
call
mov
xchg
jge
es
mul
sbb
outsl
sub
fistpl
movsl
or
loopne
call
into
pop
andb
fnstsw
cld
int
iret
xor
into
sub
xor
pop
leave
sti
or
jmp
out
push
dec
ret
push
mov
mov
stos
pop
in
into
push
mov
in
fisubl
xchg
push
mov
adc
clc
jmp
jl
rolb
jns
mov
fisttpl
inc
push
dec
lret
sbb
mov
loopne
push
jb
mov
ljmp
adc
imul
push
ret
cmp
or
push
in
inc
sub
fnstenv
rcr
addr16
adc
movsb
fsubrl
data16
sub
pop
leave
dec
mov
inc
sbb
push
fs
jae
cltd
and
sbb
jl
mov
xor
inc
mov
lods
les
sbb
out
out
mov
andl
and
hlt
xor
sti
into
pop
movsb
jae
cltd
or
orl
cli
nop
and
mov
outsl
arpl
push
call
inc
lahf
inc
add
inc
sbb
mov
xchg
push
mov
jp
sub
lahf
bound
shrb
pop
loope
insb
pop
xlat
sarl
push
leave
in
mov
inc
dec
or
inc
js
lods
push
mov
xchg
mov
ror
sub
sub
shl
sub
jb
dec
fistps
jne
movsl
imul
mov
pop
xor
or
push
icebp
roll
movsb
negb
mov
stos
push
clc
out
adc
mov
repz
mov
lahf
in
xor
pop
push
stos
push
push
adc
es
outsl
lret
scas
xor
jp
insl
ret
loop
fcoms
mov
fwait
aas
shll
mov
mov
ss
pop
cmpl
fsubl
xor
lock
inc
lods
pop
mov
mov
xchg
test
roll
sbb
pop
js
sbb
ficomps
out
and
rclb
and
mov
loope
notl
mov
mov
imul
jnp
daa
jle
jae
or
push
in
test
sbb
ds
cmp
inc
fstpt
xchg
out
pop
aad
push
mov
pop
int3
jl
xchg
jmp
aam
mov
push
fiadds
mov
cmp
mov
mov
jb
push
and
sub
les
or
shlb
add
xor
jbe
outsb
cmp
mulb
dec
push
dec
adc
test
jno
mov
push
ret
and
mov
cmp
sahf
or
addr16
jno
adc
mov
sbb
in
jle
push
mov
lds
or
pusha
adc
pop
aad
das
sbb
insl
xor
inc
xor
jo,pn
sbb
adc
bound
ret
stos
iret
mov
clts
int3
pop
fdivrs
sarl
xchg
push
pushl
cmp
aaa
adc
adc
pop
jne
sub
or
mov
jo
movsl
cmp
imul
nop
adc
ja
jecxz
xchg
sub
and
fstpl
mov
sub
js
pop
clc
cmpsl
pop
mov
and
add
cltd
adc
and
aas
jae
add
push
sbb
mov
insb
pusha
pmaddwd
jp
xchg
cmpl
clc
push
in
popf
lea
aaa
xchg
fwait
push
sub
inc
ret
popf
mov
imul
loop
lahf
cld
mov
push
je
pop
xor
outsl
add
xchg
and
xchg
push
and
cli
icebp
xor
inc
cmp
fisubl
jne
sbb
sub
add
jo
insl
xor
cmp
enter
pop
cmpsb
cmp
cmp
mov
inc
add
daa
sub
xor
testl
add
push
mov
jbe
and
cmp
mov
jbe
jmp
mov
or
or
adc
xchg
mov
mov
enter
mov
in
add
stc
out
xlat
mov
pop
xor
or
popl
neg
and
and
cmp
jmp
add
stos
cld
jecxz
cli
jecxz
loope
popf
int3
cmpsb
xchg
jge
mov
cmp
cmpsl
rcll
push
gs
repz
mov
mov
push
inc
fistl
or
fisubl
jbe
loope
xchg
xor
cmpsl
dec
popa
cmp
cmc
mov
mov
aad
insb
sub
xor
xor
mov
test
std
xchg
mov
cmp
andl
lret
std
aaa
inc
fwait
in
addr16
mov
dec
mov
lea
call
daa
aad
ficomps
pop
or
sti
cmpsl
xchg
les
xor
adc
ret
push
push
decb
jno
and
add
fld
jecxz
cmp
fiaddl
or
xor
push
adc
or
in
jmp
addr16
out
stc
sub
movsb
dec
mov
sbb
and
flds
test
adc
int3
add
out
stos
mov
sti
leave
pusha
inc
push
jo
add
pop
jae
sub
inc
int3
std
out
pushf
push
pop
or
dec
lock
xchg
adc
cltd
lcall
xor
test
out
mov
pusha
or
scas
andl
adc
push
movsl
into
jmp
adc
movsl
lret
push
cmp
pop
push
pop
jnp
clc
fmuls
or
imul
sarb
int
das
clc
dec
push
xchg
add
dec
or
inc
and
in
adc
int3
xlat
and
data16
aas
fcoms
and
ds
lods
out
faddl
arpl
cmp
fisubl
loopne
sub
cld
sub
push
cvtdq2ps
push
jmp
daa
pop
add
and
fisubrl
test
mov
sub
daa
cmpsl
xor
data16
enter
clc
mov
add
inc
mov
ljmp
call
pop
imulb
in
jne
imul
or
insb
push
push
mov
sbb
xlat
jb
sub
scas
add
ret
sahf
xor
xor
push
cltd
mov
push
xchg
andb
add
lret
fisubrs
pop
idivl
fimuls
mov
jne
mov
adc
mov
add
jecxz
or
add
loopne
dec
mov
pop
xchg
adc
jb
or
cmp
ret
jo
ljmp
push
daa
xchg
xor
rorl
ss
test
pop
add
xchg
jp
popf
xchg
insb
jmp
and
ficompl
lock
jno
sub
outsb
aas
pop
mov
push
outsl
cs
rclb
fisttps
iret
fstl
fs
arpl
repz
rcl
inc
test
xchg
push
cmp
clc
sub
jl
das
int3
scas
es
jb
push
sub
shll
fcmovnu
jnp
in
cwtl
scas
push
out
out
push
fwait
fwait
adc
iret
xor
pop
aam
andl
js
or
push
xchg
loopne
dec
lods
push
jnp
adc
loopne
mov
popa
dec
xchg
jge
pop
dec
mov
inc
pusha
scas
jne
pop
mov
shrb
faddl
in
stos
sub
mov
jmp
push
je
out
call
das
xlat
mov
sub
ficoml
mov
adc
sub
cmp
lds
cwtl
inc
cmp
loope
add
pushf
add
and
push
cltd
xchg
adc
sbb
out
xlat
xchg
push
push
push
daa
in
ficompl
outsb
es
aaa
cltd
fisubrs
sub
cmc
mov
cmp
cld
jo
call
cmp
incl
test
xchg
or
daa
fs
cmc
pop
mov
push
scas
xchg
push
and
dec
call
mov
xor
pop
dec
call
pop
xor
aam
push
sub
cmpsb
js
mov
cli
lcall
push
pusha
dec
cwtl
clc
cmpsb
xchg
xor
and
xchg
movsl
xchg
cmp
sub
jp
push
jecxz
lret
xchg
mov
xchg
dec
inc
js
or
fnstcw
push
sahf
pop
daa
fdivl
jmp
add
orl
test
rcrl
imul
daa
mov
push
sbb
nop
addr16
push
clc
push
and
inc
in
mov
xchg
and
arpl
iret
pushf
cltd
lret
push
cmpsl
repnz
push
lret
or
gs
int
outsl
stos
jmp
or
fadds
dec
mov
pop
pop
lods
inc
pop
pushf
ret
mov
inc
je
adc
dec
xsave
push
aad
dec
mov
or
mov
sbb
mov
pop
push
repz
lcall
xchg
xchg
loop
pop
sahf
adc
mov
mov
add
xchg
pop
jp
fwait
lahf
push
xor
lret
mov
pop
mov
xchg
or
int3
sarb
sbb
push
iret
mov
icebp
ffreep
add
rclb
mov
mov
icebp
push
call
sbb
test
xchg
mov
subl
cmp
orb
jp
xchg
ja
push
aas
mov
not
adc
stos
pop
ss
std
movsl
jecxz
mov
adc
pop
jbe
push
or
or
cmp
dec
sub
imul
sbb
mov
adc
fbstp
js
or
mov
cs
xchg
insl
sub
pop
pop
mov
and
fildl
clc
insl
add
pushf
das
test
xor
inc
fstpl
mov
mov
orl
fsubrs
hlt
cs
daa
lahf
and
mov
and
mov
dec
popa
loopne
leave
xchg
and
cmpsl
out
sbb
stos
pusha
pop
push
or
insb
pushf
int
sub
fs
mov
jg
imul
and
mov
xchg
pop
xchg
sbb
add
hlt
in
test
xlat
enter
pop
insb
or
ja
cmpsl
push
or
cmc
xorb
pusha
push
into
jno
lods
clc
lret
and
and
or
push
add
mov
lret
or
mov
or
rcl
jmp
lods
addb
loope
into
les
lcall
daa
fcoml
es
sbb
fnstsw
aaa
test
push
movsb
xchg
shl
jnp
mov
jmp
repz
mov
into
mov
in
inc
or
test
out
sbb
mov
mov
jl
mov
mov
pop
fcmove
mov
fnstenv
aam
popf
xor
in
imul
lds
mov
sub
xor
mov
push
jns
adc
fbld
fsubl
enter
rorb
mov
inc
cwtl
mov
push
repnz
mov
fdivrl
dec
popf
cmp
shrb
rcl
sarl
das
sbb
jg
ret
and
xchg
pushf
mov
cmp
push
ret
inc
xlat
sbb
mov
xchg
push
test
arpl
mov
cltd
or
push
mov
lahf
repz
scas
mov
add
cmp
pop
cmp
sti
push
call
cwtl
mov
pop
mov
sbb
jl
pusha
cmpsb
mov
hlt
inc
pop
stc
add
inc
sahf
cli
pop
mov
ret
pusha
pushf
test
test
dec
push
out
cmp
push
inc
cmp
adc
test
and
test
jae
mov
adc
rolb
test
andl
jp
outsb
push
cmc
mov
dec
cwtl
xchg
add
mov
add
xor
inc
shlb
jecxz
lcall
push
mov
imul
int3
std
scas
cli
call
or
adc
pop
addr16
movb
out
cmp
and
xchg
sahf
pop
fcmovu
cs
jne
xchg
mov
lahf
popf
jmp
mov
jp
in
lock
lods
ret
loopne
sub
or
inc
cmp
movsb
mov
adc
cmp
push
testb
xor
xchg
mov
popf
push
mov
std
sub
pop
shlb
sahf
inc
sbb
sbb
sbbl
xor
mov
sub
out
xor
aam
in
into
push
lock
jne
jge
mov
add
jp
dec
mov
mov
imul
mov
xlat
out
xchg
les
add
into
inc
jp
sub
dec
adc
mov
pop
test
lcall
leave
pop
rcl
pop
or
std
sub
in
pop
mulb
jecxz
mov
call
adc
xchg
adc
outsb
add
cld
or
mov
je
repz
dec
or
in
or
dec
stc
mov
cltd
pop
push
ret
jmp
cmp
roll
jecxz
mov
scas
jle
sahf
aaa
pop
jno
lcall
popa
push
fwait
lods
mov
mov
insl
sub
push
lods
push
punpcklwd
fists
aad
add
pop
pop
sub
sti
adc
outsl
jae
andb
incb
xor
lods
in
rorb
faddl
xchg
outsb
das
je
fmuls
pop
sub
jns
mov
cli
int3
mov
das
jp
jno
lcall
leave
push
ret
je
shl
test
hlt
lahf
addl
subl
hlt
mov
loope
add
shl
jl
aas
add
sahf
mov
cmovbe
mov
or
pop
test
mov
push
lret
sbb
sub
ror
sub
or
sbb
fcomip
stc
test
xchg
pop
lret
in
adc
inc
fcomps
out
imul
adc
loope
mov
push
pop
je
scas
scas
jp
mov
mov
daa
in
pop
insb
fidivrs
push
aas
xchg
jnp
ljmp
push
shrb
xchg
lcall
fcompl
pusha
lock
cmpsl
imul
call
mov
xor
lret
cmp
adc
loop
jbe
loopne
dec
xor
ret
add
pop
shll
shrb
sub
pop
sahf
mov
jno
aaa
sbb
cli
sbb
pushf
mov
or
pop
shll
mov
lods
sbb
mov
mov
test
faddl
int3
ret
popf
daa
shrb
adc
xchg
add
xchg
inc
pop
jl
or
mov
test
imul
inc
jmp
sub
push
leave
insb
pop
fwait
out
push
add
xchg
lock
sub
sbbb
sarl
mov
in
in
dec
mov
and
mov
mov
cwtl
stc
dec
jo
lcall
push
into
push
popa
sbb
inc
insb
fimuls
aam
fdivs
or
sbb
stos
mov
adc
inc
fsts
ljmp
sbb
stos
cmp
icebp
lret
push
lds
dec
and
or
dec
mov
pusha
jl
aam
bound
push
shlb
stc
jnp
bound
jbe
push
xchg
aas
jno
sub
test
mov
xchg
and
cltd
pop
aam
movsb
sbb
dec
mov
sbb
add
sub
xorl
mov
jl
jns
mov
inc
mov
outsl
pop
pusha
je
push
cld
add
pop
cmc
cmpsl
mov
and
sti
int
lret
hlt
arpl
mov
mov
mov
add
movsl
mov
mov
test
dec
clc
xchg
push
jne
fst
sbb
mov
pusha
out
shlb
dec
push
adc
push
jge
xchg
sbb
mov
cltd
leave
stos
sub
in
dec
lahf
loop
repnz
popa
mov
lcall
push
dec
addr16
dec
dec
ss
stc
add
jo
inc
cmp
push
cltd
movq
xchg
jmp
loop
fmulp
scas
sbb
pop
test
ja
sbb
nop
push
ja
or
xchg
sub
hlt
and
mov
orb
pop
push
xor
mov
stos
cli
push
mov
int3
xchg
cmp
rol
dec
out
mov
mov
push
inc
scas
or
xor
filds
push
adc
mov
punpcklwd
cmpsb
daa
or
cmp
pop
daa
jp
mov
xchg
mov
xor
pop
sbb
or
test
call
fbld
sbb
adc
ja
xchg
sub
mov
add
lods
clc
shlb
ja
insb
add
mov
mov
xor
dec
jbe
icebp
popa
push
jno
dec
xchg
pop
dec
or
mov
sub
lcall
jnp
push
fisubl
jns
mov
iret
insl
mov
sub
push
aam
or
mull
or
ljmp
cmovnp
pop
fsubp
bound
add
into
cld
cmp
adc
repnz
cmp
cltd
cld
mov
mov
lret
sbb
int
push
ds
cltd
rcll
mov
jmp
cwtl
sub
out
mov
cltd
into
mov
mov
or
clc
fwait
mov
repz
jg
sbb
sbb
or
test
add
outsl
pop
mov
icebp
xchg
dec
add
or
pop
cwtl
pop
sub
ljmp
and
sub
mov
repz
imul
lods
push
mov
sub
jl
clc
cli
sbb
loope
in
mov
mov
adc
ljmp
js
repnz
jmp
std
dec
loopne
int
mov
outsb
xor
jge
mov
mov
sarl
xchg
shl
scas
ja
loopne
pop
lock
push
andl
ds
inc
dec
push
andb
xchg
push
jl
out
ret
sub
mov
jne
cwtl
cmp
outsl
xor
mov
das
and
ljmp
aas
ss
mov
cmp
cmp
frstor
call
aas
bsf
lret
xchg
dec
cmp
inc
aad
popf
pushf
mov
xchg
cmp
fs
mov
and
out
mov
lret
or
pop
inc
test
insb
mov
xor
xchg
je
jl
insl
dec
clc
xchg
cmpsl
out
jl
mov
xlat
leave
cli
andb
mov
mov
mov
mov
jnp
scas
mov
dec
fcompl
ret
data16
cltd
dec
lods
adc
xchg
mov
push
push
sub
mov
iret
mov
pop
shll
popf
mov
ljmp
push
mov
stc
orl
leave
not
mov
add
ret
push
jge
or
rcl
jbe
es
je
sbb
lcall
sbb
add
mov
cmc
imul
mov
ja
test
jp
add
lods
sub
leave
std
call
mov
jo
int
and
mov
scas
insb
dec
mov
cmp
fcmove
cmp
cmp
xor
je
sub
das
std
cmp
push
leave
sbb
add
lahf
test
fdivl
xor
add
push
icebp
pop
mov
jle,pn
cmp
pop
push
xchg
add
lea
dec
sub
sbb
inc
stos
cmp
aas
imul
mov
jecxz
xchg
out
push
mov
gs
xchg
pop
mov
dec
lods
xchg
xchg
dec
sub
decb
lods
inc
mov
push
jno
stos
pop
xlat
dec
xor
or
mov
aam
nop
in
cmp
push
jb
pop
popf
dec
hlt
repnz
flds
cmpsb
xchg
add
movb
pop
mov
lods
leave
push
mov
in
cmp
adc
fsubrp
dec
jnp
lea
mov
xor
pop
adc
out
sub
mov
mov
imul
fists
sti
jo
cmp
repnz
stos
cmp
pop
imul
addb
push
push
push
inc
xor
and
jae
cmpsl
rcrb
jno
ffree
xchg
pusha
mov
inc
fwait
loopne
aam
xor
lret
push
jmp
jae
cmp
sbb
mov
or
nopl
ss
mov
pop
push
sbb
or
std
popa
test
sti
inc
shlb
nop
stc
push
sarl
and
cmp
adc
call
test
dec
and
dec
mov
push
popa
stos
push
pop
xchg
sti
inc
int
jmp
xchg
jmp
cli
lret
dec
mov
movsl
cmpsb
dec
leave
adcl
fildl
test
das
or
fisubl
loop
ljmp
aad
into
jmp
ffreep
cmp
fcmovu
dec
shl
push
mov
mov
aam
jns
jno
cli
pop
adc
pop
mov
jmp
dec
jp
xor
mov
jge
adc
call
cwtl
inc
mov
notb
or
adc
addr16
fcmovbe
push
xchg
gs
xchg
test
enter
imul
fcmovnb
push
js
push
jl
mov
loopne
pop
push
mov
sub
pop
loope
mov
or
jo
out
xchg
lret
fcom
test
xchg
pop
lods
cmp
dec
cltd
jns
mov
scas
stos
push
sbb
pop
ds
lcall
jbe
pop
call
push
into
mov
arpl
push
outsb
add
push
fdivs
add
push
and
arpl
cltd
and
cmovnp
cs
inc
jno
xchg
jns
mov
inc
and
jno
dec
insb
or
sbb
call
int3
inc
cmp
test
sub
cld
inc
jns
jge
jb
test
iret
jne
xor
mov
mov
leave
push
cmp
sti
ret
jo
sub
sub
lcall
movsl
jle
sti
dec
sbbb
aaa
jb
sbb
out
outsl
mov
loope
lcall
xchg
jns
push
pusha
fists
jo
xchg
sbb
cmp
xor
into
xor
loopne
mov
out
cmp
push
das
leave
mov
outsb
mov
outsb
cltd
xchg
aad
xchg
jle
icebp
pop
jbe
mov
int3
outsl
sbb
pop
dec
pop
xchg
mov
sahf
xchg
inc
cwtl
sub
sub
imul
aas
enter
add
mov
daa
push
in
jg
pop
or
cwtl
cmpsl
sub
dec
dec
dec
les
push
pop
pop
repnz
int
or
gs
mov
pusha
mov
adc
push
push
and
pop
ja
cmp
out
es
nop
add
pop
fimuls
sub
add
int
es
pop
sub
and
adc
inc
lods
or
out
pop
cmpsl
nop
aaa
dec
mov
lock
xchg
jmp
rolb
inc
packssdw
arpl
mov
ja
and
sarb
xchg
push
data16
das
cmp
mov
scas
inc
hlt
jnp
jecxz
bound
inc
cwtl
xor
cmp
adc
jae
cmc
xchg
adc
cmpsl
push
imul
mov
jb
mov
inc
jbe
test
cmc
in
dec
dec
sbb
cmp
or
movsb
insl
mov
pop
pop
dec
std
dec
push
dec
aas
flds
shl
arpl
rolb
pop
pop
xor
xlat
inc
jge
stos
mov
mov
xchg
iret
xchg
or
pop
pushf
jne
push
in
scas
ljmp
cmc
xor
or
ljmp
mov
sub
and
mov
and
or
data16
mov
mov
out
add
or
lret
mov
andb
add
paddd
pop
pop
add
movsl
testb
subb
push
fs
add
push
repnz
add
push
xor
pop
and
je
fistl
rol
lock
pusha
xchg
dec
jne
xchg
fsubrp
jbe
mov
inc
and
mov
hlt
adcb
fisttpll
cs
cld
push
mov
cmc
jae
pop
int3
sub
pushf
sahf
test
stc
js
dec
sar
aas
push
jp
cltd
jle
xchg
mov
clc
sub
push
sub
adc
push
mov
or
mov
stos
lret
or
push
test
mov
pop
adc
mov
aam
add
jl
movsb
mov
int
cltd
inc
cli
popf
mov
cld
add
icebp
mov
adc
mov
push
jno
fdivrs
mov
xor
out
movb
mov
push
incb
loopne
pusha
or
imul
mov
sbb
pop
inc
xchg
mov
icebp
add
rcl
aad
sbb
out
push
ja
aas
xchg
push
inc
das
mov
add
xchg
pushf
mov
cs
addl
sahf
jle
mov
pop
cmp
mov
mov
sbbl
or
adc
div
pop
js
test
mov
xor
and
pop
mov
sub
clc
cmp
outsl
test
fstpt
mov
xor
cmp
mov
adc
out
dec
cs
add
rcll
jl
mov
clc
shr
cwtl
jbe
push
xchg
jo
and
mov
xchg
out
mov
xchg
inc
movsl
xchg
fdivrl
scas
push
insb
hlt
pop
ret
xlat
lods
lds
daa
or
into
cltd
insl
cs
sbb
repnz
push
adc
pushf
dec
es
lret
pop
jmp
loopne
mov
xlat
fmul
pop
out
sub
xchg
mov
push
inc
dec
in
jno
inc
jp
or
jnp
test
push
xchg
mov
mov
add
cmp
xorb
adc
dec
cli
hlt
imul
fistpl
stos
fisubrs
add
jl
fiaddl
stos
sbb
pop
rorl
inc
cli
cmpsl
mov
mov
imull
push
scas
inc
jns
push
mov
es
dec
lock
cs
sti
jl
sti
bound
into
add
xor
mov
int3
lock
pusha
insb
pop
or
jl
jnp
idivl
lock
outsb
adc
mov
mull
mov
and
iret
daa
js
dec
xrelease
mov
push
push
dec
cmpl
dec
pushf
adc
jecxz
push
dec
aaa
adc
sub
inc
pop
cmp
gs
xor
sbb
test
mov
es
aam
or
mov
mov
sbb
lret
repnz
cld
popf
mov
shll
sub
add
out
lods
pusha
cmc
mov
popa
outsl
sbb
outsl
push
xlat
push
push
jmp
cs
push
cmpsl
add
add
lret
jne
aas
in
inc
inc
lds
int
outsl
push
sub
fwait
test
fsub
adc
dec
and
pop
cmp
das
bound
mov
test
fisubl
jns
in
sbb
inc
rcll
cmp
bound
repnz
scas
nop
test
imul
int
pop
lea
push
cmp
imul
je
inc
rorl
push
dec
xor
mov
jmp
arpl
imul
lcall
push
dec
lahf
dec
xor
xchg
cmp
stos
stos
in
adc
jae
inc
xorl
lea
adc
mov
mov
xor
ret
fistpl
xor
cmp
push
hlt
repz
fidivrs
dec
push
jnp
insb
iret
outsl
xor
cmpsb
jne
mov
add
roll
and
ss
cli
add
adcl
or
out
and
or
adc
dec
xchg
insb
or
pop
pop
xor
gs
sbb
push
sbb
inc
pusha
push
mov
loop
fsin
gs
ret
in
mov
jmp
dec
inc
and
addr16
fisttpll
pop
sarl
dec
dec
push
mov
les
cmp
xor
inc
ja
push
cmp
mov
push
lahf
mov
imul
cld
test
jge
push
jno
push
xorb
in
ja
push
mov
out
ja
push
mov
pop
push
andl
icebp
sbb
negl
sub
xchg
pop
xchg
jmp
jp
jmp
pop
adc
and
sbb
dec
test
xchg
dec
adc
loopne
fcmovnb
popf
jge
mov
aam
or
arpl
xchg
arpl
inc
ljmp
pop
ss
push
scas
loope
lahf
mov
loop
ds
bound
ret
int3
call
xor
mov
ds
inc
sbb
out
stos
sbb
gs
xor
leave
sbb
jnp
cltd
insl
sarb
sub
cmc
fwait
or
shl
in
lods
or
test
mov
sub
insl
adc
adc
dec
sub
fdivs
rcll
js
cmc
js
lret
xchg
ret
push
cwtl
push
push
push
je
js
hlt
sub
jns,pt
je
call
pop
test
sar
insb
sbb
rclb
mov
push
or
mov
jmp
push
xor
jbe
jp
dec
outsb
div
pop
cli
sarb
stos
push
dec
sub
bound
shll
aad
int
pop
std
fnstcw
enter
stos
popf
cmpsb
and
inc
mov
dec
mov
pop
inc
and
outsb
inc
push
cmp
aam
cmp
dec
inc
stos
std
cmpsb
xor
adc
inc
xchg
xchg
imul
dec
sub
jmp
mov
int
jo
sbbl
pop
pop
mov
push
daa
imul
pop
sbb
sbb
popf
popf
ret
pushf
and
xor
es
xor
js
neg
add
mov
add
fnstenv
push
push
andb
push
das
jmp
xor
pop
ror
jnp
mov
sub
xor
xchg
ficompl
repz
pop
push
lret
fwait
jl
inc
lahf
mov
stos
or
scas
jge
mov
xchg
ret
fstpl
cli
out
aad
push
lods
and
dec
out
cltd
add
dec
lcall
mov
divl
repz
and
push
ret
pop
lret
mov
or
sub
leave
pop
inc
push
dec
mov
rclb
add
add
jns
scas
lock
insl
add
aaa
mov
out
mov
mov
es
test
cmp
push
shrl
jns
sub
cmp
adc
add
mov
fcmovne
les
or
xor
bound
ret
pmullw
out
jge
mov
mov
sahf
add
dec
ficompl
cwtl
iret
daa
mov
mov
xor
cltd
pop
out
icebp
and
xor
ja
popa
push
dec
mov
cmp
imul
push
stos
jg
sbb
jecxz
mov
aam
ljmp
xchg
and
inc
adc
loopne
or
inc
shll
xor
adc
mov
push
mov
mov
call
jnp
ret
jecxz
xor
add
int3
mov
mov
data16
and
push
lahf
rol
dec
and
add
add
pop
ret
outsl
and
jmp
sbb
inc
cmpb
push
add
and
jae
daa
out
jl
leave
insl
sbb
sub
mov
add
cmp
jns
push
lods
dec
repnz
shr
xchg
repnz
dec
movsb
cs
cmp
add
mov
std
mov
or
inc
xor
adcb
test
mov
jl
sub
add
xlat
in
mov
push
pusha
sub
test
cld
in
js
mov
push
jo
inc
call
movsl
push
xor
or
add
sbbb
xchg
xor
or
and
xchg
dec
add
addb
dec
mov
in
test
sub
adc
dec
xchg
dec
adc
lahf
test
testl
sar
jp
sbb
jmp
cs
into
pop
scas
xchg
jge
inc
xchg
stc
enter
or
xchg
ljmp
imul
jmp
and
lock
inc
outsb
ljmp
daa
dec
or
ja
xchg
out
cmp
ret
repnz
gs
movsb
popa
jns
sub
xchg
add
push
sub
out
fistl
test
aaa
inc
js
ret
fistps
std
scas
mov
mov
pop
pusha
xchg
xchg
stc
ret
fildl
jg
out
outsl
fs
mov
cld
cmp
sarl
scas
mov
pop
jns
jl
dec
jae
lods
out
arpl
mov
ss
scas
xchg
mov
lods
mov
inc
in
push
jne
push
lds
mov
mov
cs
cltd
mov
jmp
ret
push
mov
stos
lret
jns
in
scas
in
fsubrl
test
sub
cmp
xor
xorl
testb
mov
lds
cmp
pusha
mov
or
push
ja
aam
cld
push
arpl
rorl
repz
popa
je
mov
xchg
mov
ds
xchg
sbb
ljmp
and
push
cs
sub
stc
das
in
hlt
dec
adc
fdivl
inc
ss
iret
dec
cmpsb
lods
or
jecxz
mov
pop
xor
mov
sti
jge
cmp
pop
adc
fprem
insb
inc
ss
push
xchg
dec
cmp
mov
rcrl
insl
sub
sbb
pusha
scas
in
cmp
gs
and
fistps
adc
pusha
mov
dec
sbb
rolb
xor
pop
mov
aaa
addb
dec
out
add
movsb
out
xchg
mov
stos
xor
dec
gs
add
adc
lcall
xor
mov
xchg
mov
imul
mov
xchg
mov
das
frstor
loop
xlat
out
mov
sbb
incl
mov
icebp
push
xchg
loop
aam
push
adc
mov
add
sub
pop
mov
mov
loopne
mov
or
into
lock
addr16
xchg
push
cmp
dec
xor
xchg
jmp
cmc
fucomip
lret
call
xlat
adc
addl
rcrb
les
popa
and
sub
test
in
fsts
shl
or
les
fcompl
insb
adc
add
pop
mov
aaa
pop
jp
pop
inc
mov
adc
add
mov
js
loop
dec
pop
lahf
hlt
jl
movb
push
stos
lcall
xor
jl
outsb
or
iret
xchg
cltd
or
pop
dec
leave
pushf
in
mov
lret
ret
sub
mov
sbbl
sbb
inc
fstps
popa
int3
inc
sbb
push
sarl
icebp
dec
adc
adc
inc
mov
or
insl
pop
ret
pop
comiss
add
inc
lret
jne
dec
jae
lret
mov
mov
add
jle
jge
add
stc
pop
xor
test
add
cwtl
lret
pop
xchg
push
out
dec
mov
and
or
cmpl
and
ja
xchg
dec
pop
pop
hlt
stos
outsl
and
lcall
pop
or
jle
addr16
and
pop
fwait
inc
inc
arpl
adc
loope
lock
cld
sbb
incb
sbb
or
and
jmp
xchg
out
cmpsl
inc
fdivs
mov
pop
in
outsl
lret
push
clc
pop
pop
and
or
pusha
sbb
mov
add
js
jp
add
shl
and
in
xchg
add
lock
dec
fmuls
inc
push
fimull
pop
jl
daa
loopne
iret
in
mov
push
insb
mov
jmp
or
cli
ficoms
inc
and
cmp
sarl
lds
gs
movsl
cmp
jo
add
xchg
jnp
lea
ret
jne
jp
sub
int
jnp
and
cmp
sbb
push
cmp
das
inc
pop
xor
testl
hlt
xchg
cwtl
ja
in
rcll
sub
stos
fiadds
ret
leave
cmpsb
in
dec
xor
inc
jb
cmovnp
xlat
ffreep
xchg
aaa
add
adc
mov
lods
in
pop
loopne
cmp
lahf
in
push
add
imul
push
dec
sbb
es
jae
aam
rorl
pop
fs
sub
xor
push
test
fstps
and
xchg
pop
out
repz
icebp
sub
fs
xor
test
push
scas
jbe
cmp
clc
jmp
pop
and
jmp
cmp
cmp
lcall
mov
lret
js
test
push
adc
cli
aas
out
lods
jnp
xor
call
inc
lods
lret
clc
sub
mov
mov
xor
xor
stc
stos
push
xor
test
rorl
mov
jno
mov
addr16
xchg
iret
dec
movsb
fcoms
push
inc
enter
sbb
and
or
scas
lcall
sbb
jb
in
cmpsl
das
test
lret
out
std
push
mov
and
xlat
leave
adc
icebp
imul
fs
jo
push
cmp
enter
xchg
inc
mov
stos
cli
jmp
push
inc
loope
sub
mov
pop
rcll
add
lret
adcb
pop
loop
push
fs
ljmp
pop
cmp
daa
xchg
cmp
stc
ret
sahf
or
in
test
ss
out
pop
cli
mov
or
mov
stc
add
call
fadd
lcall
and
incl
stos
push
lcall
mov
aam
insb
pop
mov
and
push
cltd
mov
out
xchg
ret
insl
fdivrl
xchg
lea
mov
or
sbb
inc
in
pop
xor
mov
inc
rclb
sbb
mov
clc
inc
popa
pop
ret
loop
pop
inc
xor
dec
and
adc
pop
sub
lods
push
cmp
test
pushf
aad
aad
cmp
inc
cmp
arpl
add
into
jp
out
mov
lret
pop
push
push
and
int
into
adc
push
jle
xchg
xchg
cmc
cmc
popf
jnp
lcall
shll
shlb
shll
xlat
mov
add
add
and
dec
dec
inc
les
lret
cs
mov
or
les
sub
cmp
dec
mov
cs
lcall
lahf
dec
jae
dec
orb
sbb
data16
jns
mov
arpl
fdecstp
dec
or
mov
cmp
push
out
aad
jns
lcall
and
xor
loope
popf
sti
cld
sub
xchg
and
xchg
inc
in
pushf
jp
mov
lods
add
push
pmuludq
mov
jle
lcall
es
aad
mov
aad
leave
icebp
dec
fstpt
mov
aad
sbb
xor
enter
in
cmpsb
xchg
xor
insb
in
xchg
sti
inc
add
add
push
mov
jae
jns
imul
fmull
dec
xchg
dec
cmp
lret
mov
addl
pop
test
addr16
orb
cwtl
jg
pop
mov
in
daa
sbb
repz
jb
das
pushf
dec
ds
xchg
jno
ljmp
cmp
jmp
ljmp
orl
out
in
in
and
aaa
mov
insb
aad
dec
fidivs
dec
or
pushl
lods
jns
in
test
cmp
adc
mov
mov
push
testb
ds
push
mov
xchg
mov
mov
mov
cltd
lcall
cs
sbb
push
pop
jg
jmp
jmp
cli
stos
dec
pusha
sub
aam
jbe
inc
test
shl
and
sub
cmp
lods
xchg
es
subb
adc
mov
jo
je
dec
add
inc
inc
movsb
jmp
ret
out
sub
adc
and
outsl
jb
lods
push
inc
addr16
pop
fildl
fwait
jns
cmp
subb
inc
push
test
mov
cmc
push
hlt
stos
bound
imul
pop
and
das
dec
push
cs
pop
iret
jle
test
dec
add
cli
ja
mov
add
lods
fxch
sbb
inc
shrl
adc
or
add
sbb
sbb
pop
subl
test
cmp
pop
sbb
sub
or
enter
inc
stc
xchg
mov
out
cmp
int
or
jo
add
mov
push
es
ja
mov
iret
mov
icebp
mov
test
lahf
dec
xchg
stos
addr16
jmp
ss
jno
mov
mov
xor
sbb
lock
stc
and
popa
pusha
mov
fildl
enter
push
lods
rorb
daa
roll
lea
mov
and
int3
or
mov
sti
movsb
inc
or
mov
sbb
push
mov
bound
and
xchg
mov
movsb
mov
add
add
pop
or
jge
and
fsubrp
dec
mov
into
jecxz
jnp
xchg
mov
sarl
stc
pop
mov
push
pushf
lea
push
fimull
and
inc
repnz
or
sub
mov
test
scas
add
call
inc
inc
mov
mov
lods
dec
sub
leave
testb
cmc
imul
fcmovne
xchg
movsb
in
push
js
fcoms
and
cmp
adc
es
insl
mov
cmp
scas
push
out
icebp
loopne
cmp
mov
sbb
mov
cmp
mov
ficompl
lods
push
push
pop
std
sbb
repnz
push
clc
adc
jge
or
cmp
loop
mov
inc
xor
mov
lahf
sbb
lcall
and
xchg
mov
aas
pop
dec
mov
and
xchg
lret
daa
in
inc
std
sbb
in
ror
inc
mov
pop
loopne
les
daa
and
or
arpl
mov
mov
test
or
div
pop
sbb
sbb
shl
std
roll
push
jo
sub
mov
test
mov
test
and
outsb
jle
mov
xor
inc
aam
jno
or
nop
stos
inc
xor
cmc
push
fwait
jae
xchg
hlt
jecxz
fwait
mov
push
dec
mov
iret
pop
push
lret
sbb
icebp
cwtl
dec
and
ret
fldcw
sti
iret
sub
jns
sub
mov
mov
fwait
mov
flds
cmp
ret
or
ret
mov
add
mov
push
mov
inc
pop
adc
mov
mov
dec
sbb
mov
pop
xchg
sbb
xlat
pop
cmp
ret
xchg
lahf
xchg
hlt
bound
cmp
pop
jle
jecxz
cltd
inc
in
gs
jp
inc
push
sub
fists
test
repz
std
mov
pop
mov
les
and
in
sub
push
cmpsb
sbb
enter
scas
sub
mov
xchg
insl
outsl
ss
movsb
cmpsl
fwait
push
xchg
push
jg
xchg
inc
dec
inc
in
jle
outsl
fsubl
or
icebp
dec
lret
adc
lea
mov
push
inc
cmp
push
dec
cmpsw
pop
pop
lods
pop
ja
data16
dec
mov
pop
jl
lahf
mov
sub
jge
mov
push
arpl
jb
xchg
mov
fsubl
enter
clc
stc
inc
add
mov
cmpsl
push
dec
jae
mov
push
ljmp
xchg
xlat
js
jbe
mov
loop
mov
outsl
stc
hlt
int
int3
lcall
cmc
xchg
and
xor
aad
sbb
out
mov
test
out
pop
inc
sbb
cmp
test
scas
mulb
stc
cmp
test
inc
mov
fidivrl
cmp
addr16
sarl
aaa
sbb
and
in
lahf
xchg
fdivrl
sub
sub
mov
xchg
sub
stos
mov
dec
mov
loop
movsl
es
mov
shll
into
inc
popf
dec
mov
out
sbb
mov
push
sbb
stc
dec
cwtl
iret
cmc
sbb
cli
jae
add
movsl
mov
test
loop
test
test
xchg
pop
push
rolb
jmp
mov
arpl
mov
mov
outsl
mov
inc
inc
mov
mov
and
xor
loope
mov
mov
sbb
loope
notl
outsb
push
movsb
in
fstl
xchg
fldl
and
mov
cmp
fldl
push
dec
xor
mov
sub
push
loope
sub
or
mov
cmp
mov
xchg
jne
aad
pop
fwait
mov
pop
loop
xlat
add
adc
adc
mov
daa
jo
ds
mov
fs
push
jne
popf
fimuls
enter
sbb
dec
int3
icebp
ds
add
cltd
test
push
cmp
xchg
ret
cmp
int
jmp
mov
pop
fidivrl
sbb
movsl
loope
int3
dec
pushf
jno
xchg
jecxz
scas
jle
loope
and
outsl
mov
cli
jl
insb
push
sub
sbb
xor
nop
sbb
fadds
or
cmc
mov
sub
xlat
shl
mov
daa
jle
repz
cltd
sbb
ljmp
inc
xor
push
fimuls
and
movsl
push
add
addb
xor
mov
mov
das
fists
pushf
or
xor
push
or
in
inc
push
pop
jg
loop
mov
cmp
cmpb
aad
imul
test
and
pop
ret
nop
mov
push
cmp
cmpb
inc
mov
dec
insb
test
fs
jno
pop
jecxz
popf
out
xchg
add
mov
into
adc
sahf
stc
out
int3
cmpsl
add
aaa
fwait
inc
xchg
int
and
mov
adc
xlat
mul
xchg
mov
stc
adc
mov
dec
mov
dec
push
mov
or
mov
addb
inc
nop
pop
cmp
mov
addr16
mov
call
mov
aam
sti
mul
lcall
cmpsl
pop
lret
xchg
pop
jnp
jmp
loopne
aaa
push
fildl
cmpsb
xchg
sub
add
xchg
sub
xor
add
aad
cmpsb
js
ds
int
mov
gs
push
in
or
dec
lret
dec
es
ret
sub
adc
xchg
and
arpl
cmp
sbb
loop
and
out
cmp
jecxz
scas
mov
pop
insb
add
jno
mov
gs
out
or
stc
inc
lret
int
divl
rcrl
enter
push
jl
lds
out
sbb
sahf
rcrl
stc
shr
inc
pop
push
jcxz
mov
test
ss
cmc
xlat
push
filds
shrb
mov
aas
push
aam
stos
sbb
daa
mov
cmc
mov
adc
push
sub
lock
mov
fwait
mov
xchg
bound
pop
sbb
xchg
xchg
dec
push
sub
out
lahf
test
in
dec
scas
lock
jb
push
push
fldt
repz
mov
mov
ret
test
dec
adc
jno
inc
mov
pop
shrb
int3
lcall
push
or
push
mov
jnp
mov
inc
int3
and
cltd
mov
fldl
rcr
sub
xor
cltd
xchg
push
mov
cmovl
mov
inc
pop
fnstcw
or
test
lret
cli
shll
clc
xor
hlt
push
push
mov
ljmp
addb
jmp
mov
push
loop
add
adc
enter
clc
lret
xor
push
or
inc
test
repz
pop
dec
adc
dec
sbb
rcrb
sub
clc
xchg
out
push
add
fadds
dec
outsb
mov
adc
mov
cld
aaa
lret
dec
jns
mulb
in
aaa
inc
and
sbb
outsl
fimull
push
adc
cwtl
inc
lret
out
adc
inc
daa
lret
loop
inc
mov
pop
in
push
scas
cs
or
cltd
pop
cwtl
cmp
ficomps
mov
mov
mov
lret
sbb
sti
insb
in
and
or
std
add
ja
push
jae
jmp
lea
jo
xor
mov
fsubl
cmpsl
or
sbb
outsb
aas
add
int3
dec
dec
test
in
rolb
shrb
inc
dec
popa
faddl
aas
int3
pop
lret
jmp
xchg
aas
mov
lahf
mov
pop
xchg
pop
in
js
sarl
imul
test
pop
xchg
sahf
hlt
insb
push
rolb
jne
mov
push
xchg
push
shl
cmpsl
fcomps
movl
aaa
jns
adc
je
adc
or
adc
add
das
lods
lahf
ret
imul
fisubrs
push
xchg
add
add
out
repz
push
mov
outsl
stos
sbb
add
or
jno
inc
orl
scas
addr16
and
push
into
dec
add
aas
popa
inc
or
test
das
dec
mov
sarb
sarl
dec
or
push
xchg
xchg
cmpsl
and
stc
mov
push
les
and
pop
sbb
cmp
push
or
out
fsubs
sub
push
imul
push
fisttpl
popa
subb
mov
int3
lea
or
xlat
fnstcw
sbb
sti
repz
jne
outsl
jo
into
push
jbe
xor
ss
stc
adc
pop
ljmp
lea
xor
mov
add
imul
shlb
movsl
lret
outsl
shlb
mov
loopne
mov
push
and
popa
in
jl
cmp
cmp
and
push
inc
dec
rcr
loopne
adc
int3
test
lcall
xor
int3
cmc
insl
outsb
jecxz
adc
dec
mov
mov
inc
ss
ret
cmp
sbb
cltd
adc
mov
cmp
scas
pop
xlat
aam
enter
mov
xchg
mov
push
mov
cmpsl
fdivl
push
and
mov
shlb
lcall
jns
out
or
mov
push
scas
pop
mov
imul
fldl
pop
cmc
pop
rclb
push
sbb
out
sbb
cmp
adc
xchg
imul
add
das
scas
mov
or
cld
mov
loope
data16
jbe
jecxz
sahf
or
sbb
jns
rolb
jmp
pop
mov
cmc
cmp
dec
lock
push
test
jg
lret
and
int3
sbb
clc
or
xor
mov
jb
cmp
mov
in
lea
mov
aad
inc
movsl
inc
in
push
in
clc
cmp
out
mov
lea
cmpsl
shrb
pop
push
inc
mov
xor
sahf
lds
les
inc
mov
negb
arpl
cs
ss
adc
leave
mov
sbb
dec
inc
in
movsb
jp
sbb
pusha
xor
inc
lods
add
decb
xchg
addl
test
fincstp
mov
xor
mov
out
inc
leave
jbe
loop
or
ds
movsl
mov
loop
mov
data16
cwtl
lods
mov
loope
jl
adc
mov
lret
pop
loop
bound
hlt
xor
aas
mov
pusha
insb
mov
leave
mov
mov
add
dec
push
and
jp
sub
leave
enter
lods
stos
shlb
jp
inc
pop
pusha
pop
psrad
pop
imul
push
js
or
jnp
pop
jmp
xor
cmp
in
push
repz
loopne
sub
and
jbe
sarb
and
mov
pop
add
mov
lea
and
adc
pop
icebp
dec
xchg
jmp
lods
je
call
popa
mov
stc
aas
out
dec
push
das
ja
ja
push
lds
and
cmp
jmp
xor
pop
mov
sub
dec
adc
jno
sbb
fistl
stos
xchg
out
loop
xchg
adc
pop
jge
insb
or
push
add
jl
push
rolb
aad
jle
call
mov
sub
dec
ds
repz
sbb
dec
das
int3
add
push
xchg
sub
lret
xlat
mov
imul
fwait
push
or
push
add
test
sahf
push
jg
lcall
fwait
das
outsl
sahf
sub
jnp
out
in
push
sbb
cltd
xchg
arpl
outsb
jmp
cmp
lea
movl
loopne
cld
mov
ror
aad
loope
incb
push
jo
xor
dec
clc
xor
loope
dec
add
lods
popa
sbb
xchg
jecxz
enter
sbb
mov
push
dec
aas
sbb
pop
shrb
mov
in
pop
es
cmp
adc
sbb
adc
es
mov
cmp
jl
and
and
pop
cs
aaa
cmpsl
and
cmpsl
fwait
jno
cwtl
movsl
sub
cmp
cld
aas
and
jp
mov
mov
mov
fcmovb
lret
ffree
and
mov
jmp
jno
aam
push
aas
dec
push
mov
lea
pusha
mov
dec
or
cmp
pop
fs
cmp
test
add
adc
adc
sahf
sbb
jbe
call
sbb
and
pusha
mov
jno
aad
xlat
sarl
xorb
fimuls
int3
fcmovne
pop
pop
popa
adc
fsubrs
mov
daa
mov
dec
sbb
or
leave
jns
push
jmp
xchg
pop
fistl
inc
push
lea
repnz
sub
fstp
cmp
pop
jno
pop
xchg
in
je
mov
xchg
add
mov
lods
ds
jb
xchg
shr
inc
pop
icebp
leave
adc
into
cwtl
xchg
fildll
sub
fs
xchg
lahf
sbb
repz
test
daa
xchg
mov
push
insl
movsb
xor
jo
xchg
fwait
add
sbb
push
adc
mov
daa
mov
lret
adc
mov
jge
cli
lods
enter
mov
loopne
jnp
ljmp
mov
shlb
fcomip
shll
push
cs
in
mov
mov
jne
dec
jl
imul
lds
fucomi
bound
xchg
lods
cmp
lds
xchg
pop
jnp
repz
cwtl
jnp
aaa
mov
test
inc
enter
mov
push
in
jecxz
push
daa
and
push
xchg
out
xchg
xor
into
or
add
mov
iret
cltd
and
pop
jbe
sbb
push
ret
jp
fcoms
imul
subl
enter
xchg
jbe
dec
mov
mov
cmp
daa
pusha
ds
fldt
clc
push
es
lock
sub
jmp
imul
and
ja
xchg
dec
push
adc
fsubrl
jle
cmp
in
push
xchg
xchg
push
testb
popf
mov
or
jno
mov
div
mov
or
mov
maxps
filds
or
cwtl
push
test
aaa
stc
lret
inc
push
lods
jne
adc
es
rcrb
mov
jnp
andl
mov
sub
cmpsb
cli
dec
pusha
and
add
pop
pushf
cmpsb
cmpb
lock
mov
ljmp
cmp
test
and
std
mov
int
mov
not
das
sbb
mov
lods
jmp
xor
or
ljmp
pushl
lret
stos
dec
mov
lret
test
cs
mov
sub
dec
or
pop
ds
jnp
addr16
subb
sbb
sahf
call
mov
movsb
mov
push
mov
mov
pop
pusha
dec
lcall
push
push
cmpsl
mov
je
jecxz
lret
hlt
fwait
cmc
sub
mov
into
pusha
cmp
aad
push
std
sbb
leave
out
jno
imul
mov
mov
fisttps
inc
fwait
pop
add
aad
dec
jl
inc
fcmovnu
cld
xor
push
out
clc
jle
adc
popf
rolb
out
mov
inc
pop
add
adc
fldt
xchg
mov
fsubl
insl
pop
cmp
cs
out
fldl
mov
insl
stos
cmp
data16
nop
shr
push
out
push
subb
clc
fistpl
add
out
in
cld
call
xchg
pop
push
stos
xchg
pusha
in
ficoml
cmp
imul
push
mov
lret
sbb
in
jno
mov
rcrb
sbb
call
or
sbb
pop
and
sub
sbb
insb
aam
sub
sbb
lds
jmp
js
test
push
sub
cmp
dec
inc
iret
jl
ljmp
or
mov
cs
add
nop
jle
iret
dec
cli
or
sbbb
in
cmp
ret
dec
cli
xor
lahf
push
xor
pop
sub
lods
std
mulb
cmp
mov
inc
std
std
jl
pop
mov
pop
fisttpll
movsl
pushf
dec
inc
adc
xlat
xchg
inc
addr16
dec
das
subl
add
test
cmp
mov
push
ja
xchg
lret
gs
xorl
inc
dec
mov
mov
aaa
and
dec
sub
scas
adc
push
cltd
or
iret
fbld
cmpsl
loope
out
jbe
jmp
test
imul
shrl
cmp
lods
cmp
sub
pop
inc
dec
xor
cmp
std
out
iret
or
add
je
mov
shll
cmc
xorl
call
ljmp
sbb
add
jg
jg
jge
mov
in
pusha
and
mov
mov
pop
gs
cmp
xor
inc
adc
pushf
scas
xchg
in
cli
stos
rcl
addb
testb
jl
push
shll
pusha
and
lret
xor
lock
push
xor
clc
int3
mov
mov
lock
popf
and
cltd
testl
sbb
enter
pusha
dec
adc
jmp
cmpsb
cmp
ljmp
insl
xor
fmuls
cmc
pop
leave
fwait
add
dec
lods
adc
jl
xchg
out
mov
fdivl
fimull
fbld
cli
sbb
sub
and
movsb
jle
sbb
mov
insb
xor
scas
fsubs
cltd
cmp
xchg
in
push
xchg
add
lret
inc
test
lcall
jl
or
aas
jnp
cmp
cmp
daa
mov
jp
scas
icebp
test
idivb
mov
fimull
dec
sub
push
aas
std
ljmp
ja
sbb
shld
sub
xchg
add
in
lock
int3
pushf
lods
cmp
fsts
mov
jle
xlat
aam
push
es
cmp
shrd
mov
nop
adc
sbb
stos
push
jl
sbb
das
push
aas
iret
dec
or
xor
mov
cmp
xchg
les
sbb
movsb
mov
cwtl
or
in
sbb
imul
test
in
shll
xchg
ret
nop
or
fsub
js
call
dec
lret
inc
aad
push
std
ret
xchg
push
scas
lahf
fcoms
sahf
push
push
ds
mov
out
adc
or
jb
pop
mov
scas
pop
mov
mov
pop
jae
bound
repz
sub
icebp
dec
lahf
jl
addr16
in
jno
jge
mov
push
testb
pop
jb
stos
lods
nop
jl
mov
mov
loopne
and
imul
popf
mov
mov
sub
daa
cmp
and
lea
and
cwtl
adc
pop
popa
push
arpl
fwait
hlt
imul
xor
sub
inc
rcrl
in
aam
divb
xor
xchg
dec
int3
jp
or
insl
test
fidivrl
sbb
add
lahf
stos
pop
out
test
lret
pop
jae
push
push
div
scas
dec
sarb
lds
fimull
cmp
sub
insb
add
subl
dec
jecxz
sub
jno
movsl
fistpl
fucom
stos
adc
xchg
or
cmc
les
fdivp
sbb
test
add
or
testl
adc
mov
stos
adc
and
ljmp
adc
dec
push
sbbb
arpl
push
push
pushf
out
sbb
xlat
stc
xor
hlt
pop
mov
push
mov
cmp
adc
insl
pop
mov
or
jge
lret
les
jmp
fmull
push
sahf
js
in
inc
pushf
mov
inc
or
add
adc
jge
adc
aas
sub
mov
shrb
xor
jb
stos
pop
jg
push
addr16
cmp
fsubrl
jne
enter
int
pushl
push
nop
xchg
sahf
pusha
in
out
fimuls
mov
or
testb
adc
jle
dec
mov
jb
stos
ja
cmp
sahf
cmp
std
arpl
ret
push
push
sub
jnp
stc
sbb
dec
inc
insl
movl
cmpsl
stos
das
test
idivl
mov
cmp
ss
fnstcw
sbb
movsl
sahf
fdiv
scas
test
divl
cmp
xlat
cmpsb
ljmp
inc
outsl
sbb
xchg
aas
bound
lods
popf
sub
ss
in
xor
mov
movsl
push
xlat
cmp
hlt
dec
data16
stc
adc
sbb
mov
mov
jns
sub
xchg
add
imul
sbb
pop
test
jbe
fucomi
in
cld
mov
arpl
aaa
push
mulb
test
pop
sbb
sub
pop
lods
rcl
xchg
scas
mov
pop
addr16
int
inc
shll
and
movsb
fcmovne
jo
push
inc
out
dec
test
mulb
subl
jle
mov
xchg
inc
xchg
imul
lcall
push
pusha
xor
push
mov
jp
imul
dec
idivl
or
push
stos
iret
outsb
enter
mov
sbb
es
push
imul
cmp
mov
mov
adc
cltd
push
iret
mov
lret
jge
cmp
imul
mov
and
mov
inc
adc
mov
adc
aas
mov
lock
push
sbb
out
ret
outsl
in
pcmpgtw
imul
pop
loope
cmc
enter
repnz
cwtl
sub
sub
xchg
sahf
dec
fisttps
je
mov
adc
dec
jnp
movl
mov
test
mov
pop
das
test
add
scas
shlb
mov
aas
cmp
mov
push
rcll
mov
mov
pop
cli
ds
int3
js
das
jl
loop
jp
push
xor
mov
sub
push
xchg
xor
shll
adc
cmp
or
test
out
filds
popa
or
call
jle
mov
icebp
rolb
jns
ljmp
mov
mov
mov
imul
addr16
loop
cltd
fucomi
cmp
sbb
hlt
add
pop
jge
push
sub
lods
data16
cwtl
adc
bswap
sarb
rorb
out
out
in
mov
imul
xchg
mov
push
hlt
xchg
dec
jecxz
repnz
leave
push
xchg
ret
sarl
mov
mov
add
ljmp
imul
mov
bound
call
mov
les
sub
fadds
dec
shlb
aaa
hlt
dec
lods
mov
mov
mov
stc
cmp
xchg
mov
jecxz
xchg
mov
divl
das
xorb
fsubs
jmp
neg
sub
mov
mov
or
inc
sub
adc
pop
lock
mov
pop
push
pop
arpl
test
fdivrl
dec
jmp
inc
and
push
ds
dec
xchg
fistpl
mov
push
cmc
insl
xchg
pop
mov
insl
mov
call
or
pop
loop
cld
xor
xchg
in
fwait
jge
xchg
xchg
out
xor
aaa
cmp
mov
out
or
pop
cmp
in
aas
pusha
call
xor
sub
mov
loope
ficoms
pop
fildll
xchg
mov
das
mov
into
push
jb
loopne
aaa
add
insl
push
push
mov
jno
jo
pushf
fsubs
mov
dec
xor
mov
add
jl
pop
loope
js
cld
dec
aaa
mov
cmp
sub
dec
lods
mov
arpl
scas
jge
bound
pusha
xchg
ret
call
jb
pop
shrl
daa
xchg
push
ja
xor
bnd
lods
fwait
or
jmp
shlb
and
sbb
push
push
loopne
inc
fsubrp
mov
fdivrl
xor
sahf
imul
rorl
js
cmp
push
int3
dec
lock
push
jg
jb
mov
jo
xchg
sub
mov
fcomp
addr16
loop
xchg
sbb
fstpt
dec
lea
movsl
call
and
adc
inc
jo
mov
jmp
or
std
lea
xchg
jo
jbe
mov
mov
add
sub
mov
xlat
cmpsb
pop
add
scas
jne
dec
mov
scas
gs
ficoml
mov
dec
aaa
test
mov
movsl
mov
jge
xchg
je
pusha
and
arpl
add
push
and
and
insl
jo
mov
inc
cmp
addr16
movsb
push
cmp
movsl
mov
addr16
flds
pop
imul
push
inc
and
cmp
xchg
push
pop
insl
mov
or
sbb
fnstsw
jp
movsl
dec
mov
jmp
sbb
stos
and
mov
xchg
or
movsl
lret
popa
cmpsb
movsb
dec
pop
dec
mov
dec
xchg
ret
push
adc
pop
std
leave
pop
xchg
mov
andb
daa
jecxz
jnp
xchg
cmp
add
out
dec
leave
mov
mov
xchg
sub
mov
sub
sbb
push
lret
ja
push
or
xchg
dec
es
sub
ret
jl
lret
scas
leave
shlb
and
sub
sahf
cmp
mov
popf
add
dec
imul
mov
add
ja
enter
mov
leave
leave
and
stos
inc
mov
pop
in
fidivrl
int
pop
push
daa
ret
xchg
mov
push
mov
add
hlt
dec
jecxz
sub
cmpsb
sbb
bnd
out
jb
ret
ljmp
cmp
cmc
stos
inc
cmp
jo
in
popf
push
inc
lahf
clc
mov
cmp
out
hlt
pop
loopne
les
inc
xor
outsb
inc
sub
call
pushf
loop
test
xchg
cmc
sub
and
testb
outsl
icebp
mov
push
and
xor
test
int
test
dec
nop
test
mov
dec
fnstcw
jp
mov
addr16
pop
inc
mov
test
es
mov
icebp
das
fwait
pop
mov
loopne
dec
repz
addr16
daa
mov
lcall
cmpsb
xchg
sub
mov
and
test
push
sbb
insl
sahf
mov
das
inc
aaa
call
popa
out
out
cwtl
sbb
mov
cwtl
jbe
or
ss
add
fstpt
sub
add
mov
adc
sbb
xchg
pop
xchg
in
out
jg
bound
or
jae
icebp
dec
inc
cwtl
stos
push
fcmove
cmp
fwait
jnp
cld
andl
bound
ret
cwtl
add
cld
adc
pop
pop
push
lds
arpl
arpl
loop
lods
sbb
sti
scas
mov
lods
adc
out
and
add
cmp
gs
lea
jnp
and
scas
and
xchg
mov
jae
shrl
cmpsb
mov
dec
xor
arpl
jl
gs
xlat
or
fwait
mov
xchg
out
mov
shrl
test
pop
lock
in
mov
xchg
aad
daa
sbb
jo
adc
inc
sbb
rcl
pop
sbb
add
shr
das
mov
lods
cmp
pop
pop
add
push
xchg
push
mov
xor
jmp
adc
stos
mov
sahf
cld
or
mov
cmpsb
dec
add
outsl
sbb
xchg
inc
or
adc
aas
cmp
filds
jl
push
mov
add
add
scas
dec
mov
into
sub
call
mov
mov
test
in
jo
imul
addr16
fbld
xor
aad
mov
pop
daa
fcmovu
xor
mov
test
sbb
sub
sbb
mov
stos
es
cmp
xchg
or
lds
fs
es
jp
add
cwtl
adc
popa
aaa
inc
lods
lahf
xchg
and
add
sbb
cmp
int
xlat
lock
movsb
sbb
movsb
xor
in
ja
adc
test
mov
repnz
loopne
push
xor
dec
cmpsb
js
jb
sarb
or
dec
enter
xchg
cld
rcll
mov
jge
mov
sub
pop
decb
test
mov
arpl
repz
ss
pushw
inc
add
jmp
pop
mov
mov
push
dec
out
jl
loop
int3
add
outsb
cmc
jmp
dec
out
dec
jae
aad
orb
xchg
cmpsb
or
in
jl
ret
mull
jge
cwtl
inc
clc
mov
xchg
mov
and
insl
fs
es
push
mov
mov
mov
mov
push
add
pop
dec
xchg
jp
dec
push
call
jbe
loop
mov
sub
outsl
test
in
pop
dec
test
sbb
repnz
inc
cmpsl
cmp
arpl
cmc
jnp
out
cmp
in
pop
sbb
dec
mov
adc
xchg
and
popf
in
mov
push
fmuls
in
jmp
popa
cmc
in
xor
fnsave
int3
lret
lea
add
pop
pop
xor
xchg
bound
xor
or
and
xor
cmc
in
and
mov
pop
add
and
adcb
shlb
mov
in
sti
lret
pop
inc
mov
pop
sub
scas
lret
and
sub
out
pop
jp
sbb
mov
dec
jnp
mov
in
push
mov
adc
imul
xlat
nop
push
adc
adc
or
js
xchg
and
and
jmp
gs
fs
pop
sub
jp
add
add
sti
xchg
jle
mov
nop
add
jl
push
jo
divl
sub
movsb
lahf
sti
inc
dec
aaa
or
incl
in
shl
lret
push
lret
mov
outsb
xchg
enter
xchg
adcl
push
stos
xchg
push
xchg
jne
push
mov
mov
and
cli
push
cmp
les
jle
sbbb
enter
jbe
lods
sar
je
mov
and
cmpl
hlt
roll
mov
add
gs
popf
inc
and
mov
jnp
mov
jl
xchg
das
outsl
mov
clc
push
and
or
sub
adc
xchg
loope
dec
jns
fiaddl
adc
push
dec
mov
inc
insb
ret
loope
or
push
ret
dec
adc
fists
push
int3
mov
push
bound
cmp
mov
sub
jge
aad
add
jge
pushf
lods
mov
xlat
insl
ret
pop
insl
les
out
sbb
enter
stos
adc
js
gs
sbb
popa
push
jne
pop
mov
hlt
repz
fisubrl
sti
scas
ret
jl
xchg
es
cld
xor
enter
inc
jmp
and
xor
inc
jle
stos
in
xor
mov
js
xchg
or
nop
push
jmp
adc
jb
pop
int
into
imul
mov
xchg
inc
mov
rcll
xor
aad
xor
mull
lea
nop
jae
push
addr16
lea
adc
inc
mov
stc
xchg
jae
nop
fimuls
sbb
cmp
xchg
aas
mov
xor
xchg
shlb
push
clc
and
lret
jmp
xchg
imul
mov
mov
adc
fcompl
aam
mov
pushf
sahf
pop
cmp
or
inc
xchg
mov
xchg
ds
ljmp
fsts
fildll
pop
and
fdivr
pop
bound
mov
jge
je
pushf
cltd
icebp
dec
pop
and
arpl
mov
pop
sbb
test
dec
jo
shll
cmp
scas
push
mov
sub
adc
add
mov
jl
mov
lock
aad
clc
inc
insl
in
add
or
insl
jl
out
das
out
jns
out
jge
mov
add
inc
inc
filds
das
loop
test
dec
je
andb
xor
and
inc
push
adc
add
and
jg
mov
mov
adc
negb
data16
fisttpl
neg
push
cs
ja
sub
adc
add
xor
inc
int3
lret
aaa
push
push
sbb
daa
jg
vdivss
push
and
jo
mov
dec
imul
inc
sub
sbb
inc
push
outsl
test
add
js
jo
and
pusha
int3
or
lahf
cmp
negb
adcl
and
sarb
xorb
adc
cmp
mov
movsl
sbb
ss
int3
mov
movsl
mov
add
inc
stos
fisttps
mov
fidivl
into
mov
adc
dec
lds
sub
fsubl
cmp
dec
adc
sub
and
push
push
pop
mov
hlt
mov
data16
das
pop
rcrb
jne
mov
ret
mov
pushl
aad
aam
js
cli
aas
dec
fdivrl
xchg
xor
mov
adc
xchg
mov
je
adc
push
cmpb
mov
out
sub
movsl
xor
jp
push
stos
imul
or
cmpsl
enter
frstor
xor
push
es
jp
push
adc
rcrl
fisttpl
outsl
gs
xchg
inc
inc
push
stos
mov
popa
dec
int3
mov
lret
loop
lods
dec
lock
not
pop
inc
clc
mov
repz
sbb
leave
add
xor
xor
aaa
imul
sti
outsb
push
sub
nop
sahf
adc
sub
pop
aad
jp
cmp
loopne
sub
add
mov
cmp
add
sbb
in
in
call
mov
jge
xchg
jbe
jns
fisubrl
jno
add
mov
or
mov
cmp
xchg
outsb
rcr
je
popa
mov
inc
ljmp
movsl
add
loopne
jb
pop
test
inc
sub
and
push
push
mov
arpl
ret
ss
cltd
dec
xor
scas
into
stc
lcall
cwtl
lea
arpl
push
dec
add
push
push
jae
sahf
or
xor
xchg
fsubrl
ja
mov
cltd
mov
push
lahf
push
inc
dec
sti
test
inc
sub
jmp
and
aad
inc
mov
ret
xchg
ja
sti
test
les
xchg
das
adc
add
sub
dec
xchg
mov
insl
aam
addr16
jbe
push
sbb
push
fbld
mov
mov
dec
pusha
mov
call
jecxz
adc
xchg
sub
sbb
jb
xor
fnsave
lods
leave
movsb
push
out
push
ficoms
xchg
std
add
mov
inc
push
mov
outsb
push
mov
fdivr
subl
jns
js
sbb
cld
mov
ja
call
dec
jnp
push
sti
lahf
lahf
popa
test
xchg
sub
scas
into
scas
adc
cmp
addb
out
push
jmp
push
push
mov
xor
int
mov
fsubrl
flds
or
ljmp
jp
pop
add
and
inc
nop
vpaddsb
inc
test
lahf
jo
jecxz
mov
mov
movsb
xor
clc
call
arpl
les
stc
iret
loope
int
arpl
insb
mov
jns
push
jecxz
cwtl
outsl
pop
fidivl
mov
jg
cld
lret
mov
hlt
push
dec
nop
and
cmc
insb
popa
outsb
sbb
orl
lds
imul
jmp
mov
lret
out
lea
push
fidivl
cmpsb
ss
cmp
dec
imul
fisttpll
jne
push
mov
rclb
inc
add
mov
and
xor
scas
cmp
stos
mov
mov
inc
dec
scas
or
jne
iret
into
movsl
push
pop
jg
add
movsb
or
mov
lahf
outsl
jo
lds
xor
out
sub
pop
inc
xchg
dec
loopne
ds
fcmovu
out
mov
jno
loope
mov
cmp
fisubrl
sub
pop
jb
push
lcall
add
mov
sbb
sarl
je
mov
jl
mov
add
inc
push
inc
dec
sub
cli
stos
mov
repnz
arpl
cmp
inc
aam
xchg
xchg
lret
inc
gs
pop
or
fwait
or
sbb
sbb
lcall
sahf
fnstenv
test
mov
hlt
cwtl
daa
rcll
notb
xchg
dec
outsl
pop
sbbl
cmpsb
jg
leave
js
pop
lds
js
mov
xchg
push
add
call
cli
cltd
test
mov
sbb
pop
adc
lret
test
jne
push
inc
sub
mov
lods
push
mov
hlt
sub
xor
ficoms
aaa
add
cmpb
rorb
jbe
adc
pop
jne
sub
cmovnp
clc
nop
loopne
popf
dec
ret
pop
repz
and
xor
mov
mov
cltd
mov
mov
and
add
jne
ffreep
jb
negl
mov
sub
mov
outsb
xchg
dec
push
fs
add
cwtl
lds
ss
jp
and
loop
mov
jmp
loop
out
sti
and
mov
mov
xchg
ss
mov
lahf
and
or
test
xchg
mov
jl
jle
mov
sub
mov
js
lcall
into
roll
mov
push
push
std
mov
xor
std
cld
lcall
mov
add
in
ja
shrl
outsb
or
mov
lea
cmp
fwait
and
es
mov
xchg
sbb
and
push
xor
xchg
subb
jae
cmp
insb
mov
sti
wrmsr
rclb
bound
insb
fisubl
push
sahf
mov
repnz
push
add
pop
ror
xlat
dec
mov
cmp
loope
mov
add
lods
pop
cmp
cs
push
bound
or
xchg
xchg
push
repz
cs
dec
mov
jno
pop
or
or
jge
push
and
jbe
xor
mov
fst
movsb
add
mov
test
fmull
je
cmp
bound
mov
mov
xorb
push
inc
jmp
popf
nop
ret
add
add
mov
xchg
ljmp
dec
das
invd
shr
cwtl
xlat
push
and
jle
lcall
mov
push
inc
icebp
lea
cltd
lds
iret
es
push
mov
push
sub
xchg
mov
mov
xlat
sbb
aaa
push
dec
stos
or
je
mov
xlat
push
sub
das
aas
jae
adc
cmp
jmp
push
or
or
cmpb
dec
add
xor
in
sub
loope
add
ds
stos
xchg
in
repnz
lret
stc
jg
cmp
mov
xchg
mov
mov
inc
mov
ficoml
xchg
mov
daa
push
jl
mov
in
jo
adc
jo
in
into
loop
sub
imul
and
sub
mov
xor
mov
faddp
push
popf
or
or
movsb
cltd
lahf
call
test
add
cmp
add
js
xor
fdivrs
movzbl
cs
dec
dec
jge
mov
xor
movlps
mov
mov
ret
call
mov
xor
fisubrs
sbb
and
mov
pop
or
dec
or
fs
cmp
pop
pop
push
je
rolb
lcall
cmp
js
sbbl
scas
iret
jge
dec
scas
adc
lods
adc
pop
cmp
lods
cld
push
jg
jns
sbb
dec
mov
test
ja
movb
hlt
fsub
and
adc
flds
out
lock
je
je
dec
repnz
cltd
mov
pusha
insl
rolb
mov
out
xor
shll
fsubs
pop
mov
sti
mov
inc
fcmovb
das
sub
adc
mov
addr16
nop
xor
pop
inc
rclb
mov
and
push
mov
jp
xchg
imul
cmpl
cmpsb
xor
xchg
and
xor
jno
aas
ret
push
mov
ja
stos
xor
pop
in
xchg
icebp
adc
subl
push
loope
dec
lods
mov
pop
popa
addb
mov
les
scas
sbb
mov
sub
adc
shlb
cmpsb
cmp
lret
outsb
iret
add
test
lds
dec
fbstp
bound
cmpl
inc
sbb
adc
repz
mov
test
in
movsl
lods
pop
cmp
jmp
mov
test
add
mov
sub
call
xor
pop
mov
mov
cmpl
loop
mov
movsl
leave
mov
cs
inc
andl
cs
cmp
push
and
loop
jmp
add
mov
jg
hlt
push
xchg
cltd
mov
xor
mov
dec
xchg
push
aas
inc
test
and
arpl
loopne
xchg
jno
stc
xchg
hlt
add
in
ficompl
push
ss
outsl
or
sub
adc
mov
jg
cmp
shrl
and
adc
ja
push
movsl
sbb
inc
xchg
jmp
int3
sarl
xchg
xor
fmuls
cmc
mov
xor
leave
jnp
sti
pop
mov
in
lahf
ret
ljmp
push
jbe
xchg
mov
cmc
loop
mov
scas
pop
mov
push
insb
pop
add
xchg
inc
or
mov
cmpsl
fwait
xor
pop
fistpl
pop
fsubrl
cmp
push
ds
xchg
mov
int
aaa
and
fs
outsl
dec
in
pop
xlat
std
push
mov
es
rcll
push
push
leave
fcompp
xchg
mov
ret
sar
mov
inc
mov
inc
dec
repz
bound
cmc
xchg
test
adc
cmp
lds
xchg
and
test
sbb
mov
aad
and
sbb
loope
pop
loop
addb
in
and
adc
std
pop
out
and
int3
js
cmp
pop
pop
aam
jb
inc
pop
in
lret
enter
mov
cmpsl
fwait
sub
cs
into
cltd
jl
iret
sti
leave
sub
adc
loopne
jb
xchg
pop
popa
adcb
fwait
push
test
xchg
mov
mov
rcrb
push
mov
cmpsb
shlb
nop
sub
pushf
loope
inc
mov
test
ja
testl
cmpsl
test
sbb
cmpsl
in
out
mov
mov
or
out
icebp
inc
enter
add
xchg
insl
jnp
dec
mov
xor
icebp
pop
les
push
cmpb
xor
pop
dec
ss
or
sub
cmp
lret
popf
test
mov
inc
cmp
xor
loop
cmc
xor
cmp
xchg
lret
rorl
inc
jge
pusha
test
mov
adc
sub
fs
or
mov
ss
mov
imul
mov
xchg
rcrb
fnsave
pushf
ret
or
es
pop
aam
lock
jb
jmp
lahf
repz
out
pop
mov
lret
pushf
flds
fbstp
ret
lods
jb
leave
movsb
mov
pop
xlat
mov
push
divl
adc
or
cmp
outsl
flds
rclb
movsl
lds
inc
jnp
mov
pushf
pop
jb
mov
dec
clc
cltd
pop
sbb
mov
shr
repz
mov
dec
aaa
add
and
das
dec
sub
cwtl
mov
dec
icebp
loop
push
or
push
outsb
lds
and
fimull
ss
adc
sub
jge
cmc
pop
mov
mov
jp
aas
push
rcrl
xor
cwtl
push
push
scas
ret
aad
nop
pop
or
pop
rep
pop
cmp
jge
in
in
mov
jns
loop
lahf
xchg
int
into
mov
and
and
fucom
clc
jns
pop
pop
mov
pop
popa
test
stc
inc
popf
je
cmp
or
xchg
mov
rcrb
add
jecxz
incl
jle
sbb
iret
fs
mov
rorl
mov
or
imulb
or
mov
mov
cmp
test
mov
fs
hlt
lds
into
sub
mov
and
push
sub
mov
dec
add
lcall
mov
inc
out
lods
xor
faddl
sbb
outsb
inc
dec
cmp
jmp
mov
filds
movsl
in
pop
cmp
xchg
fdiv
sarl
add
push
lret
bound
add
aad
gs
mov
jo
fisubrs
scas
mov
mov
mov
stos
push
push
scas
scas
mov
or
stos
and
insl
sub
cld
ja
adc
or
or
lock
lahf
push
and
ja
jmp
cmc
hlt
cmpsl
jecxz
stos
sbb
jns
cmp
sub
jnp
cmp
sub
push
test
jnp
sub
scas
and
out
jmp
test
shll
push
int
bnd
cmp
pop
ficoms
xor
fistpll
sahf
sahf
or
add
and
push
shl
sub
pushf
cmp
insl
imul
insb
pop
int
dec
xor
enter
and
dec
cld
mov
and
and
mov
mov
dec
xchg
xchg
push
les
enter
lret
mov
xor
xor
add
mov
mov
mov
sbb
cmp
mov
inc
sbb
enter
cs
push
imul
jbe
testl
fs
pop
movsl
jmp
fs
lcall
pop
sbb
sub
lahf
xchg
add
pop
ss
and
call
mov
xchg
push
xor
or
or
xor
andl
fdivr
inc
mov
mov
xchg
xchg
test
xlat
jno
ret
cmp
mov
fisttpl
or
fisubl
int
test
mov
inc
insl
in
ror
out
sbb
add
pop
dec
jle
int3
out
jne
cli
cmp
test
in
push
adc
shll
jl
jns
clc
mov
jle
adc
or
adc
dec
mov
inc
or
add
pop
bound
or
rorl
mov
jmp
dec
es
adc
or
mov
and
and
lahf
lcall
jp
add
add
jecxz
outsb
lds
je
sbb
mulb
in
in
add
aas
pop
out
mov
out
pop
dec
in
jo
dec
pop
popf
add
mov
dec
lcall
push
xchg
aad
mov
push
adc
subb
lret
inc
in
mov
mov
sbb
jp
mov
mov
je
sbb
in
mov
add
repz
in
xorb
dec
out
pop
in
and
pop
in
dec
arpl
ret
mov
pop
push
cmp
fsubrs
xchg
imull
rolb
popa
inc
jne
push
adc
test
cmc
and
sar
fs
sahf
push
insl
jo
stos
adc
aaa
fsubp
push
aam
cmp
insb
testb
add
mov
outsl
out
push
jge
inc
mov
movsl
in
mov
xchg
lcall
mov
push
insl
pop
decl
roll
aas
aas
push
or
jb
jo
test
popf
repnz
out
mov
or
hlt
adc
mov
sbb
push
sti
push
into
in
jbe
xor
pop
pop
mov
jns
dec
mov
inc
xorb
xor
ror
int
mov
sbb
ret
push
mov
js
mov
add
int
sbb
testl
and
xchg
cmc
cmp
popa
fistpll
inc
scas
push
or
mov
pop
icebp
dec
outsl
mov
fcoms
cmc
popa
enter
push
push
roll
mov
ss
hlt
mov
jb
std
ret
popl
mov
mov
mov
fisttpll
or
into
pop
pop
cwtl
test
jmp
mov
fsubr
xlat
hlt
xchg
lret
jecxz
push
in
jae
ljmp
cld
xor
jb
std
outsl
sarl
push
jne
push
jecxz
pop
xchg
dec
push
cwtl
mov
ss
dec
pop
fnsave
adc
inc
push
cmpsl
and
orl
iret
outsb
pop
push
cmc
out
lret
add
roll
int3
or
cmp
mov
loope
mov
adc
mov
cmpb
pop
flds
inc
popa
add
jb
stc
test
rcr
xchg
push
pop
cmp
xor
pop
adc
in
add
push
mov
jno
aad
popf
mov
jecxz
fidivl
ds
mov
mov
mov
test
in
ret
mov
jmp
test
xor
pop
arpl
adc
aad
sub
add
out
notl
xor
or
xchg
out
and
xor
mov
cld
shll
jo
cmc
fldl
dec
adc
or
roll
mov
push
jns
fwait
lahf
repz
xor
insb
xor
insb
imul
dec
outsb
pop
stos
orl
add
popf
mov
dec
add
test
les
sar
adcl
test
push
jmp
loopne
and
pusha
sbb
fwait
mov
mov
sub
test
dec
popf
xor
mov
les
mov
jg
addb
pop
sub
inc
add
mov
into
dec
or
je
xor
xchg
sub
fwait
stos
aam
sub
mov
push
js
jne
jmp
or
mov
cmc
add
sbb
cltd
jp
xchg
stos
sbb
cmp
ja
outsb
push
aam
mov
sub
repnz
cltd
pop
imul
lea
jmp
mov
push
sti
andb
repnz
pop
and
inc
mov
sub
outsl
mov
insl
fidivl
inc
lret
popf
add
sub
mov
jl
add
push
lds
mull
pop
rcll
jecxz
mov
in
pop
and
jns
add
int3
pop
xchg
mov
insb
xorb
mov
and
sbb
ja
and
inc
sub
jl
mov
fistpl
shl
in
movsb
cs
jp
fstpl
test
jmp
mov
jo
mov
mov
jo
lea
jne
adc
pusha
pop
cmpsb
sbb
pop
xchg
mov
int
ss
adc
icebp
lcall
mov
cmp
push
sub
mov
repz
rcrl
lcall
add
fldt
fmull
cltd
call
aam
loope
out
dec
sub
or
push
filds
jbe
pop
test
xchg
cmpsb
fldenv
cmp
insl
pop
jns
sbb
std
int3
xchg
sub
sbb
cld
in
das
cltd
xchg
imul
notb
lods
mov
arpl
or
out
int3
adc
out
dec
pop
add
movsb
mov
loopne
mov
dec
stos
jne
fwait
sbbb
push
stc
cli
shl
inc
cmp
in
push
das
or
pushf
ljmp
push
bound
dec
dec
mov
sarl
push
sub
xchg
sub
lods
cmp
lea
mov
inc
and
jge
push
int3
and
sbb
test
popf
xchg
pop
nop
xchg
lds
mov
stc
inc
xor
xor
mov
xchg
mov
cmpsl
fmulp
inc
popl
mov
movl
ret
cwtl
sbb
jno
repz
fmull
cmp
sbb
mov
mov
out
lret
mov
jecxz
inc
lahf
lret
in
mov
xchg
adc
xchg
fldenv
sarl
pop
mov
leave
arpl
dec
movsl
mov
popl
das
cs
push
repz
dec
outsb
mov
push
dec
adc
in
mov
insb
xchg
popa
inc
xchg
xchg
sti
arpl
out
or
dec
repz
xlat
lds
jne
dec
pop
adc
out
lret
ficompl
mov
movb
aam
int
int
loopne
or
mov
mov
mov
das
xor
test
popf
sbb
cmpsl
popa
pop
loope
dec
push
mov
outsl
or
mov
lea
xchg
jmp
pop
dec
lods
fcompl
cmc
clc
data16
pop
jns
lahf
jmp
mov
in
add
fbld
pop
sahf
das
cmp
ficoml
push
movsl
sbb
in
jmp
jnp
jmp
out
outsb
xchg
mov
mov
pop
pop
out
mov
ret
sbb
sub
and
mov
faddl
add
push
mov
push
mov
inc
call
aad
test
mov
xchg
push
insl
and
add
mov
add
jp
mov
mov
cltd
push
mov
cmp
jno
fwait
lret
pop
jne
mov
or
mov
mov
ret
mov
mulps
and
cmp
ljmp
inc
xchg
push
dec
and
mov
inc
mov
bound
push
nop
xlat
mov
sbb
or
mov
daa
xor
test
loope
int
sbb
stc
cmpsb
cli
movsl
pop
popf
ds
mov
push
js
mov
push
adc
mov
push
jb
stos
add
cmp
cmpsl
lret
mov
cli
fldcw
pop
cmp
gs
ja
ret
aam
pop
push
test
mov
mov
jecxz
rolb
push
jbe
dec
mov
test
movsl
test
xor
and
jle
insb
cmp
xchg
jno
in
xchg
mov
sbb
jo
dec
inc
cmp
fwait
cmp
or
sarb
jg
cmpsb
adc
adc
pop
inc
aas
subb
jnp
enter
and
add
fs
imul
mov
jbe
mov
mov
cmp
mov
loope
push
ljmp
and
leave
out
sbb
dec
mov
mov
xchg
pusha
add
jge
lret
push
out
adc
xor
pop
in
data16
jg
sahf
in
addr16
sahf
mov
mov
in
mov
cmp
sub
lcall
lock
es
sbb
lcall
das
xor
jmp
inc
daa
jae
mov
or
and
add
outsl
loop
lret
rep
test
inc
jmp
dec
bnd
les
pop
mov
xlat
insb
out
pop
mov
test
fcomip
and
pop
insb
xor
shr
cwtl
repz
shlb
xor
mov
jns
cmp
scas
movsl
inc
lret
mull
mov
ja
cli
jecxz
jns
lds
pop
cmpsb
cmp
cmp
xchg
mov
pop
scas
add
mov
cmp
pop
pusha
dec
push
popa
insl
cmp
in
mov
lret
and
inc
mov
mov
fwait
pop
adc
sub
or
jle
call
fsubrs
sbb
shrb
jns
adc
push
fs
cmc
in
notl
divl
mov
scas
xor
daa
das
les
jbe
mov
lds
adc
pushf
aam
insl
inc
cmp
inc
test
jp
and
aad
pop
arpl
pop
dec
aad
or
sbb
mov
jge
fwait
outsl
movsb
push
pop
sbb
mov
jb
pop
mov
lret
ss
xor
pushf
loope
inc
push
dec
cmp
loopne
orl
or
lods
pusha
jl
test
adc
adc
xor
pop
loop
call
or
fistpll
push
xor
ds
xlat
ret
and
sub
shlb
fistpll
mov
adc
xor
js
jmp
or
outsb
mov
inc
cltd
push
scas
les
mov
sub
sbb
pop
popa
sbb
lods
jo
aad
fwait
aam
jmp
js
lcall
mov
mov
ret
hlt
sub
fcomps
cmp
or
fdivr
pusha
andl
cwtl
xchg
pop
lods
sub
sbb
bound
ja
pop
jae
and
mov
push
daa
mov
xchg
xor
in
fcoml
inc
cltd
lods
fwait
pop
sbb
repnz
lret
mov
scas
cmp
xchg
orps
aad
mull
dec
mov
iret
cltd
gs
mov
inc
shlb
or
and
imulb
test
inc
mov
jbe
bnd
bswap
dec
mov
out
mov
mov
lea
xchg
mov
jmp
mov
lahf
xchg
scas
sub
jae
aaa
pop
stos
int
aas
cmp
sub
mov
andl
je
jno
pushf
pop
lret
int3
hlt
push
fwait
in
fsts
push
adc
sbb
xchg
ja
popf
invd
add
loope
push
inc
pop
fcmovnb
push
test
roll
mov
inc
xchg
lahf
sbb
xchg
scas
rorb
pop
jg
mov
outsl
mov
loope
stc
add
out
test
xchg
les
adc
xor
jmp
lcall
xchg
sub
xchg
and
lret
lret
outsl
jo
sbb
cmp
cmp
mov
cltd
mov
dec
in
jnp
stc
pop
mov
cmc
push
scas
jb
fidivs
mov
mov
jns
fwait
nop
loope
push
cld
call
lods
fistl
mov
mov
das
test
dec
cwtl
push
pop
dec
pusha
stos
pusha
fsubrs
sbb
lahf
and
sub
dec
push
aad
nop
sbb
xor
fidivrs
or
add
xchg
mov
loop
adc
mov
fldenv
push
or
loope
and
rorb
dec
adc
cwtl
dec
add
call
dec
testl
mov
or
inc
adc
cmp
or
insb
frstor
js
loope
addr16
and
shrl
inc
push
sub
mov
mov
jbe
test
fwait
test
outsb
bound
aad
adcl
inc
lock
jle
inc
jb
mov
cmpsb
mov
sub
imulb
xor
lock
sbb
loop
mov
cmp
fmuls
or
iret
lret
dec
and
sub
mov
or
aaa
add
and
lahf
or
loopne
push
and
mov
cld
ds
mov
mov
fistps
js
dec
sbb
ja
adc
and
arpl
iret
mov
int
cmp
sub
movsl
or
mov
xchg
ljmp
test
int
dec
sub
pop
sbb
or
pop
aam
mov
es
stos
rcrl
sbb
dec
jnp
jge
leave
sti
out
dec
xor
adcb
mov
sub
push
pushf
pushf
icebp
xor
inc
lds
push
xor
mov
xor
filds
adc
scas
scas
pop
push
cmp
sub
in
pop
sbb
or
movsb
dec
inc
add
scas
lods
or
or
push
mov
mov
dec
sar
insb
jbe
and
push
sub
fildll
mov
dec
sub
std
mov
mov
outsb
xor
xchg
push
adc
mov
jl
lcall
into
popl
scas
push
xor
pushf
dec
xchg
outsl
dec
push
test
push
sbb
arpl
insl
dec
js
aad
loope
orl
xchg
into
push
ljmp
cmp
push
lahf
out
fdivrl
sub
fidivs
jg
lods
or
sbb
push
movsl
or
rcl
dec
cltd
mov
scas
in
fisubl
fidivrs
je
lods
cli
cwtl
stos
je
mov
dec
mov
outsb
je
mov
scas
es
nop
rol
jmp
ret
je,pt
push
rolb
push
inc
ja
lret
jns
lods
mov
or
outsl
cltd
mov
adc
ret
lret
or
clc
push
jae
lcall
insb
mov
and
pop
fisubl
imul
in
dec
test
xchg
std
rcrb
mov
cld
push
mov
nop
hlt
lock
and
call
xchg
pusha
jo
ret
insl
cwtl
xor
ds
cli
cmpsb
pop
les
mov
cmp
add
mov
std
movb
imul
push
add
fidivrl
cmp
jno
mov
mov
push
sub
mov
push
dec
jne
ret
test
sbb
sbb
mov
push
stos
add
roll
decl
scas
mov
push
mov
pop
xchg
jb
sub
in
or
push
pop
js
or
mov
inc
push
mov
cmp
sbb
stos
loopne
fcomip
fbld
lds
mov
lods
lods
test
aaa
or
fsts
mov
xchg
inc
pop
lahf
xorb
cld
mov
mov
fildll
dec
ds
cwtl
pop
jmp
gs
lea
mov
enter
xor
mov
shll
sti
pop
jno
mov
cmp
stc
es
inc
mov
jl
adc
dec
mov
out
xchg
sub
dec
imul
ja
cmpsb
xchg
pop
lds
bound
je
into
pop
fwait
jle
addb
data16
xchg
jne
or
xchg
cmpb
fstpl
adc
stos
int3
popf
jns
stc
loope
add
shufps
pushl
ret
mov
in
jg
jo
cltd
pop
mov
xor
push
sub
add
jle
or
cmp
and
outsl
fwait
into
test
add
xchg
insb
mov
stos
cmp
xchg
mov
xchg
pop
mov
inc
test
orb
inc
pop
pop
adc
mov
insb
jns
mov
lods
lock
jp
add
loopne
pushf
or
jmp
fidivl
cmp
mov
xor
mov
out
cmpsb
popa
jo
ret
xlat
scas
push
add
in
jg
adc
scas
push
lahf
fimuls
mov
xor
jge
mov
sbb
pop
mov
jle
jno
movsl
int3
sahf
pop
arpl
out
aam
dec
fnstsw
sbbl
clc
ficomps
jb
insb
rcrb
sar
pop
push
test
sbbb
out
in
ljmp
data16
cs
mov
pop
in
lret
rcl
fnstenv
dec
fwait
jae
push
cld
ror
cltd
mov
push
cmpsb
inc
jmp
add
fcomps
and
dec
add
dec
stos
add
scas
mov
and
mov
jne
loopne
cwtl
add
xchg
push
pop
add
cmpsl
stc
inc
mov
lret
out
rcr
in
jne
aam
sahf
cwtl
lods
push
iret
mov
sti
sti
xor
aad
pop
and
jae
xlat
sub
xchg
adc
out
jno
mov
dec
and
pop
dec
cmc
mov
dec
inc
mov
push
mov
dec
rclb
out
mov
andl
fiadds
pop
cwtl
aam
xchg
flds
sbb
inc
and
and
sti
in
lea
mov
test
add
hlt
popf
roll
sub
fldcw
cmpb
add
xchg
jle
andb
pop
daa
jno
adc
add
or
mov
nop
inc
and
arpl
mov
push
xorb
dec
mov
sbb
mov
cmp
insl
ficoms
out
push
xlat
movsb
mov
adc
dec
jecxz
ds
jae
out
push
jge
das
sub
jg
call
gs
pusha
inc
jno
add
pushf
addr16
cwtl
addr16
clc
mov
xor
jge
aaa
add
jns
pusha
lret
sti
or
mov
sbb
xlat
jle
dec
jp
pop
cmpsl
dec
cmp
mov
jp
movsb
test
loopne
andb
or
aas
iret
scas
cli
pop
into
xor
in
int3
std
aad
cli
and
ds
dec
pop
mov
inc
jnp
cmp
ja
sbb
add
leave
lods
dec
ror
jbe
lods
mov
and
std
xor
cltd
mov
loopne
aaa
fisttpl
stos
test
hlt
lret
mov
xchg
out
enter
es
loopne
les
sub
je
movswl
loope
sub
test
or
adc
loope
movsl
sbbb
movsl
inc
push
mov
xchg
mov
shlb
cwtl
jns
js
jno
loopne
lret
orb
cmc
pop
mov
jl
jl
pop
xchg
adc
push
lods
jae
popa
movsl
sub
xlat
jle
fistps
pop
and
lods
jbe
cmc
cmp
loopne
jp
addl
clc
sahf
push
rclb
and
out
insl
xchg
fidivrl
outsb
ret
sbb
leave
cltd
cmp
inc
fwait
cmc
sub
stos
xchg
mov
pop
sub
fcmove
add
iret
sub
dec
mov
pop
das
dec
insl
out
addb
ret
pop
dec
into
xchg
xor
dec
sbb
pusha
fs
in
adc
xchg
sub
das
ljmp
cmpsl
pop
iret
ds
jecxz
dec
arpl
mov
test
cmp
jecxz
push
outsb
mov
rcll
xchg
or
xchg
aaa
adc
mov
les
shll
adc
sahf
data16
insb
sbb
jge
mov
mov
dec
pop
or
lods
outsb
adcb
lcall
ljmp
lods
xchg
mov
push
icebp
xor
cmp
jb
push
popa
int
fsubs
and
xor
loopne
and
scas
int3
dec
xchg
enter
dec
cmp
sarb
sub
or
insb
sbb
mov
shr
out
sub
outsb
imul
or
jae
lret
push
setle
adc
pop
insb
or
inc
outsb
lods
xchg
xchg
out
mov
xchg
adc
ret
ficomps
call
mov
mov
or
ret
jae
and
dec
mov
mov
add
inc
xor
jl
lods
dec
repz
or
movsl
leave
stc
push
clc
imul
aaa
aas
aaa
test
sbb
adc
sbb
inc
fisttpl
xlat
push
sbb
sub
lea
jg
xor
shll
push
dec
pop
and
xor
push
dec
sbb
aam
imull
iret
insl
dec
jnp
jae
mull
rcrl
fistpll
outsl
test
cld
xor
mov
dec
cltd
jae
jg
mov
cmp
jg
cld
es
jmp
aaa
inc
mov
ret
addl
outsb
mov
ret
mov
mov
fsubl
call
sar
outsb
cmp
stos
aad
xchg
jge
jns
xchg
loope
add
and
jg
pushf
movsl
mov
stos
adc
test
aam
cwtl
cmpsb
cwtl
imull
ja
mov
push
jl
enter
mov
repz
sahf
lret
insl
imul
mov
dec
or
das
outsb
adc
sbb
data16
mov
push
mov
and
mov
and
push
push
test
cs
fsubrl
movsl
es
push
daa
repz
xor
gs
sub
lock
mov
lahf
pop
jnp
sbb
addr16
inc
pop
ret
sbb
mov
mov
sarb
sar
shrl
inc
fnstsw
pop
inc
popa
clc
ljmp
out
or
inc
push
jp
sbb
sbb
js
dec
stos
xchg
fwait
mov
mov
push
or
fwait
sub
scas
xor
loope
cmp
adc
push
jp
je
xchg
xor
add
stos
cmp
sahf
push
and
push
mov
push
or
sbb
js
aam
into
push
in
xor
scas
xor
sarb
mov
xchg
push
xchg
adc
cmp
or
ss
jg
mov
sub
mov
cmp
sbb
je
cwtl
aam
mov
pop
push
pop
and
adc
mov
cmpsl
mov
jne
cmpsb
inc
loop
lods
aas
ret
arpl
lcall
jbe
mov
mov
mov
repz
sbb
push
mov
inc
cld
mov
scas
cmc
push
in
push
cmp
xlat
or
and
cltd
fs
aad
ficoms
and
sub
stos
mov
rcrb
sbb
lods
mov
inc
repnz
mov
push
test
shl
xor
fisubs
sbb
popa
scas
push
cmpb
test
pop
push
les
mov
das
cmp
pop
dec
es
movsl
jno
lret
movsb
fcomip
sub
arpl
cmp
mov
shrb
les
xlat
imul
jp
loopne
or
dec
mov
fisubl
das
into
mov
lret
and
addr16
div
mov
or
ret
add
mov
mov
icebp
jmp
jg
push
and
loope
mov
insb
std
add
daa
test
push
outsl
jno
or
inc
pop
pop
mov
movsl
movsb
cmp
in
or
add
sub
and
mov
jno
lock
add
mov
xchg
mov
testb
rcl
cmp
cmpsl
les
pop
mov
pop
repnz
mov
loop
xor
test
jle
or
sbb
adc
jge
repnz
sahf
fmull
lods
std
fstpt
daa
xchg
push
pop
das
sub
push
or
add
test
fwait
inc
mov
js
jge
or
pushf
inc
jne
insb
jmp
sar
add
inc
enter
nop
push
enter
adc
push
movaps
pop
and
mov
dec
dec
or
adc
aaa
xor
pop
nop
push
scas
and
or
enter
fidivrl
jbe
shll
ficompl
daa
ficoml
pusha
pop
incb
xchg
jne
imul
sbb
and
test
sti
jnp
js
sarb
fs
iret
popa
or
inc
cmpsl
dec
sub
mov
mov
jbe
loop
inc
push
sbb
and
push
dec
xchg
repz
cmp
add
sbb
jns
mov
push
leave
adc
dec
popf
mov
sbb
movhps
xchg
enter
fwait
inc
jno
mov
mov
addr16
clc
mov
sub
repnz
scas
jo
imull
jl
sub
mov
rolb
push
add
pop
in
adc
mov
xor
out
adc
movsl
test
sbb
cmp
out
dec
push
test
push
inc
pusha
lret
popf
negl
outsb
roll
adc
fmul
loop
pushl
je
sbb
xor
and
jo
jo
adc
cs
push
inc
push
test
xor
cmp
sub
lahf
adc
mov
mov
fs
sbb
je
cli
popl
insl
movsb
jg
ljmp
push
fwait
mov
jle
mov
add
lret
inc
xor
xor
faddl
lret
aad
mov
jae
and
pushf
hlt
test
fisttpl
inc
mov
in
jae
sub
fimull
inc
repnz
mov
ds
loope
sbb
ficomps
mov
push
repz
out
push
je
xor
std
xchg
aad
sub
shrl
xchg
leave
jno
push
mov
push
xor
mov
xchg
xchg
and
and
mov
pop
mov
xchg
repz
pusha
inc
pop
ss
xchg
dec
and
shlb
lret
mov
lcall
cmp
daa
xor
jns
scas
mov
iret
or
test
in
fidivrs
shrl
mov
cmpsb
sub
push
mov
arpl
lret
inc
loope
nop
rcrl
call
mov
sub
jle
xorl
repnz
inc
cltd
pushf
push
fcompl
and
cs
sub
cltd
shlb
pop
lea
sbb
stc
leave
jae
int3
bound
ficompl
loope
leave
push
cmp
dec
insl
imul
sbb
sub
pop
or
cmp
mov
xchg
push
mulb
dec
aam
mov
dec
push
cltd
inc
and
mov
adc
popa
xchg
push
ja
cmp
push
enter
inc
int3
cmp
addr16
rcl
adc
testl
sub
mov
fsubrs
out
sbb
inc
cmp
and
scas
xchg
scas
xlat
inc
jecxz
push
data16
hlt
push
jnp
jge
xor
jns
push
adc
leave
xchg
hlt
xor
pusha
loope
xlat
cs
pusha
rclb
in
cmp
push
or
ret
push
or
jb
shl
ss
adc
ss
fsubp
or
xchg
cmp
inc
fstpt
mov
sarb
fcmovnu
sub
mov
sub
adc
cmp
jb
adc
xor
jno
mov
xlat
imul
adc
mov
pop
jae
fisttps
imul
or
push
sbb
and
es
ja
push
xchg
sub
cmpsl
and
out
cmpsl
andb
jno
jne
pop
cmp
mov
xor
xchg
sbb
mov
das
fldcw
jns
add
and
lods
push
jae
gs
cmp
cmc
mov
dec
or
xor
push
dec
pop
std
add
cmp
cmp
sbb
pushf
push
push
lock
or
mov
das
outsl
sbb
jno
stos
mov
pop
fwait
mov
sti
mov
xor
jmp
inc
push
inc
imul
adc
popf
int3
and
dec
pop
notb
inc
xchg
dec
add
pusha
pop
push
adc
cmpsl
imul
and
test
cmpsb
stc
push
jbe
test
push
int3
in
repz
push
aas
pop
std
fisubl
gs
jl
inc
popf
fcomip
xor
lods
loope
js
test
js
nop
sbb
imul
push
negl
stos
insl
xor
ret
rcrl
mov
xor
mov
int
mov
dec
xor
in
push
lret
mov
cltd
lea
inc
cltd
pop
pop
rclb
push
add
xlat
repz
enter
fmuls
and
xor
add
mov
sbb
ljmp
sub
out
leave
stos
jmp
icebp
or
in
jnp
mov
xchg
mov
clc
lret
movsl
je
jnp
int
xchg
cld
cltd
mov
scas
dec
push
inc
pop
out
test
dec
or
into
in
add
nop
leave
dec
push
fdivl
lods
insb
jg
mov
sarb
adc
in
insb
scas
pushf
xchg
push
dec
aaa
shr
fs
mov
lret
lea
adc
inc
pop
iret
aas
int3
shlb
call
int
inc
fwait
lret
lret
test
mov
push
ret
add
mov
add
pop
xchg
mov
xchg
pop
das
or
hlt
mov
or
cltd
daa
call
dec
mov
or
mov
sub
arpl
aam
clc
pop
movsl
inc
adcb
lods
and
adc
cmp
xor
rcrb
jae
cmp
and
push
outsb
pop
jmp
pop
in
jae
lea
test
add
stos
pop
sbb
loop
jb
push
je
lea
rclb
dec
scas
push
xor
dec
cmp
and
mov
sub
push
out
pop
push
push
dec
out
push
out
outsb
pop
jae
out
imul
mov
out
cmpsl
jg
mov
cmpsl
sbb
lods
shrb
xchg
ds
add
ljmp
mov
mov
std
sbb
pop
fcmovne
gs
cmc
aad
aas
ljmp
sbbl
mov
fs
call
dec
nop
dec
jp
jnp
out
rclb
mov
sbb
nop
xchg
mov
sub
xlat
dec
insl
ret
lea
pop
testl
mov
add
popf
in
add
push
sbb
fists
cmp
adc
pop
sbb
test
loop
scas
or
jecxz
dec
pop
adc
jp
loop
xor
add
pop
push
fnstcw
lcall
pop
pop
mov
jns
xchg
cltd
scas
lods
mov
jg
jge
iret
xchg
jge
mov
imul
and
das
pop
mov
push
mov
pop
aad
mov
jge
mov
add
sub
mov
je
dec
adc
in
fwait
dec
jle
fistps
dec
sbb
dec
je
cltd
mov
repz
loopne
cmc
lret
mov
aaa
jmp
adc
sahf
add
pop
xchg
stos
inc
cmp
pop
lods
gs
hlt
adc
jbe
mov
iret
out
outsb
fsubl
fwait
mov
rorb
sub
sbb
movsl
pop
cmp
dec
insl
and
jne
jp
mov
pop
mov
ja
out
inc
mov
pop
sbb
lret
imul
pop
lock
in
in
mov
stos
xor
add
or
pop
or
jns
in
lds
cs
rcrb
adc
push
sbb
mov
repnz
fs
bound
lret
dec
stos
adc
aad
loop
xlat
test
es
leave
dec
rcrb
jae
inc
movsl
std
mov
repz
int
cmc
leave
stos
testb
lret
dec
outsb
adc
decl
xor
mov
pop
xor
xchg
pop
aam
sub
jl
jmp
adc
pop
jmp
test
sbb
jge
cmp
push
mov
iret
add
sub
adc
and
cmp
in
xor
ja
dec
ss
dec
mov
int
ficompl
push
push
inc
push
cwtl
fwait
xlat
inc
adcb
xchg
pop
notb
dec
sub
jns
es
add
mov
dec
mov
cmc
popa
dec
push
jmp
sbb
mov
push
xchg
push
js
shlb
sbb
in
lret
ret
xor
fcomi
xor
jb
mov
mov
push
outsb
jg
sbb
scas
dec
inc
adc
inc
loopne
inc
jo
pushl
mov
inc
jle
fsubrs
dec
psubusb
jns
mov
pop
push
outsb
roll
roll
cmp
and
int
clc
mov
or
xchg
push
lods
sub
inc
pop
jne
cmpsb
mov
divl
and
lret
cmp
mov
lret
mov
jo
adc
filds
dec
mov
leave
mov
sbb
pop
repnz
mov
dec
iret
and
inc
rclb
andb
mov
jo
push
mov
test
daa
hlt
jecxz
push
out
pushf
jecxz
cs
ret
dec
out
nop
sti
push
iret
mov
adc
inc
xlat
cwtl
int3
lret
inc
or
stos
jge
xorb
and
cmp
test
push
xchg
adc
push
mov
xchg
and
push
ficompl
cmp
fisubl
or
adc
mov
stos
push
andl
cmp
xchg
jecxz
je
and
les
sub
pop
xchg
inc
fs
mov
mov
cmp
inc
pop
mov
dec
je
in
scas
enter
loope
mov
ficoml
fcomps
cmp
xorl
mulb
insb
or
das
cmp
mov
addr16
mov
push
jns,pt
jmp
out
outsb
cmp
inc
lret
call
push
ss
and
cmc
imul
fld
inc
bound
fisttpll
sub
mov
dec
mov
sub
fdivp
call
mov
adc
or
clc
rcrb
ljmp
pop
and
int3
into
add
pusha
je
stos
mov
sbb
and
push
xlat
xlat
mov
or
mov
add
push
je
aad
inc
sbb
lret
jns
cld
push
js
cmp
sbb
in
add
inc
mov
iret
repz
iret
insl
idivb
lret
cltd
imul
orl
movsl
ja
adc
xchg
inc
and
stos
popf
mov
xorl
imul
dec
loop
push
pop
ja
push
pop
dec
je
jmp
sub
lea
sarl
int
mov
sbb
arpl
cmp
movsb
dec
out
push
jbe
mov
xchg
push
pop
les
push
rcrb
insl
jnp
xchg
sti
imul
mov
lods
jl
int
int
pop
insl
fldcw
and
fwait
pop
sti
mov
dec
xor
dec
xlat
jp
xor
or
sahf
push
loop
xchg
mov
push
gs
sub
sbb
adc
lahf
lds
out
cmpsl
in
mov
push
test
xchg
aad
mov
and
outsl
mov
mov
movsl
xchg
ret
and
xchg
push
shll
mov
lods
pop
das
push
pop
push
daa
lret
cli
mov
mov
stos
into
into
adc
jo
xor
outsl
rclb
test
and
mov
mov
test
ja
cmp
rep
stc
es
in
push
lods
ss
pop
xchg
push
shr
pop
rorl
sub
test
insl
pop
lcall
xchg
cmpb
mov
icebp
cwtl
mov
cld
dec
cmpsl
je
dec
lods
push
or
rclb
inc
cmpsl
dec
ljmp
rclb
jne
jb
movl
lahf
mov
popa
in
adc
pop
out
ja
jl
addr16
cli
xor
enter
jl
mov
in
out
sbb
adc
std
inc
mov
cmp
cmp
shll
pop
pop
lcall
add
jbe
ret
es
popa
ja
pop
mov
dec
call
jle
xor
lods
and
clc
or
jae
mov
xorb
pop
aas
sbb
adc
sub
mov
or
push
sub
cltd
push
call
in
push
ret
add
mov
je
pop
lahf
lods
pop
xorb
add
scas
lods
or
aad
das
adc
mov
pop
shlb
lcall
mov
sbb
std
daa
xchg
outsl
or
jbe
cmp
xchg
iret
sub
fiaddl
pop
pop
popf
sahf
pop
in
fadds
sbb
sub
test
subb
mulb
mov
lock
insb
pushf
out
out
mov
repz
lret
push
cmp
add
sbb
mov
sbb
jmp
nop
lahf
inc
pop
bound
push
popa
mov
je
int3
andl
call
cwtl
out
pop
adc
xchg
xor
popa
sbb
idiv
xor
push
fisubs
fs
xchg
or
mov
jle
xchg
push
xchg
mov
adc
ret
ja
sbb
out
pushf
aas
fiadds
movsl
test
clc
xchg
imul
les
mov
not
shll
aaa
mov
jg
in
mov
push
jnp
sbb
mov
mov
in
fwait
negb
fs
sbbb
or
pop
mov
js
mov
test
push
push
outsb
imul
pop
repz
into
fistpll
add
dec
icebp
add
jle
adc
std
cmpsl
jmp
dec
daa
or
rcr
imul
lret
mov
jle
mov
mov
call
lods
out
pop
loop
sbb
dec
iret
and
sarb
inc
shll
xchg
aam
mov
outsl
inc
inc
cmp
xchg
dec
into
adc
scas
lahf
repz
lock
adc
dec
mov
cmp
imul
sbb
xor
test
mov
push
mov
mov
add
cmp
gs
into
pop
adc
popf
out
lret
das
jl
xor
pop
ljmp
movsb
inc
out
xlat
das
jnp
clc
addr16
in
ljmpw
dec
out
cmpsb
fadd
pop
xchg
pusha
mov
int3
test
xchg
sahf
ss
mov
sbb
addr16
push
sub
and
psllw
arpl
mov
test
mov
pop
or
out
mov
out
xchg
jecxz
sbb
inc
push
decl
add
sub
out
xor
mov
jno
cmp
add
xor
push
fwait
aas
rclb
iret
imul
pop
repnz
dec
dec
xchg
cmp
insl
add
jle
xchg
sbb
mov
mov
popf
cmp
hlt
jecxz
lret
lds
jge
mov
sub
inc
movb
push
dec
imul
movsb
test
add
push
sub
hlt
in
add
cmp
outsb
loop
ret
xchg
cmp
gs
and
and
jbe
lock
sub
rolb
loope
out
mov
pushf
cmp
push
xchg
mov
call
repnz
jecxz
cmp
movsl
fcmove
jb
jp
ret
subl
das
pushf
test
and
subb
out
inc
int
subl
loope
jge,pt
sub
cmp
rolb
cmp
repnz
aas
add
push
add
mov
jae
in
pop
cmc
mov
xchg
jmp
sub
mov
daa
mov
xchg
loope
loopne
cmp
int
and
test
inc
fstpt
call
jae
push
sbb
mov
inc
clc
inc
cwtl
inc
adc
jmp
lods
jg
lods
inc
rcrb
add
scas
push
cmp
pop
loope
cmp
hlt
test
sub
jb
xchg
lds
fldl
mov
lcall
shll
outsb
xor
mov
cwtl
inc
cli
xchg
push
shlb
popa
cli
movsb
sbb
sbb
and
iret
stos
cmp
inc
jmp
jae
pop
xlat
in
push
push
enter
jo
frstor
ljmp
dec
jae
mov
addr16
imul
leave
jp
pop
mov
lea
movsb
jl
js
iret
cmp
xchg
push
ret
adc
cmpsb
xchg
repnz
lea
mov
jecxz
in
loope
jp
sub
push
cmp
ret
ret
out
xor
add
js
cmp
dec
rolb
imul
lods
stc
ret
xchg
add
cmp
pop
test
and
js
and
orl
and
xlat
mov
cmp
mov
pop
sar
aas
call
shrb
outsb
mov
jle
sub
inc
add
sbb
mov
fstl
add
dec
or
call
enter
stc
mov
lods
dec
imul
pop
movl
jge
out
mov
jae
popa
or
dec
mov
dec
jp
mov
xlat
dec
stc
int3
pause
xchg
popf
jo
and
adc
push
jb
ror
ret
popa
in
xchg
mov
outsl
insb
cltd
int3
fnstsw
inc
jmp
pop
sbb
bound
xchg
mov
sarb
or
mov
xor
popa
cwtl
jns
call
aaa
jae
push
test
adc
in
sub
test
adc
xor
bnd
ret
jns
int
xchg
scas
loop
cmpsl
inc
std
mov
jb
dec
ret
jl
mov
xchg
jge
push
addr16
fcoml
mov
rep
das
and
ljmp
out
sbb
sub
ds
cmp
jecxz
push
and
fidivrl
lret
popl
push
std
add
and
or
arpl
dec
sbb
lods
repnz
cld
dec
adc
aaa
loop
insb
cmp
movsl
pop
popa
jecxz
ja
cmpsl
xor
and
cmc
cmp
out
inc
test
sub
sub
rorl
call
xchg
jb
push
mul
in
aaa
dec
stos
jg
jg
sub
mov
gs
outsl
movsb
adc
jmp
jle
loopne
fcomps
pop
xor
shrb
fwait
js
mov
ljmp
add
stos
dec
mov
int3
push
pop
cmc
xchg
mov
cmp
pop
dec
in
cmp
mov
movsb
cmp
movsb
inc
inc
aas
popa
mov
dec
call
test
jo
aaa
pop
pushf
inc
insb
stos
inc
mov
pushf
sbb
imul
jg
push
push
cmpsb
mov
fldl
pop
jno
cmc
cmpsl
test
notl
xor
mov
jmp
mov
xor
in
or
mov
jo
lret
cmp
movsb
sbb
and
fisttpl
pmaxsw
adc
pop
mov
out
imul
pop
add
push
push
jns
jp
cmpsl
or
hlt
mov
std
clc
aas
sbb
jg
push
push
mov
pop
sub
in
dec
dec
sub
sbb
xor
imul
jmp
sub
icebp
lcall
lods
int
sbb
call
imul
aas
push
mov
mov
add
filds
and
imul
inc
fldl
inc
push
cmpsb
fwait
jl
dec
movsl
mov
mov
popf
adc
cmp
jne
mov
and
adc
adc
ffreep
inc
push
mov
sub
rorb
push
jae
or
push
daa
mov
mov
mov
test
pop
sbb
leave
test
das
scas
out
jbe
sbb
inc
mov
xchg
test
sahf
and
inc
push
fidivs
shrb
pushf
into
lea
lret
and
inc
mov
push
es
adc
pop
mov
jmp
or
sbb
das
cmpsl
rolb
jo
add
sub
jnp
cmp
push
xchg
or
inc
jne
inc
int
int
out
nop
outsb
push
das
xchg
fstps
xor
nop
incl
fcmovne
sub
into
lret
or
push
lahf
jmp
mov
es
cmp
rcrl
mov
inc
adc
push
xor
adc
push
jne
inc
rclb
gs
jno
fs
rcrb
mull
mov
pop
int
sub
rorb
push
xor
loopne
inc
or
dec
je
and
cld
gs
sub
push
int3
es
xchg
adc
sbb
mov
dec
or
lahf
test
ss
mov
decl
sub
ljmp
mov
ljmp
xor
frstor
mov
sbb
nop
cmp
xchg
push
repnz
test
hlt
add
stos
cwtl
fwait
cmp
push
xor
and
or
clc
push
lock
incb
movsl
in
push
xor
ds
xchg
loopne
push
repz
mov
sahf
out
fnstcw
fnstcw
pop
push
out
fcomps
jmp
xlat
sub
sub
xor
loop
xor
jae
dec
mov
pop
je
scas
jbe
adc
mov
addr16
lds
add
scas
addr16
bound
lcall
or
cmp
lahf
xor
testb
push
adc
fwait
rolb
and
addr16
ljmp
mov
test
xchg
sti
sahf
cmpsb
mov
call
popa
adc
sbb
fwait
cmp
ds
mov
bound
xor
js
pushf
cmp
push
fnstenv
test
popl
push
xor
fmuls
inc
aaa
xchg
dec
iret
nop
popf
xchg
mov
in
ljmp
mov
call
mov
mov
mov
pop
pusha
ljmp
mov
int3
cmp
loop
test
fimull
rolb
cmp
and
fildl
das
and
push
adc
sbb
xor
xchg
outsl
or
push
roll
cmpb
or
inc
mov
mov
adc
push
push
iret
jmp
push
jge
or
cli
shr
pusha
jbe
mov
cmp
push
lret
add
or
push
hlt
pop
js,pt
and
cmpsb
inc
add
popf
pop
stos
and
xchg
push
fbstp
cmp
jg
push
out
lcall
insl
mov
push
js
pop
xor
push
xor
pop
roll
dec
inc
push
mov
jecxz
xchg
pop
outsb
jp
gs
jmp
cmp
cmp
lret
sbbb
and
add
cmp
cwtl
dec
mov
xor
aad
mov
push
or
repz
sahf
js
mov
jecxz
push
add
add
lahf
in
push
mov
push
mov
mov
adc
scas
sti
ret
fdivr
inc
mov
jle
insl
xlat
mov
outsl
fcomp
imul
ja
outsl
mov
mov
xchg
push
cmp
cld
jp
mov
orl
cmpsb
adc
orl
jp
or
pop
sub
jmp
sahf
test
jno
pop
insb
jle
lcall
jge
and
dec
mov
enter
fsubr
sbb
dec
repz
pusha
mov
mov
sbb
xor
mov
pushf
shll
xor
inc
mov
aas
jmp
push
pop
push
inc
or
popa
sub
stc
stos
and
jmp
cmp
jmp
and
lcall
xchg
and
jmp
push
jnp
bound
dec
jmp
mov
jns
add
popf
insl
xchg
sub
outsl
xor
sub
insl
pop
es
lods
jp
dec
insb
pop
xchg
sub
sbb
stc
andb
pusha
aas
aad
push
lcall
jecxz
mov
jb
fld
add
push
jns
push
gs
jmp
push
jg
sysret
jp
push
lods
dec
jbe
mov
sub
popa
leave
les
jnp
add
lods
shrl
cwtl
notl
out
scas
xor
into
jl
loope
out
jnp
bound
fisttps
xchg
inc
daa
mov
std
inc
scas
xchg
mov
arpl
scas
imul
and
push
bound
and
scas
xchg
into
out
nop
jno
xor
xor
mov
rorl
lods
and
ds
mov
lods
outsb
fwait
cmpsl
vpunpckhdq
fidivrs
sub
into
enter
clc
mov
cmp
jbe
xor
or
jo
sub
sbb
cmp
nop
xor
enter
xchg
fsubs
out
push
test
jne
out
mov
sbb
sub
mov
xorl
adc
sub
dec
lea
cmpsb
sub
fadd
imul
lock
jle
mov
in
and
fs
movsb
jae
push
lock
cs
fcomps
aad
xchg
dec
jno
dec
movsl
mov
leave
bound
mov
jb
decb
pop
inc
inc
xchg
lea
inc
subl
cld
pop
jecxz
sahf
je
mov
inc
push
outsb
das
lret
jl
in
in
mov
or
dec
pop
ss
dec
into
sbb
cmpl
and
fwait
lcallw
fdivs
push
and
pushf
sbb
jo
jg
ljmp
cmp
dec
fdivs
addr16
dec
adc
mov
and
push
cmp
cmp
cmp
push
mov
enter
pop
hlt
ret
inc
divb
je
cmp
mov
pop
dec
je
xchg
shl
xchg
cwtl
mov
das
mov
inc
adc
imul
ds
dec
popa
cld
sub
test
sub
adc
dec
xor
xchg
movsb
xchg
insl
dec
cwtl
jbe
jge
in
int
add
mov
xor
into
xor
std
stc
jnp
es
cmp
xchg
incb
fildll
and
test
aam
out
daa
dec
cltd
ficomps
adc
or
push
or
mov
inc
mov
or
or
ret
mov
mov
arpl
add
popl
push
adc
bnd
test
cmp
push
sti
push
stos
ja
and
stos
xchg
ret
xor
fisttpll
sahf
outsb
notl
fldt
mov
dec
xchg
int3
jns
mov
push
test
fbld
inc
pop
mov
mov
sahf
fwait
stc
andl
and
subb
xor
lea
mov
mov
or
jo
xchg
mov
add
sahf
xor
out
mov
dec
xchg
lea
int3
loope
push
pop
mov
jb
fistl
es
jbe
dec
cli
pop
call
call
out
into
inc
cltd
data16
repnz
sbb
mov
pop
add
pop
mov
pusha
rcl
push
pop
xchg
orb
fwait
mov
sbb
inc
mov
insb
lds
xor
add
cs
or
in
ret
jne
out
sub
js
jno
lock
inc
xchg
movsb
lcall
cld
inc
bound
imul
cld
jmp
outsb
les
mov
and
push
push
jnp
fwait
adc
andb
or
mov
int3
mov
mov
or
dec
mov
dec
mov
inc
aam
shrb
and
inc
je
insb
fsubs
cmp
adc
test
jno
test
mov
cmp
loop
cmp
aas
popf
je
cmp
sub
sub
ss
outsl
sub
dec
dec
std
cmp
and
cmc
cwtl
cmc
or
shlb
mov
xchg
lret
mov
mov
adc
lcall
adc
cmc
pop
adc
outsl
int
push
sbb
sub
jo
jg
xor
mov
std
mul
jg
adc
or
lcall
cli
hlt
lret
mov
push
pop
sbb
in
pop
dec
in
testb
mov
cmpb
add
icebp
cli
mov
insb
or
sar
cmp
fcmovbe
mov
jae
cmp
fidivrs
int3
lcall
mov
xor
nop
mov
loope
in
arpl
repnz
cld
outsl
mov
ja
sti
je
xchg
and
and
add
jne
stos
call
pop
mov
pop
pop
dec
fadds
nop
repz
xchg
dec
sub
fisubrl
sub
ds
mov
in
mov
push
mov
dec
adc
aad
add
sahf
shll
je
mov
and
inc
push
fsts
add
adc
adc
jg
jecxz
sub
jb
push
push
movsl
fadd
cmp
push
ficomps
pop
adc
addl
into
scas
jp
sub
and
outsb
stc
xor
subps
pop
mov
jo
or
icebp
mov
rep
pop
or
ds
sub
out
xchg
fists
aam
xor
and
mov
push
add
jge
dec
sbb
jae
enter
out
decb
mov
mov
jmp
sub
ret
mov
xor
adc
std
mov
ljmp
jecxz
xchg
sti
fcoml
in
scas
cmp
adc
stc
mov
pushl
cmp
ss
and
addr16
rolb
cmpsb
or
xchg
movb
out
push
fs
pop
sahf
xchg
cmp
jbe
jmp
cmp
mov
out
add
mov
jmp
insb
data16
jo
pushf
mov
sbb
loope
adc
repz
fnstenv
push
mov
notb
sar
loope
cmp
sbb
push
jmp
and
iret
outsl
or
orl
in
push
jne
add
das
enter
xor
jl
pop
xchg
mov
inc
js
daa
jl
pop
test
adc
adc
xchg
mov
ret
pop
sub
push
imul
add
pushf
cmp
les
and
into
push
or
shr
fwait
int3
mov
mov
out
cmp
fisubrs
mov
cs
mov
je
aad
stc
jmp
push
sbb
test
sahf
xchg
aaa
cmp
xor
pop
nop
or
cmpsl
jno
push
insb
adc
pop
adc
fldl
jge
sub
dec
aaa
add
pushf
jae
inc
mov
into
lock
adc
sub
mov
jno
cwtl
mov
pop
jb
pop
movb
hlt
es
insl
int3
into
stos
orb
push
out
enter
push
shlb
cmpl
or
mov
lock
xchg
hlt
mov
jecxz
adcl
cmp
push
popa
test
inc
adc
jnp
mov
shll
or
pop
xorb
repnz
dec
or
jb
out
adc
sbb
movsb
cltd
lock
push
rcll
or
ss
fisttpll
and
and
dec
fs
xchg
inc
xor
arpl
clc
in
clc
iret
fisttpl
mov
mov
movsl
dec
outsb
mov
test
xchg
into
inc
cs
mov
lds
mov
dec
into
cmc
loop
jp
or
out
add
xchg
push
inc
icebp
fnstsw
jnp
lea
ds
sti
sbb
mov
sub
cld
gs
jge
xchg
mov
pop
into
dec
jle
pop
icebp
sub
dec
cmp
pop
sahf
bound
pop
push
jb
jnp
add
mov
call
roll
mov
adc
and
clc
and
xlat
mov
xchg
lock
lret
imulb
or
xor
xor
icebp
adc
dec
fwait
mov
arpl
sbb
fcomip
fistl
insl
push
pop
dec
sbb
nop
cmpsl
test
arpl
sub
jb
loop
push
out
int
push
jmp
mov
mov
cmpsl
fimuls
xchg
cli
hlt
cmpsl
lods
movsl
fwait
subb
dec
xor
cmp
paddusb
xlat
sub
hlt
scas
daa
hlt
sbb
jnp
xor
add
cwtl
imul
ret
jp
inc
mov
mov
sbb
inc
jb
pop
aam
xchg
call
in
inc
inc
mov
and
outsb
mov
mov
pop
shll
addr16
test
push
xchg
repz
dec
jmp
mov
stos
pop
jo
or
sub
add
in
cmp
stc
xchg
adc
xorl
and
and
int
add
icebp
xor
repz
rolb
ror
out
cmp
or
cmp
inc
inc
sahf
aaa
repnz
dec
pop
ljmp
mov
mov
or
arpl
mov
mov
outsb
dec
shrb
aas
cmp
push
cli
mov
mov
orl
lock
adcl
push
ret
push
aaa
icebp
adc
cmp
cmp
out
cmc
fsubs
sbb
arpl
cld
aas
sub
shrl
rol
iret
inc
xchg
jmp
push
sbb
mov
and
jne
sbbb
add
out
gs
dec
test
sahf
sbb
test
pop
in
inc
rolb
xchg
add
pop
or
dec
sbb
rorb
cmpsl
jne
test
pop
sbb
loopne
and
cmpsl
stos
push
lock
or
ss
lret
adc
in
sub
adc
xor
repnz
stos
lcall
int
sbb
push
inc
mov
xlat
jns
imul
jmp
xchg
rolb
ficomps
mov
or
xchg
adcl
mov
inc
mov
push
sub
mov
fmulp
xchg
mov
lea
or
adc
dec
scas
bnd
cmpsl
test
xchg
mov
data16
push
icebp
mov
jnp
mov
rcll
loop
sbb
cs
aaa
fdivs
addr16
push
add
lret
mov
xor
sub
push
addb
xchg
call
mov
leave
out
dec
mov
or
in
add
lods
outsl
addr16
leave
push
aad
mov
addr16
push
jge
sbb
lret
int
outsl
int3
shl
mov
mov
jae
cmpsb
inc
dec
lock
cs
mov
aad
sub
mov
testl
rcrb
outsl
cmp
cmp
dec
mov
outsl
addr16
mov
pop
or
push
cmp
mov
flds
cmp
bound
std
mov
ja
dec
ds
inc
out
jae
outsb
outsl
add
xchg
push
pop
or
test
loopne
cmc
adc
pop
repnz
scas
imul
or
pop
jnp
popa
aam
mov
je
push
pop
nop
cmp
mov
test
jmp
pop
sbb
adc
mov
dec
mov
jl
inc
cmpsb
lahf
sub
pushf
push
fnsave
jnp
testb
fwait
es
mov
sub
jae
clc
leave
dec
jns
mov
push
add
fcomps
pop
pop
ret
mov
lds
outsl
scas
dec
es
imul
sub
mov
out
sub
inc
dec
enter
xor
cmp
dec
lea
fidivrs
xchg
xchg
nop
enter
repnz
sbb
in
in
loop
mov
jmp
pushl
pop
aaa
dec
dec
push
aas
adc
inc
adc
dec
push
mov
jno
bound
xchg
jbe
xor
mov
xchg
jbe
sahf
mov
jb
pop
stos
and
adcl
dec
inc
pusha
in
mov
xor
js
xor
xor
adc
dec
fwait
out
lods
push
sbb
je
or
cmp
mov
aas
mov
je
int3
mov
popf
icebp
add
dec
inc
inc
sbb
out
add
test
mov
mov
iret
jge
pop
rorl
scas
out
std
jmp
mov
cwtl
into
lret
aaa
enter
xchg
or
clc
outsb
pop
cmp
stos
stc
lds
or
in
fs
hlt
mov
xor
cmp
cmp
cmp
adc
mov
xchg
jp
loopne
cmp
mov
xor
insl
test
add
pop
ss
dec
das
sub
add
xor
pusha
jo
mul
bound
push
daa
sbb
repz
push
jle
jno
mov
sub
sub
data16
adc
mov
ret
lret
lret
popf
stc
mov
cmp
iret
and
mov
xchg
mov
and
jno
dec
xchg
ficoml
jnp
lock
mov
imull
fmuls
jmp
imul
negl
popa
or
mov
pop
decb
cli
pop
call
inc
aam
ret
ljmp
add
lret
sub
lret
pop
mov
push
shl
sar
iret
ljmp
xor
aam
add
ret
stc
and
lods
adcl
aaa
push
push
pusha
mov
insl
lret
movsl
sar
xor
jbe
inc
pop
pop
loope
dec
flds
inc
lds
fdivl
in
jns
ljmp
jo
mov
jle
push
inc
popf
adc
iret
and
pop
mov
clc
push
mov
outsb
add
mov
out
cltd
cmp
in
test
loopne
cwtl
lods
scas
xchg
into
and
dec
pop
je
cwtl
xchg
lea
fildl
xor
mov
test
mov
cmp
xchg
out
fmull
sub
mov
push
lea
aam
push
in
stc
adc
mov
fcmovne
add
mov
push
lea
mov
insb
jle
jnp
jno
insb
push
in
imul
push
aad
iret
test
cwtl
pop
fadds
pop
adc
es
sbb
roll
add
push
xor
test
mov
xchg
xchg
adc
icebp
and
push
je
jae
popf
scas
pop
imul
cwtl
stos
nop
loop
sbb
dec
leave
xchg
pop
and
iret
mov
jae
and
inc
jo
lock
ficoml
fmull
push
jae
sbb
cmp
jne
cmp
jecxz
test
and
icebp
pushf
mov
fsub
int3
adc
dec
sbb
jp
inc
jb
movsb
das
lea
mov
cmp
addb
mov
imul
test
mov
outsl
test
jl
ficoml
and
decl
mov
icebp
cmpsb
imul
and
jmp
jl
or
ja
xchg
clc
cwtl
loop
insl
lcall
stos
lret
shrw
lds
xor
cmp
inc
stos
mov
into
fcomps
mov
lea
cmp
repnz
cmpsb
xor
xchg
pop
mov
ja
jns
rcrl
jb
lret
pop
cmp
mov
mov
mov
inc
pop
jecxz
and
lcall
cmpb
pop
push
or
xchg
and
por
push
icebp
add
and
lods
mov
mov
cmp
mov
cmp
leave
pushf
repnz
sarb
or
int3
fiaddl
cmp
bound
mov
nop
push
scas
fdivrl
mov
xchg
sahf
outsb
dec
rorl
shrb
xor
lret
jmp
rorl
cmp
mov
jbe
push
jmp
push
popa
xchg
push
paddsb
fsubrl
mov
jecxz
xor
jmp
es
pop
popl
lock
jae
inc
pop
sub
int3
push
pop
xor
mov
mov
adc
adc
sub
es
jmp
or
jmp
imull
xchg
nop
xchg
jl
or
mov
ljmp
inc
rorb
add
or
sub
scas
lock
or
jecxz
rcl
inc
divb
pushf
popa
sbb
movsl
enter
int
in
cmc
bound
pop
inc
addr16
dec
xchg
and
sbb
mov
push
and
out
cmp
adcl
nop
mov
lret
repnz
subb
adc
mov
ficompl
mov
dec
fnsave
push
out
aas
mov
xor
outsl
call
adc
shll
mov
jmp
mov
cli
xor
pusha
inc
xor
xchg
dec
pop
jno
psubsw
xchg
les
xchg
or
inc
negb
xlat
and
xchg
add
lret
mov
jb
or
mov
insb
stos
popf
xchg
test
das
jns
cmp
mov
std
aaa
mov
jecxz
test
adcl
pop
and
pop
inc
add
pop
sub
jecxz
xchg
pop
xchg
nop
and
gs
punpckhbw
loopne
jbe
push
imul
lret
movsl
jne
push
fmull
push
adcb
add
cmp
stos
add
das
pop
or
pop
pop
into
out
xor
ss
xor
icebp
mov
mov
repz
lea
adc
ficompl
insl
shlb
lahf
jno
in
pop
insb
xchg
sti
repz
lea
fldcw
sar
mov
movsb
movsb
xchg
gs
push
and
dec
rclb
cmp
inc
stos
loop
mov
lds
test
cmp
pop
negl
mov
lods
in
push
inc
rcrb
mov
push
and
xor
sbb
push
push
mov
mov
cli
addr16
nop
aad
out
xor
mov
and
mov
sbb
push
mov
je
das
addr16
cld
add
xlat
add
adc
pushf
jae
mov
sub
cmpsl
das
ss
leave
push
loopne
pushf
out
cs
xchg
mov
dec
in
clc
outsb
xor
jg
or
fsubrp
jmp
ja
movsb
inc
sbb
sub
adc
clc
jae
cmp
mov
and
or
mov
mov
sub
or
movsb
insl
pop
addr16
pop
dec
xchg
mov
outsb
cld
inc
adc
xor
aas
cmp
test
in
sahf
rol
scas
lcall
pop
push
fcmovnu
jmp
sarb
insl
data16
cltd
or
in
pop
movsb
mov
out
in
add
xor
js
jne
std
cmc
pusha
mov
sahf
cmpsl
in
incb
add
adc
push
rcrb
and
push
rcr
fiaddl
insb
push
adc
aas
arpl
inc
scas
cmovle
mov
jle
dec
mov
mov
lcall
jne
jecxz
leave
xlat
das
notl
in
push
adc
push
sti
mov
cld
repz
add
inc
xor
jmp
and
add
imul
dec
pop
mov
int
ret
pop
xchg
movsb
adc
popa
dec
mov
mov
nop
push
cld
and
inc
in
fisubs
cmp
cmpsb
inc
pop
das
cmpsl
into
loopne
inc
in
mov
aad
xchg
or
sbb
or
adc
push
popf
add
cld
push
popa
push
lcall
mov
push
daa
jmp
gs
and
mov
repnz
push
lahf
mov
ljmp
fdivl
ja
sub
sarb
xlat
lock
lret
bound
xlat
mov
inc
out
sub
nop
xchg
lret
stc
mov
ja
leave
test
sbb
das
outsb
xchg
cmp
mov
aam
or
popf
adc
and
ficomps
adc
inc
adc
lds
sbb
jl
data16
mov
fcoml
adc
popf
testb
cmp
jno
addr16
inc
cmpsl
in
xor
andl
push
and
mov
jb
pop
inc
shll
aas
lret
hlt
cmpsl
inc
jp
ljmp
pop
mov
push
mov
add
pushf
psubb
aad
cmp
xchg
std
les
dec
data16
pop
mov
sbb
movsl
hlt
mov
inc
or
sub
stos
xchg
mov
sarb
inc
rcrb
pop
dec
sub
fstl
scas
imul
xchg
mov
mov
jl
pop
push
and
divb
mov
inc
xor
pop
iret
xor
jnp
jno
push
inc
jp
adc
popa
pop
enter
loope
pop
push
add
andb
mov
ljmp
and
fwait
dec
nop
xor
daa
addr16
and
in
nop
cmp
mov
cmpsl
movsl
frstor
out
and
pop
xor
and
lcall
or
mov
and
test
jg
repz
xor
lcall
mov
scas
into
fyl2xp1
mov
and
add
orb
jnp
mov
subb
sarb
jne
movsl
das
cld
and
dec
xchg
cmp
ja
inc
cltd
addr16
imul
jb
dec
push
pusha
and
sar
pop
movsl
mov
cltd
int3
popf
add
cmp
or
pop
addl
out
mov
aas
sub
mov
test
and
xchg
xor
or
pop
sub
es
stos
pop
or
pushf
lea
cmp
shrl
xlat
add
lods
add
pop
add
fists
iret
mov
mov
pop
add
xchg
mov
mov
pop
leave
push
add
popa
push
adc
mov
inc
mulb
jne
cmpsb
or
pop
in
lods
into
adc
loop
pop
es
jno
push
inc
mov
fstpl
stc
add
aaa
mov
pop
mov
fcompl
xor
mov
mov
pushf
cmp
in
cmpsl
test
xchg
bound
push
aad
out
inc
filds
neg
test
pushf
fildll
mov
dec
shll
push
xchg
xchg
cmc
jae
mov
out
gs
sti
stos
and
or
ret
pop
dec
push
jno
jmp
je
mov
and
leave
test
rclb
inc
sub
jb
pop
mov
mov
pop
test
lret
dec
lcall
shr
lock
inc
jne
sub
and
mov
inc
cmp
push
mov
mov
inc
aaa
call
shrd
in
add
sbb
jp
dec
sahf
into
mov
or
call
push
das
mov
inc
loopne
or
add
movsb
mov
je
push
xchg
leave
push
daa
jg
cmp
rolb
movb
cld
fcoml
repz
addr16
adc
mov
fmul
sbb
dec
xor
int3
iret
fwait
jmp
push
repz
or
inc
fcomi
mov
in
cli
adcl
or
mul
es
xchg
jnp
mov
xchg
and
popf
stos
add
add
pushf
cmp
pop
ret
stos
and
inc
ret
add
stc
push
sbb
das
pusha
pop
aad
ljmp
mov
cmpsb
notl
in
mov
mov
loope
lds
or
lret
and
sbb
or
movsl
shll
movsl
mov
pop
jae
aad
xor
xchg
mov
mov
lahf
inc
fwait
pop
aas
jp
fnsave
cwtl
popa
jno
outsb
sub
jno
adc
pop
pop
aaa
and
mov
sub
pop
push
jae
add
lret
lret
aaa
xlat
mov
cmp
mov
mov
fidivl
and
add
rcl
xchg
pop
jbe
dec
es
sub
jg
and
lahf
sub
cmp
mov
es
sbb
jecxz
movsl
out
pop
test
aas
jge
stos
cmp
fsubr
or
xchg
into
fst
movq
cmp
stc
pop
inc
loope
rorl
mov
aad
clc
cs
and
jnp
push
sbb
mov
jg
or
mov
das
test
stc
cmp
xor
insl
mov
psubb
lcall
sbb
lahf
ret
andb
in
rorl
test
lcall
mov
mov
hlt
sub
adc
sub
movsb
sbb
cmpsb
pop
adc
pusha
jmp
aam
je
push
push
and
mov
aaa
or
or
mov
cmp
inc
rorl
sub
sti
sahf
dec
inc
add
inc
inc
add
pop
push
and
mov
cwtl
test
and
push
cs
int
test
icebp
xor
pop
pop
icebp
sahf
icebp
pop
mov
sbb
out
in
iret
imul
popa
je
pushf
xor
pop
mov
fcompl
sub
mov
jbe
icebp
sbb
or
arpl
xchg
xchg
jg
icebp
xchg
jo
popa
mov
adc
mov
sahf
xchg
imul
inc
or
sub
push
and
fbld
adc
jae
cmp
loope
pop
flds
xor
adc
movsl
mov
jge
nop
rorl
insl
pop
dec
cmc
in
xchg
imul
mov
add
mov
leave
inc
inc
inc
lcall
xor
lcall
jg
dec
xor
or
push
push
lret
adc
imul
mov
test
mov
scas
out
lahf
out
in
loopne
jp
test
xchg
aas
outsb
mov
mov
add
push
ror
aam
movsl
mov
repnz
pushf
pop
in
cmpsl
into
das
and
adcb
loop
push
and
je
leave
or
cmp
ja
rorl
loop
or
inc
shrb
adc
fwait
jl
clc
roll
jne
mov
cmp
mov
dec
shll
cmpsb
orb
adc
cmp
push
xchg
pusha
test
test
cld
loopne
in
movb
ret
fnsave
negl
outsb
sti
pop
mov
inc
or
ficompl
pop
or
jae
scas
sub
mov
mov
dec
sahf
adc
add
mov
mov
jle
inc
pop
inc
inc
sbbb
or
rcrl
loopne
je
ja
mov
cwtl
mov
xchg
pop
push
nop
inc
stos
push
repnz
iret
push
mov
mov
scas
mov
aaa
lahf
dec
sti
sub
or
imul
insl
cld
or
out
xor
stos
or
fisttps
add
add
ss
mov
or
jge
into
jmp
xor
leave
jle
pop
out
jb
xchg
pusha
push
mov
pushl
aam
aas
stos
fistl
and
sbb
js
mov
push
pop
jno
std
pop
cmp
negl
fists
and
andb
js
push
lea
jp
iret
jb
test
mov
mov
gs
and
or
xor
xor
dec
popf
test
mov
outsb
add
out
les
in
icebp
mov
xchg
push
sbbl
hlt
cmpsl
mov
jmp
and
mov
push
cmp
fs
call
pop
mov
orl
mov
or
hlt
xchg
mov
push
mov
les
add
shlb
pop
rorb
aad
pop
lea
aad
push
jno
pop
es
cs
testl
sti
and
scas
cmc
jne
sub
loopne
pop
mov
gs
test
hlt
add
arpl
std
fmuls
or
pop
bound
sub
and
out
xchg
subb
rcll
add
cld
cli
mov
aas
mov
pop
daa
jmp
and
pop
sbb
adc
and
lea
mov
inc
sub
and
xchg
adc
add
mov
inc
jae
xor
fistl
sbb
xor
xchg
subb
mov
mov
push
and
icebp
sub
clc
or
ficomps
pusha
adc
inc
into
subb
in
notl
cmp
outsl
das
pusha
inc
xlat
sahf
fstpt
pop
fwait
std
into
mov
jmp
xorb
imul
adc
test
stos
lcall
or
mov
cmp
outsl
and
ror
jns
jae
pop
or
out
xchg
movsl
lcall
int3
or
out
jl
aas
hlt
jo
jno
repz
sbb
pop
mov
jecxz
sbb
mov
out
nop
gs
mov
sub
fwait
lods
leave
sub
jae
in
dec
cmp
mov
mov
mov
pop
loop
adc
inc
lcall
or
cs
jp
dec
or
inc
xor
xchg
outsb
jb
and
das
rcrb
ficompl
adc
rcrb
sub
push
jae
push
in
in
xor
or
cmp
jne
lods
mov
push
call
sbb
mov
pop
popa
jo
imul
inc
xchg
cld
mov
add
pusha
and
das
loope
sti
xchg
jl
or
ss
cmp
rol
call
xor
test
sub
xor
lds
test
pop
das
sub
or
sub
push
dec
cs
jmp
sbb
inc
pop
negl
push
not
mov
and
mov
fisubrl
mull
nop
pop
call
mov
inc
cwtl
lea
xchg
out
cmp
hlt
xor
jl
pop
inc
lret
das
cmp
imul
fs
xchg
or
jge
movsl
inc
xorps
push
scas
test
xchg
dec
rcl
ds
xchg
add
mov
bound
xor
mov
in
rcrb
aas
or
sub
aam
push
xor
shl
scas
sub
xchg
loope
repnz
add
mov
fcmovnu
stos
mul
mov
pushf
cmpsl
out
scas
add
or
xor
out
scas
data16
add
jae
test
mov
loopne
int3
test
std
sbb
arpl
aam
push
xchg
push
sub
xorl
push
xchg
mov
adc
xchg
popa
mulb
cmp
daa
jmp
cmp
movsb
and
fimuls
out
das
sti
stc
adc
xchg
lea
jge
fisubrs
test
mov
push
xchg
lods
sub
aas
inc
adc
mov
cmp
pusha
xchg
cmp
mov
and
lods
inc
sub
and
les
daa
pusha
mov
call
sub
mov
jb
fwait
push
out
inc
arpl
lods
push
mov
push
xchg
xchg
lret
or
cs
xchg
movsb
push
xchg
cmpsb
ss
addr16
mov
inc
lods
repz
hlt
and
insl
add
inc
aaa
or
fldenv
jmp
pop
out
pushf
lods
mov
popf
hlt
int3
cmp
inc
cmpsb
loopne
stc
sbb
dec
rolb
test
mov
and
nop
cmp
sub
xchg
call
loopne
cmp
int
push
shrl
push
imul
clc
adc
pop
mov
iret
je
popa
jl
fwait
es
call
add
pop
jbe
add
push
jp
jbe
into
xor
cmpsb
pop
clc
pushf
pop
sahf
test
jl
bound
push
insl
xchg
dec
jg
rol
dec
pusha
jmp
dec
jge
ret
aaa
orb
hlt
sbb
mov
add
lock
idiv
cmp
inc
loop
push
sub
add
pop
mov
ss
cmpsl
adc
cld
and
xchg
scas
xchg
adc
mov
enter
sbb
repz
cld
movb
push
lods
pop
test
jb
scas
sti
aaa
sbb
dec
fsubrp
sub
fwait
push
add
out
loop
cli
push
ret
in
movsb
jl
and
ss
xchg
je
cmpsb
ljmp
icebp
push
cmp
mov
xor
dec
mov
fists
dec
insb
or
icebp
and
and
popf
rorl
sbb
imul
shr
rorl
insb
inc
xchg
inc
aad
aaa
mov
test
mov
repz
out
fistpll
dec
and
ja
push
ds
or
and
inc
mov
iret
or
out
xchg
js
and
mov
adc
pop
cld
mov
jns
mov
test
xchg
repnz
xor
mov
sar
and
lds
inc
and
mov
ds
dec
or
mov
mov
xchg
pop
lahf
xor
mov
outsl
cld
sub
ret
mov
push
dec
push
cmpsl
mov
cmpsl
in
in
add
dec
test
rcll
bound
xor
pop
xor
fst
lds
cwtl
dec
pusha
fdivl
inc
arpl
lret
sti
ljmp
in
push
mov
fwait
sbb
and
in
push
popf
popa
inc
push
icebp
or
mov
shlb
xor
movsl
enter
cli
rorb
mov
pop
out
outsl
mov
or
xchg
add
sub
or
scas
jp
add
fdivs
inc
xchg
fmulp
fwait
pop
test
and
sub
hlt
out
pop
out
push
loope
dec
xor
int3
xchg
dec
push
int3
sbb
cld
mov
push
and
xor
inc
lods
jmp
pop
jle
push
or
inc
mov
cld
repz
aad
dec
add
stos
sahf
push
fdivs
cmp
imul
mov
fnstsw
hlt
xor
pop
xchg
lret
sub
gs
jb
lahf
je
cmpsb
addr16
fstps
sbbb
ds
aaa
mov
insb
subl
js
mov
or
xlat
sahf
lock
xchg
ret
outsl
sub
aam
dec
imul
mov
popf
push
fnstenv
cs
dec
mov
je
inc
mov
adc
add
movsl
enter
out
and
test
lods
xchg
in
insb
cwtl
sub
ret
jg
xor
jmp
movsl
and
stos
repnz
jmp
xlat
xor
sub
rcr
adc
cmp
in
popa
push
sub
cmp
lods
jge
adc
and
push
adcl
into
xchg
mov
aad
xchg
repz
jmp
addl
adc
or
push
sti
shl
push
lock
pop
out
add
das
leave
lret
xchg
inc
adc
stc
inc
sub
mov
pop
cli
push
xorb
sub
mov
in
adc
hlt
cs
in
stos
lods
xorl
xchg
aas
out
int
cs
xlat
adc
add
xor
fsubl
mov
out
push
mov
adc
imul
push
mov
dec
je
cld
in
jmp
outsl
dec
xadd
addr16
inc
loope
jns
ds
shll
lock
roll
and
or
faddl
jmp
cli
jmp
or
xor
xchg
stos
divb
dec
mov
pop
bound
xor
jae
xchg
xchg
out
and
mov
sbb
xchg
push
xlat
xchg
mov
in
movsb
jl
and
ds
xchg
xor
es
push
loopne
ret
call
fcompl
out
aaa
push
mov
clc
inc
mov
popa
mov
test
bound
mov
xor
lcall
inc
mov
xor
push
cs
sbb
aas
push
enter
pop
notl
ja
ss
xchg
xchg
aad
inc
dec
push
rorl
lret
xchg
sub
sbb
cmp
out
mov
arpl
sbb
dec
dec
popf
dec
fadds
lock
mov
test
mov
cmp
hlt
ret
lock
in
xor
push
stos
and
push
sti
repnz
dec
imul
mov
xchg
mov
idiv
ficompl
fs
fidivrl
mov
cli
adc
add
dec
push
test
mov
cmp
xor
jnp
cmp
out
mov
cmp
call
xor
leave
xchg
mov
ret
pop
in
outsl
mov
jle
mov
adc
sbb
das
xchg
lret
in
scas
movsb
scas
dec
or
shrl
lret
lret
sbb
mov
daa
and
inc
repnz
ss
pop
jmp
pop
xchg
adcb
push
mov
push
int3
aas
dec
cmp
aaa
or
sub
imul
mov
int
out
fstpl
cmp
push
push
mov
adc
scas
xchg
fcomps
or
pop
jl
mov
add
or
jmp
lea
xchg
jl
mov
cwtl
aam
jns
or
lock
push
or
cmpl
dec
dec
mov
or
pop
mov
jae
mov
pop
dec
sti
xor
sti
fistpll
xchg
out
jg
xor
sub
sub
xchg
inc
leave
addl
push
adc
xchg
inc
xor
mov
pop
or
dec
cmp
mov
popf
das
inc
arpl
addb
mov
inc
mov
clc
and
mov
sbb
sub
int
lds
sub
xor
movsb
in
enter
cmpsl
mov
mov
arpl
push
sub
pop
call
mov
loop
mov
push
and
pop
dec
imul
lods
xor
inc
int3
or
xor
stos
repz
xor
jnp
test
sahf
dec
mov
lea
jg
popf
icebp
mov
sub
stc
das
xorb
in
outsb
std
adc
sub
test
mov
xor
ja
fcom
adc
insb
mov
xor
les
jg
cmp
push
add
push
lahf
jge
adc
sbb
add
outsl
sub
push
imul
lret
cmpsl
repz
call
sbb
div
add
xor
inc
add
mov
pop
loop
fnsave
cmp
popa
adc
cmp
xchg
mov
mov
stos
mov
rolb
jp
or
push
sbb
xchg
or
mov
jp
inc
aaa
decb
addb
sarl
bound
loope
ficomps
ljmp
dec
pop
mov
xorl
mov
addr16
cmp
loope
xor
jne
sahf
es
test
out
mov
es
mov
adc
push
int3
loop
enter
mov
leave
jge
nop
shll
divb
sti
seto
sahf
ss
jge
aas
imul
je
cmp
jge
test
out
movsb
or
jecxz
or
mov
push
pop
sub
inc
jae
jp
arpl
or
push
fwait
rolb
cmp
loopne
add
cmp
js
sub
mov
sbb
and
push
in
stos
xchg
fisubs
daa
sub
add
in
xor
or
xchg
xchg
int3
mov
sub
addr16
cmp
int3
xchg
jmp
sbb
lock
sbbl
es
es
add
loope
mov
push
sbb
jo
sbb
int
out
int
lahf
pop
inc
inc
jecxz
xorl
add
mov
arpl
nop
arpl
sbb
out
push
fadds
jmp
adc
ficompl
inc
add
push
lods
insl
jne
nop
out
dec
jno
arpl
pop
pusha
into
pop
pop
jmp
cmp
syscall
mov
mov
scas
stos
sbb
mov
ret
dec
std
mov
pextrw
add
push
pusha
fiadds
movsb
nop
or
and
leave
imul
and
std
leave
push
aam
push
repz
xor
push
lds
dec
loopne
aam
sub
push
repz
addl
addr16
es
daa
std
movsb
cmp
pop
rol
push
mov
addl
dec
push
pop
xor
ja
clc
xor
shlb
mov
jle
mov
xor
push
mov
fcoml
fldlg2
outsl
lcall
sbb
sbb
int
or
jae
adc
ja
int
jns,pt
lods
imul
aam
mov
jmp
cmp
push
aaa
fldl
outsl
lea
mov
push
mov
cli
push
sub
stc
jb
fmuls
push
push
add
adc
pop
sahf
or
mov
arpl
std
push
mov
ficoml
aam
lds
in
cmp
push
rorl
fwait
roll
daa
xchg
inc
fadd
jle
cmp
pop
add
scas
repz
or
scas
sbb
and
js
push
xor
popf
cli
lds
dec
mov
add
jge
or
xor
inc
pop
dec
mov
xor
lock
add
add
xchg
imul
scas
ja
cs
add
xchg
sbb
inc
mov
inc
and
push
xchg
jbe
cs
or
loope
fists
mov
mov
decb
jle
mov
pop
jbe
pop
adc
mov
jo
mov
add
test
insb
iret
inc
out
lret
pusha
fsts
xchg
adc
in
and
or
dec
lds
lcall
in
std
test
fdivp
andb
testb
cwtl
aad
pop
hlt
dec
gs
leave
ret
shld
add
xchg
int3
sbb
ss
pop
test
push
sbb
loope
or
mov
xor
loopne
out
and
cmp
adc
fdivl
and
xchg
adc
gs
inc
inc
xchg
shl
int
xor
mov
cs
jb
ret
pusha
pop
fstpt
call
jno
push
mov
push
pop
repnz
hlt
int
jo
pop
xor
loop
inc
mov
dec
xor
test
cmpsb
jnp
mov
push
bound
xchg
pop
fimull
mov
xor
xlat
jns
adc
lahf
ja
mov
shrb
jbe
outsb
push
and
mov
enter
inc
lods
mov
push
test
or
pop
cmpsl
or
mov
adc
push
rcrb
insb
or
orb
ds
std
push
jmp
push
out
mov
insb
fmulp
jns
aam
gs
gs
mov
packsswb
decb
int
cwtl
sbb
pop
cmpsl
cmpl
aam
mov
jp
mov
mov
dec
rorb
inc
mov
aam
into
sarb
rcll
sahf
sbb
jp
mov
jnp
mov
push
jbe
inc
mov
call
and
shlb
xchg
sub
sar
das
pop
loope
jo
push
and
aaa
jne
in
inc
fiaddl
pop
cmp
mov
js
mov
pop
sarb
mov
mov
pusha
lret
in
mov
sbb
lcall
sbb
pop
jno
out
test
in
mov
xchg
push
sbb
sub
out
mov
jge
adc
jl
pop
aam
jecxz
sbb
into
cs
cli
sbb
pop
push
jl
inc
sub
sbb
loop
cmp
data16
inc
push
cli
enter
dec
in
inc
insb
xor
jb
lea
sbb
mov
and
int3
cmp
movsb
mov
pop
pop
pushf
or
inc
mov
lcall
enter
mov
dec
inc
mov
ret
sub
push
ret
pusha
fcoms
nop
adc
push
push
jp
jne
mov
stos
cmc
jbe
loope
rolb
or
mov
sub
jg
js
fwait
pop
add
jb
aam
pop
fmull
dec
mov
adc
and
push
pusha
daa
xor
xchg
sbb
ljmp
sub
xchg
shll
rorl
out
pop
jne
mov
pop
pop
mov
cmp
stos
mov
lret
inc
xchg
js
loope
cmpl
mov
pop
loopne
fildll
sbb
and
push
out
lods
jp
mov
repz
mov
pop
mul
dec
and
and
add
imul
test
sbb
dec
repnz
dec
cmpsb
jo
dec
aad
out
out
push
cmp
out
loopne
fisttpl
inc
in
sub
pushf
jo
and
push
mov
enter
mov
lcallw
push
xchg
inc
adc
mov
xchg
xor
cmc
jp
out
lret
adc
jp
rorw
mov
adcb
mov
in
lods
sbbl
pop
push
loopne
cmpsb
cs
push
cmc
dec
fnstenv
and
xor
mov
sub
mov
push
mov
jge
add
loop
mov
std
sbb
sub
or
inc
cmp
mov
dec
cld
std
jg
sub
jp
addr16
loop
xor
int
xchg
jae
mov
fwait
mov
mov
hlt
mov
in
pop
lea
mov
cmp
sbb
push
mov
aaa
stc
es
loop
mov
repz
or
mov
lds
fistl
sub
jle
cmpsl
sub
mov
leave
jnp
jl
movsb
int
cmp
popa
mov
pushf
dec
sub
jle
lock
pop
xor
stos
push
mov
adc
jne
shll
test
mov
add
or
push
subl
cltd
cmp
xor
mov
fs
arpl
stos
inc
rcll
inc
lock
dec
fsubp
xor
push
dec
or
aam
imul
lret
jl
adc
shl
mov
pop
mov
scas
sbb
mov
repnz
cs
rcrb
pop
rclb
add
jp
mov
push
pop
nop
adc
and
inc
adc
jne
sub
inc
stos
dec
jns
ficoms
fldl
ficoms
es
cmpsb
out
sub
shrb
addl
sbb
ret
aaa
fsubl
fdivl
jno
gs
movsl
mov
push
cli
dec
cmp
xchg
mov
fadd
lret
mov
jno
ja
cmpsb
into
cld
cs
nop
mov
xlat
dec
push
and
lock
inc
mov
lret
loope
push
dec
jb
add
hlt
aas
maxps
in
lahf
in
nop
cmp
xchg
je
cli
movb
out
dec
pop
cld
ja
incb
pusha
pop
adc
imul
xor
sub
lret
cld
jns
sub
aaa
and
cli
je
lret
aas
pop
mov
stos
lcall
out
inc
shl
out
adc
dec
xor
mov
icebp
push
not
out
fstl
les
xchg
push
jae
lcall
out
int3
inc
mov
cwtl
test
xor
pop
inc
cmp
test
negl
and
mov
and
and
ljmp
fdivrl
fbld
xchg
push
pushf
xchg
rcrb
popf
xchg
stos
iret
fcompl
mov
fmulp
out
outsl
bnd
aam
inc
mov
sub
mov
ja
ffree
sub
xchg
data16
xchg
push
movsb
pusha
adc
pop
lock
lcall
lods
imul
mov
push
mov
aas
add
bound
mov
fldenv
jmp
dec
mov
sub
stos
jae
mov
les
lcall
add
call
sub
mov
mov
cmp
push
inc
loop
hlt
pop
cld
xchg
pop
add
movsl
mov
push
inc
cltd
sub
loope
in
in
test
stos
mov
xchg
sub
add
push
popf
mov
sub
xor
aam
jns
out
scas
rcrl
cmc
ds
cmp
mov
iret
test
sbb
icebp
add
or
scas
lret
call
sub
add
xchg
in
mov
adc
dec
adc
addr16
sahf
jnp
outsb
fisubs
add
stos
loope
pop
dec
xor
testl
jge
rcll
ret
sub
movsb
lahf
repnz
leave
dec
add
popf
js
les
xor
or
jo
sub
aad
jmp
stos
out
repz
jne
stos
movsb
rolb
fidivrl
dec
adc
jl
pop
loop
addl
addr16
out
or
loopne
iret
orb
pop
sbb
in
sbb
fisubrl
xchg
or
dec
lahf
push
icebp
std
testb
popa
gs
mov
sarl
ror
xor
or
mov
cmp
jnp
pop
imul
mov
push
adc
push
inc
rcll
push
jns
es
pop
dec
sbb
into
mov
xchg
arpl
aad
mov
subl
dec
jbe
out
insb
or
arpl
rclb
std
ds
inc
jp
shrd
lea
arpl
stc
cmp
lret
in
cmp
jb
adc
in
xor
cmpl
xor
xor
add
dec
push
mov
stc
fidivs
sbb
fstpl
out
push
and
dec
out
inc
dec
sub
fiaddl
fnsave
lods
xchg
mov
sbb
scas
inc
fs
push
loopne
mov
xchg
pusha
stos
mov
mov
cmp
inc
jb
and
andl
pop
or
int
fs
inc
xchg
fmull
xchg
pop
xor
xchg
mov
xor
dec
jp
in
outsb
or
adc
pop
jbe
ja
ds
or
outsl
add
cltd
push
shll
neg
add
inc
into
or
insl
cmpsl
mov
mov
jo
ja
repnz
pop
or
inc
lods
adc
inc
and
test
cmpsl
jae
xchg
dec
fisttps
arpl
and
xchg
in
push
jl
mov
jg
aas
outsl
xchg
push
ret
pop
push
jne
jg
sub
push
enter
repz
add
cwtl
mov
aaa
push
add
mov
nop
fsubrs
loope
sub
test
mov
cltd
cwtl
adc
lret
out
or
je
ja
push
mov
pushf
enter
adc
inc
jmp
xchg
mov
add
push
popa
mov
out
fcoms
push
sbb
mov
lret
or
cli
sub
push
jge
cmp
mov
insb
addb
lahf
ja
mov
sub
movsl
mov
movb
into
cmpsb
jmp
sub
sti
mov
cld
rcrb
in
pop
fsub
aas
jle
mov
mov
rcl
jb
inc
add
jbe
add
outsl
jo
jnp
push
cld
push
lods
dec
mov
or
testl
jmp
pop
popa
cltd
out
mov
push
sub
repz
sbb
idivb
lods
mov
cli
icebp
shrl
ds
ss
imul
and
mov
jbe
fidivs
lcall
imul
ret
mov
fwait
shrb
jmp
xor
mov
aad
sub
popa
data16
push
stos
xchg
stc
ljmp
or
test
xchg
testl
cmp
inc
mov
cmc
movsb
enter
sub
pop
sbb
sub
pushf
movsl
mov
mov
fwait
out
mov
outsl
jl
dec
xlat
adc
and
popa
cmpl
jno
sbb
xor
push
subb
adc
pop
gs
push
daa
and
xchg
fisubrs
fistpl
shlb
cmp
imul
movl
jle
or
adc
push
les
mov
or
mov
mov
jmp
mov
mov
rorb
dec
sub
or
ret
and
negb
mov
lret
and
add
sub
push
sub
in
sbb
movsl
push
mov
lret
jo
cmp
xchg
stos
push
fwait
stos
xor
or
inc
je
and
add
mov
aas
cli
xor
loop
and
sbb
jp
and
out
cmp
fstpl
pop
cs
inc
mov
jno
jl
jo
push
lea
jecxz
inc
or
jecxz
fildl
repz
shlb
lods
das
cli
xchg
outsl
or
xchg
mov
inc
jecxz
xchg
mov
inc
stc
cmp
clc
stos
adc
pop
insl
dec
notb
mov
lret
jo
add
ljmp
or
lret
jae
outsl
mov
sahf
mov
in
fmull
mov
rcrl
mov
gs
leave
sbb
adc
mov
aas
push
dec
and
or
repnz
in
xor
ret
in
cmp
in
enter
mov
jge
addr16
and
and
mov
add
adc
lea
xor
sbb
fs
repz
mov
push
inc
adc
add
jnp
mov
div
dec
jne
arpl
inc
cmc
addr16
ljmp
mov
mov
test
fldl
pop
ljmp
pop
subl
adc
or
enter
jmp
cmc
xor
dec
xor
adc
push
int
sti
xchg
pop
mov
in
jo
call
pop
pop
push
push
jg
xchg
and
addb
sbb
into
jo
rcr
repnz
jo
sub
setge
mov
jmp
xor
leave
sub
sub
mov
xor
dec
mov
mov
lcall
imul
sub
jo
xor
sti
fidivrs
sti
sbb
add
push
jns
enter
call
xchg
adc
imul
mov
sbb
shlb
pop
or
repnz
pop
das
bound
stc
and
insb
inc
shlb
sub
sbb
test
jnp
or
mov
add
or
push
adc
add
sbb
cmp
jnp
pop
jnp
popf
out
jmp
sub
inc
xorw
dec
arpl
aas
push
jl
fimull
insl
dec
pop
popf
mov
sahf
cmpl
sahf
mov
cmp
jge
mov
popa
cmp
xchg
mov
add
nop
pop
push
stos
rclb
mov
sub
dec
dec
int
aas
out
cmp
mov
cmp
ret
mov
js
fiaddl
xchg
pop
in
addl
xor
push
ret
fcoml
inc
outsl
jns
std
push
arpl
xchg
pushf
js
fwait
aaa
inc
mov
fldl
sbb
fstl
jnp
xlat
movsb
scas
addb
enter
arpl
add
mov
loope
sbb
xorb
mov
jb
dec
inc
insb
outsl
jp
dec
loopne
sub
pop
pusha
imulb
in
enter
addb
sub
inc
and
mov
rcl
jae
scas
fsub
test
fistpll
incb
das
movsb
jmp
fildll
pop
cmp
js
ljmp
shrl
push
mov
bound
push
adc
fcmovnb
pop
lcall
jecxz
and
or
mov
mov
das
jo
mov
jb
mov
notl
sti
or
imul
int3
cltd
ja
outsb
jp
arpl
cltd
test
daa
mov
xor
sub
sbb
pop
insb
sub
cmp
stc
sub
push
addr16
shlb
repz
add
push
rcrb
inc
xchg
and
adc
mov
into
and
xor
and
mov
mov
vxorpd
cmpb
aas
push
popa
jmp
call
cmc
in
push
dec
test
divl
push
std
xor
pusha
insl
mov
fbstp
pop
adc
cld
popf
ljmp
imul
xor
jmp
and
sarb
pop
dec
insl
pop
add
add
mov
in
mov
sbb
imul
int3
push
pop
push
sbb
mov
leave
adc
cmp
cli
and
cmpsb
push
xchg
insl
xchg
insl
sbb
sub
xchg
cmp
push
inc
sub
data16
rorl
sbb
js
cmpsb
imul
fdivrl
stc
adc
mov
jge
inc
fisttps
insl
leave
xchg
and
hlt
incb
xchg
jb
inc
fisubrs
ffree
jmp
cmp
dec
repnz
adc
sbb
ret
mov
mov
add
dec
sbb
dec
sub
repnz
cmpl
jb
es
add
lock
loop
faddp
gs
add
sarl
addb
push
or
inc
les
outsb
xchg
cltd
arpl
jbe
cmpsl
or
arpl
or
mov
jp
das
jne
sbb
into
lea
or
and
leave
adc
test
xchg
hlt
out
fldcw
aas
sbb
cmpsl
or
and
xlat
outsb
rcl
shlb
pop
out
mov
cmp
or
aam
fstps
push
mov
lret
pop
bound
pop
xchg
shrl
inc
jns
sub
mov
test
jno
or
orl
sbb
xchg
mov
data16
mov
xchg
xor
in
jecxz
sub
jle
cmp
repz
push
sbb
mov
jns
lods
enter
cwtl
mov
movsb
sub
idiv
and
sub
fadd
decb
pop
pop
cwtl
in
mov
cmp
and
lods
push
data16
adc
inc
sub
test
mov
fiadds
sahf
lds
gs
push
push
dec
insb
jb
mov
dec
cmp
out
lret
push
mov
push
fsubrl
test
aas
imul
add
xor
outsl
arpl
sbb
lret
fs
push
orb
add
lds
bound
ret
cmp
insb
mov
mov
mov
repnz
fsubl
sub
mov
sub
lds
rorl
and
stos
les
xchg
cmp
clc
xor
mov
mov
mov
push
push
push
mov
adc
mov
aas
ret
outsl
and
sahf
addr16
test
xorl
xor
ss
out
fidivl
sub
push
aaa
aam
inc
and
add
leave
das
add
lahf
push
daa
adc
arpl
mov
movsl
dec
sub
adc
popf
fwait
inc
push
jae
ja
mov
addr16
sahf
inc
rorb
in
push
jbe
outsl
sub
or
push
pop
popa
pop
and
in
mov
jl
std
loop
jmp
lcall
insl
aam
push
call
mov
mov
daa
in
fs
sub
in
xor
add
hlt
pop
pop
jle
pop
push
or
inc
push
inc
xor
jo
cmp
cmpsb
push
addr16
xor
mov
and
pusha
push
push
testb
or
add
push
mov
inc
xor
dec
or
jl
subl
inc
in
sbb
sub
jb
sarb
and
sti
les
xchg
sahf
out
in
inc
imul
cli
jle
outsb
stc
jnp
xchg
jne
popa
sub
std
jnp
dec
add
mov
in
js
iret
flds
cmp
inc
movl
test
loop
push
sysret
xchg
add
dec
mov
inc
fcmovnbe
pop
cmp
stos
push
movsl
mov
cld
ds
mov
inc
and
ds
fldcw
adc
js
and
mov
aad
gs
adc
notb
popa
loop
xchg
lcall
xlat
inc
xchg
divl
decb
mov
or
pop
push
add
mov
or
lcall
mov
mov
lahf
cmpsl
push
and
insb
mov
call
cmp
int3
adc
or
cmp
outsb
push
daa
das
shl
and
sbb
push
push
jmp
shrl
xchg
xchg
mov
insb
dec
shll
ret
int3
add
arpl
in
sarb
cmpsb
lahf
stos
je
addr16
stos
xlat
int
add
idivl
pop
mov
shl
fnstenv
loope
xor
jo
or
pop
xchg
cmovno
xchg
jmp
lahf
rolb
xlat
ffreep
jmp
or
push
ret
addr16
je
cld
push
outsb
clc
hlt
cmc
sbb
cmp
ljmp
sarl
pop
ljmp
jno
mov
pop
pop
shll
pop
loopne
rclb
in
in
cs
jge
mov
rsm
inc
mov
dec
inc
scas
aaa
xor
repz
aaa
roll
jp
popa
imul
xor
mov
mov
adc
mov
xchg
jbe
xchg
sti
push
loop
sub
mov
jge
push
and
jnp
or
andb
push
cmpsl
sbb
sbb
jbe
mov
sbb
push
fcmovbe
sahf
fs
sub
xchg
js
sbb
shrb
add
jbe
inc
out
jmp
frstpm(287
jp
jl
mov
mov
xor
movsl
xor
rcr
add
jne
ret
push
pushf
icebp
sub
lahf
cwtl
push
js
xor
out
add
inc
jge
andl
shll
xor
mov
mov
or
or
imul
icebp
lods
jb
xor
cmc
xchg
fwait
jb
mov
andl
test
and
add
sbb
xor
or
jns
or
out
dec
adc
jle
xchg
pop
test
mov
sahf
push
jb
sbb
mov
rol
and
adc
cmp
jnp
call
loopne
aaa
cmpsb
lcall
sub
lret
notb
xchg
jmp
jg
or
jae
repnz
sub
or
popa
sub
test
hlt
and
sbb
jno
test
inc
pop
pop
addr16
clc
pusha
stos
adc
and
sub
aad
int
inc
inc
push
mov
out
push
nop
test
sbb
daa
push
and
xchg
out
sbb
push
pop
mov
push
enter
add
mov
stos
pop
push
jbe
jne
test
out
ss
dec
das
mov
pop
mov
cmp
stc
mov
xor
jno
pusha
jecxz
and
sbb
sahf
push
xchg
jne
xor
cmovns
dec
xchg
lea
and
jg
dec
adc
adc
mov
mov
cmp
xchg
fiaddl
fwait
jno
pusha
adc
enter
ja
cmpsl
push
cmp
dec
mov
pushf
adc
xchg
loope
repz
stos
jo
int3
sti
rcrb
cmpl
push
nop
daa
pushl
insb
lock
imul
imul
inc
mov
scas
loopne
movsb
add
push
add
shrb
pop
jmp
xchg
nop
testl
mov
nop
ds
push
cmp
mov
cmpsb
or
ja
or
lea
and
mov
and
jmp
pop
mov
pop
mov
ss
dec
adc
push
inc
push
pop
push
dec
scas
test
pop
xchg
pop
data16
mov
cld
test
push
push
sbb
mov
jne
and
cmp
lock
inc
mov
dec
pop
dec
jbe
xchg
pusha
das
push
push
test
pop
mov
cld
fidivrs
stos
sub
cmp
rol
mov
iret
les
push
mov
push
aaa
rolb
jae
xchg
jmp
pop
scas
sbb
sbb
ss
pop
stc
mov
sbb
and
enter
cmpsl
lcall
fstpt
pop
inc
fisttps
sbb
fdivrp
test
or
mov
sahf
xor
ret
pcmpeqw
pop
sub
js
test
aaa
test
dec
loope
mov
mov
pop
xchg
xchg
pop
or
iret
mov
jbe
loope
sub
mov
jne
test
inc
and
cmp
add
sbb
mov
icebp
lahf
lret
push
add
stc
add
lock
dec
movsb
mov
pop
pop
jmp
sub
ss
cmp
mov
xchg
leave
sub
mov
fisttpll
aaa
inc
jo
imul
mov
mov
sarb
adc
test
lret
out
mov
and
out
sub
mov
clc
cmp
push
sbb
pop
or
mov
or
outsb
stos
insl
rorb
pop
dec
nop
mov
insl
cmpsl
call
xchg
inc
xchg
inc
push
incl
push
push
ret
lret
push
cmp
out
movsl
push
push
fs
aam
arpl
ficompl
push
xchg
sbb
stc
pop
mov
adc
sbb
outsl
jnp
in
jmp
mov
test
inc
push
fmuls
xor
ficoms
movsl
in
clc
test
std
int3
mov
cltd
cmp
insb
fstl
pop
bsr
es
pop
mov
xor
jae
movsb
sbb
rol
dec
std
jne
andl
pop
push
lret
inc
ficompl
jnp
cli
aas
aam
xor
arpl
sbb
xor
and
scas
add
xchg
xchg
loope
pop
cmc
inc
sub
test
and
xchg
addb
fstps
mov
mov
push
sbb
jbe
adc
xor
stos
inc
aad
addr16
mov
mov
cmpsb
out
das
fnstcw
sub
jmp
xchg
jae
in
lret
or
mov
les
push
aam
xor
paddb
push
push
push
and
pusha
xchg
jnp
out
inc
mov
mov
mov
div
add
lock
imul
mov
jge
cmpsl
pop
mov
ja
or
fwait
mov
lcall
repz
gs
pop
lea
jbe
ja
stos
inc
add
bound
mov
and
lcall
inc
dec
jns
mov
lcall
xchg
adc
imul
outsl
sub
insb
sbb
imul
das
jns
sub
mov
leave
insl
push
add
fmull
xchg
iret
jae
das
insl
out
cwtl
pop
jecxz
pop
mov
je
test
sub
fiadds
call
inc
pmulhw
mov
repz
scas
mov
inc
clc
sbb
lods
popf
cmpsl
das
jns
addr16
and
adc
inc
sub
pop
mov
pusha
imul
addb
lret
jnp
adc
xchg
mov
xlat
sbb
jp
test
sbb
push
push
pusha
call
es
adc
fisubl
mov
or
imul
repnz
push
sbb
pushf
dec
sub
rolb
dec
pusha
add
inc
dec
inc
xchg
mov
jo
dec
pushf
ss
pushf
add
sbb
mov
and
or
cmp
pop
aas
mov
add
scas
push
std
outsl
mov
aam
jnp
and
pop
and
fstl
aam
cli
into
jg
inc
lock
mov
xchg
cmp
adc
adc
test
clc
cmp
push
mov
in
dec
sub
test
ja
sub
push
and
push
pushl
jns
mov
adc
int3
rcrl
mov
xor
cmpsb
idiv
out
inc
nop
repnz
gs
dec
xchg
xor
xor
je
je
lds
and
daa
lcall
xchg
insl
rolb
call
lcall
test
sahf
adc
loope
mov
mov
pop
mov
xchg
pop
fcmovb
ja
sarl
jne
or
outsb
adc
cmp
xchg
fwait
add
push
hlt
jl
test
das
sbb
push
sub
dec
mov
xchg
dec
dec
fimuls
xchg
les
mov
cmp
shll
or
push
mov
and
cltd
pop
ror
mov
dec
std
push
push
inc
js
inc
cmc
or
cmp
std
imul
repz
gs
add
dec
cli
push
add
bound
or
lret
dec
pop
and
je
adc
mov
mov
push
cmpsl
testl
jl
movaps
fs
cmc
fidivs
pushf
lret
xor
into
jg
push
repz
int
stc
xor
in
in
and
xor
or
scas
mov
mov
jle
es
dec
cmp
cmpb
dec
adc
ficoms
repz
xor
sub
pop
adc
ljmp
inc
movsb
xlat
jns
and
xchg
mov
xchg
pop
popf
fcoml
mov
fldcw
rorb
outsb
cmpsl
lret
push
push
stos
adc
jns
pop
das
jo
xchg
xor
lock
mov
sub
mov
stos
push
fbstp
sbb
pop
repz
fs
repz
std
shlb
cmpl
imulb
push
fwait
movsb
fldl
jmp
inc
data16
mov
movsl
in
cmp
loopne
test
inc
cs
nop
jmp
mov
cmp
scas
ret
cmpsb
aad
lea
inc
ds
cli
mov
andb
xchg
cmp
cmp
xor
sbb
dec
or
cltd
jns
jb
mov
fcmovne
ret
roll
add
jbe
aaa
cli
push
adc
sbb
mov
xchg
jmp
xchg
sub
push
imul
jae
repz
scas
add
sbb
ret
mov
scas
popf
cmp
daa
add
icebp
sti
add
movsl
pop
add
popl
add
xchg
sarl
dec
cmpsl
add
mov
daa
shll
mov
mov
pop
inc
mov
test
cmp
movl
mov
fdivrl
addr16
xchg
mov
xchg
test
pop
sub
jle
push
sub
lahf
mov
push
jp
mov
xor
adc
inc
xchg
mov
mov
xlat
ret
or
js
repnz
wrmsr
rcrl
popa
lea
ljmp
pop
scas
pop
pop
xor
pusha
xchg
fistpll
adcb
push
xlat
push
jno
jae
out
add
pop
cmpsb
test
dec
sbb
in
xor
gs
lock
add
mov
clc
sbb
leave
jl
ljmp
and
pusha
rcrb
sbb
sbb
jae
insb
stc
mov
and
mov
cld
jecxz
xchg
fwait
push
push
outsl
cmp
adc
or
insb
pop
imul
jae
cmpsb
ficompl
inc
mov
mov
popa
ja
push
fwait
pop
loopne
pop
shl
mov
or
sbb
aas
jbe
lds
pop
cmp
sti
mov
mov
jns
out
in
stc
jmp
xor
jae
pusha
push
dec
sub
xchg
fldt
stos
add
cli
jmp
imul
aaa
das
add
sti
fs
repnz
orl
loope
mov
cmpl
cli
sub
push
push
fcoml
xor
insb
pop
push
jmp
ror
movsl
mov
imul
cmp
inc
push
cmp
xor
jle
pop
cmc
xorb
pop
xchg
push
enter
mov
hlt
mov
mov
lret
push
push
sub
rcrb
lahf
lods
daa
add
mov
insb
pushf
shl
push
pop
xchg
jecxz
movsb
cmp
ja
mov
popf
scas
inc
jno
add
dec
add
int
loope
pop
sub
add
in
rolb
data16
add
fidivrs
push
xor
cmpw
int
movsl
pop
pop
ret
jne
arpl
adc
movswl
jno
adcb
xchg
jecxz
fs
in
fdivs
or
dec
xor
mov
aaa
leave
test
inc
lret
adc
add
popa
out
sbb
mov
fcoms
rorl
add
and
push
mov
pop
jp
jle
push
add
mov
adc
xor
adc
mull
stos
xchg
movsb
lahf
ljmp
fcmovb
push
es
outsl
sub
jne
add
xor
es
fucomi
cld
mov
mov
add
mov
add
rcll
or
lds
mov
jecxz
mov
dec
and
ret
mov
push
out
inc
push
pop
mov
aam
and
lock
adc
push
xchg
push
cmp
int3
dec
jecxz
push
pop
mov
sub
cmc
mov
repz
test
pop
enter
aam
inc
mov
jecxz
inc
cmpsb
xchg
hlt
cmc
lods
mov
dec
mov
fldt
fistps
mov
cld
push
movsl
std
rorl
add
jl
cld
mov
leave
lret
scas
pop
outsl
je
xchg
push
jecxz
jg
adc
pop
fisttpll
int
ss
push
ret
jg
out
lods
idivl
jmp
fwait
andl
push
mov
push
aam
cmc
push
das
popa
dec
mov
adc
in
fmuls
insl
out
xor
jp
xor
mov
cld
lea
gs
xor
insw
addr16
sbb
int
cmpsb
xor
add
mov
adc
sbb
inc
ret
call
adc
out
int3
cltd
sti
push
in
aas
mov
lods
aam
out
sbb
xchg
mov
dec
fmuls
jnp
mov
movsb
push
test
adc
ret
xchg
fst
mov
or
cmp
cmc
dec
cmovns
cmp
add
inc
fisubs
mov
stos
adc
and
icebp
out
rorl
sub
cmp
out
xchg
lret
xor
jmp
shl
popa
and
je
cmp
je
rcrl
sahf
adc
cs
movsl
mov
shlb
std
movsl
push
jmp
jge
fistps
mov
das
xchg
mov
push
movsl
cmpsl
xchg
sbb
test
sbb
mov
leave
add
call
pop
mov
pop
call
add
cli
pop
mov
and
dec
int3
pop
add
mov
jae
mov
pop
in
xchg
orl
adc
lret
movsb
lcall
jl
cs
add
mov
shlb
dec
movsb
test
jo
cmpsb
pop
jmp
cltd
jge
lret
mov
xchg
stos
xor
xor
xor
add
jns
out
push
xlat
mov
or
xchg
ja
nop
mov
mov
sbb
jae
aas
pop
gs
sbb
xchg
mov
fstps
int3
rclb
mov
adc
filds
mov
adc
push
inc
sbb
add
bound
dec
cmp
mov
js
adc
adc
test
mul
push
and
inc
insb
pop
xlat
xchg
push
outsb
in
ss
dec
mov
dec
add
in
add
inc
dec
sbb
push
rcrl
jno
ds
stos
mov
inc
fcompl
jbe
mov
mov
jl,pt
mov
pusha
neg
xor
sbb
mov
inc
subl
das
inc
mov
mov
cld
pushf
push
xchg
cmp
xchg
mov
xchg
push
jg
ror
and
or
lock
jp
mov
inc
or
push
add
mov
adc
leave
inc
outsl
jno
xor
push
inc
mov
lcall
adc
leave
fistpll
push
insb
cmp
cld
stos
hlt
rorb
shrl
mov
jmp
js
aad
push
sub
inc
add
jmp
cmpl
loopne
shl
dec
aaa
stos
xchg
fs
lcall
mov
adc
ss
sbb
xchg
mov
push
rcll
cmp
sbb
dec
sarb
aam
jnp
mov
push
push
adcl
mov
jo
xchg
and
sub
xchg
dec
inc
and
push
xchg
mov
jmp
popl
fbld
mov
cmp
sbb
xchg
lea
data16
push
dec
movsb
repz
adc
jg
in
or
loopne
into
gs
xchg
sub
daa
test
mov
stos
ja
dec
or
ret
inc
lds
mov
pop
mov
aad
das
test
cli
cmp
jo
jbe
in
movsb
mov
or
enter
fwait
cmp
or
loopne
add
pop
out
insl
sar
mov
or
xor
cltd
fstps
stos
ljmp
jnp
dec
test
lock
cwtl
sub
cmpsl
and
enter
xchg
das
mov
mov
cltd
lcall
repnz
fwait
add
jmp
daa
rcrl
fistpll
sbb
mov
jb
loope
sbb
sahf
popf
lds
mov
xchg
mov
pop
mov
int3
mov
stos
push
ljmp
add
lret
arpl
jnp
inc
pushf
adc
das
pop
push
and
jp
js
push
in
add
xchg
mov
inc
ljmp
fidivrs
addr16
shl
adc
dec
dec
mov
das
xor
jl
test
out
hlt
and
je
movsb
add
dec
std
jle
push
inc
das
aas
pop
mov
or
mov
sbb
xor
pop
pop
push
mov
sbb
mov
jno
cmpsb
icebp
mov
imul
aad
mov
push
fnsave
testl
add
ja
dec
pop
jmp
popa
lea
adc
pop
into
xchg
sbb
cmp
test
mov
out
fiadds
xchg
mov
loope
jecxz
xchg
mov
pop
jns
jle
mov
es
mov
cmp
into
push
hlt
push
dec
dec
int3
ror
jmp
xchg
js
mov
iret
mov
ja
and
jge
cmpsl
sub
add
jb
add
jmp
ljmp
push
out
adc
lods
ret
xor
jge
loopne
mov
cli
mov
add
gs
or
lret
ja
test
cmp
mov
addb
mov
pushf
clc
pop
aaa
popa
mov
repz
jge
mov
les
aam
pop
ret
das
dec
mov
stos
out
mov
push
gs
in
pop
push
inc
shr
add
or
add
repnz
or
das
mov
inc
pop
xchg
hlt
push
cwtl
inc
sub
cs
pusha
ret
and
data16
push
inc
addr16
pop
cmpb
push
sbb
fdivp
sbb
dec
cmp
mov
je
sub
sub
cmpsl
lret
add
fs
scas
cmpsl
gs
in
loope
mov
mov
cmp
add
cmpsl
sbb
in
sub
sti
mov
sub
xchg
std
xchg
pop
cld
mov
adc
xorl
mov
xor
dec
lods
stos
leave
sbb
pop
push
or
add
or
adc
scas
push
fs
addr16
xor
inc
xacquire
shll
sub
popa
ficomps
fcom
scas
jb
dec
mov
sub
push
in
cmp
imul
xlat
xor
sbb
mov
das
daa
push
gs
add
or
inc
loopne
loopne
cwtl
pusha
inc
inc
mov
mov
iret
stc
jne
out
in
in
xchg
xchg
movsb
inc
sub
insb
ljmp
shll
bound
mov
test
jle
fdiv
addb
sub
jno
fs
and
lds
xchg
daa
loope
xor
enter
test
jp
push
loopne
cs
sahf
lcall
lcall
mov
sbb
add
int3
dec
sub
stc
repnz
ss
mull
and
jno
jge
push
or
and
or
sub
jae
je
mov
aaa
es
clc
out
xlat
mov
repz
in
dec
in
jbe
mov
cld
fisttpl
xchg
imul
inc
test
jns
cmc
xchg
mov
cld
mov
pop
push
call
cli
jae
mov
adc
ret
js
das
outsb
cmpsl
lahf
push
fxch
mov
das
lds
enter
dec
dec
repnz
mov
xchg
mov
dec
ret
ja
jae
cmp
push
imul
clc
pop
pop
xlat
cld
cmp
stos
push
les
sub
aad
pop
hlt
idivb
aaa
outsb
adc
int
fildl
add
movsb
popa
enter
sub
je
inc
mov
sbb
push
decl
pop
lea
mov
jecxz
lret
sahf
xor
mov
jle
cmpsb
xchg
cmpsl
mov
mov
out
int3
or
jne
adc
jmp
jecxz
jl
sub
lods
fimull
decl
push
push
outsl
xor
stc
jbe
cwtl
and
or
xchg
loop
outsl
or
ss
jnp
hlt
in
in
negl
ffree
negb
call
bound
pop
mov
or
loope
addl
lahf
rcl
xor
std
iret
cmp
cli
pop
and
stc
call
dec
xor
js
rorl
into
popa
ljmp
adc
mov
push
sbb
popf
push
cmp
data16
add
xchg
fsubrl
pushf
sbb
push
daa
or
ret
inc
repz
sbb
adc
sub
sbb
ljmp
bound
rcrb
dec
cmpb
jmp
push
xlat
int3
push
or
add
xchg
mov
adc
add
je
jge
push
mov
test
into
cmc
sub
mov
sub
sub
inc
fdivrs
fcompl
iret
jge
fcmovne
xchg
xor
ret
pop
int3
mov
stos
push
stc
mov
hlt
push
data16
mov
scas
push
inc
mov
mov
aam
js
xor
sbb
push
dec
mov
adc
jge
dec
test
test
xchg
fs
loop
jno
push
or
sub
movsb
sahf
jns
push
pop
mov
adc
fwait
pop
stos
pop
jb
out
ja
jne
ds
jp
jae
dec
jp
shlb
inc
pop
scas
fsubr
push
xchg
stc
cmp
ret
std
push
data16
mov
mov
xor
movb
xchg
sar
iret
clc
or
jno
and
mov
cltd
cmp
pop
cmpl
neg
pop
jp
mov
inc
popf
dec
dec
fs
jbe
and
scas
popa
jmp
rcr
xor
aam
test
xchg
mov
daa
and
dec
pop
ret
inc
xchg
mov
imul
adc
mov
sub
cmc
aad
dec
popf
inc
xchg
mov
xor
out
roll
push
mov
sbb
cmp
arpl
jmp
push
mov
fs
int
mov
cli
imul
push
pop
jnp
inc
xchg
es
mov
sbb
lcall
insb
add
xor
into
inc
push
daa
adc
xchg
push
pop
icebp
lds
xchg
mov
xchg
insl
sbb
inc
loop
popf
or
jno
into
cmc
out
inc
and
adc
xor
lret
adc
scas
xchg
icebp
imul
inc
or
push
adc
insl
cmp
cltd
stos
dec
cwtl
jecxz
mov
sbb
jne
mov
lea
jbe
push
inc
in
xchg
mov
sbb
in
jns
movsb
adc
mov
cmpsl
sub
cwtl
pop
xchg
jnp
pushf
lahf
xchg
mov
pop
test
pushf
add
sub
imul
or
sub
popa
out
idivl
jae
je
icebp
mov
jns
push
fstpt
push
xchg
or
inc
jbe
xlat
mov
xchg
addl
push
inc
sub
clc
test
or
aam
or
pop
loopne
xor
popa
cmp
fidivrs
daa
mov
popf
dec
add
xlat
andl
mov
xorb
xor
imul
stos
sti
lahf
and
cltd
mov
xorb
and
pop
add
cmp
sbb
fwait
stos
dec
fstl
test
inc
push
jb
incb
jbe
pop
mov
out
adc
pop
ret
cmc
adc
loopne
inc
loop
jmp
stc
sbb
xor
aam
in
cwtl
inc
insb
inc
mov
jecxz
mov
pop
mov
cld
inc
dec
jo
xor
pop
div
idivb
pop
cld
xchg
push
pop
ljmp
jns
mov
fcomps
int
xorb
js
jnp
sahf
push
fucomi
lret
mov
shlb
xchg
push
int3
int
into
lds
iret
push
es
xchg
xor
and
add
out
ja
hlt
pop
xor
or
jmp
jne
ffreep
pop
mov
popf
jecxz
adc
mov
clc
sbb
dec
mov
shrl
inc
repz
popa
scas
das
aam
insl
adc
jp
sub
pop
ret
sbb
cmp
lods
jne
iret
push
cmp
loop
xchg
daa
out
inc
pop
call
xor
lods
inc
mov
or
xchg
adc
or
pushl
jno
fucomi
mov
xor
jne
scas
stc
and
ja
push
cmpsl
xor
pushf
dec
or
scas
mov
int
or
inc
and
js
inc
aas
jo
mov
sbb
insl
test
repz
cmp
xor
popf
jnp
mov
mov
adc
nop
sub
inc
das
aad
xchg
cmp
dec
sub
sarl
or
mov
mov
imul
cmp
pop
mov
movsb
test
stc
std
repnz
aas
movsl
jg
mov
push
sbb
or
loop
fimuls
mov
lcall
xchg
xchg
cmp
scas
inc
lret
xchg
mov
vmaxpd
aas
cmp
cwtl
adc
inc
jo
or
xor
pop
insl
sub
push
ljmp
es
mov
incl
dec
and
lods
xchg
or
call
loope
inc
mov
jbe
test
pop
push
add
popa
in
xchg
xchg
shlb
hlt
xchg
inc
sub
adc
xchg
popf
mov
lea
aad
sub
movsb
insl
int3
jns
add
sar
icebp
imul
sbb
ret
ficoml
ljmp
loope
lret
inc
xchg
dec
add
xor
mov
inc
hlt
ja
enter
push
aas
jmp
jbe
inc
push
aam
cmp
pop
mov
rorb
movsb
shll
test
in
das
or
notb
pushf
and
and
mov
in
test
test
pop
aas
xchg
out
sub
xchg
orl
and
add
das
inc
xor
out
bound
pop
fmuls
sbbb
js
scas
and
mov
sub
push
lcall
xchg
adc
leave
and
xchg
jg
in
xchg
int
loopne
pop
scas
and
fisttps
xchg
cmp
cmc
adc
pop
pop
lret
or
cmp
mov
jge
xchg
xchg
mov
dec
fildll
outsb
jo
arpl
or
sar
cld
or
or
mov
mov
adc
xor
add
lds
notl
inc
xor
out
sbb
xchg
in
faddl
fsubrs
aas
lret
push
int
lock
nop
cwtl
fidivrs
faddp
lea
lret
push
in
sti
int3
scas
into
add
add
cmp
sub
pop
xor
mov
mov
cmc
push
push
lahf
cmp
sub
add
nop
fldenv
push
rolb
push
push
test
xchg
and
mov
lds
insl
nop
adc
cmpsl
xor
xchg
mov
loope
insb
pusha
push
addr16
inc
cmp
test
ss
jmp
dec
add
lahf
dec
lea
lods
stc
adc
dec
mov
sub
inc
inc
divl
cltd
stos
aad
jl
ljmp
cs
inc
pop
lret
sahf
cld
sbb
fsubrs
hlt
test
inc
ss
cmpl
loope
das
sub
nop
arpl
iret
mull
insl
outsb
mov
push
xlat
adc
mov
jl
mov
into
xchg
push
sbb
pop
es
and
push
jmp
cmpsl
push
mov
xor
test
mov
jae
cmp
pop
sar
or
xchg
xchg
adc
fs
or
pusha
cld
sub
cmc
movsl
xor
sub
cmp
sub
sti
lds
jno
cs
popf
inc
lods
jne
mov
and
inc
std
shl
mov
push
stos
icebp
inc
mov
mov
mov
mov
xchg
sbb
dec
jge
mov
out
std
dec
test
sbb
xchg
int3
pop
dec
ror
mov
test
inc
mov
pop
test
clc
mov
outsb
fcmove
lret
push
or
xor
mov
test
addl
data16
sbb
mov
stos
push
and
push
dec
jbe
inc
xor
pop
xor
xchg
push
rcrl
dec
adcl
sbb
xchg
daa
daa
ds
pop
jbe
test
sub
xor
repnz
pop
ja
or
mov
pop
jmp
mov
pop
mov
mov
xor
fmull
cld
iret
int3
push
scas
jle
push
les
arpl
cmp
pop
cld
stos
sub
or
mov
xchg
sbb
push
push
insl
scas
out
aam
or
stc
imul
sbb
iret
iret
ljmp
repz
cmpsb
enter
and
add
or
test
movsb
xlat
mov
push
lods
push
data16
fcos
cmp
popa
das
dec
sub
shl
clc
push
pop
xchg
fnsave
or
cmp
repz
pop
jmp
fildll
arpl
xor
enter
ja
and
and
adc
sub
push
fwait
test
sti
mov
or
xchg
in
mov
fdivl
popa
or
mov
loop
or
cmc
mov
in
dec
mov
jmp
sbb
push
sahf
mov
jle
std
pop
enter
call
repz
mov
pop
icebp
js
sbb
out
mov
xor
inc
daa
daa
adc
inc
mov
and
adc
sub
pop
mov
xor
ror
sarl
je
dec
push
push
sahf
stos
or
loopne
adc
inc
pop
add
cld
test
mov
mov
scas
sub
push
arpl
fdivs
mov
sahf
cmp
test
mov
ror
fldz
and
sahf
pop
mov
cltd
pop
pop
mov
fwait
pusha
icebp
adc
nop
dec
out
adc
add
mov
mov
dec
cli
mov
movsb
jno
shlb
mov
std
out
cld
in
and
out
pop
xorl
add
mov
lahf
pop
adc
and
cltd
fdivr
mov
imul
sbb
movsb
xor
ljmp
jo
push
mov
daa
add
mov
scas
sti
sub
or
fs
mov
inc
pop
aad
jp
and
ljmp
das
fldcw
mov
pop
or
mov
mov
mov
in
dec
push
out
mov
xchg
jmp
xor
jo
daa
insl
mov
lret
jno
icebp
fsub
jmp
leave
sbb
sti
mov
frstor
aad
jns
out
dec
push
test
imul
and
push
ds
sbb
inc
xchg
mov
shlb
and
cmp
sti
jnp
out
dec
jbe
vmread
adc
add
push
cmc
negl
sub
lret
sub
add
pop
push
jp
insb
call
test
mov
divb
xchg
sub
daa
std
add
pushf
fcmovnbe
cmpb
sbb
dec
lods
add
in
xchg
ljmp
pop
fstl
rolb
mov
arpl
rorb
and
push
jge
aaa
mov
push
sti
in
aas
mov
cli
sub
aad
in
lock
mov
iret
push
lcall
inc
jae
in
sub
scas
cltd
sbb
inc
dec
push
xor
in
into
mov
stos
and
cwtl
xchg
imul
jno
in
aaa
sub
dec
cli
aaa
push
add
dec
movsl
ljmp
jl
xor
sbb
rclb
xchg
mov
and
outsl
cltd
push
fwait
mov
push
push
cltd
mov
sti
cmpb
arpl
push
pop
pusha
icebp
xlat
insl
outsb
pusha
ljmp
aaa
push
cmp
rcl
push
mov
inc
mov
pop
add
ss
jo
loope
add
sbb
mov
sbb
mov
push
out
call
bound
ficoml
out
cltd
mov
cmpsb
loope
push
jb
shlb
jmp
dec
repnz
adc
mov
or
jmp
mov
add
scas
cmc
hlt
rcl
imul
ja
xchg
pop
mov
loopne
and
fcom
jecxz
adc
jno
push
mov
popa
mov
jns
loopne
jg
dec
ds
mov
push
loope
or
add
inc
inc
outsl
aam
dec
mov
or
dec
pop
ss
aas
adc
fs
aas
jg
inc
lods
dec
sub
pusha
in
mov
test
sub
sti
aam
ljmp
mov
xlat
pop
ss
and
popf
ret
jp
xchg
inc
push
hlt
in
mov
jl
inc
mov
jno
jno
jne
dec
rclb
insb
lods
fstpl
test
inc
sbb
cmpsl
add
jo
dec
inc
sub
insl
dec
and
pop
push
addr16
adc
insb
call
add
add
rcl
aaa
pop
insl
adc
stos
aas
mov
dec
imul
fstps
xlat
push
call
lret
nop
pop
add
pushf
mov
and
or
push
ror
jecxz
pushf
xor
inc
sbb
mov
or
dec
out
out
pop
cmpsb
pop
je
add
mov
jl
mov
aaa
in
push
repz
rcrl
inc
pop
inc
enter
in
std
pop
sub
adc
out
cs
pushf
aas
cmp
xor
push
stc
test
and
fs
scas
es
inc
fwait
insl
fldcw
jmp
ficompl
scas
int3
fisttpl
rcll
lcall
cmp
loope
insb
mov
xor
inc
add
loop
xchg
push
scas
jge
cld
mov
lret
adc
or
mov
dec
pop
pop
dec
jmp
jle
and
mov
int
cli
jns
repz
adc
subb
incb
adc
cmp
mov
int
and
xlat
xor
imul
fdivs
add
cmp
mov
dec
push
sahf
sub
ss
cmp
mov
loop
or
pop
icebp
inc
loope
xor
adc
inc
and
jmp
mov
jp
push
cmpb
cwtl
mov
cltd
stos
inc
push
and
psubd
mov
or
aam
insb
inc
sti
xor
mov
incb
inc
insb
jecxz
testb
or
mov
and
jno
and
cmpsb
inc
or
push
mov
subb
pop
mov
mov
jns
in
pop
sub
pop
adc
movsl
pop
lock
aaa
pusha
je
mov
and
pop
fdivrl
rolb
gs
or
adc
adc
loop
adc
ja
into
pushl
adc
adc
mov
ja
inc
push
cld
shlb
xor
inc
xchg
ret
mov
adc
pop
jae
fnsave
das
pop
sbb
xor
or
addl
addb
jnp
fldt
in
and
ret
mov
mov
mov
sub
adc
sti
xchg
mov
ret
les
mov
inc
push
divl
sbb
push
iret
rcrb
sub
fidivrs
push
das
lock
mul
xor
jnp
mov
mul
pop
mov
call
push
pop
iret
mov
enter
arpl
data16
or
movsl
adc
aam
test
cltd
sbb
add
pop
dec
movl
int3
addr16
jo
pop
adc
test
add
jmp
sub
clc
aaa
add
sub
lcall
in
popa
xchg
adc
sbb
push
lods
popf
in
jno
mov
lcall
xchg
enter
testb
mov
stc
xor
inc
mov
mov
repnz
inc
cmc
lret
add
and
arpl
inc
adc
push
leave
dec
sub
push
pop
lahf
data16
pop
dec
mov
test
inc
in
push
push
mov
jge
inc
shll
or
enter
cmp
mov
pushf
xorb
jns
inc
cmp
imul
sub
pop
icebp
fsts
xor
jbe
xchg
mov
fimuls
rclb
sub
or
or
fst
pop
test
scas
dec
pushf
call
push
jmp
xchg
xor
fmul
fidivs
add
dec
inc
jno
add
mov
and
inc
push
push
jnp
std
imulb
or
in
out
inc
push
popf
push
stos
pop
dec
mov
addr16
xor
xor
add
in
loope
rcl
add
pop
add
xchg
stos
xor
test
xchg
cld
cmp
stc
push
or
mov
outsl
out
insl
testb
mov
mov
jge
add
pop
adc
mov
sub
in
gs
fldl
dec
out
mov
cmp
rorl
cmp
sbb
sbb
xchg
adcb
add
xchg
sbb
pushf
add
jae
out
sbb
push
dec
jns
pop
xor
adc
pop
es
sarb
das
cmc
add
aam
xchg
xchg
aaa
xchg
lret
and
out
movl
cmc
ret
data16
xchg
pop
or
adc
not
sub
adc
sbb
int3
sub
dec
adcl
int
push
add
jbe
sub
iret
or
imulb
data16
lahf
loopne
test
imul
adc
or
aad
dec
jecxz
pop
or
xlat
in
sub
inc
mov
jno
sbb
cmpsl
vcvtsd2ss
les
jae
arpl
pop
cmc
cmp
insb
push
xchg
gs
sarl
mov
jno
insb
mov
lods
or
test
dec
xor
test
mov
daa
dec
xor
in
dec
jecxz
out
adc
loopne
sbb
aam
cld
cld
mov
adc
out
fs
mov
push
scas
jp
cmp
ss
enter
xchg
popa
and
imul
push
xchg
mov
fwait
scas
xchg
imul
pop
inc
jl
movsb
add
loope
sub
dec
mov
pop
ret
jl
inc
mov
jb
xchg
aam
xchg
cmpsl
inc
jnp
jne
daa
cmp
push
loopne
mov
add
test
xor
in
sub
mov
mov
inc
adc
ret
adc
add
jge
sahf
jnp
movsb
push
arpl
lds
jnp
scas
mov
jo
xor
push
jp
mov
mov
jmp
sarb
jnp
add
sbb
jo
xchg
push
stos
subb
call
dec
pop
jge
sub
cmp
pop
cwtl
cmc
ror
into
out
jp
and
cmpsb
cmp
imul
sub
mov
jecxz
pop
adc
adc
push
xor
adc
notb
movsl
cltd
push
lcall
xor
mov
xchg
jmp
imul
ror
dec
insb
out
sbb
xor
dec
or
cmp
cmp
xor
lods
cmc
pop
sub
xchg
xor
std
imul
push
mov
mov
jecxz
jl
xlat
pop
es
jmp
decb
mov
pop
ds
negb
out
pop
xchg
or
push
test
arpl
call
inc
mov
and
xchg
xor
dec
fcoml
out
fdivs
nop
addl
repnz
sbb
inc
inc
mov
leave
push
stos
popa
pushf
mov
arpl
mov
sub
or
es
jae
scas
daa
pop
push
adc
pushf
lahf
ss
xchg
xlat
mov
fs
mov
adcl
movsb
mov
in
inc
out
jl
add
cwtl
rsqrtps
push
scas
ja,pt
push
popf
insb
xchg
inc
xor
out
sbb
pusha
xor
notb
stos
push
mov
inc
mov
out
stc
outsl
jmp
push
popa
pop
popf
mov
adc
mov
or
aam
mov
push
jecxz
outsl
rcr
repz
loop
scas
inc
pop
aad
and
xchg
cmp
mov
mov
mov
xchg
or
push
loop
sub
ret
outsb
frstor
mov
jle
ret
addr16
and
jo
jecxz
xchg
fidivs
into
push
cmc
roll
cmp
push
ljmp
loope
cmp
push
ss
int
mov
fidivs
lods
sbb
cmp
sub
fbld
xchg
inc
pop
repz
andl
fisttpl
jns
insb
push
jmp
call
cmp
notb
mov
xor
push
mov
loope
scas
sub
and
iret
sbb
mov
and
lea
arpl
cmp
daa
cmpsb
xor
mov
cld
cmpsb
dec
ret
adc
sbb
push
dec
sub
xor
movsb
fstps
in
in
mov
fucomip
jg
insl
sub
out
cmp
lock
jecxz
pop
bound
xchg
int3
jb
div
add
push
lahf
jnp
ret
roll
shrl
push
aam
gs
xorb
cmp
pop
pop
jnp
mov
loopne
popf
jl
data16
mov
add
xor
push
mov
pmuludq
jp
adc
ja
and
cs
shll
push
pop
add
arpl
test
mov
push
pop
xorb
jge
dec
mov
mov
push
rolb
cwtl
in
loope
lret
dec
push
fisubl
xchg
xor
xchg
push
mov
popf
enter
mov
roll
dec
push
sti
cmp
xchg
aad
ds
fstpl
xor
movsl
cmp
xchg
fcmove
or
sub
mov
test
mov
stos
aaa
dec
movsl
loop
jo
add
lea
cli
stos
ja
jb
cmp
test
jmp
stos
idivl
in
gs
xchg
fldl
mov
mov
xchg
and
mov
mov
jne
inc
dec
outsb
or
das
les
arpl
jecxz
and
ds
addw
mov
jp
push
cld
test
inc
adc
jae
push
adc
mov
cltd
push
mov
add
mov
mov
ret
xchg
stos
cmp
xor
jge
pop
es
mov
leave
dec
shufps
dec
js
aam
scas
push
pop
pop
sbb
push
sti
xor
cltd
add
movsb
push
sti
jae
mov
inc
add
xor
out
push
mulb
sahf
es
gs
adc
mov
mov
rcrb
sub
dec
xchg
jmp
sub
mov
push
jb
insl
fs
lods
outsl
out
fmull
pusha
test
or
pop
mov
push
stos
je
div
test
int
js
outsb
push
jecxz
imul
adc
sti
addr16
xchg
or
outsl
icebp
add
or
out
js
xchg
mov
shlb
pop
push
pop
cld
add
rorb
mov
repz
mov
sti
ljmp
ss
sbb
imul
cmpsl
xor
enter
cmp
push
pop
loopne
inc
divl
fcoml
and
xchg
lret
ficompl
mov
ljmp
repz
mov
xor
cmp
mov
push
cwtl
push
adc
js
cmp
outsb
call
push
jo
add
add
shll
jmp
adc
jbe
lock
mov
mov
jbe
cmpsl
test
xor
adc
loopne
mov
out
cli
pusha
xor
aas
push
or
ds
inc
mov
jno
push
mov
push
jo
mov
test
sub
and
shlb
or
jmp
jle
and
mov
pop
loope
enter
sub
nop
sbb
leave
sbb
ret
jmp
cmp
pushf
sbb
std
pop
faddp
mov
or
jns
sub
pop
mov
fnstenv
cmp
mov
scas
dec
mov
jb
cwtl
fists
cli
int3
mov
repz
out
lods
xlat
cmpb
or
xchg
xchg
dec
sbb
xor
or
pop
push
outsb
pop
sti
in
jecxz
adc
aam
test
jge
mov
jmp
ds
add
neg
lock
insb
aam
xchg
iret
dec
push
jnp
jns
push
icebp
in
addb
ds
fs
cli
add
jne
push
ror
pop
push
cld
ss
lea
adc
addb
sub
cmp
mov
cmp
xor
outsb
adc
cmp
pop
ljmp
pop
imull
or
leave
cs
int3
out
pop
in
in
jmp
cmc
clc
test
sar
nop
xchg
fbld
test
pop
in
stos
cmp
cmp
mov
sahf
dec
in
aam
loope
stc
mov
mov
or
cli
or
shrl
xchg
fldenv
cltd
dec
popf
mov
sbb
sub
jne
mov
mov
pop
sti
inc
jmp
js
stc
adc
stos
lahf
dec
out
sti
fsubrl
inc
add
jno
cmp
sub
leave
mov
test
sar
cli
in
adc
stos
aad
cmp
xchg
cmp
loopne
inc
ror
xorl
test
aam
out
push
ret
loop
in
je
jmp
jle
cld
out
out
adc
xlat
mov
and
gs
pop
pop
pop
jno
insb
out
jne
pop
aam
shrb
pop
jb
sahf
in
dec
mov
les
pop
sbb
dec
les
add
push
xor
jg
jae
mov
adc
inc
xor
push
in
push
movsl
sti
pop
xchg
xchg
xchg
rcl
push
xlat
jp
dec
mov
loope
push
dec
sbbb
xchg
push
push
aam
fidivl
or
dec
jb
or
pop
aas
test
add
pop
out
xor
push
push
bound
sbb
jl
cmp
test
mov
mov
mov
data16
imul
dec
pop
jp
add
mov
sub
sbb
mov
mov
jo
inc
shll
cld
stos
cmpsb
mov
adc
cltd
pop
pop
adc
lahf
and
pop
out
dec
pop
cwtl
inc
in
gs
add
push
dec
jnp
jbe
xchg
mov
inc
mov
jp
scas
andl
mov
cltd
out
cwtl
aas
xchg
lods
jnp
lods
popf
jne
pusha
or
add
shll
or
and
adc
movsl
cmp
inc
loope
push
xor
in
pop
stos
push
pop
jo
and
xor
xchg
shll
call
aaa
xchg
jno
movsl
nop
shll
mov
xchg
and
fcomi
and
mov
dec
cmp
mov
mov
rolb
clc
xor
fldt
aad
and
dec
lods
jo
push
pop
rorl
inc
cmp
data16
adc
push
xor
mov
loop
add
inc
xchg
lds
test
dec
push
ret
push
cmovns
lods
jne
outsl
inc
in
push
dec
add
inc
in
jns
test
nop
mov
test
sub
pop
add
mov
fdiv
fisttpll
dec
cmp
push
mov
lods
std
or
jae,pn
bound
bound
loopne
adc
lods
ret
testl
out
outsl
das
out
and
xchg
inc
negl
add
mov
cmp
dec
fdivr
mov
push
test
sub
and
mov
sbb
or
clc
push
cmp
orl
add
lcall
loopne
adc
xor
dec
insl
xchg
pop
scas
imul
adc
int3
movsl
add
lret
mov
lret
cmp
lret
bnd
pop
pop
sub
loop
pop
add
cmovnp
mov
and
mov
push
pop
mov
jo
xorb
dec
mov
or
addb
mov
arpl
cmpb
loop
pusha
push
enter
lock
sahf
xor
cmp
pop
push
jne
scas
push
enter
bound
mov
lcall
sahf
in
mov
das
xchg
jbe
mov
lret
hlt
mov
fwait
test
mov
pop
jg
in
cmp
jle
mov
cmc
mov
add
xlat
pushf
shll
pop
idivl
pop
dec
adc
lea
aas
or
sub
data16
push
lea
push
in
jge
adc
in
inc
dec
ret
sbb
inc
outsb
lret
fsts
and
dec
jge
call
xor
out
scas
and
enter
fisttps
into
inc
negl
mov
cmp
clc
imul
cmc
inc
pop
mov
rcr
lods
mov
cltd
sbb
mov
mov
mov
jp
mov
enter
fs
cmpsl
out
inc
mov
push
inc
ficomps
stos
push
cmp
mov
sub
ret
sub
pusha
dec
pop
pop
and
dec
enter
cmc
xchg
movsb
xor
dec
mov
gs
in
jl
sub
sbb
sub
cwtl
clc
enter
adc
xor
push
sub
jmp
mov
add
and
sbb
ds
cmp
lea
aaa
popa
cmp
jbe
add
pop
add
and
fidivrl
pop
xor
xchg
jp
iret
push
stc
or
outsl
adc
mov
pop
pop
bound
scas
addb
repnz
mov
mov
push
out
clc
into
cmp
and
push
xchg
cmp
cmpsb
repnz
in
cmp
jle
imul
es
mov
test
xor
sbb
enter
inc
or
mov
mov
mov
notl
mov
jp
or
out
ret
test
clc
cli
int3
insb
mov
cmp
push
jmp
xchg
pop
pop
jbe
aad
cmp
inc
imul
std
repnz
rclb
scas
inc
pop
cli
mov
xchg
addr16
xchg
sbb
cmp
jg
xchg
cmpsb
xor
iret
inc
adc
into
push
mov
jno
xchg
sub
pop
js
mov
pusha
ljmp
dec
iret
cmp
cmp
das
cmp
aam
roll
adc
xor
lods
cmp
xorl
jo
test
aam
mul
sbb
shl
cmpb
ss
sbb
repz
lds
cmpsb
lea
mov
mov
inc
out
push
lock
add
int
cltd
stc
mov
sbb
call
mov
cmpsl
xchg
and
jmp
adc
pop
test
inc
stc
push
outsl
dec
inc
lea
sub
pop
roll
dec
into
jb
mov
xchg
push
lea
xlat
popa
jg
stc
or
aad
or
lods
jno
stos
out
iret
cmp
out
inc
pusha
jnp
add
test
popa
int3
push
repz
and
cmp
les
in
cmp
sarl
nop
adc
mov
vpmuludq
fcoms
cmp
outsl
lret
mov
out
mov
push
pop
into
sub
stc
xor
leave
fstps
adc
movsb
mov
fwait
sub
push
out
sub
mov
sub
inc
out
repz
fildll
out
test
ss
adc
xchg
xchg
sbb
cli
mov
and
xor
jmp
jo
push
dec
loopne
xchg
fldcw
fldcw
scas
ret
insb
xor
loope
push
mov
xlat
or
popa
clc
jl
in
cld
sub
jecxz
jnp
jo
add
addr16
ds
fnstenv
adc
sbb
xor
fsubrp
xor
or
scas
xor
cmp
ds
imul
cltd
cmpsl
iret
pop
dec
imul
aad
mov
cmc
call
adc
jp
and
add
pushf
dec
dec
dec
nop
orb
xchg
inc
stos
fisubrs
xchg
jp
insl
inc
dec
pop
xor
rcll
push
dec
mov
mov
stc
mov
pop
ret
mov
subb
les
mov
paddb
dec
mull
mov
and
sub
mov
push
sub
mov
adc
ret
aad
cmp
or
cmc
mov
mov
or
inc
adc
and
add
ja
test
repnz
dec
and
xlat
and
sub
jg
idiv
cltd
jl
clc
call
push
jae
pop
arpl
arpl
mov
sbb
cltd
mov
push
frstor
andl
push
std
nop
xor
or
out
fnstcw
ja
xchg
sti
add
xchg
fmuls
jbe
or
repz
inc
mov
pop
jmp
dec
jge
dec
mov
rcrl
add
dec
mov
enter
aad
inc
std
test
mov
mov
into
push
cmpsl
add
sub
cltd
dec
data16
ljmp
dec
push
fcompl
sub
adc
cmp
push
addr16
jp
fmul
int3
minps
sbb
inc
mov
std
push
mov
xchg
jae
mov
fnstenv
mov
sbb
mov
xor
into
ss
lock
pusha
dec
notb
cmpsb
mov
mov
xor
cmp
pop
int3
aad
repnz
test
gs
jmp
xchg
adc
cwtl
add
arpl
pop
or
dec
inc
dec
ret
push
cmp
push
sbb
or
in
jl
pushf
mov
jno
pushf
push
sti
fabs
pop
aam
xchg
cmp
xchg
fwait
mov
test
mov
ret
out
add
inc
pop
insl
mov
popa
pop
mov
cmp
pop
sbb
icebp
push
cmp
sbb
pusha
and
jg
xchg
push
scas
mov
dec
sbb
aam
inc
cmp
in
push
push
sub
mov
jne
cmp
push
iret
cmp
push
std
movsl
jb
mov
add
enter
cmpsb
mov
dec
dec
pop
int3
icebp
outsl
xor
jo
cmc
dec
je
mov
sahf
adc
xor
push
mov
jmp
cmp
jmp
data16
ljmp
hlt
push
bnd
dec
cmp
aad
std
cltd
jns
ss
sub
andl
test
dec
inc
pop
sbb
lods
popf
dec
mov
mov
arpl
push
xchg
and
test
xchg
add
fimull
inc
clc
adc
jl
fwait
jns
bound
enter
mov
sub
cwtl
mov
dec
mov
mov
inc
mov
inc
inc
pop
and
adc
orl
lahf
xchg
jno
cmp
jb
aas
mov
inc
cmp
xchg
or
out
dec
cmpsl
fiadds
mov
sub
xor
dec
dec
pop
adc
sbb
bound
in
or
inc
loopne
jmp
out
pop
inc
int3
cld
pop
iret
mov
cmp
stos
mov
mov
inc
cld
mov
jle
inc
test
mov
cmp
inc
add
inc
rorl
push
dec
movsb
push
dec
sbb
mov
mov
aam
outsb
xchg
lret
inc
cmp
push
jl
xchg
scas
fistpll
mov
jecxz
push
mov
mov
loopne
movsl
test
mov
addl
dec
jnp
sub
in
sub
arpl
cwtl
out
inc
push
pushf
lcall
xor
pop
and
mov
cmp
in
dec
das
xor
fwait
push
fistpl
ret
insb
mov
pushf
pop
mov
sti
inc
jo
mov
cmpsb
or
pop
rcll
divb
add
push
add
sub
stc
es
leave
or
mov
adc
es
adc
add
push
sub
jp,pt
gs
rorl
mov
cs
sbb
hlt
jo
jle
arpl
sub
dec
into
cltd
push
sub
std
ss
xchg
add
adc
mov
xchg
mov
xorl
xor
ret
popl
loopne
cltd
lea
jo
gs
xor
xor
xchg
in
sbb
inc
daa
in
cmp
cmp
pushl
push
sbb
jg
inc
jo
repnz
shl
js
dec
stos
es
mov
test
popf
fisubrs
push
cmp
call
cltd
or
cmc
popa
sbb
lock
mov
cmpsl
mov
adcl
out
mov
lahf
insb
imul
and
sub
add
mov
lds
jge
aam
jge
push
lahf
push
aas
push
pop
cmp
gs
xchg
and
pop
pop
sbb
cwtl
pop
inc
aas
xchg
dec
pop
jnp
insb
js
pop
mov
cmpb
lds
xor
add
lret
xor
or
loope
mov
cmc
inc
push
add
mov
sbb
and
mov
push
stos
and
pop
imul
pop
daa
sarl
pop
xchg
cmp
clc
dec
aam
in
stos
cmp
cmp
and
cmpsb
outsb
sub
in
iret
jns
inc
test
icebp
inc
cs
test
xchg
scas
js
ja
inc
repz
adcb
lret
call
mov
aam
mov
movsl
pop
icebp
xor
or
aaa
pop
pop
push
pop
cld
fisubs
ror
inc
bound
lds
test
daa
leave
fnstcw
jge
mov
inc
xorb
dec
test
adc
bound
or
mov
inc
cmp
cmp
mov
loope
ret
jmp
js
push
out
mov
sbbl
cmp
dec
out
xchg
mov
push
dec
sbb
addr16
test
lahf
pop
mov
xor
lret
inc
push
xchg
xor
cmpsb
mov
aam
test
das
mov
push
lret
roll
pushf
dec
xor
ljmp
adc
pushf
adc
xor
std
pop
mov
jno
movntq
lods
xchg
jb
push
dec
ret
xlat
sub
xchg
lods
mov
gs
je
and
or
scas
fldt
leave
jno
xor
sbb
nop
imul
inc
xchg
xor
stc
xchg
ljmp
cltd
outsl
insb
sahf
mov
fs
sbb
movsl
xor
or
in
pop
ret
sahf
and
and
stos
push
inc
shll
dec
in
add
adc
fmuls
sub
sbb
add
test
xlat
outsl
push
ficompl
cwtl
push
inc
icebp
mov
ret
or
cmpsb
outsb
push
gs
push
xchg
adc
mov
sbb
xchg
add
push
and
bound
xchg
popa
dec
push
mov
mov
or
inc
aad
mov
pop
cs
mov
fsubp
mov
fcoms
fistps
mov
das
xchg
fadds
inc
fwait
sti
jmp
fmuls
or
push
sub
dec
lret
sbb
sub
enter
xor
loope
scas
lock
std
or
js
adc
in
xchg
fs
outsl
pop
ud2
fldenv
into
test
popa
out
decb
xor
std
out
or
inc
sarb
or
push
jns
sarl
frstor
mov
xlat
pusha
rclb
stc
add
out
jmp
fwait
jns
inc
notl
xchg
cmp
mov
add
andb
cld
dec
jecxz
and
movsb
cwtl
inc
sub
pop
jbe
call
adcl
fsubrp
int3
arpl
das
mov
sbb
xor
adc
pusha
fimuls
test
pop
psadbw
cld
mov
pop
fsubs
leave
push
and
lods
mov
and
mull
dec
xchg
std
pop
xorb
add
addr16
push
xchg
fwait
xor
dec
and
adc
xor
jg
pop
cmpsb
stos
jge
mov
int
inc
jle
mov
call
inc
jo
or
cwtl
mov
dec
push
adc
rcrl
inc
outsl
lret
pop
out
orb
int
mov
push
jne
pop
push
or
imul
xor
and
inc
imul
sbb
cmp
enter
mov
les
fisubrl
cmp
jb
fwait
pop
push
das
iret
ret
xor
and
sub
jne
inc
mov
movsb
sub
out
lret
out
test
inc
testl
push
pop
adc
push
jns
std
aad
push
mov
push
mov
les
mov
stc
cmp
dec
or
push
cmp
jnp
loop
popf
xor
mov
pop
fisttps
loope
fs
mov
and
jae
add
mov
sbb
mov
gs
adc
lret
stos
out
out
inc
add
in
std
stc
xchg
mov
cli
cmp
movsb
mov
xor
shrb
popa
push
xchg
daa
mov
jg
and
lods
inc
icebp
in
xchg
push
repnz
mov
es
in
sub
mov
xor
xchg
rol
cli
test
push
jge
and
adcl
jno
dec
pop
shrd
ss
mov
dec
or
cmp
pop
fimuls
xchg
dec
pop
adc
das
xchg
out
ret
and
mov
lahf
xor
cld
loopne
filds
mov
fiadds
ss
negb
add
outsl
call
je
out
out
lds
and
jb
in
inc
fs
xlat
jae
adc
out
push
fsubrl
clc
mov
addb
lock
clc
pop
mov
mov
xchg
pop
pop
jmp
daa
xlat
push
jmp
sahf
sub
and
xchg
fmul
and
dec
rcll
cmc
mov
adc
pop
sbb
mov
and
mov
jge
jae
dec
addr16
inc
mov
shrd
xor
lock
test
cmp
stos
push
loopne
mov
cmp
mov
loop
mov
or
sbb
adc
outsl
push
push
adc
jne
xor
scas
xor
insb
push
xchg
shll
push
jp
push
outsl
rclb
dec
or
or
mov
xor
jmp
movsl
fscale
pushf
test
jb
insb
mov
mov
sar
cmp
scas
push
cmc
pop
xor
test
cld
mov
and
fwait
sbb
mov
insb
jb
sub
mov
not
or
mov
cmp
add
mov
jg
outsl
mov
add
or
out
das
pop
xchg
mov
sub
fisubs
sbb
cmp
push
cmpsl
xor
imul
pusha
add
adc
js
enter
xchg
add
hlt
sbb
or
cltd
mov
push
add
mov
xchg
sub
imul
pop
jns
les
pusha
add
inc
lcall
jl
mov
lds
add
aaa
shrl
outsl
lret
mov
filds
xor
cli
pop
xlat
xor
jecxz
jmp
call
xor
sbb
push
mov
dec
popl
mov
repz
hlt
sub
fisubl
mov
mov
js
aas
add
sub
repnz
test
pushf
jo
jp
jnp
lret
test
push
pop
or
jnp
sbb
mov
jnp
and
xor
lret
enter
jecxz
ja
inc
xor
mov
pop
mov
ljmp
xchg
sbb
push
cmpsb
dec
jmp
sbb
loope
jmp
and
and
fnstcw
subl
xorb
std
jmp
jle
add
sub
mov
mov
cmp
or
pop
mov
lcall
sti
dec
lahf
addr16
arpl
inc
fldt
je
jbe
fdiv
sub
hlt
xor
dec
stos
test
pop
fcoms
dec
test
xchg
sub
xlat
jmp
and
into
clc
adc
ss
push
aas
dec
cmp
popl
outsb
iret
nop
adc
addl
icebp
scas
mov
aad
sub
push
loope
outsb
fmuls
aaa
or
ds
add
ret
enter
adc
mov
imul
add
pop
das
adc
imul
lock
cmp
push
and
test
dec
fs
iret
jle,pn
cmp
loopne
mov
fcoml
xchg
push
cli
xor
aad
mov
push
rorl
mov
dec
addl
adc
lcall
mov
mov
add
cmp
xchg
push
popf
cmp
js
roll
test
ss
adc
sub
pop
mov
arpl
rcrl
pop
shrb
pop
out
cmpsl
xor
push
jne
cmovne
bound
dec
fimull
xchg
cmp
dec
pop
daa
in
pop
and
adc
or
push
aad
mov
mov
lcall
push
movsb
push
adc
sub
mov
jne
add
mov
pop
data16
fstps
inc
push
sbb
mov
lock
sahf
push
sarb
lods
aad
mov
xchg
and
mov
mov
fidivs
stos
adc
cmp
test
add
mov
mov
fdivr
aam
aad
sbb
leave
scas
push
add
cmp
int3
and
movl
mov
lcall
cmc
notb
fisttpll
xchg
sbb
subb
dec
pop
and
out
in
push
dec
jo
stc
pushf
ja
daa
icebp
loope
inc
jl
adc
cli
and
nop
aad
call
imul
sarl
xchg
mov
pusha
pusha
mov
dec
mov
pop
and
les
adc
or
add
xchg
pop
jg
mov
and
ljmp
rcrl
mov
pop
xchg
out
dec
push
cltd
dec
mov
mov
sub
stc
fsubrs
add
or
mov
int3
mov
stos
es
int
xchg
jmp
std
push
out
push
loope
and
test
adc
pushf
pop
out
pop
scas
scas
lea
pusha
sti
adc
mov
cmp
xchg
jmp
mov
jp
adc
loop
sbb
xchg
sub
mov
lea
cmp
sub
call
xor
mov
loop
jl
call
jl
pop
pop
xchg
or
mov
mov
out
cmpsb
loope
jno
mov
mov
pop
ljmp
sbb
inc
mov
lea
lcall
inc
insb
push
iret
adcb
inc
or
xor
xor
lret
orl
insl
gs
jns
mov
push
mov
cmp
dec
std
jmp
in
div
out
mov
lock
push
aaa
out
out
subl
xchg
sbb
sub
imul
stos
out
js
lret
js
ret
pop
or
and
xchg
mov
sub
ss
subl
push
push
subb
sub
icebp
sarl
pop
pop
mov
inc
roll
data16
mov
add
mov
daa
repnz
xchg
arpl
subl
pop
in
xor
or
cmp
aaa
test
mov
pop
fstps
cs
sub
lea
sbb
loope
mov
pop
push
nop
xor
push
in
ror
mov
fnstcw
pop
js
push
fs
xrelease
xchg
pop
push
xchg
xor
jle
push
mov
in
mov
adc
cmp
iret
or
bound
xor
negl
lcall
scas
dec
aad
push
push
mov
xor
es
adc
push
in
and
cmpsb
in
add
gs
pop
pop
inc
sub
fdiv
jmp
mov
clc
jbe
in
or
fldenv
popf
pop
loop
adc
push
adc
shlb
mov
call
inc
rcll
add
inc
xlat
loope
xor
out
jo
sahf
ds
cwtl
xchg
mov
xchg
inc
scas
jle
inc
mov
mov
add
xchg
inc
dec
add
iret
loop
es
movsl
xor
fucom
sbb
sub
in
jb
adc
mov
dec
mov
in
icebp
gs
xor
adc
jp
std
stc
xor
pop
gs
test
xchg
mov
out
fdivs
dec
mov
call
pop
dec
pop
insl
adc
inc
inc
sysenter
mov
and
mov
sbb
mov
insl
call
push
loopne
xor
pop
push
cmpsb
jl
inc
dec
xchg
jo
dec
out
xlat
inc
mov
pop
jbe
pop
sbb
inc
std
jge
jl
cmp
pop
sub
xor
sub
xor
jno
lret
or
xor
dec
sti
mov
push
jg
enter
add
cli
ret
lcall
xor
push
lods
jge
sbb
mov
lcall
lahf
xchg
in
mov
icebp
mov
icebp
ret
xchg
adc
aaa
adc
sub
fsubrl
outsl
jmp
cmp
std
mov
mov
test
es
push
or
sbb
in
pop
fdivrl
add
sar
mov
mov
sub
lret
lcall
or
mov
mov
jno
mov
insb
xchg
mov
stc
and
out
aam
ret
mov
pushf
jno
and
imul
jno
mov
cmp
sbb
push
add
es
push
push
in
jne
jg
je
scas
fmul
mov
ret
sbb
push
cmp
stos
xor
push
call
sbb
addr16
mov
popf
mov
sbb
je
mov
mov
xchg
mov
fsubs
aas
push
cmp
push
call
ret
xchg
jbe
and
stc
imul
stc
outsl
loope
mov
mov
dec
lock
push
mov
and
decl
shlb
addr16
sub
fidivs
and
sub
pop
jo
dec
jae
jbe
jb
fdivl
mov
shrl
xchg
adc
mov
sub
lds
popl
mov
xlat
sahf
rcr
pop
mov
scas
pop
push
push
in
loop
xor
add
and
sbb
xor
mov
fistpl
leave
mov
pop
andl
aam
push
stc
add
repnz
mov
int
ss
mov
push
mov
pop
cmp
int3
ss
lret
xlat
dec
outsb
push
push
push
fadds
leave
lock
sbb
mov
dec
gs
scas
andb
push
std
jecxz
lcall
aaa
inc
pop
jb
inc
jl
cmovnp
repnz
add
cmp
adc
pushaw
xor
jno
cmpsl
jae
adc
fstp
push
imul
pop
adc
inc
lds
sub
push
negl
orb
addr16
add
into
jge
cmp
rcll
fxam
ret
adcb
xchg
stc
pushf
call
jecxz
fwait
jmp
arpl
jp
or
push
leave
hlt
dec
dec
data16
pop
jl
jmp
dec
mov
add
jp
xor
sub
in
sbbb
xor
mov
push
push
je
jl
popl
xchg
jno
lret
pushf
cmp
loopne
iret
dec
push
es
pop
cmc
pop
sbb
repz
mov
mov
out
mov
test
mov
and
mov
popa
je
sbb
or
out
xor
adc
mov
out
adcl
imul
shlb
mov
push
dec
pop
movd
mov
lea
sahf
inc
push
fwait
stos
divb
shll
fmul
shrl
vandps
xor
sbb
inc
bound
out
pop
push
sbb
cmp
enter
out
mov
movsl
ficoms
fcoml
add
rol
pop
fs
mov
xchg
push
xchg
push
pop
xchg
out
repnz
and
inc
adc
in
inc
in
imul
sbb
lret
push
repz
fstpt
ds
hlt
sti
mov
or
out
and
inc
mov
popf
and
sub
dec
cmp
and
pop
push
push
jne
ja
hlt
sub
push
jp
jecxz
cmp
push
mov
stc
clc
in
jp
mov
mov
sub
mov
test
jl
mov
out
cmp
push
cmp
jge
and
jg
add
mov
cli
hlt
int3
lock
je
mov
pop
mov
shrl
loope
adcb
inc
arpl
call
enter
scas
xlat
popa
xchg
xchg
fsts
push
and
xchg
dec
and
ret
repz
xchg
xchg
pop
pop
and
xchg
lds
ud1
xor
adc
mov
dec
mov
push
mov
sbb
cmp
sti
and
popf
and
in
xlat
xlat
dec
outsl
jmp
mov
dec
or
sbb
ds
jbe
mov
push
pushf
dec
or
cltd
or
es
bound
cld
imul
adc
sbb
es
clts
cmc
lret
push
in
bound
pop
jbe
jns
add
mov
xor
xor
test
lds
insl
and
pushf
add
mov
mov
mov
dec
or
cmpsl
xchg
ret
out
push
out
loopne
sub
jnp
loop
sub
dec
mov
cmp
pop
sbb
jbe
push
in
shlb
mov
scas
push
jmp
push
xchg
pop
loope
sbb
push
push
adc
and
lcall
pushf
sbb
ja
test
insb
jne
inc
lods
pop
push
dec
and
mov
leave
sbb
aad
stc
push
push
mov
push
test
jbe
jne
fucomp
insl
push
xchg
mov
rolb
lods
scas
out
mov
lods
repz
cmpb
sbb
fmulp
ja
test
cmpsl
mov
in
aad
out
mov
ja
pop
mov
rol
cmp
push
les
loopne
jo
and
add
push
push
pop
jno
aad
ss
inc
xor
cmp
xor
fidivrs
jno
and
in
sub
in
loope
pop
int3
sarl
lds
scas
add
sub
outsb
insb
add
xchg
mov
inc
les
popf
je
loopne
xor
testl
mov
ds
mov
lret
ret
pop
mov
loop
stc
rep
aad
pop
push
popf
inc
push
jg
mov
insl
fcmovnu
leave
push
pop
dec
push
cmp
cmp
fdivrp
pop
dec
push
test
fidivs
aas
jl
mov
dec
push
scas
inc
addr16
push
stos
mov
xor
pop
cld
shrl
cmpb
cmp
xor
ljmp
mov
subl
dec
cmpsl
and
sbb
adcb
mov
das
cmp
push
lret
pop
test
jl
xchg
rcrb
ss
sbb
jne
cs
cmp
int3
sbb
pusha
aas
mov
cmc
or
xchg
rorl
jbe
iret
lods
jecxz
movsb
inc
bound
in
dec
and
popa
aad
outsb
sub
push
loopne
icebp
sub
nop
popa
jns
js
push
xchg
fsubrs
dec
arpl
xor
out
mov
into
loopne
stos
jecxz
jbe
jp
xorb
clts
in
stos
lea
dec
mov
mul
mov
pop
fcomps
adcb
lea
loope
inc
lods
stc
xchg
inc
cwtl
movsb
out
daa
imul
pop
cmp
mov
xchg
daa
xchg
mov
mov
andl
mov
cmp
xor
sahf
pop
jmp
mov
mov
jmp
xor
daa
sahf
push
data16
sbb
ja
xchg
lds
cmp
pop
ljmp
aad
adc
ljmp
xchg
dec
mov
mov
jmp
ficomps
jmp
lret
std
loopne
mov
adc
lret
jo
pop
sub
xchg
lahf
aas
arpl
ds
fwait
push
push
pop
js
into
cmp
mov
out
mov
jg
xor
jle
mov
cmp
cmp
daa
popa
push
pop
and
pop
rcrb
shrb
je
adc
call
cmpsl
in
cld
mov
xchg
sahf
jbe
add
dec
fdiv
sub
inc
add
nop
jmp
loope
jecxz
jae
std
stos
push
fisttpll
mov
sar
cltd
aad
cmp
jmp
int3
jbe
xchg
cld
xor
lods
jo
stos
int
mov
outsl
or
outsl
test
inc
jns
insb
add
mov
or
push
movsl
ror
mov
cmc
js
movsb
es
fwait
js
lea
daa
jo
inc
xor
nop
mov
pop
aas
insb
subl
cmp
mov
pop
fmul
outsl
fwait
dec
out
and
ds
mov
xor
fstp
testb
xchg
and
lods
inc
pop
jl
dec
mov
pop
xlat
sub
cmpsb
jne
es
cmpsl
lret
out
out
xchg
fidivrl
dec
loopne
in
jnp
push
daa
loope
or
fistpll
out
sub
xor
shr
or
data16
mov
pusha
pop
stos
mov
cmp
loope
test
pop
sbb
jb
mov
xchg
ja
in
mov
pop
jbe
imul
movsl
ror
fmulp
push
fs
dec
mov
fbstp
inc
xor
std
popf
fisttpl
dec
sahf
mov
mov
icebp
adc
sub
cld
push
cli
test
dec
jnp
push
test
orl
add
or
xor
in
test
push
std
lods
mov
sub
add
loop
sbb
test
mov
mov
outsb
jecxz
stc
xor
cli
push
scas
dec
rcrb
lds
push
xchg
aas
mov
jae
scas
or
addr16
or
negb
ret
or
cmp
and
inc
div
cmpsl
mov
and
daa
lock
xchg
call
fimuls
push
sub
push
addb
movsl
xchg
sbb
xchg
adc
mov
insb
jb
insl
pop
sub
xchg
xor
adc
aaa
arpl
mov
jecxz
shlb
lret
adc
cmp
imul
test
pop
int3
das
xchg
mov
xor
enter
pop
sub
sbb
fildll
jg
and
jmp
aaa
mov
mov
aas
push
dec
clc
mov
sbb
inc
add
jne
cmp
jne
xor
test
xchg
scas
test
cmp
dec
xchg
ljmp
xchg
loope
clc
sub
shlb
sbbb
lods
jbe
mov
xlat
xor
or
stos
scas
cmc
adc
dec
and
xchg
xchg
cmp
pushf
rcr
movsl
sub
cs
xchg
xchg
test
sbb
movb
dec
mov
loop
push
and
or
push
stos
push
mov
or
test
jge
out
jo
ret
hlt
mov
sti
iret
notb
mov
add
xchg
adc
repnz
ds
xor
callw
cmp
xor
push
mov
xor
dec
xchg
jne
shrl
xorb
xchg
xor
push
je
rcr
mov
ucomiss
pop
pop
das
push
cmpsl
adc
xchg
enter
xchg
mov
sbb
mov
inc
cmpsl
sbbl
jl
cld
popf
push
fs
sahf
rolb
ss
mov
leave
pop
iret
mov
mov
dec
dec
les
lds
aas
sbb
mov
cmp
add
mov
sub
mov
push
ret
jg
into
shl
ss
push
inc
jmp
xchg
in
out
mov
push
into
shll
and
cli
inc
das
mov
aad
ljmp
test
cmp
mov
jo
outsb
addb
xchg
push
icebp
cmp
and
rcl
sbb
and
fists
cmc
adc
sar
xchg
mov
rcl
adc
push
and
call
fwait
xchg
loop
mov
out
or
rcl
loop
inc
scas
add
mov
pop
fistps
push
leave
shlb
in
fstpt
pop
add
ljmp
pop
ficoms
mov
sbb
mov
cs
cwtl
and
push
and
add
adc
mov
cmc
inc
iret
mov
bound
arpl
and
dec
mov
bound
mov
arpl
pop
popa
mov
mov
cmp
add
into
bnd
out
sub
fwait
adc
add
mov
outsb
inc
sbb
dec
daa
cmp
out
xchg
sti
jg
mov
xor
cltd
jo
sub
jg
cmpsl
cmp
jge
mov
mov
fdivrp
in
sbb
xor
ret
daa
push
push
shr
insb
mov
sub
lock
jno
outsb
jmp
push
jno
add
cmp
insb
pusha
outsb
or
xchg
and
lods
push
loop
push
xor
hlt
jecxz
jno
scas
mov
es
sahf
jle
inc
and
cmpsb
cld
call
andl
jecxz
dec
outsl
loopne
repz
xchg
push
pop
xor
adcl
push
pop
addb
ja
push
loope
movsl
adc
push
xchg
mov
inc
popf
in
pop
xor
inc
leave
inc
or
aaa
mov
and
dec
xchg
inc
mov
xor
pop
ja
xorl
and
insb
aas
and
pop
test
add
mov
hlt
out
mov
ror
mov
and
mov
mov
xchg
jns
cmp
int
insb
je
mov
cmpl
pop
pop
or
shll
rolb
dec
push
adcb
push
xchg
xchg
iret
sub
inc
cmpsb
mov
movsb
or
into
jl
fadds
cmp
pop
enter
mov
xchg
test
arpl
cmp
shrb
into
jmp
test
mov
imul
addr16
jae
or
test
mov
adc
rolb
sbb
xor
inc
push
jle
inc
daa
xchg
push
mov
cmpsb
and
sub
mov
mov
fdiv
xchg
jp
notb
dec
dec
and
pop
popl
in
rorb
pop
cmp
scas
lret
outsl
cmp
gs
repnz
and
push
nop
sbb
jns
xchg
xchg
aas
xor
fwait
mov
mov
and
sub
xchg
adc
out
cwtl
add
lods
push
nop
mov
fidivs
outsl
adc
push
mov
hlt
iret
enter
cmovl
pop
jb
out
ret
adcb
cmp
sub
es
xor
adc
jge
push
push
or
mov
icebp
jno
xchg
scas
jmp
inc
jmp
divb
and
stc
mov
cmc
clc
add
scas
mov
mov
cwtl
xorb
fbstp
fistps
lea
ret
sbb
jno
call
fimuls
push
push
call
mov
and
push
les
push
dec
mov
xor
scas
xchg
sbb
pop
shrb
push
jmp
sub
xchg
out
pop
jle
fdivrl
ds
jl
push
and
test
cli
ret
mov
sub
sbb
push
push
push
sti
test
mov
cmc
jnp
mov
mov
bound
lea
xchg
sub
or
jecxz
or
imul
fcomps
cmpsb
pop
adcb
std
jmp
fdivr
mov
sbb
je
repnz
sbb
out
fwait
sub
out
lret
jb,pt
adc
mov
ljmp
cmp
into
aad
cmpsb
sbb
push
jmp
lods
mov
fmul
out
insl
rorl
xchg
ja
xlat
in
fbld
inc
dec
and
xor
mov
mov
pop
cmp
mov
jae
lcall
sub
mov
mov
xor
jg
psrlw
sbb
xchg
mov
mov
mov
lods
push
idivl
jae,pn
sub
lds
les
lea
lods
xchg
lds
inc
or
es
cmc
or
push
fmuls
inc
cmc
jnp
lds
sbb
xor
and
testl
cs
jbe
mov
repz
sub
addr16
xlat
adc
push
sub
cmpsl
push
ss
out
add
repz
mov
fsubs
mov
std
cld
in
push
or
jge
loop
and
mov
test
pop
cmp
and
addb
mov
outsb
add
cmpb
fnstcw
pop
or
inc
js
repnz
lods
fsubrs
fisubrs
adc
inc
pop
xor
pop
pop
icebp
ret
sub
inc
dec
aad
pop
mov
add
push
pop
int
xchg
push
test
xchg
jne
data16
pop
cmp
xor
pop
cmp
sbb
dec
bound
imul
rcrl
mov
inc
or
fwait
movsl
push
mov
and
movsb
pusha
out
inc
inc
xor
je
mov
movb
stc
mov
insl
jns
imul
mov
test
sbb
mov
icebp
fmuls
jmp
jge
inc
sbb
insb
out
rcr
sub
daa
pop
push
addb
dec
fldcw
int
in
push
cmc
push
add
loope
fsubs
popf
xor
cwtl
loope
inc
xor
xchg
push
out
jb
mov
std
mov
mov
shrb
and
fisttpl
and
ss
jl
aam
mov
sbb
cmp
cmpsl
and
lock
pop
pop
fisubrl
pop
mov
xlat
add
dec
adc
jne
ficompl
mov
fstps
nop
rorl
sbb
push
cltd
aaa
dec
in
je
pop
xor
int3
mov
mov
fldt
pop
mov
mov
pop
xchg
in
or
nop
std
movsl
jmp
mov
cwtl
push
jg
ret
insb
icebp
inc
mov
scas
movsl
mov
cmp
sbb
add
lea
pop
jne
cli
sti
jno
mov
push
push
xor
sbb
dec
dec
adc
repnz
sub
loop
sbb
fs
mov
in
sub
add
fcmovne
fildll
push
adc
jo
or
lods
jbe
pop
push
int
imul
pop
test
jge
inc
divb
add
jbe
cmp
mov
cwtl
int3
sbb
jp
pop
pop
mov
jl
xlat
outsb
adc
adc
cmpsl
aad
pop
lret
incl
pop
jmp
test
out
add
lea
nop
sub
nop
pop
fisubrs
push
sub
inc
pop
outsb
movsb
je
mov
cwtl
in
pop
cld
adc
orl
mov
rcll
fucom
addb
mov
mov
imul
jp
inc
pusha
push
and
loope
popa
rcrl
jae
or
pop
inc
into
or
xchg
cmp
or
lcall
int
loop
sbb
scas
lock
push
mov
shrb
out
add
gs
push
ljmp
inc
icebp
inc
outsb
bound
fcmovb
push
xchg
addr16
push
and
rep
and
jmp
lods
int3
adc
mov
adc
popa
lahf
xchg
inc
adc
add
sbb
adc
jmp
push
into
sbb
pop
jb
push
sbb
sbb
data16
nop
mov
insl
push
jne
lods
sbb
xchg
cli
or
mov
jno
xchg
xorl
icebp
xchg
and
les
push
inc
cwtl
aam
inc
pusha
mov
not
dec
mov
or
xchg
inc
mov
subb
movsb
in
lds
decl
notb
iret
lret
jo
or
movsl
js
mov
loop
add
and
out
xchg
jnp
cmc
adcb
fcomip
fcmovne
scas
xor
movsl
ss
and
pop
imulb
pusha
xor
xchg
mov
aas
or
fcmovnb
sub
xor
sahf
adcb
add
scas
and
loope
in
pop
xor
sbb
rorb
lret
xor
fiaddl
mov
xchg
sbb
xlat
pop
push
xor
divl
shll
or
in
sahf
fisttpl
pusha
cmp
cmp
in
les
std
test
adcb
out
mov
xor
add
cwtl
jb
mov
mov
sub
enter
into
nop
and
jae
std
leave
fisttps
jns
push
test
repnz
sbb
stc
pop
lds
pop
stos
pop
jb
mov
xchg
xchg
addr16
sti
lret
sub
and
xor
or
xchg
ficoml
jmp
push
push
shrb
test
lahf
xor
or
push
xchg
loope
pop
fmull
loopne
mov
insl
ficompl
adc
push
mov
mov
and
fsubl
mov
mov
mov
fistps
dec
mov
inc
or
xor
xor
iret
cltd
fnstenv
push
push
fdivl
cmp
sub
loope
lcall
bound
inc
add
test
mov
and
lahf
cmp
push
mov
xchg
lea
scas
sbb
imul
sub
sub
xor
div
data16
bound
out
or
cmp
shll
mov
dec
pop
cmp
mov
in
fcoms
mov
mov
hlt
jp
add
imul
adc
test
xor
cmpb
in
dec
fsubs
push
outsl
aaa
push
add
push
jmp
add
dec
outsl
outsl
rorl
arpl
in
nop
jno
jmp
out
dec
push
insb
lock
pop
cmp
sbb
mov
shlb
cmp
xor
repz
push
or
ffree
shll
test
sub
sti
push
push
dec
cmp
inc
and
mov
lods
shrl
jbe
xchg
add
pusha
rolb
mov
cmp
or
pop
mov
loope
out
jae
sub
in
ret
stc
pop
cmpsl
adc
f2xm1
out
sbb
jmp
call
nop
mov
add
adc
and
adc
mov
cmp
nop
lods
lret
ljmp
sbb
mov
sbb
inc
ja
lods
dec
or
mov
and
pushf
cld
popa
xor
test
nop
xor
and
jp
stos
pop
add
lods
test
dec
push
cwtl
ljmp
lahf
fwait
les
lock
ret
ds
adc
pop
or
addl
scas
cmp
inc
jle
imul
adc
iret
inc
lret
jno
jnp
and
pop
pop
in
call
ret
dec
js
dec
loopne
rcrb
jnp
cli
ss
dec
stos
xchg
rcrl
mov
out
sub
mov
adc
pop
xchg
jecxz
insb
das
fcomi
dec
xor
outsl
and
mov
fildll
push
dec
ds
mov
nop
loope
test
jmp
aaa
lock
outsb
subl
cmp
inc
stos
push
xor
add
fwait
and
shrb
jno
fmulp
inc
xor
subl
cld
ficomps
mov
dec
dec
stos
rol
push
idivb
bnd
into
ret
xchg
shlb
stc
sti
and
rcrb
movsb
pop
cli
inc
jne
ficoms
lods
loop
and
mov
fldl
scas
mov
dec
sub
mov
adc
inc
mov
add
dec
push
adc
iret
inc
test
out
jmp
repnz
dec
and
cli
das
sub
xchg
lret
dec
jecxz
shlb
push
jge
cmp
lock
out
inc
flds
xchg
jno
iret
jne
shll
inc
negb
out
sub
sub
xlat
enter
mov
iret
mov
xchg
and
mov
cltd
xchg
inc
lea
imul
sti
xchg
xchg
sahf
or
fcmovne
push
insl
rcll
dec
cmp
out
and
lods
ja
push
faddl
add
dec
outsb
inc
push
mov
enter
enter
xchg
mov
pop
jnp
imul
cmp
shlb
adc
ja
and
iret
push
add
xor
jae
jecxz
mov
in
loop
mov
jo
rcrb
rorb
je
lret
xor
cli
or
jb
jne
push
fsub
pushf
add
sub
cmp
mov
inc
call
mov
cmp
mov
adc
mov
pusha
rorl
cmpsl
pushf
mov
je
jge
inc
jnp
inc
mov
ffreep
push
sar
stc
fldl2e
aas
jmp
shl
mov
add
test
sub
cmp
or
jne
sarl
inc
scas
xor
mov
push
dec
mov
jecxz
cmpsb
dec
lahf
out
into
cli
or
sbb
and
in
fs
mov
hlt
loopne
mov
test
test
jae
pop
pushf
mov
fnsave
inc
rclb
lods
loopne
and
xor
in
add
shrl
stos
adc
popf
or
jo
dec
in
jle
mov
nop
cmp
jno
adc
rcl
scas
xlat
inc
call
mov
jo
cs
sub
mov
pop
out
incb
addr16
sbb
repz
fisubs
pop
insb
pusha
stos
jle
or
inc
stos
lods
fstpl
ficomps
pop
rclb
jge
int
sbb
fsubrl
dec
cmp
cmp
shr
mov
and
inc
lret
mov
cmp
insb
adc
mov
adc
adc
adc
jns
xor
jne
out
aas
jns
dec
test
fs
jmp
daa
cmpsl
lea
jecxz
ss
dec
mov
mov
sbb
out
mov
pop
lea
push
inc
nop
sti
or
add
and
xchg
les
inc
fldl
hlt
inc
xor
pop
leave
or
and
mov
jg
or
in
cmp
std
add
push
push
cltd
int3
mov
or
pop
in
mov
add
cmp
xchg
mov
sub
test
xor
adc
shll
sub
jmp
add
mov
lret
push
ljmp
cld
mov
add
test
mov
push
into
xlat
pop
sahf
and
lcall
gs
add
loop
or
mov
out
sub
mov
jmp
cmpsl
pusha
jge
cmp
in
cmpsl
and
arpl
and
jmp
push
lret
ss
data16
neg
pop
es
sbb
aaa
je
leave
cli
or
add
lret
es
xor
daa
mov
mov
xchg
sbb
sub
sbb
movsl
cmpsb
movsl
test
xchg
cmpsl
hlt
push
pop
scas
xor
cmpsl
mov
aas
in
inc
dec
es
lds
je
sbb
rcll
inc
lods
dec
add
sub
aas
stos
mov
divl
adc
pop
mov
adc
insb
sub
leave
or
div
mov
hlt
or
pop
sarb
pop
sbbb
mov
pop
and
out
adc
setns
lcall
mov
aas
mov
aaa
movsl
mov
pop
in
mov
dec
out
jo
jb
in
loope
fldcw
in
test
cmpsl
negl
dec
testb
lea
mov
add
inc
sarb
sti
je
and
sbb
mov
push
xlat
cld
enter
sub
fstp
ja
inc
pop
sahf
je
jl
test
out
cwtl
adc
mov
lods
mov
out
jge
imul
sbbl
das
idivb
and
movsb
cmp
in
sbb
ds
movsl
lahf
mov
sbb
fcmovnu
xlat
stc
jle
faddl
or
and
mov
jnp
adc
imul
inc
xchg
cs
dec
in
sub
jp
pop
sub
adc
stc
dec
pop
mov
lret
leave
lods
add
es
inc
dec
rcrb
addr16
mov
mov
xchg
dec
sub
push
adc
xor
shll
int3
sub
dec
f2xm1
lea
pop
lcall
push
cmp
movsl
pop
fldt
pop
mov
cmp
xlat
loopne,pt
shll
adc
xor
and
cmpsb
in
pop
test
and
insl
jo
fisubrl
addr16
xchg
jns
adc
adc
leave
jecxz
movsb
fisubrl
adc
mov
insb
notb
push
mov
mull
adc
ss
lock
rolb
xor
mov
cmpxchg
mov
push
xchg
sbb
pop
sbb
sbb
addb
push
test
in
int
in
sub
xchg
inc
jmp
in
sbb
push
std
subb
sub
pusha
sahf
imul
loope
shlb
dec
xor
or
inc
pop
sbb
insb
dec
idivl
jno
sub
scas
mov
andb
shlb
in
push
ljmp
aaa
addb
adc
add
sbb
das
in
lods
mov
loop
sbb
aas
or
mov
dec
ja
pop
mov
sarl
cmp
mov
lock
into
mov
out
sub
sbb
xchg
aam
pusha
out
scas
mov
xchg
inc
sbb
jmp
add
jb
pop
pop
aas
inc
aaa
ljmp
andb
sbb
fmull
cmp
cmpsl
mov
jns
fdivrs
inc
sbb
xlat
imul
push
and
mov
mov
jne
inc
xchg
pusha
mov
stc
std
mov
xchg
stos
dec
push
mov
fucomp
lcall
mov
dec
inc
bound
lds
fldt
xchg
sbb
in
inc
outsl
push
roll
pop
into
cmpsb
ret
cmc
sbb
fcomps
and
sub
test
adc
add
cmc
xchg
mov
pop
cmpsl
xor
inc
cmpsb
lods
sbb
test
or
and
lcall
inc
mov
mov
stos
xchg
pop
add
xor
or
add
jg
or
jge
mov
out
pop
int3
push
push
in
test
and
out
fxch
jne
pop
icebp
jne
push
cmp
sti
cld
mov
cmp
lret
popf
clc
or
or
push
xor
hlt
adc
inc
dec
xlat
adc
lods
jmp
push
repnz
pop
aam
jb
das
stos
jno
xchg
hlt
pushl
jae
jg
push
mov
movsl
cmp
xor
decl
adc
xor
push
test
push
shlb
mov
roll
loope
adc
arpl
fsubrs
std
movsb
test
test
pop
or
or
mov
sbb
sbb
lret
push
cmpsb
lea
fucomp
jbe
jb
inc
sbb
cmpsb
push
enter
or
mov
adc
pop
pushf
mov
push
scas
cmpsl
xor
sub
lahf
in
and
mov
push
mov
dec
mov
jge
ds
sbb
sub
popa
adc
faddl
jb
and
cwtl
pop
lret
sarl
fstpl
fs
jne
mov
inc
and
jno
dec
sub
mov
inc
leave
jnp
ja
xor
push
xlat
loopne
dec
sub
cltd
add
addl
movsl
repnz
std
xor
aas
or
loope
mov
sub
push
sub
pop
mov
hlt
cmp
ret
jbe
mov
dec
aam
mov
cwtl
add
roll
ds
or
dec
inc
or
jmp
push
dec
rorl
ss
ljmp
and
push
xchg
dec
mov
imul
movsb
adc
daa
pusha
sub
movsb
and
fdivp
idivl
push
xchg
xchg
js
lds
ja
and
pop
mov
fbld
out
lret
cs
popf
sub
and
pop
ja
mov
into
popf
mov
es
test
push
lods
aas
or
inc
mov
rorb
jnp
jae
lds
je
lods
pop
push
inc
in
inc
rcrl
jnp
fs
fstl
add
jns
sarl
add
xchg
insl
in
sub
dec
pop
sub
in
gs
adc
adc
pop
out
aas
push
lret
push
ror
mov
roll
lret
and
testb
aam
out
pop
scas
and
lock
mov
ds
lods
jle
mov
push
xchg
into
test
bound
addb
mov
mov
sbb
mov
adc
test
jecxz
into
ljmp
gs
sub
push
fcompl
insb
inc
push
jnp
addb
inc
lods
ja
nop
dec
dec
add
or
jbe
fiadds
cmp
imul
inc
fcmovnbe
test
lret
fnstcw
aad
cltd
into
lock
or
f2xm1
xchg
enter
cwtl
push
cmp
sub
fildl
cwtl
fsubl
mov
sub
ljmp
sub
scas
mov
dec
sub
cmc
jno
cmc
sbb
mov
popl
and
adc
pop
pop
dec
or
fwait
xchg
adc
movsl
add
sbb
inc
lahf
or
pop
hlt
mov
add
push
jno
dec
push
fisttps
mov
mov
mov
and
or
or
add
dec
push
mov
mov
jbe
lods
jle
and
aas
clc
push
mov
jns
dec
dec
push
gs
test
push
push
sub
std
enter
gs
jne
pop
movsb
dec
push
mov
sbb
stos
popa
imul
add
jae
and
or
das
out
jl,pn
mov
nop
adc
or
loopne
add
xchg
fiaddl
push
push
test
and
xchg
jno
cmp
fs
leave
push
aad
popf
icebp
ret
push
popa
fcomip
sbb
dec
orl
repnz
jo
popa
mov
js
mov
daa
lcall
movsb
outsl
aam
push
loope
ja
adc
push
negb
mov
jae
roll
lds
dec
or
or
cli
jmp
jle
cmp
pop
popf
xchg
inc
jae
sbb
xchg
ror
xchg
jl
inc
outsl
push
or
cld
std
das
ss
pop
adcb
xchg
data16
popa
dec
adc
jge
lret
movsb
adc
adcl
mov
in
xor
mov
lret
xchg
and
sbb
lods
rcrl
das
mov
dec
dec
mov
stc
and
mov
in
xchg
mov
test
shll
sub
shlb
jmp
out
xchg
sarl
cmp
jle
ficoml
mov
xor
jne
popa
xor
adcl
mov
fcmovnu
push
shlb
xchg
pop
mov
popa
jb
xchg
or
cwtl
xchg
aas
stos
sbbb
movsb
cmp
sbb
shrb
andl
mov
leave
arpl
shll
cmp
push
std
dec
cwtl
pop
vpmulhw
mov
loop
sarl
out
clc
iret
xchg
test
cmp
jae
mov
je
fs
adc
repnz
inc
and
mov
scas
out
pop
or
lock
inc
aas
das
adc
inc
sbb
test
mov
sub
loopne
inc
lds
xchg
dec
cli
cmp
xchg
sub
push
or
jg
push
leave
add
jp
mov
cmp
lcall
pop
scas
lds
push
mov
jae
enter
hlt
inc
push
push
addr16
xor
fcoml
ret
mov
jns
jbe
inc
mov
ja
mov
add
mov
jecxz
out
or
adc
jp
inc
push
cld
clc
or
push
jns
das
sti
lds
push
and
ja
xchg
dec
ret
stos
dec
jl
jp
lahf
enter
loop
cmpsb
subl
arpl
fstps
js
xchg
in
xlat
and
cwtl
adc
bound
jge
mov
cmc
rclb
mov
je
jno
dec
add
pusha
push
cmpsl
mov
imul
les
shrb
shl
add
sbb
push
xchg
fcmovne
or
adc
repz
cmovbe
stc
pusha
fstpt
jnp
lock
push
fcomps
sarb
mov
ror
and
inc
ret
getsec
push
out
add
push
jo
sub
xor
out
imul
push
jmp
jnp
int
imul
cmc
mov
je
jno
mov
js
cld
push
dec
sub
jae
cli
jno
std
mov
je
push
loope
add
adc
inc
int
dec
out
pop
daa
pop
cmpsb
pushf
outsb
scas
pop
loop
and
mov
lret
loop
in
test
fstp
xor
sub
push
xchg
je
mov
in
fcompl
xchg
shrl
xlat
or
into
pushf
test
or
ja
sahf
imul
mov
dec
dec
pusha
movsb
mov
jmp
mov
repz
sbb
in
lahf
pop
and
das
lret
int
mov
icebp
pop
jle
mov
push
cmc
cmp
loope
clc
nop
pop
adc
add
aaa
lock
jmp
dec
sub
inc
mov
mov
push
gs
repnz
paddusb
lcall
cmp
mov
jne
mov
fcmovnu
pop
mov
adc
and
push
sti
insl
ds
cmp
push
jns
mov
cwtl
aad
add
ljmp
jl
scas
lret
rorb
xorb
push
out
xlat
mov
inc
rolb
pop
repnz
cmp
lods
cld
mov
shll
jg
mov
mov
or
lods
jl
aad
cwtl
pop
push
push
in
and
stos
call
inc
sti
add
nop
jmp
mov
pushf
ljmp
lret
ss
cmp
rorb
mov
push
mov
mov
and
jne
stc
sbb
aas
push
add
loope
jbe
jns
xchg
scas
pop
test
in
xor
xlat
sub
inc
cmp
and
daa
sub
xchg
xor
pushf
mov
andl
cwtl
cmp
inc
stos
xchg
dec
gs
fstpl
xchg
ljmp
xchg
movsl
into
daa
push
xlat
idiv
lret
ljmp
pop
je
sub
mov
mov
movhps
stc
out
lds
inc
shll
aaa
cmp
fimuls
fs
jmp
loope
fisttpl
push
dec
lea
dec
xlat
or
test
je
mov
or
cmpsb
add
scas
jl,pt
js
or
mov
cs
movsb
cmpsb
and
fadd
shrl
mov
mov
jmp
repnz
pop
mov
push
cltd
repnz
js
push
lret
incb
enter
and
mov
pop
pop
dec
ja,pn
pop
jp
jle
cwtl
mov
xor
shrb
nop
addr16
xchg
push
loopne
jg
sbb
adc
imul
iret
hlt
mov
es
sub
inc
pop
leave
cmp
sbb
mov
les
ret
adc
repnz
mov
jg
and
mov
pushf
icebp
cmp
scas
pushf
insl
cmp
out
add
dec
push
or
mov
fsubl
ja
and
fdivs
cmpsl
ret
sti
mov
pop
lahf
push
addb
push
add
mov
fwait
mov
xchg
popf
jns
inc
cmp
push
sub
mov
mov
test
lret
jp
shl
dec
es
cmp
lret
lods
int
sbb
xor
mov
test
jno,pn
mov
fnsave
mov
cmp
adc
cwtl
out
mov
mov
out
xchg
jge
lds
pop
adc
add
pop
xor
sbb
push
cmpw
sub
stos
adc
out
adc
mov
scas
push
mov
xchg
icebp
rclb
sub
repz
rcrb
pop
fmull
pop
lea
push
test
and
clc
movsb
lahf
mov
xor
adc
cli
xchg
mov
pop
xchg
xor
sbb
lcall
cld
outsb
outsl
mov
fs
mov
nop
rolb
in
sar
rcl
mov
ds
mov
es
adc
mov
out
bound
mov
fs
mov
pop
cli
dec
xchg
repnz
loop
mov
cmp
leave
mov
loop
or
mov
aam
stos
or
mov
test
lret
pop
jle
inc
cmpl
xor
inc
mov
insl
or
and
mov
mov
data16
pop
cmp
mov
mov
mov
ret
jb
mov
scas
pop
jle
cmpsl
stc
sbb
fidivs
and
dec
push
xchg
js
cwtl
dec
nop
out
lcall
push
jno
ljmp
mov
nop
sub
outsl
jno
fdivrs
and
movsb
out
xchg
push
mov
xor
pop
inc
inc
shl
mov
ds
inc
jmp
pop
inc
inc
adc
mov
add
pop
mov
hlt
push
rcl
sbb
jle
cmp
dec
rclb
sbb
jae
xor
xchg
jo
push
gs
fists
mov
cwtl
daa
push
dec
cmp
scas
push
cmpsb
adc
push
sub
out
pop
and
jg
popl
mov
xor
jb
sub
and
ret
jb
scas
xor
xorb
aaa
jae
dec
push
mov
enter
cli
std
movsb
ss
cld
push
in
mov
leave
and
ljmp
arpl
cmc
mov
sbb
pusha
jmp
sbb
je
pop
je
fcmovu
ret
mov
inc
stos
rorl
sahf
and
test
dec
mov
xor
jae
jmp
iret
cs
ret
push
in
cli
fs
popa
icebp
mov
push
fisubl
cld
test
cmp
hlt
and
aad
aaa
addr16
and
sub
inc
sbb
xor
xor
lock
pop
adc
pop
jp
test
mov
mov
lods
in
fmull
jb
jge
add
adc
lcall
popa
mov
insl
cld
stos
lods
or
push
xor
incl
in
push
fsub
lahf
lret
fs
xchg
mov
fimull
adc
loope
sub
scas
mov
arpl
mov
mov
mov
cmp
lds
mov
sub
push
pop
insl
out
dec
fs
popa
in
pop
jmp
jmp
mov
adc
xchg
or
int
hlt
pop
cmpsb
cmc
push
out
sbb
movl
call
outsb
daa
fbld
cld
adc
scas
jb
frstor
int3
lds
es
rcrb
add
aas
ss
mov
es
cmpsl
shrb
lcall
shll
push
xor
dec
aas
sub
and
aas
mov
dec
pop
popf
int
adc
inc
push
les
push
pop
and
cmpsl
jle
cltd
sbb
out
push
sub
mov
push
lahf
jp
mov
adc
repz
push
and
mul
fistl
xchg
mov
dec
cs
fwait
dec
pop
test
pop
sbb
xor
xor
jns
xchg
sub
pop
jo
ds
loope
arpl
bound
mov
sti
fcmovnbe
adc
mov
divb
xchg
cmp
sub
add
xchg
inc
pop
mov
pop
aad
xor
xchg
xchg
enter
leave
mov
or
es
xchg
cmp
shrl
movsb
ljmp
cmpsb
inc
shll
or
stos
mov
or
lahf
add
stos
shll
ret
inc
or
ja
xchg
mov
or
xchg
arpl
pop
repz
pop
add
imul
sbb
aas
lea
ret
filds
sbb
sbb
and
sbb
push
mov
cmp
test
and
mov
clc
pop
movsl
addr16
adc
mov
lret
es
orb
lahf
jp
test
aad
xchg
cmp
roll
movsl
cmp
pushf
push
movsb
rclb
or
nop
sub
insb
mov
ljmp
pop
clc
ret
je
out
push
arpl
sbb
imul
daa
add
fldl
cmp
mov
jle
testl
sub
push
jno
fmull
mov
out
jp
daa
arpl
sbb
jbe
mov
pop
push
fistl
adc
les
cmp
push
lods
pop
pop
call
mov
dec
xchg
hlt
xchg
sub
xchg
cltd
imul
mov
ja
test
test
es
int3
adc
stos
push
or
and
lcall
data16
xchg
dec
scas
arpl
loopne
dec
les
sarl
mov
or
dec
mul
cmc
dec
mov
mov
je
sbb
fnstsw
pop
mov
xor
xchg
ret
or
sub
mov
xchg
out
mov
cmp
into
add
jle
cs
fnstcw
and
repz
outsb
xchg
adc
xchg
adc
ja
jmp
mov
inc
or
je
mov
add
dec
jge
scas
xchg
idivl
xchg
movsb
shl
ret
icebp
rcrl
notb
inc
addl
fildl
inc
jecxz
add
and
out
pop
push
adc
ja
adc
mov
add
mov
sti
sub
xchg
push
icebp
loop
mov
or
hlt
cmpsl
out
inc
xlat
pop
inc
xor
jg
or
xor
insl
pop
mov
cmp
test
mov
adc
xchg
pop
xor
inc
js
pop
int3
and
negb
ret
mov
sbb
js
scas
movsl
pushf
fsin
ret
jns
shrl
jge
js
adc
adc
push
aad
cli
les
push
inc
xchg
mov
jle
movsb
mov
jp
scas
inc
add
testb
aaa
enter
adc
mov
outsb
pusha
mov
jne
mov
das
add
and
divb
cs
sbb
cs
ljmp
repz
push
shr
mov
jnp
cmp
aas
arpl
jb
fldt
ljmp
xor
mov
xchg
jp
shlb
bound
je
je
xchg
sbb
dec
lcall
cmp
mov
cmpsl
jbe
sarb
xorb
fldl
loopne
push
popf
test
mov
js
iret
pop
cmc
das
cmpl
jbe
sbb
mov
push
mov
inc
jo
add
frstor
stos
orl
sub
and
fs
out
add
popf
out
cmc
ds
jae
and
pushf
inc
shl
pop
out
mov
jge
dec
fptan
or
ret
cwtl
stos
in
xchg
int
mov
sbb
push
cli
sub
das
dec
mov
sti
pop
daa
je
push
mov
or
in
mov
adc
mov
lds
xchg
pop
icebp
loop
jns
in
loop
mov
sub
jbe
fdivs
xor
nop
repz
rclb
jns
lahf
ja
jbe
dec
sbb
jns
mov
aam
push
out
aam
dec
xchg
mov
in
insb
ja
mov
push
adc
jbe
xchg
js
mov
sbb
loope
pop
sbb
test
out
adc
das
into
sbb
mov
test
ljmp
mov
dec
clc
iret
pop
sub
lock
add
repnz
test
ret
inc
inc
fimuls
xlat
xor
push
pop
cltd
mov
or
pop
fildl
jmp
std
fists
stc
fwait
jle
push
mov
call
or
or
stc
stos
lahf
int3
sbb
rsqrtps
xchg
dec
sbb
push
xchg
xchg
stos
lcall
ficoms
xchg
jae
addr16
pop
in
adc
mov
jl
xor
pop
mov
cld
addr16
xor
pop
je
test
pop
inc
push
push
and
test
dec
cld
and
je
pop
xchg
fstps
repz
incl
cs
movsb
orb
pop
sti
dec
ss
je
ljmp
xchg
or
in
cld
insb
mov
bound
insb
xchg
adc
testb
mov
data16
inc
push
jb
sbb
jnp
mov
mov
jns
imul
imul
push
movsl
in
mov
stos
cs
sbb
addb
mov
push
nop
sahf
int
push
mov
lcall
lods
sub
mov
xchg
push
cwtl
jp
and
daa
test
sub
call
dec
orb
movsl
add
orl
arpl
mov
arpl
lret
testb
cmp
test
or
push
sbbb
dec
sub
jae
stos
clc
sbb
pop
jmp
pop
add
jp
loope
xchg
xor
xor
in
jno
fdivr
sbb
shl
jge
in
pusha
pop
mov
push
mov
fsubs
mov
jg
insl
faddl
push
sar
sbb
mov
xchg
aam
add
sbb
xchg
push
fdivl
xchg
cmp
in
out
sbb
mov
aaa
or
loope
mov
sbb
mov
les
outsb
jg
sub
add
fdivrs
mov
dec
mov
decl
fisubs
cmp
lcall
xchg
pop
push
jb
mov
pop
adc
icebp
into
stos
loop
jge
sub
shlb
repz
dec
bound
inc
test
pop
cld
imul
insb
in
lods
and
addr16
sarb
loope
mov
add
cvtps2pd
push
sub
pminub
imul
jns
cli
mov
sbb
lret
cmp
in
lret
or
sbb
in
sbb
adc
ret
imul
jo
add
or
push
mov
inc
jp
xor
data16
dec
adc
jmp
xor
jo
xchg
jbe
je
xor
adc
repz
lds
push
enter
aas
jo
mov
and
and
negl
out
repz
ds
out
push
stos
sbb
inc
sbb
scas
in
xchg
push
clc
mov
lahf
mov
mov
add
jbe
xor
lea
and
jg
sti
cmp
dec
out
lods
imul
jg
sub
mov
test
mov
cmpsb
vmovlpd
mov
sub
adc
mov
and
out
in
sahf
cwtl
push
and
push
je
in
outsb
pminub
xorl
fisttpl
popa
ret
movsb
stos
pop
xchg
pusha
addr16
inc
movsb
loope
mov
out
mov
dec
sub
push
scas
and
inc
inc
dec
mov
movsl
imul
xchg
iret
aas
xchg
dec
sub
dec
sbb
xchg
adc
lds
adc
enter
je
js
fdivs
jne
mov
mov
and
repz
add
scas
xchg
pop
dec
or
int3
xchg
and
ljmp
gs
int
xchg
or
pop
push
in
aam
push
imul
aad
in
int3
push
movsl
aam
iret
and
pop
test
jne
test
mov
or
or
inc
ffreep
cltd
out
push
xchg
push
add
sub
add
into
pop
adc
fisttpll
aas
inc
or
shrb
cli
fs
jne
inc
adc
or
dec
idiv
loope
mov
sub
arpl
xlat
xor
rol
nop
push
outsl
and
and
and
inc
push
cmc
jge
shlb
sbbb
lret
leave
push
cmp
mov
push
fildl
and
mov
inc
push
imul
jno
xor
dec
xchg
xor
jne
mov
push
or
mov
mov
push
or
gs
pop
mov
add
mov
inc
scas
jmp
pop
jns
int
jmp
xor
dec
sarl
sbb
mov
xchg
pop
sub
mov
dec
jge
daa
pop
xor
dec
mov
cltd
ss
pop
xor
cltd
outsl
or
push
mov
sbb
xor
hlt
push
dec
add
aam
inc
fadds
xor
lahf
pop
arpl
iret
push
push
lds
pop
mov
movsl
scas
sbb
in
xor
fwait
jb
in
clc
dec
jge
mov
repz
jge
mov
pop
dec
repz
inc
pop
fsubl
or
test
push
and
jns
stc
adc
jae
or
int
sbb
addb
pop
xchg
add
arpl
mov
idivl
xchg
mov
adc
or
jg
mov
test
inc
fistps
sbb
jae
daa
add
stos
mov
pop
lahf
pop
loope
cwtl
insl
adc
or
sub
lea
xor
mov
or
dec
mov
pop
xor
inc
stos
jne
and
fisttpl
inc
pop
pusha
icebp
lea
sub
subb
stos
lea
imul
mov
lds
mov
or
jg
jge
ret
shll
xchg
cmp
cmpsb
loopne
pminub
jp
jg
movsl
pop
call
push
outsl
lods
or
mov
stc
add
stos
imul
ret
or
mov
push
xor
sahf
and
cmp
push
jecxz
rcr
mov
rclb
repnz
jo
fisttps
mov
test
call
enter
ljmp
sbb
cmp
sti
test
or
sbb
shlb
jecxz
movsl
and
adc
mov
jmp
dec
bound
inc
hlt
mov
aam
mov
xor
pop
pop
fwait
es
push
and
adc
mov
cmpl
xor
ja
loope
jae
imul
xchg
adc
jmp
jle
inc
insb
enter
xor
insl
dec
mov
add
ds
aam
jge
push
mov
adc
scas
xchg
test
ds
or
and
lahf
pop
ja
inc
mov
clc
push
mov
cmp
pushf
dec
pop
pop
enter
push
xor
pop
out
shlb
pop
in
mov
dec
hlt
in
fdivrs
popa
je
xchg
loopne,pt
cmp
es
into
cmp
xchg
dec
mov
or
lds
push
jbe,pt
lret
mov
loop
lret
mov
repz
cmpl
mov
cmp
or
sbb
mov
adc
mov
jae
out
popa
sar
lods
insb
cmp
or
popa
jb
jg
rorb
dec
xchg
out
nop
dec
neg
sbb
push
xchg
push
out
mov
ret
lock
jg
dec
adc
lahf
push
jl
mov
scas
mov
cwtl
cltd
or
addb
ret
jo
pusha
sbb
fcoms
negb
jno
movsl
cmc
lret
or
loopne
repz
cmpsl
jnp
test
inc
or
js
in
or
mov
dec
mov
sub
sub
jge
mov
inc
addb
jge
addr16
or
mov
lods
sub
hlt
call
out
in
imul
add
mov
mov
adc
imul
ret
dec
dec
sti
loopne
out
test
cld
cmp
aam
inc
mov
mov
push
dec
test
insl
mov
cmp
cmp
sbb
test
rorb
cwtl
pop
cltd
xor
sbb
mov
jecxz
int
cmp
scas
mov
mov
sub
cli
loope
bound
push
push
mov
sub
outsl
mov
in
sbb
dec
shl
push
cmpsl
jo
leave
cltd
add
sbb
sbb
dec
cmpsl
ljmp
jae
mov
repz
shrl
add
pop
jbe
call
icebp
sahf
test
fsubs
mov
lock
mov
test
mov
pop
or
add
xor
cmpsl
clc
push
adcb
xor
nop
jecxz
push
iret
push
push
mov
jae
out
pop
fisubrl
xor
fldt
xor
inc
insb
inc
inc
xchg
dec
arpl
push
xchg
mov
rolb
test
scas
push
inc
xorl
je
ret
mov
pop
fstp
jbe
shll
lret
in
movsb
mov
push
xchg
xor
fsubr
cli
sub
inc
or
dec
rcrl
adc
sahf
jmp
test
ljmp
adc
in
dec
std
fiaddl
xor
add
orb
adc
pushf
jae
shrb
pop
xchg
xchg
cmpsb
cmp
and
push
and
pushf
ret
stc
mov
push
cwtl
ret
sub
jl
outsl
and
loopew
pop
push
mov
and
add
pop
out
adc
loopne
aad
cmp
cmpsl
jns
inc
sbb
mov
jge
xor
popf
movsl
rcr
sub
mov
jmp
aaa
and
sub
aas
mov
enter
ss
sahf
lods
jno
test
cld
xchg
mov
call
enter
insl
arpl
mov
jb
cltd
jae
xor
jnp
jb
fstpl
pop
sti
and
mov
mov
shrl
xchg
loopne
sbb
mov
mov
mov
das
inc
lock
and
dec
xor
clc
test
and
sti
sub
insl
shlb
clc
mov
inc
adc
fsubs
icebp
mov
ja
fbstp
inc
and
mov
insb
or
xchg
push
xor
stc
sbb
mov
sub
and
dec
and
cmpsb
push
add
cmc
jmp
mov
iret
cmp
cmpsb
call
out
cwtl
jl
mov
mov
push
loopne
push
fbld
pop
mov
xchg
sub
fnstenv
out
jno
popl
mov
div
cli
sbb
rolb
mov
in
pushf
cli
jmp
mov
fs
dec
aas
cmp
jnp
and
jb
mov
dec
jo
mov
roll
test
movsb
lret
mov
loopne
clc
ret
jne
or
pop
call
scas
push
popa
outsl
xchg
jl
and
jg
insb
adc
test
shlb
ficompl
pop
jae
sarb
aas
jne
add
xchg
mov
rorb
icebp
cmp
lods
jle
shl
cmpsb
cmp
sub
mov
cmp
add
les
in
in
test
daa
daa
orb
xor
adc
fdivrl
sarb
xchg
dec
loope
ret
mov
outsl
push
pop
ret
xor
inc
dec
popa
enter
or
out
ds
push
not
std
je
xchg
push
inc
pusha
xor
inc
lahf
fmull
xor
jae
daa
jno
dec
inc
pop
mov
divb
roll
adc
jl
push
xorb
and
and
mov
cmp
gs
add
sti
and
mov
jl
jns
lea
aaa
push
sub
int
lcall
or
out
sti
daa
vpsubusb
pop
outsl
pop
jg
xchg
push
mov
jmp
add
add
and
iret
notb
pop
xor
outsb
rol
idiv
dec
push
arpl
and
mov
popf
aam
sahf
aam
mov
int
arpl
xchg
ret
lea
jnp
pop
mov
adc
test
pop
aas
into
push
dec
hlt
ja
aaa
push
dec
jns
sbb
stos
inc
pop
sbb
push
in
cwtl
es
add
jb
roll
dec
mov
aam
mov
xchg
jl
xchg
leave
aad
push
std
mov
sub
iret
and
mov
dec
mov
mov
daa
jnp
xor
mov
notb
aam
and
and
xchg
dec
xchg
shrb
pop
fsubs
adc
out
xor
repz
pop
jl
pop
das
pop
mov
enter
xor
ds
jmp
sbb
stos
xchg
test
adc
inc
loope
jne
scas
cmpb
and
add
sub
loope
out
cmp
jle
lret
cwtl
xchg
or
add
subb
in
inc
add
outsl
ret
xlat
std
adc
loopne
andl
and
xlat
loopne
xchg
fcmovnbe
cmp
mov
mov
push
pop
xchg
and
push
add
cli
lods
sbbl
sbb
sub
in
xchg
adc
mov
push
cmp
push
ret
dec
pop
xchg
clc
add
outsb
into
ja
insl
mov
xlat
adc
nop
push
rclb
jns
ljmp
test
jg
loopne
fldt
inc
les
insb
inc
add
jle
lds
sub
sbb
aas
pop
mov
pop
out
in
pop
push
pop
sub
lcall
add
mov
or
sbb
test
lret
or
inc
inc
push
dec
daa
mov
cwtl
inc
daa
movsl
pop
fldl
pop
dec
lods
jae
clc
ljmp
dec
and
sub
lea
in
div
mov
cltd
add
xor
rcll
cltd
loope
aas
mov
adc
out
mov
insl
inc
sub
iret
div
mov
loopne
inc
mov
out
outsl
sbb
jp
sahf
repz
int3
mov
jb
mov
push
push
dec
mov
or
aad
or
ds
aas
cmp
sbb
loope
clc
inc
jae
es
jle
cld
mov
fimuls
jg
add
inc
push
data16
push
add
stos
add
push
std
mov
test
clc
mov
inc
cmp
jne
xlat
mov
daa
add
dec
in
js
mov
scas
mov
mov
lret
mov
ds
add
adcb
es
mov
sbb
in
loop
or
dec
pop
ja
dec
loopne
or
mov
fdivl
adc
enter
loopne
mov
int
dec
sbb
sti
sbb
mov
nop
in
hlt
inc
pushl
mov
andl
cmc
jae
dec
cmpsb
jnp
mov
jecxz
jo
pop
scas
mov
push
adc
sbb
dec
sbb
addl
mov
jbe
adc
add
jg
xor
fistl
movsb
cmp
xlat
lret
cmpsl
and
lds
xor
cltd
lods
test
in
sbb
repz
insl
pushf
mov
xor
add
push
repnz
xchg
inc
loop
jns
or
xchg
add
rorb
enter
add
or
outsl
fistpll
pop
mov
push
jae
pop
xchg
cwtl
subb
enter
out
icebp
inc
lea
xor
push
leave
nop
sub
ret
dec
popf
out
and
lahf
imul
mov
sahf
outsl
daa
aaa
std
lcall
repz
mov
lcall
jmp
push
sbb
cwtl
bound
insl
xorl
lcall
xchg
and
insl
jns
jne
and
or
cltd
outsl
mov
mov
jns
fwait
scas
cli
push
movsb
add
lock
lret
inc
or
mov
xchg
test
or
xchg
pop
pusha
jno
push
mov
rcr
in
movsl
mov
es
insl
adc
mov
dec
or
pop
jmp
xchg
imul
mov
xor
mov
mov
loop
push
or
mov
adc
mov
addl
inc
out
scas
cwtl
out
popf
fwait
adc
jns
sbb
push
movsl
test
movsb
or
lret
push
out
sub
jge
adc
mov
sahf
sbb
cwtl
sub
insb
mov
jnp
arpl
mov
cmpsl
jmp
jecxz
pop
sarl
shlb
cmpl
mov
jno
fdiv
fldl
sbb
jle
sub
cmpsb
adc
add
mov
push
jecxz
dec
cwtl
loope
and
divl
cmp
or
rorl
bound
sarl
lds
test
test
fldcw
xchg
lock
and
jecxz
sub
push
decb
add
and
popa
packuswb
sub
nop
je
rclb
xchg
repz
test
scas
adc
and
xchg
loopne
pop
add
lea
xchg
rcr
pop
decl
add
dec
icebp
sar
dec
call
sbb
add
xchg
fldcw
test
les
lods
push
das
mov
hlt
scas
icebp
push
cmp
jl
inc
pushf
lret
and
xchg
jae
fstpt
lock
int
push
hlt
push
or
jne
cwtl
jb
mov
xchg
ja
cmpsb
loope
xchg
sub
imul
aad
into
mov
mov
arpl
xor
sbbb
inc
mov
addr16
mov
pop
fsubrp
inc
add
aam
and
jb
xor
mov
divl
mov
add
test
jo
mov
hlt
rorb
daa
cmpsb
nop
shlb
repz
in
mov
cmp
xor
dec
push
xchg
addb
or
rcrl
into
sub
stc
sbb
ret
imul
mov
addr16
adc
xor
ljmp
outsl
sbb
jne
insb
repz
test
sub
mov
mov
imul
push
lahf
lret
loope
push
pusha
pusha
xchg
sbb
and
xor
scas
out
fisttpl
push
cmpsl
mov
push
xor
sbb
xchg
xorl
test
sbbb
jecxz
or
jbe
mov
cltd
mov
xchg
push
aam
sub
xchg
out
imul
mov
jb
pop
insl
push
fiadds
pop
imul
lock
and
ret
rcl
push
push
aad
pop
fwait
dec
fdiv
lcall
add
or
stos
mov
mov
rolb
mov
pop
imul
rorl
pop
push
shrb
and
dec
jmp
lds
popw
jne
daa
push
in
call
sub
or
push
pop
inc
mov
loope
pop
fists
in
mov
pop
fisubl
or
movsb
cmp
cmp
sete
push
std
xchg
inc
push
lret
es
sub
std
xor
lahf
mov
aaa
adc
push
push
sbb
pop
xor
xchg
jns
jg
out
test
mov
pop
mov
push
mov
pop
sub
push
and
daa
out
popw
or
xor
inc
inc
push
xchg
into
push
andb
fdiv
fcmovu
xor
bnd
sub
mov
xchg
push
movsb
mov
js
outsl
pop
add
xlat
lds
pop
mov
mov
pop
and
imul
pop
inc
adc
inc
ficoml
in
aas
jno
imul
adcb
notb
lret
insb
fwait
jg
xor
cmp
jl
cli
jecxz
lcall
rcrb
cltd
push
add
cmp
adc
cmp
mul
les
add
in
jp
sbb
aas
rorl
cmpsl
dec
pop
inc
xchg
pop
mov
dec
jb
pop
sbb
sbb
mov
fcoml
jns
ret
add
sbb
and
mov
pusha
imul
sub
cmp
inc
add
xlat
mov
or
sub
into
jnp
cmp
xor
push
aam
outsl
repz
push
sub
and
dec
mov
lret
adc
arpl
dec
repz
adc
mov
lret
xchg
mov
call
jae
sbb
xor
pushf
pop
mov
out
mov
sahf
or
sbb
repz
push
pop
fiaddl
jb
cmpl
movsl
shrl
and
dec
xor
xor
fdivrl
adc
or
pop
pop
clc
das
xlat
cmp
inc
add
mov
inc
gs
inc
push
pop
sbb
dec
push
sub
and
xor
pop
scas
nop
push
mov
sbb
mov
jo
imul
adc
add
dec
sub
mov
or
lret
inc
test
cvttps2pi
mov
xor
jns
pop
hlt
test
add
fsub
adc
xor
xchg
sbb
gs
mov
pusha
jns
loope
mov
icebp
mov
mov
mov
add
mov
push
testb
rcrw
xchg
enter
repnz
or
mov
and
shrb
cmp
xchg
in
in
pusha
cmp
jne
jle
jg
mov
mov
mov
jl
pop
test
xor
adc
das
test
aad
cmp
cs
or
scas
dec
add
inc
test
or
or
inc
pop
pop
xchg
iret
lret
push
mov
mov
xor
lret
jae
mov
push
dec
dec
pop
and
or
jmp
mov
cmp
fcoms
cs
jge
pop
roll
jo
pop
inc
jnp
cmp
pop
dec
sbb
out
stos
cmp
imul
jbe
and
clc
call
stos
lods
xchg
xchg
int3
push
and
negb
dec
mov
jp
sbb
jnp
or
loope
mov
mov
sbb
mov
imul
dec
iret
pop
push
js
jge
cmp
loope
aam
mov
sahf
popf
push
and
or
pop
movb
fnstenvs
stos
pop
shrl
jo
sbb
sarl
push
xlat
xchg
inc
test
out
popa
fadd
sub
test
mov
cli
mov
and
shrl
pusha
push
and
xor
jae
jnp
pop
pop
jnp
lcall
mov
xchg
int
andl
leave
sub
mov
dec
ficoml
stc
in
test
jl
repz
push
or
jns
pop
push
or
iret
jbe
dec
and
arpl
pop
push
dec
push
fisubs
out
clc
mov
add
push
sti
mov
stos
push
adc
mov
out
ja
push
xchg
mov
fisubs
sbb
push
xchg
cli
lea
mov
mov
cmp
push
push
iret
mov
aad
jns
mov
aaa
xor
out
xchg
adc
pop
mov
bound
lahf
push
xor
lods
cmpsb
adc
mov
jp
insb
jne
int3
xchg
pop
test
sar
add
jae
bound
push
outsl
or
lret
add
daa
dec
lock
fisttpl
shll
push
jle
mov
mov
fbstp
sub
mov
xchg
out
lahf
nop
sbb
and
mov
push
mov
jns
enter
repz
and
bound
lret
or
sbb
push
dec
pop
mov
popa
jmp
sub
out
out
addb
cmp
ret
jl
aam
mov
xchg
lret
shr
test
ret
cmpsb
scas
fisttpl
ret
fstl
push
sub
test
out
xlat
sub
mov
xor
test
cld
in
sbb
das
adc
adc
inc
pop
int3
aaa
pusha
adc
lret
xor
clc
xchg
add
ret
gs
pop
or
sbb
daa
movsb
es
mov
pop
jge
adc
jnp
ds
jo
orl
fwait
idiv
cmpsb
fwait
ljmp
popa
pushf
sbb
out
in
leave
shlb
lods
adc
outsb
out
pop
ss
rolb
test
cwtl
decb
int3
dec
or
daa
push
gs
jmp
int3
fstl
pop
nop
aad
bound
sbb
out
aas
sub
arpl
insb
mov
pushl
bound
add
pushf
sbb
sub
adc
add
push
and
stos
cs
cmc
stos
mov
push
sahf
dec
int3
xchg
cmp
or
push
popf
sbb
es
iret
into
loope
cmp
pop
clc
mov
popf
mov
inc
cmp
andl
fistps
hlt
jns
cwtl
outsb
fcmovnu
scas
xor
inc
test
sbb
sbb
imul
das
lret
add
xchg
jae
aad
mov
sti
push
xor
inc
out
xchg
pop
xchg
sbb
aaa
mov
inc
and
jno
out
test
es
mov
in
mov
sbb
mov
pop
xchg
aaa
adc
fcmovu
xchg
aad
pop
decb
inc
dec
gs
add
and
dec
or
into
nop
sbb
cmp
pop
loop
jne
pusha
pop
mov
ds
mov
dec
aam
test
cmc
cmp
xchg
fwait
lret
ficomps
insl
lea
and
xchg
bound
push
adc
xchg
push
push
les
loopne
push
mov
daa
sub
loope
les
or
jmp
mov
dec
mov
sti
add
xchg
loopne
lods
mov
out
aam
cltd
fcmovnbe
pop
jg
std
aas
insl
into
add
hlt
and
pop
test
cwtl
add
mov
mov
and
mov
aad
loope
inc
insl
addr16
push
mov
das
cwtl
lahf
nop
out
das
fstpt
loopne
cltd
out
ds
xchg
inc
mov
dec
cwtl
addb
pop
cmpsl
scas
jo
int3
sbb
ljmp
jle
sar
test
mov
xlat
adc
lods
jge
fcoms
std
out
jae,pt
fmuls
lock
cld
push
test
cmp
xor
lret
or
xchg
std
inc
es
int3
mov
andb
xchg
scas
add
add
js
mov
cmp
pop
loopne
rolb
test
call
mov
mov
bound
jo
pop
mov
cmc
xor
add
hlt
xchg
fidivs
rorl
mov
mov
ret
adc
xlat
mov
inc
rcll
add
mov
dec
xchg
gs
popa
jl
inc
rcrl
je
ret
out
shrl
lea
push
aam
in
andb
mov
int
pop
push
fldl
daa
mov
lcall
cmp
push
mov
inc
sub
push
or
fsubs
sbb
fimuls
test
sub
aam
push
mov
mov
pop
push
push
je
out
imul
xchg
jbe
dec
pop
imul
test
xchg
cmc
dec
mov
jge
fcomip
jo
mov
jne
pop
xor
inc
enter
or
push
fldcw
push
lods
mov
stc
lea
sub
mov
int3
mov
mov
insl
lea
clc
mov
mov
ja
fadd
int3
in
mov
sbb
pop
dec
test
and
adc
or
sub
loope
leave
sbb
pop
scas
dec
inc
fsubl
jmp
pop
mov
mov
es
pop
data16
outsb
jmp
int3
sub
popa
cltd
fildl
sbb
out
scas
cmpsb
andl
cmpsl
jne
jno
stos
and
rclb
out
cld
and
mov
notb
add
push
jae
mov
xor
je
jbe
pop
xchg
hlt
or
inc
scas
out
int3
into
mov
inc
ret
ljmp
out
scas
dec
push
mov
mov
fcoml
ljmp
and
mov
aas
fstpt
insb
push
jns
xor
fldenv
cmp
mov
comiss
rcll
mov
int3
cmpsl
arpl
in
lods
cmc
cwtl
fisttps
and
xlat
outsl
and
pop
or
cmp
js
fwait
testl
push
mov
xlat
pop
xor
inc
test
nop
or
dec
and
adcb
aaa
adcl
lock
cmp
cmp
sub
push
add
fsubrs
fdivrp
test
or
inc
xor
insb
jb
mov
imul
gs
xor
pop
mov
iret
fidivs
notb
xchg
lret
mov
sbb
mov
je
push
xchg
pop
xchg
and
mov
aaa
sub
sub
shll
repz
pop
and
loopne
das
push
push
mov
test
jbe
int
into
adc
stos
aad
jo
jo
mov
or
xor
push
insb
jno
sbb
scas
lret
push
fistpll
lret
jle
shrl
lahf
stc
arpl
xchg
sub
lret
sahf
mov
cmc
dec
filds
loopne
fidivs
ffree
mov
jns
or
sub
add
dec
add
enter
jle
jp
loopne
mov
popf
add
xchg
rclb
mov
fisttpl
aas
sub
cmp
cmp
test
mov
inc
int
lods
in
or
push
xchg
mov
sub
in
sbb
cwtl
xlat
or
mov
mov
aam
les
mov
push
or
dec
mov
sbb
decb
pop
scas
and
iret
out
nop
sub
push
enter
pushf
movb
std
sub
rolb
cmp
jno
call
sbb
nop
dec
decl
or
bound
clc
rcrb
lds
sarl
out
int
adc
jns
addr16
iret
gs
xor
fwait
adc
pop
sub
stc
push
jne
sub
dec
jl
cmpl
adc
add
mov
xchg
stos
test
aas
or
nop
inc
insb
adc
ret
lahf
cmpl
movsb
lea
adc
pop
pop
je
xchg
pop
out
dec
ljmp
jg
imul
flds
xchg
aad
dec
mov
mov
add
add
cld
cli
daa
shl
mov
aam
sub
jle
icebp
push
nop
xor
mov
mov
dec
fnsave
lret
stos
jecxz
outsb
mov
mov
pusha
add
and
js
pop
call
jnp
adc
js
sbb
ljmp
scas
mov
jbe
arpl
cmp
push
pop
inc
pop
pop
push
mov
xchg
sub
cmp
mov
fnsave
fcoml
into
js
sub
mov
sub
xchg
scas
nop
pop
mov
arpl
sub
rol
and
inc
cvtdq2ps
frstor
popf
mov
mov
or
pop
insb
aaa
lods
mov
hlt
fwait
loop
xor
cmpsb
imul
in
xchg
clc
lahf
cli
rcrb
fildll
sti
scas
sbb
jmp
loope
pushf
decb
sub
pop
jnp
adc
jbe
imul
push
leave
dec
test
mov
push
dec
mov
xchg
or
pop
mov
cmpsb
inc
mov
movsb
jecxz
scas
lock
push
sahf
xchg
xchg
xor
push
stos
js
jae
jb
cmc
outsb
lahf
lret
cmp
jmp
cmpsb
add
add
jl
jl
enter
cltd
popa
inc
and
mov
mov
sbb
aad
scas
adc
in
cmp
mov
inc
imul
sub
pop
push
inc
shrl
aam
xchg
fidivl
add
fcompl
loopne
add
and
into
cmc
fiadds
jmp
mov
jge
je
mov
repnz
inc
inc
xor
call
lret
and
jg
cmc
push
sarl
sbb
cmpsl
rclb
push
ficompl
mov
or
cmp
aam
adc
push
les
push
sbb
xchg
add
cmpl
pop
mov
jmp
lea
mov
mov
imul
cld
shll
pushf
pop
lock
push
or
adc
push
dec
adc
mov
inc
jnp
aam
jno
cmpsb
push
dec
pop
jb
aaa
sub
xor
jnp
rclb
add
push
jno
jno
sbb
scas
pushl
cmp
stos
mov
scas
lods
push
stc
jno
inc
ja
jno
shl
lock
xlat
fs
out
cmp
notb
mov
inc
jle
jle
dec
shl
cmpsl
imul
jae
js
out
push
add
shll
pop
jno
mov
push
or
jae
arpl
inc
loopne
pop
outsl
in
loopne
inc
sbb
cmp
pop
cmpsl
rcll
push
jge
pop
seto
cmpsb
sub
movl
jns
sarl
inc
mov
jns
repz
add
adc
ffreep
dec
push
mov
pop
lods
push
inc
mov
jp
dec
adc
fadd
or
or
leave
inc
dec
add
mov
loop
mov
insb
jae
mov
gs
shlb
sub
pop
fwait
add
sbb
aam
sbb
inc
push
jns
dec
pushf
adc
push
xor
xchg
xor
jmp
loope
xor
mov
outsl
pop
and
xchg
insl
aam
jbe
mul
movl
inc
cmp
cmp
or
add
mov
cli
sbb
out
xor
dec
cmp
xor
mov
mov
cld
lock
and
imulb
inc
lods
and
insb
mov
and
push
cwtl
movsb
int
dec
sbb
insb
adc
fistpll
mov
mov
xor
add
movsb
pop
lret
mov
mov
outsl
lret
stc
adc
adc
cmpl
cli
xor
and
pop
addr16
xchg
mov
xlat
imul
add
test
ret
ret
lds
sbbl
arpl
jae
xchg
inc
sbb
mov
push
repz
or
fistl
cmp
dec
push
xor
add
jne
shrb
and
fadds
ss
fisttps
inc
dec
jge
and
mov
pop
dec
inc
mov
les
fwait
dec
or
adc
cmp
and
lahf
mov
xchg
add
inc
pop
cmp
loop
popa
sbb
and
and
test
in
aas
pusha
dec
mov
test
adc
sub
call
dec
dec
filds
add
or
sbb
fadd
out
jo
dec
jns
rcrl
clc
mov
jecxz
xor
push
jnp
or
idivb
inc
shr
and
dec
xchg
xlat
dec
mov
pop
fdecstp
jo
xchg
pop
scas
ja
xor
out
mov
test
mov
jb
sbb
push
jo
inc
rclb
imul
sub
mov
movsl
adc
in
je
pop
nop
aas
add
rolb
jae
scas
jbe
testb
shrl
cltd
dec
mov
sbb
add
and
mov
sbb
incb
dec
dec
mov
or
sbb
or
fmulp
pop
call
push
lock
push
push
xchg
add
mov
push
call
push
inc
adc
das
icebp
addr16
mov
into
subb
dec
and
lahf
movsl
loop
imul
mov
cmpsl
jmp
mov
mov
jbe
out
xor
xchg
aas
cwtl
cmc
pop
icebp
in
add
add
movswl
out
pop
adc
orl
sbb
mov
lret
dec
aad
jmp
out
bound
pop
shll
and
sbb
xchg
push
xchg
dec
jl
or
notb
hlt
movsl
int
mov
or
dec
sub
push
aam
dec
cmp
aam
outsl
and
movsb
push
jge
mov
push
or
test
scas
ret
fcmove
xchg
pop
pop
adc
daa
test
repz
mov
xor
aad
insl
andl
jp
stos
inc
cmp
je
jmp
movsb
outsl
push
inc
sbb
jp
dec
pop
push
repz
loope
mov
dec
jge
shrb
cmp
mov
iret
xor
xchg
stc
jge
cmp
js
icebp
out
xlat
insb
pusha
decb
mov
sub
mov
cmp
popa
addr16
jle
shl
and
neg
shll
adc
loop
add
inc
cmc
sbb
or
jno
xor
mov
mov
test
and
fwait
cmpsl
pop
lret
mov
pop
testl
cs
push
enter
push
and
subb
pop
mov
scas
movsl
sbb
mov
lahf
cmp
cwtl
in
add
ret
ljmp
ss
test
scas
xorb
mov
popa
push
ds
mov
bound
test
cltd
xorl
sbb
inc
mov
sub
loop
mov
imul
aas
jbe
dec
jns
test
xchg
xchg
push
in
push
push
add
mov
cli
repz
cmpsl
or
inc
xor
cs
pusha
add
rcll
scas
jecxz
mov
cltd
mov
stos
fistpl
jg
icebp
sahf
sbbl
jl
or
mov
sub
cli
and
pusha
cmp
or
push
adc
fnstsw
xor
push
and
cmp
jns
rcl
in
stos
out
pop
jge
sbbl
fmuls
stos
pusha
repnz
add
ljmp
lods
and
adc
mov
outsb
inc
cltd
int3
mov
shrb
nop
in
pop
mov
push
mov
xchg
clc
divb
and
std
push
add
mov
out
sub
shlb
pop
jbe
adc
sub
sub
or
stc
cmp
les
pop
into
fadd
in
fcmovb
jg
jo
cwtl
aam
sub
add
mov
outsl
jae
mov
cmp
cmp
mov
out
mov
cmpl
es
popa
sarb
cwtl
xchg
or
cmp
pop
pop
in
push
adc
fsubs
aas
test
xchg
push
imul
mov
mov
mov
sti
test
sbb
scas
xchg
call
sbb
sub
adc
popa
xor
push
mov
cmpps
nop
out
int
bound
jp
cs
jb
mov
inc
into
xchg
mov
adc
inc
cmp
in
in
pop
xor
repnz
mov
jl
hlt
xor
add
cmpsl
lods
push
jl
ret
movsb
sub
xchg
int3
mov
lods
bound
in
jp
scas
xchg
xchg
aad
inc
dec
ds
mov
mov
add
mov
data16
cmp
cltd
addr16
xor
pop
pop
mov
imul
mov
inc
jb
std
into
popf
ds
jnp
xchg
sub
ss
adc
pop
in
loop
pop
out
push
xor
and
std
sub
or
sbbb
rcrb
nop
mov
aaa
pop
cmp
sub
dec
xchg
dec
jne
push
fwait
cmp
and
out
sti
mov
xchg
mov
mov
or
jae
xlat
mov
lods
mov
mov
push
sbb
add
xchg
cmc
push
push
adc
push
mov
dec
pusha
cmp
lret
ficompl
rcl
adc
je
jae
outsb
aad
mov
pop
hlt
dec
adc
gs
adc
stos
or
inc
ss
scas
test
outsb
xor
daa
mov
sbb
jg
test
inc
sub
push
cmp
cwtl
fcmovne
into
jecxz
stos
mov
sub
cld
imul
mov
xor
push
leave
je
imul
or
dec
mov
sub
popl
movsl
mov
loope
push
and
fdivs
insb
push
or
jmp
pushf
pusha
enter
lds
aad
sti
loopne
jnp
popl
imul
or
or
add
dec
addl
inc
xor
jge
sbb
add
repnz
js
inc
icebp
fcmovu
cmp
cmpsb
scas
cmp
or
mov
xchg
inc
mov
ja
adc
add
loope
adc
dec
sahf
in
sbb
mov
or
jbe
and
xrelease
add
pop
scas
ds
inc
lea
ja
cmp
popf
push
fnsave
cmpsb
mov
in
pop
mov
dec
in
mov
dec
sub
push
push
inc
inc
xor
dec
mov
repz
dec
add
and
cmp
jp
mov
inc
cmp
movsl
push
mov
les
loopne
dec
inc
sarb
cli
in
adc
cmp
mov
lahf
jp
inc
xchg
rclb
in
push
incl
inc
dec
add
jnp
out
sbb
mov
sahf
fldcw
leave
ret
repnz
ret
xor
cmp
sti
ja
daa
jl
fistl
or
or
aaa
fmuls
icebp
cwtl
jno
or
fstpt
cmp
imul
stos
xor
mov
cmc
add
fisttps
subb
cld
insl
jle
rolb
mov
in
stos
fs
in
leave
repz
clc
cmp
hlt
xchg
pop
movsb
xchg
inc
xchg
xchg
mov
pop
xorb
mov
mov
cmpsb
xor
xor
mov
ljmp
nop
lret
mov
popf
into
pop
push
test
adc
fisubs
loope
sbb
xchg
mov
push
in
mov
pop
add
std
imul
lock
xor
nop
aas
lods
repz
sti
cwtl
js
or
int3
cmp
imul
int
push
scas
rorl
lret
rorb
or
mov
test
jp
mov
or
cmpl
jnp
pop
and
lock
jae
sub
repz
jb
popa
xchg
stos
insl
repnz
stos
js
dec
or
mov
sbb
xchg
test
fwait
cmp
fidivrl
aam
lock
rcl
mov
jo
stos
jl
aaa
in
inc
dec
jb
movsb
fldenv
imulb
jo
enter
lea
dec
cmc
out
lds
xor
add
and
repnz
and
mov
lret
movsb
icebp
mov
pop
and
or
push
cld
out
lret
lds
fwait
mulb
fadds
add
mov
les
ds
arpl
pusha
push
and
mov
and
cmp
jmp
mov
mov
popa
insl
arpl
lret
xlat
movsb
inc
in
mov
and
imul
cmp
sbb
cmp
adc
test
out
and
fisttpl
jmp
and
outsb
add
jmp
mov
test
jns
push
add
fwait
cmp
mov
dec
fbstp
lret
pop
cmp
add
dec
sub
testl
push
sti
pop
mov
push
ja
in
fbld
into
int3
jle
stos
rol
out
or
cmp
into
cmpsb
call
mov
xchg
cltd
in
cwtl
in
mov
sub
push
inc
mov
filds
or
and
jno
pop
in
adc
fidivrl
sbb
mov
shl
pop
push
adc
notb
xorl
mov
push
inc
mov
cwtl
jecxz
mov
mov
aaa
jmp
imul
cmp
pop
jne
in
std
ljmp
cs
lahf
push
dec
loope
testb
mov
popa
mov
inc
dec
les
pusha
sarb
adc
mov
pushf
test
js
sub
dec
add
xor
scas
pop
pop
mov
push
adc
in
fidivl
sub
test
sbb
ljmp
ret
fnsave
dec
lret
call
and
cmp
xchg
lock
test
rcrl
jecxz
push
mov
xor
push
sbb
xchg
adc
jnp
jecxz
fldt
mov
insb
leave
les
sub
push
inc
xchg
push
push
cmc
add
call
inc
or
adc
pop
arpl
fdivr
sti
inc
mov
add
addr16
sub
out
stos
aas
insl
out
lret
cltd
jmp
dec
pop
push
mov
jo
pop
pop
movsb
add
inc
mov
inc
jno
pop
rorb
aaa
mov
addr16
testb
scas
movsl
mov
jbe
into
daa
and
lcall
cld
inc
dec
jno
bound
pop
xor
or
sub
sub
inc
mov
icebp
or
xlat
fwait
shrl
subl
lret
mov
out
pop
mov
inc
movsl
push
dec
cmpsb
gs
lcall
or
loopne
ja
and
repnz
test
jns
push
pop
inc
mov
bound
push
or
adc
imul
cmp
push
xlat
xor
mov
cmp
imul
cmpsb
movsb
sub
inc
pop
pop
in
int3
leave
cld
shll
pushl
js
push
push
inc
out
adc
dec
sti
scas
lret
fwait
jns
adc
xchg
imul
pop
sti
fldz
mov
mov
add
mov
inc
jle
push
decl
cmp
sbb
sub
add
test
mul
fdivrp
jecxz
push
ret
cmp
mov
cwtl
pop
pop
imulb
dec
or
lods
addl
out
or
scas
inc
adc
jmp
cld
rcl
hlt
push
sbbb
add
add
out
cmpsl
outsb
into
hlt
dec
mov
loope
push
rol
jecxz
stos
je
gs
adcb
pop
jnp
mov
and
scas
xlat
imul
cmp
adc
ja
insb
mov
adc
mov
mov
xchg
rcrl
adc
sub
mov
or
add
in
adc
inc
aad
jmp
lret
mov
pop
cmp
xor
inc
sub
push
shll
nop
data16
cwtl
mov
insb
stos
dec
inc
orb
jae
bndstx
cli
pop
adc
mov
movl
mov
roll
lock
cli
add
mov
call
fnsave
inc
pop
mov
in
lret
je
sbb
pop
pop
dec
mov
scas
and
js
pavgb
and
dec
mov
cmpb
xchg
dec
jg
fisttpl
inc
scas
rol
mov
into
xchg
dec
xchg
pop
cmovns
or
jg
inc
add
in
psrad
or
std
sbb
pop
dec
shlb
adc
mov
xchg
or
lret
das
adc
push
adc
pop
test
outsb
jp
push
pop
fsubp
mov
add
push
sbb
in
loop
sahf
test
cmpsb
stos
cs
lahf
loop
mov
out
pop
cmc
push
or
or
mov
xchg
icebp
mov
test
lret
mov
out
xor
and
dec
cmp
ds
jae
or
ffreep
insl
mov
add
dec
pop
mov
gs
sahf
pop
adc
jbe
push
fdivrl
out
fcom
mov
lods
pop
mov
cmp
rcl
xchg
popf
cmpsb
ljmp
shl
mov
jecxz
in
xor
xor
andb
leave
dec
sub
mov
loopne
xchg
or
jg
movsl
sbb
jge
loop
xor
shrl
and
mov
cmc
mov
das
sbb
mov
call
pop
and
ud1
cmp
inc
cwtl
xor
push
shr
jle
mulb
push
xor
jmp
cmpsb
cmp
and
mov
shr
sbb
jl
sbb
mov
je
or
fsubr
add
sub
sti
daa
outsl
dec
xlat
add
lcall
cmc
push
push
sub
cmpsb
scas
insb
xlat
jecxz
arpl
sbb
and
add
xchg
and
mov
cmp
jno
mov
sbb
stc
insb
adc
inc
lods
ret
dec
sub
jo
jp
loopne
lods
push
orb
sti
vdivpd
dec
mov
es
ds
adc
mov
out
inc
push
sub
lock
xor
insb
subb
cli
insb
xlat
cltd
mov
pop
xchg
push
ret
insl
ret
mov
or
add
mov
cmp
sahf
add
pop
in
movsl
push
fnstsw
gs
lret
in
movsl
ret
push
mov
xchg
or
test
dec
pop
test
mov
and
inc
icebp
cmpsb
test
adc
insl
or
cltd
inc
or
popa
cs
mov
lcall
push
aad
rorb
mov
sahf
repz
push
and
outsl
outsb
push
adc
pop
out
vcvtps2pd
rolb
fisubrs
int
fs
cmp
test
cmp
rcrl
add
ret
leave
xchg
orb
adc
divl
mov
stc
jle
adc
xchg
push
mov
lcall
cmc
lock
sub
mov
imul
sahf
imul
push
inc
popf
push
mov
dec
push
leave
insl
or
push
lods
mov
or
add
xchg
or
pshufw
push
enter
imul
jmp
mov
repz
out
je
cmp
dec
inc
ret
les
sub
mov
adc
test
sub
out
or
cmc
aas
push
pushf
mov
push
or
sub
adcb
lret
and
in
or
xchg
ja
ss
pusha
lods
out
aam
mov
push
and
movsl
scas
imul
pusha
les
and
sbb
daa
mov
xorb
cmpsl
test
jg
pop
loope
sub
lds
cmc
sbb
lds
insl
imul
out
push
int
pop
xchg
mov
push
add
adc
jae
mov
push
gs
fstps
xchg
pushf
enter
stos
je
xchg
push
mov
push
xchg
xchg
dec
bound
mov
ja
xchg
pop
sbb
jle
sbb
jmp
and
bound
dec
jb
jge
and
adc
iret
fimuls
cmc
adc
cltd
movd
loopne
movsl
loopne
push
jb
mov
adc
test
aas
pop
jl
and
and
cmp
dec
or
mov
ss
hlt
icebp
pop
add
roll
xchg
or
or
jle
in
sbb
leave
cmpsl
lods
fidivrs
and
xchg
xchg
int3
mov
cltd
repnz
pop
repz
repnz
add
adc
or
push
xchg
pop
lock
xor
jecxz
jo
arpl
pop
push
push
lret
jne
pop
outsl
jnp
xor
loopne
enter
cwtl
loope
xor
xor
repnz
xchg
ret
cmpsl
scas
lods
and
nop
jl
lock
mov
inc
mov
insl
or
jl
mov
das
daa
repz
and
shlb
add
sub
adc
pop
fwait
loop
xlat
les
in
daa
mov
xchg
cmp
jb
lods
dec
pop
cmp
xchg
mov
xchg
and
inc
cltd
push
daa
push
loop
lea
arpl
push
ds
or
sbb
xor
mov
imul
pop
sub
inc
adc
test
test
xor
sbb
mov
pop
insb
mov
out
andl
mov
in
cs
ret
mov
push
xor
sub
test
mov
lcall
punpcklbw
adc
xchg
sub
mov
xor
aas
into
outsb
push
cmp
cmp
ss
in
dec
xchg
enter
pop
mov
aas
pushf
shll
sub
dec
je
sub
jg
popa
les
sub
cmp
xor
jecxz
jecxz
jecxz
sub
push
addl
bound
push
jecxz
addr16
frstor
mov
js
adc
push
test
loope
fmul
pusha
shlb
inc
add
jo
adc
adc
jo
jecxz
or
out
dec
fs
in
sbb
fbld
aas
lods
int3
popf
jbe
cmp
fdivs
pushf
or
cmp
repnz
insb
or
fdivs
lea
pushl
ss
rorl
scas
push
xlat
das
iret
xchg
out
lock
loopne
int3
in
push
dec
in
fsubr
dec
aas
sar
enter
clc
mov
out
inc
mov
or
cmc
pop
divl
in
shll
test
call
sub
mov
mov
adc
pop
jae
jg
ja
push
jge
push
rcrl
adc
lcall
inc
adc
jbe
popf
lods
jnp
sbb
iret
xor
out
jns
int3
leave
adc
mov
pop
push
lret
xor
pop
inc
sti
fs
or
pop
call
shll
adc
push
ret
mov
lods
or
cmc
lods
mov
outsl
cmp
xchg
in
jg
in
idivl
jge
pop
mov
into
add
mov
mov
lret
movsb
cli
inc
mov
cmpsl
push
lock
dec
imul
out
into
cltd
sub
cmp
add
insb
add
ljmp
jmp
shl
pop
push
mov
mov
test
pushf
call
iret
push
iret
loopne
fcoms
pop
xor
sahf
xor
adc
je
js
stos
ror
insl
repnz
or
adc
mov
rolb
movsl
lock
and
pop
out
push
sub
xchg
mov
adc
dec
pushw
jno
jecxz
and
or
xchg
je
pusha
jne
hlt
insl
fs
nop
xchg
leave
stos
dec
fisubl
dec
dec
mov
sub
dec
cmpsl
push
inc
add
sahf
inc
pop
mov
jl
xchg
stc
fmul
lcall
cmovbe
cmp
jbe
bound
xor
addr16
sbb
movsb
mov
mov
hlt
mov
outsb
call
test
icebp
inc
mov
pop
mov
inc
cmovbe
push
faddp
push
loope
arpl
mov
sbb
stos
jno
mov
loop
or
stc
cmp
insl
xchg
mov
push
cmp
push
xchg
push
mov
scas
or
or
jb
xor
pusha
sarb
or
fdiv
mov
inc
aas
vpsubsb
pop
sti
adc
stos
adc
popa
daa
sub
pop
xor
test
movsl
shl
mov
push
cmp
int
push
insl
inc
xor
cld
cmp
loop
mov
hlt
xchg
cltd
jno
cmp
sbb
jnp
mov
push
in
loope
pop
xor
fnstcw
mov
lds
dec
sti
adc
mov
add
aad
adc
mov
xor
loope
das
cmpsl
sti
sahf
push
add
mov
repnz
scas
daa
mov
leave
mov
ret
push
popa
jnp
jnp
xchg
jmp
add
adc
adc
testb
xlat
inc
jne
mov
dec
mov
push
mov
dec
xor
xchg
add
lock
sub
test
jb
arpl
inc
cmp
or
not
imul
mov
sbb
mov
add
mov
fildll
push
dec
pop
ljmp
add
stc
hlt
aad
jo
aam
lret
fldlg2
jmp
scas
cmp
stc
cltd
and
nop
add
in
and
clc
sbb
dec
xchg
pop
mov
lcall
adc
mov
popf
pop
aad
lcall
test
jno
push
jo
pushf
lods
into
fldl
mov
jg
outsl
jle
mov
jne
add
sti
icebp
mov
int3
aam
add
inc
push
loopne
in
sub
push
xor
and
add
sub
xchg
in
sarl
add
leave
ds
inc
pop
es
inc
pop
outsl
loop
xor
pop
sbb
movsl
pop
pop
push
mov
push
and
aam
sbb
out
nop
push
cmp
lea
flds
jg
and
xchg
inc
and
cwtl
adcb
mov
addl
andb
je
cld
repz
inc
cmpl
mov
and
cmp
das
dec
mov
cmp
sub
movsb
lcall
sbb
jno
test
iret
inc
insl
mov
sbb
lret
mov
sub
push
mov
aad
arpl
je
aad
insb
inc
xchg
cwtl
pushf
add
daa
cmp
pushl
movsl
jb
das
mov
stc
pusha
orl
gs
mov
mov
sub
in
insl
rcrl
cmpb
leave
int
jp
mov
sbb
into
test
inc
call
push
cmp
fbstp
sbb
mov
inc
and
mov
inc
jle
mov
push
and
lods
test
popf
sub
inc
and
adc
lock
test
jae
imul
adc
fsub
xchg
inc
pushf
or
adc
xchg
nop
idiv
insb
xor
fdivr
aas
hlt
dec
enter
pop
shld
xor
push
lods
nop
jp
or
clc
insl
jle
daa
ljmp
push
mov
xor
in
cmp
aaa
ret
xchg
inc
jmp
movsl
adc
dec
lods
and
pop
aaa
call
sbb
shll
rolb
andb
inc
cmp
shlb
or
imul
das
pop
and
sbb
push
xor
jo
xor
sub
sub
in
loopne
pop
xchg
int
pop
push
mov
icebp
lds
push
imul
jne
addr16
mov
fwait
xchg
fiadds
xor
lret
rcrb
adc
xor
sub
mov
and
jecxz
int
mov
push
popf
xor
or
push
sbb
jne
pop
loope
jge
lea
insl
fstps
aam
add
sti
ret
outsl
out
ja
push
dec
enter
cltd
xor
jo
cmpsb
lahf
test
gs
mov
arpl
movl
lret
mov
pop
mov
aam
outsl
mov
push
sbb
loopne
jae
or
mov
scas
and
inc
dec
stc
ret
and
xchg
push
fsubrs
outsl
lds
add
cltd
aad
aas
rol
and
roll
dec
adc
or
stos
jo
addr16
dec
adcb
and
pusha
loope
fcomps
inc
not
lea
push
dec
mov
in
lods
lcall
lods
or
jle
adc
cs
xchg
ret
ljmp
mov
lcall
dec
pop
in
jno
pop
incl
push
dec
inc
std
xchg
add
xchg
pop
sti
ja
int3
pop
mov
adc
out
frstor
xchg
adc
jl
fidivrs
cmp
cmp
push
and
cmp
pop
stc
lcall
inc
pop
inc
cmpl
pop
test
mov
mov
lret
push
or
dec
mov
mov
push
rcll
cmp
pop
push
mov
xchg
sub
mov
and
xor
dec
dec
test
sahf
fiadds
mov
xor
mov
rcrb
add
jl
mov
add
fcmovnb
test
andb
add
aaa
jp
mov
and
xchg
jmp
faddl
push
push
cmp
xor
mov
jne
das
sbb
movsl
push
adc
fistps
cmp
adc
xchg
in
in
loopne
add
aad
inc
and
cmc
pop
lock
mov
fnstenv
inc
jle
repnz
les
popf
mov
imul
mov
leave
outsb
xor
mov
mov
ss
jno
cli
mov
and
or
sbb
cmp
aad
in
or
test
rol
xor
pop
call
out
xlat
lret
mov
popf
loopne
gs
and
sti
gs
mov
out
icebp
xchg
or
pop
and
pop
jl
adc
bound
lods
sbb
int
cmpsb
jnp
test
movsl
rep
cmp
sbb
inc
cmpsl
sbb
mov
gs
bound
add
xchg
pop
not
sti
ret
xor
shll
mov
test
lret
fs
pop
imul
out
or
shll
inc
mov
and
adc
outsb
jmp
sarb
pop
rcrl
adc
push
push
out
roll
or
gs
inc
ret
xchg
into
sbb
mov
outsb
lock
xchg
aaa
ds
fwait
test
ficoms
jmp
lret
mov
mov
and
fiaddl
cmpsb
pusha
ljmp
sarb
adc
mov
inc
cmp
int
add
jno
xor
insb
xor
inc
or
and
decb
add
xchg
xchg
jns
pop
mov
pop
push
enter
sti
and
mov
xchg
hlt
jbe
mov
mov
test
rorl
enter
rcrb
je
das
or
insl
in
sar
dec
movsb
ljmp
in
outsl
jae
ja
and
enter
repz
test
push
out
xorl
sub
in
sbb
add
sub
leave
xor
pop
rclb
mov
xor
mov
or
xchg
or
sbb
and
fs
jl
inc
or
rorl
gs
cli
adc
sti
jns
cld
into
in
psllq
daa
mov
shlb
fsubrs
fdivrl
xor
mov
lods
jg
aad
enter
add
fistpl
xor
mov
mov
or
sub
daa
pop
pop
mov
cmp
in
getsec
call
cmpsl
lods
lods
clc
pop
ja
fldenv
std
fs
in
pop
popf
out
test
lret
idiv
sti
pop
xchg
cwtl
xchg
inc
jb
movsl
mov
dec
push
mov
xor
ja
outsl
negl
or
xchg
xor
dec
pop
add
mov
sbb
add
adc
mov
and
sub
push
movsl
mull
adc
cmp
insl
dec
sub
push
in
mov
add
cmpsl
xchg
divl
lods
adc
pop
add
mov
or
cmp
add
es
cmpsl
fadds
fucomi
push
lret
pop
stos
pushf
loope
xor
es
stos
adc
mov
push
lret
out
dec
insb
or
adc
insb
in
in
pop
and
int
mov
mov
dec
popf
cmp
or
xor
push
ds
ficoms
pusha
loope
imul
nop
cmpsb
in
std
mov
cwtl
outsb
fistpll
add
pop
lret
jnp
in
or
mov
jnp
cmpsl
pop
shlb
sti
jae
or
and
jb
pop
out
repz
jecxz
pop
inc
scas
xor
out
adc
adc
loopne
cltd
fdivs
aaa
fisttpll
xor
ficomps
adc
mov
stc
jmp
adc
cmp
adc
mov
adcl
js
not
in
cli
push
pop
sbb
pop
outsb
int
push
mov
and
and
inc
inc
and
fcmovu
orb
repz
and
hlt
jp
sahf
mov
movsb
or
xchg
and
mov
pop
lock
stos
imul
adc
imul
js
in
adc
add
push
das
movsb
lock
jp
jnp
xor
mov
loope
adc
lea
and
and
incb
xchg
mov
mov
cwtl
movsb
data16
outsb
cmp
sbbl
out
in
rcl
or
pop
das
inc
gs
enter
lret
std
dec
or
jecxz
loopne
mov
and
lea
fmuls
pop
push
lret
arpl
sbb
add
scas
enter
mov
cmpb
movsl
push
btr
lret
loope
push
ja
mov
popa
xchg
je
fcomi
int
mov
test
push
icebp
insl
xlat
pop
mov
mov
mov
aad
fucomi
stos
push
mov
adc
out
dec
mov
and
push
pop
adc
ljmp
push
ljmp
mov
lods
shlb
fdivl
add
aam
out
scas
jne
adc
mov
add
pop
push
call
lds
cmc
lds
jno
xchg
mov
int
stos
pushf
sti
xchg
shll
pop
shl
dec
mov
sti
pop
std
xchg
lods
imul
or
fwait
cmc
mov
sub
lcall
jb
test
pop
jae
mov
mov
xor
outsb
add
inc
aam
inc
nop
dec
sub
gs
jle
lcall
or
ret
scas
sbbl
out
addb
push
xor
int3
and
or
add
sahf
mov
imul
mov
sbb
vsqrtpd
jno
ja
push
and
pop
xchg
cmc
xchg
xor
inc
dec
pop
pop
test
mov
adc
dec
ret
mov
leave
mov
push
mov
into
lret
xor
sbb
push
enter
push
pop
aad
int
stc
repnz
sub
shl
rorb
xchg
pop
leave
movsb
and
xchg
rclb
dec
xlat
movsl
cmpsb
or
scas
or
mov
jns
add
pop
arpl
dec
mov
mov
out
popf
push
push
scas
ret
pop
push
inc
leave
dec
inc
aas
inc
out
test
aas
clc
and
xchg
es
sbb
in
aam
or
xor
sahf
mov
add
movsb
pop
or
jno
aaa
sahf
test
xor
into
dec
mov
dec
pop
repz
sti
adc
push
jle
or
dec
mov
push
push
mov
mov
clc
les
adc
addr16
testl
mov
pop
insb
xchg
xchg
pop
nop
ljmp
mov
and
push
sub
cmp
cli
icebp
ja
xor
mov
lahf
dec
scas
jp
jb
jae
insb
sub
inc
mov
arpl
sarl
std
stos
mov
xchg
hlt
sub
rorb
ljmp
pop
rclb
jae
out
push
movb
das
or
mov
mov
cmc
arpl
jle
xor
aas
mov
mov
or
scas
sahf
pushf
mov
sbb
cmpsl
push
cltd
add
inc
call
fs
mov
je
adc
ljmp
leave
jo
rcrb
pop
dec
or
test
xlat
loopne
xchg
mov
pop
int3
aam
jge
sahf
call
inc
lock
aaa
lcall
bound
adc
inc
jle
inc
mov
mov
movsl
cwtl
adc
mov
rol
dec
lret
dec
outsl
cld
loop
outsl
mov
jmp
rcrl
fidivl
push
rcll
and
jge
lret
imul
jo
mov
jae
fimull
loopne
mov
pop
into
in
popl
mov
cmpsb
mov
in
flds
mov
int3
std
push
movsl
and
xchg
gs
xchg
adc
movsl
repnz
adc
gs
mov
and
aas
fs
push
push
adc
add
aas
fldl
push
es
jno
inc
push
xchg
mov
call
inc
in
ret
push
pop
sub
xor
mov
push
push
push
repz
shrb
jg
push
rcll
in
insb
stc
in
aam
pop
fidivl
mov
mov
stos
xchg
pop
ss
movsb
aam
ljmp
push
mov
shl
sbb
test
dec
fisttpll
fnstsw
adc
sti
cmovge
sub
pop
in
mov
jne
pushf
testl
push
cmpb
int3
mov
divl
mov
stc
inc
push
rolb
xchg
and
or
pop
mov
sub
push
and
stos
sub
js
cmpsb
fstpt
add
xchg
daa
shll
movsl
xor
fcomi
sub
jne
xor
test
pop
sub
or
mov
xor
pop
cmp
xchg
les
jecxz
ds
cmpsb
cmp
jb
xchg
cmp
push
subl
jno
std
test
mov
stos
adc
add
cmp
int3
pop
xor
in
andb
in
inc
dec
sbb
xchg
mov
jne
pop
cmp
mov
cmpsb
mov
xchg
mov
imul
ljmp
cli
and
fchs
adc
ret
xor
xchg
jl
fwait
out
xorb
push
jmp
insb
stos
pop
ret
pop
jmp
in
pop
int3
pop
cmpl
in
out
xchg
push
movsl
arpl
cmp
jbe
in
stos
push
subl
add
jmp
jp
dec
in
dec
shll
xor
mov
jb
addr16
testb
movsl
jnp
insl
or
fldl
mov
sti
mov
sub
test
lods
fstp
mov
sub
cmp
das
test
loopne
popf
and
rcrl
inc
cmc
push
dec
or
loop
sbb
rolb
push
mov
sbb
popa
les
ds
je
jnp
xchg
push
lods
mov
fisubs
mov
push
and
jns
mov
test
mov
fmull
imul
leavew
mov
loop
pop
cltd
sbb
hlt
xlat
or
scas
lret
ja
dec
popa
mov
and
cli
testl
sbb
test
es
int3
sub
js
inc
in
ret
rolb
adc
cmp
les
push
pop
add
addr16
das
js
in
cmpsl
mov
idivl
pop
enter
insb
jb
and
or
pop
sbb
negb
push
jbe
cmp
pusha
jae
xor
cmp
and
sbb
nop
mov
cmpsl
pop
mov
shlb
aad
or
or
int
push
aaa
xlat
aas
xchg
and
pop
dec
mov
test
jmp
jp
add
jns
pushf
aad
adc
sbb
pushl
inc
stos
mov
fsubl
lret
cmp
xchg
add
js
mov
rorl
sub
fs
pop
or
aaa
ret
mov
mov
stos
mov
push
xchg
movb
push
add
mov
jmp
or
xchg
in
jmp
sub
mov
cmp
push
in
adc
repnz
add
imul
ret
xchg
outsl
inc
test
orl
and
sbbb
in
xchg
sub
cli
push
inc
pop
sub
and
stc
out
mov
sub
sarl
aaa
gs
sub
add
jmp
repnz
iret
aas
test
or
test
add
rclb
in
mov
sub
push
push
mov
in
sub
mov
mov
lds
jmp
inc
loope
leave
push
cmpl
push
rclb
scas
addr16
add
mov
stos
cmp
inc
xor
pop
pop
sub
jg
mov
std
cmp
aaa
jge
les
push
pop
adc
imulb
sbb
sahf
push
sub
das
negl
call
inc
cmp
mov
or
fwait
add
pusha
pop
movsl
lret
lret
cld
mov
and
and
fisubrl
ffreep
or
or
in
and
xchg
fidivrl
stc
push
lea
rcrb
dec
fwait
outsb
dec
sbb
mov
adcl
cltd
outsb
fstpl
sub
or
insb
iret
es
adc
inc
dec
out
addr16
adc
mov
fwait
les
xchg
inc
cmp
mov
mov
incb
push
mov
add
push
push
aaa
mov
insb
sub
mov
icebp
pop
dec
mov
jbe
les
fiaddl
sub
js
sti
mov
inc
ljmp
test
jnp
aaa
mov
push
jge
xchg
and
ret
test
bound
out
adc
fists
lcall
pop
pop
sub
cmp
push
lret
mov
xchg
push
aas
lock
std
mov
sub
cld
test
inc
sub
adc
push
mov
adc
xchg
scas
iret
or
inc
push
lds
mov
inc
add
in
mov
push
stos
jmp
dec
aas
das
movsl
jp
xor
fwait
pop
lret
iret
ret
imul
aaa
push
sbb
adc
or
repnz
pop
movsb
movb
test
mov
add
lahf
in
and
xor
xchg
xor
movsl
inc
and
mov
lret
inc
mov
push
push
mov
mov
fwait
lock
mov
test
jb
aaa
jb
dec
and
xchg
sbb
xor
pop
dec
push
lock
pushf
sub
repz
jecxz
aad
mov
lds
ds
mov
xorl
aaa
dec
add
insb
inc
pop
mov
int
lcall
rclb
and
fcomps
sub
pop
jb
sbb
repnz
xor
sbb
push
movsb
dec
push
add
incb
xor
pop
popa
fs
mov
jb
stos
js
inc
cmp
push
pop
imul
adc
pop
fisubl
popf
mov
dec
rclb
inc
xchg
cmp
repnz
popa
mov
notb
inc
fnstcw
xor
aad
clc
inc
nop
lea
sub
lea
pop
sub
sbb
lcall
mov
outsl
fstps
std
nop
in
mov
fstl
cwtl
pushf
pop
dec
movsl
jns
stos
cld
aas
adc
ror
lock
xchg
daa
add
mov
int3
pop
sbb
ss
loope
and
in
cld
mov
js
pusha
movsb
add
or
and
push
pop
ds
xchg
xchg
arpl
or
nop
aad
sub
xchg
or
cmpsl
xchg
sbb
mov
mov
dec
test
scas
xorb
cmp
xchg
pmovmskb
loopne
sub
gs
xor
aaa
dec
add
into
shrb
push
inc
mov
jecxz
stos
sbb
je
xor
loopne
sahf
je
jle
ja
mov
cld
je
je
push
jb
mov
les
or
sbb
mov
jle
insl
cmp
arpl
xchg
cwtl
ret
or
cltd
dec
lcall
and
outsl
push
test
and
out
or
test
cmp
or
push
xor
ss
pop
or
leave
icebp
cmp
ja
push
dec
pop
out
loope
or
mov
or
lcall
inc
movsb
fmull
mov
mov
and
loope
jp
aam
push
aas
pop
ficompl
and
stc
mov
mov
flds
sub
jne
push
comiss
divl
loopne
call
mov
cmp
push
adc
mov
popa
jb
dec
out
jl
xor
jl
mov
cmp
stos
adc
or
out
out
jmp
push
push
data16
mov
popw
out
outsb
stos
mov
inc
dec
lods
jo
std
mov
cli
cli
cmp
fistpl
add
rcll
adc
pop
cmc
out
orb
and
adc
rorl
and
pop
jae
mov
in
arpl
xchg
repz
sub
lcall
fnstcw
movb
scas
std
pop
push
shrb
sub
negb
loope
loope
test
ds
adc
in
das
cmp
sub
sub
mov
dec
sub
test
sub
jmp
or
pop
push
push
jle
mov
dec
stc
push
push
cmp
jmp
popa
jo
movsb
jnp,pn
cmp
fldcw
loope
pop
cmovg
cli
push
cs
dec
icebp
push
inc
shl
shll
mov
call
adc
and
or
fs
sbb
sbb
scas
adc
xchg
lret
ds
loope
mov
push
adc
cmp
data16
xor
push
adc
or
adc
adc
and
mov
fidivrl
jae
out
movb
repnz
shll
push
dec
hlt
mov
fscale
xchg
cld
sub
aad
outsl
pushl
movsl
cs
sbb
test
js
pop
inc
cli
mov
call
mov
ljmp
jo
mov
loopne
sbb
test
cmp
jmp
lcall
push
pop
xchg
pop
lock
into
xchg
jmp
jge
cltd
cld
mov
cwtl
push
xchg
fiaddl
xor
cmp
xor
cltd
jl
and
in
inc
xchg
xlat
out
adc
pop
nop
cld
pop
sub
testw
movb
je
lcall
cmpsb
xor
shll
xchg
sbb
inc
cmp
push
jecxz
dec
das
xor
xchg
cmp
out
decb
cmpsb
test
dec
cmp
mov
aaa
in
std
icebp
jecxz
adc
sbb
popa
outsl
dec
xchg
jbe
mov
ror
sbb
mov
push
lahf
movsl
fld
adc
adc
sbb
test
jno
pop
stos
icebp
cltd
inc
mov
or
cmp
push
repnz
dec
jo
jecxz
or
and
jno
ret
jmp
loope
in
in
das
pop
mov
shll
or
aad
test
push
pop
nop
arpl
data16
or
pop
out
mov
adc
and
cltd
add
sub
call
shll
jnp
out
mov
das
inc
ja
mov
sbb
call
mov
je,pt
push
sahf
push
popf
aaa
sbb
mov
xchg
test
mov
in
xlat
arpl
dec
lds
dec
in
push
xchg
mov
sbb
mov
and
sub
push
xor
popf
std
inc
test
inc
or
pop
dec
mov
or
repz
or
xchg
fisttpl
xor
or
dec
hlt
push
sbb
enter
out
xchg
inc
mov
jb
xchg
mov
and
aam
in
push
fsubrl
mov
mov
sub
daa
or
ret
pop
lret
adc
and
fldenv
sub
adc
push
inc
mov
mov
mov
adc
in
aad
aaa
and
iret
sub
sub
and
lret
neg
rcr
mov
ljmp
fdivp
rorb
sbb
shll
pushf
and
inc
cmpsl
add
xchg
mov
repz
add
ss
pop
dec
je
shll
jb
adc
inc
dec
push
loop
arpl
jecxz
iret
popa
mov
sbb
mov
cwtl
adc
rcrl
mov
jecxz
mov
outsl
je
jecxz
xchg
xchg
pushf
repnz
mov
mov
pop
mov
add
fmuls
xchg
fwait
ds
push
jae
enter
lea
pop
xlat
and
aaa
and
shlb
repnz
sahf
push
out
sub
pop
imul
dec
out
pop
iret
sbb
cmp
scas
ja
mov
add
mov
inc
pop
and
push
cmp
or
ret
jo
nop
pop
cmp
push
leave
addb
cs
sub
xchg
sbb
push
pop
add
dec
or
xlat
into
leave
shrl
inc
stos
pop
stc
and
int
mov
lret
lss
gs
xor
dec
adc
std
cmpsb
std
shr
cmp
inc
pop
or
and
mov
gs
cmpsb
mov
sbb
jl
enter
cltd
jb
pop
jl,pt
jecxz
ljmp
in
jnp
test
mov
jge
inc
cmp
sbb
test
hlt
xor
rclb
iret
fwait
leave
aam
and
cwtl
push
or
mov
mov
inc
jo
cmp
mov
lods
imul
fistpl
int
repnz
jp
push
jle
hlt
pusha
jae
mov
insl
sbbl
insl
xchg
testl
outsl
pop
xor
mov
sbb
adc
les
in
rolb
mov
and
jge
and
scas
sti
ljmp
scas
dec
scas
push
and
jb
and
repnz
and
iret
hlt
cmpsl
lods
ss
jle
mov
mov
lea
dec
mov
mov
lcall
mov
test
push
xchg
das
jns
adc
xchg
repz
or
or
sub
insl
test
loopne
lahf
gs
xor
stos
and
das
and
popa
cmp
xlat
xor
cltd
adc
pop
sahf
cmp
add
je
sbb
xchg
cwtl
fisubrl
xchg
lcall
sbb
sar
jmp
adc
push
lock
xchg
xchg
fs
les
dec
lock
mov
xchg
dec
enter
ja
xorl
ss
mov
lods
xchg
stos
mov
inc
add
ficomps
dec
jo
pop
cli
sahf
notl
xchg
inc
lods
pop
push
sbb
sub
shl
inc
push
pop
lret
pop
push
and
fldcw
xor
push
and
mov
add
or
push
addr16
in
xor
inc
jg
imul
inc
pop
push
aaa
cmpsb
test
pop
clc
push
cld
idivl
sub
xchg
push
pop
mov
insl
xchg
test
pop
jae
out
pop
icebp
gs
int3
lods
hlt
lods
and
pop
adcl
nop
xchg
jno
std
ret
lahf
sub
loopne
mov
sub
cmp
dec
call
cmp
cli
rcrb
fcmovnu
mov
popf
mov
xchg
inc
outsl
fmuls
adcb
test
push
inc
sbb
push
bound
pusha
mov
aaa
rcr
jg
push
out
adc
ret
cmp
vpmaxsw
enter
cmc
inc
or
fimull
jmp
into
into
fscale
fdivrs
push
ss
or
pop
xorl
fsubl
arpl
lret
in
cmp
fs
les
daa
loopne
sbb
xor
fdivrl
add
test
mov
test
adc
jo
fisubrl
pusha
ss
dec
add
ss
cmp
out
jge
adc
in
pop
std
rorl
cwtl
push
je
leave
jl
pop
xor
jecxz
out
and
xchg
push
dec
fdivrl
push
mov
icebp
adc
mov
addl
sub
xchg
test
aaa
pop
adcl
mov
jno
sub
xor
push
into
loope
pusha
cmovg
push
das
int3
fnstsw
pop
repnz
pop
scas
push
loope
fwait
fwait
iret
test
jno
pusha
jmp
mov
xlat
jnp
push
sub
mov
lock
add
daa
rorb
xchg
sub
lcall
or
jne
sti
add
scas
push
mov
and
mov
push
pop
lods
sbb
pop
mov
popf
sbb
cmp
push
mov
pusha
jno
loop
push
xor
xchg
sbb
jb
xchg
aaa
or
enter
int
stos
sub
jmp
jae
mov
fs
mov
pop
mov
call
daa
jae
jg
das
cltd
adc
test
scas
cmp
dec
test
bnd
add
cld
jnp
adc
hlt
aaa
rolb
jno
sub
inc
fistpll
sub
cmp
es
sub
adc
shlb
or
cmp
out
jl
sub
incb
call
jmp
jecxz
cmc
rep
pop
jmp
add
sbbl
jne
adc
mov
xchg
jo
adc
mov
sub
dec
mov
dec
and
xor
inc
jp
icebp
sub
adc
pusha
insb
stos
int
jp
cmpsl
repnz
test
mov
les
adc
fldenv
loopne
test
mov
sbb
dec
jns
inc
pop
adc
push
stc
aas
xor
xchg
out
push
dec
dec
xlat
xor
test
jge
push
daa
aad
or
push
mov
in
test
lcall
dec
movsb
jmp
xlat
cmp
sti
jne
addr16
lcall
cmc
loope
dec
test
fsubs
fisubl
and
sbb
jl
repz
sbb
add
es
lret
ds
mov
jp,pt
or
mov
mov
sbb
pushf
pop
pop
pusha
test
cmp
push
mov
pop
push
jmp
jns
ret
push
out
jno
sbb
jnp
aam
mov
xchg
and
int3
mov
rorb
dec
rcr
push
or
xor
jmp
cmpsb
or
sbb
out
int
mov
sbb
lret
adc
pushf
add
gs
or
pop
push
fisubrs
mov
pop
in
loope
shrl
enter
rcrl
roll
sbb
cmpsb
add
adc
sbb
or
rcrl
int3
cmpb
dec
bound
lcall
test
aad
pushf
push
lock
out
outsb
call
int3
mov
cli
adc
adc
into
iret
sub
add
lods
push
dec
aas
dec
repnz
shlb
sub
mov
sub
sbb
mov
fidivl
movl
and
adc
or
or
cld
sub
push
ret
push
les
mov
push
push
jbe
cs
mov
cmpsl
push
jmp
sti
mov
sub
cmp
dec
push
jge
fnstsw
cwtl
dec
shlb
and
cli
ljmp
mov
addr16
jne
mov
or
out
jo
roll
mov
sahf
jbe
and
inc
clc
cmc
cmpsl
std
adc
hlt
adc
dec
inc
rcrb
xchg
push
pop
xchg
inc
stos
xchg
mov
lret
ret
mov
in
push
mov
outsb
pop
je
push
and
and
hlt
shrl
adc
or
jns
insb
inc
push
push
sbb
lods
or
fistpll
decl
enter
or
mov
xor
inc
es
sub
fistl
pushf
dec
mov
sbb
xchg
out
pop
imul
push
sub
mov
adc
roll
aam
dec
addr16
or
pop
cltd
cwtl
rorb
daa
push
imulb
push
outsl
mov
fistps
subl
or
lahf
or
in
xchg
or
nop
call
testb
mov
mov
inc
cld
pop
push
in
xchg
pop
cmp
es
ds
sbb
xor
andb
test
gs
pop
lods
sahf
faddl
dec
or
call
add
adc
cmpsl
jg
cmc
je
popa
dec
jle
nop
jecxz
pop
imul
int3
and
adc
sub
loopne
leave
adc
and
cs
idiv
in
stos
pop
adc
xor
push
insl
int
inc
aad
das
push
and
mov
cmp
test
std
out
es
cmp
xorl
mov
xchg
gs
mov
cmp
icebp
ss
cmp
push
repnz
pop
pop
or
mov
push
jmp
push
xor
ficoms
pop
mov
xor
dec
dec
jl
inc
dec
dec
jns
out
xor
xchg
push
sbb
mov
scas
cmpsb
sbb
fcmovne
cmp
nop
leave
in
pop
stos
pop
push
das
filds
arpl
and
xor
jns
adc
or
mov
add
mov
clc
xlat
sbb
sbb
es
fs
cld
fcomps
lahf
aaa
leave
pop
dec
mov
lock
rolb
pop
lret
add
jl
dec
dec
stos
outsl
sub
in
jl
ja
movsl
data16
int
cmp
iret
dec
repz
or
inc
adc
jno
shl
jnp
cli
int3
xor
lods
adc
pop
lahf
fdivl
push
int3
jo
ror
js
into
stos
xor
idivb
sub
dec
jmp
inc
ds
mov
cld
jmp
jo
sub
aam
add
pusha
or
scas
mov
cld
add
lahf
outsl
pop
fdiv
lods
mov
dec
cltd
mov
and
jecxz
push
test
popa
inc
das
cmp
pop
out
xor
sbb
ret
or
lods
push
and
mov
xchg
jo
push
and
and
mov
test
and
xor
pop
lcall
cmp
rorl
decb
movsb
xor
sbb
jge
jns
fcomp
outsl
xchg
lcall
sahf
scas
fldt
in
inc
imul
fnstenv
inc
popf
inc
leave
fstpl
or
and
mov
lcall
das
inc
push
mov
ret
cmp
jp
xor
cmp
adc
adc
mov
leave
imul
add
push
adc
aas
insl
push
mov
pop
jne
xchg
gs
in
xor
sub
jb
and
andb
sub
lods
aam
pop
stos
repnz
inc
into
fsub
adc
lds
pop
inc
pop
iret
movsb
inc
adc
add
adc
cltd
stos
and
mov
mov
psrlq
pop
out
out
lret
imul
mov
mov
mov
mov
ss
or
fdivp
repz
addr16
scas
not
push
jnp
xchg
jmp
jle
fmulp
cmp
inc
movsl
sbb
jl
lcall
cmp
xchg
xchg
or
ds
mov
jns
cmp
inc
pushf
into
mov
push
ds
shr
iret
std
mov
dec
movsb
xchg
inc
cld
or
fidivs
stc
jae
mov
std
or
dec
ret
push
inc
cmp
popa
arpl
scas
shlb
lock
negl
inc
pop
cvtdq2ps
mov
int
outsl
mov
xchg
insb
adc
mov
ret
jne
in
dec
cmp
xchg
adc
ja
out
xor
imul
loope
and
sub
cmp
cmp
sub
or
shlb
cli
nop
sub
dec
sub
pop
add
or
pop
dec
push
fwait
out
dec
mov
cltd
xchg
pop
imul
js
lea
push
sbb
jecxz
int
jge
mov
es
xorb
push
and
andw
loopne
add
cmc
jnp
push
sbb
push
in
jmp
jbe
adc
dec
mov
shl
pop
js
inc
push
adc
jno
insl
xchg
pop
cmpl
mov
lret
dec
mov
inc
adc
push
imul
je
mov
movsl
jne
loope
sbb
ja
sbb
in
outsl
inc
xchg
lea
dec
xchg
mov
mov
push
xchg
mov
js
adc
xor
popa
negb
mov
or
push
sub
int
addl
push
call
stos
mov
shlb
addb
xor
daa
inc
adc
ret
xor
pushf
mov
jno
fiaddl
cwtl
ja
daa
aad
pop
mov
adc
les
push
call
push
insb
add
xchg
push
or
lcall
lret
aaa
add
faddl
sub
push
in
insb
out
dec
icebp
insl
setne
test
jo
jle
mov
jne
adc
sub
jmp
out
or
fildl
jmp
stos
mov
inc
add
push
cli
cld
inc
push
insl
dec
mov
cmp
inc
test
imul
outsb
sbb
sahf
cmc
hlt
test
or
ror
aaa
push
jnp
push
jg
loop
mov
add
mov
pop
aad
cmp
fwait
pop
xchg
xor
cmp
inc
aad
xchg
insb
pop
flds
ja
test
xor
or
out
pop
test
movb
adc
sub
or
sbb
add
jno
ror
fistpl
sbb
cmp
movsl
push
push
lea
xor
rcr
xchg
mov
in
call
push
cmp
or
ret
popa
xor
or
inc
and
outsl
pop
fcomps
addb
daa
and
cmp
lret
dec
in
dec
push
inc
adc
and
mov
loop
mov
dec
aad
leave
out
or
cs
cmp
fwait
xchg
mov
clc
xchg
out
sbb
mov
and
pop
test
das
fcomip
sub
xchg
or
es
loopne
clc
lcall
loopne
sbb
or
fldt
and
cltd
and
jnp
hlt
mov
stos
loopne
sub
sbb
mov
adc
out
and
outsb
sarl
aad
addr16
ss
jmp
pop
fucomip
adc
xchg
and
jne
mov
ficoml
popa
movb
incl
cmp
cmpsb
or
xor
fwait
dec
std
cli
jle
jne
and
lret
push
xchg
dec
sbb
xlat
int
and
cmp
das
sbb
les
xchg
lods
stos
jp
add
mov
outsb
jl
push
call
sub
push
or
jle
xchg
rclb
sahf
or
inc
dec
and
frstor
pcmpeqd
lea
sbb
roll
lcall
pop
fcom
fsubrl
mov
js
rorb
movsb
push
cmpsl
in
jmp
leave
cmpl
cwtl
dec
inc
pusha
cmpsb
fstl
jno
mov
jo
mov
incl
push
and
add
sbb
sub
mov
and
mov
rcr
mov
outsl
cmpsl
mov
repnz
mov
fisttps
dec
pop
pop
xchg
mov
pop
jmp
jnp
pop
cmpsb
test
cmp
outsb
mov
testb
fdivs
js
sbb
hlt
outsl
hlt
fnstsw
sub
inc
int
sub
sbb
inc
rcll
xor
jecxz
shrb
jmp
push
rorl
mov
xor
inc
sbb
mov
and
and
imul
mov
ret
add
push
jno
out
mov
ret
int3
push
dec
shll
rcrl
fwait
mov
in
fidivrs
cmc
add
sarl
inc
sbb
jg
imul
xchg
dec
jb
or
inc
inc
pop
dec
and
fdivr
push
and
xchg
sub
shll
add
jns
and
xlat
mov
xorb
xor
pushf
stc
or
push
sub
inc
xor
jg
lods
roll
cmpsl
ja
sub
pop
pop
cmp
or
xor
push
sub
mov
mov
jae
inc
mov
icebp
in
dec
ret
push
add
cli
call
stos
jl
mov
sub
sub
movsb
iret
sahf
push
bound
andl
call
movsl
xchg
pop
lea
mov
inc
dec
call
cmc
mov
insb
daa
out
subl
loope
mul
test
dec
push
push
adc
mov
lds
sub
in
ficompl
mov
cmp
xor
sub
imul
test
movsl
push
mov
pop
fsubrs
jb
insb
sub
push
stc
cli
jge
mov
push
hlt
pop
test
jge
mov
aaa
out
jl
je
ljmp
lods
test
jbe
insb
pop
and
dec
test
push
or
xor
es
aas
mov
mov
inc
inc
test
cmp
cmp
aaa
das
push
imul
aaa
popa
xchg
lods
cmpsl
push
int3
in
jl
mov
add
xchg
sub
cmp
push
and
jae
mov
in
pop
mov
aaa
mov
and
les
dec
and
pop
das
rcl
jmp
cld
pop
mov
mov
pop
xchg
xchg
in
inc
nop
aad
add
shr
popf
les
xchg
xor
out
mov
jbe
cld
roll
xor
mov
les
pushf
outsb
push
push
das
js
pop
mov
cmp
or
cmp
cld
and
ljmp
pop
in
bound
repnz
jg
rcll
test
sub
inc
adc
int3
popa
mov
shll
sbb
push
imul
jnp
ja
ret
cmpsb
dec
xor
ljmp
lret
jns
push
dec
pushf
rcll
ja
pushf
popf
inc
or
pusha
push
rcrl
lret
arpl
test
and
jnp
inc
sbb
xor
cmp
or
jle
pusha
push
rcl
xchg
adc
xchg
nop
and
mov
pop
xor
mov
lea
ja
pop
jp
mulb
jge
or
daa
and
mov
fwait
mov
inc
push
imul
fs
repz
adc
rdmsr
adc
mov
jb
jp
ret
sarl
sbb
mov
mov
sbb
es
pop
mov
out
scas
pushf
stos
ss
cmp
or
gs
push
fnsave
shll
cld
pop
hlt
jmp
xchg
cmp
cmp
cmp
mov
sub
pop
cmpsl
xchg
popf
mov
outsl
fdivrl
push
mov
push
das
rorb
rcrb
out
push
jmp
leave
dec
icebp
lods
xlat
xlat
adc
xchg
mov
int
cmp
cmp
in
add
pop
mov
fadds
xor
and
xlat
call
mov
test
sti
mov
mov
sub
push
aad
mov
in
cltd
pop
js
sub
scas
pop
jg
mov
or
lds
cmp
into
cmp
inc
sar
dec
xor
xchg
pushf
loop
push
aam
xchg
cmp
xor
mov
jle
or
and
ret
lcall
cmp
or
push
dec
push
cmpsb
lds
scas
int
and
xchg
inc
mov
sbb
cmp
cltd
nop
and
or
dec
mov
dec
das
ss
shlb
repz
xor
inc
mov
xlat
ss
inc
and
in
fcmovb
jb
and
rclb
mov
lret
mov
inc
outsl
adc
cmp
sbb
xor
add
jnp
xor
aas
rcll
jle
adc
xor
jbe
sbbl
cld
ss
xchg
and
mov
ds
push
icebp
aaa
xor
pop
and
js
call
ds
jecxz
jmp
cli
mov
and
mov
pop
xchg
or
mov
xlat
loop
pusha
xchg
dec
ds
hlt
xor
icebp
fbld
add
jp
and
mov
or
xchg
shrl
lock
inc
jg
jo
outsl
sarl
xor
fsubrs
sub
dec
or
lods
push
lahf
cmp
push
sbb
lock
dec
xor
icebp
cmp
jecxz
mov
rclb
aas
mov
mov
dec
dec
xchg
out
adcb
add
sub
pop
xor
icebp
mov
ja
pop
fwait
idivl
mov
xchg
fistl
xorb
inc
mov
pop
dec
sub
inc
mov
ja
pop
push
loope
es
das
pop
lea
fdivl
outsl
sub
jecxz
pop
jae
call
scas
cmpsb
sub
inc
sub
cltd
out
mov
add
push
mov
mov
mov
outsl
movsb
fisubs
imul
jl
dec
dec
sbb
js
loope
mov
dec
xchg
test
xchg
mov
fmuls
ret
mov
mov
jge
out
pop
int
xchg
mov
cld
std
std
jae
insb
adc
jp
mov
push
aaa
je
dec
movsl
xor
outsb
cmc
scas
arpl
and
lea
aam
xor
lahf
cmp
outsl
out
xchg
daa
push
imulb
jbe
inc
jne
jnp
add
test
dec
mov
stos
pusha
push
adc
dec
fs
mov
mov
sarl
out
aaa
and
mov
dec
or
test
fldt
cmpsb
mov
aaa
dec
mov
or
xchg
ss
sub
rcrb
push
into
mov
das
xchg
aas
jg
gs
xlat
outsl
in
inc
shrl
add
insb
cli
lds
inc
inc
divl
mov
mov
in
mov
int
call
lds
dec
and
push
and
fs
fnstenv
cmp
adc
cltd
xchg
pop
callw
push
sub
arpl
dec
andb
out
and
popf
mov
pop
add
lods
cmp
jo
mov
ss
cmc
jecxz
inc
dec
mov
mov
cwtl
aam
shlb
mov
gs
xchg
sub
adc
pop
out
lods
push
mov
movsb
popa
jbe
mov
mov
in
pop
push
popa
fildl
int3
bound
pop
es
push
pop
std
fistpll
jnp
pop
fld
mov
pop
rcrb
leave
add
repz
cmpsl
roll
pop
mov
sub
pop
popa
xlat
xlat
or
cmp
xor
pop
dec
pop
add
mulb
mov
adc
mov
popa
lea
divb
mov
jge
testb
dec
push
sub
daa
dec
xchg
aas
dec
pop
xor
and
add
inc
jae
sahf
andl
add
lret
shll
sbbb
mov
imul
int
icebp
pop
enter
int
ffreep
xor
xchg
push
push
nop
mov
out
xchg
mov
or
jns
xchg
inc
sbb
bound
stos
jle
ja
dec
outsl
addr16
in
ja
push
push
mov
jmp
sbb
jg
lods
push
mov
loopne
pushf
shlb
mov
lock
pop
mov
repz
xor
dec
mov
shl
insl
cmp
push
das
test
sarb
mov
stos
cmp
les
xchg
mov
test
insb
xchg
mov
in
fsincos
mov
movsl
aaa
movb
cmpsb
stc
dec
subl
push
aam
pusha
adc
jecxz
mov
jl
ret
jns
test
mov
call
xchg
pushf
les
shll
repnz
test
inc
add
cmpsb
jb
xlat
jp
iret
jecxz
push
ror
das
mov
jmp
pop
fisubs
lods
dec
movsl
inc
test
adc
lods
pop
popa
mov
lds
adc
mov
sub
push
cld
cltd
add
and
sbb
jp
push
or
mov
add
add
dec
movups
in
lea
nop
fs
pop
jp
int
push
add
add
adc
xlat
and
data16
cli
jb
inc
xchg
lret
mov
inc
pop
cmp
in
and
mov
call
add
clc
cmp
lods
xlat
cwtl
mov
cmc
adc
test
shlb
out
pusha
add
push
jae
and
andl
and
and
sub
imul
adc
insl
xor
sub
xor
rcr
fisubs
cmp
movl
ficomps
cmpsl
into
mov
jle
cwtl
push
dec
mov
sbb
in
mov
arpl
popf
xchg
pop
inc
pop
hlt
or
push
pop
pop
test
cmpsl
shrb
int3
pusha
pushf
sbb
or
cmp
popa
imull
cmc
aam
push
dec
fdivrs
and
push
std
cmc
pop
aad
inc
fstpt
pop
mov
aas
lret
fsubp
clc
subl
cmpl
test
jmp
sbb
cmpsb
sub
xor
jne
call
inc
repnz
outsl
and
or
xor
ds
dec
push
push
loope
add
stos
ja
lods
cmp
pushf
push
push
iret
shl
sbb
dec
push
aad
push
fsubl
push
mov
loop
aam
push
push
push
mov
arpl
aaa
jle
sbbb
and
mov
addr16
or
mov
ret
cli
add
test
test
push
dec
pop
sahf
xlat
scas
insb
shrb
or
and
add
out
rolb
push
fbld
fdiv
iret
add
dec
mov
xchg
push
add
dec
pushf
jns
add
test
outsb
pop
mov
bound
mov
rolb
aad
pop
adc
or
push
xor
pushf
stos
add
popa
movsl
or
je
add
xchg
mov
into
repz
inc
sbb
js
int
dec
notb
mov
test
mov
mov
cld
sbb
mov
dec
test
push
pop
out
fs
ret
es
fwait
jb
dec
icebp
dec
sbb
gs
mov
scas
aas
add
dec
adc
mov
arpl
std
out
sbb
mov
es
insb
pop
cmp
in
icebp
adc
xor
cmp
xchg
add
or
lret
fnstenv
adc
mov
xchg
xor
div
ja
sbb
jmp
mov
and
aam
sbb
and
lods
inc
repz
cs
jno
cmpsl
sub
in
inc
pushf
add
ss
sarl
out
push
push
or
fwait
repz
mov
xchg
inc
mov
or
pop
xchg
dec
ret
outsb
mov
xor
or
out
decl
or
add
cmpl
int3
sub
mov
mov
push
push
mov
mov
xchg
mov
iret
mov
xor
scas
jns
xlat
mov
dec
jle
xchg
roll
and
nop
jo
out
add
jb
hlt
ss
movsb
or
stc
jb
aam
mov
push
lret
jo
dec
add
cmp
dec
jge
shll
shll
dec
xchg
dec
rcr
loope
in
ret
repz
shr
adc
stos
aam
sbb
or
orb
jmp
in
iret
adc
aaa
pusha
add
cmc
jg
push
sarl
add
divb
lock
fistpll
jb
cmp
mov
xor
mov
dec
or
mov
test
cmp
inc
mov
pop
sti
shl
fwait
mov
fnstcw
add
ror
inc
cmp
pop
das
sbb
cltd
icebp
inc
hlt
add
loop
cmpsl
dec
mov
push
mov
pop
and
and
push
jno
ret
or
push
xorb
pop
fsts
xchg
push
out
sarb
mov
xor
decl
sub
aad
test
sbb
stc
cmp
ficoms
imul
cmpsl
aad
pop
or
stos
xor
lea
dec
mov
pop
pusha
arpl
xchg
adc
decl
xchg
push
ja
test
cmpsl
or
rorb
sbb
faddl
and
mov
stos
xchg
mov
hlt
rol
pop
inc
push
dec
or
adc
leave
push
in
fs
mov
ss
or
inc
pop
cmp
add
push
cwtl
and
jno
lcall
inc
jbe
int3
mov
sbb
jecxz
or
push
xor
test
dec
outsl
xlat
and
and
add
lock
adc
test
xor
mov
pop
mov
cmp
outsb
pop
and
pusha
imul
aam
xchg
dec
leave
mov
pop
imul
xlat
or
push
lret
std
or
fstps
daa
or
fisubrl
rorb
sbb
bound
add
push
rolb
mov
push
jbe
sti
fs
int3
xchg
sub
adc
jbe,pt
pop
sbb
int3
mov
xchg
push
sub
add
fdivrl
iret
jge
lock
sub
mov
or
out
stos
into
dec
fs
xor
push
in
mov
movsb
jno
mov
xchg
dec
push
addb
xchg
and
lods
push
dec
lds
push
roll
hlt
pop
int
iret
jecxz
ficompl
ss
mov
inc
mov
mov
das
jns
mov
shll
nop
andl
inc
jmp
jle
jge
xor
jge
push
mov
jp
jo
lods
mov
xor
sarl
icebp
fistpl
jg
inc
dec
and
xchg
lahf
dec
dec
loop
add
mov
mov
addl
movsb
adc
cld
arpl
hlt
arpl
leave
bound
sbb
lds
lahf
xchg
sbb
test
int
out
cmpsb
outsl
push
xchg
pushf
arpl
aas
leave
pop
inc
fisttpll
arpl
xchg
arpl
push
push
mov
pop
xor
fists
sbb
push
pop
xor
stc
push
jp
inc
or
cli
pop
pop
sub
bnd
cmp
mov
or
movsb
fcoms
inc
push
jae
pop
inc
dec
push
jp
cmp
mulb
mov
cltd
hlt
mov
pop
loop,pn
sti
adc
jno
out
adc
add
sbb
mov
add
test
mul
lret
fisttps
pop
cli
jo
inc
cltd
or
inc
jno
insl
fistpll
mov
fdivl
mov
sub
push
scas
adc
mov
clc
add
adc
mov
sbb
xchg
repnz
out
add
inc
ret
stc
je
pop
mov
xchg
dec
outsb
push
xor
mov
into
and
push
fstl
adc
pop
in
ja
sbb
lods
dec
pop
xor
push
out
test
pop
mov
mov
jno
sahf
stos
insl
inc
loopne
mov
inc
ja
scas
pop
mov
shl
std
jecxz
out
std
push
mov
and
push
push
das
lahf
jbe
addr16
lcall
push
pop
enter
cmp
inc
cld
call
mov
xor
pop
lret
mov
jmp
sbb
test
loope
out
movsb
cli
xor
mov
popa
pop
arpl
xchg
cmp
dec
loop
fs
int3
mov
sahf
jg
and
fidivs
pop
daa
scas
test
mov
fisubrl
cmp
mov
push
out
jmp
cltd
loopne
js
adc
rcrb
sahf
lahf
inc
shrb
dec
imul
lahf
lock
in
inc
insl
or
jg
mov
addr16
inc
push
test
push
inc
andb
xlat
lock
jnp
xlat
pop
jge
mov
cmp
loopne
test
mov
les
pop
push
xor
push
arpl
adc
loop
fidivl
jl
inc
xor
pop
pop
jne
xor
sbbl
imul
sbb
fistpl
pop
imul
in
jle
push
addr16
pushf
pop
and
test
sub
fmull
fwait
mov
add
lcall
pop
mov
adcb
repz
lds
lods
and
out
dec
outsl
jae
cmp
xor
pop
mov
push
push
sahf
popf
fnclex
icebp
out
and
mov
stos
sbb
xor
xor
rorl
jb
fistl
jbe
bound
inc
mov
scas
dec
notb
je
ds
adc
pusha
jbe
add
popf
xchg
es
mov
data16
xor
mov
and
or
pop
fcomps
jp
xorb
mov
adc
mov
negb
cmp
jb
cmpsl
mull
ret
inc
adc
stos
pop
pushf
mov
jae
xor
scas
mov
inc
rclb
imul
jmp
jmp
xor
adc
sub
pusha
xchg
push
scas
mov
cld
mov
int
scas
fistl
mov
mov
jo
test
popa
shll
fcomip
imul
push
lock
stos
lds
jb
lret
xor
pop
imul
enter
je
sub
movsl
popf
jne
mov
sbb
lahf
push
xchg
clc
pop
scas
mov
or
ret
adc
sbb
in
mov
pop
cmp
aas
ljmp
divl
mov
sbb
jle
sti
inc
mov
add
sbb
test
mov
mov
insl
inc
mov
add
les
insb
ret
popa
mov
push
jle
out
dec
add
in
cwtl
push
dec
xor
xchg
insb
pop
rolb
and
cld
pop
pop
es
imul
dec
mov
fstpl
cwtl
aaa
iret
gs
mov
mov
outsl
inc
inc
shl
je,pn
movsl
dec
dec
je
mov
jmp
mov
xlat
imul
enter
lock
insb
xlat
stos
mov
inc
mov
and
jmp
push
lea
or
push
shll
out
iret
xchg
xor
test
push
pop
xchg
data16
fsts
cmp
lock
adc
test
data16
addl
mov
sarb
inc
stos
mov
mov
push
inc
gs
xor
xchg
pop
mov
clc
sbb
push
fwait
pop
or
ret
mov
lea
fnstsw
int
cmp
sarb
mov
sbb
or
popa
jnp
push
cmp
cmpsl
pop
mov
add
pop
stos
scas
push
cwtl
mov
or
pop
mov
mov
ja
dec
pop
mov
enter
mov
or
gs
pop
in
repz
test
jne
outsb
out
les
mov
popf
or
xor
push
jb
cmovb
xchg
dec
pop
ljmp
pop
mov
call
jo
mov
cmp
out
inc
push
mov
out
rcl
shl
mov
daa
mov
js
imulb
add
mov
fwait
lret
fldl
hlt
fwait
mov
loop
scas
clc
scas
push
filds
adc
rol
fmull
mov
repnz
mov
out
push
xor
or
add
lahf
loop
test
and
roll
push
jecxz
dec
jecxz
jmp
push
movsb
mov
ljmp
arpl
dec
jl
dec
or
xor
xor
and
adc
push
insl
jbe
mov
testl
rol
adc
inc
clc
adc
jbe
divl
and
cmp
insl
xchg
test
jbe
fiaddl
imul
sub
cmp
ror
lret
sub
js
outsb
nop
sub
aaa
and
out
stos
std
inc
pusha
jecxz
push
and
addr16
bound
es
sbb
push
ret
inc
sarb
scas
mov
scas
jge
loopne
xchg
mov
mov
jecxz
in
lret
lea
or
sub
sub
out
cwtl
cmc
fst
cli
enter
and
in
aam
push
out
xor
xchg
mov
adc
pop
lahf
lcall
sub
dec
pop
jp
xchg
rolb
adc
out
lret
dec
add
fcompl
jb
nop
cmpl
pop
or
and
cmp
xchg
pop
jle
ret
xchg
cld
sub
hlt
xchg
adc
negb
shrb
xchg
xor
push
jno
mov
loopne
fdivrl
jae
xor
jmp
shrl
testb
xchg
out
cmc
inc
lret
adc
icebp
rcr
in
jo
mov
ljmp
jns
pop
jecxz
inc
in
scas
sbb
adc
daa
loope
cltd
iret
or
ss
jns
repnz
dec
fistpll
xor
fiaddl
push
cld
lock
adc
scas
loopne
nop
rorb
out
aaa
sbb
dec
mov
jb
std
sub
insb
das
jmp
cwtl
pop
cld
jne
cmpsb
in
jo
stos
stos
mov
jge
ret
inc
jae
add
ret
ja
or
add
pop
mov
xchg
jl
or
jnp
cwtl
and
sub
pushf
cmp
inc
sbb
adc
lods
mov
outsl
push
inc
jmp
ljmp
pop
jg
fisubrs
xchg
inc
xchg
gs
mov
push
stc
dec
iret
jno
sarl
popf
mov
push
xchg
ficoml
xor
mov
jmp
int3
adc
cltd
cmp
rcrl
pop
movsl
pop
lods
std
xorl
lea
mov
in
aas
iret
bound
sti
push
add
mov
aam
adc
jnp
sub
sub
and
in
daa
dec
mov
xor
ret
mov
imul
inc
and
push
das
cltd
dec
div
and
movl
sub
rcl
push
fwait
rorb
push
mov
sbb
or
mov
sub
sbb
mulb
rcrl
xor
rclb
inc
test
xchg
in
and
iret
dec
inc
add
push
mov
outsb
inc
fadds
jae
mov
test
test
cmp
loopne
mov
add
push
xor
lcall
inc
jg
outsl
loope
lret
jnp
jmp
data16
out
cmp
cmp
and
call
xchg
test
push
adc
arpl
aaa
jbe
fdivl
dec
inc
xlat
cmp
insb
inc
out
lods
jecxz
cmpsl
xor
inc
and
mov
or
cmp
pop
mov
xor
push
pop
xor
shll
loopne
push
out
pop
and
pop
pop
push
nop
mov
push
sub
jnp
loop
int
fmull
in
stos
pusha
cs
call
mov
push
ds
cmp
mov
imul
sbb
imul
mov
inc
add
xlat
jg
pop
enter
add
sub
push
mov
dec
lods
cmp
roll
jg
fbld
or
in
inc
sub
pop
mov
mov
cmp
pop
or
jns
push
mov
push
cli
cmp
rcrb
push
scas
jo
aaa
out
mov
adc
es
sahf
popf
push
imul
hlt
mov
test
add
lea
xchg
xchg
and
outsb
adc
and
push
jp
add
sub
fdivs
dec
mov
ret
addr16
cmp
rorl
movsb
push
scas
into
add
arpl
sub
pop
xchg
dec
faddl
fs
mov
pop
sbb
inc
sbb
lods
xchg
push
mov
mov
arpl
fisubl
mov
cmp
fld
mov
cmp
push
sub
arpl
cmc
imul
mov
add
push
adc
and
mov
pop
shlb
inc
insl
repnz
sbb
cld
movl
mov
add
outsb
pop
mov
sub
out
pop
mov
dec
mov
jp
adc
cmp
jo
adc
fs
aad
push
xlat
enter
mov
repnz
sarb
inc
dec
leave
or
jle
lret
rorb
push
mov
movsb
inc
xor
popf
cmp
pop
mov
sbb
stc
js
push
xchg
xchg
cmc
outsl
mov
mov
dec
mov
mov
dec
fnstcw
mov
push
std
scas
inc
ds
push
lds
aam
push
out
movsb
push
mov
jno
pop
mov
out
jle
cmovbe
mov
jns
cwtl
jecxz
cltd
shrl
mov
setg
mov
cld
test
sbb
popf
mov
inc
and
popf
jo
movb
inc
jle
or
sub
fs
add
into
dec
jge
outsl
xchg
jl
pop
cmpsl
pop
sbbb
inc
imul
or
sbb
push
rorl
popf
or
shrb
imul
inc
aam
cs
cs
jb
adc
pop
push
shll
popa
fwait
mov
inc
sub
cmp
xchg
inc
test
jo
aaa
pop
mov
push
or
imul
iret
mov
ret
push
and
insl
sbb
or
test
add
mov
push
lods
js
and
jns
loope
xchg
sub
push
and
push
sbb
mov
push
int
dec
cmp
out
jmp
inc
mov
aaa
iret
jmp
arpl
pop
mov
cmp
and
cmp
test
add
popf
ds
xor
fwait
daa
shll
stc
push
jb
lods
sub
cmpsb
popa
dec
testb
iret
inc
scas
outsb
popf
lcall
jno
mov
fidivl
xor
sub
ljmp
xor
inc
xchg
in
sbb
lcall
mov
dec
int3
arpl
xchg
enter
test
repz
test
dec
pop
xchg
movsb
in
push
mov
sbb
mov
cmpsl
push
test
movsb
mov
decl
shlb
std
cltd
imul
repz
test
leave
xchg
xchg
jge
aaa
nop
lods
add
or
pusha
cmpsl
subb
mov
flds
outsb
mov
mov
lret
punpckhwd
sub
or
cmp
insl
dec
mov
mov
dec
fs
inc
add
call
dec
mov
push
cs
cs
stc
jmp
sub
pop
test
pop
dec
leave
mov
leave
adc
addr16
and
push
dec
xchg
test
test
fcmovu
xor
sbb
dec
adc
pop
sbb
mov
out
insb
xchg
fld
xchg
xchg
jb
or
mov
mov
outsl
push
mov
cld
jge
adc
je
rorb
xchg
sarb
pop
mov
push
cmpsb
fdivr
xor
cmp
sub
icebp
in
pop
mov
push
insb
test
rorb
aaa
lret
dec
movsb
shl
fcomps
lock
mov
out
xor
sbb
movl
add
or
push
in
add
cwtl
je
push
adcb
mov
std
loop
cmc
dec
dec
in
repz
fcmovb
imul
xchg
out
xchg
dec
mov
and
fdivr
jbe
sbb
mov
call
add
in
sub
in
pop
dec
mov
pop
addr16
push
out
jnp
and
fsubl
mov
mov
outsb
int
test
mov
sbb
add
lods
rcl
into
lcall
inc
add
outsl
sar
mov
xchg
sbb
scas
call
mov
dec
scas
addl
mov
clc
mov
aas
fstp
sub
mov
xor
xlat
shll
cmp
aas
arpl
loop
pop
stos
jge
mov
or
mov
push
or
cmp
scas
in
mov
fisttpll
cwtl
aas
jle
cmp
xchg
imul
or
inc
jge
cmp
dec
cmp
hlt
jg
roll
int3
or
adc
jns
stc
rclb
ss
and
push
ret
or
clc
decl
mov
fldenv
mov
mov
cmp
adcb
jnp
push
xorb
mov
push
pusha
pop
test
repz
adc
cmp
jp
pusha
lds
pop
insb
dec
ret
shrl
dec
pop
scas
in
jae
popl
xchg
push
inc
ljmp
push
jg
and
clc
cmp
mov
and
outsb
dec
mov
shlb
mov
gs
scas
dec
imul
xor
mov
add
movsl
js
pushf
shlb
sahf
xor
add
push
mov
cmpsb
lods
mov
push
pop
push
adc
sbb
mov
sub
or
cwtl
aas
out
sbb
add
test
popa
nop
pop
cs
jb
jecxz
adc
fldt
test
popa
xchg
pop
inc
dec
adc
lret
out
jge
inc
push
orl
fcmovnb
sub
push
jecxz
nop
ret
aam
aaa
mov
mov
jb
cmpsb
dec
cmc
jo
loope
cwtl
sbb
fmuls
movsl
repz
xor
std
adc
jbe
leave
pop
inc
jae
xchg
jmp
inc
leave
aam
mov
inc
xlat
js
cmp
sbb
mov
cmp
sahf
cmpsl
pushf
lret
int3
sub
xor
fistpll
rorl
data16
xor
or
mov
mov
push
jle
imul
pop
xchg
pop
ret
rolb
sub
adc
insl
jnp
es
and
sbb
cmp
mov
ja
out
xchg
pop
pop
push
popa
jo
or
lock
pop
cld
repnz
lock
jmp
out
jle
imulb
xchg
add
push
cld
das
jmp
inc
lods
sarb
mov
xor
cltd
hlt
xchg
pop
pop
or
add
dec
bound
or
inc
fwait
mov
enter
mov
stos
ljmp
loope
test
or
xor
lret
sbb
lods
push
jle
in
mov
add
xlat
movb
mov
sub
int3
cmpsb
call
outsl
loope
insl
out
mov
shl
jmp
test
test
sbb
andb
ja
cmp
sub
ljmp
mov
and
push
xchg
sub
sub
movsl
cwtl
xchg
out
xchg
movsb
outsl
jge
mov
or
inc
jno
cmpsl
xor
scas
test
mov
mov
jp
push
add
daa
inc
push
in
xor
arpl
mov
nop
pop
jge
jo
cmp
pop
out
adc
dec
inc
mov
dec
stos
fwait
nop
ret
rcll
arpl
sub
jecxz
stc
dec
sarb
into
cmp
pop
jle
pusha
sarb
lds
inc
xor
rcr
mov
les
and
xchg
mov
mov
mov
jl
ds
sub
std
dec
pop
aam
push
repz
pop
imul
scas
adc
dec
int
xor
mulb
sbb
xor
pop
inc
cmp
mov
aaa
loop
enter
movsb
ret
imul
fidivrl
aam
or
cld
orl
sbb
iret
add
filds
stos
stc
mov
dec
and
cld
sbb
out
mov
mov
push
imul
sub
popa
jg
ret
fs
and
xor
lds
fwait
lret
shll
jnp
jge
popa
fdivrs
and
cmpsb
pusha
pop
out
jp
sarb
je
sbb
xchg
in
sbb
push
scas
ljmp
inc
pop
mov
pusha
xlat
xchg
push
sub
imul
test
or
sub
add
xor
mov
loope
xchg
int3
cmc
mov
pop
sub
mov
icebp
movsl
je
lock
dec
arpl
mov
sti
std
fxch
push
or
cld
cld
jmp
or
lock
and
mov
subb
cmp
push
adc
int3
sbb
cmpsl
pushf
lods
cmp
or
mov
lahf
stos
mov
dec
xchg
cmp
push
xchg
ret
or
push
cli
ds
and
aad
and
lods
sahf
mov
je
xchg
aad
sbb
adc
or
mov
fnstcw
lcall
stos
cli
mov
xchg
pop
fs
mov
fs
push
dec
fiaddl
and
push
arpl
mov
pop
cmp
inc
movsb
xlat
push
mov
call
sbb
cmp
sub
and
dec
adcb
push
and
movsl
popa
ss
and
mov
jmp
mov
mov
ficoms
and
fisubs
sbb
jp
test
cwtl
add
aaa
aaa
jne
lret
inc
mov
sub
scas
test
push
add
movsl
adc
mov
test
shll
xchg
dec
xor
inc
lds
sub
sbb
inc
fs
push
mov
rcr
jo
enter
sub
jne
and
cmp
jno
xchg
pop
popa
sbb
fs
popa
insl
cmpsl
push
js
mov
das
xor
and
outsb
mov
aad
push
pop
and
push
mov
cmpsl
icebp
dec
aaa
stos
and
adc
xchg
inc
out
flds
push
aam
sbb
cwtl
sub
pusha
into
cmc
mov
adc
xor
test
pop
iret
pop
dec
test
int3
hlt
lods
mov
fmull
dec
out
or
jmp
xchg
mov
push
mov
loop
xor
sti
xor
cmc
adc
mov
xchg
aad
adc
stos
dec
movsb
mov
insl
test
mov
cmc
add
shlb
cli
and
jb
stos
mov
pop
push
jno
xor
enter
fwait
mov
xor
insw
movsl
into
or
adc
dec
jnp
pop
adc
dec
aas
cmp
fsubs
dec
add
pop
jmp
mov
fwait
xor
aad
scas
fidivrs
and
dec
addr16
adc
stc
add
pop
jno
fs
lods
sub
in
mov
mov
shlb
inc
add
cwtl
xor
lods
xchg
sbb
das
shl
sahf
inc
push
push
loopne
sbb
into
inc
xor
into
test
test
pop
inc
movsl
add
popf
loopne
dec
jne
sbb
xor
jns
std
inc
test
xor
lods
inc
dec
mov
and
push
repz
sbb
adc
dec
xor
xchg
fcompl
sub
lret
orb
xchg
stc
and
push
call
negl
and
out
add
mov
aas
xchg
dec
ljmp
jne
sub
call
outsb
bound
mov
xor
iret
inc
cmp
xchg
mov
ret
ja
adc
daa
subb
repnz
cmpsl
jmp
cmpsb
insl
aad
in
xchg
xchg
shlb
ds
js
add
into
in
xor
ss
add
sahf
cmc
mov
mov
call
out
dec
stos
push
into
add
and
jg
fs
jp
jb
fdivl
or
inc
jle
jmp
loop
loope
mov
jp
mov
xchg
mov
shll
es
int3
sbb
mov
ret
inc
out
lods
mov
pop
in
iret
pop
mov
sarb
popa
inc
cltd
push
xchg
jl
pop
sbb
dec
xchg
sbb
jg
rolb
js
out
icebp
int3
xor
pusha
sbb
pop
or
jnp
stc
test
cltd
stos
jmp
sarl
rclb
xor
and
jg
into
in
cwtl
testb
mov
movsl
lods
cs
inc
jne
fistpll
or
out
daa
cmc
jecxz
cmpsb
int
cmp
mov
dec
xchg
or
pop
push
xchg
sbb
sbb
shlb
shl
fldt
or
ds
stos
in
pop
mov
xchg
and
push
cmpsb
rclb
lcall
out
pushf
adc
adc
inc
push
dec
xchg
mov
lahf
jmp
cmc
inc
lea
aam
lret
in
sub
pop
push
es
or
sbb
jb
mov
js
frstor
cmpsb
mov
in
incb
ficoml
xchg
cmp
fnsave
imul
fldenv
xor
pop
dec
jne
mov
into
sub
int
and
jae
popa
data16
lcall
mov
mov
xchg
mov
pop
out
stos
cmpsl
aas
push
jno
stos
cltd
ss
adc
jb
cmp
mov
pop
ret
es
cmpsl
enter
xlat
and
push
xchg
mov
and
js
sbb
bound
push
push
pop
xchg
push
push
arpl
rcrl
sbb
mov
or
test
sbb
rorl
inc
and
pop
in
mov
sub
xor
xchg
es
outsl
das
pop
scas
mov
shlb
imul
jmp
sub
shl
bound
lods
and
cmc
xchg
xor
mov
and
adc
cmc
mov
push
cmc
in
ds
sbb
jbe
jp
call
addr16
xor
mov
xchg
push
adc
sbb
pop
ja
jno
mov
in
push
cld
or
adc
push
mov
stos
cmp
push
gs
sub
out
ljmp
cmp
inc
ss
sbb
iret
or
cmpsb
mov
xchg
mov
lock
lds
test
leave
xchg
cli
xor
and
pop
int
mov
aam
mov
das
aaa
cmp
sub
aad
cmpsl
rolb
scas
pop
push
or
lea
mov
pop
xor
xor
mov
test
mov
xlat
out
sub
inc
imul
cmp
enter
xor
adc
adcb
and
aas
test
push
push
push
repz
xchg
mov
push
xor
adc
jecxz
rorb
xchg
lods
imul
call
loope
iret
lret
outsb
pusha
mov
push
test
sbb
mov
les
mov
cmp
insb
sbb
cmpsb
gs
or
shlb
es
sbbl
sub
mov
adc
sbb
jmp
mov
dec
xor
fwait
sbb
pop
sub
sub
mov
pop
jno
iret
test
or
movsb
cmc
into
pushf
and
popa
cmp
cmp
adc
js
mov
ljmp
daa
lret
jo
aaa
inc
aaa
cs
xchg
add
cmp
les
mov
fnstcw
mov
in
adc
out
loopne
aaa
jmp
add
or
inc
dec
mul
rcll
clc
mov
incb
or
sbb
mov
test
sbb
shrb
in
loopne
dec
shrl
mov
cli
adc
ss
xchg
jmp
lcall
in
dec
jnp
adcb
lcall
mov
popf
inc
push
adc
aam
mov
js
ret
inc
fwait
push
fstl
stc
sub
adc
shr
cmp
xchg
mov
mov
lods
mov
movsb
lret
push
gs
inc
xor
dec
push
xchg
pop
daa
dec
adc
add
mov
lods
test
and
push
daa
std
arpl
dec
cmp
xor
dec
stos
mov
dec
cmp
int3
ljmp
mov
push
js
dec
pop
mov
stc
pushf
adc
repnz
fmul
sahf
js
push
mov
mov
xchg
mov
push
inc
cmp
xchg
rol
arpl
add
jg
xor
jns
dec
negl
lcall
push
push
sub
movsl
or
cmp
sub
adc
shrb
push
xchg
insb
imul
mov
lea
add
ficoml
or
jmp
adc
shrl
add
push
pusha
xchg
out
es
xchg
xor
daa
adc
enter
ja
ds
test
call
dec
cmp
cmpsl
mov
daa
ds
pop
repnz
sarl
lcall
sbb
inc
hlt
out
cld
out
test
mov
ljmp
push
mov
push
mov
xor
lods
adcl
xor
testb
add
bound
mov
mov
mov
daa
cld
xlat
mov
push
pop
xchg
and
ret
scas
adc
call
jp
lret
outsb
add
adc
mov
push
sub
sbb
push
jge
fwait
in
stos
adcl
jecxz
aam
mov
and
ffree
push
ficompl
mov
aas
loop,pn
fwait
sti
and
fsubl
in
notl
fisubs
leave
adc
mov
sbb
aam
mov
push
and
incl
jnp
push
dec
sarl
xor
pop
sahf
je
push
fwait
inc
add
xchg
dec
sub
mov
cmp
sbb
cmp
lret
cli
jle
popf
xchg
mov
ljmp
mov
in
sbb
cmp
rcrl
ljmp
lods
sbb
in
lret
test
lret
call
shll
out
aas
mov
adc
rcl
loop
xor
mov
cmp
arpl
aad
push
cmp
gs
jl
xor
icebp
or
lret
jns
mov
mov
ja
and
lcall
and
pop
inc
xchg
push
or
pop
fiaddl
lret
data16
sub
es
add
lock
xlat
scas
sbb
mov
idivb
jae
cli
jecxz
inc
and
add
cmpsb
dec
mov
out
push
repz
les
push
lret
ljmp
add
add
add
outsl
in
sub
cli
leave
pop
add
and
in
inc
xchg
movsl
mov
ret
gs
scas
mov
pop
pop
add
lahf
sbb
add
push
mov
cli
cmp
icebp
sti
push
cmc
jp
mov
ss
push
ret
push
push
dec
or
jne
sub
ss
xorb
jmp
jno
push
stc
popa
mov
mov
out
xor
xchg
jecxz
iret
scas
and
adc
dec
mov
cmp
and
loopne
mov
mov
cmp
cmp
cmp
imul
push
repz
mov
mov
jge
mov
xor
das
rol
ffreep
stos
loop
cmp
xchg
mov
bnd
xor
adc
jecxz
icebp
addr16
out
jae
adc
lahf
mov
xchg
fdivrl
es
push
mov
and
je
and
jo
xor
movl
jmp
xor
outsl
movsl
insb
or
mov
int3
decb
sahf
push
xor
add
ja
insb
inc
popf
sub
push
int
negb
repz
repnz
jo
fwait
pushf
fwait
cmp
xchg
and
aas
sub
pusha
lahf
jl
rcll
jmp
pop
ret
add
cmp
movsb
not
cmc
jmp
popf
movsl
jge
and
push
mov
shll
mov
push
xor
lea
adc
xor
xchg
movsb
lods
pop
rclb
mov
jmp
rol
sbb
frstor
jnp
adc
mov
pop
cmp
add
stos
out
sar
inc
ret
nop
dec
rclb
lock
sbb
push
lods
in
push
popf
clc
xchg
and
mov
jo
imul
adcl
out
test
addr16
inc
push
outsl
insb
push
cmpsb
pop
add
pop
xchg
push
push
iret
jo
or
repnz
mov
pop
xchg
fists
andl
pop
stos
push
or
inc
dec
mov
je
ret
push
sbb
sbb
out
pop
inc
fbstp
pushf
inc
bound
and
scas
cltd
push
hlt
arpl
pop
jns
shlb
fwait
jne
mov
jns
jbe
xor
test
mov
adc
xor
lods
adc
out
std
push
fs
mov
xchg
test
rcrl
jno
pop
pop
loop
fwait
push
clc
ds
cmp
push
popa
enter
shl
outsl
pop
test
or
and
xchg
out
test
mov
xor
scas
mov
gs
mov
mov
or
xor
jle
xor
mov
and
addl
mov
inc
mov
aam
cmc
inc
jne
je
cmc
xor
pop
push
mov
pop
ret
or
mov
xor
clc
push
js
imul
data16
push
mov
pop
sub
sub
in
and
test
mov
sbb
xor
iret
xchg
popf
jnp
mov
sbb
ret
pop
fs
jmp
add
fwait
dec
xlat
jmp
scas
int3
out
outsl
cmpsl
add
add
jae
inc
shrl
shrb
mov
lret
and
mov
add
loop
mov
xchg
repnz
outsb
cmpsb
pop
and
int
mov
xchg
loope
stos
xchg
loopne
xor
sub
jbe
loopne
sub
xchg
std
sbb
iret
mov
pop
or
cmp
leave
xor
fcomps
sti
mov
or
ljmp
xor
jnp
call
push
mov
ret
adcb
jb
cmpsb
or
mov
in
sub
cld
test
push
mov
sbb
test
pop
adc
jb
sub
fsubs
inc
dec
repz
ds
xchg
inc
dec
and
pushf
push
ljmp
stos
push
mov
inc
popf
pop
jno
aaa
pop
shrb
lds
lcall
or
aad
ss
ja
bound
add
outsl
mov
and
xchg
push
jmp
sti
data16
movl
mov
test
fldt
in
pop
mov
lock
jno
cmp
dec
rol
inc
cmp
out
es
sti
movsb
push
pop
in
cmpsl
addl
in
push
leave
push
xor
or
cld
xor
cltd
outsb
aam
sub
mov
jmp
popf
shrb
mov
fs
sbb
scas
or
pop
sbbb
dec
inc
ret
int3
jecxz
mov
ja
xchg
test
out
pop
popf
push
imul
pop
lret
mov
fistpll
test
jae
adc
repz
inc
fnclex
out
jbe
cmp
mov
inc
int3
fisttps
jg
movl
into
pcmpeqw
call
xor
jae
jbe
dec
fsubl
mov
sbb
jae
sbb
mov
mov
mov
ja
dec
inc
aad
das
stos
lahf
xlat
or
and
in
sbb
imul
mov
sub
std
filds
jb
mov
lret
xor
outsl
adc
cltd
cmp
ljmp
mov
xchg
mov
ret
mov
cmp
fiadds
pop
cmpsb
dec
enter
sbb
mov
addr16
sub
lods
pop
fcoml
jp
mov
js
test
js
jmp
into
test
mov
test
cmpsl
jmp
out
push
lock
mov
or
lret
pop
mov
xor
and
adc
icebp
cmpsl
pop
stos
jne
push
dec
out
idivb
rolb
jnp
insl
lcall
and
cmpsb
movsb
leave
inc
clc
inc
add
lods
and
cmp
iret
test
mov
xchg
int
mov
xor
in
test
cltd
es
pop
movsl
xchg
pop
sbb
repz
pop
push
jo
out
sahf
nop
scas
inc
pop
daa
stos
roll
movsl
inc
push
adc
mov
fdivrp
mov
mov
je
pop
popl
pop
test
jp
jne
cmp
cmp
loopne
cmpsl
sub
mov
sub
mov
inc
inc
pop
jbe
jecxz
addr16
fs
leave
std
pop
jne
push
jl
popf
adc
jno
jl
add
mov
dec
inc
aad
add
xchg
lods
outsl
cmovns
xlat
data16
ss
iret
mov
jmp
or
lods
iret
imul
push
ror
inc
cwtl
aam
scas
push
add
xchg
int
mov
adc
pop
pop
inc
xor
lea
add
idiv
mov
gs
pop
imul
imul
aaa
int
fwait
cs
rorl
lea
add
pop
inc
enter
inc
jp
out
fsub
out
dec
and
or
das
out
add
int
ja
or
or
inc
rcr
jg
sarb
mov
add
xchg
std
aad
xchg
mov
dec
cmp
divl
ret
test
add
dec
lcall
xor
js
jo
and
andl
insb
test
jno
ljmp
add
xchg
xchg
jl
std
dec
aam
mov
icebp
inc
loop
js
out
adc
or
cmp
mov
mov
lods
adc
pop
iret
xor
arpl
popa
jb
sub
dec
jae
and
mov
push
ret
xchg
dec
push
pusha
adc
cmp
sbbb
xchg
and
jge
rcrb
lds
xor
xor
fdivs
push
or
iret
imul
pop
dec
cmp
enter
out
push
and
cld
jge
out
jne
stc
dec
xchg
push
pop
popf
inc
jge
je
repz
in
inc
pop
adc
lcall
inc
or
push
ljmp
enter
dec
pop
insb
aam
imul
jg
pop
ljmp
das
insl
fxch
cmpb
push
dec
ret
call
nop
xor
xchg
insl
out
fs
pop
call
rorb
imul
ss
lds
ret
cmp
jmp
inc
push
rclb
out
pop
pop
enter
push
mov
dec
adc
cld
push
xor
xlat
es
push
push
mov
mov
mov
cmp
add
push
negl
ss
out
dec
add
xchg
mov
lods
xor
push
mov
fisttps
fildl
imul
jns
lret
jae
jo
loope
pop
mov
addl
add
out
shl
aad
popa
jns
js
jg
and
ss
dec
jge
test
sbb
test
icebp
fwait
xchg
test
test
sbb
ret
xor
ds
repnz
lret
inc
jg
daa
mov
xlat
push
jne
push
pop
lods
fbstp
fistpl
shl
sbb
push
adc
sub
dec
push
jmp
lret
hlt
into
mov
xchg
faddl
add
lods
int
gs
mov
sbb
cmpsb
mov
adc
or
push
test
mov
cs
fstpt
mov
dec
mov
add
fsubp
pop
xchg
or
dec
daa
stos
pop
mov
aam
clc
fidivrl
pushf
fmul
jbe
and
in
cmpsl
and
mov
pop
bound
pop
xchg
mov
and
jbe
cltd
ret
mov
xor
fwait
jbe
sbb
cwtl
xor
jne
in
call
pop
push
add
xchg
fstpl
push
push
push
jbe
fstpl
push
cmp
sti
mov
add
adc
in
dec
inc
lock
repz
lea
inc
inc
xchg
mov
push
adcl
inc
dec
sub
arpl
push
cmp
add
push
lods
and
mov
sahf
aas
sub
call
arpl
aam
mov
xorb
lahf
mov
push
add
ret
out
cmp
add
xchg
andb
fadd
dec
or
mov
cmc
lock
cmpsl
outsl
daa
jno
mov
jmp
sub
push
mov
sarl
dec
test
cmpsl
mov
sbb
sub
paddw
jle
push
lret
sbb
cmpsl
fwait
and
jg
mov
mov
push
push
aas
dec
xchg
xor
lcall
int
push
jae
enter
cli
fisubl
sbb
dec
je
adc
mov
or
popf
test
jno
push
adc
xchg
adc
les
mov
xor
sub
push
test
sarb
lahf
and
in
mov
rcll
clc
pop
push
gs
push
xchg
inc
jno
or
push
or
sbb
mov
xchg
std
aad
out
test
adc
in
pop
sub
test
loop
data16
out
into
jge
insb
xor
pop
sub
mov
imul
sbb
jb
in
add
add
ja
sti
movsb
js
jl
mov
xchg
scas
adc
mov
rorl
loop
add
mov
xchg
arpl
jnp
sub
jns
and
outsb
sbb
daa
or
xchg
movsl
shlb
pop
and
mov
fbld
ret
xor
xchg
hlt
cli
sbb
adc
outsl
shl
jno
repz
jle
iret
sub
pop
add
mov
in
mov
ret
mov
test
stos
inc
jne
xor
xor
or
fsubrs
cs
aas
hlt
or
cmp
inc
daa
inc
das
in
sub
std
scas
add
push
mov
enter
lock
mov
cmp
std
je
sbb
or
jnp
divb
dec
jb
sbb
js
jbe
and
or
and
push
out
and
adc
dec
sbb
int
cmc
sbb
jns
loopne
pop
pop
xchg
lcall
stos
repz
movhps
scas
mov
popf
arpl
jp
out
mov
push
ja
je
sbb
mov
out
test
dec
movsb
imul
mov
mov
sbb
dec
mov
cmp
es
inc
mov
repz
movsl
jno
push
movsl
fsubrp
jmp
xchg
mov
jno
sbb
mov
mov
add
mov
imul
test
in
push
jge
inc
mov
or
mov
fidivrl
push
js
sub
inc
mov
call
lret
jne
mov
test
lcall
negl
ds
mov
cmp
cmp
ds
or
jnp
insl
outsb
mov
pop
mov
popf
imul
jmp
fidivl
imul
push
addb
push
sub
pop
xchg
push
inc
dec
aas
sub
int
cmp
mov
mov
xchg
pop
in
xor
mov
aad
push
cmp
push
xor
scas
pop
das
out
push
sbb
fcomps
js
inc
mov
out
pop
mov
cs
xchg
into
cmc
lret
daa
push
mov
mov
decl
or
xor
fs
jmp
movsl
dec
pop
sub
fwait
mov
or
test
and
mov
loope
mov
lock
dec
cmp
rcrl
cmpl
clc
mov
push
sbb
jae
cmpb
dec
mov
mov
mov
mov
mov
stc
pop
imul
outsb
in
sahf
or
dec
inc
add
mov
push
orps
out
in
and
cmp
mov
mov
push
das
in
js
mov
imul
mov
test
mov
daa
mov
data16
leave
pop
leave
pop
mov
jb
push
mov
les
popa
loope
test
divl
test
mov
popf
sahf
jno
dec
cltd
pushf
data16
iret
in
addr16
mov
adc
xchg
mov
int3
cmc
iret
adc
fidivs
push
inc
push
daa
lret
mov
xchg
mov
mov
aaa
adc
movsl
xor
mov
cmpsl
cwtl
sub
inc
jbe
loop
mov
cwtl
into
frstor
int
adc
jge
out
rclb
and
icebp
xchg
pop
push
pop
mov
dec
lahf
push
pop
pop
pop
loop
out
cmp
push
mov
jno
jno
sti
daa
sbb
add
push
daa
push
lock
sarb
jle
xchg
std
push
pop
push
inc
mov
cld
cmc
out
lods
cmp
mov
mov
push
adc
add
push
sub
jp
dec
cmpsl
pop
jo
in
mov
sub
sahf
sahf
jb
mov
mull
aam
loop
cmpb
lahf
mov
xchg
lods
mov
sbb
mov
rcl
cwtl
mov
aaa
dec
ja
aaa
jnp
in
outsb
cmp
xor
push
jb
push
xchg
jbe
cmp
inc
sub
and
jmp
aam
fadd
stos
sbb
lahf
fsts
test
mov
pop
imul
cli
add
push
addr16
fucomi
in
shrb
sub
cmp
cmp
mov
mov
sahf
fisttps
mov
les
mov
cmpsb
push
test
cltd
adc
xor
stos
dec
shll
in
pushf
cmpsb
cmp
sub
mov
jmp
mov
push
lahf
push
imul
xchg
rcl
cmp
mov
jno
lahf
repz
lahf
inc
pop
jge
mov
sub
xor
xchg
outsl
jg
mov
sub
ret
or
insl
insb
subb
movsb
sbb
sub
push
arpl
sub
inc
into
movb
test
and
pop
cmpl
jo
sbb
adc
mov
push
push
mov
pop
roll
test
in
cltd
lods
fsubs
push
cmp
or
push
testb
adc
sysexit
inc
pop
pop
mulps
jmp
cltd
movsl
pop
out
adcb
jns
xor
sbb
fsubl
mov
mov
les
jae
add
bndstx
repz
and
jle
pop
pop
lcall
cmp
add
add
sub
pop
push
outsb
mov
scas
mull
cli
ds
add
insl
leave
mov
insb
aaa
popf
sbb
inc
leave
pop
adc
test
movsb
mov
nopl
adc
mov
fwait
mov
das
and
cmpsl
dec
outsb
arpl
mov
aad
ljmp
bndstx
mov
out
lea
ret
jno
fsts
xor
int3
add
sbb
mov
pop
loopne
fisttpll
iret
cmp
xchg
add
clc
cs
inc
repnz
in
mov
push
rep
push
push
pop
dec
mov
lret
and
push
arpl
xor
add
jecxz
orl
dec
inc
fiadds
xor
sti
call
xchg
pop
jb
pop
pop
rolb
xchg
into
xor
je
xchg
cmpsb
fildl
cmp
xchg
aad
adc
dec
dec
push
daa
ljmp
jnp
dec
outsb
dec
inc
and
mov
lcall
rcrl
cmpsb
shl
adc
loope
cwtl
and
xchg
mov
sahf
mov
rclb
test
mov
xchg
clc
sub
mov
loop
sbb
out
jl
adc
test
xor
insl
inc
outsl
shl
cmp
and
out
cmpsl
les
fwait
inc
pop
pop
cmp
push
mov
and
cmp
cmp
lret
mov
jp
mov
sbb
addl
inc
sub
aas
pop
movsb
xor
or
int3
push
popf
mov
pop
mov
adc
pushf
xchg
jge
sbb
icebp
adc
pop
sub
fstl
data16
mov
out
ret
mov
inc
push
and
punpckhwd
gs
fisubrl
rcrl
ljmp
mov
jo
pop
ss
inc
aad
xlat
scas
sbb
mov
mov
aas
sbb
test
mov
out
movsb
add
xchg
pop
xor
push
lock
stc
jl
adc
cs
testl
sbb
add
out
jg
lret
xchg
in
lock
jmp
aaa
lods
pop
mov
cmp
aas
sahf
outsb
scas
dec
xchg
dec
test
pop
mov
ljmp
push
pop
clc
inc
xor
jg
jmp
aaa
inc
sub
add
repnz
xor
je
cmp
int
mov
sti
ret
xchg
mov
adc
sub
mov
inc
out
mull
loopne
pop
add
testl
pop
mull
test
dec
fists
mov
imul
pop
sahf
nop
out
pop
add
aas
add
push
lcall
mov
mov
jo
stc
shll
cmpsb
xor
fwait
sub
push
repz
push
jmp
aam
ljmp
scas
mov
mov
jbe
in
aad
cmpsb
loop
lods
add
cmp
cmp
daa
iret
mov
les
jne
divl
cltd
pop
xor
test
add
dec
jmp
dec
mov
ret
aas
jbe
fldl
xor
std
outsl
mov
lsl
xchg
dec
adc
rcrl
adc
xor
faddp
or
push
rorl
inc
xchg
fcmovb
dec
clc
mov
mov
sub
dec
jne
bnd
mov
in
lahf
sbbl
dec
dec
push
cmp
jmp
and
fs
pushf
or
arpl
dec
jmp
push
bound
mov
loope
je
push
scas
pop
roll
imul
pop
rcr
mov
adc
xchg
xor
mov
sub
in
ret
sarb
pop
push
loope
jg
xchg
mov
notl
int
jle
pusha
add
push
adc
addr16
inc
imul
stos
dec
jmp
movsb
xor
xor
std
xor
data16
sbb
cmp
pop
mov
mov
outsb
js
sbb
mov
xor
sbb
mov
xchg
jmp
sbb
mov
scas
and
push
push
and
jmp
or
mov
sbb
push
dec
arpl
stc
je
sti
stc
test
mov
and
es
shlb
cmovb
sti
xor
push
sub
jbe
mov
cmovo
sti
nop
jo
aas
pop
dec
and
cmp
sub
add
dec
shrb
and
inc
xlat
and
loopne
imul
pop
loope
out
pop
xchg
sbb
mov
inc
sub
mov
dec
enter
insl
pmuludq
lds
lock
xor
lods
jns
out
xor
lcall
lahf
out
enter
push
cmpsl
adc
fildl
movsb
lds
xchg
in
ret
jge
push
or
dec
shl
pusha
and
out
dec
adc
and
inc
mov
mov
ja,pn
movsb
movsl
cmp
mov
mov
scas
mov
xchg
mov
cltd
sarb
and
sub
jp
imul
mov
xchg
and
pop
inc
mov
ss
or
daa
cmp
jns
js
pop
sub
jecxz
lock
jge
cmpsl
lea
cltd
fs
xchg
data16
std
pop
cmp
ljmp
or
mov
stc
adcl
into
adc
inc
pop
pop
in
out
inc
insl
pop
popa
lods
mov
fisttpl
jo
sub
das
or
and
xor
ljmp
add
movsb
dec
inc
scas
lahf
fst
ret
inc
lret
js
xor
xchg
cmp
cmp
sub
iret
xchg
lahf
ss
mov
insl
adc
loop
divl
fisubrs
aad
or
pop
lahf
mov
dec
aam
and
lss
inc
sbb
in
mov
xchg
or
mov
mov
jecxz
push
jmp
cltd
dec
pusha
aam
sbb
in
loopne
ja
add
loop
movl
xchg
push
ja
xchg
shl
dec
add
icebp
pop
flds
fdivr
jecxz
jo
dec
xor
bound
add
in
xchg
out
pop
jecxz
hlt
imul
push
adc
shlb
les
mov
and
xchg
notb
push
cli
push
xchg
mov
push
enter
addr16
cmp
int
sub
inc
faddl
pslld
std
js
dec
out
cmp
lret
xor
stc
fsubrs
pop
pop
js
fsubs
mov
sbb
xor
sbb
jo
lods
scas
jg
pop
and
cmp
mov
adc
dec
out
sbb
lods
push
mov
fisubrl
pushf
mov
ss
in
shlb
push
xor
inc
adc
cmc
mov
pop
negb
mov
add
pop
scas
ss
stc
add
repnz
mov
and
shrl
mov
loope
stos
fiaddl
clc
mov
test
mov
push
fucomip
insb
jge
push
inc
in
mov
adc
int
ret
frstor
orb
iret
fmul
xchg
jae
sub
xor
jo
popf
call
xchg
lock
cmp
mov
aas
xor
or
push
cmpsb
or
or
mov
jg
add
sbb
adc
jecxz,pt
mov
mov
dec
pusha
das
inc
pushf
les
in
cmp
das
cmp
ljmp
fucom
xchg
pop
shl
aad
push
cmp
inc
push
mov
fisubl
test
push
test
enter
lahf
outsl
lods
xchg
mov
jb
inc
mov
sbb
testl
push
test
dec
mov
mov
in
cmpsb
cli
mov
arpl
jnp
movsb
push
gs
add
xchg
fimull
mov
loop
aam
dec
cs
lcall
out
push
lea
mov
lahf
clc
rorb
sbb
pop
loope
gs
sbb
jge
jecxz
fisubrl
in
inc
out
mov
std
jae
pop
aad
add
mov
fdivrs
push
push
ffree
cmpsb
movsb
inc
fsubrl
push
add
repnz
bound
add
push
test
push
orb
ret
dec
cmp
or
clc
and
mov
cmp
jbe
mov
adc
push
mov
pop
xor
jl
push
ds
lcall
cld
fwait
or
shr
add
adc
jno
add
pop
arpl
int3
test
int3
inc
push
jge
mov
mov
and
push
adc
jno
xchg
xchg
imul
popa
mov
adc
rol
dec
sbb
xchg
fwait
in
ja
mov
ret
ret
cld
daa
cmc
popf
mov
lret
push
pop
lcall
push
insl
xchg
movsl
int3
xchg
xchg
lret
mov
and
je
fwait
inc
adcb
faddl
pushf
xor
dec
insl
pushf
mov
pop
mov
cmpb
cmp
sti
inc
out
lcall
in
push
mov
sub
add
lret
jl
les
repnz
add
adc
fildl
mov
pushf
stc
shrb
xchg
cltd
subb
push
cmp
xchg
xor
inc
nop
popf
outsl
outsb
mov
scas
mov
ret
jg
in
or
mov
out
push
fiaddl
inc
mov
in
jo
jmp
dec
jecxz
daa
pop
adc
xchg
sub
imul
pusha
test
inc
pop
jno
pop
xchg
xchg
test
in
cmpb
fsubrl
decb
mov
rcll
daa
inc
nop
jns
sub
int3
sahf
push
jne
mov
or
pop
xor
arpl
lods
imul
mov
mov
lods
xlat
cmpsb
xchg
xorb
jmp
xchg
enter
xchg
adcl
push
cwtl
mov
cmp
std
lds
dec
jmp
inc
sub
jg
lcall
push
cmc
cld
int3
out
mov
add
or
mov
add
aas
cmp
and
sahf
aad
mov
cmp
push
mov
pop
jmp
or
pop
inc
adc
mov
push
aad
sahf
fdivs
pop
jmp
dec
and
jne
repnz
mov
popa
pop
or
dec
mov
dec
mov
jb
lret
xchg
sub
orl
stc
dec
sub
std
inc
push
cmp
sub
xorl
adc
xchg
fnstenv
mov
add
or
push
ficoms
sub
insl
in
mov
je
mov
sub
shrl
ljmp
and
es
and
mov
ja
mov
cwtl
and
mov
in
add
in
fidivrs
dec
popw
cmc
fdiv
mov
data16
mov
adc
xor
jl
icebp
test
fsts
push
or
cmp
xchg
mov
mov
loop
enter
jmp
push
imul
pop
inc
mov
and
pmulhw
fadds
popf
push
mov
inc
or
jo
cmp
mov
pop
xor
pop
sahf
xor
adc
movl
sbb
das
cmp
pop
push
in
fsubs
push
ret
nop
xchg
sbb
mov
or
in
inc
inc
inc
and
cmp
out
pop
add
add
clc
int
adc
scas
mov
add
lahf
xchg
push
push
or
mov
and
dec
mov
xchg
and
lock
push
pop
cwtl
popf
mov
dec
add
je
or
lods
pop
xor
lahf
testb
outsb
fldcw
cmp
mov
dec
sarl
fldenv
in
push
sbb
xchg
xchg
loope
std
jb
mov
jmp
sub
add
int
cmpsb
insl
popa
xor
bound
lret
test
sahf
jnp
arpl
rcrb
out
popa
jmp
jge
mov
or
shr
mov
hlt
dec
mov
insb
sti
jnp
pushf
mov
push
push
std
jecxz
test
inc
inc
xor
test
movsb
sbb
mov
adc
pushf
js
pop
push
sbb
faddl
mov
aam
shrl
mov
out
sub
js
pusha
jge
cmp
mov
nop
and
add
xchg
sub
ljmp
cmp
adc
mov
cwtl
sub
sbb
gs
in
jl
xchg
adc
mov
push
add
or
fildll
adc
imul
ret
pop
outsl
fs
pop
xchg
clc
or
inc
lret
mov
subl
cmp
jl
aad
inc
or
and
sbb
xlat
daa
mov
mov
sahf
ret
outsl
dec
aas
enter
into
ljmp
cmpsb
int
pop
loopne
push
push
mov
inc
addr16
test
lret
mov
push
rclb
or
orl
pop
addr16
hlt
mov
cs
xchg
mov
fnstsw
xchg
test
aaa
xlat
aam
mov
scas
dec
or
pop
sbb
push
les
mov
daa
mov
inc
pop
mov
movsb
fucomp
xchg
and
mov
add
inc
push
push
mov
jp
shll
sar
fcmovu
arpl
cmc
sbb
lds
push
adc
mov
dec
test
scas
xor
or
push
mov
or
xchg
ret
jb
inc
mov
xchg
inc
out
test
jp
ret
dec
cmp
pop
cmp
adc
lcall
and
jnp
fst
fiadds
adc
pop
insl
orb
scas
xor
data16
sub
cmpsl
sub
ds
cmp
leave
sub
cld
jnp
sub
or
hlt
cmpsl
test
push
mov
sbb
imul
pop
mov
or
adc
jge
ret
or
push
je
mov
out
std
push
stos
cmp
pop
inc
xor
cwtl
in
fldcw
mov
stos
cmpsl
icebp
pushf
jl
push
dec
shlb
sub
mov
in
xlat
dec
test
mov
inc
and
sub
insl
jecxz
dec
and
cmp
cli
pop
loope
add
jbe
clc
adc
loopne
push
dec
adc
jecxz
inc
push
mov
inc
nop
push
add
out
fs
test
mov
and
sbb
repnz
xchg
add
push
mov
xor
gs
repz
sbb
aam
inc
enter
cs
push
aam
mov
adc
movsb
mov
cltd
and
pop
ljmp
or
pop
imul
lock
out
or
xor
xchg
sub
pop
outsb
push
leave
mov
arpl
ret
cmp
mov
jecxz
stos
sti
push
dec
pusha
sahf
dec
add
loopne
insb
cmc
cli
fisubs
and
or
dec
xor
je
mov
lahf
insb
push
jg
lret
xchg
adc
or
pop
cmpb
lcall
cwtl
lcall
sbb
lock
mov
nop
lock
insb
out
xchg
inc
push
or
inc
cmc
lahf
aas
imul
fisttpl
icebp
cmpsb
xchg
in
test
movsl
ljmp
sbb
test
sub
ss
inc
fnsave
sahf
push
enter
sub
addr16
cld
hlt
add
mov
mov
push
mov
out
xrelease
sbb
or
aaa
out
jo
jbe
pop
sahf
and
in
xor
xchg
push
lods
cld
roll
cmp
inc
mov
xor
lock
cmpsl
fmulp
add
cmpsb
in
test
les
inc
sbb
dec
int3
or
cli
push
sarl
fcompl
jp
mov
or
push
push
fldl
enter
mov
pop
out
jmp
scas
jbe
xchg
stos
xor
sbb
cmp
adc
lret
mov
lahf
and
rcrb
xchg
and
mov
push
xchg
in
xor
cmp
dec
push
in
aas
into
dec
xchg
push
xchg
cmpsl
jo
mov
pop
xlat
or
aam
sub
cwtl
cwtl
fs
into
inc
sub
pop
out
push
iret
lock
sahf
jg
inc
insl
dec
cmp
xchg
cmp
sub
mov
lret
sub
out
xor
mov
bound
mov
dec
jecxz
movsb
loope
mov
pop
lods
rcl
cmp
or
repnz
cmpsb
int
call
xchg
lahf
ficompl
imul
push
aam
xor
jge
cli
mov
xor
add
out
cld
inc
cld
and
das
mov
movsb
cmp
scas
in
xchg
mov
pop
dec
fldt
rorl
into
loop
lret
imul
out
fsubl
in
lea
in
xchg
xchg
jae
fildl
arpl
bound
push
arpl
pop
mov
jne
icebp
or
roll
movsb
push
sub
rcrb
mov
jmp
push
cmp
stos
out
push
imul
jns
mov
xor
gs
clc
mov
push
inc
and
or
xlat
stos
add
jecxz
adc
xchg
ss
fcompl
pop
dec
xchg
mov
lock
inc
inc
outsb
push
sub
sbb
lods
out
pop
test
scas
cmpsl
cltd
xor
cs
pushf
ljmp
gs
xor
outsl
iret
out
or
pop
xlat
cli
lahf
mov
xor
shl
lret
rolb
add
mov
push
xchg
imul
das
mov
add
push
data16
jmp
mov
imulb
jp
out
in
outsb
adc
xor
dec
cmp
adc
push
sahf
jb
out
cmp
fs
fmuls
and
fidivrl
test
xor
jge
cli
lahf
inc
cli
in
loopne
andl
mov
push
mov
ss
xor
fcoml
mov
dec
pop
mov
ja
fstl
inc
push
pop
mov
int3
sbb
mov
and
mov
insl
adc
pop
mov
xchg
out
mov
mov
cld
push
push
shll
out
mov
dec
inc
jae
movsl
cli
shl
mov
or
sub
fxch
jb
push
add
mov
mov
addl
and
jnp
jne
jle
sbb
dec
add
inc
push
jo
gs
arpl
jmp
nop
ja
xchg
mov
mov
mov
push
inc
fdivs
cmp
and
je
dec
sbb
pop
arpl
das
mov
push
jae
dec
jbe
pop
mov
lods
cmp
cli
xlat
orl
cmp
dec
xchg
sti
ficoml
pusha
jno
repz
push
sbb
cs
sub
pop
mov
push
loop
enter
push
dec
idiv
cmpsl
mov
mov
or
mov
dec
adc
sub
push
fisubrs
lods
fiaddl
pop
adc
scas
or
mov
rorb
ljmp
mov
nop
mov
loope
rclb
mov
xchg
mov
push
nop
dec
inc
aas
and
lcall
std
fadd
cmp
aam
mov
fwait
push
jo
sbb
push
int
mov
cli
cmp
or
xchg
mov
in
aad
push
xor
shll
push
ret
push
mov
fldenv
test
in
xchg
jg
mov
sbb
mov
push
cmp
pop
push
movsbl
ja
pop
aaa
das
fiadds
mov
das
add
cli
orb
stos
cli
pop
not
out
scas
pushw
in
add
dec
mov
rcr
mov
mov
push
inc
sarb
inc
jnp
inc
mov
pop
outsl
int3
das
pop
loopne
sub
add
mov
pop
loope
xchg
inc
sar
inc
addr16
out
push
repz
mov
or
push
rolb
ljmp
jae
popa
push
dec
add
pusha
dec
sub
test
in
xlat
mov
jg
mov
cmc
inc
in
out
data16
cmpsb
sbb
leave
sbb
xchg
xchg
inc
mov
push
mov
nop
fsub
mov
fsubrs
dec
jo
lea
je
push
out
or
or
push
push
adc
and
js
stc
imull
stos
xor
test
or
inc
pop
das
dec
jge
pop
cmpsb
scas
nop
fistpll
push
sahf
bound
incl
es
aam
sbb
cli
jl
js
decb
sub
mov
in
outsb
filds
fisubs
fildll
xlat
sbb
jo
cmpl
push
mov
mov
repnz
cmp
insb
mov
icebp
mov
xor
aaa
sbb
pop
cmp
cs
add
pusha
test
dec
lret
scas
push
jnp
add
divl
sbb
jnp
incb
ficoml
ss
mov
pop
dec
loopne
jmp
lods
movsl
jae
adc
dec
inc
adc
pop
pop
pushf
fdivrs
adc
ja
and
lret
int3
insb
dec
clc
hlt
lea
bound
jae
pop
lcall
imull
push
sbb
loope
push
stos
stos
xor
jle
adcb
repnz
inc
sbb
sti
fs
int3
push
jns
fimuls
xor
mov
xchg
ss
push
not
mov
jecxz
pop
dec
push
lret
dec
add
dec
aas
pop
in
lods
stc
mov
and
mov
gs
and
les
std
test
cwtl
nop
mov
add
jle
push
jecxz
icebp
std
push
inc
rcr
sbb
xor
aad
mov
in
dec
insb
sbb
shlb
lahf
dec
aaa
ds
mov
cmpsl
pop
mov
dec
js
movsl
sub
mov
gs
fiaddl
rcr
inc
dec
in
pop
aaa
add
jbe
sub
std
fbld
fs
cli
push
loopne
or
push
push
into
fildll
dec
dec
fstpl
insb
xor
out
sub
loop
mov
or
imul
mov
mov
cmp
pop
mov
pop
mov
xor
sbb
push
sbb
pop
jle
pop
prefetchnta
mov
bound
adc
cmp
xchg
dec
sbb
xchg
xchg
mov
cmpsl
mov
rorl
jp
stos
jo
sub
lret
adc
or
in
cmp
repnz
aam
mull
pop
enter
inc
xor
push
in
call
lret
pop
adc
sbb
adc
cmp
insb
push
fsubrs
inc
imul
popf
movsb
inc
and
roll
xchg
mov
stc
mov
loope
out
fdivs
mov
inc
dec
out
cmp
fists
mov
imul
test
mov
pop
cmpsb
imul
mov
dec
fwait
test
pusha
pop
ljmp
inc
cs
mov
adc
pushf
pop
jns
add
dec
xlat
adc
cmp
dec
mov
sbb
testb
shrl
cmpsl
adc
adc
ret
hlt
outsl
mov
jne
daa
rol
xchg
lret
or
ret
inc
push
mov
sbb
xor
sahf
add
or
mov
rcl
cmpsl
aas
add
mov
jns
or
cmp
or
pop
pop
popa
aas
jmp
pushf
enter
addr16
sahf
sub
popa
pusha
daa
cmpsb
inc
xor
es
add
aam
mov
mov
cmp
scas
ds
lret
lcall
loopne
mov
xchg
push
loope
mov
xor
mov
dec
cmp
xchg
add
pop
and
mov
lcall
addr16
orl
inc
test
add
insb
stos
test
aam
inc
mov
test
leave
lock
lock
call
stos
arpl
mov
jnp
ret
imul
hlt
dec
test
fnstsw
or
int3
out
inc
pop
lods
popa
addr16
ss
mov
imul
and
stos
orl
xchg
insb
mov
push
mov
jg
sub
dec
mov
pop
fwait
cmpsl
or
push
stos
fdivp
push
mov
mov
out
rcrl
scas
inc
add
arpl
mov
pop
sub
ljmp
je
xor
mov
dec
jl
or
pop
ffreep
ja
and
cld
pop
push
popf
and
cmp
imul
dec
test
add
add
ja
scas
adc
sbb
hlt
loope
cwtl
out
lret
test
lea
jno
adc
mov
and
fisubs
stos
sahf
mov
mov
cmp
sub
cmp
pop
fcmovnbe
icebp
inc
addl
sub
outsl
adc
cmc
push
in
test
add
adc
sub
add
cmp
movsl
add
ja
enter
fimuls
enter
inc
push
cmp
aaa
fs
mov
pop
scas
jp
fsts
outsb
mov
inc
xor
test
pop
loope
cmp
mov
fdivrl
stos
ljmp
add
inc
push
lods
sti
cli
mov
mov
lods
pop
sbb
or
cmp
ljmp
mov
clc
cmp
int
cmp
and
pop
rcll
cltd
sub
pop
insb
cmpl
cmp
mov
inc
out
cmpsb
push
addb
out
jb
pop
je
dec
faddl
sbb
in
sbb
inc
lea
xchg
xchg
and
fiadds
mov
adc
rorb
stos
cmp
inc
movsl
sbb
mov
pop
sbb
mov
sub
dec
mov
push
sbb
das
inc
arpl
out
cli
xor
cli
xchg
xor
xor
push
cmp
inc
scas
mov
fists
mov
ret
add
arpl
sbb
jb
jecxz
sub
mov
inc
dec
lret
pushf
sbb
fisttps
pushf
divb
adc
adc
and
xor
pusha
ljmp
stos
aad
lahf
dec
mov
scas
popf
and
add
insb
mov
inc
jmp
sub
loope
push
ljmp
jns
xor
gs
xor
aad
loope
dec
sbb
pop
pop
and
or
das
icebp
daa
pop
cwtl
push
pop
inc
aad
dec
xchg
cmp
inc
or
adc
out
in
inc
xchg
sbb
add
insl
xchg
cmp
test
dec
and
add
nop
in
ret
pop
push
adc
in
fsts
cwtl
push
js
pavgb
sahf
enter
add
push
mov
fistpll
lcall
sbb
fidivrl
es
and
imul
add
cmc
inc
loopne
notb
call
pop
or
pushf
incl
jmp
movsb
pusha
in
sbb
xlat
mov
push
pop
push
mov
pusha
arpl
dec
inc
rorl
pop
out
fstpt
pop
xchg
jge
out
dec
mov
lods
push
popa
pop
cmp
rolb
mov
jp
xor
mov
ret
stc
jne
clc
test
test
or
repnz
repnz
mov
mov
stc
push
scas
stos
inc
xchg
mov
push
test
out
test
cmp
adc
push
xor
dec
jl
jl
test
out
enter
xorb
and
ds
add
popf
movsl
out
jp
insb
sbb
dec
add
jbe
loop
mov
ret
stos
sbb
bound
push
icebp
cmp
or
push
pop
fmuls
mov
in
jnp
mov
jmp
rcrl
gs
sbb
outsb
push
and
push
push
mov
mov
mov
testb
push
dec
push
ljmp
lods
rolb
dec
inc
es
popf
xor
push
push
orb
push
push
stos
pop
xchg
ret
xor
dec
dec
in
in
push
push
adc
test
and
push
mov
jno
shll
movsb
cmp
rclb
sub
cwtl
xchg
std
sbb
sub
adc
ljmp
std
repz
movsl
cmp
or
jns
pusha
lcall
test
dec
and
pop
sub
fistps
mov
orb
or
mov
mov
mov
push
mov
mov
pop
ljmp
icebp
cs
outsb
jno
es
or
ret
mov
dec
scas
jg
or
sti
andl
loopne
mov
mov
jmp
and
ret
out
push
out
mull
lock
daa
test
pop
ljmp
leave
bnd
or
or
movl
sbb
sub
mov
fld1
jg
addr16
pop
lcall
std
add
scas
imul
lret
lock
lahf
pop
aaa
test
cwtl
pop
adc
call
stos
xor
push
jae
cli
cmp
jg
shl
inc
add
push
and
xor
mov
in
and
or
orl
and
xchg
or
pusha
fwait
stc
mov
adc
mov
aam
fldt
das
adc
sbb
adc
mov
imul
stos
test
sbb
out
stc
scas
xlat
jbe
fcmove
xchg
in
popa
movsl
mov
pop
dec
ds
shr
in
push
fidivrl
jns
insl
test
cmp
adc
leave
cmpsl
insb
and
fdiv
xchg
xchg
lods
xchg
pop
lahf
mov
in
icebp
jnp
push
imulb
jge
push
sub
scas
mov
xchg
cmp
xorb
fstl
jae
xor
ljmp
out
cld
aam
dec
in
lds
mov
daa
jns
jmp
mov
movsl
je
cmpsl
movsb
jo
pop
cs
push
xchg
sti
repz
xor
mov
fistpll
ja
mov
icebp
js
mov
xor
js
cmc
in
mov
and
dec
cmp
pop
in
mov
hlt
stos
setb
jl
es
jecxz
popf
outsb
pop
xor
cmp
pop
mov
jl
fisttps
xor
sbb
int
aas
xchg
mov
not
xor
in
clc
ljmp
xor
dec
fldl
out
cld
scas
lcall
push
and
adc
adc
inc
and
xchg
mov
push
repnz
and
jbe
xchg
mov
sub
cmc
stc
mov
mov
out
jge
add
shll
scas
ret
push
movsl
jp
dec
sbb
repnz
pop
xchg
sub
pushf
xchg
adc
fs
imul
mov
jge
adc
movsl
mov
test
hlt
imul
and
das
push
pop
xchg
pop
dec
int
and
icebp
int
rcll
es
add
adc
cmp
fstl
pushf
data16
negb
adcb
mov
out
nop
lret
ja
int3
inc
mov
xchg
stc
adc
mov
inc
shlb
lods
and
bound
xor
cmp
fsubr
add
shr
aad
pop
and
dec
dec
adc
cmpsl
pop
pop
or
faddl
iret
pop
mov
cld
mov
mov
inc
mov
inc
mov
stos
jae
cmp
icebp
in
out
fs
jo
jg
sbb
jecxz
fadd
mov
xor
andb
lcall
stos
push
jg
rorl
adc
lret
xchg
divb
or
ds
jl
loop
pop
cmp
insl
pop
test
push
int3
stos
xor
push
mov
jo
fsubrs
rcll
sarb
lret
mov
or
fwait
adc
stc
cmp
and
inc
hlt
je
adc
popa
sub
mov
xor
push
fists
cmp
ret
jg
lods
mov
xlat
das
iret
and
ljmp
icebp
repz
xor
notl
inc
dec
call
insb
movsb
fyl2x
in
pop
adc
lods
decl
outsb
in
xor
mov
lea
jmp
lds
movsb
mov
lock
addl
outsb
xchg
sub
pop
mov
out
jg
push
movsl
adc
lret
or
jns
outsl
and
push
xor
push
outsl
nop
add
add
mov
push
inc
inc
lret
pop
pushf
clc
mov
insb
jle
dec
arpl
or
daa
or
adc
pusha
jmp
nop
push
out
inc
cmp
in
jmp
icebp
loope
push
sbb
jae
sahf
ret
mov
sub
add
add
aaa
in
push
and
aas
mov
mov
cltd
inc
les
jbe
repz
pop
sub
inc
scas
movsl
mov
std
fcmovbe
push
mov
and
stos
scas
mov
sub
out
imul
mov
ds
pop
aaa
cli
imull
mov
mov
jge
fsubl
fdivrl
jns
pop
fldcw
xor
mov
out
lahf
popa
cli
in
inc
subl
adc
ja
add
lahf
pushf
nop
sti
mov
int
xchg
cmc
or
out
xor
ficoms
xchg
test
ret
cli
push
dec
jle
into
sub
gs
mov
inc
decl
jle
pop
lret
xchg
fs
sahf
mov
jp
andb
and
adc
pop
lods
out
mov
inc
fsubrs
iret
popf
adc
rcll
pop
fcomi
mov
daa
vpunpckhbw
sub
mov
adc
aam
mov
adc
imul
pop
sbb
and
pop
pop
and
lret
imul
jecxz
jns
icebp
inc
pushf
mov
sub
cli
mov
div
fcoml
adcb
test
mov
sub
out
pop
out
cs
xchg
ret
mov
das
dec
jb
dec
mov
mov
or
mov
cli
lcall
lock
xchg
js
loopne
sub
outsb
out
dec
pusha
loop
mov
add
out
sti
outsl
test
xchg
sub
mov
repnz
xchg
iret
hlt
in
cmpl
lret
daa
push
push
sbb
pop
je
cmpsl
sbb
or
xor
mov
subb
into
and
xchg
cs
lock
sub
sahf
inc
push
mov
push
das
jl
mov
nop
push
push
pop
imul
fwait
test
mov
out
in
jno
inc
into
testb
jb
clc
or
xchg
idivb
insl
lahf
adcl
out
ds
mov
inc
std
mov
ret
inc
bound
and
jbe
stc
sub
dec
test
aas
xor
mov
xchg
cmp
fisttps
push
lea
adc
xchg
sub
jne
jg
in
or
repnz
mov
mov
adc
mov
adc
pop
xor
les
add
popa
pop
push
insb
mov
shlb
pop
xor
jo
add
icebp
push
mov
mov
divb
inc
pop
faddl
in
sbb
and
mov
jo
fdivl
cmp
mov
xor
dec
rclb
adc
scas
jo
pop
or
addr16
rclb
or
je
add
mov
adc
ret
loop
xchg
sub
mov
daa
psrld
andb
xor
pop
les
push
inc
adc
adc
out
js
mov
push
push
test
jns
hlt
adc
mov
push
jbe
push
xor
lret
cmp
das
jo
jno
pop
sbb
bound
cmp
leave
push
cmp
outsl
lds
cmp
aaa
xchg
gs
mov
push
fs
stc
cld
adc
xchg
icebp
inc
sarl
mov
hlt
iret
add
ja
ljmp
icebp
scas
mov
xor
push
in
vcvtps2pd
add
jle
popf
xor
int3
clc
pop
push
and
mov
dec
adc
jae,pt
les
sarb
pslld
add
std
sbb
sub
dec
or
dec
inc
pop
rcr
cmc
loope
adc
pop
xchg
sbb
xor
xor
out
xor
js
xorl
jae
hlt
fsubs
stos
cld
pop
cwtl
sub
sub
inc
in
rorb
sti
cmp
push
test
pop
xchg
je
incl
ljmp
and
pop
cmp
popf
mov
xchg
add
dec
add
mov
jle
movsb
movsl
xor
pcmpeqb
dec
mov
mov
jmp
ficompl
repnz
mov
nop
call
test
jb
jno
push
sbb
mov
adc
je
jo
xor
adc
pop
cmpsb
das
les
ds
xor
cltd
shlb
mov
mov
ret
out
scas
xor
jg
testl
divl
jecxz
ret
inc
dec
fimull
cs
lret
sti
stos
xlat
jae
xor
out
xchg
jle
fdivrs
cli
jbe
or
jmp
mov
std
dec
sbb
pop
mov
mov
pushf
and
addb
inc
lret
sbb
jno
aam
cltd
inc
andl
enter
aaa
and
sbb
dec
es
adc
mov
adc
cwtl
jmp
mov
or
aam
or
sarl
xchg
mov
jmp
pop
push
xchg
call
sub
les
es
out
adc
adc
int
xchg
xchg
push
int
jge
cmpsb
out
add
and
cld
out
out
xchg
daa
xor
and
popa
xorb
sbb
insb
shll
mov
ds
sub
es
cmc
popf
daa
mov
loop
aam
xor
mov
or
or
test
lds
add
aaa
jns
ss
xchg
scas
gs
out
inc
sub
test
inc
ja
sbb
js
inc
leave
insl
das
out
add
popf
cmpsb
sahf
aam
push
test
adc
ret
imul
lret
in
jno
mov
mov
pushf
or
cmp
pop
insb
ficoml
mov
sbb
sub
xchg
lock
mov
push
pop
inc
push
xchg
mov
mov
ds
fisubs
jnp
sahf
pop
xchg
lsl
xor
xchg
inc
sarb
out
es
scas
fwait
test
in
int3
fstp
cmpsl
jno
cmp
xchg
mov
cmc
call
mov
adc
and
pop
xorb
cltd
fnstsw
lahf
jp
sbb
out
cli
in
scas
ss
ret
push
ljmp
mov
jb
cwtl
aam
cmp
fs
mov
loopne
jp
push
lods
adc
xchg
adc
notb
test
dec
add
mov
pop
loopne
add
dec
pop
inc
fstps
pop
std
jae
push
je
cmp
xchg
push
sub
inc
pop
in
dec
testl
sarl
dec
push
add
into
sar
mov
cwtl
sub
getsec
ficoms
negl
and
or
hlt
add
push
cli
inc
stos
or
jns
shl
mov
cmp
mov
and
pusha
push
xor
push
cmpsl
push
addr16
xchg
outsb
mov
cmp
aaa
in
cmpb
add
adc
pop
push
and
dec
aam
push
sahf
xlat
pop
push
mov
popa
lahf
pop
data16
leave
or
mov
js
add
mov
fwait
lods
cld
xchg
sbb
pop
mov
imul
dec
into
mov
pop
add
pop
shr
jns
mov
cmp
dec
jecxz
sub
mov
xchg
pushf
mov
adc
leave
cltd
pop
sahf
je
insl
xchg
mov
xchg
jp
out
or
lret
and
inc
sub
negl
movsb
mov
in
dec
sbb
jl
fwait
je
mov
jecxz
imul
shlb
clc
ljmp
lock
sbb
aaa
fcmovne
clc
andb
stc
test
cmp
xchg
testl
sbb
test
pop
adc
sbb
mov
int3
sub
cmc
lods
mov
xor
push
add
ja
lcall
fldl
in
push
push
sub
mov
ret
push
sub
adcb
adc
mov
ja
xor
jge
add
xor
mov
fdivl
test
push
inc
sub
cmp
mov
sbb
inc
fisubrs
and
std
aas
mov
xor
jecxz
fdivp
dec
sbb
lods
fbld
pop
aas
jo
jbe
jb
jmp
nop
add
iret
lods
leave
push
shlb
pushw
cmpsb
xor
jne
jb
jecxz
and
xor
dec
dec
sub
loopne
sub
in
loope
out
rclb
or
mov
into
mulb
imul
pop
cwtl
xor
xor
xor
mov
mov
add
inc
sub
jl
pop
mov
xor
inc
cmp
pop
sub
jmp
repnz
in
inc
jns
lea
push
xor
out
jmp
mov
repz
dec
out
arpl
pop
arpl
mov
sub
mov
jp
sbb
mov
sti
pushf
aas
aad
pop
push
inc
pop
repnz
push
outsb
std
xchg
dec
push
repz
mov
push
andb
lods
ret
fldenv
pop
daa
popl
mov
push
fmull
cmp
push
sub
and
movsb
out
push
xor
sbb
bound
sub
push
fisttps
cmc
cs
rolb
dec
arpl
add
sbb
stos
and
push
int3
test
cmp
sbb
sar
popf
je
cmp
jmp
in
daa
sub
shl
enter
mov
adc
cmpsb
xlat
sbb
mov
pop
outsl
jbe
cmp
lock
mov
or
loopne
mov
flds
sahf
and
lea
rol
and
or
lcall
xchg
push
in
mull
pop
in
test
inc
xchg
addr16
lds
fsubs
mov
mov
lods
cmp
mov
repnz
addr16
mov
dec
dec
jns
add
sbb
dec
cltd
ljmp
mov
out
jmp
mov
cltd
cmc
cmpsb
mov
cmp
cltd
jp
sbb
int3
gs
imul
sub
notb
ret
nop
adc
mov
push
adc
sti
dec
pop
mov
add
ret
add
pop
js
fildl
fsubr
inc
xchg
push
xchg
sbb
cmpsb
iret
daa
fldt
and
sahf
iret
mov
shr
push
adc
push
stos
inc
imul
ds
shl
inc
daa
fiaddl
push
pop
xchg
xor
pop
out
pop
dec
div
push
popa
fisubs
nop
iret
js
bound
jno
push
pop
cmp
enter
fsubl
es
add
call
lret
roll
xlat
cmpb
std
mov
push
pusha
pop
sub
xchg
pop
addr16
dec
xlat
bound
xor
fnop
mov
fildl
mov
push
xor
int
jl
jno
dec
mov
jae
cwtl
add
out
inc
mov
inc
pop
js
fisubl
insl
mov
lahf
out
int
divl
fnsave
bnd
mov
in
jp
xchg
jno
lahf
mov
movsb
lahf
jns
jne
mov
mulb
and
std
adc
scas
jp
add
jns
adc
fimull
stc
cmpsl
mov
adc
in
mov
xor
sub
pop
xchg
into
sub
xchg
sub
test
adc
test
jb
cwtl
sub
xor
or
dec
shlb
cmp
aaa
out
insb
xor
jge
std
lahf
scas
dec
cmovns
les
or
pop
xor
mov
movsb
push
outsb
or
dec
push
sbb
mov
inc
mov
in
sbb
adc
jne
jnp
inc
jmp
jecxz
inc
insb
aad
cmpsl
stos
mov
push
pop
mov
jne
push
rclb
arpl
lock
mov
push
and
sahf
mov
dec
insl
scas
fnstenv
inc
popa
sub
jne
mov
aas
jle
and
into
adc
cltd
call
sti
in
xor
into
sbb
icebp
lcall
addb
int
cltd
sbb
shlb
jnp
pop
fs
mov
sub
stc
lret
cmp
faddl
mov
leave
adc
mov
add
lcall
fs
int3
insl
ficompl
adc
andb
sub
mov
mov
test
push
xor
ss
fmuls
push
sbb
jns
jo
push
lock
jmp
and
js
mov
pop
loope
sub
jecxz
xchg
inc
ja
jl
xchg
or
rol
mov
pop
inc
fldl
pop
es
jecxz
in
xorl
iret
hlt
movsb
idiv
cmc
mov
adc
cmovo
mov
push
cmpsb
es
int3
addr16
jno
mov
cli
repnz
ror
inc
into
push
addr16
xchg
jbe
arpl
insl
inc
test
imul
adc
and
addr16
aas
cmp
xchg
jo
or
add
loop
xor
pop
inc
jge
inc
push
leave
das
xor
addr16
mov
dec
lods
loop
jecxz
inc
fidivrl
out
nop
inc
out
lds
insb
sub
mov
popa
out
jmp
sbb
push
xchg
sbb
movsb
pop
xor
mov
es
lods
add
xor
add
push
stos
dec
pusha
inc
xchg
and
pop
out
xchg
inc
cmc
add
pop
inc
es
fstpl
sub
sbb
add
jl
je
mov
sbb
dec
mov
or
mov
int3
aad
jns
pushf
jmp
fcmovnu
xlat
lock
cmp
js
mov
xor
mov
push
lahf
dec
fidivs
scas
inc
das
jbe
lret
push
ja
std
fmull
test
jge
loope
pop
mov
iret
sub
fcompl
pop
inc
mov
push
mov
scas
cmp
jns
dec
cmpsl
aas
fdivl
pop
xchg
push
aas
fidivrs
mov
repz
ret
outsb
rorb
loope
cmpsb
jge
inc
mov
int3
sub
iret
scas
jno
inc
mov
call
clc
iret
xchg
xchg
inc
repz
mov
lahf
out
sub
stos
lahf
mov
xor
sub
mov
cmc
jecxz
rcrl
xchg
sbb
test
lret
cld
pop
mov
popf
push
and
sub
lahf
pop
cmp
mov
popf
fwait
mov
mov
scas
cmpl
mov
rcr
jbe
stos
push
sbb
es
sbb
mov
std
ret
inc
loop
pushf
cmp
xor
lret
or
and
sarb
stos
popl
push
lret
jbe
push
mulb
inc
mov
sbb
fs
cmpsb
sbbl
dec
imul
dec
cld
and
enter
loopne
sarl
add
jno
jle
es
out
xchg
in
inc
mov
push
push
mov
adcl
sbb
shll
ja
push
outsl
mov
pusha
mov
push
bound
lock
dec
xchg
repz
lcall
daa
lods
test
cltd
movsl
cmp
jp
test
sub
sbb
pop
xor
stc
rcll
adc
or
fs
pop
iret
push
rcl
push
mov
mov
push
cmpsb
dec
mov
push
fs
shll
dec
cs
lcall
push
sbb
shll
adc
mov
and
rcrl
sbb
adc
jb
lds
js
loop
cs
pop
xor
mov
jbe
cmp
sahf
iret
cmp
sbb
lret
test
cmp
sub
xor
push
add
aam
add
lret
xor
mov
outsl
aaa
xchg
hlt
or
and
mov
aam
push
dec
adc
pop
xchg
xchg
mov
sub
and
movsl
fcomp
bound
movlps
sbb
leave
push
cmc
jl
test
or
test
mov
cwtl
hlt
out
call
icebp
stos
mov
xor
cmpsl
jp
adcb
outsb
mov
loopne
pop
pop
ss
clc
cld
xchg
loop
mov
pop
inc
or
adc
xchg
rolb
mov
fstp
es
mov
sub
xorl
push
mov
pop
mov
adc
dec
stc
push
xchg
scas
jbe
xchg
adc
or
jecxz
jl
hlt
cs
mov
cmp
jmp
push
sbb
je
jnp
or
pushf
pop
mov
sbb
icebp
enter
out
mov
pop
imulb
mov
lds
cmp
push
fwait
mov
inc
jl
hlt
adc
jge
jbe
lea
add
mov
in
push
mov
push
fdivl
lret
sbb
clc
push
test
cld
gs
sbb
popf
icebp
xchg
xchg
jle
aam
stc
add
mov
repnz
jp
out
rorb
je
in
push
lret
push
mov
push
pop
mov
sarl
xor
mov
xor
movsl
popf
mul
adc
cmp
cmpsb
and
cmp
mov
jbe
mov
xchg
rolb
movsl
notl
mov
scas
xlat
push
cmp
adc
xlat
cmp
stc
aad
pusha
cli
subl
cmp
cltd
imul
add
ret
and
loopne
repnz
inc
data16
jmp
xchg
pop
sbb
mov
lock
fisubl
mov
hlt
sub
ret
mov
cmp
ret
sub
fmuls
lds
or
push
in
dec
inc
push
push
popa
add
lock
or
add
nop
adc
lods
push
dec
jb
fldenv
daa
sbb
test
daa
test
iret
cld
mov
ss
jb
mov
xor
test
aam
inc
mov
test
inc
faddl
and
and
cmpsb
dec
xor
not
and
popf
movsb
int
pop
xor
xchg
mov
jno
cmc
das
ss
and
mov
pusha
movsl
fsubp
test
xchg
sub
mov
mov
ss
fsub
stos
lret
and
out
repnz
sbb
daa
dec
xchg
pusha
enter
orb
cs
pop
pop
fimull
push
in
cmp
pop
icebp
orb
arpl
or
xor
or
or
repz
out
xor
jnp
call
xchg
imulb
push
lret
xchg
cs
int
sti
scas
xchg
stos
ljmp
cmp
roll
dec
test
jnp
xor
jae
js
sub
mov
sbb
shr
call
mov
mov
std
imul
cmp
loope
jnp
or
stos
cmp
lahf
or
jb
sbb
adc
adc
mov
push
adc
pop
test
cmp
sbb
aam
icebp
jae
jne
inc
outsb
incl
lea
pop
push
dec
dec
xchg
fbstp
mov
and
hlt
stos
sbb
repnz
fwait
jle
add
xchg
out
bound
dec
jo
xchg
jns
gs
inc
mov
mov
inc
lret
dec
cwtl
dec
adc
adc
inc
pop
xchg
ret
jnp
push
aaa
loopne
and
jge
loop
jmp
add
mov
pop
ficoml
xor
sbbb
xchg
xchg
mov
mov
nop
mul
dec
push
and
flds
dec
and
addr16
dec
sbb
repz
rcll
jle
shll
in
pop
inc
add
dec
subb
out
iret
adc
xor
imul
inc
jg
outsb
shlb
in
cmc
add
xor
inc
pusha
or
jae
mov
cmp
sbb
xor
jo
ret
mov
gs
sub
dec
sbb
inc
pop
fwait
hlt
cmp
ficomps
or
aaa
cwtl
inc
int3
mov
shl
pushaw
or
sbb
xchg
in
incl
aam
add
mov
pop
in
xor
call
sub
pusha
xchg
mov
les
ljmp
out
xchg
pop
pusha
ds
cmp
popf
mov
or
lea
jmp
les
sub
xor
repz
loope
cltd
leave
mov
jnp
xor
cld
pop
jb
mov
pushf
jmp
push
jns
inc
jno
out
sbb
jle
xor
aaa
aad
jge
inc
fwait
jge
ret
dec
out
dec
jnp
ret
inc
mov
jae
cmp
xchg
fwait
jae
jmp
out
or
loop
inc
pop
xchg
outsb
sahf
ret
or
ret
fdivl
push
xor
mov
cld
and
pop
xchg
jns
aam
xor
adc
cld
sub
ret
pop
and
ss
gs
mov
jmp
push
pop
xor
xor
pop
mov
inc
lret
push
lds
inc
dec
adc
cmpsb
adc
xchg
popf
in
outsl
fldt
sbb
inc
test
jnp
adc
leave
or
dec
jae
into
arpl
subl
hlt
test
and
test
jb
cmp
adc
out
mov
mov
mov
xlat
bound
push
mov
or
dec
js
into
jbe
xchg
xor
pop
adc
fwait
xchg
pop
xor
sub
xlat
rcl
push
scas
loop
xor
pop
lahf
inc
in
adc
mov
sbb
mov
iret
in
sbb
loopne
push
lret
out
sbb
in
int
in
fistpll
into
aaa
or
pop
jecxz
dec
mul
xchg
xor
clc
dec
push
testb
adc
sub
mov
mov
push
das
mov
push
lods
inc
mov
push
sub
sbbb
jae
mov
lods
sub
and
push
test
mulb
loop
mov
sbb
decb
sub
mov
fimuls
sub
cmpsb
xor
lods
mov
rolb
ret
cld
loope
imul
cmpsb
imul
shl
popl
lock
xor
xorb
or
jl
jo
ss
inc
cmp
fs
pop
mov
xlat
push
movsl
mov
or
ret
lahf
movsl
je
and
stc
std
jmp
jecxz
pop
inc
inc
push
iret
inc
xchg
test
pop
add
in
or
jl
sbb
cmp
js
aam
push
loop
and
repnz
pop
xchg
enter
adc
xchg
mov
out
hlt
sbb
ss
inc
jmp
mov
icebp
xorb
or
cmpsl
or
data16
and
out
lds
in
or
jmp
sub
sub
xorl
add
dec
dec
aad
ret
xor
pop
push
jns
sbb
jp
enter
gs
inc
repz
xor
or
inc
dec
sbbb
bnd
xchg
xor
jns
jns
test
idivl
lret
xchg
fs
icebp
xchg
dec
ja
out
mov
sbb
jno
test
out
hlt
adc
cmpsl
mov
shll
enter
filds
stc
bound
xchg
jne
adc
mov
enter
repz
cs
and
and
add
mov
cmp
lcall
dec
mov
repz
mov
idivb
pop
cld
xchg
xchg
test
push
shll
mov
adc
push
cmp
dec
repnz
pusha
iret
xchg
mov
fiaddl
xchg
stos
stos
inc
dec
int
push
mov
dec
mov
shrl
and
inc
mov
jp
adc
mov
or
scas
xor
jns
push
adc
xchg
movsb
dec
and
jae
jne
cmp
in
inc
pop
stos
and
fwait
xor
leave
dec
mov
cmp
aad
cmpsb
pushf
cmp
jno
push
add
mov
dec
xor
bound
xor
ret
sbb
inc
dec
test
dec
pop
test
add
data16
pop
mov
lea
push
and
adc
add
push
pushf
dec
xor
sbb
or
sbb
movsb
jl
bound
inc
dec
jnp
or
sub
mov
ds
jo
inc
dec
mov
lcall
ss
mov
jg
inc
push
xor
push
xor
dec
pop
xchg
icebp
addr16
push
sbb
inc
icebp
cltd
sbb
repz
ss
push
mov
repnz
or
in
xchg
arpl
cli
ljmp
sub
cmp
into
fcomip
mov
ja
mov
or
jnp
jmp
xchg
push
stos
dec
pop
xchg
je
jle
push
nop
cs
and
and
rorl
pop
lret
sub
adc
loopne
cmpsb
outsl
and
aaa
xchg
sbb
jno
shl
add
out
add
cmp
mov
and
dec
fs
loop
lds
in
add
pop
push
ss
mov
jg
jp
ret
xlat
push
mov
cmp
call
jg
xchg
rol
xchg
adc
lds
or
jge
mov
shlb
out
sbb
sub
fistl
call
mov
xchg
adc
mov
daa
cmp
adcb
repz
inc
push
lods
sub
mov
xor
xor
dec
mov
jge
mov
inc
dec
mov
sub
sbb
xlat
jno
push
cmpsl
sahf
popa
andl
or
test
and
xor
roll
xor
out
mov
sbb
adc
mov
jne
jo
inc
sub
scas
sub
push
ljmp
sub
sub
jno
add
aam
stos
xor
push
insl
stos
cs
jg
or
xchg
sahf
es
fwait
inc
xlat
hlt
stos
movl
rcl
pop
outsb
pop
jmp
test
jb
clc
mov
cmp
mov
mov
adc
sub
sub
or
pop
pop
gs
and
mov
data16
and
pop
mov
fxch
in
jne
jnp,pt
ja
inc
pusha
xchg
scas
mov
lock
inc
mov
out
add
sub
dec
jnp
in
data16
sbb
jb
jno
gs
sub
bound
push
into
pop
je
clc
cld
jmp
add
dec
push
jmp
xchg
fwait
mov
or
aaa
movsl
andb
mov
pop
dec
dec
or
jo
insl
stos
hlt
popa
loopne
test
and
test
decb
mov
cmp
les
lea
cmp
pop
dec
adc
or
subl
sti
mov
pusha
mov
xor
sub
push
push
cmp
adc
add
or
std
xor
jecxz
fwait
movsb
push
inc
jp
gs
fiadds
mov
loopne
sub
jl
cmp
pop
or
sbb
mov
aam
test
ljmp
ficomps
jl,pt
clc
adc
sub
jo
ds
dec
stc
add
mov
in
cmp
stos
adcl
and
inc
cli
mov
out
xchg
push
xchg
fdivr
push
in
push
div
mov
loop
jb
cmc
out
jecxz
and
out
jo
daa
pop
repnz
addr16
adc
or
xchg
cli
fsub
push
cmc
lret
ret
ja
push
out
pop
mov
jl
pop
addr16
cmp
aam
mov
mov
out
int
push
jmp
cmp
test
insl
or
andb
fs
lods
inc
add
test
fsubrl
and
aas
mov
sbb
nop
cli
dec
cmp
jo
les
lock
jae
xchg
push
or
hlt
lea
loop
into
sti
xchg
adc
or
xchg
and
sub
mov
pushf
test
lds
sbb
adc
je
sub
ret
or
xor
imul
push
sub
into
xor
std
xor
adc
aam
add
and
xchg
mov
iret
push
jbe
fcompl
lcall
test
test
adc
mov
rorl
je
ret
xchg
push
ret
pusha
pop
add
je
jecxz
inc
sbb
dec
enter
cli
add
subb
mov
add
xchg
sub
sqrtps
xchg
push
push
movsb
out
aam
lods
xchg
cltd
rcrl
xchg
loopne
stc
adc
xchg
je
int3
cmp
jp
out
add
bts
mov
adc
out
adc
push
dec
mov
add
push
jge
xor
lea
orb
mov
mov
push
movsl
dec
insb
cmp
jmp
mov
add
movsb
push
cmc
out
fdivrs
dec
sbb
inc
inc
sub
push
xchg
lahf
xchg
stc
pop
mov
les
scas
pushw
sub
out
lods
add
pop
insb
add
dec
mov
stc
pop
add
sbb
dec
stos
push
ljmp
outsl
push
xchg
pop
scas
inc
ret
and
push
addl
mov
jno
inc
and
lret
aam
add
xchg
xor
mov
mov
xor
enter
inc
mov
push
int3
clc
inc
icebp
mov
adcb
mov
mov
jnp
sarl
dec
dec
inc
sti
or
fldenv
xchg
mov
ja
mov
jo
outsl
sub
inc
shl
jecxz
aaa
or
push
inc
add
fwait
popa
and
mov
cmp
repnz
addr16
push
aam
pop
and
lods
ja
loopne
sub
add
std
dec
jg
add
inc
cs
int3
jns
lahf
outsb
lea
mov
push
dec
test
mov
or
jne
push
popf
inc
add
cltd
add
xor
jecxz
stos
dec
inc
sahf
mov
ret
cmpsb
outsb
add
push
pop
in
dec
jno
sbb
mov
scas
and
xor
subl
leave
pop
pop
ss
lods
pop
std
dec
stos
mov
dec
cld
insb
pop
orl
insl
pop
in
wrmsr
xor
shrb
pop
push
lods
fs
mov
fdiv
fdivrs
mov
in
adc
adc
xor
mov
dec
push
jno
mov
ret
sub
pop
aad
aam
pushf
inc
fwait
jl
fistpl
test
cmpsb
aam
out
dec
scas
adc
mulb
mov
sbb
mov
fsubl
movb
jg
jl
dec
cmp
push
or
jne
ss
mov
push
pop
inc
rclb
loope
mov
cmpsl
rcrb
mov
mov
das
in
cmpsl
and
jl
inc
or
pop
repz
hlt
add
lret
dec
stos
xor
push
cmp
sub
push
enter
push
fbld
mov
or
mov
mov
insl
fsts
fs
push
mov
mov
out
jge
jne
iret
pop
adc
adc
adc
cmc
push
in
aad
jle
inc
es
jp
push
out
js
mov
and
adc
ficoms
and
andl
inc
shlb
test
xor
jecxz
pop
push
mov
imul
fisubs
push
dec
je
sbb
cs
mov
xchg
idivl
dec
rcll
sub
out
out
jns
rorl
push
fcompl
dec
out
inc
push
pop
adc
push
faddp
stos
notb
jne
into
sahf
mov
sahf
cmp
jae
daa
jecxz
arpl
popa
jb
mov
outsl
lret
loope
aaa
aas
lret
int3
shll
sarl
pop
pop
push
lds
add
or
out
mov
mov
test
hlt
jecxz
test
test
xchg
and
call
and
sub
add
insb
dec
pop
jl
jnp
xchg
in
jnp
test
xchg
xchg
xchg
push
das
cld
pop
shufps
loopne
mov
or
fs
inc
pop
nop
aad
insb
mov
jmp
xor
sbb
out
mov
dec
jl
cmp
mov
cmc
cmp
ja
popf
mov
lret
dec
mov
fadd
in
cmpl
sti
jl
inc
mov
aam
gs
push
add
iret
jle
jl
or
jmp
jge
lods
mull
jns
pusha
js
jp
dec
ja
mov
cwtl
pop
inc
es
jge
lea
jge
mov
int3
mov
push
mov
add
bound
rorl
mov
loopne
and
sub
insl
mov
btr
in
imul
xor
sbb
outsb
push
in
cmp
mov
pop
sub
adc
leave
cmpsl
pop
jge
adc
roll
jge
or
jns
push
and
adc
add
iret
cs
jmp
arpl
pop
push
jp
mov
cli
das
xor
pop
xor
daa
cmc
outsl
lods
jg
dec
or
xchg
xchg
mov
add
les
inc
or
mov
push
pop
cmp
mov
push
lahf
mov
cltd
popf
cld
lea
lea
sub
nop
or
test
cmp
mov
cld
les
repnz
sub
jo
stos
lret
flds
sub
lcall
xchg
mov
cmp
fcomps
mov
ret
je
push
fsubl
imul
push
jne
popf
ja
pushf
movl
insb
pop
dec
mov
int
mov
es
xchg
loop
in
movsb
andb
or
dec
lds
fwait
popa
das
int3
hlt
mov
insb
cmpsl
and
push
lock
push
add
fidivl
icebp
jmp
jae
xchg
xchg
and
mov
and
ret
cmpsb
call
and
mov
cs
mov
test
fwait
jecxz
or
aam
mov
loop
test
scas
cmp
jl
gs
push
pusha
aam
or
sbb
mov
mov
or
call
xchg
inc
push
xor
cmpsl
mov
and
pslld
aad
push
mov
inc
rcll
sti
push
out
jne
dec
inc
rolb
loope
cmp
lret
mov
leave
das
pop
movsl
mov
dec
daa
sub
jb
jl
lea
adc
addr16
shrl
test
fcmovne
mov
hlt
lret
sbb
loop
js
daa
rcll
mov
mov
bound
dec
loopne
mov
fsubs
add
into
inc
cmp
in
lcall
push
std
popf
outsl
popf
xor
mov
jo
or
inc
cmp
xchg
ljmp
push
sub
push
xchg
cmp
ret
rorl
fsubrs
mov
cli
xchg
xchg
arpl
ret
pop
ror
popa
popa
sub
mov
cmp
add
test
push
fisubrs
in
xchg
add
dec
jmp
call
addr16
jp
std
jnp
mov
dec
cmc
fadds
popf
push
inc
sub
ret
cmp
sub
and
add
xchg
dec
scas
loopne
sbb
sbb
int
adc
imul
cmp
dec
xchg
and
lods
out
xchg
outsb
xchg
push
test
out
stos
ret
test
cmp
test
xchg
ss
push
leave
repz
mov
and
push
bound
dec
jae
popf
lea
popf
push
push
sub
inc
outsb
or
ds
jl
xorl
lods
adc
and
cmp
test
sbb
nop
push
inc
adc
sbb
jecxz
mov
ret
inc
xchg
stos
fstpt
cli
push
out
fnstenv
mov
inc
dec
cmc
iret
jo
and
lahf
ljmp
or
imul
shll
ret
int
in
das
je
add
adc
pusha
push
xchg
mov
jb
cmp
xchg
xchg
addr16
ficoms
xchg
jno
add
cld
fldenv
gs
pop
xchg
lods
icebp
iret
mov
jbe
add
orl
jle
icebp
push
mov
xchg
lret
dec
clc
pop
inc
fwait
das
popf
sub
fwait
sbb
andl
mov
rcl
cmp
sub
and
mov
roll
pop
cli
dec
data16
add
sub
ret
and
mov
bound
mov
sub
mov
jl
sub
and
jo
sub
fldenv
jecxz
add
or
jmp
cvtdq2ps
fcomps
add
mov
push
inc
jbe
inc
mov
dec
push
aas
fdivp
xor
shl
or
mov
ficomps
jmp
push
fldt
or
sbb
mov
inc
ljmp
push
xchg
mov
stc
data16
std
nop
mov
fwait
and
jle
dec
cmp
nop
clc
ja
in
jno
and
iret
sahf
sbb
adc
jmp
pop
add
movsb
and
mov
adc
xchg
push
loope
adc
xlat
dec
xchg
pop
loope
push
je
cmp
and
loope
repnz
andb
cmp
jb
aam
mov
pop
jns
mov
add
add
add
lock
jne
push
pop
cmp
jp
mov
es
call
jl
stos
jp
out
mov
hlt
and
xchg
push
into
repnz
and
int
into
mov
sahf
sti
pop
pop
pusha
out
movsl
xchg
aaa
repz
xor
sub
lods
out
sar
ljmp
and
outsb
xor
pusha
rcr
out
sti
lods
dec
fstps
mov
idiv
int3
stos
cmp
dec
mov
mov
cmp
push
xchg
sti
mov
and
push
outsl
jp
into
jp
mov
aad
ss
dec
ss
out
pop
out
loop
sbb
call
clc
and
cmp
mov
xor
lods
lret
inc
inc
int3
xchg
enter
dec
cmc
adc
xchg
fs
mov
rcl
cmp
insl
inc
mov
test
pushl
dec
test
jl
pop
shl
inc
add
shrl
add
and
mov
mov
or
inc
pop
xor
das
push
loop
jne
stos
xchg
jmp
je
dec
adc
out
cmp
pop
repnz
aam
into
sub
stos
jg
fidivrs
mov
add
rorb
cwtl
pop
cs
aam
sarb
insb
sub
push
jmp
ret
pop
xchg
and
dec
mov
xchg
and
aad
jg
imul
arpl
push
and
pushf
pop
cmp
push
call
ja
xlat
mov
shll
inc
mov
out
dec
in
pop
dec
inc
pop
movsb
lea
repz
call
rclb
inc
shll
roll
pop
in
xchg
in
and
dec
xchg
pop
pop
iret
jne
pop
xchg
icebp
xchg
sbb
cltd
dec
cmp
enterw
sbb
add
mov
repz
pop
loop
jns
test
cmp
and
stos
inc
mov
push
cmp
inc
mov
or
pop
pop
pop
adc
mov
pop
scas
mov
dec
push
push
in
jge
cmp
pop
test
scas
jecxz
mov
bound
mov
gs
int3
mov
popa
add
cmpsb
aaa
add
mov
mov
push
jno
ja
hlt
js
pop
xchg
fbstp
int
pop
sub
repnz
pop
inc
fsubrs
jp
add
outsl
ss
dec
mov
test
dec
cmp
test
xor
adc
inc
mov
or
and
dec
sub
mov
and
leave
ror
sbb
push
or
pushf
mov
push
ja
mov
mov
out
ds
sub
rcl
clc
es
fldcw
xchg
ret
bound
in
dec
icebp
data16
jecxz
insl
imul
pop
sarl
cltd
xor
xchg
loop
hlt
cmpsb
pop
cmpsl
lock
idivl
into
xchg
scas
xor
xchg
cmp
xchg
aad
fsubrl
push
ljmp
add
in
sub
ds
pop
aaa
xchg
inc
cmp
pop
cmpsb
popf
ss
js
pop
push
push
imull
idivb
aam
push
push
pop
pop
pop
loope
inc
xor
mov
lret
pop
out
dec
lock
mov
sub
mov
out
mov
dec
out
inc
sub
in
inc
mov
imul
ret
fs
jle
and
add
push
jnp
shrb
call
mov
jae
mov
in
inc
xor
repz
sarl
dec
adc
pop
les
mov
cmpsl
mov
jge
lret
and
adc
xchg
in
or
repnz
add
lods
lods
xor
stos
pop
das
out
and
xadd
icebp
push
push
push
pop
pop
test
aad
xor
push
dec
daa
cmp
push
and
ljmp
out
scas
and
jb
aaa
mov
addr16
flds
scas
cmp
adc
sub
sub
mov
push
mov
cmp
sbb
fdivl
cmp
mov
in
inc
test
mov
popa
pop
not
xor
mov
push
add
shl
or
mov
xchg
sub
clc
lds
js
push
push
movsb
out
stc
inc
inc
mov
pop
pushf
stos
mov
and
xchg
jb
or
jnp
push
test
jno
js
fucomp
pop
das
shrl
call
cmpl
mov
mov
outsb
insl
pop
inc
xchg
or
jnp
js
push
insl
loop
dec
or
xchg
adc
cs
sbb
call
mov
mov
movsb
out
and
jl
addr16
mov
xchg
mov
fmul
adc
loopne
dec
adc
xchg
push
or
out
cld
loop
push
test
mov
adc
sub
aas
add
or
adc
popf
push
push
xchg
sub
fisttpl
js
jg
xchg
pop
push
and
pushf
mov
rcrb
fisttpll
pop
out
or
push
inc
stos
cmp
mov
dec
mov
aam
or
in
sub
lods
sbb
dec
std
mov
xchg
inc
xor
xchg
jns,pt
cli
cmp
xchg
sbb
push
mov
mov
mov
cli
inc
sbbl
jbe
lahf
adc
shlb
aaa
sub
ret
loopne
xchg
mov
sbb
inc
sar
mov
enter
mov
lods
mov
cmc
lret
int3
push
stos
jnp
ds
cld
loop
push
outsb
and
out
cmp
and
mov
dec
and
cmp
out
lret
sbb
das
mov
mov
sahf
ret
mov
ljmp
pop
or
bound
mov
aas
pop
mov
sti
sarl
xlat
inc
sar
cmp
in
mov
mov
xchg
js
push
cmp
pop
mull
xor
pop
or
mov
mov
mov
stos
cmpl
sbb
adc
or
add
imul
loop
pop
std
jno
pop
jo
push
push
push
cmc
mov
mov
cmp
mov
mov
jecxz
mov
lock
mov
lock
sbb
or
jno
mov
pop
sub
lcall
cld
xchg
push
popa
gs
mov
jecxz
and
mov
lahf
lods
jbe
or
outsl
rcll
psraw
fidivs
jle
dec
pop
into
xchg
rolb
push
dec
xor
jge
cld
and
std
mov
jae
jge
je
fs
stos
roll
xchg
les
ficomps
es
pop
add
mov
mov
lea
push
es
test
mov
sarl
hlt
and
push
inc
jae
add
ret
roll
fsts
pop
bound
mov
std
jge
imul
mov
xchg
cmp
sahf
cwtl
jae
jecxz
ret
jne
mov
mov
or
mov
outsb
imul
inc
jmp
insb
mov
xor
mov
inc
jns
push
push
in
pop
xchg
xchg
xchg
or
inc
or
dec
xchg
inc
dec
popa
sti
insl
mov
push
stos
es
aas
in
push
cwtl
rcrb
push
rorb
mov
loop
es
leave
jp
loope
and
mov
sbb
adc
pop
xorl
fwait
lea
xor
pop
or
outsl
enter
jg
imul
dec
rol
addr16
setle
mov
mov
sbbb
mov
into
stos
xchg
xchg
js
mov
outsl
mulb
ret
sub
mov
sbb
push
or
out
push
ds
ret
dec
sbb
ret
test
ss
or
mov
addr16
iret
fwait
xor
daa
mov
dec
cmpsl
mov
pop
xor
arpl
sti
sbb
test
sbb
divb
popa
cmpsl
adc
xchg
pushf
insl
ret
sub
pop
aad
sbb
icebp
pop
or
stos
cmp
sbb
adc
loop
xchg
fcmovb
sbb
mov
pop
sahf
fwait
or
in
mov
cmp
jbe
imul
mov
jae
cmp
into
stos
cmpsl
inc
sbb
xor
push
lock
or
mov
push
dec
gs
in
shll
push
jnp
aas
mov
mov
bound
mov
or
imul
fiadds
rclb
pop
andb
and
add
sbb
inc
jle
sti
jp
xor
repnz
lret
mov
push
pop
sbb
testb
dec
xchg
and
aaa
out
lcall
mov
push
cwtl
xor
and
jle
fildl
cmp
iret
cmc
js
dec
lea
jl
test
inc
xchg
loope
lods
jbe
cmp
scas
cmp
pop
push
dec
arpl
sub
fmuls
add
pop
or
xor
ret
mov
or
xor
pushf
jle
and
dec
sbb
mov
std
jb
pop
mov
or
xorl
test
or
movsb
mov
pop
daa
lds
ret
jno
rolb
cmp
lcall
xchg
punpckhwd
rclb
push
and
inc
sub
inc
ja
pop
xor
and
loope
in
bswap
dec
xchg
cwtl
dec
adc
lock
pop
into
cwtl
les
mov
pop
lea
movsb
clc
push
jp
mov
roll
les
xchg
lds
lods
loop
jne
and
mov
dec
push
pop
jns
inc
and
leave
inc
xor
in
jns
xchg
repnz
xchg
xor
or
movsl
aas
out
mov
push
data16
or
dec
adc
add
push
xchg
or
jb
ret
mov
cmc
pop
lahf
and
mov
adc
lea
addr16
xchg
adc
ret
repz
jl
jl
jmp
orl
fcmovu
xlat
clc
jo
pushf
les
push
push
xor
jbe
mov
insl
xor
dec
aaa
iret
lods
icebp
mov
subl
mov
out
jle
push
sbb
and
insb
iret
push
add
push
loop
into
or
bound
rcrl
pop
push
mov
cmp
cmpsb
lock
sbb
mov
xchg
loopne
inc
les
fdivr
enter
rcrb
sbb
sti
xor
mov
xchg
cmc
jmp
fisubl
pushf
nop
mov
std
iret
std
dec
jle
sbbl
jo
fisttpll
push
mov
movsb
leave
mov
adc
movsb
outsl
outsl
pushf
xchg
fimull
xchg
mov
cmp
pop
push
insl
pop
ljmp
jno
or
arpl
outsb
and
pop
idivb
xor
mov
push
mov
pop
iret
sub
sbb
call
sub
adc
fidivrs
mov
dec
scas
ss
sub
stos
notl
or
cmp
sub
cmp
and
stos
mov
data16
andl
leave
ss
imul
adc
cltd
jp
add
mov
push
sbb
pusha
aam
test
cmpsl
insb
inc
jo
mov
frstor
push
or
cs
or
sti
add
lahf
adc
aaa
add
data16
pushf
test
imul
mov
hlt
test
fistpll
sub
dec
push
into
popf
divb
jbe
cltd
mov
sbb
cmp
or
shl
dec
pop
xchg
popa
dec
lods
ud1
push
bound
mull
pusha
cmp
jns
lock
fs
jmp
fwait
mov
gs
mov
inc
iret
movsl
stos
sub
add
cmp
mov
outsb
sub
loope
in
dec
mov
sub
mov
in
aam
or
jns
xor
pop
aas
jl
in
mov
cmp
shr
ret
push
enter
loope
or
lret
cmpsb
movsl
insb
push
mov
jp
mov
fimuls
inc
es
jo
xor
in
sbb
aas
cmp
mov
sub
mov
push
dec
mov
enter
hlt
push
cmp
andl
inc
lds
mov
rcl
mov
aam
pop
fldenv
shll
dec
jae
jl
sbb
loope
adc
test
lret
mov
nop
and
test
dec
movsl
inc
mov
ljmp
addr16
xchg
lds
stc
xchg
mov
sbb
mov
aas
pop
adc
int
js
leave
js
mov
sar
jno
xchg
cwtl
sti
jl
xchg
inc
xchg
pop
or
adc
gs
jne
push
mov
sbb
shll
sub
dec
rcll
sahf
add
add
in
hlt
dec
nop
loop
adcl
mov
xor
ret
ret
hlt
pusha
jb
sbb
arpl
push
add
and
sti
cs
out
adc
jo
cmc
jmp
sub
and
jbe
and
or
add
sbb
push
fmull
inc
cmp
and
lret
pop
aas
dec
sarb
jb
inc
mov
stc
xchg
push
outsb
cmp
xchg
cwtl
test
hlt
in
mov
lock
xchg
movsb
in
data16
or
push
mov
outsl
push
lcall
jge
or
cs
push
xchg
stos
xor
push
fwait
data16
insb
ret
push
call
jns
xchg
ss
shr
pop
adc
cmp
push
arpl
movsb
push
sti
xchg
mov
pop
repnz
aas
roll
xor
fwait
lcall
nop
xchg
test
pop
add
pop
add
push
push
dec
pushf
pop
mov
mov
mov
mov
or
inc
pop
test
cli
push
rclb
imul
lret
and
add
pop
aad
dec
mov
jl
orl
cwtl
ss
out
fsub
push
into
xor
sub
sub
cmp
test
int3
nop
jns
stos
sbb
pop
dec
out
arpl
dec
jno
sub
out
stc
cwtl
mov
push
int3
inc
xor
xor
xor
mov
sarb
pop
jle
pop
xchg
orl
xchg
arpl
or
fs
lret
adc
xor
push
mov
addr16
mov
das
lret
adc
scas
popa
imul
lret
cwtl
lret
jge
aaa
pop
test
and
out
pop
jmp
scas
rorl
xor
mov
add
xchg
or
cmp
dec
hlt
xor
jae
imull
mov
xchg
es
xchg
lahf
inc
setne
bound
jbe
das
cmpsl
jno
aas
lds
add
rcr
add
in
mov
ljmp
shlb
cmpsl
out
stos
pop
inc
inc
push
mov
and
movsl
stc
jg
cltd
lock
pop
js
push
addr16
mov
and
dec
push
jne
inc
pop
shrb
jmp
jo
cli
xorl
jmp
add
fucomip
mov
movsl
cli
pusha
iret
shll
add
add
mov
in
dec
mov
and
mov
stos
inc
iret
bound
popf
pop
pop
and
mov
loope
or
sub
jnp
fisttps
cmc
add
repz
sub
in
repz
adc
lret
insl
add
sub
push
dec
fnstcw
inc
cs
jb
inc
push
cs
dec
pusha
mov
ss
xor
roll
adc
lods
jae
push
shll
cmp
mov
xchg
dec
xchg
sub
movsb
not
inc
movsb
dec
int
out
test
movsb
add
dec
icebp
out
ja
or
fwait
xor
aam
fistps
aam
inc
iret
and
mov
into
ror
fnstenv
clc
sarb
sti
xchg
loopne
mov
xchg
lods
mov
cmp
xor
or
int
push
mov
dec
xchg
insb
fs
adc
pushl
out
pop
push
fldenv
inc
jecxz
cmp
mov
jb
inc
out
out
je
jno
dec
lcall
clc
ret
mov
pop
fwait
push
pop
xor
jle
xor
cmp
xchg
fbstp
sub
push
dec
sbb
pop
push
in
iret
mov
sub
add
fsubs
bound
int
add
pop
loope
pop
in
dec
stc
mov
mov
fsubrs
mov
push
js
call
mov
push
pop
push
into
sbb
pushf
xchg
jne
mov
sbb
mov
in
icebp
xor
jo
jg
pop
mov
add
cwtl
push
lods
int
push
je
pop
xchg
push
insb
sarl
cmp
fs
inc
jns
lds
mov
inc
add
les
cmpsb
cs
sbb
mov
pop
adc
sub
mov
adcl
pop
repz
ret
test
imul
adc
imul
mov
pop
sub
arpl
sbb
repnz
adcb
cmpsb
push
jbe
inc
insb
call
and
jmp
and
or
add
or
sbb
push
mov
test
pop
cmpsb
neg
sbb
or
test
repz
and
fldcw
mov
cmpsb
pop
adcb
inc
faddl
mov
pop
cwtl
sub
jo
insb
pop
adc
fisubrl
xor
popa
inc
push
adcb
pop
add
stos
fsubrs
xchg
xor
sti
dec
dec
sbb
fildl
test
sub
ja
test
pop
cmovbe
jns
imul
dec
aam
mov
lock
in
dec
leave
jo
popf
jo
cmc
mov
int
pop
sbb
add
sub
outsb
arpl
add
stc
push
shll
xchg
lret
movntq
xchg
push
scas
dec
filds
test
mov
dec
shrl
sbb
push
fidivrl
jne
loope
orb
popf
cmpsb
add
adc
cmc
movsb
lds
jl
sub
adc
dec
cmc
sub
stos
pusha
mov
sub
addl
movsb
push
lret
ret
sti
or
jmp
imul
cli
aam
aad
jmp
icebp
subl
aam
jl
dec
ficoms
and
repz
lret
mov
outsl
cmp
insb
jg
jns
rcll
push
out
arpl
dec
fst
adc
push
xchg
pop
or
outsb
sub
ja
insb
dec
addl
xor
lock
cwtl
movsb
int3
clc
imul
inc
mov
xchg
xchg
dec
mov
out
add
ret
push
insl
jnp
out
add
pop
in
jbe
and
gs
out
popf
jne
mov
scas
imul
sti
add
and
fldl
xchg
xchg
pop
ficomps
aaa
lds
lock
lds
add
sbb
rcr
sub
aaa
shl
push
daa
dec
mov
cmpsb
mov
mov
lret
test
outsb
sub
and
cmp
rorb
add
jp
add
mov
or
fisubrs
outsb
lods
dec
and
aam
loope
jl
mov
xchg
pop
aas
pop
push
add
rcll
mov
lods
push
roll
jl
lcall
adc
mov
cmp
mov
inc
repnz
and
adc
pop
jp
icebp
jle
lahf
pop
fmulp
or
iret
nop
clc
push
mov
mov
imul
test
push
adc
sbb
mov
insl
jp
cmc
data16
jnp
jns
add
mov
fisttpll
cmp
divl
les
jmp
bound
push
and
xchg
insl
movsl
inc
pop
cmp
inc
add
adc
mov
movsb
push
add
cmp
ror
push
sbb
xchg
dec
cwtl
ret
lods
loopne
mov
in
xorb
icebp
es
jecxz
lcall
pusha
f2xm1
jae
loop
aad
das
jl
shr
mov
lahf
dec
or
jb
inc
je
and
and
add
rcrl
sbb
pop
jg
add
popf
cmpb
pop
test
repz
mov
inc
cmp
mov
je
inc
sbbl
hlt
mov
in
aaa
pop
rorb
and
sbb
add
stc
xchg
add
mov
cmpsb
push
sbb
inc
mov
mov
shrl
pop
pushf
movsb
js
roll
cltd
push
fmull
mov
fnsave
lcall
sahf
jp
pop
sub
and
mov
mov
shlb
cmp
lret
xor
and
mov
xchg
shlb
pop
fmul
pop
fsubrl
mov
repnz
adc
push
cmp
jg,pt
testl
and
scas
loopne
mov
std
shr
pop
loope
cli
dec
rcr
inc
inc
xlat
arpl
lahf
sbb
cmpsb
int
jmp
push
dec
pusha
add
inc
sbb
popa
cmp
fs
xchg
sbb
xchg
pop
mov
inc
cwtl
imul
int3
cld
jae
out
icebp
jge
add
add
ffree
pop
out
mov
psubusb
stos
out
inc
mov
xchg
btr
pop
dec
xor
adc
inc
testb
or
std
mov
ret
dec
adc
mov
lahf
dec
xchg
xchg
sti
mov
je
jmp
xchg
andb
xor
ret
test
mov
cli
mov
inc
or
add
mov
enter
addr16
sbb
push
stos
aad
nop
sbb
insb
rorb
push
scas
push
xchg
adc
mov
xor
xchg
jp
cmp
sub
pop
dec
sub
push
aaa
out
out
and
sbb
shr
fnstcw
jmp
test
outsl
jp
stos
cmp
xor
dec
mov
add
xor
test
out
js
mov
cwtl
jo
jmp
inc
scas
and
sti
insb
out
lods
and
shlb
mov
or
inc
adc
add
popf
inc
mov
pop
jae
fcoml
std
pop
jle
mov
lret
fdivr
clc
rclb
xchg
enter
and
scas
push
xor
leave
jg
inc
lahf
add
jbe
in
pop
push
orl
inc
cmp
mov
ret
cmp
jmp
pop
xor
adcl
loope
arpl
xor
inc
loope
and
jl
rol
jmp
in
stos
loope
sub
ja
sbb
xchg
and
inc
jg
jmp
jecxz
cmpsb
test
js
jb
dec
dec
mov
addl
inc
jle
loopne
add
jbe
mov
fcomps
ss
mov
xchg
jno
sbb
cmpsb
roll
lods
mov
dec
push
jbe
push
inc
mov
pop
sub
and
decl
insl
and
adc
cltd
mov
sti
stos
lret
call
jbe
inc
xorl
rcrb
cs
cmp
mov
xchg
cmpb
sbb
dec
mov
movsl
push
jmp
ljmp
es
lret
fdiv
push
add
shrb
sub
daa
test
es
cmp
outsb
adc
mov
fisubl
xchg
push
cmpsb
dec
into
push
and
adcl
rclb
outsl
test
ret
push
mov
in
cmp
test
jmp
sbb
je
lret
inc
dec
xchg
andl
and
pop
cmc
dec
in
xchg
filds
imul
lods
mov
test
mov
mov
add
mov
and
iret
sub
pop
cmc
pushf
out
stos
fmull
scas
das
out
movsl
xchg
lods
fstps
cltd
push
imull
cmc
dec
stc
arpl
jne
xchg
adc
jl
test
out
lock
push
xor
shlb
ss
lret
or
sbb
mov
sbb
out
push
repnz
out
cmp
pop
mov
adc
mov
push
xor
push
lds
iret
or
rolb
jl
dec
lods
sbb
je
mov
or
mov
insb
sti
adc
mov
sub
popa
jae
sbb
sub
push
mov
and
fldcw
call
iret
lahf
imul
leave
into
pop
dec
mov
cld
xor
fwait
add
jns
jo
icebp
mov
jne
mov
jg
xchg
or
and
pusha
cmp
mov
scas
lret
lds
cmpsl
cltd
and
xor
adc
pop
ret
dec
rclb
andb
pusha
leave
xchg
add
andl
adc
hlt
in
inc
cmc
lret
adc
mov
mov
js
pop
sahf
xchg
push
jmp
xlat
pusha
and
jecxz
and
je
hlt
mov
sbb
cmp
sbb
in
pop
pop
fsubs
lea
pop
mov
insb
loopne
adc
movsl
push
ljmp
or
popa
inc
jl
sbb
add
and
adc
mov
inc
push
iret
inc
jnp
hlt
cmp
sbb
or
mov
jns
sub
jl
mov
lcall
xchg
sub
pop
and
push
clc
push
loop
add
stos
adc
scas
cmp
push
and
and
xchg
repnz
add
sbb
add
imul
push
arpl
pop
fdivl
and
inc
in
outsb
fstl
lods
std
int
clc
scas
pop
mov
jge
aam
push
push
pusha
xor
xor
call
je
fildl
sar
shll
aaa
sti
push
ds
ss
add
sub
pop
sub
ljmp
mov
mov
addl
or
jecxz
out
fsubrs
cltd
sbb
lea
mov
push
jecxz
or
mov
mov
and
insl
mov
fisubrs
fisttpll
cmp
push
mov
movsb
push
and
popa
test
cmp
into
sti
xor
xchg
mov
aaa
les
or
adc
dec
lret
jb
sahf
gs
xchg
mov
pop
dec
push
sbb
sbb
mov
xchg
pop
sbb
fcompl
pop
mov
rol
in
repz
cmp
fmuls
clc
not
dec
pop
mov
push
or
fsubrl
xor
je
xor
out
mov
mov
dec
daa
in
inc
loop
xor
in
lret
sbb
lods
daa
adc
xchg
xor
enter
inc
mov
test
call
add
aam
in
stc
out
aaa
and
or
mov
test
xor
xchg
push
cmp
dec
sbb
dec
cmp
ret
push
mov
mov
adc
mov
aam
xor
arpl
add
pop
pop
dec
pop
in
fwait
idivb
push
fnstenv
inc
pop
push
dec
cmp
dec
jmp
pusha
subl
daa
into
xor
pop
xor
out
cmp
dec
adc
test
push
fnstcw
push
fbstp
in
je
shlb
cmpsl
andl
fdivs
lock
mov
ror
add
data16
int
cli
pop
add
mov
shlb
stos
or
xchg
cs
rorb
push
cmp
jbe
or
cmp
rclb
jmp
dec
pop
sub
out
add
fndisi(8087
add
mov
mov
nop
pop
inc
xchg
fistps
push
lods
out
jae
xor
cmp
mov
xor
push
in
leave
xchg
cltd
rorl
pop
jmp
stos
jae
jmp
jo
ss
shrb
movups
inc
out
sub
jb
lods
jno
ficoms
in
fidivl
push
popa
dec
out
or
push
loop
sub
jnp
lea
les
ds
mov
stos
ljmp
sbb
and
push
adc
sub
daa
xor
mov
popf
or
adc
jge
and
sub
pusha
ja
jmp
sti
scas
pop
ret
jecxz
repnz
mov
nop
xlat
orb
aaa
scas
ss
leave
bound
adc
cld
addr16
imul
shlb
inc
hlt
pop
scas
jbe
lock
add
push
mov
hlt
xchg
pop
adcb
or
dec
shrb
cmp
add
jle
and
in
ljmp
inc
fs
enter
xor
ss
jb
mov
outsb
arpl
nop
or
push
cmp
xchg
ljmp
push
mov
aam
xor
jge
fistl
fidivrl
pop
pop
aas
and
les
xlat
mov
add
jmp
pop
call
xor
les
xchg
lods
jne
mov
mov
sub
mov
push
hlt
pop
push
leave
dec
bound
cmp
cmp
ljmp
mov
fcomip
or
fisttps
add
sbb
pop
pop
or
and
cmp
xchg
orb
sbb
popa
mov
dec
fistps
sub
push
test
dec
lds
or
lds
dec
stc
mov
dec
in
pop
stc
lock
aas
cli
jle
sbb
and
jecxz
sbb
pop
pop
inc
ret
fwait
and
xchg
lret
or
pop
fcmovu
in
xor
xlat
xchg
sub
xlat
inc
loope
mov
sub
ret
sub
ficoml
out
mov
jle
addl
aad
sbb
mov
test
pop
mov
aas
push
cmpb
cmpl
imul
inc
mov
mov
pop
pop
inc
push
aaa
add
ja
scas
test
enter
pop
or
mov
js
sub
push
mov
in
adc
xor
sbb
popa
mov
sbb
sarb
pop
mov
push
aad
ret
mov
mov
rcrb
or
lods
mov
cmp
dec
push
and
jae
loopne
gs
mov
ss
stos
push
sub
xor
adc
daa
lock
sbb
js
hlt
lea
sub
outsl
mov
xchg
jle
sub
cmc
faddl
cli
jl
aas
sub
scas
jp
das
mov
fimull
negl
call
adc
movsb
das
sbb
xlat
mov
roll
add
adc
cmpsl
cmp
cmpsb
loopne
cs
inc
mov
dec
aam
outsl
aas
or
mov
sub
in
add
enter
roll
or
add
add
fcmovbe
mov
pop
xchg
stc
push
shrl
call
sub
in
test
pop
xor
arpl
mov
and
mov
mov
pop
add
add
jmp
call
out
leave
sbb
mov
scas
sbb
push
jp
pushf
cmpsb
cwtl
inc
mov
push
pop
test
out
push
mov
outsb
push
push
test
lock
jl
shlb
xor
fisubl
mulb
pop
aad
lea
shrb
mov
fs
shlb
movsl
lcall
xor
bound
lods
rcll
inc
mov
or
mov
call
ljmp
int
jge
xchg
pop
jns
push
add
pop
jb
pop
lret
sub
cmpl
jo
mov
lahf
mov
mov
enter
mov
xor
insl
nop
push
sbb
pop
repz
fidivs
pushf
in
repnz
mov
xchg
cwtl
call
fwait
test
fldl
mov
sub
mov
and
dec
adc
scas
dec
sub
sub
jae
aam
shrl
test
shrl
xor
pop
mov
dec
add
adc
or
jecxz
cli
mov
divb
pushl
jg
jo
js
cld
jno
lock
rcr
outsl
jp
test
sbbl
cs
fs
pop
xor
adc
in
dec
rcr
imul
sti
ja
rcrl
sbb
roll
imul
push
pop
rorb
popa
fcmovnu
add
gs
dec
push
push
push
int
jb
ljmp
sbb
mov
gs
cmpsl
adc
jns
cmpsb
xlat
cli
pop
fdivrs
pop
aam
sub
je
mov
packsswb
cmp
inc
cli
cmpsb
dec
sahf
mov
fst
mov
add
pop
xchg
xor
ror
int3
inc
cwtl
daa
stos
loope
mov
stc
imul
push
into
push
mov
rcl
sub
pop
push
gs
xor
xchg
mov
out
xchg
call
mov
stos
sbb
dec
jmp
sbb
test
inc
and
push
jbe
mov
mov
pop
xchg
push
xor
arpl
subl
pushf
inc
cltd
xor
jmp
pop
xor
mov
adcl
jmp
cwtl
pop
sahf
sbb
icebp
rcrb
gs
pop
mov
push
pushf
adc
adc
shrb
aas
or
inc
dec
insb
inc
lds
ret
sub
adcb
xor
out
xchg
dec
icebp
roll
into
ret
or
dec
sti
sbbl
repnz
in
cmp
pop
scas
dec
pop
popa
filds
int3
add
add
cmpsl
popf
jmp
pop
cmp
adc
mov
test
mov
mov
jb
or
les
jbe
sub
xor
and
iret
out
jg
iret
mov
jbe
scas
cli
add
mov
mov
popa
jg
or
ljmp
xorb
int
cmp
cmp
in
nop
sub
sbb
into
pushf
mov
jg
in
fistps
adc
pop
mov
popa
lea
js
outsl
enter
pop
popf
aaa
jle
icebp
outsb
inc
adc
or
out
sub
xchg
aam
pusha
cmp
adc
mov
push
sub
jge
arpl
add
lods
dec
insb
in
loope
or
test
sub
push
jmp
stos
mov
ret
cltd
push
add
clc
gs
es
sub
out
cld
inc
outsl
sbb
pop
roll
lock
sub
sahf
cltd
repz
and
jl
mov
inc
sub
cmp
fsubrl
add
mov
lcall
imul
add
mov
jne
sbb
fdivr
jne
jp
fnsave
popa
jl
das
stos
sarl
pop
jne
mov
mov
insl
jecxz
in
repz
mov
leave
adc
push
adc
aaa
and
in
push
xor
rolb
mov
cmc
sub
dec
sti
push
aaa
cmp
gs
mov
jo
mov
cwtl
jmp
hlt
jae
jno
daa
int3
xchg
dec
notl
jns
sub
test
and
adc
jno
sub
sub
and
xchg
add
mov
xor
icebp
xchg
fsubrs
or
and
sti
mov
test
push
popa
popf
aaa
jbe
je
rolb
ret
xchg
sbb
inc
cmp
aaa
lret
out
int
rorb
and
cmp
cli
subb
dec
mov
pop
and
push
mov
push
lret
pop
ss
jo
push
stc
pop
inc
cmp
popf
add
loopne
pop
ror
mov
cmp
imul
cltd
popa
mov
mov
mov
sub
dec
sbb
enter
ret
pushf
or
out
cpuid
mov
popf
sub
xor
loopne
inc
mov
in
push
pushf
popa
jl
dec
cwtl
incl
jbe
or
jb
addl
push
add
sub
scas
push
mov
dec
jge
fnsave
jne
inc
cmp
je
mov
jle
das
aaa
shlb
out
jae
add
sbb
scas
lods
cmpsl
sar
adc
or
mov
call
push
loope
jp
push
movsl
push
cmp
sub
loopne
pop
lret
ds
fdivs
push
loop
dec
adc
arpl
jp
pop
outsb
std
cmpsl
aaa
push
add
gs
push
sbb
mov
nop
mov
mov
out
stos
mov
jnp
aas
sub
subb
aad
or
mov
mov
shrb
mov
lahf
inc
cmpb
ds
mov
pop
test
cli
ja
outsb
and
out
cmp
andl
fwait
jae
stc
out
inc
out
fisubl
enter
subl
movsb
stos
cmpsl
movsb
lods
inc
cmp
xchg
dec
roll
push
mov
adc
inc
test
dec
jns
mov
test
addr16
test
cs
dec
sbb
dec
mov
adc
pop
inc
push
jb
mov
push
iret
pusha
jge
in
and
js
fcmovnbe
add
pop
cmp
clc
mov
mov
push
xor
out
mov
mov
dec
mov
mov
in
int3
pop
jbe
das
mov
jmp
jo
jbe
inc
cmp
jae
loop
in
xchg
sbb
bound
orl
inc
inc
mov
adc
inc
aaa
int
cmpsb
jbe
inc
fisttpll
cwtl
adc
push
xor
sbb
sbb
dec
and
movq
fnstenv
pop
lcall
and
pop
mov
jno
repz
cs
inc
call
xor
xchg
into
fs
mov
out
out
fisttps
and
fsubp
cmovle
mov
lcall
adc
scas
cmp
addl
dec
and
jle
icebp
jnp
pop
xor
fisttpll
out
lret
loope
mov
xchg
pop
rcrb
stc
ss
repnz
pushaw
adc
ret
stos
push
outsl
scas
aas
out
nop
push
jns
js
stc
cmp
xchg
lgs
rcll
movsl
hlt
mov
in
icebp
pop
sub
mov
mov
cmp
icebp
imul
scas
mov
pop
mov
xor
pop
lret
cmc
jnp
aam
pop
mov
lahf
add
jb
iret
into
push
out
pop
jbe
call
push
dec
sub
mov
cltd
mov
leave
cmpl
xchg
add
mov
imul
mov
jle
and
xor
jmp
jb
pop
lods
add
mov
adc
out
mov
fnstcw
cld
pop
mov
xor
add
data16
xchg
dec
cmc
insl
icebp
in
xor
pop
jle
aaa
adc
out
loop
adc
shrl
xchg
inc
or
xchg
lcall
dec
jnp
jle
push
xchg
les
pop
nop
ds
or
mov
adc
ret
cmpsb
lods
imul
jmp
pushf
hlt
sbb
pop
add
jg
into
lcall
aam
jo
mov
aas
lcall
das
mov
sbb
test
xlat
repnz
test
xchg
xchg
fisubrl
or
push
jno
add
push
push
pop
pop
shlb
jecxz
mov
aam
sub
das
jle
out
or
lret
mov
jecxz
aaa
and
jge
inc
out
scas
cltd
bound
adc
sahf
adcl
mov
dec
mov
adc
daa
jbe
rcr
sbb
in
jo
fstl
jae
add
mov
mov
pop
aaa
lret
dec
dec
lock
mov
movsb
or
or
test
aad
popf
scas
and
cltd
sbb
adcb
dec
or
lcall
adc
adc
es
lret
inc
and
mov
andl
xor
test
stc
lods
dec
adc
sbb
and
jo
aas
arpl
pop
rcrl
in
lods
push
in
gs
adc
scas
imul
sti
xor
cwtl
adc
and
mov
fmuls
ss
xacquire
sti
into
loop
inc
dec
lret
jbe
aas
jle
xchg
pop
pop
mov
jb
jmp
inc
insl
sbb
or
fs
aad
inc
cmpsb
fsubrs
mov
mov
div
stos
insb
out
push
jl
mov
push
lds
push
mov
stos
movsl
pop
insl
sbb
xchg
pop
in
fildl
jno
scas
adc
jnp
xorb
push
int3
mov
xchg
fbld
push
mov
inc
fildll
int
sbb
sub
outsb
adc
out
add
lret
sbb
or
push
add
cld
fistps
int
adc
dec
and
out
fdivrl
imul
xor
loop
adc
out
mull
je
sbb
pop
fildll
mov
dec
inc
push
rorb
js
add
insb
mov
fwait
hlt
or
xchg
inc
mov
arpl
mov
lahf
incl
adc
xor
in
test
fildll
mov
mov
xor
and
fadds
xorl
or
mov
mov
lods
fwait
cmp
inc
xor
fld
inc
fs
and
movsl
mov
mov
mov
mov
mov
mov
fcmovnu
mov
aam
jecxz
stos
add
out
xchg
jno
adc
xor
data16
ljmp
dec
dec
fdiv
push
push
cmc
xor
mov
add
mull
xchg
sahf
subl
fadds
push
fs
inc
push
ss
dec
push
loope
loope
repnz
es
testb
mov
xor
sbb
notb
add
or
loop
jge
mov
cld
ret
jbe
pop
xlat
add
cmpl
sbb
adc
sbb
es
stc
xor
pop
inc
cwtl
int3
movsl
sbb
jge
sahf
xor
dec
cmc
leave
int
xorb
lods
xor
insl
push
mov
push
js
pushf
add
stos
mov
adc
cs
movsl
hlt
insb
ficompl
stos
push
push
fcom
cli
xorb
pusha
push
cld
push
sti
dec
xchg
scas
pop
push
sub
cmpsl
stos
xor
jp
lods
add
pushf
xchg
cmpb
lea
push
add
xchg
xchg
roll
popa
inc
mov
or
cmp
jne
xor
movsb
test
fwait
xchg
push
dec
jb
add
and
xor
mov
jns
mov
scas
pop
rcl
push
cwtl
xchg
imul
and
clc
push
std
jle
movsl
pop
in
jb
ss
jne
aas
and
dec
adc
sub
jp
cmpsb
sbb
mov
jb
pop
sub
inc
adc
add
and
inc
jp
cmp
push
mov
scas
push
faddl
xorb
sub
aam
push
fucomi
sub
adc
mov
adc
adc
cmp
mov
aaa
sub
int3
and
arpl
js
popf
int
pop
dec
sbb
cmc
push
jmp
mov
mov
sbb
cmp
out
ljmp
cmp
sub
ffree
pop
add
push
jp
pop
mov
scas
dec
pop
pop
xchg
mov
xchg
inc
loope
jge
sbb
out
cld
push
icebp
lds
or
aaa
cli
insl
jmp
bound
in
xchg
popa
shrb
idivb
adc
mov
mull
pop
xor
nop
lret
lea
call
outsb
bound
sahf
mov
or
loop
inc
adc
icebp
in
adc
xchg
pushf
push
std
dec
js
sub
and
sahf
cmc
adc
dec
stos
cmp
movsl
jo
into
xchg
je
jl
and
leave
cli
js
pop
movsb
ja
add
mov
and
pusha
int3
inc
in
cmc
push
and
movsl
push
and
js
gs
test
or
and
cmp
mov
cmc
fcmovbe
imul
data16
xchg
inc
push
push
jle
or
add
jo
dec
push
push
cmp
nop
and
jle
daa
cltd
mov
test
movsl
lods
and
jge
cmp
mov
jnp
mov
xor
dec
adc
imull
lds
ds
ds
inc
mov
popa
sub
lock
lea
jg
movsb
inc
mov
fdivl
and
pop
adc
cli
outsb
xchg
push
cltd
pop
int3
ss
mov
xchg
xor
push
movsl
movsl
cmp
outsl
ret
adc
fbstp
lcall
paddw
mov
cld
ja
lock
xor
sub
movsl
jne
inc
push
inc
in
nop
scas
dec
mov
cmp
cmp
int3
pop
jns
jae
mov
rorb
jb
imul
push
fldcw
lock
scas
mov
arpl
jg
cmp
jae
shrb
inc
bound
decl
inc
xchg
mov
sbb
xchg
imul
clc
dec
pslld
and
pop
fnsave
and
push
sub
in
jne
addl
cltd
push
inc
dec
sub
mov
in
push
pop
fdivs
leave
testl
or
jl
ljmp
in
mov
jo
jo
adc
jp
push
jb
lcall
popf
mov
cmpsl
js
jne
and
cltd
or
aas
jle
imul
mov
push
cwtl
xchg
or
cmp
mov
or
int3
lods
pusha
bound
imul
movsl
xchg
dec
sbb
jle
inc
jmp
fsub
push
imul
mov
mov
and
ja
lock
or
push
outsb
or
jno
sahf
jmp
repz
outsl
jno
mov
leave
test
sub
sbb
gs
dec
in
jge
jecxz
fisubl
fucomi
dec
mov
aaa
dec
xchg
jmp
iret
jl
out
loop
inc
outsb
inc
jns
shlb
cltd
mov
sbb
rcl
mov
or
mov
loope
in
int
sub
lcall
adc
jns
sub
mov
pop
cmpsl
cmp
mov
imul
filds
jbe
hlt
xor
mov
repz
cmpsb
nop
and
lock
daa
jmp
sti
das
aam
hlt
negl
sbb
push
mov
pop
fstpl
mov
jl
pop
cmp
pop
xchg
dec
fwait
pop
and
stos
mov
adcb
test
and
icebp
iret
popf
sub
aaa
fs
and
xchg
jl
push
mov
dec
xchg
rcrb
rcrb
test
popf
or
xor
inc
dec
and
mov
dec
mov
nop
and
jnp
jno
mov
lds
fdivs
rcll
or
dec
dec
lahf
jmp
bnd
lock
out
cltd
xor
add
xor
mov
mov
dec
cmp
add
jno
push
mov
pop
push
notb
adc
pop
popa
xor
pop
xor
nop
lcall
xor
scas
and
xchg
dec
or
pop
add
syscall
jne
cmp
iret
inc
cmp
cltd
dec
mov
adc
push
fwait
mov
add
and
mov
push
adc
mov
daa
pop
or
in
out
fucomi
jnp
mov
dec
in
or
jo
push
xor
bound
sbb
jge
ja
dec
push
jne
imul
pop
jnp
js
adc
stos
jecxz
xor
hlt
or
pop
jp
shr
movlhps
adc
push
or
int3
popf
insl
bswap
pop
stos
inc
sub
cltd
sub
xorb
pop
inc
cmpsb
xchg
sahf
pop
push
jge
push
mov
and
push
jecxz
test
push
call
in
sub
or
lret
int3
cld
cmp
adc
and
aas
arpl
adc
cmp
mov
aam
fsubs
stos
dec
jmp
fs
lods
aaa
orl
sub
sbb
push
pop
dec
stos
add
xor
lods
ds
push
xor
xchg
fwait
mov
add
cmp
jp
out
push
mov
scas
cwtl
adcl
pop
jmp
xchg
adc
fildll
aaa
frstor
sbb
scas
push
xchg
xor
mov
rcrb
or
lret
mov
mov
inc
clc
mov
jno
ficomps
jns
popa
jb
je
mov
loopne
mov
stos
mov
mov
and
or
andb
les
test
dec
sbb
js
ljmp
out
ja
cmp
jnp
in
cmpsl
sti
jns
mov
mov
in
jge
mov
push
repnz
mov
adc
fwait
push
mov
inc
mov
mov
imul
lea
orl
into
fldenv
rorl
pushf
or
sbb
pop
fisubrl
shrb
nop
subl
add
add
pop
shlb
std
insb
fsubl
add
cmp
or
pusha
sbb
mov
mov
jae
loop
cli
push
loopne
jnp
fmul
test
imul
or
xchg
xchg
jle
lea
imul
sub
jl
push
jae
add
mov
movsl
pusha
repnz
adc
mov
imul
rcrb
enter
fcmovnbe
pop
scas
mov
mov
pop
and
xchg
pop
fsubs
repnz
