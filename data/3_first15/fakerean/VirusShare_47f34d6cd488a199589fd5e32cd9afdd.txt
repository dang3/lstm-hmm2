mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
lea
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
call
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
mov
mov
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
cmpl
mov
mov
push
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
call
xor
cmp
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
lea
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
lea
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
mov
mov
mov
push
push
call
test
js
lea
lea
call
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
add
push
call
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
jne
mov
mov
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
mov
ret
mov
test
je
mov
test
jne
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
je
push
call
pop
lea
cmp
je
push
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmpb
jne
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
push
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
test
mov
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
addl
mov
mov
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
test
je
addl
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
push
call
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
mov
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
movl
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
lea
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
cmp
lea
je
call
jmp
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
movzbl
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
inc
or
add
inc
add
inc
or
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
push
push
call
mov
jecxz
cltd
fiadds
hlt
nop
push
js
add
lret
fdivrl
test
lea
add
add
in
push
add
mov
add
add
add
jecxz
add
jno
imul
pop
add
push
lods
cli
cmpsb
shrl
push
mov
add
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
add
icebp
add
lret
add
popl
pop
outsl
mov
mov
cld
out
add
xchg
sti
jno
les
in
fcomps
inc
in
push
push
push
push
push
push
push
call
add
fildl
add
add
mov
add
add
add
notl
add
add
jbe
gs
add
mov
xchg
add
add
xchg
jns
push
insb
add
push
roll
lods
add
xchg
add
add
lock
movsb
push
xchg
add
stos
mov
add
add
add
nop
loop
add
push
push
push
call
cld
add
mov
stos
mov
add
arpl
jp
loope
in
andl
add
push
in
mov
in
hlt
pop
push
push
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
ret
mov
ficoml
push
add
jb
sarl
add
xchg
pop
mov
data16
add
add
pusha
lock
add
add
enter
push
call
add
cmpsl
add
sub
pop
push
push
push
push
push
push
push
call
hlt
lods
add
add
fldl
mov
stos
jge
add
add
add
add
je
lret
icebp
push
add
lcall
push
add
add
push
push
push
push
push
lea
push
push
call
add
add
test
movsl
sarl
add
hlt
mov
add
mov
add
add
aam
add
push
lea
push
push
push
lea
push
push
lea
push
push
call
gs
cmpsl
mov
push
mov
fisttpll
add
push
int
add
addl
push
add
mov
mov
add
les
jge
push
add
add
lcall
fldl
add
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
xchg
jnp
push
add
call
test
add
js
fdivp
xchg
flds
add
add
add
add
add
add
imul
add
add
add
movsl
add
add
add
add
add
repnz
outsl
and
loopne
xchg
pop
lahf
movsb
pop
add
add
sub
pop
ret
push
lea
push
push
lea
push
call
sti
clc
jbe
jle
sahf
mov
add
add
je
add
add
lret
sahf
out
push
add
add
in
lock
mov
push
push
push
push
call
iret
add
flds
mov
push
xchg
xchg
mov
fidivl
fistps
test
clc
add
add
add
add
mov
out
add
pop
hlt
add
push
push
push
lea
push
push
call
add
mov
mov
xchg
mov
add
pop
mov
add
flds
aam
clc
add
mov
scas
rorl
mov
add
add
popf
jle
mov
add
jno
add
add
popa
mov
sti
add
aad
in
out
cld
nop
scas
add
mov
add
push
push
lea
push
call
xchg
in
clc
in
addr16
lret
lea
addb
add
aad
add
addl
jl
mov
push
push
cmpsl
mov
lcall
ret
inc
inc
add
push
push
call
jnp
add
add
pop
add
add
add
add
add
fcmovne
repnz
add
loope
ljmp
add
scas
rolb
ja
int3
fidivrs
jle
add
scas
divl
nop
add
imul
cwtl
hlt
jns
add
add
pop
add
repz
inc
popf
lods
push
sub
push
push
pop
add
lea
sub
sub
not
ror
pop
xor
rol
ror
pop
push
push
push
push
push
push
push
call
lahf
add
js
jns
push
jae
add
add
add
jb
pushf
add
cli
jle
mov
mov
movsl
movsl
jae
mov
push
addl
mov
add
add
xchg
add
add
add
add
lcall
add
push
lea
jne
push
lea
push
lea
push
push
push
push
lea
push
call
add
scas
cli
add
enter
int
xchg
js
in
mov
add
add
test
add
sub
pop
call
push
push
push
push
call
jns
in
outsl
add
push
jge
js
popl
push
push
pushf
push
add
add
aad
add
add
int
push
add
filds
add
add
ficompl
movsb
jb
add
mov
in
lock
lcall
inc
lock
lea
push
call
push
add
ljmp
mov
push
lock
lret
add
add
test
add
into
add
mov
fidivl
mov
fucom
add
lods
mov
add
mov
arpl
add
clc
add
mov
fstp
add
mov
movl
push
push
lea
push
push
push
call
loope
cmpl
fwait
icebp
add
add
add
mov
pop
rolb
mov
call
ljmp
mov
jl
push
add
lcall
inc
call
add
add
xlat
idiv
imul
sarl
mov
subb
popa
ret
cmc
loop
push
je
add
lret
fildl
jae
fstl
add
add
push
push
push
push
push
push
push
push
lea
push
call
jecxz
cmpsb
mov
rcr
pop
add
js
add
mov
popf
mov
add
add
add
std
add
mov
lret
imul
popa
iret
lock
add
add
mov
pop
pushl
push
push
push
push
push
push
lea
push
lea
push
push
call
std
mov
add
add
add
mov
ja
pop
mov
add
add
add
sub
pop
pushl
call
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
jns
clc
push
test
mov
add
jno
add
int3
add
xchg
hlt
mov
add
jmp
movsb
add
jle
add
add
add
add
mov
add
add
shll
add
xorb
add
sub
pop
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
cmpsb
fsubr
hlt
jae
cld
mov
lret
add
xchg
push
mov
movsb
cmpl
addb
xchg
test
data16
add
sbbb
add
add
filds
sub
pop
pushl
push
push
push
lea
push
lea
push
call
roll
mov
add
mov
add
js
add
mov
jle
sahf
add
add
jno
add
addb
add
pop
add
add
in
in
pop
call
push
push
ror
xor
dec
push
or
not
add
not
sub
add
xor
sub
pop
ror
not
sub
dec
pop
push
lea
push
push
push
call
xchg
add
test
mov
add
jmp
add
mov
outsl
imul
fidivrs
add
add
jp
scas
jmp
jge
push
imull
add
add
cmc
xchg
jecxz
popf
add
add
xchg
add
mov
sbbl
pop
add
sub
pop
pushl
call
push
push
call
js
xchg
loopne
nop
add
addl
shr
sub
out
add
add
add
jno
pop
sbbb
stos
add
ja
add
int3
popf
fst
pop
test
mov
add
movl
add
addl
insb
lcall
pop
push
push
push
add
push
and
add
add
xor
sub
shr
pop
add
not
pop
push
push
push
push
push
push
push
push
call
xchg
jnp
mov
add
push
jnp
addl
xchg
bound
push
rcll
lea
add
add
xchg
add
add
mov
add
add
sub
pop
push
push
lea
push
call
mov
add
sar
add
add
mov
add
add
pop
add
xchg
add
add
add
mov
mov
xchg
add
mov
add
mov
in
clc
lcall
add
arpl
add
push
push
call
add
mov
ja
call
pop
push
mov
fadds
add
add
filds
mov
xchg
add
xlat
cltd
mov
roll
mov
push
outsl
add
addl
add
add
add
add
mov
andb
add
mov
scas
fs
cmpsb
add
mov
in
lock
lcall
rclb
push
push
lea
push
push
push
lea
push
push
call
jo
add
xlat
imul
add
push
add
xchg
mov
imul
gs
add
mov
arpl
out
add
add
add
ja
jae
add
incb
out
nop
popf
fwait
add
loope
jnp
mov
lret
in
fcompl
clc
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
add
sbbb
pop
bnd
test
jge
add
push
add
out
jl
xchg
jecxz
add
add
add
pop
add
leave
in
mov
fisubs
add
mov
test
test
roll
mov
add
fucomp
sub
pop
push
push
push
lea
push
push
push
push
call
add
add
mov
add
ja
in
stc
add
std
add
cmpsl
jle
jmp
add
sahf
push
je
in
call
hlt
push
lea
push
lea
push
push
push
push
push
push
push
call
add
pop
add
lock
add
jge
mov
mov
jl
add
jae
add
test
xchg
add
cmpsl
cltd
add
lods
jnp
loop
lahf
bound
add
sti
add
lea
lds
add
mov
push
jno
lret
sub
pop
add
push
push
lea
push
call
stos
add
cltd
mov
add
add
loope
jae
flds
jge
mov
add
out
movsb
mov
stos
mov
in
jmp
pop
add
jne
add
jne
mov
sub
pop
add
push
push
lea
push
call
mov
in
jae
pop
add
add
xchg
mov
fildl
and
fldt
add
xchg
faddl
rcr
add
lods
pop
add
in
movsl
lret
xchg
add
add
jp
add
add
lcall
ret
inc
inc
add
push
push
push
push
lea
push
call
mov
jb
js
mov
fildl
in
int3
add
add
add
stos
add
add
pop
lret
add
roll
xchg
data16
add
add
imul
mov
roll
add
xchg
sub
pop
mov
xor
push
lea
push
push
push
push
lea
push
push
call
add
cmpsb
jle
mov
out
pop
rcll
mov
add
push
add
add
push
in
lcall
jne
push
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
pop
add
mov
add
add
xchg
jmp
add
rcr
icebp
add
fcmovnb
cwtl
mov
in
push
in
mov
add
xchg
andb
sub
pop
mov
xor
push
push
push
push
call
cld
mov
pop
mov
in
mov
add
arpl
not
iret
pop
mov
mov
add
mov
sahf
add
xchg
addr16
xchg
jecxz
add
push
fcoml
jmp
mov
add
nop
add
mov
mov
pop
add
push
push
call
leave
cwtl
mov
lock
add
add
lret
add
xchg
adc
push
add
mov
lahf
out
push
mov
add
jecxz
neg
pusha
out
xchg
lret
insb
add
icebp
lods
xchg
mov
sub
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
pushf
add
cli
fs
add
mov
out
add
test
add
out
add
add
out
add
mov
int3
add
jnp
xchg
mov
mov
bound
add
mov
lret
push
int3
mov
lcall
dec
add
icebp
cmp
push
push
call
fsubr
add
add
add
add
xchg
add
je
add
insb
mov
add
mov
in
cltd
push
add
add
in
lock
lcall
push
push
push
push
lea
push
push
call
push
add
imul
push
mov
incb
mov
add
jb
add
shl
cmc
mov
iret
loope
add
fwait
add
leave
scas
lds
mov
add
add
scas
xchg
pop
test
add
sub
pop
mov
xor
push
push
push
lea
push
push
push
push
call
add
mov
out
mov
into
rcrb
lahf
push
xor
mov
mov
mov
sar
add
into
add
mov
add
sahf
mov
sub
pop
sub
pop
push
push
call
icebp
add
add
in
rcrb
jge
mov
jbe
push
add
imul
mov
into
mov
nop
add
push
fwait
hlt
je
add
in
clc
pop
rep
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
flds
xorb
cli
out
addb
nop
add
add
add
mov
je
add
add
add
mov
add
add
jge
in
cmpsl
fcmovnu
mov
mov
sub
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
call
xchg
lods
push
add
add
mulb
out
add
rorb
push
add
mov
push
add
add
sub
pop
mov
push
push
push
push
push
push
call
jmp
push
push
nop
mov
arpl
aam
loop
mov
pushf
push
scas
add
add
add
xchg
add
add
add
add
sub
pop
add
add
push
push
push
push
push
push
lea
push
call
test
outsl
loop
xchg
add
add
out
add
lret
lret
add
add
mov
add
addb
add
add
repnz
bound
jmp
mov
into
pop
add
out
add
mov
imul
pop
add
mov
xor
push
push
lea
push
push
push
push
push
push
call
add
xlat
jbe
in
rclb
add
add
scas
js
add
add
add
jne
popl
add
add
xchg
scas
add
add
pop
lock
add
add
stc
add
sub
pop
mov
xor
push
push
push
lea
push
push
call
add
enter
mov
cwtl
add
mov
add
mov
jns
addb
add
add
stc
jmp
mov
test
mov
in
movb
mov
add
add
push
add
add
add
sub
pop
mov
push
push
lea
push
lea
push
call
add
add
add
out
add
mov
cmpsl
add
add
push
add
add
add
mov
out
outsl
cmc
xchg
mov
mov
hlt
sub
pop
xor
push
push
push
push
push
push
push
call
mov
testl
jne
fs
add
arpl
test
lods
jbe
add
stos
jmp
lret
in
xchg
aad
mov
add
std
fiaddl
add
shrb
mov
rcr
push
leave
test
fadds
add
jae
fsubs
add
push
jnp
sub
pop
add
push
push
lea
push
push
call
add
xchg
add
push
mov
stos
loopne
add
mov
mov
add
test
pop
add
cmpsl
add
adcl
lret
add
jl
mov
add
std
add
je
push
lods
add
add
lock
add
push
lea
push
push
lea
push
push
push
lea
push
push
call
popl
lds
cmpsb
mov
cld
out
aam
push
add
mov
stc
pop
mov
mov
pusha
roll
loopne
add
lcall
rorl
stos
push
inc
add
sub
ror
push
and
add
add
dec
inc
sub
shl
ror
pop
dec
pop
push
push
push
lea
push
lea
push
push
call
xchg
mov
add
stc
xchg
shl
rcr
mov
cld
rolb
loopne
lret
iret
xlat
out
mov
stos
add
lcall
jne
call
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
fs
in
add
cwtl
lock
jnp
add
outsl
add
mov
in
pusha
cli
fiadds
add
add
cld
mov
lret
xchg
push
jp
jb
mov
add
mov
clc
add
in
nop
add
xchg
arpl
cli
mov
push
add
addb
in
fcomps
add
mov
adc
push
add
xor
lea
push
or
not
add
xor
sub
xor
shl
pop
lea
pop
push
push
lea
push
push
lea
push
push
push
call
cmc
add
lret
aam
insb
xchg
sahf
add
add
push
xchg
jns
imul
ficoml
add
add
and
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
gs
test
in
imul
test
int
mov
add
in
xchg
add
flds
sub
pop
call
mov
push
sub
sub
xor
pop
push
push
sub
pop
push
push
lea
push
call
xchg
mov
add
add
add
add
mov
add
testl
add
jmp
add
cltd
add
mov
rol
xchg
sti
lea
push
pop
movsb
mov
add
add
add
add
fldl
add
loope
add
add
xchg
loope
in
clc
pop
mov
push
shr
add
shr
pop
add
add
push
push
push
push
lea
push
push
push
push
push
call
add
out
pop
fstp
xchg
movsl
cld
arpl
call
out
imul
add
add
add
imul
cld
pop
xchg
ror
lret
movsl
add
jno
add
fcompl
sti
add
jo
cmpsl
add
int
sub
pop
add
mov
xor
push
add
inc
pop
add
push
push
call
fwait
popf
lret
push
mov
scas
call
js
add
insb
mov
nop
out
add
popl
lock
add
push
add
xchg
add
pop
push
xchg
arpl
mov
lcall
jp
cmpsb
add
sub
pop
push
push
push
push
push
push
call
push
add
roll
fcom
jp
test
sti
add
mov
stos
test
imul
add
add
xchg
cli
add
jecxz
mul
sub
pop
mov
xor
push
lea
push
call
pop
int3
sti
xchg
bound
loopne
mov
stc
test
add
aam
mov
sbb
push
lds
in
mov
add
jno
add
add
add
add
testl
mov
add
add
movsb
loop
add
jmp
push
add
sub
pop
add
push
ror
pop
pop
push
rol
rol
add
xor
pop
mov
push
push
push
push
push
push
push
push
call
js
add
add
add
add
jae
out
in
insb
icebp
gs
test
add
mov
add
add
jno
add
add
sarb
divb
xor
push
push
push
push
lea
push
lea
push
call
jae
stos
mov
in
add
pushf
aam
fsubrl
jb
add
cld
rcrl
jle
add
in
jo
iret
into
add
call
add
push
add
sub
xor
pop
rep
push
not
dec
sub
pop
mov
xor
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
stos
mov
add
add
mov
add
add
mov
xchg
data16
out
add
add
mov
add
rcr
fildl
add
mov
out
xchg
faddl
mov
add
add
mov
add
rolb
add
sub
pop
or
je
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
addb
jb
add
add
fsts
add
xchg
insb
pop
add
add
xchg
movsb
mov
add
jmp
aam
mov
add
and
std
scas
call
aad
aad
mov
lahf
add
add
sub
pop
mov
xor
push
inc
pop
mov
xor
push
push
push
push
push
push
push
push
call
lods
add
add
add
mov
mov
popf
pop
add
lahf
popa
add
add
xchg
add
mov
jno
popf
leave
iret
pop
add
divb
mov
in
add
sti
add
add
nop
lock
add
pop
push
sub
pop
add
push
lea
push
push
lea
push
push
lea
push
call
add
out
andl
lock
pusha
pop
add
add
mov
popl
clc
mov
mov
int
add
ja
add
mov
add
add
test
add
mov
mov
jbe
out
add
ret
ja
add
cltd
push
sub
pop
add
push
push
push
call
nop
add
pushf
popl
add
fisubrl
shl
aad
mov
add
add
fiaddl
jl
rorb
shlb
add
enter
add
pop
xchg
movsb
fdivrs
pop
add
add
add
in
hlt
lcall
push
inc
not
shl
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
lcall
add
movl
add
les
add
pop
enter
xchg
mov
mov
mov
mov
mov
add
add
idivl
lcall
add
add
lcall
add
push
push
lea
push
push
push
push
push
push
push
push
call
hlt
in
ja
add
add
add
jbe
push
iret
push
pushf
add
mov
mov
mov
fisubl
jb
add
add
add
clc
add
out
add
in
add
jnp
fnstenv
xchg
push
add
add
pop
add
push
lea
push
lea
push
push
call
xchg
mov
push
in
cwtl
add
add
insb
add
mov
xchg
add
fadds
js
add
lea
pop
iret
mov
push
hlt
add
add
add
mov
add
les
lods
add
sahf
fadds
jnp
add
imul
lock
add
pop
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
test
jge
loopne
out
xchg
fcmovbe
jae
jge
mov
add
adc
jge
addr16
cli
add
xchg
arpl
lcall
add
pushf
add
add
test
in
add
sub
pop
rep
push
push
push
push
push
push
call
add
add
jp
mov
xchg
add
fidivl
mov
add
pushf
mov
push
cmpb
add
lret
call
insb
add
mov
clc
fcmovnu
add
add
add
sub
pop
mov
xor
push
inc
ror
pop
or
je
push
push
lea
push
push
push
push
push
push
call
out
add
mov
add
add
add
ljmp
mulb
jne
mov
add
into
add
loop
aam
loopne
mov
loope
add
xchg
jo
pop
int3
iret
add
add
xchg
mov
roll
movsb
sahf
pusha
jmp
add
jns
in
loopne
mov
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
pop
jle
add
mov
hlt
add
jnp
add
jle
rcl
movsl
pop
not
add
out
test
xchg
in
add
movb
add
mov
adcb
mov
clc
ja
add
or
in
addr16
pop
add
push
sub
lea
ror
pop
add
rep
push
lea
pop
pop
push
push
add
ror
shr
rol
push
sub
add
add
add
add
sub
add
pop
add
pop
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
fiadds
xchg
lret
add
pop
add
data16
arpl
movsb
test
stos
mov
lea
add
push
pop
mov
js
add
cmpsl
add
loope
jns
roll
lods
outsl
nop
add
add
lahf
faddl
push
mov
ljmp
add
add
sub
pop
pop
mov
push
dec
pop
mov
mov
push
not
pop
jmp
push
push
push
lea
push
push
push
push
lea
push
push
push
call
test
addb
cli
loope
stos
add
ror
add
cwtl
add
add
jno
jo
mov
roll
push
add
call
sti
add
add
jp
xchg
loope
cwtl
mov
movsl
sub
pop
mov
push
sub
pop
add
push
push
push
call
insb
add
test
in
add
add
stc
cld
add
scas
add
enter
lods
fldenv
add
jecxz
add
add
popf
add
pop
pop
movsb
cmc
movsb
cltd
lea
pop
add
add
loop
lock
in
hlt
pop
push
push
push
rol
pop
push
push
push
push
push
call
mov
add
std
movsb
add
lahf
add
add
js
cwtl
loope
data16
add
mov
jge
shll
add
pop
add
add
add
fnstenv
add
push
jnp
mov
mov
in
hlt
pop
mov
pop
push
xor
sub
shl
pop
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
stos
jp
cld
add
add
add
stos
nop
add
out
push
scas
roll
add
movl
lcall
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
sti
add
add
jecxz
popf
roll
add
outsl
roll
test
jne
cmpsb
jmp
cli
add
mulb
popf
add
rcl
sahf
add
add
mov
scas
add
adcb
pop
mov
loopne
lcall
ret
push
push
lea
push
push
push
call
ljmp
flds
out
push
add
aad
add
add
mov
mov
out
add
xchg
int
pop
add
push
push
push
push
call
mov
push
pop
fcmovnbe
cwtl
xchg
lea
test
mov
add
xchg
add
mov
add
add
add
push
mov
push
jb
add
test
stc
mov
movsl
cwtl
mov
add
jp
add
add
pop
mov
push
pop
add
push
lea
push
push
lea
push
push
push
push
push
call
pop
arpl
add
std
xlat
add
enter
fistpll
pop
mov
cmpsb
mov
add
shlb
pushf
lea
loopne
negb
ficoms
incb
ljmp
add
mov
mov
add
add
add
sub
pop
push
push
push
lea
push
call
add
push
int
add
mov
negl
push
test
icebp
add
add
add
add
fbld
mov
add
add
add
add
add
mov
lcall
push
push
push
push
push
push
push
push
push
push
call
add
fwait
add
add
mov
xlat
mov
add
out
add
add
pop
loopne
scas
add
outsl
notb
add
push
push
push
call
add
lock
add
lock
js
lods
push
jge
pushaw
add
cmpsb
add
imul
addl
mov
mov
fiaddl
imul
mov
add
movl
push
xor
sub
pop
addl
push
inc
pop
test
je
mov
push
dec
pop
pop
push
lea
dec
pop
pop
pop
push
not
xor
pop
pop
push
push
push
call
in
repnz
add
add
add
mov
loop
out
add
cli
add
add
jmp
jne
test
add
imul
add
in
hlt
pop
leave
push
push
push
lea
push
push
push
push
push
push
push
call
mov
pop
add
pop
movsb
add
cld
add
add
add
xchg
sahf
mov
add
rolb
jmp
clc
pop
add
sti
mov
ljmp
add
fdivr
lcall
add
push
push
push
call
xchg
add
popa
add
jmp
add
ljmp
xchg
add
add
lds
stc
pop
xchg
xchg
fnstsw
mov
decb
jns
add
rcrl
push
adc
jmp
mov
test
js
jle
ljmp
stos
pop
addb
in
push
push
push
push
push
push
call
jb
add
cld
jmp
fsubl
add
jmp
add
add
sti
add
jns
mov
add
loopew
add
arpl
fs
pop
in
popl
add
lcall
cld
push
add
pop
push
push
push
push
call
add
iret
mov
add
mov
scas
pop
pop
add
add
push
sahf
lcall
out
movsb
add
pusha
add
push
push
inc
dec
not
pop
testl
addl
push
dec
add
ror
pop
push
push
ror
pop
call
mov
push
lea
push
lea
push
push
push
push
lea
push
call
cli
xchg
mov
add
add
add
add
mov
push
pop
xchg
imul
add
ja
add
xlat
add
add
hlt
cltd
fadds
add
push
flds
out
xchg
add
add
pop
xchg
mov
mov
add
add
shll
add
out
add
rolb
jne
push
lea
not
pop
push
push
push
push
push
call
sahf
add
sahf
add
addb
add
adc
mov
add
jecxz
add
add
mov
mov
lahf
fwait
ljmp
flds
mov
jp
in
hlt
pop
call
push
push
push
push
push
lea
push
push
push
lea
push
call
add
in
negb
mov
add
add
mov
add
mov
outsl
push
add
lcall
add
popf
jbe
add
int3
add
push
fldl
test
in
ljmp
lcall
jge
add
test
dec
sub
pop
pop
push
lea
add
rol
sub
pop
pop
push
push
push
push
push
push
push
push
call
test
add
mov
mov
add
add
in
fldl
fnstcw
in
test
add
add
xchg
lret
add
add
in
jmp
stc
leave
add
jnp
add
add
add
flds
pop
push
lea
lea
pop
leave
ret
push
sub
xor
sub
add
pop
push
push
lea
sub
pop
mov
add
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
into
lcall
addr16
data16
mov
jge
add
add
adcb
add
int
add
push
jae
mov
mov
push
in
cltd
add
test
add
add
add
test
add
xchg
loopne
imul
add
in
in
push
push
push
push
push
push
call
xchg
jne
push
addb
lcall
loope
add
add
shl
into
mov
out
add
imul
ret
jns
add
xchg
jb
iret
pop
mov
fadds
les
ficompl
pop
push
push
ror
pop
push
push
inc
pop
movl
push
add
pop
push
push
shl
sub
add
pop
call
push
xor
pop
push
call
push
shr
ror
pop
subl
cmpl
jne
push
sub
pop
pop
push
push
push
call
sahf
push
flds
add
add
lods
add
add
imul
lods
hlt
add
pop
stos
imul
out
pop
add
add
add
roll
add
jno
outsl
xor
sub
pop
pop
pop
push
lea
push
lea
push
lea
push
push
push
call
add
mov
bound
jl
ror
fnstsw
add
neg
fidivrs
in
add
push
out
add
fmul
add
sahf
lea
mov
ljmp
jecxz
imul
mov
pop
leave
push
xor
pop
ret
push
push
push
push
push
push
push
call
add
mov
mov
mov
stc
int
mov
ret
mov
push
add
sti
add
jge
add
pop
add
mov
in
xchg
fsubl
add
rolb
std
add
add
mov
out
rcrl
sub
pop
push
push
push
push
push
push
call
repnz
aam
jno
roll
xchg
pop
add
mov
push
add
fdiv
sti
add
xchg
idivb
mov
test
xchg
xlat
add
test
add
gs
imul
lcall
in
add
push
ror
shl
shl
add
pop
push
push
push
push
lea
push
push
push
push
call
in
jl
jl
lret
int3
loope
aad
mov
add
imul
mov
popf
fst
push
jae
add
xchg
mov
pop
push
push
push
sub
pop
push
push
lea
ror
pop
mov
lea
push
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
jmp
jb
add
cmpsl
jnp
add
add
add
jmp
add
mov
add
add
xlat
push
aam
xlat
add
xchg
lods
add
add
lcall
call
push
push
push
lea
push
lea
push
call
add
scas
ror
jecxz
popf
push
std
add
arpl
bound
loopne
add
add
in
bound
movb
push
mov
stos
add
filds
xchg
orl
add
jbe
add
nop
fildl
add
out
push
mov
add
negb
into
add
add
in
mov
shr
push
lea
push
push
call
fiadds
add
test
add
outsl
add
add
push
fisttps
lods
add
add
xchg
mov
lcall
inc
or
add
not
not
pop
mov
push
rol
add
pop
mov
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
add
std
mov
add
popl
arpl
add
fstpl
je
jns
test
cltd
nop
pop
pusha
add
lahf
int
jl
std
add
test
add
add
fsubrs
in
fdivr
lcall
inc
or
lea
push
push
lea
push
lea
push
call
insb
add
add
add
imul
mov
jbe
add
fcmovu
arpl
add
out
add
add
add
lds
add
enter
add
aad
xlat
pop
xchg
rol
les
push
cmc
addr16
incb
icebp
mov
pop
add
mov
push
add
add
lea
sub
pop
mov
cmp
jne
push
push
push
push
lea
push
call
add
add
hlt
out
add
add
add
addl
add
add
test
mov
add
mov
mov
add
add
sbbb
push
add
mov
fcomps
add
lahf
push
add
add
sahf
mov
lcall
cwtl
fadds
add
jne
push
push
call
add
popl
cmpsl
push
add
test
popa
cmpsl
add
fsts
add
add
add
xchg
push
jo
add
xchg
stos
add
test
ljmp
sarl
add
add
jl
jne
mov
mov
add
clc
pop
mov
push
push
push
push
call
add
add
js
jge
push
jb
push
add
imul
les
arpl
std
bound
add
fiadds
mov
mov
repnz
jae
outsl
add
hlt
add
lcall
add
add
add
mov
lods
rclb
pop
lea
push
push
call
mov
add
add
jecxz
test
xchg
jecxz
mov
rcrl
add
lret
fbld
mov
stos
push
push
add
addr16
add
push
add
mov
add
push
out
bound
test
jle
pop
test
out
mov
data16
mov
mov
add
movb
pop
jmp
mov
push
lea
push
push
push
push
push
push
call
test
add
add
les
stc
jnp
mov
scas
pop
lcall
int
mov
arpl
add
out
add
add
xchg
faddp
add
stos
add
add
in
aam
test
lcall
loop
mov
jb
fwait
add
add
lock
mov
add
pop
sub
pop
mov
push
push
push
lea
push
push
push
push
push
call
mov
xchg
testb
add
lods
jmp
mov
jne
xchg
add
loope
add
add
incb
add
add
cmc
mov
add
add
hlt
push
mov
test
out
add
ja
add
jmp
flds
add
sub
pop
sub
jne
push
push
lea
push
push
lea
push
push
lea
push
call
jge
pop
add
enter
iret
jp
lret
add
add
mov
lods
add
test
out
jno
add
cli
test
in
in
mov
push
push
lea
push
call
add
add
mov
add
cli
fdivp
aad
add
jae
xchg
add
add
add
add
add
add
xchg
add
stc
pop
mov
add
add
push
jns
loope
cwtl
scas
imul
jae
repnz
pop
movl
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
lret
add
cmc
add
cld
pusha
jb
in
stos
add
movb
in
add
faddl
push
loopne
test
ljmp
pop
jmp
mov
push
sub
pop
mov
push
xor
pop
cmp
jne
push
lea
pop
mov
movl
push
sub
pop
jmp
push
rol
not
sub
pop
mov
push
lea
dec
shl
pop
cmpw
jne
mov
push
lea
push
lea
push
lea
push
push
call
faddl
stos
add
add
scas
add
add
pop
hlt
cmpsb
jno
add
mov
jae
call
add
loope
add
add
add
js
xchg
cli
add
add
frstor
outsl
loopne
fucomip
mov
in
lcall
add
or
add
pushl
push
ror
lea
pop
pop
push
lea
pop
mov
mov
push
push
push
push
push
push
push
call
lods
mov
test
push
pop
pop
mov
push
add
push
pop
add
gs
jne
add
jle
arpl
fwait
mov
add
add
push
cmpsb
mov
add
add
testb
stos
pusha
add
lcall
push
or
inc
push
inc
push
ror
push
push
pop
add
rol
add
shr
sub
sub
ror
pop
ror
sub
ror
pop
push
add
add
sub
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
call
pop
lock
sarl
add
in
add
ljmp
add
add
add
out
popa
lock
imul
ficoms
loope
test
cli
stos
incb
lcall
stc
xor
add
lret
pop
cmpl
je
push
push
xor
not
push
sub
add
sub
rol
lea
sub
inc
dec
pop
sub
ror
pop
push
lea
push
push
push
push
push
call
mov
xchg
testb
add
add
mov
leave
add
aad
int
aad
push
sahf
popl
mov
add
pop
add
add
test
mov
add
jae
pop
fwait
sub
pop
push
push
rol
pop
call
cmpl
je
push
push
add
dec
push
or
inc
add
sub
xor
lea
xor
sub
add
pop
rol
pop
push
not
shl
pop
push
call
push
lea
push
push
push
push
call
add
mov
flds
xchg
xlat
movsl
add
add
mov
fwait
xchg
ja
jmp
xchg
xchg
roll
loopne
rolb
add
ljmp
xchg
add
pop
ret
add
flds
bound
jecxz
in
in
pop
cmpl
je
push
push
shr
push
push
pop
add
sub
sub
shr
pop
sub
pop
push
sub
pop
push
push
xor
not
pop
call
cmpl
je
push
push
sub
shl
rol
push
sub
add
rol
sub
add
pop
sub
ror
pop
push
push
push
push
push
call
ja
js
xchg
shll
add
add
add
jb
add
fwait
xchg
cli
jmp
add
mov
add
jecxz
jp
add
in
add
add
mov
fwait
mov
cli
into
add
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
scas
call
pop
add
mov
add
add
jo
add
pop
mov
mov
lret
add
add
fsubp
int3
popa
pusha
add
add
add
pusha
int3
add
pop
jp
push
add
add
cmpsb
add
mov
add
add
in
fdivr
lcall
pop
xor
add
shl
dec
sub
pop
cmpl
je
push
push
add
shr
push
sub
add
ror
lea
xor
sub
xor
sub
add
pop
pop
push
shl
pop
push
push
push
push
push
push
push
push
push
push
push
call
lret
sti
call
mov
add
jbe
mov
add
imul
add
roll
add
out
add
fimull
lret
pushf
les
imul
call
push
lea
push
lea
push
lea
push
call
add
add
mov
gs
stos
xchg
int3
push
push
addb
add
imul
fcmovu
jp
add
add
add
ret
add
jbe
roll
addr16
in
add
add
mov
jno
add
push
add
add
add
add
lock
cmpl
je
push
push
rol
rol
push
and
add
add
sub
sub
add
add
pop
add
add
sub
pop
push
lea
push
push
call
fisttpl
test
mov
lods
push
bound
add
add
lods
ljmp
pushf
mov
jae
push
xlat
xchg
add
test
insb
mov
mov
je
imul
mov
lods
js
jl
testl
hlt
lcall
push
lea
pop
call
push
shr
dec
rol
xor
pop
cmpl
je
push
push
inc
rol
not
shl
push
sub
add
xor
sub
sub
not
pop
ror
not
pop
push
push
push
lea
push
lea
push
push
call
out
add
test
pushf
out
add
lret
imul
fwait
xchg
add
add
add
addr16
pop
rorl
xchg
out
add
fildl
lcall
push
push
push
call
add
sbbl
shrl
add
jmp
scas
mov
arpl
test
add
mov
movsl
add
jo
cmpsb
mov
add
xchg
pop
loop
mov
aad
lret
add
add
imul
add
hlt
pop
call
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
pop
insb
mov
mov
jp
mov
icebp
add
lret
add
mov
fmulp
add
xchg
arpl
push
mov
add
add
mov
add
add
push
js
add
lods
pop
add
movsb
add
stos
test
lock
icebp
sub
pop
cmpl
je
push
push
ror
shr
add
push
push
pop
add
add
dec
sub
sub
pop
not
add
pop
push
lea
add
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
bound
mov
mov
add
mov
add
add
rcrl
filds
out
stos
add
add
add
into
xchg
add
test
add
pop
call
push
ror
ror
shl
add
pop
cmpl
je
push
push
add
sub
dec
push
or
inc
add
ror
sub
rol
sub
pop
rol
add
rol
pop
push
dec
pop
push
push
not
not
pop
call
cmpl
je
push
push
add
dec
push
or
inc
add
lea
rol
lea
shr
sub
not
shr
sub
ror
pop
not
inc
pop
push
add
inc
pop
push
call
push
not
sub
pop
cmpl
je
push
push
xor
add
push
xor
add
inc
lea
ror
sub
inc
pop
sub
add
dec
sub
pop
push
push
lea
push
call
stos
push
in
jae
std
js
jae
add
add
add
mov
sti
xchg
add
add
pop
add
add
fdivs
add
jo
js
mov
mov
add
shlb
add
cli
lods
test
into
out
add
add
add
imul
aad
mov
enter
in
mov
hlt
lcall
push
push
lea
push
push
push
push
push
push
call
cld
add
mov
faddl
bound
subb
cmc
shlb
mov
add
xchg
out
mov
add
add
push
add
add
loope
fcomp
mov
movl
add
out
mov
add
pop
mov
lods
cmpsb
scas
je
jno
cld
sti
add
loopne
add
pushf
sub
add
mov
push
push
push
push
push
lea
push
call
enter
fadds
add
repnz
scas
leave
jmp
fdivrl
add
add
mov
fstl
add
mov
add
sub
pop
cmpl
je
push
push
inc
xor
dec
push
and
add
sub
sub
sub
sub
sub
lea
pop
sub
inc
pop
push
sub
lea
shl
sub
pop
push
push
push
call
addr16
nop
push
sahf
add
add
mov
jle
clc
cld
add
add
add
mov
push
leave
add
sahf
cmc
jae
lods
mov
add
in
cmc
sub
pop
call
cmpl
jne
push
shl
add
pop
mov
push
push
push
lea
push
call
add
push
in
in
add
ja
fisubl
ljmp
aad
mov
into
mov
add
mov
xchg
add
adcl
add
lea
push
push
lea
push
push
push
call
add
jb
mov
add
add
loop
call
jns
addb
jae
out
iret
add
std
into
movsb
xchg
aam
roll
icebp
add
mov
jge
add
nop
add
jl
jnp
outsl
js
add
jp
add
add
fs
add
add
sub
pop
jmp
push
push
push
push
push
push
push
push
call
pusha
in
fists
add
mov
pop
add
mov
pop
aam
pushf
fstpt
int
aad
add
xchg
jmp
xchg
repnz
rcrb
enter
sub
inc
not
pop
pop
push
push
push
lea
push
push
call
out
add
stos
mov
mov
add
mov
add
push
add
pop
add
add
pushf
mov
add
sub
pop
pop
push
push
push
lea
push
push
call
jp
pop
add
xchg
add
mov
add
push
add
add
sahf
push
add
push
stos
xchg
add
fstps
add
lock
sub
pop
leave
ret
push
inc
lea
ror
pop
push
mov
push
pop
add
cmpl
jne
push
push
ror
push
or
inc
add
sub
sub
lea
add
pop
inc
pop
push
xor
inc
sub
shl
pop
pushl
push
lea
push
lea
push
lea
push
push
push
call
jae
scas
add
add
out
xchg
add
mov
lcall
add
lea
add
add
test
add
fisubs
faddl
pusha
push
mov
icebp
stos
clc
shll
repnz
popf
add
add
add
lcall
inc
daa
add
push
push
lea
push
push
push
push
push
push
push
push
call
add
lret
loope
add
add
add
in
add
mov
add
movsb
loop
jae
add
push
arpl
movsb
push
add
jbe
add
add
pop
add
test
filds
xchg
out
sarl
cli
add
add
xchg
imul
mov
xlat
add
sub
pop
push
push
push
lea
push
push
lea
push
call
jmp
add
add
sti
ja
imul
fadds
add
add
jb
add
xchg
lret
xchg
add
roll
outsl
int
jno
add
jno
in
in
lcall
shr
daa
pop
add
push
ror
pop
cmpl
jne
push
sub
pop
mov
call
push
ror
pop
ret
push
lea
push
call
add
add
mov
cmc
mov
add
add
ja
in
test
jae
js
roll
add
in
mov
add
mov
add
pusha
add
mov
fildl
add
lahf
aam
cltd
jp
lods
add
std
jae
cld
jmp
rolb
sub
pop
jmp
push
push
push
push
call
add
enter
add
add
xchg
testb
bound
add
movsb
add
mov
pop
lcall
mov
add
lods
add
fisubrs
sub
pop
cmpl
jne
push
push
sub
push
push
pop
add
add
sub
xor
pop
sub
dec
dec
not
pop
push
shr
sub
dec
add
pop
pushl
call
push
add
add
sub
pop
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
pop
int
cli
sahf
add
ror
pop
add
sahf
xchg
mov
mov
add
jp
jecxz
mov
in
add
loopne
add
push
mov
mov
test
add
pop
repnz
fiaddl
xchg
data16
add
push
add
add
ljmp
add
add
add
into
stc
mov
add
lcall
rclb
push
push
push
push
push
push
push
call
add
add
add
lea
pusha
in
mov
xchg
add
mov
lods
add
add
lret
scas
pop
add
add
fcompl
sbb
jge
add
test
add
push
push
lea
push
push
lea
push
push
lea
push
call
add
shlb
je
add
mov
je
add
add
add
add
xchg
shl
sti
popa
xchg
cmpsb
add
test
add
mov
xchg
or
add
mov
lahf
add
sub
pop
cmpl
jne
mov
push
ror
rol
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
mov
jbe
lahf
mov
adc
add
test
shll
lods
movsl
add
push
xchg
movsb
add
out
add
test
arpl
push
std
stos
in
loop
pop
pop
add
mov
pop
add
sub
pop
call
aas
cmc
mov
add
add
xchg
add
pop
push
add
lock
add
xchg
enter
into
loopne
add
push
push
jbe
int3
push
gs
add
lods
jae
cmpsl
rcr
xchg
add
call
iret
sub
pop
call
push
push
push
xor
add
not
sub
ror
rol
pop
sub
pop
push
push
push
push
push
push
push
call
add
rcll
iret
add
fadds
add
add
jb
add
leave
std
mov
addb
jnp
add
movsl
out
add
add
xchg
ja
xlat
add
add
add
add
add
add
fwait
lahf
add
div
imul
jmp
mov
nop
test
jmp
add
lcall
jne
call
push
lea
push
lea
push
push
push
push
call
add
add
add
jecxz
jae
jl
int3
divl
pop
add
add
out
xchg
mov
mov
scas
mov
fiaddl
loopne
roll
addb
push
push
lea
push
and
add
add
inc
sub
inc
shl
dec
sub
pop
ror
add
not
pop
push
xor
sub
lea
pop
pushl
push
push
call
lds
add
add
fnstcw
push
xchg
add
add
jno
add
push
clc
into
test
mov
mov
pop
xlat
add
out
out
in
les
add
cli
ljmp
add
add
xchg
sub
pop
call
push
push
push
lea
push
push
push
lea
push
push
call
scas
fiaddl
out
test
add
add
enter
aad
cwtl
jl
add
add
push
xchg
jns
bound
scas
lcall
add
add
xchg
lret
add
add
add
add
loopne
fsts
mov
xchg
jne
in
loopne
lcall
shrb
xor
push
push
xor
push
sub
add
rol
not
rol
sub
ror
rol
add
pop
shr
ror
sub
add
pop
push
lea
push
push
lea
push
lea
push
call
pusha
add
out
add
pop
add
fnstsw
into
add
add
add
fwait
add
movl
shrl
add
add
add
mov
cmpsl
add
add
jae
mov
arpl
add
jnp
imulb
roll
jnp
pop
adcl
push
add
jne
push
pop
call
push
lea
push
push
lea
push
push
push
push
call
cmp
add
mov
mov
add
pop
cli
ja
in
push
hlt
mov
leave
add
add
add
loop
mov
mov
loope
add
mov
add
jb
data16
add
mov
add
shrb
orb
push
push
pop
add
lea
sub
lea
pop
add
rol
pop
push
xor
not
pop
pushl
push
push
call
add
add
testl
fwait
loopne
add
std
int3
push
mov
stos
pop
add
addb
add
shlb
cwtl
mov
sub
pop
call
call
push
push
add
push
or
inc
add
add
sub
sub
dec
rol
sub
ror
pop
add
ror
ror
pop
push
lea
push
lea
push
push
push
call
test
xchg
loope
xchg
add
sarb
test
add
add
add
add
jo
int3
popf
xchg
add
mov
add
addb
scas
mov
addr16
pop
pushl
push
sub
not
pop
call
call
push
push
shr
shl
dec
push
push
pop
add
sub
ror
dec
lea
sub
shr
add
add
add
pop
pop
push
lea
push
push
push
push
push
call
mul
js
xchg
xchg
lods
insb
in
add
mov
loope
add
movl
add
pop
add
add
test
add
out
xchg
in
out
mov
push
mov
add
pushf
fcompl
popa
lahf
lods
xchg
hlt
mov
sub
pop
pushl
push
push
push
lea
push
push
push
call
add
shrl
add
jbe
lcall
mov
addl
xchg
test
cmc
out
out
add
sub
pop
call
call
push
push
xor
sub
push
sub
add
sub
ror
sub
not
pop
dec
pop
push
dec
pop
pushl
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
out
xchg
mov
fcoms
add
incb
call
add
add
outsl
add
add
stc
mov
add
sub
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
call
xchg
add
mov
mov
mov
sahf
push
add
add
add
fdivr
call
mov
mov
ret
add
add
pop
push
subl
add
add
mov
add
add
xchg
fwait
push
xchg
lcall
shrb
divb
push
dec
push
xor
add
sub
sub
pop
rol
shl
pop
push
sub
add
shl
pop
pushl
push
push
call
add
mov
jo
cmpsb
add
in
add
popf
add
lods
jmp
mov
add
jbe
clc
test
push
add
stos
xchg
cli
sub
pop
call
call
push
push
sub
ror
push
or
not
add
shr
ror
add
sub
rol
not
pop
shl
pop
push
shr
shl
inc
not
pop
pushl
push
sub
ror
sub
pop
call
push
sub
pop
call
push
push
add
rol
xor
push
xor
add
ror
shr
lea
rol
sub
add
not
pop
xor
add
not
pop
push
push
push
lea
push
lea
push
call
add
fcmove
push
add
in
add
lock
cli
lahf
rcr
imul
aam
shrb
add
pop
push
icebp
add
add
mov
rorl
lcall
jne
push
add
pop
call
push
add
pop
lea
push
push
push
push
push
call
lods
add
xchg
jne
xchg
movsl
push
jmp
add
add
xchg
insb
js
addl
mov
lock
lcall
shrb
xor
shr
push
sub
add
shl
sub
dec
rol
pop
sub
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
push
nop
mov
movsb
add
add
push
mov
add
add
imul
mov
roll
lcall
add
shll
xchg
loop
push
add
loopne
out
add
sbb
test
lahf
sub
pop
pushl
push
dec
inc
add
pop
call
call
push
push
inc
ror
shl
push
and
add
dec
sub
sub
pop
sub
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
jne
jp
mov
add
mov
add
add
pop
add
add
add
test
add
xchg
mov
cld
scas
push
add
add
sub
pop
pushl
call
push
shl
lea
add
pop
call
push
push
inc
shl
dec
push
or
not
add
add
rol
rol
sub
dec
pop
dec
pop
push
dec
add
pop
pushl
push
lea
push
push
lea
push
push
push
push
call
jns
clc
push
mov
add
add
add
add
xchg
push
rol
xchg
add
add
push
add
test
push
jmp
js
arpl
call
add
mov
cld
lock
cmpb
add
cmpsl
add
fldl
push
push
faddl
add
add
in
in
lcall
pop
sbb
add
shrb
or
pop
push
push
push
pop
add
xor
sub
shr
ror
not
pop
sub
inc
pop
push
sub
inc
add
pop
pushl
call
push
push
lea
xor
push
sub
add
sub
add
not
pop
lea
dec
pop
push
push
dec
rol
push
or
inc
add
sub
inc
sub
shl
inc
ror
pop
lea
not
pop
push
lea
lea
add
pop
call
pop
push
sub
inc
not
pop
dec
jne
call
push
add
dec
rol
pop
mov
push
push
push
push
push
lea
push
push
call
add
mov
stc
std
in
add
lock
into
add
add
mov
pop
fadd
jne
scas
xchg
push
imulb
into
test
add
mov
mov
movl
lea
popf
add
add
pop
push
jecxz
std
xchg
fisubs
lcall
add
pushf
and
ljmp
and
test
loopne
lea
rol
push
sub
add
add
rol
lea
rol
sub
sub
pop
sub
sub
dec
ror
pop
push
lea
push
call
shrl
jbe
mov
jb
add
mov
mov
sarl
push
add
add
add
addb
icebp
pop
cltd
pushf
popa
add
hlt
rol
pop
pop
arpl
add
add
sub
pop
pushl
push
pop
call
push
push
add
add
not
pop
call
push
push
push
or
inc
add
xor
sub
lea
not
sub
lea
pop
sub
not
lea
pop
push
shr
pop
pushl
push
lea
push
push
push
push
push
push
push
push
push
call
push
add
mov
in
imul
fst
mov
rolb
add
add
stos
movsl
mov
jle
lret
add
add
push
lods
lods
lods
imul
add
mov
mov
mov
fcomps
test
add
push
lea
sub
pop
call
mov
push
push
push
call
add
xchg
xchg
mov
out
add
test
jp
add
testb
cmp
add
add
rolb
pushf
add
cltd
pusha
notl
xor
outsl
jne
out
mov
rolb
pop
lock
in
hlt
pop
lea
push
push
shl
push
and
add
ror
sub
pop
shl
add
pop
push
push
call
cmpb
add
add
aad
push
in
push
add
add
xchg
add
add
fildl
add
xchg
rcll
lods
add
add
ret
add
pop
pusha
js
add
add
mov
jbe
add
out
add
add
jbe
jecxz
pop
sub
pop
pushl
push
ror
pop
call
push
dec
sub
pop
lea
push
lea
push
call
rol
pop
add
pop
add
add
add
push
add
add
add
repnz
loopne
mov
push
mov
in
clc
pop
push
push
push
push
push
push
push
push
call
out
push
add
leave
mov
add
add
push
cltd
aad
mov
ret
xchg
push
addb
add
loopne
mov
mov
cwtl
pusha
ja
mov
mov
roll
add
jne
push
push
add
shr
shr
push
and
add
shr
add
shr
sub
pop
ror
rol
add
pop
push
rol
shl
rol
pop
push
push
lea
push
push
call
fildl
je
hlt
add
jno
add
jns
ret
add
je
add
mov
push
add
mov
test
mov
movsl
cmc
rcl
shl
pop
jb
test
add
add
addr16
sub
pop
call
push
push
shl
sub
inc
add
push
or
inc
add
sub
sub
inc
add
sub
dec
pop
inc
lea
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
ffree
add
bound
movsl
mov
add
add
add
add
jb
push
add
xchg
add
out
add
cmpsl
movsb
add
fsubr
add
add
ret
shlb
in
fcompl
jne
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
rolb
mov
ficoms
xchg
mov
pop
mov
cld
lahf
lea
in
loope
gs
add
addl
add
add
call
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
add
jge
push
add
add
add
ljmp
stos
lahf
pushf
lods
jns
add
lret
add
fisubs
in
loopne
call
push
push
inc
push
or
not
add
add
sub
sub
lea
rol
pop
add
pop
push
xor
xor
ror
pop
pushl
call
push
dec
sub
pop
call
pushl
push
push
push
lea
push
call
enter
nop
stc
add
jle
jp
mov
add
mov
jp
add
add
pop
add
in
add
in
add
push
mov
pop
cld
js
repnz
enter
add
scas
add
clc
add
push
add
sub
pop
mov
push
push
lea
push
push
push
call
repnz
push
call
add
stos
ja
add
add
mov
fsubs
into
pop
add
mov
add
push
scas
flds
lcall
xchg
stc
ljmp
dec
int
push
not
push
push
pop
add
shl
sub
xor
add
sub
pop
rol
add
pop
push
push
push
push
lea
push
push
call
stos
pop
xchg
add
mov
add
out
imul
addl
add
add
mov
mov
adcb
fwait
add
cmpsb
pop
int3
ja
imul
add
lcall
sub
pop
pushl
call
push
shl
sub
inc
pop
push
call
push
push
inc
sub
push
xor
add
rol
sub
sub
pop
not
pop
push
lea
push
lea
push
push
push
push
push
push
call
add
xchg
add
out
jmp
pop
clc
cltd
imul
les
jp
mov
sti
mov
add
add
add
mov
push
xchg
add
add
insb
cmc
stc
jbe
out
add
ret
lcall
push
leave
jl
xchg
mov
sub
pop
pushl
push
ror
add
sub
pop
call
push
dec
shr
pop
push
call
push
lea
push
call
xchg
popa
lds
jbe
add
jp
add
xchg
xchg
jecxz
movsl
loop
add
popf
in
fchs
loopne
add
push
scas
jecxz
addb
jno
cwtl
test
add
xchg
add
add
sahf
add
in
je
addl
jp
add
add
mov
mov
ljmp
pop
leave
add
push
add
not
sub
pop
pop
pop
push
push
call
xchg
add
pop
mov
add
mov
add
mov
add
add
xlat
lret
add
add
add
pop
add
test
je
fchs
mov
pushf
add
add
cwtl
add
xchg
test
clc
pop
pop
push
shl
sub
pop
xor
push
sub
pop
inc
push
dec
shr
ror
pop
ret
push
push
call
insb
lahf
jle
ret
std
jecxz
add
mov
cmc
xchg
jmp
add
jne
add
push
rolb
test
arpl
mov
out
test
add
mov
repnz
add
add
test
add
add
add
add
sub
pop
leave
ret
push
lea
push
call
int
add
movsl
out
lock
xchg
shlb
pop
scas
xchg
push
add
lret
add
movsb
add
enter
lock
add
add
rorl
sub
pop
push
push
lea
push
push
push
push
call
add
add
fs
add
fcompl
addl
test
jmp
mov
hlt
jge
cmpsb
add
xchg
add
fstl
add
add
add
xorb
mov
add
add
out
popf
loope
add
add
lea
imul
les
sub
pop
mov
push
ror
pop
cmpl
jne
push
push
push
push
call
pushf
leave
mov
cwtl
add
pushf
int
mov
fidivs
add
iret
mov
data16
sbbl
add
pop
add
repnz
fdivl
add
pop
in
mov
les
filds
inc
and
push
rol
add
pop
jmp
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
roll
add
jno
push
fists
enter
xchg
mov
add
mov
mov
iret
into
add
add
flds
mov
add
mov
jnp
add
sahf
sub
pop
mov
and
push
not
pop
xor
push
push
push
push
lea
push
push
lea
push
push
call
out
pop
addl
cmpsb
add
filds
add
data16
xchg
mulb
int3
rcrl
popf
lods
hlt
xchg
fldl
add
push
add
push
mov
pushf
lods
mov
add
mov
jp
pop
mov
add
rcl
movsl
add
mov
test
in
ja
add
xchg
leave
jo
lea
pop
xor
add
push
ror
pop
xor
dec
push
add
inc
rol
xor
pop
sub
push
pop
jmp
push
push
push
lea
push
push
lea
push
push
push
push
push
call
enter
out
pusha
mov
test
pop
cli
cld
mov
addb
roll
add
fldl
add
add
add
mov
sub
push
push
lea
push
push
lea
push
call
push
idiv
mov
fs
imul
outsl
jbe
add
pushf
outsl
je
cli
pop
xchg
icebp
add
add
xchg
jns
add
in
push
jnp
iret
add
add
cmpsl
add
add
push
push
ja
clc
push
jge
jo
add
push
xchg
add
add
pop
stc
jne
sub
pop
pushl
pop
push
rol
dec
dec
pop
sub
cmp
jne
push
push
lea
push
lea
push
call
add
jns
add
add
sahf
add
mov
in
add
std
add
push
pop
mov
lock
lcall
enter
push
push
lea
push
push
push
push
push
lea
push
call
movsl
std
cmc
ffreep
insb
in
jmp
rolb
testl
xchg
mov
pusha
add
add
mov
add
add
xchg
add
arpl
add
xchg
mov
add
add
add
in
loopne
sub
mov
push
sub
pop
shr
add
push
push
lea
push
push
call
add
add
in
test
pop
shll
pop
jb
xchg
fldl
sti
pop
pop
add
rcrb
in
mov
add
add
jecxz
cmpsl
mov
iret
out
test
mov
movb
fiadds
add
add
mov
add
add
fisubs
in
filds
push
imul
jmp
xor
push
push
push
push
lea
push
call
hlt
push
jge
add
mov
add
clc
mov
push
mov
push
fwait
jl
leave
add
jge
les
jns
mov
add
add
mov
add
pop
add
mov
jno
mov
add
mov
add
add
add
sub
pop
pushl
pop
push
push
push
push
lea
push
push
push
push
push
call
fwait
jnp
add
sti
add
push
arpl
add
xchg
jmp
add
add
add
arpl
add
add
add
sti
cld
notb
lds
movb
in
out
popl
out
add
push
mov
rolb
add
in
fdivr
lcall
jmp
pop
and
push
push
push
push
push
call
xlat
insb
mov
push
enter
add
call
mov
add
cwtl
jge
mov
add
roll
jle
add
lret
add
lcall
jmp
push
lea
push
push
push
lea
push
push
call
xchg
add
xchg
add
imul
lcall
push
mov
push
movsl
add
add
jne
lahf
movsb
test
in
call
cmp
jne
leave
push
dec
pop
ret
push
shr
pop
push
push
push
lea
push
push
push
lea
push
push
call
out
add
add
jne
add
add
lock
int
mov
add
xchg
add
lods
add
popf
jmp
mov
xchg
add
add
flds
push
loop
mov
std
xchg
test
add
mov
in
in
mov
push
pop
add
push
push
call
mov
popl
loopne
in
mov
cld
pop
add
add
enter
xchg
add
xchg
stos
clc
push
add
push
mov
add
mov
ret
leave
sub
pop
push
push
shr
pop
push
push
push
push
push
lea
push
push
call
cltd
int
lahf
cwtl
rolb
add
addb
into
xchg
add
outsl
mov
add
insb
xchg
out
cmpsb
loop
sub
pop
push
push
rol
shl
pop
push
push
push
push
push
push
push
push
push
push
call
sbbb
in
mov
roll
sti
int
pop
in
mov
add
jp
push
add
xchg
add
xchg
add
add
cli
into
add
lcall
pop
or
xorl
xchg
xor
jp
lea
push
push
push
push
push
call
call
add
je
add
jne
add
mov
add
or
std
filds
jae
in
popf
imul
pop
ret
andb
add
testl
into
jnp
aam
fdivr
pusha
outsl
fstl
jne
add
fcomps
push
cmp
push
push
push
push
push
call
add
add
jb
scas
fwait
add
cmpsl
pop
add
add
gs
lea
mov
add
cmpsl
add
add
mov
add
sub
pop
sub
mov
push
push
push
push
push
push
call
xchg
mov
roll
add
xchg
add
test
add
add
add
mov
add
add
add
movsl
add
add
in
call
push
sub
pop
add
push
push
lea
push
call
pop
icebp
push
sbbb
les
push
jmp
movsb
movsl
aam
add
add
fdivr
jnp
mov
jo
imul
jbe
mov
in
hlt
lcall
fwait
addb
add
mov
call
jno
jo
call
xchg
add
add
mov
in
cld
int3
mov
hlt
xchg
bound
add
mov
add
cmpsl
fiaddl
jmp
fbld
lock
xchg
bound
add
add
add
stos
xchg
addb
mov
in
lock
lcall
pop
or
subb
movsb
jo
ret
push
push
push
push
lea
push
lea
push
call
jp
add
add
pop
shrl
add
aam
mov
add
rclb
lds
add
lret
jne
pop
add
mov
add
jle
add
add
add
jge
xor
push
push
push
lea
push
push
push
push
push
push
push
call
leave
ja
int3
cmpsl
pop
mov
testb
push
add
mov
je
int3
mov
add
mov
add
rcl
add
add
add
add
cmpsl
out
jle
lock
lock
mov
imul
add
pop
mov
add
sub
pop
mov
and
push
not
sub
pop
rol
push
push
call
test
fsts
pop
jle
push
pushf
cltd
xchg
add
add
add
popf
add
xchg
push
mov
add
addr16
data16
rolb
lea
push
lea
push
call
xlat
add
add
roll
xlat
fsts
add
movb
roll
add
add
lret
add
mov
xchg
add
jmp
nop
add
mov
jbe
add
int
add
mov
mov
iret
mov
std
test
add
add
in
hlt
lcall
add
push
push
call
mov
out
data16
fsts
test
fadds
add
add
fiaddl
add
fiaddl
gs
movsl
fiadds
mov
call
shll
lcall
cmp
jne
push
inc
sub
sub
sub
pop
add
cmp
je
push
lea
push
call
lcall
add
out
mov
push
push
add
in
jle
add
jecxz
push
add
add
in
add
pop
jl
fldl
test
lcall
ret
adc
not
lea
sub
pop
cmpl
jne
push
sub
shr
add
pop
xor
push
sub
add
xor
pop
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
ret
cli
addb
int3
mov
mov
imul
add
pop
add
out
add
pop
add
add
addr16
pop
pop
pop
push
xor
ror
inc
pop
pop
push
push
push
lea
push
push
push
push
call
push
add
movsb
iret
push
add
cmpsl
in
fdivrp
add
add
add
add
data16
add
lahf
jns
and
push
push
mov
add
lods
push
mov
add
pop
leave
push
push
push
push
push
push
call
aad
lret
rolb
add
mov
mov
add
push
test
jecxz
add
cld
mov
pushf
xchg
mov
nop
add
add
add
lret
xchg
js
jl
loop
test
js
add
movsl
sub
pop
ret
push
sub
add
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
push
js
pop
xchg
mov
roll
jnp
add
in
jno
mov
xchg
add
movsl
mov
rorb
rolb
mov
popf
pop
stos
mov
add
in
add
rolb
add
fs
push
popl
lahf
sub
pop
add
push
inc
rol
shr
pop
mov
push
shr
rol
lea
xor
pop
push
push
dec
rol
shr
inc
pop
mull
push
ror
pop
pop
push
dec
pop
call
push
shl
inc
dec
pop
push
push
xor
rol
xor
dec
pop
call
push
push
push
call
add
add
mov
xchg
pushf
in
xchg
add
add
fsubp
add
ja
mov
add
test
add
mov
add
xor
push
push
push
push
push
lea
push
push
call
add
add
pop
outsl
nop
sahf
xchg
xchg
imul
fildl
repnz
hlt
js
fld1
in
add
stos
mov
jo
add
out
cmpsl
popf
add
add
enter
pop
mov
pop
pop
pop
push
rol
pop
pop
push
not
not
pop
pop
push
push
push
call
jne
push
add
push
push
mov
add
aad
add
scas
jp
stos
sti
test
add
add
mov
flds
loop
out
test
add
add
add
in
mov
cli
scas
ffree
xchg
adcl
hlt
pop
pop
leave
push
dec
xor
lea
pop
ret
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
add
filds
loope
add
xchg
out
add
pusha
push
push
fsub
add
jo
add
ja
add
lods
push
mov
add
in
loopne
push
push
inc
sub
sub
shl
pop
mov
push
lea
push
push
push
push
call
pop
loop
ficompl
add
roll
jo
hlt
add
mov
jle
lret
add
add
scas
mov
subb
mov
sti
stc
add
mov
mov
mov
in
xlat
add
mov
incb
lcall
hlt
push
inc
rol
inc
inc
pop
push
push
push
push
push
call
add
sahf
mov
mov
pop
add
add
or
addl
add
clc
shrl
add
push
add
add
fs
aad
add
add
add
mov
addb
imul
push
mov
add
add
add
aam
ljmp
lcall
push
push
push
push
lea
push
push
push
push
call
lods
add
mov
repnz
xchg
xchg
mov
jl
cwtl
add
mov
xchg
add
fldenv
dec
add
mov
imul
add
add
add
add
test
ljmp
fadds
fistpll
loop
ret
mov
sub
pop
push
push
sub
pop
mov
push
inc
sub
add
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
jle
add
outsl
add
mov
out
pop
add
add
in
mov
jne
add
jne
add
pop
gs
pop
add
add
jbe
add
push
data16
in
in
pop
push
shr
ror
pop
lea
push
add
not
pop
sub
mov
push
inc
pop
shr
push
sub
add
pop
add
push
shr
sub
add
pop
mov
add
push
shr
pop
pushl
push
inc
xor
inc
pop
popl
mov
push
push
push
call
add
icebp
test
add
add
pop
add
add
iret
stos
call
add
mov
pusha
add
add
mov
mov
sarb
push
add
in
hlt
lcall
stc
push
inc
pop
xor
push
sub
dec
pop
lea
push
ror
pop
mov
push
sub
add
xor
pop
add
push
pop
xor
push
push
push
lea
push
push
push
lea
push
call
add
add
add
mov
imul
addr16
mov
add
in
add
mov
lret
mov
add
jnp
add
out
xchg
out
jge
sub
pop
rol
push
rol
sub
sub
pop
nop
push
push
call
add
pop
shrl
add
push
jbe
add
leave
fdivl
ja
add
add
add
add
add
lret
test
pop
out
add
leave
enter
test
in
clc
pop
nop
xor
push
rol
pop
nop
push
push
push
push
push
push
call
testl
add
out
cmpsb
pop
popf
add
add
add
loope
test
int3
lods
mov
push
addr16
fldt
add
aad
jno
add
fiadds
add
out
test
add
popf
stos
rorl
sahf
sub
pop
nop
inc
push
add
shr
sub
xor
pop
nop
push
push
push
call
fcoml
fiadds
push
lahf
add
ja
mov
add
add
ret
add
repnz
fistpl
cltd
andb
xchg
mov
fadds
push
lea
push
lea
push
call
ret
add
data16
gs
test
loop
clc
add
in
imul
lahf
pop
push
pop
add
add
fnstcw
cli
add
xchg
imul
add
in
les
add
add
add
popa
add
push
add
add
mov
cmpb
jne
add
push
push
push
push
push
lea
push
call
mov
test
push
push
add
mov
add
add
add
add
add
add
sub
pop
nop
nop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
pop
add
add
in
add
movb
in
jge
add
mov
nop
add
lods
lret
fwait
add
in
add
xchg
icebp
ficompl
fwait
out
test
lcall
inc
or
test
not
lea
ror
pop
nop
nop
push
lea
not
pop
inc
nop
push
shl
rol
pop
nop
cmp
jb
push
lea
push
call
push
mov
imul
xchg
pusha
lods
cld
clc
out
add
popa
gs
add
mov
add
add
xlat
lods
add
add
add
add
lds
ret
in
test
fldl
jp
popf
call
addb
popf
movsb
in
add
jo
in
clc
lcall
rclb
mov
ja
xor
pop
jmp
mov
push
add
sub
pop
add
push
push
push
push
lea
push
push
push
push
push
call
push
clc
add
add
scas
mov
movl
lods
add
lock
add
add
in
fcompl
mov
jb
lea
push
lea
push
push
call
vshufpd
std
aad
mov
rolb
mov
xchg
add
add
cwtl
add
popf
add
mov
addl
sub
pop
mov
push
lea
push
push
push
push
push
push
call
into
mov
add
mov
add
leave
add
mov
jb
in
add
into
add
addb
int
add
divl
out
push
add
add
mov
insb
add
xchg
add
add
jle
enter
loope
popa
jl
popf
pop
sub
pop
add
push
push
push
lea
push
push
call
mov
loope
push
movl
mov
icebp
add
add
add
jl
testl
repnz
mov
test
jecxz
add
add
add
add
call
mov
lahf
sub
pop
mov
push
push
push
lea
push
push
call
in
popa
xchg
add
mov
lods
add
leave
outsl
xchg
add
test
call
mull
add
gs
add
jmp
icebp
add
pop
add
mov
add
jp
mov
aam
lret
fildl
add
add
int
push
add
mov
add
pop
add
add
test
in
in
lcall
leave
push
push
lea
push
push
push
push
lea
push
push
push
call
jne
stos
add
data16
mov
add
mov
push
add
mov
in
mov
add
add
add
sub
pop
xor
push
add
pop
shl
xor
push
push
lea
push
call
jmp
shrb
shrb
insb
add
xchg
add
mov
cli
jbe
mov
add
add
mov
add
js
ljmp
sub
pop
shl
push
push
push
push
lea
push
push
push
call
pop
push
lock
add
add
imul
arpl
in
imul
add
aam
mov
mov
testb
pusha
in
cmpsl
jae
pop
add
fiaddl
lcall
dec
nop
add
loope
push
push
call
sarl
sbbb
push
add
ret
add
add
mov
mov
fsub
jmp
add
add
leave
jne
add
fwait
add
add
call
rolb
mov
add
arpl
lcall
or
push
lea
push
push
push
push
push
push
lea
push
push
push
call
bound
push
mov
mov
add
mov
add
add
cltd
roll
add
hlt
add
rcll
pop
popf
add
arpl
xchg
add
mov
add
call
jle
pusha
add
roll
rcr
mov
fdivr
lcall
rcll
mov
dec
add
add
add
mov
pop
add
xchg
movb
sarl
add
jmp
in
loop
pop
call
jmp
add
lock
mov
cmpsl
out
add
cmpsl
aad
mov
pushf
jns
lret
out
sahf
test
clc
frstor
clc
pop
add
pop
push
shl
add
inc
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
add
push
incb
lahf
add
int
loope
scas
mov
add
fistl
into
out
jle
stos
jbe
out
mov
aam
mov
outsl
lret
jbe
lods
add
add
add
mov
fdivr
lcall
push
dec
pop
pop
leave
push
inc
pop
ret
push
inc
pop
push
push
push
push
push
push
lea
push
push
push
call
cwtl
xchg
add
fidivs
add
xlat
add
lods
add
add
xlat
add
jmp
jl
scas
add
pop
add
call
popf
and
sarb
add
loop
add
add
sub
pop
mov
push
push
lea
dec
shr
not
pop
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
out
test
addl
add
stc
lods
pop
add
movsb
pop
add
sahf
add
mov
out
test
xchg
out
out
mov
jecxz
add
xchg
cltd
out
add
mov
add
pusha
movsl
rcrb
lcall
push
lea
push
lea
push
call
add
add
mov
int
addb
push
stc
add
imulb
xlat
jo
jb
xchg
add
add
mov
mov
add
je
add
in
lea
add
add
fwait
mov
add
push
sub
pop
mov
push
inc
sub
add
pop
mov
push
shl
dec
pop
mov
test
je
push
add
sub
pop
mov
push
not
not
pop
test
je
push
push
push
push
push
push
lea
push
call
add
add
mov
add
cmpsl
in
add
add
insb
push
add
pop
push
int
jge
add
add
pop
jmp
add
aad
ljmp
mov
add
roll
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
call
add
mov
rcrb
add
ret
mov
add
add
arpl
loop
xchg
int
ret
sub
pop
mov
push
add
sub
add
sub
pop
mov
push
lea
push
push
lea
push
push
push
push
push
push
call
add
push
jo
sahf
fadds
push
pop
mov
sahf
icebp
mov
ret
mov
add
add
push
add
add
add
data16
mov
add
jnp
add
jecxz
out
mov
loopw
add
adcl
fidivl
add
sub
pop
inc
cmp
je
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
loope
jecxz
add
add
loope
test
mov
xlat
pop
add
jge
leave
pop
add
fstpl
iret
mov
xchg
add
mov
loop
xchg
test
je
mov
push
pop
inc
push
sub
pop
cmp
je
push
push
lea
push
push
lea
push
push
lea
push
call
add
cld
add
xchg
mov
int3
jge
int3
add
repnz
call
add
js
fimuls
mov
mov
movl
add
mov
add
divb
add
out
roll
cli
addl
sub
pop
test
jne
push
shr
add
shr
shl
pop
xor
pop
push
ror
xor
lea
pop
pop
pop
push
shr
sub
pop
pop
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
mov
jno
test
add
add
add
push
xchg
add
aam
imul
push
test
push
test
lcall
push
sub
pop
ret
mov
push
lea
push
push
call
mov
imul
lea
jne
int
jne
shll
roll
add
clc
lahf
fadds
add
push
outsl
jp
into
add
lcall
mov
jle
clc
xchg
xchg
push
add
mov
jb
in
hlt
pop
inc
cmp
jne
push
push
push
push
push
push
push
push
push
push
call
outsl
push
add
loopne
push
push
fistpl
add
add
add
add
mov
add
fcomps
jle
push
push
push
push
push
push
push
call
mov
push
add
add
add
jnp
add
add
jp
movb
enter
add
add
les
add
jmp
lcall
test
add
add
add
sarl
sub
pop
mov
push
add
rol
pop
test
je
mov
push
shl
rol
inc
pop
add
push
push
push
push
push
push
push
push
push
push
call
test
add
sti
mov
mov
out
xor
fildl
mov
outsl
add
jbe
add
mov
test
add
fdivrl
add
xchg
roll
add
enter
add
mov
in
fdivr
lcall
loopne
test
sti
call
sahf
push
cmp
mov
lea
push
call
lock
test
mov
scas
add
jge
mov
mov
out
pop
add
push
call
mov
arpl
add
add
jl
sub
pop
mov
push
shl
pop
test
je
push
lea
push
push
push
call
jecxz
add
cmpsl
mov
mov
loope
into
add
add
jb
xchg
mov
jl
add
jne
mov
mov
ljmp
lret
add
mov
mov
jae
call
repnz
loope
out
add
fadds
add
std
sub
pop
mov
push
lea
push
push
push
call
std
loopne
add
movsl
mov
add
add
add
les
pop
add
pop
add
add
add
call
in
lock
add
push
xor
sub
not
sub
pop
cmp
je
push
xor
sub
sub
pop
jmp
push
lea
pop
xor
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
movl
jns
mov
out
test
add
insb
ja
cmpsl
xchg
jecxz
in
add
add
add
mov
in
add
add
insb
add
lret
out
ljmp
loop
scas
loope
add
pop
sub
pop
pop
push
push
push
push
push
push
call
pop
addb
scas
aam
add
cld
xchg
lods
out
push
jbe
fsubp
add
hlt
mov
add
fsubl
add
cwtl
out
lods
add
add
lahf
add
xchg
jp
movsb
testb
add
pop
mov
pop
lret
add
add
in
call
pop
push
inc
pop
pop
pop
push
shl
add
add
sub
pop
leave
ret
push
push
call
mov
add
add
lea
test
add
lock
xchg
pop
xchg
jb
sub
pop
lea
push
shr
sub
add
pop
pop
push
push
push
call
add
jne
pop
add
add
add
bnd
mov
push
faddl
mov
aam
movb
push
add
mov
push
cmpsl
jno
mov
add
je
lds
add
add
test
add
add
bound
lcall
push
lea
push
push
push
push
call
rol
ja
mov
adcb
mov
icebp
lcall
add
sti
ret
lret
lea
mov
add
loop
mov
add
add
mov
test
mov
mov
add
add
jae
add
xchg
jb
lahf
mov
iret
fmuls
stos
addr16
repnz
sub
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
mov
movsl
cmpb
add
shrl
mov
outsl
mov
aad
push
add
imul
loop
add
add
in
sub
pop
pop
push
ror
pop
leave
ret
push
lea
push
push
call
notl
pop
lock
xchg
fs
push
pop
jae
add
jb
arpl
hlt
add
add
add
in
test
hlt
add
sub
pop
mov
push
push
lea
push
push
push
push
push
call
movsb
ret
xchg
adc
repnz
add
test
jge
aam
add
ja
add
arpl
je
push
fisubrs
mov
aad
xchg
add
add
testl
add
add
pop
push
add
fs
add
adcl
hlt
jle
movsb
popf
add
icebp
sub
pop
pop
pop
push
sub
rol
xor
pop
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
jge
fisubrl
add
in
add
add
jbe
imull
movsb
add
add
dec
add
push
fwait
hlt
xlat
cmc
mov
in
add
add
les
mov
pop
aam
cmpsl
loop
mov
in
mov
call
add
add
add
xlat
add
add
xlat
jne
enter
in
fdivr
lcall
push
add
xor
shl
pop
ret
cmp
mov
xor
mov
mov
mov
icebp
into
mov
ror
mov
mov
mov
out
lret
cld
lret
xchg
lret
or
leave
dec
enter
add
xchg
inc
dec
lret
dec
sahf
mov
call
out
pop
imul
mov
xchg
clc
sbb
pop
mov
lret
xor
incl
mov
mov
ljmp
test
lret
mov
add
pop
xchg
mov
mov
jg
sbb
push
ficomps
out
lock
jo
dec
xchg
aaa
movhps
scas
lods
xchg
adc
stos
insb
lock
sarl
sub
push
vpaddb
cmp
clc
mov
out
and
inc
pop
jb
add
fmuls
mov
jmp
inc
or
clc
in
jne
fidivl
mov
cmp
xor
fistpll
lea
cmc
mov
and
and
pushf
in
call
xor
out
js
cwtl
in
popa
inc
out
cmp
adc
inc
leave
and
clc
idivb
rcll
cld
lock
insb
sbb
mov
cmpb
mov
mov
xchg
popa
jmp
adc
cwtl
mov
in
pushf
inc
push
repnz
dec
add
push
sub
mov
lds
add
into
outsb
or
leave
jnp
or
es
xchg
ja
loope
inc
xlat
xchg
arpl
addb
mov
loope
movsl
out
xor
add
jo
and
pop
daa
adc
fwait
xchg
aam
repnz
or
dec
in
mov
in
sub
aad
out
aad
bnd
xchg
je
gs
loope
into
cmp
lahf
and
adc
roll
pop
adc
add
gs
enter
sbb
repnz
pushf
sbb
add
and
adc
shll
add
not
int3
insl
inc
xor
daa
add
inc
sbb
in
int
movsb
jl
shll
inc
sbb
cli
mov
cs
adc
pop
jb
pop
dec
mov
in
xor
dec
cmp
inc
bound
test
and
fsubrl
popl
dec
pop
mov
lods
outsl
rcrl
cltd
mov
orl
int
mov
sbb
xor
xchg
jae
mov
test
insl
fstps
sti
mov
sahf
fistpl
pushf
inc
lds
xchg
sub
daa
inc
movsl
test
loop
scas
repnz
jne
jp
repnz
and
push
mov
and
out
push
xor
mov
mov
stc
sahf
inc
mov
out
data16
jae
rorb
aam
shlb
stos
ss
std
adc
negl
orl
and
jle
jl
ja
out
adc
repnz
push
ljmp
daa
mov
or
xor
jns,pt
inc
inc
ror
dec
hlt
andl
cmpsl
stos
push
lods
mov
add
sti
subl
outsl
adc
outsb
fsubrp
fnstcw
add
jg
xor
std
push
je
jae
aas
test
sub
shlb
push
pop
cwtl
mov
pop
ljmp
and
je
scas
lret
push
jmp
mov
mov
in
pop
adc
in
mov
ds
or
mov
xor
jno
pop
xlat
and
dec
inc
dec
xchg
cmp
out
test
push
jl
sub
mov
mov
and
outsl
dec
cmpsl
jns
test
jg
sbb
fdivl
sbb
mov
xor
adc
ss
mov
test
repnz
popf
sti
jg
test
mov
push
outsl
fmuls
iret
jb
xchg
pop
xchg
loopne
xchg
int3
mov
lcall
popa
jmp
test
divb
mov
pushf
mov
push
xchg
and
pop
sub
ds
popa
out
cmp
sbb
add
pop
push
cmpsb
xchg
or
cs
add
jmp
hlt
aas
imul
ja
mov
add
xchg
addr16
jmp
adc
stos
mov
sbb
mov
and
movsl
or
les
cmp
mov
inc
es
ret
sahf
add
sub
ss
inc
adc
mov
xchg
push
cmp
popa
ret
jg
hlt
pop
jo
cmp
pop
jbe
test
pop
outsl
lret
and
outsb
mov
into
cmpb
xor
loopne
daa
xor
cmp
jmp
mov
push
shl
pop
xlat
mov
dec
push
incb
add
ja
xchg
cmp
inc
mov
fwait
inc
push
dec
add
mov
fwait
cmpsb
fsubr
xchg
pop
add
xchg
movsl
addr16
dec
outsb
mov
jne
dec
fistpll
shlb
jmp
repz
fimuls
in
mov
outsl
xchg
dec
adc
sub
xchg
sbbl
dec
cmp
pop
out
sbb
insl
inc
inc
add
lods
and
push
ret
les
jnp
mov
test
pushl
xchg
sti
aaa
push
and
sbb
test
sahf
lods
shlb
xchg
icebp
inc
sub
cmpsb
inc
clc
jb
scas
cmp
jnp
xor
add
mov
movsb
xchg
and
outsb
mull
or
sub
mov
push
mov
jbe
stos
jb
sub
jmp
cmp
push
push
movsl
loop
or
or
push
pop
int
icebp
jp
sbb
int3
andb
fists
sbb
xor
push
and
cmpl
loope
inc
pop
lea
pop
xor
jno
push
xor
cmp
fst
xor
mov
jb
into
test
add
dec
addr16
lahf
sbb
push
shlb
movsb
sub
jo
addr16
testl
jge
inc
iret
test
mov
sarl
inc
add
pop
dec
jmp
int
loope
sub
sub
inc
jae
int3
sub
inc
sti
adc
cmp
ret
dec
sbb
sbb
pop
test
inc
xchg
pop
movsl
or
hlt
dec
push
aad
sbb
add
inc
in
adc
and
cmpsb
maskmovq
imull
push
popf
in
scas
js
mov
pushf
into
mov
jecxz
movsl
clc
cmpsb
imul
dec
std
hlt
in
scas
mov
pop
push
adc
fwait
pop
add
movsl
ficoml
jb
mov
enter
jl
and
cwtl
addl
jne
mov
mov
inc
push
add
shlb
loop
jmp
xor
rcll
loop
mov
xchg
stc
jbe
testl
das
dec
sbb
dec
shl
shlb
jnp
pop
dec
pop
decl
or
adc
sub
xchg
outsl
mov
adc
in
fcoms
out
sbb
mov
xor
adc
fistpl
push
pop
dec
cmc
rcl
sahf
cmp
mov
jmp
mov
adc
outsb
cld
rclb
out
aas
je
insl
ffree
push
or
jp
add
and
cmp
mul
call
in
lock
cs
pop
xchg
faddp
pop
rorl
pop
outsl
sub
or
lods
or
pop
aam
xlat
repz
mov
adc
push
loop
or
mov
pushl
jae
cmpsl
dec
test
mov
pushl
pop
orb
xchg
arpl
xchg
mov
daa
adc
mov
paddusb
call
out
inc
dec
add
test
xlat
dec
rcl
movsb
aad
arpl
mov
pop
cmp
aas
sbb
mov
jp
pop
loop
aas
mov
int3
aam
pop
sbb
lods
mov
or
add
fnsave
int3
mov
mov
les
adc
lock
lret
call
mov
add
lret
ret
les
ficompl
sub
pop
out
bound
in
mov
cwtl
sbb
mov
pop
scas
pushw
in
inc
stc
shrb
sbb
cmp
nop
out
mov
faddl
roll
jle
push
or
sti
lret
add
addr16
sbb
ljmp
in
dec
dec
ljmp
push
xchg
mov
xchg
dec
ss
or
cmp
aam
mov
sbb
popa
inc
inc
sbb
ret
push
lds
fs
lods
mov
ds
adc
je
bnd
and
jle
arpl
in
gs
jo
dec
mov
dec
add
and
xchg
adc
gs
out
outsb
jp
push
fildll
mov
sti
push
xchg
scas
push
mov
xchg
sarl
shll
dec
adcb
push
xchg
mov
dec
sub
repnz
cmp
loope
mov
push
push
jle
mov
scas
jmp
jg
fcmovnu
pop
xor
xorb
gs
rorb
or
arpl
test
lods
jno
xchg
pop
stos
dec
mov
sbb
pop
mov
and
jl
shrb
push
sub
pop
es
flds
out
push
jb
leave
pusha
loope
popa
sbb
dec
sbb
add
enter
fldl
cmp
inc
lock
mull
lcall
cltd
xchg
adc
jp
nop
xchg
stc
dec
sar
xchg
pop
mov
xlat
xor
sub
or
mov
mov
sarl
add
sbb
or
jmp
iret
leave
mov
cmp
sahf
jg
inc
and
xor
sub
adc
adc
mov
fs
stos
pusha
int3
rolb
add
mov
or
mov
in
cmpsb
stos
lds
xor
mov
inc
cld
adc
lret
xor
lcall
xchg
push
push
in
rcrb
add
adc
sub
scas
cmp
pop
push
mov
ret
sbb
test
shrl
daa
rorb
cmp
ret
mov
inc
rclb
lret
nop
xor
mov
out
stos
scas
xor
push
int3
jl
stc
stos
mov
cmp
sarb
divb
sub
sub
addr16
lret
inc
lahf
arpl
mov
bound
lahf
pop
pop
lock
cmpsl
jle,pt
idivl
push
mov
xchg
sarl
cmp
andl
and
pop
paddsb
and
sbb
ret
in
and
aad
pop
dec
les
jbe
sbb
shll
cmpsl
push
and
ds
pop
in
out
sbb
adc
sbb
hlt
or
movl
addb
mov
pop
pop
pop
cltd
adc
lea
in
cmpl
imul
lock
mov
pop
xor
mov
mov
inc
loopne
mov
dec
mov
lods
mov
out
and
cwtl
les
dec
sbb
xorb
or
mov
pop
and
sub
test
test
test
push
sub
movsb
sub
jp
pop
popf
mov
xor
push
ret
insb
jmp
scas
push
das
add
ret
xor
mov
pop
pop
sti
xchg
lods
lock
rorl
scas
push
sbb
add
popa
jmp
cltd
push
dec
or
sti
fisttpll
repnz
dec
xor
test
lods
and
lahf
inc
pusha
gs
mov
mov
out
scas
add
mov
adc
xor
orb
lret
or
xor
inc
or
ss
sub
inc
mov
mov
or
lahf
stc
push
jp
mov
mov
int3
es
icebp
outsl
dec
pop
lahf
jne
test
and
mov
scas
lcall
mov
xchg
mov
cwtl
addb
lahf
jo
orps
leave
in
sti
add
cmp
inc
ljmp
mov
sub
cld
out
inc
dec
mov
testb
add
add
xchg
mov
pusha
sub
iret
pop
xchg
fcmove
fwait
imul
xchg
sub
sti
cld
cmp
dec
aad
ret
adc
adc
or
cli
mov
xabort
pop
lods
pop
sub
xor
jg
jae
xchg
arpl
push
sbb
lods
loop
mov
push
rcrl
xor
inc
and
fwait
mov
sub
jbe
rorl
fdivrl
lret
negl
sub
mov
pop
sub
sbb
mov
lods
or
pusha
sub
mov
mov
popa
sbb
lret
mov
mov
add
mov
add
loope
clc
and
cmpsl
cwtl
movsl
jno
shll
fs
mov
xrelease
jg
mov
pop
or
lock
mov
iret
adc
sbb
mov
lods
mov
fs
cmp
sti
inc
ljmp
xor
lods
mov
rcrb
ficomps
fiaddl
std
pop
aad
xchg
and
mov
aam
stos
cmc
fistpll
pop
shll
push
pushf
rcrl
pop
sbb
mov
push
outsb
jne
adc
faddl
inc
mov
add
xlat
jns
inc
jo
outsl
mov
test
jnp,pt
dec
test
push
mov
xor
mov
or
jmp
cmp
cwtl
popa
pop
mov
jl
loope
es
out
das
or
jl
pop
iret
ja
sub
adc
jp
xchg
jge
out
call
inc
repz
cmp
decb
es
xlat
mov
psrld
mov
in
lock
push
cli
adc
shr
xchg
jge
outsl
xor
sarl
ss
rclb
shrl
mov
or
dec
sbb
push
sub
ja
lahf
push
mov
les
inc
cli
push
push
leave
in
cmpsl
rcrb
xor
xchg
add
pushf
shll
gs
mov
cmpsl
jae
movsb
and
sbb
adc
stos
cld
jmp
push
lcall
je
pop
decb
int3
sahf
test
iret
xor
lcall
push
dec
and
sbb
inc
mov
sti
pop
mov
aaa
in
jo
mov
repnz
ljmp
popf
in
fnstsw
imul
out
gs
lea
scas
lret
nop
or
inc
adc
dec
xlat
pop
dec
shlb
shl
repz
jmp
arpl
add
xchg
mov
and
xor
push
pop
aam
adc
decb
out
clc
cmpsb
repnz
xchg
dec
and
jg
cmpsl
int3
pop
or
testl
push
out
push
adc
xchg
xchg
rcrb
add
leave
mov
adc
cmp
or
in
xlat
fwait
test
lret
test
inc
push
notb
jg
inc
mov
mov
jl
aad
icebp
xchg
mov
sub
popf
int3
push
addr16
mov
jnp
push
mov
loop
pop
cmp
dec
inc
mov
cmp
fwait
mov
adc
pop
test
shll
inc
cmpsb
insl
xor
sub
aas
sbb
mov
pop
sarl
std
cmpsb
mov
das
sub
jb
in
inc
stos
sub
pop
cmp
fstpl
or
jmp
lea
mov
sbb
ret
mov
lock
dec
mov
in
sahf
fwait
xor
seta
jp
jne
mov
xchg
or
out
divl
sbb
call
daa
mov
gs
das
and
out
mov
faddp
cmpb
jp
inc
fistps
insl
outsb
int3
add
rolb
sbb
mov
xor
mov
movsb
stc
leave
movsl
push
dec
cld
sub
jmp
bound
notb
jmp
or
xchg
fistpll
pusha
pop
out
sub
aam
mov
and
cmp
adc
movsb
dec
cmp
and
pop
loopne
dec
imul
push
cltd
cltd
lock
sbb
out
push
mov
faddp
call
clc
es
sub
xchg
sub
cld
movsl
daa
movsl
and
fiadds
andl
dec
jmp
lret
lea
mov
mov
loopne
ljmp
jne
sbb
add
dec
jb
fadds
jnp
add
popf
dec
jg
lret
lahf
jecxz
mov
scas
dec
mov
dec
clc
add
mov
roll
mov
jnp
js
in
sbb
aas
dec
test
push
xchg
xchg
sahf
pop
xor
or
sbb
xor
push
dec
sub
or
xor
jp
push
and
mov
repz
xchg
mull
jle
add
ficompl
cmp
ja
push
pop
xor
arpl
mov
push
nopl
jmp
push
out
push
out
dec
mov
movsl
add
sarb
das
xchg
sub
int
sbb
xor
inc
jp
and
lock
xorb
add
jno
pop
mov
cmp
imull
jecxz
cmp
stos
aam
call
sub
sub
je
je
mov
mov
pusha
add
xchg
and
mov
inc
mov
or
add
pop
jg
call
adc
in
fs
scas
jecxz
das
xchg
xchg
dec
cmc
out
pusha
movsb
sarl
ret
ss
push
aam
jg
xchg
jae
mov
push
nop
mov
mull
ret
adc
enter
sub
ljmp
cmp
sub
mov
jl
cmp
xchg
cs
ffreep
ljmp
push
add
push
jae
cld
sub
and
mov
out
mov
shrb
cmc
push
lods
inc
add
loopne
adc
cwtl
pop
xor
repz
inc
addb
test
pushf
fadd
cmc
arpl
int
xor
jg
call
js
repz
or
mov
mov
mov
xchg
test
sub
sub
rorb
fs
jb
inc
add
xlat
fdiv
jns
adc
jo
incb
dec
loope
jnp
push
or
inc
inc
mov
ljmp
mov
pushf
daa
cwtl
pop
lods
ret
jne
shrb
cs
push
mov
outsl
adc
inc
int
and
xchg
push
sub
mov
insb
jg
pop
mov
das
cmp
insl
stc
jp
adc
mov
clc
je
jne
add
or
sbb
aaa
cli
lock
jb
in
clc
mov
pop
add
js
mov
push
xor
inc
adc
mov
push
lock
xchg
adc
sbb
lahf
pusha
stc
shl
pushf
mov
aaa
call
loop
jnp
insb
sbb
mov
cmp
inc
orl
xor
push
ljmp
test
jp
cmp
xor
iret
add
xchg
jne
mov
aas
test
jmp
pop
sbb
lahf
lret
stc
xchg
mov
addl
pop
mov
mov
stc
or
scas
cli
in
out
jmp
mov
xor
in
inc
cmpb
xchg
ds
xor
aad
push
add
cli
push
sbb
clc
lahf
imul
loope
fisttpll
and
mov
lock
adc
push
ffree
dec
push
xor
lds
mov
pusha
jnp
and
xchg
lret
adc
jp
jbe
add
mov
sbb
iret
dec
mov
dec
aaa
mov
sbb
in
xor
cltd
xor
fcomip
sbb
and
enter
imul
xor
sbb
test
les
mov
push
and
xor
jne
sub
mov
and
dec
pusha
mov
cmpsl
jae
cmp
adcb
or
in
inc
add
insb
repnz
dec
cltd
push
adc
mov
cltd
cld
cmpsl
xchg
lahf
jle
or
pop
xor
rorb
inc
clc
xor
and
cli
popa
mov
in
clc
cwtl
in
not
inc
mov
cmp
shrl
xchg
stos
cmpb
or
inc
lods
or
psrlq
push
sahf
pop
mov
push
lret
je
pop
leave
mov
call
jnp
outsl
xchg
inc
mov
fbld
cmp
leave
sub
push
or
and
or
jae
mov
movsb
pop
loopne
in
pop
icebp
and
mov
cmp
hlt
cmpl
nop
fcompl
xchg
pand
cmp
jmp
pop
clc
jns
mov
outsb
dec
jnp
stos
push
sahf
test
sub
sarl
add
inc
sub
inc
subl
dec
cmp
out
xor
cltd
std
movsb
pop
jns
lods
cld
cmp
pop
lods
dec
fucomp
mov
loope
xor
mov
cmpsb
mov
andb
cmpsl
push
jb
mov
and
scas
pop
sbb
mov
jbe
sub
dec
sub
xor
xchg
and
rorl
rol
xchg
mov
inc
imul
sbb
jb
js
rorl
push
and
hlt
xor
call
in
ss
lea
lret
cmp
mov
lods
add
add
movsl
cmpb
pop
or
inc
push
fs
and
data16
je
xor
pop
and
sub
int3
repz
jle
jecxz
adc
inc
jns
shrb
sbb
ficompl
out
and
and
push
arpl
mov
shrl
and
cmp
cmpb
sbbb
shll
stos
repnz
adc
and
fldcw
sub
pusha
push
adc
loop
jnp
fisubrl
std
jecxz
arpl
pop
xchg
outsb
push
push
icebp
lret
cmp
adc
xchg
repnz
sbb
mov
int3
adc
popf
dec
or
test
cmpsb
aas
out
fstps
int3
outsl
jns
pop
jno
push
push
pop
lds
mov
fs
jbe
ljmp
hlt
mov
xchg
mov
adc
jb
adc
push
out
add
popa
or
jb
repnz
mov
int
sarl
fistpll
mov
cmovb
xchg
in
shr
jge
insl
push
sub
pop
xchg
in
mov
lret
mov
pop
lods
ds
push
imul
lcall
addl
ljmp
inc
xchg
lods
in
mov
jno
lahf
movsl
inc
ret
xchg
aas
mov
mov
sub
mov
aam
pop
insb
pop
and
mov
pusha
shll
inc
mov
jns
cmc
sub
rorb
out
cmp
push
add
pop
cmpsb
jnp
mov
adc
xor
xor
push
gs
cmpsb
pop
dec
rcrl
inc
jge
es
clc
fs
and
ss
outsl
inc
sub
call
imul
rorb
mov
push
in
ss
addb
mov
negb
cmp
pop
add
mov
dec
js
inc
jo
push
pop
iret
sbb
and
push
pop
cmpsl
scas
insb
les
cmp
jl
movsl
mov
lcall
mov
mov
mov
or
movsl
push
shl
push
inc
mov
xchg
test
aaa
sti
or
mov
inc
out
xor
icebp
mov
imul
xchg
ljmp
and
imul
sub
push
mov
popl
fs
les
gs
sbb
sub
push
lret
fldenv
ljmp
mov
jecxz
negb
mov
je
xchg
neg
sub
xlat
dec
jl
push
gs
cmp
rol
mov
lret
inc
xor
inc
sub
int
int
and
test
cmpsb
sti
inc
pop
aas
sub
or
aad
add
aaa
lock
in
subb
iret
mov
push
mov
xchg
iret
addl
ret
popf
jge
iret
in
sbb
shrb
cltd
pushf
fisttpll
call
out
jp
or
sbb
addr16
jecxz
cmp
inc
dec
xor
shll
in
rcl
jmp
hlt
mov
movsb
fyl2x
in
insb
inc
and
pop
push
and
xor
adc
push
into
add
inc
mov
mov
cmp
adc
push
shll
shrb
pop
xchg
mov
mov
mov
aam
xchg
cmp
push
iret
inc
mov
pusha
sbb
dec
or
data16
adc
xchg
aad
subl
cmc
jle
push
insb
add
cli
adc
sub
or
mov
flds
sarl
and
xor
xor
in
test
or
xchg
movsb
jp
mov
xchg
jbe
inc
cld
or
mov
test
adc
push
adc
int
xor
push
xor
push
xchg
inc
stc
push
sub
push
leave
add
mov
sarl
jno
adc
sub
inc
jmp
mov
lds
xor
addr16
or
leave
push
push
push
sbb
sar
jle
or
data16
sbb
cmpsb
xchg
adc
sbb
pop
or
fisubrl
push
xor
aas
add
dec
sbb
pop
call
incb
mov
jl
scas
inc
pop
push
adc
iret
mov
fidivl
lahf
fisubl
mov
mov
movntq
lret
ret
xchg
cmc
packuswb
pop
lea
mov
in
pop
jmp
sub
es
or
ljmp
aaa
cmp
popa
dec
jp
lock
jb
bound
icebp
push
test
xchg
mov
fwait
out
je
ss
mov
jae
loope
subb
jbe
fisttpll
jecxz
add
dec
xchg
jmp
mov
sbb
aad
or
test
jb
jmp
movsb
xchg
xor
or
loopne
dec
jecxz
sub
jns
out
mov
xchg
adcb
sub
push
out
mov
out
xor
cmp
push
lods
es
incl
cmpsb
adc
mov
sbb
xchg
sbb
jecxz
incb
adcb
scas
sub
sub
mov
in
cmpsl
daa
xchg
je
flds
sub
ror
sbb
add
pop
sti
mov
pushl
push
mov
and
mov
scas
mov
cwtl
mov
mov
out
mov
fwait
pop
sbb
subl
mov
loopne
js,pn
push
mov
ljmp
dec
ja
add
orb
push
mov
test
lds
mov
push
sub
lea
in
imul
sbb
inc
xchg
jne
jecxz
jle
add
mov
inc
out
ret
movsl
push
sbb
aas
pop
mov
mov
mov
negl
and
mov
cld
jno
xorl
and
lret
mov
inc
out
ficoml
loopne
jno
aaa
int3
mov
and
dec
cmpsb
sbb
rcl
es
xchg
push
xor
movsl
push
push
mov
inc
dec
pop
inc
and
popa
bound
lods
cmpsb
std
jbe
mov
and
xchg
in
mov
movsl
jno
lods
sbb
fs
jmp
mov
dec
add
sub
mov
shrl
shrb
cmpsl
or
pop
test
fcmovne
lahf
xor
lods
mov
or
inc
int3
xor
cld
add
pushl
inc
dec
in
mov
cmp
imul
mov
pop
lret
sub
icebp
push
cmpb
repnz
dec
clc
loope
cmp
xchg
or
insl
dec
and
lret
inc
sbb
movsb
jle
cmp
sub
xchg
rol
andb
push
push
sub
cltd
pop
inc
jne
lods
fnstsw
ret
xchg
fidivl
mov
mov
push
add
push
out
aaa
inc
ret
lods
mov
rclb
or
mov
dec
pop
cltd
mov
xchg
add
movntq
out
adc
mov
shll
inc
push
imul
dec
mov
imul
ret
insb
or
inc
dec
sbb
in
jb
fcomps
push
pop
or
add
sub
aaa
jg
loop
adc
cmpsl
xor
or
or
out
aam
ljmp
je
adc
pop
xchg
sub
loopne
xchg
pop
xchg
inc
mov
jns
outsb
pop
movsb
xchg
stc
sub
ljmp
add
cmp
dec
sub
push
push
imul
push
ja
and
add
sub
nop
aad
sub
aaa
mov
int3
movsl
push
mov
js
pop
loop
in
mov
in
hlt
outsb
aas
rep
fstl
and
inc
negb
jecxz
loopne
iret
aas
xchg
scas
jbe
jecxz
dec
add
xor
adc
xchg
xchg
jge
jno
cmpsl
sbb
das
push
xchg
xor
shrl
mov
pop
mov
dec
push
push
filds
stos
cmp
inc
cmp
sbb
jne
popa
sbb
xchg
cmp
push
out
imul
adc
pusha
ss
lock
push
call
jecxz
push
ret
shr
xor
adc
inc
jmp
adc
pop
pop
and
adc
inc
push
dec
in
adc
add
imul
mov
mov
dec
cmp
out
add
xlat
out
lea
jp
add
movsl
dec
scas
pushaw
and
in
push
pop
mov
xor
adc
lea
jne
imul
add
xchg
ljmp
clc
test
add
mov
loope
sarb
dec
test
nop
and
lret
inc
dec
out
push
lock
mov
adc
mov
jl
push
dec
jge
rcrl
inc
ret
jno
js
mov
inc
fisttpll
inc
es
sarb
xchg
dec
outsb
push
rcll
rclb
and
int3
mov
mov
in
fldcw
and
jnp
pop
cmpsb
inc
pushf
shl
mov
fwait
call
fwait
xor
outsb
mov
jns
jl
adc
sub
test
inc
inc
cmp
sbb
outsl
movsb
mov
inc
push
rcrl
pop
sub
inc
hlt
fs
mov
mov
lock
lret
mov
and
adc
js
mov
xor
ss
shlb
xor
enter
shll
popf
mov
or
cli
fcmovne
rolb
ret
jp
je
mov
pop
mov
jbe
loop
leave
inc
push
stos
inc
adcl
or
mov
pop
push
rcrb
cs
sbb
push
mov
mov
aam
push
pop
sahf
push
test
insb
xlat
xor
je
sarb
enter
sbb
or
cli
jp
push
cmp
mov
jnp
lds
add
jmp
insb
mov
xchg
cld
xchg
test
and
jo
insb
fwait
cmp
jecxz
adc
sti
out
mov
int
jmp
mov
rcll
jg
push
sbb
xor
jae
pop
stos
xchg
xchg
push
test
mov
cmp
mov
inc
sarb
jl
jge
hlt
xor
cli
mov
inc
jbe
fwait
cmp
mov
pop
sub
dec
sub
mov
dec
add
loope
orb
sbb
jnp
pusha
mov
add
and
lret
subl
rcr
aad
shrb
adc
scas
or
mov
fisubrl
mov
xor
xchg
test
sahf
adc
ds
jnp
inc
ss
andb
and
in
das
add
dec
lock
push
rcrl
pop
mov
pop
add
cmp
fistpl
int
xchg
cmpb
fisubrs
cmp
fwait
incl
xor
adc
sub
xor
loope,pt
sub
outsl
sub
ret
push
aaa
gs
mov
mov
jno
jmp
push
in
dec
add
xor
fs
cltd
scas
dec
fs
jg
push
sub
adc
mov
sub
ret
les
add
or
aam
aad
aad
dec
xor
loopne
sub
push
jge
repnz
add
sbb
pop
dec
js
inc
ret
mov
fwait
lds
pop
mov
sbb
imul
sub
ret
test
push
lods
mov
loop
mov
sbb
mov
sbbl
push
jns
test
jge
mov
inc
push
push
pop
add
pop
jb
pop
sub
fisttpl
and
xchg
jmp
rcr
cltd
xchg
sub
or
into
inc
ret
loope
or
inc
dec
fs
test
data16
cmpsb
fiaddl
es
jno
jge
xchg
mov
dec
and
and
mov
xor
jne
int
pop
xchg
sarl
or
or
cmp
jns
sti
cmc
ds
mov
push
ds
fdiv
fs
push
push
and
cmpsb
in
js
lret
mov
dec
mov
or
dec
mov
mov
add
fmuls
ret
mov
inc
shlb
pushf
std
add
shlb
add
mov
enter
xchg
testb
or
xlat
outsl
rclb
xchg
cmp
icebp
hlt
sbbb
and
test
rcll
and
and
ficoms
movsl
adc
je
cmp
lea
popa
cmp
pop
mov
out
lahf
lea
xchg
pop
aad
fbstp
repz
mov
pusha
xor
cltd
push
mov
add
sbb
lahf
mov
adc
shll
out
std
push
sbb
adc
movl
dec
imul
xor
pop
ret
or
mov
or
popf
cmpsb
xor
enter
xchg
stos
lret
mov
mov
push
cmp
lret
jnp
push
repz
or
movsw
sbb
xchg
dec
out
sbb
sahf
mov
dec
mov
or
jne
repnz
push
add
sub
jl
or
fnstcw
push
shrb
or
in
sub
bound
xor
pop
inc
push
dec
xlat
mov
mov
js
in
xor
fisttpll
out
or
xorb
cmp
mov
pop
push
and
and
mov
push
cmp
push
lret
mov
and
jg
lret
clc
addr16
or
ret
push
mov
mov
xchg
pop
pop
and
sarl
jne
push
xchg
jo
ja
xor
leave
fsts
call
sub
adc
lcall
cmpl
aad
imul
call
fsubrs
fisubs
push
add
outsl
test
addr16
call
xchg
jle
push
dec
xchg
divb
mov
bound
mov
xchg
xor
rorl
mov
out
mov
pop
push
lea
lret
nop
sbb
or
shl
popf
sahf
pop
mov
ja
lcall
das
int3
inc
in
das
add
push
mov
sbb
sub
inc
dec
fs
test
dec
shrb
fidivl
cmpsl
std
or
jae
mov
xor
pusha
sub
adc
cmp
or
je
pop
ret
lahf
sub
dec
or
or
sub
xchg
test
push
loopne
jmp
dec
outsb
inc
test
mov
mov
out
or
cmp
jl
test
dec
popa
mov
pop
push
aaa
sbb
adc
pusha
pop
dec
imul
test
test
adc
push
and
inc
dec
out
inc
pop
jl
sarb
jo
aad
loop
je
int
or
and
popf
movsb
stos
or
popa
mov
cmpsl
popa
stc
and
out
and
pop
xchg
mov
xlat
pop
jne
ja
scas
dec
addr16
adc
mov
pop
or
pusha
movsl
lret
pushf
push
mov
and
add
repz
test
loopne
rolb
imul
mov
fdivl
daa
js
adc
in
push
or
jbe
andb
xchg
cmp
add
dec
cmp
loopne
xor
or
cmc
push
add
or
aam
mov
adc
mov
mov
dec
mov
dec
push
adc
movsl
cmp
add
jmp
sbb
in
enter
push
pop
or
pop
inc
jp
mov
rol
mov
stos
cmp
into
cmpsl
xlat
or
xor
roll
imul
enter
pop
cld
dec
cwtl
test
jne
nop
hlt
add
sbbb
pop
popf
push
in
scas
push
mov
jns
xchg
sbb
jae
int
sbb
pop
dec
aaa
push
mov
fcomp
sub
scas
push
or
sub
sub
xchg
add
lods
pop
sti
popf
daa
out
cmpsb
pop
xor
xchg
mov
inc
addr16
enter
out
adc
mov
fs
fs
movsl
imul
bound
incb
or
push
mov
mov
jbe
push
add
cmpsb
ret
jnp
inc
fcmovnb
jg
pop
test
pop
xchg
pushf
call
cltd
cmp
sub
in
inc
fwait
jmp
jge,pt
sbb
mov
jmp
loopne
xchg
iret
rcl
test
sbb
sbb
add
push
mov
push
not
data16
sti
push
mov
cmp
repnz
mov
movsbl
add
fdivrs
jecxz
test
jbe
stos
sbb
roll
inc
add
sbb
jp
inc
mov
dec
stc
mov
mov
or
sarb
iret
mov
xchg
je
mov
add
xor
out
and
lret
add
lcall
push
hlt
cmp
sub
aam
rcrl
je
adc
cmpsl
inc
fwait
xor
cmp
cmpsl
pushf
fildl
shrl
cmp
lcall
aad
dec
dec
pop
pushf
imul
sbb
and
sub
test
pop
inc
icebp
jne
js
mov
in
mov
sub
mov
jo
dec
lods
iret
adc
xor
jle
jbe
inc
in
xor
sub
mov
xor
mov
jbe
mov
mov
sub
fnstcw
rorl
stos
lea
cmp
inc
pop
and
aaa
cmpsl
xor
jl
jo
sub
fs
outsb
shl
fs
jne
xor
jne
fs
add
sbb
inc
jo
pop
add
aaa
ss
test
xchg
push
adc
movsl
nop
cmp
imul
add
scas
xchg
inc
inc
shl
out
or
mov
stc
insl
dec
xchg
and
insl
push
imulw
aam
jo
stos
or
and
xor
mov
fdivr
scas
lds
outsl
jb
adc
mov
pop
and
jo
in
mov
adc
outsb
enter
loopne
sub
sbb
adc
push
outsb
sbb
mov
jge
stc
in
out
cmp
push
xchg
aas
dec
pop
test
mov
sti
jns
ja
inc
dec
lods
dec
loopne
aam
jo
xchg
mov
int3
inc
ret
xor
lretw
sbb
xchg
xor
mov
or
das
ds
xor
xchg
xor
push
mov
mov
sub
addr16
outsb
xor
or
sub
xchg
pop
imul
pop
or
or
imul
jne
and
aas
jecxz
test
into
sbb
lock
inc
sti
sbb
jmp
imul
sub
aas
sbb
dec
mov
jp
jmp
lock
push
xchg
rcrl
cmp
ficomps
mov
pop
subl
cmpsb
aaa
imul
push
rcll
call
cwtl
adc
xlat
rcrl
sti
arpl
pop
scas
push
jmp
sub
movl
icebp
xchg
sbb
cmp
cmp
pop
stc
or
aas
cwtl
iret
daa
and
jmp
push
out
push
scas
mov
pop
mov
pushf
mov
pop
ljmp
cmpsl
or
push
gs
push
faddl
xor
rolb
ljmp
lods
stos
cltd
mov
xor
push
das
sub
fisttps
xchg
mov
lock
movsb
cmpsb
les
push
add
loop
sbb
ficompl
push
jnp
iret
pop
inc
addb
pop
mov
mov
imul
push
rcl
xchg
mov
add
or
add
push
jp
loope
xchg
aaa
and
adc
xor
clc
cmp
add
xlat
rcr
lret
jnp
mov
rcrb
hlt
dec
jecxz
mov
in
mov
add
sub
push
arpl
sti
stos
jo
loopne
and
pinsrw
push
imul
dec
xchg
sub
push
and
pop
adc
cmp
test
int
bound
jae
int
jbe
inc
fildl
test
cwtl
les
sub
mov
push
pop
xor
pop
or
ficoml
add
bound
mov
sbb
imul
ret
pop
stc
or
mov
nop
and
xlat
std
sub
add
loope
test
add
test
xchg
mov
xchg
ret
jnp
fsts
sbb
or
or
fbstp
into
repz
sub
sbb
mov
fnsave
sbb
dec
and
inc
stos
cmp
pushf
in
mov
enter
sbb
aaa
std
push
mov
jae
clc
push
mov
rclb
mov
fstl
mov
js
shrl
add
add
and
jecxz
arpl
and
jbe
jp
xchg
jmp
jb
js
cmp
cmp
fistps
sbb
jmp
xor
add
jp
ret
out
sbb
add
xor
cmc
adc
stos
adc
xor
sbb
mov
outsb
in
rorl
rorl
mov
data16
mov
adc
inc
sbb
addr16
dec
mov
cmp
daa
sbb
adc
mov
pushf
and
dec
inc
bound
jmp
cld
pop
and
mov
add
add
cltd
push
pusha
daa
pop
xchg
dec
into
int3
fdivrl
fstps
stos
push
inc
push
mov
fisttpll
jbe
call
dec
jle
and
mov
ja
pop
cwtl
add
add
sub
out
out
push
mov
sahf
rorb
repz
jno
test
ret
jl
cmp
jmp
ljmp
mov
icebp
mov
sub
add
iret
pop
add
adc
inc
insl
sub
jae
cld
cmpsl
fimuls
sbb
adc
fnstenv
test
leave
iret
inc
add
rcr
ja
add
lea
call
sub
int3
xchg
jnp
xchg
inc
mov
add
rcr
and
leave
mov
xor
or
mov
inc
or
adc
lea
add
sub
sbb
out
out
test
pusha
inc
aad
sbb
mov
dec
sub
loope
rorb
mov
xchg
cli
das
push
sub
sub
imul
dec
cmp
lret
cwtl
sub
xchg
loope
in
jns
in
xor
mov
adc
push
das
cmc
xchg
cmp
cmp
jbe
push
pop
and
mov
mov
shrl
add
lods
fprem1
insl
xchg
dec
push
test
fdivrl
repz
std
in
jo
jecxz
lds
jg
sbbb
xlat
jg
cmp
and
testl
mov
xor
icebp
movsl
mov
sub
mov
push
push
pop
in
xor
jge
sub
lock
shl
lea
dec
jge
bound
cmovo
cmpsb
mov
mov
push
xor
and
add
sahf
push
fisttpll
push
test
jno
adc
xor
popa
inc
mov
add
inc
dec
ret
mov
jecxz
pop
xchg
test
pop
jae
popl
popa
cmp
mov
hlt
mov
xlat
out
cmp
fisttpl
adc
je
stos
mov
shrl
adc
and
mov
sub
stos
cmp
cld
dec
imul
xchg
iret
insl
adc
je
in
mov
test
pushf
imul
fisubrl
inc
mov
inc
jb
sub
dec
mov
mov
notl
mov
aaa
cmp
sub
cmpsb
outsb
xchg
fdiv
xchg
sahf
sub
nop
notl
test
subl
jle
loop
mov
clc
sbb
ret
popa
jno
cmpsb
xchg
rcrb
jge,pt
xchg
cmp
test
jl
sub
dec
es
out
mov
add
xor
popf
fisttps
cmpsb
mov
out
jno
call
cmp
repnz
cmp
daa
imul
jg
push
xor
mov
dec
cmpsl
mov
lods
and
pop
xchg
popa
mov
cmp
divl
dec
push
or
sbb
adc
cmp
repz
stos
mov
sbb
jae
mov
add
bound
mov
aaa
repz
add
stc
dec
adc
fwait
sub
xor
jg
cmpsb
mov
daa
leave
out
xchg
insl
ds
dec
xor
fsubrs
xor
sbb
lods
pop
cmp
aas
lods
mov
clc
inc
mov
pop
sub
sbb
and
and
stos
int3
mov
shrb
rolb
or
sbb
mov
orl
dec
pop
push
sbb
sti
jp
or
cmp
mov
cmp
movsb
or
mov
sub
les
not
mov
jb
pop
mov
dec
bnd
ret
sbb
enter
sbb
es
ret
test
dec
sbb
aam
lea
cmp
push
daa
ror
es
test
dec
ret
enter
xchg
lcall
push
mov
jle
ja
cmp
test
filds
jle
inc
sahf
sub
arpl
lcall
jp
out
aaa
jp
pop
dec
rorb
imul
stos
cmp
les
popf
scas
xor
or
push
lods
cmp
outsb
or
pop
or
cli
pop
lock
dec
xor
mov
aaa
shlb
jae
shl
lret
xchg
cmp
inc
addr16
test
sub
fildll
add
xlat
les
add
add
or
pop
icebp
rolb
push
aam
adc
jo
xchg
lretw
ds
sarl
mov
or
cmc
add
or
inc
xchg
sbb
popf
sbb
jp
in
shr
in
out
adc
or
pushf
sbb
push
jmp
les
fcoms
adc
orb
cs
outsl
hlt
das
jmp
das
stos
ss
xchg
lret
mov
and
repz
jmp
fldt
mov
cmp
cld
sbb
stos
or
bound
in
iret
pop
sbb
xchg
movsl
mov
jecxz
lea
movsl
xchg
lret
outsb
adc
jo
sub
out
imull
hlt
push
xor
shll
adc
pop
loope
mov
cmc
and
pop
jmp
into
mov
ss
or
jb
xchg
faddl
pop
movl
pop
add
sti
add
mov
mov
fistpl
sbb
out
loopne
mov
loop
iret
push
test
mov
jb
mov
add
sbb
sbb
jns
sbb
add
inc
lock
lea
inc
xchg
pop
negb
pop
fldl
mov
int3
addr16
jnp
mov
cmpsb
push
out
testb
mov
inc
push
popa
mov
mov
movsb
mov
outsl
das
imul
lods
mov
sbb
in
es
mov
out
fmull
jmp
xchg
mov
out
out
test
mov
and
pop
jg
adc
sbb
mov
je
cld
leave
sub
sub
outsb
int3
mov
jp
mov
gs
jno
inc
lret
jge
pop
js
jg
cld
fs
sbb
loopne
xchg
push
pextrw
mov
mov
lods
push
push
mov
adc
in
lret
mov
iret
dec
shlb
in
imul
dec
mov
cltd
dec
frstor
lret
sbb
add
and
inc
pop
lcall
jo
mov
push
mov
mov
ret
insb
cmp
dec
mov
add
or
sub
xor
adc
es
xchg
inc
int
std
jp
xor
xorb
sub
adc
lods
lcall
scas
mov
xchg
jmp
nop
test
in
mov
xor
repnz
icebp
gs
mov
rclb
icebp
pop
and
pop
cltd
daa
xlat
and
sarb
mov
in
add
ds
cli
mov
and
aaa
cmpsb
xor
es
mov
aad
lret
clc
sbb
cs
cwtl
leave
ljmp
xchg
fcoml
fiaddl
push
mov
mov
into
cld
mov
ficomps
repnz
jo
mov
out
mov
mov
push
addr16
lods
mov
lock
popf
add
shl
arpl
mov
gs
pop
sti
ss
adc
sbb
movsl
and
and
push
ds
xor
popa
nop
pop
fwait
addb
dec
add
ss
pushf
push
mov
nop
in
addb
add
mov
or
arpl
mov
sar
adc
dec
push
test
cltd
xchg
lods
push
bound
jbe
pusha
jmp
xchg
cltd
les
repz
and
sub
mov
testb
movsl
std
sub
push
faddl
pop
jge
fidivl
sub
popf
stc
in
les
insl
xchg
jge
sub
mov
and
in
shlb
mov
push
xchg
jne
outsb
aas
aaa
cmp
scas
sbbl
inc
xchg
lret
fdivrs
pusha
jb
mov
mov
mov
or
mov
mov
nop
cmp
mov
nop
test
jbe,pt
push
fwait
mov
and
lds
mov
pop
mov
mov
xor
sub
mov
je
pop
push
mov
xchg
das
jno
or
cmp
push
lods
test
insl
adc
xchg
xlat
mov
and
jne
mov
jl
cmc
sub
add
stos
jp
in
iret
push
outsl
stos
adc
push
out
inc
mov
and
popf
loopne
in
popa
stos
xlat
mov
popa
pop
sbb
pushf
push
dec
cmpsl
enter
lcall
movsl
repnz
fsub
mov
inc
outsl
ljmp
sbb
xchg
inc
lods
orb
inc
sbb
or
int
into
adc
cltd
aas
fisubrs
add
or
mov
je
or
rclb
mov
in
lods
pop
push
mov
inc
int
ret
push
fcomp
sbb
mov
pop
fisttpl
jle
dec
xchg
aas
andb
pop
ljmp
jl
and
cmpsl
jmp
jmp
out
jnp
xchg
shrl
xor
shrl
push
fcoms
out
loop
mov
cld
jmp
xchg
add
xchg
pop
clc
cmpsl
hlt
mov
xchg
push
fsubp
or
sbb
push
repnz
push
call
xchg
jbe
arpl
cwtl
in
popf
sahf
or
gs
out
mov
push
mov
into
dec
mov
stos
in
inc
loope
pop
outsl
int3
out
xchg
aas
nop
xchg
addr16
inc
pusha
inc
mov
inc
adc
dec
enter
add
data16
negb
pop
out
or
test
xor
in
cltd
sbb
cmp
mov
sub
je
daa
xor
xor
xchg
inc
arpl
jno
sub
fs
mov
mov
insl
es
or
inc
cmpsb
in
pop
rol
lock
push
mov
push
mov
mov
push
mov
inc
scas
mov
pop
mov
lds
outsb
push
cmpsb
aas
fcmovu
insb
pop
mov
mov
movb
mov
jbe
fsts
inc
lret
clc
push
int3
inc
push
cmp
mov
mov
imul
mov
adc
ds
stos
mov
adc
adc
imul
std
fistps
outsl
xor
mov
rcrb
add
add
mov
in
jae
mull
test
or
in
imul
inc
loop
int
cwtl
mov
cmpsl
out
xchg
xlat
sarl
and
ja
movsb
aad
push
xor
insl
movsl
jns
daa
push
leave
pop
sub
daa
arpl
sub
sahf
jae
sub
jb
mov
jge
test
lods
sub
das
cmp
or
sub
add
shlb
fadd
rol
jne
mov
xchg
and
lret
mov
fnstsw
and
jae
insb
leave
lods
pop
mov
nopl
adc
leave
in
cmovp
movsl
stc
push
cmp
add
push
leave
cs
daa
and
test
leave
add
xchg
adc
cmp
andb
jle
mov
inc
enter
das
lret
ret
rol
lret
add
fldcw
mov
in
inc
add
or
in
xor
sti
mov
in
scas
pop
in
adc
jne
mov
rcr
sahf
jp
into
pop
in
inc
push
cmp
push
inc
pop
nop
sbb
sub
data16
adc
cmpsb
mov
shll
and
jno
cs
sub
leave
insl
loopne
out
mov
stos
cmp
shrl
xchg
aas
arpl
scas
ss
jne
inc
popf
pop
fs
sbb
pusha
adc
xor
iret
imul
pop
cmc
js
mov
hlt
les
in
or
icebp
fisubrl
xchg
mov
inc
ss
cmp
add
jno
testl
out
adc
add
mov
or
cmp
jne
cmp
or
and
ret
xchg
xor
xlat
ljmp
aaa
push
inc
cwtl
ret
mov
adc
jne
incl
cmp
inc
mov
push
addr16
dec
add
push
xchg
pop
add
into
rorb
stos
and
jecxz
xor
std
into
popf
test
pop
or
pop
and
nop
inc
or
xchg
out
or
loope
imul
sbb
out
sub
cmp
jmp
addb
cmp
dec
jno
jns
sti
in
clc
lahf
dec
test
xchg
xchg
fldt
jmp
and
fidivrl
fmull
inc
cmc
mov
jne
jne
in
nop
and
inc
rolb
push
sbb
jl
ja,pt
cltd
jbe
push
mov
xor
aam
and
sar
fcompl
js
stos
enter
jb
inc
or
aas
sbb
rclb
bound
push
mov
cs
std
pop
adc
cmp
mov
ljmp
or
or
cmp
popf
pop
popa
pop
push
or
cmp
sbb
xlat
lea
jg
addr16
jge
sbb
sahf
pop
das
out
cmpl
mov
jmp
and
nop
xchg
enter
xchg
cwtl
add
enter
cli
inc
jae
into
popf
dec
push
mov
in
nop
push
sbb
add
add
jns
adc
fcmovbe
sub
inc
popf
sub
pop
hlt
shrb
push
inc
sbb
inc
sbb
daa
mov
jb
inc
popl
inc
lret
repnz
das
fidivrl
stos
fsubl
jo
cmp
arpl
mov
inc
xchg
push
adc
dec
xchg
adc
mov
or
loop
add
push
push
clc
daa
sub
sub
popa
clc
outsb
aad
into
cmp
push
sbb
repnz
fmul
dec
test
popf
cmp
sti
sbb
sbb
cmp
push
es
shrd
stos
lods
sbb
fwait
jg
lret
test
jle
in
xchg
lds
xchg
mov
push
shlb
loopne
das
in
aam
xor
lock
lock
insl
mov
lret
cmpsb
dec
out
js
ljmp
xlat
adc
adc
jb
loopne
pusha
fldenv
fildll
mov
mov
mov
pop
out
push
sahf
pop
pop
mov
jl
mov
cld
stos
push
xchg
imul
popf
push
sub
jg
mov
xor
dec
add
out
inc
xchg
sbb
movsl
or
or
gs
scas
pop
rclb
fisubl
daa
sub
dec
add
jnp
mov
push
mov
hlt
or
jecxz
out
or
loopne
sbb
int3
jl
in
popf
push
add
dec
rclb
shll
int
sub
shll
dec
sub
xlat
cmp
out
cmp
imul
cmc
inc
shll
cmp
mov
jb
jne
pop
dec
fdivrs
iret
pop
int3
or
out
mov
sbb
jg
loop
push
stos
mov
lahf
adcb
and
mov
xchg
and
imul
lock
mov
sub
cmpsl
imul
cld
stos
jns
push
bound
cmp
inc
mov
jl
movsb
sbb
fmull
jno
loopne
int3
mov
fisubrs
xchg
clc
cmp
xor
xchg
das
mov
add
loope
inc
cmpsb
ss
pop
bnd
cmc
aad
push
popa
inc
add
xor
pop
jbe
in
test
je
ds
int
insl
test
lahf
push
outsb
movsl
and
xor
xchg
inc
addb
out
inc
add
cmc
out
pusha
enter
rcrl
lock
adc
test
mov
sub
out
xchg
add
ret
in
stc
nop
cmp
scas
ret
popa
ror
sbb
ret
xlat
hlt
inc
repz
or
mov
cmp
out
ss
cmpsl
movb
mov
test
push
popf
or
out
xchg
adc
fmull
sbb
in
push
in
jge
adc
shl
scas
inc
mov
and
aam
add
xor
sub
jno
inc
lar
je
mov
pushf
jo
xor
dec
add
mov
pop
pusha
sbb
push
adc
out
sub
hlt
xchg
mov
add
je
dec
in
sbb
fsubr
sahf
leave
jno
mov
mov
inc
int
pop
mov
sbb
mov
inc
inc
pop
add
mov
adc
pop
je
es
fists
sbb
mov
hlt
daa
fiaddl
fcmove
push
lods
icebp
cmp
inc
jmp
stos
push
pop
jo
test
dec
and
mov
testb
mov
movsb
shl
out
lret
jnp
pop
mulb
pop
popf
dec
out
out
xor
fsubrs
jl
xchg
fldl
iret
push
xor
outsb
xor
jecxz
call
mov
xchg
icebp
fildll
adc
lea
xchg
jle
xchg
ds
push
mov
iret
outsl
xchg
xorb
les
sahf
outsl
or
lds
int
int3
fs
pop
sbb
test
leave
sub
xor
mov
cmp
fimuls
fwait
pop
xor
dec
xor
mov
dec
jle
cmc
int3
push
movsl
inc
stos
pop
push
xor
lods
repnz
enter
popf
pop
test
jbe
push
stos
cltd
out
xchg
repz
add
fs
mov
xor
pop
inc
sar
jmp
inc
mov
in
lods
jge
mov
data16
aam
adc
pop
incb
pop
pop
fcmovnu
mov
cmp
sbb
movsb
mov
add
nop
adc
sub
psrlq
push
cmc
repnz
jg
leave
ret
in
sub
leave
dec
nop
movsl
add
cmp
loop
add
dec
mov
scas
add
lret
cmc
in
xor
mov
icebp
lock
dec
sub
mov
loopne
inc
mov
xchg
lods
fcoml
sbb
nop
pop
push
mov
cmp
xorl
inc
xchg
test
inc
mov
mov
fisubl
xchg
imul
fistpl
jmp
mov
aad
cmc
jae
sahf
stc
aad
not
dec
sub
xor
fwait
scas
fidivl
sub
fwait
mov
sahf
in
int
push
pop
fsubrs
lcall
addb
movsb
in
clc
fiadds
stos
scas
in
mov
add
loope
cltd
call
sahf
push
pop
popf
jo
scas
nop
loope
outsb
fldl
lcall
jns
xor
loope
jbe
xchg
and
cmp
idivl
cmpsb
enter
int3
ljmp
adc
loop
sub
das
mov
mov
movsl
jnp
incl
clc
mov
loope
jp
sub
mov
jb
imul
push
push
push
dec
cmp
jo
mov
rcrl
sub
inc
xor
mov
jmp
mov
divl
adc
adc
xchg
cmp
int
xchg
dec
mov
test
sti
pop
jle
jne
std
push
addr16
xchg
inc
test
jg
or
jp
sub
jo
mov
icebp
mov
xor
inc
neg
push
dec
jg
leave
iret
call
and
mov
mov
xor
inc
into
pop
pop
xchg
sbb
in
sbb
xchg
cmp
and
sub
mov
or
pop
ror
je
push
mov
sti
push
push
ret
out
fbld
xchg
iret
cmp
daa
push
pushl
cld
stos
sahf
dec
jl
lods
jg
add
addr16
push
imul
pop
fisubrs
pop
in
dec
dec
testl
push
mov
xor
popa
stc
pslld
fwait
pop
clc
xchg
cmp
test
addl
cmpsl
mov
pop
push
adc
push
cmp
cmpsl
sub
je
xorl
stos
or
scas
dec
mov
movsb
enter
inc
outsb
fcompl
adc
inc
mov
inc
xchg
mov
sbb
xor
test
es
dec
push
test
test
out
fbstp
es
and
nop
hlt
sbb
mov
enter
mov
aas
push
xchg
cmpsb
scas
lahf
jb
add
inc
test
xchg
lcall
jno
push
mov
int
sub
andb
sbb
das
aaa
pop
pusha
mov
cmp
xor
daa
pusha
jge
cltd
scas
push
push
or
push
push
adc
mov
addr16
mov
push
cwtl
sub
insb
daa
and
notb
add
xor
test
adc
pop
mov
fsubrs
push
add
add
cmpsb
sbb
sbb
scas
pop
mov
dec
cs
ret
add
inc
stos
add
xlat
jp
jo
rorl
adc
mov
lock
add
xchg
inc
roll
in
xchg
std
movsb
das
aad
sub
ss
scas
mov
inc
pop
out
or
mov
arpl
ja
mov
cmp
push
cmp
fbld
cli
das
shll
fs
cmp
test
daa
sbb
mov
mov
mov
jmp
mov
or
ret
mov
jge
loope
bound
paddb
mov
push
mov
scas
call
adc
push
dec
xor
insl
daa
in
or
sub
mov
sub
out
mov
dec
fucom
aas
jb
sub
adc
sub
mov
xor
mov
scas
push
je
jne
add
lock
les
int3
jno
dec
mov
mov
outsb
mov
cmpb
adcb
xchg
mov
pop
ret
cwtl
ret
jae
in
fisttps
and
jecxz
lret
roll
imul
out
pop
arpl
int
lds
dec
or
jl
adc
xchg
shrb
decl
in
faddl
scas
mov
pop
loop
jl
push
and
push
push
dec
xchg
pop
insb
push
fs
jb
mov
jmp
sbb
mov
pop
or
gs
push
sbb
sub
xchg
dec
cmp
mov
insb
or
lds
or
addl
sub
roll
hlt
arpl
jmp
jp
mov
push
faddl
sub
popf
mov
mov
sti
add
jo
mov
inc
popl
stos
dec
into
dec
outsb
sub
push
arpl
fmul
mov
push
pusha
cmp
jo
stos
pop
xor
lds
mov
dec
stos
xchg
cmp
cmp
aaa
xchg
and
aaa
mov
mov
mov
into
insb
repnz
idivl
repnz
aaa
call
sub
clc
orl
scas
aaa
pusha
inc
mov
sub
dec
dec
pop
or
stos
adc
addr16
xchg
into
and
imul
add
jo
pop
rcrl
into
jl
popl
jnp
test
push
jecxz
cwtl
mov
mov
cs
push
jns
mov
aad
push
imul
mov
sbb
mov
pusha
pop
mov
sub
pxor
lcall
mov
dec
jle
sti
push
mov
xchg
lods
into
mov
mov
dec
out
in
dec
xlat
dec
xor
xchg
sub
and
mov
cs
mov
jg
and
xchg
scas
dec
into
inc
stc
xchg
push
scas
sub
insb
rcr
inc
inc
xchg
inc
push
sahf
sahf
pop
cs
fcmovu
push
out
popa
ds
imul
popf
jmp
inc
out
jmp
xchg
and
mov
pop
fiadds
mov
push
mov
mov
adc
ja
mov
xor
sub
or
cmpb
xchg
push
outsl
xor
mov
xchg
popa
mov
cld
loop
xor
push
jnp
icebp
cltd
lods
push
cmp
lods
sub
outsl
xor
cmpsb
js
push
sbb
lods
repnz
arpl
sub
mov
dec
mov
xchg
push
dec
into
cmp
jnp
xor
lahf
enter
sbb
and
sub
scas
sub
sbb
mov
lret
mov
push
push
inc
sub
daa
xchg
cmpsb
data16
xchg
ja
xor
popa
jecxz
cmp
push
test
cmp
fwait
gs
mov
add
fmuls
aaa
mov
mov
mov
repnz
mov
jo
mov
push
mov
jo
inc
iret
movsb
test
sub
push
ds
jmp
sub
insl
dec
jne
pop
sbb
mov
fs
sbb
sahf
cmc
les
sub
lods
add
push
gs
sbb
dec
dec
pop
pop
lods
insb
jmp
sub
mov
mov
jmp
bound
fbld
mov
bound
push
fptan
pushf
mov
dec
xor
ljmp
mov
and
xor
popf
inc
mov
xchg
mov
aad
pushf
shlb
mov
stos
xchg
stos
xchg
or
jns
mov
icebp
adc
pop
pop
jo
lret
pushf
jb
push
shll
lods
add
cmp
mov
xchg
test
popa
push
test
inc
loope
mov
jecxz
cmpsl
inc
sarl
cli
push
or
inc
and
jecxz
pop
loop
adc
xlat
mov
es
mov
xchg
out
lds
pusha
pushf
std
add
mov
pop
in
pop
xchg
adc
add
mov
dec
jb
inc
je
jp
and
popa
xchg
lret
scas
incb
cs
mov
lock
insl
jl
sub
or
add
and
pop
mov
int
jbe
adc
and
clc
test
rclb
push
or
addr16
mov
sub
xlat
pop
cmpsb
dec
dec
xor
sbb
jns
call
adc
add
out
ss
xchg
adc
lret
pop
add
int
inc
xchg
and
stc
and
add
cmp
add
cwtl
or
pop
pop
cmpb
les
mov
dec
add
insb
mov
or
lods
popf
int3
jb
mov
lds
cmp
lods
incb
fistpl
sti
lock
and
hlt
xor
shll
xchg
mov
inc
lcall
ja
hlt
cmc
mov
add
mov
gs
mov
test
inc
push
inc
pusha
dec
and
cmpsl
push
scas
pop
loope
enter
jg
test
or
rol
xor
sub
jns
jle
cmpsb
jmp
popf
pushf
hlt
mov
jbe
cmc
push
xchg
mov
mov
inc
mov
fcoml
jae
rcl
roll
or
jno
sub
pop
ljmp
jns
sbb
fwait
xchg
inc
sbb
aaa
sub
outsb
sub
test
mov
sbb
sub
xchg
sbb
and
jno
js
lock
ss
ljmp
jno
movsl
test
jl
mov
mov
mov
ds
cmc
nop
movsl
sbb
cmc
mov
add
aam
pop
rorb
stos
loop
ja
cmc
fldenv
xor
sub
mov
mov
enter
movsb
test
mov
xor
cli
xchg
mov
xor
dec
push
movsb
cli
dec
adc
jae
bound
movsl
divl
mov
pop
jns
in
test
test
mov
dec
inc
mov
test
repnz
repz
jl
movl
in
les
push
ror
jg
push
sahf
pop
sarl
xchg
add
sti
into
add
push
and
outsb
lahf
scas
test
or
push
dec
sbb
leave
mov
je
rcrb
jbe
outsb
sub
jbe
jb
xchg
rclb
cmp
mov
ljmp
bsf
push
cmpsb
cld
cmpl
out
popf
jecxz
pusha
repz
xchg
lahf
cmp
push
cmpsb
push
ljmp
cltd
add
xchg
mov
lock
in
cmpl
rcl
dec
xchg
aas
add
test
mov
push
aas
int3
outsb
aad
shrl
fidivs
js
adc
inc
mov
xchg
cmp
push
incb
sbb
imul
and
mov
inc
cld
sbb
fadd
cltd
sbb
shlb
insl
pop
inc
adcb
mov
mov
lret
aam
negl
out
mov
outsl
orb
sub
pop
and
cmpsl
test
data16
xorb
mov
dec
xor
out
and
mov
jmp
mov
inc
mov
test
mov
aas
dec
sbb
and
shlb
insl
lcall
shr
mov
iret
dec
outsl
mov
mov
jp
notl
mov
xchg
jno
fsub
or
push
mov
rorl
adc
add
stc
popl
inc
inc
mov
iret
in
lcall
mov
test
sahf
or
ret
add
into
cltd
push
and
pop
and
dec
dec
ja
fnstcw
negb
jns
xchg
iret
fdivrp
mov
add
lods
lret
cwtl
jmp
and
jns
mov
mov
push
and
sbb
ss
push
mov
push
mov
adc
sbb
pause
sbb
sbb
cmp
or
and
fbstp
push
or
fs
repz
stos
in
mov
popa
sbb
setl
or
xchg
pop
mov
jne
mov
xorl
in
or
sbb
mov
cltd
mov
inc
push
mov
rcrl
xchg
mov
inc
cmpsb
pop
jge
ds
mov
pop
test
sbb
mov
ljmp
jecxz
cmp
daa
outsl
ret
mov
int
sbb
test
sahf
mov
pop
addr16
test
hlt
roll
lcall
xor
push
fistps
loopne
inc
jb
test
xchg
lahf
xchg
inc
inc
mov
imulb
clc
cli
add
jmp
cmpsl
pushf
or
mov
lahf
out
mov
mov
cltd
inc
jecxz
repz
test
loop
xor
xor
sti
sarl
iret
inc
iret
std
in
inc
leave
inc
outsb
cmp
lahf
testl
sar
mov
imul
movsb
pop
imul
add
sub
je
pop
cmc
xor
stos
pop
ljmp
and
or
sbb
pushf
mov
adc
ja
fsubrl
test
in
ds
ficompl
inc
mov
push
lret
js
loop
cmp
rolb
mov
xchg
shlb
scas
stc
sbb
jg
sbb
pop
xchg
jle
in
fisttpll
push
xor
and
adc
inc
sub
pop
out
pop
mov
lea
movsl
xchg
ja
ss
xchg
xchg
ss
mov
jg
inc
int
sarb
in
jg
inc
or
leave
loopne
leave
rcrb
jno
sti
mov
cmc
xchg
notb
jne
mov
es
mov
sub
jg
sub
add
in
leave
xor
jno
mov
jp
stos
push
cmp
pop
push
std
adc
jge
iret
push
rcrl
repz
call
mov
in
fs
loop
xchg
mov
in
fcoms
add
je
inc
inc
cmp
or
or
ja
add
je
insl
fmull
inc
sub
aam
aam
mov
rolb
xchg
sarl
xor
xchg
daa
rcrl
ja
in
jnp
repz
jg
fs
and
push
cwtl
adc
sub
addr16
dec
rorb
push
inc
xlat
adc
out
sar
ljmp
outsl
dec
jp
orl
pop
inc
iret
outsl
cmp
mov
lock
cs
scas
loop
or
ror
lds
push
mov
push
inc
cmc
add
mov
int3
xchg
and
test
adc
sbb
ret
sbb
push
xchg
es
jl
arpl
cli
cs
es
test
mov
xchg
notl
jb
shl
push
xchg
cwtl
adc
dec
scas
rclb
xchg
aad
add
pop
xlat
sahf
mov
in
dec
pusha
incl
flds
iret
push
mov
call
jno
fsubp
insl
sbb
push
sub
test
jecxz
aam
ret
push
pop
fistpl
hlt
cmp
aas
cmp
loope
cld
sub
inc
rclb
jmp
jae
pop
dec
std
xchg
push
xlat
ss
pop
cld
sub
icebp
push
mov
stos
ja
ret
xlat
pop
sahf
arpl
rcrb
addr16
adcl
in
add
ret
sbb
std
cs
aam
loopne
es
push
adc
inc
call
aaa
das
xor
ss
mov
mull
fstpl
push
ret
repnz
or
leave
aaa
xchg
sbb
pop
cwtl
mov
mov
pusha
mov
stos
jne
cmp
sub
fildll
add
outsb
xchg
shrl
xorl
in
adc
inc
rol
in
or
adc
fstpl
and
xor
stc
cmp
and
push
xchg
cmpsb
mov
push
cmpsb
inc
cmp
and
pop
scas
fsubrp
or
stc
addl
dec
dec
pop
in
xor
fcmovbe
sbb
test
inc
call
hlt
popl
jle
in
sub
in
shll
fwait
or
rolb
fdivs
pop
mov
dec
out
movsl
imul
mov
inc
mov
xchg
movsl
les
mov
roll
fiadds
and
xchg
pop
xchg
test
adcl
xor
dec
cmp
mov
sahf
xchg
scas
cmpsb
arpl
inc
dec
and
loope
testl
cltd
clc
scas
jecxz
dec
lods
sbb
int
addr16
mov
std
push
lret
shlb
test
nopl
lods
dec
adcb
push
ror
fsub
jbe
js
in
test
loopne
ljmp
clc
test
xchg
pop
add
dec
xchg
inc
iret
std
inc
into
fnsave
xchg
jo
and
movsl
lahf
cs
cmp
in
xor
xor
inc
call
ficoml
cwtl
and
xlat
inc
mov
mov
jl
aaa
and
cltd
clc
mull
repnz
add
test
add
add
inc
jmp
in
in
add
cwtl
mov
sbb
or
nop
or
jl
or
xchg
sub
xor
mov
out
mov
and
in
mov
and
pop
in
jae
xchg
jo
sub
repnz
rorb
jge
mov
cmp
or
ds
mov
mov
mov
lea
je
lods
add
movsb
sub
xor
mov
push
jl
sar
out
fnsave
sbb
xor
ret
cmpsl
cs
stc
ficomps
and
pop
movsl
ja
jb
in
xchg
pop
mov
les
fists
dec
mov
icebp
std
cwtl
jbe
jmp
cmpsb
sub
xor
jbe
jo
mov
pop
dec
sbb
mov
loop
fidivl
cmc
insl
shrl
or
cmpsb
js
fsubl
and
mov
mov
add
pop
jnp
fiadds
outsl
pop
fisttps
js
jp
jnp
arpl
addb
addb
add
andb
into
mov
pop
pop
push
inc
pusha
dec
je
mov
cwtl
cmp
ror
push
jg
sahf
ret
mov
aad
ljmp
repnz
shll
add
scas
and
jmp
add
pop
mov
or
push
loopne
xchg
mov
mov
jnp
xor
loope,pn
cmovno
adc
int
shl
jns
pop
push
push
sbb
push
push
psrad
sbb
dec
frstor
mov
xor
loop
loopne
insl
or
xorl
iret
movsb
push
xor
lock
pop
loop
out
dec
das
lds
push
fs
inc
pop
xor
inc
xchg
lea
out
sahf
aad
es
add
xchg
add
out
adc
or
dec
jp
mov
pop
mov
mov
jo
roll
sub
mov
sub
stos
lods
xchg
and
sub
das
inc
jp
dec
pushf
ljmp
dec
mov
test
and
gs
pushl
testl
jns
jg
int
inc
mov
xor
inc
test
dec
movsb
ret
push
icebp
inc
push
inc
in
mov
stos
pop
aad
fdivp
push
or
fnsave
cltd
pop
cmp
jns
xchg
cmp
jbe
or
xchg
ljmp
or
in
addb
sbb
outsb
jno
push
and
fs
jle
pop
push
popa
mov
xor
push
cmpb
push
add
mov
leave
ss
add
dec
add
mul
pusha
xchg
sub
pop
ljmp
dec
cmpsb
cmp
xor
ficoml
iret
jnp
or
pop
lret
dec
aad
int
mov
inc
sbbl
push
jmp
jecxz
fsubrs
test
add
scas
inc
mov
cwtl
jl
cmpsl
arpl
mov
xlat
push
xor
add
jmp
inc
push
inc
daa
mov
and
popf
add
mov
scas
vcvtsi2ssl
mov
and
xor
inc
mov
into
add
sbb
sbb
fwait
inc
lea
jne
scas
test
rorl
sbb
aaa
daa
jp
or
cmp
or
icebp
inc
mov
insb
pop
inc
or
cmpsl
mov
pop
loopne
mov
test
jp
sbb
sub
call
test
jle
and
jecxz
inc
in
das
xchg
shl
mov
cwtl
sub
jmp
cmpsl
fcompl
lds
mov
test
pushf
xchg
in
sub
lock
push
addr16
andb
push
scas
push
cli
fs
insl
push
data16
sti
clc
push
sarl
mov
out
inc
pop
sbb
shlb
aad
out
mov
fsubrl
fs
cwtl
pop
mov
std
xchg
pop
shrl
lea
stos
dec
lret
mov
dec
cmpsl
enter
int
mov
sub
aaa
mov
xor
lea
cmp
notl
mov
xchg
or
jae
out
jle
subl
loopnew
out
in
enter
ror
xor
push
lock
in
sub
in
call
mov
mov
push
idivb
lds
movsb
movsb
int
adc
cltd
popf
pushf
sub
mov
jl
dec
cmp
add
hlt
enter
push
lahf
jle
push
loopne
xlat
xor
or
inc
dec
inc
cli
add
pusha
adcl
addr16
push
loope
sub
add
sbb
and
inc
pop
sbb
stos
dec
lods
and
out
mov
sub
jne
push
das
popf
dec
dec
lods
data16
dec
push
mov
into
or
sbbb
xchg
mov
mov
nop
addr16
push
test
frstor
jle
dec
test
mov
dec
mov
push
dec
jmp
pop
scas
add
mov
lahf
dec
fwait
cltd
adc
sbb
lods
lock
fildl
ss
shll
adc
push
shll
out
daa
mov
xchg
inc
pop
cltd
cwtl
fsub
lods
iret
lods
cs
scas
std
pop
aad
cmp
gs
into
mov
dec
in
adc
cmp
jp
or
hlt
adc
popf
fwait
push
imul
loop
push
imul
jno
movsl
hlt
mov
int3
mov
mov
sarl
xor
loop
cmp
jns
adc
imul
shll
jp
cli
cwtl
push
gs
test
int
jno
mov
xchg
fwait
arpl
xchg
dec
popf
js
in
or
lcall
in
outsl
into
je
inc
sub
dec
xor
testl
mov
jne
pop
fwait
mov
xchg
or
lret
sti
out
sbb
xor
leave
jb
imul
scas
pusha
jbe
hlt
jno
ficomps
ljmp
and
dec
addr16
adc
and
mov
push
popa
jle
in
or
stos
mov
fwait
xor
cli
xchg
cmpsl
pusha
push
or
sub
adc
insb
mov
fst
and
mov
and
cmp
insl
insb
or
mov
cmp
dec
sti
xchg
mov
mov
inc
dec
lea
add
or
and
push
jno
scas
and
das
jnp
adc
xchg
scas
je
fwait
je
outsb
ss
xchg
push
sarb
sbb
add
int3
jbe
mov
adc
jecxz
xor
inc
sti
mov
fadd
sub
outsb
das
cmp
pop
notl
jle
arpl
jge
dec
out
xchg
mov
mov
loop
in
fdivl
jbe
clc
rdtsc
in
sbb
cmpl
pop
scas
prefetch
cs
sbbb
leave
in
mov
push
xchg
out
xor
insl
jbe
cmpsb
lret
pop
pop
inc
imul
outsl
xor
lret
popa
pop
int3
rorl
test
movsb
or
mov
xchg
sbb
aam
clc
sbb
push
pusha
xor
cli
jge
xchg
fiadds
push
test
das
mov
mov
cmp
jne
inc
push
pop
js
mov
inc
out
les
fistpl
cmpl
stos
daa
aaa
pop
shl
inc
jns
cltd
dec
lods
addr16
mov
rorl
xor
iret
xor
and
mov
sub
lcall
pop
cs
inc
es
pusha
arpl
ja
dec
fistl
pop
jg
ljmp
jns
and
mov
jg
xor
hlt
push
ja
shrb
lret
xchg
outsl
jno
sbb
jns
mov
mov
fwait
sub
movsl
insl
aas
cmp
imul
pop
adc
pushf
sbb
xchg
dec
pop
ss
cmp
jge
inc
mov
ds
adc
adc
dec
rclb
divb
dec
mov
imul
mov
jmp
cmp
sbb
adc
xor
lods
shlb
dec
movsb
shlb
jmp
mov
mov
das
inc
imul
out
lret
mov
mov
adc
mov
xor
out
mov
jle
fwait
mov
sub
inc
dec
dec
and
mov
stos
mov
mov
xor
mov
lahf
jge
push
je
xor
pusha
push
add
repnz
xchg
lods
lahf
testb
and
fiaddl
cmp
addb
dec
ja
cld
dec
sbb
pop
push
mov
stc
ror
and
xchg
fsubrl
fidivrs
ljmp
xor
push
and
dec
xor
or
and
rcr
push
outsb
push
pop
cmp
ficoml
fsubr
cld
repz
pushf
ja
insb
cmpsb
cmp
add
icebp
push
outsb
adc
aas
out
gs
fdivr
orl
dec
mov
xor
adc
xchg
cmpb
repnz
je
and
xor
adc
out
push
sti
xlat
addl
jbe
mull
adc
mov
cmp
and
jg
repnz
in
mov
inc
cs
sbb
gs
xor
push
dec
int
adc
or
sbb
or
dec
sub
popf
xor
push
adc
mov
fsubrl
call
ret
mov
xchg
popa
push
outsb
test
push
stc
rorb
in
mov
dec
mov
in
cmpsb
jns
jno
pop
scas
cmp
mov
out
jmp
gs
movsl
sbb
xor
fiadds
repnz
testl
push
adc
push
inc
mov
ret
jne
push
fs
push
aam
xchg
out
jge
in
adc
mov
xchg
add
in
stos
pop
push
scas
popl
inc
sarb
pop
jno
and
mov
es
xor
xor
in
xor
fldenv
imul
out
sub
xchg
sbb
shl
cltd
add
pop
je
pop
int
pushf
enter
in
testb
fadds
dec
fiadds
fisubrs
insb
and
out
cld
fisubl
out
loopne
mov
in
scas
js
mov
push
xor
and
bound
hlt
rorb
and
imul
pop
dec
fwait
dec
sbb
pusha
sahf
mov
dec
mov
or
pop
lock
jp
mov
pusha
ret
xchg
sahf
pop
cmpsl
inc
jle
dec
into
dec
imulb
sub
mov
pop
pop
add
xchg
push
or
xchg
xlat
cmp
add
sbb
stc
inc
outsb
dec
xor
aaa
lea
addr16
or
sub
jmp
inc
and
aaa
or
sbb
rclb
test
mov
jmp
sbb
jmp
mov
fs
cltd
mov
arpl
push
mov
fs
mov
mov
into
jg
lret
out
mov
cmp
pop
icebp
adc
inc
out
in
xchg
clc
mov
cmpsb
sub
and
xchg
cmpsb
inc
dec
add
shlb
dec
dec
lods
cmc
cmpsb
push
call
mov
mov
into
xchg
lcall
rep
iret
lods
ja
dec
jne
imul
out
int
cmpb
xchg
and
mov
or
and
int
adc
cmp
add
icebp
aaa
jg
push
out
mov
je
in
movsl
imul
dec
cltd
dec
sub
repnz
cmp
imul
mov
ficoml
adc
in
repz
xchg
movsb
jns
sub
testl
mov
mov
mov
flds
out
iret
mov
movsb
xchg
sbb
add
push
jo
enter
jle
cltd
adc
xchg
test
js
mov
sub
push
out
cwtl
jns
mov
jp
popf
ss
xchg
jecxz
sub
xchg
sub
shlb
mov
imul
and
mov
add
insb
icebp
mov
or
push
pop
or
sub
jbe
sbb
inc
aam
add
dec
fdiv
or
das
adc
adc
in
and
xlat
pop
mov
cwtd
lods
xchg
cmc
mov
imul
fdivp
sub
jle
ds
xor
pop
ss
jnp
int
out
jmp
inc
out
aad
in
xlat
pusha
or
mov
dec
cmp
lds
push
fld
inc
insl
std
call
pushl
in
or
xor
test
insb
das
repz
mov
ret
jb
into
inc
jle
sar
cmpsb
add
mov
add
jae
mov
gs
pop
stos
into
enter
pop
or
mov
push
fstps
cmpsb
jns
xchg
imul
ds
cmovb
jne
pop
fcompl
aas
sarl
push
loope
push
ja
gs
subl
jl
fwait
ret
xchg
pop
and
in
cltd
ja
jge
or
fldl
nop
jnp
insb
push
imul
roll
push
inc
out
mov
dec
jecxz
adc
push
xor
pop
push
inc
test
cmp
in
inc
int
shrb
test
lcall
es
sub
sbb
fldl
or
stc
xchg
js
divb
arpl
outsl
push
and
sub
ljmp
adcb
ret
pop
jle
int
cltd
rcll
mov
das
lods
aam
mov
push
divl
fs
je
insl
lds
ljmp
and
cmp
ds
sbb
cmp
lods
and
mov
aas
and
fs
stos
mov
sbb
fisttpll
aad
pushf
jbe
test
lods
test
and
cmp
jmp
pusha
packuswb
sub
popf
mov
mov
mov
fwait
ja
xor
outsl
xor
xchg
testb
lea
pushf
jmp
scas
mov
mov
xchg
push
mov
push
lret
or
jp
push
imul
or
imul
ret
idivb
jb
push
and
ret
xchg
dec
jge
xchg
jmp
in
popa
lret
fwait
adc
shll
insb
push
jno
xlat
or
xor
mov
xor
mov
jae
pop
in
ljmp
ret
out
test
mov
test
fwait
loopne
sbb
or
jne
mov
jl
aas
cmp
sahf
out
push
cmpsb
mov
mov
notb
cli
insb
call
test
mov
in
xor
icebp
test
and
rorl
push
scas
add
aas
mov
stos
repnz
cltd
cmp
xchg
dec
es
sbb
lods
in
inc
and
popa
or
leave
leave
cwtl
movsb
inc
int
and
ret
aas
movsb
jne
and
shll
sbb
out
add
push
adc
mov
mov
xchg
lods
mov
dec
andl
jl
add
out
fmulp
dec
dec
xor
jae
jp
incl
test
pop
aas
push
jne
js
inc
adc
cmpsl
add
faddl
ds
mov
mov
mov
ds
pop
and
fcoml
lds
int3
jg
or
inc
lds
lock
leave
or
add
in
lock
das
cmp
dec
mov
addl
adc
bound
add
gs
push
push
and
pop
aam
rcrl
mov
mov
mov
cmp
scas
sub
mov
enter
mov
ljmp
mov
push
pop
jl
loopne
popa
add
js
rolb
mov
mov
addr16
mov
jge
pop
lret
or
mov
add
leave
scas
adc
pop
loopne
shll
mov
out
add
lds
inc
cmp
iret
mov
sti
pop
inc
inc
cwtl
enter
fcomi
sbb
sbb
out
mov
xlat
aaa
cmp
cmp
jbe
fsubl
in
test
popa
jnp
lods
lods
inc
int
dec
adc
sub
pop
or
outsl
fadds
insb
into
jne
jp
pop
cmp
popf
mov
mov
ret
pusha
fstps
dec
inc
dec
mov
scas
cmp
dec
push
or
das
aas
test
fsubrs
sbb
cmp
in
mov
mov
push
adc
xlat
mov
mov
in
push
and
and
mov
inc
sub
das
out
add
popf
inc
add
ss
repz
mov
repz
sub
dec
scas
ljmp
mov
add
ja
mov
xchg
mov
data16
mov
jo
push
lret
mov
push
mov
mov
and
xchg
andl
adc
xlat
stc
stos
daa
pop
jne
mov
lods
push
loope
lods
test
xchg
pop
iret
adc
add
insl
repnz
ja
mov
jbe
sarl
loop
scas
out
iret
rcl
push
sbb
sbb
xchg
popf
iret
scas
ljmp
enter
inc
jp
hlt
fldl
xchg
stos
push
aas
xchg
call
push
mov
jecxz
fldcw
nop
dec
cmp
push
xchg
je
cltd
cli
rcl
rolb
pop
bound
mov
ret
dec
clc
mov
call
xchg
scas
dec
mov
mov
mov
bound
mov
js
ja
adc
pusha
mov
mov
sarl
jnp,pn
pushf
push
in
mov
lods
jnp
sub
mov
iret
sub
mov
inc
xor
jne
dec
aam
shl
inc
mov
mov
cld
insl
dec
arpl
push
sarb
mov
xchg
lcall
cmpsl
sub
dec
test
cwtl
fiadds
cmp
sub
add
ret
pop
inc
fwait
push
pop
popf
push
in
push
fbld
ja
ljmp
add
jecxz
popa
arpl
xchg
scas
push
mov
xchg
ror
add
cmp
movsl
iret
sub
sub
cld
into
cmp
inc
in
lea
outsl
hlt
insl
pop
addb
leave
xor
inc
fstp
sbb
push
lret
pop
adc
push
and
mov
adc
or
into
inc
mov
jbe
mov
fnstsw
sub
outsb
jge
inc
roll
and
mov
cmp
enter
adc
adc
inc
inc
mov
mov
clc
sbb
sbb
adc
push
stos
rorb
cltd
addr16
std
dec
pop
inc
xchg
in
pop
enter
cmp
call
sbb
fwait
mov
cltd
mov
dec
cltd
mov
out
cmpsb
adc
mov
mov
pop
xchg
dec
aad
jnp
mov
inc
add
dec
mov
jae
popa
hlt
mov
adcl
ret
mov
aas
mov
loopne
mov
dec
pop
or
imul
sub
cmp
cmp
lcall
mov
fildl
outsl
fistps
pop
adc
lret
mov
dec
mov
xor
dec
aam
stos
or
mov
std
jle
sbbl
pop
mov
mov
push
dec
adc
ficoms
pushf
pop
imul
test
xlat
add
into
or
push
jne
or
mov
sbb
xor
in
inc
fldt
jp
into
shll
xchg
ret
stos
push
repnz
dec
cmp
xchg
mov
jmp
call
push
sahf
inc
lret
mov
out
jg
lock
and
sbb
nop
push
cs
adc
mov
ja
push
fisubs
add
jnp
cmp
arpl
leave
mov
pop
pop
shl
mov
test
sahf
or
xor
insl
stos
into
pop
sub
push
loop
int3
rclb
dec
lret
mov
sbb
xchg
stos
sub
out
test
es
lcall
jle
push
sarb
clc
and
sti
jne
xchg
xor
sub
lahf
lea
xchg
shl
sub
sub
dec
sub
in
pushf
loop
iret
mov
shrd
repnz
inc
lahf
cltd
dec
out
cmc
mov
loope
sbbb
ret
gs
cs
test
and
aas
fmuls
mov
shrl
and
inc
jnp
cld
push
jmp
roll
xor
jnp
or
pushf
jmp
mov
insl
insb
das
add
inc
mov
adc
xor
repz
ljmp
mov
lods
push
leave
jmp
sbb
mov
lret
mov
mov
push
xlat
mov
mov
leave
xchg
cmp
xchg
movsl
mov
addr16
push
sahf
icebp
or
cmc
shl
sbb
stos
pushf
fildll
xchg
insl
add
add
ja
cwtl
or
xchg
xor
xchg
or
divb
in
xchg
mov
mov
jb
aad
push
jo
inc
nop
gs
pop
jno
mov
cmp
shlb
sub
or
aam
mov
icebp
insl
mov
push
add
stos
mov
repnz
adc
fmuls
arpl
and
ja
mov
and
sbb
test
fcmovne
test
stos
mull
in
xchg
push
orl
loope
ret
pop
sbb
jb
test
in
mov
roll
scas
inc
fdivrp
icebp
clc
das
pushf
paddb
int3
mov
out
jbe
lods
shlb
mov
orb
mov
mov
push
xchg
fidivrs
sbb
outsb
or
loopne
out
data16
fs
add
sarb
shll
lods
outsl
push
outsb
mov
inc
pop
push
aas
add
mov
aas
mov
mov
sub
mov
fbstp
pusha
aas
adc
repz
lock
scas
mov
pop
or
imul
or
fidivs
das
loop
push
dec
repnz
insl
ret
in
int
xlat
imul
fs
ficoms
xor
mov
push
insb
out
mov
aad
jmp
sbb
repz
adc
fmuls
fnsave
dec
push
push
test
mov
fildl
mov
je
pop
pop
ret
addl
sub
je
test
sbb
leave
adc
jb
inc
repz
or
add
jnp
sarl
mov
fcoms
cli
insl
push
pop
lret
leave
mov
sbb
push
cltd
inc
push
and
sbb
loop
dec
xchg
gs
dec
loopne
test
mov
data16
push
and
addr16
shlb
ds
repnz
imul
mov
or
insb
mov
loope
cmp
xor
push
xor
mov
mov
jbe
jae
cmpsb
in
xchg
fisubrl
fimuls
and
dec
jo
sbb
movsl
add
adc
push
xchg
xchg
stc
outsl
out
xor
arpl
pop
nop
pop
out
sti
idivb
mov
sahf
pop
js
das
pop
or
sarl
or
fs
jb
ja
pop
push
stc
iret
or
dec
pop
cmp
into
mov
pushf
lods
rcll
jle
aam
push
mov
popf
cmp
jnp
test
mov
jle
cmpsb
or
cmp
insl
sub
mov
pop
jo
push
push
nop
inc
test
fwait
mov
sub
add
pop
es
inc
fs
xor
mov
dec
lea
fstpt
dec
clc
cld
jno
sub
rcrb
lods
inc
insb
mov
push
add
mov
stc
mov
testb
xchg
cmp
lods
adc
inc
mov
in
ret
xchg
jns
ret
ja
popf
jbe
mov
clc
jae
js
cltd
cwtl
imul
sub
sub
xchg
decl
ljmp
xchg
push
js
add
adc
ja
shr
out
jmp
leave
push
sbb
addr16
cmc
adc
outsl
imul
xchg
jb
mov
mov
mull
in
sub
push
aam
push
das
mov
xchg
insl
cltd
shl
ret
adc
clc
mov
inc
push
test
cmp
pop
push
cmp
jl
cmp
inc
dec
fucom
push
cs
jns
lret
mov
xor
xchg
or
mov
out
sbb
test
jg
test
rcrb
scas
popa
pop
sub
sbb
loopne
hlt
je
repz
in
sti
cmp
les
add
jmp
inc
out
push
stos
mov
push
cwtl
stos
mov
cmp
test
sbb
fstl
jno
add
mov
in
push
sub
and
das
push
jbe
lcall
cmc
mov
xor
sbb
iret
and
and
pop
mov
xchg
cmp
test
int
data16
adc
inc
lahf
scas
mov
ss
sbb
std
or
jb
sbb
dec
add
ds
push
sub
mov
rorl
sub
mov
call
mov
sub
xchg
lods
inc
test
test
xor
int3
inc
xchg
mov
das
mov
add
leave
into
and
cmpsb
sbb
dec
js
adc
add
pop
mov
fnstsw
pop
cmpb
push
or
aam
mov
jno
mov
sub
inc
scas
mov
popa
xchg
pop
mov
and
add
rcl
fs
pop
xchg
cmp
sbb
and
movsb
mov
mov
inc
icebp
xchg
stc
ret
sbb
dec
xchg
jecxz
add
arpl
or
out
mov
clc
cld
push
mov
jle
or
nop
stos
dec
mov
in
arpl
push
fnsave
pusha
xor
pop
ret
pusha
xchg
mov
mov
cmpsl
mov
cmp
ljmp
pop
imul
cmc
mov
loope
out
enter
jmp
dec
cmp
gs
ljmp
sbb
insl
sbb
lock
cmp
pop
jo
rcll
je
cmp
xchg
mull
les
insl
jmp
stos
jo
or
adc
xchg
outsl
stos
mov
push
cld
aaa
test
or
pop
clc
into
subb
xchg
test
push
inc
mov
pop
mov
mov
and
push
and
fsubrp
mov
lahf
dec
cmp
mov
inc
inc
inc
pop
bnd
jle
out
movsl
and
xor
push
mulb
pop
cmpsb
popa
sub
sarl
pop
sti
push
and
jne
push
iret
pop
pop
shll
dec
out
lahf
sarl
mov
mov
arpl
gs
push
cmpsl
add
popf
push
mov
test
mov
outsb
ja
cltd
dec
push
lret
mov
mov
mov
add
js
jg
aas
and
dec
lods
sbbb
or
dec
or
lea
inc
mov
sbb
imul
push
and
iret
jg,pn
jne
cmp
daa
cltd
cmp
mov
stos
int3
outsb
hlt
int3
bound
test
js
in
into
cld
xor
mov
scas
and
int
loope
cmp
jne
xchg
test
or
mov
shlb
repnz
cld
add
std
cmp
jl
mov
fsubrl
lret
push
repz
pop
xchg
add
and
push
mov
pop
inc
fdivs
xor
stos
xchg
sub
fistpl
or
mov
or
push
lahf
jno
jb,pt
cmp
clc
push
mov
btc
outsl
lock
jge
xor
mov
or
cs
jnp,pn
xchg
push
mov
aas
mov
out
pop
mov
mov
orb
mov
push
jbe
popa
pop
push
lods
mov
in
mul
mov
dec
lock
pusha
mov
mov
jne
addb
mov
sub
lahf
dec
ss
daa
lods
outsb
cs
lods
add
popa
xor
les
stos
mov
sbb
mov
pop
shll
mov
mov
mov
jb
scas
or
aas
sarb
and
std
ret
lds
sub
aas
add
lret
mov
js
push
iret
cs
sbb
dec
fiadds
iret
xchg
mov
or
mov
inc
xchg
and
cs
mov
dec
jnp
add
cmp
xor
add
push
loope
std
gs
xor
mov
out
repz
daa
outsl
cmp
out
iret
loop
mov
and
fcoms
jg
mov
pop
pop
data16
lods
or
sbb
xchg
sub
daa
test
mov
mov
insl
into
push
fmul
imul
push
out
mov
jbe
mov
lret
test
xchg
mov
push
ret
pusha
cmp
push
cltd
add
lock
adc
repz
and
dec
fsubl
jl
add
add
pushf
insl
jno
daa
xchg
mov
mov
je
xchg
dec
sbb
int3
sub
adc
mov
inc
cltd
pop
lret
pop
jne
out
dec
or
es
scas
or
mov
inc
mov
mov
ss
xor
push
fmulp
lret
and
mov
bound
jp
outsl
pop
orb
push
fisubrl
sti
jb
xor
insl
daa
dec
mov
pop
jecxz
xor
insl
xchg
cwtl
fildl
mov
cmp
cld
fs
hlt
sub
lret
orb
or
in
dec
add
pop
jge
adc
xor
jge
lods
popa
dec
or
mov
dec
loope
fsubrl
inc
lods
insl
fisubs
mov
fxch
rcrl
loop
mov
sbb
adc
clc
call
lods
in
push
dec
sbb
push
cmpsl
icebp
add
loop
jle
and
jle
jge
pushf
movsb
push
test
out
adc
lods
ret
jbe
mov
mov
pop
or
cli
shrl
or
out
and
xor
cmpsb
test
shlb
cltd
idivb
cltd
pop
mov
cmp
pop
pop
xchg
in
mov
lcall
icebp
rorb
push
rcll
sbb
cs
adc
adc
mov
in
mov
push
repz
test
inc
mov
imulb
movsl
push
pop
xchg
pop
adc
stos
inc
or
adc
and
imul
movsl
push
inc
jns
inc
and
pop
popa
lds
xor
fwait
and
insl
std
cwtl
scas
mov
cld
push
push
jle
push
int3
jns
mov
mov
fiaddl
stos
scas
repnz
xchg
movsl
jbe
mov
ds
mov
imul
and
int3
jns
orb
pop
es
cmc
or
dec
int3
out
cmpsl
xlat
adc
mov
inc
xor
xchg
add
or
scas
xchg
jne
inc
lock
out
mov
roll
into
and
aad
and
mov
cmp
cmp
je
jbe
xchg
pop
dec
xchg
ds
movsl
xchg
stos
cmove
jge
adc
dec
pop
imul
jbe
mov
sbb
and
les
pop
mov
es
ret
add
jmp
pusha
pop
es
sub
push
fistpll
and
mov
and
scas
xchg
dec
stos
in
mov
jns
test
cmp
scas
and
dec
repnz
insb
adc
mov
pop
repnz
sbb
iret
inc
mov
ret
fnop
jge
adc
xchg
xor
pop
pop
or
pop
idivl
cltd
dec
mov
cld
and
add
add
adc
cltd
icebp
adc
add
dec
loop
dec
fdiv
rcrl
mov
mov
out
cmc
or
insl
jge
push
ljmp
and
dec
xor
jno
xor
xlat
ljmp
cmc
idiv
fcmovu
sub
xor
jb
dec
and
mov
jns
xchg
adc
sahf
xorb
icebp
scas
add
mov
outsb
ja
movsb
les
int
mov
add
push
lahf
xchg
dec
pop
shl
push
push
xchg
repz
and
pop
xor
pop
pop
lret
xchg
sub
into
mov
xor
sub
movsb
xchg
mov
sub
inc
movsb
loopne
inc
test
adc
and
dec
xchg
mov
jae
sahf
inc
pop
add
cmp
jnp
or
outsb
pop
popf
push
mov
mov
and
mov
pushf
mov
js
push
jno
jnp
arpl
cmpsb
jg
test
test
test
out
aas
out
inc
clc
lock
or
aas
dec
fisubrs
sti
mov
adc
cmpsl
xchg
lret
out
mov
in
movsl
movsb
mov
sub
ja
popa
cmp
fmuls
jo
mov
imul
dec
cmpsb
xchg
fsubl
and
dec
vmovlpd
lret
aaa
mov
shlb
mov
push
mov
mov
jle
data16
pop
cld
cmp
mov
call
movsb
fucomip
lds
fistps
xor
push
hlt
sbb
dec
xor
mov
dec
in
leave
aaa
call
stos
das
jmp
cmp
movsb
out
push
in
push
jl
dec
jecxz
mov
sub
pmaddwd
jl
sti
dec
jl
sahf
and
mov
pop
ret
loop
pop
jo
adc
jmp
cmpsb
jp
cwtl
pop
push
arpl
js
mov
fistl
std
sub
pop
lds
or
gs
cli
push
pop
sahf
repz
leave
xor
jecxz
jne
cmpsb
mov
and
pop
sbb
cmp
into
jb
sub
ret
data16
out
stos
hlt
std
jmp
xchg
adc
pop
jns
in
orl
jp
adc
pop
xchg
out
loopne
add
inc
add
loop
push
jge
lds
push
xchg
lcall
sbb
movb
xchg
out
lds
mov
xor
call
sbb
xchg
popa
jl
test
add
sbb
mov
mov
mov
ljmp
ds
imul
call
adc
je
or
jmp
mulb
out
adc
sub
aaa
push
xchg
sti
lret
and
and
cmp
sub
xor
out
xlat
xor
jne
rorl
scas
push
xchg
mov
mov
sbb
jae
inc
inc
int3
inc
lahf
aad
pop
dec
int
jb
mov
jb
mov
popf
pop
loopne
xor
inc
fcoml
dec
fstl
push
stos
jg
sub
cld
cmpsl
aaa
push
pop
inc
loop
pop
mov
push
mov
je
adc
inc
push
xchg
lret
scas
jns
cmp
addl
adc
lock
test
push
repz
push
into
rclb
arpl
stos
mov
insl
jge
and
dec
mov
insb
scas
popa
repnz
adc
adc
sub
lret
jle
add
les
enter
jae
cltd
lcall
fisttpl
sbb
in
mov
out
mov
cltd
xlat
and
mov
jle
stos
mov
out
iret
adc
cwtl
stos
notl
mov
jbe
leave
sbb
fs
in
es
pusha
out
mov
cwtl
xor
sbb
cmp
outsb
pop
cltd
js
cmp
loope
test
mov
mov
lock
sub
idivl
or
js
test
xlat
adc
sti
push
pop
cltd
dec
mov
iret
mov
cmp
rcrl
sub
shlb
test
das
push
ret
loopne
insb
sbbb
pop
sbb
in
leave
cmp
push
das
pop
pop
cmp
cld
sub
addr16
movsl
jo
and
loop
sub
dec
jp
test
dec
and
add
push
mov
and
out
and
stos
ret
lods
push
cmp
ret
or
mov
xchg
dec
mov
stos
fnstcw
pop
sub
sbb
repz
push
fsts
mov
fbld
fwait
mov
adc
xor
lret
pop
aas
jae
add
mov
pop
cmp
and
lret
sbb
sub
mov
pop
sub
mov
mov
dec
inc
mov
xchg
fwait
leave
fwait
xor
fs
cmpsl
cmpsl
xor
subb
xchg
aaa
mov
jne
inc
in
fimuls
imul
lds
lahf
add
mov
xchg
enter
cmp
cmp
add
ljmp
ds
push
shr
xchg
icebp
fisttps
jb
and
push
mov
cld
int
popf
mov
inc
imulb
sbb
rcl
lds
movsb
sub
sbb
test
jl
outsl
icebp
xchg
pop
nop
clc
fistps
stos
mov
push
sub
cwtl
push
arpl
inc
mov
push
fucom
add
or
movsb
pop
add
mov
ss
push
outsl
push
inc
shll
clc
test
bound
and
mov
ret
insb
stc
adc
jg
cli
mov
mov
lahf
cmp
push
mov
and
sbb
fisubrl
jns
mov
push
inc
cmpsl
mov
add
mov
inc
add
in
sub
or
lods
xchg
xchg
f2xm1
sahf
in
xor
xor
rol
lea
and
lret
push
push
subb
mov
pop
cmp
jle
ss
fisubs
mov
mov
jg
js
push
es
out
push
inc
mov
test
roll
imul
sbb
negb
jne
popf
add
das
dec
lods
iret
and
mov
loope
lods
jbe
outsl
cmp
mov
call
in
out
mov
pop
jmp
pop
push
mov
in
add
out
xor
add
and
pop
push
push
lods
push
xlat
gs
mov
in
xor
mov
sub
mov
xor
icebp
bound
and
aaa
popf
dec
popa
outsb
pop
cmp
loop
xor
lcall
scas
std
scas
mov
arpl
jo
add
fwait
push
lods
mov
bound
xchg
les
mov
lcall
mov
fcompl
jp
mov
add
lods
test
push
jecxz
test
lahf
adc
and
xchg
pop
pop
hlt
testl
xchg
out
lret
sbb
mov
ret
mov
stos
cli
and
pop
xor
aaa
mov
mov
xchg
adc
mov
aam
adc
test
out
cmp
testl
repnz
jmp
xchg
test
ja
mov
pop
xchg
jbe
iret
mov
mov
outsl
imul
jns
es
jo
push
lahf
enter
jns
jne
mov
and
mov
call
lods
mov
sub
movl
or
es
jl
out
inc
jbe
mov
mov
xchg
xchg
mov
shlb
std
push
mov
ja
insl
ljmpw
jne
and
inc
lahf
xchg
xchg
add
adc
xor
adc
push
add
pop
sbb
rolb
cmp
mov
hlt
pusha
data16
xor
push
cmp
adc
sbb
inc
add
dec
mov
sub
and
mov
xchg
ficompl
out
add
jle
pop
pop
leave
imul
cmp
icebp
int3
jle
jg
pop
test
mulb
int
dec
fmuls
popf
dec
sbb
sbb
popf
hlt
push
xchg
ret
ja
cmpsb
jbe
scas
sub
jmp
out
adc
cs
xor
mov
aam
lret
mov
nop
arpl
cmpb
mov
xacquire
mov
mov
dec
pop
pop
sbb
adc
mov
jns
scas
mov
inc
and
fsubrp
in
insb
lcall
jecxz
ja
cs
loope
dec
subl
popa
je
es
sub
adc
stos
mov
loopne
inc
fbld
mov
fsubl
ret
stos
data16
mov
cltd
dec
cmpsb
xor
xor
stc
cmp
pop
mov
shlb
fisubrl
mov
mov
xchg
imul
rolb
jnp
inc
jmp
hlt
es
mov
or
bound
ret
adc
jg
pop
rol
sar
inc
nop
jge
push
arpl
ret
iret
gs
ret
lods
call
bound
xchg
jmp
or
pop
lcall
inc
sarl
dec
je
int3
enter
xor
scas
insb
stos
sub
stos
jg
out
dec
les
xchg
push
hlt
jae
scas
mov
test
rol
push
mov
fs
jns
movsb
sahf
lods
sahf
pusha
pop
addr16
shl
xchg
icebp
jecxz
add
inc
in
and
dec
sbb
fwait
sbbl
mov
outsl
xchg
mov
mov
call
sbb
stos
push
adc
cmp
jg
pusha
jg
jb
mov
push
fadds
sti
out
lret
jle
imull
xor
fs
addr16
add
mov
dec
or
mov
fisttpl
out
mov
ljmp
imul
int3
cmpsl
out
jo
leave
xchg
xor
ja
and
lahf
or
insl
xor
pop
push
add
and
ds
mov
arpl
mov
je
xchg
lret
scas
and
jnp
ficoml
gs
ret
out
cmp
rorl
icebp
jge
jno
xchg
pop
das
sbb
xor
sbb
fbstp
mov
xor
test
xchg
repnz
pop
enter
pop
and
jle
and
and
mov
sbb
sbb
int3
loope
clc
jae
pop
xor
mov
movl
pop
shll
insl
mov
sub
pop
mov
sti
sbb
imull
push
shlb
mov
bound
rclb
adc
mov
or
push
xchg
test
insb
and
aam
out
loope
test
mov
sub
or
xor
loop
test
pop
movsl
mov
cwtl
mov
insl
inc
mov
mov
mov
inc
or
outsl
hlt
sub
sub
leave
cmp
cmp
and
dec
mov
repz
xor
daa
sarb
fsubrl
and
sbb
rcrl
lods
loopne
imul
xchg
icebp
sbb
jb
mov
pop
mov
add
push
scas
mov
fstl
cli
lods
ja
jnp
ffree
lahf
mov
ljmp
pop
dec
and
adcb
jno
mov
push
in
popf
imul
out
cmp
out
sbb
lods
and
mov
add
adc
adc
fldcw
sub
hlt
or
and
sub
inc
lret
loop
mov
bound
mov
mov
cld
cwtl
stos
jecxz
mov
sub
sub
push
shrl
aas
test
lea
fiadds
push
imul
jge
mov
repnz
lcall
add
push
or
cmp
inc
jmp
dec
push
xor
aas
inc
pop
push
daa
notb
dec
xchg
in
scas
fsubl
mulb
sti
enter
addl
xlat
daa
pop
sbb
imul
cltd
imul
pop
das
mov
jns
mov
fisttpl
fsubrl
pusha
int3
jbe
nop
aam
xchg
movsb
xchg
fsubrs
setno
jp,pt
sub
test
adcl
sbb
repnz
pop
inc
pop
jp
mov
fiaddl
sbb
ja
loopne
cltd
or
out
mov
mov
mov
pop
andl
fidivs
cwtl
cmp
jmp
xor
fdivrl
rcl
js
mov
mov
sub
into
or
sub
push
mov
mov
sub
xchg
mov
cld
xchg
rorb
xchg
add
jne
in
lds
and
test
shl
shl
and
jns
arpl
cmp
shll
lods
insb
mov
jl
push
shrl
mov
fwait
pop
dec
nop
mov
mov
or
test
pop
pop
adc
push
pop
adc
bnd
mov
jp
rcr
in
xor
je
xor
sub
and
in
pop
inc
repnz
or
xorl
cmp
xor
orb
sub
pop
inc
cmp
sub
cwtl
xor
sub
sub
lock
jmp
insb
dec
in
jmp
lcall
xchg
test
add
fadds
adc
inc
sbb
enter
shll
mov
repz
popf
mov
mov
popf
inc
and
and
mov
cmpb
mov
cmpsl
sub
ljmp
test
jo
xchg
jmp
push
sahf
rorb
sbb
xor
popa
sub
fnsave
dec
push
add
lret
jns
fld1
pop
repz
sbb
clc
inc
xchg
cmp
aas
or
loope
cmpsb
sbb
addl
das
mov
mov
jo
fcmovne
cmp
cwtl
pop
mov
xchg
mov
sbb
sbb
mov
xchg
dec
aaa
add
mull
sub
mov
mov
pop
push
sahf
cmp
movsb
sbb
sub
rcrb
sbb
and
pop
mov
vpslld
pop
out
pushf
out
loopne
gs
jo
stos
or
mov
das
and
aaa
sbb
cmp
test
mov
imul
sbbb
loop
lahf
xchg
push
push
inc
imul
stc
inc
add
aam
dec
pop
mov
enter
push
sub
pop
jbe
pushf
xchg
mov
dec
inc
aaa
loope
cwtl
mov
nop
xchg
or
stc
jno
cmc
test
jecxz
and
and
push
pop
nop
jns
aam
ljmp
scas
xor
shrb
in
inc
in
jg
pop
rcrl
aam
jno
call
inc
jp
push
or
insb
pop
clc
xor
xchg
pop
mov
xchg
pop
push
add
jg
mov
jno
or
insb
mov
test
pop
popf
pop
pushf
in
add
rorl
mov
insb
and
xor
push
movsl
xchg
shlb
or
addr16
scas
sarl
nop
dec
lcall
scas
call
xlat
sub
es
sbb
enter
or
ficoml
pop
lea
shll
pusha
mov
inc
dec
or
repz
or
cld
sbbb
mov
xchg
mov
mov
lods
push
test
in
mov
inc
sub
js
fwait
cmp
aam
fwait
mov
adc
push
popa
pop
sbb
addr16
into
mov
scas
mov
sub
jo
xor
sbb
sbb
xchg
and
test
add
xchg
jmp
dec
push
cmpsl
xchg
xlat
mov
pop
jbe
aad
add
in
adc
or
fcompl
mov
push
mov
inc
mov
sub
jle
lds
gs
fwait
xor
repz
imul
mov
icebp
add
mov
imul
xchg
sub
in
insb
pop
roll
xchg
pop
sbb
cmpl
addr16
rolb
add
fstpl
xchg
cmp
loope
cmp
std
push
jno
fstpt
sbb
add
push
or
add
jge
adc
adc
jb
pop
fmull
mov
in
fiadds
mov
pop
add
nopl
testl
dec
ja
icebp
mov
or
cmp
cwtl
cli
dec
and
adc
ficoml
lods
mov
mov
pop
imull
jecxz
and
add
jo
jns
cwtl
sub
sbb
loop
cltd
in
test
sbb
pcmpeqw
add
xchg
push
addr16
inc
mov
loop
add
inc
ja
mov
imul
ja
cmp
imul
dec
xchg
movsl
roll
aaa
fmuls
xchg
mov
movb
inc
or
xchg
push
shlb
lods
mov
add
sti
and
inc
adc
in
add
jb
call
xchg
mov
hlt
mov
test
sub
inc
loop
mov
adc
mov
pop
cld
add
or
push
mov
lods
test
rclb
ret
mov
mov
inc
repz
int3
arpl
push
xchg
vmwrite
daa
pop
jns
dec
les
add
fwait
lods
dec
add
fprem1
pop
test
add
test
lods
and
inc
sbb
push
rorb
int
mov
sub
out
push
negb
sti
push
xlat
mov
into
sarb
sub
jmp
into
pop
arpl
push
cmp
cmc
inc
dec
test
shll
bound
outsb
pop
xchg
in
jb
aas
repnz
cmp
ja
inc
iret
dec
cmp
mov
or
push
mov
cli
push
pusha
jge
push
out
stos
jle
cmp
fistpl
xchg
sti
repnz
out
push
jbe
xchg
imul
lcall
cmp
xor
addr16
aam
and
or
std
and
lahf
hlt
lods
mov
cmp
jmp
mov
mov
dec
adc
adc
xchg
cmp
cmpsl
cmp
mov
cli
jl
pop
mov
xchg
notb
pop
ret
sub
xchg
ljmp
push
dec
push
sub
out
sbb
jp
dec
xor
and
jae
and
out
mov
xchg
jo
push
sbb
mov
pop
fidivl
imul
xchg
pop
inc
xchg
cli
jae
rorb
adc
dec
sbbb
push
cmp
out
xchg
in
jge
xor
cmp
lock
xchg
movsb
imul
xor
shll
cwtl
adc
sbb
or
test
add
jbe
stos
jbe
push
jnp
xor
incb
repz
mov
out
test
xchg
cmpsb
push
into
cmp
inc
or
mov
xchg
push
lea
mov
mov
rcrb
mov
adc
sbb
call
shrb
push
or
decb
aas
scas
jmp
popl
clc
out
int
jecxz
stos
mov
or
sub
add
rol
mov
scas
sub
mov
xor
ds
mov
mov
sbb
adc
loop
fsts
scas
fsubrs
push
jecxz
fsts
call
in
fsubp
push
mov
xchg
inc
fnstsw
pop
push
sbb
xchg
insl
loopne
orb
mov
addb
xchg
fwait
sbb
push
adc
dec
push
aam
pop
shlb
pop
mov
mov
or
clc
mov
in
arpl
dec
add
roll
frstor
pop
mov
mov
push
lea
dec
shrb
jmp
sbb
bound
fidivs
psllw
or
push
shr
sti
mov
mov
cmp
shrb
pop
xor
in
andl
sbb
mov
clc
in
xor
ss
xor
dec
stos
jp
rorb
movsl
mov
js
sub
mov
push
fucomp
adc
test
jge
aad
pop
lcall
leave
and
push
or
outsb
mov
push
pop
jmp
and
int3
fidivl
pop
das
inc
add
sbb
imul
dec
jb
les
out
xchg
nop
pop
shrl
pop
push
pop
cwtl
mov
jbe
in
and
in
cld
mov
mov
fnstenv
mov
orb
addps
mov
inc
add
sub
insl
cmp
popa
shl
xchg
add
fwait
xchg
push
clc
icebp
push
test
sbb
mov
leave
stc
jl
pop
sti
push
addr16
xor
cli
push
and
mov
cmpb
mov
pushf
pop
sub
or
jg
mov
bound
mov
das
test
pop
mov
data16
pop
mov
scas
xlat
and
enter
sub
insb
sub
mov
sahf
push
jge
and
pop
adc
or
ror
xchg
sub
jae
add
pop
fs
lahf
bound
movsl
push
ljmp
outsb
add
xchg
or
xchg
jmp
cld
ja
jno
ds
adc
jmp
xchg
pushf
push
pusha
test
or
adc
nop
adc
lret
cmpsb
sbb
bound
rcl
inc
pop
rcl
in
pop
cmp
xor
adc
les
loop
cld
pop
add
lcall
shr
xor
jle
out
imul
xchg
or
js
jp
mov
out
dec
rorl
jne
jne
lea
fnsave
es
inc
xchg
mov
pop
adc
cwtl
sbb
repz
cld
mov
pop
adc
mov
add
and
sbb
mov
mov
cmp
pop
mov
or
inc
pop
imul
sahf
and
add
je
repnz
add
aaa
inc
subl
and
adc
or
data16
inc
leave
out
nop
cwtl
dec
testl
xchg
sbb
ds
aad
out
aad
push
cmpsb
stc
insl
adc
shr
or
dec
imul
mov
push
jae
mov
mov
dec
cmpsb
test
ljmp
movsl
frndint
add
xchg
nop
mov
mov
sti
scas
add
adc
add
sbbb
mov
fstp
call
jecxz
cltd
imul
and
sub
cmp
push
xor
mov
dec
pusha
push
or
nop
imul
out
or
aam
aaa
mov
push
scas
sub
mov
dec
stc
pop
out
jmp
or
push
movsl
mov
test
subl
lea
mov
aam
fdivp
clc
push
stos
or
movsb
inc
add
sar
lcallw
push
xchg
mov
ljmp
push
push
add
add
sarl
cmpsl
xor
cmp
test
inc
iret
outsb
mov
popa
ja
cs
sbb
dec
je
pop
jle
fbstp
or
mov
jge
adcb
ret
dec
and
loop
les
mov
xchg
sub
push
mov
into
push
out
inc
std
cltd
sti
decl
notb
push
imul
jmp
stos
roll
jge
jle
adc
push
fcompl
push
sarl
mov
in
loopne
and
mov
sub
jl
in
and
jns
add
pop
jb
push
adc
fcomps
pop
sahf
mov
gs
sahf
popf
inc
jo
shl
cli
jae
insb
mov
mov
push
and
les
sti
lock
fwait
jecxz
cltd
mov
jo
mov
sbb
rdmsr
sahf
mov
or
xchg
mov
sbb
stc
mov
inc
lret
lret
icebp
and
out
lahf
mov
test
loopne
les
enter
sbb
js
xor
movsl
mov
js
scas
sbbl
dec
xor
call
and
mov
push
loopne
sub
nop
arpl
mov
adc
dec
imull
lods
cmp
aaa
mov
mov
ljmp
mov
xchg
jg
jp
es
mov
jne
enter
cltd
mov
call
stos
out
mov
out
pushf
rorb
adc
nop
rclb
inc
into
cwtl
dec
scas
and
inc
aad
mov
loope
cmpsb
push
nop
dec
xchg
rclb
sbb
jnp
stos
dec
mov
sti
cmpsl
push
jmp
xchg
jg
int3
push
jmp
and
es
mov
mov
fimull
push
sub
mov
loop
insb
icebp
mov
push
sub
cmp
ja
add
sbb
fcompl
fcmovnbe
add
fwait
sub
push
pop
cli
cwtl
into
hlt
push
and
test
fwait
add
inc
and
scas
pop
cld
mov
xor
or
dec
sbb
sti
push
lahf
loop
pop
pop
adc
cld
pop
ret
rclb
xor
xor
lret
xor
pop
dec
mov
js
arpl
xchg
cmp
sbb
xor
xor
push
add
fidivrl
aaa
pop
fs
and
xchg
adc
dec
pop
lods
mov
adc
inc
ret
jmp
andb
push
cmpsl
in
add
jp
cmp
pop
inc
mov
mov
hlt
lock
test
iret
sub
aad
adc
mov
dec
or
xor
loope
push
or
insb
shll
mov
aad
sbb
shl
inc
lods
in
fwait
test
lret
js
xchg
outsl
rcrb
mov
fwait
jp
mov
mov
dec
mov
dec
or
mov
aas
pusha
or
nop
xchg
jge
dec
push
shrb
inc
or
pop
fildl
jns
adc
cmc
and
lods
in
or
xchg
ficomps
mov
mov
icebp
lret
fucomi
dec
adc
cld
push
xor
dec
inc
push
jno
jne
pop
add
pop
jae
push
sarb
xchg
add
pop
mov
shlb
leave
aam
cwtl
sti
addr16
xor
jecxz
xchg
ja
push
sahf
orb
adc
into
scas
push
aas
xor
aad
dec
repnz
fmull
push
inc
push
ljmp
mov
push
std
mov
add
je
add
jp
in
call
dec
jl
jmp
cmp
xchg
push
sub
aaa
add
xor
outsb
jnp
mov
dec
cmp
dec
jg
mov
stos
in
cmp
add
mov
cmp
mov
js
in
dec
dec
jbe
std
mov
sbb
jb
xchg
lods
cmpsl
sub
or
sub
jno
jmp
leave
addl
ss
cld
nop
lock
push
lock
ja
icebp
cld
lds
jno
mov
mulb
gs
sub
lds
mov
push
cmp
lretw
aad
fisttpl
adc
xor
xor
ret
dec
mov
icebp
jae
movsb
jp
and
popa
pusha
add
push
shll
jecxz
push
and
xchg
cmpsb
stc
jle
in
cli
pop
in
mov
xlat
jbe
daa
lea
fxch
addr16
jo
pop
adc
or
movsl
nop
sbb
dec
sbb
sub
aam
dec
scas
xlat
adc
and
pop
sahf
test
sub
adc
out
stos
outsb
jge
sub
fsubr
fstpl
int3
and
mov
dec
mov
mov
pop
lds
mov
popa
mov
sbb
pusha
aad
and
xchg
fs
lret
lock
sbb
mov
repz
bound
mov
cli
pop
dec
je
test
add
dec
sbb
sub
add
mov
pop
mov
push
insb
fdivrl
add
jb
xchg
fs
push
jno
push
popa
cwtl
mov
sbb
cmpsl
cli
lods
jmp
cmp
xor
sbb
push
daa
adc
or
subl
xchg
or
mov
dec
lahf
or
sbb
std
cmpsl
or
dec
add
dec
pop
sub
fsub
iret
out
push
fs
push
jp
jecxz
cs
shll
cmp
inc
adc
mov
sbb
or
addr16
or
stos
pushf
jecxz
fsts
aaa
jae
pop
addl
xor
pop
out
pusha
clc
sbb
xor
mov
lea
xchg
addr16
rcll
adc
push
mov
push
in
pop
and
movsb
xor
mov
xor
dec
inc
ja
or
ret
adc
jecxz
loope
and
aaa
inc
fs
stos
pop
push
mov
and
or
jmp
push
xchg
mov
movsb
sbb
add
mov
pop
jae
pop
adc
mov
out
hlt
pop
ds
mov
ss
inc
pop
stos
pop
push
push
mov
xchg
pusha
sti
int
mov
lods
push
xchg
movsl
and
add
mov
lret
aam
testl
inc
push
ret
push
flds
sbb
adc
push
cs
int3
push
pop
sti
or
pop
clc
iret
or
mov
int3
jecxz
aaa
mov
mov
inc
test
mov
xchg
out
lret
xorl
sbb
repz
pop
add
out
pop
mov
in
pushf
push
and
dec
lods
ljmp
xchg
and
imul
mov
xor
push
pop
cld
enter
aad
push
and
fsub
stos
sti
jmp
sub
leave
addr16
int
push
lods
mov
xchg
push
mov
clc
subl
jp
mov
mov
jb
cmpsl
mulb
scas
int3
pushf
dec
leave
or
es
es
fisttpll
sbb
jbe
jb
movsl
cld
dec
imulb
pop
mov
jne
insb
nop
xchg
push
cmpl
xor
and
xchg
lock
inc
mov
cld
xchg
mov
lcall
and
mov
pop
test
inc
jg
or
dec
stos
pop
fcomps
lret
nop
jb
fbld
mov
xor
cmpsb
pop
pop
test
push
jg
sub
pop
push
sub
jbe
dec
int3
and
lock
mulb
pop
pop
call
or
sbb
add
pusha
ret
stc
fidivrl
dec
sahf
xor
sahf
xor
lahf
out
cmpb
sub
jle
js
sub
lcall
push
fimuls
or
jge
insl
rcrb
cmp
inc
jmp
mov
push
push
cmc
sub
fbld
mov
adc
filds
xorl
orl
fisubs
data16
cmp
out
and
test
insl
fsubr
addr16
mov
sub
adc
es
les
pop
cld
mov
and
shll
add
pusha
mov
inc
add
inc
loop
mov
mov
mov
sbb
shlb
jecxz
add
idivl
add
hlt
cmp
cmc
ficomps
dec
or
jl
test
cmp
push
xor
mov
ret
fidivrl
mov
bound
mov
pushf
loope
repz
insb
mov
ret
xchg
mov
dec
and
push
lods
rcrl
push
ret
sbb
xlat
cs
movsb
mov
or
and
add
cmp
fcoml
nop
inc
adc
or
and
out
dec
or
xor
cmpsl
jns
push
adc
xchg
imul
push
xor
addl
enter
mov
shrl
and
mov
jg
or
in
xchg
sbb
jmp
add
in
lcall
jo
sub
pop
cs
das
push
xchg
in
mov
adc
pop
pop
jbe
jbe
or
mov
jg
rorb
push
mov
and
enter
mov
sti
hlt
add
mov
iret
shl
enter
jmp
xor
mov
nop
xor
push
or
pop
gs
lahf
pop
mov
fstpl
insb
stos
sub
add
enter
xchg
arpl
sub
xchg
inc
fwait
out
rolb
jb
xor
and
inc
cmc
test
pop
mov
je
popf
rclb
mov
pop
push
pusha
rcrb
mov
inc
in
aas
filds
mov
out
les
and
adc
ret
inc
icebp
out
mov
cmp
shr
add
jbe
loop
rcrl
add
mov
add
faddl
scas
movsl
lea
pop
mov
push
add
mov
inc
and
iret
cld
ds
mov
xor
or
dec
jnp
and
push
call
into
ret
ret
in
and
dec
or
jle
fsts
adc
cmc
pop
or
mov
test
push
faddl
shl
jne
std
push
or
cmp
aas
or
fdivrl
adc
lods
inc
mov
imul
vpaddb
pop
pop
push
push
lret
lods
imul
cwtl
int
stc
sub
push
xor
pop
lret
push
adc
je
lahf
mov
adc
push
xchg
clc
jmp
in
clc
mov
xchg
mov
pusha
push
shrb
xchg
sahf
in
mov
mov
mov
mov
pusha
dec
scas
dec
cwtl
pop
fxch
xchg
aad
xor
push
inc
outsl
jbe
mov
xor
in
pop
pop
xchg
jnp
iret
cmc
int3
dec
mov
pop
sahf
icebp
mov
mov
push
push
icebp
ret
push
jp
xchg
mov
pop
aad
cld
sahf
imulb
add
adc
mov
xor
mov
ficoms
fmuls
cld
shrb
mov
push
mov
je
sub
jg
mov
shr
pop
mov
xchg
popa
out
dec
mov
pop
push
adc
in
jle
outsb
jno
cmp
insl
aas
mov
lods
adc
mov
out
lcall
and
pop
mov
mov
mov
xchg
inc
jbe
jmp
lock
or
xchg
mov
push
movsl
dec
nop
push
sbb
xor
insb
scas
xchg
repnz
adc
fwait
mov
mov
shr
and
sub
jg
jns
pushf
cmp
leave
jns
cmp
mov
lods
insl
and
mov
inc
popf
pop
add
push
mov
or
les
inc
cmp
lds
mov
sarl
xchg
lock
sbb
fwait
dec
cld
hlt
daa
clc
popa
cmp
xor
sbb
addr16
xor
dec
or
mov
or
fwait
sub
mov
push
and
sbb
sub
paddd
push
jbe
icebp
xorb
adc
mov
pop
xor
or
sbb
fiadds
out
mov
push
nop
push
mov
pop
popa
cmp
stc
and
faddl
vextracti64x2
lock
out
mov
jg
mov
xchg
add
orb
lea
inc
fwait
ja
inc
mov
mov
adc
xchg
rorb
lret
imul
lock
pop
scas
imul
fimuls
jge
push
xchg
jb
iret
repnz
cmp
push
xchg
scas
xor
jl
sbb
gs
dec
inc
mov
scas
lcall
lods
dec
push
sub
lds
ret
jns
push
jp
daa
js
popf
int3
push
roll
pop
jb
push
pop
fbld
push
and
xor
sbbb
arpl
add
ret
inc
imul
fmull
mov
sti
cmc
pop
adc
push
orl
adc
sbb
call
outsl
call
push
nop
mov
sarb
adc
mov
pop
add
lahf
dec
invd
fscale
mov
dec
loope
sbb
and
jne
fwait
imul
pop
jns
lret
sbb
repz
mov
es
es
notl
pusha
dec
stc
or
adc
mov
jp
pop
in
jne
jmp
inc
test
jne
jl
pusha
xor
jl
nop
call
ret
test
sbb
mov
and
out
xchg
mov
stc
in
mov
ret
push
out
pop
or
mov
dec
popf
pushf
pop
xor
push
mov
cld
lcall
cmp
cmc
ret
dec
es
adc
jecxz
ds
orb
xorb
adc
push
in
xor
jo
mov
push
shrl
stc
cmp
loope
adc
out
dec
or
xor
add
out
mov
inc
lods
mov
repnz
outsl
in
adc
add
xchg
xor
mov
pmulhw
mov
pop
pop
and
push
mov
add
sahf
sbb
cmp
scas
mov
out
add
or
lahf
sarl
stos
shlb
pop
setp
cmp
insb
pop
in
pop
inc
push
icebp
lahf
push
daa
dec
mov
dec
fmuls
add
jb,pt
xchg
faddl
scas
mov
popa
xor
repnz
stc
cmp
mov
dec
js
sbb
and
mov
push
lds
jg
jns
push
scas
out
lods
pop
inc
repz
fistpl
mov
mov
sub
mov
sub
pop
popa
in
scas
cmp
cmp
enter
popa
outsb
stc
adc
or
cmp
inc
push
mov
ss
pop
xor
gs
jge
test
ljmp
adc
mov
push
dec
mov
add
pop
mov
out
mov
insl
enter
push
bound
cmpsb
jb
rorl
mov
sub
stos
es
sbb
pop
mov
add
mov
outsb
pop
int3
xor
scas
ljmp
mov
out
add
adc
pop
pop
repnz
and
push
orb
mov
cli
jp
pushf
outsb
cmp
push
in
dec
inc
xor
mov
out
daa
pop
jne
ss
jbe
test
loop
in
aas
sub
cmc
mov
pop
loop
mov
or
xlat
sbb
je
jne
cmp
sub
adc
movsl
stos
stos
fstpl
ss
pop
rcrb
in
addr16
pop
call
or
out
inc
movsb
add
rcrl
mov
xchg
cmp
jecxz
mov
stos
test
outsl
daa
and
xor
fdivs
lret
xor
arpl
dec
jle
cld
seta
ljmp
jl
in
xor
add
push
xchg
inc
insb
out
sub
fldt
and
and
or
push
or
je
out
sbb
cmp
insb
int3
jmp
mov
jp
pop
or
ss
imul
xchg
aam
pop
addr16
cltd
scas
jp
or
xchg
or
push
in
fsts
lret
mov
ja
add
mov
cmc
movsl
filds
cmp
xchg
push
mov
push
sub
sub
inc
xorl
jp
mov
push
cmp
loope
adc
adc
xchg
popa
mov
out
enter
das
mov
mov
es
adc
sti
out
lcall
pusha
aam
add
adc
push
jp
stos
pop
fistps
jle
jns
and
jno
fimuls
js
shlb
push
loop
jo
xor
inc
adc
mov
ficompl
jp
mov
lds
gs
call
mov
adc
mov
jo
ror
jge
mov
xchg
or
dec
sub
push
je
outsl
pop
mov
fs
call
mov
sub
sbb
or
xchg
inc
sub
and
aaa
fcmovne
lea
cli
sahf
and
cmp
sbbb
das
add
vpshaq
mov
insb
dec
pop
cwtl
push
pop
xchg
jle
and
mov
sub
addr16
mov
sbb
rorl
js
inc
imul
push
sub
fimull
add
xchg
dec
inc
mov
pop
ret
imull
mov
cltd
jae
bound
pop
and
push
xlat
inc
adc
inc
pop
add
in
pop
adc
adcl
mov
mov
imul
fs
cmp
cli
xchg
adc
in
sbb
sub
and
jne
jle
mov
insl
clc
jmp
imul
push
fldenv
out
mov
insb
or
jnp
cwtl
jmp
xchg
cmpsl
rep
subl
jnp
repnz
inc
sub
xchg
loopne
dec
fdivp
mov
pop
inc
aaa
mov
sub
mov
adc
push
jecxz
pop
xchg
or
aad
fistpl
pop
cmpl
shrb
aad
lock
cmpsl
daa
mulb
jecxz
add
mov
inc
jo
mov
hlt
push
mov
fistl
xchg
cmp
mov
pop
ret
sub
mov
inc
fcmovb
addr16
fsts
mov
lahf
lret
inc
popa
ss
insb
mov
mov
mov
or
jl
xor
pop
std
popf
cmp
rolb
das
sbb
jae
sbb
xchg
pop
mov
arpl
aad
adc
cmp
sbb
lea
jns
jl
mov
fldt
add
dec
imul
push
fcmovnbe
pop
or
inc
fildl
sbbl
xchg
lock
adc
pop
out
fadd
jp
dec
jg
lods
xor
insl
test
cs
sub
mov
add
adc
or
fsubrs
cmc
pop
mov
adc
icebp
ja
or
mov
push
mov
in
pop
and
mul
test
int3
push
pop
scas
push
lea
je
sbb
imul
adc
lahf
jbe
inc
incl
add
int
movsl
enter
pop
adc
sub
add
jmp
mov
jne
mov
int
pop
pop
xor
in
repnz
js
pusha
mov
jno
xor
mov
jne
imul
push
jg
fstl
in
dec
mov
in
data16
pop
imull
dec
jns
or
adc
inc
add
xchg
test
or
loop
sahf
jg
adcb
fistpll
jne
test
pop
add
mov
sub
jne
imul
dec
insb
cmp
cld
mov
clc
mov
push
xchg
faddp
outsl
jmp
lret
pusha
inc
rcll
bnd
ret
insb
dec
out
mov
xor
inc
and
mov
jbe
loopne
sbb
xor
ljmp
cmpb
mov
aam
xor
mov
iret
ss
daa
mov
xchg
rclb
sbb
jmp
je
scas
imul
inc
and
int3
mov
leave
lds
push
xor
jl
xchg
mov
pop
icebp
in
shr
sub
das
mov
mov
and
pop
xchg
jecxz
jnp
aad
push
lret
sub
shlb
dec
aas
inc
mov
sti
push
jmp
gs
test
je
cmp
mov
in
and
mov
outsb
adcl
mov
enter
stc
inc
mov
je
xchg
push
or
cmp
mov
std
out
mov
mov
or
int
or
add
or
xor
stc
mov
and
mov
mov
into
jno
ja
mov
xchg
cmp
fnstsw
aas
lds
mov
rcrl
scas
mov
or
ss
bound
or
mov
and
pop
ja
xchg
pop
xor
neg
std
out
add
push
out
mov
cli
push
rorb
push
sbb
xor
mov
out
cmp
scas
push
add
push
outsb
jns
lods
loope
sbb
cltd
fldl
xor
out
enter
in
imul
add
cmp
lock
xor
fdivs
xorb
pop
les
cltd
push
mov
xor
call
es
in
xchg
push
mov
push
sbb
lock
lds
xor
icebp
mul
inc
push
aas
das
leave
int
aad
mov
jno
pop
cmp
xchg
mov
mov
stos
push
pop
ja
dec
jnp
imul
sbb
scas
add
or
gs
push
lea
push
cltd
dec
fwait
jl
iret
pop
loopne
jo
rclb
xchg
and
xorb
jne
jl
add
icebp
aas
es
inc
repz
out
movsb
clc
cmpsl
loopne
or
mull
push
lds
testb
pop
cmp
adcl
gs
test
inc
icebp
or
daa
shrl
nop
jb
lret
addr16
pusha
cmp
jae
jno
dec
in
jl
jl
movsb
jo
push
mov
outsl
aam
mov
and
inc
ret
inc
cvtps2pi
sbbb
pop
add
mov
xor
inc
sub
cli
adc
pop
rorb
add
add
lahf
push
jecxz
js
add
aas
mov
scas
mov
adc
push
into
pop
into
sbb
jl
iret
sbb
ds
xor
push
loopne
fnstenv
subl
in
mov
scas
int3
mov
xchg
data16
push
and
mov
sub
cltd
loop
push
lcall
insl
dec
adc
push
arpl
mov
hlt
pop
xchg
mov
jl
aam
mov
xor
decl
push
shll
gs
jae
sbb
add
or
popa
int3
cwtl
push
sbb
pop
or
and
xchg
outsl
fldl
loope
ss
cmp
jg
cmpsb
je
and
xor
pusha
lods
add
sub
arpl
sbb
jmp
clc
mov
in
sub
push
pop
cmp
cmpsb
gs
mov
icebp
aas
xchg
adc
or
cmc
mov
aam
mov
ljmp
cmp
shlb
or
push
jg
testb
std
adc
push
jns
push
shrb
outsb
in
or
add
jno
sarl
and
mov
push
push
imul
xor
push
pop
add
sbb
aas
out
cmp
inc
mov
int
push
popf
jne
push
xor
mov
jns,pt
mov
cmp
lret
cmc
fisttpl
jl
mov
nop
push
mov
cs
mov
repz
mov
call
inc
jns
dec
fs
add
xchg
fdivrl
call
rorl
repnz
dec
sub
inc
pop
lea
cld
rcll
pop
cmp
lods
cmp
in
push
push
popa
push
fcoms
lcall
jne
push
clc
adc
movsl
mov
inc
addl
mov
popf
mov
pop
sbb
dec
jle
fstps
pop
ja
mov
scas
mov
in
shl
out
enter
adc
or
push
test
clc
pop
sarb
testl
gs
ss
pop
fisubl
inc
cs
test
shl
pop
jge
mov
xchg
fwait
popa
cmp
sub
push
lret
jb
sbb
cmp
mov
repz
and
sbb
pop
stos
ljmp
lock
ja
inc
adc
jge
inc
ss
lods
add
loop
cmp
imul
and
scas
loop
pop
push
shrb
in
fists
ret
scas
jecxz
cmp
or
inc
mov
xor
js
insl
hlt
sbbb
das
rclb
sbbb
nop
cmp
dec
fs
ret
ds
int
jg
outsl
push
push
imul
and
push
lcall
lcall
push
aaa
out
lods
out
jbe
loop
or
stos
xor
sbb
in
push
cltd
sbb
jns
xchg
divb
mov
cmpsl
inc
gs
mov
adc
pushf
mov
xor
mov
imulb
bound
arpl
out
hlt
fwait
testb
cmc
adc
inc
clc
sub
ret
xor
data16
pop
inc
fnsetpm(287
jns
test
in
lcall
sub
sub
insb
insl
mov
and
ss
mov
cltd
adc
loop
call
cmp
pop
imul
jbe
ficomps
out
dec
push
mov
ret
pusha
imul
ficoml
in
outsl
sbb
mov
cltd
enter
popf
scas
in
and
shlb
mov
pop
lret
lods
test
mov
cwtl
or
sub
pop
cli
jge
es
push
add
enter
add
push
dec
and
or
or
pop
repz
mov
fucom
ss
jg
testl
cli
jmp
sbb
xchg
fiadds
mov
push
rclb
jl
mov
inc
lahf
push
xchg
cmpsb
shrl
rcr
cld
testl
inc
push
imul
xchg
stos
mov
in
test
movsb
pop
xor
dec
aaa
jle
jmp
negb
cli
cmc
sub
cs
out
iret
xchg
adc
sbb
in
or
adc
add
sbb
clc
testl
cmp
addb
dec
xor
xor
adc
bound
and
push
push
xor
call
pop
jmp
jae
movsl
aaa
shl
aas
cltd
add
and
xchg
std
les
rcll
mov
pop
gs
pushf
xor
push
or
test
mov
sub
or
stc
or
sbb
jg
ss
mov
mov
push
xor
sbb
enter
pop
pop
or
push
ss
mov
sbb
les
fnstsw
push
or
insl
das
or
push
sbb
sub
adc
addr16
xchg
sub
in
push
sbb
idiv
adc
jg
stos
xor
aam
inc
lods
mov
std
sbb
repz
inc
xchg
jb
mov
mov
in
fsub
xorb
ja
outsl
add
inc
sub
dec
pushw
xor
push
jl
stos
aas
add
addr16
push
pop
movsl
push
ret
test
mov
jl
popf
pop
pop
jno
aaa
mov
lea
dec
xor
mov
imul
addr16
pusha
push
cld
loope
and
std
jb
inc
dec
das
and
out
loope
sub
aam
sbb
dec
mov
and
and
xchg
std
xchg
or
mov
addr16
mov
int
imul
mov
test
ret
adc
jecxz
lds
cmc
iret
inc
mov
dec
in
test
lods
clc
in
sbb
mov
dec
pop
add
mov
mov
das
add
aaa
ficomps
sub
stos
int3
sub
pushf
outsb
std
mov
cmpb
adc
and
movsl
loop
or
and
aad
in
xchg
aam
mov
shll
loop
mov
and
or
xchg
ds
mov
mov
mov
mov
ljmp
fstp
jl
sub
dec
jo
ss
testb
not
pop
sbb
jecxz
lret
cld
loop
outsl
add
clc
pop
lcall
sti
fists
sub
insl
ret
xchg
push
repz
jmp
xor
and
movsl
pop
inc
mov
mov
test
xchg
push
xchg
jns
or
inc
mov
mov
idivl
and
jle
sbb
xchg
popa
adc
out
pop
jnp
push
sbb
aaa
inc
fs
and
cltd
das
bound
aad
push
repz
cmp
insb
dec
jb
stc
and
sbb
clc
fnstcw
inc
or
mov
inc
cmp
mov
jge
sub
mov
iret
adc
shl
mov
jp
xor
mov
xchg
mov
outsl
and
jg
adc
or
push
cmp
dec
icebp
jae
xchg
pop
xchg
inc
inc
ja
cmp
int3
test
pushf
loopne,pt
or
sahf
insb
nop
or
fs
scas
shr
lret
andb
push
in
and
popf
lea
add
arpl
popf
lahf
cld
dec
xlat
pop
inc
mov
jbe
sbb
and
test
lret
inc
push
lds
cwtl
xor
xchg
jl
adc
fisttpll
push
add
xor
nop
out
jb
mov
shl
mov
add
pushf
cmp
jne
mov
pop
fidivrs
stc
lods
and
out
mov
or
pop
lods
pop
bound
popf
ss
cmpsl
cmpb
dec
lahf
lock
fsubrs
mov
ljmp
mov
test
insb
fldlg2
cwtl
mov
aaa
jo
adc
jg
inc
xchg
jo
adc
ss
in
xor
mov
xor
cmp
sarl
ja
push
ljmp
inc
test
add
lock
xchg
xchg
sbb
jmp
ret
dec
add
test
popa
lea
fistpll
in
push
xchg
or
inc
push
imul
repnz
inc
jl
stos
mov
jl
rcll
mov
loope
stc
mov
stc
insb
in
cmp
pop
fnstsw
sbb
push
xchg
mov
lret
xlat
shl
and
add
sub
bound
pop
lret
dec
sbb
mov
sti
sbb
in
push
push
or
popf
mov
jmp
test
and
fpatan
push
ret
jne
loop
out
in
mov
int
movsb
dec
out
out
cvtpi2ps
adc
add
mov
mov
or
pushl
fdivs
xchg
push
dec
aad
leavew
xlat
stos
add
mov
xor
xchg
inc
inc
clc
cmpsb
out
insb
int
and
fidivrs
test
in
outsl
fsubrl
pushf
mov
int3
lods
xchg
mov
dec
mov
push
cwtl
xor
dec
sbb
push
and
aad
xchg
fsts
ret
mov
mov
aam
subl
sub
repz
or
inc
dec
out
in
mov
loope
inc
scas
mov
lcall
dec
loopne
dec
scas
iret
push
test
push
pop
xlat
inc
mov
sub
xor
insb
inc
dec
xor
xor
imul
and
imull
movsb
mov
xchg
movsl
fs
mov
mov
adc
out
pop
inc
cli
mov
call
or
cli
jp
movsb
out
fdivl
push
outsl
jnp
roll
mov
xchg
ja
bswap
jbe
cltd
int
push
cmp
movsl
adc
shrb
imul
lds
and
mov
inc
sbb
sub
jge
arpl
daa
imul
sahf
adc
cwtl
xor
lret
fldt
xchg
push
xchg
xlat
arpl
sti
mov
mov
and
xchg
cmpsb
dec
sahf
inc
mull
lcall
cltd
fidivrs
out
mov
lahf
cmp
scas
in
jne
sub
jb
arpl
add
aas
loop
xchg
lahf
sahf
int
dec
mov
mov
int
pop
imul
mov
popa
cmpsl
in
test
arpl
movsb
imul
shr
jg
jne
inc
add
jmp
push
push
push
xor
daa
inc
sub
cmp
sbb
in
push
xor
in
and
jge
jge
push
cmc
mov
push
mov
inc
lods
stc
mov
fwait
iret
dec
call
add
xchg
or
arpl
ljmp
stc
jb
adc
jb
lret
outsb
sub
xchg
or
int3
or
cmpsl
push
movsb
push
aaa
shll
dec
cmp
repz
mov
xor
ret
adcb
jne
mov
lock
xlat
mov
pushf
aas
clc
mov
aas
test
loope
subb
xor
pop
inc
movsb
shll
shl
mov
fwait
jmp
push
dec
cltd
push
aam
or
cld
into
imul
repz
push
shufps
rcrl
sti
pop
mov
nop
sbb
out
inc
inc
addb
pop
imul
rcl
jno
pop
mov
mov
stos
adc
xor
adc
jge
jno
fstps
mov
data16
mov
stos
test
repnz
or
mov
fnstcw
and
mov
outsb
loope
scas
flds
inc
ss
xchg
dec
push
pop
mov
data16
enter
sar
add
jns
sub
sbb
mov
lds
iret
fwait
pop
idiv
mov
setle
push
ds
sbb
scas
mov
pop
cmpsl
push
mov
or
dec
add
fnstenv
in
mov
sbb
push
cmc
dec
sub
sbb
jp
test
cld
cs
or
dec
outsl
repz
scas
cmp
and
push
test
xlat
scas
and
lock
ret
add
xchg
sub
mov
fistpll
dec
int3
pop
jl
popf
add
repnz
push
sub
sbb
xchg
leave
rcl
pop
xor
xor
and
pushf
mov
mov
daa
push
adc
js
jno
lret
mov
or
dec
ja
or
aad
insb
setb
popf
lcall
and
lret
call
push
sar
call
or
dec
adc
dec
std
mov
pop
addr16
loopne
loopne
xor
mov
mov
sbb
and
or
cmp
dec
jl
daa
dec
imulb
xchg
sub
jne
pop
mov
mov
cltd
lea
icebp
inc
mov
in
lock
icebp
dec
jl
lods
pushf
sarb
mov
pcmpgtw
cmc
dec
imul
lret
mov
lds
fwait
mov
inc
dec
outsl
mov
ret
xchg
sub
lods
or
in
shll
inc
insl
adc
sbb
adc
fwait
or
sub
lcall
notb
loop
ljmp
add
adc
std
into
hlt
sub
cs
test
adcl
sbb
push
mov
adc
dec
sbbb
ret
or
jo
add
sbb
aaa
into
and
mov
jmp
pushf
pop
in
jo
mov
adc
pop
jg
jmp
stos
cld
fs
mov
int
pop
aaa
call
sarl
adc
mov
ja
jb
je
xlat
mov
jns
or
or
aaa
dec
div
addr16
pop
in
leave
lahf
outsl
int
fwait
movsb
xor
cwtl
pop
sub
out
dec
ja
adc
mov
and
cld
inc
fistl
dec
into
dec
or
mov
into
push
push
cli
hlt
mov
mov
iret
add
jl
test
push
dec
mov
pop
mov
mov
data16
test
loopne
sbbl
cmp
out
loope
xchg
dec
and
jb
in
mov
nop
and
mov
jmp
fildll
loop
clc
aam
inc
rclb
xor
lcall
pop
pop
push
xor
mov
xor
sbb
bound
loope
jmp
sahf
jg
sub
jg
mov
mov
sbb
mov
out
loopne
push
mov
hlt
scas
mov
mov
sub
or
dec
std
xor
ret
inc
loop
addl
jmp
out
mov
xchg
push
sbb
cli
in
sub
cmp
popf
sbb
push
mov
testb
lods
and
shll
mov
rcrl
mov
push
push
ja
adc
std
mov
mov
mov
mov
call
stos
dec
jae
dec
pushf
sub
inc
add
js
insb
sub
xchg
jne
mov
cmp
mov
xchg
fadds
das
outsb
mov
inc
test
lock
adc
dec
movsl
pop
sbb
movsl
shrl
add
cmp
jg
jbe
out
jg
jno
mov
cmp
push
rorb
mov
add
push
popf
sub
jne
fstpl
daa
jbe
xor
mov
mov
dec
sbb
imul
rcrl
mov
out
stc
dec
mov
cld
aam
frstor
stos
xchg
mov
test
pop
xchg
fbstp
bound
mov
jne
mov
in
test
inc
sbb
mov
jbe
cli
adc
mov
add
jbe
imul
jp
jbe
sbb
inc
movl
mov
dec
inc
cli
xchg
lahf
nop
mov
sub
xchg
cmp
ret
cmpsl
xchg
std
jbe
sarb
stos
bound
into
add
mov
jno
xchg
push
cmp
scas
in
xchg
cld
sbb
dec
push
cli
jne
push
test
push
xor
jecxz
aad
jle
pop
jns
gs
mov
xlat
xchg
or
xchg
jge
incb
lahf
dec
xchg
stos
cmc
cld
mov
xor
aaa
add
xchg
ss
in
outsl
out
aam
pop
xchg
into
fldcw
cli
pop
out
jp
mov
stos
popa
sub
or
pop
lret
shll
mov
jb
push
test
push
jg
or
gs
test
rcrl
popl
in
adc
sbb
mov
cmp
pop
pop
sub
movsb
shll
dec
mov
call
xchg
ss
inc
mov
mov
pushl
adc
das
add
cltd
mov
lods
sbb
push
int
or
jbe
mov
jle
cmp
add
lret
and
nop
in
mov
fdivrs
fcomps
pop
fdiv
fsubs
cli
mov
pop
rolb
push
imul
sbbl
ja
push
cmp
adc
pop
mov
clc
mov
lret
adc
loopne
mov
aad
mov
mov
lods
xchg
xor
xchg
int3
stc
es
cli
mov
xchg
addr16
shl
dec
pop
stos
inc
imul
push
enter
scas
xor
pop
mov
add
cmpl
lret
push
xchg
adc
fsub
aaa
dec
aad
adc
cmp
lcall
xor
jp
imull
ja
mov
jmp
clc
xchg
push
dec
popa
repnz
push
sbb
push
dec
in
add
xchg
int
daa
cmpsl
jl
nop
xchg
pop
inc
enter
inc
lock
leave
sbb
cmp
add
xor
xchg
adc
xor
jbe
cmpsb
inc
inc
pushf
mov
jno
xor
push
popa
mov
mov
mov
xlat
mov
out
push
mov
outsb
aad
inc
shll
sbb
xor
popf
sub
and
mov
push
sar
add
stos
xchg
cmp
push
adc
dec
mov
sahf
push
roll
addr16
loope
pop
popa
or
andb
inc
lret
jecxz
stc
push
mov
push
jmp
outsl
fistpl
or
push
sub
insl
clc
stos
add
dec
cmp
test
mov
fsubr
sub
jg
pop
jg
dec
fdivrs
pushf
stc
sub
aad
mov
stc
or
xchg
rcrl
sbbb
ljmp
and
xchg
mov
fmul
popa
hlt
flds
shlb
test
sbb
inc
jb
int
push
repz
pushf
ss
mov
out
test
xchg
add
and
leave
repz
cld
adc
jns
sti
xchg
dec
decb
mov
test
lods
sarb
scas
cld
mov
and
fsubrl
jmp
jb
stc
imul
push
mov
push
sahf
xor
jbe
push
movsl
outsl
jl
test
inc
pop
test
adc
sub
xor
iret
pop
cli
xor
int
xlat
rorb
cmc
clc
jle
jae
arpl
in
sbb
adc
sub
loopne
or
inc
adcl
push
popf
mov
jns
in
pop
faddp
dec
pusha
loop
adc
push
out
jbe
sub
pop
xchg
call
sti
jbe
mov
nop
lret
out
sbb
arpl
lahf
push
js
imul
dec
dec
lods
movsl
inc
lock
adc
mov
pushf
xchg
adc
jl
test
jbe
je
push
cmp
push
mov
adc
and
inc
rolb
lahf
and
js
es
daa
ljmp
xor
das
jecxz
sub
xor
add
imul
pop
jg
lds
ret
cmp
push
or
insb
lods
mov
cwtl
lret
outsl
mov
dec
mov
cmp
sub
jo
mov
cmp
ret
cmc
fisttpll
mov
inc
mov
mov
fldcw
dec
in
jp
arpl
push
imul
xchg
sbb
adc
loope
rcrb
fnstenv
lret
add
push
jb
push
or
mov
push
das
sub
scas
test
movsb
cmp
movsl
mov
aaa
mov
ljmp
lock
jae
dec
cmp
imul
cwtl
ficompl
dec
xor
lds
jge
push
call
add
xchg
mov
push
and
jge
add
sub
leave
push
lods
lcall
pop
mov
shrl
dec
or
pmaxub
loop
lret
dec
dec
jb
cwtl
imul
pop
dec
sbb
sub
scas
test
idivl
mov
jb
inc
pop
sbb
loop
push
cmp
push
xor
sub
or
xor
inc
fisttpll
jne
cmp
pop
cmpl
rorb
test
and
out
or
sub
xchg
andl
ret
jb
ret
jns,pn
sbb
fs
xchg
push
jbe
mov
stos
insl
addr16
ret
lret
pushf
data16
xchg
out
pop
and
pop
fsubs
sub
cmp
sti
loope,pn
clc
add
or
pushl
mov
je
and
out
aas
mov
in
xchg
lods
and
fisttpll
fs
std
jno
scas
push
mov
xchg
sbb
or
xlat
repnz
cmp
or
push
xchg
add
inc
cmp
cmpsl
sub
adc
insl
test
mov
xchg
or
movsb
addr16
inc
pop
lods
xchg
inc
insl
jb
in
iret
xchg
pop
int3
sbb
aaa
sub
mov
shl
movsb
sahf
daa
push
mov
cs
jl
add
inc
ljmp
repz
jbe
mov
cmc
in
das
ss
mov
ja
pushf
shlb
aas
inc
mov
pop
fyl2xp1
bound
mov
sbb
mov
mov
xor
mov
cli
xor
sub
pop
fs
out
inc
lods
dec
and
shrb
andl
hlt
pop
dec
cld
cmpsb
push
sbb
and
sti
cmp
mov
fucomip
rcll
test
mov
repz
sub
movsl
lds
jl
cmpsb
je
dec
imul
xchg
sub
data16
xchg
cltd
or
sub
jge
push
jno
iret
repz
sub
out
inc
mov
and
rorl
and
shl
testl
adc
daa
pushl
jl
lock
cmpsb
push
in
mov
jmp
cmp
pushl
adc
pop
sub
jo
and
pop
call
icebp
mov
lcall
pop
enter
nop
inc
mov
or
iret
sub
test
aad
addl
add
orb
cmpsl
mov
xchg
mov
sbb
dec
decl
push
or
addb
and
xor
cmc
sbb
mov
sti
cs
mov
dec
push
xchg
test
xchg
loope
or
pop
push
mov
lods
push
out
or
loope
pop
fiaddl
push
xchg
jle
inc
leave
xchg
xchg
cmpl
push
push
fwait
fs
icebp
repz
mov
jne
add
and
sahf
fsubrl
xor
es
test
mov
mov
or
dec
jnp
jb
scas
dec
mov
add
nop
mov
lea
arpl
sbb
or
mov
std
xchg
pop
stos
sahf
pushf
cmp
loope
jmp
mov
repz
dec
mov
pop
sbb
and
aam
and
adcb
jecxz
pop
jnp
mov
sbb
xor
dec
dec
imul
xchg
popa
xor
sti
pop
jp
adc
dec
xor
jo
dec
sub
lahf
das
out
cmp
pop
scas
cld
sarb
frstor
xchg
stos
packssdw
rorl
dec
stos
xchg
es
sub
adc
out
cmp
aad
divl
cs
mov
pop
jbe
dec
imul
mov
pop
sbb
outsb
mov
ret
jmp
fs
mov
push
mov
xchg
lea
add
push
imul
int3
jb
add
into
int
add
xorb
jb
xchg
aam
add
cwtl
sti
and
dec
jns
mov
dec
sub
aas
fildll
in
cmpl
sbb
or
sub
jl
mov
sahf
sahf
jo
test
pusha
aam
nop
jne
sbb
mov
les
div
icebp
stos
adcl
dec
push
pop
insl
outsb
js
in
dec
or
frstor
cmp
jb
leave
cmpsl
leave
lcall
push
push
mov
mov
xlat
int3
out
sbb
pop
cmpsb
cmpsl
fnstcw
dec
sbb
inc
shl
pop
xor
icebp
pushf
xchg
leave
mov
enter
sbb
jle
sbb
scas
mov
test
push
lret
fmulp
mov
mov
xor
fisubs
or
into
push
jnp
mov
stos
or
mov
shl
push
sbb
jbe
hlt
movsb
repnz
xor
push
loope
sahf
leave
js
xor
fyl2xp1
pop
jl
jno
adc
pop
cmpsl
rorb
jnp
daa
cmp
add
mov
inc
mov
fbld
lret
jbe
nop
pop
jae
xlat
xor
mov
cmp
jg
xchg
idiv
lahf
mov
andb
inc
xor
add
sub
lret
stos
jae
sub
and
scas
dec
mov
ret
aas
add
jbe
andb
jl
das
add
in
jae
test
add
leave
add
xor
push
and
mov
push
dec
or
into
xor
mov
xchg
loop
jno
push
adc
dec
in
inc
jmp
sarl
les
push
xchg
xcrypt-cbc
cmpsl
push
pop
push
and
mov
in
loop
push
mov
test
mov
adc
add
dec
or
add
or
out
adc
lcall
repnz
int
divb
negl
insl
loope
sti
sub
mulb
cmpsl
ret
cmp
mov
pop
repnz
jne
repz
sbb
insb
jge
inc
push
push
in
mov
pop
stc
xchg
xchg
lcall
adc
mov
mov
shrb
mov
loope
push
cmp
xor
ja
add
mov
fimuls
je
jae
mov
cld
add
pop
cmp
test
add
push
mov
shlb
jnp
bound
fisttps
out
dec
sub
cltd
dec
jae
cmpsb
xlat
fadds
add
loop
je
insl
aas
sub
or
xor
arpl
dec
rol
lcall
iret
repz
inc
mov
xchg
sahf
sub
mov
movsl
mov
pusha
dec
pop
ljmp
cmp
or
mov
sub
data16
loope
and
and
mov
or
inc
adc
fistpll
sahf
xlat
jb
jo
sbb
out
dec
or
cmp
add
frstor
mov
nop
idivb
lret
lret
pop
adc
addr16
xor
test
pushf
daa
pop
lock
sbb
xor
inc
push
and
decl
das
jge
insb
in
std
es
xchg
arpl
enter
fwait
cmp
daa
inc
xor
jnp
adc
movsl
xchg
adc
and
add
das
rcll
arpl
push
movsl
and
fxtract
push
jge
call
shll
pop
shl
sbb
jecxz
fwait
adc
fwait
mov
pop
mov
stc
fisubl
lcall
mov
xor
out
ficompl
outsl
and
ss
mov
cld
push
sub
cmp
xchg
addr16
fildl
push
ret
shlb
or
pop
scas
cs
orps
pop
out
pop
mov
out
sub
addr16
addr16
push
mov
movsb
adc
ret
push
repz
js
cmc
fisubrs
adc
xor
or
mov
push
in
mov
mov
push
add
or
hlt
subb
test
mov
fnstsw
outsb
sbbl
fisttpll
dec
lds
jbe
mov
mov
xchg
add
mov
xor
mov
mov
cmpb
mov
pop
decl
stc
add
mov
ss
push
outsb
aam
jbe
into
mov
adcl
out
lret
push
and
fldenv
mov
xor
sbb
into
pop
test
ja
jne
jecxz
gs
push
and
out
mov
cltd
inc
icebp
adc
insb
cli
dec
jl
scas
popf
out
imul
outsb
push
or
test
shlb
mov
push
xchg
in
pop
out
test
push
or
xchg
das
xchg
xor
push
lods
cmp
xor
adc
add
xlat
rorl
addr16
cmp
add
sar
ss
inc
jl
test
lcall
mov
notl
cmp
push
vpshufd
inc
mul
push
sub
pop
mov
pop
cmp
or
add
sbb
sbb
push
push
mov
repz
repz
sbb
mov
stos
push
mov
add
sub
ret
pusha
ss
icebp
das
cmp
outsl
fnstcw
push
inc
add
in
push
jle
bound
xor
fisubl
std
lret
std
xlat
push
cwtl
jno
fstps
mov
jno
test
movb
jmp
pop
outsb
jecxz
iret
rcrb
pop
pop
data16
int
push
mov
or
pop
lds
mov
fcomi
repz
xchg
and
cmp
cmp
lock
outsl
jl
shl
or
xor
add
xchg
or
pop
sbb
in
inc
or
push
jmp
mov
sti
cli
outsl
jbe
test
imul
push
test
js
les
or
fsubl
sbb
insl
jbe,pn
or
pop
mov
xchg
mov
ja
sbb
xor
fiadds
fwait
xchg
inc
push
cmp
push
aas
sbb
enter
stc
subl
sti
adcb
sub
pop
mov
mov
pushfw
xchg
call
stc
push
out
jge
rol
cmp
in
inc
push
adc
cs
leave
andb
and
mov
js
outsl
lret
pop
pop
and
lret
sti
dec
mov
jne
es
xchg
mov
movl
orb
cmc
jle
cld
cmp
and
aam
dec
dec
outsl
ret
test
dec
filds
lcall
dec
push
loop
mov
test
lods
sub
dec
mov
jns
xchg
bound
call
pop
lahf
lahf
das
mov
enter
jmp
cli
and
sub
dec
ret
cmpsl
mov
pop
and
push
dec
adc
xor
lds
or
insl
mov
cltd
insl
add
ljmp
sar
jge
adc
insb
pop
iret
mov
xchg
and
sub
jl
loop
push
outsl
xlat
xchg
push
sarl
xor
lret
push
pop
std
in
sti
rolb
movsb
jg
sub
andb
inc
shll
sub
std
xchg
mov
sub
test
push
mov
jbe
jle
xchg
and
xlat
jb
pop
enter
cmpsb
cmp
ljmp
mov
cld
pop
jl
hlt
mov
mov
jno
in
loop
scas
fimull
popf
jno
jecxz
mov
xchg
cwtl
pop
sbb
push
loope
ds
imul
dec
mov
in
insl
dec
cltd
xor
push
and
xchg
sbb
push
ljmp
inc
in
std
add
lcall
aad
scas
ljmp
push
push
or
mov
push
sarb
decl
clc
xchg
gs
out
daa
push
add
sub
es
dec
lea
mov
xlat
hlt
xchg
loopne
loope
xchg
cmp
cmp
push
in
dec
and
cmp
out
imul
imul
pop
inc
test
mov
dec
enter
mov
push
jne
lea
push
filds
push
xor
mov
je
ret
cmp
mov
xlat
xor
and
mov
jmp
adc
mov
into
and
stos
movsb
pusha
push
add
jp
stos
cltd
mov
movb
mov
add
nop
bound
sub
decl
iret
sub
adc
and
int3
sub
inc
aam
dec
jns
push
cwtl
mov
xchg
mov
cmp
aam
fldl
adc
pop
popf
pop
icebp
mov
mov
dec
stc
or
loop
faddl
data16
cmpsb
xchg
add
xor
loop
pop
jne
mov
das
roll
sub
or
dec
push
mov
fistpll
je
ret
or
int
adc
int3
mov
jo
xor
ja
sti
dec
imul
lds
push
aas
cmpsl
les
xchg
ja
push
mov
xor
popa
pop
mov
std
sub
iret
mov
std
adc
into
lods
daa
mov
mov
adc
sub
pop
xor
mov
mov
rcll
lcall
push
outsl
stos
mov
sub
cwtl
shll
mov
push
xor
add
mov
insl
pushf
push
aad
clc
or
ljmp
ret
iret
xchg
push
sahf
scas
movsb
push
ja
dec
inc
dec
jl
scas
les
fcomi
cmp
outsl
jb
mov
outsl
fistpl
pop
jle
sbb
mov
out
repnz
mov
fidivl
xor
fmuls
push
adc
mov
jmp
outsl
xchg
stos
add
imul
ja
and
in
adc
leave
mov
pop
sub
push
mov
cltd
fmulp
call
mov
iret
shlb
xchg
pop
pop
push
decb
ljmp
rcll
pusha
repnz
rcl
lods
add
ja
shll
ret
loop
cmpsl
add
enter
or
ret
dec
repz
aad
leave
mov
lret
mov
cwtl
dec
ljmp
adc
cmp
and
stos
das
lea
mov
js
outsb
sbb
test
mov
jae
inc
stos
js
or
popf
dec
and
sub
inc
fldl
mov
xor
insl
or
push
sti
xor
dec
and
push
lds
xor
mov
and
adc
testb
and
jb
stos
test
push
addr16
fwait
test
mov
popa
xorb
push
movsl
xchg
lret
lcall
jle
jb
adc
pop
gs
out
cwtl
xchg
mov
pop
arpl
imul
add
cwtl
add
add
adc
sahf
pop
dec
lds
or
setne
mov
fimull
dec
xchg
into
test
das
xor
xchg
loope
push
mov
in
dec
lahf
sub
inc
mov
lds
mov
inc
and
into
cld
ror
mov
xchg
and
addr16
mov
jo
subl
fwait
mov
or
sarl
push
sbb
dec
idivl
das
jae
inc
jne
mov
xchg
dec
push
in
sub
outsl
popa
or
pop
add
jmp
jl
lods
cli
and
pop
les
outsl
fstps
pop
adc
and
sahf
and
rcrl
cmp
mov
in
sbb
add
lea
and
int3
cmp
cmpsl
js
push
sub
das
xchg
negl
lock
ficompl
cmp
mov
xchg
lds
scas
or
sbb
cmpsb
pop
add
fstpt
outsl
sbbl
xchg
dec
rolb
out
repz
add
inc
jb
pop
imul
sbb
ds
mov
test
or
sub
decb
jno
jl
cwtl
xor
and
cwtl
push
sub
and
ffreep
mov
add
or
pop
movntq
out
pop
push
rclb
in
scas
or
mov
push
adc
mov
rcrb
negb
cmpsb
push
imul
arpl
add
lcall
daa
scas
out
lahf
loopne
fstps
ss
mov
jno
pop
movsb
jl
test
cmpsb
add
push
push
fstpl
xlat
mov
xor
jae
or
jecxz
jecxz
out
jmp
cli
icebp
clc
sub
or
mov
aad
xchg
sub
jnp
mov
xchg
pop
pop
lahf
inc
mov
inc
out
sub
cmp
pop
lea
adc
mov
ret
mov
push
cld
stc
or
mov
dec
out
pop
inc
je
sub
arpl
jmp
mov
sbb
push
xor
and
push
adc
add
and
imul
std
iret
mov
cmp
dec
repnz
jg
loop
inc
or
out
out
repnz
in
xchg
int3
das
mov
lret
sub
dec
jae
outsb
mov
insl
sahf
jbe
mov
fs
cwtl
mov
jbe
cltd
in
cmp
ja
movsl
out
out
add
hlt
ss
mov
mov
inc
clc
stc
call
jecxz
jle
xor
mov
push
clc
dec
aaa
je
xor
dec
aad
lret
jg
mov
lret
push
flds
sbb
js
shrb
test
sub
popa
push
outsl
mov
adc
mov
jno
pop
mov
push
mov
and
pop
lret
cmovl
addr16
outsb
adcl
into
pop
ljmp
mov
sub
insl
das
testb
iret
push
pop
lock
cs
sub
negl
inc
pop
popf
addb
jecxz
lret
dec
mov
adc
fldcw
pop
das
aaa
rcl
lcall
cwtl
sti
mov
dec
loop
dec
ja
insb
pop
es
adc
adc
mov
in
mov
push
pushf
shll
add
nop
jl
sub
divb
xchg
and
sbb
mov
aas
orb
and
sbb
xchg
mov
mov
push
mov
and
enter
xor
insb
stos
mov
shl
sbb
adc
pop
push
push
shlb
rolb
out
and
mov
add
xor
insb
test
lcall
mov
mov
inc
cmp
dec
adc
ret
mul
cmc
xchg
or
dec
test
repz
or
or
test
jg
and
pushf
cli
fs
push
cmpb
add
push
pop
mov
dec
cmpsl
daa
xchg
adc
hlt
push
addl
out
sub
or
enter
bound
xor
test
cmc
adc
je
and
aam
push
or
jle
inc
xchg
dec
or
mov
jno
addb
leave
dec
jo
in
or
pop
cmp
jo
scas
xchg
out
call
daa
mov
and
rol
sub
pop
mov
cmpsb
enter
sbb
pop
jl
dec
gs
jecxz
jnp
repz
insl
das
xchg
xor
sbb
sti
jae
loope
add
movsl
lret
push
add
push
sbb
adc
icebp
dec
in
jle
push
mov
sti
adc
ret
xchg
mov
aad
pop
inc
pop
aam
mov
lods
es
lret
fwait
xor
lea
gs
mov
dec
xor
fisttps
cmp
sar
mov
aam
aad
in
push
and
aad
rcrl
lods
adc
ds
sbb
mov
jns
lahf
fwait
jge
test
mov
stos
cmpsb
mov
or
mov
push
inc
push
hlt
mov
mov
push
lcall
fsubp
lahf
jmp
mov
xchg
add
hlt
rorl
popf
jo
mov
sub
leave
in
aad
sub
xor
push
nop
std
test
jmp
out
ret
add
jne
xchg
mov
outsl
mov
or
jo
push
mov
mov
jbe
lods
mov
lret
call
cmp
in
mov
out
jae
psubd
lods
mov
iret
stc
lcall
push
dec
push
adc
jecxz
cmp
push
fimull
test
in
ds
fcompl
xchg
push
inc
pusha
loopne
inc
and
lret
lret
fwait
or
lods
jp
adc
mov
ss
lods
xlat
js
inc
xor
push
push
dec
jnp
sbb
push
xchg
adc
fidivrl
nop
cld
sahf
sarb
or
push
xlat
icebp
cmp
test
aaa
maskmovq
nop
leave
out
and
outsl
jno
lods
mov
xor
bound
enter
xlat
divb
fldl2e
lods
jb
jae
daa
sub
sub
lods
mov
pop
into
std
xchg
ds
and
mov
mov
or
cltd
outsl
fsubrp
dec
mov
in
outsb
push
fildl
fbstp
test
gs
mov
mov
inc
xchg
nop
outsb
jae
mov
rcr
sbb
sub
sbb
inc
dec
pop
ds
pop
lret
add
pop
stc
xchg
lret
addr16
out
daa
icebp
pusha
mov
repnz
sub
pop
cmc
push
stos
xchg
push
add
mov
lea
xchg
add
out
cmc
push
cs
out
xchg
adc
stc
push
sbb
xchg
push
sbb
pop
mov
push
inc
out
into
jp
push
sub
stos
xchg
push
xchg
push
adc
cmp
sbb
cs
cmpsb
sbb
loop
mov
mov
mov
ret
hlt
inc
xor
int
daa
fincstp
pop
jmp
gs
xor
mov
add
in
in
mov
mov
cmp
lcall
ds
dec
add
jae
inc
leave
add
cmpsl
mov
cmp
dec
xor
push
jne
insb
gs
stos
dec
movsl
jns
hlt
mov
enter
push
mov
jle
xchg
data16
add
adc
mov
pusha
jge
jle
mov
cmp
imul
in
jae
sbb
sbb
fldcw
test
add
addl
fists
scas
mov
in
sbb
dec
addl
jle
ljmp
jb
jbe
cmp
and
enter
mov
dec
xlat
sub
in
jmp
iret
out
js
push
fldt
push
repz
es
fstpt
cmp
mov
aad
mov
adc
repz
repz
push
popa
lods
cmp
sti
faddl
pop
push
loop
or
xor
sub
sbb
jge
dec
loop
lock
jg
mov
stc
outsl
ljmp
fmull
sbb
jmp
pop
loopne
bsf
push
leave
scas
fldl
push
sub
dec
popa
out
add
imul
repnz
lods
out
fldt
inc
mov
jmp
into
mov
inc
xchg
pop
sbb
cmp
adc
jae
xchg
jl
test
movb
jle
add
fs
sub
cmp
inc
pop
imulb
pop
fnsave
sbb
push
push
nop
mov
dec
cmpsb
inc
test
mov
jge
out
scas
data16
or
push
lcall
inc
fwait
inc
aaa
inc
adc
mov
xchg
or
inc
test
add
cmpsb
pushf
mov
cmp
roll
shrl
xchg
mov
rcll
inc
dec
add
ret
outsl
pop
cmc
xor
sub
pop
mov
lock
scas
mov
js
sbb
sub
jge
cmpsl
sarl
cmp
push
and
iret
in
test
pop
xor
mov
jg
inc
dec
bound
xchg
je
xchg
in
loope
in
xchg
mov
jle
hlt
leave
jle
mov
sbb
or
js
adc
ja
jp
movsl
scas
enter
bound
cmc
popa
scas
adc
in
mov
test
sbbb
mov
dec
adc
mov
ljmp
mov
ret
adc
xor
lods
pop
and
inc
movsl
testl
nop
in
call
je
sub
push
out
iret
sbb
insl
pop
outsl
sahf
adc
pop
dec
push
rcll
and
rclb
sub
push
leave
cmpsl
xchg
cltd
iret
push
push
fdivp
dec
int
lock
scas
xchg
add
add
adc
fwait
or
jg
in
loope
ljmp
jmp
mov
arpl
movsl
jno
adc
iret
lock
pop
dec
xor
mov
fisubl
fwait
movsl
repnz
sub
leave
pop
push
rolb
pop
mov
push
les
ss
pop
mov
mov
jmp
add
in
fcmove
fcomps
outsl
ret
jmp
or
xchg
add
psrad
pusha
clc
dec
sub
imul
popa
xchg
dec
cld
pop
arpl
sarl
sbb
test
adc
inc
jmp
jmp
call
lds
adc
test
or
fdivrs
xchg
in
mov
mov
cmp
imul
add
and
out
mov
push
call
lea
sbb
testl
popf
rorl
cs
sub
add
mov
in
popa
jmp
pop
ss
pop
xchg
not
mov
adc
lock
insl
lcall
outsb
cmp
sti
aam
inc
push
lret
cmpsl
and
cmp
lret
fcompp
push
mov
arpl
lret
pop
test
leave
nop
pushl
sbb
mov
aad
loopne
sbb
in
lahf
and
push
pop
lock
mov
dec
jmp
les
cmp
lret
mov
es
xchg
arpl
inc
push
scas
pop
loope
pop
call
and
jl
push
mov
ja
scas
xor
les
jge
xchg
xchg
test
xchg
xchg
xor
out
cwtl
scas
ds
sub
add
dec
mov
mov
cmpsb
pop
shll
lods
dec
xchg
mov
repnz
leave
imul
fsubrl
mov
sbb
iret
inc
call
lds
icebp
cmc
or
cmp
ljmp
lods
push
out
cs
es
xor
iret
fisubs
add
sbbl
mov
int3
popa
pop
movsl
jne
cld
jne
jbe
in
nop
pop
add
pop
js
xorb
cmp
jp
sub
scas
inc
pushf
rorl
nop
cs
adc
pusha
jnp
ret
sbb
out
push
fsubl
stos
push
cld
mov
call
or
sbb
xchg
movsb
sbb
pop
push
xchg
cltd
sbb
push
and
std
jnp
pop
or
int3
rolb
or
cs
jmp
insb
mov
scas
add
jecxz
out
js
lret
out
mov
sub
scas
sub
movsb
dec
ret
pop
or
into
ljmp
sbb
pushf
mov
cltd
push
bound
call
cmp
mov
ss
mov
dec
jmp
out
mov
loope
mov
fisttpll
std
push
jo
pop
dec
loop
mov
std
or
add
sbbl
repnz
sbb
pop
xchg
pop
push
pushw
jae
iret
hlt
cli
xor
jno
in
sub
sub
adc
divl
fisubl
fstp
push
popf
jae
inc
jl
jno
scas
pushf
loopne
sub
dec
iret
stc
lds
dec
leave
jle
sti
xchg
daa
sub
in
push
jb
jnp
push
andl
dec
jo
mov
fisttps
add
gs
lods
es
dec
push
pop
iret
xor
gs
hlt
xchg
inc
inc
iret
negb
adc
fildll
ret
push
stc
cmp
movb
add
pushf
lods
imul
pop
mov
lea
jge
jmp
adc
test
in
lods
stc
cmp
cltd
test
neg
std
or
or
sub
es
cltd
ret
ret
sbb
clc
add
pop
push
mov
cmpsl
fwait
push
lods
sbb
test
outsb
cwtl
fisttps
mov
mov
and
stos
and
adc
pop
inc
push
les
ret
movsb
or
scas
cli
push
push
xor
cmpsb
mov
add
mov
std
lcall
repz
lds
inc
xorb
adc
jl
test
shll
pop
sbb
sbb
mov
add
ss
enter
aad
sbb
fimuls
in
je
push
out
push
pushf
cmp
adc
xchg
cmp
lds
pushf
cli
jecxz
xor
rclb
cs
xor
sarb
cmpsb
inc
sti
jg
fdivs
cmp
cmpsb
xorb
aas
adc
push
jns
sti
in
subb
xor
mov
inc
shrl
or
pusha
lcall
inc
dec
fidivrs
pop
sti
outsl
sub
fwait
dec
and
sbb
pop
inc
pop
jg
subl
aam
imul
push
inc
loope
test
clc
jmp
call
pop
push
and
rcrb
dec
dec
idiv
arpl
inc
sub
mov
adc
cli
inc
lods
call
mov
sub
mov
jb
fwait
mov
aad
cltd
xchg
cmp
jmp
loope,pt
scas
int
in
sarb
ds
inc
inc
push
mov
xor
cltd
dec
test
and
mov
jge
mov
and
data16
shll
out
cwtl
orb
sahf
adc
dec
jp
inc
xor
dec
xor
jo
call
xchg
loopne
or
dec
jp
loop
push
push
add
sarl
push
xor
pop
mov
leave
lret
imul
xchg
cmp
mov
fsubl
push
mov
in
movaps
test
rcl
orb
xor
xchg
notl
aad
xchg
lcall
mov
loopne
and
mov
negl
adc
adc
stc
jmp
adc
mov
sti
cld
mov
dec
xchg
xchg
aad
xor
mov
jmp
pop
pop
cmp
mov
jge
fs
out
inc
cmp
xlat
xchg
mov
add
sbb
mov
lahf
pop
or
outsl
add
dec
fcompl
sub
jne
dec
cltd
lea
bound
or
daa
shll
cwtl
jns
mov
outsb
nop
clc
bound
mov
xor
or
push
mov
icebp
add
mov
repnz
add
cltd
rcr
sub
dec
and
ljmp
faddl
push
adc
xchg
sub
xor
popa
cmovbe
push
push
gs
sub
xchg
mov
add
into
ret
inc
sti
push
push
testb
lods
push
out
gs
push
in
fisttpll
scas
xor
sahf
cli
xchg
mov
lock
pop
mov
jecxz
aaa
mov
pop
ds
jae
insl
addl
adc
sbb
dec
adc
aam
and
xor
jecxz
insb
xor
mov
lret
add
jle
sub
push
insb
daa
xchg
jbe
cwtl
sbb
rorb
xchg
fcompl
imul
stos
push
stos
mov
fs
mov
adc
mov
out
aad
jbe
jb
jo
pop
cld
nop
xlat
dec
aaa
mov
inc
mov
push
sbb
std
insb
xor
push
mov
xor
stos
and
or
test
dec
fldl
cmp
idivb
xor
xchg
in
ja
popa
loop
xor
push
in
push
xchg
dec
insb
divb
push
sub
push
inc
shlb
push
ret
lret
mov
push
mov
enter
or
sbb
jmp
inc
insb
popa
push
fptan
pop
and
mov
cmp
fs
scas
dec
adc
push
push
cmpb
mov
sub
and
fwait
adc
sar
movsb
mov
fs
movsl
ss
dec
jo
add
or
sti
adc
cmp
add
nop
push
bound
jle
clc
cltd
in
mov
pop
sti
stos
popl
push
rol
pop
mov
add
outsl
xchg
stc
dec
fldenv
dec
insl
nop
je
ja
fisubrs
movsl
inc
cwtl
fisubrs
fsub
sahf
adc
stos
mov
pop
add
dec
imul
inc
or
pushf
test
lcall
clc
fwait
ret
loope
mov
cmp
sub
pushf
ja
sub
adc
popa
adc
stos
and
add
sti
mov
jbe
xchg
das
in
and
sahf
push
sub
pusha
mov
pushaw
mull
fnsave
mov
push
cmp
xchg
outsl
or
xor
jp
cmp
mov
loope
xchg
inc
and
lret
mov
or
xchg
or
fadd
mov
cmpsb
orl
sub
stc
insb
nop
js
mov
inc
in
out
cmc
mov
shrb
xchg
out
push
test
int3
dec
stc
cwtl
push
dec
pop
ds
mov
rclb
sbb
movsb
inc
jnp
push
out
popf
xchg
add
jo
adc
std
call
xor
mov
cmp
pop
mov
xchg
cli
dec
or
dec
xlat
fs
xchg
sub
pop
add
dec
repz
push
cwtl
hlt
cmp
out
daa
add
fcoms
stc
inc
jle
pop
nop
aad
mov
aam
cmp
mov
test
and
test
jb
inc
shr
fstp
jno
lods
pusha
insl
les
mov
jae
and
xor
notb
mov
test
mov
mov
dec
xchg
mov
outsl
sbb
rcrl
push
in
pop
sbb
inc
cmp
mov
xor
jb
xchg
jo
mov
jns
movsl
mov
das
icebp
jg
xchg
enter
in
sub
adc
lock
std
clc
int3
jmpw
bound
fidivs
add
push
fsubp
lret
lret
cs
jecxz
mulb
das
fwait
in
and
insb
shll
xor
or
pop
into
arpl
ret
ror
cmp
in
sbb
ljmp
data16
lret
in
adc
into
fwait
sbbb
imul
rorl
xor
mov
lds
popf
jl
pop
inc
jmp
mov
or
pop
test
mov
mul
cmp
lcall
sahf
jne
jmp
mov
maskmovq
mull
cmpsb
sbb
mov
push
mov
fisubrl
popl
mov
xchg
or
gs
call
jg
mov
mov
fucomi
pop
stos
mov
sub
mov
or
sub
cmpsb
shrb
cmpsl
int
or
hlt
shrl
lahf
cmpsb
xlat
in
push
add
shll
shlb
jno
scas
xchg
sub
cmp
jns
popa
cmp
mov
mov
fs
iret
xor
jge
mov
xchg
inc
lret
fsubs
call
scas
mov
mov
push
cld
mov
xchg
out
loop
pop
mov
xchg
ja
adc
mov
xchg
imul
inc
daa
or
sub
stos
outsb
addl
inc
fucom
mov
repz
push
jae
and
dec
jle
sub
scas
push
dec
repnz
add
push
test
push
sti
sbb
js
lock
repz
stos
leave
or
call
lock
dec
sar
cs
and
cwtl
daa
cs
push
adcb
mov
ficomps
sub
lock
push
inc
ds
leave
inc
or
insl
sub
aad
insb
jbe
push
jo
flds
sub
mov
test
sti
sbb
pop
fisttpl
stos
test
mov
test
xor
scas
xchg
add
fdivrs
iret
int
in
fwait
xchg
aam
sarb
test
mov
and
inc
lods
xchg
mov
repz
add
mov
addr16
dec
mov
push
xor
mov
sub
lods
mov
lock
test
movsl
ret
or
mov
xchg
pop
jecxz
jl
and
loopne
lds
hlt
hlt
iret
mov
mov
iret
push
ret
sub
fistpl
fiaddl
dec
fdiv
xor
lcall
adc
in
xor
dec
push
icebp
out
cs
loopne
cltd
lret
gs
ljmp
loop
test
movsb
cmp
sub
js
sbbl
scas
iret
hlt
gs
jmp
rol
inc
cmovne
pop
xchg
mov
xor
scas
mov
mov
xchg
or
fwait
dec
popa
shl
popa
xchg
dec
lds
and
int3
pop
jne
or
movsb
ja
data16
fcomps
adc
cli
push
jecxz
ss
lahf
push
push
sub
loopne
iret
pop
adc
outsb
adc
scas
pop
sbb
mov
mov
adc
pushf
push
pushl
mov
aaa
or
fwait
mov
js
hlt
xor
in
arpl
add
popa
jnp
sub
mov
cmpsb
mov
les
jmp
js
fwait
cli
cld
or
cmp
mov
int
in
lcall
test
std
push
popa
adc
mov
xor
icebp
mov
pop
xor
xorl
mov
cmp
enter
push
flds
xor
dec
test
sbb
mov
in
push
int3
or
cmc
test
xor
sbb
pop
xchg
mov
sbb
xchg
jle
lcall
mov
and
pop
mov
jno
orl
icebp
xor
push
jns
mov
mov
scas
mov
jo
out
ljmp
mov
mov
jg
loopne
push
or
repnz
jne
sub
repnz
mov
sbb
fistps
dec
and
stos
negb
shll
sahf
in
and
pop
sbb
mov
dec
imul
add
fnstcw
dec
out
xchg
or
dec
inc
push
outsb
shrb
pop
inc
adc
push
aam
push
jp
jae
jp
aas
push
xor
cld
and
sub
insl
and
jl
fdivrs
lods
dec
xchg
daa
push
xchg
push
aad
lar
cli
adc
jne
xchg
xchg
clc
movsb
aas
cmc
mov
jne
cld
or
inc
dec
xor
dec
les
dec
push
stos
loope
jbe
jecxz
popa
xor
xor
stos
push
adc
addl
mov
test
data16
mov
addl
pop
lahf
nop
ffree
cmpsb
out
push
push
out
call
push
push
and
repnz
les
push
inc
inc
adc
lea
stos
mov
push
sub
sbb
cs
ret
movsl
outsl
xchg
adc
jae
or
inc
rolb
ret
or
xor
inc
mov
cs
mov
sbb
movsl
leave
xchg
in
mov
mov
add
adc
int3
stos
cmp
insb
pop
mov
hlt
xor
and
dec
cmc
cmp
imul
cwtl
subl
test
adc
lods
pop
push
repnz
mov
xlat
adc
pop
dec
xlat
in
mov
mov
out
dec
mov
bound
int3
imul
out
push
sbb
or
fmul
fstpt
xor
xchg
sbb
loopne
push
pop
js
icebp
add
int3
nop
mov
cltd
dec
roll
push
je
jo
daa
mov
lret
out
adc
mov
adc
sbb
inc
lret
js
lods
xchg
push
cmp
pop
pop
jecxz
xchg
or
inc
cmp
out
aad
add
cmpsb
mov
filds
add
out
faddl
enter
cmp
xor
cs
das
push
roll
or
icebp
jecxz
push
cmp
out
xchg
fcmovnbe
mov
in
test
pushf
push
sbb
sub
jno
add
or
clc
hlt
xor
xchg
pop
adc
lahf
icebp
lahf
fld1
push
adc
loopne
cmpsb
fwait
and
sub
sarl
mov
shrl
or
dec
inc
aas
out
mov
cmp
dec
sbb
xchg
negl
roll
dec
outsl
call
stos
int
pushf
out
add
add
xchg
mov
sbb
out
dec
mov
addr16
aaa
fadds
hlt
fsts
dec
pushf
mov
lret
in
push
push
hlt
xor
mov
inc
out
and
das
xlat
add
xchg
push
mov
jns
jle
dec
mov
jb
xchg
adc
fs
xor
shl
in
inc
out
xchg
sub
xchg
jp
sahf
cmpsl
push
mov
orb
cwtl
jne
out
push
push
push
and
sbb
dec
push
hlt
lock
xchg
mov
daa
add
add
add
xchg
ds
jge
dec
loope
push
or
mov
enter
or
ss
and
neg
inc
or
out
stc
and
sbb
sub
mov
push
push
das
aam
popa
jmp
lods
push
test
pop
dec
lods
rorl
adc
adc
dec
imul
repnz
loopne
mov
stos
test
xchg
test
adc
enter
inc
rcr
leave
stos
xchg
jmp
xchg
sbbb
scas
stos
iret
dec
mov
push
jae
xlat
nop
aaa
push
ret
popa
cs
sub
add
jle
das
lds
dec
fwait
mov
sub
aad
repz
mov
test
mov
xor
mov
xor
xchg
incb
mov
imul
push
mov
das
cvtdq2ps
aad
cmp
sbb
sub
loope
stos
and
cltd
mov
lods
repnz
mov
out
xor
cli
in
loopne
jle
jl
daa
or
stos
test
js
cmp
inc
es
out
sub
pmuludq
in
repz
lods
push
inc
nop
enter
jo
cmp
in
lods
out
in
dec
xor
pop
out
and
xor
inc
sub
fistps
icebp
xchg
fcmovne
lcall
xor
dec
pop
in
fstpl
mov
or
mov
mov
add
push
jecxz
out
movsb
repz
test
adc
fiadds
pushf
lret
cmp
in
in
mov
js
xlat
jb
je
sahf
hlt
test
mov
movsl
insl
sbb
loopne
cltd
lahf
pop
cmpsb
scas
and
mov
clc
push
or
cmp
xor
add
adc
mov
jg
sbb
adc
cld
add
push
mov
fimull
clc
cmp
fiadds
scas
mov
or
cmp
xlat
subl
rol
cli
psrlq
jae
out
push
mov
sub
push
hlt
orb
outsl
imul
cltd
xlat
lcall
add
js
loop
fdivp
xchg
stos
add
mov
inc
fcoms
insb
cmpsb
das
push
addl
push
fnstcw
out
jle
sbb
insb
push
icebp
fdivrl
call
mov
out
adc
pop
sbb
movsb
push
cmpsb
mov
adcb
sbbb
cltd
imul
ds
add
insb
icebp
push
jg
sbb
push
les
shl
mov
hlt
or
mov
jns
jle
idivb
jbe
cmpsl
icebp
inc
inc
cld
inc
mov
repnz
xor
movsl
mov
mov
xor
andl
insb
icebp
js
mov
aas
les
insl
repz
xor
mov
lea
mov
and
insl
ficoms
push
shr
xchg
sub
insl
loop
or
adc
mov
fmull
and
jnp
enter
xor
cmp
sbbl
mov
mov
mov
jno
js
push
lods
outsb
add
inc
mov
push
adc
push
sbb
int3
in
xor
pusha
lahf
data16
mov
mov
imul
ds
jns
xchg
in
jp
inc
jne
and
mov
fisubrs
adc
jle
dec
and
push
cmp
xlat
sub
cmpsb
mov
adc
stos
xor
outsl
rcrb
stos
stos
jmp
in
andl
mov
lcall
loopne
std
aaa
or
insl
or
mov
into
ja
lret
pop
out
enter
aam
pop
pop
cmpsl
mov
mov
mov
in
or
push
popf
nop
enter
add
jbe
mov
jns
clc
pop
imul
inc
push
xor
inc
and
movsl
mov
bound
ds
in
xchg
pop
aad
mov
mov
push
jecxz
push
ret
into
in
xchg
add
bound
push
popa
scas
dec
addl
inc
data16
ljmp
mov
and
movsb
mov
push
lock
nop
psrad
mov
lea
cmp
sbb
enter
jl
xor
xor
cmc
push
and
daa
fwait
pop
and
test
sub
push
je
cli
or
fnstenv
out
leavew
pusha
inc
add
movsl
xchg
mov
jge
mov
fldenv
fstl
repz
push
enter
test
leave
xor
or
cli
mov
push
roll
jbe
jbe
pop
repnz
rclb
decb
push
sbb
mov
hlt
push
add
push
push
sub
fs
pusha
loop
dec
jae
xor
or
or
inc
or
cmpsb
inc
dec
outsl
jno
fistps
fdivp
jb
mov
cltd
xchg
outsb
aaa
add
dec
adc
jecxz
ret
mov
push
mov
lcall
cli
lahf
fstp
add
push
push
addr16
outsb
hlt
out
mov
ljmp
mov
sub
sbb
in
mov
fisttpll
pop
sti
mov
ljmp
ljmp
lods
and
push
xchg
sub
and
in
jmp
dec
enter
push
adc
jmp
xchg
add
mov
and
daa
sbb
movsb
test
lods
mov
inc
xor
jo
dec
pop
add
cmovbe
fsubs
add
daa
inc
jg
mov
cld
dec
add
fisubrs
jb
xor
mov
or
sub
fimull
sti
cs
pop
sbbb
sbb
mov
add
xor
jl
sub
addr16
faddl
dec
andb
rolb
sub
mov
imul
fimuls
aas
gs
lret
sbb
mov
mov
inc
push
mov
notb
inc
push
adc
jle
sbb
xchg
rcrb
popf
ret
push
push
or
dec
add
scas
or
mov
out
cld
into
cld
xchg
cwtl
lods
dec
cli
out
push
popa
imul
dec
dec
push
mov
jg
popa
jl
sbb
aas
stos
and
sti
sbb
sub
jp
pop
and
adc
test
mov
call
xor
test
pop
mov
repnz
mov
lea
insl
lock
push
and
in
loop
lcall
pusha
insb
sub
jno
sbb
xchg
daa
ret
dec
mov
pop
push
sub
test
das
popf
fisttpl
pop
mov
pop
xor
std
mov
fs
shrl
sbb
lret
mov
add
in
and
arpl
inc
gs
dec
shl
loop
xor
test
insl
sub
xchg
movzwl
dec
inc
gs
ja
push
mov
xchg
stos
pop
jmp
push
add
ja
inc
out
push
pop
push
dec
aam
mov
ljmp
imul
subl
out
cmp
pop
sub
fwait
xlat
mov
roll
andb
mov
fcoml
scas
dec
stos
or
sbb
push
call
pop
jp
bound
cmp
fsubrl
sbb
xlat
push
mov
xchg
div
xchg
insb
rcr
rcll
jge
adc
fs
push
and
arpl
ret
fadds
fwait
jns
jb
add
dec
out
pop
dec
scas
aaa
aaa
and
jmp
inc
xchg
ja
push
dec
pop
mov
cli
xchg
push
fwait
add
sub
lret
cmp
in
sub
out
pop
aam
cmp
inc
aas
jnp
push
es
das
subl
and
dec
mov
dec
cs
adc
mov
popf
sub
pusha
sarb
fiaddl
cmp
pop
push
sub
ljmp
mov
jns
mov
jg
jl
mov
addr16
outsb
inc
xor
inc
inc
push
mov
lea
sbb
into
adc
push
xchg
sbb
jbe
xchg
cmc
jecxz
inc
xchg
sahf
push
pop
mov
xchg
add
dec
test
jnp
mov
test
clc
arpl
int3
sub
jp
jge
cmpsb
dec
leave
ret
test
mov
adc
lods
insb
jge
mov
push
inc
and
ss
mov
lods
add
sub
cmpsl
sub
outsb
push
xchg
mov
push
out
inc
mov
xchg
and
add
daa
cld
mov
mov
sbb
repz
inc
lea
add
aam
xor
out
lret
sti
iret
pop
into
andb
jb
mov
incl
push
xlat
xchg
xchg
pop
test
das
dec
jmp
sti
dec
xorl
movsl
outsb
sbb
xchg
mov
aad
inc
mov
pop
shll
xchg
and
mov
dec
xlat
lea
cmp
dec
data16
add
stos
or
out
into
sahf
mov
sbb
jl
test
dec
mov
call
clc
adc
sbb
bound
push
movsb
sub
add
shl
jle
mov
jg
push
hlt
scas
scas
adc
or
mov
fprem1
ret
push
xchg
leave
jnp
xor
nop
into
jle
insl
push
xchg
mov
xchg
outsl
lods
cmpb
popf
add
loop
xchg
pushl
shlb
sbb
addb
fwait
sbb
or
or
outsl
ds
xchg
lods
jno
sbb
or
jl
aad
sub
lea
test
pop
shll
add
mov
jnp
push
les
fcoms
fs
sub
int
xor
movsb
jge
sub
enter
pop
and
push
orb
add
das
dec
orb
lock
cmp
push
inc
mov
jnp
or
mulb
add
ret
pusha
std
dec
and
inc
xor
mov
or
dec
or
shl
ja
push
mov
out
mov
lea
enter
clc
xor
insb
ficoms
fsubrl
add
fstp
xor
cld
adc
sub
sub
pop
push
xchg
jp
sbb
lock
jg
enter
subl
jno
sub
sbb
jge
adc
mov
sub
fwait
mov
sbb
or
jne
mov
push
sub
inc
cwtl
sbb
jl
mov
sub
cmp
xor
test
sub
sbb
icebp
movb
les
mov
pusha
cs
mov
aas
xchg
fdivl
fstpt
adc
push
daa
mov
sti
aam
mov
rcll
bnd
fld
push
push
cmp
out
xchg
xchg
xlat
arpl
jl
int
sub
cmp
add
mov
ljmp
inc
and
fmuls
outsb
mov
popa
dec
dec
push
std
fnstenv
xchg
mov
test
mov
icebp
jno
fidivl
and
jo
fucomp
mov
daa
cmpsl
aaa
jnp
rol
sub
lods
iret
push
xchg
sahf
int3
into
scas
or
xor
xchg
inc
mov
and
imul
rorb
jle
scas
lea
jge
jns
sbb
and
out
fnsave
mov
push
mov
mov
sbb
mov
and
lock
iret
lahf
mov
lds
add
xor
push
rcll
inc
shr
rorb
sub
or
mov
mov
mov
jns
inc
loop
cmp
mov
cmp
dec
cld
fcoml
andl
xchg
and
lahf
xor
call
imul
add
mov
mov
fistpl
dec
je
fwait
jb
dec
aam
ljmp
push
sarb
xor
sub
sub
mov
mov
jae
shrl
mov
adc
fistpl
mov
xchg
and
add
popa
adc
ss
fisubs
xor
lds
mov
cmp
push
in
adc
inc
ret
push
repz
sbb
hlt
adc
int
fisubrs
andl
mov
push
xor
sarb
stos
push
xchg
jae
cmpb
int3
add
sub
mov
inc
mov
ret
orb
lahf
iret
mov
out
mov
push
jnp
repz
lods
mov
xchg
data16
add
push
pop
leave
ja
bound
or
int
stos
ja
in
repnz
add
xchg
jno
lock
clc
dec
test
aas
dec
outsl
mov
sub
out
lahf
out
add
js
mov
in
xchg
loop
mov
cmp
sbb
js
dec
rolb
push
sbb
ss
mov
jmp
clc
jecxz
and
dec
cltd
cmp
shlb
cmpsb
leave
aas
faddl
fucomip
imul
aad
and
dec
test
mov
loop
lds
xchg
cmpsl
push
fisubrs
stos
sbb
push
lcall
aaa
mov
mov
mov
mov
xor
insl
pop
mov
and
add
pusha
or
call
mov
testb
push
inc
arpl
imul
sub
fildll
mov
add
int3
repz
aad
mov
outsb
sub
dec
mov
mov
or
pop
aas
aam
dec
sub
and
pop
lods
fsubl
sub
mov
stos
push
loopne
stc
and
aam
push
pop
push
enter
data16
fistps
jecxz
fwait
aam
mov
sbb
test
push
das
pop
ficoms
mov
add
lods
sarl
cmpsl
mov
cs
std
dec
lock
int
shll
stc
adc
xchg
pop
lds
addr16
or
outsl
xchg
inc
fincstp
push
ljmp
or
btr
ret
fwait
push
mov
loopne
mov
outsl
dec
enter
adc
xchg
lds
loope
clc
dec
xchg
dec
ret
xchg
add
imul
scas
jp
fstl
hlt
jl
repz
inc
adc
push
std
fldenv
bound
movsb
inc
std
andl
mov
and
arpl
js
push
test
adc
and
dec
mov
stc
fstpl
jno
push
sub
in
mov
sub
popa
xchg
inc
or
popw
out
xor
cmp
gs
scas
ljmp
lock
insb
sub
call
xchg
mov
adc
dec
jo
sbb
xchg
cwtl
or
add
jecxz
fwait
and
out
push
repnz
push
pop
test
inc
jge
cli
xor
ja
lea
jecxz
lea
xchg
mov
and
adc
jnp
xchg
dec
push
daa
pop
push
or
loopne
jnp
mov
xor
xchg
rol
outsb
daa
js
mov
lea
cmp
std
andb
pop
lret
inc
leave
pop
adc
or
sub
push
sub
pushf
mov
cmc
mov
or
mov
shlb
lret
loopne
shll
gs
fs
xchg
pop
gs
fsubr
adcb
xor
adc
insb
ret
mov
mov
lods
xchg
leave
mov
or
and
push
sub
pop
inc
outsl
mov
push
sub
mov
mov
jmp
dec
mov
idivl
call
mov
or
adcb
test
push
xor
sti
jmp
out
aad
xchg
aam
mov
and
xchg
stos
pop
es
sub
pop
xor
pusha
and
fdivrs
adcl
cmpsl
sti
cmp
loope
xorb
push
pop
mov
jmp
outsl
sbb
mov
lds
xlat
sub
dec
cmpsl
pop
stos
loopne
push
pop
std
or
xor
xchg
mov
cmpsb
outsl
xlat
repnz
repz
pop
push
sbb
rcl
fsubrl
iret
leave
lock
mov
shrb
mov
adc
aad
push
mov
insb
mov
push
mov
dec
inc
jge
out
leave
and
jg
scas
ja
leave
mov
inc
sti
fcmovnu
lock
lods
sbb
mov
push
mov
lods
sti
adc
ret
rcrb
fs
pop
loopne
mov
or
add
xor
lahf
rorl
add
insb
dec
divl
fists
xchg
and
cmp
je
popf
je
outsb
lret
mov
xchg
sub
movsb
pop
stos
out
xchg
add
test
and
mov
push
inc
adc
shl
cmp
cmpb
ljmp
hlt
dec
jle
fsubl
mov
ficomps
mov
push
and
aam
scas
cmpsb
stos
sub
fists
es
cmp
sub
mov
ljmp
mov
and
cwtl
mov
int
popf
cmp
addr16
lcall
lcall
dec
jg
lods
push
sub
icebp
stos
jg
add
sbbb
rorl
ljmp
imul
mov
repz
cli
cmpl
rorl
lahf
xor
or
sub
mov
idivb
nop
lock
xchg
cmpsl
insl
scas
and
fisubl
sub
mov
daa
inc
pop
sub
je
inc
aas
cmp
hlt
xchg
mov
xor
rolb
adc
jecxz
into
repnz
mov
jge
les
les
mov
inc
inc
hlt
test
adc
xor
xchg
pop
jbe
sub
movsb
and
aaa
dec
push
cwtl
cltd
jge
test
test
adc
lds
imul
nop
and
mov
push
outsl
repz
mov
xchg
outsl
fwait
int
pop
cmp
dec
push
icebp
ja
and
push
mov
xchg
jmp
push
mov
into
dec
xchg
lret
out
xor
mov
adc
add
or
fstps
mov
gs
js
clc
outsb
nop
in
xor
in
adcl
es
in
aaa
pop
cmp
fwait
sarb
testl
enter
shl
mov
scas
or
cli
mov
mov
sub
inc
out
stos
sti
inc
into
rcrl
stos
cmp
push
js
sub
nop
mov
xchg
cmpsl
push
stc
mov
js
and
lods
dec
add
fsubrs
bound
lods
repnz
dec
or
push
adc
cld
pop
cmp
ret
repnz
hlt
or
fwait
sbb
inc
fcoml
daa
xor
enter
bound
jmp
testl
xor
imul
lock
jge
lret
scas
insl
enter
adc
fsubr
cmp
out
cmc
das
dec
ljmp
xchg
jp
add
das
pop
lret
and
insl
cmp
jg
push
cmp
or
in
pop
popf
add
jb
lcall
mov
sbb
add
cmp
push
dec
lods
xchg
mov
or
sbb
cmc
push
dec
pop
xchg
pop
inc
inc
jp
cmp
mov
aaa
xor
dec
cwtl
fcoml
icebp
pop
notb
rolb
lods
cmpsl
push
jnp
cmpsl
ss
pop
in
bound
and
cmp
sti
xchg
pop
mov
iret
fyl2xp1
or
sbb
push
cmc
push
cmpsb
jbe
scas
jg
out
jge
jp
inc
xchg
sti
cmp
add
push
dec
in
inc
xchg
push
in
inc
push
sub
movsb
xor
ds
insb
imul
mov
jne
and
mov
fcmovnbe
pop
pop
pushf
shrb
mov
pop
scas
jae
aad
scas
mov
mov
jge
int3
mov
xor
mov
loopne
jno
outsl
push
jnp
pop
cli
adc
stc
enter
std
xchg
or
and
pop
inc
pop
hlt
adc
filds
data16
std
ljmp
daa
cmpsb
dec
pop
add
xor
xor
arpl
inc
pop
lcall
mov
xchg
test
xor
testb
pop
cmpsb
inc
jae
mov
add
xchg
dec
add
das
push
lock
jne
movsb
lods
bswap
jl
mov
cmpsb
stos
aaa
push
xchg
xor
pop
test
dec
push
cmpsl
xchg
inc
fsubrl
fdiv
mov
out
mov
test
orl
push
sub
mov
cmpsb
lcall
mov
pop
cmpsl
pop
sbb
fldenv
cld
or
mov
aad
stos
add
dec
dec
or
imul
imul
fbld
std
lret
fldt
fdivr
dec
sbb
sbb
jmp
jg
xor
push
mov
jbe
insl
mov
imul
into
adc
imul
sub
fists
adc
sti
pop
sub
mov
es
sub
fdivl
cmpsl
daa
or
out
dec
out
jl
and
insl
clc
outsb
sbb
and
push
lock
int
adc
push
pusha
cmp
fldt
push
pop
inc
cltd
in
into
push
out
and
jbe
lret
dec
ficoms
inc
pop
add
cmp
dec
fiaddl
in
imul
cmp
dec
rcrb
je
cmp
lcall
leave
hlt
jle
sbb
lock
roll
mov
shrl
gs
loope
mov
pop
cmp
stos
out
inc
les
inc
sbb
jmp
inc
pop
mov
mov
mov
je
pop
adc
ja
cmp
mov
ficompl
mov
inc
mov
jo
lods
xor
mov
xchg
and
aas
fnstsw
pop
fstps
inc
shrl
lds
cmp
cmp
sti
cmc
jmp
inc
loopne
cmp
test
in
push
or
cmp
cs
push
xchg
sub
shll
stos
cltd
out
pop
adc
mov
add
sub
push
or
or
sub
arpl
shrb
mov
xlat
pop
pop
dec
in
jb
jmp
ss
xor
sbbl
dec
pop
or
nop
cld
fsubrl
xchg
insb
aas
inc
push
je
flds
pop
stc
dec
xor
rcrb
ss
push
ret
jge
dec
and
adc
mov
push
xchg
push
sti
data16
mov
sbb
dec
fwait
pop
andl
aas
xlat
xlat
pop
orl
mull
js
pop
cmp
mov
repnz
xchg
sbb
je
inc
jo
push
inc
test
xor
sti
adc
push
ds
fcmovnu
mov
ficoml
fsubrp
push
insb
lcall
sub
popa
cltd
push
jle
into
jbe
cmp
or
mov
or
nop
into
and
stos
or
dec
fdivr
add
mov
xor
lret
lahf
mov
stc
push
cmpsl
jecxz
and
aas
cltd
scas
aaa
sub
adcb
xlat
enter
inc
mov
fwait
dec
aaa
or
je
xor
iret
inc
loop
daa
cmpsl
mov
clc
push
and
mov
test
and
and
repz
adc
push
ljmp
lods
mov
mov
ret
adc
repz
sub
pop
push
or
ja
in
jle
sub
pop
jle
fidivl
sbb
cmc
and
mov
sub
out
mov
lcall
cmc
call
pushf
fistl
dec
nop
movsb
jne
mov
arpl
dec
push
stos
das
stos
movsl
lret
cld
push
or
jne
cwtl
pusha
push
sbb
adcl
mov
inc
out
sahf
xchg
sbb
inc
shll
xor
test
or
popa
mov
movsb
movsl
arpl
int3
aam
cmp
cmc
jp
in
push
mov
out
lret
ret
jmp
fwait
cwtl
mov
cli
cmpsb
cmp
xor
sub
jnp
xor
out
push
rcrb
sub
out
or
add
mov
and
cmp
mov
bound
sbb
sub
xchg
cli
pop
push
movsb
xor
xchg
xlat
in
mov
fwait
call
sti
lret
loop
cld
jmp
mov
dec
mov
sbb
movsb
add
sub
test
fildl
js
cltd
adc
dec
or
fsts
dec
scas
xor
ja
push
fdivrl
ret
jmp
out
std
leave
dec
push
jge
je
call
jno
int3
mov
dec
dec
cmp
jmp
cmp
lods
push
lods
mov
dec
in
testl
imul
push
test
push
mov
inc
xchg
cmp
mov
inc
jg
icebp
out
mov
rclb
jo
in
repz
inc
subb
inc
aas
jne
fwait
jmp
sbb
daa
adc
pushf
push
dec
pop
mov
sti
cmp
imul
notl
rep
dec
fidivl
cltd
push
dec
fldenv
dec
sti
dec
mov
push
jo
lods
dec
pop
mov
sub
jb
cltd
je
inc
pop
and
add
popa
and
leave
sbbl
ljmp
mov
sbb
sub
or
popa
inc
cld
sarl
movsb
adc
ret
iret
sbb
clc
sbb
loopne
lock
adc
js
mov
cmp
jmp
xlat
inc
jb
leave
insb
xchg
aad
jmp
mov
add
jb
adc
jo
cmpb
cmpsb
push
int
adc
adc
dec
cmp
push
inc
les
add
ret
lds
pop
jne
xor
dec
xlat
je
add
mov
stos
into
mov
adc
js
push
scas
adc
jecxz
jp
ds
push
ret
cmp
aaa
inc
shrl
inc
lret
or
adc
jmp
lods
cmp
add
sub
sbb
int3
jo
testb
mov
cmp
lods
or
adcl
insb
repnz
jbe
cmpsb
mov
outsl
in
xor
fsts
mov
mov
pop
imul
jo
stos
fisubs
or
popa
pop
roll
mov
pop
push
sbb
cmp
mov
ficoml
inc
xchg
add
and
fnstsw
pop
stos
imulb
call
jbe
cli
jmp
rorb
aas
cmc
xchg
lods
inc
fiaddl
xchg
aas
dec
pop
jnp
lret
push
xor
loopne
sbb
dec
in
cmp
push
fsub
add
xor
loopne
dec
rcrl
sbb
popa
lock
rorl
jb
mov
push
in
test
pop
xchg
les
int3
add
xchg
popa
inc
dec
mov
in
cmp
pushw
popa
xor
into
repnz
mov
push
rolb
and
cmpsb
jno
xlat
jle
insl
mov
inc
out
sub
push
push
call
xor
out
add
jbe
inc
sbb
pusha
mov
mov
cmp
cmc
idivb
gs
sbb
in
xchg
mov
aad
scas
and
loope
out
inc
ljmp
sub
pushf
loopne
mov
mov
mov
dec
pop
fildl
mov
mov
outsl
xor
cwtl
mov
mov
mov
popf
leave
testl
lcall
out
mov
and
out
inc
cmpsb
xchg
mov
lods
sbb
sub
test
cmp
jne
int
mov
iret
inc
pop
scas
negl
xlat
cs
cltd
mov
aam
cmc
movsb
mov
and
lds
sub
mov
xor
push
xor
bound
xchg
dec
cltd
push
xor
js
dec
push
test
fwait
ss
notl
cmp
repnz
inc
push
mov
or
lods
loope
inc
adc
fucomi
mov
push
lahf
sub
adcl
inc
cmp
mov
jle
xchg
loop
lret
bound
add
sub
mov
aas
negl
div
in
push
xor
pop
loop
dec
test
in
jo
lea
mov
in
pusha
rcrl
enter
push
sbb
fwait
push
xorl
pop
mov
jb
cmp
xchg
sub
mov
inc
std
cld
loope
test
sbb
int
cwtl
ret
sti
outsl
mull
mulb
repnz
push
scas
cwtl
or
iret
leave
lret
scas
pop
lret
jb
shl
cmc
aam
pop
es
jno
cmp
push
push
in
xchg
es
addr16
push
fdivl
loope
mov
lret
addr16
test
ret
mov
sbb
shlb
jo
xchg
mov
mov
sub
ljmp
mov
pushf
and
fcoms
les
out
pop
pop
dec
cmp
push
stos
gs
lahf
fstpl
cltd
sbb
test
adc
mov
or
or
push
nop
inc
out
xchg
jnp
pushf
mov
pop
movl
pop
pusha
dec
mov
sub
fsubrl
and
cmp
sub
js
xchg
int3
push
insb
lea
push
pop
xor
and
mov
ja
sbb
xchg
daa
cmp
stos
xchg
push
fstpl
mov
sub
inc
add
and
pop
dec
mov
test
nop
sahf
lcall
pop
add
xchg
push
dec
dec
vmovshdup
or
sti
jl
pop
jle
mov
popf
jnp
xchg
mov
push
std
daa
stc
cmp
jp
pushf
daa
push
sbb
movsl
sbb
aam
sub
sbb
sbb
cmp
jmp
lock
nop
pushl
mov
xlat
jp
adc
jp
lret
sbb
lds
filds
mov
ficoms
cltd
and
cmp
stc
jns
inc
in
mov
dec
jb
mov
mov
xchg
adc
fisttps
addr16
mov
xor
cmp
addl
xor
jmp
xchg
add
xor
call
push
aaa
push
pop
and
popa
arpl
jno
mov
in
outsb
xchg
inc
fcmovnu
mov
fnstsw
push
cmp
outsl
daa
adc
lcall
jg
or
mov
push
dec
jecxz
dec
das
jno
xor
ja
inc
jo
xor
push
mov
out
mov
fnstenv
jbe
adc
cmova
cmp
std
stos
mov
inc
dec
adc
mov
lret
sti
jnp
xchg
adc
outsl
xlat
bnd
scas
cmpsl
inc
loope
dec
sbb
data16
inc
dec
jb
sub
sbb
in
mov
jmp
sbb
pop
pop
mov
jo
sub
xchg
pop
bound
ret
cmpl
fdivs
adc
adc
adc
sahf
jb
xchg
negb
jmp
jne
subl
xchg
rcll
bound
lahf
movsb
inc
in
mov
pop
aam
xchg
pop
loope
adc
inc
pop
cli
arpl
aaa
insl
mov
lock
pop
mov
inc
sbb
dec
cmpsb
roll
out
orb
push
dec
ss
loop
hlt
in
mov
jge
jecxz
cld
mov
adc
test
fwait
bound
mov
dec
lods
not
roll
lret
push
mov
mov
mov
dec
and
or
div
adc
sahf
xchg
xchg
mov
ljmp
sub
aaa
test
aad
call
push
add
les
xorb
push
xchg
cmp
xor
bound
mov
xchg
lcall
cs
addl
popf
cltd
std
inc
repz
cmp
push
xor
js
xor
or
ds
and
aad
jmp
add
xchg
cli
mov
loopne
ja
dec
mov
add
dec
adc
mov
movb
adc
or
jl
or
inc
lds
insl
xchg
out
inc
xchg
pop
xlat
jnp
in
fdivrl
out
or
pop
lcall
xchg
xor
or
imul
cmpsl
push
stos
inc
rcll
xchg
rolb
outsb
push
popa
cmpsb
and
int
mov
negl
cmpsl
movsb
cli
imul
addl
adc
push
adc
emms
inc
movsb
sbb
adc
iret
out
int3
jns
imulb
push
mov
rcll
pop
sbb
movsb
mov
fisttpll
sbb
cmp
jne
or
jne
daa
xor
sbb
inc
test
nop
mov
imul
lock
jp
sub
jno
jg
repz
rorl
or
dec
cmpsl
push
xor
adc
fwait
mov
popf
add
push
call
jp
fidivrs
lods
subb
push
daa
xchg
dec
xchg
or
clc
pushf
cmp
jnp
out
in
imul
or
inc
and
loop
push
cs
mov
pusha
dec
orb
popf
std
mov
in
fs
pop
add
pusha
cmpsl
push
imul
dec
sub
lods
mov
lea
xchg
xchg
or
mov
lods
loop
and
xor
mov
jae
jg
lahf
mov
mov
cwtl
aad
mov
in
jae
lock
jmp
push
mov
xor
pop
stos
jecxz
dec
dec
mov
sbb
and
push
dec
dec
sub
subb
fdivs
sub
mov
adc
push
add
push
inc
xchg
jmp
push
mov
sbb
mov
rcrl
cmpb
mov
lahf
sbb
repz
inc
stc
dec
mov
cmp
push
sbb
in
hlt
jmp
add
sub
dec
cmc
in
push
dec
sahf
add
sahf
repnz
testb
fisttpl
pop
pop
cli
cmc
pop
loope
std
test
lret
jnp
push
inc
cmp
aaa
dec
xchg
imul
sub
out
jle
mov
rclb
mov
pop
in
lcall
sbb
scas
and
xor
xor
std
test
push
push
pusha
mov
pushf
pop
mov
es
movsl
pushl
cmp
mov
ret
xorb
outsb
sub
in
not
xor
popf
es
test
jge
sub
fs
std
lret
mov
jecxz
or
nop
cmc
xor
xchg
icebp
lcall
inc
mov
push
mov
pop
enter
cwtl
test
mov
push
test
dec
leave
jle
mov
cmp
mov
mov
fcmovne
dec
or
adc
jns
pushf
repz
ja
inc
mov
adc
fs
cli
mov
push
js
jae
mov
fldcw
in
pop
cmpsl
dec
add
jne
ret
mov
movsb
pop
arpl
js
xchg
loope
std
pop
push
fwait
or
cld
aam
push
adc
adc
fs
imul
stos
mov
push
xor
lods
jo
xlat
mov
xchg
and
les
pusha
das
clc
or
push
leave
xchg
or
mov
cli
es
pop
icebp
dec
jne
push
aad
mov
setbe
loopne
sub
sbb
mov
adc
jmp
mov
xchg
int
fstl
mov
pop
inc
jg
sbb
std
mov
adc
push
test
mov
add
and
push
mov
sbb
xor
pushf
xor
ljmp
pop
mov
sbb
cwtl
imul
inc
pop
daa
jae
int3
xchg
pop
je
mov
jmp
in
fbld
xor
push
sub
pop
lahf
mov
xorb
mov
or
cmp
pop
andl
loop
fnstsw
mov
stos
icebp
movsb
or
addl
sahf
mov
data16
mov
and
jb
add
ret
sbb
sbb
xlat
popf
iret
and
out
mov
add
insb
mov
imul
cmc
lods
dec
lret
in
imul
test
sub
push
adc
into
insl
sub
in
aad
mov
xchg
mov
mov
mov
jecxz
data16
cmpsb
jnp
mov
imul
and
inc
fwait
out
in
inc
std
or
enter
addl
imul
jl
js
out
stos
mov
scas
ljmp
fnsave
xchg
cmp
mov
mov
out
sbb
repz
sahf
psubd
sub
push
xchg
loopne
add
mov
cmpsb
sbb
test
xor
les
mov
pop
or
daa
push
fsub
imul
cs
loop
jb
cmp
mov
lret
call
out
xchg
nop
xchg
imul
cld
or
add
xor
lds
jmp
ret
insb
dec
fsts
xchg
mov
mov
in
adc
push
clc
mov
out
adc
cmp
mov
mov
fldl
or
out
enter
ficompl
mov
repnz
cmp
and
jo
add
jle
mov
mov
out
popl
xor
out
mov
ret
mov
int
icebp
fcoml
pop
movsl
push
int3
mov
cmp
cmpsb
sbb
push
dec
push
dec
xchg
pop
and
mov
sbb
pop
fimuls
insl
pop
mov
lcall
cld
lret
pop
or
cmp
add
jge
andb
lcall
call
ja
dec
mov
std
stos
negl
xchg
fisttps
push
jae
adc
outsb
xchg
push
repz
hlt
inc
mov
jecxz
xor
sub
pop
mov
dec
movsb
subb
dec
ss
in
lods
movsb
mov
push
pop
sbb
cmpsl
push
pop
mov
or
aad
addl
montmul
cmpsb
xor
mov
or
sbb
mov
add
lcall
pop
fbld
loope
mov
cmp
mov
lods
lds
cmp
dec
in
push
sub
adc
aaa
lods
xchg
test
pop
cmpsl
adc
mov
int
mov
pop
test
scas
enter
push
mov
outsl
movsl
inc
call
jns
ja
fisubrs
mov
testb
pusha
mov
int
fistpl
je
push
mov
aas
xor
mov
orl
jne
mov
repnz
sti
lret
imull
pop
dec
shll
inc
mov
cwtl
pop
and
mov
inc
mov
call
ficoms
loop
in
lods
jae
dec
push
or
or
fisttpl
out
sbb
test
fistpl
outsb
cmp
and
lock
sub
test
in
fst
mov
inc
xor
into
cmp
push
sub
ljmp
pop
or
into
andb
sbb
mov
adc
jns
jg
mov
pushf
fcomi
in
das
scas
xchg
jl
ret
ljmp
add
jbe
adc
fimuls
clc
pop
pop
push
imul
out
push
hlt
sbb
out
cld
pop
dec
stc
pushf
lcall
mov
sbb
mov
mov
test
divb
shlb
mov
adcl
push
test
je
cs
lcall
inc
mov
inc
mov
int
adc
sahf
repnz
addr16
test
xchg
jbe
pop
stc
jge
xor
andl
jecxz
adcl
out
in
add
xor
adc
lcall
pop
mov
or
xorb
inc
cmp
bound
mov
cmpsb
ds
das
jmp
xchg
pop
fwait
jno
inc
cmc
adc
out
mov
icebp
push
scas
sub
mov
xchg
aaa
sti
out
scas
pop
rclb
sbbb
stc
movsl
sti
mov
cmp
sub
jbe
sbb
add
es
and
mov
inc
dec
dec
push
icebp
mov
iret
xor
fisubl
lahf
mov
add
push
adc
repnz
jmp
jmp
sub
movsb
dec
in
ret
in
fidivrs
mov
dec
jmp
rcl
popf
pushf
pop
mov
call
xlat
std
adc
and
gs
test
and
cwtl
pop
dec
out
push
popa
pop
add
pop
ret
or
sahf
lods
in
scas
xor
hlt
scas
xchg
jbe
push
stos
scas
lret
pusha
fidivl
movsb
jmp
inc
push
test
dec
cmp
outsb
mov
cld
xor
lock
movsb
loop
adc
aas
ret
imul
cmp
adc
xchg
sbb
sbb
movsl
pop
jb
mov
mov
jb
iret
dec
add
xchg
arpl
mov
cmp
jb
int
jle
mov
push
inc
cmp
sbbl
jl
popf
adc
push
cmp
movsb
test
pop
or
inc
adc
leave
test
pop
jg
dec
mov
js
sahf
xor
enter
inc
fwait
int
movsl
outsb
cmp
cmp
xchg
fcoms
xlat
mov
int3
and
sbb
mov
sub
pop
xor
out
or
cmp
add
ss
add
sbb
pop
nop
mov
movsl
add
mov
dec
pop
enter
movsl
dec
loop
adc
and
add
sbb
jle
and
inc
popa
lea
push
pusha
bound
clc
jmp
es
xchg
and
push
popf
insb
in
dec
call
call
jnp
pop
push
xchg
dec
sbbb
ror
gs
mov
pop
test
shrl
mov
xchg
lret
aam
xchg
and
xor
xor
and
mov
and
lret
fdivl
ficoml
out
aas
dec
fwait
out
or
scas
ja
outsb
in
fdivl
ret
pushf
push
pop
rcrl
xchg
jmp
bound
popa
jae
push
je
or
leave
bound
cmp
ret
xchg
jecxz
fs
dec
xor
pusha
out
ret
repz
xchg
jo
lds
imulb
or
mov
jae
xchg
and
cmp
xchg
outsb
subl
je
sbb
and
mov
jae
or
inc
pop
inc
inc
jns
in
inc
mov
cmp
pop
mov
pop
bswap
push
and
fidivrl
push
inc
dec
sub
dec
xor
in
xchg
adc
sbb
stos
jmp
cmp
mov
xor
out
repz
les
ds
pop
repz
enter
xor
nop
mov
push
test
push
xchg
push
mov
sbb
dec
inc
push
xor
cli
cmp
fldt
lods
sbbl
push
stos
adc
in
cld
xor
scas
das
push
sarb
mov
cld
mov
data16
out
les
xchg
inc
and
lds
jbe
lahf
xlat
mov
fstl
ret
xchg
jl
sub
inc
inc
ljmp
and
lcall
psubd
pop
fstpl
pop
enter
ficompl
and
dec
or
dec
jp
push
cmp
dec
pop
data16
daa
sub
and
dec
and
mov
fsub
push
or
jb
or
xor
sbb
jge
shl
lods
sbb
stos
xor
and
pop
xorl
inc
clc
rolb
mov
xlat
pop
movsl
adc
push
stos
orb
push
sbb
ds
movsb
mov
adc
cmp
xchg
inc
xchg
loopne
cmpsb
cld
sbb
adcl
sbb
inc
incb
add
mov
pop
popa
int
in
and
push
stc
jno
jo
pop
or
jge
jmp
testb
and
cwtl
outsl
pop
jg
movsb
pop
in
and
jge
pop
shrb
popf
cmpsb
xor
xchg
mov
jns
push
jmp
or
clc
mov
push
xchg
aas
leave
testb
das
inc
enter
mov
ret
idiv
ja
in
jle
rcr
ficomps
loope
addr16
iret
js
sub
xchg
mov
pop
adc
inc
xor
rcl
mov
int
pop
popa
jno
cli
xlat
je
mov
xchg
inc
out
mov
and
mov
sub
mov
mov
loope
fstps
nop
push
mov
xchg
ret
xchg
pop
or
jne
bound
movsl
addr16
fdivrl
sbb
xlat
and
jecxz
out
rol
gs
ljmp
xor
jl
test
pop
mov
lds
push
inc
cmpsl
fisubrs
adc
lock
outsb
repnz
and
imul
addr16
je
je
cli
popa
mov
adc
cwtl
lock
push
add
add
pop
push
int
jmp
ret
adc
adc
dec
fadds
int3
lret
adcb
jb
jns
std
scas
add
add
ds
cld
mov
xchg
push
xor
mov
pushf
imul
inc
pushf
ret
mov
aaa
pushl
jg
jmp
out
xor
lcall
xchg
xor
xor
mov
xchg
xor
inc
or
jmp
enter
and
outsb
es
pushf
js
and
jo
call
mov
push
mov
jmp
ret
lds
mov
fildll
mov
insl
mov
xchg
sub
mov
xchg
sub
mov
mov
enter
pop
sahf
pusha
out
jecxz
xlat
mov
mov
jmp
leave
cmc
or
and
sub
push
jmp
cli
shl
cwtl
movsl
xchg
mov
xchg
outsl
add
jae
mov
enter
mov
sbb
jg
dec
or
scas
sbb
cmp
pop
frstor
pop
push
xlat
std
adc
push
or
xchg
or
push
xor
test
add
sbbl
dec
fnstenv
xchg
repnz
pop
aas
mov
push
lret
loope
mov
cmp
push
mov
jmp
cmp
xchg
mov
push
in
or
lods
and
jg
sbbb
test
sub
stos
popa
jno
loop
int
rcl
xor
cs
mov
in
aad
clc
in
xor
movsb
push
daa
sbb
sbb
in
mov
push
adc
sahf
adc
notb
je
add
sbb
ret
sbb
movsb
or
movsb
add
pop
push
int
leave
fdivrl
dec
rclb
jle
cltd
mov
pusha
xchg
mov
or
adc
lcall
cli
das
pop
or
push
or
addr16
adc
pop
push
mov
mov
repz
jg
add
dec
les
arpl
cmpsb
gs
xlat
ret
add
mov
mov
inc
or
mov
shl
leave
daa
adc
adc
sub
jae
inc
ret
sbb
mov
inc
inc
push
dec
or
insl
clc
stos
jae
xor
int
aam
dec
cli
inc
addl
aad
inc
popa
jne
out
fnstsw
les
cmpb
repnz
ret
aad
outsb
pop
pop
lret
sbb
xlat
les
pminub
xchg
lahf
sbb
or
daa
mov
pusha
stos
aam
mov
fistps
loope
jae
jle
or
jecxz
ja
lahf
cmp
mov
rcr
out
xor
loopne
mov
aad
inc
les
push
popf
inc
push
mov
push
mov
insl
jge
scas
std
scas
dec
pop
lods
jg
outsl
jno
jo
cli
mov
mov
fdivl
popa
xlat
xor
and
shlb
jmp
mov
cmpsb
sbb
cmp
out
neg
aaa
repz
in
xchg
mov
iret
or
out
pop
cmp
xchg
mov
and
in
cmc
and
nop
in
pushf
mov
sub
cli
add
sub
inc
jnp
nop
or
enter
enter
and
scas
rcll
shrb
lahf
ss
bound
shl
test
test
test
mov
dec
xchg
cmpsl
movl
and
lods
inc
push
test
dec
mov
or
arpl
hlt
xchg
inc
mov
aad
pusha
push
stos
cmpsb
rep
cmc
xchg
add
clc
push
leave
pop
lahf
jmp
or
leave
fninit
ss
mov
shlb
sub
mov
mov
jmp
xchg
xchg
pop
bound
popa
testb
push
and
je,pt
jne
and
mov
xchg
add
daa
fisttpl
mov
out
dec
imul
dec
xchg
stos
sbb
rcrb
sub
push
push
pop
sbb
subb
push
lret
lods
movsl
mov
inc
add
aam
mov
add
cld
push
sbb
pop
mov
add
sub
fidivl
dec
xor
mov
push
pop
mov
test
fmuls
push
shrb
or
sub
jbe
adcb
fildl
sub
insb
xchg
nop
movl
cmp
bound
sub
add
adcb
lahf
xor
mov
in
rorl
lret
je
inc
jb
jecxz
fildll
push
xchg
mov
dec
test
std
mov
and
cwtl
lock
frstor
jle
outsl
xchg
ja
dec
lds
rorl
push
lods
xor
jecxz
hlt
or
pop
fs
xor
popf
in
mov
inc
mov
pop
add
mov
insl
movsl
mov
or
jno
fwait
mov
and
icebp
add
mov
mov
sti
ficompl
lahf
mov
add
cmc
push
aam
test
cmp
std
aad
out
outsb
add
push
fucomp
sbb
pop
push
cld
or
xchg
lea
js
call
aam
sbb
shll
and
xor
jno
add
jle
jno
mov
dec
pop
out
xor
fnstsw
cmp
or
fdecstp
gs
jl
dec
lock
test
push
lea
and
jecxz
jmp
lods
test
push
aas
lcall
mov
scas
pop
xor
fwait
test
dec
sbb
xchg
addb
aad
fildll
inc
sbb
das
shlb
pop
mov
adc
push
adc
inc
stc
xor
push
cld
mov
dec
dec
xchg
pop
stc
jne
aaa
lds
shl
adc
adc
or
mov
and
mov
push
stc
scas
push
negb
mov
in
stos
fsubs
jecxz
test
sbb
or
leave
mov
insb
sbb
jnp
mov
inc
cs
filds
push
mov
cmpsl
xchg
inc
push
ja
mov
aad
push
pop
xchg
cmp
lcall
mov
fwait
sti
cmp
pop
aaa
cmp
inc
pop
jae
push
daa
cmpl
fs
mov
leave
xchg
imul
mov
and
test
aas
in
mov
pop
test
sub
int
int
dec
inc
dec
add
xorl
dec
mov
aad
aad
jns
les
lahf
sub
in
cs
push
and
pop
call
popa
stos
out
loop
and
cmp
and
pop
mov
repz
aaa
lock
adcl
adc
jp
into
mov
add
sub
fsubrl
mov
mov
dec
lahf
mov
pop
addr16
sub
js
cmp
jb
xchg
lret
test
add
arpl
mov
aaa
stc
xor
pop
push
mov
sbbb
xchg
jbe
pop
jecxz
push
push
add
mov
mov
data16
cmpsl
pop
jo
adc
push
sbb
ja
fnstsw
inc
mov
arpl
mov
add
stos
pop
insb
jae
aad
push
fisubl
add
scas
adc
jecxz
mov
push
mov
cltd
xchg
mov
pop
fiaddl
jle
inc
pop
testb
push
inc
das
xor
mov
fldenv
fcmovb
cmp
imul
shlb
dec
xchg
dec
jmp
lock
and
mov
hlt
je
ljmp
sub
data16
sub
movsb
xor
out
in
shrb
mov
lea
das
inc
testl
push
bound
mov
fwait
push
mov
mov
sbb
adc
cs
xor
mov
fisubrl
sbb
mov
push
aaa
and
xor
in
test
sub
test
call
cmpsl
cli
lock
leave
inc
push
and
lods
cmp
data16
cltd
in
ret
push
lds
lds
dec
and
mov
imul
mov
xchg
aas
jns
dec
jae
lret
loope
and
test
and
mov
popa
cmp
mov
fdivrl
aad
dec
jle
icebp
sub
adc
popf
push
cmp
popf
jo
subl
test
mov
inc
adc
mov
cld
imul
mov
popa
shr
daa
imul
jmp
lahf
pushf
shlb
pop
out
cmp
fs
movsl
icebp
pop
mov
dec
enter
shlb
mov
cmpsb
out
adc
cmp
sbb
out
fcoms
jl
jp
mov
jnp
sub
les
fildll
cmpsl
mov
dec
xchg
scas
mov
dec
xorb
insl
xchg
cli
or
inc
cmpsl
fwait
pop
dec
jge
fsubs
out
orb
ljmp
dec
inc
or
sub
mov
and
cmc
clc
stc
hlt
in
rclb
popa
div
inc
fisttpll
inc
and
mov
mov
xchg
fisttpl
sbb
ret
addr16
stos
ret
cmp
in
push
dec
pop
or
mov
mov
or
sub
push
and
div
add
mov
das
roll
push
call
leave
mov
fnstsw
xchg
sbb
or
xor
imulb
test
insb
mov
xchg
insl
das
or
xor
and
scas
lock
pop
jecxz
orb
or
je
lea
addb
gs
loope
dec
push
mov
jno
inc
mov
ds
push
jp
stc
push
test
das
or
in
xchg
rcl
stc
inc
mov
adc
xlat
add
test
cs
and
outsb
cmp
insl
push
xor
jmp
xchg
sbb
gs
stc
push
xchg
ss
faddl
addr16
and
lods
mov
popf
adc
lods
sti
mov
notb
pop
mov
mov
cwtd
sarl
push
dec
mov
testb
dec
hlt
xor
lret
jbe
cwtl
aaa
cmp
push
loop
inc
enter
cmp
lea
fwait
xchg
dec
repz
data16
jbe
dec
pop
dec
gs
mov
jo
ficompl
lahf
movsb
xchg
repnz
call
out
jns
xchg
daa
xor
jno
pop
add
dec
lods
sub
ret
sbb
xlat
shl
jge
cltd
mov
loopne
xor
cli
and
repz
sub
cwtl
add
mov
daa
xchg
pop
add
andl
pushf
adc
aad
mov
rcr
and
mov
fcom
popf
mov
loopne
sbb
dec
mov
and
call
data16
mov
inc
ret
push
fs
negb
xor
imul
mov
test
xchg
cmp
inc
sub
ret
outsl
push
les
sbb
subb
ljmp
fstl
adc
and
stos
add
dec
nop
push
ss
or
add
repz
mov
icebp
rcrl
aad
adc
ja
ds
push
test
or
les
adc
mov
stc
push
ja
int
inc
pushf
out
mov
sbbb
inc
cmc
adc
push
sub
sub
shl
and
pop
mov
in
lock
inc
sbb
or
xchg
inc
rclb
lcall
sub
xor
inc
fs
add
xor
addr16
cmp
pop
loopne
jmp
movsl
enter
fsts
and
jne
mov
cwtl
mov
rol
sub
push
sub
or
leave
pusha
stos
fisttpl
xlat
nop
and
arpl
xchg
not
push
js
stos
lock
jl
popf
loop
mov
push
and
or
xorb
jns
outsl
sub
xchg
inc
mov
test
and
mov
or
and
or
mov
stc
mov
lcall
out
insl
jg
lret
out
outsl
inc
test
adc
fisubrs
jnp
movsb
stc
xchg
decb
std
jne
mov
adc
fadds
pop
mov
cli
je
data16
or
ss
or
pop
mov
dec
ds
pop
xchg
sti
loop
mov
xchg
fiadds
aad
cltd
sar
mov
or
leave
mov
mov
sbb
jmp
nop
dec
bound
scas
lock
jb
xor
mov
leave
add
add
xchg
mov
shr
sbb
add
std
lahf
les
sub
lea
push
mov
aam
and
test
mov
mov
cwtl
or
fildll
pop
loop
add
xor
pop
xchg
scas
and
xor
xchg
cld
icebp
sbb
xchg
mov
cmc
jo
jl
lret
xchg
jno
jecxz
jle
jl
lea
adc
js
pop
xchg
jae
push
fisubl
xchg
ret
in
movsl
pop
out
mov
jbe
adc
inc
lds
mov
fwait
lods
jl
mov
xor
pop
adc
or
pop
les
testl
ret
cmpsb
and
or
pmaddwd
dec
and
in
ljmp
mov
mov
jnp
sub
and
mov
rolb
in
cmp
dec
arpl
test
or
xchg
fisttpll
jnp
cltd
andl
sahf
adc
xchg
jne
lea
idivb
fists
jns
mov
repnz
xchg
ficoms
xor
fiadds
in
cltd
sbb
dec
leave
outsb
and
or
dec
push
jl
inc
inc
loope
inc
and
jb
mov
mov
xor
jmp
pushf
jbe
dec
cmc
ret
jecxz
push
sbb
aaa
fimull
loop
mov
jge
out
mov
xchg
pop
and
lock
or
push
adcl
test
cwtl
stc
aad
aas
rclb
jp
push
into
and
sbb
dec
mov
xor
push
jb
pusha
pop
sbb
pusha
out
add
sahf
loopne
add
xchg
or
push
outsb
jp
or
ja
movsl
cmpb
pushf
mov
jae
adc
xchg
rcl
inc
mov
inc
jmp
loope
shrl
add
push
test
lods
lahf
fwait
sahf
shl
and
xor
mov
xor
sub
sub
and
aas
shl
cmp
inc
or
and
or
test
sbb
inc
push
add
inc
loopne
mov
sarb
sbb
push
test
leave
cmp
adc
loope
xor
push
mov
pop
push
fsubp
lret
cmc
fistps
test
sub
loope
pop
rcll
and
je
cmp
out
popl
cmp
mov
xchg
cmpsl
or
sarb
test
push
lods
jle
mov
xchg
pop
gs
frstor
int
xchg
push
cmc
jns
cmp
xor
xchg
dec
jg
or
sbb
cwtl
jbe
out
les
and
outsb
xchg
mov
jecxz
lahf
mov
stos
mov
loop
or
fldenv
push
aaa
jnp,pt
in
adcb
pop
or
addr16
mov
xchg
mov
loopne
call
sbb
clc
sbb
out
and
jae
repnz
movsl
push
popa
xorb
push
sub
lea
loope
bound
add
cmovg
nop
mov
into
aad
xchg
and
data16
and
jp
outsb
lods
nop
and
test
or
daa
or
jb
jae
hlt
clc
and
in
push
jg
je
movsl
cmpsl
pop
pushf
fwait
pop
lret
ljmp
fisubs
add
mov
cwtl
into
pop
ja
fwait
and
dec
jnp
inc
leave
dec
inc
cmp
scas
cmpsl
int3
push
push
xor
repz
pop
in
enter
test
mov
cmpsl
in
icebp
push
or
push
jl
mov
popa
xchg
sbb
add
mov
sub
dec
xchg
mov
push
lcall
in
pushf
lea
aas
jnp
sub
cmp
dec
push
aaa
xor
inc
ret
sub
xlat
xor
stos
leave
cmp
int
or
mov
sbb
mov
mov
mov
int3
mov
ds
mov
pop
mov
bound
add
mov
rcrl
js
mov
shl
mov
jecxz
icebp
jge
int
cmp
push
xchg
aas
cmp
mov
xor
xor
loop
stos
jb
sub
neg
lock
popf
lock
sub
pop
mov
xor
xor
sahf
ret
scas
adc
mov
mov
std
and
in
jno
sbb
or
adc
divb
or
in
pop
lods
or
gs
cmp
push
out
and
nop
out
xor
jne
pop
mov
mov
xchg
push
cwtl
rcl
jns
lcall
push
test
jp
scas
mov
scas
pop
fcmovu
inc
pushf
call
and
insb
imul
cmp
adc
ja
jmp
add
push
mov
dec
add
sarl
out
mov
insb
lods
sar
xor
mov
cltd
in
icebp
loopne
adc
imull
data16
mov
sub
es
adc
xchg
rol
popa
xchg
sbb
aaa
or
out
jne
add
or
add
imul
aad
push
aad
insl
in
mov
lret
mov
shl
insb
test
jne
push
loopne
pop
sti
push
std
in
imul
jg
jp
mov
pop
and
adc
adcl
add
mov
sub
cmpl
mov
aas
jl
pop
mov
jns
or
pusha
scas
mov
loopne
sub
int
push
inc
xchg
sbb
pop
adc
mov
shlb
push
shll
repnz
push
xchg
lods
mov
inc
sarl
pop
nop
jns
pop
mov
sub
xor
ljmp
mov
cmpl
mov
pusha
sub
sbb
cmp
or
push
stos
test
mov
int3
outsl
out
int3
nop
mov
xlat
aam
xchg
data16
mov
push
aad
jnp
shlb
pop
ret
add
lcall
jo
fldt
xchg
and
push
in
ret
or
idiv
xor
stos
dec
not
jle
mov
dec
cmp
xchg
psrld
push
nop
test
out
gs
js
or
add
lret
mov
jae
imull
aas
mov
or
and
loopne
inc
and
popf
pop
stc
xchg
sbb
xchg
sub
cs
jne
outsl
mov
dec
popf
rolb
dec
or
outsl
mov
cmpsb
loop
sti
mov
add
testl
mov
dec
pusha
adc
in
adc
pop
andl
lods
scas
push
adc
mov
in
cmp
test
fadds
mov
xor
sbb
lret
sub
outsb
and
dec
addr16
mov
nop
cmp
push
inc
idivl
mov
lea
out
dec
or
cmp
fidivl
nop
lods
inc
mov
jns
xchg
pushf
inc
aam
cmpsl
insb
push
idivb
clc
outsb
jle
or
sar
mov
cmp
dec
in
mov
stos
pop
mov
xor
daa
cmp
std
xchg
or
inc
mov
test
sub
xchg
rcll
mov
mov
aas
daa
pop
mov
dec
mov
push
or
jbe
sub
addr16
into
adc
jne
daa
mov
jne
int
iret
add
adc
jbe
ds
into
or
testb
in
cwtl
xor
sub
loope
lds
add
clc
or
pop
mov
xchg
inc
dec
xchg
add
mov
adc
cmp
mov
std
add
mov
push
adc
fists
push
aad
lahf
pop
cmpsb
out
add
jge
jge
shrb
adcl
lcall
sbb
mov
pshufhw
and
mov
int
test
xchg
test
jno
out
or
or
sbb
and
inc
push
or
mov
arpl
and
repnz
xor
jnp
outsl
or
jl
imul
xchg
add
xlat
xchg
out
test
add
aas
xorb
dec
testl
xor
lods
aam
sbb
outsl
sbb
sbb
rcrb
dec
test
leave
pop
xchg
clc
fwait
dec
outsl
pushf
sti
adcb
push
sub
mov
cbtw
loope
and
jb
sqrtps
pop
cwtl
mov
loop
xacquire
movsl
ds
cmp
sbb
push
pop
push
std
and
push
cmpsl
ret
xchg
mov
lock
les
jmp
loop
and
mov
jns
pushf
or
mov
mov
jg
xchg
dec
arpl
ret
push
mov
push
add
loopne
ret
dec
sbb
das
adc
and
mov
xchg
sbb
dec
mov
jb
aam
jnp
fisttpl
stos
ret
dec
xor
cmp
and
lcall
rcl
inc
btr
jge
in
or
shlb
mov
out
and
add
push
pop
mov
in
pushf
cwtl
mov
je
add
cwtl
cmp
xchg
inc
dec
icebp
aad
ja
fisubl
inc
mov
add
aad
mov
mov
rclb
iret
out
jmp
in
andb
adc
fdivrl
inc
jne
ja
fbld
inc
or
dec
jae
adc
inc
ret
inc
stos
repnz
inc
aad
loope
and
mov
add
ret
jle
mov
mov
sbb
enter
std
in
imul
ljmp
enter
cs
push
loope
xchg
dec
in
xchg
rcll
jbe
dec
out
fwait
loopne
movsb
repz
lds
cmp
or
sub
xor
cld
fimuls
in
pop
or
jo
xchg
repnz
cmp
xlat
add
outsl
inc
iret
dec
lds
adc
daa
scas
inc
in
sbb
imul
fld
movsb
lret
repz
ror
ret
ret
aas
cmp
dec
push
cmpsl
rol
xor
mov
lret
lret
loopne
test
jne
stos
cmp
jae
sub
dec
scas
mov
mov
mov
push
test
dec
sahf
js
loope
xchg
sbb
aas
cmp
or
or
sub
outsl
ss
and
lahf
insb
jno
bound
cmp
scas
push
xor
aaa
rcr
test
and
xchg
mov
repnz
mov
jg
sbb
adc
jp
addb
push
sub
pushf
sub
mov
fwait
sbb
aad
movsb
ja
js
sti
push
xchg
and
in
js
cmp
movsb
fwait
cld
cmp
add
stc
lea
push
xchg
inc
cmp
test
sub
mov
xor
rclb
gs
or
mov
add
cmp
push
fwait
mov
push
test
mov
xchg
arpl
cmp
mov
pop
cmpsb
aad
and
xchg
xchg
dec
sub
and
shl
enter
shll
xor
sub
sbb
add
mov
mov
and
inc
xlat
ss
jge
ficoml
and
loope,pt
and
xor
cmp
fimuls
xabort
jnp
add
pop
lea
jmp
pop
lods
jmp
push
dec
in
push
bswap
sub
lret
les
loope
cltd
lret
and
out
cwtl
xor
cmp
stos
hlt
inc
sub
mov
lock
movsb
mull
and
popf
dec
or
rorl
xchg
std
adc
xchg
jae
test
cmp
dec
xor
mov
imul
add
or
stc
xor
xchg
dec
fsubrp
in
and
adc
ret
and
and
jbe
cmp
and
insb
mov
push
add
imul
adc
xor
sbb
in
popf
gs
aaa
icebp
stc
mov
imul
ss
xor
mov
fstpt
inc
ja,pt
cltd
mov
ret
cld
aas
push
ja
mov
enter
mov
pushf
pop
loop
repz
xchg
rclb
pop
lret
cltd
adcb
jb
mov
vcmpps
add
mov
sarb
dec
in
push
adc
xchg
ss
mov
jae
dec
fcmovnbe
sbb
inc
push
dec
cmp
inc
cs
dec
shl
roll
jbe
pop
data16
mov
hlt
add
push
and
cs
add
shrb
mov
shr
insl
es
mov
adc
mov
leave
xor
dec
test
or
ss
out
stos
dec
mov
test
push
inc
add
fidivrs
cld
test
cmp
mov
fisubs
cwtl
imul
xor
clc
dec
pop
stc
xor
pushf
dec
scas
xorb
lock
pushf
stos
cmp
pop
clc
adc
ret
ljmp
stos
pop
loop
mov
ja
jno
jle
stos
push
mov
mov
rolb
xchg
cmc
dec
test
fcoms
in
out
icebp
pop
inc
push
push
aaa
fisttps
mov
cmp
mov
outsl
push
call
or
dec
xor
std
adc
mov
or
pushf
inc
pushf
mov
mov
fisttps
stc
cmp
cmpsb
push
sbb
lea
je
lcall
sub
test
sub
outsb
pop
jmp
jae
push
repnz
stos
into
jp
rolb
cmp
aaa
mov
in
push
pop
adc
andl
push
cmpsl
pop
call
sbb
imul
cmp
xor
in
pop
mov
popa
sub
push
lret
repnz
rcr
add
test
stos
rcrb
pushf
sub
push
pusha
pusha
push
inc
stc
ja
pop
int
rclb
mov
negb
je
pop
and
push
aas
and
sbb
add
rclb
push
pop
mov
clc
push
push
movsl
inc
jne
mov
insl
test
aaa
pop
sbb
repz
outsl
out
idiv
popl
inc
jbe
cmp
and
js
mov
gs
or
aas
adc
outsb
mov
or
int
jle
jnp
mov
adc
stos
loop
imulb
fucomip
repz
ss
xor
lods
lret
or
push
in
ljmp
mov
int3
mov
push
mov
xor
daa
les
push
ret
sbb
pop
add
sbb
out
lret
fwait
mov
pop
mov
cmp
enter
hlt
cmp
js
repz
int
sbb
cmp
nop
cli
mov
clc
push
es
xchg
mov
das
xor
scas
adc
cmc
and
js
cs
cld
push
fwait
mov
test
mov
jle
inc
xor
movb
imul
fwait
lahf
push
mov
aas
int3
cmpsl
cmp
sub
jmp
test
lds
cli
in
movsb
ret
mov
int
int3
gs
daa
mov
scas
and
and
insl
movsl
call
push
scas
fwait
ljmp
jbe
mov
add
imul
out
int
adc
adc
inc
inc
push
dec
sbbl
rorl
jecxz
xchg
add
jecxz
icebp
stos
aad
rcrb
lds
dec
cmpb
pop
sub
subl
jne
pop
xchg
dec
psraw
rep
inc
out
xor
or
add
jae
movl
in
adc
jmp
xlat
jo
mov
lcall
test
and
shlb
push
out
bound
mov
rclb
inc
pop
je
mov
lret
addr16
mov
and
and
enter
int3
stc
pusha
cmpsb
cmp
dec
cld
aam
cs
mov
jl
int
notl
xor
les
mov
mov
mov
in
mov
sub
js
jl
dec
rclb
xchg
incb
into
mov
iret
incb
push
or
mov
gs
adc
push
mov
xchg
shlb
dec
mov
fcomp
les
je
gs
dec
cmp
enter
repz
int3
push
adc
lret
les
xor
add
aad
push
lods
dec
into
inc
adc
xchg
mov
notl
cltd
sub
daa
icebp
dec
and
jae
orl
insb
cwtl
jl
test
push
mov
lcall
mov
das
repz
rclb
mov
call
orb
or
cmp
sti
add
adc
xchg
push
sub
cmp
fistpl
loopne
pusha
xchg
xchg
push
cmpsl
sub
in
xor
and
arpl
lods
or
test
mov
es
sbb
push
dec
push
int3
cli
orl
insb
out
lret
rcrl
xchg
jbe
sub
rep
inc
dec
arpl
outsl
insl
mov
mov
clc
sub
les
je
jmp
xchg
fwait
mov
stos
insl
mov
rcll
add
and
into
sub
lret
jp
sub
inc
int
into
sbb
pop
dec
inc
loop
adcl
fmulp
inc
and
cmp
add
sub
jg
sbb
xor
xor
rcll
negb
mov
lret
outsl
and
sahf
ljmp
mov
out
xor
xchg
jo
jmp
das
pop
pop
mov
outsb
ret
adc
jmp
push
push
popf
ret
cmp
lret
mull
inc
sub
mov
fldl
sub
stc
sarb
xor
mov
sub
stos
mov
sub
test
stc
movsl
add
jmp
bound
arpl
inc
scas
cmc
inc
ret
sbb
xor
fchs
nop
cmp
ss
mov
stc
std
pop
fs
inc
les
inc
or
scas
lret
in
push
roll
mov
hlt
adc
sahf
and
pop
lahf
mov
mov
jns
sbb
lret
adc
push
jecxz
int
mov
push
clc
icebp
push
out
and
aaa
jnp
push
insl
push
sti
mov
push
sbb
insb
je
leave
or
xor
push
popa
faddl
sbb
add
sub
xchg
xor
adc
js
sub
shrl
and
add
mov
test
jnp
push
repnz
fsubrl
mov
pop
test
popa
mov
jnp
in
int3
ficompl
and
dec
adc
push
aam
mov
ljmp
push
jb
out
fs
popf
dec
jp
push
outsb
jg
scas
add
ja
pop
mulb
in
es
adcl
ja
mov
cmp
pop
sarb
cwtl
pop
lock
add
inc
xor
inc
fs
jne
mov
jg
cmpsl
and
repnz
xchg
shlb
dec
icebp
lahf
xchg
popf
mov
imul
je
and
xorl
xor
jmp
aas
stos
je
ss
mov
mov
dec
inc
rclb
mov
cltd
aad
imul
stc
lret
clc
pop
jo
js
pop
test
cmpl
ss
mov
xchg
mov
in
fbld
lods
gs
mov
loopne
ret
lods
ret
jp
mov
mov
mov
add
pushl
fwait
sahf
shl
andl
mov
dec
cld
inc
inc
mov
in
inc
leave
lcall
lahf
shrl
pop
out
mov
popf
jmp
fxch
int
adc
xor
pushf
mov
xchg
insb
lret
mov
das
bound
out
xchg
fcomps
and
in
add
sahf
xor
inc
xlat
pop
aas
orl
ret
mov
arpl
push
mov
scas
shrl
pop
pop
popf
jbe
and
add
mov
lret
mov
mov
insl
xchg
dec
sub
out
or
in
adc
mov
mov
inc
into
mov
cmp
dec
ret
push
mov
rcrb
cmpsb
sar
push
and
mov
aam
xchg
adcl
jne
fistps
test
dec
es
push
add
lret
gs
hlt
mov
leave
cmpsb
add
and
out
xchg
cmp
in
mov
fmuls
jl
movsb
mov
mov
nop
aas
hlt
jb
js
sbb
fnstsw
cwtl
and
mov
cmpsb
inc
add
hlt
shll
sahf
jle
into
sahf
adc
mov
lea
cltd
pop
inc
jbe
xlat
cmc
ror
dec
daa
shrb
inc
negb
dec
pop
pop
xor
xlat
addb
lods
rcrl
xorb
xor
cmp
test
push
repnz
cld
xor
cmc
test
jl
cwtl
jo
mov
dec
mov
scas
add
fisttps
nop
add
sub
sahf
or
mov
aam
dec
mov
jle
ljmp
test
aaa
inc
movsb
cmp
mov
pop
push
roll
and
push
loop
mov
scas
dec
xor
jne
mov
das
loopne
loope
lods
pop
outsl
cld
lret
xchg
test
mov
fwait
xor
sub
sub
xchg
xorb
inc
xor
add
dec
adc
push
pop
push
ss
ds
add
loop
sbb
imul
and
jle
add
push
jo
sub
push
ja
push
and
sub
push
scas
faddp
repz
rcr
into
arpl
mov
cmp
sub
mov
jg
or
leave
mov
mov
in
adc
out
mov
roll
add
dec
repnz
cmpsl
sub
test
rorb
sahf
addr16
sarb
xchg
mov
negb
insl
jne
sbb
rcll
imul
imul
loopne
xor
mov
mov
hlt
insb
dec
and
stc
and
inc
lods
push
jecxz
add
inc
imul
inc
dec
push
out
push
and
or
jbe
fsubl
mov
mov
mov
push
jp
mov
fadds
icebp
mov
data16
stos
cmpl
cmpsl
fwait
gs
sub
test
inc
jae
or
lahf
sarb
jb
int3
inc
dec
adc
sub
aad
test
loop
mov
cmp
pop
inc
jnp
jmp
out
sub
lods
xor
mov
or
je
jo
stc
cmc
inc
inc
dec
jae
int3
std
xor
pop
xlat
xchg
pop
lcall
into
or
pop
or
jns
adc
add
clc
addr16
jns
shlb
sub
scas
lahf
fisubrs
xor
shll
pop
test
mov
shll
mov
es
inc
lds
loop
or
dec
cmpsb
cmp
pop
fsubl
outsl
incb
fxch
movsb
std
mov
in
clc
or
push
sub
scas
ret
jb
loope
cmp
fadd
push
inc
hlt
and
pop
hlt
rcll
pop
adc
xchg
pop
xchg
adc
cmp
lret
cmp
xlat
sbb
cmp
out
lock
push
mov
outsb
push
mov
mov
cmp
pusha
andl
mov
test
mov
call
cli
popa
push
lds
cwtl
and
mov
jmp
int3
push
jo
addr16
mov
insb
dec
mov
ja
add
sarb
lds
mov
out
and
mov
ficomps
out
sub
add
xchg
mov
lea
jbe
lea
cmpsl
jno
xor
fcoms
mov
data16
cmpsl
dec
ficompl
mov
rcll
pop
cwtl
pop
and
mov
ret
mov
pop
push
add
xchg
out
ja
sub
lock
and
jp
cmp
data16
mov
fsubr
adc
loopw
rcrb
out
mov
push
imul
js
in
pushf
xor
dec
sahf
push
or
or
stos
in
out
test
sbb
jbe
sti
idiv
addr16
inc
pop
fdivrs
cmp
jl
and
mov
fdivrl
lcall
movb
stos
xor
icebp
dec
mov
in
or
in
pusha
inc
jbe
mov
int
aam
lds
sti
pop
in
sbb
adc
out
ds
imul
and
fldt
lahf
es
jns
or
mov
mov
or
sub
fmull
int3
ds
and
daa
mov
mov
iret
or
add
gs
mov
jmp
cmp
xchg
inc
pop
out
sub
insl
nop
inc
in
add
or
sub
dec
xchg
out
repz
mov
pop
sbb
sub
add
push
cmpsb
arpl
pusha
inc
ud0
xchg
icebp
std
mov
push
xor
pop
sbb
mov
mov
mov
or
stc
enter
pop
sti
add
bound
jo
insb
enter
repnz
push
cmp
out
adc
cmp
adc
loop
pop
push
fcmovb
sbb
call
test
and
lcall
or
adc
push
adc
enter
sarb
pop
mov
add
mov
icebp
and
fidivrl
add
into
clc
daa
adc
jno
and
jecxz
out
or
imul
sarl
push
imul
leave
or
xchg
sbb
cmp
mov
mov
dec
xor
xor
repz
dec
iret
cmp
xor
xor
ljmp
jle
mov
clc
in
lahf
leave
sub
push
in
jbe
call
jecxz
fildl
cmp
xchg
cmp
or
mov
add
sub
mov
adcb
pop
repz
data16
dec
or
icebp
dec
aaa
orb
dec
push
add
jno
push
jae
leave
popf
pop
test
inc
je
push
jno
xchg
push
cmc
dec
cmp
mov
daa
repnz
flds
outsb
stos
leave
xor
push
arpl
gs
mov
jecxz
jnp
js
les
and
cld
xorb
sbb
pop
sub
aas
les
push
call
out
test
jg
std
xchg
int3
adc
xchg
xor
ror
mov
jnp
fwait
add
push
iret
sub
jg
loope
inc
icebp
jge
adc
jae
push
scas
mov
scas
pushf
push
ds
xchg
cld
je
pop
xchg
mov
pop
pop
cmc
in
repnz
xorb
mov
mov
icebp
popa
add
cmpsb
push
sbb
or
push
mov
pop
in
mov
sbb
jo
xlat
cmp
push
adc
adc
mov
clc
das
mov
adc
leave
lret
out
add
test
icebp
push
dec
push
outsl
daa
sbb
shl
push
fistps
ret
in
mov
bound
cltd
adc
addr16
lds
stos
dec
xchg
pop
xor
outsb
fstp
sbb
lock
out
aad
pop
adc
pop
or
lret
mov
stc
adc
jge
fbld
dec
stos
mov
addb
sub
loopne
in
testl
mov
insl
sub
andl
cmp
popf
fstpt
iret
out
cmp
mov
inc
out
push
in
pop
push
xor
push
int
or
lds
leave
test
movsb
mov
loopne
xlat
icebp
mov
test
inc
adc
jbe
push
push
repnz
ljmp
lcall
cmp
sub
movsl
xchg
jae
scas
cmp
mov
sbb
lret
pop
repnz
adcl
sbb
leave
add
jae
fidivs
neg
popa
or
jl
icebp
push
cmp
xor
stc
movsb
pop
out
push
xor
add
ljmp
pusha
mov
inc
imul
subb
out
lea
mov
call
adc
push
push
lock
mov
fdivs
inc
cmc
addr16
sub
dec
rcll
cmpsb
loope
les
sbb
nop
lcall
cld
popa
lcall
repnz
cli
sarl
inc
xchg
sbb
jo
mov
out
lcall
out
out
jmp
adc
mov
test
ljmp
sarb
mov
lahf
pushf
in
push
cltd
dec
mov
xchg
sarb
mov
fstpl
mov
dec
adc
mov
das
mov
aas
into
push
xor
es
mov
sbb
push
mov
mov
loopne
adc
into
or
cmc
lret
cmpsl
add
xchg
or
data16
fcomps
iret
adc
mov
popf
mov
xchg
jge
lahf
inc
insl
ja
inc
dec
push
lock
int3
std
mov
jg
std
imul
push
dec
pop
pop
mov
dec
xchg
push
aad
out
xor
mov
ja
pop
pop
add
and
pop
push
dec
add
dec
ret
sub
cmpsb
add
xchg
and
push
pop
mov
aad
and
mov
sahf
ds
fldenv
or
or
rorl
fists
mov
pushf
je
mov
fsubl
xchg
jo
jp
orb
es
movsb
xor
ds
adc
pop
push
test
std
mov
or
sub
sbb
mov
mov
lret
adc
pushf
inc
lahf
push
adc
adc
or
inc
ds
inc
movsb
cmp
dec
sbb
jl
xchg
jae
pop
jne
cmp
jns
lds
adc
mov
rclb
gs
int3
mov
jns
test
mov
imul
dec
pop
icebp
addl
mov
xor
enter
jnp
dec
divl
xchg
mov
dec
xchg
pop
mov
or
pop
jne
insb
push
add
ds
loopne
mov
lods
lret
fs
cmp
imul
xlat
insl
dec
gs
popa
lea
ret
ds
movsl
es
insb
fwait
inc
scas
rorl
fimull
inc
dec
jno
addr16
loope
stc
pushf
sbb
jl
mov
imul
xor
orl
adc
add
push
cltd
test
mov
add
lcall
sub
iret
inc
mov
enter
divb
xor
add
out
gs
movsb
add
iret
dec
jg
mov
push
jbe
ds
bound
in
dec
fsubrl
cli
xor
mov
adc
cli
pushf
inc
test
xchg
jl
int
enter
mov
xchg
cli
and
xor
sbb
push
lahf
mov
sahf
fcomip
pop
jp
fidivl
or
mov
adc
out
jno
sub
lea
outsw
pop
cmp
xor
inc
jecxz
stos
inc
add
dec
jge
xor
cmp
les
fcoms
loopne
inc
push
jle
negb
bound
mov
or
push
out
bound
adc
push
sub
jl
xchg
and
push
daa
roll
mov
xor
test
gs
test
outsb
jmp
sbb
fst
jno
pop
mov
fwait
gs
add
je
cmp
in
dec
in
test
scas
fistl
lods
movsb
loop
add
jne
pop
mov
imul
aas
cmpsl
jmp
adc
aaa
ficomps
addr16
mov
cwtl
imul
xor
fcomi
movsb
in
ljmp
add
ljmp
pop
rcrb
arpl
imul
test
aad
dec
roll
push
out
pop
push
push
lret
cmp
inc
lret
dec
decl
cmp
fwait
lods
mov
push
or
adc
pop
movsb
inc
imul
xchg
sub
fiadds
cmp
test
add
inc
insb
mov
ret
push
xchg
loope
xchg
das
cmc
daa
or
mov
sti
lock
gs
icebp
ljmp
jnp
dec
sbbl
arpl
loopne
sahf
pop
mov
js
loopne
scas
xor
sub
push
add
xchg
mov
testb
loop
mov
ljmp
movsb
mov
xchg
leave
popa
push
bound
xchg
mov
imul
jnp
fcmovb
ret
bound
icebp
insl
cmc
data16
mov
xlat
icebp
outsb
mov
or
adc
add
call
dec
mov
arpl
adc
in
jecxz
aaa
sti
sub
jno
movsl
in
addr16
cltd
js
xor
test
cmp
mov
push
mov
ret
call
movsb
mov
jg
xchg
sub
imul
sub
jns
add
test
mov
xchg
in
push
add
push
cmovl
movl
imul
loope
lea
cmp
popl
inc
les
and
add
pop
cmp
and
test
mov
into
push
stos
xor
fsub
and
comiss
stc
pop
lret
push
sbb
outsb
cs
aaa
rorb
cmp
test
cmp
inc
add
jecxz
int
mov
das
rcrl
icebp
ljmp
push
dec
mov
repz
sub
inc
push
fwait
sbb
push
push
inc
sub
xchg
je
or
test
push
push
sbb
push
stos
mov
out
leave
pop
fisttpl
movsl
sbb
inc
mov
cmp
jbe
scas
mov
lea
shr
mov
add
push
inc
push
cmp
xchg
xlat
push
jp
out
nop
adcl
sbb
pop
scas
and
push
movsl
jl
mov
in
inc
dec
cmp
xlat
dec
dec
fsts
stos
cmpsl
add
popf
lds
sub
sbb
pushl
call
lods
dec
dec
sub
push
cmpsb
int
cmpsl
loope
movl
clc
mov
icebp
push
xor
test
sub
hlt
ret
sbb
cmp
cmp
fsubrs
or
mov
mov
leave
iret
mov
sbb
dec
movsb
xchg
lret
adc
fs
lret
out
in
cmpsl
inc
mov
stos
jns
sbb
fstp
ret
jbe
push
js
push
cmpsl
ljmp
push
dec
sub
push
add
dec
mov
dec
dec
fnsave
in
cmpsb
fisubs
mov
add
outsl
push
addr16
addb
dec
in
stc
hlt
cmp
popa
pop
jnp
outsl
adc
aam
scas
xchg
and
cwtl
sbb
xor
jge
xchg
add
sub
jae
push
and
push
imul
push
push
mov
xchg
sub
cltd
stos
adc
popa
mov
test
jb
sub
push
push
fcoml
jb
pusha
idiv
inc
push
cmp
xchg
rcl
xor
dec
cmc
jecxz
push
mov
dec
loope
cmp
sub
sub
sbb
out
sub
adc
cmp
or
dec
or
jbe
and
lret
jb
ja
shll
xor
pop
inc
mov
idivl
and
pusha
and
icebp
hlt
fisttpl
sbb
and
shl
push
aas
insl
fdivrs
sub
out
pushf
fcoml
pop
jmp
mov
mov
shr
cli
pop
xchg
pop
leave
add
test
adc
mov
mov
and
pushf
add
sbb
loope
cwtl
jp
dec
mov
out
ret
inc
mov
ret
aad
jecxz
rorl
pop
xchg
cmp
dec
xchg
gs
jmp
push
xorl
scas
test
vdivss
jge
fstpl
and
dec
clc
and
jo
lcall
push
lods
fs
xchg
js
xchg
testl
adc
call
addl
int3
mov
rcl
mov
push
cltd
pop
xchg
sbb
dec
jge
aas
xlat
pop
jo
testb
shll
sub
fwait
arpl
or
cld
je
cmp
xchg
outsl
push
jne
mov
mov
lds
xlat
jae
lea
jnp
jnp
cmp
packssdw
jl
add
out
aam
sbb
shlb
mov
jg
mov
mov
mov
lahf
add
nopl
lcall
add
sbb
shll
loop
jecxz
out
inc
inc
mov
xchg
nop
rcl
adc
call
fxch
test
lods
inc
pop
dec
push
pop
sbb
in
lds
cmp
push
inc
add
mov
data16
imul
jne
ljmp
stc
add
imul
push
cmp
cmp
push
xchg
pop
aaa
fnsave
test
xchg
notl
cmpb
xchg
mov
fildll
insl
or
fbld
xchg
lock
pushf
fimull
inc
pushf
pushf
fmuls
pop
push
fldt
sbb
cmp
rolb
rcrl
mov
and
shrl
sub
xor
dec
imul
add
mov
mov
sti
push
push
test
imul
cmp
mov
xor
xor
pop
push
add
jp
add
repnz
dec
inc
out
pusha
and
rcrb
push
pop
loopne
hlt
ret
fcmove
pop
mov
add
push
xor
pop
jle
pusha
cmp
leave
jo
testb
addr16
lods
dec
outsb
daa
std
jp
ss
push
hlt
clc
pop
jle
and
lea
stos
sahf
ficompl
test
xor
pop
dec
test
out
lock
push
cmp
ss
push
adc
add
rcrb
aad
xor
and
aaa
scas
mov
inc
insb
sbb
add
shlb
mov
imul
pushf
lcall
xchg
inc
and
xchg
aam
mov
mov
xchg
sub
mov
mov
dec
ds
std
ror
jle
jne
leave
js
mov
dec
and
dec
mov
je
mov
subl
push
sub
addr16
ret
shrl
loope
pop
sub
inc
or
inc
mov
mov
push
adc
std
cmp
sbb
mov
fidivs
out
fistl
ror
cmpl
enter
and
adc
shlb
lods
out
cmp
cmp
mov
test
fdivl
sbb
lcall
or
xor
jnp
mov
lods
xchg
and
stos
sbb
cs
shr
pop
push
sub
popf
loopne
loop
lds
push
js
and
aas
clc
dec
xchg
jecxz
lds
and
jbe
sub
mov
movsl
pusha
sbb
mov
mov
mov
adcl
and
sbb
ret
fs
les
enter
or
orb
mov
insb
xor
js
sbb
packsswb
mov
pop
mov
xchg
xchg
into
adc
add
loop
pop
jb
and
sub
outsb
pop
push
jae
lds
sbb
jge
jmp
ljmp
push
or
fucom
popf
cmp
lods
popf
int
lahf
xor
push
add
filds
pop
xchg
in
bound
xchg
pop
nop
cli
and
cmp
mov
cli
pop
insl
out
aaa
movb
jae
xchg
jg
mov
push
jmp
and
in
and
jle
clc
ss
pop
out
xchg
fistps
add
std
mov
cmp
sbb
cltd
jae
cld
insb
int3
mov
pusha
ss
add
pop
push
les
sub
mov
pop
lock
jecxz
stos
mov
sti
push
negb
jne
inc
arpl
rcrl
movsb
cmc
cmc
and
call
ret
ffreep
in
test
sub
jle
cmpsb
cmc
xchg
rclb
mov
testl
scas
adcb
jmp
or
inc
adc
push
jecxz
dec
sarl
mov
incb
mov
cmpsl
xchg
mov
dec
repnz
xor
pop
in
loop
stos
dec
jne
mov
push
mov
jle
jnp
pop
andb
in
das
pop
adc
push
leave
and
mov
hlt
jecxz
mov
jg
dec
jle
cmc
out
repnz
mov
fimuls
push
and
popf
les
xor
mov
or
push
clc
cmp
imulb
adcl
cmp
and
mov
mov
jg
std
lds
mov
cld
loop
imul
shll
cld
xchg
icebp
sbb
imul
xlat
and
cld
stc
test
add
jnp
jb
dec
sahf
ss
xchg
out
xchg
mov
popa
jae
test
mov
inc
imul
push
das
mov
xchg
add
jg
mov
lods
cmp
or
sub
gs
sbb
sub
cmpsb
mov
jne
and
fadd
pop
clc
dec
sub
sub
fsubs
in
cld
mov
pop
or
and
divl
stc
movsb
aam
shll
push
add
jle
sbb
das
xchg
add
jmp
jne
cmp
mov
aam
in
cltd
xchg
xor
sbb
fisubs
jge
decl
add
sbb
popa
push
mov
test
imul
push
cmpsl
stos
pop
lret
ss
dec
add
mov
xchg
fistl
sub
sti
sub
mov
mov
lods
pop
repnz
inc
xchg
insl
sbb
inc
lea
xchg
push
out
test
xor
jecxz
xchg
mov
push
je
cmp
xor
jae
fnstsw
mov
pop
add
aad
mov
inc
lods
ds
xor
sub
sub
data16
dec
jbe
notb
pshufw
adc
cs
sti
sub
push
enter
cmp
xor
dec
ret
into
or
mov
pop
enter
inc
xlat
test
inc
inc
xchg
dec
sahf
add
adc
imul
inc
or
lods
subl
aam
jl
inc
shrl
aad
jge
sbb
test
jnp
test
xchg
fld
add
pop
adc
push
arpl
sarl
pushf
out
pop
adc
jp
popf
jecxz
dec
outsb
mov
mov
cmc
add
and
xchg
sub
push
movsb
jle
pushf
aam
mov
cmpsl
call
mov
std
cwtl
ljmp
xor
ja
cmp
sub
clc
cmp
mov
sub
adcb
leave
push
dec
cmp
and
mov
pop
sbb
xlat
pushf
jne
or
loope
fildll
pop
adc
add
in
xor
test
sbb
test
inc
testl
jp
adc
adcb
aas
jecxz
andb
add
mov
mov
xor
cmp
jp
add
sarl
dec
cltd
sbb
jl
cltd
decl
sbb
ljmp
data16
pusha
hlt
pop
movsbl
test
add
or
jmp
adc
push
fsubrp
test
xor
std
sbb
add
outsb
push
mov
sub
adc
loop
sub
sarl
xchg
mov
mov
jo
dec
mov
adc
fsubrs
aaa
sti
mov
scas
outsb
push
andb
hlt
xor
dec
scas
sbb
js
shlb
js
mov
sahf
lds
je
mov
das
sbb
pushf
inc
sbb
fmuls
jg
pusha
pop
add
dec
icebp
in
ret
aam
nop
xor
sarb
addb
mov
out
xchg
xlat
push
divb
push
icebp
mov
jns
mov
loopne
adc
gs
mov
jns
arpl
mov
repz
int3
mov
lret
clc
add
sbb
xor
insb
ror
dec
es
inc
xor
or
ja
pop
inc
pop
std
sar
jmp
push
push
cli
mov
lret
or
and
test
dec
cwtl
idivb
loopne
mov
cmp
mov
fildl
in
imul
add
clc
shlb
jbe
adc
inc
pop
mov
push
fisubl
xor
mov
push
xor
pop
xchg
mov
pop
js
mov
pusha
and
adc
jle
inc
nop
and
inc
popa
adc
ja
aas
shl
cmpsb
jnp
xchg
mov
push
mov
aas
jl
outsb
cld
mov
cmc
movsl
cwtl
lock
movsl
jae
fst
push
xlat
les
sub
jnp
jno
mov
movsl
add
out
push
sub
jnp
sbb
mov
or
ljmp
insb
jo
sbb
ja
mov
fs
or
dec
jecxz
jge
imul
inc
lock
int3
cmovno
mov
cld
jge
das
incl
loop
dec
xor
xchg
lret
in
ja
mov
push
decl
stos
stc
in
lock
push
loop
das
es
fimuls
pusha
mov
xor
popa
push
inc
test
fiaddl
inc
dec
loopne
addr16
sti
cmp
js
inc
fwait
mov
inc
xor
iret
inc
sbb
gs
arpl
adc
lea
jb
add
stos
dec
les
cmc
bound
adc
fwait
ds
mov
mov
xchg
xor
adcl
dec
shl
adc
inc
push
push
loopne
imul
mov
mov
mov
lret
aad
cmpsb
aad
jecxz
inc
jle
aaa
inc
mov
aad
mov
mov
rclb
lret
out
mov
sarl
adc
sub
push
xchg
int
mov
mov
sub
outsb
mov
add
mov
mov
adc
cmp
inc
xor
jmp
mov
jae
add
cmp
push
fmuls
aaa
mov
xchg
pop
sub
xchg
ljmp
mov
inc
and
leave
sub
out
cmpsl
sbb
cmp
push
icebp
dec
or
repz
movsb
xchg
push
out
pusha
or
stos
mov
mov
movb
or
insb
stos
incb
mov
jae
xor
test
push
stc
fwait
decb
bound
fsubp
push
cmp
push
call
scas
lds
lods
xchg
xor
or
repnz
push
negb
mov
mov
jecxz
jae
sti
jp
fs
mov
inc
push
pusha
lock
cltd
inc
jbe
inc
ljmp
es
insb
and
loopne,pt
and
out
imul
sub
push
lds
jl
fdivs
jge
cmc
test
cmpsl
loop
mov
aas
stos
push
in
sahf
call
xchg
xchg
jecxz
lods
push
inc
jne
push
dec
cmp
add
fsubrs
roll
mov
insb
mov
es
jns
cld
sbb
cwtl
out
lcall
popa
mov
ret
sti
push
mov
push
mov
sbb
pop
dec
dec
rorb
outsb
mov
jecxz
xor
cs
icebp
add
push
cwtl
test
aad
push
std
dec
or
or
jp
std
xchg
xchg
imul
pop
dec
sbb
dec
fwait
pop
xor
orb
inc
test
xchg
movsb
inc
stos
mov
add
dec
stos
pop
sbb
push
lods
dec
jmp
add
les
pop
add
push
std
in
iret
aaa
add
mov
cmpsb
mov
call
add
dec
lds
jp
rcll
test
rorb
and
clc
arpl
adc
jb
sub
aad
pop
xchg
in
jnp
mov
jg
sbb
inc
fldenv
jno
les
push
lahf
push
push
or
mov
pop
je
cmpsb
stos
pop
test
push
and
sub
fists
sbb
xchg
pop
movsb
push
add
rorb
push
ss
mov
push
mov
sub
rclb
and
xor
mov
push
enter
dec
fistpl
mov
jle
std
push
sti
loope
fistps
push
lret
or
enter
mov
xor
int
scas
push
pop
cltd
lret
pop
sbb
mov
pop
je
mov
sub
pusha
dec
xor
call
fs
stos
mov
std
jo
jbe
push
test
rorb
adc
lods
jmp
mov
fistpll
lea
or
add
pop
fs
inc
push
dec
scas
jg
into
mov
nop
jbe
inc
or
movl
add
idivl
push
lcall
adc
mov
inc
loop
popf
out
fists
je
cmp
push
cs
add
add
lods
inc
fimull
mov
xchg
xor
xchg
sahf
lock
shl
adc
arpl
or
ss
pop
cmp
xor
mov
popa
out
push
outsl
scas
sub
cwtl
ja
std
jo
stc
xchg
and
jge
adc
jb
call
xor
xchg
rcl
pop
add
lods
pop
les
icebp
inc
fldlg2
mov
add
sbb
push
test
cmp
aad
sub
in
inc
rcl
repz
shl
imul
sub
add
test
or
in
scas
xor
shlb
orl
ss
jg
xchg
adc
adc
xchg
insl
cmp
subb
cmpsb
jb
sahf
cmp
add
adc
add
cmp
aad
ret
push
add
add
adc
cwtl
sbbl
loope
outsb
cmp
ja
pusha
add
out
rcrl
loope
cmpsl
inc
mov
cmpsl
push
pop
push
jne
out
into
sbb
mov
int
xchg
psllw
vpshaw
jne
xor
mov
and
mov
stos
and
into
test
mov
test
cmpsl
sbb
mov
shll
sbb
mov
jmp
xchg
or
shl
jnp
xchg
sub
push
mov
xor
out
cmp
leave
adc
or
inc
push
and
mov
lcall
push
fldcw
pop
add
std
cs
lahf
jg
pop
iret
mov
inc
rolb
fldl
aam
aas
cwtl
aaa
mov
push
sbbb
push
loope
mov
lret
jecxz
add
fstl
sub
mov
mov
aaa
movsb
test
loope
das
addl
mov
inc
dec
dec
out
xchg
dec
mov
mov
lock
orb
xchg
and
mov
adc
sbb
loop
dec
push
in
sti
aas
inc
ret
sbb
repnz
das
mov
and
jne
pop
sbb
fdivrl
adc
ljmp
xchg
push
jo
adc
outsl
imul
jp
mov
aaa
pop
je
and
out
fidivs
dec
enter
xchg
ret
sub
pop
push
sahf
xor
fprem
pop
mov
add
stos
or
xlat
fsubrs
cmp
arpl
or
pop
imull
xchg
jmp
jmp
iret
push
adc
mov
fwait
mov
xchg
imul
add
push
mov
das
push
pop
xor
into
mov
mov
les
cld
aad
ret
pop
lods
jns
and
push
stc
xchg
inc
sub
test
inc
sti
or
jb
push
int3
addr16
shlb
dec
mov
and
jnp
xor
pop
shl
jmp
push
loopne
les
aad
les
repnz
mov
mov
pusha
loopne
cld
and
pop
fs
sbb
fists
test
in
repz
ffreep
jmp
dec
mov
dec
push
pop
sbb
sbb
xlat
cwtl
push
test
call
lods
into
adc
lds
aaa
mov
jl
out
cmp
out
mov
icebp
sbb
lret
daa
out
sub
cs
push
bound
ds
and
loope
jb
dec
out
add
and
mov
pop
adc
movl
mov
push
sarb
jmp
and
insl
shrl
mov
xchg
mov
push
jb
sub
jnp
sbb
jmp
sti
adc
add
mov
jp
insl
mov
adc
mov
inc
fnstsw
push
or
dec
lahf
cmp
imul
adc
out
outsb
pop
xchg
push
xchg
inc
shrb
jb
mov
dec
jnp
xor
stos
mov
jmpw
inc
add
out
movsb
cs
mov
sbb
stos
popa
sbb
push
cs
lret
mov
cmp
stos
out
push
stos
inc
fs
test
andl
mov
sub
mov
fidivl
mov
dec
cli
mov
pop
bound
adc
fistl
dec
scas
lcall
dec
xchg
mov
shr
jp
cwtl
mov
dec
jl
je
sub
adc
xchg
cmpsl
lret
lock
add
add
in
jmp
aam
mov
scas
in
ss
add
test
scas
cld
les
jne
fs
aaa
int
add
jns
aaa
shrl
lds
add
or
ret
or
mov
sbb
sbb
int3
cld
or
sub
mov
test
fnstenv
dec
cli
rcrl
xor
enter
insl
in
sub
scas
cs
xchg
nop
mov
cld
mov
in
push
lcall
shl
ljmp
dec
shlb
shll
or
cmc
sbb
sub
daa
roll
xchg
dec
ja
cmc
bound
pop
pop
divb
cltd
mov
dec
loop
add
sub
in
sub
jp
sub
fs
addr16
in
sbb
popa
xchg
mov
ror
in
popf
ret
and
sub
mov
rcrb
mov
mov
push
cwtl
mov
dec
mov
pushf
xor
or
sub
and
iret
out
push
insl
aad
aaa
cmp
inc
pop
fbld
das
xchg
test
popf
sub
sbb
fdivrs
jae
sbb
ja
scas
ficoml
dec
rcr
lret
sti
leave
cmp
iret
jecxz
xor
cmp
mov
shll
inc
popf
push
clc
add
arpl
fildl
inc
sub
fbstp
pop
aam
shll
int3
lock
fadds
mov
mov
and
iret
mov
mov
push
pushf
movsl
ss
in
jle
leave
je
or
jp
xor
scas
mov
inc
pusha
mov
ljmp
jnp
mov
std
xchg
sbb
bnd
dec
dec
or
pop
loop
lret
pop
jo
xchg
sbb
mov
or
jp
xlat
adc
nop
lret
push
push
adc
mov
push
pop
das
imul
leave
fisubl
push
add
adc
mov
mov
inc
mov
inc
andl
inc
xor
aas
inc
outsb
popf
test
fidivs
fxch
adc
cwtl
idiv
incb
jp
fmull
movsl
inc
jl
inc
fldl
dec
in
in
ss
es
shll
or
jg
jmp
pop
cmc
cmpsb
icebp
mov
adc
sub
jecxz
addb
inc
mov
jge
sarl
xor
scas
and
ds
aas
pop
dec
xlat
scas
push
insl
cmp
dec
iret
jnp
jnp
ret
fstps
adc
adc
push
out
sbb
cmp
or
push
and
jg
fstps
clc
sub
nop
jbe
jbe
sahf
cli
push
xor
ficoml
dec
popf
addr16
jno
pusha
mov
fwait
or
add
mov
push
mov
mov
insb
shll
scas
shlb
push
scas
mov
inc
push
mov
mov
hlt
shlb
movsl
xor
inc
data16
cmp
fldenv
dec
pop
rcrl
jno
xor
fmull
jmp
add
je
sub
test
sti
imul
push
mov
subl
sbb
jae
jmp
and
lea
adc
loopne
jb
cmp
push
iret
outsl
mov
std
scas
shl
insb
mov
imul
sbb
gs
adc
pushf
mov
neg
scas
loope
pop
addr16
cmp
mov
pop
cmp
push
mov
add
add
pop
push
push
fimull
dec
push
jne
hlt
into
imul
mov
fcomps
and
movsl
sbb
enter
sub
adc
scas
into
xchg
sbb
pop
pop
cmp
mov
xchg
adc
inc
gs
dec
ljmp
repnz
adc
xchg
mov
cmp
mov
clc
cmp
push
clc
or
adc
sub
cmp
cmp
es
mov
fildl
ljmp
jmp
mov
outsl
leave
lock
push
mov
mov
and
test
and
repz
inc
add
jo
pop
jecxz
jge
pop
dec
int3
push
sbb
push
add
and
add
test
addr16
mov
push
sub
push
adc
cmp
sub
xor
push
jae
push
xchg
inc
xorb
pop
insb
inc
mov
lret
and
xchg
and
add
notl
push
sub
mov
mov
inc
ficomps
iret
mov
fiaddl
lahf
push
jmp
aad
popa
ds
enter
fs
xchg
lret
shrl
sti
sub
jmp
sub
lret
and
hlt
faddl
push
flds
gs
xor
cmp
mov
call
sahf
and
pop
rolb
in
lahf
leave
or
mov
mov
std
cmp
or
ljmp
jo
out
loop
jnp
jecxz
mov
sub
mov
lock
jno
or
test
sbb
shlb
add
add
into
sbb
test
sub
pushf
dec
sbb
ret
cmp
leave
mov
pop
sahf
cld
sahf
imul
lock
jmp
or
push
jne
data16
pop
dec
je
cmp
fistpll
jl
lock
mov
sbb
xchg
idivl
adcl
shrl
sub
xchg
sub
loopne
push
xchg
cmpsl
mov
aad
ret
pop
ficomps
out
enter
cld
xchg
popa
data16
ret
lods
xor
dec
stos
cmpb
pop
dec
push
adc
mov
dec
call
mov
ds
leave
pop
xchg
sbbl
mov
mov
add
daa
or
dec
xor
pusha
test
dec
jno
outsb
testb
xchg
aad
dec
das
sarl
jo
adc
xchg
popf
stc
ret
adc
cltd
xchg
pushl
mov
xchg
cmpb
out
cmp
fisttpll
sub
ror
sar
call
adc
movsb
jbe
movd
mov
shll
punpcklbw
mov
in
dec
dec
jmp
stc
clc
sbb
ret
inc
cld
icebp
rcr
mov
push
sbb
push
ret
incl
lret
pop
sbb
ret
lods
xor
shrb
xchg
call
cli
or
fnstenv
inc
lods
imul
les
es
cmpsb
ja
cld
adc
jbe
sbbb
or
bound
dec
sbb
xor
inc
jmp
sbb
mov
push
jmp
push
pushf
push
xchg
mov
add
mov
arpl
jo
ror
inc
xchg
in
js
sbb
and
repz
movsl
dec
ret
leave
pusha
cmp
icebp
mov
jmp
loope
loope
jl
cltd
mov
cmp
or
mov
inc
sbb
insl
nop
mov
mov
lret
scas
movb
jmp
lock
aaa
pop
add
sbb
sbb
xchg
xchg
jmp
dec
bnd
std
or
mov
fdivrp
push
sahf
jp
cmpsl
mov
in
int
mov
mov
xlat
imul
push
sub
scas
adc
lds
xchg
or
mov
jns
xor
insb
add
repz
outsb
ficompl
popl
out
xchg
inc
add
dec
jl
mov
push
jns
pushf
stos
jp
test
jmp
cmp
out
add
sub
cld
and
push
pop
lods
pusha
addr16
test
sahf
dec
out
xchg
pop
fistpll
add
cmp
cmpsb
paddw
pop
into
les
xor
stos
dec
inc
sub
mov
lcall
das
jno
loope
inc
pop
in
test
xlat
mov
out
mov
mov
sub
adc
or
and
cmpsl
div
lret
in
imul
and
pushf
push
mov
repz
mov
ffreep
imul
dec
shll
jae
or
std
or
fs
and
cmp
mov
xchg
or
ret
jbe
and
dec
int3
add
test
gs
in
xchg
ret
std
mov
in
popf
adc
out
fbstp
lock
sbb
push
cs
mov
dec
dec
subl
ret
daa
pop
dec
push
sub
and
jle
jno
jno
call
sub
pop
loope
daa
and
xor
rclb
xor
ficompl
jmp
mov
das
adc
mov
shlb
jno
mov
aas
ficompl
and
repz
push
ret
jmp
mov
and
mov
sar
mov
adc
and
in
fwait
addr16
mov
insl
push
jp
add
jbe
mov
mov
xchg
dec
sahf
xor
stos
pop
sub
insb
push
push
ret
das
out
dec
out
mov
jecxz
hlt
mov
or
push
repnz
fwait
xchg
lret
clc
lahf
popa
xor
fnstcw
mov
dec
sbb
incl
jge
ror
jae
sbb
mov
fcmovu
dec
mov
jge
and
add
and
test
jl
gs
es
push
cmp
clc
jae
pushf
sub
repnz
jecxz
push
pop
mov
lret
inc
or
dec
addr16
sahf
xor
xor
lds
rorb
mov
pop
add
xchg
jb
jecxz
cmp
adc
cmpsl
shl
xchg
test
jns
lret
mov
mov
push
sbb
mov
call
cmpsl
nop
std
ficoms
lods
mov
inc
icebp
pop
cltd
out
es
call
push
inc
out
in
mov
adc
das
sub
repnz
push
or
cld
sahf
test
inc
pop
jb
mov
push
inc
mov
pushf
out
cmp
mov
xchg
inc
out
mov
mov
mov
xor
je
xchg
mov
out
inc
dec
ret
loope
rorb
or
fwait
in
hlt
daa
inc
ds
movsl
cltd
push
xor
arpl
aas
pop
iret
add
sub
push
movsl
or
xor
out
cld
lret
ret
or
addr16
aam
dec
pop
mov
in
ret
std
cmp
stos
sbb
into
loop
lds
data16
cmp
fisubrs
outsb
movsl
jmp
hlt
jae
test
jg
mov
inc
xchg
mov
or
in
add
pop
push
outsl
loopne
mov
sub
dec
dec
push
sbb
movsl
jp
xor
orl
fwait
fwait
sbb
jnp
xchg
xor
sub
out
jg
aas
push
in
ret
sti
fwait
mov
pop
pop
jle
sbb
dec
icebp
push
xor
lods
jge
loopne
lret
ficoml
push
into
xchg
jmp
loopne
pop
je
cmpsb
push
mov
xchg
dec
pop
inc
adc
mov
pusha
jbe
jp
or
sub
loope
lahf
loope
mov
jl
outsb
popf
add
es
shlb
add
stos
cmp
loope
in
out
push
mov
push
or
inc
jle
rcrl
fiadds
jo
test
cmc
testl
stos
and
scas
mov
pop
sbb
das
mov
cmp
gs
cmpsb
mov
in
xchg
mov
sub
jo
mov
pushf
lock
pop
jno
adc
push
in
iret
mov
hlt
js
popa
sbb
xchg
mov
ja
movl
mov
out
push
inc
es
sti
mov
gs
xor
xor
xchg
loop
gs
jb
pushl
aaa
lods
push
or
or
xor
popf
aaa
cmc
imul
and
repz
adc
mov
dec
in
rcrl
je
test
pop
loope
testl
sub
mov
inc
inc
popa
nop
sub
sub
xchg
mov
sub
data16
imul
dec
sub
imul
jno
mov
pop
push
stc
inc
out
cmp
lret
cltd
dec
rcll
test
repnz
xlat
pop
faddl
negb
dec
in
sbb
mov
inc
imul
adc
push
lahf
adc
mov
push
inc
lea
mov
roll
pushf
aam
ret
bound
int
sub
shr
and
movsb
jecxz
ljmp
jmp
mov
fwait
in
push
jle
dec
mov
pop
cmp
or
clc
xrelease
dec
sbb
out
pop
mov
xchg
push
and
gs
sarb
pop
ljmp
inc
scas
mov
cmp
lock
cmp
lods
test
pop
es
sti
lahf
xorl
popf
or
mov
cld
pushf
mov
push
add
or
imul
push
lods
cmp
aaa
xchg
insb
sahf
lds
cli
shll
mov
incb
or
inc
pop
call
shll
dec
mov
fsubs
gs
push
mov
in
and
jmp
fwait
xor
dec
adc
fs
mov
sahf
and
ret
test
jbe
lahf
into
xchg
xchg
aas
mov
lcall
out
jmp
sub
push
mov
loope
or
xchg
lods
push
dec
sub
and
sbb
icebp
push
aam
idivb
sarb
cmpsb
in
in
sub
sub
js
call
js
push
or
and
outsl
bound
sbb
imul
imul
sub
mov
xchg
das
js
or
pop
cmp
fadd
dec
push
push
mov
jae
loope
pop
and
cld
loopne
xor
lahf
shrd
add
movl
enter
or
cmp
insl
lds
lods
inc
inc
and
add
pop
xchg
call
jecxz
lret
mov
gs
inc
pop
push
shrd
pop
sbb
jo
mov
push
mov
int3
push
shrb
popa
test
jl
in
push
popf
int3
dec
outsl
leave
push
clc
out
cmp
dec
sub
mov
lea
arpl
mov
rcrl
stos
cmp
xor
fs
in
daa
clc
xchg
out
jmp
mov
outsb
repnz
mov
pop
imul
gs
inc
out
cs
adc
cltd
inc
push
xor
or
mov
incl
sub
dec
out
idivl
sub
mov
or
or
sarl
es
lds
push
mov
sub
sub
lret
fbstp
aam
movl
mov
rcrl
ja
sub
sub
stc
cltd
pushf
lret
mov
pop
ja
dec
es
add
mov
inc
cmp
daa
inc
out
mov
pop
insl
pop
pop
push
scas
jl
cmp
and
lret
sbb
enter
ja
ds
sahf
arpl
jg
or
push
xchg
push
push
outsl
push
dec
in
push
shlb
mov
das
or
jb
pusha
test
fwait
pop
test
xlat
scas
mov
fsub
into
ja
stc
stc
imul
movsb
cmpl
stc
fadds
or
je
push
mov
je
idiv
fs
or
stc
push
insb
out
cmp
mov
outsb
push
xor
mov
jecxz
scas
aaa
fbstp
cmpsb
pop
insb
xchg
xor
dec
mov
fisubrl
lcall
jecxz
jae
or
repnz
cli
dec
push
sbb
or
lcall
mov
fwait
loop
or
out
lock
imul
inc
js
mov
fnstsw
mov
call
imul
std
je
xchg
jle
push
mov
sub
pushf
cmp
xchg
daa
test
add
sub
div
lea
sbb
mov
sub
cmp
cmpsb
lret
stos
icebp
loopne
pop
mov
and
or
cmp
notb
or
xchg
or
xchg
fwait
mov
ja
outsl
mov
add
sbb
pop
inc
pop
sbbl
xchg
pop
inc
pop
add
in
test
push
scas
xchg
nopl
push
and
les
cs
mov
jae
ret
aam
stos
test
jge
push
in
mov
jo
jnp
fcmove
gs
icebp
jns
add
push
push
mov
sub
xchg
push
xlat
frstor
dec
rcrb
cld
and
mov
lahf
aas
inc
in
mov
movsl
mov
outsb
lock
fbld
cltd
push
xchg
and
xchg
dec
push
adc
incl
push
repnz
loopne
loop
shlb
push
mov
pop
sub
dec
mov
dec
inc
nop
out
fildl
mov
mov
pop
in
pop
jmp
mov
loopne
out
push
add
nop
rcr
add
sbb
push
inc
cmc
call
jns
pop
push
fnstsw
leave
add
sub
inc
iret
add
jmp
ja
fldcw
test
jl
dec
movsw
push
cmpsl
cmp
adc
mov
insl
fmull
mov
inc
jno
stos
mov
loop
shrl
pavgw
pop
cmp
into
adc
xor
insb
sbb
outsb
movsb
pop
jno
push
dec
mov
loop
lods
mov
std
jecxz,pt
rclb
jmp
mov
dec
xor
leave
out
inc
fiadds
sahf
loop
cmpsb
sub
mov
inc
jno
das
in
or
jns
inc
xchg
int
pop
sbb
lods
xlat
into
stc
in
add
lcall
sbb
push
movsl
mov
into
insl
aam
jne
flds
popf
aaa
xorl
movsl
aam
test
mov
call
ret
dec
lcall
pushf
or
in
mov
lea
lahf
std
fcomps
in
or
pop
add
and
loop
pop
mov
lds
mov
and
test
cltd
in
imul
inc
hlt
push
jp
jns
sbb
add
sbb
mov
rclb
filds
and
daa
or
jb
jmp
pop
mov
cmp
shlb
jbe
inc
mov
or
mov
jmp
push
int3
inc
vmread
mov
inc
xor
xchg
or
cmp
pop
xchg
or
aaa
outsb
mov
pop
mov
push
fsubrp
jg
jb
iret
jg
lahf
and
and
mov
imul
sbb
ljmp
leave
cmp
rclb
push
out
mov
out
hlt
pop
fsubs
inc
dec
or
sub
mov
and
jmp
fwait
xor
lret
mov
jnp
jns
jp
pop
cmp
inc
adc
pop
dec
andl
xchg
cmpsl
xchg
adc
mov
jecxz
inc
mov
adcb
in
cs
push
sub
fcmovb
xchg
test
pop
clc
inc
stos
xchg
dec
jne
lcall
stc
sbb
lods
sub
iret
mov
roll
push
add
or
dec
sbb
xchg
lahf
popf
rolb
in
adc
fprem
push
dec
lock
xchg
repnz
fiaddl
rolw
pop
into
scas
inc
and
or
jp
stc
aaa
jmp
jmp
in
jmp
push
cmp
cmp
test
mov
mov
ss
aad
and
mov
adcl
and
cmp
test
jae
rol
sub
push
sbbl
pop
in
xor
les
xor
mov
cmp
xlat
lods
adc
fstl
in
pop
insb
fidivrl
loope
xchg
cltd
jne
bound
dec
idiv
xchg
add
push
stos
in
mov
sub
imull
xor
imull
or
xor
insb
inc
mov
popa
mov
jle
dec
lods
into
mov
call
and
insl
repz
jnp
and
loop
pop
xorb
dec
adc
pop
dec
rorl
stos
hlt
int3
cld
shrl
imul
push
mov
add
dec
or
cmpsl
test
xchg
or
or
add
dec
xchg
test
or
mov
fs
jnp
adc
outsl
add
in
ds
pushf
mov
and
mov
aam
add
fldcw
mov
daa
inc
pop
jb
test
xor
jne
dec
lock
jnp
cmc
das
fs
mov
push
pop
cmp
lret
fwait
stos
mov
xor
test
and
stos
push
popa
push
rolb
xchg
mov
fidivrl
ror
lods
or
pop
push
fsubrs
aaa
add
fisttps
cmpsb
sub
imul
aam
ja
xchg
sbb
push
cld
push
imul
movsb
mov
pop
lock
sti
ficoml
out
testb
sbb
mov
mov
add
hlt
loope
mov
lds
mov
outsl
mov
cmp
out
arpl
repz
hlt
sbb
addl
lock
aam
sub
xorb
adcb
scas
repnz
fldl
mov
mov
push
xor
push
out
cmc
xchg
jmp
pop
outsl
or
lret
adcl
fwait
dec
repnz
xchg
inc
leave
and
test
sbb
pop
fadds
loope
pop
jo
push
test
loopne
movsl
jecxz
dec
int3
mov
jg
lock
sbb
popa
cltd
aaa
jle
inc
pop
pop
pop
xchg
cs
pop
movsb
rcll
cld
cwtl
dec
adc
lods
pushf
sbb
xor
jbe
data16
jns
pop
out
std
ret
mov
rcll
iret
stos
rorb
inc
pop
inc
dec
idivb
sahf
outsb
mov
mov
repz
mov
aaa
mov
lods
lret
xchg
pop
jo
dec
xchg
mov
enter
aad
imul
imul
aaa
enter
faddl
mov
cmp
mov
dec
jb
inc
insl
inc
mov
subl
lea
cmp
shr
jno
pusha
arpl
scas
sbbl
mov
ljmp
mov
outsl
mov
hlt
push
dec
mov
test
push
lea
mov
xchg
mov
lods
mov
jne
jg
fbstp
cmp
dec
rorl
leave
or
add
xchg
inc
test
fisttps
fmuls
and
lea
or
push
pop
movsb
mov
scas
aad
test
dec
adc
mov
popa
lods
inc
testb
or
sub
and
repz
pushl
mov
test
fidivrl
mov
mov
add
or
add
cli
rcrb
mov
sbb
aad
es
dec
fadds
sbb
mov
movsl
or
jne
test
mov
dec
xchg
pop
pop
jne
push
stos
repz
and
fsubs
mov
out
cmp
xchg
pop
popa
mov
push
stc
nop
dec
jp
jns
push
or
mov
adc
and
inc
les
jle
mov
push
rorb
sti
int3
xor
inc
int3
lahf
popf
int3
fstpl
das
popa
loop
addb
and
leave
out
mov
push
sbb
in
push
mov
test
testl
jb
fistpll
mov
fistpl
int
mov
cmp
lock
je
push
fldt
xchg
fcoml
push
jp
std
xor
ret
sub
lock
pushl
sub
sbb
adc
xchg
sub
cmp
shll
orw
cs
sbb
pushf
fistps
jp
xchg
stc
sbb
dec
cmc
insl
push
fstps
xchg
jb
in
sti
sub
movd
sub
and
dec
pushf
pop
mov
lea
mov
leave
and
loop
out
ljmp
lds
jge
mov
or
cltd
push
mov
push
jb
lret
xchg
cmpb
cs
push
jo
jmp
cltd
jmp
xor
jmp
mov
shrb
test
adc
dec
mov
or
mov
push
test
cld
push
fsubrs
rorb
mov
sarb
imul
adcb
jb
orl
jns
xchg
push
inc
lea
popa
ljmp
aam
xchg
shll
ss
stos
lds
xlat
pop
xchg
stc
sub
add
addb
push
repnz
and
pop
jg
out
divb
sarb
mov
push
adc
sbb
mov
imulb
cmp
add
sub
testl
jle
iret
inc
pop
outsl
iret
add
aam
or
mov
imul
add
mov
aam
mov
sbb
or
push
into
jl
xor
loope
int
insl
sub
repz
jae
xchg
add
hlt
or
shll
sub
fsubl
sbb
cmp
adc
push
lret
sti
jne
push
arpl
call
xchg
xlat
out
push
dec
push
outsl
jmp
gs
sbb
ficompl
sahf
push
adc
lds
xor
inc
and
stos
adc
iret
or
subb
out
cmp
inc
mov
add
dec
test
negl
mov
sbb
fidivrl
add
pop
fmulp
push
fstps
out
nop
test
daa
mov
or
movsb
lcall
jno
ret
mov
inc
xor
sti
cmp
fisubs
lret
movsl
mov
cmp
add
xchg
aas
imul
pushf
xchg
in
push
je
push
stos
pop
inc
outsb
rolb
add
xchg
and
into
lods
lahf
mov
xor
dec
enter
cmp
out
mov
push
aas
pop
mov
jg
jb
and
in
mov
mov
sbb
mov
pop
xor
add
sub
popf
push
ret
pop
and
push
ds
jae
push
mov
adc
jne
mov
push
push
pop
xchg
dec
cli
or
rcll
movsb
sahf
sarl
out
lods
pop
mov
ja
cmp
icebp
ss
xor
cmp
iret
lcall
cltd
cmp
sub
add
sub
or
jne
cmp
aam
addl
mov
lret
xor
adc
push
mov
lods
pop
mov
and
ss
popa
sahf
jmp
test
fsubrl
lahf
test
jo
jg
stc
mov
lahf
push
call
mov
and
push
mov
xchg
dec
mov
sbb
inc
and
and
rclb
cs
fcoms
mov
add
or
gs
movsb
movb
mov
fnsave
js
sbb
mov
lea
insb
inc
add
test
xchg
mov
in
xor
xor
insb
adc
push
jns
aaa
and
test
sbb
mov
pop
mov
faddl
je
std
adc
lock
lret
ret
push
sub
jp
fidivrs
sbb
rcrb
or
dec
jle
sbb
in
mov
xchg
jmp
popa
xor
imul
icebp
add
add
outsl
and
lods
mov
jmp
movsl
cltd
xchg
xchg
loope
mov
or
xchg
inc
mov
dec
sti
push
sub
mov
jns
rcrb
hlt
std
out
outsl
sahf
sbb
and
repnz
lahf
xor
in
xor
xor
fsub
mov
mov
jg
movsb
sbb
jns
push
lcall
ret
lret
subl
fstl
aaa
dec
insb
cmc
dec
mov
pop
loope
dec
stos
stc
bound
or
sbb
mov
insl
xchg
pusha
cmp
push
jg
rorb
aad
cmp
adc
aam
fmuls
push
or
cli
mov
mov
xchg
sub
mov
xor
xor
dec
lret
push
add
lds
jbe
repz
mov
sbb
pop
xchg
xchg
jmp
push
mov
lret
mov
push
and
call
sbb
mov
jne
and
popf
pop
jns
mov
adc
cmp
out
sahf
pop
enter
gs
idivb
cmpsb
xor
cmp
cwtl
out
das
sti
push
lret
pause
inc
push
scas
shll
jbe
sbb
cld
ljmp
int
jb
jmp
mov
cmpsl
add
cmp
std
mov
cmp
les
shl
sub
add
js
mov
leave
xchg
js
mov
test
movsb
push
in
mov
sti
adc
or
and
or
sbb
into
pusha
pop
into
gs
cmp
leave
lea
cmp
mov
jne
in
test
pop
add
aas
scas
mov
adc
adc
mov
bound
push
sub
imul
jl
xor
inc
xchg
fstps
js
mov
jne
push
push
pop
mov
into
in
js
pop
inc
into
imul
in
out
sub
mov
inc
stos
cmp
add
dec
cmp
das
shll
addl
pop
sub
pop
ds
das
adc
or
das
loopne
aam
into
shr
imul
push
testl
jae
xchg
add
adc
ljmp
lods
cmc
outsl
gs
ror
jae
sbb
mov
or
inc
repnz
test
push
jns
in
jnp
cli
cmp
add
mov
cltd
orb
or
mov
mov
out
mov
test
int
pop
cwtl
sbb
test
add
mov
add
cmp
js
xchg
inc
fs
out
lahf
jl
ss
inc
mov
fnstenv
ret
adc
adc
repnz
mov
pop
mov
pop
and
lahf
push
mov
xorl
jmp
test
fbld
adc
repz
push
out
push
movsl
movsl
nop
and
sbb
sbb
pop
outsb
loop
jbe
xchg
js
pop
sub
xor
or
sub
mov
shll
dec
adc
stos
mov
mov
pop
imul
lds
push
fcomps
ret
int3
in
lods
daa
daa
jnp
inc
or
popf
cmpsb
sub
int3
push
loope
loop
stc
xor
pop
dec
ret
xchg
movsb
enter
pop
dec
loop
dec
adc
mov
adc
push
loop
add
out
cs
push
xchg
ja
aam
in
aaa
out
pusha
sti
sbb
cmp
sbb
loop
jo
adc
and
imul
cmp
mov
in
inc
cmp
sub
push
and
ror
adc
mov
pop
inc
mov
inc
jb
sbb
add
leave
lds
nop
aad
shrb
popa
adc
insl
leave
pop
sub
xor
xchg
jp
mov
stos
push
jp
test
gs
push
aad
jns
xor
inc
inc
sub
xor
cmp
dec
insb
sti
in
xor
lds
fucomip
int
inc
cltd
jecxz
and
arpl
and
aas
in
sub
in
cmc
xchg
sbb
and
dec
loopne
and
sub
mov
and
jecxz
rcr
xor
sbb
pop
and
sbbb
xchg
inc
repz
data16
movl
add
ror
sub
lret
add
sbb
inc
jmp
jno
inc
adc
mov
outsb
inc
dec
mov
data16
in
sub
push
adc
jo
out
sub
push
jnp
mov
jnp
rcl
nop
sti
pop
in
jp
gs
fxch
jo
negb
outsb
mov
dec
popf
aaa
mov
popa
xor
in
out
xlat
inc
scas
ret
insb
insb
cmpsl
ja
push
stos
dec
xor
mov
adc
loop
push
into
ss
ljmp
sbb
test
adc
mov
push
cmp
test
push
addr16
inc
mov
clc
out
cmp
and
or
hlt
add
jnp
ljmp
out
xchg
sub
fildl
push
cmp
dec
insb
in
popf
fnstenv
adcb
cwtl
aad
lods
mov
in
stos
and
in
adc
add
mov
pop
sti
xchg
mov
or
add
fidivl
std
ljmp
sub
or
mov
xchg
jns
rcl
sub
inc
cli
in
cltd
out
xchg
icebp
fldcw
push
or
dec
adc
xchg
lock
daa
lods
shrl
mov
inc
or
call
inc
loopne
fwait
cmovs
mov
mov
rcll
into
loopne
int
dec
in
pop
add
inc
and
jo
jp
ret
and
insl
pusha
imul
inc
stos
xchg
loopne
push
cltd
cmpsl
adc
jae
movsb
retw
sub
sub
in
cmc
lods
mov
std
mov
push
add
aad
jg
loopne
leave
int3
addr16
mov
mov
xchg
add
xchg
fldl
adc
add
and
sub
pusha
mov
and
inc
mov
push
xor
outsl
in
inc
clc
loop
mov
sbbl
loope
sub
jae
add
xor
pop
outsl
xor
xorl
sbb
pop
into
xor
imulb
or
das
mov
lcall
mov
and
imul
xlat
cmpsl
cmp
xor
add
pusha
daa
lods
ds
jne
or
fcoml
rorl
mov
mov
mov
lahf
jbe
fisubrs
fstl
dec
cmp
negb
or
rol
aas
jmp
xchg
movsl
adc
inc
scas
push
push
stos
push
sbb
dec
push
rcll
je
je
mov
mulb
sub
jnp
data16
nop
inc
popl
fs
or
or
aam
pop
pop
sarb
jne
jg
dec
sub
xchg
aam
inc
pop
mov
pop
cwtl
bound
jns
cmp
pusha
cmp
jp
dec
dec
insl
mov
pop
xchg
les
cmp
fnstcw
mov
or
popf
popf
fstpl
je
mov
daa
es
cmp
pop
roll
xchg
mov
nop
xchg
jge
ja
fwait
cmp
hlt
pusha
or
mov
flds
sbb
pushf
lret
dec
adc
shll
dec
test
bound
pop
data16
jb
inc
xor
sub
outsb
fldl
dec
in
inc
mov
or
xchg
push
cmp
push
xchg
or
fsubs
jmp
repz
xor
popf
mov
ret
ljmp
push
movsb
js
pop
rorb
cmp
loope
testb
pop
les
jmp
cmp
push
je
iret
out
sahf
shrl
cltd
xor
xlat
nop
xchg
lea
or
je
sbb
fsub
stos
mov
nop
cli
mov
test
cmc
sub
mov
xchg
lds
cmp
xchg
shlb
pop
xchg
mov
mov
shll
imul
bnd
jb
xchg
cwtl
imull
xlat
shl
sub
cmpsb
xchg
cvtdq2ps
mov
jns
addr16
rorb
dec
push
shlb
xor
push
dec
lret
sub
mov
xchg
inc
or
sub
inc
movsl
xchg
pop
roll
sbb
jg
popa
xor
inc
pop
lret
lea
mov
xor
scas
add
data16
test
inc
mov
pop
dec
sub
jg
xchg
fldcw
sbb
xor
bound
mov
sub
ret
xor
insl
gs
jl
bnd
or
adc
adc
mov
add
cmp
cmc
push
dec
sub
sbb
xchg
mov
mov
pop
mov
pop
ss
sbb
aaa
cmp
push
xchg
push
mov
push
mov
out
movl
sbb
inc
mov
popf
jne
sahf
dec
mov
mov
mov
dec
xlat
dec
jge
mov
cli
inc
xor
mov
mov
sbb
and
scas
and
imul
fwait
dec
add
and
sbbb
loopne
inc
out
push
mov
sub
in
rcll
inc
dec
inc
stos
mov
inc
pusha
mov
xchg
mov
lds
cmp
mov
inc
dec
and
jb
pop
mov
xchg
cld
addr16
negb
add
mov
scas
pop
ljmp
mov
in
aas
sbb
test
adc
sub
fs
addr16
sarb
inc
rolb
jno
xchg
out
cmp
sub
push
pop
push
push
shll
pop
cmpsb
add
sub
or
push
movsb
inc
mov
and
mov
shlb
lret
stos
enter
aad
sbb
pusha
pop
sub
fbstp
xchg
and
jp
jno
popl
push
sahf
enter
stos
push
lds
inc
add
pop
inc
out
pop
adc
sub
mov
xchg
lcall
repnz
sar
shlb
xor
das
cmc
movups
popl
in
ret
jne
in
and
xor
ljmp
sbbb
sbb
xchg
pop
fs
mov
mov
push
jne
outsl
mov
push
cmp
push
repz
leave
xchg
inc
outsl
lds
mov
lock
arpl
lods
dec
clc
jge
jp
cmc
lea
sub
in
sbbl
arpl
in
jmp
lahf
jb
mov
sbb
add
lret
inc
jbe
jl
es
rorl
cld
mov
mov
call
int
mov
lods
sbb
imul
and
xchg
sbb
mov
sti
fsubrs
push
jnp
jmp
rorl
fldenv
imul
and
int3
dec
pop
push
cltd
cmc
inc
adc
push
ljmp
or
cltd
sub
ds
xchg
mov
mov
sub
ficoml
sbb
inc
decl
inc
sub
movsl
dec
jle
divb
sti
pop
pop
adc
andb
cmp
stos
add
fcoml
fbstp
add
int
pusha
jae
or
dec
jg
daa
dec
jecxz
sar
inc
dec
ljmp
out
mov
mov
push
test
xchg
push
movsb
push
inc
fisubrl
add
add
push
push
jmp
int3
mov
sbb
mov
sub
ja,pt
loop
fdivl
in
or
aas
mov
test
adc
jns
mov
out
popf
and
ret
xchg
rcr
inc
movsb
adc
xchg
stos
sub
repz
mov
dec
clc
jne
lds
mov
enter
rorb
adc
dec
aad
sub
rolb
ret
hlt
les
lds
xchg
add
outsl
stos
addb
ficoml
dec
and
dec
sub
and
loopne
adc
popf
push
sub
ficomps
xor
enter
xor
addr16
addl
daa
sub
pop
cmp
and
lock
jecxz
xor
mov
push
pop
jge
pop
stc
popa
movsb
andb
in
cmp
int
ss
sbb
xchg
adc
mov
adc
and
dec
sub
xor
and
testl
das
or
mov
inc
test
scas
enter
mov
rolb
hlt
sub
nop
pop
mov
mov
jnp
cmc
pusha
gs
dec
les
and
dec
pop
xor
sbb
xchg
das
sub
iret
jle
add
push
fnstcw
adc
xor
test
or
pop
adc
jbe
add
sbb
stos
sub
fldenv
adc
test
orl
pop
xor
scas
jbe
mov
sbb
xchg
cli
xchg
or
ret
cmp
enterw
cli
mov
dec
add
pushf
outsb
pop
push
sbbb
les
dec
je
movsl
lock
repz
xchg
nop
in
in
dec
insl
fs
lret
sbb
push
fildll
inc
dec
adc
cmc
pop
sub
ss
or
pop
daa
cltd
loope
lea
mov
test
in
nop
inc
pop
mov
mov
sub
adc
cltd
jns
loop
adc
call
sti
xor
scas
mov
in
cmp
repz
mov
mov
fsubl
lea
add
sarb
sub
mov
pop
cli
cli
imul
leave
inc
cmpsb
cld
jl
movsb
not
notb
pop
dec
dec
aad
push
pop
mov
xor
stos
sbb
ds
rcr
inc
jo
jp
test
fistl
fwait
in
loop
xor
outsl
add
adc
xchg
jp
inc
jns
js
mov
dec
stos
scas
aas
data16
int3
imul
addr16
movsb
aad
fwait
dec
dec
lret
rcr
jecxz
and
into
sbb
adc
mov
movups
ja
sbb
insl
flds
das
movsb
cmp
psubw
jl
jb
test
adc
mov
sbb
adc
push
hlt
sub
js
fstpt
or
adc
jle
cmp
mov
loop
loope
cmp
sbb
fcoml
xor
cmc
pop
sbb
mov
cmp
xor
lods
aas
loopne
pushf
stc
cltd
in
pop
not
mov
icebp
mov
cmp
ljmp
js
aam
push
jg
fsubrs
mov
and
sub
lock
lret
andl
and
push
xor
outsb
mov
fstpt
fstpl
sarb
sti
xchg
cwtl
mov
jmp
pop
push
cmpsb
cmp
dec
cli
cmp
shlb
xlat
mov
sbb
mov
addr16
xchg
cmp
sub
dec
in
adc
cmp
ds
std
xchg
icebp
int3
jo
out
mov
cmp
pushf
sbb
lods
mov
add
xor
sbb
jmp
push
adc
arpl
test
clc
out
ss
mov
mov
inc
call
idivl
aad
repnz
jb
fdivp
jmp
aas
cmpsb
push
fistpl
iret
xchg
adc
cmp
push
jbe
sub
fsubl
ret
add
fiaddl
sbb
adcl
imul
cmp
add
aad
filds
repnz
lret
mov
je
push
cmp
push
cmp
or
lahf
xchg
les
int
xor
in
and
adc
sbb
repnz
les
bound
ss
jne
jns
push
sbbl
out
push
in
lret
mov
sbb
mov
mov
xchg
pusha
cmpsl
sub
fists
inc
push
outsl
cmp
xor
lret
movlhps
adc
dec
xabort
les
xchg
arpl
mul
mov
int3
dec
sub
hlt
xchg
std
push
pop
xor
test
pusha
sub
and
and
cmp
sarb
ljmp
insl
and
lcall
repnz
andl
push
daa
cmp
xchg
ret
imul
add
mov
xchg
mov
cmp
push
outsb
out
sbb
fcomi
addr16
inc
repz
enter
sti
in
js
push
std
negl
rclb
push
adc
stos
push
mov
pop
inc
or
pop
mov
jmp
test
aas
adc
sbb
fwait
out
cmp
and
inc
daa
mov
cmpsl
popf
dec
leave
call
dec
push
loope
inc
ds
in
std
inc
mov
loopne
in
dec
mov
push
xlat
es
jb
sub
in
enter
mov
int3
aaa
mov
or
clc
pop
jle
xchg
push
xchg
pop
mov
scas
sub
fcoml
fidivs
jae
mov
outsb
fsubl
mov
setge
das
inc
ret
pushf
and
sbb
pop
out
ret
arpl
ret
cli
shlb
popf
bound
subb
mov
loope
jns
sub
pop
xchg
mov
inc
lds
push
push
lret
inc
jo
cld
xor
fdivl
or
dec
push
mov
add
js
adc
xchg
int
or
pop
pop
xor
sbb
xor
movl
inc
and
inc
cmpsl
mov
sbb
push
pushf
in
insb
es
cmp
xor
pop
pop
lods
aas
xchg
sahf
popa
addb
sub
js
mov
push
push
aam
lret
sub
jo
mov
sbb
push
cmp
idiv
iret
jl
dec
jg
fldl
xchg
pusha
jle
jno
fwait
mov
int
add
inc
push
push
movnti
jg
sub
test
fildll
nop
cbtw
xor
test
mov
mov
and
mov
je
out
mov
shrl
imul
les
fs
imul
lock
insb
push
and
sbb
adcl
call
jo
adc
inc
pop
jb
add
aas
add
scas
mov
aad
jne
lret
xchg
imul
push
add
sub
sub
mov
inc
iret
mov
push
add
inc
sbb
ret
xchg
jmp
imul
je
inc
inc
mov
data16
add
push
jecxz
andl
call
in
lods
notl
inc
and
cmp
test
push
pusha
pop
and
ss
push
hlt
mov
mov
cld
shrb
dec
fs
jmp
dec
test
sbb
xchg
cltd
ficomps
sbb
repz
ds
push
pop
mov
sub
jmp
pop
fmuls
cmp
jge
dec
or
push
dec
mov
cmpsb
xor
mov
lahf
mov
clc
add
cmp
mov
xchg
lret
add
adcl
hlt
xchg
push
mov
cwtl
ret
pop
adc
mov
cmc
sbb
rorb
aam
inc
xchg
mov
mov
insl
or
sub
rcl
adc
push
mov
push
pushf
icebp
inc
inc
pop
jo
jb
in
adc
xor
xchg
je
inc
out
mov
cmp
inc
add
pop
adc
mov
sti
mov
call
add
xchg
jo
mov
mov
lods
cmp
insb
imul
pop
daa
divb
push
jo
sbb
jp
pop
or
push
mov
aas
dec
push
push
dec
out
inc
sbb
test
in
loopne
inc
in
popf
inc
adc
jo
fidivl
hlt
je
jo
pop
rcrl
xor
mov
push
pop
out
add
sbb
imul
xchg
and
jb
xor
pushw
test
push
adc
jno
jne
push
cli
jle
jns
push
push
mov
xchg
xchg
out
mov
push
mov
ret
inc
add
lahf
js
out
xor
cmp
lret
jb
repz
inc
xor
push
cltd
imul
sub
addr16
in
mov
sbb
fstpl
or
out
movsl
mov
adc
gs
cmc
push
sbb
jo
repnz
imul
fxsave
dec
je
scas
mov
outsb
pop
sbb
shlb
pop
sub
aaa
xor
dec
inc
pop
dec
loopne
jne
push
shr
mov
ficompl
pop
mov
xchg
cmp
or
fnsave
sbb
xchg
js
cld
cmp
inc
popf
ljmp
xchg
sub
lock
sbb
jbe
out
dec
addr16
sub
xlat
add
xchg
scas
and
xor
cli
arpl
mov
das
lret
fstp
in
mov
pushf
mov
fmull
jge
mov
cli
packuswb
cmp
lcall
lods
xor
jnp
mov
jo
dec
ljmp
rorb
xchg
sbb
call
xchg
pushf
pop
sub
fwait
dec
test
or
sub
pop
les
dec
push
mov
jae
shlb
add
sarl
mov
fistl
sahf
lea
js
xor
mov
mov
daa
movl
cmpsb
push
pop
lock
pop
xor
daa
into
ss
jmp
push
push
xchg
lods
fldt
daa
pusha
icebp
mov
push
out
imull
fildll
cs
in
sbb
aaa
adc
cltd
mov
ljmp
cmp
inc
inc
fwait
cmp
nop
int
mov
inc
mov
bndldx
in
scas
nop
addr16
dec
xchg
ja
push
jo
sti
jb
adc
xor
and
push
push
outsl
das
das
jle
inc
out
aad
dec
add
inc
pusha
dec
imul
dec
int3
mov
ljmp
lret
pusha
mov
sub
mov
pop
loop,pt
adc
xchg
push
xchg
mov
gs
loope
or
aam
insl
shl
pop
sbb
in
scas
xchg
adc
jbe
iret
jne
push
int3
sub
in
popa
test
fs
mov
xchg
fisubrl
mov
lods
jl
pop
add
jae
jp
jno
mov
or
dec
add
test
je
mov
pop
cmovg
sub
fmuls
loope
sub
nop
sahf
inc
arpl
flds
dec
pop
data16
cwtl
jb
ret
sbb
xchg
and
xchg
mov
mov
mov
hlt
and
cmp
cmc
repnz
or
adc
insb
mov
inc
mov
lea
xor
aad
pop
iret
cmp
cmp
ss
dec
pop
push
lcall
sbb
addl
lods
sbb
cli
xor
or
cmp
sbb
popa
test
inc
mov
pop
cltd
mov
in
cmp
pop
cmp
or
fwait
pop
out
adc
es
push
loope
in
push
into
test
sahf
inc
mov
lds
lods
mov
loop
push
xor
sbb
inc
push
les
scas
dec
pop
pop
aaa
add
outsb
cli
mov
movsb
lock
clc
mov
pushf
xchg
fnstenv
or
mov
repz
pop
movsl
out
scas
push
int3
mov
lret
dec
popa
sbb
leave
push
js
loope
pop
in
cmp
mov
hlt
iret
mov
dec
sub
mov
stc
dec
add
ja
loopne
xchg
imul
scas
sub
dec
push
and
xor
pop
cmp
stos
push
add
out
sbb
clc
test
xor
adc
xchg
in
mov
mov
ret
mov
jp
jle
xchg
stos
fiaddl
addl
enter
mov
xor
sbb
pop
les
adc
and
pop
push
jnp
stos
jmp
loope
add
in
lods
les
mov
push
xchg
movsl
scas
pop
out
subl
add
push
rcrb
repz
mov
subl
mov
or
cmp
nop
lcall
bound
mov
xlat
xchg
subl
push
jge
mov
and
les
in
nop
iret
movsb
mov
push
fcoml
rolb
out
imul
mov
outsl
mov
mov
repz
scas
je
out
into
and
mov
daa
leave
jae
lods
mov
mov
mov
or
mov
fsubs
loopne
cmp
cmpsb
add
stc
push
jo
arpl
icebp
imul
pop
pop
out
movsb
xor
aaa
mov
pop
mov
negl
loope
pop
mov
gs
shrb
bound
ja
fcompl
push
adc
push
enter
dec
mov
push
aad
xchg
add
push
or
pop
out
dec
lahf
gs
cmc
xor
jl
push
jae
out
pusha
and
ret
xchg
sbb
pop
dec
add
insb
in
pop
dec
addl
rolb
or
out
xchg
or
mov
mov
stos
xlat
loope
jmp
cwtl
jle
pop
cltd
xor
sub
push
mov
xchg
sbb
sbb
fwait
mov
scas
out
cmpb
sbb
stos
and
lret
xchg
and
and
subl
scas
add
pop
inc
add
int3
pop
scas
clc
addr16
push
mov
mov
shl
adc
cli
aad
cvttps2pi
ret
pop
xlat
enter
test
sti
stc
iret
sub
dec
pop
sub
aam
outsb
add
mov
jmp
fistpll
scas
rorl
dec
xchg
repnz
ret
jne
add
sub
cmp
repnz
test
in
test
pusha
cmp
outsb
sbb
shl
mov
pushf
add
or
inc
mov
cs
dec
andb
mov
sbb
sarl
xchg
adc
pop
xchg
mov
aam
add
push
cmp
or
sub
push
sbb
mov
movsb
outsb
sarb
xchg
rcrl
jmp
push
das
add
pop
imul
inc
iret
std
dec
sbb
and
jp
rcl
mov
imul
cmp
outsb
pop
pop
out
frstor
mov
sbb
cli
shrb
scas
xchg
cmp
testb
test
sbb
fwait
lock
sub
insl
jge
dec
xor
mov
mov
dec
rcrl
cmp
sbb
or
adc
repnz
mov
and
and
cmp
pop
sarb
inc
orb
je
jbe
lds
stos
pushf
js
pop
adc
nop
fwait
xor
testb
addr16
stos
ss
mulb
jle
into
test
cld
std
divb
push
dec
mov
das
ljmp
dec
insb
and
inc
push
leave
or
dec
push
pop
xor
or
mov
and
xchg
out
sahf
sub
jnp
and
into
aad
int3
fsubs
imul
jno
sbb
test
loope
jecxz
or
mov
movsb
jne
or
int3
fs
aaa
scas
mov
jmp
jle
fnstsw
pop
daa
xor
mov
push
inc
subb
insb
fcomi
clc
rorb
add
cmpsl
fists
adc
lret
movsl
adc
or
sub
xchg
shl
testb
je
xor
int
dec
lods
xchg
push
leave
mov
mov
testl
dec
or
push
bnd
xor
mov
clc
jns
mov
jns
lret
adc
add
sub
push
in
jns
or
sub
mov
cwtl
pop
and
mov
lcall
jp
cmp
dec
adc
clc
xor
sbb
dec
out
test
addr16
push
icebp
dec
rcr
pop
add
jle
mov
daa
repnz
std
dec
aaa
xor
jecxz
loope
mov
push
ret
mov
std
hlt
push
ds
repnz
mov
push
pop
out
loope
fisubrl
xor
les
push
shlb
xor
les
push
rorb
je
scas
call
in
push
push
mov
orl
repz
sahf
out
fldenv
xchg
scas
push
scas
push
out
xchg
clc
clc
pop
and
or
shlb
orl
add
jae
hlt
mov
inc
subb
xor
pop
or
sbb
imul
icebp
enter
xor
xor
loop
fldl
daa
aas
int
xchg
mov
js
cli
iret
roll
stos
xor
mov
sub
cmp
inc
imull
lahf
arpl
or
lcall
stos
and
fstpl
fbld
add
xchg
mov
and
popa
call
mov
test
sbb
sarb
insl
outsl
subb
sahf
test
fmull
daa
cli
lahf
popf
into
loope
adc
ret
test
in
jo
popa
xor
adc
rcrb
fcmovnb
pop
cwtl
sbb
and
mov
imul
mov
sti
cmp
ja
cmp
scas
ja
and
pop
add
push
imul
and
rorb
in
popf
arpl
repz
jl
into
pop
aad
scas
into
nop
xor
mov
jg
jns
andb
dec
cmp
inc
adc
in
add
dec
mulb
lds
push
stc
jmp
cltd
cmc
mov
lahf
loope
xchg
iret
and
in
inc
std
inc
imul
in
jne
xor
lods
clc
xchg
std
or
adc
inc
adc
pushf
aas
push
mov
movsb
mov
jmp
lahf
and
fisttpl
fildl
ss
push
xchg
sub
stos
mov
jnp
movsl
sahf
and
push
ljmp
jle
jns
lods
dec
stos
aad
les
xor
in
cld
sti
outsl
imul
inc
and
ret
cmp
scas
or
adc
aad
cwtl
repnz
clc
xchg
aaa
add
jbe
and
xor
into
lea
xlat
mov
cmpsl
call
icebp
aaa
orb
repz
mov
bound
xor
movsl
add
nop
mov
rcrl
jge
das
jnp
inc
rcrb
nop
xor
mov
lret
clc
jne
outsb
inc
mov
add
mov
test
cmp
push
pop
in
shll
inc
arpl
arpl
dec
movsb
sub
aad
imulb
and
xchg
call
mov
cmp
jb
mov
fcomip
cltd
fs
iret
mov
lods
std
aas
inc
or
sarb
repz
stc
adcl
icebp
add
cwtl
jno
dec
cmc
test
ret
gs
xor
sahf
insl
and
in
ss
pushf
test
jb
pop
or
pop
pop
pop
push
push
mov
test
mov
ds
or
push
jo
pop
lods
out
cmpl
lods
push
mov
aad
pushf
enter
xchg
sti
imull
shrl
pop
jg
jae
jg
adc
movsl
xor
mov
push
cmp
outsb
leave
mov
push
mov
jnp
pop
fsts
sub
push
push
fstps
add
sub
xlat
pop
mov
lods
int3
fcoml
je
pop
js
and
push
cmp
int
sti
cmp
shll
test
les
pop
dec
sub
dec
adc
push
cltd
call
xchg
pop
enter
push
fisttpl
aaa
mov
sti
add
sub
xor
jno
nop
or
xor
pop
jmp
dec
mov
or
sub
sub
hlt
xchg
mov
sub
imul
jp
xor
lahf
cmp
loop
ja
xchg
mov
inc
sbb
jg
push
jne
cmc
push
lret
out
jecxz
rcrb
sti
jp
jae
clc
sbb
out
xchg
cmp
jg
aas
sub
aad
fwait
push
cmpsl
aam
out
add
xchg
xorb
pop
test
jg
test
dec
scas
mov
pusha
test
lods
idivb
enter
push
sarb
jns
daa
out
sub
sbb
push
mov
mov
subb
outsl
lods
xor
outsb
and
cwtl
mov
cmp
adc
inc
loope
ret
cld
pop
pop
push
jns
and
sub
mov
rclb
pop
stos
leave
mov
enter
add
in
xor
sbb
mov
add
je
pop
enter
mov
int3
fists
dec
xchg
bound
dec
in
add
pop
outsl
dec
test
shlb
ja
push
mov
loopne
mov
xchg
jbe
stos
dec
push
repnz
daa
mov
jnp
popa
dec
sti
mov
push
out
out
jae
sbb
push
fstl
push
sub
mov
mov
insb
mov
daa
lret
fistl
or
jnp
cmp
outsb
shlb
pop
into
cld
adc
push
mov
xor
or
dec
mov
cmpsb
pop
lds
xchg
mov
aaa
mov
stos
push
xchg
mov
sti
es
repnz
or
bound
divl
xor
and
sub
mov
sub
fcompp
aaa
mov
stos
aaa
xchg
jno
xor
les
outsb
xor
xor
loopne
bound
dec
jp
lock
xor
popf
pop
mov
sub
mov
add
fimuls
mov
dec
mov
cmp
and
mov
inc
fstpt
inc
jle
sbb
loop
scas
cmp
fwait
push
jp
sbb
cli
mov
inc
popf
or
jbe
adc
inc
mov
fstp
cmp
mov
gs
or
sar
cwtl
xor
sbb
cmc
adc
sub
into
aam
aas
shll
lock
outsl
and
aas
pop
int
sbb
cmp
iret
fstpl
lds
dec
xchg
jne
test
test
stc
push
push
sub
xor
pusha
ljmp
std
adcl
mov
push
lea
mov
xor
bound
cld
std
inc
popf
inc
sbb
or
cmp
lret
xchg
mov
sbb
or
decl
xor
fmull
xor
out
pusha
stos
out
mov
or
xor
and
sub
inc
outsl
pop
mov
outsl
push
repz
jo
std
pop
push
clc
sti
push
dec
add
xchg
push
pusha
sahf
mov
xchg
jbe
cmp
push
or
mov
sti
jne
loopne
adc
sti
rclw
push
leave
dec
roll
addb
rcrb
inc
fwait
inc
ficomps
test
dec
outsl
ficompl
sub
push
xor
jle
out
das
lock
repz
dec
mov
scas
cld
dec
mov
popf
adc
ficoms
adc
mov
loop
pop
nop
cmp
out
jno
call
jb
mov
inc
es
push
pop
pop
clc
add
icebp
sarb
insl
and
out
cmpsb
xchg
xor
fimuls
adc
add
inc
cld
or
inc
fbld
in
sub
pushf
dec
pop
test
sub
andl
push
sbb
shr
shl
or
sbb
mov
arpl
sub
sub
add
inc
cwtl
xor
cmpsl
pusha
in
daa
movsb
or
stos
popa
cmp
mov
and
dec
enter
test
xor
mov
push
pop
or
inc
in
lods
adc
xor
mov
or
push
adcb
hlt
ss
fnstcw
stos
mov
adc
notb
insb
out
mov
xchg
add
jnp
cld
cmp
or
jle
jo
mov
pop
data16
and
inc
sbb
test
or
cli
cmp
push
jo
and
sbb
fs
outsb
dec
xchg
leave
and
jecxz
jle
jp
sbb
mov
data16
leave
sub
jmp
lds
in
xchg
out
xchg
out
cmp
and
mov
aad
mov
movsl
adc
sbb
mov
in
xchg
xchg
jp
jo
jecxz
mov
ljmp
cmp
and
sbb
dec
pop
pop
push
std
pshufw
sub
test
mov
mov
inc
lea
mov
jb
lret
mov
xor
fs
pop
jb
inc
leave
std
sub
dec
jno
test
xor
push
ljmp
pop
sub
and
xor
pop
cmc
hlt
subb
cmc
xchg
add
ret
sbb
pop
pop
int3
xor
xor
in
movb
cmp
mov
insb
aad
cltd
adc
dec
cld
imul
jne
jmp
add
xor
ja
cmp
jo
ret
add
pop
pop
dec
push
inc
mov
push
arpl
add
shrb
scas
lock
jge
sti
pusha
in
stos
loopne
outsl
neg
lea
bt
jno
xchg
inc
fldl
loope
mov
test
add
sbb
mov
xchg
pusha
out
dec
sub
cwtl
mov
sbb
sub
push
mov
repz
pop
xchg
pushf
insb
stos
dec
or
or
ret
and
dec
sbb
ljmp
pop
jp
sar
out
hlt
dec
sbbb
inc
loopne
stc
cmc
hlt
jle
out
cmp
rcrl
jp
pop
xor
mov
test
sub
test
mov
hlt
repz
xor
jecxz
pmaxub
push
not
jl
into
arpl
lret
pop
bound
sbb
cwtl
mov
loope
rcrb
ret
imul
lret
jl
and
lods
pop
shrl
fldenv
adc
adc
inc
mov
push
mov
fcomps
and
sarb
cmpsb
push
stc
pop
and
cmp
inc
cmp
add
mov
ds
ret
mov
out
adc
sti
mov
lods
dec
add
cmp
stos
xor
fs
cmc
jl
sub
push
adc
gs
outsb
mov
xchg
out
repz
push
sbb
lea
cmp
pxor
outsb
negl
adc
or
rorb
nop
shlb
or
mov
popa
jmp
cmc
dec
pop
pop
push
push
add
and
jle
lods
out
ds
xchg
pop
inc
and
mov
mov
sbb
cs
shrl
add
xchg
jno
pop
adc
js
fs
push
test
xor
sarl
adc
stos
and
mov
xlat
ret
dec
iret
jae
imul
subb
aaa
or
and
adc
shlb
in
into
sbb
jo
popl
and
mov
adc
outsb
or
dec
dec
test
push
or
lods
cwtl
cld
lcall
push
sti
out
jne
push
xchg
push
or
sbbb
adc
lcall
cmp
scas
ret
out
mov
inc
outsl
daa
xchg
testb
pusha
mov
mov
ljmp
popf
in
int
leave
pop
sbb
loope
mov
adc
gs
xor
pop
dec
sub
bound
or
and
jae
icebp
mov
mov
imul
ret
add
xchg
sub
clc
or
sbb
popf
push
and
xchg
ljmp
sub
cwtl
cmp
push
pop
or
inc
cmp
fistpll
push
jae
arpl
pop
inc
inc
in
xchg
pop
test
xchg
bound
lock
sub
dec
pop
sbb
sub
cmp
movsl
ds
and
pop
adc
pop
jne
cs
push
xchg
clc
pop
sub
sahf
and
add
out
outsb
or
mov
mov
mov
cwtl
aas
push
outsb
xor
pop
mov
sub
or
daa
dec
test
dec
test
addl
jmp
outsl
mov
push
clc
movb
pop
repnz
jne
mov
jo
and
xlat
test
dec
adc
andb
add
cltd
cs
add
jne
lock
fld
pop
addr16
adc
and
ljmp
shl
in
movsl
jmp
mov
aad
push
fisubrl
ficoml
push
mov
out
xlat
dec
cltd
cmp
add
fimull
push
sahf
jl
inc
mov
or
fidivrl
or
repnz
movaps
cli
repz
dec
push
fstpt
ja
int3
cmp
mov
mov
leave
adc
dec
out
fwait
xchg
or
lret
jo
movb
mov
adc
xor
pop
fcmovnu
inc
mov
lods
xlat
inc
xor
push
add
in
loope
xor
pop
sub
sbb
mov
xchg
or
sbb
xlat
int
das
jne
mov
lea
or
pushf
adc
sbb
sub
pusha
sub
or
cmpsl
jecxz
loop
dec
roll
loopne
jge
add
sahf
popa
mov
data16
sbb
mov
cmp
dec
pop
lret
out
ret
cltd
push
lea
or
adc
adc
jbe
clc
stc
xchg
ficoml
mov
popa
inc
mov
sub
xlat
inc
inc
xchg
mov
add
stc
sub
lods
int3
mov
mov
enter
mov
push
push
pop
pop
int3
jle
js
dec
jbe
mov
pop
inc
add
jmp
insl
xlat
sbb
mov
jns
xlat
mov
pop
adc
enter
jle
addr16
out
pop
movsl
aas
lock
push
mov
pop
jne
mov
dec
inc
jbe
out
dec
mov
outsb
xchg
xlat
cmc
out
ds
inc
jp
loopne
and
shll
stc
popf
or
das
push
inc
push
and
subl
add
or
xor
push
add
sub
adc
or
hlt
aad
inc
and
lea
jbe
fsubrp
notl
or
push
and
and
or
jo
sbb
outsb
fisubrs
imul
or
incb
xorb
fsubrp
pushf
dec
test
jae
jnp
mov
jbe
jno
xor
repnz
xchg
mov
popf
push
in
or
fimuls
dec
inc
and
out
inc
in
push
mov
sub
pop
xchg
movsb
inc
movsb
pushf
adc
pusha
addr16
or
fcoms
or
stc
mov
in
iret
jmp
dec
add
push
adc
push
cwtl
inc
mov
int3
adc
add
fistps
push
xor
push
scas
int3
or
int
jmp
int
lea
pop
in
jmp
xchg
ds
adc
adc
adc
movsb
roll
sarb
xchg
frstor
imul
fsts
dec
jno
inc
mov
cmp
ss
hlt
ret
fstpl
adc
mov
and
dec
je
rorl
sub
add
jbe
mov
jmp
cmp
nop
fimuls
test
inc
adc
dec
cmovo
cmpsl
xchg
into
jbe
adc
fdivp
js
fcmovbe
scas
and
add
sbb
sbb
sub
sbb
mov
sti
daa
ljmp
jmp
xor
je
cltd
cmpsb
push
not
cs
icebp
aad
xor
adc
jae
xlat
dec
mov
cwtl
aas
and
push
les
sub
loopne
lock
xor
movsb
jne
sbb
push
inc
ret
xor
inc
cmp
or
out
pop
jle
out
pop
andl
lock
les
mov
cmpsl
mov
out
clc
add
adc
mov
adcl
adc
adc
mov
add
movsb
mov
cmc
sub
jmp
js
sub
subl
jae
mov
dec
pusha
sbb
cwtl
add
pop
and
add
pop
cmp
inc
xchg
int
push
xor
and
push
xor
inc
stos
lret
mov
push
adc
inc
pop
sub
lahf
jl
pop
sti
test
in
mov
test
adc
or
dec
mov
js
vzeroupper
data16
insb
es
addr16
mov
fdivrl
mov
mov
inc
arpl
nop
out
stc
aam
roll
in
cmc
push
ljmp
pop
xor
jnp
and
les
sbb
aad
pusha
xchg
fmull
xor
daa
fdivrl
std
mov
aas
push
push
addl
pushf
add
bound
dec
pop
stos
pop
jns
in
inc
aad
add
cmp
imul
xchg
shlb
shrb
dec
cmp
adc
stc
push
mov
mov
inc
clc
loope
out
xlat
rorb
incb
loopne
cmp
fptan
lea
sub
arpl
or
sbb
insl
add
bound
movsl
sahf
insl
add
dec
nop
or
cld
push
es
add
xchg
push
sbb
adc
dec
adc
faddp
sbb
push
jmp
mov
jecxz
popf
lcall
mov
inc
cmp
rcll
cmpsl
cltd
mov
xor
icebp
mov
sbb
imul
inc
xchg
push
rolb
xchg
sbb
add
insl
inc
movsl
mov
loopne
in
outsl
mov
popa
insl
inc
xor
testb
pop
jo
in
or
pop
leave
mov
push
ja
div
lcall
mov
mov
std
test
in
sub
inc
inc
push
movsl
movsl
cs
je
dec
rorb
mov
fwait
mov
and
aad
insb
out
lahf
data16
addr16
and
hlt
push
xor
aam
cltd
loope
subl
in
imull
mov
out
shl
mov
in
cltd
enter
fdivp
adc
xorb
push
call
insb
mov
xor
out
xor
hlt
add
and
jl
and
push
sbb
xchg
popa
or
mov
jo
cmp
scas
cmp
mov
mov
out
xor
mov
pop
jmp
imul
xor
ja
adc
loope
lock
ljmp
and
jecxz
sbb
out
sbb
mov
cmp
imul
aaa
sub
jmp
fbstp
xchg
mov
pop
cmc
adc
fdivl
add
push
and
rcl
and
shll
lds
xor
xor
out
push
pop
movsl
int
jge
out
ret
push
xor
pop
mov
aaa
out
fs
xchg
ljmp
lds
nop
xchg
std
push
shlb
aas
jmp
testb
testb
or
sarl
addr16
or
lahf
shlb
cmpsl
push
xorl
jns
jge
add
xchg
loope
clc
sbb
jmp
add
dec
mov
test
ret
mov
cs
movsl
sub
jl
pusha
xlat
movsb
jae
xchg
mov
pop
push
cmp
dec
cmc
jns
out
jle
in
fcoml
out
clc
mov
fucomp
loopne
sti
lret
ficomps
aas
and
adc
sahf
xor
xor
shrb
add
jae
fildl
push
push
sub
out
aam
and
adc
pop
rcl
mov
mov
lds
xchg
aaa
daa
arpl
orb
das
xchg
enter
and
dec
sahf
leave
cmp
ret
xchg
adcl
das
pop
add
lret
cmp
jne
jg
aas
insl
fdivrl
push
cmp
int3
outsb
scas
and
pusha
ret
pop
mov
lret
jmp
mov
cmc
jb
add
pop
fld
jl
stos
pop
popa
push
ret
jbe
jb
call
dec
mov
outsb
mov
or
lods
mov
movsb
fs
xor
and
adc
sub
in
lock
lahf
and
les
mov
cmpsb
mov
jo
xchg
mov
mov
push
cmp
push
pop
mov
dec
lds
fisubl
and
mov
xor
add
jl
cmp
mov
fimull
add
mov
xor
push
sub
push
lock
cmp
cmc
lods
jb
mov
dec
mov
dec
jo
mov
xchg
test
xchg
and
lock
jns
sub
adc
ret
and
jnp
sub
adc
adcl
ss
shl
add
pop
lahf
mov
jns
std
or
jae
hlt
sbb
add
or
in
in
scas
xchg
aam
sub
dec
test
pop
push
jne
data16
lods
cmp
and
mov
dec
add
xor
int3
stos
test
inc
mov
test
pop
fisubrl
into
xchg
ss
push
cmp
lea
cmp
mov
cmpl
in
mov
adc
ret
dec
xor
xor
std
lcall
jge
mov
xchg
mov
xor
ret
lock
mov
xor
xchg
jle
dec
pop
sar
scas
jae
es
stc
filds
push
test
dec
rorl
mov
push
and
sti
push
aad
popa
pop
jns
jno
inc
in
adc
xchg
mov
jmp
les
ljmp
mov
xor
jns
popf
leave
rcll
pop
push
cmpsb
xchg
and
dec
fdivr
int
inc
push
lods
push
loop
out
mov
fucomp
cmp
movsl
popa
pop
je
push
ljmp
lea
mov
fisttpl
push
lea
fildll
stc
insl
outsb
add
adcl
and
loopne
cwtl
mov
mov
cmpsl
xchg
cmc
lds
mov
mov
das
dec
insl
lret
pop
mov
jbe
aam
arpl
pop
pop
imulb
int
mov
cs
and
pushf
out
xchg
lret
in
push
mov
mov
dec
loopne
imul
and
xlat
add
movsl
sbb
and
pop
out
mov
add
cltd
jle
cli
enter
icebp
sbb
test
mov
inc
popf
xlat
dec
mov
sahf
sub
jne
aam
inc
mov
out
push
fadds
out
gs
psubb
jmp
cmp
cmc
dec
xchg
rcll
sbb
gs
in
xor
adc
frstor
push
push
xchg
in
push
nop
adc
rclb
add
mov
les
mov
inc
add
adc
pop
mov
out
cmp
enter
mov
std
movsl
enter
inc
pusha
mov
ds
add
ret
jno
jge
mov
push
jg
jo
mov
fsubrl
jnp
imull
aam
push
mov
xchg
mov
cwtl
add
fbstp
fnstenv
in
sbb
je
int3
jnp
adc
jg
sarb
mov
outsb
imul
call
mov
push
test
jle
rorl
mov
aaa
ss
int3
fmuls
popf
push
out
xor
xchg
mov
mov
ficomps
test
outsl
hlt
jg
div
hlt
ret
loope
lods
push
mov
sbb
and
jp
cltd
shrb
push
jmp
pop
addb
loop
ss
addr16
dec
mov
repz
lahf
push
nop
leave
xor
pop
orb
pop
add
fwait
sbb
ljmp
in
jo
xor
insb
mov
pushf
and
pop
mov
dec
push
sub
sub
cmp
mov
hlt
icebp
pushf
outsl
movsl
fadd
loope
sti
and
movsb
scas
outsb
xchg
jno
icebp
xor
push
shll
rorb
test
lods
push
adc
lret
scas
lret
sbb
into
imul
imul
jnp
mov
iret
mov
mov
jle
dec
lods
sbb
or
dec
out
push
mov
ss
jne
movsl
bound
dec
insb
pop
jle
stos
mov
or
jb
loopne
pop
repz
call
mov
xchg
sub
fistpl
mov
stc
stos
inc
loope
inc
and
nop
gs
xor
push
sub
adc
je
jne
ss
int3
insl
sbb
arpl
push
js
sbb
aas
sbb
adc
rolb
xchg
cmc
dec
pop
nop
cltd
mov
es
lret
js
fs
dec
mov
notb
cmpsb
fsubrl
ja
cli
mov
mov
pushf
mov
dec
mov
inc
inc
lods
jmp
jge
xor
sti
or
jne
mov
shll
jae
jp
push
pushf
aas
push
loopne
fwait
adc
ret
pop
pop
push
push
stc
outsb
aam
push
mov
insl
and
push
pop
dec
in
mov
lret
fucomp
mov
pop
add
das
jo
pushf
rcl
and
pop
mov
cltd
in
pop
cwtl
outsb
insb
rcrl
ljmp
nop
imull
std
imul
aaa
sub
cmc
rcrl
mov
jge
clc
add
sbb
sahf
mov
je
xor
aad
cmp
cmp
lea
rcll
aad
ja
dec
in
pop
stos
cmpl
sahf
push
mov
inc
mov
out
jmp
push
std
sub
push
stc
mov
mov
lret
int
dec
fsts
push
ret
xor
pop
pop
aas
call
push
inc
fisttpll
lods
mov
rcrl
js
cmp
mov
jne
mov
scas
pop
insl
xor
cmpsl
cmp
mov
or
repnz
or
sub
fndisi(8087
popa
lock
fisubrl
pusha
xchg
out
inc
sbb
subl
cmpsb
pop
test
or
pop
ja
call
mov
cltd
lahf
sub
popf
gs
mov
cmp
testl
insb
sbb
mov
inc
push
hlt
pop
jle
lahf
jge
dec
loopne
push
cltd
testl
mov
pop
mov
add
repnz
sub
negl
inc
mov
ret
xchg
and
mov
in
ds
stc
xor
ds
aas
jecxz
jbe
fnstsw
lea
fwait
lds
jo
clc
data16
dec
dec
jmp
inc
andl
jecxz
and
xchg
push
cltd
mov
inc
mov
pop
sahf
lret
jo
inc
mov
fwait
xor
jo
inc
fistps
and
insl
jl
fadds
sub
aaa
jmp
ljmp
mov
cmpsl
movsl
sbb
and
sub
aam
pop
fidivs
fwait
sti
inc
int3
adc
mov
mov
into
and
stos
lret
cmpsb
or
int
cmp
test
jmp
cmp
movq
ret
pop
inc
icebp
es
jb
jbe
cmp
ret
inc
lock
stos
aad
fmull
mov
fs
jne
loop
push
cmp
fisttpl
aad
icebp
into
mov
insl
outsl
xor
cmp
or
mov
xchg
cmpsb
ret
outsb
mov
add
adc
mov
out
mov
xchg
push
mov
dec
ret
fnstsw
push
shll
pop
out
nop
xchg
ret
lods
pushf
ret
jns
or
mov
in
pop
in
mov
xchg
imul
repnz
fdivr
test
insb
mov
push
clc
ss
gs
dec
mov
and
loopne
mov
inc
add
cmpsb
mov
cmpsl
in
sub
mov
popf
sbb
xor
ja
or
cmp
rorl
xchg
out
push
xchg
aam
xchg
mov
insl
fisttps
mov
pop
and
cs
cli
mov
cwtl
in
jbe
pushf
sub
jmp
mov
add
ja
xchg
and
cmp
sar
mov
mov
inc
outsl
mov
je
lret
out
movlhps
and
or
jle
sahf
call
adc
les
idivl
addb
mov
adcb
fwait
inc
enter
mov
pop
lock
pop
fldl
jmp
out
daa
out
inc
push
xchg
adc
jl
mov
sarb
push
mov
pop
aas
adc
fwait
stc
adc
and
xchg
dec
hlt
jmp
inc
sbb
call
mov
push
inc
or
insb
adc
sti
lahf
movsb
fstps
scas
or
pop
loop
js
fadds
pushf
lods
in
and
daa
sbb
or
xchg
cs
adc
adc
outsl
popf
sub
in
sub
aas
testb
fldcw
push
mov
outsb
jbe
add
inc
xor
mov
dec
push
rol
and
scas
popf
hlt
lods
xchg
xchg
pop
pop
cmp
fs
shll
push
insb
lcall
call
fdivrs
push
xor
fcompl
dec
negb
in
push
ret
cwtl
std
push
imul
add
popf
std
cmp
sbb
jecxz
pop
push
pop
xchg
inc
fidivs
and
in
cwtl
fwait
pushl
xchg
nop
loope
sbb
sbb
xchg
out
rcrb
hlt
aaa
cmpsb
mov
adc
add
or
mov
mov
lret
adc
sbbb
repnz
pop
xor
mov
into
mov
test
pop
mov
shlb
or
repz
cmp
into
gs
fwait
jle
mov
push
mov
mov
push
xlat
adc
loop
push
xor
into
shlb
sub
mov
mov
fistpll
insb
cli
inc
mov
repz
inc
jne
andl
in
je
dec
cmp
std
lret
movsl
lahf
in
push
sbb
xor
lods
push
jns
fnstsw
test
lret
out
rcrb
lods
test
xchg
cmc
add
arpl
jecxz
sarl
jo
inc
jecxz
xor
outsb
popf
repz
lods
xor
fadds
fmuls
rcl
and
loope
or
xor
cmc
inc
out
pop
out
mov
xchg
mov
pushf
orl
push
outsb
mov
jbe
imul
xchg
neg
mov
jmp
lcall
or
loopne
jbe
push
cmpsl
push
dec
jl
test
dec
push
hlt
add
es
xchg
js
inc
int3
lock
sbb
dec
fwait
push
and
add
mov
ret
stos
add
rcll
rcll
add
xchg
int
fdiv
in
xchg
mov
addr16
xchg
adc
mov
jl
lods
bound
daa
scas
sbb
fcmovu
or
fsubrs
das
out
mov
lock
sub
addr16
adc
xchg
xor
sbb
js
icebp
cmovs
idivl
cmp
js
xchg
test
mov
pop
rcrl
jge
pop
pop
sar
xor
and
lea
mov
sub
outsl
loope
insl
in
int3
push
subb
xchg
mov
pop
fcoms
iret
stc
test
cmpsl
mov
scas
stc
push
imul
ja
cmp
xor
push
or
das
cmp
mov
fsubr
and
cltd
test
jmp
aad
add
cld
icebp
lret
cmp
clc
mov
in
lahf
out
or
movl
and
mov
outsb
inc
and
inc
pop
push
in
lods
or
loope
es
jbe
pop
std
in
mov
scas
xchg
imul
mov
clc
xchg
lds
icebp
or
int
jecxz
inc
loopne
xor
lcall
jne
jg
call
dec
jg
mov
lods
push
fildll
rcrb
inc
out
push
subl
adc
in
movsb
mov
jge
pop
xchg
push
shrb
adc
sbb
movsb
or
in
adcl
insb
adc
outsl
popf
cmp
dec
pop
mov
push
stos
dec
mov
in
cmc
inc
or
outsb
aam
mov
int3
dec
ljmp
ja
jmp
xchg
pop
push
jb
jnp
lea
rclb
and
loopne
enter
enter
mov
pop
ds
sub
push
aaa
mov
jne
push
mov
and
cmp
jmp
add
sub
fs
sti
stc
mov
adc
pusha
inc
or
mov
add
dec
rcrl
mov
scas
fcmovb
aad
shr
push
repnz
movsl
xchg
mov
jne
xor
cmpsl
bound
sub
js
sbb
lret
and
arpl
inc
imul
call
stos
scas
jbe
fnstenvs
outsl
cmp
sbb
inc
sub
xor
shrl
icebp
mov
mov
cli
popl
mov
js
inc
ds
scas
pop
fcomps
and
mov
cmpsl
bound
fldl
push
push
adc
fs
mov
jecxz
cwtl
pop
pop
repnz
cmc
inc
outsl
insb
not
or
ds
sub
gs
push
pop
sub
push
imul
push
lock
or
inc
nop
clc
mov
xchg
outsl
in
jno
sub
arpl
in
call
jmp
repnz
mov
andb
or
push
push
adc
sar
loop
jo
in
cmp
imul
testb
xchg
adc
lea
dec
mov
dec
int3
mov
or
add
adcl
sub
xor
ljmp
mov
addr16
scas
cmp
jge
das
xor
jmp
mov
push
push
or
popf
imul
dec
ja
stos
fnsave
mov
lds
sbb
je
push
inc
int3
mov
aas
loope
daa
out
add
cld
cli
push
or
bnd
mov
adc
mov
xchg
sub
adc
fisubl
lahf
pop
stc
aad
sbb
lods
push
adc
inc
in
setbe
mov
fisttpl
cli
jge
inc
mov
ret
cltd
sbb
les
inc
mov
xor
fadd
mov
lea
adc
inc
pusha
into
mov
jns
shrb
out
js
cmpsl
mov
jne
sti
mov
push
out
mov
jmp
addr16
cmpsb
mov
xchg
sbb
mov
adc
xchg
cmp
adc
iret
cmp
subb
pop
das
pop
push
pop
pop
or
nop
sahf
pop
pop
mov
fcmovb
int
ds
mov
add
xchg
in
jno
sub
sarl
xor
movsl
xor
jmp
movsl
lcall
xchg
aad
pop
pop
lret
jg
mov
sbb
popf
cs
aas
cmp
in
fdivs
push
xlat
ds
jge
cld
mulb
sub
sub
jae
inc
out
push
mov
les
test
lock
jg
xor
and
mov
add
cmpsb
lret
push
adc
mov
xchg
xor
idiv
inc
adc
out
pop
pusha
xor
push
add
xchg
fs
mov
mov
adc
les
xchg
aas
inc
sub
dec
or
adc
pop
loope
fdivrs
cmc
cmp
aad
xchg
cmp
fwait
js
rcll
getsec
js
dec
or
loop
jno
jle
or
stos
in
mov
ret
jnp
rclb
add
ljmp
add
movsb
lods
fwait
bound
mov
push
movlps
call
aas
movsb
sbb
mov
lock
movsb
ljmp
cmpsl
sbb
jecxz
sbb
js
xor
push
sub
mov
inc
cmp
das
popf
mov
xlat
push
mov
xchg
bound
sbb
clc
jmp
shrw
or
out
jbe
sub
insl
push
push
mov
inc
jbe
bound
aaa
in
test
inc
mulb
arpl
popf
jne
es
js
ror
mov
hlt
mov
dec
lret
orl
int
popf
sub
pop
push
jp
add
mov
popa
cmp
inc
lods
xchg
pop
shl
add
pop
mov
mov
push
push
mov
lcall
add
push
imul
xor
dec
sbb
ljmp
mov
test
sahf
out
aaa
ret
out
sbb
push
shll
mov
inc
jbe
cmp
dec
pop
push
lds
pusha
lret
inc
pop
lahf
addb
dec
in
and
cmp
and
or
push
jns,pt
pop
xor
xchg
mov
inc
sub
or
fwait
aas
mov
out
jae
pop
pushf
pop
mov
push
adc
aam
jmp
cmp
fists
sbb
movsl
aas
lret
in
insl
adc
sub
aam
dec
jb
mov
push
shlb
dec
popf
push
pop
pop
mov
icebp
mov
inc
cmpsb
and
and
mov
iret
add
mov
mov
xchg
out
sbb
adc
fiadds
xlat
jl
mov
call
and
sbb
test
cmpsl
and
subb
inc
dec
jbe
inc
xchg
sbb
xor
push
xor
dec
out
xchg
inc
bound
les
std
dec
xchg
sbbb
dec
cmp
xor
stos
add
cmp
dec
stc
ret
cmp
fwait
pusha
data16
loopne
sub
lret
lock
mov
xlat
inc
lds
inc
nop
cltd
adc
push
push
jb
ja
lcall
stos
movsl
sbb
ljmp
repnz
nop
test
mov
xor
mov
xchg
inc
xor
ljmp
fmul
out
test
cmp
testb
imul
out
shr
mov
sub
adc
pop
mov
test
cmc
clc
xchg
xchg
out
cmp
ss
lret
sub
ja
mov
lock
mov
pop
push
push
out
cs
mov
cmp
ret
jno
jnp
xor
fistpll
dec
mov
xor
aas
add
and
pop
leave
pop
mov
jecxz
fcmovb
mov
mov
out
jbe
fcomps
es
es
ja
or
push
pop
adc
sbb
dec
sbb
xor
mov
adc
movsb
jmp
cli
mov
sub
pop
in
inc
add
inc
fsubrl
push
xchg
xchg
popa
mov
mov
aad
out
scas
repnz
jge
in
jns
ficoml
das
sbb
jmp
or
les
mov
arpl
movups
rcl
dec
sahf
mov
sub
popa
adc
out
mov
pop
orl
jno
pop
sub
pop
cmpsb
mov
nop
inc
mov
test
dec
adc
push
jp
clc
jns
orb
movl
inc
jecxz
out
out
sbb
testl
ljmp
mov
cs
hlt
or
out
aad
sbb
sub
out
sub
das
sub
notl
inc
imul
push
out
or
jecxz
xchg
and
lcall
mov
pop
push
pushf
mov
xchg
mov
mov
pop
mov
adc
add
adc
pop
les
add
and
into
or
and
inc
sub
lods
das
jns
push
aaa
inc
and
and
sub
mov
sub
adc
imul
jns
mov
mov
pop
pop
cltd
je
out
cli
or
pop
adc
or
dec
xor
dec
filds
xchg
stos
add
pop
hlt
cmpsb
pop
into
push
sbb
pop
xor
mov
push
std
das
mov
xchg
int3
je
stc
adcb
lcall
mov
sbb
pusha
std
movsb
push
les
pop
fwait
and
fistl
div
push
adc
xchg
das
cmpsl
repnz
adc
aas
inc
lods
sbb
std
pop
xchg
fiaddl
mov
mov
rolb
ret
lret
lods
xchg
repz
inc
popa
sti
sarl
jl
out
xchg
xchg
out
in
jg
jge
xchg
push
ljmp
cwtl
xor
out
jno
repz
stos
mov
sbb
inc
mov
mov
rcll
jl
in
adc
loope
jo
fistpll
leave
movb
into
out
xor
out
int
stos
addb
inc
lock
add
pusha
aad
and
push
lahf
mov
ds
rcrl
push
inc
inc
outsl
es
rcrb
mov
scas
push
sub
or
in
imul
mov
nop
rorl
inc
push
xchg
ljmp
xor
cmp
dec
xchg
and
mov
in
cli
test
mov
push
and
jnp
int
sub
sbb
or
sbb
int3
test
repz
leave
outsb
cmp
clc
adc
push
lods
dec
pop
pushf
push
jns
mov
lcall
orb
in
loopne
mov
dec
dec
xchg
xor
inc
fs
cmc
aad
adc
daa
aad
jle
in
push
ljmp
dec
fisttps
inc
pop
push
cwtl
pop
dec
setns
scas
out
sbb
stc
mov
pop
xor
js
out
lcall
mov
pop
shlb
pop
push
push
mov
mov
out
in
subl
add
into
cmp
mov
push
sub
stos
test
ss
inc
inc
inc
cltd
mov
pop
mov
std
jmp
sub
jmp
sbb
sbbl
push
mov
aam
fimuls
cli
ds
inc
pop
das
cmp
loope
push
leave
sbb
rclb
mov
mov
push
sub
notl
inc
leave
in
pop
dec
fnstcw
pop
stos
push
jnp
jl
out
add
lret
or
in
rcrb
push
scas
js
mov
scas
fwait
jge
jmp
jp
xor
dec
dec
sub
scas
adc
mov
xor
imul
bnd
popa
dec
mov
adc
fadds
pop
stos
add
cs
push
mov
sbb
jno
mov
in
xchg
and
lea
ror
dec
into
rcrb
push
mov
andb
lds
cmp
xchg
mov
and
sti
jmp
hlt
stos
pop
mov
lret
loopne
cmpsb
mov
insl
into
cwtl
movsb
mov
add
cmp
xchg
test
data16
adc
dec
outsb
fbld
insb
sub
rcrb
mov
inc
pushf
inc
mov
xchg
adcl
mov
inc
cmp
mov
push
jo
repz
pop
test
mov
cwtl
add
mov
ret
cmp
roll
repnz
xchg
or
test
rcll
in
sbb
dec
cli
movsl
or
sub
test
lock
pop
movsl
jbe
andl
mov
jmp
dec
sub
shlb
das
repz
cmpsb
xor
push
pop
mov
fdivr
movsb
cmp
and
adc
xchg
repnz
jbe
dec
xlat
fisttps
mov
loopne
ret
mov
out
push
es
or
xor
xchg
ds
xor
mov
dec
push
push
ja
in
pop
mov
sahf
jle
sbbl
rorl
sbb
pop
xchg
mov
xchg
mov
sub
cmpsb
shrl
ljmp
lods
sub
add
xchg
in
mov
xlat
frstor
aad
pop
cmpsl
addr16
loop
aam
xchg
or
mov
adc
stos
aam
xor
jb
test
test
pop
lcall
jns
out
jns
or
pusha
sbb
push
ljmp
outsl
clc
adc
cmp
aam
and
mov
sub
pop
or
sbb
mov
mov
ljmp
push
leave
std
cmp
je
addb
out
sbb
int3
cmpl
sbb
imul
jb
mov
daa
mov
xor
ljmp
test
sub
mov
xchg
xor
pop
cmp
inc
js
insb
pop
scas
jbe
jnp
out
mov
mov
mov
inc
ja
mov
pop
mov
sbb
push
push
push
mov
xor
xchg
out
mov
rcrb
call
into
daa
pop
fs
sbb
jecxz
int3
daa
xchg
and
fdivs
push
mov
jl
mov
gs
outsb
adc
nop
or
test
or
inc
pop
and
es
or
shll
push
xor
adc
add
sahf
mov
xor
in
xchg
pop
sbb
jno
mov
add
scas
push
push
mov
in
mov
push
lcall
lret
insl
jmp
sarl
std
dec
and
mov
iret
lds
popa
aad
xlat
lods
push
xor
pop
inc
das
scas
sbb
xchg
and
call
pop
imul
push
nop
xchg
inc
add
popa
inc
sbb
pop
test
push
inc
push
push
xchg
into
mov
sahf
sub
jbe
mov
popf
ds
cmp
or
test
daa
mov
jo
jno
mov
out
imul
fildl
pushf
lahf
fs
mov
cmpsb
mov
bound
push
int
jne
dec
das
inc
mov
sub
xor
leave
cmp
imul
cld
push
push
cmp
mov
leave
lret
int
cmpsl
loop
add
cmpsb
sahf
dec
or
pop
sub
or
je
pop
out
or
mov
fmull
cmp
lods
lahf
gs
shlb
xchg
fdiv
dec
sbb
cmp
xchg
mov
int3
das
or
outsl
mov
lds
ss
xchg
das
cmp
pusha
mov
pop
or
hlt
fsubrs
inc
pop
call
jb
xchg
jge
int3
push
in
mov
inc
jbe
mov
mov
mov
clc
fsincos
scas
lret
in
and
cmpsb
sub
adc
xor
xlat
sbb
ret
mov
lcall
mov
jmp
js
cld
and
aad
mov
fwait
int
and
xor
push
lret
or
jne
sbb
sub
ret
fmuls
or
mov
jp
sub
dec
cwtl
stc
cmp
test
dec
hlt
mov
pop
inc
cmpsl
daa
ret
mov
mov
jne
inc
ss
movsl
xchg
pusha
cmp
sub
mov
pop
inc
xchg
or
pop
push
negl
std
add
inc
and
int3
inc
ds
pop
and
sub
popa
adc
rolb
shld
mul
jmp
sarl
rcll
or
popl
or
push
mov
lods
in
outsb
cmp
enter
xlat
xchg
push
popf
or
loope
mov
stc
in
shl
cmp
add
stc
fcoml
or
cltd
push
pusha
lcall
push
ret
jge
cmpsb
cmc
test
lret
xor
dec
push
mov
dec
hlt
mov
pop
dec
iret
dec
fwait
sbb
js
nop
dec
in
lret
sbb
sub
mov
mov
sub
xor
std
popa
sbb
loop
popf
in
push
xchg
popf
arpl
add
int3
xchg
icebp
jp
cmp
or
cmpsb
add
xor
cmpb
fs
stos
outsl
jl,pn
or
push
mov
dec
push
pop
xor
ret
scas
int
pusha
ds
shl
mov
adc
frstor
xor
shlb
jo
inc
test
stc
es
rclb
push
mov
cli
lea
xchg
cmpsl
sub
xchg
mov
ficomps
jne
pushf
and
lods
sub
dec
fldenv
ljmp
and
push
testl
push
hlt
out
dec
aad
cmp
incb
ss
stc
add
jns
subb
mov
sbbl
mov
cld
cmpsl
dec
xor
es
inc
addl
fdivr
out
dec
fiadds
out
and
sbb
push
roll
movsl
pop
call
mov
sbb
repz
sub
addr16
mov
inc
dec
cmp
fstpt
repz
add
call
add
mov
and
cltd
sahf
push
cmpsb
xchg
les
cmp
ret
repnz
enter
imul
pusha
cmpb
pop
mov
leave
imull
jl
icebp
xlat
fldt
xor
xchg
xor
fildl
jbe
xchg
or
lret
push
mov
enter
fst
jo
adc
adc
cmp
cli
test
rcrb
xchg
loope
repz
cmpsb
imul
pop
arpl
in
add
cwtl
or
or
or
jp
xchg
pop
pop
sbb
fwait
xor
je
inc
cmp
loope
rcl
out
sbbl
cmp
xchg
mov
add
push
outsl
bound
sub
xlat
push
or
or
add
jns
shr
adc
outsl
cmpsb
fcmovnu
shrl
sub
or
iret
ljmp
cltd
popa
mov
mov
lret
stos
push
int
xor
cld
lcall
sbb
sbb
sub
rcr
lcall
bound
sub
or
aaa
push
add
icebp
loop
inc
sbb
sub
mov
out
mov
jp
xor
enter
sub
addr16
add
pop
popf
mov
mov
stc
pop
jl
xchg
inc
push
andl
push
testl
pop
test
jl
outsb
iret
sub
pop
fisubrl
bswap
testb
int
out
push
stc
inc
lds
lcall
ja
cmc
add
ds
shlb
sub
outsl
inc
sub
mov
xchg
cmp
dec
jnp
push
mov
test
pop
cmc
cmc
shl
mov
in
out
in
int3
xchg
inc
push
ret
sarb
mov
sbb
dec
or
clts
xchg
ljmp
adc
int
mov
test
mov
sarb
xor
or
or
add
mov
push
pop
jns
push
andb
jae,pt
push
clc
inc
xchg
imul
sbb
repz
cmp
and
popf
adc
test
jp
xchg
push
shll
dec
out
cld
pop
push
cmp
mov
cmp
addr16
dec
rclb
mov
punpckhdq
int
fildll
scas
jb
sub
jns
jge
shll
outsb
pminub
into
cmp
and
iret
cli
add
lcall
sbb
mov
sarb
inc
adc
es
roll
cld
cmpsb
mov
inc
enter
in
gs
mov
cwtl
mov
andb
sti
jns
gs
xor
mov
movsl
iret
fdivl
out
loopne
addr16
fstpl
and
idivb
push
cwtl
push
mov
jl,pt
jg
dec
ljmp
cltd
test
xchg
jge
mov
mov
push
fldl
adc
cwtl
sbb
cmpl
adc
lods
lahf
inc
call
mov
testl
xchg
jne
jo
push
iret
ds
jecxz
int3
cmp
sti
lods
jl
data16
scas
loope
add
pushf
or
sub
fistpll
sbb
mov
sbb
or
xchg
aad
inc
or
stos
push
push
leave
sbb
int
pusha
mov
loopne
fdivl
push
stc
test
lock
mov
sbb
inc
cmp
popa
inc
movb
cmc
je
stc
dec
sub
sub
xor
xchg
cwtl
stos
mov
fmul
cmp
in
lea
lahf
insl
xchg
lods
and
divl
pop
xor
ret
test
jo
stos
sahf
xor
sti
fs
pop
pusha
test
les
add
mov
push
mov
mov
xchg
mov
repnz
cmp
sub
push
sbb
pop
mov
xor
outsl
pop
nop
popf
fistps
adcl
jmpw
mov
scas
sahf
mov
mov
and
test
xor
pushf
imul
xor
inc
lcall
sets
shrl
and
andnps
inc
add
mov
outsl
bound
divb
sbb
xchg
fists
dec
mov
push
fldl2e
mov
dec
sub
xchg
sbb
jg
xchg
cwtl
cmc
rcrb
es
lcall
push
sub
push
sub
xchg
mov
mov
and
sub
les
fxam
push
mov
push
mov
cltd
leave
daa
outsb
jnp
mov
leave
fcomp
dec
mov
push
jae
aaa
sub
in
stos
dec
jne
pop
dec
scas
jo
and
adc
cltd
pop
ljmp
xchg
and
adc
sub
push
jp
xchg
sub
mov
pop
sbbb
xchg
mov
pop
xchg
fmul
xchg
mov
fcoms
lods
cmp
test
mov
jmp
into
int
pop
cmpsb
adc
and
add
call
dec
out
out
sub
pop
or
stc
xchg
jp
in
andl
test
idivl
jae
mov
and
dec
mov
sub
hlt
sbb
push
dec
aad
std
jb
cmp
in
push
loop
mov
cmpsl
cmp
lret
cmc
push
inc
gs
hlt
push
sti
clc
in
shrl
aam
int
add
das
sub
mov
lahf
ja
or
and
sbb
push
sub
test
xor
sub
mov
mov
jne
fstpt
andl
xchg
data16
lods
jo
das
push
cmpsb
sub
lcall
sub
pop
xor
pop
daa
int
fisubrs
adc
mov
jg
adc
pop
fcoml
and
or
push
imul
je
push
push
cmp
int3
xchg
mul
sbb
mov
dec
mov
outsb
add
mov
fbstp
shll
loopne
mov
mov
sub
add
sbb
mov
mov
loope
push
stos
sbb
xchg
push
adc
push
push
xchg
lahf
data16
mov
xchg
movntps
ds
insb
imul
imul
sahf
xor
lock
cs
pop
ss
jbe
int3
fistpll
es
gs
and
dec
mov
je
into
sahf
fsubl
fwait
xchg
aas
mov
xor
insb
loopne
sbb
in
add
jecxz
xor
into
dec
lods
mov
ret
mov
mov
xchg
inc
push
mov
jne
pusha
pop
mov
notb
xor
in
movsb
mov
dec
outsb
and
pushf
arpl
cmpsl
mov
pop
mov
pop
inc
aam
and
jb
mov
jmp
mov
dec
and
shrb
adc
cmp
addr16
fstpl
out
enter
or
in
sbb
loope
mov
push
cmp
cmpsl
xchg
dec
shlb
push
xchg
xchg
sub
stc
mov
mov
fdivrs
jmp
mov
mov
ret
jmp
ja
data16
outsb
stos
shrb
cmp
stos
scas
or
scas
pop
dec
dec
adc
mov
jmp
lods
cmpsb
mov
push
jmp
xchg
scas
int
mov
sbbb
mov
xor
xor
jns
xlat
add
dec
add
in
xor
adc
call
and
popa
and
inc
test
gs
sbb
mov
stos
movsb
idivl
idivb
daa
push
pop
mov
in
cmp
dec
fidivrl
das
push
xor
push
adcb
push
dec
test
adc
push
int3
lea
inc
cmovno
stc
loope
inc
mov
or
xorb
xlat
xor
ja
mov
jle
cmp
xor
js
mov
mov
cmp
in
inc
cmp
mov
sahf
push
mov
jnp
and
movsl
shll
sarl
or
orl
push
ljmp
inc
roll
inc
xor
out
sbb
sub
push
adc
fadds
or
push
jp
popa
cmp
sbb
sahf
repz
lahf
in
test
sub
mov
dec
sbb
jmp
jno
push
nop
js
mov
mov
pop
aam
cmc
add
jmp
in
push
insb
mov
aas
int
mov
icebp
add
cmp
xchg
add
popf
nop
cmc
cld
xchg
jl
data16
aas
out
inc
nop
aam
pop
subb
sbb
sbb
scas
push
pop
push
fisubrs
data16
mov
sub
lret
dec
ret
inc
jns
lods
fnsave
jne
aad
aaa
scas
lret
pop
outsb
sbb
xchg
or
and
jne
enter
call
sub
aam
jne
leave
xchg
xor
dec
mov
jmp
jmp
into
jecxz
out
xchg
fnstenv
lods
rol
xchg
mov
jne
sahf
add
mov
jnp
sbb
mov
jl
xchg
rorl
lret
pop
mov
shlb
push
push
movsl
bound
push
or
dec
outsl
pop
xor
push
jg
push
out
add
nop
push
mov
ror
jbe
jnp
repnz
xor
test
out
fbstp
nop
mov
dec
and
push
push
ficoms
xor
in
xchg
sti
xchg
xor
outsl
popf
push
mov
in
adc
repz
adc
fs
aas
fldenv
mov
in
xchg
lgdtl
icebp
dec
sbb
xlat
push
inc
jb
rclb
sbb
test
dec
daa
daa
push
sbb
or
jl
aas
int3
das
lcall
mov
std
cli
and
loop
jp
mov
cmp
mov
sub
scas
lock
dec
or
mov
test
daa
sbb
pop
dec
jbe
test
pop
mov
or
call
adc
push
jp
loop
jg
mov
push
dec
fadds
enter
std
lret
mov
adc
mov
icebp
mov
jno
je
pop
seta
push
xchg
mov
mov
xchg
push
cwtl
stc
pop
test
sub
sar
mov
fiaddl
add
seta
mov
int
adc
rolb
push
lcall
ret
inc
push
aas
cld
lock
jge
xlat
fisttpll
mov
pushf
mov
xchg
jecxz
inc
add
loop
dec
push
int3
jle
jb
je
aaa
sbb
stos
push
stos
add
popf
jl
data16
les
adc
and
inc
les
jo
cmp
xchg
pop
sti
sub
test
and
hlt
repz
in
aam
sti
insl
inc
bound
adc
mov
cmp
inc
pusha
xor
scas
add
out
xchg
mov
cmc
aas
incl
xchg
cmc
jns
and
and
dec
fwait
dec
xchg
mov
mov
ds
jp
mov
add
mov
les
push
push
rclb
imul
loope
mov
cmc
inc
jecxz
decb
data16
icebp
jle
jnp
adc
sub
push
inc
lea
ljmp
cmp
mov
mov
sbb
cltd
clc
arpl
movsb
loope
mov
adc
pop
push
or
insb
sahf
push
repz
mov
cmp
fcmovbe
xchg
jno
in
inc
inc
js
sbb
push
popa
cli
mov
pop
out
lcall
ret
xor
jp
jmp
das
sti
xorl
xor
mov
sub
data16
sub
insl
js
inc
lea
inc
xchg
or
aas
leave
push
popf
pop
popa
push
int
repz
lret
js
inc
xor
push
incb
aaa
lods
movb
stos
insb
pop
call
mov
movsl
ret
cld
jno
and
sbb
pop
es
insl
iret
in
lahf
jns
jg
jl
sbb
data16
loopne
fcom
das
dec
orb
mov
cltd
ret
push
shlb
pushf
test
jno
shll
aam
rcl
jo
pop
mov
jge
pop
dec
mov
sub
xchg
jo
loope
sarb
mov
cmc
sahf
enter
incb
pop
fsts
xchg
lea
and
mov
cmpb
cmpsb
push
push
rorb
xchg
aas
cwtl
jnp
dec
rclb
loope
fiadds
inc
jle
add
sbb
jmp
push
push
and
dec
lods
push
inc
xor
mov
outsl
dec
mov
cmpsl
mov
mov
repnz
cltd
js
outsb
jns,pn
arpl
scas
in
push
jle
sub
push
addr16
test
mov
or
mov
inc
push
rcrb
or
in
inc
test
lea
push
lods
test
xor
mov
ss
sahf
jns
movsl
or
rcll
mov
sbb
ja
mov
mov
mov
out
icebp
stc
lcall
pushf
xchg
add
lret
inc
loop
lods
or
sbb
iret
insl
insb
add
inc
iret
inc
sbb
aad
inc
jmp
fcomp
decl
jb
mov
mov
inc
push
push
adcl
push
push
rcr
scas
jb
ss
ret
outsb
pop
xor
sbb
cwtl
movsb
out
xlat
sti
adc
pusha
std
jp
hlt
sub
addb
in
add
cmp
ljmp
data16
int
cmp
mov
iret
movsb
or
lahf
orl
sub
mov
imull
movsb
popf
roll
arpl
push
jne
ljmp
call
ret
xchg
nop
imul
dec
negb
dec
sub
jp
and
sbb
test
sub
fbstp
jne
push
pop
clc
inc
lcall
mov
aaa
inc
fsubrs
aam
or
mov
lods
mov
test
movl
push
shrb
or
insb
jle
sbb
inc
cmp
lcall
push
cmp
add
push
jbe
bound
rorb
sub
sbb
outsl
mov
pusha
cwtl
xor
adc
fs
and
adc
dec
in
idivl
pop
adc
fwait
in
loopne
xor
in
movq
leave
adc
outsl
mov
xchg
add
cmp
lret
ret
cld
insb
rolb
jno
packssdw
xchg
cli
outsl
mov
das
nop
push
aas
andl
ds
dec
sbb
unpcklps
lret
jl
push
and
aad
push
xchg
mov
mov
push
jb
inc
cmpsl
fwait
stos
xchg
test
xchg
out
outsb
push
or
jns
bound
iret
jns
and
insl
testb
cmpl
movsl
testl
fmul
pop
cmp
cmp
pop
or
sbb
popf
and
rorl
sbb
sub
scas
int
push
add
cmp
cwtl
aas
dec
sbb
subb
dec
pop
fbstp
adc
jae
test
flds
stos
popf
imul
mov
sbb
loope
push
out
lret
in
in
adcb
xor
call
fs
dec
or
sub
sbbl
mov
add
idivb
pop
mov
rorl
pop
scas
and
sub
leave
jl
or
imul
cld
and
xor
push
popf
sub
into
cmpsl
mov
int
loope
out
cmpsl
xor
mov
push
lock
dec
adc
cmc
mov
jae
pop
mov
lret
xchg
sub
cmp
setb
js
pop
dec
pop
mov
cmp
xchg
stos
mov
mul
push
mov
and
push
insb
mov
mov
out
lahf
adc
mov
mov
fisubrs
adc
xor
dec
dec
leave
or
fildl
repnz
and
mov
xchg
int
rorb
sbb
cld
pop
shrb
cwtl
jge
mov
mov
mov
sbb
mov
ja
shrl
cmc
jmp
fldt
sub
sub
icebp
jns
outsb
or
or
fstl
mov
cltd
jne
adc
dec
push
dec
add
leave
adc
dec
ret
cmp
sbbb
pop
cmpsb
cmc
fsubrl
sbb
push
inc
adc
xchg
jnp
repnz
inc
js
idivb
clc
ftst
mov
pop
mov
jg
stos
mov
xchg
arpl
mov
add
or
xor
movsb
pusha
push
cmp
and
ret
fwait
and
daa
and
ja
mov
mov
sbb
aas
inc
ja
xchg
out
xchg
scas
mov
loop
dec
dec
add
push
insb
aam
rep
hlt
lods
or
mov
sahf
adc
jge
lods
xor
sub
aas
cmp
cmp
add
jle
adc
xchg
les
mov
jnp
rclb
mov
ficompl
mov
mov
push
xor
mov
ret
icebp
dec
xlat
and
into
sub
inc
icebp
push
cltd
outsb
call
je
arpl
aaa
dec
rcrb
popa
pop
stc
or
add
add
pop
dec
loopne
pop
flds
movsl
xor
jbe
pop
push
sti
mov
test
pop
shl
mov
dec
xor
lcall
cmpsl
cmp
dec
divb
rclb
sahf
sub
jbe
push
bound
pop
fdivr
leave
mov
in
push
js
add
test
test
inc
sbb
jb
xor
sbb
hlt
movsl
iret
lock
movsb
sti
jne
xor
xchg
push
add
mov
fcmovnu
fstps
aaa
pusha
imul
shll
rolb
cmpb
xchg
dec
push
int3
sub
fisubs
mov
or
add
inc
mov
ss
sbb
cs
dec
out
lods
lock
fldcw
fwait
out
xorb
fsubrl
xor
mov
iret
ss
push
jle
pop
or
dec
push
jne
add
arpl
pusha
pop
and
cltd
xor
dec
cltd
mov
sub
mov
mov
sahf
mov
repz
iret
mov
pop
xlat
int3
dec
mov
fsubr
fsubrs
mov
mov
sub
mov
loop
inc
cmpsl
cmpsl
push
lcall
mov
cpuid
sbb
outsl
fistpl
aam
cmpsl
mov
mov
ret
mov
shlb
pop
inc
lock
sti
outsl
adc
rclb
mov
xor
adc
stos
inc
and
mov
stos
or
mov
dec
mov
mov
int
int3
mov
pop
pop
sub
mov
mov
in
dec
jmp
dec
adc
in
jmp
cmp
mov
cs
adc
sbb
add
pusha
fidivrs
and
jno
jg
int
pop
fcompl
sbb
mov
ds
xchg
sub
or
adc
scas
mov
dec
ret
scas
std
sub
loop
xchg
leave
mov
jmp
inc
and
rorb
push
cmp
lock
mov
cmp
jmp
iret
jae
xchg
adc
das
out
mov
mov
inc
adc
orl
insb
pop
out
xchg
push
or
push
cmp
cmpsb
or
movsl
stc
int3
mov
xchg
test
sbb
cmpsb
cmp
outsl
leave
insl
jo
mov
pop
jle
jne
dec
push
sub
sbb
push
mov
insb
out
scas
cli
sahf
je
and
es
xor
movsl
mov
mov
and
sbb
out
gs
inc
and
mov
arpl
insl
mov
fwait
call
lret
in
cltd
aas
lret
nop
xor
aam
pop
or
mov
out
jge
rcll
mov
loop
popa
push
mov
and
adc
popa
mov
xor
add
clc
inc
test
xor
xchg
imul
dec
pushf
enter
dec
or
imul
test
mov
sub
mov
mov
mov
dec
xchg
test
jmp
lahf
pop
inc
and
mov
adc
mov
mov
jo
fdivp
or
hlt
xchg
mov
add
cltd
pop
mov
mov
int
imul
arpl
lock
sahf
push
divl
push
addr16
jmp
mov
sbb
jg
xchg
push
push
sbb
dec
xor
cmp
loope
mov
xor
push
into
and
daa
outsb
jg
mov
or
push
lods
das
test
and
sahf
or
mov
adc
sub
sub
sarl
in
mov
mov
nop
nop
sub
mov
or
push
mov
ss
mov
call
xchg
cmpsl
out
pop
std
stos
int
push
mov
in
push
jns
mov
fldz
sbb
cltd
cmpsb
fstps
xchg
and
loopne
xchg
jo
sbb
push
sbb
adc
mov
jecxz
xchg
push
pop
jne,pt
aaa
inc
push
pop
mov
adc
fdivrs
mov
jnp
scas
adc
mov
xchg
andb
bound
aam
xor
out
push
aam
lret
add
push
nop
mov
scas
andb
pop
xchg
pop
mov
xchg
jae
rol
fdivl
loope
fidivrs
mov
mov
mov
test
fimull
cmp
pop
mov
pusha
sub
push
cmp
mov
ror
mov
call
outsl
ss
push
dec
jne
jge
dec
push
mov
das
rcll
add
cmp
push
imul
push
xor
subb
adc
das
and
add
daa
lahf
cmpsb
cmp
and
bound
adc
cmp
cmp
and
lods
pop
jae
bound
cmp
dec
push
mov
aad
lock
flds
inc
das
mov
cwtl
fs
insb
mov
mov
sub
fisttpll
mov
mov
lods
stc
sbb
clc
test
jbe
fwait
jg
cmpsb
leave
lods
inc
pop
jae
add
mov
xchg
dec
xor
jne
cmp
sbb
dec
jae
jns
les
stos
mov
or
shll
cmp
les
xor
stos
loop
sub
inc
dec
call
mov
mov
jmp
arpl
push
jb
dec
xor
lcall
mov
ret
ret
lods
loopne
test
mov
outsl
inc
dec
push
jg
push
xchg
imul
std
imul
pushf
add
lods
pop
imul
imul
and
aad
cmpsb
test
aad
pop
stos
repnz
cwtl
int3
or
jb
scas
aam
mov
subb
cmpsb
mov
pop
dec
add
aam
fistpl
pop
rcrl
sbb
outsl
scas
pusha
add
into
dec
movsl
dec
cs
shrl
lret
out
push
cmp
sub
jbe
out
push
dec
and
jno
jbe
bound
rclb
jno
sub
mov
or
sbb
pop
lcall
xchg
and
push
cmpsl
cmp
in
push
ja
cmc
pop
xor
mov
aas
xchg
shll
scas
inc
mov
popl
pop
aaa
adc
cmp
push
push
push
imul
inc
mov
inc
popa
mov
insl
jno
lcall
orl
jp
test
push
loope
push
jne
leave
inc
in
xor
stos
data16
jns
push
jns
scas
sub
pop
es
lret
jmp
sbb
shl
jge
in
or
shld
inc
mov
loop
out
out
xor
call
or
jmp
cmpsl
int3
in
xchg
jg
sbb
xchg
fdivrl
insb
xlat
mov
mov
and
in
ficoml
dec
stos
jae
ljmp
and
cmpsb
es
add
pop
data16
movb
nop
aaa
mov
and
push
mov
mov
pop
mov
out
sub
out
xchg
iret
scas
xchg
ret
ljmp
inc
jb
mov
in
outsb
add
adc
outsb
dec
pop
jae
cmpsl
sti
push
push
imul
mov
mov
pop
insl
push
cli
xor
popf
sbb
mov
or
lret
inc
xor
les
mov
cmpsb
adcl
pop
add
or
sbb
cmp
pop
xchg
cli
idivl
ret
insl
out
jno
and
xor
sbb
iret
lea
test
dec
testl
popf
xor
call
xchg
aaa
jnp
adcl
mov
dec
cmpsl
lcall
repnz
xor
sub
cmpsl
jb
stos
and
add
test
pop
stos
andb
inc
xchg
jnp
jbe
sahf
lds
mov
mov
jnp
iret
das
repnz
cld
rcrl
jo
loopne
pop
mov
popf
mov
adc
inc
fsubs
fcoml
bound
repz
jmp
gs
pop
repnz
icebp
ficompl
std
and
jg
js
add
mov
xor
in
scas
js
ja
cmp
or
pushf
aaa
xor
mov
inc
into
insl
iret
fimull
pop
int
lock
xor
mov
stos
push
out
adc
inc
xor
add
mov
jb
bound
repnz
mov
cmpsb
jg
bound
enter
sarl
lret
pushl
dec
sarl
xor
mov
jae
lret
jmp
mov
fwait
dec
fdivs
inc
mov
sarl
je
mov
push
xchg
sub
jns
jg
cmp
inc
daa
subb
push
pop
into
push
in
cmp
stos
and
ja
jo
ret
icebp
dec
aaa
ds
cltd
fisubs
xor
sub
push
not
xchg
mov
mov
cmp
push
adc
lret
ljmp
sbb
jle
and
add
lods
shlb
in
clc
fiadds
test
ret
insb
mov
ret
int3
jg
and
push
aas
or
add
adcl
sahf
std
push
mov
dec
sbb
jbe
jbe
in
add
inc
add
push
dec
cmpsl
mov
fldenv
iret
mov
adc
mov
es
stos
out
mov
loopne
mov
addr16
out
jl
and
sarl
dec
pop
push
scas
adc
lods
loopne
enter
mov
pop
movsl
push
pop
xor
das
lock
cs
push
xchg
cmpsb
sahf
and
inc
ret
daa
out
lcall
or
or
pop
xor
or
cmp
shl
and
push
orl
xchg
lods
imul
cltd
int
and
out
mov
and
dec
test
jl
or
out
sbb
imul
mov
in
or
mov
xchg
add
cmc
out
mov
stos
sub
idivl
mov
rcll
mov
push
lods
js
add
add
inc
or
jbe
inc
out
jns
mov
add
insb
movsb
fdivs
mov
pop
test
cmc
into
fcoml
inc
je
xor
pop
jns
pop
jmp
mov
imul
mov
test
cmp
mov
cmc
sbb
push
test
sub
and
dec
in
mov
inc
mov
hlt
pop
pop
adc
lret
ja
out
push
test
cmp
cmc
out
aam
popf
jb
push
js
cwtl
sar
xorl
and
sub
test
xchg
imul
jecxz
sbb
pop
pop
xchg
or
dec
xor
mov
mov
cs
jb
cltd
mov
lcall
es
cwtl
fisttpl
ret
jae
lds
dec
pop
cmp
jne
sub
push
pop
push
push
js,pt
jo
call
cltd
mov
lods
sub
sub
cmpsb
aad
enter
lods
sbb
stc
lret
mov
cmp
je
rol
sbb
or
insb
notl
mov
js
or
rcrl
shl
inc
mov
neg
cmp
in
or
hlt
out
out
mov
xchg
jo
dec
jbe
out
or
jge
add
jne
rorl
addr16
mov
jg
gs
fdivl
das
push
ja
adc
xchg
addb
cld
sbb
lods
sbb
and
idivl
add
mov
in
movsb
sub
repz
add
dec
testb
sti
sbb
adc
loope
cmp
fdivrl
or
or
in
jg
push
dec
or
mov
pop
xchg
imul
pushf
xchg
mov
mov
fistps
add
jp
mov
sbb
addb
lahf
pop
pop
jbe
xchg
inc
test
cli
enter
repz
or
push
inc
mov
jecxz
clc
outsl
imul
outsb
cs
adc
cs
pop
clc
scas
popf
fidivrl
dec
jg
xchg
inc
pop
sahf
pop
pop
jmp
aas
frstor
outsl
lcall
dec
inc
sbb
pop
mov
into
pop
pushf
lds
test
inc
pop
inc
sub
cmpsb
stc
adc
incl
test
sti
into
and
aam
pusha
jnp
pusha
loope
popa
mov
cwtl
mov
xor
jecxz
xor
shll
aaa
jle
inc
pop
add
dec
jnp
xchg
jns
inc
lcall
fdivrs
dec
stos
sub
pop
iret
push
push
or
push
or
dec
leave
outsb
iret
rcrb
mov
call
es
dec
pop
aam
or
pop
sarl
pop
fnstenv
add
pop
clc
adc
jg
or
test
insb
inc
mov
cmp
jne
in
rorl
fimull
fmuls
xor
movsb
jmp
sbb
or
and
fadds
dec
stos
jg
stc
shlb
stc
stc
adcb
lcall
sbb
mov
les
jg
sar
push
dec
in
cld
adc
dec
mov
cmpsl
push
mov
xor
sub
mov
mov
jge
sub
dec
lods
ret
push
enter
dec
lods
mov
call
cld
xchg
inc
lret
dec
jl
mov
mov
idivb
mov
or
push
pusha
loop
fldt
jnp,pn
jg,pn
lret
repz
jbe
aas
cmp
sets
int
sub
sbb
and
xlat
sub
pop
xorl
push
mov
in
mov
inc
xchg
loopne
xor
rcll
pop
aas
inc
int
pusha
shrl
or
mov
adc
and
pusha
aam
pushf
cmpsl
jge
clc
sbb
in
sub
test
sti
pusha
incl
fcmovb
jmp
flds
outsl
and
dec
sbb
lods
and
inc
sbb
xchg
pop
push
inc
adc
loop
jge
repnz
pop
sbb
incb
xchg
xchg
arpl
sub
daa
mov
sbb
mov
lds
adc
lcall
roll
in
stos
test
mov
nop
cs
das
mov
les
jnp
push
xchg
mov
dec
mov
cmp
inc
mov
outsl
shrb
out
inc
pop
cmp
in
ret
bswap
ret
mov
push
jle
pusha
pop
mov
sbb
pop
sub
daa
adc
clc
and
addr16
xor
jg
cwtl
inc
inc
or
int
sbb
jo
mov
push
sbb
je
xchg
and
or
cmp
and
pop
bound
mov
and
xchg
push
mov
or
adc
xor
icebp
jge
repnz
mov
xchg
cmp
sbb
sbbl
mov
dec
pop
push
mov
fs
es
pushf
shrb
in
mov
xor
and
test
or
push
daa
jg
jmp
push
out
dec
lock
mov
test
rcrb
sub
std
ret
add
dec
roll
jnp
or
aad
xor
loop
hlt
ljmp
les
mov
leave
jnp
cmpl
outsb
pop
jp
sub
loope
out
adc
mov
lods
mov
das
les
stos
jg
cmp
push
mov
clc
cmp
sbb
and
sbb
push
jo
stc
cmc
mov
cmp
add
loopne
jns
sbb
mov
lods
pop
add
mov
inc
push
in
shlb
jmp
and
xor
mov
dec
dec
mov
mov
xor
mov
fs
addr16
inc
sbb
sbb
pop
ljmp
cmp
testb
in
push
push
xchg
ljmp
icebp
imull
xchg
inc
mov
mov
movsl
ret
cltd
xchg
dec
fsubp
fldenv
rcrb
inc
loop
mov
dec
icebp
gs
cs
daa
jge
in
inc
mov
in
mov
rorl
mov
and
push
repnz
mov
jb
sbb
aam
sub
decb
int
mov
pop
add
mov
pop
imul
in
adc
mov
xlat
add
loope
or
scas
or
adc
andl
cltd
sub
popa
pop
xchg
mov
xchg
fidivrs
out
push
inc
mov
or
xor
xor
cmpsb
and
divl
jge
loopne
ja
inc
cmp
mov
mov
dec
jo
xorps
lgs
jne
inc
lcall
xor
mov
rcrl
cmc
mov
lret
cmp
mov
adc
jno
xchg
mov
ljmp
and
dec
pop
xchg
enter
add
in
and
mov
push
mov
mov
out
test
jecxz
mov
test
dec
dec
xlat
rcrl
jno
pop
pushf
dec
ret
sub
inc
iret
xor
mov
inc
xchg
jle
lock
and
lahf
mov
or
and
mov
aam
dec
push
loope
or
sbb
jo
mov
pop
push
mov
mov
pop
add
scas
out
lret
and
out
sbb
or
test
sub
lds
leave
cmp
jecxz
sahf
in
xor
sar
ds
fcomp
fcompl
mov
dec
cli
ret
jmp
test
enter
sub
dec
and
shrl
movsb
bound
mov
insb
lds
lcall
cmp
xchg
js
mov
adc
xor
mov
mov
mov
jbe
dec
imul
loop
in
rorl
rcr
ja
mov
pop
xchg
add
loop
ss
xchg
mov
cmp
inc
lds
in
and
cmp
out
or
mov
jo
lcall
shlb
pop
jno
and
inc
inc
ds
cmp
cltd
jno
mov
out
lods
mov
pop
pop
mov
jle
daa
lds
add
je
movsb
fs
sarb
test
sub
cmc
imul
scas
sub
pop
pop
leave
pushf
cmpl
ss
sub
push
mov
dec
jns
dec
add
jbe
or
ljmp
add
mov
sarl
rcrb
sub
dec
stos
push
loope
repnz
lods
test
jnp
fidivrl
pop
test
xor
xchg
add
pop
push
in
mov
add
cmpl
inc
inc
mov
mov
out
ficomps
cmp
shr
repz
ret
or
sbb
out
adc
add
and
cli
out
test
ret
adc
xlat
cmc
insl
inc
push
lcall
cld
les
jl
std
and
pushf
movsl
dec
daa
push
aas
movsb
add
inc
cmp
hlt
std
rclb
test
stos
sub
sarl
imul
mov
test
sub
ds
stos
test
arpl
fisttpl
jmp
ficoms
mov
jb
xchg
clc
jge
in
xchg
adc
and
test
mov
or
and
and
in
cmp
push
cli
lods
iret
pop
outsl
or
int3
std
arpl
sbb
pop
rolb
call
mov
aam
sub
shll
aaa
push
movsb
dec
fs
mov
inc
js
jns
in
xor
inc
add
lods
frstor
cmp
and
repnz
mov
out
popf
push
aas
mov
cltd
mov
lock
and
add
push
dec
lods
jno
lahf
push
mov
adc
and
nop
clc
mov
jmp
fcmovnu
mov
cmp
mov
xchg
aas
sahf
jmp
outsb
mov
xor
pop
xchg
or
adc
and
pusha
lods
cmc
dec
les
push
mov
xlat
inc
mov
std
xchg
sarb
mov
dec
xchg
cltd
fdivr
test
sbb
pop
mov
adc
sbb
ljmp
imul
lret
xor
mov
inc
fcoml
inc
scas
jns
inc
and
sub
js
adc
add
loop
clc
dec
xlat
pop
aam
std
js
dec
shrl
pop
ret
mov
adc
int
mulb
cwtl
decb
cmc
mov
sub
push
dec
jp
pop
data16
xchg
dec
ss
cmp
out
gs
add
jecxz
fildl
dec
mov
sub
stc
rcrb
fwait
pop
inc
pushf
adc
sbb
sbbl
adc
cmp
aas
mov
xor
push
mov
test
int
jnp
lcall
outsl
aad
popf
mov
pop
das
cmpsl
rorb
jae
mov
fistps
out
push
les
leave
test
xchg
adc
mov
jg
test
jae
out
cld
lods
and
fs
popf
daa
xor
pop
stos
ret
jl
fldt
cmp
cmpsb
inc
out
rcrl
xchg
cmp
xor
xchg
push
add
int
cmp
mov
ja
lds
mov
mov
out
cmc
mov
sarb
in
inc
lcall
pop
xchg
pop
insb
lahf
push
mov
aad
mov
mov
adc
data16
shll
loop
add
fdivrs
and
jle
xchg
dec
insb
cmc
pop
push
fisubrl
movsb
inc
arpl
cltd
dec
nop
or
nop
imul
movsl
into
or
push
popa
int
xor
aas
xlat
sbb
fisubl
mov
loope
inc
lret
mov
insb
movsl
xor
mov
mov
shll
jge
fldl
add
sbb
loopne
mov
je
mov
sbb
out
push
iret
mov
mov
inc
shlb
inc
repnz
inc
movsl
add
xor
enter
std
out
cvtps2pi
subb
cmpsb
cmp
push
test
inc
std
icebp
pop
adc
sub
jle
mov
cmp
cmp
mulb
push
out
call
rolb
ja
data16
dec
jle
cmpsb
scas
jl
dec
add
stc
test
cltd
mov
dec
inc
nop
cmp
popa
xor
pop
int
or
call
sub
dec
dec
lret
pop
dec
adc
in
jnp
xchg
mov
xchg
and
stos
mov
xchg
dec
mov
adc
adc
push
jno
sub
test
mov
lahf
and
and
imul
inc
gs
bound
imul
mov
jp
dec
insl
pop
imul
shl
pop
pop
dec
pop
mov
repnz
rcr
cmp
adc
lock
ret
jae
add
pop
push
notl
clc
push
xchg
adc
jo
pop
jbe
movsl
and
sub
ss
repz
xor
xor
jno
sub
pushf
loop
push
lods
inc
loope
int3
idivb
or
push
jecxz
xchg
ljmp
push
fwait
xchg
push
lock
jb
mov
lds
out
dec
test
xchg
adc
shrb
ficomps
jmp
enter
lcall
cwtl
popl
rolb
xchg
push
outsb
mov
mov
fwait
cmc
inc
xor
cltd
inc
or
cmp
xor
and
or
lret
clc
imul
insb
in
sahf
outsb
fcompl
out
arpl
add
jb
les
repz
test
ss
fimull
jl
or
inc
lea
xchg
lret
mov
repz
xchg
mov
fcom
mov
sbb
ftst
dec
insl
pop
sbb
aas
scas
std
mov
jg
dec
push
ljmp
jl
adc
cmp
sti
cmc
sbb
jp
pop
and
inc
fldl
adc
stos
rclb
mov
ret
pop
bound
mov
jmp
xor
test
adc
in
dec
xchg
mov
sti
sub
in
pop
lcall
aas
jno
int
in
stos
adc
sbbl
jge
xchg
mov
pop
cmpl
push
les
and
mov
jns
pop
push
repnz
add
rcll
adc
mov
clc
mov
rclb
mov
adc
fsts
call
fisubrs
aam
adc
xor
sub
icebp
push
mov
add
movsb
cmp
out
fistpll
dec
mull
pop
add
jp
outsl
or
cs
mov
punpcklbw
push
mov
test
push
sub
cmpsl
sub
lods
xor
rclb
xor
xchg
arpl
jo
js
push
jl
jnp
data16
lahf
mov
shll
and
daa
cwtl
loopne
mov
pusha
iret
out
or
jbe
daa
mov
jb
fstp
cmp
inc
mov
and
xor
fidivrs
jge
repz
or
dec
adc
sub
mov
or
fs
xchg
xorl
fdivrl
sbb
xlat
sarl
sbb
or
pop
pop
jp
mov
aam
xchg
mov
sbb
and
sbb
movsb
insb
in
hlt
in
adc
in
fstp
mov
imul
inc
push
mov
inc
cmp
xor
bound
xchg
lock
inc
mov
imul
outsl
rorb
mov
cmp
mov
fs
lods
inc
dec
push
test
add
sti
fists
fldl
scas
cli
into
mov
jle
in
sbb
xor
sub
adc
nop
and
shlb
testl
loope
dec
cli
cmp
push
sbb
outsl
jecxz
aam
lahf
in
mov
xor
sbb
test
imul
add
lods
sbb
pop
adc
cltd
dec
dec
in
loope
adc
inc
xchg
in
add
sbb
ja
mov
mov
cmc
mov
mov
fwait
mov
jb
push
dec
sub
outsb
gs
iret
ljmp
outsb
cmp
xchg
pop
mov
jb
adc
repnz
arpl
jecxz
pop
in
add
jne
jno
mov
mov
negl
dec
push
mov
push
sub
addb
addl
addr16
in
push
std
aam
xchg
fisubs
sbb
stos
mov
repnz
clc
jns
and
mov
loopne
imul
scas
int3
loop
clc
and
imul
nop
jb
and
loopne
movsl
bound
lock
and
adc
mov
jmp
scas
rcr
xchg
or
jmp
inc
jge
sbb
nop
jmp
and
mov
test
cmp
and
test
and
ret
mov
adc
ljmp
ljmp
inc
push
jecxz
mov
push
cld
fnstenv
ds
outsb
mov
mov
sbb
mov
pushf
adc
jb
jle
out
sbb
xchg
mov
push
cwtl
add
mov
and
pop
js
or
fimull
ficompl
push
or
and
mov
xor
cmpsl
imul
mov
das
mov
sub
pushf
inc
sahf
xor
mov
xchg
xchg
dec
stos
notl
dec
adc
int
into
inc
leave
fstl
pop
sbb
shll
or
inc
mov
dec
movsb
and
inc
push
scas
les
xchg
xor
jns
roll
jmp
mov
imul
xchg
insb
popf
inc
push
xor
into
sbb
fucomip
mov
out
mov
jle
mov
cmp
sbb
divl
jmp
mov
sahf
adc
pushf
pushw
or
cmp
push
jno
pop
lods
sbb
fnstcw
in
gs
jl
leave
sub
cmpsl
sbb
jl
call
jae
sbb
outsl
dec
pop
mov
push
lahf
sbb
mov
xchg
fld
nop
cmp
mov
adc
mov
lea
sbb
in
cmc
pop
pusha
or
ss
mov
test
jl
std
insl
nop
das
dec
ljmp
push
xchg
adc
lods
sti
test
js
fdivrs
push
or
fisubs
out
icebp
add
sbb
outsb
incl
icebp
lret
stc
movsl
push
in
subb
je
int3
lcall
adc
sub
cmp
inc
inc
mov
sub
aad
xchg
cmp
pop
fildl
jle
aaa
stc
ljmp
lahf
sub
frstor
dec
enter
fidivrl
xchg
mov
std
xchg
cld
in
mov
mov
mov
xor
sbb
or
mov
push
sbb
jnp
push
push
jp
push
push
dec
mov
push
aad
xchg
xchg
js
add
mov
dec
adc
dec
mov
xchg
lods
add
sbb
inc
push
jo
lcall
cwtl
loope
cmpsb
sub
lret
mov
mov
pop
lea
sbb
mov
xor
lgs
sub
stos
ret
jbe
cmc
ret
in
in
mov
popf
push
cmp
lret
aad
push
mov
pushf
inc
cld
xor
adc
ficomps
xorb
jae
popa
push
and
add
in
cmpsl
repz
and
sub
out
and
mov
mov
dec
jmp
adc
mov
adc
ror
sti
cmp
subl
cs
mov
out
inc
fdivrl
insl
inc
out
mov
arpl
addl
jmp
jle
rcr
xchg
out
ss
iret
lods
add
or
clc
cli
or
xor
daa
out
cld
ficoml
push
stc
pop
je
not
and
fstl
arpl
sub
aam
clc
insb
sbb
scas
dec
cmp
out
mov
push
enter
inc
out
sbb
mov
xchg
hlt
adc
int3
out
lds
inc
sub
inc
push
push
lahf
popf
fldl
and
pop
addr16
cmp
jnp
std
lds
push
or
dec
pop
xor
or
push
int3
shll
mov
pop
cmp
and
ljmp
add
mov
xchg
and
out
and
pusha
fisttpl
into
cmpsl
arpl
test
push
mov
adc
js
testl
data16
push
in
fisubrl
insl
out
jge
insl
and
dec
dec
xchg
cmp
stos
sbb
push
jp
inc
inc
add
mulb
cltd
push
pop
add
out
cwtl
inc
and
xor
lock
daa
sub
mov
push
pop
pop
nop
pop
mov
sti
xor
iret
loopne
fldl
push
test
shr
cmc
adc
loopne
aaa
jg
xchg
or
cmpsb
jecxz
inc
mov
ficoml
lea
add
dec
cwtl
sbb
push
pop
clc
xchg
enter
xchg
or
fistps
xor
test
andl
imul
or
arpl
aas
xchg
dec
xor
sti
rorl
fsubr
push
jne
dec
mov
mov
lea
pop
stos
fcom
neg
les
mov
pop
xchg
mov
jp
mov
adc
add
and
shl
pop
sub
inc
daa
ja
stos
out
rcrb
mov
std
push
in
adc
cmp
xchg
shlb
nop
and
xor
mov
cmp
or
es
lods
mov
out
out
cli
jle
xchg
adc
stos
pop
jbe
mov
push
mov
fisubrs
dec
sub
pop
fbstp
es
add
stos
push
push
mov
cli
jo
cld
int3
call
sbb
test
mov
in
fs
inc
iret
inc
mov
sub
push
popf
stos
push
fnstcw
fisttpl
pop
inc
imul
jae
inc
mov
arpl
add
outsl
fstps
xlat
mov
pop
fucom
cs
pop
mov
mov
out
pop
test
push
cmp
mov
test
xor
xchg
imul
jae
pop
inc
or
shll
cmp
lcallw
repnz
ret
outsb
out
orl
mov
fsubrs
ficoms
fdivrl
loope
xchg
inc
gs
xchg
cmp
push
pop
mov
into
cmp
dec
or
pop
fcomp
sbb
jne
mov
jbe
lds
insb
aas
fstpt
mov
pusha
xchg
fistps
sub
stos
into
cmp
sbb
xchg
movsl
pop
push
mov
clc
rorl
fs
nop
sub
clc
mov
ss
mov
popa
pop
cmp
out
xchg
out
xchg
push
xorl
sub
leave
cmp
adc
out
outsl
cmp
jae
lods
call
add
sbb
mov
scas
enter
mov
push
pop
inc
cmpsl
sbb
bound
inc
adc
add
xor
jb
mov
cmp
dec
pop
leave
shll
popa
sub
and
push
mov
ss
out
sbbl
es
mov
jns
sti
adc
jmp
mov
push
push
std
inc
les
ss
bound
inc
pop
adc
dec
js
xlat
cmp
fdiv
jecxz
mov
jle
add
popa
mov
in
xor
dec
stc
pop
enter
sti
sarl
cmp
push
cs
mov
inc
add
adc
stos
xchg
es
fstpt
stc
mov
sarl
lods
cmpsl
add
neg
shrl
les
sbb
call
add
testl
adc
push
std
lret
push
stos
out
xchg
dec
jmp
cltd
fisubrl
js
jl
jmp
cs
cmp
push
out
shll
add
add
add
adc
push
sub
pop
xchg
cmc
cwtl
dec
repnz
cli
jne
inc
inc
or
idivl
xchg
mov
rcrl
nop
aas
jmp
jbe
outsb
mov
nop
inc
dec
in
dec
loope
or
xchg
mov
jno
sbb
enter
push
push
and
sub
xchg
pop
daa
stc
shll
les
mov
mov
mov
or
pushf
and
loop
pop
xlat
das
sbb
push
lret
lea
in
test
js
test
and
pop
bound
int
lcall
sahf
add
call
sahf
push
stos
aam
test
mov
jg
jle
add
and
sti
mov
mov
cmp
not
adc
test
mov
aaa
or
dec
andb
pop
and
jns
xlat
lods
push
and
cmpl
lret
add
outsb
in
adc
in
xchg
test
in
push
into
xor
push
int3
adc
loopne
insl
aam
pop
loopne
repnz
es
add
pusha
mov
jno
push
movsb
jmp
adc
jnp
cltd
inc
add
flds
fisttpl
adc
lcall
cmp
adc
bound
jo
xchg
jo
rcrl
mov
rcrb
mov
cmp
out
in
xor
test
sub
jno
int3
sbb
sbb
mov
dec
push
and
aam
std
adc
dec
xor
xor
mov
mov
movsl
adc
cmp
jne
movlhps
and
cld
lds
inc
aaa
mov
push
adc
mov
maxps
movsb
jp
mov
push
shlb
and
xchg
ret
je
fstpt
aas
in
mov
call
or
repz
shl
xlat
dec
outsb
mov
xchg
insb
fldcw
pop
scas
fwait
sub
pop
lods
xor
pushf
ss
add
and
push
cmpsl
sub
loopne
fcompl
xchg
pop
pusha
adc
jnp
push
mov
daa
movsb
dec
pusha
lea
add
repz
loope
mov
xchg
pop
dec
mov
jne
xchg
mov
int3
pop
pop
mov
dec
or
out
call
mov
mov
jae
aad
and
dec
cs
sbb
jmp
pop
and
cmp
push
sbb
lret
test
stos
popa
test
jl
in
les
in
inc
mov
orb
jns
cmp
fwait
xor
iret
xchg
addl
push
and
das
test
xchg
cmc
shlb
or
pop
aam
lcall
jnp
out
xor
xor
rolb
roll
add
push
addr16
mov
popa
int3
mov
cmc
dec
sub
sub
icebp
jg
mov
xchg
mov
sbb
aad
dec
into
clc
pop
mov
insb
sub
xchg
jnp
outsl
bound
jl
es
leave
sub
dec
xchg
push
pusha
sbb
push
addr16
inc
lock
adc
mov
fimuls
push
lcall
push
jne
fwait
loopne
jp
int
lret
insl
insl
lea
dec
rcl
fisttpll
jg
mov
add
arpl
cli
xchg
orb
mov
jmp
cwtl
cltd
sbb
into
add
mov
insb
sub
lock
or
sbb
fisttpll
in
rorl
in
lahf
inc
push
inc
xchg
ss
xchg
and
mov
pushf
jmp
xchg
xor
dec
xchg
xor
sub
ljmp
nop
cmp
fistl
or
mov
aaa
pop
mov
insl
das
mov
cmpb
inc
and
inc
inc
leave
xchg
fnstcw
adc
dec
mov
mov
out
test
mov
adc
sbb
lahf
pop
leave
jecxz
add
ss
sbb
jecxz
insb
mov
inc
stos
stos
sub
in
jmp
or
adc
call
xor
dec
lock
scas
cwtl
int
in
jnp
aaa
cmpsb
cmp
cmp
cmp
adc
in
mov
mov
cmp
or
ds
test
shr
mov
mov
stos
test
sbb
out
roll
mov
lods
pushf
xchg
push
lea
xor
jecxz
xchg
flds
fiaddl
jns
data16
mov
aas
add
cwtl
fsubrl
lret
add
clc
cli
aad
mov
addl
xchg
cmc
sti
rep
int3
xchg
into
addr16
inc
fstp
xlat
mov
testl
sub
adc
flds
aad
scas
pop
andb
dec
mov
pop
jb
push
adc
sub
or
add
les
fldl
mov
jne
and
loopne
add
or
aaa
adc
fisubrs
cwtl
ret
inc
mov
into
aad
push
aad
xchg
leave
pop
mov
xor
ret
mov
mov
pop
rclb
cli
jnp
cmp
es
arpl
scas
repnz
popa
push
or
lea
sub
mov
scas
jle
mov
dec
test
pop
adc
dec
jge
fdivrl
lea
roll
stc
xor
mov
adc
jno
sub
adc
pop
jnp
sbb
into
add
xor
or
jecxz
pop
stc
inc
and
addl
mov
cld
lods
xchg
insl
sbbb
pusha
adc
pop
jp
adc
lret
iret
sub
dec
ja
sbb
mov
xor
nop
call
pushf
orl
mov
fisttps
cld
or
xor
adc
lahf
cmpsl
add
push
call
mov
push
jb
mov
mov
pusha
xor
scas
sub
shlb
push
inc
inc
and
jg
or
daa
arpl
lcall
icebp
push
inc
add
sbb
inc
jmp
lods
mov
aaa
mov
mov
dec
mov
std
sbb
movsb
mov
sbb
jmp
jnp
inc
mov
addb
push
aas
ror
dec
popa
mov
into
cmp
and
push
or
scas
inc
xchg
in
cmp
scas
jnp
stos
push
fidivrl
xchg
jo
call
mov
pushf
mov
xor
jle
jg
sub
cmp
int
and
clc
jno
or
sub
das
cli
cmp
or
aam
test
jge
das
in
adc
adc
jno
incl
stos
push
aad
fdivp
lcall
sub
insl
movsl
cmpb
sbb
fdivrl
xchg
add
or
inc
xorl
orl
dec
dec
fisttpl
sbb
add
lods
movb
mov
pop
test
es
scas
xor
xchg
stos
into
cmpsl
pop
and
add
push
imul
pop
stc
or
sub
xchg
push
mov
lods
mulb
sbb
mov
push
adc
ret
xchg
ficoms
popf
or
repz
test
lcall
mov
rorb
lds
mov
ret
xchg
lods
shrl
sbb
pop
addb
mov
sub
and
mov
mov
arpl
fcmovnu
mov
pop
fsubrs
icebp
sbb
rep
mov
jmp
clc
addl
pop
out
gs
aaa
pusha
add
jbe
repz
hlt
pop
fists
loopne
pusha
imul
cmp
sub
ret
jg
jp
aam
jle
es
stos
mov
std
xor
aad
fdivrs
cmpsb
enter
push
loopne
pop
into
fwait
pop
xchg
mov
pop
dec
arpl
jge
inc
push
es
or
or
inc
arpl
out
dec
mov
js
push
stos
loop
xchg
test
xor
sahf
inc
pop
and
inc
sub
cmc
int3
xchg
sub
dec
push
mov
push
dec
test
jnp
std
scas
jle
fildll
mov
jp
mov
popf
fucomip
inc
add
lods
test
subb
call
jmp
popa
outsb
mov
push
mov
insb
jbe
ficomps
adc
cmpsb
push
push
xor
push
sti
fdecstp
ljmp
push
fdivrs
loope
sbb
imul
cmc
or
jnp
cmp
sbb
fsubrl
and
mov
in
outsl
fmul
insl
inc
insl
and
mov
dec
and
outsl
cs
dec
push
lods
or
int3
xchg
das
js
pop
popf
jbe
and
jb
xchg
mov
sub
rolb
cmp
shl
mov
stos
in
xchg
into
mov
push
repz
xor
xchg
scas
xchg
or
sar
lods
and
pop
mov
rol
jo
in
cmp
aas
shll
pop
jp
or
inc
pop
sub
out
call
fstpl
xchg
add
and
pop
push
into
mov
in
out
xor
bound
jns
arpl
outsl
dec
ljmp
mov
pusha
and
xor
mov
aas
imul
push
add
std
inc
inc
xor
dec
or
das
adc
inc
lcall
pop
jmp
and
push
mov
iret
fisttps
and
pop
jb
mov
xchg
sbbb
dec
cld
loopne
add
jl
xor
mov
sub
icebp
in
comiss
fstpt
add
xor
dec
adc
loopne
add
jbe
sub
sub
sub
fcompl
clc
aad
inc
sbb
out
add
aaa
icebp
rcl
add
mov
lds
mov
cmp
fimuls
fwait
imul
xchg
aaa
fsubrs
push
repz
notb
shrl
mov
or
xor
rol
dec
and
xchg
adc
rcrl
jl
bound
pop
or
js
fldl
push
inc
js
cwtl
stos
sbb
mov
and
cmp
mov
and
or
scas
arpl
xchg
movsl
cwtl
cmp
cmp
es
xor
pop
cli
push
pusha
push
aad
aaa
jmp
cmp
mov
hlt
push
insl
shl
fmull
iret
adc
addr16
mov
or
mov
sub
and
jg
push
fcomps
push
and
mov
testl
sub
jg
xlat
push
imul
push
in
pop
inc
mov
mov
bound
mov
push
clc
jbe
fcoml
xor
imul
fildll
jge
mov
inc
sub
mov
and
inc
adc
decb
inc
dec
neg
int
pusha
in
shlb
in
mov
popa
in
lock
jle
mov
icebp
jne
push
cmp
mov
mov
dec
jnp
cltd
mov
das
les
pop
icebp
imul
fstps
loop
inc
jg
or
inc
inc
adc
mov
push
fbstp
lods
inc
cmpl
xor
push
ljmp
xor
adc
movsb
adc
push
mov
js
cs
sub
outsb
cmp
cmpsl
movsl
cmp
lods
fnsave
decb
pop
sti
sahf
shlb
lods
push
sub
adc
add
push
cmp
push
sub
pop
push
mov
add
fnstcw
fisttps
adc
das
lods
pushf
adc
xlat
enter
push
xor
pop
pusha
mov
out
aam
in
popf
inc
xchg
stc
nop
mov
xor
cmp
push
lock
stos
dec
lods
jle
jg
xchg
dec
repnz
push
aaa
mov
pop
xor
mov
xor
and
pop
das
mov
and
sub
xchg
dec
pand
mov
xchg
addr16
mov
rolb
lods
inc
jno
pop
lret
sahf
dec
and
cmpsb
dec
repnz
pushf
fcmovnb
mov
ret
cld
inc
sub
out
mov
shll
in
stc
jo
inc
sbb
cmp
xchg
sub
adc
and
cvttps2pi
mov
movsl
addb
add
sub
mov
xchg
and
xchg
iret
pop
and
jg
sub
sub
insl
jb
mov
test
js
mov
aam
jmp
arpl
jns
adc
imul
xchg
into
sti
pop
pop
lods
icebp
xchg
bound
cmp
fwait
push
out
jle
fiadds
les
mov
jae
stos
es
mov
test
sbb
lret
ficoml
push
aaa
stos
xchg
clc
cld
insb
dec
lret
sti
fs
jbe
into
jo
mov
jp
cmp
sub
jno
iret
dec
dec
mov
pop
and
and
mov
jle
mul
add
xor
sbb
mov
aam
stos
mov
cmpsl
out
adc
mov
pop
and
call
out
push
xlat
and
add
or
pop
hlt
enter
loopne
cmp
mov
xchg
sub
dec
aaa
hlt
add
adc
inc
pop
xchg
pop
bound
loope
or
or
xor
mov
mov
sti
jae
jb
scas
scas
mov
fs
xchg
dec
mov
pop
mov
xlat
cmp
inc
or
add
int3
jb
out
stos
pop
fisubrs
divb
in
iret
fdivrs
xchg
push
mov
scas
and
lods
jecxz
mov
les
stc
mov
dec
cltd
aas
xchg
sbb
inc
out
push
fsubl
rolb
aas
decb
aaa
inc
xchg
xor
mov
mov
inc
pop
inc
jbe
sbb
jmp
sbb
xor
lcall
loopne
mov
icebp
and
sub
stc
dec
cmp
mov
aaa
xor
mov
inc
outsl
rclb
and
fsubs
fdiv
push
mov
movsl
cwtl
jae
adc
cs
shll
loope
jbe
push
dec
stos
dec
stos
test
dec
add
repnz
pop
mov
cmp
inc
loopne
xchg
jo
stc
push
jno
mov
ss
fisubl
nop
sbb
jp
push
js
aam
stos
mov
push
push
lahf
inc
dec
xchg
mov
dec
push
mov
ss
inc
popf
les
cmp
test
jbe
rorb
sbb
or
int
mov
cs
inc
jo
xchg
jo
mov
adcl
lret
inc
fisubrl
icebp
cs
lahf
enter
lds
scas
scas
jg
inc
inc
add
roll
les
outsb
cmp
loop
xor
pop
call
cwtl
loop
push
test
aam
loop
js
inc
movsl
pop
shll
mov
testl
scas
bound
ret
insb
aaa
or
mov
pop
jo
push
jl
pop
mov
movl
mov
sbb
adc
shrb
adc
pop
imul
lret
cmp
push
scas
dec
jnp
cmpsl
pop
pop
loope
dec
scas
addr16
orl
xchg
in
sub
jle
std
dec
and
dec
push
dec
repz
mov
sbb
addr16
lcall
jo
and
or
ljmp
lods
stos
sub
sti
push
out
aad
pusha
je
stos
jge
lods
jg
fwait
rorb
jne
mov
inc
dec
lds
in
add
stos
mov
dec
cs
fisubl
fsubs
imul
push
adc
or
pop
subl
inc
jmp
negb
jecxz
sub
stos
int3
xor
cwtl
jbe
inc
sbb
jae
call
loope
cmpb
adc
fsin
mov
or
dec
mov
add
xchg
push
pop
cli
mov
negl
add
jge
xor
push
cmpsl
mov
pop
pop
out
pop
insl
mov
adc
xchg
push
add
gs
adc
out
mov
jns
aaa
pop
cmc
mov
loop
fxam
faddl
push
xchg
stc
cmp
fwait
inc
cmp
xchg
mov
xor
xchg
jb
mov
adc
cmp
out
jo,pn
adc
inc
bound
gs
in
dec
mov
outsb
mov
sub
jle
and
jge
push
iret
pop
mov
stc
xor
pop
cltd
out
js
pop
push
into
cwtl
jge
xor
mov
add
cmpb
jmp
sbb
xor
sub
int3
adc
xchg
insb
sbb
in
stos
jmp
in
xor
pop
lea
icebp
aad
add
push
fnstcw
cmp
pop
stos
jo
mov
mov
mov
adc
jmp
es
and
ret
popa
jge
adc
inc
push
adc
xchg
jle
sub
xchg
and
dec
iret
stos
sub
icebp
leave
addl
jg
add
stos
clc
mov
and
daa
push
jecxz
and
xor
push
out
aam
add
aad
or
mov
out
jno
inc
cld
pop
sub
adc
subl
and
mov
bound
jns
data16
mov
mov
jbe
pop
lock
pop
lods
xchg
flds
lcall
push
idivl
xchg
dec
repz
test
push
orl
rolb
sbbb
sbb
xchg
jle
in
mov
popa
iret
shlb
cld
push
mov
mov
push
jmp
and
fcomp
in
xor
push
mov
movsl
mov
lret
jecxz
mov
and
cltd
xlat
adc
cmc
push
and
pushf
adc
out
xchg
sbb
pop
adc
cltd
iret
sahf
inc
test
mov
pop
jp
lods
sbb
in
rcl
cs
lods
inc
dec
dec
pop
lahf
pop
dec
pusha
mov
pushf
mov
lret
push
inc
not
and
cmc
pop
jnp
jle
dec
or
popf
cmp
push
push
lcall
fnsave
and
loop
mov
sub
jnp
out
mov
mov
test
jmp
dec
xchg
icebp
lahf
mov
ljmp
jge
cmp
pop
jle
cltd
and
or
sbb
add
in
inc
mov
insl
adc
test
in
pop
cmp
mov
ljmp
cli
les
aad
xchg
adc
dec
sahf
and
imul
test
pushf
mov
adc
cmp
invd
mov
cmp
movsb
inc
stos
jbe
xor
lock
pop
adc
ljmp
mov
and
adcl
mov
mov
mov
dec
pop
pop
lock
fsubp
sbb
sahf
xchg
sub
fs
cwtl
mov
int3
fisttpll
lea
cmp
or
jp
push
insb
inc
icebp
addb
shrb
sub
pop
fwait
jne
rcll
mov
inc
push
xor
lods
stos
mov
jae
fwait
jae
sbb
movsl
xor
push
and
push
shrl
xchg
inc
test
push
fmuls
cmpsl
add
inc
mov
pop
push
daa
inc
inc
aas
mull
cli
lahf
lock
cmc
cmpb
test
push
imul
mov
insl
cmp
leave
inc
push
push
clc
mov
mov
cli
shlb
and
jl
out
lds
inc
test
add
enter
mov
sti
icebp
inc
mov
xchg
sahf
push
pop
and
inc
gs
mov
mov
sub
aaa
xchg
pop
or
and
std
inc
inc
fs
mov
lret
xor
inc
or
jnp
pop
xchg
mov
cmp
mov
rcrl
push
jge
xor
jb
cmp
adc
test
cmpsl
gs
mov
xor
cmpsl
push
adcl
dec
dec
shr
xchg
cmpsl
adc
js
push
xchg
imul
ja
roll
ret
jl
test
xchg
sub
leave
in
pop
mov
pop
ja
inc
xor
out
repz
test
lea
sub
add
les
jg
inc
pop
loop
into
push
mov
loope
add
dec
test
add
add
mov
jno
aas
sbb
dec
bound
push
mov
push
xchg
call
mov
and
xchg
out
mov
sbb
cmpsb
or
xor
pop
mov
and
sub
imul
sbb
in
cs
stos
pusha
xor
and
cmovb
dec
lret
cmpsb
push
test
pop
mov
addr16
andb
daa
inc
sbb
xor
mov
das
cmp
fisttps
xorb
loope
push
push
and
fisubrl
xchg
out
aas
imul
inc
push
dec
jno
enter
rcl
push
mov
stc
lea
pop
lret
cmc
xlat
cld
mov
jmp
jo
sbb
idivl
push
sub
lods
test
pushf
mov
movsb
xor
xlat
mov
in
sbb
mov
push
adc
jmp
pop
popf
lret
mov
mov
fdiv
in
dec
aas
and
lock
mov
and
int3
in
push
aam
mov
movsl
ds
mov
mov
in
repz
cmp
sub
mov
mov
addr16
stc
lods
repnz
lret
idiv
jmp
mov
nop
arpl
imul
hlt
or
pop
orb
sbb
cmc
test
outsb
push
and
aam
ret
pop
mov
inc
adc
iret
sti
sub
in
or
lds
pop
insl
cli
xchg
repnz
sbb
aad
popa
or
inc
cli
imulb
sub
push
test
pop
and
sti
nop
push
js
adc
icebp
jns
cltd
add
ss
and
jae
int
lcall
add
sub
loop
add
movsb
sbb
jne
push
sbb
and
ficomps
inc
out
jmp
add
les
sub
mov
cmp
sarl
test
stos
dec
sbb
inc
imul
push
cmc
sub
lds
sbb
arpl
je
cmp
ret
call
mov
inc
push
sub
pop
fsubl
aas
push
xchg
in
dec
ficoml
pop
add
mov
jmp
adc
test
imul
sub
ret
pop
aaa
mov
fdivrl
pop
pusha
insb
imul
in
data16
daa
jns
aaa
stos
in
out
in
arpl
cld
insb
and
roll
or
mov
sub
cld
mov
mov
rcrb
je
jmp
pop
xlat
mov
inc
imul
inc
loope
jbe
add
aad
shll
mov
jae
aad
movsb
push
xchg
or
lds
cmp
iret
out
mov
inc
sub
jle
adc
scas
sub
in
jmp
xchg
sbb
push
mov
xchg
cmp
fadd
mov
and
ja
stos
mov
lahf
lcall
adc
or
pop
in
push
pop
test
adc
jg
jno
imul
jne
mov
jae
or
dec
mov
jbe
das
test
inc
mov
fcmovb
lods
pop
out
gs
jnp
scas
inc
out
mov
or
cmp
inc
call
int
adc
ja
xor
inc
pop
mov
mov
jge
cmpsb
cmp
aas
sbb
stos
lret
nop
push
push
rorb
fldl
stos
scas
setno
leave
adc
pop
add
and
add
inc
js
and
les
jns
ret
lods
js
sahf
pushf
xchg
sarl
clc
or
push
cmpsl
repz
nop
adc
movsb
jb
push
mov
iret
in
ret
xor
stos
push
test
inc
sub
mov
lods
cmp
cmpsb
lods
mov
jne
mov
mov
mov
bound
repz
jge
ljmp
pusha
and
lods
shlb
or
and
and
int3
outsl
pop
sbb
out
jl
xorb
inc
adc
push
jl
outsb
pop
xor
in
fwait
sbb
add
popa
dec
push
push
inc
std
or
mov
push
in
push
adc
inc
xchg
pop
cltd
cs
sbb
inc
stc
mov
das
popf
leave
cmp
neg
cmp
adc
xchg
jmp
xor
testl
out
jmp
jae
lahf
aas
call
xor
adc
xchg
leave
sbb
fistpll
movsl
sbb
pop
fidivs
shlb
sub
nop
xchg
push
aam
lods
push
add
add
cmp
jae
fsubl
push
aaa
or
jne
hlt
js
adc
xchg
pop
pop
xlat
push
jp
lds
xchg
pop
arpl
add
or
cmc
insl
loope
mov
push
jns
and
xchg
mov
fisttps
jl
mov
push
ja
fadds
pop
pop
dec
sbb
jo
sbb
daa
sbb
fldl
shll
inc
ss
mov
push
mov
mov
popf
lret
cmp
dec
pop
sbb
xor
push
push
cmp
cmp
out
iret
mov
xor
xchg
sub
rorl
cmp
loop
in
or
mov
ss
in
int3
mov
jbe
and
into
roll
push
mov
lcall
pop
dec
dec
lea
pop
in
push
sti
add
das
and
adc
sub
test
mov
fcompl
pop
dec
sbb
negl
dec
fnstsw
jl
aad
sbbl
popf
cmp
fisubs
or
and
dec
and
rorl
ja
int
arpl
jnp
pop
dec
add
cli
adc
adc
sbb
mov
mov
in
cld
cld
adc
inc
stos
dec
sarb
sub
pop
rol
mov
adc
push
stos
addr16
test
jle
sarl
insl
and
call
add
aas
and
xchg
fwait
dec
inc
into
add
xor
mull
scas
mov
xlat
ljmp
or
fwait
popa
shrl
cmpsb
test
cmpsl
mov
dec
add
add
cmpsl
sub
arpl
out
addr16
lret
pop
jo
xchg
lock
ret
stc
in
inc
mov
xlat
aad
lods
jge
mov
popf
push
fcmovb
adc
push
shrb
int
dec
das
outsl
xchg
mov
cli
loop
fdivp
inc
sub
lea
or
xor
sub
push
adc
pop
pop
dec
jno
push
sti
ss
jne
inc
loop
test
jno
fdivrs
cmpsb
push
dec
clc
xor
adc
sbb
add
or
or
imul
inc
mov
xor
in
call
rorb
sbb
push
push
or
push
shrl
inc
sbb
lret
inc
jo
shlb
jle
push
ja
pusha
in
leave
jg
cmp
aam
sub
add
sbb
sbb
sbb
jnp
dec
pop
dec
push
cmp
dec
lock
add
inc
iret
mov
or
ret
mov
jle
push
ljmp
inc
gs
inc
sub
faddp
mov
shrl
ficomps
jle
shlb
adc
rcrb
fnstcw
adc
mov
std
nop
mov
mov
sbb
xor
xor
jecxz
in
push
enter
xlat
dec
shlb
mov
xchg
adc
inc
and
add
mov
jne
fucomi
xchg
mov
inc
sub
mov
ret
rcr
pop
dec
jnp
bound
inc
pop
insl
jno
flds
loop
in
mov
xor
pop
push
and
mov
mov
xor
repz
pop
loopne
mov
in
push
add
ret
mov
pop
movsb
mov
push
push
stos
fistps
cmpsl
pop
add
dec
or
cmp
pop
inc
es
and
inc
or
push
fiaddl
rclb
xchg
jnp
fisubs
lret
jno
jmp
xor
lret
insl
or
shr
scas
jae
mov
inc
into
add
xchg
rcrb
xchg
dec
mov
inc
sub
inc
push
add
iret
add
or
xchg
and
or
inc
mov
or
adcb
jle
cmpsl
jns
imul
loop
daa
js
int
arpl
add
cmp
mov
movsl
enter
jbe
push
not
mov
adc
pop
xor
mov
sahf
jae,pn
imul
outsl
and
into
lock
adc
pop
iret
subl
jl
rclb
fwait
ret
add
lcall
lret
push
pcmpeqd
sub
aad
fsubrp
popf
jecxz
add
incl
xlat
push
sub
fwait
test
cmp
adc
push
fldenv
jle
push
cmp
jg
jmp
add
mov
add
jecxz
jge
inc
inc
out
testb
pop
fmull
push
push
fisttps
xchg
mov
or
not
adc
cmp
xor
mov
jne
xchg
mov
ss
sub
and
push
push
xchg
jae
testl
jecxz
pop
aad
cmpsl
cmp
and
cmp
adc
jge
push
fwait
aaa
fwait
push
xorl
jle
js
idiv
push
in
push
add
add
bound
and
into
mov
int
jns
int
or
lds
dec
hlt
pusha
cmp
jp
repnz
sbb
xchg
adc
xchg
xor
push
mov
pusha
sbb
dec
pop
mov
sahf
jno
popa
xlat
dec
xchg
sub
sbb
push
dec
dec
push
push
push
xor
jbe
cmp
jnp
ror
test
and
adc
add
stos
and
xlat
push
mov
inc
mov
add
pop
mov
sub
insb
inc
incb
sub
dec
cmp
sub
fwait
sbb
pop
and
adc
dec
test
shl
xor
push
icebp
mov
sbb
mov
idiv
xchg
dec
jne
xchg
sub
out
dec
stos
jae
mov
test
rcrl
bound
dec
leave
nop
div
cmp
dec
fwait
pushaw
lods
ficomps
int
push
mov
cmp
add
mov
pop
std
push
sbb
pop
loopne
dec
sahf
xchg
mov
subl
call
aam
loope
int3
xchg
add
push
fldcw
test
add
in
dec
out
test
jne
mov
aam
movsb
add
sub
sbb
adc
dec
push
mov
bound
push
cwtl
pop
push
xlat
fists
shrb
dec
mov
int
pop
icebp
or
jns
sbb
outsb
dec
cmp
push
jae
xchg
insb
movsl
hlt
mov
fmull
and
lret
and
jl
stos
aam
test
cmp
jecxz
dec
andb
in
movsb
inc
iret
sub
movsl
sub
cmpsb
sahf
dec
xchg
cwtl
xchg
addr16
or
adc
cmp
sbb
es
stc
mov
mov
pop
js
fwait
cmp
hlt
adc
stc
fnstenv
imul
aam
or
mov
repz
xchg
ljmp
loope
loope
add
test
adc
mov
mov
jmp
repnz
mov
push
jecxz
scas
enter
mov
data16
dec
outsl
adc
stc
int
xlat
ja
xchg
cmp
cmpsl
push
pop
mov
inc
imul
imul
mov
pop
icebp
ret
in
ja
mov
jns
pop
dec
mov
aaa
adc
call
push
mov
movsb
aaa
inc
test
pop
sbb
mov
ljmp
scas
pop
inc
mov
sbb
or
aas
cli
mov
sub
pusha
insb
or
pop
dec
fidivrs
lea
sarl
out
push
push
ss
leave
rcr
shr
and
dec
jecxz
imul
dec
loopne
adc
adc
or
pop
sbb
aad
push
jno
xchg
dec
sub
out
int3
test
mov
push
jbe
addr16
dec
xchg
pop
jae
ljmp
pop
in
mov
jb
ss
filds
fimull
lods
ljmp
cmpsl
add
nop
scas
loopne
aam
aad
popa
cs
nop
push
aas
negb
or
cmc
test
pop
movsb
movsb
push
sti
cmpsl
mov
lea
shrl
sbb
lods
std
xchg
fiadds
loopne
repz
mov
daa
pop
aam
inc
rcr
andl
add
push
jb
shll
mov
push
sti
int3
icebp
das
jo
add
arpl
sbb
cltd
std
popa
imul
paddw
imul
adc
cmc
jecxz
push
mov
mov
cmpsl
xchg
arpl
push
aas
or
fistl
inc
mov
mov
push
dec
leave
insl
xchg
mov
aam
or
jno
jb
or
lret
dec
ret
lods
adc
sti
adc
sbb
pop
adc
jbe
xor
lods
into
aad
sbb
ljmp
stos
fstpl
je
aad
movsb
imul
rcrb
out
test
jo
in
mov
lcall
mov
add
or
push
das
fs
out
cmp
jb
loope
xor
sbb
xchg
out
push
adc
jl
loop
movsl
cmpsl
pop
push
ja
mov
pushf
cmpb
mov
jns
mov
dec
in
push
lcall
or
insb
pop
xchg
repnz
mov
imul
xor
shl
mov
sbb
sti
popl
hlt
lock
insb
lock
mov
lock
pop
mov
outsl
gs
jg
adc
mov
fdivl
andl
jmp
add
add
dec
mov
hlt
inc
dec
jnp
jae
adc
fbstp
inc
insl
je
dec
jg
hlt
imul
pushf
dec
or
inc
popa
cmpsb
mov
jbe
lods
gs
adc
loope
mov
inc
jo
sub
push
mov
stos
mov
add
nop
push
or
add
nop
lods
ljmp
mov
mov
mov
xor
jecxz
stos
mov
push
addr16
jg
mov
fwait
out
xlat
and
pop
repz
aaa
test
cltd
or
mov
mov
repnz
cmp
pop
jo
insl
jmp
inc
and
in
dec
jo
and
push
sbb
xchg
mov
xor
sbb
inc
xchg
cmc
out
in
sub
cli
xchg
shrb
stos
out
in
outsl
pop
mov
in
test
and
cli
aad
mov
loopne
insl
xchg
leave
add
push
xchg
into
clc
xor
inc
mov
mov
mov
add
or
xor
enter
fwait
shlb
sti
ss
cmp
and
sbb
mov
lcall
mov
fld
je
divl
sbb
movsl
mov
cmc
mov
push
nop
sbb
xor
bnd
mov
les
outsb
lcall
ds
push
repnz
xchg
add
fiadds
xchg
ljmp
sarl
popa
sub
das
dec
loop
or
xor
test
out
jno
out
lods
sarl
imul
inc
hlt
rcll
icebp
js
cmp
mov
inc
dec
sti
ss
mov
lods
out
push
mov
pop
ret
mov
aad
and
stc
rol
lcall
shll
es
bound
push
sub
add
mov
inc
aas
fwait
adc
mov
or
shll
inc
lret
dec
adc
mov
mov
imul
cmpsb
mov
jecxz
popf
nop
insb
lods
test
mov
int
and
fildll
cmp
dec
xor
sub
test
cmp
ret
repnz
push
into
adc
ret
fisubrs
sbb
movsb
fcomi
shlb
data16
mov
push
std
and
lret
jmp
jbe
lods
sbb
pop
sub
nop
inc
jae
xor
xchg
mov
xchg
out
aam
leave
aas
aad
pop
fwait
mov
mov
insl
flds
fnstcw
jbe
cmc
adc
cwtl
pop
jp
fdivrl
jno
cmp
push
push
or
xchg
or
inc
andl
mov
in
test
bound
inc
dec
dec
fisubs
mov
pop
scas
pop
iret
subb
fcomi
or
notl
outsb
loop
cmc
dec
adc
movb
pop
sbb
mov
jecxz
mov
loop
cmpsb
sbb
jbe
lock
lahf
adc
mov
arpl
lret
or
add
test
sbb
cwtl
insb
ss
inc
or
jmp
and
adc
pusha
xlat
movsb
sarb
sub
jbe
cmpsl
cli
jne
lea
cmp
movl
pop
loop
jae
loopne
mov
xchg
icebp
stos
inc
dec
inc
orb
or
test
cwtl
insb
mov
repz
xchg
fildll
lcall
aad
movsl
or
out
shll
das
scas
pushf
pop
pushf
gs
xor
inc
xor
es
mov
xchg
pop
idiv
lahf
scas
lret
push
sbb
gs
fisttpll
dec
sub
pusha
sub
and
popa
xchg
lret
cmp
cmp
int
xchg
cld
insl
lock
xor
aas
push
cmp
jb
icebp
fsubr
clc
in
push
sbb
aam
js
sbb
pop
mov
stos
adc
cmp
inc
pop
scas
dec
imul
inc
movsb
mov
lcall
clc
mov
sub
call
out
testl
mov
iret
and
imul
icebp
cmp
mov
jl
decl
push
sahf
mov
loop
bound
int
test
std
stos
lret
rcrl
push
push
in
mov
fbstp
clc
and
jle
stc
add
push
adc
mov
sub
push
mov
push
jge
adc
fisttps
in
mov
pop
xor
mov
jle
out
idivb
push
aaa
sti
cmp
sbb
stc
jl
add
jmp
xor
push
adc
pop
shll
pop
sub
sbb
enter
adc
cmc
test
imul
inc
or
mov
and
pop
sub
daa
jp
clc
dec
mov
je
inc
mov
jns
test
enter
and
push
inc
ds
and
and
rol
fcmovnbe
dec
xchg
into
mov
sbb
add
ret
dec
clc
push
iret
xor
nop
xor
sarb
cs
fimuls
hlt
divl
vmovaps
cmc
pop
pop
mov
shl
xchg
shlb
jg
xchg
out
pop
push
lahf
xchg
cli
adc
cmp
or
pop
aas
pop
adc
cmpsb
das
insb
test
decb
sbb
mov
dec
mov
popaw
out
lea
out
and
or
cmp
pop
mov
mov
psubsb
std
xchg
xchg
call
ret
fldl
dec
push
adc
jle
adc
out
mov
int
pop
mov
lahf
loopne
inc
sbb
mov
shlb
testl
push
cltd
mov
xor
mov
jb
into
cltd
mov
addr16
bound
jns
xchg
ss
lcall
in
es
add
sub
and
shlb
mov
inc
aad
or
shlb
pop
xchg
mov
mov
test
jle
out
out
push
xchg
fisttps
ljmp
dec
mov
jns
lock
repz
lea
jae
popa
dec
test
nop
pushf
push
lret
insb
outsl
jnp
pop
je
int3
push
aas
mov
enter
fs
or
dec
shll
mov
push
pop
add
dec
popl
jle
cmp
sbb
test
fistl
adc
xchg
into
xor
sbb
scas
out
inc
jmp
sub
jns
jbe
mov
ss
icebp
adc
fidivs
xchg
aad
or
cmpsb
or
es
jge
or
icebp
cmpsl
adc
or
dec
adc
call
ja
sbb
push
js
scas
lahf
and
nop
xor
sub
rclb
mov
xchg
push
jmp
xor
je
xchg
push
loop
jge
nop
nop
es
push
fnstsw
mov
or
sbb
inc
rolb
mov
sbb
inc
dec
cli
and
add
push
push
fcmovb
in
fprem
inc
stc
inc
lcall
ja
mov
mov
sub
cmp
lods
imulb
xlat
jns
adc
mov
inc
jge
pop
dec
add
arpl
fistl
insl
mov
lahf
mov
dec
cmp
push
mov
aam
lret
pop
dec
sbb
xor
or
add
pop
cs
stc
jecxz
xor
mov
sbb
jle
lods
movsl
outsb
popf
dec
and
pop
jno
push
pop
xchg
push
popf
push
mov
lret
mov
je
outsl
cmc
int
cld
je
pop
loope
loope
stos
sti
in
adc
call
sbb
and
mov
fcomi
sti
and
adc
fsubl
sub
dec
popa
jno
add
pop
cwtl
sub
jbe
jb
push
loope
push
arpl
add
outsl
fdivs
jo
or
sub
or
pop
inc
push
rorl
sbb
aaa
shlb
inc
pop
inc
ljmp
or
push
xchg
lods
cld
insl
xorb
jmp
add
pop
mov
movsl
xchg
dec
out
lret
jmp
test
add
dec
fsubrl
sbb
faddl
call
adc
xchg
frstor
cmp
aas
mov
je
mov
inc
and
in
ljmp
cmpsb
push
loopne
in
jp
jne
jo
xchg
inc
sbb
into
cmp
test
and
inc
aam
mov
andl
das
jno
dec
jbe
sub
lds
fdivs
push
add
popa
push
test
or
out
in
xchg
add
sub
fsubs
popf
pusha
mov
aad
sub
or
lret
push
xor
adc
mov
bound
incl
int
sbb
mov
mul
into
lret
pop
fisubrl
mov
mov
stc
shl
mov
sub
cli
stc
jmp
xlat
and
and
into
push
and
js
iret
icebp
test
pop
sbb
jno
push
imul
fprem1
xor
stc
mov
adc
mov
and
insb
adc
mov
jge
call
js
inc
jle
xchg
mov
dec
mov
xchg
pusha
in
inc
pop
repnz
xor
leave
hlt
ret
adcb
lcall
outsb
aaa
mov
xor
popf
daa
bound
mov
push
mov
insb
adc
jne
mov
sbb
insl
aaa
in
push
out
js
xchg
jns
sbb
and
or
push
xor
rcrl
xor
popa
mov
xchg
mov
lock
pop
add
push
mov
inc
popf
mov
sub
inc
sbb
push
push
mov
xchg
insb
shr
daa
or
test
inc
add
bound
out
sbb
flds
mov
les
mov
in
mov
pop
sti
sbb
add
jg
add
jge
in
xchg
hlt
aad
popf
jecxz
loop
movsb
loopne
xlat
cwtl
mov
xor
mov
pop
jge
loop
clc
jo
mov
mov
push
lret
cmp
mov
xchg
jb
add
inc
shl
scas
add
jnp
cmp
enter
imull
movsl
push
out
int
mov
cmp
mov
icebp
mov
adc
rorl
ljmp
aad
sbb
and
cltd
pushf
sahf
sbb
pop
insb
loopne
and
inc
negl
mov
xlat
jg
add
repz
mov
and
or
fnstenv
adc
cs
dec
add
jl
pop
sub
sub
push
clc
xchg
repnz
jmp
jle
xchg
pusha
mov
inc
insb
std
dec
fs
pop
call
ficomps
mov
mov
lret
sub
andl
jae
movsb
fistpl
sub
inc
inc
mov
lret
pop
ficomps
or
xchg
test
jne
decb
or
pop
ds
int3
jl
cmpl
pop
jp
data16
cmp
rolb
shlb
movsl
and
jne
popa
cmp
test
mov
addr16
mov
ds
lret
xchg
sbb
sub
or
push
shrb
dec
nop
xchg
sub
adc
and
xor
aam
ds
xchg
in
cli
leave
lock
bound
sub
ret
pop
xchg
rcr
xchg
outsb
int
out
data16
dec
ja
outsl
lsl
xchg
cmp
mov
or
lods
loopne
mov
jge
stos
pushf
mov
mov
shll
popf
push
mov
iret
movsl
and
sbb
or
xor
pop
mov
cltd
push
test
popa
or
lods
into
inc
pop
adc
rol
cmp
daa
jecxz
in
xor
adc
add
out
jge
xor
sub
mov
pop
rorl
adc
push
xchg
repnz
pop
push
xchg
mov
mov
mov
push
dec
pop
inc
push
cmp
push
inc
test
mov
aad
adc
stc
xchg
and
test
mov
xlat
aad
xchg
push
xchg
test
adc
mov
or
sub
pop
ret
icebp
xorl
mov
lahf
fsubl
mov
lods
aam
iret
int
sahf
lds
lock
adc
popa
fimuls
or
and
movsb
xchg
sbb
addb
jo
push
xchg
add
inc
icebp
shlb
xchg
out
ljmp
dec
shll
stc
cmp
ds
aas
out
mov
fnsave
cmp
adc
xchg
dec
sub
imul
sbb
jp
xchg
shll
fistl
sti
test
and
push
pop
jnp
mov
gs
push
mov
cmp
push
mov
cmc
jp
lret
jge
stos
cmp
or
addl
arpl
add
adc
xchg
jecxz
mov
inc
out
lds
sub
outsl
mov
jge
jge
addr16
lcall
inc
cmp
push
lret
sub
mov
mov
dec
testl
adcb
divb
or
xor
mov
push
jmp
addr16
fs
xor
sarb
jp
sbb
filds
inc
lock
mov
mov
jecxz
xchg
xor
cmpsb
mov
in
test
fistl
mov
cld
xchg
sbb
sarl
aad
jb
arpl
dec
cmp
push
sub
xor
mov
xchg
jb
pop
xor
adc
ret
dec
cmp
adc
fwait
add
js
negb
push
push
lods
or
arpl
rol
mov
int
arpl
cwtl
aaa
enter
sbb
js
jle
mov
movlps
orl
mov
cmp
pop
or
xor
lcall
cs
mov
push
loopne
lea
fidivl
outsb
mov
je
mov
ljmp
mov
inc
nop
dec
aas
cltd
pop
xor
jp
nop
or
mov
cmpl
hlt
xchg
sahf
iret
mov
leave
or
dec
icebp
push
jno
call
lahf
add
jle
cmpb
sbb
xor
jo
pop
pop
xchg
inc
mov
sub
sahf
and
out
push
outsb
adc
cmp
aaa
mov
mov
fldcw
pushf
rorl
fadds
xor
lds
in
mov
mov
sbb
aaa
mov
rcrb
int
loopne
rcrb
mov
sbb
inc
jl
or
sbb
fmuls
sub
sahf
data16
lods
mov
sets
leave
lods
and
lods
sbb
or
shrb
scas
sarl
pop
pop
das
pop
jae
mov
pop
imul
bnd
arpl
addr16
outsl
xchg
inc
adc
or
adc
rcrl
imul
jg
es
dec
sub
scas
jg
sbb
pop
hlt
lods
push
xchg
add
or
dec
adc
xchg
bound
stos
dec
jno
sbb
jecxz
ss
dec
dec
pop
mov
mov
js
loope
out
dec
xor
je
mov
fsubrl
insb
ljmp
ret
es
les
notl
scas
lret
push
dec
mov
outsb
testl
fisubrs
and
inc
jecxz
mov
mov
rclb
or
je
repnz
call
enter
mov
sbb
imul
std
stos
out
dec
lock
fisubrs
fildll
nop
jae
ja
aam
lods
dec
jmp
pop
scas
lret
pop
in
cmpsl
and
nop
jne
ret
sbb
jb
pop
sbb
and
enter
pop
cmpsb
test
adc
and
es
sbb
push
pop
push
ret
pusha
or
jnp
xchg
adc
insl
dec
fsubrs
sbb
or
loop
sbb
inc
sub
mov
cmc
push
scas
jno
test
mov
sbb
xor
pop
fcmovb
sub
mov
mov
addl
adc
jb
cmp
dec
jne
or
cmp
fs
mov
aas
lods
cs
in
push
dec
in
pop
lock
cld
dec
aaa
enter
aad
int
es
in
in
enter
xchg
sub
dec
add
xchg
sub
insl
jp
in
andb
xchg
ret
adc
ljmp
lret
movsb
out
inc
mov
push
adc
mov
add
or
cwtl
inc
push
cmpsb
scas
into
out
pop
xchg
mov
jno
jbe
fmull
lds
loopne
fnstenv
pop
cmp
lret
mov
push
xor
stos
pop
mov
repz
scas
insb
mov
ds
stos
xor
cmp
adc
test
sbb
jo
ljmp
stos
cmp
das
ss
scas
mov
scas
mov
inc
mov
shll
addr16
add
push
pop
clc
in
test
into
enter
push
and
fsubrs
pusha
loopne
cmp
mov
sbb
push
pusha
sbb
mov
mov
pop
test
enter
xchg
pop
cmp
sbb
mov
pop
sarl
jge
xor
loopne
adc
sub
popa
fcomip
inc
test
andl
add
in
lcall
jnp
fisubs
ds
and
add
xchg
in
xchg
xchg
repz
pop
mov
mov
and
mov
mov
call
inc
in
xchg
stos
repz
push
mov
jge
ljmp
xchg
mov
adc
xchg
push
mov
xor
push
push
cwtl
cmp
dec
arpl
shr
sar
mov
pop
and
movsb
clc
mov
push
repnz
xchg
fmul
sbb
aaa
dec
in
leave
sbb
push
mov
push
jnp
fistps
divl
stc
jecxz
pop
mov
out
sub
ljmp
test
xchg
adc
dec
cltd
mov
test
pop
mov
arpl
push
and
cld
dec
jbe
pop
lcall
and
mov
push
mov
jnp
imul
or
push
dec
inc
mov
fisubs
pop
aad
xor
mov
cltd
mov
push
inc
lods
rorl
pop
pushf
sti
jge
fistps
and
push
mov
popa
adc
jl
mov
stos
or
sbb
mov
adc
xor
jno
push
repnz
insb
loop
sbb
xchg
sbb
ljmp
aaa
adc
dec
dec
fcoml
jmp
lret
xlat
pop
push
mov
mov
int
mov
insl
inc
jle
jecxz
daa
cwtl
js
xchg
mov
shl
sahf
hlt
xlat
hlt
lods
push
push
testb
jmp
enter
rorl
mov
das
adc
hlt
fwait
jno
mov
adc
mov
arpl
addr16
adc
fsubrl
push
cli
aad
inc
loope
js
stc
jns
push
rcr
xor
mov
mov
test
aam
or
leave
out
rorb
push
fisubs
push
cmpsb
and
mov
push
push
mov
xor
fs
lret
outsb
sub
inc
insb
fisttpll
lea
xchg
sbb
pop
push
cmc
fidivrs
inc
in
mov
cld
popf
jmp
xchg
mov
fstpl
push
pop
das
mov
mov
fnstcw
adc
in
repnz
lods
call
shll
push
scas
pop
sbb
cmp
cmp
push
pusha
jp
dec
xor
mov
test
mov
add
pop
push
and
in
notl
insl
bound
jnp
aas
xchg
sub
jecxz
mov
rcrb
rclb
test
xor
sub
mov
ljmp
or
pushf
and
mov
mov
xor
insl
in
lods
push
lcall
adc
adc
shlb
outsb
mov
inc
hlt
aad
xchg
jle
sub
std
push
cmp
pusha
sbb
mov
add
mov
leave
aam
or
dec
xor
jge
fists
daa
or
xlat
push
inc
cmp
mov
push
mov
sarl
ret
cltd
dec
xlat
cmp
sbb
lahf
out
rcl
cmp
jne
jo
dec
aam
push
lock
lret
leave
rorl
inc
dec
pop
in
das
pop
call
arpl
mov
mov
jge
pop
add
push
push
lods
xchg
push
ljmp
int3
pop
xor
in
inc
js
lahf
scas
mov
push
mov
mov
les
jg
dec
nop
cmp
xchg
jo
bound
sbb
mov
or
jp
std
pop
or
mov
pusha
push
popa
out
sub
outsl
push
or
js
lret
divb
imul
xchg
pusha
jl
lods
sbb
stos
dec
push
and
int
or
lea
call
fimull
adc
les
roll
jnp
xchg
aaa
loope
hlt
xor
adc
ss
sub
gs
pop
sahf
out
call
cli
clc
loop
mov
mov
in
fwait
add
dec
mov
fistps
gs
jg
pushl
inc
ss
in
js
adc
mov
int3
icebp
sub
je
pop
sbb
imul
add
xorl
jne
rorl
leave
or
mov
fdivl
movsl
movl
xchg
test
xchg
in
repz
xor
mov
jle
fmul
pushl
bound
xor
stc
pop
cmp
pop
in
jno
inc
cmp
aam
ljmp
inc
movsl
scas
push
les
outsl
lock
ror
and
push
stc
sub
fstpt
hlt
adc
pop
mov
and
mov
into
dec
hlt
xor
movsl
scas
mov
adc
lods
ds
lock
loop
in
inc
xchg
cmp
push
dec
push
test
or
ret
push
std
xlat
sbb
fdivs
xchg
aaa
jo
pop
and
shrl
jnp
add
adc
inc
ds
hlt
aad
std
xchg
popa
popa
movsb
fsubl
mov
out
ret
lods
insl
cmpl
repz
fidivrl
cmp
dec
pop
xor
fadds
push
arpl
push
bound
mov
jbe
inc
pusha
jge
outsb
leavew
or
jns
out
xor
cltd
and
faddp
arpl
cli
mov
cs
sbb
aas
push
insb
mov
and
ret
into
or
sbb
adc
aad
inc
xchg
sbb
or
sub
jmp
orb
sbb
push
clc
fsubs
and
out
mov
mov
stos
loope,pt
xor
sbb
test
pushf
inc
cmpsl
addl
in
cli
jecxz
daa
lea
faddl
subb
stos
mov
push
fs
pop
insb
hlt
mov
sub
notb
test
push
loop
mov
das
test
out
sbbl
cmp
mov
cmp
into
les
xadd
outsl
stc
or
mov
sbbl
das
mov
xchg
ds
mov
mov
cmp
mov
inc
or
je
enter
xlat
mov
xor
lods
cmp
mov
dec
cmp
sub
inc
push
out
inc
jns
and
sbb
add
dec
mov
pop
popa
push
sarl
mov
lods
xor
adc
popa
xlat
jo
enter
mov
daa
imul
fdivl
pop
mov
cltd
sub
pop
dec
insl
xor
cmpsb
clc
addl
inc
jl
xchg
sub
shrb
adc
or
mov
sahf
mov
mov
sub
push
ja
adc
fdivrs
xor
aam
nop
pusha
sbb
push
cli
sbb
add
sbb
testb
inc
adc
mov
stos
push
mov
lock
xor
es
jmp
mov
mov
lea
xor
xor
outsl
cmp
dec
jne
sarl
ret
jl
xor
pop
imul
lahf
iret
pop
mov
xchg
or
add
cmpsl
mov
out
mov
xor
in
sub
mov
mov
fiadds
ljmp
in
lods
mov
daa
call
imul
dec
sbb
push
push
push
adc
pop
xchg
or
shlb
jne
xor
jp
sbb
xchg
hlt
imul
int
xchg
lods
ljmp
push
insb
pop
sub
subl
mov
pop
aas
sbb
adc
frstor
aam
jb
addl
mov
pop
xor
jmp
sbb
xor
insl
add
fcmovnu
movl
pop
jae
movsb
jp
or
jne
xchg
push
and
sub
stos
daa
inc
cmp
cmovns
pushl
xor
outsl
xchg
adc
push
jae
clc
xlat
ds
jmp
mov
cmpsl
fs
xchg
cmp
and
xchg
fldenv
push
jle
lods
xchg
lds
movsb
pop
ja
loope
mov
pusha
adc
add
popf
pop
xor
lahf
dec
mov
pop
adc
adc
and
dec
pop
mov
sbb
lcall
mov
push
sbb
push
pop
std
cmp
add
in
push
xor
xchg
and
inc
incl
jecxz
fcompl
sub
and
pop
jge
mov
xor
movups
xchg
insb
and
push
cmp
push
pushf
xchg
push
xor
int3
fxch
rcl
mov
cld
mov
outsl
adc
pusha
push
cld
cmp
lea
jl
daa
loope
cwtl
xchg
loop
jp
and
and
xor
pushf
fidivl
xchg
dec
cwtl
dec
icebp
aaa
push
out
sahf
shl
stos
xchg
bound
aas
test
mov
or
mov
push
push
jmp
mov
xor
push
clc
mov
shlb
and
movd
pop
sti
sub
pop
aaa
int
scas
add
andb
ss
push
cmpsb
pop
loope
mov
inc
cmp
cmp
shll
clc
inc
aam
pop
loop
clc
push
pop
mov
pop
dec
push
push
psrlq
loopne
dec
fbstp
addr16
mov
loop
push
pushf
mov
iret
or
in
cmp
and
or
fcompl
mov
aad
push
dec
inc
in
fisubs
sbb
mov
sti
mov
push
imul
push
xchg
cld
stos
fisubrl
xchg
add
dec
cmc
scas
dec
inc
loopne
and
xor
push
insb
pop
movsb
jg
or
add
mov
or
and
add
pop
ja
adc
xlat
repnz
jb
sarb
fnsave
das
inc
mov
xchg
or
mov
xchg
add
hlt
mov
sub
jl
or
inc
sbb
sbbb
fs
jno
push
test
leave
xchg
cltd
mov
push
icebp
cmp
push
adc
inc
mov
mov
mov
inc
push
pop
ret
pusha
scas
xchg
add
add
sub
lods
lods
push
int
and
pop
sbb
mov
cmp
rcr
in
shr
add
stc
js
push
adc
push
or
push
xor
push
sbb
jae
pop
rolb
push
cmp
jl
gs
cmpsl
loopne
outsb
int3
nop
cli
pop
repz
jo
nop
ss
pop
movsb
ja
mov
push
lcall
loope
xchg
jge
sub
fs
jb
push
mov
or
in
mov
jne
pushf
adc
icebp
jp
jecxz
roll
cld
mov
adc
lods
push
lret
fsts
aaa
leave
dec
int
mov
sbb
addl
sub
test
xchg
insl
push
clc
dec
setle
add
lds
mov
aam
fnsave
sub
cs
shrb
insl
add
call
stos
dec
sbb
mov
imul
xor
inc
jecxz
dec
scas
nop
pop
scas
mov
xlat
add
fwait
nop
stc
mov
mov
or
aaa
ret
push
imul
or
in
inc
mov
mov
out
add
cmp
jnp
fcoml
cmp
push
dec
mov
xchg
xlat
mov
cli
fs
je
lahf
mov
sub
insl
inc
pusha
xchg
dec
cs
mov
inc
or
xchg
mov
cmp
dec
mov
or
daa
movsb
cmpsl
dec
xchg
bound
xchg
out
out
dec
add
andl
dec
lret
pop
rolb
add
and
and
movsl
cs
out
jb
mov
mov
dec
mov
out
push
movsl
and
sub
lods
xchg
or
imul
xchg
repz
jb
lahf
mov
lods
in
mov
repnz
jb,pn
mov
notb
fcomps
fcomip
loope
lcall
pop
incb
call
adc
push
sarb
lret
aam
cmpsb
popa
xchg
testl
fnstenv
jo
sahf
pop
push
adc
out
dec
xchg
sub
sbbl
mov
push
or
pop
dec
mov
pop
das
mov
cmp
jecxz
rclb
in
push
arpl
adc
shll
sub
sti
dec
dec
push
xchg
in
or
cmp
jge
push
or
sarb
and
sbb
push
mov
mov
cmc
push
jbe
mov
or
jne
int
mov
jle
sub
pop
stos
cwtl
je
push
test
mov
xchg
adc
dec
out
sbb
fwait
mov
adc
fcmovb
shl
cli
pop
pop
arpl
push
fmul
sbb
icebp
fsubl
jge
dec
out
sub
sti
xchg
xor
ret
add
icebp
and
lds
mov
vpacksswb
frstor
sarl
enter
mov
dec
les
js
icebp
inc
sub
dec
mov
enter
mov
fstl
pop
cmp
mov
jg
add
lods
das
movsl
xchg
pop
mov
mov
aaa
dec
popa
cmp
into
mov
loope
mov
jmp
push
push
mov
bound
mov
shlb
adc
jg
jmp
mov
mov
pop
subl
bound
jmp
cmp
cld
inc
test
insb
into
movsb
xor
aas
daa
adc
dec
sub
mov
cwtl
xlat
xchg
cmp
fst
mov
xor
mov
rorb
push
inc
pop
push
repnz
frstor
jns
lcall
clc
cmc
add
mov
int3
mov
mov
adc
pop
mov
subl
iret
pop
xchg
mov
xor
push
push
call
mov
jns
rol
xor
out
stos
gs
cmp
or
xor
test
mov
out
xchg
dec
mov
sbb
lea
cmc
std
cld
push
movsb
dec
mov
push
inc
and
mov
xchg
inc
cmpsb
dec
lret
pop
push
ret
sarb
xor
cs
jb
lock
lds
aas
mov
mov
loop
or
sub
mov
fsubr
iret
aam
fcomps
cli
or
ja
test
cmc
push
pop
adc
jb
mov
bound
test
fcompl
mov
fistps
cmc
subb
or
dec
daa
add
mov
push
adc
sbb
jecxz
jg
sub
scas
and
ds
adc
mov
cmp
sbb
lahf
push
cmc
xlat
fisttpll
xchg
sbb
or
or
cmp
test
pushf
xor
push
arpl
pop
hlt
repnz
mov
inc
sub
shlb
cmp
out
and
jecxz
js
fstps
dec
cmp
fwait
scas
in
push
shlb
inc
push
in
mov
push
inc
je
mov
fcompl
in
notl
sub
add
sbb
cmpsl
out
mov
stos
jle
sub
xchg
mov
sbb
add
mov
jno
sti
push
lahf
ss
fwait
jnp
addl
sbb
sbb
push
rclb
sub
fwait
inc
push
or
lret
aas
or
cmp
jl
popf
shrl
cmp
ret
cmp
lods
shlb
popl
test
xchg
jno
jl
in
mov
add
dec
cmc
adc
dec
cmp
or
push
aas
push
ljmp
fimuls
dec
popf
popa
ja
out
cli
add
push
out
jb
sbb
push
pop
cmp
lcall
test
andl
inc
or
gs
test
pop
test
pop
sub
jbe
add
addr16
aad
jno
enter
sub
lcall
and
mov
andl
mov
xor
mov
pop
add
jge
loop
sbb
lret
pop
jns
movl
les
movsl
cmc
mov
cmp
jo
int3
jne
cmpb
mov
push
xchg
and
push
mov
jle
push
lock
mov
es
jae
jae
xor
mov
mov
ljmp
inc
sub
xor
mov
call
sub
jg
pop
sbb
and
cwtl
lahf
das
test
inc
arpl
xorb
enter
jecxz
jmp
dec
push
adc
pop
cwtl
sub
push
jmp
lods
cs
sub
and
add
arpl
cwtl
xchg
and
cwtl
push
jge
xchg
inc
je
add
call
jl
and
mov
jg
pop
dec
sbb
xlat
dec
mov
xchg
cmp
inc
ret
nop
loope
mov
mov
cmpsb
or
mov
xor
mov
pushl
mov
lds
std
and
stos
jo
mov
pop
add
xor
or
call
push
ljmp
leave
imul
clc
xor
mov
cmpsl
movsb
icebp
aam
sti
cmp
mov
jnp
inc
imul
push
call
cmpsl
xchg
pop
or
cltd
ucomiss
or
ljmp
cmp
data16
aaa
bound
jo
cmp
in
pop
cmp
push
out
and
fwait
mov
std
fstl
out
aam
orb
sub
fldenv
push
push
out
std
inc
nop
push
adc
cmpl
add
fcomps
jnp
pop
cmpsl
mov
je
jecxz
xlat
je
mov
mov
pop
mov
sub
xchg
lods
faddl
sti
fists
hlt
pushl
xchg
push
gs
push
lods
addr16
mov
mov
sbb
pop
das
mov
push
stos
lock
ret
xor
not
aaa
push
dec
jne
aaa
sahf
xchg
call
xor
test
add
divb
gs
add
into
dec
push
repnz
incl
cli
stos
jns
data16
fsts
inc
dec
push
das
cmc
lds
mov
pop
frstpm(287
rcrl
jne
in
nop
jns
in
xchg
inc
and
jnp
leave
or
ds
add
adc
cld
and
fwait
dec
cmp
out
fstpl
mulb
sarl
out
test
shrl
mov
cmp
mov
in
dec
sub
andl
icebp
cmp
sbb
mov
cwtl
and
in
jne
subl
ja
addb
insb
and
jo
sub
pushw
jg
imul
add
inc
xchg
xchg
xor
or
pop
push
cmpsb
js
jmp
fwait
pop
outsb
mov
cmpsb
pop
push
mov
lcall
mov
in
leave
push
test
pop
dec
push
sti
pop
mov
imul
mov
test
pop
push
sahf
inc
jl
sahf
jno
mov
adc
add
stos
pop
int3
notl
test
mov
out
jl
je
pop
aaa
mov
jno
push
aaa
inc
nop
andb
lds
fcmovu
dec
push
movsl
out
mov
rorb
jl
mov
mov
and
xchg
stos
int3
mov
jge
ret
cwtl
push
jns
cmp
aaa
fstps
les
pop
or
sbb
sahf
pop
jle
sub
jne
sub
lahf
jns
push
add
xchg
sub
test
aaa
inc
in
popa
pop
mov
inc
or
cmp
dec
dec
mov
inc
cmc
mov
mov
dec
in
sub
lret
add
mov
hlt
enter
std
mov
cltd
jge
xor
ret
xlat
out
or
gs
aad
testl
jp
or
add
mov
fld1
cmpsb
es
sub
adcl
in
adc
push
rclb
outsb
sub
lret
test
mov
xor
movsb
mov
inc
mov
in
in
fwait
xchg
and
or
push
cmp
dec
je
and
pop
ficomps
xchg
jo
jnp
pop
lret
adc
cli
cld
mov
lock
lret
add
outsb
imul
pushf
mov
mov
add
xchg
shr
cmp
sbb
pop
subb
testl
jle
inc
bnd
imul
repnz
ja
or
inc
in
in
xchg
ret
call
xchg
mov
pop
cmc
push
lds
bound
lret
test
dec
cltd
loopne
mov
out
in
jp
pusha
ret
jns
cmp
imul
shrl
jbe
push
and
xor
inc
cmp
dec
repnz
mov
enter
lcall
mov
loope
mov
and
fstps
fistps
popl
mov
adc
pushf
push
mov
push
fldt
in
xor
ja
xchg
mov
adc
adc
and
int3
jne
jbe
test
test
bound
jmp
push
ret
mulb
pusha
insb
xchg
lahf
mov
and
xorl
lods
mov
stos
mov
jmp
lods
push
cmp
loop
cmpsl
es
or
push
lock
test
in
or
cmpsl
dec
jle
cwtl
or
lds
jb
push
and
sub
cwtl
fsub
bound
cmp
cmpb
lods
lahf
sub
leave
dec
jmp
sbb
sarb
pop
sub
mov
inc
add
aam
cmpl
pop
inc
mov
outsl
adc
bound
sub
aad
repnz
mov
jmp
jmp
loopne
adc
js
lret
inc
lds
dec
shlb
sbbb
idivb
out
sbb
enter
mov
test
mov
call
add
and
push
fsubrs
mov
push
iret
imul
cwtl
sbb
lahf
outsl
in
and
repz
mov
aaa
xchg
jns
pop
dec
rclb
cmp
std
in
pop
jnp
nop
pusha
popf
pushl
pop
negl
and
loope
bound
pushf
mov
cmp
xchg
clc
mov
leave
decb
xchg
push
jg
es
lret
sub
loopne
sti
aaa
mov
sbb
mov
sahf
std
fisttpll
ffreep
pop
shll
mov
incl
rclb
in
jecxz
das
lret
inc
mov
loope
sub
les
in
push
aaa
mov
jge
adc
xor
cmp
mov
ds
fcomip
push
cmpsl
leave
jecxz
loop
sub
mov
mov
or
jb
push
iret
xchg
lret
add
lret
pop
inc
sub
das
mov
and
mov
add
aas
cmp
dec
sbb
xor
in
int
adc
out
cld
lcall
pop
mov
scas
mov
stc
icebp
mov
sbbl
sbb
xchg
ret
add
mov
inc
clc
loope
or
ret
cmp
cmp
xchg
popl
incb
sub
inc
test
data16
enter
scas
or
pop
lods
pop
inc
call
stos
push
sti
loopne
int
cmpsb
pop
or
sbb
andb
and
repz
push
or
mov
and
mov
cltd
mov
ret
mov
dec
stc
adc
mov
cmp
daa
fldt
pop
inc
mov
adc
shll
cld
divb
sbb
lea
pop
ljmp
mov
mov
or
jns
test
icebp
ret
cs
mov
imul
mov
or
daa
or
imull
sbb
xor
ficomps
std
mov
and
dec
xchg
mov
iret
push
aas
call
jp
aas
daa
mov
enter
add
sub
dec
fcomps
cmp
dec
jle
ret
loop
xchg
push
or
repz
ds
sbb
cs
vunpcklps
icebp
xchg
dec
mov
lods
in
aaa
push
out
lds
mov
jp
out
cs
enter
addr16
push
cmp
sub
add
iret
mov
pop
sub
jo
xlat
pop
daa
loopne
stc
sbb
movsb
es
lock
push
adc
out
mov
aas
push
fiadds
lret
notb
lahf
rcl
repnz
ja
popf
cmp
aaa
repz
mov
ss
subl
cli
xchg
movsb
dec
addr16
dec
enter
subl
es
movsl
fnsave
push
fsubrs
lds
mov
pop
sbb
adc
call
mov
repnz
scas
shrb
nop
push
stos
fidivs
push
les
loop
mov
mov
roll
mov
hlt
ds
sti
lahf
cmc
add
jg
xchg
in
jecxz
test
pushf
push
sub
cmp
sbb
test
gs
pop
sar
shr
dec
add
lea
lea
mov
jmp
cmp
cli
cwtl
jge
pop
pusha
add
jnp
outsb
mov
enter
cli
push
mov
loopne
les
aaa
es
add
mov
lret
lahf
jno
sub
cwtl
mov
pop
mov
cwtl
test
test
sbbb
mov
das
insb
int3
in
aaa
adc
lret
inc
cmp
lods
cli
cmc
lahf
pop
test
sahf
cs
cltd
add
jmp
in
scas
test
adc
pusha
lea
xor
mov
push
jle
bound
mov
sub
cmp
add
sti
and
repnz
cmc
lods
mov
mov
dec
jne
fstpl
cmp
dec
iret
je
sbb
mov
cmpb
popa
cmpsl
jl
ljmp
testl
xor
push
pop
in
push
push
loopne
pop
pushf
popf
loope
push
cmp
and
mov
dec
or
pusha
add
movsb
jecxz
addb
into
mov
push
jnp
pop
mov
je
lea
add
sub
jge
pushf
xor
mov
jae
xchg
mov
xchg
push
jne
sbb
movsb
cld
loopne
aad
jg
notl
fsub
jae
cs
pop
clc
test
aad
or
dec
mov
sbb
sbb
jle
out
jno
jbe
aad
mov
into
dec
dec
addr16
mov
mov
sub
mov
adc
out
mov
std
shrb
xchg
adc
xor
jecxz
adc
cmp
mov
clc
js
lea
movsl
shlb
or
aas
mov
test
movsb
testb
rcl
or
mov
scas
adc
loop
mov
xor
sar
pop
inc
pop
xor
cmp
jns
and
je
jnp
repnz
inc
jnp
and
inc
les
pop
add
push
in
push
lret
inc
aad
or
push
ja
fistpl
jle
and
mov
aam
jecxz
popf
into
pop
jp
cmp
out
cli
push
cld
jb
lcall
push
stos
sti
mov
push
jle
lods
dec
loopne
aaa
out
in
add
movsl
notl
cltd
rcl
fdivs
mov
sar
aaa
cli
fnsave
inc
lock
mov
lcall
mov
fildll
imul
nop
cmp
out
push
mov
jno
xchg
mov
push
cmp
add
xlat
xor
popa
aaa
rcl
adc
cld
cmpsl
xlat
sbb
inc
test
mov
dec
mov
sbb
mov
adc
icebp
pushf
cmp
mov
or
dec
test
test
adc
lock
fistl
repz
enter
jp
add
pushw
insb
sbb
jb
lea
data16
scas
dec
dec
mov
loope
test
out
imul
sarl
push
aam
push
je
add
icebp
lods
test
ss
scas
sub
cwtl
stos
xlat
arpl
lret
sarb
shll
add
mov
dec
rcll
dec
sub
stc
sub
lock
xchg
nop
fwait
shr
push
das
nop
push
inc
lods
cmp
les
push
jne
pop
xchg
sbb
dec
gs
das
cmp
jg
pushf
mov
push
aad
sar
push
xchg
xchg
dec
mov
loope
or
xchg
pop
ja
scas
jle
add
lods
lods
sarl
inc
xor
jb
negb
insb
push
dec
inc
push
das
jno
add
pop
dec
jmp
push
sti
ror
inc
or
leave
mov
sbb
sbb
mov
or
jmp
xorb
jge
add
stos
jno
insb
bound
nop
fistpl
fisubl
sbb
lock
cmpsb
cmp
fcomps
into
cs
push
aad
and
xor
xor
jae
ss
push
inc
cmp
mov
pop
orl
mov
ror
pop
pop
lock
mov
scas
stos
in
add
jp
cmp
dec
mov
jno
xchg
js
jge
pop
push
imul
push
pushf
std
mov
lahf
push
xor
int
adc
lods
push
pushf
pushf
pop
sbb
push
mov
mov
push
stc
fsubp
imul
and
inc
test
dec
std
sarl
and
and
jg
pop
js
in
aad
adc
repnz
jae
out
jmp
fmulp
mov
stos
xchg
mov
ss
ud0
fs
ret
xchg
add
in
pop
fwait
jmp
push
mov
std
pop
lds
cwtl
sbb
sbb
mov
ret
repnz
fwait
push
xchg
icebp
xchg
rcrb
sbb
xchg
arpl
inc
or
rclb
clc
subl
xchg
outsl
add
ja
push
push
loope
inc
jo
jle
cld
mov
je
jmp
js
adc
mov
scas
es
or
test
mov
mov
aam
adc
addl
pop
ljmpw
aam
pushf
mul
mov
pushf
roll
jno
insl
adc
bound
pop
dec
dec
es
push
push
xor
out
jbe
notb
ret
pop
pop
pop
stos
cmp
lahf
xor
xchg
in
xchg
cmpsl
mov
icebp
mov
dec
push
cld
mov
loope
jle
test
adc
push
and
ret
cmp
push
push
sbb
pop
pop
mov
int
jl
leave
fcmovb
lock
xor
mov
push
xor
adc
adc
inc
inc
mov
shll
push
mov
adc
pop
pushf
or
addl
movsb
push
popa
inc
enter
or
iret
lcall
sbb
lret
jnp
push
sbb
jmp
jle
or
cmp
and
lock
mov
shl
push
fidivs
imul
outsl
mov
imul
divl
test
fldt
mov
dec
in
nop
and
inc
sbbb
es
jp
loope
movsb
pop
insl
cwtl
inc
cltd
and
not
scas
sbbl
filds
pusha
enter
pop
xchg
jg
push
xchg
rorl
mov
sbb
xor
jl
xor
jle
cli
shlb
je
or
add
inc
daa
fdivrl
rclb
addb
mov
mov
das
mov
sub
ljmp
inc
mov
adc
adc
add
loopne
push
ds
dec
mov
mov
xor
in
jg
dec
and
outsl
arpl
mov
add
mov
mov
mov
push
adc
ja
adc
bound
xchg
pop
repnz
call
sub
int
das
dec
sbb
mov
push
rcrl
filds
pop
pop
fdivl
add
push
cli
sub
rcrl
jecxz
fiaddl
aam
xchg
ret
inc
jmp
sbb
mov
jmp
je
or
mov
xchg
add
xchg
in
and
mov
cmp
shrb
jnp
add
dec
pop
adc
and
mov
jecxz
jo
std
pop
fbstp
mul
cltd
mov
ja
lahf
in
mov
rorb
inc
sbb
insl
push
inc
nop
pop
cwtl
xlat
sub
push
push
mov
inc
js
jbe
mov
sarb
mov
push
cmc
fadds
and
mov
dec
inc
mov
fldl
push
xchg
fcmovbe
add
adc
stos
xor
add
cli
in
dec
fmull
clc
sub
cmp
mov
popa
lcall
mov
cli
sti
imul
adc
mov
pop
pop
not
inc
mov
lods
and
lahf
or
dec
sbb
arpl
add
das
and
lock
and
lret
xchg
inc
aam
ficompl
cmp
sub
shl
cmpsl
mov
jg
xor
mov
and
jg
ljmp
pop
jmp
test
push
inc
inc
imul
lods
cmp
jle
push
lret
mov
pop
cmp
push
leave
adc
stos
int3
dec
mov
add
sub
orl
in
jge
sub
and
js
dec
insl
and
lcall
push
cmpl
or
sbb
xchg
push
je
inc
inc
inc
nop
sub
in
mov
ljmp
aaa
addr16
cmc
xchg
aad
ret
lret
rorb
in
xchg
lret
je
jno
arpl
push
jno
adc
notb
ror
stos
out
lea
ja
jnp
es
sbb
xor
imul
xor
xchg
mov
shlb
inc
dec
in
dec
mov
cmp
ffree
cmp
mov
push
inc
insb
and
dec
imul
js
sbb
andl
or
dec
jge
push
sub
mov
ret
aaa
mov
push
xchg
inc
frstor
mov
add
jnp
mov
clc
pop
sbb
mov
jbe
test
out
mov
xchg
or
jmp
dec
adcb
inc
daa
insl
sbb
xchg
fsubs
test
cltd
ret
push
lea
cmp
push
cmp
sub
imul
dec
ss
mov
pop
jno
pushf
call
lock
fmuls
imul
jns
repz
xchg
paddsw
mov
fsubrs
shlb
pusha
mov
jp
icebp
add
or
and
xchg
inc
das
xchg
dec
enter
cmp
mov
or
popa
loop
outsl
inc
sub
ror
imul
mov
in
insl
add
push
adcl
jg
fldl
mulb
xlat
mov
push
mov
push
stc
outsl
add
aam
int
xchg
daa
addr16
movsb
ret
nop
and
mov
pop
inc
loop
inc
mov
and
sub
jnp
subb
cld
pop
fnstsw
push
push
mov
cli
sub
sub
fbstp
push
repnz
adc
cmp
outsl
xchg
std
xacquire
xor
notl
int3
adc
mov
into
and
sub
lock
mov
lods
jle
cmp
xchg
mov
lock
js
lret
inc
and
and
push
sbb
das
xor
stos
jno
icebp
mov
pop
jno
pop
imul
or
inc
repnz
cs
adc
sahf
mov
rol
fisubrl
rorb
mov
mov
sbb
adc
mov
push
mov
sbb
testb
dec
pop
sbb
push
cli
notb
insl
lahf
xor
iret
and
ss
cmp
pop
push
inc
popa
and
xchg
mov
add
mov
fs
cmp
xor
mov
popf
push
add
lea
gs
enter
dec
mov
jne
pop
in
shll
pop
and
push
lret
mov
add
sbb
xor
dec
movsl
mov
mov
in
push
inc
and
test
je
outsb
lock
ljmp
daa
cmc
pop
mov
in
loop
pop
scas
imul
xor
loop
pop
test
mov
je
sbb
adc
xor
sbb
scas
mov
pop
jnp
fcmovbe
test
adc
dec
adc
xor
xlat
mov
scas
rcll
stos
lock
into
inc
cld
addr16
mov
mov
or
xor
popa
mov
inc
hlt
push
int3
sub
push
push
dec
jg
adc
pop
in
popa
aas
lcall
iret
ret
mov
inc
ret
test
popa
das
add
mov
sbb
mov
mov
ljmp
loop
mov
das
dec
cmpb
mov
pop
sbb
mov
push
fimull
mov
lret
xchg
data16
insl
stos
subb
pop
push
dec
mov
data16
mov
subw
add
stos
rcrl
ret
loop
bound
test
inc
jno
adc
outsl
or
shlb
cwtl
decl
mov
cltd
jae
or
lea
cld
sub
lods
sbb
add
push
jg
mov
push
cmp
mov
daa
mov
loope
push
mull
ja
mov
addps
imul
sarl
inc
je
xor
xlat
sbb
and
sub
adc
hlt
lahf
adc
icebp
fadds
inc
popa
lahf
les
inc
fstl
sub
add
out
jb
aaa
mov
imul
cmpxchg
inc
out
jnp
mov
in
pop
arpl
and
insb
scas
in
xlat
dec
sbb
pusha
je
dec
inc
cmp
xchg
mov
or
inc
add
and
jge
push
stos
xchg
popl
stos
roll
ds
insb
dec
xchg
or
fyl2xp1
mov
adc
push
push
shrb
and
push
jp
mov
xchg
add
fsubs
sahf
or
sbb
out
lods
mov
cmpb
pop
cmpsl
int
push
les
xchg
xchg
jmp
in
int3
and
push
shrl
add
xor
adc
mov
cmpsl
fidivrl
inc
xor
stos
xor
inc
and
clc
push
xor
jae
push
xor
aam
mov
jb
adc
cmp
popa
mov
sub
sub
mov
fs
loop
mov
sbb
sbb
jp
xchg
cs
je
xlat
out
sbb
scas
sbb
imul
mov
push
cmp
mov
mov
pop
push
xlat
xor
fists
push
cmp
cli
scas
insl
pop
call
xor
movsl
pop
push
add
push
and
pop
dec
divb
sbb
and
pop
std
pop
adc
pop
mov
xchg
out
sbb
xlat
scas
movsl
shl
aad
movsl
push
cwtl
bts
xchg
fwait
cmpsl
mov
sti
pop
lret
std
divps
clc
dec
out
add
xor
in
fcompl
gs
int3
scas
cmp
out
dec
cmpsl
inc
dec
push
outsb
mov
jne
adcl
add
movsb
push
sti
sarl
shll
pop
movsl
cs
fs
inc
jne
mov
arpl
call
iret
sahf
nop
or
dec
mov
jp
sub
lods
inc
out
dec
add
sbb
int
add
in
push
mov
aam
in
jno
cs
mov
pushf
lret
aas
icebp
add
sti
dec
add
int3
jbe
hlt
subl
sub
pushl
nop
jno
mov
pop
add
jle
test
cld
pop
sub
repnz
push
inc
inc
push
adc
mov
xor
lret
movsl
ret
pop
out
int3
dec
cmp
lods
sub
mov
push
or
shlb
mov
js
jns
pop
jp
hlt
jbe
repz
push
sub
clc
sub
idivb
icebp
adc
cld
imul
fadds
cmp
xor
ljmp
fisttpl
in
icebp
cld
and
mov
add
pop
inc
jno
lahf
js
in
mov
outsl
xchg
cmp
hlt
ficompl
rorb
cmp
mov
ljmp
cmp
jae
mov
fs
cs
inc
nop
mov
adc
mov
pop
push
mov
movsb
cmp
mov
fwait
pop
xchg
cmp
test
jge
pop
or
push
jp
je
popf
pop
lret
ss
int
nop
pop
cmp
lret
test
jnp
push
std
mov
scas
xchg
sbb
xchg
xlat
add
cs
push
sbb
sbb
dec
add
lret
push
imul
incl
les
sub
fwait
test
fildl
dec
ds
dec
test
sbb
lea
jmp
lods
jecxz
push
mov
daa
lock
leave
xchg
movlps
lea
mov
test
in
and
in
insl
sbb
sahf
pop
add
push
je
mov
xchg
leave
imul
popa
pop
adc
movsl
pop
and
aas
jg
pop
adc
jb
gs
inc
push
sbb
mov
xlat
push
cmp
std
xlat
xchg
adc
sbb
pop
xchg
push
lock
sbb
cli
cmpsl
cmp
stos
hlt
cmpsb
call
rcrl
mov
test
into
jecxz
popf
sbb
push
sub
lahf
aam
aas
fs
cmp
add
nop
aam
xchg
inc
add
js
sub
xchg
cld
inc
inc
data16
xor
push
mov
dec
mov
adc
sbbl
fisubl
push
adc
addr16
out
adc
sub
loop
lret
jne
or
sub
sbb
add
push
sarl
aam
rclb
pop
xchg
pop
mov
daa
push
jg
add
adc
lahf
bnd
pop
ja
into
scas
cmp
lahf
mov
mov
lahf
js
push
fnsetpm(287
mov
mov
gs
je
js
outsl
gs
xchg
jle
les
and
sbb
shll
dec
imul
sbb
shll
push
pop
cmp
jecxz
sbb
push
sbb
mov
sub
mov
jle
icebp
adc
xchg
mov
das
xchg
jo
jg
lock
adc
pushf
add
and
or
sbb
jne
jnp
inc
jge
push
and
jno
fidivrl
cmpsl
rorb
popf
js
sahf
sbb
pop
stc
stc
sub
daa
xchg
pusha
pop
cltd
std
adc
add
jbe
xchg
and
sbb
lcall
mov
dec
adc
dec
loope
pop
out
mov
inc
test
aam
inc
popa
dec
mov
std
cmp
das
add
pop
nop
int3
adc
cmp
xor
add
scas
aaa
loopne
out
lock
pop
loope
test
inc
out
shrl
xchg
adcb
or
and
push
bound
sti
js
push
adc
or
fistps
sti
shrb
cld
lods
sbb
sbb
cmp
cmp
add
mov
icebp
test
repz
mov
icebp
jmp
jae
lds
mov
jns
pop
xchg
push
divl
addl
add
sub
mov
test
movsl
xchg
add
push
fdivrs
jnp
xor
jnp
inc
outsl
add
mov
scas
adc
xchg
mov
push
sub
xor
icebp
jo
ret
or
cltd
fs
xor
cs
cli
out
lahf
dec
test
cwtl
js
inc
add
test
sbb
mov
stos
fcoms
imul
daa
insb
jb
inc
mov
sbb
mov
test
fsqrt
mov
mov
push
inc
cli
daa
jge
mov
mov
lea
pusha
cwtl
adc
cmp
sbb
pop
aam
lahf
sbb
pop
or
push
shll
stos
aam
lcall
inc
loop
mov
add
mov
push
dec
ss
loopne
adc
pop
add
adc
jne
sub
shl
aaa
imul
lea
and
push
sbb
daa
xchg
int3
push
lds
inc
jnp
mov
inc
pop
test
scas
aad
lds
ret
and
clc
pop
xchg
push
xor
repz
or
stos
loopne
fldenv
in
test
nop
ss
out
push
jge
xor
sti
mov
push
adc
sbb
sbb
outsl
pop
mov
ja
push
xor
sbb
xor
mov
push
mov
mov
addr16
adc
ss
fisubs
mov
xchg
int
push
icebp
xor
cmp
mov
xor
lret
stos
push
dec
or
fwait
sbb
pop
addr16
and
sub
lds
sbb
dec
repz
ret
lock
vmovhps
stc
lods
sub
fcmovu
inc
sbb
push
int
add
and
iret
sarb
pop
pop
data16
addb
mov
ficompl
sarb
cmp
andl
sbb
mov
xchg
mov
shlb
cmpsb
or
jg
rorb
in
adc
popa
stc
cs
dec
push
aaa
loop
xor
int3
ja
imul
jle
sbbb
cmp
add
jae
mov
outsl
mov
pushf
jp
insl
xchg
out
sahf
dec
sahf
cmp
movsl
pop
shl
push
gs
mov
dec
push
sahf
insb
popf
push
adc
lea
scas
jge
or
push
jecxz
shrb
pop
and
movsl
mov
xchg
dec
in
outsl
in
scas
test
xor
xchg
xor
cltd
out
fcomp
dec
xor
dec
pop
and
push
pop
cld
sub
cmp
adc
iret
stos
stc
int3
addl
mov
mov
insl
aam
push
sbb
inc
mov
ja
out
and
pop
add
and
dec
int3
pop
push
into
xchg
iret
cmp
aad
icebp
jo
fdivrs
popa
movsl
cmp
cmc
pop
ret
push
push
aad
add
lds
pop
filds
mov
movsb
clc
mov
jbe
in
js
xlat
int
sub
rolb
imul
lcall
sub
xchg
and
jo
adc
notl
sub
lahf
push
sbb
gs
mov
jge
push
shlb
lret
dec
jge
mov
or
jge
and
test
cld
add
jb
mov
cmp
arpl
fists
add
sbb
jmp
push
cmp
imul
mov
fwait
lea
sub
es
and
xchg
test
fsubs
lret
outsl
jno
arpl
adc
fs
sub
popa
xchg
fcompl
push
and
repnz
push
insb
xchg
adc
mov
ret
or
inc
subl
xor
lret
popa
adc
jae
sbb
sbb
je
outsl
orb
subb
divl
ja
sub
sub
pop
lret
rcll
hlt
stos
fdivrs
popa
cmp
add
sub
fiaddl
xchg
pop
idivb
mov
ret
cmp
outsl
popa
jmp
mov
push
in
movsl
cwtl
outsb
orl
lret
mull
sbb
mov
mov
pop
mov
dec
dec
fistps
pop
adc
daa
stc
addb
lret
or
cld
add
push
enter
sub
jle
call
pop
pop
push
test
mov
pop
push
sbb
inc
jbe
cmp
movsl
cmp
cmpsb
xlat
jo
add
aam
pop
push
dec
dec
sub
cli
jg
xchg
mov
iret
xchg
lods
jge
enter
xchg
mov
jmp
daa
data16
sub
fsubr
sub
loop
call
push
pop
cli
int
mov
add
popa
mov
mov
mov
xor
mov
js
xchg
scas
mov
or
sti
dec
push
fdivs
fimuls
jno
pop
mov
mov
addr16
pop
pop
int3
sub
mov
nop
outsb
xchg
sub
pop
insb
and
fdivp
sbb
shlb
dec
loope
dec
inc
movsl
jle
filds
push
stos
gs
sub
insl
bnd
pop
data16
lods
adc
mov
jae
pop
cmpsl
bound
push
cmp
rolb
jbe
dec
sahf
mov
inc
xchg
and
arpl
xchg
fld
or
fbld
and
push
je
mov
loop
ret
dec
daa
sbb
out
and
and
mull
mov
mov
clc
imul
adc
mov
addb
mov
jmp
scas
test
testb
mov
orl
xchg
pop
cltd
js
ror
inc
mov
arpl
jl
or
out
std
pushf
fwait
ja
push
gs
std
mov
push
pop
gs
imul
and
adc
es
or
mov
lods
fnstenv
or
sub
and
add
cs
push
lock
or
jns
mov
rcrl
pop
out
xlat
ret
movsl
dec
ret
sub
xor
mov
sub
cmpsb
outsb
xchg
mov
xorb
mov
sub
out
mov
mov
into
xchg
push
scas
pop
sbbb
popf
cmp
pop
jmp
adc
mov
mov
pop
dec
inc
pushf
mov
lock
adc
or
movsb
mov
or
or
dec
repnz
sbb
push
sub
ja
mov
sub
fisubs
add
or
sbb
pop
xchg
movsb
out
scas
aaa
cltd
add
cmp
imul
mov
test
das
ret
fwait
ds
mov
jns
dec
imul
inc
les
mov
inc
adc
cmc
mov
scas
adc
mov
mov
hlt
mov
sbb
pop
inc
dec
add
dec
scas
leave
mov
add
test
or
fnstsw
mov
cmp
cmp
jae
stos
test
les
push
fwait
dec
cwtl
cwtl
gs
pop
mov
cmp
ds
mov
repz
insl
repz
jb
push
das
mov
pushf
je
xchg
pusha
add
inc
sbb
cmpsl
push
add
outsb
cli
adcl
jp
test
mov
xchg
aad
cmp
aas
inc
add
outsb
lcall
xchg
pop
adc
stc
out
pop
test
xor
mov
sahf
fwait
andl
mov
test
fwait
in
sub
fdivl
inc
sub
push
inc
shll
lcall
in
pushf
cmp
sub
loopne
mov
jl
fbld
cmc
cwtl
scas
mov
stc
addr16
out
scas
mov
aam
xor
adc
mov
mov
pop
rdpmc
pop
call
mov
lods
je
cmc
ret
into
cmp
fsubr
mov
negl
and
pop
mov
and
cli
lock
or
push
lea
sub
cmp
ljmp
adcl
cmc
mov
bound
sbb
push
mov
push
push
repz
push
adcl
jbe
mov
push
mov
or
or
arpl
imul
rorl
ret
dec
jnp
rcrb
sub
cs
sarl
test
add
negl
stos
xchg
add
sbb
repnz
cmp
lock
sti
mov
inc
mov
pop
lret
push
mov
bound
into
xchg
xchg
cmc
xchg
dec
andl
rol
pop
jmp
arpl
push
mov
fxch
pop
adc
lret
or
in
jecxz
push
jle
cmp
jne
push
jl
movsb
sbb
inc
jp
clc
fs
popf
in
in
mov
push
scas
imul
push
arpl
pusha
cmp
test
xor
mov
stos
and
lret
stc
sub
movsb
mov
es
pushf
mov
les
pop
add
or
inc
arpl
xchg
les
inc
and
fwait
cmp
leave
test
xchg
cmpsb
jp
pop
dec
fisttps
aaa
mov
xchg
mov
mov
or
fwait
or
mov
inc
movsbl
add
sbb
popa
and
pop
loopne
jge
xor
sti
sbb
test
pop
faddp
rep
add
inc
jmp
lcall
push
cmc
test
test
xor
adc
out
clc
ret
push
pop
bound
mov
notl
push
xor
add
into
sub
fsubs
mov
idivb
and
jb
lcall
insb
clc
jb
dec
push
outsl
data16
into
mov
adc
dec
rol
mov
rorb
pop
fisttpll
in
cmp
out
gs
and
sub
test
aam
repnz
out
mov
lods
test
fidivl
inc
pop
mov
xor
ds
leave
jge
jl
pusha
sbb
mov
das
add
dec
mov
fisubrs
pop
jb
dec
mov
push
iret
outsb
outsl
int3
sub
adc
push
jne
stos
push
std
icebp
push
adc
and
push
or
push
xor
das
adc
lods
ljmp
unpckhps
loope
shrl
lret
inc
inc
pop
push
cmp
push
jbe
fiadds
jg
xor
push
push
imull
adc
mov
ds
cltd
cs
rorb
repnz
xor
sub
dec
jmp
inc
out
leave
xchg
xchg
rolb
call
cli
addl
push
andl
adc
xor
movb
dec
push
insb
subl
cld
dec
incb
int
push
int3
ret
pop
fstpt
bound
hlt
mov
mov
sub
ficoms
push
add
fs
faddp
and
mov
lods
ja
mov
scas
sbb
inc
cld
add
call
push
enter
insb
mov
int3
sahf
cld
rcrb
dec
push
push
mov
lahf
notl
push
pop
test
iret
nop
cli
out
ds
inc
dec
stos
sbb
mov
les
inc
inc
addr16
mov
cwtl
mov
sub
lods
dec
in
ret
and
sub
jge
mov
loop
pop
jo
aam
or
push
fs
pop
sbb
inc
add
ret
mov
mov
and
xchg
es
adc
enter
cmp
jnp
call
mov
mov
jge
mov
mov
sbbb
cld
imul
xchg
inc
movsl
and
sbb
jg
adc
mov
jg
clc
insl
hlt
fstps
imul
repnz
mov
jbe
insl
adc
stc
ljmp
mov
adc
xchg
stos
fadds
test
jl
push
lock
loop
cld
outsb
dec
sub
mov
xchg
push
xor
mov
fcom
pop
jmp
or
add
mov
pop
mov
mov
sti
inc
imul
jmp
lods
pop
inc
mov
push
dec
lods
ljmp
or
int
adc
or
add
push
ficoms
mov
nop
and
ret
and
dec
insb
jne
cld
or
test
pop
push
xchg
and
movsl
dec
inc
fcoml
push
in
outsb
mov
stc
dec
lods
jecxz
push
adc
xor
mov
movsb
insl
std
xchg
xor
cmp
and
pop
in
sbb
into
fcoml
sbb
jmp
sbb
les
cwtl
fs
sbb
outsb
lea
inc
xor
mov
lea
pop
fidivs
sbb
std
dec
adc
js
mov
jl
sbb
sbb
mov
sbb
jmp
int
inc
pop
pop
lock
bound
dec
ror
or
cwtl
rcll
mov
cmc
scas
mov
cmp
cmp
in
stos
push
daa
add
push
daa
xor
mov
and
arpl
sub
repnz
insl
leave
sti
sarb
pop
cmp
mov
movsl
mov
call
mov
push
test
sub
fisttpll
xlat
int
cmp
cmpsb
es
gs
fildll
add
aas
push
pop
pop
and
push
daa
pop
mov
les
lahf
xchg
xor
xor
xor
xchg
aaa
mov
mov
sbb
jbe
daa
test
psubq
pop
inc
scas
cwtl
sarb
loopne
loop
jns
xchg
mov
mov
movsl
xor
pop
mov
jmp
in
adc
fmuls
popa
mov
int
loopne
push
mov
mov
inc
mov
enter
cwtl
call
xchg
icebp
and
mov
jns
insb
sti
imul
jmp
pop
add
imul
les
cmpsb
adc
dec
iret
lahf
jp
sub
shlb
and
pushf
imul
clc
sub
dec
mov
or
or
insb
add
stos
xor
pop
adc
adc
mov
pop
sahf
filds
pop
push
pop
sarb
and
loopne
daa
xor
jne
sub
sub
jecxz
mov
test
test
xor
pusha
inc
movzwl
call
pop
pop
jmp
das
xchg
in
adc
in
test
sbb
add
stc
push
add
inc
aaa
insb
mov
stc
fldt
or
sub
push
xor
loopne
add
lcall
cmpsb
jb
push
imul
jo
jmp
jns,pn
rcrl
bound
out
outsb
sub
shrb
xchg
push
rol
fcmovnb
xor
ja
stc
and
loopne
lods
mov
fistps
adc
fwait
jmp
xchg
mov
xchg
sub
loop
loop
inc
rcll
pop
rcll
adc
jne
aas
pop
cltd
cmpsb
scas
mov
dec
rolb
cltd
arpl
js,pt
addr16
movsl
sub
icebp
push
xchg
sarb
or
jge
or
jae
push
outsl
les
xor
cmpsb
jge
aas
inc
add
xchg
clc
lret
rolb
sub
or
push
lods
lahf
cmp
jmp
aad
dec
sbb
inc
ljmp
ds
add
sub
jg
adc
insb
leave
insb
jmp
jecxz
out
xor
adc
shlb
das
and
sbb
inc
loopne
imul
test
cmc
or
cmp
fidivs
xchg
idivb
sbb
fstps
cmp
stc
int
push
pop
sub
es
ds
outsl
lods
gs
rolb
call
in
ds
push
imul
aad
jnp
cmp
jg
pop
rorb
or
das
sub
testl
mov
pop
dec
loope
or
subl
dec
lfs
xchg
ret
jg
pop
and
faddp
pop
mov
sub
mov
test
mov
popf
das
mov
fdivl
inc
lods
cmpsb
jg
data16
iret
bound
and
inc
dec
pop
das
or
mov
out
xor
call
cmp
mov
das
loop
xchg
and
fbstp
inc
gs
jae
and
sub
sub
jmp
or
out
scas
push
loope
shrb
xchg
in
xor
add
ja
pop
cmp
int3
rorl
ljmp
mov
jge
jmp
sub
scas
aam
int
dec
mov
fimull
dec
sahf
sub
jle
add
xorps
mov
neg
add
mov
pop
orl
cmp
jecxz
aaa
sub
adc
or
sub
add
sub
sbb
add
cwtl
sbb
xor
nop
push
sub
addr16
xor
push
adc
add
fidivl
inc
mov
jns
mov
fbld
in
loop
enter
mov
ficoml
cwtl
pop
jo
pop
push
xor
sbb
ud1
int3
ficoms
fsubs
push
aad
rcrl
mov
mov
xchg
pop
movsl
add
push
repnz
and
cmp
and
bound
mov
cmp
shlb
int3
leave
push
repz
or
stos
inc
mov
movsb
push
xchg
sti
and
adc
shll
enter
imul
pop
cli
icebp
pop
loop
push
outsl
in
scas
pop
mov
stos
shlb
mov
mov
mov
jo
xor
mov
lods
sbb
lods
ds
jmp
inc
cmp
es
fs
out
mov
or
mov
cmp
in
push
xchg
fwait
cmc
les
mov
or
fldenv
lds
adc
les
in
sub
in
loopne
pusha
jne
sbb
inc
mov
test
cmp
out
jmp
ljmp
adc
dec
scas
and
sub
sub
xchg
push
cltd
sbb
sti
adc
js
les
jb
cli
movsb
mov
out
das
mov
inc
sub
out
pop
lock
sub
push
out
hlt
xor
sub
lahf
mov
inc
loope
cmp
outsl
jg
adc
dec
pop
sahf
pop
insl
or
push
mov
es
ja
dec
push
mov
aas
adc
sbb
fwait
testb
in
xchg
cs
mov
cmp
or
push
fmull
inc
sub
or
fmull
clc
adc
pop
rclb
sbb
imul
sbb
jge,pn
push
addl
ret
cmc
ret
adc
loopne
subb
pusha
bound
push
ret
stos
cmc
sbb
fildl
repz
movsl
or
dec
test
or
pop
or
and
inc
rorb
fisubs
loopne
xlat
jmp
cmp
and
lcall
out
mov
or
movsl
and
push
push
lock
dec
clc
cwtl
push
cmp
jl
push
icebp
inc
sub
jne
test
sbb
jg
test
xchg
or
aaa
hlt
mov
push
loope
push
sub
lret
lret
or
cli
test
jns
or
cwtl
mov
and
jne
dec
cmp
pop
xchg
call
incl
in
mov
scas
mov
or
les
in
fisubrs
in
div
rcrl
cli
mov
adc
shrb
out
into
push
sbb
cli
cmpsl
lods
out
in
in
pusha
js
in
mov
loopne
mov
cmp
jp
sti
out
push
and
imulb
fisubs
push
lcall
cmp
nop
popf
imul
cmp
cmp
popa
add
inc
and
jecxz
out
into
and
push
add
vrsqrtps
out
jecxz,pn
sbb
fldcw
subb
cmp
mov
xor
fwait
jmp
sub
xchg
das
mov
shr
xor
sbb
rclb
es
pop
aaa
and
cmp
cmp
push
fldln2
js
in
pop
pop
mov
mov
cmp
sub
test
dec
imulb
in
test
adc
ja
pop
lds
sub
cld
and
pushf
ja
pop
sub
sub
jo
repz
rcrl
pop
inc
dec
loope
or
dec
je
xchg
mov
lods
imul
les
shrb
outsl
xor
test
sbb
mov
sbb
les
and
xor
test
jmp
sub
xchg
fwait
outsb
adc
pop
repnz
jle
and
add
dec
cmp
xchg
daa
and
sub
repz
aaa
add
jecxz
movsb
dec
fimull
jbe
imul
shlb
cmp
jo
addr16
scas
inc
sti
cmp
popa
or
arpl
jae
lods
mov
inc
loopne
mov
xor
push
shlb
dec
mov
lods
out
cmp
sub
jb
mov
lcall
jmp
cmp
xor
stc
out
cmpsl
jne
fidivl
add
mov
in
fimuls
cmp
dec
stos
outsl
out
shl
inc
cltd
inc
push
fcmove
xor
add
adc
xor
xchg
test
inc
call
movsl
frstor
out
mov
jbe
push
sbb
dec
pop
mov
and
fwait
inc
xchg
fistpl
std
sub
pop
loopne
mov
imul
xor
in
fdivrl
inc
lret
cs
inc
loop
aas
push
xlat
loop
mov
shll
rol
jge
fst
lret
ljmp
aad
adc
daa
cmc
or
pmulhuw
mov
subl
push
sbb
cwtl
pop
insl
adc
das
cld
imul
mov
fbld
sbb
dec
push
test
aad
lods
xor
inc
in
cmp
jge
notb
dec
jo
jg
mov
jp
xor
lods
add
enter
in
add
aas
incb
push
push
ja
stc
imul
push
dec
lcall
jo
ret
out
xchg
out
mov
pop
xchg
cmp
scas
push
sub
jmp
fs
out
hlt
cltd
sbb
push
xchg
add
mov
repnz
mov
out
push
or
fists
or
cmpsb
stos
cld
push
sti
ror
mov
pop
pusha
xor
mov
fsubp
xor
or
mov
mov
push
daa
dec
inc
mov
scas
in
add
sti
inc
mov
adc
add
push
inc
pushf
push
jge
leave
std
jae
add
loope
mov
pop
or
jge
adc
cmpsb
in
sahf
cli
lret
lret
cvtdq2ps
mov
cli
push
sbb
and
imul
push
pusha
dec
xlat
imul
orl
movsl
add
jno
xor
or
xchg
aas
in
stos
ja
inc
mov
dec
lods
fmulp
mov
mov
fcoml
lods
js
mov
test
insw
dec
mov
inc
pop
sbb
ss
xchg
int
xor
test
fs
repz
or
popf
in
into
ja
test
add
addl
rol
or
push
aas
scas
cmpsl
and
test
mov
or
fs
lcall
lcall
adc
adcl
inc
push
and
pushf
dec
sbb
insl
pushf
int3
dec
push
arpl
adc
mov
dec
xchg
mov
push
out
jecxz
sub
negb
inc
es
mov
test
scas
sbb
nop
xchg
adc
xchg
push
fsubs
push
and
popf
mov
sub
sbb
out
fwait
add
add
outsb
xorl
add
lret
inc
outsb
pusha
push
inc
sbb
pop
fdiv
mov
push
add
test
out
add
adc
inc
shll
push
inc
push
xor
pop
pop
and
in
lock
lock
cmp
xrelease
lcall
rolb
aas
decb
lret
sarl
cli
ds
ror
mov
fldcw
lret
cmp
pop
mov
mov
xchg
jecxz
xchg
in
pop
lds
les
sbb
or
jg
lret
cmp
sar
sbb
mov
inc
lahf
int3
testl
mov
xor
sbb
loopne
dec
bound
push
mov
dec
out
push
push
mov
stos
nop
mov
sti
sahf
inc
or
push
mov
or
cmc
popa
or
loope
mov
js
pushw
cmp
test
jp
insl
xchg
xorb
adc
inc
add
push
and
sahf
mov
cmc
cld
ret
pop
push
cmp
mov
mov
lock
insl
xchg
fxch
push
pop
sbb
xchg
mov
fbstp
push
ficomps
mov
movsl
jecxz
or
pop
push
xchg
shlb
mov
push
mov
dec
adc
push
push
xchg
cmpsl
or
mov
xor
jo
mov
arpl
xchg
cmp
push
sub
movl
and
clc
mov
stc
rolb
cmp
push
cmp
shlb
pop
mov
sti
lock
jle
sarl
mov
add
push
or
lods
cmp
xchg
in
ds
hlt
stos
push
addr16
add
push
xor
pop
mov
adcb
xchg
cmp
std
cmp
sarb
test
jl
jnp
xor
inc
push
lods
and
cld
mov
cmp
and
mov
lret
repz
add
pop
jne
fmull
adc
in
xchg
seta
push
pusha
jp
cs
sbb
divl
sub
sub
adc
sbb
lret
fwait
loopew
inc
fidivrs
scas
pop
xor
lahf
cmp
mov
outsl
dec
shl
adc
ja
mov
pop
mov
lds
adc
mov
cmp
dec
push
mov
test
loop
iret
scas
fcmovbe
das
mov
enter
lret
mov
inc
cmp
xchg
daa
scas
imul
fnsave
add
mov
insl
push
cmp
or
rorl
mov
sbb
pop
ss
jp
addr16
ljmp
jl
cmp
out
cli
jo
xlat
repnz
insl
xor
fcmovu
ficomps
lds
dec
sub
dec
jge
and
jne
lods
push
jge
and
sti
xor
es
xchg
sti
push
jne
fwait
sti
push
aad
loop
and
cli
in
movsb
repnz
movsb
add
xchg
sarb
lret
or
or
xor
push
ds
scas
lods
mov
movsl
in
push
pop
dec
and
test
adc
sub
aam
mov
and
mov
in
je
jg
xor
push
adc
fisubs
inc
andl
shlb
hlt
jno
push
mov
mov
fdivr
es
xor
push
out
outsb
dec
ljmp
jbe
out
out
mov
push
mov
iret
aaa
repz
lods
int3
je
arpl
cmp
dec
inc
nop
shlb
fisubs
fs
dec
pop
movsl
fldl
sub
push
jbe
push
jp
xchg
leave
xchg
pop
inc
inc
adc
nop
js
cwtl
nop
nop
inc
jnp
shl
push
das
mov
shrb
inc
insl
or
pusha
jecxz
adc
stos
push
push
shl
jo
mov
insb
sbb
mov
add
pop
neg
movsl
xchg
ss
fbld
and
mov
shl
cltd
push
pop
mov
jge
lahf
lcall
sarb
sbb
enter
dec
cs
sub
jmp
jb
int
mov
mov
aaa
data16
shrl
mov
jnp
icebp
fsub
xchg
xchg
arpl
clc
sub
into
in
ljmp
mov
add
ret
jmp
cltd
and
add
ds
push
aaa
push
and
mov
inc
sti
loop
add
sbb
lock
mov
jo
push
ss
sub
bound
test
push
outsl
in
adc
jno
aas
repz
sbb
adc
sub
sar
push
sbb
sub
clc
sub
pushf
and
out
jo
mov
mov
mov
icebp
push
imul
out
adc
hlt
dec
and
cltd
pop
adc
int3
addb
lock
cmp
and
fucomip
mov
pop
aas
imul
xchg
inc
inc
push
jnp
stos
fmull
push
jecxz
ret
and
lds
xlat
push
cs
and
js
data16
clc
in
ret
mov
push
xchg
sub
outsb
addr16
push
cwtl
push
iret
cmp
adc
jmp
xchg
rol
mov
ja
aas
and
data16
in
inc
out
cmp
idiv
aaa
aam
sub
mov
mov
aas
mov
fisttpll
arpl
shr
jle
outsb
xchg
scas
cmp
mov
das
mov
adc
in
jae
je
scas
pop
dec
enter
pop
mov
gs
ljmp
fsubs
in
and
jmp
imul
and
leave
inc
int
push
fdivrl
or
pop
and
out
pop
enter
test
cmc
adc
data16
outsb
mov
xor
mov
mov
flds
mull
outsb
sub
jge
push
fmul
daa
xor
nop
std
nop
mov
je
mov
pop
loope
dec
stc
push
arpl
aam
int
mov
xchg
dec
mov
add
adc
and
stos
push
stos
mov
or
adc
movsb
test
jno
sbb
mov
addr16
sub
fldt
push
or
sub
push
inc
push
sub
pop
push
sahf
adc
dec
add
mov
les
jmp
dec
daa
adc
cmpsl
jbe
stos
cli
xchg
pop
hlt
pop
les
or
fs
ja
jae
add
mov
ss
jnp
ss
xchg
dec
dec
jo
in
test
dec
outsb
aas
cmp
stc
insb
fsts
adc
and
test
jl
adc
dec
mov
out
pop
push
shll
cmp
inc
jnp
xchg
test
push
stos
add
xchg
daa
jne
pusha
lock
testl
jno
xchg
cltd
jo
rolb
sbb
ss
lret
mov
mov
sbb
das
repz
mov
push
push
pop
add
jo
pop
and
add
or
cmpsl
xor
sarb
in
cmp
mov
das
fs
loope
dec
das
mov
jo
xor
inc
xor
lea
xor
push
insb
sub
lods
mov
adc
clc
push
add
jge
sub
pop
sub
daa
jmp
mov
dec
jmp
fs
mov
jmp
cmp
popa
sahf
sub
jne
fldl
inc
int3
add
and
push
adcl
adcb
leave
shl
notb
cmp
lahf
in
out
push
push
aas
out
rcll
subb
xor
xchg
mov
into
push
sbbl
xor
push
jno
hlt
jnp
test
xor
jmp
imul
fldt
pop
das
popf
mov
out
jb
push
sbbl
cld
jb
nop
adc
mov
sbb
xchg
lret
fwait
in
pop
inc
pushf
loop
in
leave
lea
mov
out
ret
test
in
data16
lods
insl
mov
inc
loop
inc
pop
and
push
push
pop
negb
aad
mov
sbb
and
cmp
lods
jp
fs
mov
out
jnp
out
mov
lods
js
and
cmp
cli
pop
mov
cmp
fistpl
out
jo
ret
and
out
xchg
sub
ret
cmp
rcr
sub
movsb
xchg
fmul
sbbb
stc
insl
aaa
into
push
sub
movsl
cmp
mov
xor
outsb
pop
std
fsts
popf
mov
repnz
jmp
out
mov
call
pop
cmp
repnz
sub
xchg
xchg
in
out
andb
aaa
dec
xchg
mov
int3
mov
push
jbe
sbb
shll
lret
fwait
sbbl
andl
mov
std
popa
push
out
inc
cmp
mov
and
or
lahf
sbb
inc
sti
xor
sub
dec
loope
sbb
mov
pop
push
mov
push
repz
out
mov
xrelease
xchg
lcall
sahf
bound
pop
cwtl
lock
adc
mov
sbb
fbstp
clc
push
addr16
js
pusha
icebp
orl
lret
arpl
push
cmp
test
xchg
cmp
push
jne
inc
loop
andb
or
cs
push
fsubrl
xlat
idivb
cmp
mov
and
or
sbb
data16
mov
lahf
gs
push
inc
aaa
out
sub
int3
add
cmpsb
je
pushf
jae
popf
push
jl
jmp
sub
fildl
jp
pop
inc
ret
inc
jbe
adc
or
scas
xchg
and
cmp
ret
mov
mov
jnp
sbb
mov
lea
xor
mov
mov
and
enter
inc
fstps
jge
xor
add
gs
or
xchg
clc
jne
flds
clc
sbb
cmp
movsl
push
mov
add
add
pusha
aaa
cmp
push
out
hlt
test
mov
ss
xchg
cli
add
or
push
mov
sbb
push
leave
sub
add
or
call
adc
mov
and
dec
lds
ret
cmpb
cmp
sbb
cmp
lret
xchg
xchg
pop
leave
or
fisubs
adc
out
sti
inc
fs
add
push
pop
and
mov
sbb
iret
xchg
in
mov
cwtl
rcl
mov
xor
xor
jae
cld
mov
pushf
xor
mov
cmp
aas
ret
and
dec
adc
mov
jae
cwtl
xlat
call
das
ja
in
push
push
mov
adc
ror
sub
les
sahf
push
or
pop
mov
fildl
mov
cmpsb
dec
aad
nop
or
mov
inc
data16
push
cmp
xchg
mov
or
out
cmp
xchg
ret
sub
adc
hlt
out
repz
sbb
int
outsl
cmpb
add
pop
mov
lds
sbb
pop
xor
adc
push
mov
mov
sub
outsl
lea
mov
jmp
lods
dec
fisttps
or
adc
pushf
sbb
out
sarl
mov
scas
sti
mov
movsl
adc
add
add
out
push
scas
adc
jge
cmc
cmp
sbb
movsb
mov
inc
pop
movsl
jnp
or
dec
movsl
inc
mov
dec
insb
sti
pop
mov
jge
bound
mov
out
movsb
push
add
es
sbb
cmp
fwait
inc
or
movsl
nop
xchg
mov
adc
xorl
mov
dec
cmc
sub
sub
insl
lret
or
xchg
inc
add
sbb
ret
repz
jge
roll
sbb
icebp
sahf
scas
and
repz
xor
iret
mov
rcrl
jae
adc
shll
xor
xor
adc
mov
loopne
add
xchg
mov
arpl
out
rolb
mov
add
int
xor
inc
aad
mov
pop
push
mov
cmp
push
repnz
and
mov
jp
sub
insl
cmpsb
lock
and
decl
push
imul
das
pop
inc
adc
mov
mov
pop
jae
xchg
cs
mov
fistpll
shr
mov
cwtl
addr16
sub
dec
addr16
jo
mov
adc
or
xchg
lods
xor
sub
and
dec
insb
push
cltd
sub
stos
mov
cmp
scas
in
or
test
jbe
out
movsl
sbb
idivb
pop
adc
cld
imul
hlt
cmpsb
jb
sti
jnp
stos
xor
fstpt
mov
out
cltd
lds
in
call
pop
int3
repz
popf
xchg
popa
sub
adc
shufps
inc
test
sbb
push
push
xchg
mov
sub
mov
add
cmpsl
cltd
or
push
cs
pusha
pusha
dec
mov
enter
mov
adc
and
lahf
or
inc
sbb
divb
xchg
out
loope
pushf
push
push
mov
adc
fucomip
cmp
je
fimull
cmp
mov
push
jl
cld
sub
sti
adc
aam
sbbl
or
imul
adc
inc
jae
pop
cmp
cld
aad
iret
jge
imull
inc
lea
js
in
in
pop
clc
in
ljmp
lea
push
mov
mov
in
pop
push
xchg
and
hlt
cmp
add
or
sets
lds
clc
inc
cmpsb
sbb
jnp
adc
loop
pop
bound
lcall
icebp
mov
rcr
fmulp
xor
inc
ljmp
lea
imul
mov
clc
pusha
aam
fwait
adc
xchg
pop
out
push
ret
outsl
xor
test
jbe
or
cmpsl
arpl
and
and
in
lahf
cmp
pop
mov
sbb
jne
push
xor
jl
sbb
jmp
pop
fdivr
or
inc
mov
mov
lret
xchg
cli
sbb
dec
jge
mov
adc
rcr
jecxz
add
xchg
push
dec
leave
clc
jmp
sub
cli
push
repz
sub
rorl
xor
push
and
or
enter
stc
ljmp
jmp
int3
sbb
sahf
inc
mov
leave
std
scas
dec
add
jmp
mov
outsl
add
ds
js
push
xchg
int
pop
clc
arpl
xor
xor
insb
popf
pop
dec
mov
icebp
add
iret
dec
insl
dec
scas
jmp
push
sti
jns
dec
sti
dec
cld
inc
dec
lods
inc
imul
cmp
les
mov
test
popfw
leave
cli
imul
cmp
stos
mov
popf
jle
dec
imul
pop
adc
pop
out
pop
inc
and
movl
pop
aaa
int3
insb
pusha
dec
stos
xor
sbb
pushf
aaa
jecxz
push
dec
in
mov
mov
jp
cld
mov
repz
hlt
enter
jo
push
inc
aas
xor
jg
aam
jmp
cmp
icebp
das
repz
push
and
pushf
mov
cld
mov
adc
addr16
scas
adc
xor
or
movsl
sub
and
fwait
sub
push
cmp
or
mov
iret
loop
lock
adc
std
sub
add
mov
or
add
dec
or
stos
scas
pop
fs
mov
jne
xor
adc
std
jb
push
inc
out
mov
xchg
mov
xchg
mov
movsb
into
cmpsl
adc
inc
leave
mov
pop
pop
lret
push
push
enter
push
out
sub
xchg
pusha
ficompl
ss
add
into
les
adc
xchg
cmp
mov
cwtl
lds
sub
mov
movsb
inc
fstpt
pop
xchg
sbb
cli
inc
test
mov
cmp
cmpsl
push
repz
shlb
lods
iret
sub
xchg
in
sahf
or
add
push
lret
sub
xchg
fsubrl
or
pop
test
int
nop
xor
fwait
das
js
fdiv
jb
rolb
enter
gs
dec
mov
jg
jmp
mov
xchg
sti
pop
inc
sbb
mov
sbb
xchg
les
rorl
push
adc
mov
test
mov
enter
daa
dec
jnp
pop
or
jl
jnp
adc
stos
mov
bound
mov
mov
stos
cmp
in
popa
jae
sbb
mulb
outsb
add
sub
jns
lcall
outsb
mov
fdivrp
xchg
pop
push
jmp
pop
sub
xchg
or
adc
lret
adc
out
lret
xor
lcall
mov
cmp
cmp
pop
sub
jns
cwtd
push
and
mov
add
pop
aam
in
fsubrs
ds
lock
divl
loopne
dec
push
cmp
lods
adc
shlb
jnp
lods
into
cmp
xor
insb
shll
push
cmp
xor
fsubrl
add
dec
jg
adc
ds
push
pop
ja
aaa
push
test
cmpsb
test
and
mov
in
aam
push
cmpsl
dec
aad
stos
lea
lock
sti
xor
mov
nop
das
insl
jmp
mov
andl
imul
les
sbb
sbb
jl
push
xor
inc
aaa
imul
lret
ds
gs
lds
outsl
adc
in
out
loop
lds
gs
rol
inc
inc
fisubrs
jmp
jno
into
lods
mov
dec
fistpll
mov
cmp
cmp
xchg
inc
inc
jnp
dec
mov
add
mov
ret
push
and
mov
pusha
xchg
in
fs
call
add
jl
movsl
cmp
adc
sahf
add
test
shl
mov
inc
jo
sbb
out
in
dec
dec
push
cmp
std
rorb
fisttpl
xor
xor
cmpsb
xor
jecxz
inc
enter
nop
pushf
fsqrt
sbb
movsb
dec
dec
lahf
jb
mov
sbb
dec
ret
in
xchg
out
rcr
sub
sbb
fcoml
imul
dec
jmp
mov
sub
test
sub
jb
or
xor
fdivs
je
push
into
mov
xchg
test
lret
sub
jbe,pn
push
loop
xlat
push
icebp
mov
sub
push
inc
cltd
popf
push
add
jnp
pop
xchg
jne
int3
mov
xor
lds
lret
adc
add
cmp
loop
or
or
nop
pusha
mov
test
lds
leave
mov
loopne
jge
test
aaa
push
hlt
and
rorl
lock
cmp
fwait
pmulhw
jp
data16
fwait
adc
lods
cltd
sbb
cmc
add
inc
inc
loop
jmp
iret
fisubl
imul
idivb
and
mov
enter
push
mov
jns
subb
jb
and
dec
xor
xchg
in
popl
mov
insl
test
sbb
xorl
inc
in
test
jp
adc
cs
push
or
es
add
mov
dec
jne
loopne
xchg
inc
test
fwait
cmpsl
dec
mov
mov
dec
mov
fimull
cli
pop
xchg
mov
xchg
jbe
mov
inc
sbb
imul
xor
fcomi
das
sub
mov
dec
xchg
dec
outsb
and
cmpsl
loop
xor
jbe
and
jge
sub
and
scas
enter
out
jecxz
pop
daa
inc
icebp
cmpsb
jp
inc
mov
jae
pop
adcb
ljmp
xor
jecxz
xchg
insb
in
or
and
jbe
mov
es
push
in
push
shrl
mov
sub
incl
push
jnp
cmpsl
jecxz
jne
xor
ljmp
cmp
lcall
cwtl
or
or
in
js
jle
out
fdiv
hlt
mov
sub
sub
cmp
repz
sbb
in
sti
in
sbb
xor
or
daa
fists
ss
out
popf
cli
or
mov
clc
adc
sub
in
add
xchg
adc
push
add
sarl
dec
mov
jge
add
mov
lret
enter
push
rolb
sahf
aaa
push
outsl
mov
es
add
push
imul
pop
ljmp
jbe
sti
fstpl
mov
pop
sub
out
idivl
out
mov
jmp
jno
mov
jle
int
or
mov
sbb
pop
sbb
in
sub
sbb
fcoms
mov
dec
adc
loope
or
sahf
jnp
rcl
pop
fs
out
bound
divb
dec
and
loopne
in
enter
add
pop
pusha
and
ljmp
xchg
mov
ret
dec
in
xor
out
cmp
rcr
js
iret
mov
pop
jnp
pusha
lahf
add
scas
mov
fbstp
mov
cs
test
jge
mull
cmc
scas
xor
xor
mov
les
mov
mov
xlat
leave
sbb
out
jp
lods
arpl
cmp
xchg
dec
je
shrb
aam
dec
ret
pushf
push
dec
iret
jg
dec
push
clc
nop
adc
sbb
xchg
mov
inc
jmp
subl
notb
mov
inc
cld
jmp
pop
mov
push
popl
mov
xchg
loope
sbb
stos
cmp
mov
cmc
mov
jle
js
xor
pop
outsl
mov
aaa
dec
fwait
iret
std
mov
pop
cmp
sub
fldcw
xchg
inc
cltd
inc
pop
mov
data16
daa
push
js
xchg
pusha
lock
out
push
lock
adcl
movsb
lds
cmp
cmp
push
hlt
ror
aas
ja
stc
ret
jns
pop
fwait
xlat
mov
sbb
mov
fwait
dec
sbb
data16
popa
mov
fistl
pop
inc
cmpsl
inc
push
inc
jge
xor
pop
jo
pushf
push
sub
test
or
xchg
es
loopne
xor
xchg
jae
or
jp
rcl
pop
sbb
mov
xor
mov
aaa
int3
loop
xor
adc
sub
push
inc
into
dec
cltd
pinsrw
lcall
cmpsl
mov
pop
adc
clc
mov
adc
xor
shl
insl
adc
loope
int
addl
cmpsl
cs
jno
jmp
out
jae
and
fmuls
dec
movsl
jns
sub
mov
and
ja
stos
orps
int3
sbb
inc
or
dec
dec
lods
and
stos
rorb
in
xchg
pop
lret
js
mov
jmp
dec
ss
push
ljmp
sub
add
push
sub
ljmp
je
sbb
xor
or
mov
mov
ljmp
dec
cltd
cmpsl
jno
dec
xchg
dec
jg
not
mov
push
pusha
bound
repnz
popf
sub
dec
sar
push
das
pusha
sbb
test
cmp
or
pop
jnp
jnp
lea
outsl
fsubrl
xor
push
or
adc
mov
je
jo
sbb
push
mov
mov
mov
movsb
mov
hlt
or
scas
xor
and
jp
xlat
rcrb
out
sbb
xor
ss
mov
cli
adc
push
inc
pop
mov
addr16
sbbb
push
cmp
repz
mov
dec
dec
sub
adcl
adc
push
std
inc
jg
cltd
dec
jmp
push
cmp
fisubrl
repnz
mov
popf
and
leave
cmp
rorb
dec
adc
and
mov
add
cmp
jo
notb
jl
data16
mov
cmpsl
dec
pop
xchg
push
fimuls
cmp
pop
out
test
in
xor
repnz
je
stos
sbb
test
fcomp
push
hlt
sub
repz
xchg
mov
nop
push
pop
adc
jp
push
sbb
add
in
dec
incl
push
popf
bswap
adc
or
sbbl
call
ss
daa
pop
imul
bound
or
mov
ret
test
or
in
aam
gs
sbb
mov
insb
push
stos
push
lret
push
imulb
push
cli
mov
dec
add
loopne
daa
pop
sti
cmp
mov
movsl
xchg
jne
ret
jmp
iret
bound
imul
adc
outsl
loopne
fadds
push
arpl
ljmp
xlat
mov
es
jmp
addr16
jecxz
int3
shrl
jns
jl
adc
notb
cmp
pop
mov
sub
pop
or
cmpsl
cmp
xchg
or
mov
cld
cmc
clc
pop
inc
or
cltd
iret
fs
inc
lret
addr16
negl
insl
jp
js
sub
loopne
out
ds
scas
out
out
cs
jae
sbb
sub
and
mov
imul
xor
mov
and
push
pop
push
xchg
jmp
xorl
leave
mov
dec
shrb
push
push
lcall
mov
test
jnp
push
int
gs
xorl
mov
cltd
lods
mov
and
cmpsl
aad
push
and
shr
aad
xor
in
mov
enter
daa
cli
aad
roll
inc
and
push
bound
andb
push
mov
mov
jb
lods
sbb
lret
dec
lods
aas
cmp
cwtl
cld
cli
push
inc
cmpb
test
cmp
mov
sbb
pop
rorb
movsb
into
push
push
inc
arpl
mov
mov
jg
adc
test
push
cmpb
mov
mov
imul
and
adc
test
mov
aad
mov
ror
mov
fistl
push
jb
cmc
test
adc
adc
sub
lret
dec
push
jb
cwtl
in
mov
fwait
jns
lret
aad
rolb
pop
popa
shlb
jg
jl
je
fcomps
jp
cmp
fmull
mov
sbb
ret
mov
je
dec
notl
fs
mov
pushf
js
cmp
xor
jmp
jmp
xor
push
mov
rclb
stos
add
hlt
gs
mov
adc
icebp
stos
ret
mov
and
int
sarl
and
push
mov
stos
jp
insb
pushf
imul
inc
cmp
out
loope
mov
inc
mov
fbstp
insl
fistpll
add
leave
jl
jmp
jg
negb
xchg
inc
push
addr16
test
inc
xor
push
out
push
add
test
test
shr
sbb
in
insb
cmp
shll
sub
fildll
xchg
xor
arpl
jo
adc
dec
aad
fdiv
lret
push
popf
cmpb
arpl
test
rolb
push
cmp
xchg
lret
xchg
inc
mov
mov
push
lods
aas
iret
sbb
jae
cli
mov
inc
jl
insb
adc
push
pop
popf
cmp
dec
xor
jae
loope
pop
cmc
cmc
push
popf
pop
aam
and
test
gs
aam
repz
ss
popf
pusha
leave
push
fs
bound
pop
jp
clc
aam
fimull
add
mov
inc
mov
jp
outsb
iret
push
jecxz
sbb
mov
or
lods
mov
mov
rep
cwtl
mov
mov
sahf
mov
loop
cmp
push
in
dec
scas
loope
ret
shrb
mov
call
sbb
dec
cli
add
lcall
mov
sbb
cs
inc
pop
jne
add
push
mov
pop
ss
imull
jo
lret
shrl
out
imul
or
fstl
jo
xchg
cs
shlb
in
icebp
cltd
mov
in
pop
jo
adc
push
fwait
xor
mov
pop
js
fnstenv
nop
xor
insl
cmp
add
jle
and
sub
ds
mov
std
push
ficoms
daa
lock
mov
popf
jp
outsb
clc
and
add
mov
aam
fcmovne
sbb
shrb
inc
in
movsb
lods
aad
cmp
push
push
mov
fldl
lahf
jg
push
push
inc
mov
cmp
sub
stos
inc
mov
dec
xor
adc
stc
xchg
add
ljmp
test
sub
packssdw
mov
mov
sub
sahf
add
les
xlat
and
hlt
adc
cs
lret
mov
ja
stos
icebp
pop
mov
push
daa
jp
sbb
in
push
ja
push
cmc
cmp
out
pop
mov
sbb
leave
or
sti
lret
sbb
out
lret
sub
sbb
dec
loope
dec
mov
pop
xor
jnp
fs
sub
aad
int
inc
dec
dec
push
out
aas
mov
adc
dec
and
adc
mov
and
test
sub
in
jg
clc
mov
ds
sbb
and
arpl
cwtl
rol
stos
lds
push
cmp
lcall
pop
jo
cs
test
add
bound
xchg
xor
scas
inc
and
insl
jge
adc
outsl
sti
pop
dec
shrb
inc
jo
ja
or
sarb
outsb
push
test
js
fstpl
mov
mov
stc
fisubl
fcmovnb
gs
sarl
mov
daa
mov
ds
jno
push
popf
roll
mov
mov
and
push
ja
and
test
pusha
sbb
pop
dec
aad
fsubs
loopne
jmp
jns
insb
push
jo
in
mov
data16
fs
or
mov
ret
mov
scas
inc
lcall
std
movsl
jp
cmp
decb
sti
adc
add
or
inc
xlat
scas
es
insb
fcmovnbe
jl
push
pop
pop
add
push
jbe
es
aaa
scas
call
add
das
cltd
mov
and
mov
cs
popl
andb
ret
jb
sub
mov
sbb
rorb
in
pop
mov
lods
dec
outsl
and
jge
cmp
das
jb
aam
cmp
dec
jne
inc
loopne
cmp
jno
xlat
addl
loope
mov
adc
cmpb
fwait
cli
call
sahf
mov
aas
addr16
mov
pop
sbb
out
cmp
outsb
xchg
out
test
sub
dec
or
cmp
jl
in
push
sbb
push
jo
jg
xor
jne
mov
xor
popa
dec
ss
and
add
fcmovbe
jns
test
fsubl
dec
push
inc
jo
pop
sub
mov
cld
dec
leave
iret
fildl
in
stos
mov
scas
push
test
jg
iret
cmpsl
shl
xlat
jns
xlat
add
pop
ja
orb
stos
and
shl
xor
ds
add
adc
stos
repz
lods
and
add
cmpsl
xor
mov
push
fwait
mov
mov
in
mov
push
call
xor
or
out
cmp
mov
idivl
daa
repnz
div
add
divb
push
imul
push
popf
jle
xchg
push
push
mov
inc
into
ljmp
inc
or
pop
stc
dec
daa
dec
cld
adc
insl
and
dec
mov
lds
xor
iret
inc
xor
fwait
aam
aad
test
push
cmp
sbb
sub
test
je
lcall
cmpsb
or
nop
imulb
ja
rorb
add
gs
and
es
mov
pusha
push
call
sub
and
fidivrs
cmpsb
cmpsb
fs
xor
dec
push
movsb
jg
popa
push
pop
sti
inc
xor
lcall
mov
xchg
sub
lds
cwtl
pop
mov
arpl
mov
mov
dec
jbe
jle
cmp
stos
xor
push
int3
movsb
inc
fisttpll
pushf
fcomps
xor
lcall
sub
dec
xchg
lock
out
aad
adc
adc
xchg
fsubs
mov
adc
je
xchg
sahf
push
int3
dec
add
mov
dec
ljmp
aas
push
inc
push
inc
jle
inc
sub
pop
jle
jnp
cmp
mov
into
push
push
adc
test
rcll
cs
sub
fidivrl
dec
insl
dec
lods
and
push
loopne
jmp
fsubrl
push
ja
