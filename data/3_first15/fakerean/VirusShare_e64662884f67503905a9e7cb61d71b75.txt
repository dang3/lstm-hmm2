jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
xchg
inc
add
or
mov
mov
mov
push
add
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
stos
xchg
add
add
sub
inc
add
add
pop
xchg
add
add
sbbl
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
xchg
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
and
lds
mov
add
movsb
xlat
cld
decl
pop
aam
add
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
push
inc
add
jg
add
mov
fcoms
xorb
add
mov
push
add
mov
add
xchg
add
movsb
pushf
loopne
incb
jbe
add
add
xchg
test
add
aam
out
add
add
jmp
leave
add
add
rolb
add
mov
mov
mov
jnp
jns
sar
add
ret
add
fildl
subb
rolb
jecxz
push
push
jnp
jno
add
pop
add
roll
roll
mov
mov
pop
add
add
arpl
adcl
scas
lock
mov
repnz
add
pop
jmp
jne
popf
xchg
pop
push
push
in
push
arpl
mov
mov
leave
add
add
add
add
in
movsb
insb
add
mov
add
add
out
mov
in
add
mov
loopne
adc
xchg
lret
lcall
lea
push
push
push
push
push
call
pop
popl
jnp
add
add
add
add
add
sahf
fcmovu
movsl
pushf
mov
addr16
sahf
movb
add
cld
rolb
add
leave
outsl
add
add
add
add
jl
stc
push
in
jbe
jae
je
xchg
hlt
add
mov
int
add
push
test
bound
movl
popl
push
push
push
call
pop
js
movsl
sti
add
add
cli
jne
loopne
loopne
add
add
add
xchg
add
add
mov
push
add
add
mov
call
push
add
mov
lahf
add
mov
add
add
arpl
movsb
add
push
add
xchg
xchg
add
ret
lea
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
movb
add
add
dec
ja
add
add
pop
aam
mov
jecxz
add
out
fiadds
fnsave
fdivrl
js
cmpsl
add
sahf
repnz
push
add
push
mov
shll
mov
pop
add
add
add
jl
push
mov
add
add
test
add
mov
and
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
mov
mov
aam
mov
add
add
pop
jne
addb
add
fwait
jl
add
add
jns
arpl
add
shll
add
add
jno
add
rolb
add
pop
clc
add
add
add
fidivs
lret
mov
add
out
add
add
mov
add
add
add
mov
in
mov
lea
pop
call
call
push
push
push
lea
push
push
call
lret
add
add
data16
shll
test
add
add
xlat
add
fildl
mov
addr16
jmp
stos
pop
mov
insb
add
xlat
add
jne
lds
sbbb
push
aad
pop
mov
xchg
add
add
add
pop
add
cmpsl
insb
xchg
mov
mov
sahf
subl
fmull
add
inc
push
push
push
lea
push
lea
push
push
push
call
add
add
add
add
enter
gs
lcall
mov
add
add
int
add
iret
add
int
cmpsl
add
add
add
jp
lea
jmp
add
xchg
int
out
add
pop
mov
mov
add
add
lods
add
add
imul
mov
lea
pop
call
push
lea
push
push
lea
push
call
leave
add
mov
jle
mov
add
add
jo
mov
mov
pusha
fisubrs
add
lods
adcl
jmp
add
add
test
fidivrs
add
in
add
divb
mov
add
add
lret
call
lahf
add
add
jb
pop
add
add
mov
mov
lea
pop
jmp
ret
push
lea
push
push
push
push
push
call
imul
add
mov
mov
aam
addr16
int
push
push
add
add
add
lds
pusha
frstor
mov
pushf
push
add
add
hlt
subb
xchg
add
add
in
push
add
jmp
test
pop
mov
xchg
add
rcl
add
jmp
jo
mov
lea
pop
mov
mov
push
lea
push
lea
push
call
mov
fildl
std
mov
mov
roll
add
arpl
add
add
xchg
rolb
add
add
add
jecxz
mov
add
add
rcrb
add
add
add
pushf
add
mov
addb
jl
in
push
fs
add
fcoms
add
add
movl
jp
les
pop
in
ret
add
add
add
push
push
push
call
jns
lods
pusha
add
lods
add
add
popa
in
mov
jbe
mov
add
loopne
add
mov
addl
js
addb
aad
add
push
add
add
lahf
movsl
pop
cmpsb
loopne
add
add
arpl
add
cld
jae
movsb
ljmp
add
shl
out
mov
loope
add
lea
mov
int
push
data16
add
add
lea
pop
mov
push
push
lea
push
push
lea
push
call
add
call
into
fwait
rolb
loope
add
movsb
add
test
pop
add
fldpi
add
lret
add
fs
add
add
add
jb
add
jns
add
movsl
clc
ljmp
add
add
cmpsl
test
fstl
add
insb
jno
add
int
outsl
fnstsw
add
add
pop
xor
push
push
push
lea
push
push
push
call
sub
xchg
add
add
lahf
xchg
idivb
add
add
add
lods
add
fld
andl
pop
fcompl
add
cltd
add
add
pop
rcr
data16
add
add
rolb
rolb
add
add
fdivr
lret
add
jecxz
add
add
add
add
add
sarl
xchg
mov
gs
mov
lea
pop
add
push
lea
push
push
push
push
push
push
call
add
push
clc
add
add
adcb
add
lods
add
push
flds
fldcw
pop
add
push
cltd
mov
fiaddl
stc
mov
bnd
add
call
cwtl
clc
push
out
imul
add
movsb
mov
leave
movsl
add
mov
test
fwait
add
add
fisubrl
in
sarb
jl
ret
add
mov
lea
pop
add
call
push
push
lea
push
lea
push
push
call
add
jmp
imul
lods
popf
mov
add
mov
xchg
jbe
js
add
jno
add
loop
out
adcb
mov
jp
shlb
fcmovne
push
add
pop
add
push
add
add
call
idivl
mov
mov
adc
mov
push
push
lea
push
push
lea
push
lea
push
call
out
stos
movsb
add
ficoml
test
rolb
iret
add
push
add
add
out
add
add
jle
in
add
add
mov
add
add
jns
jns
add
jae
mov
mov
jne
add
mov
int
mov
test
add
mov
mov
jno
out
stos
mov
mov
loope
add
adcl
add
mov
lea
pop
xor
push
push
lea
push
lea
push
call
lcall
add
xchg
aam
mov
mov
add
fnstsw
add
ja
add
mov
cmpsb
add
mov
lret
rorl
add
cli
mov
and
lds
mulb
xchg
fcomps
outsl
fisubl
add
flds
add
xchg
mov
pop
add
push
push
xor
push
or
not
add
add
dec
sub
sub
pop
shl
pop
push
push
push
push
call
out
scas
fistpl
test
add
add
aad
push
icebp
add
les
je
insb
shrl
test
popf
push
add
add
mov
mov
imul
jns
add
add
pop
fwait
incb
add
add
add
pop
outsl
jns
mov
std
add
icebp
add
pop
add
cld
leave
pop
cwtl
push
test
lea
pop
pushl
call
mov
push
push
push
call
add
fs
mov
popa
pushf
mov
fbld
jae
mov
add
mov
add
mov
icebp
add
jecxz
add
cmpsb
pop
add
jbe
imul
add
les
ret
mov
fildl
loopne
push
push
add
call
xchg
mov
ret
add
iret
outsl
mov
lea
pop
movl
lea
push
push
lea
push
call
in
stc
add
add
add
push
cmc
popf
mov
mov
add
pop
cli
mov
stos
add
repnz
add
mov
imul
pop
push
add
xchg
ror
push
popf
scas
add
add
add
xchg
lahf
stos
lods
add
not
shlb
repnz
add
mov
lea
pop
pushl
pushl
push
lea
push
push
push
lea
push
call
rolb
add
lahf
add
jo
xchg
ja
in
stc
add
rcl
scas
mov
add
loope
mov
je
add
mov
sahf
loop
in
popl
xchg
add
arpl
jb
add
sahf
mov
data16
mov
pop
stos
add
shrl
add
add
add
mov
add
mul
add
pop
call
pushl
pushl
push
push
call
popf
add
add
add
mov
add
add
add
hlt
push
mov
jge
add
add
aam
push
push
add
mov
fldl
add
jecxz
mov
add
lcall
add
add
add
jb
scas
lods
ljmp
push
fadds
arpl
add
insb
add
xlat
test
mov
mov
jge
cld
lea
pop
call
push
push
push
sub
add
lea
add
inc
ror
sub
xor
ror
sub
pop
shr
inc
dec
sub
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
cmpb
cli
ret
mov
out
add
mov
jl
add
cmc
add
lcall
push
fcoms
add
fwait
xchg
roll
out
test
xchg
add
testl
test
jl
incb
push
add
add
fldln2
mov
cmc
push
jp
imul
in
add
rolb
ret
xchg
imul
icebp
add
sbbl
mov
lea
pop
pushl
call
push
push
push
add
push
push
pop
add
lea
sub
not
sub
pop
add
pop
push
push
push
push
lea
push
call
je
fsub
xchg
jecxz
add
cmpsl
xchg
aad
out
add
add
mov
in
fisttpl
mov
fiaddl
add
add
add
add
add
scas
add
cli
ljmp
data16
cld
xchg
js
add
add
sahf
xchg
jno
in
add
jmp
xchg
pop
stos
sahf
jle
sarl
bound
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
mov
add
fistl
scas
scas
xchg
add
add
std
add
pop
fisubs
and
add
mov
lret
cli
add
data16
addr16
pusha
in
add
imul
add
aad
enter
lods
add
add
add
fiaddl
push
lcall
push
add
add
aam
lret
jb
pop
add
in
cli
jle
cwtl
insb
out
insb
mov
lea
pop
push
call
mov
push
push
push
push
push
push
lea
push
lea
push
call
pop
mov
add
add
mov
push
out
add
insb
lcall
pop
mov
add
out
mov
jnp
mov
fnsave
fnsave
add
rcll
add
add
loope
frstor
rclb
into
test
fbld
cli
push
mov
lea
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
mov
pop
mov
fldt
add
test
push
out
add
loope
jns
xchg
xchg
xchg
loope
jge
add
adc
loopne
bound
xchg
lret
add
test
iret
push
pushf
into
add
rcrb
mov
mov
add
xchg
jbe
add
xchg
mov
hlt
jns
mov
add
add
mov
lea
pop
push
push
push
call
jno
jne
add
fdivl
add
push
add
mov
add
jp
jb
mov
pop
int3
pop
add
pop
ret
push
lods
add
js
clc
out
mov
mov
pop
mov
bnd
xchg
ljmp
add
add
mov
add
add
add
fcoms
lret
add
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
sti
push
add
push
mov
lock
mov
mov
movsl
add
push
imul
movsl
add
add
fdivs
popf
cmp
ret
jmp
add
xchg
jbe
filds
lods
mov
std
xchg
add
stos
lock
int3
cmc
stos
mov
cwtl
mov
add
andb
out
arpl
icebp
add
cwtl
loop
rorb
pop
add
push
push
call
mov
add
lcall
into
test
jno
loope
add
in
add
jae
mov
xchg
push
jmp
push
add
jb
add
imul
test
add
rol
add
jo
add
testl
add
add
call
xchg
clc
cmc
cmpsb
push
push
add
add
or
ret
add
add
push
push
push
call
scas
add
jae
sbbl
in
xorl
add
movb
fwait
mov
loope
call
add
lock
fs
add
add
pop
add
pop
xchg
jnp
mov
test
add
icebp
sahf
imul
stc
mov
add
add
testb
add
cmpsb
add
push
add
pop
add
cwtl
mov
data16
add
mov
push
push
push
lea
push
call
add
add
add
movsl
movsb
xchg
movsl
mov
lret
pop
cwtl
mov
lods
add
add
jbe
out
std
imul
jmp
pop
mov
xchg
push
add
xchg
add
add
addb
jnp
add
xchg
add
add
call
loope
mov
add
add
pop
xor
push
push
push
push
push
push
lea
push
push
push
call
add
xchg
fiaddl
hlt
xchg
std
out
add
arpl
add
fiadds
out
add
mov
add
call
add
in
fbstp
add
add
add
add
push
jp
add
add
mov
add
mov
lret
mov
add
add
add
add
add
icebp
add
movb
xchg
mov
and
add
push
push
lea
push
push
lea
push
push
push
push
call
out
iret
add
mov
add
add
stos
mov
add
jl
push
lock
loop
cld
mov
add
add
test
xchg
add
mov
ja
mov
xlat
jecxz
outsl
mov
call
xchg
push
mov
shl
mov
fistpl
stc
rcrl
int3
lea
pop
add
push
push
push
push
lea
push
push
push
push
call
push
lods
mov
outsl
imul
mov
lds
add
add
lahf
add
outsl
test
addb
mov
sti
data16
add
add
add
jns
pop
add
jbe
push
out
notl
push
imul
mov
shlb
bnd
add
stos
add
ja
add
add
in
mov
add
add
add
testb
mov
xor
push
push
push
call
add
mov
add
add
xchg
add
mov
pop
roll
stc
mov
scas
rcrb
add
testl
add
mov
stc
hlt
push
stos
mov
add
pop
gs
add
into
repnz
add
add
pop
add
mov
mov
mov
add
add
jae
subb
add
or
add
pop
mov
push
push
push
push
call
iret
jmp
add
aam
mov
int
add
add
fistpll
add
jp
pop
sti
popl
lods
pop
in
push
in
add
push
add
pop
int3
add
add
add
add
imul
in
into
mov
adcl
add
add
mov
add
push
test
lods
add
add
add
add
addr16
xor
push
push
push
call
jns
aam
popa
ljmp
add
add
add
jle
lahf
jecxz
enter
mov
add
add
ror
movb
add
add
mov
mov
mov
bnd
add
lods
out
int
add
jle
fs
loop
xchg
in
add
xchg
pushf
add
addb
mov
sti
lds
mov
lea
pop
add
push
push
push
push
push
lea
push
push
lea
push
push
push
call
push
cmpsb
pop
add
add
jle
aam
mov
add
gs
pop
mov
call
push
fst
xchg
jecxz
add
push
mov
out
add
loope
add
push
in
je
je
add
jne
add
add
mov
jns
int3
add
je
jecxz
add
add
jno
add
xchg
pop
push
mov
xor
push
push
lea
push
push
call
add
xchg
add
add
add
fcmovne
push
add
xlat
lods
mov
add
add
add
add
add
scas
add
add
filds
add
addr16
popa
pop
push
pusha
mov
cld
les
cli
movsl
enter
add
imul
jo
movl
pusha
adc
enter
push
push
call
mov
pushf
cmpsl
jnp
mov
add
add
lods
add
jl
cltd
add
nop
push
push
mov
addr16
lods
ret
ljmp
mov
add
add
add
rolb
add
fldl
int
cwtl
out
jge
mov
int
jb
out
test
add
test
js
add
jmp
insb
mov
add
add
pop
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
xlat
add
add
fiaddl
add
add
mov
mov
add
je
pop
aad
nop
add
pop
add
add
out
push
mov
roll
int3
add
in
lods
mov
sti
add
add
pop
add
and
mov
lods
aad
add
xchg
mov
add
add
addr16
add
in
pushf
jmp
push
cltd
pop
add
add
stos
add
cmpsb
aam
add
pop
mov
push
push
lea
push
lea
push
push
push
push
call
scas
add
add
scas
int
add
addb
add
pop
add
fidivs
data16
pop
pop
add
mov
lock
add
pop
mov
rcr
jno
add
xchg
movl
into
jbe
mov
add
mov
popa
add
clc
push
rorl
mov
aam
bound
add
add
push
push
lea
push
lea
push
call
add
add
add
add
add
les
add
add
add
pop
add
add
std
mov
mov
add
fsubrl
iret
aam
mov
lahf
mov
add
fadds
add
add
add
add
add
push
add
bound
add
lea
pop
add
mov
push
push
push
push
push
push
push
push
call
pop
add
add
add
add
iret
add
aam
popf
cmpsb
pop
add
add
add
pop
add
add
jno
jb
lret
add
add
add
add
add
add
mov
mov
add
add
jle
add
add
mov
mov
lock
sti
stos
push
je
xchg
imul
add
add
call
add
aad
test
mov
lea
pop
xor
push
push
push
lea
push
push
push
push
push
push
push
call
jmp
push
ret
int
add
mov
ror
add
push
mov
lcall
add
add
add
add
add
cltd
int3
push
mov
lret
fnsave
faddl
add
ror
rolb
xchg
add
stc
add
popl
mov
lea
pop
add
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
out
add
cmpsb
filds
int
loop
mov
enter
lock
add
xchg
loopne
jmp
addr16
push
add
add
add
aad
in
mov
jecxz
stos
test
movsb
cli
int
add
add
xchg
add
int
mov
add
add
in
add
lcall
mov
sarb
hlt
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
call
lret
cli
xchg
add
xchg
outsl
lods
scas
add
add
bound
mov
jge
bound
mov
sti
pop
add
jb
roll
faddl
scas
test
cmc
add
push
jecxz
pop
pop
mov
mov
add
add
rol
shrl
add
mov
jo
jb
loopne
add
mov
clc
sti
sahf
lock
mov
jmp
jo
add
mov
popa
sbb
adc
push
push
lea
push
push
lea
push
push
push
push
push
call
les
jb
add
add
mov
add
cmpsl
jmp
push
add
push
cmpsb
add
mov
cmpsl
stos
scas
add
cld
pushf
mov
insb
jge
fisubrs
pop
add
add
add
ja
out
add
add
pop
pushf
add
add
add
add
loop
cltd
mov
add
ret
cmc
push
not
faddp
fstpt
push
out
jnp
int3
lea
pop
add
push
push
push
push
push
lea
push
push
call
add
jecxz
mov
jecxz
add
add
add
rorb
mov
cmpsl
add
add
cwtl
pop
add
movl
pop
add
add
jp
into
in
repnz
pushf
push
add
repnz
add
pop
jp
les
adcl
push
add
lcall
les
dec
inc
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
jmp
mov
xchg
add
je
fstpl
mov
add
add
xchg
jns
int3
add
xchg
xchg
rolb
sarb
add
add
sti
add
add
add
add
test
rol
mov
test
add
add
add
add
add
nop
xchg
popa
lret
arpl
scas
add
fstps
add
add
pop
xor
push
push
push
push
push
call
push
scas
hlt
add
popl
je
les
add
fildll
mov
add
add
testb
add
gs
lcall
mov
push
shlb
add
add
add
add
add
rcll
jno
flds
sarl
add
lea
pop
add
add
push
push
lea
push
push
lea
push
lea
push
call
add
jl
add
push
add
lock
mov
test
mov
je
add
stos
add
arpl
add
push
fxch
jmp
add
lods
cmpsl
clc
out
out
add
bound
add
addl
shr
add
add
mov
jbe
mov
add
in
in
ficompl
add
mov
jge
int3
lea
pop
add
mov
push
push
sub
sub
push
sub
add
not
shr
add
sub
shr
pop
shr
lea
pop
push
lea
push
call
jae
add
pop
add
testb
push
push
pushf
push
imul
jae
push
jns
add
add
add
add
lret
jno
add
add
lret
mov
add
jmp
cmpsl
add
add
mov
shl
rol
movb
stc
imul
ret
add
or
jne
call
push
push
call
mov
fcmovne
mov
std
mov
je
mov
add
loopne
add
rcll
scas
icebp
pop
mov
arpl
add
mov
add
call
icebp
add
cmpsb
aam
mov
add
int
ffree
pop
stos
jp
add
xchg
jecxz
lock
add
add
xchg
lahf
add
fistpll
repnz
test
lea
pop
push
push
push
lea
dec
push
sub
add
sub
add
sub
lea
sub
xor
pop
not
pop
push
push
push
push
push
push
lea
push
push
push
call
test
out
mov
add
lcall
mov
sahf
add
add
gs
add
add
lea
outsl
aad
sahf
add
lret
push
ja
stc
mov
mov
rorl
add
mov
add
add
int3
mov
add
mov
clc
jge
add
add
add
mov
fstpt
jge
fisubl
test
andb
add
add
mov
lea
pop
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
jmp
add
add
xchg
push
outsl
xchg
clc
add
add
add
cld
push
add
les
push
add
mov
loop
add
testb
add
fnstcw
in
add
movl
lds
rolb
xchg
iret
mov
mov
add
mov
xor
movsl
mov
add
addb
movsl
jge
mov
lea
pop
call
push
push
lea
push
push
push
lea
push
push
lea
push
call
lea
pop
testl
add
movsl
fwait
imul
in
lahf
pop
sarl
xchg
imul
add
add
cmpsb
pop
mov
cmpsl
mov
push
pop
add
add
mov
mov
add
fidivs
add
lods
lods
fldt
jne
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
call
add
adcb
mov
add
mov
scas
mov
add
add
clc
push
jp
sahf
add
mov
add
xchg
push
add
add
mov
pop
add
call
add
push
add
ret
add
add
xchg
add
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
push
call
in
lcall
mov
push
add
add
xchg
movsl
add
std
mov
js
jp
mov
add
gs
add
mov
add
add
lret
gs
jmp
stos
call
jns
mov
icebp
add
add
add
into
addb
add
loopne
push
add
add
xchg
test
mov
loop
nop
mov
lea
pop
push
mov
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
xchg
mov
mov
add
add
stos
mov
add
xchg
fdiv
add
aam
lret
add
add
jbe
mov
add
pop
add
rclb
add
out
add
scas
add
add
add
loope
mov
add
cmc
scas
in
lds
fadds
add
mov
sub
pop
in
ret
add
add
push
push
push
push
push
lea
push
call
jns
bnd
add
rorl
int3
jne
mov
mov
test
add
lods
add
add
stos
cwtl
add
mov
enter
stos
shrb
add
loopne
mov
mov
cli
add
add
add
test
outsl
bound
add
mov
lea
pop
add
mov
push
push
push
push
lea
push
push
push
push
push
call
add
mov
nop
jmp
ljmp
add
insb
out
shlb
jno
add
add
add
add
add
sarl
mov
add
add
in
fldenv
mov
add
jbe
add
push
pop
add
cmpsb
call
jecxz
add
add
fisubrl
aam
bound
pop
xor
push
push
push
push
push
lea
push
call
mov
add
mov
pop
add
into
add
add
add
add
pop
add
xchg
add
jp
mov
jmp
xchg
jae
lds
add
pop
add
je
add
outsl
ja
subl
insb
leave
add
imul
mov
add
lock
mov
add
add
mov
lea
pop
add
push
shl
pop
add
push
push
push
push
push
push
lea
push
call
add
std
negb
push
add
mov
jmp
add
add
pop
mov
add
aam
repnz
add
scas
add
add
add
add
scas
mov
add
lret
in
mov
aad
mov
add
add
clc
push
mov
pusha
stc
jae
clc
add
add
jecxz
add
xchg
sti
out
flds
mov
in
out
out
sti
add
xchg
add
les
push
sub
pop
mov
xor
push
push
lea
push
push
call
add
mov
pop
mov
lcall
xchg
add
lods
jae
mov
xchg
add
call
add
add
add
pop
insb
roll
mov
bound
lods
into
pop
jge
xchg
cld
add
add
loope
test
xchg
add
std
pop
add
mov
addl
mov
xchg
jge
add
mov
lea
pop
add
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
mov
push
add
mov
aam
int
add
jl
loop
mov
leave
mov
add
xchg
loop
lret
jecxz
add
mov
add
lret
jmp
std
fmul
push
std
jno
mov
add
jns
add
movsb
pop
jo
add
bound
fwait
lahf
insb
div
push
loope
add
add
scas
jmp
into
popf
mov
pusha
and
or
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
call
enter
addb
mov
xchg
push
add
stos
test
add
add
add
insb
xchg
mov
add
add
mov
mov
add
mov
jno
add
addr16
jne
add
in
pop
icebp
add
fadds
loop
lds
arpl
pop
add
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
xchg
shl
jae
call
lods
stos
in
call
jnp
imul
push
push
mov
add
jge
cmp
out
lret
add
add
xchg
clc
flds
fwait
add
pop
push
loopne
popa
jmp
cmc
add
add
call
add
push
scas
mov
pusha
mov
xchg
add
fwait
mov
bound
pop
rep
mov
xor
push
dec
add
sub
inc
pop
or
je
mov
push
push
lea
push
push
push
push
push
call
mov
loopne
jp
add
outsl
lret
negb
add
mov
add
data16
add
addb
mov
jo
insb
mov
add
add
movl
xchg
add
lds
add
add
imulb
pop
add
bound
jb
add
mov
in
pusha
push
out
cmpsb
jecxz
int
add
fwait
mov
lea
pop
xor
push
push
lea
push
push
push
push
push
push
lea
push
push
call
incb
mov
shl
cli
pusha
test
pop
pushf
enter
jnp
lret
pop
cmpb
add
filds
add
cli
mov
add
add
add
add
in
leave
add
xchg
add
fiadds
popa
add
add
pushf
add
add
pop
in
add
add
mov
jae
enter
stc
mov
lea
pop
add
push
push
push
push
push
lea
push
push
call
movsl
jle
lcall
add
add
sarl
jb
add
lds
add
add
mov
push
je
loop
pop
add
ror
add
arpl
fildl
fstl
add
lock
fnstcw
mov
add
pop
add
add
xchg
push
scas
mov
out
rolb
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
add
out
rclb
jecxz
mov
add
add
xchg
lods
add
fiaddl
mov
mov
add
add
rcr
sti
icebp
lcall
add
add
add
cmpsl
mov
mov
pop
iret
push
lret
add
pop
cmc
xchg
aam
mov
fadd
mov
fmull
adc
push
push
lea
push
push
push
push
lea
push
call
add
lea
popl
data16
add
jnp
cltd
fstpt
add
movsl
push
ljmp
insb
pop
mov
add
add
xchg
add
add
add
mov
rolb
mov
add
out
fcmovb
add
popa
or
add
addr16
shl
xchg
add
push
add
add
mov
lea
pop
add
add
push
push
push
lea
push
lea
push
lea
push
push
call
into
add
add
xchg
add
ljmp
add
in
lds
add
popf
add
xchg
xchg
jmp
add
mov
lcall
jmp
in
fwait
add
add
outsl
xlat
ret
xchg
mov
pusha
add
js
add
add
add
lods
jmp
lret
xchg
add
xchg
lahf
add
add
mov
mov
popa
cmpsl
mov
lea
pop
add
push
add
add
sub
pop
push
mov
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
pop
scas
lods
sahf
jbe
xorl
add
mov
call
add
add
mov
pop
jbe
jnp
in
add
add
add
add
nop
push
push
jb
out
movb
add
add
rorl
add
add
add
xchg
add
jmp
in
cmc
add
stc
add
cwtl
add
lret
mov
lea
pop
xor
push
push
push
push
call
add
add
sahf
add
xchg
mov
jge
roll
add
cld
push
jl
nop
add
pop
stos
mov
add
add
mov
add
into
add
add
add
lods
fdivrl
cmpsb
rolw
pop
add
add
pop
lock
into
jle
jle
xchg
imul
add
xchg
sarl
add
add
push
not
mov
lea
pop
add
push
push
push
push
lea
push
push
push
call
xchg
rolb
roll
fcmovne
jecxz
pop
add
xchg
add
aad
jecxz
add
push
test
repnz
bnd
test
add
add
call
std
add
add
add
push
add
add
add
add
fsubr
fldl
outsl
xor
add
add
add
fwait
lock
mov
lea
pop
add
pop
push
lea
push
push
lea
push
push
push
call
add
shl
add
pop
add
cwtl
ja
and
jo
mov
mov
scas
lds
sahf
add
add
stc
add
andb
fisubl
mov
push
add
ret
ja
mov
out
mov
popl
add
add
pop
test
add
add
add
mov
sti
mov
add
roll
je
add
mov
pusha
cwtl
add
mov
lea
pop
rep
push
sub
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
scas
pop
out
push
add
add
mov
mov
add
add
lods
add
stc
into
mov
push
in
sti
add
mov
test
cmpl
add
xchg
nop
testl
nop
add
addb
icebp
int
testl
mov
add
std
arpl
fildl
je
add
imul
push
add
add
lods
add
mov
lea
pop
xor
push
push
push
push
push
push
push
push
lea
push
call
add
push
lds
add
add
roll
sti
add
add
mov
pop
add
mov
add
aad
add
mov
cld
add
test
add
pop
push
roll
add
mov
mov
push
faddl
adcl
add
pop
add
stc
add
xchg
add
add
add
lea
pop
add
push
push
push
call
add
add
add
loop
push
mov
push
jno
fstps
add
ficomps
pop
pop
pop
add
lret
add
add
add
fistps
pop
add
push
add
enter
add
add
ljmp
ljmp
mov
loopne
mov
pop
add
iret
push
movsb
mov
mov
or
or
je
mov
push
ror
sub
not
pop
add
add
rep
push
lea
push
push
call
fnstsw
add
add
add
xchg
testb
push
push
xlat
add
data16
lods
jne
add
int3
fwait
add
push
les
add
testb
add
pop
pop
clc
ljmp
pop
add
iret
je
in
add
add
mov
add
mov
outsl
add
add
test
lea
pop
pop
push
push
shr
sub
push
and
add
xor
sub
sub
add
sub
pop
lea
shl
pop
push
push
push
push
lea
push
push
push
push
push
call
add
add
movsb
add
ljmp
xchg
lock
xchg
jno
mov
jo
add
gs
add
cli
pop
popa
add
pop
push
add
add
movsl
icebp
mov
mov
imul
add
mov
test
add
scas
fadds
pop
add
add
fldenv
and
pop
mov
mov
push
xor
add
add
pop
mov
jmp
push
push
not
shl
ror
pop
mov
push
add
shr
pop
add
push
push
push
push
lea
push
push
push
push
push
push
push
push
call
faddl
fstpl
scas
add
add
add
xchg
nop
roll
cmpsb
add
add
add
xchg
jl
mov
xchg
xchg
add
mov
add
add
add
mov
jecxz
add
xchg
add
add
add
add
loop
fadds
add
mov
lea
pop
push
push
mov
push
sub
rol
pop
pop
push
sub
pop
pop
pop
pop
push
rol
sub
dec
pop
leave
push
dec
inc
pop
ret
push
lea
push
lea
push
call
ret
add
add
add
lret
add
add
add
add
mov
add
push
mov
leave
add
push
roll
add
add
int3
mov
jns
add
jmp
add
mov
jbe
add
xchg
mov
incb
add
jbe
xor
call
mov
lea
pop
push
push
push
push
push
lea
push
push
push
call
xchg
les
popf
add
jp
out
je
add
leave
pop
add
rcrl
jnp
flds
push
add
fimuls
hlt
add
add
add
add
roll
push
mov
js
add
xlat
cltd
fistps
data16
add
add
lock
fs
fstl
popl
data16
pop
aad
push
xchg
add
add
add
add
mov
lea
pop
mov
add
push
push
lea
push
lea
push
call
bnd
mov
push
jle
push
add
add
pop
aam
call
add
add
mov
nop
mov
jne
add
add
mov
add
add
jmp
mov
sahf
xchg
shlb
jbe
hlt
nop
add
out
pop
add
clc
std
insb
add
lcall
add
scas
pop
add
lea
popf
testl
lea
pop
push
push
push
not
pop
push
movl
push
push
push
lea
push
push
push
call
push
fiaddl
std
push
outsl
out
jmp
addr16
xlat
lret
mov
add
mov
xchg
add
mov
pop
add
jp
les
pop
mov
pop
repnz
jl
test
add
mov
add
gs
mov
clc
add
push
nop
test
lcall
pop
imul
sbb
inc
clc
incl
add
add
js
push
push
lea
push
push
push
push
push
push
call
loope
add
roll
add
jbe
cmpsl
call
stos
xchg
jb
rolb
add
loop
pop
jecxz
popf
push
add
mov
int
add
lret
add
add
jnp
roll
data16
mov
mov
add
in
mov
pusha
add
add
mov
push
fsubl
add
pop
mov
push
shr
pop
pop
push
sub
not
shr
pop
pop
push
sub
shr
pop
pop
push
push
push
push
push
push
lea
push
call
movl
lods
arpl
fs
mov
shl
fiadds
add
mov
add
aad
add
lahf
mov
test
movsl
insb
stc
add
insb
add
push
add
icebp
add
add
test
mov
xor
jmp
add
mov
loope
mov
lea
pop
pop
push
push
push
lea
push
push
call
add
add
add
add
add
out
push
nop
jge
jns
lcall
out
aad
push
jl
add
add
sub
add
cli
push
xchg
mov
add
cmpsl
add
in
int
popf
ror
add
add
add
lret
push
xchg
add
mov
mov
rcrl
add
xchg
pop
leave
push
sub
rol
not
shr
pop
ret
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
mov
clc
add
mov
je
add
add
add
aad
add
cltd
xchg
out
add
jo
add
jecxz
add
add
add
gs
fs
jno
imul
add
jl
add
add
call
mov
fwait
add
xchg
mov
add
int3
lea
pop
push
push
push
lea
push
push
push
push
push
push
call
add
lret
bound
lahf
add
mov
pushf
mov
sahf
cltd
add
add
add
addl
add
add
mov
push
add
ljmp
add
mov
mov
add
loopne
in
mov
add
add
add
jb
fcoms
add
mov
add
movsl
icebp
pusha
mov
lea
pop
mov
add
push
push
push
push
push
call
fiadds
add
sahf
add
add
pusha
jp
mov
add
add
movsl
add
lea
add
add
add
jmp
add
loope
lret
iret
in
frstor
pushf
push
mov
int
nop
fnsave
mov
push
push
imul
fsin
pushf
xchg
mov
push
add
movb
add
add
cli
add
add
jns
out
les
mov
lea
pop
push
push
shl
xor
shr
pop
push
push
push
push
add
shr
pop
testl
push
push
push
push
push
push
push
push
call
mov
add
out
add
add
out
add
mov
fwait
rolb
clc
pusha
add
mov
aad
jle
enter
add
rclb
into
pop
add
rcrl
hlt
mov
add
mov
jle
push
incb
subb
add
mov
fiaddl
testl
add
pop
addl
push
push
lea
push
push
push
push
call
fmull
jl
mov
xchg
push
imul
mov
add
mov
mov
mov
popl
cltd
add
stc
add
pop
stos
cmc
add
add
movb
fucomi
pop
add
out
fdivrs
fstl
fwait
mov
pop
add
mov
xchg
add
movsl
pushf
add
nop
add
stc
pop
jb
add
testl
lea
pop
push
call
push
add
sub
pop
mov
push
push
push
push
push
push
push
call
add
push
add
iret
add
add
add
add
ja
mov
add
je
lret
cwtl
add
cli
jne
pop
push
jp
jo
clc
mov
hlt
add
repnz
pop
loope
add
xchg
mov
roll
add
jbe
add
rolb
push
mov
push
add
addl
add
jno
loop
add
add
nop
mov
lea
pop
pushl
push
push
push
inc
rol
pop
call
push
dec
pop
cmpl
jne
push
not
pop
pop
push
push
lea
push
call
cmc
out
add
movsl
not
mov
icebp
add
andb
hlt
lods
add
jne
pop
add
in
add
add
add
popl
add
shll
test
aam
pop
mov
in
add
in
shr
lret
mov
testl
cltd
mov
add
gs
fsubrp
mov
js
mov
push
add
pop
pop
pop
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
mov
add
add
add
add
pusha
add
pop
les
add
add
add
xchg
out
jge
add
int
add
xchg
mov
jge
add
add
add
rolb
les
popf
mov
add
stos
fstpl
add
clc
test
xchg
add
add
sahf
fcmovnbe
aam
jns
xchg
cmc
push
roll
sbbb
loop
add
and
leave
ret
push
shl
add
rol
dec
pop
push
mov
add
push
sub
pop
push
push
lea
push
push
push
push
push
push
push
call
mov
xchg
mov
add
add
add
testb
nop
mov
add
mov
pushf
add
lahf
add
sar
mov
test
in
ret
add
lret
xacquire
mov
stc
add
add
jecxz
add
out
mov
xchg
sti
les
fs
popf
mov
jns
add
fildl
push
jl
add
add
bound
pop
push
push
not
pop
push
push
push
push
push
push
push
lea
push
push
call
xchg
rolb
add
add
add
add
add
stos
add
add
aam
add
test
add
xchg
add
mov
add
mov
add
fdivs
add
xchg
fldl
into
jmp
ja
imul
pop
push
add
xchg
test
fiadds
int
into
test
add
addb
add
mov
lea
pop
movl
push
rol
shr
shr
pop
push
push
shr
xor
add
pop
call
push
call
push
not
pop
subl
cmpl
jne
pop
push
push
push
call
xchg
mov
sahf
mov
add
push
add
roll
fwait
enter
add
add
adcl
add
mov
jmp
xorl
stc
aam
rcrl
add
add
ret
into
pushf
aad
ja
loopne
cld
in
add
imul
push
cmpsb
les
add
add
andb
testb
test
add
pop
pop
push
shl
sub
pop
pop
push
sub
pop
pop
leave
ret
push
push
push
push
call
les
add
add
add
test
add
jo
lods
cltd
add
test
pop
sti
add
add
rorl
cld
add
popf
fadds
mov
add
fwait
popf
add
loopne
nop
add
test
add
lcall
add
add
mov
push
add
stos
add
add
out
add
int3
lea
pop
push
mov
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
add
andb
add
xchg
add
data16
add
pop
mov
mov
out
lret
add
into
cli
add
xchg
stc
jo
pop
add
add
add
lea
ret
icebp
mov
fcoms
test
add
out
pop
stc
sarb
add
xorl
pop
push
out
add
je
add
add
int3
lea
pop
add
push
pop
push
push
push
dec
add
rol
pop
push
push
sub
add
lea
pop
push
mov
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
aad
add
add
add
icebp
loopne
cwtl
pop
je
sti
add
mov
add
addb
lods
add
arpl
mov
add
add
loope
add
push
aad
sahf
add
jmp
js
add
add
test
je
mov
add
cmpsl
cwtl
nop
fcompl
flds
scas
add
fcmovnu
add
push
mov
add
fiaddl
mov
mov
add
int3
lea
pop
sub
mov
shr
push
pop
add
push
shl
lea
pop
mov
push
lea
push
push
call
ret
mov
add
lods
fcoms
out
add
add
movsl
add
jno
add
lret
add
aad
jl
add
add
add
data16
add
xchg
andb
call
add
leave
add
add
lret
data16
andb
add
clc
xchg
add
add
cmc
loopne
add
mov
add
mov
lea
pop
mov
push
sub
pop
add
push
lea
push
call
jge
xchg
add
add
stc
add
mov
fsubrs
add
add
aam
add
xchg
mov
xchg
ret
add
lock
add
add
add
add
scas
add
cmpsb
add
add
pop
cld
leave
jns
mov
mov
addl
out
xchg
out
out
popf
cwtl
cwtl
mov
cli
add
pop
add
push
lea
push
push
lea
push
push
push
call
add
add
outsl
lcall
jbe
add
push
add
add
add
addr16
add
rolb
jge
movsb
mov
clc
pop
sbbb
push
add
xchg
add
std
mov
js
add
add
add
pop
into
je
adcl
jo
add
popf
div
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
call
mov
out
mov
jle
add
add
add
leavew
mov
add
add
loopne
lods
mov
movsb
add
add
push
cli
add
mov
cld
mov
fldt
int
faddl
test
fistpl
jne
add
add
add
add
add
add
neg
out
add
add
insb
roll
mov
lock
arpl
xchg
add
pop
mov
push
sub
pop
cmp
jne
cmp
jne
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
addb
push
pop
add
xchg
mov
clc
jle
xlat
lods
pop
test
shl
jno
mov
jns
fisttpll
in
jns
imul
add
ljmp
mov
add
add
add
mov
xchg
stos
addl
stos
xchg
icebp
mov
std
add
pop
mov
movl
jmp
push
push
call
pusha
in
pusha
sti
loop
add
mov
pop
pop
add
xchg
add
mov
add
jmp
mov
add
jne
out
jne
add
flds
jl
incb
add
jl
mov
add
add
add
test
jns
add
add
loope
test
add
lock
icebp
add
add
add
add
add
mov
lea
pop
mov
push
lea
lea
pop
mov
sub
jne
push
not
dec
pop
mov
push
lea
push
lea
push
push
call
jbe
add
lret
in
cmpsb
add
test
add
jo
pop
fmuls
add
push
xchg
cmpsl
add
push
mov
add
add
pop
jmp
imul
lret
add
popa
add
int3
arpl
mov
arpl
push
mov
fdivl
add
adc
add
add
jmp
mov
push
push
push
lea
push
call
add
add
push
push
add
push
pop
testb
flds
add
add
bound
push
fwait
add
jmp
add
jecxz
movsb
jne
add
nop
insb
add
push
mov
fs
add
mov
in
jle
add
sahf
insb
mov
ret
std
add
mov
add
insb
jno
add
cmpb
add
aad
loopne
aam
bound
pop
mov
push
push
call
mov
add
rorl
add
mov
add
test
loope
jmp
mov
push
mov
fwait
add
shrl
mov
cmc
pop
addr16
mov
loopne
roll
subb
leave
lret
mov
add
scas
shrl
mov
lea
pop
cmp
jne
mov
push
push
push
push
push
call
add
lods
cwtl
imul
add
add
add
movsl
test
add
add
clc
idivl
add
xlat
loope
lcall
mov
xchg
mov
add
add
add
test
add
add
add
add
rol
mov
add
add
jns
xlat
push
test
pop
mov
push
in
add
pusha
adc
movl
push
shl
dec
inc
pop
jmp
mov
cmpw
jne
push
lea
push
push
push
lea
push
push
push
call
add
add
nop
add
add
mov
add
add
xchg
bound
cmc
sarl
jle
push
jp
add
data16
add
pop
add
add
xchg
add
mov
icebp
lods
add
jge
jbe
jl
pop
add
std
popl
pop
jbe
scas
add
cltd
add
aam
bound
mov
push
inc
ror
sub
pop
movl
jmp
pushl
push
inc
shl
pop
pop
mov
push
dec
pop
mov
push
sub
pop
mov
push
push
add
push
push
pop
add
sub
shl
pop
add
pop
push
push
lea
push
call
fiadds
mov
pop
push
testb
adc
push
rcll
mov
mov
add
add
add
sahf
mov
add
je
imul
stos
fldenv
aam
hlt
jnp
add
add
jle
mov
fildl
filds
push
add
add
pop
cwtl
mov
les
or
add
push
rol
inc
pop
cmpl
je
push
push
add
add
add
push
or
inc
add
xor
sub
shr
shl
pop
rol
inc
ror
pop
push
not
sub
pop
push
call
push
push
push
call
pop
pop
pop
lea
hlt
add
add
roll
add
add
add
rorl
push
add
push
sarl
jle
pop
in
add
add
movsb
aam
lcall
mov
imul
mov
pop
nop
add
jle
pop
mov
loop
add
std
cmp
in
lds
cld
lea
pop
cmpl
je
push
push
ror
push
xor
add
add
add
sub
sub
add
not
pop
shr
pop
push
not
pop
push
call
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
mov
cli
push
insb
sahf
add
call
enter
clc
iret
fsts
std
mov
lcall
mov
add
add
add
imul
add
shl
add
js
xchg
add
shrl
add
in
lea
add
jno
mov
xor
add
add
pusha
add
add
cltd
scas
rcrb
les
js
int3
fldz
ret
mov
js
roll
jl
add
rclb
out
add
add
add
sub
xor
pop
inc
not
dec
pop
push
push
push
lea
push
push
push
lea
push
call
add
add
mov
jp
test
pushf
add
les
out
jmp
pop
hlt
pop
add
jbe
roll
add
lods
xchg
add
pusha
std
mov
add
add
repnz
scas
lock
std
add
add
call
mov
add
icebp
add
mov
lea
pop
push
push
push
push
push
push
push
call
add
add
repnz
add
pop
xchg
mov
add
add
xchg
out
mov
bnd
nop
add
mov
mov
into
add
mov
add
mov
movb
xchg
add
add
sar
add
call
sti
aad
add
add
sahf
test
loope
add
in
mov
add
add
cld
lea
pop
call
cmpl
je
push
push
xor
push
push
pop
add
shr
sub
dec
pop
sub
sub
dec
pop
push
not
add
pop
push
call
cmpl
je
push
push
ror
ror
push
sub
add
rol
shr
shr
inc
sub
pop
rol
dec
pop
push
sub
shl
sub
pop
push
push
push
lea
push
push
push
push
push
call
pop
mov
outsl
rcl
add
xchg
add
add
mov
add
add
out
mov
jnp
test
stc
cmc
add
add
xlat
out
add
add
add
push
xlat
ja
shrl
add
add
jnp
popf
jp
xchg
add
pop
stc
add
outsl
add
add
cwtl
add
xchg
mov
xchg
push
fs
add
add
add
mov
lea
pop
call
cmpl
je
push
push
sub
add
not
xor
push
and
add
inc
sub
add
sub
lea
not
pop
rol
pop
push
push
push
lea
push
lea
push
push
push
call
mov
hlt
push
stos
add
add
into
push
add
add
jp
add
add
addb
aad
cmpsl
repnz
jno
add
fcmovb
faddl
add
xchg
sub
xchg
pop
jne
add
pop
lcall
push
push
add
rcrb
pop
loop
push
fildl
push
add
mov
shr
add
call
aam
mov
addr16
push
call
cmpl
je
push
push
push
or
not
add
lea
not
sub
xor
lea
pop
add
not
pop
push
sub
dec
pop
push
push
add
lea
shr
pop
call
push
push
push
call
out
add
add
sahf
pop
shr
loop
mov
add
aad
push
add
add
imul
add
add
test
add
ja
add
pop
mov
add
iret
push
clc
mov
mov
cltd
add
add
add
add
int
addr16
pop
outsl
cli
movsl
outsl
clc
outsl
add
add
pop
cmpl
je
push
push
ror
xor
not
push
or
inc
add
shl
sub
rol
ror
pop
sub
shl
pop
push
push
call
sarb
fcompl
ret
ja
lret
jnp
mov
add
test
ja
in
jne
jecxz
add
in
add
call
mov
lods
hlt
add
add
outsl
aam
mov
mov
test
loop
add
add
lret
add
decb
fs
add
add
add
pop
push
push
push
lea
push
push
push
push
call
test
add
idivb
jne
mov
push
add
test
add
jae
call
add
iret
data16
mov
fldt
add
add
fs
jb
int
add
add
mov
add
add
jle
add
add
jl
mov
les
jecxz
add
cmpl
je
push
push
inc
ror
push
or
inc
add
sub
sub
sub
ror
pop
pop
push
push
push
push
call
jne
add
bound
add
mov
add
stc
jle
add
sar
add
mov
mov
stos
mov
cmpsl
mov
push
add
jbe
add
pop
add
add
add
add
out
jb
jecxz
shlb
mov
nop
push
mov
mov
insb
add
mov
lea
pop
push
push
lea
pop
call
cmpl
je
push
push
add
push
and
add
shr
xor
not
ror
sub
not
xor
add
pop
rol
pop
push
shl
not
xor
pop
push
call
cmpl
je
push
push
dec
inc
xor
push
xor
add
add
sub
sub
not
shl
pop
sub
pop
push
dec
rol
rol
pop
push
push
xor
shr
pop
call
cmpl
je
push
push
shr
add
sub
push
push
pop
add
not
ror
sub
sub
sub
shr
pop
shl
dec
rol
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
out
add
scas
add
xchg
add
add
leave
push
icebp
leave
push
jnp
arpl
les
add
out
add
fwait
test
pushf
sti
add
scas
push
enter
push
pusha
mov
stos
arpl
xchg
add
add
xchg
loope
imulb
mov
nop
divl
push
xchg
lea
test
scas
shl
in
jb
jno
fmull
push
shl
rol
xor
pop
call
cmpl
jne
mov
push
push
lea
push
push
call
add
shll
add
xchg
add
add
add
add
rcrl
imul
jo
mov
testl
add
mov
lock
mov
ljmp
add
imul
rcrl
add
add
add
add
add
adc
add
add
add
pop
jmp
push
push
push
call
jno
add
xchg
push
add
fidivs
add
call
outsl
mov
add
add
mov
mov
add
cmpsb
cmc
lock
cwtl
add
test
jle
pop
mov
add
add
add
add
add
add
stos
stc
rolb
loopne
add
pop
mov
lea
pop
xor
pop
pop
push
not
pop
pop
pop
leave
push
dec
pop
ret
push
mov
push
not
pop
add
cmpl
jne
push
push
not
sub
push
or
not
add
not
sub
dec
ror
pop
rol
lea
add
pop
push
ror
pop
pushl
push
add
sub
pop
call
push
push
push
push
push
call
add
add
fwait
lcall
out
add
repnz
out
rolb
scas
mov
test
push
mull
jl
add
aam
aam
hlt
push
add
lods
int3
in
add
pop
in
jl
add
jne
js
scas
add
add
mov
add
lods
mov
data16
push
call
jmp
push
sub
pop
cmpl
je
cmpl
jne
leave
push
add
rol
rol
pop
add
push
lea
push
push
lea
push
lea
push
push
call
mov
push
add
popa
add
sahf
rolb
add
shll
add
lds
icebp
add
not
jecxz
add
mov
add
add
mov
mov
in
mov
add
outsl
in
loop
add
int
add
fs
add
lret
xchg
add
jno
add
iret
test
sbb
pop
pop
push
push
push
push
call
fwait
add
mov
add
nop
add
add
test
addb
aad
movsb
shrl
add
add
pop
add
add
jecxz
add
add
add
pop
ljmp
pop
fldl
add
popf
add
xchg
cwtl
lock
mov
add
insb
add
add
lret
mov
lea
pop
pop
push
pop
leave
add
ret
push
dec
add
shl
pop
jmp
cmpl
jne
push
push
dec
dec
push
and
add
lea
sub
add
pop
sub
ror
pop
push
lea
push
lea
push
push
call
add
decb
jl
mov
movl
add
stos
cld
jne
lds
pop
add
out
stos
jno
add
add
jno
add
leave
aam
imul
add
add
xchg
add
add
add
mov
ja
loopne
add
push
mov
add
push
add
mov
xchg
mov
lea
pop
pushl
push
shr
pop
call
push
dec
lea
pop
push
push
push
push
push
push
push
push
push
lea
push
call
mov
push
add
mov
bound
add
mov
add
mov
cltd
add
add
cmc
add
lock
bound
xchg
add
add
add
xchg
js
out
movsl
data16
add
mov
add
add
mov
ljmp
repnz
xchg
add
push
fwait
mov
in
add
mov
lods
add
pop
call
jmp
cmpl
jne
push
add
add
not
pop
mov
push
add
shl
lea
dec
pop
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
les
leave
add
lds
add
cli
je
addr16
test
subb
add
add
icebp
test
add
add
mov
popa
fidivrl
add
cmc
mov
add
push
into
add
add
aad
js
pop
rcll
out
add
pushf
xchg
add
in
push
add
pop
jmp
push
push
dec
pop
pop
dec
jne
call
push
add
pop
jmp
push
add
sub
pop
call
push
push
push
sub
add
xor
sub
sub
rol
pop
sub
add
pop
push
shl
pop
pushl
call
push
push
lea
pop
call
mov
push
push
push
push
push
push
push
call
add
int3
add
push
mov
notl
pop
mov
add
add
in
push
test
add
outsl
add
addb
add
add
add
add
mov
add
add
add
add
cld
lds
add
mov
add
std
add
cmpsb
mov
xchg
add
mov
cmpsl
add
bound
lea
push
push
lea
dec
push
or
inc
add
dec
not
shr
sub
add
not
pop
sub
sub
pop
pushl
push
shr
pop
call
push
call
push
push
add
sub
push
push
pop
add
add
ror
sub
sub
add
pop
add
sub
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
jns
push
sti
mov
test
add
pop
faddl
add
jmp
ret
data16
fnstenv
repnz
je
mov
add
push
add
fcoml
mov
mov
add
xlat
add
jne
add
fiadds
add
pusha
in
add
bound
pop
pushl
push
lea
sub
shr
shl
pop
call
call
mov
push
lea
push
call
mov
add
mov
addl
sti
mov
add
pop
adc
call
aam
add
add
add
add
jbe
enter
out
pop
add
push
enter
mov
add
arpl
mov
jle
mov
push
jnp
add
scas
loop
fadd
pop
pop
mov
lea
pop
lea
push
push
add
push
sub
add
xor
rol
add
add
sub
shl
pop
add
pop
push
shr
pop
pushl
push
rol
dec
pop
call
lea
push
xor
sub
pop
push
push
push
push
call
mov
add
data16
lret
mov
cwtl
add
add
sar
add
add
mov
jb
ret
mov
ret
mov
jecxz
add
add
call
sbb
jno
add
loope
add
add
add
add
fs
mov
jmp
mov
add
in
mov
jge
incb
add
push
std
fs
lea
pop
push
push
not
pop
pushl
push
push
sub
shl
push
sub
add
rol
add
sub
inc
ror
pop
sub
pop
push
xor
pop
push
call
push
push
rol
push
or
not
add
sub
sub
lea
pop
sub
add
pop
push
shl
lea
pop
pushl
call
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
addb
add
add
add
push
jmp
mov
mov
fldl
mov
add
pop
lret
add
out
add
jae
mov
cmpsb
add
jbe
add
jae
mov
mov
add
add
add
add
add
add
add
add
add
xchg
ja
mov
pop
call
push
push
rol
push
and
add
ror
rol
sub
sub
pop
shl
pop
pushl
push
xor
pop
call
call
jmp
push
add
pop
pushl
mov
jmp
push
push
xor
shl
push
xor
add
dec
sub
sub
dec
pop
shl
lea
pop
push
xor
inc
pop
pushl
push
push
lea
push
call
divb
std
xchg
mov
add
mov
add
jae
jp
andl
cmpsl
xorl
lret
add
lds
add
test
jno
fbld
lahf
adcb
add
xchg
icebp
testb
ja
add
pop
push
test
scas
out
add
add
gs
add
add
loope
fmull
adcb
add
push
shl
pop
call
push
push
sub
inc
push
and
add
inc
shr
xor
sub
sub
pop
xor
add
pop
pushl
push
push
push
lea
push
call
add
lcall
sbb
push
ret
xchg
fadds
add
add
xchg
add
lock
add
mov
call
xchg
add
data16
add
add
clc
into
cld
mov
lock
mov
shl
in
pop
sbbb
add
add
rolb
jmp
pop
cmpsl
add
les
lea
pop
call
push
call
push
xor
pop
leave
push
shl
pop
add
pop
pop
push
push
push
push
lea
push
call
aad
add
enter
sahf
out
mov
mov
add
in
push
lret
fcmovbe
shrl
adcl
push
test
add
add
jb
pusha
stc
stos
lds
add
add
mov
lds
out
push
fisubl
push
add
mov
mov
outsl
add
add
push
add
pop
pop
push
shr
dec
not
pop
pop
push
pop
leave
add
ret
push
add
dec
pop
leave
push
lea
add
pop
ret
push
push
rol
rol
pop
mov
cmpl
jne
mov
push
lea
pop
jmp
push
push
push
push
lea
push
push
call
ret
imul
xchg
cmpsl
xchg
nop
add
cli
js
pop
add
enter
add
addr16
jge
outsl
add
fldt
add
add
jge
mov
add
add
ja
add
add
nop
add
pusha
add
fstp
lret
mov
lea
pop
mov
push
push
push
push
push
lea
push
call
add
sti
push
add
add
add
xchg
add
add
rolb
add
add
popl
add
add
enter
mov
add
mov
movb
imul
xchg
fwait
add
add
mov
int
xchg
jb
cmc
xchg
clc
stc
mov
add
pop
push
test
orl
add
nop
xchg
test
int
les
and
push
push
push
lea
push
push
push
call
stc
add
add
add
pop
mov
leave
jb
js
add
add
fnsave
pop
imull
add
fcoml
add
add
add
imul
add
cld
add
shl
add
pusha
imul
mov
hlt
enter
addb
mov
fwait
add
into
add
addr16
add
pop
xor
xor
add
push
add
pop
xor
dec
sub
push
sub
xor
shr
pop
jmp
push
push
push
lea
push
push
call
out
addb
xchg
mov
stos
gs
add
add
cmc
movb
jl
test
fsincos
popf
add
jp
addr16
add
addb
stc
pop
ja
add
mov
add
lcall
xchg
roll
flds
into
pop
add
aad
out
add
sti
add
add
movsl
cli
int
loop
push
into
add
add
pop
sub
pushl
push
inc
lea
pop
pop
push
push
push
push
push
push
lea
push
push
call
mov
add
cwtl
nop
add
jnp
imul
push
stc
xchg
mov
pop
add
add
add
mov
push
loop
xchg
add
push
jns
mov
in
js
mov
pushf
fs
cwtl
add
xchg
mov
std
jo
add
pushf
add
outsl
repnz
fs
add
mov
shrb
aam
bound
pop
sub
cmp
jne
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
test
add
jno
add
add
clc
add
lea
add
mov
add
add
jl
rolb
cli
jno
add
add
add
add
mov
arpl
in
mov
add
add
mov
test
add
add
add
add
add
shll
mov
lea
pop
mov
lea
push
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
lcall
add
add
add
iret
add
add
push
icebp
ret
data16
cmpb
xchg
add
xchg
jmp
fstps
jne
mov
mov
add
movsb
mov
cmpsl
popa
rcrl
mov
in
je
int
ljmp
int3
lea
pop
sub
push
push
lea
push
push
push
push
call
mov
add
push
ljmp
push
imul
add
add
add
add
jle
test
sarb
add
mov
pop
imul
add
cld
shl
add
mov
xchg
jb
add
add
mov
xchg
in
fwait
add
sti
add
leave
add
lcall
add
pop
add
add
aam
mov
cld
lea
pop
mov
push
push
push
push
lea
push
lea
push
call
add
mov
out
sar
nop
add
ljmp
mov
add
add
add
enter
call
add
outsl
add
addb
mov
push
add
jno
add
add
arpl
jbe
je
flds
ficoml
sahf
xchg
add
pop
shr
push
add
xor
pop
add
sub
pushl
push
sub
not
sub
pop
pop
shr
push
push
lea
push
push
push
push
push
push
push
call
clc
rcl
add
add
add
fdiv
lea
leave
iret
out
fisubrs
add
mov
add
mov
jno
mov
add
add
add
add
push
ret
add
push
add
mov
xchg
outsl
aam
jb
sti
add
jno
mov
call
add
add
add
ljmp
in
fwait
mov
lea
pop
and
sub
cmp
jne
push
inc
add
pop
leave
ret
push
push
call
in
push
leave
out
test
add
add
ja
add
stos
sahf
sti
mov
int
add
add
in
add
mov
add
shrl
add
js
add
mov
add
push
add
add
fildll
fbld
add
popf
add
add
add
add
add
cld
lea
pop
push
push
add
inc
pop
mov
add
push
push
xor
sub
pop
push
push
push
push
shr
sub
sub
pop
push
push
push
call
add
add
xchg
add
add
cmpsl
add
popf
test
mov
in
fiaddl
jle
mov
add
imul
add
add
jae
fists
add
add
add
enter
add
nop
add
lret
add
mov
add
jb
jns
mov
add
in
xchg
fwait
add
pop
mov
push
push
push
push
lea
push
push
lea
push
call
add
jb
pusha
add
lahf
stos
out
add
add
mov
adcb
add
cltd
int3
push
addr16
add
mov
mov
fstpl
jbe
add
add
loopne
add
add
mov
jo
std
xchg
add
pop
add
lds
add
negl
xchg
lahf
add
add
mov
add
mov
mov
arpl
lea
push
sub
shl
pop
sub
mov
push
xor
shl
not
pop
shr
push
inc
pop
add
mov
push
dec
xor
ror
shl
pop
add
push
dec
pop
mov
push
push
call
cmc
add
sbbl
add
mov
mov
add
lods
repnz
xchg
add
add
cmpsb
add
pop
lea
movsl
stc
mov
bound
mov
jge
mov
mov
push
nop
add
in
movsl
add
ja
add
add
add
add
add
add
add
add
pop
add
push
push
push
lea
push
push
push
push
call
push
add
add
add
les
cmpsb
lods
xchg
add
add
xchg
add
out
add
add
aad
mov
push
add
addl
out
add
add
mov
mov
add
mov
mov
add
add
add
rcr
insb
in
mov
mov
add
add
mov
fdivl
les
notb
aad
mov
push
push
push
push
lea
push
push
push
call
add
add
faddl
add
jne
add
arpl
mov
call
add
add
add
add
hlt
cltd
test
add
lret
jle
int3
pop
xlat
pop
popa
add
movsb
add
flds
mov
out
xchg
add
pop
add
roll
xchg
mov
add
add
pop
and
call
push
push
call
loopne
aam
jbe
add
xlat
in
jmp
nop
pop
jb
add
add
lret
movsb
loopne
add
addb
jmp
jle
loopne
mov
add
mov
hlt
add
insb
pop
test
lock
add
add
loope
xorb
hlt
push
ret
add
add
add
pop
lds
scas
add
pop
add
push
lea
push
call
ret
push
ret
add
mov
add
lock
orl
iret
loopne
lcall
xchg
add
jge
lods
popf
loopne
xchg
push
add
add
mov
mov
popf
add
add
out
movsl
lahf
add
mov
push
add
add
xchg
add
ljmp
roll
ret
bound
loope
add
testl
je
push
push
call
repnz
pop
in
add
add
out
add
add
add
into
int3
arpl
mov
sti
cli
add
add
mov
add
push
add
mov
mov
movsb
loop
in
movsb
push
add
cmpsb
sarb
add
cltd
add
test
add
lods
add
add
add
add
add
hlt
xchg
sahf
add
mov
data16
add
jne
testb
add
push
push
push
call
push
add
add
xchg
xchg
add
add
lret
lcall
out
add
mov
xchg
add
add
cmc
mov
addl
je
test
jns
mov
jnp
clc
add
add
clc
add
addb
add
jb
loopne
add
add
add
fs
add
add
add
mov
mov
test
pop
cmpl
jne
xor
push
push
lea
push
push
lea
push
push
lea
push
call
fcmovne
bound
add
in
push
stos
add
lret
add
jnp
into
cltd
arpl
add
stos
lock
rolb
push
movsl
mov
add
add
add
lret
hlt
stc
push
mov
add
add
add
loope
shl
jle
jle
add
imul
cmpsl
jl
add
add
adc
add
mov
lea
pop
pop
pop
push
push
push
push
push
lea
push
push
push
call
add
stos
stc
push
xchg
mov
shlb
lret
add
add
iret
mov
rolb
add
lock
add
out
xchg
jl
add
jbe
add
add
add
push
push
jno
add
mov
add
pop
pushf
int3
add
add
add
insb
add
add
jnp
mov
lea
pop
pop
push
ror
dec
rol
pop
pop
push
push
push
push
push
push
push
push
call
clc
mov
sarb
in
repnz
xchg
add
add
add
rcl
mov
add
hlt
rclb
cld
add
jle
mov
add
push
test
jo
mov
popl
add
and
lea
add
addl
xchg
add
jmp
add
scas
add
add
add
pop
mov
add
add
pop
pop
push
lea
push
lea
push
push
lea
push
call
icebp
hlt
jnp
cmc
clc
mov
push
mov
add
add
add
js
add
push
add
clc
xchg
mov
mov
lods
lcall
mov
call
rolb
add
add
or
out
add
push
gs
flds
add
mov
add
pop
mov
faddl
out
je
mov
add
mov
lea
pop
leave
push
sub
add
dec
add
pop
ret
mov
push
pop
add
push
not
sub
pop
push
push
not
shl
not
pop
push
pop
push
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
call
lcall
add
loope
andb
add
stos
scas
cli
gs
add
scas
add
add
jnp
fiadds
add
cli
adcl
add
push
not
add
mov
fiadds
add
aam
pop
iret
jmp
jnp
mov
out
add
in
xchg
mov
call
xchg
mov
mov
add
add
add
lcall
sbb
mov
push
add
pop
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
cwtl
out
add
cmpsl
add
add
push
add
jae
mov
filds
push
add
fdiv
fsubrl
mov
mov
movsl
add
add
add
jge
jl
add
mov
push
out
mov
cli
mov
xchg
jno
add
jmp
push
loop
add
pop
fxch
add
add
add
mov
mov
lea
pop
call
xor
pop
push
push
call
lcall
jno
pop
test
movsl
mov
add
add
add
jmp
fisttpl
je
cli
add
add
add
call
loopne
repnz
call
lcall
int3
add
add
rcrl
add
mov
lea
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
push
mov
add
iret
std
int3
out
add
add
add
add
cmpsl
add
in
std
movl
add
add
leave
add
add
addb
mov
add
pop
mov
add
xchg
xchg
add
stos
add
clc
fsubs
iret
flds
mov
test
add
add
add
pop
pop
pop
push
lea
add
shr
pop
pop
leave
push
lea
sub
ror
pop
ret
push
push
shr
pop
mov
add
push
push
push
push
push
lea
push
push
push
push
call
sahf
mov
add
jle
add
push
add
jb
mov
add
mov
scas
or
push
movsl
add
sarl
add
cmpsb
add
lods
add
add
add
add
fwait
cmc
add
jl
push
test
pop
les
incb
mov
add
add
push
add
mov
mov
mov
lea
pop
push
push
sub
pop
push
push
mov
push
push
push
push
call
iret
jbe
arpl
mov
add
add
in
movl
add
mov
add
push
add
in
add
loop
lret
add
add
fiadds
add
add
mov
jle
jge
aad
add
mov
scas
add
add
jns
imul
mov
jb
add
imul
aad
testb
add
lea
pop
push
pop
lea
push
dec
add
pop
sub
push
push
lea
push
call
mov
lcall
add
lcall
js
iret
test
nop
mov
vpcmpeqw
xchg
pop
cld
jno
xlat
mov
pushf
in
add
xchg
mov
not
addr16
enter
fs
stos
leave
jmp
bound
xchg
mov
add
add
mov
add
add
add
mov
add
pusha
or
mov
shr
push
xor
not
ror
pop
add
push
inc
pop
mov
add
pushl
push
rol
rol
shl
pop
popl
mov
add
push
push
push
push
push
push
push
lea
push
call
mov
xlat
cmc
xchg
in
cltd
rolb
loop
imul
add
js
mov
add
lret
add
stc
out
add
add
add
add
lea
add
fnstenv
test
add
andl
add
in
enter
gs
ffree
js
add
add
addl
outsl
add
mov
add
ja
fmull
testb
push
push
push
push
lea
push
call
add
pusha
mov
add
mov
add
test
mov
test
les
push
movsl
fcom
bound
push
jnp
xlat
add
pusha
int3
add
not
ret
add
add
je
out
clc
pop
add
mulb
loopne
pushf
add
pop
mov
subl
cmc
mov
jge
mov
mov
lea
pop
add
xor
push
lea
push
push
push
push
call
lods
add
pop
mov
jp
xorl
nop
ficoml
add
push
sahf
add
jno
add
incb
add
jnp
mov
cmpsb
call
mov
into
nop
repnz
push
stc
repnz
outsl
add
jns
add
test
not
xchg
add
testb
mov
lea
pop
call
add
nop
push
sub
pop
nop
cmp
je
nop
push
ror
dec
pop
nop
inc
nop
push
ror
shr
pop
nop
push
shl
add
pop
cmp
jb
xor
jmp
push
sub
xor
pop
mov
push
add
pop
add
push
push
push
push
push
call
stc
add
popl
jecxz
pop
mov
add
fcmovu
push
mov
test
mov
add
mov
push
add
fs
add
rolb
xchg
js
jge
push
mov
add
out
into
mov
jnp
std
xlat
fidivl
add
test
pop
fldl
push
jnp
outsl
sarb
mov
push
iret
jne
mov
lea
pop
movzwl
mov
add
push
add
shr
not
pop
mov
xor
push
push
lea
push
call
xchg
add
mov
pop
pop
xchg
mov
pop
push
insb
iret
aad
sti
add
push
add
add
mov
mov
add
pop
ja
pop
movsl
add
add
aad
add
movl
add
mov
xchg
mov
mov
add
out
pop
nop
add
add
add
xchg
pop
add
out
cli
mov
pop
xor
push
push
lea
push
push
lea
push
push
push
call
into
mov
jbe
pop
add
sti
out
add
xchg
popl
stos
add
stos
add
xchg
mov
in
push
shll
add
cli
loop
add
lret
test
fiadds
push
add
add
add
sti
add
pop
test
pop
fisubs
mov
add
xchg
fldl
add
shlb
lea
pop
shl
push
push
call
add
push
mov
add
pop
iret
aam
add
into
lret
add
add
fists
add
add
add
add
add
icebp
add
popl
jmp
leave
mov
lock
jae
add
add
jle
mov
add
stc
jne
add
test
add
insb
pop
rcl
in
mov
mov
add
mov
out
mov
mov
lea
pop
xor
push
add
pop
shl
xor
shl
push
push
call
ja
out
int3
jbe
in
jne
add
add
pop
add
testl
data16
lods
push
add
add
faddl
lret
add
lahf
js
fwait
add
pushf
loopne
add
lcall
arpl
jp
mov
add
add
add
arpl
imul
lea
pop
xor
mov
add
push
ror
shl
pop
pop
push
lea
push
call
add
pop
insb
pop
into
lock
imul
add
add
add
pop
add
add
mov
mov
push
add
mov
xchg
jmp
add
add
mov
add
fldl
add
add
jmp
add
add
add
add
add
pop
pop
push
push
push
push
lea
push
call
mov
add
test
cltd
xchg
mov
lret
jl
add
jl
add
scas
mov
cmpsl
mov
shll
jo
call
addb
fldl
jp
mov
mov
add
mov
ret
fildl
push
push
sahf
add
jns
add
out
rcr
lahf
add
fsubl
add
add
push
add
popa
adc
pop
push
push
push
call
je
add
push
add
add
pop
rolb
lret
int
add
pop
push
mov
add
outsl
add
testl
mov
add
pusha
fcom
lcall
mov
add
add
xchg
test
add
pusha
add
add
test
add
add
add
test
int3
lcall
bound
rolb
aam
bound
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
popa
add
jecxz
mov
jb
fs
jecxz
imul
subl
mov
add
mov
mov
add
xchg
std
lods
fisubl
add
scas
addr16
add
add
cli
add
mov
scas
ficompl
cld
add
loope
mov
insb
testl
stos
into
cmc
push
shlb
rcl
lcall
mov
push
add
add
mov
lea
pop
leave
ret
push
push
push
push
push
push
call
cmpsb
add
pop
jae
add
add
lahf
int3
add
stc
push
add
mov
fistpl
loope
lret
push
mov
jno
cmpsl
stos
mov
add
pusha
jle
lcall
fisubs
add
loope
popa
add
imul
mov
add
add
push
fadds
add
sahf
add
bound
add
add
push
flds
add
mov
adc
mov
push
rol
pop
push
push
push
shl
pop
push
push
push
push
lea
push
lea
push
lea
push
call
insb
andb
add
push
add
push
movsb
test
rol
xchg
popf
add
add
jmp
mov
out
xchg
add
into
push
add
clc
stc
xchg
rcr
add
ljmp
add
imul
jb
jmp
filds
cmpl
add
add
int3
in
imul
cld
lea
pop
push
mov
mov
push
dec
not
pop
mov
push
push
push
push
push
call
cld
add
into
mov
pusha
add
aam
scas
add
jne
add
ja
add
sahf
add
lea
out
pop
roll
mov
add
add
mov
add
stc
push
add
push
add
insb
add
jge
sti
mov
mov
add
out
rcrb
cbtw
jae
addb
add
stos
add
jns
mov
mov
push
je
mov
lea
pop
test
je
mov
push
push
call
loop
add
add
fwait
mov
mov
js
aad
stos
test
add
add
iret
add
mov
add
lcall
mov
push
fiaddl
call
jbe
xchg
aam
add
add
push
aam
add
jne
scas
lea
flds
add
mov
push
filds
fwait
cwtl
xchg
shll
add
mov
lea
pop
test
je
push
shr
add
inc
pop
mov
push
push
lea
push
call
int3
push
add
jp
add
fcomp
add
add
add
lret
mov
add
frstor
icebp
lret
test
add
flds
popa
add
add
add
js
test
add
out
nop
mov
jne
add
add
in
push
test
shl
mov
add
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
shll
mov
add
add
add
add
add
shll
stos
add
add
pop
pushf
add
xchg
lahf
jnp
aad
mov
fidivrl
add
div
imul
add
mov
iret
add
add
add
mov
mov
cld
add
in
add
insb
ljmp
lea
pop
mov
push
add
not
sub
pop
inc
push
lea
push
push
push
push
call
xchg
aad
fcmovb
fiadds
roll
iret
repnz
aam
scas
add
push
mov
test
cmpsb
lcall
add
add
add
sahf
mov
xchg
out
movsl
add
add
iret
add
push
add
ficompl
addr16
add
add
testl
scas
pop
add
lea
pop
cmp
je
push
rol
pop
test
je
mov
inc
push
push
push
push
push
push
push
push
lea
push
call
repnz
les
out
add
add
scas
xchg
mov
add
fimull
test
add
add
add
shll
lods
add
jne
xchg
mov
add
in
fwait
mov
ja
xorb
in
into
fldl
imul
mov
lea
pop
cmp
je
test
jne
push
dec
sub
not
shl
pop
xor
push
push
push
push
push
push
push
push
push
call
push
add
out
jb
je
jne
push
push
jo
add
scas
mov
lret
fdiv
add
xchg
add
into
mov
sahf
add
mov
clc
add
add
mov
add
jbe
xchg
add
sahf
add
pushf
nop
add
add
jbe
mov
repnz
mov
lds
add
pop
pop
pop
pop
push
add
not
not
pop
pop
leave
push
shl
pop
ret
mov
push
push
push
push
push
lea
push
push
push
push
call
add
mov
lahf
add
add
add
jge
add
loop
add
add
xchg
arpl
ja
leave
xchg
add
icebp
into
mov
imul
cmpsl
add
add
jae
jl
mov
xlat
mull
shlb
sti
fisubrl
into
jecxz
push
jmp
add
mov
lea
pop
inc
push
lea
push
push
push
push
call
cld
roll
lods
lcall
add
pusha
pop
add
mov
add
add
pop
fdivl
push
xchg
js
add
addb
cmc
je
add
movb
test
out
cld
outsl
fiadds
mov
lea
mov
xchg
add
mov
sahf
lret
add
out
jnp
stos
add
add
add
lods
popf
mov
adc
cmp
jne
push
inc
shl
xor
sub
pop
lea
mov
test
je
push
push
push
call
mov
add
mov
add
mov
nop
jno
test
add
fs
sti
jne
add
fxch
loopne
insb
f2xm1
add
mov
testb
jb
add
add
add
outsl
loopne
stos
add
test
jl
hlt
add
fists
add
mov
test
add
in
add
jge
add
mov
ret
insb
add
add
mov
lea
pop
mov
push
lea
pop
add
push
lea
push
push
push
call
add
and
add
popl
aam
add
add
add
movsl
add
lock
add
call
push
add
ja
imul
add
add
add
jmp
add
add
jne
fst
add
scas
add
add
imul
bound
pop
cmp
jne
mov
test
je
push
push
lea
push
push
push
push
call
add
pop
fldenv
add
add
push
pop
push
popl
xlat
popf
pop
ja
push
in
xchg
push
jl
add
shlb
add
scas
test
add
std
fcoml
add
pop
add
mov
fcoml
add
add
add
popa
add
frstor
add
add
roll
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
jle
enter
pop
cld
add
xchg
mov
les
mov
mov
lret
push
add
call
scas
add
rclb
push
add
jecxz
add
rolb
mov
pop
in
add
add
test
cltd
popf
mov
add
mov
add
push
add
add
add
mov
lea
pop
add
cmp
je
push
not
pop
jmp
push
dec
sub
pop
xor
pop
pop
push
lea
push
push
push
call
pushf
add
cwtl
lahf
movsl
outsl
imul
add
in
add
cli
cld
jb
pop
cmc
shll
cmpsl
add
add
int
xchg
cltd
cwtl
popa
add
pop
pop
cmpsb
add
add
stos
xchg
add
in
push
fmuls
scas
add
mov
xorb
add
movsb
jo
jl
xorl
lret
add
mov
popf
cmc
lods
mov
add
negb
int3
lea
pop
pop
pop
push
lea
push
lea
push
push
call
add
add
outsl
mov
add
add
mov
add
cmpl
movsl
add
lret
cmc
jo
leave
add
out
sbbb
bound
mov
iret
ret
pop
stc
insb
cli
mov
pushf
add
add
add
test
int
push
mov
add
add
lret
push
jb
add
decb
pop
leave
ret
lea
push
inc
pop
pop
pop
push
shr
lea
not
pop
pop
push
sub
sub
xor
pop
pop
leave
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
iret
xchg
mov
add
aad
repnz
mov
add
add
imul
lret
mov
pop
xchg
add
add
ljmp
mov
add
out
scas
fisttpl
lret
add
mov
sbbb
add
add
aad
add
imul
shll
lret
xchg
jne
ret
pop
in
popf
add
add
lcall
pop
ret
push
dec
xor
add
pop
mov
push
lea
push
push
push
push
push
push
push
push
push
call
hlt
add
xchg
pusha
mov
nop
add
add
imul
pushf
add
je
add
add
lahf
xchg
mov
lods
pop
lahf
add
add
mov
add
mov
clc
test
add
add
out
mov
add
cli
add
mov
mov
rolb
jl
add
out
jp
pusha
nop
lcall
lahf
add
add
shr
sahf
add
add
mov
lea
pop
pop
pop
pop
push
push
push
call
add
xchg
fwait
mov
int3
in
in
je
cli
add
add
add
add
add
add
add
push
jmp
add
push
arpl
ja
add
addr16
addr16
imul
add
cmc
pop
add
add
add
fldl
in
iret
add
add
add
xchg
push
mov
lea
pop
pop
leave
ret
push
push
call
jo
add
lods
push
data16
add
add
popf
fcoml
add
pop
jae
leave
push
icebp
adcb
add
loopne
add
mov
add
hlt
mov
mov
pusha
clc
cmpsb
add
mov
add
add
lahf
add
push
add
push
add
out
loop
ljmp
add
add
add
add
insb
push
cwtl
les
or
rolb
dec
in
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
push
in
jecxz
mov
mov
je
jmp
aam
add
movsb
mov
xlat
push
push
test
xchg
nop
pop
lods
mov
dec
push
movl
add
mov
pushf
leave
rclb
out
out
add
out
movsl
push
add
sti
test
add
pop
add
flds
xchg
mov
xchg
pop
add
addr16
rol
push
pop
xor
inc
cmpb
jne
push
add
pop
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
mov
mov
sti
movsb
icebp
mov
sti
jg
mov
sti
mov
sub
sti
and
mov
add
std
jbe
xor
mov
fcomi
popf
testb
pop
push
jnp
and
jb
cwtl
dec
cmp
nop
dec
mov
lea
xchg
rcrb
mov
jns
sbbb
lea
psubb
adc
gs
les
repz
cltd
movsl
mov
pop
add
mov
mov
push
mov
out
popf
mov
pop
lret
pusha
into
shll
inc
pop
fdivs
daa
sbb
js
insl
cltd
add
add
fwait
incb
xlat
lock
nop
outsb
mov
in
fimuls
imul
test
loope
jle
popf
and
movsl
or
mov
popa
pop
nop
sbb
movsl
pop
xor
mov
xchg
xchg
in
ja
or
pop
aam
add
mov
dec
jbe
mov
jae
push
xor
adc
movb
ret
mov
imul
mov
cmp
scas
idivl
adc
cmpsb
shll
sbbb
cmp
popf
jne
sub
stos
and
pop
sbb
dec
lods
add
cmp
ficoml
cmp
call
push
push
xchg
mov
int
sbb
jmp
fistpl
mov
inc
into
lret
xchg
popf
rclb
iret
test
mov
pusha
mov
inc
bound
mov
inc
stos
push
cmp
and
into
mov
push
inc
mov
in
fstpl
fs
cmpsb
ja
jecxz
pop
lahf
test
cs
arpl
pop
cld
push
cwtl
jl
mov
aas
imul
adc
fstl
pop
dec
fldl
ds
xchg
sub
mov
shl
push
push
pop
cmpsb
lret
mov
pushf
mov
add
xor
insb
stos
mov
xor
popf
cmc
add
clc
roll
ret
jns
movsl
daa
and
jp
jns
dec
or
sbb
icebp
sbb
jl
jae
xchg
maskmovq
lahf
repz
sbb
add
insb
inc
lods
dec
cmp
inc
out
in
mov
jo
push
pop
rclb
add
out
pop
jmp
add
mov
jecxz
pusha
std
cld
cmp
mov
outsb
clc
xor
rcl
or
mov
push
loopne
and
imul
dec
shll
out
pop
cld
jne
push
movl
jg
ss
inc
jo
cmp
pop
js
add
sbb
push
mov
mov
in
adc
mov
sub
out
mov
sub
push
aas
inc
or
cld
sbb
xor
sahf
or
add
fdivrs
and
sbb
faddl
fs
dec
and
mov
sbb
jne
pop
mov
insl
rcr
dec
insb
out
outsl
in
clc
cmp
or
lock
xchg
stos
cld
cmp
xor
je
pop
cmpsl
push
xor
xchg
dec
in
out
popa
test
nop
shll
rolb
adc
repz
adc
gs
addr16
sbb
push
popf
test
stos
xlat
lahf
mov
dec
dec
push
and
test
fxch
xlat
ja
mov
out
and
dec
stos
mov
dec
push
cmp
filds
pop
fcoml
popf
inc
add
pop
mov
sbb
sbb
sar
loopne
xchg
push
dec
test
ss
jb
cmp
xor
pop
pop
int
and
jecxz
call
jecxz
fdivl
dec
sub
lret
or
iret
fstl
pop
enter
push
das
lret
clc
out
ja
pmulhuw
mov
adc
dec
into
inc
sub
repz
bound
sub
xchg
mov
mov
fdivrs
mov
jb
movsb
add
jnp
xor
cwtl
cmp
jecxz
hlt
xchg
ja
cs
inc
jns
dec
and
mov
xchg
pop
and
xlat
mov
xchg
and
into
fbld
sahf
sbbb
inc
sub
test
jge
sbb
adc
fcoms
push
pop
ficomps
jns
ss
jl
jg
leave
loopne
jne
lcall
jp
sub
mov
or
xchg
aaa
shrl
mov
and
and
push
inc
fimuls
or
pushf
hlt
sub
addr16
push
or
mov
dec
sbb
lds
insb
rcr
cmpsl
xlat
xchg
sbb
dec
xchg
incl
cli
loope
jmp
push
ljmp
aad
and
and
stos
push
jmp
sbb
js
sub
xchg
mov
imul
insl
stos
dec
call
adc
or
xor
sub
ja
or
fsubrp
mov
xor
jmp
cmpsb
loope
hlt
addr16
cmp
mov
xchg
add
cmp
xlat
xchg
xchg
adc
adc
sub
negb
loope
aas
mov
into
andb
daa
jno
pop
and
cmp
push
xorb
push
cmp
cmpsl
loopne
leave
mov
jge
out
hlt
fdivrs
ljmp
xor
aas
pop
xorl
sub
sub
push
inc
mov
and
and
lret
push
imul
add
add
outsb
gs
testl
xor
push
pop
mov
cld
imul
fstpt
mov
leave
addr16
cltd
int
lahf
sub
pop
or
test
movsb
test
mov
xchg
jnp
pop
jno
dec
fcmove
call
push
cmp
fnstcw
mov
imul
mov
int3
and
xor
add
stos
push
hlt
push
sbb
sbb
addr16
scas
push
lret
sbb
pop
and
xlat
scas
and
fnstcw
cmpsb
daa
mov
mov
aas
or
jg
fcmovnb
or
stc
out
push
fnsave
xchg
loop
pop
inc
jno
sbb
xchg
js
ret
cmpsl
dec
out
sbb
arpl
fidivs
scas
loopne
ret
aad
fxch
xchg
mov
popf
cmp
and
fists
insl
jle
stc
mov
das
sbb
and
filds
mov
ljmp
inc
hlt
clc
scas
pop
pushf
jb
movsl
stos
adc
sbb
in
les
ss
fxam
aam
sbb
add
push
std
jo
mov
test
and
jns
sub
and
mov
adc
push
cmp
daa
pop
fwait
and
insb
lret
xor
fiaddl
add
add
lahf
and
lock
inc
movsl
xor
mov
hlt
and
insl
mov
xor
jp
cmpsl
pop
ja
imul
int
mov
ja
push
mov
jno
lahf
push
mov
and
sbb
mov
rorl
fists
enter
sahf
or
adc
data16
sbb
xchg
mov
insb
cmp
xchg
push
dec
shr
sbb
push
stos
xchg
popf
aad
xorb
cmp
out
jne
in
mov
xchg
mov
push
inc
gs
insb
loopne
push
mov
mov
cmp
push
test
pop
sbb
shl
mov
jg
fs
dec
or
dec
or
in
pop
adc
jno
in
xchg
cmp
insl
xor
jb
push
add
jne
imul
or
and
mov
cli
push
jb
loopne
jns
and
push
jbe
les
dec
addl
stos
iret
dec
mov
dec
xor
adc
inc
testb
mov
jne
enter
xor
aam
or
jo
inc
mov
xlat
jmp
and
xchg
scas
pop
mov
data16
and
inc
or
daa
iret
lock
sbb
and
jae
mov
cmpsl
push
ja
dec
inc
fstp
or
stos
xchg
aam
pushf
lods
mov
movsl
push
dec
mov
push
ret
dec
sti
sti
paddusb
lcall
sbb
xchg
add
pop
je
std
mov
xchg
imul
stc
dec
xchg
push
fwait
bound
imul
imulb
sbb
jbe
push
or
inc
mov
pop
loope
sahf
lods
xchg
push
in
mov
leave
push
mov
test
pop
jmp
adc
into
mov
mov
or
andl
inc
jecxz
mov
ja
mov
ficomps
mov
adc
push
outsb
les
mov
xchg
mov
xor
xchg
daa
in
arpl
mov
movsl
pop
scas
add
cmpb
xor
inc
jecxz
adcb
mov
stc
scas
jmp
pop
or
cld
jl
inc
lcall
iret
shlb
xor
mov
push
and
test
cmpsb
loopne
orb
push
push
jmp
enter
stos
push
cmp
daa
mov
out
push
sarl
jb
cmp
add
in
xchg
cmc
mov
cmp
pop
lret
insl
cltd
xchg
ret
scas
in
mov
lods
xchg
adc
mov
jae
pop
xchg
add
push
mov
ret
dec
dec
xchg
mov
inc
or
cmp
dec
fwait
dec
sti
mov
sub
push
jg
sbb
sti
sub
lea
xchg
dec
ljmp
mov
cmp
sbb
fcom
xor
push
mov
cmp
mov
shr
mov
enter
das
rolb
add
jo
js
push
cmp
inc
mov
aad
xchg
insl
fnstenv
dec
hlt
call
sub
test
xchg
mov
xchg
pop
mov
add
decb
fwait
shlb
pushf
and
stos
std
xor
popa
iret
lea
cmpsl
cwtl
mov
mov
mov
xchg
pusha
test
sbb
enter
je
mov
xor
fsubr
ja
std
int
mov
outsb
sbb
js
xor
pop
imul
push
test
jne
mov
imul
addr16
sahf
notl
fwait
dec
in
xlat
pop
out
inc
ret
mov
adc
lret
notl
mov
outsb
sub
sub
stos
adc
mov
or
add
inc
cmc
fcoml
outsl
add
out
add
out
dec
pop
ret
mov
dec
pop
sub
mov
mov
jne
adc
test
jb
or
push
stos
movsb
aam
jle
xchg
xchg
mov
inc
fadd
pusha
das
mov
xchg
int
push
pop
or
lret
in
mov
add
leave
std
push
movsb
jo
pop
pop
lahf
pop
iret
cmp
cmpsl
sub
icebp
adc
pushf
adc
cmpsb
and
xchg
inc
cld
imul
jl
push
arpl
xchg
aas
jo
push
fsubp
push
out
sti
dec
cmpsl
jnp
js
cmp
mov
mov
int3
mov
mov
add
insl
push
jb
clc
xor
stc
mov
shlb
fwait
dec
int3
jl
scas
jge
movsb
inc
repz
xchg
sbb
sub
push
aaa
shlb
aam
push
popa
scas
jl
fmuls
jg
lods
decl
xchg
jne
insl
cmp
inc
and
loopne
repnz
xchg
and
mov
je
mov
dec
xchg
mov
mov
jp,pn
jl
mov
in
mov
adc
or
sub
adc
outsl
aaa
mov
jbe
mov
sti
mov
sbb
das
fisttpll
data16
lods
outsl
roll
out
or
and
xor
dec
icebp
addr16
stos
mov
adc
lock
jmp
sbb
or
cmp
pop
pop
stc
jmp
cli
adc
jl
push
mov
or
repz
imull
call
sbb
inc
movsl
dec
cmp
or
lea
shll
adc
int
rcrl
push
ret
cmp
sbb
pop
dec
and
xor
jmp
push
xlat
movl
jno
sub
xchg
call
js
std
repz
mov
popa
outsb
popa
inc
faddl
mov
aaa
cmpsl
comiss
nop
inc
arpl
sub
outsl
out
and
adc
push
jno
xlat
leave
pop
shl
pop
and
decb
icebp
pop
stos
or
dec
mov
iret
insl
in
jo
cld
enter
test
je
in
jns
hlt
cmp
sub
rcrb
cmp
push
int
iret
or
add
data16
xor
test
add
adc
lea
push
adc
and
mov
popf
loope
or
test
jmp
adc
movsl
and
xor
push
inc
mulb
pop
inc
pop
mov
sbb
aam
or
pop
into
aaa
scas
pop
test
adc
loopne,pt
push
push
xorl
lods
jns
cs
ds
mov
out
inc
in
mov
jg
push
adcl
fistl
addr16
pop
mov
gs
push
rolb
xchg
or
inc
loopne
xor
inc
fdivrs
push
mov
in
jns
mov
ss
push
dec
mov
cld
jbe
orb
imul
mull
outsb
loope
cmp
idivl
lahf
out
imul
js
js
movsb
pop
cs
mov
sub
xchg
enter
pushf
xorb
cltd
add
daa
out
dec
mov
fsubrl
lret
shr
or
push
andb
addr16
cmc
dec
push
add
push
dec
pop
mov
cmp
dec
outsb
mov
aam
cmp
aaa
orb
jno
lds
ljmp
cltd
cmc
aad
mov
xor
mov
cld
jecxz
arpl
arpl
ja
fmul
xchg
jns
or
dec
fadd
push
movsb
in
les
addb
xor
xor
mov
cmp
sub
inc
jae
lock
in
div
mov
push
inc
or
mov
ret
and
and
je
int
fcmovb
aas
clc
push
out
xor
xor
pop
sahf
jb
xchg
shrb
stos
or
cmp
and
mov
cltd
cwtl
nop
inc
lahf
fildl
aaa
loop
dec
stos
icebp
loope
cmp
loope
inc
das
incl
into
jle
dec
cwtl
jae
stc
push
push
mov
inc
ljmp
jb
rorl
rcrb
sti
loope
lcall
jecxz
push
sub
ss
add
push
cmp
iret
lcall
insb
cmp
ja
nop
fwait
dec
incl
ret
loopne
pop
fdivl
pop
pop
aam
and
jl
cmp
ljmp
mov
ss
fld1
lret
push
outsl
sub
mov
out
fbld
mov
add
addr16
cmp
test
mov
stc
cmpsb
jg
rolb
mov
jmp
mov
test
loopne
cli
es
or
jg
push
jge
inc
adc
ja
mov
outsb
shr
sub
push
loopne
sub
fdivs
or
je
pusha
fcmovb
lock
loop
mov
xor
dec
repnz
fnstenv
mov
aaa
mov
jmp
je
arpl
aas
push
rorl
xchg
int3
jg
imul
pop
scas
and
cld
test
mov
test
jp
aad
out
int
xchg
sub
xor
dec
push
rorl
mov
mov
and
xchg
repz
mov
pop
in
sbb
lret
out
fstl
adc
xor
and
movsb
std
and
outsl
pop
adc
xchg
pushl
adc
adc
pop
flds
int3
dec
mov
mov
out
xchg
xchg
ja
mov
xorl
loop
arpl
imul
les
add
jg
popf
mov
cwtl
outsb
jne
or
inc
add
or
add
sub
movsb
xchg
scas
int
test
mov
mov
stos
out
fildl
or
std
lods
into
add
loopne
pop
mov
push
xchg
xchg
imul
push
jne
xor
mov
scas
xor
jg
cmp
mov
rorb
outsb
fisubs
sub
sub
mov
xor
test
pop
aaa
sub
mov
int
std
pop
mov
outsb
lahf
lahf
jns
xchg
outsl
dec
inc
or
dec
sbb
rcl
jns
fdivs
mov
inc
mov
jno
mov
mov
dec
dec
mov
jae
and
das
mov
xchg
or
jp
xlat
and
mov
push
push
fxch
dec
add
sbb
es
loope
test
mov
out
lods
fimuls
scas
mov
and
push
mov
mov
mov
fisttps
out
inc
shlb
mov
leave
stc
ss
test
mov
sbb
aam
add
mov
mov
in
ljmp
push
jg
int3
xlat
jl
mov
lret
jnp
movsl
stos
nop
adc
repz
push
sub
mov
fcomps
xchg
mov
add
imull
mov
mov
aad
mov
jnp
pop
lea
popa
push
mov
sub
jo
addr16
decl
mov
jb
push
push
rorl
lahf
pushf
fistl
les
je
pop
arpl
sbbl
cmpsl
push
xchg
xor
pop
out
or
and
js
mov
jno,pn
stc
insb
inc
inc
hlt
orb
test
xor
push
js
lret
lcall
or
sub
pop
push
mov
lock
sarl
loop
mov
push
push
xchg
inc
xchg
ss
call
inc
rolb
mov
arpl
dec
scas
jecxz
lea
int3
and
ret
push
out
push
push
imul
jle
xor
push
aaa
lret
mov
insb
xor
lahf
into
imul
insl
jae
push
jmp
clc
aam
or
push
insl
xor
mov
movsl
out
leave
mov
xchg
daa
not
xor
pop
cmp
cmpb
out
push
mov
and
and
cld
cmpb
imul
repnz
and
sbb
inc
ljmp
push
das
hlt
addr16
or
jl
mov
pop
push
enter
sub
call
cmp
xor
push
sbb
and
push
faddl
fsincos
xchg
movsb
cld
add
lods
call
mov
sub
push
lods
testb
js
out
xchg
pop
jnp
enter
fs
pop
stc
mov
je
das
and
and
mov
je
add
das
lret
xchg
inc
test
icebp
mov
fdivr
leave
imul
imul
push
out
adc
daa
stc
notb
pop
adc
or
movsbl
test
and
mov
scas
loope
cmpsb
adc
aam
xor
add
fcoms
fstps
icebp
stos
cmc
adc
loop
shrb
mov
movsl
mov
rcr
jle
push
addl
out
xor
xor
push
mov
out
pushf
jl
es
add
jg
cmp
ja
pop
loope
mov
or
jno
jne
shrl
add
xchg
inc
cld
dec
leave
divl
les
and
xchg
and
add
jle
testl
popa
dec
mov
loop
push
lds
sub
xchg
repz
std
push
and
popa
cs
or
push
xchg
data16
or
pushf
inc
inc
push
not
xor
pop
inc
dec
mov
xchg
stc
das
adc
test
fisttps
jne
out
sub
daa
xor
lret
int3
bnd
and
pop
lcall
inc
sti
sbb
and
mov
test
pop
in
pinsrw
negb
mov
nop
in
jae
dec
sbb
add
and
sbb
add
jg
and
mov
adc
mov
adc
add
out
cld
ss
mov
cmp
out
cmp
pop
push
popa
inc
movsb
adc
mov
xchg
pop
sub
push
and
cli
mov
cmp
mov
mov
divl
mov
dec
nop
addr16
mov
mov
or
loope
mov
ficoms
inc
dec
fildl
dec
xchg
dec
mov
inc
rolb
jge
inc
jmp
cmp
in
cmp
add
pop
pop
mov
xchg
sub
ficoml
daa
jg
cwtl
enter
stc
roll
pusha
iret
xorb
rcrl
xor
orb
push
mov
jb
out
les
sub
std
pop
std
pop
sbb
sub
jmp
xchg
into
cmp
mov
xchg
out
test
xchg
mov
jmp
cmp
jl
inc
or
js
addr16
dec
int
cmp
fwait
adc
arpl
pushf
pop
push
inc
rcr
pop
mov
outsl
mov
pop
dec
negb
adc
loop
sub
sti
push
pushf
push
mov
adc
xchg
pop
xorb
sbb
push
aad
loopne
or
jb
add
call
mov
dec
fwait
and
xor
notb
lods
mov
clc
pop
cmp
enter
test
xlat
fiaddl
xor
jnp
repz
pop
adc
mov
inc
icebp
add
add
fcompl
inc
test
por
inc
sahf
pop
xor
inc
jno
aad
mov
pop
loop
cmp
inc
int3
fdivs
xor
cmp
popf
dec
ret
pop
nop
loopne
mov
dec
mov
add
aas
lahf
xor
stc
or
pop
inc
xchg
cmpsb
sbb
hlt
mov
bound
in
and
notb
in
je
xor
sbb
in
and
inc
lock
sub
sahf
ljmp
pop
icebp
mov
rorl
ret
xor
cs
icebp
fwait
push
add
add
and
dec
aas
sahf
add
lock
xchg
pop
sbb
out
out
push
je
aaa
icebp
fimull
dec
mov
mov
mov
mov
sub
sbb
pop
fwait
popf
dec
xchg
inc
mov
int
shll
push
faddp
or
jbe
add
filds
in
cmp
or
inc
pop
adc
add
jmp
lahf
sarl
mov
pop
push
rcll
sub
cmp
imul
nop
stos
jge
mov
push
adc
sti
cmp
jno
dec
lods
addb
in
xchg
push
andl
sbb
or
int
mov
jns
jmp
inc
arpl
popa
rclb
mov
fucom
sbbl
adc
mov
arpl
iret
sbb
push
jns
dec
mov
mov
test
insb
jae
sahf
cmp
push
mov
mov
into
push
pop
repz
nop
pop
pop
dec
adc
or
and
repz
pop
sub
xchg
ret
pop
imul
mov
and
pop
push
ret
in
fdivs
adc
repnz
mov
xchg
inc
ds
loopne
popf
scas
movsl
test
pushf
inc
push
xor
push
push
mov
fdivl
scas
pop
jg
jno
fdivs
icebp
jne
into
push
xorb
es
rcrl
ljmp
mov
mov
mov
nop
lods
gs
adc
enter
leave
fs
xchg
pop
clc
lods
gs
cmp
jne
xchg
inc
fnsave
icebp
enter
jl
outsl
pop
clc
push
int3
in
outsl
add
mov
push
push
lods
int3
fldt
scas
dec
pop
inc
pop
scas
das
dec
rol
in
imul
in
in
lods
popa
xchg
divl
push
out
mov
add
addb
xchg
dec
jo
mov
cmp
jge
mov
jb
jns
xor
lods
sahf
lods
jmp
aas
shl
or
lock
adc
mov
xchg
fadd
loopne
cmpsl
xchg
sub
inc
data16
xchg
mov
out
inc
sub
cmp
push
cmp
or
out
cmp
mov
xchg
cmp
lret
insb
int
rorl
in
repz
imul
std
push
dec
dec
inc
xchg
int
test
xor
sahf
jl
imul
xchg
scas
std
push
cmp
cmp
jp
sbb
movsl
inc
push
jo
in
push
inc
dec
fcoms
push
xchg
dec
xor
inc
dec
loope
mov
xorl
and
inc
sbb
push
or
pop
add
push
loope
inc
pop
lea
mov
mov
sti
fidivs
in
test
add
xor
lret
add
mov
out
add
popa
push
or
sub
ret
jno
dec
fldcw
sarb
cmpsl
jp
lods
in
aam
xorb
or
jl
in
sarl
or
fiadds
out
insb
jns
pop
scas
lea
ret
je
or
std
and
inc
arpl
jno
dec
mov
pop
shlb
movsl
lret
sub
mov
add
jecxz
sub
jecxz
cmc
jns
jmp
clc
ret
ljmp
add
adc
xchg
out
std
idivl
jbe
dec
add
sbb
adc
or
mov
rol
stos
incl
and
repz
sti
push
addr16
test
subl
add
sbb
mov
icebp
rorl
pop
pop
jo
sub
jnp
jae
xlat
call
and
outsb
lods
gs
rolb
fisttpl
dec
pop
bound
in
data16
mov
adc
negl
lahf
sub
pushf
xchg
inc
xchg
cmp
aad
pop
scas
rcll
notl
add
jp
das
jnp
adc
xorl
mov
and
data16
or
pop
dec
jae
dec
cs
mov
jo
and
je
mov
popa
pop
jecxz
push
pusha
aad
sbb
loope
fs
ds
jecxz
cld
lods
lds
arpl
inc
aas
sub
jne
cmc
cld
les
fs
dec
and
pop
dec
mov
pop
inc
adc
outsl
push
fs
ds
or
jne
iret
fsts
daa
and
stos
pop
mov
mov
and
fwait
jl
add
mov
aam
sahf
into
xchg
add
outsl
bound
push
cmpsl
int3
mov
push
mov
shr
fmul
mov
in
rcr
call
xchg
push
es
dec
outsl
int3
fldenv
in
push
ret
inc
fistpll
add
shlb
adc
test
jmp
out
pop
inc
lahf
push
cmp
pop
jmp
arpl
mov
push
rcrl
mov
mov
fwait
pop
adcl
fsubr
pop
and
repz
ficoml
add
jb
leave
mov
aam
xor
rol
jo
in
xchg
mov
xchg
mov
outsl
push
jp
into
cs
lods
scas
and
jmp
sbb
jg
adc
flds
and
inc
adcb
or
test
xor
add
and
ds
mov
or
ljmp
sbb
cs
and
xchg
cmp
das
test
xor
sub
in
xor
sbb
sub
mov
lahf
jo
cwtl
negb
push
jne
push
cmp
mov
out
popf
andl
lods
jg
ror
and
add
mov
jle
fnstenv
shr
xor
jno
xchg
cs
movsl
shrb
loope
cmp
dec
inc
clc
dec
sti
mov
xor
sbb
scas
jae
loopne
jecxz
dec
sti
out
and
inc
add
jmp
call
push
pop
pushf
pop
cmp
icebp
lret
lods
arpl
call
mov
repz
fcompl
rclb
test
dec
sbb
or
add
lret
imul
cli
cmpsl
pop
cmpsl
push
adc
sub
popf
das
mov
xchg
shlb
push
les
aad
sti
jo
mov
aad
sub
xor
pop
js
add
jbe
pushl
xchg
pcmpeqw
popf
repz
stc
mov
nop
ss
mov
or
push
add
inc
xchg
adc
or
mov
mov
dec
test
push
pop
psrlw
mov
je
scas
inc
imul
popa
xor
xchg
xchg
push
test
push
xchg
and
cmpsb
mov
inc
or
inc
cmpsl
xchg
stc
std
jns
xor
adc
jb
mov
or
imul
ficoml
mov
push
insl
xor
not
jo
jns
and
test
arpl
loope
mov
mov
mov
xor
aas
xor
or
pop
pop
xchg
ljmp
bound
outsl
das
xchg
pop
inc
and
rep
lods
and
fdivp
leave
les
fidivrs
pop
sbb
pusha
cmp
ret
addl
pop
push
mov
lret
and
fs
hlt
insl
xorl
sub
fcoml
pushf
mov
pop
loope
sbb
or
pop
aam
incl
test
int
cltd
int
pop
mov
xchg
cmc
inc
insb
ljmp
lcall
sbb
jno
dec
sbb
dec
pop
aas
jle
hlt
pcmpgtw
mov
popf
int
lahf
loopne
pop
sub
pop
out
not
iret
push
pop
cli
loopne
sub
js
inc
loop
cmp
cmpsb
stos
shll
repnz
xor
cld
xchg
sub
xor
inc
sub
testl
jmp
daa
dec
ds
sahf
dec
mov
jl
fists
add
sbb
xor
adc
sbb
inc
test
sub
and
inc
icebp
sub
je
or
negb
cmp
in
and
fnstsw
dec
mov
cmp
ljmpw
inc
sbb
fbld
push
pop
sbbl
subl
das
and
lea
or
pop
jecxz
and
and
adc
aas
and
jmp
lcall
push
fstp
pop
sbb
inc
mov
scas
or
jmp
push
xor
fcompl
sub
xchg
mov
test
and
pushf
lods
sub
jae
add
loop
xchg
aas
out
pop
or
jge
idivb
mov
jno
jge
je
and
mov
test
stc
adc
jle
loopne
cmp
add
push
fdivp
lret
adc
ret
push
sub
pop
pop
mov
add
pop
arpl
lahf
jnp,pt
jo
cltd
popl
imul
add
push
sub
daa
add
push
xor
testb
movsb
dec
fmulp
daa
jno
jmp
sti
xorb
daa
into
cs
xchg
pop
mov
aam
fistps
daa
arpl
out
lods
sti
out
lret
lods
dec
sub
rcll
inc
cmpsb
xchg
rcrb
test
cmp
xor
jno
jae
icebp
rorl
sbb
subl
aad
xchg
push
push
adc
sub
mov
nop
sub
cld
test
xor
movsl
xor
pushf
adc
sbbl
rcrb
or
cmpsl
rcr
int
pushf
mov
dec
dec
cmp
pop
xorl
vpmacsdqh
add
dec
xor
inc
sbb
mov
in
jbe
pop
test
mov
add
xor
popa
adc
fsubrl
data16
and
pop
cltd
jmp
adc
movb
push
push
jae
mov
fistpll
out
and
frstor
jno
outsl
push
in
cmp
and
dec
mov
dec
pop
dec
and
fnstsw
sub
mov
xchg
cmp
in
aas
fs
mov
jne
mov
push
popf
lcall
daa
sub
sub
mov
mov
nop
das
rolb
mov
stos
and
repz
loope
push
scas
inc
clc
fdivrs
pop
pop
sarb
fildl
mulb
stc
rcl
push
mov
xchg
jecxz
mov
mov
addr16
pop
push
fistpll
out
fisttpl
pop
jno
push
scas
fcom
pop
loopne
add
or
mov
pop
sbb
out
push
shrb
jbe
xchg
xor
loop
ds
jno
mov
jnp
pop
aaa
inc
mov
or
insl
fsub
scas
fisubs
and
fwait
lcall
and
push
int3
pop
dec
sbb
pop
mov
lcall
adc
ds
xlat
shl
test
and
out
shl
xor
inc
fisttps
ja
xor
rcrb
fisubl
mov
push
add
fimuls
mov
mov
cs
push
xor
loope
out
inc
add
inc
movl
xor
jns
popa
loope
cmc
loopne
cltd
push
fisubrs
sbb
jae
rolb
and
and
jb
xchg
inc
mov
dec
out
sbb
or
addr16
jle
cli
pop
stc
mov
xor
adc
aad
push
int
add
sti
out
imul
cmp
mov
dec
outsl
push
pop
aad
fxam
movntps
std
fs
sub
xchg
ds
sbb
sbb
sub
pop
mov
push
push
sub
loopne
pop
sub
xor
jne
add
inc
clc
jl
popa
int3
scas
test
push
dec
lret
xor
movsb
addl
mov
push
sub
stos
loop
mov
mov
test
insl
inc
es
data16
adc
add
xor
dec
loopne
adc
sub
and
daa
jp
mov
inc
sub
addb
lea
aam
lahf
adc
mov
adcb
out
push
push
sbb
jb
add
and
lds
ss
outsb
inc
or
inc
xor
in
jp
pushf
aas
pshufb
cs
cmp
out
sub
ja
mov
xchg
mov
dec
fisubl
pusha
jae
les
jb
mov
popf
insl
scas
or
aam
pop
es
mov
inc
rcll
add
std
ljmp
imul
ds
pop
clc
xor
cmpsw
testb
or
icebp
mov
sbb
mov
sbb
cmpsl
add
inc
push
push
cmpsl
fwait
dec
push
xchg
mov
pop
call
jne
xchg
cmp
dec
mov
idivl
cs
push
clc
jp
mov
movsb
fimull
sub
push
and
inc
jno
repz
inc
int3
or
fidivrl
decl
notl
mov
cmpsb
xchg
sbb
pop
sbb
jns
cmp
pop
xor
gs
cltd
add
stc
addb
lock
cvtpi2ps
xchg
jmp
adc
jmp
adc
cmp
ljmp
out
mov
add
les
mov
ja
int3
js
adc
popa
cmp
notb
sub
cmc
xor
aas
bound
dec
loop
mov
xchg
and
js
ds
imul
xchg
add
outsl
scas
pop
aas
or
xor
push
stc
pop
add
sbb
cmpsl
mov
mov
xchg
out
rcl
stos
xchg
xor
sbb
add
dec
mov
clc
lret
sahf
jnp
fwait
subb
scas
hlt
and
add
pop
lahf
cmpsl
xor
ret
rcr
mov
inc
imulb
add
push
out
xchg
pop
hlt
xor
xlat
fisttpl
adc
repnz
in
adc
inc
cld
dec
test
jo
out
and
insl
xchg
push
call
loopne
mov
mov
stc
mov
mov
mov
sub
scas
test
cs
sti
push
dec
lods
stc
enter
xchg
mov
lods
sti
cmc
cmpsl
mov
xor
cmpsb
cmp
stos
insl
mov
add
lds
cmp
bound
add
inc
adc
lock
sub
loopne
xchg
aad
leave
ret
lea
xchg
insb
mov
pop
xlat
xor
or
xchg
xor
jno
mov
and
sbb
jmp
negb
sti
or
je
mov
fs
jns
enter
push
push
xchg
xchg
mov
push
ds
cmp
pop
in
mov
adc
lret
mov
stos
mov
push
in
push
jmp
cmc
cmp
sbb
mov
push
jnp
out
pop
hlt
int
mov
push
outsl
adc
push
test
pop
or
push
pop
sub
imul
data16
and
mov
xchg
lods
xchg
inc
aaa
movsb
test
dec
in
scas
dec
lds
pushf
or
lea
je
mov
pop
pop
mov
xchg
cmp
or
jecxz
sub
push
add
popa
sbb
pop
popl
ds
push
dec
cmpsl
mov
push
jmp
xchg
dec
mov
sub
mov
mov
pop
call
ljmp
fsub
repz
push
push
loope
and
fisttpl
push
repnz
jns
and
out
cmpl
pop
dec
xchg
pop
xor
es
loop
stos
test
subb
aad
cld
or
cs
add
jmp
pusha
mov
jb
hlt
call
and
adc
ret
outsl
jp
inc
insl
in
mov
push
repz
adc
xchg
pop
andl
xchg
gs
or
cmpsb
and
shl
jne
push
mov
pop
bound
test
pop
std
xor
adc
dec
fistps
insl
adc
cmp
hlt
loop
xlat
jnp
mov
inc
jbe
sub
iret
das
sub
dec
mov
pop
lods
push
stos
out
jne
cmp
loope
mov
mov
push
cmp
jp
and
sarb
jno
call
pop
js
out
push
pop
icebp
sub
outsl
and
and
shrl
pushf
lret
dec
das
or
jmp
dec
sub
call
mov
push
xor
int
decb
mov
test
xor
mov
insl
std
add
lahf
rcrl
movsb
cmpsb
add
mov
pop
xchg
cmp
in
js
test
mov
jg
jmp
xchg
test
push
hlt
int3
add
ror
call
movsl
daa
sub
out
incb
push
les
out
repnz
sbb
lcall
ret
icebp
sbb
in
mov
mov
ja
ret
js
push
xchg
into
popf
clc
pop
and
inc
xlat
lock
pop
lcall
xchg
stc
mov
mov
xlat
jl
iret
cld
mov
push
ljmp
add
jns
sbb
xor
inc
or
mov
xchg
lock
push
dec
mov
adcl
imul
mov
sub
inc
add
scas
sahf
cmpsl
inc
push
inc
and
fsubs
mov
adcb
stos
int3
mov
mov
fwait
jle
and
sbb
inc
pop
sbb
add
push
jp
popf
dec
in
mov
and
test
test
sbb
dec
add
pop
jb
stc
pusha
lea
or
cmp
inc
pusha
rolb
movsb
mov
lret
jnp
test
push
iret
mov
push
sbb
xor
add
nop
call
les
dec
push
push
mov
fcoml
push
jg
mov
stos
repz
push
in
pop
scas
std
mov
cmc
xlat
jns
fdivrs
push
int3
xor
scas
fwait
xor
mov
mov
mov
in
xchg
mov
or
xor
and
dec
or
aad
adc
lock
pop
ja
mov
cmpsb
push
and
aaa
mov
cmpb
jecxz
mov
adc
pop
mov
mov
call
pusha
fdivr
xor
jmp
lock
ds
cmp
movsl
jbe
imul
pop
lods
out
push
mov
aad
mov
add
sarl
adc
fidivl
jb
xchg
mov
cmpsb
adc
scas
loopne
mov
jnp
insl
mov
sbb
mov
movsb
jno
dec
cmpsb
xor
sbb
inc
mov
dec
push
add
sub
lcall
mov
in
inc
inc
mov
test
dec
addb
test
sbb
mov
cltd
sbb
mov
sahf
lds
lcall
loope
aaa
adc
xor
sub
lea
jle
cltd
call
xchg
and
call
mov
jge
out
popf
shl
sahf
sarl
mov
jae
or
fldt
sbb
mov
adc
daa
outsl
xchg
es
mov
ja
push
aaa
cmpsb
dec
popf
into
mov
in
mov
xor
jle
inc
mov
and
sbb
push
out
rcrl
xchg
lret
sub
jle
xchg
fdivrl
sub
mov
in
shrw
sarb
push
ja
adcl
mov
loop
jmp
cmpb
stos
rcrb
push
cmp
sub
popf
and
ret
xor
cwtl
jbe
push
xor
mov
clc
xlat
sub
jmp
jo
inc
fists
pop
mov
je
or
mov
jb
adc
int3
cmp
lret
sarl
cs
je
add
dec
adc
sti
cmp
loop
cmp
enter
cmp
repnz
repnz
sub
adc
fistps
mov
lret
jbe
jbe
xchg
mov
enter
mov
or
xchg
hlt
stc
add
pushf
frstor
inc
ss
mov
outsl
mov
fsubrl
cmp
shll
pop
aad
pop
pop
pop
aad
divb
push
jmp
xchg
bound
cmpsl
mov
cwtl
pop
sbb
push
into
jae
or
inc
and
iret
push
loopne
push
or
outsl
pop
cmpsb
pop
movsl
xchg
pop
test
adc
js
add
mov
inc
cwtl
rolb
xchg
in
push
aam
or
in
adc
sahf
xchg
cmp
cmp
clc
cwtl
hlt
push
fidivrl
icebp
jbe
ljmp
stos
sub
mov
das
shlb
leave
popa
xlat
aaa
push
or
sbb
mov
sub
je
jl
add
int
test
pusha
mov
imul
mov
cwtl
das
mov
pop
lods
pusha
jmp
push
cmpsl
mov
or
jae
arpl
outsl
jl
xchg
test
push
fsin
push
popa
test
push
push
je
xchg
mov
shr
sub
fisubs
lret
outsb
repz
ds
or
xchg
imul
cmp
cli
jle
sub
movsl
pop
test
add
jno
subb
mov
cmp
mov
test
and
mov
mov
mov
inc
fstps
xchg
adcb
subps
jno
loope
jnp
loope
test
cmp
subl
xchg
test
loope
sbb
sub
jl
divb
lods
inc
dec
xchg
fists
aas
rolb
sbb
stc
cli
xchg
jmp
popf
xchg
data16
pop
push
outsb
cmc
jnp
dec
jl
xchg
jns
add
adc
pushf
lahf
lods
adc
xchg
cmp
inc
in
mov
xor
sti
xchg
sub
or
jecxz
xchg
aad
lods
cmpsl
js
sbbl
and
sub
imul
adc
xchg
sar
stc
sbb
test
outsb
fldl
push
inc
xchg
jp
dec
jmp
stos
mov
pop
popa
lahf
cld
jae
sahf
mov
xchg
out
stos
push
pop
push
xchg
shlb
call
inc
fdivr
fdivrs
add
adc
mov
dec
test
push
xchg
pop
mov
adc
cmpsb
cmp
stos
ret
pop
aas
lock
std
sar
outsl
mov
das
leave
push
stos
push
ret
and
out
rclb
pushf
cmpsb
sub
aam
mov
aaa
and
sbb
daa
iret
push
add
sbb
iret
or
xor
push
in
loop
cmp
stos
sbb
dec
dec
dec
inc
cmpsb
xchg
lcall
push
rcr
sub
inc
cmp
xor
movsb
mov
and
xor
shll
mov
or
repnz
rcrl
cltd
mov
mov
mov
jmp
bnd
andb
mov
xchg
notl
fsubl
sti
add
add
sarb
jb
lcall
testb
rcrl
sbbb
mov
cmp
aam
jmp
std
mov
xchg
mov
shlb
xor
and
popf
sub
aaa
shlb
inc
jbe
in
cwtl
push
add
mov
movsl
mulb
xorl
stos
mov
adc
clc
sbb
mov
lds
dec
cmp
lea
sub
movsl
xchg
mov
or
lret
sbb
mov
fidivrl
push
pop
sbb
notb
nop
mov
and
add
je
jge
jno
aas
push
adc
loope
or
mov
pop
cmp
or
dec
mov
cmc
repz
xor
cltd
xor
jns
movsb
or
add
xchg
and
scas
xchg
rolb
and
cmpb
dec
in
xor
ret
xchg
jp
mov
mov
lods
jmp
lds
cmpsb
mov
xor
stos
stc
mov
add
shlb
enter
cmp
xor
xor
loope
inc
and
out
xchg
hlt
jg
outsl
jmp
mov
pop
sub
pop
and
mov
ficomps
push
xor
push
outsl
xchg
aam
add
fisubrs
mov
push
inc
jbe
daa
std
jmp
ss
shlb
in
mov
jnp
fucomi
js
jb
ja
sarb
movsb
sti
pop
cltd
jno
push
fsubl
inc
scas
lret
int3
out
mov
ss
push
les
jecxz
mov
sub
lods
sub
dec
sub
add
ss
movsl
out
adcl
enter
inc
mov
shll
imul
call
dec
loop
push
pop
pushf
push
inc
xchg
insl
xchg
test
adc
jbe
repz
movsb
js
push
inc
addr16
cmp
mov
cmp
dec
jmp
loop
lcall
adc
es
xor
xor
and
scas
test
xchg
nop
pushf
dec
mov
dec
mov
mov
cmp
jecxz
orl
push
or
mov
xchg
fsubrl
out
into
pop
cli
jecxz
int3
fldenv
sbb
sbb
jno
xchg
cmp
popa
lock
cmp
fcomip
int
rcll
sbb
jmp
fmul
pop
sbb
add
xchg
or
cli
lret
test
xchg
outsb
fadd
xorb
add
and
sub
sub
dec
mov
fdivrs
mov
mov
mov
push
aad
mov
jns
sub
dec
int
imull
xlat
idiv
fbstp
xchg
rolb
sub
inc
test
cmpsb
mov
inc
cmpb
stc
inc
sub
ja
cmpsb
or
xor
dec
xor
pushf
imul
pop
inc
push
cmp
aad
mov
mov
and
fcmovnbe
cmpsl
cmpsl
nop
and
jge
adc
fisttpll
dec
inc
ret
loop
lcall
test
sub
mov
dec
inc
faddl
nop
sbb
pop
and
sbb
cmpsl
cmc
inc
jg
dec
divb
dec
pop
or
jecxz
sbb
or
outsl
dec
aaa
pop
fwait
insl
fucomi
and
rorb
stos
or
mov
push
inc
test
jge
dec
subl
in
fistps
mov
or
push
jp
into
dec
call
mov
mov
loop
inc
mov
pop
jle
ljmp
jg
push
xchg
idivb
sarb
pop
je
xchg
sbb
insl
shl
jge
mov
inc
pop
hlt
mov
sub
fcoml
dec
stos
xorl
mov
fwait
sub
pop
jbe
jno
push
aas
mov
jb
add
cltd
shll
sub
cmp
insb
sub
sbb
add
shrb
mov
adc
push
xchg
or
dec
outsl
clc
mov
out
fnstenv
lods
jmp
sub
scas
jne
xor
ret
or
fstl
fildl
pushf
out
mov
mov
dec
mov
sub
pop
dec
hlt
pop
jmp
out
push
dec
imul
popf
dec
aaa
jp
rol
cli
pop
cmp
adc
push
inc
sti
and
jae
mov
xor
inc
idivl
dec
dec
xor
cmp
xor
jmp
std
roll
mov
push
testb
call
sahf
mov
nop
fsts
xchg
into
rol
xchg
std
fdivrp
xchg
inc
test
jmp
adc
xor
std
cmp
and
jle
xchg
sbb
xor
lea
cmp
add
sbb
fiadds
inc
shll
cmp
or
pop
inc
jb
mov
xchg
in
rorb
adc
in
outsb
push
dec
mov
popa
push
rcr
jb
jo
mov
cwtl
jmp
ret
sti
mov
inc
repnz
push
cmp
sahf
mov
mov
imul
dec
cmc
hlt
add
add
test
lods
jo
hlt
xor
cmpsb
stos
icebp
and
xor
jecxz
add
xlat
jmp
out
popa
xchg
into
mov
js
fmull
neg
sub
imul
add
push
mov
cwtl
cmp
scas
push
test
fs
in
mov
cmpsb
movsb
fldt
add
cli
sub
insb
add
cmp
push
ja
mov
test
xchg
ljmp
negl
mov
mov
icebp
test
or
fiaddl
arpl
push
xor
xchg
aam
out
lcall
hlt
shlb
mov
dec
pop
lret
insb
mov
cli
mov
mov
dec
adc
jp
stos
sbb
sti
dec
ss
sub
jno
adc
in
sbb
ret
popf
pusha
jge
popl
and
lcall
pushf
mov
cwtl
lret
jge
fwait
repnz
adc
adc
imul
dec
popf
andl
int3
test
addb
adc
int
sar
jge
and
push
bound
adc
arpl
add
or
mov
xchg
sbb
outsl
and
xchg
push
mov
mov
pop
sub
out
jo
and
sub
jae,pn
imul
lods
add
bound
shrb
jecxz
jle
aaa
dec
imul
sub
push
leave
pop
jmp
adc
sub
gs
insb
mov
dec
add
jbe
cmp
aad
lret
jge
repz
dec
dec
xchg
sub
cmp
mov
add
mov
js
ficoml
push
inc
ret
repnz
repz
push
add
outsb
push
fld
imul
fcoml
mov
pop
ds
aas
and
xchg
push
insl
addl
xchg
jnp
scas
jg
lods
dec
pop
sub
and
mov
pop
stos
xchg
sti
sbb
cmpsl
sbb
loop
hlt
test
jmp
inc
pop
adc
pop
sub
sbb
mov
adc
jp
jns
cld
out
test
push
cmp
cmp
add
inc
sub
les
or
lcall
fnsave
out
push
lock
add
push
sbb
test
imul
push
ja,pt
cld
inc
mov
scas
mov
jo
icebp
mov
mov
pop
out
mov
leave
test
stos
leave
dec
push
jns
jae
push
int3
in
in
lods
cmpsl
xchg
mov
adc
sbb
lahf
and
inc
popf
pop
lret
xor
nop
push
stos
pop
icebp
stos
loope
adc
add
imul
adc
mov
cs
imulb
xchg
pop
shlb
fs
pop
xor
cld
or
xchg
mov
ss
cwtl
roll
ret
add
mov
or
and
mov
sub
fs
stc
cmp
in
fsubr
mov
adc
or
hlt
into
jmp
xchg
push
stos
ret
cld
xchg
xchg
cltd
fnstsw
test
dec
andb
mov
push
push
mov
lods
out
lret
out
bound
sarb
xor
and
loop
stos
mov
adc
lea
sub
in
jb
push
insb
xchg
aam
imul
jmp
dec
inc
fiadds
mov
in
fildll
stos
jo
les
xchg
cltd
cs
ret
jb
movsl
pop
push
jg
push
fildll
add
jl
loop
cwtl
xchg
cmp
ja
test
push
sub
lock
or
rcrl
test
mov
icebp
nop
lahf
mov
in
stos
adc
sbb
mov
mov
cld
leave
jo
loope
sbb
dec
stos
imul
cld
jno
jae,pn
out
mov
subb
mov
xlat
xor
cltd
mov
sub
jecxz
cmp
sub
adcl
je
xchg
push
dec
cmp
push
scas
add
movsl
mov
pop
leave
and
rcr
sbb
or
repnz
or
push
adcb
das
imul
mov
pusha
mov
stc
js
sarb
and
push
repnz
inc
xchg
pop
xorb
sbb
mov
push
jnp
jne
mov
repz
push
mov
stc
mov
xor
repz
jnp
push
repz
shrl
or
stc
pop
movsw
xchg
into
aaa
jl
pop
lock
mov
nop
or
xchg
int
testb
xchg
std
dec
mov
jp
arpl
js
push
cltd
out
push
fisttps
mov
insl
and
xor
popf
and
or
stos
pop
insb
inc
rcll
fsubrs
data16
mov
dec
add
xchg
cmp
dec
push
or
mov
int
fdivr
fdivs
and
lcall
or
mov
imul
add
xorl
jnp
bound
movsl
or
push
add
leave
jne
sbbb
cmp
or
sub
adc
dec
lock
cmp
imul
adc
and
or
lret
inc
mov
clc
sarl
fmull
and
xchg
pop
ds
add
subl
cmpsb
xchg
daa
nop
or
subl
add
xor
icebp
lret
mov
sbb
push
std
test
in
loope
fsubs
fisubrs
sub
cmp
sbbb
fisttpl
clc
repz
aam
jns
scas
int
cltd
cmpsl
add
sbb
adc
loop
xchg
inc
sub
xorl
cmc
sub
cs
imul
push
sbb
sbb
ret
out
inc
cmc
jne
lds
jns
or
cmp
ja
jnp
roll
arpl
bound
ud1
loop
out
clc
dec
and
adc
lock
pop
iret
sub
xlat
push
sbb
inc
dec
or
int3
adc
insl
nop
pop
and
aad
add
inc
mov
insl
dec
mov
pop
cs
ja
ljmp
sub
rcrl
push
sbb
inc
push
push
aam
inc
push
mov
mov
xor
and
xchg
or
or
or
mov
je
cmp
jmp
and
push
in
mov
adc
adc
mov
rorb
imul
adc
leave
xor
xchg
sub
adc
js
fcmove
adc
lret
xor
mov
sbb
je
jmp
hlt
sub
je
aam
out
divb
iret
xchg
ja
mov
add
xchg
fwait
dec
cmp
push
in
aad
enter
nop
xchg
mov
je
inc
outsl
cltd
outsl
test
mov
lods
lcall
outsl
pop
mov
dec
mov
jp
movl
in
sti
and
ficoms
mov
out
xor
xor
add
int
xchg
xchg
mov
push
stos
dec
aas
inc
fisttpll
loop
pop
pushf
and
pusha
cs
hlt
mov
mov
leave
inc
movsl
leave
pop
repnz
cmp
push
dec
sbb
decb
mov
mov
dec
aam
ja
mov
stc
and
sbb
outsb
sub
orb
rcrl
sarl
xlat
sub
and
popf
dec
mov
cmpsb
fs
xchg
pop
add
ljmp
cmp
push
and
popf
insl
popa
push
sti
inc
cmp
pop
xchg
les
cli
mov
push
push
scas
push
dec
adc
mov
out
aas
leave
jg
lret
inc
ss
test
movb
leave
add
or
pop
sti
pop
lea
jnp
fistps
xchg
xor
pop
push
dec
arpl
sbb
pushf
dec
fistpl
or
and
repnz
and
jns
xchg
ds
mov
lahf
sti
fs
pop
adc
pop
sahf
int
nop
add
scas
push
test
mov
and
mulb
mov
jbe
xchg
xor
aad
cmp
movsb
or
imul
adc
hlt
icebp
xchg
scas
mov
dec
cmp
adc
or
or
and
push
push
mov
sbb
xor
orl
jmp
xchg
popf
xor
add
mov
test
ja
xchg
pop
xchg
cmpb
mov
mov
pop
fisubrl
or
into
lock
xchg
leave
push
repnz
xlat
adc
pushf
xchg
loope
mov
roll
cltd
aas
je
outsb
pop
sbb
sub
sbb
dec
hlt
xchg
shr
xchg
insb
scas
xchg
clc
std
movsb
push
and
add
xchg
sbb
aas
sti
mov
ljmp
loopne
xchg
popf
ds
xor
cmpsl
jbe
mov
mov
leave
cmpsb
mov
xor
aam
jecxz
imul
mov
aas
jo
cmp
push
add
daa
cld
sarl
daa
test
and
je
or
aaa
fisttpll
imul
pop
or
fsub
pop
jbe
push
sbb
test
jae
leave
jne
bound
pop
push
sbb
cltd
stos
pop
push
stc
popa
pop
leave
aaa
xchg
pop
or
pop
push
dec
mov
mov
mov
jbe
sahf
push
sub
insb
test
xchg
push
lcall
mov
cmpsb
lret
xlat
dec
jns
movsb
sub
mov
inc
into
out
int
insl
jle
aam
mov
ret
cmpl
icebp
iret
cmp
aad
rcl
xor
mov
push
insl
push
repnz
in
inc
cmp
js
popf
push
ret
sahf
out
mov
aad
xchg
mov
pop
imul
ja
call
mov
lods
xchg
add
inc
cmp
in
dec
das
enter
inc
sbb
dec
jae
xchg
outsl
mov
or
jne
fnstsw
ja
jp
mov
cmp
test
dec
jle
in
mov
scas
add
in
sub
sbb
in
loopne
adc
cmp
inc
test
sbb
sbb
lods
adc
cmpsl
mov
test
sbb
inc
mov
xchg
add
das
sub
scas
adc
cmpsl
xchg
out
xor
or
inc
mov
pop
out
pop
pop
test
cmp
adc
int
xchg
push
mov
icebp
aam
xchg
jbe
aad
mov
ficomps
cmpl
in
cmc
mov
cmp
sub
popa
int
hlt
in
cwtl
xchg
jge
inc
stc
decl
loope
int
cmp
mov
scas
jle
push
ljmp
or
bnd
sbb
cmp
mov
ret
aas
cmp
sar
pop
push
inc
in
add
dec
shll
or
fdivp
pop
mov
jge
mov
mov
push
pop
test
sbb
push
dec
pop
test
popa
dec
cmp
dec
cmp
aad
xchg
loop
leave
add
in
mov
xchg
addr16
je
cmp
lds
xor
sbb
sub
cmpsl
in
js
sub
lods
test
scas
jae
push
ret
lock
insb
movsl
fists
jbe
adc
mov
nop
ja
mov
jnp
push
pusha
lea
enter
and
inc
mov
pop
sbb
pop
pusha
popa
xchg
adc
scas
hlt
sti
sbb
jo
xor
dec
lret
add
gs
sbb
lods
push
dec
aas
pop
mov
sbb
sub
stos
addb
imul
jmp
je
popf
lret
xchg
pushf
dec
mov
sahf
dec
sahf
addr16
mov
cld
mov
sub
push
add
sbbl
ds
movl
aaa
sub
push
cmp
cmp
fildll
push
sbb
sbb
incb
aaa
xorl
sbb
and
push
pop
andb
pop
icebp
out
ljmp
dec
pop
mov
pop
pop
int3
jae
call
enter
aaa
add
ret
jmp
mov
div
jo
subps
mov
jo
cld
nop
push
cld
inc
and
into
pop
inc
mov
lds
ss
mov
xchg
push
push
fcoml
mov
push
dec
out
sti
out
adc
aaa
fs
push
sub
out
push
movsl
fnsave
std
insl
fimull
mov
outsb
stos
aad
in
enter
cli
lods
rcll
mov
and
enter
aas
push
imul
test
dec
imul
xor
or
sahf
sub
ret
jl
sub
lcall
xchg
mov
aaa
adc
jae
push
dec
stos
hlt
vmread
out
xchg
cltd
xor
mov
sub
data16
adc
fldlg2
subb
int3
in
rol
das
and
loopne
jp
gs
sarb
scas
ret
sbb
mov
gs
cmc
cmp
leave
pop
jg
add
call
jb
jmp
sbb
jg
dec
lea
mov
mov
lds
mov
sarl
inc
aaa
xlat
sub
jb
mov
cmp
mov
adc
mov
xchg
lret
loope
stc
push
rorb
popf
fcomip
lock
sbb
dec
pop
cmp
push
add
in
ds
icebp
adc
out
mov
sbb
imul
fdivl
stos
arpl
xor
adc
leave
mov
sbb
int
xchg
aam
or
ds
stos
dec
dec
dec
es
repz
pop
mov
rclb
pop
push
add
lea
stc
jg
enter
sub
jp
leave
in
stc
mov
mov
imul
jmp
inc
mov
mov
fisttps
jae
mov
in
cli
cmp
mov
sbb
test
fs
sub
cltd
leave
adc
xchg
ret
mov
movsl
dec
out
jne
fwait
jno
addr16
out
fwait
inc
xor
mov
addl
jno
push
jmp
ljmp
mov
mov
push
push
mov
sub
popf
or
jecxz
dec
stos
nop
jge
mov
rorl
addl
mov
mov
mov
sbb
sti
xor
lret
jbe
inc
es
dec
incl
pop
and
aas
push
arpl
movsl
sub
or
add
ds
adc
ds
and
dec
mov
xor
scas
xor
dec
xor
adc
mov
loope
dec
imul
sti
sahf
push
mov
mov
out
mov
outsl
cmpsb
in
push
cmp
aam
jno
sbb
mov
les
in
adc
cmp
xchg
dec
clc
iret
fisttpll
fisubl
pop
add
shll
pushf
fs
popl
imul
or
mov
incb
fcomps
pop
maskmovq
negl
out
fildll
lret
imul
fstps
mov
adcl
mov
in
inc
imul
mov
fimuls
lahf
aad
push
rcrb
xor
outsl
ret
jbe
sub
shll
pop
gs
incb
dec
mov
imul
push
lods
lret
cli
and
mov
outsl
out
sbb
xchg
xor
push
sub
hlt
shlb
imulb
cld
cli
xor
jnp
and
sub
push
stc
cmc
mov
inc
pop
idivb
pusha
xchg
shrl
xor
sub
es
sbb
repz
push
cwtl
xchg
leave
test
dec
test
movsb
push
bound
cmp
add
add
notb
mov
pop
int3
or
imul
movsl
jnp
pop
sahf
call
sbb
mov
sti
jmp
imul
and
mov
scas
pop
sbb
mov
jecxz
mov
popf
pop
jne
ja
cs
mov
or
shrl
cmc
pusha
jb
or
stos
xchg
xchg
sbb
and
jnp
xor
loopne
fstpl
xchg
mov
push
sbb
ret
pop
hlt
add
inc
leave
and
jb
call
pop
mov
xorb
xlat
shrl
jecxz
add
mull
outsb
stc
cli
push
ret
mov
fildll
inc
inc
and
lea
jnp
out
mov
push
inc
movsb
mov
test
popf
mov
ss
sub
mov
push
mov
cwtl
cmpsb
cmp
dec
push
js
idivl
xchg
addr16
mov
cwtl
or
add
fs
push
imul
call
lcall
sub
cli
cwtl
and
cmp
aad
mov
mov
imul
imul
lock
and
bound
mov
xor
dec
adc
pop
mov
cwtl
mov
dec
sub
cmc
and
dec
cwtl
xor
ja
cs
test
popl
push
xchg
test
xchg
mov
ret
aas
rclb
and
scas
repnz
mov
lds
sub
popa
mov
sbb
add
jp
sbb
popa
sbbb
or
sahf
push
insl
cli
jae
mov
ds
xchg
sbb
iret
stos
inc
and
sub
mov
aam
movb
mov
imul
fcompl
daa
iret
inc
cmp
xchg
movb
jp
stos
mov
pushf
fcomip
sub
rorl
dec
mov
adc
lret
bnd
mov
adc
mov
push
loope
movsb
int
adc
cld
icebp
jge
mov
add
popf
xchg
mov
test
mov
inc
in
std
mov
das
test
jae
sub
pop
in
fmull
aad
icebp
jbe
jbe
pop
xor
mov
mov
repnz
mov
repnz
test
push
loop
scas
mov
stos
dec
sti
lock
into
fnstenv
cmp
lock
mov
add
xor
loope
xor
or
fidivs
xchg
shrb
inc
dec
mov
jns
movsl
test
aad
push
jmp
cmc
mov
test
mov
xchg
arpl
cmpb
mov
std
lcall
jae
cmpsb
dec
rclb
lds
outsb
ljmp
jge
lcall
push
int3
daa
jo
inc
out
sahf
imul
or
xor
dec
ds
pop
repz
push
lret
pop
sbb
and
test
mov
cmp
outsb
js
jle
inc
ja
or
mov
mov
mov
and
jne
or
or
cmp
mov
mov
adc
inc
aas
mov
aas
cmc
popf
sbb
lahf
repnz
imul
mov
ja
into
jno
cmp
lds
dec
or
or
pop
xor
xchg
xchg
test
outsl
xchg
mov
push
ret
inc
in
pop
cli
mov
js
mov
enter
pop
mov
into
sub
jns
clc
mov
pop
inc
jne
jl
add
pop
mov
mov
enter
cmpb
imul
shrb
adc
xchg
out
jno
adc
scas
jae
in
push
fisttpll
mov
fdivl
je
and
pop
inc
sub
daa
inc
and
sub
movsb
int3
inc
mov
mov
cmpb
ss
jmp
out
mov
fwait
int3
loopne
test
imul
jne
jbe
xchg
add
shll
pop
pop
jle
lret
daa
xchg
or
iret
sbb
push
ret
xor
mov
or
out
mov
jne
imulb
insl
sti
jg
push
in
rcrl
mov
xchg
lahf
xor
movsb
loop
sub
mov
xchg
xor
xchg
scas
jnp
fcomps
push
fiadds
push
lcall
cli
outsb
decb
pop
xor
mov
scas
cltd
dec
jmp
fwait
enter
or
push
out
in
test
jp
or
adc
cmpl
dec
mov
lods
push
xor
inc
or
pop
jns
add
jle
mov
xchg
insl
leave
mov
mov
cmp
xchg
addr16
sub
sbb
daa
jl
xlat
mov
in
cmp
cmpsl
js
aam
lods
ljmp
inc
scas
cltd
pop
jns
push
adc
js
sbb
cwtl
xchg
orl
xchg
pop
xor
popf
push
int3
pop
bound
mov
aas
in
inc
jne
ss
cmp
sbb
ret
fsubl
mov
loopne
push
add
testl
push
out
fs
fdivl
imul
out
add
jp
sub
xchg
mov
fnstcw
lods
cwtl
xchg
cmpsl
add
pushf
in
push
or
orl
push
cli
dec
xor
aaa
ss
inc
out
sbb
xchg
adc
dec
xchg
xchg
push
dec
jnp
jl
stc
fs
pop
xchg
jge
clc
or
jmp
rorl
repz
lcall
call
test
mov
pop
add
cmp
and
lods
insl
xor
add
leave
add
or
cli
pushf
dec
shrd
pop
dec
pusha
sub
aaa
add
sbb
or
cmp
je
jnp
lock
push
into
jae
add
inc
mov
mov
inc
xor
cmpsl
lds
fdivp
mov
cs
inc
mov
sarb
inc
movsb
sbb
movsb
mov
aas
inc
mov
arpl
jecxz
jae
mov
stos
scas
push
mov
test
dec
jmp
loopne
es
in
mov
icebp
or
xor
in
pop
popf
jg
imul
or
dec
mov
jnp
lret
ss
fists
jnp
pop
and
jnp
icebp
shr
adcl
pop
fisubrl
mov
jae
mov
int3
nop
data16
cmp
xchg
sbb
mov
dec
inc
je
xor
pushf
jo
adc
mov
in
fcmovnbe
add
shrb
loopne
inc
icebp
loope
repz
in
lds
mov
je
and
lea
and
ret
xor
aam
mulb
mov
test
sbb
dec
roll
and
rcrl
xlat
lds
in
or
out
pusha
jmp
jmp
rcll
ficomps
adc
cld
push
mov
jmp
cmpsb
jmp
cltd
add
sub
mov
or
jp
inc
inc
enter
add
rcrl
popa
xor
dec
jne
fwait
mov
das
scas
ret
jo
pop
mov
popa
and
jae
xchg
popa
push
int
dec
and
inc
loope
enter
cli
push
sub
dec
sub
notb
das
push
mov
js
lcall
mov
imul
dec
popf
mov
into
daa
pop
or
jl
loop
inc
popa
or
clc
cmc
inc
bound
jp
adc
in
sbb
add
jg
into
inc
imul
push
mov
dec
jmp
pushf
mov
pop
and
pop
dec
popf
push
sahf
push
orl
repz
mov
inc
pop
or
mov
xchg
ret
mov
and
dec
lock
dec
mov
sahf
test
sub
cmp
push
movl
push
sub
cltd
push
and
push
jp
jb
jmp
add
pop
mov
aam
sub
cmpb
xchg
push
mov
mov
fdiv
jb
mov
jmp
popa
mov
cld
xchg
rol
mov
imul
inc
fcoms
ret
lea
pop
cmpsl
in
xchg
mov
aaa
fadd
and
rcll
outsb
pop
stc
mov
das
or
cmp
sub
cld
je
fcomp
int
fdivrs
dec
push
hlt
mov
leave
and
js
and
mov
call
push
mov
mov
cli
scas
mov
push
fwait
push
aam
jg
xchg
xlat
imul
hlt
and
mov
sbb
push
scas
dec
dec
jmp
mov
mov
mov
sub
cld
xor
xchg
call
dec
pop
and
clc
imulb
fs
das
mov
out
push
loope
mov
xchg
xchg
xchg
mov
leave
lcall
lahf
insb
stc
popf
fwait
mov
push
addl
das
pop
ret
add
clc
outsl
jp
or
cmp
or
jae
insl
jle
and
cmp
sub
fwait
mov
test
hlt
jns
gs
add
dec
inc
popf
mov
cmp
in
push
push
dec
in
daa
rcrl
mov
push
jecxz
jecxz
stos
mov
lods
dec
les
in
out
pop
jne
dec
fldl
into
roll
ja
jl
outsb
fnstsw
shrb
addl
imul
mov
push
and
fisttpll
and
test
dec
push
setb
xchg
inc
das
sbb
inc
in
outsl
sti
fmul
fxch
dec
mov
aas
mov
cmp
and
stos
add
pop
test
mov
dec
lds
mov
pavgw
sub
aas
push
andl
push
dec
lcall
jg
mov
inc
in
jecxz
jnp
mov
lret
lock
icebp
fistps
fdivrs
sbbl
repz
pop
jne
adc
and
dec
sbb
mov
dec
insb
ljmp
repnz
cmpsb
rorl
stos
fwait
cmp
outsl
dec
xchg
popf
data16
or
sub
push
aaa
sbb
pop
out
xlat
sahf
bnd
mov
ss
push
add
push
lea
cmp
repz
das
pop
cltd
ds
or
insb
ss
push
sbb
xlat
push
lods
jo
xchg
adc
fsts
add
add
jo
sbb
cmpsb
leave
mov
jne
inc
cltd
and
fwait
cmp
cld
jo
add
into
out
sbb
fists
repnz
jb
lea
xchg
xchg
lock
rcrl
xchg
xchg
lods
push
xchg
cld
push
xchg
int
scas
pop
inc
pop
scas
int3
sub
cmc
or
cmp
pop
stc
cltd
in
jne
cli
js
add
fcomp
fisubrs
xchg
aaa
mov
fadd
pop
adc
and
or
xchg
cli
daa
pushf
loopne
nop
pop
pop
imul
inc
push
test
stos
sbb
iret
add
mov
mov
cmp
popf
add
test
lea
loopne
mov
and
xchg
inc
jle
push
mov
add
jecxz
xlat
into
sub
mov
cmc
mov
cmp
clc
rcrl
sbb
ljmp
icebp
cli
or
pop
jnp
aam
jno
sub
inc
fdivl
ljmp
mov
push
sub
sub
mov
cmpsl
jne
insb
cmp
sbb
dec
sbb
push
sbb
fmuls
lcall
in
in
mov
inc
mov
test
adc
sbb
adc
mov
inc
mov
mov
rcr
es
loope
mov
lock
mov
mov
pop
mov
lcall
adc
movsb
daa
adc
and
repz
add
or
jae
mov
addl
fisubs
lods
jmp
shrb
push
jae
inc
cli
pop
fwait
rorl
adc
cmovnp
loope
jbe
mov
xchg
jl
adc
adc
sti
mov
add
mov
mov
mov
rol
sbb
test
out
add
ss
sbb
into
xchg
loopne
imul
jnp
and
shrb
dec
mov
out
mov
jmp
into
aas
leave
fdivl
sub
ja
stc
lock
rclb
push
sahf
mov
mov
popa
dec
pop
and
cmp
or
outsb
mov
mov
mov
and
je
insl
xor
movsb
aam
jmp
jmp
stos
sub
xor
mov
ds
andl
inc
test
jnp
jl
stos
fwait
fwait
push
lahf
adc
and
pop
jecxz
fs
and
orl
in
push
xor
fsubp
hlt
mul
js
cli
pop
dec
cwtl
lea
rorl
sahf
jg
mov
popa
icebp
mov
push
pop
movsl
and
fwait
popf
jecxz
or
xchg
cmp
dec
cmp
xchg
jae
mov
addb
sahf
nop
mov
jmp
xor
sub
mov
rorb
cmp
into
cmpsl
adc
jns
add
pusha
aam
jl
jg
cmp
loope
and
xchg
fdivp
addl
sbb
es
cltd
jb
dec
jne
mov
pop
pop
sub
xchg
fstpl
roll
movsb
stc
inc
xchg
psrlq
and
into
mov
jo
loopne
sarb
xchg
adc
int
lods
xchg
lahf
outsb
scas
mov
mov
push
mov
in
xchg
and
inc
mov
jle
dec
mov
and
xchg
pop
pushf
ficompl
cmpsl
xor
pop
mov
inc
xchg
inc
iret
dec
in
or
cs
cmc
imul
push
mov
adc
adc
cld
rolb
jno
testl
enter
int
push
fwait
pop
inc
into
pop
repnz
stc
mov
sahf
stos
scas
cld
push
lods
mov
fwait
sub
es
xchg
mov
sbb
xchg
int3
pop
pop
fs
repz
mov
sbb
jb
fistl
icebp
pusha
outsb
mov
popa
adc
mov
mov
ret
jb
add
mov
popa
insl
push
outsl
sbb
sbb
movsl
out
addl
jne
stos
in
jecxz
icebp
xor
mov
xchg
inc
adc
cmc
push
lcall
fs
and
jb
imul
pushf
scas
and
addb
fisubrl
push
js
notl
jecxz
ret
add
or
mov
xor
mov
and
inc
push
pop
xchg
adc
test
into
push
mov
cmc
fldl
negb
lock
jg
jl
int3
inc
gs
sub
dec
xchg
inc
scas
out
push
jp
add
pop
mov
scas
bound
aaa
into
fwait
jmp
dec
aaa
mov
push
cmp
lahf
lahf
mov
lret
data16
popf
jge
scas
adc
rol
loop
inc
out
pop
cld
les
xorl
mov
mov
and
in
mov
xchg
xor
push
aad
lods
fcomps
push
fistpll
gs
sti
xchg
jne
sub
sub
mov
les
mov
movsb
mov
pusha
cmp
inc
inc
js
stos
jg
addl
sbbl
mov
aaa
mov
cmp
dec
mov
sbb
aas
testb
shr
test
mov
jmp
hlt
mov
sub
pusha
add
ja
sbbb
je
fdiv
mov
or
or
add
add
sbbb
sahf
mov
sub
idivl
pop
cmpsb
sub
aam
test
ljmp
xlat
inc
mov
xor
je
and
shr
dec
pusha
punpckhwd
mov
movsb
test
sar
dec
jne
inc
xor
insl
cli
xor
pop
out
sbb
into
mov
loopne
xchg
mov
lods
call
push
outsl
push
icebp
rcll
aam
outsl
xchg
das
rcrl
xor
stc
data16
add
cmp
xchg
push
jne
and
jb
jo
lcall
sub
sbb
and
popa
mov
inc
mov
mov
jmp
sub
jae
sbb
adc
cld
add
pop
gs
jecxz
pop
adc
stc
test
test
jns
out
adc
push
mov
mov
push
jg
in
or
fs
sti
aam
arpl
jne
lret
or
nop
lret
push
cmp
movsl
pop
gs
dec
ds
shlw
adc
popf
lret
xchg
pop
loopne
mov
stos
repnz
dec
out
or
out
jae
inc
pop
in
sub
stos
repz
pop
and
jl
int
in
and
cli
popf
stc
push
int3
lods
xchg
fadd
and
add
inc
or
inc
sbb
divl
add
outsb
fldl
add
or
jmp
sahf
jmp
ret
jg
cmc
sub
inc
or
mov
in
or
xchg
or
pop
incb
arpl
add
jmp
mov
jmp
lret
add
pop
push
aad
add
inc
add
inc
ret
enter
pusha
push
jge
or
out
sbb
and
outsl
int3
lods
pop
adc
cmp
dec
rol
sti
xchg
inc
cs
jg
dec
mov
or
pushf
push
repz
or
sbb
and
icebp
or
cmp
and
sbb
add
repz
sti
mov
pop
lods
jno
fbld
mov
lds
call
fistpll
cmp
pop
and
mov
add
enter
inc
cwtl
stc
and
and
popa
mov
push
in
popa
jecxz
xor
and
or
mov
xchg
push
loopne
insl
jo
or
jmp
or
in
xor
movsb
mov
xor
dec
push
jnp
js
test
jmp
mov
and
imul
xchg
in
divb
jge
movsl
push
jns
dec
add
mov
push
popa
andb
ret
mov
sahf
inc
inc
pop
iret
insl
mov
je
inc
xchg
push
data16
iret
pushf
sbb
hlt
scas
ret
sahf
in
mov
xor
push
sub
pop
nop
pusha
jg
sbb
jecxz
incl
xchg
aas
aam
in
sub
add
xor
jge
dec
cmp
data16
jns
aam
sub
sbb
sbbl
in
adc
inc
xchg
jl
mov
ret
pop
push
loop
nop
mov
je
sbb
hlt
pop
pusha
mov
xchg
aaa
fisubs
inc
xor
sbb
pop
mov
fcoml
xor
sbbb
fwait
and
insb
or
and
sub
in
bound
mulb
dec
lds
pop
xor
cmpsl
iret
xchg
pop
push
push
das
xchg
jg
push
stos
std
cltd
sbb
sbb
xchg
in
ret
or
aaa
or
jle
inc
icebp
sbb
or
cmpsl
and
shrb
dec
xchg
sbb
enter
daa
insl
jnp
push
cltd
ds
push
jle
stos
cltd
hlt
insl
mov
pop
xchg
lock
pop
adc
jge
xlat
mov
sbb
or
and
mov
popa
mov
sub
inc
push
sbb
sub
xorl
and
outsb
bound
jne
xor
push
movsl
inc
mov
sbb
xor
ljmp
ja
pusha
adc
add
cmp
cld
mov
sbb
loopne
xchg
xchg
mov
clc
icebp
test
sub
add
jmp
loop
xchg
sub
fisttps
aas
push
and
xchg
loope
mov
stos
test
popf
std
mov
aas
ds
adcb
in
push
andl
and
mov
arpl
scas
dec
jl
out
fcomps
loop
xchg
mov
mov
decb
ja
out
and
fldl
push
fildll
outsb
cmp
pushf
test
pop
enter
cmp
push
stc
push
push
sarl
and
jne
jle
xor
mov
pop
insl
jb
xchg
jge
cmc
adc
push
adc
lret
aaa
jbe
insl
sbb
imul
lahf
add
xor
ljmp
mov
or
arpl
xchg
insl
jge
pop
mov
dec
dec
pop
in
stos
stos
push
mov
mov
repz
repz
add
sahf
inc
xchg
and
in
cmp
jno
fwait
sub
or
mov
out
pusha
cltd
cld
outsb
sbb
and
daa
sub
adc
in
mull
aam
fs
push
out
add
out
xchg
jbe
les
jns
xchg
out
cmp
mov
or
in
insb
mov
push
mov
cmpsb
inc
out
add
mov
cld
adc
test
jg
mov
push
lods
shll
inc
or
mov
sub
mov
into
xorl
clc
shll
cmp
pop
xchg
inc
cmp
mov
push
repz
mov
adc
xchg
pop
sbb
jecxz
pusha
and
sbbb
sbb
cmp
ret
addb
adc
mov
add
sarb
outsb
inc
push
cmp
daa
out
inc
sub
icebp
or
jne
mov
cmp
jl
loope
bound
xchg
cmp
cltd
std
sub
jno
lods
add
and
leave
sub
xchg
and
xorb
in
and
push
sbb
dec
jge
sti
xchg
cmp
cwtl
xchg
inc
or
hlt
fimuls
jl
jne
jmp
mov
arpl
cmp
jl
out
rcrb
ret
into
mov
mov
int3
xor
addb
pop
pop
adcl
inc
aaa
popf
push
and
cvtdq2ps
mov
loope
sub
dec
data16
in
leave
test
jb
push
cmpsb
and
fucomip
mov
pushf
mull
jl
mov
das
sub
nop
insb
stos
inc
iret
push
push
sarl
sub
lods
outsb
xor
aad
fs
lcall
adc
push
sti
push
or
into
icebp
xor
sub
hlt
inc
addr16
popa
xchg
ljmp
es
jecxz
pop
dec
mov
xor
adc
decl
addr16
lret
iret
mov
or
xchg
sti
mov
xchg
cli
ret
mov
movsb
cmp
out
popf
ret
pusha
ret
aam
imul
push
movsl
xchg
xchg
sbb
and
sub
cmpsl
fnstcw
test
dec
dec
mov
dec
cmp
cli
clc
mov
ficoml
cmp
push
cmp
movsb
sbb
addr16
push
and
xchg
inc
mull
shl
nop
fists
nop
xor
cmp
sub
dec
sbbb
sub
xor
cmpsb
jo
fsubs
mov
mov
add
rclb
fldenv
lods
adc
adc
xor
sub
imul
pop
dec
jo
jecxz
data16
repnz
xchg
clc
cmpsb
call
imul
sub
mov
fsubs
lcall
stos
inc
std
sub
mov
xlat
or
mov
fistps
sbb
push
push
mov
push
leave
push
adc
xor
add
mov
or
test
mov
jnp
cmp
jge,pt
sub
testb
jo
popf
popf
ds
mov
aas
inc
enter
div
pop
notb
imul
or
loope
aam
mov
cmc
repnz
gs
cli
popa
test
lea
sbb
mov
sub
flds
mov
sahf
xor
add
fistl
sub
push
pop
jp
xchg
mov
fsubr
xor
push
fimull
push
push
xor
cmpb
jmp
int
outsl
and
iret
push
js
int3
adc
jbe
aas
lahf
pushf
jbe
add
sub
movsl
popf
cmp
pop
pusha
mov
sbb
adc
mov
leave
xchg
cli
and
inc
adc
testb
mov
sbb
shlb
idiv
inc
xor
loop
test
add
xchg
adc
xor
lock
test
cmc
cs
scas
push
test
shrl
jo
xor
sbb
ficoms
pop
loopne
testl
nop
in
cwtl
xchg
and
subl
enter
sbb
mov
cltd
cwtl
lock
inc
das
sub
cmpsb
xchg
nop
adc
std
cmpsl
inc
inc
add
cld
push
stos
rorl
andb
addl
dec
push
arpl
adc
sbb
fsub
clc
in
or
sahf
adc
popa
sarb
aam
stos
sahf
mov
pop
sub
loop
push
out
mov
ds
in
add
mov
mov
dec
dec
subl
fs
sbb
push
lcall
cmpsl
in
add
mov
cmp
inc
aad
xor
loope
idivl
and
cmp
xor
les
cwtl
dec
pop
and
outsl
xchg
jg
or
rorl
jns
mov
test
sbb
icebp
out
aaa
ss
mov
fcoms
lods
xchg
and
mov
xlat
ror
adc
loope
lcall
sbb
mov
fbstp
xchg
mov
nop
add
inc
jecxz
jge
push
push
add
lods
ret
push
sub
sub
xchg
dec
outsb
inc
xchg
loopne
xchg
or
sbb
push
or
inc
inc
sub
test
int3
insb
pop
xchg
cs
mov
xchg
fidivl
push
mov
fmul
xchg
in
stc
mov
imul
mov
fstp
insl
testb
jb
mov
aaa
daa
aam
imul
aad
pop
daa
sub
sbb
xor
movsb
pop
mull
inc
lods
xlat
jno
xor
stos
pop
inc
xchg
add
jae
mov
or
icebp
shr
pop
xor
mov
ret
cmp
mov
mov
scas
mov
fisttpl
scas
lea
sbb
dec
xlat
cmpsl
sbb
xor
cli
push
jnp
mov
fwait
or
mov
loopne
mov
sbb
mov
dec
push
sti
cmc
pop
xchg
mov
call
xchg
out
cmpsb
cmpsb
sar
and
fimuls
out
ljmp
cs
shr
fidivrs
sub
sbb
mov
lods
mov
lahf
gs
mov
movsb
vaddsubps
ret
dec
jb
and
idiv
leave
dec
push
jp
mov
rcll
mov
test
and
sbb
mov
jl
and
sti
or
lea
cli
ds
es
cmp
lcall
es
std
or
das
push
jae
shll
repnz
sub
adc
inc
xor
jge
rorl
stos
pop
iret
add
leave
add
mov
push
stc
insb
adc
ss
jo
lret
lds
mov
push
outsb
fbld
imul
xor
ss
jp
jne
in
popa
mov
out
cmp
out
jge
jecxz
shrb
xchg
jb
and
xchg
fcomip
xchg
add
xchg
dec
test
loopne
dec
fwait
dec
xor
jno
and
jne
dec
mov
mov
stos
and
xchg
aam
pop
ja
adc
sbb
mov
repnz
scas
inc
iret
out
push
jmp
lods
test
inc
mov
ret
idiv
or
push
in
fstpt
mov
std
hlt
out
jo
cltd
pop
stos
adc
lcall
sbb
sbb
rcl
cmc
xor
test
aaa
fstpt
push
sbb
and
dec
inc
cld
idivl
sub
and
daa
fwait
fcmovnu
jg
outsb
and
adc
scas
cld
inc
mov
and
adc
jmp
adc
xchg
jle
out
fwait
push
mov
in
jbe
ret
gs
shrl
or
dec
aas
das
inc
fcoms
cli
mov
sbb
in
test
inc
sahf
movsb
fcmovnu
outsl
pop
arpl
outsb
loope
in
jmp
inc
dec
mov
pop
mov
pusha
and
xlat
sahf
cmpsl
add
popa
cmp
je
cmp
mov
iret
in
xor
gs
push
add
xor
nop
pop
rcr
repz
inc
mov
mov
and
dec
cmp
sbb
push
or
jmp
sub
roll
sub
loop
adc
sbb
xchg
es
adc
sbb
lods
std
jl
xchg
sub
sbbb
mov
push
sub
push
ss
jp
jmp
inc
lods
jnp
stos
stos
add
push
dec
push
pop
andl
jno
fists
in
inc
das
test
outsl
fistps
or
and
jp
cs
push
loopne
sbb
mov
xchg
insl
icebp
sub
popf
pop
dec
cli
sti
leave
xchg
adc
rorl
mov
in
nop
push
xchg
jge
xchg
cwtl
mov
insb
or
add
dec
lds
inc
or
mov
pop
push
icebp
cmp
adc
add
pusha
fstpt
fdivs
sbb
inc
insl
data16
nop
fs
out
and
mov
ds
repz
sub
cli
add
push
aad
xor
jg
mov
ja
sarl
xchg
hlt
mov
push
pop
loop
jge
mov
adc
xchg
je
jne
or
divb
and
xlat
lcall
mov
add
sub
sub
mov
or
xor
pop
jmp
aaa
mov
int
das
lret
popa
lods
mov
out
mov
stos
push
adc
test
jecxz
push
fisttpll
out
cmpsl
push
es
fs
jbe
sub
jp
shlb
push
imul
xchg
cmp
mov
jo
add
sub
inc
mov
je
adc
ret
xor
test
testl
pop
test
cwtl
out
mov
cltd
dec
repz
jbe
sbb
in
and
imull
repnz
out
xor
fs
jb
in
xlat
xlat
outsb
mov
push
aas
push
ficompl
push
xor
sahf
imul
fidivrl
in
insb
repz
clc
inc
les
sub
fildll
xor
mov
mov
xchg
arpl
inc
adcb
push
and
mov
mov
cs
rorl
dec
cmp
pushf
das
xchg
or
fimuls
mov
movsl
xchg
jb
scas
pop
pushf
nop
and
jp
or
repz
enter
call
xchg
clc
cmp
out
add
ljmp
add
ds
loopne
pop
cltd
shr
je
dec
jp
inc
or
repz
inc
and
xchg
push
push
and
adc
rcll
loop
bound
xor
outsl
jmp
std
pop
pop
and
les
sti
dec
jmp
scas
ds
cmp
loopne
mov
shlb
cmp
scas
push
adc
push
cmpsb
mov
sub
ss
push
adc
mov
xor
test
sub
lret
dec
mov
sub
mov
or
sar
hlt
and
int
popf
ror
out
cmp
sub
mov
test
js
lcall
add
xor
push
lock
out
movsb
imul
pop
lock
mov
into
push
shll
or
push
adc
mov
inc
test
inc
insb
jno
shrl
aaa
mov
bound
test
xchg
inc
add
dec
sbb
scas
iret
inc
scas
repz
aas
cmpsl
dec
mov
xchg
movsb
adcb
cwtl
sub
movsb
ret
cmp
fdivs
out
xchg
xchg
pop
out
sbb
push
pusha
cmp
push
adc
add
imul
stc
xchg
and
outsl
pop
mov
adc
cs
outsb
lahf
adc
jg
enter
pop
mov
lcall
negl
or
iret
jecxz
mov
or
out
bound
cmpl
rcr
jnp
sub
dec
xchg
mov
fidivrs
mov
fidivrl
pop
mov
fdivrs
shl
out
cmp
dec
push
int3
mov
out
loopne
fsub
pop
pop
mov
dec
lds
call
notb
or
cmp
xchg
pop
mov
push
lcall
dec
insl
mov
and
clc
orl
adc
mov
mov
cmp
rcrb
jp
test
adc
dec
icebp
lcall
mov
sbbl
gs
dec
lock
in
lods
lea
xchg
cmp
aam
sbb
jl
cmp
xor
xchg
ljmp
or
jno
sbb
or
pushf
lret
jno
inc
push
push
xlat
testb
cmpl
sub
adc
dec
and
out
inc
add
fiadds
sub
xor
cmpsb
imul
and
or
sub
and
xor
stos
int
andb
mov
sub
xlat
fnsave
adc
stos
add
popa
cmp
inc
sub
fnstenv
data16
out
push
xchg
ret
mov
lds
gs
je
lret
call
lret
sub
jnp
cmp
sbb
dec
dec
ret
shrb
jg
lea
adc
inc
push
lods
push
out
ja
ss
int3
xchg
xchg
or
int3
aad
pop
push
test
loopne
inc
xor
cmp
jle
adc
and
aas
std
mov
int
sbb
or
call
mov
out
or
mov
mov
mov
mov
aam
pop
test
loop
cmp
pushf
add
mov
aaa
push
adc
mov
imul
in
add
rorb
adc
inc
es
sub
or
inc
mov
and
xchg
jecxz
adc
sbb
xorl
xlat
sbb
popa
push
jge
jmp
jg
sbb
fucomi
js
adc
inc
or
or
imul
mov
pop
xor
adc
mov
jmp
outsl
lcall
push
aaa
mull
aas
mov
jno
xor
push
outsb
scas
cmp
dec
jle
and
adc
mov
xor
enter
xor
sub
pop
addr16
mov
scas
add
sahf
out
pop
hlt
dec
aas
pop
fs
movsb
xor
ds
lret
rcl
es
test
jo
dec
mov
into
sub
shlb
add
lock
inc
arpl
or
and
sbb
cli
popf
rol
sub
xchg
in
sti
jmp
pop
call
pusha
pop
sbb
movsl
pop
cmc
cmc
mov
shrb
and
lahf
cmp
enter
mov
xchg
fistl
inc
inc
inc
out
jle
mov
in
jnp
in
dec
ds
or
int3
dec
mov
pop
aad
jmp
fcomip
jle
sub
hlt
add
ret
ljmp
cmp
lahf
pop
push
fstpl
fs
cwtl
std
mov
jns
mov
push
dec
js
sub
push
and
dec
repz
mov
call
scas
lods
push
ret
cmpsb
cmc
loop
pop
in
dec
ja
or
repnz
repnz
xchg
out
pop
push
ds
ror
clc
outsb
lods
shll
stos
sbb
and
daa
inc
js
ljmp
sub
and
test
in
mov
inc
jmp
cwtl
mov
lret
mov
pop
push
outsb
jae
mov
ret
fadd
and
mov
faddl
cmp
fisttpl
cmp
loope
or
inc
fwait
inc
int3
mov
pop
pop
inc
stc
fldcw
das
dec
jns
jb
in
sub
push
cli
out
mov
stc
mov
loope
ja
push
add
xchg
icebp
lods
dec
sti
cmp
pop
jg
cmpsl
jb
push
rcr
dec
cmc
add
les
pop
push
fisubrs
jp
adc
lods
jg
inc
scas
adc
outsl
xchg
aas
dec
pusha
popa
dec
ja
dec
ljmp
mov
in
jns
jge
fstpl
push
ds
cmpsb
out
pop
push
fmuls
jge
pop
sub
scas
int
jo
or
inc
add
lret
xchg
ja
int
push
push
stc
dec
jbe
jbe
and
push
mov
mov
cld
sbb
fcompl
mov
in
jl
scas
jp
in
or
jmp
cmpsb
dec
and
push
sbb
xor
cmp
adc
mov
pop
xor
push
shrl
pop
lods
jmp
ljmp
adc
shll
dec
test
adc
jecxz
lret
and
inc
xchg
inc
mov
xchg
dec
mov
or
jo
xor
scas
scas
sbb
jg
loopne
insb
mov
add
clc
add
sbb
xor
inc
adc
dec
add
mov
xchg
in
jns
ret
imulb
imul
scas
imul
lock
sahf
fwait
sbb
mov
ret
aas
and
aad
lcall
mov
sub
dec
mov
cmp
daa
mov
mov
out
add
sbb
out
sub
lods
mov
adc
fisubrl
lock
dec
pop
mov
add
fnsave
xchg
faddl
ret
insl
scas
mov
jmp
pop
fwait
cmp
sti
fwait
add
pop
pop
inc
xchg
ret
ret
push
xor
xchg
xor
add
mul
clc
inc
fdivl
pop
sti
sub
mov
in
pop
sahf
push
aas
cmp
jmp
int3
mov
push
fdivs
cmp
stos
push
push
jecxz
cli
repz
aas
lods
or
xchg
and
mov
mov
je
jl
pop
fstl
xor
imul
and
mov
adc
gs
cwtl
loope
aad
insb
inc
push
fwait
mov
orb
gs
add
sahf
add
data16
mov
xchg
dec
xchg
lret
add
inc
fnstsw
cs
aas
pusha
jecxz
inc
test
xchg
xchg
pop
push
adc
std
push
cmp
mov
imul
lock
iret
hlt
push
jno
add
sub
je
decl
and
sbbb
insb
mov
aas
test
adc
mov
xchg
clc
push
lock
mov
push
push
add
dec
add
repnz
call
shlb
xchg
cmp
imul
mov
xor
loopne
sub
lds
xchg
outsb
enter
js
andl
outsl
clc
cli
mov
dec
push
gs
adc
nop
cmp
xchg
or
inc
scas
shlb
lcall
daa
les
sahf
fsubr
jbe
add
inc
jno
fs
push
aaa
repz
call
sarl
stos
cmc
mov
insl
in
lcall
notb
ljmp
ret
xor
jnp
enter
stc
mov
lea
pop
cmp
icebp
jl
and
lods
mov
jge
dec
ljmp
pop
dec
push
in
sbb
pushf
aaa
inc
cmp
adc
add
sub
xor
pop
jp
add
imul
mov
js
imul
and
dec
mov
push
jae
out
mov
or
inc
dec
pop
add
adc
int
nop
imul
loopne
rol
insl
dec
jmp
add
test
std
lahf
inc
adc
test
leave
cmp
nop
inc
ret
popf
xchg
rclb
lods
inc
fdivrs
aaa
fdiv
mov
aaa
outsl
push
mov
add
lret
sti
sub
mov
xchg
xchg
cltd
nop
in
imul
mov
xor
sbb
jg
or
cmpsl
mov
mov
imul
pop
mov
pop
sub
ds
scas
add
dec
stos
int
loop
lods
dec
pop
test
ret
rolb
inc
add
mov
mov
sub
sti
sub
push
in
mov
loop
push
lret
add
sub
push
scas
mov
jecxz
pop
imul
jg
lcall
sbb
dec
pop
outsb
icebp
and
mov
xorb
jecxz
dec
or
fldl
adc
loope
in
cmp
cld
mov
jg
les
mov
test
pushf
or
imul
or
stos
sub
loopne
out
lods
fsubs
mov
rol
mov
mov
pop
sbb
es
sbb
bound
int3
cs
mov
adc
insl
cmp
mov
stc
cmpsl
dec
les
pop
ret
sub
fisubrl
addr16
xor
mov
cwtl
push
das
shlb
mov
outsb
sbb
xchg
mov
out
sub
jne
or
pop
mov
les
lret
xchg
and
cmc
mov
xor
mov
popa
rcll
adc
shrb
jne
mov
sti
notl
push
jg
mov
imul
or
clc
dec
fcmovnu
aam
fwait
js
mov
pop
insb
and
orl
xor
inc
sbb
andl
mov
sbb
fwait
add
test
pop
pop
ret
xchg
loope
mov
push
push
dec
ljmp
xchg
push
jecxz
pop
rorb
dec
je
sub
and
fcmove
movsl
test
lret
inc
out
pop
adc
mov
lea
dec
ret
adc
mov
pop
ja
adc
pop
xchg
daa
inc
or
loop
push
aaa
sub
dec
xchg
mov
adc
adc
call
pop
jmp
mov
bound
fwait
pop
dec
push
dec
fsub
popa
stos
mov
enter
jl
mov
push
adc
in
pop
sub
aas
aas
daa
icebp
jns
outsb
cmc
sub
aam
bound
jl
imul
ja
in
xor
pop
mov
stos
popf
mov
mov
daa
or
mov
insl
mov
dec
lcall
pop
movb
and
jmp
sub
mov
jns
cmp
or
int
mov
mov
ret
jecxz
xchg
mov
xor
push
cmp
cli
ret
pop
in
inc
mov
mov
sbb
mov
pushf
or
add
movsl
push
gs
cmpsb
mov
andb
ficomps
pcmpgtw
adc
or
lret
xchg
mov
mov
mov
insl
mov
je
and
mov
mov
xor
and
cmp
adc
and
gs
daa
xor
into
adc
mov
ret
lret
ret
imull
test
mov
mov
inc
pop
and
jns
cli
and
test
outsl
inc
push
jmp
and
nop
dec
subb
dec
pop
testl
mov
loop
outsb
or
cli
sbb
sahf
pop
adc
jecxz
js
xor
sub
xchg
adc
popa
xor
ret
mov
adc
push
mov
movsb
inc
or
cmp
mov
testl
pop
pop
mov
jno
loope
xchg
xorb
outsl
sub
push
mov
sbb
aam
int
out
sbb
dec
cmp
add
shll
adc
arpl
orl
mov
shlb
popf
ficomps
outsb
repz
push
xchg
es
xchg
mov
repnz
mov
mov
outsl
pop
add
outsl
xchg
and
sbbl
das
inc
cmpsb
out
stos
outsb
or
add
and
aas
add
mov
add
push
jb
jne
fwait
movsl
sub
insl
lret
mov
repnz
fisubrl
out
ljmp
pop
sub
or
iret
mov
test
es
add
scas
sub
lret
mov
inc
std
pop
cmp
mov
push
push
std
inc
add
fsubr
mov
xchg
aad
push
jp
js
popf
xchg
jae
mov
pop
mov
cmp
push
dec
cmp
and
push
xchg
xchg
repz
dec
sub
nop
push
rcll
push
or
sbb
jb
aas
scas
jge
jae
or
or
scas
pushf
or
xor
dec
les
cmpl
lds
cld
ja
xchg
rol
push
mov
push
popf
icebp
and
idivb
inc
mov
xor
inc
and
je
adc
push
jl
adc
inc
adc
lret
pop
test
dec
inc
scas
or
or
in
sbb
mov
cltd
imul
cmc
sub
inc
sbbl
push
fmull
rcrl
fcomp
mov
dec
jle
ss
lods
inc
jecxz
push
xchg
sub
ljmp
add
aas
test
daa
insl
cmp
ret
addr16
xchg
rclb
sti
xlat
lea
setne
jl
loope
ficoml
test
mov
mov
int
fldcw
sbb
jmp
roll
in
mov
mov
xchg
scas
sbb
inc
lods
das
sbb
jae
fnstcw
jne
xor
out
sbb
pop
mov
mov
inc
xlat
sub
inc
and
aam
push
pop
pop
divb
pop
aas
push
add
inc
shr
mov
lahf
pop
push
add
jns
mov
test
xchg
lcall
rolb
pop
in
push
rcl
xor
fcomi
movsl
xor
aad
cwtl
mov
dec
xchg
into
sub
test
mov
adc
lods
roll
fwait
jl
adc
arpl
xchg
jbe
cbtw
lret
mov
jae
xchg
lods
xor
mov
lds
fscale
insl
mov
lock
sahf
adc
xchg
lods
inc
lcall
into
pop
idivb
ret
mov
mov
pop
adc
jae
imul
add
aaa
jnp
inc
stos
fidivl
jne
out
loop
jle
shrb
jg
fs
jge
sub
icebp
test
test
dec
dec
das
cltd
out
mov
lods
cmp
xor
mov
and
xchg
lret
xlat
lock
into
ficoml
xor
les
xchg
cmp
inc
pop
cmpsb
xchg
mov
clc
test
sbb
mov
aaa
mov
add
cltd
ss
movsl
std
insl
xor
mov
imul
imul
jo
cmpsb
cmp
imul
jns
mov
adc
cmp
jecxz
mov
pop
sub
arpl
stos
xor
sub
jl
push
add
jp
pop
test
adc
jns
xchg
lock
daa
pop
mov
dec
loopne
cltd
imul
ss
push
fwait
lahf
pop
repz
test
sbb
pop
adc
xorl
mov
inc
repz
dec
icebp
mov
es
mov
mov
push
lods
pushf
fucomi
mov
mov
negl
es
jo
lret
inc
pop
movsb
xchg
and
mov
push
lock
sub
push
cltd
js
push
xlat
gs
inc
mov
shl
push
push
cld
ljmp
mov
add
aaa
subb
inc
pop
xchg
xor
push
out
cmpsb
xchg
jb
pop
cli
mov
xlat
jne
xchg
dec
stos
sbb
je
imul
movsb
jmp
imul
xor
sti
imul
inc
jno
push
mov
dec
jp
dec
lret
mov
jbe
cmpsl
pinsrw
cmp
mov
pop
out
lahf
inc
inc
push
mov
inc
mov
mov
push
adc
inc
imul
jp
fxch
jmp
bound
ja
and
or
adc
lods
ficoml
ret
xlat
cli
ss
in
mov
mov
jl
test
push
push
arpl
scas
xor
sbb
ss
mov
in
cwtl
pop
icebp
lock
leave
test
mov
push
out
adc
ret
jl
fsubs
or
mov
sub
lods
mov
repz
jl
mov
shll
add
jno
clc
ret
sti
xor
push
int3
cld
fidivs
addb
mov
insb
mov
jo
sub
cwtl
xchg
aad
std
ja
outsl
xchg
mov
in
xchg
ss
or
dec
adc
cli
mov
sbb
sbb
jb
adc
jge
sbb
outsb
adc
jae
unpckhps
cld
and
cmp
ret
mov
std
bound
jmp
outsb
test
pop
mov
shrl
test
loope
shlb
add
test
loope
sti
cmp
adc
pop
popf
xchg
sub
shll
push
negl
mov
sub
int3
mov
cmpsl
mov
les
outsl
shl
subl
mov
or
sarl
out
loop
cmp
sbb
rcrl
cmc
cmpsl
adc
jne,pt
mov
mov
ja
ret
movsl
dec
or
sbb
sbb
aas
pop
rcl
pop
add
cli
rolb
cmpsl
jecxz
divl
leave
sub
xchg
jae
inc
cmpsb
cmp
cmc
inc
add
lahf
xchg
pop
mov
dec
and
dec
or
testb
sub
sub
nop
inc
lods
sub
inc
sub
and
push
das
popf
in
sub
iret
inc
jl
push
push
lods
rcrl
pop
cmp
sbb
and
das
pop
and
xchg
pop
insl
xchg
xchg
ret
adc
xor
out
cltd
xchg
push
jmp
adc
cmp
fsubl
jb
jl
pop
xchg
jecxz
or
jo
inc
mulb
pop
xchg
sub
call
stos
inc
add
mov
mov
inc
or
movsl
out
in
jmp
push
sub
lods
add
jnp
je
jg
mov
adc
call
pushf
xor
sub
jb
dec
mov
shl
dec
cmp
in
ljmp
clc
push
push
add
dec
dec
push
push
cld
xlat
imul
pop
or
sbb
push
test
test
ja
mov
push
mov
hlt
fmull
mov
mov
pop
inc
push
adcl
and
imul
jle
outsl
into
cmp
push
mov
mov
push
mov
bound
std
loop
adcl
push
daa
or
fmuls
int
pop
or
jo
mov
fwait
rcrl
sti
in
xor
adc
scas
mov
add
insb
rclb
jne
jnp
js
xor
cmp
and
aas
cmpsb
ret
mov
orl
mov
mov
mov
loopne
mov
imul
test
lods
adc
xchg
pop
int
or
push
std
lods
push
int3
iret
mov
ret
push
dec
in
pushf
jle
sbbb
rcr
xchg
pusha
sahf
mov
sub
cmp
pop
mov
xchg
cld
lar
mov
mov
push
xchg
xchg
xchg
dec
mov
inc
jecxz
inc
fs
xchg
push
sub
js
call
mov
xchg
xor
sub
movsl
negb
sub
cltd
or
addr16
cmp
loope
shrl
mov
call
out
out
int3
enter
rorl
adcl
js
sub
and
loope
cli
mov
add
pop
gs
and
jmp
cmp
sub
rol
jg
mov
inc
sar
cmp
sbb
jb
fnsave
fbld
std
add
cmp
insl
jle
adc
push
push
popf
faddl
xor
int
es
or
ds
lret
lea
test
lods
setge
cmp
dec
inc
loopne
push
push
dec
loope
mov
test
mov
dec
push
push
add
dec
dec
mov
in
rorl
movsl
call
cs
add
add
test
mov
outsb
mov
add
sbb
ss
aas
jbe
adc
add
nop
test
mov
dec
or
inc
leave
inc
popl
lods
scas
cmp
sbb
dec
ljmp
test
push
ret
jne
mov
test
inc
fcompl
dec
icebp
or
dec
push
add
mov
stc
push
cmpl
in
inc
xchg
inc
cmp
jne
sbb
dec
ds
push
leave
pop
add
cld
ret
dec
pop
leave
pusha
sub
mov
clc
popf
test
rcrb
js
add
sarl
fsubl
sbb
xchg
pop
and
pop
sub
pop
xchg
pop
jl
cmpsl
xor
int
cmpsb
loope
rolb
mov
fisttpll
xorb
xlat
push
fwait
sbb
je
aaa
lcall
out
adc
sbb
push
in
mov
inc
and
fstpt
es
sbb
pop
cmp
lods
scas
fstpl
insl
mov
mov
mov
xchg
test
mov
xchg
mov
xlat
pusha
jno
in
call
cmp
clc
add
movsb
cli
fidivrs
and
dec
jns
mov
xchg
adc
or
add
mov
es
add
pop
mov
movsl
cmp
mov
pop
inc
out
push
mov
add
mov
cmp
sub
daa
push
in
dec
dec
sub
cld
negb
bnd
jb
push
mov
mov
sarb
jmp
add
orl
push
jl
sti
nop
mov
ficoms
lcall
push
into
pusha
xchg
pop
sub
cmp
std
inc
push
test
pusha
cmp
mov
or
stos
cli
and
mov
outsb
mov
adc
push
xlat
mov
rorl
jbe
ret
pop
xchg
movsb
sbbl
gs
mov
hlt
xchg
push
subl
inc
jb
pop
xor
adc
push
sub
pop
ficoms
int3
push
pop
popa
rclb
sub
push
adc
scas
popa
pop
mov
sahf
and
jg
pop
addr16
cwtl
fwait
mov
addl
mov
xchg
xor
pop
lcall
mov
lock
sbb
hlt
adc
ffreep
sub
gs
cmp
xchg
jle
jo
fdivs
sarb
mov
sub
aaa
or
rorl
cs
cmp
ja
addr16
jp
lahf
mov
inc
pop
jg
adc
mov
shrb
cli
xor
lock
cmpsb
and
jno
or
stos
xchg
pop
add
xchg
movsl
or
ficomps
repnz
jge
pop
pushf
repz
mov
mov
mov
test
or
test
adc
notl
pop
int
sbb
faddp
xchg
in
dec
leave
adc
dec
lods
add
cmpsb
clc
xchg
mov
or
xchg
loop
test
push
pop
mov
cmp
ja
mov
test
in
dec
cmc
sub
and
cs
sub
les
mov
and
addr16
in
in
and
xchg
inc
jle
push
dec
out
jp
xor
xlat
or
movsb
add
movb
idivl
out
mov
loopne
dec
cmp
div
adc
xorl
xchg
scas
lds
out
out
jmp
jne
test
ljmp
mov
sbb
nop
dec
insb
and
hlt
popa
add
in
hlt
cmpsl
sbb
pop
cs
shrl
push
cmpl
jle
jge
das
gs
int
cmp
iret
aam
cs
jecxz
push
lret
sub
pop
lds
push
xchg
div
mov
jmp
lds
pop
repz
mov
cltd
inc
xchg
pusha
xchg
cmp
cld
shl
ror
pop
adc
or
lret
mov
xchg
filds
jge
std
jecxz
addr16
popa
adc
in
shrl
lret
lea
clc
push
aad
ror
lret
sub
sub
pop
and
fwait
repnz
sub
mov
sub
or
test
or
sti
mov
fs
out
shlb
mov
mov
pop
sahf
push
hlt
mov
adc
xchg
jns
jecxz
stos
jg
cmpsb
pop
fwait
addl
mov
xlat
lret
xor
sahf
ror
pop
fbld
int
out
xor
xor
fistl
xchg
jl
mov
mov
and
xor
cmpsl
jge
mov
push
xchg
loope
mov
inc
mov
mov
cmp
and
out
ret
adc
lret
xchg
cmc
push
in
cmp
xchg
mov
cmpsb
mov
pop
mov
push
xlat
test
repnz
xchg
test
inc
ja
ja
jge,pt
push
push
and
ljmp
xchg
in
into
cs
jne
or
add
aaa
lret
fs
divl
xor
lods
xchg
sbb
dec
fstl
push
std
ljmp
mov
subb
push
cmp
push
sbb
es
pop
dec
mull
xchg
imul
int
mov
cmpsl
js
dec
mov
push
cwtl
mov
rcrl
jecxz
and
adc
cmpsl
inc
xor
push
inc
icebp
lods
out
movsb
mov
cwtl
hlt
imul
xchg
and
pop
idivl
add
mov
repz
decb
xchg
shlb
inc
mov
and
cmp
scas
sub
push
ja
push
jmp
lahf
fisttpll
movsl
jg
cmp
dec
aam
mov
iret
repnz
cmp
out
enter
shrw
loope
mov
clc
fwait
push
jg
rclb
adc
bound
mov
xchg
push
or
jbe
vphaddubw
xlat
jecxz
dec
adc
shlb
and
sbb
fs
jl
adc
jmp
ss
xchg
subl
in
push
ja
mov
mov
sub
push
mov
pop
xor
sbb
xchg
sbb
in
icebp
inc
and
mov
inc
mov
mov
sbb
fldl
dec
cwtd
cwtl
fsubr
mov
adc
or
ret
cli
lcall
jge
xor
pop
pop
sbb
add
cwtl
push
popf
jns
xor
sbb
cmp
add
int
out
pusha
nop
mov
daa
pop
xchg
imul
sub
inc
push
sbb
sub
es
fisubrl
jg
test
xor
sub
mov
hlt
cltd
xchg
aaa
sarb
ficoms
in
cs
inc
xor
call
test
and
jns
sti
mov
mov
cmc
ss
sub
mov
lods
adc
mov
jecxz
sub
fcmovu
sbb
pop
jp
adc
lea
call
xor
jbe
sti
jb
jb
jl
icebp
outsl
mov
dec
mov
mov
mov
ja
adc
adc
icebp
and
push
sbb
int
fnsave
cmovs
pushf
int
addb
and
mov
nop
jae
fwait
xchg
cmpsb
addr16
in
imul
idivl
fstl
or
test
xchg
stos
pusha
mov
mov
iret
int
push
jb
xor
ljmp
iret
xchg
cs
dec
mov
lods
ja
out
sub
movb
in
cld
movsb
fwait
cltd
pop
pop
mov
mov
pop
jbe
xor
das
mov
cltd
dec
je
push
jb
in
dec
imul
or
nop
test
aam
imul
movsb
adc
fwait
lock
dec
dec
dec
cmp
cmp
jecxz
adc
adc
test
jl
mov
movsb
imul
sbb
push
mov
sbb
add
arpl
mov
adcb
mov
loopne
or
ja
jno
jnp
jns
sti
push
inc
call
jb
std
scas
jg
add
add
xchg
pop
dec
or
lret
mov
push
insl
enter
das
enter
inc
out
jae
pushf
loopne
push
cmpsl
test
in
int3
insl
fwait
hlt
mov
inc
arpl
ret
ret
dec
jmp
lock
jo
std
mov
xchg
fisttpll
ds
leave
clc
cmp
sbb
push
lahf
in
jmp
cli
jns
cmp
rol
fnsave
js
cwtl
jbe
add
mov
repz
adc
fadds
in
mov
dec
lret
add
js
cld
dec
cwtl
std
leave
cmp
cmpsb
fistl
mov
repnz
std
inc
xorb
mov
push
clc
shufps
ljmp
lret
pop
cmpsb
jb
ds
aad
bound
lret
and
mov
ss
nopl
leave
and
int
out
jge
push
in
lock
lret
mov
cmpsb
push
dec
int
adc
stos
outsl
mov
pop
mul
rcrb
hlt
push
sbb
lcall
or
out
sbb
repz
inc
mov
fidivs
pop
dec
cmp
xchg
and
push
ficoml
or
test
mov
lds
loop
sub
xchg
mov
adc
sbb
ret
mov
je
int
out
lods
push
sbb
into
sbb
xor
dec
push
push
cmp
sub
clc
inc
add
iret
out
movsl
imul
fsts
push
test
dec
jb
pop
pop
out
sar
push
push
jge
pop
cmpsl
dec
in
pop
test
mov
push
test
push
xchg
aad
cmp
and
rorl
mov
loop
mov
sbb
adc
js
xlat
or
and
aam
clc
and
jae
cmp
daa
xor
cmp
in
lods
or
pusha
mov
hlt
lret
pop
dec
and
sar
pop
inc
xor
and
ds
xchg
mov
pop
in
push
jo
jb
dec
adc
aaa
xlat
add
jle
mov
inc
mov
arpl
and
jo
mov
mov
int
xchg
es
sbb
jp
dec
jl
test
adc
or
xor
loop
ja
mov
and
aaa
xchg
fisttpll
add
sbb
inc
pop
mov
movsb
add
imul
insl
mov
cmpsl
jnp
sub
mov
mov
fcoml
mov
mov
mov
fmull
sub
test
push
sbb
and
xchg
push
popa
lret
push
in
jbe
mov
cld
clc
cmpsl
std
test
and
mov
mov
stos
rolb
mov
dec
test
pushf
add
or
push
sub
adc
pusha
pop
push
je
sbb
cmc
jmp
and
and
lea
adcl
dec
test
inc
jmp
test
sub
dec
jnp
cmp
scas
xchg
arpl
jae
add
add
gs
xchg
inc
outsl
jg
mov
pop
std
sti
hlt
jns
mov
cld
pop
into
and
mov
jmp
jle
lods
ret
pop
or
mov
aaa
mov
pop
fcmovb
aas
xor
movsb
jb
mov
add
jo
data16
shll
lds
xchg
bound
push
pop
stos
jne
out
adc
ret
fidivrl
add
fnsave
lods
scas
xor
sbb
jae
pop
pushf
mov
imul
repz
fwait
xchg
cmp
adc
mov
jle
mov
inc
jl
xchg
enter
xchg
repz
pop
loopne
in
pop
aaa
push
and
adc
das
pop
sti
je
les
or
outsl
push
inc
cmp
dec
inc
ss
daa
testb
mov
jl
iret
dec
mov
lods
jae
pop
adc
ror
xchg
dec
call
addr16
sub
ret
mov
rclb
push
scas
fsts
in
decl
or
mov
fcomps
iret
inc
mov
mov
stc
xor
pop
jne
imul
mov
fcoml
adc
in
mov
mov
adc
or
scas
cmpsl
mov
std
enter
push
fwait
divl
popf
int
cmp
adcb
gs
fistl
je
sbb
jle
rcll
mov
imul
test
jno
jg
lcall
insl
add
cmc
psubsw
cmp
test
add
popf
bnd
js
mov
loopne
push
jbe
xchg
aaa
push
pop
or
mov
lahf
loop
inc
mov
cmpsb
push
repz
call
in
xor
arpl
lods
mov
and
notl
jge
leave
push
cmp
xor
mov
imul
cld
push
les
int
mov
jge
jle
fisttpl
mov
pusha
push
insl
sbb
fistpl
mov
dec
cwtl
pop
and
xchg
pop
xorl
mov
pop
sti
insl
and
into
xor
mov
sub
adc
push
lahf
fstl
xchg
mov
push
addl
mov
outsl
mov
adc
iret
mov
sub
inc
and
aad
mov
sbb
mov
push
pusha
mov
inc
push
cmp
xor
jmp
roll
mov
outsl
push
aam
adc
push
cmp
cmc
scas
xor
mov
ss
mov
in
fidivrs
inc
enter
mov
jmp
in
mov
xchg
loop
cmpsl
xchg
test
mov
ds
cmp
sbb
fs
scas
negb
call
loop
fisubrl
sub
shrl
sub
xchg
jb
insl
sub
in
loop
sbb
insb
orb
int
cmpsl
jmp
ljmp
mov
xor
jb
jo
sbb
out
pushf
sub
dec
adc
in
popa
xchg
pop
mov
and
mov
bound
cwtl
inc
xchg
dec
mov
gs
out
mov
jbe
push
push
sub
lcall
call
jmp
xor
xor
insb
iret
fsubl
add
push
or
std
por
mov
dec
divps
sbb
loopne
or
mov
jnp
and
mov
push
jecxz
repz
hlt
or
and
push
pop
aas
leave
ds
ret
scas
dec
lcall
aad
dec
jge
lahf
movsb
mov
test
jecxz
or
imul
mov
test
popf
or
stos
pop
repnz
int
add
and
mov
and
fstps
jnp
test
mov
mov
mov
pop
out
movl
lods
fwait
push
aad
test
and
or
imul
xor
xor
lods
mov
mov
int
and
pop
pushf
dec
pop
and
ret
sti
lahf
andl
das
loopne
ds
mov
cmpsb
xlat
sbb
pop
lock
andb
inc
in
push
sub
scas
lods
push
es
sbb
imul
data16
out
test
lock
orl
mov
pop
xchg
xor
inc
mov
adc
ljmp
sbb
mov
shll
add
and
arpl
adc
adcb
cmp
mov
and
sbb
cmc
inc
push
leave
inc
or
adc
dec
aaa
or
cltd
sub
lret
add
fisttpl
pop
mov
insb
push
imul
cmc
pop
mov
xor
pop
mov
add
lods
inc
bound
pop
dec
sbb
cld
mov
cli
sarb
cwtl
mov
add
ret
push
mov
dec
hlt
add
push
paddb
dec
xchg
lea
mov
xchg
repnz
pop
mov
push
or
xchg
xchg
pop
fwait
add
sbb
inc
add
adc
add
dec
aad
sbb
inc
push
push
fwait
test
int
in
and
mov
arpl
xor
mov
jmp
mov
in
fbstp
push
dec
fisubl
or
mov
xchg
jle
fs
dec
fsts
les
dec
xor
sbb
popf
ficomps
rorb
call
bound
cs
xchg
adc
ja
dec
out
pop
dec
or
push
shld
popa
mov
mov
lods
pop
sbbb
out
test
fmull
adc
adc
or
mov
pop
jo
jo
or
xchg
icebp
and
mov
push
push
dec
push
clc
orl
in
and
xchg
imul
jbe
int3
fcmovnu
cli
in
jl
lock
ljmp
jb
mov
cld
push
sbb
mov
scas
xor
loop
js
popl
sbb
imul
sbb
jmp
fmull
adc
hlt
xor
ja
adc
mov
dec
dec
mov
jae
imul
aas
rol
jbe
in
push
xchg
mov
push
and
and
std
out
cmp
sub
pop
push
clc
sarl
adc
enter
dec
imul
sbb
mov
test
cltd
pop
scas
nop
adc
lods
or
xor
movsb
mov
mov
or
and
rcrb
jnp
push
mov
jecxz
add
ds
jb
inc
jmp
push
gs
daa
mov
bound
popf
and
das
dec
inc
cmpsb
mov
in
pop
andb
enter
fdivrl
xchg
movsb
sub
xor
push
jl
lahf
jb
pop
aaa
aad
nop
xchg
and
and
rorb
mov
mov
js
xchg
jmp
loopne
dec
fs
les
inc
out
inc
cwtl
cmp
addr16
mov
loop
jno
xchg
int3
mov
jmp
les
jns
pop
scas
iret
movsb
fdivl
xchg
ret
cli
add
shlb
fdivrl
das
jbe
and
add
and
sbb
or
mov
mov
sbbb
xor
xchg
clc
inc
add
sti
imul
insb
push
shlb
dec
jge
push
sub
ljmp
adc
sbb
fsubl
add
inc
stos
fstl
ficoml
jecxz
sub
push
mov
dec
imul
jbe
jp
dec
shr
lret
xor
sub
aaa
stos
call
mov
sbb
dec
fwait
xchg
cmp
add
inc
popf
jno
pop
sbb
lods
dec
lods
cmp
adc
mov
sub
xor
and
cmp
cmpsb
mov
mov
bound
scas
xchg
or
adc
jmp
dec
xchg
fnsave
or
pusha
loopne
lods
push
mov
jp
aaa
jge
jns
scas
mov
and
xor
outsb
js
or
add
insb
or
adc
add
jl
popa
imul
jle
ja
and
ficoml
add
lods
jno
pop
and
pop
movsb
push
fincstp
push
sarl
stos
scas
sub
clc
scas
jg
push
cmp
insl
iret
dec
sbb
push
jg
xchg
push
outsb
stc
and
cmp
outsb
xchg
shufps
int3
jo
idivl
adcb
lret
sti
in
xchg
or
xlat
rcl
iret
loop
rep
sbb
aad
dec
pop
sbb
or
cmp
push
pop
fs
add
roll
jo
sub
mov
push
insl
or
jmp
arpl
fs
lret
movsl
pop
push
and
lcall
std
and
xor
push
and
cmp
cmpsl
or
cmp
mov
adc
sbb
mov
cmp
scas
in
test
rcll
lods
sub
push
sub
jae
test
lods
mov
arpl
or
outsl
mov
hlt
les
outsl
push
nop
mov
mov
aas
subb
or
loop
jnp
sbb
int3
cmp
negl
and
or
jnp
in
add
subl
mov
sub
pop
hlt
cmpsb
mov
pop
jle
mov
push
enter
cmp
out
cltd
sbb
jns
xchg
and
repnz
push
sahf
mov
fmuls
mov
test
loope
popf
movsb
push
lret
in
popf
or
jae
mov
fs
mov
mov
pop
dec
adc
les
mov
movsb
aaa
hlt
iret
fldenv
or
mov
insb
jge
stc
pop
outsb
nop
dec
cli
sbb
popf
mov
pop
imul
push
jo
jns
add
xchg
inc
addr16
jae
mov
sub
dec
adc
and
addl
cmpsl
mov
pop
pop
call
sti
aaa
push
sarl
pop
icebp
mov
das
inc
loope
or
push
imul
fldl
adc
xchg
adc
xor
inc
lahf
outsl
add
xor
and
mov
sbb
pop
adc
outsl
insb
lcall
push
dec
mov
call
pop
fs
fcomps
xor
mov
ljmp
mov
loope
pusha
int
jb
fdivl
gs
daa
inc
das
mov
jl
pop
xchg
test
pop
sti
push
fnstsw
sti
icebp
in
and
xchg
aas
xlat
inc
adc
xor
pushf
imul
xchg
push
sbb
loop
pusha
jae
mov
pmaxsw
cmp
aam
daa
mov
daa
or
jno
cmp
adc
lods
add
pop
aam
fcmove
xor
mov
hlt
jns
ficoms
call
adc
mov
js
pop
pop
fidivrs
rcrl
jle
addb
cwtl
out
sbb
pop
inc
popa
daa
and
insl
cmpb
lock
mov
xchg
jnp
cli
lods
cmp
or
and
jbe
cli
pop
pop
xchg
repnz
mov
inc
mov
adc
pop
int3
sahf
nop
mov
push
int3
mov
inc
xchg
popf
fbld
pop
inc
xchg
scas
orl
rcl
popa
sub
lret
cmpsb
jmp
sub
dec
fistpll
pushf
bound
psubb
push
or
pop
lock
and
aad
mov
stc
imul
roll
dec
in
mov
rcll
movsl
into
std
inc
or
push
push
mov
jl
mov
sub
lea
pushf
mov
jno
imul
jne
jge
sbb
mov
adcl
cltd
dec
jle
xchg
enter
cmp
mov
pop
mov
lods
sbb
fiadds
and
adc
faddl
push
lock
push
push
addr16
out
jno
mov
fildll
test
sbbb
adc
mov
push
lret
in
out
jne
fs
js
mov
cmp
loopne
bswap
jne
test
push
lods
or
test
lret
mov
js
xchg
xor
xor
gs
mov
vmptrst
mov
shr
repz
scas
adc
adc
in
and
loop
jne
push
mov
test
dec
test
scas
adc
mov
lahf
lds
lods
xchg
pop
stos
adc
movsb
mov
cmpl
imul
jle
push
mov
adc
jle
cmp
outsb
and
jecxz
test
xchg
xchg
scas
test
mov
sub
sbb
xlat
xchg
add
push
and
inc
gs
pop
stc
cmp
iret
lea
popf
jge
push
test
mov
arpl
push
jmp
int
mov
stos
arpl
int
sub
roll
imul
popf
ja
pushf
push
loopne
movsl
add
das
and
inc
pop
cmp
movsb
lods
pop
push
cmp
sub
pop
pop
add
inc
jle,pn
sahf
mov
sbb
pushw
je
push
out
jecxz
xchg
in
ja
push
leave
mov
push
xchg
punpckhwd
fsubr
aam
test
sti
mov
ret
ss
and
sub
jne
mov
js
sub
clc
jmp
lcall
jg
pop
rorl
sub
pop
enter
xchg
xchg
push
repnz
out
enter
icebp
push
pop
cmp
xchg
fisttpll
push
mov
pusha
jecxz
dec
inc
jns
cltd
rcll
inc
aaa
gs
mov
xor
in
lods
xchg
js
push
cmp
mov
cmpsb
in
and
cmpl
or
xchg
sbb
mov
aam
movsb
call
fdivrs
out
push
scas
mov
or
pop
fistl
sahf
ss
fistps
pop
lahf
sub
push
push
pop
loop
repnz
push
std
pop
xor
sub
jb
pusha
dec
scas
xchg
sub
and
or
and
mov
repz
push
je
adc
xchg
dec
sarb
out
adc
lret
sbb
ret
dec
insl
nop
pop
mov
mov
xor
xor
jb
jp
les
out
or
stos
cmp
fmuls
fidivrl
xchg
dec
shr
pop
ja
inc
ret
jmp
push
mov
mov
xchg
sarb
sub
mov
mov
jp
mov
xchg
or
jo
fnstenv
mov
push
dec
mov
dec
ja
xor
lret
dec
shlb
ja
and
pop
cmp
dec
dec
pushf
jb
shll
movsb
clc
xchg
rol
or
cmp
daa
mov
lret
bound
cmp
lahf
mov
bound
mov
pop
sbb
mov
mov
mov
lock
subb
pop
or
push
lret
xlat
pop
aad
add
in
mov
out
jecxz
ret
stos
pushf
mov
xor
inc
pop
xor
inc
in
ja
je
adc
cmp
mov
xchg
mov
cwtl
sahf
data16
loopne
cmp
es
or
incl
andb
pop
pop
pushf
mov
mov
cmp
xchg
cli
out
mov
pop
push
pop
pop
add
mov
lret
push
xchg
cmc
aas
inc
pop
or
imul
rorb
rorl
mov
jp
bnd
pop
lock
jle
into
fcomps
xor
mov
inc
cmp
sti
push
or
jae
rcll
ds
dec
notl
and
fs
mov
arpl
mov
fdivs
js
into
push
ljmp
dec
mov
jno
and
push
pushf
push
xor
sti
aad
jmp
leave
call
push
jle
xchg
jg
or
xor
repnz
sbb
jp
jmp
cld
dec
fs
mov
movsb
jnp
sbb
mov
mov
push
es
cltd
cld
add
adc
fistpl
cld
es
pop
jmp
or
fwait
js
mov
add
test
sub
fildl
rorl
insb
xchg
outsl
lret
cltd
scas
loope
das
mov
lahf
push
in
negb
inc
jecxz
dec
popf
leave
cmp
lods
sbb
sub
clc
jbe
or
loop
cmp
jp
and
inc
lock
jg
mov
pop
inc
lods
lock
rorb
jg
ficoms
xchg
sahf
mov
or
xor
into
mov
ret
lock
cli
test
pop
popf
fistl
hlt
dec
sbb
mov
adc
lret
lods
or
fs
jg
mov
push
int
mov
sbb
or
dec
stos
movb
leave
std
mov
test
aaa
rorl
adcl
arpl
stos
mov
add
mov
addr16
in
sub
mov
adc
je
mov
leave
sbb
leave
pop
sbb
cmp
stos
filds
mov
cmpsb
or
mov
lret
sbb
mov
ret
push
ret
jecxz
repnz
jg
jge
cmpb
lods
or
push
xchg
push
or
xchg
mov
cmp
cmp
loop
jg
jle
push
inc
sub
sub
inc
cmp
fmulp
xchg
stc
pop
cli
fsubrs
dec
inc
inc
or
aad
cmp
jb
push
and
sub
mov
shll
push
fimull
sub
mov
in
inc
and
push
inc
xchg
jl
xor
cmp
push
fs
adc
push
je
fistpll
cwtl
or
repnz
mov
mov
filds
es
adcb
inc
pop
lods
jmp
es
repz
int3
jns
das
dec
pushf
out
pop
lods
lea
test
and
pop
pop
je
imul
and
popf
pushf
icebp
cmpsb
inc
mov
mov
fwait
mov
mov
out
ret
adc
mov
stos
cli
cmp
mov
filds
or
mov
data16
cld
mov
std
std
lock
sbb
lds
pusha
ja
jbe
pop
scas
or
hlt
mov
jb
jg
das
ret
sbb
dec
ljmp
icebp
add
std
pop
inc
or
sarl
in
dec
push
inc
out
jns
inc
xchg
push
ret
fstpl
jnp
pushf
sub
loop
and
gs
jo
xorb
or
lahf
ret
scas
xchg
dec
fwait
push
push
das
add
dec
popa
or
aam
cmp
pusha
inc
and
cmp
insb
and
xchg
xchg
jo
xchg
xor
and
lds
cltd
dec
mov
nop
int
mov
fstpl
into
leave
lock
mov
add
popa
out
cmp
cmp
cmc
pop
call
aas
inc
xchg
mov
lret
in
dec
add
push
mov
scas
dec
jnp
icebp
mov
pop
sub
mov
out
xchg
icebp
lods
test
pop
das
xor
inc
or
jb
pop
movsb
out
in
xchg
mov
popa
inc
std
and
adcb
sahf
jg
jno
fs
inc
pop
arpl
lods
jb
lret
jecxz
fwait
add
cwtl
imul
jne
loopne
jo
or
pusha
mov
adc
jecxz
out
xchg
pop
xchg
shrl
cmc
sub
sbb
les
jb
xchg
or
insl
cld
clc
testl
into
popf
mov
movsb
jl
mov
and
ljmp
or
mov
jl
xor
sbb
add
lahf
push
in
or
sub
sbb
fidivs
pop
data16
xor
outsb
xor
imul
pop
test
jmp
sbb
mov
out
adc
repnz
pop
pop
stos
stc
xchg
lods
xor
jg
pushf
arpl
cmp
xor
test
stos
mov
test
sub
mov
cli
mov
add
imul
xlat
push
fmulp
cwtl
mov
or
iret
sarb
or
cmp
xor
fisubl
jo
adc
test
pop
inc
data16
pop
dec
fisubrl
xchg
loop
nop
mov
xor
idivb
lea
adc
lods
jnp
fidivrs
orb
lock
inc
dec
dec
mov
std
aad
std
mov
sbb
sbb
or
call
inc
push
loop
xchg
add
push
mov
test
insl
and
inc
xchg
xchg
fbld
sbb
lret
pop
mov
pushf
jb
fdivrl
dec
cmpxchg
sub
fisttps
push
loop
or
dec
and
mov
and
cmp
adc
ljmp
adc
jae
push
sbb
mov
cmpsb
inc
cwtl
inc
adc
fsubl
dec
adc
push
adc
cli
repnz
mov
jno
es
mov
jae
mov
pop
or
test
stc
pop
dec
or
pop
movsb
arpl
push
nop
subl
sub
or
and
or
fidivl
pop
jge
jbe
rcrl
stc
push
push
js
pop
adc
cltd
es
shl
das
outsl
hlt
inc
mov
stos
mov
bound
xor
enter
hlt
pop
cmp
testb
jnp
jno
jge
out
lds
leave
clc
aas
mov
xchg
sbb
inc
mov
cmpsl
jnp
rcl
cmp
and
out
into
push
xchg
lds
dec
loop
pop
inc
or
and
jmp
pop
inc
in
inc
jecxz
fcoms
sub
mov
cld
add
shr
rcll
jne
or
adc
xor
jns
xor
movsl
add
cmc
xchg
push
mov
shll
das
lock
sbb
stc
aad
enter
jno
push
cwtl
inc
sbb
in
ljmp
clc
icebp
mov
out
mov
jle
pop
ret
cmpsl
sarl
sbb
ret
mov
popw
fstp
sbb
testl
mov
jno
nop
pop
jns
testl
mov
pop
popa
inc
data16
js
pop
or
sub
lds
imul
push
outsb
pop
inc
mov
ljmp
add
mov
mov
cld
outsl
into
add
cmp
negl
and
xchg
cld
jecxz
leave
fwait
xchg
fmul
insl
ljmp
testl
hlt
test
fildl
mov
push
rcrb
or
jae
pop
jg
pop
sbb
iret
jge
loop
arpl
push
cmc
mov
and
pop
jbe
frstor
xchg
in
aas
insl
insl
das
xchg
jbe
shl
sbb
and
pop
adc
push
adc
insl
mov
int
sbb
inc
into
lret
dec
test
loope
in
jg
and
jns
add
scas
nop
mov
xor
and
aaa
ds
addr16
mov
xor
jl
lods
shlb
pop
mov
or
mov
stos
adc
lods
xchg
sub
dec
std
mov
xchg
jp
adc
mov
out
mov
add
adc
xor
mov
push
mov
or
incb
notb
leave
divl
addb
int3
lret
or
jo
jae
ja
dec
jns
jl
gs
test
jae
jp
fcomps
mov
xor
aad
test
mov
cmc
fimuls
enter
xchg
inc
pop
dec
mov
inc
mov
pop
divl
inc
mov
mov
jmp
cmp
mov
mov
imul
jge
jge
xchg
test
sub
icebp
xchg
loop
pop
pop
and
or
test
xchg
mov
sub
mov
mov
sub
jo
lds
inc
and
gs
test
push
push
lds
mov
dec
push
mov
push
aas
ds
pop
loop
or
scas
or
cmp
call
cmc
sbb
ja
push
cld
in
cld
mov
xchg
les
jne
addb
cmp
xchg
stos
cmp
ficomps
jbe
jo
adc
sbb
pfrcp
sub
xor
fidivs
mov
mov
fwait
cmp
push
dec
fsubs
addr16
lds
js
mov
or
jle
push
adc
cs
inc
and
in
cmp
fstl
mov
subb
inc
and
testl
bound
lcall
lcall
xor
inc
add
push
xchg
jne
fwait
cltd
addl
fcompl
enter
sbb
stos
add
sub
js
and
or
or
add
pop
push
rorl
push
call
arpl
push
lea
aam
sub
lock
add
xchg
jle
pusha
xchg
dec
ret
inc
clc
jae
lar
call
in
and
fistpl
addr16
or
jne
scas
jbe
add
mov
inc
addr16
mov
mov
pushf
lret
ja
pop
pop
sti
push
xchg
popf
out
cs
pushf
mov
adc
xchg
xchg
addb
repz
clc
push
lds
mov
test
mov
add
and
jno
or
fdivs
jbe
adc
pop
push
cmp
adc
mov
mov
mov
fwait
and
lods
sub
lcall
arpl
xchg
fistps
cmp
mov
cmp
push
aad
add
call
push
lret
std
mov
sbb
and
adc
leave
pop
push
imul
xlat
jnp
xorb
push
mov
arpl
imul
pop
or
push
into
jmp
push
sar
sub
and
mov
push
or
cmc
jle
scas
push
inc
dec
pop
mov
ljmp
in
aas
ret
test
cltd
sub
or
sbb
xlat
xchg
sbb
bswap
pop
or
adc
test
or
jno
pop
inc
pop
cmc
out
repnz
rep
stos
in
mov
std
jl
pop
jl
bound
icebp
and
dec
cltd
enter
and
scas
add
std
jle
outsb
stc
sbb
cmc
mov
cwtl
loop
push
in
int
out
les
nop
movsb
push
aaa
hlt
mov
imul
push
outsb
jle
add
xor
into
dec
dec
fbstp
mov
dec
mov
sbb
pop
jl
mov
push
mov
addr16
add
test
into
push
ret
xlat
leave
sbb
ljmp
or
or
sti
cmp
adc
xchg
out
jne
enter
sbb
pop
loop
fstpt
push
fsubl
cmpsb
push
push
enter
push
xchg
sub
loope
or
push
xor
cli
fsubp
sti
aas
in
ret
or
mov
fstpl
push
jmp
sub
push
mov
stos
xchg
cmp
or
inc
xlat
xlat
ljmp
adc
push
addr16
insl
pop
popf
xchg
lea
adc
add
insl
iret
jo
cmp
inc
push
xchg
inc
fwait
jne
les
pop
daa
mov
repz
add
test
push
lea
rorl
sub
rcrl
outsb
bound
rcrl
inc
out
add
add
push
sarb
je
xor
push
ds
test
mov
in
fisubl
fwait
enter
pop
insl
popa
pop
dec
xchg
das
push
imul
cs
cmpsb
dec
mov
mov
pop
cmpsl
inc
xlat
icebp
mov
arpl
ljmp
pop
ficompl
loop
pop
outsl
push
stos
push
add
scas
jno
jg
js
out
fisubl
adc
decb
jns
loop
lods
inc
xchg
ss
dec
inc
mov
fistl
dec
inc
jl
pushl
push
int3
and
filds
dec
or
imul
mov
adc
outsb
and
out
inc
push
xchg
loope
test
add
dec
dec
xchg
push
cmp
or
or
xchg
or
cmpsl
sbb
dec
fwait
mov
stos
push
mov
aad
xchg
inc
hlt
jmp
outsb
cwtl
xor
jb
xchg
lret
pushf
xchg
fldcw
fwait
dec
pop
das
mov
inc
pop
dec
xchg
mov
inc
sub
ret
and
push
push
es
xor
cmp
mov
hlt
adc
icebp
clc
call
stc
xchg
mov
xor
sbb
mov
int
or
lods
sub
sbb
push
sti
xchg
jl
aaa
loopne
mov
push
dec
sub
sub
popa
nop
jbe
fcomps
mov
or
test
mov
adc
sbb
add
mov
xchg
sub
rcrl
xchg
mov
addr16
cs
and
ffree
and
push
mov
pop
shll
repz
adc
sbbl
aas
out
mov
adc
jno
call
addr16
outsl
xchg
sbb
lods
xor
sub
lea
lods
xor
sbb
mov
mov
xor
mov
push
xchg
daa
adc
dec
add
jg
or
xchg
or
push
push
lcall
or
jg
outsl
adc
aas
lods
cmp
dec
ljmp
arpl
cmp
sub
loopne
stos
mov
dec
nop
pop
jg
pop
dec
push
cmpsl
cmc
or
adc
mov
out
in
mov
inc
icebp
pop
sbb
xchg
scas
and
xchg
or
aad
add
aas
out
notl
aaa
dec
int3
jbe
sub
lret
inc
in
inc
in
xor
dec
out
out
add
inc
daa
push
add
loope
sbb
mov
mov
ds
std
stos
cmp
arpl
cld
jnp
in
nop
ret
into
sarl
jg
cmp
test
mov
fnsave
cmp
lahf
in
or
test
imul
sub
in
std
mov
mov
outsl
or
fdivr
int
inc
xchg
add
inc
and
jge
cmp
fs
jp
dec
mov
sub
fstps
xchg
shll
pushf
pop
pop
fwait
dec
vsqrtpd
mov
pop
outsb
and
sbb
aas
xchg
std
xor
filds
xor
orl
sub
push
xor
push
push
cwtl
inc
outsl
in
movsb
mov
testb
jle
push
mov
int
mov
and
sub
jno
adc
inc
mov
jg
push
push
mov
pop
jbe
pop
jmp
inc
push
addr16
scas
in
cli
daa
dec
test
call
fmull
pop
sti
mov
dec
add
jge
aaa
adc
enter
and
mov
fcomip
lret
rclb
and
in
mov
sub
popl
sbb
gs
mov
xor
ret
pop
sbb
pop
daa
jl
xor
or
sub
xchg
push
xchg
fisubrs
fistpl
mov
shlb
xor
cwtl
xlat
gs
xor
roll
add
inc
imul
shrb
fcmovb
mov
xchg
data16
push
sub
mov
ret
push
xchg
pop
pop
jmp
pop
repz
adcl
insl
cmp
insl
push
adc
vpslld
add
dec
adc
mov
test
xor
adc
and
arpl
pop
pop
adc
mov
or
xor
jmp
sub
mov
sbb
aad
fadd
popf
cmp
lret
ficoms
jno
sub
dec
loope
mov
bound
jae
jle
insb
movsb
inc
xor
pop
aas
jnp
insl
leave
std
xlat
lahf
adc
sub
sahf
push
pop
push
mov
jl
xor
ror
sub
and
pushf
in
das
cld
lret
lret
push
xor
or
and
pop
mov
jns
std
dec
lods
mov
mov
mov
rcrl
mov
arpl
sbb
dec
nop
push
and
shl
add
pop
add
lahf
and
fsubp
js
dec
mov
test
dec
mov
sahf
aad
scas
jle
push
loope
sbb
daa
clc
adc
pmulhw
popa
mov
les
mov
and
xchg
mov
ljmp
out
stos
addr16
in
cltd
fsubl
xor
or
lcall
or
cmp
lcall
dec
mov
or
repnz
push
mov
xchg
pop
jno
cmp
cmp
fdivrl
outsl
sub
sbb
bound
xchg
aad
popa
xor
mov
shll
das
fildll
or
sarl
dec
int
hlt
gs
pop
adc
adc
sub
and
lretw
push
or
inc
cld
jp
out
dec
loopne
jge
add
dec
imul
sarb
xor
scas
cmp
pushf
popf
sbb
sbb
stos
xabort
loope
leave
fiaddl
rcr
daa
xchg
ljmp
in
mov
xlat
movsb
pop
add
in
cmp
shll
mov
mov
sti
mov
fwait
mov
mov
dec
imul
jecxz
es
imul
loopne
xor
clc
xorb
xor
jnp
lods
loop
lea
aas
push
add
mov
scas
stos
push
imul
je
adc
test
fnstenv
das
test
popf
dec
insl
dec
or
lods
in
int
cmpsl
jns
inc
movsl
cmp
mov
pop
mov
enter
push
mov
fiadds
xchg
mov
cmp
pop
jmp
aaa
out
fsubr
je
mov
arpl
addr16
les
enter
xchg
shl
adc
dec
aaa
roll
adc
mov
aam
ror
mov
dec
shrl
out
mov
or
sbb
scas
loop
jmp
cmp
shll
push
dec
lds
out
jmp
push
adc
adc
imul
ds
jnp
sub
cmp
lods
xor
mov
fsts
inc
push
jns
xchg
push
icebp
mov
mov
adc
mov
add
pusha
lret
mov
mov
out
stc
cld
fbld
mov
in
sbbl
dec
loope
xor
cmp
movl
daa
lcall
ss
sahf
sbb
pop
pop
fs
dec
jo
mov
and
aas
push
aaa
inc
popa
scas
jns
pushf
test
jmp
fs
sbb
test
subl
mov
pop
push
arpl
inc
test
mov
dec
sahf
mov
push
mov
lret
arpl
ficompl
xchg
or
dec
xor
fstpl
xor
add
dec
outsb
stos
mov
sbb
push
out
mov
xor
out
sbb
cmc
insb
sbb
stos
adc
pop
fbld
add
loop
jne
mov
rorb
test
test
jb
popf
cmp
lea
imull
inc
jne
sti
push
outsl
repz
add
dec
mov
cld
mov
out
lods
shlb
inc
xor
push
push
cmpsb
push
lds
pop
jge
jno
sub
jnp
mov
xchg
pop
or
mov
test
js
or
int
int3
cld
or
mov
hlt
xchg
push
loope
shlb
ficomps
into
push
pop
jp
movsb
xor
xor
repz
mov
push
insl
add
lods
jg
sub
out
sbb
iret
test
movsl
adc
sub
mov
sbb
dec
xchg
or
sub
mov
and
scas
inc
jbe
insl
xor
int
or
add
adc
sbb
das
lret
add
cmp
jle
lret
xchg
jb
jns
cs
push
out
xchg
cli
inc
rorb
ret
xchg
xchg
cmp
push
xchg
pusha
test
mov
loop
rcl
xor
cmp
mov
rol
mov
adc
cmp
push
leave
or
sti
cmc
pop
jns,pn
xchg
xchg
aam
out
popa
mov
out
xor
fldcw
dec
xchg
rorl
mov
jnp
sbb
push
mov
sbb
ret
sahf
pop
pop
sub
in
cmpsb
adc
add
xor
rolb
pop
test
cmpsb
lahf
sub
and
aaa
mov
xor
sub
sub
adc
filds
popa
cmp
andl
adc
mov
and
jae
sub
add
push
sbb
inc
mov
mov
pop
mov
pushf
xchg
and
sub
sbb
nop
add
push
sbb
je
push
and
lods
in
ljmp
add
jg
dec
mov
jp
push
or
pushf
mov
ds
dec
loop
jecxz
jl
xchg
jmp
je
jecxz
xchg
subb
xor
push
pop
or
lret
mov
adc
mov
sub
inc
nop
ja
push
iret
mov
imul
sbb
incb
mov
into
stos
repnz
cli
xchg
pusha
add
mov
xchg
addl
in
sub
mov
xor
fiaddl
js
scas
fwait
mov
jmp
xor
std
add
sbb
pop
jmp
pop
mov
pop
je
into
lahf
cwtl
cwtl
cltd
stos
add
sbb
push
and
ret
hlt
mov
dec
jecxz
dec
jle
fdivr
cmpsl
xlat
out
jmp
mov
aas
cmpsl
and
in
loope
mov
out
clc
pop
movq
sbbb
add
rcrl
lret
adc
or
inc
xor
iret
mov
add
aad
cmp
mov
cmp
pminub
dec
adc
xor
or
inc
push
mov
or
pop
fildll
mov
xor
cmc
inc
into
mov
and
sub
daa
xorb
adc
xor
xor
sub
testl
push
cmpsb
cld
test
outsl
je
aaa
scas
mov
dec
leave
js
inc
jb
repz
add
push
add
jl
dec
test
test
or
outsb
idivb
cld
push
adc
push
xchg
insb
mov
les
xchg
pop
mov
arpl
mov
pop
pop
scas
data16
and
push
cmp
loopne
rol
xchg
sbb
push
outsl
xor
inc
mov
jmp
pop
push
jnp
ds
adc
xor
cwtl
xor
sbbl
or
sti
test
mov
push
xchg
push
inc
jb
out
dec
stos
int3
lods
sar
pop
enter
pushf
icebp
gs
sub
sub
hlt
pop
cmp
mov
insl
push
cmc
mov
ret
mov
loope
or
xchg
loopne
mov
sahf
adc
cmc
xchg
mov
adc
dec
and
sbb
and
xor
aam
add
add
loopne
iret
lock
mov
sub
fcomps
movsb
adc
jl
notl
mov
cltd
movb
mov
xchg
mov
ret
fdivrp
aaa
jnp
and
push
jne
inc
add
insl
sbb
jns
fstl
mov
lods
stos
out
xchg
add
adc
cmp
mov
fildll
icebp
out
mov
dec
addr16
pop
mov
or
out
pop
mov
xor
dec
repz
sbb
jnp
push
lahf
xchg
out
das
push
ret
movsb
add
pop
xlat
and
push
cmp
pop
addr16
mov
sbb
pop
rolb
jmp
stos
inc
or
pop
add
sahf
mov
aaa
jge
push
mov
dec
xchg
cmc
clc
test
iret
testl
hlt
imul
pop
cld
punpcklwd
rcl
cli
imul
and
pop
or
cli
pop
fnstcw
cmp
mov
jge
mov
jge
cs
push
pop
mov
fsts
jmp
fnstcw
pop
addr16
ja
inc
push
adc
dec
and
negb
pusha
fadd
outsb
jmp
jg
cmp
aas
test
add
mov
pusha
and
inc
and
push
xchg
fnstcw
jg
push
inc
xchg
out
mov
sbb
in
dec
lods
stc
out
xchg
dec
into
outsl
call
int3
roll
pop
out
or
mov
jmp
call
scas
mov
pop
jle
ret
mov
ret
xlat
mov
aas
divl
shll
mov
lods
pop
cmpsl
cmp
enter
mov
cli
inc
and
test
lds
cmp
sub
and
mov
stos
pop
test
out
cwtl
mov
inc
lds
icebp
sbb
jns
push
inc
dec
lods
aaa
push
push
inc
loop
in
pushf
fstpl
xchg
loopne
in
lret
or
jno
dec
popf
push
xchg
or
sub
cmp
aaa
lock
in
or
adc
loope
or
push
movsl
mov
addr16
in
and
mov
add
add
int3
sub
cmpsl
pop
sbb
inc
psllw
mov
jo
jle
ss
lcall
and
stos
jno
sti
lret
pop
mov
mov
fistpl
shlb
int3
jne
mov
and
pop
mov
fiaddl
push
lods
in
repz
addr16
lock
notb
dec
popf
repnz
add
rorb
mov
ja
dec
cld
ss
ja
and
cmc
into
mov
xor
out
push
packssdw
sbb
pop
adc
add
test
loop
cs
mov
mov
push
mov
in
loope
pop
loope
push
push
mov
leave
sbb
jge
iret
pop
mov
push
pusha
adc
push
mov
xchg
mov
stos
loope
loopne
iret
xchg
mov
popf
scas
cmp
cs
xor
test
mov
hlt
dec
push
test
idivl
sarb
inc
jmp
test
lret
xor
cld
cmp
pop
aam
popf
fisttpll
mov
test
sbb
int
lea
xchg
outsl
add
jecxz
arpl
mov
and
into
fdivr
xor
sbb
push
cmp
jecxz
in
mov
fidivs
push
sub
mov
movsb
jl
lret
push
fs
dec
repz
fmulp
aas
out
lcall
daa
and
dec
xchg
insl
adc
and
pusha
mov
adc
xchg
std
dec
fbld
mov
data16
lret
pop
movsb
jbe
out
adc
or
es
es
insl
es
inc
add
iret
pop
test
xchg
add
mov
jbe
add
add
int3
div
xor
mov
ret
push
stos
add
inc
aad
lcall
pop
mov
push
insl
lods
cmpsl
add
shlb
aad
lea
mov
fs
sub
hlt
mov
mov
jne
mov
fucom
fcoml
je
mov
lret
mov
lret
mov
pop
andl
or
dec
fwait
dec
icebp
lea
test
aaa
jns
das
icebp
cmp
sub
leave
stos
lock
jne
es
dec
rol
cwtl
xor
jmp
push
popa
fisttpl
add
adc
int3
jbe
dec
subb
cmpsl
adc
repnz
test
jb
and
int
test
pop
in
mov
sub
mov
xlat
sar
sub
loop
xor
repz
xchg
out
stos
sub
imul
movsl
push
adc
xchg
push
dec
jl
add
repnz
add
pusha
add
enter
pop
push
mov
mov
scas
sahf
lock
jns
lahf
mov
adc
cmc
fucom
inc
adc
sbb
sahf
jb
mov
ss
xor
xlat
ljmp
xchg
nop
repz
xchg
mov
push
gs
insb
mov
mov
enter
fldcw
mov
in
stos
fcompl
pop
jge
dec
lret
pop
add
sahf
dec
shr
arpl
nop
adc
clc
pop
sbb
gs
inc
call
push
in
sub
and
addr16
lods
xlat
gs
loop
cwtl
pop
test
xor
mov
adc
ret
mov
dec
jb
sub
jb
lcall
test
jmp
and
sub
add
orl
pop
mov
hlt
mov
jo
push
dec
ret
adc
ja
outsb
in
subl
add
sub
dec
movsb
shlb
jno
inc
std
rcrb
jmp
push
push
mov
and
iret
movsb
adcb
xchg
sbb
xor
push
fmul
stc
xorl
fucom
mov
mov
mov
roll
push
cmp
lfs
xchg
dec
push
cld
mov
dec
mov
int3
push
cmp
push
mov
not
xchg
jns
cs
aam
jmp
ja
xchg
push
inc
push
mov
dec
push
cmp
andb
ljmp
notl
cmp
sub
cli
mov
and
add
mov
and
lret
fs
in
nop
adc
std
popf
mov
xlat
pop
xchg
jge
lods
je
xor
in
xor
or
lcall
outsb
in
xchg
cmp
fsub
lret
adc
std
adc
mov
fldcw
jno
mov
fnstsw
pop
scas
jb
xlat
jecxz
sbb
shrl
ljmp
inc
out
xchg
adc
mov
into
jmp
sbbl
stc
xchg
loope
out
test
cmp
shlb
int3
sbb
xchg
inc
pop
leave
lret
lahf
mov
mov
sub
sub
cmp
loop
mov
stc
sbb
sub
xchg
cld
pushl
cmpsb
jg
in
pop
fwait
mov
mov
bound
iret
mov
cmpsl
xor
push
ds
or
jbe
mov
pop
jge
cmp
mov
dec
int3
pop
add
in
pop
or
out
in
aam
popa
adc
mov
mov
push
stos
mov
clc
dec
icebp
repnz
test
ret
push
or
add
adc
xlat
repnz
jo
lods
hlt
xchg
and
xchg
in
inc
and
stos
or
push
add
fsubrl
dec
push
in
push
fidivs
stc
clc
jle
adc
ljmp
lock
push
sub
push
jnp
jge
les
fsubrl
mov
adc
movsb
xchg
out
mov
movsb
mov
inc
dec
mov
mov
lods
subb
fcoml
lahf
jbe
movzbl
std
das
lahf
sbb
mov
jae
stos
addr16
les
sbb
xchg
inc
bound
push
push
sbb
mov
loope
scas
ss
push
jae
push
jmp
movsl
pop
aam
mov
loopne
fwait
push
or
push
xchg
pop
rclb
pop
and
jl
jnp
cltd
fs
push
pop
rcrb
xor
jecxz
pusha
xor
cmpsb
sub
out
xor
mov
jg
loop
dec
mov
rorb
lret
mov
int3
repz
dec
bound
xchg
pop
xor
and
inc
stc
sub
repz
ret
ss
xor
lret
pop
cli
adc
test
or
jecxz
cmp
jo
jle
pop
lods
enter
dec
lods
rcr
imul
or
push
out
adc
test
or
inc
or
or
jp
sub
enter
insb
out
les
lods
mov
out
sbb
mov
in
clc
dec
sahf
repnz
dec
negb
adc
gs
test
call
addl
xchg
into
cmp
adc
add
enter
jae
test
jl
imulb
pop
add
adc
pop
movsb
push
imul
mov
ljmp
dec
lods
fcoml
mov
lods
movb
sbb
in
out
sub
das
push
jmp
out
les
int
xchg
into
inc
loop
fsub
jae
pop
shrb
stos
int3
pusha
ret
clc
sahf
xchg
lods
sbb
js
sub
stc
aam
xchg
ss
das
aam
pusha
fwait
shlb
fdivr
gs
repz
bnd
iret
pop
leave
pop
mov
and
movsb
idivl
sti
push
adc
cmpsl
mov
aad
lods
movsl
cmc
xchg
mov
fsubs
dec
mov
sbb
push
ret
sub
loope
in
adc
jge
pop
int3
ret
ret
xchg
fnsave
ret
xchg
sbb
mov
sbb
add
mov
adc
push
adc
loop
popa
movsb
bound
pop
out
sti
pop
pop
inc
shrl
or
push
mov
xchg
dec
sub
test
inc
mov
hlt
icebp
test
pop
mov
in
or
xchg
xlat
insl
jecxz
mov
jnp
stos
add
lods
push
add
adc
mov
cmp
mov
in
gs
popf
lock
jns
cmp
sti
jecxz
lds
xchg
movsb
mov
in
xor
sbb
sub
outsl
popa
in
icebp
dec
push
mov
sahf
mov
aad
mov
pop
repz
and
pop
sub
icebp
out
dec
imul
adc
out
push
fnstenv
xchg
outsl
cmp
jns
jno
jb
imul
inc
xchg
vpacksswb
loop
mov
loope
cmp
vmwrite
mov
xorb
jo
mov
xchg
clc
fnstsw
lods
pop
out
mov
adc
push
loop
rcrl
pop
push
test
and
stos
pop
stos
jg
stos
push
divb
push
pop
repnz
pop
sar
inc
push
lahf
icebp
sub
adc
mov
or
pop
adc
ret
inc
xchg
popf
repz
stos
push
out
mov
shl
arpl
xchg
xor
jb
mov
dec
xchg
fnsave
mov
js
mov
es
pop
out
sti
int3
test
mov
add
push
xchg
fs
cwtl
adc
lods
movsl
fsubrs
lret
loopne
ret
sub
inc
ds
cld
and
push
and
or
sub
or
push
cmp
sbb
insb
inc
arpl
xchg
mov
daa
movaps
mov
sti
addb
cmp
lahf
pusha
inc
sbb
test
outsl
frstor
inc
push
popf
fbstp
dec
add
mov
push
jb
push
cwtl
push
jbe
or
push
stos
adc
dec
fcoms
add
scas
sub
sti
inc
fwait
inc
mov
mov
scas
add
data16
emms
jb
or
adc
dec
cs
pop
mov
in
jne
shrb
clc
dec
xchg
ficoms
mov
adc
jl
or
mov
jae
in
mov
rorl
fwait
insl
adc
dec
clc
fcmovnbe
push
push
je
cmpsl
mov
jp
cmp
mov
xchg
xor
in
sub
popf
mov
mov
stos
setae
lahf
mov
inc
negl
shrl
push
push
stc
add
push
movsl
and
stos
mov
lret
movsb
sti
fadds
in
inc
mov
mov
cmp
das
xor
lret
pop
xchg
or
push
arpl
jp
push
cmp
leave
pushf
loop
xor
test
sub
in
int3
mov
add
lret
push
xchg
dec
cmp
jb
nop
repnz
inc
cltd
imull
stos
jb
ficoml
jns
fistpll
mov
fstpl
adc
xchg
lahf
xchg
repz
out
insb
pop
cmpl
je
push
add
enter
adc
jns
out
pop
add
in
mov
bound
dec
fwait
pop
pop
and
rcr
ret
dec
ficoml
imul
dec
or
or
andl
cmpl
test
lret
vcmpsd
dec
mov
imul
push
faddp
push
sbb
int3
push
lods
pusha
fwait
loopne
addr16
aam
pop
fcoml
pop
cs
mov
dec
mov
jmp
test
or
inc
repnz
scas
or
jo
jae
aam
xchg
adc
cmc
clc
sub
call
sub
inc
insb
in
es
push
movsl
popa
fidivrl
in
cmpb
adc
pop
add
sbb
push
stos
or
mov
sbb
fsubrl
out
andl
pop
aas
sbb
fiaddl
test
imul
fsub
fdiv
imul
cli
arpl
and
xchg
xor
adc
inc
iret
jo
dec
mov
imul
dec
dec
adc
rcll
cltd
mov
cld
stos
xchg
push
ds
in
or
subb
sub
lods
movb
sub
fdivrl
mov
ret
adc
orl
loope
jb
push
jns
sbb
xor
push
pop
fwait
xchg
inc
in
sub
and
subb
mov
pop
mov
inc
xchg
cmpsb
and
arpl
jne
iret
inc
mov
xor
dec
cmpsb
jl
and
jle
iret
or
xchg
jb
jbe
and
push
and
call
mov
cmp
cli
loopne
or
cwtl
mov
test
xor
nop
decl
mov
mov
jmp
cmp
mov
popf
dec
jp
inc
fcmovne
aas
or
add
push
adc
push
lds
ds
jo
arpl
in
adc
mov
inc
repz
xchg
pop
stc
mov
cmp
mov
addr16
sbb
adc
fstps
sbb
xchg
inc
jae
cvttps2pi
dec
push
dec
xchg
mov
jmp
dec
sti
mov
fsubs
add
sti
jns
and
adc
xchg
inc
fld
mov
repz
fst
inc
pop
stc
lret
test
cmp
sbb
pop
mov
in
in
mov
xlat
pusha
ss
sbb
cltd
in
add
lock
inc
xchg
insl
out
adc
out
cli
repz
mov
cmp
adcl
fucomi
ucomiss
xlat
js
xlat
insl
mov
push
test
mov
add
push
add
push
adc
jg
push
setno
loope
js
scas
ja
imul
sbb
mov
xchg
repz
and
xor
or
das
clc
inc
repz
ds
cmp
jo
xchg
mov
ljmp
dec
xchg
mov
jg
std
mov
push
mov
shl
out
loope
and
mov
push
xor
pusha
call
loope
dec
inc
and
cmp
push
cmpsb
ljmp
jmp
rcrb
add
sbb
sbb
out
mov
jbe
jle
adc
fstpl
sti
out
mov
cmpsl
outsb
mov
jno
outsl
cmpsl
loope
imul
out
push
jmp
insb
cltd
push
test
push
dec
mov
inc
aaa
sub
int3
xor
sahf
inc
jbe
push
xchg
out
ror
jecxz
xchg
das
cmp
scas
nop
rcrb
jns
add
ja
scas
fstpl
mov
sbb
enter
mov
repz
lods
addl
mov
cwtl
adc
lods
test
rcll
ret
arpl
nop
roll
dec
stc
repz
add
fs
test
call
lret
das
dec
nop
adcl
fdivs
inc
vpsubsw
out
aas
inc
out
call
dec
mov
fwait
lods
scas
stos
lods
jne
out
ljmp
in
or
mov
xor
xchg
and
test
cmove
or
lods
int
in
popa
aas
not
nop
pop
fistps
shlb
jno
data16
lret
ret
sub
lods
lds
mov
lods
cltd
lds
cmp
sbb
insb
repz
pop
cmp
fdivrl
dec
xlat
cmpsb
rcll
popa
add
out
adc
and
out
shll
sbb
sbb
or
sub
dec
pop
shr
xor
add
mov
loope
inc
movsl
subl
popf
adc
or
fiadds
sbb
scas
jmp
out
ja
addr16
stos
lock
xchg
jb
push
mov
cmp
mov
push
jl
push
ja
push
aad
jge
cld
aam
mov
out
je
mov
lods
nop
int3
lock
mov
lods
int
adc
add
fdivs
imul
lods
test
mov
fcmovne
enter
stos
push
xor
ret
jecxz
inc
les
inc
mov
out
sub
cltd
xor
fs
or
xor
inc
inc
fisubl
sarb
das
pushf
icebp
insb
cmp
mov
pop
mov
out
mov
adc
jge
rcll
data16
mov
sub
ret
push
stos
pop
cmpsb
adc
mov
or
insb
aad
inc
inc
mov
push
jb
adc
in
loop
sbb
push
testl
adc
pop
cmpsl
push
adc
sbb
int
jmp
out
stc
sub
push
and
cmpsl
xchg
or
add
cmpsl
pop
in
lods
mov
addl
idivl
ss
or
jmp
out
xchg
push
rcrl
popa
mov
stc
out
out
jne
les
shrb
mov
sbb
into
adc
adcb
roll
jge
cld
mov
lret
insl
adc
popa
mov
leave
push
push
test
movsb
jno
cmpsb
mov
in
icebp
stos
add
dec
or
aas
rcl
out
sbb
sub
push
pop
jo
or
fwait
rolb
pop
nop
int3
jb
lahf
aad
adc
pop
lahf
adc
test
push
sbb
in
orb
push
imull
sbb
mov
cmp
cmp
in
mov
xlat
xor
enter
xchg
in
leave
cmpsl
cmc
mov
and
jp
ljmp
mov
fwait
pop
pop
cli
bound
pop
cmp
inc
add
pop
call
lds
lret
xchg
add
jo
jae
js
push
adc
pop
je
pop
pop
jo
sub
sti
insb
and
imul
xor
dec
push
inc
jns
xor
add
add
dec
sbb
popa
xor
es
jmp
and
jle
lea
pop
ljmp
lahf
incl
sub
mov
dec
push
push
push
or
popf
pop
sbb
fsin
adc
out
sbb
test
pcmpeqd
push
in
imul
mov
loopne
mov
adc
jns
ss
mov
xchg
jo
add
mov
jno
stos
add
jmp
pop
popf
cmpsb
js
stos
xchg
addl
xchg
shrb
rcll
ret
dec
inc
mov
inc
xchg
inc
xchg
fidivrs
lcall
inc
cltd
out
call
lods
out
stos
rcll
rol
mov
dec
cmpsb
fistl
testb
shlb
je
imul
mov
pop
sub
add
fbld
jg
or
popa
jge
adc
scas
or
mov
aas
addr16
rcrb
adc
leave
inc
fdivrs
in
sub
jne
in
jp
xor
pop
pop
pop
sbb
xor
mov
xchg
xor
loope
out
push
push
inc
xor
cwtl
pop
ret
outsl
push
push
push
test
rcrb
in
nop
iret
cli
inc
xchg
add
add
xor
adc
test
stos
cmc
xor
js
insl
mov
fbld
add
push
in
lods
and
mov
pop
aam
inc
jp
mov
cmpsl
in
fwait
xchg
jb
jl
xchg
xor
ret
lods
xchg
xlat
cs
into
adc
iret
in
leave
movsb
cmp
pop
push
xor
mov
sub
es
data16
fisubrs
sbb
lret
lcall
inc
sbb
repnz
and
inc
fwait
aaa
push
addr16
jle
js
je
imul
in
movsb
inc
fstps
rolb
fwait
and
push
xchg
jae
jbe
push
or
sbb
dec
inc
addr16
arpl
and
and
mov
cmpsb
inc
ud2
jns
cwtl
dec
jnp
inc
pop
inc
and
push
sbb
ret
shlb
mov
push
xchg
icebp
xlat
adcb
ror
ret
inc
stos
and
inc
icebp
xchg
xchg
shrb
enter
xchg
xor
jmp
cld
mov
scas
fdivs
fimuls
jb
sbb
pop
mov
mov
xor
inc
mov
and
test
shrl
loop
inc
frstor
adc
mov
and
pop
mov
fmull
pop
cmp
cmpsl
aam
and
cmpsl
insb
push
fistps
out
dec
in
mov
in
and
lods
jge
lret
xor
cmp
dec
or
mov
out
sub
int3
xchg
stc
xor
push
cvtps2pi
cmp
enter
lock
or
fcmovnbe
fsts
sbb
xorb
add
mov
jae
imul
lea
outsl
inc
jb
sahf
push
xchg
mov
enter
or
shrb
and
xchg
scas
ljmp
shll
fsubrl
or
pop
mov
pushf
aam
inc
lock
pusha
push
pop
xchg
sub
lods
add
lock
fldcw
fcmovb
shl
shlb
cmc
cli
in
push
cwtl
je
mov
push
ljmp
sarb
cmc
cmpsl
nop
loop
xor
and
jbe
es
xchg
cmpsb
addr16
mov
sbb
jmp
lcall
xchg
mov
in
xor
push
xor
jns
mov
cmp
push
test
mov
loop
mov
scas
fwait
pop
mov
add
pop
lahf
jmp
sub
cli
push
fwait
add
sub
imul
or
and
enter
aaa
jne
scas
es
imul
fcoml
aas
mov
jo
fildll
push
mov
pop
lret
xlat
dec
push
mov
cmpsb
push
nop
and
inc
pop
mov
jle
dec
lock
adc
mov
in
pop
loopne
sar
fidivl
fcomi
repnz
sub
mov
jp
adc
cwtl
sub
xchg
sbb
jge
mov
sbb
dec
int
mov
pushf
mov
cmpsb
rcrb
mov
push
mov
lret
or
in
icebp
inc
rclb
mov
loope
in
test
push
daa
je
add
push
sahf
push
jae
sub
bound
outsl
push
dec
leave
pop
rcrb
xor
pop
xchg
mov
mov
popf
sti
data16
or
cmp
loop
push
inc
test
mov
mov
inc
sbb
adc
mov
fstl
mov
ja
or
js
sbb
push
ret
ror
into
jo
std
and
in
lea
in
jo
jecxz
jno
jle
stc
push
dec
or
ljmp
cmpsl
enter
mov
jle
ret
pushl
loope
in
or
or
fwait
scas
lret
mov
and
outsl
dec
sti
int3
test
rclb
sbb
imul
pop
cs
imul
decb
add
or
push
fisubs
cltd
out
add
call
repnz
repnz
ljmp
mov
and
lods
aas
mov
dec
daa
mov
push
fdivs
add
fwait
lret
xchg
or
xchg
lahf
mov
out
hlt
jle
cmc
mov
jae
push
dec
mov
icebp
mov
jno
mov
mov
jl
fiaddl
inc
add
adc
and
daa
mov
push
fistpll
xchg
mov
in
push
dec
int
outsl
push
pop
dec
insb
xchg
sub
clc
sbb
mov
mov
in
fiaddl
aas
pop
add
jle
lcall
mov
inc
stos
or
outsb
sbb
cmp
jmp
or
xorb
stos
fs
jns
push
sbb
fisttps
icebp
sbb
pop
shl
imul
fnstsw
arpl
fstl
lret
jb
gs
lods
push
or
pop
fwait
xchg
sub
and
xor
stos
ret
mov
cwtl
repnz
or
addr16
andb
lods
out
test
out
inc
mov
bnd
push
imul
test
jnp
pusha
pop
into
cwtl
lea
shrl
mov
jb
arpl
ds
loope
push
jp
shll
push
xorl
push
mov
xor
push
mul
mov
push
inc
mov
ret
es
mov
push
inc
icebp
mov
jle
add
cmp
sahf
hlt
pop
jecxz
ffree
push
or
xchg
leave
inc
xchg
or
repnz
mov
hlt
subb
jle
sbb
out
and
inc
shrb
adc
mov
add
sbb
add
in
or
pusha
xor
in
inc
jno
test
cld
rol
inc
xchg
imull
sbb
mov
scas
cli
clc
fbld
lods
lret
testl
outsl
shlb
mov
lods
stos
addr16
inc
add
mov
idivb
push
add
sahf
or
inc
adc
mov
mov
test
inc
or
jle
mov
fldl
or
mov
xchg
inc
aas
inc
xlat
inc
fnstsw
xor
mov
jle
jbe
mov
inc
cld
pop
or
pop
imul
xor
popf
xor
sub
add
jmp
and
icebp
jg
mov
pop
int
cmp
je
movsl
enter
fs
dec
bound
out
add
aam
mov
jl
lret
imul
mov
sbb
jno
in
repnz
jp
pop
das
sbb
cmp
inc
add
popa
xor
sbb
stos
mov
fcompl
call
in
mov
push
mov
or
pop
dec
loope
enter
scas
outsb
pop
or
inc
adc
and
movsb
cs
outsl
mov
imul
sbb
jg
aaa
adc
ret
pop
lret
test
lcall
andb
dec
mov
ja
adc
cltd
and
inc
jg
std
mov
sub
daa
subl
lods
cli
push
int
ds
jae
inc
adc
pop
ss
popa
in
loopne
repz
popa
push
sub
lret
jae
icebp
pop
stos
test
xchg
xlat
das
outsb
cmpl
adc
add
popl
pop
pop
mov
in
or
and
cmp
jb
stos
pop
divb
mov
aad
out
xchg
pop
pop
movsl
mov
lahf
shlb
and
rorb
xor
pop
xchg
and
jne
daa
dec
insl
mov
pop
sub
shl
out
pop
push
jmp
mov
mov
pop
jo
repnz
adc
and
add
fwait
je
push
mov
jns
push
push
mov
sub
pop
xlat
mov
add
js
push
lret
push
int3
inc
push
lods
es
fildll
xchg
test
imul
mov
pop
xor
lcall
add
stos
cmp
loop
repnz
lret
or
mulb
sub
pop
in
add
dec
and
sbb
mov
insb
imul
call
pop
adc
or
cmp
andb
dec
mov
fcoml
add
mov
xchg
sbb
insl
repz
xchg
xlat
xor
jno
ljmp
dec
mov
lret
mov
scas
sub
insb
push
cs
cmp
mov
scas
mov
test
or
sub
aam
ss
xchg
shll
or
jp
or
out
add
shl
mov
addb
mov
daa
adc
push
in
xchg
xchg
add
mov
mov
cli
push
xor
in
sbb
pop
mov
push
pop
sbb
out
xor
push
jmp
dec
inc
stc
xchg
jo
xchg
dec
pop
cmp
push
lds
add
xor
pop
cmp
mov
nop
sbb
cltd
xor
lock
mov
mov
cmc
out
xchg
pusha
out
movsb
in
sbb
cmpsb
mov
cld
mov
outsb
pop
insl
lods
pusha
enter
jmp
sub
movsl
aaa
leave
orl
ds
push
sahf
xchg
push
adc
aaa
shlb
test
flds
pushf
leave
stc
cmp
or
outsl
inc
mov
lcall
les
stos
les
fisubl
xchg
arpl
lock
sub
inc
aam
ljmp
xchg
fdivr
add
mov
aad
and
add
jne
mov
sub
aaa
pop
push
les
notl
jp
mov
mov
xchg
lock
int
mov
cmp
inc
mov
mov
pop
push
mov
mov
es
inc
je
mov
add
jo
pushf
adc
jmp
pop
jns
loop
jne
or
clc
ret
cmp
mov
and
cld
icebp
ja
jnp
pop
push
cli
aas
jne
loop
xchg
push
xchg
jl
bound
xlat
xor
movsb
push
das
or
mov
sbb
test
lds
into
xor
and
mov
daa
push
dec
repnz
sti
mov
popa
aad
ficoml
cltd
out
shrb
sbb
pop
scas
lods
jne
movsl
mov
xor
stos
test
imul
xorb
and
insb
cmp
dec
loop
dec
push
int
das
cmp
sub
jg
test
rcll
je
sub
push
pop
popf
sub
fstpt
in
mov
jp
fcmovb
daa
pop
dec
aas
add
sbb
ret
mov
lds
inc
test
insb
fdivl
or
mov
lods
sub
xchg
add
pop
dec
iret
jo
popa
cmp
popf
inc
jne
jle
loope
test
jnp
xlat
int
in
jge
cli
fistl
and
and
pop
lcall
sbb
mov
hlt
pop
lock
leave
ljmp
jle
std
mov
psadbw
repz
dec
aad
les
test
sbb
paddsb
add
fs
jo
and
jle
sbb
loop
flds
mov
mov
sub
decl
lods
or
lods
notb
inc
imul
cli
or
push
xchg
inc
arpl
lock
inc
inc
mov
push
mov
xchg
jge
cmp
inc
movsl
mov
loop
jge
stc
repnz
and
lods
fs
call
xlat
lret
cmp
mov
outsl
xchg
push
lods
sbb
sub
enter
jp
aas
xor
adc
leave
and
cld
into
pop
mov
add
outsl
shll
rol
push
adc
cld
gs
mov
insb
int3
cmp
push
inc
sahf
scas
lahf
xor
pop
and
inc
cmp
xchg
fcoml
fldenv
loope
dec
das
sti
or
mov
inc
cmp
insl
bound
insl
mov
pop
iret
clc
mov
cmp
xchg
mov
adc
pop
xchg
out
dec
imulb
sbb
xor
sub
mov
iret
pop
dec
mov
jg
mov
sbb
sbb
mov
call
or
push
mov
clc
test
jo
add
fmul
ja
insb
iret
jge
pushf
or
pop
pop
mov
jno
lods
pusha
push
mov
adc
jae
movsl
mov
lods
mov
inc
push
frstor
jmp
mov
mov
orb
and
js
mov
ljmp
push
sarb
out
mov
lock
jae
cmpsb
pop
xchg
adc
adc
addr16
addr16
jne
mov
movsl
aam
jne
pusha
xor
jecxz
mov
sti
pop
ds
cmpsl
add
xchg
stos
loopne
jmp
rcl
adc
add
outsb
cs
loop
jbe
or
cld
push
lahf
pop
in
and
add
push
fdivrl
insl
push
xlat
push
out
xor
jge
xchg
fdivrl
or
ret
push
jo
dec
xchg
les
add
cli
nop
rcl
iret
repz
ds
mov
rorb
inc
fcomip
scas
sbb
jmp
out
jae
mov
inc
dec
loopne
and
sbb
xchg
mov
pop
arpl
stc
dec
out
cli
mov
pop
addr16
and
jne
push
int3
pop
add
lret
aas
fcomps
lds
mov
pop
add
loope
xor
aaa
lcall
nop
cmpsl
jo
inc
fwait
scas
inc
mov
sub
test
movl
cs
mov
cmp
push
in
movsb
lock
inc
xor
fildll
lcall
subl
or
lea
mov
jp
cmp
or
adc
in
xor
jbe
xchg
sub
or
jmp
inc
inc
stos
je
les
test
cmp
xor
mov
divl
xor
jb
mov
loope
les
sti
sbb
jle
xchg
mov
ja
std
pushf
cmp
dec
and
in
jns
or
jb
lret
test
in
out
push
mov
lahf
ret
and
roll
xor
inc
lea
push
or
nop
xchg
adc
adc
mov
dec
inc
sti
inc
test
bound
clc
xchg
std
lods
in
xor
gs
adc
jae
or
mov
das
push
daa
jne
dec
aad
addr16
push
dec
inc
loope
xor
dec
test
jp
xor
xor
sti
cmpsb
sbb
push
inc
idivl
inc
push
sbb
sbb
adc
shr
jo
adc
mov
add
dec
popa
stos
ret
add
fs
xchg
push
xchg
or
jo
cmp
mov
pushf
in
mov
jmp
dec
xchg
stos
jo
ds
sub
scas
jb
cmp
cmp
pushl
adc
scas
clc
sub
jb
ljmp
clc
adc
sbb
add
pop
push
outsl
ja
sub
adc
addr16
mov
loopne
mov
aam
dec
inc
xlat
xor
mov
fcompl
fwait
jno
xlat
loop
call
inc
jmp
out
test
lcall
adc
cmpsl
je
iret
mov
jge
out
cmp
cmc
pop
mov
imul
rclb
adc
lods
cmp
mov
arpl
call
adc
pop
in
cmpsb
mov
jbe
adcb
sub
pop
leave
loope
outsb
jecxz
cmp
testb
jbe
and
sti
lods
lret
andl
ss
inc
shlb
popa
sbb
addr16
mov
cld
cmp
aad
mov
pop
rcll
mov
jle
sub
fidivs
movsl
stos
jp
test
pop
mov
cmp
mov
out
pcmpgtw
stos
fadds
es
adcb
jae
add
jp
scas
sbb
pop
gs
sarl
push
xchg
add
sub
pushf
cmp
mov
xor
rcl
inc
add
sbbb
cmpsl
cli
sbb
mov
jp
xchg
or
mov
cli
jnp
cmpsb
mov
mov
lock
out
movsb
dec
movsb
mov
popf
cmp
dec
insl
pop
outsb
mov
mov
push
dec
mov
or
ret
adc
dec
aaa
jnp
pop
aam
jl
cmp
call
pop
add
pop
xorl
movsb
out
or
pop
jae
in
loop
hlt
scas
das
call
dec
negl
dec
push
sbb
xchg
cmp
xchg
push
mov
cmp
mov
adc
sub
clc
push
xor
inc
scas
or
xor
dec
push
sub
sub
xor
mov
stos
cmp
push
cmp
inc
sub
xchg
cmp
and
orl
loope
bound
or
xchg
mov
dec
scas
or
inc
cli
fimull
popa
inc
mov
cmp
push
xor
push
jp
adc
rorb
insl
jno
lock
xor
fistps
mul
mov
ret
pushf
push
add
loop
inc
mulb
xchg
sar
mov
fisubs
mov
dec
push
pop
cmp
in
and
xor
cs
gs
test
leave
sahf
sbb
inc
adc
fldcw
mov
inc
jbe
xchg
lret
inc
jno
cli
pop
out
push
loop
jl
xor
push
push
xlat
sahf
and
sub
sahf
push
lds
lret
adc
out
loop
std
and
ret
popa
adc
iret
mov
scas
push
out
aas
jmp
push
mov
cld
adc
jno
hlt
push
and
push
lahf
cmp
mov
add
mov
aad
dec
push
and
add
test
xor
dec
mov
addr16
jnp
mov
pop
in
mov
ja
add
mov
cwtl
cmpb
fistpl
xor
mov
repz
jo
pop
jns
cmp
in
cmp
jae
mov
pusha
mov
out
cltd
jno
loope
rcl
push
jge
jns
push
imul
stc
sub
pop
and
cmpsb
mov
lahf
sub
dec
js
and
test
or
std
out
jmp
mov
dec
sahf
dec
xchg
sbbl
sub
mov
lret
cli
vphaddwd
pop
ja
andb
es
xchg
aam
mov
loope
push
mov
mov
dec
adc
addr16
test
xor
dec
mov
dec
jbe
frstor
xor
push
mov
out
popa
push
fs
cmp
loope
mov
ret
nop
add
sbb
jl
cmp
adc
clc
lcall
out
push
inc
xor
fsubl
push
ficoml
daa
dec
pop
xor
adc
inc
push
mov
cld
shrl
jns
jge
dec
lods
cmp
jnp
sbb
mov
cmpsb
imul
imul
inc
xor
inc
jg
filds
lret
shrl
scas
out
lods
sbb
iret
inc
lea
call
pop
jo
cmp
cmp
or
lds
adc
arpl
sub
jb
cmp
fistpll
xor
push
inc
mov
jae
lcall
movsl
hlt
mov
and
sbb
push
test
xor
lret
shrl
sub
inc
cs
and
xchg
nop
cltd
fimull
lods
sbbb
lea
mov
add
pop
mov
jnp
adc
test
pop
mov
jl
mov
mov
stos
addr16
mov
jno
sbb
pop
daa
and
jo
int
push
xchg
stc
or
adc
cmp
mov
subl
cmp
arpl
or
sub
or
mov
movsl
stos
inc
daa
add
addl
pop
cmp
fwait
inc
and
popa
lds
sub
leave
stc
cmp
pop
roll
mov
stos
fstl
and
mov
stc
xor
adc
dec
jmp
arpl
cmp
xor
jecxz
or
pop
scas
shlb
dec
jo
je
inc
sub
cmp
inc
pop
mov
iret
or
lods
int
test
mov
add
rorl
dec
mov
push
fcoms
and
push
push
adc
lret
jge
xor
sbb
notb
push
shrl
aam
addr16
xor
js
jns
inc
les
xchg
inc
and
in
inc
scas
mov
rorb
dec
insl
test
pop
mov
outsl
popa
clc
xor
inc
rcrb
cltd
lcall
push
sub
ljmp
addr16
loopne
cli
dec
lcall
repnz
lret
repz
pop
enter
iret
pop
loope
jle
mov
xchg
xor
or
mov
imul
jle
int
ds
mov
mov
imul
sub
je
mov
ret
pop
enter
pop
mov
mov
ret
or
in
pushf
mov
rcl
and
sbb
cwtl
sbb
fpatan
inc
mov
or
cmp
cmp
test
loop
aam
out
je
mov
lods
xchg
mov
pop
jmp
mov
sbb
shrb
mulb
push
sbb
lods
jnp
shlb
jg
push
inc
mov
mov
out
push
into
jmp
pop
sub
push
std
pop
add
fsubl
dec
add
daa
icebp
out
fstl
and
sahf
loopne
pop
rclb
ret
fisubs
sbb
lods
les
in
or
push
mov
nop
movl
cli
gs
sbb
inc
leave
mov
mov
xlat
pop
pop
ljmp
jecxz
hlt
mov
inc
cmp
in
jnp
repnz
xchg
loopne,pn
jecxz
test
fbstp
inc
push
out
push
push
pop
popa
add
jge
hlt
fisttpl
xchg
xor
stos
push
scas
pop
sbb
lret
inc
jg
add
inc
sbb
icebp
mov
or
mov
lods
pop
sti
fabs
repz
adc
fiadds
xor
pop
xchg
mov
cmp
dec
pop
sbb
enter
jno
or
pop
mov
pop
xchg
adc
cld
add
nop
mov
adc
jl
xor
ljmp
push
loopne
clc
mov
mov
add
cli
out
xchg
inc
mov
jmp
mov
pop
dec
imul
dec
adc
stos
mov
ror
js
xor
jnp
test
inc
loope
cltd
testb
das
movsb
jo
out
int3
push
cwtl
pop
add
dec
outsl
inc
inc
xor
mov
sub
mov
xchg
mov
xchg
enter
sub
cmp
ss
idivb
jl
into
icebp
movsb
inc
ror
in
mov
scas
mov
pop
sub
jbe
mov
mov
outsl
pop
push
or
mov
adc
out
out
testl
cmp
imull
lods
inc
ret
out
pop
test
pop
pop
daa
and
or
aam
cmpsl
imul
cmp
mul
or
aam
jnp
adc
int3
mov
pop
mov
and
jecxz
ljmp
push
add
repnz
cmp
repz
hlt
add
icebp
fwait
adc
jmp
andb
arpl
cmp
jne
jbe
mov
adc
fisttps
inc
jecxz
mov
pop
jg
mov
or
jg
add
pop
xor
adc
out
mov
pop
cmpsb
loop
mov
push
jl
test
xchg
push
in
outsb
push
mov
test
mov
mov
xor
shl
pop
ficomps
jae
mov
jb
mov
in
scas
outsl
or
ficompl
mov
scas
into
sub
cmp
add
pop
cmp
pop
repnz
movsb
push
jl
loope
xor
fidivrs
sub
xor
xchg
sub
lcall
mov
xor
and
sti
loopne
mov
test
push
cmp
mov
xchg
sbb
ja
movsb
jbe
sub
dec
add
mov
sbbl
fcompl
cltd
into
insb
leave
into
adc
cld
jmp
pop
sbb
add
pop
loope
mov
xchg
scas
repz
sbbb
add
cmp
stc
cld
jbe
rcrl
inc
pop
and
cmp
fs
pop
pop
dec
adc
push
cmp
fsubrl
pusha
sub
rclb
mov
mov
mov
into
mov
sub
xchg
mov
or
sbb
shll
jne
sarl
aam
push
pop
pop
and
cmp
push
fwait
in
sub
jno
pushf
scas
int3
inc
jmp
int
adc
push
outsb
jae
daa
sbb
hlt
jge
mov
gs
cmp
adc
and
jne
std
ja
popa
adcb
xor
push
add
in
addl
int
or
sbb
call
enter
push
cwtl
divb
mov
leave
popf
add
xchg
das
pop
scas
xchg
andb
and
pop
mov
push
clc
pop
pop
cmp
mov
sub
push
fcom
mov
decl
xchg
xor
mov
add
add
push
icebp
ds
addr16
lds
mov
dec
pusha
jbe
jp
scas
mov
clc
loopne
lcall
mov
les
cmp
test
inc
dec
xlat
int
pop
or
pop
sbb
xorl
repz
lret
outsb
pop
fwait
stos
push
jo
leave
adc
xchg
ds
push
mov
mov
adc
mov
dec
mov
xlat
addl
fdivrs
fdivrs
int3
movsl
repnz
sahf
in
mov
leave
pop
cmp
ds
div
in
jle
addb
movl
pop
nop
out
cltd
daa
mov
sbbl
inc
mov
ds
pop
inc
mov
imul
insb
cmp
icebp
xor
ror
jl
adc
fcmovnu
enter
sub
inc
fldt
xchg
xor
dec
or
imul
adc
inc
test
pop
ret
into
imul
orb
cmpb
mov
dec
sbb
or
mov
push
cmp
ljmp
enter
xchg
jg
lock
call
aaa
stos
in
mov
xchg
pop
in
pop
inc
sub
test
daa
fsubrp
mov
push
rorb
iret
lods
sbb
push
test
out
and
pop
sbb
fnstenv
or
fistl
adcl
aaa
xchg
cmpsl
ja
icebp
clc
mov
xchg
xchg
push
mov
out
mov
adc
sbb
enter
mov
outsb
push
popf
sub
jmp
push
in
call
sbb
pop
test
adc
rcll
mov
jle
ret
jae
orb
jecxz
dec
pop
loop
rcrb
ret
or
pusha
jp
outsl
cmp
pop
ss
les
in
push
xchg
adc
aad
jbe
mov
push
sub
add
mov
push
mov
add
fdivl
inc
lret
arpl
cmp
cmpsl
aas
fsubrl
add
jno
je
xlat
xchg
into
adc
push
pop
daa
test
cmp
ss
call
push
mov
ljmp
ds
movsl
xchg
xor
lcall
in
pop
sahf
cs
xor
adc
mov
add
pushl
orb
and
aad
fidivs
cli
aas
dec
outsb
mov
rorb
pop
sarl
pop
jl
mov
aad
hlt
mov
nop
cli
jae
mov
test
xchg
cmp
or
sbb
dec
insb
mov
sbb
mov
lcall
pop
jbe
es
inc
mov
mov
pop
lea
and
dec
aad
mov
cltd
add
lds
popa
cmp
fcomps
inc
cbtw
cmp
sub
xor
push
push
inc
xlat
ret
ljmp
xor
mov
std
dec
xor
ljmp
imul
mov
push
inc
incl
subl
scas
out
stos
arpl
jmp
shrl
jo
xor
stc
popa
xor
shl
dec
fcompl
sbb
into
enter
inc
fucomp
or
push
cmc
xchg
sahf
dec
mov
or
xchg
shll
in
clts
pop
mov
mov
aas
lret
pop
adc
inc
or
mov
imul
cmp
fldl
jns
fiaddl
ss
clc
jecxz
cmp
je
aam
aaa
loop
ds
push
orl
cmpsb
xor
inc
es
ror
or
lret
andl
mov
dec
mov
mov
fistpll
bound
pop
lods
aad
ffree
sbb
pop
xor
int
and
push
push
daa
pop
mov
xlat
lods
es
stos
adc
out
mov
inc
pop
movsl
mov
cmpsl
add
pop
out
scas
in
loope
int3
das
ljmp
pop
je
fwait
pop
inc
sub
vpackssdw
mov
sbb
and
fcomps
ds
mov
fistps
cmp
mov
mov
mov
and
or
in
aam
dec
xchg
in
mov
aaa
sahf
faddl
scas
clc
sub
in
std
testl
and
jo
pop
leave
int
jmp
sub
call
shlb
sbb
cmc
xchg
sbb
movsb
fcoms
xor
popa
mov
xchg
rcll
sahf
jle
lea
cs
insb
scas
cs
int
push
bound
fisubrs
cmp
lcall
dec
mov
hlt
hlt
adcb
xor
sbb
jle
push
repnz
fldcw
xchg
dec
mov
jae
in
sbb
pop
movsb
loop
scas
and
insl
dec
cmpsl
or
addr16
jno
cs
addr16
ficomps
xchg
push
or
lods
mov
xchg
pop
mov
push
subb
mov
xor
adc
mov
pop
jns
lods
ja
mov
xor
je
aad
mov
dec
mov
mov
iret
jg
mov
movsl
pushf
subb
das
scas
and
cmc
pop
scas
or
adc
adc
inc
int
xchg
rcl
adc
mov
repnz
bound
lea
dec
sub
test
push
out
mov
fidivrl
movsl
add
orb
xchg
or
dec
mov
pop
cwtl
or
movsl
mov
bound
xchg
aam
adc
push
cmp
push
mov
pop
iret
outsb
cmp
xor
inc
mov
push
pop
and
sarb
mov
pop
sbbb
inc
dec
je
enter
repnz
cmp
mov
movsl
jns
roll
mov
pop
hlt
mov
dec
add
pop
add
gs
outsl
dec
or
les
and
sbb
xor
in
out
out
dec
pop
scas
lds
and
dec
cld
popa
mov
xlat
stos
and
pop
pop
mov
fisttpl
test
fistpll
mov
pop
jbe
mov
and
popf
lcall
or
addb
pop
pusha
subl
or
sbb
rcrl
sub
movsb
mov
in
and
pop
sbb
movsb
jo
repnz
push
bound
dec
xchg
fstps
sahf
arpl
dec
jns
in
paddq
outsb
mov
int3
ss
mov
lea
fsubrs
jl
mov
pop
adc
pop
fimull
adc
scas
jns
and
dec
dec
mov
xor
and
mov
cwtl
push
ret
xor
xchg
movsb
rdtsc
es
xchg
xchg
cmc
aaa
jo
andb
lods
insl
out
mov
xorl
push
xor
mov
dec
hlt
jp
fldcw
mov
sahf
xor
push
adc
bound
stc
or
mov
mov
rorb
out
xor
loopne
fs
mov
stc
rcrl
data16
inc
cld
mov
jno
sahf
test
push
dec
xchg
cmpsb
add
leave
cmp
in
or
mov
cmc
sub
scas
push
pop
add
xchg
in
pop
mov
iret
out
jbe
pop
pop
inc
cltd
or
repz
mov
jno
sbb
outsl
scas
push
adc
mov
or
loop
mov
cmp
mov
popa
xchg
daa
mov
loop
das
and
push
mov
pop
cwtl
dec
sub
shrb
lahf
shrb
fbstp
int3
adc
je
mov
jo
mov
mov
lods
jb
add
test
aam
stos
pop
lahf
add
add
es
outsb
jae
repnz
inc
push
in
test
push
repz
call
cmc
lcall
lea
or
popa
or
fisttpl
ret
loopne
add
jmp
int
adc
pop
dec
fcmove
mov
loop
out
sub
jecxz
ret
pop
sahf
lds
ljmp
pusha
sti
adc
or
inc
jl
xchg
es
xchg
frstor
cli
adcb
jno
sub
mov
shl
pusha
lahf
sub
int
icebp
mov
ja
ljmp
icebp
jmp
scas
jge
rolb
jp
add
fs
mov
cli
sub
imul
sub
imul
cmp
mov
and
push
jne
repz
rcr
popa
inc
dec
aas
or
add
testb
push
or
jmp
xchg
in
cmp
or
gs
shlb
loopne
stos
push
adc
int
xor
cmp
mov
mov
xorl
gs
xlat
mov
ret
out
clc
and
or
xor
and
jg
icebp
jmp
push
inc
push
in
repz
cmp
xor
jge
outsb
cmp
popa
add
das
pop
dec
mov
test
fmuls
lcall
cltd
je
into
out
out
jae
clc
cmp
loop
cmpsb
push
mov
mov
pop
xchg
movsb
movsb
int3
jnp
std
js
push
test
roll
mov
add
gs
int
test
daa
jne
ret
push
loope
vmovdqu
xchg
inc
mov
clc
out
mov
pop
dec
enter
push
sahf
stc
es
xchg
in
gs
cmp
js
bound
jmp
xor
outsl
imul
ret
pop
jg
rcrl
out
lret
inc
iret
outsl
inc
pop
cmp
push
push
mov
rcll
adc
in
and
decl
sbbl
shll
enter
pop
bound
out
xchg
jbe
into
xchg
dec
push
call
test
int
and
stos
sahf
adc
into
xchg
mov
dec
push
jl
movups
inc
iret
divl
push
add
out
in
dec
outsl
cmpsb
sub
mov
adc
ds
sub
jbe
cmp
insb
cmpsl
adc
movsb
lods
inc
ret
imul
adc
add
or
das
test
xchg
bound
aad
adc
je
sahf
cmp
ja
aam
and
push
jne
jmp
addr16
or
mov
and
aas
repnz
cmp
mov
sbbb
pop
push
jmp
ret
cmp
jbe
iret
insl
movsl
pop
xchg
pop
fdivrs
hlt
cs
sbbb
lea
cltd
xchg
lcall
fwait
and
jne
xchg
imul
inc
mov
ja
fcmovbe
pushf
ds
jb
xor
ljmp
mov
out
cld
xchg
pushf
sub
xor
mov
and
xor
jmp
pop
test
push
push
movsb
fisubs
out
pop
push
sub
and
ss
fwait
cmp
xor
stc
fdivrs
xchg
push
mov
mov
call
mov
fistpll
push
mov
rcll
mov
hlt
sbb
pop
lcall
jmp
fwait
loopne
push
cmp
adc
andb
jnp
pop
cli
pop
pop
stos
inc
adc
cwtl
mov
lahf
ficoml
testb
lret
data16
clc
push
rclb
ds
xchg
mov
dec
and
add
test
je
mov
push
in
mov
pop
rorl
repnz
cmp
fwait
jb
loop
push
cmp
xchg
jae
mov
xbegin
fsubrs
addr16
or
push
daa
dec
mull
sub
movsl
out
outsl
and
orb
and
inc
and
fildll
jo
lret
cmp
repnz
sub
ficomps
jbe
pop
das
test
xchg
stc
fwait
pop
imul
rcrl
hlt
sahf
dec
mov
push
mov
inc
sbb
sbb
sub
addl
mov
push
lret
mov
call
mov
pop
sub
sub
es
xchg
cmpsb
mov
rcrb
hlt
pop
jne
mov
int3
jle
or
and
mov
fists
inc
adc
jle
jmp
pop
adcl
mov
imul
into
or
or
test
sbb
divb
or
xchg
clc
mov
add
add
sbb
les
std
mov
test
inc
lret
filds
xor
and
push
mov
fnstsw
test
sbb
push
push
mov
add
xchg
icebp
cmp
fnstcw
push
insb
cmpsb
das
and
jo
dec
pop
call
jp
loope
cmp
test
into
stc
gs
pop
cmc
fisubs
add
pusha
das
out
push
pushf
rcr
mov
iret
test
pushf
adc
loope
test
or
pop
out
leave
mov
pop
lret
cmp
pop
add
stos
lock
or
outsl
adc
int3
and
mov
push
iret
icebp
sbb
push
pushf
in
jns
jp
cmp
mov
cmp
in
lea
inc
push
xor
add
xor
cmp
stos
rol
jp
aad
loope
xor
setbe
inc
in
and
xchg
pop
insb
jne
mov
adc
clc
gs
fwait
testb
cmc
xor
and
mov
and
mov
repz
or
jmp
jbe
pop
inc
sub
jae
fimuls
dec
nop
inc
cmp
inc
repnz
push
je
icebp
mov
push
dec
int3
movnti
data16
sahf
loop
xchg
pusha
jle
loop
in
or
push
js
and
iret
mov
data16
dec
lret
loope
shll
loopne
daa
test
pop
cld
test
mov
sahf
out
enter
or
cld
mov
addl
xor
sti
lret
jb
idivl
popf
cmp
mov
xchg
jno
outsb
xor
cmpsb
mov
cmp
mov
fsubrl
nop
sahf
or
push
cmp
pop
add
cmc
dec
pushf
mov
mov
arpl
test
sub
ret
imul
sbb
push
sbb
lcall
into
pop
xor
or
popa
jp
and
fwait
dec
shrl
jle
add
orl
dec
repnz
movsb
scas
inc
sub
pop
sbb
loop
jne
jge
mov
mov
inc
les
aad
fsubl
nop
out
mov
inc
pop
in
sub
jle
mov
fstl
mov
cmp
inc
mov
test
or
pop
cwtl
andb
xchg
imul
mov
fists
sub
cmp
jne
imul
divb
xchg
push
jb
sbb
adc
mov
push
imul
xchg
jmp
or
sahf
sbb
jns
jg
adc
insl
mov
xor
mov
dec
mov
jmp
cmp
mov
divb
jne
adc
xchg
stc
aad
imul
mov
or
jns
cs
fdivs
sub
mov
mov
jg
sub
cmp
daa
and
insl
add
les
int3
popa
rcrb
lods
pop
les
mov
ss
jne
fs
aas
adc
fcompl
inc
cmp
and
xchg
mov
mov
push
mov
nop
add
pop
mov
inc
mov
push
xchg
sub
pop
cmpsb
test
roll
add
adc
stos
cmp
adc
out
push
int
into
dec
rol
insl
popf
fbld
mov
cmp
loop
int
aam
outsb
mov
dec
mov
scas
adc
das
icebp
hlt
rcll
pop
aad
sub
and
das
bound
or
add
jmp
movsw
js
into
inc
adc
mov
jo
push
das
cmp
lods
xchg
mov
xor
sub
in
add
pusha
sub
stos
movsl
idiv
mov
mov
mov
adc
jae
int3
icebp
out
sbb
repnz
add
sahf
cmpb
lods
push
lods
push
mov
or
cmpb
pop
test
lock
loope
ja
inc
pop
xchg
mov
mov
aad
aas
in
mov
sahf
xor
js
jmp
mov
mov
mov
jnp
iret
xor
and
lods
pushw
pop
inc
jbe
scas
xchg
push
mov
lahf
movsl
pop
mov
mov
sbb
out
shrl
pop
aad
popf
sbb
mov
jo
xor
arpl
dec
cmp
xchg
into
lret
insl
loopne
adc
ffreep
pop
pop
ror
out
mov
jae
sbb
ja
mov
xor
cmp
mov
xchg
movl
cmp
and
push
or
jno
mov
mov
mov
mov
mov
cwtl
out
dec
movsl
push
movsl
stos
inc
jg
sbb
push
aaa
shl
inc
fistps
sbbl
or
xchg
push
jae
push
dec
push
pop
pop
jb
and
mov
or
or
cmp
cld
xchg
push
gs
xorb
inc
mov
and
sub
lock
xchg
sbbb
cwtl
adc
roll
sub
int
add
out
ja
push
lea
inc
mov
sbb
or
sahf
adc
popa
mov
call
pop
js
mov
jg
cmp
shlb
fdivrs
adc
dec
cld
push
fcmovbe
xchg
mov
nop
and
aam
push
mov
pop
iret
or
stos
sub
jecxz
bound
out
push
call
mov
ljmp
push
add
add
fsubrl
jg
push
insb
sbb
mov
data16
dec
subb
cmp
pop
gs
divb
add
inc
mov
shll
xorl
jne
loop
shl
enter
addr16
sarb
hlt
jns
rorb
fbld
or
out
push
cmc
into
xchg
jnp
adc
fs
icebp
outsb
push
push
leave
movsl
mov
in
and
in
adc
lahf
dec
cmp
arpl
and
xor
mov
out
xor
int3
push
les
call
lret
cmp
out
adc
iret
andb
movsl
test
mov
mov
movsl
nop
jbe
push
es
jo
out
lret
lods
add
sub
rcrb
aaa
inc
jge
adc
fcoms
mov
jecxz
mov
in
and
popa
pop
lret
mov
mov
fcompl
add
push
lahf
sub
pop
inc
push
out
or
mov
mov
jmp
adc
aad
jb
jge
cmpb
pop
cmp
shlb
es
es
dec
and
mov
dec
call
xchg
push
pop
fs
or
pop
rol
sysret
leave
inc
cmpxchg
and
push
out
xchg
popa
push
dec
nop
add
outsb
pop
test
jbe
rcl
push
ljmp
incb
inc
adc
lods
aam
cmpsb
test
pop
adc
sti
or
sub
sbb
les
daa
out
int
fdivs
sbb
add
pop
rcll
push
rorl
jae
lock
mov
and
or
lds
mov
xchg
lods
insb
je
cmp
sar
std
mov
pop
lcall
or
mov
jo
inc
in
aad
sub
and
xor
rorl
out
pop
pop
inc
dec
inc
rolb
orl
mov
dec
sub
rcr
inc
adc
jl
cmp
mov
pusha
subb
adc
or
ret
ror
add
or
dec
xchg
imul
pusha
jbe
lret
das
fs
cwtl
mov
dec
push
xor
or
and
mov
lods
cli
mov
popa
fisttpl
push
xlat
and
and
mov
into
cmp
sbb
loop
jae
xor
fnsave
push
and
adc
sahf
cmpsb
mov
mov
shrl
pop
dec
xchg
loop
mov
add
movsb
push
push
fistpll
push
inc
jns
jae
push
loopne
dec
push
call
mov
fisttpl
es
sbb
fcmovnb
jp
test
dec
mov
jle
test
mov
loope
xchg
xor
cmp
mov
stos
imul
dec
incb
shr
cmc
xchg
imul
mov
cwtl
push
sbb
jp
push
xor
call
icebp
push
movsl
lret
scas
jmp
sbb
int3
add
scas
sti
inc
inc
adc
test
and
jl
imul
test
lret
sub
mov
dec
add
xchg
jg
cmp
add
leave
xchg
pop
addl
sar
push
add
pop
sub
xchg
mov
xchg
gs
popf
fistpll
sbb
pop
jle
incl
sbb
jne
ds
or
cmc
shrl
xchg
jo
cmp
and
jge
fisttps
pop
cwtl
inc
cmc
loop
jg
mov
cwtl
movsl
sbb
adc
push
mov
movsl
imul
movsl
xchg
nop
sar
fcomps
jmp
dec
adc
test
mov
sbb
test
jecxz
pop
adc
je
popa
push
cli
orl
sub
fwait
rolb
sbb
cld
sub
test
jae
scas
pop
subl
and
into
imul
mov
cmp
dec
sbb
insb
sbb
xor
imul
adc
pop
mov
jge
push
xchg
fisubrs
stos
push
push
or
repz
mov
out
insl
cwtl
mov
sbb
sbb
lahf
cmpsl
cmp
cmp
pop
stc
mov
ss
jbe
aas
test
jmp
sbb
sbb
popa
sub
xchg
subb
jl
ss
xchg
add
in
stc
jns
jns
xor
inc
sbb
inc
xor
out
in
sub
adcb
imul
sub
pop
popa
movsb
dec
in
in
mov
ret
icebp
popf
add
sarl
les
pop
pop
movl
xchg
sahf
inc
movsl
lcallw
and
push
jecxz
lahf
out
pop
aas
push
mov
push
mov
fdivs
xor
mov
out
jno
push
frstor
into
jno
enter
jmp
repz
xlat
pop
cmp
jl
fistpl
xchg
jl
dec
mov
je
xchg
jle
add
hlt
mov
sarl
pop
sub
test
xchg
xlat
call
std
and
lds
mov
cmpsl
jnp
mov
insb
mov
sub
shll
adc
jge
loopne
fmulp
rcrl
inc
sub
jnp
jne
jnp
dec
mov
repnz
xor
cmp
mov
jg
mov
scas
sarl
jmp
pusha
ficoml
cmp
mov
in
add
xor
pop
addb
fldenv
and
rolb
testl
mov
incb
mov
vpmovmskb
and
in
or
aas
xchg
jns
test
je
sbb
fists
mov
inc
cmc
sbb
fcoms
and
add
jb
pop
xchg
sub
into
iret
aam
mov
or
std
sub
mov
ljmp
mov
scas
adc
popa
lds
test
icebp
mov
iret
xchg
int3
int3
and
pop
fs
lods
push
jne
cs
es
mov
push
loop
movsl
push
xchg
push
fcoml
lcall
inc
dec
fsubs
dec
xchg
mov
cmp
sub
int
shlb
mov
push
hlt
rclb
das
mov
shll
stos
xor
jne
add
scas
data16
enter
dec
loope
sbb
jg
mov
and
jb
pop
jne
out
inc
enter
testb
bnd
loop
adc
xchg
pop
mov
shll
and
adc
daa
mov
subl
aad
mov
popf
dec
mov
mov
call
xorl
mov
insl
fwait
cmpsb
ds
push
cmp
mov
jge
loopne
lcall
dec
pop
lds
jg
push
xor
add
stc
sar
mov
and
mov
pop
out
adc
aad
scas
call
sbb
hlt
aas
and
xadd
or
xchg
mov
mov
ret
push
xor
lock
fadds
xchg
pop
jb
jno
jae
sub
add
pop
pop
or
loop
hlt
sub
enter
push
inc
aad
xor
mov
test
xchg
or
jae
ret
jae
push
cwtl
mov
stos
push
stos
cmpsb
call
push
mov
or
insl
int
outsl
mov
fwait
lods
push
add
outsl
test
mov
addr16
sub
jle,pt
pop
repz
jl
and
in
pop
sub
ret
sub
pop
repnz
mov
fucomip
xchg
sarb
xlat
jns
imull
xchg
imul
fs
outsl
cmp
mov
push
inc
mov
mov
bound
pop
cmpsb
inc
pmaxub
in
and
and
lea
cmpsb
fadds
pop
orb
dec
dec
cs
inc
jbe
adc
popf
cmp
das
fdivrl
loop
sbb
mov
mov
hlt
lods
sub
sbb
repnz
fisubrl
mov
xchg
test
std
stos
fcomps
push
dec
ficoms
aam
rclb
push
cmp
xlat
in
fs
in
ljmp
mov
lret
fdivl
aad
scas
out
mov
cmp
mov
xchg
fwait
dec
popa
sub
xor
dec
ljmp
xchg
in
dec
scas
mov
jmp
clc
shlb
sbb
push
shll
jo
inc
rcll
mov
out
ljmp
and
sbb
cli
nopl
dec
cli
pop
inc
jge
mov
xor
pop
dec
sub
shlb
shll
sub
xor
pop
push
ja
shr
enter
pop
imul
test
pop
cltd
pusha
je
fdiv
xor
es
daa
lods
xor
hlt
cwtl
fildll
adc
or
aaa
jb
fistpl
stc
loopne
lods
clc
pop
cmp
lock
fnstcw
orb
add
push
stos
test
mov
hlt
repnz
dec
cmp
and
and
push
iret
pop
adc
std
or
dec
cmc
push
pop
or
out
pop
mov
dec
pop
cmp
xor
cmc
cmp
gs
enter
icebp
push
and
lods
push
xlat
dec
bound
sub
mov
pop
test
lods
xchg
or
lret
frstor
xor
xor
mov
push
movsl
jbe
pop
enter
es
js
sub
mov
jbe
jp,pn
repnz
inc
movb
push
mov
mov
fcmovbe
aam
jge
push
outsb
jg
loope
jbe
push
pop
dec
mov
pusha
and
dec
pop
int3
imulb
or
ljmp
lcall
and
jl
cmp
incl
sub
cmp
insb
inc
arpl
ljmp
popf
fwait
cmp
jecxz
cmpsb
and
dec
faddp
sbbb
nop
nop
add
test
call
enter
or
loope
pop
pop
daa
mov
js
rcll
loope
push
std
mov
imul
sub
mov
dec
lods
inc
xor
fists
adc
aad
add
notb
mov
stos
dec
leave
xchg
je
ss
std
cmpsl
mov
pop
mov
xchg
push
cltd
inc
movsl
jmp
fcomps
das
jmp
adc
push
or
cmp
push
push
lret
mov
popa
ficompl
orb
adc
mov
ds
sbb
jae
ret
xchg
adc
aad
leave
xchg
or
imull
popa
rclb
sahf
mov
mov
sti
or
jno
fs
es
push
mov
ds
dec
push
ja
int
out
xchg
pop
dec
mov
push
push
jno
and
mov
add
fwait
sbb
push
insl
mov
add
lds
add
cmpsb
jg
ljmp
jle
dec
leave
hlt
xchg
in
rep
jo
ss
push
jns
inc
jb
ficompl
pop
not
cmp
jne
cs
xchg
frstor
enter
sub
sbb
popa
arpl
aam
xchg
loop
test
jg
enter
xchg
fdivrl
mov
mov
cmc
xchg
ficoms
mov
lods
fisttpl
push
xchg
aam
mov
fsubp
jp
mov
add
std
rolb
and
push
sub
lock
fwait
stos
xor
imul
mov
cld
jne
in
pop
sahf
imul
xchg
popa
stc
xor
fdivp
cmpl
lahf
mov
mov
jge
ret
sub
pop
test
pop
cmp
sbb
or
and
mov
iret
aam
jne
iret
pushf
add
inc
or
push
push
mov
mov
js
dec
ss
mov
push
inc
sub
aaa
stc
adc
xor
test
and
arpl
xor
lock
sbb
adc
mov
sub
mov
aam
sbb
divb
and
or
jns
cmp
fnstcw
rcrl
adc
int3
or
insb
push
sub
hlt
out
rclb
aam
xlat
cmp
lods
fwait
xchg
jge
aas
push
adc
loope
mov
cs
das
xchg
dec
mov
outsb
xor
and
sub
jbe
scas
outsb
add
xor
aaa
or
push
and
bound
outsb
imul
xchg
mov
xor
inc
pop
cld
stos
dec
imulb
jb
in
jne
clc
scas
sub
cmpsb
data16
mov
pop
fld1
gs
push
pusha
shll
aad
jo
jb
cmp
mov
insl
ret
out
mov
sub
dec
cmpsl
inc
into
adcl
pop
mov
ret
fistl
sahf
mov
pop
faddl
vpunpcklwd
lret
mov
notb
lahf
xlat
and
dec
bound
test
xor
push
sub
leave
mov
daa
lcall
pushf
mov
mov
push
pop
sbb
adc
icebp
ficoml
adc
dec
jne
shlb
outsb
mov
xor
mov
push
out
pop
rorb
adc
sbb
out
mov
and
sub
xchg
sub
add
sbb
mov
push
add
ds
dec
shll
mov
inc
push
aaa
scas
fabs
loopne
sbb
xchg
jge
pop
fcmovne
aaa
sub
inc
test
pop
bound
adc
xchg
repz
adc
or
xor
aaa
insl
incb
pop
mov
cmpsb
mov
inc
xchg
jp
mov
dec
and
das
mov
jne
pop
jbe
mov
xchg
jo
stc
popa
mov
in
fsubl
pop
cmp
leave
stos
mov
fisubl
in
les
sub
push
adc
gs
dec
ds
aas
in
push
outsb
je
loop
iret
bound
mov
sub
rorl
std
fs
insl
inc
xchg
xchg
mulb
adc
mov
repz
movsl
shr
xchg
iret
sub
inc
out
int
out
lds
imulb
inc
cmp
xor
test
fs
int
addr16
pop
test
adc
outsl
sub
sbb
notb
pop
add
jne
sti
ffree
cli
cmp
push
cmc
imul
add
inc
mov
lcall
fisubs
sub
cmc
jo
notl
xchg
clc
dec
in
push
cmc
pop
and
pop
xchg
sub
sub
mov
xor
cwtl
jecxz
addps
test
pop
pop
or
sub
ljmp
xor
stc
rcl
or
lahf
push
lods
decl
mov
test
xchg
cmp
out
mov
xchg
sahf
inc
push
cmc
leave
cmp
sarb
pop
adc
js
das
and
movsl
xchg
lea
adc
fwait
std
jge
rorb
call
mov
adc
clc
stos
test
cld
movsb
xlat
nop
xchg
or
push
cmc
stos
push
lods
cwtl
xchg
xchg
lahf
fistps
int3
sub
add
xchg
adc
loop
fsubr
js
push
fldcw
push
xor
lods
jb
fcomip
mov
mov
or
jo
adc
out
push
sahf
rcrb
pop
ja
test
xlat
jo
pop
sub
sbb
lods
andl
popa
hlt
xchg
xchg
pop
and
add
xor
lds
inc
rol
xorb
sub
pshufw
movsb
inc
sub
mov
inc
jne
and
stos
pop
xchg
jecxz
das
pop
ret
pop
insb
or
dec
pop
mov
xor
shrb
out
sbb
jge
or
push
push
pop
sub
jle
inc
xchg
sbb
fildll
out
addl
daa
mov
data16
loope
pop
mov
mov
adc
mov
shll
sbb
push
and
in
or
movsl
xchg
fiadds
and
jne
cmpsl
push
int3
sarl
jae
or
or
fstpl
cmp
mov
xor
fld
jae
cmp
in
mov
enter
sti
in
and
adc
inc
mov
scas
repz
pop
sbb
add
scas
push
repnz
out
nop
lahf
mov
scas
inc
pop
push
addl
fs
cwtl
test
rcll
or
or
mov
mov
push
fbstp
jecxz
je
aaa
or
pop
jg
mov
fdiv
adc
pop
aas
inc
mov
adc
cmp
add
andl
sbb
push
add
or
stos
or
cmpsl
addb
adc
ret
sbb
fildll
push
or
inc
movsb
lods
ds
add
add
aam
mov
jmp
mov
clc
lods
out
inc
cld
and
fwait
jo
mov
sub
and
push
insl
pop
mov
cmp
sub
lcall
gs
stc
sub
push
inc
lds
mov
mov
inc
adc
sub
adc
aam
xor
mov
cmpsb
test
xchg
mov
dec
jne
push
xchg
cmpsl
xor
loopne
ficoms
sarl
aas
test
aaa
out
movsl
repnz
mov
pop
xlat
sub
ljmp
dec
rorl
or
and
mov
fdivs
and
lock
daa
sti
adc
sbb
xor
xor
outsl
stos
mov
dec
inc
jecxz
pop
stos
gs
lahf
lods
outsl
jp
pop
addr16
cs
lock
lods
int3
adc
shrb
sbb
in
and
cmp
outsl
dec
sub
xor
jp
test
jnp
popl
add
out
mov
sbb
lcall
lock
addr16
leave
je
xor
jle
xchg
ds
dec
fnstenv
mov
cmpsl
sbb
jno
enter
insb
jae
icebp
xor
test
insl
mov
mov
inc
cmp
cs
xchg
lahf
leave
sub
xor
popa
inc
pop
inc
rol
nop
fnsave
lods
lahf
vandps
in
mov
add
push
pop
sahf
sbb
or
push
mov
sbb
xchg
cwtl
adc
subl
notl
movsl
mov
call
rolb
xchg
xchg
push
pusha
xchg
add
cmpsb
and
fdivrl
nop
inc
int3
cmc
mov
pop
push
call
outsl
fsubr
bound
sbb
dec
and
mov
rep
cmp
push
push
popf
movsb
dec
enter
cwtl
xor
orb
out
popa
add
push
inc
sub
sbb
mov
jns
negb
add
push
jmp
jle
push
fisttpl
pop
adc
lahf
repz
cmpsb
fsub
stos
sub
leave
and
mov
into
sbb
mov
aas
movsb
movl
and
iret
mov
in
adc
mov
arpl
jmp
nop
sub
and
arpl
popf
lock
int3
jg
decl
in
pushf
fnstcw
pusha
or
int
pop
shll
dec
shl
int3
das
incl
mov
or
mov
add
sbb
push
shll
cmc
fldl
sub
repz
dec
mov
fwait
xchg
or
iret
pop
pop
jne
hlt
add
cmpsb
ljmp
out
jnp
sbb
push
push
push
sub
xchg
pop
mov
in
mov
or
adc
jo
and
xlat
leave
lods
xor
push
in
pop
jae
push
repnz
fwait
pop
mov
cmp
add
ret
and
aaa
repz
test
lahf
mov
sub
ror
cmp
and
leave
add
int
gs
out
mov
mov
push
and
ja
xor
fdivl
lods
pop
add
std
mov
mov
mov
inc
cltd
loop
push
ljmp
dec
pushf
push
ja
push
subl
xchg
or
and
stos
inc
pop
loope
or
aad
fiaddl
frstor
fidivrs
push
ret
cmp
push
jne
jo
jle
push
popa
in
mov
enter
xchg
pop
sbb
mov
insl
out
fbld
imul
pushl
and
sbb
fistpl
inc
push
xchg
xor
sbb
or
sub
add
leave
enter
sti
add
aam
movb
fidivl
leave
popa
push
xchg
call
jmp
push
or
leave
and
adc
out
pop
scas
sar
xor
out
daa
jns
xchg
enter
mov
inc
ret
cmp
adc
sub
hlt
mov
push
je
test
out
dec
push
aad
cmp
xorb
imul
mov
and
sub
xor
ljmp
stos
push
fwait
stos
cmp
mov
aaa
lcall
mov
pop
and
jmp
pop
inc
xchg
jbe
mov
sub
push
push
mov
sbb
pop
sbb
push
test
aaa
loop
fisubl
cli
and
cmp
dec
cmpl
dec
ja
and
sbb
js
sbb
lods
lcall
cld
sbb
sub
jnp
sbb
cmpsl
xor
mov
fldt
popf
cwtl
sbb
scas
call
push
stc
inc
and
test
test
sbbl
fisubrs
ds
ret
test
adc
sti
adc
pop
or
jmp
add
in
xor
and
jp
inc
sbb
mov
mov
aas
push
rcl
mov
fwait
adc
sbb
insb
adc
icebp
mov
enterw
pop
add
inc
or
jo
arpl
repnz
les
in
cmpsb
lcallw
sub
fwait
cmpsb
ljmp
push
or
aad
jle
movd
mov
sbb
and
inc
aam
sub
push
gs
dec
mov
sub
outsl
mov
and
sahf
divl
jbe
into
jge
xor
cs
mov
iret
fsubs
mov
lahf
stos
cmp
or
iret
dec
addr16
jmp
repnz
repz
lock
and
shlb
lds
inc
flds
dec
es
pusha
jnp
lds
push
adc
xchg
stos
mov
adc
pushf
mov
push
icebp
decb
mov
aas
insl
inc
js
les
jo
inc
inc
imul
test
sub
cmp
out
fsubrl
cld
jecxz
mov
jg
mov
ljmp
pushf
insb
jmp
xchg
or
mov
mov
inc
cmpsb
rcl
pop
add
inc
push
jmp
add
mov
jb
push
jns
xchg
dec
in
pop
daa
xchg
cmp
das
call
cmpsl
decl
aam
pop
ret
out
into
pop
fs
lahf
inc
pop
pop
ret
rcl
sti
push
test
jne
lret
aad
clc
gs
addb
sbb
jae
sbb
dec
add
rolb
lods
or
test
daa
out
push
mulb
pop
out
xchg
repz
bound
xlat
push
ljmp
ror
outsb
mov
rcl
rcll
fcoms
int3
mov
dec
imul
xor
fsts
xchg
mov
dec
es
dec
fs
fdivrs
fxch
fwait
es
clc
pusha
push
sbbb
cmp
push
adc
push
sub
int
data16
inc
mov
ficoml
ljmp
mov
in
and
jne
clc
repnz
add
or
fcmove
enter
lea
xchg
inc
or
scas
jnp
add
push
inc
popf
xchg
enter
push
cmpsb
leave
cmp
loope
jo
bound
push
out
test
add
popa
jo
pop
sub
push
mov
std
add
fadd
add
dec
jbe
cmp
sbbb
jp,pn
mov
xor
clc
sub
sbb
sti
jl
stos
rorb
xbegin
jge
dec
out
lods
gs
pop
rorb
jp
mov
fbstp
sbb
push
mov
mov
push
cmp
adc
dec
jg
imul
sbb
lods
sbb
mov
push
add
cmp
stos
mov
and
mov
push
push
push
xchg
xlat
pop
enter
stos
hlt
and
popa
cwtd
cmpsl
addb
aam
fadds
das
push
mov
inc
gs
cs
ret
adc
rcr
inc
fildll
test
inc
sbb
mov
or
loop
enter
xor
push
in
dec
stos
mov
into
cmpsl
mov
mov
xchg
push
sub
lods
js
call
cmp
scas
lahf
adc
out
jno
scas
scas
add
cmp
pop
popf
faddl
in
lcall
fcomps
pop
and
test
inc
iret
into
into
mov
mov
arpl
adc
int
lret
add
mov
popa
jle
mov
xchg
push
and
add
outsl
stc
int3
push
jno
mov
rcrl
fcmove
xchg
fdivs
cmp
fmull
push
imul
outsl
icebp
sub
test
xor
mov
mov
decb
adc
lcall
jmp
je
mov
cmp
rclb
sub
stos
je
fidivs
dec
mov
sub
inc
or
test
insb
stos
mov
jmp
movsb
aad
repz
std
push
dec
or
mov
cld
lock
je
xchg
push
js
mov
sti
pop
push
lods
fcmovnb
xchg
rorb
push
add
xor
fsubrs
out
loopne
sbb
push
add
xchg
test
sub
pop
fstps
xchg
adc
ficompl
cmp
popa
pop
pop
gs
js
imul
aam
pop
repnz
mov
and
ret
loopne
push
icebp
aaa
push
push
leave
ljmp
dec
call
sub
imul
xchg
and
xchg
outsb
popf
cltd
mov
sbb
dec
shll
loop
sbb
mov
jmp
shrb
adc
pushf
sbb
arpl
inc
xchg
or
rcrl
sbb
and
incl
clc
pop
mov
add
in
test
hlt
xchg
sub
out
in
mov
cmp
loopne
je
mov
imull
sbb
sub
ss
js
inc
cmpsl
shl
cltd
mov
and
pop
mov
push
sbb
fbstp
mov
gs
hlt
les
les
rep
lret
hlt
dec
xor
xor
cmp
repz
cmp
mov
aad
cmp
imul
inc
cwtl
test
cmp
je
push
pop
inc
inc
inc
push
rcl
pop
outsl
fwait
clc
insl
mov
negb
xchg
ljmp
insb
cs
lock
sbb
imul
gs
xor
arpl
sarb
sbb
test
mul
inc
push
or
shrl
adc
inc
out
loope
je
jbe
ret
icebp
cld
lahf
jne
jne
sub
jnp
cmpsb
pusha
pop
push
push
adc
test
add
leave
ljmp
push
in
cmp
daa
xchg
cmp
stos
ss
jne
sahf
movsb
call
jg
loope
jmp
jne
mov
sub
sahf
mov
fsubs
jge
inc
jnp
xor
jo
inc
in
mov
cmp
mov
test
inc
je
sub
pop
ss
jo
jae
xor
scas
ja
push
sti
pop
mov
stos
push
out
xchg
pop
jle
mov
push
sub
pop
mov
sbb
pop
dec
jnp
test
mov
jle
test
movswl
rorl
xchg
scas
push
xchg
push
addb
andb
int3
push
mov
xchg
int3
mov
mov
xor
pusha
arpl
fnstsw
sysexit
mov
push
fisubrs
je
mov
inc
enter
popa
fs
pop
mov
addr16
clc
inc
pop
mov
push
inc
jbe
pop
data16
mov
dec
inc
xor
mov
inc
jge
cltd
in
stc
jne
sbb
and
or
outsl
sub
mov
cld
outsb
and
popf
stos
test
jecxz
out
repnz
cmp
mov
xor
bound
ffree
and
sbb
lea
std
pop
mov
cmpsl
loopne
mov
jmp
cwtl
mov
xchg
jge
xor
ficoml
aad
shll
sub
cmp
and
fistl
stos
sub
push
inc
sub
mov
dec
call
xor
push
xchg
pop
pop
jae
enter
jne
movsl
or
inc
cmp
and
add
mov
dec
pusha
push
out
xchg
push
popl
shl
xchg
or
xor
fs
outsl
mov
pop
jno
xchg
xor
aas
xor
aad
fisubl
cmpsl
add
xlat
loopne
adc
mov
pop
xor
inc
mov
jne
std
mov
jbe
xor
roll
pop
sub
icebp
or
adc
cmpsl
mov
mov
xor
push
shlb
icebp
jno
jp
into
filds
fcoml
adc
lret
shll
lods
fisubs
pop
roll
adc
xlat
jns
dec
add
in
inc
adc
push
jb
aad
cwtl
cmp
mov
sbb
pop
popl
clc
inc
cmp
scas
out
mov
nop
dec
mov
mov
jb
out
push
test
inc
xchg
sub
adc
mov
fldl2t
add
xchg
aaa
sahf
outsl
mov
les
negl
ret
mov
or
jb
xchg
adc
ret
ficoml
aad
inc
pop
cmc
mov
jecxz
mov
dec
fsubrl
xor
or
bound
punpcklbw
jnp
out
test
or
push
das
test
inc
mov
xchg
rcr
adc
ja
add
hlt
arpl
aaa
insl
dec
dec
repz
jg
push
into
test
or
pop
push
mov
and
outsb
xor
xor
mov
cli
push
pushf
and
push
idivl
add
jp
mov
and
movsl
and
jecxz
fwait
pop
stos
lock
sbb
adc
mov
fimull
sub
push
push
xchg
imul
repnz
xor
nop
iret
sti
jl
and
pop
testl
fs
out
filds
addr16
inc
mov
and
outsb
pop
rolb
ficompl
jmp
jecxz
movsl
movsl
mov
add
pop
sahf
dec
cmp
mov
lea
pop
pop
xor
sub
movsl
fistpll
cli
mov
adc
insl
add
adc
xchg
outsl
add
cmp
nop
addr16
mov
cmpsl
daa
jno
cmp
inc
cld
xchg
fisttpll
push
loopne
mov
inc
xchg
test
push
mov
mov
out
pop
jg
jl
cwtl
or
xchg
mov
xchg
pop
cmp
pushf
repz
jb
repnz
data16
rcrb
loopne
pop
push
pop
test
lods
jnp
sub
popa
gs
adc
inc
push
out
mov
pop
pop
fwait
test
xchg
mov
sub
iret
stos
gs
or
xchg
stos
std
mov
fldt
int3
cmp
stos
shll
jne
inc
sub
push
mov
dec
pop
mov
inc
scas
addl
xor
mov
pop
sub
pop
push
push
sub
pusha
pop
push
push
lds
cmp
add
sub
arpl
inc
xchg
sbb
ljmp
mov
jmpw
xor
test
aas
mov
dec
call
sub
or
test
and
inc
insb
push
pop
call
bound
mov
jp
ljmp
scas
sbb
addr16
cmpsb
lret
mov
mov
sub
cmc
pop
inc
cmp
loope
jb
cmp
dec
arpl
andl
push
andl
lods
aaa
mov
adc
roll
scas
jp
arpl
jo
enter
pusha
sbb
push
ss
in
cli
aas
out
ss
push
cs
pushf
iret
inc
push
daa
andl
mov
jo
cli
cli
xor
adc
xlat
in
mov
pop
mov
dec
cmovg
or
lock
xor
jnp
add
mov
xor
int
mov
pop
push
cltd
mov
mov
imulb
mov
cmp
clc
call
sahf
sbb
mov
push
adc
sbb
aas
imul
pop
adc
lods
cltd
insb
jb
push
cmp
rol
jnp
and
gs
mov
adcl
sub
mov
data16
adc
adc
jo
mov
cmp
fs
cmp
jp
pop
aad
mov
fcomi
lock
into
stc
ret
adc
testl
push
dec
inc
imul
jno
ss
ja
es
dec
mov
sti
gs
mov
lds
lods
lcall
mov
or
pop
dec
and
cmpsl
shl
aam
ja
scas
popf
push
mov
adc
xchg
cmp
popa
xchg
mov
push
imul
roll
fiaddl
test
mov
lret
bound
in
loop
push
dec
mov
or
mov
mov
outsl
ds
pop
pop
cmp
in
dec
add
mov
iret
mov
sub
into
and
dec
mov
ss
testl
adc
cmc
leave
push
js
lock
leave
xor
sbb
sbb
mov
add
or
scas
jecxz
mov
ja
push
dec
inc
ss
jb
mov
fstl
cmpsb
jmp
jmp
ja
pop
out
pushf
add
pop
int
rol
test
loop
cmc
xlat
mov
outsl
mov
addr16
sti
stos
pop
mov
adcl
fs
xchg
add
out
cltd
cs
call
mov
outsb
imull
or
ja
adc
xchg
xchg
in
sbb
sbb
cltd
xor
cltd
and
ja
push
inc
ret
les
jmp
lods
outsl
cwtl
mov
stc
dec
dec
add
stc
sbb
pop
cmpsb
mov
ljmp
add
ljmp
add
xchg
into
xchg
insl
add
xchg
push
cmp
sbb
popf
popf
and
jle
mov
sbb
int3
sub
clc
jle
mov
push
rcl
pop
lock
jne
push
jne
mov
ret
fisttps
je
std
or
sti
ss
mov
lret
xchg
icebp
test
xchg
mov
and
mov
xchg
stc
mov
mov
dec
mov
adc
and
in
test
loope
xchg
sbb
mov
add
push
jbe
xchg
loope
out
mov
enter
sub
fistl
sbb
pop
sbb
xchg
cltd
lds
cmc
cld
and
pop
shlb
cmp
xchg
add
in
pop
pop
inc
inc
ficoms
mov
jl
aad
inc
in
je
xchg
xchg
mov
divl
mov
mov
cmp
mov
sub
jle
jbe
fmulp
pop
cmpsl
or
sbb
and
adc
xor
stc
push
inc
xchg
daa
push
lahf
dec
pop
mov
ret
jno
jp
jb
stos
daa
ret
stc
push
mov
and
outsl
imul
mov
jae
lcall
scas
dec
push
idivb
dec
mov
xchg
jmp
and
movsb
and
xchg
out
pop
je
cli
mov
dec
adc
ljmp
pushf
or
js
pop
inc
lahf
pop
test
xor
stos
setns
xor
loop
fnsave
into
cmp
jae
popf
jmp
mov
push
pop
cmp
movsl
scas
jmp
push
inc
push
fldcw
add
mov
ja
and
add
sub
add
icebp
mov
xchg
mov
dec
es
imul
insl
dec
mov
mov
push
sbb
jp
sbb
fsub
test
lock
jne
out
jg
jno
mov
shll
fwait
add
push
stos
les
pop
xor
mov
mov
ret
jbe
jae
dec
sar
xchg
es
fadds
push
enter
test
mov
shl
sti
push
xchg
and
jne
dec
and
pop
lods
inc
pop
jb
mov
cmp
repz
scas
aam
ret
sub
arpl
cli
dec
xchg
jno
scas
xchg
dec
or
stos
pop
ficompl
enter
test
arpl
fwait
jne
jp
mov
mov
sbb
cwtl
push
aaa
std
and
add
std
and
out
pop
mov
shlb
dec
lods
ljmp
cmpsl
nop
push
cmpsb
jge
sub
cli
cmp
sub
adcl
and
add
repnz
decb
inc
mov
shrb
fwait
mov
ret
loop
sbb
mov
sbb
mov
rorb
data16
fldt
pop
scas
aas
cld
in
shl
aaa
sbb
loope
call
cltd
out
stos
not
mov
pop
nop
adc
mov
pop
jns
leave
arpl
pop
popa
or
cwtl
icebp
ljmp
inc
xorb
lock
clc
or
add
jno
cmp
roll
xor
hlt
rcrl
sbb
adc
in
arpl
cs
cli
cmp
jns
or
hlt
mov
dec
imul
pop
flds
xlat
mov
fldcw
arpl
daa
mov
adc
add
mov
stos
in
dec
in
fadd
or
xchg
pop
std
dec
cli
shr
mov
notb
or
rclb
jecxz
xor
fsubp
cmc
std
lods
xchg
aaa
xlat
pslld
push
add
lods
loopne
sub
mov
jnp
decb
out
pop
out
ret
pop
scas
in
xchg
into
mov
int
pop
stos
out
xorl
adc
and
rclb
add
sahf
fiaddl
pop
sbb
lret
sbb
popf
sub
sbb
push
mov
es
lods
adc
popf
dec
dec
mov
jbe
movsb
out
jbe
nop
stc
lea
mov
dec
inc
sub
cmpsb
std
or
hlt
cltd
addb
dec
repz
iret
int3
insb
xchg
into
pop
lcall
push
mov
mov
push
pop
or
xchg
aas
lods
mov
sbb
adc
xchg
add
sub
inc
inc
roll
adc
adcb
insl
popa
outsb
std
scas
fstps
in
ja
sbb
data16
shl
dec
jge
push
jno
jne
shrl
lahf
rorl
push
repz
adc
fucomip
lret
mov
adc
loop
popa
xchg
or
or
jne
jno
test
mov
mov
lock
fldenv
or
adc
lret
idivb
fbld
add
mov
rcrb
inc
cwtl
and
adc
mov
xchg
jo
out
cmp
call
repz
test
shl
pop
bound
mov
mov
addl
mov
or
mov
or
shlb
or
dec
dec
jo
out
es
repz
push
mov
xchg
pop
leave
pop
cli
sbb
sarb
mov
addr16
sarl
push
or
jns
mov
xchg
adc
ss
in
and
dec
xlat
mov
out
xor
xchg
jbe
rorl
pop
inc
inc
cwtl
adc
leave
clc
clc
cmp
negb
nop
mov
sbb
adc
xchg
dec
mov
test
out
mov
pusha
iret
cld
mov
test
jb
icebp
and
mov
shl
inc
mov
sub
shlb
decb
clc
dec
mov
lea
sub
out
ret
sbbl
cmpsb
push
jns
mov
sbb
imul
lea
xchg
lret
rcrb
jns
sub
loope
mov
mov
add
cmp
lods
jnp
mov
sub
into
dec
add
lods
mov
sub
push
dec
push
es
je
gs
or
sub
xor
lahf
and
loopne
adc
push
cwtl
lret
inc
pop
dec
dec
cmp
add
xor
and
cwtl
nop
adc
adc
dec
xor
fs
xor
sbb
lods
push
add
push
mov
rcr
mov
addr16
dec
cmp
mov
dec
int
popa
lods
incb
push
inc
lret
inc
xchg
sub
adc
pop
mov
shl
pmuludq
into
jecxz
shll
inc
lahf
lods
dec
mov
filds
cltd
push
adc
jno
cs
fildl
xchg
or
pusha
add
add
cmp
int
call
jno
das
and
and
jg
loopne
adc
mov
mov
bound
dec
addr16
add
sti
push
mov
jge
mov
jle
xor
mov
addr16
mov
fiaddl
arpl
shrl
scas
adcb
dec
outsl
sub
xchg
cmp
daa
xor
sti
pop
pop
in
adc
xchg
fisubl
aad
cmc
daa
cmp
ss
cs
or
pop
inc
sub
pop
shr
sub
ret
mov
scas
lahf
push
lret
xchg
sub
imul
test
dec
cmp
call
xor
subb
cmp
inc
ret
pop
adc
mov
xor
fisttpll
mov
aad
pushf
sbb
cs
pop
shlb
push
push
pop
or
mov
sahf
and
orl
mov
adc
sub
dec
or
inc
clc
icebp
xorl
sbb
lahf
sbb
insl
mov
dec
imul
fistpl
pop
outsb
and
push
inc
fnstenv
jnp
xor
test
test
xchg
shll
mov
mov
mov
cmpsb
aam
es
stos
movsl
jno
int3
js
bound
out
jne
jnp
push
pop
sbb
mov
inc
lret
sarb
cmp
mov
cmp
adc
movsb
inc
cmpsl
aas
iret
xchg
xor
push
sahf
imulb
sub
xchg
ds
mov
pop
or
fdivp
lret
in
bound
xchg
addb
decl
sarl
mov
pop
loop
repnz
pusha
lds
pop
adc
rcll
insl
std
fisubrl
iret
ficoml
jecxz
ret
lahf
arpl
sub
outsb
ficoml
cld
xor
add
push
inc
mov
lods
or
xchg
loope
mov
sbb
add
aaa
sbb
dec
cltd
mov
sbb
scas
push
push
cwtl
xchg
inc
dec
inc
jle
mov
mov
aas
xor
mov
cld
add
test
and
mov
aas
cli
notl
sarl
adc
mov
imul
lea
cmp
mov
enter
icebp
or
aam
jmp
inc
xorb
jo
into
sti
movsb
jns
jp
jge
xlat
mov
xor
push
jge
data16
fdivp
hlt
sub
out
mov
cmp
scas
dec
or
pusha
in
pop
add
pushf
sbbl
mov
pushl
rclb
in
push
gs
stos
xor
push
inc
pop
or
jecxz
fdivr
pop
mov
pop
hlt
add
jmp
out
jb
pop
xor
int3
stos
inc
dec
push
sub
mov
pop
jmp
add
stos
add
jb
sbb
lods
sub
mov
mov
inc
mov
inc
or
inc
test
push
inc
pop
ja
dec
xchg
dec
es
pop
fs
xchg
xor
or
dec
sub
inc
mov
mov
insb
xchg
cmpsb
stos
jno
mov
aas
lcall
sbb
fs
adc
add
dec
incl
jecxz
imul
outsl
test
or
jp
orl
fldcw
aam
xor
lret
mov
scas
leave
push
fildl
movsb
sub
ds
stc
jecxz
mov
stos
lcall
fdiv
jg
inc
add
sbb
iret
mov
notb
test
pop
pop
aad
push
add
push
pop
inc
mov
stos
adc
inc
test
addr16
push
adc
cmp
mov
xor
cmp
icebp
pop
or
push
pop
insl
xchg
loopne
cmp
fs
cltd
dec
xor
fmul
inc
cltd
xchg
clc
adc
lcall
pop
add
cwtl
jmp
popf
stos
sti
push
push
push
dec
lea
inc
dec
jl
pop
and
xchg
popf
test
push
movsb
sbb
cmpsl
adc
adc
pusha
aas
into
into
fidivs
test
out
push
adc
ret
xchg
out
cmp
scas
enter
xor
xor
push
xor
xchg
dec
mov
mov
mov
in
push
pushf
outsl
add
or
cmp
sub
jmp
lds
sub
sbb
addb
cmp
add
adc
inc
xor
sti
cli
push
sbb
jbe
flds
cmp
xor
jno
dec
lods
pop
or
xor
nop
les
ret
fs
jge
jecxz
mov
push
fucomp
dec
imul
jl
cmp
mov
dec
sub
loopne
mov
out
push
popf
mov
aam
enter
out
pop
sub
incb
push
push
fstpl
scas
mov
mov
xchg
xor
jp
sub
adc
xchg
sbb
icebp
xchg
jne
arpl
xchg
addr16
stos
test
cmp
adc
fucompp
fwait
push
lahf
and
bnd
mov
lret
cmp
decl
mov
jns
andnps
out
dec
mov
xchg
mov
xchg
lret
cmp
cwtl
test
push
cmp
fimuls
sbbl
test
or
mov
je
subb
loopne
pop
imul
outsl
insl
je
and
mov
push
shlb
push
mov
inc
cmp
and
inc
push
or
fwait
cmp
pop
ret
cmp
scas
add
mov
pop
mov
ja
ret
sahf
lock
jge
daa
and
add
jecxz
pop
icebp
cs
outsb
mov
or
es
sti
jle
mov
jg
frstor
hlt
sbb
pop
outsb
aam
jp
push
dec
jp
addl
add
mov
roll
ss
dec
test
cmp
lea
dec
or
flds
mov
add
xchg
shrl
dec
hlt
nop
andl
add
mov
fldenv
les
stos
rcl
mov
xor
ret
insb
and
push
lds
cmpsl
imul
pushf
ret
cmp
stos
or
jp
es
or
inc
sub
sub
ret
cmc
mov
pop
push
xchg
sti
pop
imul
sbb
cld
popf
lods
push
in
in
ret
ret
jno
cmp
stos
add
dec
cwtl
pop
cld
leave
mov
sub
sub
hlt
push
add
int3
mov
ljmp
sahf
test
or
jg
xor
mov
xor
pushf
enter
dec
push
iret
iret
cltd
push
inc
sub
popa
pop
pop
jg
add
xchg
mov
repz
jmp
pop
jbe
inc
call
add
cmp
scas
mov
sbb
lret
imul
or
inc
and
icebp
cs
ret
popa
pop
dec
sbb
ret
push
sub
sub
mov
or
sbb
mov
add
shll
push
sbb
jnp
pop
cltd
fisubs
fisttpl
divb
sub
arpl
movsb
lret
out
pusha
shl
sti
ja
xor
mov
sbbb
sub
pop
fnstenv
push
dec
mov
push
lods
push
xor
or
shlb
mov
push
fcom
hlt
fnsave
xchg
shl
or
call
lea
imul
pushf
test
in
sarb
pop
inc
pushl
cmp
xchg
add
or
loopne
push
jle
inc
mov
or
ds
dec
loope
ror
sarb
push
insb
or
sub
dec
mov
es
sub
les
mov
mov
in
mov
mov
and
fnstenv
or
adc
push
stos
jno
out
loop
mov
shrl
gs
lea
out
jne
xor
mov
ret
imul
js
or
dec
add
mov
mov
mov
loopne
cmp
call
mov
aaa
and
into
in
aaa
add
rorl
push
cs
pop
stos
hlt
jge
pop
xor
xchg
pop
pop
fsts
cmpsb
addr16
mov
cmp
adc
cmp
pop
push
insl
push
andb
addl
mov
cmpsb
cld
ret
mov
rorl
inc
push
pop
jg
xchg
mov
mov
lock
in
es
adc
fisubrl
ret
jle
lods
mov
inc
clc
jp
dec
pop
jno
pop
push
mov
test
sub
sub
addr16
add
push
sbb
lods
add
push
ss
xchg
sbb
add
push
daa
call
insb
xor
outsl
mov
adc
dec
cs
xchg
mov
fwait
lea
jns
stos
lds
mov
imul
xor
jge
jmp
push
mov
ja
ja,pt
jecxz
mov
cmp
and
xchg
pusha
call
ds
out
or
sahf
jbe
mov
jno
lret
mov
scas
insb
fisttps
mov
dec
xchg
jne
les
cmp
sbb
stos
jl
adc
leave
fsubr
xor
xor
popf
xor
insb
xlat
pop
out
arpl
insb
iret
cwtl
and
out
xor
xor
or
jl
mov
mov
or
dec
shrb
mov
pop
call
inc
pushl
in
pop
mov
dec
mov
inc
mov
repnz
xchg
jns
je
arpl
pop
sbb
outsl
fst
into
xchg
gs
dec
daa
mov
mov
bound
inc
inc
xchg
rcrb
xor
popa
mov
sbb
jle
mov
lods
xchg
jmp
out
andl
lea
sub
dec
pusha
push
mov
xchg
xor
clc
push
cmp
lahf
stos
inc
cmp
addr16
icebp
outsb
inc
test
dec
call
mov
in
fidivs
aas
gs
jnp
jb
inc
or
sbb
mov
mov
in
fwait
mov
stos
adc
inc
push
mov
mov
mov
andl
cltd
ss
lods
sub
fcomps
fsubl
in
inc
subb
xchg
push
clc
mov
iret
int
xor
aaa
sbb
test
shl
mov
cmpsl
dec
call
jecxz
or
call
dec
fdivs
into
pop
adc
adc
frstor
dec
aas
pusha
lahf
sub
iret
out
imul
enter
cmpsb
or
jle
orb
add
out
mov
push
repnz
out
dec
adc
xor
pushf
sub
imulb
cwtl
imul
lahf
push
out
addl
sahf
sub
cld
leave
push
sbbb
popa
inc
add
mov
and
sub
cmp
stos
mov
nop
mov
scas
dec
int
dec
push
jnp
push
add
xchg
insb
dec
xchg
jge
push
mov
jb
cmp
fucom
mov
fistpll
adc
add
and
les
in
pop
into
lret
xchg
cmpsl
lahf
loop
push
lahf
pop
cmp
leave
ja
and
inc
pop
loope
es
stc
lea
insl
and
dec
xor
js
mov
mov
mov
sbb
fnstsw
push
mov
les
xchg
popf
or
mov
jae
bnd
sbb
call
pusha
xchg
xchg
push
xchg
jbe
mov
scas
icebp
sub
mov
pop
jge
mov
stos
sub
pop
cli
loopne
mov
enter
shlb
jno
ljmp
in
sub
inc
icebp
imul
xor
lret
das
les
sbb
lahf
push
pop
testl
mov
fwait
jge
roll
mov
fmull
test
shl
pop
add
push
jmp
rsqrtps
gs
ret
in
out
push
xor
insb
jne
call
adc
imul
lahf
in
loop
outsl
pop
dec
jl
sbb
and
shrl
sub
inc
jle
std
test
add
xlat
jns
ljmp
cmpb
pop
ret
lret
rcrl
int3
das
jg
mov
idiv
push
aaa
sbb
mov
and
cmp
int3
mov
mov
int3
lret
jnp
dec
nop
push
hlt
jne
int
sahf
jecxz
or
adc
outsl
sub
dec
or
jo
std
jmp
and
xlat
push
int
fsubrl
jecxz
pop
popa
xor
das
outsl
xor
xchg
push
inc
mov
ret
repz
dec
lcall
mov
popa
loop
adcb
ljmp
push
push
sub
mov
dec
or
lahf
push
shr
fmull
loop
mov
test
jl
mov
lcall
inc
gs
lahf
jecxz
lahf
push
xor
out
sub
test
sti
mov
cmp
adc
jnp
flds
pusha
xor
push
bound
lods
enter
cmpsl
aas
callw
aaa
sbb
jmp
lea
xor
jo
xlat
add
push
inc
hlt
jl
inc
dec
xor
arpl
pop
loope
mov
inc
dec
cmp
aaa
mov
repz
repnz
loopne
movsb
jp
cmp
je
repnz
in
popa
pop
mov
push
dec
cmp
adc
enter
pop
ss
fcomps
scas
lds
rcr
dec
subl
push
adc
imul
imul
sbb
mov
popl
inc
outsb
out
loopne
ret
dec
arpl
xchg
hlt
adc
sbb
lods
jmp
movsb
lret
pop
mulb
int3
xor
fdivs
pop
mov
mov
lahf
lsl
xor
dec
fimull
mov
xor
out
in
ja
or
mov
ja
icebp
cmp
jno
stc
and
mov
sti
cmpsb
inc
mov
data16
pop
loopne
jl
and
jecxz
xchg
mov
add
std
jne
aas
mov
cltd
ret
mov
push
xchg
pop
movsl
test
inc
ret
out
xchg
pop
jne
sbb
hlt
movb
sarb
ja
cltd
adc
shr
push
sbb
mov
clc
sub
sub
mov
aad
pop
icebp
rcr
aaa
cwtl
imul
js
arpl
repnz
pop
pusha
add
xor
pop
lods
or
jbe
ljmp
mov
stc
movsl
test
adcl
push
and
and
push
and
add
push
movq
pusha
xor
ret
gs
lods
pop
dec
sub
mov
sub
out
inc
push
cmp
pop
scas
and
push
mov
jge
js
mov
in
in
or
leave
push
adc
xchg
or
lcall
aaa
cli
dec
mov
mov
inc
inc
jae
or
mov
shrl
pop
xlat
repnz
sub
mov
sti
fimuls
inc
fldcw
lock
mov
cli
mov
test
mov
cmp
movsl
test
and
sti
rorl
cld
loopne
fidivrl
cli
dec
pop
pop
and
js
xchg
test
lahf
mov
push
adcb
push
jno
cs
xchg
call
pop
push
mov
pop
sub
frstor
ret
xchg
pop
cmp
sbb
mov
mov
sti
push
pushf
push
mov
je
push
xchg
mov
stos
mov
push
test
jo
pop
insl
imul
aaa
fnstenv
pop
cs
in
inc
aad
aad
sub
xchg
xchg
adc
sbb
cli
sbbl
popf
sub
adc
mov
adc
lret
pop
popf
xor
jle
adc
inc
out
filds
or
mov
lea
adc
sub
jp
and
xor
test
imul
icebp
inc
push
mov
pop
cltd
mov
cmc
add
fimull
adc
mov
mov
xor
jmp
cmp
push
inc
idiv
xor
add
cltd
add
and
push
mov
fwait
jg
jo
adc
outsl
mov
outsb
lret
push
out
pop
sub
popf
rorl
arpl
lods
call
rolb
cltd
cmpsl
mov
mov
mov
jl
jmp
outsl
dec
scas
push
fmuls
movsb
repz
xchg
es
shl
cmp
mov
mov
inc
cmpsl
or
fwait
mov
add
sbb
test
mov
fisttpl
sbb
jl
pushf
nop
mov
call
call
mov
sahf
call
xor
adc
arpl
shll
cltd
mov
mov
mov
in
in
int3
dec
fadds
call
push
gs
push
pop
xlat
pop
int
fcomps
test
bound
sbb
mov
xchg
fsubrl
mov
pushf
push
test
mov
mov
pause
out
bound
pop
fisttpl
test
clc
nop
fldenv
add
push
xchg
imul
pushf
ror
cmp
stos
lods
scas
addr16
mov
add
out
ljmp
test
mov
xchg
jle
outsb
jg,pn
mov
dec
xor
push
ret
fwait
dec
cmc
out
stc
ds
and
pop
sbb
and
push
dec
sub
push
cmp
push
jne
repnz
testl
dec
push
pusha
mov
dec
into
mov
jae
lret
mov
fsubrs
jl
add
mov
es
push
out
sub
notb
in
adc
mov
jmp
mov
cmp
add
lea
jle,pn
cmp
push
xchg
ljmp
mov
pop
icebp
jns
adcl
inc
cmc
in
pop
dec
shrl
lret
adc
dec
sbb
xchg
mov
xchg
rolb
lcall
int
out
cmc
popf
dec
jnp
test
mov
mov
shll
lds
mov
xchg
pop
lret
push
ret
xchg
in
fdivr
adc
cmc
dec
sbb
int3
sbb
inc
fcomps
aaa
fistpl
inc
cmp
mov
movsl
mov
sbb
loopne
inc
xchg
cwtl
lret
inc
ror
push
xchg
mov
push
fadds
xor
test
sub
xchg
aad
pop
or
push
jnp
jp
outsl
xchg
jb
pop
cltd
dec
addr16
adc
lahf
outsb
into
imul
sub
push
jmp
pusha
stc
mov
and
leave
data16
cli
mov
sub
mov
loopne
sub
leave
cmp
jne
std
sub
dec
jno
cmpsb
roll
mov
jle
adc
hlt
stc
mov
arpl
fwait
sbbl
cmpsl
pop
out
pop
mov
mov
mov
scas
std
push
mov
movsl
ret
rcll
movsl
dec
pop
mul
or
stos
hlt
lcall
mov
sbb
mov
stos
dec
push
mov
popf
out
xchg
cmc
dec
xchg
sub
jbe
push
in
out
adc
stc
lods
jb
test
add
pusha
ss
inc
pop
xchg
add
xor
push
mov
in
jp
inc
cmp
clc
and
inc
loop
adc
repnz
pop
pushl
popf
cwtl
add
popa
hlt
sbb
hlt
mov
mov
mov
out
jmp
jae
inc
pop
push
pop
cmpsl
nop
aad
mov
loope
mov
dec
out
call
cmp
sub
popa
cmp
push
mov
add
std
rcll
data16
xchg
iret
call
and
stos
ds
aad
sbb
jns
pop
mov
lcall
daa
frstor
and
inc
or
shll
mov
adc
add
jno
outsb
scas
int3
inc
or
mov
mov
add
or
sarb
sbbb
pop
xchg
xor
clc
push
lods
jmp
sbb
jl
shll
shlb
xlat
cmp
mov
rcl
mov
or
scas
lods
and
clc
pop
dec
jl
das
xchg
scas
jmp
dec
or
cmp
test
mov
test
mov
in
call
inc
jo
out
adc
repz
fsubl
scas
mov
jno,pt
leave
fcomip
aaa
lret
out
mov
sbb
xchg
xor
sbb
inc
enter
jae
and
pusha
mov
aam
rcrb
sti
fmull
mov
lea
push
inc
mov
mov
dec
dec
mov
xor
mov
aam
jmp
fs
loope
or
out
cmp
test
xchg
pop
jecxz
and
stos
in
sub
ss
pop
jge
adc
adc
mov
xor
jbe
loop
fmull
sub
xchg
xchg
std
popa
mov
lds
dec
mov
ja
push
ds
cmp
pop
sbb
xchg
imul
ud0
sub
push
outsb
popf
adc
lock
arpl
outsb
xor
aam
rcrl
pushf
and
xchg
sub
loope
push
pop
mov
xor
push
and
inc
pop
mov
or
xchg
pop
pop
and
dec
fstpt
lods
div
mov
addr16
out
std
mul
rcrl
imul
dec
xchg
andb
sub
imul
shll
xchg
xchg
pop
pop
jge
mov
mov
dec
and
jg
divb
lods
enter
inc
loope
adc
sbb
pushf
mov
push
inc
das
xchg
xchg
jo
jg
fildl
jp
testl
push
roll
jns
dec
xchg
pop
add
sub
push
decl
xor
lret
pusha
cmpsl
aas
push
cmp
sub
mov
loop
or
lods
xchg
ret
out
stos
jecxz
pushf
add
mov
pop
into
jl
adcb
stc
mov
sbb
jbe
xor
sbb
push
shl
stos
mov
repnz
inc
ret
cld
data16
pop
pop
mov
in
ret
inc
inc
push
xchg
inc
inc
leave
es
mov
cmp
sub
mov
subl
mov
popf
int
aas
ss
push
stos
repnz
int
scas
pop
fisubs
fwait
subb
or
packssdw
mov
outsb
inc
push
push
stos
push
leave
scas
adc
sbb
or
cs
adc
cmp
inc
sub
or
stc
out
pusha
shll
xchg
sub
mov
mov
and
cli
enter
fistpl
mov
xor
and
popa
into
adc
pop
aam
or
rcrl
cpuid
pop
outsl
stos
add
roll
pop
in
out
inc
push
add
add
test
jno
dec
loope
mov
inc
pop
sbb
scas
fisubl
add
sbb
mov
popa
lods
mov
inc
adc
adcl
mov
sub
nop
fcomps
or
int
pop
pusha
mov
dec
stos
loop
mov
xchg
sbb
jb
mov
push
push
fisubrl
rcrl
je
push
int3
xchg
aad
scas
xchg
adc
subb
inc
fxtract
dec
push
stos
fwait
push
pop
aaa
xor
push
pop
sub
mov
adc
adc
pushf
sbb
test
sahf
add
insl
fsubl
das
test
int3
adc
rolb
aam
pop
add
push
add
cwtl
addr16
lock
push
in
out
iret
push
lret
aam
push
and
roll
add
loope
les
jbe
add
leave
shr
dec
outsb
jae
clc
mov
nop
or
test
mov
xlat
pop
aaa
out
xor
jbe
icebp
pop
xlat
lds
icebp
sbb
pop
nop
xchg
push
mov
in
std
in
cmpsl
push
movsl
xor
or
mov
or
shlb
cwtl
sarl
es
xor
xchg
add
ret
push
loope
and
lock
test
fs
repnz
jo
rclb
fwait
adc
jg
cmp
mov
aad
arpl
mov
outsb
pmaxub
lds
push
dec
jl
or
adc
add
push
cmpsb
and
pop
dec
jmp
sbb
enter
leave
inc
mov
sub
push
xchg
daa
cmpsl
and
push
lock
insb
push
mov
push
jp
jg
fsubrl
loop
cli
out
jle
test
xchg
sbb
or
mov
repnz
sbb
aas
stc
scas
push
aaa
aaa
or
jmp
nop
lods
xor
mov
out
fnstenv
pop
fdivs
pop
femms
stos
xor
dec
popf
jnp
je
idivl
mov
mov
jge
pushf
cs
jmp
or
jmp
mov
out
sub
sub
adc
push
pusha
repnz
cmp
pop
sbb
sbb
loop
jecxz
dec
push
aad
fbstp
fs
xor
outsl
or
prefetch
pop
cmp
aas
icebp
mov
mov
jmp
enter
pop
iret
leave
stos
movsb
in
inc
mov
jbe
mov
rorb
lods
testb
cmp
push
jo
loop
scas
sub
mov
xor
cmc
pop
rcll
mov
call
lods
inc
cmp
xor
clc
mov
xchg
inc
aaa
lret
dec
pop
aad
mov
jae
cld
inc
mov
mov
fidivl
xlat
imul
hlt
rolb
adcb
repnz
in
ret
out
jb
loop
adc
mov
pop
sub
cltd
pop
ja
jns
pop
push
in
imul
int
sbb
sbb
into
cmp
or
std
pop
pusha
sahf
test
hlt
test
lret
negl
pusha
dec
fldt
inc
push
mov
xorl
aam
mov
dec
mov
add
jmp
inc
and
adc
and
and
mov
clc
sub
cmp
daa
pop
sahf
cwtl
inc
cs
fiadds
sahf
out
addr16
pop
pop
xchg
mov
push
dec
cli
adc
or
push
popa
and
cmpsl
dec
xlat
jae
mov
jns
sbb
xchg
pushf
dec
or
hlt
sbb
or
inc
pushf
fldcw
xorb
xchg
ficoml
and
pop
outsb
xchg
add
call
xor
mov
es
cwtl
test
dec
in
shll
push
mov
jle
ja
pusha
mov
jp
dec
sbb
cmp
inc
or
in
mov
and
insb
push
pop
sarl
push
adc
sbb
sbb
jmp
popa
jne
pop
sahf
xchg
lret
push
call
mov
fldt
cmp
sub
adcl
movsb
dec
sub
cmpsb
adcl
pop
and
cmp
mov
jns
and
push
mov
cltd
ljmp
adcl
imul
adc
cmp
mov
cmp
or
in
jb
jecxz
sbb
adc
mov
stos
add
sar
icebp
jg
dec
inc
mov
cmpsb
cwtl
add
out
aam
ja
push
bound
scas
int
cltd
jb
inc
push
push
mov
push
cmp
repz
jns
lahf
lods
jl
dec
push
js
mov
addr16
outsb
jle
ret
arpl
pop
aaa
pop
jnp
cmp
popf
lock
jae
dec
aaa
cmpsl
and
cmp
pusha
cmc
push
aas
test
mov
repz
addr16
jmp
add
pop
outsb
int
not
ffree
es
fmull
cli
test
sub
test
inc
pusha
fs
sub
adc
sub
sahf
int
cmp
movsb
ss
mov
mov
push
stc
jns
mov
stc
aas
fildll
or
jns
push
pop
lcall
cli
sbb
xchg
push
dec
mov
jle
lcall
adc
test
mov
xcrypt-ecb
cmpsl
int
sub
sbb
mov
ret
stos
mov
xor
xor
jmp
les
movl
cmpl
jns
inc
sub
add
dec
lods
cli
cmp
hlt
into
pushf
outsl
hlt
lea
adc
add
push
cmp
movsl
jmp
dec
pushf
gs
mov
mov
and
inc
jns
loop
jl
repnz
jbe
lret
cld
mov
push
test
pusha
jns
stos
xor
sub
mov
cmp
xor
mov
in
cmp
or
xchg
sub
mov
jp
cmpsb
loope
in
decl
pusha
mov
inc
pop
leave
inc
cwtl
popf
adc
test
cli
imul
push
lods
enter
outsl
lock
mov
cmp
mov
push
stos
pop
daa
pop
out
aad
or
xor
mov
shr
push
mov
pushf
jl
lock
addr16
cwtl
sub
or
shl
adc
shrl
mov
xorl
into
sti
mov
rclb
fsubs
lock
in
inc
mov
pop
mov
cwtl
dec
insb
test
xor
jle
fmuls
loope
dec
xlat
pop
mov
xor
pop
push
add
sub
push
mov
adc
or
inc
pop
shlb
mov
dec
ror
sub
pop
mov
hlt
loope,pt
int3
mov
xor
inc
cmpsl
das
insl
popf
negl
adc
shll
andl
xor
lds
push
iret
test
loope
add
sbb
cwtl
outsb
mov
xchg
pop
push
pusha
ret
pop
std
xchg
push
movsb
add
push
ss
enter
xchg
pop
insl
pop
leave
test
dec
jmp
fiadds
int3
ja
mov
data16
xor
jmp
es
inc
lcall
mov
cmpsl
push
mov
lods
test
pusha
inc
jecxz
imul
fnstcw
xor
push
out
cmp
rcll
in
or
cmp
fidivl
test
jecxz
cmpsb
aad
stos
sub
pushf
sti
sbb
insb
sbb
and
out
pop
pop
in
outsb
das
aas
pop
test
in
aas
adc
inc
in
fidivrs
push
in
sbb
fwait
hlt
les
les
pushl
jmp
ss
ds
push
pop
inc
mov
dec
popf
jbe
shr
mov
pop
sbb
xchg
cmp
mov
cltd
jle
cmc
mov
xlat
jb
add
push
cld
test
lods
add
or
ret
mov
jnp
mov
xor
push
xchg
dec
xor
xchg
xchg
push
adc
push
ds
xor
popa
and
cltd
cmpsl
rolb
aad
mov
pop
cmp
push
mov
dec
or
out
xchg
daa
cmp
and
movsl
fcoms
lds
movsb
sub
sbb
dec
add
jns
das
ret
shrl
ror
divb
adc
into
push
mov
adc
add
push
nop
int3
dec
sbb
mov
adc
jg
adc
roll
inc
sbb
iret
lret
jecxz
xchg
out
dec
cmc
or
mov
das
jno
sbb
sbb
xchg
ja
fcomps
lea
ds
lods
inc
out
cmp
jb
repz
mov
and
mov
lods
jae
inc
xchg
jne
dec
bound
pop
xchg
das
fadds
pop
and
pusha
cli
sub
dec
ds
dec
cmp
sahf
xchg
dec
jmp
lods
cmpsl
pushl
or
lahf
dec
sbb
dec
cwtl
andb
aas
pop
lods
cmp
push
das
xor
inc
scas
pushf
stos
and
scas
jge
gs
mov
lea
arpl
mov
insw
fidivrs
hlt
and
outsb
mov
push
gs
icebp
das
dec
popa
push
inc
cmp
mov
es
flds
outsl
outsl
jno
sub
push
pop
xchg
repnz
jecxz
lcall
out
cmc
loop
inc
call
mov
jb
addl
outsb
lea
fstps
jae
dec
xor
cltd
inc
in
mov
jo
mov
mov
cmp
imulb
andb
cmp
and
xchg
std
ja
sti
fs
fs
inc
adc
cmc
jbe
hlt
xchg
imul
bts
stos
pop
lret
sahf
pop
je
sub
push
scas
outsb
ficoms
adc
dec
leave
hlt
cmp
mov
or
lock
mov
daa
aad
sbb
push
xor
popf
add
fsubs
fsubs
push
es
mov
insb
and
call
jmp
dec
out
icebp
imul
dec
leave
push
sbb
pop
adc
xchg
fdivr
mov
mov
int3
rolb
jl
xor
pop
or
int
flds
dec
mov
xor
stos
mov
inc
inc
mov
shr
outsl
cmpsl
add
rclb
rcrb
mov
ds
aad
jno
outsb
mov
cmp
lds
adc
adc
ja
xor
outsl
std
icebp
jnp
sub
add
cli
mov
negl
jle
dec
jo
push
jae
inc
es
out
or
and
inc
cmp
lods
xchg
mov
xor
cli
or
mov
dec
pop
and
sti
xchg
push
and
popl
inc
or
lcall
outsb
dec
aaa
fistpl
cmp
mov
dec
lods
xchg
ja
or
jmp
jp
fisttpl
mov
cmp
mov
fisttpl
adcb
pop
ret
mov
pop
imul
sub
addr16
jo
ret
notl
jmp
mov
imul
pop
fldenv
iret
inc
cmp
imul
sbb
fdiv
sub
sbb
add
call
xchg
fmul
jae
fsubrl
mov
pushf
push
push
cmp
mov
cmp
lahf
mov
mov
and
mov
inc
ret
out
adcl
icebp
dec
mov
cmpsb
mov
rorl
mov
and
and
imul
and
call
xor
inc
repz
imul
fists
or
jo
dec
push
jl
dec
test
fistpl
pop
popf
dec
imul
std
xchg
mov
aas
adc
cli
shlb
sub
imull
cmp
push
shlb
loopne
mov
cs
cmpsb
or
inc
movsb
insl
sbb
pop
sarl
cmpsl
iret
jg
dec
xor
adc
pop
sub
xchg
fdivp
aam
jecxz
dec
mov
inc
movsb
cmpsb
jg
lods
mov
xlat
dec
dec
lahf
sbb
nop
daa
cmc
sub
dec
lret
adc
mov
js
mov
minps
cmp
in
dec
enter
push
ss
lds
cli
in
cli
xor
mov
inc
rorl
pop
adc
inc
out
fwait
xor
or
fsubrl
enter
sti
dec
std
mov
fs
dec
xor
pop
sbb
inc
jnp
in
out
cwtl
push
mov
outsb
mov
popf
adc
xchg
sbb
jecxz
insl
ss
cmp
stc
scas
stc
out
aam
andb
aas
mov
insb
sarl
popa
loope
and
in
loope
bound
lods
adc
mov
jnp
arpl
pusha
add
xchg
add
in
or
scas
ss
and
ja
jle
imul
sbb
imul
aad
sbb
clc
xchg
push
xchg
and
sarl
jl
popa
mov
ss
mov
push
push
mov
and
int
je
xor
jno
add
cwtl
pop
call
xchg
sub
mov
pusha
into
lods
push
inc
and
ret
cmpsb
or
sahf
ret
pop
loope
push
std
inc
scas
mov
xor
mov
popa
jo
cmp
daa
push
rcr
bnd
xor
scas
testb
leave
movsb
pop
rclb
lahf
or
adc
stc
test
push
rorl
imul
sbb
mov
xor
sub
sub
loopne
adc
cmp
xchg
dec
add
jg
cmpsl
stc
xor
xchg
dec
jecxz
inc
xchg
lds
jo
push
pop
mov
pop
pusha
aas
insb
roll
out
or
jno
mov
iret
add
std
xchg
fs
push
call
sub
sbb
and
push
mov
fwait
sbb
push
cmpsl
pop
inc
nop
das
adc
lods
lret
cmp
daa
ss
adc
pushf
dec
out
sub
xlat
into
cltd
inc
inc
inc
mov
ror
inc
fcmovne
lahf
loopne
into
cltd
sti
adc
jnp
or
jbe
push
jge
mov
test
ds
sub
sahf
imul
push
iret
je
jge
push
mov
pop
sbb
lcall
insl
mov
pusha
pop
push
hlt
adc
mov
in
mull
mov
adc
cli
mov
not
mov
adc
inc
pop
mov
repnz
mov
inc
xchg
sbb
sahf
sub
out
xchg
es
push
cmp
out
sbb
subb
es
sbb
xchg
cmp
je
repz
jg
inc
push
out
leave
nop
rcl
nop
mov
fsts
gs
dec
sbb
xchg
mov
lcall
aas
fs
push
xlat
pop
sub
fnsetpm(287
mov
repz
cmp
cmpb
jb
and
js
daa
pop
pop
adc
lea
cs
mov
add
out
in
ret
arpl
jmp
xchg
outsb
pop
fisubl
push
push
sbb
pop
js
xchg
popa
in
jle
cs
mov
sub
xchg
in
adc
push
push
ss
xchg
outsl
aad
add
pop
test
jge
pop
lock
out
add
es
fdivrp
test
cmp
xor
inc
pushf
shrb
dec
fs
int
jmp
xor
dec
faddl
cltd
mov
pushf
movsl
mov
inc
lock
pop
outsb
jecxz
or
sub
push
xchg
dec
fsubrs
mov
es
mov
std
or
sarl
push
mov
jae
adc
jne
stc
dec
stos
cs
add
add
cmpsb
inc
add
in
xchg
mov
pop
pushf
out
pop
xor
lods
and
jecxz
fistpl
bnd
mov
mov
mulb
pop
rorb
mov
enter
cmpsb
add
lea
arpl
insl
out
pop
mov
push
pop
hlt
mov
or
insb
nop
fisubrs
xchg
lahf
xchg
into
and
leave
add
lea
push
out
ret
stc
iret
dec
sbb
lcall
mov
cs
scas
add
push
sti
jle
or
sbb
pop
lret
pop
rcrb
outsb
mov
inc
int3
add
adc
inc
pusha
cmp
jmp
cwtl
dec
adc
pop
daa
lods
adc
cs
mov
fisttps
inc
adc
and
pop
movsl
clc
test
or
mov
in
mov
cmp
mov
add
jle
das
fdivrp
adc
jl
loopne
popf
fdivs
iret
je
adc
shll
push
popf
mov
xchg
jbe
sti
inc
xchg
sbb
cmpsb
sbb
imul
ja
sub
insb
repz
or
inc
popf
push
sti
inc
sub
push
xor
xlat
in
add
ss
fidivrs
movsb
movsb
in
jmp
jp
mov
call
push
stos
pop
push
daa
mov
cmpb
fnstcw
xchg
fwait
test
or
sub
cmp
pop
mov
pop
flds
subl
scas
fisttpll
xor
dec
mov
not
in
push
out
je
iret
cmp
lcall
pop
mov
sub
adc
dec
inc
nop
or
scas
insb
adc
push
test
ds
mov
lcall
pop
xchg
cmp
dec
int3
sub
ja
pushf
dec
sti
adc
pop
mov
or
subb
int
fdivl
int3
ljmp
scas
or
and
sbb
icebp
push
add
enter
js
scas
or
lods
movsb
push
pusha
mov
push
repnz
pop
or
scas
push
xchg
inc
lcall
dec
sub
or
mov
and
inc
popf
test
ret
push
jns
mov
sub
ja
nop
sbb
push
xchg
or
aam
jne
leave
mov
iret
imul
movsl
and
outsl
xor
fldl
push
mov
lds
scas
xchg
mov
loope
push
aaa
rolb
aam
pop
subl
lock
add
jmp
test
hlt
mov
sbb
jmp
cmp
test
and
xor
ret
xchg
adc
notl
mov
and
loopne
sbb
fdivl
lahf
pusha
adc
pop
and
in
xchg
sbb
lahf
sub
and
hlt
lcall
jns
pop
jl
mov
cmp
decb
test
ror
enter
sbb
repnz
adc
xchg
cmpsl
inc
das
xchg
pminsw
push
out
lods
cmp
inc
arpl
cmpl
lds
inc
jg
fs
and
dec
mov
pop
fwait
pop
sbb
cmp
dec
push
sub
sbb
dec
pusha
lea
addl
cltd
cmp
dec
ja
push
es
pop
and
adc
add
push
or
iret
xchg
arpl
xchg
xchg
jne
inc
pop
pop
loopne
push
and
shll
movsl
xchg
jp
repnz
pop
idivl
xchg
mov
hlt
and
push
xchg
cmp
mov
shl
scas
int3
fldcw
jmp
fadds
lret
pop
adc
lea
int3
xor
mov
mov
jmp
ss
mov
or
mov
repz
jmp
sarl
jae
sahf
jge
mov
imul
mov
or
mov
push
psubsw
in
aad
adc
xor
xchg
jmp
add
mov
or
mov
add
repz
lret
cmp
mov
sub
push
add
mov
push
dec
scas
mov
xchg
and
xor
inc
jl
push
scas
icebp
sarl
mov
test
xor
fadds
dec
loope
ror
imul
cmpsb
loop
jns
adc
sbbb
pop
repz
pop
mov
lods
dec
mov
pushf
setne
mov
sbb
out
jae
loop
xlat
pop
ret
popa
insb
rolb
inc
mov
push
ficoms
push
push
inc
mov
scas
cmpb
xchg
iret
test
pop
mov
sub
aas
fstpt
in
outsl
mov
out
adc
push
or
outsl
xlat
inc
inc
pusha
arpl
mov
imul
push
or
jmp
add
sbb
sub
sub
xor
mov
outsb
adc
or
es
adc
fnstcw
pop
test
inc
jg
add
push
or
aad
jmp
ja
or
mov
cltd
pop
imul
sarl
js
and
mov
cmp
shrb
pop
jp
cmp
adc
pop
movd
pop
lock
hlt
aad
push
pusha
mov
enter
mov
in
hlt
rcrb
outsl
mov
xchg
xor
xor
push
and
shrl
in
scas
xchg
jg
xchg
jnp
outsb
jns
push
imul
mov
addr16
or
mov
xor
stos
jnp
or
ja
lods
dec
mov
in
mov
mov
sbb
shlb
mov
adcl
fs
sbb
add
lahf
sbb
xchg
outsl
daa
jae
movsb
pop
xor
pop
icebp
jecxz
outsb
subl
std
imul
mov
jne
add
or
popa
imul
rorb
push
or
mov
sub
divb
sub
mov
sub
lea
pop
push
in
ja
mov
ljmp
xchg
bound
movsl
je
data16
shrl
mov
xor
sub
xor
or
or
mov
sbb
mov
sarb
mov
mov
jne
push
in
and
shlb
jle
mov
ss
pusha
cmpl
roll
push
cmp
add
xorb
mov
xor
sbb
in
dec
lret
lock
clc
in
adc
push
les
add
rcrb
push
push
ljmp
sbb
lock
out
or
and
cli
dec
addr16
int
and
inc
pop
mov
push
test
mov
in
imul
fwait
and
and
cmp
and
xor
mov
sbb
lret
fcmove
pusha
push
xchg
inc
xchg
imulb
shll
mov
cmp
xor
cmp
or
adc
cmpsb
cmp
rcrl
insb
pop
adc
add
scas
lret
mov
lahf
aaa
rorb
ljmp
xchg
je
enter
sub
loopne
cmp
loop
pusha
dec
add
add
shll
adc
jp
or
out
into
outsb
lds
sbb
out
inc
lret
sbbb
cmp
jns
mov
pop
mov
shl
pushf
mov
enter
xor
mov
sbb
mov
insb
stos
pop
ja
cwtl
or
push
jno
pop
ret
pop
in
mov
and
bound
iret
xor
dec
add
into
mov
dec
in
xchg
pop
outsb
out
xlat
out
cmpl
ja
cmp
adc
jle
pusha
fldcw
or
sub
shll
xlat
cmp
push
lret
hlt
xlat
xchg
xchg
enter
in
mov
frstor
ja
dec
sbb
xchg
into
pop
dec
ljmp
fstpl
aam
jg
pusha
or
pop
mov
push
mov
sub
jns
ljmp
les
and
sub
add
icebp
mov
inc
adc
xchg
stos
cmp
mov
lret
lds
nop
xlat
insb
insl
inc
jbe
aaa
mov
jl
ror
jp,pn
pop
imul
jg
adc
leave
xchg
fcmove
cmp
mov
leave
mov
adc
or
push
aas
rorl
movsl
mov
je
sbb
aam
push
adc
cmpb
sbb
mov
fmuls
pop
xchg
mov
mov
cs
int
ret
es
xorl
stc
sbb
push
stos
pop
fistps
loop
ret
or
cmpsb
pop
xchg
adc
mov
adc
imul
cmp
ja
mov
lock
fisttpl
mov
rcrb
xchg
pop
or
aaa
cmpb
adcb
inc
js
add
mov
push
xchg
enter
jge
push
je
push
jmp
mov
pop
int
rcll
cmpsl
pop
inc
adc
mov
and
push
sbb
mov
idivb
pushl
push
idiv
cmp
das
scas
into
repnz
loopne
sub
orl
fwait
lds
mov
out
popf
fadds
fldcw
clc
out
jae
aas
xor
xchg
repz
jge
test
fsin
ds
mov
popa
xchg
add
lret
or
push
outsl
repz
jne
push
push
pop
repnz
sub
shll
sub
imul
mov
sbb
pop
xchg
ret
imul
mov
jmp
mov
mov
test
incb
and
lock
mov
adc
or
and
imul
and
dec
mov
jmp
das
loopne
inc
fs
xorb
and
lock
add
adc
mov
push
sbb
imul
sub
call
nop
test
pop
imul
pop
sub
subl
jg
push
cmpsl
mov
cmp
jle
dec
xor
inc
sahf
ds
test
mov
cmpsl
pop
inc
push
sbbl
adc
mov
mov
sbb
push
lret
int
and
adc
jecxz
pushf
out
popa
js
test
data16
pop
inc
mov
sbb
dec
cmp
repz
dec
in
hlt
fs
push
mov
fcomip
jp
cs
push
inc
les
xchg
shlb
sbb
cs
stc
dec
push
pop
adc
outsl
or
inc
stos
add
out
lds
cs
clc
mov
cmp
outsb
sbb
in
out
js
xchg
push
pop
fisttpll
inc
cli
push
xchg
pusha
adc
test
ljmp
cmp
mov
hlt
leave
aam
inc
out
jmp
mov
xchg
mov
jns
jp
cmp
movswl
ret
insl
out
sub
inc
ret
js
xor
hlt
pop
push
aad
ret
sbbb
jl
int3
das
push
bound
pop
repz
fwait
jns
mov
mov
and
pop
xor
push
in
stos
fdivp
add
mov
mov
popa
mov
jge
jns
inc
jl
mov
lcall
sarl
cmp
cmp
adc
dec
lds
mov
stos
lret
push
rcrl
add
fucomp
xor
add
mov
pop
dec
push
jbe
or
inc
add
sub
dec
pop
jmp
or
and
pop
push
jbe
jg
sbb
iret
push
lds
iret
xlat
jo
and
push
xchg
mov
loope
sbb
jns
mov
inc
orb
or
and
cmpsl
sti
cmc
mov
mov
pop
jae
jne
sbb
gs
repnz
bound
push
loop
loope
pop
imul
andb
rorl
mov
scas
xor
lret
test
pop
out
add
mov
iret
pop
and
es
push
cmp
sbb
pop
stos
xor
jp
and
cld
cmp
sahf
movsl
jbe
mov
jne
jmp
cmpsl
pop
aad
scas
and
jecxz
cmpsl
sbb
sub
mov
shrl
cmp
lea
dec
in
dec
nop
icebp
out
in
fadds
lahf
push
movsb
pushf
adc
and
out
stc
mov
push
das
xor
cmp
loopne
mov
sbb
mov
fldl
inc
jnp
fbstp
mov
cmpsl
sub
clc
mov
pop
andb
lods
xchg
jbe
ret
repnz
fisttpl
jp
int3
iret
fucomip
movsl
jmp
mov
mov
insl
dec
lcall
fadds
pusha
icebp
push
lret
mov
int
stc
add
push
insl
sbb
loope
cs
call
dec
fldt
fsub
dec
add
ret
or
dec
and
rclb
cmp
aas
in
cmpsb
dec
jb
ja
decl
frstor
sub
mov
mov
orl
loop
add
arpl
rcrb
imul
jecxz
dec
push
or
or
or
push
push
adc
and
mov
test
mov
cmp
repnz
push
mov
mov
js
jno
xchg
mov
and
sub
ds
push
mov
sar
aaa
pop
call
enter
cmp
inc
jno
sbb
add
sub
testb
dec
test
inc
and
and
aad
or
jb
xor
orb
or
roll
jle
xchg
imul
orl
mov
stos
sahf
add
adcb
jne
stos
scas
sti
lock
in
adc
push
mov
pop
or
int
sub
psrad
dec
shlb
cmc
cs
cmp
push
lret
pop
xor
inc
sub
jns
lea
xchg
iret
lea
cmp
xor
lret
jo
insl
inc
mov
mov
cmp
rcl
add
mov
or
xchg
xchg
leave
sbb
dec
scas
aad
pop
ja
das
cmp
clc
xchg
movb
jmp
outsb
jecxz
sbb
ds
adc
scas
hlt
dec
mov
enter
add
ret
inc
xor
and
inc
fisubrl
mov
iret
cmp
inc
mov
sbb
xchg
jl
movsb
add
adc
repnz
pop
push
ja
dec
jne
shlb
ret
int3
mov
or
cld
or
out
pop
push
mov
mov
fisubs
mov
shrb
inc
call
push
and
insl
out
fmul
shlb
nop
jge
aaa
jecxz
scas
cmp
inc
xlat
pop
lret
ret
in
stc
sbb
mov
sarl
jmp
rolb
jae
jp
mov
inc
in
sahf
jnp
dec
jp
repnz
mov
inc
pop
out
mov
imul
push
pop
mov
mov
jp
sbb
fsubrs
adc
xchg
lahf
mov
pop
mulb
aam
push
clc
jb
je
mov
mov
jne
xchg
dec
mov
sub
dec
cmp
xchg
icebp
dec
lahf
jmp
test
mov
sti
iret
cli
and
nop
cmc
sbb
xchg
out
and
mov
fisttps
or
popf
push
movsl
and
cmpsl
or
dec
out
mov
mov
icebp
xchg
dec
and
pop
mov
mov
fdivrs
bound
in
loope
pop
jne
pusha
mov
fnsave
push
pop
push
out
bound
lds
icebp
imul
gs
icebp
mov
push
xchg
mov
sbb
int3
add
add
leave
mov
sub
enter
clc
jb
add
mov
pop
jno
cs
push
jmp
lea
and
out
fldenv
pop
pop
rcr
jle
gs
insb
jmp
jne
daa
lahf
outsb
add
lret
inc
cmpsl
xchg
sbb
out
test
xchg
enter
lock
lret
sub
popa
cwtl
mov
push
mov
push
cmc
popf
adc
ret
pusha
xchg
cli
mov
xor
push
add
xchg
out
imul
pop
push
int3
cld
mov
push
test
adc
outsb
pop
xchg
pop
cmp
shll
and
mov
sub
cld
lock
pop
pop
and
lods
sbb
mov
and
dec
cli
fistpll
test
mov
fsubrl
insb
adc
int
out
shlb
mov
fstl
or
push
mov
mov
or
fistpl
xor
push
mov
daa
xchg
pop
jg
mov
mov
and
mov
pop
xchg
pop
call
jae
pop
mov
loopne
push
mov
imul
es
mov
mov
ss
mov
into
into
push
jae
es
or
jecxz
dec
stos
sarb
xchg
and
sbb
push
add
add
popf
out
ds
pop
mov
inc
cmc
mov
mov
mull
test
pushf
cmc
jp
xlat
dec
mov
and
cs
xchg
in
add
ljmp
and
mov
add
sub
scas
jmp
sub
dec
in
sti
lret
xor
in
imul
rcl
adc
push
cmpsl
fmull
dec
into
ret
sub
add
push
addr16
in
fdivrl
mov
arpl
test
stos
lock
mov
in
shll
lods
pop
es
scas
orb
inc
dec
rol
aas
xlat
outsl
and
aaa
pop
shll
mov
xchg
cmp
dec
outsl
fstl
pop
push
jmp
mov
mov
les
movsl
rorl
mov
sub
dec
mov
repz
mov
push
jno
outsb
mov
pop
mov
push
jle
jp
leave
mov
arpl
push
lcall
xor
ffree
mov
xchg
gs
dec
aaa
jge
popf
jnp
imul
xor
xor
cwtl
bnd
mov
inc
add
cmp
add
sbb
addl
push
fdivr
loopne
clc
jnp
in
sub
inc
pop
add
cmpsb
jae
icebp
dec
stc
or
aad
mov
mov
inc
inc
dec
sbb
push
mov
sti
rcrb
mov
mov
pop
pop
xor
or
xchg
jg
icebp
dec
or
sub
jne
into
push
jno
mov
icebp
popa
lods
enter
arpl
cmp
mov
mov
lret
and
decb
lea
loopnew
xor
dec
jle
dec
fimuls
inc
fcmovne
call
inc
and
into
cltd
scas
mov
adc
mov
negb
sub
sbb
ja
inc
sbb
cmp
out
jnp
in
lret
ljmp
jno
iret
enter
sbb
xchg
cmp
jne
sub
aad
pop
push
in
pushf
jbe
ljmp
and
xchg
ror
mov
lahf
jl
cmpsb
iret
and
push
cmp
jo
addr16
fimull
mov
pop
or
mov
lret
pop
pusha
icebp
jo
cltd
testb
and
xor
rclb
gs
xchg
cmp
cmp
mov
scas
in
in
in
dec
add
push
mov
mov
fmuls
and
test
push
xchg
cltd
das
adc
push
and
jno
cmpsb
mov
fmull
stos
or
push
push
dec
lock
add
test
inc
jmp
test
cmp
sub
jae
aam
xor
xor
xor
ljmp
icebp
pop
mov
dec
repnz
loope
jb
not
mov
sti
out
inc
jbe
cmc
enter
fwait
jo
out
mov
stc
push
fcomp
outsl
sbb
lock
sbb
popa
xor
mov
lods
xchg
pop
xlat
imul
fwait
xchg
sti
add
or
mov
aaa
sub
mov
pop
aas
jle
inc
sub
dec
and
pop
out
leave
ret
and
loop,pn
cld
xchg
ret
and
push
in
faddl
jb
mov
xlat
jne
push
add
cmp
jb
arpl
push
aas
cld
popf
cwtl
lret
je
jno
pop
push
insl
cltd
stos
pop
push
lods
or
xchg
daa
inc
aad
mov
sub
xchg
bndldx
repnz
push
dec
mov
mov
adc
lea
repnz
js
sub
std
mov
iret
lea
cmp
pop
imul
pop
loop
movsl
daa
outsl
popf
neg
inc
push
rorl
fsts
jae
pop
dec
pop
cs
stc
pop
xor
and
sahf
mov
in
aaa
insb
mov
xor
scas
scas
cmpsb
pop
jle
or
and
sbb
arpl
and
mov
cmpb
fcompl
lods
rcl
hlt
inc
js
mov
imul
inc
aas
add
cwtl
sbbl
mov
dec
addr16
mov
in
push
fistl
es
ret
or
xchg
mov
lret
push
xor
or
ja
dec
jno
and
repz
add
inc
adc
enter
jle
xchg
cltd
or
addb
push
sub
pushf
aad
outsl
add
adc
adc
xchg
gs
ds
cli
or
xor
xor
mov
add
and
lods
xor
out
sahf
das
ss
out
sar
lods
and
pop
and
sub
lret
sahf
push
loope
jnp
das
cmp
sub
or
fcmovnu
mov
pop
sahf
mov
jl
std
je
and
insl
xor
and
mov
out
inc
imul
in
jp
mov
dec
and
dec
fcomi
clc
js
mov
cmp
scas
lods
inc
sti
lods
add
scas
xchg
sbb
inc
xchg
cmpl
sub
rolb
push
mov
in
arpl
imul
ret
shl
arpl
inc
adc
or
sbb
jne
cmp
daa
sti
popf
push
lret
and
lods
mov
push
push
addr16
dec
inc
mov
std
jecxz
fnstcw
lahf
adc
mov
mov
push
or
arpl
pop
cmp
mov
pop
and
arpl
pop
test
outsb
hlt
inc
dec
leave
jg
pop
mov
cmp
mov
data16
repnz
leave
fsubl
or
in
inc
sub
call
pop
push
cli
rcrl
jbe
xchg
pusha
arpl
inc
sub
jns
out
xor
sahf
cmc
mov
test
lcall
test
inc
xchg
test
pop
loop
orl
jmp
sub
insl
cmpsl
push
enter
mov
bound
and
jge
cmpsl
inc
and
lret
into
enter
xor
aam
xchg
sti
mov
xor
ret
lahf
loop
pop
fstl
sub
push
pop
insb
and
push
inc
cmp
pop
jle
mov
mov
and
xor
mov
je
cli
outsl
cmc
fdivrl
out
xor
mov
stc
inc
cmp
xchg
mov
jae
int3
movb
pop
inc
je
pop
and
bound
sub
sahf
int
mov
cmp
mov
xchg
imul
call
adc
fnstenv
fiaddl
ret
jmp
push
aas
pop
mov
or
scas
leave
sbb
jg
lcall
or
mov
push
push
cmp
add
mov
cmpl
fmulp
loop
dec
imul
roll
and
xor
dec
cmp
lock
cmp
sti
push
cltd
cmp
scas
mov
data16
enter
sub
inc
in
xadd
mov
rorl
cmpsl
in
test
inc
mov
push
pushf
lahf
adcl
ret
dec
mov
cmp
push
cmp
xchg
mov
fcmove
jb
xchg
jns
sub
push
mov
es
dec
push
inc
stos
xchg
ljmp
ds
insl
pop
and
add
stc
jbe
add
stos
mov
repz
stos
xor
adc
push
cwtl
sahf
fcmovb
adc
inc
loop
dec
adc
and
shrb
sub
xchg
test
xchg
xor
leave
xor
cmp
pop
pop
clc
xchg
hlt
cmpsb
lods
and
sub
sarb
popf
bound
jg
jge
push
sub
jns,pt
sbb
in
mov
jnp
push
xlat
push
outsb
xchg
cli
fwait
mov
jge
jb
mov
test
sbb
leave
test
pop
ja
sahf
push
mov
push
jo
jg
nop
push
jmp
dec
inc
and
or
ja
and
adc
lock
gs
ficomps
push
pop
push
ljmp
adc
lcall
popf
ret
inc
and
or
hlt
out
pop
mov
mov
in
fwait
lock
das
xchg
pop
mov
fisttpl
mov
pushf
aaa
push
call
mov
roll
push
pop
cltd
scas
lahf
outsb
fldenv
dec
and
int
sbb
mov
sbb
sub
and
cmp
lea
cmpsl
cmp
mov
mov
inc
mov
inc
sub
mov
lret
outsb
inc
cs
and
mov
xchg
and
repz
jge
mov
mov
mov
adc
cld
pop
dec
pop
xor
push
push
sub
js
test
pusha
cld
negl
in
adcl
jg
xchg
aad
or
loope
mov
cmovnp
sub
inc
mov
popa
mov
xchg
sub
mov
push
adc
pop
push
push
pop
inc
cld
mov
cmpsb
cmpsb
aad
mov
repnz
aad
jg
sbb
pusha
or
inc
cmp
adc
xor
add
mov
xchg
cwtl
data16
mov
xchg
ja
popf
mov
xlat
test
push
inc
inc
fistpl
push
jp
out
pop
mov
divb
jae
jne
inc
jmp
dec
iret
fcompl
subb
ja
je
call
and
push
jg
shl
movsl
push
xor
testl
xor
call
pop
add
or
adc
sub
lock
cld
sbb
shll
xchg
jbe
imul
xchg
scas
adc
push
daa
arpl
add
movl
outsl
std
jns
or
test
lret
xchg
test
jp
popf
jg
arpl
cli
sti
add
add
rolb
sbbl
xchg
fsub
xor
xor
shlb
fldt
popa
aam
std
or
mov
jle
inc
cmpsb
add
xor
cmpsb
cmp
sbb
jae
dec
sbbb
cmp
iret
hlt
pop
mov
cmc
push
adc
pop
out
push
inc
sub
shlb
gs
repnz
adc
sbb
lret
jg
xorb
sbb
dec
jae
daa
test
neg
aam
add
push
into
pop
enter
cmp
dec
mov
out
mov
sbb
jo
rolb
addb
mov
into
dec
xchg
repz
inc
pusha
ret
xor
fdiv
adc
loop
mov
das
out
mov
daa
shll
aad
ljmp
push
sub
pop
dec
sbb
push
daa
cmp
cmpsl
addl
inc
lods
and
mov
adc
shlb
mov
xor
jmp
faddp
cmc
sbb
xlat
in
or
mov
lds
lds
in
push
lcall
mov
mov
or
iret
or
or
adc
adc
popa
pop
xlat
and
imul
mov
and
out
push
and
xchg
xchg
pop
and
pop
xor
ret
fnstsw
mov
stos
push
jmp
popf
icebp
cmp
cmc
push
inc
jae
mov
xor
sub
in
mov
sahf
inc
sub
pop
std
mov
adc
scas
mov
stos
push
fisubl
out
push
xchg
push
gs
jo
push
sti
into
sbb
cmp
jg
inc
xor
dec
jnp
or
xchg
add
adc
jmp
and
jge
out
loop
test
rcll
inc
add
inc
shrl
sbb
mov
aas
stc
loopne
sub
xor
les
pop
arpl
aas
cmp
or
les
sarb
mov
rcrl
int3
daa
fsub
jnp
xor
aaa
ljmp
popa
or
cmp
fbld
dec
cmp
lea
mov
bound
sbb
jle
mov
push
and
mov
into
std
mov
fidivs
xor
xchg
scas
mov
es
popa
mov
ljmp
cmpsb
mov
popa
repz
jo,pn
scas
jno
sarb
push
jmp
adc
fisttpl
xor
adc
icebp
dec
sub
sbb
adc
xchg
cmc
jmp
xchg
push
js
aam
rolb
ror
cli
dec
pop
and
mov
in
xor
jmp
daa
sbbb
sbb
xchg
sub
inc
mov
mov
mov
push
rorl
rorl
push
pop
xlat
out
cmp
into
aad
mov
subb
xor
mov
mulb
cmpsl
int3
dec
mov
je
inc
fcom
arpl
cli
sbb
or
cmp
cwtl
cmp
packsswb
subl
jg
test
mov
add
add
fwait
and
in
pop
das
inc
inc
mov
or
icebp
pop
xchg
mov
sbbb
lods
mov
outsl
add
popa
xchg
lods
cmpsb
in
adc
cs
and
inc
out
mov
popa
mov
xor
in
mov
inc
fnstenv
aaa
xor
mov
dec
imul
insl
xchg
lods
rorl
mov
mov
xchg
dec
or
mov
fnstsw
jb
add
pop
pop
sbb
jecxz
pop
xchg
push
pushl
fcomps
and
jle
dec
jl
js
add
mov
or
lods
out
pop
mov
xor
outsb
mov
or
xchg
sbb
or
repnz
stc
cmp
sub
mov
test
push
call
or
cmp
andl
and
aaa
int
out
repnz
cmpsb
cmp
and
push
or
cmp
lock
aam
jmp
je
dec
stc
jmp
xor
push
and
in
test
mov
adc
sahf
fadds
add
lret
int3
rol
arpl
dec
rcrb
jne
sbb
popa
xor
and
xchg
pop
cmpsb
add
mov
pop
int3
mov
sbb
repnz
and
xchg
aas
mov
cmp
jno
into
int
jmp
jecxz
pop
sub
inc
cli
loope
