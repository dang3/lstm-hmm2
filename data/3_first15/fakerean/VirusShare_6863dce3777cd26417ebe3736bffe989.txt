sbb
add
mov
sbb
imul
xor
or
cmp
mov
xchg
nop
jmp
push
inc
adcb
mov
xor
fstps
mov
jp
mov
mov
and
add
aad
jno,pn
out
fidivl
jns
ss
jge
mov
lahf
xchg
mov
cmc
mov
inc
jns
fwait
dec
fmull
call
or
fisubs
inc
jle
push
xchg
inc
ja
xchg
sub
mov
cmp
pop
mov
outsl
mov
js
mul
pop
sti
sbb
cmp
dec
mov
xchg
enter
ds
sub
inc
stc
adc
into
loop
mov
pop
mul
shll
mov
xor
lahf
inc
xor
xchg
rcrb
xor
jle
fs
aas
mov
mov
nop
mov
and
and
push
pushf
dec
jle
daa
or
inc
jne
sbb
gs
data16
jo
jno
sti
jecxz
lock
pop
test
mov
ja
jle
mov
dec
mov
inc
icebp
test
mov
es
cmp
lret
xor
call
out
or
icebp
fsts
sub
and
xor
stos
push
pop
sbb
and
repnz
inc
ficoml
inc
nop
push
roll
pop
xchg
push
aas
jo
gs
push
cmp
lret
or
mov
mov
dec
leave
cmp
pop
call
lret
dec
jl
xchg
in
xchg
xchg
cmpb
cmp
mov
sarl
mov
inc
push
inc
leave
xor
mov
pop
jp
cld
std
icebp
cmpsl
xor
push
jb
pop
xchg
es
mov
adc
adc
scas
lock
pop
add
mov
sbb
dec
cmp
call
xchg
int
mov
stc
jecxz
cmp
xchg
mov
sub
outsl
mov
sbbb
imul
ja
pop
aaa
leave
xchg
sbb
incl
dec
dec
cmc
mov
jae
add
add
pop
lock
mov
sti
pop
enter
int
int
adc
pop
mov
adc
pop
repnz
stos
mov
nop
and
paddsw
pushf
fcomps
inc
push
sbb
fldcw
incl
jge
mov
xor
push
mov
pop
inc
popa
ja
cmp
mov
or
imul
aaa
xor
jns
fwait
mov
add
xor
xchg
stos
pop
lcall
pop
xlat
bound
mov
jo
inc
push
pop
in
cmp
lods
imul
add
lret
push
sahf
xor
pop
in
xchg
mov
enter
insl
xchg
clc
repnz
ret
xor
in
jbe
xor
gs
inc
or
out
or
jno
xor
mov
pop
ss
sbb
imul
je
rcll
jns
test
xchg
incl
shl
stc
bound
in
lret
call
xchg
jl
sarb
fld
jle
push
jecxz
xor
xchg
adc
cmpsb
jnp
sti
adc
or
imul
mov
and
xor
shl
ret
sub
push
subl
pop
and
adc
mov
mov
sub
pushf
stos
push
and
ret
jne
push
dec
fisttpl
shll
popa
xchg
mov
sub
test
push
and
add
xor
icebp
aam
add
iret
popa
daa
push
jge
xlat
cmc
arpl
inc
outsl
lods
shlb
sbb
call
pop
mov
pop
test
stos
in
jmp
imul
add
aam
or
cwtl
call
jl
imul
fdivl
push
add
outsl
inc
push
into
cmpsl
into
lock
bnd
sti
rcll
xor
inc
rclb
insl
lds
ret
mov
movsb
aas
ja
scas
mov
sbb
fsubr
movsb
scas
movsb
leave
dec
ja
sub
mov
sbb
jecxz
mov
jae
add
or
mov
or
stc
cmp
xor
pop
repz
test
mov
fwait
jecxz
jae
fwait
cmp
sbb
sahf
push
pop
pop
mov
cmp
cltd
inc
movsb
mov
shrl
ret
and
fiadds
out
popa
hlt
mov
fisttps
loope
dec
inc
cmp
mov
sbb
cmp
and
mov
cmpsl
and
lahf
hlt
jne
push
dec
dec
mov
testl
xor
pop
sbb
lret
outsb
divl
movsl
jno
out
xchg
dec
pusha
and
xchg
push
mov
aaa
aam
imul
jecxz
mov
xlat
jp
outsb
inc
jmp
aaa
xchg
inc
or
and
xor
lea
fbld
mov
scas
dec
repz
jl
je
pop
xchg
movsl
mov
pop
xor
orb
enter
mov
mov
jg,pt
jecxz
sub
push
sti
xor
sub
les
inc
xor
int3
jo
jecxz
bound
test
in
jns
out
lcall
xor
dec
or
sbb
in
mov
and
out
lahf
lret
and
inc
mov
sti
out
popf
gs
stos
xor
or
jne
das
jmp
push
sub
sub
mov
nop
cwtl
sub
sbb
sub
rorl
mov
popf
sbb
lds
ljmp
cmp
dec
push
jg
jae
sahf
cwtl
sbb
sti
loope
xchg
shrl
and
pushf
pop
std
or
das
imul
jle
movsl
mov
stos
ret
in
sbb
lcall
dec
idivb
adc
sub
mov
xchg
cmp
sbb
outsl
adc
loop
mov
xor
push
jb
movsb
jae
or
cltd
popf
xlat
cmpsb
or
sbb
das
ljmp
mov
cld
xor
add
adc
mov
aaa
jnp
xor
pop
push
jbe
inc
jl
mov
inc
stos
dec
or
inc
cmp
cmp
aad
and
adc
sbb
movsb
or
cmp
leave
inc
mov
pop
jp
add
shr
stc
addr16
int
cmp
pushf
cmpsl
dec
rcrl
inc
imul
into
dec
inc
leave
mov
idivl
sub
lods
push
mov
fdiv
cld
leave
mov
push
test
rep
shlb
int3
push
outsb
sbb
fwait
push
inc
movsb
pop
mov
int3
mov
jno
sub
cmp
orl
outsl
dec
lds
in
aam
inc
mov
dec
adc
sti
nop
adc
mov
xchg
jle
cli
add
mov
mov
adc
mov
adc
cmp
testl
cmpsl
cwtl
mov
nop
fwait
sarl
cmpsl
orl
hlt
mov
flds
lret
and
sbb
mov
cmp
cmp
inc
jp
sbb
mov
inc
xchg
call
dec
pusha
xchg
mov
adc
xlat
js
lock
das
inc
sbb
imul
pushf
adc
out
jge
xor
mov
aad
lock
xor
idivl
dec
ja
std
aaa
mov
cmp
push
frstor
and
movsb
add
pop
jae
iret
pop
sahf
out
loope
scas
dec
xor
das
push
ja
fdivl
dec
add
jnp
rcll
loop
push
mov
out
rclb
mov
in
stos
pop
mov
insl
cmc
mov
dec
push
outsb
in
add
push
xchg
sbb
mov
mov
push
icebp
push
clc
fcomps
jp
rcll
adc
mov
lds
xchg
incb
fidivl
mov
mov
and
sbb
xchg
add
pop
cld
rorb
loop
dec
cmp
pop
data16
ja
jno
xchg
mov
or
inc
cli
test
out
or
or
test
xchg
dec
imul
fisubs
dec
xchg
mov
cmp
jl
scas
mov
add
fdivrs
mov
mov
adc
outsl
or
popf
hlt
div
push
pop
in
xchg
sti
add
test
add
fcmovb
push
mov
push
fsubrs
push
jp
adc
mov
scas
dec
push
enter
mov
jle
std
lock
push
in
mov
lret
jg
mov
addr16
add
loope
or
std
imul
cmpsl
mov
push
in
sbb
test
xchg
push
mov
pushf
clc
out
es
push
jb
test
lcall
rol
or
mov
push
cwtl
icebp
insl
mov
xchg
out
inc
nop
jne
push
iret
in
in
int
xchg
ljmp
mov
inc
rolb
mov
pop
pop
sbb
ficoms
outsl
fs
mov
cwtl
out
popf
loop
test
dec
arpl
jecxz
and
js
int3
mov
and
dec
lds
lods
dec
xchg
pop
sub
xor
inc
cmp
mov
orl
xor
jno
outsl
sub
ds
cmp
outsl
ds
mov
cmpsl
or
andb
arpl
push
jmp
outsb
sub
scas
fwait
mul
cmpsb
rcll
jnp
leave
gs
jg
inc
xchg
orb
xchg
aaa
cli
outsl
repz
jbe
push
cmp
pop
xchg
clc
xchg
dec
add
adc
push
adc
mov
dec
gs
mov
adc
test
test
out
nop
sub
jle
xchg
push
data16
mov
cmp
test
adc
mov
mov
sbb
loopne
addr16
add
adc
jp
pushf
stc
xchg
and
lods
inc
jecxz
lock
push
movsb
xchg
mov
in
out
jae
add
mov
or
xorl
mov
mov
add
lock
ficompl
inc
fnstsw
popfw
clc
push
sahf
cmp
mov
mov
lods
xchg
out
popa
mov
mov
fucom
out
dec
dec
mov
mov
es
out
fpatan
movsb
cwtl
ljmp
leave
dec
notl
add
addr16
mov
xlat
iret
dec
mov
dec
in
or
icebp
lea
push
fildll
imul
jecxz
mov
or
out
or
adc
lods
sarb
movsl
dec
cld
mov
stos
xchg
mov
ljmp
jno
cltd
adc
sbb
scas
test
out
mov
sub
popf
cmpl
dec
or
out
jp
jno
xchg
mov
mov
cld
pop
sarb
ret
xchg
mov
inc
lret
sti
adc
mov
or
scas
lret
leave
cli
cmc
testl
fmull
je
and
adc
fs
test
mov
out
int3
jne
fmuls
push
rcrl
pop
sub
ds
push
insl
xor
sbb
cltd
insl
mov
movsb
jns
std
xorb
mov
jnp
shll
sahf
push
ret
enter
je
jnp
cli
push
lds
inc
ja
pop
fnstenv
sbb
outsl
movsb
xchg
dec
cmp
stos
mov
scas
mov
pusha
push
mov
outsl
mov
pusha
lds
add
adc
pusha
into
out
pop
jmp
scas
add
ss
dec
test
sub
fcmovnb
call
jno
test
iret
fisttpll
rclb
xchg
insl
add
add
or
insb
xor
testb
xchg
test
aaa
and
xchg
je
loop
in
dec
mov
inc
sub
clc
sti
push
fsubr
ret
add
xchg
lds
out
cs
jns
hlt
lret
cld
test
test
and
cmp
cltd
push
push
out
xchg
jne
push
stc
cmp
push
lcall
cmp
std
jg
xchg
adc
leave
mov
jge
jb
scas
add
sbb
inc
loopne
pop
addl
and
push
out
leave
xor
dec
dec
int3
aaa
sub
cmp
inc
mov
and
mov
push
pop
dec
jge
jnp
rcrb
cmpsb
fadd
mov
xor
insl
push
out
jno
push
xchg
outsb
pop
or
cwtl
jbe
push
repnz
jg
sub
mov
cmpsl
pop
outsb
sahf
popa
lods
hlt
and
test
and
shlb
sbb
shlb
mov
les
dec
mov
dec
push
dec
pop
adc
loopne
dec
out
enter
jl
mov
xlat
push
push
sbb
sub
mov
test
xchg
pop
aam
fimull
repz
arpl
outsl
adc
and
int
mov
xchg
nop
inc
and
pop
addr16
jb
ret
pop
punpckhdq
mov
jb,pt
xor
mov
out
arpl
test
cmp
or
aas
into
test
mov
xor
cli
cmp
push
sbb
gs
mov
mov
add
stos
mov
xor
xchg
fnstenv
movsl
leave
imul
mov
mov
jbe
push
test
pop
mov
push
lret
mov
dec
push
jecxz
int
pop
and
push
lret
and
dec
pusha
inc
push
or
fisubrl
scas
arpl
repnz
repz
xor
mov
cmp
test
xchg
push
xchg
jo
cmpsl
movsb
subb
sahf
loope
inc
cmpb
xchg
mov
addl
shl
push
pusha
fists
cmpsl
ja
mov
inc
movsb
fdivrl
mov
sbb
cmp
xlat
jns
pop
pop
fsubrs
insl
and
out
clc
ds
and
sub
out
inc
pop
lret
xchg
rolb
lret
mov
sahf
repnz
pop
mov
add
imul
ss
dec
and
mov
int
mov
jmp
jnp
add
mov
xchg
jb
loopne
testl
pop
and
adc
sbb
mov
xor
sbb
add
mov
into
int
das
sub
cwtl
test
mov
scas
int3
xchg
and
dec
aad
bound
dec
xor
loope
dec
pop
pop
mov
scas
sahf
push
sbb
mov
mov
inc
adc
push
hlt
inc
je
mov
insl
scas
subb
ret
popa
and
xchg
push
jmp
fdivrs
mov
mov
xchg
jecxz
imul
dec
and
jbe
es
sub
cmc
imul
insl
pop
sub
mov
cmp
test
sahf
fidivl
std
adc
pop
cs
movsb
xor
loope
gs
adc
dec
cmp
std
cmp
das
outsl
xchg
jg
es
sahf
lret
int
mov
ljmp
insb
adc
lea
pop
xchg
push
hlt
enter
arpl
lds
mov
cmp
or
sbb
js
jecxz
lock
jge
push
into
sti
mov
add
ss
and
sub
pop
sbb
push
mov
pushf
mov
lcall
cmp
scas
dec
shll
add
lahf
mov
scas
mov
cmp
jmp
test
and
add
ret
inc
pop
loope
stc
jmp
test
or
sbbl
push
jecxz
sbb
jle
out
dec
sbbl
adc
cli
cmpsb
push
ret
cmp
jmp
cmpsb
mov
cmp
push
pop
adc
pop
xor
out
or
adc
add
mov
int3
sti
cmp
inc
mov
or
push
lret
ljmp
and
dec
jae
arpl
jnp
test
in
movsl
pop
sub
jge
loopne
lea
xlat
add
and
les
push
mov
mov
lcall
data16
fisubrs
pop
mov
mov
ds
add
mov
lods
jnp
jnp
mov
loopne
xor
inc
inc
dec
ja
pushf
dec
and
dec
std
icebp
dec
or
jno
stos
test
mov
push
mov
stos
lea
jl
outsb
or
jp
in
push
popl
mov
xchg
movsb
or
into
sahf
sbb
or
xchg
xor
mov
ret
xchg
pop
add
sbb
imul
es
repnz
repnz
cmp
sbb
push
cld
add
frstor
in
mov
cmp
push
xchg
push
repz
aad
out
xchg
into
loopne
jmp
mov
xor
adcl
loopne
movsb
test
lods
push
lea
mov
jne
mov
pop
pop
shlb
leave
sub
sub
push
sbb
inc
into
mov
dec
sub
int3
mov
pop
pop
cmpsb
cmpsb
sahf
dec
shlb
dec
mov
pusha
ss
or
movl
inc
sbb
dec
add
xchg
mov
aaa
outsl
jge
lahf
jecxz
addr16
aam
mov
jmp
sbb
sti
dec
pop
shr
pop
add
mov
enter
adc
mov
ficoms
jg
cmp
dec
ret
arpl
pop
pop
sbb
jge
pop
dec
jle
adc
idivl
jge
and
ret
push
and
mov
mov
inc
call
sub
and
or
jne
or
repnz
adc
fs
int
xor
pop
xlat
orl
xchg
pusha
btl
xor
inc
sbb
pop
mov
imul
xor
adc
lods
mov
cmp
adcl
inc
or
les
adc
xchg
test
in
sbb
sarl
notl
enter
dec
or
out
sti
out
adc
neg
cltd
jne
jae
pop
test
sbb
insb
std
ret
call
inc
dec
push
ss
ret
jo
and
inc
popf
adc
pop
or
dec
and
stos
adc
cmp
sbb
mov
push
and
out
dec
sahf
push
sbb
add
pop
inc
add
lea
ja
fcmovnb
clc
push
cmpsl
out
mov
add
pop
mov
leave
fwait
out
lcall
icebp
pop
sub
sub
push
fs
add
inc
jbe
adc
aas
push
adc
jge
lret
in
pushf
and
ja
dec
mov
xor
es
lea
sbb
jno
mov
sbb
data16
test
cmp
subb
scas
adc
mov
jne
mov
cmc
aaa
out
inc
xlat
jns
xor
pop
add
jae
pop
lock
dec
push
xchg
inc
popf
jle
pop
aaa
addr16
mov
push
jg
xlat
add
rolb
inc
push
sub
repnz
andl
dec
dec
xchg
xor
jg
push
jge
mov
test
icebp
lcall
scas
mov
lcall
fsubrp
jo
loope
pop
jmp
mov
and
adc
popf
sbb
adc
dec
mov
jl
sub
push
jmp
leave
cmp
add
enter
sub
or
icebp
out
cmpsb
ds
paddw
lahf
inc
je
subl
dec
inc
mov
sub
fcomps
lahf
pop
dec
jmp
mov
addl
lea
and
in
andb
jb
mov
sub
stos
xor
rol
inc
nop
cmp
xlat
aam
mov
pop
fs
push
enter
gs
jmp
sub
fildl
call
shlb
mov
dec
sbb
fsts
mull
scas
mov
push
push
cli
pop
aam
sbb
in
pop
rcr
push
pop
lea
adc
test
jmp
fwait
dec
mov
dec
mov
insb
add
cmp
or
mov
pop
sbb
movzwl
pop
push
sbb
cmpsb
xor
mov
fdivrs
add
xchg
mov
setp
mov
dec
pop
daa
sub
xchg
adc
jbe
jmp
cmp
mov
data16
daa
jle
push
bts
outsb
nop
lret
mov
lret
and
sub
dec
dec
rcl
inc
mov
add
in
cmp
xor
pop
pop
mov
cmpsl
daa
mov
mov
jae
cs
out
into
adc
pop
stc
and
fimuls
ds
push
add
add
cmp
adc
jbe
lock
and
push
out
cmp
push
mov
ficomps
jp
loop
xor
xor
repnz
push
mov
xlat
test
out
stc
jb
jge
call
cmpsl
adc
sbb
aaa
std
or
imul
stc
adc
sbb
loop
jb
in
add
push
sbb
lret
aas
sbb
mov
fstl
stos
or
daa
cmp
hlt
pop
int3
popf
sbb
or
testl
aaa
es
mov
dec
fsts
push
enter
test
movsl
movsl
jecxz
mov
dec
stos
in
movsl
mov
xor
shll
mov
xlat
jge
add
add
pop
scas
ss
sbb
test
pop
insl
shll
sahf
adc
or
lds
addl
rcll
pop
pop
fsts
inc
sub
push
mov
dec
stc
jbe
xchg
mov
je
cmp
scas
adc
cltd
jge
adc
pop
insl
dec
push
aaa
call
imul
imul
dec
repnz
fisttpll
pop
jo
jp
lret
insl
loope
sbb
dec
pop
popf
scas
sub
mov
js
gs
icebp
sbb
addr16
and
inc
cltd
daa
fisubrs
push
adc
dec
mov
mov
mov
leave
push
jl
cli
mov
loop
xchg
xchg
add
call
das
xchg
movsb
sbb
sarb
shll
and
std
aas
aad
xchg
inc
or
ss
das
sub
sbb
mov
stos
scas
pushf
jp
mov
sbb
mov
push
fucomi
aas
enter
xchg
sub
cmc
sub
push
adc
repnz
or
jbe
xlat
xchg
sahf
sbb
mov
adc
les
jl
mov
hlt
xor
mov
in
aas
add
arpl
xchg
packuswb
mov
or
pop
addr16
pop
jno
fistps
fcompl
int3
jmp
mov
adc
xchg
dec
imul
lds
mov
adc
leave
fistpll
sbb
pop
repz
push
addb
enter
jb
push
mov
mov
nop
add
loope
mov
jb
es
in
push
movswl
cld
and
mov
add
cmc
jl
xor
dec
dec
lret
push
sbb
xlat
pop
stos
pop
mov
and
cmc
mov
enter
mov
sub
pop
add
std
jecxz
push
out
cwtl
jo
jl
jnp
lret
call
gs
in
push
dec
mov
sub
sbb
mov
inc
sti
popa
sub
sub
addr16
mov
xchg
bound
cwtl
lods
xor
add
push
sub
ss
jmp
push
dec
cmpsb
je
arpl
adc
mov
icebp
movsl
lret
pop
pop
mov
pop
xor
adc
or
jecxz
cmp
dec
push
movsb
stos
movsl
ja
mov
jle
mov
jae
movb
add
jo
mov
adc
jbe
jbe
lods
lret
std
push
ds
clc
and
gs
ror
loopne
hlt
adc
inc
xchg
xor
sbb
rcl
fcmovne
sbb
repnz
mov
aas
out
xlat
or
jo
dec
mov
ret
jmp
mov
ljmp
adc
fwait
aad
lahf
push
arpl
adc
loope
push
or
arpl
aaa
imul
adcl
push
mov
cmpsb
lea
ds
shll
out
cmp
insb
arpl
std
mov
inc
mov
jmp
sub
xchg
in
inc
inc
add
ret
enter
mov
push
mov
sub
rcr
or
mov
cmpsb
mov
mov
stos
add
in
rcrb
jae
outsl
cs
adc
inc
adc
xor
adc
loop
movsw
loop
cmpsb
mov
in
fcmovb
xchg
mov
adc
xchg
lds
out
mov
add
sbb
mov
lods
xor
mov
neg
mov
mov
mov
mov
mov
cmpsb
insl
mov
out
or
negl
adc
push
jge
outsl
dec
xchg
nop
sbb
add
in
in
data16
into
popf
inc
mov
hlt
cmp
mov
les
xor
mov
cs
scas
fidivrs
pop
inc
dec
add
ja
xor
cmp
pop
jno
mov
ja
in
imul
jne
xlat
jnp
xchg
repnz
stos
fs
mov
ja
xchg
dec
insb
enter
loop
fsts
push
dec
repz
jp
imulb
sbb
dec
cmp
outsb
pop
push
test
add
add
jns
out
mov
fistps
add
fdivr
into
ror
fisttps
rcrb
test
lret
jl
ret
or
lea
xchg
dec
lea
sub
mov
test
sub
adc
shlb
fmuls
xor
imul
xor
dec
rolb
sahf
movsw
mov
and
data16
sub
inc
test
movsb
iret
loop
pop
fadds
jb
cmp
fdivrl
cmp
xchg
cmpsb
adc
push
xchg
mov
out
mov
mov
mov
inc
iret
cltd
fldcw
inc
inc
outsb
jle
pop
sub
and
ss
out
jmp
or
int
or
sbb
repnz
mov
push
xor
mov
out
lea
push
cmp
cltd
push
and
sbb
fnstcw
mov
rcl
sub
nop
and
add
push
mov
and
add
imul
std
or
test
push
sbb
push
add
dec
inc
mov
sub
lock
mov
jle
cmp
xor
sbb
loop
out
xchg
inc
pushf
push
mov
stc
movsl
subb
pop
mov
pusha
iret
cmp
call
scas
add
repnz
inc
xor
or
mov
and
in
daa
pop
lods
dec
aad
rclb
sbb
cmpsb
jmp
xlat
pop
es
pop
push
int3
mov
subl
jp
mov
pop
adc
cmpsl
shl
mov
cmp
and
jge
pop
or
js
stos
push
or
ja,pt
push
add
les
iret
cmp
mov
paddb
pop
out
sub
mov
sbb
clc
pop
pop
mov
nop
scas
dec
outsb
xchg
fwait
cli
or
lcall
pop
inc
fisubs
mov
mov
arpl
aad
mov
push
sbb
lods
aaa
add
add
cmp
mov
arpl
cltd
daa
stc
addl
in
inc
jge
and
cs
cmp
repz
jns
sbb
int3
push
loopne
xchg
push
mov
or
jmp
jb
movsb
xchg
jo
sbb
dec
push
subl
sbb
ret
cmc
mov
mov
mov
test
lods
dec
bound
mov
xchg
adc
adc
das
bnd
js
fdivrp
push
adc
sbb
dec
aas
xchg
cmp
loope
out
test
stos
jecxz
sti
lret
mov
pop
xchg
push
mov
xchg
xchg
addr16
fwait
mov
add
sub
sbb
or
mov
int3
gs
adc
sbb
dec
dec
and
mov
cmp
inc
xchg
imul
pop
es
popa
cwtl
sbb
mov
push
pop
addl
inc
daa
in
inc
xchg
mov
stos
pop
enter
das
cmc
mov
fimull
mov
mov
jg
mov
mov
out
xor
enter
int3
or
xor
lahf
das
or
inc
adc
das
or
sbb
lds
xor
cmpsb
inc
xor
mov
cmpsb
int
pusha
xchg
clc
jb
ljmp
psubsb
in
pop
fs
jg
mov
pop
rorb
pop
mov
dec
test
and
push
dec
leave
mov
test
pop
ret
ja
push
enter
push
enter
push
cld
jno
test
in
imul
loop
dec
or
push
dec
jge
push
mov
inc
test
sbb
pop
outsl
mov
adc
xchg
add
add
popa
jmp
cltd
or
push
xchg
aam
lods
cli
xor
adc
adc
jno
add
das
dec
lcall
adcl
pop
jp
jmp
bound
ljmp
cmp
jl
fwait
es
iret
sbb
je
leave
xor
and
fisubrl
lret
xor
jno
js
jecxz
flds
cmpb
pop
mov
or
insl
or
cwtl
sbb
out
shll
dec
sub
xor
test
push
mov
shlb
xor
add
mov
mov
outsl
mov
cmp
clc
aaa
lret
xor
cli
sub
dec
inc
pop
mov
test
rcrb
inc
cmp
shll
cli
sbb
add
arpl
lret
nop
lret
in
pop
int3
imul
jo
jl
mov
jbe
test
mov
aaa
jl
lahf
cld
add
pop
inc
and
stc
jmp
pushf
repz
insb
sub
pop
out
xchg
sti
mov
les
inc
test
mov
and
adc
ljmp
movsb
mov
movsl
mov
fwait
cli
jno
pop
push
sbbb
in
fwait
push
shlb
jne
cmc
out
ja
or
or
sub
mov
inc
imul
dec
mov
jmp
mov
add
mov
testl
ljmp
inc
add
pop
popf
dec
aaa
shrb
out
pop
push
inc
push
out
sub
or
jg
popa
jle
mov
inc
jp
sbb
add
fistl
outsb
add
loope
and
inc
ds
mov
loopne
out
mov
jb
or
pop
inc
test
xlat
mov
jb,pn
pop
cmpsb
fwait
push
cmp
cmpl
push
push
enter
sbb
aaa
mov
icebp
imul
lds
mov
gs
pusha
bound
repz
lods
fdivr
loopne
pop
aaa
loopne
or
xor
clc
mov
iret
cmpsl
cmpl
in
pop
mov
add
js
sub
cmp
mov
aad
sbb
loope
testb
pop
mov
pop
cld
hlt
daa
popa
imul
cmc
cmc
xchg
dec
pop
ja
mov
mov
hlt
mov
pusha
stos
movsb
jg
mov
fwait
xlat
mov
faddl
jecxz
adc
cmp
jecxz
imulb
gs
push
push
sbb
mov
jnp
or
sbb
or
sbbl
lods
test
les
pop
scas
je
ljmp
inc
dec
mov
lock
sbb
outsb
sbb
test
push
and
xchg
mov
and
push
and
mov
shr
jns
push
aam
xor
xchg
jecxz
sahf
shlb
mov
cltd
fldt
inc
inc
test
and
pop
jge
xor
insl
lods
mov
xchg
ljmp
lods
adc
mov
jg
shll
scas
and
mov
rol
negb
daa
cmp
sbb
loop
jno
stos
push
aas
ret
in
in
jg
loop
iret
and
clc
pop
sub
cmp
les
add
es
rcrb
sbb
shrb
out
dec
cmp
cmp
addr16
jne,pn
aad
enter
sub
pop
push
pop
das
cmp
lcall
in
mov
jns
mov
sbb
cs
pop
or
or
xchg
jmp
les
shll
imul
dec
test
pop
cmp
mov
rorl
aaa
xchg
mov
mov
mov
ret
int3
push
clc
cmp
add
pop
sbb
daa
push
sub
pop
push
jns
adc
mov
adcb
aas
fmull
or
jns
leave
adc
out
cmp
mov
cli
add
les
ds
icebp
scas
inc
incb
aad
test
fistps
fcomps
lret
xchg
test
fs
jb
jge
pusha
pop
mov
das
adc
dec
mov
add
ror
or
or
stos
daa
imul
xchg
cld
mov
xchg
test
outsb
pop
jbe
jg
imul
dec
sub
inc
subl
xor
lret
test
xchg
push
data16
mov
aaa
enter
pop
int
xchg
out
into
loop
pop
movsb
xor
cmp
sahf
int
push
movsl
mov
sub
popa
adc
or
shll
popf
xchg
pop
pop
das
push
test
cwtl
mov
lcall
inc
xchg
mov
stc
xchg
ror
add
inc
enter
mov
mov
ja
dec
sub
add
mov
rorb
sub
push
add
stos
push
push
lock
std
inc
push
mov
mov
fisttps
xor
sbb
fdivl
adc
jl
sti
mov
pop
mov
mov
add
popf
bound
sbb
lods
xchg
mov
pcmpeqb
fmull
mov
pop
lret
movsb
inc
lods
shr
push
xchg
scas
push
xchg
pushf
rcll
fstps
testb
cli
addb
jae
push
pop
arpl
sbb
iret
or
sub
notb
cmp
cmpsl
shrb
fisubrs
stos
jmp
push
aad
leave
xchg
in
orl
sbb
pop
mov
cmp
mov
sub
cltd
push
popf
in
int3
outsl
cmpsb
and
and
inc
bound
push
out
mov
mov
adc
imul
mov
out
add
push
xchg
sbb
aaa
daa
and
pop
sub
inc
mov
stc
jl
iret
aad
fcomp
adc
shll
pusha
sbb
push
or
cli
or
sahf
fstpl
add
mov
cmpsb
cmpsl
orb
sbb
loopne
jo
pop
inc
and
gs
xor
mov
das
or
sub
int
inc
cmpsb
and
negl
or
popf
addr16
shl
push
adc
sbb
xor
mov
in
mov
cmp
sbb
test
repz
or
jns
or
adc
call
jne
mov
icebp
sbb
shlb
push
push
sub
xor
sbb
mov
aas
jp
sub
mov
xor
adc
mov
repnz
adc
test
adc
jns
mov
in
push
test
aam
cmp
or
mov
pushf
jecxz
xchg
nop
lcall
mov
xor
push
fs
pop
fidivs
adc
dec
mov
xchg
mov
data16
xchg
xor
jmp
and
pop
mov
xor
notb
inc
cmp
pushf
jo
push
inc
cmpb
ja
data16
nop
pop
dec
fisubs
sti
pop
mov
mov
iret
aad
inc
push
shr
xchg
popa
adc
mov
fcompl
js
add
dec
lds
add
and
subl
in
pop
mov
mov
sub
adc
pop
pop
loope
jbe
test
add
adc
nop
xor
mov
and
nop
sahf
mov
lcall
inc
pop
jp
push
pushf
pusha
xchg
or
sbb
mov
ja
mov
enter
out
sub
test
mov
xchg
xchg
sti
sbb
push
pop
ret
lcall
movsl
jecxz
add
je
stos
sub
repz
fistpll
sti
mov
out
or
call
iret
sub
adc
cmp
in
sti
sub
out
jmp
pushf
jmp
inc
push
lret
lods
push
sahf
push
ret
call
jae
sti
and
xchg
movsl
std
jl
xlat
std
pop
mov
sti
notl
mulb
pop
sub
push
arpl
mov
fists
adc
mov
bound
bound
xlat
inc
leave
negb
add
test
add
jp
popaw
sub
test
daa
cmp
adc
rcrb
mov
inc
shrb
fwait
jo
inc
ja
test
jb
dec
jg
aas
adc
js
push
sbb
jge
dec
cmp
mov
add
mov
aad
mov
mov
fnstcw
adc
jl,pn
std
dec
pop
pop
std
aad
adc
mov
cwtl
leave
fisubl
aad
push
insb
js
test
mov
js
add
iret
les
inc
aad
jl
mov
pop
test
sbb
pop
jne
shll
mov
into
and
mov
mov
and
roll
or
icebp
mov
pop
sub
push
and
mov
sbb
in
xor
aas
mov
dec
or
mov
dec
shlb
lahf
pop
sbb
add
dec
pop
clc
cmp
push
repnz
adc
insl
test
sub
loopne
insb
pop
or
xchg
jl
incl
xchg
sub
push
lret
mov
out
pushf
or
lret
lret
inc
inc
bound
or
fisubrl
adc
das
xchg
lea
push
das
mov
rcl
addr16
push
mov
xlat
push
mov
lret
inc
adc
cwtl
add
lds
test
push
xor
push
xchg
fimuls
and
std
pop
xor
or
inc
sbb
out
ljmp
pop
and
xchg
pusha
popf
loope
push
and
mov
inc
gs
jbe
hlt
enter
cmp
push
add
mov
jbe
int
out
push
fiaddl
outsb
idiv
inc
and
je
mov
push
test
pop
scas
mov
inc
enter
mov
cwtl
std
pop
inc
adc
add
push
pusha
jno
xchg
inc
mov
cwtl
dec
sbb
adcl
adc
pushl
or
mov
pop
mov
scas
ds
push
mov
inc
imul
xlat
and
cmp
or
dec
adc
push
rorl
xchg
nop
sti
inc
mov
add
mov
pop
mov
sbb
cmp
push
mov
gs
gs
imul
mov
addl
cmp
cwtl
and
dec
in
pop
insl
roll
lods
add
mov
xor
andl
insl
push
pop
mov
sbb
stos
lock
mov
xchg
xor
jb
pop
loopne
adc
pop
cltd
fidivs
mov
movl
inc
xchg
add
xor
dec
popa
into
xchg
sbb
sti
pop
pop
stc
xchg
mov
sbb
mov
cli
pop
scas
mov
mov
cli
add
outsb
jp
cld
fwait
mov
dec
lods
fnstcw
in
cmp
add
mov
push
lea
fstps
sti
rcrb
movsb
add
repz
ja
xchg
es
daa
je
ja
shrl
pop
stos
jne
pop
inc
xchg
out
cmp
pop
pop
incb
jp
mov
sub
and
lock
sbbl
decl
addr16
adc
test
cs
cwtl
jp
icebp
popa
jl
push
xor
xchg
adc
jbe
stos
lock
add
rcrl
stos
movsl
inc
sar
xor
push
mov
sbb
movsl
mov
add
ret
push
popf
push
add
dec
sbb
jb
rcrl
and
mov
xchg
push
shrl
push
mov
andl
shr
dec
jnp
int
mov
mov
xor
mov
add
mov
and
or
jecxz
or
pop
jmp
loope
dec
gs
and
cmp
push
or
aad
pop
cmpsl
mov
push
testl
jecxz
shrb
jg
ret
push
sub
rol
lret
icebp
int
cmp
jp
push
inc
adc
mov
cmp
js
jo
xchg
pop
jl
dec
dec
or
iret
pop
popf
popa
push
dec
aad
test
jg
call
mov
das
push
shll
jnp
pop
push
push
clc
xchg
jb
lret
cld
jno
add
popa
push
shll
dec
pusha
sub
adcb
adc
insb
fwait
in
push
pop
pop
loope
lea
jb
jecxz
hlt
cld
jle
jno
fiadds
out
xor
xchg
pop
in
hlt
mov
cmp
ret
rorb
sarb
mov
jle
mov
out
or
mov
aas
addb
scas
sbb
mov
js
rorl
rcrb
loop
and
mov
lahf
data16
and
stos
jl
and
lods
xor
loop
cmp
hlt
int3
ret
out
les
stc
mov
fwait
mov
js
jbe
das
mov
push
hlt
in
jmp
xlat
push
xor
mov
ds
xorb
cld
mov
xor
fidivrl
xor
jae
push
push
adc
adc
ljmp
cmp
out
dec
ret
test
pop
sub
fistl
add
leave
imul
mov
jne
inc
push
push
jbe
out
lods
add
lret
dec
xor
sub
jo
and
or
lret
and
mov
sub
inc
rcrb
lock
shlb
inc
mov
sub
push
add
jl
out
es
cli
das
xchg
sub
sub
or
push
jmp
pop
jns
js
test
xchg
mov
dec
adc
lds
ljmp
sub
push
loope
aas
hlt
push
lahf
das
int
dec
jno
nop
bound
pop
sbb
fimuls
aam
push
mov
pop
dec
icebp
push
pop
nop
lock
inc
push
lods
adc
jl
xchg
jbe
ja
rclb
add
sbb
cmp
aas
mov
jp
mov
es
jmp
push
enter
lea
lods
cmp
jg
in
fs
lahf
inc
xchg
dec
in
dec
push
pop
fbld
sbb
mov
scas
jo
jo
add
and
push
lcall
jbe
jge
inc
ret
hlt
sbb
sub
mov
ds
out
icebp
and
jle
add
cld
sti
cmc
jns
or
xor
stc
js
xor
lds
and
adc
sbb
divl
mov
jns
cwtl
int3
push
cld
mov
add
dec
pop
push
sti
adc
adc
push
pop
loop
push
xchg
adc
fst
ja
pop
cmpsb
adc
jge
test
add
movsl
loopne
icebp
ret
fcomp
jl
sahf
dec
leave
pop
in
imul
mov
call
mov
fsubl
out
adc
dec
mov
fisttpl
das
add
cmp
push
cmp
mov
jne
cmpsb
mov
add
repz
fists
mov
jecxz
pusha
sbb
stos
cmpb
test
mov
mov
or
sbb
inc
mov
stos
push
enter
cld
sub
xchg
int
pop
pop
int3
rorb
inc
dec
mov
jmp
push
shlb
pusha
pop
out
push
jl
jmp
jno
stc
push
xchg
int
mov
mov
cmp
sub
sub
pop
stc
dec
mov
repnz
fiadds
fisttpl
nop
int
pop
insb
arpl
mov
xor
lfs
pop
lock
xor
xchg
xor
cwtl
leave
in
sub
dec
lea
inc
int3
ja
sub
je
push
mov
add
int3
inc
cwtl
adc
pop
cs
outsb
xor
mov
jns
add
pop
push
jmp
fs
sub
mov
cmp
mov
and
lret
lcall
pop
dec
shrl
xchg
cmc
sbb
fnstcw
jnp
mov
sub
rcr
sbb
addl
aas
xchg
out
pop
pop
inc
mov
pop
movsl
bswap
lods
mov
loopne
dec
incl
call
mov
mov
in
pushf
orl
add
outsl
adc
stos
dec
adc
cli
dec
push
dec
and
dec
testb
and
shrl
and
cld
add
fcompl
sbbb
mov
dec
mov
in
nop
int
in
push
push
cmc
add
pop
rcrl
inc
push
mov
adc
fcmovnu
adc
mov
mov
mov
jge
jmp
xor
imul
cs
fdivl
mov
inc
ffreep
sub
pop
mov
in
inc
ret
pop
movl
addr16
icebp
clc
lret
scas
aam
add
fsubrl
ret
stos
ret
or
faddl
sub
xor
lret
or
mov
testb
aad
data16
arpl
fnstcw
adc
stos
pop
ljmp
push
or
das
xor
mov
push
lock
cmpsl
jecxz
addl
mov
push
mov
and
dec
mov
push
push
xchg
fsubr
ss
adc
sarb
aas
cwtl
fistl
popl
cmp
ljmp
xchg
push
jl
cs
inc
dec
imul
jns
inc
fisttps
sub
icebp
jg
test
mov
mov
jecxz
xor
hlt
mov
mov
xor
ss
scas
sub
lock
push
pop
pop
cmp
sbbb
xor
in
mull
mov
or
div
movsb
clc
xchg
push
mov
jge
mov
into
sbb
rorl
je
fnstsw
aaa
loope
repnz
mov
lret
loope
repnz
pop
rcrl
cltd
inc
sbb
xchg
dec
xchg
inc
nop
hlt
loope
or
stos
lcall
inc
push
aas
pop
out
mov
pop
push
enter
mov
jno
jo
imul
sub
popf
adc
add
dec
xchg
lock
add
jae
cmp
xor
imul
pop
addb
add
xchg
mov
pop
popw
mov
aas
xchg
and
in
out
dec
std
push
idivb
ja
sti
and
insb
stos
lcall
lcall
xor
loope
je
push
mov
addl
data16
and
pop
andl
cmpl
sub
or
mov
enter
aam
mov
xlat
dec
mov
inc
ds
and
mov
jmp
jno
test
insb
mov
cmpsl
cmp
out
xor
aad
push
stos
and
and
cmpl
push
insl
mov
hlt
cmp
jnp
inc
inc
adc
test
cwtl
out
jne
fwait
aaa
inc
add
sbb
mov
into
dec
aas
lcall
out
inc
adc
pop
inc
pop
pop
fcoml
mov
add
divb
addl
pop
jnp
cmp
stos
push
xor
popl
push
push
push
jo
cmc
ret
cwtl
mov
movsl
cmp
lret
inc
sbb
lret
adc
xchg
adc
movsl
mov
int3
enter
dec
imul
mov
fsubrs
and
or
in
insl
ficomps
sbb
mov
std
and
call
push
stos
jmp
test
out
jbe
xchg
xchg
ss
jle
mov
mov
pop
mov
xchg
mov
div
adc
adc
data16
add
cmc
jp
imul
shr
push
shlb
lret
loope
mov
addr16
ret
mov
ja
dec
adc
mov
insb
mov
ret
sub
mov
and
inc
aam
lds
cmp
inc
push
sub
and
outsl
testl
or
insl
notb
scas
clc
ucomiss
fdivs
cmpsl
je
pop
in
mov
mov
mov
cmpsb
adc
andb
sub
std
or
xchg
loop
dec
push
shr
sub
hlt
fadds
int
xor
lcall
cs
mov
xchg
xor
daa
leave
dec
movsl
dec
jp
xlat
jnp
aaa
pop
orl
rcl
pop
xor
push
cmp
dec
pop
or
add
gs
lods
aaa
cwtl
xchg
sbb
insb
push
xchg
add
cmp
dec
xor
mov
cmpsl
xchg
into
xor
bound
stc
xchg
leave
mov
pushf
int
bound
push
pop
sbb
mov
out
and
and
xchg
push
test
sbb
inc
xor
ret
jne
in
fimull
xchg
enter
mov
loop
popf
push
mov
hlt
scas
pusha
out
add
mov
lods
push
dec
aam
cmpb
in
loop
inc
or
add
xchg
in
pop
clc
out
movsl
out
and
je
jae
repz
aad
in
ret
sarb
testb
push
dec
es
mov
dec
adc
pop
mov
outsl
push
mov
mov
test
jmp
jg
xor
xchg
in
xchg
or
push
mov
mov
dec
mov
scas
dec
sbb
repz
mov
decl
add
and
jmp
inc
cmpsb
add
les
scas
push
or
sarl
pop
lahf
pop
xor
mov
lea
lret
mov
lds
pop
lret
or
dec
xor
jecxz
mov
imul
adcb
ror
in
js
popl
add
into
lret
push
cmc
push
mov
or
cmpsb
mov
xchg
fidivs
aaa
adc
lds
jb
xchg
out
lock
xchg
rolb
aam
scas
loope
mov
aaa
inc
sbb
or
mov
inc
jns
inc
mov
and
pop
mov
cmpsl
mov
fildl
xchg
cmpl
enter
movsb
lods
popa
or
pushw
jo
adc
inc
movsl
xlat
sub
outsl
and
iret
ljmp
xor
iret
testl
xchg
xchg
mov
and
into
addl
movsl
leave
test
or
rorl
sub
iret
or
outsb
aaa
mov
aam
mov
cmp
cmp
jno
jl
or
aaa
lret
inc
sub
leave
enter
shrl
dec
imul
cwtl
inc
ds
ret
jae
jb
xor
mov
sbb
lret
sub
push
outsb
repnz
jns
loope
inc
add
xchg
leave
pop
jnp
lcall
mov
scas
inc
fabs
push
gs
cs
subb
mov
jg
std
pusha
sub
xor
or
cwtl
mov
mov
test
mov
inc
adc
sbb
stos
lcall
push
adc
sbb
rclb
sub
scas
mov
fdiv
jae
mov
jmp
add
adc
adc
movsb
inc
mov
or
hlt
jge
andl
xchg
pop
jae
loopne
inc
xor
push
mov
add
lods
jno
or
lods
pop
mov
dec
iret
and
sti
je
mov
mov
push
jle
int3
jg
push
call
mov
hlt
aad
jmp
imul
je
out
mov
repnz
je
imul
outsb
inc
ds
jecxz
movsl
dec
xor
cmpps
or
mov
pop
inc
mov
jge
pop
mov
aaa
mov
add
ret
fsts
iret
xchg
xor
pop
test
std
and
arpl
int
cmp
xor
pop
cmp
pop
into
sbb
and
fildl
mov
nop
xor
mov
mov
clc
mov
rcrb
push
arpl
mov
gs
test
or
loopne
pop
pusha
test
in
fildll
in
xor
cltd
gs
jg
dec
cmpsb
inc
xchg
cmc
pop
xor
in
mov
mov
xor
cwtl
mov
mov
dec
ret
mov
xor
popa
mov
insl
xchg
mov
mov
jle
cltd
mov
loopne
xchg
mov
xor
je
and
and
push
pop
fidivrs
test
jg
in
gs
fcmovb
call
test
cltd
mov
aaa
and
pop
mov
lcall
sets
adc
stc
cmp
push
nop
sarl
pop
dec
pop
push
fsubrs
cmp
push
inc
xchg
notl
add
cmpsb
dec
pop
cld
leave
divl
pop
pop
mov
pop
je
lods
push
inc
inc
push
mov
pop
xchg
fdivrl
insl
dec
push
push
sub
scas
cmp
pop
ja
push
hlt
push
cwtl
ficoms
and
mov
add
add
stc
push
cmpb
inc
fldcw
cmp
movsb
push
xor
cld
arpl
inc
sub
pushf
nop
cmp
aam
and
sarb
ljmp
repnz
push
mov
push
fs
in
enter
pop
fmuls
mov
mov
shlb
cmpsl
or
jno
fcmovb
test
cmp
gs
cs
mov
sbb
cmp
cmc
jae
mov
push
push
xchg
int
in
sahf
insb
movsb
test
fwait
inc
je
xchg
or
and
fs
pop
and
imull
mov
mov
pop
or
adc
rcll
pop
and
lret
xor
xchg
fstpt
xor
es
int3
pop
lahf
dec
inc
je
xchg
leave
stos
push
add
insl
in
push
or
jae
insl
jne
lods
cmp
dec
pop
inc
sahf
mov
pop
pop
sahf
popf
add
movsl
das
mov
stos
int3
lahf
pop
cmp
popf
leave
data16
test
sub
sbb
dec
push
fldenv
xchg
shrl
sbb
lds
in
std
dec
and
inc
inc
sbb
xor
in
xchg
jle
cmp
dec
mov
das
std
les
movl
adc
subb
push
insl
dec
das
jg
adc
dec
mov
loope
movups
fsubl
sahf
lock
dec
mov
mov
fdivrl
int3
es
outsl
aas
pop
cltd
xchg
ds
jecxz
jnp
pop
movsb
or
negb
or
adc
dec
std
clc
cmp
das
imul
ljmp
cmc
mov
ds
xchg
add
cmp
jecxz
fmull
xchg
adc
xor
push
insb
imul
mov
push
inc
sub
fstps
pop
cmp
aad
movsl
pop
sbb
jo
dec
ds
cmp
push
dec
clc
jecxz
dec
fs
pusha
push
push
xchg
scas
fiaddl
xchg
mul
dec
add
xchg
push
xchg
faddp
mov
sub
gs
fidivl
and
dec
scas
daa
repz
lcall
or
outsb
movsb
xchg
xchg
stos
sbb
cmpsb
enter
notb
mov
jge
lock
xchg
cs
ds
push
shll
or
mov
mov
pop
movlps
fwait
mov
imul
dec
jecxz
jno
add
add
mov
adc
jnp
mov
out
fnop
stos
jecxz
iret
xchg
sbb
mov
mov
lret
inc
pop
leave
repnz
lods
test
jg
mov
std
inc
movsb
pushf
dec
movsb
push
sub
sbb
inc
sbb
jp
lahf
push
lcall
inc
push
fcomps
scas
iret
xchg
pop
mov
fwait
xchg
cltd
jle
fistpll
and
mov
push
push
cltd
lea
jmp
inc
call
or
mov
iret
dec
nop
mov
enter
stos
pusha
popf
or
fdivl
and
sub
dec
mov
push
outsb
test
es
testl
and
repnz
loop
loope
cmpsb
clc
test
clc
js
or
mov
clc
lea
inc
movsl
xchg
fcomi
push
mov
cmp
xchg
jge
arpl
adc
xchg
jnp
bound
push
fimull
lock
inc
notb
pusha
jnp
or
sahf
sbb
cld
test
jae
mov
xchg
out
lsl
fmulp
enter
outsb
ficompl
jb
addr16
stos
cli
add
xor
loopne
dec
fcoms
roll
push
add
cmc
and
aad
cmp
dec
insl
jecxz
lret
sub
cmp
shl
cmp
jp
or
jo
mov
movsl
notb
pop
loope
push
imul
out
insb
fs
ror
xor
stos
mov
add
and
imul
mov
cli
xchg
je
jg
jae
sub
pop
xchg
pop
dec
mov
mov
and
xor
push
imul
int3
shlb
ss
insl
pop
pop
pop
fiadds
mov
fbld
pop
push
and
jecxz
movsb
nop
mov
cli
sub
ljmp
in
cmp
jge
repnz
sbb
push
and
popf
or
xor
pop
idivl
outsl
js
stos
shl
fcom
push
es
mov
cld
dec
push
pop
mov
lcall
dec
stos
addl
cltd
xor
lea
dec
scas
lahf
inc
movsb
sahf
sub
dec
cltd
andl
leave
mov
mov
adc
adc
cltd
cli
adc
adc
test
xchg
mov
rcrb
xchg
in
repnz
mov
int
and
inc
rol
cmpb
in
fstpt
mov
push
xor
lret
sbb
loope
fnsave
sahf
pusha
sbb
divl
sbb
test
cltd
stc
icebp
push
imul
loop
das
cmp
lods
inc
test
add
bound
inc
sub
in
mov
mov
das
xor
inc
fildl
pop
nop
xchg
xchg
in
std
fistl
mov
aam
push
cmpl
sbb
dec
mov
ja
out
roll
lods
xchg
jge
nop
and
repnz
cmpsb
loop
mov
add
fwait
dec
push
cmp
mov
jae
dec
loopne
xchg
cmp
popf
out
test
jns
lods
sbb
inc
or
xor
jmp
aas
mov
fidivl
xor
xchg
rclb
jle
filds
xchg
adc
test
pmulhuw
outsl
inc
shl
adcl
xchg
adcb
xadd
int3
sbb
xchg
cltd
push
cmp
int
fstps
pushf
adc
gs
mov
fistpl
cmp
mov
addr16
popf
jl
or
xor
js
push
dec
cltd
adc
and
cltd
inc
push
or
jae
mov
enter
pop
push
movsb
aad
cmp
enter
ds
jp
out
aad
rcll
inc
jo
xchg
filds
into
adc
clc
aad
jmp
scas
out
icebp
sbb
fwait
inc
mov
push
inc
iret
outsl
and
fs
mov
jge
sbb
mov
seto
mov
and
cmp
dec
push
cli
sahf
pop
fs
inc
xchg
imul
mov
adc
jg
mov
add
mov
push
sbb
ret
int
scas
jns
rcrl
movsl
leave
adc
adc
sub
pop
or
out
mov
xchg
pushf
adc
icebp
mov
push
inc
es
pop
gs
push
into
push
jg
dec
cmp
fists
popf
dec
out
shll
call
ja
cli
mov
enter
cmp
sub
xchg
inc
in
push
jmp
out
les
mov
imul
dec
xchg
mov
lds
inc
fimull
dec
dec
fwait
lds
pop
fs
jmp
inc
in
enter
lret
scas
mov
mov
pop
fnstenv
and
mull
pop
sub
xchg
ficoml
add
push
pop
ret
daa
and
cmp
repz
dec
pop
mov
push
scas
rcr
test
jno
ror
jp
stos
cmp
adc
dec
imulb
out
js
mov
test
jp
fdivrl
dec
add
imul
cld
inc
dec
sbb
repz
push
add
test
add
inc
inc
mov
mov
mov
mov
add
lret
fldcw
mov
sbb
test
xor
dec
push
popa
mov
adcl
out
popf
jecxz
xchg
mov
xor
dec
add
push
fldln2
xchg
jecxz
inc
and
aas
push
pop
sarb
or
xor
pop
in
inc
sahf
inc
xchg
sahf
mov
roll
mulb
ficoms
pushf
repz
lcall
and
mov
stc
shr
jg
pusha
js
add
jbe
fwait
dec
enter
out
mov
sub
and
and
lock
imul
sbb
xor
aaa
add
jl
divb
aam
fsubs
in
icebp
aam
adc
lahf
and
or
lods
pop
push
cld
and
cltd
aad
adc
into
xchg
mov
xlat
cli
jge
or
cmovge
push
sub
mov
aas
jmp
mov
lds
mov
mov
hlt
in
inc
fdivrs
jo
lahf
lods
or
mov
mov
in
insb
sub
sub
mov
ret
jle
mov
or
roll
lock
les
mov
dec
mov
inc
mov
les
scas
out
test
shll
inc
pop
mov
and
je
int3
movsl
inc
inc
xorb
xchg
xchg
les
mov
aaa
add
pop
fbld
lcall
mov
gs
pop
rolb
js
lret
inc
rolb
mov
pop
jp
mov
xor
sbb
enter
inc
loop,pt
mov
imul
xchg
fwait
mov
dec
xor
outsl
jbe
jae
xchg
mov
fmulp
shrl
sbb
mov
push
enter
jmp
pop
pop
stos
cmp
mov
pop
insl
loop
das
and
adc
push
out
sub
mov
pop
inc
cmp
pop
mov
pushf
divb
lea
adc
xor
jo
cmc
jo
adc
cmp
jo
adc
packuswb
out
pop
inc
cmpsl
jge
cmpsb
fldenv
outsb
and
sub
mov
sub
pop
fists
out
lods
jae
test
les
push
mov
sbb
lcall
jp,pt
mov
outsl
in
xchg
js
sub
xchg
es
jl
js
ds
stos
adc
pop
dec
xchg
scas
sub
push
int
imul
roll
pop
in
sahf
divl
dec
mov
in
mov
stc
cmpsl
cmp
mov
lcall
xchg
push
cmp
add
cmp
mov
lods
sbb
pop
push
mov
mov
stc
push
dec
jns
test
data16
or
popa
sahf
cmpsl
mov
into
xor
iret
add
or
push
xchg
repz
pop
sub
xchg
sbb
mov
dec
out
testl
int3
jl
mov
ja
hlt
add
dec
lods
div
jne
pusha
stos
int
and
cmpb
in
dec
pop
xchg
cmp
mov
push
sub
imul
clc
xchg
fstp
add
and
loop
jmp
xchg
xchg
imul
bound
loopne
cmp
mov
or
mov
mov
push
mov
loopne
movsl
cmp
jg
xchg
fidivrl
sbb
inc
lret
ljmp
lret
outsl
push
inc
push
aad
fldcw
shl
jno
push
or
adc
mov
or
out
ret
je
ret
sbb
mov
stos
mov
inc
push
pop
setnp
mov
xchg
cmpsl
inc
nop
dec
adc
iret
and
stos
stos
push
sarb
or
jae
pop
incb
test
ja
dec
and
xchg
fwait
mov
mov
jp
movsl
outsl
jae
fmuls
xchg
fldenv
fadds
data16
cld
out
add
or
into
cltd
lods
dec
inc
arpl
xor
stos
mov
movsl
jmp
jmp
cmp
arpl
sbb
cmc
sbb
packsswb
pop
mov
inc
xor
or
outsb
xor
push
adc
mov
sbb
or
aam
mov
mov
sub
dec
addb
add
jne
popf
out
pushl
in
insb
callw
and
inc
in
and
xchg
dec
shlb
cmp
fnstenv
in
test
sbb
or
out
adc
cmp
dec
outsl
sahf
fmulp
xchg
xchg
push
in
push
popf
loopew
push
inc
inc
pop
pop
cmp
repnz
nop
mov
imul
pop
dec
push
mov
iret
fistps
jnp
pop
mov
repnz
xlat
movsb
dec
movsb
pop
mov
mov
fmull
add
pop
jnp
cmp
jae
push
mov
test
adc
dec
fwait
aad
inc
sub
pushf
mov
lea
pop
test
jns
movsl
push
bound
loopne
adc
out
push
sub
jecxz
repnz
xlat
mov
jb
inc
scas
xlat
cmc
lahf
scas
push
lcall
insb
xor
fisubrl
std
call
ljmp
add
mov
flds
jp
leave
inc
icebp
gs
xchg
lods
aas
push
cmpl
sub
pop
pusha
sbb
or
pop
push
test
rcl
out
mov
jne
mov
xor
push
sub
repz
ljmp
lock
hlt
loop
inc
inc
sti
add
lret
jmp
sub
xlat
fsub
shlb
jp
arpl
mov
and
out
cmc
dec
jp
repnz
repnz
inc
xlat
cmp
sarl
push
cmp
cwtl
int
test
add
adc
push
inc
sbb
or
sub
call
loopne
orl
cwtl
stos
stos
out
aas
xchg
sbb
xchg
add
cld
xor
loop
xor
scas
xor
sbb
dec
adc
sub
inc
leave
dec
je
xlat
andl
sbb
and
jnp
xlat
push
loope
mov
inc
push
cld
scas
in
pop
xchg
inc
mov
mov
ss
pop
push
jae
sbb
loope
movsb
mov
neg
ret
scas
nop
clc
std
ret
cmpsb
jno
and
jae
push
mull
cmpsb
sti
std
pop
jg
and
popf
decb
mov
adc
in
call
lock
jo
orl
inc
inc
insb
cmp
mov
outsb
pop
jns
cli
in
shl
sub
xor
cmc
stc
ss
sti
sbb
out
rclb
aad
pop
je
rcl
mov
arpl
fisttpll
cmpsl
jbe
sub
insb
lcall
xchg
mov
adc
adc
mov
or
sbb
push
ljmp
or
test
sub
enter
hlt
test
nop
dec
icebp
vcvtpd2psx
and
mov
je
cld
stos
aad
adc
inc
adcb
xchg
dec
mov
dec
inc
lret
je
clc
rorl
scas
sbb
int3
out
push
inc
sub
or
push
nop
mov
dec
test
add
xorl
pop
mov
or
dec
dec
stc
cmp
nop
mov
or
xchg
test
sarb
addr16
adc
cwtl
lock
cmp
in
popf
insb
clc
mov
xor
mov
add
jmp
stc
add
fbstp
xor
sbb
mov
push
lret
pop
cs
jne
add
out
ret
lret
daa
and
mov
sbb
mov
outsb
xchg
repnz
into
movl
pop
pop
jp
jge
jns
mov
dec
rclb
dec
lods
stos
icebp
xchg
or
fdivrl
mov
jo
jno
addl
jmp
shlb
mov
rolb
std
mov
add
mov
sahf
enter
sbb
xchg
hlt
mov
xor
mov
out
jae
xchg
push
jae
inc
lods
in
lods
jp
mov
mov
xor
shll
xchg
rcrl
sub
call
test
das
idivb
pushf
ds
dec
aaa
inc
imul
lock
loopne
addr16
dec
pop
mov
fwait
adc
cltd
rolb
and
fldl
xor
popf
subb
test
jae
scas
lcall
mov
lret
xchg
scas
testb
xchg
in
shr
pop
push
loopne
loope
pop
pop
push
movsb
arpl
sahf
aas
ds
mov
jp
nop
pop
sub
cmp
pop
pop
sub
insb
inc
loopne
lods
and
data16
dec
sub
dec
cli
test
and
daa
sbb
mov
sbb
cmp
and
jnp
jmp
lods
inc
loop
mov
jp
push
inc
std
xchg
mov
cs
xor
xchg
lret
jp
sub
lret
inc
xor
rol
scas
mov
aad
jo
sti
lods
movsl
adc
jmp
ret
fwait
scas
scas
scas
sti
insl
in
jnp
stos
mov
dec
pop
mov
push
xchg
cmp
push
stos
push
cli
movsl
adc
insb
fstl
jmp
adc
pop
les
scas
shl
movsb
loope
sub
pusha
mov
mov
mov
fsubl
inc
xor
or
sbb
jb
inc
jb
sbbb
dec
xchg
jecxz
pop
mov
jle
sbb
arpl
das
pop
sbb
cmp
dec
fnsave
mov
xor
inc
xchg
dec
adc
js
orl
lahf
aas
add
pop
movsb
mov
fistpll
imulb
icebp
data16
arpl
arpl
gs
dec
rcrl
imul
addr16
notl
icebp
or
and
shll
jp
cmp
dec
push
or
loope
pop
cmp
mov
lret
mov
decb
and
or
loop
mov
xlat
sbb
int
xchg
fistpl
outsl
ret
sti
and
out
and
leave
ret
push
fs
imul
pop
or
stc
sub
icebp
cmpsl
ja
test
add
mov
insl
call
inc
sub
dec
sub
stc
xor
les
dec
or
lock
add
xchg
out
push
scas
adcb
cmp
pop
jns
sbb
mov
repnz
dec
ds
xor
popl
out
pusha
iret
inc
cwtl
push
mov
cmp
jae
adc
dec
test
mov
rcll
test
pop
add
adc
into
or
mov
stos
mov
push
xchg
add
adc
jl
mov
push
sti
into
fstpt
jnp
ljmp
mov
mov
jle
fistpl
adc
cmp
rolb
cmc
push
jae
push
add
int3
mov
xchg
sub
pop
in
cmp
int3
out
int
inc
and
cld
mov
xchg
loope
xor
adc
and
mov
enter
dec
cmpsb
cmp
repnz
cmpsl
loope
hlt
insl
scas
jbe
mov
xchg
adc
adc
sub
xor
in
push
aad
js
or
and
inc
fdiv
mov
lahf
jl
xor
xorb
loopne
inc
movsl
pop
loop
inc
add
and
rcll
push
call
and
push
push
stc
pop
push
mov
pop
sahf
add
xor
jno
lds
test
pop
leave
lds
jb
pop
xor
mov
insl
idivl
pop
cmp
cmp
aas
lret
pop
lret
pop
idivb
and
and
insb
xor
push
imul
out
mov
daa
hlt
loop
sub
cmpsl
adc
xchg
add
xchg
xchg
jns
push
mov
inc
mov
inc
adc
fldenv
stos
mov
pop
inc
push
jl
or
roll
idiv
pop
mov
or
and
mov
dec
scas
cli
xchg
push
xchg
mov
dec
movsb
inc
cmpsb
pop
adc
sbb
das
push
xchg
sub
das
xabort
leave
sub
mov
pop
ljmp
push
cmc
fs
sti
in
cmpsl
xchg
hlt
cld
dec
std
cmp
lret
mov
and
jns
xlat
hlt
in
nop
into
lcall
pushf
xchg
add
and
inc
inc
ficompl
fildll
sub
das
xchg
roll
push
popf
divl
hlt
dec
pop
sub
push
sub
fisttpll
cld
outsl
bound
xchg
inc
mov
xor
dec
pushf
cmpsb
negb
mov
cmp
inc
add
out
adc
xor
rcll
fidivrs
orl
scas
inc
sub
adcb
in
enter
loope
adc
sbb
out
mov
push
mov
cli
outsl
cmp
jg
mov
inc
pop
jnp
dec
je
dec
adc
das
push
sub
adc
outsl
or
xchg
dec
mull
movsl
xchg
les
add
int3
mov
mov
or
sbb
cmp
ljmp
arpl
dec
es
mov
pop
rcll
fnsave
fmul
and
aad
popa
in
aad
andnps
rclb
pop
pop
xor
lods
jne
mov
outsb
fistpl
mov
mov
mov
xchg
aaa
movsb
xchg
mov
rcll
pop
dec
xor
out
out
das
fidivrs
and
and
and
les
out
inc
sub
pop
xor
pop
pop
jecxz
cmc
ds
mov
fcomp
push
cli
faddp
mov
mov
insl
cmp
ljmp
imul
lcall
arpl
jbe
push
jl
xchg
out
std
mov
inc
arpl
dec
sbb
pop
stc
shlb
stos
xlat
and
bound
inc
stos
mov
je
cmp
pop
dec
outsb
ret
in
sbb
mov
jne
dec
popa
jmp
out
scas
cli
jmp
outsb
shrl
sub
lret
mov
cli
sub
cmp
pushf
jns
pop
rcrl
dec
jmp
cmp
shll
test
out
mov
or
push
cs
rorl
shll
int
sbb
ficoml
and
iret
outsb
add
mov
pop
adc
mov
cmc
cld
lods
ficoml
enter
sub
jl
sbb
pop
out
js
je
xor
dec
lods
pop
mov
pop
subb
idivb
stc
mov
jecxz
pop
sbb
les
push
out
cs
mov
lods
xchg
xlat
dec
jle
adc
rol
lods
scas
mov
lods
test
cltd
cmpsl
cmpsl
mov
xchg
testl
imulb
jbe
xor
xlat
jg
inc
xor
hlt
mov
outsb
fldl2t
cmp
in
jmp
jg
pusha
cmpsb
mov
push
mov
shrb
dec
bound
ds
dec
ja
mov
movsl
mov
jmp
ljmp
stos
rolb
ret
mov
push
fisubs
jle
push
xchg
xor
xchg
add
mov
loop
push
incb
es
mov
xchg
cs
cmpl
popf
mov
jge
cltd
sub
insl
rolb
test
or
cld
jo
xlat
add
lods
aam
dec
sbb
pop
and
lret
dec
notb
jg
jp
loopne
xchg
dec
lret
add
adc
call
aaa
in
dec
jo
into
push
xchg
or
ljmp
cmc
dec
pop
mov
lods
cli
testl
jne
fxch
and
push
imul
cmp
push
jle
lret
in
and
lret
add
mov
add
mov
sbb
xchg
pusha
cmp
push
faddl
out
in
mov
mov
pop
iret
lods
pop
daa
jne
imul
add
mov
je
mov
mov
adc
or
call
pop
and
scas
es
lods
dec
adc
rorl
cmp
leave
shl
sub
jl
bt
test
xchg
lret
es
imul
or
bound
sahf
mov
adcb
add
ret
ss
push
sbb
mov
lds
and
gs
inc
dec
add
add
jnp
inc
fdivrs
imul
mov
stos
stos
test
mov
sahf
sbb
int
xor
movsl
imul
dec
mov
add
inc
or
xchg
push
mov
movsl
jl
mov
sub
dec
jg
fnstenv
nop
ja
addr16
leave
and
mov
jns
dec
nop
dec
test
mov
in
add
movsb
seto
pop
gs
aam
movsb
xor
les
out
mov
lret
fdiv
icebp
out
or
jbe
adc
push
sbb
cmpsl
push
mov
inc
mov
les
fs
push
mov
push
xchg
fldt
pop
pop
sub
loope
mov
mov
jmp
jbe
loope
scas
imul
inc
scas
insl
inc
adcb
adc
sub
andl
int3
jp
ljmp
push
cwtl
sbb
lock
stos
and
inc
mov
mov
sub
dec
fildl
lret
in
mov
movntq
jecxz
enter
in
or
cltd
daa
sub
pop
out
xchg
lods
jecxz
mov
pop
test
movsb
movsl
mov
movsb
sub
stos
mov
inc
push
inc
jnp
loop
lds
std
dec
xor
sub
icebp
jnp
mov
cmp
bound
and
push
push
cmp
loopne
or
xchg
xor
add
mov
cli
cmpsl
clc
push
fwait
arpl
lds
mov
push
mov
inc
mov
loopne
or
mov
adc
in
rcl
outsl
dec
shrb
nop
loop
xlat
mov
push
aam
andl
xchg
rcll
or
cmc
mov
insb
andb
fadd
xlat
std
push
cwtl
lock
lcall
cs
xor
call
es
xchg
cmc
ja
or
and
loope
sub
insl
leave
or
add
jmp
cltd
jae
push
js
aad
aaa
aam
in
cwtl
jecxz
push
mov
jno
mov
pop
ja
in
inc
adc
mov
xchg
fisubrs
cmp
add
push
gs
clc
imul
push
mov
out
test
hlt
add
and
push
push
add
popa
adc
push
repz
fisttpll
sbbl
push
enter
lahf
adc
fs
pop
fstl
cltd
sti
push
aam
jo
jl
xchg
popw
aad
and
fcmovu
pop
in
outsl
add
jo
sub
inc
fisubs
add
sahf
adc
push
cmpsl
lods
xchg
or
mov
adc
mov
cmc
in
ret
sub
repz
inc
test
pop
bound
fldenv
add
add
push
mov
jmp
out
popf
mov
scas
std
sbb
inc
ja
insl
lods
clc
adc
insb
ficoml
call
fildl
cmc
cwtl
aas
pop
in
push
lock
xchg
imul
movsl
pop
push
hlt
cld
mov
mov
inc
scas
mov
cmp
mov
imul
imul
mov
pop
clc
insl
cmp
cmp
xchg
sahf
stc
jge
dec
jle
clc
fwait
ret
jb
cmp
call
out
cld
xchg
sahf
loope
cwtl
fbld
enter
mov
repnz
fistl
add
mov
lret
ficoms
push
pushf
ljmp
int3
shrl
cs
out
dec
sub
xchg
aad
scas
inc
pop
jg
mov
xchg
xor
scas
cmp
push
cmp
fs
cmp
adc
dec
dec
sbb
fnsave
insb
ret
mov
cli
jne
adc
dec
and
cwtl
mov
stos
stos
ficoml
fnstcw
into
repnz
inc
sub
and
outsb
fsubl
sub
pavgb
cs
popa
stc
shll
stc
mov
sbb
inc
pop
cmpsb
push
adc
and
loope
shr
popf
sbb
xchg
mov
repnz
aam
xor
in
lea
aas
cmp
inc
popf
mov
mov
sub
dec
or
cmp
jmp
call
popa
arpl
fcmovnu
add
pop
add
stc
xchg
cmp
and
lcall
insl
nop
faddp
clc
sbbb
pop
scas
inc
pop
or
sbb
int
jl
and
cmp
push
stos
icebp
jge
push
mov
and
into
sbb
push
jmp
push
cmp
jle
jb
scas
inc
cmpsl
jne
or
das
jmp
and
out
dec
data16
pop
dec
jae
notl
xchg
ret
fcompl
cwtl
xchg
xchg
xor
mov
lods
jp
fnstenv
sub
cld
aas
gs
shl
and
mov
inc
out
xchg
or
fdivs
incl
insl
das
dec
xchg
push
or
lret
outsl
sub
push
insl
out
sbb
scas
mov
sbb
ret
sbb
lods
cmp
add
data16
mov
test
iret
ficomps
movsb
lret
push
out
xor
cmpsb
dec
jns
dec
dec
or
jbe
repnz
test
enter
lock
out
inc
pusha
enter
push
jbe
xchg
adc
add
mov
das
mov
outsb
mov
jmp
sub
jne
and
xor
cmp
dec
add
shll
fistpll
imul
repnz
bound
rclb
xchg
adc
inc
pop
add
cmpsl
jmp
lock
idivl
push
enter
and
cwtl
add
hlt
push
call
stos
sahf
sahf
jnp
jmp
sbb
mov
cmpsl
xlat
sub
out
test
lret
stos
mov
push
push
decl
and
mov
inc
dec
es
push
mov
fs
jns
add
aad
inc
xchg
sbb
lods
adc
xchg
int
repnz
cwtl
pop
stc
js
fmuls
add
or
cmp
xchg
xchg
js
outsb
icebp
es
cwtl
xchg
into
pop
cmp
push
dec
repz
push
into
push
ret
loop
cmp
push
jne
popf
sub
mov
mov
arpl
xor
lahf
imul
nop
xchg
dec
movsb
ss
dec
cwtl
andl
inc
out
gs
sarb
cmpsl
sub
dec
adc
outsl
in
lret
push
cmp
mov
mov
push
into
lods
mov
pop
pop
stos
je
mov
inc
sar
je
icebp
mov
jge
add
loop
aaa
mov
and
arpl
fnstsw
mov
shll
cmp
push
jbe
je
sub
sets
mov
arpl
pop
sub
dec
test
into
add
inc
loope
pop
lret
test
aas
lods
lds
mov
addr16
pop
adc
lret
call
pop
sbb
daa
adc
test
scas
ljmp
std
addr16
stc
dec
out
lods
jle
xor
sub
push
or
mov
or
inc
and
pmaxub
xor
and
pushf
jl
in
dec
mov
xchg
jo
push
cmp
ret
inc
jne
jp
cmp
rcll
lret
out
mov
inc
int
std
inc
testb
adc
daa
sahf
xor
mov
sub
fidivl
test
dec
dec
sub
aam
fnsave
inc
xchg
jne
insb
insb
shr
dec
sar
push
dec
push
movsl
jmp
adcl
imul
mov
test
mov
or
jo
fucomip
out
fisttps
lahf
mov
mov
cmpsb
mov
addl
and
dec
sub
iret
les
rcrb
out
fiadds
add
mov
int3
movaps
sbb
mov
fcomps
add
push
divb
je
inc
or
dec
mov
fistps
mov
leave
jmp
pop
sbb
jns
popa
jbe
scas
stos
jne
std
and
jbe
pop
jg
lret
add
pcmpgtb
inc
sub
pop
and
add
fcoml
roll
push
cmp
xchg
push
add
or
push
mov
sahf
cli
into
sahf
xor
shlb
out
push
inc
lret
mov
push
mov
jb
jle
dec
xor
pop
jge
fwait
les
push
fwait
jo
and
cmp
fwait
mov
xor
int3
into
mov
sbb
pop
push
mov
pusha
sbb
loope
sbb
mov
sub
jno
xor
das
mov
insl
push
pop
and
out
push
jbe
ss
movsb
int
icebp
sbb
pop
out
add
lods
mov
xlat
mov
xchg
xor
adcb
mov
jb
inc
scas
jmp
cmp
clc
fwait
mov
adcb
in
andb
dec
dec
popa
sti
in
out
test
lahf
or
cmp
mov
icebp
iret
mov
inc
pop
or
loop
push
pushf
not
lahf
push
lods
js
inc
sbb
ret
loopne
adc
xchg
sbb
mov
dec
push
push
mov
fwait
stos
pop
arpl
sub
mov
xchg
fstpl
sub
pusha
inc
xchg
adcb
arpl
dec
test
jb
fldt
cltd
jecxz
and
sub
sbbl
sti
push
adc
fidivs
inc
aaa
xlat
add
insl
insl
test
lcall
pop
jle
dec
mov
dec
lods
pop
aaa
lods
and
jns
scas
xor
fldcw
add
lods
bound
aad
sub
testb
in
xchg
mov
test
loope
loope
mov
jge
pop
inc
mov
in
jg
xchg
and
add
push
sub
lock
es
jecxz
cmpl
push
dec
pop
shr
cmpsb
and
fbstp
cli
insb
jne
test
sub
lods
mov
adc
shlb
push
fbstp
adc
dec
adc
cmc
data16
popa
push
mov
mov
in
cmp
jne
sub
jno
insb
pop
pop
and
pop
fcomi
insl
shrl
dec
pop
mov
inc
xchg
adc
popf
add
push
popa
loopne
sub
cmc
rcll
fisttps
jge
nop
out
cmpsl
pop
iret
ss
hlt
push
inc
lock
xor
pop
fimuls
loop
add
mov
pop
cwtl
aaa
nop
pop
test
mov
pop
sub
sti
sti
mov
arpl
xor
push
aam
andb
ja
insl
xchg
pushl
ja
jb
dec
and
mov
jmp
lock
popa
out
enter
add
rcl
inc
pop
add
pushf
mov
add
cmpsb
mov
gs
mov
and
mov
in
pop
lcall
in
jno
loope
pushf
mov
jnp
jo
ds
cmp
shlb
imul
fcoml
pop
adc
insl
pushf
in
insl
stc
movsl
test
iret
dec
into
add
adc
lahf
push
or
inc
enter
call
push
mov
cmp
adc
icebp
lods
add
xor
sub
pushf
adc
add
cmp
pop
ret
mov
add
xor
scas
pop
adc
loop
orb
pop
mov
push
scas
sahf
mov
movswl
out
mov
jmp
mov
push
rcrb
inc
movsb
mov
mov
cmp
lahf
arpl
sahf
mov
pop
push
mov
in
dec
xchg
pop
outsl
mov
adc
int3
mov
rcl
icebp
xchg
sbb
jg
dec
fidivl
aad
lods
pop
jbe
xchg
out
movsb
js
divl
ja
cmp
cwtl
jle
repz
jg
jge
insb
es
and
mov
bound
lds
in
mulb
xchg
jecxz
cltd
jge
scas
aas
cmpsl
clc
inc
lret
cmpsb
lods
mov
push
push
fucom
aad
sbb
xor
scas
adc
js
mov
or
ja
out
mov
inc
dec
fcompl
mov
cli
push
mov
push
roll
insl
ss
pop
leave
iret
pop
inc
mov
dec
sub
mov
es
xor
jg
xor
xor
cmp
mov
or
and
push
sahf
push
jmp
jmp
inc
fwait
xor
sub
mov
pop
jae
inc
orb
gs
lret
lock
popa
fdivrl
ret
mulb
mov
shrb
xchg
jmp
test
and
daa
sub
adcl
jp
xor
fisubl
xchg
and
dec
dec
pop
jne
and
mov
mov
fs
inc
cs
pop
xor
mov
ja
sbb
jns
out
cmpsl
adc
xor
insl
cwtl
pop
push
loope
iret
xchg
out
xchg
cs
dec
mov
inc
mov
sub
sub
fmul
outsb
fs
sub
xchg
jno
leave
mov
sbb
xchg
adc
pusha
cmp
pop
xchg
push
mov
and
ficoml
xor
mov
pop
out
nop
adc
mov
stos
and
or
and
pop
movl
popf
lods
test
dec
sbb
and
mov
fsubrl
decl
xchg
lds
popf
test
stc
cld
pop
scas
stc
or
xlat
lahf
xor
movsb
xor
jns
inc
mov
cwtl
in
je
addr16
es
fcmove
dec
adc
pop
test
je
idivb
xchg
sub
out
inc
sub
pop
repz
test
scas
push
lret
insb
inc
mov
inc
dec
inc
jge
push
mov
sub
fimull
mov
sbb
sbb
setnp
lret
and
test
js
loope
xchg
add
outsb
xchg
push
xchg
sub
leave
dec
jmp
mov
pop
stc
mov
dec
sbb
sar
loopne
rcll
and
adc
cmp
dec
lock
adc
xchg
xchg
das
xor
shl
sbb
bnd
pop
cmp
repnz
ret
push
xchg
add
pop
cld
mov
pop
adc
lahf
xchg
enter
xchg
xor
push
hlt
addl
rclb
ds
movsl
loop
cmpsl
dec
push
or
push
add
jle
cli
cmp
sar
and
aam
sbb
divl
adc
jae
xchg
in
mov
jge
and
lret
mov
mov
xor
xchg
mov
mov
inc
mov
inc
andb
cmp
mov
mov
jne
ja
mov
jnp
inc
cs
hlt
js
pop
xchg
xor
icebp
test
jo
sarl
vpshuflw
cmp
daa
and
fisubs
mov
sub
addr16
xchg
jmp
shl
icebp
pop
cli
dec
push
or
xchg
repz
xchg
mov
xchg
dec
loop
ja
cmp
sahf
xlat
add
mov
pop
popa
jg
pusha
loopne
jmp
jp
sub
mov
enter
pop
jecxz
dec
add
das
lea
aaa
scas
and
int
sti
push
push
lcall
mov
jnp
mov
nop
lret
dec
pop
aaa
pop
jp
adc
xchg
or
dec
mov
lret
xchg
adc
popf
insb
sub
mov
adcb
lret
adc
jmp
mov
add
ror
sbb
adc
or
sbb
repnz
lahf
push
dec
mov
add
icebp
mov
pop
out
cmpsb
jne
or
jb
push
and
fsub
fyl2x
lcall
cmp
push
xchg
jp
dec
jo
insl
outsl
or
adc
jbe
ljmp
and
push
xor
mov
fistpll
and
push
inc
cmpsl
pop
test
and
xor
xchg
push
mov
dec
push
repz
push
jb
pop
lcall
clc
fldcw
jecxz
imul
movsb
and
mov
stc
xor
cld
or
sbb
xorb
int
inc
or
cli
xlat
mov
fsubrl
lret
leave
dec
mov
mov
fistpll
in
add
sub
mov
push
add
loope
pushf
adc
lea
jp
jae
leave
sarb
adc
les
jmp
test
repnz
inc
leave
insl
xchg
sti
mov
cwtl
imull
cwtl
cwtl
aad
inc
jle
rol
jbe
rcrb
cmovl
mov
xor
or
mov
repz
sub
or
push
cld
mov
inc
in
movsl
or
inc
clc
inc
js
xor
mov
ss
cmp
fadds
jge
testl
push
shll
sbb
jae
loope
lahf
fisubl
pushf
cmp
lahf
in
fmull
sbb
mov
mov
adc
mov
cli
adc
mov
and
xor
mov
ret
pop
jb
push
dec
mov
fcmovu
orb
adc
data16
cltd
adc
push
icebp
ficoms
dec
imul
dec
mov
mov
int
daa
adc
shlb
lret
call
xor
mov
sbbl
pop
lods
jecxz
sahf
addr16
or
aas
sarb
lcall
inc
adc
mov
lret
sub
mov
cs
outsb
pop
mov
aam
mov
xchg
out
xchg
sarl
lock
sbb
ret
mov
pop
lcall
out
js
or
rolb
mov
cs
orl
clc
shrb
and
xor
out
shlb
out
xchg
sahf
daa
cmp
mov
mov
loopne
and
pop
fildll
mov
push
inc
fcomi
cmc
lock
gs
cli
or
xor
adc
pop
xchg
dec
bound
jnp
icebp
mov
push
lret
out
push
pop
or
lahf
xchg
mov
call
jmp
jmp
xor
in
pop
pop
je
sbb
or
mov
ror
sbb
enter
cltd
adc
icebp
lds
push
ja
pushf
ja
sub
ss
insl
sub
inc
cmp
push
mov
adc
testb
pop
call
push
mov
sub
sbb
dec
xchg
fiadds
icebp
lret
inc
pusha
jbe
notl
push
inc
mov
jnp
jp
pop
lods
jmp
inc
mov
imulb
mov
sbb
add
lods
or
sub
mov
xor
repnz
mov
sbb
mov
pop
jmp
push
inc
jns
stc
sbb
mov
push
cmpsb
jns
adc
in
mov
dec
or
cli
sbb
push
mov
inc
mov
push
popf
sub
xchg
cmpsb
push
push
fidivs
mov
fdivrl
aas
mov
mov
jle
mov
out
jbe
sbb
dec
lods
dec
mov
xchg
fs
fnsave
outsb
and
mov
adcb
pop
insl
fnsave
push
insl
add
in
cmp
stos
inc
popf
lcall
or
mov
pusha
andl
stos
lea
imull
movsl
aam
lret
inc
adc
shl
nop
dec
push
sbb
shr
or
push
jne
xchg
scas
lahf
in
dec
or
sub
pusha
or
pop
fwait
push
cltd
out
or
mov
call
fisttpl
cmc
push
or
lahf
into
mov
in
lret
cmpsl
cmp
fmull
sbb
aas
test
xchg
inc
jnp
and
insb
fcoms
in
inc
lds
and
push
cli
jecxz
push
in
test
push
xor
in
lret
pushf
int3
call
mov
insl
push
xchg
inc
movsb
fisttps
fdivrs
mov
push
xor
scas
adc
pop
cmp
rorl
push
pop
mov
dec
mov
fimull
adc
aad
or
add
bound
fs
out
shlb
adc
jmp
mov
call
or
lahf
imul
add
push
and
pop
and
data16
arpl
pop
fisttpll
sbb
ret
pop
push
mov
pushl
hlt
push
test
ret
std
xor
inc
lods
pop
dec
dec
js
or
icebp
in
mov
adcb
xchg
push
add
xor
or
out
jge
icebp
mov
popa
inc
dec
out
in
xchg
sbb
std
adc
inc
mov
sti
aas
test
lahf
and
std
sbb
std
aad
jge
cli
inc
loop
push
or
leave
test
cmp
adc
pop
jb
inc
fistps
mov
adc
xchg
mov
sub
and
add
xor
xor
cmp
nop
aad
or
scas
push
out
mov
and
clc
xor
js
iret
jo
push
es
mov
xlat
mov
inc
insl
cmp
loope
dec
push
roll
jns
add
lret
pop
lret
jae
stos
pop
cli
rol
jnp
leave
repz
test
test
or
sub
mov
dec
cmpsb
js
mov
in
in
mov
sub
mov
jno
les
rcll
punpckhbw
aam
dec
inc
mov
adc
mov
clc
push
sbb
stos
inc
inc
repz
add
add
xor
movsl
push
scas
repz
push
in
mov
shlb
addr16
ja
fxch
add
mov
lock
mov
popf
rcrl
fmul
xor
mov
test
sub
pop
xor
sarl
cmpsb
test
push
jae
jp
dec
mov
pushf
call
scas
insl
mov
lea
or
bound
icebp
add
push
xchg
dec
mov
push
or
enter
cmp
insb
mov
fs
scas
ds
dec
ja
xchg
pop
outsl
add
ss
mov
sbb
push
mov
insl
xchg
dec
in
mov
mov
xchg
cmp
lahf
xchg
aam
ja
fwait
push
scas
hlt
ss
arpl
das
pop
dec
addl
adcl
icebp
loop
adc
sbb
fistl
movsb
fisubs
fnstsw
loop
popf
sti
rcr
loope
add
sbb
test
sub
and
and
jb
ds
add
pop
jnp
insb
fstcw
inc
lock
cmp
pop
lcall
test
popf
dec
mov
jecxz
xchg
shl
lret
cmpb
nop
fsubrs
in
mov
sbb
push
inc
cmpsl
add
sub
jo
popf
iret
shlb
jl
sub
mov
flds
mov
loope
jo
movsb
sbb
flds
movl
inc
fs
and
ret
pop
leave
clc
and
jo
ja
aam
mov
xor
inc
push
and
xchg
gs
sahf
xor
lods
sahf
popa
pushf
cltd
push
lds
sti
xor
cmc
popa
mov
in
push
push
xor
test
repnz
data16
movsl
repz
je
dec
jecxz
sbb
aad
push
inc
jg
or
clc
int3
out
mov
fisubrl
cld
mov
ja
dec
popf
adc
mov
or
pop
and
and
dec
mov
pop
loopne
test
xor
mov
cmp
clc
mov
test
lret
lcall
xor
fdivl
aad
adc
push
inc
ja
ljmp
ss
pop
add
inc
inc
sti
int3
jnp
and
outsl
sbb
out
insl
jae
mov
pop
test
mov
popf
rcrl
std
fs
pusha
fwait
mov
ljmp
mov
test
push
lea
jb
loope
push
je
push
in
enter
jno
rcll
jno
cmpsl
daa
dec
pop
aam
or
cmc
add
jns
jle
adc
sahf
cmp
cmp
dec
sbb
xchg
daa
mov
and
cli
sbb
js
insl
stc
pushf
sbb
idiv
pop
stos
loope
or
jns
ret
add
data16
out
std
fldt
jo
fldl
pop
jne
inc
test
pushf
push
pop
adcb
pop
jmp
pushf
push
nop
icebp
mov
sub
mov
cmp
xchg
jecxz
clc
sbb
mov
xchg
mov
lds
ljmp
leave
jae
sbb
or
fs
push
sbb
push
inc
int3
filds
jbe
jp
sbb
dec
xorb
dec
sbb
ret
or
dec
jl
enter
sub
cmc
test
push
std
push
dec
pusha
push
or
call
pop
cmp
lret
enter
ja
xchg
inc
mov
in
das
jo
addr16
mov
xor
into
xor
jb
xchg
repz
jmp
mov
cmp
xorb
push
mov
and
rcr
nop
add
scas
push
in
sub
cmp
and
das
jb
inc
in
dec
jae
dec
in
inc
jo
ret
mov
sbb
jne
mov
sarl
sbb
push
fdivl
push
scas
mov
xor
xor
movsl
addr16
mov
mov
incl
or
enter
mov
fucomip
push
lods
incl
xchg
mov
xchg
lcall
aam
push
fs
je
or
dec
adc
jns
dec
sub
xchg
ficoms
add
aaa
fwait
imul
push
dec
sub
cmpl
mov
mov
add
mov
loopne
mov
js
cmp
out
mov
pop
lods
xor
dec
shlb
jg
pop
int3
loope
adc
push
push
jle
xor
fwait
mov
and
xor
and
adc
in
sti
cmp
std
sbb
sbb
int
and
pushf
mov
insl
jae
nop
jg
ds
imul
pusha
test
out
dec
push
fwait
in
mov
loop
repnz
inc
sbb
mov
inc
gs
dec
mov
ss
or
cmp
test
pop
ja
add
inc
in
push
rcr
lret
sti
mov
push
enter
jne
xor
rcll
insl
sub
mov
mov
adc
in
push
sbb
push
add
xchg
push
inc
clc
ja
movsb
addr16
mov
inc
cmpsb
push
pop
shl
jl
push
cld
push
cmpsb
push
bnd
pusha
std
and
fdivr
sahf
in
filds
cmp
popa
xor
lock
xchg
je
sbb
jp
or
mov
jne
lcall
add
pushf
pop
jb
sbb
fistl
in
add
subb
jbe
into
push
pop
sub
ljmp
lds
sub
rcll
and
add
sbb
xchg
popa
inc
push
or
mov
xchg
push
inc
ret
sub
push
jo
out
mov
stos
repz
jge
xchg
cltd
popa
imul
xchg
sub
std
cs
xor
xor
pop
or
push
sbb
jno
loopne
inc
hlt
inc
sbb
or
and
enter
xchg
xchg
cmp
hlt
adc
pop
pop
enter
xchg
hlt
in
inc
jp
or
fdivrl
and
scas
arpl
jge
fildl
insb
mov
inc
adc
xlat
sub
or
std
cmp
mov
out
inc
adc
xlat
das
mov
cld
fidivl
sbb
icebp
xor
gs
add
call
and
mov
lods
lret
mov
mov
push
jo
ret
pop
inc
push
jmp
sbb
shll
shrb
ror
dec
inc
andb
stc
mov
hlt
or
imul
dec
adc
push
adc
xor
sti
pushf
mov
push
imul
pop
mov
cmp
cmpsl
mov
cld
out
in
das
jb
out
icebp
fsub
or
add
push
test
lret
aam
pop
shlb
addr16
dec
hlt
outsl
push
mov
xchg
add
sahf
enter
scas
pusha
sub
lahf
lcall
movsl
mov
xor
mov
setge
and
sbb
pop
fistpl
stos
mov
mov
mov
imul
and
sub
enter
dec
repnz
cmpsl
imul
fistpl
cs
pushf
xchg
loop
rcll
mov
xchg
lea
orl
add
adc
jae
add
mov
add
movsb
xchg
movsb
xor
or
insb
fstpt
sti
pop
dec
test
mull
loop
arpl
xor
imulb
cmp
pop
xor
xor
xchg
mov
sbbl
jae
lea
loope
bnd
jnp
mov
sbb
sub
das
sbb
out
rcrl
or
mov
pushf
mov
int
js
inc
pop
in
cmp
sub
test
cmp
mov
pop
push
daa
lcall
divl
pop
pusha
ss
mov
imul
xchg
sbb
fldcw
lret
loopne
dec
pop
and
jae
fcoms
mov
test
adc
nop
mov
arpl
cwtl
cmp
insl
repz
gs
scas
sub
dec
cltd
loop
shlb
jmp
testb
ret
add
xbegin
in
push
aad
addb
or
push
xlat
jle
sub
mov
movsl
mov
xchg
or
in
sti
pop
lahf
fsubl
les
out
pusha
lds
xchg
fdivp
insb
iret
xchg
add
mov
cli
push
jl
hlt
inc
pop
or
scas
aad
aam
adc
or
scas
sub
mov
ja
cmpsl
sbb
fcmovu
jno
fwait
xchg
mov
test
adc
cmpsl
adc
insl
adc
cmp
outsb
loope
mov
sbb
xchg
stos
push
je
jecxz
push
gs
ficomps
mov
sbb
aad
aas
sahf
mov
bound
dec
cmp
pop
jecxz
add
test
sub
fwait
cli
lret
loopne
xor
cmp
xor
or
into
jmp
mov
clc
gs
in
push
xchg
push
dec
out
sbb
and
negb
inc
fcmovnb
andb
inc
scas
sbb
cs
mov
xchg
clc
cwtl
push
jae
data16
inc
cmp
push
cwtl
or
lods
out
mov
xchg
sbb
bts
mov
jle
xor
test
test
inc
inc
icebp
pop
xchg
mov
mov
pop
andl
fcomps
mov
mov
sbb
pop
les
pop
pop
adc
adc
and
and
sarb
enter
aas
int3
fidivrl
lds
loopne
or
jo
sti
mov
pop
cltd
out
xlat
mov
xchg
add
sub
mov
sub
cmp
xchg
orb
adc
pop
repnz
icebp
cmc
jle
cmp
lock
push
pop
mov
iret
push
and
adc
mov
imul
jl
adc
dec
xchg
lret
mov
out
or
and
loop
jmp
popa
push
ljmp
push
mov
cltd
into
lret
insb
iret
cpuid
movsl
pop
ljmp
imul
xchg
jmp
cmpsb
fwait
jnp
je
movsb
dec
dec
mov
sub
clc
idiv
test
ja
mov
shl
mov
or
testb
mov
in
lcall
daa
out
xor
sub
sahf
mov
mov
adc
adc
inc
imul
js
xor
mov
or
mov
inc
mov
fsts
mov
jge
cmp
jne
add
jns
lret
xor
mov
xlat
mov
dec
inc
insl
fs
push
in
push
icebp
push
icebp
mov
subl
sbb
orl
mov
cmp
xor
pusha
into
decb
dec
mov
cli
popa
aad
inc
hlt
xor
ret
xor
push
icebp
adc
dec
inc
adc
sub
je
mov
add
stos
in
push
jne
mov
push
inc
dec
pop
jno
popf
inc
fildll
xchg
jecxz
mov
and
xchg
outsl
xchg
sbb
lahf
push
xor
test
test
cltd
nop
xor
scas
stos
push
jge
std
sub
jns
adc
cmp
in
adc
inc
push
ja
test
push
psubw
out
or
out
push
mov
out
pop
mov
jnp
fwait
xchg
rorb
jbe
ljmp
or
push
es
and
mov
call
jecxz
sub
rcrl
push
movsl
insb
insb
scas
cmp
rcl
sbb
xor
push
pop
add
jno
jae
ret
push
xor
faddl
ror
les
in
lcall
test
adcl
insl
push
es
inc
popa
push
decb
imul
in
in
mov
insb
iret
xchg
cmc
inc
loopne
lret
loopw
into
dec
lcall
loope
sahf
xchg
pop
or
sub
dec
cli
xchg
cmp
iret
add
pop
jno
sbb
pop
aam
cmp
jle
dec
jecxz
inc
sub
clc
pop
mov
orl
jl,pn
dec
dec
lahf
jae
jns
orl
insb
popl
out
push
push
sti
inc
sbb
sarl
lods
shlb
fidivl
fs
mov
xor
lcall
xor
xor
jbe
xchg
mov
test
or
xchg
leave
push
pop
xchg
rolb
inc
inc
push
in
mov
jp
addr16
jae
pop
pop
mov
in
popa
and
and
adc
adc
in
dec
or
sbb
ljmp
cmp
jnp
xchg
pop
xchg
xlat
fbstp
pop
rorl
inc
test
dec
pop
mov
and
arpl
in
stos
jbe
dec
jo
push
pop
dec
pop
sub
mov
scas
push
pushf
inc
imull
rcll
xchg
or
int3
inc
push
iret
gs
mov
popa
jmp
dec
test
insb
cmp
insl
or
mov
pop
mov
popa
jnp
sbb
mov
mov
push
scas
fsubl
ss
lods
cmpsl
jae
xor
pop
leave
imul
popl
inc
pop
sahf
scas
mov
aas
jbe
or
gs
popa
cmc
mulb
inc
cmp
xor
in
pop
dec
lock
repnz
mov
test
jb
push
adc
pop
dec
ds
mov
fbld
sub
loopne
popf
bound
dec
adc
xchg
nop
pop
mov
jmp
mov
in
cld
nop
cmc
xchg
or
pushf
jp
jnp
pop
xchg
push
ljmp
push
stos
pop
lods
flds
mov
mov
jmp
insl
jle
mov
imul
jno
pop
loop
js
ljmp
ds
data16
push
lcall
imul
adc
dec
das
mov
cli
out
mov
or
adc
or
xchg
cmpsb
xorl
jge
sbb
pop
ret
lea
pop
mov
ja
pop
outsb
fdivrs
pushf
fisubrl
mov
dec
sbbl
cwtl
or
push
cs
sbb
mov
xor
mov
sbb
hlt
sub
call
out
ss
shll
aam
add
jmp
into
xor
fnstenv
dec
dec
stos
pop
in
aad
stc
ret
ja
push
push
in
aad
dec
test
mov
enter
fs
add
inc
scas
cmpsb
pop
pop
mov
pushf
xor
int3
dec
pop
fnsave
aaa
lahf
jmp
fs
cli
aas
pop
jae
adc
movl
or
arpl
inc
sarl
ret
sahf
sub
sbb
push
repnz
jnp
sub
in
pop
icebp
pop
jo
mov
test
jg
jg
call
pop
aam
cmp
jnp
leave
or
fdiv
pop
mov
imul
daa
lret
pop
push
inc
dec
mov
mov
mov
lret
add
pop
pop
in
xor
jmp
jo
jne
xor
cmp
lea
dec
dec
in
push
imul
cli
mov
mov
cwtl
sahf
movsb
loop
cmp
lods
and
jge
xchg
cmp
repz
pop
int
sbb
push
stos
test
add
aam
push
int3
and
pop
unpckhps
fmulp
jae
pop
and
pop
in
mov
mov
in
in
lods
shlb
cmc
jecxz
ret
dec
dec
xor
mov
paddd
jmp
cmp
in
or
dec
loop
jl
add
int
in
sub
xchg
fildll
gs
int
test
aas
pusha
aad
xor
sahf
les
cmp
ljmp
cwtl
data16
loop
inc
dec
mov
jne
jo
lods
inc
xorb
add
out
fsubrs
and
cmp
cmpsl
lods
imul
xchg
mov
loop
std
sarb
sub
cmp
in
fildll
xchg
xorl
ret
adc
mov
sbb
mov
test
mov
cmp
arpl
dec
or
pop
je
fwait
jge
lock
xor
gs
into
loopne
pop
adc
jg
xor
dec
mov
mov
ror
mov
fldt
and
loope
enter
stos
lret
mov
push
dec
arpl
outsl
push
scas
push
inc
in
sbb
xchg
shll
sub
repz
xchg
inc
pop
pop
addr16
insb
mov
xor
aad
adc
enter
mov
and
sub
fsubl
loop
dec
dec
sahf
or
pop
push
mov
movsb
or
ss
loopne
adc
sbb
sub
xchg
int3
mov
movsb
xchg
cs
jmp
push
repnz
in
data16
test
push
xor
push
fmul
nop
pop
or
test
push
mov
sbb
lahf
sub
scas
adc
call
mov
insl
and
daa
pop
loop
mov
out
in
popl
ljmp
pop
mov
push
cmp
and
xchg
cmpl
push
pop
pop
das
lods
or
mov
repz
xchg
dec
xchg
loop
pop
pop
cmp
je
cmc
pop
jno
out
cwtl
pop
inc
pop
scas
sbb
or
int3
fisubl
add
rcr
dec
lcall
cld
or
adc
xchg
mov
xlat
repz
mov
lcall
in
ret
std
xchg
pop
adc
cmp
int
imul
fwait
jl
test
jb
aad
mov
push
push
in
sub
sub
mov
sbb
in
cs
push
mov
lcall
sub
inc
adcb
in
sub
je
mov
hlt
arpl
mov
bound
out
test
mov
xor
scas
or
loopne
inc
dec
adc
movsb
xchg
ret
inc
push
in
lods
adc
fcoml
push
fcmovnbe
push
clc
fnstsw
dec
pop
loop
inc
mov
pop
loopne
jb
mov
jae
jo
jecxz
push
or
inc
test
fs
aas
arpl
sbb
stos
jmp
jecxz
push
ds
ret
mov
jbe
or
ljmp
cmp
mov
cmp
roll
jno
sub
pop
rcll
movsl
repnz
mov
inc
data16
pop
pop
outsl
jmp
test
mov
jns
or
out
std
dec
cmp
nop
pop
cs
clc
mov
adc
pop
fiadds
push
cmc
movsl
lods
out
mov
jl
into
fildll
inc
es
mov
inc
ds
lods
outsl
sbb
outsl
pop
add
mov
leave
jle
dec
pop
push
sub
les
jbe
mov
mov
xchg
push
fucomi
sbb
inc
enter
ds
jg
fidivrl
pop
xchg
pop
pop
xor
cld
adc
js
xchg
fildll
mov
jge
cmp
mov
or
inc
daa
mov
and
pop
idivb
outsl
fistps
xor
aas
ds
sub
sub
mov
push
popa
gs
jo
rcr
sub
mov
dec
jbe
inc
push
xchg
jb
push
pop
aad
pushf
mov
lods
pop
push
mov
xor
dec
sbb
fidivrs
bound
cmp
push
stos
loope
mov
sub
ja
insl
stc
xor
test
mov
cwtl
sbb
xchg
push
pop
mov
mov
fmuls
repz
push
hlt
jne
mov
sbb
jmp
pop
imul
rcrb
icebp
mov
faddp
jg
pop
add
pop
push
push
orl
mov
add
xchg
xchg
mov
lea
lds
jl
sub
add
pop
lret
fldcw
sub
nop
mov
stc
fmul
cmp
add
dec
mov
repz
sbb
jg
stc
sub
mov
data16
mov
cmpsb
aaa
rcll
shrl
mov
enter
leave
call
insb
dec
push
cs
aaa
cmp
mov
out
xor
ret
mov
sub
sub
lods
scas
mov
xchg
add
aaa
xchg
adc
or
andb
push
dec
mov
loopne
arpl
test
xchg
add
int
xchg
and
xchg
sbb
mov
push
jmp
mov
gs
jbe
or
push
lcall
repz
int
ss
ljmp
clc
sbb
inc
sbbb
leave
test
popf
sbb
xchg
stos
js
outsb
movl
cwtl
pushf
fmul
out
pushf
push
loop
xor
sahf
sub
sub
outsl
es
aas
mov
xorb
pop
add
sub
stos
inc
popf
sarb
daa
sbb
lea
sub
mov
rolb
mul
std
leave
sbb
lock
out
dec
inc
dec
pop
cwtl
cmp
push
inc
ss
scas
ret
hlt
shrl
es
repz
push
mov
adc
ret
xlat
mov
test
or
push
lods
or
divb
push
pop
repz
cmp
fs
sarl
imul
add
loopne
bound
mov
jp,pn
cwtl
jecxz
das
popf
add
mov
inc
ds
iret
imul
and
add
idivl
jno
sbb
les
out
mov
jae
jg
shlb
jnp
cmp
xor
xchg
imul
xchg
shlb
and
lahf
cmpsl
sub
dec
pop
decl
inc
loope
sbb
je
int
fdiv
outsb
leave
jo
imul
fwait
pop
mov
movsl
mov
das
popf
stos
and
mov
lret
cmpsb
xchg
jl
jne
popf
xchg
inc
repnz
jbe
sbb
gs
inc
dec
es
test
icebp
fldl
mov
jae
cltd
inc
hlt
mov
pop
inc
data16
fs
cmpsl
add
lods
icebp
popa
outsb
out
cmpl
in
test
lds
divb
dec
add
mov
xlat
out
addr16
test
je
mov
rol
stc
mov
add
popf
xchg
push
or
xchg
inc
jl
adc
and
call
jl
es
xor
cmp
push
pusha
inc
cmp
outsb
sub
repz
xchg
inc
les
popa
es
test
pop
test
cmp
sbb
in
jecxz
outsl
out
imul
rorl
jl
cmp
sbb
daa
sbb
in
es
sub
test
jnp
xorl
sti
mov
mov
clc
pop
fldenv
sub
or
or
out
sub
xchg
or
sub
lcall
sahf
jge
dec
xchg
repz
outsb
fimuls
ja
pop
cmp
rdpmc
xor
add
out
ret
movsb
xor
push
adc
mov
popf
mov
xchg
mov
rcrb
pusha
pop
data16
fsub
xchg
cmp
mov
test
adc
fildl
stos
push
lods
sub
test
mov
rorb
and
rcll
or
subl
sub
add
sub
mov
pushf
cmc
jl
insb
and
mov
daa
movsl
or
xor
rcl
les
lcall
cwtl
inc
in
cmp
clc
imul
int3
push
mov
scas
jb
fsubs
add
adc
dec
mov
mov
sub
outsb
pmaddwd
inc
mov
lcall
and
jne
pop
jns
sti
enter
lret
jns
push
int
flds
popf
xlat
push
adc
sahf
dec
and
shrl
cli
push
cwtl
jg
clc
loope
mov
push
mov
es
jg
adc
mov
mov
and
fwait
push
movsb
ljmp
jb
xor
cmp
sub
ljmp
push
icebp
pop
mov
jae
jns
popa
mov
std
mov
hlt
xor
icebp
test
mov
and
dec
add
ret
or
add
mov
lret
cld
cmpsb
cmp
xchg
cmc
fcompl
mov
out
sub
inc
pop
and
out
or
mov
xor
arpl
push
call
out
xor
icebp
push
push
test
sbb
sub
hlt
and
dec
cmc
xor
cmpb
ljmp
cltd
loope
sbb
fwait
jne
pop
mov
cmc
sti
stc
pop
push
nop
jecxz
clc
lahf
cmp
mov
mov
inc
nop
stos
or
push
stos
pop
lret
cs
std
icebp
dec
or
sbb
in
xor
pop
xchg
shlb
sub
les
std
mov
int
imul
add
mov
lock
cmpb
mov
lahf
and
cli
and
mov
loope
or
cmp
es
bound
sti
dec
inc
jbe
idivl
dec
dec
stos
dec
incb
stos
lret
dec
jmp
mov
and
mov
movsb
jne,pn
push
int3
movsb
push
xchg
pusha
push
cwtl
aam
mov
fisubs
xor
in
out
sub
aam
xchg
jae
xchg
lds
sub
push
fimull
add
dec
ljmp
outsl
xchg
jmp
std
jae
outsb
mov
cltd
aaa
ret
stos
lea
jne
arpl
ja
xor
push
adc
lods
dec
jg
add
mov
pop
cmp
jne
mov
mov
cli
xor
add
or
adc
pop
out
mov
ja
stos
fldl
lea
sub
sbb
mov
pop
push
inc
push
stos
xchg
test
jle
push
jg
dec
dec
adc
sbb
inc
imul
mov
mov
mov
add
sbb
or
scas
mov
jne
pop
rcr
adc
out
jo
jbe
xlat
push
lcall
je
and
lret
lret
lret
mov
cmpsb
push
popf
adc
and
lea
cmp
mov
jle
xlat
rcrl
sahf
cmp
xor
pop
iret
sub
sub
outsb
sahf
or
aam
mov
decl
dec
xor
xor
pop
jg
mov
inc
iret
jb
adcb
ds
std
add
cmc
movsb
sub
and
inc
je
pop
dec
push
or
neg
push
shlb
xchg
imul
or
jg
xor
jg
data16
sub
jge
movsl
xchg
mov
push
mov
jg
aam
jg
jg
inc
push
mov
es
adc
call
je
jae
getsec
loopne
and
insb
scas
push
cmp
movsb
mov
jo
mov
mov
mov
mov
mov
inc
dec
or
push
lds
xchg
bound
dec
ret
push
pop
push
jns
sub
mov
outsl
fs
sbb
xchg
ret
stos
aad
adc
jo
sbb
jp
pop
out
or
and
adc
sub
scas
inc
pushf
push
lock
cmp
sub
cltd
out
dec
pop
stos
stos
xor
decb
sub
push
sub
lcall
cmp
or
jmp
movsl
mov
inc
daa
and
and
pusha
xchg
int
mov
fnstcw
mov
roll
mov
push
bound
scas
jmp
xchg
cli
lods
aaa
inc
adc
bound
sbb
jmp
sbbl
out
js
hlt
jbe
adc
jp
sub
repnz
and
mov
mov
adc
fwait
mov
lcall
sbb
mov
xor
or
dec
or
sbb
mov
lcall
pop
xor
xor
shll
ret
cmpl
lods
das
add
adc
movb
dec
mov
dec
and
sub
ljmp
xchg
xor
adc
inc
and
ror
cmc
xor
mov
stos
dec
popa
test
push
push
ljmp
incb
push
push
sbb
dec
dec
es
push
mov
mov
addr16
xor
ljmp
pop
sub
leave
sub
imull
push
adc
sbb
push
insb
loopne
mov
adc
enter
stc
inc
push
pop
mov
movsl
push
and
cld
bound
inc
sbbl
sbb
mov
daa
ret
mov
push
jne
shlb
lds
mov
fmuls
imul
test
xchg
sbb
mov
mov
cmp
push
xlat
push
out
or
xchg
jne
push
mov
loopne
mov
jns
mov
test
shr
flds
inc
mov
jns
lods
xchg
cmp
inc
lods
mov
sub
daa
out
stos
push
push
rorb
pop
sbbl
call
or
aad
in
jge
clc
leave
mov
cmpsb
insw
in
jns
movb
out
repz
cli
insb
call
adc
ret
sub
pop
inc
sub
inc
stos
test
or
mov
inc
or
sti
adc
aas
jl
enter
ret
push
dec
rorb
inc
jge
gs
pop
adc
imul
push
mov
scas
addr16
insb
jle
ds
and
sub
repnz
adc
lea
or
shlb
mov
cmp
outsl
pop
shl
rolb
in
push
inc
lcall
mov
ret
adc
cmp
mov
fistpl
cmp
push
adc
dec
fstps
dec
cwtl
shl
mov
test
retw
sbb
mov
repnz
jg
lea
mov
push
scas
es
push
imul
xor
jmp
and
mov
fnsave
xchg
insl
add
adc
push
inc
adc
dec
xchg
int
inc
mov
fcmovnb
lea
fs
aas
lret
lock
add
in
mov
push
jg
imul
leave
pop
mov
aam
push
and
shll
cmpsl
sub
and
mov
add
jp
xor
into
add
lds
jle
aas
lret
xchg
adc
insl
push
popf
add
fldcw
xchg
mov
sub
cwtl
push
add
icebp
rcr
lret
int
mov
cs
ud1
ret
pop
and
hlt
test
in
insl
leave
jecxz
jno
pop
sub
lcall
xor
lret
sub
pop
cs
push
add
inc
adc
repz
jecxz
fcomp
hlt
cmp
aad
xor
mov
fisubrl
push
gs
pop
loopne
and
sbb
rcll
push
loop
push
jle
push
dec
push
daa
and
cmc
pop
cmp
aad
sbb
ljmp
dec
push
test
in
cs
and
jp
dec
cltd
js
shll
mov
mov
cmp
pop
ss
dec
sarl
les
nop
dec
or
push
mov
sub
stc
roll
mov
sbb
hlt
mov
lods
aad
mov
sub
mov
outsl
push
lock
shrl
xor
add
fcomip
xchg
jecxz
jmp
lcall
jo
sub
push
decb
in
add
inc
repnz
sbb
xchg
imul
lahf
sub
popf
orb
imul
incb
sbb
leave
movsl
add
leave
sbb
rol
add
push
int3
push
nop
mov
ret
mov
into
lcall
sub
test
scas
fs
add
push
std
sti
fst
sbb
andb
cmp
fs
js
pop
dec
mov
xchg
xchg
push
cli
rorb
js
sub
push
xor
out
cmp
pop
mov
jbe
sbb
sub
pop
or
sbb
push
jmp
popf
and
xchg
xor
dec
or
adc
test
cmpl
les
imul
shlb
loopne
popa
enter
imul
test
add
addr16
sbb
xchg
pop
sub
xor
mov
pop
imul
xor
test
and
adc
mov
rcr
cmp
bound
div
loopne
loope
add
or
inc
dec
into
pop
ljmp
mov
lcall
outsl
xlat
inc
inc
pop
lea
adc
jl
mov
cmp
cltd
mov
movsb
push
popf
lcall
mov
push
dec
les
ss
test
movl
mov
push
nop
gs
mov
notl
mov
mov
popf
fldenv
dec
inc
in
add
lret
sbb
rolb
inc
mov
cmp
les
jmp
enter
mov
out
scas
pusha
jmp
fistpl
push
sub
dec
mov
cmp
sti
pop
cld
mov
sub
leave
inc
adc
ficomps
ss
out
dec
cmc
imul
subb
mov
into
mov
inc
mov
jb
ret
mov
xchg
mov
jae
jl
icebp
fsts
inc
and
sbb
inc
mov
out
add
vmaxpd
shll
sbb
mov
fisttps
dec
jg
push
mov
sub
movsb
add
mov
sar
rorl
fists
jne
roll
mov
add
movsb
arpl
push
push
mov
dec
lds
cmp
fdiv
pop
cmp
or
jg
std
fstps
xchg
jecxz
xchg
cmpsb
lods
gs
mov
fists
xchg
sbb
or
add
cmp
call
cmc
jge
inc
or
paddsb
mov
fcomp
nop
mov
stos
loop
cmpsl
jl
inc
xlat
mov
sti
cwtl
jns
mov
aam
hlt
xchg
push
jp
jae
mov
aaa
push
jp
pop
jmp
pop
js
leave
enter
ja
xchg
jbe
shlb
bound
adc
sub
cmpl
or
push
jp
inc
mov
aaa
pop
inc
xlat
loopne
push
dec
adc
shll
jae
jmp
insb
or
subl
cmpb
sarl
fsub
cwtl
mov
xchg
ja
pop
loopne
notb
divl
inc
pop
mov
cmp
movsb
pop
aam
test
outsl
inc
mov
pop
jbe
ljmp
mov
xchg
icebp
push
icebp
jge
xorb
and
cmp
lock
pop
adc
xor
daa
cmp
sbb
mov
push
mov
pop
cmp
push
mov
clc
inc
jnp
xor
test
jno
push
outsb
jmp
outsl
int
div
aaa
or
outsl
xor
cmp
xchg
adc
cmp
test
xchg
fbld
daa
cmp
add
xchg
sbb
mov
out
and
daa
lods
loop
and
pop
movsb
pop
push
inc
dec
sub
push
mov
fmul
or
cmp
or
addl
ret
pop
shll
xchg
fs
inc
mov
imul
cmp
xchg
popa
pop
push
xchg
adc
cmp
cmp
test
cmpsb
adc
and
and
jnp
aaa
add
xchg
xlat
sbb
add
inc
mov
aas
sti
sub
xor
repz
push
pop
xor
mov
cwtl
aam
jnp
or
fmull
sub
mov
push
sbb
test
in
outsb
sbb
ret
in
inc
lret
mov
xlat
pushf
mov
pop
jo
cmp
jb
sub
pop
scas
ret
or
pop
pop
mov
cmpsl
movsl
test
je
sbb
xlat
les
xor
inc
loopne
adc
aam
lods
aad
add
push
and
fs
add
ja
insb
rorl
and
aad
lret
adc
cmp
bound
icebp
inc
lcall
and
dec
fmuls
jecxz
mov
repz
cli
popa
jmp
lahf
pusha
inc
jl
fiadds
out
cltd
mov
xor
test
iret
test
nop
ljmp
inc
mov
les
cs
arpl
fcomps
dec
adc
enter
add
out
mov
jne
je
xor
cmpsb
or
or
filds
pop
stos
or
or
xor
pop
xchg
inc
int
mov
adc
push
cmp
cmp
cli
aam
adc
fs
dec
push
mov
les
nop
inc
mov
xchg
mov
dec
or
add
in
inc
xor
popa
out
rcrl
js
adc
je
les
adcb
dec
mov
push
mov
repnz
pop
mov
inc
movsb
push
mov
fisubl
adc
out
stos
nopl
sbb
jl
lock
aas
mov
popf
scas
mov
sub
negb
xchg
cmp
gs
addr16
test
xchg
leave
nop
inc
js
pusha
add
fisttpl
test
push
aaa
and
add
xchg
add
out
fmuls
sub
pushl
push
dec
dec
xor
pop
roll
mov
cli
andb
pop
js
das
inc
dec
andl
cmp
inc
inc
shll
movsl
fdiv
inc
sbb
mov
lret
ds
mov
mov
aaa
ja
jo
and
out
enter
sbb
cmp
jecxz
imul
outsl
push
scas
mov
andl
mov
lret
aad
fiadds
xchg
dec
sbb
add
adc
rol
pop
dec
sar
mov
sub
or
lea
dec
push
test
aas
lods
xor
pop
pop
das
jp
pop
xor
jge
popa
jae
lds
push
aam
jecxz
xchg
repz
xor
mov
jo
lcall
jecxz
inc
bound
xor
sbb
adc
fdivrl
fcoms
jae
aad
in
mov
add
in
cmp
mov
dec
shl
sub
or
jge
jb
ljmp
shll
imul
mov
jb
pop
xchg
movsb
cmp
pop
ficoms
aas
adc
mov
out
fisubrs
cli
sbb
mov
test
lods
lods
repnz
jae
jge
popa
inc
mov
sbb
call
xor
dec
fsubrl
sub
int
notl
shrb
lods
fnsave
xchg
lds
xchg
mov
decb
sub
fsubl
out
andl
dec
jmp
mov
sarl
cmc
push
xchg
mov
mov
test
push
and
pop
inc
inc
inc
aas
mov
shll
sub
push
push
rclb
cli
inc
jmp
xchg
pop
sub
pop
addr16
shr
xchg
adc
pop
aad
mov
sub
mov
mov
js
outsl
adc
mov
stos
aad
ljmp
jne
dec
xchg
xchg
cmpl
cs
or
addr16
push
hlt
pop
xchg
dec
push
mov
loope
insl
adc
into
and
test
pop
dec
popf
jbe
adc
inc
xchg
push
mov
dec
xor
add
cmpsb
and
rcl
loopne
inc
adc
sbb
loopne
lods
scas
movsb
ret
push
jle
es
pop
xor
jl
push
cwtl
scas
mov
inc
xchg
push
pop
dec
mov
pop
inc
cld
dec
jmp
or
notl
cmp
rcrl
sub
mov
inc
xchg
gs
stos
mov
mov
add
fldcw
mov
popf
jge
mov
movsl
mov
jg
adc
inc
sbb
lcall
sub
mov
mov
jo
test
mov
faddl
and
fldcw
cmpsl
push
and
pop
cwtl
add
mov
inc
xchg
arpl
adc
das
sti
repnz
les
xchg
dec
pop
cmp
mov
iret
mov
and
add
adc
cmp
mov
xor
out
dec
fistl
adc
add
aam
sarl
aad
loop
stc
cmpsl
decl
push
out
clc
or
imul
push
notb
or
icebp
xchg
adc
pop
pop
mov
sbb
repnz
push
jecxz
enter
jge
mov
fbstp
jmp
mov
jecxz
lcall
lock
sbb
and
scas
sub
stos
aam
dec
sub
shl
xchg
jmp
out
pop
aas
xchg
js,pn
mov
sub
mov
mov
test
gs
cmp
and
mov
lds
imul
sub
int3
sahf
negl
pop
aam
scas
inc
jl
push
or
imul
xchg
pop
push
push
popf
xchg
ljmp
cmp
outsl
pop
pusha
sbb
arpl
sub
sub
arpl
lds
pushf
xor
push
sub
mov
mov
mov
rolb
jge
add
mov
add
pop
das
test
test
outsb
pop
outsb
mov
xor
add
sub
inc
pop
pop
mov
sbb
repz
std
jno
mov
add
out
test
daa
mov
xor
xor
arpl
ret
xchg
and
pop
cli
pop
sub
jp
fisubs
cltd
sub
fs
pushf
fisttpll
das
jmp
adc
mov
int
xchg
es
movsb
mov
jb
dec
hlt
xchg
mov
insl
lods
mov
mov
nop
push
or
shrl
lret
push
js
js
pusha
or
sbb
jne
repnz
mov
ds
add
test
pop
ds
test
mov
lcall
xor
mov
jp
insl
pop
lcall
mov
xor
push
stos
into
sbb
pop
or
inc
mov
popf
mov
xor
pusha
fwait
popa
stos
xchg
jno
mov
ds
sub
movsb
int3
sarl
xchg
lahf
in
or
pop
lret
das
arpl
sahf
out
and
mov
stos
out
shll
hlt
inc
pop
stos
mov
push
mov
out
scas
ss
fsubs
add
pop
mov
ficomps
adc
lods
leave
push
sbb
dec
jmp
jp
xchg
adc
push
jae
rcrb
shrb
or
in
gs
aas
mov
idivl
mov
cmpsl
lret
aam
jl
cmc
xor
and
sub
sbb
je
or
mull
sub
push
inc
fs
inc
mov
dec
adc
or
mov
sub
mov
cwtl
mov
jp
sub
fdivl
sub
inc
fsts
or
push
push
in
and
js
shlb
or
jnp
call
mov
dec
ss
push
pmaxsw
iret
ljmp
aas
dec
dec
jecxz
jno
inc
push
loope
pop
pop
imul
test
mov
dec
xlat
je
sub
test
xor
xchg
repnz
int
inc
xor
cmpl
or
jae
pushf
std
or
xchg
jmp
sbb
stos
es
sti
dec
movsl
adc
sbb
ljmp
pop
test
sbb
repnz
jo
pop
lea
daa
test
push
mov
out
hlt
ss
out
add
mov
cmpsl
sub
repnz
clc
pop
loope
insb
pop
out
jp
mulb
jmp
pop
push
mov
jb
popl
push
mov
fcmove
mov
pop
cmp
daa
movsw
cmp
xor
sarb
pop
pop
movl
sub
sahf
movsb
into
popf
jl
cmc
mov
ljmp
or
cli
sar
sub
sub
inc
jmp
xchg
xchg
mov
jmp
jle
add
sub
dec
jne
insl
outsb
dec
int3
cmp
push
cmp
and
cmp
out
mov
cmp
lock
add
int
movsb
adc
push
mov
mov
stos
mov
and
jnp
lods
outsl
inc
pushf
adc
sub
andb
out
cmc
in
adc
jmp
inc
jnp
fisttps
cmpsb
aaa
mov
jns
mov
mov
sub
and
push
pop
push
cmp
inc
outsl
lret
xchg
les
mov
pop
adc
push
push
fcomps
xor
pushf
or
xor
adc
mov
rclb
sub
pop
js
nop
stos
mov
sbb
lret
adc
mov
sub
lock
push
or
add
insb
cmp
hlt
push
inc
pop
shlb
push
pop
sub
into
add
and
or
inc
mov
gs
cld
rcl
pop
xor
idivl
movsb
sbb
ret
addr16
pop
ss
add
pop
daa
xor
fcoms
inc
data16
xor
insb
mov
bound
lahf
into
call
pop
mov
adc
hlt
and
push
mov
mov
or
lea
ret
cvtpi2ps
outsl
mov
cmp
push
push
sti
xor
cmpsl
jns
aaa
jecxz
push
jnp
leave
and
int
inc
cmp
aas
mov
popf
in
stc
mov
jg
mov
xchg
loop
mov
xor
cmp
popw
cmp
jg
jle
cmp
push
mov
mov
flds
pop
pop
insb
out
out
dec
mov
and
cmp
lahf
int
and
movsb
lods
xchg
xchg
jecxz
mov
cmp
popa
cmp
cmp
fs
jp
test
addr16
outsb
jle
lcall
xor
in
mov
test
push
push
sbb
mull
xor
pop
sub
fwait
dec
xchg
pusha
and
mov
xchg
test
sbb
fs
or
and
clc
mov
jmp
sbb
xchg
movsb
popf
inc
pop
mov
iret
jp
lock
arpl
pop
lea
mov
fidivs
jae
fldl2t
les
jne
pop
pusha
cmp
stos
cld
inc
enter
out
mov
in
pop
sbb
repnz
jp
pop
pop
lds
movsb
sbb
fistpll
pop
jecxz
or
sub
divb
or
xchg
push
sub
inc
xor
xchg
into
or
int
and
lods
pop
add
push
push
mov
and
cs
test
and
in
jle
das
add
xorb
ja
inc
stos
outsb
mov
in
push
and
inc
subb
lods
repnz
dec
std
stos
xchg
loop
orl
cmpsl
mov
call
repz
or
mov
ds
les
lea
cmpsl
fdivp
xorl
imul
jo
pop
and
dec
dec
push
push
loope
mov
mov
bound
inc
cld
jle
inc
xchg
mov
adc
arpl
decw
cld
xor
adc
ret
flds
ljmp
jae
sbb
test
in
pop
rclb
sarl
jnp
in
cmp
push
dec
sbb
add
sbb
fdivrl
aad
test
out
mov
pop
push
pop
push
adcb
push
mov
cmc
fwait
mov
addl
aam
push
insl
xchg
add
or
sbb
fistps
mov
cmpsb
out
jge
mov
sbb
mov
mov
mov
or
sbb
fimull
push
stos
mov
icebp
mov
xor
fiadds
ret
pusha
pushf
xchg
inc
cmpsb
pop
xchg
pusha
xchg
mov
mov
lods
scas
rol
cmpsb
jge
das
xlat
xor
aas
xchg
dec
fbstp
mov
pusha
sbb
out
xchg
cltd
inc
fmul
cmpsb
call
fs
or
adc
sbb
ret
xor
adc
jne
mov
jecxz
scas
lahf
cmpsb
inc
cmp
and
mov
shll
push
and
dec
dec
jmp
imul
jb
adc
xorl
push
in
push
mov
adc
jbe
xlat
sub
insl
add
push
outsl
add
scas
jbe
test
into
es
inc
and
out
sub
or
ficomps
sar
push
in
dec
insl
divl
je
dec
sub
adc
sbb
clc
jb
lcall
icebp
cs
push
fs
into
cmp
push
pusha
addl
cs
orb
mov
dec
or
xor
scas
ja
push
mov
js
lret
sub
jmp
dec
sub
pop
cmp
lods
sbb
xchg
decb
adc
push
ja
push
int
push
shl
pop
xor
les
fs
mov
aam
cmp
aas
adc
mov
inc
jge
ret
movsl
or
jae
xchg
call
fidivl
pxor
mov
lret
rol
mov
cmpsl
xchg
cmp
loope
movd
icebp
fidivs
imul
add
ss
and
mov
rclb
push
testl
mov
mov
daa
xlat
adc
mov
xor
cmp
xchg
add
cwtl
xchg
leave
das
in
mov
int3
scas
andl
sti
jb
shlb
test
cmp
pop
dec
movsb
add
ja
repnz
or
mov
sub
sarb
sub
jo
jno
mov
adc
jae
add
bound
xchg
sbb
and
into
push
nop
push
pop
shl
popa
iret
and
sbb
lea
int3
flds
imul
andl
xor
rcrl
sub
mov
mov
ljmp
sbb
dec
repnz
aad
ret
lret
out
cmpsl
sub
sbb
cmp
andl
cltd
stc
movsb
mov
ja
cmp
out
sbb
dec
fsub
mov
inc
xchg
dec
mov
in
push
pop
pop
and
fnstcw
sub
sarl
pop
cmc
sti
xchg
inc
fdivr
mov
scas
cmp
sbb
fisttpl
test
jmp
outsl
int
and
push
push
icebp
pop
mov
fimull
outsl
in
call
sub
lods
adc
pop
and
cmpsl
icebp
mov
mov
in
pushf
cmp
xor
xor
mov
or
in
lret
xchg
xchg
push
pop
pop
adc
sub
cwtl
mov
push
rcrb
push
sbb
ret
add
xor
scas
jge
push
lods
xchg
mov
and
inc
push
pop
movsl
pushf
or
lret
xor
fwait
lock
xchg
push
lea
pop
fwait
and
in
negb
mov
icebp
stos
add
cltd
leave
test
dec
add
and
xchg
inc
and
mov
jmp
xchg
sub
clc
inc
jl
xor
fcoml
aad
cmp
out
push
pushw
mov
aas
sub
adc
stc
dec
mov
fsubs
lretw
adc
pop
add
xchg
dec
lods
or
xchg
test
sub
push
test
mov
push
stos
ret
add
sub
inc
outsb
cld
fists
mov
mov
dec
lds
repz
addr16
push
dec
pop
leave
fbld
dec
add
pushf
rcrl
add
mov
sbb
dec
int3
jo
lods
pop
jecxz
sbb
xor
pop
aam
and
popa
push
adc
or
hlt
test
dec
lcall
add
xchg
and
in
inc
sub
aam
fdivr
jns
sub
stc
xor
ds
lds
jb
xor
fs
cmp
or
and
push
mov
shl
mov
int
adc
mov
negl
frstor
push
push
pop
push
jle
mov
pusha
orb
pop
ret
push
out
pop
loop
cmp
adc
inc
mov
aam
sbb
sub
stos
adc
xor
enter
mov
xor
out
icebp
adc
push
mov
pop
push
add
inc
notl
movsl
cltd
push
cmp
imul
and
cmc
fs
ret
sti
jge
xorb
xchg
mov
mov
das
addl
jnp
xchg
icebp
addr16
repz
and
and
pusha
push
movsb
dec
mov
test
rcr
negb
add
outsl
ret
addr16
xlat
insb
push
stos
loope
xchg
dec
add
loope
jmp
pop
fisubrl
fcompl
ficompl
loopne
xchg
mov
mov
xchg
daa
hlt
jns
add
testl
and
leave
sti
push
inc
nop
fbld
outsb
leave
lahf
pop
jle
js
test
out
aad
repnz
sub
mov
and
sub
and
mov
cmp
push
sub
inc
adc
dec
mov
es
aaa
inc
or
mov
and
lea
adc
or
sub
sti
loopne
sbb
cmp
mov
in
sbb
lahf
jns
sbb
push
xor
lock
out
scas
lods
ffree
or
sti
inc
fwait
dec
xor
roll
dec
xchg
lds
fnsave
stos
xchg
outsl
icebp
addr16
cmp
inc
ljmp
in
jge
daa
jge
add
movsl
pop
adc
dec
or
in
inc
cwtl
xor
push
push
ljmp
test
cmpsb
inc
sahf
call
cmp
je,pt
bnd
xchg
xchg
jnp
movb
lods
jne
test
jmp
add
in
aas
mov
pop
push
lcall
xor
es
sub
mov
dec
pop
sarl
sub
pop
popl
stos
cmp
jl
dec
pop
dec
es
outsb
inc
pusha
lcall
imul
ret
pop
push
lret
cli
mov
push
mov
sub
mov
hlt
mov
mov
pushf
out
inc
pop
jp
stos
bound
mov
cmc
je
pop
and
or
push
leave
insb
imul
mov
lret
xchg
loopne
lock
mov
loop
pop
dec
in
in
loop
add
je
jns
adc
and
jl,pn
add
pusha
scas
enter
jne
xchg
mov
les
mov
mov
mov
int3
es
test
xchg
and
add
sub
jmp
mov
and
dec
jns
cltd
iret
addb
lret
jg
pop
push
jmp
je
inc
jle
adcl
xor
stos
mov
cmp
or
push
mov
pop
dec
cmp
and
and
jecxz
adc
movsb
xchg
lds
jno
lahf
pop
mov
pusha
add
ret
pop
outsb
jne
aaa
outsb
arpl
cs
cmpsb
cmpsl
xor
sub
pop
push
jge
stos
and
aas
inc
ds
aad
xor
lods
repnz
xchg
shl
mov
jg
mov
push
mov
adc
pop
push
pop
jl
aam
lock
jo
push
nop
movsl
aam
push
test
jp
jbe
and
push
push
clc
mov
push
push
pop
outsb
test
into
aad
jno
into
mov
dec
sub
mov
mov
into
jmp
mov
pushf
subb
push
inc
inc
mov
or
sahf
add
test
lret
xor
mov
leave
jle
mov
in
fcoms
mov
nop
rorb
push
xor
xor
cmp
push
mov
jp
cmc
in
rcl
mov
cmp
pop
cltd
mov
or
inc
aam
ljmp
inc
mov
add
iret
xlat
cmp
repnz
jo
fmull
fwait
je
xchg
test
jb
sub
or
fwait
inc
mulb
insl
ffreep
xchg
or
cmp
jb
in
in
xor
jp
pop
stos
inc
cmp
push
add
ds
pusha
sub
pop
cmp
inc
push
dec
ret
dec
fs
in
add
scas
mov
les
out
dec
inc
jne
add
in
mov
cli
pop
lods
add
push
insl
jmp
and
cmp
rclb
mov
pop
ja
sti
orl
mov
push
lret
hlt
cs
jl
jmp
sub
lret
or
hlt
xlat
inc
lods
mov
lcall
xchg
push
pop
fdivp
xlat
cld
jb
cwtl
addr16
xchg
scas
or
inc
sbbb
addr16
call
pop
shr
roll
ljmp
psllw
adc
sbb
pop
test
cmp
ret
pop
and
push
mov
in
mov
push
sbb
pop
inc
hlt
mov
mov
imul
out
loopne
inc
call
sbb
and
rorl
adc
jl
sbb
and
xchg
mov
cmp
jns
aam
jmp
inc
ja
cmp
and
adc
xor
xchg
sarb
imull
or
cmp
out
fsts
loope
cmp
push
or
loope
dec
test
in
incl
sbb
aam
mov
insl
dec
mov
lret
push
cld
clc
jnp
sbb
mov
push
mov
fptan
xor
std
pusha
and
inc
mov
mov
movsl
js
outsl
lcall
adc
in
push
xor
in
cmp
pop
add
mov
lods
xlat
pushl
ficomps
lods
in
xor
adc
or
repnz
test
xor
xlat
mov
outsb
ds
aas
inc
xor
pop
jbe
int3
bnd
imul
jne
repz
xor
push
or
out
push
sbb
add
push
push
jecxz
add
lods
cmp
inc
inc
mov
push
sub
push
cmp
test
dec
pop
ds
jg
psubq
inc
push
xchg
aas
push
test
pop
fcoms
je
mov
xor
insl
xor
jne
inc
cli
dec
fildll
pusha
jns
scas
add
shlb
out
test
dec
push
je
sub
mov
mov
in
pop
mov
jl
adc
outsl
sahf
jmp
fldenv
fnsave
in
in
add
sbb
sub
cmp
dec
insb
ret
xor
addr16
cs
out
xlat
xchg
push
clc
es
es
jno
push
lods
mov
fisubs
std
jl
cmp
inc
inc
dec
pop
subl
xchg
addps
mov
push
sub
jbe
sti
dec
inc
or
sub
xchg
add
cltd
xchg
mov
inc
popa
out
ficompl
movsb
cltd
jecxz
jl
jne
jg
dec
jne
call
cmp
jbe
cmc
mov
mov
mov
adc
xor
adc
je
cltd
jp
cmp
fsubs
adc
das
jnp
fwait
or
rclb
xor
cltd
stos
sarl
repnz
mov
cld
int
outsb
rolb
push
adc
shll
jle
dec
push
cltd
mov
movsb
jnp
sbb
in
lods
dec
shlb
jae
sbb
fbstp
loopne
hlt
push
dec
into
call
mov
test
jg
sbb
xchg
or
imul
ja
orb
push
sbb
inc
cltd
testl
push
sarl
jge
aas
sti
mov
or
mov
aaa
fwait
jp
test
repz
sub
fiaddl
add
outsl
jmp
sbb
mov
pop
mov
out
inc
insl
sahf
adc
mov
call
shr
hlt
sub
inc
add
and
push
cmp
imul
mov
jp
repnz
push
push
sbb
cmc
or
popa
mov
pop
pop
int
mov
xor
lods
jl
mov
mov
mov
testb
repnz
pop
mov
aam
mov
mov
and
test
call
lods
jp
xchg
add
stc
xchg
add
adc
dec
add
xchg
cs
repnz
inc
mov
mov
in
pop
push
lock
movsl
pop
xlat
sbb
mov
pusha
sbb
out
mov
int3
mov
bound
adc
int
xchg
mov
fnstcw
mov
subl
aaa
mov
rcrb
mov
add
and
into
jg
cld
sahf
shll
fsub
sbb
imul
lea
sub
push
notl
sub
push
mov
call
xchg
pop
dec
das
js
subl
mov
add
aam
clc
cmp
mov
out
or
iret
repnz
sbbb
xlat
jno
pop
rorl
or
jb
cltd
adc
flds
ja
xchg
in
sub
mov
and
test
dec
popf
in
insl
loope
ret
gs
vmptrst
pop
xor
inc
repnz
add
clc
clc
sti
push
or
mov
cmc
sbb
add
test
xor
stc
mov
fidivl
arpl
rcrb
cmpsl
and
dec
sbbb
cmpsb
ljmp
dec
jae
repz
pop
lods
jp
pop
fidivrs
sarl
xor
iret
cmp
pop
push
pop
outsl
xchg
or
cmpsb
stc
mov
fucomp
cmovl
and
test
mov
test
cld
or
pop
xlat
pop
into
aas
arpl
clc
dec
loope
ljmp
mov
xor
lock
mov
int3
lock
xchg
and
sbb
mov
sbb
mov
cld
dec
sti
addr16
ficomps
xchg
cltd
xchg
push
xchg
push
aad
dec
xchg
popf
pop
lret
and
jae
xchg
cs
bound
push
out
pop
add
rcll
bound
mov
cltd
jbe
sbb
jno
pop
sub
pushl
mov
and
idivb
repnz
sub
dec
inc
mov
pop
aad
sbb
call
fcoml
jno
inc
jg
mov
loop
aas
popf
ret
out
jnp
adc
rcrb
jge
test
jg
lds
jb
sbb
filds
cltd
xor
mov
push
xor
mov
inc
cmp
mov
std
stos
imul
or
and
mov
sub
cmp
mov
push
call
xor
cltd
push
hlt
jmp
jecxz
ds
sarb
rcll
add
mov
mov
js
neg
ficoms
sub
adc
popa
or
popf
call
and
and
jg
fs
gs
sahf
lock
mov
roll
xchg
jae
add
lret
inc
mov
dec
mov
pop
xor
push
mov
push
push
mov
sbb
fwait
aaa
loop
cli
cmp
ljmp
sub
xor
sbb
fwait
insl
pushf
mov
pop
xchg
dec
int3
jle
mov
mov
lahf
pop
lods
aas
xor
aaa
push
cli
hlt
imul
sub
xor
sub
out
sub
mov
inc
xor
or
fucomp
stos
cmp
insb
jl
push
mov
iret
fstpl
or
loopne
mov
pushf
mov
das
sub
push
pop
stc
roll
push
int
mov
mov
and
mov
imul
sbb
jo
movsb
pop
cmc
aaa
cmpsl
fdivrl
inc
jb
ficoms
enter
loope
jbe
pop
sub
mov
lea
jl
adc
test
je
jbe
mov
iret
outsb
inc
and
xchg
xchg
sub
sti
scas
adc
mov
call
in
lods
and
add
jecxz
mov
push
or
gs
xchg
inc
lods
pusha
pop
xor
call
ror
add
push
jle
shlb
sub
imul
sub
out
enter
popf
sbb
push
xor
sub
jp
mov
lret
out
mov
or
gs
sbb
inc
arpl
leave
add
popf
pushf
in
pop
fcomps
sub
mov
ja
call
gs
and
jno
stos
das
jb
dec
in
ud0
mov
aas
rclb
inc
jmp
pushf
jge
fisubl
inc
and
cmp
in
add
out
add
ret
xor
jno
adc
xlat
xchg
movsl
cli
out
fimull
andl
cmpsb
or
dec
icebp
mov
jo
lods
xchg
popa
icebp
icebp
pop
into
inc
cwtl
subl
dec
dec
add
mov
jp
lahf
hlt
orl
out
push
xor
out
mov
mov
adc
xlat
rcrl
jle,pn
popa
lea
xor
jae
inc
add
pop
adc
add
loop
and
stos
outsl
add
mov
xor
adc
cwtl
jmp
repnz
and
dec
cwtl
mov
xchg
or
stc
clc
ljmp
arpl
push
jo
add
mov
sub
int
les
arpl
in
loop
sub
orb
repz
push
cmp
mov
add
and
aas
push
into
and
movb
mov
adc
xlat
push
aad
loope
inc
jecxz
inc
insb
std
mov
pusha
dec
mov
lds
cmp
int
loope
rcrb
movsl
popf
scas
mov
mov
cmpsb
mov
jne
ret
add
add
inc
shl
ss
sbb
scas
sbb
sub
cmpl
push
xchg
addr16
adc
loopne
sub
pushf
sbb
push
cmp
sahf
push
add
icebp
test
data16
sub
xor
fisttps
ficoml
jb
push
dec
ja
les
pop
clc
jb
sbb
negb
add
mov
jmp
lock
cltd
mov
mov
fistl
jae
mov
xchg
cmp
push
jp
test
cltd
imul
mov
out
pop
in
into
push
ret
mov
sbb
mov
das
mov
pushf
sbb
ljmp
ss
pop
repz
icebp
repz
hlt
xor
dec
push
inc
iret
push
xor
or
mov
dec
mov
cmpsb
or
pcmpgtw
or
lret
ljmp
sub
mov
inc
or
cmpsb
add
loop
jns
aam
jae
jle
insl
inc
pop
shlb
outsb
scas
mov
cld
cli
cmp
push
jno
xchg
add
shlb
sarb
jg
push
loope
sbb
scas
js
adc
cmp
pop
out
or
ljmp
outsl
xchg
push
je
mov
inc
nop
inc
cltd
jae
push
sub
sub
xchg
push
add
pop
loope
cld
pop
inc
stos
addl
jle
sub
adc
sarl
inc
shl
and
andl
cli
mov
aaa
mov
jmp
movsl
cmpsl
lods
push
sub
mov
aaa
mov
mov
addl
fs
jno
rol
addb
xchg
inc
lock
out
add
scas
xchg
push
pusha
inc
push
fsubrl
xchg
mov
lods
mov
and
mov
mov
out
jo
lret
divb
mov
pop
mov
mov
dec
sarb
pop
push
xor
pop
xchg
mov
adc
loop
sub
popa
stc
orb
inc
cld
cltd
rorb
cmp
ret
cmp
or
mov
sub
iret
in
addb
inc
out
push
out
ficoml
mov
int3
jo
push
insb
adc
inc
test
and
lret
les
mov
cmp
pusha
jbe
mov
std
cmp
push
arpl
rorb
or
push
mov
shl
lods
jp
insl
pop
nop
out
dec
inc
push
jp
ror
jo
arpl
not
lcall
pop
and
sbb
dec
cmc
dec
xor
mov
mov
jae
in
or
pop
cld
out
fdivrs
push
cmp
daa
sbb
mov
push
in
lahf
inc
add
scas
popa
outsl
jp
add
mov
popa
ret
xchg
stos
pop
lds
cwtl
xchg
mov
test
aas
aaa
in
xor
add
lcall
xchg
cwtl
or
push
jmp
stos
popl
jbe,pn
cmp
pop
xchg
mov
movsb
mov
outsb
push
fwait
adc
dec
sbb
cs
iret
dec
insb
fbld
mov
and
movsl
notb
je
pop
test
std
in
mov
push
cmp
stc
or
sub
ret
js
jmp
cmp
clc
or
dec
jns
mov
adc
push
add
into
mov
pop
aaa
sub
into
cmp
xor
sbb
ds
push
or
outsl
push
in
and
scas
add
frstor
dec
aam
cmp
fdiv
xor
mov
dec
sub
lret
inc
mov
sub
lret
pextrw
lret
aaa
call
fstps
js
sub
jbe
inc
repnz
jg
mov
les
out
cmc
jp
and
dec
mov
mov
push
ret
rclb
das
out
fwait
loopne
push
push
in
sbb
xchg
jmp
bound
mov
lods
loope
rcll
mov
push
int3
ficoms
sub
cmc
lret
ror
cmp
push
sub
mov
cmp
imul
in
mov
mov
jno
pop
sbb
in
hlt
into
or
rcll
inc
xchg
mov
outsb
push
jle
jle
xchg
rclb
xor
inc
test
sub
nop
mov
adc
cmp
mov
scas
imul
or
fdivrp
dec
lret
mov
adc
jne
scas
pop
lret
cmc
pop
mov
je
int
inc
or
inc
push
inc
lea
inc
push
cmp
xchg
mov
dec
les
inc
rcll
lods
sub
sub
jae
aam
in
inc
cmpsl
jg
xor
push
xchg
jns
add
arpl
lahf
mov
insb
shll
xor
in
or
lods
repz
mov
daa
scas
mov
push
ret
jge
sub
vmovq
das
and
jmp
mov
add
popf
lea
lret
lods
jae
dec
mov
cltd
xchg
mov
dec
lds
mov
adc
lea
sub
mov
lods
mov
mov
test
pop
mov
rclb
jmp
cmc
xor
das
stos
mov
cmp
addl
repz
pushf
pop
jae
insl
pop
imul
adc
adc
into
in
jbe
and
iret
add
ret
test
xchg
sub
xchg
imul
test
je
orb
push
or
lock
jp
adc
stc
fsubs
lods
mov
mov
sbb
mulb
insb
mov
dec
scas
imul
mov
sub
mov
inc
addl
andb
aam
or
cmove
jnp
call
or
sbb
dec
xlat
stc
out
das
pop
cmpsl
shll
in
fidivrs
testl
ret
sub
lea
xchg
jae
mov
ja
adc
int
jnp
sub
jbe
xor
sahf
and
jno
insl
push
sub
scas
cmp
inc
in
jo
adc
gs
lcall
mov
push
arpl
jne
outsl
and
jg
ret
pushf
or
dec
imul
test
out
fdivr
out
push
lcall
jnp
or
jbe
lret
xchg
pop
test
push
cmpsl
cmp
lock
pop
adc
mov
out
std
subl
inc
test
jecxz
or
stos
add
iret
sbb
jae
loope
repz
lret
clts
adc
push
out
cmp
in
pop
lods
cwtl
inc
xor
pop
xchg
cmp
fidivs
mov
add
movl
mov
loopne
push
adc
leave
fdivs
mov
adc
xor
into
adc
fbld
lahf
add
sub
hlt
addr16
xchg
pop
outsl
test
in
cmpsb
das
jno
cmp
mov
pop
ss
dec
or
xor
cmp
pop
in
mov
les
movsb
pop
sub
dec
push
outsl
imul
mov
mov
fadds
shll
mov
fistps
xchg
cltd
adc
or
pop
sarl
neg
mov
jb
pop
js
shll
aad
xchg
ret
enter
mov
jge
cmpsb
lods
jnp
push
sarb
aad
sti
outsl
push
outsl
pop
testb
sbb
mov
cmp
push
data16
lahf
jle
out
jle
fnstsw
mov
fs
xor
out
cmp
adc
cmp
push
mov
mov
mov
mov
ds
dec
inc
push
repz
sub
fbstp
clc
rclb
imul
lret
add
out
pop
jns
sbb
and
ja
and
dec
push
jno
pop
sub
insb
mov
fcompl
mov
loopne
call
push
push
jo
stc
pop
fldenv
lea
pop
xchg
jo
sub
movsb
faddl
xor
fwait
add
cltd
pop
add
jle
negb
iret
arpl
and
fildl
push
jg
popf
add
imul
movsb
addr16
xchg
dec
rol
cmp
jbe
das
outsl
pop
shll
adc
in
movsb
pop
push
cmpsb
out
mov
add
popa
mov
pusha
scas
inc
popf
cmpsb
dec
jl
push
insl
push
popa
jb
mov
sub
sub
mov
cmpsb
mov
jbe
icebp
les
adc
mov
push
ret
jmp
push
arpl
fiadds
pop
adc
cli
inc
dec
inc
les
clc
adc
ret
xchg
adc
mov
sub
inc
repz
aad
fstp
out
mov
xor
addb
mov
cmpsl
xchg
jnp
test
mov
hlt
in
clc
cwtl
inc
stos
jbe
mov
cmp
adc
push
addl
push
cmpsl
lods
rorb
stos
pop
push
stc
mov
andl
jbe
pop
push
xor
je
or
push
mov
enter
hlt
int3
call
inc
inc
fs
adc
cmc
pop
fistpll
xor
out
insl
jg
out
hlt
sbb
xchg
fwait
push
fbld
dec
pushf
pushf
or
mov
push
shrl
sarb
fiadds
cmpl
cmp
lock
adc
xor
dec
jae
sub
gs
xor
jmp
scas
inc
pop
xor
mov
mov
sub
xchg
mov
xlat
stos
cmc
popl
ss
repnz
xchg
sbb
leave
xor
jne
clc
pop
dec
fnstcw
jp
jbe
negb
and
sub
sub
xchg
fistl
jecxz
out
or
jg
adc
lret
cld
test
and
cltd
adcl
jp
inc
inc
repz
jo
sub
dec
testl
mov
sti
sub
pusha
xor
arpl
insb
push
cmpsb
sbb
adc
adc
arpl
sbb
icebp
jmp
lcall
dec
push
enter
push
dec
pop
cmp
add
sub
xchg
xchg
pop
adc
xchg
movsb
in
data16
loop
push
stc
sub
jg
inc
inc
roll
in
pop
daa
mov
add
out
loopne
add
lock
push
dec
adc
mov
push
lret
insb
out
call
or
testl
call
pop
xchg
pop
sub
sahf
xchg
repnz
jb
lock
mov
and
push
in
nop
ja
xchg
cltd
inc
push
mov
orb
push
dec
xlat
cmp
pop
inc
sti
or
cmp
les
and
xchg
into
dec
out
push
and
insl
mov
sbb
add
mov
sbb
mov
pop
lods
sbb
xor
clc
lret
in
or
daa
xor
pop
push
xor
ficomps
pop
div
or
notl
nop
mov
loopne
cmp
lahf
adc
loopne
ret
xchg
mov
pop
sbb
jmp
daa
popf
push
mov
idivb
jmp
pop
and
jnp
mov
gs
movsl
mov
or
in
xchg
ljmp
jns
add
mov
hlt
pop
leave
das
cwtl
les
jne,pt
cmp
icebp
das
cwtl
movsl
mov
mov
pop
or
ret
inc
orl
test
mov
push
fidivs
js
inc
jns
inc
fists
xor
sbb
inc
jmp
push
mov
pop
call
adc
call
mov
cmp
add
sbb
sub
lret
push
imul
insb
std
dec
pop
jnp
lret
push
fbstp
push
push
flds
andl
addr16
xchg
push
pop
stos
xor
jmp
test
mov
inc
push
andl
imul
push
pop
dec
mov
ja
lcall
pop
shl
push
mov
pop
in
cmp
inc
mov
mov
and
lock
ljmp
clc
popa
pushf
mov
xor
xor
test
popa
mov
sub
rcrl
mov
or
je
xchg
or
push
addr16
xor
xchg
push
adc
out
sub
in
std
ret
les
xchg
nop
pop
mov
xlat
xchg
addr16
stos
push
jle
leave
iret
pop
dec
or
std
cld
in
jnp
mov
orb
pop
scas
pop
sub
mov
loop
cmpsl
fcmovbe
jle
mov
mov
clc
mov
das
jbe
pop
jmp
inc
lods
mov
push
outsb
into
fsubl
sarl
add
mov
or
call
jecxz
hlt
clc
inc
pop
mov
add
or
in
mov
cmp
dec
add
adc
pop
push
sti
sbb
push
ret
in
add
sub
in
or
mov
int
fildl
fwait
adc
jbe
cmp
pop
mov
push
iret
push
fwait
hlt
mov
jmp
cld
or
insl
mov
push
jp
or
and
clc
iret
decb
add
inc
pushl
xchg
ds
mov
push
cld
push
cld
jge
jb
add
pop
std
push
cld
mov
insb
or
movsb
frstor
in
imul
idivb
enter
es
mov
mov
clc
sub
mov
pop
push
xor
xchg
clc
out
inc
cltd
cltd
and
jno
add
out
xor
cmc
test
dec
or
lock
mov
add
stc
jae
jb
push
and
lods
cmp
in
push
andb
in
pop
mov
nop
mov
or
fwait
dec
ret
mov
mov
pop
lock
adc
clc
fstps
int3
mov
bnd
xchg
scas
scas
push
jae
mov
inc
adc
dec
jl
int
test
jb
push
in
push
fdivrs
stos
xchg
mov
mov
mov
inc
xlat
jne
jp
xlat
rorl
popf
dec
je
ret
out
dec
xor
and
test
mov
mov
loop
rclb
and
sti
movsb
sti
sub
cltd
in
push
jae
inc
push
lock
pop
or
lods
add
roll
sbb
sub
addr16
dec
xor
insl
pop
loope
and
lcall
push
sub
shlb
or
push
arpl
xchg
pusha
push
pushf
inc
cmc
mov
dec
into
lods
test
fnstsw
dec
lret
aam
rcr
push
add
sub
and
jb
scas
xor
push
pusha
repz
cmp
out
cmpsl
scas
insb
cmp
les
or
mov
add
mov
flds
out
mov
adc
mov
add
push
iret
mul
push
xor
je
loop
or
notb
fld
fs
push
int
xor
orb
jne
add
inc
mov
cmc
mov
inc
xor
adc
gs
mov
loope
adc
stos
dec
sub
ja
aaa
mov
inc
std
xor
or
inc
dec
jne
fisttpl
push
testb
fiadds
cmpsb
mov
ret
repz
ja
pop
add
mov
add
fildl
xor
enter
not
xor
push
mov
icebp
dec
das
inc
xchg
jmp
xor
xchg
out
mov
data16
pop
adcb
add
cld
inc
mov
pop
sub
xchg
inc
sub
pop
adc
jns
bound
mov
cmp
mov
sub
add
jl
gs
adc
test
rorl
xor
lcall
xlat
cmp
dec
bound
pop
add
mov
dec
ffree
aad
sbb
sub
jg
imul
loope
lds
cmp
ds
adc
jae
test
pop
add
jb
mov
js
stos
stc
sub
es
or
test
cmc
fwait
mov
test
jmp
sub
mov
movsb
out
out
mov
nop
fsubs
test
pop
iret
mov
lret
jmp
out
mov
je
stos
push
mov
arpl
aas
stc
jmp
lods
es
nopl
adc
arpl
xor
sbb
inc
cltd
xor
cltd
mov
inc
xchg
ds
mov
dec
jb
fwait
andb
cmc
out
stos
std
inc
pop
pop
out
jnp
outsl
push
imul
cmp
enter
mov
sbb
inc
in
jns
scas
sub
stc
xchg
xchg
shll
jns,pt
push
or
dec
inc
push
das
and
jno
dec
sti
clc
mov
cmp
xor
sub
push
sbb
pusha
aaa
iret
enter
push
icebp
sahf
mov
dec
mov
shlb
and
xchg
xor
sahf
pop
mov
inc
pop
jg
dec
jns
mov
push
inc
out
xchg
scas
and
xchg
out
and
movsl
in
iret
mov
andl
cmp
xchg
mov
mov
mov
inc
or
lock
or
sub
cwtl
xchg
push
cmc
push
pop
inc
ljmp
cmp
jns
aaa
call
movb
dec
jo
mov
jns
repz
add
or
scas
cltd
dec
leave
fistps
adc
movsl
pop
jecxz
add
fwait
jp
cmpsl
rcr
push
cmp
shll
adc
mov
push
js
jg
pop
mov
lds
sub
xchg
clc
mov
les
cmp
jo
mov
stos
mov
mov
fucomi
xlat
xchg
dec
aam
dec
int3
stos
adc
loop
pop
jae
cmp
js
inc
test
or
mov
or
xchg
push
lds
sbb
icebp
dec
ret
mov
imul
stc
ljmp
shlb
repnz
icebp
ficompl
adc
repnz
enter
or
icebp
insl
out
jmp
mov
lret
mov
adc
movsb
aas
mov
xchg
je
pop
mov
jge
popa
adc
lock
xor
push
pop
inc
iret
ja
je
or
cmc
inc
hlt
push
out
pop
loopne
push
ss
in
push
outsl
mov
dec
and
xor
cs
xchg
gs
sub
pusha
sti
stc
imulb
pop
or
lods
jmp
sbb
mov
push
cmp
ret
adcb
mov
ficomps
ret
cwtl
fadds
out
push
inc
scas
movsb
mov
fs
iret
jno
movsl
adc
pop
cld
and
movsl
cmpsl
push
inc
sarb
xchg
lcall
push
and
or
fs
pop
push
mov
int
xlat
sub
fimuls
fs
scas
into
fiadds
mov
sbb
jmp
fsubp
movsb
and
mov
adc
mov
test
xor
xor
push
outsb
push
stc
add
shlb
sub
jp
push
ljmp
xor
fwait
pop
testl
fisubrl
and
push
dec
jge
inc
cmp
addl
inc
adc
cmp
lods
push
jne
xor
ret
jl
sahf
jb
rcl
and
test
imul
sbb
xorb
xor
jge
pusha
xor
mov
out
dec
mov
mov
cmp
aam
ret
subl
inc
xchg
mov
lcall
mov
inc
sbb
pop
pop
pop
aam
outsb
cmp
fsubs
inc
pop
out
dec
mov
cmp
jb
mov
sahf
inc
mov
aad
sahf
fwait
mov
int3
mov
sarl
testl
push
scas
roll
std
arpl
pop
and
mov
cmp
inc
add
sub
jo
xor
cmp
stos
push
xor
pop
std
leave
push
jle
arpl
subl
mov
loope
jno
cmp
int
adc
inc
xchg
sub
pop
daa
xor
jle
mov
jno
mov
xchg
xor
adc
addr16
jb
mov
ja
dec
inc
orb
neg
jb
lods
push
push
test
lret
fucomi
pushl
enter
jae
out
cmp
pushl
mov
cmp
pop
dec
push
insb
jnp
inc
mov
sub
adc
or
call
sbb
jne
dec
jmp
clc
lods
mov
jmp
push
cmp
and
scas
rcrb
sub
cmpsl
shrl
xchg
sub
movsb
xchg
fiaddl
sbbl
mov
fwait
dec
stos
adc
fbld
mov
into
push
cli
and
pop
mov
cmp
je
pop
notb
movsb
cmpsb
pop
icebp
xlat
lret
hlt
xchg
hlt
mov
int3
mull
jne
scas
pusha
mov
sbb
xchg
sub
popf
pop
mov
xchg
push
sub
xchg
aas
call
adc
shrl
insl
call
mov
pop
in
xor
adc
imul
cmpsb
sbb
xchg
inc
mov
repz
pop
stc
arpl
adc
mov
idivl
test
pop
in
push
mov
in
sub
or
xchg
adc
sub
aad
mov
fstpl
into
shrl
pop
movsb
sti
xchg
jl
imul
cmpsl
add
mov
ret
in
mov
add
in
lods
rol
jae
xchg
fidivrs
push
or
cmpl
inc
pop
xchg
ss
dec
mov
and
in
push
dec
xchg
ja
xchg
ja
stc
sub
mov
push
xchg
in
bound
jl
mov
add
aam
insb
inc
jo
cmp
dec
sbb
sahf
add
testb
dec
push
nop
aaa
or
pushf
sub
pop
sub
movsl
sbb
xor
test
jne
imul
xchg
call
stc
push
adc
movsl
push
bound
ds
jnp
dec
push
jecxz
mov
lds
or
xchg
imul
lahf
xor
lea
mov
test
sar
sbb
call
sbb
fmuls
pop
xchg
lcall
aaa
daa
dec
cmp
cmpsl
pop
sub
xor
lret
lret
out
mov
les
dec
das
mov
jns
and
jle
lret
push
push
ret
add
adc
lds
bound
mov
cmpsl
insb
lods
add
movsl
mov
mov
imul
lods
inc
xor
mov
add
popa
test
rorl
jp
mov
lods
repnz
test
sub
ss
pusha
or
fst
insl
sub
int3
sarb
jmp
cmp
xchg
and
pop
jo
fcmovnb
fiadds
fildl
dec
mov
int
ljmp
sub
and
or
mov
mov
jnp
popf
fnstsw
dec
pop
mov
filds
shl
mov
xchg
sbb
mov
dec
push
iret
mov
adc
js
popa
fidivrl
fstl
cmp
test
ds
sub
or
mov
rorb
out
mov
rolb
cwtl
push
xor
popa
enter
inc
in
cmp
sub
or
sarb
sarl
xor
mov
jge
xchg
xor
ss
ljmp
call
or
mov
jno
dec
add
or
fsubrl
cs
and
daa
add
push
insb
and
cmp
je
xchg
outsb
push
xchg
test
into
pop
call
jne
push
push
popf
xor
inc
stos
xchg
pop
idiv
movsb
shlb
mov
pop
out
xor
jmp
sbb
dec
and
ja
cmp
dec
and
dec
jecxz
sub
mov
xor
out
loope
test
lret
ss
or
cmpsl
mov
movsb
cmp
fistpl
or
outsb
jbe
cmp
and
jl
flds
popf
loop
ficomps
rclb
mov
dec
pop
xchg
xchg
add
xor
jb
xlat
xchg
loop
popf
in
mov
ret
shrb
cmp
mov
aam
mov
pop
test
mov
in
cmp
cwtl
cli
xlat
push
cmp
mov
push
scas
mov
das
and
fbstp
ss
xchg
clc
pop
xorl
cmpsl
int
lret
mov
add
iret
addr16
push
mov
add
into
adc
scas
fnstsw
outsl
aaa
inc
adc
jge
xlat
mov
xchg
in
sub
xchg
push
push
cld
fdivrl
jmp
icebp
push
sub
fimuls
dec
mov
push
negb
mov
in
push
loop
popf
lcall
add
inc
pop
push
mul
aam
sub
shlb
rcl
or
push
jle
cli
sub
mov
cmp
and
fisttps
out
sbb
sti
pop
mov
ljmp
ljmp
int3
mov
add
cmp
push
push
mov
push
inc
mov
add
mov
js
inc
loopne
jae
or
and
scas
int
mov
adc
or
shlb
cmp
scas
sbb
xor
mov
push
mov
dec
test
and
dec
pop
jae
pushf
sub
fisttpll
or
and
sahf
out
or
daa
nop
jns
aas
bound
mov
ficompl
jb
mov
pop
out
pop
dec
icebp
xchg
push
jo
add
into
lret
adc
fwait
cmp
leave
xchg
test
or
fadd
pop
lret
xchg
add
pop
cmp
jnp
stc
pop
sbb
dec
mov
xchg
lret
pop
fnstenv
mov
cmp
add
sbb
jp
inc
jl
jle
mov
push
mov
pop
mov
sbb
xor
mov
hlt
or
scas
cld
push
in
iret
add
inc
push
jae
mov
pusha
sub
hlt
jmp
xlat
mov
out
and
pop
and
out
jge
stos
mov
pop
xchg
sti
scas
icebp
sbb
push
or
inc
in
or
outsb
and
push
jl
sarb
out
push
sarl
imul
sbb
pusha
pop
xchg
adc
das
shll
stos
mov
xor
in
stos
movsb
jne
xchg
scas
dec
in
dec
push
jnp
pop
scas
jno
fstl
jp
out
in
pop
enter
call
cmp
mov
dec
popf
pusha
insb
xchg
mov
aad
mov
push
cmp
aad
loop
add
mov
jecxz
jo
daa
jnp
push
add
or
in
jg
xchg
bound
shlb
out
adc
jae
dec
popa
sbb
and
aad
push
push
nop
scas
loop
test
in
or
dec
aaa
mov
or
add
adc
fucom
sub
sub
inc
aad
fisubs
push
outsl
cwtl
es
mov
mov
aam
jae
and
lds
sbb
sub
xor
jae
push
mov
and
pop
js
fistps
add
sti
test
and
cmp
cmpsl
adcb
pop
inc
mov
jmp
jno
mov
into
mov
mov
dec
xchg
push
push
mov
mov
push
popf
dec
sub
adc
xchg
inc
or
lcall
es
out
dec
jmp
mov
xchg
pop
mov
push
test
push
mov
fistpl
jns
inc
das
aas
movsl
out
mov
inc
fwait
movsl
clc
mov
and
inc
gs
push
test
pop
addr16
fcoms
pop
fs
dec
jge
jne
sub
inc
sbb
xlat
push
xchg
jb
dec
mov
daa
negl
and
inc
push
cld
fs
xor
lea
mov
inc
push
aad
lods
push
sub
pop
or
fsub
into
add
pop
ja
orl
sub
add
dec
adc
xchg
pop
pop
mov
mov
stc
jmp
push
test
inc
insb
and
mov
test
dec
repz
adc
or
jbe
push
mov
jmp
add
clc
int
sub
mov
lahf
cmp
enter
or
add
cltd
shl
testl
in
pop
sahf
dec
push
push
scas
pop
mov
mov
loopne
xor
sbb
cmp
stos
adc
inc
mov
fadds
mov
aam
pop
push
cmc
push
jnp
xor
add
out
adc
ljmp
push
push
outsb
or
jbe
rorl
sti
fcmove
jg
outsb
mov
cmp
imul
cmp
jno
xchg
in
imul
sbb
or
fists
xor
cmpsl
fs
xchg
insl
data16
push
inc
movsb
xor
mov
sbb
stc
stc
dec
repnz
mov
add
inc
mov
imul
das
sbb
insl
stc
fstpl
adc
sbb
lea
mov
mov
inc
inc
loop
add
into
lods
das
jl
mov
hlt
pop
and
clc
jge
movsb
and
jl
mov
js
int3
sti
adc
mov
xlat
xor
push
add
mov
cmp
xlat
or
jns
pop
mov
cmpsl
xchg
sub
xchg
cmp
jae
aaa
clc
or
inc
fsubs
enter
lahf
stc
into
add
aas
mov
lea
sub
outsb
push
dec
inc
mov
test
jb
inc
imul
lods
int
xor
out
xorl
pop
inc
add
inc
lods
aad
or
sahf
mov
adc
ret
scas
mov
int3
in
push
stos
jp
stos
inc
mov
xchg
xor
outsl
and
fnstsw
jno
sub
cmpsb
adc
outsb
pop
push
push
sbbb
ljmp
pop
push
jbe
lea
ss
mov
addr16
sub
in
dec
int3
loope
cmpsl
pop
add
mov
cwtl
cltd
mov
jns
add
std
cltd
jno
mov
cmc
pop
call
bound
mov
jge
jo
add
mov
sub
loop
rcrb
cmpsl
add
inc
jno
lahf
jecxz
cmp
loop
imul
push
leave
cli
push
stos
mov
hlt
pop
lea
cmc
insl
fsubs
pop
enter
jle
xchg
stos
in
inc
mov
sbb
fcompl
sbb
add
cmp
mov
mov
mov
mov
int3
xchg
sub
mov
adc
jno
outsb
mov
ss
lahf
cltd
sarb
rolb
mov
fcomp
jnp
xchg
sbb
mov
fwait
fwait
scas
test
scas
or
je
into
insb
xchg
mov
arpl
jl
mov
shrb
cmp
scas
jmp
in
test
xchg
fmull
test
icebp
test
shll
mov
jle
push
cmp
jl
inc
push
cmc
mov
sbb
stos
sbb
pop
adcb
and
int3
lds
cmp
movl
inc
add
out
or
movsl
pop
arpl
lcall
pop
sub
rcl
sbb
push
ds
out
bound
or
pop
stos
sti
pusha
cld
ror
rol
and
push
mov
imul
out
mov
sti
add
dec
inc
adc
mov
pop
push
stc
les
mov
jecxz
sub
push
pop
aaa
push
sahf
sub
faddl
les
sub
xchg
lock
repnz
aaa
leave
into
sbb
fwait
inc
inc
test
pop
adc
mov
ret
lods
ret
mov
sub
mov
fistps
xor
jae
insb
scas
insb
pop
adc
inc
out
and
or
aad
aaa
inc
popf
mov
jecxz
pop
int
stos
jne
xor
cmpsb
dec
mov
pop
in
sub
sbb
cmc
dec
jno
lea
mov
inc
daa
add
int3
and
add
sbb
mov
pop
into
in
adc
pop
pop
sbb
fcomp
movsl
dec
fs
push
and
mov
loop
aam
jns
xchg
xlat
daa
lds
xorl
rcrb
jne
xchg
mov
jl
xchg
cmpsl
das
xchg
push
aas
adc
adc
jecxz
cmp
pop
mov
lock
es
add
icebp
pop
cmp
mov
sbb
movsb
pop
mov
adc
arpl
daa
jge
movsl
xlat
or
out
jle
ds
dec
push
push
mov
ret
shll
in
xchg
jno
rcll
stos
sbb
or
jno
push
xlat
test
shlb
xchg
mov
fistpl
in
pop
dec
jl
cmp
pop
add
or
nop
push
mov
add
mov
lods
xchg
inc
sub
xor
xchg
sbb
es
add
fwait
ljmp
stos
push
sbb
mov
and
aaa
lods
pop
xchg
call
add
mov
fldenv
std
in
add
pop
js
fwait
adc
pushw
outsb
sbb
push
sbb
jno
cmp
inc
ja
scas
jmp
xor
fldl
movsl
and
mov
or
jmp
gs
stos
daa
sbb
jns
jmp
xor
xchg
movsl
test
loop
or
dec
es
cmp
jg
int
push
aad
shrl
test
pop
cld
cld
push
ret
inc
js
movsl
dec
fsubp
out
jno
mov
jns
adc
call
repnz
sti
dec
rcll
mov
mov
scas
ret
inc
pop
sbbl
iret
jne
movsb
pop
cmp
je
mov
sbbl
jo
daa
sti
fs
sub
sub
inc
or
mov
mov
test
inc
cmp
lock
out
mov
sbb
in
push
jo
or
lods
movsl
pop
icebp
imul
push
into
hlt
lcall
je
jmp
movsl
fadds
repnz
test
mov
xor
and
or
ds
fdiv
fidivs
out
dec
pusha
and
lods
sub
push
mov
in
dec
inc
jb
cmp
idivl
outsb
cmpsl
xor
cmpsl
cmp
jno
in
test
scas
mov
sbb
push
cmpsl
repnz
daa
push
mov
and
cmc
xchg
cmp
or
lock
cli
inc
mov
roll
or
or
mov
out
jmp
mov
stc
insb
nop
pop
jge
cmpsb
inc
popf
mov
sbb
test
mov
adc
dec
and
and
fcomp
popa
jecxz
outsl
pushf
add
jge
cli
xor
inc
cmpsl
push
dec
mov
xchg
inc
sbb
scas
dec
mov
mov
cmpl
jmp
mov
std
push
mov
push
lock
rcrb
inc
scas
das
stc
pushf
cmp
mov
nop
out
or
loopne
sbb
lret
jne
out
inc
push
pop
int
sti
xor
pushf
jbe
ss
jbe
sbb
jnp
jecxz
into
xor
mov
cmp
mov
add
jp
lcall
pop
aaa
ret
push
pop
test
inc
outsb
sub
lea
enter
push
int3
dec
pop
jle
xor
ds
lock
inc
into
daa
push
inc
dec
addr16
test
in
cltd
cld
pop
addb
jae
testb
xchg
add
mov
jo
jl
repnz
and
push
inc
inc
push
js
adc
mov
popa
add
pushf
mov
lret
xchg
insl
outsb
fisttpll
xchg
jg
inc
push
xchg
repz
sahf
cs
insb
jno
sbb
cmp
dec
inc
cwtl
outsl
or
xchg
fsubrs
xor
jae
xchg
push
ret
add
sub
mov
int
arpl
sbb
movsl
push
pushf
test
shl
jmp
out
jmp
aam
out
jbe
scas
mov
aad
fmull
push
stos
das
cmpsb
jmp
inc
push
sti
fsubs
loopne
inc
sbbl
into
leave
imul
add
sub
loopne
add
or
jecxz
lds
out
sub
or
loop
and
dec
stos
icebp
mov
into
shl
sub
pop
dec
cmp
maxps
push
adc
or
mov
aas
fcompl
inc
ret
or
push
movsb
stc
mov
test
add
scas
dec
dec
sbb
inc
cmp
dec
in
push
std
jge
xchg
repz
popa
inc
adc
fs
pop
or
fwait
sbb
into
pop
dec
das
cs
xlat
dec
cmp
dec
int
mov
stc
in
stos
inc
push
add
test
jmp
and
orl
sub
aas
aad
out
mov
cmp
in
repnz
jnp
shll
jno
repz
fwait
stos
push
jbe
movsb
ret
mov
push
mov
out
pop
inc
das
dec
imulb
or
out
and
rclb
pop
movsl
jo
xchg
notl
dec
push
push
mov
dec
sub
lcall
cmp
mov
icebp
cmp
out
xor
push
in
cli
xchg
out
and
fcompl
sbb
in
fsubr
rorb
ds
pop
leave
add
out
mov
and
loopne
test
add
lock
cmp
insl
les
mov
and
mov
push
pop
test
and
xor
mov
mov
mov
addr16
add
cmp
test
repz
dec
ret
mov
fwait
or
jbe
or
pop
sub
ds
mov
fldl
jno
adc
mov
push
dec
xchg
mov
orl
sbb
mov
xor
lret
add
xorb
mov
jb
mov
xor
cmp
fwait
cmp
inc
mov
loopne
imul
or
scas
aaa
call
and
imul
in
inc
dec
mov
sbb
xchg
mov
int
mov
mov
in
dec
xchg
push
stos
ret
and
loopne
ljmp
mov
xorb
js
or
dec
and
and
out
add
fsub
stc
aaa
int3
inc
add
mov
icebp
push
mov
and
jl
jecxz
enter
fcoml
sbb
xchg
aad
push
mov
cld
or
sbb
mov
push
stos
int
adc
test
out
fdivr
rorl
mov
out
repz
cmp
stos
pop
push
cmp
pop
bound
mov
call
sbb
call
stos
mov
mov
and
repz
iret
outsl
insb
movsb
jae
xchg
xlat
negb
mov
outsb
add
push
call
cmp
push
imul
add
add
xchg
cmpsb
xchg
sub
sub
movsl
loope
in
mov
test
and
es
ja
xchg
mov
sti
rcrl
stc
mov
and
shlb
jns
jmp
loope
and
pushf
xor
mov
jp
lret
mov
idivb
dec
loopne
lds
sbb
cmp
sub
sub
xchg
sbb
js
inc
cmp
cmp
cmp
rorb
aas
dec
mov
outsb
pop
adc
cmp
scas
sub
das
mov
mov
fisttpll
jbe
jno
push
fdiv
loopne
sahf
mov
fisttps
fisubs
insl
inc
js
loop
jne
mov
sbb
fwait
inc
and
out
enter
mov
data16
sub
lcall
pop
adc
dec
negl
jl
or
dec
out
push
push
add
push
sbb
movsl
ret
jl
add
mov
test
mov
push
mov
jnp
pop
add
es
stos
or
mov
push
adc
pushl
adc
mov
testl
cwtl
aam
dec
inc
pop
add
lret
dec
fmull
sub
pop
jmp
lcall
dec
cmpsb
stc
add
int
mov
dec
mov
mov
add
fwait
call
sbbb
xchg
daa
out
jecxz
fwait
push
add
pop
jge
push
lea
insb
arpl
push
lret
adc
mov
and
pushf
clc
cli
ss
cmpsl
or
insb
sub
sbb
mov
mov
xor
addl
subl
repnz
mov
repnz
fldt
mov
sub
push
lods
pop
test
std
mov
stc
mov
mov
loop
jbe
dec
sbb
lea
adc
mov
into
xchg
daa
fchs
jecxz
mov
jo
aam
scas
cmp
xchg
cmp
inc
mov
mov
push
movsb
stc
mov
inc
pusha
pop
add
cwtl
sbb
loop
mov
test
push
gs
mov
cmp
jmp
lahf
cmpsb
xor
inc
sub
rcrb
scas
mov
out
stos
dec
sub
out
mov
gs
push
call
pop
stos
arpl
subps
pop
jb
cmpb
in
inc
dec
incb
test
push
cmp
inc
jmp
pop
fs
mov
lret
pop
inc
and
stos
inc
iret
rol
ret
pop
pop
inc
xor
push
jb
inc
xchg
in
js
outsb
push
in
push
xchg
xchg
jge
fstl
shrl
pop
test
mov
xor
movl
sub
xchg
dec
test
or
enter
dec
and
lods
scas
dec
inc
xchg
mov
outsl
mov
in
sub
mov
bnd
push
inc
mov
mov
shrb
add
add
adcl
mov
repz
aad
sbb
xchg
xor
jns
fadd
lock
imul
lret
pop
push
shll
inc
leave
mov
sbb
cmp
daa
lds
repnz
jbe
sbb
or
xchg
adc
and
jle
sub
fsubl
xor
dec
push
scas
add
ja
cmp
xor
dec
mov
pop
rorl
xchg
mov
fs
push
or
aam
mov
bound
cmp
pop
imul
xlat
and
arpl
das
adc
movsl
lods
push
paddd
pop
inc
out
inc
sarl
lcall
dec
add
push
jb
imul
xchg
stos
fstl
mov
data16
sub
rclb
xchg
outsb
mov
iret
xchg
jns
insl
mov
test
sarl
sub
sbb
cli
mov
inc
push
lods
imul
aad
mov
addr16
cwtl
jns
pushl
and
in
in
test
and
add
loop
mov
pop
shlb
ljmp
add
add
inc
pop
push
sbb
mov
in
test
push
call
add
in
and
jae
cs
dec
repnz
mov
xchg
fsts
insl
adc
cmp
cmpsb
inc
test
lcall
fs
mov
adcb
mov
mov
rolb
inc
sahf
mov
jge
lcall
addb
fnsave
jp
sbb
je
xor
adc
loope
mov
xchg
mov
dec
daa
movsl
cltd
pop
cmp
jecxz
mov
lods
pushf
cmp
dec
xor
or
in
or
fdivs
sub
ds
pop
adc
stc
and
mov
mov
mov
sub
sbb
movsb
mov
inc
xchg
xor
scas
adc
outsl
mov
sbbl
jmp
inc
lods
push
mov
lock
add
popa
icebp
pop
loopne
pop
shrl
mov
cmp
push
addr16
flds
lret
mov
pop
dec
mov
mov
adc
or
sbb
popf
enter
xchg
xchg
jae
add
sbb
pop
out
cld
adc
pop
nop
repz
and
sub
dec
fwait
stos
and
negb
insl
adc
inc
xor
and
xor
adc
or
inc
aad
inc
mov
mov
cltd
popa
sbb
repnz
jp
adc
sub
sbb
sbb
sti
mov
lock
in
stos
iret
inc
sbb
scas
lret
icebp
xchg
jbe
pop
pop
add
shrl
in
sbb
mov
movsl
decb
mov
jecxz
fs
jmp
insb
cmp
mov
mov
mov
push
push
and
shr
shrb
sti
add
cltd
frstor
xorb
and
mov
dec
pusha
or
fdivl
pushf
in
inc
inc
pop
jo
ficoms
mov
mov
jp
pop
andb
scas
push
mov
test
dec
cmp
cmpsl
ficompl
or
test
mov
pop
daa
xor
fs
mov
or
xchg
jecxz
cmp
in
pop
cmpsb
fdivrs
cltd
xor
or
jecxz
xchg
popa
pop
adc
sti
and
add
or
sbb
leave
rcll
testb
ret
jmp
inc
popf
fisttpl
lahf
aad
sbb
repz
mov
loop
adc
into
dec
jbe
not
or
pop
xor
imul
data16
pop
adc
sbb
fidivrs
daa
xor
rcl
dec
or
pop
jl
xor
inc
loop
push
aam
lret
shl
pop
xor
ret
test
push
lods
mov
lret
test
pop
push
dec
lret
inc
mov
rorl
mov
dec
scas
or
enter
or
inc
test
mov
mov
pop
js
add
outsl
push
dec
push
fidivrl
aad
fbld
dec
aas
cs
mov
push
mov
icebp
lret
push
ror
adc
adc
mov
fldenv
jg
mov
in
fs
push
inc
sbb
sub
or
jnp
sub
pop
shrl
push
pop
inc
cmp
xchg
jnp
lcall
lret
jmp
dec
dec
sbb
sbb
out
outsb
lds
inc
lds
dec
sub
xchg
adc
sbb
iret
mov
jle
jbe
cwtl
mov
ret
inc
xor
push
jg
andb
xchg
cmp
iret
call
fsubrl
cld
adc
pop
or
lahf
outsw
and
fisttps
lahf
repnz
out
mov
iret
xorl
cmp
xor
clc
rorl
pop
pop
mov
xchg
fisttpl
lea
sbb
mov
and
xchg
dec
pop
mov
loope
dec
leave
push
xchg
lahf
daa
mov
cld
jne
or
lcall
xchg
aaa
outsl
shl
lret
sbbl
add
mov
jl
in
fistl
lcall
fistpll
push
mov
push
dec
popa
cmp
jno
sbb
add
add
xchg
dec
add
cmp
in
sarb
cltd
lcall
pop
mov
xor
sbb
aam
repz
mov
xor
mov
pop
jge
filds
outsb
cld
inc
js
getsec
gs
aas
cmp
in
les
movsl
or
sahf
xor
sbbl
and
call
mov
data16
arpl
movsb
mov
outsl
dec
insl
add
neg
pop
mov
adcl
pop
add
mov
in
xor
and
jb
or
pop
out
or
shlb
lods
in
pushf
jg
test
mov
cmp
jne
aaa
dec
nop
sbb
jp
pop
clc
cmp
dec
aas
or
adc
and
mov
shlb
jmp
cmp
jno
iret
repz
hlt
push
sub
mov
out
jle
push
in
or
ljmp
movsb
call
adc
jno
dec
addr16
xor
frstor
mov
add
cmc
aam
mov
call
adc
js
jae
pop
lahf
sub
mov
pop
adc
pop
mov
ja
movsl
pop
iret
jmp
pop
lods
hlt
insl
scas
test
fldt
sti
nop
sbb
rdtsc
and
xchg
mov
mov
aaa
mov
sahf
add
or
pop
push
push
shll
std
fsts
repz
loope
inc
push
xchg
cld
cmp
xchg
pushf
mov
sarl
sub
add
movsb
sbb
push
push
fsub
mov
dec
mov
dec
jge
sub
mov
xor
mov
pop
sarl
pop
sbb
ret
lahf
dec
std
adc
sub
jb
push
cltd
xchg
pop
and
sti
xchg
orl
cmp
rcrl
lcall
add
fstp
int3
inc
popf
andl
sahf
mov
mov
icebp
push
popf
pop
or
mov
or
repnz
insl
sub
lret
inc
inc
jp
add
in
iret
xlat
rorb
fildll
xor
mov
lahf
js
out
jmp
sub
ret
xchg
or
lcall
icebp
adc
mov
outsb
not
bound
xor
dec
ja
fwait
addr16
fs
dec
inc
jecxz
fisubs
lods
gs
test
fstps
aam
out
in
mov
inc
test
imul
jg
lcall
mov
push
cs
cmpsl
and
movsb
xor
xchg
and
sub
insl
gs
mov
call
ds
int
loopne
xor
pop
aad
das
insl
leave
sbb
decl
cmp
mov
andl
dec
sbb
inc
xchg
idivl
dec
or
int3
lcall
sub
pop
test
in
and
scas
test
das
jp
push
mov
rclb
leave
mov
lcall
sbbl
inc
pop
test
in
sahf
sbb
fsubrl
inc
lods
pop
or
inc
jl
test
out
cmp
sub
icebp
sbb
imul
sar
sub
lcall
sub
fdivrl
xor
sbb
mov
lahf
jns
or
jecxz
xor
pop
outsl
in
psraw
shl
mov
stos
test
push
adc
sti
push
stos
pop
test
adc
pop
insl
jb
sarb
sbb
test
sqrtps
mov
mov
mov
or
int
in
adc
lds
mov
jnp
into
out
inc
push
sub
mov
push
rorl
addr16
fwait
and
daa
sub
inc
push
push
and
nop
rcl
sbbl
mov
test
cmp
stos
fsts
push
enter
pop
mov
mov
negb
jne
daa
jg
mov
outsl
fwait
cmovno
cs
add
xchg
dec
imul
add
ss
ret
rolb
jbe
mov
inc
push
jno
xchg
out
jbe
rcrl
sub
insl
test
dec
popa
iret
pop
jae
jl
lahf
loop
and
dec
cli
imul
repnz
rcll
out
pop
sub
dec
daa
xchg
outsl
loopne
cld
movsb
call
clc
mov
and
sti
mov
pop
or
fxam
pop
add
jo
test
cmpsb
inc
jbe
rcll
fbld
ljmp
les
hlt
xchg
xchg
xor
bound
xor
out
rorb
mov
cmp
jnp
js
add
pop
mov
mov
addr16
jno
test
dec
xor
fcomp
mov
add
and
push
popf
cwtl
pop
imulb
mov
mov
shll
jg
xor
out
and
xchg
iret
dec
jne
aad
call
sarl
into
push
xchg
fwait
mov
daa
lds
rcrl
sbb
aas
std
test
jmp
test
pop
pushf
pop
dec
fidivrl
mov
lods
add
dec
jnp
xchg
jp
int3
adc
retw
in
pop
ss
jbe
or
mov
in
rcrb
notb
out
mov
or
push
pop
dec
or
mov
add
and
push
dec
lcall
sbbb
jge
dec
daa
mov
push
add
xor
imul
inc
shll
lea
xchg
ds
push
sub
inc
stc
or
aam
cmp
push
cmp
cld
mov
repz
push
jge
test
mov
adc
push
ret
push
jecxz
or
xchg
push
or
mov
roll
and
imul
jne
adc
enter
in
mov
clc
fisttpl
pop
mov
mov
and
jne
mov
xchg
dec
push
fimull
jns
xchg
jge
lahf
stc
push
inc
loopne
mov
mov
clc
fldenv
cmpsb
push
xchg
jb
sub
ljmp
fcmovnu
pop
mov
and
add
subb
jno
repz
aam
fptan
jo
inc
lds
outsb
insb
in
cmc
and
jns
jnp
lods
pop
add
xor
dec
mov
cwtl
sahf
and
mov
push
fadd
aaa
cwtl
es
sbb
jae
pop
xchg
add
push
cmp
sbb
add
xor
xor
xlat
jle
cwtl
cli
jno
aaa
sahf
xchg
jnp
decl
out
or
bound
scas
xlat
adcb
add
ss
add
jle
arpl
scas
dec
and
test
pop
subl
xor
ret
rcrb
outsl
mov
rcrb
mov
cwtl
ljmp
int3
rcrl
lcall
adc
add
cmp
lock
mov
push
cmp
dec
xchg
jmp
inc
test
sbb
mov
adc
or
cmpsl
pop
jns
xor
inc
pop
notb
mov
jp
add
adc
push
xor
or
out
in
ret
ds
xor
mov
push
adc
dec
mov
ret
ljmp
dec
mov
cs
pop
test
mov
pop
pop
add
cmc
jle
cmp
jecxz
sub
stos
icebp
loopne
push
fwait
repnz
scas
stos
sti
pop
stc
sbb
notl
sbb
dec
jae
je
loope
scas
ss
test
jne
sahf
sub
adc
leave
inc
ja
in
test
out
dec
das
xor
mov
in
mov
xchg
inc
or
sub
stc
sub
xlat
jmp
jae
or
popf
loop
push
dec
adc
int
push
ret
mov
mov
sbb
inc
cli
xchg
inc
fcomp
mov
mov
ja
imul
dec
sti
push
mov
sbb
dec
mov
fcoml
xor
pop
icebp
fdivrs
mov
xor
call
pop
rcr
movsb
jl
cmp
dec
in
arpl
cmp
bnd
add
xchg
jns
fdivl
lret
mov
stos
or
mov
sub
push
imul
enter
in
mov
fcomip
negb
rorb
cmp
rorb
sbb
cmp
cmp
js
add
dec
nop
push
loop
push
or
test
insb
pop
pushf
je
mov
inc
rcll
data16
jb
dec
add
sub
popf
fbstp
leave
sub
jmp
ds
and
fcmovu
scas
mov
xor
icebp
dec
insl
push
fiadds
xchg
fisubs
lret
clc
jecxz
or
ja
ret
and
stc
clc
jmp
mov
clc
sbb
xchg
dec
aad
in
insl
scas
pop
xor
mov
inc
and
fs
xor
fisubs
sub
jg
xlat
in
test
cwtl
push
cmpsb
adc
xor
loop
jae
dec
jle
jne
mov
pop
sub
dec
loop
sub
mov
sub
mov
mov
orb
pop
in
xor
cs
lock
mov
fisubl
imul
jecxz
lea
sti
or
imul
pop
jle
sbbl
xchg
in
add
out
ljmp
fstpl
sbbb
xor
lret
jle
cmc
inc
les
addr16
add
jg
ret
orl
adc
cmp
mov
es
out
shr
jb
scas
lahf
lea
mov
and
inc
and
jmp
xchg
push
rcll
and
mov
add
jp
cli
gs
in
cmp
cs
pusha
roll
popf
into
mov
int3
jge
push
fstl
ja
mov
popa
bound
daa
les
in
xchg
adc
test
push
xlat
add
mov
jbe
sub
lcall
lret
bnd
dec
clc
in
cmp
mov
inc
push
int
inc
mov
mov
call
je
mov
sbb
int
aam
jne
cli
aaa
add
push
addb
aam
int3
jmp
sub
pop
xor
mov
mov
fnstenv
stos
shlb
iret
ja
popa
dec
repnz
out
xor
inc
imul
cmp
mov
cmpsb
shrb
enter
cmp
mov
jmp
add
dec
sbb
jne
dec
lods
mov
jno
ds
outsl
das
jno
jns
out
dec
sub
add
pop
sti
inc
or
jae
call
xlat
or
cmp
or
pushf
fadds
test
jno
ret
fdivl
stos
xor
mov
mov
and
pushf
daa
cmp
xor
ret
scas
pop
clc
ret
shrb
push
subb
cmovb
stc
jne
shl
stos
dec
daa
sub
lret
pop
or
les
lahf
lods
repz
in
fwait
mov
xor
inc
stos
jb
sub
jl
decb
std
mov
in
mov
ss
lock
imul
add
loop
stc
aam
jge
test
movsb
mov
je
js
shrl
fiaddl
out
push
cmp
dec
jle
jno
xor
movsl
sub
pusha
or
xchg
sbbb
inc
mov
add
or
dec
add
xchg
push
dec
pusha
cmp
sbb
push
jl
pop
enter
mov
imul
mov
cmp
ret
insb
int
gs
jle
dec
scas
inc
and
xchg
jecxz
pop
ret
mov
out
add
sub
add
leave
sarl
pusha
ret
mov
test
test
or
xchg
ret
mov
sub
or
mov
or
mov
dec
xor
imul
mov
repnz
xchg
enter
scas
shll
scas
enter
xor
aas
sub
add
gs
arpl
jp
das
outsb
pop
push
fcompl
mov
loop
xchg
imul
std
subb
movsl
sbb
mov
mov
fisubrs
int
out
nop
push
xchg
shrb
jecxz
in
or
lods
mov
test
xchg
pop
andl
adc
sub
sbb
movsl
insb
pop
mov
daa
repz
jo
pop
or
test
xlat
fstl
mov
xchg
add
xchg
adc
lret
stos
inc
fucomi
lds
jne
jmp
push
fmul
scas
loope
je
push
ja
or
or
push
or
cvtdq2ps
inc
popf
jmp
test
movsl
pop
test
sub
fucomip
decb
dec
pop
pop
inc
mov
xchg
cmp
fs
ret
and
fnstcw
mov
fwait
mov
outsb
cmp
pop
dec
popa
push
call
pop
and
ljmp
xchg
pop
xchg
add
or
mov
inc
lret
adc
outsb
aas
sar
push
xchg
dec
aad
sbb
mov
lods
and
scas
insl
lds
repz
leave
imul
popa
out
mov
gs
adc
arpl
fdivrp
pop
and
pop
js
cmp
cli
pop
das
mov
mov
ficomps
int
insb
or
push
or
push
push
jecxz
dec
movsl
push
rolb
and
lods
or
xlat
xchg
cmp
mov
jecxz
fsubrl
sbb
pop
pop
jo
xor
sbbl
movsb
or
and
pop
shl
push
in
je
in
test
data16
or
sbb
add
jmp
imul
inc
adc
mov
rcll
jmp
mov
sar
cmp
aaa
adc
pop
and
cltd
popa
dec
into
xchg
dec
adc
sbb
pop
xchg
pop
das
icebp
and
jl
stc
dec
pop
loopne
cmp
lret
xchg
imul
pop
cmpsb
jle
repnz
mov
cli
stc
sbb
sbb
dec
mov
xchg
push
in
push
sub
sbb
fimuls
xlat
or
cmpsb
lea
or
clc
push
push
cmp
sbb
xchg
into
fstps
dec
fdivrs
pop
stos
insl
fisubrl
xor
xchg
lods
xor
xchg
shrl
inc
xor
fdivp
divps
inc
or
lahf
xor
mov
jnp
stos
cmp
inc
fnstenv
push
mov
mov
popf
jle
lea
pop
and
sbb
inc
cld
inc
inc
sub
add
das
xchg
mov
sbb
jne
dec
add
test
or
sbb
fisttpll
xlat
call
call
mov
xor
cld
dec
lret
and
lock
mov
xor
add
jno
ds
cmp
subb
sbb
mov
dec
cmp
cmpsb
mov
lahf
leave
mov
movsb
xlat
rclb
add
lods
or
arpl
cmp
or
inc
xor
mov
lret
outsb
aad
ljmp
mov
xchg
int
lahf
es
sbb
dec
push
dec
gs
xor
aas
outsl
outsl
and
or
push
sub
cltd
andb
jmp
or
jl
jl
outsb
fstl
rorb
ret
xor
xchg
ror
push
jns
mov
int
mov
vsubps
out
mov
cmpsb
lea
sub
addr16
xchg
ljmp
or
adc
pushf
test
hlt
or
fcmovne
push
popf
sub
mov
loopne
rcrb
jecxz
inc
out
sub
ficoms
hlt
mov
mov
pusha
ror
fldenv
push
shl
jbe
push
dec
imul
xchg
add
rcl
sub
and
lea
in
mov
add
xor
sub
push
out
mov
or
sbb
scas
jge
sub
jl
push
mov
test
cmp
xor
lock
jecxz
push
push
aam
mov
push
std
shl
sarb
jg
pop
outsl
sbb
cli
mov
mov
pop
mov
scas
fstpl
cmp
mov
dec
ret
neg
adc
and
xchg
mov
fidivrl
sub
in
adc
push
jae
popa
jnp
gs
and
lods
iret
xchg
jnp
mov
sub
shll
xor
loope
icebp
popf
jnp
shll
sub
ja
add
mov
xchg
adc
pop
ss
sbb
clc
cmp
adc
xchg
loopne
loopne
add
add
or
inc
push
ja
pusha
stos
lcall
mov
loop
fwait
scas
fstl
lods
add
lock
test
mov
jecxz
inc
loope
sbb
and
popa
into
mov
push
and
mov
in
enter
pop
and
cmp
push
repz
dec
cld
pop
cmpsl
xchg
std
shlb
in
lahf
pop
inc
sub
cmp
scas
popl
mov
or
sbb
cmp
jns
sbb
ret
call
mov
aaa
and
insb
mov
mov
or
dec
scas
shlb
rcl
pop
jecxz
sbb
dec
clc
pop
rcrl
clc
js
xor
push
jnp
mov
loop
sub
loop
je
jp
cmpsl
and
repnz
fsubs
mov
inc
iret
out
test
and
test
mov
xchg
xchg
test
mov
jl
jbe
xchg
pop
cmp
add
arpl
jmp
push
das
cltd
adc
pop
mov
push
rorb
shrb
sub
xchg
shl
dec
mov
inc
cmpsl
mov
andl
adc
and
decl
xor
stc
inc
aam
daa
push
call
clc
cmp
sbbb
out
lods
mov
mov
sub
cs
repz
adc
imulb
dec
rcrb
nop
push
pop
xchg
inc
jge
xor
lret
test
lcall
add
xchg
push
faddl
xchg
cwtl
je
push
jle
xchg
sbbl
push
sub
inc
dec
test
xchg
fldt
xor
or
in
xchg
test
mov
xchg
scas
dec
in
and
push
enter
push
jno
jbe
aad
pusha
sbb
push
cmc
push
das
cmc
sar
test
dec
jmp
push
rcll
movsb
adc
pcmpgtw
lods
mov
nop
pusha
repz
and
push
xor
mov
shl
jmp
dec
insb
out
and
jno
leave
sub
cmpsl
in
lods
test
jecxz
push
call
sub
in
mov
xchg
xchg
cld
fisubrl
pop
sbb
adc
mov
das
addr16
addps
sbb
mov
mov
push
ja
sub
data16
pop
test
aaa
dec
les
hlt
jl
xorl
ds
pop
dec
scas
mov
pop
push
or
jge
mov
ja
push
mov
jmp
repnz
out
xchg
and
insl
scas
xchg
adc
and
cli
and
jns
xlat
mov
pop
push
fsts
jle
inc
pushf
jl
adc
inc
leave
xchg
push
std
and
lret
inc
int3
hlt
lcall
shl
cmp
sahf
xor
xor
mov
pop
cld
fmull
fistps
pop
stc
daa
mov
xchg
sbbl
dec
mov
fs
test
and
mov
sahf
aas
enter
movsb
mov
jmp
inc
pop
insl
into
aam
or
xor
lret
addr16
pop
mov
pop
push
aas
mov
xchg
jns
cmc
pop
test
fwait
testb
in
fiadds
aam
adc
or
insb
pop
pop
and
dec
shll
pop
clc
mov
ds
out
lahf
lods
push
scas
fldl
das
scas
push
shll
fwait
test
inc
add
and
push
lea
addl
xlat
add
je
scas
test
push
ds
bound
int3
je
add
andb
loop
adc
jb
ljmp
bound
cltd
mov
iret
lret
xchg
vmovlps
leave
std
lahf
mov
push
add
mov
in
jmp
call
or
xlat
ret
sbb
lret
mov
adc
xor
mov
rorl
jmp
inc
insb
imul
mov
fildl
idiv
loop
cld
sub
adc
and
mov
fldcw
sub
jg
std
or
adc
jmp
xchg
pushf
lock
pslld
mov
adc
roll
mov
pop
shl
mov
mov
xchg
movsb
sahf
xchg
aad
xchg
dec
jb
lock
pusha
sub
push
push
outsb
fcomps
sbb
sbb
cmp
lea
imul
xchg
lret
stos
xor
aam
jle
dec
or
adcl
dec
movsl
andl
ret
xchg
xchg
je
and
jne
pop
int3
out
push
insb
cmp
out
test
mov
mov
lock
sbb
adc
add
mov
mov
out
lret
clc
cmp
xor
stos
pusha
jle
sbb
jns
xlat
aam
in
clc
int3
lahf
shlb
rorb
test
fstps
mov
inc
out
mov
sbb
cmp
popa
adc
out
adc
bound
add
fsubrs
je
lret
inc
mov
mov
add
mov
in
inc
xchg
pop
fwait
jbe
xchg
and
popa
std
movb
out
or
cmp
inc
cmpsl
jae
roll
jecxz
sbb
mov
lcall
cmp
mov
dec
xor
add
inc
pop
sahf
adc
inc
jecxz
ljmp
jg
sub
popf
mov
in
inc
mov
xor
xchg
jno
add
lds
jmp
cmp
jns
mov
dec
xchg
pop
rclb
and
inc
lods
cli
mov
sub
cmpl
clc
out
arpl
or
xor
lcall
fldt
aas
jecxz
cltd
dec
lods
dec
mov
jnp
outsb
fcoms
jg
sbb
arpl
aaa
pop
aaa
outsb
ja
iret
ja
lods
dec
push
dec
cltd
xchg
dec
gs
cs
cmc
test
jl
ss
jecxz
and
aaa
dec
lret
ret
nop
pushf
lret
data16
js
push
insb
loope
out
adc
mov
shll
and
cmc
into
jmp
xor
dec
pusha
inc
jnp
mov
xchg
pushf
dec
pop
xchg
iret
pop
cmpsb
inc
add
mov
dec
out
jp
js
fs
xchg
mov
mov
xchg
mov
ret
add
push
xchg
mov
or
or
jle
std
cld
cmpsl
sub
adc
repz
aas
ja
adc
push
sbb
aad
outsb
ja
jmp
in
cmp
fwait
mov
out
movsb
pusha
gs
int3
mov
aas
dec
pop
imul
xor
std
jp
je
xchg
je
xchg
sbb
pop
sbb
stc
js
je
lods
lock
push
add
cmc
rolb
push
mov
jecxz
add
bswap
xchg
sub
dec
jmp
mov
icebp
mov
loop
or
pop
cli
rcrl
data16
out
inc
rcll
in
add
cmp
in
pop
jg
cs
clc
cld
xchg
add
std
enter
lret
in
inc
iret
and
and
xor
jmp
fidivs
imul
int
rcr
pop
cmp
mov
call
sbb
xor
rcrb
ficomps
fstpl
test
ds
pop
lret
push
xor
push
push
push
lods
mov
mov
sbb
mov
sub
jns
xlat
cmp
lods
call
pop
outsl
mov
cwtl
cmp
ja
mov
push
data16
imul
or
test
cld
loope
pushf
xor
lds
adc
fcoms
inc
lea
pop
xchg
jo
and
aas
scas
aaa
jmp
repz
addb
adc
mov
into
sbb
dec
or
dec
enter
adc
out
and
fnstsw
mulb
lret
mov
cwtl
es
lods
jnp
adc
dec
or
xor
xor
fsubl
stos
cltd
dec
shlb
cwtl
cmc
jno
arpl
pavgw
push
popa
dec
jecxz
rolb
insl
mov
scas
cli
jge
mov
lock
and
cmp
insl
into
xchg
jg
mov
ss
ja
lret
xchg
lcall
xchg
add
push
lahf
fwait
in
push
cld
mov
outsl
pop
xchg
lods
les
stos
sub
rep
push
shlb
shll
aaa
scas
cmp
jp
pop
jle
movsb
lock
loope
in
mov
test
xchg
pop
in
mull
jnp
pop
add
jmp
pop
cmc
movsb
ljmp
inc
mov
and
mov
pushf
gs
adc
stc
fs
fnstsw
push
imul
idivl
mov
lret
cmpsl
ss
pmullw
adc
dec
decb
mov
lahf
xor
push
dec
dec
hlt
push
sbbl
jl
lock
sbb
cmp
fs
les
dec
int3
std
mov
ds
and
sbb
repz
gs
push
xchg
lea
aam
fcompl
je
xchg
inc
add
sbb
mov
aam
jno
ja
fnstenv
insl
dec
loopew
inc
cld
movb
rol
insb
add
js
fidivrl
mov
mov
xor
push
pusha
inc
push
jo
sahf
stc
mov
mov
dec
call
mov
js
xor
clc
mov
sub
enter
jb
jg
cmpsb
xor
dec
push
ds
lods
mov
pop
add
sub
mov
outsb
in
je
cs
add
pop
addl
into
nop
push
andl
call
cmpsl
leave
adcb
test
das
in
enter
fidivs
cmpsb
ljmp
jmp
mov
lea
aas
mov
pop
xor
and
lods
pop
push
and
imul
cs
add
jae
adc
int
mov
shlb
ljmp
jbe
pushf
jb
repnz
jo
mov
mov
mov
and
or
mov
jmp
mov
aam
add
std
dec
lret
cmp
xor
pop
lods
sahf
test
sub
inc
in
cmp
sbb
movsb
pop
aas
or
push
pop
dec
mov
movl
test
sti
push
jge
mov
mov
data16
cld
adc
clc
orl
lea
rcl
fisubl
push
jle
or
and
popa
add
fimuls
ud2
xor
pop
lret
ret
decb
sub
gs
sub
adc
or
and
lret
inc
push
jle
aaa
pop
dec
fmuls
push
fldenv
sbb
fisttps
out
push
inc
movsl
inc
inc
dec
je
sub
mov
hlt
xchg
jg
scas
bnd
sbb
jb
pop
lret
faddl
mov
sti
sub
sub
lea
cltd
faddl
out
and
notb
mov
adc
sub
aaa
fisubrl
pop
xchg
pop
call
pop
enter
dec
nop
pop
push
popa
mov
sarb
sti
repz
sbb
dec
cmp
lods
mov
clc
arpl
mov
out
pop
pusha
aas
xchg
sub
mov
xchg
inc
or
ljmp
mov
inc
or
std
cmc
pop
fs
xor
jb
stos
test
dec
data16
cmp
inc
and
xor
dec
loopne
push
mov
aam
lods
scas
mov
mov
lret
lahf
pop
lret
push
adc
sbb
mov
sarb
pop
into
cltd
repnz
sub
inc
repnz
mov
sub
push
les
dec
shrl
mov
sbb
fisubl
je
lret
xchg
movsb
cmp
insl
stc
addl
in
push
test
jecxz
xchg
into
cmp
aaa
adc
adc
imul
mov
cmovl
test
out
int3
jg
stc
out
push
jg
inc
rolb
in
mov
cmp
push
adc
jle
es
add
cld
jnp
fcoml
cmpsl
cmpsb
cmp
push
popa
in
dec
xor
mull
stos
stc
out
test
push
add
les
test
stc
xor
sub
je
mov
nop
in
call
lret
dec
test
jo
or
ret
in
add
inc
push
jbe
jno
and
rcr
push
sub
fwait
dec
movsl
cld
or
jo
sti
lods
insl
rolb
xchg
aaa
sub
in
repz
je
jne
insl
pop
arpl
cmp
mov
dec
mov
xchg
inc
loope
dec
popa
add
mov
fwait
adc
fstps
or
enter
lock
stos
scas
mov
sub
ret
jo
ja
mov
scas
setbe
adc
shlb
dec
cmpsl
xchg
and
dec
rcl
cld
add
aas
mov
or
rcrl
pop
mov
jns
pop
jmp
and
mov
popa
jmp
cmp
in
pop
sbb
add
pop
inc
sbb
jp
pop
scas
mov
fbstp
mov
js
inc
or
test
inc
in
pop
jp
nop
fimull
mov
fisttpl
cmp
xchg
imul
ret
adc
dec
rcrb
out
adc
adc
pop
mov
and
test
sub
xchg
mov
adc
xlat
sub
sub
add
push
aas
pushf
cmpsb
mov
adc
bound
sahf
xor
ret
and
aad
mov
out
ret
dec
push
inc
pop
cmp
ret
out
xchg
addr16
inc
subb
jns
dec
repnz
push
pushf
imul
shrl
jae
xor
cmpsb
sub
dec
sub
xor
rolb
popf
andl
dec
cmp
or
cmc
lret
lret
stc
sti
mov
mov
pop
rep
jb
data16
inc
repnz
add
add
mov
dec
and
push
cld
sti
pusha
data16
and
adc
out
cli
mov
cmp
dec
stc
loope
dec
jae,pn
xor
xor
xchg
lods
sarl
xchg
fstpl
xchg
jno
int3
sub
xor
jp
nop
es
fldenv
jae
mov
outsb
inc
mov
cmpb
testb
daa
mov
pop
sub
dec
or
jge
jp
das
or
pop
push
addl
icebp
mov
or
cmpsb
jecxz
pop
lea
cmp
hlt
ret
cmp
inc
jbe
mov
lret
xor
mov
sbb
jg
jmp
rolb
add
cmpsb
adcl
add
jg
inc
andb
dec
jae
mov
push
jg
xchg
daa
adcl
sub
and
dec
ret
push
mov
xor
das
or
ds
movsl
sbb
shrl
xchg
inc
clc
xchg
fcoms
inc
or
add
insl
push
jge
and
iret
outsb
mov
fstpl
mov
xchg
hlt
imul
jle
ficoms
into
dec
stos
aaa
dec
dec
push
inc
cmp
xchg
cmpsb
in
sub
pop
outsl
out
ljmp
paddb
lock
outsb
jmp
stos
stos
ret
pop
mov
cs
test
sti
mov
push
cmp
sahf
out
mov
ret
rclb
stc
dec
pop
bound
bound
in
mov
mov
add
inc
xchg
cwtl
xchg
lds
dec
out
jge
pop
std
xchg
icebp
cmp
das
cmp
cmp
mov
scas
adc
jg
repnz
fiadds
add
inc
adc
or
scas
hlt
scas
lahf
and
sahf
xchg
xor
fwait
ds
cmpb
pop
dec
cld
js
cmp
loop
jae
dec
arpl
mov
cmc
mov
jbe
out
decl
stos
pusha
sbb
repz
fistpl
mov
aad
stc
das
mov
ss
fldenv
popl
push
adc
dec
out
mul
push
movsb
movsl
pop
lret
ljmp
pushf
xchg
inc
cmc
in
jmp
and
js
push
fcmovb
xchg
xchg
out
in
sub
sbbl
add
and
push
sbb
mov
mov
pop
xor
push
mov
mov
push
aad
or
fcmovbe
sbbl
adc
in
xchg
xchg
arpl
mov
jnp
cs
hlt
lret
dec
in
and
xor
pop
push
and
dec
mov
push
mov
cmp
push
and
mov
adc
notl
xor
lds
mov
cmp
or
push
or
clc
iret
add
or
cltd
sti
in
in
lods
push
cmp
vpscatterqq
ret
mov
lcall
mov
movsl
mov
shll
mov
mov
push
ficompl
clc
mov
mov
dec
lock
ficoml
add
sahf
push
mov
mov
cmp
cmp
aaa
xor
mov
xlat
push
mov
gs
mov
push
adc
test
xchg
imul
sbb
and
sahf
jle
insb
mov
adc
push
nop
dec
cs
xor
call
out
cmp
test
inc
int
sub
int
aaa
mov
cltd
xchg
shl
mov
cwtl
xor
pushf
ja
jle
les
mov
loop
inc
loopne
add
les
imul
xor
inc
sahf
insb
jmp
sub
test
scas
ljmp
jbe
push
stc
jb
loopne
ror
mov
hlt
jecxz
adc
clc
cltd
inc
aad
xchg
lea
fs
sub
ljmp
jne
add
jnp
mov
xchg
xchg
sbb
jno
sub
jl
orl
ja
push
test
adc
pop
dec
add
xchg
xchg
mov
test
pop
sub
adc
or
mov
repz
xchg
mov
imul
mov
and
ret
repz
add
cmp
mov
jbe
lret
cmc
adc
addb
fwait
jns
sub
stos
add
shlb
ss
arpl
ss
aas
jp
testl
leave
shl
sahf
test
dec
sti
pop
mov
dec
push
pop
mov
jge
xor
lret
sub
inc
mov
mov
lcall
in
inc
cmp
movsb
cmc
aad
ljmp
pop
dec
jg
fs
jg
xchg
fbld
xlat
pop
inc
fildl
adc
mov
xor
out
lods
test
repnz
add
and
fcom
sub
cmp
das
xor
adcb
out
lcall
in
data16
sbbl
xchg
hlt
sbb
push
popa
scas
cmp
cmp
sahf
in
lock
dec
lahf
mov
arpl
filds
outsb
movsl
push
adc
adc
cmp
test
dec
decl
test
sbbl
mov
aas
popf
stos
fstpt
pop
push
cmc
xchg
adc
jecxz
aas
push
out
mov
mov
out
sub
add
rclb
call
xor
loope
push
lcall
push
or
incb
cli
dec
sub
push
jecxz
adc
jb
jp
int3
rorl
mov
push
xor
std
sub
imul
aaa
fdivl
add
fistpl
jnp
inc
push
jl
adc
inc
mov
lahf
jmp
xchg
adc
jge
mov
cwtl
cmp
jp
inc
pop
sbb
ret
mov
stc
cmp
inc
jle
out
sub
popa
lods
pop
inc
test
inc
out
push
lds
mov
add
mov
mov
clc
push
lret
idivl
lods
sub
sub
jmp
or
jg
xor
and
out
out
rcll
fidivs
nop
cs
mov
data16
clc
or
test
cli
sbb
mov
or
push
mov
jg
xchg
add
filds
popf
xchg
in
leave
repnz
inc
ret
int
inc
pushf
icebp
or
decl
scas
out
leave
cmp
sbb
add
xlat
pop
scas
mov
movsl
fcomip
inc
mov
push
lret
fabs
mov
aad
in
fisubrl
sub
icebp
icebp
mov
ljmp
pop
cmp
mov
pop
add
xchg
add
mov
fdivrs
dec
cmp
cmp
popf
into
cmpsl
in
int3
add
sti
mov
pop
jmp
cmc
sbb
dec
xchg
cmp
adc
jnp
mov
rcll
dec
aam
cmpsb
xor
loopne
mov
sub
mov
add
arpl
cmp
sbb
jg
sub
sbb
ljmp
xor
fwait
outsl
push
xor
sti
add
pop
pop
jecxz
mov
inc
orb
mov
arpl
test
xchg
mov
add
pushf
or
rolb
repz
imul
or
jbe
int3
xchg
lds
or
xchg
cwtl
fistps
mov
xlat
das
ret
push
outsb
mov
andb
scas
jge
gs
cmpsb
aad
int3
jne
lahf
push
pop
pop
xchg
hlt
mov
fstl
ljmp
mov
dec
mov
mov
jns
mov
mov
or
adc
sub
xor
xchg
pusha
push
nop
outsb
out
es
ss
sbb
jno
movsl
test
inc
inc
mov
mov
jle
sbb
pop
insl
mov
sti
popf
ja
add
popf
dec
aad
xor
shl
test
push
out
dec
imul
es
mov
push
js
std
pop
or
pushl
jmp
in
and
push
mov
in
push
daa
nop
out
nop
sbb
sub
cltd
rcll
mov
dec
insb
sbbl
scas
dec
pop
dec
clc
orl
cld
test
fwait
adc
cld
adc
xor
xchg
fistpll
aaa
or
push
adc
or
sbb
outsl
push
xchg
cmc
mov
and
jae
es
out
lret
lods
xchg
pop
and
jg
cmp
and
mov
pop
test
mov
shrl
call
arpl
pop
mov
lods
out
bound
js
mov
outsl
mov
loop
outsb
lret
jl
ret
out
out
cmp
fldl
jnp
das
mov
imul
movsb
mov
mov
add
into
das
mov
mov
jecxz
int
adc
aaa
jne
fsubrp
mov
popa
arpl
pop
and
cmp
stos
in
fcmove
nop
inc
mov
fs
jbe
ret
sti
arpl
imul
push
stos
fisttpl
addb
outsb
test
jecxz
dec
icebp
mov
loopne
sub
dec
push
xlat
aad
pop
xlat
outsb
cmpsl
pop
push
in
fsubrs
cmp
push
mov
rorl
push
loopne
mov
cmpsb
mov
arpl
sti
sub
xchg
and
scas
jecxz
je
int
mov
gs
adc
push
add
and
aam
dec
cmp
arpl
ficompl
mov
add
mov
cmpsw
fwait
xchg
add
cmp
test
stos
stc
int3
sahf
lret
int
call
nop
cld
jecxz
add
rolb
movsb
push
xor
add
sbb
and
mov
outsb
sbb
mov
call
or
push
pusha
addr16
dec
inc
stc
sti
jg
sub
lcall
cltd
jnp
dec
adc
mov
nop
xchg
test
test
jne
ss
inc
mov
fbstp
sbb
loope
lock
int3
repz
idivl
stc
pop
pop
mov
dec
push
mov
out
pop
mov
test
mov
mov
js
cmpsl
xchg
xor
adc
inc
dec
dec
loop
xchg
add
jae
daa
out
push
xor
bnd
push
pop
jle
pop
mov
jno
imul
lea
aad
std
inc
inc
lods
pop
aam
xlat
jnp
sbb
aaa
imul
movl
push
jb
jl
stos
fimuls
sub
out
pop
add
pop
gs
pop
and
lahf
inc
popf
adc
xchg
leave
jnp
pop
loopne
sub
mov
adc
sar
aad
push
out
and
push
jb
adc
mov
andb
fisubl
enter
xor
xor
mov
mov
aam
cltd
inc
jmp
scas
into
rcrb
dec
push
push
xchg
jne
sahf
push
and
repnz
xchg
fmul
and
jno
int
idivb
push
out
jmp
fisttps
jae
lret
mov
mov
cmp
movsb
lea
xor
out
gs
rcrb
je
cmp
mov
adc
loop
fwait
mov
outsl
jno
xchg
pop
jnp
mov
adc
std
mov
lds
outsb
movsb
fs
mov
mov
cmp
mov
push
xor
rolb
sub
jns
mov
cmp
lods
lcall
loope
pop
pop
add
and
mov
mov
inc
enter
nop
pop
outsb
arpl
mov
lret
fiadds
jg
xchg
xchg
int3
inc
mov
lods
mov
addr16
push
lahf
xor
rcrl
mov
or
mov
out
dec
rclb
inc
fbstp
aad
jo
adc
test
in
dec
hlt
cmp
aad
shl
sub
xchg
mov
mov
rcl
dec
add
aas
xchg
pop
sub
xchg
arpl
jbe
int3
test
addr16
mov
js
mov
rcrl
xlat
inc
sbb
sarl
repz
test
sbbl
cs
aam
push
mov
fcmovnbe
out
addr16
les
sahf
jmp
xchg
dec
xor
icebp
pop
cmpsb
sub
xor
sahf
hlt
and
pop
xor
xor
jle
sar
sbbl
sbbl
test
mov
mov
cld
outsb
inc
ja
dec
jns
or
mov
adc
lds
xor
imul
cmp
shlb
or
xchg
and
mov
or
jl
movsb
notl
scas
mov
xchg
and
add
cmpl
jl
mov
pop
and
into
std
rclb
pop
loopnew
rcr
out
inc
mov
xchg
inc
add
dec
mov
sete
call
lfs
push
cmp
ljmp
adc
or
stc
nop
mov
pop
imul
dec
jge
outsb
lret
in
inc
outsl
cli
popf
int3
outsl
push
xor
lods
hlt
cmc
cmp
leave
cmp
repz
cwtl
xchg
adc
test
dec
je
push
cmp
cli
clc
outsb
call
or
sbb
add
jb
out
sarl
mov
inc
imull
sbb
cld
and
lret
sub
scas
cmp
xor
pop
push
pop
jge
or
js
mov
test
pop
gs
lds
or
push
jno
gs
enter
lods
mov
iret
mov
test
out
scas
mov
aam
dec
pop
xchg
test
lcall
add
fmuls
add
in
mov
mov
cwtl
pop
xchg
push
mov
in
mov
sbb
mov
ror
mov
gs
xorl
xor
mov
lcall
mov
popf
addr16
shr
stos
inc
mov
bt
gs
insl
xchg
jnp
mov
xor
mov
push
sub
stos
dec
dec
enter
or
addr16
mov
jl
mov
fnsave
andb
clc
vaddsubps
xor
jnp
bound
xchg
pop
dec
fdivl
movsb
mov
inc
xor
lahf
subl
push
jno
stc
in
or
dec
das
mov
pop
mov
add
add
cli
sub
out
push
imul
inc
sahf
cmp
cmp
jno
cltd
add
test
sbb
in
enter
fs
pop
lea
mov
mov
mov
bound
insl
xchg
fadds
sub
sbb
push
xor
jbe
push
xchg
jg
mov
lods
mov
lds
int3
fnstcw
xor
cli
sbb
cs
cmpsl
xlat
push
mov
out
ljmp
push
xor
ljmp
inc
mov
and
cmp
mov
mov
divb
mov
iret
dec
xchg
into
bound
je
ucomiss
jmp
out
mov
adc
mov
pop
sbb
fisubrs
sbb
outsl
cmp
outsl
testl
aas
inc
je
cmp
scas
inc
test
xchg
mov
mov
dec
xchg
mov
int3
sahf
and
dec
mov
inc
sarl
hlt
push
notl
pop
test
push
rorl
xorb
pushf
xor
mov
pushf
lock
dec
cmp
stos
push
imul
sub
pop
stos
dec
and
add
fisttpl
and
xor
cli
hlt
in
pop
mov
sbb
mov
xchg
mov
mov
jnp
fists
mov
lods
shl
aad
xchg
leave
repnz
orb
out
push
data16
popa
test
shlb
xchg
fscale
pop
jle
pop
repnz
and
push
addr16
in
pop
jb
jns
adc
mov
mov
or
jbe
test
xchg
aas
adc
mov
test
jl
mov
fsts
test
sbb
inc
sub
movsb
xchg
lods
mov
push
add
pop
add
mov
stc
loopne
lods
xchg
repnz
pop
fdivl
cld
mov
enter
outsl
mov
cmp
nop
mov
dec
jns
test
dec
insb
lahf
stc
mov
xor
push
mov
mov
mov
imul
push
mov
mov
sbb
mov
out
mov
mov
dec
xacquire
cmpsb
test
lods
and
mov
fsubr
clc
ds
sahf
in
jnp
mov
dec
adc
dec
mov
jmp
and
push
sahf
jecxz
mov
frstor
loopne
movsl
leave
push
in
inc
ljmp
and
mov
pextrw
or
js
jnp
test
sti
lcall
fwait
push
cs
or
arpl
mov
scas
ja,pn
aam
pop
xor
idivl
sub
aas
jmp
mov
int3
pop
mov
cmc
push
mov
xor
cwtl
fwait
adc
mov
mov
in
cmpsl
movsb
jnp
gs
add
lods
xor
test
add
and
cld
lods
xor
and
or
sti
es
sahf
xor
ja
jne
xor
data16
ja
cmpsb
shrl
xlat
inc
into
cld
pop
test
adc
mov
inc
dec
dec
jns
mov
or
lds
or
mov
sub
add
cmp
mul
inc
cmp
lea
aaa
lret
sub
clc
sbb
cmp
mov
adc
jb
cmp
pop
lods
pop
stos
bound
bound
inc
xchg
jb
pop
jle
push
daa
or
or
push
ror
inc
push
push
repnz
das
sarb
ret
jno
xor
inc
pop
rcl
lea
lock
ret
pop
repz
mov
ds
push
or
in
sbb
fstpl
popf
dec
fwait
cwtl
aad
push
xchg
popf
xchg
pushf
sub
aam
fwait
popf
cmp
xchg
rcrl
pop
add
dec
addr16
jecxz
adc
inc
popf
int3
or
adc
mov
scas
push
dec
cwtl
push
xor
pop
hlt
fwait
cld
jbe
insb
in
cmp
mov
mov
pop
cmc
and
xchg
mov
sbb
sub
lcall
inc
ds
sbb
or
xchg
jb
outsl
and
push
inc
dec
push
in
jo
cmpb
shll
xchg
pushf
mov
or
popf
pop
iret
xor
push
mov
test
scas
mov
rcrl
xchg
push
pop
scas
push
xchg
out
jns
fwait
sbb
mov
push
jbe
or
ljmp
sub
cmpsb
jg
popa
std
into
and
add
scas
mov
sar
push
ret
xchg
sbb
fcoms
xchg
popa
daa
pop
inc
in
loopne
rclb
jge
dec
push
xor
icebp
jle
addr16
sub
or
cwtl
test
push
rcrb
cmpsl
fiaddl
test
in
cmc
sub
fsts
jp
test
mov
or
or
lods
push
cmp
cmp
add
sbb
add
mov
stc
mov
stos
ljmp
add
stc
mov
insl
repnz
push
test
insl
pop
add
push
sbb
or
push
jbe
ss
shll
movsl
sub
adc
movb
bound
push
out
mov
mov
notl
lcall
jo
xchg
mov
sahf
xor
je
jo
aas
es
pop
dec
jbe
sahf
jbe
jbe
pop
repz
pop
mov
inc
aas
cltd
popa
sarl
fildl
push
xor
ret
lcall
lcall
add
or
xor
aas
movl
popf
xchg
lock
inc
mov
add
mov
pop
cmp
aas
test
cwtl
dec
and
fisttpl
cli
or
loopne
sub
push
dec
es
mov
aas
outsl
adc
fildl
in
push
fists
sbb
std
int3
cs
sar
pop
out
mov
hlt
fucompp
ljmp
rcrl
aam
loope
out
scas
repnz
nop
aaa
mov
adc
sub
push
insl
into
add
mov
clc
sbb
sbb
bound
sbb
push
xor
cmp
sti
push
dec
adc
pop
aaa
xchg
stos
jmp
fcmovnb
std
xchg
scas
ljmp
mov
dec
or
nop
cmp
push
out
jl
xchg
push
lds
icebp
mov
data16
sti
lret
lock
ret
cmc
xchg
inc
add
mulb
mov
dec
pop
sub
sbb
fdivrl
jg
sub
xor
and
data16
lods
mov
insl
dec
cvttps2pi
ret
nop
or
xchg
jo
mov
repz
pushl
lret
adc
ret
lret
pop
aad
sbb
dec
idivb
or
mov
jg
data16
popf
outsb
imul
in
jo
fsubrs
mov
inc
pusha
xor
mov
mov
dec
aas
xchg
jg
notl
notb
insl
mov
fdivs
dec
push
jmp
stos
push
pop
add
add
arpl
jl
xchg
or
inc
dec
jne
dec
xor
jo
xchg
shll
add
push
in
out
dec
sub
lret
sub
dec
std
stos
int
mov
scas
js
adc
frstor
jecxz
pop
mov
mov
pop
push
aaa
push
xor
loopne
ss
js
jbe
imul
mov
sub
push
sub
and
push
int
lods
push
lock
testl
mov
pop
push
mov
adc
xchg
pop
inc
add
jmp
sub
cltd
stos
xor
mov
add
xchg
mov
sub
daa
loop
data16
push
dec
cmp
ds
addr16
fsubp
xchg
pop
jae
pop
sbb
shl
cmp
out
ljmp
jo
jmp
shlb
inc
dec
test
test
pusha
sbb
mov
imul
adc
or
push
and
xor
mov
and
pop
and
cltd
pop
shrb
repnz
roll
aad
inc
sub
push
out
xor
mov
jnp
mov
dec
sbb
rcrb
jg
dec
xchg
leave
fstps
adc
xchg
mov
dec
lods
xchg
cs
rcll
sub
mov
push
jne
insb
push
dec
test
xor
lds
gs
xchg
daa
jns
jo
add
sbb
xlat
mov
das
pop
jmp
mov
pop
int3
sub
mov
dec
mov
adc
int3
adcl
adc
jmp
ja
insl
mov
dec
push
mov
sbb
mov
scas
jne
icebp
in
imul
bound
lret
cmpsl
fists
pop
pop
shlb
imul
daa
aad
cs
sahf
push
mov
dec
ftst
daa
imul
jge
pop
mov
cs
push
sub
add
out
mov
popa
rorl
and
ds
pop
add
inc
test
stos
stos
mov
mov
pusha
pop
cmp
notl
dec
movsb
xchg
jbe
dec
jb
repz
pop
lock
out
shr
pop
mov
mov
push
mov
addr16
shrb
lcall
mov
xchg
push
add
popa
ror
into
out
push
add
and
push
hlt
push
cmp
mov
lods
test
or
adc
and
cmp
jae
pusha
das
xchg
data16
inc
cmpl
mov
jmp
mov
bound
xor
aaa
addb
sub
dec
es
mov
mov
push
in
sbbb
mov
lret
pusha
iret
sti
movsl
test
inc
imul
imul
gs
mov
add
xor
add
outsl
pop
inc
dec
ljmp
mov
xor
mov
mov
mov
add
pop
add
lods
mov
es
mov
jecxz
pusha
sub
and
orb
lock
lret
cs
xor
loop
lret
push
cmpb
or
cmp
loope
negl
imul
sahf
pop
adc
mov
scas
scas
sti
sbb
mov
mov
inc
nop
fs
mov
std
in
push
gs
or
fwait
enter
cmp
pushf
clc
std
sahf
inc
scas
xlat
pop
pusha
or
popf
mov
movsl
xlat
lret
mov
adc
adc
sbb
or
push
push
cwtl
shl
movsl
mov
pop
add
gs
pop
jno
lahf
pushf
mov
xchg
aas
notl
xchg
add
jae
gs
iret
add
xor
adcl
enter
ret
sbb
dec
addr16
and
repnz
pop
loope,pn
lcall
pop
xchg
ja
cli
std
adc
mov
push
in
cld
xchg
jle
jo
pop
push
jnp
jmp
xor
movsl
bound
stc
mov
mov
xlat
loop
pop
insb
aas
xor
sub
shld
jb
or
popa
xor
addl
les
mov
dec
cmp
mov
push
push
std
sub
mov
jne
mov
xor
or
mov
mov
cmpsb
push
ja
mov
cmc
dec
repnz
sub
std
push
jno
aaa
int
adc
or
mov
arpl
fidivrs
frstor
lahf
mov
mov
pop
and
and
push
aad
imul
in
cmp
or
insb
ret
sbb
push
mov
mov
pop
sub
jns
push
pop
xchg
sbb
cmpsb
popf
shlb
cmpsl
out
test
jne
ja
dec
sarb
jp
sbb
sub
xor
rcl
and
fisubrs
es
shlb
dec
jns
shlb
hlt
test
inc
scas
add
loopne
scas
inc
xor
adc
ljmp
jl
test
out
xchg
cwtl
scas
das
std
mov
cmpb
lods
loop
jno
xlat
and
mov
clc
outsb
xor
mov
cwtl
cmpsb
adc
mov
mov
out
movsl
out
adcl
loopne
cmp
js
in
or
cli
jecxz
mov
sub
cmp
cmpsl
adc
sbb
fsub
filds
cs
rol
mov
lret
dec
int
mov
nop
lcall
outsb
lds
push
scas
pop
ret
loopne
into
push
jg
leave
cmp
cmp
jbe
dec
jle
jno
shlb
lahf
and
or
stc
insb
hlt
in
push
and
push
clc
jae
repnz
jmp
xor
or
dec
jmp
packuswb
sbb
loopne
inc
and
std
dec
es
cld
aam
test
daa
sub
out
out
mov
js
lahf
into
and
test
lret
xchg
mov
xlat
pusha
insb
out
add
sub
es
enter
loop
enter
aaa
jp
mov
xchg
in
and
adc
dec
rcr
jmp
shll
sub
nop
mov
inc
out
inc
jne
mov
hlt
fwait
aas
lock
push
lret
mov
inc
and
jbe
seta
cmc
cmp
dec
aas
dec
fcmovb
scas
mov
or
push
jle
data16
outsb
test
sub
in
mov
mov
mov
notb
orl
inc
xchg
mov
cmp
ss
mov
sbb
xchg
mov
call
add
dec
cmp
mov
adc
mov
test
pop
lds
push
cmp
pop
decb
cs
andl
decl
pop
adc
pop
pop
clc
es
bound
mov
and
lds
jb
cld
mov
add
pushf
cmp
jnp
jle
or
xor
scas
inc
inc
jno
adc
mov
fistps
jg
fisubrl
sahf
fs
stos
cmc
adc
mov
icebp
cli
dec
divl
sub
std
push
sbb
push
vmovaps
pusha
mov
outsb
mov
fildl
frstor
test
push
cmp
xchg
fsts
into
xchg
push
lods
aas
add
in
cltd
jecxz
scas
in
jbe
filds
sub
scas
and
xchg
aam
es
into
mov
add
enter
fistpll
inc
add
adc
repnz
arpl
lcall
movsl
xchg
sub
adc
or
clc
mov
jae
sub
mov
dec
jg
outsb
dec
fs
adc
testl
cmpsl
imul
cs
pop
fisubrs
rol
shlb
ret
push
faddp
nop
and
outsb
rclb
icebp
adc
lods
pop
js
push
clc
xorl
mov
mov
push
sahf
lods
xchg
dec
gs
or
loopne
call
adc
jae
push
lea
cmp
adcb
jmp
mov
jp
sub
dec
xor
xchg
test
dec
repnz
out
fildll
mov
jle
cmpsb
push
imul
nop
or
loope
inc
ljmp
pop
popa
mov
push
pop
lret
dec
sub
pop
lret
les
inc
mov
inc
xchg
mov
mov
sub
dec
mov
adc
mov
adc
push
out
cmp
mov
int
jnp
push
xor
pop
daa
push
xchg
std
out
int3
outsl
xchg
or
test
scas
adc
addr16
shlb
sbb
jnp
scas
mov
adc
pop
dec
sahf
sub
xor
ret
cli
fdivrl
out
adc
cld
or
cmpsl
and
outsb
pushl
push
rolb
xchg
imul
movsl
bound
xlat
mov
dec
fwait
insb
fstpt
jno
mov
lahf
xor
jns
dec
xchg
outsl
inc
out
push
mov
cmpsb
dec
and
xor
dec
lds
xor
xor
lock
adcb
inc
jo
pop
mov
es
mov
pop
mov
gs
cmp
aad
push
push
inc
lahf
aaa
push
repz
clc
setle
in
sub
inc
lods
leave
mov
daa
es
xorb
loop
adc
or
ss
outsb
int3
imul
and
movsl
pop
xchg
xchg
jle
cmc
push
lret
sbb
scas
iret
js
fdivrl
or
mulb
mov
add
add
push
call
out
inc
cs
sub
sahf
or
mov
mov
scas
jnp
out
mov
mov
sbb
xchg
jae
mov
mov
sbb
mov
jae
pop
sub
dec
pop
mov
cmp
pop
and
mov
xor
pop
rcll
xchg
arpl
and
adc
repz
or
mov
jp
or
adc
mov
mov
fucom
scas
lahf
movsl
jge
mov
fsts
pop
xchg
pop
mov
sub
xor
repz
xchg
jae
mov
subb
push
clc
inc
sub
cmc
and
mov
sbb
cmpsb
mov
shll
mov
mov
mov
inc
fs
inc
and
test
je
or
xlat
sub
jns
push
mov
dec
les
and
shlb
into
mov
stos
enter
popa
shl
loopne
jne
or
jnp
test
in
test
into
or
jne
mov
decl
lds
cld
ja
fimuls
xchg
xor
add
mov
das
scas
test
inc
movsb
bound
shrl
or
xchg
pusha
jb
repz
sti
dec
inc
gs
jns
mov
cmp
xor
loop
cltd
adc
ds
add
sti
mov
jge
jmp
xchg
mov
xchg
xor
pop
and
iret
xchg
mov
cmpsl
cs
cmp
xor
cmp
jecxz
mov
insl
daa
push
sub
adc
int
jns
fsubs
aaa
cmp
push
xchg
push
push
fs
sbb
nop
je
leave
push
jne
xor
mov
sub
into
pop
lret
out
add
imul
scas
scas
loopne
inc
sub
xor
add
pop
xorb
jmp
movsb
xorl
outsb
negb
stc
popa
xchg
sbb
mull
fdiv
stc
int3
add
jns
aam
fdivrl
inc
mov
pop
mov
add
add
add
pop
lahf
push
add
push
imull
inc
inc
fcompl
in
mov
ljmp
into
mov
lods
out
push
inc
jle
call
xchg
pop
adc
push
mov
lcall
jg
xor
mov
cwtl
cmp
add
inc
pop
stos
mov
es
xlat
out
add
mov
add
js
cmp
push
add
push
mov
cltd
jne
fimuls
imul
repz
cwtl
lds
int
bnd
and
es
dec
mov
or
jg
cmpsl
shr
mov
pop
mov
ja
sbb
notb
cli
or
mov
mov
in
pop
int
ficomps
mov
xor
adc
mov
xor
pop
mov
out
out
xchg
in
jne
mov
loopne
dec
sub
add
add
fnstenv
out
sbb
in
jg
push
add
lds
pop
jo
mov
mov
xchg
fsubrl
or
mov
mov
ds
pop
fwait
loopne
movsl
pop
cwtl
cltd
imul
cmpsl
xor
add
lret
insl
mov
movsb
mov
insb
or
cmp
dec
fldcw
in
push
shrl
fimuls
fildll
add
pop
test
mov
imul
stos
adc
jecxz
sbb
pop
or
dec
sti
shrb
mov
mov
fsubr
test
sbb
out
in
iret
inc
lock
xor
test
ja
cli
mov
ret
push
test
jne
loop
xor
fwait
gs
jecxz
cmp
js
popa
mov
xor
add
mov
jl
cmp
fsubr
inc
ret
jae
add
lcall
push
sbb
sub
inc
into
int3
push
mov
sbb
jge
xor
mov
jo
adc
in
cmp
xchg
data16
sbb
jno
sub
test
ret
sbb
in
mov
mov
jb
mov
or
add
addb
jp
add
dec
adc
xchg
repnz
mov
das
push
int3
push
scas
adc
mov
shlb
scas
sub
int
stos
pop
adc
and
and
or
ret
lods
testb
xchg
scas
pop
lea
shl
stos
xor
xor
enter
xor
push
mov
loop
movsl
shrl
out
dec
lods
inc
sbb
sbb
jp
pop
inc
rorl
int
lahf
imul
inc
push
ror
add
pop
loopne
aas
adc
enter
mov
mov
sub
xchg
mov
dec
push
dec
dec
ret
cmpb
scas
in
inc
imul
or
pop
and
sbb
rolb
cs
xor
sub
sub
dec
repz
xor
cli
push
pop
mov
sub
fcoms
mov
xchg
mov
hlt
js
mov
clc
popa
fcompl
or
push
jns
sbb
adc
cli
sub
sub
aad
cli
sbb
cltd
sub
add
mov
inc
fsubl
aad
cltd
insl
stos
jecxz
jae
dec
popf
jl
fidivl
and
pop
xorb
mov
mov
add
hlt
call
cmpsb
lods
test
mov
sahf
sbb
inc
add
jp
cmp
mov
pop
aas
and
cmc
pop
arpl
int3
pop
adc
pop
inc
mov
cmpsb
mov
imul
mov
sub
insl
dec
sbb
insl
ja
pop
mov
lahf
dec
test
xor
sub
pop
imul
nop
mov
mov
scas
sahf
clc
inc
out
pop
inc
mov
lret
or
mov
pop
inc
out
mov
cmc
inc
cmp
xchg
sti
or
and
push
sub
ljmp
stos
imul
fs
jle
mov
mov
loope
mov
inc
cmpsb
mov
cmp
jo
cmp
ror
mov
imul
dec
repz
cmp
arpl
mov
cld
xor
je
ret
lahf
or
lahf
mov
arpl
inc
fcoml
cmp
int
test
test
mov
cli
movsl
mov
mov
aas
shl
sbb
sbb
sub
sub
jmp
mov
adc
lea
outsl
fwait
or
rclb
xchg
pop
ret
loop
out
fsubrs
adc
jnp
or
push
mov
dec
cmp
pop
aas
hlt
inc
enter
fwait
lahf
das
fwait
imul
adc
mov
inc
push
int3
xchg
push
mov
jb
popf
inc
scas
cltd
jne
cmc
cmp
rorb
or
jg
mov
jb
or
mov
imul
leave
out
mov
sqrtps
mov
xor
sub
jmp
xor
sbb
iret
mov
xchg
adcl
enter
imul
mov
fildll
ljmp
dec
jp
sbb
movl
out
dec
inc
shl
xor
fwait
add
fildl
push
aas
sbb
push
je
jecxz
push
push
push
pop
in
in
pushf
pop
mov
fucomp
inc
sbb
mov
clc
dec
std
aas
inc
mov
outsl
insb
hlt
cwtl
cmp
leave
push
xor
or
cmp
aas
repnz
cmp
jae
lods
push
fsubrp
cmp
push
xchg
pop
shrl
sub
int
shrl
leave
xorb
lret
andl
jecxz
arpl
push
ljmp
ljmp
stos
lea
or
add
add
jbe
jae
divb
pop
imul
dec
scas
call
xchg
or
ret
or
mov
mov
int
pop
xor
mov
and
cld
cmp
adc
subb
cli
mov
mov
pop
cmp
mov
ljmp
test
nop
jle
fidivrl
sbb
push
arpl
pop
cmpsb
inc
pusha
mov
or
inc
sbb
out
xchg
cmp
cmc
adc
pop
testb
and
cld
adc
push
mov
mov
testl
jns
js
xorb
std
into
cwtl
or
loopne
mov
or
mov
pop
out
and
push
in
out
aas
in
rcl
xchg
cli
add
scas
lahf
jmp
stc
repz
arpl
aam
sbb
test
adc
pop
orl
push
cs
mull
adc
movsl
std
lcall
xorb
mov
sbb
push
cltd
mov
jcxz
cltd
push
call
cmp
xlat
je
dec
cmc
pop
clc
ljmp
mov
mov
mov
rcrb
push
sti
loop
es
test
jle
ss
jno
fdivrl
or
popf
fs
addr16
sar
xchg
pop
push
movsl
inc
cmpsl
mov
dec
repnz
aaa
stc
or
lock
std
xor
std
cld
inc
pop
mov
jbe
jp
push
in
add
add
fwait
xor
or
jl
ror
push
loop
sub
xlat
mov
call
jl
lahf
test
jmp
inc
sub
sbb
add
repz
sbb
mov
pop
push
jecxz
jge
jmp
orb
out
and
arpl
add
sub
aad
pop
inc
lcall
aaa
sbbb
mov
mov
cmp
cwtl
out
mov
lahf
inc
mov
mov
nop
enter
cmc
push
mov
loopne
loopne
fnstcw
sub
xor
add
leave
lahf
jb
enter
in
push
sub
fisubrl
es
iret
or
out
arpl
jae
mov
push
imul
add
in
or
shlb
rorl
repnz
std
icebp
xchg
jnp
push
mov
mov
add
cld
inc
mov
shl
mov
xchg
lds
inc
xchg
push
xchg
push
jecxz
push
dec
testl
mov
jb
pushf
lock
aam
inc
sub
movsb
je
fbld
lds
loop
cs
scas
les
fistps
fs
adc
push
es
xor
jl
mov
shlb
fldln2
push
jnp
pusha
popf
inc
sbb
mov
les
push
xlat
dec
cli
push
jp
cli
sub
stc
mov
rcll
adc
jl
add
imul
push
aam
jecxz
mov
mov
data16
rcr
lock
cmc
cmp
push
inc
pop
testb
mov
js
int
fcompl
pushf
mov
ret
cs
fdivs
adc
test
mov
imul
jo
lcall
mov
bound
into
negb
mov
gs
icebp
push
or
sbb
or
xchg
xchg
inc
sbb
jae
cmp
stos
fisubs
cvtps2pd
es
inc
loope
lret
push
test
shll
imul
pushf
push
ja
xchg
repnz
subb
mov
ss
fsts
cs
adc
dec
or
lods
xchg
lods
xchg
mov
xor
stc
inc
mov
sub
sbb
add
and
imull
fisubrl
mov
cmp
andl
fisubs
mov
stos
jo
imul
js
mov
mov
clc
call
cmp
push
mov
movsb
push
mov
add
mov
adc
out
push
in
add
jg
inc
flds
leave
inc
cmpsl
sbb
jecxz
xor
xor
add
sub
shrl
fisttpl
loopne
push
and
jnp
mov
pop
nop
jne
out
push
mov
addl
ja
movsl
and
jo
push
and
inc
js
mov
js
in
div
jnp
xchg
sbb
mov
xor
jecxz
fs
mov
pop
sbb
fwait
and
pushf
mov
imul
dec
adc
ret
or
sub
cmc
loopne
daa
jge
pop
add
mov
jo
pushf
inc
jno
mov
or
dec
push
dec
mov
call
stos
das
popa
or
shrb
inc
cmp
or
jge
inc
sarl
and
mov
inc
imul
xor
pushf
mov
lahf
into
imul
xchg
movsb
adc
je
lahf
ja
jge
xchg
daa
lcall
cli
dec
scas
push
addb
es
xor
test
mov
test
jle
adc
rcll
push
inc
cmp
mov
add
push
or
jno
and
and
enter
mov
sub
into
adc
xor
dec
adc
or
adc
sub
mov
loop
mov
data16
dec
sub
rcrl
imul
push
mov
int3
shl
cmp
add
stos
popa
gs
xchg
sbb
jno
lret
mov
loop
or
and
jbe
pop
mov
push
add
pop
push
fists
adc
sub
adc
in
imul
dec
sti
jle
dec
enter
jno
or
push
dec
test
cmpsb
sub
sarb
mov
mov
je
les
inc
lods
adc
fcompl
mov
callw
mov
dec
push
nop
les
dec
push
mov
and
leave
fdivrs
jae
xor
scas
inc
mov
push
cltd
inc
mov
pop
pushf
pop
inc
mov
push
xchg
ds
add
mov
out
xor
sahf
xchg
push
pop
mulb
inc
std
push
sub
mov
in
arpl
out
xor
sbb
jg
push
out
push
pop
mov
aas
pop
and
xchg
cmp
scas
loopne
add
lret
and
pop
fidivs
inc
sub
xchg
jmp
adc
sbb
decl
sub
lret
xor
fists
mov
testl
pusha
ficomps
cmpsb
icebp
xor
add
xchg
inc
adc
push
push
cmp
add
mov
push
dec
lret
mov
xchg
xchg
jg
mov
dec
lods
lds
sub
inc
std
jbe
jmp
aaa
fs
ss
les
pop
or
xor
stos
pop
jmp
xlat
aaa
adc
mov
dec
lods
pop
fstpt
jecxz
adc
mov
fwait
daa
adc
xchg
mov
or
jecxz
inc
and
pop
mov
sbb
in
xchg
lock
inc
dec
gs
dec
lret
xchg
inc
pushf
mov
loop
shll
adc
fnstsw
roll
fstl
imul
mov
xlat
pop
dec
xor
testl
and
loop
shlb
xchg
jmp
add
mov
mov
int3
push
out
sbb
cmp
stos
pop
lea
cmp
sub
sub
mov
cwtl
ret
hlt
rcll
rcll
call
sbb
mov
out
cltd
adc
repnz
push
addr16
jmp
or
test
fbld
pop
fdivrl
fistpll
fmull
test
mov
popl
jl
out
roll
pushl
sti
add
in
sub
inc
mov
xchg
jne
stos
repz
insb
cmp
cwtl
push
test
pop
sub
stc
add
imul
xchg
mov
shlb
cmp
enter
in
pop
inc
call
jo
fadd
inc
inc
xor
jl
lcall
int
ds
lods
lcall
xchg
repz
lcall
imul
push
mov
insb
mov
mov
loopne
iret
mov
dec
loope
lods
inc
cmp
and
add
jbe
jge
cs
pop
lods
and
adc
fwait
imul
cmp
in
jle
fiaddl
jmp
shufps
cmp
inc
fidivl
pushf
std
rcrb
das
or
insb
ja
push
sbb
sarl
xor
popa
adc
cmpsl
push
jb
dec
jo
in
or
lods
mov
push
and
rclb
addr16
jne
inc
stos
mov
push
mov
neg
mov
adc
mov
inc
inc
sub
lods
int3
jo
jnp
push
mov
aaa
pop
scas
lds
ja
test
sbb
sub
mov
sub
rclb
fmuls
inc
cmp
push
es
mov
dec
push
imul
insb
insb
lea
push
sub
add
jo
mov
pop
cli
inc
aaa
mov
jo
adc
sub
inc
loope
out
mov
adc
outsb
hlt
ljmp
insl
ja
mov
sbb
or
mov
cmpsl
jg
clc
or
fisubrs
mov
pop
jp
pushf
stc
test
push
inc
pop
movsl
sbb
inc
dec
dec
addr16
ja
fcmovnu
outsl
xor
lcall
jnp
sahf
add
insb
mov
cmpsl
sub
pop
cmp
in
les
push
pop
lea
test
loope
push
ss
cmp
divl
test
push
xchg
xchg
add
lcall
and
imul
loop
or
xchg
lret
jl
loope
and
popa
adc
jb
int3
aas
ret
mov
push
inc
pusha
out
int
in
aam
jecxz
cmpsl
adc
sub
pmuludq
pop
xchg
movsb
ret
pop
test
clc
xchg
push
shll
add
cmp
add
adc
dec
jg
addr16
mov
roll
ror
mov
dec
testb
mov
push
mov
lds
je
mov
test
jl
push
mov
loope
mov
ljmp
in
fimull
or
xor
mov
mov
in
or
pop
pop
inc
out
fbstp
ds
into
cmp
aam
push
cmpl
inc
push
stos
jmp
call
mov
mov
xchg
jle
mov
dec
cmpsl
cmpsb
ja
jp
push
jmp
pop
add
cmpsb
test
int
enter
mov
and
call
jbe
dec
insb
shll
inc
add
cmp
inc
repz
es
insb
dec
push
lock
cmpsl
mov
xlat
jge
sti
jnp
lret
adc
xor
xor
xor
xor
outsl
daa
sub
and
adc
inc
and
mov
sbb
jle
int3
sub
fs
lock
cwtl
and
repnz
sbb
out
dec
jp
nop
test
xchg
aam
cli
lock
sahf
aad
scas
loopne
xchg
out
mov
sub
ret
mov
jmp
outsb
jbe
fwait
mov
nop
aam
xor
outsb
inc
test
pop
aas
loop
clc
adc
pop
sub
pop
lds
pop
jno
std
test
xchg
mov
fdivs
mov
inc
mov
testb
fdivrs
dec
sbb
cmp
fistps
and
call
push
cmpl
pmullw
sbb
push
push
adc
xchg
cltd
or
decl
fidivs
and
jle
out
loopne
pop
dec
jle
push
jno
fs
xor
shl
loop
and
xor
shlb
imul
test
jecxz
imul
jmp
lahf
insb
out
jnp
das
bswap
insb
cmpsb
pop
pop
je
lret
insb
cld
dec
aaa
lock
fisttpll
jecxz
pop
mov
mov
pop
outsl
pop
and
add
out
sti
data16
lret
or
push
fsub
fstp
fsubrs
lahf
loop
adc
icebp
stos
cli
mov
inc
mov
push
fdivl
clc
fcoms
jge
pop
loop
aaa
repz
pop
and
mov
or
push
loope
cwtl
pop
xlat
or
cltd
cmp
daa
idivb
jo
adc
pop
mov
mov
sti
js
je
je
loopne
testl
xchg
add
and
out
aas
cwtl
cmp
add
inc
popf
scas
arpl
dec
insb
and
dec
pop
fcoml
push
jmp
and
cmc
ljmp
jp
xchg
fstpt
jmp
xchg
mov
lds
push
sub
inc
push
mov
std
sub
lods
sbb
clc
or
lret
adc
sbb
xor
push
pop
mov
loopne
and
jecxz
pop
sub
and
push
or
push
mov
fchs
push
pop
dec
and
cmpsl
popa
jecxz
sbb
sub
dec
negl
push
out
gs
jg
mov
shll
repz
sbb
mov
add
mov
sbb
mov
dec
push
mov
sbb
int3
loopne
pop
aaa
xor
jno
push
sti
shrl
daa
enter
shl
addb
in
push
leave
xor
mov
in
push
jle
out
out
push
sub
pop
mov
push
dec
lahf
mov
mov
mov
mov
sbb
sub
aas
fsubl
hlt
insb
cwtl
ret
fldl
adc
shr
xchg
and
pusha
aas
cmp
xor
lock
in
out
xor
push
ljmp
mov
dec
xchg
cmp
aad
and
test
ss
mov
int
jge
in
adcl
add
popa
rol
xchg
push
repz
xlat
pop
and
adc
push
ret
mov
and
xchg
js
insb
dec
mov
inc
sbb
mov
push
or
in
lcall
ret
adc
jmp
imul
lods
adc
jns
in
inc
jge
loope
mov
add
scas
daa
jl
add
mov
mov
enter
add
adc
nop
mull
lret
repz
mov
pushf
sbb
and
cltd
into
pop
movsb
test
cli
push
pop
push
sbb
fnclex
push
negl
iret
enter
fdivrl
add
bound
dec
mov
shr
jnp
dec
xorb
lea
mov
enter
imull
jl
mov
rclb
mov
lds
ja
ss
mov
pop
lea
mov
aam
pop
jns
test
and
mov
cs
test
push
test
cmpsl
std
rcrb
popa
inc
out
cmp
push
lods
sbb
dec
scas
push
call
add
xor
inc
outsl
xchg
and
out
rcrb
movsl
or
push
xchg
insl
loopne
mov
push
add
sub
inc
fisubl
pop
ds
pusha
xlat
mov
outsb
rcrb
and
popa
test
push
in
sbb
fs
jns
ret
divps
rolb
hlt
pop
pushf
sub
dec
and
mov
cwtl
mov
inc
pusha
dec
les
cmpsb
pushf
or
ds
and
push
jns
aad
scas
outsl
mov
lret
addr16
adc
nop
outsb
dec
mov
push
ja
enter
adc
adc
imulb
shll
and
add
cmpsl
inc
into
pop
xchg
mov
cmp
flds
mov
insl
mov
sub
dec
cmpsb
pop
push
outsl
fmuls
and
pcmpgtd
jb
fisubl
aaa
scas
sub
sahf
mov
jge
xor
xor
cmpb
out
aad
mov
push
inc
jmp
push
jbe
fs
psubusw
jbe
aad
sti
fmuls
and
std
pop
add
add
test
jecxz
pushf
shrb
testl
fsubrs
nop
stc
sub
dec
pop
test
mov
jp
inc
mov
rclb
in
and
jb
mov
sbb
insb
and
adc
sbb
iret
add
or
notb
pop
stos
out
stc
mov
cmp
mov
sbb
lret
sbb
int
and
bound
xchg
dec
gs
scas
mov
ja
iret
inc
arpl
or
insb
inc
cmp
mov
sub
test
fnstcw
mov
dec
pusha
push
mov
int3
jae
ja
mov
sti
gs
inc
jl
inc
stc
xor
ljmp
add
mov
adc
jbe
call
xlat
inc
jl
gs
out
xorb
inc
cmp
add
add
and
jecxz
cmpsl
insb
jae
mov
dec
jge
lahf
sbb
hlt
nop
loope
scas
mov
cmp
push
in
inc
sbb
cmp
cmp
pop
mov
sbb
cltd
hlt
push
add
or
sahf
jbe
ja
cld
cmp
or
dec
fidivl
hlt
shlb
out
jno
movsl
jo
lods
add
aaa
call
lret
and
and
ljmp
jmp
stos
or
jp
mov
fdivs
sahf
or
cmpsb
insl
jae
mov
push
mov
ss
adc
mov
add
sub
mov
aad
sub
mov
add
cld
xchg
subl
mov
dec
mov
decl
or
out
es
leave
pop
dec
or
in
enter
mov
mov
fisubs
sbbl
mov
jno
dec
rolb
lahf
ret
out
xor
shl
sbb
das
mov
inc
inc
jbe
insl
notl
mov
icebp
pushf
xchg
fsubr
addr16
scas
and
fbld
mov
jb
push
xlat
lock
mov
sub
into
cmp
push
ret
xor
ds
jmp
ret
cmp
and
je
push
movsb
and
jnp
sbb
outsl
sbb
xchg
pop
inc
int3
add
enter
and
jne
les
and
fwait
inc
cmp
in
gs
aaa
popf
adc
jmp
mov
jg
mov
int
mov
roll
sub
shrl
push
sub
outsl
dec
push
dec
and
ficoms
insl
add
adc
fwait
jbe
lods
stc
mov
lea
and
dec
and
ficomps
dec
push
paddb
es
in
xchg
cmpsb
lods
xchg
xchg
inc
sti
cs
imul
cmp
xchg
mov
adc
scas
sbb
cmp
mov
fnsave
and
pop
ljmp
adc
adc
inc
lods
lock
jne
mov
xor
xchg
dec
sub
in
xchg
inc
or
decb
inc
stc
jnp
push
sub
xor
push
ret
cmpsb
aam
mov
xor
mov
jge
nop
cmp
cmc
es
adc
mov
lea
mov
fnstenv
ret
test
repnz
jmp
mov
cmc
dec
pushf
sub
adc
mov
push
pop
push
and
es
in
pop
inc
ret
sub
rolb
or
mov
repnz
fstps
leave
or
dec
subb
in
loopne
mov
lret
xor
or
xchg
in
in
enter
aad
popl
xor
cmp
jle
sub
imul
sub
repz
or
clc
xor
je
dec
sti
sbb
loope
popa
mov
dec
sbb
push
pop
xchg
fbld
outsl
mov
aaa
push
ds
pop
sbb
inc
popa
stc
outsl
mov
stos
adc
sub
js
push
jg
andl
dec
inc
mov
lods
lret
sbb
xchg
mov
mov
add
stos
add
pop
outsb
inc
imul
adc
and
data16
jbe
push
jl
adc
mov
cli
jnp
mov
mov
and
mov
insb
push
jp
inc
pop
jp
or
jae
mov
loopne
in
stos
pop
xchg
frndint
enter
lods
jp
fcoml
in
icebp
xor
push
mov
mov
testl
popf
out
or
push
push
jnp
xchg
mov
je
fs
cmp
and
lea
lcall
int3
or
in
cmp
mov
mov
stos
mov
mov
lret
jb
jnp
inc
shll
ljmp
mov
insb
repnz
pop
jne
add
cmc
lcall
xlat
jns
mov
loope
mov
cmp
mov
stos
xchg
inc
add
sbb
ret
xchg
out
iret
imul
inc
sbb
mov
dec
das
imul
jmp
test
sbb
cmp
sbb
cmpb
and
mov
add
inc
cmpsl
adc
scas
ss
aaa
or
outsw
out
dec
jecxz
insb
xchg
cmpsb
jbe
es
es
testl
inc
xor
mov
adc
dec
rcrl
dec
xor
mov
shrl
call
pop
ja
adc
movsb
pushf
sub
xchg
or
sahf
cmp
ret
cld
lods
dec
test
out
lret
cmp
push
ja
int3
addr16
ror
in
lods
dec
ja
mov
aas
push
xor
shll
add
rcll
mov
fwait
andb
pop
sub
xor
inc
push
into
push
lahf
scas
jnp
lods
aad
cmp
fucomp
repnz
rorb
sbb
fadds
push
data16
and
inc
push
orl
and
les
loopne
jge
cmp
lahf
pop
inc
lods
sbb
pop
gs
pop
rclb
or
push
lret
push
push
pop
outsb
dec
cmc
pop
shrl
test
mov
sub
pop
fldcw
xchg
sub
pop
push
jno
push
popa
pop
jbe
xchg
xor
scas
sub
push
inc
mov
test
sbb
lret
insb
int3
jo
out
xchg
ret
out
out
ret
sub
movsl
call
scas
mov
xlat
cmp
shll
jae
movsb
or
adc
adc
shlw
lret
in
jp
sbb
fldt
jns
mov
jno
lea
push
lods
or
ja
inc
int3
aam
mov
stos
and
fiaddl
hlt
xchg
imul
cli
xchg
aad
bound
movsb
out
lds
xchg
mov
enter
add
dec
pop
dec
mov
mov
mov
pop
dec
icebp
daa
sbb
dec
jl
mov
repz
xor
cmp
xchg
sarb
mov
iret
jns
sbbb
sbb
xchg
sbb
outsl
sbb
xor
js
adc
movsl
add
das
pop
inc
fwait
test
pop
dec
shlb
es
sub
movsb
lcall
pusha
out
mov
in
inc
dec
fldt
mov
sahf
scas
and
int3
movsb
inc
negl
fwait
es
xor
and
imul
inc
inc
mov
dec
test
cld
out
arpl
lcall
adc
xor
sub
cwtl
mov
in
sbb
pop
sub
popf
cmpsl
add
xchg
imul
push
jle
imul
in
into
fimull
and
inc
push
sub
xor
daa
mov
dec
adc
add
sub
nop
cmpsb
sbb
mov
xor
rclb
ds
dec
rolb
jno
add
mov
lret
push
test
or
sahf
cli
push
mov
mov
mov
test
xor
outsb
rcl
cmp
mull
lock
inc
into
push
pop
pop
insl
mov
push
imull
or
mov
fsubrs
inc
xor
jg
inc
push
mov
xorl
leave
jo
std
push
dec
and
jae
movsl
jb
adc
out
sbbb
jg
mov
adc
pop
test
fwait
mov
loope
repnz
cmpsb
jae
pop
sar
adcl
sahf
xchg
push
or
scas
ret
or
ficompl
cmc
adc
loopne
sahf
leave
xchg
cli
add
leave
into
pushf
stos
cmc
sti
jae
cmp
add
push
mov
das
xlat
or
mov
ret
sahf
fildll
cmpsb
dec
pop
int3
push
dec
pushf
sbb
call
jg
mov
ret
mov
scas
xchg
jo
frstor
mov
nop
call
hlt
pop
adc
sub
push
mov
mov
enter
sbb
adc
lret
xor
icebp
stos
sub
int
bound
sbb
aad
into
and
sub
sbb
inc
ret
add
push
mov
pop
lcall
js
imul
in
xor
mov
adc
xor
dec
ljmp
add
movsl
sub
push
xor
pusha
jmp
ror
aam
repnz
mov
stc
mov
sub
mov
fstpl
stos
aad
js
xor
mov
notb
fldl2e
imull
lods
push
ss
jge
mov
mov
sub
jecxz
scas
aad
out
pop
and
lcall
lret
or
xchg
cld
and
mov
mov
push
mov
sub
dec
jmp
xchg
adc
pop
or
lret
ficomps
popf
mov
shll
aaa
or
lds
int3
xchg
cld
and
add
clc
inc
xchg
out
dec
jecxz
out
ds
stc
rorl
cmp
sahf
scas
clc
dec
xchg
loopne
and
inc
adc
mov
dec
test
xorb
mov
mov
and
dec
sbb
xchg
mov
aas
jo
pop
inc
pop
mov
mov
test
xchg
pop
xor
fnstcw
fbld
mov
xorl
sbb
push
stos
mov
pushf
inc
xchg
mov
pop
dec
addr16
insb
pushl
jg
adc
sub
int3
or
aaa
mov
das
xlat
pop
or
or
fstpt
dec
xchg
fucom
xchg
pushf
pop
fstpl
insl
pop
pop
inc
push
imul
jg
xchg
ret
bound
push
lock
fdivl
add
push
test
int
xchg
xchg
jns
add
xchg
leave
dec
in
add
xchg
je
cwtl
mov
mov
out
int3
lods
nop
je
sbb
xorps
and
adc
enter
outsl
sbb
xchg
add
loopne
xchg
push
int3
ret
repnz
notl
mov
dec
pop
mov
dec
jae
push
inc
call
push
cmp
lcall
push
xchg
mov
push
sub
adc
cmp
in
adc
inc
js
dec
jns
lea
xchg
sti
cmp
nop
mov
jb
cmpsl
cmp
mov
fidivs
js
dec
xor
xlat
out
xor
inc
cmc
icebp
push
mov
inc
jmp
inc
in
jno
aam
test
mov
inc
or
popl
push
cmp
or
scas
pop
loope
fiadds
push
movsb
imul
sub
and
or
mov
xlat
mov
dec
mov
xor
orl
sbb
lret
mov
loop
insl
leave
xchg
fbstp
xchg
ljmp
and
inc
mov
mov
shlb
xchg
mov
in
test
loope
out
shll
sbb
nop
sbb
popa
ret
mov
sub
dec
dec
sub
jo
and
push
pop
iret
pop
repnz
xchg
xchg
pop
mov
sbbl
cmp
aas
cld
pop
xchg
or
fwait
fisttpl
dec
lret
push
outsl
dec
xchg
jo
pop
xchg
mov
cmp
push
push
pop
stc
mov
fwait
jl
and
mov
outsb
and
jg
das
xorb
xchg
xchg
jo
rcl
out
inc
mov
rolb
lcall
imul
aaa
lock
push
inc
aaa
mov
mov
ret
xchg
popf
mov
std
les
movsb
test
jbe
cltd
arpl
lock
ds
pop
adc
mov
fs
loopne
cmc
movsb
movsb
fnsave
adc
adc
out
jg
jle
and
or
adc
pushf
push
push
es
movsl
clc
jecxz
jnp
movsb
mov
xor
fisttps
addr16
lahf
push
pop
in
pop
dec
xchg
cmc
xchg
xchg
int3
clc
dec
ljmp
xchg
cltd
icebp
jnp
movsb
popf
outsl
std
or
dec
mov
jne
add
pop
pop
xchg
int
push
xchg
stos
mov
xchg
cmp
jae
in
nop
sub
cmpsb
mov
pop
push
outsb
pop
aas
jb
mov
inc
out
dec
fs
xor
cmp
mulb
aas
lahf
mov
and
loopne
add
data16
scas
mov
imul
cmpsb
inc
lock
ja
adc
mov
es
mov
scas
insl
ds
xchg
jp
rcl
aaa
add
pop
dec
and
cmp
xchg
imul
or
and
hlt
in
inc
loope
push
mov
xchg
and
decl
lds
dec
inc
dec
xchg
push
xor
icebp
pop
lods
sbb
cmp
mov
adc
pop
mov
push
popf
fcoml
fcmovnu
and
jnp
call
push
cld
pop
mov
add
xorb
jg
rcl
mov
adc
out
js
add
cmpsb
xchg
fdivr
nop
dec
mov
ds
adcb
xchg
push
cmpb
mov
stos
mov
mov
and
arpl
xor
push
into
push
dec
gs
into
or
jns
add
cmp
jg
gs
jbe
icebp
mov
sbb
lea
popf
pushf
add
jbe
adc
jns
cs
push
insb
arpl
and
jne
push
mov
rorl
and
aas
jbe
and
jo
mov
add
icebp
lods
push
push
std
add
or
mov
and
or
and
sbb
aas
xchg
push
xchg
jae
mov
jae
cmp
bound
ljmp
pop
jl
or
test
test
and
flds
and
push
fnsave
cmp
in
lds
and
pop
pop
gs
pop
mov
add
out
aaa
lea
enter
dec
arpl
stos
notl
xchg
xchg
sarb
cmp
push
outsl
fstps
ficomps
jne
jne
jno
fwait
inc
push
pop
fwait
inc
xchg
xchg
and
pop
mov
lret
mov
mov
adc
test
incb
loopne
and
or
push
imul
not
out
stos
adc
xchg
pop
mov
lahf
rcrl
mov
mov
pusha
push
int
stc
sub
ss
lret
cli
hlt
mov
xor
and
outsb
mov
cmp
xchg
leave
imul
mov
cmp
jge
js
jb
imul
push
add
addr16
rcl
jns
lock
cmc
mov
jnp
mov
bound
fwait
mov
and
cld
pop
push
mov
je
ficoms
aas
mov
push
pop
mov
inc
repz
jecxz
pop
sbb
mov
stos
xchg
inc
pop
movsl
inc
arpl
push
shrl
push
jecxz
ss
xchg
inc
jne
lret
lea
mov
nop
outsl
sub
int
pop
mov
mov
popf
popa
push
cmp
jb
pop
add
adc
mov
mov
add
jae
lahf
pop
inc
mov
in
cmc
movsl
mov
pusha
call
xchg
xchg
mov
bound
sbb
cmp
inc
jbe
xchg
andl
shr
add
mov
hlt
test
insb
mov
jge
push
pop
sti
jl
add
imul
inc
orl
mov
addr16
popf
ffreep
or
cmpsb
sbb
pop
bnd
lret
xor
inc
fisubrs
sbb
jno
jecxz
sbb
test
test
and
imul
shlb
fnsave
cmp
pop
mov
push
jns
sbb
stos
aaa
jns
xchg
fsubp
ss
out
es
dec
cmp
mov
dec
rclb
dec
icebp
scas
sub
cmp
pusha
adc
es
jg
fdivl
dec
enter
mov
mov
mov
push
and
scas
shl
or
daa
xor
mov
popf
icebp
xchg
imul
stc
lret
xchg
subl
repz
and
loope
shlb
inc
mov
imul
xchg
test
ja
push
xchg
mov
es
decb
push
out
pop
ds
inc
push
and
filds
inc
lock
push
ja
or
mov
das
fldcw
cmpsl
idivl
cmp
addr16
jo
mov
xor
data16
leave
xchg
mov
popa
ds
fwait
sub
popf
lds
or
popa
clc
inc
inc
mov
outsl
sbb
mov
fists
insb
or
movsl
inc
mov
xchg
popf
mov
repnz
push
ret
inc
mov
inc
cli
push
in
fcomi
inc
xor
add
ds
addr16
aas
mov
fwait
mov
subb
cli
pop
test
cmp
sub
add
add
dec
adc
add
mov
movsb
fs
bound
dec
inc
incl
adc
mov
mov
sub
imul
cli
lea
addr16
push
ret
cmp
and
rcrb
xor
rep
repz
icebp
pop
sub
andb
leave
fs
and
sub
pop
outsb
xchg
xchg
mov
andl
imul
es
sub
divl
testl
jbe
lret
ret
jecxz
mov
mov
jnp
out
dec
dec
loop
mov
dec
sbb
icebp
imul
xor
imul
push
dec
pop
fwait
orl
xchg
divb
lds
jns
subl
jne
add
or
pop
push
rcll
mov
and
out
pushf
sub
je
jno
fstl
mov
adc
cltd
lea
aam
pop
push
sarb
pop
std
or
pop
aad
cli
jmp
pop
ret
lods
dec
cmc
add
aad
ror
xor
inc
mov
andb
mov
pop
mov
idivl
push
xor
add
vdivpd
fmuls
and
in
aas
decl
xchg
adc
mov
add
push
outsl
inc
sbb
pop
lret
mov
pop
push
mov
mov
bswap
rorl
aas
movsb
cld
and
jmp
xchg
add
push
dec
mov
into
sbb
cld
push
push
jne
dec
jle
loopne
inc
insb
data16
sbb
sbb
sub
inc
or
mov
rol
cmc
and
push
mov
cmp
jge
sahf
in
mov
imul
je
sbb
lea
sbb
shrb
fnsave
push
out
mov
aam
sub
sub
les
jnp
test
data16
jmp
jg
jns
xchg
mov
xor
xchg
xor
bound
daa
int
jbe
sub
xor
mov
inc
push
push
cli
insl
aas
jp
mov
lret
mov
or
sbb
scas
in
nop
jno
mov
shr
iret
in
insl
lret
aaa
gs
mov
lret
std
test
jnp
sbb
mov
test
dec
pop
sbb
dec
loop
adc
pushl
fdivrs
into
lahf
stos
xlat
movsb
jno
dec
rcrb
int
jmp
addr16
cmp
and
jae
test
pop
xor
dec
jo
adc
mov
jp
push
push
xor
add
mov
sbb
fimull
call
adc
enter
push
mov
loope
dec
in
repz
push
cs
pop
test
mov
mov
pop
mov
sarl
dec
or
add
fisttpl
daa
mov
jecxz
pop
jo
into
mov
int
or
mov
fs
and
pop
and
xor
ljmp
pop
sbb
movsb
pop
fs
and
fistps
out
pusha
inc
lods
cli
xor
dec
aas
jge
push
std
aas
pop
lret
pop
mov
or
add
xchg
sahf
lahf
push
cltd
sbb
stc
cmp
dec
jns
or
jo
sahf
jnp
arpl
shrl
and
mov
popa
pop
and
sub
fstl
ret
movsl
aam
stc
ret
leave
lret
pop
jmp
or
cmp
add
in
mov
pushf
ss
or
cmp
xor
imul
inc
cli
jns
adc
push
xchg
xchg
fildl
faddp
rcrl
mov
push
loopne
and
or
out
push
cmp
sbb
sub
xor
scas
and
cli
jb
mov
xchg
xor
mov
mov
inc
mov
cmpsl
adc
imul
test
out
mov
push
mov
pop
clc
mov
mov
adc
or
mov
out
idiv
pop
jg
push
call
xchg
mov
outsl
mov
clc
jb
pushf
cmpsl
and
pop
addr16
inc
sub
ljmp
jb
cltd
add
jecxz
push
adc
xor
mov
xchg
adc
mov
pop
sbb
arpl
pop
test
xchg
test
loopne
repnz
mov
scas
lds
mov
pop
pop
fiadds
sbb
mov
fmulp
inc
push
jnp
loopne
mov
sub
xchg
pop
mov
popf
popa
insb
out
insb
daa
pusha
mov
mov
push
testl
inc
test
mov
loope
scas
xchg
addr16
mov
add
inc
int3
sbbl
xchg
pop
outsb
mov
fwait
int
cltd
inc
imul
push
jns
xorl
jno
xlat
lods
xchg
ret
jg
adc
test
jecxz
pop
cmp
sub
push
pop
and
jb
dec
adc
jbe
mov
xchg
in
enter
pop
xor
cltd
jle
mov
adc
adc
add
mov
repnz
mov
subb
orb
fidivrl
in
stc
or
mov
cmp
lahf
sarb
arpl
xor
xchg
cwtl
or
aas
mov
cmp
jmp
aaa
stos
ljmp
sbb
push
into
xchg
sub
push
push
cmpsb
mov
icebp
hlt
dec
cmp
xor
mov
aad
or
mov
insl
aam
and
data16
fsts
cwtl
shr
outsb
push
sti
jne
pmovmskb
popf
repz
bound
pushf
xorb
adc
decb
xor
sub
pop
mov
cmp
sub
iret
movb
inc
xor
sti
fisubrl
adc
popf
sub
cs
lahf
lret
xchg
jne
jmp
jge
lea
cli
adc
cmp
aas
ret
mov
sub
test
jne
and
lea
std
push
sbb
sbb
xchg
out
pushw
jnp
cs
add
sahf
jne
ret
cmp
aad
mov
adc
lret
mov
or
movsl
test
xchg
shll
dec
lods
sub
sbb
test
inc
inc
xor
nop
adcl
adc
sub
or
fwait
in
cmp
xchg
jo
cmp
fistpl
ds
aas
mov
inc
sbb
jl
test
aaa
sub
push
adc
inc
aad
cmp
sbb
or
shrl
ret
imul
xor
or
and
or
das
sub
xchg
add
mov
and
sbb
inc
mov
jmp
clc
pop
jne
int
mov
dec
lcall
cmp
fidivrl
mov
jb
jmp
sahf
push
and
pusha
hlt
ficompl
and
test
mov
sub
rolb
repz
adc
jne
push
mov
cs
insl
bound
test
or
loope
imul
call
pop
push
add
cmp
aaa
lret
sbb
mov
mov
inc
xor
pop
and
and
divl
pop
mov
sahf
sarb
ds
adc
aad
mov
push
lods
enter
push
mov
sub
cmp
pop
xchg
inc
andb
into
lahf
push
sub
pop
ror
outsl
or
adc
mov
into
fldl2e
xor
in
repz
lea
cwtl
jecxz
add
rolb
cs
iret
scas
sub
xchg
mov
push
clc
ljmp
mov
add
scas
decb
cli
pop
popa
jmp
xlat
insb
cltd
repnz
or
data16
jae
in
xor
mov
push
les
pop
mov
adcb
daa
sbb
ds
stos
in
pop
jb
les
pop
jbe
lock
scas
mov
movsl
push
cmpsb
lea
jmp
movsl
int3
lcall
iret
jg
jg
jb
dec
in
mov
adc
push
mov
repz
mov
push
sbb
sbb
push
add
adc
je
mov
and
mov
add
add
jecxz
movl
push
idivl
shll
imulb
fwait
imul
ss
pop
inc
mov
lods
add
dec
movsb
inc
adc
jo
sbb
lahf
dec
mov
nop
jno,pn
cmp
inc
insb
into
dec
add
rcl
aaa
test
dec
pushf
ficoms
std
pop
adc
into
repz
loopne
pop
pop
out
ret
and
fmull
add
shrb
mov
dec
daa
repnz
fnstcw
lahf
sub
pusha
or
loop
mov
das
stc
data16
sbb
dec
pop
or
dec
orb
leave
shll
arpl
inc
pop
sub
je
cltd
mov
lds
clc
lret
xchg
cltd
addl
mov
mov
rol
stc
jo
mov
fstl
dec
cld
jl
xlat
cmp
in
imul
xchg
hlt
lods
movsb
cs
add
add
xor
mov
adc
pusha
enter
xchg
aas
sbb
rol
popa
outsl
xor
jae
enter
pushf
push
mov
jl
push
mov
sahf
fistl
add
dec
ja
push
mov
ret
xchg
pop
mov
dec
and
push
scas
cmc
iret
xchg
flds
jl
pop
notb
sbb
push
xor
sub
dec
xor
jnp
out
sbb
dec
cmpl
arpl
sub
ret
push
popf
pop
adc
fldenv
sarl
lret
jle
shll
jge
fstpt
dec
inc
movsb
imul
stc
push
nop
mov
lret
mov
ret
icebp
pop
pushf
sahf
test
imul
xor
lods
enter
cli
add
adcb
push
add
inc
mov
dec
xor
mov
mov
movsl
push
sub
stos
test
dec
and
jmp
loope
nop
adc
sar
xchg
pop
inc
rorl
imul
and
mov
repnz
jae
push
cmp
pop
cli
jge
mov
scas
mov
loope
sub
mov
sbb
mov
lock
sub
cmpsb
jg
movsb
divl
inc
movsl
xor
sbb
movsl
cli
loope
insb
jno
leave
clc
ja
ffreep
push
mov
inc
jno
sti
xor
imul
or
ret
subb
in
sti
pop
orb
into
js
insb
jnp
mov
cltd
mov
daa
push
mov
in
xchg
jne
xorl
lds
add
xchg
mov
and
or
xchg
mov
leave
mov
clc
out
setle
push
jp
push
pop
pusha
xor
and
sub
inc
mov
push
add
mov
jns
lahf
xor
dec
cmp
xchg
lods
push
sbb
or
xchg
std
pop
cmp
or
sti
pushl
mov
push
sbb
and
fsubp
stos
pusha
mov
lahf
daa
jle
add
andb
arpl
jne
pop
xor
adc
das
test
les
fdivr
insl
cmp
and
mov
scas
bound
fwait
bound
lock
out
xchg
roll
dec
push
push
in
cmpsb
xchg
daa
jo
lret
jo
mov
scas
pop
cmpsl
insl
add
lods
sahf
push
jne
sub
sbb
stos
inc
sti
jp
and
rcll
aam
jnp
out
jl
jne
fcos
loopne
out
and
test
inc
test
or
mull
rep
and
lret
popf
test
in
das
insl
mov
decl
lret
xor
inc
xchg
lods
push
xor
inc
adc
mov
jne
mov
push
movsl
xlat
adc
scas
pop
mov
xor
cmc
lds
mov
das
cmp
sbb
sbb
inc
add
xchg
jno
scas
in
push
cmp
xor
mov
dec
pop
jne
sub
pop
les
ljmp
push
ret
pop
lea
mov
sbb
mov
icebp
sub
mov
xor
cmp
int3
repz
ret
and
adc
popf
jb
gs
adc
mov
data16
mov
pop
shl
icebp
ret
pushf
mov
jp
movsl
dec
repz
jne
jl
mov
mov
mov
pop
mov
and
cld
xor
lret
ds
in
in
push
xchg
add
or
xchg
cmpb
lea
cmp
or
mov
xor
js
and
sbb
mov
sub
inc
sub
lahf
adc
xchg
call
xchg
outsl
xchg
sub
mov
cmp
or
cmp
mov
cmp
add
movsl
mov
xor
xor
xchg
lret
inc
aam
xchg
cmpsb
imul
sbb
loope
hlt
test
mov
jecxz
xor
fldz
icebp
inc
push
xchg
mov
and
dec
imul
test
sbb
test
leave
test
mov
push
sub
mov
mov
sbb
pop
xlat
or
sub
pop
cmc
lds
aam
sub
bound
cmp
jbe
and
jle
arpl
dec
xchg
shll
mov
stos
dec
sub
sarb
push
xchg
aas
aad
imul
mov
xor
pop
pop
inc
sti
lret
mov
rcrb
mov
inc
push
cmpsb
mov
add
repnz
mov
pushf
push
stc
cmp
jns
jb
int
iret
jmp
in
adc
jns
cmp
cwtl
loopne
roll
pop
pop
scas
aad
dec
inc
scas
negb
or
ljmp
daa
sarb
sub
sbb
imul
shlb
outsb
popa
fsubl
push
in
adc
jo
iret
push
in
hlt
push
inc
mov
push
mov
outsl
es
divl
out
push
cmp
or
inc
pushf
jmpw
sbb
test
mov
xchg
sahf
push
push
pop
mov
cmp
or
pop
clc
dec
cmc
mov
iret
mov
inc
stos
pop
pushf
push
pop
xor
shlb
pop
adc
imul
push
out
ret
inc
xor
mov
mov
pop
jl
dec
outsb
xchg
fdivrl
inc
mov
cmp
addr16
or
lds
jl
stc
scas
insl
xor
sub
dec
add
call
es
xchg
cmp
das
movsb
stos
enter
xor
sub
mov
mov
push
insb
add
insl
mov
rclb
cs
jb
cmp
daa
dec
loopne
lods
or
js
lret
pop
and
lret
out
lret
add
inc
pop
test
dec
pop
adc
scas
cmc
es
add
test
fwait
jmp
xchg
adc
and
test
sbb
xlat
dec
mov
xlat
inc
cli
scas
mov
jecxz
adc
inc
pop
push
push
jne
aas
mov
das
das
mov
insb
push
and
xchg
lds
rorl
aaa
mov
inc
mov
ret
add
out
cmc
cltd
adc
dec
into
loopne
hlt
jno
jle
inc
in
idivl
in
aaa
mov
std
lret
inc
ret
popf
adc
push
insb
lock
mov
loop
sub
jmp
pop
out
loope
dec
xor
loop
or
loopne
dec
jecxz
pop
sbb
cli
aad
jecxz
adcb
push
out
mov
aad
int
cli
push
jp
sub
repnz
adc
enter
aad
stos
insb
jecxz
mov
fisubrl
xchg
bound
hlt
jo
arpl
push
xchg
test
jl
mov
lock
mov
hlt
mov
inc
cmp
mov
insb
repz
aam
pop
test
adc
adc
inc
push
sahf
jp
push
pop
das
iret
test
movsl
je
outsl
or
dec
fisubrs
jo
cmp
ds
into
pop
inc
push
push
fsts
add
jne
out
jnp
inc
and
push
in
adc
iret
push
movsl
icebp
sbb
mov
arpl
xchg
jb
jae
push
fnstenv
inc
xchg
mov
das
mov
dec
test
fcoms
in
add
ror
call
push
push
loop
movsl
cmovnp
inc
sysenter
dec
pop
mov
rcl
testb
mov
call
mov
fiadds
xchg
mov
adc
xchg
aaa
push
lret
sbb
roll
cmp
mov
and
repnz
in
dec
fidivl
bound
or
pop
and
mov
jns
add
mov
push
sub
xchg
jo
push
mov
lea
insb
sbb
fnstsw
mov
js
adc
in
fcom
mov
aaa
adc
ljmp
shr
xor
fiadds
ss
xchg
pop
dec
mov
pop
icebp
fmuls
divl
pushl
out
popf
or
mov
arpl
xchg
dec
hlt
fnstenv
data16
test
rclb
rorb
inc
push
arpl
add
pop
lods
roll
jl
in
cmp
cmp
clc
mov
mov
xor
push
push
lcall
ljmp
jl
mov
adc
enter
int
dec
adc
mov
ss
and
icebp
jmp
mov
fiaddl
mov
and
sbb
jle
idivb
mov
add
xchg
dec
or
and
arpl
sbb
es
xchg
dec
xor
mov
pushl
repnz
mov
stc
xchg
jno
scas
in
xchg
aaa
xor
repnz
push
sbb
sub
leave
clc
push
in
shll
xchg
add
mov
notb
sahf
repz
dec
movsl
xchg
pop
scas
mov
aaa
xor
loopne
xor
sbb
and
sahf
lods
xor
mov
lods
int3
mulb
mov
and
out
leave
add
mov
adc
fstp
lret
gs
jns
out
and
jnp
fnsetpm(287
and
jp
pop
imul
dec
mov
lds
std
dec
add
pop
xor
pop
leave
ret
jp
push
outsl
ret
out
pop
xor
inc
mov
pop
pop
dec
sub
loope
ret
pop
sar
ret
shrl
xchg
iret
inc
pop
cmp
pop
je
mov
scas
xor
scas
repnz
das
push
loope
std
xor
popf
loop
cld
test
pop
mov
adc
cmp
sbb
outsl
cltd
pop
aas
push
mov
xchg
insl
adc
shrd
or
xchg
sbb
xchg
cmp
fdivrl
test
fstpt
stos
and
fwait
pop
mov
icebp
inc
shrl
mov
dec
pop
adcb
add
repz
test
mov
dec
lea
push
dec
shll
ss
pushf
lcall
adc
mov
ja,pn
sahf
jns
push
cmp
xchg
fldcw
orl
pop
xor
fs
dec
imul
js
stc
push
add
dec
pop
cmc
inc
das
mov
andb
cld
je
fbld
scas
imul
lahf
add
xchg
sbb
adc
jp
dec
imul
inc
add
addr16
dec
inc
sahf
jecxz
scas
gs
jl
xchg
cs
inc
add
sbb
adc
push
adc
inc
sub
lea
sbbl
stos
sub
iret
je
mov
inc
cmc
dec
sbbb
add
arpl
cmp
and
test
mov
int3
not
andb
in
adc
jo
icebp
into
mov
insb
mov
hlt
mov
fmuls
insb
mov
and
ds
xchg
pushf
mov
inc
push
inc
iret
adc
inc
and
ret
jno
cmpsb
mov
xchg
push
std
mov
ret
push
sbb
cmp
or
test
test
addl
jnp
xchg
push
cmp
and
pop
cmc
leave
inc
add
lods
dec
mov
ret
or
adc
lods
sahf
adcl
test
out
and
das
lea
cmp
push
icebp
aad
and
and
rcrl
sub
imul
dec
sbb
test
adc
adcl
xchg
cmp
push
and
xor
sub
ja
jbe
in
add
mov
pop
xchg
mov
inc
shrb
sbb
mov
mov
popa
push
push
cmp
or
into
ret
cltd
repnz
stos
out
movsl
push
inc
xor
jne
cs
mov
sub
push
jbe
or
add
jae
lcall
lods
xor
dec
jne
xchg
sub
mov
dec
data16
and
add
xchg
jns
sbb
inc
pop
fldt
mov
test
cmp
xor
stc
in
insb
mov
jle
jecxz
or
fnstcw
xor
jmp
insl
sub
outsb
call
ffree
sub
sbb
loopne
mov
cmp
mov
sahf
push
jmp
dec
cmp
sbb
add
fdivrl
ds
or
mov
xchg
fistps
pop
outsb
adc
push
bound
mov
es
cmp
mov
addb
rcrl
ficoml
rolb
icebp
test
add
insl
mov
call
add
push
jl
imul
mov
and
fyl2x
test
push
aad
js
fnstsw
scas
movd
mov
xor
ja
xchg
movsb
mov
add
stos
sub
cmpsl
mov
mov
rcr
test
hlt
rolb
jo
repz
scas
xor
add
jnp
xchg
mov
push
mov
mov
or
cltd
cmp
mov
divb
jae
inc
push
sub
in
ret
lahf
in
adc
sbb
cltd
adc
mov
das
adc
sti
and
in
or
jnp
adc
cmp
ret
jge
adc
nop
inc
adc
xchg
push
mov
jle
imul
mov
jno
shr
inc
xchg
push
mov
imul
inc
call
imul
and
mov
cmc
mov
xchg
daa
sti
mov
mov
das
pop
icebp
repz
es
push
pop
mov
sub
sbb
lods
xchg
cmpsb
inc
or
ret
sahf
scas
fwait
sbb
fs
inc
push
or
sbb
inc
xor
mov
xchg
or
mov
jns
xor
pop
add
xchg
outsb
jmp
inc
scas
icebp
jae
fld
enter
lods
pop
scas
jecxz
cld
aad
stc
inc
lcall
xor
fs
sarl
lods
sbb
repz
cmp
iret
mov
xlat
xchg
stos
mov
push
sbb
add
inc
ficoms
lahf
lods
rdpmc
insb
mov
fcompl
sub
mov
xor
push
add
mov
lea
add
xchg
mov
adc
in
hlt
in
push
aaa
xchg
and
ss
xlat
push
shl
pop
dec
push
fstpl
ret
insb
jo
xor
int
fnsave
mov
inc
je
mov
lods
iret
or
test
sbb
cli
aam
push
lock
cli
push
adc
jmp
loope
sub
lret
push
push
addb
ret
mov
aaa
pushf
aas
lds
xchg
rcll
jmp
call
xor
in
xchg
cmp
pop
xor
je
push
xlat
mov
stos
inc
lahf
out
rcrl
je
ret
sahf
push
clc
cmp
or
push
xor
mov
xor
aam
fstps
adc
cmpsl
inc
enter
sub
jmp
sbb
ret
pop
fwait
jge
sbb
ja
cmp
out
xlat
inc
sbb
and
push
inc
je
into
cmp
or
sub
mov
inc
pop
fidivrl
xor
outsb
les
clc
mov
push
jbe
testl
push
dec
loop
xor
push
popf
cmp
mov
mov
or
lds
or
ret
gs
jnp
pop
jo,pt
sbb
push
jmp
pop
or
ja
ret
inc
mov
mov
sarl
or
into
movsb
js
mov
mov
xchg
test
sub
and
ret
in
aaa
mov
mov
pop
mov
pop
test
inc
test
call
inc
aam
xor
test
jl
dec
mov
mov
cmp
push
push
lds
mov
inc
xchg
jne
fcoml
ljmp
ret
or
mov
jns
xchg
imul
enter
or
sbbl
sub
sbb
in
incb
jae
insb
loope
shll
push
inc
xchg
mov
pushf
jmp
xchg
lds
movsl
pop
sub
cmpsb
cwtl
or
push
cwtl
pushf
lahf
call
pop
mov
adc
std
cmpsl
jo
mov
jl
xchg
xor
hlt
pop
mov
jle
jg
cmpsb
xchg
sub
dec
pop
insb
ret
popf
ja
jg
aaa
bound
in
sbb
jg
lock
mov
xchg
and
popa
mov
mov
push
jl
xorb
call
aas
sub
inc
ljmp
out
xor
jbe
ss
add
mov
sub
fisttpl
or
ret
sbb
add
mov
lock
xchg
jg
test
mov
ficompl
or
iret
xor
jg
xor
std
inc
fwait
jnp
adc
jge
js
mov
sahf
shlb
call
aas
cmp
add
repz
add
lret
add
scas
testl
xor
xchg
and
inc
inc
ret
aam
mov
jno
cltd
or
cwtl
sarb
mov
xchg
xchg
pusha
dec
jge
shll
nop
psraw
dec
xor
rcll
popl
addr16
movsl
sub
push
jmp
aam
mov
push
push
xlat
inc
push
aaa
xlat
or
cmp
mov
test
sbb
sti
outsl
jge
ror
jecxz
inc
pop
push
in
cmp
push
test
fidivrs
orb
jecxz
mov
jne
push
sti
addr16
adc
adc
popa
adc
mov
xor
adc
hlt
adc
movsb
jmp
stos
fisttpll
mov
mov
dec
ss
inc
cli
aad
mov
sub
sub
mov
or
push
icebp
pop
dec
orl
testb
jle
xchg
ret
and
repnz
jmp
test
cli
int
mov
and
jns
nop
mov
stos
loope
sbb
insb
or
mov
out
xchg
es
fwait
ljmp
fnstcw
push
jg
mov
fistl
lods
and
cmpsl
inc
stos
xlat
push
jmp
outsl
ja
cmpl
inc
mov
mov
lock
xchg
mov
ljmp
mov
popf
xchg
mov
sbb
xchg
lods
jecxz
js
inc
out
and
ror
push
cwtl
pop
mov
das
lods
ljmp
adc
adc
je
movsb
mov
das
pushl
inc
cmp
jge
inc
mov
add
clc
int
insl
jbe
imul
and
xchg
les
cmp
pop
xchg
cmp
sub
mov
adc
adc
mov
pushf
jmp
call
iret
int3
cltd
lods
in
nop
mov
test
push
mov
sub
xchg
sbb
sub
icebp
mov
clc
sub
xchg
adc
xor
das
cmp
sbb
stos
push
xor
xchg
push
std
and
insb
pop
add
pop
and
and
pushf
clc
jecxz
mov
pop
adc
jecxz
jnp
fcmovbe
out
mov
lcall
addr16
imul
xor
insb
pop
ljmp
xor
out
ret
push
add
sub
push
sbb
pop
clc
adc
mov
ljmp
mov
jnp
aas
pop
jge
push
mov
test
xchg
loop
movsl
dec
mov
fwait
movl
fcmovnb
decl
inc
or
sarl
or
push
stos
or
xchg
nop
jge
stos
sbb
icebp
iret
fldl
loopne
fisttpl
push
dec
xor
out
fbld
bt
clc
mov
mov
and
cmp
fwait
mov
mov
xchg
sarb
mov
idivb
test
xchg
dec
cld
aad
sarl
xchg
or
inc
int
ja
lcall
into
lods
cmp
sahf
sbb
movhlps
cli
xor
mov
sub
xchg
leave
and
les
pop
leave
xchg
iret
aaa
mov
insl
sub
add
dec
imulb
mov
mov
adc
adc
loopne
insl
and
fildll
popa
mov
test
std
dec
ret
mov
jle
clc
aaa
outsb
adc
je
pop
mov
ja
sub
out
dec
or
in
and
out
mov
add
adc
mov
mov
cmp
xor
push
mov
lret
adc
pop
dec
inc
xchg
add
and
repz
repnz
out
jbe
scas
xor
data16
arpl
and
int
ret
arpl
test
pop
cmp
adc
bswap
out
or
movsl
xor
xchg
xlat
ja
pop
and
and
jmp
shl
mov
loop
inc
cmp
das
leave
sub
aad
push
cmp
and
or
xchg
pushf
add
xor
stos
cli
xor
jle
mov
sub
jle
or
inc
push
addl
sbb
loopne
subl
mov
daa
jne
add
lds
xchg
sbb
cmp
hlt
aaa
sbb
pop
arpl
sti
in
in
cmc
test
out
adc
push
cmc
shlb
nop
enter
leave
ss
pusha
test
mov
fsubrp
outsb
or
mov
cmp
ret
sti
dec
jb
test
xchg
gs
in
add
sub
dec
lock
enter
and
xchg
aad
xchg
ljmp
je
lods
stos
scas
scas
mov
loopne
jle
out
adc
outsl
pop
in
inc
mov
sbb
jne
addr16
mov
or
sub
pusha
sti
leave
int
rorb
ss
jmp
jns
dec
xchg
push
xor
notl
and
fcomp
cmpsb
mov
or
and
push
lock
addr16
into
ds
inc
test
popf
je
fs
jecxz
xor
xchg
or
jbe
cmpsl
lods
dec
shlb
jg
dec
ret
hlt
dec
aad
imul
and
pop
popf
outsb
scas
in
push
jnp
push
sub
mov
xchg
mov
inc
int3
and
push
pop
mov
lcall
std
outsb
enter
xor
dec
aaa
jl
lret
in
std
xchg
arpl
inc
shrb
repnz
mov
insl
ss
xorb
js
inc
sbb
push
daa
les
sbb
int
xor
sbb
mov
push
inc
or
adc
and
stos
cmp
pop
test
jb
xchg
pop
mov
ror
js
xlat
push
fldl
pop
sub
or
lea
dec
xchg
jns
and
pushf
jne
lock
mov
xchg
orb
and
mov
xchg
mov
jbe
shll
insl
ss
ret
jne
ds
xor
push
inc
xchg
push
loope
out
lret
dec
pop
or
call
or
xchg
movl
pop
mov
subb
jg
fcmovu
lret
sub
test
fst
cmp
mov
clc
iret
push
lret
and
pop
lcall
lret
sub
jg
push
jmp
inc
xchg
sub
mov
lcall
pushf
jbe
sub
pop
push
sbbl
out
jmp
test
or
mov
and
cmp
lods
jb
or
pop
xor
ljmp
jae
mov
mov
pop
jnp
mov
ss
gs
popa
inc
mov
jecxz
pushf
add
notl
sub
xorl
inc
and
sbb
pop
popf
xor
lock
icebp
in
loopne
lock
fisubrl
into
cli
or
cltd
sub
pop
jp
xor
inc
jge
jecxz
ret
pop
das
xchg
aaa
mov
or
lcall
push
xor
bswap
in
notb
inc
mov
and
push
popf
and
es
add
sbb
jo
sub
jg
mov
idivl
dec
out
js
pop
addr16
into
xor
mov
xchg
mov
xor
mov
ret
push
pop
push
icebp
insl
mov
xor
push
jno
fwait
cmp
out
cmc
je
fidivrs
rol
pop
push
imul
aas
scas
mov
or
loopne
in
push
adc
xchg
sub
sub
jl
fcomps
push
cmp
test
jno
imul
lahf
fsts
cmp
xlat
out
dec
scas
jmp
jmp
adc
mov
call
in
leave
outsl
push
or
push
pop
add
xchg
sti
adc
dec
sbb
iret
and
nop
push
sub
add
aad
scas
into
jl,pn
jo
ds
push
mov
push
dec
mov
or
lret
roll
pop
jno
jno
cmc
adc
add
daa
popa
mov
adc
cmp
pop
jno
addl
lea
cmpl
in
jne
jbe
dec
push
ds
jmp
cli
enter
add
mov
pushf
outsl
sub
inc
xchg
test
xchg
sub
jns
sbb
outsl
adc
scas
mov
mov
insb
into
cltd
jmp
sub
cmp
cmp
fsqrt
popa
arpl
sub
imul
dec
ja
sbb
sti
sub
mov
lods
fcmovb
and
rcll
xor
jl
push
aam
lods
stos
sub
push
arpl
or
mov
cmp
ljmp
aaa
test
loop
jg
or
cmp
lds
repz
cwtl
stc
fs
jp
jmp
or
add
fidivs
aad
popa
nop
jae
bound
cli
in
imul
sub
insl
fiaddl
push
push
dec
mov
sub
fs
mov
push
cmp
call
cmp
inc
out
cmpsb
lods
lea
push
mov
jne
movsl
scas
pop
lahf
jne
sbb
rcrb
jb
push
jns
jg
mov
adc
rcrl
aas
ret
sahf
movsl
push
lock
jp
sbb
in
repz
push
aad
or
scas
test
nop
inc
jp
jp
add
xorb
fadds
mov
adc
arpl
icebp
sbbl
dec
mov
cmpb
mov
xor
adc
lods
push
movb
push
jne
std
mov
hlt
xor
mov
sbb
stos
and
add
mov
xchg
ds
je
lahf
mov
ret
int3
cmp
inc
scas
cmp
sbb
inc
popl
and
in
nop
sub
shll
es
xchg
je
repnz
fwait
ret
insb
cltd
xor
mov
aas
iret
and
inc
cmp
xor
aaa
lods
sub
mov
dec
xchg
pop
call
lret
sub
cmpsb
arpl
pop
push
pop
es
or
mov
jge
nop
fisubs
int3
push
dec
sub
ret
jp
inc
jae
mov
jle
decl
jmp
cs
mov
scas
sbb
cli
sbb
orb
les
push
and
jae
mov
mov
adcl
sarl
cld
test
xchg
sbb
dec
lcall
inc
ds
or
out
cs
lret
push
je
jmp
lods
push
and
ret
aas
mov
xor
jne
jp
pop
pop
leave
mov
cmpsl
jae
jp
pop
mov
stos
paddd
clc
arpl
jle
clc
aad
pusha
adc
lcall
xorl
xor
icebp
in
sub
loopne
scas
out
and
popa
push
mov
mov
sbb
cmpsl
roll
mov
adc
addr16
inc
movsb
inc
fistpll
adc
in
mov
pushw
mov
mov
sbb
pop
inc
das
sbb
testb
mov
das
jg
sahf
mov
sub
jmp
loope
jge
aad
call
cwtl
cwtl
leave
cmp
pop
jmp
sub
movsl
cmpsb
mov
dec
jbe
add
jmp
lods
xor
scas
mov
and
jp
addr16
les
movsb
shrl
pop
push
sbb
dec
mov
jg
dec
ret
mov
fcmovbe
and
cmovb
add
mov
pop
dec
adc
cld
xor
push
mov
imul
imul
gs
pop
lods
div
repz
sub
imul
mov
mov
int3
pusha
cmp
mov
rorl
mov
out
into
cli
xchg
stc
mov
jbe
mov
fnsave
repnz
roll
dec
adc
daa
xor
cmp
inc
push
pop
pop
dec
xchg
incl
test
sub
pop
int
sub
and
test
mov
aas
sti
into
mov
push
add
fsts
mov
fcompl
and
ljmp
inc
imulb
imul
sub
inc
aaa
cmc
add
insl
das
push
ficompl
add
xchg
pop
dec
shlb
jle
sub
or
negb
pop
cmp
ljmp
pop
xchg
push
insb
xchg
fdivl
xor
lahf
test
dec
movsl
out
mov
mov
subb
daa
jb
nop
pop
subb
imull
pop
pop
lods
ljmp
clc
dec
imul
fiadds
loope
js
and
fsubrl
add
adc
ljmp
test
cmp
rol
cltd
pop
xor
or
ret
mov
sub
inc
in
dec
xchg
pop
push
sbb
jbe
dec
mov
in
dec
and
sbb
cld
pop
jp
imul
rclb
and
pushf
shll
adcb
inc
sti
lea
sahf
push
shll
add
in
inc
pop
cwtl
cmp
adc
popa
dec
xor
mov
les
push
popf
add
and
jae
dec
stc
xchg
dec
test
xor
jae
cmp
clc
test
and
or
pop
mov
bound
or
xor
les
sub
push
inc
aad
jle
das
shll
dec
inc
orb
mov
mov
cmp
cmpsl
int3
mov
shll
ret
insl
aam
dec
clc
sti
out
xor
sti
sub
mov
out
fcomps
xorb
jb
jns
aaa
scas
pop
and
mov
lods
sarb
xchg
push
shlb
fs
iret
fdivl
or
out
std
inc
or
push
xchg
inc
mulb
xor
test
sub
pop
pop
not
push
cmp
fists
stos
outsl
xor
dec
pop
xor
lds
in
sbb
mov
dec
imull
ror
xchg
popf
shrb
ret
push
dec
jge
sub
mov
cmc
push
xchg
shlb
and
jmp
imul
and
and
xchg
dec
or
test
out
ds
repnz
pop
fldl
inc
or
add
lods
inc
push
jg
xchg
sbb
les
je
mov
shll
lret
dec
nop
mov
mov
xor
mov
mov
fisubrs
sbbb
mov
jb
imul
aad
mov
jnp
lret
movsl
pop
es
in
sbb
popf
pusha
xorl
ja
mov
cmpsl
cmp
sbb
pop
push
cmp
icebp
lods
incb
in
lods
xlat
and
int3
push
xor
aaa
mov
sub
mov
adc
jo
cs
xchg
mov
inc
push
mov
dec
mov
adc
xchg
call
setne
mov
push
mov
and
ret
jge
leave
loopne
mov
mov
divb
push
mov
xchg
mov
mov
xor
das
test
and
xchg
xchg
jb
add
lods
imul
push
xchg
iret
ds
test
mov
outsl
mov
popf
pusha
xchg
mov
loop
ss
aam
into
or
jecxz
xorb
andl
repnz
jecxz
jg
in
fdivrl
lock
dec
adc
std
pop
dec
outsl
cld
add
arpl
mov
or
in
cmc
push
js
cmp
jp
in
lahf
sub
xchg
mov
xlat
cmp
push
divb
pop
or
test
inc
lds
add
cwtl
hlt
xlat
addr16
add
fiaddl
test
mov
sub
jecxz
or
cmc
dec
sub
mov
mov
pop
push
pop
dec
fsubs
add
hlt
out
and
mov
jne
aas
rorl
mov
fs
push
icebp
push
push
aaa
shlb
sbb
stos
pop
cmp
add
out
pushf
mull
push
sbbl
sbb
pop
test
pop
mov
outsb
xchg
jp,pn
mov
in
sbb
lods
xchg
jp
das
push
data16
dec
sbb
xchg
xor
inc
call
mov
iret
call
dec
push
jle
jno
and
leave
fildll
inc
sub
je
push
jbe
mov
cmp
mov
xchg
push
add
imul
xchg
addr16
mov
aad
mov
xor
insb
out
mov
test
or
xchg
std
fs
stos
dec
dec
lods
jae
cmp
pop
repz
lods
dec
ss
scas
jno
xchg
sub
daa
dec
push
inc
dec
sbbb
jg
cli
xchg
add
inc
push
adc
aam
push
aas
mov
sbb
mov
xor
inc
cld
or
in
inc
mov
aas
mov
adc
cwtl
pop
add
dec
xor
jmp
dec
add
or
cmp
jo
insb
fisubrl
movsb
mov
add
aaa
call
jne
jl
sbb
jmp
arpl
mov
hlt
cmc
adc
mov
dec
cmp
dec
orl
test
scas
mov
subb
iret
lods
std
subb
mov
fidivl
sbb
ret
inc
mov
xor
jecxz
mov
movsb
mov
in
xchg
xor
aad
mov
jbe
icebp
movsl
push
adc
mov
cs
push
mov
push
dec
push
mov
out
insb
jns
gs
push
aad
dec
lret
sub
pop
push
fiaddl
xor
push
rolb
add
mov
dec
jp
xor
aaa
ret
cmp
popf
sbb
sub
jb
test
dec
dec
push
fcmovbe
gs
pusha
add
cli
in
mov
mov
enter
les
lods
pop
test
movsb
lcall
js
dec
cmp
mov
movsl
push
push
cli
lahf
adc
xchg
mov
pop
ss
push
inc
inc
adc
or
adc
and
fsubrl
enter
bound
pusha
aaa
dec
xor
nop
mov
test
lcall
lods
cs
in
es
mov
shlb
fcomi
fiadds
icebp
pop
inc
pop
outsl
jne
lock
sbb
hlt
cli
xlat
jae
inc
xchg
add
push
or
add
or
test
inc
sti
adc
dec
aad
jl
adc
icebp
ret
add
mov
ret
xchg
inc
dec
xchg
rolb
sub
mov
dec
dec
mov
rorl
jmp
inc
stc
jns
iret
cmp
xchg
dec
stos
jecxz
mov
fucomp
test
cmpsl
xchg
test
int
outsl
daa
or
fisubl
fwait
sbb
cmp
dec
insb
push
lret
mov
push
js
rcrl
mov
pop
rorb
cmp
inc
and
enter
add
out
add
loop
or
ja
cli
mov
push
push
jne
fdivrl
popf
faddp
cmp
repz
in
mov
imul
mov
lds
ljmp
cmpsb
inc
pop
mov
push
bound
xchg
test
xchg
jae
les
cmp
or
cli
and
sbb
insb
out
and
cld
mov
add
dec
push
mov
aaa
aam
in
mov
dec
fs
popa
add
repnz
jp
xor
test
mov
sbb
ds
push
or
fdivrl
das
inc
das
lret
repz
pop
addr16
iret
cmp
mov
test
imul
push
leave
fldl
inc
icebp
daa
pop
or
mov
xchg
hlt
addr16
push
lret
pushf
mov
mov
pop
data16
mov
daa
mov
mov
push
jne
xor
negb
ss
jmp
mov
xchg
in
test
lahf
add
mov
out
jb
lds
dec
sbbl
cmp
mov
clts
cmp
adc
sbb
fxch
jl
xor
ja
dec
aad
neg
cmp
mov
notl
dec
ror
sub
pop
enter
scas
push
clc
out
pop
ret
mov
stc
mov
mov
mov
imulb
outsb
mov
lods
mov
push
fistpl
and
movl
inc
sub
dec
inc
std
insl
inc
xchg
aaa
shll
cmp
sub
xchg
add
sub
and
addl
stos
lds
or
lock
mov
setnp
pop
push
aad
out
jg
orb
ss
pusha
divl
es
sbb
mov
inc
lret
testb
mov
pop
push
mov
fwait
in
inc
inc
dec
inc
sub
ret
rolb
roll
std
nop
gs
pusha
stos
sti
mov
xchg
dec
outsl
aad
idiv
out
daa
lock
int3
sub
mov
pop
sbb
pop
xchg
js
add
lahf
out
adc
push
fildll
out
cmpsl
sbb
xchg
xchg
and
xchg
mov
shr
and
fidivs
aam
daa
push
mov
and
mov
jecxz
or
insb
sti
lock
mov
data16
sub
imul
jg
shll
cmpsb
inc
shrb
mov
sub
pop
dec
stc
mov
ss
mov
mov
pop
fsts
pop
mov
idivb
push
dec
test
addr16
arpl
xchg
sub
fstp
mov
adc
test
js
dec
aam
ficoml
mov
or
push
call
cmp
inc
mov
pop
push
xchg
shll
imul
fxch
add
push
popf
cmp
mov
sbb
cmp
ja
jne
nop
hlt
dec
sbb
roll
push
lods
test
std
sbbb
outsb
xlat
add
cmc
in
add
fwait
mov
push
inc
jecxz
jmp
fsubl
movsl
pop
xchg
dec
add
imul
cmc
xlat
inc
stos
inc
int3
xlat
loope
lcall
and
mov
push
repnz
aad
jmp
pop
adc
dec
xor
pop
push
lods
pop
sub
repnz
lcall
mov
mov
push
jnp,pn
scas
jo
clc
scas
fnstenv
pusha
cs
mov
cmp
fcoml
imul
pop
rclb
pushl
fs
cmp
in
mov
popf
mov
and
aad
mov
cwtl
lcall
pop
mov
cld
lret
xor
lret
mov
mov
cmpsl
addr16
cld
mov
adc
ret
shrl
ljmp
push
jmp
mov
push
int3
adc
lods
adc
roll
push
fwait
mov
and
push
repnz
and
xchg
test
ss
test
inc
pop
dec
stos
out
mov
cmpsl
push
addr16
repnz
repnz
int3
push
mov
pop
adc
push
mov
cmpb
push
popa
dec
push
jmp
dec
outsb
add
pop
sbb
clc
sub
movsl
jl
and
push
in
rcrl
rolb
es
mov
mov
jl
push
aam
xchg
mov
mov
jle
mov
add
test
xor
sbb
test
mov
add
or
in
test
int3
xchg
gs
cmp
es
fdivrs
mov
fwait
inc
sub
mov
dec
cmpsb
sbb
cs
loop
add
jb
gs
dec
cmpsb
pop
cmp
insb
dec
cld
scas
out
roll
shrl
adc
ljmp
or
test
je
imul
aaa
mov
pop
xor
lods
aad
sbb
mov
jp
and
jp
mov
mov
dec
dec
das
sbb
repz
dec
xchg
pop
hlt
cmp
dec
ret
in
addr16
jle
lock
add
dec
xchg
cs
dec
mov
adc
test
arpl
cmp
cmp
cmc
movsb
hlt
fmulp
push
or
add
fisubrl
fistps
aam
inc
roll
popf
hlt
clc
add
push
pop
out
pop
aas
sub
negl
mulb
inc
out
cmpsl
stos
inc
shl
pop
fidivl
or
fwait
inc
cltd
mov
ret
std
or
xchg
sbb
dec
xchg
ss
je
dec
and
insb
add
and
and
loop
neg
loope
mov
lods
push
inc
scas
lods
mull
ss
dec
fisubrl
pop
inc
or
xchg
mov
fistps
pop
enter
cmpsl
xchg
adc
and
pushf
sub
inc
cmp
cmp
dec
lahf
arpl
mov
in
out
aam
int
push
out
add
jle
mov
adc
jbe
pop
dec
mov
jne
or
ror
popa
jecxz
test
es
jbe
and
mov
test
sub
sbb
push
mov
orl
mov
scas
imul
sahf
pop
cltd
push
push
push
adc
divps
adc
lods
loope
mov
sti
hlt
shlb
jle
jnp
push
add
jge
mull
push
and
cmp
xor
fnstenv
adc
xlat
push
movsl
push
dec
lcall
bound
test
or
jp
cltd
loope
imul
sahf
fadd
mov
mov
xor
shl
fcomps
mov
sti
pop
cli
stos
decl
push
ds
or
hlt
inc
jae
xchg
and
push
rclb
mov
inc
clc
xchg
or
pop
loop
outsb
xor
das
and
add
dec
lods
push
ficoml
and
pop
jae
jp
into
and
out
inc
sub
jno
xorl
imul
push
sar
mov
inc
cmc
mov
int3
js
sar
pop
scas
out
pop
insb
gs
xchg
xor
test
push
jp
lods
jns
mov
xor
fwait
sbb
data16
aas
aam
mov
pop
test
pop
mov
cmp
pop
pop
mov
dec
adc
jns
mov
sub
mov
mov
lret
jle
dec
jmp
pop
ljmp
jb
mov
xor
xchg
cs
andb
sbb
std
mov
scas
clc
mov
movsb
clc
xchg
mov
rcrb
enter
insl
mov
mov
mov
xlat
inc
ror
sub
insb
in
andl
mov
mov
mov
je
mov
push
mov
mov
mov
add
imul
aam
sub
in
sahf
and
or
jle
pop
sbb
aaa
test
bound
jge
mov
inc
adc
mov
fildll
loopne
mov
jmp
pop
ret
mov
xchg
and
push
mov
adc
inc
imul
inc
mov
orb
mov
ficoml
fwait
push
pop
nop
push
dec
cltd
test
or
das
cmp
inc
hlt
lret
loope
push
xor
and
inc
mov
cmp
mov
mov
lds
imul
cltd
mov
xchg
add
mov
adc
sub
lea
icebp
gs
jp
xor
push
sbb
mov
scas
push
sarb
xlat
xor
faddp
xor
pop
jle
divl
arpl
adc
js
vmread
out
es
pop
adc
jmp
mov
sub
mov
push
dec
ret
inc
or
nop
xor
call
push
sub
jl
add
xchg
add
xchg
arpl
sbb
push
xchg
inc
mov
adcb
cmp
xor
push
push
ljmp
pop
popf
out
add
xor
int3
std
fimull
push
sbb
mov
sbbb
div
andl
out
in
insl
jg
and
rorb
sahf
mov
lock
lea
and
mov
cmp
das
test
push
sbb
add
xlat
sbb
cld
adc
mov
jne
scas
push
mov
movsl
xchg
daa
push
movb
shr
mov
out
iret
dec
test
lcall
push
dec
xor
or
addl
mov
push
iret
test
cmc
cmp
mov
xchg
mov
sti
lahf
mov
sub
mull
add
rdtsc
dec
lods
lret
pusha
int
add
sbb
cmpb
jg
adc
cmp
in
addl
notb
sahf
mov
push
mov
sbb
int3
push
pop
roll
mov
arpl
jo
aas
fnstsw
cmc
insb
fs
and
xchg
mulb
popf
push
pop
ret
ds
add
mov
fs
push
dec
fcomi
xor
mulb
xchg
stos
popf
stc
mov
jne
mov
stc
sub
adc
push
push
sub
add
mov
sbb
cmpsl
movsl
xchg
mov
inc
iret
add
fwait
dec
dec
push
shll
pop
icebp
or
dec
test
cmp
push
xlat
dec
xor
fs
mov
jnp
sti
out
xor
dec
aaa
mov
cld
lods
jnp
pop
lds
push
sbb
push
dec
add
or
push
cmpsb
icebp
insl
scas
in
shll
arpl
sbb
divl
push
in
pop
adcl
xor
jmp
je
pushf
popf
cltd
sbb
int3
cld
popa
dec
pop
repz
mov
imul
inc
mov
repnz
jmp
sub
xchg
mov
adc
pushf
push
pop
aam
popl
leave
cmp
xchg
jle
and
jp
lahf
inc
je
out
movsb
stc
lcall
enter
mov
pusha
lds
xor
enter
imul
add
add
push
inc
jmp
gs
int3
arpl
push
les
pop
sub
mov
stos
ret
iret
add
jl
cmc
lds
mov
mov
pusha
addl
jns
or
sahf
adc
lret
pop
dec
mov
sbb
jl
dec
xorb
les
xchg
push
push
xchg
ljmp
js
inc
movsb
test
pop
enter
xor
scas
pop
mov
jnp
fstpl
or
adc
pusha
loope
inc
jae
jle
dec
cmp
jl
mov
inc
jge
and
into
movsl
jne
dec
xor
jmp
dec
repnz
fwait
xor
push
or
push
outsb
xchg
add
out
cmp
cmpsl
dec
jmp
inc
pusha
pop
movsl
xchg
nop
je
inc
adc
insb
ret
pop
dec
mov
fdivr
push
mov
mov
stos
jecxz
cld
mov
cmp
cmp
insb
aam
sbb
ret
fs
pop
xchg
mov
ffreep
cmp
cwtl
inc
xchg
int
xchg
scas
rclb
daa
fisttpl
cmp
add
enter
mov
jo
vandnpd
aas
or
stc
in
addr16
and
and
adc
xchg
sub
lcall
dec
add
sub
xchg
mov
das
popf
subl
aas
subl
mov
out
push
sub
fbstp
mov
push
push
mov
pop
mov
jo
shrl
and
mov
loope
ljmp
push
dec
icebp
push
pop
xor
jmp
jns
cmp
ret
push
xor
sahf
cmp
cld
loope
cmpsl
ljmp
push
push
push
inc
test
dec
xchg
mov
stos
cltd
ljmp
iret
push
sahf
scas
xchg
insb
sbb
push
xchg
inc
insl
divl
call
test
ljmp
mov
push
cwtl
push
xchg
cwtl
jbe
nop
hlt
jb
mov
addr16
xchg
sahf
out
dec
mov
xor
adc
push
and
jnp
aas
pop
and
inc
add
xchg
stos
sbb
jge
cmp
pop
mov
ss
sub
mov
pop
fisubrs
addr16
shlb
mov
ret
pop
es
shrl
loop
mov
out
pop
in
nop
incb
ja
pop
les
ja
dec
push
sub
mov
lea
xchg
jae
jle
push
sub
mov
mov
jecxz
es
pop
or
sbb
push
push
inc
in
fisubrl
fstp
mov
loop
xor
inc
sbb
mov
es
sahf
rorl
pop
lock
jge
jecxz
ljmp
cltd
arpl
mov
mov
cmp
xlat
out
mov
scas
mov
jp
mov
xor
movsl
inc
lock
mov
xchg
add
and
or
aas
int3
gs
out
cmp
mov
mov
sbb
out
or
ljmp
je
mov
sub
je
fstpt
jne
push
lock
popa
aam
cli
sti
xorl
imul
fldt
jo
scas
cmp
jle
xor
test
jge
mov
xchg
xor
adc
ror
pop
out
jb
jge
inc
std
in
cli
mov
jne
inc
popa
dec
shlb
xor
xorb
es
lret
cmpsl
es
lds
ljmp
inc
dec
inc
cmc
iret
cld
stos
sbb
adc
orl
pop
push
pop
push
stc
adc
xchg
jl
xchg
xlat
cli
dec
push
data16
cmpsl
mov
in
rorb
lods
sahf
pop
mov
sub
scas
int3
pop
mov
sti
push
xchg
xchg
sub
ret
lret
dec
mov
nop
dec
jns
cltd
nop
add
call
movsb
and
mov
jge
inc
fiadds
out
sbb
test
imul
dec
mov
nop
aaa
push
in
dec
cmpsb
cmp
xor
arpl
popf
fwait
movsl
push
xchg
mov
mov
xchg
loop
outsb
sub
popa
jl
xor
test
adc
jno
inc
int
fs
sub
push
lods
lahf
lods
out
rcll
fwait
jo
xchg
arpl
rcrb
mov
inc
movsb
mov
in
sub
sbb
call
imul
imul
lds
ja
nop
lods
cmp
lods
movsl
jns
icebp
ss
les
cmpsb
movsl
adc
and
dec
mov
jecxz
flds
push
ja
sahf
pusha
add
bound
lcall
outsb
popa
push
lcall
clc
mov
jmp
fimull
aad
xchg
xchg
scas
loop
sub
sub
aas
aam
dec
loope
aad
out
les
add
sub
mov
dec
mov
mov
out
addl
ja
imul
es
inc
jle
xchg
xor
xchg
mov
jmp
inc
pop
sahf
adc
pop
imul
cli
pop
mov
cmp
ficoml
inc
lcall
cmp
xchg
mov
out
fdivrl
adc
add
aad
pop
mov
add
pop
inc
in
lods
xor
scas
mov
mov
mov
sbb
ja
ret
rcrl
loop
scas
inc
repnz
adc
movsl
xor
lods
scas
mov
gs
push
jne
dec
jb
xor
hlt
jl
push
jg
or
mov
push
mov
mov
add
and
or
lea
dec
mov
sbb
cli
xor
dec
iret
push
out
or
lcall
lock
repz
inc
lock
inc
xor
and
mov
mov
movsl
js
cmpsb
inc
jecxz
add
xchg
adc
jge
dec
pop
movsb
mov
cmp
fwait
mov
xor
out
dec
dec
cmp
clc
jb
mov
lds
xor
mov
mov
aaa
and
lods
ffree
mov
or
ds
jg
mov
les
jns
jmp
and
cli
dec
xor
xlat
addl
pcmpeqb
fisttpl
push
lock
popf
lea
jb
mov
bound
fisubs
pop
mov
xchg
pop
test
in
repnz
aam
push
int3
sub
movsl
push
arpl
sbb
jp
cli
xlat
cmpsb
sub
mov
je
sbb
pop
pusha
aas
lods
idivl
rcll
inc
add
and
mov
test
lret
jge
pop
jmp
shlb
scas
cmp
test
fmull
cmp
adc
mov
int3
movsb
shlb
and
out
sti
imul
iret
arpl
dec
and
movsl
add
pop
push
xor
dec
add
jno
jae
mov
popf
mov
js
pop
add
fstps
dec
data16
fcom
arpl
ljmp
adc
push
jno
adc
dec
pop
mov
test
xchg
sbb
rorl
bound
aaa
mov
sbb
out
ret
movsl
ja,pn
cmp
sub
add
incl
sarl
cmp
fsts
or
add
lea
cmp
cld
stc
icebp
fcmovb
inc
ss
mov
in
daa
inc
xacquire
repz
inc
popa
jbe
xor
push
inc
sub
and
adc
popf
mov
js
jb
arpl
mov
in
push
xchg
push
fs
stos
xchg
inc
jg
adc
xor
pushf
xchg
lret
loop
sbb
jns
rorl
dec
push
mov
mov
mov
inc
xchg
insl
cmp
mov
js
cmpsb
dec
test
pop
inc
ds
and
push
aad
or
mov
jb
and
stos
or
fsubrs
push
sub
fbstp
mov
add
push
mov
cwtl
sub
xor
jmp
xchg
std
cmp
pop
push
loop
ret
mov
mov
loop
out
add
fsubrs
hlt
es
sahf
cmpb
stc
add
cmp
andl
xor
stos
addr16
mov
femms
jno
cmpsl
out
aad
pop
orb
scas
dec
mov
fadd
inc
data16
jg
aam
and
jnp
repnz
sbb
shl
loope
sbb
or
addb
pop
out
inc
cmp
ret
xchg
lods
int
lods
push
repnz
mov
push
pushf
jp
jno
mov
stc
mov
xchg
idivb
and
decl
sbb
call
lahf
lods
loope
fmull
sub
inc
fwait
out
or
lock
or
outsb
jns
sbb
cwtl
cmpsb
jae
pop
lods
jnp
xor
stos
mov
xchg
mov
add
jl
ror
fldt
ret
dec
mov
aaa
xchg
rcrl
sbb
enter
shlb
jns
popf
push
es
scas
mov
sbbb
rcrb
dec
pop
cmp
or
cmp
inc
dec
fs
cmp
cmp
shlb
or
xchg
inc
scas
stos
mov
xor
nop
fcmovb
dec
clc
push
xchg
fnstcw
sbb
int3
mov
mov
inc
andb
dec
push
loopne
adc
popa
mov
add
shrb
push
cld
int3
push
aad
sub
fwait
outsb
sbb
pusha
icebp
nop
push
aam
sub
daa
sbb
mov
jb
adcl
stc
stos
mov
std
out
inc
outsb
xchg
xlat
and
cmp
scas
subl
in
jmp
mov
dec
roll
fs
int
filds
pushf
lea
mov
gs
mov
adc
mov
testl
shlb
inc
pop
and
daa
pop
scas
rcll
push
xchg
jb
iret
insb
stc
sub
dec
iret
dec
push
mov
xchg
fisttpll
jns
push
andb
mov
mov
xchg
js
into
mov
call
lret
cltd
push
add
fimuls
xchg
adc
out
pop
sbb
jecxz
cmp
pusha
xor
inc
rolb
xchg
xor
mov
frstor
push
mov
icebp
fs
adc
adc
jg
mov
pop
fs
lahf
aas
insl
inc
hlt
ret
test
and
popa
call
sbb
enter
test
std
movsl
mov
loopne
xor
sti
sub
shl
mov
test
xchg
xchg
push
or
int3
push
insl
shl
in
mov
out
std
jbe
cmp
cmp
rcrb
in
sub
mov
mov
fiaddl
icebp
push
push
das
jnp
notb
push
cmp
popa
jl
subl
sub
scas
popf
cmp
sbb
imul
cmpsl
imul
add
xor
add
pop
inc
jp
mov
scas
jb
xchg
adc
in
fdivrp
sti
lods
pop
or
jb
scas
jmp
cmp
xlat
mov
mov
cmpsb
jne
insb
scas
dec
loop
inc
push
push
xor
jp
iret
stc
sbb
pop
scas
push
mov
faddl
inc
in
lret
out
mov
gs
mov
jae
xor
imul
mov
inc
jnp
xor
scas
rol
je
sbb
lods
adc
or
lods
mov
andl
mov
push
andl
dec
imul
pop
xchg
inc
mov
cmp
out
mov
insb
jge
sahf
mov
mov
dec
sbb
jmp
and
push
movsl
xchg
rcl
repnz
cmp
mov
stos
xchg
and
mov
lcall
stc
sub
sti
outsl
xchg
aas
fisubrs
enter
cmc
jb
mov
in
into
jns
jb
lcall
fwait
mov
arpl
add
jmp
shl
imull
cmp
sahf
jmp
int
test
jmp
cmp
lcall
aam
add
mov
xor
push
pop
mov
iret
jle
test
aas
fs
ja
or
idivb
cmp
mov
stos
daa
ljmp
nop
dec
rclb
shll
xchg
sbb
movsl
xchg
xor
lock
insb
lods
push
out
imul
sbb
inc
sti
int3
sarb
nop
les
xchg
mov
bound
xchg
mov
imul
xchg
push
cmp
ds
and
mov
movsl
add
pop
cmpl
cmp
test
and
pop
xor
out
mull
add
pop
fisubs
dec
loop
jns
mov
std
dec
cmpsb
lea
mov
cmpsb
int
ds
test
hlt
push
xchg
cmp
add
mov
in
sub
adc
fdivrp
xchg
lds
dec
add
insb
fwait
push
cli
imulb
push
out
mov
and
sti
lahf
lods
push
or
push
popa
cmp
ss
push
lock
push
jne
fdivs
jne
mov
je
das
sbb
repnz
mov
jmp
mov
or
cmp
insb
dec
pop
fldenv
and
jo
adc
or
mov
pop
mov
inc
das
pop
cs
push
inc
outsl
lret
and
out
imul
pop
mov
adc
fxam
jl
jne
xchg
mov
add
or
push
inc
inc
adc
inc
add
inc
dec
push
repnz
fs
out
and
inc
push
adc
pop
cmpsl
inc
shl
iret
das
icebp
in
frstpm(287
out
daa
mov
in
rorl
nop
fstpl
and
aad
aad
mov
dec
mov
out
stc
and
enter
xor
ja
das
jmp
rorl
jp
aaa
sub
cmp
sarb
mov
insl
mov
test
mov
cld
mov
dec
sbb
int3
add
negl
adc
stos
sub
popa
adc
mov
dec
hlt
addl
fdivl
dec
or
pop
lock
outsb
data16
movsb
cs
rorl
lea
repnz
mov
add
lods
rol
push
sub
into
inc
jo
fsubr
or
push
repnz
xchg
mov
les
cmp
test
jb
sbb
and
jge
fs
dec
loop
or
loopne
ds
lret
inc
and
daa
xlat
xor
cmp
inc
fiaddl
inc
push
jns
lock
jle
add
cld
jae
jnp
js
xor
dec
jns
cwtl
sbb
xchg
xor
cmp
cld
mulb
lds
loop
test
subl
out
dec
das
adc
mov
or
mov
scas
lret
test
sbb
dec
nop
divl
iret
xchg
js
jp
lea
dec
adcl
pop
and
xor
push
jl
xchg
rcll
cmp
ds
mov
js
push
mov
cmpsl
pop
adc
inc
lock
divb
repnz
hlt
imul
lock
xor
imul
sbb
nop
mov
inc
jbe
mov
mov
das
data16
aas
adc
movsb
pop
cmpsl
or
stos
clc
or
ss
and
imul
jne
int3
push
cmp
mov
xchg
inc
pop
imul
sbb
mov
rcl
mov
push
mov
push
aam
fildll
test
add
and
in
or
xchg
cld
jbe,pt
pop
sbb
movlps
add
sbb
dec
lods
pop
mov
xchg
pop
daa
sbb
mov
mov
ljmp
jne
jmp
and
std
lret
lds
mov
pop
test
push
xor
adc
push
lcall
sbb
lret
mov
ficoml
or
ret
stc
mov
gs
pop
xor
stos
mov
jnp
mov
fs
sbb
test
push
lock
repnz
mov
leave
cmp
mov
repnz
and
les
cmp
jg
dec
ss
sbb
lock
stos
es
mov
pop
push
rep
hlt
repz
mov
cmpb
mov
mov
pop
jno
pusha
push
sub
push
in
out
jne
mov
or
int
popf
clc
aaa
xor
andb
adc
lret
xor
jns
fistpll
mov
lock
sub
jl
or
es
aam
dec
cmp
lods
inc
popa
mov
and
sbb
test
outsl
sbb
rclb
popf
nop
arpl
in
xchg
btc
cmpsb
in
pop
and
sub
ss
dec
mov
push
pusha
loopne
lret
add
sub
push
movsb
inc
ret
fnstsw
xor
sbb
xor
dec
mov
jo
fcompl
adc
mov
mov
cltd
incb
repz
dec
lods
fstl
bound
mov
xchg
fbstp
pop
test
pop
dec
jnp
cld
insl
lods
xlat
xor
mov
and
call
mov
mov
sbb
push
push
daa
lret
or
inc
fidivrl
aas
adc
or
mov
ffree
and
pop
test
xchg
push
mov
push
and
lret
adc
add
dec
test
lcall
shrb
xchg
stos
cmp
xchg
ljmp
mov
mov
cmpsb
fisubrl
push
aas
cmp
mov
shlb
pop
test
jne
jae
repnz
inc
lods
sub
cmp
push
ljmp
aas
sbb
mov
lahf
lods
pushw
inc
idivl
ficompl
aad
pop
push
fadds
cmpsl
push
pop
in
mov
jp
test
sti
shlb
leave
pop
jb
mov
int3
xor
dec
push
xchg
inc
xor
sti
clc
shl
ficomps
scas
rcrb
sub
hlt
cmp
cmp
sarb
push
cwtl
cwtl
or
dec
pop
popf
scas
jb
dec
inc
rep
lds
xchg
lret
adc
xchg
cmp
sub
add
or
pop
or
push
aam
sbb
pop
sub
gs
mov
push
sub
add
mov
dec
pop
mov
and
jl
xchg
fmuls
xchg
add
test
mov
jp
mov
push
repnz
jns
pop
push
pop
sarl
das
lods
cmp
jmp
pusha
xlat
fcomps
shrl
mov
das
movsb
push
fcoml
mov
inc
push
mov
pusha
push
sub
out
cmp
push
push
enter
cmp
cmp
xchg
rorb
out
lcall
push
pop
in
stos
bound
stc
dec
jecxz
adc
loop
dec
xor
jg
cmpsl
jp
sub
push
cli
fcoml
mov
push
loop
lahf
js
or
gs
jae
xor
subb
sbb
bound
and
push
inc
fcomp
call
lds
mov
adc
sbb
lret
in
push
xchg
sti
pop
movsl
into
and
or
cmp
mov
mov
imul
jnp
ret
popf
pop
and
inc
mov
and
out
into
xor
ret
pop
out
cld
sbb
xlat
lcall
add
pop
repz
push
mov
mov
mov
pop
movl
sbb
fldt
jg
lods
rcr
cmpsl
dec
cmc
pop
dec
push
mov
xorl
and
mov
stos
jecxz
es
call
pusha
adc
adc
fisttps
dec
and
sbb
out
inc
mov
push
dec
push
cs
xchg
push
stc
fcoms
iret
adc
mov
mov
xchg
into
std
cs
pop
aam
sub
ss
push
mov
leave
inc
jmp
ret
mov
les
xor
out
daa
adc
push
sub
cmp
xorb
seta
or
loopne
push
idivb
test
arpl
dec
ficoms
and
mov
cmp
adc
cmp
mov
int3
xchg
arpl
lret
push
ss
mov
sbbb
mov
or
repnz
jge
nop
sub
negb
ds
in
cmpsb
pusha
shlb
sbb
addr16
xlat
nop
sub
loop
enter
pop
in
fbld
testb
inc
or
jge
ficomps
scas
fwait
jg
lret
sbb
stos
aam
call
or
xchg
insb
in
xchg
lret
pop
or
jecxz
aas
xchg
sbb
xchg
or
mov
sub
add
into
clc
repnz
mov
iret
jg
addr16
sub
movsb
mov
pop
push
push
jle
push
imull
mov
fwait
xchg
mov
fdivrl
insb
jmp
in
rcrl
outsb
push
mov
push
pop
fiadds
scas
add
mov
icebp
aad
push
and
test
pop
inc
xchg
lock
mov
sub
mov
push
les
out
jp
push
push
enter
fimuls
aad
push
dec
jo
dec
xchg
inc
mov
dec
lods
adc
jne
push
ret
push
or
inc
and
cltd
sarl
in
dec
sahf
pop
pop
jmp
in
cwtl
sub
add
inc
stc
lods
sub
adc
mov
lds
or
sbb
push
lahf
mov
jl
jp
dec
inc
and
lea
pop
aam
cmp
leave
pop
sbb
xor
leave
fidivs
loopne
int3
mov
add
outsl
fimuls
xchg
fisttps
cmp
addr16
adc
mov
popf
or
adc
filds
jbe
lret
push
and
sub
imul
in
out
int
inc
inc
xor
ja
push
leave
pop
cmp
ljmp
shrb
hlt
dec
dec
ds
push
jns
pop
or
mov
in
std
ror
or
pop
je
in
sbb
std
mov
xchg
repz
inc
dec
mov
push
xor
dec
adc
in
xchg
xor
cmp
fstpl
call
push
or
mov
xor
ret
mov
std
or
insb
flds
imul
nop
in
dec
push
out
jo
stos
cmp
loopne
inc
inc
or
jbe
mov
dec
and
cmpb
mov
push
insb
fcmovnu
add
jno
mov
xor
add
mov
iret
cmp
or
sbb
push
dec
shlb
xlat
aas
fdivr
test
cmpsl
push
adc
sbb
push
and
mov
sub
leave
icebp
jle
and
bound
add
ret
inc
mov
leave
inc
mov
xor
jge
out
push
fldl
mov
fwait
mov
dec
push
in
or
enter
jae
push
sahf
dec
adc
in
or
dec
je
cld
in
std
lds
xchg
ficomps
sbbl
ljmp
jg
sbb
je
pop
or
jecxz
add
addr16
clc
pop
fnstsw
mov
stos
or
mov
xchg
lods
mov
js
xor
adc
aad
call
dec
ret
xor
push
or
sbb
ljmp
movsl
nop
dec
dec
ljmp
in
jb
pop
popa
cmp
or
lods
push
sbb
lahf
mov
jge
jge
jge
jns
pushf
pop
rclb
fildll
add
mov
ret
xlat
mov
or
popf
les
call
adc
out
loope
or
fsubrs
cmpl
jo
cli
arpl
cmp
pop
fsubp
push
in
movsb
sub
adc
xlat
or
les
aaa
dec
and
dec
push
enter
hlt
in
fwait
in
push
inc
mov
push
cmp
arpl
test
addl
xor
pop
sti
add
pop
sbbl
out
jge
or
repz
or
add
jmp
jmp
insl
sbb
daa
cs
push
and
sahf
adc
pop
andl
sub
xchg
adc
jo
fistpl
rorb
jg
jmp
xchg
sub
pop
gs
jo
add
add
mov
faddp
test
repnz
std
and
lods
cmp
and
bound
adc
in
nop
and
jp
xor
call
aad
daa
je
mov
cld
daa
xor
popa
imul
out
mov
or
adc
and
mov
icebp
aaa
push
lahf
add
flds
ret
push
or
xor
mov
lea
mov
imul
aad
adc
cmp
es
xlat
loopne
sahf
into
sbb
sbb
mov
adc
scas
cmpsl
lret
test
fs
lret
cs
mov
stos
stc
divl
in
pusha
mov
inc
aas
mov
push
ret
xchg
dec
outsl
xor
jb
popf
and
mov
fistps
push
xor
xor
sub
cmp
push
xlat
adc
sub
cld
pop
sub
sub
outsb
popf
nop
inc
outsl
or
push
xchg
hlt
fwait
test
outsb
loopne
xor
pop
popf
sub
fsubrs
and
daa
mov
loope
lea
insl
push
cmp
lret
dec
sarb
mov
mov
sbb
or
test
in
cs
push
mov
mov
mov
les
or
repnz
lds
xchg
movsl
adc
mov
dec
jge
dec
add
push
dec
insl
sbb
pop
push
mov
add
and
bound
popf
sub
divb
es
mov
and
add
test
push
btc
lcall
mov
and
sub
mov
shrb
inc
out
adc
ja
cmp
sti
xor
and
jle
cmpsl
test
adc
loopne
sti
int
add
adc
mov
inc
inc
clc
adc
inc
cs
pop
shlb
fcmovbe
repnz
das
and
out
mov
shrl
out
loop
sub
jns
adc
pop
sub
enter
in
in
jmp
dec
ljmp
inc
out
ljmp
in
sbb
test
push
mov
aas
jae
mov
mov
cmp
or
inc
cmpsb
sub
stos
cmpsl
movsl
stos
xchg
jmp
int
cmpsb
or
push
call
mov
data16
pop
sbb
xchg
stc
pop
jns
out
pop
cwtl
xor
loopne
sbb
sbb
ds
repnz
enter
sbb
mov
jb
jecxz
loope
adc
sub
mov
xchg
data16
loop
lret
push
subl
stc
sub
es
or
mov
stc
movsb
shlb
add
cmpb
aad
jo
mov
cmp
or
addr16
stos
jmp
sub
jns
dec
xchg
cmp
es
ja
push
test
mov
xor
and
pop
fs
into
testl
dec
adc
movsb
inc
enter
repnz
lea
push
negl
inc
mov
mov
in
push
out
popf
xchg
cli
dec
xchg
jecxz
imul
rolb
add
movsb
dec
or
jb
data16
addr16
dec
inc
jnp
mov
jg
gs
xchg
and
lcall
mov
popf
cmpl
pop
repz
add
xchg
dec
popa
test
sbb
daa
into
movsl
test
cmp
scas
in
mov
out
sub
or
and
pop
pop
cmc
insb
pop
adc
add
cwtl
fidivs
aad
push
test
dec
popf
cmp
scas
test
popa
fisubrs
adc
mov
popf
push
xchg
insl
or
movsl
daa
lahf
pusha
lea
sub
adc
xchg
mov
test
xchg
inc
in
movaps
into
pop
jg
lods
cmp
rcrl
sub
addr16
je
push
jmp
movsb
mov
nop
loop
insl
out
mov
xchg
mov
inc
jg
cmp
loopne
lods
and
pop
pusha
sub
pop
add
cltd
pop
push
dec
push
rolb
push
xchg
inc
pop
decl
inc
or
or
int3
jno
mov
push
fsubl
scas
sub
loope
ds
outsb
mov
push
mov
and
aam
add
es
sub
out
insb
xlat
inc
mov
pop
imul
cld
jb
ljmp
pop
movsb
sbb
insl
and
test
or
rcrl
inc
dec
pop
inc
pop
repz
jmp
mov
nop
cli
mov
and
int
xchg
popa
jne
inc
inc
cli
push
arpl
clc
call
fcmovne
scas
sbb
ret
aas
mov
dec
add
into
fimuls
sub
xchg
hlt
cs
js
orps
jno
pop
add
sbb
shrl
xchg
mov
stos
inc
popf
loop
test
or
test
aaa
sarb
sbb
lock
mov
cld
add
mov
outsl
pop
mov
inc
ljmp
sub
dec
in
adc
fsubr
jns
cli
push
add
jbe
pop
fsubrs
mov
pop
rep
and
fisttps
fbstp
inc
jmp
mov
sbb
inc
mov
iret
sub
jne
mov
jbe
cld
test
shll
inc
mov
or
mov
cli
jno
ret
push
int
pop
lret
ror
mov
stos
je
into
dec
xor
sbb
mov
ja
mov
mov
dec
jb
mov
inc
mov
lods
xchg
out
and
mov
add
outsl
das
cwtl
xor
adc
es
cld
push
test
lods
and
push
outsb
xlat
sbb
cltd
sbb
fcoms
pushf
imul
cld
fsubrl
pop
inc
inc
xor
cmp
lds
in
lods
loop
and
mov
and
mov
or
add
mov
inc
in
inc
mov
popf
xchg
jge
xor
lds
mov
sbb
or
xchg
popf
adc
inc
pop
test
pop
idivb
jg
fildll
fwait
jle
push
or
mov
in
and
mov
xor
xor
sti
fs
adc
xchg
push
stos
int3
xor
push
ljmp
mov
sub
lods
shlb
push
popa
je
lahf
and
mov
pop
adc
leave
lea
jbe
lcall
mov
icebp
hlt
lods
sub
insl
into
cmp
adc
add
clc
mov
xor
dec
ficoms
push
or
jb
fs
ss
outsb
xchg
push
in
push
push
sbb
sbb
bound
xor
daa
das
push
pusha
and
and
int3
lret
mov
std
inc
jo
push
adc
mov
ror
into
aad
pop
and
mov
mov
nop
dec
sbb
dec
jnp
mov
xor
cld
mov
test
cmp
mov
xchg
xor
je
pop
sub
xchg
bound
mov
dec
add
test
pop
mov
jnp
in
cmpsb
fnstcw
shl
lret
mov
ficoml
popf
and
verr
jne
push
jp
je
xchg
fidivrl
sub
push
xor
shrl
cmp
cmp
sahf
ja
int3
pop
cwtl
int
and
insb
fmulp
and
adc
push
inc
inc
add
aad
js
in
sub
pop
xchg
mov
pop
mov
pop
cmp
xor
dec
xor
lret
cmp
cld
pop
push
in
addb
aad
push
push
popa
or
leave
lods
jnp
mov
mov
and
xchg
ret
cltd
outsl
fcoml
push
adc
sub
in
sub
pop
push
in
lret
adc
sti
out
mov
xchg
mov
imulb
fildll
xor
cmp
dec
fwait
stc
add
jb
mov
popf
movsb
out
add
js
fstpt
mov
mov
addr16
call
xchg
in
mov
fdivs
mov
lret
sbb
mov
arpl
pop
fs
jns
fwait
push
int
push
int3
cmc
loope
andl
test
inc
push
mov
in
cli
push
dec
xchg
dec
aaa
pushf
stc
sbb
jp
inc
movb
dec
mov
push
xor
mov
es
popf
gs
inc
imul
ret
add
dec
mov
and
repz
xor
pop
lods
inc
inc
inc
ss
cmpsb
std
cmp
roll
hlt
int3
mov
pop
and
mov
and
stos
sti
popa
pop
lds
xchg
add
into
mov
fsts
in
ret
lahf
push
push
clc
or
bound
andb
mov
cmp
mov
and
stos
dec
sbb
sub
pop
fists
mov
sti
loope
mov
and
ss
add
icebp
sahf
sub
xchg
in
les
adc
mov
jmp
and
sbb
cld
pop
jnp
pop
jnp
daa
push
ret
pop
shll
push
mov
xor
mov
lods
sub
jb
aaa
xchg
aad
fldl
cwtl
loop
test
xor
pop
mov
pop
aaa
out
jae
add
adc
jmp
movsl
test
mov
xor
mov
xlat
or
mov
push
push
repnz
pop
or
and
cmp
int
inc
jb
nop
pop
test
pop
cmc
ret
push
paddq
mov
xchg
push
push
pusha
inc
inc
fmull
sub
mov
loope
xor
push
cmp
mov
xor
aaa
xor
inc
ds
xor
push
jge
jne
mov
push
inc
ficoml
lcall
inc
call
jmp
sub
lret
repnz
pop
das
sub
jecxz
or
or
dec
jno
test
stc
cld
push
inc
gs
cmpl
sub
cld
in
je
xchg
ds
dec
inc
leave
mov
fwait
aam
lods
icebp
or
push
hlt
and
sub
xor
xor
mov
test
mov
mov
dec
pop
out
fs
cmovle
and
sub
sbb
fs
ret
cmp
lods
jo
outsl
pop
inc
mov
mov
push
mov
pop
push
fwait
stos
jmp
pop
push
xor
js
in
js
divl
faddp
dec
mov
jae
sbb
mov
sub
cmp
cmp
fnstcw
mov
jbe
mov
lds
mov
mov
jno
xor
ret
pop
jecxz
xlat
ss
mov
sub
pusha
xchg
scas
sbb
cmp
sub
xchg
clc
enter
add
outsl
hlt
js
testl
stc
dec
sub
lret
aad
add
cwtl
lcall
pop
sbb
or
out
sbb
push
push
adc
icebp
sub
lods
push
inc
mov
inc
dec
push
jmp
lret
mov
into
xor
loopne
dec
fisubrs
mov
nop
mov
loopne
mov
mov
imull
das
and
mov
and
mov
ror
enter
sti
inc
in
stos
dec
pop
fdiv
dec
xchg
and
lcall
adc
pop
xchg
fcmovbe
xchg
call
or
mov
inc
pop
enter
mov
add
aad
mov
je
or
add
mov
xchg
repnz
adc
test
xchg
adc
xchg
jns
aad
sub
in
pusha
ja
stos
loopne
cld
out
mov
adc
mov
pop
mov
mov
adc
int3
xor
mov
dec
push
jae
popa
cmp
jne
fs
fcoml
adcl
jmp
xchg
popf
ret
inc
push
sbb
lock
clc
sub
sti
adc
movsl
mov
inc
push
xchg
pop
rcrl
push
mov
or
test
lcall
out
ficoms
inc
or
jmp
push
cmp
cmc
add
cmc
sub
jae
mov
mov
out
andl
out
and
push
or
mov
push
sbb
sahf
sub
fs
flds
cmp
add
mov
daa
push
loope
sahf
and
jp
mul
imull
adc
sbb
pop
mov
pop
xor
mov
fsub
and
test
inc
jmp
mov
or
pop
pop
daa
jge
sbb
scas
dec
add
dec
adc
test
and
pop
cmc
adc
iret
cli
fldl
sub
std
cmp
repz
mov
or
xchg
mov
sti
lds
pop
cmp
shll
in
xchg
dec
dec
or
sub
cmp
inc
rcrl
cmp
dec
fdivp
leave
lods
inc
and
popa
dec
scas
iret
pop
xor
or
rorl
into
loopne
xchg
sub
test
lds
aas
jb
jle
mov
mov
pop
out
mov
loopne
cs
pop
add
jecxz
jecxz
xchg
movsl
inc
imul
flds
jae
mov
mov
inc
and
scas
inc
out
sti
and
mov
pop
fmuls
mov
mov
pop
push
jo
sbb
into
fistpl
rcll
push
fisttpll
xor
mov
dec
imul
into
mov
mov
xor
jo
mov
stos
mov
cmp
jno
xor
xchg
fdivr
adc
sub
popf
mov
xor
xchg
xchg
in
test
scas
insb
fnsave
jl
push
fidivl
pop
enter
es
jno
or
mov
jmp
stos
cmpsb
cmpsl
decl
pop
adc
lock
bswap
test
aam
cmp
icebp
sub
repnz
inc
or
inc
xor
jbe
mov
pop
fbstp
pusha
aas
inc
inc
data16
fisttpll
and
cmp
push
jno
popa
icebp
or
dec
mov
push
pushfw
dec
jle
pop
cmp
add
cmp
popa
les
js
jg
adc
loope
enter
sub
dec
push
pushl
test
cmpsb
lret
mov
pop
in
cmp
scas
xor
sub
sbb
mov
jecxz
mov
cmp
sbb
jp
add
arpl
jle
scas
enter
mov
int3
mov
add
or
shl
call
sub
dec
or
inc
popf
inc
mov
cltd
cmpsl
xchg
imul
xlat
jecxz
inc
jmp
sub
dec
sub
xlat
fsub
mov
call
xchg
cmpsl
adc
daa
scas
push
loope
xchg
add
pop
rclb
mov
mov
and
lods
dec
out
pusha
xchg
push
in
stos
jbe
jecxz
add
cmp
sti
ss
out
lret
or
ljmp
adcb
pop
push
xor
add
push
jecxz
push
cmc
insb
inc
cmp
dec
fdivrl
jns
imul
or
mov
popl
inc
sti
dec
dec
das
lret
pop
js
cmp
fbld
repnz
mov
js
rcll
imul
mov
adc
inc
and
and
lahf
out
lahf
pushw
das
inc
mov
pop
pop
xor
adc
adc
sub
xor
pop
pop
dec
inc
xor
stos
or
clc
out
mov
or
or
adc
cli
xchg
cmp
mov
sub
cmpsb
ja
stos
subb
xchg
sub
inc
mov
cmp
ret
pop
jp
adc
push
outsl
out
addr16
sbb
std
inc
pop
nop
lock
inc
cmp
test
push
jecxz
loopne
xchg
aaa
sbb
movsl
sub
push
sub
jae
jl
movsb
sub
xchg
xchg
sahf
js
aam
ss
mov
lret
in
fstps
out
inc
pushf
je
mov
inc
popf
and
lcall
cmp
xchg
add
mov
jg
jno
push
pop
xor
cmp
cmp
sbbl
dec
outsl
aam
push
mov
loopne
bound
sbb
notb
inc
adc
lret
cmp
les
mov
jmp
mov
mov
js
mov
dec
jg
cs
adc
gs
pusha
out
or
addr16
pop
sub
adc
xlat
inc
and
pop
mov
lds
pop
sti
test
repnz
in
sarl
xor
push
pusha
sarl
xchg
scas
xor
xor
mov
mov
xor
jnp
je
push
incl
jge
repnz
xchg
frstor
pop
loopne
pop
scas
fildll
xchg
xchg
pop
sbb
ja
push
adc
cmp
pop
aaa
and
jge
aas
jecxz
js
inc
mov
mov
mov
ss
add
mov
mov
es
adc
sbb
fsqrt
push
pop
daa
mov
jecxz
test
cmp
mov
mov
mov
mov
test
inc
popf
or
jne
fs
inc
cld
jae
cmp
or
push
sahf
sbb
lcall
in
into
std
adc
stc
imul
inc
dec
fimull
sub
lea
jg
push
cli
nop
movsb
or
loop
push
jo
test
mov
movsl
lods
jno
enter
mov
je
inc
aaa
stc
xchg
pusha
loopne
sub
xchg
enter
jns
add
outsb
and
mov
or
in
adc
idivl
lds
cmpl
mov
sbb
lods
dec
js
add
je
dec
jmp
ljmp
pop
mov
xlat
xchg
xchg
imul
xor
subl
and
mov
fistps
adc
push
and
xchg
push
pop
mov
xor
push
dec
xchg
in
sub
pop
lea
test
insl
negb
fs
vmovsd
adc
push
outsl
and
adc
clc
outsb
das
adc
pop
call
test
jmp
sbb
adc
std
into
test
xor
pop
jp
nop
pop
lods
clc
shl
or
xchg
dec
int3
xor
xchg
fnstcw
imul
jp
cs
repnz
fstl
out
mov
pop
stos
xlat
jo
cwtl
cmp
pusha
mov
push
pop
mov
pop
ret
jo
inc
sbb
ja
add
lock
call
popf
mov
sbb
std
push
or
ja
into
add
adc
scas
jp
fdivrp
xor
iret
icebp
imulb
xor
fistps
adc
mov
push
and
inc
adc
insb
push
popa
lods
fbld
mov
jmp
xchg
es
fcoml
and
or
mov
mov
clc
mov
lock
xchg
out
dec
mov
in
mov
or
jge
aas
pop
jne
int3
mov
jae
insl
jbe
out
add
jecxz
cmp
cmpsl
out
mov
out
cs
or
ljmp
jp
jp
je
mov
mov
mov
adc
sbbb
xor
mov
mov
lret
aaa
dec
mov
call
mov
int
shll
cmp
push
into
mov
mov
scas
mov
pop
pushf
je
or
push
dec
adc
fwait
movsl
jl
sbb
sub
inc
scas
hlt
add
andb
ret
push
popf
rolb
push
sbb
adc
ds
divb
mov
mov
adc
push
jp
cmp
lcall
dec
enter
ds
ljmp
ja
fnstcw
bound
mov
fimull
fcmovu
mov
jo
adc
movsl
shlb
fnstcw
cli
pop
stos
mov
cs
ret
xor
pop
jl
pop
jg
pushf
lds
lods
loop
shrb
lods
jmp
es
out
notb
pop
popa
lock
outsb
add
rcll
sub
push
or
or
or
sub
jg
jecxz
cmp
xchg
push
cld
jecxz
dec
arpl
out
mov
mov
lods
imul
jnp
pushf
or
insl
dec
adc
sarl
or
add
mov
lea
jg
test
mov
xor
mov
aam
arpl
adc
dec
lods
bound
test
mov
aaa
dec
lcall
push
aad
mov
loopne
fstps
cmp
push
imul
sub
ret
ficompl
jbe
ja
fidivl
mov
es
sarl
lods
sub
ljmp
pop
pop
inc
push
jmp
jae
push
in
aad
inc
mov
cmp
push
popl
flds
mov
adc
loop
int
mov
iret
sbb
or
leave
fmuls
imul
mov
xor
loopne
arpl
adc
cmc
out
fwait
mov
pop
subl
cmp
push
sarb
pusha
jecxz
cmpsl
xchg
sti
fwait
cli
xor
stos
imul
fistl
aam
cmp
dec
and
pop
ret
popa
ret
mov
add
push
ja
repnz
mov
dec
mov
add
cli
cmp
mov
inc
std
or
lds
jae
es
es
pop
jg
mov
xchg
arpl
xchg
xchg
je
lock
loope
fcmovne
cmova
mov
jmp
repnz
add
stc
inc
in
fistl
fdivr
rolb
stos
pop
mov
or
pop
popf
lock
jnp
lret
aam
and
dec
sub
lret
mov
inc
gs
ror
pop
lret
xor
and
les
notb
mov
mov
pushw
popl
xchg
jp
and
jns
push
insl
aaa
push
popa
add
inc
push
inc
ss
mov
insl
push
adc
fsubl
mov
adc
dec
xchg
jecxz
push
mov
in
sub
popa
int3
jnp
push
fwait
push
push
xchg
mov
jg
lods
jecxz
lcall
or
in
cmpsl
inc
fidivl
jle
push
aad
daa
cs
lret
jo
test
bound
sarl
fs
jge
inc
movsl
push
out
inc
add
loope
int3
dec
pop
cmp
mov
mov
gs
inc
das
jp
xor
cmp
fnsave
lea
pop
daa
scas
and
test
adc
stos
xlat
divb
mov
sti
mov
les
lock
jne
test
mov
scas
sub
or
andl
scas
in
or
test
sti
mov
mov
out
leave
aad
jle
adc
lcall
push
push
arpl
adcl
mov
jno
insb
inc
pop
test
sub
inc
mov
je
enter
pop
jo
and
pop
adc
and
incb
mov
adc
push
data16
sub
add
cmp
bound
push
test
mov
ss
imul
leave
cwtl
pop
jmp
data16
jae
ss
adcl
xchg
into
outsl
cmc
sub
dec
setge
ss
mov
push
push
mov
ja
mov
movb
dec
pop
xchg
punpckldq
loope
pop
jo
mov
jno
inc
fildl
pop
dec
dec
push
cmpsl
jns
xchg
or
push
hlt
ss
fnstenv
mov
mov
mov
adc
sub
int3
ss
pusha
pop
lock
sti
add
sub
inc
jl
adc
movsl
stc
xchg
push
shll
fs
dec
sub
daa
cmp
adc
mov
iret
sti
lock
pusha
jmp
bound
das
xchg
jbe
sbb
push
incl
inc
lea
into
shrl
and
in
mov
hlt
loop
out
xchg
outsl
lret
jae
mov
adc
mov
imul
pop
sub
push
sub
lods
add
push
jo
sub
out
sbb
fs
pop
test
mov
outsb
inc
jbe
enter
inc
rcl
mov
inc
or
sbbl
andb
out
data16
pop
cmpl
xchg
aam
fimuls
sub
xchg
out
cmp
adc
pop
sub
int3
movsl
or
cmpsl
xchg
xchg
loope
into
fistpl
call
iret
fpatan
add
pop
jmp
push
add
mov
inc
sub
jns
pop
dec
das
sub
or
js
xchg
cli
insl
xchg
ss
jmp
out
negl
bound
cld
test
out
call
std
lock
jl
mov
dec
jle
filds
push
rorl
jbe
xchg
push
cmc
jns
mov
movsl
sbb
mov
std
push
fwait
mov
mov
dec
outsb
push
sahf
mov
outsb
cmp
cmp
pop
push
jno
repnz
dec
cmp
mov
pop
mov
lea
lret
fiadds
and
and
or
xor
mov
pop
and
jb
or
pop
pusha
dec
push
jmp
into
test
mov
jge
push
shlb
stos
pop
jnp
aam
xchg
adc
aam
icebp
mov
inc
arpl
cmc
jl
lods
dec
fs
mov
or
dec
lods
ja
xchg
push
and
daa
xchg
stc
inc
filds
scas
mov
dec
and
push
push
dec
lods
mov
sub
outsb
stos
sub
cmp
nop
into
push
lods
call
loopne
ret
mov
pop
lcall
dec
loop
addb
pop
push
add
dec
adc
dec
add
mov
or
dec
shlb
mov
mov
cmc
mov
cmp
xor
xchg
mov
in
or
orl
leave
jle
mov
mov
cmp
in
adc
and
pop
rclb
push
ljmp
or
sti
pop
xor
xchg
repnz
je
in
adc
add
xchg
cwtl
cld
pop
js
lss
imul
out
in
or
testb
ficompl
xchg
shrl
mov
inc
jecxz
cmpsl
or
jnp
and
movl
xor
add
or
jecxz
inc
xchg
aas
xor
add
xor
mov
fisttpl
arpl
sbb
push
mov
add
mov
jp
clc
test
sub
arpl
rorl
lods
stos
adc
dec
call
nop
fs
div
dec
jbe
push
popf
loop
test
out
ret
push
mov
outsb
mov
das
paddsw
mov
rclb
test
out
aam
jae
add
mov
out
dec
push
hlt
push
xlat
cs
addr16
call
push
pop
call
int3
lods
push
lock
lea
out
popa
mov
or
and
ret
cs
jmp
jne
mov
xchg
test
push
and
gs
je
out
pop
push
push
hlt
cli
sti
inc
cmp
cltd
insl
cmpb
pop
divb
adc
shrl
and
inc
cmp
in
popf
jns
add
fs
jle
mov
and
cli
push
or
rorl
mov
enter
xor
add
mov
lods
icebp
inc
cmpsb
lods
inc
jp
mov
xor
xor
xlat
andl
mov
test
lret
and
mov
adc
jnp
cwtl
testl
push
jb
mov
rolb
loop
inc
push
mov
inc
or
adc
pop
int3
stos
fnstsw
jge
push
jp
pop
and
jmp
push
push
sub
and
imul
lret
xor
push
push
arpl
stos
test
std
push
fs
jo
out
cmp
mov
sub
subb
pop
sub
loop
scas
out
dec
or
cmp
push
testb
leave
shll
jo
cmp
popa
or
cs
in
cmp
push
ljmp
pushf
or
xchg
test
test
push
fmull
inc
pushf
jp
mov
cmp
mov
or
movsl
cmp
sti
mov
xchg
lods
cli
cmp
pop
in
les
lods
sbb
jmp
popf
xchg
test
lret
call
push
and
int3
mov
movsl
push
into
or
cmp
lock
inc
adc
pop
enter
roll
add
test
sbb
sub
xchg
lret
push
sub
js
iret
arpl
dec
sbb
shl
popa
mov
mov
jo
push
das
out
insb
add
popa
cmc
xchg
out
jle
or
xchg
jl
std
out
mov
inc
mov
cmp
insb
test
outsb
cmp
icebp
add
jno,pn
das
dec
inc
arpl
pop
sahf
scas
mov
cltd
aad
popf
push
and
push
aad
lds
xorb
cmpsl
aam
stos
mov
fcom
adc
lcall
sub
mov
out
sahf
inc
jge
mov
mov
fdivr
roll
inc
ja
adc
add
aam
cmp
inc
add
cmp
xor
and
mov
in
push
testb
cli
or
dec
sbb
sub
repz
fisttps
repz
adc
or
cmp
lock
xor
mov
in
test
dec
movb
xchg
and
inc
fcmovbe
fsub
ret
test
iret
cli
cltd
jbe
lcallw
test
mov
mov
aas
pop
adc
xor
enter
cmpsl
repnz
int
xchg
add
cli
push
iret
cmpsl
imul
mov
xchg
mov
daa
in
mov
daa
ja
adcb
and
jge
pop
add
mov
movsb
rolb
call
sub
inc
fwait
mov
clc
push
sub
subl
push
mov
ljmp
pop
jb
pop
jp
jbe
xchg
xchg
xchg
cli
bound
add
imul
xor
pop
arpl
xor
xchg
imul
xchg
and
mov
subb
int
xor
cmp
je
ljmp
sbb
insl
lahf
add
cli
inc
orb
adc
into
pop
xchg
cltd
mov
sbb
test
cmpsb
ds
xchg
push
fs
mov
xor
lds
mov
orl
shlb
push
cmpb
add
aad
adc
xchg
mov
xchg
jmp
add
inc
fprem1
pop
mov
pop
rorb
sahf
scas
pop
add
push
in
add
sbb
int
in
sub
push
xchg
mov
or
adc
lea
jb
sub
in
mov
scas
jno
mov
mov
adcl
gs
adc
pop
mov
cmp
ds
inc
pusha
dec
cltd
fisubl
mov
or
out
loop
stc
mov
mov
int
fistpll
andl
or
add
mov
xchg
xchg
mov
pop
dec
pop
or
shlb
xor
leave
mov
mov
scas
pop
cmpsb
and
xor
shlb
dec
cli
and
mov
sbb
push
dec
adc
dec
xor
hlt
dec
pop
mov
or
outsl
and
or
cwtl
pop
fidivrs
mov
mov
mov
out
scas
and
test
stc
in
pop
decl
inc
mov
shll
inc
adc
xor
aaa
lretw
jmp
cli
cld
shrl
test
add
insl
adc
imul
bound
mov
imul
jo
mov
sbb
outsl
popa
or
mov
addr16
or
mov
mov
rclb
mov
xor
dec
inc
fsubl
jle
hlt
repz
shr
and
mov
mov
insb
daa
or
shll
std
mov
sbb
aam
xchg
repnz
pop
ret
add
cmpb
inc
xor
pop
pop
popf
mov
adc
roll
pop
insl
xor
lret
xchg
push
rdmsr
lds
and
aam
and
imul
scas
cmpsb
jno
push
lret
outsl
shlb
cmpsl
jnp
mov
mov
rolb
jg
mov
repnz
aam
or
xor
pop
aaa
mov
xchg
sub
or
popa
or
xchg
sub
sub
loop
setbe
out
cli
shll
lods
mov
ret
int
sbb
lds
out
je
movsb
fiadds
into
jb
pop
out
je
xchg
mov
das
mov
lods
mov
xor
sarb
push
mov
idivl
or
adc
nop
dec
cs
shl
inc
lret
pop
lods
nop
mov
add
subb
cmp
add
lds
cmpsb
xor
ffree
adc
mov
add
into
xchg
ja
repnz
sub
nop
xchg
push
pop
arpl
js
pop
ss
lret
iret
loopne
and
pop
cmp
repz
adc
or
xchg
movb
mov
sbb
jmp
fs
cwtl
add
sub
negl
stos
xor
hlt
imul
aaa
popf
insl
scas
mov
adc
repz
adc
es
gs
jns
mov
out
mov
subb
lret
dec
dec
fisubrs
ret
cs
mov
jb
insl
xchg
jl
in
sahf
jns
outsl
or
xor
sbb
mov
stc
ja
sub
cwtl
enter
sahf
jae
pop
nop
lods
adc
movsl
dec
mov
push
mov
push
xor
jne
jge
outsb
arpl
lods
mov
cli
inc
push
addr16
lds
mov
cmpl
loopne
ds
push
lret
push
dec
dec
pusha
fstpt
mov
sbb
cmp
mov
clc
mov
cmpsl
sub
bound
xchg
cld
nop
xchg
ret
pusha
mov
jmp
rcl
into
outsb
fildll
mov
cmp
mov
cmovae
outsb
jge
mov
lret
cmp
imul
sub
xchg
xor
imul
adc
add
popa
fnstsw
cltd
jnp
jmp
ljmp
addr16
je
inc
out
jno
push
xchg
inc
lea
cmp
and
jo
xchg
mov
daa
pushl
push
daa
mov
std
outsl
push
in
leave
mov
adc
mov
inc
jg
cmp
xchg
and
add
inc
xor
mov
mov
add
jb
shrl
rcrl
jns
fwait
scas
dec
inc
lcall
sbb
and
in
push
mov
sbb
fisubrl
mov
lock
shrl
push
xor
icebp
mov
enter
cmp
lock
aaa
dec
inc
shrb
int
lret
idivb
mov
adc
in
jle
add
jno
sbb
sbb
out
xchg
ss
jae
add
loopne
adc
outsb
xchg
xchg
mov
gs
leave
movsb
jb
sbb
dec
imul
out
mov
pop
push
loope
insb
inc
daa
pop
mov
mov
int3
mov
and
std
adc
call
std
sbb
mov
cmpsl
cwtl
iret
sub
repnz
pop
pop
mov
lahf
clc
jp
jge
push
mov
neg
adc
into
imulb
pop
loopne
pop
sub
stos
xor
sahf
enter
inc
jp
jo
adc
pop
cltd
adc
je
mov
test
mov
sbb
add
daa
cltd
mov
cmc
jo,pn
scas
movsl
push
je
shl
push
push
icebp
aaa
daa
add
shl
sbb
call
int
cld
mov
xor
in
add
jnp
and
jg
fs
mov
sub
inc
jmp
je
jne
shll
js
adc
adc
in
pop
lods
movsl
lret
push
cltd
xchg
imul
mov
rcrl
xorb
jbe
icebp
loop
stos
movl
fisubl
mov
movsb
jl
rcrl
mov
jne
lds
enter
or
fwait
out
mov
shl
ret
xchg
or
call
in
pop
leave
repnz
fsubl
stos
test
adc
repnz
push
mov
stos
mov
fiadds
add
pop
add
push
dec
lds
pop
repz
mov
loopne
daa
daa
sarb
clc
out
jae
add
or
aaa
add
sub
into
xor
mov
xchg
push
sbb
cmpsl
jecxz
mov
lcall
jno
outsl
sub
xor
inc
pop
loopne
inc
pop
jo
and
inc
xchg
je
push
cmpsb
test
jnp
fst
das
and
mov
out
sub
imul
push
test
cmc
into
mov
mov
push
push
out
mov
loope
adc
jecxz
shlb
sbb
dec
movl
cmpsl
pop
xor
mov
repz
xlat
outsl
frstor
push
shrl
in
mov
add
jnp
xchg
cli
xor
push
pop
lahf
insl
ss
adc
pushf
mov
or
outsl
out
dec
xor
mov
inc
dec
or
pusha
pop
dec
lds
popa
push
int
sarb
xchg
arpl
repnz
add
jmp
aaa
hlt
jecxz
rep
sbb
dec
push
out
arpl
sbb
sbb
add
in
jne
cmp
je
std
or
je
out
lock
adc
add
jno
xor
push
hlt
out
adc
jnp
pop
sbb
cmp
orb
or
adc
ficomps
je
leave
dec
data16
pop
sub
je
inc
mov
inc
out
cmpsl
fldl
lcall
outsb
iret
add
aaa
xchg
arpl
dec
es
dec
pop
into
ss
inc
loopne
sbb
movsl
shlb
inc
sbb
sar
test
push
mov
daa
mov
rolb
cld
or
jae
int
loop
push
loope
dec
loope
pushf
stc
sub
cmp
xchg
add
cmpsb
cmp
xchg
lahf
ficompl
cmp
popa
mov
stos
mov
imul
mov
push
outsb
stc
dec
mov
ret
or
fwait
mov
lret
clc
jns
cmp
sbb
adc
lahf
xor
loope
cmp
push
cmp
popa
lock
gs
sub
aam
loopne
xchg
xchg
jmp
andl
pushf
repnz
sub
cmp
movsl
xchg
pop
push
xchg
sti
shrb
scas
jbe
cwtl
popa
jmp
or
es
sbb
sub
ret
cmpsl
dec
inc
and
aaa
inc
lret
into
mov
adc
loop
dec
dec
in
sbb
pop
scas
pop
insl
dec
adc
dec
dec
sbb
test
mov
mov
jp
cmp
imul
cmp
xorl
call
scas
add
movsl
adc
and
pop
insl
and
test
jno
xor
pusha
adc
enter
leave
sbb
jmp
sahf
add
inc
cmp
dec
movsl
sti
inc
out
adc
cmp
xchg
mov
jns
push
sub
enter
mov
jg
das
push
cwtl
int3
pop
cld
das
xor
xor
xchg
xchg
lds
cmp
pop
xchg
ret
push
xchg
fmull
pusha
xor
gs
pop
xchg
cld
in
test
fsubr
clc
mov
test
cld
ss
push
insl
shrb
cli
mov
lret
mov
shrb
lcall
mov
dec
cmp
shr
or
cmpsb
mov
dec
xor
inc
js
mov
sub
push
ljmp
leave
cltd
or
push
mov
les
inc
sbb
mov
cmc
daa
and
icebp
in
idivb
ljmp
add
sub
mov
rorl
inc
pop
out
and
out
ja
cmpsl
call
pushf
jno
loopne
xchg
cmpsb
insb
jecxz
add
insb
xlat
or
cmpsl
outsl
pop
push
sbb
jge
sbb
aaa
pop
xchg
sbb
jo
dec
xor
pusha
les
or
mov
pushf
dec
dec
clc
loopne
movsl
and
jae
sub
sti
ja
xchg
xor
loop
dec
jne
sti
rcl
ljmp
adc
int3
notb
cld
push
scas
add
pop
loop
mov
mov
test
ror
arpl
insl
out
ss
or
push
jge
push
push
loop
repnz
loopne
fiadds
call
push
lods
popa
loope
repz
in
fsub
not
dec
xchg
xchg
pop
push
jae
daa
sbb
push
es
js
bound
lock
fadds
jbe
jle
das
pop
insb
fisttps
add
xchg
adc
bound
scas
aas
js
adc
sbb
dec
mov
pop
adc
xchg
std
xor
loop
xlat
and
lahf
sub
adcb
adc
sub
fcomip
fldt
lds
insl
cmp
sbb
cmp
lret
out
push
inc
cli
lea
sub
daa
mov
repnz
and
mov
mov
loope
add
enter
jb
pop
mov
inc
add
outsl
out
bound
or
mov
pop
je
sbb
movsl
xchg
fsts
jno
lahf
cmp
lcall
mov
mov
sar
add
xor
push
xlat
xor
scas
cmpsb
das
push
popf
jg
icebp
bound
push
inc
popa
jp
jbe
popf
loopne
imul
jno
or
cmc
mov
nop
and
jbe
jno
mov
loopne
in
les
sub
add
cmp
fldl2e
mov
push
pusha
xchg
addr16
ljmp
mov
in
adc
into
pinsrw
dec
push
mov
out
mov
sub
xor
aaa
xchg
sbb
mov
aaa
data16
xchg
lret
stos
xchg
lods
add
ds
pop
mov
pmullw
push
xor
xor
mov
stos
jmp
ret
dec
xchg
adc
jne
push
mov
jo
jb
pop
sub
pop
mov
mov
or
insl
stc
shrb
fcomps
fnstcw
out
xchg
je
arpl
in
adc
sbb
sahf
fld
jmp
cli
pop
shrl
push
out
mov
sub
inc
test
seta
cmpsl
jl
subl
jno
add
clc
mov
das
and
in
push
push
inc
adc
loopne
inc
lock
jae
pop
and
int3
mov
mov
sbb
pusha
inc
int3
jb
outsb
in
outsl
pop
mov
imul
push
add
pop
sti
mov
push
int
lret
push
mov
or
push
and
loope
cmc
ja
push
or
mov
dec
pop
loope
in
mov
cwtl
stc
int3
lahf
cs
push
and
repz
movsl
xchg
aas
push
test
add
inc
loope
jge
aaa
and
lret
insl
not
jnp
push
xor
hlt
jbe
rcr
mov
cmp
jg
mov
jge
cld
sbb
addr16
fistpl
cmpsb
movsb
mov
push
fdivrp
sub
add
push
jge
xor
mov
stos
fisubs
inc
test
push
mov
stc
sbb
arpl
negb
out
xchg
in
push
push
into
aad
pop
in
faddl
idivl
lods
add
movq
clc
xchg
leave
xchg
sbb
test
je
sbb
add
lods
jb
out
loopne
cmp
and
fcompl
das
loope
pushaw
xchg
es
pop
ret
call
mov
stos
sbbb
mov
mov
adc
and
movsb
shl
pop
jmp
mov
fidivs
xlat
loop
mov
outsb
jge
mov
jns
pop
jl
lds
cmp
inc
aam
mov
xor
mov
aaa
ret
dec
dec
outsb
inc
popa
cmp
into
push
std
insb
mov
xchg
or
jbe
mov
roll
mov
mov
fs
jmp
jns
sbb
cmp
xchg
imul
mov
xchg
int
test
cli
push
cmp
push
and
scas
adc
outsb
mov
in
mov
xor
jmp
lea
mov
lds
adc
sbb
insb
lea
and
cli
mov
popf
fsub
stos
jl
mov
lcall
and
repnz
in
sub
mov
insb
test
cwtl
dec
pop
push
lods
xor
repnz
xor
inc
ret
or
jge
jmp
aaa
pop
mov
ret
data16
aam
mov
dec
adc
sub
mov
xor
loop
fcmove
test
int
cmp
fsubrl
sbb
mov
dec
push
cmp
mov
cmc
xor
mov
dec
stos
cmp
lea
jo
pop
mov
outsb
iret
adc
mov
icebp
jns
dec
jge
inc
out
cld
mov
xchg
fs
hlt
cmc
data16
ret
cmp
xor
xchg
sub
xlat
and
jae
cltd
or
mull
mov
lahf
loopne
sbb
or
into
nop
stos
lahf
arpl
xchg
push
ja
in
aas
shlb
jb
mov
shll
aaa
and
xchg
xor
jl
les
xor
pop
cli
push
bound
lea
js
xchg
jl
xor
inc
icebp
aas
aad
test
inc
jnp
xor
push
pop
jns
push
inc
xlat
and
mov
rorl
xor
inc
popa
mov
lods
add
xchg
xor
push
shr
nop
push
ss
and
fisttps
add
mov
dec
shl
cmp
and
arpl
int3
out
pop
sub
call
xor
mov
inc
and
fs
mov
mov
xchg
into
pop
cmp
cmp
push
enter
xchg
jbe
xor
sti
inc
push
adc
shll
mov
sub
in
mov
hlt
das
pop
mov
mov
mov
mov
loope
inc
data16
push
push
push
iret
pop
lea
std
iret
loopne
test
adc
xchg
xchg
lcall
popa
cmc
negb
cmp
xor
hlt
and
jle
xchg
mov
fwait
or
pop
stos
mov
out
jae
or
mov
push
mov
pop
lret
sbb
and
loope
lcall
mov
out
mov
stos
cld
or
movsl
mov
cs
xchg
or
aam
subl
lds
insb
push
test
inc
bound
mov
push
mov
mulb
test
sbb
rorb
mov
movsl
sbb
mov
jmp
mov
dec
into
and
add
imul
lret
sbb
not
push
push
mov
data16
xor
cld
es
sbb
jbe
int3
call
popa
pop
inc
or
faddp
sbb
lea
add
push
int3
mov
adc
scas
rcll
xchg
insl
aas
or
push
movsb
loopne
cwtl
sahf
hlt
lods
dec
mov
xlat
mov
sbb
decl
add
fmull
les
cmp
in
cmp
dec
xor
popa
adc
das
stos
repz
loopne
cmp
pop
aam
and
dec
std
or
jp
leave
addr16
or
xlat
push
test
dec
mov
icebp
sbb
outsb
out
sbb
cmp
pushf
popf
pop
ret
fidivs
movsb
sbb
adc
cmp
xchg
xchg
fnstenv
pop
call
sbbb
xchg
cmp
inc
insb
inc
loope
aam
aas
jg
ljmp
mov
ret
mov
dec
jae
mov
pop
ss
jns
pop
mov
out
loop
and
mov
dec
fisttpl
sbb
cmp
jl
lea
mov
js
fdivrl
pop
xchg
push
and
es
mov
mov
or
add
cltd
and
dec
and
push
xchg
fsub
mov
inc
call
push
in
mov
xchg
imul
int3
xor
mov
in
mov
pop
aad
mov
fadd
clc
adc
shlb
mov
add
ret
adc
xor
push
inc
jp
int
inc
add
dec
jg
sbb
fimuls
mov
test
xchg
push
int3
xor
enter
or
sahf
mul
cwtl
arpl
icebp
fbstp
into
push
insb
xchg
cmp
push
out
roll
pop
push
add
jae
xchg
jle
ja
jg
mov
or
sbbb
mov
pushf
sbb
in
int
fildll
mov
iret
or
or
mov
cmp
je
xchg
or
jmp
andb
data16
leave
lahf
int
xor
mov
jnp
andb
pusha
imulb
xor
and
stc
push
sahf
roll
clc
add
adc
xchg
stos
ss
mov
lret
xchg
add
je
insl
call
fs
aam
cld
and
sbb
add
hlt
sbb
fstl
xor
cmp
or
and
mov
push
jge
pop
pop
xor
jp
mov
mov
inc
pop
mov
clc
decb
sbb
lahf
test
insb
jge
pop
dec
dec
jne
gs
ret
sub
jge
cmpsb
cmp
cmpsl
daa
push
call
iret
push
sub
or
adc
sbb
out
ljmp
icebp
lea
mov
cs
inc
mov
dec
cmp
into
test
insb
outsb
add
mov
adc
jmp
xor
mov
push
xor
xor
xchg
mov
lock
mov
sbb
dec
dec
mov
mov
mov
shr
imul
popf
xchg
inc
cld
outsb
fcomps
mov
adc
clc
dec
push
rcr
iret
mov
inc
bound
mov
pushf
pop
cmp
or
loop
in
mov
sbb
and
es
shll
int3
mov
adc
outsb
push
lret
jecxz
rcl
fstpl
stos
mov
mov
mov
xlat
pop
addr16
push
mov
in
cmp
ret
sbbb
testl
xchg
ret
pop
mov
shll
or
or
cmp
adc
repz
lret
dec
gs
fildll
scas
in
xor
and
pop
or
pop
inc
loope
popa
fimuls
cmp
les
xchg
sub
sbb
sub
adc
fists
int
icebp
or
out
addr16
out
inc
fwait
sbb
dec
test
add
xor
inc
cbtw
dec
jl
jne
xchg
or
or
push
mov
sub
add
jo
aas
jbe
pop
mov
inc
movsb
cbtw
xchg
and
fimull
nop
pop
cmpsb
xor
and
xor
sbb
mov
fldln2
sbb
push
test
in
mov
xlat
xchg
push
outsl
xchg
fdivr
idivb
pop
sbb
push
rcr
cs
lds
add
imul
daa
xor
jbe
adc
xor
push
ljmp
adc
daa
xor
das
stos
imulb
mov
mov
or
in
sbb
scas
xor
lods
pop
cmpsb
xchg
mov
sbbb
xor
sub
pop
iret
int3
insb
pushf
or
xor
dec
inc
dec
or
inc
mov
test
mov
les
xchg
sub
js
lcall
outsl
sub
pusha
out
jns
sub
mov
inc
cltd
loopne
clc
ds
and
shll
stos
rolb
mov
fcoml
out
adc
jp
daa
sub
aaa
mov
in
sbb
mov
ja
lods
and
xchg
ds
jmp
rol
mov
bound
enter
imul
data16
or
and
lret
adc
push
rorl
setnp
lock
sub
add
into
xchg
xchg
ret
or
pop
js
adc
in
out
sti
cltd
inc
iret
call
ja
leave
add
sbb
sub
mov
and
cltd
push
add
mov
jo
inc
cltd
cmp
adc
jno
push
adc
jp
bound
arpl
enter
int
add
lods
cmp
xor
pusha
inc
stos
fsubl
ss
fimuls
stos
jnp
ss
test
cli
cld
dec
adc
or
adc
and
enter
push
inc
popf
jle
sahf
sub
js
push
in
mov
push
mov
leave
pop
xchg
outsl
inc
es
faddl
clc
xchg
jge
orb
hlt
repnz
cmpsl
xchg
mov
pavgw
shll
scas
add
aaa
mov
xor
aad
cmp
push
push
and
sub
xchg
ljmp
cmp
pop
mov
dec
shrl
loope
arpl
pusha
jp
test
je
jl
loop
lods
cmc
aad
je
imul
xor
xor
enter
inc
cwtl
cmp
int
enter
xor
pop
sub
gs
rclb
stc
cmp
cltd
xchg
lret
mov
jae
shlb
cld
jb
adc
sub
das
sbb
inc
inc
imulb
and
int3
out
stc
bswap
loopne
jmp
fwait
sub
dec
stos
or
test
lods
inc
jecxz
inc
in
movsl
cmpsl
and
cmc
into
mov
pop
inc
and
mov
cmp
mov
lahf
adc
mov
aad
lcall
sub
pop
xchg
rcl
aad
mov
cmpsl
xchg
in
test
cld
shll
pop
lock
aam
imul
iret
xchg
out
outsb
and
pop
mov
lret
stc
cmpsb
add
sti
icebp
or
scas
push
call
loope
mov
jno
nop
sub
xchg
jno
mov
push
fmull
and
push
xchg
jbe
repnz
lods
insb
mov
sub
add
rorl
bound
add
push
fwait
in
dec
jnp
hlt
mov
inc
sub
loop
mov
xchg
lods
imul
mov
mov
sbb
and
ja
adc
xchg
jo
hlt
adc
pop
std
insb
add
inc
sbb
jb
js
push
lock
mov
mov
stos
dec
mov
cmp
mov
dec
push
sub
icebp
mov
fistpll
outsb
fldt
dec
fs
mov
sbb
adc
fsts
movsb
in
mov
jb
xor
ss
mov
neg
xchg
test
xor
dec
mov
jae
fistl
dec
xor
inc
dec
add
add
leave
imul
inc
outsl
psadbw
mov
mov
xchg
xor
mov
imul
pop
rorb
or
mov
inc
push
mov
cs
or
cs
mov
test
insl
sti
jle
lret
add
mov
xor
pop
fsubs
jp
or
repz
sub
add
std
jbe,pt
or
pop
rclb
sahf
lret
add
fs
fstpt
push
xorl
idiv
or
push
mov
sub
xor
jnp
pusha
sarb
jns
hlt
mov
push
jp
mov
xor
addr16
xchg
je
xor
push
push
aam
sub
into
push
sbb
cmp
push
cmpsb
xor
sbb
stos
mov
les
or
pop
inc
push
mov
dec
addb
aam
push
outsl
lock
movsb
jae
cmpsl
aam
adc
stos
mov
xor
adc
sub
adc
fisttps
inc
xchg
sbb
pop
mov
pop
adc
sbb
and
dec
mov
sub
cmpl
fstl
cmp
imul
pop
inc
push
push
mov
xchg
cltd
mov
lock
push
orl
imul
ja
inc
sbb
adc
lods
cld
ljmp
popf
add
sbb
jbe
test
add
loopne
xor
test
das
loop
aas
jmp
movsl
rclb
out
dec
les
lret
push
fldcw
inc
cmp
test
xchg
scas
in
ret
add
orb
cwtl
mov
aas
xchg
inc
outsb
icebp
dec
xor
mov
out
push
cmpsl
xchg
push
in
cs
sbb
outsl
sub
call
mov
adc
mov
nop
pop
mov
shlb
call
inc
aas
mov
sub
jne
mov
outsl
shlb
pop
mov
rolb
mov
dec
push
push
insl
fwait
dec
cmp
scas
mov
pop
out
xchg
lret
ret
scas
lret
adc
cmp
fsubrl
call
xor
jmp
int3
in
test
mov
test
lds
mov
xchg
aad
mov
cmc
scas
insl
mov
xor
mov
push
sub
jno
bound
xor
dec
cmp
jbe
in
mov
lahf
fwait
adc
sbb
jle
cmp
mov
add
rcll
mov
lock
in
stc
mov
paddusw
cld
inc
cmc
rcr
popf
mov
es
popf
push
shrl
fiadds
lods
pop
dec
mov
inc
push
xchg
ja
xlat
iret
dec
aas
dec
mov
inc
sbb
pop
mov
imul
idivb
les
inc
ret
or
in
movsl
aam
out
je
jb
or
mov
pop
dec
sbb
into
ficoms
mov
insl
sbb
popa
jp
pop
push
push
mov
push
idivb
repnz
lock
lea
test
sbb
cltd
dec
sub
mov
jns
mov
xor
subb
cmpsb
int3
sbb
repz
add
push
xchg
test
jae
xor
lds
sbb
mov
popa
cmc
cmpsb
lahf
cmc
mov
sbb
stos
mov
cltd
jae
sub
das
xor
xchg
cs
dec
cmpl
std
lods
mov
fwait
sbb
xor
dec
nop
arpl
mov
lss
dec
mov
add
pop
cwtl
sub
clc
cmp
scas
dec
outsb
inc
dec
mov
pop
jmp
mov
sub
cmp
in
imul
inc
adc
jo
mov
in
shrb
imul
aaa
popa
and
ds
call
out
sub
popa
mov
aam
pop
dec
pop
stos
jecxz
nop
mov
pusha
or
pop
xor
xchg
mov
push
loop
lock
bound
pusha
int3
es
loop
jbe
movsb
sahf
pop
xchg
jg
sub
pusha
jle
add
jle
leave
lock
push
lock
lret
aas
add
sbb
into
lcall
mov
jge
jae
sbb
push
addl
ffreep
cmc
or
push
call
into
cmp
insb
ret
subb
cltd
cli
repnz
rolb
push
cwtl
cmp
mov
mov
add
adc
pusha
pop
insl
data16
out
aas
xchg
cmc
std
mov
mov
cwtl
shlb
inc
ret
inc
call
imul
cld
mov
adc
jge
sub
repnz
lea
movsl
out
into
les
jecxz
xchg
std
mov
fcomp
jbe
stc
cmpsl
scas
jns
cli
cmp
mov
int3
xlat
lret
pop
call
adc
mov
push
jns
adc
pusha
or
in
negb
std
mov
xchg
int3
xor
ja
cmp
lock
cmc
movsl
mov
push
jnp
mov
and
adc
outsb
popf
outsb
cmpsb
push
xor
push
es
dec
pushf
das
scas
dec
inc
lcall
test
sub
pop
xchg
in
pop
jnp
subb
jns
rcr
sbb
xchg
lock
mov
sbb
or
data16
rclb
xor
out
sub
pop
jno
cmp
pop
stos
stos
jns
inc
push
pop
or
std
add
loopne
ds
add
cmp
or
jecxz
adc
mov
adc
shrl
fs
cmp
inc
rcrl
adc
dec
cwtl
push
test
mov
ror
das
rolb
cmp
out
out
inc
imul
dec
clc
or
mov
aaa
out
xchg
dec
jl
fcmovnbe
push
mov
mov
daa
dec
pop
icebp
xchg
jne
mov
jle
fs
jg
push
dec
xchg
pop
call
int3
fwait
into
es
adcl
or
fcompl
mov
xchg
mov
push
push
xor
dec
xor
adc
inc
add
push
mov
cmp
fcoms
sub
sub
dec
insl
sbb
jmp
xor
movl
fidivl
leave
fstpt
jns
leave
pusha
add
jl
jno
punpckhdq
xor
mov
bnd
lahf
push
xor
repnz
pusha
daa
insl
ja
cltd
add
push
out
test
loopne
jns
xor
sbb
loope
mov
dec
jne
hlt
loop
cmp
insb
lods
sarb
insl
fmul
jne
push
jmp
mov
aam
mov
jp
mov
in
and
jp
jb
fiadds
mov
jo
add
inc
lods
loop
push
pop
in
inc
sbb
jns
mov
loope
loop
cmp
lahf
lcall
add
ss
adc
mov
pop
sbb
jne
pop
cs
insl
shrl
pop
cmc
data16
mov
add
dec
cmp
jne
add
sti
xchg
cs
jecxz
sbb
sti
mov
aaa
mov
cmp
or
idivl
cmp
adc
arpl
sbb
inc
push
ficomps
scas
mov
adc
test
jp
shlb
sbb
inc
push
jmp
hlt
inc
ss
jo
jge
sub
adc
and
xor
dec
je
mov
fsubr
test
lods
inc
sbb
push
pop
cltd
sbbb
pop
cli
adc
pop
mov
inc
jg
test
aaa
xor
jg
fisttpll
sbb
mov
bound
scas
xor
jle
les
adc
scas
mov
sub
add
inc
stos
lahf
or
jp
decb
popf
xchg
mov
push
xor
and
push
adc
xchg
lock
int
popa
pop
into
sarl
and
jne
pop
xchg
jbe
xor
pop
mov
cmp
sbb
rcl
mov
adc
js
aad
and
inc
jbe
insb
pop
aam
out
adc
mov
pop
jns
pop
ds
jl
out
scas
outsb
rorl
clc
jle
ds
mov
aas
xchg
test
pop
fidivrs
enter
pop
sub
mov
mov
pop
jmp
movsb
sub
es
xchg
cmp
mov
stos
cmp
push
mov
sub
stos
cli
xlat
cld
sbb
xchg
pop
sarb
xor
jecxz
movsb
aaa
and
cmc
aad
or
xorb
ss
stc
dec
stc
cltd
fbld
addr16
jns
xor
aam
out
mov
outsb
jae
shrl
les
add
adc
or
pop
cs
outsb
xchg
pushf
dec
xchg
add
cmp
dec
push
rcrl
cmp
std
popa
or
lods
jb
shr
inc
pop
adc
mov
andl
mov
arpl
leave
mov
test
push
push
mov
call
push
nop
out
mov
adc
lods
pop
xlat
in
pop
ljmp
int3
inc
xlat
in
lods
mov
arpl
loopne
aaa
push
add
xchg
xchg
lock
jle
cmp
popa
divl
aad
enter
dec
fldl
cmp
outsl
mov
jl
arpl
jge
add
mov
pusha
mov
test
and
cmpsb
pop
gs
dec
mov
imul
jne
fdivr
aad
pop
cwtl
mov
stc
outsb
pop
cltd
je
call
imul
push
mov
push
push
xchg
push
push
arpl
js
div
cltd
hlt
std
stc
iret
xlat
dec
into
cmp
into
xor
nop
clc
inc
xor
in
scas
lret
mov
mov
arpl
mov
or
push
ffreep
push
sbb
negl
ret
push
jle
jmp
cwtl
test
push
cltd
pop
nop
add
fxtract
pop
push
jb
dec
fisttps
inc
daa
xchg
pop
xor
xchg
cwtl
xor
mov
stos
xchg
subb
in
pop
out
pop
sbb
and
add
fisubrl
psubsw
loop
fimuls
fstps
fidivs
imul
loop
mov
mov
loopne
mov
es
mov
adc
arpl
fwait
rcr
int3
sub
push
xor
xchg
in
lcall
pop
jp
ja
mov
cli
stc
cld
push
loop
push
jo
pop
scas
adc
push
xor
fbstp
loope
xor
pop
and
xchg
mov
lahf
scas
jns
sub
and
lods
jns
std
aaa
dec
ja
ljmp
push
xor
dec
pop
dec
dec
loopne
ss
stc
incl
inc
sbb
xchg
int3
aad
data16
cmp
addl
sbb
adc
in
addr16
xor
sub
lahf
cmp
std
cs
dec
loop
mov
jl
idivb
cs
ds
xor
pop
aad
loop
push
movsb
das
jecxz
dec
inc
fstpl
imul
mov
mov
sbb
mov
push
cmp
jb
sbb
pop
stos
shrl
and
in
test
jbe
sub
push
add
mov
inc
pop
jp
add
inc
lret
dec
mov
xor
xor
test
aaa
stos
xor
fidivrl
ret
lods
scas
mov
fildll
sbb
xor
aaa
or
jo
stos
pop
lea
dec
cmp
cmpsl
xor
rolb
or
dec
add
jg
sbb
jne
js
dec
jbe
imul
jno
popa
adc
stos
adc
xor
test
add
add
xor
sbb
sarb
or
leave
sarb
adc
in
xor
push
test
push
shl
fldenv
push
or
dec
enter
jmp
lret
xor
jnp
sub
xchg
adc
jbe
xor
cmp
jno
and
xlat
xchg
xchg
cs
sub
pop
lret
cmpb
aas
sahf
sarl
mov
fcom
mov
inc
lea
mov
fimull
call
dec
jns
xchg
popf
xlat
and
sub
jno
sbb
pop
lds
and
or
data16
pop
icebp
andl
scas
jo
pop
sbb
pop
push
or
fcomip
lret
inc
sub
in
lahf
jns
cmp
mov
jg
jge
cmp
add
cmovs
outsb
cmc
shll
xor
and
cmpsb
mov
push
and
push
data16
jge
xchg
fwait
inc
js
mov
int3
mov
adc
cli
data16
add
movsb
mov
xlat
xchg
adc
scas
mov
cmpsl
adc
cmp
cmc
xchg
push
sbb
mov
push
jecxz
mov
xchg
push
xor
cmp
dec
xchg
or
jp
es
jnp
andl
inc
imul
inc
lods
or
gs
jmp
fsubrl
or
or
xor
js
lret
rorb
fimuls
mov
push
ror
mov
jbe
adc
xchg
jp
outsb
pusha
jne
adc
cmp
int
mov
mov
andb
jp
mov
and
inc
and
sbb
cld
xchg
ds
scas
aaa
and
push
dec
mov
inc
push
cli
ds
lret
daa
repnz
push
adc
pop
xlat
xchg
inc
outsl
je
lods
jge
pop
fimuls
mov
inc
adc
clc
das
mov
inc
inc
gs
repz
push
xchg
subl
dec
mov
mov
shl
push
push
mov
add
stos
loopne
jl
and
xchg
sub
sub
test
fs
jns
rorb
push
insb
and
in
and
xorb
ret
pop
stos
and
xchg
pop
push
mov
scas
lcall
movsb
inc
dec
ds
xchg
mov
inc
and
into
mov
dec
ret
in
iret
nop
pop
mov
add
fimull
sub
xchg
inc
or
adc
cwtl
cs
add
jecxz
push
mov
mulb
xchg
mov
mov
fstps
xor
add
add
inc
cld
lahf
sbb
mov
sbb
pop
movl
xchg
sub
clc
xorl
je
mov
push
sub
leave
mov
into
jecxz
mov
push
xor
fbstp
fistl
xchg
into
sbb
jb
xchg
cwtl
cmp
sar
push
push
shl
push
mov
push
dec
inc
mov
sbb
pop
pop
pop
pop
mov
nop
out
fldcw
andl
loope
les
lds
mov
cmpsl
loope
aaa
or
outsl
mov
inc
in
cmpsb
lods
sahf
pop
push
lahf
not
or
aaa
sub
inc
push
outsb
sbb
adc
sbb
lock
sti
jnp
sbb
sbb
push
loopne
lcall
sub
pusha
add
cmc
lret
push
and
sub
dec
sahf
push
cmp
jmp
mov
jns
loop
loop
cwtl
sub
das
sbb
popa
lahf
movsb
lock
sar
je
mov
xorb
sbb
lret
mov
dec
xchg
mov
test
pop
je
cmp
pop
scas
mov
inc
outsl
mov
pop
imul
imul
das
cli
adc
int
inc
jge
popa
push
cmp
and
ret
jp
test
vcvttpd2dqx
xchg
nop
push
insb
movsl
lea
push
xor
jmp
pop
dec
lods
mov
mov
lods
pushfw
jae
push
insb
jnp
fs
xor
rcrl
xchg
dec
outsl
xlat
jmp
scas
out
popa
mov
scas
lods
dec
push
xchg
les
or
dec
or
and
lea
cmp
ljmp
cltd
ret
xlat
dec
push
leave
in
xor
adc
scas
jb
mov
insl
roll
test
ret
pop
sbb
loope
sbb
sbb
ljmp
mov
mov
shrl
stc
mov
scas
add
mov
stos
push
pushf
mov
notl
insb
mov
in
pop
xchg
in
add
in
rcl
bound
and
ret
fs
lds
enter
outsl
mov
jns
xor
imulb
push
push
jnp
aaa
leave
rcr
insl
cmp
jl
cmp
mov
inc
sub
lds
and
lock
loopne
frstor
xchg
fisubs
jno
jp
add
push
xor
jle
pusha
add
sbbl
cmp
inc
in
inc
sub
cld
ds
enter
pop
inc
cmc
test
xor
test
xchg
and
jnp
stc
rol
fildl
not
pop
aam
inc
sbb
das
popf
or
dec
mov
fidivrl
cmp
dec
subl
mov
pushf
ficomps
and
les
ret
out
inc
shrl
pop
sbb
out
je
jl
jmp
cmc
or
lret
call
loop
aad
jg
scas
stos
or
jmp
dec
xchg
aas
add
mov
pop
adc
jg
mov
cltd
es
int
aaa
test
dec
adc
mov
bound
fimull
in
xor
sub
mov
mov
in
shlb
cmp
leave
adc
sbb
ljmp
pushf
jne
repz
neg
jo
aam
nop
jno
xlat
dec
push
xchg
or
gs
stc
dec
cmp
imul
xchg
xchg
lahf
daa
inc
cmp
xchg
lods
push
ror
rcrl
shll
or
out
mov
mull
inc
cmc
shl
stc
mov
lods
ret
xor
inc
fsubrl
sbb
sbbb
loop
or
adc
or
sub
dec
seta
mov
xor
out
gs
stos
mov
jl
mov
nop
bound
xchg
in
call
shr
jge
test
mov
jecxz
adc
inc
jle
push
scas
popf
je
outsl
add
daa
outsl
aam
mov
add
inc
dec
movsb
pusha
and
cmp
cli
push
pop
jno
sbb
cmc
cmp
lahf
push
lahf
add
and
cmc
test
pushl
sbb
dec
das
ret
insb
arpl
incb
mov
aas
mov
test
std
cmp
jne
adc
cmp
or
sbb
outsb
les
jb
jo
push
dec
xchg
lcall
bound
or
and
jbe
xchg
ja
in
and
jae
or
mov
out
aad
push
adc
mov
daa
jge
xor
pop
cmp
adc
out
and
xor
cmpsb
sti
daa
arpl
leave
dec
cmp
adc
mov
mov
movb
sub
int3
dec
iret
mov
xor
das
movsl
xchg
shl
outsb
rorl
pop
sti
aas
dec
or
adc
pop
mov
bound
out
ret
fsubl
add
fld
mov
cs
icebp
jmp
xor
dec
and
roll
mov
test
cltd
cmp
jae
jb
test
mov
jecxz
aaa
lock
mov
enter
pop
mov
insl
xor
insb
aad
and
mov
scas
fbstp
mov
jb
xor
dec
push
sub
xor
adc
mov
movsl
repz
das
paddd
inc
push
mov
xor
inc
mov
lods
jle
push
push
push
leave
cli
sbb
sbb
out
mov
mov
push
mov
jecxz
loop
int
add
mov
cs
mov
push
sbb
jnp
mov
cltd
inc
frstor
cmpsw
dec
xor
fidivl
jmp
pushf
mov
adc
pop
add
mov
lea
xchg
sbb
dec
mov
pop
imul
mov
lahf
fistps
mov
fimuls
pop
test
call
push
fnsave
loope
lret
and
popf
pop
pusha
sub
pop
testl
fwait
fs
inc
pop
adc
cmp
mov
stc
std
insl
jbe
popa
icebp
idivl
sbb
push
push
xor
mov
cmp
out
sub
fwait
mov
push
fidivs
dec
paddw
push
aaa
push
push
stos
mov
arpl
jecxz
add
inc
jecxz
dec
js
bswap
and
xlat
add
cli
loopne
sub
lods
pop
ljmp
push
aaa
push
out
mov
pop
movsb
insl
xchg
divb
clc
popa
dec
movsb
insb
mov
mov
add
test
cmp
xchg
push
jne
sub
cmp
add
aam
pop
sbb
mov
mov
lock
or
xor
push
stos
adc
push
and
adc
popa
imul
add
fistps
data16
mov
sub
cld
adc
push
dec
jbe
lret
lret
and
outsb
mov
adc
push
out
repnz
adcl
adc
test
pusha
loopne
inc
inc
movsb
scas
mov
outsb
and
aaa
or
imull
into
adc
out
lock
push
outsb
inc
sti
sub
xchg
loopne
sbb
aad
xchg
jne
inc
stc
xor
cmp
pop
test
or
lahf
adc
or
cmp
lahf
jp
jge
lret
imul
stos
shlb
ja
repnz
ljmp
call
sub
add
jno
xchg
insb
imul
cmpsl
popa
cmp
xchg
cmpl
adc
xor
push
push
sub
nop
adc
mov
jp
sub
add
ret
test
add
mov
loop
divb
sbb
add
mov
aaa
push
int
mov
adc
fistps
push
std
enter
or
mov
stc
leave
movzbl
jle
clc
xchg
in
es
add
gs
rcrl
cmpsl
lods
pop
aas
sbb
fsts
ficoms
mov
inc
xor
dec
test
test
jbe
pop
dec
or
int3
dec
es
adc
mov
into
jg
xor
and
adc
lock
call
cmpsb
jns
xchg
jmp
push
jg
pop
into
fistl
adc
cwtl
into
fcmovb
jmp
xor
and
js
fcmovnu
pop
dec
cmpsl
jle
orb
or
test
lahf
in
inc
lahf
push
dec
sahf
or
cli
dec
fs
bound
filds
ja
or
push
mov
cwtl
shrb
sbb
je
jne
sub
aam
jmp
and
movb
insl
cmp
mov
mov
stos
push
enter
push
dec
outsl
shl
aas
cmc
cli
out
push
sbb
dec
rolb
push
loope
cmpl
out
imul
xchg
mov
and
jg
xchg
adcl
rcl
lea
mov
add
sbbl
mul
dec
jb
icebp
dec
inc
fs
mul
or
jb
jl
sti
in
cwtl
shrb
cmp
cwtl
in
inc
push
jle
fldt
inc
adc
test
sahf
movsl
lods
es
xchg
push
xchg
adc
jmp
sub
cltd
sbb
push
jecxz
clc
jmp
test
dec
lods
inc
sbb
test
lret
popl
ud0
shll
sub
test
icebp
pop
jp
addb
jbe
andl
jmp
mov
push
or
mov
cmc
push
mov
loope
sub
lahf
cld
sbb
jo
nop
pop
mov
out
enter
and
pusha
leave
dec
mov
cld
xor
mov
rorb
pusha
iret
sub
jns
scas
test
stos
faddl
out
sub
mov
aad
jge
fdivrs
or
addr16
loopne
arpl
xlat
mov
std
loop
mov
and
or
inc
mov
mov
repnz
or
cwtl
or
xchg
sub
push
stos
daa
mov
adc
mov
dec
mov
push
icebp
ja
lret
push
sahf
psrlq
pop
or
cltd
push
xor
fsubr
int
adc
loop
push
fwait
and
insl
jnp
pop
mulb
popf
scas
fadd
inc
or
test
xchg
vsubsd
mov
cmp
sbb
sahf
push
push
movsb
mov
test
rolb
adc
push
stos
add
lea
adc
test
popa
loop
mov
je
dec
scas
inc
jno
push
add
sub
add
mov
rcrb
sbb
cwtl
mov
rolb
pcmpeqd
mov
xor
fdiv
sub
sbb
adc
inc
xlat
pushf
sbb
in
popf
cltd
leave
cltd
xchg
push
dec
mov
mov
outsb
add
mov
stos
out
lock
mov
lods
fistl
fdivs
rorl
rorb
jnp
test
daa
test
inc
lret
jecxz
sub
sub
loop
lods
lods
mov
enter
lds
in
in
cmp
xor
inc
jns
mov
mov
insb
mov
in
push
mov
mov
addr16
cmc
jnp
push
in
adc
xlat
outsl
sub
cltd
pop
mov
pop
call
pop
add
fstpl
rclb
dec
loope
test
jns
adc
cli
shlb
imul
sarl
outsb
test
aam
xchg
push
jle
inc
cmp
dec
testb
jle
sti
mov
xchg
adc
push
adc
dec
daa
lods
mov
ss
jne
add
call
jae
inc
jb
jbe
mov
cmp
dec
or
rcrb
mov
ljmp
cs
jne
daa
sahf
lcall
push
push
pushf
mov
inc
sti
dec
shlb
rorb
rorb
sbb
dec
ljmp
xlat
xchg
scas
push
cltd
push
jge
fwait
repz
jne
sub
mov
pop
jmp
cltd
adcl
inc
push
and
imul
nop
mov
cmpsb
sbb
or
inc
xor
inc
int3
mov
lcall
and
mov
lds
ret
mov
insl
and
cld
and
xorb
xchg
adcb
cltd
nop
push
inc
inc
pop
popf
test
in
insb
sub
imul
and
leave
xchg
mov
sub
dec
lock
mov
fwait
jns
call
fldcw
imul
sbb
mov
mov
push
jae
inc
add
push
inc
out
mov
xchg
je
and
and
into
in
and
dec
rolb
movsb
pop
xchg
mov
lods
cli
fxch
popa
pop
and
push
es
ret
es
imul
jecxz
adc
dec
xor
jb,pt
add
add
cmpsb
lock
pop
xchg
iret
out
imul
das
and
mov
xchg
mov
mov
minps
leave
push
inc
inc
dec
cmp
iret
xor
push
cmp
mov
mov
inc
and
push
dec
nop
mov
sahf
cmp
into
pop
fimuls
inc
outsl
mov
xchg
vpsubusb
xchg
add
dec
push
xor
subb
jle
jo
sbb
ss
pusha
mov
cmpsb
xor
leave
lea
jae
cli
iret
lods
dec
and
bound
or
inc
in
iret
mov
mov
movsb
dec
pop
imul
out
je
je
scas
dec
add
or
sbb
pop
pop
push
outsl
ffree
aas
push
sbb
pop
sub
outsl
fstpt
das
xchg
push
fldpi
out
xchg
ss
and
mov
mov
scas
fdivl
xchg
cli
in
test
je
test
testl
xchg
xorb
adc
mov
std
sub
cmp
jmp
push
outsb
sbb
lcall
leave
lahf
inc
adc
or
and
les
out
xchg
fidivrl
dec
mov
adc
test
inc
hlt
push
inc
outsb
cmp
aam
push
cwtl
ret
and
fists
dec
test
cmc
mov
push
fsubrs
or
stc
aaa
ret
mov
mov
mov
dec
fimull
ret
lret
fisttpl
and
scas
outsb
dec
into
adc
add
or
push
js
push
loope
jle
push
xchg
pop
aaa
test
lds
cmp
jb
sahf
in
out
adc
popa
aam
mov
lods
pop
add
add
sbb
xor
mov
add
jecxz
outsl
xchg
sbb
jne
push
cltd
cwtl
mov
das
jae
jg
ja
inc
mov
add
insb
inc
or
mov
dec
shlb
leave
or
lods
jp
pop
ss
or
fstps
stos
dec
lcall
mov
inc
mov
mov
sahf
in
add
inc
outsl
aam
aas
xchg
call
pusha
enter
pop
nop
test
and
inc
pop
push
cli
xchg
stos
jnp
and
mov
mov
lock
fcmovb
push
outsl
mov
mov
xor
int
sub
mov
out
loope
insl
lods
sbb
in
pusha
leave
fstpl
adc
dec
popa
insl
mov
repnz
and
xor
imul
push
ret
sbb
sbb
data16
ss
pop
mov
sahf
sti
jnp
lahf
cmc
mov
outsb
popf
je
cltd
mov
pop
sarb
mov
xor
push
jge
mov
cmc
mov
enter
lahf
cmp
pop
sbbl
and
push
outsb
sahf
pop
shlb
mov
jb
in
ret
push
daa
insb
iret
std
lret
xchg
cs
scas
add
stos
gs
mov
je
push
loopne
jnp
push
pop
testl
loope
popa
dec
mov
inc
stos
dec
in
push
negl
and
ficompl
push
and
push
jns
test
pusha
leave
loopne
xchg
mov
imul
xor
mov
cmp
sarb
adc
fs
inc
fmull
mov
and
add
dec
mov
and
sbb
dec
mov
icebp
push
out
push
jno
xchg
jne
aad
and
inc
test
imul
insl
jg
mov
push
js
and
jns
or
sar
shll
stos
bound
xor
xlat
push
cmpsb
xchg
mov
adc
add
dec
call
test
ret
shrl
shlb
pop
es
jecxz
pop
lods
pop
ljmp
lea
sub
add
xchg
iret
pop
xchg
sbb
xorb
sti
jge
clc
cmc
add
xor
cltd
cmpsb
shrl
int3
imul
jo
pop
or
cmp
shll
je
lock
in
mov
cmpsl
popa
xor
adc
push
cmp
push
dec
cli
mov
xchg
mov
jl
hlt
sahf
push
daa
pop
mov
mov
iret
xchg
das
cld
in
jno
inc
insb
pusha
imul
cmpb
pop
add
in
sub
mov
sub
mov
sbb
pop
insl
jns
stos
jle
push
xchg
stc
andb
in
in
inc
fistps
pusha
xchg
pop
int
mov
jo
inc
mulb
push
push
hlt
sbb
sarb
xchg
and
faddp
xchg
scas
sbb
cs
mov
fnstenv
dec
ds
mov
pop
inc
rcll
xchg
push
and
test
sub
adc
xchg
mov
xchg
mov
stc
fcoms
lret
or
stc
clc
sbb
jb
in
jle
ror
ret
inc
fistps
sub
int3
sbb
popa
inc
adc
pop
insl
add
scas
into
pop
push
in
xor
icebp
fldl
cmp
sbb
loopne
push
sbb
enter
out
xchg
movsl
sbb
scas
cmc
arpl
xchg
push
cld
ror
std
xchg
mov
inc
lods
and
pushl
out
mov
outsb
pusha
push
in
cmp
rcll
xor
adc
fnsave
dec
fdivl
stos
push
nop
lcall
mov
add
std
add
add
dec
mov
jo
lahf
clc
add
jno
mov
clc
add
jp
dec
aaa
imul
xor
sub
add
mov
mov
adc
inc
stos
mov
xor
or
adc
movsb
outsl
mov
js
dec
jmp
stc
lcall
nop
xchg
pop
btr
aam
add
and
pop
cli
sbb
pop
sbb
cmp
push
sbb
stos
cmp
cmp
sbb
pop
xlat
sub
push
add
lcall
cmp
scas
sub
imul
sahf
xchg
add
pop
ds
mov
loopne
xchg
sbb
dec
pop
jge
sub
push
or
fdiv
mov
and
pushf
fdivs
insl
out
cmp
or
push
pop
mov
add
xor
je
insl
iret
call
cwtl
or
sub
enter
out
ret
fdivrl
cmp
pop
in
jle
enter
mov
push
adc
mov
lret
fwait
pushf
and
sub
aad
stos
decb
aaa
add
or
pop
adc
xchg
sbb
rorl
rcr
mov
dec
repz
mov
xlat
outsl
clc
xchg
out
in
les
xor
adc
lret
xchg
mov
scas
iret
push
nop
sbb
aas
in
pushw
in
cmp
leave
lahf
jl
jo
push
pop
outsl
or
inc
xor
adc
dec
sub
gs
arpl
je
jg
and
and
sbbl
mov
lret
xor
cmc
jg
sbb
xchg
les
and
ret
push
es
cmp
push
inc
cmp
sub
inc
add
scas
stos
shll
push
loop
xchg
mov
fsubrl
sub
sub
pop
inc
jge
ja
fidivrl
mov
mov
lods
pop
cmp
gs
cltd
lods
inc
in
jno
xor
ret
nop
jne
in
dec
pop
sbb
int3
push
iret
insb
rcrb
or
push
jle
jmp
aaa
and
mov
pop
jnp
divps
or
pop
cmp
xchg
push
sbb
xchg
pop
in
or
xor
xchg
test
lret
lahf
insb
movsl
mov
add
mov
stc
in
xlat
mov
mov
jmp
and
pop
push
and
fcompl
jg
sbb
xchg
and
imul
inc
pushf
xchg
loop
gs
xor
pop
xor
fcmove
xchg
mov
mov
mov
sbb
add
mov
adc
pushl
push
or
aaa
test
xchg
mov
insb
rcl
fldcw
jae
icebp
test
ret
test
pop
add
push
mov
pop
push
jmp
out
loop
xor
mov
mov
sub
inc
sub
in
lret
mov
pop
inc
and
pop
xor
es
pop
std
push
lea
jo
cmp
or
pop
lea
int3
inc
mov
fs
cmp
bound
ret
f2xm1
xchg
sarb
push
pop
push
outsb
xchg
jmp
popa
mov
mov
and
xchg
cwtl
sbb
out
xchg
pusha
push
add
fcompl
dec
sbb
jg
lahf
ss
lcall
ret
dec
cli
enter
adc
jmp
jl
mov
jnp
sarb
lods
and
cmp
int
jae
mov
ljmp
xchg
jnp
jp
addb
and
push
jecxz
xor
or
scas
xchg
into
das
aas
in
dec
adcl
cmp
bound
push
or
add
adc
push
lahf
sub
jb
ja
daa
lret
adc
fstpt
xor
mov
and
dec
and
data16
xchg
fmuls
fwait
js
or
jne
cmc
or
sbb
loop
push
outsb
clc
rcll
stos
rcrb
xor
adc
push
dec
mov
nop
es
lcall
push
cmpsb
or
push
mov
icebp
mov
mov
in
dec
pop
pop
cmp
dec
fstps
ret
repz
cmp
xor
mov
push
dec
xchg
push
mov
out
mov
push
sub
aad
inc
lock
mov
insl
mov
insl
pushf
push
call
scas
ret
xchg
arpl
rcrb
popa
imul
inc
sub
and
mov
leave
cmp
adcl
fldl
adc
sub
mov
daa
int3
ret
jmp
mov
pop
and
jp
out
xor
nop
push
lods
jo
cld
lret
lods
inc
push
mov
mov
mov
lds
and
sub
int
mov
sbb
sbb
adc
aas
sahf
inc
or
adc
mov
sbb
mov
mov
sbb
lods
aad
flds
movsl
mov
and
mov
cmpl
loope
lods
insb
js
mov
dec
mov
lea
lock
push
fdivrs
jns
adc
sub
or
push
rcrb
or
inc
jl
adc
lock
cld
in
pushf
xlat
lret
int
aad
mov
adc
xor
rol
mov
aaa
sub
push
fisubs
mov
rolb
scas
jecxz
insl
out
add
push
mov
cli
push
hlt
push
cli
mov
insl
push
jae
loop
mov
lds
add
loope
jbe
imulb
xchg
sti
or
jg
lods
shrl
gs
fidivl
cmpsb
test
sub
jecxz
push
pusha
xchg
pop
mov
mov
jmp
mov
and
mov
pop
xchg
shr
fsubl
mov
dec
sahf
mov
push
jg
popf
test
push
repnz
ret
fistl
aad
bound
cwtl
lock
push
in
or
fists
popa
sarl
xor
loop
push
loope
inc
std
mov
lret
int
push
mov
int
out
int3
xchg
mov
rcrb
adcb
and
mov
add
pop
adcb
jb
nop
dec
mov
xor
jns
bound
adc
stos
mov
es
inc
repnz
lds
sbb
rcrl
icebp
std
in
push
push
pop
roll
rorb
test
adc
cmp
xchg
dec
jne
aad
xchg
jns
cmc
ja
or
pop
test
ljmp
mov
mov
es
dec
sbbb
les
xchg
bound
pop
pusha
dec
pop
lret
cltd
inc
push
lea
cwtl
mov
ja
mov
mov
jno
jl
pop
xchg
mov
scas
or
mov
icebp
lahf
jo
jl
mov
pop
mov
in
sbb
clc
cmpsl
or
cmp
mov
push
sub
sub
data16
inc
adc
ds
sub
pop
push
shlb
adc
faddl
pusha
lea
out
aad
ffreep
repnz
mov
cmpsb
adc
jp
xchg
cmpsl
xor
out
repz
dec
movsl
pop
rcll
cmpsb
frstor
sub
pop
stos
and
or
mov
sbb
jge
subb
leave
stos
sub
out
je
popf
out
daa
push
shlb
cpuid
ret
mov
cli
dec
rorb
fsts
lea
xor
jo
pop
pusha
add
ret
aam
lret
pop
out
jecxz
lahf
mov
pop
imul
loop
push
ja
push
lods
lds
cmpb
out
aaa
leave
push
add
sub
or
mov
andl
lock
xor
cmpsl
hlt
scas
ds
inc
xchg
repnz
jge
aas
sarl
mov
std
shl
adc
ret
or
cmpsb
xchg
imul
inc
data16
out
imul
inc
andb
jge
out
add
ficoms
push
nop
sub
fwait
decb
cmp
mov
cli
decb
jge
inc
stos
ret
dec
ss
mul
push
adc
je
xchg
rcrl
fcompl
sbb
js
dec
mov
inc
push
mov
lret
out
adc
push
xchg
je
pop
pop
sub
mov
push
mov
nop
xchg
push
loopne
add
stc
lods
xlat
xchg
xlat
inc
push
push
xchg
test
hlt
lahf
mov
roll
imul
push
dec
pop
sti
clc
stc
addr16
mov
mov
ja
into
jnp
es
adc
jle
lret
aam
sbb
push
push
adc
ljmp
ret
mov
jmp
movsl
fisttps
mov
int3
jns,pt
fnstcw
inc
int
adc
jbe
or
addr16
jns
in
and
imul
push
adc
lods
push
out
jb
push
ret
ja
sbbl
mov
aaa
adc
xchg
sub
imul
cmp
pop
lods
pop
repz
jle
jmp
push
mov
pop
test
jns
ja
mov
addr16
lock
pop
lahf
mov
and
subb
and
js
test
sub
push
dec
inc
pusha
pcmpgtd
sbbb
out
push
shlb
dec
add
in
xchg
test
or
dec
sub
and
pop
adc
adc
xor
inc
xchg
std
mov
js
lret
jle
xor
xlat
js
ror
inc
cmpsb
stos
jne
out
adc
addr16
xchg
pop
push
pop
repz
mov
std
sub
cli
push
xchg
jbe
push
add
inc
ss
insb
push
mov
pop
mov
mov
cmc
outsb
notl
movsl
cltd
repz
mov
pop
jns
and
mov
ret
xchg
inc
push
sbb
movsl
test
stos
movsl
fisubrs
xorb
cmp
notl
and
das
mov
adc
cmc
adc
les
or
lds
into
sbb
sbb
jg
aas
and
mov
mov
dec
int
push
fsts
fcom
dec
rcrl
jmp
loop
push
inc
mov
sbbl
adc
outsb
or
jae
sub
jle
scas
push
lret
mov
mov
test
idiv
fs
sub
je
sbb
pop
push
rcrb
xchg
imul
iret
mov
in
loopne
push
cmpsl
int3
adc
in
test
data16
std
or
and
dec
hlt
jno
std
pop
in
mov
mov
int
pop
daa
adcl
mov
pushf
loop
xor
push
or
ljmp
mov
mov
xchg
adc
cmp
cmp
sbb
sbb
jge
xchg
ror
adc
xor
jnp
pop
and
outsl
lds
loop
pusha
or
mov
sub
cmp
aaa
sub
and
mov
cwtl
pop
int
mov
cltd
fsubr
mov
rorb
mov
jnp
and
sbb
sbb
sbb
cmp
roll
cmpb
jae
or
xchg
test
mov
mov
arpl
rcr
mov
xchg
cmp
out
xor
or
mov
stos
or
sbb
das
aaa
push
xchg
punpckhbw
xor
int
or
jg
rcrl
and
lods
mov
jecxz
dec
stos
cli
or
jae
jns
lods
inc
jnp
mov
inc
imul
lds
mov
jne
inc
inc
xor
cli
inc
cmp
pop
mov
shl
cmp
pop
cmc
cmpsb
movsb
outsb
ds
jl
mov
pop
ret
or
sbbb
das
in
movsl
aam
ret
cmp
sbb
out
mov
dec
orl
fstl
cwtl
lcall
mov
lods
xor
sti
xchg
xor
out
push
pop
outsl
hlt
ljmp
mov
sbb
adc
sub
loope
flds
sbb
sub
stc
inc
jle
inc
insl
into
mov
sub
or
lret
imul
dec
js
inc
mov
and
sub
xchg
mov
mov
sub
or
lcall
mov
cmpl
lds
xchg
cmpsb
inc
je
fildll
mov
shrl
mov
xor
sub
pop
mov
jmp
push
add
mov
movsl
fs
clc
mov
jo
adc
cwtl
adc
sbb
cmpsb
shrl
sarb
daa
insb
adc
test
mov
mov
sbb
xchg
sub
mov
push
sbb
cmpsl
das
push
add
in
mov
jge
push
adc
cli
pop
mov
mov
jbe
inc
cli
add
mov
mov
push
pop
sbb
pusha
xchg
mov
push
out
jno
or
int3
sub
repz
mov
fidivs
pusha
jo
cli
push
imul
or
cli
insb
xchg
lret
xlat
mov
mov
cmpsb
mov
jmp
fisubl
pop
pop
sahf
pop
mov
fs
rcrl
repz
daa
cmc
or
and
cwtl
xlat
pusha
sti
mov
nop
sti
in
and
mov
lret
orl
cltd
xor
mov
aaa
cltd
mov
in
inc
jns
pop
cmpl
icebp
test
jmp
or
push
mov
jmp
out
xor
in
mov
jmp
aam
push
adc
sbb
mov
popf
in
es
dec
and
mov
loop
test
outsl
ret
and
mov
mov
loopne
js
ja
push
push
je
repnz
test
mov
mov
dec
aam
sahf
lcall
cmpsl
cmp
nop
daa
outsl
xchg
mov
adc
dec
es
or
cmp
push
mov
mov
ss
jmp
insl
sub
int3
inc
mov
mov
push
xor
and
fimull
pop
jns
nop
xchg
scas
xor
sub
and
rclb
iret
or
ds
jae
cmp
adc
jne
je
push
jmp
loop
dec
out
inc
insl
dec
lret
xor
cmp
jle
push
test
ljmp
bsr
and
adc
out
and
sub
or
and
adcl
int
leave
xlat
insl
jg
leave
xchg
fldt
mov
test
popf
xchg
mov
test
or
jle
or
dec
xor
cmp
mov
push
addr16
mov
loop
leave
sarb
daa
add
imul
js
pop
lds
and
and
add
mov
cmp
inc
or
mov
aam
loopne
lcall
cmp
cmpsl
gs
int
movsb
xchg
mov
imul
test
repnz
imul
aam
mov
pop
movsb
sub
jecxz
xor
push
cwtl
les
sub
or
ret
fidivl
xlat
jle
push
mov
popa
and
scas
and
mov
xchg
das
mov
lret
xchg
mov
push
pcmpgtw
in
stos
lock
and
mov
inc
mov
lds
inc
push
sbb
dec
ret
je
mov
xchg
push
mov
pop
and
mov
loop
lea
adc
cmp
or
out
or
mov
and
movsb
cmp
pushf
cmp
jne
mov
mov
inc
aaa
add
jb
jno
push
jae
fstpt
or
adc
mov
cmp
add
mov
xor
or
mov
test
sub
cmp
mov
mov
dec
inc
outsl
or
inc
add
xchg
in
addr16
shrl
lds
jp
aas
cmp
aam
xchg
mov
pop
add
or
addr16
insl
pop
sarl
frstor
ljmp
mov
or
enter
mov
scas
xor
dec
mov
iret
sbb
call
add
out
mov
jb
test
ja
and
push
mov
loop
lcall
jbe
arpl
sti
xor
test
fmuls
call
jo
stc
xor
add
int
jle
dec
in
or
test
mov
ljmp
test
sbbl
push
cmp
mov
sbb
mov
dec
push
cmp
in
rorb
popf
sub
hlt
rolb
adc
add
and
push
dec
or
out
lret
sbb
xor
mov
cwtl
push
jp
bound
jmp
add
pushf
or
cmp
mov
aas
out
outsl
in
pop
sub
fstpt
pop
push
pop
inc
sbb
loop
adc
or
mov
test
sbb
out
jl
inc
outsb
mov
xor
lods
mov
dec
add
hlt
out
xchg
repnz
inc
ja
fisubl
or
cmp
cmp
and
lea
pop
push
push
leave
xor
adc
sub
cltd
pop
xchg
jg
fs
xchg
outsl
sbb
icebp
inc
addr16
imul
addr16
push
loope
push
push
or
sbb
xor
fisttps
mov
jle
adc
sub
ret
adc
mov
mov
inc
sbb
repz
and
call
xchg
dec
stc
mov
rcll
cmp
idivb
sub
pop
std
mov
fstpl
and
pushf
aas
pop
dec
das
jb
out
push
xor
mov
dec
mov
out
shr
pop
scas
test
sbb
addr16
inc
push
add
inc
sub
movsl
stc
repz
inc
push
push
jo
in
jnp
cmc
add
xchg
je
aad
sbb
loop
leave
pop
nop
jns
xchg
sub
pushf
andl
xchg
mov
xchg
pop
daa
inc
iret
mov
roll
xchg
pop
loop
cmp
mov
lea
rorl
inc
movsl
cmpsb
aaa
hlt
dec
mov
adc
sbb
clc
mov
xlat
sahf
mov
daa
push
lock
mov
pop
scas
dec
stc
mov
fnstcw
mov
xor
jecxz
mov
mov
and
cmpl
cmp
xchg
lods
xor
push
enter
and
ret
stos
xchg
mov
jmp
cltd
mov
stos
mov
push
push
repz
movsb
mov
pop
dec
scas
popf
xchg
jmp
adc
es
fstl
mov
add
mov
jle
and
lds
insl
sub
mov
pop
subb
jmp
cmp
sub
fnsave
cli
out
cmp
or
int3
mov
xor
fidivl
adc
dec
subb
movb
inc
adc
sub
mov
pop
inc
lds
lret
cli
stos
jg
push
sub
dec
mov
pop
inc
out
mov
xchg
add
incl
dec
loop
cmp
mov
popa
shrl
push
lahf
push
sub
xor
fs
ret
and
xor
sti
adc
loope
ljmp
mov
inc
and
or
repz
js
faddp
inc
fcoml
repnz
aaa
loop
fiadds
cmp
mov
or
orb
arpl
lods
fdivs
xchg
sarl
sbb
cmp
test
dec
scas
cmp
or
jmp
out
sub
loopne
mov
push
push
sbb
mov
sub
jo
lock
or
xchg
cmc
push
loopne
hlt
cmp
repz
jbe
mov
jg
dec
bnd
jle
and
or
sti
dec
cmp
mov
or
jmp
sti
xorb
out
adc
loope
dec
xchg
cmp
xchg
fs
mov
xchg
imul
mov
xchg
shll
add
inc
dec
sahf
dec
sahf
dec
test
cmp
fwait
mov
dec
mov
arpl
ljmp
inc
repz
inc
sti
movsl
mov
jmp
mov
insl
mov
pop
xor
xchg
aas
out
jb
repnz
outsl
nop
sub
daa
sbbl
adc
adc
lret
in
adc
incb
cmc
jp
xchg
fistps
jns
in
xor
in
mov
xchg
mov
in
ss
test
stos
aas
fs
or
jle
int
lret
lods
imul
pop
push
lods
dec
cmp
out
jnp
stos
mov
bound
std
jmp
and
and
cmc
daa
lret
dec
loopne
outsb
out
pop
push
cmp
adc
nop
xor
pusha
push
pop
lds
scas
rolb
lret
enter
pop
faddl
and
sbb
mov
pop
pop
dec
mov
cmpsb
add
mov
pop
sub
lods
push
sub
xchg
cmp
out
iret
jae
mov
sbb
dec
ret
movlps
pop
adc
or
pop
ss
test
cmc
sub
fistl
cmp
adc
mov
orl
lahf
loop
xchg
test
rorb
pop
jp
sub
dec
fucom
iret
add
and
xchg
mov
movhps
cs
clc
jp
inc
add
lahf
mov
xchg
xor
fimuls
insl
hlt
sbb
shrl
inc
nop
sub
cmp
jle
hlt
in
inc
mov
std
add
jb
pop
cmp
mov
inc
jo
jne
mov
xlat
les
insl
mov
push
mov
sbb
mov
dec
in
leave
dec
push
mov
les
out
in
data16
test
sub
or
jp
pop
clc
and
xor
inc
sbb
push
in
mov
push
mov
loopne
mov
and
ret
outsl
or
and
arpl
and
xor
fisubrs
fbld
jb
mov
jo
lds
sub
xchg
adc
mov
clc
push
in
sub
fadds
mulb
sar
mov
xchg
mov
icebp
in
sub
and
fdivl
shll
push
jnp
lea
push
lret
push
push
mov
jns
leave
hlt
lods
cmpsb
adcl
filds
cmp
cld
scas
push
or
rcrb
or
sbb
ljmp
repnz
xchg
shll
int
dec
inc
fisttpll
pop
mov
mov
ja
sub
mov
mov
xor
sub
mov
inc
add
jne
sub
aas
inc
vmptrst
nop
pop
dec
aaa
aam
mov
out
mov
xor
add
movsb
inc
sbb
in
pop
bound
mov
dec
sub
orl
dec
arpl
add
icebp
out
mov
daa
add
cli
xchg
sbb
jecxz
push
in
mov
scas
out
lds
sub
in
jg
insb
xchg
imul
cmpl
mov
lds
out
lcall
aam
mov
push
mov
scas
out
mov
jge
inc
cmpl
nop
add
fmul
out
push
xor
inc
sbb
popa
pop
jecxz
repnz
clc
shll
add
xchg
leave
fdivrs
stos
shrl
aaa
lea
popf
or
inc
hlt
out
xlat
dec
loopne
shll
sbbb
inc
and
scas
and
dec
dec
loope
insl
dec
jne
sub
jnp
fildll
pop
mov
or
in
pop
fisttps
nop
mov
cwtl
lahf
test
mov
sahf
jns
sbb
cmp
jnp
test
pop
xchg
xor
lret
sbb
mov
push
sub
nop
nop
dec
shlb
dec
xor
mov
jle
sub
jmp
xchg
and
xchg
int3
imul
and
xor
das
dec
lods
inc
std
xchg
push
jne
cmp
xchg
push
cmp
pop
mov
push
push
fdivr
sub
sahf
inc
push
sbb
push
mov
loope
add
cmpsb
sar
into
aad
lods
jmp
push
movsb
insl
or
add
push
hlt
mov
pushl
mov
scas
jle
mov
xchg
fcmovu
sarl
pop
bound
or
shl
hlt
and
movsb
shlb
sbb
fildl
icebp
loop
imul
mov
jns
dec
shlb
add
xor
enter
adc
jmp
or
scas
insl
cmp
adc
fsubs
or
scas
push
sub
adc
cltd
cmc
dec
cwtl
popa
sarb
stos
adc
xchg
js
sbb
into
xchg
cmp
push
fst
add
jns
jne
inc
sti
cltd
cli
es
popa
xor
dec
mov
cs
push
dec
jp
adc
pushf
ds
add
rclb
dec
adcl
pop
mov
addl
adc
add
pop
out
std
inc
popf
dec
jno
pop
es
outsb
jne
pusha
dec
sub
dec
push
loop
or
test
xchg
ficoms
jae
xchg
mov
mov
in
mov
dec
das
adc
or
loop
cmp
sbb
sbb
fwait
ja
push
adc
int
jle
sub
les
cmp
in
pop
test
xchg
mov
push
push
jmp
and
adc
sbb
ja
xor
into
rclb
push
out
in
data16
jge
jb
lret
push
popa
lahf
pop
mov
mov
std
cmp
xchg
sub
pop
push
add
push
mov
xchg
je
jns
lret
xchg
push
push
mov
rcl
push
or
das
mov
inc
mov
stc
fists
hlt
or
mov
jge
fwait
fs
in
add
dec
insl
sbb
lahf
mov
push
dec
out
in
jbe
loope
mov
xchg
mov
lret
repnz
fmuls
xor
add
fwait
fwait
mulb
lods
pushf
add
xor
pop
out
mov
and
in
int3
jbe
jb
test
sub
mov
scas
pop
insl
call
xor
test
sub
jg
inc
movsl
scas
and
mov
mov
or
mov
mov
mov
call
rorl
mov
test
movsl
enter
dec
popa
call
daa
into
jle
xchg
int
repz
imul
cmp
sbb
sub
adc
cltd
mov
pop
jnp
andl
sbb
jne
mov
jne
lods
rorl
xchg
or
test
push
lcall
repz
mov
insl
adc
int3
cmp
mov
inc
sub
cwtl
mov
sbb
leave
xor
iret
popa
test
dec
dec
or
bound
into
xchg
adc
cmp
push
aas
adc
sub
or
js
add
mov
cmpsb
jge
imul
push
mov
test
add
cmpsl
push
mov
xor
xor
test
imul
sbb
sbb
outsb
sub
xchg
xchg
rorb
out
inc
pop
shlb
scas
addr16
fxch
mov
sub
jne
cwtl
scas
and
lea
cli
sbb
sub
dec
cmpb
pop
sub
fs
jl
inc
sbb
push
ror
notb
jno
in
jae
movsl
push
jmp
bound
xor
cli
sub
xor
out
xor
mov
aad
loopne
inc
shlb
inc
push
xchg
push
stos
loope
cmp
aam
mov
jne
fsubrs
or
cmpsb
jle
sahf
sbb
adc
dec
dec
in
jg
sbb
cli
mov
aad
pop
adc
test
popf
push
idivl
dec
adc
pop
mov
sbb
addr16
fidivs
repnz
lock
mov
jg
aam
into
inc
mov
pusha
scas
iret
aaa
imul
shrb
popf
mov
jnp
lock
out
mov
add
push
insl
inc
movsl
push
repz
mov
fstpl
rep
cmpsl
ja
sub
in
shll
xchg
loopne
sbb
ret
mov
out
movsb
mov
adc
aas
sti
sbb
scas
imul
test
jmp
add
push
adc
pushf
sub
xor
movsl
inc
shlb
clc
adc
inc
jmp
lahf
jno
mov
stos
adc
in
enter
icebp
dec
push
mov
xchg
icebp
cmpsb
in
or
je
mov
mov
std
sti
mov
mov
int
rcrl
sahf
or
push
aad
test
lods
inc
push
mov
stc
stos
xchg
gs
imul
aaa
mov
adc
in
mov
icebp
adc
test
inc
cmpsl
pushaw
fbstp
push
jl
insl
mov
outsb
pop
sub
xchg
cmp
dec
sub
jmp
mov
shrl
fwait
pop
mov
jmp
jp
inc
xor
xor
sub
cmp
xor
mov
lahf
shll
test
and
das
stos
xchg
stc
outsb
push
pop
inc
mov
inc
jecxz
out
decl
mov
sub
aaa
stos
repz
mov
fsubr
pop
and
out
sarl
xchg
xchg
sub
sbb
loopne
aam
aam
mov
mov
pop
pop
push
adc
add
enter
pop
cmp
ja
out
addl
in
push
fstl
mov
xchg
int3
data16
fnsave
and
cmc
ret
fldenv
leave
adc
js
shlb
push
jecxz
lea
and
jno
jnp
xor
push
int
mov
sbb
adc
hlt
stc
cmp
outsb
jne
mov
aaa
pushf
mov
jb
ret
pushf
mov
mov
jmp
adc
mov
jp
xlat
jne
hlt
dec
shlb
lahf
inc
xchg
insl
adc
jl
xor
movsl
inc
test
pop
pushf
jp
loop
inc
outsl
repz
out
jne
mov
repz
inc
stos
out
insb
pop
ds
lahf
push
mov
das
shll
pop
mov
es
outsb
repnz
add
insb
dec
jbe
rol
mov
imul
lods
aaa
leave
and
push
insl
mov
int3
and
leave
cmpsb
push
or
mov
outsl
das
pop
mull
mov
repz
add
dec
test
mov
test
test
mov
les
xchg
aad
mov
adc
cmp
ja
hlt
push
setg
lahf
fildll
lret
mov
sbb
fiaddl
sub
xchg
mov
frstor
add
pop
xchg
xor
mov
mov
lods
mov
mov
mov
push
mov
cs
push
lock
dec
or
jmp
mov
push
push
mov
sbb
lret
std
sub
out
pusha
pusha
out
movsb
lret
xchg
pop
lds
push
mov
test
mov
lret
jge
flds
call
out
push
shrl
fucomi
jne
jg
call
stc
mov
hlt
and
sbb
jl
lods
mov
in
pop
cmp
int3
mov
jo
fwait
lock
in
or
ret
loope
push
std
hlt
adc
fisubrs
daa
in
mov
xor
jge
push
adc
xchg
idivb
lcall
dec
add
xchg
and
imul
lds
jg
push
mov
insl
xor
repz
cmpsb
cmp
cmp
mov
pminub
lds
cmp
xor
insl
inc
pop
jg
mov
xor
loope
and
cmpsb
jp
push
icebp
bound
into
daa
out
mov
sbb
push
shll
shll
aad
xchg
xorb
lret
dec
cmpsb
rcll
cmp
xchg
cmp
add
or
adc
dec
mov
orl
mov
xchg
lds
mov
and
pop
aam
mov
shll
movb
adc
loop
adc
dec
decw
mov
mov
scas
idivb
outsl
shlb
sbb
loope
jne
shlb
mov
fbstp
jge
adc
mov
push
sbb
repnz
jb
inc
and
in
jl
sub
xchg
push
add
sub
cmpsb
leave
pop
mov
mov
mov
mov
scas
jne
or
test
ret
jo
sbb
sbb
xchg
add
xchg
ret
xlat
imul
pop
add
push
mov
cltd
push
in
pop
add
dec
mov
add
cmp
adc
rcrl
inc
into
lret
in
or
repnz
jb
xor
push
cmp
stc
scas
or
rorl
xchg
pop
stos
add
mov
add
gs
mov
xchg
nop
lods
mov
dec
inc
in
ds
loopne
incb
gs
or
and
test
cmp
adc
adc
and
in
movsl
lret
pop
dec
cld
sub
add
push
mov
aam
and
rorl
jge
xorl
mov
sbb
mov
test
dec
ljmp
push
pop
jecxz
cmpsl
pop
into
je
jg
fcoml
xchg
pop
mov
in
dec
pop
push
push
add
adc
aaa
jg
adc
mov
push
sub
sbb
pop
push
pop
push
pop
push
lret
push
aaa
adc
movl
scas
sub
dec
xchg
and
out
aas
push
lret
add
call
inc
fists
dec
sbb
add
imul
push
mov
sbb
or
push
mov
loopne
jae
mov
sub
sahf
mov
sub
mov
xchg
int
push
xor
push
mov
xchg
jmp
mov
mov
stos
jb
push
mov
cwtl
out
mov
outsb
pop
jecxz
and
daa
fcomip
jg
and
mov
pop
pop
add
xchg
sbb
push
mov
xlat
in
or
push
xlat
xor
mov
add
in
inc
cmp
cmp
push
lret
mov
xchg
mov
jnp
xlat
push
es
out
rcrb
sub
sti
pushf
cmp
sub
ret
lea
lret
ja
stc
inc
cmc
cmpsl
shlb
pop
sub
pop
inc
push
sub
xlat
mov
xorb
aas
leave
sub
and
push
push
aad
lahf
in
fldt
mov
leave
jbe
xchg
leave
or
ds
dec
or
scas
test
ja
inc
nop
std
test
les
dec
daa
mov
add
imulb
fwait
out
mov
jmp
xchg
pop
into
les
insb
dec
or
push
jno
aaa
into
mov
clc
mov
dec
xor
add
ljmp
rorb
cmc
pop
nop
ret
mov
mov
mov
fcomps
cmp
adc
sarb
mov
popf
fs
outsl
cmp
arpl
inc
xchg
lods
fucomip
xchg
inc
or
mov
pop
fldcw
inc
adc
insl
push
or
imul
lret
sub
std
adc
mov
push
leave
mov
pushf
lods
and
cld
daa
in
es
ja
sub
lds
cwtl
test
pop
inc
pop
xchg
sbb
mov
mov
std
es
lea
xor
daa
fldl
addr16
mov
fmull
sub
subl
mov
hlt
fldcw
call
inc
mov
decb
xor
pop
mov
add
iret
out
pop
cltd
mov
loope
mov
sub
xor
aas
add
movsl
mov
cmp
je
jl
xchg
jle
lcall
repnz
loope
or
out
pop
cltd
xchg
cmpsl
int3
xor
sbb
and
cmpl
aad
xchg
pop
repnz
enter
movsb
clc
pop
mov
aam
aad
repz
mov
cmpsl
ret
iret
jecxz
add
jo
cmc
into
mov
dec
mov
jae
adc
dec
inc
mov
imul
cs
inc
sub
addl
cli
push
icebp
ror
lock
loop
jle
fsubs
cmp
bound
mov
mov
add
loopne
pop
call
mov
mov
add
pop
mov
repz
adc
out
repnz
dec
icebp
mov
lret
les
xor
fisubs
dec
and
mov
sbb
repnz
insl
test
jbe
ljmp
popf
cmp
les
cltd
je
aas
ljmp
cmpsb
into
jmp
cmp
jb
push
push
jo
lea
aaa
out
mov
int
sbb
cmpsl
sbb
xchg
stc
pop
arpl
andl
movsl
bnd
cmpb
mov
jae
lcall
cmpsl
rcrb
imul
jle
dec
xor
jge
or
mov
cmpsb
inc
sub
pop
mov
jbe
aaa
jp
cmpsl
mov
stc
adc
lcall
or
jmp
or
andb
jmpw
adc
rol
push
push
nop
sahf
out
lds
loopne
add
stos
jae
icebp
adc
js
push
pusha
roll
scas
inc
leave
sti
jb
sbb
adc
aad
aam
in
nop
nop
or
mov
hlt
mov
dec
jbe
cmp
popf
xchg
inc
xor
cmp
fs
xchg
cltd
int3
xorl
jnp
es
cmova
mov
add
nop
and
mov
and
js
xchg
jbe
shrl
jl
loope
add
cltd
mov
test
dec
xlat
xor
testb
in
inc
addr16
pop
xchg
fwait
pop
in
pop
cwtl
lock
pop
inc
pop
jno
mov
push
leave
pop
popa
rolb
shlb
int3
cld
cld
mov
mov
sub
arpl
adc
in
mov
push
fdivrl
mov
shrb
sub
loopne
cli
push
bound
cmp
add
pop
add
mov
push
lea
dec
dec
and
jo
add
in
dec
jl
sbb
dec
sub
out
sbb
mov
ljmp
lret
pop
insl
hlt
mov
daa
mov
mov
movsl
rorl
fs
xchg
sarl
cmpl
and
icebp
or
pusha
push
xorl
mov
pop
in
dec
fildl
fidivrs
mov
xchg
dec
not
jecxz
ret
popf
insb
scas
std
xchg
cmp
xor
lret
dec
pop
cld
or
inc
push
inc
adc
adc
movsb
call
fs
dec
gs
adc
lds
dec
movb
cmpsb
jp
cmp
push
or
xorb
jns
xor
xor
jb
jae
push
mov
sbb
mov
xlat
cltd
imul
sub
pop
push
cmp
or
pusha
push
xchg
mov
mov
mov
test
cmp
mov
pusha
jp
push
fldl
lods
dec
roll
pusha
xor
lods
mov
icebp
gs
mov
xchg
adc
jnp
shlb
scas
inc
int
push
fs
fdivr
cmpsb
orl
xchg
xchg
cltd
inc
mov
ret
call
stos
shll
icebp
mov
xchg
pop
andl
les
repz
movsl
and
xor
jbe
movsb
push
mov
sbb
mov
gs
jbe
add
jge
hlt
pop
sbb
xchg
inc
pop
popf
xor
ds
in
pop
outsb
dec
mov
pop
jo
jae
test
hlt
int3
cmp
sub
jle
enter
inc
in
pop
ret
clc
inc
cmpsb
cmp
jecxz
pop
push
rcl
stos
idivb
xchg
jno
out
jns
jg
fnsave
test
lods
inc
dec
ja
je
test
xor
repnz
add
into
cltd
cld
and
adc
push
pushf
fsts
mov
out
stc
test
dec
scas
xchg
xchg
mov
in
mov
sbb
ss
or
mov
sub
sbb
lret
add
push
movsl
in
ss
call
ret
inc
mov
pop
pop
xchg
fs
mov
call
sbb
in
adc
movl
inc
xchg
ljmp
lret
mov
add
lcall
sti
icebp
in
adc
fsubrl
mov
xor
notb
fs
lcall
lahf
fistpl
movsl
pop
jno
push
inc
dec
inc
rorl
sbb
push
mov
or
and
aam
out
jne
and
into
fs
push
std
adc
push
xchg
loopne
leave
and
inc
or
add
fldcw
cli
jmp
cmp
and
or
mov
push
insb
test
in
jnp
sbb
scas
in
lret
mov
cmp
jl
movsb
decb
ljmp
into
xchg
cli
aad
mov
lcall
dec
jle
pop
sub
repz
popf
bound
jne
pop
mov
inc
nop
xor
dec
in
add
jae
jecxz
xor
fldl
ja
dec
mov
lds
lods
dec
stos
pop
pop
or
cmc
xchg
daa
into
call
or
jecxz
fsubl
lret
in
jne
add
mov
and
call
sub
mov
js
ror
sub
in
fnstenv
mov
xchg
push
jl
mov
xchg
sbb
mov
stc
lret
cmp
mov
mov
push
lods
inc
mov
xchg
sub
in
int3
jns
and
lahf
dec
lcall
jge
mov
mov
push
jl
mov
push
push
pusha
jge
add
movsl
lea
adc
in
jne
jo
adc
xchg
int
or
jnp
lods
jecxz
fs
pushf
arpl
inc
popa
push
clc
fcom
fwait
inc
push
fsts
ljmp
rcll
push
aas
or
or
xor
adc
mov
cltd
int3
es
sub
mov
sbb
std
push
add
andl
push
and
jle
cmpsl
sbb
jle
mov
ds
daa
sahf
pop
jg
jnp
data16
nop
and
stc
ret
fbstp
or
cld
jg
mov
imul
stc
dec
sub
aas
ret
jbe
idivl
push
out
nop
icebp
out
aad
mov
jno
xlat
pop
adc
jl
mov
sub
xchg
xor
mov
fadds
inc
leave
pop
fwait
inc
call
adc
movsl
xor
inc
cmpsb
or
mov
or
mov
mov
jno
out
dec
aad
lods
subb
adc
insb
sub
push
loopne
xchg
push
pop
sub
int3
push
jno
xchg
dec
xor
push
adc
mov
iret
repnz
lock
hlt
fisttpll
ret
mov
jns
mov
sub
jno
or
cltd
es
xor
test
ficomps
repz
xor
cmp
test
popf
outsl
sub
rcr
inc
mov
push
pop
mov
scas
mov
cmpl
lcall
roll
sbb
cs
cmp
xor
adc
arpl
fsubrl
mov
test
sbb
pop
fdivrs
xor
movb
in
inc
pop
test
jnp
inc
jo
fcoml
ret
xchg
test
pop
mov
jns
cmp
push
out
daa
notb
ljmp
mov
lcall
andl
pop
xor
lcall
mov
stc
shr
pop
push
mov
cli
mov
ret
mov
or
popa
adc
mov
dec
pop
push
stc
xchg
mov
cmpsb
inc
mov
sarb
lea
testl
std
adc
pusha
shll
clc
mov
lods
pop
nop
enter
jle
sub
addl
fsubr
shl
shlb
mov
aas
push
push
xchg
xchg
dec
jo
das
sti
pop
or
gs
pusha
rclb
cmp
push
pop
lods
lcall
stos
jnp
pop
jecxz
daa
mov
ss
loopne
lret
insb
jge
ret
mov
imul
das
push
xor
mov
popf
push
es
add
fldenv
and
adc
add
xor
test
cwtl
inc
ret
cs
lahf
cmp
adc
sbb
add
or
jecxz
lahf
ret
jl
fmuls
pusha
jg
jge
and
in
cmp
mov
inc
test
inc
or
push
nop
or
jg
inc
out
insb
sub
push
and
arpl
push
lret
or
mov
push
xor
dec
inc
inc
daa
ss
push
pusha
inc
sub
lods
dec
les
repnz
call
dec
or
sub
scas
outsb
or
push
mov
sub
loop
cmc
std
or
pushf
dec
daa
scas
sahf
out
pop
pop
pushf
cmp
shlb
mov
into
leave
scas
mov
loopne
jnp
jle
jp
aaa
sbb
movsb
xor
mov
nop
ret
jle
cmc
dec
and
ds
xor
add
dec
inc
jl
push
or
push
jp
sbb
mov
or
jns
or
inc
inc
lods
mov
sbb
popa
das
xorl
out
sub
stos
fsubrs
mov
push
push
daa
add
mov
pop
ret
inc
push
inc
mov
cmp
mov
into
repz
fwait
lds
js
lods
and
arpl
sub
push
push
int
movsl
dec
inc
fldl
jbe
repnz
aas
mov
jne
pop
jl
sbb
xor
hlt
push
pop
scas
inc
es
insl
push
es
sub
inc
sbb
add
or
xchg
sbb
imulb
jle
sti
cmp
pop
in
mov
jne
lods
cmp
lods
or
push
mov
notl
add
mov
imull
inc
lods
mov
add
sub
addr16
cli
or
pop
jge
sahf
subl
xlat
lds
jp
add
int
cmp
aad
loope
mov
pop
arpl
pop
lcall
jne
int
mov
sar
cwtl
das
in
mov
sub
xchg
sahf
and
and
adc
push
aam
or
inc
insl
aam
xor
pop
add
mov
dec
jbe
jp
pop
sti
aaa
sahf
mov
imul
dec
push
clc
sub
mov
xchg
daa
in
ljmp
movsl
out
das
pop
into
xchg
mov
cmp
dec
movsl
and
xor
lods
cs
jo
loope
and
push
testb
gs
dec
cmp
cmp
cmp
adc
scas
testb
fldcw
inc
pop
lahf
imul
pop
movsl
test
mov
shr
and
cmp
dec
popf
dec
dec
popa
rcll
pop
mov
jecxz
sub
jmp
adc
in
clc
push
jge
dec
in
jmp
push
leave
loope
adc
repnz
or
cs
stos
jae
loop
out
jle
pushf
xchg
fmuls
outsb
jno
add
cmp
add
daa
add
movsl
mov
test
and
inc
test
mov
subl
xchg
leave
es
xchg
pop
out
mov
mov
out
add
loop
push
xchg
sub
fs
inc
or
sbb
adc
cmc
aad
dec
ficoms
cltd
jg
popf
dec
outsl
int
mov
add
or
inc
hlt
lahf
jo
push
fiadds
outsb
ss
xor
fildll
and
add
icebp
or
sarl
adc
test
push
sbb
dec
mov
jno
test
les
in
sar
aam
les
pushf
cltd
push
and
sub
test
ret
cs
sbbl
lds
ss
in
push
ss
mov
dec
adc
test
cwtl
fs
dec
mov
or
xchg
out
pop
sub
cli
and
daa
jp
jge
ret
ljmp
cmp
lahf
lcall
xchg
sub
jae
loopne
jecxz
mov
mov
xchg
bound
mov
dec
cmp
int
std
push
mov
js
cmp
test
pop
sbb
xchg
inc
push
loopne
xchg
mov
stos
adc
out
cmp
cmp
aam
jae
jp
jb
mov
ljmp
cmp
mov
std
mov
mov
fcoms
loope
iret
dec
push
pop
sbb
or
jb
cmp
int3
lret
clc
dec
mov
in
orl
add
jae
mov
sbb
pop
inc
fadd
stos
scas
mov
jno
dec
and
sbb
fdivrs
xor
cmp
xor
xlat
lods
sub
pop
pop
sbb
mov
mov
mov
icebp
dec
in
arpl
mov
sub
arpl
push
xchg
push
sahf
or
mov
pop
cmp
or
pop
out
mov
adcl
or
leave
cmpsl
les
add
or
stos
rclb
stos
decb
xchg
fiaddl
jp
push
sub
adc
rep
jmp
sub
loop
xchg
push
stos
push
outsb
dec
imul
cld
mov
jg
add
cli
lock
adc
jnp
push
cli
mov
xor
or
push
dec
adc
les
shr
ret
mov
and
mov
mov
leave
add
inc
scas
cmp
sbb
add
pop
push
mov
mov
notl
sbb
insl
pop
pop
inc
mov
sti
push
jmp
aad
xor
sbb
mov
aas
fnstsw
cmpsb
sbb
ret
inc
std
mov
dec
roll
xchg
cltd
mov
pushf
je
repz
pop
xor
add
gs
pop
mov
mov
rclb
arpl
cld
sbb
repnz
mov
mov
adc
mov
imul
xchg
mov
loopne
hlt
mov
out
pop
xchg
inc
dec
js
ret
xlat
out
out
jnp
fnstenv
fcoms
test
dec
pop
sbb
mov
mov
jne
pop
in
and
pop
fidivrs
ja
rclb
adc
push
or
xchg
lahf
push
xchg
shll
lret
jae
pusha
scas
sub
adc
mov
inc
push
push
aaa
add
aam
xor
cli
fiadds
pop
push
andb
js
mov
int3
out
and
or
fsubrs
add
insb
pop
mov
xor
gs
push
insb
xchg
outsb
loopne
mov
frstor
inc
stos
add
repnz
xchg
in
mov
out
callw
pop
jg
int3
es
push
insl
leave
mov
cmp
imul
fnsave
pop
mov
out
inc
aam
jnp
divb
lock
testl
pop
and
xchg
sbb
add
popa
or
call
jo
adcb
arpl
les
pop
lods
popa
out
mov
rcrb
shll
adc
push
lock
sub
cli
xchg
or
xchg
and
shll
jne
jb
pop
mov
ret
pop
dec
inc
mov
cmp
adc
jae
add
cmc
add
mov
mov
sub
jne
and
cmp
dec
push
mov
pop
iret
jle
pop
push
pop
xchg
pushf
loope
loopne
cmp
xchg
add
sub
arpl
pop
dec
push
pop
adc
pop
mov
call
push
xchg
jle
push
inc
pop
stos
out
hlt
mov
notl
inc
lahf
pop
xchg
adc
mov
push
int3
lahf
jnp
sbb
out
push
add
in
sbb
xorb
mov
cld
and
cmp
mov
cmp
cmpsl
jo
daa
or
int
cli
inc
xchg
andb
sbb
add
push
mov
addr16
push
xchg
sbb
clc
inc
imul
push
push
rclb
and
cli
popa
push
test
test
cmp
push
or
and
ret
outsb
add
sub
jo
negb
je
aam
nop
cmp
add
test
cwtl
das
js
mov
mov
cmp
rorb
out
mov
mov
jle
push
push
out
je
cmp
and
decb
add
push
cwtl
into
xchg
adc
mov
push
test
sub
shrb
mov
push
fnstsw
cwtl
inc
sbb
inc
push
out
std
je
sbb
arpl
mov
pop
popa
and
inc
rorl
repz
xchg
inc
jno
pop
or
mov
std
mov
add
push
xor
gs
popf
inc
out
jo
mov
sub
mov
aam
inc
lret
dec
ror
pop
test
movsl
popf
jnp
push
lret
fildll
xchg
adc
dec
mov
sar
outsb
loope
lret
pusha
pop
and
stos
repz
out
loope
repnz
shl
add
or
inc
aas
sub
and
repnz
data16
imull
icebp
and
stc
inc
adc
cmp
divb
notb
scas
repz
out
bound
rcl
xlat
pop
and
jge
cmp
into
jb
inc
push
cwtl
out
testb
mov
xchg
inc
sbb
and
xchg
dec
bound
loopne
xchg
sti
popf
fcmovnu
movsb
add
inc
hlt
mov
sbb
xor
loop
push
rorb
pop
mov
mov
pop
aaa
add
cltd
mov
xchg
fcoms
popf
test
push
rcll
jle
jnp
test
jmp
jae
add
je
fsubl
xor
fnstsw
into
mov
das
sbb
psrld
jmp
mov
xchg
ret
sti
std
mov
push
cmpxchg
popf
inc
or
push
push
loope
push
cwtl
cmp
sbb
repz
mov
and
jns
cmc
sbb
movsb
dec
xchg
lret
push
xchg
inc
pop
dec
in
loopne
std
pop
add
cs
cmp
mov
hlt
bound
lods
inc
in
movsl
das
pop
xchg
int
mov
and
mov
xchg
fnstcw
out
sbb
popa
test
repnz
cmp
outsb
jo
cmpsl
out
jmp
fdivrs
iret
mov
xor
mov
mov
js
daa
sub
inc
adcb
sub
inc
dec
mov
das
or
sbb
sbb
mov
fisubrl
jnp
xchg
and
cwtl
inc
push
adc
xorl
mov
or
call
cmpsl
es
xchg
jp
mov
xchg
and
scas
add
iret
es
inc
mov
pop
xchg
xchg
dec
sti
bound
aad
stos
test
jo
repz
arpl
adc
inc
test
imul
ret
dec
sub
inc
dec
add
dec
leave
or
inc
icebp
and
jae
mov
daa
insl
push
adc
jg
jl
mov
pop
imul
mov
out
movsb
add
xor
stc
orl
inc
push
sbb
and
shll
jbe
and
pop
stc
jno
cmp
jno
mov
jns
cmc
loop
xchg
mov
rorb
push
or
push
jp
jmp
jno
push
dec
jbe
push
pop
daa
fstl
rcrl
push
cmovp
stc
stos
add
adc
pop
addr16
mov
and
lahf
pop
inc
fisubs
or
daa
out
pop
div
push
popa
lods
and
scas
xchg
xchg
gs
sbb
jmp
add
jbe
shl
cmp
cmp
sub
lea
xor
les
rcr
dec
mov
jae
fs
lret
xor
dec
stos
xchg
pusha
sub
mov
std
cmpsl
fwait
sbb
in
lahf
cld
jp
leave
mov
dec
inc
cmc
inc
aaa
enter
cmpsl
repnz
fistl
in
xchg
outsb
xchg
test
jge
dec
mov
pop
lret
icebp
adc
mov
adcl
dec
div
pop
sub
outsl
movsl
aam
sbb
mov
out
stos
daa
ficomps
dec
xchg
scas
mov
cmpsl
gs
out
sbb
push
xor
mov
cmp
dec
and
pop
adc
and
dec
dec
nop
out
fimull
jg
aaa
loopne
jb
add
lock
out
sub
push
pusha
out
cmp
lds
adc
scas
cltd
add
pop
or
jp
movsb
adc
jg
sub
or
cld
pop
inc
mov
jle
lahf
shrl
fxch
lcall
sub
lds
push
pop
xchg
push
pushf
hlt
pop
in
fs
cmp
jb
je
out
lods
insb
icebp
add
mov
lods
jnp
arpl
push
lret
xchg
imul
xchg
inc
dec
mov
mov
cmp
xchg
cmc
imul
out
icebp
xchg
inc
mov
out
pop
sbb
jge
repz
faddl
xlat
cmp
cmpb
rorb
fs
mov
push
inc
fidivrl
add
xchg
jo
lods
cmpsl
out
das
test
cmp
xchg
cmpsl
pop
lock
jle
aad
mov
cltd
cltd
in
stos
sbb
out
push
dec
adc
shl
add
shrl
negl
dec
ja
adc
lods
cld
cwtl
add
in
pop
jl
testl
ljmp
add
inc
stc
sti
jbe
mov
rcrb
jecxz
pop
push
and
das
xchg
das
out
int
push
push
pop
mov
inc
dec
add
xor
xchg
mov
outsl
lret
sti
push
push
xor
and
ja
fdecstp
shrl
mov
xchg
jle
inc
mov
xor
xor
dec
mov
pop
mov
addr16
or
test
or
xchg
inc
xchg
adc
pop
adc
adc
gs
xor
nop
call
popa
test
bound
or
fnstsw
fcompl
sbb
lds
stc
cli
shl
pop
test
gs
add
sbb
inc
lods
inc
and
enter
sub
sub
mov
arpl
inc
add
in
addr16
push
sub
jae
stos
adc
in
xchg
jns
mov
cltd
adc
jno
push
das
or
sbb
das
xchg
fistpl
ret
aad
lds
dec
out
sar
icebp
lahf
fcmovne
pop
xchg
sar
lods
adc
sub
leave
xor
and
aad
add
adc
or
jl
aam
cld
imul
sbb
sbb
stos
mov
sub
cmpsl
push
aad
out
inc
psubusb
push
faddl
dec
cltd
xlat
jp
or
or
jecxz
mov
and
mov
repnz
cmpsl
in
cli
push
repnz
aam
push
push
inc
jne
mov
pop
xor
sub
std
daa
push
push
xor
add
jmp
inc
mov
add
les
inc
inc
ss
cmp
and
scas
mov
dec
jle
fidivrs
mov
aas
xor
fdivrl
jge
mov
fcoms
lods
adc
sub
jmp
loope
fistpl
sti
es
mov
test
jp
add
std
mov
js
push
lahf
add
daa
mov
jle
cmp
mov
scas
into
les
jb
ret
and
sub
repz
je
mov
insb
and
ds
aad
lods
mov
mov
cmp
inc
push
inc
or
cmp
dec
in
jo
test
sbb
jg
xchg
or
scas
sbb
lock
leave
add
adc
repz
mov
xor
lock
xlat
fsubrl
popa
cmp
aas
hlt
jb
dec
test
adc
test
mov
sarb
loop
aas
jo
mov
shll
xchg
je
sbb
fstpt
push
mov
mov
pushf
mov
push
push
sub
insl
xor
mov
pushf
leave
setp
xchg
test
mov
popa
mov
out
fisttpl
jnp
fnstenv
jbe
pushf
dec
sub
sbb
jge
inc
loop
lahf
stos
push
jae
inc
insb
and
roll
xchg
inc
lods
aaa
and
and
push
mov
lret
xchg
mov
pop
arpl
mov
out
notl
xor
cltd
dec
push
sub
inc
stos
in
mov
push
mov
pop
push
add
imul
pop
cmp
and
dec
scas
scas
in
outsl
mov
call
in
dec
lods
nop
mov
and
scas
out
push
sub
int3
or
xchg
add
lods
mov
cld
faddl
bound
test
aaa
out
push
inc
pop
sub
ja
in
aam
jmp
fnsave
sub
mov
cwtl
add
icebp
xchg
js
pop
xchg
xor
push
push
xchg
insl
ret
and
push
mov
add
dec
test
hlt
loopne
inc
mov
sub
insl
xlat
xchg
adc
or
fdivl
fwait
je
fcmovne
xor
popa
aad
in
cmc
mov
push
popf
and
sub
xchg
pop
leave
sbbl
mov
mov
sbb
rcrl
pusha
jo
add
xchg
sub
pusha
lcall
and
fs
jmp
adc
xchg
mov
shlb
out
add
cli
mov
push
scas
pop
mov
xor
fnstsw
jmp
lods
sbb
iret
and
insb
sub
xchg
and
lods
shll
js
push
gs
cmc
mov
cs
daa
mov
test
lds
mov
cwtl
lcall
mov
dec
push
popa
mov
sbb
std
push
add
and
inc
into
pop
repz
int
xchg
ret
in
jne
mov
xchg
adc
cltd
iret
imul
mov
inc
and
and
mov
sbb
arpl
hlt
cs
faddp
inc
push
jg
sbb
icebp
mov
shlb
repz
neg
push
or
cmpsb
dec
call
push
add
mov
ret
push
hlt
and
ret
jle
push
or
fldenv
outsb
mov
xchg
push
lods
cs
les
dec
dec
fiaddl
fwait
and
xchg
mov
je
leave
daa
inc
andl
lret
mov
ficoms
repnz
pop
mov
push
nop
push
pop
lea
mov
icebp
adc
xor
aaa
sub
mov
shrl
push
sbb
scas
push
jo
fcoml
jecxz
push
movsb
mov
arpl
cltd
fwait
xor
add
or
ss
or
in
dec
xchg
rep
shrb
inc
jb
xor
xchg
in
lahf
inc
inc
imul
aad
lret
in
test
lret
ror
push
inc
pop
sub
pop
inc
and
test
cmp
mov
adc
fs
add
or
mov
mov
jmp
jae
cmp
and
ret
mov
movb
dec
call
punpckhdq
sub
xor
dec
int
les
and
imul
push
out
or
incl
pop
sbb
add
or
lret
mov
sarl
and
je
imul
dec
push
outsb
fnstenv
push
or
xchg
xor
pushf
mov
cmp
xor
mov
xchg
decl
in
ljmp
into
push
lea
sub
xchg
mov
sbb
push
jbe
jae
mov
ljmp
dec
push
push
arpl
fdivs
mov
arpl
cmp
mov
loop
das
pusha
dec
inc
push
outsb
stos
cwtl
aas
push
aas
xlat
aas
insl
mov
lret
xchg
sub
orl
pop
js
sbb
jno
aas
push
leave
pop
add
jle
dec
loop
cmp
xor
out
movsl
add
inc
fimuls
out
and
ret
push
or
pop
cmp
insl
jne
ret
push
in
push
insl
dec
mov
das
jecxz
test
xchg
out
pushf
mov
inc
std
or
popf
cmp
add
sbb
jle
sbb
inc
inc
pop
pop
and
arpl
inc
in
push
pop
and
xchg
mov
call
sub
pop
inc
out
notl
mov
or
and
dec
leave
icebp
inc
inc
sbb
js
outsl
ljmp
rcrl
orl
inc
das
add
cmp
add
pop
xlat
test
fistpll
popf
shrb
lahf
xor
decl
xchg
push
leave
mov
dec
sub
imul
sahf
mov
and
cli
lea
fadds
pop
or
adcb
jnp
insl
cmp
cmpb
jg
inc
stos
subb
andl
sbb
repz
lds
sub
jmp
stos
test
lock
mov
les
mov
and
mov
es
sbb
mov
pop
les
test
outsl
and
shlb
xorb
lea
pop
sub
imul
test
add
mov
test
cltd
sub
sbb
lahf
cs
dec
fistpl
or
push
xor
or
jns
push
aas
adc
mov
les
push
das
push
sub
and
shl
cmc
dec
jo
push
ror
mov
mov
dec
shlb
cltd
andb
adc
xor
adc
jnp
lret
ret
jmp
sub
mov
sub
pop
div
orb
xor
push
push
dec
rcl
jns
data16
mov
out
mov
clc
push
xor
dec
mov
jmp
dec
iret
cltd
mov
add
pop
cmc
push
ret
mov
test
or
movb
cmpsb
xor
or
inc
lods
mov
mov
mov
je
jne
data16
cmp
add
dec
sub
hlt
mov
sbb
es
dec
add
lds
orb
xchg
mov
fimull
jbe
inc
in
dec
push
lds
lahf
xchg
mov
or
jp
ds
pusha
push
mov
push
scas
in
loop
sub
mov
xor
sub
imul
shll
pop
stos
cmp
pushf
lock
mov
and
shufps
hlt
fsubs
inc
push
in
sbb
cli
and
pop
and
in
jne
incb
mov
cmpsb
and
push
out
push
push
testl
lret
xchg
sub
jbe
sbb
ja
ljmp
bound
ss
addr16
push
in
pop
fs
popf
mov
mov
cmp
idivl
stc
insb
lret
jl
cmp
and
pusha
pop
int
mov
cwtl
out
enter
pop
jae
sub
mov
mov
jnp
loop
mov
push
mov
shl
push
stos
jno
punpcklwd
pop
xor
xchg
lods
data16
dec
outsb
add
sti
mov
in
or
flds
xchg
mov
add
sub
js
mov
mov
ret
int3
outsb
add
repnz
lds
dec
push
and
ja
sub
es
mov
int3
test
xor
dec
dec
jnp
mov
andl
lds
xchg
or
lret
test
ret
outsl
daa
sub
mov
mov
pop
pop
mov
int
daa
adc
and
dec
ret
jnp
mov
sub
sub
push
and
cs
fisttps
inc
push
mov
popf
pop
stos
pusha
insl
add
in
inc
cmp
jbe
arpl
in
cmpsb
je
and
or
aad
outsl
subb
push
mov
pop
add
ss
in
or
fdivl
or
xchg
out
mov
adc
sub
sbbb
or
sbb
xchg
or
xor
cli
lahf
pop
xchg
movsb
adc
push
push
out
fists
push
mov
nop
movsb
xor
in
dec
mov
dec
enter
mov
shrl
sbb
inc
lods
psrlw
es
sub
mov
call
pushf
bound
enter
loopne
jl
add
mov
mov
jnp
loope
test
aad
aas
xchg
nop
xor
lds
xchg
push
cs
notl
sub
clc
cmp
lcall
adc
int3
lds
cmpsb
test
mov
dec
rcrb
loope
data16
movsl
rcrl
leave
or
mov
jle
dec
dec
add
in
push
jb
pop
rcll
inc
dec
jl
sub
mov
div
aad
mov
pusha
sbb
mov
call
jne
clc
imul
sti
aam
add
mov
mov
imul
aam
mov
icebp
dec
jg
sub
dec
pop
scas
in
pop
pop
scas
pop
xchg
and
cmp
je
xlat
jge
icebp
or
shrb
and
inc
or
es
add
cmp
adc
sahf
imul
mov
sbb
dec
pop
xchg
cmp
jp
adc
mov
mov
iret
mov
mov
mul
aaa
push
sti
jl
or
outsb
ss
lret
stos
sbbb
scas
arpl
push
sarl
adc
pop
cld
call
sbb
mov
dec
mov
scas
dec
push
popa
fwait
jns
mov
cld
cld
clc
xchg
xchg
or
call
loopne
imul
arpl
testb
and
mov
incl
push
or
mov
popa
xlat
cmp
and
push
cltd
popf
add
jnp
and
jg
and
addr16
inc
push
inc
jp
mov
sub
push
loop
jae
jbe
push
push
mov
adc
add
cmp
sbb
and
jo
fcmovnbe
fidivrs
jle
aas
mov
scas
jno
adcb
add
or
scas
mov
or
shl
mov
xchg
cmp
cmp
jae
pusha
int
mov
cli
sbb
mov
mov
sbbb
adc
add
jae
push
inc
dec
mov
and
cmpsb
into
lret
ret
inc
pushf
das
js
xchg
das
push
inc
cmp
lret
cmpsb
mov
add
sti
xchg
dec
push
into
xor
cmp
dec
lcall
xchg
test
pop
adc
outsl
inc
das
push
adc
push
pop
push
outsl
push
arpl
xchg
jge
jb
sbb
and
mov
movsl
push
call
fcom
sub
test
cmp
test
in
std
insb
cmp
test
adc
mov
pushf
push
aad
rcrl
jp
sahf
ret
mov
fidivs
dec
or
ja
lcall
adc
mov
fists
mov
and
mov
xacquire
cmp
push
sar
dec
adc
hlt
mov
fwait
icebp
inc
aad
pop
fimuls
fldcw
mov
mov
mov
in
imul
cmpsb
fsubp
int3
sti
add
sbb
test
lock
cmp
int
loop
sub
push
jne
inc
jne
jecxz
and
fsubrl
lret
sub
test
pop
sbb
and
stc
stos
xor
inc
lret
adc
cwtl
jmp
ret
xchg
sbb
mov
mov
add
sbb
gs
cltd
xchg
jmp
ret
mov
test
or
movsb
repz
xor
and
repnz
push
repnz
sbb
into
or
repnz
pop
inc
xchg
mov
shr
leave
add
out
pushw
scas
pop
sub
divl
inc
out
pusha
addb
or
frndint
test
add
jbe
scas
mov
lret
or
fwait
and
mov
mov
punpcklbw
loop
sub
sbb
lcall
xchg
push
jmp
mov
ja
pop
sub
scas
adc
push
in
loop
pop
or
push
out
lock
sbb
pop
rcll
decl
subb
jbe
and
pop
gs
dec
dec
sub
xchg
test
lret
out
outsb
in
lods
adc
je
sbb
cmp
lds
lods
jne
lea
mov
push
out
jne
lcall
sub
test
test
repz
movsl
fsubr
mov
sahf
pop
mov
jl
outsl
subl
mov
adc
and
or
outsb
xchg
insl
test
imulb
clc
cmp
adc
out
pop
dec
loopne
js
sub
pop
xchg
stos
jmp
roll
xchg
ficoml
add
ret
pusha
mov
test
into
fcomp
xor
imul
fisttpll
out
mov
dec
gs
aad
pop
xor
adc
test
jecxz
xor
mov
mov
in
push
mov
sbbb
sbb
pusha
cmp
int
jge
test
mov
push
stc
or
mov
lock
fldt
cli
xchg
xor
in
mov
push
xchg
lret
sbb
pop
lret
int3
dec
pop
mov
in
in
sbb
sarb
sub
pop
cs
mov
imul
push
idivb
add
rol
js
add
repz
sub
lods
dec
jl
jmp
push
sbb
stos
mov
cmp
jmp
mov
mov
aad
stc
inc
and
sbb
cmp
lods
jmp
enter
gs
inc
sub
and
mov
xchg
dec
scas
into
fisttps
jno
in
test
insl
sub
loop
jmp
adcl
mov
lods
mov
add
jg
stos
xchg
xchg
jge
cmp
enter
add
jmp
mov
je
sub
or
or
push
out
loopne
xor
adc
daa
mov
or
pop
clc
pop
and
fwait
cmp
out
pop
cmp
inc
cmp
int3
ljmp
pushf
psrad
addr16
ret
xor
cmp
imul
fdivs
addr16
imul
cmpsb
pop
dec
rcl
xlat
in
and
aad
xchg
test
jno
test
push
fimull
mov
or
push
xor
xchg
jp
cmc
js
inc
loop
jmp
pop
xor
xchg
and
dec
xchg
das
inc
lret
or
out
add
xchg
lods
pusha
insl
mov
push
inc
mov
loop
sbb
outsb
fimuls
into
popl
addb
dec
push
xor
aaa
pop
sarl
mov
ds
jecxz
dec
mov
cmpsl
popa
in
pushf
sub
addb
adc
int
in
adc
das
mov
inc
pop
xor
jecxz
xchg
addr16
js
leave
jp
or
ror
fidivrl
jmp
fbld
mov
stc
jo
int
mov
popf
push
or
inc
jns
mov
dec
fs
pop
sub
stos
or
pushf
ss
insl
dec
int
fs
pop
cld
jnp
fwait
mov
popa
xlat
mov
push
mov
stos
fistpll
cmpl
stos
mov
gs
gs
and
lods
lret
or
popf
bound
es
enter
xor
and
jp
les
xchg
push
dec
mov
cmp
lods
push
cmpsb
inc
xchg
dec
in
data16
pop
and
daa
out
add
fbstp
cltd
xor
test
fists
mov
outsl
cmp
push
lret
inc
fs
or
int3
fsubr
iret
xchg
xor
and
sbb
sub
iret
sub
shr
adc
fidivs
lret
sahf
mov
bound
adc
xchg
xor
imul
arpl
or
jns
das
repz
sub
int3
in
mov
ret
push
dec
xor
rolb
outsl
mov
dec
or
sub
jo
cltd
jno
sub
sub
add
je
push
mov
jg
cmc
mov
sub
in
movsl
pop
leave
dec
adc
fmul
mul
addr16
mov
xchg
push
lods
dec
and
ret
in
fbstp
daa
add
and
push
xlat
mov
movsl
jo
adc
aas
mov
fdivrs
pop
insb
adc
rol
ja
lret
xor
repz
rcr
mov
add
je
xchg
mov
push
mov
and
in
and
jl
ret
cli
mov
xchg
or
or
mov
call
push
lods
adc
into
xchg
loope
out
inc
or
enter
scas
mov
add
xchg
sbb
mov
nop/reserved
xor
jge
mov
and
adc
stos
insb
dec
dec
pop
rolb
insl
pop
mov
rcl
mov
jge
lods
jle
mov
inc
xacquire
stc
sbb
movsl
mov
pop
mov
and
jns
cs
imul
jne
push
shlb
fwait
mov
fsubs
scas
gs
stos
sbb
xlat
jg
ljmp
sar
mov
add
test
es
cmpsb
stc
dec
ret
xor
cmp
das
mov
repnz
mov
popf
cmp
push
inc
or
pop
iret
shlb
insl
pop
into
or
gs
scas
jns
bnd
sahf
xor
cmpsb
fldcw
mov
cmpsb
scas
adc
and
adc
ret
pushf
mov
adc
xlat
scas
dec
sbb
pop
enter
fwait
push
lret
cmp
out
sarb
pop
push
daa
pop
pop
and
cmpsl
fisttpll
cwtl
push
dec
lods
js
xchg
pushf
dec
or
nop
pop
sub
int
dec
daa
repnz
repz
pop
xchg
add
jg
mov
lods
ret
sbb
xor
cmpsb
outsl
push
sahf
ror
sbb
cmp
sbb
sahf
repnz
insb
imul
xor
test
jl
subb
es
testl
jge
adc
add
fcoml
test
pop
and
imul
out
pop
pop
dec
mov
scas
sub
scas
inc
sub
mov
imul
push
push
dec
cwtl
push
es
les
cmpsb
mov
xchg
orl
pop
les
sbb
dec
pop
dec
push
je
mov
adc
repz
mov
xchg
push
sbb
xor
loope
daa
insb
xchg
pop
sbb
or
xchg
mov
dec
cmp
ret
ret
flds
jae
add
rorl
or
mov
lock
into
int3
mov
mov
dec
in
mov
and
xor
out
sbb
aam
push
adc
jno
pop
insl
stc
cwtl
call
aad
arpl
lods
jecxz
daa
xchg
push
stos
sbb
jae
data16
sbb
mov
test
adc
mov
mov
adc
dec
lods
cltd
cmc
jecxz
push
sub
sbb
loope
jmp
jle
xchg
addb
jg
out
mov
cmp
ljmp
in
sbbb
jb
ret
xchg
inc
movsl
aaa
jo
adc
jmp
or
ss
sahf
adc
dec
add
sbb
xchg
and
adc
adc
mov
outsl
popf
pop
test
sbb
dec
pop
ret
aam
lods
repnz
lock
lods
pusha
xor
loop
push
sarl
inc
enter
xor
or
jge
insb
sub
fucomip
and
mov
or
mov
mov
and
mov
int3
fs
jmp
fsts
push
mov
call
dec
movsb
hlt
cltd
cmp
fidivrl
inc
cmp
push
xchg
xor
loope
aas
xlat
sbb
push
mov
jne
mov
pop
pop
pop
jo
and
imul
lret
fstps
std
push
push
mov
push
pop
adc
and
sub
dec
xchg
outsb
test
xor
out
mov
fwait
roll
mov
popa
dec
aam
jg
shl
fiaddl
inc
jecxz
test
repz
jae
mov
xchg
or
cmp
adc
cmp
es
push
cld
rcrb
push
xchg
or
push
sbb
lret
rclb
push
test
xor
and
ss
pushl
movsl
inc
dec
lret
cltd
xchg
mov
cmp
xchg
lods
loopne
dec
ret
fildll
cmp
cmp
pushf
inc
or
aad
cmpsb
cmpsb
pop
arpl
in
xchg
xlat
loop
add
jecxz
rclb
movsl
fsin
and
loop
jno
pop
dec
push
push
adc
mov
xor
sub
mov
push
jecxz
jb
lds
fisttps
sub
xchg
fdiv
hlt
mov
daa
xor
and
cld
mov
xchg
or
mov
xchg
in
sbb
gs
ficompl
mov
mov
cmc
add
mov
shll
int3
or
mov
xchg
orb
mov
push
ljmp
jmp
outsl
mov
mov
sub
arpl
xor
clc
inc
aam
cmp
jb
std
bound
jno
pop
push
scas
push
add
data16
lahf
ja
mov
push
loop
stos
scas
push
mov
xor
dec
jle
sub
and
stos
push
adc
xchg
loopne
inc
mov
adc
lock
jmp
adc
addr16
mov
sub
push
lock
xor
test
incl
pop
inc
les
xchg
add
pop
mov
in
stc
cld
adc
jp
test
or
iret
or
xchg
ret
cltd
mov
inc
insb
xor
and
sbb
sbb
stc
xchg
xor
ja
jmp
and
jo
mov
jae
cmp
les
push
xlat
xchg
or
pushf
bound
push
add
ret
in
mov
lret
jo
mov
test
sahf
and
xchg
dec
jbe
fcompl
fidivrs
aam
test
dec
insb
pop
hlt
and
adc
addr16
push
fsts
cmp
call
push
sub
outsb
push
mov
out
mov
cmp
or
pop
in
mov
mov
hlt
pop
aam
aam
adc
addr16
cmp
and
jnp
mov
mov
sub
jo
sbb
sub
shl
les
shll
lret
sbb
js
cld
lea
pop
mov
orb
negb
mov
aam
jb
jbe
mov
pop
fcompl
mov
xchg
jns
aaa
add
std
jo
xchg
lahf
and
pop
and
lods
out
sbb
mov
shl
js
aam
and
jno
push
ljmp
xor
arpl
lock
adc
fwait
sbb
xlat
hlt
sarb
pop
sub
or
jbe
xchg
mov
cld
mov
mov
imul
mov
push
mov
pop
mov
push
sbb
xor
rorb
lods
sbb
ss
xchg
cwtl
jl
mov
outsb
xor
int
lcall
dec
das
repnz
in
pop
jb
jle
dec
sbbb
ss
gs
test
fs
call
cld
or
bound
cmp
jmp
bound
rorb
cwtl
cmp
adc
cmp
push
cld
cmp
push
hlt
xor
or
adc
loopne
cmc
dec
aam
daa
jg
sbb
jno
mov
subb
jnp
and
adc
outsb
repnz
sbb
inc
aaa
add
cwtl
cwtl
jb
shrb
push
in
push
push
sbb
les
jb
fmull
jmp
pop
out
mov
out
lret
xchg
lret
jns
scas
pop
ljmp
pop
push
jge
dec
and
sub
fdiv
inc
jmp
mov
test
dec
mov
lcall
jge
movsb
cld
pushf
cmpsl
mov
and
loope
enter
push
in
sti
pop
sub
add
lods
clc
lahf
xor
repz
add
jmp
push
cmp
mov
xorb
pop
hlt
test
cmp
nop
cmc
jecxz
insb
and
cmp
xor
or
or
jg
or
rcrl
ljmp
pop
test
pop
jo
jge
in
mov
sbbb
adc
imul
mov
pop
pop
mov
pop
pusha
pop
mov
jmp
fcomps
sbb
cld
cmp
push
jae
mov
in
mov
orl
push
ljmp
movsb
mov
push
fs
mov
outsl
add
add
outsl
bound
repnz
add
push
outsb
add
mov
pop
das
or
mov
adc
fs
pop
cwtl
sbb
dec
pop
imul
xchg
pop
imul
xchg
outsb
idivl
ss
ss
sub
cmp
test
stc
sub
xor
sub
jmp
add
sti
cli
jno
shrb
xchg
ret
cli
mov
mov
aad
aam
jnp
xorb
pusha
ljmp
in
pop
divb
imul
or
inc
clc
add
loope
stos
loop
addr16
and
and
pop
xor
aas
repz
pop
lahf
cmp
insl
je
inc
mov
pop
and
mov
dec
xlat
jns
mov
shll
mov
xchg
jb
decb
dec
je
dec
mulb
mov
fmull
jmp
mov
and
pop
mov
lock
pop
dec
sbb
mov
call
xor
and
pop
lea
aas
and
jbe
xchg
jo
cmp
fnsave
add
xchg
nop
cmpsb
mov
outsl
mov
add
sbb
lea
sbb
shll
into
mov
fidivrs
jmp
fistpl
repnz
filds
sbb
jae
fidivl
push
clc
shlb
in
cli
sbb
fsubs
lea
push
xor
mov
pop
xor
outsb
sahf
xor
inc
repz
sbb
cmp
and
lcall
jg
xchg
adc
imul
aaa
mov
cmp
pop
test
adc
and
lea
call
xor
mov
jbe
sub
fidivrs
sub
pop
test
jp
or
roll
inc
push
clc
jns
mov
mov
andl
cmc
mov
in
mov
pop
js
dec
push
jno
inc
adc
mov
add
insl
inc
jmp
dec
mov
dec
or
mov
enter
dec
pop
in
lahf
push
jmp
push
adc
dec
shlb
loop
pop
push
sbb
leave
and
mov
ljmp
loope
cmp
adcb
aas
mov
jo
adc
lods
scas
push
sub
push
int
xchg
sbb
xchg
nop
test
ss
mov
ja
add
mov
in
pop
out
mov
ret
cli
je
xchg
addr16
data16
push
mov
dec
int3
popa
jae
mov
cmp
xor
and
scas
xchg
aad
js
mov
cmp
dec
filds
jl
loopne
test
xchg
in
lock
enter
cmc
mov
mov
arpl
pop
cmp
mov
xorb
jge
sub
mov
out
dec
sub
in
in
sarl
xchg
clc
add
aaa
arpl
mov
push
in
mov
pop
mov
push
bound
dec
add
mov
mov
jno
js
and
add
std
ja
lods
into
shlb
out
std
and
stos
sub
in
sbb
out
add
out
sub
outsb
cmc
cmp
xchg
mov
and
pop
ret
mov
mov
testb
aaa
xchg
push
add
pop
jne
shlb
gs
sbb
leave
mov
sub
mov
sub
jg
push
xchg
dec
or
cmp
jae
in
repz
decl
pushf
cmp
sbb
mov
mov
and
mov
dec
insb
add
loopne
mov
mov
sti
jle
orb
clc
aas
nop
add
mov
sbb
test
data16
cmp
cmp
jae
lret
stc
mov
ja
mov
dec
adc
cmp
data16
mov
push
pop
dec
pop
mov
and
movsl
out
jecxz
push
pushf
xchg
lods
inc
sbb
daa
or
movsl
js
fwait
mov
or
jge
pop
in
sar
sti
imul
sbb
push
mov
add
or
sub
pushl
je
or
and
inc
test
sahf
call
popf
lods
mov
inc
cmpb
pop
out
cmpsb
pop
ljmp
jle
test
jg
std
stc
movsb
mov
outsb
mov
dec
fs
shrb
xor
rcll
pcmpeqb
out
ljmp
sti
jae
sub
sbb
sub
inc
sub
mov
push
lahf
aad
insl
pop
in
adc
mov
fdivrs
hlt
and
xchg
test
stos
repnz
es
adc
js
inc
repnz
push
outsl
repz
pop
jmp
inc
jo
cmc
jl
xor
xor
jbe
jmp
adc
jle
add
sbb
push
subb
addr16
xorb
test
xor
int3
xchg
mov
dec
mov
add
rorb
shlb
jbe
mov
testb
mov
cwtl
dec
adc
adc
out
jg
sub
adc
out
mov
adc
aam
test
and
outsb
leave
and
les
xchg
popf
and
adc
rcrl
scas
jae
xlat
sbb
mov
push
push
mov
cs
mov
aaa
pop
or
dec
xor
mov
or
xor
pop
mov
or
add
xor
mov
xchg
and
push
xchg
lock
mov
ret
mov
push
jns
sub
fwait
and
data16
pusha
daa
sbb
out
int
mov
cmp
or
inc
aas
icebp
shlb
rorb
nop
shll
cmp
out
and
inc
pushf
shll
in
aas
sahf
or
call
dec
and
jg
sbb
cltd
sub
adc
xor
sub
jns
adcl
jns
jno
xlat
or
pop
adc
push
dec
idivb
lret
ja
dec
mov
ficoml
cmp
dec
clc
iret
orl
mov
cmp
lock
fisubl
add
push
mov
sbb
push
dec
js
jo
pop
hlt
insl
pop
cmpsb
push
popf
out
jl
lret
sbb
mov
je
int
mov
fwait
mov
push
jo
and
aam
jmp
int3
mov
and
scas
pop
xchg
sbb
iret
cmp
out
in
aaa
loop
dec
mov
push
jae
iret
shll
jno
xor
mov
adc
jbe
dec
jne
cmp
mov
cmpsl
lret
sub
mov
add
subb
das
mov
cwtl
push
mov
jp
adc
add
es
xchg
push
inc
jle
gs
movsb
lret
cmpsl
add
push
cs
test
aas
mov
leave
sarl
mov
mov
xchg
movsb
pop
jbe
mov
aam
mov
and
repnz
push
sbb
push
lahf
push
dec
das
outsl
and
push
cld
roll
push
ja
mov
outsl
add
add
pop
lret
pop
and
dec
or
test
loop
push
test
mov
gs
frstor
mov
mov
xchg
xchg
rcrb
aas
xchg
stc
ret
add
push
std
cmp
xor
leave
and
xchg
loope
jnp
loope
popf
pop
inc
cltd
push
jp
xchg
inc
push
sub
lds
bound
sahf
loope
inc
push
inc
test
jo
mov
add
orb
iret
pop
daa
mov
sti
aad
inc
push
pop
or
inc
xor
sub
push
mov
dec
jmp
imul
sahf
mov
mov
fidivrl
or
mov
int3
mov
test
mov
xchg
call
inc
inc
jge
jp
mov
sbb
inc
push
xchg
push
roll
mov
loopne
out
jg
arpl
dec
ss
test
lods
mov
ja
sbb
push
sbb
pop
add
repnz
mov
mov
dec
push
mov
fwait
pop
repnz
ret
mov
int
pushf
dec
or
add
sub
jns
push
scas
add
adc
or
vcvttps2dq
push
pop
pop
push
push
test
test
gs
sahf
bound
sbb
inc
mov
xchg
fidivl
and
shrb
repnz
stos
dec
xchg
push
or
cwtl
addr16
dec
cmp
mov
out
mov
scas
sbb
cltd
test
pop
aam
outsb
xor
xchg
stc
rclb
inc
pusha
in
add
and
daa
fbstp
pop
jns
cmpsb
cmpsb
push
mov
sti
fstl
cmpsb
idivb
adc
mov
inc
mov
push
leave
movsb
dec
je
cmp
call
test
stc
addl
mov
decb
xchg
jmp
jl
mov
mov
sti
push
pop
mov
outsl
xor
pop
push
pop
dec
arpl
inc
add
jp
mov
sbb
and
cmpsl
addr16
pop
rcr
adc
sub
fstps
jge
jne
inc
cmovg
test
mov
faddl
mov
adc
inc
daa
hlt
jmp
pop
jnp
mov
pop
cs
in
pop
call
nop
std
shll
fisttpll
mov
rclb
loop
popf
or
popa
sbb
dec
lea
push
mov
and
mov
xor
or
roll
xchg
shr
pop
adc
xor
sub
jle
insb
mov
mov
movsl
lea
cmp
and
out
jmp
movsb
jmp
stc
jl
or
sbb
jae
cmp
mov
pop
gs
xor
clc
jmp
sahf
push
js
cmp
pop
cmp
test
lahf
lea
sarl
mov
jno
push
mov
mov
dec
stc
icebp
in
ret
mov
shlb
push
push
xor
dec
xchg
dec
ret
stos
cmpsb
pop
enter
sub
jecxz
das
loopne
push
inc
push
fcmovu
cld
inc
adc
inc
push
or
addr16
fwait
and
mov
push
pop
cmpsl
jb
bound
cmpsl
into
lahf
lods
clc
push
jo
ret
mov
mov
mov
cs
scas
es
lahf
das
xor
arpl
xlat
jae
dec
mov
cwtl
sub
jae
sub
xchg
pop
push
rcr
in
fwait
xchg
fildll
xor
mov
cmp
movsb
test
mov
mov
pop
cmc
subb
mov
subl
pop
add
inc
pop
mov
xchg
dec
pop
dec
les
pop
dec
outsl
mov
mov
int3
inc
push
fmuls
jae
sub
ja
mov
fwait
stos
push
xchg
pop
fs
into
jbe
imul
dec
test
xchg
adc
inc
inc
gs
aas
mov
mov
loope
faddl
and
push
das
mov
xchg
arpl
add
out
jne
cmp
push
and
pop
pop
mov
ja
pop
mov
data16
pcmpgtb
test
loopne
cmp
ljmp
adc
out
rorb
add
je
mov
and
mov
pop
inc
pop
je
ret
mov
mov
mov
popa
into
ds
hlt
or
aaa
mov
mov
test
test
adcl
ss
js
xchg
lods
clc
xchg
shlb
and
jg
neg
mov
cmc
jne
testb
je
sub
cmp
in
fldenv
lcall
dec
stos
push
fildl
ljmp
add
jp
cmp
jmp
ret
lret
cs
stc
add
and
in
adc
popa
arpl
cmc
xchg
mov
and
cmp
outsb
cmp
mov
in
pop
push
add
insl
dec
jno
inc
movsb
or
das
popa
subb
adc
shll
mov
cmp
icebp
insb
and
sbb
movsl
pop
or
popa
jg
orl
mull
test
xor
cltd
jecxz
test
xchg
lods
or
jbe
sbb
push
adc
mulb
pop
fnstcw
lods
xchg
shll
mov
adc
rorb
stc
stos
sub
pop
lret
lods
xchg
ja
inc
scas
in
lret
mov
shrb
inc
mov
subl
movsb
dec
inc
adc
lds
test
xchg
push
xor
jmp
push
pop
repz
test
imul
or
dec
flds
outsl
push
loopne
out
jnp
push
stc
ret
or
sub
arpl
pop
adc
or
push
jno
push
movsb
out
jbe
stc
out
fs
push
movsl
cmp
push
outsb
dec
int
cmp
lods
dec
sub
xchg
scas
jmp
rcrl
insl
dec
fdivrl
into
or
hlt
imul
dec
mov
sbb
ret
jo
jb
int
fildl
inc
out
ds
and
push
movsl
mov
jp
data16
sbb
insb
popf
fmul
ret
or
lahf
adc
das
fidivrs
pop
dec
stos
dec
mov
rclb
push
add
mov
inc
add
or
in
jae
leave
adc
sbb
xor
insb
jmp
shl
fisttpll
xchg
xorb
js
xchg
rcll
and
pcmpgtw
jmp
and
addr16
sub
adc
pop
pop
mov
insl
notl
nop
int3
icebp
fisubrl
ficompl
fmuls
xor
jb
popf
or
sbb
cmpsl
stc
push
ljmp
mov
mov
jle
into
dec
xor
pop
iret
cmp
inc
sti
pop
mov
cwtl
add
inc
or
loop
testl
mov
push
pop
cli
clc
ret
fnstcw
imul
movsl
add
jecxz
and
sbb
sarb
lcall
fs
mov
sahf
pandn
and
cwtl
rcll
push
add
xchg
inc
cmc
push
jbe
jbe
or
adc
insb
xor
jne
shll
frndint
sbb
out
out
and
pop
mov
dec
add
sbb
orb
repz
xchg
inc
cmp
xorl
add
push
xchg
push
sub
sub
adc
pop
mov
inc
mov
int
outsb
mov
mov
std
je
lods
sbb
addr16
and
pop
pop
loopne
inc
subb
aaa
jo
mov
push
fstl
mov
test
pop
jmp
flds
stos
inc
and
jb
scas
lods
xchg
idivb
jno
ljmp
or
cmp
xchg
xor
mov
movsl
jecxz
push
test
bound
cmp
sub
ret
in
and
mov
mov
shrl
cmp
popa
fcomps
test
mov
mov
sub
loop
iret
push
jb
mov
lret
lret
sub
leave
add
mov
sahf
mov
pop
or
aad
lea
lods
or
cmpsb
movsb
repz
iret
loop
xlat
add
int
nop
and
pop
iret
ds
loope
jge
test
cli
insl
cltd
hlt
cmp
push
inc
jmp
xchg
inc
test
mov
in
mov
pop
stos
loop
and
lcall
or
bound
dec
inc
xchg
dec
or
popa
je
mov
and
clc
stc
lock
push
pop
fldl
scas
mov
sbb
je
inc
push
mov
clc
dec
adc
cli
cli
ljmp
fbld
mov
gs
stc
outsb
imul
and
mov
shrl
movsl
das
pop
push
mov
mov
into
test
cmc
in
movsl
jl
mov
mov
mov
xlat
pop
ret
xchg
xchg
out
lret
lahf
ficompl
sub
call
or
jb
cmp
push
xor
pop
int3
and
fs
jnp
popa
adc
or
or
rsqrtps
xor
iret
pop
and
daa
pop
in
mov
push
xor
jns
mov
ljmp
mov
add
xchg
jmp
in
add
loop
jno
lods
mov
sbb
sahf
dec
loop
xor
sbb
iret
xchg
mov
adc
pop
mov
mov
loope
repz
fcmovnbe
pop
add
or
outsb
mov
xchg
dec
mov
mov
test
cmp
mov
gs
jl
sbb
cmp
lret
adcl
push
mov
hlt
dec
ficoml
dec
mov
mov
mov
jle
popa
push
add
sbb
inc
cmpsl
movsl
in
bound
dec
leave
popa
rcrb
mov
pop
jg
das
imul
lcall
scas
xchg
dec
imul
cmp
xchg
pop
pop
xor
cmp
jno
ljmp
and
jno
push
sahf
sub
shlb
adc
cmp
clc
pop
xchg
xchg
pop
pop
pop
pop
jg
stc
ret
in
in
dec
arpl
dec
mov
bnd
mov
jmp
sbb
bound
cld
jnp
mov
mov
call
ret
adc
xchg
pop
and
shlb
fildl
addr16
leave
rclb
and
jbe
into
adc
mov
jns
lods
mov
or
inc
xchg
xorl
jecxz
mov
sbb
inc
jecxz
and
out
inc
or
imul
ja
pop
sub
inc
xchg
sbb
data16
fcomi
fadd
push
sub
push
push
fisubs
fstpt
xchg
test
dec
push
setl
cmp
lret
es
pushf
mov
imul
movsl
push
sbb
cmp
sbb
test
dec
mov
push
aam
fs
loope
cli
add
call
frndint
insb
arpl
lods
inc
pop
cld
repnz
call
sbb
in
mov
fwait
ds
orl
call
xor
int3
rclb
sbb
js
rcr
cs
xchg
adc
aad
mov
cmp
outsb
loope
adc
sub
int
xchg
stc
gs
sbb
pop
mov
pushf
mov
adc
adc
fistps
lret
movsb
and
adc
mov
cwtl
test
and
das
cmpsl
inc
clc
addr16
xchg
call
mov
dec
lret
mov
lods
mov
rorl
dec
fisttpl
data16
in
xchg
ss
jno
xor
mov
ss
aas
jb
xor
mov
adc
or
std
jns
mov
mov
std
add
ds
mov
cs
stc
jne
aas
mov
cmpsl
movsl
in
sbb
add
push
add
rcll
inc
pop
sti
hlt
imul
jb
js
inc
adc
or
sbb
push
div
pop
sarb
es
icebp
jns
mov
std
xchg
and
cld
xor
shr
mov
cli
sbb
inc
sbb
push
fidivl
add
pop
das
xchg
jb
lea
push
sub
test
int3
xlat
push
sbb
repnz
call
jle
pop
and
and
mov
ljmp
movsl
inc
or
mov
xchg
outsb
xchg
xor
scas
pushl
bound
lds
js
insl
add
outsl
jns
js
lret
xor
sbb
inc
xchg
fwait
lahf
pop
loope
add
cmp
test
rcl
aas
xor
push
movsb
test
arpl
outsb
pop
jge
cmpsb
mov
jl
xchg
mov
inc
mov
ljmp
je,pn
pop
inc
pushf
pop
sbb
enter
xchg
ret
mov
rcll
out
out
mov
ja
repz
and
outsl
push
insb
xor
lret
pusha
rorl
add
movsb
and
dec
mov
and
mov
stos
out
xor
xor
lock
cmpsl
sbb
add
cmp
add
xchg
aam
nop
fs
sub
push
fucomip
or
adc
push
mov
stc
rorb
stos
or
test
sahf
into
scas
xor
fstps
xchg
jecxz
addr16
popf
lcall
fmull
mov
jb
sbb
fnsave
loope
jp
test
and
mov
sbb
or
jg
adc
lods
lods
mov
sub
sub
pushf
adc
jo
and
fs
mov
push
daa
inc
push
outsl
jmp
xchg
dec
add
mov
pushf
add
and
in
xorb
jp
add
lret
out
call
mov
push
dec
cltd
jae
out
pop
jge
test
stos
mov
dec
fcmovbe
sub
or
adc
mov
stos
sahf
inc
enter
test
inc
xlat
inc
or
mov
pop
inc
inc
add
sbb
lock
and
ret
jp
mov
in
dec
pop
inc
imul
js
cltd
aaa
daa
cmpsl
mov
pop
xor
adc
mov
jno
xchg
sbb
lods
jnp
or
ljmp
push
mov
mov
xchg
ja
lock
cmp
and
mov
sbb
adc
mov
push
test
jo
dec
inc
xchg
shr
cmp
arpl
sub
clc
xor
push
es
fwait
cmpsl
sahf
loop
add
enter
mov
cmp
insb
sub
mov
rcll
xchg
out
adc
fcoml
add
cmc
movsb
shll
adc
jae,pt
shl
sub
and
jmp
xchg
bound
shrb
imul
test
insb
dec
sub
test
daa
stos
ljmp
jmp
insl
mov
pushl
or
loop
scas
fisttpll
jg
insb
add
xchg
dec
mov
and
and
and
cmpsb
dec
int3
test
sub
cltd
loope
cmpsb
movsb
es
cmc
shrb
gs
insl
sbb
sbb
adc
xchg
push
push
push
rorb
arpl
in
ja
mulb
pop
mov
pop
divl
mov
hlt
dec
lahf
rcrl
or
jg
xlat
movl
insl
xlat
push
and
dec
call
sub
test
jns
or
dec
sbb
loope
xchg
ja
loopne
xchg
test
xchg
mov
mov
scas
dec
xor
sub
jb
mov
movsb
das
ret
imul
loope
icebp
push
lods
arpl
imul
push
xchg
int3
mov
mov
or
cs
adc
mov
dec
ja
and
idivb
bound
scas
add
lret
addl
daa
mov
mov
mov
inc
sub
sarb
dec
loop
in
lock
mov
fadd
shll
pop
sbb
int
gs
lods
movq
loope
sub
mov
test
adcb
cmp
test
cmp
lods
lret
test
and
pop
jae
dec
cmp
mov
add
sahf
imul
xchg
leave
aaa
ret
and
pop
dec
mov
test
leave
inc
pop
fs
push
mov
and
or
jecxz
dec
dec
ret
fldt
jnp
cmp
jle
jmp
mov
push
in
ss
add
imul
pop
ljmp
lahf
jp
jo
mov
add
hlt
scas
aaa
push
dec
jecxz
outsl
add
mov
int
fcmovbe
lret
and
pop
adc
and
cmp
pop
test
xchg
icebp
sbb
int3
mov
inc
adc
and
int
mov
push
xchg
test
icebp
xlat
lahf
icebp
insb
cltd
mov
cld
repnz
sbb
hlt
insl
insl
add
push
pop
push
gs
mov
sub
loopne
shll
inc
lahf
sub
orl
aas
or
gs
sti
arpl
lds
xor
cmpsl
daa
cltd
push
pop
dec
ret
xchg
xchg
cwtl
test
adc
add
pop
ret
je
jge
into
push
test
daa
das
mov
loopne
push
mov
ja
adc
mov
push
mov
fisttps
lods
sub
mov
mov
and
int3
xchg
in
int
inc
test
add
mov
mov
pop
mov
ds
fs
ljmp
loope
arpl
cmp
or
cmp
mov
rclb
sub
jnp
insl
pop
in
scas
aas
shrb
lds
xchg
mul
pop
pop
rcrb
aaa
stc
rolb
cmp
lret
mov
leave
loop
lods
aas
adc
loope
arpl
jo
fscale
push
shlb
mov
int
inc
mov
or
xor
add
icebp
rorb
dec
and
fnstenv
fsubrl
sbb
mov
sub
dec
pop
jge
dec
push
add
ret
xchg
mov
push
push
aam
ret
jle
mov
mov
mov
and
xchg
push
push
test
cmp
jmp
clc
out
mov
cmp
inc
jne
mov
insb
pop
cmpsl
adc
outsb
jbe
cld
out
mov
adc
sub
js
and
jnp
insb
in
xchg
jae
cmpsl
stos
insw
cmp
jmp
fld1
pop
inc
jecxz
hlt
push
xchg
mov
sbb
in
and
adcl
arpl
rorl
add
push
cmc
fimull
or
cmpsb
aam
add
neg
js
sbb
sbb
push
cmp
and
lret
sub
or
push
sti
sahf
push
rcrb
cmp
cmp
and
jmp
sar
outsl
lods
cwtl
lods
sbb
sub
xchg
ret
jnp
rolb
scas
call
inc
lret
xchg
sbb
lea
insl
outsb
bswap
xchg
popaw
push
shll
jl
cwtl
mov
test
and
shll
inc
cs
fnstenv
pop
mov
popa
mov
adc
in
mov
jb
lock
insb
or
nop
loope
adc
cwtl
mov
xchg
jg
jno
adc
push
insl
and
js
cmp
insb
and
lds
ja
and
mov
pop
mov
or
pop
sbb
adc
and
icebp
rol
in
xor
gs
lea
in
dec
es
lods
pushf
sti
inc
fs
bound
or
rclb
sbb
xchg
outsl
add
inc
push
xchg
cmpsl
pop
mov
cmp
xor
outsl
fst
inc
psubsb
leave
xchg
test
xor
imulb
movsb
add
mov
jo
push
aad
mov
inc
fs
mov
sbb
inc
or
xchg
or
fdiv
jg
aam
mov
sbb
jmp
js
ljmp
xor
xchg
outsl
mov
or
mov
sbb
adc
dec
fwait
data16
std
test
cli
xchg
and
add
xchg
cmp
out
jmp
mov
adc
mov
pop
or
mov
xchg
add
test
test
out
in
ds
fs
adc
ss
dec
insl
outsb
in
pusha
loope
jns
push
xlat
dec
test
lds
ds
adc
dec
popa
push
popl
adc
bnd
mov
jnp
cmpsb
mov
aas
mov
je
add
fcompl
fwait
cmp
inc
das
orb
sahf
push
xor
lea
stos
mov
add
jmp
lret
jp
sbb
mov
xor
loope
inc
test
gs
cmp
cmpsl
sub
iret
cmpl
retw
inc
je
xchg
dec
cmp
insb
mov
inc
nop
std
mov
and
push
add
popa
out
pushf
inc
sbbl
push
add
lea
ja
fwait
and
shrl
cmpl
lret
fidivrl
jno
out
mov
xchg
bound
add
dec
adc
test
lret
imul
mov
scas
cmp
mov
dec
movsb
and
pop
pop
cld
push
jns
daa
sti
jge
loopne
push
outsb
out
adc
jnp
into
push
pop
repnz
add
push
mov
add
mov
addr16
lret
mov
mov
das
adcb
jns
mov
and
cmc
lahf
add
push
ds
imul
clc
loopne
ss
cmc
jmp
or
ret
ret
dec
xchg
dec
adc
pop
fildll
or
fsub
pop
fwait
mov
mov
call
and
daa
shll
cld
inc
mov
stos
and
or
jp
pop
pop
adc
jns
aaa
and
adc
mov
mov
or
xor
pop
cld
fldl
enter
jo
rorb
adc
xor
int
lea
or
rclb
mov
cwtl
or
jge
aas
fidivrl
stos
pop
jnp
je
mov
cltd
enter
adc
fldl2e
in
pushf
stos
sbb
and
cmc
aas
mov
mov
ds
rclb
add
das
jp
dec
push
add
je
cli
push
sarl
and
mov
cmpsb
pop
push
out
jle
sti
mov
es
in
es
push
test
inc
lds
mov
mov
sbb
or
sarl
xchg
dec
add
and
adc
ret
dec
mov
insb
sbb
enter
popa
mov
cmp
xlat
mov
jle
test
test
aas
mov
jp
inc
cmp
and
stos
adc
sub
sbb
push
push
scas
rorb
loope
jg
nop
in
fcoml
mov
cli
enter
mov
mov
ds
xchg
fistps
shlb
stc
sti
sbb
inc
call
xchg
or
or
mov
xchg
decb
in
out
sub
imul
mov
lock
adc
std
dec
enter
pushl
jbe
es
std
push
inc
mov
cld
and
xchg
mov
mov
inc
add
lods
dec
loope
outsb
stc
testb
enter
test
scas
lds
sub
jp
scas
ret
imul
insl
test
es
jno
cs
xchg
xchg
loope
rclb
in
xchg
sbb
push
mov
adc
out
aad
lcall
mov
stos
jecxz
cmpsb
cs
fldcw
inc
in
loop
dec
lcall
stos
dec
inc
and
and
pop
xor
mov
xor
mov
adc
test
cs
movsl
and
jecxz
pop
mov
dec
dec
inc
sub
add
pop
dec
push
out
and
repz
into
daa
lds
sub
ja
and
dec
in
test
jl
mov
push
xchg
iret
mov
adc
out
jne
pop
out
jae
stc
insb
add
mov
sub
test
in
insb
jg
pusha
mov
ja
iret
insb
jecxz
mov
imul
insb
das
push
lea
nop
mov
mov
sub
es
mov
aaa
pop
fmuls
cmp
in
fcoms
lret
lds
int3
mov
cmp
mov
sbbb
dec
inc
adc
mov
outsb
repnz
icebp
jae
add
cltd
jge
sub
sbb
test
jecxz
and
jbe
and
jle
aad
scas
cwtl
sub
pop
jle
add
ret
sbb
inc
and
bound
sub
std
fldt
and
inc
xchg
pop
add
test
xchg
bound
rorl
outsb
push
cmpsl
les
inc
loop
mov
and
cld
mov
and
mov
pop
call
popa
inc
shll
mov
mov
mov
fwait
lods
cld
pop
fs
push
xchg
and
loop
movl
mov
push
aas
cmp
jge
xor
xor
mov
movb
in
leave
and
rorb
sub
les
cmc
rcrb
inc
mov
outsb
jne
pop
aaa
push
movsl
sub
iret
je
je
and
movsb
and
test
fldl
mov
add
ss
das
pop
jns
cmpsl
outsl
sbb
btc
sub
cmp
lods
inc
sbb
mov
dec
int
jg
sahf
emms
mov
ret
or
cld
loope
mov
icebp
sub
xor
sub
sub
jne
push
inc
mov
add
push
pop
pop
inc
js
or
pop
int3
xchg
les
jo
push
push
into
aad
ret
clc
xor
dec
push
int
pop
xor
pushl
shlb
arpl
jg
mov
ret
mov
xor
jle
mov
push
fwait
sbb
push
insl
cmp
and
add
mov
pop
fidivl
cmp
out
es
jp
xor
xchg
push
lods
xchg
test
sahf
js
cmpsl
or
push
push
push
shll
jne
cmc
pop
imul
je
or
mov
sbb
clc
rcll
shlb
fistps
ret
repnz
push
ja
imul
inc
pushf
insl
mov
cmp
clc
stc
cmp
lods
pop
add
push
repz
stos
mov
int3
and
jno
fisubrl
sbb
cmp
scas
popa
std
shl
js
jo
xor
mov
push
idivl
mov
xchg
mov
dec
mov
push
mull
xlat
push
divb
cmp
lods
loope
dec
insb
xchg
outsl
cli
sub
adc
pop
jecxz
push
aad
pop
les
dec
adc
xchg
sub
pop
inc
fdivs
das
cmp
lds
push
gs
dec
repnz
jne
ds
loope
repnz
xchg
loopne
in
push
pop
cmc
cmp
add
js
shrl
mov
mov
mov
fadd
inc
mov
mov
inc
sbb
leave
sbb
fnsave
push
dec
or
add
cvtpi2ps
into
ss
push
ljmp
or
mov
fldcw
inc
test
rol
outsb
dec
xchg
cmc
fwait
mov
inc
and
and
push
mov
xor
fisttpll
xor
lea
pop
cltd
xor
and
push
test
rcrl
pop
loopne
mov
bound
mov
nop
mov
jp
cmpsb
adc
pop
lret
arpl
loope
fsubs
fstps
or
fsubl
xchg
xchg
inc
pop
jno
pop
in
xchg
pop
mov
push
pusha
dec
xlat
test
add
xor
cwtl
into
dec
data16
pop
xor
hlt
outsb
je
enter
inc
add
mov
mov
or
hlt
pop
stos
inc
mov
jb
hlt
movsb
mov
aam
fisubl
fst
cld
cltd
adc
push
lret
inc
xchg
cmpsl
jge
arpl
xchg
shlb
dec
stos
push
mov
mov
test
xchg
adc
sub
sti
mov
cs
add
mov
mov
jno
xor
pop
arpl
clc
pop
cld
jno
dec
stos
push
inc
sub
stos
push
mov
fstpl
push
test
inc
adc
sbbl
sub
cli
cli
jle
add
mov
push
iret
push
pop
shlb
int
push
mov
adc
xchg
fildll
int3
loopne
jl
insb
decb
cmpxchg
mov
or
xchg
and
and
sub
shll
pusha
push
and
pop
dec
mov
cmp
test
shl
sub
out
mov
fbld
xchg
ret
sbb
adc
xchg
mov
mov
fdivp
mov
hlt
xchg
mov
daa
push
out
je
cwtl
cmpsl
mov
sbb
dec
jecxz
pusha
jmp
cmc
call
aas
xchg
sti
mov
test
xchg
daa
out
sbb
cld
jne
int
and
inc
jge
fsubrs
push
cmp
sub
insl
fnstsw
int3
inc
or
mov
mov
gs
mov
dec
sti
mov
dec
in
ja
repnz
lret
sub
insb
cld
in
xlat
sub
sub
pcmpgtw
lahf
dec
push
add
in
push
xor
leave
popf
sub
pop
ffree
push
subl
shll
jnp
xor
shr
fisttpll
push
add
and
push
dec
ror
pop
jl
xlat
dec
pop
mov
adc
cmp
xor
jecxz
jmp
add
movsl
shl
and
jns
sahf
imul
xchg
fmul
ret
das
mov
or
dec
push
pop
adc
or
call
clc
xchg
fcoms
sahf
sarb
sbb
test
int
dec
test
pop
jl
cmp
or
pop
iret
sbb
adc
das
push
lcall
pop
imul
sbb
xchg
adc
stos
ret
cmp
decb
ret
gs
cltd
int
jl
insl
or
test
rorl
outsl
lds
jbe
div
mov
aam
jno
sub
jns
add
inc
jns
adc
loope
lods
lret
xlat
xchg
xor
mov
add
xor
repz
adc
jno
cmp
imul
ja
add
loopne
arpl
add
ss
add
outsl
mov
out
cmpb
shl
pop
int3
sub
add
push
mov
cltd
mov
je
xor
out
lret
push
lahf
stc
inc
jno
je
xor
dec
int
imul
adc
inc
pop
mov
push
sub
in
sub
in
ljmp
enter
mov
inc
mov
stos
sarl
movsb
loopne
addb
sar
lret
stos
sub
ss
sarl
ficomps
das
mov
mov
or
stos
jmp
lcall
push
repnz
push
lcall
dec
int
std
dec
rcll
cmp
dec
dec
jb
mul
lock
out
test
push
adcl
jge
jno
rep
mov
andb
pop
mov
mov
orps
dec
jno
mov
es
mov
xchg
shlb
mov
push
jne
shrl
mov
inc
cmpb
dec
scas
mov
ret
push
sbb
mov
mov
xlat
mov
clc
lahf
mov
iret
mov
mov
ficompl
addr16
add
pop
test
jg
xlat
cmp
dec
jnp
lcall
test
out
aam
out
shl
add
cli
dec
pop
jb
xchg
fcmovbe
dec
imul
sub
and
das
dec
sti
aas
push
outsb
mov
call
mov
xlat
lea
in
and
cmpsb
gs
xor
jns
dec
mov
jb
xor
aad
pop
cli
nop
sbb
insb
rcrb
adc
inc
dec
or
sub
cltd
scas
call
dec
inc
test
ds
mov
cld
lahf
pop
pop
jg
jmp
pop
clc
xchg
fdivr
in
inc
xchg
xor
xor
nop
adc
out
sarb
push
adc
jg
mov
ret
mov
dec
mov
push
ret
mov
mov
sahf
pop
lea
mov
push
sub
bt
stos
gs
repnz
shrl
push
mov
iret
cwtl
mov
fs
insl
inc
rorl
inc
sbb
outsb
mov
jle
mov
mov
jmp
and
lret
repnz
sbb
xor
ljmp
sub
clc
test
cs
push
das
jecxz
add
mov
fidivs
sti
and
add
fimuls
jae
sub
cwtl
mov
das
pop
in
xchg
andb
mov
and
test
jae
push
mov
inc
xor
sbb
and
movsl
pop
jb
outsb
shlb
xchg
mov
xorb
cwtl
imulb
push
or
daa
sub
inc
xchg
sarl
jbe,pt
addr16
jo
mov
cmp
mov
ret
dec
insb
daa
cmp
mov
or
cltd
incl
clc
cmc
jecxz
in
and
iret
mov
inc
ret
or
sbb
and
int
mov
je
stc
push
add
ss
cmp
inc
mov
repnz
fiaddl
popf
jp
pop
add
aas
or
shld
and
addr16
popa
sub
or
lret
push
enter
add
into
mov
dec
out
push
movl
clc
cmp
js
inc
jno
mov
mov
repnz
insl
cld
fstp
jp
push
aaa
push
jecxz
xchg
std
dec
add
popa
leave
sub
mov
sub
jb
scas
cmc
adc
in
jp
scas
int
aaa
aam
stc
pop
cmp
out
enter
xchg
mov
scas
add
mov
mov
add
and
jns
loopne
mov
js
into
inc
push
mov
stos
fimull
add
ss
jae
dec
out
shll
jb
pop
jge
mov
mov
sarw
adc
and
dec
mov
repz
jmp
in
in
dec
or
jecxz
jmp
loope
stos
push
ret
xchg
mov
loop
and
or
es
cmp
cld
xchg
or
adc
push
jb
dec
pusha
xor
mov
je
movsb
in
mov
pop
aad
into
adc
add
mov
xor
adc
pop
inc
fs
out
xlat
mov
xchg
and
int
jb
cli
and
dec
fmull
lods
mov
mov
jb
pop
testb
push
lock
sub
inc
icebp
inc
mov
sub
je
je
pop
sub
test
adc
jmp
stos
adc
repnz
jae
jge
xchg
pop
cwtl
ret
outsl
shrb
add
aad
or
dec
cltd
inc
shll
adc
pop
testb
inc
push
aaa
xchg
add
outsl
xchg
addb
in
mov
push
iret
lahf
mov
xchg
mov
push
movsl
pop
pop
sub
push
cmp
cs
jbe
mov
test
push
adc
jo
push
adc
mov
ljmp
sub
nop
cmp
repz
je
dec
fstpl
mov
push
cmp
or
out
push
lea
arpl
pop
aam
ljmp
lds
pop
fstps
inc
loop
inc
adc
and
sarb
subb
add
hlt
jp
pusha
mov
out
sub
fdivrl
inc
repnz
lea
adc
mov
dec
mov
sbb
stos
xor
dec
xor
sub
sbb
sti
insl
fisttps
cli
sbb
sarb
cltd
insb
mov
add
aad
jb
aam
jecxz
or
cmpsl
out
arpl
aam
jle
sub
push
pop
pop
adc
mov
dec
ja
into
stc
pop
jecxz
vmovlps
and
push
xor
rol
rorl
cmp
jns
dec
fsubs
popa
stos
sbb
xchg
fisubs
cmc
inc
in
xchg
add
mov
push
and
xchg
aas
leave
add
mov
cmc
and
call
add
jns
cmpsl
pop
out
push
std
push
sbb
add
adc
jne
adc
inc
aas
js
xor
jns
mov
outsl
fsubs
loopne
mov
arpl
lret
mov
cmp
dec
fimull
movsl
push
mov
call
jmp
ja
add
jne
and
xor
cmpsl
cmp
mov
xor
xchg
mov
js
fdivrs
fstpl
out
lods
lret
pop
jo
mov
mov
xor
add
scas
mov
push
push
sbb
cmp
mov
bound
cwtl
int3
mov
imulb
sub
cli
movsl
or
push
or
cmp
mov
mov
mov
push
pushf
movl
jnp
dec
sub
xchg
in
xchg
pop
sbb
out
aaa
pushf
ficomps
shrb
in
add
gs
sbb
imul
addr16
jl
pop
or
pushl
lods
sbb
test
fsubr
adc
movsb
xchg
mov
add
dec
or
scas
divl
cmc
jne
push
mov
stos
shl
jge
and
lcall
lea
adc
sub
jle
push
push
dec
pop
mov
xchg
jecxz
pop
mov
cld
jb
jb
adc
mov
dec
xor
jl
pop
push
jno
xor
push
mov
in
ljmp
loopne
or
stc
rorb
sub
jmp
sahf
test
pop
jb
fidivs
mov
pop
xchg
mov
add
addr16
mov
mov
lock
sbb
push
mov
adc
repnz
adc
sub
cmp
sub
jbe
sub
jl
pop
ficoml
lods
in
mov
add
aad
cmp
adc
incb
popf
ja
mov
mov
pop
ret
sbb
test
sarl
sbb
pop
push
fwait
push
mov
clc
lods
movsl
pop
shll
into
mov
leave
jno
enter
sbb
outsl
pop
adc
insl
fiadds
push
and
mov
mov
xchg
repnz
es
popa
mov
lahf
ja
in
xor
rolb
add
out
je
test
dec
dec
cmp
sti
mov
mov
shl
mov
dec
lods
ret
in
icebp
jo
xlat
out
xchg
out
jg
push
dec
int
pop
loopne
fisttpl
fmull
cmpsb
repz
enter
dec
sbb
cmpsl
imul
cmp
scas
enter
pop
insl
in
mov
cld
jmp
daa
sub
sub
pavgb
or
sti
and
mov
mov
je
cmc
repnz
lret
stos
push
mov
jmp
push
dec
out
mov
mov
iret
inc
aam
dec
outsb
adc
push
sub
xor
pop
hlt
mov
out
sub
dec
aad
sbb
xchg
xor
or
pushl
mov
jne
mov
inc
jge
push
mov
cli
mov
rcrl
lcall
mov
cmp
inc
repnz
mov
fnstsw
out
xchg
movsb
divl
xlat
dec
insb
dec
dec
shll
andl
jb
clc
jno,pn
jae
push
adc
mov
xor
mov
push
cltd
scas
inc
mov
and
mov
sbb
shl
add
add
or
insl
mov
sbbb
add
cmp
sub
xchg
cmpl
insb
andl
sbb
mov
mov
cmp
jmp
dec
out
out
inc
xchg
imul
stos
insl
xor
adc
daa
fisttpl
fucomip
add
scas
pusha
jecxz
les
jecxz
xchg
ja
cwtl
add
sbb
xchg
mov
out
mov
movsl
or
mov
in
sbb
or
repnz
mov
cmp
jecxz,pn
dec
mov
push
insb
sub
fsubs
gs
insb
lret
push
in
xor
push
stos
ret
jle
push
mov
cmp
or
fwait
popf
arpl
dec
imul
cmpl
mov
ficoml
test
lods
push
fwait
push
cwtl
and
notl
in
outsl
jns
stos
inc
jnp
mov
aaa
cs
xchg
or
xor
or
shld
mov
outsb
push
xor
mov
mov
mov
pop
call
jle
in
rcrl
mov
cmp
ljmp
fbld
push
out
aad
push
mov
int3
mov
jbe
mov
loopne
pop
js
xor
mov
mov
sbb
pop
xlat
pop
mov
in
loopne
mov
xor
in
scas
dec
js
mov
lcall
jbe
or
hlt
mov
hlt
xchg
jns
or
pop
xchg
cmpsb
sti
push
adc
repz
push
cmp
aas
rclb
punpckhwd
adc
push
enter
data16
test
pushf
mov
je
cmpsl
or
jne
sub
mov
or
jle
daa
jno
ja
push
bound
divb
xlat
frstor
push
cmp
fdivs
jecxz
pop
test
mov
mov
pop
iret
pusha
ljmp
repnz
mov
mov
leave
insb
xor
fbld
push
jnp
in
xchg
rcll
into
popa
jp
xorl
push
mov
push
cmpsb
inc
movsb
or
jb
xchg
test
test
jmp
stos
out
inc
push
movsl
adc
sub
add
les
cmp
lret
notb
sub
sub
scas
data16
lods
lods
pop
jecxz
popa
adc
push
sahf
loopne
mov
ret
rcr
mov
add
and
sbb
jbe
dec
lret
mov
in
inc
pop
ret
xchg
adc
xchg
rcl
xchg
iret
jbe
mov
lahf
mov
push
mov
lock
xor
sub
pop
clc
iret
js
jno
jnp
push
mov
add
mov
adc
fstpt
sub
push
xchg
leave
stc
daa
pop
mov
jge
addr16
addb
add
cmp
pop
push
xchg
pop
ljmp
dec
imul
loopne
popf
scas
arpl
mov
mov
mov
jp
mov
jmp
cmp
inc
ret
xlat
jp
ret
shll
roll
scas
pop
push
or
mov
std
in
lahf
mov
cmp
sbb
lea
nop
movsb
fcomps
movsb
dec
jmp
stos
mov
push
jno
popa
out
push
hlt
sbb
pop
sub
in
ficoms
js
and
loop
push
push
mov
mov
ret
mov
adc
adc
repnz
mov
mull
adcb
pop
mov
push
das
and
adc
je
inc
jo
jmp
or
js
loop
cmp
enter
xor
data16
jle
mov
pop
inc
loopne
repz
lods
flds
rorl
out
mov
ret
lds
testb
sbb
xchg
sbb
ljmp
cmc
mov
out
pop
jl
push
inc
fwait
fwait
add
stos
mov
mov
push
ret
and
cs
int3
xor
cld
test
test
sbb
jne
fsts
rolb
push
lahf
cs
and
jnp
cld
jae
mov
or
dec
or
xchg
arpl
or
orb
mov
mov
adcl
repz
jb
lock
xchg
stos
fdivl
push
cmc
stc
xor
fldl
xchg
cmp
mov
addr16
xchg
jbe
iret
rcrb
cli
or
nop
mov
and
aaa
mov
jge
and
xor
rep
lods
sbb
dec
jo
sbb
scas
xor
cwtl
in
shlb
inc
pushw
or
or
lods
sbb
test
xchg
cmp
add
shll
in
or
repnz
mov
sti
mov
das
rcll
xchg
jmp
jb
xor
fiaddl
sbb
dec
mov
sbb
mov
push
dec
pop
mov
mov
out
sub
repz
pushf
loope
jbe
mov
sub
adc
orl
push
push
sub
ret
xchg
sbb
xchg
pop
shll
sub
imul
push
pushf
xor
out
sbb
jg
cmp
imul
inc
jno
push
mov
sti
sbb
jg
insl
mov
idivl
or
hlt
xor
dec
or
int3
add
testl
inc
sub
cmp
mov
adc
roll
ja
mov
stos
mov
in
xor
mov
mov
jbe
out
or
push
daa
pusha
movl
mov
fstpt
xor
jecxz
pusha
xor
repz
into
sub
jae
mov
mov
jle
inc
adc
or
repnz
ds
add
in
add
sub
jle
shll
and
insb
lret
sub
das
outsl
popf
mov
inc
movsl
subl
inc
les
xchg
jp
mov
cmp
and
cmp
movl
repz
xrelease
and
sub
push
xchg
dec
mov
sub
int
add
insl
call
lock
fucomi
mov
push
mov
loopne
pop
push
jo
add
and
mov
inc
repz
push
jns
test
jnp
scas
ljmp
and
jle
inc
js
fwait
mov
fbstp
pop
adc
and
clc
pop
jno
xor
jo
sbb
inc
or
ss
adc
inc
mov
cld
divb
and
fmul
pop
jbe
call
mulb
lret
addl
mov
mov
or
xchg
xlat
jp
sub
sub
push
shl
push
dec
push
and
pop
decl
xor
es
pop
dec
adc
out
xor
jl
je
cmp
mov
lcall
adc
cltd
jb
loop
push
int3
pushf
sti
test
enter
and
pop
cmp
scas
cs
mov
sbb
lds
jne
mov
test
push
sahf
sub
push
dec
loopne
pop
data16
and
cltd
inc
dec
jg
rol
imul
push
and
aam
lcall
mov
lods
sahf
lret
cmp
shr
jp
sti
hlt
out
pop
xchg
push
in
pop
shll
jmp
dec
pushf
leave
mov
ficoml
dec
mov
loope
aam
int
xchg
xor
sbb
out
lds
dec
jmp
fwait
adc
daa
adc
dec
iret
shl
mov
xchg
loop
xchg
clc
sub
outsb
xor
popf
cltd
mov
test
mov
pop
es
sub
stos
sbb
ret
cmp
ljmp
mov
icebp
inc
add
pop
scas
or
inc
cmpsb
lret
cwtl
test
divb
rcll
je
and
xlat
cmp
mov
sub
mov
addl
dec
or
cmc
sbb
dec
xchg
push
lea
lret
dec
lret
dec
push
xchg
arpl
mov
ret
or
test
inc
int
cld
arpl
test
jecxz
mov
add
mov
or
icebp
push
jg
sbb
test
adc
lds
xor
add
test
cmp
inc
testl
ss
cmc
lods
loop
mov
lret
push
test
sub
lret
outsb
push
jle
xchg
jl
mov
add
push
bound
inc
and
lret
adc
mov
or
clc
mov
fs
dec
mov
clc
xor
sbb
jp
enter
jo
push
mov
subl
inc
pop
push
les
push
or
enter
std
mov
xchg
mov
pop
pop
mov
mov
cmp
shll
cmp
jmp
cmpsl
jmp
sbb
push
testl
or
imul
cmp
pop
cli
sub
mov
mov
lret
imul
xor
mov
or
add
shll
inc
push
jmp
dec
jge
ja
sbb
andl
jmp
je
out
mov
push
jbe
daa
sub
shr
outsl
jbe
stc
outsb
add
jmp
pusha
push
dec
lcall
adc
add
and
addr16
pop
inc
fsubrl
ja
sti
push
sbb
and
subl
rcr
mov
push
pop
push
rcrb
shrb
cmc
jae
cmp
cmp
pop
imul
xor
xor
jns
pop
popa
fsts
mov
aad
bound
adc
cmp
fidivrl
sarb
lock
and
add
pushf
dec
mov
mov
pop
mov
shll
std
in
pop
push
push
sbb
sub
rorb
int3
pop
mov
sbb
jns
imul
inc
daa
fs
fists
cpuid
lds
in
lods
ds
mov
pop
lret
cmp
adc
out
sbb
xor
mov
cmpsl
pushf
sub
inc
sub
xor
fwait
sub
popf
imul
push
or
push
jae
flds
pop
adc
push
scas
mov
adc
hlt
cmpsb
add
out
data16
lea
and
cmc
cs
sub
stc
outsl
pushf
clc
or
aas
mov
jle
dec
mov
imul
sbb
jb
mov
or
jg
cmp
mov
xor
mov
sbb
push
and
mov
pop
gs
pop
outsb
push
jbe
cltd
mov
stos
and
icebp
cmp
adc
mov
out
sub
add
sub
in
cs
inc
cli
cld
or
cmpsl
cmpsb
jae
dec
pop
mov
cli
fists
push
dec
jne
xchg
dec
xchg
js
push
clc
shrl
mov
mov
push
push
mov
pop
sbb
or
cli
mov
sub
test
cmp
mov
flds
mov
imul
push
and
les
test
or
lods
test
shrl
push
pushf
leave
lds
mov
xchg
idivb
data16
shlb
push
push
cmp
pusha
add
test
imul
xchg
pushf
and
or
pop
lods
int3
sti
fstp
fpatan
jne
jl
shll
push
shrb
repz
and
mov
push
scas
push
dec
data16
iret
loop
sub
test
mov
das
cli
pop
push
test
jp
aam
mov
and
out
aaa
test
faddl
jecxz
pop
dec
fninit
pushf
incl
dec
jbe
pop
jmp
outsb
xor
enter
inc
sub
and
sub
daa
push
dec
mov
xchg
cmp
int3
mov
push
stos
fstps
fstps
leave
sbb
push
popa
lcall
mov
lock
push
jb
cmp
test
sub
and
cmc
push
lock
sub
pop
ss
lret
add
sbb
inc
cwtl
and
fsub
inc
lds
dec
pushf
test
inc
dec
cmp
jno
mov
xchg
inc
pop
jbe
jecxz
daa
mov
xchg
sbb
pop
xchg
mov
or
roll
ss
lods
sub
bnd
or
pop
jne
aad
dec
adc
and
movsl
fisttpl
push
sbb
lret
sub
mov
adc
mov
fldcw
insb
outsb
sbb
shll
cmc
aaa
scas
cmp
movsb
xchg
sarb
or
push
adc
scas
sub
xor
int3
data16
sub
stos
das
and
or
out
sbb
andb
das
xor
mov
stos
loop
mov
cmp
dec
xchg
repz
lret
add
mov
es
ror
clc
sbb
orb
add
or
icebp
sbb
mov
out
test
xchg
mov
outsb
and
loop
push
cltd
or
stos
push
mov
lret
bound
mov
mov
in
and
cltd
cmp
in
dec
dec
fcoms
cmpl
adc
jge
lods
push
mov
cmp
mov
add
cli
gs
pop
jbe
test
dec
or
inc
stc
adc
mov
mov
jmp
sbb
mov
es
jae
sub
lcall
mov
sbb
push
mov
add
mov
xor
inc
and
mov
pop
in
jno
inc
imul
dec
hlt
in
mov
adc
mov
push
mov
cmp
enter
out
popf
stos
aam
data16
push
inc
push
pop
outsb
xor
jle
mov
push
push
ja
sub
lahf
pop
jg
nop
ja
push
mov
sub
sti
in
lret
mov
and
out
loope
ss
push
pop
je
xchg
stc
ja
bound
or
and
and
or
inc
adc
and
inc
jg
pusha
lock
fwait
sbb
mov
andb
cmp
dec
xor
push
fistl
test
xchg
xchg
dec
xor
call
insl
leave
cltd
add
mov
repz
mov
sahf
adc
fisttpl
sub
lret
pop
shll
ret
imulb
out
popa
cmpb
sbb
dec
stos
dec
movsb
xor
addr16
pop
in
pop
mov
pop
push
jo
mov
in
lahf
aaa
inc
repnz
cmp
mov
cmp
mov
jmp
add
fldt
dec
ret
iret
push
ficoml
push
and
les
add
mov
mov
out
mov
cld
or
dec
shl
cmp
les
dec
andl
xor
push
outsl
call
popa
ss
arpl
push
pushf
lock
int
imul
cmpsb
insb
adc
sahf
shrb
sub
leave
outsb
mov
das
int3
push
mov
mov
jbe
lahf
mov
xchg
cmpsl
sub
imul
sti
cwtl
fistl
pop
cmc
in
lds
test
or
dec
jnp
xor
lcall
rclb
cmp
ds
out
mov
mov
dec
pop
mov
and
sub
cltd
gs
insb
sub
scas
jo
ror
adc
idivb
jno
cld
dec
jb
addr16
lea
inc
fnsetpm(287
sbb
enter
push
int
lret
jb
scas
mov
xchg
jmp
repnz
pop
loopne
out
movsl
lret
pop
push
and
jns
shrl
dec
fcmovnb
daa
jb
hlt
repz
adc
orl
mov
sub
adc
sbb
push
fiadds
jp
mov
mov
adc
add
push
stos
ror
frstor
cwtl
lock
jmp
sbb
lods
jb
outsb
pop
xor
inc
test
addr16
scas
jb
fdivrs
loop
or
roll
dec
cs
mov
lods
xchg
jb
pop
call
jnp
mov
std
sub
sub
outsb
jns
mov
xor
sbb
fidivs
arpl
dec
xchg
xchg
repnz
mov
push
jno
inc
scas
xlat
inc
ja
xor
or
cmp
fdivr
fwait
add
leave
adc
push
lret
mov
jle
or
push
fs
shl
lods
lret
sbb
dec
addr16
add
roll
mov
or
into
adc
xlat
pop
out
sub
mov
inc
cmp
pop
outsl
or
inc
leave
popa
pop
pop
dec
mov
or
int3
lret
je
inc
lcall
les
scas
mov
xchg
xchg
stos
cltd
mov
mov
imul
pop
das
xor
inc
push
cmp
hlt
pushf
sbb
dec
ret
hlt
sub
lahf
sbb
in
lea
jb
lods
push
xor
xchg
pushw
mov
mov
mov
div
adc
call
orb
push
sub
jg
je
sbb
jl
dec
sub
push
cld
fnstenv
js
pop
jbe
pop
cmc
push
rorb
sbb
dec
and
addr16
je
sti
cmp
xchg
xchg
iret
dec
xor
sub
cmp
leave
pop
arpl
add
fimull
fcoms
lea
add
sbb
dec
addl
ds
out
dec
outsb
adc
rol
cmp
je
rorb
push
xchg
packssdw
stos
push
gs
or
pop
jno
aad
out
stos
xchg
lds
pop
cmp
shll
dec
sbb
loope
mov
rcll
subl
push
pop
inc
imul
daa
pop
mov
xor
movl
sahf
outsl
decb
hlt
mov
or
lds
test
lcall
or
dec
and
cvtps2pi
add
subl
fs
xchg
int
sbb
or
enter
pop
testl
out
lds
rcr
sub
cmp
addr16
and
mov
test
repnz
xor
pop
fmull
and
fcoms
mov
jmp
scas
ret
rcrl
in
jecxz
int3
adc
xor
mov
outsb
jb
ljmp
loope
cmpsb
cmc
jnp
mov
mov
int
xchg
pop
push
mov
mov
insb
xor
or
dec
mov
adc
jp
ret
jmp
jne
dec
inc
cmc
mov
sub
sbb
jge
mov
in
jle
xchg
push
cltd
in
mov
jg
shrb
xor
add
or
adc
cld
fildll
movb
inc
sub
pop
or
xor
add
iret
lcall
subl
cmp
ret
jno
leave
jns
lcall
dec
and
ljmp
xchg
stc
iret
int
inc
fldcw
pop
arpl
aaa
fwait
inc
fwait
pop
subl
icebp
out
fsts
mov
in
fmul
add
test
jl
push
call
mov
mov
push
into
mov
ss
or
dec
xor
adc
and
cltd
mov
insl
cmpsb
cltd
mov
scas
call
adc
mov
sub
movsl
movsl
loopne
movsb
inc
neg
movsb
std
push
jl
mov
in
add
ror
sbb
std
js
insl
cmpsl
add
daa
jg
les
pop
daa
sbb
ljmp
mov
add
icebp
stos
int
nop
sbb
xchg
cmpsb
push
add
jb
pop
mov
inc
aas
repz
cld
arpl
inc
add
sbb
in
aad
shrl
movsb
les
hlt
outsb
or
outsl
movsl
fadds
into
xchg
mov
mov
pop
and
push
add
or
in
in
dec
cmp
dec
outsl
in
and
mov
sbb
psadbw
pop
or
xor
es
jb
fwait
movsb
sbb
cmp
jnp
adc
jge
pop
and
test
mov
or
and
xor
js
and
mov
ja
pop
pop
and
outsl
lahf
ja
and
jmp
mov
pop
stos
cs
aad
fisttpl
test
jle
xor
mov
test
mov
mov
sub
add
pslld
lods
xchg
xchg
jne
mov
imul
and
lret
inc
addr16
test
pop
mov
out
push
sahf
and
orb
jmp
mov
xchg
mov
insb
xchg
scas
out
add
xchg
mov
and
out
in
mov
lcall
jnp
mov
jns
sub
movsl
xor
lods
push
adc
dec
sbb
loopne
lods
mov
xor
mov
aam
icebp
and
pop
mov
sti
xor
outsl
adc
jb
jmp
pop
xchg
push
xchg
cld
pop
add
sahf
jg
mov
stos
push
into
loope
out
xchg
repnz
mov
inc
or
andb
adc
mov
xchg
dec
daa
data16
or
sub
lods
or
sub
dec
pop
test
in
sahf
aaa
popf
test
sbb
mov
or
pop
mov
enter
aam
stc
inc
add
xchg
pop
jecxz
mov
js
xchg
out
mov
push
aaa
inc
cld
sub
xlat
sub
aas
push
adc
sbb
lods
repz
sbb
stos
shrb
outsb
inc
cmpsb
pop
jge
mov
rcr
scas
int
inc
mov
cmp
and
pop
push
or
scas
adc
add
jge
cmp
xchg
dec
mov
xchg
cwtl
cli
mov
sub
dec
pusha
or
ret
dec
mov
pusha
xchg
pop
dec
add
sarb
jmp
cs
ret
sub
xor
push
out
lret
push
xchg
mov
das
push
std
sbb
add
push
es
pop
fldcw
iret
sub
xlat
decl
clc
dec
stos
sarb
hlt
jno
ret
and
es
sub
loopne
aaa
fstps
arpl
mov
out
pop
imul
mov
insb
sbb
test
cmp
movsb
inc
fwait
insb
fnsave
aaa
xor
sahf
fwait
xor
add
or
imul
push
shlb
test
push
inc
dec
fstpl
std
dec
sbb
cmpl
dec
std
and
xchg
or
mov
mov
xchg
leave
cmp
push
xor
out
lock
adc
xor
and
pusha
jp
insb
dec
xor
dec
insl
mov
lret
cmp
aad
icebp
addl
loopne
lods
andl
or
sbb
aam
push
xchg
stos
or
push
pxor
shlb
ss
or
sti
xor
sbb
lock
add
mov
or
adc
repnz
test
jl
jbe
cmp
or
pop
fstpt
cmpb
cmpsl
sbb
push
add
fildl
push
cs
add
cld
js
dec
out
mov
shll
clc
mov
or
sub
imul
inc
sbb
stos
cli
inc
add
cmp
cmpb
hlt
and
pop
pop
add
int
cmp
dec
inc
mov
push
mov
xchg
push
jp
dec
stos
and
rdtsc
ss
cs
arpl
ret
iret
push
test
adc
pop
fcoms
jb
mov
add
push
mov
gs
xlat
aaa
mov
dec
out
cmp
in
clc
into
stos
pop
mov
xor
pushf
mov
mov
aas
pop
mov
out
and
std
push
pop
lock
fs
xchg
push
add
sub
mov
inc
xlat
push
adc
cld
sbb
dec
inc
iret
fistps
inc
fisubrl
xchg
pop
testl
rclb
lea
push
test
push
cwtl
mov
dec
or
sbb
pop
mov
pop
ret
mov
jge
mov
loopne
inc
jle
lea
leave
lahf
loope
in
xor
push
dec
and
mov
es
daa
pop
cmp
iret
pop
bound
fwait
cmpsb
das
stos
lcall
dec
adc
lahf
mov
stc
cltd
dec
jecxz
test
lahf
xor
movsl
sub
push
dec
cmp
enter
xor
insl
and
sub
test
fisttpl
sbb
jl
mov
jge
jae
pusha
loopne
mov
and
jnp
inc
pop
push
dec
aad
sub
jae
adc
sbb
js
out
in
popf
data16
jno
es
out
shlb
in
dec
inc
fscale
testl
push
jmp
jecxz
mov
fstpl
jbe
cltd
dec
push
lret
push
fbstp
xchg
rcr
jno
int
in
fcmovb
loopne
shr
add
jl
xchg
xor
pop
loop
lret
mov
aas
into
inc
xchg
mov
icebp
out
cmpsl
and
or
cmovno
pop
repz
mov
aam
add
mov
inc
fdivs
sbb
or
push
nop
or
mov
pop
test
push
rorl
xchg
dec
sub
inc
lods
lea
scas
or
into
fdivs
adc
mov
pop
call
cmp
pop
stc
mov
xor
repz
lahf
xchg
clc
int3
pop
cld
or
jne
xor
das
pop
cli
leave
jno
sti
inc
xor
sub
lods
mov
cmpsw
inc
andb
in
sbbl
mov
push
jge
jge
adc
sub
les
lea
cli
mov
scas
sbb
xchg
insb
fisubrs
out
sbb
andl
xchg
lahf
sbbl
ret
lods
xchg
sbb
cmp
jp
repz
xor
fsubrs
cmp
stc
sahf
outsb
aaa
aad
or
fs
sub
lds
notl
out
xchg
sbb
repz
stc
mov
xchg
lret
es
mov
hlt
aam
lcall
jnp
insl
xor
cmp
jnp
push
pop
popa
sub
cli
add
or
fisubrs
cmp
push
inc
add
or
cmc
push
jl
adc
push
and
in
xchg
mov
stos
pop
stos
sbb
and
xor
jnp
mov
bound
cltd
jne
je
cmpl
push
push
inc
aad
stos
pop
dec
faddl
xchg
cmpb
and
inc
adcl
push
push
insl
rorl
negb
cmp
aad
jmp
sti
movsl
cmp
push
ljmp
imul
mov
lahf
inc
jne
xchg
mov
es
mov
and
lods
sahf
outsb
pop
call
ret
addr16
sub
lcall
cwtl
lahf
inc
dec
jae
out
mov
neg
imul
adc
cltd
push
push
cmp
pop
rcr
sbb
fwait
cmp
dec
mov
mov
sbb
mov
mov
mov
mov
add
mov
cmpsl
jmp
movsl
faddl
cmpsb
sub
fdivs
cltd
jge
jle
pop
aas
add
pop
and
push
jmp
adc
imul
add
add
xchg
sarb
std
imul
out
movsb
mov
popa
neg
lret
pop
jo
xor
and
lret
or
mov
push
push
pop
jp
add
jno
add
xchg
pop
fwait
imul
shl
or
lea
mov
cs
mov
cwtl
and
push
call
adc
mov
movsl
mov
pop
mov
pop
mov
test
xor
xlat
addr16
push
sti
cmp
icebp
inc
cltd
xchg
iret
lods
add
sub
xchg
popf
xchg
inc
std
fcoms
mov
xor
mov
sub
mov
pushf
enter
loop
jp
adc
adc
sbb
jo
dec
cmp
push
mov
dec
add
fwait
xor
pop
sti
jnp
clc
idivl
xchg
inc
aam
mov
lods
mov
imul
test
add
inc
popa
xchg
fcoml
push
sub
dec
xor
adc
nop
xchg
mov
ds
inc
cmpsb
add
repnz
les
rcll
int3
pop
out
cld
lods
pop
rcl
mov
sbb
outsl
inc
pop
inc
gs
testl
insl
or
insb
dec
insl
push
sti
pop
mov
jns
icebp
mov
push
xchg
ret
mov
and
pop
push
inc
mov
inc
jg
pop
add
cltd
dec
es
xchg
rcrl
add
lcall
dec
jmp
fstps
push
lea
out
imul
xchg
enter
xchg
jb
data16
fsubl
cmp
mov
stos
cmp
mov
xchg
mov
adc
out
in
sub
mov
movsl
loope
nop
push
sbb
out
pop
int
xchg
and
shrl
stc
add
sbb
add
push
inc
imull
popa
insb
les
mov
outsl
sahf
pop
sbb
arpl
clc
add
iret
mov
icebp
lods
mov
fsubs
imul
aam
mov
pusha
je
xchg
cmpsl
loopne
jg
pop
jae
int
leave
jns
rcrl
cwtl
adc
nop
into
cwtl
xlat
cmpsl
rcll
popf
dec
jae
pusha
lahf
and
int3
popf
cltd
mov
test
xor
pop
stc
ds
daa
inc
lret
arpl
jne
sub
inc
out
fisubl
jbe
jbe
sub
stos
test
inc
scas
inc
arpl
aad
jg
lds
mov
cld
xor
pusha
test
cmpsl
out
mov
dec
in
iret
mov
inc
dec
push
mov
stos
ss
xchg
xchg
cmpsl
xor
or
pop
outsl
jge
ret
sbb
add
es
stc
sub
test
popf
xor
sub
jbe
add
inc
fldl
scas
daa
add
fdivrl
mov
cmp
sbb
mov
pop
test
jle
pushf
adc
push
std
pop
pop
pop
dec
mov
test
xchg
fsubrs
lret
out
inc
testl
ret
insb
push
lret
or
daa
mov
out
mov
jmp
mov
scas
sbb
gs
inc
aaa
insb
gs
dec
dec
push
xchg
imul
call
and
iret
xlat
xor
jo
mov
or
mov
push
push
pop
aad
repz
mov
or
or
jo
bound
mov
and
pop
cwtl
int
and
outsb
pop
pop
mov
sub
sbb
xor
out
jb
jae
mov
inc
ret
mov
mov
push
fisttps
or
pop
push
mov
je
cmc
xchg
jbe
sbb
iret
fnstsw
push
push
aad
call
cmp
jo
dec
movsl
and
pop
test
call
lea
xchg
fs
stos
jmp
outsl
leave
mov
add
iret
in
sub
scas
iret
lcall
and
jne
xchg
add
fidivrs
add
shll
adc
sub
bound
mov
mov
icebp
loopne
push
pop
out
ficomps
dec
je
jg
call
xchg
rcl
inc
jno
adc
add
ret
jnp
fdiv
es
mov
push
dec
and
lock
pop
push
cmpb
ret
stc
outsl
jo
repz
xchg
enter
cmpsl
iret
lea
cmp
out
mov
in
sub
cmp
dec
lcall
sbb
push
xlat
dec
sub
mov
push
ja
call
adc
xor
dec
imul
and
mov
enter
inc
add
dec
or
push
insl
push
lret
mov
mov
das
mov
call
push
sbb
cld
je
jmp
into
cmp
ret
pop
push
dec
leave
xor
dec
sbb
scas
sbb
lods
arpl
mov
hlt
dec
repz
jge
je
adc
std
xchg
lods
lcall
pop
aaa
icebp
xchg
icebp
es
push
or
popf
pop
ss
and
in
ret
sti
je
ret
loop
mov
inc
lods
sbb
ja
mov
mov
mov
sbbl
ds
jmp
daa
shlb
gs
pop
jb
loop
loope
cmp
sub
pop
inc
and
lahf
xchg
sti
fs
subl
mov
mov
or
xor
int3
mov
jmp
mov
lea
sbb
pop
xchg
mov
push
mov
add
adc
out
testb
push
and
popa
mov
cmp
jne
fildl
inc
add
xchg
mov
test
jae
add
pop
call
repnz
pop
mov
mov
xor
es
les
and
adc
mov
jae
int3
ficoms
das
add
fmul
jb
add
pop
mov
lock
les
bound
into
aaa
aaa
mov
jmp
imul
movsl
dec
mov
aaa
dec
sub
pop
cmp
or
mov
daa
in
mov
lret
cld
dec
out
rcl
inc
push
in
mov
sub
sbb
mov
fwait
mov
xor
xchg
mov
pop
aaa
jg
sub
jnp
mov
test
dec
push
insb
push
or
jmp
daa
mov
subl
add
es
mov
std
push
sahf
mov
xchg
pusha
fidivs
lods
sub
popa
rcrb
pop
cld
sbb
inc
xchg
inc
iret
xchg
mov
and
sbb
movsb
lods
lret
hlt
outsl
sbbb
aad
pop
pop
repz
cmpb
ret
xor
pop
and
sbb
les
rcrl
xor
or
mov
movsb
cli
fdivrs
nop
sub
fisubrs
mov
or
cmp
inc
js
into
call
test
sbb
xchg
imul
dec
push
xchg
aas
sub
hlt
jl
pop
das
imul
inc
sbb
mov
cmp
push
dec
add
addr16
in
add
push
movb
cmp
pop
je
mov
fisttpll
int
icebp
repnz
and
clc
aaa
sbbb
ret
jecxz
out
data16
lret
inc
lods
mov
sub
lea
adc
jp
sub
cmpsb
mov
mov
cmpsl
popa
enter
adc
push
out
out
dec
out
adc
jmp
xor
outsb
flds
gs
dec
push
inc
sbbb
lret
push
push
jp
jmp
xchg
lods
sub
inc
lcall
push
addr16
lds
popa
mov
in
testl
mov
pushf
imul
pop
lea
jecxz
imul
mov
xchg
lahf
outsb
les
jb
add
mov
das
add
repnz
int3
lods
aad
divl
sub
adc
sub
imul
xor
pop
or
lds
jg
push
or
pop
mov
imul
in
mov
cltd
icebp
pusha
es
rorl
dec
mov
repnz
fldl
jg
or
stos
mov
cmp
mov
sub
leave
fs
adc
je
mov
sarl
lods
cmpsl
imul
rorb
jg
pushl
lcall
mov
sub
adc
out
gs
push
inc
ret
ss
jo
push
ret
ficoml
divb
repnz
lcall
pop
lds
rol
cltd
jle
push
adc
repnz
fdivs
ljmp
sub
pop
enter
sbb
scas
sbb
shl
fwait
es
sahf
cmp
adc
je
idivl
push
mov
loope
in
and
gs
mov
push
and
and
jb
ret
sbb
sbb
ds
aam
cmp
les
pushf
adc
sub
stos
mov
test
add
push
mov
loopne
dec
into
movsb
jno
mov
mov
in
adc
arpl
lods
cmp
scas
push
push
jmp
and
mov
mul
std
sub
int
dec
dec
fsubl
int
outsl
adc
push
int
mov
xchg
subl
sti
or
shlb
mov
insl
sbb
test
sub
repnz
inc
ret
pushf
pop
loopne
clc
leave
jae
mov
sbb
xor
sub
iret
mov
and
cmp
push
mov
fstps
shrl
dec
shlb
cmp
sbb
or
ret
pop
mov
ljmp
test
and
fsubs
in
or
lret
add
rclb
jne
repz
cwtl
scas
dec
or
popa
pop
mov
fistpl
daa
dec
lret
sub
jns
lea
sbb
lock
sbb
lcall
jecxz
pop
or
in
jb
in
jb
or
and
push
test
add
fisttps
sbb
lds
pop
mov
dec
daa
mov
rorl
lea
push
add
cmp
ss
test
js
lcall
jl
sub
test
mov
je
add
fsubr
je
push
dec
lcall
jae
push
das
leave
mov
aad
cld
adc
mov
pop
inc
shrb
hlt
sub
push
jb
lahf
add
lea
inc
inc
or
jne
sbb
insl
jmp
adc
dec
loop
cmpb
scas
movsl
xchg
mov
jecxz
repz
cmp
or
mov
lock
cli
movsl
jp
scas
xor
repnz
ja
or
xorl
stc
push
xlat
mov
adc
mov
sub
cld
fwait
bound
repz
sbb
icebp
xor
int3
movsb
push
push
jg
data16
rcrl
lock
cmp
ss
mov
inc
sub
mov
pop
xchg
test
dec
in
sub
push
ss
js
bound
outsl
fcoms
xor
sbb
add
mov
mov
mov
or
scas
shlb
ja
insb
jo
ljmp
push
bound
adc
stc
jge
sub
out
dec
movsl
scas
jmp
adc
xchg
cmp
outsl
inc
push
jl
jle
gs
jns
fbstp
jl
cmp
aam
and
xchg
mov
hlt
std
in
mov
fists
pop
rcl
nop
arpl
ljmp
mov
aas
ficoml
sub
adc
pop
cmpsb
mov
sti
arpl
rolb
mov
aas
inc
mov
das
ljmp
mov
inc
dec
fs
movsl
orb
orps
pop
das
inc
inc
jns
adc
dec
xchg
pop
mov
cmp
inc
push
arpl
outsb
xchg
sub
adc
fwait
sbb
pushf
jo
dec
adc
or
in
movsl
lret
xchg
pop
ret
inc
fsqrt
mov
icebp
cltd
mov
add
cmp
sub
addr16
push
dec
cld
pop
cmp
jl
movsl
test
loop
hlt
scas
repz
mov
jle
int
stos
mov
inc
int3
fmul
xchg
arpl
int3
fsubs
fsubr
push
orl
es
lret
sub
stc
pop
or
cmpsb
in
int3
loope
das
and
aad
push
js
out
add
arpl
cmp
adc
pop
pop
pop
push
xorl
jp
sub
pusha
lcall
sbb
sbb
fistl
and
mov
cmp
sbb
add
inc
aad
imul
mov
add
shll
inc
dec
inc
es
dec
test
jmp
lcall
fs
push
rcl
mov
add
inc
jne
sbb
outsl
vaddsubps
sbb
inc
pop
mov
jmp
sub
inc
add
mov
and
xor
js
aaa
add
adc
stos
jl
clc
shrb
cld
xchg
les
fadds
jmp
and
xchg
cld
lods
rorl
and
add
sbbb
scas
aaa
mov
xchg
test
lcall
push
insl
push
fidivl
pop
mov
cmp
or
pop
sub
int3
mov
orb
test
pop
enter
jne
xchg
lods
movsl
cmc
aaa
sub
pop
inc
aam
sub
leave
mov
mov
sub
rcl
sbb
or
addr16
scas
mov
cmp
cmpsl
add
pop
mov
fwait
adc
push
das
add
push
notl
cmp
mov
fidivl
mov
out
mov
clc
loope
mov
push
jbe
jl
pop
push
xor
mov
jb
inc
sahf
fs
cli
popf
mov
jl
push
aad
negl
jge
xor
mov
das
rorl
push
jmp
sub
add
push
push
sbb
inc
or
lock
add
mov
aad
shlb
enter
movsb
lret
mov
loopne
lock
sub
xorl
in
inc
ja
jl
xlat
mov
xor
imul
mov
les
test
dec
jp
xchg
pop
rclb
aam
and
xlat
scas
ret
adc
lods
jge
pushw
adc
push
incb
and
adc
add
pop
jno
ret
xchg
push
lret
inc
cs
out
cmpsb
mov
and
sbbl
push
shll
std
sub
pop
mov
jns
sub
mov
dec
mov
fwait
sti
pop
stos
inc
daa
or
xchg
jbe
jno
mov
repnz
sbb
xor
dec
ja
dec
les
movsl
roll
movsb
lods
insb
lods
or
sbb
sbb
lods
or
sahf
in
cmpsl
scas
int3
jl
movsb
sub
orb
rcll
push
pop
push
and
push
dec
lahf
dec
rcrb
sarl
push
loope
jo
mov
insb
add
xchg
adc
xor
mov
out
mov
sbb
imul
push
or
sahf
or
sbb
fstl
and
fisttpll
mov
pop
cmp
xchg
test
shr
sub
mov
loope
jp
lea
inc
cmp
hlt
aad
jmp
test
or
adc
mov
xor
mov
inc
arpl
iret
mov
jg
xchg
daa
loope
pop
sub
mov
sbb
dec
xor
xorl
popf
jge
data16
scas
inc
daa
jbe
push
icebp
or
fisttps
sub
fs
pop
cmpsb
cmp
sbb
inc
push
and
ss
xor
xor
jle
push
pop
jp
imul
stc
xchg
clc
cwtl
xchg
lret
fsubl
bound
mov
xchg
mov
jmp
sub
sub
sbb
sub
orl
push
pop
jbe
dec
mov
cwtl
mov
pop
or
sub
xor
jg
insl
xor
loop
sub
lret
or
or
mov
ljmp
sti
es
pop
push
jno
sub
or
mov
lret
insb
stc
pop
aam
pop
test
lock
sbb
rclb
nop
push
lcall
shlb
std
cld
xchg
pop
fisubrl
test
out
es
in
pusha
addr16
mov
ljmp
cmp
bound
test
imull
or
cmp
inc
adc
dec
jno
xchg
sbb
jns
repz
inc
and
flds
push
pop
movntq
fs
roll
mov
out
push
out
int3
jmp
sbb
adc
adc
mov
sbb
popa
dec
bound
out
mov
aaa
dec
mov
cmp
out
cmpsl
aaa
mov
mov
fdivs
in
push
stos
jo
mov
pop
dec
scas
clc
loop
sub
cmp
lret
test
aam
or
cmp
out
data16
adc
xchg
mov
add
inc
inc
jnp
mov
lret
stos
push
jo
add
push
jo
notl
pop
daa
or
dec
xor
mov
xchg
nop
lret
mov
jae
lods
dec
ja
fwait
pop
cmp
ret
dec
mov
inc
ljmp
or
fisttpl
stos
cltd
stos
mov
and
mov
mov
imul
xor
sub
sarl
mov
mov
cmp
jb
xchg
daa
sbb
push
inc
inc
nop
push
movsb
mov
mov
inc
push
das
xchg
pop
inc
icebp
cmp
jg
rcrl
clc
imul
int3
mov
sub
jne
xor
test
les
rcrl
cmpsl
cmp
or
icebp
out
sub
js
cmp
popa
hlt
popf
js
loope
sarl
jp
adc
adc
mov
pop
jmp
jp
sub
xor
xchg
sub
jp
mov
popa
nop
sub
add
sub
fistpl
push
cmp
jne
fstps
xor
inc
movl
or
sub
inc
mov
out
or
test
lods
adc
jg
sub
pushf
addr16
ljmp
sub
add
inc
cmpsb
outsl
inc
jp
push
popa
sbb
sar
xor
dec
xor
or
jo
push
outsl
outsb
movsb
add
scas
adc
aaa
jmp
es
in
cmp
pusha
stos
push
pop
cwtl
dec
leave
cmp
mov
mov
aaa
push
fidivs
mov
lcall
movsb
pop
and
dec
into
stc
cli
mov
jae
shlb
adc
sarb
sbb
inc
addb
or
pop
ds
add
mov
mov
les
sub
push
jge
mov
push
shrb
push
or
xchg
inc
xor
sub
dec
insl
and
cmp
das
jg
das
lods
ja
adcl
cli
push
sub
sub
cmp
add
jno
fs
gs
xchg
xchg
fistpl
sbb
filds
insb
xchg
mov
rorw
std
gs
test
clc
adc
divb
cmp
push
jns
outsl
into
loop
inc
jo
test
cmpsb
xor
xchg
sub
test
inc
push
xor
mov
sbb
pop
stos
loopw
mov
pop
add
test
mov
cltd
cmp
mov
push
loope
mov
jge
imul
mov
nop
or
mov
test
fld
or
in
cmc
xor
mov
sub
sub
mov
adc
or
push
mov
or
mov
adc
stos
test
jecxz
mov
or
scas
sub
pop
xor
pusha
sub
test
dec
in
fsubp
cmpsb
mov
sub
popf
adcl
sub
sar
outsl
fcmovb
xchg
and
adc
fildl
jns
add
cmc
mov
scas
int3
or
and
push
loope
cmpsb
test
dec
xchg
sti
push
mov
cmpsb
inc
xchg
rorl
push
movsl
or
sbb
inc
adc
add
fs
les
dec
pop
pusha
or
jg
stos
or
pop
imul
jp
imul
pop
shlb
push
jae
xlat
mov
xchg
arpl
movsb
subl
loope
aaa
nop
adc
das
out
cmp
aam
mov
mov
mov
lds
push
ds
xor
test
mov
and
pop
inc
inc
cltd
sbb
ret
imul
imul
aas
add
mov
outsb
adc
dec
cmp
mov
adc
aad
or
push
xor
pop
lock
ja
sub
jb
xor
sbb
pop
jbe
push
outsl
test
cmp
dec
nop
subl
mov
push
movsl
sbb
std
les
jmp
add
hlt
and
xlat
aam
dec
and
mov
add
jns
or
pop
mov
ret
sub
jp
out
push
or
jne
shlb
popf
sbb
iret
adc
jl
jle
call
push
clc
mov
sbb
fdivrl
or
call
jno
hlt
pop
jge
and
fdivrl
ret
jae
outsb
and
stos
fsubl
aad
cmpsl
mov
jp
fimuls
push
idivl
jne
int
lods
xor
pop
jnp
enter
xchg
mov
leave
pop
movsl
sub
mov
fdivr
scas
cmp
loopne
jb
add
or
mov
push
jmp
insb
sbb
int
cmpsb
popa
jmp
enter
push
xor
clc
fsubrl
mov
jecxz
mov
jl
dec
stc
repz
bound
and
adc
movsl
jns
cld
jle
lods
repnz
pop
in
rorl
and
pop
push
imul
or
inc
icebp
jmp
dec
arpl
aaa
jae
jl
repnz
or
arpl
into
dec
out
pop
shr
xor
ja
mov
lds
jecxz
std
fstpl
int
popf
cltd
mov
mov
cltd
paddsb
push
lea
xchg
sub
and
icebp
mov
test
xor
mov
shrb
fildl
sarb
mov
xor
jp
iret
add
call
ret
es
push
loopne
dec
shl
in
cmp
arpl
mov
mov
jecxz
imul
into
enter
jbe
jo
and
in
pop
push
push
popf
pop
lods
ja
sbb
jb
cmp
push
mov
jne
dec
dec
repz
das
mov
arpl
mov
jne
xor
sub
cmp
pop
ja
lods
ds
in
xchg
rol
mov
xor
push
xchg
xchg
std
movsl
push
adc
lahf
mov
mov
outsl
sub
ds
push
fwait
das
adc
inc
dec
lcall
inc
inc
cs
cltd
jmp
and
cmpsl
cltd
and
test
mov
xor
pop
loop
jnp
arpl
imul
jae
and
xchg
ljmp
jge
xor
cmp
jbe
jp
out
mov
and
or
add
clc
sbb
iret
out
sub
mov
je
dec
es
or
mov
idivl
fbstp
add
adc
pushf
mov
cmp
lock
jmp
std
dec
and
add
dec
cmpsl
and
ja
dec
movsl
shr
adc
xor
pusha
flds
inc
scas
adc
rorb
repz
inc
push
iret
xchg
loope
push
or
and
push
xchg
pushf
imul
jo
jnp
push
cmpsb
xor
pop
xchg
xchg
xchg
aad
mov
mov
sarb
aaa
jge
outsl
sub
jge
hlt
mov
enter
push
sub
sahf
aad
stos
and
cmp
loopne
lret
jo
pop
int
int
repz
aam
jecxz
sub
inc
sub
xor
add
mov
repz
cmc
dec
fst
jp
mov
pop
stos
jecxz
push
in
jg
mov
das
nop
popa
push
ret
mov
lahf
lret
pop
xor
dec
ds
ficompl
into
rcrl
pop
lds
imul
out
mov
mov
xchg
inc
std
jo
jp
mov
cltd
pop
cwtl
or
lea
cmp
dec
adc
subb
hlt
mov
scas
or
leave
loope
cmc
mov
push
dec
rcrl
insl
dec
mov
mov
int3
jb
xchg
mov
in
aas
movsb
mov
aad
repnz
push
mov
add
xor
mov
movsl
scas
rol
aad
jo
in
in
testl
xor
add
pop
shrb
sbb
push
pop
test
inc
pop
imul
ret
cwtl
push
pusha
imulb
ret
pop
in
cmp
nop
inc
adc
mov
mov
outsb
mov
pop
loop
cmpsl
pop
aaa
stos
cmp
xchg
mov
xchg
add
jb
leave
mov
xor
or
dec
test
xchg
repz
cmp
shll
cmp
sbb
cmp
mov
pop
cmp
sbb
xchg
imul
jno
push
pop
pushf
adc
cmp
cmp
dec
ret
js
shrb
add
push
inc
lds
lods
insl
ljmp
xchg
adc
adc
push
imul
push
adc
in
mov
and
mov
cs
pop
aas
outsb
xchg
adcl
enter
in
loope
and
daa
insl
lods
or
sub
in
stc
cltd
subl
cld
sbb
or
jmp
sbbb
in
scas
xor
jle
loopne
or
shll
cmp
xor
and
cmpsb
and
imul
inc
je
sub
jmp
push
icebp
aam
inc
pop
cld
addr16
xchg
jo
lret
into
psubsw
push
popa
sbb
neg
sbb
cltd
cmc
jbe
jne
sbb
popf
sarl
jecxz
sub
ss
rcll
add
mov
xorb
mov
cmp
cld
adc
push
xlat
push
adc
stos
div
jmp
rcr
mov
rorb
push
adc
mov
insl
daa
cmpsl
rcrb
or
inc
jnp
mov
imul
sarl
mov
mov
mov
add
add
and
sub
or
xor
dec
or
outsl
and
in
sbb
into
or
gs
push
mov
mov
inc
jp
bound
inc
adc
add
and
jmp
mov
test
out
cmp
pop
inc
xchg
pop
add
and
call
pushf
test
icebp
or
pushf
adc
mov
mov
sbb
dec
orl
mov
cmp
push
inc
cmp
lret
adc
mov
bound
setae
dec
shl
fwait
movsb
pop
mov
ja
sbb
push
or
rorl
ja
inc
popa
or
mov
inc
add
fwait
xchg
dec
jg
push
mov
or
mov
outsb
push
ffree
push
pop
pop
int
mov
outsl
movsl
inc
sub
and
cli
int
sbb
bound
jns
int3
loop
mov
repz
inc
or
outsb
jp
add
pop
fucomi
lds
dec
aaa
push
sar
mulb
test
out
mov
dec
movsb
jge
mov
pop
inc
sbb
inc
jg
mov
sub
sub
rolb
jnp
jnp
insl
sbb
pop
aaa
push
test
jno
push
adc
pop
mov
sahf
push
mov
negl
loopne
fucomp
cwtl
mov
jbe
adc
scas
mov
sahf
pop
fmuls
or
xchg
sbb
mov
fbstp
es
mov
xor
insb
movsl
sbb
daa
push
dec
jle
mov
mov
xor
loop
movsl
icebp
enter
aad
add
jecxz
adc
test
jecxz
and
jb
rcll
addb
adc
push
fsubs
shll
pop
jle
call
ljmp
inc
mov
mov
out
adc
pop
daa
or
in
adc
mov
mov
xor
xchg
inc
nop
data16
frstor
adc
int
and
jb
inc
push
nop
jl
daa
mov
incb
stos
mov
add
push
pop
jl
xor
lret
fcoms
dec
push
mov
add
sub
shl
push
fs
cmp
mov
and
lcall
test
dec
push
repz
rcl
jne
fildll
int3
fidivl
jns
xor
mov
data16
out
out
dec
es
xchg
and
fistpl
xchg
push
cltd
or
stos
popa
mov
lcall
sti
je
scas
xchg
xor
pop
jecxz
data16
in
aas
mov
push
dec
mov
daa
sbb
les
popf
dec
jb
adc
pop
sti
jns
xchg
sub
cs
fcoms
shlb
int
pop
mov
inc
outsl
and
popl
ss
fisubrl
dec
ss
cmpsb
cmpsl
mov
gs
out
mov
mov
cmpsl
pop
cli
cltd
sbb
mov
add
push
pop
xchg
fbld
push
or
xor
pop
insl
pushf
dec
aas
fs
out
inc
jbe
data16
jno
enter
xchg
sub
mov
jbe
dec
mov
sub
jno
or
jbe
jb
jle
rcl
clc
pop
cmp
rorb
jns
pop
or
fsubr
pop
mov
hlt
jo
insl
into
mov
repnz
or
aaa
stos
ljmp
and
sti
cmp
and
jo
jo
mov
lret
fisubrl
aaa
xor
mov
sahf
xchg
pop
push
pop
jb
ret
aas
xor
sub
pushf
and
jbe
lcall
mov
jl
inc
cmp
lahf
sbb
lods
push
daa
pop
incl
clc
loop
fsubrl
cmp
cmp
mov
jp
cmp
sub
xchg
sub
pop
out
cmpsb
cmpsb
and
inc
jno
out
pop
jnp
out
in
dec
outsl
jmp
decb
mov
lea
cmpsb
mov
sub
stos
push
imul
mov
outsl
arpl
xor
lods
jae
insb
jecxz
idivl
push
mov
andb
mov
popa
sbb
xor
sbb
push
cmp
pop
loop
in
or
call
call
pop
faddl
dec
pop
push
cmp
push
cmp
popa
push
sub
inc
roll
xor
cmp
mov
mov
jne
mov
pop
sarl
xor
icebp
rcr
scas
push
out
mov
movsl
enter
mov
cmc
stos
and
add
and
and
mov
cltd
or
jg
adc
cmc
xchg
xor
out
mov
dec
cmc
cmp
adc
sbb
adc
cmp
outsl
fwait
notb
xchg
xor
xor
outsl
jge
pop
jge
xor
orb
xchg
sbb
pop
inc
fisttpll
ds
fcmovne
or
scas
bound
cli
mov
push
je
push
sbb
lcall
es
cmpsl
mov
jmp
lods
fisubl
jne
jo
pop
xchg
rcll
and
sti
or
jno
fcmove
cltd
daa
sbb
add
in
inc
adc
sbb
test
jno
pop
mov
inc
nop
dec
jg
imul
mov
sub
dec
cmpsl
out
push
jns
addr16
mov
inc
scas
out
pop
adc
sbbl
ljmp
jbe
add
push
inc
adc
frstor
push
mov
lahf
push
sarl
aas
not
lods
scas
mov
aam
fistps
inc
repz
out
sti
inc
in
xchg
mov
cld
arpl
push
and
imul
inc
int
push
cwtl
icebp
xchg
cltd
push
cmc
arpl
mov
pop
pop
push
sbb
incb
cmpsb
mov
jge
jmp
fldcw
cmp
loop
add
fimull
add
and
xor
cs
ror
add
and
xorl
push
push
stc
repnz
notb
into
div
mov
fiaddl
inc
dec
in
add
add
ljmp
sub
fiaddl
and
mov
sub
xchg
mov
push
cmp
ss
sbb
out
lret
subl
mov
or
jecxz
ds
inc
cmp
imul
mov
aas
aaa
sub
sbb
and
jo
jne
mov
into
jbe
mov
sbb
mov
add
adc
or
push
sub
jb
fbstp
popl
ljmp
push
repz
jns
xor
lds
push
stos
adc
mov
test
xor
insb
shrb
loop
fbld
mov
mov
push
scas
mov
pop
push
popa
xlat
in
jg
adc
dec
lock
mov
add
mov
mov
push
jmp
push
push
pop
adc
into
cmp
mov
jbe
mov
or
gs
je
adc
mov
test
out
pop
clc
sbbb
add
aad
stos
lods
mov
fsts
ss
add
jnp
push
lahf
xor
inc
lahf
jno
ja
mov
cmp
rclb
lret
mov
cs
xchg
xchg
jle
mov
je
nop
mov
ret
pop
fucomip
push
inc
ljmp
sub
fcmovne
ljmp
pop
jle
push
jmp
adc
mov
bound
pop
sahf
gs
sti
and
push
sub
pop
dec
mov
mov
mov
jae
lods
clc
mov
call
jae
jg
aas
adc
mov
enter
add
fidivrs
push
jp
arpl
sahf
xchg
lods
test
fadd
or
jp
repnz
pusha
and
scas
and
lea
and
orb
cld
mov
add
pop
and
ja
dec
xchg
loopne
push
fldpi
mov
fisubs
fisubrl
mov
inc
lret
mov
movsb
push
pusha
cmp
and
gs
and
pop
lods
leave
inc
inc
mov
xor
xor
roll
shlb
je
and
test
mov
notb
test
repz
xor
add
sbb
sub
loop
dec
cmp
jp
xchg
mov
cs
xchg
cmpsl
mov
nop
or
jg
dec
mov
mov
push
cmp
leave
out
lods
inc
popf
fisubrl
sbb
lock
jmp
and
sub
cmp
insb
pop
and
sub
stos
cli
pusha
fdiv
lods
scas
adcl
mov
sub
pop
pop
inc
popa
sbb
dec
shlb
push
mov
and
mov
inc
jge
cwtl
hlt
push
pop
dec
fimull
mov
pop
cwtl
lds
aas
xor
dec
movsb
mov
lods
inc
dec
pop
mov
xor
stos
adc
in
cltd
arpl
sub
fisttpl
or
xchg
mov
loopne
push
fsubrs
sub
push
inc
and
lods
jnp
cmpsb
add
and
outsb
mov
push
mov
scas
addr16
push
notb
and
idiv
cmp
ja
ret
add
aam
fs
sbb
cmc
cmp
lods
xor
dec
lahf
push
outsl
push
subb
std
push
loope
fwait
dec
fcmovnu
in
ds
add
pop
push
sub
cmp
das
shl
mov
js
sub
pop
push
xchg
mov
into
das
xchg
adc
sahf
push
je
lret
daa
xor
lea
movsb
and
imul
cmp
outsl
xchg
jns
std
movsl
and
jp
cld
and
xor
xchg
xlat
jmp
mov
pop
and
fisubs
or
cmc
loope
inc
insl
and
xchg
xchg
add
js
mov
xor
mov
mov
shlb
into
repz
movsb
sbb
test
adc
mov
nop
mov
fldcw
pop
jge
dec
cmp
out
cld
fldcw
ret
jmp
cmp
nop
cmp
cmc
dec
adcl
jg
xchg
jno
das
js
je
sti
xor
pop
scas
and
or
and
cltd
loopne
insl
push
loop
xor
jno
mov
outsb
mov
cltd
enter
das
mov
sbb
in
mov
imul
xchg
ret
mov
ficompl
movsl
dec
push
sbb
jo
and
aad
sub
and
cmpsb
lahf
lds
dec
cli
std
jp
push
cltd
mov
add
cmp
mov
add
cs
stc
flds
pop
mov
sub
pop
mov
xchg
jl
adc
icebp
std
or
sbb
dec
sub
orb
out
push
mov
sub
daa
into
mov
adc
adc
dec
in
shll
pop
mov
fistl
jp
out
dec
jmp
or
jo
in
mov
jp
xor
lea
xchg
addl
cwtl
jl
daa
pop
dec
cmpsb
pop
loope
inc
cmp
pop
bound
or
stos
sub
pop
and
push
shl
shr
ret
pushf
cmp
adc
mov
or
lds
cld
out
dec
pushf
andb
pop
pextrw
sub
loop
sub
pop
cmp
jne
arpl
ret
jge
xor
or
xor
sbb
lods
and
push
sti
rorl
nop
pushf
dec
mov
divps
xorb
or
mov
out
mov
addr16
insl
adc
dec
mov
shrl
scas
jo
mull
jb
mov
jecxz
sti
out
push
fiaddl
sbb
insb
jbe
sar
mov
in
cld
outsb
fwait
scas
mov
into
sbb
inc
add
ja
mov
xchg
cmpsb
sub
imul
fdivs
push
ret
arpl
repnz
xor
fcoml
ds
aas
xchg
shrb
mov
pop
popf
or
sub
jecxz
and
cs
jle
push
dec
fcomip
adc
sub
push
dec
nop
cltd
incl
push
xchg
xor
rcr
or
mov
sbb
cmp
enter
insl
test
mov
pushf
mov
pushf
ficoms
or
daa
pop
cld
jg
fstpt
or
in
stc
pop
adc
or
lea
adc
add
dec
pop
jo
or
adc
push
push
lea
mov
hlt
lods
mov
lret
test
out
push
mov
jp
mov
pop
or
ss
shll
xchg
cs
push
or
mov
mov
gs
adc
aaa
xchg
fisubrs
clc
cwtl
jo
jnp
mov
dec
push
pop
popf
fisttpll
xlat
mov
add
and
or
aam
into
and
call
imul
lods
sub
lahf
rorb
aaa
push
jne
sahf
sbb
out
push
mov
imul
or
shlb
mov
je
fisubs
push
into
shrl
jl
cwtl
aaa
pushl
jo
xor
ljmp
lods
push
icebp
cmp
lret
add
jecxz
inc
out
pushl
inc
or
inc
or
mov
loopne
mulb
mov
push
push
iret
add
addb
fistpll
add
ljmp
cmc
sarb
sbb
shll
subl
fwait
push
xor
pushf
jne
pop
out
xlat
int3
scas
sub
rcr
lods
push
push
add
rorl
int3
stos
rolb
lcall
daa
shlb
cmp
sbb
add
adc
fidivs
jle
pop
ljmp
mov
mov
mov
xor
imul
aad
sbb
fwait
xchg
pop
fldcw
out
mov
rcll
icebp
jl
jo
push
xchg
mov
jle
xor
xor
xor
mov
mov
mov
lds
mov
mov
xchg
imulb
sub
out
arpl
test
loope
stos
hlt
mov
pop
fwait
pop
sub
and
lods
icebp
aaa
or
xor
fbld
and
push
or
add
inc
out
pop
xchg
xchg
int3
std
pop
jecxz
push
jp
test
sbb
sub
mov
movsl
push
jb
add
add
mov
add
andb
andb
adc
mov
test
add
cmp
imul
ficoms
and
and
adc
stos
mov
inc
loope
sbb
ja
js
mov
sub
mov
and
aad
gs
ret
push
dec
out
insl
sbb
rolb
cmp
movsb
ja
jge
into
mov
push
adc
inc
inc
divl
scas
imulb
int
push
add
ljmp
jbe
cs
pushf
out
pop
xchg
jmp
hlt
int
stos
lfs
dec
out
sub
outsl
push
out
repz
or
mov
sbb
inc
in
sbb
push
cmpsl
lods
cltd
fsts
out
sub
pop
add
jnp
lods
test
divl
sbb
data16
mov
scas
test
or
testl
sub
jae
into
lea
push
jecxz
push
jg
pop
fs
cmpsb
jl
sub
mov
scas
xchg
pusha
imul
movsb
push
push
inc
and
sbb
cwtl
push
mov
dec
xchg
or
xchg
hlt
lret
push
pop
jne
sbb
push
das
and
stos
testl
mov
mov
jg
push
lcall
mov
jns
int3
scas
jmp
jge
lods
inc
sahf
neg
jns
cmp
jo
pop
repnz
and
nop
shrl
cmpb
cmc
push
nop
sbb
sbb
aad
sbb
cmpsb
dec
add
mov
in
enter
ret
sbb
daa
in
idivb
ss
nop
arpl
fdiv
adc
enter
sbb
add
aad
push
add
push
fsubs
bound
jg
inc
mov
dec
fcomip
pop
mov
in
ss
add
scas
or
popa
ret
xchg
out
xchg
shll
xor
cmp
or
or
mov
mov
mov
push
dec
mov
data16
cltd
dec
xor
jns
stos
fdiv
xchg
ja
jnp
pop
xchg
inc
pop
in
mov
mov
xor
pop
aas
scas
jecxz
lahf
mov
mov
out
nop
push
push
pop
stos
pop
lahf
imul
out
mov
xor
pushf
jle
imulb
cmpsl
scas
cwtl
mov
add
xchg
xor
or
ret
dec
mov
adc
cmp
das
movsb
cli
xor
or
xchg
push
dec
addb
into
hlt
test
js
out
push
jns
cmp
das
sbb
add
imul
lret
ss
fiaddl
es
fbstp
loope
mov
xchg
push
or
adc
fcom
mov
sbbl
mov
mulb
fs
sbb
jge
or
inc
loop
dec
sbb
cmpsl
sti
leave
scas
and
cmp
hlt
push
pop
and
cs
cltd
ja
or
sub
inc
jp
inc
inc
cmp
test
xor
pop
inc
fidivs
nop
ss
fsub
mov
sahf
movsl
aam
les
test
out
shlb
cmp
lods
sahf
jns
mov
cmp
lret
ljmp
add
rcl
mov
dec
iret
xchg
push
les
pop
and
bound
mov
test
nop
inc
pop
scas
sub
pop
ds
imul
and
orl
icebp
fbstp
mov
sub
jns
xchg
jo
jmp
mov
insl
mov
leave
outsb
loopne
xchg
daa
test
add
outsl
push
jne
mov
loope
lret
or
sti
rorl
pop
mov
inc
loop
push
jg
mov
inc
pop
js
push
jb
add
es
xor
lea
jno
hlt
gs
jl
clc
loopne
in
pushf
cmp
js
insb
lret
shrb
ret
rolb
test
shrl
jp
fadds
pop
push
sub
xor
cmpsb
lahf
in
or
mov
sbb
das
pop
mov
add
addr16
inc
lahf
sub
imul
cmp
mov
lahf
sub
push
gs
insb
xchg
mov
sar
sub
sbb
xor
rep
cmp
adc
rcl
inc
jmp
xor
test
mov
pop
sbb
xchg
sub
inc
pop
pop
sbb
push
jmp
add
sbb
or
push
fisubs
ds
xlat
jbe
or
cmp
mov
out
pushf
jno
xor
mov
in
push
or
mov
arpl
ret
push
sub
xchg
pop
fdivs
out
mov
nop
xchg
or
xor
xchg
shlb
data16
mov
leave
sub
call
lock
jle
stc
loop
les
push
jecxz
xor
popa
jb
mov
stc
pop
and
mov
pop
call
ret
adcl
shlb
mov
repnz
add
fstp
add
xor
mov
dec
add
cmpsl
jo
testl
lcall
cwtl
mov
or
push
repnz
ja
inc
jbe
adc
dec
gs
mov
icebp
sub
adc
aad
mov
repz
popa
add
nop
xor
dec
sar
scas
cmp
movsb
push
add
es
push
data16
int
push
xor
mov
jge
fistpl
dec
xchg
in
or
pop
cli
add
inc
in
push
mov
leave
data16
hlt
fidivs
stos
into
push
cli
jns
fs
ret
or
int3
aaa
dec
sub
jne
push
aas
in
in
stc
aad
jl
outsl
and
add
adc
int3
divl
imull
pop
inc
rcr
out
adcl
aam
jge
inc
imul
pop
dec
pop
pop
jne
sbb
jmp
inc
push
push
fdivrs
je
mov
fisubrl
lcall
fs
iret
dec
fs
adcb
outsb
adc
gs
push
in
call
push
out
dec
pop
jl
xor
pop
rcrl
xchg
dec
iret
fidivrs
xor
cwtl
add
into
pushf
inc
cmpsl
mov
xor
out
push
ret
js
data16
aam
lahf
xchg
sub
lret
pop
jno
jb
xchg
push
call
inc
int3
dec
mov
mov
push
insb
adc
inc
icebp
or
jne
push
cmpsb
aas
adc
test
sbb
sbb
push
dec
icebp
ds
iret
dec
mov
sarl
popf
dec
push
ret
dec
ds
jmp
mov
xor
imul
mov
stos
xchg
dec
mov
sbb
imul
imul
mov
mov
jb
pop
pop
lds
push
xchg
jge
jle
aaa
and
xlat
cmp
adc
inc
loop
pushl
mov
jle
leave
mov
sbb
dec
inc
rcll
xchg
stos
insl
iret
sbb
jl
pop
clc
andl
fiadds
leave
movsb
inc
aam
scas
punpckhdq
xor
mov
jnp
jb
stc
inc
lock
movsb
push
mov
gs
pop
lds
repnz
scas
cmpb
bound
push
jb
addr16
aam
iret
imul
push
mov
out
aad
inc
arpl
sti
mov
dec
push
test
data16
jmp
fisubl
insl
movsb
fscale
cltd
push
sub
fbstp
fsts
add
or
adc
inc
decl
xchg
jl
mov
xchg
outsl
or
loop
leave
scas
cmp
loopne
push
jecxz
mov
cmp
push
pop
mov
mov
stos
or
cmp
jns
movsl
into
out
sub
and
aaa
sbb
and
stc
jo
inc
add
rol
inc
pop
pop
ljmp
and
icebp
jg
and
cmp
inc
movb
xor
jae
fs
and
cli
mov
xor
adc
mov
test
jp
jp
push
repnz
mov
mov
ret
mov
pop
sbb
insl
add
lahf
pop
mov
ret
mov
mov
in
int3
cltd
stos
cmp
insb
sbb
jae
stc
xor
or
push
add
pop
movsb
sbb
fldenvs
dec
add
ss
or
aas
aam
insb
sub
inc
mov
dec
inc
adc
lea
dec
in
sahf
into
adc
test
cld
repz
hlt
jnp
jmp
cli
xchg
mov
mov
int
jg
push
sbb
mov
out
cmpsl
leave
addl
mov
aas
lods
mov
popl
test
xchg
les
imul
jmp
sti
xor
clc
sbb
lahf
pop
mov
mov
mov
or
push
mov
pushf
rcrb
stos
cmp
in
jmp
cld
jno
fwait
push
mov
scas
xor
aam
add
decl
pop
xor
pop
adc
jno
xor
cli
aam
adc
pop
push
scas
push
jmp
push
and
mov
lock
jnp
sub
mov
mov
sbb
dec
xchg
jb
test
stos
lahf
or
cwtl
arpl
inc
add
sub
cs
mov
add
hlt
lods
xchg
sbb
sti
inc
inc
aaa
cmp
push
or
test
js
stc
push
pop
in
pop
and
cmp
pop
daa
jecxz
mov
mov
aas
jae
movsl
sub
out
sub
inc
cmp
push
stos
pop
and
inc
cmp
pop
pop
fcomip
sbb
sbb
xchg
or
mov
je
mov
jo
push
adc
xchg
sbb
outsb
popf
nop
adc
sbb
mov
popa
pop
lret
mov
jno
jg
je
popa
out
enter
inc
cmp
jmp
jns
popf
pop
push
mov
loope
mov
cwtl
ja
inc
inc
out
mov
sub
cld
cmp
sbb
or
mov
push
imul
movsl
xchg
push
fwait
or
cmpsl
pop
popf
mov
movsl
inc
xor
test
lret
rcrl
jecxz
jl
adc
out
je
shll
mov
scas
jecxz
ffreep
mov
sbb
and
js
movsb
adc
into
subb
cmp
mov
push
lds
push
adc
xchg
aad
rcrb
lea
inc
loopne
ja
mov
ja
lahf
rcrb
jbe
xchg
stos
add
leave
xor
dec
adc
xor
sbb
dec
push
push
pop
scas
das
test
jg
dec
add
scas
dec
enter
in
xchg
ror
mov
mov
inc
fsubr
push
fidivrs
mov
cmpsl
cli
push
jo
adcl
push
divl
sahf
inc
ret
lcall
loope
lea
loope
cmp
outsb
dec
sbbb
or
mov
dec
xchg
add
and
mov
mov
xchg
and
mov
aaa
fwait
clc
or
mov
icebp
cli
rcrl
ds
xor
fs
cmp
jae
push
out
and
mov
dec
pop
ss
jmp
ret
lea
push
jb
sbb
subb
mov
mov
roll
insb
pop
add
sbb
das
repz
inc
dec
cltd
lods
xor
mov
hlt
daa
jle
xchg
stc
cli
aaa
loop
clc
jmp
dec
fcoml
push
das
repnz
gs
or
testb
jbe
push
mov
xchg
pusha
sub
mov
ds
lock
imul
jecxz
xchg
pop
stos
adc
inc
into
out
xor
fdivl
dec
int3
js
jnp
in
mov
cwtl
ljmp
pop
cmp
test
pusha
test
mov
cltd
add
loop
sbb
dec
xchg
in
imul
mov
mov
insl
mov
add
lock
pop
shrb
xchg
out
xchg
jp
or
notb
pop
add
add
add
scas
inc
insb
mov
aad
pop
pop
or
sahf
mov
loope
xor
add
fcoml
add
in
or
sub
dec
mov
mov
inc
cmp
lret
pop
cmc
mov
jle
push
jns
repnz
out
rcll
mov
cmp
push
dec
pop
mov
mov
pop
cltd
mov
das
cmp
add
jne
add
and
dec
jmp
push
dec
jbe
ret
imul
sbb
fcoms
stos
imul
mov
sub
testl
add
push
push
and
pop
into
sbb
xchg
jno
push
out
ret
adc
stc
popa
pop
xchg
sbb
into
pushf
fidivrl
dec
jb
lret
jnp
sub
cmp
cmc
dec
dec
data16
imul
add
les
jg
aam
push
call
xchg
cwtl
pop
adc
fdivs
adcb
cmp
cmpsb
negb
stos
or
mov
mov
data16
xchg
adc
movsb
int
adc
out
or
decb
repnz
push
pop
xor
repz
lcall
mov
mov
mov
pushf
adc
mov
sub
and
outsb
push
or
and
xchg
jnp
cmpsl
fsts
xor
sub
cmp
sti
addr16
faddl
pushf
mov
sbb
cmp
push
les
xchg
xchg
aam
jmp
lods
or
lcall
cwtl
stos
fs
inc
repz
call
xlat
leave
mov
jecxz
dec
out
pop
add
cmp
jo
pushl
add
scas
or
xorb
adc
movsb
push
adc
xchg
mov
imul
xor
dec
jbe
jb
jb
imul
outsb
jo
imul
addr16
in
mov
xchg
cmpsl
inc
insb
dec
xchg
in
jmp
stos
inc
pop
xchg
cmp
aam
iret
adc
mov
pop
rcrl
cmpsl
and
jge
stc
push
adcb
out
divb
loopne
test
mov
cmp
dec
adc
imul
dec
mov
rcrb
mov
notb
dec
in
ja
add
out
xchg
mov
outsb
or
lock
pushf
fists
rolb
aad
pusha
cmp
daa
popf
mov
or
mov
fisubs
lock
aad
push
xchg
negb
ror
ljmp
pop
stc
bound
xor
pop
mov
mov
sarb
add
and
jmp
popa
add
stos
out
in
aaa
jno
sti
sub
or
jo
test
mov
rorb
pop
sub
shlb
or
push
fcmovb
sub
bound
jno
mov
push
mov
and
pop
dec
sti
dec
ja
test
jg
popa
out
je
repnz
pop
and
divb
xchg
and
outsl
lahf
add
stos
inc
cld
mov
lret
mov
push
jns
hlt
sub
inc
pop
pop
jmp
call
fidivrs
call
xchg
mov
cmp
in
leave
jl
mov
add
rorb
divb
jge
sbb
dec
mov
xchg
cmp
or
lahf
jae
xor
pxor
jle
push
pop
lret
enter
push
idivl
push
cmp
cli
scas
iret
pushf
fs
inc
leave
add
adc
out
out
std
lret
mov
aam
in
loop
xchg
out
rorl
in
cmp
fdivrs
sub
shrb
pop
cmpsb
cmp
fiaddl
cli
xlat
mov
out
xchg
inc
lods
sbb
shll
mov
push
xor
push
jmp
pop
mov
or
jecxz
lret
jnp
mov
inc
and
pop
mov
stos
add
mov
mov
rcrb
ja
jmp
jge
xorl
nop
sub
sbb
add
xchg
or
addr16
jo
adc
push
sbb
add
jmp
int3
shl
xor
dec
sbb
ss
sub
cwtl
mov
and
mov
shrb
jbe
jmp
cld
sub
repz
push
jge
mov
mov
in
ds
shll
lods
int3
je
cli
in
shrb
pop
cmp
clc
sub
cltd
lods
in
bound
jb
jecxz
sub
rolb
jg
lods
stos
mov
sbb
bswap
mov
adc
imul
jae
pop
lods
cmp
and
jle
jne
pusha
mov
daa
leave
data16
lcall
ja
mov
inc
or
cmpsl
push
jecxz
mov
sbb
sub
movsb
lret
aas
call
outsl
lods
xor
dec
je
and
insb
jo
cmp
sbb
xlat
sbb
cmc
jp
sar
xchg
xor
sbb
pop
imul
mov
pop
add
push
push
push
ja
inc
pop
loop
lds
pop
icebp
or
add
sti
sti
aad
les
data16
adc
jne
inc
mov
add
pop
xor
scas
cwtl
cmpsl
cmp
mov
add
push
adc
and
sbb
decb
push
mov
hlt
bsr
scas
jp
push
jg
into
scas
outsl
daa
movsl
dec
movsl
and
cmc
fisttpl
outsb
dec
out
cmp
or
popa
repnz
push
add
mov
daa
testl
xlat
push
nop
ret
lret
js
lret
popf
std
aaa
sub
lock
dec
sub
push
sar
add
test
lret
xchg
or
inc
mov
in
xchg
stc
ljmp
enter
stos
subl
imul
mov
dec
fisttps
add
xor
xchg
enter
pop
pop
out
and
jbe
push
sarb
in
cmp
loopne
insl
test
lret
mov
mov
jmp
mov
add
adc
push
fisttpl
jnp
jae
movntps
scas
out
mov
inc
cmp
cli
stc
mov
jb
int3
jbe
aas
int
jl
inc
nop
mov
push
xor
mov
lods
xor
cmp
daa
pop
pop
pop
add
dec
imul
cmp
int3
mov
or
xchg
ftst
mov
pop
jno
ss
pop
and
scas
push
sub
ret
rorl
shll
mov
push
push
mov
outsl
cld
daa
out
mov
sahf
in
lds
mov
cmpsb
cs
sbb
cs
mov
fimuls
shr
orl
dec
xchg
push
or
cmc
and
xchg
das
clc
and
mov
loop
cmc
xchg
dec
dec
inc
movsl
cmp
clc
inc
fstl
loope
clc
cmp
inc
cmp
arpl
xchg
inc
sbb
pop
jp
lds
cmpsl
sub
stos
xchg
mov
xor
jecxz
and
frstor
repz
pop
mov
dec
sub
out
icebp
push
mov
xor
cltd
push
repnz
pop
mov
int
sub
test
icebp
jb
cmp
in
rol
ret
mov
push
clc
xchg
jl
in
hlt
xchg
mov
fldenv
pop
jne
movsl
jno
mov
mov
sbb
or
or
cmp
cs
repnz
lahf
fwait
push
push
fdiv
sbb
addl
mov
iret
xchg
inc
cs
mov
shlb
or
aaa
aad
pop
jl
adc
and
xchg
test
add
gs
aam
or
imul
aam
jno
lds
sub
shlb
or
inc
jns
push
add
mov
jg
jg
in
test
fmul
fmuls
test
mov
and
movsb
push
cmpb
int
ret
and
pop
and
loope
or
cwtl
or
push
clc
xor
lcall
out
std
xchg
es
addr16
aam
aaa
push
dec
xchg
movsl
stos
jp
cmp
jecxz
pop
out
les
mov
xor
jle
pop
lret
sub
imul
aaa
roll
or
xchg
pushf
aas
stos
jl
stos
frstor
xlat
and
pop
shll
adc
sti
jl
add
and
adcl
rcll
int3
push
add
rcl
mov
and
mov
sub
sub
sbb
sarb
sbb
in
jp
mov
jae
sahf
and
pop
fisubrs
push
push
fmull
sbb
mov
mov
dec
adc
xlat
fldl
jp
aam
lahf
pop
shlb
pushl
rcrl
xchg
cmpb
out
rolb
lds
sti
loope
push
loope
shlb
inc
mov
push
jp
nop
push
pop
mov
mov
iret
mov
xchg
pop
pop
out
push
cltd
lods
bound
and
out
test
and
mov
loopne
push
imul
sbb
or
dec
dec
cltd
push
pop
mov
jp
int
cmp
stos
sbb
adc
out
jecxz
scas
mov
mov
test
mov
push
xchg
push
icebp
nop
push
aad
cmp
pop
xlat
mov
insb
sub
ret
int
aad
lea
imul
rolb
test
adc
fcmovnb
push
aam
jecxz
jnp
inc
aad
mov
xor
sti
decb
cli
mov
mov
cltd
or
or
xor
mov
or
and
sbb
pop
cli
xchg
jle
lock
mov
pushw
mov
cmpsl
xor
pop
fldcw
dec
imul
mov
jp
mov
xor
fisubrs
decb
xor
mov
and
pop
push
cmpsl
fcomps
loopnew,pt
inc
fnstenv
xchg
and
dec
push
inc
or
pop
jo
mov
adc
lods
cwtl
icebp
outsl
popa
ret
xchg
jmp
out
fs
jb
movb
les
mov
stos
mov
in
mov
dec
cmc
dec
and
std
sbb
mov
lret
imul
push
stos
and
push
out
push
sti
ret
scas
mov
ficompl
iret
nop
call
insb
pop
mov
orl
lods
lods
pop
loopne
mov
jae
int3
push
mov
mov
leave
dec
sbb
les
mov
and
cmpsl
cmpb
iret
mov
sub
mov
pop
lret
add
lcall
push
insb
lods
sub
outsb
cs
bts
cld
test
inc
scas
outsl
xchg
adc
clc
or
clc
push
mov
pop
mov
xchg
out
ljmp
sbb
bts
xor
rorl
push
xchg
pop
mov
insb
jl
pusha
jns
mov
add
fcomps
xorl
call
out
mov
inc
push
xchg
aas
sti
add
mov
jg
bound
in
pop
inc
xchg
mov
sub
push
cld
dec
repnz
adc
ljmp
cmc
incl
xchg
xorb
jne
mov
sti
dec
lds
idivb
out
repz
and
sbb
mov
push
pop
jecxz
add
sbb
xchg
jle
push
nop
and
ret
lcall
loop
jl
sub
xchg
rorb
aam
sub
xor
adc
lods
mov
xchg
dec
andb
aaa
incl
in
pop
arpl
test
cwtl
repz
dec
inc
add
dec
sbbl
jge
xorl
fisttpl
cltd
ss
push
mov
xor
jbe
stos
jmp
aas
call
dec
fdiv
sahf
fistpl
shl
in
fbld
movsl
sarl
xorb
outsl
dec
int
loope
inc
cmpsl
pop
popf
lcall
fstps
nop
xor
cli
inc
lea
inc
jnp
xchg
in
sub
loopne
xor
sbb
mull
push
fsubr
inc
or
jae
xor
fcompl
dec
mov
xchg
addr16
es
xor
adc
lods
je
xchg
dec
fnstcw
das
and
cmp
jg
xchg
lret
shrb
jg
fldenv
adc
lods
cmc
mov
adc
mov
aas
mov
adcb
and
jg
notl
jbe
lock
inc
xor
shlb
mov
adc
cld
shl
inc
movsl
sub
inc
sahf
inc
call
ror
mov
inc
movsl
lods
push
fisubs
jo
adc
mov
leave
mov
rcrl
je
sbb
out
inc
jle
jl
mov
fisttpll
add
xor
xchg
xor
fcom
push
pop
sub
faddl
pop
outsl
mov
mov
xchg
and
and
mov
mov
mov
xchg
ss
push
jmp
loope
shll
mov
jl
pop
mov
jne
repz
inc
mov
lahf
sub
bound
aas
jnp
pop
xorl
stos
aam
jmp
push
pop
push
repnz
push
pusha
inc
pushf
int
repz
in
add
xor
jae
jecxz
rorb
icebp
pop
jb
mov
push
je
test
push
ret
cmpsl
rcll
call
sub
xor
pop
push
or
aad
or
scas
sbb
int
insl
and
cmpsb
mov
jecxz
imul
jge
mov
xor
out
mov
jmp
xchg
aas
pop
dec
xor
inc
movsb
lcall
mov
and
cmp
ja
sbb
push
cmp
subb
inc
nop
outsl
imul
gs
add
mov
pop
xchg
pop
test
gs
ljmp
test
loopne
sti
and
jnp
adc
xchg
jmp
pusha
fstpt
xchg
or
lret
pushf
push
and
jl
cmpsl
mov
pop
mov
cmpsl
pusha
xor
lea
lods
push
xchg
mull
xchg
aad
xor
sbb
cmp
hlt
lea
cltd
lds
lods
leave
fstps
and
lods
dec
push
mov
xor
sar
mov
imul
pop
es
shlb
xor
ret
test
push
ja
inc
xchg
xchg
mov
xchg
sub
hlt
push
mov
inc
inc
pusha
loopne
or
push
clc
cmp
xchg
mov
in
pop
and
inc
mov
call
push
xor
ss
outsb
jae
mov
inc
divb
mov
push
insl
call
je
lods
and
dec
shrl
loope
mov
decl
movsl
add
loopne
mov
mov
mulb
bound
and
mov
jecxz
push
pusha
or
lods
fcoms
jecxz
les
sbb
add
dec
push
xchg
push
jbe
push
stos
mov
addr16
rcl
dec
and
sahf
or
inc
inc
test
lahf
pushf
and
or
popa
xchg
jnp
xchg
mov
push
popf
cs
jle
sbb
cmp
push
push
xchg
shlb
sti
cmpps
push
mov
inc
mov
mov
and
push
shlb
lods
out
lea
jbe
push
pop
dec
sbbb
mov
adc
out
jae
lcall
addr16
dec
outsl
ret
les
and
add
arpl
add
bound
cmp
lods
pop
mov
pop
stos
xor
push
pop
inc
lret
orl
loope
and
xchg
out
jl
popf
data16
popa
inc
lret
xchg
fidivrl
mov
imul
xlat
sahf
fldt
push
mov
xchg
adcb
mov
test
stos
adc
mov
xor
xor
pop
outsb
mov
dec
pop
inc
mov
mov
push
inc
js
dec
xor
loop
xlat
pop
xor
pushf
pop
jl
es
pop
xchg
rcl
sub
adc
std
shlb
cs
lds
mov
out
in
cmc
data16
jle
cmpsb
loopne
not
aad
xchg
loopne
aam
xchg
stos
mov
xor
jb
ret
cwtl
push
sbb
loop
cmc
lret
inc
mov
add
or
loopne
sub
xorb
lea
sub
or
jne
test
mov
dec
add
out
fidivrs
sub
ss
xor
insb
mov
dec
shlb
cmpb
dec
push
lcall
xchg
fstl
addr16
mov
push
xor
inc
jl
inc
xor
add
popa
stc
mov
ret
lahf
push
adc
mov
push
imul
push
sbb
jp
sub
out
andl
scas
sbb
push
mov
jp
lcall
pop
jb
sbb
mov
pop
shll
mov
push
or
adc
xchg
cmp
push
stos
hlt
pop
idivl
and
push
adc
mov
inc
in
imul
cmp
mov
outsb
por
int3
imul
xchg
ret
lahf
xchg
xchg
aas
sub
inc
ret
mov
daa
mov
push
lret
jae
fisttps
pop
cmp
jg
sbbl
mov
jno
fs
adc
and
pop
aaa
dec
inc
lret
movsb
cli
cmpsb
cmp
inc
jecxz
sbb
pusha
cmpsl
xor
int
in
sbb
in
stc
dec
das
subb
call
push
or
out
dec
jle
xchg
sbb
push
adc
out
pop
adc
mov
jb
shr
push
cli
sbb
sbb
cmp
test
mov
shlb
pop
adc
pop
and
dec
insl
lock
push
xorl
cmp
out
xchg
push
mov
popa
fstpt
std
mov
leave
inc
xchg
pop
pop
shlb
jno
add
push
in
xor
je
push
pop
xor
xor
mov
mov
dec
add
pop
adc
pushf
xchg
loopne
push
popf
mov
or
push
notb
aam
sub
test
pop
mov
sub
test
xor
push
mov
lea
int
pop
mov
jo
in
mov
mov
xor
test
jp
aad
push
sub
push
dec
sbb
xor
mov
jbe
ss
lret
push
test
in
push
xchg
fildll
nop
sbb
xchg
dec
out
xor
xchg
add
add
ficoml
push
stc
jecxz
mov
mov
sub
mov
xor
inc
sub
cmp
lods
ficomps
add
mov
and
popa
xlat
jecxz
dec
imul
jg
outsb
sub
sbbl
adc
xor
cwtl
js
into
movsl
dec
push
dec
add
int
push
jbe
ret
xor
mov
mov
mov
call
loop
scas
out
adc
call
cld
xchg
pop
or
loopne
fists
pop
mov
mov
clc
xor
lock
nop
cs
idivb
push
push
xchg
sbb
adc
jno
cmpsl
insb
dec
imul
push
mov
jle
cmp
cld
xchg
mov
dec
jbe
jge
es
jmp
cltd
fwait
lea
sub
xchg
hlt
cltd
pop
xchg
jg
bound
movsb
jecxz
mov
push
adc
and
jge
pcmpgtw
jg
push
jl
jmp
les
mov
mov
sbb
jecxz
std
movsb
leave
outsl
lods
fcompl
sbb
and
xchg
mul
lahf
jle
loope
scas
fstpl
push
out
inc
sub
das
or
clc
sub
xor
test
ljmp
loopne
lcall
xchg
cltd
and
adc
or
stos
mov
fstl
mov
sub
or
add
mov
sbb
jno
cmp
lock
fcoml
das
and
fs
adc
mov
xchg
ljmp
pop
mov
dec
rcrl
imul
push
mov
inc
rorl
pushf
lcall
cmpl
push
imul
std
or
mov
dec
ret
fucomi
cmp
mov
cmpsl
jl
jne
lea
aam
or
xor
or
loope
mov
push
stos
shlb
cmp
cmp
fmull
mov
ja
inc
xchg
lods
mov
add
mov
outsl
int
fidivs
push
xchg
xchg
cltd
in
addl
cmp
pusha
and
jl
jmp
lods
stc
jp
pop
dec
xor
inc
imul
movsl
aam
mov
and
xor
xchg
mov
ss
data16
in
pop
scas
ds
sbb
outsl
sub
andb
sbb
hlt
pop
ret
icebp
inc
hlt
mov
jnp
rol
dec
lods
lods
or
xor
push
fcmove
mov
filds
xor
test
fsubrl
push
or
in
das
call
inc
loopne
cmp
clc
adc
fld
sub
xlat
push
push
popf
loopne
jae
mov
add
mov
ficoml
cwtl
mov
nop
xchg
push
mulb
int
movsl
shlb
xlat
lock
and
adc
mov
js
and
cmp
mov
sub
aad
sbb
das
ljmp
std
js
ficoms
insb
fistpl
lret
jmp
sub
cmpl
mov
loope
stos
into
dec
insb
push
dec
cmpsb
insb
sbb
push
sbb
pop
jle
jnp
int
repz
inc
gs
dec
addr16
xor
sub
jecxz
sub
push
xchg
pushf
inc
cmpsl
mov
adc
in
inc
out
imul
cmp
jnp
jno
scas
jecxz
mov
std
fcoml
leave
cmc
sbb
adc
outsb
mov
mov
out
xchg
or
loop
jecxz
xchg
sbbl
dec
pop
sahf
adc
fdiv
gs
js
js
or
xchg
cli
inc
cmp
xor
outsl
and
xchg
or
adc
jne
js
xchg
les
pop
stos
mov
dec
hlt
inc
enter
rcrb
xorb
imul
inc
int
aam
fs
es
lods
out
out
mov
push
xchg
test
out
add
dec
in
out
dec
addr16
mov
dec
ja
nop
cld
sbb
inc
pop
push
iret
mov
insb
scas
sbb
fs
pushf
xchg
jge
lahf
jge
push
sub
orl
mov
clc
sub
cmp
dec
mov
xor
cld
std
xor
jae
jmp
sub
sarb
mov
xchg
popf
jno
xchg
mov
mov
lea
imul
mov
mov
rol
mov
xchg
in
aad
or
jmp
cs
xchg
push
sbb
lods
int
sbb
mov
cmp
arpl
popf
push
bsf
gs
in
daa
ja
mov
incb
pop
pop
int3
sti
jecxz
mov
bound
in
adc
sahf
mov
mov
and
testb
clc
mov
xchg
cmpsb
insl
push
inc
sbb
push
inc
xchg
sbb
add
push
ficoms
out
xchg
or
jmp
xor
data16
daa
push
aam
fisttpl
gs
mov
dec
mov
cmp
std
in
xor
jne
ret
insb
mov
xlat
test
push
ja
xchg
test
xchg
xor
mov
std
cmp
inc
mov
faddp
cmp
mov
fisubrs
sbb
out
dec
dec
add
xorl
or
inc
jge
xor
int3
sbb
xor
fstpl
mov
repnz
push
xchg
cmp
clc
add
lods
add
in
sub
jnp
into
inc
ja
mov
push
lds
mov
mov
push
call
jl
xchg
add
fcmovb
cmpsb
inc
push
cmp
jmp
leave
clc
mov
dec
cmp
fwait
adc
sti
fs
push
mov
lret
daa
out
add
sbb
or
sub
xor
jg
into
sti
mov
push
dec
ljmp
leave
inc
mov
sbb
xor
sbbb
dec
negb
jbe
sbb
popa
inc
out
push
test
outsb
xchg
dec
jmp
sbb
shrb
sarl
pop
fs
int3
data16
stos
cltd
jg
insb
xchg
adc
dec
sub
push
adc
arpl
jne
jecxz
mov
gs
daa
mov
fwait
cmp
sbb
popa
in
insl
xor
cmpsl
aas
and
mov
inc
movsl
in
pop
movsl
mov
cmc
mov
pop
mov
jb
push
scas
decb
push
jmp
sbb
aas
imul
fcmovnb
lret
sbb
je
adc
mov
stos
push
add
lahf
mov
popf
mov
xor
add
xchg
sahf
xchg
or
dec
jne
sahf
or
sbb
xlat
imul
dec
sbb
mov
mov
daa
mov
mov
in
push
mov
rcrb
xchg
cmpsb
out
sbb
inc
or
and
nop
fxch
or
push
push
aaa
rcr
data16
mov
xchg
mov
flds
sbb
dec
add
jb
addr16
xchg
xchg
sub
imul
add
cmp
aad
xchg
call
icebp
push
pop
push
mov
jo
jnp
inc
jbe
std
scas
shrb
in
inc
cmp
sub
lods
mov
addr16
add
xor
and
mov
xor
cmp
addr16
in
mov
scas
test
mov
inc
aam
jb
and
orl
xor
inc
add
inc
xor
fnstenv
pop
add
pop
mov
ljmp
sub
jmp
nop/reserved
icebp
inc
loopne
sbb
mov
loope
cmpsb
cmp
push
sbb
jge
gs
sbbl
test
mov
cmovno
imul
jns
pop
add
adcb
mov
dec
sti
mov
push
mov
push
cmpsl
pop
cmp
into
sub
mov
cli
add
jbe
xchg
out
or
icebp
push
xchg
inc
cwtl
xor
outsl
std
mov
mov
fstps
jne
ds
testb
jge
push
aas
les
fnsave
adc
mov
pop
jbe
cltd
mov
mov
stc
dec
test
mov
inc
pop
push
jne
inc
stos
jg
js
fisttpll
dec
mov
jle
ret
push
inc
jne
daa
roll
sub
inc
xlat
xor
je
stos
pop
push
pop
cmpsb
or
popf
dec
std
mov
repnz
add
jns
push
stos
in
push
cmpsb
imul
aas
scas
jo
lds
rcll
std
in
pop
sub
int3
ds
in
mov
packssdw
cmpl
rcr
dec
sub
aaa
adc
pop
rorb
das
lret
ss
psubusb
dec
loope
mov
test
xor
sub
push
shrl
mov
fistpl
int3
stc
lock
mov
xor
inc
push
lods
fs
sbb
push
jne
test
xchg
mov
adc
das
dec
rcll
inc
dec
push
add
fs
mov
outsb
sub
subb
cltd
enter
xor
sub
mov
in
fwait
in
jp
jb
repz
je
out
aad
iret
xchg
enter
adc
sbbb
push
jp
hlt
mov
adcb
inc
dec
ljmp
rclb
dec
and
mov
add
dec
mov
in
mov
mov
negl
dec
inc
push
lret
loope
push
outsl
fs
xchg
xchg
imul
call
das
sbb
push
sub
xchg
cmp
xorb
and
push
push
add
and
mov
das
and
xor
mov
in
jb
pop
push
xchg
mov
mov
push
ret
push
hlt
inc
rorl
sbbb
pop
int
ds
jmp
mov
ljmp
iret
inc
int
das
fcmovu
and
leave
mov
addb
xor
or
or
adc
in
jl
repz
and
jb
and
not
mov
mov
jno
sub
ja
lahf
cmp
xor
scas
loop
push
or
insb
pop
xor
jne
daa
xchg
mov
leave
jae
push
fsubrl
dec
jmp
pop
push
lea
arpl
mov
int
int3
rorb
hlt
or
stos
pop
pop
adc
sub
xchg
cmp
dec
xorl
pop
sub
xchg
xchg
dec
lret
test
jae
and
cmp
xchg
lret
xor
adc
iret
fbstp
pushf
fidivl
cmp
xchg
pop
sub
dec
roll
stos
fildl
jae
popa
test
cld
mov
jae
push
and
repnz
das
pop
aam
lahf
xchg
in
sub
push
push
out
sbb
testl
mov
mov
cmp
sti
inc
jge,pt
xchg
addr16
addr16
fiaddl
imul
inc
movsb
pop
fdivrs
gs
mov
push
popa
or
in
or
out
out
ret
int
scas
ljmp
mov
mov
push
cmp
jns
sbb
lds
mov
jns
bound
adc
lock
shl
test
enter
dec
dec
push
jl
adc
sub
arpl
shll
cmp
mov
and
dec
test
clc
cs
stos
icebp
xchg
push
xor
ja
fwait
and
dec
sbb
jns
dec
call
je
jl
add
inc
push
outsl
sub
clc
mov
push
cs
lods
inc
lds
sbb
adc
cmp
pop
dec
mov
mov
jnp
xchg
jbe
add
je
pusha
sbb
les
shlb
mov
cld
cli
out
fldcw
dec
add
and
divb
cmp
nop
xchg
mov
sub
push
rcr
insb
mov
mov
sbb
cmp
and
mov
xchg
repnz
and
sbb
push
loopne
mov
mov
inc
cwtl
cmp
jle
dec
pop
xchg
push
mov
inc
adc
mov
xorb
icebp
loopne
add
bound
cmc
push
shll
loope
or
daa
xor
repz
add
popf
xchg
dec
cltd
xchg
js
mov
push
iret
mov
pop
sarl
imulb
cmp
lret
push
cmp
in
mov
adc
cli
xorb
sbb
dec
lret
loopne
loope
mov
fsubrl
or
dec
mov
popf
cmp
xchg
ja
shll
mov
repz
repz
aad
jnp
cmp
xchg
mov
xor
xor
pop
rcrl
cmpsl
ljmp
pusha
out
mov
or
xchg
xchg
jmp
das
js
sbb
xchg
xor
xlat
test
pushf
pop
push
jmp
and
ret
aaa
pop
lret
rcrl
mov
sbb
jns
xchg
mov
int3
aad
mov
call
jno
fs
xchg
cmp
sbb
cltd
fists
fs
shll
inc
lods
adcb
inc
xor
or
mov
sti
add
jecxz
sub
xor
jo
shll
push
mov
mov
aad
test
scas
or
in
mov
sub
imul
mov
jno
and
call
and
addl
mov
lahf
or
bound
in
sub
push
cli
into
sub
mov
int3
add
testl
xchg
inc
mov
lea
enter
mov
or
or
xor
lock
add
bound
fcomi
jns
sbb
lret
dec
clc
mov
movsb
cmp
decl
push
jmp
dec
outsl
cmp
cmp
int3
andb
stc
mov
pop
lret
pop
mov
xchg
ret
into
or
adc
repz
shll
and
inc
sbb
out
enter
enter
lds
pop
add
mov
jp
movsl
aad
lea
or
pop
dec
lods
jp
jp
mov
adc
lods
mov
jg
sub
mov
scas
nop
inc
push
mov
outsl
hlt
cmp
jno
xchg
push
lret
mov
xchg
mov
xor
in
jp
notb
dec
jmp
hlt
test
push
out
popf
std
or
xor
xchg
das
jl
dec
cmpsl
cmpsb
dec
xor
sahf
and
jge
je
dec
jle
pop
leave
movsb
xchg
stos
clc
jns
dec
daa
xor
push
sbb
sbb
jmp
mov
dec
jb
in
in
xlat
inc
ljmp
and
add
repnz
cwtl
repnz
sarb
aaa
and
int3
sbb
inc
insb
jno
sbb
enter
jmp
jbe
andl
das
ss
and
pop
rclb
mov
lcall
popa
jp
xor
loop
lea
dec
ljmp
out
sub
in
test
cmp
lcall
xor
mov
or
dec
adc
fsubs
xchg
mov
sbb
jle
jne
jmp
fimull
sub
inc
imul
xor
pusha
pop
movsb
mov
xchg
jns
cli
xor
jg
fwait
int
jmp
sbb
out
adc
nop
sub
pushf
inc
and
mov
divb
lea
shll
push
and
hlt
lock
cmp
lea
sub
add
push
movsb
fists
jl
adc
mov
mov
loope
scas
mov
lcall
inc
lods
shl
push
mov
in
and
icebp
popf
ficoml
call
pop
adc
or
xlat
test
jge
fbld
xchg
cld
fadds
jmp
push
jmp
push
sbb
jmp
jl
js
clc
andl
ss
jne
nop
shrl
shlb
inc
into
imul
testb
lret
and
icebp
loope
hlt
jg
cmp
outsb
ret
lcall
dec
jecxz
or
add
sbb
pop
bound
dec
fdivr
hlt
loope
inc
jmp
jmp
daa
subb
and
push
mov
jecxz
test
je
dec
push
adc
mov
cmp
adc
arpl
sbbb
push
xlat
sar
fs
shlb
or
sub
xchg
xchg
xchg
jmp
and
adcl
fdivl
testl
mov
ss
xlat
inc
xor
add
add
add
adc
mov
xor
test
clc
sbb
je
icebp
sub
lret
mov
mov
outsl
iret
xchg
dec
jecxz
subb
hlt
popa
mov
scas
scas
cmp
pusha
lcall
dec
inc
jae
clc
sub
xchg
xor
dec
jle
das
pushf
jle
mov
add
jge
or
lock
inc
fwait
aad
xchg
scas
arpl
cmp
mov
push
arpl
dec
dec
add
xlat
jnp
push
inc
ds
or
das
push
cmp
mov
jg
shrb
push
cltd
jne
pop
in
ret
lds
xchg
or
add
js
or
cltd
inc
lods
cmp
pop
outsl
sarl
add
fmull
cvtdq2ps
xchg
icebp
icebp
stos
fisttps
notb
outsb
cltd
and
adc
push
cmc
xor
push
pusha
push
aam
inc
cwtl
popf
clc
out
fldl2t
inc
sbbb
hlt
sarl
dec
cmpsl
faddp
dec
add
xchg
mov
mov
push
push
stos
xlat
test
lret
scas
lea
icebp
test
cmp
push
mov
or
jb
inc
jecxz
pusha
cmpsl
enter
popf
pushf
sbb
cmc
dec
mov
nop
sub
add
push
ljmp
push
jl
push
movsl
cmp
mov
loope
test
mov
xor
sbb
jge
mov
pop
out
movsb
sbb
ret
xchg
js
cmpsl
jb
das
pop
fistps
mov
sub
subb
dec
stos
cld
mov
and
inc
or
inc
daa
ss
mov
js
mov
dec
scas
popa
inc
adc
mov
add
test
cmp
ret
das
or
mov
ret
pop
sbb
les
std
xchg
mov
pop
gs
mov
int3
or
add
movsb
add
sbb
lret
jle
sbb
jne
mov
ret
hlt
or
dec
dec
mov
stc
jno
xor
ljmp
divl
or
sbb
xchg
pop
das
ljmp
aas
lcall
add
sbb
je
sbb
pop
stos
push
arpl
inc
add
ret
or
das
das
jne
adc
frstor
mov
dec
inc
rclb
pop
sarb
mov
jnp
dec
cmp
inc
insb
dec
cmc
sub
outsl
push
icebp
mov
mov
popf
into
xor
sbb
mov
xor
sarb
imul
xchg
je
add
adc
sub
hlt
dec
xor
stos
cmp
imul
pmulhuw
sbb
push
mov
add
data16
and
sti
push
std
test
dec
mov
xor
xor
pop
stc
lods
push
jbe
stc
mov
lcall
rep
sbb
nop
movsb
and
pop
stos
jp
xor
fnstsw
js
mov
push
mov
out
mov
mov
pop
aad
mov
and
dec
loope
sub
mov
popf
mov
jae
mov
out
ja
mov
xchg
ret
scas
stos
mov
dec
push
fwait
or
xchg
or
arpl
shlb
dec
or
inc
sub
mov
enter
repnz
adc
aas
xchg
wbinvd
scas
sahf
mov
sub
adc
jae
bound
inc
pop
inc
popa
pushf
ret
lods
jns
xchg
push
fadd
adc
test
mull
fs
test
dec
and
cmp
movsb
popf
js
in
add
jle
xor
inc
pop
aam
insl
add
mov
jmp
or
sub
outsb
outsl
mov
add
roll
stos
out
subl
cmp
mov
mov
mov
push
enter
mov
cmpsl
push
mov
jecxz
jbe
lahf
scas
mov
shll
xor
shll
mov
jle
mov
daa
mov
push
mov
imul
xchg
push
popa
or
js
pmuludq
int
jecxz
inc
xor
imulb
out
sbb
lret
mov
mov
lcall
cmp
gs
stos
push
add
cmp
cmp
pop
adcb
ja
mov
inc
cmpsl
or
out
xor
push
inc
sbb
lcall
or
test
pop
jne
outsl
leave
xlat
flds
inc
dec
cs
out
mov
insb
pop
dec
or
jp
sahf
dec
lahf
js
dec
push
jmp
out
in
push
out
int3
int
fsubl
imul
cmp
mov
cmp
outsb
sub
lahf
dec
xchg
pop
movsb
sbb
hlt
xor
pop
call
lods
jle
mov
push
push
stc
int3
fnstcw
mov
adc
push
xor
sub
xchg
add
or
in
ret
dec
dec
sub
in
gs
or
mov
in
cmp
xor
and
popf
mov
bound
popf
test
jecxz
divb
std
sub
pop
cmp
test
pop
sub
xor
std
ret
cmp
pop
std
aas
add
push
dec
adc
aaa
push
push
dec
mov
repnz
jge
add
xchg
jne
mov
jnp
in
adc
ds
jl
sbbl
movsb
cmp
in
cmpb
mov
sti
aas
push
lea
fs
negb
mov
or
mulb
add
sbb
inc
stos
xchg
jne
sbb
jge
outsl
js
fbstp
sarl
add
in
mov
std
xlat
sbb
outsb
mov
scas
xchg
mov
mov
dec
inc
mov
pop
popf
cmpb
mov
es
iret
xchg
push
ja
xor
sub
ljmp
nop
adc
into
orb
or
arpl
cmp
push
sbb
pop
xor
mov
xlat
jnp
aaa
lock
rorl
rcrl
sbb
ds
mov
and
mov
add
lods
jmp
push
mov
jmp
loope
pop
push
xchg
in
mov
mov
scas
out
arpl
sbb
es
sbb
or
shl
pop
xchg
iret
neg
test
sub
jle
sbb
mov
push
hlt
les
movsb
mov
xor
movb
cltd
ja
push
jmp
mov
repz
fxch
pop
lret
lret
inc
adc
xchg
iret
xchg
mov
gs
enter
mov
push
sbb
stos
fists
sbbb
pop
dec
jb
fildl
out
pusha
or
imul
arpl
call
or
in
dec
sbb
xchg
sub
mov
sub
sub
aam
ret
bnd
cmpb
adc
jnp
add
in
sub
cmc
ja
int
fs
scas
pusha
mov
jmp
insb
in
xchg
imul
jp
stc
cmp
lret
mov
sahf
xchg
daa
and
aad
fildll
cld
xchg
sbb
andl
mov
fsubl
aam
pop
shl
pop
pop
test
adc
push
shl
xor
jmp
mov
aas
movsl
inc
ss
lret
fistpl
adc
mov
stos
cmp
cmp
inc
add
popf
adc
or
movsb
jne
xchg
mov
dec
sahf
inc
aas
idiv
adc
test
out
sub
fnsave
pop
stos
pusha
pop
or
mov
sahf
mov
sbb
cmp
bound
jne
xlat
cmp
inc
or
add
lahf
cmpsl
pop
aad
xor
repnz
pusha
jae
repnz
andb
and
je
test
push
cs
cs
iret
ss
cmp
dec
mov
in
push
dec
push
jb
imul
dec
fsubl
jno
out
xor
jge
mov
sub
outsb
in
pop
cmc
pop
push
out
push
nop
pop
aam
mov
adc
adc
cld
aam
and
pop
pusha
sub
xor
or
xor
inc
lcall
jne
sub
push
sbb
xchg
mov
test
shl
mov
push
xor
dec
int3
pop
mov
mov
push
adc
dec
lret
sub
std
cmp
mov
and
lods
cmp
jp
cmp
add
insl
rcl
or
mov
or
daa
sub
iret
cmp
int3
aaa
lock
push
push
jns
and
imul
dec
loope
cltd
lock
cmp
movsb
fsub
rorl
cli
movsl
pushf
or
mov
je
orb
dec
push
jp
jns
addb
cmp
fnsave
fisubrl
fldl
mov
and
clc
xchg
mov
or
frstor
pop
loopne
and
insb
lds
cmp
addr16
movsl
lcall
jl
add
scas
rol
mov
in
stc
sbb
xchg
ss
jnp
shl
xor
add
jnp
xchg
in
push
or
shll
outsl
roll
rorl
mov
in
jmp
or
pushf
push
fincstp
enter
cs
inc
pop
mov
adc
jno
xchg
sub
jmp
push
ja
call
ja
subl
data16
fstps
xchg
mov
out
mov
sbb
pop
cld
cmp
mov
dec
mov
setl
stos
ret
mov
shrl
rcll
push
stos
ja
xlat
cmpl
mov
inc
jmp
repz
test
cs
loop
jmp
sbb
addb
andb
dec
lods
fimuls
and
daa
ss
rcrb
jb
push
inc
cli
ljmp
imul
or
fs
aad
mov
or
and
lea
rcrl
inc
add
sbb
test
add
movb
in
cmp
in
pop
test
sub
aad
out
div
jbe
iret
ja
mov
xchg
jge
inc
rcrb
neg
nop
mov
ja
movsb
cmpl
popa
mov
inc
pop
ja
ret
mov
cmp
repnz
test
adcl
or
mov
cmp
sub
or
xchg
std
lods
arpl
mov
sub
push
inc
push
aaa
pop
pop
lcall
cwtl
adc
bound
mov
aaa
push
push
push
cmp
cltd
icebp
inc
scas
xchg
jecxz
nop
and
shl
sbb
mov
lahf
pusha
mov
int3
inc
mov
shr
clc
xchg
outsb
inc
xor
outsb
mull
popa
sub
dec
jmp
std
mov
fldt
fbld
push
mov
push
add
jb
fcoml
in
aas
mov
leave
pop
xlat
mov
xchg
cmp
inc
pop
in
hlt
mov
nop
mov
cwtl
xchg
push
xchg
mov
mov
clc
mov
push
scas
call
out
insl
dec
fisttpl
loop
into
nop
mov
hlt
loop
in
add
out
scas
js
loope
mov
xor
mov
jae
or
inc
mov
cmc
aad
test
aad
jns
mov
push
ret
shll
leave
movsb
and
push
or
fs
inc
mov
out
push
mov
pop
mov
aaa
cmp
mov
inc
xchg
cld
mov
and
jl
xor
gs
cmc
xchg
inc
data16
xchg
cltd
pop
push
in
pushf
cmpsb
in
push
mov
sbb
cmpsb
cmc
enter
xchg
add
jge
dec
add
movsl
ja
cwtl
or
daa
cmp
pop
mov
imul
cmp
mov
sti
lods
leave
inc
jmp
int3
scas
and
popl
pushf
scas
add
dec
iret
cwtl
mov
inc
es
fwait
mov
xchg
popf
add
dec
dec
ret
movsb
xchg
push
or
daa
xor
push
dec
fucomip
and
fs
mov
insl
aad
pusha
clc
out
into
push
xchg
mov
inc
mov
idiv
inc
pop
mov
inc
lods
or
arpl
out
adc
dec
inc
sbb
pusha
adc
nop
mov
jecxz
cmp
sbb
pushf
test
fwait
les
push
mov
data16
dec
ja
rcll
or
xchg
xchg
lret
fildll
bound
lret
cmp
cltd
nop
dec
aam
into
fcomps
imul
popa
das
inc
iret
xor
mov
loope,pn
mov
mov
bnd
mov
jno
push
mov
lahf
cltd
adc
insl
mov
and
jb
pop
aam
and
out
inc
cmp
push
or
loope
outsl
das
fildll
xlat
mov
inc
cmpsb
cmp
and
mov
jmp
test
mov
adc
nop
xor
cmp
lahf
aad
pop
test
xchg
add
cmp
data16
sub
cmp
inc
pop
adc
adc
sbb
xchg
repz
daa
std
xorb
inc
sub
pop
cmp
pushf
ljmp
enter
insb
lds
into
adc
push
sbbl
add
outsb
loope
pop
jns
sub
sub
iret
push
out
adc
test
xchg
sbb
sub
mov
nop
mov
imul
mov
sbb
out
lds
xchg
cli
out
mov
cltd
sbb
push
push
rol
pop
push
add
fcomip
sub
jo
fiaddl
sbb
and
dec
std
push
inc
int
mov
xor
pop
cmpsb
jl
out
mov
jg
pop
pushf
xlat
gs
insb
aam
ljmp
negl
push
je
in
aad
mov
jl
int
lahf
sbb
sub
mov
xchg
jbe
pop
out
and
addb
dec
fsubrp
add
cs
mov
shll
mov
daa
imul
subb
mov
mov
mov
pop
in
faddl
jg
sub
loopne
mov
pop
insb
jp
lods
cltd
imul
push
fnstcw
sub
xor
sbb
sub
jmp
pop
xchg
push
dec
out
cmpsb
sub
ljmp
scas
daa
out
cs
inc
and
adc
pop
sbb
cmp
sti
addb
popa
push
test
pop
sbb
mov
call
fs
je
test
jo
jecxz
and
xor
rcll
xor
inc
gs
dec
sbb
ficomps
insb
xchg
inc
lahf
cmp
mov
popa
or
xor
jae
call
lods
rcll
cmpsb
je
add
lock
lods
decb
and
test
add
imul
daa
xlat
loope
mov
sarb
outsl
add
mov
std
subl
mov
loope
sbb
mov
jns
fld
inc
and
xlat
push
iret
dec
mov
in
pushf
mov
pop
adc
and
sti
mov
cld
rcrl
lcall
enter
jnp
les
repnz
sbb
jecxz
cmp
dec
cmp
or
adc
shlb
cltd
incb
mov
ja
fimuls
mov
adc
in
inc
daa
pop
push
pushf
mov
adc
mov
sbb
es
mov
je
test
jb
into
add
cmpsb
mov
out
adc
movb
adc
mov
pop
jmp
xchg
mov
ds
dec
jecxz
mov
mov
sbbb
mov
xchg
xor
dec
imul
jno
mov
cwtl
leave
ljmp
pusha
push
adc
hlt
outsl
js
cli
cs
pop
fdiv
imul
or
sbb
xor
adc
jp
loopne
pop
push
ret
mov
cmp
icebp
xchg
xchg
cmp
pop
cmp
jle
adc
movsl
xchg
sbb
insl
sub
in
xchg
push
pop
scas
sub
push
jge
cmp
jo
int
es
addr16
les
pop
call
jns
enter
lods
cmpsl
jmp
inc
imul
dec
test
jle
mov
mov
mov
stos
pop
mov
or
add
sub
pop
cmpsl
pop
jne
mov
cmpsl
fldl
stos
or
xchg
push
add
inc
adc
mov
cs
add
lahf
cmpsb
xor
das
cmpsb
fisubs
mov
or
cmp
and
cmp
mov
xchg
push
sbb
adc
sbb
lods
daa
add
jae
in
or
fs
add
mov
jg
xchg
add
xchg
jge
dec
jo
cli
push
add
lcall
shr
psubusw
jmp
das
imul
loope
jecxz
cltd
ret
pop
cmp
xchg
pop
ss
add
add
out
mov
outsb
insb
lret
xor
inc
add
hlt
jb
add
pusha
mov
inc
popa
addl
in
xorb
shrl
xchg
xor
ds
out
jbe
dec
sbb
jbe
enter
repz
push
lret
xchg
cmp
in
out
leave
jl
xchg
lea
jge
test
pop
stos
rcrl
jb
sbb
lods
cltd
fisubl
adc
aad
out
shll
call
lods
add
sub
mov
outsb
xor
push
dec
xor
fildl
call
add
xchg
sbb
push
push
ss
add
addr16
ret
popl
loop
fcoml
sub
out
mov
push
mov
lods
pop
loop
fisttps
mov
bound
test
pop
popf
in
or
mov
scas
mov
jo
out
ret
sbbb
push
insb
arpl
xorb
mov
rcll
sbb
adc
mov
push
subl
xchg
jp
filds
lods
and
mov
inc
test
cmpsb
jmp
pusha
xchg
xchg
dec
leave
out
mov
push
mov
arpl
std
mov
daa
add
movsb
sahf
test
lds
inc
stc
cld
cmp
test
mov
sub
rorl
jg
repnz
sbb
push
xor
push
inc
clc
push
sbb
add
call
lcall
scas
div
sarb
rclb
mov
js
nop
cmp
xchg
pcmpgtw
insl
lcall
loopne
int
in
into
or
lret
aas
jge
sarl
or
jle
pop
mov
in
mov
stos
jb
in
lret
fcompl
sub
mov
adc
push
push
test
shlb
fstl
dec
test
imul
or
clc
out
in
and
popf
dec
mov
out
stos
jbe
orl
cmp
jnp
mov
call
inc
ret
pop
mov
es
push
inc
addr16
cmpsb
or
cmpsl
fbstp
xchg
sbb
sub
inc
sti
jmp
jnp
jge
lds
jle
fsubs
mov
out
mov
sbb
fimull
jge
addr16
cmp
dec
adc
and
in
ja
dec
push
xor
mov
xchg
pop
in
push
out
leave
dec
xlat
hlt
xlat
cwtl
inc
sti
add
loopne
es
pop
or
aas
push
out
arpl
sub
jb
frstor
std
aaa
sbb
mov
mov
lahf
cmpsb
adc
stos
fcmovnb
test
mov
out
mov
dec
pop
adc
ss
sbb
push
cmpsl
add
dec
cwtl
inc
dec
mov
ss
jp
loope
in
into
jg
mov
movsl
int3
add
cmp
push
sub
lahf
imul
adc
xchg
int3
dec
xchg
sbb
mov
sub
lret
push
rcr
notl
and
gs
test
xor
pop
inc
mov
mov
adc
inc
jg
xchg
aad
gs
jbe
inc
lods
stos
cmp
push
les
les
jl
dec
pop
repnz
add
mov
cltd
movsb
push
lods
mov
pop
jae
jmp
in
mov
adc
sbb
lret
xchg
leave
mov
xchg
mov
push
pop
xchg
cmp
inc
push
mov
int
and
loopne
lock
mov
call
xor
out
icebp
adc
push
mov
mov
mov
jecxz
in
dec
adc
ficoml
and
pop
imul
insb
pusha
call
in
push
inc
test
rcrb
push
stos
aaa
test
mov
pushf
aas
and
subb
pop
in
or
aam
dec
mov
aam
insb
pop
mov
aad
shlb
push
hlt
jns
dec
lcall
repz
cmp
pop
jmp
lods
jno
push
andl
xchg
and
mov
jp
out
inc
add
cwtl
dec
adc
adc
cli
inc
cmp
sbb
sahf
inc
xor
int
int3
in
adc
das
test
adc
insl
ret
jl
ss
sbbl
cmp
adc
adc
inc
pop
fs
out
js
pop
xor
push
or
aas
xor
shl
popa
pop
fwait
mov
fs
add
inc
adc
in
mov
sub
insb
outsl
xor
inc
das
fsubrl
sub
ljmp
push
ror
insl
mov
cmpxchg
and
fmuls
or
push
sbb
shlb
loope
mov
adc
aas
in
in
dec
jns
sbb
adc
cwtl
cmpxchg
ret
cmp
push
xor
stc
test
andb
sub
xor
call
push
inc
jo
in
scas
bound
fimuls
add
and
cmp
fidivrs
fidivs
jno
or
xchg
sbb
push
loop
and
repz
adc
imul
add
sbb
inc
and
ss
pop
fidivrl
jnp
mov
bound
jmp
jo
inc
sbbb
adc
push
dec
fcomps
pop
dec
push
nop
je
dec
mov
lea
pop
je
frstor
call
pop
and
xchg
or
std
push
into
fsubs
rorl
pusha
loop
sahf
inc
dec
and
pop
insb
lods
mov
dec
into
pop
call
and
jmp
in
and
out
aas
lock
push
mov
rorb
mov
daa
je
sub
popf
insb
or
mov
dec
mov
mov
lock
lods
cwtl
or
jl
jle
cmp
mov
xor
bnd
test
stc
aas
mov
push
dec
push
or
outsb
push
mov
jg
mull
push
data16
mov
ret
mov
nop
jp
lea
push
push
xor
add
mov
adc
push
mov
add
int
imul
xorl
sti
pop
mov
mov
int
loopne
jmp
fdivrs
icebp
call
notl
push
fdivl
dec
jbe
out
lret
mov
xor
rorb
mov
cltd
xchg
fisubs
push
cmp
cli
rolb
pop
rorb
jbe
std
or
jle
lret
arpl
in
cli
dec
mov
push
inc
sub
shrb
sub
mov
push
xchg
shrl
repz
dec
add
insl
adc
and
negl
loopne
cmp
jg
cmp
data16
das
xor
daa
mov
imul
jo
scas
push
loopne
in
mov
jmp
push
mov
and
shll
add
sbb
mov
cmc
loopne
mov
pop
push
or
xchg
int
push
aad
xlat
out
fcomps
scas
adc
cmpsl
nop
in
xor
cmp
pusha
popf
ljmp
xor
pop
aad
xchg
or
mov
push
bound
xor
ficoms
out
sbb
cltd
aam
cmp
loop
mov
fwait
jns
lcall
sbb
xor
and
in
notl
jo
pusha
dec
jns
mov
xor
add
push
and
pop
popf
jns
loopne
pop
stos
in
push
out
pushf
in
sbb
cmp
lods
imul
jo
jg
aad
cltd
xor
pop
sub
mov
inc
mov
push
sbb
push
shlb
int
lret
loope
xor
pop
jno
outsb
push
push
push
fnsave
test
arpl
add
jge
or
pop
inc
lahf
mov
sbb
ds
mov
movsb
dec
icebp
jecxz
pop
rcrl
or
das
xor
xchg
negb
in
or
stos
orl
lods
or
mov
fisttps
xchg
mov
std
stos
xor
sti
cli
jnp
aas
mov
clc
sub
iret
bound
pop
mov
pop
stos
push
lahf
in
add
mov
outsb
push
push
cli
popl
adc
or
lods
cld
pop
dec
jno
mov
pop
sbb
cmp
and
outsl
sub
mov
nop
fs
lcall
mov
js
call
pop
fcmovnb
sbb
pop
roll
pop
mov
lods
shlb
sbb
jno
inc
inc
into
mov
jo
ret
imul
inc
jle
lahf
mov
mov
mov
insl
int
cmp
leave
pavgb
cmpsb
mov
add
shrb
in
mov
lea
movsb
push
ja
jb
sub
lods
in
mov
js
add
ror
sub
ss
dec
testb
jno
sarb
lock
lods
cmpl
adc
xor
test
adc
push
xor
rcll
pop
sbb
sub
add
sub
xchg
jge
arpl
inc
jmp
in
mov
test
rcrl
aaa
repz
pop
into
cltd
jo
loope
xor
gs
xor
clc
or
push
xor
inc
rolb
lods
xchg
mov
lcall
mov
lcall
push
out
xorl
sti
sbb
inc
inc
frstpm(287
insb
sub
loope
sbb
xor
lret
lea
push
mov
lahf
call
outsl
adc
push
test
js
addl
inc
dec
pop
clc
add
ljmp
js
ja
mov
loopne
outsb
mov
push
mov
and
bound
sub
cwtl
movsl
out
loop
mov
jo
lock
jp
jle
add
in
leave
nop
xchg
mov
int
inc
xchg
lahf
mov
ljmp
lds
into
shlb
imul
dec
lea
xor
dec
ja,pn
pop
mov
and
pop
es
inc
fsts
adc
ffreep
cmp
lods
cltd
add
sbb
mov
cltd
pop
insl
sub
jle
hlt
push
jns
dec
jne
inc
lods
dec
jg
and
fwait
mov
adc
add
sub
pushf
jbe
jmp
push
sbb
jae
xlat
cmp
inc
ret
leave
dec
mov
xor
dec
ss
sbb
imul
sub
call
jae
xor
mov
mov
dec
shl
add
jl
lds
mov
mov
cmp
dec
xlat
iret
xor
fisubs
cmp
testb
orb
cld
js
add
dec
mov
add
pop
imul
mov
je
add
call
xlat
adc
mov
movsb
jl
in
iret
cltd
add
repnz
out
outsl
add
in
out
inc
cltd
les
pop
ljmp
jecxz
and
xchg
call
mov
out
fs
adc
sub
sahf
loope
mov
sti
icebp
jecxz
popl
fnstenv
fldl
in
mov
out
dec
in
fistl
rol
and
ja
std
or
or
adcl
pop
inc
mov
xor
in
and
in
in
mov
inc
sub
outsb
cmp
mov
icebp
bound
or
adc
add
push
scas
jmp
fmuls
daa
cmp
jae
das
leave
fsts
fnstsw
mov
pop
ljmp
hlt
loopne
loop
mov
and
lock
enter
sbb
cmp
roll
fs
out
sub
dec
insl
and
and
cmp
xor
jp
enter
in
enter
cmp
cli
aas
fnstsw
jae
xchg
xchg
cltd
int3
xchg
test
mov
das
stos
push
mov
mov
inc
add
or
pusha
inc
mov
mov
ret
shrl
sbb
lds
outsb
mov
insl
mov
nop
popf
mov
sbb
pop
mov
clc
and
or
push
clc
nop
sbb
mov
pop
pop
mov
push
and
and
cmp
push
mov
dec
push
cmp
mov
es
jno
lret
sbb
adc
jae
pushf
push
cwtl
movsb
addl
das
cmp
adc
cmp
popfw
movsl
int
cs
sti
nop
jno
xchg
lods
jp
mov
movsl
pop
stos
shll
add
jmp
add
pushf
push
enter
and
pushf
fnstenv
js
or
repnz
inc
jp
stos
jp
lcall
lahf
xor
push
test
pop
or
cmpsb
lahf
xchg
cmp
cmp
mov
adc
mov
fadds
outsb
es
cmp
dec
push
mov
cmpl
push
popa
ja
or
cmp
popa
xchg
or
jp
cmp
sti
mov
inc
fstps
outsl
dec
xor
test
xchg
jns
xor
out
add
adcb
daa
ljmp
ljmp
fistpll
jne
out
push
shrb
movsb
xchg
xchg
adc
fs
or
xchg
mov
inc
push
ftst
out
ds
xor
popf
popa
sbb
push
xchg
es
jo
push
mov
jae
arpl
add
jge
imul
shll
fistl
jnp
mov
xchg
out
movsb
das
popf
cmpsb
mov
mov
scas
movsl
mov
fmuls
jno
mov
inc
ljmp
rclb
in
jno
jge
stos
jle
and
mov
movsb
popf
int
js
sbb
loope
rorl
jecxz
jb
xor
and
sbb
imul
mov
mov
sbb
jmp
into
in
sub
lret
test
pop
xchg
or
mov
pushf
lods
jnp
cmp
iret
js
adc
lods
sahf
sbb
lea
mov
adc
movsb
sub
in
popa
xchg
das
hlt
push
pop
enter
mov
sub
movsb
mov
mov
test
mov
adc
push
xchg
mov
movsb
add
lds
mov
enter
xor
mov
push
cmc
add
scas
push
xchg
pop
mov
lods
inc
pop
and
test
push
mov
jmp
popf
into
fisubrl
jae
std
jle
pusha
xor
adc
inc
or
adc
mov
lods
out
mov
jbe
xchg
loop
dec
mov
dec
dec
xchg
and
adc
jp
push
inc
adc
mov
jne
mov
jp
cld
arpl
push
mov
pusha
movsl
repnz
pop
mov
rcrb
dec
lds
inc
adc
xchg
pop
dec
lock
mov
int
dec
jecxz
pop
mov
push
call
adc
add
cs
and
push
les
insl
xchg
popa
sbb
mov
mov
mov
jne
je
and
fwait
mov
and
rorb
mov
ja
push
adcl
int3
jmp
dec
mov
aam
sub
push
test
icebp
jne
xchg
xchg
push
mov
cmp
insb
push
ss
mov
outsl
cmp
clc
xor
lret
or
aad
mov
iret
sub
fidivrs
adc
adc
mov
or
mov
push
mulb
jg
sbb
es
ljmp
arpl
adc
hlt
fistl
rcrl
sub
pop
mov
movsb
out
enter
inc
sbb
mov
push
dec
subl
push
cltd
mov
or
cltd
dec
dec
pushf
pop
shrb
dec
mov
incb
adc
popf
xchg
cmp
cwtl
jmp
sbb
pop
xor
imul
push
ljmp
push
ret
out
out
xchg
pop
push
adc
or
push
out
jo
fstpt
push
push
rorb
lea
movmskps
sub
stos
cmp
in
ret
inc
xchg
cmc
inc
mov
inc
sahf
push
iret
inc
imull
sub
mov
cld
icebp
jne
pushf
push
push
sbb
mov
inc
push
dec
cmp
addr16
cli
mov
mov
xor
dec
inc
std
jg
enter
cltd
push
push
fwait
dec
dec
fistpll
xchg
inc
addl
cmpsb
mov
push
inc
mov
push
popf
xor
cmpsb
and
push
cwtl
lea
aas
std
lret
add
add
and
inc
lods
pop
ret
push
mov
fdivl
mov
ja
rorl
rorb
xor
xchg
xchg
pop
push
or
int
adc
rcrb
xor
mov
mov
popa
or
inc
pusha
rclb
adc
ja
sbb
movsb
fldenv
dec
hlt
jmp
mov
decl
test
loope
xor
mov
xchg
cld
add
lahf
or
xorl
movsl
in
out
stos
sub
lret
mov
sarb
inc
lahf
negl
or
push
xchg
lret
xchg
es
inc
push
das
lds
lea
mov
add
stc
jno
jns
xchg
jecxz
ljmp
daa
in
out
hlt
adc
hlt
jl
xchg
iret
mov
popa
out
xor
mov
ss
arpl
mov
and
hlt
stos
inc
int3
cld
inc
cmpsb
cmp
out
jbe
dec
push
iret
out
jnp
aad
pop
test
pop
or
inc
jo
int
and
push
xchg
mov
jb
add
in
push
loopne
shlb
adc
dec
pop
shl
sub
add
lahf
dec
incl
sbb
xchg
dec
loopne
pop
imul
call
mov
mov
aad
addl
out
inc
fisubs
jg
shr
cs
cmpsl
inc
cmpsb
sbb
or
dec
cmpsb
push
rcll
sub
push
mov
dec
test
in
scas
mov
lods
and
pusha
lret
and
push
lock
pop
es
out
adc
dec
mov
fs
mov
icebp
aas
xor
sbb
add
ljmp
popf
add
xchg
jmp
fabs
dec
inc
inc
mov
add
fwait
repz
lahf
mov
push
inc
idivb
stos
xchg
hlt
cmp
fldcw
movsb
stos
int3
add
and
dec
and
frstor
loop
rcrl
adc
jb
cs
daa
call
adc
pop
rorl
inc
mov
mov
shld
shrl
loopne
xchg
jo
and
jns
in
sahf
enter
add
inc
pop
cmp
adc
push
lea
xchg
das
pop
in
mov
push
gs
inc
xor
sbb
ds
xchg
add
push
sahf
es
jnp
jmp
repnz
bswap
sti
inc
adc
sbb
daa
mov
mov
xchg
inc
and
inc
cmp
dec
std
sbb
repnz
xor
adc
or
xor
dec
mov
pop
mov
js
leave
dec
cld
mov
stos
inc
pop
aas
aam
gs
cwtl
fmuls
or
repnz
fistpll
scas
pop
sbb
jbe
xchg
out
pop
xor
rcr
add
rcr
mov
das
add
or
mov
dec
test
xor
pusha
mov
fucomi
std
sub
xor
sbb
jl
std
jg
pop
test
jge
popa
loopne
stos
adc
mov
pop
int3
aad
or
or
mov
ret
and
push
and
mov
xor
hlt
add
cld
cmpsb
or
aaa
testl
adc
test
xchg
enter
in
shlb
int3
stos
repnz
mov
es
add
test
push
dec
inc
cli
rclb
mov
dec
paddq
les
sti
iret
shll
jae
adc
dec
ljmp
ja
cmp
pushf
andl
cld
push
loop
jp
inc
ret
lods
lds
xchg
roll
fcoms
add
incl
shll
add
adc
pop
repnz
push
sub
sbb
add
dec
int
js
lods
shlb
inc
sbb
or
jg
mov
jl
mov
or
loopne
jns
wbinvd
sbbl
pop
or
jecxz
pop
les
push
and
xor
push
and
push
mov
inc
insl
push
shl
outsb
sarl
fs
scas
mov
pop
sub
aad
loope
lea
jnp
dec
jp
test
pop
add
jmp
loope
mov
bound
xor
inc
mov
cmp
add
push
enter
sbb
cmpsl
add
arpl
in
inc
push
test
addr16
mov
xchg
inc
dec
dec
pop
lds
push
stos
mov
pop
movsb
pop
cmp
fwait
push
and
cmpsl
lds
dec
xor
pop
dec
jo
or
js
fdivs
sahf
push
jbe
push
inc
out
ret
inc
arpl
jmp
xchg
xchg
or
mov
lcall
mov
lods
inc
fsts
dec
dec
je
test
call
mov
jg
rcr
loope
push
push
and
test
ja
cltd
insl
adc
mov
sub
jmp
cmpsl
fsubrs
xchg
fwait
sbb
std
call
add
shrb
shlb
jne
adc
cmp
mov
jno
adc
out
pop
adc
mov
pusha
xor
addr16
loopne
test
rcl
enter
out
lods
push
lock
mov
push
pusha
xor
aad
inc
cwtl
xchg
and
dec
adc
xlat
imul
cmp
js
push
sbb
fmuls
and
cltd
fiaddl
jl
jae
fisttpl
cld
or
popa
stc
push
sub
stos
xor
xchg
shll
jne
push
pop
jecxz
xchg
mov
push
sub
sub
and
loop
out
repnz
clc
repz
sbb
pop
not
ficomps
mov
mov
iret
mov
std
push
fldt
fisubl
andb
jns
xchg
add
or
cld
lods
ret
ret
popf
push
or
push
sbb
mov
in
lock
addr16
sub
fxch
sub
in
movsl
fwait
dec
sub
cli
sub
sbb
inc
lock
test
hlt
inc
mov
and
subb
mov
test
mov
int3
lds
mov
sti
jns
hlt
sub
ficomps
stos
cmpsl
hlt
std
add
jae
pop
mov
push
addb
mov
push
fistpll
daa
dec
int3
push
adc
inc
aam
fdivs
sbb
cmpsl
adc
imul
adc
out
pop
xchg
and
js
ljmp
iret
and
pusha
scas
adc
sbb
pop
cmpsl
fwait
add
or
shll
sarb
mov
push
divl
testl
addr16
mov
pop
cmpps
dec
in
test
stos
shl
dec
lret
lods
test
pop
leave
jno
aad
mov
lock
mov
imul
lea
dec
jle
loope
pop
loopne
lret
fildl
shll
les
sbb
lea
aam
sbb
in
std
mov
jg
sub
in
mov
inc
cmp
adc
dec
dec
xchg
and
notb
rolb
enter
sbb
cmp
mov
xor
pop
or
sti
div
mov
xchg
jle
stos
sub
enter
popf
aad
lret
ret
cmp
add
imul
jne
out
adc
adc
lods
daa
loopne
in
sub
mov
jne
outsb
pop
mov
ja
or
mov
adc
ja
or
ret
std
testl
popa
daa
xchg
sbbl
mov
in
aaa
pop
sub
mov
push
cmpsb
sarb
aam
push
scas
add
nop
fadds
mov
inc
aad
push
outsb
mov
lods
adc
mov
lcall
add
and
jb
loope
mov
xor
sub
cld
lret
addb
lret
hlt
cmp
ds
imul
push
xlat
popf
mov
ret
mov
fstpl
or
sti
dec
mov
mov
jnp
loopne
and
xor
pop
mov
movsb
mov
clc
out
es
sti
enter
es
mov
in
cmp
mov
fistpll
out
dec
mov
jnp
inc
mov
sbb
cmp
lcall
arpl
inc
push
je
xchg
sub
scas
roll
inc
cmpsb
and
mov
je
fimuls
xor
cmp
add
lret
lds
mov
sub
push
xor
mov
je
in
mov
and
in
popf
jne
repz
mov
and
inc
lret
fucomp
sbb
xchg
jmp
lock
stos
jl
scas
push
sbb
mull
mov
pop
mov
aad
inc
or
inc
fwait
add
or
popl
mov
dec
push
cmp
jne
inc
inc
stos
pop
into
or
pop
mov
cld
adc
mov
cwtl
push
pop
push
aam
test
shl
pushf
sub
dec
imul
in
pop
sbb
mov
dec
cli
cmp
sub
sti
mov
cmp
scas
out
add
xchg
ds
push
xor
test
mov
add
insl
hlt
push
xchg
lds
lods
in
arpl
pusha
adc
mov
cmp
lea
ret
or
imul
repnz
fldcw
or
hlt
inc
adc
push
inc
push
out
and
jmp
imull
dec
loope
enter
jle
add
mov
sub
lea
and
das
adc
idivl
lret
xlat
or
aad
pop
lea
xchg
call
xchg
xor
shll
xor
mov
call
test
adc
sbb
mov
ljmp
and
and
cld
mov
loop
adcl
xchg
push
push
pop
in
imul
stc
add
lds
popf
sbb
outsl
xchg
jge
push
loope
test
daa
pop
es
inc
rcll
mov
je
or
dec
pop
popf
out
test
inc
push
test
std
test
stos
push
insb
int
sahf
out
data16
jl
xchg
lret
je
add
ret
clc
jb
popa
and
lret
dec
jnp
and
shlb
inc
bound
push
test
cltd
push
leave
push
cmp
sub
ffree
cmp
xchg
push
call
mov
sarl
sbb
or
das
cld
jae
mov
adcb
xor
mov
outsb
lahf
or
shr
jbe
into
jnp
fsubrs
in
packsswb
fisttps
ljmp
lock
outsl
shl
out
scas
fsubs
mov
push
lahf
xchg
ficoml
jno
jmp
add
xchg
xchg
fidivs
nop
fmul
hlt
add
lret
out
sarl
sbb
and
or
and
fcomps
pop
adc
repnz
scas
addr16
loop
pop
push
pop
push
outsl
aas
dec
jle
xchg
test
xchg
fadds
out
pop
jmp
mov
arpl
adc
adc
loope
and
adc
add
pop
lcall
sahf
aaa
jb
outsl
jmp
bnd
xchg
inc
or
imul
mov
mov
out
mov
fsubr
cmp
pushf
xchg
lcall
divb
sbb
mov
clc
shlb
repnz
aad
xorb
sbb
mov
fwait
bound
insl
inc
push
lcall
in
jb
leave
fs
sbb
fistl
call
leave
inc
xor
jb
jle
mov
adc
jns
lock
sbb
je
rclb
xchg
cwtl
call
mov
aam
cs
inc
int
push
sub
mov
jne
dec
popa
je
inc
mov
or
add
sbb
or
push
adc
sbb
mov
cmp
imul
and
sbb
sbbl
fldt
ret
ret
testb
cmpsb
fwait
pop
add
data16
mov
sahf
stos
adc
mov
out
and
rorl
push
lods
ljmp
cs
add
sbb
jecxz
xchg
rorl
stos
and
mov
aam
popa
shlb
and
mov
shlb
orl
std
sbb
mov
inc
mov
jge
leave
add
sbb
dec
loopne
mov
rclb
sbb
fcomps
and
and
xchg
std
sub
pop
or
xor
add
push
add
loop
or
fld
ds
inc
jl
pop
cli
sub
mov
adc
pusha
jb
xor
push
jae
mov
inc
dec
jb
mov
mov
jne
sbb
stos
mov
add
mull
sahf
mov
nop
and
fidivrl
dec
jb
dec
loope
inc
push
pop
mov
sbb
js
sub
xor
stos
jne
shll
fdivp
mov
imul
mov
pop
pop
movsl
insl
rcll
scas
mov
shl
jbe
pusha
out
mov
lret
vmptrst
cmc
xor
and
scas
cpuid
pushfw
mov
fnsave
out
or
test
sub
sub
std
fwait
pop
push
mov
mov
sbb
inc
dec
int3
lods
xchg
push
push
or
jns
mov
mov
xchg
fmulp
inc
popf
cmp
pop
mov
fisttpll
les
mov
push
xchg
pop
and
jecxz
sbb
int
les
loope
out
js
sbb
idivl
push
push
mov
pop
pushf
cmp
das
stc
dec
sahf
rorl
in
loop
xchg
std
mov
bt
push
xor
jecxz
insl
pop
mov
push
dec
push
jg
jne
mov
stos
jnp
sahf
or
mov
sarb
dec
shld
dec
sbb
pop
dec
jg
fnstsw
mov
je
mov
orl
test
pop
sarl
lahf
sarb
mov
lret
pop
pop
lds
mov
dec
sbb
cs
push
and
in
sub
dec
cltd
sbbb
jmp
and
int
pop
in
mov
addr16
add
dec
push
pop
notl
scas
adc
xchg
cmp
sbb
mov
and
imul
xchg
fs
push
push
sub
pop
repnz
ljmp
stos
sub
insl
dec
or
gs
and
mov
out
test
icebp
lods
mov
sub
xchg
ja
mov
pop
gs
or
pop
scas
add
imul
dec
cs
and
insb
shrl
es
in
pop
pop
jge
mov
call
pop
push
in
jmp
or
or
xchg
inc
xchg
and
or
sbb
and
popa
mov
xchg
push
aaa
data16
cmp
push
sub
fisubrs
lds
push
inc
mov
nop
mul
loope
inc
mov
xchg
lock
or
jae
mov
push
iret
scas
ss
enter
xlat
lret
jae
pop
pop
in
jecxz
movsl
lahf
sbb
ret
sub
mov
pop
xlat
into
mov
sqrtps
sub
jg
cmpsl
xchg
repnz
jno
cli
xchg
outsb
loopne
pop
outsl
xchg
add
lahf
xor
aam
adcl
and
scas
loope
outsl
cmpsb
cmp
pusha
mov
jp
jno
dec
xchg
in
bnd
sbb
mov
inc
pushf
jmp
cmp
bound
cld
dec
es
xchg
mov
adcl
fs
push
and
mov
cmpsb
dec
dec
nop
lahf
cmpb
mov
push
pop
mov
sbb
or
shll
clc
jb
clc
in
xor
out
fdivrs
sub
pop
push
sbb
mov
arpl
ja
or
inc
int3
fwait
add
scas
xor
lret
outsb
lcall
pop
test
out
sti
dec
jbe
lds
insb
je
add
lcall
cmp
aam
sub
pop
pop
stos
in
test
jecxz
push
and
lahf
aam
or
pop
cmpsl
loopne
mov
cwtl
inc
fdivrl
je
xchg
fdivrp
push
in
and
fisttpll
push
push
aad
stos
pop
std
and
push
mov
mov
mov
push
popf
inc
xchg
pop
push
aad
mov
mov
fstpl
and
dec
or
inc
ljmp
sbb
outsl
sbb
lea
repnz
add
rclb
lret
mov
xchg
popf
push
mov
inc
test
mov
dec
xor
andb
mov
and
popf
mov
inc
cmp
mov
stc
repnz
lahf
xchg
xor
xor
out
popf
into
or
int3
fcmovnu
pop
divl
cmp
les
xor
sub
xor
fstps
arpl
mov
in
gs
sub
sub
jecxz
xchg
mov
jmp
xchg
push
popl
shll
jns
or
in
mov
add
jmp
mov
xchg
push
cmc
mov
mov
mov
mov
loop
jecxz
mov
adc
int
leave
add
mov
dec
inc
and
loopne
jg
fmul
or
repnz
xor
movsl
push
xchg
cmp
out
mov
or
movsl
sti
orl
cmc
or
lock
mov
push
ss
push
pop
repnz
xchg
pop
std
lds
and
fildl
fbstp
add
cld
popa
popa
push
jo
rcr
push
testb
sub
es
cmp
cmp
add
pop
cmp
jg
pushf
push
lds
cld
fstpl
adc
pop
jbe
insb
sahf
cmp
push
test
pop
fisubrl
movsl
dec
and
rorl
adc
ss
sbb
dec
inc
int
sarb
ss
aas
or
and
mov
push
and
jno
js
imul
xchg
call
pop
les
xor
mov
mov
lcall
ljmp
push
in
add
jbe
out
sub
dec
movsb
out
in
dec
ljmp
inc
dec
xbegin
mov
adc
in
add
fildll
dec
push
and
mov
cltd
fimull
adc
xchg
test
dec
divb
scas
add
es
clc
inc
ret
adc
idiv
add
loopne
lret
fsubrl
sub
ds
icebp
sarl
adc
int3
negb
dec
or
xchg
xchg
adc
imull
dec
leave
loopne
cmp
sub
mov
fcmovbe
lock
sbb
lea
or
cwtl
pop
movsb
mov
ss
imul
notb
in
mov
loop
daa
inc
xchg
aad
add
adcl
aad
aad
sub
icebp
push
shlb
xchg
dec
sbb
jl
cmp
stos
push
pop
shll
sbb
mov
or
arpl
sti
or
loope
mov
scas
inc
aam
cmp
and
push
push
add
call
popf
out
out
dec
push
pop
pop
sti
ret
xchg
mov
test
sbb
push
sub
sub
jecxz
shlb
push
aaa
and
add
jo
ret
jp
mov
inc
mov
sub
add
lds
jnp
mov
push
lods
inc
xchg
inc
in
std
out
ss
mov
ss
add
sub
jge
sub
je
adc
xchg
dec
cmp
xlat
cmp
mov
int
jbe
movsb
movb
sbb
push
inc
pop
xchg
dec
add
stc
add
notl
sbb
add
imul
pop
notb
mov
popf
ja
cmp
jae
daa
mov
out
shrb
pop
std
fcmovne
add
cmpsb
sub
dec
mov
imul
push
pop
jnp
jecxz
inc
mov
movb
add
in
mov
mov
mov
adc
leave
cltd
ss
sbb
jne
pushf
bound
les
push
fnstsw
sub
jecxz
lock
inc
cmp
or
cli
bound
add
test
adc
dec
popf
xchg
xor
push
outsb
mov
jnp
pusha
jg
cli
mov
cmpsb
cmpb
push
sti
xor
aaa
inc
movsl
cltd
jo
sarb
jg
push
push
dec
test
mov
pop
push
movsb
push
pop
push
es
sahf
push
pop
inc
xor
ljmp
aad
repnz
sbb
pusha
cwtl
pusha
out
xchg
ljmp
cli
adcb
stos
cmpsl
jmp
mov
mov
pop
fidivs
arpl
nop
pop
andb
in
aaa
test
push
loop
or
lea
or
pop
leave
push
fdivrl
lahf
mov
mov
popa
push
ja
mov
jbe
or
xchg
xor
push
fistpl
test
fsts
pusha
xchg
mov
call
dec
xchg
lret
aad
jge
imul
jge,pn
sarl
adc
mov
and
dec
cltd
aad
sub
push
xor
lcall
shrl
cli
jbe
add
stc
mov
stos
pushf
lock
pop
xor
loop
dec
pop
addl
add
sub
das
inc
pop
fiaddl
fnstsw
push
outsb
cwtl
gs
xor
add
jnp
inc
mov
jl
pusha
sbb
iret
filds
mov
inc
push
scas
cmp
mov
mov
cmp
push
mov
nop
or
push
dec
push
scas
mov
cmp
mov
mov
sub
mov
scas
shlb
jns
sub
addr16
jle
or
inc
jne
mov
jg
stc
int
test
addr16
icebp
xor
and
cld
clc
push
test
xor
scas
xchg
jo
lret
mov
test
push
ljmp
arpl
push
jp
arpl
sti
pop
mov
ret
out
pushf
mov
push
sub
loopne
imul
js
outsb
cld
call
les
pop
xchg
in
repnz
inc
mov
aaa
add
das
and
sbb
xor
inc
out
mov
outsb
faddl
mov
push
xchg
cmp
mov
ds
lret
mov
sbb
insb
lock
and
mov
xchg
insb
inc
imul
pop
jbe
fistpl
pop
mov
or
fldt
sahf
pop
mov
add
sti
shll
cmp
adc
xor
mov
lea
int3
in
add
mov
pop
xor
stos
jae
in
sub
fdivrl
outsb
fstpl
sbbb
aad
shlb
mov
outsl
dec
call
pop
cmp
xor
pop
sbb
sub
pop
aad
lods
jle
scas
cwtl
cmp
arpl
jmp
popa
jns
fwait
cmp
and
lea
leave
fwait
lods
push
xchg
aas
mov
cli
and
pop
dec
xchg
inc
rclb
call
ret
push
jl
repnz
push
jnp
jmp
cmp
or
mov
lods
mov
push
jg
pop
sbb
mov
lock
fwait
out
lods
stos
test
nop
pop
sub
sub
jmp
repz
and
xchg
mov
cmpsl
xor
mov
jmp
ret
inc
jns
stos
ljmp
js
cld
add
lods
sbb
push
test
jg
lret
icebp
pop
inc
and
cmp
mov
push
pop
loop
out
lods
cld
pop
dec
cmpsb
pop
sbb
nop
mov
je
cltd
cwtl
jmp
repnz
ljmp
hlt
push
pop
push
cmp
sahf
sub
std
mov
sbb
lods
iret
mov
shlb
mov
and
sub
cli
xchg
gs
jae
gs
mov
xor
shl
mov
ss
mulb
in
xchg
pop
scas
xchg
pop
inc
mov
inc
out
rcr
sbb
in
and
and
add
xor
cmpsb
in
jb
push
push
std
dec
fnstenv
cmc
sbb
mov
lret
in
mov
push
mov
shll
inc
xchg
lods
jno
in
or
push
xor
mov
jecxz
stc
mov
scas
call
sbb
mov
and
lahf
push
test
xchg
and
jge
dec
clc
sar
or
daa
adc
lret
mov
sti
sbb
cmp
sub
imul
push
fistps
shl
add
std
ja
mov
mov
sti
addps
leave
je
or
arpl
xor
testb
clc
fs
enter
inc
roll
pcmpgtw
sub
sbb
in
jp
inc
icebp
push
in
imul
dec
and
mov
shl
xchg
cmp
daa
fistpl
or
std
int
lea
cmc
stos
shlb
add
scas
xchg
mov
mul
sub
or
inc
cmp
inc
add
mov
cmpsb
dec
mov
clc
mov
pop
and
cmp
push
dec
lret
in
mov
test
xchg
sbb
repz
jmp
sub
mov
pushf
sub
popa
mov
add
roll
fs
pop
gs
stos
std
dec
dec
psrlw
xor
or
adc
lods
mov
xor
or
in
fadd
nop
mov
lahf
xor
insb
call
mov
fisttpll
mov
push
inc
cmpsl
mov
and
or
mov
test
out
adc
test
andb
imul
movsb
stc
mov
bound
icebp
mov
movsl
into
daa
mov
add
mov
hlt
jp
cld
jmp
mov
add
pop
inc
inc
ja
inc
dec
inc
repz
push
sub
cmc
enter
mov
xor
loopne
sbbb
aam
push
push
push
mov
inc
mov
adc
and
enter
fs
call
out
int3
rorl
jp
rcr
push
xchg
ljmp
movsb
pop
jns
push
cmpsb
jnp
push
data16
add
xadd
add
lea
jge
jp
in
movsl
mov
aas
xor
jmp
jmp
aaa
mov
cld
test
insl
imull
lret
and
sub
xor
lds
pop
lods
push
sbb
test
imul
jmp
push
movsl
jno
cmpsb
js
ja
sub
mov
cmpsb
sub
push
cmp
jl
es
sets
decl
mov
push
dec
test
lcall
rcl
xchg
into
fldenv
jecxz
mov
xchg
icebp
test
adc
pusha
jbe
jmp
inc
sbb
pop
outsb
sbb
mov
add
xchg
mov
jecxz
gs
out
lret
ret
scas
and
loopne
clc
push
cwtl
pusha
mov
lods
xchg
enter
push
inc
xchg
jno
cwtl
mov
cmp
jge
ret
cli
je
mov
pop
sub
xor
pop
xchg
jg
adc
outsb
imul
out
sub
xchg
mov
lret
imul
sub
xchg
cmpb
imull
pop
sub
test
sbb
rclb
sub
jne
jb
in
pushf
aaa
mov
jle
mov
add
inc
lcall
outsb
cwtl
outsb
out
scas
test
loop
xor
mov
jg
mov
push
mov
and
sub
sub
or
jo
enter
arpl
lods
or
jecxz
push
and
push
or
add
add
daa
rcll
xchg
leave
les
cmp
jle
jl
shlb
or
jge
cmp
out
lcall
fwait
mov
lahf
cs
aam
push
push
daa
pop
pusha
pop
mov
dec
pop
xor
outsl
lods
fsubs
fs
mov
pop
icebp
repnz
pusha
dec
and
jo
pushf
shlb
mov
and
ds
or
imul
fisubrl
fisubrs
push
testb
mov
lods
jmp
adc
jnp
mov
and
cmc
inc
aaa
or
push
and
inc
push
ss
jg
pop
cld
add
movsb
pop
lock
and
std
pop
ss
iret
hlt
sub
sub
push
test
fimuls
cmp
jge
in
imul
lcall
repz
andb
cs
push
xchg
and
sbb
lret
bound
sbb
iret
dec
jle
gs
sbb
je
jmp
ret
adc
cmp
add
int3
add
aam
pop
and
jmp
sarb
sbb
test
ljmp
lcall
jle
add
dec
out
and
or
loop
sbb
std
xlat
xchg
xchg
inc
rcrb
xchg
pop
and
out
in
out
pop
movsl
jl
push
push
cmpsb
xchg
mov
lret
cmp
pop
int3
jns
fnsave
sub
pusha
push
xchg
dec
cmpsl
pop
movsl
clc
and
inc
adc
int
fstl
mov
faddl
add
scas
fisubl
cmpsl
cmc
inc
shl
xchg
pop
loopne
xor
pusha
adc
insl
pusha
push
or
ret
mov
daa
movsl
std
inc
rol
in
xor
not
jb
in
inc
mov
mov
or
sbb
push
jne
ljmp
leave
xchg
shl
adc
stos
mov
push
push
stos
mov
outsb
jl
imul
xchg
xor
lret
pusha
pop
adc
mov
or
cmp
xchg
push
enter
mov
push
mov
cltd
and
adc
inc
add
sbb
xchg
mov
ret
loope
popf
inc
mov
std
cli
mov
sbb
int
subl
dec
sbb
pop
jo
lods
xor
cmpsl
and
xchg
dec
sub
push
adc
mov
sarb
push
sub
mov
cmp
iret
jnp
aas
mov
dec
mov
adc
popa
dec
cli
xchg
stos
int
cmp
sbb
js
fucomi
sbb
mov
movsb
clc
inc
jl
stc
cmp
fdivr
add
lcall
jl
sbb
dec
call
jae
adc
dec
xorb
jmp
addb
rclb
hlt
mov
test
sub
cltd
clc
pop
or
mov
mov
push
hlt
test
in
lahf
jnp
sbb
and
add
sbb
int
push
push
scas
pop
out
loopne
mov
lods
jle
lea
push
sbb
or
in
jae
jnp
xor
xor
inc
jne
jo
aad
es
xchg
mov
arpl
xor
call
jl
dec
dec
ret
adc
sbbl
mov
cmp
add
enter
fistpll
jle
pop
lahf
fmuls
cwtl
mov
sub
fs
insl
jb
test
adc
dec
xlat
pop
int3
push
lret
push
jge
push
pusha
pushf
sub
lcall
addb
sti
iret
adc
sub
jg
clc
jae
in
push
loopne
mov
push
xor
push
repnz
fyl2x
adc
in
or
fwait
sub
add
mov
ss
pop
sbb
jns
mov
lods
lea
and
or
aam
cmp
pop
add
fwait
xor
pushf
hlt
dec
xchg
adc
jb
or
adc
mov
inc
sbb
push
jae
jmp
mov
xchg
stos
and
pop
cs
pop
mov
fsubrs
cmp
dec
bnd
push
adc
inc
pop
lea
mov
adcl
ljmp
loop
mov
fmuls
xchg
sub
push
aaa
sub
arpl
jbe
shll
stc
sti
addb
pop
idivl
dec
test
mov
sub
cmc
cmc
lods
cmpsl
push
and
cwtl
and
test
cmp
jp
cmpsl
scas
lods
sub
in
aad
jns
mov
or
cltd
cli
sbb
sub
fistpll
scas
xchg
xchg
sbb
xchg
xor
mov
popf
ljmp
test
lea
insl
mov
aas
push
pop
add
fnstenv
mov
outsl
in
add
and
and
mov
ss
jbe
out
adc
call
popf
divb
jmp
adc
dec
jno
pusha
rclb
les
cmp
mov
outsb
ret
or
lahf
nop
pusha
jecxz
pop
shlb
push
xchg
sub
add
or
add
push
lahf
jl
xchg
loopne
cmpsb
repz
and
dec
dec
sahf
jnp
hlt
mov
scas
fwait
out
popa
or
push
cmp
jmp
js
xchg
pminsw
and
adc
and
mov
sub
fstl
jl
xor
lret
test
out
lcall
dec
add
inc
and
outsl
mov
adc
movsb
and
jle,pn
insl
loopne
or
ds
mov
jg
movsb
ret
sbb
mov
cmp
int
cmpsl
ret
js
xchg
add
sub
hlt
mov
loope
popa
pop
aaa
cs
adc
out
fmuls
idivb
into
jns
in
imul
insb
mov
cmp
sub
lock
js
push
rcrb
pop
cmpsb
sbb
xchg
sbb
enter
add
clc
or
dec
cltd
divb
insb
sub
dec
dec
arpl
imul
int3
fdivs
pop
and
mov
in
mov
xchg
sub
pop
xor
jae
inc
push
sbb
in
sti
popa
jmp
jp
push
inc
sub
test
ret
int3
shlb
negb
xchg
sub
pop
push
dec
out
mov
xchg
push
push
jb
push
rep
fmull
sub
dec
cmp
add
xchg
add
addr16
push
inc
mov
dec
or
sbb
test
lret
out
lret
inc
rcll
ds
push
scas
popa
ljmp
test
lret
lds
add
inc
jns
mov
int3
es
fmull
or
inc
iret
cmp
gs
cld
inc
adc
fnstsw
cmpsl
push
shr
mov
mov
xchg
mov
data16
cmp
or
adc
xor
xor
fwait
je
ss
xchg
ret
rcl
add
or
test
stc
mov
mov
test
mov
jl
call
xor
and
pusha
popf
cmpsb
mov
sub
in
call
sub
add
cld
in
mov
lods
adc
inc
push
and
loopne
imul
jge
repz
aas
add
out
or
push
outsb
int
mov
add
enter
cli
leave
adcb
in
inc
and
loop
fidivrs
popf
cmc
lods
mov
cmp
jbe
mov
int3
push
insl
jg
pop
loop
inc
mov
imul
dec
xchg
and
iret
sub
aas
mov
mov
mov
push
ret
jnp
jge
push
loope
jecxz
mov
outsl
mov
push
xchg
loope
shll
inc
and
cmp
mov
fwait
lds
cs
pavgb
mov
sbb
insb
mov
ds
or
xlat
loop
fsubs
jae
push
pop
mov
and
jmp
mov
sbb
movsb
pop
dec
ja
arpl
cli
in
mov
adcl
push
mov
out
sub
js
sbb
add
js
lods
adc
aad
sti
jl
call
sub
dec
mov
push
adc
pushf
test
test
js
cmp
xchg
and
cli
les
mov
test
adc
cwtl
jnp
in
jbe
cltd
clc
add
mov
cmp
stos
dec
xchg
bound
scas
inc
fwait
ror
xchg
adc
pop
and
addl
pop
pushf
lods
mov
jecxz
dec
add
test
in
pop
jle
in
leave
hlt
push
mov
pop
scas
ja
push
scas
int
mov
mov
mov
adc
incl
jmp
or
je
jge
jb
ds
fsubrl
cld
arpl
add
call
sub
orb
es
sarl
xchg
loope
cli
aam
mov
clc
outsb
mov
mov
xor
cmp
pop
dec
fld
and
mov
and
dec
mov
fdivl
sbb
mov
loope
push
int
stos
pop
adc
and
ja
and
dec
or
out
dec
dec
movsb
and
cmc
fcomps
xchg
xchg
adc
test
push
stos
jge
notb
cmp
push
notl
lods
pop
pop
xor
xor
xlat
sub
add
sbb
out
jb
outsl
mov
and
inc
pop
cld
fsubrl
ljmp
sbb
loop
dec
mov
push
ja
add
dec
mov
dec
addr16
jmp
loop
imul
fsubr
repnz
in
sbb
aam
in
dec
insl
cmp
inc
jl
cmpsl
pusha
mov
sub
mov
push
scas
pop
or
push
aam
call
adc
imul
clc
fxch
xchg
ljmp
dec
sub
add
add
mov
inc
pop
test
push
push
push
xchg
xchg
bound
xor
pop
xchg
scas
jmp
inc
test
mov
and
inc
std
cmc
sti
out
loop
jmp
mov
xchg
scas
cwtl
outsb
in
mov
push
pusha
fwait
mov
nop
push
jp
shl
and
cmp
jg
shrl
pusha
movsb
pushf
add
cs
cs
cmc
add
push
cmp
inc
pop
and
xor
inc
popf
out
lret
test
mov
add
outsl
sub
push
cmpsb
sbb
iret
ja
push
adc
xor
add
jbe
stc
sub
ja
scas
dec
fdivs
inc
and
xor
sub
xchg
jmp
mov
int
mov
loope
outsl
inc
adc
mov
out
gs
out
lods
mov
adc
int3
cmpsb
int
add
testl
jl
mov
jne
lahf
test
mov
mov
mov
or
sbb
sub
shrl
fbld
push
insl
push
xchg
js
adc
call
lods
sbb
pop
lods
jno
mov
outsb
daa
scas
inc
cmp
lcall
xlat
mov
movsb
cmpsb
xlat
aaa
imul
dec
inc
clc
inc
push
lods
movsl
lret
cli
jg
dec
mov
insl
sahf
sbb
sbb
jns
cld
add
pop
int3
or
dec
jmp
xor
movsb
out
and
scas
addr16
fsubs
and
clc
cli
insl
out
xor
mov
mov
mov
movsl
inc
gs
xor
pop
pop
std
adc
in
add
cmc
cmp
xchg
add
or
fimull
fbld
and
shrl
or
pop
mov
push
repz
mov
rcll
ja
out
jnp
adcb
pop
andl
mov
and
xchg
rcrl
imul
pusha
sub
es
or
pop
or
jge
pop
in
adc
mov
push
out
ficoml
out
or
test
jae
pop
outsl
adc
push
mov
test
pop
mov
or
aaa
ret
mov
jecxz
cmp
jne
push
push
sub
loopne
cs
lahf
push
push
mov
push
cmc
inc
sub
xchg
repz
lock
dec
pop
cmp
pop
lcall
adc
movb
cmp
mov
sbb
mov
popl
pop
fsubrs
xor
or
ja
sub
xchg
adc
or
and
insl
cltd
push
call
mov
mov
inc
shrl
lock
ret
je
ret
loope
pop
cwtl
add
xor
shlb
adc
clc
test
cmpsb
jo
inc
outsb
add
cli
jmp
into
enter
push
mov
sub
cwtl
dec
sbb
pop
adc
xor
leave
mov
scas
loop
push
xchg
in
out
dec
mov
and
jae
repz
shrd
movsl
sbb
ja
es
pop
bound
jg
dec
xor
jecxz
jmp
mov
dec
sub
je
push
sub
xor
sbb
daa
push
notb
sbbl
addr16
fwait
xorl
cld
stos
sbb
push
pmuludq
sub
mov
xor
lods
inc
inc
xchg
shlb
jae
mov
jg
out
xchg
dec
jmp
inc
inc
jnp
jb
je
sti
mov
sbb
shll
adc
push
mov
or
popa
loopne
pop
push
les
and
jbe
jno
or
push
ljmp
mov
push
in
hlt
lods
aad
sbb
sbb
xchg
das
ret
stos
fsts
dec
sbb
bound
sarb
push
rolb
in
ds
fdiv
shl
and
dec
or
add
shrb
ficoml
sarb
outsl
xor
cltd
cmp
lcall
mov
sbb
in
out
icebp
mov
sbb
idivl
adc
xor
dec
jg
sub
or
sbb
loopne
mov
insb
shll
inc
pop
push
out
or
and
push
lods
je
pop
divl
mov
pushf
cmp
imul
dec
or
ret
loop
pop
dec
insl
daa
add
adc
dec
mov
repnz
dec
add
push
and
cs
sbbb
adcb
cmp
pushf
lock
sub
out
mov
pop
add
cmpsb
adc
test
fmuls
popl
inc
movsl
fdivrl
sub
stos
lods
mov
cmpsb
aam
xor
and
lahf
pop
mov
in
jg
in
jae
movsb
push
push
push
jbe
sub
pop
mov
add
pop
pop
mov
cmp
mov
xchg
push
xor
in
jbe
or
push
or
sbbb
inc
movsl
mov
cld
insl
rcr
dec
push
push
push
jb
dec
sbb
sub
or
inc
inc
outsb
and
pop
xorb
or
rorl
call
rorb
sbb
call
ret
rorb
inc
ja
cld
sbb
xchg
xchg
ds
je
cwtl
mov
fdivr
hlt
arpl
push
mov
scas
sbb
lret
pop
scas
sbb
dec
repnz
pop
jnp
jp
in
jnp
scas
iret
pop
clc
lods
pop
aas
adc
inc
fsub
add
rcrl
pop
icebp
jge
negl
test
pushf
or
lds
aam
xchg
and
mov
or
iret
hlt
test
ljmp
push
pop
cwtl
icebp
ja
rcrb
sbb
push
inc
test
rorl
or
roll
sbb
or
rep
sub
lea
xchg
lods
pop
fwait
pop
stos
mov
sbb
test
std
sub
scas
add
addr16
ret
mov
or
nop
mov
cmp
sbb
cmp
sbb
in
sub
sbb
les
mov
dec
fisttpll
xorb
rcl
movsl
pop
imul
jg
mov
frstor
mov
dec
inc
fildl
bndldx
out
popa
mov
xchg
outsl
push
movsb
aaa
leave
scas
imul
add
sbb
test
pop
pop
cs
loop
sub
das
dec
loopne
mov
cld
mov
pusha
sub
add
inc
mov
jae
mov
xchg
mov
mov
mov
mov
popf
dec
stc
dec
movsl
adc
sbb
mov
pop
lcall
in
add
ja
adc
rclb
int
in
mov
sbb
push
fbld
jge
mov
cmp
xchg
pop
lret
adc
addl
das
dec
in
inc
xor
push
imul
mov
xorb
xor
test
add
data16
or
adc
aaa
sahf
inc
push
inc
ret
fwait
add
xchg
dec
loop
push
xchg
xorl
dec
fidivs
setne
mov
sbb
push
jecxz
or
scas
lods
fdivs
nop
jo
rorl
testb
and
outsl
popa
bnd
sbb
nop
je
lock
int
dec
adc
shr
or
sbb
jnp
leave
shlb
jae
neg
xchg
mov
inc
popa
mov
aam
dec
add
jle
ljmp
cmpsb
mov
push
fisubs
out
repz
jl
xor
stos
and
stos
je,pt
or
or
jecxz
sbb
and
fldcw
cltd
out
mov
fists
sub
push
jp
and
xchg
cmp
mov
push
rcl
jg
stos
lret
insl
lods
loope,pt
pusha
mov
mov
outsl
scas
out
mov
cmpsb
or
xchg
addr16
in
or
or
xchg
add
mov
jb
daa
negb
shr
or
mov
lea
dec
jl
push
push
push
xchg
or
loope
arpl
mov
fisttpl
jp
pusha
xchg
sub
aad
mov
adcl
sub
test
adc
popa
xor
jno
cmc
es
sub
jne
test
daa
adc
inc
rcrl
insb
mov
adc
sub
mov
pop
js
push
lret
popa
pop
xor
loopne
ljmp
in
mov
adc
fs
loope
cmpb
sub
adc
adc
push
scas
sub
jmp
scas
jmp
dec
push
or
or
fisubrs
jne
outsb
cld
arpl
add
pop
or
icebp
mov
into
push
jp
movsb
mov
mov
repz
pop
jmp
fidivs
addb
arpl
out
xor
out
pop
inc
jmp
cltd
cmpsb
jae
pop
jge
cmpsl
mov
inc
and
push
out
mov
push
addl
cmp
mov
jne
sti
rcl
xchg
sub
xor
ss
sub
sahf
sub
pop
xor
and
sahf
xor
xchg
int
jae
mov
movsl
inc
nop
mov
jge
popf
cmp
lahf
xchg
push
or
jg
cmpsl
and
sbb
js
popa
int3
int3
mov
iret
xchg
inc
inc
arpl
and
sbb
mov
outsb
imul
xchg
dec
push
mov
in
pushf
inc
xchg
lahf
subl
mov
push
or
or
jl
stos
stos
daa
int3
in
push
push
mov
dec
or
dec
pushf
mov
jmp
popa
subl
sbb
fwait
adc
stos
stc
fimull
dec
lret
and
xlat
mov
adc
mov
mov
xor
ja
fsub
test
push
iret
pushf
dec
sub
pop
dec
jno
sbb
fidivs
or
cmp
scas
outsl
pop
mov
imul
jg
add
cmpsl
or
mov
or
sti
insl
out
scas
fs
js
inc
sub
sbb
cmpsb
hlt
xchg
cmp
ds
xor
mov
das
lods
test
lock
cmc
fsubs
pop
push
es
outsl
push
test
mov
cs
fcmovnbe
adc
int3
mov
cmp
cmp
sub
ljmp
cmp
nop
jnp
shll
or
mov
testl
mov
mov
sti
outsb
pop
add
add
mov
cmp
in
ds
pop
insb
daa
sbb
push
adc
and
and
inc
pop
fmuls
push
adc
into
jge
pop
mov
dec
mov
bound
pop
inc
add
fwait
mov
call
fs
cmpl
sub
push
mov
dec
scas
cmpl
pop
pushf
leave
pusha
lods
call
out
sbb
std
mov
loopne
push
outsl
scas
hlt
sbb
outsb
jb
test
jnp
xchg
int3
xchg
adc
push
outsl
imul
into
mov
das
xor
iret
pop
cmp
xchg
mov
imul
mov
sbb
fisttpll
push
push
mov
fdiv
js
or
cli
sbb
adc
test
nop
xlat
push
xchg
mov
cld
aas
cwtl
test
loope
jb
daa
lods
les
fldcw
inc
fstp
faddl
adc
add
int3
int
mov
sub
push
sbbb
cltd
enter
test
std
inc
fwait
in
aad
jbe
jns
bound
int3
rclb
lcall
inc
mov
push
outsb
mov
pop
mov
jle
xchg
mov
test
div
sti
in
add
cmp
into
cmp
lock
int
adc
pop
jbe
cmp
rcrl
xchg
insb
mov
sub
jno
imul
ret
xchg
add
jmp
and
cmp
in
orl
cld
jbe
ss
jno
aas
fwait
into
loope
inc
cli
dec
and
add
aas
dec
jb
stc
rcrl
test
rolb
mov
sbb
les
and
test
jbe
fldt
jbe
sarl
sbb
int
dec
or
xchg
add
stc
addr16
pop
xchg
push
enter
jmp
loope
popa
jne
adc
hlt
mov
push
adc
and
lods
insb
dec
push
adc
iret
ds
push
ret
iret
ds
shlb
leave
outsl
inc
xchg
shll
dec
loop
push
cmp
repz
das
cmp
xchg
nop
adc
mov
ret
cmp
pop
test
sub
push
stos
into
mov
out
daa
sbb
and
ja
ficoms
push
mov
pushf
shrb
or
cld
arpl
fstl
mov
in
cmp
adc
xor
stos
dec
mov
xchg
push
inc
sbb
fsubs
ss
mov
mov
je
pop
repnz
mov
ljmp
lea
jb
psraw
xchg
push
push
bound
mov
rcrl
adc
call
fmuls
stc
clc
cmpsb
in
pop
push
ss
pop
es
mov
sbb
add
getsec
scas
out
jge
mov
dec
pop
sub
cwtl
inc
pushf
jl
and
sbb
rolb
mov
jns
loopne
out
cmp
sahf
jne
lds
out
loope
and
ret
arpl
jge
bound
es
jp
aad
xchg
int
xor
pop
lret
mov
xchg
lea
mov
mov
cltd
sbb
clc
pushf
pop
es
jle
mov
into
es
adc
sbb
testb
mov
inc
bound
xlat
stc
je
mov
pop
inc
pop
pop
or
mov
cs
xchg
repz
and
inc
stos
pop
jmp
xor
pop
data16
icebp
pop
mov
pop
jle
mov
push
or
sub
xchg
mov
out
ret
sub
xor
mov
mov
sub
push
out
jmp
loop
sbb
clc
sub
xchg
int3
mov
cmc
xchg
insb
dec
fcompl
cli
orb
sti
mov
ja
add
inc
mov
test
sbb
xchg
jae
push
insl
test
popa
mov
enter
mov
adc
adc
sbb
popf
testb
pop
fistps
or
lret
pusha
call
xor
jmp
pop
sub
dec
shrl
jg
outsl
ds
xchg
mov
rcll
or
sub
jb
push
push
int3
loop
inc
daa
xor
push
pop
cmc
sub
push
mov
cwtl
push
or
cld
in
pop
mov
and
add
push
mov
pop
fsubs
cmp
gs
mul
mov
mov
jp
cmpsb
insl
repz
cs
inc
jbe
or
push
mov
rolb
cmp
jecxz
arpl
icebp
hlt
inc
cmp
das
xor
xor
cli
loopne
sbb
cwtl
push
pop
or
xchg
imul
popf
lea
ret
mov
cld
inc
adc
sub
dec
movsb
pushf
ret
add
add
push
jne
dec
inc
xorl
test
adc
mov
xchg
and
cmpsl
stos
jmp
in
xor
js
pop
xchg
hlt
jnp
xchg
push
rcrl
pop
mov
push
dec
loopne
xchg
push
and
pop
mov
movsb
xor
sub
shl
adc
jns
sbb
jmp
mov
xchg
scas
or
sti
jo
and
xchg
daa
insl
pop
outsl
push
icebp
repnz
mov
jne
jg
repz
cmc
inc
adc
xchg
rol
push
xchg
adc
gs
push
sarl
test
sbb
outsb
scas
mov
push
xchg
jl
andb
loope
aas
jo
aaa
rorb
fdiv
and
jnp
adc
or
mov
sbb
popf
add
sti
int3
sbb
push
popa
jg
sbb
and
andl
sub
fucomi
add
add
fnstcw
std
bound
mov
test
repz
shl
fadds
cmp
and
loope
add
std
push
dec
jb
inc
adc
lods
roll
out
scas
mov
outsb
dec
push
xchg
sbb
cld
das
orb
xchg
push
sub
dec
dec
enter
fld
mov
sbb
fadds
rorb
mov
call
and
mov
push
mov
mov
pop
ljmp
mov
mov
sbb
inc
cmp
imul
xor
sub
jecxz
stc
or
negb
ja
pop
dec
mov
dec
adc
test
test
shrl
popf
fcomps
popf
push
jle
inc
shl
push
adc
outsb
pop
setne
inc
hlt
or
outsl
adc
mov
scas
adcl
das
jp
xor
lcall
pop
sti
out
xchg
and
sbb
cmp
sub
push
cmpl
call
pop
dec
je
icebp
cmp
jecxz
es
cmc
popf
jns
push
mov
cmp
pushf
push
pop
mov
cmp
js
iret
xor
jo
pop
fdivl
push
or
test
jmp
int3
stc
popa
inc
ljmp
mov
cs
xchg
aad
cmc
push
scas
sub
incl
gs
test
rcrb
add
stos
scas
shlb
sbb
or
mov
and
inc
insb
add
xchg
in
lcall
hlt
dec
push
cvtpi2ps
xchg
or
imul
mov
xchg
inc
mov
nop
xchg
adc
cmp
je
daa
mov
mov
dec
xchg
ss
jmp
push
add
fdivs
pop
lret
sub
outsb
push
imul
arpl
mov
mov
roll
mov
jmp
sub
cld
and
jno
push
mov
cmp
inc
inc
pop
adc
push
icebp
xchg
sti
or
xor
xchg
jmp
out
pusha
or
call
loop
mov
jge
cmp
or
and
test
jmp
mov
adc
dec
lock
dec
fdivl
xchg
pusha
mull
int
arpl
in
fucomi
xchg
xor
pop
mov
aas
loopne
stc
jmp
push
stc
push
adc
out
pop
ror
data16
xchg
test
add
adc
loop
loope
pop
call
rcr
fiaddl
sub
inc
or
jmp
testl
mov
mov
scas
jg
pop
shrb
nop
or
es
mov
insl
sub
push
mov
insl
push
and
loope
lock
sub
arpl
sub
and
scas
add
add
loope
mov
jp
cmp
es
adc
fsubrp
lahf
inc
lods
outsl
das
hlt
sbb
xchg
test
push
mov
mov
cmpsb
jae
lcall
push
add
outsb
pop
pop
xchg
test
loop
jbe
adc
sarl
push
jo
mov
or
cmc
movsb
leave
jle
test
lahf
jae
fwait
cmp
sbb
or
imul
jl
dec
or
pop
cld
mov
adc
ds
push
ret
addb
aad
and
xchg
jg
push
or
mov
inc
sbb
push
adc
add
sbb
push
xlat
inc
ds
sub
lea
in
pop
mov
loop
dec
jns
data16
cmp
cmp
cli
lock
sub
jns
hlt
push
shrb
pop
cltd
mov
inc
xlat
push
sbb
in
fucomp
or
pop
ljmp
fisubrs
push
cmpsl
dec
outsb
push
pusha
xor
jo
inc
sub
adc
mov
sbb
adc
pusha
fmull
faddp
lock
stc
lret
mov
push
push
mov
rcrb
sbb
sbb
test
dec
ds
ss
out
adc
fimuls
mov
insb
dec
adc
pop
mov
mov
jge
popa
adc
outsl
addr16
int
xor
aas
pop
mov
sub
test
xchg
movsb
je
loop
in
sbb
xchg
sti
pusha
loop
add
nop
sub
jge
push
jle
aas
in
pop
scas
fwait
loop
sahf
aad
decb
cwtl
lcall
scas
jge
dec
push
jmp
push
lods
lods
add
sbb
daa
pusha
fwait
mov
jae
ds
jo
aaa
fsubl
popf
jle
or
aaa
mov
xchg
inc
add
stos
sub
mov
cwtl
mov
daa
std
mov
in
lret
lahf
pop
push
add
stos
cmp
pop
or
jnp
inc
stc
inc
in
leave
xor
cld
jp
mov
push
mov
mov
mov
dec
jge
sub
adc
add
add
sub
cld
cmc
dec
clc
hlt
jo
mov
dec
push
and
gs
or
mov
cmp
jge
and
test
and
icebp
std
das
xor
cmpsb
sbb
xchg
mov
out
jmp
sub
js
sub
pop
aaa
lods
or
arpl
xchg
bound
lock
pusha
lods
les
out
sbb
mov
cli
push
mov
aas
pop
scas
fsubrl
ja
jns
filds
inc
adc
jb
mov
enter
dec
sub
cmp
je
lods
icebp
and
es
add
stc
test
cmp
fucomi
push
inc
fwait
push
pop
push
ss
movsb
xor
bound
sbb
cmpsl
sub
xchg
shlb
mov
insl
aad
push
jmp
mov
imul
loop
or
push
pop
call
movsl
cmc
adc
cmp
out
into
xor
push
mov
shll
mov
or
cmp
add
int3
push
dec
fcmove
jo
push
cwtl
xchg
mov
push
cld
bts
les
and
in
push
cwtl
mov
test
add
xchg
imul
cmpsl
arpl
imul
scas
nop
in
addr16
mulb
xor
clc
adc
inc
flds
fistps
sbbb
add
sub
add
jmp
push
jmp
push
push
mov
mov
mov
les
xor
or
cli
pop
adc
or
lods
pop
repnz
rcrb
xchg
mov
push
movsl
push
mov
sbb
adc
cmp
inc
push
enter
ds
add
enter
cmc
jns
push
or
sbb
xor
xor
scas
negl
enter
andb
inc
xlat
cmp
ret
xor
roll
fimull
shrl
push
cmpsb
jnp
pop
daa
addr16
shl
aam
inc
add
sbb
arpl
imul
outsl
lds
int
dec
xchg
mov
jecxz
daa
xlat
mov
or
lods
xorl
popf
jnp
cwtl
shll
adc
arpl
sbb
pop
jno
lret
pop
stos
outsl
lcall
add
lret
ret
lret
aam
inc
rclb
xchg
mov
jb
xchg
jnp
mov
mov
gs
test
and
mov
outsl
dec
cmp
add
int
in
aaa
dec
mov
jnp
imul
pop
mov
pop
fisttpl
mov
stos
out
adc
call
repz
or
sub
push
orb
daa
and
jns
into
call
ja
mov
cmp
lock
mov
movsb
dec
xchg
ljmp
mov
in
mov
xorl
lds
pop
insl
jnp
mov
xchg
gs
outsb
xchg
bswap
cmp
sbb
dec
test
jmp
or
push
sub
movsb
jbe
in
mov
sarb
xchg
scas
xlat
fdivs
insb
insl
sub
sub
in
mov
fcomps
loope
jo
xlat
cmp
test
out
sahf
jecxz
outsb
cmp
aaa
sub
push
fcoml
xchg
rolb
sti
push
jne
jmp
mov
adc
inc
xor
or
sar
insb
and
mov
movsl
enter
js
das
xor
dec
push
mov
gs
rcrb
mov
adc
add
enter
aas
dec
loope
nop
xchg
ljmp
cmpsl
daa
xor
lods
xchg
xchg
jne
in
and
jo
cmp
cmc
cwtl
adc
inc
fmull
jle
adc
or
dec
push
jmp
bound
pop
negb
sbb
adc
push
pop
xchg
sbb
adc
jnp
xor
mov
inc
pushf
cmp
push
pop
jae
jnp
es
pop
cli
or
and
xor
xchg
pop
stc
xchg
push
orb
test
push
fmul
pop
jg
adc
ror
je
mov
jecxz
nop
imul
arpl
cwtl
inc
push
xchg
mov
fnstenv
pop
mov
push
mov
jo
pop
out
inc
pop
ja
dec
xchg
pop
rorl
cs
hlt
or
mov
dec
push
cmp
mov
or
das
cli
pop
mov
mov
outsb
mov
loope
mov
mov
jne
sbb
push
lock
cmpsb
dec
addr16
movsl
add
ja
outsb
jg
inc
dec
mov
xchg
shrb
inc
ja
jmp
out
aad
cmp
sbb
mov
lea
test
pusha
push
bound
mov
fwait
cmc
mov
dec
rclb
insl
imul
stc
mov
inc
mov
test
hlt
jge
mov
into
popa
xor
push
scas
sbb
cmp
call
dec
mov
sahf
and
and
fadds
sub
popf
add
push
das
fcomps
mov
mov
clc
adc
push
jl
inc
sti
nop
cmp
mov
mov
dec
xchg
or
mov
ss
in
push
shll
add
mov
or
sub
sub
stos
insl
repnz
rorb
addl
push
jl
xor
bound
jg
mov
ror
icebp
xor
or
add
add
filds
or
push
push
fistl
aam
scas
xchg
fldenv
push
add
and
aam
loope
xor
sbb
sti
aas
jp
int3
hlt
jl
imul
push
in
call
xchg
xchg
aaa
repz
popf
movsl
mov
jo
outsl
fdiv
repnz
andb
retw
mov
and
sbb
jmp
push
dec
push
mov
and
xor
xchg
cltd
lret
xor
mov
sbb
jg
add
icebp
subb
mov
insb
mov
mov
jnp
rorl
lea
xchg
xlat
add
inc
out
leave
and
mov
xchg
push
fcomip
sarl
in
ret
outsl
stc
pop
addr16
cmp
cli
je
cmp
mov
movsb
cld
je
out
dec
sub
inc
sub
or
filds
xor
or
rcrb
dec
dec
ljmp
or
mov
jae
mov
cmp
sub
sti
xor
insb
das
cmp
je
stos
or
jne
mov
pop
push
cmp
and
xor
push
mov
aam
sub
pusha
das
jle
cltd
stos
int
sbb
xchg
test
mov
xchg
loope
popa
pop
sti
jle
inc
pop
mov
xor
iret
jbe
pop
mov
jae
inc
pusha
sti
mov
lds
movsl
inc
aaa
xor
mov
mov
xor
xor
int
mov
push
jle
stc
out
sub
fisttpll
add
adc
dec
ret
xchg
sbb
lock
lcall
mov
push
jl
test
sub
jg
adc
fbstp
mov
pmaxsw
xor
add
push
aad
fldz
adc
mov
fldcw
mov
popa
mov
idivb
mov
shlb
lods
insl
ja
adc
lock
mov
inc
lcall
js
xor
adc
inc
cmpsb
fstpl
jp
ret
clc
movsb
dec
fisttpl
jbe
inc
test
xor
loop
arpl
mov
adc
idiv
roll
lret
mov
inc
xorps
rclb
ljmp
xchg
cmp
xchg
adc
sbb
mov
out
cmp
push
cmp
cli
jne
xor
add
ss
aas
jle
lret
lds
bound
jmp
lock
shll
mov
adc
sbb
mov
in
mov
inc
jae
xor
out
mov
jg
mov
mov
inc
data16
into
dec
xchg
sub
inc
scas
cltd
dec
fwait
out
jb
sbb
and
and
pop
mov
or
or
add
out
cltd
push
mov
dec
in
mov
jo
decl
lea
xchg
imul
pop
mov
and
mov
pop
scas
mov
inc
repz
out
fdivl
fstpt
or
adc
fildll
ret
aaa
mov
je
sti
sahf
mov
add
mov
lods
popf
add
mov
xchg
ljmp
ljmp
mov
scas
mov
mov
push
and
in
pop
insl
dec
es
mov
xchg
or
push
movsl
cmp
add
std
pusha
sbb
push
adc
mov
int
out
xchg
nop
cwtl
or
mov
cmpsb
jne
push
aas
jmp
ror
sub
and
int3
in
dec
inc
out
stos
pop
fists
sub
aas
xchg
push
gs
xchg
or
gs
adc
int3
or
sub
pop
push
xchg
add
adc
xchg
jecxz
call
push
testb
leave
push
leave
mov
daa
pusha
mov
pop
aam
stc
in
xor
add
xchg
js
xlat
mov
leave
popf
add
push
jmp
mov
jb
dec
cmovo
mov
add
int
mov
push
lret
jge
mov
enter
jne
popa
mov
xor
imul
repz
cmp
jnp
outsl
mov
xor
and
xor
pop
stc
dec
mov
or
pop
mov
je
ljmp
lea
sarb
in
xchg
mov
push
mov
dec
or
popw
pop
or
adc
test
insb
add
std
and
shll
icebp
dec
cmp
cltd
jl
leave
jb
es
xor
dec
addr16
adcl
pminub
push
popl
cmpsl
cmpsl
gs
inc
std
pop
std
mov
inc
and
mov
lret
mov
aaa
sub
cmp
nop
movsl
sbb
xlat
dec
in
nop
daa
adc
cld
or
mov
popa
imul
xchg
xchg
add
xchg
mov
push
mov
jbe
lret
push
les
add
add
cmp
stos
sahf
lahf
repnz
xor
fs
pusha
adc
push
jne,pn
dec
lahf
sbb
pusha
adc
mov
out
lret
cmp
iret
test
inc
sbb
cmp
out
jae
sti
scas
pop
call
jecxz
lods
and
popa
aaa
xchg
cmp
loopne
xor
and
negl
mov
sub
in
push
fwait
lahf
inc
orl
shl
inc
push
imul
cli
jbe
pushf
push
pop
xchg
inc
out
data16
dec
fcomp
test
out
pop
sub
xchg
cmp
push
mov
mov
rcrl
das
roll
mov
sbb
les
lds
stos
add
rclb
xor
stos
stos
dec
popf
adc
outsl
cmpsb
in
imul
filds
fs
fldenv
jb
add
adc
inc
mov
cmp
stos
adc
and
ret
mov
xchg
lods
nop
pop
cs
push
jno
mov
push
and
je
push
movsb
adc
add
rolb
pop
xchg
ror
imul
push
les
mov
shr
in
js
je
mov
stos
xor
ds
xchg
and
bound
inc
adc
lret
jp
orl
jle
adc
pop
call
andb
insl
sbb
aam
cmc
lret
dec
dec
das
and
push
jg
or
popa
mov
or
cmp
sbb
add
dec
adc
sub
mov
pop
in
push
pop
xor
cwtl
push
dec
ret
icebp
pop
mov
cmovl
lahf
lds
jg
inc
adc
insl
cmc
xchg
xor
push
les
orb
clc
jae
repz
out
push
mov
sbb
sbb
cltd
addr16
xor
dec
push
imul
mov
pusha
push
imul
pop
dec
mov
cmpl
neg
stos
lahf
into
outsb
push
fdivrl
fnstcw
aam
out
pop
in
cli
fistpl
pop
pop
add
test
leave
aam
aas
cmp
sbb
lds
inc
mov
jmp
js
adcl
iret
les
add
fwait
sbb
hlt
sub
xacquire
xor
je
inc
aad
shll
shrl
sub
mov
shr
es
or
je
xchg
sbb
cmp
iret
mov
jo
lock
fisubs
test
push
loop
popf
mulb
jb
xchg
cmpsl
pop
lock
sahf
ret
mov
xor
aam
xor
gs
leave
nop
mov
cmp
stos
or
hlt
inc
xor
or
xor
mov
fidivl
jnp
sti
test
lret
sbb
add
mov
or
mov
movsb
pop
pop
insb
aaa
mov
mov
or
jle
xchg
and
into
fsub
add
pop
aad
sbb
cmpb
lcall
jl
leavew
in
cmp
sub
fsubrl
mov
push
dec
pop
scas
les
test
add
mov
fwait
mov
adc
mov
test
jmp
sbb
stc
in
xor
push
nop
jb
outsl
sbb
in
pusha
push
adc
jp
or
cmp
sub
sbb
and
and
and
fwait
sub
aam
test
lret
cs
cmp
loop
bound
push
xorl
push
neg
sbb
subl
sbb
clc
test
pop
or
mov
add
sbb
aas
test
enter
repz
in
push
jns
cld
jb
dec
sbb
daa
mov
sbb
int3
imul
inc
ss
into
push
cmp
cld
aad
dec
xor
adc
test
sbb
cmpsb
js
ss
adc
pop
xchg
mov
push
dec
movsl
int
mov
bound
movsl
adc
mov
mov
pop
and
imul
out
das
adc
loop
imul
push
fisubrl
out
in
and
stc
cmp
xor
jge
xchg
push
ret
add
sbb
stos
sbb
jns
pop
pop
jp
int
push
out
jg
or
mov
cs
push
popf
mov
sub
mov
jae
or
xor
sub
test
stc
mov
adcb
push
insb
outsb
jo
mov
sbb
xorb
xor
inc
mov
push
jae
cltd
and
in
or
sbb
inc
filds
imul
mov
ljmp
fistps
cmp
and
inc
mov
enter
divl
mov
stos
sub
jno
dec
xor
jmp
sti
xchg
fildl
rorb
test
jno
inc
mov
arpl
mov
sbb
cmp
xor
xchg
push
stos
add
sarb
sti
ret
xor
mov
jle
dec
push
insl
pusha
loope
mov
push
mov
inc
sub
xor
sbb
mov
ret
mov
daa
cmc
adc
aas
in
mov
subl
mov
cld
cs
inc
add
into
or
nop
ss
mov
dec
pop
rorb
push
test
push
jbe,pn
xchg
pop
aas
add
mov
xchg
cmc
cltd
inc
dec
comiss
fs
push
in
daa
xor
xchg
mov
in
popa
xor
enter
shl
cs
mull
jno
mov
mov
mov
jge
inc
fwait
mov
rolb
jbe
out
xchg
in
icebp
fisubrs
fcoms
je
mov
mov
jl
stos
aas
inc
in
mov
gs
and
movsb
cmp
pop
dec
mov
scas
xchg
ds
sbb
pop
jp
cs
or
sahf
add
lret
mov
mov
jns
movsb
test
fxch
and
rorl
push
mov
js
pop
loope
pushf
imul
movb
mov
mov
push
shll
leave
sarl
addr16
inc
jmp
loope
out
arpl
loopne
mov
pop
mov
cmc
inc
divb
mov
fdivs
inc
inc
push
stos
outsl
bound
rorl
cltd
add
es
pop
enter
mov
fistpl
and
sub
leave
mov
dec
push
int
aam
jg
nop
adc
mov
jno
cmp
xor
into
test
loope
int
add
test
add
pop
jmp
lret
add
fldcw
pop
jnp
or
add
outsl
lcall
xor
and
xor
in
xor
test
jno
inc
stc
add
mov
call
not
dec
pop
outsl
or
cmpl
cmp
sub
ds
sarl
add
fs
and
or
rolb
or
call
sbb
ror
jnp
sub
mov
scas
je
adcb
pushf
xorl
cmpsb
icebp
pop
or
loop
sub
sbb
loop
and
push
mov
daa
or
les
jo,pt
mov
mov
addr16
push
mov
test
mov
fisttps
mov
mov
sarl
pop
repnz
jne
push
in
icebp
and
pmaxsw
mov
scas
cmc
xchg
scas
fwait
pop
ds
sub
push
sub
dec
or
incb
icebp
inc
sub
int3
or
imul
dec
lds
int3
mov
dec
sti
pushf
lods
insl
shl
in
rclb
push
add
push
push
imul
sbb
cltd
jae
pusha
dec
jecxz
jno
pop
js
sub
lea
push
mov
inc
sbb
mov
mov
pop
popa
xor
mov
cmp
push
jp
fnstsw
clc
sbb
inc
dec
or
mov
rorl
mov
xchg
jb
jge
movsb
dec
iret
ret
inc
and
sbb
push
adc
gs
cmp
out
mov
enter
popa
scas
nop
repnz
loop
mov
xchg
je
xor
xor
pop
pavgb
add
xchg
pop
je
xchg
push
mov
push
mov
fcomps
insl
sbb
in
repnz
mov
pop
mov
ljmp
sti
push
and
inc
mov
sbb
jle
jb
loop
push
push
shll
adc
mov
lret
or
pop
mov
jecxz
js
fs
dec
ljmp
out
cmpl
cmp
dec
and
mov
dec
ret
clc
add
or
lcall
and
mov
cltd
mov
aaa
or
mov
addr16
mov
xchg
cmpsl
stc
cld
adc
lea
dec
push
ss
call
xchg
subl
cmp
mov
loope
mov
pop
cli
js
std
xchg
sahf
push
ret
xor
call
aad
sbbb
fsubp
sbb
xchg
nop
inc
les
dec
push
cmp
mov
push
out
call
inc
ficoml
inc
or
loopne
aas
sbb
mov
ja
push
mov
mov
sbb
sub
pushf
mov
push
mov
call
sbb
adc
int
scas
sub
sub
pop
or
mov
rcll
nop
lds
negb
enter
xlat
adc
cltd
testw
in
sbb
dec
jl
push
shrb
stc
push
fcompl
mov
jnp
outsb
fistl
sahf
adc
ds
loop
xlat
lock
xor
jge
xor
aam
sbb
aam
sbb
cmpsb
mov
loop
push
dec
sahf
mov
gs
lret
jo
mov
scas
in
rcll
jmp
mov
mov
fsubp
lret
adc
out
out
push
lcall
sub
lcall
xor
push
aaa
push
popa
out
cld
shrb
jnp
xchg
pop
dec
aad
push
rcll
mov
and
std
push
dec
in
rorl
inc
dec
xor
adc
inc
leave
jne
push
and
out
xchg
mov
inc
mov
in
dec
and
stos
mov
mov
lcall
push
insb
imul
stos
into
add
stos
cs
cmp
sub
nop
das
orb
add
add
xor
ficoml
pop
test
in
push
or
adc
pop
xchg
push
push
jge
orb
rclb
test
clc
jle
rorl
sbb
pop
into
inc
adc
push
xor
movsb
mov
adc
inc
xorl
jmp
adc
in
mov
push
jns
or
jae
repnz
inc
pop
cmp
fsts
gs
mov
sbb
mov
sub
sbb
add
cmpsl
stos
adc
lods
leave
out
mov
lea
add
repz
pmaxub
int
xor
xor
pop
xchg
xchg
mov
push
push
sbb
xor
jbe
aaa
stc
lcall
lahf
jnp
outsb
adc
xchg
dec
jbe
movsb
jnp
inc
push
jae
scas
or
or
sahf
or
jae
mov
xor
mov
mov
jmp
add
push
div
cmp
jg
call
xor
jle
cmpsl
in
js
inc
xchg
enter
je
xchg
pop
or
lret
mov
ret
push
insl
add
push
jle
test
clc
and
enter
xor
cmp
push
dec
cmp
insl
dec
pop
lcall
or
das
repnz
mov
cli
stos
add
pop
and
aam
dec
pop
mov
xchg
lods
test
or
lret
xchg
pop
stos
push
jno
jg
pop
push
icebp
sub
lods
dec
push
adc
loope
lods
idivb
and
ds
data16
repz
lods
dec
je
loopne
outsb
in
hlt
ret
add
ret
sub
jbe
rcll
aaa
repnz
inc
aad
xchg
dec
movsb
jnp
sub
hlt
push
pop
dec
mov
push
aam
mov
dec
mov
test
leave
adc
mov
orl
pop
adc
in
cmp
mov
add
sub
call
lret
je
add
cli
shll
mov
stc
aam
push
mov
push
in
xor
cmpsl
sarb
sub
mov
scas
lcall
cltd
dec
inc
push
mov
sub
cmp
jne
cmp
mov
adc
mov
cmp
add
scas
ljmp
test
xchg
push
outsl
adcl
enter
xor
mov
lret
or
std
jg
enter
adc
mov
sbb
cmp
push
scas
cmp
roll
xor
or
sub
sub
in
in
xor
adc
xchg
repnz
addb
mov
inc
mov
andb
mov
mov
push
das
rcll
pop
test
mov
pop
push
and
lods
stos
xor
cs
push
or
push
out
sbb
jle
lret
lret
fldcw
cmpb
mov
or
jns
addr16
add
push
ss
add
and
nop
stos
push
dec
add
jge
xor
jmp
fcomp
mov
or
sbb
addr16
scas
scas
pop
test
fdivr
xor
mov
dec
js
push
adc
dec
adc
in
fmuls
mov
sbb
pop
jb
xor
repnz
ss
dec
push
dec
loopne
xchg
inc
mov
push
sbb
or
dec
cs
andl
rcll
pop
clc
dec
stos
mov
xchg
adc
xchg
jg,pn
dec
adc
add
sbb
push
push
out
xor
add
sahf
push
mov
push
shlb
iret
mov
jg
xor
sahf
push
dec
mov
scas
fidivrl
dec
sub
lahf
adc
arpl
cmp
enter
push
mov
mov
inc
jne
outsl
jb
jl
fcmovnbe
sarb
daa
mov
js
jecxz
aas
int3
inc
inc
pop
out
sub
lds
pop
mov
es
mov
aad
jnp
pushf
lret
aad
addr16
inc
mov
inc
xchg
lods
cmp
add
outsl
pop
outsb
shl
mov
pop
or
js
or
xor
mov
mov
or
mov
outsl
sub
outsb
in
cmp
cwtl
lea
or
push
into
dec
push
dec
and
push
and
movsb
add
hlt
nop
rolb
jb
into
stos
sbb
cmp
push
jp
scas
leave
adcb
jnp
lods
test
nop
or
mov
arpl
mov
rcll
mov
loope
sahf
mov
xchg
xchg
fldcw
inc
jnp
lahf
int3
jg
cli
into
iret
in
faddl
stos
imul
test
sbb
arpl
data16
int
jmp
icebp
outsl
testb
test
xchg
or
cmp
sbb
xor
mov
sti
loope
scas
pop
push
subl
xchg
xchg
mov
mov
in
testl
jns
mov
jg
mov
xchg
xor
mov
psubusb
xlat
cmp
in
outsl
or
and
mov
test
cmpsl
mov
xor
push
sbb
xchg
cmpsb
or
fiaddl
rcrl
shrb
and
jle
jecxz
lahf
inc
and
mov
and
push
dec
insl
mov
inc
sub
cmp
rcrb
sub
xchg
lds
or
das
stc
pop
pop
imul
sbb
inc
mov
std
imul
outsb
test
push
scas
push
or
jge
mov
lret
xor
aas
or
fs
inc
mov
inc
loop
test
into
cmpsb
cmp
cmc
or
inc
mov
je
das
fisubs
add
lret
shlb
mov
iret
lret
fnstsw
xchg
pop
hlt
into
movsb
jg
outsb
arpl
adc
mov
or
je
addb
and
jmp
lret
jp
jne
mov
idivb
inc
addr16
lods
mov
loop
fistps
pop
dec
call
push
mov
lock
loop
mov
sub
ret
inc
mov
loop
cmp
and
pop
xor
das
jne
sar
les
jg
push
mov
lret
bound
stc
pop
and
insl
sub
pop
push
es
add
cpuid
pop
xchg
jle
jmp
add
sub
sbb
iret
cmc
cmp
or
or
mov
in
xor
xor
mov
loop
jg
pop
cwtl
clc
fisttpl
js
or
push
and
int
mov
mov
xchg
lcall
adc
testl
stos
stos
or
les
ret
mov
dec
clc
imul
xor
pop
adc
xor
aam
fadds
mov
lea
clc
cwtl
adc
addl
call
shll
aam
fildll
mov
xor
test
xchg
mov
gs
mov
in
jle
ljmp
fdivrl
push
xor
scas
inc
jge
jmp
scas
aad
sub
jg
rorb
or
outsl
ds
ret
clc
imul
imul
push
pop
shlb
mov
pusha
scas
xor
repnz
aam
std
push
pusha
repz
xor
cmpsl
mov
jmp
push
mov
sar
outsl
in
push
fstpt
out
arpl
sbb
jl
inc
repnz
pop
mov
imul
mov
out
int
insl
xchg
cmp
sbb
stos
subb
in
les
insb
ljmp
inc
lcall
mov
adc
fildl
nop
ret
mov
jae
adc
int
sbbb
aas
and
push
lods
inc
std
jmp
add
push
adc
data16
aam
stc
rcll
cmp
sub
mov
add
adc
lret
dec
in
dec
jne
es
xchg
sti
pop
loop
xchg
scas
xchg
and
sub
ret
incl
or
adc
fisubs
lret
cmp
jmp
movsb
mov
aaa
dec
or
cwtl
add
ret
xor
jg
and
lcall
push
filds
lods
das
stc
int
in
mov
sbb
stos
in
outsl
or
into
mov
or
in
xchg
test
or
push
test
hlt
clc
or
pop
mov
lods
or
sbb
repnz
cmpsb
and
mov
adc
dec
pop
rcr
inc
push
push
bound
pop
mov
sbb
loope
add
push
mov
and
xchg
add
mov
faddl
push
add
xchg
lcall
jbe
push
add
add
inc
xor
pop
dec
xchg
fadds
lods
outsl
std
xchg
pop
pop
data16
faddl
dec
repnz
cwtl
hlt
add
mov
std
mov
mov
adc
mov
xchg
outsb
xor
cmpl
xchg
mov
jmp
cmpsb
dec
dec
mov
lods
mov
data16
idiv
inc
push
in
test
stc
imul
negl
adc
or
ljmp
stos
xor
sbbl
xchg
cmp
push
mov
jns
lcall
inc
push
add
mov
gs
and
mov
mov
fisubs
jp
inc
mov
mov
jmp
hlt
das
adc
mov
adc
pop
cmp
push
cwtl
mov
mov
test
sahf
out
addr16
out
xchg
sahf
lods
jns
movb
xchg
push
fisubrl
lock
jle
adc
sarl
out
or
outsb
idivl
mov
imul
out
jmp
xor
stos
jmp
shll
loop
cmpsb
mov
jg
fmuls
jp
stos
int3
shr
jae
mov
mov
lcall
sbb
push
xchg
dec
xor
add
and
call
jp
and
out
xlat
pop
les
mulb
repz
dec
xchg
jbe
loopne
nop
aaa
pop
pop
dec
inc
adc
arpl
mov
out
sbb
and
lock
daa
pop
cmp
scas
clc
mov
jnp
mov
xorb
mov
sub
icebp
aaa
out
loopne
js
inc
enter
mov
pop
dec
xor
test
push
dec
sbb
dec
pop
cmp
adc
sub
cmpsb
jg
mov
and
xor
call
dec
scas
push
cmpsb
paddsw
leave
jno
jo
insl
pop
int
xor
stos
inc
pop
push
frstor
sub
call
std
sti
push
nop
mov
dec
inc
adc
cmp
xchg
inc
push
adc
incl
test
sub
pop
mov
ss
clc
out
sbbl
stos
add
popf
pop
pop
adc
and
cmp
or
sti
insb
pop
std
sbb
or
push
push
sahf
movsb
sbb
inc
or
out
leave
add
mov
hlt
mov
sbb
mov
scas
dec
aas
adc
aaa
lret
xor
hlt
enter
jl
jae
xor
dec
pop
repz
xchg
or
in
adc
dec
arpl
sbb
loopne
insb
push
mov
fstps
push
inc
push
or
inc
mov
xorb
loop
cld
scas
es
lret
shlb
sbb
aas
add
sbbb
repnz
ficompl
into
test
mov
std
adc
enter
int3
sbb
cltd
add
repnz
xor
ja
and
pusha
dec
insl
cmc
pusha
lea
outsb
hlt
push
jb
pushf
mov
jg
icebp
fisubrl
add
cmp
cmp
jmp
mov
xorb
and
roll
mov
mov
xchg
jbe
sub
cmp
ss
aam
lret
xor
push
incl
addb
ret
add
mov
push
movsl
cli
xchg
addl
repnz
lcall
shrb
push
inc
sbb
adc
cltd
pop
in
mov
push
jnp
mov
add
jno
insl
mov
push
xor
aas
push
pop
cmp
push
out
jp
or
dec
popf
faddl
insl
pop
fistpll
xor
xchg
or
mov
dec
pop
insl
or
sub
inc
iret
js
dec
add
cmp
ss
mov
imul
mov
or
pusha
sbb
xchg
xor
cs
int
and
fisubrs
pop
out
ror
add
mov
cmpsb
insl
cmp
xlat
mov
lret
jno
and
mov
loopne
rol
push
imul
dec
mov
in
ret
push
mov
jle
outsl
arpl
mov
add
js
loop
add
inc
adcb
jb
or
gs
mov
mov
jnp
std
lods
mov
xchg
adc
pop
xor
popa
shlb
ret
fisubl
daa
pop
pop
mov
mov
mov
insb
adc
sti
xchg
into
jns
push
movsl
mov
mov
xchg
inc
pushf
cmp
push
gs
add
hlt
jg
jle
mov
mov
xor
test
xchg
pop
cmpl
movsl
adc
pop
stc
and
clc
ficoms
jmp
inc
in
xchg
jge
std
std
dec
or
loope
push
push
or
scas
in
mov
xchg
ljmp
xchg
xor
mov
xor
adc
rcr
pop
cmpsl
xchg
pop
push
aam
repz
xor
mov
lret
xor
clc
pushf
ss
dec
aad
pop
outsl
sub
daa
or
adc
mov
das
gs
jnp
popf
pusha
insl
setne
xchg
xor
sub
push
sbb
lret
cmp
popf
test
jne
or
mov
push
cli
push
stos
dec
add
cltd
adc
filds
mov
stos
and
cmpl
pop
xchg
adc
rclb
cmpsl
insb
lret
add
andl
jle
xchg
push
mov
in
repz
sahf
fs
repnz
bound
cmp
mov
in
dec
es
xchg
sarl
add
iret
mov
add
mov
lds
gs
pop
jle
mov
jp
pop
test
inc
int
and
out
xchg
push
jo
adc
mov
loope
push
mov
je
or
mov
das
adc
xor
mov
ja
inc
int
dec
push
cwtl
mov
sahf
jge
or
xor
cmpsb
imul
out
sbbl
pop
movsb
xchg
out
xchg
xchg
mov
jmp
inc
push
aad
das
sub
stc
jg
dec
inc
inc
push
js
out
rorl
lock
and
outsl
or
fwait
sbb
xor
popf
push
cmpsb
pop
inc
push
pop
pop
push
adc
pop
inc
mov
adc
cmp
fisubrl
mov
xchg
xchg
inc
xor
popf
iret
cmp
sti
sbb
mov
dec
outsb
jne
cmp
les
or
adc
aam
ja
and
movsl
and
mov
cmpsl
inc
or
and
jecxz
jno
xor
add
aad
icebp
inc
or
adc
sahf
movsb
or
jne
sar
data16
imul
test
outsl
js
jno
loop
add
ret
movsb
adc
fnstcw
lock
imulb
cwtl
sub
inc
leave
adc
xchg
addr16
pop
lea
dec
out
inc
out
push
test
movsl
add
sbb
xlat
gs
xor
xchg
lods
fildl
push
aas
sub
inc
test
dec
push
arpl
adc
bound
dec
movsl
mov
cmpsl
lret
cltd
lods
js
leave
rorl
inc
mov
roll
fdivrl
aam
jg
pop
push
lods
outsl
sub
pop
outsl
sub
xchg
sub
mov
add
shll
adc
push
mov
and
push
out
xchg
cmp
adcb
dec
addb
pop
inc
hlt
adc
sbb
pop
cwtl
mov
test
push
push
addr16
adc
cltd
mov
mov
in
shlb
dec
cmp
sub
popa
xchg
mov
dec
mov
or
in
adc
adc
dec
daa
and
test
xchg
pushf
les
pop
pop
call
inc
fsubs
clc
xor
mov
pop
mov
inc
or
adc
add
dec
add
cmpsl
insb
adc
bound
mov
jp
cld
push
pop
cwtl
cltd
ds
fsin
arpl
hlt
sub
adc
xor
mov
mov
mov
test
testb
enter
out
leave
mov
test
mov
push
int3
jb
mov
div
xchg
push
ret
xchg
lods
or
scas
lock
mov
out
ljmp
lahf
scas
push
mov
dec
shll
dec
call
pop
mov
pop
outsb
mov
inc
and
xor
sbb
andl
aad
lcall
mov
pop
loope
and
rcrl
pushf
and
sub
jmp
cmp
nop
addr16
cli
sbb
fisttpll
aas
jle
push
cld
jp
mov
movntps
inc
testl
call
ret
inc
adc
xchg
cmc
mov
fneni(8087
stos
mov
pop
in
ret
lret
es
test
push
mov
xor
push
mov
movsb
push
and
ret
imul
into
mov
pop
cmp
adc
or
mov
insl
dec
push
fsubrs
in
lahf
sar
mov
xchg
gs
aas
mov
test
std
leave
xchg
fsubrl
jg
jne
mov
sbb
faddl
sub
inc
jg
pop
lods
call
mov
and
adc
inc
lods
push
pop
insl
insb
dec
jmp
fcmovnbe
mov
ror
xlat
adc
test
xor
jg
out
icebp
gs
bound
stos
cmpsb
rclb
adc
lods
daa
sbb
sub
push
cmp
jge
dec
adc
pop
subl
cmp
mov
pop
movsb
xchg
sbb
cmp
lock
pop
leave
lret
dec
sub
fld
mov
notb
out
in
cld
sbb
incl
and
pop
inc
pop
cmp
test
xor
std
pop
push
push
xchg
or
loope
xorl
pusha
adc
or
dec
xchg
les
mov
mov
push
notb
lods
inc
jg
dec
xor
cwtl
or
mov
jnp
ret
sahf
das
lds
aam
adcl
es
xchg
addr16
add
leave
sub
testl
mov
xchg
rolb
mov
ret
clc
dec
xchg
les
aas
mov
mov
fidivrl
scas
enter
add
and
push
inc
nop
enter
scas
test
dec
mov
out
pop
in
mov
cmp
sub
and
sub
stos
jne
add
or
mov
out
out
mov
sti
addr16
jp
pop
xchg
js
loope
loop
jg
pop
mov
mov
je
fwait
popa
push
in
jne
leave
pop
sub
and
lock
aam
jno
jl
sbb
pop
dec
leave
xchg
xor
iret
push
or
and
fdivrp
jp
ja
jne
dec
movsb
data16
lret
sbb
aam
push
lahf
or
adc
lods
or
arpl
or
aam
push
mov
adc
mov
pushf
sbb
lret
dec
adcl
sbbb
mov
cltd
out
rcrl
add
ljmp
aas
xchg
sbb
les
pop
sub
add
sbb
lods
cmpsl
sub
lea
xchg
out
insl
mov
jmp
mov
nop
clc
mov
xchg
inc
fyl2xp1
out
cmc
xchg
stos
cld
jmp
xchg
cld
decb
sbb
addr16
dec
pop
mov
lahf
jecxz
mov
into
pop
mov
cmp
xchg
pop
jns
insl
jns
mulb
pop
inc
xchg
rclb
jne
add
mov
xchg
mov
add
pop
dec
int
repnz
xor
mov
or
jae
add
iret
lock
jecxz
xchg
adc
sub
ja
in
xor
xchg
out
cmp
lods
fbstp
pushf
jo
cs
push
test
fnstsw
lcall
cwtl
dec
pop
push
sub
pop
mov
clc
fstpt
push
dec
icebp
jns
insb
out
cmp
out
data16
outsl
push
ficompl
add
data16
repz
pop
mov
ret
xchg
dec
shll
jb
cmp
sbb
adc
mov
jge
jp
inc
sbb
sar
sbb
add
mov
mov
jb
jmp
sbb
fnstsw
hlt
xor
sbb
cmc
cmp
out
mov
xor
or
sti
mov
fcoml
jno
rcrl
pop
shr
call
jl
push
andb
aam
out
jno
jae
popa
jne
cmp
xchg
fsubl
iret
add
fldcw
popa
mov
rclb
imul
jle
mov
push
xchg
and
adc
es
adc
fbstp
xor
jb
pushf
cwtl
andl
ret
andb
sub
pop
adc
hlt
push
inc
imul
out
pop
cli
mov
cld
add
pusha
sbb
cltd
adc
sub
sbb
lea
mov
outsl
inc
test
cmp
sbb
sbb
aad
xor
push
cmp
dec
inc
stc
lds
clc
jbe
mov
cld
inc
mov
ljmp
fcmovb
in
pusha
jg
test
inc
lahf
nop
xor
or
jnp
cmp
mov
pop
addr16
dec
sar
mov
cli
and
ret
cs
rcrl
xor
pushf
stos
stos
lods
ljmp
or
xor
call
jl
dec
jno
and
jno
push
imul
mov
rcll
movl
cmpsb
les
cld
mov
jg
iret
test
fs
sbb
dec
gs
aam
out
negb
jnp
inc
push
movsb
sub
dec
enter
mov
dec
sbb
cld
mov
fisttpl
and
mov
sbb
push
mov
mov
add
adc
js
cmp
lahf
stos
repnz
inc
test
fcom
dec
push
xchg
inc
je
mov
mov
pop
in
mulb
dec
orps
loope
push
jnp
pop
add
push
jnp
out
rcrl
push
dec
clc
loop
and
out
nop
push
in
sub
pop
dec
stc
xchg
int
stc
push
rcll
shll
push
mov
push
sub
add
cli
pop
and
lahf
sbb
dec
push
push
fsubrl
aad
cltd
mov
mov
mov
xchg
or
sub
in
adc
mov
mov
mov
std
into
imull
dec
ret
cmp
daa
xchg
mov
mov
outsb
and
push
nop
jecxz
sbb
stos
cmp
fwait
aam
lcall
jae
cwtl
xor
iret
inc
or
ret
or
lods
pop
test
add
sub
out
jecxz
pop
cs
inc
push
and
sbb
jnp
jle
pop
out
mov
push
stos
push
add
loopne
jno
in
push
call
or
jle
sbb
mov
pop
adc
push
sub
imul
mov
cwtl
xchg
call
lret
stos
daa
adc
loop
mov
xor
insb
fcmovbe
sbb
adc
xor
fucomip
pusha
dec
imul
hlt
mov
mov
cmp
movsb
aaa
data16
cmp
push
mov
push
mov
aas
mov
adc
test
jmp
jmp
sahf
aas
mov
pushf
and
mov
out
adc
adc
xchg
mov
xchg
out
inc
xor
or
push
sub
push
mov
test
pop
pop
push
mov
aas
je
in
xchg
mov
scas
mov
loopne
pop
pop
xchg
lds
in
gs
sarl
xor
push
rolb
pop
pop
mov
inc
or
sbb
mov
call
aas
mov
stos
ret
fldenv
mov
mov
jmp
pop
es
aaa
xchg
repz
sahf
jecxz
sbb
jl
fs
inc
movsl
mov
dec
mov
or
jo
sbb
lds
and
aas
sbb
add
add
dec
mov
aad
pushf
outsb
lret
in
scas
xchg
xchg
inc
xchg
negl
sbb
insb
sub
std
mov
into
fbld
sbb
clc
jbe
jg
lahf
orb
into
out
sbb
enter
ss
rcrl
dec
fs
fmull
push
push
push
mov
nop
and
mov
fisttpll
sub
mov
das
dec
xor
sub
repnz
call
or
sub
lods
pop
es
xlat
arpl
xchg
add
push
out
or
fildll
cld
jnp
sbb
sbb
ss
stc
pop
or
jmp
lret
loop
xor
ljmp
aad
pop
push
or
push
lret
mov
dec
xchg
sbb
das
sub
mov
rdtsc
test
pushf
pusha
adc
and
and
fistpll
jmp
jge
shll
sbb
call
sub
stos
pop
cmc
jl
push
cmp
add
fdivrs
cld
mov
hlt
push
jmp
cmp
sbb
orl
shlb
cmp
or
dec
jmp
subl
adc
push
lret
mov
lock
push
fs
decl
loopne
ret
pop
mov
xchg
rcl
or
into
mov
arpl
inc
push
scas
fldenv
dec
jbe
ds
jne
push
aaa
movsl
and
test
mov
sti
pop
add
subb
sbb
dec
jno
jne
jae
fs
sub
js
shll
js
enter
test
pop
sbb
mov
adc
fcomp
mov
shll
inc
imul
cli
loopne
bound
or
mov
xchg
sbb
fldenv
shlb
adc
mov
adc
pop
into
xadd
lret
and
push
movsl
mov
push
mov
sbb
pop
rolb
adc
lret
jecxz
les
repnz
mov
push
nop
mov
pop
push
out
insl
aaa
mov
jl
mov
mov
mov
fwait
mov
xlat
andb
arpl
lcall
subl
mov
mov
rcrl
adc
inc
call
push
and
hlt
fcmovnbe
mov
sbb
shl
push
mov
xchg
push
add
jmp
xchg
aaa
aam
out
jecxz
out
fstpt
imul
mov
jnp
mov
jmp
xchg
adc
pop
push
fwait
xchg
inc
dec
stos
das
lcall
popl
and
pusha
jbe
les
mov
mov
xor
xor
cmp
pusha
sbb
test
sbb
aas
dec
sbb
jecxz
icebp
mov
mov
adc
loop
neg
hlt
jl
js
into
mov
cltd
imul
sti
sahf
xchg
jne
ds
xor
sbb
mov
lret
inc
xchg
or
out
mov
aas
sarb
inc
call
sbbl
jae
ror
add
push
cmp
or
add
test
and
add
inc
cli
int3
roll
mov
pop
jge
push
js
mov
adc
mov
out
pop
call
fistpl
mov
add
dec
nop
jns
jae
bound
das
outsl
inc
sbb
stc
dec
js
inc
adc
loopne
adc
sbb
popa
arpl
xchg
scas
adc
and
dec
push
int3
or
lea
sahf
mov
shlb
into
incl
xchg
leave
sbb
jae
cmp
xor
js
sbb
mov
outsb
mov
loop
pop
ret
and
pop
cld
loope
pop
mov
lret
push
test
movsb
aam
sub
stos
lcall
testb
pop
in
xlat
test
nop
xor
sti
outsl
int3
sbb
xchg
aam
test
add
mov
popa
xchg
jne
xchg
pop
fstpt
mov
ret
xlat
pop
int
inc
mov
mov
add
mov
ffreep
inc
lahf
pusha
repnz
mov
push
js
repnz
aas
lret
enter
mov
xchg
leave
xor
icebp
jecxz
cltd
sbb
cld
sbb
notb
mov
in
sub
popf
inc
add
outsl
pop
mov
cmp
fldl
orb
inc
pop
pop
pop
and
cmpsb
sub
gs
fsincos
test
cmp
mov
sbb
out
pop
in
sahf
or
mov
dec
das
mov
and
and
jmp
in
add
insb
lcall
push
cmpsb
dec
jge
out
repz
mov
out
xor
push
xchg
mov
cmp
mov
cmp
sub
int3
std
ds
push
jge
pop
pop
ds
and
sbb
pusha
enter
or
movsl
push
xor
and
aam
fdivrp
jg
repz
sbbb
ret
jo
jle
test
stos
xorb
in
xchg
push
addb
mov
rclb
popf
or
inc
adc
pop
mov
pusha
add
divb
xor
pop
roll
xor
pushf
adc
lods
and
xchg
repnz
call
test
shlb
pop
ret
cmp
mov
push
test
jmp
jle
iret
dec
jne
das
dec
xchg
inc
cltd
fnsave
mov
cmp
fldt
jne
mov
sub
xor
xchg
xchg
ret
mov
shll
fwait
mov
lahf
ret
push
std
mov
cmp
xchg
jl
pop
dec
push
mov
sub
fldcw
addr16
and
insl
add
movnti
insb
mov
mov
daa
dec
inc
push
inc
aad
fst
pop
roll
push
out
pop
mov
int3
sub
xchg
mov
xchg
popa
or
sbb
xor
jnp
ffree
mov
xchg
loope
test
xchg
sbb
rorl
movsb
outsl
lret
int3
inc
mov
mov
jne
nop
fwait
or
inc
loope
dec
push
push
std
jg
lcall
mov
sbb
jo
loopne
pop
mov
jecxz
movsl
mov
inc
mov
add
pushf
mov
dec
add
mul
stos
xchg
push
add
sti
push
sub
ret
gs
insb
rcll
mov
mov
into
mov
sbb
aaa
xor
call
loope
cmc
in
out
js
jae
aaa
adc
jne
adc
pop
and
int
loop
roll
test
inc
cmp
mov
add
movsb
leave
test
stos
add
sar
outsl
jb
jno
mov
push
and
es
fsubr
mov
push
test
hlt
frstor
or
imul
mov
pop
inc
loopne
xlat
cmp
scas
stc
xlat
lods
pusha
or
cs
and
add
xor
pop
lcall
dec
pushf
loop
push
pushf
jg
incl
add
shll
push
fstl
aam
adc
out
jle
gs
fs
xor
call
cwtl
xor
sub
leave
dec
insb
jo
pop
add
pushf
or
mov
xchg
nop
stos
mov
rolb
das
fs
fwait
push
fisttps
or
mov
adcl
jns
add
cmc
nop
aaa
push
repnz
xor
or
mull
mov
pop
mov
jmp
mov
push
fxtract
mov
arpl
and
cwtl
into
push
insb
xchg
mov
stos
mov
pop
and
sbb
jle
popl
mov
icebp
shrl
aad
mov
sarl
cmp
icebp
out
cmp
js
mov
es
push
insl
ds
int3
sub
lret
add
push
aad
and
mov
xchg
pop
mull
cmp
push
ret
dec
push
arpl
mov
lcall
stc
mov
xchg
sbb
adc
in
mov
in
xchg
push
pop
es
aas
mov
push
adc
aad
rcrb
mov
lcall
loopne
mov
loop
insl
dec
jns
mov
jecxz
mov
ja
cs
jl
sarl
pop
push
add
mov
outsb
fcompl
cmp
pop
jns
sbb
add
and
sub
test
int
lds
lds
adc
inc
out
insb
jno
adc
sbb
inc
leave
push
mov
xchg
mov
mov
adc
rcrl
ljmp
nop
sbb
call
xor
mov
cli
xchg
mov
xchg
mov
cmp
outsl
mov
push
test
inc
xorl
ss
mov
xchg
les
popf
and
in
sbb
pushf
in
inc
insl
pop
xchg
int3
cwtl
dec
push
jns
cwtl
les
lret
mov
xchg
xor
or
sbb
jp
cmpsb
repnz
rcrl
sbb
cmp
aam
mov
enter
jmp
xor
mov
mov
bnd
or
mov
ds
inc
xor
xor
loop
aaa
xor
cmc
movsl
adc
push
dec
ljmp
push
push
mov
dec
mov
xchg
sti
add
push
pop
sub
xor
adc
int
popa
std
idivl
lods
nop
ds
mov
mov
or
aam
mov
fsubrl
mov
out
fidivrl
add
inc
mov
lret
rolb
mov
sbb
mov
lea
push
nop
insl
aam
scas
lret
push
pop
add
pop
and
adc
repnz
sub
push
add
and
lret
rcrb
jge
sub
cmp
inc
sti
mov
sub
mov
xor
xchg
mov
fcom
mov
or
loopnew
mov
cli
and
xlat
mov
sbb
push
and
das
ret
mov
or
xchg
push
push
outsb
ret
ljmp
in
inc
sar
mov
in
mov
add
jecxz
test
psllw
dec
call
sub
mov
inc
push
cmpsl
xor
inc
fs
fcomi
divl
cmp
inc
rcll
jl
out
cmp
std
xchg
adc
sub
mov
into
loop
dec
mov
das
ja
aaa
push
pop
push
call
xchg
cmp
cmp
cmp
data16
pop
adc
outsb
in
mov
scas
cmp
mov
xchg
test
lret
xor
inc
fsubrs
gs
mov
jnp
mov
jge
xchg
dec
stos
addb
imul
xlat
and
inc
sbbb
je
jge
or
mov
sarb
pop
jbe
jmp
pop
pop
dec
ja
popf
and
orb
test
dec
pop
lret
mov
adc
dec
int
lahf
and
lret
shr
or
popa
stc
fisttps
pop
insb
data16
popf
mov
mov
xor
xchg
pop
jo
and
cmp
outsl
inc
adc
sub
push
and
and
mov
adc
sub
add
xchg
inc
es
mov
pop
xchg
mov
fnstsw
divl
adc
mov
lds
cmpl
xchg
push
ljmp
pop
fwait
divb
xchg
push
cltd
xor
sbb
push
mov
push
add
mov
lahf
adc
loop
mov
cwtl
xchg
ret
mov
mov
subl
test
mov
setne
insl
and
std
cmpsl
inc
xor
mov
pop
xchg
rolb
rcrb
cmpsb
bnd
mov
xor
mov
mov
out
xor
cmpsl
popf
adc
loop
mov
push
xchg
test
bnd
or
loop
sbb
xchg
les
push
push
push
mov
and
rclb
dec
and
cmp
cmp
and
mov
pop
xchg
push
cltd
les
add
cmp
xchg
ja
pop
jle
cmp
daa
cmp
shlb
fistpl
mov
push
inc
ja
cmc
pop
pop
std
leave
inc
je
adc
mov
sub
lret
adc
inc
xchg
loope
cltd
push
mov
test
and
jno
aas
fdiv
dec
fstp
fistl
jle
pop
dec
mov
ret
dec
test
sub
cmp
mov
push
sub
arpl
add
and
jno
and
call
inc
das
push
cmp
lods
or
push
loope
fnstsw
and
cmc
and
rcrl
and
clc
inc
add
add
jmp
sub
lret
frstor
dec
faddl
fldcw
mov
inc
clc
daa
sar
out
enter
pop
jnp
dec
dec
mov
int
jmp
jne
mov
js
mov
sub
add
dec
int
jmp
test
dec
pcmpgtb
inc
and
fwait
cli
iret
xor
test
test
xchg
in
shll
fcoms
mov
cmp
mov
ss
mov
jg
ljmp
cmc
out
inc
inc
ret
or
or
cmpsb
add
pop
scas
dec
iret
adc
movsl
subl
add
pop
push
aas
dec
subl
insb
xchg
cmp
xchg
das
scas
pushl
into
jnp
sbb
loop
in
ljmp
bound
or
and
loope
xchg
mov
inc
jle
jp
push
adc
adc
mov
sbb
js
popf
xor
jne
inc
push
fcoms
out
sbb
sub
aaa
out
push
enter
lcall
imul
add
fistl
bound
and
mov
dec
clc
adc
inc
xchg
mov
jne
mov
mov
pusha
jno
andb
mov
xor
mov
and
arpl
scas
adc
cli
push
inc
mov
loop
shrb
sub
mov
in
in
mov
fnsave
mov
test
inc
mov
in
dec
scas
push
gs
or
xchg
xchg
loope
dec
jle
or
dec
xorb
call
enter
pop
pushf
cmpsl
and
cmp
ljmp
xor
jp
fcoml
pop
mov
pop
leave
cmpsl
mov
lods
iret
push
movsl
adc
xor
shll
jae
out
jp
das
pop
mov
stc
adc
hlt
test
popa
daa
xor
popa
cmp
cmpsb
repnz
incl
sub
fstl
pushf
xor
ja
lock
roll
jne
mov
test
mov
lcall
xchg
jmp
pop
mov
shll
mov
fcmovnbe
mov
cmp
and
insl
xor
call
pop
inc
fstpl
stos
shrl
push
mov
xchg
push
mov
stos
jle
dec
dec
xlat
inc
sub
mov
jne
bound
xchg
hlt
bound
arpl
test
pop
sahf
pushf
xor
xchg
dec
inc
xchg
xchg
sbb
inc
or
aad
pop
cmpl
mov
dec
lcall
mov
fs
pop
or
push
sub
mov
pop
in
out
xor
cmp
xor
test
rcl
mov
dec
mov
aas
ret
jb
push
std
pop
and
xchg
test
fdivrs
lock
test
inc
sub
sub
pop
adc
imul
stos
fiaddl
xchg
mov
xchg
fsubs
and
shrb
inc
and
addb
fmul
aad
inc
aaa
adc
repnz
faddl
enter
fisubrs
outsb
push
jmp
sti
sahf
dec
scas
ja
jp
dec
loope
sub
lret
sub
mov
loop
lds
jo
dec
cmp
fsub
push
jl
das
and
pop
adc
sub
fcmovb
cmp
cmp
clc
lret
mov
push
cmp
sbb
jp
daa
mov
es
nop
pop
mov
xor
sub
flds
mov
pop
inc
adc
cmp
mov
repnz
jne
jb
cmp
inc
jne
jg
dec
sbb
or
sbb
mov
jo
sub
xor
cmp
out
xchg
nop
pop
dec
add
stos
cs
popa
es
push
les
and
sub
mov
shrl
lea
inc
add
flds
es
xor
or
push
xlat
int
cltd
mov
rcrb
or
cmp
push
dec
or
push
ljmp
pop
cmp
popl
or
xchg
fisttpl
mov
sti
std
dec
stos
xor
xlat
loope
adc
mov
inc
xor
nop
and
pop
dec
lcall
adc
jnp
rcll
sbb
jp,pt
lcall
add
jmp
mov
add
stc
imul
test
sti
mov
es
into
xor
aad
and
push
test
int3
leave
dec
rcrb
jb
inc
cmp
int
test
sub
push
xor
aam
or
faddl
sbb
addr16
int3
lods
sub
mov
mov
dec
daa
push
or
adc
call
lcall
inc
push
bound
cmp
addb
xor
cmp
icebp
in
cmc
push
loope
push
int3
mov
add
mov
ss
xchg
dec
aas
sbb
mov
dec
loop
inc
jae
int3
mov
pop
or
mov
das
jecxz
pop
dec
fstl
aas
inc
xchg
pop
mov
test
sbb
outsl
adc
xchg
out
popa
leave
imul
adc
adc
push
in
iret
dec
dec
add
mov
dec
int
inc
xor
in
sbb
mov
clc
lods
cmp
sub
lcall
aam
xchg
push
out
insl
jecxz
aad
add
scas
mov
mov
test
push
lock
cld
jb,pn
sbb
mov
mov
fs
outsl
mov
cld
sbb
adc
js
push
jae
in
repnz
bound
cmp
stos
sbb
sbb
movsb
mov
push
add
mov
xchg
nop
ret
and
aam
add
adc
mov
dec
jecxz
ret
scas
lahf
mov
xor
pop
inc
push
or
gs
cmpl
xchg
mov
add
cmpsb
mov
loop
popa
inc
pop
sub
ret
inc
aas
call
sahf
fmull
mov
or
imul
rclb
cmpsl
addr16
lahf
adc
xchg
cmpsl
pop
scas
cmp
push
inc
popa
sarb
into
rclb
les
cmp
rcrl
or
mov
mov
je
pop
inc
std
in
rorb
push
cmc
sbb
xor
pop
into
jne
push
addb
leave
lret
jns
lds
icebp
xchg
jecxz
add
push
daa
js
pop
mov
xorb
pop
add
iret
shll
adc
rol
ja
inc
pop
insl
or
mov
ja
mov
dec
clc
jne
sbb
xor
stc
or
jl
xchg
rorl
nop
aas
inc
loop
in
pusha
repz
mov
in
inc
enter
aam
xor
mov
pop
adc
ret
mov
stos
movsl
js
xor
inc
into
dec
xor
leave
ficomps
ljmp
roll
dec
sub
cwtl
and
mov
loop
in
and
and
fisttpl
loop
pop
bound
pop
lret
clc
jmp
mov
mov
or
and
jns
xor
aaa
mov
lahf
push
movsb
mov
fwait
jnp
xchg
test
xchg
push
js
lea
xchg
rolb
and
or
mov
popf
mov
dec
cmpsl
loope
lds
cld
mov
nop
iret
into
loope
pusha
gs
add
test
jb
push
gs
and
jp
scas
insb
lods
sbb
inc
inc
or
aas
je
inc
lret
or
mov
testl
int3
xor
daa
and
jns
test
fcomps
or
pop
cwtl
jmp
js
push
add
jecxz
jbe
pop
pop
imul
aad
call
sub
mov
leave
les
push
inc
adc
push
insl
adc
idivl
in
out
dec
aas
cmp
mov
inc
lock
xchg
mov
inc
sbbb
add
jnp
push
jecxz
jbe
mov
cltd
hlt
les
repnz
xor
lret
jae
adc
daa
or
push
push
sbb
scas
andl
mov
dec
cmp
inc
test
inc
mov
out
mov
call
shll
push
sbb
mov
jnp
jo
sub
in
leave
jmp
outsb
mov
in
mov
es
test
popf
iret
ja
fisttpl
jmp
mov
clc
mov
je
sbb
push
cmpsl
mov
stos
push
or
adc
adc
jae
pop
scas
xchg
lret
xchg
mov
fdivp
out
inc
fstps
push
aas
jbe
sti
aad
mov
inc
add
shr
sbb
rcll
inc
lret
mov
daa
jge
test
mov
jbe
and
repz
dec
adc
fldenv
cld
mov
adc
mulb
mov
push
shl
and
mov
xchg
xor
dec
fs
mov
movsl
mov
jle
lea
out
cmp
lcall
das
jle
pusha
pop
sbb
aaa
dec
fcoms
test
cmpsb
fisubs
sbb
cmova
jne
popf
dec
imul
or
mov
mov
mov
mov
xchg
sbb
iret
dec
fcoml
lret
repz
sbb
adc
jg
push
push
mov
mov
jne
outsb
popf
bound
dec
rcrb
aad
inc
lcall
mov
fucomp
inc
ss
popf
push
out
jmp
ret
pusha
jmp
and
aam
push
jns
push
rorb
and
into
jo
fnsave
mov
and
jle
dec
enter
and
lds
push
xchg
stc
sti
inc
lahf
push
mov
pop
xchg
ljmp
inc
jle
add
out
sub
push
xchg
in
iret
cmp
insb
or
and
mov
jbe
mov
rep
lret
and
jg
es
or
cwtl
dec
jp
lods
ret
cli
mov
jae
cmp
movsb
add
mov
fsts
jae
repnz
popf
outsb
jg
jo
mov
inc
test
dec
mov
icebp
mov
adc
and
adc
shlb
mov
pop
sbb
cmp
in
xchg
add
xor
jbe
ret
addr16
lret
cmp
mov
clc
or
int
mov
xor
add
dec
dec
mov
je
cmpl
cmp
jge
movb
xchg
lds
fsts
in
inc
imul
adc
lds
add
pop
out
stc
mov
jl
mov
mov
sbb
cwtl
mov
cmp
shlb
push
jb
adc
aaa
pop
movb
inc
sub
jg
loopne
repnz
xchg
test
cltd
fsubs
jno
aas
dec
pop
ss
lret
repnz
cltd
push
jle
inc
popf
into
adc
negb
xor
and
idivb
xchg
sbb
adc
jecxz,pn
inc
iret
mov
xchg
lret
adc
fadds
sbb
dec
in
add
push
call
cmpsb
push
lahf
sub
sub
push
insl
std
scas
out
fsubs
aaa
jmp
je
pop
mov
sub
sub
dec
test
mov
incl
xor
sahf
daa
pop
cmp
jle
aaa
test
xlat
inc
ds
ds
push
sub
mov
jmp
cmp
in
adc
or
adc
outsl
cmp
shrb
imul
ljmp
xor
and
lods
add
add
mov
jge
adc
repnz
mov
cmpsb
movsl
das
js
adc
int3
jle
xor
lds
lods
lret
dec
in
mov
popf
out
xchg
out
sbb
loopne
ds
into
aas
push
adc
pop
insl
cmp
dec
cmc
pop
jno
xchg
pop
dec
jbe
lods
adc
xchg
push
mov
sbb
mov
jp
sbb
xchg
mov
cld
repz
and
dec
mov
adc
call
inc
insl
mov
lahf
mov
pusha
icebp
stc
sub
cmp
incl
jo
and
bound
sub
inc
cmp
mov
mov
add
inc
mov
int3
lret
repnz
aas
sub
fdivs
je
imul
arpl
sub
lea
movsb
xchg
lahf
jns
jmp
arpl
aas
inc
push
jecxz
xchg
fwait
push
push
fcomps
push
pop
fstl
cmp
mov
inc
adc
sub
pop
mov
scas
sti
or
nop
xor
push
sbb
fdivrs
lods
scas
fdivrs
mov
jle
mov
fnstsw
out
das
shl
enter
inc
mov
xchg
ljmp
add
aas
dec
rorl
out
mov
inc
out
stos
push
and
sub
lea
mov
mov
and
lret
xchg
ja
dec
leave
sub
in
in
test
stos
jbe
mov
stos
insb
mov
mov
iret
mov
loop
fcoms
mov
and
loope
xchg
push
xchg
cmpl
inc
jne
xchg
mov
jae
in
addl
sahf
dec
xchg
jae
aas
les
mov
subl
or
mov
pusha
leave
mov
push
insl
and
jns
movsb
imul
addb
sti
jl
pop
ret
push
mov
pusha
mov
push
and
mov
sbb
rclb
in
add
ja
and
cmp
and
jge
das
fwait
cmp
pop
rorb
push
es
rclb
sbb
stc
inc
push
dec
push
dec
loop
push
pop
decb
push
jbe
jae
or
xchg
push
int3
js
sbbl
iret
mov
mov
pop
sbb
fnstsw
mov
dec
and
sub
test
ds
lods
imul
jmp
xor
or
dec
mov
xchg
cmp
xor
test
movsl
test
sbb
lahf
and
popa
push
aad
nop
add
pop
stc
ja
fsubl
imul
lea
cmp
sarl
or
xchg
fwait
or
rcl
in
cli
pusha
cmpsl
int3
dec
loopne
push
pop
ss
enter
sbb
lock
into
orl
xchg
sub
ds
pavgb
lds
pop
or
adc
xchg
ret
xchg
pusha
sub
lock
push
dec
out
xchg
dec
insb
sub
xchg
mov
jg
lods
sub
es
insl
lds
and
clc
and
and
adc
in
pop
sbbl
dec
cmp
mov
mov
ret
mov
pop
push
adc
lock
into
jne
add
pop
mov
stc
int3
icebp
hlt
daa
sbb
call
adc
mov
xor
adc
mov
inc
imul
or
cmpsl
aam
aas
mov
sbb
pop
push
and
aas
mov
push
adc
cmpsl
in
push
sbb
cmpsb
jge
loope
xchg
ljmp
add
or
xor
mov
ret
xchg
lds
pop
sbb
out
dec
fucomp
add
roll
inc
jb
lea
sbb
flds
iret
and
out
data16
jbe,pt
lret
repz
xlat
sub
mov
push
cmp
outsb
lods
and
call
xchg
pop
dec
pushf
fisttpll
rep
out
outsl
lcall
pusha
popa
push
cmp
cmp
sbb
out
cld
sahf
jecxz
popf
dec
sub
sub
sahf
cmp
fnsave
es
xchg
cmp
push
mov
mov
addl
shll
out
cmc
sbb
mov
inc
lods
subl
out
jno
jne
testb
cmp
test
adc
pop
lret
jb
pop
adc
push
int3
adc
jbe
bnd
jmp
pop
in
mov
arpl
push
movsl
sahf
xchg
outsb
cmpsl
jo
sub
lret
sbb
pop
pop
and
add
mov
mov
pop
ja
mov
lods
loope
xor
mov
lods
lods
cli
xor
push
mov
jns
mov
xchg
lret
pusha
mov
cli
fbld
jle
dec
adc
test
xor
jle
sbb
push
rclb
lods
into
xchg
inc
pop
mov
mov
adc
loopne
mov
mov
dec
cmpsl
test
iret
mov
pusha
add
clc
ljmp
push
inc
shlb
mov
out
shrl
rcll
sbb
xlat
ja
pop
jbe
mov
or
lock
xor
sti
jbe
pop
movsb
pusha
add
nop
xor
dec
aad
sub
sti
or
mov
int3
push
jp
aas
fnstcw
add
mov
mov
and
dec
pushf
rol
dec
movsl
dec
xchg
and
movsl
cmp
cmp
gs
ja
movsl
out
and
cwtl
aaa
or
addl
repnz
adc
stos
out
popf
dec
jge
jp
out
xchg
mov
mov
cmpsl
push
jns
cwtl
aam
scas
fwait
repz
mov
pop
pushf
lds
mov
jae
jnp
gs
lahf
testl
mov
lods
jne
cmp
addr16
inc
lods
push
sbb
pop
push
mov
inc
ret
test
ja
in
andb
out
loopne
test
fwait
movsb
jnp
daa
aas
lret
sub
int
out
xlat
jbe
fldenv
mov
inc
rcr
push
cmpsl
adc
cmp
jo
jmp
cmpl
imul
xlat
lcall
loope
adc
mov
imul
cli
adc
sub
ds
mov
inc
push
or
shr
jge
paddw
cld
jbe
xchg
push
fwait
mov
push
cmp
and
out
dec
push
lods
add
pop
pop
sub
fcoml
or
sub
push
push
add
inc
movsb
and
stc
call
arpl
dec
jl
rol
jle
inc
pop
fnstenv
add
movsb
inc
sbb
gs
cs
jmp
insl
push
adc
scas
or
push
pop
inc
loope
push
fwait
cmp
sbb
outsb
mov
mov
popf
nop
mov
push
and
or
call
bnd
mov
xlat
inc
insl
dec
sub
aam
push
dec
xchg
adc
sbb
mov
gs
movsl
fwait
cmc
lret
lock
push
repnz
cmp
jecxz
pop
pop
push
xchg
fs
test
xchg
pop
xorb
stos
fs
fs
fsts
cmp
daa
fsubp
jle
stc
mov
lret
dec
or
out
cmp
aad
add
cmp
jno
repnz
loope
and
dec
repnz
rclb
outsl
into
stc
fnsave
jl
cmpsl
jle
and
cmp
fs
ds
jnp
in
das
pop
jnp
mov
in
mov
sbb
dec
add
and
sub
adc
xchg
in
jno
nop
sub
lret
dec
pop
add
adc
sbb
add
fimull
cmp
mov
lcall
je
mov
jbe
ficoml
jge
xchg
fucom
jne
les
add
jl
sbb
adc
sbb
movsl
inc
mov
mov
pop
mov
jne
dec
xor
or
jmp
mov
cs
push
clc
sub
inc
leave
in
mov
and
mov
hlt
movntq
lret
xor
inc
lods
and
lcall
cmpsb
popl
into
out
punpcklbw
adc
ds
add
je
push
jg
mov
test
call
cmp
je
lret
jge
lss
mov
cmpsb
xchg
pop
out
mov
jp
orl
pop
call
leave
xor
push
andl
push
test
cli
loope
shr
test
stos
add
inc
outsl
fcompl
xchg
jp
pop
imul
push
mov
push
sub
mov
fsubrp
jl
popa
repz
mov
mov
pop
outsl
enter
dec
mov
xchg
sbb
mov
imul
mov
add
pop
xlat
sub
imul
es
rorb
stc
mov
push
jmp
xchg
jecxz
lahf
sub
movsb
pop
xchg
nop
je
loop
mov
aam
mov
xchg
mov
icebp
or
arpl
or
or
push
sub
loopne
jp
ret
jp
jo
shll
ftst
nop
loop
mov
push
dec
lret
dec
cltd
icebp
push
xlat
cli
push
outsb
imul
es
xor
in
test
dec
or
sbb
pop
pop
and
cmp
ja
js
and
lea
sbb
aas
jnp
dec
fs
divl
loop
sarl
fists
cltd
lret
inc
sub
jmp
les
xchg
jb
movl
pop
movsl
sbb
push
mov
mov
inc
xor
outsb
ds
mov
cmp
sbb
sub
push
inc
push
iret
repnz
jne
fldt
stos
mov
stc
js
aam
pop
inc
add
fwait
sbb
int3
inc
enter
int
mov
scas
lods
add
sbb
xlat
sub
loopne
movsb
mov
inc
push
ss
aas
push
lcall
test
in
jg
adc
cld
adc
cli
pop
jecxz
jl
js
inc
push
iret
or
lods
loop
fistpll
or
fimuls
and
ja
bound
mov
xchg
dec
bound
fisubrl
iret
pop
mov
cmpsb
push
cmp
or
mov
pop
mov
add
or
cld
jne
in
mov
xchg
xor
mov
lret
sub
xlat
sarb
inc
push
sbb
je
push
inc
aam
ret
dec
add
xor
xor
mov
pop
inc
fmuls
xchg
movsb
int3
cmp
pop
daa
push
cmp
jo
push
pop
sbb
popf
and
sbb
jg
rorl
dec
cmp
movsl
mov
dec
xchg
sub
rcrb
xor
jnp
pop
pop
mov
test
jp
ja
orb
addr16
lods
aas
lahf
lret
sub
adc
xor
cmp
sbb
or
adc
pushf
cmp
je
dec
or
mov
jno
jbe
out
inc
sbb
shlb
xor
das
bound
add
scas
fisttps
negl
jge
xor
xor
insb
sbb
push
xor
imull
lock
jge
push
mov
pop
insb
insb
jno
imul
sbbl
pop
pop
pop
cmp
xchg
pusha
mov
aaa
add
sub
jo
scas
orl
and
addr16
xor
pop
jmp
and
sub
jge
and
sub
scas
js
mov
fidivs
lds
sbb
push
fadds
adc
roll
mov
sbb
shl
fidivs
or
lret
add
pop
sbb
sbb
sti
adc
sub
pusha
jecxz
lds
dec
xor
lea
popl
and
mov
lcall
sbb
mov
into
out
or
mov
int
in
fldt
loope
jl
call
test
jno
pop
and
scas
fbstp
or
jno
mov
inc
loope
fs
cwtl
sbb
out
shrl
push
iret
scas
insb
rdtsc
push
sbb
add
cwtl
and
movsl
push
push
jns
jb
or
mov
push
push
mov
and
daa
cs
and
fcom
cmp
xchg
call
xchg
test
cmc
mov
xchg
imulb
jbe
cs
sbb
adc
into
xor
lret
mov
xchg
or
test
stos
dec
mul
pop
or
sub
fildll
jnp
jb
jg
and
test
add
xchg
ret
aas
dec
pusha
je
dec
dec
cmc
scas
imul
stc
push
xor
fs
stos
sub
xor
enter
cli
outsb
loopne
test
push
mov
insb
lret
insb
xor
fistl
jle
pop
jnp
cmp
fstps
mov
jnp
bound
loop
lea
pushf
cmp
jno
xchg
aas
sar
mov
testl
ja
aad
jb
cmp
cmpsl
lret
inc
dec
inc
sbb
insb
cld
lahf
ja
pop
mov
add
mov
lock
arpl
sbb
jo
jno
pop
shll
into
adc
sub
dec
mov
push
movsl
jmp
mov
xchg
call
inc
add
mov
xor
scas
nop
or
fistpl
aaa
fistpll
pop
inc
add
xchg
push
push
add
hlt
sbb
xchg
or
data16
jae
loopne
cli
rcll
fistl
lods
adc
into
shlb
lods
xchg
xchg
jo
xchg
xchg
out
push
cmp
dec
pop
movsb
out
jno
xchg
dec
jmp
cmpsb
push
movsb
rcr
push
test
and
jo
jge
lret
sarl
bsf
adc
or
mov
icebp
adc
jp
leave
xor
xchg
int3
dec
lods
imul
jnp
xor
push
pop
mov
sbb
add
ss
add
lock
inc
int
or
fbstp
shl
out
shll
lock
fcompl
aad
mov
sahf
lret
movsb
sbbb
int
ror
adc
pusha
mov
mov
lods
testb
filds
push
les
dec
dec
dec
scas
mov
jle
jle
mov
ror
or
mov
xchg
adc
pop
and
in
mov
pop
out
scas
js
stos
xor
sub
push
test
imul
pop
xchg
pop
cs
imul
cmp
push
add
adcb
push
andb
xor
push
ret
lret
cmp
sbb
fwait
mull
mov
outsb
insl
out
stc
mov
dec
lret
fbstp
push
scas
mov
sti
mov
lods
mov
outsb
sub
cmc
cwtl
gs
mov
test
aad
xor
inc
inc
xchg
sub
push
xchg
fwait
adc
hlt
cmp
lret
adc
inc
leave
aam
or
leave
adc
mov
jmp
pushf
scas
out
push
sbb
cli
push
cmp
jnp
loop,pn
mov
jae
movsl
jge
xchg
xor
or
sbb
adc
ja
jne
addr16
adc
inc
adc
sbb
or
xchg
stos
lods
lret
std
fs
daa
mov
outsb
xorl
clc
add
push
cmp
into
mov
and
mov
mov
inc
mov
out
cmp
enter
cmp
clc
push
push
es
in
xchg
lahf
dec
mov
xor
movsb
mov
xchg
add
cld
je
idiv
mov
push
rclb
mov
shll
sbb
add
mov
xor
mov
call
clc
ret
rolb
scas
imul
lret
sbb
repnz
xor
lds
xchg
jae
repnz
sub
loopne
adc
cmp
outsb
insb
xchg
pop
lahf
andl
daa
cwtl
dec
int
fimull
dec
pop
mov
and
mov
jg
pop
insb
clc
clc
xchg
jb
mov
xchg
sub
adc
inc
adc
daa
fsubs
movsb
or
and
pop
lahf
popf
cmp
pop
adc
pop
cmp
push
outsb
sbb
clc
xor
add
xor
clc
sub
adc
cmp
sbb
mov
insl
add
inc
push
mov
and
mov
dec
popf
push
std
bound
lcall
and
xor
repz
mov
push
stos
pop
push
repz
mov
cmp
insb
or
loopne
push
rcrl
addb
mov
std
and
sub
repnz
sbb
xchg
icebp
sub
mov
xlat
mov
push
gs
icebp
jge
cli
jg
pop
sti
shlb
jl
arpl
nop
nop
adc
mov
add
cmp
call
mov
int
mov
adc
pop
sub
xlat
test
outsl
add
in
push
inc
cmp
sahf
mov
inc
or
jb
les
mov
xchg
xor
xchg
dec
hlt
jle
mov
and
sbb
ret
pop
mov
sbb
stc
mov
dec
testb
cmp
test
pop
sarl
mov
add
xchg
jg
cmp
lcall
lods
lret
push
adc
sbb
mov
lcall
enter
ret
xchg
orb
or
dec
ljmp
or
jo
cs
insl
dec
or
adc
dec
pop
jnp
jg
lods
mov
shl
dec
bound
scas
mov
xor
adcb
rclb
iret
cmp
mov
sub
jbe
ss
and
sbbb
insl
lahf
push
cmpsb
ja
mov
rcr
mov
mov
mov
mov
jl
idivl
scas
add
subl
xchg
jno
shrb
or
xlat
into
in
dec
aad
in
mov
jo
xor
cmp
int3
mov
add
lock
push
mov
rcrl
out
pop
jge
sbb
xchg
push
iret
icebp
scas
fs
jl
test
sbb
sbb
out
pop
ret
sbb
jle
and
addr16
call
and
loopne
cmp
inc
sarb
mov
out
push
sub
xor
cmp
pop
ffreep
add
sbb
and
shll
add
lahf
pop
lcall
into
add
sbb
shll
call
sub
in
or
scas
pop
ret
test
cmc
out
mov
mov
rolb
loope
xrelease
sub
cs
mov
in
cmp
test
movsb
scas
insl
or
lea
out
int3
xor
sub
or
pop
mov
or
sbb
add
pop
movsl
or
inc
dec
mov
ds
push
faddl
rcrb
pop
jae
dec
hlt
mov
lcall
push
mov
pop
aaa
xchg
mov
pushf
ret
test
hlt
mov
push
jae
push
push
mov
jle
add
ss
pop
push
cmp
testb
cld
fld
and
adc
adc
jle
push
out
cltd
cmp
jp
subl
sahf
mov
jmp
js
xchg
cli
dec
cmp
mov
mov
aas
cltd
leave
push
sti
ljmp
lods
in
repz
mov
stos
mov
out
jmp
fs
cmp
xchg
clc
repnz
push
iret
inc
add
lods
daa
adc
scas
mov
rcrb
or
fdivs
xchg
push
cmpsl
es
fisubrl
inc
dec
mov
jno
int3
mov
xor
sbb
shlb
stos
cmp
ret
pop
sub
gs
pusha
mov
ljmp
jl
jae
inc
dec
inc
add
sahf
mov
retw
shr
imul
jb
xchg
cmp
mov
cltd
imul
xor
jle
jg
call
fsubs
sbb
jl
ss
pop
push
scas
xchg
and
lcall
outsl
xor
push
add
fnstcw
add
jecxz
ja
hlt
ds
test
aaa
cmp
aam
push
mov
pop
inc
lret
dec
fstpl
outsl
sub
sarl
xchg
mov
jl
push
xor
sbb
push
aaa
xor
outsb
pop
mov
ljmp
xchg
adc
and
repnz
mov
loopne
mov
decl
pusha
jecxz
fwait
popa
clc
lods
enter
lock
int
mov
jmp
xchg
or
adcb
push
ret
dec
in
cs
call
cli
dec
inc
loop
hlt
sbb
sub
pop
xor
into
sbb
gs
mov
mov
leave
dec
dec
popf
out
mov
rolb
jmp
insl
sarb
mov
cmp
cli
mov
mov
loopne
jae
jle
lea
jg
aaa
ja
insb
mov
rorb
out
repz
sub
dec
rcr
or
cmp
in
inc
lahf
test
sub
adc
test
aaa
into
or
pop
push
stos
mov
pusha
push
mov
dec
ljmp
rolb
dec
pop
inc
mov
in
mov
int
fs
dec
ja
outsl
icebp
dec
push
aaa
ret
jge
jg
call
inc
mov
arpl
mov
les
stos
orb
sbb
xor
xor
mov
sarb
test
out
push
cmpsb
ret
scas
cltd
xchg
xor
dec
imul
xorl
lahf
out
lods
mov
fstl
xchg
pop
les
cld
jmp
mov
jg
mov
xchg
mov
xchg
stos
cwtl
jbe
jg
test
ds
out
jns
shrl
rcl
popf
inc
add
inc
sahf
push
adc
aaa
mov
jl
dec
fbstp
xor
lea
mov
mov
loopne
or
sti
pop
sub
pop
pop
in
mov
xchg
hlt
jno
or
add
mov
push
leave
cmp
ss
dec
or
cmpl
lret
dec
xchg
mov
mov
aas
cli
push
rcr
xchg
adc
cmpsb
movsb
cmpsl
inc
repnz
clc
loopne
stc
incl
cli
xchg
jnp
in
sub
mov
mov
jmp
mov
push
sbb
inc
ss
or
iret
xchg
push
pop
cmp
jo
call
imul
add
int
xor
mov
cmp
adc
stc
mov
mov
push
leave
nop
testl
mov
popf
mov
add
je
movsb
cmc
test
jp
movb
inc
xchg
or
xchg
sub
hlt
push
mov
lret
popa
xor
xor
jne
rcr
aas
ja
int
mov
inc
js
mov
adc
adc
in
adc
mov
cmp
push
jmp
fsub
jnp
jp
xor
sbbb
mov
clc
sti
cwtl
push
add
sub
mov
lcall
add
or
jae
out
dec
ficompl
rolb
icebp
push
and
or
aas
mov
fiaddl
sarl
xchg
fs
cltd
mov
jmp
jno
das
pop
divb
mov
sbbl
notl
push
pop
jo
insb
imul
ss
fwait
dec
aad
mov
mov
sbb
aad
dec
outsb
push
adc
xchg
inc
dec
pop
xchg
and
aas
sub
ss
sbbb
and
das
lock
adcl
out
les
out
sub
or
mov
in
mulb
inc
rorl
xchg
out
inc
mov
ret
in
std
cmp
xchg
in
sti
rcrb
lret
rorb
sbb
lods
sbb
add
jmp
mov
xchg
dec
sbb
and
or
cmp
insl
cld
pop
aas
movsl
add
outsl
lods
sbb
sub
sub
mov
sub
sub
sbb
scas
imull
aam
sti
stos
xchg
out
xchg
stc
jecxz
mov
jmp
push
sub
fcmovnbe
ja
das
ds
jae
sbb
leave
icebp
mov
shrl
aam
scas
je
xchg
adc
pusha
mov
loop
push
aas
es
mov
dec
cli
xchg
pop
mov
and
scas
pop
loopne
push
lcall
xorl
cmpsl
mov
and
std
mov
xchg
xchg
cmp
mov
dec
inc
cli
setno
or
dec
add
mov
das
fsub
dec
xchg
inc
stos
jbe
cmpb
arpl
pop
mov
push
neg
inc
push
xchg
push
fsubs
push
call
inc
jae
lods
std
xlat
fdivs
pusha
loopne
in
mov
cmp
mov
fists
xchg
push
mov
loop
out
jbe
insl
inc
ficoml
pop
or
cmp
and
mov
jecxz
adc
push
or
xchg
mov
lret
push
fsts
movzwl
mov
ds
inc
aam
jo
clc
inc
push
mov
xchg
data16
int3
mov
loop
das
out
scas
jmp
ds
inc
jne
mov
add
aad
icebp
pop
je
mov
ds
fsubr
lds
fisubrs
cltd
xor
dec
cs
aas
movsb
push
xchg
dec
cmpsl
sub
sahf
push
in
pop
inc
popa
and
push
pop
sub
aad
cmp
repnz
loope
sub
adc
add
cmp
dec
into
fistps
sub
sub
sub
into
sahf
mov
push
jbe
push
test
into
and
push
lahf
jne
pop
loope
push
mov
je
out
test
pop
nop
cld
loop
and
adc
mov
arpl
sub
enter
adc
or
lret
outsb
cmp
ljmp
jecxz
or
pushf
and
jnp
shll
ficomps
stos
das
daa
push
sub
xor
dec
popf
lods
jo
fistpll
inc
sbb
mov
out
lahf
add
ds
jne
inc
xor
aad
xor
pop
addr16
push
adc
lock
adc
pop
push
lret
sbb
xchg
xchg
out
in
sub
and
je
sbb
adc
cmp
repz
jle
adcb
in
xor
popf
xchg
mov
jmp
sbb
mov
mov
mov
or
lahf
jp
movsb
mov
fistpll
and
aad
push
popf
mov
daa
sub
lock
and
mov
test
cld
pop
push
ss
xchg
mov
sub
inc
xchg
mov
lahf
or
xchg
push
pop
repnz
mov
jb
jae
pusha
pop
loope
push
push
pushf
cmp
repz
dec
push
fidivs
mov
std
and
xor
fbld
xchg
mov
mov
and
aad
add
std
jne
aad
lsl
push
sbb
push
mov
mov
mov
cli
js
scas
popf
and
push
bound
fs
and
test
jb
js
cmp
xchg
ljmp
inc
cmpsb
xchg
ss
lods
cli
bound
push
add
dec
fstps
ja
push
ret
dec
pop
fdivrs
rol
sub
cmp
dec
into
mov
inc
pop
inc
or
test
movsb
in
aad
mov
add
and
inc
icebp
test
jp
pop
cmp
jge
fxch
mov
loop
mov
mov
cmp
mov
add
push
rep
dec
ja
adc
or
fdivs
arpl
fstl
dec
cli
or
mov
lea
xor
out
mov
out
mov
cli
mov
adc
out
sbb
sub
negb
pop
push
jp
mov
cmc
jne
sub
aaa
cmpsb
arpl
sbb
fists
xor
inc
repz
add
mov
mov
pop
or
imul
call
lret
mov
in
xchg
in
inc
daa
jbe
push
int3
cwtl
sub
pop
inc
rol
adc
mov
pushf
call
add
sahf
cmp
fisubrl
fldl
mov
ds
adc
popf
dec
rclb
xor
dec
iret
call
push
pop
in
push
lcall
push
ljmp
shlb
cmp
mov
mov
cltd
xor
scas
xor
and
mov
add
clc
mov
pop
adc
jbe
movsl
xchg
mov
in
sbb
and
test
push
sub
and
mov
aaa
js
jmp
mov
cli
ret
in
push
loope
dec
adc
test
mov
pop
std
je
push
das
int
stos
add
jp
sbb
dec
adc
mov
in
cmp
pusha
jle
les
int
rorl
inc
lcall
or
mov
out
call
roll
sub
adc
add
scas
mov
xchg
adc
jo
cmp
or
jns
cmp
dec
xor
ja
mov
mov
cmpsl
push
adc
or
dec
mov
xor
in
jb
lods
xchg
sub
mov
jle
add
cs
inc
inc
daa
add
adc
cs
mov
call
sbb
inc
sub
jne
imulb
std
and
adc
mov
js
popa
xchg
popa
ret
ffreep
dec
bound
or
xor
sub
xchg
mov
inc
pusha
cwtl
scas
aaa
xor
out
jmp
xchg
jno
lods
cmp
lahf
xor
mov
add
pop
dec
sti
stc
mov
icebp
push
and
dec
out
cwtl
fwait
sbb
push
jb
push
cmp
xlat
les
jge
lods
sar
jae
xchg
adc
das
add
fldenv
cmp
jns
je
dec
mov
shlb
dec
sbb
loop
adc
jge
rolb
sbb
pop
sub
pusha
jnp
pop
fisttpl
jl
int
mov
push
movsl
lods
out
sbb
push
ja
int3
ret
mov
push
xchg
adc
and
pushf
aad
inc
das
xor
std
inc
lahf
add
aad
mov
lret
add
cli
dec
dec
jge
jb
lret
or
add
in
push
pop
dec
adc
mov
int
dec
test
test
ds
scas
pop
bound
adc
jne
popa
pop
jne
push
jle
adc
inc
push
mov
mov
mov
in
fists
mov
pop
aas
jnp
loope
bound
test
pop
clc
call
sub
in
xor
aaa
ss
mov
pop
icebp
jbe
cs
and
pop
sbb
xor
jle
movsb
pop
mov
shll
arpl
inc
shr
imul
int3
inc
cltd
insl
cli
jo
push
mov
into
push
mov
roll
iret
aaa
or
mov
mov
sarl
enter
lcall
dec
push
xchg
je
and
mov
cmp
mov
js
icebp
icebp
mov
in
push
addr16
lds
sti
adc
test
push
cmp
cmp
mov
push
testl
xor
jne
js
jo
mov
pop
shl
mov
jnp
jge
add
popa
and
cmpsl
xchg
pop
lahf
mull
lds
pop
fiadds
mov
or
sub
sahf
out
sub
sbb
or
or
out
imul
pop
pop
add
xor
xchg
push
xchg
cmp
sbb
xor
jbe
cld
pushf
pop
cmpsl
movsb
sbb
insl
xor
enter
sbb
jbe
jmp
lods
aam
xor
mov
sbb
insb
nop
push
and
mov
outsl
stc
adc
mov
xor
inc
xor
das
cltd
add
mov
scas
cmp
jp
or
repnz
repnz
outsl
xchg
cmc
std
mov
push
test
outsb
mov
push
cld
pop
enter
movsl
adc
push
xor
outsl
mov
inc
mov
dec
add
pavgb
mov
int3
xor
filds
jno
inc
insb
mov
or
push
pop
movsl
sbb
dec
jbe
out
mov
lret
loopne
jmp
push
push
pop
shl
or
mov
gs
outsl
cltd
cmp
jl
mov
mov
or
jl
jnp
pop
dec
ffreep
push
out
push
stos
mov
stos
hlt
scas
aaa
iret
int3
aaa
sbb
cmp
add
jecxz
push
xchg
aaa
fwait
and
xor
gs
pusha
in
push
lea
xlat
outsl
clc
lahf
pop
cltd
loop
js
divl
xor
jle
imul
lcall
test
xor
das
jmp
sub
jno
test
xor
andb
rclb
outsl
jp
es
sti
sbb
subl
inc
es
unpckhps
clc
pusha
mov
mov
mov
add
jno
jecxz
shrb
ss
lcall
xlat
sbb
les
jecxz
xchg
xlat
cmc
bound
or
pop
sti
inc
jge
mov
xchg
add
test
enter
in
push
sub
pop
mov
mov
out
shrl
add
std
mov
adc
lret
out
dec
data16
sbb
dec
push
add
mov
pop
cmp
enter
clc
jmp
xchg
adc
dec
xchg
inc
xchg
stos
cmpsb
xchg
cmp
sub
jae
bound
xchg
push
out
mov
mov
xchg
loope
cmpsl
and
jmp
cltd
roll
sbb
xor
dec
push
loope
outsb
mov
mov
mov
jge
stos
rorb
lahf
xchg
orl
insb
shrl
sbb
lret
mov
lret
cmp
in
ljmp
fnstcw
cmp
jg
mov
push
mov
or
dec
pop
insl
sbb
repz
out
jbe
and
rcrb
cmp
filds
xchg
push
call
pop
cmp
icebp
xor
js
xchg
movsl
pop
lret
shrl
xchg
enter
add
fstpt
push
dec
stos
cwtl
cs
dec
xor
cld
sbb
mov
mov
and
sub
mov
add
js
xor
addr16
jne
pop
mov
hlt
pop
lods
lret
xchg
adc
icebp
xor
sarl
je
shll
cli
add
int
cwtl
into
dec
mov
les
pop
les
push
loopne
sub
popf
mov
pop
or
imul
cmpsb
mov
shll
adc
in
dec
rorl
cltd
shrb
fcompl
dec
in
push
sub
popf
push
adc
cmp
add
xor
mov
cmp
adc
add
and
mov
dec
nop
mov
add
dec
repnz
mov
fdivrs
and
pop
jle
cmp
fadd
cli
mov
ud1
idivl
lret
or
popf
subb
jae
push
mov
ret
fs
adc
popa
mov
jle
aad
add
cmc
stos
sub
mov
nop
lret
xor
mov
lret
mov
gs
and
xorb
pop
ss
push
sub
fsub
in
dec
add
lods
leave
jne
fwait
in
jbe
mov
xchg
xchg
pop
test
mov
mov
jmp
stos
mov
jle
pop
sbb
movsl
dec
or
out
mov
pop
dec
mov
dec
out
xchg
push
mov
or
mov
push
xor
cld
mov
into
imul
ja
sbb
test
mov
das
into
shll
pop
xchg
out
xor
cli
ffree
movsl
pop
notb
mov
jbe
lods
out
jns
mov
dec
loope
call
rdmsr
lock
mov
jno
aam
dec
fbstp
fstl
je
add
imul
cmpsl
and
cltd
mov
insb
into
std
arpl
xchg
cmc
sbb
adcl
dec
ficoml
mov
push
imul
xchg
mov
push
orl
js
in
cld
loope
lock
jae
cmp
sbb
jbe
clc
pop
aad
lcall
xor
outsb
loope
inc
dec
cld
pop
ljmp
addr16
roll
mov
push
scas
jbe
popa
incl
emms
mov
sub
push
mov
nop
jmp
pop
cmc
lea
xor
pop
cwtl
test
mov
push
cmpl
sbb
nop
xor
ss
mov
pop
imul
call
inc
jne
pop
adc
jae
int
inc
xor
push
xchg
push
adcb
and
sti
sti
repnz
cmpsb
fisubrs
cmpsl
clc
xchg
lcall
je
jecxz
int
push
shrb
or
jae
xchg
xchg
cmp
inc
dec
push
test
mov
mov
icebp
adc
imul
sub
xchg
mov
addr16
shrl
fldlg2
xorb
ret
pop
xchg
imul
push
je
fwait
addr16
popf
mov
cltd
out
jecxz
xlat
shl
jecxz
test
mov
test
fisttps
push
add
adc
push
jae
out
jo
or
into
cmp
cmpsb
lahf
lret
mov
push
mov
adc
movsl
push
test
ret
adc
mov
xchg
lds
cmpsb
push
lds
pop
cvttps2pi
imul
pusha
and
push
add
mov
stos
mov
lock
jge
dec
cmp
jecxz
xchg
mov
xchg
ror
ja
iret
pcmpgtw
rcl
xchg
ret
mov
mov
andb
jle
jb
pop
cld
js
add
mov
mov
add
hlt
adc
sub
cli
mov
jnp
cld
jno
fs
mov
aad
iret
out
push
inc
dec
lahf
lods
imulb
xchg
xor
cld
sbb
fwait
inc
ljmp
push
sub
cmp
stc
or
xor
movsb
pop
xchg
movsl
fmul
pop
push
in
adc
popf
push
and
mov
jns
mov
data16
mov
and
movsl
in
shrb
je
stos
mov
je
xchg
sahf
fwait
sub
xchg
or
es
out
pop
leave
andl
mov
dec
cmpsb
nop
fidivrl
mov
add
sub
xchg
js
push
dec
mov
dec
or
fimull
iret
lods
cli
xor
int3
ds
jmp
jno
adc
insl
test
xchg
pusha
sbb
pusha
cmp
xchg
out
inc
mov
add
dec
push
fiadds
test
roll
arpl
stc
rclb
and
clc
cmp
fidivrl
fwait
out
adc
mov
sub
jg
movsb
imul
incl
dec
es
ret
stos
inc
sbb
ret
stc
pushf
cmc
ss
movsb
or
push
subb
sti
addb
mov
cmp
mov
jae
mov
add
xchg
pushf
xor
push
cltd
jbe
pop
jmp
inc
sub
sbb
ljmp
or
push
lods
jnp
enter
insb
jns
push
pop
fst
xor
in
add
sub
inc
dec
test
mov
jecxz
adc
lcall
and
cmp
lcall
in
test
xor
fldl
int
popf
clc
mov
xor
or
cmc
xor
fistpl
roll
lds
mov
cmp
pop
add
adc
stc
or
mov
sahf
outsb
jecxz
mov
or
subl
pop
lods
into
repnz
cli
xchg
daa
sub
mov
jno
subb
popf
addl
data16
scas
jb
adc
xchg
inc
sub
adc
xchg
enter
scas
js
cltd
and
push
xor
cli
out
sbb
out
jmp
jecxz
dec
xlat
dec
jnp
mov
cltd
cmp
mov
cli
mov
cltd
out
es
inc
nop
xlat
mov
nop
xchg
shrl
adc
mov
aas
outsb
adc
inc
into
and
lcallw
call
imul
popf
mov
xchg
outsl
mov
adc
sbb
daa
xor
outsb
jno
gs
inc
adc
scas
cmpsb
ljmpw
cwtl
sub
dec
inc
mov
mulb
adc
in
aam
fnstcw
imul
stc
mov
xchg
roll
negl
popf
in
jp
pop
repnz
and
xor
jns
pop
lds
pop
test
mov
jae
or
fstps
or
add
lea
mov
xchg
nop
dec
cmp
cmp
or
or
jne
out
sarl
iret
and
or
bound
push
sbb
mov
cwtl
push
js
rorb
push
add
int
xor
cmpsl
scas
popa
xchg
xchg
xchg
insb
xor
xchg
cwtl
sub
lea
cmpsl
insb
aaa
pop
lock
das
arpl
or
inc
mov
jno
mov
sti
adc
jne
dec
lods
jbe
inc
iret
mov
adc
jae
xor
jbe
lret
leave
lea
stc
mov
inc
sub
dec
fists
push
ffreep
out
aad
xor
xlat
hlt
dec
repnz
xor
sub
imulb
fidivl
xchg
or
dec
mov
ljmp
cmpb
push
add
dec
adc
imul
mov
test
mov
dec
and
and
cwtl
jnp
bound
cld
cld
push
lods
loope
push
sub
imul
loop
dec
es
cmp
cli
test
iret
add
ss
popf
lds
out
test
and
enter
js
lods
dec
mov
mov
add
fdivr
imul
inc
inc
fwait
sahf
pusha
inc
jp
xchg
push
inc
loope
xor
jge
fwait
loopne
bound
inc
out
push
shl
rcrl
sbb
into
sub
into
test
jl
out
jmp
jg
xchg
cs
sbb
ljmp
sub
test
loope
mov
pusha
and
stc
pusha
hlt
sbb
xor
mov
shrb
les
fistpll
mov
lock
enter
sub
push
mov
pop
inc
add
mov
mov
or
push
cmpsb
cltd
sbb
cmpsb
jo
sub
das
pushf
cmc
pusha
dec
popf
fwait
cmp
insl
ja
jmp
jg
pop
cmp
adc
dec
stos
in
and
or
fstpl
insl
test
inc
out
push
test
pop
mov
and
fnstsw
xchg
jecxz
or
xchg
pop
push
popl
sbb
ds
mov
sbb
imul
or
sub
lret
xchg
in
or
pop
mov
test
add
mov
xchg
cmp
mov
pop
pop
in
jbe
pop
mov
test
mov
clc
jmp
xlat
dec
out
int
js
sbb
and
fidivrl
mov
vmptrld
stos
lret
xchg
mov
lods
test
in
mov
mov
xchg
imul
mov
push
pop
pop
in
push
inc
fdiv
mov
adc
insb
imul
mov
int3
aam
shlb
rorl
sbb
add
and
push
sub
sbb
xor
push
in
insl
in
push
cmpsb
xchg
es
dec
mov
push
shrb
call
jne
insl
imul
pop
push
test
dec
out
pop
mov
fucomip
cmpsl
testl
ja
daa
xchg
sbb
inc
jp
mov
icebp
stos
test
sub
fxch
adc
imul
adc
lret
insl
pop
call
imul
int
pop
fs
movsl
jno
fsubs
cmp
jo
push
leave
mov
push
test
push
jmp
adc
aas
mov
mov
mov
leave
aas
adcl
push
push
call
mov
sub
xchg
stc
xlat
or
mov
pop
fbld
lods
aas
push
pop
std
cmp
push
ja
cli
mov
divb
test
pusha
push
pop
push
in
sub
insl
pusha
aaa
mov
and
xor
les
fimull
mov
sbb
loopne
mov
push
movsb
jne
jge
enter
lret
push
xchg
dec
adc
adcb
pop
cmpsl
inc
out
ficompl
sub
and
or
ret
adcb
mov
in
mov
cmp
push
in
jo
in
push
jnp
cmpsb
inc
jl
aam
jae
outsb
pop
mov
outsl
mov
bound
push
mov
fwait
shr
jo
cmc
loopne
std
sub
mov
mov
fldl2e
sub
shll
xchg
movsl
cmp
or
fdivs
les
adc
jae
das
and
pop
jge
mov
mov
inc
pushf
adcl
xchg
push
xor
and
or
fisttpl
sbb
fcompl
sti
sahf
pop
lret
push
jae
test
push
xor
sbb
dec
sarb
push
push
add
in
test
push
in
div
icebp
inc
repz
das
and
and
pop
ret
mov
insl
popa
cmp
xchg
and
sub
cwtl
in
fidivrs
std
mov
mov
mov
add
movsb
add
mov
xlat
sbb
das
stos
sub
je
mov
adc
loop
mov
out
sbb
pop
push
in
add
or
repnz
xor
xorl
fildll
lods
jp
jmp
addr16
orb
push
flds
xor
sahf
adc
mov
insl
int3
push
aad
in
divb
push
cmp
pushf
dec
mov
fwait
add
jle
sahf
sub
push
xchg
push
cmpsb
in
and
movsl
stc
or
lcall
xor
in
adc
and
xchg
add
mov
mov
push
xchg
jae
jne
cs
movsb
icebp
push
test
sar
mov
mov
push
xchg
xchg
ja
in
fidivs
test
std
mov
enter
lods
xor
nopl
pop
adcl
mov
mov
rcr
stos
xchg
jmp
out
push
lret
ds
in
jnp
jne
xchg
mov
imul
sbb
lods
push
cmp
push
loope
loop
loope
std
xchg
shrb
mov
dec
xor
mov
popa
sti
imull
iret
stos
xchg
int
inc
cltd
sarb
sti
mov
dec
pop
bound
jae
xor
mov
xchg
mov
push
lods
shll
cmp
lock
jg
xchg
int3
cwtl
je
add
or
das
rorb
jb
in
in
add
mov
inc
mov
jno
mov
dec
cli
xchg
arpl
ljmp
stc
xchg
pop
lds
pop
clc
sub
dec
loope
sbbb
dec
imul
lods
jle
stos
mov
nop
mov
xor
sub
in
or
outsb
add
jmp
cltd
shlb
xor
mov
vpaddusw
ljmp
mov
arpl
nop
or
iret
fcmove
xchg
jne
mov
push
icebp
and
mov
aad
xor
jmp
dec
test
dec
in
and
inc
add
scas
fsubrl
adc
andb
ror
xchg
rcrl
xor
sub
xchg
push
jbe
cmp
jle
repz
sbb
push
mov
gs
push
roll
xor
jl
mov
imul
imul
fdiv
push
add
rcrb
shrl
rorl
lds
mov
ficoms
push
mov
push
fldcw
outsb
pop
jl
inc
adc
out
sbb
fisttpll
cmpb
jno
gs
add
es
pop
xchg
aam
add
cmp
bound
or
xor
es
fsub
ds
xor
js
insl
add
subl
inc
jg
mov
test
fidivs
mov
adc
scas
cmp
push
lret
jb
jecxz
cmp
lcall
push
cmpsl
arpl
out
push
add
ror
or
stos
iret
call
pop
js
dec
cmp
mov
add
and
out
mov
add
in
cmp
mov
hlt
leave
push
hlt
das
lds
addr16
movsl
mov
pop
push
mov
xchg
repnz
insb
jo
xchg
scas
scas
push
sub
adc
xchg
aam
js
into
and
xchg
jbe
addb
loope
pop
mov
lods
fldt
mov
mov
rorb
lret
ljmp
dec
jge
mov
stc
fwait
dec
leave
sub
sbb
aaa
or
insl
or
out
pop
and
or
mov
xchg
icebp
enter
dec
movsb
mov
add
mov
insb
sbb
and
je
loopne
int3
cwtl
ds
and
imul
cmpsl
std
add
aam
mov
add
adc
pop
leave
paddsb
js
cmp
xor
mov
in
lock
sbb
rcrl
jnp
push
loop
fsts
insl
mov
int
nop
insl
das
inc
mov
jbe
aas
lods
dec
mov
jg
and
cmp
add
dec
rcrb
and
cs
xchg
adc
cmpsl
loope
lds
pop
in
mov
enter
loope
cmpl
fistpll
out
shll
inc
or
fistps
push
lock
sub
jbe
mov
sarl
jbe
outsb
test
nop
out
xchg
jbe
mov
xchg
push
sub
add
add
mov
sbb
loop
std
cli
jge
shrb
test
push
sarl
lahf
repz
mov
fimuls
fs
push
jg
pop
rclb
lahf
adc
test
or
push
mov
jno
mov
repz
shrb
movsb
imul
lea
sti
outsl
std
sti
pop
inc
or
pop
mov
call
jle
pop
clc
enter
pop
fisubs
or
mov
mov
mov
sarl
aaa
es
sub
iret
insb
mov
dec
cmc
aaa
cwtl
test
push
cltd
pop
sbb
xor
xchg
rolb
jmp
lock
push
enter
ss
jge
push
enter
fmulp
mov
and
test
ljmp
sbb
cli
xchg
push
das
stos
inc
imul
popaw
inc
sbbb
pop
notb
inc
sub
xchg
hlt
pop
popa
ret
lcall
clc
and
shlb
cmp
mov
mov
shlb
and
sub
sub
push
xchg
sbb
mov
fmul
cli
cwtl
cmp
jle
sub
adc
fmul
push
loope
jb
add
push
imul
lock
stos
in
andl
add
lret
das
insb
call
aad
jmp
mov
daa
sub
subl
dec
xchg
popa
rcll
mov
in
es
ljmp
pop
cli
shlb
push
je
jno
ret
pushf
stos
rcrl
sub
jb
hlt
xchg
cmp
loopne
imul
loop
push
and
dec
cwtl
inc
rol
sub
cs
jmp
lret
mov
dec
xchg
inc
outsb
cmp
aam
outsb
sbb
sarl
je
ss
in
les
popf
lcall
xchg
or
movsl
or
pop
dec
fucomp
aad
gs
leave
popf
addr16
dec
and
loop
and
rorb
jbe
addl
mov
mov
jecxz
mov
mov
jbe
ret
int3
xchg
mov
and
movsb
repz
pop
jne
cwtl
insl
inc
out
cmp
xor
nop
pop
cmp
adc
sbb
lock
arpl
js
lret
lea
outsl
lret
dec
outsl
mov
enter
xor
leave
mov
loope
subl
ret
pop
jge
mov
pop
shlb
dec
adc
enter
es
xor
dec
mov
xchg
and
mov
out
movsb
jmp
pop
pusha
fs
leave
pop
mov
das
cmp
loope
lcall
add
mov
punpckhbw
add
jno
cmp
sub
sub
jl
xor
es
lock
ds
sub
sbb
xor
mov
jae
cli
inc
mov
push
mov
xor
je
xchg
cli
push
mov
leave
add
inc
in
mov
pop
mov
sahf
cmc
jo
and
xlat
xor
dec
inc
out
xor
jb
push
sti
inc
xchg
mov
ss
call
nop
loope
ja
lret
imul
pop
fsubrl
pop
popa
into
mov
add
jnp
xchg
ret
imul
hlt
gs
gs
rcrl
sub
lret
sub
cmp
jmp
xchg
out
mov
rcl
or
sub
sbb
stos
inc
sbb
icebp
mov
jl
insb
push
iret
dec
lods
add
int3
nop
in
xor
dec
stos
mov
inc
dec
shrl
pop
sbb
scas
xor
xchg
cmp
loope
bound
cmp
cwtl
xchg
outsl
add
and
xchg
addl
mov
flds
pusha
xchg
hlt
jne
inc
jbe
jmp
push
push
cmpsl
mov
int3
sub
jle
std
pop
lahf
and
or
cli
loope
xorl
fmull
scas
popa
push
mov
pop
add
push
lcall
mov
sbb
ret
cmp
imul
sti
loop
nop
cmp
mov
jne
or
sbb
pop
nop
add
insb
loop
mov
mov
icebp
or
mov
mov
je
xchg
add
daa
push
fidivrl
outsb
and
cltd
das
xchg
loop
mov
or
nop
cmc
xchg
or
jne
mov
or
arpl
jl
std
jae
cmp
jge
inc
pop
xor
arpl
jno
mov
adc
jl
out
and
pop
and
dec
cltd
cmp
insl
mov
aam
or
push
or
notb
testl
aas
mov
jns
inc
push
and
call
in
aas
push
out
sbb
adc
and
outsl
inc
push
cwtl
test
lret
mov
mov
xor
push
mov
jp
pop
xor
sbb
sub
aam
mov
mov
hlt
fisubrs
insl
lock
pusha
repnz
xchg
sub
fsubs
movsl
out
add
stc
in
gs
jmp
and
sbb
lods
pop
xchg
in
setge
cmpsl
fwait
push
jo
sarl
pusha
sub
cmp
addl
fprem1
out
mov
dec
test
or
decl
dec
or
add
shl
lods
add
bound
outsb
out
imul
mov
inc
ret
pop
cmp
in
cmovs
daa
mov
mov
leave
adc
insb
mov
cli
adc
fcmovu
aaa
aas
mov
cmpsl
aam
mov
nop
pop
daa
inc
pop
xchg
mov
mov
test
dec
inc
repnz
jle
test
out
sbb
mov
hlt
sarl
mov
bound
rclb
or
add
outsb
aas
aam
adc
sub
sarl
ror
decb
and
mov
adc
into
jae
xor
fdivs
or
push
fistpll
movsl
fsubrl
push
adc
add
jo
jge
out
xchg
jecxz
js
in
cmpsb
adc
sub
das
inc
cwtl
in
cltd
roll
je
sub
sub
dec
fs
dec
repnz
ss
sti
mov
rolb
repz
fisubl
rorl
pusha
hlt
xlat
ffreep
gs
fcomps
mov
aam
jb
icebp
shrl
pop
loope
outsw
xchg
or
mov
mov
sti
rclb
mov
inc
jl
ret
popf
and
jbe,pn
popf
add
fstpt
clc
lods
inc
adcl
mov
xchg
out
push
mov
pop
xchg
pop
dec
sbb
add
push
push
mov
pop
or
loopne
movsb
xchg
into
mov
mov
lds
jp
xchg
sub
push
or
mov
pop
or
leave
cmpsl
or
aas
pop
bound
lret
aas
cwtl
push
ljmp
mov
insl
pop
jg
xchg
repz
call
leave
addr16
insb
popf
cmp
outsb
stc
add
fisubrl
or
lods
cmpsl
mov
pop
jecxz
jns
mov
xchg
cltd
mov
fldcw
push
cmp
lods
or
in
xchg
daa
jne
jb
shlb
mov
pop
mov
pop
loope
and
jp
mov
xchg
test
scas
push
outsl
pop
and
add
aam
es
and
scas
push
cmp
clc
repz
lods
mov
mov
mov
inc
xchg
js
mov
push
xor
clc
stos
sbb
ljmp
stos
pushf
xchg
outsl
mov
adc
aas
mov
shlb
mov
imul
pop
jecxz
cmpsb
cwtl
sbb
insl
je
ret
out
dec
loopne
rorb
mov
mov
or
cmp
fnstenv
fildll
fsubrs
mulb
out
ret
ljmp
hlt
sbb
leave
dec
mov
mov
adc
loope
xor
mov
mov
cli
jl
and
pop
inc
sub
mov
out
loopne
jp
jno
add
xor
enter
cli
xchg
rorb
sub
pop
movsb
dec
sub
outsb
xchg
xchg
sbb
jae
sbb
adc
mov
cwtl
insb
pop
jl
xchg
lods
ja
sbb
mov
lock
out
mov
inc
out
xor
mov
adc
outsl
push
jecxz
mov
mull
ret
pop
mov
stos
mov
jmp
pop
imul
cmp
add
xlat
dec
mov
in
arpl
inc
or
push
outsl
psubsb
out
dec
lea
jmp
mov
int
out
mov
add
mov
push
push
int
pop
pop
push
iret
aam
push
jns
cmp
pusha
in
cmp
sti
dec
cmp
sub
test
adc
leave
adc
sahf
and
mov
jnp
mov
add
inc
addr16
sub
mov
imul
mov
xchg
clc
mov
mov
loop
loope
psrlw
in
sub
ljmp
jne
xchg
sub
sbb
xchg
test
loopne
pop
jno
pushf
push
cmp
push
pop
xchg
cmc
jge,pt
lcall
loopne
cmpsb
cmp
ret
jl
loop
adc
test
repnz
lret
hlt
mov
inc
fisubl
mov
aad
and
mov
inc
lret
cmp
and
sti
mov
aam
hlt
adc
movsb
sbb
scas
jae
pop
adc
pop
aaa
pop
fistpll
pop
arpl
dec
xchg
mov
movsl
ret
adc
and
mov
dec
inc
bound
jnp
mov
in
cmpsl
mov
jmp
out
orb
push
fwait
jnp
mov
rcrl
dec
cmpsl
cld
loope
aas
scas
daa
pop
xchg
arpl
pop
outsb
mov
adc
hlt
addr16
fists
lods
cmp
bound
sti
mov
movsb
call
inc
adc
lcall
adc
ljmp
xchg
pshufw
mov
lahf
out
les
fcmovnu
xor
mov
xchg
adc
pusha
cli
mov
cmpsl
add
xchg
leave
andl
push
mov
xor
test
push
mov
add
out
lcall
or
popf
or
sbb
mov
sub
adc
jae
cmp
dec
inc
or
mov
push
or
sub
xchg
cs
mov
test
inc
push
ret
nop
jae
cmpb
subb
mulb
movsl
add
dec
test
mov
pop
sbb
repz
popa
scas
pushf
xchg
push
sbb
dec
cli
dec
or
fists
and
add
jecxz
jae
add
mov
cld
xchg
stos
cmpl
popf
jg
pop
insl
push
sarb
mov
jg
shll
mov
gs
jle
dec
arpl
fcmovnbe
pop
outsb
jmp
adc
lock
and
xor
cmp
aas
mov
pop
std
xchg
les
jle
je
sbb
pop
rclb
daa
push
adc
cmp
jb
sbb
loop
adc
fwait
xor
mov
adc
outsl
inc
add
lcall
push
jg
pop
push
adc
dec
lcall
jbe
push
mov
cmc
adc
addr16
push
mov
pusha
dec
out
outsl
ds
fisttps
nop
xchg
push
lock
pop
pop
cli
jb
insl
push
loopne
js
adc
add
arpl
mov
add
fs
or
cmp
sub
imul
cmp
inc
cs
push
cmpsl
sbb
cmp
leave
xor
out
cltd
shlb
jbe
movsl
cmc
lods
cli
jg
in
popf
dec
sahf
and
push
leave
das
ds
add
out
ret
mov
push
sbb
pop
cmp
aad
push
cmpsl
cltd
or
loope
ret
xor
je
imul
pop
fimull
test
scas
cmc
shrl
lret
popa
mov
call
pop
fs
loop
adc
jecxz
clc
pushf
lock
je
add
imul
sub
pop
stos
sti
jae
pop
xlat
mov
cmpsb
push
pop
adc
cmp
inc
jle
pusha
pop
cwtl
dec
lret
or
and
mov
fs
fdivrl
jnp
dec
push
pop
xor
test
clc
les
arpl
push
fdivrl
pop
adc
outsb
mov
inc
adc
dec
fimull
inc
push
mov
decl
or
fidivrl
movsb
jmpw
mov
das
and
sub
cmp
jo
mov
push
push
inc
or
add
push
mov
xchg
sbb
mov
sbb
rol
xchg
inc
addr16
xchg
or
inc
and
out
aaa
shr
iret
add
adc
stos
out
scas
push
outsl
fwait
add
mov
lock
sbb
shl
mov
jo
cmp
cmpsb
movsl
rcrl
sub
mov
adc
mov
pusha
dec
pop
sbb
cmpsb
adc
fnsave
jb
das
inc
js
cmp
pop
dec
int
ret
add
cmp
sbb
test
jle
jbe
nop
test
pop
and
repz
mov
add
js
jns
lock
lret
mov
leave
pop
leave
mov
ret
pop
add
in
mov
mov
lods
sbb
aad
ret
push
nop
mov
bound
das
ds
popa
and
leave
test
sub
cmpsl
push
mov
dec
movsb
test
arpl
ret
mov
mov
jg
push
call
sub
and
dec
ror
mov
rolb
in
mov
fwait
adc
adc
xchg
hlt
xor
out
stos
jmp
jns
popa
fwait
dec
push
sahf
xchg
lock
mov
jno
fdivs
cwtl
lcall
dec
enter
cmp
repz
push
cmp
in
imul
push
int
pushf
aad
push
inc
cmp
lret
into
test
rcr
lods
inc
or
out
mov
cmp
ret
dec
lcall
inc
stc
pusha
rcrl
inc
jmp
inc
cmc
pop
sbb
cmp
out
sahf
adc
out
divl
jnp
sub
movsb
loopne
data16
or
insb
repz
fstl
pop
bound
insb
js
and
jae
adc
daa
jmp
and
push
out
out
adc
inc
faddl
mov
ret
mov
inc
mov
lret
test
test
ds
pop
int3
xchg
fldcw
or
cmp
mov
pop
or
push
pop
sub
out
fmul
out
dec
sub
out
sbb
mov
lret
fidivl
cld
out
jae
push
daa
cs
insl
cs
mov
xor
push
jb
aad
cltd
adc
or
ret
imul
xchg
testl
sub
push
sbb
fsubs
xchg
inc
add
adcb
adc
mov
in
fcmovbe
jp
sub
lods
outsl
lea
cmp
add
jp
dec
cmp
mov
sub
dec
in
sbb
mov
ds
pusha
aad
aas
sarl
dec
cltd
mov
repnz
fildll
in
add
mov
push
hlt
or
dec
hlt
clc
jnp
rcll
iret
insb
mov
dec
call
add
push
mov
hlt
clc
push
mov
mov
aad
insl
pop
div
lods
adc
xor
or
loopne
mov
dec
mov
aam
push
inc
xchg
mulb
xchg
or
mov
mov
and
add
ja
imul
sbb
daa
ds
xchg
cmp
sti
cli
add
jmp
mov
jp
push
pop
push
xor
enter
and
out
sarl
out
xor
nop
mov
sub
mov
inc
sar
sub
bound
pushf
test
mov
cmp
ficompl
rcrb
jg
iret
dec
and
sarb
test
mov
cmp
stos
and
test
dec
movsb
lahf
sbb
cmc
ficomps
mov
inc
xor
xchg
cmp
sbb
frstor
call
sbb
lds
push
sahf
out
fbstp
or
mov
pop
insl
hlt
dec
jp
mov
stc
add
repnz
fwait
imul
pmaxub
push
ss
cmp
xchg
orb
push
pushf
jge
jno
in
cmp
pop
ret
pop
push
in
mov
xchg
loop
mov
jg
in
insl
orb
push
shl
mov
add
fwait
cmp
add
inc
popa
aaa
push
aam
add
sbb
adc
cmpb
cmpsl
adc
pop
cld
mov
add
xchg
dec
outsl
cwtl
sub
mov
stos
jecxz
int3
cmpsb
pop
lret
xchg
sbb
mov
cmp
aam
jl
mov
rsqrtps
orb
and
dec
jnp
xor
jo
imulb
popf
inc
xlat
loope
xchg
leave
mov
xor
out
xor
or
jg
lods
int
data16
enter
lahf
popf
xchg
js
and
xor
xchg
and
sbb
gs
cmp
hlt
mov
cmc
jg
dec
sahf
repz
test
cmc
sbb
aam
call
and
js
stos
movsl
jp
inc
jae
rcrl
sbb
cmpb
and
les
lahf
mov
push
fs
mov
out
fs
out
faddl
xchg
sbb
loope
pop
cmp
jmp
xchg
mov
and
xchg
iret
push
clc
add
ret
cmp
into
subb
and
jg
ja
adc
pop
imul
xchg
inc
pop
in
mov
adc
mov
loop
mov
push
test
sub
xlat
jno
insb
push
pop
jb
add
jns
mov
mov
inc
lods
roll
or
xor
push
es
sbb
dec
hlt
push
mov
movsl
jl
jge
inc
xor
hlt
push
loope
dec
jno
mov
fldl
addr16
push
jge
adc
jne
adc
sbb
lea
jnp
inc
mov
or
pop
mov
xlat
sbb
mov
leave
mov
rcrb
sahf
sub
sbb
jnp
inc
or
pop
jp
mov
pushl
test
mov
add
add
call
xchg
jnp
call
xor
xchg
lret
fstpt
mov
fbstp
jl
or
test
and
ja
ljmp
insb
jb
and
dec
lods
fcmovne
out
jmp
cs
test
negl
sbb
sub
xor
and
mov
jne
imul
roll
sub
ret
xchg
push
and
cmp
sbb
sti
and
and
out
cltd
push
pop
mov
add
test
cmpsl
mov
pop
xchg
xchg
jne
mov
xor
add
pop
aas
xor
loop
arpl
inc
push
dec
adc
rsm
fwait
push
orl
mov
and
or
sub
test
test
aaa
loope
mov
jbe
and
adc
test
jb
dec
mov
xorb
xchg
lahf
nop
adc
and
add
mov
inc
push
pop
dec
xchg
mov
push
push
and
icebp
xor
fmull
popa
dec
int
insb
cmp
shrb
sub
iret
mov
imul
imul
bound
push
xchg
push
dec
daa
inc
es
xchg
or
das
inc
les
addr16
pusha
or
fidivl
hlt
roll
mov
repnz
adc
jecxz
jmp
fbstp
jecxz
jbe
add
std
ja
pop
dec
addr16
shll
sub
mov
testb
ds
out
mov
popa
mov
rcll
jl
loope
xchg
outsb
sbb
fs
loop
and
mov
nop
mov
mov
and
lret
and
outsl
push
rcrl
jno
aam
mov
jge
xor
pop
jl
pop
push
out
aad
xor
inc
insb
cli
xchg
push
add
inc
je
rcrb
dec
faddl
js
mov
adc
stos
jnp
mov
sub
pop
mov
xor
push
popa
in
dec
in
mov
popf
std
pop
adc
dec
iret
stc
pop
sti
xchg
and
mov
or
sbb
add
cmp
mov
ja
fiadds
and
fsts
or
insl
jbe
dec
fisttpll
test
test
aaa
dec
fcmovnb
sbb
xchg
scas
lods
add
aas
mov
daa
adc
sub
test
pusha
addb
out
mov
sub
push
test
clc
sti
testb
xchg
loope
push
shrb
sub
mov
or
sti
int
cmp
outsl
jnp
xchg
jns
lds
add
sahf
mov
in
mov
rcrl
inc
xchg
push
dec
lods
subb
les
jnp
adc
in
sbb
dec
mov
lcall
and
inc
lds
andl
and
mov
sbb
fnstcw
lret
dec
add
mov
sbbl
fs
mov
out
outsl
hlt
sbb
testl
pop
icebp
es
push
xorb
sahf
je
push
ja
leave
pop
ret
in
sbb
pop
add
fmul
stos
mov
push
orl
mov
inc
cmpsb
mov
fxch
fs
add
adc
mov
ljmp
xor
arpl
push
call
dec
inc
xor
mov
insl
sbb
call
clc
sti
mov
jle
pop
cltd
sbb
test
push
mov
dec
and
icebp
faddl
push
orl
mov
inc
or
test
jno
xchg
pop
sub
cmpsb
icebp
shr
sbb
testl
ds
icebp
pop
push
test
mov
xor
lgs
jbe
dec
xchg
aaa
adc
cmp
push
sub
insb
cltd
fs
arpl
pop
icebp
lret
mov
aas
push
inc
mov
lcall
xchg
fld
std
mov
movl
repnz
mov
cmp
xchg
sbb
mov
sahf
xor
movsl
push
std
dec
mov
jo
mov
mov
mov
cmp
cmc
cmp
cmp
jle
xchg
dec
add
cmpsb
adc
and
mov
icebp
pushf
mov
int
xchg
cmp
fdivrs
scas
or
sbb
jg
loope
lret
ror
or
mov
hlt
add
lcall
lcall
into
mov
mov
fwait
xor
adc
mov
inc
or
sub
mov
xor
push
jb
lahf
pop
mov
mov
dec
shl
inc
mov
call
dec
outsl
cs
rcll
or
lret
pop
je
mov
cmp
popa
stc
push
in
add
jnp
lret
clc
sbb
mov
movsb
popa
add
in
mov
in
or
pushf
jnp
in
call
adc
repz
mov
clc
movsb
fnsave
adc
movsl
or
sti
movsl
mov
outsl
push
pop
ss
sub
adc
stos
dec
mov
xor
shl
xor
xor
testb
fcmovnu
dec
or
xchg
imul
push
imul
aas
out
inc
xchg
mov
int
ja
push
pop
daa
or
ret
adc
rol
mov
les
mov
add
popa
jp
test
repnz
add
cld
push
out
and
jnp
mov
cmp
loopne
dec
mov
lods
cmp
push
adc
push
inc
or
daa
mov
and
jo
adc
lahf
adc
inc
xchg
pusha
ret
movsl
sar
pop
or
scas
sub
xchg
adc
cmp
dec
aas
in
scas
sub
jnp
sub
in
cmp
xor
pusha
lret
insl
and
lds
arpl
sarb
push
dec
sub
mov
xor
ja
fmull
cs
xchg
fxch
sub
xor
fstl
ret
int
mov
and
pop
inc
adc
inc
sar
adc
jns
dec
sbb
xor
pushf
dec
fwait
push
jb
jmp
lods
leave
cmpsl
inc
daa
jae
mov
and
sbbb
dec
inc
dec
mov
cmp
jbe
mov
push
dec
lret
sbb
mov
add
loope
das
fstp
xchg
dec
out
mov
and
imul
cs
sbb
jge
xchg
mov
mov
push
ja
loope
leave
lods
sti
popw
loop
mov
mov
and
and
insb
pop
mov
adc
ja
sbb
xlat
add
add
mov
mov
mov
imul
outsb
or
popa
lds
jl
stos
pushf
mov
popf
popa
mov
push
cs
shrb
rorl
adc
in
sahf
jnp
lock
addr16
insb
mov
fbstp
pop
ljmp
call
xor
out
push
mov
push
mov
in
or
mov
test
popf
outsl
inc
lock
cmpsb
xchg
scas
sbb
lcall
or
push
cmpsb
jbe
pop
push
or
jb
jae
sbb
sti
bound
sahf
mov
movsb
es
inc
lcall
xor
jo
dec
push
inc
jns
push
in
jp
dec
inc
jo
mov
xor
ret
jp
pop
rcrb
cld
mov
mov
insl
shrl
xlat
fcmovnbe
xor
inc
in
mov
int3
add
mov
lds
sbb
pop
ds
sbb
bound
ret
push
sbb
jecxz
xor
loope
xor
xlat
xchg
sub
jp
popa
out
cmc
int
rorl
cmpsb
jbe
and
lret
out
xor
test
inc
xchg
adc
inc
adc
call
or
loop
icebp
add
push
add
or
inc
and
mov
jo
jp
adc
sbb
jge
push
scas
lahf
mov
loop
lret
dec
arpl
dec
pop
jmp
fmulp
repz
lock
aas
adc
xchg
xor
imul
pusha
mov
sti
addr16
js
lock
fnstcw
jmp
insl
or
lds
xor
data16
outsb
fistps
jb
jne
imul
pop
pop
jp
push
dec
nopl
test
ficompl
mov
sbb
jb
inc
jnp
mov
push
mov
push
repnz
test
inc
inc
jle
aaa
sub
orl
aas
fwait
cmpsb
mov
les
mov
mov
lea
loopne
iret
mov
dec
clc
imul
ds
adc
push
cmpsb
out
inc
xlat
cli
dec
jbe
mov
in
xor
out
dec
push
sub
sbb
jbe
int
mov
sbb
dec
das
cs
or
ljmp
rep
mov
or
mov
cmpl
nop
or
rcll
inc
iret
mov
mov
jnp
mov
inc
test
pop
cs
push
push
xchg
jbe
clc
adc
lcall
das
or
aas
frstor
arpl
ds
or
ljmp
dec
adc
test
mov
inc
test
fmull
ljmp
into
xchg
jns
xlat
pusha
sti
push
popf
mov
jmp
xor
call
divb
pushf
jno
dec
mov
test
inc
adc
mov
stc
mov
movsl
cmp
push
or
cli
inc
in
int
ret
sarb
sahf
xchg
lods
neg
dec
push
mov
sbb
sbb
ljmp
mov
push
push
fdivp
lret
movnti
arpl
in
rclb
mov
add
adc
fcoms
pop
adc
call
mov
adc
into
notl
out
add
repz
and
loope
dec
ret
mov
fstp
fdiv
push
and
cmp
mov
cmp
outsb
adc
roll
jecxz
sbb
out
scas
add
and
jbe
push
inc
mov
mov
mov
push
mov
jae
icebp
xor
mov
xor
sbb
xchg
push
pop
xchg
cmp
adc
stos
lahf
loop
mov
mov
jl
push
or
xchg
js
push
cli
sbb
dec
ljmp
scas
jl
or
jge
add
outsl
and
mov
bound
push
xchg
pop
in
pop
decb
movsl
xor
loopne
daa
push
mov
sbb
stc
xor
in
fidivl
inc
dec
popa
pop
cli
in
or
call
mov
stos
inc
into
cli
decl
rcr
xor
shrb
inc
cmc
or
iret
sub
stos
add
mov
lcall
nop
pop
mov
out
insl
sbb
mov
ja
lea
xchg
stc
fcomp
jo
cmp
loop
inc
mull
mov
sbb
xor
mov
adc
push
pop
leave
imul
and
sbb
mov
aam
xor
sbb
cltd
pop
xlat
test
pop
adc
or
xchg
xchg
sub
subl
and
ds
pop
roll
mov
arpl
sub
push
add
jbe
xor
inc
lods
mov
and
pop
mov
mov
mov
push
negl
cmp
add
fdivr
push
mov
lcall
iret
mov
xor
fnstenv
inc
adc
shr
xchg
pusha
sub
cwtl
frstor
adc
push
stc
push
std
push
cmc
xor
push
pop
stc
sbb
aaa
sbb
mov
outsl
out
push
imul
and
icebp
pop
push
mov
es
dec
mov
mov
scas
dec
adc
xchg
xor
sub
pop
cmp
call
and
loopne
out
cmp
sti
fldz
mov
mov
xchg
xchg
push
mov
fiadds
sbb
out
popa
das
pusha
mov
in
pusha
cmp
dec
lods
mov
pop
push
push
add
mov
cltd
add
sahf
sbb
dec
gs
mov
dec
push
leave
repz
pop
fimuls
nop
sahf
xor
xor
ljmp
mov
nop
sub
lcall
idivl
push
sti
icebp
push
lods
lret
mov
ljmp
cs
push
pushf
mov
cmp
mov
out
inc
cld
cmp
xchg
push
adc
or
jmp
push
out
cmp
xchg
or
xchg
xchg
dec
fldz
adc
pop
or
hlt
mov
sahf
cmp
mov
cmpsl
add
jns
cmp
sub
mov
adcl
and
dec
shlb
loope
mov
clc
pop
mov
outsb
enter
stos
mov
iret
pop
loop,pt
pop
sub
icebp
mov
jle
push
in
push
clc
mov
pop
fiadds
and
dec
add
add
imul
int
jecxz
fistpl
pop
arpl
push
pop
sub
jbe
pop
frstor
xchg
or
repz
add
ja
subb
fldl
cli
inc
insb
sbb
pop
cli
repnz
xor
cmp
mov
dec
pushf
push
shr
sub
and
imul
addb
loopne
mov
lea
aaa
cmp
leave
adc
hlt
mov
sub
arpl
imul
fs
mov
mov
mov
pop
push
lret
cli
aas
pop
test
imul
sti
cmp
fcomps
inc
adc
jecxz
data16
mov
push
into
push
sub
test
xchg
jno
cmpsl
in
dec
jle
repz
inc
push
push
mov
sbb
loopne
mov
add
stos
inc
jo
push
clc
mov
inc
cmp
push
shrb
outsb
daa
push
insl
push
push
push
cmp
iret
sarl
mov
shrl
or
or
cltd
xor
popf
pmaddwd
cmp
int3
shll
cmp
lock
movsb
or
aaa
repz
cmp
sub
inc
ljmp
fwait
inc
dec
and
adc
sbb
loop
dec
sub
ja
pop
je
push
and
hlt
cmp
loop
inc
popa
call
mov
cmp
mov
andb
or
mov
add
mov
add
cmp
fs
xchg
sub
push
push
sbb
mov
shrl
fnsave
push
jno
jae
int3
dec
pop
inc
and
lahf
movsl
int
mov
arpl
mov
ljmp
sbb
ss
mov
sub
stc
test
or
sarl
mov
lock
icebp
dec
sbb
int3
sub
inc
jo
jnp
insb
lret
cmpsb
or
dec
ja
pop
jns
add
jns
jnp
aad
jno
arpl
sti
lret
out
jmp
add
push
mov
adc
and
xor
adc
jne
dec
out
test
jb
inc
pop
call
addr16
ficompl
roll
jns
outsb
aas
push
push
mov
inc
sub
shr
inc
pop
enter
dec
mov
push
push
pusha
fwait
and
xchg
pop
mov
jne
cmp
or
fsubrs
jecxz
ja
xlat
jp
fnsave
mov
dec
push
out
sbb
sub
sbb
push
in
pushf
cs
outsb
push
jge
sub
xchg
jns
mov
cmp
and
mov
adc
add
adc
das
cld
xor
aaa
push
call
js
push
popf
lahf
into
mov
shr
xchg
xor
mov
in
stc
mov
push
and
push
push
inc
popf
mov
les
add
push
lods
jno
sbb
lock
xchg
jmp
js
std
mov
ficoms
mov
jno
int3
int3
push
adc
pushf
lret
lea
aam
sub
sub
into
push
xor
pop
es
inc
jl
sbb
popa
mov
cli
cmp
and
mov
bound
repnz
fisttps
sbb
pop
jg
add
mov
adc
xchg
shll
push
xlat
inc
jb
lock
push
sbb
mov
cld
or
jne
sbb
mov
out
xchg
xchg
movl
stc
test
or
mov
in
dec
or
loopne
mov
mov
fidivl
fwait
jl
jp
adc
sbb
and
pop
push
out
js
cmpsl
cmp
and
vmaxsd
fwait
jne
pop
outsw
xor
ret
andl
jnp
dec
mov
mov
ja
push
jmp
xchg
pop
test
insb
xor
push
nop
push
das
pop
movl
cld
mov
nop
icebp
stc
arpl
lea
repz
subb
outsb
and
scas
std
push
shll
jmp
jle
icebp
out
ret
out
test
mov
loop
mov
push
add
out
movl
repnz
mov
cmp
outsl
xor
test
jne
scas
fcmovbe
adc
xlat
scas
lahf
inc
push
and
loope
adc
fsubr
or
mov
repnz
mov
repz
cltd
repz
sarl
fadd
jns
fnsave
shl
mov
and
pop
sbb
jecxz
int3
ret
jne
loopne
mov
jns
hlt
inc
mov
mov
fidivrl
out
pop
lock
aam
sub
sub
xchg
popf
gs
mov
shrb
xlat
jns
xchg
xchg
icebp
and
aas
sbb
push
sbb
hlt
lret
je
mov
mov
mov
and
xlat
sub
push
xor
outsl
sahf
cmp
xchg
jmp
test
jg
ret
inc
cli
mov
pop
in
add
mov
sub
sbb
sub
scas
adc
adc
fcmovne
vpcmpgtd
je
cltd
fs
enter
les
popf
or
jnp
pop
ja
mov
fldpi
mov
jo
roll
ret
movsl
js
scas
dec
pop
and
mov
bound
aaa
nopl
push
push
push
mov
pop
jbe
and
and
out
repnz
cmp
push
cmc
stos
add
mov
jg
shlb
bound
lock
add
lcall
out
bnd
fprem
clc
mov
fimull
aad
push
imul
pop
pushf
in
rolb
fists
in
loopne
fdivrl
or
fnsave
es
das
sahf
loop
xchg
cwtl
inc
and
orb
shll
push
push
adc
je
adc
add
inc
jnp
ficomps
int
lcall
mov
movsl
cwtl
movsl
push
subl
les
out
lods
jl
mov
jp
ljmp
rclb
shlb
decl
sbb
pushf
mov
ficompl
movsb
cld
xchg
xchg
ss
mov
and
push
mov
mov
mov
inc
pop
enter
or
sahf
fcmovu
cmpsl
fbld
das
push
mov
adc
push
mov
xor
cli
lcall
xchg
js
sub
insb
mov
sub
cwtl
sbbl
or
in
pop
in
push
stc
les
jno
fwait
push
aad
in
lcall
dec
aas
outsl
push
int
lods
jmp
imul
insl
mov
mov
scas
or
cmc
test
call
jmp
dec
pop
push
hlt
or
daa
jne
jp
ds
sbb
mov
mov
shrb
adc
pop
das
mov
jb
clc
xor
decl
pushf
fldt
xchg
insb
pop
push
fistl
mov
imul
popf
push
pop
xchg
loope
mov
inc
or
ljmp
stos
mov
xchg
lods
stos
mov
inc
shl
xor
mov
int3
out
jae
ret
mov
xor
clc
mov
xchg
cmp
or
aas
sbb
dec
pop
mov
fcmovb
mov
pop
insl
pop
cmpsb
call
aas
popf
mov
mov
add
es
negb
xor
sub
aad
das
out
mov
lods
xor
roll
std
test
pop
pop
aas
icebp
pop
dec
jno
aam
cwtl
scas
cmp
push
pop
pop
lahf
nop
mov
inc
aam
ret
and
int3
in
dec
js
or
cwtl
je
dec
sub
pop
inc
fstps
pusha
pop
lea
sub
ret
push
sti
push
pushf
pop
stc
mov
dec
hlt
int
mov
sti
pop
push
cmp
jg
adc
insb
call
push
imulb
popf
mov
aam
xor
shll
and
xor
rcll
xor
mov
test
cs
xor
push
testb
adc
scas
int
add
or
ror
xchg
jno
cmpsl
bound
mov
add
outsl
xchg
loope
rcl
push
iret
ret
sbb
pop
cltd
pop
adc
jp
jb
ljmp
lods
rcr
lret
pop
sub
push
or
cli
rcrb
enter
cwtl
push
sbb
inc
or
jle
mov
dec
enter
mov
fisubrs
insl
pop
cmp
adc
enter
push
push
frstor
loop
mov
ret
jns
xchg
cli
iret
sti
call
jge
inc
pop
mov
bound
jmp
iret
test
mov
out
notl
jbe
ljmp
in
in
lds
sbb
scas
dec
loop
add
jae
int3
mov
leave
lea
nop
repnz
loop
lds
cmp
outsl
dec
jno
push
daa
and
adc
cmp
xchg
sbb
mov
aad
das
push
xor
xorb
xor
ficomps
or
mov
adc
and
pop
int
insl
dec
idiv
xchg
aaa
leavew
leave
xchg
movsb
jl
and
push
pop
aad
pop
mov
popf
push
xchg
lods
fs
sbb
mov
inc
inc
movsb
imul
shlb
push
shll
add
mov
out
dec
or
data16
dec
pop
shrl
fwait
push
aad
mov
sbb
mov
cmpb
inc
cmpsb
int3
sub
xchg
cmpsl
daa
dec
inc
fstpt
xchg
push
addr16
inc
aam
or
adc
xor
cs
mov
mov
or
sbbl
enter
mov
imul
mov
fld
or
jne
dec
out
jne
pop
mov
push
pop
mov
push
mov
mov
fistpll
test
fstpl
popf
adc
sbb
stos
int
mov
mov
sbb
jg
xchg
xor
stos
mov
xor
daa
mov
mov
adc
cmp
call
mov
xchg
mov
sbb
xor
imul
insb
popa
mov
push
leave
add
ja
ds
iret
or
sbb
in
mov
mov
push
mov
in
mov
pusha
leave
ret
ljmp
fs
or
pushf
pop
into
xchg
and
and
mov
push
mov
xchg
xchg
rcrb
aad
out
std
sub
rolb
mov
out
dec
and
cwtl
add
movsl
cltd
insl
jg
lcall
mov
sbb
shlb
lods
jl
dec
xchg
addr16
mov
cwtl
std
dec
int3
push
mov
nop
dec
mov
mov
inc
sub
sub
dec
daa
inc
xchg
cmp
dec
cmp
sub
mov
or
pop
iret
rcrl
cli
jnp
xorps
or
scas
mov
insl
or
xchg
push
imul
sbb
sbb
inc
and
imul
push
jns
cmp
jg
jecxz
ljmp
je
add
fwait
and
dec
jge
push
cld
std
sti
adc
dec
mov
aam
mov
insl
xchg
xchg
adc
mov
xlat
and
jmp
jp
mov
shlb
fwait
sbb
pop
into
fldl
mov
test
xchg
imul
cmc
popa
xor
sbb
mov
xor
shlb
out
test
ds
scas
add
lods
cwtl
xor
fnstsw
test
pop
push
lcall
insb
clc
push
aam
inc
hlt
and
mov
lret
add
xchg
mov
adc
jp
sarl
jmp
dec
rolb
cmpsl
xor
jge
adc
jnp
pop
addl
out
ret
pusha
mov
jnp
es
sub
inc
cld
shrl
stc
outsb
or
adc
inc
in
sub
sti
stos
push
jno
lods
int
ret
push
aad
cmpsl
fisttps
inc
pop
mov
fnstcw
out
mov
lret
aam
fistpl
in
jb
sarb
test
addl
fmull
pop
sub
xor
dec
outsl
jecxz
int3
mov
lahf
push
push
imul
push
hlt
fs
add
outsb
rclb
in
cld
sbb
repz
std
xor
arpl
icebp
orb
inc
add
icebp
adc
mov
add
int3
push
lods
pop
fcmovnu
mov
mov
mov
sbb
shl
mov
dec
rcll
pop
mov
repz
adc
cmpsb
pop
push
jecxz
movsl
clc
jge
adc
cmc
and
cmp
fs
sbb
outsb
adc
adc
jge
mov
xor
test
mov
jmp
lret
cmpsl
mulb
adc
jl
push
lcall
in
sahf
jne
mov
test
sbb
leave
mov
ja
inc
adc
xchg
shl
test
xchg
je
jle
mov
jmp
cmpsl
adc
fsubrs
adc
insb
mov
add
test
jno
stos
mov
fsubs
pop
jo
xchg
cwtl
rolb
xchg
pmuludq
lahf
adc
push
sbb
arpl
and
movsl
mov
jle
jb
shlb
lret
pushf
or
loopne
pusha
push
jb
pop
lock
xor
adc
jb
fimull
dec
pop
test
sti
sbb
pop
inc
sbb
push
mov
push
lods
xor
mov
xor
loop
xorb
push
xchg
daa
sbb
cltd
call
cmp
or
add
jl
out
adc
mov
or
insb
mov
shlb
cltd
into
arpl
in
jmp
scas
data16
rorl
add
dec
shl
push
test
mov
sub
pushf
dec
sub
jecxz
inc
sub
push
pop
pop
scas
clc
das
add
mov
push
stc
fs
out
leave
or
xchg
inc
xor
aas
das
adcl
in
and
or
or
insb
aad
mov
stos
jnp
sahf
ja
ljmp
pop
push
lock
mov
jo
jl
shll
mov
xchg
repz
dec
in
xor
mov
and
push
mov
inc
sahf
mov
sub
mov
add
frstor
jmp
lock
ja
fdivrl
mov
jae
mov
add
rorb
jmp
xchg
inc
ret
stos
jae
sub
adc
shll
cmp
int
lds
jle
jbe
pop
insl
cmpsl
xlat
arpl
insb
pop
cmp
stos
adc
int3
xchg
mov
out
and
push
jb
ljmp
out
inc
js
adc
mov
arpl
jb
jp
xchg
je
in
mov
ret
pop
pop
jge
pop
addr16
jg
dec
shr
dec
mov
stc
cs
fdivl
cmp
incb
cmc
sti
mov
jb
je
inc
dec
mov
lcall
add
xor
in
xor
out
fnstenv
mov
gs
jae,pt
and
xor
xchg
xor
pop
mov
xchg
adc
pop
cmc
push
movsl
fisttpll
pushf
push
test
shrl
jecxz
inc
mov
sarb
mov
cmp
imul
das
dec
inc
xlat
mov
xchg
es
add
loope
push
cmp
jg
xor
imull
insl
lods
stc
das
stos
lahf
sub
and
xchg
mov
sbb
push
sub
fadd
cmpsl
mov
out
and
add
aas
sub
jg
add
int
test
dec
push
sbb
mov
dec
sub
inc
sbb
test
sub
popf
pop
pushf
adc
cld
lretw
ss
lods
idiv
mov
mov
xlat
mov
pop
ds
pop
call
mov
pop
pop
pop
adc
jmp
xchg
push
out
sub
jb
cmp
sub
xor
jle
scas
cld
cmc
adcl
mov
dec
push
cmpb
cmp
ret
pop
adc
fcoms
cltd
test
push
popf
xor
in
jno
push
push
dec
sub
mov
inc
clc
add
dec
stc
ljmp
mov
xchg
dec
sub
rclb
stos
adc
jb
push
fstpl
mov
xor
outsb
je
mov
cmp
xchg
pop
cmp
das
call
push
insl
xchg
ljmp
and
mov
jge
push
clc
dec
lods
pusha
mov
dec
add
rcrl
in
jno
shlb
cmp
fsub
lods
sub
notl
xchg
dec
mov
divb
lds
das
test
mov
xorl
inc
sub
push
xor
repz
stc
scas
dec
addr16
shrl
cmc
test
add
scas
pop
movl
pop
sub
add
aaa
cmpsl
pop
mov
scas
pop
adc
mov
pushf
test
sbb
lea
sbb
pop
fadds
lret
adc
jle
xor
xchg
cmpsl
jnp
sbbb
fs
pop
jge
les
push
sbb
push
es
xor
dec
pop
dec
push
std
repnz
and
push
fisttpll
mov
enter
cwtl
sbb
mov
call
inc
hlt
insb
push
xchg
inc
mov
adc
loope
pop
and
es
inc
pop
test
std
jge
inc
sbb
mov
adc
push
cmc
jmp
repz
fsubrl
add
dec
or
movsl
adc
pop
cmpb
shrl
cmpsl
popf
nop
jo
lret
lods
mov
outsb
int
ret
clc
pop
mov
es
loop
ficoms
divl
mov
jl
mov
mov
mov
inc
adc
cmp
clc
rcll
pushf
or
shlb
test
pop
or
pop
lcall
in
sbb
ds
dec
lahf
dec
mov
jg
pop
dec
in
dec
cltd
inc
outsl
dec
mov
dec
gs
ljmp
and
inc
les
in
or
push
cmp
loop
ss
gs
jmp
fsubp
push
imul
sub
push
lock
cs
dec
fidivrs
cmc
movsl
xlat
shl
jns
push
or
pop
pop
mov
push
ficomps
inc
pop
dec
mov
test
mov
lret
mov
mov
xchg
aaa
jno
jbe
push
cmpsl
dec
jbe
cmpsl
dec
dec
push
cld
dec
adc
clc
pop
insb
mov
div
movsl
xchg
mov
inc
repz
or
out
rorl
sbb
jno
add
in
outsl
cmc
cld
pop
aad
loopne,pn
xchg
inc
mov
xor
andl
addr16
outsb
mov
shlb
cmp
push
dec
mov
xchg
pop
jo
cmp
mov
das
loop
add
mov
pushf
or
scas
push
aad
jnp
pop
lret
add
outsb
push
mov
idivb
sarl
cmp
into
or
sahf
mov
inc
jae
jl
scas
fldt
cli
clc
adc
pop
dec
push
pushf
inc
dec
vphaddbq
mov
rcrl
call
inc
dec
and
shrl
lret
mov
pusha
lds
fwait
xchg
cmp
cmpsl
gs
outsl
pop
fstpl
ficompl
int
mov
fsubr
pop
add
test
mov
mov
clc
incb
movsl
clc
cli
mov
push
push
or
adc
call
sarb
inc
adc
dec
ret
pop
repz
or
in
push
or
mov
add
je
loopne
hlt
hlt
cmp
sub
push
shrl
rorl
pop
cmpsl
xchg
fidivrl
inc
arpl
mov
lret
ljmp
add
mov
mov
std
incb
pop
and
leave
dec
sub
mov
jmp
or
es
lock
or
js
mov
jp
adc
dec
dec
and
cmp
flds
push
push
mov
or
fidivl
push
in
outsb
inc
lea
mov
stos
addr16
xchg
ja
sub
jmp
hlt
jmp
sbb
mov
sbb
pusha
into
pop
cmp
push
iret
lea
mov
jns
icebp
iret
dec
int
add
pop
fildll
or
adc
daa
pop
shll
cmc
adc
add
and
dec
xchg
xchg
pop
xchg
rcll
cs
push
shlb
xchg
or
gs
std
sti
jecxz
add
and
stos
mov
nop
push
fwait
inc
cmp
insl
mov
jmp
lock
pop
cmovle
scas
or
lahf
sub
sahf
mov
sub
and
stos
std
scas
ficoml
jmp
fsubs
jmp
xor
add
es
repnz
loope
xchg
xchg
mov
add
test
repnz
pop
pop
xor
nop
shlb
jnp
mov
je
nop
fisubs
loop
stos
jmp
jg
mov
xor
lret
pop
scas
outsb
add
sub
popa
std
lcall
sbb
push
mov
rcrl
sbb
sbb
dec
push
sub
int3
rcrl
or
loop
fidivl
or
rcl
or
lds
add
mov
inc
jno
pop
mov
aaa
stc
hlt
pop
sbb
rcll
ljmp
mov
fisttpl
add
dec
mov
iret
test
jg
loopne
in
push
sbb
out
push
adc
and
and
jg
mov
mov
inc
in
jne
out
push
aaa
push
leave
das
xor
dec
cmpsl
pop
sbb
enter
mov
jae
mov
mov
fs
xor
mov
add
mov
cli
adc
mov
pop
bound
jno
mov
lock
cltd
and
xlat
mov
fdivl
or
dec
sub
cltd
xor
mov
dec
lods
push
ret
jne
inc
and
mov
fbstp
adc
test
jo
jle
add
ss
sahf
jl
stos
mov
pop
jnp
and
push
rolb
cmp
xchg
cmp
xchg
add
push
stos
popf
dec
rcr
int
or
pop
lahf
sub
cwtl
pop
dec
insl
jmp
mov
shlb
add
pop
test
adc
lock
loope
aas
xchg
and
cmc
pop
inc
mov
test
stc
aad
adcl
out
or
cmp
push
cmp
stc
ret
lea
xchg
adc
push
je
fimull
xchg
xchg
adc
add
mov
xlat
lea
out
and
pop
pop
pop
pop
cmp
mov
inc
shll
mov
nop
clc
and
outsb
mov
jb
xchg
fistl
pop
shlb
test
stos
test
sub
lods
jno
xor
jmp
xchg
mov
mov
lods
lret
mov
jmp
mov
push
cmp
es
push
lds
sub
stos
fisttps
in
pop
cmp
fisttpll
subl
int3
in
or
roll
das
inc
mov
pop
ret
lods
shrb
inc
mov
jl
ss
sahf
or
mov
mov
lcall
sub
scas
xchg
xor
ds
xor
ss
push
or
inc
xor
push
test
and
outsb
adc
adc
mov
mov
jns
aas
jnp
popa
mov
mov
in
mov
rcll
lods
enter
sbb
sbb
cmp
pusha
mov
push
test
push
shll
mov
jnp
dec
imul
nop
jge
cmp
pushf
scas
or
fwait
fwait
xlat
inc
mov
movsl
pop
insl
sbb
call
push
push
adc
mov
xor
dec
int3
push
cmp
inc
push
push
sbb
das
dec
cld
enter
ret
jae
push
inc
push
mov
lods
js
cmp
push
inc
lcall
xor
in
fsub
aam
mov
loop,pn
popf
push
jp
sbb
mov
scas
add
pusha
out
jnp
lods
icebp
into
leave
jge
mov
fldl
lods
cs
cmp
call
sub
jns
in
mov
cmp
stc
dec
cmp
dec
mov
int3
icebp
aaa
sbb
dec
loop
stc
fldenv
dec
xor
push
movsb
push
xor
loopne
mov
lahf
sarw
mov
adc
lea
popf
mov
lods
jno
mov
xchg
cltd
push
mov
jbe
test
rclb
push
bound
or
sub
xchg
mov
dec
mov
inc
pop
mov
pop
fildll
or
adc
fnstsw
mov
shll
clc
inc
mov
or
lods
and
cmp
shlb
mov
jb
andb
xor
pop
lret
mov
ret
lock
add
std
repz
fld
fdivl
cs
clc
int
nop
repz
push
imul
push
xor
scas
or
cmp
fisttps
sub
pop
xor
and
lods
xchg
cmpsb
loop
iret
pop
pushf
push
pop
jmp
mov
rclb
xchg
outsl
adc
icebp
pop
jno
adcb
mulb
mov
adc
add
xchg
or
dec
in
fwait
cld
xchg
xorl
sub
sub
push
or
or
out
jp
lret
sbb
jecxz
imul
into
enter
loopne
cmp
repz
leave
push
ret
adc
lret
push
fldt
gs
je
jg
push
mov
call
nop
ds
ljmp
test
and
idivb
pop
stc
mov
or
ret
fcoml
xlat
pop
lea
sbb
jg
jmp
hlt
daa
movsl
or
cltd
jecxz
adc
add
aam
outsb
mov
in
mov
jecxz
je
sbb
dec
repz
movsl
add
push
jmp
mov
push
idivb
in
pop
adc
rcrb
push
mov
fsubs
cmp
dec
xchg
mov
inc
nop
jno
sub
mov
data16
rorl
cltd
test
mov
push
pop
mov
bound
ret
sbb
std
jl
fidivs
xchg
ret
imul
sub
movsl
cmp
inc
int
dec
adcb
mov
add
ret
mov
mov
add
enter
and
pop
xchg
push
mov
bnd
divl
es
add
push
push
or
mov
add
aas
jle
cmpsl
ret
xor
sub
dec
pop
into
fisubrl
cmp
inc
in
pop
pop
jmp
sbb
fimull
fidivs
pop
jg
nop
pop
sarb
enter
cmp
mov
in
inc
xor
and
aaa
test
mov
mov
in
shl
xchg
lret
std
xchg
cld
xor
test
jle
mov
daa
xchg
mov
mov
or
sub
lds
and
jb
pop
inc
pop
in
jge
xchg
ljmp
mov
add
cld
pop
enter
js
sub
sbb
es
incb
jno
cld
mov
push
jmp
adc
pop
hlt
lods
repz
jp
sarb
pop
cmp
call
lret
and
adc
movl
imul
mov
repnz
pop
inc
sub
cmp
inc
mov
clc
and
aad
pop
addr16
loop
cmp
sarl
dec
pusha
in
stc
fdiv
push
mov
xchg
movsb
mov
aaa
fnstcw
or
pop
push
mov
ret
or
scas
in
xlat
inc
call
fisttps
loop
leave
int
or
sbb
inc
dec
sbbl
jecxz
or
xor
push
std
movsl
inc
mov
mov
and
xchg
mov
lock
xorb
push
jg
mov
jns
jnp
fdivrs
cwtl
mov
or
jp
nop
jns
jo
sub
nop
mov
push
push
mov
adc
cmpsl
call
inc
in
ds
data16
mov
lods
xchg
jmp
lock
lods
and
ljmp
gs
mov
gs
movsl
inc
mov
or
repnz
nop
gs
leave
lods
les
inc
rcrl
ret
je
dec
movsb
mov
mov
dec
mov
repz
aam
sub
mov
loop
push
loope
lods
jl
loopne
test
push
mov
clc
lea
in
daa
pushf
loop
insb
jecxz
push
out
mov
jmp
cmp
mov
out
or
dec
add
jmp
mov
mov
push
xchg
rcl
stc
cli
xchg
or
jo
es
mov
test
daa
cwtl
push
lods
inc
and
mov
sub
mov
or
lods
sti
inc
leave
imul
cld
mov
mov
mov
jl
xchg
or
push
sub
popa
test
or
cmp
mov
jns
or
dec
fcoml
sub
rorl
es
lea
out
xchg
inc
cs
sbb
jne
lods
add
dec
cs
or
jge
or
test
mov
daa
fdiv
lea
dec
gs
mov
mov
popa
pop
cmpl
cmp
mov
in
les
imul
arpl
mov
insl
pop
mov
xor
cmp
inc
pop
popf
lds
lds
lahf
inc
lock
cltd
mov
int
mov
popa
addr16
xor
lahf
fimull
mov
pop
jecxz
dec
adc
pop
mov
cmc
out
andl
in
lahf
xchg
mov
aam
sub
and
push
repz
popf
fbld
fidivrs
imul
xor
adc
push
icebp
xchg
mov
xlat
dec
mov
cmp
jo
in
inc
dec
jge
sbb
fdivrs
in
out
fildl
add
xchg
sbb
cmp
xor
fs
mov
jmp
mov
shlb
xchg
or
cltd
test
xor
inc
or
shrw
push
mov
cmpl
add
inc
mov
mov
cmc
jle
push
jno
mov
xor
and
out
pop
add
icebp
jl
cmp
mov
mov
cwtl
icebp
xchg
or
jbe
je
loope
mov
call
push
cmp
test
jbe
push
pop
sbb
sti
mov
and
sarb
insl
jle
test
mov
dec
dec
mulb
xor
xchg
daa
add
bswap
addr16
xchg
xchg
repnz
pop
dec
out
in
adc
popa
pop
outsl
mov
cwtl
xor
aad
fucomp
push
lds
sbbb
inc
dec
call
test
lahf
xchg
call
inc
repz
lds
mov
test
shll
push
mov
xchg
les
mov
xchg
mov
push
into
mov
xor
jbe
xchg
inc
mov
loope
and
pop
jle
fiaddl
test
stos
dec
dec
cmpsb
push
lds
mov
mov
inc
jns
inc
insl
lods
pushf
pop
cltd
aam
cmp
xlat
insb
adc
movl
pusha
mov
fisubrs
idivl
cmp
mov
and
cmpl
or
cs
sub
out
sbb
test
dec
mov
pop
out
repz
loopne
cltd
adc
fistpll
ljmp
adc
ret
sahf
sbb
xchg
jb
es
pusha
sub
sbb
jg
mov
enter
ljmp
stc
pop
mov
out
dec
mov
int3
dec
xchg
jmp
pop
pop
xor
xchg
enter
mov
xor
das
cli
scas
stos
fcmovnbe
xor
xchg
pop
xchg
jo
rolb
es
subb
pop
pop
cmpl
cmp
sbb
roll
and
mov
lods
jp
pop
js
sbb
fwait
nop
cli
stos
iret
outsl
loopne
mov
testb
lret
mov
inc
mov
mov
xchg
push
adc
push
mov
and
mov
repz
mov
or
and
push
pop
js
add
bound
dec
adc
xchg
sbb
repnz
je
cmp
sti
sbb
mov
cmc
pop
xchg
out
bound
pop
enter
scas
stos
mov
mov
mov
lds
mov
cmp
or
std
lcall
loop
adc
clc
popa
jl
xchg
pop
call
jns
or
enter
insl
dec
mov
mov
dec
stos
or
inc
adc
dec
jno
sbb
push
aas
xchg
mov
fisttps
lcall
iret
push
push
sbb
out
inc
and
stos
mov
adc
sbb
push
fldl
movl
sbb
les
or
pop
ret
cmp
movl
out
add
mov
pop
jl
stc
mov
test
cmc
adc
and
lods
test
int3
iret
jecxz
sahf
adc
adc
out
sbb
pusha
mov
jno
nop
mov
or
mov
ds
andb
push
add
adc
std
inc
sbb
xor
pop
pusha
xchg
adc
pop
fbstp
pop
add
idivb
lods
mov
dec
in
aam
popf
xchg
cmpsb
arpl
stc
mov
xor
in
and
pop
ljmp
mov
sub
sub
mov
xor
fistpll
add
add
inc
add
daa
lret
aaa
jl
mov
cltd
xor
sbb
or
orb
hlt
ljmp
push
mov
repnz
or
mov
push
or
push
pop
fsub
xorl
and
daa
ljmp
mov
clc
cmp
mov
push
fs
pop
cmp
cmp
scas
pop
xchg
push
inc
push
mov
rcr
arpl
sub
add
sub
or
or
inc
mov
add
aam
loope
add
and
scas
jne
adc
cmpb
adc
mov
mov
cs
push
xlat
xchg
cwtl
ljmp
mov
sub
pop
push
bound
adc
inc
lds
add
pop
sahf
fistpll
testb
xlat
daa
fsts
jae
shlb
xor
and
or
push
sub
lahf
aas
pop
sbb
sub
test
rol
lret
sbb
sbb
xor
les
and
out
jl
push
movsb
lret
or
addr16
pop
sbb
sub
into
mov
ds
inc
xor
inc
adc
in
jnp
insb
insl
imul
jecxz
cmp
and
lock
lods
unpcklps
aas
fcom
jg
xor
in
scas
jb
xchg
mov
aam
sbb
mov
call
xchg
or
fisubs
inc
ljmp
fsub
adc
call
imul
jp
cmpsl
scas
cld
xchg
mov
mov
popa
xchg
popf
xor
es
xorl
jecxz
lahf
cwtd
mov
jle
aas
dec
mov
inc
sub
jmp
xchg
adc
fwait
cmp
push
divb
stos
aas
je
or
fsts
xor
sbb
mov
cltd
pop
out
cmp
ds
xchg
in
and
shl
shl
loopne
aas
fldl
dec
xor
add
cmpb
mov
scas
out
adcl
ljmp
xchg
gs
in
mov
fsubrs
or
stos
fstp
sub
leave
lock
mov
ret
sbb
jge,pt
lds
fmuls
lahf
pop
rcrb
dec
inc
rolb
outsb
loope
in
test
test
push
and
movsb
push
sub
add
mov
icebp
inc
cmp
call
mov
mov
mov
xor
push
xor
xchg
push
pop
mov
or
lock
add
mov
push
adc
leave
aaa
repnz
inc
xor
dec
sbb
sbb
dec
mov
ret
mov
cmp
call
movsb
cmp
das
xchg
mov
mov
push
sbb
je
mov
fimull
call
or
xchg
jecxz
imul
bound
dec
push
pop
lods
push
sub
xor
inc
test
or
into
in
kandnw
hlt
push
loop
sbb
mov
fisubs
push
mov
outsl
insb
fisttpll
jle
clc
and
push
xchg
mov
out
jp
jg
mov
add
mov
or
pop
xchg
in
repz
sbb
adc
xor
inc
or
and
jbe
in
sub
in
adc
jl
pop
sbb
add
rorl
mov
xor
enter
scas
mov
lea
in
add
and
icebp
push
test
arpl
popa
inc
in
lock
cmp
pop
push
mov
xchg
lock
xor
sbb
mulb
and
lods
cli
mov
lcall
popa
xchg
ja
jecxz
test
or
sub
pop
jns
fsubs
xchg
dec
out
sahf
push
insb
in
sbb
popf
and
mov
sbbb
mov
cmc
jno
popa
jbe
rolb
sti
lret
xchg
data16
addl
push
scas
insb
jmp
es
in
mov
stos
lods
cltd
add
shl
pop
jmp
aam
xor
aam
stos
mov
adc
sbb
push
popa
pop
xchg
and
sbb
in
std
adc
lcall
in
repz
lret
jp
mov
push
rorb
push
cmp
scas
hlt
xor
adc
jno
inc
add
push
push
jo
int3
inc
xor
cmp
and
add
inc
bound
gs
jg
jne
les
in
pop
ljmp
adc
sub
shll
je
test
xchg
jle
leave
dec
and
cmp
les
rorl
dec
pop
add
stos
adc
mov
aaa
imul
sbb
int3
xor
insl
push
mov
test
xchg
out
ret
mov
jae
andb
mov
pop
mov
mov
xchg
scas
xchg
iret
int3
data16
rol
mov
jns
inc
das
pop
js
mov
add
adc
adcl
in
sub
in
mov
push
add
cmc
push
ss
jle
int
call
mov
or
xchg
mov
and
fisubl
sti
dec
enter
aaa
sbb
jae
std
in
stos
cmpsb
sbb
add
sub
mov
icebp
popa
inc
jp
mov
rclb
rsm
iret
adc
cld
lds
dec
fucomp
jne
rcll
dec
std
and
shlb
test
add
add
xchg
mov
in
xor
xchg
mov
inc
pmaddwd
int3
scas
in
test
imul
dec
push
les
aam
mov
fwait
xchg
mov
xchg
int
lock
mov
push
addb
loopne
push
xor
push
xor
flds
xchg
js
push
push
popa
mov
and
fwait
mov
dec
shrl
sbb
pusha
mov
in
xor
jle
fsubs
push
dec
ds
mov
xchg
je
sub
mov
xchg
sub
push
or
stos
cmp
hlt
jb
dec
adc
loope
int3
and
xchg
out
mov
push
jbe
test
xchg
or
mov
enter
mov
je
inc
jno
add
sub
cmp
and
and
out
xor
pop
xchg
sti
dec
lcall
int3
pop
add
inc
xchg
cmp
inc
jle
or
mov
out
repnz
adc
fwait
mull
dec
add
jb
jge
lea
xchg
loopne
sahf
xchg
push
jae
inc
je
xor
add
dec
ss
rolb
test
movsl
push
test
mov
scas
in
fisubs
outsb
push
mov
lds
xchg
pop
adc
mov
or
out
jmp
repnz
adc
test
pop
and
imul
test
sub
sub
test
cmp
mov
push
and
mov
inc
lea
stos
jecxz
jnp
mov
int3
aad
lret
jp
sbbl
std
mov
cli
std
jno
push
mov
sub
sti
xorb
inc
cmp
outsl
jecxz
mov
dec
lods
and
cmp
loop
mov
push
shrl
movsl
mov
jae
inc
loope
dec
push
or
clc
stc
xor
je
fists
pop
shlb
xchg
push
lea
jecxz
sbb
jo
test
fbstp
cs
scas
xor
push
adc
mov
jmp
divl
push
scas
xor
xor
jl
insb
stos
push
lea
xchg
stos
jae
shlb
sub
pop
test
testl
imul
pop
lea
adcb
jp
inc
call
aas
push
xchg
in
daa
mov
adc
mov
mov
add
pop
sbb
jmp
stos
and
cmc
fldt
jl
out
sbb
pop
inc
ret
mov
not
and
out
test
jns
fcomi
or
out
push
or
sti
lods
sub
sarl
mov
mov
movsl
pop
out
test
into
adc
fstl
div
inc
in
mov
ja
dec
fwait
pop
or
cmp
out
insl
in
jp
out
push
dec
fistl
dec
push
jnp
in
jle
popa
add
test
movsb
pop
data16
inc
pop
xor
xchg
out
jge
mov
adc
add
ljmp
push
xchg
lods
int3
cmpsl
in
nop
pop
pop
add
jge
push
popf
daa
and
popf
mov
fdiv
push
lcall
inc
mov
xchg
and
push
orb
ja
xor
cwtl
adc
scas
add
lods
add
cmp
jecxz
and
mov
xorb
fsubs
xorl
dec
sahf
out
in
xlat
cmp
mov
mov
popf
jmp
ja
test
xchg
pop
stos
push
pop
jp
mov
lods
test
jmp
fwait
or
mov
lods
idiv
mov
and
cld
jg
and
mov
cmp
lock
xchg
insl
sub
es
leave
sbb
mov
aam
cmp
dec
add
jecxz
dec
insl
dec
mov
cmp
fs
push
loope
push
push
out
popf
outsl
inc
fisttpl
adc
stos
push
and
aaa
loop
aas
out
mov
pop
xor
outsl
ret
mov
push
lods
out
popf
jecxz
addr16
fisubrs
popf
mov
push
and
in
lock
movsb
lea
push
sbb
mov
pop
js
test
fwait
icebp
testb
add
push
mov
jns
xor
add
mov
jmp
push
aam
mov
pop
loopne
test
jo
inc
or
or
adc
fsubs
loopne
shr
in
cmc
insl
gs
jp
jno
xor
ja
out
mov
cmpsl
cld
nop
mov
pop
pop
push
push
xor
dec
jg
sub
mov
xor
xchg
jns
inc
test
in
jnp
rorl
cs
sub
jnp
imul
push
jnp
lods
xor
pushf
outsb
cmp
pusha
inc
les
xchg
mov
pop
or
es
ljmp
into
movsl
cmp
jno
adc
outsb
cmp
iret
jns
aas
addr16
jp
xchg
int
rorb
mov
mov
xchg
mov
xchg
pop
addr16
lock
push
mov
add
ja
dec
sub
jb
adc
push
lahf
fwait
ret
cmp
lahf
inc
mov
mov
clc
out
jp
stos
cmp
pop
xchg
mov
xor
sbb
sbbb
iret
fwait
cmc
mov
xchg
clc
cld
xor
pop
fldcw
in
xchg
adcl
cmp
out
pusha
mov
lods
sbb
jmp
jb
rorl
in
fcoml
loop
imull
inc
sbb
in
fs
cmp
mov
fildll
mov
mov
add
pop
test
shrb
inc
insl
int3
lahf
pop
rclb
xor
mov
dec
fildll
adc
adcl
jnp
push
stos
inc
fadds
ret
cmpsl
inc
loopne
cmp
lods
fnsave
jp
xchg
mov
mov
pop
enter
dec
lret
mov
push
xchg
lods
test
mov
je
test
mov
inc
xor
cmp
adc
es
sub
ljmp
xchg
inc
ret
xchg
and
in
cmp
sbb
iret
movsb
nop
call
xchg
stos
test
dec
out
pop
dec
sti
mov
push
es
bound
scas
sahf
testb
mov
scas
dec
mov
mov
fdivp
mov
or
mov
pop
sahf
cmp
addl
mov
adc
mov
out
sub
sub
loop
pop
loope
jae
orb
push
bound
push
std
dec
pushf
dec
and
out
pop
adc
insl
dec
mov
rolb
les
xchg
xor
sti
mov
sub
mov
ljmp
call
jae
out
les
aam
push
jmp
into
mov
mov
imul
test
insl
aaa
add
dec
xrelease
mov
fst
ret
sbb
xchg
cli
sub
xchg
or
lods
mov
and
lea
mov
test
pop
in
and
dec
cld
mov
sar
mov
repnz
js
add
push
jmp
adc
or
xchg
jle
cs
and
les
lds
add
out
push
dec
xor
sbb
fisubrs
mov
mov
std
out
mov
mov
jecxz
cmp
and
mov
fisttps
jecxz
push
mov
xchg
dec
sub
push
outsb
jb
xchg
mov
lds
sub
add
test
jo
mov
clc
movsl
aam
adc
mov
push
imul
imul
andb
mov
push
or
xchg
in
out
xor
jo
cmpsl
push
or
ret
ret
loopne
ret
out
stos
in
sets
test
pop
mov
int
xchg
insl
cmp
or
movsl
adc
jp
push
or
ret
add
mov
add
aam
cld
rorl
aad
xchg
ja
bound
dec
xorb
rcll
pop
sti
xor
mov
data16
mov
pop
xor
stos
push
add
push
xchg
push
clc
dec
sub
adc
mov
fildl
insb
pusha
sahf
or
sub
mov
lcall
push
mov
ljmp
xchg
cmpsl
mov
xchg
stos
jmp
add
insl
sbb
xchg
dec
gs
popf
inc
imul
jne
neg
add
adc
mov
dec
mov
cmpsl
jmp
inc
mov
lret
out
outsb
dec
and
je
stc
lea
andb
mov
ret
xor
nop
xor
mov
lods
enter
add
sub
and
xlat
call
mov
inc
clc
fcomp
out
dec
inc
mov
xchg
add
add
pop
pop
jl
fidivs
vpacksswb
pop
pop
mov
in
popa
mov
pushf
cltd
xchg
mov
jecxz
cwtl
pop
rolb
ds
push
sbb
int3
xor
jg
icebp
adc
lahf
mov
orb
loop
test
movsb
jno
jecxz
push
dec
cwtl
jle
or
dec
or
pop
call
into
mov
mov
mov
xor
aad
rcl
or
shrb
xchg
mov
sahf
cmp
xchg
inc
push
mov
icebp
push
mov
fiaddl
addb
repnz
xor
mov
sbb
loopne
jo
popf
xor
mov
sahf
or
rcr
addr16
sub
xor
and
ss
ret
fisubrs
imulb
rcll
xchg
push
jno
adc
push
or
push
in
mov
loope
dec
jae
mov
mov
push
pop
or
xorl
mov
and
and
mov
sbb
pop
or
fmull
shll
cs
cwtl
cwtl
loopne
inc
aam
xchg
call
test
shlb
jle
xor
xchg
jno
into
addr16
mov
push
lods
out
sub
adc
jge
dec
loopne
push
dec
xor
jmp
mov
jle
and
mov
jns
stc
js
ret
sahf
jno
sbb
dec
out
sub
out
stc
sub
sbb
faddl
jb
out
bound
std
into
test
pop
in
cmp
xor
xor
in
xlat
icebp
lcall
ljmp
pop
cwtl
mov
xor
add
jle
dec
jo
push
sbb
or
lea
sbb
xchg
xchg
lcall
nop
xchg
mov
mov
push
jmp
fistpll
icebp
aad
mov
das
sub
push
jge
mov
and
jno
pop
out
cltd
in
repnz
push
mov
dec
mov
int3
dec
sub
iret
mov
push
mov
mov
jbe
sub
lods
mov
or
aas
xchg
jbe
push
xchg
ror
lcall
rol
adc
adcb
push
nop
adcb
bound
test
outsb
pop
jns
adc
adc
pop
sbb
ja
jb
into
jmp
cmp
test
mov
ret
in
dec
jmp
jmp
mov
jge
je
push
mov
mov
adc
mov
sahf
mov
and
add
mov
xor
lods
or
jnp
or
adc
add
inc
fistpl
push
outsb
fwait
in
cmp
and
sbb
adc
mov
sbb
outsb
mov
adc
inc
cmpsb
cmp
popf
scas
ds
mov
add
aad
icebp
push
rorb
ljmp
or
mov
xor
xchg
test
mov
js
das
roll
add
aas
loope
rcrb
add
pop
xchg
cmp
lret
in
xor
mov
and
sub
out
or
inc
jl
test
ds
sbbb
out
and
xor
fidivl
out
jne
xor
and
leave
cmp
xchg
int3
call
insb
mov
sub
pusha
loope
mov
fldt
and
pop
out
mov
xchg
lret
sbb
mov
out
js
pop
xchg
inc
inc
stos
in
mov
fdivrs
xor
mov
dec
sub
jecxz,pt
aad
inc
mov
push
cmp
sbb
and
movsl
pop
sbb
mov
mov
loope
push
stos
pop
push
or
icebp
fisubl
cmp
jne
stc
jl
add
pop
sbb
or
mov
and
repz
shlb
mov
notb
flds
mov
jp
jo
hlt
movsl
push
adc
mov
lea
xchg
pop
dec
pop
cmpsl
gs
and
cmp
sub
inc
mov
pop
mov
mov
frstor
sub
inc
dec
mov
pop
test
mov
or
cmp
dec
sarl
fistpll
mov
out
imulb
jns
std
mov
or
xor
push
mov
pop
xor
xchg
jne
popa
out
lret
movsb
hlt
in
push
or
loope
push
mov
test
fsubrl
sub
clc
cmp
imul
adc
cmp
arpl
in
std
lods
and
lods
mov
cwtl
mov
jno
mov
pop
mov
and
arpl
xchg
jae
std
enter
je
in
adc
into
es
cli
es
sbb
stos
jo
mov
mov
addb
adc
sarb
mov
push
pop
inc
mov
xor
adcb
lahf
xchg
adcl
add
sahf
xor
add
adc
adcl
cwtl
and
push
push
add
jg
push
xchg
cs
in
repz
pusha
pop
jno
scas
push
pop
test
sub
popf
decl
into
cmc
xchg
or
stos
lret
push
scas
ret
jecxz
push
pushf
sti
and
mov
and
inc
cmc
jp
adc
add
std
adc
aam
je
rcl
mov
ss
pop
shrb
fsubs
pmaddwd
cmpsl
jnp
shlb
outsb
fsts
fcoms
jmp
out
adc
sub
in
push
or
sub
jl
jge
and
sbb
fists
cmp
mov
mov
daa
xor
ss
pop
test
inc
repnz
sbb
mov
cmp
idivl
mov
ss
mov
mov
mov
push
sub
nop
dec
mov
mov
mov
sub
daa
in
repz
mov
out
fcoms
shld
jp
mov
div
xor
jns
xor
mov
sbb
clc
movsb
push
sar
pop
lahf
dec
fildl
fcoms
rorb
xchg
inc
or
mov
push
jle
lods
inc
push
shlb
test
sub
inc
sbb
push
lea
loope
xchg
rorb
mov
pop
adc
add
mov
jmp
sbb
adc
nopl
adc
push
aam
test
jae
mov
pop
enter
ret
out
popf
pop
push
mov
sub
or
repz
fidivrs
mov
scas
pop
out
mov
roll
lahf
outsl
out
arpl
mov
inc
stos
not
lahf
fstl
ljmp
pop
popl
filds
inc
adc
push
push
insl
jns
daa
stc
sub
mov
ret
sub
pop
mov
and
adc
inc
jecxz
mov
mov
xlat
mov
push
jno
popf
lret
cmp
xor
call
aam
cmpsb
stos
jmp
and
insb
jle
push
lahf
mov
hlt
fsubs
inc
sub
arpl
inc
jg
call
mov
jno
mov
inc
sub
fs
push
movsl
xchg
jg
jnp
leave
or
cmp
mov
out
test
into
add
mov
or
ret
stos
cmp
push
pusha
aaa
mov
clc
data16
arpl
xchg
arpl
sub
xor
hlt
rcl
addr16
rorl
lahf
movsl
rclb
inc
mov
stc
and
stc
in
sbb
ret
push
mulb
es
or
pop
mov
stc
jbe
mov
fdivs
xchg
inc
pusha
push
dec
dec
daa
fmul
sub
aam
sub
lock
pop
lea
je
mov
inc
mov
jle
add
popf
adc
pop
adc
dec
pop
dec
in
test
mov
sub
std
in
sbb
lods
sbb
jae
xor
adc
loope
jg
cwtl
ret
inc
sub
cmp
mov
xchg
dec
sub
popf
inc
rcrb
out
mov
mov
push
mov
addr16
push
mov
jg
push
cmc
push
jmp
pop
inc
shlb
mov
add
pushf
fucomi
pop
add
inc
push
sbb
jnp
stos
inc
jno
jno
push
jns
imul
xor
enter
fstps
xor
lret
data16
insl
fsts
mov
mov
pop
stos
cmp
or
std
xchg
pop
mov
add
pop
adc
cld
sub
add
loope
in
ja
orl
outsl
pop
lret
push
jg
mov
mov
int
fdivs
pop
push
movl
outsb
xlat
repnz
cmpsb
inc
out
int
cmp
lods
ss
push
not
lahf
mov
dec
xchg
cli
xchg
xchg
sbb
push
sbb
mov
lret
imul
lock
cmpsl
inc
push
orl
xchg
mov
jge
iret
pop
xchg
es
pop
and
stos
pop
pop
lcall
inc
in
idivl
pop
lods
jae
jle
xorl
jp
adc
lea
decl
cmpb
mov
mov
orb
scas
adc
testl
mov
es
xor
inc
gs
xchg
or
sub
pushf
xlat
in
xor
xor
movsl
cmp
fdiv
cmp
test
push
push
push
lret
dec
mov
scas
andl
imul
push
add
mov
push
movsb
sahf
insl
xor
add
fisttps
xor
lods
jbe
jnp
xchg
addr16
and
loopne
pop
testl
shll
ret
adc
fiadds
mov
sarl
mov
dec
pop
aad
mov
push
push
test
les
xchg
inc
es
rclb
push
or
call
andb
hlt
cmp
inc
pusha
jmp
mov
fwait
inc
jle
out
mov
shr
pop
or
mov
push
cltd
cmp
int
mov
and
jb
clc
adc
test
pushf
shl
fmuls
mov
jl
je
out
rolb
leave
fisubs
outsb
pop
loop
jnp
loopne
mov
and
push
mov
jns
xchg
andb
and
push
leave
aad
sub
push
sub
dec
pop
test
ret
cmc
scas
or
xor
das
cmc
test
xchg
push
mov
pusha
push
adc
pop
movsl
push
out
lods
and
call
pop
jno
sub
aad
repnz
lcall
fdivrs
into
lds
jnp
mov
ljmp
stos
xchg
arpl
imul
repz
cs
aaa
mov
push
bswap
arpl
dec
fs
dec
insb
pop
dec
dec
inc
jno
sbb
mov
adcl
jns
jne
lcall
lcall
or
faddp
pop
test
das
int3
mov
cmpsb
jg
sub
aad
fistl
mov
and
inc
stos
test
shlb
push
mov
pusha
dec
jno
test
xor
mov
mov
lret
xorb
jmp
sub
mov
cmp
leave
daa
mov
adc
cld
adc
cmpb
push
jge
fdivrp
ret
mov
cli
stos
iret
sbb
out
aas
xorb
cmp
mov
ss
mov
out
push
mov
cli
mov
add
cltd
mov
dec
mov
push
and
adc
and
das
xor
out
sbb
push
mov
ljmp
push
lret
cmpl
lcall
xchg
xor
pushf
jb
test
push
xor
add
arpl
jns
bound
cmp
jbe
orb
lods
push
mov
rorb
mov
jns
add
mov
sbb
and
jo
mov
test
cmp
and
enter
dec
and
sub
stos
sub
push
jbe
add
clc
add
xlat
pop
fcomi
arpl
stos
movsb
pop
jp
inc
cmp
ljmp
lds
hlt
addl
fbstp
push
test
ljmp
mov
lret
std
cli
lahf
sbb
and
xlat
stos
call
push
aaa
les
push
xchg
dec
lea
jns
aas
and
adc
cmp
loopne
xchg
cmpsb
sub
scas
std
add
and
negl
call
cmp
ficoms
xchg
add
or
aaa
test
push
imul
and
adc
insl
in
ret
loop
fwait
gs
fisubrs
fnstcw
adc
push
shrl
shlb
in
adc
gs
aam
lahf
inc
push
dec
cs
fidivrs
addr16
cmp
test
inc
test
and
adc
xor
cmpsb
xchg
adc
xor
or
cmc
mov
sbb
ds
jp
cmp
mov
aas
xchg
sbb
push
mov
call
inc
int
sub
fldl
fs
add
xchg
xchg
jmp
inc
imul
dec
and
pmulhuw
ret
cld
sub
jle
testl
int
pop
cmp
inc
into
or
mov
sbb
dec
sub
ljmp
inc
push
jno
xor
les
sub
pop
sub
sbbl
rorl
cmp
push
sbb
pop
test
jle
arpl
mov
test
inc
pushf
push
xor
jmp
jne
add
mov
pop
mov
lahf
xchg
ja
push
inc
popf
jmp
sti
iret
push
sahf
pop
and
hlt
lods
jnp
fimull
loopne
cwtl
mov
push
sbb
dec
mov
hlt
pop
xchg
dec
fisttpl
testl
dec
jb
push
sub
xor
repnz
inc
add
cmp
fwait
test
mov
fst
jecxz
cmp
int
adc
mov
stos
fimull
jae
cmc
pop
or
adc
inc
jnp
or
mov
jb
popf
push
xchg
ret
mov
xor
push
lea
movsb
mov
adc
pusha
test
push
add
lcall
add
mov
sub
shrl
out
pop
hlt
jg
out
in
and
gs
cmpsb
and
and
clc
xchg
sub
aaa
lods
gs
push
pushf
mov
insl
mov
lods
int3
rorl
sub
cs
xor
lret
stos
jnp
out
inc
in
decb
and
jge
divl
jmp
shll
sbb
out
daa
aaa
fisttpl
stos
fists
mov
push
mov
inc
fstl
lods
adc
aas
jle
call
popa
mov
pop
ljmp
cltd
mov
pop
movsb
test
std
cmp
xor
das
aad
mov
gs
push
stc
jbe
adc
push
or
push
cltd
dec
popa
jns
out
scas
xchg
xor
scas
cmc
and
test
add
add
cltd
test
xchg
mov
jp
jbe
mov
adc
mov
sub
xchg
mov
dec
cmpsb
jg
jnp
mov
imul
add
pop
out
mov
pop
sbb
sub
inc
fs
xlat
jg,pn
nop
outsl
push
cli
jne
xchg
jmp
lret
mov
dec
jge
roll
pop
cmp
mov
pop
sub
subb
inc
scas
adc
repz
xor
inc
imul
and
pusha
cmpsb
mov
xor
mov
add
fldt
pop
hlt
mov
fcoms
in
stos
xchg
das
pop
gs
aaa
adc
jae
fldt
ficoms
mov
sahf
insl
je
in
push
adc
add
xlat
lods
gs
xor
mov
mov
mov
mov
jmp
jns
cmp
loope
es
notl
pop
std
pop
popf
add
dec
inc
imul
scas
cmpsl
push
push
xlat
jno
scas
sub
cmc
cmp
xchg
fldl
jno
leave
lret
jnp
xlat
push
sub
mov
sarb
inc
ljmp
clc
leave
inc
mov
out
out
aad
andb
stos
arpl
lahf
push
stc
xchg
lods
shrl
lret
sbb
sarl
mov
bound
mov
sbb
divl
data16
clc
lea
lret
fdiv
movsb
nop
lret
push
adc
imul
pop
pop
jns
push
das
mov
lods
sub
insb
cmp
xor
mov
icebp
add
clc
dec
ret
test
push
ud2
cmpsl
jne
pop
inc
push
push
xchg
pushf
mov
lods
push
sbb
dec
aam
out
adc
shlb
xchg
repnz
jno
fadds
inc
push
push
adc
add
xchg
ret
mov
pop
enter
imul
mov
or
aad
cld
push
add
dec
imul
mov
mov
loopne
mov
in
sbb
pushf
push
sub
fwait
xor
arpl
rcll
push
mov
lret
mov
lret
ljmp
call
adc
adc
or
out
test
inc
add
hlt
or
sbbl
push
cmpsb
in
jmp
andb
cmpsb
scas
xor
xchg
jb
rorb
xor
push
dec
add
push
push
test
shl
cmc
xchg
cltd
mov
mov
mov
mov
insl
mov
xchg
imul
push
lods
and
sti
xchg
mov
adc
cmp
call
adc
xchg
mov
ret
out
movsb
add
inc
mov
movsl
mov
cmp
dec
jb
add
jge
lea
jno
xor
loopne
popa
sahf
jle
imul
lock
jge
mov
or
jo
cmp
mov
scas
cmc
push
fldenv
adc
sar
gs
decl
dec
mov
inc
push
nop
xchg
mov
hlt
or
sar
outsl
inc
mov
adc
jb
pop
in
and
cmpsb
popa
jae
into
sub
jne
les
fs
mov
sub
notl
sti
shlb
in
js
push
sti
insl
mov
or
jmp
stc
movsl
shll
loop
mov
mov
add
jmp
pop
test
push
xchg
pushf
cmc
cmp
aas
push
sbb
xchg
add
mov
or
pop
xlat
cmp
xor
shl
xchg
sub
inc
test
test
jne
inc
les
sbb
enter
into
or
mov
jno
push
mov
scas
aaa
add
cltd
push
mov
and
jno
lods
lea
mov
sub
inc
dec
mov
testl
cmpsb
pop
sbb
mov
inc
cmp
es
mov
sub
js
jp
sub
xlat
jbe
aad
add
sbb
xchg
add
call
scas
and
pop
sub
leave
addl
dec
into
mov
pop
mov
clc
ret
push
mov
xchg
clc
arpl
out
pop
and
push
xchg
imul
cmp
lods
or
adc
mov
mov
inc
shll
in
inc
jne
mov
in
repz
push
sub
xor
sbb
lahf
sbb
xchg
and
cmp
xor
jbe
mov
jae
movsl
in
fiaddl
xor
dec
popa
or
movb
cld
and
jb
fs
push
outsb
fildll
xorb
je
xlat
add
iret
pushf
movntq
xchg
sbb
push
fistpll
and
lock
fildl
std
bsf
xor
ret
push
rorb
mov
stos
cmp
fdivl
rcl
dec
fcoms
in
sub
dec
out
jnp
mov
mov
lcall
pusha
out
mov
in
push
dec
push
add
adc
out
mov
lods
add
push
negl
or
push
lods
push
iret
ret
mov
shll
sbb
or
mov
in
fadds
scas
roll
lods
sub
inc
ds
aas
test
add
cld
pop
cmpsb
mov
sub
cmc
xchg
pop
shrl
ss
xchg
or
pop
scas
pop
jb
cmpsl
inc
repz
insb
or
popa
fsubs
jmp
mov
fwait
insl
jns
push
push
mov
cld
mov
out
movsb
in
adc
xchg
inc
sbb
cmp
repnz
add
in
int
hlt
movsb
mov
test
aaa
inc
xor
das
add
mov
xor
fabs
js
jecxz
add
dec
add
arpl
and
or
in
out
sbb
in
pop
mov
jne
mov
xor
inc
push
out
inc
sub
inc
cmp
sbb
out
push
das
inc
push
sbb
repnz
push
xchg
jmp
cmpsb
xchg
or
push
ret
mov
lods
mov
adc
lea
cli
mov
out
or
or
push
fcomp
ja
mov
in
mov
add
push
adcb
xor
movsl
mov
scas
ficoml
decl
mov
inc
jg,pn
jo
mov
push
xor
inc
jg
xor
ja
xchg
sbb
fidivs
data16
lock
mov
xchg
aad
pusha
pop
sbb
es
movsl
push
mov
cvtdq2ps
xchg
inc
std
sub
imul
jl
lods
pushf
outsl
gs
movsb
xor
cmp
mov
mov
and
push
outsl
or
out
lods
scas
xchg
push
mov
sbb
jle
jp
adc
pop
xchg
les
add
out
or
add
push
movsl
or
xor
jno
add
jns
jg
mov
dec
inc
sbb
add
daa
daa
add
loop
sbb
sbbb
cmp
negb
pop
mov
xchg
pop
mov
out
and
inc
xor
or
cmpsb
out
iret
mov
mov
inc
mov
mov
xor
adc
mov
push
fucomp
cmp
fildl
sbb
mov
lret
push
sbb
jecxz
imull
stos
hlt
jmp
push
sbb
push
arpl
push
mov
jge
stos
shlb
mov
cld
inc
xor
or
jmp
mov
inc
xchg
xor
cmpsb
insl
flds
aas
adc
cmpsl
pop
add
add
push
out
loop
cmp
cmp
fildll
dec
lods
xchg
adc
loope
and
mov
pop
sub
mov
test
xchg
fwait
loopw
cwtl
jnp
movsl
je
jbe
add
or
cmpsl
outsb
out
xchg
pop
mov
int
lahf
mov
popa
adc
push
lret
out
push
lods
fsts
jp
mov
scas
aas
out
leave
xchg
jg
test
cmp
xchg
or
cmp
js
pushl
cmp
aad
cli
dec
cmp
aas
loop
stc
adcl
mov
sarb
adc
jg
sbb
test
mov
lock
sbb
sbb
data16
sbb
inc
aaa
dec
out
aam
adc
or
and
mov
ss
scas
enter
jge,pn
add
or
jge
pushf
inc
jg
arpl
repnz
push
pop
nop
jbe
and
pop
pop
mov
xor
adc
dec
add
inc
push
push
xchg
sub
cmp
xchg
out
mov
js
inc
lret
dec
inc
mov
add
popf
loope
sbb
pop
cmp
test
inc
xor
lcall
or
fsub
inc
insb
lcall
dec
and
dec
xchg
xchg
insb
imul
mov
into
push
dec
xchg
movsl
test
lds
ja
xchg
push
and
push
xchg
in
mov
pop
sub
jbe
push
jnp
addb
sbb
lcall
adc
pop
loop
mov
cmp
sub
bound
mov
dec
add
push
cwtl
sbb
adc
popa
int
loope
pop
push
sub
xor
xchg
push
pop
out
inc
rol
lods
jns
das
mov
cmp
lret
mov
leave
fdivs
mov
leave
std
add
inc
js
jle
push
lds
pop
fiadds
or
sub
xchg
popf
xor
in
jmp
mov
mov
push
movsl
sub
pop
pop
outsl
int3
sub
lock
dec
jns
cmp
and
pop
inc
enter
js
lods
cwtl
xchg
lods
lods
mov
jae
and
imul
jnp
push
xchg
mov
sbb
mov
lods
ja
sbb
outsb
nop
xorl
aas
mov
or
mov
cltd
stc
push
loope
xor
xchg
or
lods
insl
jp
mov
lahf
data16
adc
sub
and
cltd
xor
inc
sub
dec
in
jg
mulb
not
push
cmp
mov
mov
jnp
mov
mov
and
hlt
cmc
data16
sbb
xor
cs
je
push
jle
loopne
pop
jge
pop
negl
pop
sbb
adc
lret
pop
xchg
out
rorl
outsl
xor
addr16
cmp
ret
shll
add
and
fstl
lahf
shr
ja
push
dec
lcall
mov
cwtl
sahf
cltd
pop
fistpll
sbb
daa
cmc
int3
ss
push
xchg
inc
jb
rcr
test
add
adc
xchg
outsl
jle
cmp
ds
fs
dec
dec
arpl
sub
mov
outsb
dec
andb
jns
jl
cmp
sbb
mov
cli
xchg
iret
gs
xchg
in
scas
push
xchg
pusha
mov
sbb
pop
mov
mov
jnp
inc
or
cld
and
repz
xchg
ds
xchg
bound
add
ja
jns
fdivrp
scas
repz
je
or
leave
bound
push
movb
xchg
pop
pushf
fs
out
mov
and
sbb
adc
and
sub
test
cmp
aas
xchg
out
and
mov
out
xchg
mov
mov
mov
xchg
pop
ja
out
outsb
adc
lods
pushf
xor
push
ljmp
jns
daa
pusha
inc
mov
incb
outsb
sub
inc
sbb
jbe
sub
dec
jmp
mov
out
pop
push
lea
xchg
inc
fcomip
fsubrp
xchg
and
dec
adc
or
mov
mov
rcrl
imul
mov
loop
std
jmp
xchg
cmp
in
jecxz
lea
xchg
inc
rcrl
dec
push
aad
sti
pop
movl
pop
bound
mov
push
fwait
mov
clc
in
sbb
jne
sbb
addr16
inc
xchg
test
inc
mov
stc
aam
sub
cs
scas
out
sub
mov
mov
ret
fsts
cmp
mov
cmc
int3
jge
jmp
mov
icebp
cs
push
sbb
insb
sub
ja
adc
aad
ud1
add
fisubl
jmp
data16
loopne
ret
and
pop
lock
xchg
orl
lock
nop
inc
push
fistpl
outsb
or
cmp
pushf
or
cmp
and
mov
int
jae
add
fcoml
mov
jne
add
push
lock
inc
enter
fstps
out
adc
adc
xchg
in
pop
ficoml
adc
jmp
insb
mov
addr16
xor
adc
xlat
sub
aad
outsl
testb
daa
push
in
mov
add
jnp
push
adc
sub
sub
push
pushf
sub
mov
rcll
lods
mov
mov
sbb
add
fstpt
push
push
mov
pop
add
jmp
imul
inc
repnz
push
jp
mov
test
pop
ljmp
test
fcmovbe
or
dec
and
fidivrs
push
cld
jmp
add
fcoml
cwtl
sbb
and
lcall
fdivs
push
ret
data16
scas
dec
mov
jp
mov
mov
push
add
out
push
stos
mov
movsl
xchg
pop
scas
mov
addb
lcall
xchg
xor
or
sbb
mov
ds
dec
sbb
inc
gs
aad
sub
fcoml
std
fistl
cwtl
jbe
loop
cmp
or
mov
fwait
mov
push
mov
bound
jbe
cmpsl
push
cmp
cwtl
mov
jbe
int3
pusha
adc
jno
in
push
adc
je
xchg
icebp
mov
das
push
push
jmp
add
push
test
frstor
outsl
inc
out
lds
jecxz
test
mov
xchg
push
movsb
data16
lret
ret
dec
int3
shrb
movsb
cmpsb
mov
nop
fsubr
inc
aam
cmpsb
imul
adc
int3
movsl
mov
arpl
out
in
xchg
test
flds
sbb
and
cmpsl
ret
fisubrs
jge
sbb
lds
stos
cmp
sub
pop
stos
mov
fxch
or
xor
sub
jmp
push
fcmove
bnd
pop
xchg
push
imul
jno
jb
xchg
dec
sbb
mov
xchg
or
sbb
dec
into
xor
add
lods
pop
jno
mov
rep
xchg
sbb
push
scas
shrl
mov
mov
lcall
movsl
out
jg
jle
cmp
pop
test
push
xchg
mov
imul
dec
sbb
cmp
mov
cmp
dec
xchg
subl
push
xor
jno
mov
and
out
out
xlat
xorl
stc
pop
rorb
mov
adc
mov
or
mov
xorl
add
xchg
jecxz
int3
mov
sbb
aam
jl
adc
sti
xchg
hlt
ret
jno
sbb
adc
mov
push
cmp
cmp
mov
mov
add
add
bound
push
sub
adc
scas
and
sahf
not
in
inc
iret
data16
dec
push
fildl
fmuls
pop
iret
add
or
or
mov
xor
push
dec
idivl
cbtw
inc
aad
lret
lcall
rolb
mov
mov
jge
add
jecxz
rorl
leave
jnp
sbb
mov
push
jne
mov
cmp
mov
push
add
xchg
je
inc
xor
pop
jns
add
mov
sub
test
stc
push
hlt
xchg
std
fistpll
sbb
iret
ret
mov
jo
xlat
pop
lea
scas
ljmp
mov
data16
mov
jmp
mov
dec
pop
out
pop
mov
fildl
rcll
loop
xchg
sub
iret
mov
mov
aas
dec
dec
bound
mov
and
mov
lock
push
xchg
sub
aad
mov
roll
ja
dec
fidivl
gs
out
add
or
arpl
bnd
les
sbb
fimull
dec
std
js
add
pop
add
outsl
mov
or
mov
sbb
out
hlt
repnz
and
xchg
sbb
mov
xchg
mov
xor
call
and
mov
hlt
jle
xor
xor
rol
and
dec
lret
push
jo
dec
mov
mov
and
cmc
ror
fisubrl
add
mov
add
sub
iret
sarb
push
mov
sub
sbb
sar
inc
mov
pop
movsl
ret
xchg
add
sti
jo
push
aad
fsts
xor
push
sub
adc
fs
repz
lock
call
ficoms
ljmp
dec
xor
adcl
cmp
sbbl
sub
stos
int
aam
pop
popf
out
addb
lds
subl
push
adc
dec
push
mov
mov
ljmp
mov
xor
push
arpl
xchg
add
aaa
sub
mov
jno
fisttpl
jno
sbb
js
stc
dec
push
xchg
ret
pop
dec
dec
inc
ds
adc
push
pop
or
lcall
xchg
loop
stos
inc
hlt
imul
fsubr
push
ja
out
iret
pop
fcompl
insl
rcrl
int
andl
ret
adc
int
aam
mov
je
cmp
xchg
repz
pop
test
stc
xchg
cmp
adc
xor
popfw
ja
negb
pop
mov
sahf
enter
test
mov
fbstp
jmp
adc
out
cld
insl
mov
cmp
adc
lods
jmp
nop
mov
add
push
mov
movsl
into
push
cmp
mov
mov
loop
fiadds
fwait
repnz
xchg
pop
rclb
enter
mov
adc
and
inc
pushf
lahf
or
fiadds
inc
push
push
jecxz
shll
lds
in
rcr
jg
xor
inc
mov
adc
bound
cmp
rcr
xchg
aaa
cld
cltd
jo
outsb
pop
les
std
dec
sbb
jnp
push
stc
adc
stos
mov
sbb
add
rorl
or
xor
insb
lods
addr16
sbb
push
scas
mov
int3
push
cmovle
xchg
push
cwtl
fwait
xor
mov
sub
in
shlb
out
dec
imul
push
push
xor
pop
dec
bound
mov
ficomps
inc
movsl
cwtl
out
pop
adc
leave
push
rorl
das
mov
out
adc
cmp
mov
mov
shlb
orl
sahf
sub
pop
out
cmp
xchg
std
orl
mov
mov
jl
inc
enter
pop
stc
arpl
xchg
and
jns
pop
xchg
adc
stc
inc
sub
cmpsl
out
pushf
fsubrl
or
mov
call
sub
pop
mov
jle
adc
pusha
pop
push
pop
dec
sbb
mov
idivl
xchg
jg
mov
loopne
ds
mov
idivl
fcomi
adc
fildll
scas
add
paddsb
mov
mov
push
cltd
push
outsb
into
mov
mov
aaa
and
inc
xlat
and
nop
call
mov
and
out
in
sbb
enter
pop
add
push
mov
loop
mov
les
add
jne
cmp
lret
daa
add
enter
pop
fdivrl
or
leave
adcb
mov
call
das
push
and
mov
lea
cli
inc
clc
lds
enter
gs
xchg
loopne
sub
aam
loop
arpl
popa
pop
cmpsb
ds
into
jmp
add
sub
mov
in
in
cmp
xor
aam
mov
mov
dec
mov
jecxz
xchg
in
mov
stos
test
push
lret
shlb
jbe
xchg
js
pop
and
test
mov
jne
pop
xchg
iret
mov
fnstenv
fwait
notl
cli
imul
pushf
sbb
xchg
call
iret
cwtl
xlat
mov
ljmp
jae
adc
sbb
lret
movsl
push
sbb
mov
pop
and
loopne
popa
pop
sbb
lret
scas
stc
and
insb
aad
jecxz,pt
inc
push
mov
sti
mov
sub
jg
push
cltd
mov
imul
divl
lock
repnz
push
jnp
ljmp
idiv
enter
out
mov
xor
daa
xchg
pop
cmpl
in
lea
or
divb
mov
insb
mov
xor
cmp
lcall
int3
push
push
pop
push
lret
push
cmp
xchg
mov
mov
aas
subb
adc
cmpb
pop
mov
pop
push
jo
sbb
aam
insl
pushf
jb
sub
xchg
sub
cli
sbb
inc
roll
dec
push
or
mov
insb
mov
pop
rorl
or
loopne
sti
pop
in
mov
movsl
xor
adc
stos
xchg
jne
mov
sbb
clc
xchg
out
xchg
pop
dec
xchg
push
adc
cmp
jo,pt
pop
push
push
popa
sub
icebp
sub
cwtl
lock
test
fsubl
mov
add
cmp
mov
shrb
aad
add
sub
int
and
rcrb
jne
imul
divps
and
std
jge
xor
mov
xchg
jg
dec
xorl
lods
sub
jle
sub
dec
mov
repz
inc
add
outsl
push
dec
mov
arpl
jg
gs
sbb
lcall
into
cmp
xchg
xor
fcos
popa
xchg
subl
ret
inc
mov
popa
add
fisubrl
cmp
roll
xchg
push
add
sahf
dec
dec
fidivrs
mov
or
inc
mov
mov
loope
or
ror
xor
icebp
cmp
add
mov
cmp
fcoml
mov
popa
fwait
das
sub
cld
xor
pop
std
test
pop
out
cld
nop
push
imul
push
pop
test
arpl
hlt
and
xor
push
arpl
in
pop
ficoms
mov
adc
cmp
inc
cld
xchg
jae
cs
movl
std
mov
test
pop
cld
pop
sti
xchg
mov
push
incb
loop,pn
and
mov
ret
push
aaa
shrl
push
pusha
shrb
mov
shll
cmc
mov
and
jo
dec
cmpsb
mov
sbb
jmp
or
ja
xchg
jo
int3
or
sbb
push
cmp
mov
jo
stos
sbb
cmp
call
fs
add
mov
dec
and
xchg
sbb
and
pop
cli
cmp
aaa
sti
movsl
ret
sbb
add
lahf
push
mov
or
mov
in
stc
stc
cmpsb
mov
adc
mov
scas
xchg
mov
cmc
jne
adc
lods
mov
push
sbb
inc
and
inc
mov
pop
cli
mov
ret
cmpsb
in
pop
sbbb
or
jmp
push
dec
cmp
xchg
fistpl
cli
lss
out
test
out
ss
and
lds
mov
sub
add
sbb
sbb
mov
jmp
xor
outsb
mov
rcll
into
add
jno
ds
sbb
cs
orb
cli
pop
movzwl
les
pop
aam
test
imul
movsb
jmp
int
push
cmc
cmp
into
xor
mov
enter
inc
mov
arpl
or
lcall
and
pop
and
inc
lcall
or
insb
xor
jl
dec
jl
lea
sti
jnp
aaa
add
fstp
repz
testb
cmp
loopne
sarb
push
xchg
sub
xchg
das
dec
fwait
or
or
mov
sbb
push
and
mov
cmovle
popf
mov
push
dec
mov
push
jecxz
cmp
pop
aam
pop
cwtl
xlat
mov
xchg
inc
mov
ja
adcl
mov
sub
lret
movsl
stos
movsb
daa
cmp
push
sub
iret
adc
jo
mov
mov
push
ja
xchg
mov
lods
jae
js
test
test
or
cmp
out
iret
cld
jae
and
outsl
or
mov
jbe
je
pop
scas
sub
xor
xchg
sarl
dec
out
push
insb
insl
push
add
add
push
mov
jmp
mov
push
cld
jno
fadds
adc
mov
sahf
nop
mov
xchg
xchg
pop
lahf
insb
and
lcall
cmp
sarl
scas
lea
popf
lds
dec
out
xchg
pop
mov
jp
loopne
mov
lret
dec
sbb
les
and
push
inc
test
xor
or
aaa
push
sbb
das
fsubrl
xorl
mov
push
jg
xor
sti
dec
rcll
inc
ljmp
mov
testl
into
shll
shlb
and
push
dec
cmpsl
repz
pop
test
test
push
sbb
inc
push
nop
mov
adc
sahf
int3
rorl
pop
jp
lahf
popa
xchg
pop
xor
adc
cs
add
jno
jg
sub
nop
loop
js
into
test
fnstcw
mov
cwtl
into
pop
push
and
mov
fisttpll
xor
sub
jp
arpl
insl
inc
sub
arpl
loopne
movsb
cmp
pop
movsb
lds
jle
je
out
mov
inc
dec
orl
movsl
lea
hlt
clc
inc
notl
jmp
add
leave
outsl
mov
sub
inc
xchg
pop
mov
ja
cmpsl
test
sub
insl
or
hlt
repnz
jp
mov
enter
shll
mov
add
mov
movl
fbld
mov
mov
dec
xchg
dec
lcall
jae
or
mov
stos
push
lcall
mov
jnp
lods
jmp
push
sbb
stos
cmp
aad
fwait
cs
xor
sbb
jnp
sub
fimull
sarb
pop
inc
adcl
jecxz
ja
push
inc
mov
push
flds
cmp
pop
subl
popf
sub
test
out
leave
inc
and
inc
push
mov
clc
sbb
out
fidivrs
icebp
gs
add
mov
push
inc
loopne
jae
test
daa
in
push
pop
mov
aad
xchg
dec
pop
push
or
sub
repz
pop
mov
std
mov
test
and
inc
ret
fnstenv
jg
mov
mov
int
xlat
int
roll
pop
mov
and
or
sub
mov
ret
cmp
dec
sub
imul
push
loopne
inc
addl
adc
adc
mov
dec
addb
mov
not
sahf
add
popa
sbb
mov
ljmp
jo
sbb
cmpsb
sarb
add
sbb
pop
mov
out
bound
lds
sub
cld
lahf
add
mov
fimull
and
xchg
mov
rcll
popf
adc
sbb
std
xor
xchg
call
jle
push
loop
out
inc
lods
es
aam
movsl
das
aam
mov
xor
inc
push
out
mov
xchg
pop
inc
pop
lret
iret
jp
dec
push
inc
adc
jo
pop
call
xchg
push
mov
cmp
cmp
loop
mov
dec
fcoms
dec
jb
repnz
xchg
stc
adc
mov
in
rorb
xchg
mov
cmp
repz
lcall
mov
jle
jmp
mov
dec
and
inc
pop
inc
je
inc
dec
adc
inc
mov
add
add
int3
mov
rcr
ror
xorb
and
add
mov
mov
popa
mov
inc
arpl
dec
sub
mov
into
insb
xchg
cmp
mov
push
lret
jae
push
pushl
add
lret
fcmovbe
rcr
push
adc
sahf
dec
dec
or
ret
pop
add
jmp
sti
test
sbb
std
pop
stos
lcall
adc
insl
xchg
dec
addb
jae
mov
pop
not
outsb
and
lret
mov
mov
clc
lahf
adc
jp
or
and
xor
fsts
outsb
loope
mov
mov
cmpl
push
stos
add
neg
adc
sti
xor
sbb
and
bound
dec
cmpsl
and
xor
imul
sub
push
pusha
xlat
adc
sub
in
ret
stos
or
scas
pushf
rcll
cmc
cmp
jecxz
ss
pop
inc
lret
mov
leave
push
mov
movsl
inc
or
sarl
mov
das
nop
arpl
mov
xchg
cwtl
clc
lahf
mov
lcall
cmpsl
jns
popf
and
pop
outsb
inc
fwait
rolb
cmc
mov
movsb
cmp
jge
push
jb
out
inc
aam
push
in
mov
arpl
loope
jge
and
push
dec
xchg
fsubr
adc
invd
aad
enter
enter
dec
pop
add
clc
lret
dec
popa
jno
iret
in
ret
sub
insb
xchg
cmp
push
or
adc
movl
lods
lock
pusha
cli
jnp
sub
movsl
dec
rorb
fistps
bound
add
out
jne
pop
data16
vaddsubpd
outsb
lcall
jns
adc
or
inc
ficoms
lahf
xor
test
jecxz,pn
or
add
add
in
subb
cmc
jmp
or
or
cmp
ja
inc
out
negl
sbb
int
outsb
out
dec
push
xor
add
daa
aaa
mov
fnstcw
cmpsb
push
xor
dec
mov
ret
adc
sub
dec
jae
inc
and
pop
jl
mov
sub
jg
in
ret
mov
push
sbb
sbb
cmpsl
dec
jnp
cmp
xor
adcb
cmc
lock
jge
andl
xchg
sbb
stos
or
add
dec
mov
imul
lods
adc
fdivrl
dec
jmp
test
push
pushf
push
scas
jge
cli
into
imul
stc
das
lcall
cmc
insb
popf
mov
sbb
xchg
push
cmp
fstpt
xchg
hlt
mov
pop
xor
hlt
lret
lds
in
sub
xlat
cmpsl
loopne
imul
dec
inc
or
test
adcb
in
js
insl
mov
jge
push
int3
and
xor
pop
fsubl
sbb
daa
imul
jae
mov
pop
shrl
into
or
inc
mov
dec
test
push
scas
shlb
fxch
or
mov
mov
pop
dec
fstpt
xor
int
jbe
dec
xchg
int3
lret
aaa
cmp
es
jge
rclb
movsb
mov
insb
sti
mov
and
cmpl
hlt
cmp
jnp
and
or
add
jmp
orb
pusha
int3
arpl
movsl
jbe
and
cltd
in
in
call
jnp
fnstcw
loope
fs
pop
dec
outsl
mov
in
ficoms
cmp
cmpsl
fisubrs
jmp
pop
push
sbb
pop
scas
pop
mov
xor
pop
push
add
stos
and
xlat
lods
jg
inc
push
lods
inc
lret
lock
push
fcomps
inc
dec
lods
xor
fldenv
mov
or
inc
xor
enter
gs
sbb
clc
test
outsb
jns
mov
xchg
pop
jl
scas
outsb
and
in
jge
je
mov
mov
push
dec
sub
push
inc
cmp
xchg
mov
cmp
pop
in
lds
lea
test
hlt
out
sbb
mov
mov
xor
loope
lahf
mov
lds
jae
push
adc
xlat
cwtl
gs
mov
fdiv
loope
cs
daa
loopne
xchg
xchg
push
push
into
dec
lret
fsubr
pop
mov
dec
dec
inc
push
mov
in
lcall
cmp
push
jno
int3
inc
adc
sbb
enter
jns
dec
mov
jne
dec
lock
sub
jle
xor
sbb
pop
mov
or
xlat
lea
add
xchg
mov
xchg
arpl
enter
daa
lods
int3
dec
jg
jne
xchg
sahf
and
xor
out
jmp
or
in
popl
xlat
jge
jno
push
mov
test
sbbl
pop
sti
sbb
cmp
push
daa
mov
mov
popf
fcompl
mov
ja
les
or
adc
pop
push
flds
daa
movsl
addl
adc
repz
mov
jns
outsl
xor
push
ljmp
fs
mov
aam
data16
or
cmp
sbb
jno
repnz
adc
sahf
push
int
js
fs
or
xchg
jge
mov
sti
fsubs
shll
push
xchg
cltd
xchg
jg
lea
sub
dec
cltd
idivl
and
and
in
push
rol
rorl
repnz
data16
mov
movsbl
fcomps
shl
cwtl
jno
scas
mov
and
das
lret
or
shl
xchg
add
data16
xor
inc
ja
xchg
sbb
sub
test
out
or
xor
fisttpll
push
sbb
psrad
loop
push
and
rclb
int
imull
pop
das
xchg
mov
mov
arpl
pop
add
mov
daa
mov
mov
sahf
mov
sub
movsb
jbe
sbb
xor
add
xor
pop
and
icebp
aam
mov
pop
orb
add
xor
or
cs
mov
sub
in
and
stc
aam
push
je
popf
xor
insl
push
mov
jmp
inc
add
push
repnz
mov
sbb
pop
xor
xor
pop
pop
sar
jnp
add
mov
ss
icebp
jmp
stos
mov
jle
mov
mov
movsl
sub
dec
sbb
and
push
cmp
pop
xor
cmp
xchg
test
fdivrs
lock
addr16
loopne
dec
scas
icebp
fists
cli
fs
dec
sub
adc
cmp
pop
int
xor
fnsave
add
add
outsl
fcmovnbe
sarb
dec
cmp
cmp
mov
cmp
xor
and
sbb
jb
mov
cmp
add
lds
aam
sub
mov
cwtl
popa
adc
inc
iret
lods
add
pop
sub
pop
ret
ja
adc
xor
push
push
xchg
pop
in
fists
ljmp
pusha
lock
jns
xchg
xlat
mov
dec
jecxz
sbb
movsl
xchg
cli
pusha
sarb
iret
int3
fisubs
mov
xlat
out
cmp
loope
mov
push
daa
ficompl
dec
lret
test
push
idiv
aas
mov
mov
jle
mov
sbb
pushf
lock
mul
cmp
cmp
push
dec
imulb
test
mov
pop
add
mov
xchg
insb
lods
enter
test
mov
pop
clc
dec
int
pop
inc
pop
fistl
leave
daa
sub
xorl
push
stos
test
inc
push
pop
dec
stc
lods
sbb
shll
shll
leave
in
mov
rorb
icebp
push
outsb
loopne
in
sti
pop
mov
xlat
mov
js,pn
or
pop
mov
sbb
out
pop
mov
incl
adc
aad
neg
lret
xlat
xchg
adc
pop
cmp
xor
mov
sub
stos
fcomp
shrb
or
ret
in
out
push
mov
pushf
dec
cmp
mov
xlat
mov
lock
cmp
cmp
loop
test
shrb
aad
mov
arpl
fs
xchg
add
xchg
jb
outsb
mov
aam
jecxz
test
or
mov
rol
negb
mov
xchg
mov
lret
push
test
hlt
mov
pushf
mov
push
arpl
inc
gs
bound
lret
xlat
adc
shrl
mov
mov
rol
stc
out
cmp
sbb
push
idivl
or
push
cmp
add
es
push
cmp
fistps
enter
pop
push
movsb
add
or
stc
jle
dec
insb
push
cmpsl
in
dec
or
and
adc
pusha
popf
es
aas
push
faddp
push
pushf
jb
push
pop
push
ret
cli
jp
or
and
mov
aam
cltd
add
mov
mov
sahf
fdivrl
rclb
out
in
cmp
jmp
inc
xchg
loop
cmpsb
and
cld
dec
jbe
push
lret
aad
dec
jecxz
lods
push
push
push
rolb
popa
push
ret
insb
fcmovne
in
xchg
sub
sti
sbb
sub
scas
in
sbb
inc
inc
lock
mov
mov
inc
movsl
mov
mov
imul
xrelease
lea
jns
testb
adc
sti
icebp
ficompl
test
lds
cmpb
push
mov
and
xorb
jo
scas
or
arpl
add
or
pusha
xor
xlat
push
pop
and
decl
jmp
sbb
adc
mov
jl
push
mov
pop
and
dec
pop
jbe
icebp
jae
ficoml
sahf
xchg
or
add
fistl
mov
xor
loopne
push
xchg
jne
or
sbb
pushf
fs
and
in
and
repnz
rcr
sbb
bound
add
xchg
push
and
sub
hlt
dec
adc
sub
imul
xor
gs
mov
sahf
sub
mov
cld
aaa
cmpb
pop
out
cmp
clc
inc
repz
imul
push
adc
sub
clc
pop
jp
clc
xchg
add
std
pop
arpl
push
jp
scas
inc
xchg
pop
add
pusha
mov
mov
pop
mov
test
stc
or
and
ror
cmp
mulb
dec
arpl
mov
movsb
leave
add
jmp
clc
sbb
imul
cmp
mov
pop
xor
jno
in
mov
add
inc
cwtl
mov
mov
aam
pop
mov
cli
mov
mov
mov
fstpt
shrb
fldenv
mov
inc
mov
sub
inc
inc
sub
std
flds
or
fiadds
cmp
cmp
testb
movb
sarb
loope
out
cmp
jnp
mov
fs
push
mov
push
jl
or
aam
dec
cmpsb
or
cwtl
cld
stos
scas
mov
leave
cld
andl
outsl
add
ds
mov
jo
rorb
fstps
pop
arpl
sub
cmp
sub
jnp
cmp
push
fisubrl
mov
push
and
push
cmp
out
cld
sbb
movsb
dec
out
fmuls
jle
jae
sub
inc
loop
addr16
xchg
push
xchg
sbb
mov
sub
ds
pop
adc
mov
fidivrs
into
pop
loopne
pop
cld
xchg
fsts
xor
out
and
daa
sbb
aas
xorb
repz
in
inc
mov
xchg
mov
call
sub
in
mov
cmp
iret
int
jle
pop
mov
int
mov
rcl
cli
imul
out
cmp
jg
adcb
push
push
int3
xchg
cwtl
cmp
sbb
roll
adc
std
cmpsl
fs
pop
sbb
mov
xchg
sbb
arpl
add
jecxz
aaa
push
mov
dec
into
mov
cmp
mov
cmp
pop
popf
shll
mov
mov
inc
lret
loopne
pop
imul
sub
push
push
js
inc
mov
insl
pop
mov
aad
mov
dec
xchg
or
jmp
pop
out
jns
ret
push
sti
add
fsubrs
xchg
mov
push
scas
mov
inc
stc
or
jecxz
inc
rorl
mov
inc
mov
xchg
pop
pop
push
lea
sbb
inc
ret
sbbb
pop
mov
inc
insl
out
push
mov
wrmsr
lret
push
mov
xchg
cmpsb
int3
fwait
stc
cmpsb
repnz
icebp
cmc
mov
ljmp
adc
loop
icebp
aaa
jo
mov
enter
mov
adc
ficomps
sbb
pop
mov
and
fstpl
gs
push
push
add
mov
dec
gs
inc
or
cmpb
mov
repz
jmp
xchg
push
ja
call
divl
cmpsb
sbb
xchg
rclb
sub
jae
xor
stos
mov
fwait
dec
scas
or
cmpsl
lods
pop
xchg
ds
add
and
cmp
xor
jecxz
lods
pushf
test
mov
or
sub
jne
lret
outsl
ljmp
lahf
sbb
add
into
ja
mov
jle
xchg
outsl
dec
and
sarl
lahf
sub
in
push
dec
pop
loop
jns
outsb
nop
dec
mov
mov
mov
mov
pushf
or
xor
loop
movsb
jns
push
push
jno
movsb
out
cwtl
in
imul
jns
mov
ljmp
mov
scas
adc
loopne
popa
add
and
xor
cmp
sbb
mov
sahf
xchg
fstl
out
mov
pop
mov
jb
mov
push
xlat
enter
jo
sub
push
addl
fcmovnbe
pushf
lock
in
jb
gs
imul
shr
xor
inc
shrl
pop
push
lock
fildll
into
lods
jo
enter
push
sub
sub
sbb
adc
insl
insl
loope
xchg
outsl
xlat
hlt
lcall
in
adc
aaa
insb
bound
and
push
xchg
mov
shll
push
fldcw
and
inc
push
movsb
mov
dec
ficoml
sub
leave
adc
das
pop
add
or
jb
adc
cmpsl
pop
shrl
and
adc
push
cltd
cmp
inc
jno
sub
out
sub
xchg
pop
inc
fdivrs
jp
and
xchg
dec
dec
popf
adc
das
jp
xchg
sbbb
insb
xchg
lret
adc
lds
adc
dec
rcrl
add
push
ds
fisttpl
mov
adc
pusha
push
mov
cmp
xchg
cmp
cmpsb
stos
jg
fbstp
aas
push
xchg
inc
dec
sbb
loop
ret
shlb
aas
outsl
sbb
jno
dec
mov
jne
or
sarb
jmp
scas
out
add
mov
dec
cmp
inc
jnp
std
lock
jns
cltd
fptan
pop
mov
mov
dec
mov
cmpb
sub
out
sbb
shr
cltd
into
roll
popl
mov
jno
pop
ret
fwait
ja
inc
insl
xor
inc
mov
fdivrs
popf
aas
inc
xchg
add
lret
fs
int
js
or
jnp
in
js
idivb
clc
test
adc
push
lods
push
jb
cmpsb
jae
cmp
inc
outsl
xorl
mov
dec
out
fldenv
dec
jbe
repz
sbb
clc
pop
loopne
cmp
and
xor
lock
add
or
push
imul
pop
in
repnz
and
popa
repnz
into
loop
test
sbb
icebp
movsb
in
jb
sbb
push
sub
shr
jge
push
orl
clc
test
xchg
fidivrl
ja
add
cwtl
movsl
adc
add
sbbb
test
push
xlat
lds
mov
cmpsb
pop
xchg
outsb
sub
outsl
addr16
mov
pop
push
sub
out
xchg
cs
lock
mov
push
sub
and
popf
aas
dec
jb
insb
lcall
arpl
ja
les
ds
push
fstps
pop
rcrb
mov
or
cmp
pop
add
repnz
lods
jns
mov
bound
xor
jp
xchg
lds
push
aad
sarb
pop
or
cwtl
adc
aam
pop
aas
in
dec
jmp
ret
fildl
daa
cmc
test
stos
fsubrl
add
ljmp
cmp
repnz
xor
lahf
lret
stos
cmp
lea
sbb
mov
mov
ljmp
push
xor
push
pop
or
pushf
xchg
das
jno
cmp
adc
add
xchg
lea
filds
js
xor
mov
fistpll
subb
dec
push
push
std
imul
pop
loopne
outsl
inc
dec
stos
sub
repz
xchg
in
mov
addr16
jl
in
in
dec
pop
dec
test
rorl
scas
mov
cmc
shrl
jge
dec
mov
mov
xor
stc
or
sahf
gs
out
push
lahf
adcb
mov
inc
iret
pop
hlt
cmpsb
sub
pop
mov
mov
fs
cmp
cmpsl
cmp
cmpb
xor
cmpb
outsl
ret
mov
and
push
cmp
sbb
xor
pusha
xchg
fimull
cmp
ds
cmp
mov
and
test
loopne
imul
outsl
push
fs
lods
fadds
lcall
mov
dec
cmpsl
fs
xchg
test
xor
mov
push
adc
jb
jl
jb
jp
mov
popf
adc
ficomps
movl
imul
mov
lahf
hlt
inc
movsb
inc
aam
insl
sub
je
or
jmp
jae
add
scas
les
inc
dec
stc
lret
sbb
ja
sub
out
fs
xchg
pop
sub
adc
cmpsl
mov
test
inc
jp
scas
fdiv
idiv
andl
std
lods
stc
packsswb
mov
adc
add
out
dec
ret
pusha
mov
xchg
loop
sbb
iret
adc
inc
mov
push
scas
shr
xlat
add
pop
pop
xor
dec
cmc
pop
outsl
add
or
mov
add
or
pushf
outsl
xchg
push
inc
mov
dec
es
and
call
inc
jge
xchg
xchg
pop
sbb
call
pop
inc
ret
fcmovne
mov
adcb
paddb
sub
sti
pop
xchg
sbb
jmp
mov
push
dec
xchg
sub
adc
stos
movsb
jbe
jg
xchg
enter
push
aas
inc
adc
cmp
pop
lcall
add
cmp
dec
cmc
cli
fsub
aam
idivb
xlat
and
push
mov
testb
add
loop
and
push
into
pop
out
aad
adc
lret
jbe
mov
jp
ljmp
mov
mov
jp
pop
in
rolb
ret
popa
outsl
fcompl
adc
jp
mov
insl
and
pop
mov
ds
adc
sub
adc
notb
jae
dec
dec
loopne
lret
inc
adc
jmp
pusha
pop
shlb
cltd
push
inc
pop
into
lea
aam
sub
test
add
inc
test
xchg
pusha
fucompp
pop
and
mov
jge
testb
mov
loopne
test
cmp
sub
mov
fmull
hlt
out
lea
or
cmc
and
sub
addr16
or
popf
mov
shrb
aad
inc
and
jae
inc
out
adc
stc
mov
cs
stos
push
sbb
into
lahf
mov
inc
lahf
sbb
dec
movl
js
insl
int
or
xchg
lahf
jl
sub
adc
call
mov
jbe
mov
mov
lret
mov
dec
dec
pushf
es
cmp
out
in
shll
mov
xor
pop
aaa
cmp
std
idiv
outsl
gs
mov
xchg
ret
jb
repnz
stc
mov
daa
inc
fstpt
mov
aam
push
jae
jbe
jno
sub
mov
and
jle
fidivs
fdivrs
arpl
pop
mov
aas
jp
sub
jmp
push
or
xor
aaa
dec
outsl
xchg
sub
inc
stos
inc
lahf
or
mov
push
mov
ret
inc
xchg
inc
data16
lds
js
mov
xorl
dec
mov
cltd
stc
das
negl
hlt
jl
jae
xor
cmpb
push
jmp
hlt
jmp
cmpsb
pop
push
fidivl
sub
jl
sbbl
popa
daa
cs
xchg
xchg
jle
lods
shll
cli
and
outsl
popf
adc
inc
cmpl
dec
int3
add
mov
imul
bnd
cmp
sub
int
jle
les
dec
cmp
dec
cmp
cmp
sub
jle
mov
inc
mov
xor
pop
leave
add
in
pop
lcall
mov
xchg
movsl
ljmp
pop
das
adc
lods
aad
clc
fdivs
test
or
in
cwtl
adc
pop
or
push
push
nop
and
sub
inc
mov
insl
pop
push
out
hlt
test
xchg
aaa
jl
mov
mov
and
out
inc
xchg
movb
adc
or
dec
add
add
push
sbb
aas
fnstcw
insl
push
hlt
sahf
mov
jmp
insb
leave
loop
sbb
add
pushf
push
movsl
ja
cmpsb
push
int
hlt
adc
cwtl
mulps
and
inc
mov
hlt
inc
push
mov
push
push
jo
bound
xchg
nop
or
mov
jbe
and
inc
mov
inc
dec
fists
fidivrs
cmpsb
adc
cwtl
or
ret
inc
loopne
popa
jg
stos
xor
shlb
add
mov
jmp
xor
ret
ljmp
push
mov
push
mov
adc
iret
push
cmp
daa
push
mov
adc
insl
sarl
imul
pop
sbb
add
sub
mov
dec
mov
add
jp
cmp
inc
cmp
lods
jp
filds
and
mov
cmpsl
jmp
dec
pop
aad
jb
notl
or
pop
cmp
xor
inc
mov
jmp
pop
jbe
in
pop
insb
sbb
push
nop
add
int3
dec
insb
xlat
jnp
mov
pop
sub
push
hlt
xor
les
xchg
pop
shll
lcall
leave
cmpsb
push
insb
dec
out
in
mov
arpl
repnz
movsb
sub
and
mov
or
mov
fisubrs
fdivrs
movsb
mov
push
dec
mov
mov
mov
or
test
xchg
mov
xchg
in
pop
push
mov
dec
jg
fs
add
test
leave
aas
jp
and
icebp
hlt
adc
ficompl
adc
mov
sbb
sbb
xchg
mov
call
pop
xor
cmc
test
xlat
mov
insl
add
repnz
sub
scas
inc
jne
stc
jb
and
loopne
push
jecxz
pop
xchg
jno
xchg
dec
mov
stos
nop
sub
jecxz
mov
bnd
inc
dec
dec
gs
mov
stc
addr16
divl
in
cmp
nop
pop
push
aad
out
pop
mov
push
sbb
out
jbe
cmp
mov
jbe
mov
aas
cmp
sub
nop
stos
imul
xchg
fdivrs
cmp
test
out
sub
add
sbb
int3
out
mov
adc
dec
fcompl
xor
rcr
stos
es
lret
outsb
icebp
dec
pusha
loopne
jb
mov
sub
scas
insl
popf
aam
xor
sbb
push
sbb
add
sbb
lret
outsb
call
xor
dec
scas
loop
mov
mov
rorb
push
ret
adc
or
push
daa
sub
popf
pushf
mov
jge
dec
push
lea
aam
and
xchg
daa
sahf
scas
shll
lea
ja
xlat
cwtl
addl
sub
xor
inc
dec
push
sbb
shll
inc
mul
int3
sub
xchg
dec
xlat
pop
lret
xor
test
stos
or
or
pushf
movsl
dec
mov
cmp
or
sahf
jl
jo
push
cltd
mov
stos
cmp
inc
jnp
push
enter
push
fldl
ja
fst
push
in
call
insb
ljmp
pusha
sti
cmp
popf
jecxz
add
cwtl
dec
leave
das
add
xchg
fdivrs
sub
lret
int
and
movsl
mov
ficoms
jno
mov
decb
jno
icebp
and
fdivs
pop
dec
push
in
sbbb
jp
jnp
sub
fcmovb
inc
in
or
xchg
add
mov
sbb
sahf
faddl
sbb
hlt
xor
lods
sbb
xchg
xor
cwtl
mov
add
and
inc
adc
adc
xchg
rcrb
lret
jge
pop
mov
jmp
xor
lods
aad
stos
test
mov
mov
sub
addb
inc
push
or
inc
cltd
fwait
push
vmovaps
call
xor
or
sub
mov
faddp
inc
push
outsl
xor
cltd
or
sub
mov
add
rcrl
jmp
xor
lcall
out
and
test
out
or
loope
mov
dec
adc
xchg
pop
xchg
aad
dec
addr16
out
shrl
and
popf
inc
insb
or
xlat
fnstsw
mov
lods
pop
or
cs
and
mov
mov
add
mov
and
mov
inc
cmp
pop
fidivl
sbb
dec
push
sub
pop
icebp
xchg
mov
dec
movsb
das
mov
lods
push
inc
inc
and
jo
in
xor
xor
lods
icebp
add
daa
cld
pop
lcall
bound
das
xor
or
xchg
int
jmp
pop
push
inc
and
xchg
sbb
outsl
enter
shrb
xchg
pop
lret
outsl
pop
jg
mov
pop
add
cwtl
dec
nop
lock
push
stos
dec
adc
test
cmp
shll
pop
cs
mov
and
mov
cmpsb
fwait
and
xchg
mov
xchg
mov
xchg
rclb
mov
adc
lods
fwait
push
jo
jae
adc
add
mov
pushf
cmp
add
mov
bound
or
mov
dec
xchg
add
xor
jnp
mov
or
inc
add
push
adcl
aaa
lods
iret
int3
les
out
cmp
mov
push
add
jge
mov
xchg
lcall
and
fwait
gs
clc
mov
jnp
lods
ja
dec
mov
xor
add
pop
lods
dec
push
pushf
test
xchg
nop
dec
dec
leave
cmp
inc
cmp
repnz
mov
inc
mov
mov
adc
cld
cmp
test
addr16
push
mov
add
dec
add
daa
out
and
aam
cmpsl
inc
dec
mov
sub
bswap
inc
lods
test
push
cmp
scas
in
push
mov
inc
mov
xlat
into
outsl
addr16
sahf
scas
sahf
mov
das
inc
inc
mov
call
add
sahf
and
pop
adc
sbb
sahf
pop
fs
or
lods
push
adc
test
push
sbb
add
mov
loop
sbb
dec
out
jmp
cmp
xchg
adc
mov
mov
pop
pop
push
mov
test
ficompl
push
mov
fists
jp
test
out
into
idiv
scas
fnstsw
das
add
xchg
arpl
rcrb
fwait
mov
and
ficompl
repz
cmp
nop
in
shlb
inc
sbb
mov
jae
push
mov
outsl
jo
and
shll
fldt
sti
int
mov
sbb
cmc
sbb
mov
sbb
or
dec
out
mov
inc
jne
jg
jbe
push
xchg
cmpb
lret
fucomip
dec
inc
mov
adc
sub
jbe
iret
int3
mov
orb
rcrl
jl
mov
pop
sarb
std
lods
ljmp
sbb
mov
std
pop
dec
xor
lock
add
sub
xchg
xchg
movsb
fdivl
fstpl
pusha
clc
scas
pop
and
cld
pop
fsubrl
cmp
or
push
lahf
jns
jg
lcall
push
divl
or
sbb
sbb
cmpsb
sbb
pop
dec
mov
fisubs
sbb
cld
jno
jbe
das
cmpsb
out
jns
push
xchg
push
mov
jl
jg
popf
mov
bound
nop
addr16
stos
xchg
call
dec
mov
dec
adc
je
scas
clc
test
xchg
mov
clc
jne
outsb
xor
xchg
xchg
test
adc
and
jmp
arpl
and
push
xor
test
es
pop
xor
fs
clc
cmp
jle
pop
xor
xor
sti
or
out
sbb
jno
fistpl
dec
hlt
test
ljmp
jnp
xchg
js
mov
mov
imul
roll
lods
adc
pop
mov
add
mov
cwtl
adc
rcl
clc
jb
testl
jg
cwtl
push
xor
es
outsb
inc
dec
add
dec
inc
movsb
jae
out
cmp
in
ja
sub
push
dec
or
leave
mov
mov
and
jl
inc
das
jg
dec
fcmovne
push
sbb
add
in
aaa
lret
out
fdivp
jle
out
loopne
xor
out
stos
cmp
es
xchg
push
push
and
xchg
mov
imull
sbb
pop
cmp
add
adcb
jg
and
pop
mov
jbe
mov
fists
insb
jp
adc
pop
dec
enter
cld
xchg
or
lahf
jmp
pop
pop
xchg
andb
add
orl
pop
jbe
pop
pusha
mov
aam
cwtl
mov
jnp
fnsave
movsb
pop
js
shr
mov
fildll
dec
into
mov
loope
sbb
sarb
jmp
push
into
push
jp
iret
in
scas
pop
add
inc
aas
shlb
stos
stc
bound
mov
repz
data16
rol
dec
or
push
shl
sbb
adc
out
das
in
sbb
inc
aaa
mov
loop
es
sbb
xchg
lcall
clc
arpl
fs
mov
jo
bound
out
jb
cmp
xor
into
outsb
add
imul
cmp
test
rcrb
mov
pmullw
rolb
ja
addr16
pop
push
inc
fcom
cmp
movsl
xchg
xor
int3
jmp
adc
dec
push
sub
mov
test
and
jge
adc
loopne
push
mov
outsb
or
xor
daa
out
shlb
bound
cmp
push
test
div
jb
mov
sahf
inc
adc
push
mov
or
pop
mov
mov
ljmp
or
and
inc
jo
cmp
repz
or
xchg
cmp
and
jb
je
jb
inc
movsb
mov
cmc
jp
cmp
data16
lods
pop
or
or
dec
adc
and
fwait
movsb
xchg
scas
shrl
mov
xorb
pusha
jo
mov
sub
push
pop
test
jbe
sbb
inc
xchg
rcr
stos
les
or
pop
mov
sahf
cmp
in
push
movsb
jae
mov
inc
ljmp
hlt
dec
mov
out
adc
and
cmp
mov
xor
or
jne
stc
in
pop
dec
sbb
adc
pop
divl
xchg
mov
adc
ds
mov
mov
fsubs
adc
es
fldenv
push
nop
pop
or
test
out
insb
ja
add
pop
push
mov
das
fldenv
inc
mov
cwtl
inc
xchg
push
lods
push
loope
xchg
push
aam
adc
test
or
xor
xchg
adc
test
jnp
mov
push
repz
daa
dec
cli
por
xchg
ret
roll
in
jbe
repnz
stos
mov
dec
mov
inc
scas
divb
mov
mov
xchg
xor
fcompl
add
push
jbe
jecxz
loope
fwait
push
jae
test
cmc
pop
adc
sti
stos
mov
ss
xor
adc
jbe
jecxz
loope
mov
rolb
mov
mov
mov
call
sbb
push
cmp
cmpsb
pop
sarb
lock
pop
add
pop
xchg
inc
lds
jb
arpl
mov
fstpl
mov
aam
sbb
sbb
mov
sub
ret
fwait
jecxz
pop
pop
stos
mov
xor
out
cmp
lahf
aas
gs
xlat
mov
jne
jge
push
push
mov
addb
dec
cmpsb
mov
stos
pushf
clc
lods
xchg
outsb
iret
movsb
or
iret
adc
pop
fwait
sbb
sbb
xchg
push
aad
ss
and
inc
xchg
adc
hlt
je
fsts
jp
inc
jge
mov
scas
and
fcmovu
ret
ret
dec
enter
icebp
fisttps
fisttpll
int
data16
ret
mov
inc
sahf
dec
cmpsl
test
outsl
filds
adc
test
cpuid
lret
in
and
inc
scas
movsl
inc
adc
push
sbb
push
sbb
and
roll
xchg
cmp
dec
inc
or
mov
imul
xchg
lret
jmp
outsl
ss
pop
xchg
jle
pushf
imul
or
push
movsl
rorb
mov
lcall
push
cltd
scas
rcrl
jnp
xlat
mov
filds
pop
jns
insb
xchg
roll
dec
inc
sub
lahf
xor
and
loopne
sahf
jne
popa
jno
and
mov
in
mov
decl
pop
adc
nop
js
insb
adc
mov
xchg
inc
push
aaa
xchg
adc
das
imul
xchg
or
xchg
dec
and
lods
fcmove
out
jle
push
xchg
stos
inc
sbb
ret
loop
adc
fs
add
leave
jo
sub
aam
inc
orl
adc
xor
std
pop
repnz
lcall
popa
cmp
jns
push
xchg
dec
adc
test
mov
lock
sahf
sbb
push
dec
gs
leave
mov
fwait
ljmp
sbb
add
imul
adcl
pusha
mov
add
fbld
fidivl
adc
fwait
and
mov
data16
adc
fildll
sbb
sbb
or
jns
push
mov
dec
out
ror
cli
mov
mov
adc
lret
and
pop
dec
dec
ja
subl
fisubs
outsb
sub
daa
xchg
adc
add
stos
pop
sub
sub
inc
and
add
popf
scas
xchg
and
testb
lea
mov
shl
inc
fbstp
std
repz
dec
insb
cmp
hlt
popf
inc
ficompl
mov
orl
pop
pop
loopne
sbb
mov
push
push
fsubr
xor
cmpsb
stc
push
jmp
enter
jle
test
ljmp
push
out
insl
inc
and
lods
call
xor
jb
mov
xor
inc
mov
popf
aam
popf
loopne
push
xor
adc
lret
bound
inc
lods
dec
jno
rcrl
lods
add
add
inc
inc
xchg
daa
and
adc
imul
or
fadd
int
xchg
or
adc
xor
pop
icebp
je
bound
jle
pop
mov
js
out
mov
xor
in
cld
hlt
xchg
pop
jnp
cltd
mov
xchg
test
pop
int
mov
pop
nop
cwtl
push
dec
mov
jne
jge
pusha
leave
mov
mov
pusha
lock
mov
sti
cs
orb
jb
imul
call
lods
in
fcoms
es
jl
dec
test
adc
test
fnstcw
or
call
shr
mov
rcrl
aad
mov
shl
flds
es
pop
xchg
add
stos
sub
mov
mov
int3
dec
push
pop
mov
fsqrt
or
andb
test
and
paddq
or
pushf
ds
div
std
decl
push
mov
in
inc
imul
jecxz
insb
cmp
xor
mov
cmp
movsl
xor
xchg
or
sub
cs
mov
push
xor
mov
js
mov
das
adc
xchg
ljmp
cmpsl
push
push
and
or
sub
sahf
jg
mov
adc
or
cmp
push
repnz
fldcw
mov
data16
ret
lock
push
into
test
les
push
push
loop
jo
adc
in
popf
js
jmp
int3
sbb
or
pop
jmp
mov
fcomps
je
push
lret
in
adc
push
cwtl
xchg
aaa
fldt
jb
jp
pushf
shl
cld
int
adc
loopne
les
mov
cmp
pop
xchg
adc
and
xchg
mov
xchg
mov
test
sbb
add
aas
imul
sbb
pop
shlb
cld
aam
cmp
pop
repz
inc
fs
movsl
jns
dec
test
leave
repnz
rorl
outsl
scas
iret
push
mov
inc
imul
mov
idivl
loop
mov
xlat
adcb
jns
icebp
or
cmp
ja
cmp
mov
jle
sub
popa
inc
dec
push
mov
ret
pop
aam
imul
mov
cmp
in
bound
inc
xchg
aam
xor
inc
out
ret
and
int3
push
xchg
xor
xchg
and
adc
inc
mov
inc
and
call
mov
fwait
jmp
fisttps
jbe
es
pop
ss
sub
add
fsubrl
inc
cwtl
mov
sbb
outsb
icebp
xchg
push
lret
xchg
imul
movsb
aad
leave
xchg
outsb
popf
xchg
fs
or
cmp
aas
aaa
and
push
add
lahf
daa
cmp
inc
hlt
andb
daa
lahf
mov
icebp
jo
mov
adc
pop
mov
push
fnsave
sbb
in
mulb
push
cmp
popf
cmp
dec
sahf
add
addr16
cld
int
jg
inc
shrl
mov
xor
ret
push
jge
jge
pop
jmp
or
pusha
push
xchg
sbb
aad
in
into
xor
in
mov
xor
sbb
add
rorb
imul
add
xchg
xlat
and
scas
pop
push
popa
mov
fndisi(8087
push
out
std
fildl
cs
mov
push
lock
add
ret
int3
mov
test
int3
xchg
aad
sub
cli
inc
aaa
xchg
outsb
push
sbb
push
inc
dec
cmc
ret
and
add
scas
and
jecxz
xchg
push
orl
int3
arpl
pop
push
test
psubsw
leave
push
pop
cli
inc
ljmp
fwait
lcall
lcall
shlb
std
outsl
cmpsl
jnp
xorb
scas
push
mov
jecxz
fwait
inc
jge
jge
daa
inc
pop
rorl
out
add
insl
loope
xlat
push
pop
add
xor
mov
add
sbb
push
bound
or
cli
jns
cmpsl
jg
cld
pop
mov
daa
or
test
xor
pop
data16
in
mov
fdivrs
lds
mov
fmull
mov
outsl
fidivl
stc
test
std
mov
mov
fisttps
sub
push
sub
movsb
xor
add
scas
negl
mov
adc
ret
js
xchg
loop
jno
test
mov
add
sub
int
in
mov
test
sbb
aad
int3
adc
cltd
and
xchg
add
xchg
sbb
inc
inc
push
xor
data16
push
cld
sbb
stc
cltd
xchg
arpl
adc
mov
push
cld
pusha
out
ds
and
test
sbb
rcrb
mov
ret
out
rcl
les
stos
sub
pop
or
add
or
stos
into
or
pop
filds
adc
add
jno
les
iret
out
push
and
push
mov
lods
dec
dec
sub
movswl
push
adc
inc
pushf
scas
xchg
rcrb
iret
mov
stc
scas
mov
xor
nop
or
sub
mov
addr16
inc
mov
xor
pop
dec
sahf
sub
dec
arpl
add
cmpsl
add
pop
mov
cld
mov
pop
sbb
sarl
xor
dec
jae
mov
push
outsl
shll
mov
lds
mov
aam
pop
cli
adc
shl
lods
aaa
mov
jl
xchg
jb
inc
xchg
dec
jns
std
jp
sbb
and
shll
fstpt
iret
rolb
cwtl
pop
outsl
out
sub
mov
lret
roll
mov
ret
adc
outsl
pop
sbb
dec
mov
mov
ror
mov
dec
cmp
mov
sbb
sub
xor
adc
or
ja
sarb
pop
cli
jl
std
sbb
sub
xchg
imul
jmp
cld
add
and
cmp
mov
adc
fldcw
inc
bound
mov
pop
jg
cmp
leave
xor
xor
sahf
popf
xchg
in
mov
mov
clc
pop
jbe
mov
scas
mov
incl
cmp
icebp
scas
mov
leave
jl
dec
ret
stc
movsl
dec
push
inc
sbb
negl
xchg
fmul
and
pop
cmpsb
pusha
lods
std
fldl
cltd
gs
sub
mov
dec
push
fdivrl
repz
or
enter
std
sarb
sub
imul
xchg
xchg
add
add
ss
insb
jne
push
sbb
adc
xor
test
add
push
loop
roll
popa
or
inc
loope
cmpsl
fdivrs
xchg
push
dec
xchg
int
shll
adc
insl
insl
mov
jg
xchg
ljmp
jbe
and
dec
addl
push
jp
movsl
psubusw
xchg
inc
popf
mov
cmp
popa
cmpsb
or
xchg
pop
std
sbb
flds
test
xorb
mul
or
pusha
test
mov
test
je
and
lods
insl
idivl
and
add
sahf
or
inc
sub
cmp
and
xchg
divb
xchg
lea
arpl
jecxz
or
out
movsb
pop
adc
cs
js
and
fdivp
lret
dec
xor
adcb
jb
sbb
adc
inc
rol
or
idivl
orb
popf
fwait
mov
movsl
call
jne
pop
mov
sahf
lret
ds
xchg
inc
loopne
jno
xchg
test
stos
cltd
rcll
jle
pop
or
sub
movsb
cmp
mov
pop
push
inc
dec
nop
add
mov
and
es
std
sti
dec
aaa
inc
icebp
jnp
ror
xchg
push
mov
nop
aaa
fdivl
adc
insl
push
subb
inc
mov
push
pop
loopne
sarb
shlb
out
jnp
insb
or
push
repnz
out
xchg
cmp
dec
xor
daa
jb
inc
imull
jbe
ss
lds
fwait
xor
xchg
push
mov
fdivl
lods
je
call
cwtl
sub
test
pop
push
cmpsb
fisttps
inc
push
cld
mov
sbb
jno
jae
subl
cmp
or
repnz
movsb
xchg
repz
out
cmp
sbb
das
lcall
movsb
ds
jle
out
rolb
test
pop
jae
clc
je
dec
icebp
cltd
lret
push
xor
clc
mov
lds
sti
mov
xor
mov
cmpsl
adc
push
gs
push
dec
mov
sti
sbb
adc
cmp
cmpl
imul
push
jge
pop
icebp
std
mov
or
pop
lahf
aam
or
xchg
fiaddl
or
xor
mov
mov
sub
xchg
dec
ret
dec
mov
inc
sbb
mov
jp
jmp
adc
fidivrs
cmc
and
xchg
stc
dec
pop
adc
inc
inc
popf
call
repz
shll
stos
sbb
push
mov
sti
or
addr16
pop
inc
repnz
pop
addl
out
incl
pop
test
mov
xor
negl
insb
xchg
ret
mov
popa
imul
mov
daa
or
das
pandn
add
pop
stos
pop
cmp
sbb
add
es
mov
clc
inc
iret
sub
xchg
test
jle
adc
mov
and
mov
adc
xchg
scas
inc
scas
dec
xchg
push
addr16
scas
dec
orl
test
xchg
mov
dec
mov
jb
adc
jb
cmpsb
out
and
shlb
sarl
adc
inc
nop
pop
scas
addr16
out
lret
mov
jns
fistl
mov
mov
push
aas
out
repz
sub
fnstsw
mov
orb
lods
mov
ret
clc
and
lret
or
cld
repnz
mov
or
decl
jno
inc
ret
mul
fisubrs
adc
and
test
sbb
add
add
cwtl
jae
mov
mov
push
pushf
pop
fmuls
push
iret
mov
jae
push
push
repnz
stos
mov
loope
in
sbb
es
jne
imul
out
insl
call
sub
test
xchg
sti
mov
and
popf
in
mov
xchg
xor
insl
cmc
xchg
dec
adc
loop
shr
or
xchg
in
or
adc
push
fisttpl
push
sub
and
aaa
icebp
sbb
pop
movsl
push
gs
sub
xchg
push
add
imul
ss
sbb
pop
push
stc
shll
aad
pop
je
out
dec
enter
cmp
push
mov
gs
mov
mov
push
cld
popa
fsubl
sbb
out
out
daa
pushf
shrl
jb
mov
scas
jae
sub
cmp
lcall
mov
cwtl
shrb
and
cmpsl
push
aas
enter
in
adc
jg
dec
enter
and
rcll
inc
xchg
or
pop
mov
addr16
lock
pop
or
test
push
sarl
add
inc
cmpsl
xchg
jmp
or
cmpsl
hlt
iret
stos
outsl
icebp
cmp
push
add
push
js
aam
cmp
xor
dec
dec
movsl
adc
scas
add
es
cmp
dec
push
inc
lret
sbb
ja
dec
pop
xchg
pop
adc
sahf
xor
test
jne
and
dec
aad
loope
test
test
idivb
insl
outsl
mov
jp
mov
cmp
xchg
imul
inc
xor
jb
and
xorl
add
mov
rcrl
jbe
push
cmp
daa
cmpsb
jae
jmp
mov
inc
inc
mov
andl
das
sbb
push
ret
movsl
inc
jb
imul
test
cmp
sbb
mov
aam
ss
jns
and
loope
mov
out
adc
dec
xor
mov
jl
xor
jmp
and
dec
aam
pop
mov
sub
xchg
xchg
out
jne
jae
xor
dec
test
mov
hlt
add
xchg
mov
insl
jl
cld
loopne
add
add
jne
lods
cltd
int3
mov
push
test
cmpsl
mov
and
lahf
mov
jno
out
add
les
das
addr16
loope
push
in
scas
xor
out
fsts
mov
test
stc
int
outsb
or
xchg
adc
lret
dec
jg
dec
fucomp
roll
cld
sub
jmp
dec
out
cmpsb
rcrl
or
loop
adc
ja
cs
das
xchg
xchg
cmc
leave
int
mov
out
or
adc
les
xor
scas
mov
test
in
pop
adc
jno
jp
out
aam
sub
pop
jecxz
ss
sub
mov
lea
sub
loopne
and
inc
cmp
adc
lahf
inc
test
xchg
punpckldq
nop
les
sub
or
xlat
inc
daa
cmp
aam
mov
data16
and
sbb
stos
loope
pop
outsb
pop
or
movsl
insb
push
repz
or
mov
jb
pop
push
inc
je
out
push
xchg
imul
pop
rcll
pusha
sti
into
andl
mov
dec
xchg
mov
dec
mov
inc
test
dec
cmp
hlt
mov
les
filds
push
or
in
cwtl
cmp
iret
iret
lret
sahf
daa
ffreep
sub
inc
xchg
insb
sub
std
push
outsl
std
ss
pop
cmp
jmp
outsl
cmpsb
aad
popf
adc
mov
sbb
jge
push
gs
scas
and
cmp
mov
jne
fmuls
jnp
xchg
cmp
popa
cltd
pavgw
xchg
lock
loop
jnp
pop
cmp
cli
mov
mov
cmp
pop
idivl
adc
vpunpcklwd
in
out
js
mov
ret
pop
in
test
push
xchg
cmpsb
pop
fidivrl
leave
mov
loope
xchg
lock
testb
jmp
or
jnp
adc
jo
mov
sbb
shrb
jno
popf
dec
into
bound
adc
inc
les
inc
mov
inc
jae
and
outsb
mov
fisubrl
ss
out
push
popa
mov
inc
test
and
outsb
push
adc
dec
out
ds
clc
sbb
mov
cmovnp
cmpsl
stc
sbb
repnz
pop
test
sub
xor
jnp
dec
mov
or
test
in
bnd
repnz
push
sbb
lods
jl
sub
sub
data16
imul
pusha
aas
pop
push
or
mov
scas
inc
add
xchg
lds
xchg
dec
gs
add
xlat
leave
dec
fs
push
mov
or
cmpl
out
mov
cli
add
mov
insl
out
ds
mov
lea
xor
add
xchg
xchg
repz
pop
mov
dec
fdivrs
inc
fs
movsl
inc
jle
sub
xchg
push
and
in
pop
iret
jo
clc
cmp
or
sub
dec
jo
xchg
pusha
pop
ljmp
or
iret
jg
sti
or
test
xchg
xor
and
cli
call
arpl
movsb
ret
or
pop
in
jne
bound
inc
and
jno
in
pop
es
or
add
daa
sbb
cmp
insl
loopne
xchg
aaa
xchg
mov
insb
adc
push
xchg
pushf
sub
cmp
setl
mov
mov
inc
or
cmc
fiadds
inc
pop
adc
hlt
adc
mov
jb
repnz
dec
sub
lock
int3
jmp
push
in
jbe
push
add
fdivrs
and
jl
mov
shll
pop
inc
push
bound
mov
add
popf
cld
iret
sti
dec
sbb
in
sbb
int3
paddb
dec
shl
dec
mov
pop
in
insb
cmp
push
shrb
lret
dec
cmp
insb
test
ret
data16
shr
mov
xor
cmp
cs
cmc
xchg
dec
push
sarl
hlt
fwait
cmp
addr16
pop
sbb
xor
lcall
rclb
pusha
jmp
and
pop
lods
enter
jns
fs
fwait
jecxz
cmc
cmpsb
or
movsb
lds
add
adc
call
adc
mov
adc
adc
out
je
movsb
iret
inc
ds
scas
mov
sahf
pop
mov
inc
mov
push
xchg
cs
std
or
fs
or
or
sbb
xlat
ja
imul
cmpsl
test
shlb
xor
xor
xor
stos
lahf
pop
stos
mov
mov
adc
loope
ja
daa
sbb
cmpsb
and
test
push
adc
cld
ss
jge
stc
arpl
mov
out
scas
cli
add
cmp
mov
mov
sti
das
bound
mov
popf
enter
fcmovnu
enter
mov
dec
stc
outsl
mov
rclb
jno
xor
push
dec
adc
adc
fildll
sbb
xor
call
mov
lds
mov
dec
lock
and
sbb
fnsave
icebp
sub
iret
ret
fnstenv
sub
data16
in
ret
push
sbb
mov
mov
movsl
xor
xchg
dec
lcall
cltd
fildl
fiadds
stos
jmp
mov
in
mov
adc
cld
jb
cltd
xor
out
cmp
jo
repz
mov
sar
sub
and
fidivl
mov
push
push
cmp
jecxz
mov
sti
lret
fldl2e
lret
fwait
sti
mov
sub
push
test
addr16
arpl
jp
cmp
sub
aaa
out
add
mov
sbb
rcl
pop
add
jo
into
jecxz
inc
pop
clc
sbb
xchg
in
xor
shrl
sub
rclb
adc
cld
dec
push
loop
and
cltd
arpl
cmc
jbe
dec
pop
test
rorb
xor
ficompl
xor
in
jae
xchg
push
into
ret
leave
dec
sbb
in
inc
mov
jmp
jp
mov
ja
imul
push
jo
inc
popa
jnp
out
sub
inc
jb
jecxz
pusha
or
or
cs
leave
sbb
mov
fldcw
add
out
aas
and
inc
clc
pop
test
xor
xchg
pushf
xchg
push
push
loopne
rclb
lret
lds
add
xor
mov
or
mov
dec
aaa
xchg
xor
push
test
pop
jne
aam
cli
rorb
shl
dec
xchg
add
xchg
xchg
scas
test
xor
xchg
add
cmpsl
or
shr
xchg
cmp
inc
add
jo
call
lahf
xor
mov
in
sub
cli
push
scas
test
cmpsb
cmc
fcomp
shll
clc
cmp
add
pop
jmp
dec
mov
cmc
jo
outsl
stos
in
jmp
fwait
dec
and
je
and
jno
mov
je
test
nop
in
and
popf
aaa
mov
lds
or
inc
js
lods
xchg
and
in
inc
mov
arpl
inc
jl
les
popa
jg
aas
fs
clc
and
jge
clc
push
and
inc
xlat
insl
cmp
das
jno
scas
arpl
pop
jne
ss
push
inc
in
das
popa
pop
les
aaa
mov
sbb
out
adc
std
inc
pop
lods
xor
push
in
aas
sbbb
inc
inc
test
fs
aad
mov
sbb
in
sbb
mov
adc
fadds
cmpsb
test
insb
fwait
pop
lahf
cmp
sbb
inc
sub
push
dec
les
mov
mov
add
divl
cwtl
and
pushl
inc
adc
pop
inc
sub
es
mov
jne
shlb
mov
adc
out
enter
add
fisttpll
fsubrp
sahf
sub
mov
push
xchg
sbb
xor
cmc
and
ds
js
rorb
popf
out
inc
or
addr16
and
or
inc
inc
ss
fistpl
mov
xchg
das
mov
cmp
xchg
cmc
mov
inc
dec
aaa
ds
push
repz
jnp
or
adc
mov
notb
pop
popl
push
dec
pop
adcl
cltd
jge
std
movb
xchg
subl
jg
pushf
in
jae
andl
imul
repnz
push
add
sub
les
fbstp
out
ret
scas
cmpsb
lods
gs
and
mov
jno
into
cmp
fmuls
int3
mov
dec
loopne
mov
pop
xchg
sarl
pop
faddp
sti
leave
add
mov
ja
daa
popa
push
jg
cli
pop
out
bound
mov
sbb
jp
scas
out
adc
xlat
push
loopne
insl
fildl
out
test
leave
nop
sub
sub
sbb
cmp
inc
sahf
lcall
or
xor
loopne
fisubrs
mov
cmp
xchg
mov
outsl
lret
clc
ljmp
jmp
movsb
adc
pop
jne,pn
lret
or
dec
mov
fmul
sbb
enter
ds
mov
loopne
push
cwtl
cmp
pop
cmpb
fisubrl
dec
inc
stos
loopne
out
xor
clc
jnp
add
pop
add
fcmovbe
std
inc
sbb
das
lock
dec
pushf
lds
mov
mov
sub
pop
not
inc
enter
inc
mov
sbb
jbe
mov
mov
cld
out
inc
xchg
or
or
or
push
cmp
cwtl
ss
js
lods
xor
mov
sub
or
sbb
sub
fimull
adc
in
rol
pop
xchg
jle
jge
scas
lcall
fsubrl
and
icebp
xchg
rclb
fstpt
xor
push
popa
movsl
mov
mov
xchg
inc
or
xor
pop
or
ds
scas
in
sbb
or
hlt
setne
repnz
pop
enter
or
test
inc
push
dec
lods
pop
add
negb
negb
add
add
jle
rclb
jb
in
mov
cs
xor
jmp
xor
js
int3
aaa
xchg
lahf
pusha
pusha
aas
xchg
mov
xchg
and
sub
dec
mov
mov
pop
mov
cltd
aaa
push
out
pop
mov
jmp
sbb
addl
fs
jp
shll
cmp
nop
dec
xchg
and
push
out
xor
dec
and
adc
les
add
scas
andb
int
cmp
arpl
mov
daa
push
mov
jp
sub
lds
ds
sub
mov
lea
xchg
mov
sub
or
sahf
mov
or
aam
ret
cs
mov
push
inc
or
pop
cltd
popa
adc
rorl
cmpsb
sbb
idiv
jmp
and
mov
sbb
mov
or
cmpsb
sub
mov
ret
dec
dec
jmp
xchg
inc
and
cwtl
xor
or
imul
stc
xchg
pop
lods
mov
xchg
mov
int
loope
pop
pop
mov
test
xchg
sbb
jb
jecxz
adc
or
enter
mov
test
out
push
cli
inc
rcl
lcall
mov
xchg
mov
pop
pop
popa
aaa
scas
cmp
dec
popa
mov
sbb
imul
loop
shr
add
inc
repz
adc
fldt
xlat
lret
pop
mov
xchg
pop
pusha
add
sub
je
push
aam
mov
xchg
std
fs
pop
test
xorb
and
jno
fldl
cli
xchg
inc
adc
jp
dec
jle
in
and
fistpl
inc
add
mov
in
jmp
outsl
pop
xor
sti
push
pop
nop
cltd
dec
sub
scas
lods
out
test
inc
push
lods
fldl
adc
insl
imul
jl
cmp
mov
and
jnp
and
ds
add
icebp
mov
fildll
aaa
lret
jbe
cltd
xchg
out
adc
aad
lret
int
aaa
or
jecxz
mov
xor
lret
fisubs
shrl
movsb
dec
stos
jns
cmp
loop
cmc
fmull
xchg
mov
pop
add
jns
add
es
lret
lret
and
fs
push
mov
pop
and
dec
push
outsb
lret
adcb
scas
push
ja
adc
push
sbb
push
popf
xor
in
pop
sub
sbb
test
cld
and
lahf
ja
fstp
pop
orb
das
sbb
popf
sub
jne
jle
cmp
jbe
sub
aam
mov
jmp
hlt
psubusb
inc
je
add
in
js
loop
movb
adc
lcall
icebp
jb
loop
ljmp
ds
test
popf
ret
sbb
push
imul
dec
test
push
xchg
aas
jecxz
pusha
out
addr16
mov
rcrb
test
aas
insb
cmpsb
xchg
jge
sub
mov
popf
lods
test
jb
jbe
fildl
adc
cmp
ds
das
dec
inc
or
xchg
sub
push
or
test
stos
pavgb
inc
cmp
push
out
loope
push
iret
loope,pt
sub
dec
sub
sbbb
pop
sti
sti
mov
pop
mov
jl
pop
dec
lods
scas
je
call
mov
mov
xchg
mov
push
sub
rcrb
jge
sti
and
hlt
pop
push
mov
jp
push
enter
ficompl
movsb
cmp
xchg
fwait
xchg
loopne
outsl
dec
aas
and
testl
sbb
shr
mov
out
cmp
ret
daa
sub
sub
push
fwait
stc
mov
xchg
jecxz
xor
jno
test
cmp
pop
xchg
dec
pop
stc
rorb
adc
sub
mov
jno
int
sar
jne
mov
pop
lea
jl
out
ja
dec
mov
add
xchg
arpl
sub
cwtl
loop
and
sub
lea
xor
dec
and
jl
shl
aaa
into
mov
xchg
cmp
cmp
sti
fcmovnbe
jecxz
shlb
and
out
sub
dec
xor
or
xor
or
in
jge
xchg
add
out
dec
dec
icebp
cs
pop
mov
test
push
and
sbb
jle
pop
add
jo
repnz
ret
test
jl
inc
add
das
test
int3
sar
sahf
mov
sbb
fdivs
cmp
sahf
push
cmpsb
fidivl
dec
out
inc
pop
in
inc
jmp
or
aaa
negl
dec
push
es
sbb
aas
xor
jl
test
push
dec
mov
xchg
test
xorl
lea
ret
andl
xor
lcall
and
sbb
loope
fisubl
imul
jne
js
cli
inc
add
xorb
jbe
dec
add
xor
pop
call
inc
gs
pusha
add
lret
pop
pop
and
add
sbb
fwait
mov
xchg
vmovdqu
mov
das
enter
ja
stc
jle
movsl
cld
mov
int
mov
stos
mov
inc
cmc
in
ljmp
adc
loopne
outsb
push
mov
popf
cmpsl
dec
cmc
xchg
imul
xchg
dec
test
and
cmp
movsb
inc
scas
and
push
ja
fisubrs
inc
and
and
xor
sub
lea
jne
fnstsw
add
jno
inc
or
aaa
int3
inc
ret
shrl
pop
aad
orl
clc
cmpsb
add
xchg
je
ja
stc
clc
movnti
arpl
imul
mov
mov
push
or
pcmpgtd
cmp
out
add
sub
jmp
mov
fs
inc
jno
imul
nop
sub
scas
sub
lahf
mov
clc
je
aad
testl
call
scas
mov
cmp
popa
mov
cmpsb
add
push
xchg
test
pop
mov
sub
push
xchg
xor
scas
mov
shl
push
mov
js
push
xchg
xor
jl
pop
adc
mov
or
jb
adc
pusha
sbb
arpl
xchg
cmp
mov
mov
push
loop
add
enter
jle
sub
in
test
cmp
fisubrs
pop
and
test
cld
pcmpgtd
sbb
fnstenv
push
adcb
sbb
dec
movsb
add
adc
insl
add
mov
and
dec
dec
int
dec
fadd
pop
mov
int3
cmp
cmpb
out
cli
add
repz
sbb
je
push
fldcw
aam
xor
xchg
call
jle
fcom
inc
movl
test
mov
dec
roll
ficompl
pop
push
std
inc
aad
lock
adc
xchg
movsb
stos
mov
add
outsb
fldenv
sub
sahf
pop
int3
pop
jl
add
shlb
xchg
rcr
ret
adc
add
jns
xchg
les
clc
cmp
data16
into
addr16
loop
cmpsl
mov
cmc
int
call
gs
add
addb
cwtl
dec
or
ret
mov
sbb
cli
mov
js
dec
stos
rclb
nop
and
aaa
fdivl
scas
xchg
addr16
or
das
jbe
and
fwait
dec
sub
jle
push
lret
or
sub
and
mov
inc
jge
ret
or
movsl
pop
add
nop
addr16
sbb
mov
sub
ja
jl
ss
int
push
and
mov
mov
add
push
cmpsb
inc
mov
pop
add
push
in
cmp
mov
popl
movsb
addr16
es
jne
call
sbb
jnp
jg
mov
ss
hlt
roll
mov
cmp
sub
clc
xchg
dec
cmp
gs
sub
pushf
inc
js
shll
sti
nop
xor
int
rcrl
xchg
jb
add
out
test
and
xchg
cmc
fs
jmp
sbb
fwait
test
pop
fidivs
sbb
jmp
add
xor
in
sahf
in
cmp
xor
testl
xchg
fcompl
mov
xchg
stc
xchg
jge
int3
push
pop
ficoml
cmp
pop
shll
adc
pop
mov
jbe
scas
notb
sub
jb
into
push
mov
pop
mov
and
pop
cmc
arpl
cmp
imul
insb
lret
xor
aad
lcall
sbbl
xor
xor
lods
in
ss
mov
mov
cld
repz
fadds
cmpsl
cmp
adc
sahf
shr
lea
insb
mov
push
cmp
popf
int3
lods
leave
imul
inc
add
mov
pop
xchg
mov
xchg
daa
mov
mov
sbb
inc
sub
mov
push
push
in
imul
icebp
push
out
ror
das
insl
xor
imul
xchg
addl
lcall
or
cltd
pop
popf
add
stos
xchg
adc
sub
decl
loop
or
outsl
icebp
pushf
nop
fiaddl
ss
fsubrl
dec
adc
xchg
ss
xchg
pop
in
mov
xlat
daa
hlt
clc
out
pop
jb
or
leave
jle
push
insb
imul
popl
ss
out
xchg
pop
cmpsb
or
into
movsl
in
out
lahf
xsaveopt
addr16
les
xor
push
in
loope
daa
insb
scas
roll
jno
int
jb
mov
popa
jecxz,pt
xchg
pop
cli
mov
bound
popf
jecxz
rcll
in
bound
rcll
lcall
xchg
mov
sarb
lock
and
push
lret
cmpsl
sub
and
adc
fst
push
jb
adc
jmp
pop
pushf
adc
mov
aaa
into
mov
hlt
sbbl
mov
jno
lcall
lea
stc
rcr
aas
add
or
jl
shll
inc
xlat
mov
loop
stc
fs
lods
inc
adc
cltd
dec
push
scas
push
clc
cmp
dec
cmpb
ret
jp
cmp
push
or
out
jno
and
fdivl
insl
jge
inc
add
dec
nop
mov
mov
pop
mov
sub
fmull
sbb
jo
or
div
cli
out
stos
push
xchg
fwait
leave
aas
sbb
jbe
repnz
mov
into
mov
xor
insb
and
repz
push
xchg
or
in
les
scas
jle
dec
mov
pop
mov
adc
xchg
push
loope
jmp
test
dec
fsubrp
push
sbb
cli
xor
sar
sub
pop
aaa
sub
out
popf
stos
xor
push
filds
dec
sub
cmp
gs
mov
mov
sbb
in
add
stc
mov
mov
jmp
sbb
pop
sub
add
imul
addr16
sub
dec
pushf
pop
out
xor
gs
xchg
dec
mov
jg
lret
dec
or
loop,pt
sub
sti
int
dec
ret
mov
pop
pop
push
ds
sbb
pop
cmpb
xor
cmp
adc
arpl
xchg
data16
out
cmp
out
orl
xor
sti
hlt
call
mov
mov
sti
je
pushf
aad
dec
out
rcrl
ficoml
imul
sub
movsl
pop
lods
dec
mov
jne
jne
jo
jne
popf
sub
mov
addb
mov
and
fimuls
ret
xor
xor
pop
fldenv
lahf
pop
inc
in
cltd
add
push
and
lea
xchg
out
test
imul
sub
push
icebp
xlat
fisttpll
cli
std
jnp
in
aas
pop
and
negb
rorb
out
ret
jge
out
cmp
adc
int
icebp
lds
pop
pop
movsl
inc
out
adc
fcompl
push
jnp
xor
push
push
mov
fnstenv
mov
movsl
popf
pushf
dec
xor
jge
cmpl
or
repz
sahf
xchg
frstor
add
fdivrs
cltd
pop
data16
and
jle
lret
jecxz
or
jbe
push
mov
or
ds
xor
clc
sub
push
out
loop
or
lods
dec
push
xlat
xor
xchg
mov
stos
mov
in
xchg
ja
mov
sahf
sarb
outsl
mov
pop
clc
inc
inc
cmp
sbb
add
xlat
add
jle
cltd
add
dec
mov
mov
cwtl
arpl
sub
push
push
jle
xor
lret
pop
test
xchg
mov
dec
test
aam
mov
mov
cmp
xor
add
pop
call
ret
cmp
dec
aaa
adc
jnp
sbb
and
mov
pusha
jno
mov
sub
push
push
xor
mov
or
inc
rcrb
add
mov
sbb
mov
jl
pop
push
cli
sbb
dec
es
in
pop
testl
and
sub
sub
sbb
loope
test
add
icebp
in
sub
stc
leave
insb
mov
push
adc
jmp
jae
rorl
pop
push
int
jge
inc
mov
pop
movsb
sbb
aam
fnstsw
jno
mov
popa
jge
cmp
clc
push
xorb
insl
adc
fistpl
xchg
sub
test
fsubp
loop
movsb
pusha
add
shrb
cmp
sti
fistl
into
pop
or
cmpsl
shll
lahf
push
adc
pop
add
stc
cwtl
dec
jb
jge
mov
mov
xchg
jnp
add
fsubr
sbb
jns
cmc
adc
mov
lds
mov
pop
movl
je
bound
and
mov
mov
insb
pop
sbb
mov
mov
aaa
sub
jne
mov
mov
decb
push
jmp
lcall
adc
dec
mov
stos
mov
scas
cmove
sbb
mov
out
jmp
pop
loopne
or
pop
jae
js
cmc
xchg
aad
adc
sub
test
xchg
int
scas
addr16
stos
pop
pop
pop
dec
jbe
add
dec
mov
enter
mov
or
xchg
outsl
jecxz
addr16
scas
mov
popa
ljmp
shlb
xchg
jbe
pop
test
jbe
shld
jmp
xchg
outsb
lcall
jmp
hlt
cmpsl
inc
negb
pop
and
pop
lods
push
js
sbb
js
mov
push
jne
cli
jae
icebp
int3
lcall
dec
in
rcrb
lock
add
pop
jb
and
mov
dec
into
pop
xor
inc
mov
shlb
pop
ss
cmp
push
mov
and
dec
movsb
popf
adc
ljmp
xchg
popf
mov
lods
jle
cmp
xlat
loopne
add
mov
xor
sub
add
int
pusha
adc
iret
pop
addr16
int3
outsb
push
das
notl
jo
pop
aad
dec
sub
lahf
cmp
aaa
out
push
cmp
lcall
xchg
leave
jbe
rclb
ss
mov
loope
fldl
cmp
inc
out
dec
push
add
aam
mov
cmpsb
pop
and
pop
jnp
mov
mov
dec
loop
out
and
gs
push
std
jg
add
adc
les
insl
mov
add
xor
das
cmp
adc
jmp
cmc
pop
stos
mov
es
adc
push
ljmp
add
imul
sahf
jne
mov
jmp
jecxz
sti
out
mov
push
scas
pushl
xor
mov
lcall
mov
lret
mov
add
imul
and
push
adc
xor
mov
mov
add
cmp
inc
aas
xor
shll
mov
xchg
fcompl
stos
jge
mov
xchg
mov
cmp
addr16
sub
fisubs
xchg
orl
jbe
add
fnstcw
and
xorl
pop
loopne
xchg
jp
addr16
pop
fdivrl
inc
data16
inc
imul
and
adc
inc
or
test
mov
lods
and
xor
jnp
clc
test
fimull
or
cwtl
clc
insb
jle
jecxz
cmpsl
jae
fisubrs
loope
push
gs
xlat
aam
test
sub
icebp
fsubrl
lock
add
adc
xchg
or
push
arpl
jle
ja
popa
jmp
pop
mov
cmpsl
rolb
movsl
mov
jns
inc
sub
in
mov
bound
xchg
add
lret
xor
pcmpeqb
lock
sbb
lods
sub
lret
into
popf
divb
repnz
in
sbb
mov
in
or
in
push
out
mov
fwait
aam
xchg
adc
pusha
cmpb
scas
mov
outsl
inc
mov
scas
add
cmp
outsl
pop
push
cli
pop
add
loop
jo
aaa
sub
pop
or
xor
in
push
std
out
shr
dec
push
popa
loope
and
scas
lods
insb
xchg
in
sub
scas
jnp
shll
and
iret
or
in
rolb
pop
dec
popa
jnp
cmc
ret
je
lcall
movl
shll
dec
lret
mov
or
or
pop
dec
popf
xor
and
jns
dec
cmp
dec
adc
and
cs
mov
jl
xchg
ljmp
mov
inc
sahf
dec
xchg
jge
jl
jno
xor
cmp
das
dec
push
adc
mov
jl
or
test
jno
movsb
dec
mov
add
push
stos
sbb
or
pop
push
and
inc
sbb
sbb
lods
lret
repnz
fidivl
mov
jmp
inc
lahf
cmp
out
test
mov
xchg
inc
lahf
add
add
xor
mov
frstor
inc
and
adc
cwtl
jnp
dec
xchg
ret
adc
lods
outsb
adc
mov
add
imul
repz
inc
push
inc
movsl
mov
xor
mov
jmp
lock
stos
fldcw
add
pop
rol
loope
pop
popf
jl
mov
inc
insb
fsubl
mov
mov
stos
out
xchg
aaa
lds
fisubrs
das
andl
aad
push
jmp
add
cmp
incb
cwtl
sbb
adc
pop
fs
andb
lret
pop
xchg
jmp
pop
or
jnp
sub
pop
adc
test
sbb
nop
jg
jnp
cwtl
cwtl
scas
iret
pusha
test
dec
out
mov
outsb
mov
pop
xor
hlt
or
xchg
sbb
daa
jne
lds
dec
or
lock
arpl
outsb
jge
sub
cmp
or
out
xchg
xor
pop
loopne
xor
xchg
stos
push
gs
adc
or
sbb
lahf
fdivr
lret
add
outsl
pop
and
nop
sub
mov
sar
push
adc
clc
imul
cmovb
sbb
inc
or
test
loopne
mov
add
mov
test
fdiv
adc
popa
dec
cmc
sarl
jae
ret
push
adc
sub
ja
pop
stos
mov
out
mov
loop
repz
push
push
pop
mov
cmpsl
push
or
clc
mov
dec
pop
aad
movsb
and
in
popa
cmp
ror
nop
icebp
iret
cltd
popa
mov
rcr
mov
mov
mov
shl
push
sub
jmp
pop
idivl
daa
mov
push
or
orl
in
lahf
fs
das
imul
fs
decl
mov
pop
and
in
jns
push
pop
jne
pop
xor
jl
fdivs
cltd
cs
cmp
push
inc
mov
dec
int
xchg
mov
push
fisubrs
ds
cltd
pushf
pop
and
repnz
ljmp
je
aad
mov
je
or
inc
fcompl
aas
movsb
push
push
repz
dec
jo
inc
sub
lods
repz
bnd
xchg
pushf
sti
xchg
ss
cmpsl
shlb
das
pop
sldt
fistl
mov
jp
out
xchg
sahf
pop
pop
jae
movsb
stos
sahf
adc
dec
fldcw
cltd
pop
loop
sbb
mov
jmp
dec
sub
sub
jl
mov
enter
jl
xchg
lods
cs
inc
push
fwait
push
sahf
nop
pop
das
ret
push
dec
or
sub
in
xchg
popa
outsb
or
xor
fucomp
icebp
xor
pop
mov
das
call
icebp
enter
dec
push
cs
dec
sbbl
mov
repz
jg
call
fcmovb
cs
inc
das
and
mov
dec
adc
aas
cltd
std
sbb
sub
out
cmpsl
pop
and
push
mov
push
mov
jg
vxorps
inc
cli
ficoml
cmp
jp
inc
xchg
aam
gs
inc
jbe
dec
and
cld
stos
lea
in
xor
fwait
lds
cs
jge
pop
add
cmc
addr16
fisttpl
or
or
or
repnz
sub
or
sbb
dec
mov
dec
mov
test
xchg
insl
add
int3
push
mov
inc
test
dec
pushf
popa
jmp
fiadds
jl
fbld
sbb
es
push
ret
scas
icebp
push
sbb
xchg
lcall
outsb
sbb
jnp
fwait
dec
out
stc
js
inc
jge
sbb
daa
add
sub
jg
jnp
sub
imul
jnp
pop
int
push
sbb
inc
add
inc
in
leave
jb
pop
jmp
jecxz
scas
adc
sub
notl
out
pushf
insl
fsubrl
cmp
and
inc
or
loopne
rcll
fimull
sbb
inc
mull
push
outsl
dec
int3
mov
insb
fdivr
cmc
mov
sub
dec
arpl
loope
cmpsb
call
jle
jg
fpatan
jg
mov
ds
test
outsb
push
test
aad
push
iret
test
mov
sar
mov
xchg
inc
lret
cld
xorl
jecxz
out
lea
xor
push
fildl
jl
jecxz
gs
call
dec
jp
in
rcll
es
mov
lahf
xchg
fwait
inc
loopne
stos
pop
aaa
rcl
jb
bound
cld
sub
sbb
adc
fidivs
and
push
mov
mov
cmp
pop
mov
sub
cmp
mov
mov
in
pop
sarl
sub
pop
in
stc
jmp
testl
mov
inc
xor
fidivs
jns
cmp
jns
mov
inc
stos
shrl
jg
in
xchg
fcompl
mov
cmpsl
leave
call
jo
mov
outsb
aam
jmp
jne
out
scas
pop
test
inc
inc
jg,pn
adc
adc
push
adc
rorl
jmp
push
or
sbb
jno
dec
push
das
push
mov
jno
mov
pop
ja
push
xor
cltd
fnstenv
jns
add
fwait
and
dec
sub
scas
negb
lods
add
xorl
imul
jno
hlt
xchg
or
pop
lods
in
not
insl
inc
adc
ja
jle
sbb
mov
in
xchg
cld
cld
fs
sub
imul
and
or
adc
jns
sub
fmull
js
les
dec
dec
stos
xchg
outsl
lret
jb
pop
jmp
cld
or
pop
sbb
andb
out
call
es
or
test
dec
mov
ljmp
loop
lock
sub
lds
sub
stos
aam
add
in
cwtl
pushf
gs
imul
xchg
sub
sbb
or
outsl
in
iret
imul
mov
mov
xchg
inc
adc
dec
cmp
and
neg
push
popf
bound
mov
andb
dec
xchg
icebp
mov
push
jno
lods
or
pop
dec
sub
loope
inc
xchg
mov
dec
dec
jns
shr
cmp
imul
push
in
push
ret
xor
push
jl
sbb
popf
insb
movsl
xchg
mov
movsl
icebp
sbb
jecxz
out
sbb
sbb
mov
mov
mov
mov
out
adc
or
mov
loop
mov
inc
cmp
mov
jne
fstpl
push
inc
fstpt
pop
enter
pop
into
scas
lds
repnz
loop
popa
xorb
pop
adc
dec
arpl
pop
das
dec
xor
fmuls
mov
push
fwait
sub
pop
xchg
sti
pusha
push
scas
mov
subb
xchg
ds
jp
adc
je
lahf
xorl
add
push
cmp
mov
or
sbb
mov
out
sbb
in
sub
mov
ljmp
movb
out
mul
xorl
in
popf
push
mov
mov
int
or
push
mov
add
push
int3
mov
inc
aam
loope
pop
sbb
imul
sahf
fs
mov
mov
out
shl
lahf
repnz
jecxz
lret
xor
nop
out
sub
adc
aas
jmp
and
cltd
hlt
frstor
adc
or
jns
jne
mov
and
add
xchg
or
pop
das
lahf
outsl
in
les
test
loopne
push
mov
jbe
cmp
or
dec
fbstp
add
lahf
notb
mov
sub
inc
sub
nop
outsb
mov
pop
pop
stos
mov
jmp
fimuls
fsub
push
jne
cmp
pop
xchg
leave
push
into
mov
jne
int3
dec
dec
xchg
int3
dec
sbb
test
xlat
nop
pushf
jno
adc
fiadds
in
daa
sub
int3
jne
in
gs
xchg
or
sarb
pop
push
sbb
xor
sahf
push
sub
fistl
dec
push
jmp
outsl
mov
int
test
cmc
outsb
pushf
sub
sti
dec
es
or
cli
mov
cmp
sub
add
mov
lret
daa
jle
cmc
and
imul
inc
inc
clc
enter
daa
pop
sbb
and
ficoms
iret
pop
jp
bsf
movsb
iret
std
cmp
pop
push
mov
dec
cmp
stc
movsb
cmp
add
ret
aam
lds
jecxz
imul
lock
enter
xor
out
push
mov
adc
pop
mov
lock
push
pop
and
mov
test
pop
mov
mov
addb
pop
in
roll
cwtl
clc
and
jne
nop
movsb
adc
clc
push
test
sbb
dec
sti
xchg
xchg
mov
jg
pop
and
scas
lods
jo
nop
lret
mov
and
ficoms
xchg
sub
mov
jg
dec
adc
adc
popa
pushf
dec
std
sub
cltd
scas
mov
fstps
lds
push
in
cmp
xchg
sbb
repnz
jge
or
cld
repnz
test
or
decl
ljmp
pop
mov
arpl
out
inc
stos
popw
mov
xchg
in
je
sub
ds
push
sbb
aas
ss
in
inc
add
jle
idivb
in
add
jbe
negb
stc
nop
addl
or
jbe
test
movsl
call
in
stc
push
into
mov
push
dec
outsl
shll
imul
xchg
insl
pushf
jle
mov
jb
cmp
adc
jg
fcoml
ds
inc
mov
and
xchg
pop
mov
mov
xor
out
push
cmp
ljmp
dec
sub
sub
lea
jb
out
adc
inc
mov
or
fstl
outsb
divl
scas
or
mov
jle
gs
fdivrs
mov
add
lret
pop
xchg
movsb
add
mov
mov
test
push
imul
inc
jmp
sbb
adc
add
nop
es
pop
add
push
pop
daa
insl
jp
scas
movsl
pop
pusha
ficoml
clc
inc
inc
xchg
je
pop
stos
xor
mov
jg
and
or
sbb
xor
inc
rcrb
mov
testl
aas
popf
pushf
aam
push
mov
xchg
aaa
xor
adc
in
popf
dec
mov
shrb
add
rcll
repz
lcall
jne
inc
adc
cmpsb
dec
mov
fwait
int3
loope
xchg
jbe
add
or
xchg
dec
stos
hlt
scas
rorl
mov
dec
dec
lods
dec
pop
pop
mov
and
sbb
push
jge
mov
imul
xor
xchg
mov
or
adc
sbb
pop
addr16
pop
lret
dec
bound
mov
popf
dec
sahf
mov
cmp
scas
inc
scas
push
add
push
and
sarb
outsb
andl
imul
and
cmpb
stos
xor
ljmp
jbe
js
cld
xchg
pop
sub
aaa
or
dec
mov
mov
xor
fimuls
insb
or
xchg
aad
cbtw
popl
mov
ja
cltd
arpl
fs
and
daa
loope
dec
aam
sbb
xchg
mov
xor
and
in
rdmsr
jg
cmpsb
jne
xorb
add
out
lret
mov
cmpsl
cmp
and
das
testl
mov
pop
out
jp
push
xor
imul
es
adc
popa
and
ret
scas
std
test
test
int3
dec
sub
fnstenv
mov
repnz
push
and
rcrb
or
in
mov
stc
loopne
out
orb
jb
adc
pop
or
fdivrs
mov
imul
hlt
hlt
adc
jp
push
xchg
push
xor
sahf
ss
pop
jp
jmp
push
mov
jo
and
pop
sti
dec
jecxz
mov
pop
ret
adc
and
add
add
add
adc
jge
lret
cmpsb
add
scas
mov
enter
std
mov
sahf
lea
clc
pushf
movsl
xor
ret
mov
mov
out
subl
xchg
push
adc
adc
xchg
test
rorb
inc
addr16
pop
divb
movsb
aas
out
jbe
test
mov
push
icebp
daa
push
pop
jno
cmp
nop
mov
hlt
xchg
pop
dec
bound
mov
dec
mov
leave
sub
push
es
loop
sub
pop
ret
call
and
mov
popf
jg
inc
sub
movsl
or
loopne
jno
dec
cs
incl
push
loop
ljmp
push
and
dec
imul
add
sub
add
jg
jae
and
gs
sub
or
ja
ljmp
cmp
sbbb
adc
add
in
add
lret
lock
js
addr16
sub
das
aaa
mov
je
and
xchg
aaa
mov
sbbl
into
lahf
clc
mov
sub
pop
sub
mov
add
pop
hlt
addr16
jecxz
push
or
popf
mov
cmp
cmc
mov
push
pusha
mov
xchg
lahf
pushf
push
or
push
fwait
lret
fcompl
jns
mov
ds
add
and
cld
leave
int3
pop
iret
out
mov
cld
fsub
cld
clc
sub
jnp
imul
ror
movsb
lods
pop
pminsw
lds
xchg
push
sarl
cmpsl
jns
push
outsl
fbstp
pusha
fsts
or
sub
das
aaa
iret
jle
xchg
subl
ds
ljmp
xor
stos
jp
sbb
daa
fcmovne
stos
sub
test
mov
mov
xor
push
xor
fisubrs
or
pop
js
inc
mov
jle
push
add
sbb
daa
cli
call
lods
shrb
or
mov
repnz
xchg
sbb
outsb
les
dec
aas
cmc
xchg
in
xorl
aaa
daa
scas
inc
pop
aam
loop
cwtl
and
in
add
imul
mov
clc
cltd
faddp
pop
scas
mov
stos
rolb
push
test
shr
and
mov
and
cmpsl
dec
ljmp
mov
xchg
in
jno
sbb
inc
into
or
lods
mov
cs
cs
icebp
sub
icebp
pop
lds
addr16
push
popa
and
pop
mov
cs
and
add
mov
xor
and
jle
dec
sbb
cmp
rolb
out
testb
cwtl
mov
dec
in
xchg
testl
or
lods
addr16
es
and
dec
mov
fsts
xchg
imul
sbb
sbb
aaa
sbb
push
and
in
push
mov
mov
loope
push
and
mov
xor
cld
loop
push
daa
test
cwtl
dec
jbe
add
pop
xor
cwtl
adc
jns
std
insb
xor
stc
sub
in
xchg
divb
adc
pop
mov
outsb
cmp
mov
imul
out
push
cwtl
fstl
jo
inc
cwtl
jl
test
sbb
and
sbb
sub
sti
jmp
mov
les
push
daa
adc
or
popf
rcr
mov
pop
imul
aaa
outsb
xchg
faddl
cmp
cmp
cld
int
jb
ret
mov
jmp
mov
fnop
jbe
mov
and
bound
dec
loopne
sbb
adc
arpl
and
stc
mov
mov
sub
mov
xchg
sbb
mov
adc
mov
lods
xor
inc
js
xchg
or
jp
mov
inc
lods
cmpb
data16
and
sub
dec
push
pusha
insl
cmpsb
jne
pop
jo
testl
adc
xchg
and
mov
call
xchg
adc
push
cwtl
repnz
clc
push
cmp
jo
addr16
sub
and
mov
nop
iret
cltd
movsl
jae
fsts
or
in
xchg
mov
xchg
lcall
in
loopne
sysret
in
jle
mov
mov
cmpsb
ds
xchg
lock
das
daa
push
imul
mov
mov
out
test
out
xor
mov
jmp
pop
jge
mov
cmp
jnp
or
mov
lea
clc
adc
faddl
fadds
sub
inc
dec
and
xchg
fstp
je
mov
mov
jne
inc
daa
pushf
in
cmp
lret
mov
dec
scas
xor
adc
test
in
xor
enter
out
cmp
movsb
lcall
lret
inc
jns
dec
mov
imul
pop
push
or
iret
scas
lahf
jle
ret
out
dec
mov
dec
jbe
push
jmp
push
adc
arpl
add
dec
xchg
mov
cmp
rolb
fs
sbb
xchg
sahf
adc
imul
bound
out
ljmp
and
rorl
adc
lods
jns
cmp
insb
sub
sbb
inc
xor
sbb
sbb
pop
out
push
scas
push
rcrb
mul
data16
dec
push
cmpsl
daa
push
push
iret
xchg
adc
or
fsts
cmp
out
sbbl
mov
pop
xchg
jl
add
mov
jns
out
dec
cmp
scas
cmovl
flds
xchg
icebp
div
lahf
push
push
sub
adc
mov
sbb
adc
cmp
or
mov
into
ja
imul
cmp
outsb
in
sbb
push
adc
test
es
stos
cmp
jne
lret
sub
fildl
iret
mov
ret
popa
jmp
fsubrl
cmpsl
fdivl
int3
lds
cmp
mov
ss
xor
or
dec
adc
mov
cmp
fdivrs
mov
mov
mov
jp
inc
cmp
xlat
sbb
outsb
jo
stc
in
int
stc
imul
or
sbb
push
repz
shlb
cmc
adc
adc
mov
mov
mov
xor
es
dec
fists
jg
ljmp
out
jns
popa
mov
das
into
aas
test
mov
movswl
pop
pop
cmpsb
jnp
jnp
in
call
fidivrl
pop
add
iret
cmp
mov
inc
addr16
pop
fildl
mov
test
dec
jb
push
mov
rcrl
cwtl
fs
or
rolb
push
mov
xor
divb
bound
loop
shll
or
push
popf
sub
in
into
lret
push
mov
add
addl
jecxz
rorl
test
xor
lahf
mov
pop
cmp
imul
push
add
cmpsl
pop
xchg
inc
out
fldl
xchg
scas
mov
add
or
sub
sbb
cltd
mov
cwtl
or
daa
jb
sbb
mov
fsubs
mov
and
fisubrs
sub
cltd
outsb
sti
mov
imul
mov
xchg
imul
ja
flds
jge
mov
jns
jae
jns
jo
lea
sub
lock
je
jge
clc
jns
ds
push
xor
popa
repnz
adc
pop
pop
test
lock
fs
ljmp
lods
test
insl
mov
jle
or
sbb
ficoml
mov
xchg
cmp
add
mov
insb
sbb
popf
jne
jp
and
dec
or
test
jbe
pmaxsw
or
mov
adc
and
jb
inc
lods
dec
ljmp
test
stc
popf
scas
sti
aas
adc
mov
addl
xchg
bnd
outsb
icebp
jb
mov
push
jge
dec
icebp
cmp
push
mov
dec
sbb
push
sbb
ds
enter
add
cmp
pushl
add
cmp
lods
ljmp
xchg
ja
out
dec
mov
loopne
mov
mov
pop
cmp
movsb
cld
ret
fsubrs
ds
cmp
cmc
xor
xchg
cwtl
cwtl
push
cmp
repnz
push
cs
jl
mov
push
inc
mov
mov
ja
pop
cwtl
repnz
push
and
outsb
das
lcall
lret
or
xlat
icebp
out
add
loope
or
lcall
lret
in
mov
cmc
cmpsl
sub
or
jae
lods
jne
bound
loopne
scas
jnp
scas
mov
adc
or
adcb
sahf
out
push
lret
in
mov
scas
mov
lcall
rcrl
inc
mov
imul
lcall
sarb
dec
add
adc
icebp
add
test
sqrtps
insb
out
cmp
push
shll
push
mov
sub
cmp
addr16
int3
sub
je
dec
das
testl
lret
mov
pusha
xchg
clc
fldcw
ss
or
scas
imul
cltd
and
or
cmp
push
inc
les
jnp
pop
out
fadds
jg
push
neg
xor
adc
adc
dec
mov
push
sbb
jp
in
movsl
das
adc
cmp
mov
test
jo
pop
mov
in
dec
dec
adc
scas
pop
dec
jbe
add
mov
dec
fs
or
sahf
mov
and
cmp
adc
popl
cmp
pop
testb
inc
xor
lods
fildl
dec
cwtl
fwait
and
jp
cmc
call
imul
jg
test
add
push
scas
or
or
out
mov
rcll
pop
pop
mov
jmp
mov
mov
jge
add
jno
sbb
fsubp
call
repnz
enter
push
movsb
gs
clc
or
mov
ja
lret
push
cli
in
push
rcll
xchg
xchg
mov
divb
mov
adc
dec
roll
bound
pop
push
sbb
or
insl
aad
test
movsb
cmpsl
lcall
aad
pop
mov
inc
mov
icebp
sub
in
or
movsl
iret
scas
rep
or
mov
pop
cmpsb
mov
fs
int3
lret
add
mov
xor
jne
cmpsl
daa
daa
adc
xchg
sbb
xchg
fisubrs
aas
ds
inc
and
inc
dec
fdivp
sbb
inc
push
scas
pop
ret
dec
or
mov
cmc
nop
push
fcmove
lea
adc
push
push
push
fsts
outsb
repz
mov
add
pusha
mov
push
lcall
stos
lods
xor
mov
hlt
or
jle
mov
cli
je
mov
test
jae
movsb
xor
ficoml
gs
out
pop
mov
leave
bound
in
insl
and
dec
dec
dec
je
jns
dec
pop
dec
popa
mov
int3
cld
and
mov
ja
xor
mov
xor
rclb
jno
push
sub
dec
scas
add
xlat
fs
movsb
call
mov
mov
jo
js
icebp
scas
mov
out
xlat
push
out
sub
subl
fwait
pop
fsts
lret
ret
pop
nop
pop
shll
adc
fwait
adc
mov
sub
mov
mov
or
sahf
hlt
push
mov
stos
push
out
rorl
cmp
pop
cmp
cmp
mov
aas
or
shlb
cs
sbb
mov
push
add
jp
jle
mov
xor
subb
pop
sbb
icebp
cwtl
jmp
inc
ja
imul
push
xlat
inc
or
loopne
cli
loopne
or
push
xchg
mov
out
cwtl
mov
leave
repnz
sbb
inc
fildl
mov
fisubrl
xchg
je
test
fdivs
xor
imul
or
sub
xor
mov
cld
std
dec
sub
mov
icebp
fistl
ljmp
sbbl
cmp
xchg
sub
jmp
rcl
sub
or
jle
hlt
mov
popf
inc
das
nop
or
inc
mov
cmp
push
ret
cli
jl
popf
xor
mov
inc
pop
mov
xor
or
mov
lds
mov
fs
add
mov
repnz
xchg
std
pusha
mov
mov
inc
adc
mov
rcrl
scas
mov
mov
negl
inc
jae
andl
in
pop
sti
push
mov
or
lock
mov
loope
pop
inc
cld
movsb
xchg
pop
stos
mov
pop
sub
sbb
movsb
dec
jecxz
fistpll
xchg
icebp
lds
arpl
add
lret
cwtl
jb
test
addl
and
push
mov
dec
push
mov
jecxz
mov
pop
aam
adc
push
test
in
mov
mov
sub
clc
push
pop
fcoms
ror
cmc
out
imul
bound
decl
sbb
mov
and
fcomps
cwtl
popf
fistps
add
push
sbb
cltd
insb
xlat
sub
pop
ja
mov
push
mov
push
aas
lcall
cs
mov
loope
mov
outsb
push
movl
pop
push
xchg
movsl
sub
push
jne
pop
or
mov
mov
ret
mov
mov
in
xor
fldl
js
mov
dec
test
jno
in
add
xor
movsl
inc
fmul
stos
cmp
pushf
out
inc
cmpsl
popf
xlat
ret
jl
push
jecxz
call
xchg
mov
popl
pop
cmp
cmc
xchg
pop
and
cmp
jne
jae
in
jnp
pop
fst
sbb
pop
pop
cmpsl
jp
mov
sbb
clc
and
lock
inc
incb
mov
cmp
push
in
push
ljmp
xchg
adc
imul
data16
scas
xchg
in
xor
leave
out
mov
xor
mov
sub
and
inc
rol
mov
lret
jmp
jecxz
aad
sub
andl
push
aad
adcl
and
push
int
mov
inc
cmc
lock
addr16
sbb
aad
fs
xor
test
cs
sub
std
ret
aad
pop
cli
sub
lret
sub
test
mov
push
mov
sub
loopne
xchg
mov
scas
push
and
loop
dec
sbb
xchg
cmpsl
lret
insb
pop
int
sbb
int3
insb
xor
jl
add
sub
lret
andb
lcall
push
sbb
outsb
mov
sbb
push
sub
inc
ss
mov
add
jmp
jns
std
xchg
stc
jecxz
arpl
loop
lret
inc
out
sub
mov
movsl
repz
adc
pop
push
push
lret
enter
inc
ds
sbb
mov
mov
aad
and
jle
in
inc
sub
jge
cwtl
dec
jmp
out
xor
int3
nop
sbb
int3
jne
mov
loop
mov
les
xchg
jecxz
sbb
mov
sub
cmp
xor
clc
add
push
cmp
test
mov
scas
ja
xchg
dec
insl
mov
cltd
adc
jp
fs
xlat
pop
jge
sbb
mov
je
jns
orl
adc
xor
cwtl
pop
sbb
movsb
ja
loope
jmp
arpl
xor
insl
adc
add
push
cmp
and
jne
notl
cs
xorb
pop
add
add
sbb
or
dec
aad
adc
jae
mov
repnz
sbb
add
dec
adc
cmpsl
pop
adc
stos
dec
cwtl
lcall
dec
pop
mov
inc
pop
add
dec
mov
arpl
lea
sahf
inc
outsb
or
mov
mov
loope
xor
ret
and
cmpsb
jo
lods
cld
mull
xchg
cmp
pop
movsl
sahf
dec
insb
push
xor
loopne
ret
iret
add
pop
sbb
outsb
add
adc
sub
xchg
sahf
push
js
aam
in
fdivrs
out
lret
int
pusha
mov
xor
add
lahf
xchg
dec
or
push
jns
xor
dec
je
imul
pusha
push
cli
and
les
idiv
adc
push
std
loopne
out
and
inc
jns
mov
xor
sahf
cmp
das
push
jns
outsl
dec
jmp
subl
ficompl
adc
cltd
mov
xchg
jbe
or
loop
lods
xchg
xor
lods
repz
loop
addr16
roll
bound
sub
cmc
imul
push
lahf
int3
pop
or
aam
cmp
cltd
push
movsl
and
fwait
pop
mov
cmp
inc
push
sub
loop
push
divb
int
les
dec
lcall
aas
adc
pusha
xchg
mov
std
sbb
out
mov
enter
bound
inc
nop
add
bound
lret
add
std
icebp
cld
loope
push
xor
mov
sub
ljmp
mov
push
pmuludq
and
loop
or
or
enter
out
pop
mov
cld
adc
out
es
inc
sub
add
popf
arpl
fadds
ja
add
roll
cmp
and
xor
mov
ljmp
andb
mov
adc
sahf
pop
inc
in
idiv
mov
sub
test
lock
test
nop
daa
mov
add
xchg
inc
xchg
adc
inc
mull
adcb
and
inc
cli
add
leave
js
xorl
inc
das
adc
push
cltd
popf
sub
mov
lcall
xor
aad
clc
ds
pop
xchg
xchg
mov
enter
int3
lods
repnz
leave
andb
sbb
lcall
int3
cli
or
jo
outsl
and
arpl
inc
lods
lds
ljmp
in
or
or
jne
out
or
stos
mov
cmpsb
inc
dec
push
mov
aas
jo
sbb
cltd
arpl
cmp
lret
out
lds
addr16
push
adc
pop
mov
cmp
lahf
js
mov
jae
test
negb
arpl
gs
clc
dec
xchg
cs
call
sub
int
adc
cwtl
fxch
arpl
mov
push
dec
aas
add
decb
dec
xlat
out
mov
cmp
loopne
sbb
mov
in
mov
cmc
addr16
push
mov
lret
jnp
jnp
popa
adc
subl
push
and
jg
cmp
arpl
and
std
rcl
push
movb
xchg
push
xorb
jle
arpl
je
push
fs
std
xor
lret
les
leave
dec
pusha
pop
sti
stc
ficoms
xchg
fdivrl
rclb
xchg
jmp
or
jl
push
lcall
ret
mov
aas
mov
call
lods
or
shrl
sti
mov
fimuls
mov
or
fsubl
cmp
arpl
or
je,pt
and
ret
ss
xchg
enter
pop
pop
mov
push
pop
dec
imul
scas
scas
shlb
stos
repz
dec
add
dec
sbb
arpl
fisubs
push
test
iret
out
test
fs
cmp
pop
adc
mov
fbstp
dec
ljmp
mov
pop
movsl
movsb
ss
imul
cltd
dec
fidivl
fwait
adc
pop
loope
jle
roll
out
sti
hlt
or
add
aam
add
test
popf
jl
sarb
push
jg
push
xchg
popa
sbb
mov
int
add
aam
sbb
jge
aas
mov
xor
dec
jo
push
pop
mov
mov
mov
test
sahf
cli
sub
and
pop
xchg
jno
pop
dec
xchg
addr16
push
push
xor
iret
cmp
jbe
addr16
pop
mov
jmp
mov
std
js
hlt
mov
push
add
pop
mov
cmp
inc
cwtl
mov
int
mov
cmpsb
cmp
lcall
jno
and
mov
inc
jl
dec
cmp
lods
mov
xor
mov
shr
mov
xor
stc
lods
push
sbb
test
push
sti
mov
sbb
fidivs
scas
push
or
aad
jo
adc
pop
add
das
mov
mov
shl
sbb
xchg
cmpsb
and
stos
and
mov
mov
dec
adc
push
out
js
dec
xor
daa
test
mov
and
aam
sbb
mov
xor
mov
inc
or
mov
loop
dec
nop
sbb
dec
mov
push
outsb
leave
into
mov
daa
aad
out
push
adc
rolb
in
repz
aas
clc
inc
mov
pop
pop
mov
movsb
int
mov
ret
add
shlb
rcrl
dec
jo
xchg
stc
mov
imul
sub
xlat
xchg
mov
mov
movsl
sbbl
xchg
push
pop
inc
je
jbe
lret
scas
mov
add
sti
jno
stc
push
cs
cmpsb
adc
repz
dec
pop
cli
jns
inc
sbb
mov
pusha
fildl
pusha
inc
push
pop
mov
in
fistps
xchg
and
stos
cld
xchg
xchg
data16
imul
xchg
loope
mov
pop
jbe
arpl
les
adc
lret
and
push
or
test
cld
and
or
movsb
fsts
jp
arpl
sti
test
dec
sbb
pop
notb
les
lods
sub
mov
cmpsl
ret
imul
sbb
lret
jns
roll
xchg
push
push
sbbb
mov
push
pop
dec
js
cld
mov
lcall
add
lods
mov
sti
nop
sti
mov
jecxz
lea
orb
lea
ja
in
orl
inc
cmp
ja
push
xchg
xor
pusha
cwtl
stos
stc
xchg
xor
test
mov
mov
lods
pop
fdivs
and
mov
movb
aas
push
lret
lock
inc
icebp
xor
push
mov
test
jne
xor
sarl
imul
pop
add
mov
fnstenv
cmpsb
cmpsl
in
sbb
ss
mov
mov
xor
dec
shl
std
add
popf
and
in
dec
and
jno
das
push
push
pop
punpcklwd
lret
fdivrl
cmp
cmc
jo
pop
out
jne
mov
nop
cmp
pop
sahf
mov
pop
dec
ja
xchg
out
sub
push
dec
scas
cwtl
loop
adc
stos
xor
arpl
ss
into
aaa
push
rcl
and
aaa
adc
cmp
shrl
xchg
les
push
adc
pop
outsl
mov
sbb
fsubrl
stos
sub
sbb
sahf
mov
adc
xlat
mov
call
sti
mov
fs
lret
incb
inc
add
sbb
popa
mov
aam
mov
xor
mov
out
dec
or
xor
mov
lcall
ja
negb
mov
xchg
sbb
lret
lahf
cmpsb
lahf
mov
xchg
add
daa
repnz
dec
push
cmc
cmp
sahf
fdivs
bound
int3
push
outsl
mov
sbb
and
arpl
and
cmp
push
outsb
pop
push
pop
in
adc
out
outsb
jne
daa
xchg
sti
add
push
int
into
in
imul
outsl
mov
mov
mov
mov
push
addr16
cmpl
das
inc
dec
sarl
into
lods
js
inc
mov
imul
iret
pop
rol
dec
xchg
dec
sti
sub
cmp
xorl
push
lret
push
imul
mov
movsb
js
mov
xchg
sbb
mov
mov
dec
es
mov
test
mov
rclb
ss
fnsave
mov
cmp
fidivs
and
subl
mov
mov
adc
mov
xchg
clc
lea
mov
gs
xor
lock
fstpt
lcall
and
roll
push
inc
es
sub
and
sub
jns
ret
add
ret
cmp
sbb
sbb
jo
xlat
test
movb
gs
lea
push
lcall
jne
pop
or
mov
repz
add
into
stc
sbb
xor
sub
mov
inc
mov
push
sub
push
movsl
mov
ret
mov
fldt
bound
dec
hlt
jmp
jae
mov
imulb
mov
and
add
xchg
adc
insl
and
pop
jns
repnz
push
mov
loop
in
xor
or
out
jbe
adc
jnp
mov
xor
adc
xchg
mov
fiaddl
sbb
add
jp
mov
fcmovnb
adc
and
daa
dec
and
lea
shlb
pop
cli
aad
inc
les
fadds
mov
rolb
cmp
push
mov
jg
mov
sub
mov
push
decb
sbb
mov
std
fs
inc
add
mov
cmpsl
div
push
or
loop
push
sub
dec
shl
inc
xchg
mov
cmp
stos
inc
sub
pop
jg
into
clc
scas
or
push
push
jnp
cmp
dec
inc
fadds
push
call
adc
gs
adc
jnp
xchg
mov
cwtl
mov
pop
sti
sub
mov
and
and
xor
stc
xchg
pop
sti
nop
mov
call
mov
nop
jb
sahf
pop
repz
frstor
test
dec
push
pop
cld
pop
xchg
cwtl
lods
ret
mov
dec
xchg
ljmp
ret
repnz
adc
dec
pop
sub
sbb
xor
dec
mov
xor
mov
ret
xchg
enter
add
stc
test
xor
xor
mov
cs
repnz
cmpsl
sub
inc
fldenv
outsl
mov
js
scas
icebp
into
ret
es
cmp
xchg
dec
xchg
mov
je
push
push
pop
addl
mov
xchg
jne
sbb
mov
daa
mov
inc
pop
pop
pop
into
mov
fs
mov
sub
pop
and
pop
xchg
lret
push
scas
cmpsl
inc
fs
jns
or
mov
repz
sbb
mov
or
fs
pop
mov
xchg
int
ljmp
jle
add
imul
jo
lret
mov
fwait
test
add
mov
cmp
arpl
and
sahf
addb
add
repz
pop
sbb
jo
int
adc
adc
loope
loope
pop
movsb
xchg
fnstcw
push
or
in
adc
push
lcall
fwait
cmp
enter
pop
mov
inc
adc
sti
add
mov
inc
mov
pop
out
in
jle
inc
jo
fwait
test
outsl
movsl
sub
aam
sti
clc
dec
loope
jns
mov
out
sbb
push
push
fstl
test
mov
inc
call
movsb
sub
aad
lock
out
das
lret
lret
xorb
dec
cmp
inc
mov
and
add
bound
add
lods
mov
nop
cmp
imul
in
add
hlt
cmp
ja
xchg
pop
push
or
dec
popl
stos
lret
push
popa
jg
cld
jo,pt
pop
int
mov
mov
jmp
mov
into
bound
pop
adc
das
imul
lock
leave
fadd
pop
xchg
xchg
jmp
loopne
sbb
outsb
lds
inc
xor
push
enter
dec
movsl
push
inc
xorb
sti
scas
inc
sar
test
pop
lods
sbb
sbb
xor
lret
adc
sub
repz
push
sub
lcall
stc
stos
in
mov
xor
test
testb
xchg
pop
mov
or
mov
inc
mov
and
push
push
mov
jmp
imul
mov
mov
std
jle
enter
shl
sbbl
dec
adc
push
xchg
addr16
xor
stos
cwtl
lahf
jecxz
in
out
imul
dec
negb
js
add
loop
jo
insl
push
sub
into
lea
popf
inc
mov
sbb
repz
sti
pop
sub
jmp
scas
adc
cmp
nop
push
xchg
and
and
aam
sbb
cli
cs
psllq
lock
dec
pop
push
mov
pop
mov
sbbl
push
lea
xor
decb
lcall
xlat
dec
rol
or
inc
cmp
adc
mov
faddl
sub
mov
sub
test
push
loope
inc
aam
add
add
mov
negb
mov
fidivs
rcr
shrl
ja
insb
sahf
push
mov
pop
fdivs
movsb
stc
push
cmc
mov
dec
xor
mov
and
dec
cli
and
xor
add
enter
dec
adc
or
xchg
dec
dec
push
test
pop
mov
inc
sub
mulb
push
outsb
cltd
cltd
jle
icebp
xor
loope
adc
mov
adcl
repz
jnp
sbb
aad
cmpsl
xor
aam
pop
clc
mov
xchg
sub
sbb
scas
sub
xor
cli
adc
fdivrp
or
jge
imul
ss
gs
or
mov
xor
xor
add
ffree
push
pushf
inc
inc
mov
daa
add
xchg
pushf
jmp
or
fiaddl
fldenv
imul
int
jno
je
cmc
push
push
rclb
or
fnstsw
add
sub
add
fsub
adc
lahf
xchg
jno
repz
ficomps
mov
addr16
xchg
ret
daa
rorl
inc
push
out
pop
setp
inc
sub
cs
pop
icebp
dec
jmp
lret
negl
out
jno
mov
imul
dec
repnz
dec
add
insb
inc
jno
js
sbb
jg
inc
jns
pop
xlat
sbb
and
mov
inc
mov
movsb
lock
sbb
ret
inc
movl
push
mov
imul
dec
lods
jmp
aas
push
inc
push
fidivs
jno
loope
adc
stc
push
or
mov
xor
pop
fsubrs
or
ret
push
jmp
out
fwait
push
jp
ret
iret
icebp
jge
lds
movsl
push
out
inc
fmuls
shl
sbb
xor
adc
jl
cmc
mov
lods
inc
xor
mov
sbb
mov
or
stos
shlb
push
out
xlat
test
add
push
add
mov
pop
xchg
jno
cmp
pop
mov
idivb
jecxz
andb
je
in
push
out
push
sarb
movsl
push
das
adc
mov
inc
adc
popf
xchg
stc
mov
adc
outsl
insl
pop
icebp
cmp
cwtl
bound
dec
stos
xchg
xchg
and
paddsw
xor
push
icebp
inc
and
mov
jae
sub
dec
mov
sbb
or
inc
andb
inc
cmpsb
in
mov
fidivrs
negl
add
and
cwtl
inc
mov
mov
fcoms
subl
fmull
lret
cmp
and
xchg
and
insl
and
fcompl
fs
and
inc
popa
mov
mov
aaa
push
xor
movsl
xchg
adc
sub
in
jp
cmc
stos
jno
lret
adc
adc
pop
mov
pop
stos
inc
adc
xor
icebp
pop
push
mov
dec
in
xor
test
sbb
ss
je
push
push
pusha
push
xchg
sti
sub
sbb
push
xlat
push
shll
out
jne
mov
imul
pop
insb
int
xchg
xor
inc
jbe
ficomps
wrmsr
outsl
repnz
ja
xor
add
jbe
mov
or
xchg
jecxz
movsl
stc
dec
jb
repz
insb
mov
test
cmp
mov
mov
dec
lods
inc
loope
mov
xchg
adcb
rcl
bound
cmc
dec
or
into
jg
push
xor
push
inc
data16
cmc
mov
mov
add
push
sub
pop
out
aad
lahf
jg
push
out
jg
cmp
sbb
dec
movhps
aaa
mov
push
hlt
ficompl
data16
gs
mov
mov
shll
aaa
loope
jb
ja
xchg
cmp
xchg
jae
gs
rcl
mov
fsubrp
push
shll
or
and
rcll
sbb
push
in
pop
mov
sub
adc
inc
lea
loopne
inc
stos
add
loopne
xchg
fldenv
push
dec
nop
sub
mov
fs
out
movsb
adc
or
sbb
xchg
ljmp
sub
cmc
jp
iret
leave
repnz
dec
popf
lock
addr16
jp
inc
jne
mov
mov
mov
cli
sar
stc
inc
mov
lds
adc
add
cmp
pusha
loop
add
das
scas
lods
push
add
or
cwtl
xchg
add
in
jmp
test
mov
push
mov
out
int3
push
add
into
xor
xor
or
leave
sbb
pop
inc
insl
push
xor
icebp
or
inc
cltd
popa
iret
mov
in
push
mov
aam
xchg
lock
clc
leave
jmp
xlat
js
xlat
xchg
jp
int
mov
repnz
gs
xchg
pop
or
loope
jmp
imul
stos
fiaddl
xchg
ljmp
insl
adc
inc
xchg
xchg
out
dec
cmp
cs
gs
shlb
push
mov
push
jbe
das
xchg
jle
mov
andb
or
ss
push
mov
or
ljmp
xor
loope
in
adc
lcall
and
dec
mov
or
jmp
push
sbb
add
ret
aad
sbb
mov
hlt
add
out
push
or
xor
sub
jp
sbb
cmp
js
add
jno
pop
scas
pop
cmc
in
pop
sbb
mov
cmp
adc
mov
scas
jecxz
mov
push
rcr
sbb
xor
add
movsb
push
out
lcall
pop
mov
loop
xor
insb
fcompl
in
pop
mulb
test
out
xchg
sahf
sub
jl
cmpsl
dec
sarl
mov
scas
inc
push
sub
cs
inc
and
ljmp
mov
jmp
loope
lret
mov
sti
lcall
cltd
imul
dec
mov
push
subl
push
push
sti
frstor
mov
inc
pop
insb
stc
xor
jnp
mov
nop
adc
imul
rclb
mul
and
outsb
or
mov
mov
pushf
cmpsb
and
scas
dec
in
xor
jnp
imul
aad
into
mov
loope
xlat
jle
mov
dec
aaa
xchg
and
cs
popa
push
sahf
adc
push
mov
push
cmp
add
in
aaa
cmp
mov
jbe
rcr
mov
xchg
push
cmp
mov
mov
into
cmp
ds
sti
out
mov
cltd
pop
mov
jbe
repnz
push
in
cmp
cwtl
mov
insb
jae
inc
sub
ds
cli
imul
out
test
mov
xchg
das
sbb
push
ret
dec
jbe
xor
mov
or
cmpsl
scas
lcall
ficoml
mov
jg
out
lea
out
fsts
push
loope
addr16
idivl
jne
add
stc
xchg
push
cmp
icebp
movsl
mov
test
cmp
lods
in
cmp
mov
and
subl
test
test
jl
add
pop
sti
das
scas
into
jbe
or
mov
fdivs
mov
add
xchg
lods
inc
jle
adc
in
int3
stos
aam
out
mov
mov
wrmsr
movsl
push
mov
cmpsl
mov
push
pop
jbe
loopne
aas
jnp
pop
add
out
mov
push
stc
leave
mov
lods
lret
and
das
jg,pn
sbb
ljmp
orb
aam
add
inc
jbe
roll
lods
xor
and
cltd
lret
ficomps
pop
cmp
sbb
mov
aas
outsb
test
jno
out
ds
push
mov
and
or
les
adc
lds
adc
adc
mov
pop
mov
mov
fwait
or
das
in
scas
inc
lock
mov
dec
dec
adc
repz
ja
lods
mov
sub
xchg
adc
sub
mov
ffreep
insl
mov
dec
fwait
mov
icebp
lret
xor
pop
dec
bound
jl
jns
xchg
inc
dec
or
or
xchg
jmp
sbb
inc
mov
xor
xchg
jg
mov
pop
pop
push
and
and
jo
fnsave
ret
ss
sub
ret
aaa
int
loope
ss
mov
xchg
xor
loop
fbld
popa
dec
pop
test
loop
or
add
push
add
dec
int3
sub
inc
ljmp
sbb
test
adc
enter
jbe
test
xor
sbb
sbbb
leave
mov
xchg
lea
sbb
pusha
scas
xchg
sarl
stc
popf
adc
mov
in
rol
lahf
mov
dec
out
ja
jns
stos
jmp
xchg
add
ret
and
or
push
xor
jns
push
sub
push
movhlps
push
and
cmc
xchg
aas
orl
and
iret
jge
pop
inc
lahf
dec
dec
fs
or
xchg
es
xchg
adc
insb
ja
pop
mov
cmc
or
or
dec
push
loop
xchg
pop
mov
leave
push
test
fisttpl
fstps
aaa
pop
mov
call
mov
pop
daa
inc
aas
fsub
enter
repnz
mov
xor
xchg
mov
sbb
jne
jns
push
ret
mov
aaa
rolb
jge
pop
add
cltd
popa
outsb
pop
jl
jmp
stos
adcl
or
mov
cwtl
lock
test
popa
xchg
or
shl
dec
xchg
cwtl
jb
test
stc
mov
jb
xor
sub
push
sub
or
adc
pop
std
cmp
js
addr16
lret
mov
adc
pop
in
and
push
adc
scas
adcl
fdivrs
sbb
jge
add
adc
mov
shll
aam
sbb
push
sbb
nop
mov
pop
test
in
xor
pop
int
or
xor
pop
push
repnz
cltd
dec
iret
jg
in
int3
call
pop
lods
js
test
adc
pop
jl
lret
popa
mov
mov
mov
daa
and
xchg
test
xchg
push
stc
aam
les
jno
cmp
lods
xchg
outsl
cwtl
cmp
push
jmp
jl
jl
in
sub
push
jo
repz
mov
enter
or
mov
loopne
pop
mov
dec
xor
mov
xor
in
sbb
jb
fcomp
out
jne
push
push
mov
roll
imul
ret
sbb
xchg
out
sub
add
dec
sub
sub
sahf
cmp
dec
mov
into
mov
bound
cld
adcl
lret
lret
jb
and
mov
fdecstp
imul
rclb
mov
imul
and
fcomi
or
mov
ja
mov
loop
lret
jo
ret
lahf
pop
pop
cmpsl
ret
sub
xchg
cmp
add
outsl
iret
out
gs
sbb
push
pop
das
cmpsl
jg
xchg
cmp
pop
outsb
dec
or
lods
adc
cwtl
mov
ja
and
cmpsb
push
iret
ror
in
shll
mov
pop
pop
sbb
mov
inc
push
mov
int3
mov
popa
add
mov
adc
inc
mov
cld
pusha
mov
out
sahf
and
mov
lcall
notb
push
jb
mov
xchg
ret
push
pop
movsb
jae
adc
cmp
aaa
pop
fbstp
jp
js
imul
mov
jecxz
rcll
cmp
lahf
xor
stos
xor
int
sbbb
push
xor
inc
clc
int3
mov
stos
es
cmp
js
out
xchg
nop
vpunpckhbw
inc
jns
mov
push
insb
cmp
stos
jb
loopne
sub
jno
xchg
in
repnz
cmp
push
dec
rclb
stos
xor
cli
pop
lds
mov
fiaddl
mov
mov
mov
lcall
push
jmp
mov
xchg
call
in
xchg
cmpsl
hlt
mov
lods
mov
pop
hlt
cmp
or
xchg
pop
bound
xor
mov
xor
addb
sub
imul
in
xor
out
out
mov
sbb
mov
mov
ds
ficoms
cld
lahf
addr16
pop
mov
imul
pop
mov
and
out
adc
imul
sbb
in
push
pop
rcrl
rcrl
mov
dec
jbe
lods
scas
xor
jnp
arpl
dec
adcl
stos
sbb
sbb
xor
js
sbb
dec
inc
mov
inc
inc
dec
pop
add
and
in
add
hlt
rcll
test
sahf
pushf
aam
cwtl
sbb
ja
jl
adc
mov
mov
into
sbb
xor
imul
mov
inc
fists
test
scas
sub
fbstp
je,pt
add
pop
movsb
push
neg
and
push
fldenv
cltd
gs
notb
mov
jb
les
negb
push
addr16
popf
fisttpll
adc
inc
aaa
es
add
into
je
jno
frstor
inc
sbb
aad
adc
call
cmp
pop
mov
out
sub
cld
lods
out
xor
int
mov
dec
cmp
mov
xor
mov
add
mov
aad
movsl
mov
rcr
fsts
and
push
push
inc
imul
or
cmpsb
pop
pop
push
mov
ds
sub
add
sbb
out
ja
test
or
xor
and
int
sahf
jae
jne
adc
sbb
ffreep
imulb
in
mov
or
dec
cmp
or
lcall
pop
inc
shll
sbb
sub
sar
sar
jg
out
xchg
clc
pop
in
leave
pop
cmpsl
jmp
sub
mov
pop
jl
xor
rclb
jo
cmp
xor
pop
movsb
pushf
call
jnp
inc
pop
dec
pop
test
xor
arpl
dec
lods
psubusb
mov
dec
add
nop
gs
sbb
fisubrs
xor
or
sub
pop
jns
aaa
lods
dec
or
inc
mov
outsl
pusha
es
inc
jmp
xchg
incb
int
and
aam
add
inc
sub
int
scas
push
or
jge
xchg
imul
lcall
jle
sub
fcompl
sub
or
decb
cmc
and
aad
pop
lret
mov
and
dec
jle
dec
call
pop
std
mov
lcall
pusha
push
jns
mov
or
gs
jecxz
gs
push
sub
and
aas
pop
insb
xchg
add
enter
out
loopne
ficoml
or
sub
cld
adc
cmp
sub
xchg
xor
cltd
sbb
cmp
push
je
adc
imul
and
insb
shr
js
imul
popf
cmpsb
dec
or
sbb
cmp
jmp
add
or
cmp
movsb
xchg
dec
outsl
les
lea
fistl
daa
and
xchg
fsubl
xchg
adc
jo
in
sub
jno
fwait
leave
jo
cmp
or
push
dec
xchg
push
cmc
pop
push
cld
adcl
popa
icebp
loopne
inc
out
xchg
iret
ret
mov
les
hlt
sbb
push
lret
cltd
dec
test
leave
add
subb
arpl
cmp
cmp
push
sub
jo
pusha
das
add
cmp
inc
push
adc
stos
lea
mov
jge
mov
lea
xor
mov
sub
push
das
aad
stc
fisubrs
or
data16
fbstp
inc
fs
jae
push
cld
aaa
jns
daa
push
and
jno
mov
adc
lret
jno
int3
pushf
les
pop
push
inc
xchg
cmpl
sbb
das
js
movsb
lcall
xchg
imul
sbb
data16
fwait
cmp
xchg
mov
dec
ds
mov
fwait
or
and
in
mov
loope
xor
mov
clc
inc
arpl
bound
pop
outsb
dec
adc
push
icebp
lret
or
push
jge
cmpsb
fiaddl
push
jg,pt
sub
mov
push
and
push
movsb
fdivs
dec
test
or
fldenv
pop
jno
sub
sbb
and
dec
je
cmp
jp
lcall
mov
mov
mov
sub
push
lahf
cmpsb
mov
jbe
or
inc
pusha
sbb
pop
out
lods
outsl
pop
sahf
jbe
mulps
adcb
cld
jecxz
mov
jle
outsb
pusha
cli
mov
fildl
add
or
lret
jae
enter
aam
movsl
jge
add
add
mov
push
dec
ret
lcall
jne
pop
push
xchg
mov
mov
and
iret
or
or
mov
push
cltd
inc
insb
mov
scas
mov
imul
push
ret
shl
sub
jg
sub
sbb
out
mov
rorb
xchg
shll
ss
sbb
or
add
gs
dec
pop
ret
jp
jp
idivl
pop
in
mov
insl
sbb
loope
movzbl
dec
das
fcomp
mov
and
push
sbb
repz
iret
lods
sahf
mov
inc
mov
jb
hlt
or
sbb
dec
inc
int
shlb
and
imul
xchg
inc
mov
mov
sbb
fildl
fwait
or
aaa
or
dec
mov
xor
popf
lea
sub
insb
fidivl
cmp
je
pop
xchg
mov
movsl
push
inc
lahf
call
rcrl
inc
sub
push
pop
cmc
mov
lods
fisubl
and
mov
pop
addr16
neg
inc
pop
adc
jle
mov
xor
ret
push
shll
xor
adc
out
push
aaa
ret
call
and
jp
ret
cmc
das
mov
or
push
pop
inc
jecxz
push
push
inc
enter
fimull
add
mov
cmp
aad
sub
pushf
pop
jnp
iret
hlt
int
jne
dec
inc
rolb
ljmp
shrl
mov
jmp
fs
stos
sub
arpl
lock
das
xlat
mov
add
leave
jb
hlt
add
and
pop
out
pop
pushf
les
cli
pop
minps
jp
cmpsl
ret
in
ret
loope
popf
cwtl
adc
or
call
mov
add
push
push
cmc
int3
movsl
mov
pusha
aad
idivl
hlt
pop
adc
jp
dec
and
in
bound
outsl
push
es
call
ffreep
xor
movsb
imul
inc
pop
fs
sti
mov
xchg
sbb
lret
pop
mov
nop
jmp
ret
lock
popf
pop
fistpll
lcall
mov
rclb
int
add
cltd
jge
scas
mov
push
pop
cmc
push
popa
mov
xor
and
push
popf
xor
jnp
es
xor
test
cmp
mov
fisubrs
fsubr
push
orl
mov
rcrb
mov
xchg
and
andl
xchg
adc
in
imul
mov
repnz
sbb
adc
into
inc
push
xchg
xor
aad
add
popf
leave
mov
adc
mov
int
lret
jns
adc
sbb
iret
in
lock
adc
into
mov
jae
rorl
addr16
jne
push
lods
mov
cmp
int3
fwait
cmp
xchg
jl
outsb
stos
in
test
sbb
push
mov
and
sub
int3
push
or
cs
repz
xchg
js
push
aam
icebp
cmp
fldt
jle
or
add
jp
sub
aad
mov
icebp
fsubl
xchg
cmp
and
mov
insb
fisttpll
je
and
mov
cmp
ja
sbbb
jp
jecxz
mov
in
jns
push
je
pop
inc
adcl
jb
nop
bound
or
adc
cmp
aam
sub
jmp
mov
icebp
cmpsb
adc
mov
or
fbld
mov
sub
or
sub
insb
imul
mov
xchg
rolb
hlt
sub
mov
adc
out
iret
add
sbb
test
popa
int
fildl
aad
sub
aad
popf
aaa
rorb
mov
test
std
pushf
lea
int
pusha
sub
clc
mov
les
inc
dec
lods
mov
sti
mov
inc
out
arpl
cwtl
andb
jge
lret
sahf
in
fnsave
outsl
lods
clc
shl
loopne
repz
xor
rcl
sarl
cmp
shr
inc
sbb
invd
pop
add
ljmp
mov
cmp
out
mov
rcl
xor
cmp
sti
jg
jl
jno
add
and
jns
dec
pop
push
pop
cmp
ja
sbb
mov
cmp
cmp
xor
xor
and
or
push
mov
adc
and
mov
cmp
rclb
pop
adc
xor
stos
push
fcom
cmc
or
mov
pushf
push
adc
xchg
scas
add
arpl
sbbl
ja
pusha
ret
jge
test
mov
fwait
cmp
push
xchg
push
sti
sbb
mov
daa
int
lods
xor
subl
mov
cmpsl
mov
std
les
aas
mov
fldt
add
es
or
pop
or
xlat
dec
mov
insb
dec
push
push
nop
xchg
xchg
call
mov
push
jle
in
mov
in
dec
mov
sahf
push
clc
inc
ds
inc
fs
pop
fildl
ljmp
in
stos
xchg
out
fucomi
aad
push
enter
cwtl
mov
or
lahf
aas
jo
pop
xchg
jp
mov
jge
scas
int
sbbb
iret
mov
fs
dec
idivb
mov
or
std
mov
and
jo
fdivs
dec
pop
sbb
lcall
enter
dec
cmp
shlb
dec
inc
sahf
shll
lcall
or
faddp
push
sbb
cmp
icebp
mov
and
jns
jno
push
imul
add
xchg
loopne
mov
mov
outsb
dec
lea
ds
xchg
mov
dec
push
and
js
xchg
movsl
into
inc
in
push
xchg
mov
stc
adc
inc
ja
test
cld
push
mov
notl
shl
jno
jg
lds
and
movsl
push
push
xchg
mov
cmp
scas
aam
add
cmp
or
mov
jns
in
adc
xor
dec
cmpsb
cmp
cld
jge
loope
mov
inc
lea
or
imul
es
cmpsb
mov
mov
ljmp
sbb
xlat
push
push
sub
repz
adc
sub
jge
inc
adc
mov
xchg
push
jp,pt
fsubrl
inc
cmp
testl
mov
cmpsl
mov
push
mov
sub
push
mov
mov
adc
xlat
pop
push
push
add
test
in
and
and
adc
bndstx
movsb
xchg
or
xor
pop
data16
sub
bsr
jo
cmpsb
mov
lods
push
int3
fcomps
push
push
or
sub
fistps
les
jbe
jo
xchg
mov
in
stos
jp
in
insb
xchg
hlt
divb
cs
adc
jbe
scas
stc
loop
sbb
cmc
sahf
ds
out
adc
test
sahf
xor
repnz
push
inc
push
adc
jge
mov
pop
pushf
ds
or
jge
push
sub
mov
jl
outsl
int3
pop
shlb
push
cld
cwtl
imul
fcompl
push
sbbl
or
sbb
sarl
or
orl
add
push
movsl
insb
aaa
sahf
in
ror
cmpb
sub
cmp
or
mov
out
out
hlt
sbb
mov
add
jp
mov
xchg
fnstcw
cmp
mov
testb
lret
rcrl
out
sti
movb
xchg
cwtl
clc
pop
sub
enter
iret
dec
cli
and
fnstcw
add
sbbb
pop
xchg
sbbb
sub
enter
iret
xor
pushf
mov
insl
daa
push
push
mov
scas
fwait
sbb
insb
pushw
inc
lret
xchg
in
pusha
mov
or
cmc
ret
nop
pop
jns
cli
loop
orb
cs
or
es
push
shlb
in
xchg
xor
xor
into
sbb
push
jp
mov
cmpsb
mov
repnz
jb
insl
imul
mov
xorl
pop
ljmp
inc
ljmp
clc
or
test
lea
test
inc
inc
jns
dec
adc
xor
mov
bound
or
or
and
push
imul
gs
cltd
inc
adc
mov
sub
add
add
push
hlt
int
loope
out
lahf
sub
jnp
push
mov
mov
nop
les
imul
dec
add
mov
mov
outsl
cltd
mov
xchg
outsb
cmc
arpl
sahf
push
sbb
sub
pop
loop
mov
inc
adc
test
cmp
paddusb
mov
xor
stos
outsl
sbb
xchg
jl
dec
mov
in
cmp
sbbl
cwtl
testl
cwtl
push
dec
mov
jp
push
sub
pop
bnd
rcrb
pushf
or
negb
nop
in
fcoml
inc
jl
push
xchg
xor
pop
scas
andl
sarb
insb
daa
mov
mov
stos
in
xchg
push
mov
cli
dec
aas
adc
stc
jb
dec
xor
imul
sbb
fdivrl
ja
jl
fwait
stos
sbb
sti
mov
mov
sbb
sbb
ss
pop
sbb
xor
xor
xchg
jl
pop
dec
mov
cmpsb
xchg
pop
enter
out
test
adc
and
movsl
sub
add
or
int3
mov
xchg
jmp
mov
mov
sti
aad
jb
roll
imul
dec
add
lahf
aam
sbb
mov
inc
ja
push
out
mov
dec
cmpl
fwait
xor
push
xchg
adc
xlat
or
popa
dec
test
not
sub
cwtl
scas
xor
dec
xchg
pop
out
and
lcall
loope
insl
test
or
int3
icebp
cmpsl
and
cmp
and
sbb
std
mov
pop
lods
xor
ret
in
insl
out
dec
add
sbb
mov
adc
cmpsb
xor
pop
mov
icebp
jb
push
mov
cld
mov
das
mov
sbb
add
popl
fldcw
cmp
xchg
or
add
jns
stc
jo
aad
lahf
fbld
dec
mov
cmc
mov
into
lcall
rcrl
sub
xor
outsb
jnp
ljmp
cld
add
shrb
push
sbb
lret
adc
xor
inc
pop
cmc
ljmp
scas
cli
sub
stos
hlt
test
pop
fsts
repz
aam
inc
add
adc
add
int
es
outsl
jecxz
ljmp
hlt
xor
mov
out
popl
cs
scas
cmpsl
push
ds
loope
mov
nop
fcomi
adc
mov
jb
pop
gs
lcall
sahf
lods
mov
lcall
and
mov
xor
cld
ror
int
icebp
fldt
rclb
cmp
imul
xchg
and
pop
jp
loop
adc
adc
pop
sbb
out
out
mov
and
mov
adc
loopne
and
imulb
cmc
scas
push
and
scas
popf
push
sbb
cmp
push
cmc
xchg
mov
sbb
negl
in
shll
lods
lahf
rcrl
lret
scas
repnz
mov
cmp
stc
test
push
xor
xchg
push
loope
mov
lock
push
filds
sub
lret
pop
push
sti
lock
int3
bound
es
xchg
or
aam
mov
xchg
push
dec
in
shr
sbb
into
and
enter
push
out
pusha
jmp
mov
in
mov
jecxz
mov
test
shll
sahf
jle
sahf
mov
push
xchg
mov
std
xorl
inc
into
push
popa
and
das
jne
jb
int
repz
pop
jns
cld
adc
adcb
daa
push
mov
jp
cmp
mov
cs
adc
js
push
cld
pop
xor
xor
stos
mov
nop
jmp
mov
popf
pop
mov
dec
cmp
xchg
cmpl
imul
push
movsl
ret
jp
fisubs
inc
stos
push
dec
or
test
or
adc
mov
cmp
scas
lds
arpl
sarb
loope
and
mov
aaa
xor
adc
xor
jo
in
mov
add
jno
leave
jle
leave
leave
stos
xchg
int
dec
lods
cli
jl
stos
pop
mov
add
lock
push
loop
lods
xchg
aaa
andb
decl
leave
outsl
aam
xchg
cmpsl
sub
lods
jmp
mov
mov
fcmove
pop
add
jae
pop
xchg
pop
lret
cmpsl
jge
xor
daa
xchg
mov
mov
xchg
inc
push
mov
popa
hlt
pop
cwtl
mov
repz
xchg
in
aas
or
mov
or
jns
xorb
push
sahf
in
mov
sub
test
push
loope
pop
call
mov
fwait
sub
popf
mov
test
lods
dec
out
sbb
clc
xor
jmp
fisubl
aaa
lock
out
pop
jo
scas
lahf
out
jae
sbb
clc
dec
xor
push
sbb
adc
push
jae
push
arpl
inc
push
mov
insl
outsl
fimull
push
inc
cwtl
push
fld
std
lds
aad
outsb
mov
out
sub
adc
jae
push
push
loop
xor
out
out
rcrl
std
pop
movsl
xor
push
insb
repz
dec
push
inc
mov
loop,pn
dec
nop
decl
mov
imull
push
dec
dec
sbb
adcl
testw
imul
xchg
insl
movsl
jae
sub
xor
test
aam
repz
int
rorb
ljmp
mov
add
add
jae
cmp
sahf
mov
cli
push
int
out
aaa
xor
and
jo
adc
xchg
repnz
bound
mov
divl
mov
xor
sbb
lret
sbb
fwait
lds
mov
cld
movsb
xor
cltd
fchs
or
faddl
sbb
adc
pop
movzwl
in
into
add
out
xchg
jmp
in
sub
mov
inc
sbb
push
mov
mov
jb
cs
psubw
mov
and
test
in
sub
fsubrp
sbb
aam
mov
cwtl
mov
add
pop
push
rcrb
mov
ret
jmp
add
mov
xchg
sub
loopne
inc
in
andb
insl
mov
daa
in
orl
int3
pop
lods
addr16
push
mov
mov
out
cmp
cs
add
mov
dec
xor
mov
std
pushl
fucomip
stc
stos
out
into
inc
adc
loop
adc
add
in
jnp
lods
add
adc
cmp
sub
xchg
mov
jnp
lods
movb
adc
or
cmp
lea
xor
std
push
jge
lret
push
into
fmul
sbb
das
out
jno
daa
shll
push
push
fidivrl
inc
adc
mov
insl
cmp
inc
add
xlat
jecxz
pop
jno
mov
dec
push
cmp
cwtl
xchg
imul
pop
add
mov
or
mov
outsl
arpl
leave
jns
inc
sub
mov
pop
xchg
mov
adc
nop
fsubs
ficompl
sbb
add
xor
mov
fwait
sbb
and
mov
adc
or
pop
lahf
xor
cmp
xchg
push
mov
lret
loope
or
rcl
ljmp
cmp
lods
inc
outsb
mov
xchg
rorl
divb
test
aaa
sbb
inc
mov
and
and
cmp
popf
movsl
nop
loope
testl
dec
out
dec
call
push
pop
cmp
aad
dec
popf
mov
sti
shll
sbb
pop
mov
dec
mov
ffreep
stos
lret
out
pop
sbb
pop
dec
cs
adc
adc
pop
jp
mov
or
int3
mov
jo
rorl
jl
mov
js
and
test
pop
add
push
call
sbb
arpl
sti
dec
aas
out
xchg
add
xlat
push
mov
mov
arpl
mov
push
hlt
sahf
and
inc
cmp
adc
and
clc
fbstp
cmpl
cmp
or
or
xor
mov
dec
movsl
push
je
fs
lret
and
sahf
mov
add
mov
sbb
lcall
xchg
out
outsb
or
cltd
jge
scas
loop,pn
push
xrelease
jne
pop
scas
pusha
jno
xchg
cli
sbb
mov
sbb
and
insb
jno
sub
jmp
cmpsl
add
push
cmp
pushf
clc
ljmp
movsb
inc
hlt
adc
mov
push
out
dec
rolb
pop
mov
xchg
jg
xchg
and
lret
inc
movsb
mov
call
addr16
cmp
sti
sub
inc
pop
sbb
int
add
mov
cmpsb
cld
mov
inc
xlat
adc
popa
jne
xorl
lea
and
repnz
pop
out
cld
sbb
fdiv
pushf
cmp
dec
mov
insb
sub
mov
pop
sarl
jl
scas
cmpb
pop
in
out
add
jne
add
mov
xor
in
roll
pop
mov
mov
add
cmc
sub
push
negl
cwtl
sub
jmp
jl
xchg
pop
adc
dec
and
jp
adc
adc
mov
sti
imul
push
sub
mov
notl
test
adc
jg
je
inc
sbb
pop
gs
sti
pop
cli
js
pop
cmp
pusha
xchg
cli
std
pop
sbb
sbb
aad
adc
push
rolb
dec
int
into
test
push
das
scas
lcall
mov
int
xor
sbbl
sti
sub
cmp
ficoms
pop
and
nop
mov
lahf
cmp
jns
mov
dec
sbb
dec
xchg
push
push
mov
fiadds
sub
push
pushf
xor
popf
push
jmp
movsl
outsl
sub
or
popa
nop
xchg
inc
pop
adc
xor
jp
lds
jno
lahf
iret
test
sbb
int3
pushf
out
idivb
cmp
mov
mov
sub
lods
cmc
xor
testb
pop
leave
addb
mov
ret
cmc
mov
cmp
push
pop
pop
out
shlb
cmpsb
in
pushf
rcrb
inc
xchg
push
push
and
push
addl
adc
stos
testl
jge
jb
bound
ljmp
pushf
mov
or
jno
subb
sub
rolb
fdivrl
out
repz
jl
mov
jmp
lock
lcall
push
dec
sub
cld
pop
je
add
les
flds
mov
loopne
add
lods
push
fidivrl
and
loope
je
fistl
mov
popa
xchg
inc
push
fs
sti
movsl
adc
lock
push
ret
xchg
inc
pop
in
std
and
adc
test
ja
frstor
nop
mov
sbb
fsubs
cmp
mov
jbe
pop
dec
jecxz
xor
inc
notl
ja
dec
xor
xchg
add
push
mov
push
fildll
in
xor
dec
sub
nop
call
out
dec
or
jo
mov
movsl
sub
or
repz
out
cmc
xor
sbb
movsb
ljmp
fwait
sub
ss
jl
lcall
xchg
movsl
lods
pop
stos
xchg
sbb
in
fsubs
loope
insl
divb
dec
sti
sub
sub
movsl
or
and
data16
pop
cmp
popa
inc
sti
stos
iret
lea
and
push
das
pop
dec
inc
xchg
movsl
stc
push
pop
xlat
sbb
fucomp
xor
jecxz
jnp
out
adc
mov
push
das
movsl
cld
mov
xchg
sub
push
adc
hlt
pop
cmp
fcmovne
mov
jnp
lods
mov
push
xchg
jecxz
sahf
ds
pop
arpl
adc
ds
fbld
leave
mov
pop
push
xchg
mov
xor
push
and
fucomp
or
and
in
sub
test
out
sbb
stos
lods
test
push
pusha
pushf
mov
dec
sbb
stos
xor
mov
add
push
jo
pop
dec
and
sub
mov
jle
mov
adc
ljmp
jecxz
inc
lahf
imul
fs
cli
sub
je
insl
or
or
add
xchg
gs
xchg
mov
cmp
data16
std
into
xchg
cmp
je
movsl
in
sarl
lock
adc
ret
lds
out
into
stc
je,pt
pop
add
xor
das
xor
and
lret
pusha
sar
ja
je
jecxz
or
and
pop
mov
rcrl
rcrb
pop
stos
mov
das
test
mov
or
shrb
cmp
push
push
and
and
imul
call
fs
outsl
pusha
lahf
xor
lea
dec
mov
ds
rorl
dec
add
mov
aam
mov
fimuls
cmp
and
shrb
ja
or
mov
aaa
mov
lds
icebp
add
xchg
sbb
dec
or
adc
out
cmc
rcr
push
mov
dec
xchg
mov
mov
enter
add
cs
adc
insb
jmp
sbbb
fdiv
add
jmp
add
or
push
mov
loope
in
das
jne
stc
sub
nopl
pop
outsl
mov
inc
arpl
jo
inc
movsl
jecxz
mov
push
cli
out
repnz
pop
add
jb
mov
loop
movsb
repnz
leave
sarl
mov
lods
pop
rorl
jno
stos
outsl
push
add
cmpsl
js
outsl
ja
sbb
cmp
jae
add
mov
mov
shl
mov
add
es
lahf
loopne
pop
jns
nop
inc
mov
inc
dec
adc
ja
mov
ror
mov
fbld
mov
mov
jno
mov
test
je
sbb
fldt
negl
and
in
jge
adc
rcrb
lods
call
jl
loop
aam
jbe
pusha
mov
les
lock
sub
push
jno
sti
add
mov
je
adc
insb
call
push
and
js
movsb
divl
inc
in
in
inc
dec
push
mov
test
sub
xor
fildll
loopne
mov
popa
dec
jecxz
leave
jns
lea
fldenv
ljmp
jmp
mull
mov
hlt
mov
mov
outsb
sub
bound
and
pop
lods
sbb
mov
pop
pop
xor
adc
sub
je
dec
in
lea
loopne
pop
and
mov
out
and
xchg
cmp
loop
dec
mov
daa
icebp
inc
adc
mov
std
xchg
notb
mov
je
inc
sahf
xor
ja
mov
mov
or
xchg
mov
lds
push
add
inc
hlt
je
jno
and
jb
std
testl
xchg
jno
out
xor
xchg
repnz
adc
stos
bnd
arpl
dec
outsb
adc
mov
lcall
cwtl
lods
sub
pop
cmp
sub
in
popa
xchg
sahf
and
xchg
mov
mov
out
cmc
push
fcomi
outsb
and
push
or
sub
aas
lret
cs
mov
mov
adc
cmp
push
popa
popa
mov
jl
sbb
sbb
mov
outsl
std
filds
das
sbb
es
std
and
cmp
hlt
sub
push
in
shrb
mov
sub
hlt
push
ss
mov
stos
test
rcll
sbb
pop
pop
pop
incl
cmp
fisubrs
movsl
cwtl
clc
ret
pop
jno
and
stos
pop
addl
dec
cmp
test
mov
mov
insb
push
push
shll
mov
pop
mov
ja
sti
pusha
shll
aaa
cmp
add
or
xor
mov
and
push
ret
push
lahf
ret
icebp
test
cmp
add
push
adc
fnstcw
pop
stos
mov
js
and
out
adc
pop
or
xor
inc
hlt
mov
pop
test
or
push
fsub
cmp
xor
fwait
or
mov
pop
jle
lahf
sbb
fimull
fisubrl
ret
add
repnz
inc
stos
cmp
das
hlt
lret
xchg
add
pop
imul
pop
inc
mov
lret
sub
sahf
mov
xchg
xchg
sahf
loope
subl
add
stos
nop
mov
imul
insl
jae
cmp
hlt
inc
imul
xor
nop
push
push
pop
push
in
popf
stos
mov
push
faddl
in
adc
pop
sub
pop
leavew
dec
pop
jae
sbb
sahf
mov
jmp
movsb
divb
popf
push
andb
xchg
or
imul
adc
jno
adc
scas
out
insl
popa
sti
xchg
mov
push
sub
mov
in
shll
xchg
xor
mov
push
nop
cmp
insb
adc
lahf
adcb
fstl
stos
xor
bound
jp
mov
cs
xchg
add
lahf
in
xchg
pop
insl
mov
scas
xchg
mov
dec
inc
enter
nop
mov
pop
mov
scas
fcomps
repz
stos
dec
xchg
out
into
xlat
pusha
push
mov
ret
ja
pop
xlat
hlt
jl
insl
cmp
aam
push
inc
loope
jecxz
sbb
pop
imul
or
mov
aad
test
mov
insb
push
pop
daa
or
call
sahf
mov
dec
push
movsl
out
sub
mov
ret
pop
cmp
adc
ja
scas
mov
and
pop
jecxz
mov
pushf
hlt
in
mov
not
test
fs
mov
outsl
pop
or
hlt
mov
mov
inc
inc
mov
popa
xorl
sbb
pop
push
dec
mov
icebp
sub
and
cli
cmp
dec
les
addl
sub
jmp
mov
aam
push
mov
roll
dec
mov
test
lcall
les
mov
mov
and
lahf
xchg
stc
in
push
pushf
push
inc
fistpll
pop
add
int3
add
clc
push
xchg
mov
repz
pushf
sub
mov
clc
lret
out
adc
js
jecxz
fsubp
pushf
mov
lds
call
inc
int
xchg
add
mov
shl
adcb
add
bound
stos
add
lods
xorl
pushf
cmp
mov
test
dec
mov
ds
lods
jnp
mov
int3
cli
lock
cmp
out
inc
js
out
mov
push
xchg
sbb
add
adcb
outsl
cld
pop
push
popf
into
dec
sub
in
std
and
je
fcmovnu
loope
xor
push
jle
cmpsl
lods
test
in
or
out
xor
mov
mov
xchg
dec
xchg
clc
xchg
aam
rcl
loope
xchg
add
rorl
ljmp
ret
out
cltd
push
xor
ss
cmc
jl
inc
in
add
bound
mov
push
scas
rol
xor
lods
or
in
stos
std
jl
es
mov
test
lds
cmp
insb
push
lods
ja
out
daa
inc
mov
cmpsb
ret
decb
add
push
in
cwtl
roll
loop
dec
sbb
mov
mov
cmp
jge
mov
push
stos
or
lock
and
mov
leave
xchg
decl
addb
nop
sbb
mov
js
fldt
pop
or
cmp
imul
out
shll
or
push
fadds
push
xlat
or
lahf
roll
pop
bound
cwtl
mov
stc
or
lock
adc
mov
adc
sbb
dec
jmp
test
ss
in
loope
adc
lods
imul
sub
gs
cmp
icebp
std
sti
inc
ret
aas
into
movsb
cmp
popf
rclb
xchg
dec
push
lds
stos
imul
in
test
lock
sbb
adc
jle
in
imul
and
mov
jne
hlt
push
jo
xlat
adc
scas
mov
jmp
cmp
and
jmp
dec
cmc
jne
mulb
push
inc
cld
sub
xchg
jae
cs
adc
in
ret
mov
nop
leave
pushf
jb
ret
insb
pop
test
add
cmp
cmc
mov
mov
xchg
and
pop
movsb
fsubr
mov
mov
daa
imul
or
jge
out
lds
jb
clc
icebp
dec
dec
xchg
fnstsw
push
stos
gs
fs
inc
ficoms
pop
sti
push
dec
in
sbbl
cmp
jle
fcoms
loopne
xor
cwtl
push
insb
mov
pushf
cmp
mov
outsb
push
jmp
and
cwtl
loop
xlat
and
push
sbb
xor
mov
out
mov
lret
adc
lods
add
test
es
pop
test
add
pop
sub
lcall
xlat
fstpt
fildl
idivl
inc
inc
jge
and
xor
ja
mov
jo
out
mov
insl
ljmp
das
icebp
movsl
adc
sar
int
mov
mov
inc
push
repz
mov
jge
lahf
mov
pusha
roll
cmp
out
adc
mov
pusha
dec
std
sbb
popl
lods
mov
dec
pop
jne
fisubs
jne
cltd
push
sbb
push
xlat
clc
pop
stos
aad
lret
push
fiadds
outsb
and
and
dec
icebp
dec
outsl
cltd
xchg
xor
jae
xlat
sub
gs
xchg
xor
xchg
add
lret
sbb
push
mov
fcomps
xlat
dec
sub
push
adc
pop
testb
push
sbb
enter
xchg
mov
pop
and
cmp
jmp
inc
push
sub
mov
es
cltd
jmp
leave
jmp
mov
and
pop
inc
push
mov
adc
add
and
pop
push
dec
test
sbb
daa
lret
imul
sub
ret
pop
pop
data16
ret
inc
arpl
mov
loope
iret
pushf
push
aam
sub
dec
subb
mov
out
sub
jae
imul
repnz
xchg
jle
sti
lds
adc
cmp
sub
aam
add
in
movsl
lahf
aad
add
push
bound
cmp
inc
jno
and
test
out
jge
lea
adc
arpl
js
pusha
ljmp
divl
inc
inc
nop
in
pop
dec
movsb
mov
dec
xchg
jge
gs
out
xchg
out
xor
bound
push
fistpl
jmp
aam
adc
enter
add
inc
add
nop
cmp
and
push
mov
and
mov
and
enter
aad
mov
aas
adc
test
out
xchg
aaa
cltd
lret
xor
outsl
mov
mov
sub
jg
mov
push
sbbb
out
inc
and
repz
outsb
pushf
ja
aad
aad
ret
or
fwait
scas
jae
flds
push
ret
or
adc
push
jns
lahf
xchg
rolb
imul
mov
cmc
scas
outsb
and
push
ds
ds
adc
iret
push
add
insl
cmp
push
pushf
clc
out
adc
jne
clc
fcomi
pop
fnstenv
outsl
cmpsb
popa
pushf
xchg
sti
out
push
in
push
dec
cs
xor
cld
push
push
sbb
sarb
test
push
aaa
sub
jp
jg
out
lahf
mov
dec
aad
add
or
in
popa
test
adc
jecxz
cwtl
fwait
mov
fistl
xor
cmpl
xor
push
leave
imul
jbe
or
lret
test
inc
ss
or
pop
mov
xchg
mov
inc
lods
sbb
arpl
stos
stos
sbb
jle
push
stc
mov
scas
dec
fisttps
fistl
sbb
lds
xchg
mov
and
sti
push
dec
dec
pop
cmc
sub
mov
scas
sub
insl
dec
retw
ljmp
dec
std
rep
out
lret
dec
lcall
dec
lea
daa
outsl
std
movsl
fists
mov
add
xchg
jecxz
mov
mov
test
pushf
sbb
pop
pusha
hlt
fnstcw
out
mov
std
aas
in
pusha
sarl
lea
add
sub
sbb
lock
outsl
int
repz
and
xor
or
sbb
dec
imul
repnz
xor
cltd
jge
out
cmp
push
add
arpl
add
addl
std
pop
pop
xchg
out
int3
in
xor
push
ret
jae
cmp
xchg
sbb
add
and
hlt
icebp
fsubrl
sub
imulb
adc
jns
mov
dec
icebp
mov
cld
jge
xchg
std
mov
pop
out
xchg
jb
aam
cli
fsubl
pop
incb
aas
js
or
dec
imul
add
sub
or
ret
sbb
ret
ja
push
sbb
scas
call
push
into
dec
mov
or
mov
in
imul
fs
clc
mov
push
clc
mov
xor
int3
cmp
xchg
int
pop
test
aad
push
push
mov
das
cli
cltd
leave
cmc
cli
adc
enter
rolb
aam
imul
lahf
dec
mov
fs
fnsave
int3
xor
pop
shrb
and
mov
mov
jo
neg
inc
ja
movsl
in
dec
std
jbe
imul
cmpsb
cmp
jg
dec
fimuls
add
inc
push
enter
mov
cmpsl
lods
mov
jo
mov
sub
add
cmp
fidivs
stc
add
arpl
adcl
in
fiaddl
mov
les
add
or
inc
adc
pop
xchg
mov
xor
fwait
add
lret
sub
mov
sub
sbb
mov
lock
cli
test
ds
addb
shr
int3
mov
mov
aad
xor
mov
or
dec
push
add
or
add
push
frndint
sub
cltd
xchg
pop
sbb
add
rcrl
jge
dec
stos
xchg
mov
dec
inc
dec
lret
mov
xchg
jnp
rep
jno,pn
or
int3
test
sbb
rorb
lea
or
add
push
pop
out
jae
xlat
iret
push
xor
jl
jl
lods
inc
arpl
stc
outsl
pop
mov
lahf
xlat
sbb
cli
xor
push
push
jns
inc
push
clc
add
mov
xor
sub
out
adc
dec
adc
fs
ja
inc
call
sahf
inc
jge
xor
xchg
out
lahf
jmp
aam
jno
jno
cmp
sbb
in
mov
inc
pop
mov
sub
pop
and
imulb
shr
xchg
inc
adc
stc
inc
lret
cmp
push
ficoml
call
int3
mov
xchg
loop
dec
cmp
fwait
subb
pusha
bound
or
lret
sbb
jl
mov
call
mov
lock
xchg
sub
das
mov
movsb
add
mov
orl
scas
iret
sbb
pop
pop
sub
dec
and
mov
dec
das
call
xchg
jbe
sarb
int3
imul
sub
in
arpl
cmp
imul
add
sub
xor
jo
cld
cld
je
lods
xchg
loop
mov
fcmovnbe
sub
add
addl
cmp
pop
inc
mov
jg
mov
out
inc
sbb
test
int
pop
fnstcw
cmp
lahf
pusha
xor
loop
or
fwait
xchg
push
mov
icebp
lret
stos
mov
xor
aas
gs
cld
mov
mov
xchg
ds
addr16
cmp
add
xchg
fwait
add
inc
pop
jae
mov
shll
test
jecxz
std
push
hlt
mov
js
mov
fcoms
pop
addr16
out
addb
lret
dec
in
jo
jmp
mov
fisubrl
test
jb
jl
adc
loope
jnp
dec
adc
jl
gs
cmc
or
cmpsb
mov
mov
mov
push
cwtl
repz
fs
xor
scas
ret
scas
push
in
rorl
and
fisttps
cmp
ja
sbb
mov
repnz
addps
add
pop
insl
insl
pop
lods
sbb
xor
cmpsb
xor
iret
mov
and
sub
cmc
imul
and
jno
sahf
les
xlat
out
push
cmp
insb
out
aad
jo
add
pop
arpl
lods
sub
sub
cltd
das
insl
rclb
leave
out
sub
sub
jns
mov
mov
shlb
cmp
fstpl
xlat
test
xchg
roll
pop
add
push
jne
add
mov
je
or
jnp
inc
out
daa
push
mul
pop
or
mov
sarb
mov
push
xchg
add
out
jle
repnz
adc
lock
or
outsl
lcall
xchg
pop
xchg
xchg
int3
sbb
or
push
sub
loop
incl
adc
cltd
outsl
into
ffreep
inc
mov
jo
or
repnz
mov
movsl
dec
pop
int
jnp
sub
scas
dec
paddsb
int
aad
mov
inc
dec
jnp
cli
arpl
xchg
mov
push
jge
inc
fs
int3
mov
mov
test
jbe
adcl
xor
lret
sbb
jno
call
outsl
mov
popf
lcall
int
jb
pop
and
repz
fdivs
incl
repz
fwait
add
movsl
inc
or
sub
mov
cmp
xor
lret
or
mov
lret
scas
mov
or
cmpsl
testb
fimull
shrl
adc
sub
lods
sbb
pusha
das
fisubrs
sti
fdivl
in
lahf
cwtl
mov
inc
mov
and
inc
adc
cmp
mov
pop
test
adc
sub
in
mov
sub
inc
call
repz
jge
add
lods
stc
mov
dec
popfw
push
cmp
scas
push
cwtl
insb
lods
lret
push
notl
fadds
jae
sbbb
sub
inc
mov
jp
xor
iret
or
add
pop
aaa
out
aas
pop
cmc
rcrb
pusha
sub
mov
mov
out
pop
cmp
mov
in
and
fldt
int3
je
pop
push
sbb
xor
pushf
inc
and
xchg
test
xor
mov
icebp
jle
adc
sub
xchg
fidivs
scas
dec
std
pop
into
imul
adc
sbb
cmpsb
push
mov
sbb
jbe
insl
push
dec
pop
mov
mov
imul
xlat
shll
sbb
xchg
mov
jnp
pushf
mov
fldenv
rorb
mov
xchg
mov
push
sbb
movsl
scas
sub
or
sarl
dec
xor
fildll
pop
lods
or
cmp
xchg
dec
leave
mov
jbe
repz
hlt
mov
inc
aaa
lcall
mov
xchg
pop
jecxz
repnz
jg
int3
fldcw
jns
or
jp
ret
fxch
clc
mov
mov
jecxz
test
or
sbb
mov
shll
dec
test
mov
ss
mov
push
pushf
in
test
xor
mov
inc
nop
sub
je
adcb
in
popf
in
jmp
xbegin
dec
repz
ljmp
imul
xor
mov
mov
jp
jge
adc
dec
test
fldenv
mov
lods
fisttpl
mov
pop
das
mov
push
sar
push
lea
mov
test
push
mov
pop
dec
inc
mov
hlt
xor
dec
or
add
xor
inc
lods
mov
adc
xchg
pop
fiaddl
ljmp
dec
pop
cmp
dec
shlb
nop
stos
adc
lock
inc
lcall
mov
into
jmp
or
int
and
scas
pop
and
repz
add
sub
push
test
stos
mov
ja
xchg
fidivrs
or
or
fnstcw
push
or
sbb
adc
cld
adc
mov
cmp
test
sbb
fistpll
mov
popf
or
imul
mov
add
dec
jo
fldenv
xor
fdivrs
int
iret
bnd
jge
xchg
lret
push
jl
shll
mov
inc
xor
pop
bnd
push
jno
pushf
mov
jns
arpl
test
cmp
cmpsl
mov
fwait
jns
daa
add
clc
xchg
inc
pop
mov
pop
mov
sub
rcrl
test
adc
fbld
mov
xchg
sbb
iret
dec
decl
loop
or
int
dec
mov
lods
loope
push
icebp
mov
outsl
iret
pop
dec
mov
movsb
int3
inc
and
jecxz
mov
xor
jle
push
sar
out
xchg
xlat
jb
add
push
pusha
mov
sub
test
jmp
adc
mov
mov
sahf
mov
adc
hlt
sbb
dec
ds
dec
and
sarl
outsb
scas
and
fimull
inc
push
cli
xor
cmpsl
call
outsl
and
das
insb
loopne
add
jbe
aas
xlat
in
fs
hlt
mov
test
mov
xchg
mov
sbb
std
mov
mov
cmp
mov
dec
pop
andb
cmp
push
inc
pop
popf
xchg
jns
sbb
or
xchg
sti
popa
jae
xchg
cmp
push
sub
movsb
lea
cmp
shrb
fldl
dec
fbstp
push
int3
mov
xchg
scas
fsub
cs
push
and
mov
pop
jge
xor
jae
sti
pop
push
add
lret
sarl
roll
mov
mov
sbb
xchg
jo
ret
enter
push
je
andb
lcall
add
jb
aad
dec
sbb
jle
inc
and
sbb
std
jns
xchg
sbb
cmp
cmc
repnz
into
icebp
mov
out
cltd
scas
test
outsl
cmc
mov
sarl
jp
mulb
pushf
in
sbb
aam
sbb
cmp
jl
and
cmp
hlt
bound
cmp
inc
repz
popf
mov
mov
mov
mov
dec
add
and
mov
sub
out
ja
xchg
fidivl
insb
lret
xlat
movsl
fistl
sub
imul
sarb
aas
mov
mov
pop
mov
js
xchg
jp
or
lock
insl
mov
sbb
pop
iret
mov
and
cmpsb
mov
adc
sub
push
push
cmp
repnz
movsb
and
sahf
cmpsl
and
xchg
les
push
enter
lds
in
cld
push
stos
jge
jo
jne
dec
inc
cmp
imul
or
cltd
push
cmp
scas
adc
xchg
repnz
repz
xchg
ja
inc
push
ret
cwtl
test
stc
push
sub
add
inc
rcr
pop
mov
xchg
out
sar
push
andl
fcoml
cmpsl
inc
bound
ss
dec
add
ja
add
jp
xor
lds
inc
imul
add
pushf
push
and
push
mov
push
dec
mov
xchg
clc
inc
mov
push
hlt
adc
loop
andl
dec
iret
add
lret
pop
pop
aad
lret
push
stos
fwait
rcrb
inc
leave
loope
fdivrl
hlt
enter
loope
lods
mov
or
popf
xchg
push
mov
push
add
inc
and
cmp
adc
pop
jp
jno
push
sar
adc
cmp
cmp
jmp
mov
lret
inc
mov
in
dec
push
shrl
loope
dec
sub
mov
subl
js
cmp
push
mov
mov
popa
dec
ficoml
std
fimuls
cmp
mov
sbb
xchg
lcall
pop
enter
arpl
pop
movsb
xor
std
mull
sbbb
push
cltd
push
sti
in
imul
mov
lret
and
add
ret
pop
into
cmc
inc
pop
and
mov
mov
mov
fbld
mov
pop
jae
cmp
or
or
add
movsl
pop
je
les
sub
inc
mov
sbb
test
rcrl
xchg
andb
xor
mov
in
popf
jge
or
sbb
scas
jno
add
add
jmp
in
sub
xchg
cmp
dec
shlb
mov
and
ficoml
sub
xor
pop
out
push
ljmp
cli
dec
stc
mov
shll
or
sti
in
stc
cmp
add
jns
lea
mov
and
repnz
adc
adc
pop
loope
aaa
psubsw
mov
outsl
xchg
out
mov
rorb
jg
aaa
into
pop
sbb
insb
fsubl
in
repz
push
jnp
cltd
xchg
jne
test
and
xchg
push
mov
pop
insl
std
mov
sbbl
popa
xchg
adc
cmc
sub
ljmp
adc
subb
test
and
mov
fnstenv
xchg
push
scas
inc
mov
sbb
dec
xchg
in
pop
inc
dec
cmp
das
push
add
nop
mov
push
negl
in
sbbb
movsb
pop
push
lock
jle
in
xor
dec
dec
cmp
out
push
xchg
push
sahf
inc
mov
mov
lea
xchg
aas
mov
pop
mov
jp
xchg
xchg
xchg
xchg
test
addr16
pop
jmp
fwait
and
push
adc
test
push
mov
shlb
shl
fs
pop
xchg
mov
orb
mov
cmp
pop
inc
xchg
xor
out
xorl
lahf
mov
icebp
int3
jne
int
xor
xchg
rcll
movsl
mov
scas
mov
or
push
jb
add
rclb
push
inc
cmp
jg
xorl
lahf
ja
sti
sbb
iret
lret
mov
or
imul
mov
pop
push
jae
lcall
ja
jmp
stos
insl
dec
ds
cmpsl
dec
lea
or
xchg
pop
jno
adc
xchg
ret
xchg
adc
or
std
add
out
push
aam
mov
adc
hlt
ret
ret
push
ret
leave
in
fistpll
lea
outsl
pop
mov
nop
rcrl
pop
inc
into
adc
outsl
lret
test
orb
lahf
je
mov
add
hlt
ja
leave
mov
test
mov
arpl
mov
mov
je
push
dec
cltd
popf
rolb
add
cs
pop
push
clc
mov
xor
or
pop
cmp
rcrl
es
push
cld
jmp
aad
jl
in
outsl
sbb
inc
int3
or
inc
fwait
xchg
jle
mov
add
imul
rclb
adc
xor
je
or
rclb
rorb
cli
push
test
out
pop
xchg
or
and
mov
in
lock
shlb
mov
xor
mov
mov
mov
sub
ret
mov
and
test
mov
and
subl
push
shrl
jno
in
xor
iret
xchg
daa
xchg
and
fidivl
cli
sub
mov
xchg
mov
iret
sub
adc
mov
or
cmp
scas
pop
inc
xor
push
icebp
sahf
lods
ss
sub
inc
lds
jo
push
out
dec
push
mov
fimuls
and
mov
add
push
int3
orl
jnp
fs
out
stos
and
popf
mov
inc
movl
jne
xlat
and
std
loop
sbb
cmp
stc
pop
insb
fdivs
loop
fs
mov
repz
inc
icebp
repz
sub
out
arpl
scas
xor
sti
nop
into
xchg
or
cmp
dec
pop
ds
sub
bound
nop
scas
pop
mov
inc
or
push
mov
insl
fistpl
imul
gs
mov
jne
scas
xor
sbb
sbbl
push
pop
adc
test
or
cld
lods
inc
lock
push
sahf
adc
mov
fs
and
xchg
cltd
mov
stc
or
dec
aas
mov
std
or
mov
push
cmp
cmp
test
cmpsl
mov
sbb
mov
in
jbe
or
outsl
movsl
outsl
call
push
shrl
jmp
cmpsb
jns
mov
call
push
out
sub
jb
das
nop
js
out
xchg
jno
nopl
mov
jmp
test
les
mov
loope
test
cld
or
shrl
dec
fadd
push
rcl
js
jp
xchg
mov
jbe
adc
jmp
and
xchg
jb
and
mov
enter
inc
push
jle
push
mov
xchg
add
sti
sub
push
and
movsb
jb
movsb
and
sub
cli
mov
xchg
mov
jno
nop
sbb
dec
mov
ds
int
jae
dec
inc
fldl
into
rcr
jo
adcb
aas
sub
aaa
sub
jl
imul
data16
popa
mov
in
clc
int3
pop
sub
xchg
pusha
mov
lea
push
lods
dec
dec
jne
add
js
xor
test
mov
jmp
rcl
nop
test
loopne
add
notl
adc
xchg
push
pop
mov
fldl
and
inc
sub
fildl
dec
clc
push
int
or
scas
pop
push
adc
movsl
dec
scas
es
mov
dec
cmp
pop
lods
adc
sahf
xor
dec
jmp
mov
mov
aas
xchg
pop
jp
push
add
xor
aam
rorb
xchg
mov
shlb
mov
add
sbb
test
popa
data16
adc
loopne
int3
pop
pop
sub
daa
inc
cltd
sub
or
pop
fs
lcall
ljmp
push
lods
das
lret
or
xor
enter
shll
pop
lret
inc
test
or
or
inc
lret
shll
xchg
cs
mov
arpl
std
pop
fdivrs
ret
mov
jo
cli
ret
inc
mov
xchg
sbb
xchg
pop
ja
outsb
or
adc
push
psllw
aas
or
mov
sbb
push
cmp
pop
and
in
cmp
fdiv
shrl
lcall
std
jecxz
sarb
outsl
dec
loopne
or
call
mov
pop
add
push
cmc
push
insl
hlt
or
movsl
in
sbb
xor
in
jnp
fwait
stc
out
test
jl
sbb
dec
movsb
sub
test
stos
inc
xchg
pop
ret
scas
inc
push
mov
jo
aas
fwait
clc
push
hlt
repnz
mov
jecxz
push
jbe
bound
sbb
aas
push
or
add
or
test
inc
fwait
or
cmp
mov
lock
mov
aad
dec
mov
repz
loope
and
in
int3
jno
rcl
xor
adc
std
fistpl
sub
mov
sbb
or
clc
andl
cmc
loopne
jp
das
inc
mov
add
in
mov
mov
imul
clc
mov
popf
add
jo
jl
cmp
jg
mov
add
fadds
test
int3
gs
out
movsl
dec
cmpsb
adc
cmp
lea
jae
movsb
cmpsb
jecxz
sarl
cld
lea
aad
sub
gs
je
idivb
sbbb
and
movsl
pop
jmp
fwait
mov
cmp
mov
mov
call
incb
mov
nop
jb
mov
ds
sub
js
push
insl
fadds
mov
push
enter
pop
xlat
mov
std
sbb
adc
cmp
fs
push
shrb
sub
pop
mov
jno
inc
shrl
mov
aam
loope
cmp
pop
ss
add
xchg
and
or
dec
mov
cwtl
fwait
jp
adc
cmc
test
scas
ja
sub
jne
subb
cld
leave
outsl
inc
dec
and
lods
mov
mov
fwait
pop
icebp
movsl
add
gs
push
cmp
pushf
and
dec
outsb
push
adc
fsubrl
adc
repz
adc
adc
jno
mov
inc
js
andl
stos
pop
add
stc
fsubrs
mov
pop
jo
push
xchg
cwtl
outsl
mov
xchg
adc
testb
jl
jmp
push
rcrb
adc
jp
test
shll
je
int3
xchg
insl
fists
mov
pop
pop
subl
or
gs
fdivrl
or
inc
inc
lahf
mov
jb
sub
lods
mov
push
fwait
mov
inc
loopnew
rclb
mov
filds
xchg
fldl
setnp
icebp
cmp
pop
icebp
mov
fists
inc
xlat
subl
cmp
test
cmpsl
sub
or
std
xchg
aad
cmp
jp
sub
lds
mov
imul
add
sbbl
dec
jg
loop
icebp
mov
pop
or
sub
mov
dec
daa
add
sub
xlat
hlt
ja
or
push
icebp
gs
cmp
dec
imul
repz
xchg
mov
fcmovb
enter
paddsw
ret
mov
sub
adc
xor
jg
test
push
outsl
xlat
inc
stos
cmpsb
pop
flds
dec
sub
les
sbb
shrl
popf
fwait
add
cmp
fnstsw
mov
xchg
mov
inc
push
aad
and
xchg
mov
cmp
fs
into
xchg
sbb
testb
out
cmpsb
xchg
cmp
push
pop
int
scas
cmc
xchg
mov
clc
xor
sbb
or
loopne
fucom
enter
flds
insl
add
jl
mov
icebp
psraw
dec
lret
push
dec
mov
cmp
test
cmpsb
cmc
cmp
lock
mov
sub
pop
das
xchg
fstp
icebp
dec
insb
lock
mov
sub
xor
xorb
push
jg
push
mov
insl
cmp
sub
adc
pop
xor
lret
adc
cli
ret
es
xchg
fldcw
sub
cmpsl
adc
xor
in
cmp
iret
add
inc
icebp
pop
or
shlb
loop
mov
jg
aaa
stos
into
and
xchg
les
xchg
cmp
movsl
jns
push
dec
ja
push
aaa
cmp
mov
jl
jge
add
sbbl
lock
jae
sbb
adc
push
jg
addr16
dec
nop
add
out
addr16
pop
insl
and
lret
mov
loopne
mov
adc
sub
addb
inc
mov
jp
push
sbb
xchg
mov
ja
xchg
jmp
lds
aaa
sbb
pop
addr16
lret
push
dec
inc
dec
push
xor
add
jg
and
sub
in
pop
and
jmp
popa
or
and
shrb
push
xlat
out
insb
in
fcomps
test
mov
cmp
mov
inc
pop
pop
push
stos
test
push
lahf
or
push
sub
pop
testb
into
pop
int
cli
mov
push
xchg
pop
and
mov
lcall
fs
adc
xchg
xchg
popl
aaa
jecxz
xchg
not
mov
ret
lcall
inc
add
mov
pop
in
fiaddl
xchg
sbb
rcrb
rcl
xor
pop
mov
push
ss
push
mov
pop
pop
fdivp
sub
lods
push
mov
es
add
shrl
pop
mov
push
pusha
out
cmp
xor
pop
and
divl
ret
loopne
xor
inc
imul
cmp
or
sbb
addb
or
cmp
add
mov
push
in
pop
popf
sbb
pushf
push
adc
inc
mov
push
mov
ja
sbb
mov
jne
mov
push
xchg
in
roll
jne
insl
pop
or
jge
outsl
outsb
ds
stos
lds
and
fadds
movsb
loop
dec
adc
add
mov
add
cli
out
testb
add
aaa
fnstsw
les
inc
push
jne
cld
lahf
jne
sub
insb
mov
add
stos
nop
mov
fldcw
out
clc
mov
dec
sahf
inc
mov
gs
loop
pop
add
ss
roll
movsb
test
dec
imul
dec
cmp
jb
iret
daa
icebp
and
mov
in
lret
pop
mov
rcrb
in
out
lods
mov
mov
push
sti
in
sbb
inc
push
mov
pop
cmpsb
mov
pop
test
push
addb
inc
mov
pop
imul
mov
scas
push
out
add
sbb
ret
lods
jb
and
inc
jg
push
and
adc
sahf
das
fadd
inc
out
add
stos
mov
mov
cmp
cmp
sbb
mov
mov
insl
or
movhps
ror
mov
xchg
jnp
stos
xchg
add
pusha
call
out
out
sti
in
test
sub
in
stos
mov
cmp
loope
mov
jle
pop
adc
xor
pop
cli
outsl
je
push
popf
xlat
mov
push
or
add
test
inc
sarb
dec
gs
push
es
ds
cmpsb
test
mov
dec
in
pop
outsb
sti
cmc
mov
mov
cmpsb
dec
push
sbb
data16
arpl
lret
loop
clc
loopne
ds
push
lods
repnz
imul
imul
sub
push
mov
jo
sbb
cmp
dec
xchg
xor
dec
sti
lcall
loop
pop
ljmp
push
mov
call
push
inc
shr
adc
add
mov
mov
lcall
mov
pop
mov
xchg
lea
push
mov
je
sub
lahf
pop
mov
lret
mov
cmpsb
daa
cmp
pop
push
push
pop
inc
out
clc
jnp
or
repnz
and
test
popf
mov
nop
inc
insb
addr16
rcll
add
dec
add
xchg
sbbb
fcoms
lea
cli
pop
mov
cltd
daa
movsb
adc
inc
adc
scas
mov
pop
xor
add
xchg
jecxz
fildl
jns
mov
in
mov
mov
or
and
inc
pop
fdivrp
xor
mov
stc
sbb
inc
dec
jbe
mov
rcrl
xchg
push
out
adc
xchg
inc
mov
test
cmpsl
sbb
pusha
cltd
pop
and
sbb
mov
cs
adc
fxch
es
and
sub
std
jle
mov
addl
sub
add
repz
dec
push
shlb
mov
mov
mov
into
mov
fldenv
dec
adc
into
mov
mov
aad
sub
adc
xchg
xorl
jnp
jle,pt
rcll
dec
jmp
cmpsl
mov
sarl
lods
or
pop
fs
dec
gs
add
jmp
mov
cmpsl
pop
inc
imul
adc
pop
xor
pop
and
mov
jg
scas
lock
add
gs
daa
dec
imul
pop
xchg
xchg
stc
adc
xchg
das
sbb
pop
fdivs
addr16
outsb
in
cmp
jo
rorl
lret
in
leave
mov
aad
imul
adc
push
imul
dec
inc
aam
ret
inc
loope
movsb
mov
cmp
js
lods
fildl
pop
pop
ret
ja
pop
push
fldt
loopne
push
gs
test
repz
cmp
push
fsub
jo
push
jb
mov
xor
ljmp
roll
add
push
xchg
push
mov
scas
dec
dec
xchg
mov
cmpsb
sub
dec
sub
shll
dec
xchg
fs
sbb
mov
or
scas
jg
es
adc
std
cmp
movsb
mov
mov
push
pop
push
movsl
scas
push
inc
push
popa
jb
pop
xchg
bound
dec
sub
into
sbb
dec
cmp
adc
shll
mov
mov
mov
cmp
mov
nop
inc
mov
push
xchg
out
or
scas
hlt
pop
xchg
jne
pop
gs
mov
ret
lock
rcll
fdivrp
lahf
into
jae
sub
mov
rcl
sbb
xchg
xor
pusha
xor
bswap
shrl
sub
cmp
and
inc
jle
insl
add
mov
push
in
test
xor
and
add
cmp
std
mov
fwait
dec
subl
in
mov
adc
lea
xor
cmp
push
cwtl
jmp
adc
pop
sbb
test
jbe
mov
lea
outsl
pop
or
mov
pusha
jbe
les
adc
dec
je
insl
mov
call
cmpb
push
and
pop
test
push
ds
test
pop
inc
ja
pop
scas
sti
xor
stc
aas
scas
dec
popf
mov
mov
popf
jmp
call
test
arpl
sbb
mov
call
call
mov
mov
xchg
ret
push
test
ljmp
push
sbb
sti
lcall
mov
dec
insl
lcall
test
mov
icebp
inc
cli
orl
daa
jg
enter
loop
pop
iret
sub
out
ds
fbstp
or
leave
mov
cmc
lahf
es
adc
xorl
loope
roll
inc
adc
xchg
cmp
add
gs
mov
mov
cmp
cmc
test
jle
sbb
xchg
push
js
jo
mov
repz
movsl
mov
xor
sbb
gs
das
stos
adc
mov
cwtl
sub
pop
push
or
loope
in
inc
dec
and
aad
add
sub
or
stos
frstor
insb
cmove
in
int3
in
in
mulb
fcmovu
xor
shl
test
mov
int3
int3
lock
push
sahf
cmpsb
jmp
aad
daa
loopne
push
jns
enter
add
add
xchg
jnp
cmp
imul
and
inc
mov
les
shl
push
mov
mov
adc
cmp
stos
sbb
mov
adc
inc
push
mov
or
in
mov
xchg
je
outsb
pop
cmpsb
rcl
jg
sbb
or
ja
xchg
sbb
mov
mov
stos
aad
jo
sub
add
adc
sub
add
dec
push
mov
dec
xchg
mov
loope
mov
mov
mov
fildl
out
mov
dec
in
mov
scas
fmuls
enter
pop
in
or
xchg
les
jg
push
push
lcall
dec
cmp
pop
ror
jbe
lret
iret
cmpsl
int
repz
out
add
pop
dec
in
inc
pop
cmp
mov
cltd
cwtl
lds
or
pushl
add
pop
call
mov
outsb
enter
cmpl
arpl
sbb
inc
testl
xchg
add
test
loope
out
das
push
sarb
sbb
fnsave
scas
out
add
test
jo
pop
mov
cmpsl
jl
test
or
pop
push
xchg
mov
test
fidivl
add
shrl
lock
mov
push
cmc
add
mov
sub
repz
mov
push
fsubrs
jne
mov
dec
or
inc
inc
xchg
inc
mov
jmp
adc
cmp
scas
inc
fwait
inc
push
loope
jb
dec
xchg
insb
inc
sbb
loope
sub
stos
fdiv
add
mov
test
pop
fs
divl
lods
bound
aam
push
inc
loope
jg
lds
mov
adc
cli
lock
jae
mov
pusha
sbb
or
sub
and
and
out
inc
add
repnz
jge
adc
bound
pop
mov
add
nop
push
mov
jae
adc
push
mov
test
outsl
inc
pop
xor
std
outsl
loopne
mov
test
test
aas
in
ja
mov
add
in
lock
adcb
add
aam
fcmovnbe
fidivs
xor
mov
cmp
push
pop
dec
pop
dec
mov
movsb
add
add
addb
aaa
or
jns
lcall
in
and
dec
cli
xor
hlt
fisttpll
add
lock
dec
in
mov
dec
je
xor
xor
loope
fists
out
sub
or
fdivl
adc
insl
arpl
ret
lock
mov
mov
test
ljmpw
mov
test
cmp
mov
xor
dec
jg
xor
cmp
sbb
out
mov
xor
pop
stos
xlat
pop
out
xlat
sbb
sbb
cmpsb
jl
lea
xchg
inc
jo
dec
cmp
cmp
jno
pop
mov
int
cwtl
popa
sbb
or
imull
roll
das
xorb
mov
xor
and
popa
push
cltd
test
mov
je
push
push
adc
js
sbb
movsb
je
sub
loopne
adc
push
xchg
je
fcmovnbe
xor
jnp
dec
cs
mov
cmpsl
fidivl
cli
in
es
inc
pusha
lret
xor
or
adc
sub
lea
cmp
or
jno
inc
push
adc
adc
dec
xchg
adc
xor
mov
repnz
ljmp
mov
mov
popa
mov
push
mov
sahf
outsl
pop
mov
lock
sbb
insb
push
or
mov
mov
test
adcl
rcr
call
stos
mov
fwait
adc
add
rclb
push
mov
xchg
addr16
out
xor
popa
inc
mov
or
imul
pop
movsl
pop
repnz
popf
ret
xchg
pop
push
inc
in
sti
cmp
xchg
and
inc
inc
mov
les
push
orb
movsl
flds
fmull
insl
inc
mov
inc
cltd
lret
push
mov
dec
ljmp
cmpl
insl
mov
test
pop
push
xchg
imul
insb
or
sub
jecxz
mov
xor
aam
movl
hlt
roll
push
lret
mov
or
xor
add
icebp
jb
mov
popa
inc
lahf
outsb
aaa
mov
loopne
int3
dec
add
mov
out
lea
idivl
push
inc
das
lods
pop
inc
push
push
inc
mov
ret
nop
mov
cmp
xchg
loope
fwait
out
das
sarl
xchg
lea
push
hlt
and
push
and
jns
jle
movsl
push
inc
and
icebp
jns
sahf
test
pop
push
lds
or
mov
mov
push
inc
pop
mov
fmul
pop
xchg
rolb
hlt
fistpll
inc
or
nop
or
dec
or
xor
add
and
mov
adc
lahf
mov
insl
ja
gs
ja
lods
and
ret
lcall
xor
into
scas
insl
stc
or
lods
repnz
add
nop
push
pop
mov
mov
jns
ja
stos
ss
push
lret
xchg
loope
cmp
sbb
push
aas
mov
dec
add
arpl
or
jle
out
popa
adc
mov
ret
lock
mov
pop
and
push
lea
fdivrs
cmpsb
lahf
cmp
or
call
jge
scas
mov
pop
fsubp
bnd
test
sbb
dec
jae
xchg
jae
das
enter
ja
and
dec
fnstcw
lea
stos
sub
loope
xchg
push
add
pop
test
fisubrl
fbld
aas
rorl
mov
push
jge
aaa
mov
inc
sti
sbb
mov
cmp
iret
inc
xchg
jg
aam
xchg
fmulp
cmp
ss
mov
push
sub
xor
das
in
add
icebp
adc
imul
sbb
dec
adc
aas
in
addr16
jno
inc
dec
ret
bound
push
int3
adc
test
mov
imul
inc
scas
ljmp
cli
ss
xchg
lahf
pop
insb
fstps
mov
or
cli
or
inc
jb
xlat
push
jb
pop
push
push
pop
pop
mov
or
leave
in
push
mov
inc
scas
lcall
nop
cmpsb
adc
mov
rep
or
add
dec
pop
dec
es
clc
push
cltd
xchg
xor
out
fidivs
push
mov
pop
test
loope
imul
xchg
outsb
clc
mov
clc
adc
adc
ss
pop
paddw
mov
aad
hlt
enter
lods
je
inc
test
es
lds
jmp
jnp
cwtl
pushf
clc
std
mov
fs
mov
and
lea
negb
pop
push
outsl
dec
mov
xlat
xchg
mov
jae
jbe
mov
jp
jg
cwtl
sub
es
arpl
into
insb
scas
cwtl
or
sar
xor
aam
push
xor
cmp
lahf
mov
nop
push
cld
jne
fnstcw
and
mov
mov
fistpl
jnp
pop
jecxz
mov
out
or
fdivrl
inc
mov
push
repnz
fdivs
adc
filds
inc
nop
movsb
andl
test
jae
ds
add
fs
push
xlat
mov
addr16
in
rcll
and
pop
ficoms
stos
pop
int3
lock
dec
in
fists
mov
enter
xor
mov
jge
mov
ss
mov
xor
es
adc
aas
adc
lret
aam
dec
dec
xchg
aad
int
popf
test
fdiv
adc
mov
bound
pushf
and
add
pop
hlt
ror
fdivl
repz
and
mov
popf
repnz
push
xchg
into
jmp
pop
push
cmc
divl
adc
dec
mov
xor
jmp
stc
and
mov
mov
lahf
in
mov
dec
xor
mov
aad
lds
push
pop
stc
push
outsl
jecxz
jne
dec
aaa
shrb
repnz
dec
fs
out
lds
and
lahf
shrb
adc
dec
mov
dec
cmp
push
gs
aam
sbb
mov
xchg
cwtl
out
jle
jg
add
aad
ret
cmp
sarl
int3
outsl
adc
or
lcall
test
inc
jmp
push
jmp
jmp
lds
test
pop
xchg
lret
mov
jecxz
repnz
cmp
xchg
jbe
das
pop
std
iret
cli
adc
jo
pop
mov
xchg
in
jp
mov
loop
andb
icebp
mov
xchg
aaa
int3
push
cwtl
cli
add
add
adc
sbb
imul
mov
pop
pop
mov
sbb
push
rcll
xchg
bound
sbb
or
cs
lock
xchg
cmp
test
in
or
test
fistpl
push
jl
or
xchg
push
jge
jge
ljmp
popf
sahf
push
stos
inc
dec
rol
js
mov
das
and
sub
fbstp
sub
movsb
jl
xor
sub
das
pop
push
into
mov
pop
ror
mov
cmc
and
and
jge
outsl
adc
and
sbb
jp
inc
pop
cwtl
stc
ds
inc
int
push
sti
add
inc
pushf
aad
clc
or
adc
add
fimull
dec
inc
add
js
jmp
mov
add
insb
sub
cmp
or
shl
pop
jne
pop
and
das
pop
xchg
lds
in
decb
mov
div
lods
inc
ja
pop
and
cmpb
jle
test
ds
push
sahf
adc
inc
xlat
pop
dec
rclb
std
mov
jns
rcrl
jp
enter
sub
inc
push
or
aad
sub
adc
mov
and
icebp
or
sbb
shrl
mov
outsb
scas
jmp
in
shll
imul
dec
dec
sub
mov
scas
mov
mov
sbb
aad
push
inc
stc
das
jge
push
or
jo
call
test
pop
ds
lods
mov
aam
ret
mov
ror
dec
inc
cwtl
fcomps
or
subb
mov
xor
mov
mov
rep
aad
adc
test
sub
mov
cltd
mov
jp
int3
popf
pop
dec
add
lds
push
push
adc
mov
ret
xchg
sbb
mov
stc
inc
call
push
nop
adc
push
xchg
and
pusha
sbb
mov
popf
cmc
cmp
cmp
fldt
xor
and
pusha
dec
rolb
arpl
xchg
js
daa
adc
movsl
pop
xchg
cmpl
test
imul
jno
jne
daa
cmp
xchg
out
call
aam
ds
aas
movsl
xchg
pop
pop
xlat
stos
and
mov
clc
xchg
scas
pop
dec
push
sub
mov
sarl
inc
icebp
jo
fwait
add
hlt
or
dec
subl
mov
repnz
adc
jbe
insl
and
dec
ret
xchg
adc
jo
push
pop
sarl
and
cmp
add
data16
adc
out
scas
xchg
sarl
sysenter
shrl
jle
insb
icebp
pop
cmp
sub
dec
pop
dec
shl
sbb
ficoms
cli
xchg
repz
into
in
jnp
fbstp
out
ja
test
jge
mov
push
mov
xchg
and
sbb
or
dec
filds
pop
lds
pusha
int3
mov
adc
mov
xlat
jno
cmc
lret
or
cltd
lock
data16
jne
mov
cmp
stos
imul
popa
in
lahf
ret
pop
arpl
in
aas
in
mov
and
jb
jo
mov
pop
in
fs
xor
mov
lret
dec
xor
sub
push
and
out
xchg
and
mov
pusha
adc
movsl
movsb
push
add
imul
xchg
repz
adc
xchg
ljmp
push
pusha
test
jmp
lds
cmp
ljmp
stos
xorb
push
push
xchg
mov
pop
in
mov
sub
andl
idivl
jb
fwait
ljmp
fiaddl
pop
xor
ficoms
xchg
mov
mov
jmp
jmp
stos
pusha
dec
mov
stos
leave
xchg
push
adc
dec
and
test
inc
inc
into
cmpsl
ret
push
add
stc
pop
inc
xor
xchg
mov
les
push
jle
je
pop
fs
adc
pop
jle
jne
pop
es
bswap
push
rorl
aas
scas
mov
jge
or
out
cltd
stc
and
in
sbb
stos
iret
cmpsb
push
push
out
push
dec
roll
aas
out
dec
mov
outsb
xchg
scas
loopne
arpl
scas
lea
xor
test
pusha
test
ret
xchg
into
jbe
inc
bound
cmpsl
dec
test
and
xchg
xchg
clc
mov
cs
sbb
mov
testb
xor
jle
add
jbe
cmp
and
mov
mov
cmp
imul
mull
mov
mov
cmp
xlat
and
sub
sbb
jge
and
push
xor
popa
insb
mov
xor
push
dec
sub
xor
mov
cld
adc
dec
data16
cmp
sti
sbb
or
stc
jle
call
dec
xchg
and
mov
mov
inc
test
mov
daa
fcomi
mov
jae
js
xor
popa
or
stos
push
pop
xor
je,pt
repz
or
push
inc
inc
push
xor
dec
cs
and
test
push
test
xchg
mov
xor
shr
xor
outsb
cmpb
pop
dec
push
inc
aas
sar
and
sarl
xor
insl
cmp
mov
dec
pop
or
shlb
pop
cmc
pop
and
cmp
xchg
cltd
push
fbld
jecxz
dec
sarl
int
sub
or
cmpb
sahf
cmpsb
cmp
repz
cltd
hlt
push
in
int
ret
dec
rorl
mov
sti
mov
pop
sub
xchg
mov
movaps
out
call
jecxz
outsl
pop
xchg
outsl
movl
dec
xchg
sbb
bound
and
movsb
fdivr
gs
cmp
imulb
jmp
jmp
faddl
pop
jle
jle
scas
sub
jnp
cld
int3
fiadds
nop
sbb
test
add
jnp
mov
mov
cmp
test
bound
mov
mov
leave
call
jae
ror
or
xchg
sarb
xchg
std
jge
dec
mov
ljmp
hlt
and
addr16
pop
push
or
icebp
stc
shrl
xchg
xor
mov
xchg
cli
ficoml
or
mov
adc
lods
in
xchg
test
xor
pusha
or
xlat
xor
movsl
ret
mov
jbe
and
das
add
pop
stos
or
dec
cmp
push
and
mov
sub
cmp
icebp
xchg
jb
shl
int3
bnd
dec
imul
push
fwait
jmp
mov
and
cmpsb
dec
push
xchg
cmpsb
jecxz
lret
add
xchg
enter
adc
pop
jo
negb
adc
test
pop
cwtl
imul
cld
cmp
xor
xchg
imul
call
jne
subl
not
test
mul
lock
fisttpl
adc
fldt
xor
xchg
mov
or
inc
xchg
pop
hlt
sub
cmc
cld
leave
das
inc
aam
mov
sbb
out
in
jae
mov
clc
pop
out
cmp
adc
jle
cmpsl
loopne
mov
iret
sbb
cmp
lea
andl
shl
fldenv
mov
jmp
andl
imul
jno
push
add
clc
xor
dec
call
mov
mov
std
inc
lret
cmpsl
cmp
jp
ja
mov
cmpsl
scas
test
cmp
xchg
shl
push
into
lods
xchg
or
cmc
jbe
popa
mov
cltd
imul
leave
outsb
dec
mov
pop
cmp
adc
insl
loop
ficompl
add
and
imul
mov
mov
cltd
push
mov
movsl
adc
in
push
xor
push
out
das
jp
in
xor
insb
in
add
xchg
inc
cmpsl
jmp
jnp
inc
adc
pop
rcrl
sub
out
mov
std
ljmp
fiaddl
test
mov
fwait
xchg
adc
xlat
loop
decl
xchg
xchg
add
jns
push
mov
push
arpl
dec
sbb
inc
xor
movsb
pop
stos
xor
push
jl
xor
psraw
adc
sub
jg
cwtl
push
adc
mov
es
xchg
jl
sahf
je
movsb
dec
mov
fdivr
dec
mov
push
sub
aaa
bound
xchg
jnp
pop
inc
sti
or
pop
mov
int
cs
inc
pop
cli
scas
scas
daa
stc
inc
xor
pusha
mov
cltd
add
and
sub
or
ljmp
fldenv
fistl
mov
test
fucomi
fsubl
pop
push
sub
je
jnp
jecxz
sbb
test
sti
aam
jo
or
iret
add
push
jae
mov
imul
push
fxch
push
mov
lret
cmpb
xor
ficompl
gs
ret
sub
int3
pop
xchg
mov
lahf
sub
mov
lret
jg
or
lds
sbb
in
adc
cs
or
mov
in
xchg
xchg
aad
popa
mov
jl
mov
test
fwait
jo
inc
mov
push
imul
shll
cld
in
pusha
sub
aas
pop
dec
testl
popl
sarb
xor
mov
popf
adc
add
mov
jnp
outsl
cld
dec
xor
shlb
fcoml
or
mov
insb
iret
repnz
pop
mov
mov
xor
pop
and
push
hlt
xchg
adc
mov
add
pop
stos
shrl
pushl
aas
inc
lock
or
xor
push
xchg
test
movsb
and
cli
fxch
mov
imul
fistpll
xchg
iret
jne
sahf
cmpb
shll
sbb
push
push
daa
push
daa
inc
subb
adc
orl
jle
mov
mov
decb
push
sbb
cld
std
push
pop
and
and
mov
ret
mov
arpl
cmp
movaps
insb
sub
mov
cmp
mov
jae
js
jb
pop
hlt
adcb
adc
daa
add
pop
lcall
pop
ljmp
test
xchg
cmp
hlt
dec
stos
std
test
nop
cmp
hlt
cld
pushf
and
sbb
inc
cmp
push
dec
push
andl
add
pop
cmp
loopne
movsl
xchg
mov
jecxz
int3
adc
repz
cmpb
xor
pop
fbstp
in
mov
jmp
rcll
rorl
lods
dec
mov
call
outsb
bound
stos
jmp
ja
cmp
xchg
pusha
in
rcr
lods
iret
cmp
fmuls
ret
jbe
aam
lea
pop
xlat
mov
mov
mov
cld
es
mov
sub
iret
xor
pop
sti
cli
movsl
sbb
mov
in
test
sub
stc
cmpsl
cmp
adc
xchg
adc
mov
out
mov
testl
mov
push
or
cmc
loope
and
mov
sti
sti
test
stc
or
popa
add
adc
pop
addr16
mov
cmp
pop
dec
leave
push
repz
lret
mov
inc
fs
inc
aas
ss
and
inc
and
dec
insb
inc
inc
test
dec
daa
test
add
outsb
mov
loopne
and
testb
add
aad
sar
rcll
mov
out
pop
fnstenv
fmuls
inc
sbb
aas
fwait
cli
add
sub
sbb
shl
stc
cltd
xchg
dec
jle
or
adc
sahf
push
aam
pop
fistl
decl
mov
jmp
addr16
inc
adc
pop
movsb
xor
pop
iret
mov
xchg
aas
out
in
icebp
or
stos
mov
xchg
fcomp
test
rcrb
dec
cmp
or
xor
je
call
xchg
loope
insl
xchg
sbb
mov
add
mov
dec
adcb
sub
pop
or
sbb
out
inc
xor
mov
sbb
mov
mov
jmp
inc
mov
dec
mov
movsl
gs
pop
pop
fst
std
shrl
cltd
fmull
cmp
jo
mov
cmpsb
fstps
push
mov
leave
mov
sahf
shrd
arpl
push
mov
add
push
les
ficoms
pop
mov
xchg
cmp
in
jnp
sbb
bnd
es
sub
std
aad
arpl
test
ss
in
sbb
aaa
sbb
fists
stc
dec
leave
adc
lahf
divb
in
outsl
push
cmpsb
xchg
adc
cltd
add
sbb
jns
inc
push
mov
jns
xor
lds
mov
or
mov
xor
dec
cmpsl
push
insl
jne
ss
or
jl
cmc
and
jge
inc
outsl
outsl
pop
inc
outsb
inc
adc
mov
mov
cld
je
lods
repnz
cld
pop
icebp
lret
dec
xor
cmc
cmp
xor
jbe
adc
inc
mov
add
mov
fdivrl
mov
adc
xchg
arpl
pop
add
dec
xor
xor
das
insb
push
aam
xor
in
das
add
xor
sub
fsub
cmpb
inc
popa
movsl
pop
push
movsb
subb
jmp
dec
popf
dec
mov
pop
cld
dec
and
nop
mov
sbb
xchg
sub
mov
je
test
sbb
push
jbe
or
xor
cwtl
movsb
jno
sub
cmp
add
mov
adc
adc
negb
mov
je
inc
xchg
cmp
sti
call
cmp
xchg
inc
cmpsl
push
gs
mov
cli
jne
cltd
lock
mov
push
and
jle
adc
aad
mov
into
sub
jno
sub
out
cmp
dec
mov
daa
fildll
aaa
or
loopne
inc
out
mov
pop
mov
adc
or
lahf
popf
add
leave
jmp
pop
ret
mov
pop
dec
sarb
sti
decb
mov
push
cmpsl
call
pusha
inc
jns
mov
pop
push
ljmp
sti
divl
insb
mov
mov
sub
mov
test
into
pop
aaa
ret
call
shl
addr16
xor
lea
mov
in
adc
in
ret
jmp
inc
cmc
jo
movsb
xor
inc
xor
dec
sarl
mov
cltd
mov
jno
das
mov
cmp
clc
dec
push
repz
les
xlat
xchg
int
fxch
jnp
adc
sub
push
push
cwtl
loop
leave
cmpsl
inc
pop
loopne
pusha
mov
inc
inc
sub
testb
xor
call
pop
xchg
in
mov
push
inc
mov
in
in
inc
sub
pop
dec
cmp
pop
sub
fcoms
dec
andb
fldt
pop
je
push
xorl
mov
and
add
mov
jg
stos
mov
out
mov
int3
jge
std
inc
das
cmp
je
mov
and
mov
fidivs
xor
sbb
mov
push
cmp
fimull
imul
push
pusha
lods
cmpsb
jno
pop
mov
dec
mov
lret
push
and
add
pop
pop
mov
xor
loopne
stos
outsl
jg
dec
mov
inc
push
clc
aad
mov
es
and
jo
subb
push
or
push
hlt
out
xlat
insb
std
shll
adc
push
fsubrs
mov
rclb
mov
xchg
inc
sti
adc
push
hlt
inc
mov
filds
mov
mov
pop
sbb
subb
loope
sbb
enter
mov
push
insb
outsb
cltd
mov
das
jg
ljmp
pop
mov
jbe
nop
es
jg
mov
loop
inc
cmpl
push
add
hlt
adc
mov
push
fstl
mov
int3
xchg
repnz
adc
dec
inc
jne
lea
ret
mov
xor
pop
lret
cmc
insl
in
add
clc
mov
out
test
pop
jns
test
lock
pop
cltd
cwtl
jmp
stos
call
imul
ficoms
pop
jno
adc
xor
cmp
pop
mov
pop
push
jne
adc
add
jo
shlb
inc
pusha
jae
pop
cmpsl
jns
inc
test
sub
adc
loopne
sahf
test
pop
cwtl
shr
imul
push
test
std
mov
lock
mov
mov
mov
pushw
arpl
xchg
into
popf
mov
stos
push
sbb
out
mov
dec
inc
mov
psubsb
and
cmp
inc
xor
jle
sbb
add
push
je
icebp
push
xor
repz
std
cld
inc
es
jns
pop
outsl
es
ja
mov
hlt
test
push
lret
out
xor
shlb
movsl
out
ds
mov
jne
add
cmp
insl
mov
cltd
hlt
and
fcmovnbe
pop
mov
dec
sub
call
cld
pop
test
mov
int
add
out
and
mov
sbb
mov
push
shll
jo
jbe
rorb
addr16
sahf
lods
popf
dec
xchg
mov
lret
push
pop
ret
out
je
mov
dec
jl
shll
dec
push
jnp
xchg
mov
lcall
movsl
in
xchg
cmp
cmp
sub
cltd
data16
hlt
mov
ljmp
inc
xchg
leave
loopne
xchg
xchg
jge
idivb
fs
dec
jne
jl
xor
push
jmp
pop
adc
push
cmc
fs
push
test
xorb
mov
ds
fmull
mov
ret
and
mov
fstpl
inc
int
xor
mov
lcall
es
insb
aad
or
fisubl
xchg
cmp
stc
test
mov
lret
inc
les
das
xchg
test
mov
mov
pop
ds
mov
and
ljmp
movsl
stos
movsb
aaa
jmp
repnz
enter
out
inc
sub
inc
xchg
out
jmp
xchg
jns
inc
mov
test
mov
xor
lea
rolb
sbb
pop
push
xorb
jg
xchg
je
sbb
iret
xchg
mov
faddl
push
mov
mov
cmpsb
pop
inc
pop
pop
loope
cli
xchg
push
outsb
pop
fwait
jmp
je
int
jns
push
adc
loope
jae
ret
mov
push
inc
std
mov
in
scas
addb
jg
out
psllq
stos
mov
xor
adc
ljmp
ljmp
sub
sub
cmp
xor
pusha
pop
xchg
movsb
xchg
fadd
jmp
aam
rcll
and
pop
stos
nop
gs
fcoml
sub
bound
cmp
xor
jbe
sbb
mov
mov
jge
pop
int3
ret
shrl
adc
mov
jg
inc
pop
leave
clc
push
xorl
je
movq
cmpl
xchg
and
inc
sub
test
gs
out
sub
lea
inc
imul
mov
adc
mov
int
ljmp
dec
mov
add
test
and
jno
rorl
push
mov
decb
loopne
add
ret
mov
aas
adc
pop
xchg
sub
std
ds
leave
cmp
xchg
adc
std
mov
push
xchg
add
aaa
add
movsb
push
push
stos
stos
iret
xor
xchg
lret
loopne
pop
xchg
add
lret
jb
mov
and
sbb
jbe
rorb
mov
mov
test
or
out
sahf
je
gs
pop
pop
dec
fisttps
mov
scas
push
lret
mov
lret
fsts
mov
outsl
inc
cmpl
mov
push
out
popf
pop
xchg
daa
cld
lods
aaa
push
add
ja
lea
clc
dec
pushf
out
ljmp
cmp
sub
cwtl
mov
sarl
jns
mov
repz
mov
jnp
sub
test
mov
popf
mov
mov
mov
mov
sub
mull
pusha
clc
out
mov
sahf
out
cmp
xor
xlat
out
popl
cmp
mov
aam
lds
or
loopne
fldt
rcll
popa
mov
fidivrs
xchg
fbld
pusha
fwait
mov
adc
clc
adc
pop
mov
inc
jl
test
and
aas
daa
int3
sub
imul
and
sub
pop
adc
push
push
pop
mov
test
adc
adc
jmp
cwtl
xor
ja
mov
fistps
add
outsb
dec
testb
mov
mov
pop
mov
push
xchg
mov
add
nop
stos
xor
sub
stc
push
repz
loope
jl
mov
sub
inc
popa
sub
and
cwtl
sbb
stos
cwtl
aad
push
push
sub
out
bound
orl
outsl
push
adc
add
mov
jmp
adc
pop
repz
mov
ud0
push
adc
gs
adc
outsl
dec
cmpsl
scas
fildl
les
inc
icebp
xor
divl
cmp
mov
mov
ljmp
inc
xor
jbe
cmp
or
and
mov
or
inc
sbb
stos
add
jge
pop
popa
pop
jg
aad
jnp
mov
cmp
xor
cmp
lods
daa
xchg
test
pusha
int3
stc
jns
xor
stc
dec
cmp
test
xor
scas
in
mov
mov
bound
jne
insb
mov
std
ror
sbb
leave
xor
bound
les
mov
stos
in
cmp
inc
add
cmp
ljmp
jo
inc
divl
pop
mov
mov
mov
arpl
sub
aad
mov
cwtl
mov
xor
xchg
xor
or
jmp
sub
pop
jbe
jl
test
cmpsb
scas
xchg
push
insb
loop
test
push
fbstp
sub
mov
xchg
push
fwait
ds
adc
aas
rcrl
scas
cmp
or
cmpsb
lds
pop
jb
cmp
leave
in
scas
into
push
test
pusha
loopne
push
mov
mov
sarb
inc
rcl
cltd
iret
push
add
jne
mov
and
mov
sahf
push
fucomp
jbe
inc
mov
sbb
sub
xor
dec
xchg
std
lods
lahf
outsb
arpl
lds
in
xor
push
int3
ret
fprem1
adc
add
arpl
push
jbe
in
mov
test
push
pop
pop
and
push
sub
lret
add
mov
xchg
cmpl
mov
arpl
jl
movsl
adcb
adcb
sbbb
pushf
pop
popf
dec
xchg
aaa
pop
pop
lret
xchg
pop
in
es
jae
cmp
lods
sub
cld
and
out
shr
fnsave
fiaddl
movaps
in
or
add
pushf
fistpl
and
push
cmp
jnp
das
pop
subb
pop
jbe
jg
test
push
xor
dec
aad
xchg
xchg
int
scas
outsl
cmp
inc
cmpsb
pop
push
mov
fdivr
loop
add
adc
jne
pop
mov
testb
jo
test
sub
rclb
fisubrl
inc
test
xchg
jmp
dec
shrl
cmc
das
dec
xchg
test
pop
mov
adc
mov
cmp
add
xchg
jmp
or
jmp
pusha
push
inc
sub
or
cld
xor
pop
adc
fcmovnu
xchg
scas
jle
pop
mov
push
outsb
sbb
cmp
data16
sbb
mov
shrl
xorl
in
push
rclb
fisttpll
idivl
aas
xchg
decb
cmpsb
sbb
mov
jae
adcl
sbb
xchg
mov
mov
mov
imul
push
pushf
mov
out
into
add
fwait
leave
icebp
adc
add
movb
inc
xor
stc
clc
push
hlt
lods
pushf
and
test
mov
inc
inc
push
xor
xor
data16
sbb
adc
sub
or
les
inc
push
outsb
inc
mov
shlb
pop
xchg
test
scas
cmpsb
push
pop
add
gs
jne
lret
sub
pop
imul
leave
sub
movsb
or
sbb
rcl
shlb
sbb
clc
ja
jae
mov
and
add
push
sub
or
sub
and
xor
xor
lods
pop
cltd
mov
mov
cwtl
in
ret
in
mov
mov
xor
cmpsl
into
mov
dec
push
ss
inc
jnp
pop
icebp
push
andb
add
and
aam
xchg
leave
test
sbb
enter
cli
dec
fists
push
std
shll
pop
jbe
sub
mov
or
bound
movsl
pushf
popf
iret
mov
mov
ss
jnp
mov
xorb
mull
in
movb
insl
mov
in
push
lea
push
imul
mov
xor
ss
sub
adc
roll
daa
sub
and
scas
inc
push
cld
adc
push
pusha
dec
mov
add
adc
push
scas
aaa
cwtl
rcr
out
scas
jge
jle
push
mov
dec
sti
adc
push
push
lea
idiv
or
xchg
mov
shll
xlat
sub
das
mov
or
mov
pushl
ljmp
ss
adc
imul
mov
loopne
mov
pop
imul
shr
addr16
arpl
fs
jae
jo
push
sub
std
lret
pop
xchg
repnz
add
loopne
or
adc
jno
sub
cmc
lret
mov
cmp
int3
rclb
inc
cmp
repz
pop
out
jmp
mov
jg
ja
xchg
mov
xchg
daa
adc
push
es
or
xchg
xlat
mov
and
mov
inc
mov
xchg
cmp
lods
dec
call
mov
xchg
movsb
stc
arpl
sub
test
xlat
je
pop
add
insl
inc
cmp
xchg
cmc
pop
insl
pop
and
mov
movsl
lahf
mov
sbb
mov
push
cmp
pusha
fucomp
rorl
mov
testl
fildll
fdivrp
test
mov
dec
push
lods
dec
and
cmpsl
mov
lods
movsb
sbbl
pop
loop
pop
mov
mov
lods
data16
mov
hlt
adc
mov
push
push
aaa
cwtl
je
and
in
jg
ret
dec
ret
xor
out
inc
pop
cmp
xor
inc
mov
sub
cld
cmp
aas
orb
or
lods
cmpsl
mul
mov
je
iret
mov
jecxz
mov
fnstenv
mov
mov
inc
cmp
adc
mov
insb
into
dec
mov
lret
mov
adc
in
js
push
arpl
ret
jle
ja
mov
mov
fcom
jnp
fs
push
daa
dec
jg
mov
cmpsb
jle
xor
pop
inc
insl
jbe
aas
inc
mov
push
out
pop
xchg
into
aam
cmp
test
cwtl
pop
sti
pushl
mov
pop
inc
or
mov
dec
jb
xor
push
nop
cmpsb
ja
stos
loop
call
and
sub
pop
mov
mov
leave
js
sub
xor
jo
mov
pop
adc
je
rorb
pop
mov
test
ja
lret
xchg
sbb
sub
jb
fmuls
dec
jle
rol
xor
adc
jbe
outsb
aad
dec
repz
mov
aas
adcl
jmp
xchg
xlat
stos
sub
shll
mov
jp
jle
dec
push
repnz
xchg
aaa
add
scas
cmp
cmp
pop
aam
mov
fidivrl
inc
add
pop
mov
fdivrl
pop
in
mov
leave
aas
movsl
jno
push
fdivl
or
and
popa
arpl
pop
cmp
mov
jmp
int
sbb
test
lahf
xor
repz
xlat
cmp
insb
div
add
ret
pop
out
push
aaa
clc
pop
pop
push
pop
scas
mov
add
sbb
jnp
outsb
add
lcall
fimull
sbb
cmp
dec
mov
aaa
scas
outsl
test
pusha
shlb
sbb
je
push
je
mov
xor
jne
or
add
push
int3
int
call
mov
ret
dec
stos
mov
mov
xorl
ja
call
les
shrb
testb
pop
cmp
xor
push
bound
jge
repz
dec
scas
scas
mov
mov
bound
repnz
inc
das
add
push
pop
cmpsl
cltd
gs
add
push
adc
testl
xor
repz
js
add
ficompl
int3
fisubrl
aaa
xlat
mov
cmpsb
xchg
xlat
loopne
fsubrl
insl
fidivrl
repnz
mov
lret
out
inc
cmp
cmp
sub
shr
lods
dec
jl
sub
mov
add
xchg
xor
mov
scas
mov
es
mov
vtestps
jns
xchg
test
or
push
jno
inc
push
sbb
ds
mov
das
pop
sub
add
ret
inc
sub
test
inc
mov
xchg
inc
int
and
add
loop
jge
jb
fwait
leave
pop
inc
sahf
sub
pop
jbe
xor
int
movsl
je
pop
rcr
xor
jecxz
mov
rorb
clc
aaa
xor
cmpsb
jbe
inc
push
sub
jns
adc
mov
push
test
xor
repz
mov
pop
pop
lea
fs
push
sub
xor
or
out
call
clc
add
mov
test
adc
icebp
test
push
mov
fistl
sub
ds
pushl
cmpsb
dec
xor
cmp
xchg
mov
cs
dec
scas
pop
jne
mov
add
add
mov
ret
sarb
adc
repz
sub
int3
jl
pop
movb
jno
movsb
icebp
jecxz
and
push
mov
lret
mov
stos
pop
xor
lret
shlb
push
les
jne
lea
add
mov
mul
icebp
mov
lock
jl
sub
adc
iret
repnz
add
orl
sbbb
add
ljmp
lock
inc
dec
jecxz
fmulp
pop
out
and
push
jle
dec
out
mov
pop
mov
gs
adc
sbb
fiadds
dec
sub
push
push
or
scas
jno
inc
lret
sbbb
ret
rcrl
test
fmull
ds
fstl
xchg
lahf
xlat
fimull
sub
mov
mov
leave
mov
and
cli
pop
ss
or
jb
out
adcl
cs
push
mov
orl
mov
jb
or
and
or
fsubrs
insl
fxch
add
adc
push
jmp
push
xchg
ss
leave
outsb
mov
dec
jp
pushf
xchg
fmull
jno
xor
push
cmp
jae
push
les
and
jl
push
push
inc
push
xchg
dec
sbb
cmc
negb
mov
push
push
lret
xchg
movsl
push
push
loop
mov
hlt
out
jmp
add
push
ljmp
in
xorps
mov
in
adc
sbb
mov
add
stc
sahf
mov
add
jge
pop
sbb
test
in
jmp
push
add
adc
pushf
jmp
sub
jecxz
pop
and
lds
sub
sahf
test
mov
or
adc
cmp
cmp
lret
xchg
daa
sbb
mov
sub
jg
xchg
push
insl
add
pop
xchg
pop
into
fldt
sub
adc
icebp
push
dec
popa
mov
lret
xorb
or
lea
nop
xor
lods
sub
loopne
je
outsb
sub
mov
or
mov
jg
push
mov
dec
and
mov
cmpsb
pusha
rep
mov
cmc
clc
or
imul
out
movsb
jbe
cmp
data16
mov
mov
addb
test
hlt
test
sahf
xor
add
adc
inc
inc
aaa
or
push
inc
pop
shr
in
or
out
in
test
out
adc
insb
adc
cmp
in
clc
fsubrl
pop
mov
loope
decl
pusha
lods
test
insl
add
mov
mov
flds
jns
and
lea
rclb
mov
lock
aad
notl
in
cli
sti
pop
nop
mov
ss
inc
adc
sar
mov
mov
xor
mov
xorb
fstpl
filds
mov
aam
push
pop
sti
push
cltd
sub
arpl
and
or
sbb
mov
add
pop
push
mov
int
pop
jne
lahf
xchg
jle
jae
das
nop
add
inc
cs
add
aaa
pushl
jo
in
sahf
adc
xchg
repz
repnz
sti
imul
push
hlt
push
pop
int
nop
dec
sub
std
test
inc
mov
pop
xchg
adc
aad
rclb
or
inc
jbe
leave
pop
pop
icebp
loope
nop
jns
mov
jns
mov
mov
dec
sarl
or
sub
addr16
jne
push
and
add
jg
fsubl
das
adc
fwait
xor
stos
push
xchg
pushf
jl
mov
mov
scas
inc
std
sub
ljmp
mov
xor
in
pop
fdivrs
or
mov
out
rcll
xor
sti
push
pop
push
jnp
sub
inc
ret
sti
dec
outsl
sbb
mov
lret
loopne
xchg
fdivl
mov
sub
inc
arpl
lea
jno
repnz
call
cmpsl
mov
insb
push
xchg
pop
jl
jne
sub
out
push
push
arpl
sub
aam
xchg
shlb
out
data16
adc
inc
dec
pop
shrb
adcb
cmp
rorl
inc
repz
imul
mov
jmp
pop
enter
mov
cmp
add
adc
loopne
sub
cmpsb
dec
stos
xchg
sti
lds
push
clc
adc
mov
cmp
imul
xor
sub
clc
fsubl
push
mov
mov
out
rolw
cmp
mov
jne
jl
add
jecxz
adc
hlt
notl
icebp
cs
xchg
iret
and
cmc
adc
cmc
mull
jl
mov
outsb
push
fistl
adc
icebp
out
mov
movl
insb
aad
dec
or
ja
mov
std
jmp
and
dec
outsb
lock
je
or
jp
fcomps
les
jbe
in
das
fsubs
pop
daa
stos
push
xor
arpl
xchg
inc
fisubrs
rcrl
mov
lret
ret
xchg
jb
add
jae
dec
and
imul
sbb
not
lock
and
popa
enter
jmp
es
sti
das
test
dec
movsb
pop
mov
inc
cmp
adc
sbb
in
lea
mov
ds
into
cmp
lret
push
addr16
mov
cltd
push
jae
mov
sbb
cmpsb
sbb
pop
jo
cmp
scas
jae
lret
inc
popa
mov
das
dec
addl
mov
xchg
lret
push
test
out
or
jbe
push
or
adc
andl
jno
inc
push
ja
or
push
sbb
clc
jmp
arpl
sti
or
xchg
xor
scas
hlt
cmc
pop
adc
and
mov
fcoml
or
cmpsl
cs
or
cld
dec
icebp
mov
dec
push
jnp
getsec
mov
inc
pop
sub
pusha
in
int3
mov
xchg
lahf
fdivs
jbe
int
inc
dec
add
mov
mov
pop
push
aas
ljmp
sbb
lea
imul
cmp
popa
filds
cmp
and
inc
lods
cmp
mov
dec
repnz
lock
pusha
inc
mov
dec
sbb
or
or
push
and
add
js
pop
xchg
shrl
dec
dec
pop
enter
sub
or
inc
pop
dec
fisubrl
mov
test
dec
lcall
mov
out
idiv
inc
add
fs
stc
sbb
cmp
cs
lea
leave
popa
jb
add
rolb
mov
fdivrl
adc
imul
push
dec
jno
mov
cmp
push
mov
lea
ja
dec
push
fisttpll
stos
pop
jle
lods
xchg
leave
inc
call
loope
addb
adc
mov
xchg
fiaddl
lock
leave
or
cs
push
dec
rorl
int3
frstor
cltd
divl
mov
jg
test
mov
daa
rorb
popa
in
inc
inc
inc
jns
sbb
xchg
jl
mov
xor
sbb
lret
pop
xchg
mov
ds
pusha
and
and
ret
jbe
mov
mov
jne
cltd
stos
adc
insb
and
inc
adc
out
push
daa
mov
int
pop
push
sbb
movsl
fbld
stos
pop
scas
rcrb
movsb
sub
andb
mov
and
cmpsl
jmp
test
mull
nop
aad
jecxz
pop
jo
std
pop
out
jge
arpl
leave
push
movsl
imul
xchg
jp
jae
cmc
xor
pop
and
test
jle
push
lcall
popf
xchg
movl
sahf
push
sbb
dec
imulb
test
xchg
inc
stos
push
bound
rorl
insl
push
pop
jp
xchg
and
cmpb
dec
popa
jne
stos
push
jle
lock
inc
xchg
xor
xlat
jno
mov
outsl
pushf
mov
pop
dec
int3
add
test
aad
inc
clc
out
nop
iret
lds
jne
jo
lcall
cld
outsb
popa
mov
dec
add
loop
inc
xorb
pushf
aad
add
dec
add
adc
mov
addr16
pop
xchg
iret
jmp
or
and
and
dec
push
out
out
mov
mov
arpl
xchg
mov
int3
in
je
mov
roll
movsb
lcall
xchg
mov
sub
aaa
in
loope
rcr
gs
ja
insb
push
xor
icebp
loop
dec
xor
lcall
xor
push
xchg
test
add
adc
out
add
lret
addr16
dec
sti
jns
adc
aad
mov
mov
mov
fdivrp
mov
xchg
imul
xor
jb
imul
push
xchg
cmp
decl
pop
cmovl
mov
jo
inc
sarb
loop
ret
push
adc
out
cmp
push
addr16
out
pcmpgtb
pop
pop
xlat
das
pop
repnz
js
outsb
imul
push
cwtl
loope
push
dec
out
jecxz
mov
hlt
shrl
adc
push
or
lods
sbb
pop
jnp
scas
lahf
icebp
scas
fisttps
mov
xchg
out
push
ret
sub
pop
mov
xor
xchg
jp
pop
clc
xlat
mov
mov
aad
mov
fs
cwtl
add
sbb
out
fildl
out
cmp
dec
scas
lret
inc
inc
addr16
xchg
mov
cltd
dec
fs
outsl
inc
xchg
ljmp
xor
stos
and
push
inc
fidivs
fisttps
lret
cs
dec
outsl
aas
fcoms
ret
fdivs
add
pop
aad
dec
roll
pop
sahf
lods
mov
addr16
xor
inc
ja
lock
pusha
cwtl
sbb
adc
sbb
repnz
daa
imul
mov
pushf
loopne
data16
mov
cld
shrl
jl
xlat
es
mov
sub
xchg
fs
inc
pop
or
test
cmp
daa
loope
call
insb
dec
loopne
jg
loopne
inc
ljmp
fldl
test
mov
mov
subb
mov
insl
xchg
sahf
das
dec
jmp
sbb
inc
test
adc
pop
mov
fnstsw
inc
lock
dec
lds
scas
dec
mov
mov
adc
out
sar
adc
xor
xlat
popa
jne
out
adc
sbbl
mov
ja
test
shll
ret
xchg
jnp
sub
stc
test
lret
lret
jb
push
pop
adcl
or
cwtl
or
inc
lahf
add
testl
fsincos
jno
mov
sub
xchg
jmp
cltd
inc
std
push
fucom
xchg
insb
cmpb
nop
cs
sti
lahf
ds
or
or
jo
ror
inc
mov
icebp
test
enter
dec
fimull
cmp
pop
mov
je
fdivl
mov
lea
pop
insl
inc
je
jp
inc
sbb
and
scas
xor
xor
mov
cltd
movsb
fwait
pop
lret
and
popf
stc
mov
orl
loop
out
out
imul
jb
mov
inc
inc
dec
dec
xchg
aaa
inc
xor
dec
xchg
xchg
push
incb
dec
les
fildll
mov
mov
in
adc
add
mov
repz
xchg
jle
or
mov
add
ljmp
iret
or
movsb
pop
pop
mov
and
push
sub
or
sub
mov
test
mov
mov
test
hlt
mov
icebp
lret
xchg
dec
in
clc
or
out
punpckhdq
sar
cmp
xchg
mov
into
test
pop
daa
inc
mov
add
push
push
jmp
inc
push
rep
mov
inc
fimuls
xor
dec
jmp
shlb
sbb
adc
pushf
cmp
divl
popa
adc
ja
stc
push
cmp
pop
repnz
repnz
add
xchg
lock
shl
dec
cmp
int
int
cmc
mov
mov
mov
and
cmp
xchg
sub
pusha
jns
sub
testl
cmpsl
es
xor
aad
fistl
cld
mov
jnp
ljmp
mov
dec
out
mov
loope
pushf
mov
mov
xchg
xor
aaa
jo
pop
and
xor
or
jb
mov
cwtl
sub
mov
lahf
lods
test
pop
pop
mov
jle
pop
loope
add
orl
addr16
shll
pop
adc
mov
sahf
ja
out
sbb
add
pop
dec
jle
jbe
mov
lds
push
clc
adc
imul
lret
xchg
in
aaa
or
stos
jo
fs
int
jo
pop
fadd
dec
mov
imul
add
mov
dec
pop
hlt
sub
test
push
jne
inc
insl
dec
imul
fwait
ret
dec
or
pop
mov
loope
xchg
pushf
movsb
push
mov
mov
sub
pop
pop
xchg
es
jo
insb
addr16
sbb
in
cmp
xor
sub
xor
es
sub
sbb
cltd
push
xchg
xchg
iret
inc
sbb
ja
test
mov
iret
clc
push
push
xchg
mov
pop
cmp
out
aad
test
and
push
and
or
nop
aad
pop
jg
fstl
push
xor
in
fisubs
xor
int3
mov
dec
dec
pushf
int
popa
cwtl
xchg
fisttps
aam
int
jno
scas
add
push
sahf
sub
aad
mov
cmp
test
movsl
inc
adc
mov
mov
aam
repnz
clc
aam
add
adc
cwtl
lcall
xor
dec
inc
test
orl
sub
aad
inc
xor
jnp
jecxz
popf
or
xor
or
test
shl
ja
add
ljmp
cmpsl
out
xor
out
inc
outsl
jb
lcall
fstpt
pop
mov
aam
das
pop
pop
jno
out
mov
ficompl
jnp
leave
cld
push
xchg
or
push
add
xor
xchg
xchg
mov
outsb
bound
mov
fstl
inc
gs
mov
ja
adc
mov
rcl
xor
add
mov
xchg
mov
mov
test
mov
inc
leave
in
xchg
sub
push
rcl
and
cmp
pop
xchg
dec
into
rol
stos
dec
inc
nop
sub
lahf
push
push
xor
loop
sbb
mov
jb
mov
hlt
lods
faddp
fildll
gs
cmp
in
dec
mov
xchg
mov
fnstcw
and
arpl
test
xor
mov
dec
xchg
test
jge
mov
js
das
and
cmp
repz
inc
inc
or
push
adc
mov
inc
leave
sbb
xor
lret
cmpsb
cmp
xor
or
mov
fs
rcr
push
je
xor
cli
mov
sbb
mov
int3
divb
mov
popf
sub
in
pop
dec
push
and
push
imul
fnsave
dec
dec
and
repnz
dec
imul
ljmp
inc
jl
mov
cli
xor
lods
out
xchg
inc
movsl
and
add
dec
mov
mov
loope
adc
cs
daa
and
jns
bound
repz
adcb
imul
mov
push
pushf
adc
and
popl
loopne
mov
pop
negl
xor
lods
rclb
out
sub
sbb
pop
pop
pop
xchg
adc
dec
push
or
dec
adc
in
das
xor
mov
jae
push
rorb
cmpsb
insb
pushf
mov
push
test
iret
adc
notb
xchg
enter
stc
not
mov
and
nop
jmp
mov
xlat
jge
and
xchg
ds
or
dec
ja
cs
dec
or
shrl
xor
or
dec
cwtl
jg
jne
rcr
mov
int
adc
cmpsb
inc
or
insb
inc
shl
jns
xor
jo
sub
lret
andb
mov
jge
pop
cld
and
adcl
xchg
bound
daa
int
mov
scas
jp
aam
or
sub
sub
xor
in
je
push
enter
mov
pop
fsubl
cld
orb
lock
sbb
mov
insb
sub
leave
pop
outsb
or
add
outsl
pop
inc
ja
inc
pop
inc
xchg
fld
push
or
dec
xlat
cmpsb
test
fidivrs
push
cmpl
inc
and
iret
xchg
pop
ja
mov
inc
cltd
mov
mov
int3
push
pop
or
test
das
and
ja
das
lcall
gs
fsubr
pop
mov
lcall
jg
mov
xor
xchg
es
mov
iret
popf
cmpsb
aad
mov
loopne
outsl
imul
ret
xchg
mov
les
xchg
mov
mov
fidivs
xchg
sarl
addr16
push
or
and
inc
cs
jle
popa
pusha
xor
ss
lcall
sbb
in
add
mul
or
xor
inc
gs
stc
outsb
jp
mul
iret
xchg
mov
lcall
in
sbb
data16
inc
insb
rclb
nop
xchg
sub
xorl
mov
fcmovnbe
push
cmp
je
jno
adc
pop
and
sub
dec
fmull
push
xor
adcl
cwtl
push
pop
int3
nop
xchg
mov
mov
mov
clc
clc
cmpsl
cmc
xchg
fwait
test
jle
in
pushf
sub
xor
pop
push
dec
lret
mov
pop
mov
pop
lahf
cmp
pop
enter
imul
push
mov
call
jbe
mov
cs
incb
dec
mov
xchg
ror
and
push
imul
xchg
sbb
push
fnstsw
ss
adc
cmc
pop
jp
pop
popf
inc
icebp
xchg
pop
push
dec
push
popa
cs
jmp
sbb
aad
cmpsl
ret
add
push
bound
test
jns
and
push
sbb
push
mov
fsub
mov
movsl
loopne
ret
jle
sahf
sbb
sub
leave
dec
xchg
fs
popa
pop
xchg
adc
lret
lock
push
insl
adc
jne
sub
iret
sbb
mov
add
das
ret
pushf
push
hlt
dec
add
inc
loope
rorl
push
xchg
stc
mov
or
ret
adc
leave
dec
pop
test
mov
mov
in
or
test
jb,pn
xchg
das
ljmp
xor
mov
sahf
aam
test
dec
cmp
mov
ljmp
lods
sarb
lahf
jmp
mov
jae
lret
dec
stos
and
aas
imul
cltd
push
inc
jmp
lods
mov
mov
sub
data16
sub
xchg
cmp
sbb
pop
mov
sbb
inc
xchg
call
cmp
lret
pusha
pop
mov
push
jge
cmp
iret
cmpsl
jmp
pop
andl
aaa
js
push
and
test
push
sarl
enter
or
dec
call
sub
mov
jl
adc
jmp
pushf
sub
fdivr
in
mov
sarb
sub
repz
push
cmp
ja
andb
push
movsb
mov
test
add
jg
outsb
pop
scas
pop
sub
pop
push
popa
sbbl
cmp
pop
sbb
inc
inc
lahf
add
cmp
sub
dec
dec
fcmove
cmpsl
pusha
sub
mov
lods
or
sub
jb
sbb
or
fidivrs
pop
add
jns
mov
mov
inc
mov
mov
pop
sbb
or
mov
hlt
mov
push
sbb
adc
or
call
mov
mov
cmp
test
loope
jmp
mov
imul
adcl
test
dec
into
je
sub
dec
fmuls
aam
mov
pushf
or
sub
mov
out
pop
repz
adc
loope
mov
mov
jae
psubq
int3
adc
inc
and
mov
pop
lds
or
aad
dec
out
dec
sbb
fldl
push
arpl
movsb
aas
repz
nop
sub
inc
mov
scas
sbb
pop
push
shrb
jno
aam
xchg
xor
cmp
or
xchg
xor
jne
aaa
ja
pop
mov
dec
sub
inc
ficomps
in
enter
lahf
add
pop
std
mov
enter
cmpsl
ret
xor
and
test
push
adc
notb
test
sbb
sbb
sbb
lods
mov
and
clc
mov
std
dec
roll
adc
mov
adc
xchg
imul
inc
movsl
sub
or
sahf
cld
dec
push
test
or
cmpsl
jns
add
xchg
xchg
sbb
lahf
cltd
sbb
lret
and
out
sub
inc
push
mov
pop
jl
dec
sub
xlat
lods
push
iret
xor
pop
xor
aad
jno
jae
jle
pushf
fistl
sub
je,pt
pop
or
jg
les
jns
pop
into
adc
enter
inc
mul
pop
add
add
dec
mov
xor
xchg
or
push
xchg
and
or
pushw
dec
mov
dec
out
xor
mov
jne
cli
pop
pop
push
or
lcall
dec
xor
lcall
test
lock
ljmp
in
loopne
icebp
mov
stos
aaa
mov
mov
adc
lock
cmc
das
and
sub
andb
fbstp
movsl
mov
lea
hlt
adc
les
insl
ror
cmp
es
out
hlt
mov
adc
ss
jmp
cmp
in
adc
mov
std
lock
fsubp
jno
orl
jae
pop
jl
jecxz
add
mov
dec
push
lds
or
lods
xchg
stos
cmc
push
ljmp
loopne
insb
sar
lcall
sti
ror
hlt
or
ds
fildl
xor
cmp
sub
add
aad
test
imul
or
ret
xor
and
xor
pop
mov
mov
push
xor
punpckhbw
scas
imul
ljmp
dec
fcmove
je
dec
xchg
int3
dec
mov
sbb
pushf
sarl
mov
dec
loope
aam
or
sub
lahf
iret
outsl
pop
xor
and
cld
jp
je
lods
fbstp
jns
pop
fimuls
rol
enter
inc
icebp
movsl
sub
out
fst
imul
pushf
inc
in
adc
cmp
mov
add
popl
push
push
leave
mov
push
lods
mov
push
sbb
jns
movsl
inc
ja
mov
inc
pop
adc
cmc
add
cmpsb
arpl
cmp
loopne
stos
push
or
pop
cs
or
fldz
pop
mov
lahf
dec
gs
out
and
jle
jl
cmp
outsb
mov
pop
loope
lea
js
add
push
mov
jl
icebp
dec
movsb
pmulhw
cmpsb
outsb
or
fidivl
xor
adc
sub
fwait
jbe
js
iret
mov
jecxz
out
enter
xchg
cmp
out
iret
jns
std
imul
jl
sub
out
rcr
stos
pop
clc
sti
sahf
idivl
jo
sub
in
push
insb
sub
pusha
loope
mov
push
mov
sti
in
outsl
or
fstp
jle
mov
dec
push
cmp
les
and
lock
je
call
adc
negb
xchg
pushf
movsl
movsl
in
mov
jle
repz
repnz
insb
xchg
pop
mov
mov
and
daa
jnp
or
cld
xlat
sbb
sbb
stos
orb
cld
std
sbb
inc
mov
sbb
jo
mov
ret
imul
sub
outsl
fdivl
push
jmp
mov
xor
ret
dec
mov
rolb
jnp
jb
pushl
mov
in
out
pop
jecxz
adc
push
stos
or
and
push
dec
andb
aaa
in
mov
or
int3
sub
cmpsl
dec
mov
lods
xchg
fwait
cmc
scas
dec
jecxz
ja
imul
lock
dec
cmp
jp
mov
sub
mov
in
loopne
movsb
lds
pop
aas
cmp
test
movsb
and
loopne
jns
cmp
jl
sbb
jno
or
jb
mov
xor
mov
mov
scas
cmc
test
stos
ja
add
inc
aad
nop
lcall
xchg
repnz
sub
push
sub
stc
fwait
inc
cli
push
cld
popf
popl
std
fmul
xchg
push
aad
push
in
loope
push
push
aad
das
fsubrs
lock
sub
fisubrs
scas
test
and
add
add
ficoms
cli
movl
test
lcall
sbb
pop
pop
rcll
rol
pop
xchg
add
inc
jmp
fisubrl
pop
jmp
mov
lret
adc
aaa
jns
jo
std
les
add
pop
lret
movsb
je
mov
and
out
jle
shlb
in
test
addr16
ret
sub
mov
std
out
jg
dec
dec
adc
push
outsl
movsb
push
jne
or
sbb
addr16
repnz
das
stc
mov
push
sbb
cmp
pop
cs
shl
inc
int
shll
call
or
lods
jae
sbb
mov
mov
inc
jp
stc
xchg
or
shlb
mov
push
xor
fcomps
fsts
aaa
cmpsb
shlb
xor
fs
insb
inc
cli
sbb
jle
les
lods
shll
dec
sub
sbb
add
outsb
fistpl
cmp
into
push
xlat
push
inc
sti
sbb
mov
nop
out
add
cmp
pop
push
pop
jne
mov
fs
mov
mov
sbb
je
ret
mov
je
bound
mov
pushf
mov
sub
pop
jecxz
pop
cmp
ret
push
mov
stos
sub
add
adc
lock
loope
ret
xchg
insl
jo
adc
cmp
aad
xchg
mulb
jmp
xchg
in
adc
insb
mov
pop
inc
xlat
lods
scas
or
int3
adc
sahf
jnp
out
icebp
adc
pop
sbb
xchg
lret
cmp
aas
repnz
enter
xor
dec
xchg
ret
aas
jbe
inc
stos
cwtl
je
mov
cmp
sbb
jg
lahf
popa
jae
pop
add
dec
push
sbb
popf
pop
push
add
mov
arpl
repz
idiv
push
or
sbb
ds
xchg
mov
stc
ss
xor
push
iret
jmp
jno
lock
add
add
adc
inc
cltd
adc
push
popf
out
nop
and
dec
xor
adc
adc
adc
mov
xchg
adcl
jno
jbe
mov
jbe
test
cld
push
clc
adc
jbe
push
cmp
aam
popf
test
jno
dec
std
mov
and
int
lret
adc
push
mov
arpl
jns
dec
cmp
subb
shlb
adc
cmp
inc
mov
adc
aam
fcoms
stos
lret
sbb
jl
or
sahf
ficompl
inc
imul
mov
cwtl
imul
adc
jp
popf
xor
mov
hlt
fisttpl
loope
cld
xor
sub
mov
jbe
sbb
into
mov
xchg
repnz
inc
jmp
xor
in
push
inc
popf
test
loopne
sbb
and
flds
push
repnz
setns
mov
push
sub
repnz
daa
test
push
sbb
imull
es
das
xlat
test
jle
fiadds
subb
pop
testb
mov
outsb
loopne
dec
adc
mov
aaa
or
popl
jle
inc
jg
cwtl
add
mov
fiaddl
stos
xorb
jb
xchg
inc
or
jne
popa
push
sbb
roll
loope
cmp
insl
cs
jge
mov
sub
dec
repz
repz
andl
dec
imull
dec
adcl
nop
sub
push
fucomip
icebp
push
sub
clc
fdivs
insb
insb
daa
jg
and
jae
pop
rcrl
call
and
ljmp
or
popa
ss
into
cwtl
pop
jo
loope
mov
or
iret
push
in
dec
xchg
adc
cli
fcomp
mov
and
or
jle
or
leave
stos
push
xchg
sti
jns
outsl
orb
loope
pop
fisubs
in
scas
popf
ss
ss
jecxz
fmul
mov
fildll
incb
pop
or
xchg
dec
jno
jo
cmp
cmp
sbb
fildl
rolb
out
dec
ljmp
xlat
mov
aas
pop
pop
push
jl
js
ret
mov
mov
mov
cmc
inc
aam
les
movsb
xchg
cmp
daa
lret
and
ret
sbb
mov
dec
inc
call
iret
jbe
repnz
pop
mov
push
or
ds
and
lret
fisttpll
sub
mov
sti
xlat
fists
push
fpatan
sbb
repnz
jg
lret
lock
jne
xor
sbb
popf
imul
xchg
jecxz
mov
xchg
pop
dec
pop
inc
mov
dec
clc
sarl
push
mov
push
pop
fcoml
scas
shlb
dec
xor
fnstenv
adc
ffreep
jmp
loopne
mov
or
adc
pop
mov
aaa
popf
cmp
jge
leave
sub
inc
push
in
pop
aad
push
mov
hlt
jecxz
sub
inc
dec
inc
bound
ja
or
pop
lods
sub
cmp
fstpl
cmp
mov
repz
xchg
add
and
cmp
mov
add
incb
nop
adc
jb
push
pop
shl
dec
push
and
mov
out
or
pop
insb
outsl
cmpsl
cmpsb
mov
pusha
bound
lret
aad
push
imul
cltd
cwtl
inc
and
jne
inc
mov
lcall
jno
pop
mov
xor
aaa
mul
adc
bound
xor
dec
andb
xor
sub
push
fs
push
sahf
pop
sbb
push
mov
adc
test
add
lds
add
add
bnd
lods
inc
xor
or
arpl
sahf
bound
loope
in
mov
fistps
jg
ja
dec
adcb
mov
test
jns
cli
jnp
loop
and
rorb
pop
jge
out
shrb
iret
xlat
or
sub
daa
pop
out
fmul
lret
xor
jmp
and
jmp
js
add
and
mov
lsl
imul
clc
scas
pop
stos
ss
rorl
bswap
and
adc
insb
repnz
not
aam
cmc
loop
js
shl
fldenv
or
mov
nopl
sub
dec
fsubp
lock
leave
dec
push
push
call
das
call
stc
in
mov
lods
fcmove
out
mov
or
rcr
sbb
sbb
or
loop
sarb
jnp
xlat
and
arpl
dec
imul
and
pop
mov
ds
mov
dec
inc
cmp
mov
rorl
popa
js
xlat
sbb
sub
dec
xchg
and
jp
aaa
sbb
xchg
cmp
inc
mov
pop
lea
dec
sbbb
aaa
sbb
daa
ljmp
push
popf
inc
inc
por
bnd
xor
xchg
fadds
out
jecxz
pop
mov
daa
mov
mov
ljmp
mov
push
cmp
mov
xor
push
fistpl
js
hlt
data16
mov
push
ds
push
test
and
cmpsb
aas
or
stos
into
loop
sbbl
dec
sbb
pop
fsubrs
addr16
push
es
push
scas
mov
mov
pop
hlt
aaa
cli
xchg
test
jmp
pop
push
cmp
xor
lods
test
les
inc
inc
and
pop
cmp
mov
sbb
stc
pop
inc
xchg
and
fnstcw
shlb
mov
pop
stos
add
fstpl
in
test
in
inc
push
je
xchg
jo
cli
sysexit
push
xchg
pop
idivl
sub
jno
inc
dec
add
mov
cmpsl
sahf
sahf
in
or
mov
sbb
mov
push
int
gs
cmp
cmp
ljmp
xchg
jae
mov
cmc
jne
call
mov
imul
mov
inc
imul
cmp
addr16
das
pop
cs
or
shr
sti
fldt
and
call
rcrb
inc
mov
add
dec
orb
cmp
xorb
pusha
decl
mov
and
out
sar
push
mov
mov
add
xchg
xor
cmpb
aad
ljmp
stos
aam
jp
sbb
dec
imul
lea
and
xor
imul
push
sbb
dec
lock
ja
adc
jns
insb
pop
in
rolb
sub
sub
sarl
cltd
data16
stos
jae
push
pop
cltd
loopne
pop
xor
ljmp
push
jecxz
cmp
test
sbb
push
xchg
mov
or
sti
xchg
jp
cltd
sub
or
push
push
jne
add
or
stc
pusha
lods
nop
adc
cmp
pop
in
or
das
xchg
fildl
adc
fbstp
inc
push
stos
sbb
test
mov
mov
xor
sub
inc
xor
jnp
push
or
sbb
dec
sti
lea
mov
inc
inc
add
push
add
shl
roll
or
pusha
mov
and
jne
js
loope
pop
insl
jl
push
dec
or
ficoml
ror
divl
icebp
mov
lods
cmp
loop
jg
fs
add
xlat
xlat
aad
mov
or
sbb
or
cwtl
cld
pop
xor
push
jg
lods
cmp
and
lahf
jmp
lcall
pop
aas
sbb
insb
inc
std
mov
fcmovnbe
jo
aas
push
mov
iret
jae
jge
add
sub
shll
mov
pop
jmp
jg
jns
xchg
inc
sbb
cmp
data16
mov
outsl
or
in
and
mov
dec
in
dec
xor
inc
mov
rclb
push
inc
cmpb
aad
xchg
das
stos
loopne
ret
lea
sbb
push
pop
imul
xchg
or
cld
or
test
xor
or
repnz
dec
xor
mov
mulb
test
dec
fisubrl
sub
pop
fldt
add
and
and
and
and
sar
in
out
aas
pop
pop
mov
lahf
xchg
and
inc
inc
testb
cmc
mov
scas
bound
std
shll
jae
ret
std
aam
insb
mov
test
jmp
and
dec
jmp
fisubrs
jp
adc
enter
pop
mov
test
sbb
lds
das
dec
xor
leave
mov
inc
jmp
or
mov
das
repz
pop
jecxz
stos
dec
xor
ficomps
jns
jbe
dec
lea
cmpl
or
movsb
mov
leave
je
fldenv
in
test
imul
in
insl
or
fcoml
cli
and
sub
sbb
pop
inc
bound
repnz
mov
or
push
sbb
arpl
mov
pop
icebp
aaa
sub
ja
sarb
mov
jmp
fdivrl
and
xchg
sbb
jl
cmpb
test
pop
into
stc
imul
out
enter
pop
arpl
into
fmull
ds
imul
cmc
loopne
push
fildl
pushf
int
out
mov
xchg
add
or
gs
call
mov
popf
add
lahf
mov
ljmp
sub
xchg
pop
sbb
dec
lcall
sub
dec
pop
jg
xor
adc
adc
adc
sub
enter
int
sbbl
je
pop
mov
push
popf
addr16
xor
and
jp
jp
dec
jge
and
jb
mov
jg
pop
and
cltd
aam
fcomps
aas
iret
loopne
pop
stos
cwtl
jge
stc
dec
lds
mov
das
es
in
push
repz
cmpsl
pop
test
ret
jo
adc
or
hlt
mov
jle
jb
rorb
jns
inc
inc
xchg
xlat
insb
sub
add
push
mov
dec
add
inc
jmp
insb
cwtl
ds
es
dec
dec
adcl
push
cmp
frstor
insl
pop
jg
xchg
clc
inc
jae
inc
xchg
sahf
icebp
fadd
out
addb
rolb
out
nop
dec
xchg
stos
pop
adc
std
adc
push
mov
scas
mov
dec
jno
push
mov
cmpsl
or
or
jmp
mul
scas
dec
mov
fcomps
sbb
scas
mov
xchg
test
push
xchg
ret
cmp
aam
mov
xchg
lods
mov
rolb
daa
and
div
aas
pop
fidivrl
iret
mov
fmuls
jecxz
dec
jge
jno
ficompl
mov
mov
and
jo
divb
pop
jg
jb
add
negl
shlb
icebp
mov
addr16
sahf
out
inc
cmp
aaa
sbb
andl
pop
add
mov
and
int
inc
test
pop
nopl
inc
xchg
xchg
xchg
xor
add
inc
xchg
mov
or
repnz
test
lret
in
das
cmpsl
sbb
dec
popa
pop
pop
jbe
ret
jbe
and
sub
push
dec
fs
adc
add
mov
leave
push
sbb
cmp
pop
sbb
aaa
outsb
mov
popf
aaa
ljmp
jg
xor
incl
fistpl
repz
rolb
dec
xchg
pop
lret
fst
movsb
testb
es
mov
sbb
mov
arpl
lcall
jae
mov
lods
add
js
xchg
cmc
cltd
mov
rolb
daa
mov
lret
cltd
jo
in
lret
inc
icebp
movl
js,pt
test
jns
inc
lahf
mov
scas
scas
ss
sub
inc
push
cmc
repnz
jge
fisubrs
xchg
shll
mov
mov
das
sbb
xorb
ret
sbb
jl
push
out
push
sub
rorl
lret
js
sbb
add
xchg
or
cmp
popf
sahf
jmp
mov
fcmovb
sbb
push
xor
push
mov
sbb
adc
imul
cmc
mov
call
int3
out
popa
push
xor
jno
pop
jne
faddl
push
jo
or
adc
jae
loop
jl
or
xchg
jmp
shll
hlt
xor
mov
inc
sub
add
stc
in
dec
mov
jo
jle
data16
out
push
mov
dec
or
ret
push
jnp
cwtl
imul
in
jae
and
xchg
pop
cltd
dec
adc
sbb
and
test
adc
jns
loopne
inc
outsb
mov
mov
movsb
xchg
lahf
add
out
call
push
lock
movsl
adc
mov
into
push
lahf
xor
jle
pushf
inc
sahf
repnz
inc
pop
xchg
dec
inc
nop
add
stos
jb
shll
jg
sbb
or
push
push
arpl
add
inc
mov
mov
inc
jp
aas
ret
loop
sub
sahf
push
dec
sbb
jle
cmp
sub
xor
inc
or
jmp
xor
fdiv
add
adcl
idivb
xchg
lds
shrb
inc
jecxz
bound
jmp
fisttpl
fwait
insl
adc
or
cld
push
or
es
or
jg
sbb
in
stos
orb
mov
lock
xor
fistpll
push
add
pop
movsl
push
sub
sahf
fisttpll
mov
arpl
movsb
mov
jg
mov
mov
fs
jecxz
cmpsl
cmpsb
adc
call
scas
test
mov
dec
cmp
fidivrl
sbb
fwait
call
test
xchg
movsb
mov
cmpsb
lea
call
xchg
xchg
jnp
mov
call
xlat
xchg
ljmp
xchg
outsb
popf
sub
jl
jnp
mov
std
or
xchg
pop
js
cwtl
aam
in
in
sbb
push
outsl
inc
mov
dec
push
mov
pop
jle
mov
and
pushf
cmp
adc
movsb
and
andl
add
test
js
lret
rorb
xchg
sub
mov
xchg
std
xchg
sbb
popa
xor
inc
hlt
and
lahf
fs
and
mov
add
dec
inc
mov
je
mov
cmpsl
cwtl
daa
iret
mov
leave
inc
cmp
push
in
mov
pop
mov
dec
ret
and
mov
jle
movsl
sbb
int3
sbb
cs
push
add
pop
subb
mov
int
outsb
jle
cmpsb
sub
sbb
outsb
dec
inc
xor
mov
pop
cmpsb
das
std
mov
fimuls
popa
cmp
dec
ss
mov
pushf
adc
outsl
sub
xchg
and
or
cmpsb
mov
mov
cmpsl
imul
dec
push
insb
mov
jno
xlat
arpl
pop
add
lea
and
or
adc
enter
or
stos
mov
lahf
mov
cmc
xor
mov
or
call
sub
ljmp
add
cwtl
xchg
notb
out
cmpsl
dec
in
in
ja
push
adc
add
movb
cmp
scas
adc
pusha
fsubrl
movsl
mov
popa
sub
shrb
xchg
mov
shl
cmp
lods
add
push
ftst
test
and
xchg
stos
push
in
sbb
pop
mov
sub
or
or
ja
cmp
dec
pop
sbb
add
ds
jmp
adc
xor
or
lahf
push
adc
mov
and
cli
or
sbb
push
in
pop
add
fisubrs
xor
int
xchg
cmp
dec
in
pop
stos
dec
fsubs
add
and
pop
mov
mov
inc
mov
addr16
mov
add
jnp
xchg
and
test
sarb
sub
push
das
mov
bound
inc
std
js
xchg
sbb
dec
dec
and
cli
push
int3
dec
je
pop
pop
mov
js
popf
shll
inc
push
fldcw
ds
call
test
mov
jp
jg
mov
inc
lahf
add
bound
cwtl
mov
mov
sub
insl
jns
in
jp
icebp
cmp
adc
cmp
add
adc
jmp
jo
jecxz
pop
cmpsl
xchg
in
xor
inc
mov
mov
mov
aam
pop
scas
cmp
cld
inc
mov
jnp
inc
lret
jo
and
jl
es
mov
dec
push
xor
push
das
sbb
sub
int3
int3
cmpsb
enter
mov
pushf
xchg
clc
jl
lock
mov
mov
stos
outsl
call
xchg
das
adc
mov
shlb
inc
aad
ds
repnz
dec
aaa
cld
fwait
dec
mov
in
dec
sbb
es
sbb
mov
jmp
mov
pop
and
cmp
mov
ret
sar
testb
scas
or
lea
repz
pop
sbb
cmp
loop
cmpsb
mov
sbbl
fwait
xchg
fdivl
mov
dec
xor
hlt
jno
stos
notb
xor
jae
je
movsb
test
push
lret
mov
out
lcall
or
or
push
in
xchg
lock
arpl
inc
movsl
call
pop
out
divb
sbbb
outsl
inc
pop
jo
daa
and
je
sbb
cmp
repz
sbb
jecxz
popa
inc
inc
sub
movsl
fisttpll
dec
sbb
jecxz
sub
cmpsb
lea
lahf
jnp
inc
fsub
push
cmp
mov
mov
pop
mov
xchg
rcr
mov
out
lahf
sarl
mov
mov
pop
insb
pop
cmpsl
idivl
pop
cmc
xchg
sub
aam
lcall
sbb
movsl
push
hlt
adc
inc
out
cwtl
xorl
inc
dec
jae
mov
jns
outsl
push
jmp
fwait
dec
test
push
bound
test
fwait
jle
pop
insl
inc
movsl
call
jnp
arpl
incl
sbb
pop
ljmp
stc
fisubrl
sbb
mov
xchg
jno
jp
jns
push
sub
dec
push
inc
cmp
mov
mov
call
fcomp
push
push
lds
dec
or
push
dec
xlat
ret
ja
xor
dec
cmpsl
lcall
xorb
aam
sbb
dec
aaa
xor
test
push
testb
push
mov
push
repnz
repz
js
mov
and
mov
test
in
mov
mov
or
dec
push
sbb
aaa
jl
outsb
jg
fsubrs
sub
jmp
pop
das
xor
loop
das
push
sub
push
pushf
test
push
jmp
dec
mov
movsb
pop
mov
outsb
fildll
out
lcall
bound
sbb
or
sbb
dec
adc
insb
mov
popf
sub
pop
mov
cmp
je
loop
or
adc
test
cltd
jnp
shrl
dec
sbb
in
mov
mov
xlat
mov
mov
inc
repnz
cli
addr16
out
mov
pop
aad
mov
cmp
icebp
test
sbb
xchg
inc
or
adc
inc
in
pop
cli
daa
int
std
jnp
cmpsl
xlat
jl
dec
push
pushf
test
add
es
and
mov
lods
ret
xor
mov
mov
cmp
inc
out
insl
pop
mov
je
inc
xor
mov
icebp
faddp
add
fs
inc
testb
and
jle
or
test
add
mulb
adc
in
outsb
lods
leave
lahf
testb
orl
xchg
jnp
pop
xor
ret
jae
mov
push
repz
push
cld
jno
jle
mov
repnz
arpl
loop
in
push
push
lret
mov
add
ljmp
mov
adc
in
sbb
rcrb
cmc
cmc
sub
jge
dec
aas
je
adc
sub
xor
popf
aas
or
xchg
aaa
lock
add
xor
cmpsb
lds
leave
push
data16
jne
movsb
mov
sbbb
fcoms
loope
rorb
mov
into
jae
pop
adc
adc
inc
cmpsl
lahf
lahf
adc
lcall
sbb
cmp
les
xchg
mov
aas
mov
aam
lahf
and
mov
mov
xor
pusha
ss
xchg
in
aas
icebp
ds
mov
es
dec
int3
icebp
cld
mov
dec
mov
pop
in
orl
push
or
loope
push
add
outsb
mov
test
push
fxch
and
mov
mov
xor
fdivr
pop
add
stc
push
fldcw
in
gs
jno
xor
cwtl
fucomip
sahf
neg
push
mov
or
aam
mov
pop
aad
push
shrl
push
mov
ljmp
push
pop
xchg
xor
and
pop
add
xchg
inc
fidivrs
xor
push
sbb
imul
outsl
xchg
push
xchg
stos
arpl
or
jb
loop
ffreep
dec
and
jne
mov
dec
imul
adc
or
fidivl
add
adc
cmp
movb
jp
enter
xchg
scas
ds
pop
je
add
lret
stc
sahf
adc
inc
mov
mov
test
push
lods
popf
ss
es
out
lods
mov
sbb
mov
fiaddl
inc
and
sub
bound
dec
fiaddl
adc
xor
inc
aam
fndisi(8087
mov
sub
outsl
scas
hlt
cmpsb
sub
pop
aas
mov
ja
xchg
push
adc
rcrb
scas
in
in
sub
fs
push
and
cs
popf
lahf
test
retw
dec
sti
inc
pushf
mov
dec
or
sbb
mov
popa
in
jge
hlt
aaa
xor
jl
test
adc
adc
int
mov
jmp
sbbl
js
sbb
sbb
cwtl
ljmp
mov
mov
les
jnp
scas
subl
jmp
xor
inc
sti
or
dec
mov
jo
fcoml
aas
adc
dec
mov
pop
inc
bound
inc
or
data16
sbb
mov
mov
mov
loope
mov
mov
xor
push
jno
dec
fcompp
and
xchg
adc
xchg
push
out
dec
popf
adc
lcall
cmp
pop
lcall
inc
push
pop
daa
xchg
jno
xor
imul
enter
push
cwtl
jge
cs
popf
dec
sub
and
shrb
and
dec
adc
adc
pop
xor
mov
and
popf
inc
jo
jne
inc
dec
fisubrl
jb
adc
mov
scas
xor
test
pusha
mov
mov
popa
cltd
pop
pop
icebp
add
mul
pop
incb
jmp
sbb
in
jb
jge
and
sti
sbb
aam
xchg
and
stc
sub
clc
lods
fisubrs
es
enter
stos
push
in
dec
sahf
int
xor
pop
add
pusha
mov
iret
xor
xor
inc
ss
push
shlb
adc
push
in
push
xor
testb
mov
cld
sbb
inc
push
dec
mov
in
mov
pop
cld
push
into
pop
shr
mov
jle
scas
pop
andb
stos
insb
cmc
ss
sahf
adc
lea
fcomps
cmp
stos
lcall
pop
sub
iret
or
fimull
cmpsl
aam
scas
and
es
sbb
ja
jmp
mov
lods
pop
aaa
adcb
mov
inc
and
xor
mov
sbb
ret
dec
mov
shll
mov
mov
push
out
mov
mov
xchg
and
mov
fs
jecxz
and
iret
addr16
jle
xchg
mov
dec
jne
lahf
xor
enter
cwtl
mov
jmp
mov
sbb
lea
gs
mov
xchg
and
mov
jle
pusha
jns
addr16
rorb
push
and
xchg
bound
mov
inc
jmp
push
jmp
cmp
incb
mov
ds
aam
flds
fbld
lock
shlb
fcoml
xor
daa
xchg
mov
xor
rolb
ret
clc
mov
loopne
and
repnz
outsl
pop
lods
leave
add
mov
pop
dec
lods
mov
mov
xor
repz
push
jbe
cs
scas
nop
fdivr
ret
test
pop
xor
sub
dec
ja
and
fs
cmpsl
push
jmp
adc
lds
test
and
or
in
xchg
subl
cmp
mov
add
nop
and
jnp
bound
ds
mov
push
push
add
xchg
dec
loop
add
in
mov
sub
pop
mov
or
sbb
mov
adcl
out
repz
lods
shll
out
jb
mov
fldl
jle
add
out
xchg
int
jg
lcall
push
adc
loop
jno
insb
adc
loopne
dec
jecxz
clc
xchg
or
inc
push
inc
mov
outsl
pop
inc
or
loope
sbb
jns
enter
or
dec
icebp
rcrb
fcoml
cs
testl
mul
popa
test
pop
aas
fs
or
movsb
int
and
and
sahf
sar
lret
into
cwtl
and
loopne
add
jns
sbb
in
xor
push
sub
pop
inc
scas
dec
arpl
rcll
mov
daa
fidivrl
mov
fidivrs
fstl
aas
test
adc
fwait
xchg
mov
movsl
imul
mov
cltd
mov
jnp
nop
pop
mov
in
jg
bound
cmp
repnz
fldenv
sub
pop
mov
mov
in
shl
outsl
mov
int3
test
inc
mov
clc
push
test
loope
jns
or
jno
repz
jns
sbb
lea
or
mov
hlt
inc
call
xor
xchg
pop
movsb
scas
cmp
mov
bnd
aaa
sbb
mov
fdivrl
jge
xchg
out
add
lret
ljmp
pop
push
imul
sub
mov
lods
mov
les
xchg
pop
mov
test
int3
jle
jg
mov
ret
mov
jnp
out
adc
and
xchg
lea
cwtl
leave
sub
dec
cmp
pop
sbb
call
push
inc
xor
mov
stos
and
mov
mov
jns
sbb
sbb
sbb
popf
mov
add
test
sahf
ljmp
mov
inc
dec
dec
inc
shl
lods
mov
aas
out
add
out
mov
push
insl
in
mov
cvtps2pd
mov
sub
insl
mov
ror
push
sbb
rorb
sbb
xor
dec
mov
mov
xchg
hlt
sbb
in
and
jbe
jno
mov
sub
out
nop
cld
push
adc
outsl
sub
mov
loop
movsb
inc
mov
mov
push
xchg
out
mov
xchg
mov
test
sub
or
lock
jnp
xor
jmp
or
fldenv
loop
push
aam
xchg
cmpsb
ficompl
sbb
aad
outsl
sbb
mov
fiaddl
imul
out
jo
lds
sahf
xor
push
cld
popf
sti
add
push
testl
daa
cwtl
rcll
and
sbb
shll
lret
xlat
mov
xor
inc
pop
add
add
dec
xchg
jge
push
pop
cmp
cwtl
adc
iret
out
jecxz
mov
ja
insb
stos
dec
inc
push
mov
jb
pusha
mov
cli
mov
jmp
fwait
mov
xor
mov
in
lods
bound
fmuls
dec
push
inc
xchg
inc
stos
mov
scas
lods
pop
sub
int3
jg
mov
add
jg
push
popa
addr16
aas
jle
sub
lcall
orl
sub
xchg
cwtl
scas
xor
cmpsb
inc
mov
popa
rcl
mov
jg
cmp
adc
cmpsl
pop
addr16
adc
sub
or
lcall
sub
jo
or
cltd
and
cmp
and
test
and
mov
test
cmp
add
jge
sub
pop
cmpsb
sbb
lods
jle
cwtl
jno
and
jle
int
mov
cmpsl
mov
xor
mov
clc
pop
sbb
call
add
ss
inc
js
movsb
xchg
adcb
fs
mov
dec
dec
xchg
cmpsb
mov
out
sahf
aas
ss
fcomip
out
fstps
mov
xchg
dec
popf
out
pusha
test
lret
bound
in
cmp
sbbb
pusha
inc
andb
and
icebp
and
mov
in
xchg
cmpsl
mov
mov
fstpt
xchg
mov
adc
pop
mov
lahf
mov
mov
loope
mov
xchg
add
cs
outsb
ds
fistps
jb
push
jo
and
inc
and
enter
mov
adc
out
arpl
dec
sbb
in
mov
mov
ret
das
cmpb
fldl2t
stc
push
add
and
pop
fldt
push
shlb
jne
push
push
flds
sub
pop
rcll
not
shll
fildl
adc
cmpsb
ss
push
clc
or
jge
push
sbb
sbb
pop
add
dec
lods
mov
inc
xorl
mov
xor
or
out
inc
lock
xor
pop
pushf
fstpl
nop
cwtl
in
xor
subb
call
pop
imul
jl
pusha
divb
in
add
sub
cmp
jo
sbb
inc
std
mov
fiadds
insl
dec
and
sbb
xchg
add
cld
jne
sub
and
pusha
aas
fbld
adc
ja
mov
jnp
mov
test
push
lea
jl
sub
and
fwait
xor
movsl
mov
and
jb
mov
inc
js
cmpl
dec
push
dec
test
sbb
mov
daa
inc
mov
ja
push
loope
dec
mov
aad
xchg
pop
or
jo
fsubl
mov
out
test
loope
mov
sub
push
push
ljmp
add
test
push
cmp
aad
mov
lcall
cmp
out
bnd
push
adc
adc
in
push
repz
mov
ds
popf
in
fpatan
lock
scas
fcmovnu
dec
and
pushf
lret
or
sub
leave
mov
or
insl
inc
dec
push
adc
stos
mov
repnz
fldcw
movsl
gs
aaa
or
xchg
leave
adc
push
mov
mov
out
jno
jle
std
pop
aam
dec
and
or
xchg
int3
jge
inc
lahf
imul
xor
inc
lea
repnz
cli
out
jo
popa
adc
xchg
and
mov
ljmp
mov
xchg
mov
lea
pop
xchg
rcl
sbb
enter
xchg
pop
mov
dec
lods
ficomps
mov
cmp
outsb
out
stos
xor
les
stc
jo
sub
aad
scas
in
test
fnstcw
jae
pop
adc
movsb
adc
push
mov
cmpsl
mov
xorb
shll
mov
mov
jno
or
inc
or
cld
mov
in
jno
or
add
pop
cmp
and
push
aas
scas
dec
in
mov
in
dec
arpl
fisubrs
cmp
sar
fdivp
xor
push
lahf
add
inc
hlt
jae
pop
sub
sbb
add
cld
sub
xor
pop
in
sti
cld
aam
xlat
inc
fimuls
das
test
rcr
pop
shl
xchg
ja
je
add
add
ret
xor
nop
push
lret
lods
mov
out
outsl
fcoms
mov
idiv
cs
sbb
nop
push
cli
fstpt
rcrb
push
scas
out
mov
cmc
int
inc
loopne
mov
bound
mov
lock
dec
ds
lods
cmp
ss
ficoms
cmp
adc
movsb
adc
or
ss
inc
mov
hlt
stos
hlt
cmp
iret
xor
xor
mov
cmp
lcall
inc
lds
lock
int3
loope
gs
jg
out
sub
mov
push
cltd
sub
decb
add
pop
bound
mov
std
aaa
cli
pop
sbb
and
push
lds
cs
enter
cwtl
test
addl
dec
jle
out
dec
cmc
jnp
cld
cmp
sub
and
int3
xor
pop
fnstcw
pop
sbb
aas
pop
inc
dec
daa
lock
adc
cmp
mov
or
mov
add
popa
repz
adc
mov
mov
nop
or
outsb
fwait
pop
popa
ds
mov
fidivl
mov
repz
enter
idivb
popf
xchg
push
mov
or
movsb
sbb
les
xor
pop
jecxz
mov
xchg
cmpsl
push
xchg
popl
jnp
sti
daa
aad
xor
cmp
add
lds
mov
aaa
jae
add
std
jge
xchg
ret
inc
xor
push
sbbl
pop
cmpsb
sbb
sbb
mov
or
icebp
jmp
jecxz
lods
clc
sbb
fwait
xchg
in
fcoml
pop
aaa
lds
and
outsb
es
xor
xchg
or
or
lea
xor
scas
add
hlt
or
pop
jo
xchg
adc
xorb
cli
insl
cmp
add
ja
aas
pop
stos
xorl
xor
enter
bound
test
lds
fsubl
repnz
push
push
mov
cli
imul
repnz
adc
addr16
dec
mov
iret
nop
lret
bound
push
negl
xchg
fld
subl
loopne
sbb
push
cld
cld
dec
clc
cld
mov
inc
jno
xchg
xchg
sub
xor
mov
pop
dec
cli
push
push
xor
dec
fs
jbe
adc
sbb
inc
imul
stos
push
jle
pusha
xor
push
inc
insb
adc
xchg
roll
lret
insb
sub
sub
je
xchg
mov
lahf
pop
scas
jecxz
adc
pop
pusha
jno
adc
adc
cli
int
aam
pop
and
das
addb
inc
shlb
mov
pop
sbb
xor
sbb
cmp
mov
pushf
outsl
cmp
test
and
scas
scas
mov
shr
sub
mov
lods
insb
or
call
jp
xchg
dec
rcrl
sti
pusha
insb
adc
add
cmpsl
jno
dec
imul
push
cld
lock
sub
dec
inc
lcall
out
push
arpl
add
xor
add
mov
stc
sti
jle
push
cmpsl
cmp
cwtl
mov
pop
shl
pop
mov
scas
mov
jbe
sub
sbb
mov
sbb
mov
lret
fisttps
push
mov
nop
mov
int
int
cmp
and
dec
lahf
js
sbb
jne
or
mov
mov
popw
insb
fcoms
clc
fbstp
xor
push
je
daa
dec
pop
push
jg
jg
iret
mov
shl
xchg
jle
rcr
jb
add
fldcw
mov
mov
jmp
scas
mov
data16
and
int3
inc
rorl
adc
imul
jecxz
add
cmpb
jle
fucomi
push
jbe
xor
cmp
scas
aam
fsubr
mov
pop
in
outsb
loopne
ret
test
push
mov
mov
and
jl
push
mov
mov
fcomp
jl
adc
jmp
mov
shll
jge
in
push
cwtl
mov
shrl
xchg
repnz
inc
ljmp
add
sub
repz
arpl
xor
mov
aaa
or
push
shrl
cmp
cmpsl
sub
sbb
cmc
push
jl
xor
xchg
mov
cmc
add
sub
jbe
test
imul
mov
xor
sahf
sub
mov
ds
or
stc
out
test
inc
jnp
add
lea
adc
cltd
and
pop
xor
mov
and
sbb
sbb
jns
adc
frstor
cmpl
mov
pushf
lea
lcall
xchg
pop
push
rorb
js
ret
sbb
mov
pop
repz
adc
dec
jns
dec
icebp
mov
addl
cltd
mov
les
mov
and
movsb
sti
push
das
xor
cmp
dec
jae
xor
add
popf
sub
jne
sub
add
jo
dec
xchg
lret
pushf
adc
loopne
fs
xchg
or
xchg
cltd
cmp
lret
xchg
cwtl
out
xchg
pop
adc
xchg
fsts
mov
push
sub
add
ret
gs
jne
dec
test
pop
xor
inc
gs
mov
ret
arpl
and
fsts
xchg
mov
fsubrl
movsl
mov
nop
loopne
imul
xor
stc
das
out
mov
fcoms
fwait
out
loope
in
inc
jno
and
push
xchg
in
add
and
jnp
push
xchg
and
ret
cmpsl
and
fs
test
imul
push
inc
movsb
mov
mov
push
xchg
movsl
push
imul
mov
repz
stos
mov
ficoms
andb
lock
repz
gs
and
bound
dec
mov
jb
adc
les
lret
mov
jmp
and
cmp
mov
in
or
jg
stc
icebp
push
mov
xchg
packuswb
mov
mov
jp
aaa
fbld
dec
mov
push
xor
cmpsl
or
mov
test
sub
stos
pusha
push
stc
lods
dec
mov
hlt
mov
cmc
inc
sbb
jle
dec
jmp
mov
out
repz
push
add
inc
shlb
jns
incb
into
stos
cmp
push
cmp
jmp
jnp
js
mov
mov
mov
fdivrs
scas
push
repnz
lea
pop
femms
loopne
xorl
cwtl
push
ficompl
out
mov
or
mov
cmp
dec
sub
ja
sbb
or
push
js
mov
jo
dec
test
pop
pop
mov
fcmovnbe
pop
in
or
add
jge
and
dec
pop
jge
pop
mov
mov
xchg
inc
int
stos
pusha
mov
inc
push
outsl
pop
es
mov
lahf
fxch
neg
test
int3
xchg
cmpb
and
mov
int3
jge
sbb
push
sbb
inc
inc
daa
sub
push
dec
aam
imul
sub
jg
mov
inc
cmp
mov
aaa
es
sbb
adc
jecxz
add
test
mov
or
pushf
ss
add
jle
cmp
jns
push
mov
jp
ss
xchg
mov
adc
dec
incb
mov
cmc
push
outsb
dec
cli
jnp
gs
sbb
mov
gs
push
icebp
and
stc
insb
push
lock
mov
int3
into
inc
inc
sbb
sbb
imul
adc
ds
sub
and
jbe
scas
in
cmpsl
adc
dec
test
inc
cmp
pop
pop
rolb
cmpsb
rolb
mov
enter
adc
jno
movb
iret
push
jae
xchg
xchg
sbb
sbb
loop
pop
mov
xchg
mov
pop
mov
and
lock
insb
mov
cs
pusha
xor
sub
aam
jp
popf
loope
divb
or
ret
push
jo
sub
or
roll
mov
xor
fnstcw
add
sbb
jno,pt
and
mov
and
push
mov
mov
sub
shl
xor
bnd
or
testb
mulb
and
test
sub
out
roll
les
xchg
add
test
je
xor
jmp
in
mov
jne
fisttpl
jno
mov
out
and
push
lahf
xor
fsubs
test
ljmp
clc
mov
sub
pushf
into
cmp
jmp
ret
mov
scas
jns
cmp
cmp
jecxz
jno
pop
leave
cwtl
lods
sbb
pop
add
cmc
mov
mov
cmp
or
orl
insb
and
cltd
sbb
and
cli
loopne
test
adc
mov
ljmp
push
lds
lods
xchg
mov
sub
sub
aas
sbb
mov
filds
ret
popf
ret
cmp
jae
mov
jge
out
jbe
scas
mov
movsl
cmp
mov
loopne
pop
or
mov
xchg
xor
insb
sahf
pop
loope
mov
rcll
sbb
arpl
sti
sbb
das
dec
sahf
push
sbb
bound
add
inc
or
rorb
mov
mov
or
adc
es
jnp
shrl
cmpl
push
pusha
stos
inc
add
sbb
popf
jb
fs
fdiv
scas
mov
imul
push
subl
cs
mov
daa
cmpsl
pop
adc
mov
mov
repnz
cld
pop
cmp
ret
or
nop
push
pop
or
imul
clc
movsl
or
add
xchg
clc
or
push
sub
fnsave
jne
xor
arpl
mov
push
out
or
xchg
push
test
in
sbb
mov
or
int3
mov
xor
lea
popf
mov
jmp
das
xor
repnz
es
jg
mov
pusha
addr16
jge
xor
roll
orb
shl
jmp
jp
and
mov
cld
jmp
out
cmp
inc
jp
testb
ret
mov
xlat
push
fstpt
fnstenv
xor
cltd
inc
or
adcl
cmpsb
add
mov
xchg
add
mov
or
cmp
push
out
sub
cld
rorl
add
stos
adc
sub
mov
daa
push
add
subb
loop
dec
xchg
add
lds
aad
daa
dec
ljmp
add
xchg
out
mov
push
rol
into
push
pop
inc
sub
jno
mov
cmp
mov
dec
push
rcrl
movsb
stc
and
xorb
insb
adcl
add
jno
sub
dec
push
pop
sti
xchg
shl
pop
sti
add
xor
popf
add
jae
add
and
adc
cmpsb
clc
jae
in
sub
test
out
xchg
add
scas
mov
pusha
xchg
arpl
pop
push
data16
jmp
cltd
addr16
jno
movsl
adc
nop
fwait
push
ja
in
in
push
enter
xor
icebp
outsl
loop
pop
or
adc
fnsave
pop
or
scas
arpl
popf
adc
dec
adc
add
leave
das
pop
dec
dec
xchg
scas
dec
mov
adc
jmp
jp
mov
xchg
mov
and
jge
and
jno
cmp
mov
xor
std
jg
xchg
sub
pop
in
mov
xchg
pop
lret
jb
inc
jp
mov
outsl
jb
loope
mov
subb
jle
lds
aam
jnp
mov
bound
outsb
icebp
pushf
fstl
cltd
jmp
xchg
fistl
mov
xchg
dec
aaa
inc
fwait
xlat
pop
inc
xchg
int3
sbb
dec
push
out
movsb
icebp
pop
ds
add
lcall
popf
scas
das
cmp
cmp
ret
xchg
sar
ds
mov
movsb
cmpsl
pusha
sub
add
jmp
dec
pop
cwtl
push
pop
enter
push
notl
push
adc
push
das
or
sub
cmp
lahf
sbb
lods
and
push
push
mov
jg
sbb
or
mov
jb
sbb
sub
addb
scas
repz
loop
xchg
xor
adc
addr16
dec
push
xlat
test
lds
jns
ds
sub
inc
stc
dec
hlt
popf
shrb
icebp
pop
lcall
shll
push
add
sbb
incb
sbb
add
movsb
test
or
xor
popf
loope
std
mov
arpl
adc
adcl
repnz
push
pushl
mov
hlt
pusha
xor
cmp
in
pop
pop
daa
sub
mov
jecxz
sub
loopne
daa
mov
mov
mov
dec
fidivs
xchg
cli
pop
xchg
sub
xchg
adc
xor
inc
neg
stos
loop
gs
ja
lds
in
add
shll
pusha
repnz
lea
cwtl
xlat
add
mov
shll
xchg
fsub
push
pushw
xchg
or
lcall
adcl
iret
test
adc
fisttpll
jmp
pop
pop
xchg
push
out
cmpsb
int3
push
mov
iret
iret
les
mov
cmpsb
aaa
mov
out
frstor
rep
lret
mov
in
mov
add
xlat
clc
xorl
fwait
in
and
xor
ja
repnz
arpl
dec
testl
dec
imul
ja
repz
mov
xor
fistpll
mov
rcr
jnp
in
mov
mov
cmp
mov
mov
push
mov
mov
sub
in
shlb
fcomi
mov
out
subl
jae
fbstp
add
xor
add
sbb
mov
and
xor
lods
pop
pop
jns
stos
out
adc
lret
mov
or
pop
test
cmpsl
sub
cs
push
cmp
push
xchg
mov
lods
pop
cmpsl
clc
je
loopne
shll
stos
ret
insl
dec
adc
sub
mov
xorb
jmp
cld
push
mov
jb
das
push
and
ja
push
push
movsl
test
mov
loopne
stos
cmp
adc
aas
out
and
lods
mov
adcb
inc
pop
imull
aad
std
fs
mov
clc
mov
ds
or
in
ds
sbb
fcomi
sub
jecxz
pop
sbb
fdivr
repnz
cmp
dec
repnz
rcrb
pushf
inc
dec
push
and
nop
pop
dec
rcl
push
test
push
push
out
bnd
adc
lock
aas
jle
imul
push
data16
mov
cmp
pop
std
insl
cwtl
clc
pusha
and
inc
adc
pop
mov
lret
jns
arpl
add
and
sar
fisubrl
aad
mov
in
push
xor
pop
or
scas
sub
jmp
nop
inc
add
mov
mov
loopne
call
sub
fwait
inc
pop
inc
dec
call
add
aaa
and
ds
fistpll
sbb
jo
xchg
fists
fnstcw
jge
fildl
jg
xchg
push
push
add
sbbb
xchg
leave
mov
push
shl
xchg
sub
pop
pop
pop
pop
sub
std
xchg
lea
cmpl
add
mov
ret
mov
arpl
out
dec
movsl
mov
pop
pop
aad
cmp
xchg
jecxz
adc
mov
pop
pop
inc
fldt
mov
or
xchg
mov
add
mov
jbe
sub
stc
sbb
fnop
sub
fsubrl
mov
adc
or
sbb
mov
mov
mov
xchg
xor
xchg
mov
roll
imul
scas
int3
or
rorl
jmp
pusha
divb
sti
jns
mov
cltd
das
adc
xlat
push
loope
fcompl
int3
mov
ret
mov
pushf
popa
test
cmpsl
pop
incl
and
mov
push
sub
popa
ss
xor
mov
mov
mov
sbb
or
xchg
xchg
cld
mov
ret
jnp
sbb
aam
mov
xchg
or
mov
or
fcmovnbe
or
cs
or
xor
je
dec
jecxz
divl
pop
pop
in
or
icebp
adc
subb
cmp
pop
loope
dec
fwait
push
in
cltd
mov
cmp
lahf
es
push
cwtl
xchg
xor
pop
cmp
mov
jge
lret
and
push
pop
mov
cwtl
pop
jecxz,pn
cwtl
fists
push
add
jno
xchg
jns
movsl
xor
lret
mov
nop
ds
sbb
xor
shrb
mov
daa
adc
addr16
dec
in
scas
ljmp
mov
aam
jg
in
jp
sbb
cwtl
mov
push
mov
inc
aas
sbb
fldenv
push
xlat
sbb
cmpsl
data16
lods
fwait
ja
push
das
repnz
mov
mov
sbb
int
pop
cwtl
mov
push
push
cmp
mov
mov
jno
cs
cmp
cmp
call
jge
subl
movsb
or
pop
adc
shrl
jl
mov
jecxz
ds
sbb
ret
notl
dec
insl
cwtl
add
fs
pop
push
out
out
loop
inc
and
jmp
fimuls
sub
pop
repnz
and
adc
inc
or
mov
cmp
and
jle
dec
imul
push
cmp
stos
and
pop
lds
jb
push
insl
aam
mov
inc
adc
lods
xor
lret
pop
and
sbb
cmpsl
jge
jmp
push
adc
aas
cmp
xchg
clc
in
mull
jg
loopne
push
jnp
jmp
nop
mov
xor
pop
jo
in
pop
stos
nop
cmp
cld
dec
jmp
movsb
dec
fs
loop
mov
and
push
pop
push
int
pop
jp
rcrb
aaa
add
shrb
push
aas
test
ljmp
jbe
sarl
fnstcw
mov
pop
cmp
mov
call
dec
roll
lret
jecxz
cmp
or
and
cmp
cli
clc
xlat
pop
xlat
mov
sbb
inc
insb
add
popf
or
sbb
jge
roll
adc
loop
insb
scas
jo
aaa
fnstenv
lods
xor
push
push
leave
xchg
and
push
dec
push
mov
aaa
dec
xor
ds
or
ret
daa
pop
pop
mov
daa
out
popf
sbb
sub
sub
or
fcoml
cmp
inc
mov
inc
addr16
popa
lods
arpl
loopne
insl
inc
flds
lret
mov
mov
or
sub
insb
aaa
lret
fisttpll
fisttpll
insb
aam
enter
mov
ret
pusha
test
dec
stos
cmp
pop
add
out
aam
jo
dec
xchg
adc
into
pop
push
mov
mov
cltd
jns
adc
push
mov
divl
jp
scas
stos
xchg
lea
or
dec
movsl
stc
mov
hlt
fiadds
xchg
decb
and
daa
std
cmp
adcl
inc
divb
cld
mov
inc
in
stc
stc
das
mov
dec
mov
cmp
push
lcall
mov
cld
loop
mov
test
out
gs
pop
cli
pop
sub
mov
pop
les
xlat
mov
sub
push
and
push
repz
iret
jae
fmuls
pop
push
fcomip
lret
and
push
push
mov
mov
cmp
fisttps
dec
shlb
cmp
inc
dec
mov
xlat
push
test
outsb
lret
fbld
or
jbe
icebp
orl
js
sbb
fisubl
icebp
data16
jae
sar
les
or
cli
mov
sub
mov
dec
call
add
xor
insl
jb
mov
jns
mov
adc
testb
sbb
into
int3
jns
lea
xchg
repz
and
aaa
fidivrl
xchg
lock
and
pop
test
and
sub
dec
adc
dec
jecxz
mulb
adc
push
xchg
icebp
mov
jb
loopne
push
sbb
ficoml
mov
sbb
sarl
sub
pushf
sub
mov
mov
dec
push
inc
test
cmpsb
daa
pop
mov
lds
jmp
inc
dec
xchg
inc
inc
in
mov
pop
sub
mov
ljmp
mov
sub
in
mov
jge
mov
or
mov
jo
pop
insb
push
pushf
adc
mov
push
cmp
mov
ret
mov
sahf
jge
shlb
adc
cli
mov
xchg
insb
cmp
fdivs
out
nop
or
mov
jecxz
cmp
dec
push
je
rcrb
outsb
mov
push
stos
cmp
adc
dec
pop
sahf
dec
xor
push
pop
loope
sub
or
jecxz
jl
repz
push
xchg
add
ret
jo
mov
jl
push
mov
xchg
mov
imul
pop
shrb
xor
lods
lret
repz
fldl2t
imul
and
adc
shll
neg
push
xchg
push
ffree
in
xchg
jnp
insb
sahf
mov
enter
mov
jbe
pop
clc
cmp
dec
test
sub
shl
pop
xchg
inc
jae
call
loope
arpl
out
and
inc
add
sbb
inc
inc
cmp
dec
dec
xor
and
aas
movsl
xchg
adc
addr16
mov
ljmp
hlt
xchg
dec
xchg
xorl
pop
xchg
pushf
test
cmp
cmp
jmp
mov
jnp
cli
insl
mov
xchg
jae
je
pop
fdivrp
mov
sub
sbb
rclb
out
cmp
aas
jl
dec
bound
dec
pop
push
xor
xor
loop
and
jmp
lret
sbb
rcl
xor
sbb
andb
fwait
jge
hlt
int3
dec
and
aaa
mov
pop
inc
xor
jp
fbld
jge
xor
in
add
add
add
popf
adc
lods
mov
lret
pop
mov
xor
adc
push
test
test
mov
fsub
fimuls
jns
negb
hlt
pop
jl
inc
cltd
cltd
xchg
out
or
dec
hlt
rclb
adc
pusha
stos
cmpsb
aas
ds
sbb
add
dec
cmp
sbb
and
ds
pop
jge
pop
and
xchg
mov
js
ret
ss
mov
imul
mov
lock
iret
push
cld
xor
push
jae
fadd
pop
movsl
daa
repz
mov
add
and
push
xor
fwait
push
aam
paddusb
mov
jb
cs
shrb
pop
ljmp
xor
arpl
pop
cmp
pop
sub
call
pop
mov
jge
sbb
adc
sub
pop
sbb
xchg
jbe
cmp
pusha
inc
dec
dec
mov
cld
jmp
popf
insl
dec
pop
or
jo
pop
test
ret
fists
mov
fwait
sbb
xchg
dec
jle
and
pop
lahf
pushf
xor
fisubrs
or
jp
popf
lock
mov
lods
imul
scas
sarb
mov
icebp
orl
outsl
xchg
orb
sub
and
lahf
mov
jle
dec
iret
mov
or
bound
push
mov
fistpl
lret
xor
cmp
js
dec
cmpsb
pop
xchg
sbb
pop
xchg
inc
jbe
sub
cmc
fildll
sti
xor
mov
mov
cmp
push
shll
ja
scas
and
mov
mov
pusha
inc
sub
std
and
scas
push
push
or
push
mov
test
out
mov
xchg
sub
pop
stos
inc
pop
dec
insb
cmp
mov
in
push
jp
stc
lea
hlt
imul
or
bound
jg
cwtl
repnz
std
rcrl
lock
push
es
xor
lret
shll
cmp
sbb
push
imul
push
in
push
push
rol
gs
mull
mov
jp
sub
stos
aas
xor
sub
addr16
jge
and
xchg
jp
out
adc
fisubrl
adc
xor
test
ret
hlt
sti
adc
leave
ja
mov
int3
jle
lcall
in
enter
in
cmp
cmp
adc
sbb
das
jle
inc
pop
mov
lret
and
incb
cmpsb
dec
push
adc
xor
out
sbb
lds
out
sub
cld
mov
fwait
jle
push
insl
inc
arpl
jae
or
inc
xor
xlat
adc
mov
scas
ret
add
add
dec
pushf
addr16
gs
in
into
push
xor
adc
and
shlb
popa
push
mov
push
nop
mov
lcall
icebp
pop
pop
dec
cs
inc
jle
cmp
call
rcr
shll
out
les
push
out
xchg
dec
sbb
xchg
insl
jns
sub
cmp
pop
arpl
lds
xor
lret
cli
sub
sbb
dec
sbb
shll
add
cmp
fwait
into
push
nop
add
xchg
pop
push
adc
inc
cmp
mov
push
repz
xor
add
test
dec
mov
dec
std
add
xor
cltd
and
xchg
repz
inc
sub
test
xor
in
xchg
adc
pop
xchg
fnstcw
dec
push
jl
pop
jb
loopne
add
mov
fwait
mov
lock
sub
or
cltd
jmp
dec
movsb
faddl
push
mov
jbe
mov
fnsave
imul
fwait
adc
orl
enter
ja
inc
ss
xchg
jbe
stc
cltd
int3
outsl
data16
and
std
enter
sbb
pop
xchg
xchg
adcb
push
loopne
aaa
js
out
xchg
dec
stos
adc
mov
bound
ror
jbe
push
or
pop
aas
outsb
jns
push
enter
adc
mov
sub
jle
mov
je
les
in
xor
addr16
lea
xchg
out
popa
adc
enter
mov
push
add
sbb
bound
and
dec
shll
fcoms
adc
and
xlat
mov
jmp
mov
push
push
pop
mov
int3
inc
and
inc
add
dec
cmpsl
enter
popf
shll
push
lcall
inc
cmp
pop
and
mov
adc
pop
cmp
dec
daa
push
and
inc
flds
mov
xchg
pop
sub
add
jo
xchg
add
jle
jp
adc
stc
aas
sub
xchg
xor
fnsave
sub
sbb
fisubrl
lcall
jno
in
pop
jae
jmp
push
lea
data16
jne
aam
lock
xchg
mov
popf
outsl
mov
xchg
dec
loope
sbb
and
or
ljmp
fwait
sbb
loopne
xor
cmp
add
sbb
cmc
leave
lods
insb
adc
pop
or
xchg
xor
push
dec
lahf
sub
out
mov
stos
jg
add
push
jne
fildll
shlb
xchg
mov
and
scas
mov
lret
pushf
push
adc
sahf
jp
adc
fxch
jo
je
sub
lahf
cs
or
and
call
popa
gs
push
test
pop
or
shlb
ds
xchg
lock
sbb
in
jae
xor
cli
movsl
cmp
mov
out
cmc
push
add
jp
popf
push
push
subl
insl
mov
ret
jmp
loope
xchg
enter
push
jle
mov
enter
out
cmp
or
lods
jne
test
out
cmpl
rclb
mov
mov
in
pop
xchg
mov
adc
mov
enter
add
dec
jecxz
cmp
je
loop
shufps
sti
outsb
add
add
jbe
fwait
jo
xchg
add
cmpsb
stos
test
int3
mov
mov
mov
les
or
leave
lret
sub
js
adc
mov
test
mov
xchg
lret
lds
mov
mov
lret
pop
loop
xor
xor
fidivrl
cmp
cltd
push
adc
lods
mov
in
inc
pushf
int3
inc
mov
xchg
jle
je
fs
pop
inc
mov
aad
add
pop
fdivp
pop
inc
movsb
or
aad
mov
ja
mov
test
adc
sbb
leave
sti
stos
jo
js
dec
enter
ss
push
jg
mov
xor
xor
jg
push
or
cmp
sub
or
sti
push
inc
outsl
dec
fimull
pop
jecxz
lahf
test
mov
add
testb
mov
mov
leave
jge
dec
mov
sbb
dec
mov
jl
orb
ljmp
jae
hlt
mov
dec
pusha
pop
mov
stc
test
lods
icebp
shrb
pop
mov
repnz
jnp
xchg
nop
sarb
in
add
imul
repnz
push
jp
lds
adc
fisttpl
and
mul
mov
dec
jne
inc
sub
inc
in
repz
popf
out
popf
test
loope
add
cmp
xchg
push
jecxz
xchg
xchg
cmc
aaa
enter
pop
jae
jecxz
and
add
mov
popf
add
addr16
or
les
mov
clc
addr16
pop
shll
push
mov
and
pop
outsb
xor
push
mov
jae
mov
andb
shlb
in
mov
into
xchg
cmp
lods
sbb
divl
sub
jg
es
imul
das
xchg
lahf
aam
cmp
popf
jnp
pop
out
imul
fcmovbe
data16
and
jg
and
xor
adc
mov
add
pop
and
fnsave
and
jo
out
adc
mov
lds
or
loope
push
pop
cs
aad
pop
pop
pop
es
pop
cmp
xor
jo
push
fdiv
mov
add
or
sbb
loope
fcmovnb
cld
mov
lock
cmp
mov
cmpsb
and
pop
movsl
out
popf
aaa
lret
cmp
xchg
inc
mov
out
out
in
xchg
xchg
lea
imul
data16
sbbb
and
dec
inc
mov
ljmp
inc
inc
pop
gs
out
std
mov
xchg
jg
mov
test
in
faddl
jg
test
test
jo
sub
mov
xchg
jns
aaa
sbb
cli
rolb
pop
cld
fdivrl
mov
and
xchg
sub
repz
aas
out
mov
shl
je,pt
mov
call
int
insb
subl
push
cmp
addr16
add
push
pop
imul
xchg
cmpsl
mov
dec
sub
add
xor
out
lahf
push
push
ljmp
sbb
xchg
mov
or
xor
mov
adc
dec
movsb
out
addl
push
mov
aas
and
lahf
jle
fcomps
mov
in
add
mov
push
or
xchg
mov
mov
push
mov
nop
adc
ja
inc
icebp
in
push
inc
cmp
lods
push
pop
push
jae
nop
lods
xchg
dec
rcrl
push
ss
push
sub
fiadds
push
push
jle
xchg
xchg
cmp
dec
lds
xchg
mov
lret
lds
int3
or
push
mov
cmpsl
fidivrs
add
add
aaa
ficomps
xchg
mov
push
xor
fnsave
enter
jge
add
mov
push
sbb
addl
enter
jle
dec
or
dec
stos
xchg
and
adc
les
jae
cmc
xor
and
pop
leave
in
aas
jne
push
sbbl
mov
out
jnp
outsl
int
xchg
rcrl
mov
jno
lahf
dec
divb
loopne
mov
sti
out
outsb
sub
jnp
and
in
inc
inc
push
xchg
out
std
jns
out
sub
roll
ss
pop
push
mov
icebp
or
loope
lahf
cli
add
leave
test
scas
cmpsb
dec
dec
dec
or
mov
es
pop
fildll
fsubl
sbb
mov
aaa
daa
gs
dec
aad
mov
repz
ss
aad
imul
cs
adc
pushf
jp
or
or
ffreep
jle
mov
xchg
loopne
push
frstor
mov
or
imul
bound
movb
leave
jbe
xor
jge
adc
mov
dec
cltd
shlb
pop
pop
sbb
pusha
jl
test
pop
scas
cmp
sbb
ss
test
clc
mov
inc
test
push
icebp
aas
int
and
pop
ret
xor
mov
aad
jle
or
or
push
cwtl
insw
dec
out
cmpsb
sub
lret
daa
hlt
jg
fimuls
stos
xchg
iret
pop
int3
ljmp
jl
iret
or
adc
xchg
ja
mov
cmp
xor
cmp
push
pop
mov
inc
lods
pop
dec
mov
mov
dec
mov
ret
add
pusha
inc
xchg
loop
mov
mov
jbe
cmp
xor
jle
mov
les
movl
mov
mov
mov
push
push
inc
jae
xchg
dec
stc
mov
dec
ret
fdivr
xchg
int
loop
sub
push
jecxz
sbb
jae
fstpt
mov
nop
ret
leave
xor
negl
mov
xchg
push
test
ss
and
or
lcall
xchg
inc
shrl
or
pop
pop
in
scas
mov
mov
sqrtps
jge
rcrb
dec
pop
out
mov
lods
xchg
xchg
dec
inc
lret
pop
cld
mov
rep
rorb
fcomp
inc
cmp
push
popf
sahf
popl
pop
mov
add
in
mov
mov
hlt
adc
out
imul
and
idivl
push
dec
loopne
and
add
xor
cmpsb
divl
sbb
xlat
shlb
and
adcb
notl
push
outsl
mov
dec
inc
push
fwait
dec
add
fwait
jmp
mov
mov
and
pop
jle
and
cmp
cmp
mov
pusha
test
sbb
mov
mov
popa
xor
ljmp
sub
lods
sbb
jae
rorl
push
xor
aam
aam
xor
xor
mov
xchg
sbb
xor
nop
rcrb
sbb
or
nop
xor
mov
dec
mov
in
shrb
mov
sub
test
jle
cmp
pop
cli
inc
lahf
push
mov
leave
mov
ret
mov
cmp
shlb
jo
stc
mov
xchg
loop
nop
ja
cmp
arpl
sub
dec
pop
fistl
xorb
cmp
dec
clc
mov
rolb
inc
inc
and
mov
inc
xchg
in
push
lret
lods
loope
call
mov
es
fdivs
cmp
cmp
dec
adc
sub
loop
jo
ja
cwtl
jge
jae
mov
pop
ret
aaa
dec
pop
jae
test
mov
inc
mov
xchg
pop
jne
mov
cmp
rcll
ret
sbb
adc
xchg
ss
push
fstps
mov
fs
sahf
jb
addl
jbe
push
jno
scas
call
sub
jns
enter
shll
or
mov
cmpsl
jmp
fistl
lock
xchg
cmp
inc
iret
mov
inc
insb
dec
cwtl
xor
data16
cld
sbbb
out
in
int
pop
inc
jno
hlt
or
fsubrs
addr16
scas
test
jp
add
outsl
icebp
mov
xor
mov
inc
das
ret
cmp
orl
aad
push
mul
addb
ret
or
test
and
add
call
jno
fnstcw
frstor
sbb
andl
jne
cltd
test
loope
arpl
push
jmp
dec
cmpsb
cmpsb
xchg
aad
leave
iret
addr16
repnz
pop
popf
int
ljmp
enter
fidivl
clc
mov
xor
mov
out
cmp
fcoml
and
leave
jecxz
pop
sbb
pusha
mov
shll
ret
mov
jae
popa
fisubl
fisubl
lea
push
xchg
outsb
cli
xadd
xchg
cwtl
das
jae
and
xchg
pop
adc
pop
lar
sti
test
jmp
mov
les
push
mov
push
inc
xor
xchg
adc
inc
add
test
inc
in
xchg
mov
xchg
fstpt
sub
sahf
out
imul
mov
iret
jecxz
fiadds
rorb
inc
les
mov
aaa
subl
lea
push
punpcklwd
fidivl
movsb
leave
cmpsl
out
into
adc
dec
hlt
cmp
rcrb
xor
sbb
jnp
insl
xchg
jp
pop
mov
mov
xorl
daa
push
jno
push
or
sub
jecxz
sahf
jbe
mov
sahf
sahf
dec
cmp
pop
das
sub
aad
xchg
mov
sbb
add
mulb
loopne
test
mov
dec
loopne
lods
xor
sahf
mov
ss
mov
xchg
lods
sbb
xchg
add
mov
scas
ja
stos
sbb
int
add
and
jp
cmp
sar
mov
add
xlat
push
add
sar
bound
sbb
pop
sbb
hlt
mov
fnstenv
inc
cmp
and
imull
ror
push
movsb
jmp
lods
mov
aad
inc
cmc
loope
sarb
test
mov
stc
scas
push
add
das
push
adc
sub
jne
mov
mov
fildl
pop
test
adc
xchg
fldl
fs
mov
dec
mov
mov
loopne
xchg
push
test
out
mov
ja
adc
mov
addr16
outsl
aas
fs
inc
mov
pusha
scas
rcrl
in
aaa
push
in
push
and
sub
lret
int
pushf
in
call
push
cli
cs
sub
dec
xor
mov
add
out
jns
out
pop
xor
cmp
jne
shll
lahf
imul
mov
mov
xchg
fisttpl
xchg
out
push
cmp
and
imul
pop
and
xchg
pop
imul
push
fistpll
ret
mov
hlt
lods
loopne
push
roll
lahf
out
or
std
je
cmp
lcall
out
aaa
repnz
cs
lcall
cld
lcall
ja
jge
movsb
pop
jmp
mov
jns
xchg
aad
stos
in
fstp
shrl
jnp
mov
test
sti
fsubl
out
sbb
mov
pop
inc
outsb
mov
sub
popa
fimull
test
xchg
sbb
jmp
cmp
xchg
xchg
lea
add
dec
push
cmpsb
xchg
inc
adc
les
int
xor
pusha
sub
cmpsb
mov
inc
pop
stos
cmp
iret
vandnps
in
adc
shlb
ljmp
sub
and
pop
lock
and
lods
test
push
rolb
mov
jno
pop
je
add
lret
jl
mov
out
or
gs
cmp
cmp
mov
jno
out
data16
lret
sub
pushl
fneni(8087
mov
call
fistl
xchg
inc
popf
or
sub
xor
leave
mov
xor
mov
sub
or
cmp
push
insl
jg
jmp
cmc
jne
ja
jnp
loop
push
lock
xchg
sbbb
mov
lret
dec
inc
cli
clc
xchg
pop
push
iret
outsb
mov
adc
iret
leave
std
addl
sbb
imul
cld
cmp
mov
dec
shr
jle
insb
inc
rolb
jae
je
sti
sub
add
sbb
mov
loop
fs
mov
push
lret
inc
xor
jns
mov
lods
ror
mov
xchg
xchg
fcom
mov
ja
xchg
cmpsl
and
mov
cld
js
jmp
xchg
aas
pusha
iret
mov
shlb
xlat
insb
or
fadd
mov
adc
cmp
push
aad
mov
int
shrb
ljmp
mulb
into
ds
lcall
push
popa
sub
loop
pop
sbb
in
mov
xlat
out
ds
add
and
sub
shlb
fdivs
or
cmpsb
inc
in
or
mov
flds
in
xor
fisttpl
ficomps
jbe
push
push
shll
repnz
push
adc
mov
fsubrs
aas
sbb
mov
std
sub
mov
hlt
test
outsb
and
push
mov
cltd
shrl
inc
dec
dec
mov
and
ss
add
aam
pop
sub
fimull
cmp
xor
xor
imul
into
fcoml
xchg
push
jg
mov
add
adc
mov
mov
or
sub
lods
or
xchg
fcompl
cmpsl
and
daa
push
out
adc
mov
mov
out
mov
mov
sub
or
into
mov
test
mov
add
pushl
aaa
std
repnz
outsl
jne
pop
mov
pop
addps
sbb
in
mov
mov
xchg
xorb
pop
lds
jb
mov
or
mov
js
add
bnd
add
dec
sub
jns
ss
jg
jge
dec
stos
xor
iret
jbe
js
add
gs
cmp
or
repz
out
jle
movsb
popa
jge
xor
rcr
insb
fwait
aas
cmp
lret
or
xor
xchg
add
out
idiv
ljmp
lcall
pop
scas
or
adc
ficomps
jns
andb
push
ret
pop
aam
iret
jns
sbb
jbe
mov
pop
xchg
adc
jnp
jg
pop
sbbl
and
pop
adc
push
addr16
outsb
out
or
dec
cmpsl
add
loope
mov
xchg
dec
mov
test
xor
and
sarb
pop
adcl
stos
cmp
cmp
pop
xchg
mov
jnp
mov
mov
jne
iret
push
inc
sbb
dec
push
pop
push
or
pop
ret
inc
push
aad
icebp
cmp
dec
jmp
cmp
imul
popl
or
pop
mov
inc
fwait
sub
bnd
sbb
inc
inc
and
or
jl
adc
lea
inc
sub
in
lret
lahf
dec
pusha
push
pop
pop
pop
cwtl
outsl
outsl
mov
mov
xor
jmp
jo
data16
arpl
mov
movsb
mov
pop
pop
je
loop
inc
and
mov
jns
sbb
loopne
mov
jle
out
lods
cmpsb
test
inc
out
dec
push
xchg
leave
cwtl
add
test
pop
dec
sbb
pop
xchg
jmp
push
addb
jb
mov
shlb
jnp
lds
inc
xor
mov
push
repz
imul
pushf
testl
add
xchg
in
leave
sbb
jb
stos
negb
mov
in
sub
adc
inc
in
test
sbb
adc
jb
xor
jg
imul
push
loope
push
lret
mov
scas
into
xor
sbb
fisttps
jne
aad
push
fildll
pop
scas
dec
jge
and
mov
in
add
adc
js
xchg
push
adc
mov
cmpsl
jns
out
xor
or
in
cld
push
adc
jne
ljmp
xor
jg
mov
mov
es
repnz
inc
sbb
inc
arpl
test
and
sbbb
lret
pop
mov
jmp
dec
into
sub
aas
pusha
sbb
adc
aaa
jne
scas
inc
jns
dec
ficomps
test
mov
xchg
rol
mov
xchg
pop
push
nop
lea
xor
ficoms
inc
add
ljmp
lret
mov
lods
cmp
push
sub
rcrl
pop
push
test
xchg
jno
xor
xor
jge
push
rep
adc
fidivl
fisubrs
push
jnp
cwtl
inc
lcall
hlt
stos
pop
into
inc
xor
or
lods
addr16
loopne
fdivl
dec
push
lea
jl
mulb
sub
ss
cmp
je
xchg
repz
mov
in
imull
js
es
fisubl
clc
jae
inc
mov
add
in
mov
mov
mov
add
cmp
sarb
cwtl
icebp
pop
cmp
icebp
adc
bnd
and
pop
add
xor
repnz
les
inc
fidivs
cmp
cltd
sti
rolb
mov
cmp
sarb
nop
repnz
pop
sub
out
shll
test
leave
inc
ret
xor
mov
les
outsb
in
sub
cmp
aaa
lret
dec
movsb
in
loop
mov
call
push
sub
lret
js
daa
ficomps
jmp
pop
mov
mov
jmp
pop
pushf
fildl
outsb
jg
mov
and
fwait
sbb
lret
and
lcall
fcoml
fs
fmuls
mov
push
pop
jp
ret
adc
sub
inc
stos
mov
inc
out
or
fnsave
in
push
mov
fistpl
inc
lea
add
arpl
cmpsb
cmp
adc
bound
xor
fwait
shlb
fisubrl
mov
inc
loopne
mov
loope
lret
test
or
data16
xorl
cmpsb
xchg
cltd
ds
mov
sub
ror
mov
mov
sahf
hlt
das
rcrl
dec
pop
sbb
cs
arpl
call
addr16
mov
ret
dec
iret
idivl
andb
inc
in
shll
stc
inc
int
sbb
stc
mov
xchg
daa
stc
stos
mov
call
mov
xchg
mov
adc
jge
sahf
int
inc
dec
dec
mov
sub
xchg
xchg
cwtl
lcall
cltd
jno
fwait
add
and
insl
mov
or
cmp
mov
mov
inc
push
xor
adc
or
mov
jge
add
iret
fs
push
or
mov
sub
and
mov
je
jecxz
mov
stc
or
xor
and
cld
into
inc
pusha
add
in
sub
rclb
arpl
lcall
jno
cmp
out
fcompl
dec
or
or
fstps
in
cmc
mov
cmp
in
movl
inc
stos
repz
testl
sub
fisubl
call
mov
ds
lea
mov
int3
jo
shrl
int3
ss
adc
call
cld
stc
adc
mov
test
idiv
sbb
addr16
jno
dec
aaa
dec
fildl
jg
lahf
jno
nop
xor
imul
adc
add
ja
sbb
leave
inc
hlt
mov
mov
mov
and
and
inc
scas
filds
push
clc
cltd
insl
dec
cltd
xchg
jae
mov
out
mov
cmp
sar
mov
out
dec
in
loopne
cltd
lock
ja
mov
lods
stos
xchg
roll
or
insb
lret
lret
sub
popa
fnstsw
or
pop
jmp
outsb
mov
aam
sbb
loop
ret
ret
pop
lds
adc
jmp
sub
and
imul
test
xchg
sub
pop
fadds
xchg
lods
std
push
mov
xorb
mov
mov
in
js
xor
cltd
pop
loope
lahf
sahf
and
iret
inc
pop
inc
sbb
adc
enter
add
inc
inc
into
mov
into
and
ret
pop
scas
out
shlb
mov
mov
enter
and
imul
pop
nop
add
inc
add
mov
mov
mov
push
loop
xor
xchg
mov
shrd
bts
push
xchg
add
ret
xchg
adc
sbb
in
mov
outsl
mov
int
je
mov
in
dec
popf
push
jecxz
xor
shl
outsb
orb
push
xor
rorl
in
xchg
mov
mulb
mov
cs
push
mov
mov
ja
clc
ret
jl
adc
add
roll
push
movb
ret
scas
inc
outsl
xchg
loope
adc
je
xchg
push
inc
cwtl
fwait
mov
outsl
das
je
inc
adc
cwtl
mov
lcall
cmp
dec
xchg
sub
pop
adc
scas
xchg
jg
mov
xor
inc
inc
push
movl
movsl
inc
pop
lock
xchg
imul
inc
lods
cltd
sar
adc
jne
dec
xchg
pop
push
xchg
stos
int
dec
nop
dec
xchg
push
iret
fistpl
xchg
mov
lret
xlat
cmp
fiadds
pusha
sub
lods
sbb
xchg
mov
ud1
sub
cmc
mov
dec
cmp
and
mov
icebp
pop
sub
mov
inc
stos
or
pop
cmp
pop
mov
lods
xor
mov
call
sub
pop
lea
in
mov
xchg
add
add
aam
les
cmp
inc
fldenv
sub
xor
mov
loop
mov
mov
mov
pop
jmp
fbld
loope
pop
sbb
ret
not
ret
in
lret
mov
xor
mov
mov
jg
jl
xchg
iret
inc
cmpsl
fmull
adc
repnz
cmp
cmpsl
mov
or
call
and
sbb
jl
test
enter
gs
loopne
dec
nop
xchg
imul
movsl
adc
and
mov
mov
dec
inc
add
push
sbb
push
fnstcw
sbb
sarl
divl
cmc
push
mov
clc
push
aas
into
lods
fdivrl
lods
jb
xor
xchg
sub
mov
pop
stc
inc
in
mov
mov
add
jg
pop
push
xor
add
cmpsb
xchg
shrl
mov
xchg
lahf
outsl
in
pop
std
pushf
das
cs
xchg
xchg
rorb
add
sahf
dec
push
dec
mov
push
xchg
sub
and
aas
jecxz
and
mov
mov
imul
stos
mov
or
pop
dec
scas
xchg
out
repnz
js
mov
mov
inc
in
out
addr16
iret
jns
ret
in
dec
jg
xchg
pop
mov
shlb
and
ret
push
jecxz
cwtl
push
lcall
and
jbe
lods
or
inc
loopne
pop
inc
cltd
xor
add
mov
iret
push
cltd
leave
sbb
xchg
mov
iret
add
js
xor
fsubl
loop
sbb
xchg
sub
scas
push
cli
dec
nop
cmp
mov
xor
loopne
add
mov
jae
mov
cwtl
fcoml
loop
pop
and
subl
shll
xor
insb
fldl2t
inc
mov
sub
ljmp
mov
jno
mov
sbb
sti
fs
mov
push
pop
jmp
lods
mov
repz
sbb
ljmp
rcrl
add
fs
in
lods
xor
dec
popf
jg
xor
ljmp
addb
xchg
imul
testl
and
popa
xchg
mov
sbb
mov
jns
sub
jne
jmp
mov
sub
jb
enter
jo
lret
cs
out
sub
dec
xor
pop
outsl
inc
sub
aad
add
dec
push
or
xchg
mov
scas
sahf
mov
cmp
fwait
push
dec
sbb
cs
sub
add
dec
push
stos
push
jnp
in
xchg
ror
jne
out
dec
or
daa
jne
mov
adc
add
das
sub
cli
dec
mov
inc
movsb
inc
or
jge
aaa
mov
push
jbe
cmp
lcall
movl
mov
dec
daa
loopne
outsb
mov
mov
enter
movsl
arpl
mov
loopne
es
dec
cmp
cwtl
ret
loop
cmp
jmp
loop
and
jo
es
movsb
xorb
cmp
adc
int3
mov
mov
xchg
add
fidivrl
fdivrl
clc
js
inc
inc
sbb
and
loopne
cmp
mov
push
shrb
arpl
dec
xrelease
jmp
add
cmp
daa
stc
ja
aad
hlt
lfs
pop
fsts
out
jne
pop
mov
cmp
xchg
nop
dec
xchg
or
and
aas
cmp
movsl
subb
pop
aad
pop
js
cmpsl
cmc
in
aas
and
in
out
mov
aam
push
mov
filds
dec
andb
push
ja
mov
sbb
mov
sub
push
jne
aam
xchg
push
mov
mov
aas
add
push
mov
sbb
mov
pop
mov
repz
aad
or
sahf
test
pop
mov
fsubl
and
outsb
rcll
lds
out
push
scas
dec
xchg
imul
pop
sahf
xorl
js
push
in
sbb
push
rcr
push
cmp
sahf
repz
xor
fwait
imull
push
ja
xor
int3
test
cmc
mov
xchg
jb
aam
shrl
cmp
push
std
shlb
pop
adc
and
scas
sub
arpl
mov
cmp
or
mov
cmp
cmp
jnp
insb
lahf
outsl
mov
cld
cmp
jne
loop
sub
push
push
addb
in
mov
push
or
inc
mov
cld
stos
inc
or
repnz
in
xchg
fdivp
pop
inc
xchg
scas
mov
jmp
clc
dec
fcomip
dec
das
mov
data16
insb
adc
cmp
test
das
xorb
sub
out
in
dec
jno
fadds
test
jbe
xor
dec
mov
cmc
adc
adc
movsb
ret
out
jl
pop
xlat
push
nop
repnz
jle
fiaddl
sbb
stos
mov
push
adc
jb
push
adc
or
mov
call
rcll
loope
jecxz
mov
les
lods
jge
shr
out
add
jbe
imul
push
push
sub
out
rcrb
jmp
fwait
inc
xor
sub
adc
mov
add
cltd
jno
push
cmp
dec
std
push
in
push
or
insl
movsb
shll
adc
loope
and
lods
fxam
and
aas
lret
cmp
pushf
and
std
adc
push
lcall
cmp
rclb
sub
test
lahf
inc
test
hlt
cli
pop
and
and
adc
push
mov
mov
push
fadds
lods
fwait
call
scas
cmpl
filds
mov
outsb
mov
cmp
stos
mov
dec
pusha
ds
jge
sti
mov
iret
and
negb
fsubrl
loope
add
aad
or
adc
dec
ds
or
movsb
dec
enter
hlt
dec
shlb
pusha
sub
push
lret
or
jnp
enter
mov
fisubrl
sarb
sub
pop
lock
lods
pop
rcl
imul
push
push
fnsave
aaa
rorl
lods
push
inc
stos
jge
inc
push
mov
rcll
pushf
push
popa
sub
loopne
js
pop
roll
loop
orb
mov
sub
dec
adc
out
dec
enter
clc
mov
rcll
pop
stos
ret
scas
pmaddwd
and
sub
xchg
insb
xor
mov
pop
pushf
pop
push
inc
cmpl
fistpll
push
in
movsb
xor
mov
mov
xchg
cwtl
inc
loope
adc
inc
iret
bound
jle
pop
in
movl
and
mov
push
xchg
dec
jno
jmp
fistpl
pusha
xor
call
dec
icebp
stc
and
mov
push
jge
data16
jo
cmp
in
mov
mov
ljmp
mov
and
xchg
test
cmp
cmp
mov
push
inc
mov
sub
jmp
dec
jmp
jo
jno
push
and
mov
aas
pop
mov
push
xchg
push
adc
xor
ljmp
fbstp
fiadds
mov
into
std
push
les
cmp
mov
hlt
mov
push
out
push
decb
aas
and
in
inc
pushf
pop
pop
dec
insb
cltd
pop
lock
dec
test
outsl
outsl
xchg
inc
mov
xchg
sbb
dec
mulb
cmpsb
and
inc
mov
mov
cmp
xchg
mov
sbb
andb
push
inc
aas
cmp
test
xchg
jge
xor
inc
scas
in
mov
or
mov
stos
adc
push
push
mov
inc
shl
dec
cmpsb
stc
pop
fsubr
cmp
fcompl
imul
cli
icebp
pop
xchg
fwait
sti
adc
orb
push
jp
std
rcll
das
sub
pushf
sub
add
mov
or
int3
adc
in
cltd
ficompl
in
push
xchg
ret
sub
mov
sub
scas
loope
loope
and
test
pop
xchg
push
js
loopne
shr
and
dec
fisubrl
stc
mov
enter
push
and
es
repz
outsb
in
les
jnp
mov
lods
ja
add
subb
daa
ja
mov
fisubs
push
cs
stos
in
std
pop
or
push
or
jb
dec
das
sahf
mov
andl
div
xchg
xlat
daa
call
add
aas
push
in
out
movsl
jnp
inc
das
aas
push
push
inc
sti
movsl
or
sbb
xor
mov
test
cltd
inc
add
fimull
cs
dec
outsl
ljmp
nop
mov
cmp
repz
lret
dec
dec
lret
rcrb
sub
add
repz
data16
inc
mov
mov
adc
aas
in
jbe
and
cwtl
push
std
roll
jb
hlt
iret
sbb
jbe
push
insb
sarb
push
stos
dec
adc
into
push
xchg
cltd
cmc
cmpsl
aaa
and
pop
sbb
cmpsl
xchg
mov
add
movsb
cli
imul
jg
mov
and
insb
lods
aam
cmpb
test
fwait
xor
insb
int3
jno
cmp
add
pop
push
sub
jl
pusha
jmp
xlat
in
lret
test
add
pop
lahf
sub
leave
xchg
insl
pop
lds
cmp
test
movsb
leave
or
xor
out
data16
or
jmp
mov
call
and
mov
jmp
push
adcl
out
stos
push
leave
test
in
aam
popa
test
clc
or
and
popa
out
pop
jecxz
pop
scas
cmp
test
dec
add
pop
lret
jmp
jbe
sbb
inc
and
adc
scas
pop
rcrb
in
adc
sti
push
xor
lret
fsubs
xor
jmp
hlt
or
mov
fiadds
jo
ss
int
movsb
dec
mov
jo
sbb
in
loopne
xchg
mov
js
out
mov
pop
push
sub
sbb
xchg
fmulp
rorl
sbb
sbb
push
fsubrs
lock
lret
pop
out
in
cld
mov
add
cld
xor
out
xchg
test
add
cmpsb
and
mov
repz
in
push
leave
hlt
cs
xchg
xlat
mov
jno
rorl
flds
sub
stc
les
arpl
add
cld
mov
and
inc
push
push
cmc
lds
push
mov
and
std
push
fsin
aas
iret
push
in
inc
jmp
jmp
enter
loop
iret
out
mov
jmp
cli
and
dec
call
iret
xlat
ja
rcll
ret
mov
add
push
out
psubd
xor
jo
insl
shlb
pop
pop
je
hlt
push
mov
ja
add
adc
adc
movsb
shlb
cld
jecxz
adc
mov
mov
pushl
std
cmpb
mov
bound
xchg
push
cli
push
scas
push
inc
imul
jns
xchg
scas
or
cmpl
mov
cmp
out
mov
pop
jg
aaa
loop
xor
lock
jp
or
test
dec
mov
and
xor
xor
iret
cmp
lds
bound
inc
jp
push
jp
fcompl
mov
mull
mov
dec
es
jecxz
test
mov
mov
fs
movsb
sbb
jp
mov
or
daa
mov
in
sbb
fidivrs
out
mov
cwtl
insb
idivl
pop
test
dec
scas
icebp
repnz
mov
std
push
insl
jae
int
pusha
popf
mov
jle
jg
mov
cs
cmc
cld
fsubrl
push
fisttps
mov
test
inc
lods
rcl
cmp
fsubr
mov
movsl
lea
mov
pop
lcall
mov
pop
loopne
aaa
outsl
fisttpll
test
add
jb
jns
jl
jno
hlt
or
es
lret
arpl
int3
xor
and
ja
cmpsl
cltd
xor
push
ret
and
mov
lret
mov
pop
lret
or
movsl
ja
mov
xchg
mov
popf
lods
adc
inc
mov
lea
and
push
mov
in
sti
std
or
out
mov
pop
sbb
clc
in
mov
loop
cld
dec
lret
fsubs
xlat
jo
sbb
pop
cmp
hlt
sti
xchg
les
mov
movsl
nop
and
sti
push
cmpl
mov
test
es
cmp
decl
pushf
mov
cmp
pop
and
dec
adc
jg
shr
lahf
stc
rolb
daa
fbstp
out
push
push
lcall
arpl
jb
cmpsb
es
jp
and
outsb
mov
dec
xor
xor
leave
roll
aam
xchg
lcall
xchg
xor
adc
fdiv
add
pushf
sub
sahf
jne,pn
push
dec
jl
ret
outsb
mov
flds
cmp
aad
add
push
cmp
jno
cmpsb
inc
pushf
lods
mov
mov
shll
xchg
dec
test
ja
mov
testb
jo
or
xchg
jg
xchg
fmuls
ret
jbe
sbb
jae
std
cmp
lcall
ret
in
sub
dec
sbb
or
sbbb
cs
mov
mov
dec
cwtl
test
cmpsl
mov
outsl
fs
xor
int
bound
sbb
roll
sbbb
jmp
fnop
clc
test
push
ds
bound
jg
sub
dec
pusha
cmp
mov
push
xor
aas
out
mov
sbb
sbb
sub
xor
out
push
sbb
call
cltd
hlt
pop
iret
sbb
test
push
lea
or
push
cmpsb
out
js
inc
xchg
jp
mov
mov
cmpsb
lcall
push
adc
inc
pushf
xor
in
je
xor
sub
cmp
dec
lea
mov
fadds
in
add
or
push
mov
push
inc
dec
fs
hlt
lock
outsl
sbbb
pop
cmpb
add
fisubs
pop
xor
jo
loop
mov
int3
mov
popf
mov
ljmp
leave
data16
sahf
inc
xor
loop
mov
cmp
lods
decl
jle
lods
jo
std
cmc
sbb
ljmp
popa
mov
fidivs
hlt
jecxz
sbbl
nop
sar
pop
rcrb
mov
dec
mov
cmp
int
xchg
js
sbb
xchg
xor
jnp
shlb
mov
sub
pop
xchg
enter
gs
bound
mov
push
push
mov
adc
lock
xor
push
rclb
das
std
push
jno
imulb
or
push
push
cwtl
insb
clc
jbe
or
loopne
outsb
leave
hlt
xor
mov
pop
inc
adc
xor
dec
pop
xlat
psrld
sub
addl
out
xchg
cmp
or
cmp
popa
fnstcw
in
push
mov
jp
lret
das
cmc
jmp
jecxz
orl
leave
mov
repnz
sbb
lcall
mov
xor
dec
ffree
loop
enter
rsqrtps
sub
cmp
in
pop
cmp
sahf
daa
xor
addl
xchg
pop
icebp
xchg
int
loopne
and
pop
shl
mov
pmaddwd
jl
les
sub
nop
pop
cwtl
lcall
adc
add
cld
add
addr16
imul
or
loop
pusha
mov
xorl
ljmp
arpl
xor
pop
push
dec
jae
addb
inc
jp
sti
test
outsl
scas
lea
daa
sub
mov
pop
dec
sti
arpl
pop
xor
jbe
loope
dec
dec
cmpsb
pop
cld
cmp
icebp
mov
cs
les
shll
cwtl
push
sbb
push
mov
cmpsb
pop
enter
out
adc
rcll
cwtl
mov
lret
test
cltd
adc
jecxz
push
mov
mov
orb
cmp
ficoms
add
or
popa
movsl
inc
in
filds
xor
imul
fiadds
test
push
pop
mov
xchg
xchg
pop
inc
das
scas
push
mov
sbb
pop
imul
and
jge
sbb
outsl
dec
jnp
out
mov
es
pop
mov
push
jle
mov
dec
push
xor
cmpsb
ss
adc
rclb
movsl
mov
ds
mov
sbb
cli
xchg
in
sti
xor
test
lea
mov
cmp
adc
mov
es
sub
ja
movsl
sbb
jmp
xchg
and
inc
rcrl
jmp
sub
rcll
mov
jb
mov
out
leave
popf
adc
popf
sub
ds
adc
mov
jecxz
lods
leave
add
push
call
in
cmp
sbb
rorb
add
pusha
je
notl
stos
scas
insb
or
adc
data16
cmp
dec
daa
into
pop
jnp
iret
stos
push
or
dec
ret
xor
push
pop
mov
ja
cmp
cmpsl
subb
loopne
cmp
inc
into
fs
test
cmpsb
loop
add
jno
jne
sbb
popa
xor
xor
jns
loopne
cmp
insl
jmp
mov
mov
outsb
push
add
add
lods
adc
pop
and
adc
dec
pop
lret
sbb
loopne
pushf
ficoms
inc
leave
and
int
shlb
daa
jge
xor
out
mov
arpl
movb
sbb
inc
jp
xor
cltd
test
push
mov
js
push
cs
int3
lods
lods
addr16
lret
push
mov
punpckhbw
pop
dec
sti
or
jecxz
scas
push
test
loop
fsubrl
jecxz
mov
andl
lods
add
addr16
test
out
push
cmp
sub
setge
scas
mov
ljmp
loop
mov
cmp
out
shlb
push
push
repz
daa
push
or
div
ds
aaa
xchg
scas
lods
fildll
xchg
sub
pop
mov
and
stc
mov
jae
stos
call
movsb
test
adc
in
cmp
xlat
push
out
fdiv
rorb
sbb
add
jmp
sbb
test
mov
add
or
hlt
dec
and
or
xor
sub
mov
imul
mov
scas
outsl
mov
call
dec
mov
loopne
mov
add
mov
int3
jp
loopne
or
cmp
fidivrs
scas
lcall
xor
out
sbb
cmpb
jns
lds
push
roll
inc
jb
jmp
pop
pushl
inc
xchg
cmp
fsts
adc
inc
ror
and
js
movsl
mov
adc
cmp
mov
xchg
test
cmp
leave
repz
xor
test
nop
cmc
jp
dec
repz
scas
inc
mov
pop
push
in
and
jb
scas
jne
mov
popl
xor
pop
ds
fistpll
mov
mov
rcll
fldt
push
jl
cmp
xor
ljmp
jmp
cmp
ud2
int
dec
push
enter
jl
xchg
lods
lods
pop
adc
push
in
mov
cmp
ss
inc
mov
push
mov
and
fwait
inc
xchg
sbbl
dec
rclb
mov
stos
clc
xchg
fimull
cwtl
ds
pushf
dec
or
adc
out
pop
xchg
aaa
mov
xor
push
insb
sti
popf
add
adc
outsl
cmpsb
out
sbb
xorb
test
aad
out
lret
add
and
mov
pop
jne
loope
cmp
adc
shll
scas
negb
loopne
add
sub
mov
xor
xor
ja
repnz
jae
out
sub
cmp
mov
jecxz
test
sub
push
xchg
lock
addr16
push
xor
xor
sub
in
inc
ficomps
add
out
inc
jmp
iret
or
mov
push
dec
sub
mov
out
push
lds
and
in
push
push
jae
jg
and
cmp
int
cmp
xchg
jecxz
in
mov
sub
add
or
pop
lret
stc
movsb
jno
xchg
pop
cli
mov
dec
ja
mov
cmp
xchg
outsb
or
lcall
mov
dec
pop
fnsave
jg
inc
test
nop
inc
js
roll
idivl
mov
inc
push
enter
adc
ljmp
fsts
mov
ror
fnstcw
fmuls
sub
dec
mov
ret
mov
jno
mov
mov
popf
mov
out
lods
sahf
subb
jmp
fcmovb
or
cmpl
sbb
mov
andb
pop
mov
lock
inc
mov
xchg
sub
shrb
rclb
xchg
xlat
dec
movsb
movl
test
cmpsl
fwait
pop
lock
int
inc
daa
jl
dec
icebp
out
jmp
push
lret
rcr
adc
int3
mov
dec
sub
sbb
xchg
inc
sbb
daa
cmp
cmp
loope
out
outsl
xor
sub
fcomi
hlt
inc
loope
fidivrl
xchg
aad
or
lock
pop
lods
xchg
lock
and
adc
imul
add
adc
ret
movsb
and
das
ljmp
dec
enter
call
or
movsl
je
mov
loopne
ja
outsb
push
xchg
push
pop
lret
sbb
push
pop
add
in
mov
cmp
js
sbb
out
add
fbld
inc
xchg
stos
adc
lcall
mov
div
mov
stc
scas
and
and
pop
cmc
or
mov
out
mov
fnstsw
test
xchg
not
cmp
push
or
popf
and
xor
xor
push
sbb
sbbl
ds
fsubs
fisubl
cmc
lea
aas
mov
lret
adc
lea
mov
fldcw
sub
pop
pop
imul
in
mov
lock
mov
out
mov
jmp
scas
cmp
jl
stos
sbb
pop
and
pop
rcll
fstpt
les
dec
add
movsl
ja
sahf
movsl
ret
cmp
imul
cmp
mov
push
sbb
cltd
add
jne
push
cmp
cwtl
jg
sub
shlb
mov
popa
loop
cwtl
dec
mov
adc
push
leave
mov
das
lret
pop
test
fdivs
sbb
js
movsb
in
xchg
test
pop
nop
ret
js
cmc
fidivrl
push
jmp
mov
add
jle
mov
std
and
lods
arpl
int
sub
shrl
pop
psubd
mov
jmp
pop
xor
scas
aad
jle
pop
mov
rclb
mov
or
and
cmp
inc
xlat
push
dec
stos
insl
pop
and
in
cmp
iret
or
test
scas
es
ret
mov
adc
iret
jb
push
gs
repnz
and
test
push
mov
lods
mov
push
add
sub
or
inc
or
xchg
stos
stc
das
mov
js
fistpl
inc
scas
xchg
xor
daa
std
and
push
mov
adc
jp
push
lods
push
mov
adc
add
lahf
ljmp
jmp
sbb
add
cli
outsb
jmp
push
cld
cmpsl
stos
aam
pop
iret
push
repz
jmp
pop
hlt
mov
pop
loop,pn
lock
fmull
xchg
dec
cmp
sbb
fwait
mov
and
cmpsb
xchg
push
sub
movsb
aad
mov
and
orb
pop
mov
push
pop
loop
mov
pop
lea
ljmp
mov
push
ja
in
xchg
out
xor
mov
cmpsb
andb
pop
cmpsb
dec
fcompl
jle
fmulp
inc
js
mov
mov
push
mov
mov
mov
scas
xor
enter
xchg
lret
mov
test
mov
xchg
scas
movsl
imul
lcall
js
lea
sub
shrl
pop
xor
cmp
scas
mov
cmp
push
add
xchg
test
gs
popa
jecxz
adc
lahf
lods
inc
pop
mov
out
imul
stos
stc
pop
je
xchg
loop
dec
sub
lock
mov
add
ds
cltd
jl
mov
mov
pop
dec
cmp
mov
test
xchg
andb
cli
sub
je
fcoml
mov
cmp
xchg
pop
xor
mov
call
stos
push
mov
lahf
fstps
lds
mov
xchg
lods
fwait
mov
nop
mov
sarb
adc
fiadds
jo
iret
aaa
adc
xchg
adc
push
mov
add
dec
inc
ljmp
fs
int
loope
xchg
mov
mov
jb
lahf
sub
fwait
cmp
fwait
mov
out
call
cmpsl
or
pop
out
psrad
fwait
inc
addr16
push
inc
outsl
sub
mov
push
mov
je
fxch
mov
add
adc
popf
add
jg
pop
or
xor
lret
pop
movsl
or
leave
pushf
cmp
mov
sbb
or
inc
imul
xchg
shll
push
enter
push
popa
xchg
push
dec
add
stc
imul
fildll
repz
dec
xor
sbb
dec
pop
enter
cltd
test
xor
pop
pop
aaa
in
shrw
ficomps
js
xchg
fwait
mov
mov
add
insb
addr16
dec
dec
inc
ret
shufps
sbb
cmp
adc
jo
mov
imul
movsl
jge
cs
add
pop
or
ja
dec
sbb
sub
pop
lock
out
call
movsb
int3
daa
fwait
and
je
ds
shrb
pushf
clc
pop
xor
dec
cmp
in
or
lds
push
das
mov
test
add
lret
mov
loopne
push
jmp
mov
loop
loopne
and
jbe
inc
nop
mov
fmulp
enter
into
ss
in
fdivs
add
int
xlat
faddl
sub
adc
xchg
sti
rolb
cmpsl
sub
cmp
ss
js
add
jmp
xchg
mov
mov
scas
and
lods
push
cs
and
les
test
push
fnstcw
test
pop
ja
xchg
rcl
sub
scas
lcall
jl
outsb
in
push
addr16
jle
push
or
divl
mov
sub
clc
push
cmp
push
shlb
fldenv
inc
in
outsb
inc
dec
js
xchg
stos
jmp
fmul
mov
inc
add
push
sub
pop
xor
cmp
out
repnz
push
mov
inc
mov
mov
adc
mov
inc
call
mov
jmp
popf
test
shll
outsb
pop
xchg
cmp
inc
les
mov
jo
adc
dec
push
add
push
xchg
loop
call
mov
fisubrl
subb
jecxz,pn
mov
gs
sbb
pop
push
pop
mov
rcrl
pop
push
xor
jmp
jae
jg
inc
sbb
data16
shrb
inc
into
xchg
mov
xor
sub
inc
sarl
mov
sahf
leave
sbb
inc
dec
push
cwtl
sub
xor
mov
icebp
mov
inc
mov
xchg
mov
js
jecxz
push
mov
jno
and
out
es
pop
mov
lahf
iret
push
dec
sbb
mov
aas
mov
xchg
and
mov
jnp
ret
insb
fs
test
mov
or
xlat
ret
push
jge
test
lods
rorb
fxch
pop
int3
inc
andb
cld
sub
cmp
mov
cmc
add
aas
int3
sub
fstpl
adc
lods
sub
jnp
push
lds
call
jb
rcl
push
push
repz
les
out
fs
sbb
filds
stos
int3
jecxz
inc
shl
pop
jo
rcrl
push
hlt
xchg
es
mov
dec
push
sahf
stc
test
repnz
and
push
int
out
leave
jae
xor
add
movl
insb
insl
or
dec
or
enter
jb
test
insl
dec
pop
lea
lods
or
jmp
sbb
orb
aaa
cmp
mov
in
ljmp
scas
dec
xchg
xchg
adc
mov
mov
imul
dec
push
lret
testl
rorb
lock
lcall
iret
fwait
or
push
imul
bound
cmp
rorb
dec
push
or
lret
jmp
push
cmpsb
jo
sub
inc
xchg
push
rcrl
pop
sub
pusha
mov
sahf
xor
imul
sub
mov
cli
lods
lods
leave
push
xor
xchg
repnz
pushf
movl
aam
orb
cmp
outsb
fldcw
or
adc
lock
mov
adc
dec
and
aad
pop
pop
mov
out
pop
and
dec
pop
rolb
pop
stos
pop
mov
inc
rcll
jae
pop
mov
fmul
lods
mov
loope
push
cli
addr16
mov
xor
cli
and
dec
mulb
jle
pop
rcrl
imul
dec
mov
mov
loopne
jl
mov
rcrb
xor
rcll
mov
push
inc
lock
dec
push
call
popa
cmc
push
xchg
dec
pop
fstpt
repnz
push
addr16
ja
and
int
push
xchg
mov
dec
fstp
movsb
mov
jp
mov
and
push
clc
icebp
dec
stos
jl
int3
popf
movsb
fnstenv
push
aam
rcrb
fdivr
mov
cli
mov
out
daa
ja
ja
mov
bnd
imul
repz
mov
addb
inc
xchg
push
mov
lahf
adc
cmp
rolb
arpl
shrl
int
cmpsl
sub
rol
jns
add
xor
or
ljmp
xlat
fidivs
mov
aad
add
out
and
test
test
push
push
clc
mov
je
sbb
dec
push
mov
sti
ret
inc
outsb
adc
imul
imul
mov
xchg
sub
mov
popf
cmp
and
inc
cmp
and
cltd
daa
scas
mov
insb
xlat
les
hlt
dec
adc
shrb
jmp
call
mov
pop
push
jge
rolb
out
jo
sbb
jae
cmpsb
mov
loope
push
sti
jno
jno
mov
pop
aas
test
les
dec
or
lea
mov
je
jmp
or
dec
int3
lret
lret
in
leave
out
jge,pt
clc
sbb
add
clc
aad
daa
jb
or
clc
cmp
jmp
mov
int
shrl
or
fsubrp
cmpsl
xor
add
dec
std
or
ds
popa
pop
or
push
sbb
jne
int3
push
push
dec
test
cltd
mov
arpl
adc
dec
push
orl
cmp
mov
loop
sub
mov
push
aad
xor
insl
sahf
xchg
mov
popf
or
sbb
sub
xor
add
jns
xchg
push
fstpt
xchg
mov
lods
inc
fwait
lods
mov
push
sbb
shlb
or
xchg
mov
cmc
in
mov
xor
clc
add
push
sti
ds
push
les
pop
cltd
or
sbb
jg
mov
and
out
lods
loope
inc
cmp
push
rclb
jg
cmpsl
pxor
loopne
cmp
rcll
xchg
movsb
mov
cwtl
lret
jno
adc
pop
push
add
add
inc
xchg
and
adc
ja
jge
repz
jb
loope
pop
flds
xchg
cmp
sarb
inc
jo
loop
cli
dec
fs
xor
outsb
in
ja
sbb
xor
pop
imul
rorb
fistl
xchg
xchg
push
sbb
mov
or
mov
sbb
nop
mov
push
lock
mov
fwait
sbb
cmpsb
mov
cmp
int3
aaa
push
mov
rclb
mov
jnp
rorl
jmp
stos
lcall
jp
xchg
lods
cmpsb
push
lock
ret
loope
sub
je
inc
in
insl
mov
pop
xchg
neg
inc
js
insl
aas
outsl
dec
push
pushf
sqrtps
push
inc
aam
pop
out
hlt
mov
mov
lods
jle
enter
iret
pop
lcall
mov
fcmovnb
xchg
decb
adc
lcall
jp
push
adcl
repz
outsl
call
sahf
xchg
xchg
fs
js
cld
jecxz
lock
xchg
cmc
push
jbe
mov
negb
daa
add
push
xchg
push
inc
cmp
pop
mov
xchg
enter
imul
aaa
inc
stc
pop
aam
loopne
dec
clc
es
lea
pusha
and
test
push
orl
sbb
add
xlat
inc
add
xchg
mov
test
or
sub
jl
int3
dec
add
lea
push
fstpl
jo
sbb
dec
push
xchg
push
jnp
xor
fwait
push
pop
dec
dec
inc
jb
jp
jne
insb
dec
xor
or
ret
and
test
xchg
dec
and
sub
pop
in
ss
mov
xchg
sbb
xor
mov
cltd
imul
fwait
mov
repz
in
imul
scas
dec
sub
test
mov
loopne
jno
fdivs
jle
mov
int3
cwtl
gs
icebp
sub
mov
orl
push
inc
fwait
ljmp
test
or
je
xor
mov
bound
push
test
rorl
lods
test
push
pop
inc
enter
push
xchg
pop
jno
xorl
sbb
ds
stc
xlat
into
inc
insb
cltd
or
xorl
jae
in
push
jmp
xchg
daa
into
xlat
scas
lods
aaa
out
add
fld
repnz
mov
dec
adc
out
mov
imul
sbb
mov
pop
inc
lods
and
xor
rcl
push
mov
mov
loope
imul
nop
dec
cmp
into
adc
push
inc
jnp
not
mov
imul
ss
ret
or
xor
in
inc
mov
pop
push
and
xlat
push
lds
imul
clc
iret
push
std
and
jge
cs
aam
lds
sub
mov
lods
loop
dec
in
mov
and
cld
dec
data16
addr16
insb
fsubr
add
fidivs
iret
cmp
xchg
ror
loopne
loope
jmp
rclb
loop
push
push
add
fidivrl
rcl
add
ret
and
or
mov
push
leave
call
xchg
in
sub
push
fistl
fildll
mov
lods
mov
in
data16
fsubrl
xlat
or
sub
std
cltd
adc
and
xchg
mov
mov
stos
inc
sahf
cltd
out
cmp
loop
ret
cmp
dec
out
je
pop
daa
pushf
jle
adc
fisubl
dec
lret
loope
mov
xchg
hlt
dec
pop
in
push
aam
aam
imul
jno
cld
cmp
dec
pushf
mov
mov
inc
pop
adc
xchg
sub
mov
repnz
xchg
sub
mov
lds
pop
xor
jnp
loope
data16
ret
mov
outsb
popf
pop
movsb
cwtl
mov
add
pop
lret
js
out
out
sbb
les
cmp
decb
mov
scas
and
scas
mov
and
sarl
push
rcll
sbbl
stos
outsb
scas
xchg
cwtl
xor
xor
add
out
mov
pop
adc
lock
idiv
or
pop
and
inc
daa
mov
xor
scas
jbe
dec
xor
adc
ja
mov
mov
and
cmpb
or
mov
movl
ss
inc
imul
push
xchg
nop
testb
imul
movl
clc
je
int
pushf
loop
mov
setb
inc
repnz
mov
mov
jbe
scas
loope
lahf
repz
nop
iret
movsl
push
vcvttsd2si
inc
andb
cs
in
pop
sbb
jecxz
inc
lret
out
push
lock
mov
cmpl
iret
stc
mov
popa
call
jecxz
inc
jae
cmp
insb
lret
inc
fucomi
roll
xor
xchg
popf
cld
into
xchg
movsb
mov
push
xchg
mov
pop
add
xor
jg,pt
cmp
xor
inc
inc
fstpt
movsl
roll
scas
adc
mov
out
psrld
jae
sub
jae
rorl
fisubl
cmp
sarl
cld
push
xchg
rol
adc
into
je
mov
jl
leave
add
fwait
sub
inc
arpl
jp
dec
dec
je
out
in
dec
ss
inc
sub
sbb
push
sbb
mov
sub
xlat
add
stos
xor
mov
and
jge
jo
lock
pop
mov
gs
daa
rcrl
ds
pop
cmp
pop
mov
aad
xchg
dec
push
add
mov
flds
bswap
stos
stc
sbb
xor
icebp
xlat
gs
in
sbb
jae
mov
mov
and
lods
test
adc
in
mov
mov
sub
cli
addr16
jae
dec
cmpsb
in
imul
add
jb
add
mov
out
mov
stc
enter
pop
xchg
xor
int
adc
jl
cmp
mov
sub
movsb
lcall
inc
mov
fimuls
clc
sub
or
es
addr16
inc
sbbl
jb
pop
inc
or
aad
or
mov
pusha
lahf
imul
pop
mov
shrb
adc
mov
fstps
mov
loope
inc
cmp
das
xor
add
mov
pushf
cwtl
ss
inc
mov
pop
sbb
adc
scas
or
and
popf
sub
ss
cmp
lods
hlt
loope
addl
xor
mov
jae
es
cmpsl
xchg
dec
fildll
or
pop
jmp
mov
das
in
rcl
es
popf
xchg
xor
insb
rcll
jp
dec
xchg
ja
dec
xor
pop
push
xor
add
inc
dec
aam
stc
fsubl
enter
mov
gs
pop
add
inc
push
adc
outsl
and
xchg
jnp
shrb
sbb
fwait
in
pushf
pop
or
sahf
loopne
push
sti
dec
out
pop
ja
negl
dec
jae
shlb
shrl
xlat
int
sbb
adcb
xor
xchg
sti
pushf
stc
aas
cli
push
adc
xchg
lea
rorb
pop
loop
outsb
cmpsb
popf
lahf
push
sbb
mov
push
shll
cmpsb
sub
int3
cmp
int
push
leave
pop
movq
test
jo
cmp
mov
mov
xchg
btc
inc
jp
pop
xchg
subb
scas
fisttpll
addr16
xor
pusha
rorb
adc
adc
fdivrl
ror
outsb
inc
test
repnz
call
cwtl
sub
arpl
mov
or
cmp
ret
or
or
out
push
or
imul
imul
push
dec
out
mov
adc
divb
push
ret
sahf
loopne
jns
sti
dec
gs
jb
sbb
cmpsb
aad
sub
daa
out
fwait
cmp
jbe
mov
push
dec
gs
mov
and
sbb
fistps
or
lods
jle
orb
data16
sbb
daa
lcall
cld
pusha
addr16
push
daa
cmpsb
in
rolb
push
dec
out
push
xchg
test
jb
test
adc
mov
xchg
jle
add
sbbl
mov
push
mov
fidivs
aad
mov
jne
push
and
addr16
add
sbb
lcall
pminsw
les
cmp
and
push
imul
dec
push
or
fcmove
scas
rol
pop
in
loop
stc
inc
mov
push
adc
push
sbb
clc
out
push
iret
fs
test
ret
mulb
and
mov
outsl
xor
fmuls
lods
adcl
cmp
ret
lock
pop
negb
push
test
mov
or
cmp
jb
lret
pop
inc
xor
xchg
xchg
dec
dec
mov
sub
and
test
out
adc
add
jne
loopne
and
jecxz
xlat
sbb
pop
or
pushf
sub
je
inc
push
or
push
xor
xchg
fldl
dec
adc
and
dec
pop
int3
push
mov
clc
push
into
sub
sub
lds
int
or
movzwl
pop
add
dec
jg
lds
dec
sub
js
jmp
out
xchg
mov
pop
fadds
jb
call
std
mov
xchg
dec
jmp
call
test
xor
push
hlt
cwtl
sub
xor
ja
sub
movsb
je
js
rclb
xchg
lds
mov
out
or
popl
adc
mov
test
and
lock
mov
pop
mov
cmp
lret
mov
jno
jae
jg
mov
fs
push
or
test
cmpsl
pop
test
dec
mov
popf
jl
das
lds
adc
xor
and
div
ja
xor
and
sub
lahf
movsb
ret
ds
sbb
pop
pusha
dec
lods
mov
cmpsl
pop
push
cltd
add
insl
xor
pop
mov
mov
push
add
lcall
mov
jmp
push
test
frstor
adcl
pusha
mov
cmp
test
cld
mov
std
inc
in
stos
push
addr16
daa
sahf
mov
mov
sbb
mov
lock
rorl
addb
data16
sbb
aam
sub
scas
js
jo
inc
outsl
or
pop
je
cmp
pusha
test
jno
arpl
movsl
cmc
xchg
mov
xchg
loope
cmp
mov
test
int
xchg
rorb
syscall
and
fstpl
jno
mov
scas
insl
aas
dec
xchg
iret
inc
pop
scas
mov
push
mov
pop
xor
xor
lock
cmp
xchg
xchg
cltd
xchg
insl
mov
test
sub
aaa
mov
stc
xchg
into
icebp
pop
addb
out
out
shrb
in
jb
push
lock
insl
jge
in
sub
inc
push
fcmovb
aas
hlt
pop
mov
repnz
cmp
mov
adc
pop
lds
es
test
das
cmp
pusha
xchg
or
fstpt
or
aaa
sahf
imul
into
int
pushl
cltd
mov
jl
sbb
adc
imulb
inc
dec
aaa
js
xchg
cmpsl
popa
or
aas
addr16
dec
insb
ljmp
sahf
jg
cmp
mov
lret
dec
and
sbb
pop
inc
xchg
fwait
sbb
fs
lcall
push
ror
push
aad
ds
imul
push
pop
jl
int3
push
xchg
pop
jg
add
sahf
and
mov
xor
jle
ret
dec
dec
or
lcall
xchg
xchg
int
addl
pushf
std
add
gs
loop
lret
add
mov
dec
push
repz
inc
shl
mov
adc
lret
decb
push
xor
cmp
sbb
pushf
jecxz
lcall
fcompl
mov
or
lea
jp
cmp
ja
outsl
inc
cs
mov
aad
push
jle
mov
out
fsubl
icebp
cmp
inc
scas
mov
jmp
jge
dec
dec
js
push
cmp
stc
fs
shlb
push
jl
repz
outsb
mov
or
jg
shr
cltd
int
lds
out
addb
subl
mov
out
inc
stos
mov
dec
inc
loopne
dec
cli
adc
pushf
in
aam
repz
dec
orb
and
push
movsb
repnz
or
movsl
fpatan
sbb
pop
adc
dec
lods
lcall
xor
jae
xchg
sub
inc
nop
mov
into
es
loope
cwtl
repz
xchg
adc
inc
push
nop
shl
push
cmpsl
mov
push
pop
ds
iret
add
and
sub
inc
out
shr
add
cmp
pop
inc
imul
add
movsb
jp
push
pushf
js
or
imul
xchg
mov
lret
in
mov
repnz
dec
repnz
mov
xchg
mov
insb
cmp
cld
mov
inc
and
push
inc
fistps
stc
aad
push
js
loope
mov
push
test
sbb
jns
ja
int
in
push
loopne
mov
mov
popa
out
xchg
mov
adc
dec
pop
pop
mov
addl
cmp
loopne
repz
jb
leave
shll
add
pop
dec
sahf
xchg
xchg
xchg
and
fidivrl
lahf
push
aam
jmp
frstpm(287
imul
lods
out
jg
mov
pop
cmc
mov
add
jmp
jmp
addr16
mov
fcmovb
mov
mov
fbstp
lea
shl
inc
ds
lods
pushf
scas
ret
or
push
jne
push
fwait
pop
inc
add
mov
nop
lret
aaa
push
adc
addr16
out
divb
pop
push
cld
fmul
subl
sub
mov
leave
stos
jno
cmc
dec
lock
jl
jbe
das
pop
lret
std
gs
inc
aaa
xor
mov
in
dec
je
les
sbb
neg
jecxz
lret
add
lcall
jb,pn
movsl
div
xchg
xor
fwait
mov
cmpsb
xor
dec
testl
outsl
adc
sbb
push
rorb
mov
adc
out
out
dec
or
jae
and
and
ss
int3
gs
push
pop
ffreep
fiaddl
jle
add
iret
leave
push
cmp
jne
cmp
montmul
cmpsb
inc
stc
mov
mov
js
cld
stc
cmpsb
push
or
and
and
sub
aam
add
sub
lock
lods
les
in
lret
mov
jb
in
mov
xlat
stos
mov
fiadds
fidivl
mov
push
sbb
sub
repnz
dec
mov
pop
cmp
pusha
dec
lret
dec
jl
enter
xor
mov
inc
push
out
inc
jle
notl
ljmp
xadd
sahf
pushf
jnp
add
xchg
push
jg
jae
pop
and
pop
call
sub
in
pop
in
jle
fwait
mov
jns
xchg
out
pop
and
or
push
insb
test
dec
mov
xorb
push
rorb
cmp
mov
out
js
enter
mov
jne
lcall
pop
ret
push
xchg
sbb
cmp
pop
ret
fistpll
add
push
sub
pop
cs
mov
dec
ljmp
int
xor
in
dec
cmp
mov
ret
lcall
in
xchg
jl
mov
fs
lret
scas
loope
fisubrs
rorl
test
leave
decl
jae
push
sbb
jl
add
pushf
pop
cmp
and
ljmp
and
jbe
outsb
outsl
arpl
icebp
fcomp
cld
cmc
daa
in
sub
inc
jle
std
test
stc
adc
mov
loopne
adc
dec
hlt
push
pushl
sbb
divb
push
incb
test
mov
jne
into
int3
ret
bound
outsl
jge
xor
jg
xchg
std
sbb
into
cld
jecxz
push
mov
cmc
jmp
xchg
inc
sbb
jo
add
loop
stos
mov
fsubl
fimuls
cmpsl
not
outsb
inc
test
mov
push
xchg
push
add
jg
sub
cltd
fdivrl
dec
sub
pop
out
jle
sub
cli
pop
cld
ficompl
push
mov
jbe
cmp
ljmp
xor
cwtl
jo
sub
cmp
jl
daa
jno
sti
addb
scas
arpl
sahf
inc
sbb
jg
jo
rcrl
es
pusha
dec
sahf
pop
xor
sbb
andl
stc
adc
xchg
jae
jb
js
clc
pushf
cli
pusha
dec
insb
stc
jb
pop
sub
lcall
mov
daa
xor
cvttps2pi
fsts
push
dec
mov
repz
out
pop
pop
jb
mov
loop
jnp
push
jmp
clc
ja
jecxz
out
fldcw
adc
pop
int
xlat
lret
jns
mov
or
mov
ja
dec
cltd
or
cmc
clc
sbb
fnstcw
fldcw
lar
pop
loopne
pop
pop
adc
dec
xor
xor
out
or
mov
movswl
xor
pop
in
fwait
xor
pop
sub
test
jp
leave
data16
mov
xor
xchg
push
fisttpl
mul
sbb
push
shl
out
mov
sub
adc
inc
dec
cltd
pop
std
mov
out
inc
sbb
lret
sbb
inc
dec
pop
lods
dec
mov
or
stc
lods
fldl2e
jecxz
pusha
mov
mov
stos
addr16
pop
pop
mov
inc
inc
xchg
in
loope
cmp
lea
js
sbb
xchg
xchg
mov
cmpsb
fdivrs
adcl
adcl
push
les
outsb
pop
mov
in
cwtl
mov
insl
fnstenv
rorl
out
mov
xchg
iret
sub
jp
inc
sbb
scas
push
or
xchg
xor
mov
movsb
in
mov
leave
into
lds
adc
fnstsw
movb
bound
adc
ret
movb
ror
nop
sbb
arpl
fisubl
push
inc
data16
xchg
into
xor
pop
cwtl
xor
cmp
push
rol
lret
ss
stc
push
ficomps
mov
sub
outsl
mov
or
xor
dec
loopne
adc
dec
jg
and
push
cmp
mov
inc
sbb
sub
addr16
test
insl
and
loopne
mov
loopne
dec
aas
push
push
sti
dec
imul
stos
pop
out
out
lahf
int
inc
or
lds
iret
jae
negb
lea
inc
or
xchg
testb
iret
lods
daa
int
pop
pop
sub
out
cmpsl
push
sbb
scas
mov
into
adc
daa
ret
and
icebp
subl
mov
pop
sub
testl
test
lea
data16
rcll
in
cmp
push
push
sbb
test
fnstcw
cmp
shll
cld
adc
int3
leave
pop
push
into
xor
xchg
cmpb
push
movsl
cmp
outsl
pop
add
pop
jae
js
roll
add
jmp
mov
ror
popf
add
js
es
mov
or
rcll
lahf
out
ret
movsb
dec
jle
imul
stos
mov
pop
fildll
cmc
adc
or
scas
imul
filds
cmp
push
inc
aaa
into
bound
mov
fwait
xor
fstpl
icebp
mov
push
and
inc
mov
push
js
stos
xchg
mov
out
mov
subl
stos
nop
inc
or
adc
mov
cmp
das
fwait
xlat
pop
shlb
add
mov
mov
xchg
xchg
call
sbb
cmp
xor
inc
repnz
pop
cwtl
mov
cmp
sbb
cmp
bound
popa
push
test
cmp
sti
jge
lods
and
mov
sub
ret
aaa
sbb
mov
xchg
sti
cltd
andl
mov
mov
pop
cmp
cmp
and
gs
adc
pop
int
jmp
cmp
push
js
fcomp
int3
inc
decb
push
movsb
mov
ss
hlt
push
and
jne
jl
cmpsb
inc
rcll
add
push
inc
insl
push
push
mov
fsubl
in
mov
gs
xor
mov
int3
dec
and
xchg
scas
pushf
lods
push
cmp
subb
mov
out
mov
add
sbb
das
movb
out
pop
add
fimull
xor
push
pop
inc
mov
outsl
xor
clc
add
push
inc
cmpl
icebp
or
lcall
or
call
pop
jl
xor
popa
xchg
leave
lds
jge
popa
in
add
lea
push
jge
cli
fmul
sahf
fs
xor
sarb
sub
or
jmp
mov
leave
fucomip
and
jecxz
push
mov
jmp
dec
push
inc
sub
jecxz
call
jp
test
mov
xor
lret
je
push
mov
les
mov
pop
shlb
xchg
dec
ja
add
test
lahf
xchg
pop
jb
repz
call
nop
adc
adc
or
mov
cmp
test
fwait
push
imul
xchg
ja
jbe
jns
loopne
xchg
into
loop
outsl
inc
in
in
jb
orl
out
cld
jo
fiadds
daa
mov
iret
int3
add
inc
jge
jecxz
push
shrb
jae
mov
xchg
int
stos
in
inc
data16
pop
pop
dec
jecxz
sahf
or
sbb
push
imul
outsl
sbb
inc
xchg
add
stos
movsb
ss
mov
inc
sub
sbbb
sbb
xchg
jecxz
dec
rorl
add
jne
sbb
aad
jp
mov
or
cld
shrb
sub
daa
and
dec
cwtl
les
jmp
and
mov
xlat
hlt
fisubs
add
cmp
adc
ds
dec
fcmovb
adc
outsb
mov
inc
rol
mov
sbb
cmp
pop
pop
std
in
mov
scas
jge
mov
inc
shrb
cmpsb
dec
scas
sub
cmp
mov
xor
imul
pop
mov
int3
aam
negl
pushf
in
push
fdivrl
outsb
xchg
bswap
and
icebp
jg
in
or
mov
das
pop
enter
and
int3
mov
orb
adc
loopne
lock
shll
xor
enter
out
outsl
mov
dec
pushf
popa
addl
jbe
call
push
jno
cmp
jle,pn
cli
pop
out
adc
push
mov
xorb
mov
ficoms
popf
dec
ret
jns
stos
sbb
hlt
enter
sahf
rorb
mov
enter
iret
mov
or
jg
scas
jbe
inc
imul
jne
mov
es
mov
loope
xchg
sbbl
ljmp
int3
sbb
mov
fs
imul
fnstenv
fsubrl
leave
adc
xchg
repz
in
stc
inc
nop
and
jle
or
jnp
push
in
scas
lcall
call
dec
fwait
push
xlat
xor
scas
sbb
add
pop
icebp
mov
and
sbb
pop
mov
mov
sub
cli
push
push
cmp
mov
mov
add
add
icebp
imulb
cmpsl
pusha
or
inc
add
mov
adc
in
add
out
push
fisubs
aas
fisttps
push
pop
cmpl
lods
inc
and
into
jg
pushw
cmpsb
lea
push
adc
xchg
repnz
jp
mov
lock
mov
pop
add
dec
xor
dec
lock
or
add
loopne
jecxz
std
pop
cmpsl
lcall
adc
daa
sbb
xchg
je
jp
daa
mov
xchg
mov
aas
jb
mov
and
pop
jo
xor
ja
mov
les
ror
cld
sahf
pop
dec
rolb
icebp
bnd
frstor
fimuls
cli
jmp
push
mov
icebp
mov
pop
add
shr
arpl
dec
cwtl
jnp
mov
dec
add
jno
fcmovu
cmc
popa
sub
dec
add
stc
loope
outsl
sbb
loop
dec
cltd
loope
cmpsl
rcrl
or
imull
jg
sub
xchg
mov
fadd
pop
inc
shrl
push
shll
mov
inc
out
inc
add
inc
cltd
jmp
out
mov
pop
loopne
xor
orl
adc
pop
jle
fidivl
ja
sub
xlat
outsb
xchg
scas
fnstenv
popf
shll
lahf
push
mov
push
or
ljmp
lods
repnz
sbb
push
xchg
ret
xchg
pop
outsb
jb
int
sbb
cmovnp
repz
pop
lcall
daa
pop
mull
vpmacssdqh
inc
data16
dec
enter
jno
in
scas
movsl
ret
dec
add
xor
outsb
cltd
and
inc
mov
loop
jb
cmpsb
sbb
add
rcrl
adc
shr
ja
push
mov
mov
stos
or
push
mov
loope
adc
pop
sbb
in
mov
xchg
shlb
adc
mov
cmp
popf
cmp
jecxz
xchg
sub
sub
and
cmpsb
lock
push
cmp
mov
lods
lods
lcall
int3
mov
mov
outsl
clc
push
sti
dec
add
mov
rorl
mov
sub
into
push
rcrb
in
jbe
pop
cmp
jg
xchg
push
xor
inc
cmovs
cmp
push
cmc
cmp
xor
add
loopne
in
bound
cmp
icebp
inc
dec
jg
jne
jmp
push
or
jmp
int3
inc
add
xor
cmp
push
cmp
push
imull
shrl
pop
and
pusha
out
xchg
ljmp
mov
into
jp
icebp
fisubs
or
aad
mov
pop
cwtl
aam
jne
loopne
jnp
push
xor
cli
xchg
mov
jnp
jge
and
stos
scas
add
inc
xor
inc
mov
adcb
shl
jno
aam
sarb
fiadds
sti
into
xchg
and
mov
add
xlat
sbb
scas
xlat
insb
pop
pop
or
cs
jle
mov
jb
jp
sub
out
pop
pop
int3
or
adc
fsubl
lods
or
lods
mov
inc
jno
pop
je
ljmp
sub
imull
dec
shl
jp
mov
test
push
lods
mov
xor
fs
imul
movsb
loopne
jl
leave
mov
dec
cmp
outsl
popf
rol
fst
out
sbb
cld
int3
jae
in
pop
jo
sub
mov
dec
mov
and
sub
pop
orb
add
fwait
pop
push
mov
fidivrs
andl
xchg
jle
dec
int
negb
aam
ret
sbb
lock
lds
in
and
loopne
shrl
inc
adc
rclb
es
dec
mov
add
add
sub
mov
or
popf
push
loopne
or
rcrb
loop
cmp
push
fists
mov
sbb
xchg
popf
ds
mov
cmc
mov
cld
pop
test
les
or
je
and
in
inc
repnz
lock
mov
rcrl
ret
lret
adc
cmp
shr
xor
pushf
test
stc
inc
dec
mov
icebp
jecxz
push
mov
or
cmp
int
pusha
cli
xor
or
sti
stos
add
fwait
cmp
inc
out
in
sti
ret
fsubr
pushf
daa
mov
pop
adc
and
lods
or
cmpl
mov
push
pop
lret
pop
fwait
out
enter
push
pop
stos
subb
ss
stc
jmp
in
mov
addr16
enter
add
enter
scas
pop
cwtl
mov
in
jmp
mov
push
jne
adc
lret
xchg
loop
xor
int
sbbl
mov
andb
mov
aam
xchg
in
or
test
jns
jns
call
cli
sbb
les
mov
out
or
adc
jnp
flds
adc
jecxz
pusha
cmp
divl
fnstsw
stos
xchg
ficoml
adc
aaa
xor
int
lahf
daa
andl
dec
jo
pop
ds
fadds
lahf
aam
dec
roll
lcall
jle
sub
jle
ret
jl
jl
push
imul
pop
orl
fsubr
roll
sbb
sarb
add
add
outsb
mov
adc
icebp
lds
push
jne
and
sub
lcall
arpl
jne
xlat
cs
xchg
adc
insb
fidivl
or
fidivs
lods
sti
dec
push
pop
int
insl
incb
fstpt
cmp
sbb
lret
cmp
jp
jae
sbb
cmp
pop
sub
fsubl
dec
mov
push
push
sbb
pop
fwait
and
mov
cmp
jg
test
fbstp
jo
adc
fidivrl
add
in
in
movsb
imul
and
jae
dec
movsb
adcl
scas
mov
jb
pop
not
mov
mov
sub
inc
adc
adc
add
inc
cmpxchg
out
std
dec
jp
dec
ret
push
and
dec
mov
scas
push
std
add
idivb
dec
out
mov
loopne
lret
or
gs
push
push
pop
aas
mov
and
movsl
cmc
push
mov
int3
jp
hlt
add
out
shrl
je
lods
pop
fs
jg
loope
mov
ficoml
scas
mov
jge
pop
pop
mov
add
adc
and
mov
push
inc
and
inc
pop
mov
mov
mov
fwait
cmp
rcl
cmp
sbb
add
hlt
test
xor
adc
jne
or
pop
and
negb
xor
movsl
xchg
jns
lret
jb
lret
test
cld
sbb
sbb
neg
ljmp
int
push
xor
push
cmc
push
leave
daa
sub
lcall
cli
cmpsl
enter
imul
jl
daa
jmp
es
mov
mov
add
cs
and
add
mov
fidivrl
mov
mov
mov
fsubl
mov
imul
movl
cmc
das
xchg
cmc
pop
adc
pop
movsl
push
lods
bnd
fidivl
pop
ret
lcall
push
shrl
shl
inc
popl
push
cmp
in
mov
data16
mov
ret
and
test
and
fdivs
stos
gs
push
popa
mov
ret
scas
bound
or
adc
cwtl
or
cs
dec
cli
lds
mov
lea
push
xchg
aam
fldcw
sbb
mov
jle
orb
daa
push
push
sbbl
rorb
xchg
lcall
es
push
mov
out
into
out
push
out
nop
movsl
mov
icebp
loop
ds
cmp
mull
jno
mov
cmp
cmp
pop
lret
repnz
xor
scas
nop
std
mov
xchg
fsubrl
hlt
leave
scas
xor
insl
lcall
push
out
lea
jae
outsl
push
hlt
dec
add
dec
test
fdivs
mov
lret
mul
incb
sarb
or
cwtl
or
out
cmp
push
cmpsl
mov
stos
stos
std
insb
and
cwtl
ror
out
pop
mov
mov
lea
stos
and
xchg
sbb
add
sub
pop
and
add
addr16
xchg
dec
test
addr16
movsb
mov
add
xlat
lods
add
ret
push
lods
repnz
push
js
nop
jp
pop
imul
daa
repz
das
jp
xchg
push
adc
arpl
js
es
fwait
cmc
cmp
cmpsl
sub
dec
outsl
es
test
xchg
pop
cmp
mov
push
push
addb
or
nop
sbb
gs
mov
cmp
push
mov
sub
repz
sbb
cmpsb
mov
jbe
shlb
mov
jecxz
mov
adc
cld
push
mov
js
stos
std
incb
push
or
cmpsl
dec
fs
imul
or
xchg
loopne
and
push
clc
xchg
pop
pop
orl
sub
cmpsb
adc
push
add
icebp
jb
pop
test
sbb
int
aas
aas
or
sub
adc
icebp
jo
cltd
aas
cli
cmpsl
and
add
dec
mov
fs
push
es
stc
hlt
xorb
gs
insb
add
cmpsb
adc
jle
adc
icebp
mov
mov
mov
sub
push
ja
mov
mov
aam
mov
ljmp
pop
or
addl
fsubs
arpl
and
rorb
adc
loopne
and
mov
cmp
or
mov
inc
mov
sbb
jns
xchg
test
mov
out
test
scas
mov
pop
sahf
or
xor
sti
cmp
bound
mov
roll
mov
add
aas
jns
es
insl
in
ds
mov
daa
xchg
enter
shrl
sub
mov
in
mov
sbb
adc
mov
mov
leave
jae
cmpb
mov
mov
int3
push
imul
dec
in
dec
clc
fimull
aas
fs
std
jo
cli
rclb
mov
jl
lods
stos
addl
pop
loope
imulb
lods
jae
hlt
ret
shrl
mov
jbe
cltd
in
push
sbb
sarl
ja
mov
loopne
and
in
push
sub
xor
mov
mov
lahf
mov
rol
lcall
mov
int
dec
mov
jne
sbb
mov
cltd
imul
clc
add
cmp
xchg
test
lret
xchg
pop
test
push
fadd
aam
fcoms
bound
outsb
out
aad
jne
sub
push
xor
xchg
push
pusha
sbbb
dec
mov
mov
jnp
mov
leave
cmp
lret
or
shrb
sub
mov
mov
rorb
gs
xchg
xor
push
jmp
or
sub
gs
js
dec
cmpsb
mov
mov
mov
jns
mov
cwtl
cs
xor
xor
scas
add
push
xor
sub
rep
fwait
and
inc
sbb
xchg
pop
pop
and
repz
ret
cmc
pushf
or
sbb
outsb
inc
rolb
mov
fnstcw
aaa
add
push
sub
mov
outsl
pop
pmuludq
imul
cmc
leave
in
in
movsl
cmp
pop
out
xor
shlb
sbb
negl
fxch
repnz
aaa
lods
sti
cmc
test
inc
xchg
bound
in
jnp
push
lret
rcr
ja
test
push
push
mov
push
push
jg
cs
mov
cli
sti
mov
mov
dec
sub
push
jo
arpl
push
lret
inc
lret
add
pop
neg
jae
repz
mov
mov
jl
mov
pop
stos
aam
mov
loopne
mov
lret
add
mov
jae
lret
rolb
movsl
or
dec
jne
fldl
fdivrl
mov
outsl
xor
push
daa
adc
jae
fiaddl
fsubs
inc
inc
cmpsl
sbb
sbb
dec
sti
sub
sub
aam
movsb
stos
daa
in
dec
ss
jb
repz
mov
shlb
xchg
jmp
cli
dec
pop
sub
add
push
push
fcmovbe
jmp
mov
out
xor
and
test
rolb
adcl
sub
cmp
pusha
sub
mov
dec
mov
cs
rcrb
dec
adc
jb
xor
out
loope
push
popa
lahf
or
jmp
inc
jae
rcrl
dec
sarl
adc
pop
mov
into
insb
and
xchg
into
mov
pop
fsubr
push
or
outsl
xor
sub
sub
cmc
cmpl
mov
jp
mov
arpl
sub
imul
cmc
mov
push
inc
mov
outsl
adc
nop
mov
jae
sbb
outsl
cmp
aad
fimuls
loop
cmp
lds
ljmp
xor
dec
jne
xchg
das
pop
and
push
out
fidivs
xor
push
sahf
inc
xchg
lea
in
push
stc
jbe
jge
jge
inc
cs
sbb
or
lock
outsl
aas
inc
push
sbb
cmp
xor
ss
rcrb
cwtl
jge
gs
aam
or
mov
aad
cld
movsb
lcall
sub
jecxz
xchg
addl
iret
mov
pop
outsl
ja
fimuls
jl
data16
insl
xchg
xchg
daa
xlat
sub
mov
jecxz
jne
sti
out
shlb
and
fsts
popa
jno
adc
dec
mov
mov
or
push
or
data16
test
mov
mov
mov
adc
jne
gs
test
scas
sar
in
pop
lods
push
or
mov
jmp
fadd
movsl
xor
dec
outsb
xor
sbb
xchg
xchg
cmp
shrb
and
popa
add
push
rcll
out
mov
push
pop
test
push
enter
into
call
sbbb
sarl
int3
jl
les
testb
sbb
xor
or
mov
lahf
cli
xchg
sarl
jp
or
and
adc
mov
into
pop
xor
pop
sti
sub
adc
push
push
or
jbe
lret
pop
ret
xchg
lock
dec
xor
or
fisubrs
xchg
test
push
sub
cs
sbb
in
leave
xchg
xor
fsubrp
addr16
mov
cmp
popf
jb
push
je
sub
mov
or
lret
mov
lea
push
fdiv
fiaddl
adc
addr16
push
mov
movsb
sub
and
xchg
stc
sub
pop
scas
add
cmpsb
xchg
popl
mov
cmc
cmpb
pop
adc
lods
mov
mov
std
mov
sti
cmp
xchg
shl
ds
mov
mov
mov
subb
fucomip
mov
sub
lds
inc
frstor
xor
dec
ret
aam
jmp
ss
std
push
sahf
sbb
call
add
addr16
lahf
xor
push
jl
cmp
loopne
xlat
pop
hlt
stos
add
rol
adc
in
cwtl
mov
and
fdivrs
sahf
call
dec
mov
or
mov
dec
xchg
inc
addr16
lret
mov
cltd
sbb
fs
xor
jne
xlat
iret
nop
lods
aam
lret
sub
add
pusha
mov
mov
mov
repnz
xor
mov
clc
xor
lea
jo
push
push
addl
pop
clc
adc
call
ret
dec
repnz
test
movsl
ret
inc
pop
and
leave
mov
mov
rcrl
je
sarl
subb
inc
add
and
mull
cmc
adc
pop
sbb
jns
popa
test
mov
fadds
aas
outsb
and
jl
cs
pop
xlat
adc
xchg
add
repz
int3
js
sub
pop
mov
insl
mov
loopne
mov
jmp
mov
sbb
push
add
mov
lods
int3
jecxz
or
fiaddl
fcomip
inc
dec
out
jp
pop
inc
adc
cmpsb
cmpsl
repnz
xchg
sbb
cs
icebp
popa
adc
je
mov
mov
daa
jmp
je
and
pushf
mov
mov
outsl
xor
cmp
adc
and
jmp
mov
lret
les
popa
sbb
std
push
mov
add
fwait
xchg
imul
adc
mov
lock
vcvtsd2si
test
add
pop
daa
pushf
mov
dec
ljmp
sbb
mov
jne
push
mov
add
jmp
cmp
test
into
clc
mov
cmp
in
test
icebp
sbb
mov
adc
and
cmp
cmp
call
stos
movsb
inc
add
push
jae
dec
push
cmp
imul
xchg
mov
push
jnp
dec
repnz
cli
jg
int3
lcall
mov
cltd
test
cmp
mov
leave
subb
sub
frstor
xor
test
or
dec
insl
scas
out
dec
pop
sub
jle
adc
insb
loop
cld
sarl
ss
in
cli
fidivrl
and
daa
and
inc
fsubr
push
in
jge
cmp
pop
pop
sub
jg
icebp
mov
dec
mov
pop
add
pop
in
fisttpl
mov
test
jnp
and
inc
movsb
lods
jnp
repz
lret
hlt
iret
and
push
or
push
std
mov
addb
or
out
mov
inc
jge
xchg
test
int3
dec
add
rclb
adc
icebp
leave
add
push
mov
push
das
sub
scas
mov
inc
pop
mov
and
fcoms
jbe
xor
pop
or
ficoml
lods
adc
inc
cmpsl
out
pop
aad
adc
xchg
stos
imul
shlb
jge
adc
inc
cltd
adc
into
push
mov
add
xchg
icebp
add
dec
scas
and
dec
xor
jge
pop
cmp
jmp
and
out
lcall
dec
fidivrs
lcall
jbe
and
xchg
outsb
adc
push
fistpll
ljmp
icebp
xchg
aaa
pushf
xchg
sbb
push
jmp
loope
loopne
fildll
shr
cmpsb
fs
push
cmp
andb
inc
mov
inc
push
push
push
movsl
scas
xor
mov
lahf
sbb
add
cmpsb
jo
out
fdivrs
das
enter
inc
or
es
xor
xchg
fldt
push
mov
cs
lret
test
fucom
inc
fs
adc
xchg
jecxz
lock
mov
adc
es
mov
push
stc
xchg
mov
jp
loope
push
mov
ficoms
jg
sub
jno
test
cltd
sbb
in
lea
aam
cli
js
aaa
add
movsl
add
mov
sahf
sahf
fwait
ret
popf
mov
es
call
inc
out
pop
sub
loopne
push
sub
int
mov
jb
mov
repnz
test
push
stos
outsb
packuswb
loop
fildll
pop
and
push
cs
imul
mov
mov
std
aaa
push
lds
into
and
cmp
test
ret
outsl
xlat
aaa
inc
mov
lods
sarl
out
mov
xchg
fwait
lds
out
mov
or
aas
jg
sti
loope
mov
inc
mov
bound
mov
bound
pushl
shr
int3
inc
adc
scas
push
repnz
adc
cld
adcb
push
and
sbb
add
pop
ss
stos
mov
ja
pop
mov
aaa
mov
repnz
daa
int
pop
dec
xor
xchg
shrl
enter
stos
negb
test
ja
jo
cmp
and
sti
adc
mov
lahf
mov
push
xchg
adc
and
mov
ds
cmp
push
rcrl
or
leave
stos
aas
ret
iret
pop
jno
mov
xchg
adc
push
mov
js
xchg
sahf
cmp
lret
out
cmp
sti
pushl
shll
pop
mov
jae
ss
sarb
xchg
push
js
adc
xor
adc
hlt
and
stos
sub
push
popa
inc
xor
shlb
insl
in
xor
notb
fs
in
push
test
test
cmpsb
shlb
loope
test
ret
mov
push
push
ljmp
or
push
xchg
int3
mov
xor
and
cs
mov
jmp
push
mov
inc
inc
mov
insl
add
stos
addl
pop
lcall
sub
lret
fsts
push
mov
loop
jp
cltd
repz
xor
push
xlat
sbb
notl
inc
imul
pop
push
jecxz
cwtl
outsb
loope
loop
xchg
mov
pcmpeqd
mov
test
fisttps
sti
repnz
icebp
or
imul
shll
inc
iret
and
sub
jmp
and
lret
orl
mov
rcl
adc
jbe
in
mov
dec
imul
scas
outsb
xchg
dec
ret
mov
ja
jge
lods
or
mov
fcoms
sar
insb
mov
dec
imul
pop
call
xor
mov
cwtl
or
aas
arpl
lock
dec
setb
lods
and
mov
and
add
ds
shr
scas
mov
test
lods
pushf
mov
subb
in
mov
movsl
icebp
daa
push
jmp
push
pusha
jle
cmpsb
lods
jae
jge
loop
jmp
or
inc
mov
jge
lods
cmpsl
sbb
fidivrl
dec
aam
fsubs
ljmp
or
imul
push
add
popf
jge
inc
hlt
inc
pop
jmp
stos
dec
cwtl
add
jl
fwait
inc
aam
into
ficompl
subb
sbb
pop
mov
pop
and
movsb
js
push
sarb
mov
jo
aam
mov
inc
mov
sbb
cmp
aad
je
xchg
or
cmp
add
adc
or
jl
iret
and
cli
adc
jg
jnp
inc
mov
add
fists
nop
xchg
xor
sub
push
in
sub
mov
fwait
adc
gs
loope
or
popaw
cmc
hlt
mov
scas
nop
or
fwait
xchg
xor
iret
xchg
push
add
push
mull
jns
icebp
sub
inc
es
mov
push
sbb
mov
jbe
rcr
subl
jl
inc
or
loope
test
xchg
mov
into
push
mov
adc
cmpb
pop
and
iret
lods
aas
sub
imul
cmp
hlt
or
pop
pop
push
push
and
mov
cmp
lods
jne
push
cs
mov
and
mov
and
mov
nop
cld
push
imul
xor
pop
xor
jecxz
std
fwait
rol
ret
sbb
and
fimull
jne
dec
and
push
add
adc
fs
out
jp
arpl
scas
and
je
add
mov
jmp
jg
add
inc
test
jg
call
scas
ljmp
lret
scas
popa
rcrl
hlt
orb
fwait
mov
gs
sarb
hlt
fcmove
bound
inc
out
aad
ret
mov
stos
loopne
mov
inc
lcall
pop
xorl
pop
and
mov
pop
insb
xchg
or
call
jle
lcall
and
das
cwtl
lret
aaa
inc
pop
and
jge
aas
int
cmpsl
iret
ss
fwait
sub
daa
or
and
rcl
in
pextrw
sbb
inc
dec
push
loope
inc
or
cltd
sub
lcall
out
sbb
mov
dec
adc
pop
jnp
mov
adc
mov
add
pop
movsl
jl
sub
sub
fs
in
loop
rcl
inc
fidivl
lea
ret
enter
push
lahf
int
jp
and
dec
fcom
cli
mov
mov
shl
das
sbb
imul
xchg
movsb
pop
add
mov
mov
cmp
jns
pop
sbb
stos
popa
imul
cmpsl
test
push
bound
ss
je
adcl
into
pop
push
mov
daa
dec
stc
je
gs
xor
movsb
ret
rorb
mov
lahf
pop
xchg
in
cmp
mov
movsl
sahf
mov
sbb
pop
xchg
in
xor
cld
mov
out
jb
enter
push
jb
push
sub
bswap
adc
mov
insl
pop
dec
aam
xchg
push
push
jle
cmp
in
or
mov
addr16
and
or
pop
ret
out
call
cmc
jmp
push
cli
xchg
sbb
xchg
fistps
aas
inc
add
adc
sbbl
lock
nop
hlt
std
imul
or
loop
ficoms
ffreep
sub
xchg
sub
fcompp
int
mov
pop
add
in
ret
push
mov
ret
es
xor
aaa
mov
mov
inc
push
imulb
nop
test
cmp
test
mov
shrl
cld
pop
or
mov
xlat
ss
xchg
rorb
fcompp
inc
outsl
push
push
push
pop
inc
pop
imul
ret
sti
stc
dec
sub
inc
es
lret
negl
jnp
cmp
add
pop
xchg
pop
push
stos
and
and
xchg
aas
int
mov
aaa
mov
xlat
cmpsl
lds
sub
loopne
jle
mov
movb
rcl
or
sub
sbb
xor
decw
arpl
sarb
lds
push
fstpt
xor
cld
mov
clc
sbb
push
jmp
mov
addr16
fildl
loope
inc
scas
lea
cmpsb
clc
idiv
push
cmpsl
lds
call
repnz
arpl
sar
outsl
sub
in
aaa
aam
call
in
pop
push
mov
and
dec
adc
fdivs
sahf
and
or
daa
sbbb
jne
in
inc
xchg
xor
and
aam
mov
scas
push
out
or
mov
fldl
mov
sub
lcall
lods
push
jb
aaa
pushf
je
cmp
dec
shl
xlat
mov
sbb
fimuls
sbb
sub
and
das
fdivrs
add
ret
cld
movsb
std
push
push
or
dec
loope
loopne
dec
xchg
mov
ja
fmuls
div
push
iret
icebp
cwtl
aad
adc
pop
notl
jne
cmp
and
and
mov
or
xchg
data16
push
jge
hlt
jecxz
push
adc
push
xchg
outsl
mov
mov
xchg
scas
decl
xlat
dec
jb
add
mov
push
xchg
ret
enter
mov
jl
in
xor
cmp
sbb
test
mov
test
lods
stos
mov
lret
jle
inc
out
mov
cs
bnd
ror
sbb
ret
pusha
fdivrs
mov
sub
add
jge
mov
subl
inc
rolb
cld
jle
daa
ss
outsl
dec
je
cmp
fadd
jb
add
divb
push
loope
aaa
or
jge
in
cmpl
pusha
lret
ja
jno
call
dec
lcall
push
xchg
lret
adc
mov
mov
scas
pop
or
popa
outsb
daa
inc
mov
popf
lds
xchg
popf
mov
jmp
je
and
test
xchg
data16
orl
test
fidivl
or
pop
cli
faddp
and
jbe
adc
jo
pop
inc
mov
fbstp
shr
xchg
inc
out
push
aas
cmp
lods
cltd
jnp
test
mov
xchg
push
jbe
mov
mov
imul
mov
lods
mov
jnp
mov
lahf
les
mov
les
or
into
in
mov
dec
pop
mov
ja
inc
add
add
jecxz
daa
inc
mov
push
fstpt
push
cmp
pop
mov
jnp
mov
hlt
hlt
cmp
rcl
aam
mov
or
arpl
nop
push
jl
clc
dec
pop
sub
in
xor
cltd
xchg
gs
pop
cwtl
inc
mov
icebp
mov
and
cld
into
les
xchg
lcall
jbe
add
pop
or
scas
mov
pop
pop
mov
mov
stos
mov
clc
adc
leave
mov
pop
push
in
movsb
or
dec
sbb
lret
in
fdivrl
pop
aam
loop
shll
out
push
cld
xor
jg
pop
xor
inc
xor
rep
sub
jns
clc
icebp
into
xchg
pop
cmp
pop
pop
push
popa
dec
fsubl
xchg
push
imul
shll
jle
mul
and
xlat
and
jb
inc
mov
or
xchg
ret
pop
or
pushf
sub
add
sti
adcl
jno
popf
sbb
pop
cmpsb
jno
test
lcall
popa
sbb
pop
popf
decl
dec
push
push
xor
stc
dec
aam
and
mov
clc
pop
dec
inc
loopne
lea
adc
mov
adc
mov
sbb
sbb
pop
out
mov
xor
lcall
cs
mov
add
adc
in
mov
xchg
adc
jg
dec
int
sub
push
divb
add
pop
int
hlt
mov
dec
dec
mov
push
mov
lret
push
xchg
int3
loope,pn
add
dec
insb
mov
pop
fstl
and
mov
outsl
cltd
mov
fisubs
xchg
fwait
jmp
or
cwtl
and
xchg
ja
testb
ss
aad
das
or
outsl
mov
push
mov
push
xorb
inc
mov
sbb
jecxz
arpl
jle
and
dec
rcrl
lret
lods
sbb
sbb
mov
stos
in
ss
dec
daa
pop
cmp
mov
lret
ss
sbb
add
shll
mov
xchg
je
jnp
ret
add
ret
cmc
in
cmc
mov
push
sub
xchg
mov
lods
vmovaps
fisubl
xchg
add
aam
in
sbb
dec
lds
pusha
ss
push
cmpsb
or
ljmp
push
iret
stos
outsb
dec
pop
xchg
push
mov
dec
adc
mov
loopne
call
icebp
add
cld
rclb
jo,pn
add
movsb
cmp
fwait
mov
rorb
push
pop
test
mov
lret
lods
in
and
fldl
lock
xchg
inc
xor
shl
sbb
sbb
push
or
dec
push
or
mov
fcoms
repnz
adc
mov
lret
mov
int
push
cwtl
push
repz
pop
cmc
and
sbb
imul
add
shr
sub
mov
hlt
push
cli
xor
push
add
adc
ljmp
cmc
ret
inc
ljmp
xor
add
filds
les
adc
sti
xchg
stc
add
cmp
sbb
mov
enter
cmp
pop
mulb
push
hlt
mov
shll
push
aas
push
pop
int3
ret
ss
int3
mov
mov
ret
xchg
fwait
push
add
clc
push
dec
sbb
pop
jecxz
imul
cmc
dec
push
aam
fcomi
daa
lods
jp
jns
pop
jmp
ud1
mov
ljmp
loopne,pt
mov
push
mov
mov
sbbb
jbe
andl
mov
clc
gs
add
or
xlat
mov
jb
sbb
loopne
xchg
cld
xorb
insb
mov
call
sbb
ss
mov
dec
jge
adc
dec
cmpl
fwait
popa
pusha
adc
mov
dec
out
roll
and
loopne
out
pop
test
adc
inc
or
xlat
clc
or
enter
push
loope
jo
leave
or
mov
push
push
cltd
xor
cmp
cmp
jmp
xchg
push
xchg
push
xorl
jae
adc
and
lock
adc
shlb
pop
pop
inc
bound
cld
in
in
fsubr
mov
push
test
les
test
jns
aam
imul
js
es
stos
scas
pop
dec
or
hlt
push
lret
dec
fdivl
jecxz
outsb
out
pop
lods
adc
jbe
aas
jns
adc
add
xchg
add
dec
es
lods
loope
popa
push
sbb
jne
in
testb
xchg
dec
out
fisttpl
shll
mov
int
pop
adcl
shll
xchg
and
gs
mov
cmp
test
ret
xchg
sbb
loop
push
jl
loopne
fidivl
in
cld
jne
int
lds
fwait
cmpsl
lret
fmuls
mov
cltd
xor
in
push
xchg
dec
lahf
jbe
or
shr
or
mov
shlb
inc
sbb
jo
cmp
sti
or
jbe
leave
and
insb
lods
daa
addr16
loope
ljmp
inc
pop
lahf
sahf
shrl
inc
mov
push
sbb
cmpsl
dec
xlat
dec
imul
packuswb
xchg
test
in
add
pop
mov
loopne
repz
hlt
jo
xor
push
sbb
inc
outsb
xchg
adcb
and
dec
or
mov
out
sub
and
cmpsl
xchg
xchg
scas
adc
int3
cltd
dec
in
fidivl
imul
aaa
adc
or
sub
sbb
in
or
fs
in
int
mov
movsb
mov
adc
dec
loope
arpl
cmp
jg
jnp
cltd
dec
cmp
jno
int
inc
lock
cmp
enter
push
cmc
jnp
or
jle
xor
gs
mov
jae
shrl
sbb
in
in
cmpb
pop
xchg
jmp
jecxz
push
push
jo
ret
sbb
fldl
push
fdivrl
xchg
sbb
in
jbe
push
dec
mov
mov
cwtl
adc
inc
das
lret
dec
pop
pop
out
mov
mov
sbb
lea
mov
xor
cmp
push
adc
stos
js
orl
mov
add
mov
cs
sarb
jmp
push
inc
std
cmpsl
jp
dec
loope
or
mov
cld
nop
cmp
les
mov
xchg
mov
pop
pop
mov
pop
and
loop
xchg
adcb
pop
sbb
pop
sub
iret
fistpl
dec
dec
jmp
push
and
xor
push
addl
push
sub
in
mov
mov
pop
xor
orb
gs
lods
ss
ds
divb
stc
inc
jae
lret
adc
dec
mov
sub
mov
adc
add
rcl
push
push
scas
push
mov
sbb
int
popf
sbb
clc
clc
int
cmp
mov
mov
mov
divb
dec
out
mov
or
add
mov
cs
jecxz
fisttpl
rclb
sahf
cltd
stos
cmpsl
fstpl
pop
adc
jl
lods
fs
dec
cmp
lea
adc
jge
aad
mov
es
out
or
insl
mov
jns
insl
fdivs
push
xchg
jnp
mov
loopne
sarb
fcoml
jb
js
sbb
mov
dec
and
scas
lods
mov
sbb
test
mov
pop
push
push
jo
test
jnp
cltd
std
push
mov
cmp
inc
test
imul
inc
or
xchg
inc
or
gs
dec
dec
repnz
push
mov
mov
test
repz
xchg
cmpsb
pop
and
mov
call
mov
add
mov
aas
imul
push
mov
pop
jne
in
xor
and
in
xlat
cmp
imul
push
mov
cli
push
sbbl
movl
gs
dec
pop
out
cltd
mov
mov
inc
test
dec
shlb
cli
mov
push
sub
cmp
jg
xor
xchg
sub
jnp
pop
or
jo
rcrl
leave
dec
jge
xchg
xchg
jge
xor
insb
call
mov
pop
and
add
arpl
mov
lea
mov
in
mov
lcall
scas
loop
sahf
push
xchg
or
pop
out
pop
pop
mov
dec
and
out
dec
jno
inc
pop
cs
push
shlb
stos
mov
pop
mov
and
mov
sbb
imul
sbb
lret
aam
jb
mul
xorb
mov
or
mov
pop
xchg
js
adc
subb
inc
mov
scas
nop
push
xchg
mov
sub
lret
add
or
xor
in
in
adc
lods
decl
dec
dec
mov
scas
cmpsl
xor
insb
lcall
lods
mov
pop
fdivrs
sarl
inc
inc
hlt
inc
pop
fdivp
sbb
mov
mov
and
orl
ret
dec
push
push
mov
rorl
out
test
pop
ret
xchg
les
popl
sti
subl
in
adc
xor
ds
cmpsl
imul
stos
aaa
sahf
adc
mov
repz
sub
cmp
cli
jbe
std
and
mov
loope
xchg
jge
test
ljmp
xchg
xchg
mov
data16
xchg
sti
rol
sub
pop
enter
sbb
sbb
dec
out
inc
gs
fistpl
shr
or
shll
jns
insl
sarb
lods
test
jno
jne
or
call
cs
pop
xchg
push
addr16
test
mov
mov
scas
or
mov
push
and
test
cmp
addb
fisubrl
ljmp
pop
cmp
mov
push
add
hlt
outsl
notb
adc
sbb
mov
mov
orl
xchg
jno
or
sbb
cmpsl
std
or
cmp
pusha
pop
lahf
xadd
mov
mov
add
cli
out
icebp
je
jbe
andb
dec
pop
lret
das
lret
ljmp
sbb
daa
push
aas
mov
cmpsl
adc
scas
in
fcoml
cmc
testb
lret
fwait
movsl
hlt
pop
jo
jmp
jo
stos
lods
push
dec
jecxz
cs
lock
aas
dec
cmpsb
push
cmp
leave
sarb
jne
in
mov
stos
lods
and
xor
xor
adc
dec
add
insl
jae
adc
leave
in
jno
aas
and
push
in
adc
out
dec
orb
and
js
sbb
jle
pop
pop
mov
bound
shl
dec
push
lahf
scas
jl
sar
sahf
in
xor
add
mov
dec
out
imul
mov
loope
pop
out
xor
sbbb
sbb
push
xchg
xchg
add
jmp
adc
nop
inc
stos
cmc
fs
adc
out
or
hlt
lret
jl
stc
add
xor
mov
shrl
in
pop
inc
mov
push
popf
and
fnsave
out
mov
inc
push
dec
mov
aaa
sbb
lahf
test
test
shlb
sub
xchg
in
jno
jge
mov
xor
scas
into
lahf
aaa
fs
inc
dec
pop
mov
pop
jecxz
jg
call
loope
cltd
popa
dec
and
push
cmc
jp
rclb
push
or
pusha
pop
sub
inc
sub
mov
cmpsl
iret
jmp
fldl
js
mov
mov
dec
loopne
xchg
inc
mov
mov
cmpsl
jbe
mov
pop
enter
adc
xchg
mov
jne
adc
or
shrl
ret
dec
and
lds
fs
inc
dec
and
hlt
loop
fistl
push
mov
ljmp
sarb
push
stc
jb
push
mov
adc
pop
xchg
cmpsl
and
enter
push
jae
bound
inc
sub
decb
negl
xchg
test
add
cmp
mov
out
dec
mov
push
lret
nop
call
push
pop
test
cmpb
out
or
mov
lock
push
popf
pop
out
dec
fdivl
mov
xlat
stos
and
repnz
cmp
mov
xor
je
fisttps
movb
addr16
fstpl
push
mov
sbb
pop
add
fimuls
xor
push
rcl
movsb
leave
fdiv
pop
orl
pop
das
movsb
cmp
imul
sbb
insl
and
mov
mov
arpl
pop
mov
bound
dec
arpl
sbb
pushf
stos
icebp
or
mov
push
or
pop
cmp
in
cmc
cmp
mov
adc
imul
aaa
insl
mov
xchg
sbb
dec
stos
mov
cwtl
ja
aam
pop
scas
push
cld
lret
clc
push
sub
sbb
movsb
das
test
xchg
adc
arpl
das
xchg
or
bound
pop
pop
pop
movsl
push
and
das
pop
lds
inc
push
or
or
xchg
loop
cs
aam
aam
xchg
lods
sub
in
xor
add
xlat
sub
fs
sub
jmp
adc
sbb
sub
lea
popf
dec
mov
dec
dec
popf
fnstcw
mov
sub
mov
lahf
inc
rorb
addb
fdivrs
mov
mov
inc
dec
xchg
sti
rcr
je
xchg
mov
mov
psrld
sahf
sahf
and
mov
cmp
int3
inc
arpl
push
jnp
lcall
adc
cmc
rolb
mov
ljmp
stos
sahf
push
es
rcll
add
daa
imul
or
push
sti
cmpl
test
lcall
or
add
jnp
insb
sub
notb
xor
lock
stc
or
mov
imul
xchg
data16
add
fidivl
mov
in
mov
or
and
gs
sbb
xlat
int3
adcb
insl
jnp
cmpsb
adc
jo
xor
push
arpl
ficoml
xor
push
ficoml
in
inc
loop
lahf
das
xchg
fmuls
fstpl
icebp
stos
rorb
aaa
in
and
cld
mov
aad
or
mov
lcall
test
sbb
cli
lods
jle
mov
stc
jl
adc
scas
stc
jne
pop
cmpl
or
mov
sub
loope
mov
mov
xchg
neg
cmp
add
fstl
sbbl
pop
test
mov
mov
in
das
hlt
enter
repz
jae
popf
ja
sahf
clc
add
and
sbb
mov
enter
and
cmpsl
clc
dec
std
imul
jmp
jo
push
js
mov
movsb
lret
sti
pushf
jl
add
dec
jo
xor
movsl
daa
lods
add
push
out
add
ret
jp
mov
dec
ds
stc
out
jae
dec
into
divl
jmp
int3
gs
inc
mov
rcl
ret
dec
and
jbe
push
pop
std
into
arpl
ret
repnz
sbbl
daa
in
push
pop
add
dec
in
push
js
int
loop
jae
cmp
pop
es
test
cmp
jecxz
mov
xchg
clc
dec
and
out
repnz
push
cwtl
xor
jne
insl
int3
xchg
pop
xchg
dec
faddl
mov
sbb
lret
mov
or
les
add
dec
std
hlt
fldt
and
mov
ja
cmp
adc
aam
nop
jmp
sbb
pop
push
xor
pop
sub
xchg
pop
enter
jg
cmpsl
insb
loope
jl
ror
pop
iret
inc
xor
inc
cmp
cmpsb
jnp
gs
adc
adc
lahf
outsb
stos
pop
jb
inc
inc
dec
loopne
and
inc
xchg
insb
test
jp
sahf
subl
or
xlat
jbe
out
push
adc
cwtl
das
mov
popa
adc
sbb
push
imul
cltd
aad
or
lds
addl
lods
mov
sub
sbb
mov
xchg
jmp
add
mov
mov
psubw
das
sub
sahf
jge
dec
dec
test
outsl
shll
cmpsb
imul
outsb
jg
bound
sbbb
mov
xor
mov
ljmp
dec
adc
cmpsl
cld
jno
sub
fwait
adc
out
inc
test
mov
in
pop
imul
pop
rorb
mov
dec
les
bound
jo
les
out
ja
xor
mov
adc
mov
xlat
roll
insb
ljmp
pop
push
add
out
shlb
dec
xor
inc
out
jns
stos
push
out
gs
inc
xor
pop
sbb
ret
call
nop
lea
ja
sub
jg
les
std
mov
movsb
push
add
out
dec
pop
mov
add
jg
sbb
rcll
xchg
ljmp
jnp
mov
pop
pop
stos
push
hlt
pop
test
dec
or
xchg
inc
shlb
sub
fisttpll
scas
imul
inc
movsl
jp
and
jmp
jns
jo
xor
inc
add
mov
insb
sbb
imul
lahf
je
pushf
fsubrp
insb
mov
sub
prefetchwt1
iret
aad
push
push
sbb
mov
or
adc
and
insl
enter
jge
cmpsb
jo
xchg
les
or
mov
rorb
scas
inc
mov
mov
test
sub
push
pop
cmp
sbbb
movsl
mov
mov
fcoml
and
sub
lahf
icebp
ret
xchg
fwait
push
nop
out
push
imul
test
bnd
xchg
pop
pop
mov
and
mov
arpl
pusha
inc
push
pusha
pop
hlt
or
cld
imul
fst
addr16
pop
xor
sub
sub
leave
jecxz
test
cmc
into
push
cmc
std
inc
xchg
push
push
std
mov
xor
and
int
rorb
fldl
add
rolb
cmpsl
sub
movsb
imul
jo
push
arpl
inc
loop
outsb
cmc
push
jle
xchg
mov
inc
push
imul
in
xorl
roll
and
imul
mov
pop
clc
xchg
ljmp
xchg
sbb
iret
mov
sub
cmp
xor
or
sub
sub
mov
pop
imul
cmpsb
cmp
jne
jnp
popl
push
xor
vmovdqu
in
pop
cli
xchg
gs
cmp
or
xchg
lret
mov
xor
fsubrl
xor
jmp
stos
sub
sbb
in
adcl
test
ja
movsl
rclb
das
loopne
mov
sub
mov
xchg
popf
pop
mov
gs
jge
pusha
pop
xor
push
mov
das
out
jbe
ljmp
add
xlat
cs
mov
pop
cmp
mov
fldenv
dec
add
mov
insl
and
leave
cmp
es
ficomps
mov
inc
pop
scas
mov
in
mov
xchg
adc
out
push
xchg
sub
stc
shrl
inc
insl
je
ds
adc
adc
adc
pop
in
adc
aas
cs
pop
idiv
dec
mov
imul
xor
pop
xchg
out
fwait
mov
sub
lock
cli
or
pop
push
or
movsb
lds
scas
into
lock
into
mov
add
rorb
mov
decl
into
fsubrs
pop
scas
lcall
clc
push
push
adc
test
test
jb
and
cmp
xorb
scas
shlb
stc
and
jle
jecxz
cmpsb
mulb
shlb
test
inc
mov
mov
inc
sbb
mov
mov
or
sti
xor
lock
int3
jecxz
xchg
clc
push
fs
or
lods
out
lret
pop
das
inc
divb
rcrb
pop
xor
int3
inc
or
mov
push
mov
jp
fstl
add
xchg
cmp
test
push
test
fisubrs
push
dec
sti
sub
leave
or
dec
rcl
out
xor
aas
dec
dec
dec
andb
mov
fsubrs
fxch
sbb
or
pop
push
in
push
push
mov
std
iret
sti
lea
dec
adc
xchg
dec
inc
je
inc
add
adc
sbb
mov
shrb
pop
dec
mov
jnp
add
push
in
mov
rorb
repz
xchg
ret
mov
fwait
xchg
xor
int3
mov
sbb
mulb
int3
jnp
or
popa
jb
xor
loopne
scas
out
mov
loop
cs
mov
add
aad
jo
cmpb
mov
gs
std
jmp
xchg
push
mov
xchg
jl
fidivl
jp
mov
cmp
or
aaa
sbb
mov
int
nop
mov
ds
sub
jmp
jbe
mov
mov
sbb
outsb
push
in
insb
jge
cs
sbb
ds
popa
jne
mov
xchg
outsl
inc
loopne
pop
or
xorb
dec
outsb
jno
push
aaa
sub
in
dec
cmp
add
pop
adc
mul
mov
data16
jg
mov
or
clc
lods
mov
sbb
push
add
mov
sbb
shlb
or
in
negl
pop
mov
mov
lahf
push
daa
popa
push
cmpsb
test
xor
push
cmp
sbb
xchg
stc
pop
add
mov
pop
enter
push
into
lret
xor
iret
cmpsb
lea
pop
daa
gs
stos
and
fidivrs
cmp
sbb
mov
in
mov
push
fs
data16
sbb
add
xorb
cmp
mov
enter
xor
and
scas
jmp
call
jo
cmp
inc
xor
inc
in
rep
imul
jns
cmp
and
fidivrl
xor
test
insb
jb
cmp
repnz
or
jecxz
push
ret
cli
xchg
and
lea
aam
ljmp
sub
push
je
cld
or
bound
pop
lea
aaa
or
sbb
cmp
add
sbb
jae
repnz
in
leave
mov
mov
inc
lock
iret
pop
mov
adc
add
add
ret
daa
mov
dec
mov
and
push
inc
xchg
adc
scas
mov
ljmp
enter
push
and
outsb
xchg
push
mov
cmp
mov
outsb
sbb
in
movsl
jle
mov
jg
call
or
bound
push
iret
jge
fisttps
mov
jb
sub
cmp
andb
adc
pushf
imul
pop
shrb
and
shll
lds
xor
xorb
shll
ss
mov
jge
orl
pop
and
push
scas
sbb
lahf
jge
xchg
cmp
add
popa
push
in
adc
mov
adcb
in
push
push
dec
fwait
jl
and
pusha
popa
cmpsl
roll
add
aad
cmp
jl
dec
add
lods
lea
imul
and
mov
sbb
mov
cmpsb
mov
cmc
inc
das
add
mov
mov
outsl
pop
das
dec
cmp
and
lret
dec
mov
or
nop
inc
lcall
lret
xchg
into
jne
xor
pop
fwait
inc
push
subb
stc
inc
or
sub
scas
cmc
int
out
xor
lcall
jno
and
stos
mov
jl
lahf
add
out
test
aam
sarl
push
adc
adc
mov
es
push
bnd
gs
push
adc
push
fs
jne
cmp
cmp
and
mov
add
cmp
and
xor
push
lea
rol
sbb
push
std
clc
pusha
mov
adc
jecxz
popa
sbb
sub
aad
fdivl
mov
fprem1
xor
dec
test
inc
jecxz
push
mov
pop
push
lods
pop
das
cld
sar
lods
inc
pop
mov
inc
mov
add
inc
fdivl
push
lds
cmpsl
lock
popf
cmpsb
push
test
cltd
stos
sub
push
cmp
shl
add
xor
pusha
lcall
mov
push
out
pusha
cmp
sub
mov
fimuls
cmp
xchg
push
fimuls
jno
divb
cld
fdiv
outsl
jg
jge
sti
aaa
push
test
outsb
adc
lahf
inc
mov
ss
cmc
aad
repz
push
into
or
add
notl
gs
subl
leave
sub
sbb
daa
adc
sub
iret
and
inc
mov
jns
inc
cmp
xor
scas
xchg
pop
sub
das
jbe
jns
arpl
cmpsl
pop
add
and
push
xchg
mulb
repnz
jne
pop
insl
loope
clc
rorl
ret
sub
stos
pop
jnp
into
in
cltd
fwait
aad
xchg
xor
insb
int3
sti
xor
push
jne
cmp
sub
out
ja
inc
sti
xor
insl
mov
pop
movsl
test
pop
jb
fdivrs
mov
cmovp
ja
and
mov
push
nop
sbb
push
dec
jns
addr16
das
ss
inc
sbb
hlt
std
jne
mov
jecxz
mov
jnp
add
imul
push
inc
push
sbb
sub
mov
mov
not
test
push
dec
mov
mov
dec
testb
pop
call
cld
push
and
lahf
ja
in
dec
sbb
icebp
pop
pop
insb
add
out
and
adc
out
or
or
imul
orb
and
and
stos
pop
cmp
out
iret
inc
clc
ljmp
fwait
inc
fnstsw
sub
rcrb
cmp
stos
mov
stos
sub
outsb
cmp
inc
test
das
movsb
jle
popf
push
mov
fstps
lds
and
hlt
pop
cmp
sub
pop
out
fwait
mov
movsl
out
add
jne
xchg
push
inc
adc
frndint
nop
addr16
lret
xchg
jg
jg
inc
dec
shlb
fcomip
decl
jge
pop
rol
sub
cld
push
add
jo
jb
in
scas
mov
orl
inc
inc
pop
inc
cmp
pop
mov
out
cld
push
jg
xchg
fwait
lock
or
xchg
pop
fimuls
test
push
movsb
push
into
imul
outsl
sbbl
adc
xor
stos
jle
and
outsl
lods
clc
outsb
aas
push
and
dec
test
js
pop
je
ficoms
inc
imul
std
push
scas
or
mov
inc
dec
push
lods
nop
icebp
xchg
insl
outsb
cs
xor
jbe
dec
cmpsb
stc
imull
adc
sub
jp
mov
in
in
outsb
push
gs
or
push
xchg
call
inc
cwtl
xlat
inc
stos
arpl
ret
sub
clc
mov
push
test
jb
adc
aad
in
inc
scas
mov
les
shrl
fdiv
jbe
fwait
sbb
jecxz
xor
xor
mov
mov
mov
js
jne
pop
fsubrs
sub
fwait
or
add
mov
lods
lods
pop
testl
ss
in
lcall
mov
xor
imul
popf
out
in
sub
clc
scas
push
push
mov
lods
repnz
add
push
and
mov
sbb
arpl
bound
jle
cmpsl
lcall
cmp
push
or
scas
or
test
dec
mov
xor
or
mov
fcomi
mov
popa
ds
bound
testl
shll
andb
sub
pop
xchg
cmp
mov
sbb
mov
dec
xor
mov
inc
xor
jmp
sub
ja
lds
pushf
out
sahf
add
mov
aaa
push
push
and
roll
push
in
sbb
js
imul
mov
movsb
mov
adc
cmc
mov
out
aam
sub
fmuls
mov
icebp
adc
sub
pop
inc
test
mov
add
insb
push
fs
push
cmp
push
stos
hlt
mov
sti
lcall
jns
in
mov
icebp
adc
ss
mov
xchg
dec
pop
mull
mov
mov
in
mov
pop
push
xorb
test
or
addr16
mov
jecxz
ret
mov
xchg
push
sbbb
ss
cmp
test
cmp
pop
movsl
inc
fistpll
pop
mov
in
push
shl
xor
jnp
xor
icebp
jmp
ret
aam
jl
pop
jae
and
xchg
sbb
cmpb
ljmp
aad
and
pop
push
dec
cwtl
dec
and
mov
pop
int3
es
clc
pop
and
insl
popf
repnz
mov
fisttps
ss
push
adc
sahf
in
mov
loope
js
sahf
xor
sbb
lods
mov
repnz
aam
pop
rclb
sbb
mov
adc
jg
dec
xor
andnps
testl
mov
jnp
mov
or
pop
sbb
loopne
mov
dec
mov
enter
pushf
sub
sbb
lock
xor
pop
fdivs
sub
cmpsl
xchg
sysret
jl
mov
insb
popa
inc
sahf
and
out
neg
mov
cmpb
jl
mov
jecxz
cmp
scas
mov
lret
rclb
es
stc
gs
scas
lcall
mov
add
rcrl
add
and
loope
fcomps
jae
sub
lds
xchg
jnp
mov
ud0
xchg
fiaddl
mov
push
pop
jno
pop
loopne
xchg
movsb
mov
negl
mov
cli
in
scas
mov
mov
cmp
pop
stos
orb
xor
popa
imulb
setbe
repz
xor
mov
insl
nop
mov
testb
or
cmc
sub
mov
sub
dec
xor
out
aad
ret
bnd
jbe
stos
inc
je
test
jne
push
iret
add
je
jmp
insl
mov
rep
in
mov
pop
out
pop
jno
lock
jmp
lods
jbe
xchg
xor
inc
inc
test
lret
outsl
pop
in
push
bswap
add
sahf
in
sbb
sbb
xchg
std
cmc
ffree
ljmp
fwait
jg
mov
and
mov
loop
arpl
repnz
inc
jmp
int3
mov
in
ljmp
mov
arpl
mov
or
lds
out
andl
lea
add
movsl
std
sub
mov
fnstsw
stc
push
test
push
gs
cmp
jae
clc
mov
lods
pop
fdivp
lahf
adc
imul
aad
mov
push
in
push
fbstp
jno
fs
dec
mov
xor
jmp
lea
jno
repz
data16
jns
in
jle
inc
mov
pop
test
test
adc
xor
hlt
cmpsl
xchg
pop
popf
sbb
je
mov
cmp
and
sahf
outsl
and
push
cmp
jg
lahf
cmp
dec
andl
jmp
mov
mov
in
or
sahf
push
lock
push
mov
inc
hlt
sub
in
sti
pushf
cltd
shr
jl
mov
jbe
and
pop
mov
rcl
jnp
inc
mov
cltd
sahf
mov
fmul
addr16
sub
scas
mov
adc
push
add
push
stc
bound
jnp
cs
jbe
cmc
mov
daa
jne
xchg
mull
mov
lahf
xor
insl
shrl
pop
pop
inc
inc
xchg
mov
mov
ja
repnz
iret
cmp
imull
jno
popf
xchg
fs
push
pushf
je
jg
ja
xor
fcmove
push
cmp
adc
movsl
and
vcmppd
xor
in
rcll
adc
les
or
mov
cli
dec
xchg
xor
mov
data16
pop
stos
xor
xlat
mov
mov
mov
negb
pushf
loopne
ss
sbb
fdivs
push
popa
aam
es
cltd
lds
cwtl
aad
mov
inc
push
mov
fbld
jae
dec
aaa
inc
stos
movb
ret
mov
stos
or
push
out
int
inc
mov
test
fisttpl
sahf
sbb
sahf
in
or
pop
sbb
insl
mov
loope
dec
jno
or
daa
aad
das
sub
mov
mov
sub
adc
adcb
movsl
mov
pop
std
je
aas
stc
xchg
test
mov
test
cmp
test
ficoms
inc
adc
inc
cmp
ja
push
sbb
loop
fbld
repnz
lea
mov
icebp
xor
mov
add
lds
test
push
pop
out
mov
arpl
push
sbb
adcl
shrl
test
arpl
imul
aaa
dec
into
push
mov
add
lds
xchg
xchg
sub
inc
sbbl
mov
ret
ljmp
roll
or
fldenv
push
jl
xchg
mov
int
jnp
out
aad
in
int3
popa
inc
pop
cmc
xchg
sarb
xor
loope
out
aam
inc
sbbl
jp
jno
and
int
sub
rorl
pop
mov
cs
mov
roll
mov
rorb
inc
push
xchg
insb
repnz
cmc
cmp
cmpsl
movsb
jo
leave
push
cmpsb
icebp
fs
inc
xchg
sar
xor
leave
jl
mov
mov
icebp
cmc
xchg
into
fsubs
pop
jae
test
les
cmp
push
adc
xchg
cmpsb
mov
movsl
xor
add
inc
and
test
aaa
call
iret
popa
mov
lea
movsb
pop
mov
clc
mov
fildl
push
mov
xchg
push
mov
pop
pop
mov
outsl
insl
or
push
dec
push
xor
rorb
cmpsl
repz
jb
leave
fdivl
mov
push
cmp
dec
pop
fprem
xchg
push
pop
repnz
sbb
lea
dec
pop
call
pop
lret
add
in
loopnew,pn
mov
cmp
cmp
ljmp
adc
sahf
pop
add
dec
aas
icebp
shlb
cmp
mov
add
pushf
rolb
addr16
mov
repz
jbe
out
sbb
mov
bound
jae
inc
mov
pushf
push
insb
jns
data16
lea
sbb
out
addr16
popa
leave
aam
sbb
adc
pavgb
push
scas
fsubl
jnp
mov
mov
int3
cltd
ud1
xchg
icebp
mov
mov
push
xchg
lahf
push
mov
xor
pop
ss
outsl
out
adc
inc
jp
les
fidivrs
pusha
iret
call
mov
mov
fldcw
call
adc
and
divps
iret
push
mov
orb
cmpsb
test
xchg
arpl
xchg
mov
and
cmp
inc
out
ret
stos
cld
mov
lret
mov
adc
rep
or
mov
mov
imul
lods
test
inc
mov
mov
lods
hlt
cmp
push
cs
adc
imul
push
fdivr
push
lea
mov
jno
lahf
xlat
pop
adc
leave
inc
fimuls
sbb
fbstp
pusha
in
sub
xor
dec
add
jb
and
sub
sahf
pop
xchg
add
and
fisubs
adc
stc
insb
sub
pop
daa
aad
sarl
divb
dec
ret
xchg
shl
xchg
or
mov
pop
in
stos
jns
ret
mov
push
mov
push
rclb
lods
jno
inc
nop
es
insb
mov
push
mov
iret
mov
lahf
imull
popa
test
mov
lret
shr
mov
repnz
cmp
cmpsl
ret
outsb
test
cmp
cmc
fbld
jp
repz
repz
cmc
test
cmp
mov
pusha
je
or
mov
cwtl
jbe
lahf
loope
inc
out
xor
in
xchg
ret
fildl
xchg
xlat
inc
sub
data16
sbbb
sbb
iret
leave
xlat
js
aad
hlt
mov
sub
inc
push
add
sbb
sbb
inc
das
arpl
sbb
mov
pop
push
sbb
lahf
xor
enter
dec
stos
dec
pop
mov
scas
fdivrl
mov
sbb
push
std
push
inc
mov
call
ds
xchg
fninit
mov
outsb
out
pop
subl
ret
mov
cld
inc
pop
mov
inc
call
sub
mov
cmpsb
orb
inc
mov
xor
int
inc
lds
sar
leave
xchg
test
hlt
dec
shlb
push
inc
arpl
fadds
cwtl
push
mov
js
jmp
rorb
and
and
fisttpll
rclb
repz
mov
xlat
xchg
mov
aam
es
dec
xor
mov
cmp
or
xor
sbb
xchg
rcll
das
out
cmp
shlb
lret
dec
xchg
and
pop
pop
adc
xchg
cmpsb
pop
adc
xlat
repz
jge
cmp
mov
xchg
scas
sub
inc
pop
jp
pop
push
and
jge
in
lock
pop
sbb
pop
and
jnp
or
xor
inc
mov
imul
inc
sub
lods
sarl
insb
cmc
clc
in
into
insl
stos
jmp
repnz
mov
daa
mov
mov
loopne
pop
scas
fsubp
stos
sbb
mov
adc
pop
sbb
push
loopne
js
daa
data16
fisttpll
shll
dec
and
movsb
call
int
mov
xchg
or
repnz
scas
lret
loope
leave
jo
inc
cmp
jne
nop
pop
or
mov
push
push
mov
test
inc
inc
cmpsl
xchg
mov
dec
jl
int
nop
mov
push
jle
adc
dec
movq
stos
cmc
xor
xchg
insl
out
je
ficoms
mov
sbb
jo
mov
scas
mov
jl
stos
test
xchg
mov
and
sahf
dec
adc
nop
mov
cmp
cmp
push
adcl
sti
push
js
jmp
fidivrl
sbb
ljmp
xchg
test
or
or
jns
cmp
pop
sbb
daa
repnz
push
fisubl
enter
mov
xchg
mov
stc
push
jg
js
mov
popa
gs
xchg
cmc
arpl
jecxz
out
lret
push
inc
test
mov
shll
cmp
push
call
aam
pop
in
sub
xchg
jecxz
xchg
adc
mov
sahf
aaa
fidivrl
xchg
mov
sub
mov
pop
lds
adc
mov
xchg
inc
jns
nop
andl
gs
iret
ror
and
jae
out
mov
mov
stos
mov
mov
mov
or
or
das
xor
jp
push
mov
jnp
xchg
mov
stos
imul
pop
and
adc
ficoml
and
cmpsb
sub
shll
or
xchg
xor
fisttpl
add
pop
rclb
inc
lcall
jnp
xor
pop
movb
mov
ss
mov
jp
iret
sahf
or
push
daa
or
in
and
and
jb
mov
push
xchg
add
jp
shll
sbb
mov
dec
dec
mov
xchg
and
aas
jb
inc
or
cld
xchg
adc
stos
jl
inc
clc
je
dec
out
cmp
add
sbbl
inc
ja
push
mov
icebp
dec
enter
shll
fyl2xp1
ja
jae
dec
lret
adc
or
lds
add
es
dec
in
and
mov
push
gs
mov
ds
ljmp
mov
mov
xchg
popa
stos
inc
push
out
repz
dec
iret
psubsb
int3
lods
lahf
loope
xchg
dec
jnp
sub
sahf
jmp
dec
xchg
les
nop
mull
out
pop
mov
movsb
inc
push
or
sbb
pop
sub
xchg
sbb
arpl
inc
sub
aam
cltd
icebp
enter
cs
dec
mov
adc
jb
add
mov
decb
out
and
pop
andb
popa
popa
xchg
clc
orl
mov
add
xor
mov
adc
jg
iret
push
outsl
fwait
dec
push
push
cld
nop
mov
jmp
jl
pop
mov
xchg
mov
jle
jbe
pop
mov
icebp
cmp
pop
and
rcrl
js
data16
sbb
ljmp
int3
sarl
lods
in
outsb
pop
add
cmpsl
gs
mov
out
adc
mov
int3
or
sahf
push
and
push
add
add
mov
scas
adc
test
test
jmp
xor
dec
mov
jnp
gs
or
fildll
cltd
shrl
inc
mov
mov
or
jns
mov
mov
jecxz
cli
fbld
pop
pop
aas
sub
mov
stos
lods
inc
in
adc
cmp
sub
or
dec
xchg
das
ret
js
xlat
call
jmp
test
iret
or
push
inc
shrl
cmovs
cmp
in
or
cmpsl
mov
xor
xchg
sbb
push
data16
mov
xchg
and
inc
jecxz
insl
ds
out
mov
orb
jmp
inc
repnz
addr16
mov
addl
xor
pop
pop
ljmp
test
mov
jo
cmpsl
fnstcw
mov
fmuls
inc
xchg
dec
jg
and
in
xchg
sub
cld
inc
sahf
push
dec
xchg
xchg
xchg
push
jg
movsb
inc
lods
flds
lds
add
add
outsl
bound
lcall
shl
notb
leave
test
dec
mov
jns
mov
dec
mov
cltd
jb
aam
or
pop
xchg
sub
ret
fsub
and
sbb
cwtl
enter
mov
xchg
push
movsb
sbb
mov
xor
mov
ljmp
ja
or
fcomip
gs
out
lahf
int3
push
mov
aam
push
or
dec
std
lret
push
mov
mov
jl
pop
mov
mov
scas
jecxz
mov
jp
xchg
mov
in
and
aad
outsb
jb
mov
adc
clc
xchg
aaa
jnp
push
lret
cmp
in
adcb
mov
xor
and
xor
lods
aas
and
and
movsb
test
test
mov
mov
sti
sub
jecxz,pt
loopne
cld
leave
mov
icebp
jae
mov
int3
repnz
pop
fstp
pop
pop
mov
mov
test
pop
dec
loope
aam
adc
fcomp
imul
cwtl
fistl
hlt
les
sti
fcomp
pop
adc
sub
sub
and
shlb
mov
test
xchg
or
mov
pop
pop
xchg
les
sub
push
enter
and
stc
mov
xchg
add
icebp
stos
xor
std
adc
test
adc
stc
jge
jp
xor
arpl
enter
ficompl
jecxz
adc
cmp
rcr
sbb
sub
fs
fdivs
shl
rorb
pop
mov
mov
cld
aam
sub
add
and
les
adc
xor
rcll
push
adc
shlb
bound
ds
movsl
adc
mov
mov
sbb
jns
mov
add
adc
push
call
and
pop
sbb
pop
cvtps2pd
or
add
test
gs
mov
test
lods
sbb
adc
mov
add
mov
xorl
fwait
stos
pop
sti
imull
push
sahf
sub
dec
adc
scas
sbb
int3
js
into
cwtl
add
rcrb
sbb
jge
rorb
jo
mov
ss
push
push
mov
mov
inc
sub
xchg
mov
cwtl
lods
jge
pop
adc
pop
jbe
call
xor
xlat
pop
xchg
in
cmp
dec
cli
stc
push
pop
addps
dec
aaa
int3
xor
pop
test
loope
add
jbe
aas
dec
fcompl
orl
fisttpl
icebp
sarb
stc
aaa
pop
stos
xor
lock
and
mov
inc
push
cmpsb
sub
jnp
repnz
mov
daa
mov
cmp
fldpi
orl
icebp
in
cs
jecxz
bound
stos
in
jo
dec
call
sbb
mov
ds
mov
loopne
and
or
or
inc
lretw
push
jnp
es
cmp
and
imul
or
pop
lds
mov
stos
jge
or
xor
lret
and
inc
mov
movsb
sahf
rol
cltd
imul
pop
fimull
cmp
pop
lahf
ficomps
aaa
rclb
inc
xor
fnstcw
push
and
in
cwtl
add
scas
dec
icebp
xor
jmp
aas
imul
dec
jae
xchg
test
fcmovne
test
mov
scas
mov
kmovb
sub
mov
lret
enter
loop
xor
out
xchg
fimull
and
mov
adc
pop
jae
clc
idiv
hlt
sub
inc
dec
rcrl
loope
aam
ds
cmc
repz
nop
test
push
add
cmp
dec
mov
cwtl
andb
daa
pop
xor
mov
sub
or
js
adc
add
cmc
or
sub
in
out
inc
fs
stos
jae,pn
pusha
ret
add
jns
cmp
inc
cmpsw
mov
lods
mov
out
and
jmp
mov
sbb
ljmp
mov
movsl
leave
mov
jl
in
jno
clc
and
xlat
jo
jg
xchg
pushf
test
jae
pushf
stos
shl
mov
leave
push
xor
cld
jmp
pop
imul
and
mov
test
push
jnp
out
or
cli
push
fcmovnb
mov
aas
cmpl
xor
add
jmp
mov
out
andb
mov
aaa
push
lods
mov
xlat
sub
jmp
scas
sub
lock
rcl
xchg
pop
outsl
xor
aas
enter
xorl
mov
or
cmpl
sub
xchg
data16
mov
andb
sahf
mov
test
mov
in
mov
testl
sbb
pop
pop
push
jg
cmp
out
push
jo
push
mov
pop
xor
push
daa
add
xor
jmp
jecxz
pushf
mov
iret
adc
pop
mov
cs
addps
call
pop
mov
dec
in
pop
das
add
jbe
mov
push
fistps
adc
and
or
fnstsw
hlt
push
in
stos
mov
je
xchg
sbb
fidivl
push
orl
out
pop
mov
jae
pop
inc
push
push
cld
mov
cmp
popa
pop
pop
jne
out
adc
dec
cmpb
ret
sub
sbb
add
push
add
leave
push
mov
add
jp
cmpb
push
sbb
sarl
or
cmp
mov
mov
sbb
out
icebp
mov
movsl
cmc
cmpsl
iret
push
es
xchg
push
and
stos
sbb
cmpl
sbb
sub
lret
jl
stc
mov
dec
imul
add
daa
sbb
xchg
inc
or
or
test
sbb
cld
xor
mov
fistpll
movsl
int
cmp
adc
and
push
mov
dec
iret
icebp
nop
mov
add
mov
je
fmul
mov
jo
jl
repnz
push
cwtl
jge
mov
out
sub
mov
lret
push
shlb
mov
sub
cli
int
mov
movsl
mov
shr
push
add
add
push
cmp
mov
sti
mov
pop
int
out
les
sahf
jmp
xor
aam
sti
cli
and
loop
or
bound
movsb
lahf
dec
push
push
mov
scas
pop
pop
xchg
jg
dec
gs
sbb
addr16
aad
cmpsb
xor
push
icebp
fimuls
popw
aaa
add
xchg
sub
xsavec
add
adc
sbb
les
movsb
stos
imul
ror
aas
push
cmp
or
lcall
mov
data16
in
mov
rorb
xchg
imul
and
arpl
dec
push
inc
mov
fmull
jge
xchg
cmp
pushf
clc
adc
push
mov
xchg
mov
lret
push
xor
push
push
idiv
loop
push
jno
xor
cmp
scas
sbb
mov
mov
adc
inc
mov
and
repnz
testl
das
repz
sbbl
mov
push
in
inc
mov
mov
bound
xchg
ret
sub
lea
pop
mov
lea
adc
xchg
push
ds
and
jl
je
pusha
jmp
lret
pop
sbb
in
popa
dec
mov
pop
xor
stos
xor
ds
dec
mov
int3
cmp
mov
and
jns
push
jb
sub
pop
xor
dec
orb
pop
stos
iret
les
std
nop
mov
imulb
jp
or
addr16
ljmp
out
sbb
fists
repz
rorl
addr16
cmp
xchg
and
or
jp
mov
idivb
fs
pop
sbb
scas
out
push
ljmp
ret
stos
pop
movsb
inc
xlat
in
pop
scas
sbb
call
sahf
adc
add
loop
or
xchg
das
in
pop
in
into
and
ja
sbb
and
sbb
add
adc
jmp
mov
pop
push
cmpb
stos
add
jg
dec
loop
sahf
jnp
in
adc
sub
or
sub
pop
adc
add
bound
lret
jae,pn
pop
aas
add
xchg
aaa
icebp
shlb
jae
ss
fsubl
push
scas
push
movsl
push
sbb
sbb
mov
imul
jno
out
movsl
fucom
notb
mov
ss
andb
fisttps
dec
adc
cld
ja
gs
lods
bound
or
mov
push
mov
jb
testb
cwtl
push
int
call
js
movsl
arpl
and
sarb
andl
cld
and
and
sbb
or
enter
mov
sub
add
or
fwait
lret
pop
xor
xor
mov
adc
gs
je
sbb
loope
loope
inc
pop
mov
pop
sub
fnstcw
in
mov
xor
xchg
inc
push
push
int3
fs
dec
inc
lret
jmp
jb,pt
je
push
les
pushf
cltd
rcll
test
add
fsubs
pop
mov
cmp
iret
or
inc
mov
sbb
hlt
mov
sub
and
aam
and
test
stc
and
and
cmp
cwtl
jb
mov
jo
adc
xchg
mov
cmpsl
lock
add
xchg
leave
loopne
xor
repnz
loope
scas
imul
jl
mov
push
xor
imul
std
sub
subb
fldl
and
fiaddl
mov
repz
push
pop
xchg
lcall
push
std
cmpsb
sbbl
dec
mov
jns
ljmp
and
push
push
pop
mov
mov
cmc
negl
dec
mov
enter
pop
or
cmp
into
pop
push
cld
mov
cli
rcrl
or
mov
xchg
push
dec
pop
mov
lret
mov
rorl
into
mov
loopne
inc
jae
cmp
jb
mov
cli
aaa
push
sahf
in
pop
sub
dec
test
xchg
fadds
xchg
adc
sub
imul
ja
out
mov
sahf
leave
cmp
out
inc
add
mov
mov
lods
rcll
xchg
outsl
mov
arpl
popf
fstpt
subl
sbb
cmp
mov
shrb
sbb
pop
mov
dec
es
loop
mov
iret
mov
cmp
cmpsb
mov
xlat
lds
push
into
inc
inc
loop
cmpsl
sbb
mov
fcmovbe
rclb
or
xchg
xchg
dec
xor
pop
push
leave
sbb
sub
mov
push
loop
push
and
ja
mov
arpl
scas
mov
inc
int3
push
and
jns
xor
inc
jmp
or
sbb
cmp
movsb
cli
dec
cmp
xor
daa
fcomps
movsb
test
movsb
xor
dec
push
lea
addr16
sti
hlt
orb
inc
ja
and
xchg
mov
divl
mov
jmp
sarb
mov
cmpsb
test
daa
mov
fstl
jbe
pop
mov
popa
inc
fisttpl
push
mov
int3
mov
sbb
test
jl
or
adc
int
ret
shl
leave
mov
jle
in
mov
mov
out
insl
loope
filds
iret
lcall
popa
xchg
loope
fimull
insb
mov
adc
jle
pop
icebp
stos
jae
loope
les
pop
mov
lods
shl
loope
mov
ret
shll
cmp
es
icebp
movsb
jp
and
int3
andb
inc
cmp
sub
xchg
add
leave
jns
movsl
dec
insl
test
fsts
pop
cmc
in
sub
dec
shlb
orl
mov
aad
cmpsl
dec
cmp
int3
dec
pop
test
or
xor
mov
add
xchg
sub
out
aas
outsl
dec
bnd
push
adc
dec
xchg
xor
mov
inc
call
pushl
mov
aam
loope
cmp
aam
js,pn
push
sbb
lahf
inc
addr16
aad
push
fwait
inc
subl
and
xor
fidivrs
fstpt
lock
ret
les
iret
and
jae
scas
cmp
imul
insl
fldt
add
xchg
jge
sub
imul
rol
sbb
movsl
sarb
in
rcl
nop
push
ret
setne
fdivs
out
push
push
or
mov
ret
mov
jge
pop
test
fwait
mov
mov
sub
or
sub
mov
push
fnstsw
sub
fcomps
aam
fisubs
scas
and
sbb
xor
mov
add
fldt
jl
fs
push
test
adc
sbb
jge
sbbb
sbb
xchg
andb
mov
scas
cltd
dec
dec
xchg
fdivl
mov
rclb
mov
mov
les
test
cmp
xchg
add
xchg
inc
push
pushl
cmp
sub
psubq
cmc
lcall
adc
outsl
inc
pop
ja
out
scas
addb
dec
sbb
scas
adc
inc
adc
movsl
in
leave
popf
mov
xlat
add
mov
jae
es
push
enter
add
pusha
mov
cmpsb
sub
pusha
xchg
mov
lods
enter
mov
xchg
xor
push
xor
fisubl
std
fadds
cmp
sub
push
mov
fcoml
mov
mov
cmpsl
pop
arpl
nop
popf
mov
inc
repnz
add
and
mov
xor
clc
shlb
xchg
cwtl
sbb
mov
cmp
pop
mov
push
stc
mov
pop
push
sub
lea
jae
inc
fisubrl
cmp
data16
fcoms
es
jae,pt
inc
and
subl
outsb
jns
sub
mov
pop
or
stos
mov
addb
push
addr16
stos
jecxz
add
cld
adc
sbb
cwtl
aaa
les
fdivs
push
jbe
js
in
stc
mov
xchg
stc
les
into
dec
fisubl
inc
aaa
and
imul
jl
lret
sub
inc
shlb
imul
xor
mov
push
in
dec
push
unpckhps
cmp
add
enter
sahf
lcall
js
add
and
subb
or
iret
adc
dec
push
push
not
push
sub
or
or
mov
jecxz
aaa
mov
and
jmp
pop
gs
out
icebp
add
jl
mov
out
jnp
es
mov
addr16
push
enter
jmp
push
test
jecxz
lds
in
aaa
push
cmp
outsb
add
rorl
fs
push
xchg
push
outsl
pop
cwtl
xorb
jecxz
and
sbb
in
xor
int3
dec
xchg
fdivs
cmp
icebp
sub
cmp
lds
xchg
repz
inc
mov
gs
lods
mov
movsb
dec
pushfw
mov
sub
sar
rol
adc
mov
arpl
in
fstl
cmp
push
mov
aad
inc
and
insb
pop
push
das
pop
imul
xor
and
repnz
jmp
push
sub
leave
pop
roll
push
sub
cmp
cmpsl
inc
sbb
rcr
adc
jp
mov
push
jge
out
push
mov
inc
push
and
jnp
in
sar
adc
pop
and
popa
ret
roll
dec
mov
scas
pop
mov
jg
add
enter
cmp
jnp
mov
scas
xchg
mov
pusha
out
call
mov
push
test
cmp
jne
loope
fimull
xchg
mov
mov
xchg
sub
test
sub
cmp
inc
adc
mov
jbe
push
test
leave
loopne
out
sarl
sbb
push
jne
inc
sub
mov
sub
xchg
stc
lcall
js
or
sub
cs
inc
sbb
movsb
movsl
mov
jmp
mov
ds
xor
xchg
sbb
rcl
cmp
cmpl
mov
imul
mov
imul
outsl
sbb
dec
jecxz
mov
pop
into
stc
jo
filds
pop
adc
int
or
sbb
leave
imul
cmc
in
cwtl
mov
adc
pop
cli
outsl
xor
jae
in
adc
call
pop
inc
sbb
mov
mov
dec
adc
dec
lea
xchg
jecxz
and
push
mov
jg
mov
repnz
out
aam
in
or
dec
fwait
sub
sub
imul
dec
test
rol
int3
int3
mov
testb
iret
jp
dec
xchg
xor
add
inc
jb
add
and
in
lcall
cmp
mov
dec
adc
push
xor
xchg
cli
sbb
mov
jmp
lret
xor
mov
mov
dec
adc
adc
push
pop
addr16
pop
push
es
fidivl
loopne
shll
fnstenv
in
or
add
adc
mov
cs
ret
xchg
mov
dec
inc
rolb
data16
pop
add
imul
mov
loop
jg
loop
xchg
in
mov
pop
or
daa
xchg
mov
shrb
enter
jmp
or
nop
or
cs
shrl
lret
inc
sarl
pop
mov
cmc
loope
je
mov
ss
aam
js
incb
dec
mov
xchg
popa
in
scas
lret
fadd
das
int3
mov
lods
or
repnz
test
push
scas
cli
call
adc
sub
notb
pop
jns
xor
jp
xor
fsubrs
mov
rcrl
and
mov
jge
shll
pop
sahf
or
icebp
cmp
mov
jl
add
add
adc
cmp
mov
pop
cltd
mov
mov
xchg
ret
addl
and
std
rolb
adc
mov
or
fwait
ja
and
push
fdivrs
cmp
xchg
gs
cmp
jne
xchg
mov
stc
add
jb
inc
adc
adc
jmp
ds
js
ret
aad
sti
pusha
mov
arpl
pop
sbb
je
ljmp
and
mov
cld
mov
mov
and
rcl
mov
cltd
les
shrl
stc
mov
pop
ret
pop
loopne
mov
add
cltd
mov
mov
dec
mov
mov
push
and
push
aaa
dec
shr
addr16
mov
and
jecxz
bound
roll
arpl
bound
sbb
fsubrl
xor
pop
mov
add
ret
xchg
popl
or
sub
push
aad
inc
test
jl
mov
decl
out
je
loopne
or
jne
mov
adc
stos
ficomps
enter
sub
add
push
clc
xchg
pop
push
lahf
fiaddl
xor
sub
xchg
rcll
mov
lods
inc
in
cmc
push
mov
cmp
jo
jecxz
or
aaa
cmp
pop
push
mov
push
push
in
ret
js
fiadds
mov
push
xor
cli
in
in
mov
dec
inc
jno
dec
xchg
cmp
in
lods
mov
insl
mov
outsl
test
sub
stc
out
lock
or
rcl
push
cli
scas
pusha
inc
imul
pop
sbb
stc
add
and
push
bswap
add
xchg
test
arpl
fwait
adc
inc
push
mov
mov
shll
nop
dec
shrl
mov
subl
xchg
add
xchg
in
dec
pop
psubsb
pop
mov
stos
pop
lahf
into
pop
bound
test
mull
lret
scas
filds
mov
lret
loopne
icebp
mov
decl
add
test
push
popa
aam
add
fsts
lds
pop
push
add
daa
adc
subb
enter
xor
push
cld
fadd
lcall
xchg
clc
mov
jb
mov
or
data16
mov
stos
inc
into
and
in
fldlg2
sbb
mov
xchg
dec
adc
dec
mov
aaa
pop
push
mov
push
lret
xor
das
setns
dec
cltd
popa
mov
in
dec
mov
push
shrl
jb
call
xchg
add
in
jle
repz
aas
push
add
fs
lods
xor
lcall
std
mov
or
cmc
scas
jbe
push
push
jge
xchg
lret
jbe
out
xor
jno
pop
mov
movsl
pop
gs
into
lret
mov
call
bound
cmp
mov
xchg
dec
mov
xchg
inc
or
mov
fsubrl
xor
lret
xchg
arpl
mov
clc
js
fisubrs
cmpl
pop
loopne,pt
add
std
inc
push
cmp
sbb
push
mov
pop
lret
call
mov
int3
mov
and
dec
mov
pop
iret
arpl
sub
sub
sbb
jns
add
mov
enter
add
push
mov
mov
push
mov
dec
mov
and
pop
cmpsl
or
add
pop
add
push
mov
jp
dec
cmpsb
jmp
loope
out
xchg
inc
push
pop
jns
add
in
jl
loopw
add
jmp
dec
popf
enter
subb
movsl
inc
push
cs
sahf
inc
adc
lods
mov
xchg
dec
add
and
js
xchg
in
int3
dec
loopne
push
lock
pop
push
mov
movsb
or
fucom
mov
xchg
jo
lea
or
xchg
mov
test
xchg
dec
ret
lods
lret
jp
xchg
add
sarl
sbbw
arpl
das
xchg
add
sti
lods
mov
jecxz
push
dec
push
push
addr16
xchg
aam
push
mov
push
nop
mov
je
inc
cmp
out
or
scas
jno
negl
int
out
or
mov
cmc
test
sbb
mov
push
shll
add
add
test
sub
repz
mov
jnp
in
sbb
out
repnz
daa
iret
cmpsl
cmpsl
cli
andl
leave
int3
sahf
cmp
and
hlt
jno
jmp
xchg
je
mov
dec
xchg
xchg
les
and
mov
adc
mov
xchg
rep
orl
sbb
ds
add
js
mov
inc
dec
sub
pop
jl
repz
sbb
out
dec
mov
imulb
ret
xor
aaa
adc
inc
hlt
sbb
sbb
dec
jae
packuswb
mov
fisubs
into
cmp
push
popa
mov
je
push
or
xchg
or
jmp
gs
jge
lock
lret
outsb
popf
inc
xchg
sbb
scas
aas
push
cld
adc
mov
push
or
inc
push
dec
mov
adc
jg
or
rcrb
loope
dec
pushf
aas
or
adc
movsb
inc
test
leave
hlt
mov
stc
or
pop
bnd
sub
bound
adc
dec
enter
push
mov
xor
lret
or
pop
jns
in
stc
mov
enter
ss
mov
lahf
mov
xchg
popa
cmp
and
movsl
ss
push
jle
jle
ss
cmp
call
jl
cmpl
adc
add
rolw
bound
add
sub
iret
jnp
in
mov
loopne
popf
sbb
jl
fiaddl
jbe
add
xchg
sahf
cmp
sti
cli
mov
push
add
push
hlt
jno
es
incb
in
inc
xor
mov
mov
cmc
gs
faddp
outsb
push
pusha
mov
mov
mov
ret
gs
in
ret
inc
insl
add
shll
xchg
add
or
jle
in
push
mov
rol
out
incb
pop
cmp
das
or
xor
jbe
movsl
xor
jmp
jbe
ror
jne
mov
imull
push
pushf
jle
add
int3
dec
and
adc
inc
sub
push
xchg
adc
sti
mov
rorb
mov
pop
mov
mov
enter
lock
ljmp
fwait
fs
aaa
xchg
push
cmc
inc
push
mov
push
sub
ss
xchg
idivb
js
cwtl
pop
jnp
sbb
stos
cmp
sbb
addr16
loope
pusha
add
xor
jno
jo
ljmp
sahf
push
imul
mov
xchg
mov
jle
repnz
shrl
insl
mov
mov
inc
cmpsb
les
test
rcrl
fwait
aam
push
roll
pop
and
jge
leave
or
mov
inc
rcrl
sbb
push
stc
xchg
jl
cli
mov
or
mov
cld
ljmp
imul
loopne
sbb
out
mov
push
loope
daa
lds
push
xchg
pop
inc
dec
cmp
push
arpl
out
cli
mov
aaa
push
inc
pop
test
ds
push
cmp
out
cmp
enter
pop
ljmp
out
imul
pop
jmp
mov
icebp
dec
iret
mov
mov
cmpsl
mov
mov
dec
and
mov
test
fiaddl
rorb
jae
sbb
jbe
lods
sub
push
ret
cmp
mov
add
int
and
int3
cld
nop
and
pop
rcrb
std
pop
jecxz
sahf
sarb
xchg
and
pushl
xor
repnz
mov
xor
push
int3
in
cmp
pop
dec
nop
mov
jbe
scas
xchg
mov
cmp
icebp
dec
jl
pop
cwtl
push
popf
pop
adc
mov
jbe
cld
ss
hlt
sub
adc
push
lods
and
mov
mov
and
cmpsb
les
sub
js
xchg
and
push
aas
adc
sbb
and
add
xchg
xlat
push
arpl
test
xchg
imul
aaa
mov
mov
fstpl
insb
sbbl
dec
mov
add
popa
outsl
adc
loopne
add
xchg
sbb
mov
les
lcall
in
cli
cmpsl
mov
popa
and
xor
mov
cmpsb
jp
fiadds
push
adc
das
adc
mov
testl
loop
jecxz
pop
sub
xchg
mov
mov
lret
mov
dec
pop
lods
or
sbb
pop
cs
sub
mov
imul
add
fists
ret
cld
icebp
add
mov
shrl
adc
add
testl
mov
xchg
je
pop
jnp
mov
mov
test
push
xor
or
jnp
mov
loope
xchg
and
outsl
jmp
dec
lret
clc
ds
adc
ret
shl
mov
in
xor
fnstsw
popf
in
in
adc
push
xchg
sub
out
and
in
xorb
bswap
or
vaddsubps
les
cmpsb
cs
adc
shrl
lret
lret
or
jmp
test
add
sbb
lods
test
push
mov
mov
push
cmp
pop
repz
imul
pop
dec
int3
stos
fucomp
ds
imul
adc
add
test
fcompl
mov
cs
mov
lret
and
orb
call
arpl
fucomp
xchg
push
xor
xor
mov
ljmp
sbb
lock
divb
arpl
popf
rclb
arpl
and
ja
cmp
data16
cmp
arpl
jno
and
addr16
ficoml
fsts
les
aam
dec
cli
inc
sub
pop
add
sub
lcall
jnp
cmp
xor
lret
pop
cmpsl
into
fildll
dec
iret
andb
sbb
or
xor
dec
mov
mov
push
ljmp
nop
addb
mov
pop
std
out
push
lods
inc
out
fidivrl
jg
or
filds
pushf
cmp
rorl
or
jmp
shl
push
sub
mov
jne
stos
dec
repz
jmp
cmp
repz
iret
scas
jno
dec
pop
jmp
nop
mov
fisttps
stos
jp
in
cwtl
into
sahf
xchg
pop
pop
pop
lds
cwtl
loop
sbb
sub
std
sub
mov
cmp
outsl
in
sti
das
out
lods
popf
inc
push
xor
jmp
sti
aad
cmp
je
cmp
fcmovnb
sbb
jo
shrl
push
pop
adc
sahf
add
js
add
sub
jo
inc
lock
add
add
inc
lods
pop
insb
hlt
mov
and
ret
fs
jecxz
add
sub
jo
xchg
daa
and
shll
std
lock
push
arpl
pop
xlat
jecxz
inc
jp
out
xchg
int3
lods
and
in
loopne
push
loop
dec
das
push
and
icebp
fsubrl
inc
pop
imul
pop
dec
jmp
sbb
lahf
and
loopne
sbb
mov
xchg
jne
fs
mov
iret
jbe
cmp
lods
in
mov
jbe
push
pop
lret
xchg
lcall
mov
sti
mov
jbe
or
inc
push
mov
sbb
mov
addb
pop
lock
outsb
push
lods
icebp
jl
inc
ss
push
sti
addr16
popf
adc
ret
movsb
pusha
pop
sti
lret
mov
stos
je
into
ss
mov
orl
adc
or
mov
add
or
roll
xchg
xor
mov
xchg
cmp
pop
inc
sub
sbb
inc
enter
sbb
icebp
bswap
leave
fisttpll
dec
mov
scas
sub
cmpsl
cmp
inc
dec
sti
mov
in
ljmp
mov
add
inc
or
xchg
sahf
repnz
outsb
out
lock
cmp
data16
test
out
mov
xlat
jo
mov
or
div
xchg
add
dec
sub
int3
push
xchg
outsl
dec
jp
js
hlt
add
push
jl
jns
pop
add
pop
push
cli
aas
leave
es
or
sbb
pusha
repnz
and
sahf
fidivl
sbb
dec
add
loop
addr16
mov
push
mov
xchg
mov
and
cs
dec
fldenv
and
fnstenv
sbbl
push
push
idivb
imul
dec
xor
in
add
mov
popl
cltd
pop
ret
mov
jl
inc
xor
in
or
xchg
xchg
std
shr
cs
push
jmp
and
cmp
insb
sbb
ss
cmpsb
inc
inc
inc
sbb
push
fcomip
js
in
in
jg
xchg
clc
sub
inc
aaa
mov
mov
orl
cmpsb
fwait
ret
js
movsl
cmp
add
arpl
stos
clc
push
cmp
mov
mov
aam
pusha
mov
pop
ret
push
push
jle
addr16
pop
mov
retw
add
dec
mov
notb
adc
sub
movsl
push
lret
out
mov
or
mov
imulb
js
inc
sub
shll
mov
xor
lods
aaa
jnp
inc
inc
adc
xor
mov
mov
js
scas
je
push
lock
xor
sti
jecxz
and
push
ret
stc
aaa
sub
mov
add
in
movb
mov
mov
push
pop
mov
aad
pop
insb
and
fmul
repz
lods
popa
jl
fwait
mov
nop
sbb
dec
roll
push
push
lret
lret
daa
out
mov
dec
inc
inc
pop
clc
lds
mov
cmp
in
and
rorl
sbb
cmpsb
adc
cmpsb
sahf
sahf
mov
push
movsl
mov
lcall
pop
bound
xchg
jmp
movsw
cld
pop
mov
inc
in
ret
sbb
push
frstor
ja
and
xchg
push
in
cwtl
pop
cmovo
mov
insb
lds
jmp
jmp
aad
cmpsl
shlb
push
xchg
loopne
dec
mov
and
pop
and
mov
jle
arpl
cs
dec
adc
ss
daa
sbb
mov
cs
xchg
test
js
jp
pop
enter
jge
imul
xchg
adc
push
cs
add
shll
test
and
cmp
movsb
decl
jb
cmpsl
cltd
mov
hlt
mov
jmp
movsl
add
mov
push
push
ja
lahf
into
imul
dec
sti
stc
ffreep
jno
add
dec
dec
push
xor
xor
or
lret
scas
mov
xchg
add
test
mov
pop
iret
adc
jae
nop
and
xchg
push
leave
js
out
or
loopne
enter
jle
sub
jno
int
js
jg
jle
adc
push
es
add
lods
xor
push
leave
pop
xchg
and
jb
out
cmc
aad
aad
add
movsb
mov
lods
xchg
pop
inc
mov
stos
or
nop
clc
mov
jmp
mov
xchg
sbb
out
xchg
stc
lds
pop
scas
test
call
out
imul
movsb
jg
mov
shll
int3
stos
push
pop
gs
sbb
or
jns
sub
mov
in
popf
testl
and
sbb
and
fnstsw
ficompl
mov
mov
xor
ss
inc
xchg
rclb
xor
repz
pop
sbb
fstp
cmp
xchg
das
jae
sbb
mov
push
inc
scas
pop
inc
jecxz
mov
mov
xchg
out
movsl
xor
and
mov
fs
lret
les
mov
mov
sbb
xor
push
js
or
sti
outsl
stos
stos
sbb
enter
adc
lcall
lods
push
stc
push
fdivr
cmp
jmp
push
xor
pushf
test
sbb
fcoms
xchg
daa
or
roll
jp
repnz
out
inc
scas
loope
leave
lock
imul
dec
pop
in
xor
mov
xor
inc
cmc
cltd
sti
mov
ja
cmp
popf
push
sub
lret
inc
pop
sahf
js
int
repnz
mov
stos
or
sub
call
mov
adc
pop
jmp
dec
cmp
leave
out
lret
pop
xorl
movsl
inc
xchg
cwtl
adc
sarl
cmp
inc
mov
je
out
pop
mov
pop
jno
jb
rcrb
les
push
mov
inc
jmp
repnz
mov
or
gs
sbb
sub
pop
adc
lret
aaa
daa
pop
imul
adc
dec
mov
mov
push
dec
inc
push
out
arpl
test
fcoms
pop
movsl
add
adcl
push
ret
in
dec
jle
ljmp
call
into
push
adc
sbb
jno
lret
aad
mov
xor
jns
pop
leave
pop
cld
sub
hlt
je
hlt
in
faddp
adc
xchg
sbb
pop
lea
dec
andl
cmc
xor
bound
mov
lods
jnp
add
add
or
jge
shlb
adc
movsb
mov
pop
or
sbb
push
enter
inc
xor
test
sti
sbb
dec
xor
sub
jmp
jmp
call
mov
loopne
mov
dec
ret
mov
testb
cld
adc
pop
pop
popf
push
adc
sti
mov
cmpsb
pushf
nop
imulb
push
daa
cwtl
loop
mov
in
shl
xlat
repnz
mov
adcb
pop
testb
or
inc
mov
stc
pusha
sub
mov
cld
or
jne
push
jbe
stc
in
aad
nop
xor
inc
add
adc
mov
lahf
and
pushf
stc
gs
mov
mov
ljmp
addb
sbb
and
js
push
loopne
mov
cmc
jne
xchg
out
mov
sbb
pop
dec
jge
pop
pusha
push
lret
xchg
cld
mov
int
pop
dec
pop
jl
pop
push
ss
sub
inc
sub
mov
mov
daa
sbb
fcos
inc
into
cmpsb
inc
pusha
mov
xor
mov
sub
out
jp
loopne
jp
cmp
xlat
scas
cmp
sti
outsb
sbb
mov
mov
xor
pop
fldt
add
xor
sub
mov
jno
cmp
sbb
pop
jg
aam
jmp
enter
inc
mov
mov
aam
mov
sti
imul
mov
mov
out
outsl
mov
stos
jne
jge
stc
mov
sub
shl
or
or
inc
insb
mov
shlb
outsl
xchg
sbb
in
shlb
jl
cs
js
pop
in
ficomps
mov
xor
sahf
cmp
pop
ret
stos
mov
ret
xorb
push
mov
cs
ret
mov
call
movsl
xchg
sahf
or
std
std
push
ds
inc
adc
daa
push
jecxz
js
stc
ud2
cmpsl
cmp
sub
sub
movl
jp
inc
add
lock
enter
mov
pop
push
xor
lret
out
xor
mov
movsb
sbb
xor
push
add
pusha
or
cld
xor
inc
movsl
and
popa
xchg
mov
cli
ficoml
out
ja
movb
outsl
test
mov
cmpsl
fs
rcrb
sti
mov
aad
and
mov
mov
arpl
ret
mov
sbb
mov
shrl
fnstcw
fadds
fadds
xlat
and
and
push
sub
sub
sbb
test
jle
loope
rcl
clc
jnp
jb
adc
lods
rcrb
fbstp
pop
mov
out
js
dec
ss
mov
mov
aas
cmpb
cmp
cmc
fwait
push
jg
cmpsb
es
pop
incl
xor
cmp
push
mov
ja
adc
aad
jnp
pop
mov
pop
out
inc
mov
test
rcl
leave
mov
add
mov
rorb
sub
enter
addr16
cwtl
pop
cmp
shrl
test
add
push
inc
shl
jno
roll
lods
cmpsl
fists
int3
jns
int3
xor
add
outsl
dec
shlb
test
loope
xor
jbe
adc
xor
pop
xor
pop
sbb
lds
pop
out
dec
sbb
call
sbb
test
xor
cmp
cmc
xchg
aas
or
aaa
adc
jnp
clc
int3
imul
ror
cmp
adc
arpl
into
lods
push
iret
push
mov
xor
cmp
in
add
xchg
add
andl
inc
imul
adc
mov
imul
cmp
mov
in
xchg
cmp
inc
push
jg
mov
stos
jns
ss
pop
sahf
std
push
loope
dec
jle
sub
cmp
inc
and
sub
ret
imul
sbb
xchg
repz
cmp
dec
lret
popf
adcl
scas
add
push
stos
mov
daa
mov
les
cld
rcll
je
cmp
cmp
loope
adc
jp
mov
xor
lods
stos
shl
mov
jle
test
fisttpl
test
xchg
pushf
repz
push
mov
xor
or
in
jp
pop
push
int3
pop
popf
cmp
shr
enter
jmp
daa
dec
repnz
lret
mov
ret
or
pop
mov
lahf
jl
aad
popa
xchg
push
sti
inc
jae
xlat
ljmp
aaa
cmp
or
sbb
mov
sbbb
stos
aas
je
sbbl
xlat
jle
sub
cmp
and
in
push
lahf
daa
adcl
lret
sbb
fdivl
ss
push
popf
je
mov
rcrb
and
repz
dec
imul
add
ret
mov
jno
lds
jb
jmp
xor
ret
xor
sbb
lret
xor
in
fldz
mov
lock
sub
push
int3
mov
mov
lret
jno
xchg
in
pop
sti
adc
aas
dec
cld
cmp
sub
cmp
sub
inc
xchg
lods
sarl
jne
cltd
pop
pop
call
mov
ror
adc
pop
je
dec
add
mov
idivb
cltd
lds
test
lds
shl
mov
pop
in
inc
xor
in
js
adc
mov
jnp
push
mov
cmc
jo
cwtl
pop
out
loop
in
das
shll
repnz
outsl
js
cmc
loope
jbe
or
fidivrs
jb
ss
pop
orb
daa
pop
call
pop
cltd
jb
shll
shl
mov
sbb
call
push
mov
shlb
cwtl
cmp
pop
jmp
sbb
or
inc
fisttps
ss
in
addr16
fdivrl
mov
out
test
cmpsl
jo
fiadds
roll
cwtl
movsl
inc
push
lods
fcoms
scas
push
pop
and
sbb
das
inc
pushf
cmp
lods
xchg
add
mov
mov
clc
and
mov
sub
repz
cli
pop
clc
or
das
xchg
lret
cld
mov
scas
imul
mov
test
repnz
movsb
stos
and
cmp
xchg
push
push
loop
cmp
scas
add
xor
fstps
mov
aam
data16
push
pop
das
ret
mov
jbe
orb
fwait
rcr
cmp
inc
lea
xor
test
fdivrl
jb
pop
push
test
jne
and
jle
xchg
dec
test
xor
in
pushf
mov
push
xchg
sub
mov
xor
mov
popa
adc
pop
stc
sbb
inc
int3
cmp
xor
cltd
mov
jle
and
repnz
xlat
shrb
sub
push
push
test
mov
pop
es
outsb
xor
or
aam
jmp
lret
add
dec
inc
dec
mov
cwtl
mov
jae
movsl
cld
fwait
cmp
pop
push
and
std
leave
cmp
or
pop
mov
sub
add
in
std
dec
push
xor
xchg
in
sarl
push
cld
aam
sub
pop
ds
test
sbb
ja
jl
mov
mov
mov
cmp
fwait
inc
pop
mov
lea
mov
shrl
les
hlt
shl
pop
lods
test
cmpsl
mov
in
shll
sti
xlat
cmpsl
and
inc
dec
sub
jno
fcoml
cli
jnp
repz
nop
inc
mov
xorl
xchg
cld
xchg
mov
in
movsb
pop
hlt
test
movsb
test
jge
lea
cmpsl
iret
xor
jge
adc
ror
or
mov
pushf
in
inc
lret
jno
lods
cmpsb
or
pop
ret
inc
push
jae
jmp
jo
js
cmpsl
xor
push
xchg
in
mov
pop
loopne
nop
stos
addb
pop
pop
adc
add
hlt
scas
xlat
loope
out
push
sbb
or
mov
jge
cmc
pop
fcmovnb
ret
adc
push
ss
mov
mov
cmp
pushf
pop
mov
je
push
stos
pop
mov
not
xor
addb
xlat
insb
jp
push
insl
ret
sahf
and
std
ds
inc
push
and
lock
xchg
and
mov
add
js
and
stos
fmull
negl
sub
aad
pop
mov
cmp
lods
in
mov
mov
nop
mov
out
dec
pop
enter
popa
into
aas
push
mov
outsb
sub
fisubrs
or
lcall
jo
inc
push
aad
jne
insl
leave
outsl
rclb
pop
jno
sbb
or
cmp
insb
imul
xor
jno
jns
rorb
test
cmpsl
fidivs
adc
shlb
push
adc
jns
sub
pop
jae
or
arpl
test
sub
inc
outsb
mov
xor
es
repz
jae
test
test
outsl
ds
dec
aas
xchg
loope
xchg
fisttpl
in
test
dec
ror
pushl
adc
xchg
pop
adc
in
inc
push
cs
mov
cmc
sub
cmpsl
or
orl
adcb
mov
cmp
dec
popf
push
sbb
fstpl
lea
push
pop
cltd
mov
push
loop
push
movsl
and
mov
pop
stos
clc
mov
pop
xor
lods
push
adc
add
test
cmpsb
lcall
fadd
dec
jo
in
das
rcrl
negl
stos
sub
loop
stc
dec
adc
pop
je
mov
gs
insb
pusha
mov
std
push
pop
sub
clc
pop
jg
fdivr
inc
inc
xchg
iret
lcall
xchg
push
xchg
push
xchg
jbe
cmp
out
scas
aam
inc
pop
sarl
xor
fimuls
cld
xor
arpl
cmpl
dec
xorb
jbe
stc
lods
les
jl
fisubs
pop
in
xchg
add
adc
stos
and
mov
mov
mov
cmpsb
ja
std
dec
pop
ret
add
movsb
fimull
mov
mov
aaa
std
cmp
push
jg
aad
or
cmp
inc
mov
pop
imul
shll
lret
push
jne
push
pop
fidivs
jb
pop
insb
leave
mov
das
pmulhuw
cmpsb
fidivrs
mov
mov
xchg
sub
enter
iret
xor
std
xor
in
sbb
popf
pop
aas
fcmovbe
mov
inc
js
xchg
pushf
out
enter
jb
xchg
arpl
dec
pop
adc
scas
xlat
push
fs
imul
shr
xor
test
cltd
mov
bound
lahf
dec
or
inc
hlt
jne
clc
cmp
aam
or
dec
push
jp
fwait
inc
xchg
lahf
lds
insl
pop
fscale
jl
sub
xchg
push
dec
or
out
mov
fistl
fldcw
mov
xchg
add
insb
std
mov
adc
mov
outsl
sub
inc
dec
pop
mov
and
out
lds
xchg
cmp
push
cmpsb
andl
icebp
jnp
cltd
jge
aas
lea
imul
jecxz
jecxz
sub
das
mov
call
imul
ret
or
xchg
scas
bound
add
mov
mov
sub
in
mov
cmp
xor
xor
mov
add
or
cwtl
movntq
int3
fdivrs
sbb
jae
enter
pop
in
sbb
xor
iret
mov
and
cmp
repz
jge
xchg
and
jg
fsubrs
and
rorl
xchg
testl
mov
and
into
movlps
xchg
stc
mov
scas
stc
add
push
push
push
in
adc
push
cwtl
sub
add
stos
mull
movsb
cltd
pop
lahf
lods
cli
adc
out
push
ret
insb
pop
mov
mov
je
cmpl
pop
inc
mov
adc
das
jne
data16
out
fistpll
xchg
pusha
sbb
fdivr
push
jb
mov
sub
xor
cmpsb
xor
xor
enter
sbb
adc
mov
mov
add
mov
addr16
pop
fildl
push
cmp
and
cmc
or
fcoml
mov
in
add
fadds
cmp
cmc
ret
xor
cmp
les
outsl
and
test
arpl
or
inc
jle
aad
pop
pop
sbb
or
les
lods
cmpsb
aaa
dec
dec
pusha
dec
aaa
mov
iret
sahf
stos
aam
into
xor
pop
loope
pushf
push
mov
mov
in
scas
arpl
in
or
jmp
loope
xchg
push
mov
fs
cmp
jns
sub
pop
fwait
and
sbb
dec
cltd
out
xor
out
stos
js
pop
loop
adc
dec
sahf
ret
out
movsb
arpl
lods
cmp
push
push
and
sti
mov
push
icebp
ss
push
jne
bound
loop
sbb
pop
dec
sti
call
into
imul
or
inc
out
lea
leave
sub
sar
jecxz
xor
cli
jmp
and
pop
shrb
lods
lret
popf
test
or
rcll
mov
pop
and
lcall
inc
sbb
in
xorb
adc
push
mov
sahf
std
jl
lret
inc
out
fmul
iret
lcall
jg
outsb
lds
dec
outsb
int
lods
add
fnstenv
xor
int3
adc
testb
fistpl
xchg
xor
push
test
ljmp
adcl
xchg
in
loope
jbe
or
inc
enter
rol
xor
mov
mov
and
sub
or
loope
xchg
dec
mov
push
hlt
inc
dec
cmp
mov
mov
test
add
push
imul
xor
sahf
incl
push
ficoml
push
cld
sub
lret
js
cs
xor
js
push
mov
ss
xor
jg
jecxz
leave
jmp
pop
sti
outsl
movsl
xor
test
pop
add
dec
fistpll
inc
cs
dec
sar
repz
outsb
enter
imul
and
xor
fldl
or
les
orb
insb
ret
add
mov
jo
loop
cltd
fsts
xor
lahf
stos
sub
or
cmc
fcompl
out
mov
dec
sbbl
adc
rorb
insl
lret
push
add
fildll
jp
xor
cmp
cli
or
roll
aaa
mov
out
js
jl
jns
or
daa
mov
or
pop
dec
imul
dec
loope
pop
in
xor
stc
dec
pop
cmp
nop
pop
pop
mov
push
cs
pop
adc
rorl
push
andl
mov
mov
or
adc
add
movsb
inc
insl
and
sbb
repnz
ret
adc
dec
dec
jge
xchg
or
pushf
leave
leave
adc
xor
mov
cmp
call
adc
dec
inc
mov
sar
mov
lret
sbb
mov
mov
test
push
in
pop
dec
movsb
sbb
xchg
push
xlat
stos
rclb
rclb
scas
aas
jge
aaa
imul
cmp
repz
and
es
jo
jnp
xor
sbb
xchg
fiaddl
test
sbb
mov
popf
inc
shlb
pop
add
leave
push
push
int
mov
imull
cmc
add
daa
adcl
mov
cmp
mov
xchg
pop
dec
fwait
add
mov
pop
repnz
pop
pop
push
mov
xor
out
lods
add
and
jecxz
cltd
jg
lret
dec
add
adc
cmpsb
stc
enter
sub
cmp
jb
cld
daa
lds
rorl
in
out
jne
outsb
sub
ss
mov
rorl
scas
xor
shll
aas
test
imul
loop
push
pop
cmp
xor
xorb
scas
mov
pop
sub
rorl
loope
inc
leave
jo
test
adc
addr16
sbb
mov
push
js
adc
inc
pop
xchg
pushf
filds
xor
fcmovu
inc
loope
and
mov
mov
pusha
mov
cmp
repnz
and
jg
sahf
mov
xor
cmp
pop
sbb
imul
or
push
stos
dec
cld
ljmp
imul
fst
mov
sbb
leave
inc
mov
or
cld
int3
inc
mov
rcrb
xchg
idiv
inc
lds
lcall
mov
mov
test
ljmp
leave
ret
mov
shl
fwait
jecxz
out
scas
and
jb
popf
test
sub
sub
mov
inc
mov
je
sub
xchg
movzbl
cmp
loopne
xchg
mov
pop
data16
insb
in
sub
pop
dec
shll
sub
add
adc
out
xlat
in
cmpl
loope
lea
test
cmp
aaa
lea
icebp
loop
loope
das
mov
movsb
sarb
addr16
lods
loope
pop
enter
xchg
dec
sahf
mov
xor
enter
fiaddl
sbb
mov
jecxz
nop
dec
xor
jbe
fucomi
je
in
negb
repz
adc
dec
or
push
dec
daa
mov
mov
or
arpl
ds
mov
jg
pop
pop
dec
push
cmpsl
addr16
dec
std
or
out
mov
sub
sbb
adc
jmp
sahf
loopne
negl
das
sbb
das
and
aas
std
gs
mov
out
jb
pop
jecxz
outsb
icebp
stos
push
mov
pop
cmp
pusha
inc
xchg
dec
imulb
inc
out
inc
xor
push
push
andb
or
fidivl
jp
sub
push
mov
mov
add
ds
sti
lock
dec
mov
rcl
mov
mov
cmp
jne
inc
dec
sbb
insb
in
mov
dec
sahf
fsubs
and
inc
loopne
push
fwait
sbb
stos
mov
sub
mov
loop
xchg
arpl
lret
subb
mov
adc
mov
outsl
xor
push
nop
inc
push
xor
jle
les
jb
push
and
add
mov
gs
ja
scas
mov
sbb
jae
mov
jge
hlt
cmp
fcmovnb
xlat
push
movsb
jae
outsl
aas
xchg
pushf
push
mov
xchg
lahf
subb
es
and
lds
das
adc
fwait
mov
jmp
loop
jecxz
jg
dec
push
or
bound
cmp
mov
adc
fdivr
or
add
push
imul
sub
jb
out
imul
sub
xchg
cltd
fstpl
mov
fnstenv
imul
or
clc
and
es
lods
sub
mov
cld
adc
int
adc
mov
icebp
dec
paddw
stos
sarl
mov
cltd
fcoml
and
cmp
insl
sbb
addr16
push
inc
negb
mov
and
mov
xchg
rorl
add
cmp
adcl
fisttps
xchg
push
xchg
js
nop
xchg
pop
and
inc
cmp
imul
jmp
gs
xor
sbb
cmpb
and
ret
xchg
mov
enter
fsub
pop
mov
pop
push
fcmovne
jecxz
popf
cwtl
mov
leave
mov
das
gs
mov
cmp
data16
cmp
and
inc
es
cmp
fcmovnbe
outsb
adcl
daa
or
cli
mov
push
cmp
adc
imul
inc
lock
xor
repz
enter
lods
cs
test
cmpsl
int
adc
int3
xorb
mov
xchg
in
or
pop
and
gs
icebp
or
scas
shr
xor
inc
call
shr
push
cmp
repz
jb
add
lock
test
es
cli
mov
jge
xchg
dec
or
inc
popf
push
pushf
loop
sarb
xor
imul
lods
mov
or
leave
outsl
popf
aaa
fs
repnz
or
mov
xchg
dec
popa
sbb
jle
mov
mov
ret
ss
xor
inc
sbb
ja
add
les
daa
jb
or
ds
fldenv
jle
jmp
pop
loop
xchg
add
les
mov
out
adc
popa
std
fiadds
xchg
popa
mov
cmp
dec
loop
mov
stos
xor
aam
sahf
aas
pop
mov
aas
notb
or
xchg
mov
mov
mov
lcall
in
gs
loopne
xchg
sub
mov
test
jl
lea
dec
fdivl
into
lret
dec
bound
mov
mov
sahf
mov
andb
mov
cmp
inc
lods
xor
inc
mov
mov
mov
aam
mov
mov
mov
dec
ja
inc
out
andb
stos
out
shlb
push
and
pop
jbe
xor
movsl
dec
dec
mov
hlt
adc
popa
jp
mov
dec
fcompl
pushf
dec
jmp
mov
jnp
aaa
hlt
insl
clc
in
dec
dec
adc
mov
mov
dec
cmc
into
sub
rcl
movsl
flds
popa
shrb
test
int
fs
dec
outsl
outsb
pop
mov
mov
xor
lahf
pusha
pop
enter
out
scas
mov
repnz
mov
adc
fidivrl
test
mov
mov
loop
jno
enter
push
xchg
mov
jbe
stc
ret
call
jge
ja
sbb
dec
sbb
cmp
mov
outsb
push
insl
cmc
mov
dec
xchg
adcl
push
or
call
pushf
mov
movsb
or
or
fdivp
sub
jae
mov
aas
shrl
movsl
and
push
mov
sti
ja
rolb
mov
sub
pop
push
cmpl
rclb
push
sub
mov
iret
inc
popf
decb
add
lret
loopne
and
cmp
ret
hlt
fldenv
and
loope
push
je
cld
sub
cmc
adc
fldz
dec
in
inc
pop
inc
xchg
add
rcrb
lret
fmuls
push
inc
lea
push
xchg
cld
pop
jae
adc
push
lcall
test
inc
xchg
shlb
mull
lret
fwait
push
push
ss
sub
and
mov
add
sbb
ds
loope
pushf
fistl
subb
inc
lret
add
sti
shlb
push
pop
cld
loopne
mov
xchg
insl
in
jno
jp
loop
and
imulb
sub
movsb
test
mov
dec
xchg
dec
fdivrp
adc
inc
dec
test
in
xchg
fistpll
pop
int3
js
cld
xchg
out
dec
or
and
xor
cli
add
cld
dec
rolb
push
sarb
cli
or
push
sub
cmpsb
mov
mov
mov
rorl
xor
lock
aad
jae
rclb
cmp
mov
or
mov
push
jl
aaa
pop
mov
push
mov
ret
adc
bnd
movsb
psubb
mov
out
and
sub
dec
dec
repz
jmp
les
pushf
inc
mov
js
les
scas
jg
add
lods
sub
add
test
xchg
xor
add
lret
stc
xor
add
xchg
or
xchg
add
movsb
mov
sub
xor
int3
xchg
pop
mov
rdmsr
scas
cmp
addr16
mov
push
bound
fcoms
adc
fildll
ret
or
lret
in
daa
cmpsl
jle
and
cmp
int3
fsubrs
cmpsb
jb
test
enter
adcb
mov
inc
adc
sub
jg
iret
daa
es
xchg
jmp
movsl
xor
cmpsb
daa
repnz
stos
test
xchg
movsl
add
push
mov
cmp
fisubs
out
fwait
xor
imul
xor
imul
push
stos
sbbb
repz
repnz
pop
fmulp
or
imul
push
in
sbb
or
mov
sbb
icebp
leave
ret
sbb
inc
pop
push
and
sbb
jb
jmp
sub
lods
mov
add
push
push
mov
mov
into
mov
and
pop
jmp
cmp
mov
adc
push
pop
loope
jbe
dec
enter
xor
xchg
and
in
in
out
adc
popf
adc
ljmp
pop
mov
mov
mov
cmpl
fcoms
jo
jns
cmp
rcrl
add
push
dec
pushf
pop
xchg
out
add
xchg
jmp
pop
pusha
jmp
lahf
jo
xor
inc
adc
mov
in
imul
pop
jno
scas
nop
xchg
mov
int3
push
ret
cwtl
jb
mov
cld
lock
psadbw
sub
test
out
jg,pn
pop
shll
je
add
ss
outsb
addr16
orb
jbe
sub
mov
std
push
sbb
shrb
aaa
scas
addb
fs
popa
or
dec
pop
call
mov
mov
scas
lods
pop
stos
aaa
xorl
cmc
xlat
xor
xchg
lods
jle
cmp
in
insl
xchg
ljmp
out
and
mov
ret
sbb
jge
lods
mov
mov
cmp
push
jns
ja
shll
adc
ret
cmpsb
cmpsb
icebp
lods
inc
daa
dec
ret
adc
jnp
cmpsb
fwait
inc
clc
aaa
shrb
mov
adc
lock
mov
aaa
dec
fidivrl
lahf
imul
xchg
hlt
loope
inc
mov
jnp
or
mov
cltd
jno
dec
int3
dec
std
nop
dec
sbb
imul
and
pop
and
adc
pop
shlb
push
or
ljmp
push
jb
mov
or
mov
in
rcr
mov
add
push
dec
dec
sti
ret
dec
add
push
ret
mov
push
xlat
test
add
out
sub
cmp
push
adcb
cmpsb
fidivrs
jmp
jge
imul
cmp
enter
clc
mov
std
daa
popl
mov
push
pushf
xchg
and
add
or
inc
lret
mov
and
lcall
je
add
loop
lds
dec
dec
pop
in
outsl
jg
and
xchg
cmp
mov
das
xchg
repnz
or
pop
outsl
mov
xor
out
mov
in
fwait
les
testb
jno
xchg
xchg
push
aad
or
fildll
mov
js
bound
enter
cmp
sbb
dec
add
jno
cmp
and
xchg
cmp
in
jecxz
jno
aas
stos
test
push
popf
test
divl
push
jp
pusha
lods
scas
dec
mov
push
cmc
pop
mov
sbb
sbbb
sarl
mov
popf
scas
cltd
arpl
and
sub
ret
fcompl
mov
imul
mov
sbb
pop
lahf
xchg
push
mov
mov
add
xchg
shlb
mov
adc
ja
cmc
mov
fstl
fs
outsl
xor
mov
ja
imulb
pop
cmp
aam
fxch
stos
sub
add
mov
fistpl
sti
lcall
sahf
or
jmp
or
dec
sub
test
mov
add
pop
sarb
arpl
out
xchg
fldcw
out
push
imul
xor
ljmp
mov
dec
pop
lods
xor
into
adc
loop
cmp
mov
out
fidivrs
inc
xor
mov
cmp
mov
sbb
xor
pop
lcall
push
sbb
out
outsb
sub
and
jae
fistpl
test
test
jb
mov
dec
push
repz
shll
test
ds
mov
stc
lea
sarb
popf
jl
jne
lea
mov
pop
push
xchg
lods
fbstp
je
mov
inc
icebp
test
fidivs
pop
lcall
jecxz
inc
data16
xchg
cmpsb
pop
or
or
or
lock
push
push
ja
dec
icebp
jle
mov
sub
xor
shrb
fisubrl
push
add
stos
add
and
not
jecxz
jg
xchg
in
inc
jge
mov
fistl
sahf
mov
lret
imul
cltd
lahf
lock
jns
sub
jle
pushf
cld
aaa
push
and
push
pop
dec
and
dec
cli
dec
rcll
mulb
sub
pushf
or
aaa
and
push
push
dec
lret
or
mov
jnp
dec
fisttpll
pusha
mov
push
adc
int
pop
mov
outsb
mov
scas
cmc
mov
adc
jl
ret
mov
mull
stos
mov
pop
shlb
mov
xchg
dec
jl
stos
icebp
sbb
sub
fwait
movsb
imul
std
sar
and
inc
xor
and
pop
or
fmull
adc
fldl
xchg
xor
sahf
das
xor
loop
jns
mov
mov
push
notl
fs
add
sub
pop
cmp
leave
jb
jge
cld
cmc
sub
mov
in
adc
mov
aam
sub
fnsave
lock
mov
mov
pop
add
dec
sub
jecxz
inc
fs
jo
and
negb
xchg
div
jno
cmp
inc
fstpt
mov
sub
xor
xchg
ret
cmpsl
mov
push
stos
xchg
into
inc
insb
push
leave
adc
xchg
fnstcw
mov
jle
and
cmp
sub
cmpl
dec
call
fdivl
mov
cmp
jne
jne
pop
or
ret
jno
mov
loopne
cmpsb
jb
arpl
push
insb
leave
inc
push
lds
dec
lcall
pop
mov
adc
lret
pop
imul
pop
out
hlt
push
xor
lock
and
jl
or
sbb
sbbb
fiaddl
outsb
mov
push
in
aad
and
add
xchg
xor
test
mov
out
mov
fnsave
add
cmc
push
imul
out
and
pop
std
adc
and
rolb
mov
push
xlat
insl
push
and
xlat
lods
mov
xlat
add
xor
and
jmp
mov
out
dec
fistpll
shlb
xchg
mov
xchg
and
mov
dec
dec
pop
ficomps
lods
xchg
cmpsl
push
adc
mov
pop
cmp
push
cmp
jmp
mov
xchg
es
mov
and
push
test
cli
lret
xchg
lds
cmp
mov
cmp
out
push
add
adc
rcrb
mov
lock
test
and
cmpsl
sub
fistl
mov
inc
push
ss
test
jne
mov
psllq
fnstsw
inc
je
mov
jp
ss
jg
or
es
cmp
sub
jno
imul
shrl
cwtl
adc
rcrl
pop
sub
stos
iret
addr16
popa
aam
test
sub
lahf
leave
js
andl
mov
mov
mov
sub
sbb
xor
inc
stc
mov
cmc
cmpsb
pusha
pushf
xlat
and
cs
inc
add
and
inc
fucomi
outsl
les
dec
xchg
cmp
lret
adc
out
push
addr16
xor
cmp
sti
xorb
add
psubusw
sbb
xor
pop
lods
xor
imul
fnstsw
and
rcl
sub
mov
pop
test
ja
daa
int3
fists
pop
into
cmpl
mov
mov
push
mov
sub
sub
nop
xor
fldt
data16
scas
xor
scas
outsl
jmp
pushf
pop
push
iret
dec
lahf
bound
repnz
imull
mov
sahf
push
sbb
mov
dec
jnp
adc
pop
xor
mov
aaa
lods
pop
loope
and
into
mov
cmpsb
loop
or
inc
cld
mov
mov
lock
pop
pop
pop
mov
iret
sub
push
les
lds
add
out
movsb
fisttpll
call
fwait
cmpsb
adc
cmp
add
test
dec
shl
daa
adc
movsb
outsl
jge
insb
xorl
outsl
lret
test
stos
popf
and
std
std
test
mov
iret
mov
cmp
sub
je
xor
cmp
pop
jl
jge
imul
popa
shlb
icebp
mov
out
ud2
cmp
and
aad
outsl
setg
daa
xchg
or
leave
pop
leave
xor
dec
and
add
pop
clc
xchg
jne
movsb
dec
sbb
mov
outsb
push
pop
mov
xchg
out
fpatan
lods
lock
mov
adc
movsb
push
add
xchg
and
cmp
jno
cs
adc
pop
dec
inc
aaa
mov
hlt
fmuls
sti
fistpl
in
mov
cmp
dec
and
pop
outsb
fbstp
pusha
fidivs
push
xchg
add
sub
movsb
pop
sub
xor
jns
dec
fsub
cld
xor
xor
jp
inc
lea
xor
popa
fisubrl
cli
pop
stos
pusha
mov
mov
mov
pushf
pop
add
int
xor
push
mov
adc
aas
sub
pop
inc
mov
int3
lods
cmp
dec
ds
stc
push
push
dec
mov
add
xchg
mov
or
push
dec
jge
mov
jmp
jecxz
or
add
pop
aad
out
or
mov
fucom
nop
mov
clc
ljmp
aam
mov
mov
imul
mov
xor
inc
xchg
cltd
mov
add
push
divl
xor
push
pop
push
mov
popa
mov
jl
or
sub
nop
add
repz
jge
jge
out
xchg
mov
mov
mov
pop
cmp
dec
cmpsb
jb
imul
scas
icebp
push
cs
ret
pop
int3
sub
les
std
pop
fimull
xchg
fnstcw
xor
mov
xchg
push
add
fisttpll
sbb
adc
notb
xchg
fisttpll
add
push
roll
or
out
jo
jmp
out
lock
fnsave
movsl
and
rol
rorl
sahf
lcall
stos
aaa
in
aaa
int3
loope
es
ror
mov
ret
mov
fnstsw
out
mov
fmuls
xchg
mov
jne
stos
in
lcall
mov
std
cmp
bound
stos
mov
and
je
add
mov
popa
adcl
in
inc
divl
adc
daa
push
mov
mov
aam
push
sub
bnd
sub
roll
pop
fbstp
adc
clc
mov
add
adc
test
adc
push
dec
ret
cs
out
dec
lea
int3
dec
pop
adc
scas
xchg
dec
mov
cmp
bswap
adc
sti
inc
out
imul
adcl
hlt
mov
lds
push
sbb
mov
loopne
pop
and
mov
sub
in
push
sub
dec
lods
mov
cmpsb
fistpll
mov
or
call
xchg
fyl2x
mov
or
daa
push
scas
cli
dec
push
inc
dec
sti
xor
ljmp
repz
push
add
cmp
cs
mov
mov
test
dec
push
ss
cs
addr16
push
call
pop
pop
xchg
fidivs
inc
dec
mov
or
repz
loopne
xlat
adc
pop
ljmp
mov
out
sbb
jbe
stc
dec
movsl
sbb
fnstsw
aaa
jae
or
int
xor
sub
or
pop
insb
stos
test
jnp
xchg
mov
mov
stc
mul
fwait
stos
jmp
in
xchg
out
adc
fidivrs
push
or
push
aam
mov
cltd
lret
sub
xor
por
cs
inc
or
and
pop
das
cmpl
or
andl
and
cs
rolb
fdivl
call
fmuls
repnz
out
std
push
dec
bound
or
xor
sbb
outsl
and
movsl
xchg
sti
sub
push
xor
in
movsl
cmp
lcall
push
mov
pop
les
xchg
out
cmp
mov
dec
shl
mov
mov
jg
pop
nop
jp
negl
cmp
push
mov
push
sarl
ficomps
out
mov
dec
add
lcall
xchg
adc
fs
cmc
les
mov
sub
push
and
jne
ja
xor
mov
mov
jg
pop
data16
sub
jns
mov
adc
loop
inc
cli
dec
ret
fwait
mov
sbb
xchg
mov
shlb
push
inc
dec
pop
adc
pusha
jecxz
cmp
xchg
fcomps
call
jle
mov
inc
incl
fucom
cmc
inc
rcll
jnp
and
call
and
in
xchg
aad
nop
icebp
dec
sub
sets
mov
mov
std
xchg
xchg
sbb
jae
scas
xor
mov
lahf
in
sub
pop
mov
in
add
mov
or
push
xor
int3
adc
lods
imul
inc
mov
movsl
loope
cmc
or
lcall
dec
jg
popaw
xlat
pop
leave
and
rcrl
addr16
sbbl
pop
scas
xchg
imul
or
fnstcw
or
adc
aad
xor
stos
jecxz
stc
ljmp
mov
movsb
lea
mov
xchg
xchg
shlb
push
sbb
hlt
cmp
mov
sarl
mov
dec
push
and
mov
lods
in
cmp
mov
out
cli
test
fst
pop
aad
dec
sbb
nop
stos
pop
rol
jmp
in
ret
mov
inc
xchg
jb
xchg
sub
add
xchg
aas
lcall
dec
sti
adc
fwait
sbb
jb
or
fs
pushf
ja
push
cmp
jge
rcrl
pushf
jg
dec
cmpl
add
cmp
movsl
daa
cmp
je
mov
fldt
xchg
int3
cwtl
dec
adc
test
or
dec
push
lea
adc
cmp
sbb
call
pop
push
jo
dec
js
orl
cmc
rcrl
cmp
fiadds
outsb
std
sbb
adc
ret
inc
mov
cmp
cmp
dec
push
adc
xchg
or
mov
ljmp
int3
add
cmc
test
cli
jno
fsubp
arpl
or
insl
push
sbb
ror
push
ljmp
cli
mov
les
fsubrl
sbb
sub
inc
aad
scas
and
add
pop
pop
adc
dec
lcall
inc
fistpll
jge
arpl
inc
pop
sbb
orb
adc
xor
xchg
cli
sti
cmp
call
xor
push
cltd
gs
std
push
outsl
or
cmp
notl
add
pushf
mov
inc
out
xchg
ret
lahf
push
pop
jle
test
movsl
sbb
lret
mov
fnstenv
push
jno
mov
jle
test
mov
ja
jmp
es
popf
dec
jno
lahf
mov
cmp
pusha
addl
mov
or
fistpl
xor
sbb
fs
mov
out
loope
jl
and
rclb
pop
xchg
sub
xlat
push
iret
loopne
jmp
sahf
cmpb
test
inc
in
mov
inc
or
push
adc
mov
xor
ret
jmp
in
dec
imulb
rcrl
dec
inc
insb
gs
xor
mov
sbb
cmpsl
push
loope
mov
in
add
enter
out
or
in
jle
dec
inc
xchg
orb
scas
negl
popf
push
xchg
xchg
icebp
cmpb
or
or
jl
loopne
mov
subb
pop
in
gs
cmpb
pop
scas
or
mov
push
test
and
je
repz
and
pop
cmp
mov
xor
cwtl
pop
iret
mov
outsb
scas
int
test
sti
inc
stos
mov
push
or
aam
push
xor
lods
maskmovq
jns
dec
dec
cs
jne
les
lret
mov
cld
xor
jns
or
scas
aaa
or
cmp
cs
notb
push
push
push
ficoms
repz
gs
cmp
mov
dec
xor
ss
mov
and
mov
ss
cmp
fsubr
dec
aad
stos
ds
jl
movsb
movsb
mov
fadds
sub
jg
out
mov
pop
dec
jge
push
out
aas
push
in
pop
mov
ljmp
lcall
jbe
test
repz
movsb
sbb
arpl
and
in
pop
pmaxsw
adc
pop
xor
cli
cmp
pop
adc
fldcw
jae
sar
xchg
aad
and
or
mov
test
mov
mov
sbb
insl
xchg
mov
dec
bound
popa
mov
fwait
sub
lods
ja
sub
data16
dec
cs
pop
leave
loop
and
adc
mov
xor
push
pop
andb
pop
mov
cmp
ljmp
cmp
aad
ljmp
adc
and
ss
movsl
pushf
shlb
push
ret
adc
mulb
test
jo
shrl
aaa
bound
aam
in
sahf
sti
sbb
aaa
mov
push
and
in
in
add
inc
pop
cmpsl
add
cmpsb
pop
frstor
es
aaa
xorl
loope
adc
loopne
sub
loope
push
insl
and
cmpsb
sar
xchg
inc
ds
jg
adc
cmp
jb
cmp
bound
dec
ja
ja
rcll
popa
movsl
dec
jne
arpl
outsl
pop
loope
lahf
insb
stos
out
es
mov
sub
mov
or
jb
inc
push
pop
and
sahf
es
add
jmp
fdivp
call
xchg
mov
adc
outsl
sub
scas
pop
fs
jle
xor
mov
add
repnz
in
cmc
dec
add
test
jmp
sbb
mov
pop
jge
mov
pop
cld
jno
push
jae
enter
lret
scas
mov
cld
cmp
inc
sbb
jnp
jno
adc
mov
push
cmpsl
fwait
cmpsb
fnsave
push
mov
push
mov
add
push
dec
in
in
out
shll
cld
push
js
cmpsl
mov
movsb
sbb
ss
in
fs
cs
dec
sub
fwait
mov
mov
ss
iret
push
adc
sahf
xor
call
cmpsl
mov
adc
stos
cld
xchg
pop
shlb
push
mov
lret
or
cli
in
sbbl
sbb
aad
icebp
push
mov
cld
jmp
mov
and
sub
sbb
sub
gs
inc
add
xor
jp
xor
sbb
push
lahf
add
jecxz
xor
inc
mov
test
jp
imul
std
mov
xlat
cld
pop
fcoms
mov
sub
pop
into
test
push
dec
adc
xchg
loopne
xlat
push
push
in
mov
ja
mov
dec
and
jb
push
pop
mov
mov
mov
mov
push
dec
es
ret
daa
xor
lock
xchg
mov
cltd
movsb
sub
xchg
cmpsb
dec
push
stc
lods
or
sbb
out
cmp
add
in
jg
dec
mov
mov
decl
lods
xchg
stc
pop
xchg
sub
fs
sub
ficompl
das
push
xor
data16
mov
out
mov
cmp
mov
mov
bound
mov
push
pop
pop
adc
and
jl
dec
pop
xchg
add
shll
pop
xor
leave
push
movsl
inc
mov
mov
dec
jp
adc
jge
mov
shlb
mov
ja
xor
mov
inc
mov
push
movsl
scas
movsb
je
mov
mov
sti
cld
sbb
testl
add
sbb
ficoms
loope
push
ljmp
int
cmp
out
outsl
pop
fidivl
rolb
mov
mov
dec
pop
sub
test
scas
dec
sbb
mov
sbb
xor
xchg
dec
push
push
push
cwtl
and
loop
stos
or
mov
xchg
fisttps
shll
sbb
cmp
push
and
dec
enter
fsub
lcall
xchg
sbb
jmp
lock
mov
lods
pop
mov
add
adc
cmc
push
lea
sub
inc
jne
lock
cld
iret
ja
inc
push
jnp
dec
xchg
xchg
mov
psubusb
aaa
jecxz
cmc
fistpll
icebp
and
xor
mov
adc
xor
cmp
push
js
cmp
jae
fwait
dec
adc
movsl
adc
or
cmp
std
adc
sub
fcmove
pop
jmp
ss
mov
rcrl
inc
mov
notl
push
popf
test
aam
cmpsl
repz
pop
inc
insl
and
pushf
in
sub
test
cmpsb
dec
jecxz
cs
clc
mov
sub
lret
fs
lret
xor
sahf
sbb
inc
add
decl
add
jge
sbb
mov
fmuls
outsb
jb
in
adc
pop
lods
mov
mov
jmp
imul
jecxz
pop
mov
leave
jne
xor
insb
sar
push
mov
inc
out
loopne
popa
mov
stos
or
mov
push
addl
sub
jae
push
out
lock
mov
mov
not
mov
sub
int
lods
xchg
ret
and
fdivrp
es
inc
dec
inc
das
xor
icebp
or
jmp
xchg
xchg
sub
xchg
shrb
mov
pop
sub
mov
mov
cmp
mov
pop
movsb
int
lahf
dec
in
out
out
ja
in
adc
and
or
push
sarb
mov
mov
lock
test
dec
push
jns
fildl
movsl
cmpsb
mov
mov
add
ds
inc
out
adc
jo
je
push
cmp
jge
rep
xor
je
into
cmp
and
in
mov
rcr
cmpb
ljmp
cmp
xor
inc
cwtl
je
gs
pop
jmp
dec
clc
call
cmp
imul
jmp
sub
add
cld
add
cli
push
imull
lods
xchg
or
out
cmpsb
jnp
fbld
pop
into
pop
jmp
addr16
out
ficomps
push
lret
mov
lods
mov
jl
mov
insl
fwait
jmp
rorb
adc
in
mov
sbb
and
fidivs
push
sub
fucomi
adc
push
jnp
push
aad
sub
daa
scas
and
jns
pop
loopne
jns,pt
outsl
xor
adcb
js
xchg
frstor
rolb
sub
push
insb
mov
mov
imul
jg
arpl
add
xor
rcrb
add
fwait
pop
out
jg
dec
rcrb
rorl
test
adc
mov
aas
xor
or
dec
in
pop
and
aas
pop
sbb
cmpsb
test
mov
add
inc
cli
mov
rolb
dec
pop
pop
inc
xor
ret
cmp
push
jo
das
push
push
fstps
flds
dec
ret
fstps
addr16
dec
repz
cmp
xchg
das
push
in
rorl
es
cmpsl
shlb
push
icebp
imul
lods
ret
into
push
sub
inc
cmp
push
shll
or
cmpsl
out
push
movsl
jecxz
or
stc
lods
fnstenv
or
jb
xchg
testb
stos
mov
ljmp
push
lods
popa
cmp
loope
mov
cld
ss
popf
aaa
pop
mov
into
mov
sub
cwtl
adc
int3
adc
clc
loop
and
mov
dec
jo
popa
cmp
add
xor
outsl
add
scas
jmp
loop
test
mov
fs
push
inc
imul
or
push
int
push
xor
je
jmp
insl
add
mov
into
sub
lcall
testb
and
pop
sti
aas
lcall
add
in
inc
das
stos
es
aas
pusha
add
cltd
mov
aaa
js
jno
int
in
inc
btr
fnstsw
pop
push
clc
test
push
outsb
ljmp
inc
mov
jns
jg
fiaddl
jp
enter
es
mov
mov
push
and
jb
popa
mov
jmp
test
push
mov
fiaddl
jmp
push
jbe
jne
or
js
andl
jle
loope
addr16
cmc
sub
jle
xchg
ljmp
sbb
jmp
insl
sbb
pop
fiadds
sbb
nop
xchg
sub
cmp
xchg
stos
test
fstpt
unpcklps
ljmp
lds
jne
shlb
dec
push
daa
fcoml
cmp
sub
jb
cmp
gs
jo
push
dec
dec
sbb
ret
scas
mov
outsb
adc
push
test
decl
ja
push
adc
push
movsl
cmp
push
jns
fcompl
jne
or
pusha
repz
clc
aas
divb
inc
push
jge
flds
fstps
pushl
fadds
push
or
lea
or
sbb
mov
lea
mov
or
pop
pop
loope
inc
dec
pop
mov
or
mov
dec
int3
jl
leave
pop
fstpt
cmpsl
jne
and
jne,pn
repnz
dec
lret
mov
repz
lds
orl
push
push
mov
movsl
adc
cmpl
bound
pop
sbb
sbb
mov
jl
outsl
outsb
shl
pusha
stos
pop
xchg
scas
inc
call
lock
cmpsb
cs
out
fldt
loop
int3
lods
or
jg
rcrb
jp
and
popa
cli
inc
jg
or
xchg
and
addr16
mov
in
sub
mov
mov
sub
subl
test
fprem1
jne
pushf
mov
js
rorb
or
adc
jecxz
test
ljmp
sub
sub
shr
cmp
mov
push
xor
jbe
add
int3
adc
and
inc
and
in
add
cmp
inc
fwait
mov
cwtl
ds
mov
test
js
push
push
jg
rorb
fmull
stos
loope
test
inc
mov
mov
mov
mov
jmp
je
out
mov
or
jns
lea
pop
pop
aad
jg
test
mov
pop
cmpsl
std
xchg
inc
mov
rorb
mov
mov
rcr
xor
or
cltd
call
les
pop
lahf
stc
clc
push
pop
inc
jb
xchg
sahf
cs
mov
test
out
daa
sbb
jnp
inc
jne
inc
ss
adc
fs
cli
repnz
enter
jl
ret
into
lret
loopne
xchg
sub
adc
shll
mov
ja
and
dec
nop
cwtl
sub
jmp
aam
lock
cs
xchg
jnp
mov
rcrb
xchg
clc
xchg
lcall
pop
fiadds
fimull
fs
lods
mov
into
pop
out
pop
add
test
jns
mov
cltd
sbb
int3
hlt
xlat
mov
or
rcl
and
adc
enter
jl
dec
add
xchg
inc
leave
xor
ja
repz
insl
fcoml
subb
leave
imul
rorl
lahf
cmp
es
ljmp
stos
sbb
rclb
loop
inc
push
mov
mov
test
pop
or
in
cmp
setge
addr16
vmaxsd
jnp
sub
pop
out
aaa
movsb
mov
push
rorb
js
sbb
addr16
idivl
mov
gs
rclb
ss
loope
push
hlt
jl
cs
dec
js
dec
gs
cmp
dec
fsubr
ss
ficomps
xchg
fnstcw
ret
lea
nop
jp
mov
inc
sbb
leave
out
jb
xor
cmp
mov
jg
push
das
mov
mov
clc
add
pop
mov
lahf
imul
out
cmc
orb
add
fisubrs
mov
jmp
mov
mov
call
outsb
cmp
fidivrl
dec
movsl
loope
sbb
adc
or
int3
push
mov
leave
cs
popf
ja
jle
sbb
xchg
mov
xor
icebp
fadd
and
psubq
or
dec
push
cmp
dec
mov
movsl
stos
out
mov
mov
add
icebp
addl
insb
cli
lcall
push
sub
arpl
or
dec
jno
and
push
rolb
outsb
cwtl
xor
mov
or
movsl
push
lret
pusha
data16
mov
icebp
pop
push
inc
lock
cmp
xchg
lret
divb
xor
es
das
push
fsubrl
outsl
adc
dec
sub
lcall
ret
or
bound
xchg
out
aam
jns
mov
mov
leave
out
inc
outsb
ficoms
mov
dec
sub
lret
mov
fcmovnbe
rorl
or
xlat
pop
fstpt
xchg
mov
inc
xor
push
lahf
lcall
rorb
outsl
dec
mov
mov
dec
pop
push
enter
ljmp
std
xchg
jmp
push
push
cmpsb
lret
or
shr
lock
into
push
sahf
mov
mov
mov
arpl
cs
jmp
ds
dec
cltd
lea
pop
ja
push
gs
push
pop
addl
into
in
jno
jmp
push
mov
xlat
sbb
add
xchg
mov
xchg
xchg
or
jnp
lahf
sar
xor
inc
pop
push
lret
inc
das
std
mov
mov
pushf
jle
sbb
xchg
xchg
mov
jbe
andb
iret
cld
fldcw
push
cs
sbb
inc
lods
mov
popa
clc
std
jb
sti
pop
cmpsb
sbb
jmp
pop
add
mov
test
test
int
je
popa
in
jbe
daa
jae
icebp
daa
cwtl
mov
arpl
push
adc
and
out
sub
jg
daa
test
push
pop
aas
insb
rcr
xor
inc
jbe
or
fisttps
mov
push
popf
jno
icebp
dec
cmp
dec
pop
stc
pop
not
jno
mov
add
cmc
hlt
cmpsl
jbe
outsb
inc
test
mov
stos
xor
xlat
dec
loop
xchg
popf
into
inc
push
mov
xchg
push
mov
add
mov
movsb
jp
xor
lock
lret
mov
jbe
or
xchg
fildll
jns
or
cmpsb
ret
inc
ret
adc
cmp
push
xchg
inc
dec
dec
push
sahf
and
mov
leave
push
lret
cmp
incb
int3
xchg
sub
mov
out
mov
jae
lds
xlat
lods
data16
ret
popf
lret
mov
js
push
xor
cmp
in
enter
notb
xor
adc
fimuls
movsb
icebp
xchg
mov
mov
push
pop
or
mov
clc
aas
iret
sbbb
movsl
add
mov
or
cmp
mov
xlat
incb
push
xor
and
ljmp
or
std
jp
and
cwtl
insb
das
adc
jno
xchg
pavgb
les
push
daa
jbe
aam
inc
add
out
call
std
stos
add
arpl
inc
or
inc
sub
scas
aas
in
or
cmp
inc
sarl
pop
popf
sbb
in
cmp
or
add
or
int
int
add
sbb
movsb
push
leave
mov
lret
rcll
xchg
fistps
push
fisttps
xor
mov
cli
mov
pop
pop
pop
push
jp
data16
mov
stos
mov
insl
aaa
cmp
xchg
and
jae
nop
fiadds
int
push
cmpb
mov
fwait
push
out
sub
arpl
push
add
mov
pushf
push
pushf
cmpsb
mov
in
les
loopne
pop
aad
rolb
rclb
push
pop
mov
outsb
call
test
mov
sub
scas
xor
fmuls
or
sub
dec
sahf
jp
test
or
loope
movsb
cmp
push
jle
add
xor
add
cmp
cli
lea
mov
dec
mov
insl
clc
jnp
lock
mov
out
sub
mov
jmp
loop
fidivs
adc
dec
aas
in
fsubs
push
fs
jb
add
push
in
cld
xchg
cmc
cmpsl
int3
addb
pop
jge
out
push
loope
sbb
movsl
dec
fisttps
jp
flds
pop
cmp
jb
dec
lock
jnp
xchg
push
jno
mov
mov
mov
insb
shrl
lcall
jbe
ljmp
mov
lret
out
dec
add
adc
sub
out
shl
sub
pop
push
js
inc
sub
dec
push
sahf
cld
decb
pushf
or
dec
movsl
addb
nop
sbb
mov
or
mov
add
shrl
or
xor
adc
inc
cltd
aad
sub
mov
test
xor
ret
or
stos
mov
sti
push
pop
sub
inc
push
dec
pop
mov
dec
xchg
fstl
mov
ljmp
jmp
jnp
add
daa
lahf
ja
sbb
lahf
adc
mov
push
mov
int
cs
jns
fdivp
std
aad
add
test
cmp
movsl
movsb
in
push
pusha
lock
std
in
pop
adc
test
jg
hlt
push
mov
mov
mov
pop
mov
lret
sti
xlat
sbb
ret
sub
lods
push
setns
pop
in
in
loop
mov
cmp
sub
or
int
inc
push
xchg
les
andl
and
push
ret
mov
jl
hlt
push
lea
and
cmp
addr16
push
cli
push
mov
sbb
add
dec
sbb
add
xchg
fnstsw
repz
inc
inc
pop
sub
mov
mov
lds
pop
xor
in
fstps
push
movsb
adc
mov
outsl
xchg
std
fwait
clc
lods
mov
testl
inc
lods
pop
fdivrl
neg
xchg
iret
leave
dec
add
xor
cmpsl
mov
fs
test
inc
jg
lret
jb
push
lods
pop
fidivrs
xchg
mov
aam
sub
mov
sbb
cmp
pop
pop
out
in
enter
mov
into
divl
aam
ficoml
mov
mov
jns
or
int
mov
adc
cmpsl
in
test
mov
aas
fcmovnb
xchg
out
xorl
and
push
sub
orps
push
mov
or
aaa
push
adc
mov
mul
pop
fcomi
jne
jae
xor
sub
test
pop
jge
pop
insl
popf
xchg
mov
lret
inc
xor
mov
mov
cmpsb
shlb
testl
cmc
mov
push
popf
pushf
mov
sub
test
call
sub
shlb
inc
into
push
jne
aaa
jns
mov
xor
inc
xchg
mov
mov
xor
je
out
or
adc
xchg
lret
xor
outsl
idivl
pop
mov
ret
cmp
and
inc
pop
and
addr16
je
adc
push
pop
sub
xchg
jle
int3
mov
inc
sbb
inc
in
leave
sti
cmp
mov
mov
sbb
out
inc
push
xchg
pop
leave
push
in
loope
mov
mov
ret
pop
and
call
adc
scas
mov
mov
cmpsb
mov
cmpl
test
inc
out
or
lea
ljmp
jnp
fdivl
mov
movsb
test
jb
xor
sbb
shr
jo
xchg
xor
pop
loopne
movsb
mov
out
arpl
lock
sahf
outsl
sub
and
inc
stc
lods
cmp
idivb
popa
shll
pop
lods
jae
mov
fsubl
xchg
dec
shll
iret
push
loop
pcmpgtd
outsl
lret
call
orb
rep
adc
cld
testb
inc
rolb
imul
lcall
inc
mov
outsb
xor
aaa
mov
inc
push
mov
push
cmp
pushf
inc
jl
add
lret
hlt
jl
idivl
imul
or
sbb
loopne
xchg
in
xchg
sti
call
scas
lods
sub
cmp
dec
jb
rcl
cltd
adc
xchg
sti
stos
xchg
pop
pop
sub
cmpsl
int3
rdmsr
testl
adc
dec
sbb
mov
jp
pusha
mov
mov
sbb
cmp
dec
mov
movsl
out
fcomps
std
xor
jbe
pop
cmp
and
lods
out
xor
aam
cmpsb
in
jns
pop
je
loop
xchg
mov
or
insb
pop
mov
or
dec
test
push
add
xchg
sub
out
lods
mov
out
xlat
test
jbe
inc
scas
bound
push
sub
push
cmp
push
testb
push
fcompl
mov
jb
into
rorb
cli
xor
iret
rcll
repz
push
xor
fisubrl
imulb
popa
cmp
shlb
addr16
pop
lods
out
push
adc
xchg
xchg
sbb
fimull
cld
mov
mov
punpcklbw
lods
ret
or
pop
test
xchg
jno
shlb
push
and
xor
mov
adc
jle
test
or
sbb
inc
scas
adc
mov
adc
mov
mov
or
roll
xor
pop
mov
jl
mov
outsb
ret
mov
or
mov
addr16
int
subl
aas
cli
mov
in
leave
adc
lret
pop
xchg
push
mov
or
nop
shlb
ss
xchg
xchg
cmc
cmpsb
cmpsb
out
fstl
cmpsl
out
sbb
mov
ret
repnz
ret
out
out
test
pop
rorl
out
movl
and
jmp
and
mov
sbb
mov
shlb
xchg
call
dec
mov
sub
jb
enter
setbe
rorl
movsl
or
sub
dec
push
and
add
mov
xlat
mov
xlat
lods
mov
xchg
xor
rcll
add
je
movsb
aas
mov
xchg
movsb
jge
push
insl
mov
int3
int
inc
lods
loop
cmp
sbb
int
push
scas
sbb
out
out
cmpb
lahf
loope
imul
mov
ficompl
mov
cmp
pop
push
jnp
popa
fs
sbb
movsl
mov
or
les
aad
xchg
cmpsb
enter
xchg
frstor
lcall
out
iret
lds
bound
adc
add
and
scas
shrl
cmp
fwait
adc
jl
mov
stos
cli
aas
popa
bound
push
in
xchg
sarl
and
scas
in
and
roll
aad
mov
lods
xchg
xor
jnp
sti
adc
je
jns
fildll
inc
xchg
cs
xchg
insb
push
lahf
js
adc
mov
lret
dec
push
fs
in
loopne
xchg
test
jns
pop
test
cmp
sub
and
nop
inc
fdivl
std
subl
dec
xor
sbb
ret
and
pop
pop
cmp
or
inc
pop
cmp
push
xor
push
mov
js
aas
xor
movsb
dec
hlt
pop
dec
mov
push
mov
and
or
mov
lods
adc
and
inc
pop
push
xor
mov
mov
push
push
daa
push
enter
ret
sbb
sub
shl
pop
ja
ret
out
jnp
fiadds
ss
mov
lret
sub
mov
daa
ds
inc
dec
mov
inc
adcb
mov
pop
adc
data16
hlt
lock
icebp
jp
mov
fwait
iret
je
mov
cmp
or
sbb
sbb
stc
fwait
aam
inc
add
pop
jns
enter
mov
jnp
inc
xlat
xchg
test
repnz
fadds
cmp
add
inc
pop
mov
dec
aad
push
mov
aaa
mov
notb
xchg
les
push
lds
mov
push
jmp
rorb
cmp
fidivrs
fisubrs
pop
std
repz
xor
sbb
std
addl
xchg
xchg
dec
push
sarb
push
dec
sbb
fildl
xchg
mov
imul
mov
scas
sbb
movsl
cmpsl
dec
mov
into
push
inc
xor
push
pop
fdivrl
shll
xchg
xchg
sbb
push
mov
and
lds
push
fldt
insb
in
mov
and
pop
mov
cmp
sub
cltd
dec
jno
sbb
js
dec
xor
xor
pushf
lods
cltd
gs
jno
addb
sub
pop
pop
inc
cli
jns
orb
in
push
xor
pop
pop
imul
pop
mov
pop
dec
jae
ja
add
int
push
pop
and
enter
add
out
loopne
mov
mov
mov
mov
pop
mov
bound
nop
or
mov
inc
das
in
bswap
fcomp
ret
cmp
xor
fdivrl
and
dec
mov
ljmp
xor
and
jae
inc
mov
pop
leave
les
in
ja
cmp
fs
fldt
jecxz,pt
mov
xchg
jle
jae
adc
repz
lahf
call
das
xlat
and
jb
jle
pop
sbb
pushf
je
xchg
add
aaa
xchg
stos
aam
cmc
jne
je
or
stos
cltd
lock
xchg
popa
push
insb
jle,pt
scas
xchg
and
jg
push
pusha
das
divl
sti
fistl
jb
mov
popa
or
arpl
sub
notb
out
inc
sbb
sbb
inc
scas
xchg
pop
sub
in
js
testb
scas
jb
sbb
ds
pop
mov
cld
lret
hlt
lahf
jp
mov
movsb
inc
add
inc
push
aas
push
add
push
lods
xor
aas
jno
xor
inc
scas
lcall
xchg
pusha
das
push
dec
adc
mov
nop
pop
mov
insb
repz
dec
stos
lret
rcl
stc
cmc
push
adc
adc
inc
inc
cmp
dec
mov
sti
mov
lds
dec
sub
sahf
push
stc
sub
or
ret
aad
test
xchg
dec
stos
fsubp
ss
adc
push
std
pusha
push
xor
pop
andb
repnz
or
je
lods
call
repz
dec
mul
push
and
push
std
jns
cwtl
shrb
mov
mov
in
mov
push
xchg
mov
or
sahf
xorl
xchg
jns
test
mov
mov
gs
test
lods
dec
dec
mov
lock
faddl
pop
mov
mov
fldcw
and
or
in
inc
push
lcall
bound
aam
pop
mov
ja
xor
add
mov
jg
adc
addb
cmp
inc
mov
sbb
jge
inc
dec
xchg
xor
mov
jmp
les
and
dec
mov
mov
incl
scas
gs
push
jle
jecxz
icebp
fsubl
cmp
jecxz
scas
sub
and
push
jns
std
add
fwait
hlt
incb
mov
inc
mov
xchg
clc
shl
jge
fidivl
dec
cltd
orl
adc
movsb
bound
push
mov
cli
movntq
in
adc
fwait
mov
insl
add
sbb
sarl
aaa
rorl
test
mov
inc
push
loop
xchg
in
loopne
leave
int
mov
jnp
push
cld
cs
add
add
mov
xchg
jle
sub
mov
ss
lock
ret
shrl
jmp
fnstsw
movsb
mov
mov
ja
gs
jae
and
leave
in
ja
es
inc
cmpsb
pop
idivb
pusha
pop
mov
inc
or
je
test
xchg
clc
pop
and
inc
sub
push
out
aas
cmp
test
ljmp
cmp
cld
std
xchg
rorl
dec
cwtl
push
enter
repnz
es
dec
xchg
xlat
js
cmpsb
dec
mov
or
sbb
jle
inc
cmp
lods
jecxz
pop
lea
sub
decl
mov
je
imul
lcall
mov
dec
pop
out
cmpsl
roll
loopne
loopne
dec
xchg
icebp
out
daa
sub
insb
stos
jns
jne
add
add
xchg
test
dec
mov
and
out
sbb
into
mov
pop
dec
in
push
sub
insb
sub
ljmp
hlt
daa
dec
cmp
or
stos
pushf
mov
sbb
mov
es
lea
sarl
add
sti
cmpsl
repnz
xchg
jmp
aad
jae
lret
das
lea
dec
or
rcrb
enter
out
xor
fimuls
adc
or
stc
inc
mov
fisubl
in
aam
xchg
shll
push
dec
test
mov
xchg
or
dec
xchg
pop
dec
mov
mov
cs
out
dec
adc
xchg
test
pop
add
inc
aam
push
fistps
xor
imul
dec
jp
fnstenv
in
mov
cld
push
add
sbb
push
jle
jecxz
lods
int
dec
sbb
dec
xchg
add
inc
enter
lcall
xchg
loop
mov
add
test
jb
jle
bound
rclb
jno
cwtl
xchg
cmp
xchg
dec
shlb
pop
adc
fdiv
mov
cmpsl
sub
mov
xchg
rolb
arpl
pop
jg
in
fildl
arpl
dec
arpl
aaa
imul
lods
repz
pop
fiaddl
xor
push
sub
or
xchg
mov
or
pop
lods
mov
mov
std
and
shll
add
fs
xchg
notl
test
xor
sub
push
mov
adc
and
dec
sub
sub
in
jp
push
fnsave
ret
iret
addr16
mov
sbb
jae
out
inc
insb
and
arpl
sbb
stc
movsl
mov
xchg
inc
cltd
loop
test
add
jg
xor
xchg
push
push
out
es
dec
ja
in
adc
cmp
shrl
add
add
xchg
hlt
push
xchg
dec
push
or
lock
jmp
xor
pop
sti
mov
cli
add
insb
mov
mov
adc
dec
sub
jge
rcr
ret
adc
pop
inc
stos
lods
mov
out
adc
in
pop
je
stos
push
xor
jmp
out
jo
mov
mov
fnstcw
js
ja
jo
js
mov
lret
or
or
mov
add
cld
in
xlat
xchg
rcrl
xchg
xchg
movsb
orl
sbb
outsb
lret
add
adc
imul
out
test
out
fs
jmp
shlb
pushf
or
cmp
inc
adc
xorb
ljmp
inc
subb
fnsave
mov
ja
inc
sbb
es
loopne
push
mov
daa
sub
inc
into
idivb
jecxz
sub
xor
ss
dec
mov
daa
arpl
clc
lea
mov
jg
cs
xchg
mov
lahf
mov
mov
stc
in
mov
xchg
and
sbb
in
add
push
pop
shrl
and
xchg
cmp
int
push
pop
dec
jg
dec
leave
xchg
dec
mov
or
sbb
cmp
jb
push
scas
ss
jecxz
decl
push
pop
les
push
minps
add
fmulp
stc
push
add
je
into
pop
mov
popa
and
adcb
cwtl
sbb
lahf
jbe
and
push
mov
add
jae
or
insl
push
xchg
das
lea
jbe
cmp
ljmp
sti
pop
jb
push
lock
insb
add
xor
ret
ficoml
pop
out
push
add
lds
inc
and
adc
lahf
cmp
add
fstpt
mov
icebp
add
push
movsb
icebp
inc
hlt
xor
add
pop
jl
mov
nop
push
std
setg
add
and
ja,pn
push
cmpsb
fisubrl
mov
pop
rolb
ja
cli
sub
out
test
jno
mov
fwait
mov
jns
xorb
sub
out
pop
movsl
loope
pop
inc
inc
push
bnd
mov
push
cld
in
pop
pop
data16
sub
inc
add
mov
fwait
sub
rcll
pop
stos
inc
sub
scas
dec
pop
jg
nop
das
sbb
jb
loope
push
loopne
imul
mov
ljmp
xor
dec
arpl
cs
pushf
les
cmp
or
xor
ds
push
insb
das
jo
das
mov
cli
and
mov
xor
pop
insl
mov
lea
sbb
scas
testl
lret
adc
cmp
pusha
inc
aad
and
xor
out
enter
cwtl
xchg
jae
mov
inc
mulb
mov
test
mov
enter
xchg
mov
cwtl
mov
jb
es
lods
push
popf
clc
scas
mov
cs
cmc
icebp
mov
dec
sub
pop
inc
or
jnp
or
push
sub
adc
packsswb
std
daa
scas
dec
daa
xor
pusha
lods
add
jae
sar
adc
sub
jnp
push
aas
mov
testb
pushf
cwtl
dec
int3
or
rorl
stc
push
arpl
inc
sahf
call
inc
jp
outsb
xchg
jbe
clc
fucomip
or
jne
adc
pop
cwtl
push
mov
test
sbbb
mov
loope
aam
jns
arpl
mov
lea
mov
test
sub
add
dec
or
popf
in
call
cmovge
imul
rcrb
jns
xchg
and
stos
add
iret
js
mov
stos
stos
xor
shrb
pop
adc
adcl
out
imul
adc
cmp
mov
jo
fnstcw
das
in
jge
adc
xor
cmpb
mov
xor
pop
cs
sbb
xchg
mov
xchg
adc
loopne
ds
imul
mov
and
jmp
jo
fcoms
das
iret
outsl
out
or
mov
jbe
inc
jmp
loop
xchg
aam
subl
int
int
xchg
push
ljmp
fildll
mov
sbb
push
jb
inc
or
int
cld
je
lcall
popa
pop
test
cmp
jle
jo
mov
loopne
lret
xor
pop
insl
movsb
movsl
xchg
ret
popa
lret
stos
test
paddq
data16
mov
rorb
inc
add
or
out
add
fldt
inc
sti
mov
push
xchg
insl
loopne
dec
jl
aad
add
inc
leave
imul
dec
hlt
jmp
lret
jecxz
sub
xchg
dec
push
int
test
adc
adcl
sti
addr16
fs
add
add
mov
ret
sub
sbb
sbb
dec
and
sarb
push
mov
ljmp
mov
das
jnp
xchg
xor
shl
xor
hlt
mov
jns
xchg
xlat
sbb
sub
sub
cmc
shr
xchg
push
gs
mov
ror
mov
jne
lret
pop
cmp
pop
inc
dec
sub
jnp
cmp
xor
in
stos
movsb
outsl
je
mov
mov
divb
in
sub
daa
aaa
sti
data16
adc
movsl
test
das
jns
xchg
add
lock
insb
fs
pop
mov
mov
inc
inc
mov
mov
cmp
mov
idiv
cmp
xor
stos
fsts
enter
xlat
xchg
inc
adc
test
sub
rcrb
mov
add
jg
out
aam
sbb
les
test
mov
mov
pop
jge
cmp
int3
xor
sbbl
jge
push
mov
add
mov
imul
test
outsb
dec
lcall
adc
xchg
mov
cmp
test
jbe
lret
xor
outsb
mov
mov
dec
add
cmp
je
sti
pop
int
mov
mov
orb
fidivrl
jne
xchg
and
cltd
int
mov
js
sub
mov
testb
mov
inc
out
out
cltd
filds
rcrl
push
mov
rolb
flds
jge
cwtl
cmp
das
pusha
push
dec
sbb
xchg
push
or
xor
mov
push
lret
mov
testl
fisubl
out
lret
mov
inc
cmp
push
adc
imul
cmp
push
cmp
mov
icebp
cld
jb
mov
mov
loope
pop
inc
jl
arpl
cmpsb
pop
gs
adc
xlat
mov
rol
subl
mov
xor
fs
xchg
mov
hlt
lret
mov
lods
pop
cmp
mov
jl
mov
call
icebp
or
mov
add
ficomps
jge
xchg
or
mov
das
inc
sub
pop
xchg
icebp
outsl
dec
call
xchg
sbb
mov
push
xchg
out
outsl
movsb
xchg
cmpl
pop
mov
fadd
and
imul
or
lds
out
movsl
stc
popa
push
stos
aad
test
orl
scas
iret
stos
negl
lahf
add
cmp
rclb
push
pop
fs
xchg
sbb
aad
xor
mov
mov
ljmp
dec
sarl
mov
jne
mov
addr16
add
adc
mov
leave
xchg
hlt
jl
inc
pop
cmpsl
std
mov
dec
jmp
cmp
imul
or
sub
xor
dec
inc
push
lock
enter
out
cltd
add
mov
cmp
sti
xchg
insb
pop
lcall
popf
cmp
mov
je
add
cmp
cmp
sbb
push
inc
sti
push
jne
fwait
mov
dec
inc
push
shlb
mov
dec
inc
int3
push
mov
test
push
inc
push
push
in
cmp
icebp
adc
stos
or
cmp
jmp
or
add
mov
fsubrl
pushf
cltd
push
mov
jge
out
lcall
popa
mov
inc
shrb
inc
shlb
sub
and
or
xchg
sbb
dec
jecxz
dec
sub
pop
mov
xor
lods
icebp
or
and
dec
loope
jecxz
sub
inc
push
lds
pop
data16
push
jl
nop
push
bound
leave
pushf
sub
imul
mov
fdivrs
sub
add
aaa
test
xchg
cmp
jle
sahf
jp
mov
mov
xchg
and
push
and
xchg
mulb
das
dec
out
in
mov
pushf
idivl
notb
mov
inc
ss
test
push
dec
data16
stc
insb
and
sar
or
out
add
mov
repz
jmp
pop
fiaddl
sbb
int3
das
repnz
sbb
scas
inc
popf
hlt
push
imul
enter
pop
loop
imul
insl
imul
dec
push
imul
add
adc
gs
in
xchg
jl
dec
pop
les
adc
xor
cmpsl
sub
and
movsb
jnp
sub
ja
movsl
mov
ljmp
aas
lods
arpl
ffreep
jl
lods
cmp
cmpsb
mov
jno
into
add
pop
push
xorb
sahf
push
or
movsb
xchg
push
mov
xorb
push
mov
mov
nop
test
in
sub
out
dec
fstps
jmp
pop
or
test
inc
push
movb
sbb
pop
adc
mov
mov
jne
call
stos
mov
bound
add
mov
inc
cmp
stos
ret
ljmp
adc
push
xchg
test
mov
pop
inc
leave
in
std
addr16
xchg
mov
cmp
mov
xchg
dec
xchg
sbbb
xchg
add
pop
das
in
popa
clc
rcrl
sub
aad
incl
xor
scas
jns
xor
and
sub
mov
mov
arpl
es
sub
mov
inc
call
ret
in
xor
mov
inc
and
lea
mov
xchg
mov
or
xchg
jecxz
sub
inc
hlt
aas
stc
orb
into
loopne
pop
in
and
lods
sbb
rclb
flds
insb
or
pop
push
pop
aad
aaa
outsb
jns
enter
sub
out
cmp
test
test
int
fbld
testb
pop
arpl
add
sbb
pop
jle
pop
or
inc
pop
jp
inc
cmp
mov
jmp
dec
push
aam
lcall
lods
lds
sub
xchg
mov
cmp
adc
push
mov
inc
aad
cmc
push
mov
out
xor
outsl
jecxz
lock
sub
cmp
subb
jno
xchg
nop
add
imul
jg
int
mov
mov
push
jno
sbb
fiaddl
lahf
xchg
xchg
aad
out
mov
mov
add
mov
and
jbe
das
call
push
pusha
and
mov
cmp
ss
add
push
ja
out
icebp
mov
repnz
sub
dec
xlat
cmp
and
or
jl
inc
xchg
fs
stos
movsl
cs
xchg
test
ret
add
add
add
js
jo
in
pop
sub
cwtl
push
lea
fisttpll
sbb
xor
add
sub
std
lahf
jae
ret
mov
jae
adc
in
xchg
push
lahf
lods
loop
dec
add
insl
in
pop
imul
adc
testl
jge
or
and
dec
mov
pop
stos
divb
loop
das
push
pop
lahf
cmp
push
int3
xor
and
push
out
jl
xchg
cmp
loope
push
mov
xchg
dec
adc
fwait
inc
es
pop
pushf
and
jae
add
sub
std
inc
rcr
push
nop
cmp
mov
daa
insb
add
repz
inc
mov
sbb
jne
ljmp
mov
into
stos
or
lock
fidivl
rolb
cmp
pop
mov
sti
je
xor
dec
cltd
lcall
dec
inc
je
adcb
sbb
mov
fldcw
dec
fnstsw
aaa
pop
inc
xor
jg
mov
ds
xor
in
inc
outsl
inc
aam
mov
mov
mov
add
cs
arpl
in
mov
out
jmp
pop
test
fs
test
loop
jp
sub
aaa
aam
xchg
ss
out
mov
int3
xchg
xchg
nop
fldcw
pushf
xor
mov
aas
dec
xor
arpl
adc
and
enter
mov
scas
and
inc
out
pop
into
xchg
xor
cmp
or
std
push
fucomip
and
repnz
adcl
ljmp
je
add
or
mov
mov
stc
in
mull
scas
inc
ljmp
es
mov
mov
push
ret
std
pop
aam
jle
add
inc
cli
pop
aas
xor
or
dec
in
enter
lret
lods
jns
out
pop
pop
pushf
jp
hlt
or
mov
std
insl
add
in
test
push
cmp
and
imul
xchg
bound
xchg
xchg
xor
dec
mov
push
stc
lcall
mov
test
pop
push
jmp
jg
jl
sbb
push
fadd
ljmp
dec
je
nop
dec
cmpsb
repnz
xchg
cmpsb
jecxz
or
xlat
imul
mov
repnz
jne
and
mov
mov
loop
xchg
es
and
pop
jg
and
stos
ret
sbb
sub
cmpl
je
cmp
sub
add
insb
xchg
mov
inc
or
icebp
mov
jo
push
inc
lcall
sub
fildl
or
xchg
jns
ds
popa
xor
dec
push
or
jl
mov
and
mov
das
mov
or
data16
rorb
gs
enter
pop
es
push
inc
push
aaa
in
nop
xchg
xlat
dec
pop
or
loope
pop
push
shll
outsb
out
xor
xor
jecxz
stos
cmpsb
mov
push
sbb
enter
sub
sub
and
push
pushf
imul
repz
fistpl
imul
dec
mov
pop
pop
pop
stos
pop
inc
test
mov
jle
or
dec
add
fwait
xor
loopne
dec
sbb
in
jne
mov
aad
repz
stos
aas
pop
das
xchg
pop
pusha
popa
lods
adc
jle
adc
xor
fcompl
dec
add
mov
andb
insb
xor
push
cs
hlt
lock
in
mov
test
sub
lcall
mov
movsb
push
pop
repnz
push
lahf
sarb
xlat
scas
xor
or
lahf
push
popa
mov
aaa
mov
cli
cli
decb
movsb
fidivrl
xor
adc
mov
addr16
enter
and
popf
and
setg
fildl
movsb
mov
fidivl
das
jno
int
fmuls
int3
test
pop
jno
cmp
ja
cmp
add
mov
cld
in
out
sbb
cmp
inc
lcall
lcall
pop
popf
fldl
jecxz
mov
imul
lret
mov
adc
mov
xor
add
popa
push
fdivrp
popl
mov
mov
push
inc
mov
dec
mov
jo
aam
jb
pushf
jne
outsb
mov
push
rolb
mov
lret
push
mov
sub
inc
jp
sarb
in
aad
fyl2x
sub
mov
sub
and
xlat
and
dec
or
jle
arpl
dec
lods
sbbl
movsb
mov
adc
dec
aaa
scas
push
mov
xor
or
ds
pop
or
xchg
or
lods
jns
sahf
sbbl
sbb
inc
out
mov
push
push
jae
daa
inc
xor
pushf
cmpsl
inc
imul
lock
adc
test
sub
mov
or
xchg
and
mov
or
pop
xor
pop
push
ret
push
inc
pop
test
sbb
mov
sbb
popa
jns
or
push
pop
jno
xor
lds
out
aaa
std
lret
lds
imul
imul
adc
sub
sbb
xchg
sti
push
xchg
add
mov
mov
stos
adc
fisubl
mov
push
les
xchg
aam
lret
in
das
sub
xor
mov
call
out
fld
push
rorb
ret
mov
mov
in
addb
pop
sbb
xchg
incb
clc
ds
or
je
add
xchg
xlat
aam
dec
cmp
push
fcomip
cs
pop
inc
and
insl
sbb
dec
lahf
add
leave
xchg
mov
dec
xchg
idivb
jge
mov
cmpsb
mov
mov
out
stos
fimull
xchg
iret
das
push
subl
loopne
lret
sahf
mov
mov
and
pop
pop
sub
jl
push
jae
out
add
popf
pusha
fmull
mov
xlat
mov
movsl
cmpsl
sbb
std
push
cwtl
xor
je
movq
lea
es
and
pop
into
scas
orb
xchg
or
movsb
icebp
or
inc
lret
ret
pop
mov
out
sub
pop
scas
jge
sbb
and
popf
ds
sti
push
pop
addr16
mov
push
arpl
push
cs
lock
pop
out
aam
mov
jae
push
loope
add
jg
rol
sbb
cmp
ljmp
xchg
fisttpll
in
fstpt
push
dec
push
pusha
sub
imul
sbb
es
fmull
xchg
mov
in
and
ficoml
cmp
xlat
stos
push
cmp
jb
nop
ror
sbb
fisubrl
push
shll
push
les
mov
xor
sbb
mov
mov
cli
push
fdivrl
test
lret
xor
int3
pusha
call
xor
mov
xchg
repnz
dec
inc
movsb
xor
add
inc
dec
pop
sbb
scas
hlt
movsb
js
jno
xchg
lret
mov
push
ja
in
pop
cltd
out
sub
xchg
cmp
sub
aas
add
xor
adc
fs
push
mov
int3
mov
or
lret
adc
in
arpl
push
loop
push
push
int
mov
dec
ret
add
jo
sub
pop
aam
sti
mov
adc
push
pusha
mov
jmp
pop
outsb
js
dec
pop
mov
jge
imul
insb
insb
dec
cltd
mov
fcmove
xor
sbb
pop
and
mov
inc
jl
pop
jg
push
cld
lret
test
popf
dec
inc
lea
mov
mov
fcomi
insb
xchg
outsb
in
dec
cmp
mov
jo
dec
cmpl
mov
push
scas
imul
or
gs
push
xlat
ljmp
mov
mov
and
or
mov
cli
xor
or
loop
es
repz
xor
and
xchg
nop
ss
in
dec
dec
movsl
or
jne
lret
aad
push
sbb
incb
dec
add
call
cs
xchg
mov
es
bound
mov
aad
dec
xor
movb
and
fnstsw
inc
adc
fsubs
lods
pop
or
loopne
pop
inc
xchg
add
cld
jo
into
fisttps
cmp
cmc
add
add
aam
sub
loope
in
and
call
pop
lods
stos
popf
popf
call
jecxz
cmp
gs
ja
mov
and
push
push
sbb
test
xor
ret
mov
lcall
outsl
sub
mov
test
pop
sub
imul
inc
enter
scas
in
jg
fstps
xor
or
xchg
into
jmp
mov
outsb
loopne
dec
scas
loope
push
sub
clc
inc
cwtl
cmp
xlat
jg
popf
mov
push
inc
call
addr16
imul
loop
mov
imul
jp
and
sti
jnp
pop
mov
push
or
add
pop
cmp
push
imulb
mov
push
imul
pop
enter
hlt
cli
movsl
ret
mov
rol
pop
push
aam
xor
lret
sub
add
cmp
hlt
or
addr16
mov
mov
cmpsl
xchg
int
jmp
ret
and
pop
scas
push
aad
lods
mov
mov
mull
fisttpll
cmpsb
shrb
jmp
int
pop
mov
sub
outsl
xor
xchg
repz
sti
arpl
daa
dec
add
nop
fcomp
cmp
inc
and
xor
idivb
add
jae
push
outsb
idivl
cmp
push
xlat
clc
mov
flds
mov
pop
mov
inc
popa
and
es
fisttps
xor
loopne
xchg
cmp
adc
mov
xchg
repnz
add
inc
or
aam
repnz
mov
cltd
and
mov
mov
mov
fimull
xlat
stos
sbb
jmp
lds
pop
mov
lods
inc
add
imul
leave
cmp
loope
push
xor
pop
test
mov
loop
and
jnp
sti
ja
in
mov
sti
ret
xor
xchg
imul
ficompl
jmp
pop
inc
popf
sub
jo
sbb
mov
bnd
pop
dec
mov
push
sbb
xchg
fsubrs
or
cmc
mov
and
jl
das
xor
add
mull
cmp
jbe
stos
inc
out
js
fisubrs
std
dec
insl
mov
jne
jp
push
or
mov
cmp
call
ljmp
dec
and
movsl
cs
pop
cmp
movsl
js
int
aad
outsl
lahf
cli
inc
mov
mov
outsl
loope,pn
shrd
sahf
nop
add
mov
outsb
pop
and
pop
icebp
lahf
pop
mov
push
insb
cmp
push
add
sbb
xchg
jae
add
mov
mov
sbbl
push
insl
insb
xchg
sbb
imul
fcomps
and
jo
add
notb
sub
cmpsb
sub
roll
sbb
push
mov
mov
cmp
flds
xor
xlat
pop
mov
mov
xor
pop
test
test
data16
xchg
test
scas
aaa
jmp
add
xlat
pop
loopne
fnstenv
sub
fdivs
inc
jg
xchg
xchg
xchg
mov
inc
mov
push
xlat
xor
pop
adc
popf
push
mov
ja
subb
ja
cmp
not
lea
hlt
mov
not
jg
sbb
cmpsb
pop
test
adc
popa
xor
or
pop
xchg
adc
gs
push
test
int3
mov
sti
mov
int3
push
mov
fisubl
or
jecxz
jb
push
sbb
lea
addl
jmp
cmp
aam
outsl
sub
pop
fdivl
sub
leave
push
mov
fisubrs
xchg
cmp
mov
dec
imul
mov
in
mov
pop
add
cltd
lods
mov
inc
add
cmp
filds
mov
sti
pop
mov
mov
stc
std
or
sub
in
jnp
sbb
inc
das
inc
mov
in
flds
nop
nop
sub
roll
pop
xchg
jecxz
dec
cmpb
cltd
and
imul
sbb
stos
nop
jb
les
out
data16
push
push
sbb
fmul
rcrb
je
fsubrl
aas
jg
test
pop
push
mov
dec
jle
clc
popf
cli
lahf
mov
adc
mov
iret
inc
sbb
ss
dec
test
call
and
aad
pop
and
sbb
xor
loop
gs
fsubrl
scas
leave
adc
in
adc
pop
sahf
out
mov
call
outsb
pusha
test
rclb
or
outsl
movsb
push
mov
mov
fisubl
mov
sub
xchg
adc
mov
mov
pushf
outsb
or
or
cmp
mov
loopne
pop
data16
movaps
mov
andl
push
sti
negl
push
int3
jmp
dec
icebp
insb
cli
lret
lahf
sub
push
in
push
fs
cld
sti
jg
mov
shlb
sub
jp
pop
imul
sbb
es
sbb
inc
xlat
sbb
pop
stos
pusha
mov
xor
js
push
js
test
icebp
mov
out
sub
cmp
pushf
and
push
jns
fidivrl
jae
pop
cld
mov
push
lds
out
pop
lcall
leave
int3
ljmp
sbb
daa
stos
popa
gs
cmp
dec
add
int
adc
arpl
lret
push
popf
shlb
scas
jb
dec
in
jmp
adc
and
insb
jmp
and
jae
adc
push
jb
popa
fisubrl
stos
pop
dec
pop
mov
imul
inc
and
repnz
pop
mov
pop
mov
js
jae
lret
jmp
mulb
inc
ret
stos
ja
push
test
jle
mov
addr16
ret
cmpsl
jmp
xchg
decl
rorb
inc
mov
out
adc
xchg
data16
loope
hlt
popf
popf
dec
ja
fisubrl
icebp
insb
adc
xlat
stos
mov
mov
ret
push
mov
inc
push
dec
fsts
push
and
hlt
dec
inc
push
fbld
mov
and
or
lahf
dec
jp
inc
or
xor
or
jo
xchg
sarl
mov
push
jmp
pusha
xchg
push
xchg
and
pop
sbb
cmp
add
aaa
sbbl
cli
repnz
sub
xor
loop
cmp
call
dec
jle
repz
mov
sbb
xor
and
out
out
mov
shll
and
adc
push
jecxz
daa
lock
stos
jae
fsubr
ss
add
cs
dec
push
insb
rol
int
xlat
mov
out
cmpb
pop
sbb
jne
mov
test
test
inc
adc
mov
pusha
bts
fcomip
shlb
and
xor
rclb
out
xchg
push
mov
inc
push
addr16
lods
mov
fsubl
jg
sub
xchg
movsl
rclb
push
mov
fucomp
sub
adc
andl
cmp
fisubrl
pop
jmp
and
icebp
mov
push
add
xor
or
in
add
es
cltd
and
xchg
jg
movsb
dec
or
pop
in
shld
cmp
push
xchg
stc
sub
mov
sub
sub
add
jno
xchg
push
shll
out
xchg
dec
sbb
in
scas
ja
or
jbe
lds
ja
jb
adc
lods
push
data16
xor
lcall
inc
sahf
xchg
xchg
mov
es
mov
sti
pop
rorl
clc
in
gs
orl
sbb
sub
das
lret
jae
jl
aaa
mov
xchg
mov
stos
sub
lea
lret
mov
cltd
mov
sub
mov
mov
lds
lret
daa
adc
jns
jp
cld
leave
sub
dec
ds
sub
xlat
push
and
adc
addb
das
sti
lods
hlt
cmp
xor
dec
add
push
pop
jle
pop
or
xor
jae
and
or
mov
icebp
add
xchg
imul
jle
cmp
sahf
and
fnstcw
lds
jmp
pushf
jno
push
inc
push
cmp
adc
mov
jmp
dec
out
aaa
loop
lods
rcrl
push
xor
cmp
in
pop
cmp
mov
pop
xor
loop
das
jo
mov
adc
mov
jns
lret
out
bndstx
inc
pushf
enter
jbe
lock
mov
and
inc
lods
dec
in
roll
out
lcall
mov
cmpsl
mov
ss
ficoml
clc
les
imul
mov
sub
in
push
dec
pop
call
cmp
nop
mov
movsb
push
subl
mov
inc
data16
repz
dec
sbb
test
cmpsb
push
mov
sub
movsl
dec
xchg
sbb
jge
sahf
push
mull
fsubrl
inc
xchg
adc
push
jmp
or
fs
pop
sub
jns
outsl
bound
push
pop
pop
je
fcmovbe
cmp
ss
insb
sub
ret
jg
testl
ret
idivb
les
mov
add
xchg
fs
or
and
cmp
fiadds
loope
call
and
icebp
repz
and
or
int3
popf
sbb
seto
adc
or
and
fnstcw
push
jnp
cmpsb
les
gs
cmp
inc
sbb
push
or
testb
stos
pop
iret
icebp
movsl
imul
sarl
gs
mov
repnz
ss
cltd
or
pop
sbb
mov
das
ds
stc
addl
out
cmpsl
fdivs
pop
adc
xor
icebp
lods
sbb
cmc
fiadds
arpl
push
lahf
repnz
shrl
aas
pop
ljmp
pop
jns
and
sbb
mov
sbb
adc
or
pop
pop
inc
mov
push
scas
fwait
and
aaa
sahf
push
inc
push
lock
add
ss
xor
gs
push
push
or
add
xor
cpuid
sbb
pop
xor
not
mov
packsswb
icebp
cwtl
fisubrs
jecxz
jp
mov
test
in
and
lahf
pusha
cmp
shl
leave
push
xor
lret
fistl
pop
xchg
pop
shll
cmpsl
adc
and
enter
push
sub
sub
std
pop
cmp
push
lea
je
push
cmp
test
jnp
mov
sbb
push
rol
sub
xchg
push
pop
fsts
loope
pop
mov
push
add
sbb
jmp
xchg
stos
sti
mov
mov
stos
insb
xor
pusha
fcomp
jmp
jle
jno
cmovne
dec
icebp
push
push
sbb
int3
es
into
pop
lcall
push
addr16
xchg
mov
pop
test
ret
outsl
xor
add
xchg
lods
add
adc
test
aam
fmull
add
cmpb
xor
pusha
lahf
lcall
pop
add
xor
bound
jge
push
dec
dec
jp
fnstsw
jbe
mov
add
and
loopne
aam
sbb
pop
sbb
rcl
fdivs
mov
xchg
cmc
jo
fwait
xlat
in
gs
push
mov
adc
mov
loopne
call
dec
pop
mov
mov
lea
jns
test
jl
bound
in
xor
cltd
movsb
lret
jle
dec
les
mov
iret
dec
iret
pop
mov
mov
outsb
xchg
popa
mov
jle
cld
push
sub
lea
repz
pop
ljmp
ljmp
xchg
popa
sahf
aad
dec
call
pusha
dec
mov
jl
add
dec
dec
mov
jb
sbb
add
jmp
movsb
out
pop
mov
cmp
pop
push
dec
cmc
add
pop
dec
aaa
push
jae
mov
fnstsw
fidivs
sbb
mov
xor
ds
mov
mov
js
xor
fwait
push
outsb
add
aaa
add
pop
daa
cmp
cmp
fcomip
push
push
int
mov
inc
imul
cltd
movsl
jns
outsl
pop
add
inc
cmp
xchg
fldcw
fdivrp
dec
pop
mov
notb
sub
data16
repnz
sub
and
cmp
popf
cmc
and
adc
mov
inc
test
mov
adc
cwtl
pop
imul
pop
dec
sbb
mov
cmp
std
push
mov
adc
out
xor
jbe
jns
dec
sbb
sahf
pop
lret
lret
mov
out
cs
mov
dec
in
into
pop
jns
xchg
loope
adc
daa
outsb
pop
fmuls
rcll
mov
insl
in
cltd
popa
mov
fnstenv
aaa
or
dec
iret
icebp
repz
adc
sbbb
stos
fbstp
inc
add
sub
inc
or
mov
mov
test
icebp
sbb
cmp
sub
div
push
xor
lock
out
cmp
dec
adc
rcrb
xchg
faddl
loopne
mov
mov
mov
scas
daa
lahf
in
xchg
in
fimuls
mov
repz
mov
jb
mov
lahf
insl
lret
pushf
xchg
jge
mov
dec
cld
frstor
jbe
inc
stos
ret
movsl
mov
pop
push
xchg
movsb
cmp
mov
sti
out
ficompl
push
arpl
inc
lods
add
das
dec
sbb
dec
shrb
cs
bound
and
aad
mov
mov
cmp
call
sbb
outsb
imul
cld
fwait
pop
pop
lods
push
sub
fdivrl
inc
popf
fdivl
cmp
call
dec
out
mov
sbb
inc
ret
fldcw
cmp
mov
dec
and
loope
call
rcrb
lahf
dec
mov
shrl
outsb
sub
adc
xchg
test
mov
adc
fsubrs
inc
repnz
lret
idivb
xor
pop
call
stc
xor
decb
cmpsl
inc
xchg
cmp
arpl
push
cmpsl
std
mov
mov
das
out
outsb
ljmp
cltd
add
adc
sbb
out
jno
and
inc
int
test
cwtl
mov
inc
lods
or
jg
pop
out
mov
test
mov
push
xchg
cld
fs
shlb
rclb
jno
iret
xchg
repz
sbb
pop
push
sub
pop
mov
or
lret
nop
dec
xchg
push
test
pop
cld
jp
mov
adc
fistl
pop
aam
sbb
mov
mov
dec
cmpsl
mov
push
jmp
rorl
mov
aad
pop
fmull
xor
xchg
xor
stc
gs
adc
popa
inc
neg
fwait
into
cltd
cld
test
repz
mov
outsb
add
out
mov
lock
push
add
jno
mov
sbb
sbb
xchg
fldcw
aaa
stc
std
jae
movb
mov
lods
icebp
aaa
and
push
scas
cli
fldt
xchg
in
push
fistps
sbb
jb
dec
outsb
lret
stos
rcl
inc
shll
and
cmp
je
add
mov
cmp
inc
sub
pop
divb
pop
in
stc
sbb
aas
scas
ret
or
or
cli
loope
je
xchg
dec
js
lods
or
cmp
lds
mov
inc
sub
or
or
mov
cmp
cmpb
pop
adc
out
xor
pop
sub
rcll
adc
push
sbb
cwtl
stos
std
aaa
jne
jbe
ret
mov
adcl
js
add
sbb
lods
or
lds
sahf
xor
pop
das
xor
pop
mov
lret
add
adc
inc
sarb
xor
jge
pop
adc
js
popa
mov
aaa
dec
adc
cmp
inc
outsl
jbe
mov
loope
sbb
jmp
adc
xchg
sbb
fbstp
stos
mov
xlat
add
push
jp
jne
rcrl
mov
clc
iret
adc
hlt
add
mov
lods
mov
icebp
push
repz
arpl
arpl
rcrl
push
js
mov
cltd
and
xor
shrl
sbb
xor
cmp
or
lea
pop
and
dec
outsl
insl
inc
ret
or
xor
pop
cmp
dec
or
adc
xchg
sti
sub
mov
sarb
insb
daa
jnp
add
int3
mov
pop
call
fadds
jae
cmpsl
xchg
mov
pop
lods
cmp
sbb
dec
jp
dec
xchg
enter
ss
out
icebp
jmp
jnp
mov
dec
sbb
std
dec
push
loop
lcall
sub
pushf
imul
xor
lret
adc
xchg
ss
xor
shlb
add
jmp
add
jecxz
add
cwtl
scas
pop
ret
jmp
inc
xor
pop
push
pop
stos
sub
aam
pusha
jg
sub
nop
and
in
push
pop
pop
subb
fcomps
mov
add
mov
test
les
push
int
xchg
add
xor
mov
fstpt
inc
int3
adc
aas
fbstp
lods
inc
mov
fiadds
cmp
mov
mov
lds
pop
mov
rorb
outsl
sbb
push
cmc
test
jo
mov
cli
shll
pop
push
xchg
inc
jle
push
int
dec
cli
shlb
stos
and
sbb
cli
xor
idiv
hlt
add
ss
lret
jns
pop
ljmp
mov
out
filds
or
jno
clc
xchg
inc
or
insl
call
push
xchg
rcrl
jno
dec
sbb
in
cmc
fsubrp
mov
xchg
mov
mov
jmp
into
jbe
or
mov
rcl
jnp
repnz
pop
pop
xor
fsubrs
dec
mov
out
fildl
pop
pop
xor
cmp
cmpsb
cmpsb
mov
ficoms
fcoms
imul
jmp
adc
lea
pushf
dec
std
push
arpl
popa
xor
and
cld
jle
sbb
xchg
jmp
adc
jmp
add
xchg
push
cli
gs
movsb
je
imul
push
push
xchg
mov
scas
shl
and
mov
scas
cltd
mov
adc
xchg
xchg
mov
mov
cmc
loope
xchg
jg
sbb
mov
inc
int3
inc
sbb
lods
repz
inc
hlt
scas
andl
loop
pusha
fcom
xchg
insb
jnp
xor
mov
add
push
daa
sub
movsl
xchg
dec
push
jge
je
pop
inc
push
mov
cmp
mov
out
jmp
mov
pop
and
dec
or
lds
mov
cmp
jbe
adc
or
fs
push
push
cmpsl
pushf
rorl
push
mov
pop
push
xchg
mov
mov
jge
mov
jmp
mov
xchg
enter
faddl
scas
xor
in
cmp
mov
add
add
push
fbld
and
lods
lock
aaa
push
mov
fiaddl
dec
add
cs
sahf
hlt
push
fs
pop
daa
popf
xchg
mov
xor
xchg
mov
popa
rorb
sub
xchg
repnz
scas
repz
je
push
bound
pop
in
xchg
popaw
cmp
stc
fs
lock
jle
cmpsl
lods
pop
arpl
lcall
pop
mov
pop
testl
out
cmc
push
ds
fiaddl
in
inc
and
inc
xchg
arpl
lods
loop
and
insl
xor
dec
pop
mov
in
and
inc
ret
push
sahf
push
lcall
call
add
lret
insl
leave
repnz
sub
inc
jg
dec
mov
push
mov
xchg
adc
mov
push
push
mov
or
test
push
dec
inc
shll
ds
cmpsb
shrl
inc
jg
xorb
outsl
mov
sbb
cmp
or
aad
cmpsl
fadds
pushf
mov
ret
pop
inc
aam
mov
outsb
lcall
gs
mov
mov
mov
add
ret
xchg
js
push
loop
add
das
roll
mov
xchg
inc
or
mov
outsb
ss
loop
enter
cmp
imul
test
fwait
popf
mov
jl
and
sbb
lods
cmp
outsl
cmpsb
inc
inc
push
jg
pop
pop
add
ret
imul
or
xorb
in
bound
insb
mov
pop
pop
popf
loopne
sub
repz
mov
jbe
lahf
adc
repz
stc
popf
push
xor
jnp
pop
fsincos
subl
pop
in
inc
out
stc
notl
inc
test
cmpsb
xchg
sub
xor
in
sbb
mov
std
xchg
sub
pusha
push
testb
sbb
ficoms
fiaddl
aam
jecxz
daa
xchg
in
cmpl
es
call
push
repz
and
in
out
and
lods
sbb
pop
fadds
stc
sub
push
pop
adc
rcrl
jp
rorb
jecxz
dec
jb
xor
movsl
cld
das
mov
mov
setnp
sbb
hlt
sti
fidivs
fwait
stos
fimuls
add
nop
jmp
push
mov
fisttps
fwait
out
aaa
lds
ss
mov
xchg
fxam
fisubrl
rep
in
or
push
push
push
cmpsl
mov
dec
push
js
or
jge
cmp
out
dec
adc
adc
subl
mov
sub
sub
in
mull
in
rcrb
push
daa
cmp
daa
aas
cmp
and
aas
xlat
gs
sbb
sub
lods
inc
sar
pop
mov
mov
fbstp
insl
fisubrl
call
clc
mov
jecxz
movsl
ret
xor
xchg
stos
xchg
xor
add
adc
int
add
mov
pop
notl
divl
push
lods
es
je
push
mov
mov
mov
mov
pop
jp
xchg
adcb
repnz
lret
test
mov
or
test
xchg
push
dec
mov
xor
outsl
in
dec
xor
std
rclb
jl
mov
jp
jp
pop
push
sub
es
iret
pop
push
nop
mov
cld
sarb
sub
xor
cmp
push
lock
fldt
imul
div
jmp
add
xor
jl
push
cmpsl
pusha
or
or
mov
push
lods
mov
ret
push
cld
push
fsub
jbe
mov
lret
dec
dec
aad
or
add
jb
sub
cmp
repnz
rorb
in
ss
dec
jo
jbe
fnstcw
test
aas
pop
mov
mov
lret
sbb
mov
sub
dec
shll
push
mov
das
fsubl
popf
fsubrl
xchg
mov
outsl
cli
mov
xor
push
out
xor
xchg
fwait
or
mov
outsb
das
dec
push
lds
inc
ret
push
or
mov
ss
mov
out
fists
stc
lret
jle
and
movsl
pusha
pop
cmpsl
xor
mov
rorb
xchg
push
xchg
adc
sub
mov
push
pop
popa
fwait
or
cmp
mov
xchg
insb
adc
test
and
xorl
xchg
pop
popf
insl
pop
mov
movsl
jne
mov
ret
cs
in
mov
cmp
inc
fsubp
hlt
aas
adc
or
sbb
pushf
lds
push
adcb
sbb
mov
popf
in
aaa
sbb
js
decl
gs
jmp
jge
or
xchg
mov
iret
push
fucomip
pop
dec
xchg
lahf
sbb
mov
or
sbb
int
add
inc
in
sbb
insl
or
divl
inc
dec
push
mov
flds
sbb
sbb
out
pusha
dec
int3
sahf
out
inc
push
inc
testl
mov
aas
jns
jg
sbb
mov
stc
mull
outsl
sub
les
insb
adc
andl
mov
leave
mov
or
push
jb
insl
out
int3
mov
fimuls
add
or
imul
mov
int
cs
jl
loope
bound
lods
or
es
data16
adc
add
and
adc
pop
test
push
fsts
testl
stc
jb
sarb
invd
xchg
decb
orb
push
sub
jge
xor
divl
les
cmp
aad
test
mov
scas
adc
push
jl
pop
ret
outsb
pop
sub
dec
push
cmpsb
jmp
inc
repnz
fnstsw
pop
mov
xor
push
inc
in
cmp
adc
mov
stc
ss
rcl
in
fmulp
jmp
inc
sub
test
push
pop
mov
push
pop
cli
mov
inc
mov
jo
jnp
scas
dec
orb
in
outsb
inc
cmp
sahf
xchg
sar
outsb
jne
jnp
sub
jb
dec
jbe
aad
sti
or
sbb
pushf
imul
xor
or
dec
adc
test
fisttpll
repz
cltd
fistpll
pop
out
mov
inc
mov
jl
mov
inc
mov
push
cmp
bound
daa
jno
inc
outsl
fsts
shl
icebp
jb
dec
adc
popa
pop
adc
repz
ja
lret
test
mov
icebp
or
jnp
shlb
push
fists
pop
mov
push
lock
jmp
jae
jge
cwtl
sbb
cmp
in
pop
out
mov
push
cli
push
jg
mov
lahf
push
pop
cmp
cs
pop
mov
clc
or
or
dec
add
push
les
popa
jno
ja
xor
ds
shr
xor
xor
fmuls
out
mov
dec
xorl
sub
enter
inc
fs
push
adc
fsubr
shll
jbe
inc
popa
cli
fdivl
cmp
mov
mov
and
cmp
push
dec
insb
jp
pop
push
inc
pop
loope
push
lahf
lock
sub
das
insl
sub
hlt
fimuls
xchg
push
je
mov
rol
das
jbe
mov
xor
xchg
or
mov
xor
jne
jns
loop
add
test
or
push
pusha
dec
ds
movsb
jb
ret
jno
stc
cmp
out
pop
out
stc
push
push
jno
mov
clc
mov
aad
sub
and
ljmp
mov
insb
cld
aam
or
stos
icebp
iret
adc
mov
or
das
test
arpl
ja
mov
daa
xor
sub
cmp
test
rolb
or
push
dec
add
inc
mov
mov
sahf
fistps
xchg
insb
mov
repz
rep
testl
out
shrb
hlt
hlt
cld
mov
call
cwtl
xchg
stos
cwtl
ror
fcoms
lock
lds
sbb
push
scas
hlt
sbb
cmpsb
or
xor
jmp
movl
sarl
jo
xchg
arpl
flds
mov
adc
cli
lahf
dec
add
and
mov
loope
cld
fs
inc
mov
mov
inc
orl
loopne
inc
xchg
nop
aaa
push
icebp
inc
inc
add
push
xchg
test
dec
xchg
cld
das
cmp
into
stos
sarl
out
cmp
arpl
push
jnp
dec
xor
int3
push
clc
into
cli
pop
jo
dec
sub
outsb
or
sub
or
jb
ja
add
cmpsl
dec
ficoms
into
push
std
mov
imulb
das
fdivrs
popf
jo
rclb
sub
and
mov
cs
popa
imul
jge
imull
push
or
clc
in
push
adc
lock
in
or
fprem1
pop
loope
inc
notl
and
dec
in
and
and
jg
inc
inc
dec
sub
fldcw
movsl
popf
and
cmp
jns
lea
mov
aam
add
cltd
in
cmp
rorb
mov
jge
push
pop
pop
mov
push
inc
into
icebp
add
mov
inc
stos
cltd
mov
push
xchg
bound
stos
data16
in
aas
dec
jmp
mov
mov
sub
in
pop
sbb
outsl
aam
adc
int3
push
adc
addr16
in
or
jge
xor
popf
ret
xchg
mov
test
mov
sub
add
xor
cld
shrl
scas
add
fildll
mov
icebp
and
mov
popf
cmpsb
add
aaa
test
ret
push
push
push
xor
lods
call
push
or
aad
add
fsubs
push
sbb
push
xor
and
xchg
lds
mov
mov
divb
mov
mov
into
inc
mov
inc
push
int3
rcr
dec
aam
into
mov
pop
mov
leave
addr16
mov
and
cs
mov
push
xchg
mov
xor
test
sbb
xchg
mov
out
cmpsb
inc
insb
movsl
das
jb
xchg
push
jmp
insb
push
ja
bound
pop
xor
and
into
daa
pop
push
pop
mov
and
fidivs
js
mov
test
lods
ja
and
bound
lret
test
clc
ret
sbb
test
lret
jmp
movsl
push
popa
insl
xchg
and
cmpsl
stos
mov
fs
inc
jmp
and
out
aas
dec
xchg
jnp
popa
xlat
jne
clc
daa
fdiv
pop
fwait
xchg
inc
shlb
roll
movsl
inc
jnp
add
rcrl
xchg
and
test
lcall
pop
xor
pop
xchg
cmp
cmp
push
sbb
loopne
loop
mov
or
pushf
popl
shrb
push
movsl
cltd
popa
jno
sbb
inc
mov
inc
int
in
int3
dec
push
sbb
or
adc
fcoml
aaa
cld
lds
add
les
bound
clc
scas
stos
xor
xchg
das
push
clc
popa
push
cmp
cli
lea
mov
lds
in
adc
fs
xlat
sbb
add
test
cwtl
mov
mov
push
mov
push
mov
or
mov
out
lret
pop
pop
ret
mov
push
or
fmull
mov
les
lret
fists
add
stc
pop
xchg
pop
add
and
adc
imul
or
in
test
or
fwait
xchg
jbe
xchg
sub
xchg
mov
dec
cmp
jl
stos
daa
xchg
inc
pop
cmpsl
jae
mov
aad
pop
add
arpl
fld
xlat
mov
pop
adc
sti
popl
cmp
das
jnp
jl
jno
jmp
orl
hlt
sbb
xorb
imul
lret
inc
jle
stos
jnp
xchg
cmpsb
hlt
inc
mov
lcall
sbb
jae
or
cli
mov
xchg
cltd
fwait
mov
sahf
aas
subb
insl
pop
pop
ret
bound
negl
nop
fnsave
int3
cmp
daa
aad
out
fwait
mov
rorb
push
pop
setl
lds
movups
es
out
lds
sub
xor
xchg
cltd
mov
inc
mov
lret
sub
rcl
mov
add
out
mov
add
lahf
sbbl
mov
xchg
mov
daa
mov
in
and
addl
xchg
cmp
lret
cmpsb
jnp
or
aas
sub
adc
cwtl
mov
data16
xor
inc
push
sub
sub
sbb
mov
into
addl
rcr
and
in
push
jg
fs
jo
lock
add
stos
ret
pop
fs
repnz
lock
cvtdq2ps
das
outsl
xchg
cvtps2pi
imul
jle
sbb
xor
js
insl
xor
outsl
fisttps
push
xor
orl
push
add
cmp
repnz
lret
call
fisubrl
xchg
test
add
push
rcr
lret
into
xor
cltd
insb
mov
cs
repnz
dec
jo
movsb
dec
push
sub
sub
incb
rcrb
pinsrw
fstpl
mov
fisubrl
insb
add
mov
arpl
pop
xchg
ficomps
popa
sub
jg
cmp
jns
sbb
push
sarb
add
enter
lock
lea
outsl
cmp
bound
out
dec
lods
popa
and
ljmp
ret
pop
mov
in
jecxz
shlb
push
or
inc
cltd
lret
icebp
leave
add
adc
dec
ficoms
stc
mov
mov
inc
shl
jne
fcompl
insb
hlt
pop
outsl
inc
push
fsubrl
dec
daa
iret
lds
jmp
sub
xchg
xlat
xor
xchg
mov
jae
filds
adc
cs
fsts
sbb
cmpsl
jbe
dec
js
ffree
imul
inc
pop
xlat
out
stc
jecxz
scas
clc
pusha
in
or
scas
and
pop
lret
xchg
pop
pop
ds
gs
xchg
mov
inc
mov
dec
mov
cmpsl
xor
push
imul
inc
xor
stos
scas
pusha
or
mov
stos
std
dec
or
das
add
fmul
roll
add
jg
cmpps
ss
testb
push
mov
nop
add
fnstcw
into
jmp
pop
pop
cwtl
jnp
add
xor
fs
push
or
pop
jae
ss
repz
sbb
sti
ss
push
inc
pushf
ljmp
and
int3
mov
xchg
icebp
mov
movsl
pop
sub
jbe
mov
test
fcmovnu
std
aam
cmp
push
push
mov
add
dec
mov
add
dec
movl
call
mov
ret
stos
jae
addr16
inc
rolb
gs
jbe
mov
repz
jmp
mov
sub
dec
cwtl
imul
addr16
es
adc
sarl
cmpb
push
fnsave
in
out
add
clc
test
sbbl
cmpsl
cmp
push
stos
bound
popl
stc
cli
loop
jle
sbb
xor
dec
dec
iret
mov
or
lods
lods
iret
mov
out
cmc
sub
xchg
add
cli
and
jns
out
pop
xor
or
xchg
arpl
test
sti
into
fdiv
sahf
out
imul
cwtl
rorb
es
cmp
inc
lcall
gs
xchg
inc
das
int3
inc
cld
push
pusha
fldenv
sbb
adcl
nop
push
mov
arpl
inc
punpckhdq
imul
shll
pop
push
lahf
rcll
test
add
enter
out
lret
jns
mov
xor
aam
cmp
mov
mov
dec
pop
mov
fs
add
movsl
scas
vpcomw
or
push
ret
sbb
adc
lock
add
sub
mov
fadds
xchg
sbb
mov
sbb
push
cmc
push
scas
test
jg
pusha
adc
or
inc
lock
xorl
or
and
ja
out
mov
add
pusha
or
mov
pushf
dec
aad
fcomp
jle
pop
or
mul
dec
push
sub
enter
ret
or
pop
add
mov
in
pop
or
jmp
lret
jge
jo
repnz
lock
stos
outsl
ss
aaa
lods
lods
aas
cld
cmpsl
cltd
out
xchg
push
mov
pop
stc
sub
xchg
cmp
ds
mov
lret
in
mov
cmp
adc
lret
fs
sub
repnz
pop
mov
sti
insl
sarl
icebp
mov
jmp
jne
in
or
hlt
mov
xchg
add
or
ret
test
fdivs
mov
and
or
iret
std
or
cmove
data16
loop
enter
xchg
inc
leave
xlat
repz
loope
dec
mov
push
add
incb
pusha
mov
cmp
inc
leave
dec
mov
pop
je
dec
jg
xlat
ja
xchg
adc
add
inc
pop
dec
push
jp
fisubs
rcrl
lea
mov
jno
pop
push
iret
inc
lea
push
and
sahf
cmpsl
fmull
jno
outsl
dec
mov
icebp
dec
ret
mov
div
jo
push
mov
je
les
cmc
ljmp
int
or
mov
mov
into
subl
jle
jo
repz
bound
push
push
sub
addl
push
loop
and
cld
mov
pop
into
mov
lret
inc
xchg
jecxz
ret
subb
ret
push
dec
iret
add
inc
test
mov
jne
and
cmc
xor
out
mov
mov
xchg
push
js
jl
mov
idivl
xchg
cltd
pop
inc
jge
gs
jecxz
movsl
loopne
mov
sti
out
in
fnsave
test
sti
adc
testb
sub
jmp
cmc
roll
mov
xor
pop
dec
sti
out
pop
add
mov
add
loopne
jne
add
gs
xlat
inc
aaa
repz
mov
dec
test
shr
or
bound
pop
push
stos
and
cmp
dec
es
xor
stos
inc
cli
fsub
sbb
sub
pushf
rcrb
mov
and
out
mov
and
in
xor
push
or
scas
aas
pop
ss
adcb
out
inc
push
stos
sub
cmp
cli
loope
fsubs
and
pop
mov
fcoml
lahf
lods
repz
push
cmp
cs
fcmovne
lret
fadd
arpl
dec
js
add
inc
mov
adcl
xchg
add
scas
cmc
fsubl
pop
mov
inc
xor
mov
add
xchg
xchg
push
int3
adc
shlb
pushf
shll
iret
sub
icebp
xchg
mov
test
loopne
mov
adc
add
push
shll
adcb
cld
vpsubusw
inc
cmpl
xlat
mov
or
mov
lret
jnp
adc
pop
push
cmpsl
pop
sub
or
sub
jmp
mov
and
cmp
rorl
leave
xchg
dec
fs
divb
mov
sub
jle
xor
and
push
scas
or
jge
push
cmc
repnz
pop
adc
test
adc
and
pop
xchg
fdivs
rol
test
hlt
push
mov
push
inc
and
fnstsw
mov
push
adc
inc
lods
cltd
cltd
fildl
sbb
loop
std
movsl
inc
test
mov
sub
push
pop
sub
and
and
cmp
xor
jp
push
rcll
sbb
mov
rclb
cmpsl
cmpsb
cmpsl
mov
jae
add
movsl
mov
in
push
sbb
adc
inc
fsubl
shlb
jb
add
dec
mov
pop
fistl
xor
mov
fcompl
or
xor
mull
arpl
xlat
nop
jle
jp
enter
mov
popa
inc
or
loopne
daa
push
insb
xor
jne
sti
mov
mov
dec
and
dec
icebp
xor
sub
jns
sbbb
pop
pop
mov
cmp
test
fdiv
and
cmpsb
push
shrb
das
aas
mov
cmp
add
cwtl
sbb
mov
mov
add
aas
mov
das
filds
decb
xor
mov
sbb
pop
subl
loop
stc
shlb
adc
xor
sti
push
repz
out
mov
imul
push
xor
cli
xor
mov
adc
cmp
cmp
cmc
rorb
orl
arpl
fisttpll
xchg
jmp
mov
mov
lock
cmc
pop
mov
mov
pop
cmp
movsb
jecxz
or
aaa
or
in
mov
sbb
repz
ds
mov
sub
cmpsb
sbb
and
jle
pop
ds
mov
xchg
pop
fstp
xor
sub
sbbl
push
jmp
or
adc
mov
lock
fiadds
cltd
repnz
mov
push
clc
push
sub
push
push
cmp
sbb
cs
les
sub
test
dec
mov
mov
adcl
cmp
xchg
adc
pushf
insb
cltd
mov
mov
incb
mov
jecxz
or
pinsrw
cmpsl
sub
adc
mov
xor
test
cmp
mov
orl
pop
push
orb
adc
data16
push
xor
stos
in
push
add
insb
xor
cmp
dec
cmp
les
mov
stos
add
push
mov
push
push
adcb
push
jl
or
stos
pop
in
push
add
sbb
sub
xchg
or
cwtl
sbb
movsb
pop
push
pusha
out
mov
sbbl
push
mov
push
mov
mov
jae
or
gs
lret
fincstp
xchg
inc
test
mov
inc
mov
pop
arpl
xchg
test
xchg
sbb
xchg
lcall
lcall
outsb
sub
push
mov
jp
cmp
or
mov
pop
mov
sub
iret
mov
iret
cmp
mov
dec
push
xor
repz
xchg
adc
movsl
mov
cmpsb
cmp
pop
test
pushf
and
test
ljmp
nop
loope
mov
adc
cmp
or
jne
inc
mov
push
or
addr16
fsubl
sub
pop
hlt
ss
data16
add
ss
or
cld
or
mov
inc
jbe
flds
out
mov
gs
shrl
xor
call
test
gs
inc
imul
fwait
int3
mov
mov
imul
or
or
cld
sub
fnstsw
dec
push
push
push
roll
mov
js
dec
and
orb
movb
mov
out
mov
ficomps
ret
add
stc
scas
xchg
fmul
loop
cmpsb
sbb
inc
filds
push
add
add
aas
push
imul
xchg
shlb
fildll
fwait
add
and
dec
test
mov
insl
sbb
jl
jb
in
push
dec
xchg
jo
jmp
cmp
fcmove
fisubrs
add
aam
nop
es
jle
popf
pop
incl
imul
dec
mov
pop
js
fs
into
or
mov
das
je
addb
fsubr
adc
or
add
add
int
cmp
mov
rep
xor
cltd
push
repz
pop
outsb
add
push
bndldx
js
repnz
xchg
and
cmp
addr16
xchg
add
mov
fsubl
mov
mov
fistpll
jmp
xchg
add
femms
test
jecxz
add
out
sti
cmp
outsl
stos
push
dec
movsl
push
pop
leave
nop
adc
insl
xor
shr
or
insb
sbb
push
in
dec
dec
and
icebp
mov
data16
std
cmp
pop
jo
lret
mov
xchg
pop
add
test
xorl
loopne
ja
mov
pusha
pop
fwait
in
pop
sbb
or
shrb
pusha
rorl
adcl
mov
cmp
ficomps
in
out
inc
pop
add
stc
sub
add
sbb
pushf
roll
popa
dec
roll
in
test
pop
xor
inc
dec
into
arpl
mov
mov
int
and
dec
pop
sub
es
imull
stos
pop
mov
cmpsb
push
ljmp
sub
push
iret
popa
sub
jl
push
cmp
std
cmp
cmpb
add
pmullw
push
push
addr16
out
mov
xchg
push
inc
jg
outsl
loopne
inc
negb
mov
lret
jl
sbb
or
inc
push
mov
iret
add
clc
pop
sub
and
dec
mov
lock
aam
dec
arpl
pop
push
mov
cltd
mov
dec
mov
imul
rorl
es
add
dec
fsub
jae
push
or
inc
xor
adc
enter
xchg
lock
adc
sahf
lret
movsb
outsl
jle
mov
adc
add
add
rcl
ret
ficoms
jb
stos
mov
js
jae,pt
bound
push
push
cmpsl
jno
mov
orl
mov
pop
rorb
int3
inc
je
push
in
iret
cmpsb
scas
jl
cltd
cmpsb
inc
fadds
push
jecxz
sub
add
lcall
sub
pop
mov
dec
js
fldt
and
cmp
jnp
cmp
lret
mov
js
adc
push
mov
leave
inc
iret
cmp
mov
pop
jae
mov
test
sub
sbb
jmp
std
xchg
adc
xlat
testb
int3
pop
iret
mulb
jg
fidivrl
lret
mov
stos
mov
mov
int
cmp
fnsave
fwait
jne
imul
sub
push
push
ljmp
xchg
outsb
in
push
jne
in
lods
fcoml
or
sbb
cmp
sbb
add
inc
sub
scas
push
test
add
xor
lahf
stos
rcl
js
inc
push
mov
sti
fisubl
jmp
repnz
lods
push
xchg
pop
out
and
jle
je
mov
inc
enter
frstor
xchg
je
inc
insl
dec
scas
jnp
xchg
fwait
xchg
jge
or
add
cmp
pop
xor
pop
movsl
pusha
pop
dec
movsb
sub
dec
cmpl
imul
xchg
pop
and
bound
cli
sbb
pop
add
in
icebp
pop
adc
cmpsl
jl
xchg
jp
xchg
std
push
xchg
pop
call
cs
sbb
push
mov
mov
xchg
push
inc
daa
cmpsl
pushf
subb
push
cmpsb
sub
or
std
aas
xor
xchg
pop
scas
and
mov
je
cld
aas
pusha
inc
in
les
jmp
jns
fidivl
jae
into
jo
in
sub
mov
adc
fsubrs
or
mulb
and
pop
sar
jns
push
jmp
daa
fwait
inc
push
outsl
fidivrs
push
sbb
imul
dec
xchg
imul
nop
dec
xor
xchg
addb
fwait
jae
jne,pt
mov
inc
sub
jnp
into
mov
int3
cmpb
data16
push
int
push
or
jne
cmp
push
cmp
mov
sbb
sbb
lahf
adc
or
xlat
cmpsb
fldcw
xchg
pop
sahf
stos
inc
jne
xchg
jecxz
stos
rolb
mov
mov
imulb
aam
jb
mov
enter
popa
arpl
inc
dec
outsb
lcall
popf
cmp
mov
out
push
pop
rcll
adc
sub
popa
xchg
shll
out
addr16
in
or
movl
fildll
push
shll
dec
lcall
add
pop
test
ret
xor
jno
sbb
aas
clc
and
mov
das
adc
loopne
aas
in
jp
aad
mov
push
and
xchg
push
sbbl
lret
xlat
lret
test
sub
cmpsl
add
fstpl
jbe
cmp
xor
xor
sub
lahf
in
adc
out
leave
int3
mov
and
std
cmpsl
nop
add
cmp
push
into
loope
xchg
mov
cmp
repnz
push
ds
pop
stc
lahf
stos
inc
std
stc
fs
test
loope
jne
lods
push
out
push
popa
incl
out
fidivrl
fistpl
gs
fildll
xchg
add
mov
pop
loopne
xchg
dec
jb
mov
in
ds
inc
mov
push
out
cmp
xchg
les
imulb
lock
mov
aad
xor
adc
sbb
sahf
aad
jo
lcall
sbbl
fsubs
scas
mov
xchg
cltd
add
test
cmpsb
lods
push
jecxz
cli
repz
or
es
inc
aad
mov
ljmp
add
cmpl
mov
lods
movsl
cmp
sub
jb
jns
add
ffree
ja
add
or
movsb
fimuls
sbb
sbb
xchg
andl
in
and
and
push
stos
mov
dec
inc
in
sbb
insl
xor
xor
push
inc
sbb
cmp
xor
inc
test
test
out
inc
fwait
sbb
psubsb
jo
mov
aam
jecxz
sub
mov
out
pop
add
outsb
dec
test
je
push
xor
pusha
mov
or
ss
mov
push
mov
sbb
jg
cmc
xor
push
or
repnz
sbb
addl
lds
ds
gs
fldl
rcrb
and
pop
sub
mov
sti
rcrl
stc
repz
orb
adc
in
cmp
mov
sub
pop
loopne
negb
std
xor
out
sub
adc
push
out
lock
lea
cmp
mov
xchg
xchg
sbb
pop
clc
orl
imul
jg
dec
sti
pop
faddp
xor
ds
mul
push
jbe
mov
pop
push
imul
sub
sub
mov
cs
mov
in
push
cli
push
add
nop
mov
jns
test
dec
jp
mov
sub
lods
insb
cmp
cmc
enter
ja
xchg
sub
push
xchg
arpl
inc
push
cltd
js
adc
cwtl
add
fdivs
cmpsb
and
sbb
out
in
push
jo
sub
jge
xor
das
and
and
add
xor
sub
int3
mov
lcall
lahf
sub
addr16
push
loope
fiadds
ds
pop
inc
push
gs
dec
jno
int3
jo
fs
xchg
sbb
mov
rol
dec
aaa
test
and
insb
cmpsl
dec
mov
sub
incb
jge
push
int3
xor
neg
fcmovb
or
add
lret
jbe
int3
and
xor
int
into
mov
add
scas
xor
outsl
or
xchg
sbbb
jbe
mov
fucom
repnz
and
sbb
xor
ds
cmp
jns
out
loope
push
xchg
inc
pop
in
or
mov
pushw
and
pop
pop
pushf
jbe
jns
mov
dec
les
cmp
inc
mov
sbb
inc
shrl
xchg
cmpsb
mov
and
push
lds
jecxz
in
xchg
popa
xchg
pop
inc
shr
andb
mov
rorl
mov
lea
ja
testl
xlat
fldt
clc
push
xchg
mov
xor
adc
icebp
lds
test
clc
mov
or
mov
mov
mov
or
fsubrl
mov
add
sbb
repnz
daa
bound
jmp
insl
sbb
dec
test
lods
cmp
insl
push
lea
inc
mov
xchg
mov
adcb
mov
jge
js
jo
mov
push
icebp
xlat
add
scas
mov
dec
xor
dec
les
xor
inc
and
inc
mov
add
xor
push
xchg
push
outsb
std
sub
cld
sti
rcrb
or
cltd
pop
push
jae
lods
movb
add
xchg
sub
notb
mov
std
push
jns
mov
fwait
loop
nop
sarb
movsb
mov
clc
stos
xchg
inc
inc
lahf
mov
and
jp
iret
cmpl
add
inc
or
mov
std
adc
scas
add
scas
cmc
or
bound
shll
fistl
stos
mov
and
mov
cmp
pop
jmp
enter
lods
icebp
das
bound
movsl
mull
insl
es
push
xchg
sub
xor
loopne
push
mov
mov
scas
xorb
gs
jge
lods
fsubs
fldenv
shrl
push
ret
addl
loopne
iret
je
cmp
inc
cs
inc
popf
sub
cmpsb
scas
iret
or
push
aad
pop
dec
js
idiv
ja
hlt
inc
movsb
imul
icebp
fisubl
fwait
cmp
sbb
adc
gs
inc
add
push
push
test
pop
inc
lds
add
mov
es
sub
cltd
je
inc
xor
cmp
stos
sbb
or
add
cmp
adc
mov
or
mov
icebp
daa
ds
sbb
out
adcl
pop
dec
out
mov
mov
psrlq
sbbb
push
test
xor
mov
out
les
or
xchg
dec
lahf
cmpb
push
ljmp
ffreep
pop
shlb
cmp
dec
push
test
xchg
cmpb
bound
inc
and
push
dec
bound
or
pop
or
mov
cld
and
fildl
jl
jg
mov
or
loopne
push
mov
bound
repnz
out
pop
das
mov
sbb
shl
adc
ds
mov
out
int3
push
jo
rcrb
sbb
xchg
sub
jae
cld
std
dec
add
fsqrt
add
inc
call
mov
stos
ficoml
add
ret
jge
mov
cli
mov
test
fistl
inc
adc
in
mov
fiaddl
cwtl
out
sti
mov
lret
outsb
cli
mov
push
cs
jne
in
and
inc
push
leave
xchg
int3
xchg
push
popf
fcmove
sbb
movsb
notb
repnz
dec
xchg
sub
pop
rorb
aam
mov
mov
mov
stos
xchg
inc
pusha
stos
movl
ret
ret
mov
inc
ds
and
repnz
mov
add
cmp
stos
xor
pushf
mov
jb
jecxz
mov
iret
scas
stos
aad
iret
repz
jns
movsb
mov
ficompl
out
lods
xchg
and
pop
push
inc
jbe
or
mov
xlat
adc
std
lds
mov
cmpsb
push
jnp
arpl
sbb
and
arpl
fcompl
icebp
pop
dec
rolb
stos
or
subb
mov
adc
icebp
cmp
shll
pop
xchg
and
inc
mov
push
xchg
xchg
and
xchg
cmp
jne
aam
mov
arpl
pop
adcb
out
aaa
arpl
pop
lods
rorb
inc
push
add
xlat
daa
xchg
or
mov
es
leave
or
loop
sti
ss
mov
and
into
out
mov
hlt
pusha
rep
pop
das
addr16
mov
xor
out
or
lgdtl
ds
or
push
pop
xor
cwtl
roll
je
or
sbb
fists
lahf
rcll
adc
cmpsl
xor
orl
mov
sahf
faddl
and
shl
adc
sarl
loopne
outsb
insl
cmpsl
xchg
add
xor
adc
pop
test
pop
sub
ds
jmp
sub
adc
jns
mov
test
fs
pop
arpl
fmull
nop
ja
cld
shlb
push
fisubrs
mov
xor
jbe
rol
daa
adc
clc
pop
push
push
stos
fcompl
fxch
pop
xlat
inc
je
push
sub
mov
jmp
jnp
or
aaa
add
mov
out
sbb
mov
and
mov
cmp
adc
and
add
call
leave
mov
cs
jo
push
or
sbb
xchg
pop
out
or
push
push
push
sti
push
lret
sbb
mov
jno
xchg
push
aaa
sub
pop
lahf
repnz
mov
shl
aam
je
jl
stos
dec
push
aaa
lods
cmpl
sub
sub
sbb
push
cmp
push
mov
or
das
cmc
cmp
or
into
dec
aaa
xchg
stos
addb
mov
pop
cmp
clc
out
xchg
ja
push
into
add
mov
xchg
ret
and
inc
cmp
and
cmp
push
xchg
fnstenv
pop
and
inc
jnp
mov
or
sub
mov
pop
xchg
dec
or
adc
mov
gs
xlat
sub
bound
dec
fstps
call
rol
jo
pop
xchg
scas
jmp
adc
sbb
jns
mov
ret
mov
je
jmp
mov
jl
daa
push
mov
cs
test
inc
lret
pop
pop
mov
aas
insl
lock
xchg
inc
in
testb
cmpsb
dec
xor
add
ss
xlat
test
mov
cmp
cmp
int3
in
scas
stc
xchg
aad
shll
insw
cmp
pop
testl
test
frstor
popf
or
and
or
lods
sarb
xor
pop
outsl
subl
mov
sub
ret
out
xor
mov
outsb
out
jg
adc
sub
jle
nop
nop
and
jge
shl
outsl
and
aam
es
fmul
loopne
xchg
aam
and
push
push
fcmovnu
fidivrs
xor
sbb
aaa
addl
mov
pushf
add
bound
push
lahf
add
inc
mov
push
test
cwtl
enter
roll
mov
adc
nop
push
push
mov
inc
mov
sbb
pop
mov
scas
or
ret
cmp
gs
cmovle
xchg
mov
or
adc
xor
adc
aam
add
call
or
test
dec
ret
enter
jmp
mov
mov
cmpsb
jnp
test
fcoml
rorl
out
sub
or
scas
outsl
pop
in
insb
mov
outsb
outsl
push
sub
lret
pop
fwait
mov
hlt
nop
and
sub
in
xor
or
es
jle
mov
aas
mov
es
test
addr16
aaa
int
outsb
outsb
shlb
bound
and
ret
xchg
add
and
xor
sub
ljmp
notb
inc
outsl
fists
mov
sbb
aaa
sbb
divl
je
adc
dec
pop
fisttpl
xchg
inc
andl
inc
out
push
mov
mov
sub
loopne
rep
xchg
test
test
aas
mov
aad
outsl
and
mov
add
jmp
mov
insb
loopne
push
ljmp
xchg
smsw
sbb
test
ljmp
mov
mov
mov
xchg
mov
mov
fidivs
pop
dec
int3
mov
cmp
roll
sub
inc
xchg
test
movsl
cli
mov
mov
push
ja
nop
sub
jne
adc
ss
inc
dec
pusha
pushf
bound
outsl
into
xor
mov
mov
mov
arpl
loope
popa
sub
cmpsb
adc
sahf
xor
dec
mov
aaa
sub
dec
pop
insb
push
popa
jmp
cmp
fcoms
and
mov
inc
sub
mov
sbb
cmpsb
andl
test
inc
imul
aam
jno
ljmp
hlt
xorl
lahf
das
dec
fwait
jne
sub
jnp
gs
sub
cli
lret
je
test
adc
ret
push
ja
les
sbb
test
insl
push
outsl
inc
push
push
ss
movsb
bound
mov
push
xchg
mov
ds
xor
xchg
or
adc
push
leave
bound
lods
jle
scas
adc
push
mov
jg
hlt
ret
mov
jno
iret
frstor
xchg
jmp
sti
fcoms
jae
mov
ljmp
push
iret
push
mov
aas
xchg
jbe
push
jle
test
xchg
out
pop
mov
xchg
jp
add
fs
mov
ds
xor
fxam
imul
outsb
or
repnz
shlb
mov
shrl
inc
in
dec
xchg
xlat
mov
fbstp
nop
sub
movsl
sahf
add
push
cmpsl
insl
xor
xchg
sbb
xor
dec
loope
xchg
and
lods
push
xor
jecxz
repz
dec
push
arpl
jle
jnp
cwtl
mov
push
mov
pop
fldt
cmpsb
int
pop
xchg
or
adc
xor
std
fwait
enter
jmp
sub
xorl
and
cmovle
sub
push
add
pop
stos
lahf
and
push
mov
jp
in
dec
icebp
push
inc
and
mov
sub
inc
add
popf
in
popa
repnz
mov
loope
mov
xlat
xor
mov
and
je
cmp
mov
lods
mov
push
call
dec
fbld
out
pushf
shll
push
sbb
testl
dec
mov
mov
mov
in
add
lds
sbb
test
jg
cltd
pop
jl
cmpb
lcall
mov
and
xor
sbb
or
mov
adc
mov
push
xchg
movsb
add
xchg
pop
xchg
or
fisttps
out
add
stos
cs
or
adc
arpl
cmp
cmp
lock
aad
rcrl
out
adc
shll
jmp
xlat
and
daa
insb
rclb
rclb
addr16
xchg
xor
shlb
xchg
jecxz
cs
mov
xchg
outsl
jo
sbb
stos
lret
and
sub
mov
into
sub
icebp
jnp
adc
scas
and
nop
sbb
rol
fistps
pop
insl
push
scas
fxch
jge
lcall
jmp
enter
push
lret
daa
or
mov
mov
dec
mov
mov
enter
mov
loopne
ds
xchg
mov
dec
jl
xchg
mov
ds
push
or
leave
les
rcr
sbb
inc
push
xlat
xchg
add
jae
out
jg
shlb
push
imul
rcl
and
mov
cmp
jmp
test
sbb
bound
lock
imul
and
adc
push
push
loope
push
inc
push
out
add
pusha
mov
mov
daa
mov
aam
lods
addb
enter
mov
into
xchg
nop
sub
scas
fst
or
outsb
push
imul
jge
or
outsl
test
in
stc
out
pop
aad
xor
jecxz
xchg
repnz
mov
shrl
pop
popa
mov
or
daa
fdiv
insl
in
jns
dec
mov
sub
xchg
stc
jnp
lea
jb
pop
pop
rolb
icebp
and
mov
ss
dec
pop
adc
jmp
dec
lds
popf
push
rcll
mov
aas
ret
mov
xchg
sbb
cmp
xor
push
mov
test
sbb
shll
xor
in
push
pop
jmp
push
pushf
neg
jne
jp
imul
mov
mov
add
hlt
add
jns
out
das
in
lcall
cmc
pop
enter
sub
hlt
xor
lods
inc
pop
insl
data16
xchg
aas
in
mov
popa
lods
dec
lods
psrlq
clc
dec
jae
mov
xchg
jae
xor
pop
adc
test
cmc
mov
xlat
xchg
xlat
in
pusha
sbb
and
jnp
and
sbb
out
fidivs
xchg
cld
adc
cmp
outsb
cmpsl
mov
cmpsb
mov
in
cwtl
out
hlt
adc
sub
cmpsl
loopne
imul
inc
ss
jmp
popl
mov
xor
ret
jmp
loopne,pn
cld
push
mov
arpl
lret
pusha
cmp
jg
push
adc
jb
and
frstor
repz
or
arpl
mov
adc
ja
adc
lret
adc
hlt
stos
push
in
jg
mov
leave
mov
and
idiv
and
jecxz
add
jl
xchg
sub
int
pop
inc
xchg
cmp
lods
or
imul
rcrb
pushf
xchg
jmp
dec
sbb
inc
fwait
cltd
xlat
mov
aad
sub
mov
popa
xor
sbb
cmc
inc
mulb
pop
popa
dec
inc
cmp
repz
mov
je
ss
lret
gs
push
dec
dec
cli
and
lods
jge
sti
enter
stos
fs
repz
movsl
int3
mov
cmp
je
repnz
aas
mov
stc
and
mov
pop
mov
into
adc
idivb
cmp
jecxz
dec
jns
mov
mov
jns
ss
lock
or
loope
dec
repz
push
imul
or
jo
setae
out
loop
sahf
jnp
lret
outsb
sbb
out
into
jbe
dec
lahf
cmpsl
cmpsb
sbbl
cmp
cmp
je
insb
push
jb
cld
je
pusha
inc
sub
jno
icebp
xchg
lods
das
add
jae
mov
mov
jmp
outsb
pop
mov
add
mov
sti
inc
mov
cld
fimuls
shll
aaa
jno
sbb
xlat
arpl
loopne
stos
call
and
out
cltd
in
stos
sbb
mov
loopne
adc
imul
sti
js
add
jb
movl
push
fwait
jecxz
out
stos
xor
pushf
jle
mov
jp
es
xor
cwtl
arpl
mov
push
jl
inc
cmp
mov
push
hlt
movsl
lret
fsubrl
pop
xchg
pop
cltd
fidivl
cmp
and
outsl
dec
lods
lahf
mov
inc
cmp
outsb
and
cld
fiadds
gs
sbbb
pop
lds
notb
cltd
dec
movsb
inc
pop
int
pop
jle
gs
dec
loopne
int3
mov
out
push
and
mov
fbstp
jns
and
sub
loope
mov
jb
jl
fisttpll
in
dec
hlt
sbb
inc
inc
or
pushf
in
into
sub
shl
dec
lret
xchg
jmp
jp
pop
mov
test
push
mov
push
shl
lods
sub
cmpsb
cmp
push
aad
ret
mov
cmp
mov
push
xor
rclb
mov
ret
test
xor
mov
rcrl
ss
pop
add
int3
pop
mov
enter
mov
add
or
es
clc
lea
xor
cmp
push
jge
ds
jecxz
adc
ja
ds
or
in
push
jne
popa
mov
jle
loope
or
adc
lock
sbb
mov
out
lret
mov
mov
mov
jb
shrb
mov
and
or
out
cltd
insl
out
mov
dec
aaa
inc
xchg
repz
xchg
fdivp
js
cmp
push
xchg
jg
and
pop
mov
xchg
push
jg
popa
cli
or
cltd
push
push
lcall
cs
mov
push
addr16
xchg
lret
cmp
mov
or
push
mov
rcrb
dec
or
inc
sbb
xchg
sbb
push
or
stos
inc
mov
sbb
popa
sub
cmp
jns
ja
cld
cs
mov
xchg
jb
xor
cmp
test
fistpll
sbb
shlb
push
loopne
fimuls
ffreep
push
mov
push
shlb
mov
in
inc
scas
mov
adc
and
loop
repz
push
mov
xchg
xchg
mov
xor
test
mov
rcrb
ss
cmc
cli
dec
test
into
inc
or
mov
hlt
push
iret
nop
mov
push
mov
js
fdivrl
loopne
pop
pop
addb
xchg
adc
mulb
loope
or
fistps
sbb
push
inc
testl
add
xor
jg
pop
mov
test
cmp
add
cmp
stos
in
cmp
clc
pop
jecxz
adc
and
xor
sbb
icebp
and
push
mov
mov
push
mov
inc
stos
xor
out
cmp
enter
mov
test
xchg
in
push
notl
mov
cltd
shl
nop
jl
imul
ss
jb
inc
sbb
mov
pop
push
aam
loopne
cmpsb
dec
mov
sbb
push
mov
mov
mov
es
jl
lds
sub
pusha
xchg
lret
test
fisttps
jno
out
adc
mov
push
mov
sarb
ljmp
push
dec
mov
inc
jnp
push
cmc
popf
mov
mov
test
loopne
sub
orb
scas
dec
shlb
jl
fcomps
popf
xchg
cld
je
ds
maxps
lret
hlt
push
fstl
and
mov
cld
cld
push
xchg
cld
fimull
data16
cli
mov
lret
inc
arpl
mov
xor
sbb
stc
mov
ljmp
popf
js
xchg
xchg
sti
mov
dec
or
das
jb
imul
fisubrl
mov
shll
and
inc
addr16
mov
enter
jo
xchg
cmpsb
add
stos
cli
fmul
fidivrs
jp
sbb
std
lock
push
and
mov
lcall
loopne
xchg
hlt
sub
pop
call
cwtl
fs
dec
jae
mov
ds
xchg
test
cli
wrmsr
cli
dec
loope
jae
sbb
or
cmpsl
lea
mov
pop
jle
or
add
inc
divb
xor
cmp
dec
push
jmp
notb
popl
std
movsb
mov
aad
jle
pop
mov
out
je
cmpsl
popa
idivb
xchg
mov
xor
pop
aad
or
insb
stos
andb
inc
aas
mov
sti
hlt
mov
mov
mov
push
shll
or
addb
dec
dec
jl
and
rcrl
xor
push
in
xchg
or
imul
push
dec
sub
adc
jb
dec
pusha
stos
into
add
clc
fsubr
movsl
fs
stos
xorb
lods
xchg
std
lock
mov
xchg
xchg
jno
push
out
jmp
xor
js
jnp
fnop
push
push
push
adc
jge
aaa
cld
and
and
mov
roll
dec
jo
fstps
sbb
psrlw
inc
sbb
aas
insb
gs
push
add
mov
bsr
fwait
dec
xchg
imul
dec
icebp
pop
aaa
xchg
aad
sbbl
sub
inc
jle
cwtl
lods
sub
push
pop
dec
cmp
fisttpl
mov
mov
pop
mov
rcrl
sbb
add
cmp
cmp
imul
jle
movsb
inc
inc
mov
xor
sbb
scas
push
cmp
dec
fmull
pop
inc
and
cmp
out
jg
lock
add
inc
mov
int3
lahf
or
xlat
xor
adc
dec
sti
or
iret
jg
jge
push
pusha
mov
mov
jno
cmp
add
mov
push
jl
push
jp
fcmove
jbe
sub
xchg
or
jae
inc
or
and
sub
push
mov
xchg
push
divl
jae
movsl
int3
lcall
repnz
je
jbe
cmpsl
int
repz
cmpsb
mov
nop
xchg
push
loope
andb
sub
xor
mov
mov
icebp
fwait
iret
int
lahf
out
or
lahf
jle
fidivl
xchg
and
add
or
sub
sbb
inc
das
push
dec
movsl
iret
sahf
or
pop
pop
and
jl
cli
out
hlt
ja
sub
mov
fldl
mov
shr
mov
outsb
inc
adc
das
in
pusha
rcll
xor
pop
cmp
in
repnz
or
imul
xor
pop
fcoml
mov
mov
mov
xchg
lahf
or
in
adc
jmp
or
or
aad
and
sbb
sub
mov
rcrl
push
icebp
jne
cmp
dec
loopne
cmpsl
sub
push
into
dec
pushf
testl
and
cmp
inc
or
nop
add
movsl
mov
sub
lahf
jle
xchg
cltd
and
fst
adc
mov
into
mov
nop
test
pop
loope
push
push
lahf
clc
cwtl
pop
mov
mov
rcll
dec
sub
je
jge
loop
xchg
shlb
sahf
add
cs
xchg
fiaddl
pop
fwait
stos
sti
dec
movsb
scas
sbb
pop
mov
movsl
rolb
and
and
adc
stc
mov
xor
popf
xor
jo
dec
mov
sbb
adc
jbe
inc
fcomp
mov
rcr
and
movl
rol
call
push
dec
mov
cmp
nop
sub
int3
stos
and
jns
cmp
fmull
imul
div
xchg
or
inc
adcb
dec
add
xchg
sub
aam
scas
pop
xor
inc
test
mov
lahf
lahf
fs
fisubl
test
idivl
and
jo
mov
mov
imul
pop
aad
and
cltd
jge
push
lds
jp
fwait
xchg
sub
sbb
jb
mov
push
fisubs
add
push
imul
mov
fldcw
adc
subl
pop
push
push
test
add
or
pop
inc
or
xor
popf
or
pusha
xor
ss
js
filds
and
push
mov
push
mov
sti
and
gs
in
dec
leave
scas
dec
push
pop
test
cld
mov
pop
lock
jo
xchg
lcall
fiaddl
aad
test
inc
lds
jo
and
cmpsl
insb
sbbb
pop
mov
sahf
adc
es
push
out
xchg
sbb
jbe
aad
xor
je
push
xchg
iret
push
sahf
inc
daa
sub
js
pushl
xchg
int
inc
xchg
leave
add
jnp
outsb
pop
fwait
sbbl
mov
outsl
adc
fstps
sub
into
pop
in
test
daa
sbb
inc
int
push
adc
dec
rol
andl
stc
sbb
in
sub
stos
imul
cmp
es
xor
xchg
push
cli
xchg
sbb
ficoms
push
add
cwtl
arpl
adc
fimuls
jmp
movsb
add
ret
and
dec
sti
jns
faddp
and
xor
inc
and
or
push
dec
sbb
aas
push
or
shlb
test
movsb
aad
dec
or
pop
add
shrb
repnz
inc
dec
in
xchg
pop
xchg
pop
pop
add
lret
fcomps
sbb
dec
test
push
sahf
int
sub
xor
cld
xor
mov
inc
outsl
xor
xor
xchg
out
mov
fnstcw
add
and
cmp
mov
fistps
ss
xchg
xchg
addr16
int3
lods
xchg
aad
jge
mov
jns
std
nop
rcrb
call
out
mov
shrb
inc
cmpsb
xchg
add
inc
int
test
pusha
addl
xchg
fistps
popf
add
mov
mov
loopne
pop
mov
jge
jmp
lret
test
xchg
and
aad
mov
enter
jecxz
mov
mov
idivb
mov
sub
adc
xor
jns
ss
or
pop
insb
jp
testl
mov
cmp
sbb
rcl
and
mov
sarb
and
mov
fnstsw
mov
xor
mov
inc
in
nop
imul
add
stos
add
shll
sbb
mov
mov
mov
add
in
mov
daa
lea
jl
call
int3
jmp
and
je
cwtl
scas
cwtl
sbb
mov
dec
pop
ja
mov
mov
or
jp
dec
insb
into
dec
mov
mov
fsts
fcmovnbe
cmp
out
pop
lds
mov
insb
lahf
test
ror
into
pop
push
xor
xor
jnp
push
adc
jae
xor
adc
data16
ds
pop
pop
pop
ds
ss
insl
sub
shlb
bound
inc
add
mov
xor
jne
cmp
aas
loopne
rclb
jg
lret
push
mov
aad
xor
sub
sub
jo
xchg
adc
cwtl
adc
xchg
ret
sub
ffreep
rolb
jae
cmp
cli
mov
fs
inc
scas
pop
and
cld
leave
fidivl
dec
les
adc
inc
lods
enter
repz
outsb
je
xorb
xchg
add
jmp
movsb
pop
mov
dec
push
xchg
into
rol
out
nop
cmc
repnz
cs
or
int
jae
lret
movsb
mov
or
lcall
pop
dec
in
pop
jg
rol
cmp
adc
mov
jae
add
xchg
push
repz
inc
push
scas
xor
xchg
mulb
xlat
rolb
sti
pop
scas
mov
adc
and
inc
xor
xorb
mov
sub
mov
mov
mov
js
jae
add
aad
adc
inc
jae
jl
pop
xchg
test
lea
jnp
idivl
test
dec
mov
fidivs
lds
pop
in
sub
add
jmp
push
bound
imul
cmp
aad
subb
sbb
push
mov
mov
je
fcmovnb
rorb
adc
mov
sbb
gs
push
enter
rol
sahf
pop
xchg
push
xor
stc
and
pop
pop
movsl
popa
dec
mov
out
rcr
jno
sbb
and
icebp
dec
jb
shrl
stos
ja
xchg
into
mov
and
int3
subb
adc
lahf
std
pop
arpl
ja
mov
xchg
push
faddl
popa
jmp
sbb
in
jo
sbb
dec
insl
sub
xor
push
int
out
mov
sti
pop
std
jp
xchg
ret
fnstcw
loop
cli
push
addr16
push
inc
test
loop
pushf
add
subb
and
filds
dec
movl
aad
or
pop
dec
xor
stc
rorl
repnz
add
cli
add
imul
cmpsb
or
push
movsl
cmp
xor
sbb
shl
negb
call
clc
pop
gs
jge
outsb
mov
push
fnstsw
fimull
push
dec
js
shr
test
jnp
xor
inc
jl
cltd
data16
adc
ljmp
push
hlt
out
cli
stos
mov
or
mov
push
sbb
pop
push
cld
mov
ret
push
sub
dec
mov
dec
xchg
and
aas
cmp
xchg
push
enter
inc
inc
adc
mov
ret
push
fimull
adc
push
test
xor
cmp
sub
scas
jb
mov
sbb
xchg
outsl
sti
jg
loop
sbb
fiadds
je
mov
push
xchg
arpl
lret
sbb
push
sub
in
imul
pop
mov
outsl
stos
scas
imul
fs
aad
sub
and
dec
jecxz
dec
sub
xor
cmpsl
std
mov
pushf
aaa
mov
gs
les
nop
xchg
add
jmp
pop
cmp
or
lea
scas
sbb
mov
push
cld
adc
inc
mov
cs
push
xor
lods
in
lds
mov
push
adc
jne
scas
daa
pop
fmuls
imul
sbb
sbb
out
adc
ds
adc
dec
rorb
shlb
xchg
pop
add
test
into
filds
dec
add
push
test
rcrb
inc
and
data16
and
jecxz
dec
or
jne
dec
jp
or
push
les
insb
push
dec
cmp
sahf
jb
leave
add
push
divb
adc
push
sub
rcr
mov
lahf
mov
pop
fcoms
sbb
push
inc
int
mov
dec
mov
fmull
mov
mov
or
push
punpcklbw
dec
movsl
cwtl
incb
sbb
mov
icebp
rorb
cmp
call
cmp
push
loop
movsl
sub
cmp
in
pop
scas
pusha
outsl
enter
rcrl
addr16
insl
mov
fadds
test
das
sbb
les
cmpsl
into
sbb
jbe
dec
jg
scas
popl
cli
inc
ds
and
ds
aad
ja
lds
bound
add
jge
pop
jg
in
test
pop
je
sbb
pop
cmc
frstor
sbb
lds
shl
jb
jbe
stos
push
int3
xchg
cmp
jg
into
pop
cmp
and
js
js
dec
dec
mov
adc
inc
fiadds
pusha
jl
adc
pop
add
lcall
lods
stos
and
mov
push
fsubrs
int3
into
aas
inc
lret
cmp
sub
inc
mov
jmp
cld
push
mov
sbb
mov
fistl
push
xor
cmpl
and
xchg
cltd
jl
and
addb
or
jnp
add
std
sahf
es
pop
or
into
push
lea
cli
fdivrl
mov
ljmp
sbb
pop
popf
mov
xor
mov
ja
hlt
mov
fimull
pushl
dec
push
pop
addr16
fstps
jle
sub
aas
adc
pop
dec
ds
sahf
test
imul
loope
cmc
dec
jge
fisttpl
cs
sbb
sub
int
outsl
fstl
aam
ja
cli
les
xchg
faddp
sub
sarl
outsl
aas
addr16
test
add
lods
adc
and
mov
gs
gs
cli
jge
xor
pop
add
xchg
stos
test
push
pop
leave
lcall
jnp
add
sahf
adcb
pop
mov
mov
xchg
add
fnstsw
sbb
push
insb
inc
add
and
aaa
jb
sbb
lock
add
xchg
jle
inc
mov
ss
push
and
rcrl
sahf
mov
pop
push
xchg
dec
addr16
jmp
inc
clc
xchg
xrelease
sbb
and
hlt
in
cmp
xchg
jecxz
and
pop
cwtl
cld
mov
out
pop
lahf
in
lods
dec
xchg
push
xchg
jp
jmp
mov
imul
mov
push
mov
mov
das
mov
cmp
xchg
xchg
pop
xchg
mov
sub
arpl
lds
mov
push
stc
and
leave
ljmp
lahf
xor
cltd
insl
sahf
and
aaa
or
mov
xchg
pop
jmp
or
xchg
push
in
sub
ret
ss
pop
nop
pop
sub
and
and
mov
xchg
stc
jg
je
in
flds
push
shrl
sub
xchg
dec
inc
shll
push
fbstp
add
and
call
int3
mov
push
push
sbb
or
sub
or
popa
jmp
jmp
jae
sub
add
xor
and
lret
push
fld
jmp
cmp
jge
lret
sahf
iret
pop
outsl
mov
and
sbb
fcmovnbe
out
cli
jmp
sub
je
jmp
pop
test
clc
xor
or
mov
xchg
mov
out
daa
hlt
orb
jno
clc
gs
adc
adc
push
jnp
add
rcrb
sub
sub
divl
jno
cmp
faddp
mov
fidivrs
lahf
and
aad
push
into
pop
xlat
mov
in
out
adc
dec
jecxz
iret
lds
mov
aas
cld
dec
pop
enter
sub
orb
js
popa
les
mov
mov
movsb
cmp
aas
cmp
cmp
mov
insb
lcall
icebp
outsl
dec
add
xchg
mov
mov
cs
push
jns
div
push
pop
push
movsb
mov
inc
sub
shl
fmul
and
adc
fnsave
or
pop
ljmp
jbe
adc
out
pop
fdivs
das
mov
xlat
cmp
aad
in
shlb
fwait
jbe
mov
sbb
cmp
loope
mov
clc
mov
and
mov
xor
std
adcb
hlt
sub
iret
les
sub
call
std
test
fwait
or
mov
lcall
xor
rsqrtps
xchg
xor
mov
mov
mov
int
cwtl
add
or
mov
imul
and
rclb
push
cmp
sub
lcall
push
call
adc
and
adc
pop
daa
and
shll
out
mov
sbb
sahf
and
rorb
cld
inc
adc
testb
inc
add
cmp
adc
jns
cli
loop
mov
xchg
fcmovnbe
pop
lret
bound
fmull
jle
pop
inc
mulb
ds
addb
adc
mov
call
xor
ds
movsl
in
test
sbb
sbb
mov
jle
push
in
aad
aam
jg
inc
nop
sti
gs
outsb
mov
xchg
movd
mov
out
adc
inc
std
lcall
add
mov
in
push
sub
enter
pop
inc
enter
addr16
iret
pop
push
mov
aaa
mov
and
push
fisubl
mov
push
mov
dec
testb
xchg
xchg
stos
popa
mov
js
dec
ret
ja
stos
loope
cmpl
cwtl
mov
sub
jne
pushf
cs
xorl
pop
dec
enter
push
call
push
arpl
inc
in
jb
jno
fstpt
push
das
stc
and
clc
sysenter
aaa
pop
dec
and
mov
pop
sub
mov
sbb
sti
jae
sahf
or
xchg
and
ss
cltd
cmp
sub
pop
xor
xchg
push
inc
and
xchg
inc
xlat
add
pusha
fs
xchg
and
cmp
shll
sub
ja
mov
adc
in
out
icebp
sbb
sbb
divb
repz
addl
and
xor
push
js
ret
sarl
or
push
inc
aam
inc
xchg
aad
mov
adc
sbb
jb
jecxz
icebp
sbb
add
mov
popf
xchg
movsb
pusha
cmp
mov
iret
and
mov
xor
mov
gs
clc
push
std
pop
cmc
daa
in
loope
or
jl
jbe
cld
repz
add
cmp
dec
mov
xchg
pop
jle
mov
push
cmp
push
or
or
jle
out
cmc
popa
mov
sti
and
stos
or
mov
cmp
sub
cmp
xchg
jb
in
fsubl
sbb
les
movsl
mov
out
xor
push
ret
ss
inc
mov
stos
cmp
mov
scas
fsubs
inc
scas
jecxz
pop
enter
stc
and
xchg
cmp
cmp
push
fucomip
ret
xchg
mov
fisubrs
repnz
mov
pop
mov
loope
mov
dec
or
add
pop
clc
scas
cltd
in
sub
dec
adc
int3
xchg
or
inc
int3
shrb
aam
out
xor
in
sub
jns
or
cmp
scas
xor
sub
pop
inc
adc
cltd
rolb
push
push
clc
subb
movzbl
pusha
mov
dec
xor
add
push
pop
mov
stos
inc
mov
mov
insl
and
mov
dec
sub
sbb
xor
dec
in
dec
out
icebp
test
scas
push
sub
fnstsw
push
cmp
shll
jne
xchg
cltd
xchg
out
popa
mov
sub
adc
aam
int3
xchg
sbb
rcrl
push
out
jnp
inc
mov
mov
inc
xor
stos
push
dec
into
pop
push
push
adc
lea
bound
subl
aas
dec
mov
mov
inc
sbb
shlb
add
inc
test
mov
jecxz
popf
inc
int3
mov
ret
int
inc
mov
push
cmp
loop
shll
out
push
adc
mov
pop
xor
pop
mov
lods
loopne,pt
das
push
or
insb
push
out
pop
lods
hlt
push
sub
inc
repnz
xor
scas
xchg
xchg
mov
aaa
push
call
leave
notl
cmp
inc
std
std
add
fsubrs
push
scas
jb
out
cli
aad
add
aas
push
cli
es
add
call
insb
push
addr16
adc
lret
jge
lahf
mov
cmp
roll
cmc
fcomp
jl
mov
pop
adc
add
js
xor
xchg
pop
aaa
pop
cmpsb
out
rclb
lcall
ret
jo
jnp
and
es
inc
lock
repnz
sbb
jno
std
jmp
stc
scas
aad
jge
xchg
push
out
hlt
jg
fmuls
inc
inc
mov
ffreep
sbb
sahf
sar
and
pop
cli
dec
cmp
adc
pop
outsb
dec
pop
in
ss
out
aad
iret
add
mov
sbb
mov
fmuls
call
pop
xchg
mov
pop
push
ja
cmp
jbe
xchg
lret
add
das
mov
shrb
test
push
stc
adc
sahf
mov
mov
in
xchg
rcl
jmp
out
xchg
mov
jge
add
pop
arpl
mov
mov
jl
jnp
int
lret
lods
cmp
push
xor
sub
xlat
pop
add
bnd
mov
push
add
data16
jbe
lahf
dec
pop
or
adc
outsb
lea
sbb
outsb
mov
mov
aam
dec
sbb
inc
loopne
xchg
push
sbb
and
movsl
mov
bound
dec
mov
gs
sub
cmp
cwtl
repz
cli
inc
insb
lea
adc
inc
lahf
xchg
xor
pop
test
adc
push
cmp
inc
adc
popf
test
into
ja
int
pusha
sahf
xchg
das
push
test
repnz
sub
stc
dec
adc
or
xor
outsb
jle
cmpsb
mov
ret
jg
cli
ss
out
xor
aas
mov
fnstcw
movsb
add
mov
xor
loope
add
gs
lock
rcr
std
sub
push
cltd
jmp
add
pop
test
cmp
sti
shll
dec
movsl
cmc
les
jmp
xchg
shrb
dec
or
popf
nop
pushf
push
dec
int3
pop
push
aam
sub
pop
mov
test
xchg
cmpsl
jecxz
inc
pop
cmpsl
cmp
daa
fwait
insl
add
call
fdivr
sub
jmp
loope
sbb
ror
sti
cmp
xchg
and
and
push
aas
shrl
cmp
pop
sub
imul
jg
out
xchg
test
push
insb
dec
aaa
int3
sbb
mov
and
sub
xchg
jl
jg
push
sub
jp
inc
in
repnz
adc
sbb
xchg
fld
call
ficomps
adc
je
mov
dec
or
and
xor
mov
sarl
or
rcrl
sbb
imull
shll
pop
push
jne
inc
jle
pop
leave
dec
fwait
lods
aas
mov
pop
outsb
jp
dec
movsb
movsb
lods
mov
pop
adc
mov
nop
sub
int
jp
mov
mov
in
pop
test
add
jnp
sbb
sarl
jae
ret
cli
mov
into
mov
leavew
aad
dec
mov
and
sbb
movsb
fidivl
out
hlt
popa
addr16
push
in
xor
mov
pop
mov
pop
dec
mov
jns
sbb
ss
push
loopne
xchg
subl
jle
xchg
nop
cmp
lods
cmp
inc
loop
pop
andl
addr16
mov
es
inc
xchg
inc
mov
mov
push
ljmp
addb
dec
filds
in
insb
scas
daa
xor
pop
jae
outsl
dec
push
sbb
roll
or
scas
add
mov
and
push
sbb
call
push
inc
pop
lret
pop
bound
pop
repnz
in
ds
sar
or
mov
pusha
jecxz
or
stc
xor
xchg
or
add
sub
bound
movsl
ds
dec
imul
je
push
ss
mov
addr16
imul
shll
or
andb
and
xchg
fwait
pop
leave
aad
lods
fucomi
add
dec
jle
sbb
jmp
es
sbb
setnp
ds
lea
clc
mov
inc
mov
ficomps
push
xchg
outsl
add
mov
filds
mov
xchg
mov
lods
lea
adc
pop
cltd
fcomp
dec
xorl
add
outsb
nopl
sarb
add
in
dec
mov
pusha
outsl
arpl
testl
sub
jbe
pop
pop
push
inc
sbb
xorb
dec
xorb
daa
cmp
dec
jl
lret
orb
add
push
pop
mov
mov
sahf
sub
sarb
scas
xchg
imul
push
mov
pop
cltd
push
push
lds
pop
mov
outsl
jae
cmp
loop
sahf
jle
push
inc
stc
pop
cmp
dec
xor
xchg
jne
outsb
mov
movsl
rorb
or
xchg
bnd
mov
out
cltd
out
shr
mov
movsb
das
xchg
ds
cld
nop
ret
cli
sbb
cmpsb
xchg
cmp
pop
lcall
jge
movsb
cmc
xchg
add
stc
addr16
sub
mov
movsb
roll
mov
add
scas
pusha
cli
rcll
lret
pop
cmc
out
xor
fistps
in
mov
cmp
scas
sub
imul
mov
or
cs
pushf
jl
pop
or
fstl
or
shlb
test
push
xchg
cwtl
push
jnp
mov
lret
lds
inc
pop
fisubrl
movsb
xor
sbbl
rcr
lods
sarl
inc
or
cld
pop
out
adc
xchg
int
lret
mov
xor
rcr
test
mov
cld
fwait
mov
mov
xor
xor
pusha
shll
add
shl
mov
lahf
sbb
pop
xchg
loopne
inc
jbe
cmp
jmp
push
test
adc
jno
popf
aad
and
mov
inc
cs
pop
pop
inc
and
dec
les
out
add
nop
add
or
dec
mov
nop
cmc
mov
mov
popa
gs
or
add
xchg
lock
lahf
rolb
test
loope
lahf
test
hlt
stos
cmp
outsl
pop
loopne
popa
jmp
fs
nop
adc
dec
sti
inc
mov
test
aad
fidivl
sbb
pop
mov
or
xor
iret
jbe
adc
mov
lock
repnz
ret
push
adc
pop
xchg
in
sub
and
push
jle
test
cs
aam
sbb
mov
and
sar
adc
stc
cmp
test
xor
jo
xchg
rclb
xchg
hlt
push
pop
jno
jbe
sub
mov
lods
mov
repz
jecxz
push
in
sub
lcall
pop
sbb
cmpb
jg
loope
inc
sub
scas
insb
clc
mov
bswap
iret
call
dec
test
adc
mov
cli
pop
pushf
sub
sbb
dec
adc
push
dec
fsts
jne
stos
andb
es
dec
fstpl
je
lret
or
jmp
enter
dec
mov
pop
or
shlb
push
and
mov
push
arpl
mov
xchg
mov
mov
mov
lcall
jns
ficoms
mov
scas
add
xor
lds
adc
mov
xor
xlat
ss
mov
aas
pop
shl
pop
fmulp
imul
cld
sti
aas
or
cmp
and
lea
add
lock
xchg
adc
xor
push
shrl
movsl
dec
clc
daa
mov
addr16
out
sub
push
pop
xor
data16
pop
xlat
int
lods
add
into
xor
mov
fcompl
jnp
jno
mov
out
mov
sub
mov
jecxz
stos
fstps
sbb
pop
ret
popf
inc
inc
es
pop
sbb
jo
shll
xor
pop
sarl
pop
cld
bound
jno
lcall
aad
in
cmp
out
dec
xor
xor
xor
inc
cltd
mov
paddusw
sub
mov
push
dec
xchg
push
ljmp
adc
or
sub
pop
cld
or
nop
and
pop
mov
inc
fmull
push
mov
sahf
pop
or
ja
ljmp
test
mov
mov
mov
out
jge
stos
mov
sbb
or
jl
pop
mov
int3
and
fstl
sbb
push
mov
out
scas
pop
lret
mov
mov
adc
pop
jne
mov
loopne
sub
jmp
mov
or
movsb
fiaddl
aad
insl
xor
push
inc
dec
sbb
pop
sti
inc
or
clc
pop
lret
rclb
pop
inc
dec
mov
xchg
jmp
dec
dec
pushf
aam
das
sti
mov
adc
jle,pt
xor
das
es
sub
iret
sbb
mov
mov
fwait
rclb
rorl
mov
jns
movsl
xor
dec
add
mov
mov
adc
adc
aaa
xchg
test
sarb
icebp
aas
das
push
stos
hlt
adc
rorl
clc
mov
xor
mov
icebp
rcrb
xchg
xchg
jo
lcall
into
stos
mov
fisttps
clc
xchg
pop
test
sub
add
mov
sub
in
push
jae
or
xchg
lea
aaa
adc
sti
mov
sahf
ja
cmp
orl
and
repz
sub
push
xor
aam
or
fmulp
inc
in
push
test
xchg
add
pusha
mov
dec
sarl
in
iret
ret
lock
cli
cld
cmp
or
mov
fmulp
push
adc
fucomip
adc
jnp
ret
xor
cs
cmp
es
scas
pop
addr16
or
push
push
fstl
in
add
fcompl
push
push
xchg
xchg
shrl
out
ja
push
js
jle
xor
jmp
push
inc
out
jg
rcrb
sbb
pop
dec
popf
push
cmp
js
adc
lock
int3
int
cmpsb
cli
ret
mov
insb
popf
pop
outsl
jb
enter
jne
shlb
sti
insb
popa
out
call
aam
mov
cmpsb
loop
sbb
arpl
xor
pop
ret
dec
xchg
sbb
aaa
mov
test
sbb
sahf
fbstp
dec
pop
in
mov
mov
dec
dec
subl
dec
jo
movsb
adc
sahf
ljmp
sahf
or
clc
adc
shrb
mov
out
mov
aaa
adc
popf
dec
pop
fidivl
pop
fcmovnbe
pop
cmp
adc
dec
inc
and
jo
sub
add
shll
pop
xchg
dec
cli
xor
lret
leave
sarl
cmp
cltd
nop
into
xchg
pop
xlat
imul
aam
mov
adc
orl
scas
outsb
cmpsb
shr
fcmovnb
jg
call
out
enter
sub
shl
mov
mov
addr16
xlat
lret
ret
dec
sub
pop
cmp
mov
loope
lret
and
mov
movsl
rorl
adc
das
subl
hlt
sbb
stc
sub
and
push
inc
xor
pop
addr16
std
mov
fmul
mov
adc
mov
push
lret
shll
fmull
sbb
inc
and
pop
cld
mov
sbb
or
ja
in
inc
cmc
xchg
add
imul
xchg
loope
push
pop
out
fs
inc
data16
testl
lods
dec
sub
cmc
mov
arpl
add
subl
cmp
out
xor
mov
lret
mov
dec
jg
fstpl
xchg
adc
imul
fmulp
mov
lret
xor
cli
sbb
fcompl
xor
or
in
adc
cmp
leave
xor
aad
shr
dec
adc
insb
ret
dec
inc
clc
dec
add
pop
out
cli
mov
imul
loope
and
clc
test
inc
pop
out
push
xchg
stos
icebp
mov
and
loope
lret
sbb
sbb
enter
fucom
mov
add
inc
xchg
inc
aas
imul
cmpsb
push
outsb
or
ljmp
test
enter
daa
jb
adc
sbb
dec
sti
imul
notl
xchg
nop
nop
imul
mov
loope
cmc
cmp
insb
out
dec
push
pop
insb
movsl
shlb
push
sub
mov
sbb
loopne
pop
pop
mov
push
sbb
or
push
mov
inc
in
jecxz
std
repnz
nop
xchg
mov
iret
jae
cltd
jl
push
push
fdivs
addr16
add
jg
test
mov
add
jecxz
xlat
sarb
cltd
mov
push
inc
ret
and
pop
xor
lret
sar
daa
out
xchg
pop
adc
xchg
pop
add
mov
insb
imul
fmul
or
ljmp
call
or
inc
scas
xchg
mov
js
sbb
enter
pop
cmc
mov
sub
test
lahf
inc
xchg
mov
scas
push
push
or
cmp
sub
repnz
movsl
addr16
mov
mov
cmp
mov
push
pop
rorb
jo
push
xchg
jl
add
or
nop
mov
in
cmpsl
fmuls
test
jecxz
repz
jmp
enter
mov
add
daa
pop
or
push
xor
adc
dec
push
sub
out
pop
xchg
popf
loopne
int3
pop
mov
adc
sub
cmp
xlat
lea
and
cmc
inc
mov
push
pop
fldl
sub
pop
and
in
sbb
cmp
sbb
adc
and
test
movsb
stos
lods
adc
push
mov
adc
aad
dec
pop
mov
inc
popa
mov
mov
dec
jnp
sbb
in
pop
loope
cmp
test
out
adc
pop
loope
cmc
fdivl
cmp
cmp
addr16
add
cltd
adc
or
jo
movsl
mov
xor
repnz
inc
insb
ret
add
jo
jno
js
sub
xor
in
movsl
xor
rcr
jbe
pop
mov
or
jns
xchg
inc
dec
cmp
push
data16
lods
ss
mov
dec
sti
mov
jmp
adc
jns
ljmp
aad
or
sub
adc
push
or
int
shlb
aam
inc
sbb
jecxz
iret
icebp
xor
cld
insl
scas
popa
repz
push
clc
push
adc
fwait
inc
mov
xlat
push
cmp
pop
dec
fwait
mov
jbe
scas
cs
incb
jo
in
jb
nop
fsubl
xor
mov
mov
jo
xchg
aam
enter
test
adc
arpl
into
jnp
dec
test
cmc
adc
sbb
std
dec
pop
cld
fdivs
or
iret
aas
inc
sbb
ljmp
add
xorb
ret
adc
sub
mov
push
outsl
mov
mov
ss
frstor
cltd
nop
sbb
and
pop
pop
sbb
stos
dec
mov
das
jbe
mov
cwtl
ds
jmp
jp
jns
repz
aaa
adc
lcall
jl
test
and
fldcw
dec
lock
in
cli
adcb
leave
repz
and
lret
cmpsb
xor
gs
popa
sbb
xchg
daa
jns
mov
std
ja
lds
xor
fmulp
dec
dec
adc
aam
imul
cmp
and
rol
pusha
imul
ret
imul
push
popa
andb
or
mov
jne
jecxz
movsb
add
lahf
and
inc
xchg
sub
scas
cmc
fwait
shlb
mov
les
dec
jecxz
daa
and
adc
fcmovnu
sbb
inc
lock
mov
mov
mov
aad
inc
je
pop
pop
pop
fnsave
push
xchg
add
stos
repz
repnz
push
cmpsb
jo
mov
pop
aad
clc
and
fildl
dec
cs
xchg
pop
inc
movsb
xchg
inc
leave
push
and
mull
jl
insl
cmp
test
hlt
push
jb
out
dec
jns
xchg
aad
xor
jmp
mov
shld
push
mov
je
adc
in
adc
mov
scas
not
lcall
xorb
lret
pop
lea
int3
jne
les
roll
ss
aad
ficompl
push
pop
mov
inc
jns
je
add
addl
loopne
xchg
aas
rcr
inc
jp
movsl
and
mov
xchg
sbb
mov
idivb
dec
mov
enter
jne
cmpsl
movsl
pop
jmp
andl
cmpsl
orb
and
push
addr16
fucomi
imul
shrl
add
xor
jns
pmuludq
xchg
mov
inc
fidivs
int
jge
std
sub
dec
ljmp
and
mov
cs
je
out
or
mov
mov
and
fcompl
pop
mov
sub
mov
or
cmp
cmp
xchg
or
xchg
loop
lods
adc
sub
shll
inc
jno
cmp
push
lret
jno
ret
fbstp
sub
xchg
lds
adc
cmpsb
pop
jbe
les
pop
ds
in
add
mov
popf
pop
lds
pop
into
pusha
hlt
jecxz
ficomps
add
cmc
out
shl
push
sub
mov
aaa
mov
mov
mov
jl,pn
or
hlt
lock
xchg
lock
cmpsb
nop
push
xor
mov
sbb
call
mov
cmpl
scas
xor
scas
mov
inc
push
pop
mov
shrl
lcall
cld
adc
inc
mov
push
fnstenv
insb
and
out
fsubrs
xchg
sub
fbld
lahf
or
xchg
fisubrs
out
mov
into
xchg
lcall
inc
cwtl
icebp
imul
pop
in
jl
leave
ja
bound
pop
std
xor
cmp
and
fwait
mov
movl
andb
push
enter
mov
jb
cmpsb
mov
js
fsts
push
and
rcll
dec
orl
jnp
les
add
insl
fistl
jecxz
jns
insb
insl
push
xchg
and
mov
adc
mov
jne
sub
mull
dec
fldcw
in
and
add
pop
push
cmc
sbb
js
and
xchg
xchg
lea
clc
mov
movsl
popf
and
in
mov
mov
cltd
pop
mov
cltd
into
mov
adc
dec
pop
adc
cwtl
push
mov
mov
rorl
xor
push
js
pushf
dec
push
jp
ljmp
adc
int3
jbe
leave
xchg
push
in
xor
push
xlat
xchg
push
lods
lret
adc
push
mov
and
jns
sbb
in
roll
mov
jmp
pop
sub
insl
sahf
iret
aas
cmpsb
outsl
test
mov
cmpsb
push
sarl
pop
aaa
xorb
dec
loop
sub
xchg
sub
jo
cmp
repnz
inc
sbb
adc
jnp
or
mov
mov
test
mov
lods
and
cmp
pop
adcb
in
out
adc
jle
mov
dec
mov
inc
sbb
cmp
jb
mov
addr16
test
mov
inc
pushf
pusha
repz
xchg
or
pop
movsb
xchg
fnstsw
jne
mov
out
mov
cmp
mov
xlat
test
lea
popa
push
stc
sbb
aas
stos
xchg
xlat
pop
cmp
jg
jge
bound
jns
rorl
nop
aas
lds
or
dec
adc
insb
add
inc
sub
mov
pop
jp
aam
int
mov
sub
sbb
pop
sti
insl
pop
adc
push
hlt
out
mov
rolb
test
push
xchg
fucomip
mov
ret
sub
imul
dec
pushf
ds
andl
ret
vfnmsub132sd
fstl
push
lret
push
adc
dec
mov
cmpsb
and
mov
pop
sub
xor
mov
insl
cmpsb
cmp
push
xchg
outsl
imul
repz
stc
or
mov
add
push
xchg
es
xchg
mov
std
xchg
jae
cmp
mov
loopne
jno
xor
lods
cwtl
mov
dec
adc
shrl
cmpl
add
movhlps
xchg
pop
cmp
xor
decl
flds
shll
lahf
mov
cmpsl
xchg
jle
sbb
sbb
fsts
arpl
cld
mov
ret
idivb
arpl
jp
xor
or
or
ss
ret
pshufw
mov
into
xor
das
add
ljmp
lods
insb
mov
aas
out
mov
add
or
je
adc
and
imul
jmp
out
cs
push
call
int3
fxch
xchg
frstor
in
push
dec
pop
jmp
jl
movsl
popa
dec
jecxz
dec
xchg
repz
stc
jecxz
fisubrl
repz
fstpt
push
cmp
shl
jns
dec
cltd
mull
fidivl
sub
das
mov
and
shll
inc
ja
add
xor
fs
sbb
test
sub
ret
dec
aam
sub
jl
mov
lea
imul
sub
jno
int
mov
fsubp
shrl
fnstcw
lret
pop
sub
out
add
xchg
add
dec
push
std
xchg
sbb
mov
sub
pop
pop
mul
xchg
adc
mov
inc
ret
or
and
not
in
rclb
into
cmp
andl
aas
or
lock
ficomps
loopne
mov
mov
mov
add
mov
repz
aaa
loop
test
icebp
into
mov
xor
andl
or
cltd
sahf
inc
das
fwait
or
pop
push
out
push
xchg
test
push
xor
hlt
push
icebp
xchg
add
or
out
fxam
cwtl
mov
and
test
popf
sub
xor
cltd
jle
adc
mov
dec
pop
and
xchg
movsl
mov
ja
jecxz
iret
adc
popa
inc
jge
cmpsb
repz
int3
jns
and
push
mov
rol
xchg
adc
sub
mov
sahf
clc
in
mov
dec
and
aaa
leave
mov
mov
addr16
outsl
dec
mov
popa
arpl
or
lods
lcall
add
dec
dec
movsl
mov
mov
lret
shlb
shll
xchg
aam
fldt
jno
mov
adc
cwtl
jmp
bound
stos
or
decl
sub
sub
push
lret
cwtl
and
jns
rolb
insb
pop
mov
and
rcrl
mov
fnsave
repnz
cltd
icebp
cmp
add
out
cmovp
lods
mov
add
inc
addl
inc
lahf
mov
cmp
cmp
cmp
jg
mov
data16
scas
movsl
inc
pop
cltd
enter
xchg
mov
jne
mov
mov
scas
in
push
orl
imul
pop
xchg
jl
xchg
inc
push
xchg
sbb
xor
sub
pop
xlat
call
int
loope
jmp
hlt
mov
xchg
pop
cmp
adc
out
push
pop
push
dec
pop
jnp
pop
jmp
leave
repz
push
lret
std
imul
imul
jne
xchg
out
adc
orl
stos
add
popf
mov
dec
mov
popf
inc
aaa
orb
cld
dec
mov
imul
nop
stc
in
repz
cmp
stc
xchg
sbb
pushf
sub
pop
sub
adc
ja
das
outsb
xor
xor
cmp
pushf
jmp
adc
sbb
cs
push
inc
mov
shl
movb
add
mov
xlat
sub
shl
lods
in
popa
inc
add
sub
jmp
icebp
mov
shl
push
mov
cmpsb
idivl
dec
lahf
imul
mov
insb
test
inc
out
sar
xlat
push
push
mov
nop
ljmp
outsb
movsl
xor
sbb
in
sbb
enter
test
aaa
or
jno
sbb
mov
push
enter
cmpsb
push
mov
and
sub
jmp
loope
xchg
mov
sahf
cwtl
in
lahf
iret
gs
push
or
loop
jne
test
jno
hlt
in
jmp
ss
mov
jle
xchg
lcall
jge
xchg
ret
or
nop
data16
into
pop
in
pop
jne
and
jmp
jge
mov
adc
loopne
mov
dec
insb
push
add
and
sub
je
push
push
or
jp
pop
jmp
and
mov
lods
sub
in
sbb
mov
imul
lods
andb
cmp
xor
fcoml
idivb
xor
pop
fistpl
xchg
push
imul
ja
aas
xor
outsl
data16
jg
loopne
fcom
push
andl
dec
push
push
out
movsb
call
sbb
mov
sbb
xorl
ret
mov
ja
push
and
cs
ss
lock
stos
push
pop
prefetch
mov
push
arpl
stos
pop
sbb
push
cwtl
xor
jnp
popa
mov
push
scas
addr16
xor
xchg
push
std
add
jnp
clc
inc
pop
mov
add
sub
mov
sub
push
lahf
popa
pop
pop
xchg
pop
push
xor
insb
xchg
xchg
test
lcall
xor
cli
dec
faddl
push
ss
dec
pop
leave
aam
int
push
xchg
or
jo
popa
nop
test
cmp
xor
jmp
sub
mov
test
cld
stos
sbb
mov
pop
call
psubsw
and
pop
xchg
sahf
cmc
mov
sti
cld
lods
jmp
ljmp
sahf
pop
sub
mov
or
shlb
ds
je
std
cmp
mov
test
jp
or
sbb
lahf
das
xor
loopne
and
out
push
mov
outsl
cmp
xor
adc
and
push
insb
jo
stc
inc
xchg
mov
add
and
push
je
int3
pushf
fs
adc
lret
and
aaa
cmp
dec
inc
sar
repz
incb
leave
and
fisttpl
cmc
in
hlt
or
sub
rcl
or
jae
mov
push
mov
lods
mov
dec
and
fstl
add
cs
mov
inc
inc
repz
sbb
popa
xor
inc
adc
out
mov
mov
inc
in
push
ss
addr16
inc
xor
mov
mov
xlat
xor
or
in
push
dec
sahf
add
iret
jae
ret
sub
cld
adcl
mov
jne
pop
mov
fs
adc
dec
das
mov
sub
or
repnz
add
mov
xchg
les
sbb
pusha
xor
mov
pop
push
lret
cmp
in
inc
mov
fcoml
stos
lret
push
rcrb
sahf
add
push
mov
dec
push
xchg
cmp
sbb
adc
daa
push
outsb
pop
fsub
cmp
test
xor
xorl
faddl
stos
xor
xchg
imul
fsubrs
popf
cmpsb
les
inc
xchg
andl
popf
push
rcrb
aad
lea
cld
stc
mov
sbb
add
mov
xor
mov
flds
sbb
gs
out
or
in
jmp
out
mov
cmpb
pusha
paddusb
add
cmp
jle
mov
icebp
inc
xchg
and
mov
ret
out
sarb
in
in
shrl
into
int3
inc
cmp
jmp
fdivrp
ljmp
aad
insb
cmpsl
aam
inc
popa
imul
ljmp
les
jmp
out
lret
push
mov
xor
xchg
testb
and
jle
mov
and
mov
in
pop
inc
rorl
add
shlb
xchg
and
pop
xor
mov
xchg
mov
or
testb
pushl
mov
daa
pop
data16
arpl
sbb
lret
int3
xchg
xchg
mov
int
jge
pop
xchg
inc
fcomps
adc
mov
add
testb
mov
dec
add
gs
pushf
push
xchg
outsl
mov
add
in
xchg
cltd
mov
into
bound
sbb
enter
mov
int3
pop
pushw
enter
pop
jnp
out
mov
jle
dec
xchg
adc
inc
add
mov
ja
adc
dec
cmp
rclb
pop
inc
cmp
cmc
xchg
mov
imul
mov
rorl
push
cmp
jmp
xor
es
push
aaa
lods
call
inc
movsl
jle
aaa
push
pop
movsb
push
pop
nop
pop
insb
loop
mov
sub
cli
roll
adc
aas
inc
mov
sbb
jmp
cli
aaa
jno
sub
test
ds
pushf
cli
out
cmpsb
or
adc
test
test
les
pop
enter
jecxz
repnz
push
repnz
addl
jecxz
ret
scas
shll
insb
push
js
pop
mulb
push
or
in
je
ja
cmp
rolb
jno
add
jecxz
data16
mov
dec
adc
and
incl
adc
arpl
pop
ja
and
sub
sbb
push
sub
movsl
add
xchg
andb
pop
jg
and
sahf
cmp
jp
in
lods
sbb
mov
mov
jns
out
inc
out
and
ds
add
mov
jp
push
pop
mov
sbb
jmp
stc
div
jno
shr
rcrl
ficoms
add
imull
loopne
add
jo
inc
sub
mov
xor
aaa
or
into
js
sti
mov
iret
push
xchg
mov
lea
inc
pop
xor
or
out
dec
insb
jb
out
mov
lret
imul
jge
pusha
push
popf
jl
lods
outsb
mov
pop
lahf
clc
jb
dec
rolb
lods
mov
jnp
cmpsl
xorb
pusha
pushf
int3
sub
int3
and
out
xor
repz
in
sub
dec
addb
add
xlat
jl
push
gs
jl
and
cmpsl
sbb
aas
xchg
jmp
mov
adcl
pop
and
xchg
mov
inc
mov
push
xorl
mov
lods
test
in
xor
jbe
push
jno
lods
cmp
add
movsb
and
pushf
test
les
call
cmpsl
js
lret
dec
push
fisubrs
movsl
jp
scas
nop
dec
and
shl
leave
mov
cmc
cmp
scas
pop
push
sub
xchg
inc
mov
push
cli
rclb
push
incl
add
in
pushl
hlt
lcall
sbb
mov
mov
daa
sti
icebp
aaa
sbb
cmc
xchg
ja
xor
mov
popaw
xchg
fstp
loopne
rcr
insl
cmp
adc
and
shll
fildll
mov
mov
adcl
es
sbb
inc
lds
fstl
sub
fldl
or
lret
cmpsb
fbld
sub
add
xor
add
cwtl
movsl
inc
arpl
dec
pop
sub
sbb
inc
lds
repz
and
fs
mov
test
add
loope
push
aaa
push
inc
inc
aam
rolb
lds
movsl
dec
or
xor
cmpsb
loopne
mov
inc
mov
aaa
das
fiadds
add
test
mov
jno
popf
rclb
imul
movb
fwait
add
ficoml
icebp
rcrb
mov
jp
mov
dec
inc
jb
jns
sbb
shrl
mov
outsl
insb
or
cwtl
mov
lcall
jmp
dec
and
xchg
dec
push
in
jnp
cwtl
in
xchg
push
jecxz
stos
stos
cmp
imul
sbb
rolb
les
xor
pop
push
lea
repnz
xor
lea
popf
sub
pop
movsb
cmpsb
fbld
lea
out
pop
pop
mov
dec
dec
loop
movl
cmpsb
mov
imul
push
movsb
and
push
pop
pop
mov
push
sub
push
xchg
push
sub
sbb
cmp
sarb
jecxz
outsb
mov
mov
shlb
xchg
cmp
push
jb
push
lods
sbb
jns
sub
insl
fisttps
ss
push
mov
pop
push
loopne
push
mov
jo
lret
adc
popa
in
cmp
mov
je
or
xchg
leave
or
int3
iret
aam
push
das
and
aad
xchg
adc
leave
dec
pop
fsubrs
inc
pop
pop
bound
cmp
and
sbb
jnp
mov
or
pop
cli
cltd
popa
mov
lret
aaa
outsb
adc
push
stc
bound
sub
imul
xchg
gs
mov
sub
iret
push
pop
test
push
subb
jl
cmpsb
jl
or
mov
mov
xor
mov
filds
sbb
xchg
popa
dec
in
mov
or
jno
add
repnz
loope
cmp
mov
cs
call
mov
pop
insb
stos
jnp
push
lods
lcall
sub
imul
jae
mov
test
ss
sbb
mov
out
leave
jl
xor
mov
jbe
jecxz
into
push
jecxz
movsl
in
cmpsw
jo
arpl
loopne
bound
or
outsl
xorb
bound
jmp
dec
inc
lock
adc
jbe
in
jmp
pusha
mov
inc
insl
jnp
fs
cmpsl
cld
xor
outsl
shrl
mov
pop
icebp
fbld
mov
aad
jge
hlt
cmpsl
enter
and
sub
xchg
gs
scas
pop
jl
xchg
jae
movsl
leave
popa
and
xchg
clc
je
ret
mov
fs
push
push
outsb
push
push
mov
xchg
in
jg
fwait
clc
push
cs
mov
insb
pshufw
cmp
in
stos
mov
inc
bound
daa
roll
arpl
push
or
jge
mov
push
xchg
popf
testl
push
push
mov
inc
inc
ficompl
ds
enter
jbe
dec
pop
ljmp
lods
aas
popa
and
fdivrp
ror
mov
test
add
mov
movsb
retw
inc
dec
out
xor
lock
pusha
push
popf
loop
ja
cmp
adc
push
add
xorb
aas
hlt
cmpsl
mov
ljmp
or
and
sbb
and
add
out
xor
fwait
push
ret
jne
rorb
push
rcr
mov
xor
mov
push
nop
mov
mov
cmp
fld
fdivr
test
mov
out
xchg
xchg
mov
cmp
jo
mov
mov
mov
inc
fadds
inc
xchg
mov
sub
xacquire
inc
sbb
jbe
inc
mov
adc
imul
bound
cmp
push
sub
pop
xor
add
push
mov
lcall
js
out
mov
sbb
xor
push
jne,pt
out
jns
mov
xchg
icebp
fs
adc
in
jae
cmp
cmpb
test
xchg
outsl
mov
stos
push
jns
mov
mov
add
repz
orb
mov
mov
lret
fidivrl
pop
xchg
mov
stos
sbb
cmpsl
call
cltd
mov
xor
jno
arpl
xchg
or
das
fisttps
arpl
out
imul
pop
cmc
movl
js
or
xchg
in
sub
push
sarl
push
inc
xchg
push
xchg
cmp
inc
js
push
lea
outsb
sub
fidivs
mov
mov
add
clc
daa
sub
mov
pop
xchg
push
xchg
fmuls
sahf
fbld
imul
loopne
jno
std
outsl
pop
push
add
xchg
push
mov
dec
mov
ret
add
or
das
xchg
mov
cmp
pop
scas
inc
out
pop
idivb
cwtl
fiadds
shlb
xchg
repz
sti
roll
fcoms
inc
mov
cld
clc
pop
int
push
xlat
add
test
arpl
rol
in
jmp
pushf
pop
cmpb
loopne
lahf
mov
mov
mov
push
pop
ss
inc
out
cmp
mov
mov
addb
rcrb
push
inc
push
jl
sbb
and
shr
ret
mov
hlt
mov
pop
das
outsl
sub
add
je
push
xor
inc
inc
xchg
pop
leave
add
test
mov
and
xchg
dec
lods
push
fcmovne
push
fwait
out
dec
loop
sub
pop
xor
loopne
addr16
ljmp
dec
fnsave
jl
add
pushf
sub
mov
test
stos
cmp
push
mov
addr16
push
xlat
sti
mov
orl
pop
cmp
jmp
jb,pn
add
xor
push
sbb
stos
movsb
std
or
inc
adc
sbb
jl
lods
xor
pushf
fadd
test
jge
push
rorb
mov
and
loope
int3
fmuls
jb
das
inc
movsl
mov
and
mov
loop
divb
sub
arpl
mov
in
mov
shll
xor
out
loope
push
stos
mov
loopne
jle
push
or
sbbl
in
dec
inc
cmp
and
mov
mov
xchg
dec
mov
out
push
lret
inc
jbe
sub
xchg
sti
inc
mov
sbb
and
lret
daa
jb
das
notb
cmp
ljmp
pop
ds
loope
clc
mov
inc
lcall
inc
jp
test
subl
xchg
adc
int3
sbb
ror
mov
imul
or
and
xlat
lock
jecxz
dec
pop
rorb
aad
and
lcall
add
add
push
mov
in
inc
in
aas
shl
mov
addb
xor
outsb
xchg
popf
int3
adc
pxor
fcompl
sub
out
int3
dec
jecxz
dec
fstl
mov
popl
mov
add
push
int3
add
cmp
stos
lds
inc
push
insb
call
cmp
mov
fimull
dec
cmp
lret
mov
dec
pusha
xchg
out
bound
adc
test
cmp
push
push
lahf
sub
sti
test
inc
call
aad
adc
pop
mov
int3
nop
setp
jae
loop
jge
cmc
mov
into
repz
inc
inc
rorb
dec
dec
sub
jno
dec
jnp
pop
pop
add
fwait
test
mov
ret
add
or
cmp
mov
jno
test
cmp
ja
rorl
sub
jg
les
lods
mov
test
push
rol
cmpl
sbb
fildl
jg
mov
pmullw
lret
cs
cmp
mov
add
push
or
and
loop
mov
jae
mov
add
sub
mov
inc
cmpsl
fcomps
push
stc
mov
fildll
cmp
pop
inc
pusha
add
and
add
pop
lods
mov
mov
outsl
mov
dec
dec
push
popa
add
jae
add
sbb
mov
mov
insb
cmp
pop
cmpsl
push
mov
jmp
jno
xchg
jbe
icebp
xchg
roll
mov
and
add
or
adc
mov
add
sbb
fnstenv
mov
insl
xchg
mov
cltd
out
jo
xchg
push
in
sbb
popf
popa
js
imul
pop
pop
mov
inc
lret
dec
stc
xchg
sub
xor
nop
mov
cltd
mov
jl
pop
xchg
rcrb
test
fisubrl
sahf
jnp
push
call
sub
inc
or
cld
inc
push
mov
lea
xchg
nop
mov
sbb
sbb
mov
sbb
shrl
pop
pop
test
pop
int
ja
rorl
rorl
aad
out
push
inc
inc
pop
in
shlb
ds
xor
addr16
pop
mov
into
pusha
jb
sbb
lods
dec
movsl
cmp
ds
xlat
xor
jb
sbb
ljmp
imul
cmpsl
push
jmp
and
dec
dec
mov
mov
fisubs
movsb
pop
les
mov
addr16
or
mov
das
sub
push
mov
mov
aas
cmpl
out
outsl
sti
loope
icebp
and
mov
xchg
aaa
adc
lcall
sub
and
rcrb
clc
mov
cmp
cs
ss
ret
cmp
ss
scas
mov
dec
aaa
ret
rolb
cmpsb
sub
push
clc
gs
mov
sbb
jbe
sub
sub
sub
test
hlt
push
lea
movsl
sbb
leave
push
lahf
sub
repz
xor
add
js
jbe
lock
dec
xchg
mov
lea
iret
add
ljmp
sti
mov
shll
sub
movsb
pop
test
out
pop
and
fnsave
hlt
test
fisubl
addr16
aaa
cmc
xorl
stc
sbb
pop
out
pop
xchg
movsb
cmp
hlt
mov
testb
das
nop
inc
outsl
push
jle
cmpsb
xchg
int
inc
leave
jg
inc
imul
mov
test
ja
mov
add
pop
mov
xor
js
push
pushf
ret
iret
jbe
imul
out
adc
out
pop
jle
gs
cmp
jb
adc
push
lods
mov
test
sbb
fucomi
mov
push
push
add
outsb
add
jmp
in
mov
rorb
daa
pop
movsl
stos
filds
mov
lds
mov
andb
dec
jae
ja
repz
add
in
pushf
sub
lds
repnz
adc
jne
fistl
sub
cwtl
lods
push
inc
adc
and
sahf
pop
add
inc
mov
mov
roll
push
fstpt
lods
dec
and
std
add
inc
je
or
fisubrs
and
push
ljmp
inc
out
fadd
adc
and
push
cmpsl
mov
and
mov
add
lcall
pop
xor
shl
jmp
cld
lahf
mov
rcl
mov
dec
lahf
mov
je
and
dec
lea
pop
fbstp
mov
incb
das
or
and
inc
ja
in
out
pop
fwait
adc
cwtl
jbe
sarl
dec
push
fbstp
dec
and
mov
sbb
pop
imul
add
adc
mov
cmpl
mov
mov
dec
arpl
outsb
repz
in
stos
les
or
sti
movsb
fs
dec
jo
ja
js
or
shlb
je
cmp
cmp
mov
push
rcl
mov
addb
push
std
and
lods
xchg
mov
ja
cmp
push
imul
push
cmp
xor
push
mov
es
sbb
les
popf
jb
sub
je
push
push
aaa
icebp
xchg
adc
fsts
jae
packuswb
dec
test
call
mov
sub
jge
push
xchg
xchg
ss
lret
enter
cmpsb
cmc
push
pop
js
inc
fistps
push
sub
jns
out
add
insl
mov
lret
out
mov
clc
and
pop
or
xor
outsb
cmp
dec
add
test
out
popf
cmp
jge
stos
or
aad
imul
mov
ljmp
shll
mov
inc
shrl
pop
lds
mov
push
pop
inc
test
xchg
xchg
lcall
inc
test
fidivrl
out
pop
es
nop
and
sbb
add
or
xor
out
or
mov
mov
or
push
ds
mov
push
sub
jge
adc
shrb
sbb
addr16
lret
adc
jle
sbb
pop
in
and
int
mov
push
ds
fistps
lret
dec
mov
leave
stos
jbe
imul
push
nop
test
cmp
lret
outsb
push
ret
and
pop
lcall
mov
sub
sbb
shrl
lock
lret
dec
rolb
scas
and
arpl
sub
insl
mov
fisubrs
call
rep
inc
cmp
push
iret
pop
cmpsl
cmpsb
es
sub
and
stc
lods
rorl
inc
mov
insb
clts
pop
roll
enter
add
ljmp
adc
popf
sbbl
push
mov
mov
rol
sbb
xchg
fs
cli
inc
sub
inc
nop
sbb
subl
enter
lret
iret
xor
xchg
addb
pop
fstpl
mov
jbe
inc
fnstenv
mov
pop
adc
ret
jae
shll
test
movsb
sbb
daa
sbb
popf
ds
repnz
fistpl
add
bound
push
out
adc
repnz
cmpsb
sbb
adc
dec
jle
push
mov
sub
jmp
or
in
lret
inc
scas
push
and
leave
in
mov
sahf
ss
int3
hlt
insl
push
pop
negb
jmp
ja
xchg
jmp
insb
jge
lea
popa
sub
cmp
and
inc
sub
push
insb
xor
and
or
imul
rcr
or
inc
xor
xor
xchg
sbb
mov
and
pop
lock
arpl
adc
mov
or
stc
or
xchg
sub
jmp
add
leave
bound
aad
arpl
insb
push
adc
sub
adc
in
adc
and
sub
ja
mul
test
mov
iret
push
pusha
sahf
xchg
pop
add
push
xor
mov
fiadds
pop
rolb
sub
mov
and
fcmove
shlb
test
fwait
cmpsb
inc
test
sbb
fdivs
jbe
scas
inc
mov
rolb
mov
mov
arpl
outsl
outsl
sar
daa
in
xchg
test
or
push
and
cli
stos
adc
jns
cmpl
push
dec
mov
xchg
fisubl
inc
or
mov
xchg
ret
ss
adc
pop
shlb
jmp
in
mov
jmp
popa
in
inc
push
mov
shlb
fstpt
hlt
fisubs
repnz
lcall
jns
cmp
int3
push
mov
jo
je
aaa
addr16
das
mov
inc
cmp
loop
fs
repz
mov
mov
cld
rcll
call
push
es
loop
lods
sub
std
mov
and
push
sbb
mov
pop
dec
mov
imul
mov
push
add
cmc
outsl
push
sahf
dec
mov
dec
or
std
mov
ja
icebp
lret
cld
sahf
out
mov
lods
decl
dec
jecxz
push
adc
scas
cmp
std
mov
inc
mov
adc
jnp
fdivrl
add
into
pop
daa
xchg
push
outsl
outsb
dec
mov
cmc
andb
jns
cld
stos
ss
sbb
cwtl
and
cwtl
nop
test
lods
inc
and
pop
ret
and
add
nop
add
add
dec
push
pop
mov
sbb
jbe
repnz
addr16
lds
and
jecxz
jl
mov
sub
pusha
sbb
lret
iret
add
pop
xchg
mov
xchg
dec
cli
mov
sbb
out
jne
xor
pop
cmp
rcll
mov
ret
aam
sub
test
jnp
roll
das
ds
outsb
jb
cmp
dec
jno
les
cmp
mov
test
filds
pop
jle
daa
xchg
cs
sbb
dec
or
sbb
mov
xchg
sub
mov
ss
out
xor
push
or
and
pop
push
fildl
into
xorl
mov
fildl
sbb
dec
in
out
frstor
xchg
pop
outsb
stos
push
add
xchg
movsl
movsl
push
repnz
rorl
ja
cmovnp
ret
out
ljmp
mov
stos
cmp
pop
es
xor
xchg
shlb
lock
pop
and
dec
xchg
int
cmp
je
std
inc
mov
out
fadds
push
mov
xor
jmp
addr16
arpl
loope
pop
scas
add
ljmp
pop
pop
fstps
enter
cmp
or
into
leave
sub
insb
fbstp
cmc
xchg
int3
mov
cli
pushf
or
subb
cmp
lds
out
filds
pop
and
mov
test
inc
push
xchg
xchg
aad
mov
xchg
idivl
mov
sbb
push
adc
pushf
sti
jecxz
push
sub
shlb
sti
test
dec
daa
test
inc
push
adc
cld
mov
inc
ljmp
fnstenv
bound
icebp
ljmp
pop
jmp
cmp
inc
or
hlt
cmpsl
bound
lods
aad
and
int
inc
dec
test
popf
add
jmp
cmp
fs
int
sar
scas
jge
pmaxub
jae
aaa
dec
sahf
xor
sub
jb
in
and
scas
test
adc
js
sbbl
adc
jae
out
mov
orl
mov
aas
pop
test
inc
adc
jecxz
out
mov
orl
gs
cmp
inc
test
lea
test
pushf
mov
mov
cmpsb
and
pop
lret
incl
enter
pop
xchg
out
xchg
nop
push
dec
mull
and
loopne
cltd
repz
int
movsb
mull
rcl
mov
inc
aam
jae
dec
jno
enter
sub
or
shrb
mov
adc
or
jecxz
pop
in
mov
adc
out
xor
ljmp
out
or
mov
inc
dec
add
inc
mov
sbb
xor
sub
mov
aam
cltd
or
or
push
mov
mov
xor
stos
mov
mov
ror
icebp
orb
or
mov
in
dec
inc
mov
hlt
or
in
dec
repnz
jb
mov
xbegin
jns
jnp
fdivrl
in
popf
sahf
mov
adc
aas
push
aad
push
dec
out
mov
jle
push
push
scas
xchg
leave
inc
dec
fs
and
jb
push
xor
dec
lods
xor
int3
mov
mov
hlt
out
loope
sahf
cmp
inc
test
or
mov
mov
sbb
cmp
cmpsl
mov
lret
fcmovnbe
in
xchg
inc
xchg
insl
push
inc
mov
and
fldcw
mov
xor
cmp
xor
clc
ret
loope
jne
or
jp
pop
into
push
or
gs
decb
stos
sub
ret
rcr
bound
mov
fnclex
mov
pop
sub
adc
push
push
js
ljmp
jmp
xlat
icebp
inc
sbb
mov
ljmp
sbbb
dec
push
pop
xor
sahf
ret
stc
out
loope
cmpsl
sarl
and
fistpll
jl
lret
fwait
test
shr
sbb
loope
sbb
push
push
pop
shlb
ds
pop
mov
jae
cmp
fs
ds
mov
outsb
fimull
jno
jne
and
xchg
inc
cmp
imul
mov
or
fsubs
push
std
fisubs
adc
insl
lret
sub
sbb
icebp
aaa
je
negb
es
sub
lahf
and
push
testb
js
arpl
inc
xchg
arpl
icebp
mov
adc
jb
push
sub
push
xor
xorl
cli
sbbb
push
mov
movsb
mov
add
pop
insb
sub
into
insb
mov
dec
inc
cmp
imul
or
negl
fdivr
fcoml
outsl
imull
rcll
pop
and
jnp
pop
inc
fs
lahf
pop
xor
test
inc
loopne
mov
add
jle
aam
sarl
pop
adc
inc
dec
push
pop
inc
pop
jne
xor
mov
nop
jbe
or
mov
xor
dec
mov
xorl
mov
insb
cli
and
xchg
pop
subl
sub
cltd
inc
fwait
jnp
pop
mov
call
icebp
mov
lahf
fsubl
fs
mov
jmp
push
jmp
add
ss
rorl
fstpl
jmp
je
mov
sarb
into
rcll
and
shll
das
cltd
fs
xchg
sti
clc
loope
leave
arpl
es
ja
ljmp
push
pop
rol
mov
call
or
shr
sarl
mov
jecxz
adc
fnsave
nop
imul
lock
dec
ret
mov
jmp
xor
mov
mov
adc
and
xchg
repnz
adc
pop
lods
mov
enter
mov
mov
inc
dec
adc
jns
jo
xchg
and
mov
pop
xor
or
out
cmc
add
mov
sti
mov
lock
imul
lods
testl
dec
jns
imul
aad
pop
leave
and
ret
je
stc
inc
dec
dec
loop
cmp
repnz
sbb
stos
cli
pavgb
add
jl
add
pusha
mov
add
jb
leave
mov
out
leave
cmp
icebp
pop
sbb
movsb
push
into
inc
adc
mov
adc
cmp
push
into
push
subb
push
repz
mov
adc
test
cmp
or
mov
push
popf
insb
cmp
es
add
ror
pop
cmp
pop
insb
inc
or
into
mov
push
mov
xlat
cwtl
inc
and
inc
in
aaa
int
xchg
xchg
xchg
scas
cmp
repz
jmp
push
sahf
iret
dec
or
shrb
orb
xor
stc
and
sbb
xchg
arpl
cmc
nop
push
sbb
add
inc
test
jmp
xlat
xor
lea
bound
sub
adc
mov
lcall
insb
adc
xchg
sbb
xor
insb
lcall
adc
mov
and
add
insb
rorb
add
aaa
add
ss
mov
cmp
lret
mov
mov
inc
push
mov
lods
movsl
out
lods
adc
dec
fidivrl
ret
jle
pop
pop
inc
dec
inc
cld
xchg
lcall
inc
loope
dec
insb
mov
es
pusha
jbe
add
lds
shlb
pop
dec
test
or
dec
pop
push
mov
push
dec
mov
add
mov
mov
insl
fucomi
jg
mov
adc
mov
push
jle
cs
out
lock
sub
pop
fadd
imul
sub
lret
mov
mov
jg
dec
sbb
mov
mov
pop
and
out
sub
fucomi
pop
das
rcll
fildll
mov
popf
int
push
into
jl
cmp
stos
test
inc
fidivrs
mov
popa
add
pop
sub
lahf
lcall
pop
out
cmp
jnp
pop
inc
mov
in
xor
fbld
add
and
fisttpll
lock
xchg
fs
push
mov
or
fwait
cmp
dec
loop
pop
sub
xchg
cmp
rcl
ret
aam
push
adc
fcoms
jge
xchg
out
jl
lock
in
stc
push
lods
leave
imul
fs
mov
push
insl
pushf
xor
add
pop
mov
rcr
or
call
int3
fcoml
enter
or
test
add
mul
jl
jo
cmp
pushf
addr16
cmc
push
adc
cmp
rorl
in
scas
or
mov
adc
dec
jo
stos
mov
fsub
shll
mov
shlb
xchg
stc
adc
stc
stos
lock
dec
fcomps
push
test
push
cwtl
mov
jmp
inc
gs
lock
out
cmc
mov
shll
and
aad
pop
mov
cltd
call
icebp
in
jle
lock
xor
shll
mov
push
mov
inc
pop
into
or
mov
cmp
loopne
stc
outsl
inc
push
or
cmp
mov
imul
mov
scas
jnp
in
add
adc
xlat
repnz
sbb
gs
int
pop
mov
in
testb
or
adc
pop
enter
daa
sub
or
mov
or
or
xchg
shll
lret
jecxz
in
sub
sbb
fisubrs
add
xchg
nop
inc
pop
xor
sub
fisubrs
das
or
jno
lds
scas
into
int
aad
xchg
mov
loopne
in
into
push
xor
mov
jp
or
call
ja
fcomps
xor
out
mov
push
add
outsl
adc
popa
popf
mov
cmpsb
adc
mov
xor
stc
or
or
fisubrl
jge
les
jp
pop
gs
leave
bswap
pop
push
mov
scas
cmpsl
inc
ljmp
xor
jle
xchg
int
mov
cmpb
sub
mov
xchg
dec
sahf
and
xchg
xchg
mov
outsl
adc
mov
cs
sbb
js
xchg
cmp
xor
mov
test
push
fistpll
outsl
fbstp
or
fstp
cmpsb
rcr
jb
jnp
movsl
mov
ja
cli
jmp
enter
ffreep
add
add
je
mov
sub
mov
and
mov
cmpsb
jne
inc
dec
inc
stc
pop
xchg
outsb
or
cmp
adc
ja
xlat
push
dec
inc
mov
arpl
xchg
andl
pop
or
imul
push
stos
mov
divb
xor
cmpsb
push
pop
xchg
cmp
sub
andl
add
inc
mov
inc
pop
lcall
mov
xchg
push
in
pop
fwait
out
or
xchg
sbb
cmpsl
or
jbe
call
out
xchg
int
sbb
sbb
push
adc
test
cs
mov
lcall
cs
mov
mov
jbe
jnp
movsl
arpl
das
sbb
loope
sbb
sub
push
jno
sbb
popa
icebp
jle
test
push
cmc
sub
out
and
shll
pushf
sub
das
mov
mov
push
jp
ljmp
int
cmpsb
pop
sbb
inc
insl
insl
inc
pop
mov
out
fimuls
push
addr16
iret
ss
out
les
mov
cmp
das
mov
pop
and
idivb
lods
shlb
popa
and
mov
dec
cmp
lcall
mov
and
pop
movsl
inc
ljmp
lea
mov
pop
jmp
bound
and
jg
jae
jge
xor
repz
dec
inc
push
and
test
push
jl
popf
mov
lahf
pop
and
and
pop
jecxz
jmp
add
jge
lcall
cltd
int3
push
sub
or
lahf
testb
and
cli
ds
and
dec
and
js
in
out
or
js
js
push
test
adc
call
js
dec
arpl
dec
repnz
aaa
or
push
sbbl
movsl
ljmp
imul
and
sahf
push
std
outsb
popa
xor
cmp
in
push
repnz
stos
punpckhwd
cmc
addb
mov
shl
inc
sahf
dec
loope
jg
dec
mov
test
jge
adc
add
xchg
ret
popf
add
stos
mov
icebp
in
mov
cli
arpl
ficomps
repz
lret
xor
notl
xchg
nop
cmp
cmpl
push
cmpsb
dec
dec
xor
sbbb
stos
int
ja
lods
sahf
add
lods
or
sbb
ss
xchg
loope
add
mov
divb
mov
add
ret
nop
jo
xlat
js,pt
ljmp
nop
push
add
xchg
jl
cmpsb
iret
and
stos
jno
inc
repnz
cmp
in
into
bound
sbb
mov
mov
mov
pop
test
ffree
xor
pop
ret
pop
imul
jl
sub
push
push
sbb
sahf
jnp
mov
jge
stos
pop
mov
jmp
int
imul
pshufw
ss
pop
arpl
stc
cs
mov
mov
push
mov
icebp
pop
inc
inc
jb
xor
clc
mov
jns
jbe
add
jp
mov
iret
push
mov
fwait
es
faddl
shrl
mov
jg
lds
imul
sbb
repnz
cli
in
sbb
xchg
mov
lea
cs
int3
daa
filds
rcrb
dec
jns
mov
fwait
arpl
stos
outsb
test
stc
sub
fildll
mov
xchg
mov
int
cmp
mov
lods
sti
sbb
xchg
daa
jp
adc
cmp
xor
adc
imul
xor
push
hlt
xorb
xor
pop
shl
push
xchg
pop
paddsb
mov
popa
negl
pop
sbb
cli
or
jns
rol
das
movsl
push
adcb
shlb
adc
or
jae
push
shll
pop
mov
adc
aad
add
sbb
fwait
nop
sbb
popa
aaa
push
push
insb
xchg
pop
out
xchg
or
in
jge
sub
shll
mov
lock
ret
daa
mov
pop
je
adc
adc
dec
cld
or
add
cmp
lret
xchg
or
mov
pop
jmp
out
inc
pop
ret
push
cmp
xchg
hlt
es
cmpsl
and
insl
jmp
cld
or
sbb
inc
mov
adc
pop
rcl
mov
xor
dec
xchg
test
sbb
add
push
pop
push
aam
je
jmp
mov
arpl
testb
xchg
mov
mov
dec
gs
dec
jge
dec
aam
push
call
adc
out
mov
or
jmp
imul
jo
sub
xchg
std
or
hlt
iret
insl
insl
lods
cwtl
jno
or
xchg
and
cltd
adc
ret
nop
inc
sub
call
js
jp
or
jg
dec
int3
jg
loope
arpl
cmp
mov
pop
cmp
daa
sahf
inc
std
sbb
xor
push
mov
testl
mov
mov
aas
test
loop
div
mov
aam
and
pusha
inc
in
xchg
scas
push
popa
sti
in
in
inc
mov
into
cmpsl
clc
test
or
adc
movsl
sub
into
cwtl
inc
cmpsb
xor
mov
push
dec
jmp
sar
cmpsl
cmp
xchg
xor
push
mov
outsl
test
jl
xor
jge
andb
int3
push
cmp
in
insb
mov
mov
add
lcall
cmp
inc
stc
mov
mov
leave
inc
push
mov
lock
xchg
loopne
jae
bound
adc
das
push
enter
cmp
xor
shlb
lahf
je
mov
pop
imul
loope
inc
ficoms
jne
dec
mov
dec
pop
lret
mov
push
dec
ret
lods
stos
mov
leave
xchg
gs
scas
das
adc
inc
fldcw
jns
dec
adc
mov
test
mov
dec
cmpsl
das
mov
icebp
jp
cmp
ljmp
popf
or
fcmovb
and
dec
dec
pushl
mov
loopne
jb
repz
aas
sbb
mov
mov
pop
test
pop
xchg
jge
dec
push
dec
push
and
push
pop
int3
das
scas
jp
insb
jnp
mov
mov
repz
mov
lock
loop
xor
pushf
sarb
movl
push
inc
ja
jp
sarb
pop
push
inc
push
or
scas
ret
adc
leave
push
dec
pushf
repz
hlt
popa
cmp
add
add
pop
mov
push
jle
push
sub
xor
cs
in
mov
dec
stos
fisttpll
fdivrl
adc
mov
jne
pop
xchg
fbld
xchg
iret
push
add
sub
sbb
add
roll
sub
and
cli
mov
jg
sub
sarl
mov
inc
and
xor
loop
dec
imul
sbb
xchg
stos
xor
in
sbb
sbb
cmp
mov
push
xor
jnp
pop
inc
pop
xchg
into
inc
xchg
add
imul
in
mov
mov
dec
out
fucom
sbb
sbb
shlb
mov
test
push
les
pop
js
mul
adc
jle
cmp
int3
stc
push
sti
dec
es
subb
dec
add
fistpll
inc
xchg
pop
enter
pusha
xchg
mov
push
fidivrs
andb
in
inc
push
cmp
add
xchg
cmc
jnp
ss
push
movsb
cmc
popa
push
cmpsl
add
and
rorb
into
dec
pop
adc
mov
jae
out
sbb
cmp
xor
int3
daa
out
loop
iret
fistpll
in
adc
out
je
dec
mov
mov
cmp
ss
mov
cmp
add
test
scas
cmp
pop
outsb
daa
sub
inc
rcl
lods
jle
mov
repnz
lock
adc
rorl
jp
sti
add
xchg
adc
scas
mov
sub
lods
xor
loop
push
inc
rorl
xchg
nop
push
and
dec
push
push
and
loopne
xor
imul
cmp
cmpl
xchg
adc
sub
inc
xchg
lock
sahf
jbe
mov
or
cmc
or
leave
cmp
popa
jl
popf
add
push
add
scas
rcll
xor
leave
push
es
mov
gs
and
inc
test
stos
insb
nop
inc
loopne
and
dec
imul
popf
std
loop
add
cmp
lret
ss
es
dec
pop
ret
int3
xor
push
sbb
jae
mov
xchg
test
inc
inc
adc
lds
push
pop
pushf
rcr
cmc
mov
add
xor
cld
test
daa
test
pop
sahf
cli
fs
leave
xor
jns
xlat
jne
cmp
fldenv
scas
popa
mov
fimull
inc
or
dec
aam
fstl
cld
std
ret
add
in
mov
or
sbb
fldcw
sbb
testb
in
rorb
or
fcmovnb
adc
push
cmpsl
clc
xchg
loope
xchg
add
test
hlt
sub
jno
adc
adc
xlat
xchg
jg
out
jno
imul
iret
aad
je
or
adc
add
inc
xorl
cld
aas
popa
out
mov
popa
xor
and
cmp
inc
sarb
jb
and
aaa
add
dec
lcall
dec
les
sbb
loop
aam
jmp
add
rorb
push
pusha
lds
pop
repnz
shr
xor
xchg
lcall
mov
mov
jno
mull
cld
cmc
out
mov
cltd
jg
aad
rorl
mov
cmpsb
jns
push
or
mov
pop
xchg
ljmp
les
gs
ficoml
cmp
fisttpll
pusha
jecxz
lds
pop
cmp
and
out
cmp
fwait
enter
xchg
ret
xor
xor
out
mov
jp
cmpsl
lds
stos
xchg
daa
and
mov
jl
lret
call
lret
mov
mov
mov
mov
jae
pusha
or
js
cmp
aas
shl
mov
fldl
outsl
add
pop
fldl2e
rorb
test
cmpsb
push
jne
outsb
scas
jl
jae
insl
or
mov
out
imul
shlb
orb
test
jns
ljmp
add
add
sbb
mov
aaa
dec
addr16
aad
stos
std
aam
or
push
pop
mov
dec
cmp
cmp
cld
movsb
sub
cmp
and
xor
arpl
adc
inc
outsb
leave
add
xor
dec
jecxz
stos
pop
push
cmp
mov
jle
or
aam
shrb
adc
lods
mov
imul
arpl
push
jecxz
sbb
mov
outsb
mov
insl
aas
add
sub
inc
pop
cmp
inc
jne
adc
xor
pop
mov
mov
insb
cmc
test
orl
leave
push
inc
fidivrs
imul
jnp
fsubr
jl
xor
adc
divl
or
sub
lcall
repnz
mov
xchg
xor
adcl
sub
and
dec
inc
inc
mov
loop
cltd
mov
cmp
rcrb
sbbl
cli
mov
jecxz
xor
insl
movl
lods
mov
adcl
aas
test
ljmp
jecxz
pop
outsl
mov
shrb
add
xlat
test
jns
mov
mov
mov
pushf
fldl
aas
jo
lods
jl
scas
aam
rorb
std
sub
leave
xchg
and
lods
push
or
stc
cs
fisubrs
lret
outsb
loope
xchg
stos
shlb
cmovp
push
pop
stc
dec
loope
inc
add
movsl
xorb
xorb
ljmp
aad
inc
inc
enter
or
push
push
push
adc
inc
xor
call
pop
pop
ss
or
cmc
ja
insb
xor
dec
jmp
sahf
aad
push
push
cld
push
ret
cld
scas
mov
es
ja
mov
mov
lcall
stos
inc
mov
orb
cltd
testb
mov
iret
add
jl
cmpsb
out
sti
scas
ret
pop
clc
test
lods
lret
push
test
pushf
fwait
pop
jne
mov
or
rcl
sbb
push
or
sub
dec
cmp
lahf
adc
in
leave
cmpsb
les
pop
stos
out
mov
out
add
fistps
cld
push
cltd
aad
cld
push
lahf
loop
inc
or
adc
xor
js
xor
adc
dec
lock
icebp
jecxz
adc
into
rcrb
push
mov
push
mov
bound
outsb
pop
xchg
cs
or
adc
pushf
jo
push
push
addl
out
int3
lods
dec
jmp
mov
pop
or
pop
cwtl
cmp
sbb
jmp
mov
pop
das
faddl
test
and
insb
adc
mov
inc
pop
dec
testl
cltd
hlt
cmpsb
inc
push
int3
push
jnp
or
andl
repnz
sbb
movsb
wbinvd
adc
into
cmp
add
sti
pop
adc
iret
pop
out
cmpsb
fsubrs
test
frstpm(287
lcall
inc
jge
mov
mov
jbe
test
mov
aas
mov
loope
into
fs
or
stos
dec
jg
xchg
and
int3
shlb
repz
add
sbb
pop
daa
jg
les
gs
cli
jo
fstps
int
fisubs
nop
pop
lods
jp
mov
mov
jb
test
or
leave
js
push
fsub
lock
push
sub
jo
jle
dec
and
mov
fildll
test
xor
and
jae
push
sub
popa
int3
lea
in
lods
mov
push
jecxz
mov
ret
lds
mov
fstpt
mov
sbb
cmpsb
jle
mov
idivb
xor
inc
js
mul
int
shrl
mov
push
adc
and
jnp
or
adc
jns
mov
ret
jecxz
ss
gs
jne
sarl
ljmp
ss
mov
movsb
add
or
bnd
cmp
sbb
lods
mov
cmp
pop
cmpsl
lcall
dec
scas
xor
jle
add
aas
int
les
dec
dec
or
loope
jns
pusha
dec
add
xor
iret
and
popf
cmpsl
push
imul
and
das
add
jno
cwtl
mov
adc
aad
je
mov
adc
jbe
jg
pop
xchg
rorb
call
rcrb
icebp
aaa
mov
jne
repnz
jg
and
ds
incb
mov
je
fcoml
dec
mov
rorb
insl
jecxz
loopne
hlt
adc
pop
sub
imulb
xor
outsl
jl
jg
scas
xlat
xlat
sbb
clc
push
fbstp
jg
sbb
xlat
popa
dec
or
ficoms
out
adc
push
sbb
cmpsb
mov
push
popf
dec
les
lea
cmc
leavew
xchg
jo
leave
test
sbb
pop
in
sub
xor
hlt
lcall
push
cld
cli
sbb
iret
mov
gs
call
mov
jle
mov
jp
outsl
adc
daa
push
mov
mov
mov
jecxz
push
lcall
imul
fwait
das
cmp
lea
mov
stc
mov
push
push
and
repnz
dec
cmp
sbb
gs
jnp
leave
or
dec
mov
scas
xchg
scas
pop
mov
test
sub
pop
sbb
inc
stc
jb
fnstcw
fisttpl
mov
xchg
and
mov
lea
test
mov
sbb
iret
lcall
sarb
cmp
jmp
inc
mov
out
add
pushl
add
addr16
dec
popf
sub
push
push
movsb
or
aas
repnz
mov
lea
jecxz
ret
cmp
cmp
lahf
push
inc
inc
xchg
nop
movsl
adc
mov
xchg
nop
jb
scas
lock
cmp
in
jns
sub
mov
xchg
mov
scas
out
inc
cltd
push
jno
in
rcrb
add
jl
and
jg
gs
lock
sub
popf
ss
pushf
adc
data16
mov
scas
mov
xor
ds
mov
in
aas
scas
cmpsb
push
fbld
pop
sub
shll
sub
test
scas
rcrb
lods
sbb
sbb
pop
pop
inc
pop
dec
push
sti
loope
mov
dec
mov
and
jmp
sbb
les
fdivr
subl
pop
mov
push
fnstenv
cmp
mov
in
xchg
jp
sbb
lds
mov
cs
in
jnp
push
sbb
rol
cmp
cmp
xchg
ds
cmp
dec
cmpsl
pop
ud0
push
sbb
mov
aaa
inc
subl
xor
addr16
xchg
lds
inc
sbb
jp
test
shlb
clc
mov
pop
pop
clc
nop
lea
rorb
lock
je
xor
pop
cltd
jae
jmp
add
aas
push
mov
in
repnz
pop
imul
xor
sub
cld
mov
movsl
and
or
adc
xlat
or
push
jle
dec
mov
lea
adcl
lods
loop
jns
ret
imull
jnp
cmp
fsubrs
stos
hlt
ds
stc
jnp
int
jae
adc
or
xor
imul
arpl
and
shl
add
hlt
cmp
push
adc
sbb
incl
ret
jle
jp
shlb
sbb
dec
out
popf
imul
dec
sub
nop
stc
leave
dec
cwtl
notb
addr16
pop
out
pop
hlt
popa
and
fsubrp
lock
jle
sbbl
jmp
fbld
xchg
sbb
fildll
lock
rorl
push
mov
bound
adc
cwtl
rcrb
out
cmp
xlat
and
cltd
jmp
fisubrl
xor
dec
cmpsl
cmpsl
jg
stos
mov
aas
cmp
dec
jns
jle
roll
mov
imul
movsl
jb
pop
aas
jg
movsb
mov
mov
adc
and
mov
sub
mov
outsl
scas
pop
push
ret
push
hlt
dec
jo
and
or
mov
mov
and
xor
fsubs
add
lods
pop
sbb
out
pop
mov
lods
bound
jbe
mov
fs
cld
add
or
push
sub
sub
in
dec
enter
fnstsw
mov
loop
push
popa
and
or
nop
repnz
jecxz
inc
das
scas
and
push
and
mov
pop
or
aas
jmp
loop
xchg
fs
adc
insl
cli
or
pop
popa
or
xor
xchg
adc
scas
push
cmp
jb
xor
je
adc
jnp
aam
jle
in
mov
adc
lret
push
adc
cld
xorb
and
stos
xchg
xchg
insb
imul
xchg
add
cwtl
vucomisd
jmp
add
mov
loopne
out
xchg
inc
push
dec
mov
cmovae
cvttps2pi
fistl
inc
fsubrl
stc
xchg
cmpsb
lods
gs
lret
pop
fisubl
push
pushf
loop
clc
test
pop
sbb
inc
pop
mov
push
pop
xchg
movsb
push
jg
mov
out
mov
inc
js
loop
arpl
jp
jnp
fimull
out
cmc
lcall
jns
fcomps
mov
loopne
push
divl
je
insl
jl
mov
add
notl
std
inc
pusha
addr16
jge
adc
ljmp
cmp
push
ds
lea
xchg
out
mov
ljmp
jge
cmp
stos
aas
dec
push
repnz
inc
and
or
xchg
jp
push
jle
in
inc
xor
clc
or
mov
sub
sarl
enter
imul
cmp
push
cmp
mov
add
and
and
sub
ds
inc
shl
or
movupd
cs
and
sbb
cmc
pushl
cmp
xchg
mov
sub
sbb
in
push
into
mov
movl
test
in
fs
pop
jne
nop
xchg
cli
xorl
mov
dec
aas
sbb
and
add
jns
pop
pop
add
rol
lret
dec
call
push
xorb
leave
das
lret
iret
mov
leave
sbb
and
xor
add
mov
push
cmpsb
fdivl
mov
push
int
into
adc
lcall
sub
and
jns
add
mov
jecxz
sahf
leave
test
popa
xor
mov
jmp
xorl
popf
add
or
cmc
dec
or
aaa
dec
mov
mov
xor
jle
call
push
cmp
lret
sub
pop
xor
jp
jmp
cmp
and
dec
cmpsb
jg
xor
xchg
outsl
and
mov
shll
in
mov
or
mov
xchg
into
sub
cld
das
ljmp
inc
cmp
insb
dec
sbb
addr16
cmp
push
push
fldcw
into
je
fdiv
mov
inc
add
lret
int3
dec
loopne
adc
mov
adc
and
jo
jl
mov
or
aaa
jmp
xchg
pushf
cs
mov
lahf
ja
mov
inc
fdivrl
mov
aad
jno
xor
mov
mov
inc
cmp
pop
xor
jns
int3
sub
iret
test
sbb
shl
test
inc
inc
enter
pop
adc
jnp
xchg
mov
jmp
lds
andb
xor
fwait
and
mov
jle
cltd
and
in
mov
jnp
jmp
mov
je
fisubrs
stc
push
jne,pn
cmpb
lret
sub
mov
mov
mov
and
jnp
pusha
bound
lea
jg
aad
push
add
mov
mov
loopne
sub
lds
sub
or
hlt
push
iret
push
adc
jp
inc
push
ljmp
call
pop
aad
sub
jecxz
dec
into
pop
add
inc
test
mov
pop
pop
xchg
mov
pop
push
int
jp
test
sarb
loope
jb
enter
and
jecxz
shrb
test
gs
add
adc
scas
dec
mov
cmc
cmpsb
push
nop
sub
mov
fdiv
popa
xchg
int3
insb
inc
aaa
sbbl
push
mov
sbbl
fimuls
pop
jg
cmp
cs
mov
fldcw
inc
ficompl
iret
dec
cmp
lret
mov
mov
ja
out
test
inc
mov
pop
mov
int
ret
mov
jl
or
and
push
lahf
pop
into
add
into
in
xchg
pop
dec
shl
data16
movsl
sbb
cld
ss
outsb
mov
dec
adc
leave
je
xor
add
rorb
push
lock
and
in
jmp
push
popf
test
punpckldq
mov
xchg
das
dec
jle
ljmp
push
jns
jle
push
js
subl
xchg
jge
sub
push
push
inc
mov
pop
push
jmp
lcall
add
fcom
call
sub
mov
psubb
and
mov
rcr
mov
add
sub
out
and
fwait
jns
adc
mov
mov
sbb
lods
dec
jnp
fsubs
repnz
icebp
ljmp
pop
cmp
fs
insb
mov
negb
xchg
pusha
adc
or
imul
pop
inc
ficomps
int3
out
iret
daa
sti
mov
dec
add
jae
push
adc
mov
mov
add
and
pop
pop
jne
mov
jae
mov
je
jle
dec
lock
cwtl
pop
in
sbb
pop
dec
inc
cmp
int3
sub
hlt
sbb
xchg
fcoms
adc
push
repz
pop
scas
ja
push
bound
fldl
nop
insb
jecxz
shr
into
adc
push
xorb
mov
leave
inc
push
push
cmp
xlat
dec
dec
ja
mov
jmp
push
push
in
xchg
jmp
addr16
das
test
outsb
es
mov
das
jecxz
cwtl
mov
repz
xchg
es
sbb
push
cmp
inc
lods
pop
jmp
lods
cmp
xor
fs
cmp
daa
jl
push
sbb
mov
xor
lahf
popa
push
or
push
mov
vdivpd
dec
insl
sub
jp
enter
out
dec
mov
les
in
jno
xor
inc
xchg
and
mov
inc
outsb
daa
pop
push
clc
in
mov
xchg
or
arpl
xchg
test
jle
mov
subb
das
jne
sti
and
xchg
mov
mov
sub
movsb
mov
les
sbb
adc
mov
jl
fdivrl
inc
ja
inc
sbb
sbb
jmp
adc
out
dec
adc
xchg
cmp
inc
push
rclb
adcb
adc
fdivl
mov
or
inc
loope
inc
mov
into
test
mov
les
xor
mov
negb
pop
xchg
mov
pop
adc
sub
loopne
sbb
pop
sahf
xchg
xor
and
into
out
pop
or
jnp
xchg
add
pop
inc
pop
cmp
mov
and
jmp
or
cmpl
cld
repz
push
repnz
hlt
imul
sub
repnz
dec
in
pop
aad
loop
cs
or
ja
adc
and
lret
in
sub
xchg
out
fnstcw
pop
data16
movsl
insl
dec
pop
insl
fists
dec
lret
jne
lcall
int3
sub
fs
js
ja
rorl
mov
mov
loop
dec
inc
or
scas
jle
xchg
repz
out
mov
dec
fcomip
and
gs
outsb
les
sub
or
cmp
fstps
jmp
or
iret
mov
mov
addr16
fdivrl
lods
call
js
divb
leave
cwtl
test
outsb
stc
push
hlt
ffreep
leave
xor
cwtl
mov
push
cmpsl
cmc
fisttpl
mov
cmp
xlat
nop
cmp
rcr
mov
popf
mov
mov
dec
and
enter
cmpsl
mov
loope
loop
dec
sbb
push
jmp
mov
shlb
add
movsb
lcall
mov
push
iret
outsl
push
insl
out
lcall
inc
js
stc
out
jmp
xor
add
mov
in
js
pop
ss
jecxz
jno
scas
push
movsl
fwait
loop
jae
inc
or
jecxz
mov
adc
bound
aam
int3
fcomps
and
lret
ja
pop
mov
test
es
cltd
aad
inc
stc
dec
loop
sbb
in
inc
into
push
stos
adcb
jmp
in
cmp
xlat
and
das
dec
or
in
mov
pushf
lods
pop
out
scas
jns
test
ret
pop
lcall
inc
pop
mov
lea
push
xor
inc
xor
jno
lock
inc
jmp
idivb
xchg
pop
jns
xor
push
gs
sti
in
xor
test
leave
int3
or
mov
insb
and
mov
data16
jb
push
sub
mov
add
imul
adc
xlat
xor
xchg
ja
sub
cmp
sub
mov
jo
sbb
inc
sub
ja
outsl
pop
adc
xchg
push
test
adc
orl
popf
movb
push
inc
int3
jo
dec
arpl
xchg
je
ret
jae
enter
jb
cli
and
xchg
enter
xor
jp
jns
mov
jnp
sbbl
pop
pop
xchg
cli
xor
gs
in
orb
movsl
int3
je
inc
and
push
scas
inc
jl
test
lahf
or
andl
ret
aad
cltd
ljmp
sub
inc
in
pop
arpl
out
xchg
jmp
and
std
dec
jnp
inc
pop
push
fldt
int3
out
xchg
lahf
lret
jl
jnp
jmp
dec
inc
mov
leave
popf
mov
jno
bound
jge
push
jle
adc
call
iret
das
dec
daa
stos
ss
scas
cmpsl
dec
push
das
jmp
push
ficoms
cmc
xchg
clc
push
dec
mov
sbb
push
stos
xchg
shll
dec
adc
stos
jecxz
jae
in
inc
or
pop
out
push
jp
sub
stc
jecxz
sbb
mov
out
dec
cmpsl
dec
into
push
xchg
out
jne
xchg
fcoml
aaa
or
shlb
sbb
pusha
lds
insb
test
test
repz
dec
and
mov
jno
adc
idivl
outsb
je
mov
add
test
into
mov
enter
mov
inc
add
mov
add
mov
mov
mov
sub
loope
push
ja
cmp
fimull
sub
mov
test
dec
leave
enter
fldt
push
xor
cld
lea
stos
push
lcall
inc
add
jmp
push
lahf
call
into
fwait
add
cmpb
sahf
jnp
roll
jmp
inc
pop
repz
inc
jle
jnp
mov
imul
pusha
in
fxch
xor
gs
adc
xchg
in
stos
mov
jae
pop
xchg
jb
out
jns
inc
mov
dec
jb
les
shl
fcomip
das
push
out
aaa
add
sub
es
sub
sbb
dec
movsb
sarl
push
enter
mov
adc
iret
push
pshufw
fs
add
into
pop
insb
sbb
in
loope
lock
popl
cmc
push
insb
sti
lds
mov
xor
jnp
mov
sbb
mov
and
icebp
call
mov
in
ljmp
pushf
out
lds
popf
lret
enter
in
dec
mov
test
xor
sub
cmp
mov
insb
push
rcrb
movl
loopne
xchg
pop
mov
mov
jl
sbb
push
add
inc
lret
divb
xchg
ret
lds
jl
cs
aaa
jno
jns
adc
scas
les
mov
cwtl
in
cmpsb
jg
and
cmp
imul
fidivrl
js
push
sub
aas
push
test
imulb
call
inc
dec
xorl
decl
pusha
mov
dec
jge
cld
outsb
mov
js
repnz
push
loopne
aas
sub
jg
gs
or
inc
push
orb
inc
fildl
mov
pop
mov
cld
idiv
lret
add
add
jl
fwait
mov
rcr
rol
cmpsl
fstpt
mov
ret
int3
cmp
lea
repz
das
mov
push
pop
xchg
add
hlt
jne
pop
mov
fmull
test
fsubs
mov
push
test
stos
jmp
jmp
in
in
ja
js
jns
rcrl
dec
stos
sub
cmp
fisttps
mov
dec
outsb
orl
sbb
mov
je
and
lahf
test
push
hlt
mov
lcall
jo
into
pop
xlat
jno
jae
dec
jle
outsl
sub
xlat
call
stos
mov
leave
cmpsl
jb
xor
jo
add
roll
add
lea
lods
sbb
test
add
add
scas
out
jmp
cmc
xchg
cmp
test
outsl
pusha
or
adc
in
mov
mov
dec
mov
and
xchg
and
lret
arpl
cmpsb
mov
dec
jne
sbbl
lods
add
xor
jl
hlt
dec
cmp
jae
pop
mov
mov
sbb
pop
popf
xchg
adc
sbb
fcmovb
cli
stc
mov
sbb
mov
xchg
push
adc
insl
mov
pusha
push
std
sbb
rorl
lods
sbb
add
test
cmp
ja
adc
push
andl
mov
xchg
lea
inc
xchg
and
stos
jae
mov
stos
sti
push
inc
addb
fisubrl
cmp
push
push
sub
xchg
mov
or
and
xlat
shll
jl
imul
fwait
and
jle
pop
push
fisubrs
mov
inc
xor
dec
add
or
mov
out
icebp
rclb
fdivrs
bound
push
test
lods
inc
add
std
addr16
cmp
dec
andl
mov
das
sarl
inc
pcmpeqw
jge
scas
jne
inc
or
je
rcrb
xorb
jbe
jge
adc
loopne
cmp
lret
shl
fcmovne
in
clc
fsubr
or
insb
push
cwtl
sbb
sbb
movsl
int
dec
cmc
mov
or
out
mov
ret
inc
adc
jb
stos
rorb
imul
inc
jae
ret
rorl
int
rcr
mov
sbb
movsl
xor
adcb
aaa
inc
pop
arpl
cltd
clc
in
les
movsb
or
jo
sbb
cli
fsubrl
push
stos
negl
inc
cwtl
ljmp
les
aam
push
or
cmp
dec
in
jo
jg
enter
inc
sbb
inc
add
pop
fcoml
push
repz
pop
sub
dec
xor
movsl
pop
loopne
rolb
insb
js
leave
sti
push
xor
bound
aam
add
adc
lret
enter
sbb
cld
mov
mov
out
jb
out
faddp
fptan
rcll
inc
xchg
mov
pop
jns
lods
scas
fdivrs
jp
sub
stos
cmp
in
lds
std
lock
push
push
push
test
adc
cmp
adc
fdivrs
aad
mov
jg
movsb
inc
clc
xchg
mov
clc
dec
pop
fdivp
loop
js
mov
sti
and
xor
lock
fisttps
mov
cmc
lods
clc
jbe
scas
mov
out
pushf
outsl
movsl
mov
cltd
cwtl
mov
cmp
ds
jae
sti
jns
pop
cld
shlb
cmp
or
dec
inc
and
lds
add
xchg
xchg
inc
fwait
jg
jl
loop
lea
cs
cmp
jle
jecxz
or
pop
inc
add
pushf
push
bound
andb
mov
push
dec
jecxz
dec
pop
mov
jo
jb
jl
lcall
adc
dec
loope
sarb
and
mov
xchg
daa
shrl
and
mov
out
mov
lds
popf
pop
and
push
adc
out
mov
out
lahf
test
lods
sarb
loop
cmp
aaa
xchg
jmp
lods
xor
xchg
xchg
dec
mov
xor
inc
lock
mov
repz
stc
pop
paddb
jns
imul
jmp
sub
xchg
insb
leave
xchg
sbb
ja
and
lods
sbb
mov
pop
jecxz
or
jb
mov
mov
or
push
shll
ljmp
pop
sbb
mov
loop
mov
std
sub
ja
mov
rcrl
dec
jmp
adc
mov
mov
cmp
adc
dec
inc
pop
xchg
cld
and
and
call
in
cmc
mov
cmp
fdivrs
pop
push
fxam
xchg
lret
and
jle
fsubrl
jb
push
test
insl
push
mov
fscale
aam
dec
pop
cmp
xor
or
push
jnp
lds
loop
cmp
jmp
xchg
lret
pop
mov
test
lods
mov
std
repnz
in
out
inc
push
mov
sbb
daa
les
inc
mulb
and
cli
jp
mov
in
movsb
scas
scas
repnz
enter
orl
loopne
pop
jb
fs
cmp
cmpsb
or
test
lds
lods
xor
test
rcrl
std
jae
mov
sub
cli
push
scas
call
movb
test
push
mov
leave
xor
mov
xchg
pop
xor
cwtl
mov
ret
pusha
outsl
outsb
cmp
mov
jp
in
loopne
aad
xchg
mov
inc
lret
out
mov
in
neg
filds
push
mov
xchg
mov
jbe
cmp
xchg
mov
jbe
or
icebp
jle
loop
jecxz
mov
mov
jmp
push
adc
pop
cmp
mov
fildll
adc
mov
sbb
cmp
pop
arpl
push
inc
aas
and
mov
mov
outsb
gs
stos
jno
mov
stos
or
loop
adc
call
pop
cld
mov
lret
lods
sbb
scas
repz
lret
and
fucomi
sub
pop
mov
lahf
adc
sub
mov
mov
pop
pop
xchg
and
out
or
fwait
or
mov
and
push
scas
lcall
push
adc
ss
inc
jns
sahf
jne
outsl
int3
enter
xchg
jb
cmp
imul
xchg
fcmovne
scas
sarb
out
adc
dec
push
jl
cmpsb
xchg
jg
sub
testb
push
in
aas
scas
test
movb
cmp
jnp
into
cmp
scas
xchg
dec
fs
dec
nop
inc
lds
adc
mov
mov
mov
pop
lock
popf
inc
test
or
jbe
fucom
lcall
mov
push
or
inc
pushf
ljmp
aad
call
fs
pop
faddl
out
sbb
mov
les
push
push
jecxz
push
add
je
inc
mov
xlat
dec
cmpl
outsl
fs
mov
sub
pop
jmp
adc
and
push
push
popa
push
push
shrb
ds
clc
loopne
jne
jnp
pop
xor
mov
push
lahf
jae
aas
cmpsl
rcrl
xchg
push
inc
add
dec
movsl
ficompl
pop
pusha
jg
inc
xor
adc
jnp
sbb
pop
fwait
jge
push
loope
outsl
inc
stos
mov
in
inc
fs
pop
inc
jae
adcb
xchg
pop
mov
lcall
cli
popa
adc
aaa
pop
mov
or
mov
mov
cmp
jmp
xchg
pop
nop
and
int
repz
test
xchg
jg
xchg
ret
sti
pop
in
sub
mov
inc
push
cs
cmpsb
in
outsb
mov
xor
ja
or
mov
jnp,pt
imul
dec
xor
mov
push
sbb
pop
mov
imul
xchg
mov
out
mov
mov
rcrb
loopne
sbb
xchg
outsl
pop
pop
jg
sub
ss
pop
sub
dec
cmp
int
jp
push
mov
mov
push
cld
xlat
dec
shl
adcb
out
adc
mov
inc
add
pop
mov
push
adc
inc
stos
fs
cmovbe
lea
mov
jbe
cmp
xchg
gs
mov
jge
xchg
mov
ds
mov
test
daa
out
cmp
fwait
bound
inc
mov
js
mov
je
inc
int3
fcoml
stc
sbb
mov
leave
mov
cmpsl
sbb
and
cmp
mov
clc
mov
outsl
dec
pop
sbb
fistl
inc
cmp
in
xorl
stos
pop
push
jmp
sbb
ja
lock
lcall
pop
mov
cmp
mov
mov
add
push
lcall
mov
ret
or
out
arpl
push
outsl
in
mov
fstpt
xor
pop
push
rol
pop
pushf
xchg
ja
adc
out
sbb
enter
stos
or
adc
dec
mov
pop
and
dec
mov
iret
and
nop
imul
sub
pop
mov
ljmp
jbe
xor
cli
outsb
movsl
int3
cmp
mov
sub
arpl
out
inc
ljmp
ret
pusha
dec
fsubrs
nop
mov
mov
and
mov
imul
cmc
mov
mov
insb
shll
andl
stos
or
jle
add
mov
bnd
inc
pop
lret
stos
sarb
std
add
cmpsb
out
pop
pop
ss
call
ja
jno
test
fdivrp
sarb
repnz
daa
shr
dec
sub
rcll
in
mov
stos
and
stos
pop
mov
or
xor
dec
xchg
scas
push
jne
or
mov
xor
and
xchg
std
movsl
jge
loopne
clc
leave
sbb
xchg
aaa
int
pop
fiaddl
repz
rcr
xor
lcall
cld
xchg
aad
pop
jbe
sahf
jge
cmp
outsl
out
subb
push
hlt
mov
scas
sub
dec
sar
xchg
mov
jbe
mov
pop
jecxz
inc
aaa
mov
out
insb
filds
lret
cmpsl
rorb
jecxz
es
dec
fcomps
lcall
dec
andl
sar
xlat
mov
outsl
imul
jle
imull
sub
jmp
enter
mov
or
fwait
mov
icebp
pop
sbb
xlat
out
sbb
push
cmpsb
jge
mov
pop
sbb
inc
cli
pop
lret
mov
gs
in
dec
mov
lahf
std
dec
dec
lods
add
dec
cmp
and
insl
hlt
cld
xchg
cwtl
jbe
cs
outsb
js
jae
push
add
pop
sub
jne
fnstcw
out
ja
fimuls
fcoms
jp
push
adc
mov
mov
sbb
sti
mov
lret
jmp
jp
insb
test
dec
dec
mov
mov
pop
or
xchg
cli
mov
pop
add
cmc
sti
ss
mov
je
pop
pushf
adc
fcmovu
jp
ret
add
enter
ret
jecxz
pop
mov
shrl
adc
inc
jl
dec
jno
mov
mov
dec
cmp
sbb
call
and
scas
adc
push
rcr
xchg
xlat
sti
pop
pop
jo
fwait
jp
out
mov
mov
lock
mov
loop
popa
aad
shrb
cmp
xchg
xchg
aas
push
or
loop
andb
xor
fadds
insl
std
ja
xlat
pop
imul
movsl
aas
cmc
inc
loopne
scas
test
push
xchg
xchg
sub
in
adc
pop
xor
adc
aam
es
cmpsl
push
movsb
fsubs
sbb
fnstenv
xchg
sub
fs
adc
out
add
imul
jl
xchg
xchg
cwtl
test
add
or
add
sbb
xchg
fsubs
sbb
jl
add
cmp
idivl
dec
pop
das
mov
push
adc
lret
bound
vcvttpd2qq
lret
dec
pop
jl
sbb
push
xchg
into
or
call
lret
mov
mov
stos
mov
add
nop
imul
dec
pop
jno
mov
xor
and
adc
xor
fs
in
mov
or
pop
iret
dec
dec
jne
mov
lea
aas
loop
mov
cmc
inc
je
into
sahf
inc
lret
cs
std
dec
jmp
mov
inc
inc
push
or
mov
xor
icebp
jmp
fistl
cmp
in
push
sbb
int
adc
xlat
fisubrs
leave
int
mov
inc
dec
out
mov
jecxz
nop
mov
jae
shll
lret
mov
lods
out
lds
mov
lret
das
in
int
cmp
mov
lahf
pop
roll
cmp
cmp
cmp
cs
je
cmpsb
pusha
out
dec
aad
pop
jmp
pop
shlb
lret
les
nop
jo
out
add
mov
pop
jmp
jae
sti
inc
or
sbb
sahf
mov
test
or
mov
mov
or
in
mov
push
insl
lahf
sbb
hlt
hlt
shl
pushf
or
mov
mov
insb
xlat
sub
xchg
into
outsb
xor
repnz
iret
lds
insb
push
mov
mov
add
sti
test
addl
xorl
jl
cmc
fstps
aam
mov
adc
mov
call
jns
jbe
ds
popf
pop
icebp
mov
cmp
jo
lret
std
cmpsb
push
inc
adc
and
mov
lds
pop
mov
repnz
call
sbb
movb
xchg
icebp
add
mov
dec
mov
lods
sub
popf
sahf
mov
sub
pop
je
mov
outsl
fmull
xor
es
bnd
cs
adc
jl
xchg
inc
jecxz
data16
sbb
push
xor
mov
xchg
sub
push
adc
adc
jp
mov
or
cmpsl
iret
add
push
cmpsl
sub
and
scas
outsb
cmp
rorl
cmp
shr
mov
in
pop
adc
inc
sub
lock
xchg
stos
aam
shlb
xchg
jp
cli
sub
mov
mov
or
mov
mov
test
shrb
xor
xchg
das
sbb
inc
cs
adc
out
sbbl
adc
push
aam
es
xchg
movsb
adc
pop
xchg
bound
adc
push
jno
cmpsl
mov
mov
aad
dec
cli
sysret
add
xor
outsl
xchg
jne
lock
sub
mov
fnstsw
imul
das
insl
sar
cmp
adc
xor
xor
xchg
lret
add
cmp
daa
cmp
sti
and
push
lret
adc
imul
jg
add
xor
inc
xchg
movsl
cld
pop
fnstenv
addr16
sub
push
js
ffreep
in
pop
and
xchg
add
xchg
neg
or
stc
dec
enter
adc
inc
ret
adc
push
orl
ss
adc
repz
pop
test
daa
fs
pushf
xor
ret
fcoms
push
in
int3
int
hlt
out
ss
mov
xchg
mov
arpl
jecxz
ret
add
jb
ss
jg
mov
in
sbb
dec
cmc
out
push
jmp
jg
jg
mov
aad
js
adc
sub
jge
aas
nop
inc
arpl
xchg
pop
and
leave
imul
pop
iret
scas
stc
push
aas
test
outsl
das
push
xchg
mov
nop
xchg
popl
or
divl
push
movsl
shl
lret
ja
bound
int
movb
xchg
mov
mov
or
sub
lods
loopne
cmpsb
push
stos
xchg
loop
movsl
push
xchg
shr
pusha
mov
mov
pop
shll
or
pop
mov
and
or
pop
shrl
adc
js
sub
cld
pop
mov
cmc
add
inc
hlt
dec
mov
jo
js
data16
or
inc
jb
cmp
pop
mov
pop
adc
popa
sub
inc
add
call
push
adc
xor
rcrb
mov
xlat
imul
sbb
push
aam
std
push
test
inc
pop
stos
add
ljmp
inc
mov
fcmovb
sub
aam
mov
jo
xor
stc
gs
mov
jbe
inc
xchg
imul
idiv
jmp
rol
dec
xchg
stos
adc
cmp
cmp
test
ficoms
imul
sub
flds
push
and
pmovmskb
test
imul
add
and
add
pop
and
push
ret
mov
out
jle
add
jns
push
mov
jle
outsl
mov
jecxz
pop
les
xchg
xchg
push
mov
das
xchg
lods
xchg
push
int
cs
mov
or
cmpsl
add
pop
mov
stc
arpl
fwait
scas
ficompl
or
sbb
mov
push
shrb
popa
repnz
push
push
push
sti
hlt
dec
cs
xchg
adc
inc
test
or
sti
pop
push
incl
pusha
and
inc
loope
ds
imul
fdivrl
adc
ficompl
hlt
push
fists
pop
fidivrl
outsl
adc
je
xor
jle
rolb
push
xchg
ret
stos
jno
enter
les
fimull
push
mov
pop
insb
mov
insl
bound
inc
mov
negl
lahf
fnstsw
stos
or
dec
hlt
sbb
test
je
dec
dec
jno
ljmp
int
xor
scas
and
cmpsb
pop
lea
pushl
fwait
dec
arpl
mov
jge
push
mov
stos
lahf
jl
into
jae
mov
call
mov
fwait
mov
call
xchg
jns
leave
aas
mov
mov
insl
dec
sarl
scas
jne
xchg
ss
nop
sub
stc
dec
and
cwtl
movd
rclb
jecxz
jae
adc
clc
sbb
das
test
and
and
cmp
lret
scas
inc
decb
das
repz
jns
mov
mov
inc
pushw
bound
inc
lret
imul
and
fwait
jmp
xor
iret
pushf
leave
mov
dec
cmp
pop
fisubs
and
cmc
mov
inc
shll
inc
aas
xchg
sbb
sub
addr16
dec
push
mov
xchg
sub
or
pop
aad
jp
out
leave
inc
push
cmp
push
cs
jg
push
inc
mov
mov
inc
adc
xor
repz
adc
out
push
or
mov
mov
mov
mov
ja
jg
shrb
or
xchg
add
mov
or
jle
add
incl
ja
push
es
jae
lds
test
and
xor
jp
ss
or
xor
and
call
gs
mov
std
aad
sbb
ja
cmp
fmulp
imul
jg
sahf
fcoms
push
and
sbb
fidivl
jge
mov
cmp
and
pop
int
push
ss
out
adc
or
add
cmp
insb
loop
lcall
push
pop
mov
mov
sub
clc
xchg
sub
inc
xchg
mov
outsl
iret
jbe
scas
cmp
mov
jo
sbb
adc
cli
lret
pop
inc
xchg
pop
dec
adc
adc
mov
adcb
add
cltd
fidivs
cltd
call
add
cmp
in
adc
and
scas
insb
push
ljmp
aad
dec
dec
out
lret
jmp
jle
stc
mov
mov
xor
es
push
or
adc
pusha
fcmovne
insl
out
sbb
mov
pop
inc
xor
xor
inc
enter
push
sub
ljmp
mov
adc
or
push
pop
out
mov
dec
pop
and
movd
sbb
gs
cmc
popf
enter
lea
sbb
orl
in
in
clc
lea
rep
fnsave
jne
icebp
outsl
sub
test
cmp
adc
xchg
scas
test
jg
cmp
lret
es
xchg
add
stos
dec
push
xchg
mov
xor
push
sub
fucomp
jae
mov
loop
xor
sub
inc
jae
xchg
push
sahf
dec
ret
cmpsb
sub
or
and
mov
and
fucomi
push
negl
leave
mov
flds
xor
daa
pop
mov
jl
mov
inc
lods
call
jne
mov
mov
mov
jnp
test
add
inc
adc
dec
ljmp
pop
cmp
sti
lock
and
pop
leave
pop
aad
push
xchg
xchg
lea
in
fs
inc
xor
jmp
cltd
les
push
cmp
mov
and
rcrl
popf
adcl
jle
arpl
push
cwtl
pop
push
push
add
dec
loop
rcrl
mov
mov
mov
mov
mov
roll
mov
xor
mov
ja
mov
push
je
je
fbld
sbb
push
mov
imul
call
xchg
or
adc
movd
js
shl
sbb
mov
cmpsl
mov
sub
and
jmp
xlat
and
cmpsl
data16
ljmp
int3
inc
pusha
or
add
lcall
mov
nop
xchg
lcall
sub
sahf
adc
es
cmp
jns
aam
jge
mov
faddl
ret
ds
sbb
outsl
jo
push
into
pop
jb
fwait
cmpl
lcall
xlat
mov
stos
mov
push
ds
ja
jns
rolb
push
or
adc
and
mov
daa
shl
mov
inc
mov
jnp
xchg
stos
out
popa
push
jne
bt
out
ja
pop
pop
pop
adc
jae
pop
outsb
xchg
aaa
xor
repnz
movsb
jo
insb
cld
mov
andb
xchg
cltd
jae
sbb
adc
insb
fldt
sbb
jecxz
dec
std
das
jmp
lcall
test
out
cmc
je
push
adc
out
add
and
jmp
mov
xchg
add
ret
rolb
imul
jge
add
sub
xor
mov
push
add
mov
rcrl
pusha
xlat
and
fiaddl
es
pop
cltd
ret
xor
mov
mov
jge
mov
in
push
mov
out
and
fwait
pop
xor
addr16
aaa
jae
cs
dec
sbb
fisttps
shlb
fwait
jl
mov
pop
popa
jecxz
or
pop
mov
testb
outsb
sub
pop
in
mov
les
and
dec
sub
addr16
sbb
mov
leave
or
repnz
test
pop
mov
out
in
cmp
or
scas
push
ret
or
pusha
xchg
push
icebp
popa
sahf
shlb
add
mov
testb
stos
dec
xor
ljmp
in
mov
cmp
and
dec
enter
mov
jne
arpl
dec
addr16
std
mov
stc
ss
push
int3
lods
popa
sbb
cmp
std
outsl
push
imul
dec
inc
push
stc
sbb
add
and
and
js
pop
je
sub
pop
mov
mov
popa
hlt
loop
arpl
cld
mov
loop
adc
ja
jae
add
scas
movzwl
fcoml
lahf
bswap
fbld
je
push
and
ds
cltd
aam
mov
xorb
bound
ret
or
jg
mov
rcrb
jnp
mov
inc
xchg
mov
push
movsb
out
pop
lret
mov
loope
adc
in
pusha
popf
mov
in
subl
pop
sahf
stc
push
insl
roll
mov
fs
imul
lcall
add
push
pop
lock
push
out
pop
int3
pushf
mov
inc
add
pop
aas
jmp
insb
xchg
mov
test
sbb
or
pop
cmp
push
mov
mov
push
lea
insb
adc
sbb
pop
pop
ret
fisubrl
repnz
xchg
push
mov
dec
sub
notl
stos
mov
jbe
or
mov
in
sbb
das
inc
imul
or
sub
lods
out
jp
std
and
daa
push
and
std
sub
loopne
testl
dec
pop
lds
and
jb
jno
mov
jg
xlat
pop
pop
cltd
or
rcrl
imul
std
cmp
push
data16
test
dec
addb
inc
jno
out
dec
xor
leave
fmulp
shl
fadds
andl
cmpsl
push
ret
xchg
shrb
dec
pop
xchg
inc
and
ja
mov
push
shrl
mov
mov
ret
movsb
pop
mov
arpl
out
jge
cmp
jecxz
clc
nop
xchg
sbb
mov
pop
out
lods
insl
dec
jg
shlb
test
xlat
push
adc
fcoms
xchg
dec
lret
cmp
adc
mov
lret
pop
shrl
dec
inc
sbb
sub
mov
mov
mov
xchg
xor
inc
in
pop
adc
nop
aad
movsl
pop
mov
xchg
mov
add
in
std
fwait
stc
dec
adc
xor
cmp
addb
or
mov
out
scas
adc
add
jg
mov
mov
inc
sbbl
in
lods
add
jp
add
fwait
xchg
sub
mov
mov
jge
por
mov
jns
cmp
test
xchg
lds
es
rcrl
pop
sti
push
lods
cmp
xchg
sub
or
int3
cmp
adc
add
ficomps
inc
ja
movsl
inc
xor
aaa
cmpsl
nop
leave
xchg
repz
clc
outsl
xor
sbb
js
pop
mov
mov
inc
mov
shlb
dec
sahf
xor
hlt
or
call
popa
dec
mov
jae
push
push
lds
cli
pop
rorb
push
ret
outsb
arpl
inc
push
addr16
mov
sahf
mov
push
push
daa
inc
inc
cmp
xor
adc
shlb
aam
pusha
jecxz
sarb
push
mov
and
sti
jp
loopne
push
lods
shlb
sbb
sbb
nop
pop
sub
push
adc
ret
call
fwait
inc
seto
out
popa
in
pushf
mov
cmp
adc
xchg
into
jnp
sbb
enter
jae
rcll
mov
inc
dec
cmpsl
add
mov
lock
push
and
jl
fucomp
push
pop
notl
sbb
daa
push
jne
cmpsb
pop
adc
pusha
imul
xchg
ret
push
repz
mov
mov
rcr
mov
and
ror
rcrl
and
and
mov
mov
js
and
xor
out
es
push
sahf
data16
fdivr
enter
push
test
roll
cli
xor
fnsave
daa
ja
push
fnstcw
sub
or
mov
and
repz
scas
mov
loope
sub
xor
sub
adc
mov
cld
jne
jnp
mov
out
pop
cmpsl
xor
subl
subb
mov
xor
push
ror
or
adc
and
sbb
ret
shll
arpl
xchg
pop
mov
pusha
ds
cli
cmp
jmp
push
sbb
icebp
fiaddl
push
mov
adc
sarl
fsts
xor
and
test
out
mov
push
push
xor
adc
or
xchg
and
cwtl
xor
pusha
data16
push
arpl
sbb
sbb
xor
shrb
hlt
lcall
mov
add
pop
jg
xor
mov
daa
inc
mov
lret
sbb
inc
mov
js
jns
adc
std
mov
sub
cmp
dec
xrelease
or
ja
lret
pop
sbb
stos
cmp
ja
ljmp
or
ror
jp
inc
pop
ret
push
inc
icebp
mov
xchg
lsl
xchg
cmpsb
jae
dec
fildl
xor
insl
scas
outsb
addl
cltd
stc
lea
repnz
pusha
pop
scas
mov
notl
jmp
int3
cwtl
je
rcrl
gs
cmc
or
jns
sbb
loop
or
mov
and
lret
push
lret
mov
imul
add
dec
into
pop
in
push
mov
sub
or
fcmovnb
push
jb
jbe
pop
fldenv
daa
jge
iret
mov
pop
je
addr16
jmp
fdivs
outsl
and
aad
fwait
xor
inc
jg
je
jo
jg
inc
or
sbb
push
lods
insb
cmc
and
inc
push
ja
lret
inc
subb
sbb
out
hlt
in
ret
inc
into
lcall
dec
popa
pusha
inc
push
mov
ds
jle
les
in
push
sbb
adc
add
dec
dec
and
daa
xor
cwtl
add
sbb
stos
movb
mov
scas
shlb
ss
pushf
mov
call
int
sub
xchg
pop
xor
sub
int
cwtl
cs
sbb
sub
mov
repnz
xor
pop
lock
xchg
adcl
outsb
fildll
cmpsl
xor
mov
sbb
and
je
js
mov
pushl
fdivrl
jnp
sti
jb
mov
mov
push
sbb
cmc
xor
cld
push
push
mov
and
lock
out
ja
sahf
pop
xor
gs
push
adc
add
int3
push
popa
and
cs
lods
rcrb
rcrb
jl
dec
push
popf
mov
sbb
fistpll
stos
loop
sub
xchg
push
dec
pop
test
inc
adc
outsb
inc
insb
xchg
das
andl
mov
arpl
repz
adc
inc
insl
mov
scas
bound
jecxz
mov
or
fdivrl
jecxz
iret
in
push
mov
mov
cmp
cwtl
cwtl
and
ss
cmp
xchg
cmp
cmp
out
sbb
adc
pop
jg
mov
sbb
daa
jmp
or
mov
shlb
xor
sti
inc
dec
fsts
sub
flds
mov
mov
push
or
add
nop
mov
fcoms
xor
mov
sub
mov
loopne
sub
xor
sub
or
cs
dec
adc
repnz
std
into
push
or
push
out
jne
movsb
sahf
jle
inc
dec
push
mov
insb
sbb
mov
xor
xlat
jl
mov
pop
dec
add
std
push
lret
mov
dec
insb
call
mov
aas
movsl
popa
les
xchg
sbb
std
in
dec
sbb
ds
cmp
imul
sub
dec
adc
stc
xchg
cmp
mov
xor
hlt
sbb
scas
insl
fwait
das
cmp
fnsave
sahf
in
popa
sahf
in
fs
jecxz
mov
xchg
sbb
decl
mov
xchg
dec
dec
mov
popf
icebp
mov
and
jmp
mov
test
jo
mov
dec
mov
or
push
xor
lea
mov
les
push
pcmpgtw
adc
in
sbb
fadd
mov
aad
mov
ret
js
arpl
xlat
adc
sbb
and
fsubl
adc
js
dec
or
stc
ss
icebp
and
ljmp
subl
cmc
and
lcall
les
es
ljmp
sub
fidivrs
mov
fs
inc
cmp
mov
shll
jle
xchg
imul
mov
xor
mov
mov
or
out
adc
push
leave
and
cld
sbb
push
xlat
adc
adcb
mov
cmp
mov
push
inc
inc
mov
hlt
js
xor
mov
mov
jb
jnp
in
sti
adc
or
mov
pop
or
addr16
and
popl
test
in
fbld
xchg
ja
jo
inc
add
cmp
inc
dec
push
inc
outsl
icebp
dec
adc
je
xchg
push
ss
ret
out
mov
mov
std
jmp
cwtl
dec
cmp
ss
js
mov
in
xchg
sub
fs
jmp
imul
icebp
aas
add
or
movsb
jl
out
inc
and
pop
cmovno
out
xchg
lcall
cmp
incl
sbb
push
jns
scas
and
or
pop
aam
adc
or
int3
jmp
shl
and
jae
outsb
jmp
sbb
pop
push
cmp
jp
pop
lret
mov
cld
sub
mov
xchg
dec
fisubs
xor
add
bound
or
and
movsb
js
mov
pop
shlb
jns
movsb
and
xchg
addr16
xor
pop
push
enter
push
stc
xchg
adc
frstor
rcrl
xlat
pop
pushf
mov
push
or
outsl
lea
in
scas
test
dec
xchg
mov
punpckhwd
lahf
cli
dec
cmp
inc
addb
adcl
add
push
fldl
mov
stc
xchg
pusha
mov
mov
sbb
cltd
mov
xor
outsb
mov
xchg
pop
add
dec
inc
roll
or
fmulp
int3
xchg
adc
ljmp
add
mov
pop
jnp
aaa
clc
test
sarl
clc
push
adc
add
inc
test
push
test
pop
push
mov
dec
iret
jae
jle
pop
jnp
pop
lods
xchg
adcb
ficoms
aas
mov
sbb
stc
mov
cmp
inc
jae
lahf
push
xchg
popa
dec
notl
stos
mov
cmp
test
int
fistpl
or
xchg
adc
dec
out
push
dec
xor
jne
ljmp
sub
cmp
jle
cmp
pushf
lods
cmp
movsb
dec
adc
lret
and
or
cwtl
fisttpll
push
out
cmpsb
out
xchg
out
mov
add
fcoml
jle
jp
andb
sbb
lret
xor
mov
mov
mov
xchg
cli
mov
xchg
sbb
clc
cli
dec
dec
test
iret
dec
loope
cmp
stos
and
cld
jmp
daa
arpl
lret
mov
outsb
jle
push
lahf
int3
and
loopne
fbstp
jl
shll
dec
scas
jbe
pop
loopne
sbb
andb
out
push
mov
and
scas
aaa
mov
repnz
andb
addl
das
stos
pushf
pusha
lcall
and
or
adc
hlt
imul
call
add
pop
inc
mov
and
bound
jb
push
or
movsb
shr
adc
jp
sbbl
cli
xchg
adc
xchg
aaa
sbb
dec
sub
test
sbb
cmp
repnz
sub
jb
imul
nop
cwtl
in
movsl
aam
cmpl
lods
aas
mov
iret
lret
loopne
jmp
mov
repz
mov
scas
scas
xchg
lds
movsb
pushf
sbbl
in
imul
fisttpl
movsl
pop
xor
xchg
stc
dec
add
incl
rorb
inc
dec
and
cmp
test
mov
leave
adc
pop
scas
inc
fidivrl
sub
inc
into
dec
leave
mov
jp
xchg
xor
bound
adc
addl
fcmove
pop
lods
mulb
jns
mov
xor
nop
subb
mov
xchg
arpl
daa
rcll
mov
cmc
cmp
jno
pop
pop
loope
in
clc
loop
mov
enter
push
or
mov
je
loopne
pop
xor
movsl
jno
and
mov
aas
andb
fs
mov
push
jns
push
pop
push
outsl
xchg
js
test
mov
dec
ljmp
call
push
nop
and
jle
loopne
or
or
scas
mov
mov
add
shr
fisttps
lcall
stos
pop
push
clc
and
pop
int
inc
cld
mov
sub
xrelease
popf
sbb
jg
cmp
test
mov
sbb
cmp
adc
mov
shlb
mov
xor
mov
scas
test
repz
pop
dec
inc
and
mov
mov
or
ret
packuswb
xchg
test
dec
push
aad
jl
imul
aaa
int
nop
movsb
add
cmpsl
sub
fsubrl
ja
sbb
test
imul
nop
jmp
pop
dec
ljmp
mov
xchg
dec
out
mov
fnstenv
shll
inc
cmp
jge
mov
in
add
aaa
mov
jl
push
and
rorl
mov
call
dec
mov
subb
pop
fmuls
xor
jmp
cmp
fbstp
cld
pop
fyl2x
xor
fimuls
call
adc
sbb
push
dec
ljmp
sti
mov
repnz
mov
jecxz
xor
or
jl
popf
fdivrl
lds
push
or
pop
push
mov
sbb
fwait
mov
sbb
add
xlat
shll
fwait
mov
xor
sub
sbb
pop
sub
jb
hlt
jnp
ss
out
fiaddl
insb
adc
addr16
jo
lret
adc
loopne
or
adc
or
bound
push
jns
cli
cs
add
mov
jge
xchg
icebp
adc
inc
mov
xchg
fwait
lea
pop
out
mov
fistl
movsl
mov
mov
jnp
xor
dec
int3
testl
inc
mov
cmp
mov
push
in
mov
cld
jb
into
aaa
add
sbb
dec
xchg
lret
cld
xchg
fisubrl
inc
movsb
cmpsb
fisttpll
push
cmpsl
stc
mov
jb
mov
jno
or
and
insl
es
xlat
ljmp
decl
nop
sbb
scas
shlb
lock
mov
mov
xchg
dec
cmp
and
push
adc
sbb
cmp
bound
xor
sbb
repnz
xor
push
arpl
sbb
cmpb
sub
lahf
dec
cmp
out
je
fiaddl
mull
insl
dec
popl
rcl
mov
loopne
fcompl
frstor
pop
scas
pop
stc
fistpl
jne
loopne
es
jg
fwait
push
movsb
or
cs
test
sub
add
adc
xor
mov
test
bound
mov
addr16
mov
sbb
ja
dec
ret
xor
test
in
decl
jb
fsts
fldenv
mov
dec
or
sbb
mov
clc
sub
sub
sub
adc
outsb
inc
adc
inc
jg
clc
mov
add
scas
cmp
jae
dec
mov
xchg
lods
cs
idivb
xchg
test
sbb
call
je
mov
mov
es
pop
xor
aam
xchg
movb
cli
adc
xor
dec
and
push
loop
int
ljmp
test
or
push
adc
xchg
xchg
jns
std
fsubrl
insl
cmpsl
add
pop
sahf
pop
loop
rclb
xchg
stos
dec
clc
jb
addr16
int3
cli
jo
jl
dec
mov
pop
or
js
jmp
push
sub
push
xchg
xor
lret
jae
mov
jnp
sbb
out
stos
adc
out
outsb
mov
push
xlat
dec
shr
sub
out
push
push
xor
adc
xor
jo
or
sbb
stc
lret
jbe
inc
xchg
xor
sar
xchg
jg
das
mov
push
lock
test
es
adc
call
push
adc
dec
dec
jg
cmp
popf
aaa
cmp
cld
push
push
mov
xor
adc
cmp
jno
stos
lcall
lods
xchg
mov
fwait
int
dec
enter
sbbb
dec
mov
dec
cmc
repz
cli
test
clc
xor
mov
mov
cmc
jp
mov
mov
push
mov
fidivs
mov
nop
inc
mov
lcall
jnp
inc
xchg
popf
cmp
ret
mov
jns
mov
loope
add
outsl
sub
andb
movsl
add
mov
scas
daa
in
xor
jmp
mov
and
add
pop
enter
test
or
scas
loope
add
incb
sub
push
je
leave
daa
jne
bound
out
lret
pop
aam
inc
push
xor
mov
fbstp
movsb
in
jp
push
sbb
stc
lods
mov
outsl
mov
xchg
test
add
lods
jmp
inc
jne
xchg
cmpsb
mov
and
jb
pop
les
jmp
and
cmc
pop
jp
sti
hlt
jmp
dec
aas
inc
inc
lahf
and
jecxz
mov
mov
push
sbb
cmp
add
insb
mov
mov
add
insl
insl
mov
cmp
cld
adc
xchg
fiadds
sahf
lea
scas
lds
xor
mov
mov
pop
mov
in
leave
xchg
mov
mov
sub
pushf
mov
fistl
push
in
fcompl
or
mov
imul
call
jb
iret
insl
xlat
int3
test
push
ffree
push
aad
out
and
sub
jg
cmp
lods
popf
dec
fs
rcll
sub
pop
aad
testb
mov
aam
pushf
mov
mov
pmaxsw
movsl
mov
jp
sbb
dec
jp
mov
daa
sub
sub
mov
scas
outsl
inc
push
stos
inc
dec
mov
mov
cmp
push
dec
jnp
lcall
int
push
pop
daa
sub
es
hlt
cld
lea
push
subb
xor
rolb
adc
pusha
fldcw
and
test
sub
push
das
data16
jecxz
inc
int
sub
fucomp
maskmovq
mov
jge
lods
test
mov
inc
daa
jae
fcmove
jmp
or
pop
xorl
pop
shll
add
sub
nop
mov
xchg
fstps
insl
scas
test
in
and
adc
cmp
ss
adc
outsl
ja
ret
in
popf
popf
pop
adc
aaa
inc
faddl
mov
out
xchg
sub
xchg
adc
leave
cli
inc
sahf
mov
loopne
loope
inc
push
fwait
int
mov
aas
cmpsb
mov
jmp
sub
outsb
in
insl
mov
rorb
mov
xor
rorl
aas
es
sbb
or
push
fidivrs
xor
ds
mov
lret
into
fs
add
jns
cmp
pusha
adc
push
pop
push
mov
scas
sbb
and
xchg
dec
stos
jge
inc
mov
and
imul
shlb
dec
movsl
jb
mov
addl
sbb
mov
idiv
andl
into
jle
xor
jl
xchg
inc
in
sub
icebp
ret
mov
xlat
pop
pusha
ss
int3
lahf
push
cmc
push
push
dec
sub
cmp
xor
or
outsb
pushf
xor
mov
scas
fs
xor
sbb
jnp
jl
loopne
in
jp
mov
mov
xchg
cmpsb
fnstenv
xor
dec
stc
sub
shll
adc
pushf
push
xor
aas
fs
fnstenv
aas
xlat
adc
mov
addr16
jmp
popl
inc
sub
pushf
repnz
mov
out
pmulhuw
shrl
push
int3
leave
inc
add
data16
fimull
mov
daa
pop
mov
jmp
sub
jmp
lods
mov
inc
and
aad
inc
fwait
lret
mov
sti
lret
mov
out
imul
jnp
std
inc
std
movsb
ss
lret
popl
test
jbe
and
rclb
lds
into
pop
xchg
lock
fildll
mov
cli
and
mov
mov
push
pop
pop
push
xor
fwait
lea
sub
pusha
popa
stc
pop
push
bound
test
jo
dec
jle
data16
nop
in
push
fnsave
stos
shlb
loop
in
push
cmp
out
inc
inc
lret
mov
pop
bnd
pop
adc
mov
mov
jnp
dec
call
jns
jo
jl
scas
je
sub
popf
imul
shr
fwait
add
out
push
mov
jecxz
mov
or
push
out
jbe
mov
sahf
shll
mov
xchg
sub
jbe
ret
mov
mov
repz
fwait
sub
cli
dec
clc
test
insl
scas
inc
sar
popf
rorl
sbb
cmp
jp
fnstcw
xchg
sub
stc
sub
arpl
dec
xor
movsl
ds
or
aam
repz
or
subl
flds
sub
or
adc
pop
test
mov
fisttps
test
testb
negb
cmp
pop
add
mov
sahf
stos
imul
xchg
jle
sahf
jl
movsl
xor
mov
xor
and
push
js
stos
lahf
xchg
xchg
jle
dec
and
rcll
xchg
or
push
mov
pop
stc
pop
sahf
in
sbb
add
loope
push
out
pushf
jmp
das
sbb
les
push
lea
movsl
push
lcall
iret
xchg
daa
and
repnz
mov
adc
rcrl
scas
fisttps
out
mov
sub
fcompl
addr16
adc
ljmp
dec
mov
sub
or
mov
gs
test
push
popa
outsb
inc
insl
mov
aaa
in
xor
ss
daa
aad
data16
inc
mov
cmp
inc
mov
jle
and
call
mov
mov
cwtl
movsl
in
mov
cmp
loop
addb
sbb
outsl
mov
movsl
inc
movsl
scas
in
sbb
mov
xchg
add
add
mov
push
stos
subl
sahf
fsubl
push
aam
les
decb
cli
mov
jmp
sbb
mov
mov
mov
fmul
dec
and
lock
add
mov
lods
push
push
lods
cmc
mov
addb
pop
out
mov
ret
push
or
nop
jp
out
je
jae
pop
jp
and
or
adc
dec
push
mov
out
inc
jmp
fstpl
inc
pop
jp
pop
in
lahf
and
stos
cmp
cmp
into
subl
jnp
les
mov
imul
aaa
jle
cmp
pusha
mov
dec
or
mov
or
cmp
push
sbb
ror
adcb
mov
ja
cwtl
jle
clc
cmp
fcmovu
lahf
mov
mov
inc
pop
dec
in
lods
in
cltd
scas
ds
cltd
dec
loop,pt
ret
xchg
mov
lahf
sbbb
cmp
xor
push
xor
into
bound
aas
lods
scas
sbb
cli
and
sub
and
in
add
pop
fidivrs
hlt
pop
dec
sub
inc
outsb
sub
sbb
das
and
stos
loopne
gs
push
cmp
cmp
sub
iret
push
pop
dec
push
mov
add
sbb
jnp
gs
cmp
push
and
pop
fsubrs
fbld
add
sbb
int
cmc
andl
jne
push
mov
loope
test
sahf
push
mov
int3
xor
inc
push
enter
pop
push
sbb
je
jge
adc
arpl
call
jns
xorl
scas
mov
sub
xor
mov
mov
out
mov
jne
mov
xor
out
mov
or
pusha
flds
inc
jmp
fidivs
ret
jb
mov
push
arpl
xchg
fimuls
or
pop
test
mov
lcall
jno
ljmp
add
popa
dec
fstl
cmp
shll
out
push
xchg
cli
adc
sahf
in
pop
or
mov
mov
out
in
mov
push
scas
sbb
jo
decb
push
out
nop
mov
sbb
cmp
mov
loop
movd
push
push
leave
popa
lods
sahf
rcrb
nop
xor
jb
jae
dec
and
push
sbb
or
mov
and
mov
and
inc
enter
das
mov
inc
mov
movsb
repnz
sub
mov
leave
mov
test
mov
fisubrl
mov
sbb
sub
mov
mov
mov
je
rcr
jbe
sbb
je
adc
insb
jge
rcrl
ret
xchg
push
mov
mov
inc
addr16
mov
dec
jne
and
sub
out
or
cmpb
rorl
out
cmp
mov
pop
inc
inc
subb
jge
in
xchg
js
inc
jae
jecxz
and
ljmp
sbb
jns
outsl
das
push
sub
loopne
jge
and
jns
loop
popa
stos
test
sar
fwait
cmpsb
xlat
lahf
fcomps
inc
cltd
rclb
nop
and
je
lret
cmc
mov
pop
pop
pop
in
xchg
or
movsl
sbb
sub
add
call
cs
lret
mov
inc
inc
test
and
adc
paddw
sub
dec
outsb
repz
arpl
imul
aas
inc
mov
mov
sti
mov
ds
repnz
cli
jge
aam
cld
push
fld
dec
add
add
add
dec
shrl
push
ss
cmpsl
cwtl
jl
les
pop
xchg
and
push
loop
mov
push
stc
popf
jbe
push
mov
cmp
inc
adc
sti
dec
pop
jmp
mov
addl
std
clc
xchg
cmc
cld
cltd
into
inc
scas
adc
lahf
jg
dec
ficomps
cmp
lea
pushf
dec
and
pop
inc
mov
fwait
out
xchg
vcmpgt_oqpd
les
sbb
jno
idivl
fwait
sbb
sub
mov
insb
les
fldcw
out
enter
push
mov
repnz
popf
and
mov
stos
lea
sub
aas
cmp
dec
aas
lds
inc
dec
cmp
inc
sbb
cmp
push
mov
jg
cltd
adc
dec
test
lret
jle
sti
lds
testb
shlb
xchg
sbb
lcall
push
push
mov
jmp
sub
shrb
sbb
lret
lret
je
cmc
inc
pop
mov
mov
xor
mov
xchg
scas
mov
in
push
data16
or
das
xchg
sahf
es
out
pop
mov
rcrb
dec
shll
or
pop
jp
fadds
mov
mov
loop
repnz
mov
fstpl
enter
loope
lea
sub
into
nop
clc
cmp
pop
ljmp
push
rcrb
xchg
push
push
aas
mov
movsb
adc
xsha256
cmpsb
push
xchg
pop
negl
and
xor
add
jmp
hlt
je
push
adc
iret
add
jno
lea
jns
or
sub
test
mov
loopne
loop
in
pop
push
sbb
test
aad
cs
iret
lret
push
or
mov
xor
in
mov
ds
mov
and
dec
call
cwtl
nop
scas
stos
mov
add
inc
into
cmp
inc
subl
or
or
scas
cmp
stc
mov
mov
movntps
out
loopne
data16
xor
or
jne
fwait
xor
adcl
pop
mov
push
jmp
imul
inc
in
adc
pop
pop
jb
dec
inc
jle
jge
pop
jl
lahf
jge
pop
jl
loopne
mov
mov
out
sbbb
pop
scas
insl
cmp
aam
xor
popa
pop
add
aam
test
jns
pop
lret
jg
cmp
rolb
mov
or
adc
sub
dec
jno
pop
sub
test
scas
aad
fsubl
dec
mov
jb
dec
stos
pop
inc
lret
fwait
add
mov
jne
call
adc
mov
icebp
fdivrl
pop
je
jno
scas
es
xchg
mov
inc
sbb
xchg
bound
out
icebp
adc
cmp
mov
fistl
mov
sahf
dec
popa
cmpsl
rclb
stc
cld
cmp
hlt
adc
jae
movsl
xchg
pusha
xstore-rng
cmpsl
inc
xchg
mov
subb
xchg
push
out
cmp
cmp
popa
leavew
and
hlt
and
shr
cmp
and
mov
jne
inc
stos
insl
pop
xchg
sbb
mov
ja
sub
pop
sub
mov
fwait
call
xor
shrb
lods
dec
cli
lret
iret
xor
dec
push
mov
cs
inc
sbb
leave
jle
insl
ss
icebp
sti
fwait
arpl
mov
fsubp
sub
das
clc
sub
cmp
sub
outsl
pop
iret
arpl
jnp
mov
fadds
sbb
xchg
aad
call
jmp
jl
aam
scas
gs
xor
aas
dec
jmp
mov
cmp
pop
lret
push
mov
push
cmpsb
dec
mov
sub
cld
inc
push
pcmpgtw
xchg
cmp
mov
pop
cmp
lret
clc
jecxz
fwait
xchg
cwtl
pop
inc
sbb
or
xchg
aaa
cmpsb
leave
sub
xor
movsl
sbb
pop
or
sbb
sbb
sbb
lcall
ss
add
pop
clc
pop
cmpsb
inc
sbb
out
loop
mov
out
xor
pop
inc
call
xchg
mov
dec
fmuls
bound
cwtl
jge
add
inc
sbb
fmuls
rolb
mov
scas
adc
push
push
inc
jle
jns
adc
xchg
push
mov
loopne
mov
mov
rcrb
add
cmp
repz
or
cmp
xor
push
or
sub
stos
ss
ds
shrb
inc
pop
daa
lods
inc
sahf
adc
cmpsl
push
pop
imul
push
filds
shr
xor
cmp
mov
maxps
mov
mov
ficompl
adc
push
imul
adcb
inc
or
jle
ret
dec
sub
mov
into
iret
jns
dec
mov
scas
mov
and
mov
mov
bound
adc
stc
stos
mov
sub
mov
inc
fisubs
and
mov
aaa
les
jae
sbb
pop
mov
jge
addr16
sbb
cmp
inc
xor
imul
popf
lock
aad
push
cltd
jae
aaa
mov
addr16
lret
pop
jo
mov
mov
lahf
into
or
adc
int3
xor
push
test
out
pinsrw
in
loopne
pop
push
push
inc
loope
imul
inc
cmovge
push
hlt
int3
test
lods
popl
or
pop
mov
sahf
fwait
cmp
repnz
lods
pop
mov
testb
mov
clc
sbb
lret
pushf
popf
mov
or
int
aad
cmp
divl
sti
sub
sub
test
cmp
pop
add
jbe
push
clc
inc
je
add
icebp
cmpsl
xchg
jne
mov
fstps
test
push
jg
ljmp
test
or
notb
xchg
push
xchg
cwtl
movsl
inc
pushf
rcrl
add
lret
jmp
orb
lea
adc
ret
pop
out
inc
call
pop
in
dec
and
ret
fistpl
mov
movsb
lea
rorb
rol
add
xor
pop
mov
loop
fidivrs
call
negl
jnp
cs
lahf
scas
add
lret
add
out
lret
cmp
cmpb
xor
mov
mov
mov
or
mov
sbb
xor
mov
sub
sub
ja
inc
in
clc
xchg
mov
push
cli
subl
fbld
dec
imul
cmp
jecxz
aad
lods
cmp
xchg
mov
mov
fadds
lds
mov
jae
sbb
xor
mov
push
jle
dec
push
pop
pop
lea
loop,pt
shlb
call
icebp
dec
mov
adc
shr
ljmp
lret
rclb
xchg
testl
xor
getsec
and
adc
jge
jno
inc
push
mov
cmpsl
dec
les
xchg
mov
enter
loopne
lcall
or
cli
mov
inc
fisubl
inc
test
add
inc
push
mov
dec
adc
movsl
sub
xchg
mov
mov
scas
xchg
or
ret
push
hlt
lea
movsb
push
dec
push
sbb
adc
imul
pop
and
jb
adc
adc
scas
popf
inc
xchg
add
mov
mov
lahf
mov
lret
mov
inc
mov
dec
test
test
fidivrl
test
in
pop
pop
sub
adc
jnp
xor
mov
shrb
out
push
sbb
out
or
push
jne
clc
sub
es
fisttpll
cmp
dec
rclb
repnz
xchg
push
aam
daa
or
out
shll
ret
pcmpeqd
and
sbb
or
sbb
addr16
scas
inc
or
inc
mov
insl
movsl
sahf
jge
cli
adc
push
jge
rorl
popa
mov
enter
adc
jl
stc
jns
nop
push
sbb
leave
aas
mov
xchg
mov
mov
push
pop
leave
push
xor
pop
movsl
dec
jae
rolb
mov
or
sub
mov
test
test
out
add
mov
into
in
into
imul
jl
dec
mov
movsb
pop
in
out
xlat
or
in
xchg
sub
mov
pop
and
cmp
pop
jecxz
addr16
loopne
or
lea
inc
dec
in
pop
jge
dec
jno
dec
mov
arpl
dec
cmpsl
jg
add
mov
mov
xor
sbb
aad
fimull
jmp
add
mov
add
adc
subl
fdivs
mov
pop
daa
mov
inc
loope
mov
sarl
dec
inc
jmp
add
stos
and
mov
mov
jecxz
push
cld
push
pop
adc
fstpl
sbb
leave
fcmovu
stc
mov
xor
jno
addr16
movsl
cld
lds
push
or
jb
aam
cmp
addr16
out
aam
or
ficomps
outsl
jb
aad
in
mov
xor
repnz
dec
xor
sarl
adc
cld
cltd
xchg
cmpsb
cmpl
xchg
mov
cmp
ja
and
pop
inc
mov
jge
mov
mov
outsl
and
addr16
pop
test
xchg
xor
jnp
cmp
outsl
scas
mov
scas
adc
ror
adc
jns
mov
cmp
inc
add
inc
mov
and
sbb
daa
rsqrtps
pop
and
cmp
inc
push
aad
or
mov
lods
jno
push
loopne
test
fildl
movsb
test
push
cmp
and
dec
leave
dec
lahf
cli
mov
jno
push
sub
lock
jo
mov
adc
jno
loopne
pop
lock
push
mov
push
stos
insl
add
pop
pop
jmp
aad
gs
mov
jg
mov
lret
dec
negb
xor
fadd
aas
sarl
cmp
in
jne
cli
test
dec
xchg
sbbb
sub
icebp
jge
adc
lock
dec
sub
or
popa
aaa
es
cltd
into
cmpsb
shll
stc
pushf
daa
jo
in
fbld
in
outsb
pop
call
and
xchg
es
pop
fucom
mov
add
ret
outsl
iret
rorb
xor
adc
fnstsw
mov
inc
mov
pop
arpl
dec
adc
add
fs
lock
jno
xor
cli
push
jl
ret
mov
je
dec
xchg
iret
dec
push
mov
mov
dec
pop
inc
sbb
pop
js
push
add
sar
mov
lret
mov
cmpsl
adc
aas
cmp
and
and
jg,pn
sub
dec
push
sbb
jmp
xchg
cmc
mov
nop
mov
iret
or
inc
push
mov
jp
bound
mov
in
sub
and
cmp
jg
push
add
in
and
jg
insl
cmp
push
mov
xlat
pop
out
fbld
nop
or
inc
orb
jmp
sub
sub
loopne
xor
fwait
cmp
in
add
in
cld
sub
mov
sbb
mov
lods
xor
scas
movsl
adc
xlat
je
mov
test
mov
aam
lret
shll
scas
mov
sbb
mov
sub
lods
in
mov
or
adc
in
aas
sti
jnp
fcoml
dec
push
loopne
test
adc
sbb
test
ljmp
xlat
add
mov
xchg
sub
les
add
in
sahf
dec
scas
push
adc
sbb
pop
sub
cmc
pop
cltd
jl
in
dec
inc
xchg
pop
sbb
xchg
xor
or
test
mov
stos
loope
out
pop
jae
xor
repz
mov
mov
mov
cli
out
decb
push
and
rclb
js
daa
les
and
cmp
data16
sub
push
adc
xchg
std
mov
add
pop
loop
push
jl
sbb
jb
add
fcoms
ljmp
daa
push
adcb
orb
xor
ret
adc
cmp
sbb
cwtl
leave
mov
xor
mov
inc
fisubl
jnp
mov
xchg
add
push
jmp
jb
bound
mov
jge
mov
mov
or
mov
stos
test
sbb
mov
cli
cli
scas
xchg
subb
dec
sbb
mov
or
push
sub
add
rorb
cmp
repnz
xor
fstpl
xorb
pop
pop
scas
stos
inc
xor
or
jno
sub
daa
pop
cwtl
ds
lret
ljmp
push
mov
jecxz
ret
pop
mov
and
xchg
add
out
loopne
jne,pn
adc
sub
in
rorl
pop
stos
jp
test
xchg
inc
sti
mov
sbbl
jno
ja
jno
and
iret
pop
ds
mov
mov
jo
cli
lds
idivl
push
inc
jp
test
xor
jb
jbe
jl
loop
popa
addr16
js
push
movsl
clc
mov
rcrb
pop
in
pop
inc
icebp
addr16
sbb
cld
push
inc
cmpsb
jle
sahf
ret
icebp
add
mov
or
iret
outsb
repnz
dec
xor
imull
add
dec
pusha
shrb
mov
push
nopl
sarb
std
fsubr
or
insb
popa
mov
stc
lret
xchg
mov
aaa
movsb
sub
int3
mov
or
mov
jmp
sub
or
sqrtps
repz
sbb
inc
je
sti
xlat
and
push
sarb
int3
pop
mov
lea
leave
ret
int
pop
xor
cmpsb
mov
fwait
cltd
sub
push
out
sbb
sbb
pop
ds
mov
jle
cmc
rorb
subl
sbb
scas
inc
xlat
xlat
ficoms
mov
in
xor
pop
lock
clc
dec
add
inc
or
mov
push
stos
mov
in
imul
addr16
incb
rorl
lea
pop
movsl
aam
lret
in
jg
jmp
pop
imul
inc
insb
loope
das
ds
pop
fidivs
or
sbb
sahf
sub
repnz
jne
fadds
adc
pop
imul
pop
das
out
js
mov
pop
mov
xlat
add
jno
and
xor
sbb
and
outsl
shll
sbb
push
add
xchg
or
fdivl
repnz
int
mov
lds
jmp
xchg
add
cmp
roll
dec
notb
stos
aas
or
push
pop
ds
int
ud2
mov
fmuls
xchg
rcr
addl
lods
and
cmc
inc
sbb
adc
add
ficoms
loop
out
and
mov
test
mov
out
lods
jmp
sahf
fidivl
das
mov
xchg
add
mov
push
mov
rcrb
xchg
aaa
andb
dec
std
ret
sbb
push
std
xor
in
mov
movsl
add
cli
outsb
mov
mov
js
sub
into
xchg
insb
incl
adc
sbb
xchg
push
cmc
out
rcll
ficoml
lret
pushf
pop
xor
add
out
dec
jo
push
sti
jp
adc
rcll
repz
in
adc
pop
mov
fs
jmp
sub
xor
and
std
xlat
adc
xchg
and
jg
sbb
lods
sbb
gs
scas
jo
ud1
sbb
or
add
out
jle
iret
test
fwait
push
push
mov
mov
mov
in
mov
xor
dec
jle
xor
hlt
push
inc
stos
iret
add
adc
into
loopne
negl
mov
sbb
mov
adc
push
lcall
pop
mov
xor
inc
cmp
lcall
pop
pop
dec
decb
data16
inc
pop
or
adc
je
repnz
int
inc
jo
pop
in
sub
sbb
popa
jne,pn
and
xchg
cmp
lods
in
lds
out
cmp
aad
cmp
mov
decl
jmp
shlb
addl
dec
movsl
add
pop
out
xchg
pop
loop
cwtl
sub
and
jl
ljmp
movsb
lods
fcoms
add
jne
lods
dec
loop
cmp
mov
rcrb
inc
int
sbb
ficoml
jle
imul
xlat
push
mov
pop
mov
mov
ja
jb
adc
jns
imul
cld
dec
jl
es
mov
mov
cwtl
push
test
aas
fstl
call
shrl
or
dec
pop
fiadds
jb
scas
mov
inc
fwait
dec
cmp
movsb
xorl
fimuls
rol
es
push
xchg
pop
mov
jp
adc
scas
push
jnp
or
add
les
pop
xchg
adc
sbb
mov
add
and
xor
cmpsb
lret
jmp
adc
mov
push
mov
pop
stos
adcl
mov
mov
mov
sub
dec
add
inc
and
rol
lcall
out
mov
sbb
cmp
mov
mov
loopne
rcrl
das
icebp
fisubl
push
in
out
and
pop
je
stc
mov
sarl
movsl
ret
dec
es
xor
xor
loopne
or
pop
xorb
push
xchg
mov
mov
sub
je
inc
call
lods
jbe
scas
das
mov
adc
sub
and
or
xchg
es
jne
xchg
dec
out
add
pop
into
jecxz
nop
stc
mov
pop
sub
daa
mov
cltd
ss
pusha
rcrb
dec
lock
filds
or
hlt
push
push
test
lea
mov
addb
xor
daa
mov
mov
cld
out
orb
pop
jge
lcall
cmc
in
adc
aaa
jnp
xchg
outsl
jl
dec
in
test
sub
mov
fstp
mov
adc
es
xchg
int
lahf
jbe
adc
lret
inc
clc
nop
jae
dec
or
inc
xchg
enter
inc
jnp
mov
inc
scas
pop
cmp
cmpps
data16
lahf
lds
imul
fnstenv
sbb
pop
das
cmp
jmp
aas
or
mov
mov
pop
incl
je
sub
adc
out
xchg
jne
daa
or
and
fidivrs
stc
mov
in
sub
call
sbb
cwtl
adc
add
mov
ja
loope
push
aaa
das
insl
iret
lahf
xor
scas
jl
and
test
xchg
sub
mov
psubd
and
mov
cmp
push
pusha
ds
shlb
fdivrp
rolb
adc
push
adc
rorl
push
int
je
xchg
stos
cmpsl
jp
push
fidivrs
mov
rcrl
jmp
mov
cmp
adc
in
mov
int
jb
shll
push
jmp
or
enter
sbb
mov
adc
xlat
push
and
sub
je
xor
in
add
push
call
dec
popf
sub
jns
add
xchg
add
cli
inc
xor
or
push
mov
mov
pop
mov
aas
lock
jae
test
xor
xchg
push
pop
xor
mov
stos
and
es
pusha
pop
mov
mov
pop
jno
out
mov
subl
mov
xchg
repz
std
inc
repz
repz
lret
or
mov
pusha
aam
xor
cmp
sbb
mov
mov
outsl
push
dec
sbb
daa
int
and
test
int3
in
inc
jle
mov
sub
jno
push
cmp
mov
cwtl
cmp
in
cmp
mov
adc
dec
js
xchg
mov
fs
mov
rcl
frstor
xchg
cmp
insb
fisubrl
scas
sbb
inc
lcall
mov
out
test
ficoms
push
addr16
xchg
popf
xor
inc
mov
pop
sti
pushf
jp
mov
add
cmc
pop
cmpsb
and
jno
sbb
pop
push
mov
fistpl
xor
mov
cwtl
push
sbb
daa
in
xchg
push
cmp
stc
loope
rclb
leave
or
nop
and
adc
pop
xchg
and
in
insl
fistl
aaa
adc
sub
out
push
int
les
popf
out
cmp
sub
ret
ljmp
adc
movsl
mov
inc
pop
jo
sub
add
repz
or
cmp
mov
in
ret
xchg
jmp
add
and
out
lret
imul
pop
add
add
xchg
cmpsb
mov
cmp
push
jae
imul
xor
lretw
mov
pushw
aaa
jns
inc
pop
mov
mov
adc
adc
insl
jns
inc
mov
push
cmp
mov
ss
fxch
cwtl
cmpsl
sbb
jo
lods
pop
mov
sbb
mov
sub
mov
test
dec
add
jae
pop
test
sub
fimull
pop
add
pop
inc
fs
test
test
pop
cltd
mov
test
cld
cmp
mov
sbb
pop
fldcw
pop
repz
mov
repnz
gs
outsl
mov
add
pushf
shll
mov
pop
ss
in
sub
sti
loope
fs
push
pop
push
cwtl
test
dec
xchg
ja
mov
xchg
fistps
lret
arpl
jp,pt
mov
mov
rolb
scas
loope
jo
cli
mov
adc
sbb
arpl
test
inc
scas
fmuls
and
cmc
fimuls
fwait
xchg
pushf
mov
lret
dec
addr16
je
cmpsl
sub
js
gs
loopne
jp
es
aam
leave
xorb
cmp
push
pop
clc
or
ja
jle
popf
xor
hlt
outsl
sahf
ja
sbb
or
cmpsl
pushf
inc
jmp
adc
jl
scas
xor
mov
mov
push
pop
xor
adc
mov
cmp
sub
stos
mov
sahf
sbb
jno
cmp
mov
insb
jl
xchg
sti
imul
in
jmp
mov
jnp
loope
gs
sbb
rcrl
mov
test
data16
cmp
loop
xor
sti
mov
pop
sub
pop
outsl
sbb
or
rorl
cs
lock
jp
int
or
and
xchg
cmp
insb
aam
mov
push
mov
push
movsl
ret
call
ret
aas
lea
inc
dec
lds
and
cmp
mov
mov
and
mov
mov
je
test
xchg
add
test
fsubrs
jmp
dec
sbb
addr16
insl
iret
sarl
sub
or
inc
mov
ret
test
xchg
mov
xchg
rolb
xchg
pop
xlat
sbb
pop
sbb
push
pop
lahf
xlat
outsb
jns
andb
jb
push
and
inc
enter
push
lret
vpsllw
push
test
and
xchg
shll
push
cmp
push
mov
dec
inc
out
adc
sub
jb
sti
inc
adc
stc
inc
es
and
loopne
jmp
mov
pop
scas
add
mov
cltd
shrb
jmp
add
iret
cmpsl
sub
roll
testb
mov
add
mov
xchg
xchg
mov
jmp
lock
es
pop
gs
xlat
testb
pushf
jb,pt
repz
jecxz
popf
loopne
data16
loop
jge
pop
ret
sbb
je
mov
fstpt
shl
into
mov
repnz
pop
imul
xor
sbb
sbb
arpl
pop
lcall
dec
jno
jnp
fnstenv
sbb
mov
add
fs
shr
dec
add
dec
hlt
and
repnz
rcrb
loope
push
jge
jb
jnp
inc
mov
mov
inc
adc
inc
dec
adc
xorb
test
and
xchg
sub
testl
lods
adc
cmp
out
insl
or
push
mov
pusha
push
xor
test
es
sbbb
sti
jo
jp
lock
xchg
xor
fistpl
xlat
dec
or
aas
cmp
jge
adc
dec
enter
clc
out
mov
negb
stc
arpl
jg
mov
jns
nop
leave
sbb
jecxz
hlt
jns
arpl
sbb
jbe
cmp
fmull
pop
mov
fwait
cwtl
sub
jp
and
jl
xor
and
icebp
and
xor
mov
ret
movsl
lret
mov
pop
aad
sub
fbld
inc
pop
or
jae
xchg
dec
or
push
xchg
mov
mov
vpminsw
adc
mov
mov
gs
pop
adcl
jmp
adc
xchg
les
popa
mov
orl
repnz
push
inc
inc
xor
icebp
sub
in
out
jge
aad
insl
popf
rorl
push
cmp
dec
stos
aam
fsts
jg
out
out
xchg
and
xor
cmp
and
mov
jns
out
aam
into
mov
stos
jl
mov
mov
sbb
cmc
repz
je
ss
outsb
mov
dec
fstl
sbb
std
mov
or
jb
iret
gs
aas
mov
fstpt
pop
jp
add
clc
and
cld
add
jmp
data16
arpl
jno
enter
cmp
notl
mov
xchg
outsl
jl
adc
mov
xor
lea
or
movsb
mov
sub
or
nop
or
push
shll
dec
divl
xchg
clc
inc
jg
daa
std
int3
or
movsl
jg
in
xor
ja
push
mov
dec
dec
cmp
into
arpl
adc
in
sbb
lods
es
scas
incb
adc
cmp
add
lods
mov
pop
jle
dec
mov
cmp
arpl
sbb
mov
inc
rcrl
add
cmp
push
push
jle
adc
push
cmpsb
jnp
jle
mov
int3
fildll
mov
dec
mov
fbld
cld
mov
push
adcb
jp
push
fcmovne
in
sbb
add
call
ds
lahf
decl
jle
test
cmc
adc
and
repz
sbb
popf
add
call
dec
aaa
or
insb
and
mov
js
fisubs
add
xchg
adc
pop
xor
add
popl
int3
sahf
roll
xchg
mov
xor
popa
jno
popa
iret
push
and
lods
sarl
xchg
clc
add
loope
pop
xchg
add
jno
jg
cs
enter
test
xor
rolb
jae
cmp
loope
jmp
fcoms
cmp
jge
stos
xchg
pop
jb
inc
ficoms
push
loopne
sahf
inc
cli
push
fnstsw
add
icebp
js
testl
imul
push
inc
js
addr16
inc
mov
aas
xlat
int3
leave
sbb
dec
mov
inc
es
sbb
scas
cmpsl
dec
add
cmp
sbb
sahf
scas
movl
rorl
and
pop
jno
fidivs
pop
jmp
xchg
xchg
enter
xchg
in
test
popf
popf
icebp
insl
out
xchg
loope
repnz
inc
jns
repz
ss
in
int
sbb
pop
xor
scas
in
xor
or
clc
cmp
rcrl
xor
jl
dec
jmp
pop
hlt
repnz
xor
loopne
ja
mov
cltd
lret
test
inc
sub
sub
mov
mov
js
out
loop
int3
cmpsl
mov
mov
ds
test
stos
dec
in
sub
xor
and
outsb
loop
test
cmpsb
sbb
or
add
dec
jbe
mov
subb
aad
mov
out
test
mov
mov
cmpxchg
mov
loopne
mov
out
sbb
pop
sti
cs
mov
cmpl
jecxz
add
stos
aas
push
out
rorl
orb
sbbl
in
dec
cmc
jnp
int
mov
pop
aad
cmpsb
out
sbb
mov
lret
mov
shlb
mull
add
test
test
popf
dec
test
sub
xor
fsubrp
mov
dec
xchg
xchg
es
cltd
and
xchg
xchg
call
mov
adc
nop
test
inc
aad
arpl
inc
sub
in
js
aad
sbb
xchg
or
into
inc
pop
cwtl
pop
test
js
add
inc
sahf
xchg
out
xchg
pop
sbb
ret
jecxz
jnp
adc
mov
xor
pop
loope
pop
pop
mov
cmpsl
mov
fsubp
sbb
in
or
imul
push
stos
andb
pop
or
in
lahf
leave
call
and
loopne
inc
inc
mov
outsl
fwait
popl
sub
pushf
outsl
shll
add
outsb
sbb
sub
subb
js
int
pop
dec
aad
or
and
pop
mov
mov
dec
add
pop
jmp
xor
gs
push
notb
shll
push
mov
sub
popf
mov
daa
movaps
into
inc
jl
aas
cs
scas
rclb
mov
sarb
or
loopne
mov
add
fwait
push
mov
cmp
adc
sub
push
in
fs
push
push
fmul
das
jge
add
repnz
lds
ss
sahf
repz
sbb
cmp
pop
das
pusha
mov
add
mov
arpl
repz
js
incb
icebp
shll
iret
lods
sahf
inc
pop
fdivp
mov
shr
xchg
movsl
aam
jbe
les
xchg
mov
push
dec
sub
rolb
add
mov
or
cmp
test
scas
test
or
or
aaa
dec
outsl
jp
inc
lock
jmp
mov
push
xor
aaa
pop
add
cmp
pop
andl
and
and
divb
imul
rclb
mov
shl
mov
or
fucomp
sub
xchg
xor
cmp
pop
and
fbld
mov
or
dec
rorl
sbb
jge
addr16
sbb
dec
mov
inc
xor
daa
adc
add
iret
out
jmp
sub
or
loop
mov
sti
mov
clc
xor
pop
and
lock
rorl
mov
sbb
jbe
scas
xlat
sbb
lahf
adc
mov
ror
pop
gs
jnp
pushf
mov
je
lret
fmull
push
jecxz
mov
sbbb
or
stos
outsl
jecxz
rorb
sbb
dec
pop
hlt
pop
mov
push
lahf
cld
je
add
fwait
sti
cmpb
inc
push
stos
fimull
out
mov
and
fs
hlt
cmp
jne
rsqrtps
jp
sub
mov
push
xchg
sub
mov
mov
mov
xchg
add
jne
shlb
mov
lcall
out
sub
lret
adc
sbb
sub
repnz
pop
lcall
fidivrl
lods
pop
int3
cmp
dec
adc
push
scas
push
shlb
fistpl
popa
mov
push
xchg
adc
pop
iret
ja
cmpsb
push
dec
inc
pop
add
in
jb
xchg
sbb
pop
dec
dec
push
mov
xchg
test
repnz
cmp
shlb
mov
cwtl
adc
cs
lods
cmpsl
in
imul
cmp
pop
mov
mov
jbe
xchg
pop
pop
cld
jns
mov
pusha
stos
pop
imul
inc
imul
test
out
insl
sahf
out
out
aaa
ds
add
adc
hlt
movb
and
nop
imul
test
shrb
xor
pop
loope
fidivs
lret
dec
mov
cltd
repnz
cmpsb
lahf
lods
sbb
pop
xor
mov
push
mov
xor
inc
fstpl
lds
add
test
add
ljmp
daa
xchg
mov
je
inc
sub
sub
cmpb
psadbw
pop
ret
lds
jp
cmc
stc
xor
sub
mov
jmp
negl
adc
cli
xor
test
mov
sbb
push
in
ja
mov
xchg
push
mov
mov
popf
gs
push
mov
xor
jb
mov
cwtl
in
dec
je
in
mov
lea
outsb
dec
sub
pop
sbb
shrb
jne
cmp
outsl
fs
sub
dec
mov
and
mov
sti
mov
out
mov
pop
jno
rorl
pop
push
sub
test
int
ret
jb
sub
aam
mov
scas
jecxz
cmp
gs
jo
pop
or
stc
inc
ss
cmp
movsb
dec
dec
ds
lahf
rolb
mov
push
pop
repz
das
jle
out
ds
loope
out
lret
dec
test
pushf
jmp
aas
call
mov
aas
xchg
or
inc
stos
fisttpl
test
cmc
in
cmpsb
cltd
xor
push
and
sub
ficoms
fdivrl
neg
push
in
inc
and
inc
mov
adc
pop
xchg
sbbb
cmp
stos
mov
cmpsb
adcl
and
xor
dec
mov
rorb
call
or
inc
lret
insl
popf
and
or
xor
outsb
loop
in
xchg
ljmp
roll
popf
adc
xchg
jae
iret
into
cmc
cmp
and
adc
pop
lcall
xchg
push
popa
pop
mov
adc
mov
sbb
pop
fistl
daa
and
in
jns
add
dec
call
fimull
aas
or
sahf
bound
adc
sahf
push
pop
lock
sbb
xchg
dec
mov
cld
ret
scas
mov
or
push
js
mov
nop
imul
pop
xchg
mov
jo
lock
sbb
pop
push
xor
or
jle
sbbl
push
add
aas
inc
sbb
jmp
sub
dec
add
testl
add
test
or
mov
std
add
lock
pop
scas
icebp
xchg
xchg
ja
dec
xor
stos
push
and
subb
movsl
sti
add
push
xchg
pop
lret
sub
imul
addb
fisttps
sbb
cmpsb
shll
out
insl
jns
mov
ficoms
dec
and
mov
fstpl
out
ret
jne
fildll
jle
lock
fsubrl
lods
push
jg
mov
lods
ja
addr16
xor
cmpb
xchg
xchg
add
nop
sahf
aad
cld
and
xor
out
cmp
ds
cmc
sahf
jecxz
movsb
dec
xchg
lret
xor
mov
dec
fdiv
leave
outsb
and
cltd
ds
daa
sub
add
roll
adc
movb
push
filds
adc
sub
dec
inc
arpl
sahf
xlat
scas
push
mov
push
pushf
mov
jle
out
xchg
fs
cmp
fnsave
es
loop
mov
cli
dec
or
adc
or
out
pop
lret
stos
je
jb
pop
scas
inc
cmp
cmp
sub
pop
es
in
xor
and
xchg
adc
pop
pusha
sub
sub
jl
cmp
fucomip
out
outsl
xlat
cmp
mov
out
dec
sbb
cmp
jnp
xchg
shlb
jb
mov
xchg
mov
xlat
int3
mov
jle
or
adc
xchg
movsl
arpl
fdivrs
xor
pop
aad
mov
jno
out
ret
leave
inc
in
in
xchg
add
mov
out
adc
clc
cwtl
mov
dec
adc
daa
or
mov
jmp
test
push
gs
das
push
loop
frstor
xlat
bound
je
bts
or
andl
call
add
jg
sbb
test
xlat
sahf
push
jl
sub
cli
mov
lods
sbb
cmp
jp
fmuls
xchg
pop
push
push
cmc
mov
dec
sub
in
dec
or
cmpsl
int
addb
test
jl
pop
mov
lods
and
lret
pop
sub
and
ret
outsl
lret
arpl
lds
pop
xor
aad
outsb
push
rorl
xchg
fidivl
mov
ss
dec
call
sbb
mov
movsb
push
and
xor
loope
cltd
push
jecxz
loopne
push
fsubl
inc
and
ret
cmpsb
mov
or
xor
or
arpl
int
pop
lcall
insl
mov
push
adc
jne
xor
sub
int
or
lock
and
jo
add
push
gs
loope
fld
sub
push
dec
icebp
aas
int3
hlt
fwait
sti
mov
lods
aas
mov
jp
vmwrite
lods
xchg
aad
ficoms
pop
fisttpll
inc
jecxz
in
xor
scas
inc
in
mov
rorb
test
or
movaps
mov
roll
xchg
das
add
or
cmp
in
jno
in
adc
lock
ds
in
inc
push
test
clc
inc
jno
xchg
jle
ds
int3
jp
les
pextrw
test
or
mov
mov
test
movsl
int
les
and
pop
jl,pt
sbb
and
add
in
inc
sahf
jmp
pop
sub
in
mov
cmova
in
sub
addl
pop
mov
loope
rcrl
inc
mov
jg
and
xor
xor
shll
or
push
int3
jbe
aaa
adc
js
popa
scas
cs
add
outsb
imul
inc
dec
outsl
je
int
mov
popa
out
push
int
jno
xchg
insb
jle
mov
push
push
popa
pop
mov
jecxz
push
es
movsb
pop
ljmp
sub
into
mov
aad
sete
jno
fists
jb
add
inc
xlat
and
and
push
push
movsb
pop
mov
xchg
flds
jmp
pop
or
mov
adc
or
in
sti
adc
add
jo
mov
pusha
pop
ljmp
call
jb
loope
xor
dec
or
mov
push
xchg
mov
xchg
or
jo
popf
out
dec
pop
cltd
stos
jne
pop
mov
jg
mov
bound
xchg
cmp
cmpsl
jae
popf
je
decb
or
push
cmpb
test
sub
jmp
adc
inc
and
jl
cltd
mov
jecxz
addb
shl
mov
sarl
jae
push
ret
pop
stc
sub
lds
jle
mov
mov
jns
inc
pop
push
jle
xorb
cmpsb
mov
push
pop
xchg
and
cltd
xchg
in
mov
enter
call
mov
test
or
pop
movsl
ss
lahf
mov
pushw
xor
in
add
add
pop
mov
fiaddl
int3
lds
pop
sub
cmc
mov
mov
rorl
and
add
aaa
add
arpl
jo
jle
and
jl
jg
stos
mov
filds
xchg
je
in
loope
adc
mov
lret
jmp
hlt
test
fwait
xor
mov
and
fiadds
mov
mov
sti
jecxz
and
cmp
popf
mov
lea
jo
push
xchg
pop
cmp
stc
dec
aas
add
xor
xor
jmp
and
lods
or
cmc
repz
inc
gs
inc
xor
xor
mov
xor
mov
adc
rolb
push
das
mov
lcall
jge
inc
jmp
repz
aam
cmpsb
lods
out
cmp
jmp
adc
push
les
jnp
cmp
lea
push
fnstenv
adc
std
pop
ror
and
xchg
imul
out
faddp
movsb
nopl
aas
scas
popa
and
push
mov
mov
or
lahf
int3
pop
adc
movsl
test
mov
xor
movsl
mov
mov
es
pop
dec
pop
loope
cltd
pop
xor
nop
sub
push
arpl
jle
inc
cmp
data16
push
insl
add
dec
mov
popa
xchg
stos
enter
mov
ja
pop
or
push
xchg
iret
sbb
cmpl
cs
sarb
mov
ret
cmp
test
cmp
sbb
xor
mov
sub
bound
cmp
xchg
lods
inc
dec
push
imul
cmpl
cmpsb
bound
dec
movl
push
pop
inc
ret
andb
sarb
nop
movsl
into
sbb
test
mov
daa
jne
jg
adc
mov
loop
inc
xchg
lret
cmpsb
sti
pop
ds
xor
cld
or
pop
sti
les
inc
psllw
scas
add
or
call
fwait
mov
out
jle
fimuls
mov
xchg
xchg
sarb
xor
jne
xor
movsb
fsubrl
in
cwtl
pop
sarl
leave
push
shlb
aam
jmp
in
popa
in
out
sbb
mov
ret
sbb
fdivrp
test
iret
jnp
push
insb
das
push
mov
inc
dec
in
push
xchg
lret
test
das
in
inc
cmp
sub
mov
jecxz
cltd
jns
in
mov
mov
pop
mov
pusha
and
push
test
sub
ds
xor
in
mov
xchg
sub
fdivrs
and
dec
ljmp
sti
cmpsl
and
ficomps
repz
jns
daa
shl
loope
in
rcr
sub
jne
test
mov
icebp
mov
in
sahf
call
into
cmpsb
imul
cmpsb
add
inc
mov
xor
sti
xchg
popa
pop
notl
dec
cmp
pusha
dec
jg
negl
lods
cmp
aaa
mov
add
movsb
dec
or
ret
mov
scas
add
fistps
push
xchg
or
push
popl
lods
lcall
jb
out
xchg
or
ja
mov
mov
push
pushl
imul
pop
stos
and
adc
lcall
lcall
inc
mov
jns
data16
inc
imul
dec
daa
or
pop
mov
mov
outsl
cmc
loop
data16
fists
jb
outsb
jae
clc
dec
cld
add
scas
jl
out
fisttpl
push
ss
test
fadds
pop
jl
inc
pop
push
in
mov
enter
rcr
jnp
push
out
mov
mov
insb
ja
fwait
xor
out
dec
les
dec
add
or
push
mov
mov
jb
jne
enter
mov
and
sbb
adc
mov
mov
stos
imul
cmc
or
jmp
aad
psrad
dec
and
inc
mov
ja
rolb
enter
and
mov
xchg
stc
mov
jnp
mov
xor
inc
stos
push
jbe
stc
out
or
jp
jg
adc
repnz
mov
push
loope
pop
adc
jmp
jo
loop
inc
fcoms
shlb
dec
sbb
xor
test
out
je
gs
out
mov
cmpps
lret
cli
cmp
leave
xor
sbb
hlt
mov
mov
add
jecxz
and
enter
lret
or
push
aad
cmc
mov
sbb
test
stos
xchg
bswap
out
js
or
test
pop
test
aas
mov
inc
shlb
xchg
push
mov
adc
divb
js
stc
out
subb
mov
popa
push
outsl
jmp
or
adc
out
dec
int3
addr16
test
rcr
shll
scas
push
inc
dec
fmuls
pop
mov
adc
push
ljmp
push
inc
mov
inc
ds
add
fisttpll
daa
add
sbb
sarb
push
jge
pop
ret
xchg
mov
mov
rcll
pop
pusha
ljmp
jbe
rorl
bound
mov
ja
pop
add
repz
xchg
mov
movsb
push
sbb
xchg
sub
js
aam
addr16
jmp
or
cmp
mov
adc
js
inc
xchg
in
mov
adc
hlt
data16
xchg
mov
inc
pop
jo
dec
inc
enter
cmpl
mov
pop
arpl
insb
stos
add
jp
rolb
push
aaa
inc
mov
dec
test
test
fiadds
loopne
adc
jl
xor
inc
pop
mov
aaa
xchg
aaa
psubsb
sbb
ret
icebp
in
dec
push
in
lahf
or
dec
inc
xlat
data16
add
mov
dec
ja
inc
je
leave
sub
xchg
mov
pop
test
adc
jg
fistps
scas
xchg
je
mov
outsb
jae
mov
dec
sbb
xchg
inc
pop
pop
or
adc
dec
bound
adc
and
shrb
sbb
stos
pop
dec
mov
div
xor
jle
inc
dec
insl
push
pop
mov
test
xor
mov
push
push
mov
mov
or
ret
jno
leave
mov
neg
cwtl
pushf
pop
pushf
jne
push
lods
push
addb
xor
frstor
das
fcomip
lock
sub
xchg
pop
shlb
stc
mov
mov
cli
test
je
jnp
or
sub
mov
mov
cmp
mov
mov
xchg
incl
sti
mov
add
lret
pushl
sbb
out
stos
leave
and
int
lea
jge
std
ror
icebp
fstpl
enter
sbb
lcall
in
pop
jge
push
outsl
add
hlt
lret
cmp
shrl
adc
mov
mov
jnp
jae
push
sbb
lea
push
fisubs
mov
fistpl
inc
push
call
add
push
pop
inc
stos
xchg
mov
insl
fwait
loopne
jmp
jne
clc
je
rcll
cwtl
divl
mov
dec
mov
jl
lea
js
jbe
pop
add
orl
rorb
arpl
mov
jl
outsw
test
test
faddp
fwait
push
divl
pop
hlt
mov
sub
in
pushl
in
push
cmp
negl
sbb
xchg
insl
lock
and
and
push
cmp
scas
rdtsc
stos
push
out
stos
repz
lods
imul
xor
mov
loope
es
push
jl
adc
inc
stc
loopne
imul
or
insb
icebp
push
adc
hlt
jp
cmp
mov
and
je
es
scas
cltd
mov
jg
fsubrl
inc
jl
mov
sbb
push
shrb
lcall
fprem
repnz
push
scas
stc
or
jns
pushf
cmpsb
dec
lods
loope
dec
push
sub
sahf
inc
iret
add
mov
mov
scas
out
ds
pop
dec
hlt
movsb
pop
sub
orb
inc
int
push
cmp
divl
adc
xchg
movsl
sub
aas
lret
mov
rcrl
lret
ret
sub
loop
jle
loop
cli
jo
stos
adc
cmp
mov
sti
mov
pushf
lds
mov
aam
add
jae
aad
fldcw
cmpsb
push
jg
add
bound
aaa
jl
push
pop
jae
loopne
ret
add
jp
addr16
or
and
adc
dec
push
out
sbb
sub
test
push
pushf
pop
aas
movsl
jae
rcrl
xchg
sub
cmp
mov
push
outsb
mov
fsub
adc
mov
push
mov
or
mov
pop
jge
scas
and
rorb
cld
inc
mov
cli
add
mov
je
int3
lcall
xchg
sbb
push
push
push
xchg
jo
mov
push
xchg
dec
ja
pshufw
sbb
cmp
adc
inc
frstor
sbb
inc
or
cmp
lods
aaa
xor
or
aam
sub
icebp
xchg
dec
mov
pop
call
mov
es
popa
jb
mov
mov
mov
loopne
fstpl
xchg
es
mov
mov
incl
shlb
inc
test
push
fnstsw
inc
jbe
push
lcall
out
mul
fimuls
pop
in
imul
sub
and
adc
adc
mov
add
push
mov
cmp
je
or
mov
pusha
adc
stos
test
mov
mov
cmp
or
jno
lods
pop
mov
out
test
push
dec
adc
in
subl
cli
mulb
gs
test
lods
push
adc
cmpsb
add
les
sbb
and
aam
mov
cmp
das
out
adc
mov
repz
adc
push
call
mov
dec
into
into
insb
std
int
sub
xor
pop
cmp
lds
rolb
out
xchg
ljmp
test
push
mov
xchg
jns
sub
dec
dec
sbb
lods
pop
iret
popf
rclb
cmpl
add
lea
and
dec
push
or
imul
sbb
xor
adc
jp
jecxz
push
fdivs
imul
cmp
mov
push
mov
neg
lods
sbb
lea
xor
sub
scas
cmpsb
shl
dec
inc
inc
xor
xor
in
push
outsb
mov
mov
sbb
inc
lods
jmp
cli
xchg
scas
faddp
fnstsw
lods
push
adc
les
sti
test
pop
lahf
xchg
xor
push
inc
jge
scas
ja
or
xchg
sub
stos
lods
jb
jmp
inc
add
mov
mov
loop
and
push
push
out
stos
mov
mov
mov
mov
dec
xchg
jmp
mov
jne
inc
mov
fs
inc
sbb
mov
cli
fldcw
hlt
dec
mov
popa
mov
sbb
push
subl
shl
push
or
dec
cltd
adc
rorb
cmpsb
sub
pop
inc
sub
mov
sbb
xchg
jecxz
push
iret
int3
shrb
dec
call
dec
push
mov
cld
pop
js
cmp
dec
mov
hlt
push
movl
mov
hlt
mov
shlb
cmp
pop
push
xor
cwtl
xchg
add
push
rorl
dec
jmp
inc
dec
es
pop
xor
pop
jl
outsl
pop
push
in
mov
jb
push
sbb
repz
ja
pop
cmpl
push
inc
jmp
scas
lret
rcrb
and
loope
add
sti
jl
xlat
hlt
inc
lahf
fistpl
lods
mov
aaa
gs
mov
push
adc
xchg
or
fwait
cwtl
popf
js
hlt
mov
sarl
mov
pop
lret
jge
xlat
add
sti
and
fdivl
arpl
sbb
push
xlat
inc
push
cli
dec
dec
cmp
std
mov
loope
xchg
cltd
adc
movsl
cmp
jo
mov
enter
ret
in
mov
cmp
pushf
fsubrl
movsb
mov
mov
dec
iret
lods
ficompl
aam
mov
imul
add
xor
jnp
fidivs
xchg
lods
push
fcmovb
push
lock
jne
mov
push
lods
or
dec
jns
scas
jmp
shrb
pusha
jg
fbld
into
fisubrs
push
stc
jae
les
inc
jl
and
into
xchg
mov
cmp
sbb
inc
and
das
into
js
adc
aad
xchg
ret
and
ficompl
inc
icebp
cli
in
mov
repnz
in
sub
mov
mov
bound
out
stos
mov
xor
shll
xlat
mov
add
ret
dec
aam
mov
shll
mov
dec
lret
lods
cld
inc
push
mov
push
sub
out
push
dec
notb
inc
stos
fisttps
xor
enter
xor
outsb
or
fwait
xchg
sub
push
scas
or
nop
mov
jbe
dec
lahf
pop
cs
sbb
enter
movsb
mov
lahf
iret
xlat
popa
jg
iret
sbb
imul
add
dec
xor
test
inc
int3
loope
insb
pop
lds
sub
out
in
xchg
fiaddl
xor
dec
inc
sub
je
std
xchg
or
pop
jecxz
pushl
repz
sbb
aas
mov
imul
cltd
jb
out
sti
adc
sub
in
push
push
pop
jmp
and
inc
mov
aaa
mov
pusha
mov
out
lock
jmp
mov
adc
shll
imul
cmp
jmp
sbb
mov
and
and
or
cmpsl
push
xchg
mov
insb
jnp
adc
sti
aad
pop
fwait
aas
add
add
stos
dec
pop
pop
inc
or
sarb
or
gs
jnp
inc
mov
popf
ffree
xchg
fcompl
sub
pop
jle
fsubs
mov
ret
adcb
in
sub
fcomps
hlt
xchg
push
xor
scas
ljmp
lods
out
jle
dec
sbb
xorl
sub
popa
jmp
insb
and
inc
shlb
call
inc
sub
lock
cmpsl
pop
mov
cmp
and
xchg
mov
mov
add
and
clc
dec
movsb
inc
scas
pop
adc
push
daa
sbb
test
inc
adc
cltd
pop
inc
cmp
int3
push
bound
inc
mov
inc
int3
scas
notb
push
xlat
sbbl
fisttpll
stos
push
lahf
ss
iret
test
cs
pop
jns
out
int3
pop
movsl
pushf
mov
push
mov
aam
mov
jne
stos
sbb
test
test
cmp
sbb
dec
add
cmp
popf
inc
jmp
mov
xor
stc
sub
xor
adc
mov
mov
mov
and
cmpsl
in
inc
jae
in
lahf
cwtl
sti
inc
pop
jbe
mov
fucomi
dec
bound
out
pop
adc
out
js
pop
les
mov
cmp
mov
cmp
loopne
mov
leave
or
sbb
mov
les
in
sub
daa
mov
mov
popf
movsb
movsb
jp
jo
push
dec
mov
dec
mov
xchg
loopne
cmc
add
push
add
jns
mov
test
xchg
mov
sub
cmp
mov
pop
lret
xor
inc
cmp
push
adc
ss
xor
jp
int3
aaa
dec
mov
cs
nop
outsb
paddsb
orb
cltd
idiv
jecxz
cmpsl
stos
push
ljmp
or
jno
sub
pop
add
cmp
cmp
push
mov
inc
dec
mov
mov
mov
pop
adc
or
mov
les
jns
pop
sub
inc
xor
fildl
ss
test
mov
add
add
mov
or
jo
in
and
xor
inc
inc
push
jno
dec
sahf
btr
pop
jnp
es
mov
cli
or
jg
out
mov
xchg
sbb
je
jb
lods
xchg
sbb
in
mov
and
lds
xchg
std
mov
sbb
lds
mov
dec
adc
scas
jle
dec
mov
mov
adc
dec
mov
add
popa
pop
test
loop
pop
adc
mov
addr16
rclb
push
fwait
push
xlat
test
push
xor
pop
mov
insl
pop
xor
jecxz
aas
rcrl
in
sti
cmp
jno
in
dec
add
or
adc
and
cmc
ret
mov
lods
shrb
and
out
andl
mov
mov
mov
and
xchg
ret
fists
roll
iret
mov
xchg
movsb
ljmp
int3
aaa
xlat
ss
jns
jns
shrb
dec
cmp
pop
mov
jne
pop
add
dec
cli
outsl
jns
cltd
mov
lret
mov
adc
xchg
lret
mov
cltd
mov
mov
fstl
pop
cwtl
popa
sbb
shlb
cmc
sti
mov
mov
jle
cmp
call
fidivs
adc
mov
jne
iret
pop
repnz
mov
cmp
movsl
pop
movb
ljmp
jo
xchg
mov
aam
mov
cmc
arpl
cmp
pop
call
and
push
sarb
sub
stos
in
push
shlb
outsl
dec
test
stos
orl
int3
ret
aad
mov
or
adc
push
jg
jo
cmpsb
sbb
inc
out
test
aas
sub
xor
aaa
stc
adcl
fisubs
in
and
pop
decl
ret
cmp
inc
ds
fs
adcl
jnp
xor
jecxz
xchg
out
popa
push
jb
xchg
mov
inc
cmp
mov
jge
inc
or
add
fisubl
mov
jbe
sbb
add
jge
popa
std
hlt
mov
mov
jecxz
repnz
push
pop
imul
cmpsl
aam
cmp
jb
jl
fidivs
sub
lahf
mov
jge
jnp
bound
and
pop
mov
pop
pop
xor
mov
jmp
push
daa
add
jecxz
cmp
sub
adc
mov
dec
into
xor
push
dec
movsl
mov
cli
cmp
inc
xchg
leave
dec
mov
sahf
add
adc
adc
jmp
lahf
out
addr16
xor
into
pop
xchg
pop
test
popa
dec
lock
add
mov
leave
popf
xor
and
xor
xchg
pop
outsl
push
arpl
hlt
jg
gs
iret
lds
test
movsl
lcall
fisttps
inc
add
xchg
mov
fldl
cmp
in
loope
or
movsl
jnp
je
push
sbb
bound
adc
pop
lahf
jp
sti
push
adc
pusha
dec
aas
fwait
and
cmp
dec
mov
mov
mov
das
aaa
pop
mov
adc
mov
pop
stos
sti
cmp
fildl
cli
dec
adc
push
call
shlb
adc
lret
or
mov
xchg
je
push
xor
jns
repnz
test
inc
scas
cmpsb
and
sahf
shlb
cs
or
mov
adc
ss
mov
inc
sub
sar
and
xchg
addb
ret
cmp
mov
xor
push
jge
dec
xchg
or
sbbl
shll
fxch
test
add
adc
popf
movsl
loop
mov
mov
pusha
fnstenv
mov
rcl
jge
xor
test
or
cmp
fldl
dec
cmp
xlat
fdivr
cli
inc
cmp
fisubrl
inc
enter
mov
xchg
sti
inc
or
sub
mov
mov
rolb
andb
ss
shlb
test
in
inc
andb
shr
insl
inc
xor
inc
xchg
mov
mov
adc
dec
lds
push
cmpsb
ret
jno
sub
call
shrb
sbb
xchg
add
sub
or
loopne
outsl
and
mov
sub
sbb
mov
cld
pop
dec
pop
js
mov
in
pop
push
mov
scas
iret
cmpl
cmpsl
cmc
loop
xor
ljmp
push
in
add
sbb
and
lds
xor
push
adc
rcll
sub
mov
push
and
frstpm(287
or
cmp
rcll
movsb
inc
dec
aam
cmc
jp
stc
sbb
lods
add
pusha
outsb
pushf
inc
pop
sbb
push
hlt
pushf
es
push
push
add
mov
mov
aas
cli
outsl
jle
mov
jno
adc
lret
es
inc
clc
fldenv
jnp
inc
incb
jl
rcll
xchg
xchg
jmp
test
aam
cld
sbb
xchg
sbb
xorb
xchg
in
lea
scas
outsl
ljmp
pushf
add
inc
cmpsl
lock
pop
pop
fldt
aam
fucomip
bound
dec
lahf
add
pop
add
cmpsl
inc
test
sub
xor
pop
data16
addb
hlt
cs
jbe
leave
sub
and
mov
fsubs
push
mov
inc
jb
stos
sub
data16
daa
mov
sbb
mov
or
ret
and
push
cwtl
or
sbb
lret
jb
cltd
movsb
int3
or
cld
sub
jo
sbb
in
add
fadds
aaa
fisubrl
lret
jns
cbtw
xor
lds
or
cli
mov
add
roll
mov
dec
fsubl
adc
jmp
scas
inc
jno
adc
adc
mov
repz
pop
or
inc
pop
outsb
adc
shr
jo
inc
outsb
sub
inc
jmp
inc
sahf
push
aam
cmp
fdiv
aas
sbb
outsl
jle
hlt
aad
fwait
in
fcoms
dec
jle
daa
inc
mov
dec
pop
outsl
lock
mov
shlb
jg
inc
dec
sub
xlat
loop
push
mov
mov
mov
inc
dec
mov
inc
arpl
dec
dec
jp
lds
sub
aaa
fcomps
mov
push
cmpsl
inc
jo
jae
loop
xor
leave
dec
or
cli
xchg
aam
lods
push
faddp
in
adc
adc
pop
scas
mov
test
jnp
and
notl
push
mov
jns
aad
leave
test
push
inc
inc
or
ljmp
pushf
adc
fwait
iret
push
add
sbb
adc
mov
pop
lahf
pop
enter
mov
lock
outsl
xchg
mov
xchg
adcl
in
icebp
flds
fcomp
mov
or
cltd
lock
je
and
push
mov
test
scas
mov
xor
js
sahf
mov
stos
pop
iret
xchg
adc
ss
ds
or
pop
outsl
sbb
mov
cltd
fistl
aam
fs
cmp
out
gs
pop
xchg
fmul
repz
stos
pop
shlb
into
das
sahf
push
data16
push
loop
xor
inc
cmp
dec
mov
or
mov
ja
jecxz
imul
mov
xchg
jecxz
cmp
popf
fs
xchg
push
dec
jecxz
out
je
mov
add
cmc
xchg
leave
fnsave
movsb
fwait
addl
mov
sbbl
setns
cmp
inc
xor
scas
inc
icebp
imul
adc
enter
cmc
push
add
push
dec
push
adc
rorb
mov
xchg
inc
int
inc
pusha
mov
fiaddl
push
add
scas
cs
mov
inc
lret
mov
pop
aas
jbe
fsts
outsb
mov
or
mov
test
cmp
sbb
ds
cs
mov
xchg
enter
popa
xchg
add
push
outsl
dec
inc
or
xchg
mov
xor
std
mov
push
rorl
mov
js
jmp
inc
cmp
fdivrs
cltd
add
or
jb
jp
es
cmp
scas
test
aas
sbb
jmp
xor
pop
mov
push
mov
pop
lock
jg
mov
notb
ds
fnstcw
outsb
mov
or
xor
push
sti
adc
ret
xor
dec
ret
mov
jbe
adc
mov
cld
lods
jo
push
dec
jl
out
scas
push
and
push
push
inc
movsl
mov
lods
iret
sub
jecxz
push
xor
enter
mov
xor
mov
dec
jno
inc
test
dec
pop
pop
in
loop
nop
sbb
add
sbb
lea
lcall
jecxz
xor
es
inc
fs
in
gs
cmp
sbb
adc
jmp
mov
rclb
stos
dec
xchg
loope
loopne
nop
scas
cli
mov
xor
cld
mov
ret
push
cmpsb
enter
pop
outsl
pop
sub
lcall
fs
iret
jae
in
xchg
mov
pop
shl
push
pop
push
cltd
std
cmp
sbb
cmp
adc
push
or
lods
data16
sub
iret
loop
xchg
cli
imul
push
data16
gs
test
and
xchg
mov
fcoml
shlb
lcall
insb
pop
adc
push
leave
or
rcr
inc
test
sub
cmc
mov
les
bound
dec
std
mov
sub
iret
push
stos
rol
or
and
sbb
pushl
mov
jbe
repz
push
sub
outsl
pop
outsb
sbb
popf
int3
test
sub
or
sub
push
adc
xchg
xchg
lock
pop
pop
popa
lods
pusha
sahf
inc
xor
jecxz
push
mov
mov
inc
jmp
sub
mov
cmpsl
arpl
mov
cmp
or
jl
shll
vpmadcsswd
and
lock
out
ret
add
cmp
sarb
xchg
in
ja
mov
test
out
push
call
dec
inc
fisttpll
popa
test
movsl
inc
pop
test
mov
test
cmp
adc
push
xor
cmpsb
sti
jo
cmc
pushf
sub
cs
sub
je
add
jno
mov
sub
hlt
mov
add
pushf
push
dec
xorl
outsb
insl
sarl
sub
xchg
out
fldl
pushf
pop
push
mov
mov
dec
mov
in
pop
mov
cwtl
fbstp
cwtl
jle
cmp
push
ss
ret
int3
int
push
mov
popf
mov
mov
pushf
jl
inc
fidivl
mov
adc
dec
ja
stos
popa
rcr
andb
cmp
loope
jae
enter
pop
dec
ja
mov
cmp
imul
lock
ret
pop
ljmp
inc
sarl
sub
adcl
lahf
jl
pop
mov
cmp
xchg
cmp
jns
jnp
push
mov
loope
add
movsb
dec
mov
ret
std
sbb
adc
pusha
inc
loop
imul
fldt
pusha
lahf
aad
inc
imul
jb,pt
push
dec
pusha
mov
movsl
rolb
mov
add
sub
pop
cmp
push
scas
mov
mov
xor
sbb
mov
loop
imul
test
push
in
ret
shll
inc
pop
add
add
push
cmp
test
shlb
imul
shl
je
pop
mov
nop
lret
fsincos
movsb
and
fs
aad
mov
sbb
nop
daa
or
repz
mov
dec
xor
mov
mov
lods
mov
xor
mov
jno
xchg
movl
fcmovnbe
mov
jne
sbb
xchg
mull
mov
sbb
aad
and
ss
add
inc
popf
mov
jb
jne
icebp
mov
push
xchg
sbb
xor
xchg
push
hlt
mov
in
adc
mov
out
mov
xchg
int
fmull
jp
jmp
ret
js
mov
call
or
cmp
pop
adc
cmp
inc
test
outsl
adc
mov
push
sub
sub
and
iret
push
pop
iret
mov
pushf
shrl
and
add
or
mov
mov
inc
or
cmpsb
shll
inc
inc
out
jb
or
ret
jo
or
js
lds
push
mov
aas
fidivrl
jmp
mov
add
jmp
cmp
cmp
jbe
cmp
hlt
pop
ss
fidivrl
lret
jnp
pusha
mov
rcrb
push
mov
push
test
and
leave
shrl
pop
pop
insb
clc
sahf
sbb
pop
popf
enter
loope
pop
push
fmul
dec
incb
in
fcoml
adc
pop
push
sub
shrl
push
adc
jns
in
dec
mov
movsl
ret
arpl
cmp
subl
and
sbbl
fwait
add
or
pushf
cltd
ljmp
mov
push
mov
push
cld
popa
cmpsb
push
iret
les
hlt
jg
inc
fwait
or
ja
leave
in
pop
fsubrp
lret
or
je
cltd
pop
rolb
cltd
sbb
jmp
fstpl
xchg
movsb
sub
cmp
xlat
adc
jle
and
mov
leave
fwait
cmpsl
push
stos
push
popa
xor
pop
xor
shrl
filds
divb
ss
js
xor
test
sarb
incb
add
mov
add
je
jne
test
arpl
mov
mov
lahf
stos
xchg
push
add
cmp
rol
addb
popf
cmp
stos
in
jp
movsb
cmp
dec
lock
jo
xlat
rcll
popa
out
out
js
or
cmp
gs
out
inc
xchg
adcl
mov
mov
jp
lock
aas
add
imul
rorb
movsb
enter
jge
cmpb
gs
lret
jns
pop
lret
imul
xchg
in
sti
movsl
mov
mov
popa
shrl
xchg
movl
pop
repz
lret
sub
inc
jno
inc
xor
pop
lret
jbe
mov
fisubrl
add
les
sahf
scas
out
clc
push
out
jnp
cld
add
outsl
aaa
cmp
cmpsl
add
ds
pushf
loop
gs
loope
aaa
mov
scas
mov
fisttps
movsl
fs
inc
lods
pavgb
adc
sub
lret
bound
mov
ljmp
xchg
add
sahf
pop
cs
jne
jnp
sahf
addr16
pop
xchg
inc
repnz
aas
add
ljmp
dec
ja
cmp
pop
push
sbb
cmp
stos
jo
pop
add
adc
fwait
out
mov
test
push
mov
sbb
in
inc
fisttpll
or
pushf
inc
and
or
cmc
mov
and
hlt
out
inc
xor
mov
pop
mov
sub
inc
cmp
dec
xor
les
inc
jle
jecxz
arpl
xor
test
cmp
and
xchg
loope
jp
arpl
jecxz
push
nopl
ret
jmp
xchg
xchg
mov
movsb
in
daa
outsl
push
ret
mov
outsb
stos
test
dec
nop
data16
imul
xor
mov
arpl
cmp
jae
xor
stos
adc
lahf
aas
push
pop
jnp
int
dec
gs
jbe
lea
outsl
fmulp
aaa
or
out
push
or
and
mov
leave
dec
pop
imul
inc
clc
dec
mov
popa
repz
into
aad
jno
cs
ljmp
aaa
pop
dec
xchg
insl
cmpsl
idivl
jns
inc
ss
cmp
push
in
sbb
scas
cmp
int
cmp
mov
je
cmc
mov
movsl
rclb
icebp
xchg
loop
xchg
xchg
sbb
mov
push
icebp
jp
into
decl
pop
into
ror
dec
loop
jbe
adc
jge
addl
fiaddl
movsb
les
loopne,pn
cmp
nop
or
lcall
mov
jl
and
ficoms
xchg
sub
jle
sti
xchg
pushf
jae
adcl
aas
mov
sub
popa
rolb
jnp
fists
sub
push
mov
fwait
xor
add
sti
pop
subl
lahf
xchg
enter
inc
push
cmpsb
push
lods
cmp
add
fsubr
ss
jle
mov
mov
iret
shll
loope
pop
popa
lret
add
sti
jecxz
mov
test
dec
xor
push
ret
and
lock
cmpsb
jp
push
sub
int3
loop
xchg
mov
sarl
sub
cwtl
lahf
in
cmp
or
xchg
repnz
push
dec
gs
movsl
in
dec
sub
inc
mov
mov
mov
arpl
fwait
and
sahf
sbb
dec
sbb
in
lods
inc
ja
test
movsl
pop
movb
cmpsl
cwtl
fwait
pop
popf
xor
scas
inc
or
in
loop
dec
mov
pop
sysexit
pop
xchg
pop
sub
sub
sbb
sbb
es
in
mov
pushf
sub
and
pop
scas
inc
mov
cmp
xor
popa
mov
inc
push
xor
and
push
xchg
add
fcmovnb
js
mov
icebp
cld
lret
test
lea
faddl
lahf
xchg
pop
fwait
shll
cld
aas
ret
cli
and
in
fsubrs
sbb
xchg
jns
push
mov
scas
mov
add
mov
cmp
mov
pop
mov
add
or
sbb
sub
stos
out
adc
mov
subl
rcll
or
iret
cli
add
test
xor
loopne
out
or
int
push
ret
pop
cmp
enter
shl
sahf
dec
dec
push
add
add
add
jecxz
test
mov
sub
mov
mov
idiv
movsl
ret
aam
ret
ljmp
dec
sti
inc
add
aam
pop
xor
mov
mov
fdivs
push
outsb
mov
jl
xchg
jg
insb
incl
inc
imul
adc
pop
lods
lret
sub
and
std
das
mov
sbb
pop
inc
cmp
or
push
test
sahf
loope
xchg
xlat
xchg
mov
xor
dec
sbb
push
jle
addr16
divb
inc
repz
dec
ljmp
push
fisubrs
push
cmp
push
dec
and
imul
lods
bound
jbe
push
mov
stos
repz
xor
pop
data16
inc
mov
inc
out
lea
aaa
jge
fidivl
xor
and
int3
jnp
cmpb
int3
pushf
add
testl
sub
enter
push
xor
jl
sbb
sub
sbb
and
fs
mov
mov
stc
pushf
sub
adc
fstps
pop
jns
scas
xorl
imul
insb
sub
mov
or
xchg
cmpsl
inc
inc
mov
in
mov
bound
and
loopne
inc
sarb
stos
cmp
mov
js
sbb
addb
mov
lahf
jecxz
add
loopne
and
mov
data16
cld
out
data16
cmp
imul
sahf
ja
mov
or
jae
pop
add
dec
scas
push
lods
inc
daa
daa
sub
pop
cmp
fdivrp
cltd
repz
ds
mulb
and
sbb
dec
mov
vmwrite
xor
xor
das
sbb
mov
xchg
filds
lcall
pop
not
xchg
scas
mov
push
sub
rcrb
ss
adc
in
inc
test
dec
fnstenv
and
imul
push
into
sarb
scas
movsl
out
cli
mov
imul
jg
nop
fs
cwtl
xchg
cwtl
aad
mov
and
cli
inc
in
push
bound
cmpsl
xchg
aad
inc
lret
push
fwait
mov
scas
repz
stos
push
sbb
jmp
mov
shlb
fwait
insl
mov
loope
inc
sar
pop
fwait
std
js
ret
movsl
pusha
mov
fs
add
mov
xchg
and
movsl
pusha
roll
jmp
setne
orl
fwait
inc
cli
daa
and
imul
push
sti
xchg
xchg
push
adc
das
imul
xor
push
aad
cmp
test
jae
push
insl
push
add
push
pop
pop
enter
leave
daa
jae
fistpll
js
sbb
shll
aad
fstps
testb
jecxz
and
inc
sbb
pop
out
mov
add
add
loop
cmpsl
addb
jnp
ret
cmpsw
dec
dec
lock
pop
cmp
mov
push
outsb
sbb
mov
mov
mov
adc
mov
mov
push
mov
lea
fldl
clc
sbb
jb
sbb
mov
sti
xchg
decl
pop
mov
add
hlt
out
fmuls
clc
xchg
sbb
push
xor
jbe
cmp
dec
jnp
mov
aas
sub
xor
out
lea
cmc
mov
add
inc
sub
pop
pop
cmp
add
mov
jo
addb
mov
ljmp
xchg
adc
jo
movsb
mov
mov
or
sub
imul
sub
xlat
mov
xchg
xor
clc
aam
sub
lret
adc
xor
sbb
or
punpcklwd
mov
or
jno
mov
mov
aam
aaa
pop
lds
pop
and
gs
adc
adc
push
or
inc
loop
mov
jno
cmp
test
xor
out
ljmp
cltd
inc
mov
sbb
cmp
xlat
fs
sahf
jnp
jmp
enter
stos
fcmovnbe
sub
outsb
mov
jp
stos
mov
cmpsb
cmp
dec
xor
mov
test
add
repz
in
jmp
cmp
cmpsb
cmp
jecxz
fcoms
repnz
fildl
mov
jns
mov
add
pop
cmpsb
mov
xchg
and
inc
inc
xor
in
add
and
xor
adc
cli
adc
aad
mov
in
std
in
arpl
mov
ret
movhps
push
xchg
pop
sub
loopne
lret
jnp
testb
shll
cmpsl
decb
push
and
icebp
sarl
xchg
lahf
andl
pop
sub
xor
mov
into
xchg
jb
fcmovnb
pop
mov
add
mov
mov
ds
inc
subl
ret
pop
inc
cmpsb
clc
fwait
test
addr16
lahf
push
loopne
scas
mov
xor
xchg
scas
insb
push
cmp
pop
ja
dec
mov
cltd
jno
stos
imul
hlt
or
fiaddl
push
addr16
aam
ffreep
cmc
xchg
aam
and
rcr
push
adc
aad
sbb
cs
fcoms
sbb
imul
jg
loopne
jmp
lods
xor
test
push
and
aas
fcoms
mov
lahf
xlat
add
cmpl
les
xor
mov
cmc
out
push
lock
mov
ficoml
cmp
and
push
mov
or
ss
stos
cmp
enter
dec
mov
loope
mul
sbb
push
sbb
cld
addr16
sbb
in
jbe
fistps
lock
imul
jle
jge
pop
inc
inc
push
fimuls
sub
xchg
leave
mov
lret
in
xor
into
push
ljmp
cmp
ret
mov
pop
str
fs
push
aas
test
inc
xchg
es
mov
idiv
sti
stos
sub
imul
orl
mov
hlt
fadds
dec
dec
cli
mov
push
fnstenv
outsb
sbb
or
push
and
adc
jg
push
inc
ljmp
sub
pop
and
sub
mov
add
nop
xchg
lahf
loope
lods
enter
and
sub
xchg
cltd
and
add
stos
in
stos
shl
data16
add
cmpsl
mov
or
inc
lods
push
mov
fsin
dec
and
mov
xor
fmul
loope
mov
ret
and
fdivs
lds
inc
xchg
gs
xchg
out
repz
loopne
cmp
inc
mov
adc
mov
sarl
loopne
cmovnp
in
or
loop
lea
xchg
mov
or
cwtl
sub
loop
dec
sbb
test
pop
jnp
adc
ror
and
nop
inc
or
je
sarl
dec
xor
arpl
insb
adc
call
jle
xor
xlat
lahf
cmp
mov
jo
stc
adc
dec
jecxz
gs
sub
fcmovnbe
out
fwait
sbb
jns
mov
mov
in
sti
adc
sbb
add
ret
lock
aaa
rcll
repnz
cmpsl
and
pop
loopne,pt
add
cmp
push
xchg
sbb
push
ljmp
mov
addb
dec
lods
xchg
ret
ss
into
inc
cwtl
mov
mov
outsl
mov
jnp
popf
dec
and
pop
dec
sub
xchg
mov
in
xor
lret
pop
ja
fistps
negl
call
sbb
lock
pusha
pusha
sahf
insl
call
mov
xchg
pop
jle
sbb
dec
dec
xor
push
mov
mov
out
push
and
enter
test
imul
fmul
xchg
stc
mov
add
insb
mov
cmp
iret
es
xor
xorb
mov
scas
mov
xchg
in
dec
imul
icebp
loope
xchg
mov
in
add
or
mov
scas
xor
ss
lds
push
push
sbb
add
adc
mov
test
push
fmull
test
test
or
js
mov
or
dec
add
xchg
mov
in
sub
test
out
mov
ror
jbe
aad
fildl
xor
cmpl
lret
je
mov
push
stos
cmp
test
sub
lods
jae
clc
aad
jno
add
adc
outsl
stc
inc
inc
xchg
jo
int3
fwait
out
lock
inc
int
jbe
pop
xor
mov
push
test
jae
jp
insl
cmpsb
fistpl
addr16
mov
ss
insb
movsl
enter
add
push
and
dec
cmp
add
dec
cld
aas
sub
repnz
shlb
push
faddl
jns
sub
mov
out
nop
ret
out
xor
mov
stos
adc
lods
aaa
les
roll
cmp
pop
jnp
imul
sub
shrl
ja
sarb
and
icebp
nop
jno
xor
jns
mov
sub
xor
cmp
push
mov
movsb
clc
adc
jnp
ss
js
add
xchg
xlat
outsb
dec
mov
loope
mov
repnz
push
pop
or
jecxz
jnp
and
xor
into
out
jo
rclb
adc
jae
aam
mov
dec
jnp
xchg
movsl
insl
mov
add
mov
jne
pop
lods
cld
lods
sbb
scas
and
jnp
stos
dec
and
rep
mov
jbe
mov
int3
sbb
push
sbb
pop
add
shrl
jnp
push
test
lods
out
mov
inc
ret
dec
adc
ret
adc
cwtl
push
pushf
mov
lret
xor
inc
and
cli
outsb
gs
fbstp
inc
aad
mov
outsl
fiadds
scas
cmpsb
adc
adc
xchg
xor
sbb
push
sbb
cmp
lods
jmp
dec
adc
jmp
dec
push
pushf
aas
cmp
push
adc
stc
cmp
jo
jg
sbb
mov
mov
jg
outsb
jg
jp
xchg
push
xchg
add
push
cmp
mov
icebp
decl
mov
inc
jecxz
outsl
popa
negb
sbb
dec
jmp
fldt
int3
dec
movsl
xchg
imul
inc
je
inc
pop
das
bnd
sbb
subl
popa
lahf
mov
dec
adc
sbb
push
cmp
loop
jmp
popf
cwtl
js
xor
imul
jl
pop
iret
insb
stc
movsb
ffree
in
cmp
mov
fisttpll
xchg
sbb
mov
fwait
or
fwait
push
mov
pop
inc
gs
xchg
arpl
mov
xor
adc
jmp
push
jl
mov
lods
loope,pt
roll
mov
sub
lret
push
xchg
sub
lds
in
aam
cmp
xchg
mov
adc
cmpsl
js
mov
in
mov
arpl
fidivrl
mov
jle
dec
xchg
aaa
out
mov
neg
stc
sub
shl
imul
adc
addl
scas
add
sub
push
fbstp
sti
or
pop
xor
movsb
jp
subl
fcmove
mov
mov
lds
loop
sbb
mov
dec
jae
sbbl
and
cli
call
pushf
repz
jb
or
pop
imul
mul
cmp
xchg
mov
ds
mov
std
mov
cmp
adc
pop
sub
jae
loope
push
mov
or
fisubl
xchg
sbb
inc
inc
lcall
fdivrs
mov
and
lret
popa
aam
popf
icebp
jo
pop
repnz
cs
scas
mov
inc
cmp
xchg
jg
jge
add
out
pop
fsubrs
in
inc
gs
into
aad
testl
iret
mov
pop
insb
jne
sbb
insb
insl
mov
adc
test
push
dec
loope
lahf
jns
sub
pop
ljmp
pushf
xor
push
xchg
cmpsl
inc
mov
mov
loope
inc
pop
add
inc
adc
adc
ds
xchg
in
xchg
mov
faddp
mov
sbb
xchg
mov
cli
lahf
das
insl
push
in
mov
scas
in
scas
adc
mov
sbb
sbb
jns
sbb
shrl
adc
pushf
mov
ljmp
mov
xchg
pop
lea
sahf
pop
push
stc
loope
fucomi
ret
pusha
aad
aaa
adc
shrb
sbb
or
pop
add
shlb
pop
mov
mov
inc
daa
outsb
lea
jle
mov
and
mov
test
and
push
cld
or
push
xchg
mov
sub
shlb
out
push
jg
loop
and
push
pop
out
xor
addr16
popa
sub
pop
movsl
sti
push
push
call
cmpsb
sbb
mov
dec
dec
sub
xchg
inc
addr16
xlat
fdivrl
ficompl
pop
jbe
sub
sub
in
and
stos
loopnew
pop
mov
add
mov
aad
les
inc
xchg
mov
arpl
and
loope
push
adc
sbb
mov
sbb
cwtl
and
cwtl
jnp
aas
ret
mov
in
inc
push
adc
mov
add
mov
lock
push
pop
sbb
sub
repz
jp
inc
data16
sub
jg
shrb
aad
mov
mov
xchg
push
push
xlat
pop
cli
popf
adc
pop
ja
loope
jns
data16
cmp
lock
shrb
or
rcll
dec
aam
in
mov
dec
push
in
xor
dec
fs
and
ja
adc
dec
outsl
imul
xor
jns
jb
inc
fidivrs
loop
shl
movsb
or
scas
loop
sub
mov
add
mov
pop
xchg
cs
sbbl
roll
bnd
pop
std
iret
jl
out
test
xor
mov
pop
insl
mov
ja
add
mov
mov
and
iret
push
out
nop
or
dec
es
ss
cli
fldt
inc
mov
aas
out
repnz
sub
test
dec
or
sub
and
movsl
mov
mov
xchg
mov
mov
dec
scas
sbb
inc
call
hlt
pop
xchg
or
add
lea
leave
jae
adc
enter
nop
xchg
sbb
xchg
lret
xchg
ret
xor
lcall
loopne
jns
mov
cmpsl
cmpsl
sahf
sti
mov
ss
test
pop
sbb
in
sub
fdiv
xor
fildl
imul
push
aas
mov
fbstp
jbe
jl
dec
in
xor
pop
pop
in
mov
cmpsl
jmp
cmp
adc
push
adc
gs
pusha
mov
pop
das
loope
jns
pop
aas
scas
lret
xchg
cmp
jns
push
into
in
mov
in
mov
pusha
jp
fnsave
pop
cmp
inc
addl
mov
dec
and
fs
dec
mov
mov
pop
popl
mov
mov
int
xchg
shll
push
das
pop
and
jno
lcall
adc
stos
mov
pop
int
mov
cli
aam
push
iret
call
adc
arpl
push
pop
mov
sbb
jecxz
dec
jne
into
sbb
test
push
adc
test
ljmp
inc
pop
int3
movsb
dec
js
loopne
jno
leave
bound
mov
or
es
or
dec
and
ret
pop
xrelease
rol
inc
mov
push
test
xchg
ret
mov
scas
int3
cld
sub
xor
testl
nop
add
xor
popf
popf
enter
jl
test
adc
stc
adc
push
xor
addb
cmpsl
xchg
loope
mov
mov
push
mov
mov
jecxz
sbb
int3
incl
inc
sbb
cli
shlb
jb
and
aam
push
add
inc
cli
jne
inc
pusha
aaa
cs
dec
insb
call
add
inc
repnz
push
mov
inc
mov
stos
jne
jmp
push
and
cmpsb
gs
cmp
pop
aaa
into
out
sarb
inc
mov
jecxz
out
or
inc
cmp
mov
incl
pop
xchg
xchg
cmp
pop
inc
xchg
out
sbb
mov
sbb
inc
js
jns
daa
mov
jne
jo
int3
int
pop
aaa
add
inc
fldl
and
rep
insb
xchg
icebp
cmp
inc
mov
or
jp
pop
adc
jl
inc
pop
hlt
jecxz
jbe
out
sbb
arpl
and
mov
push
inc
or
ss
cld
nop
push
cmp
in
fidivrl
adc
stc
mulb
inc
mov
divb
sub
insb
fwait
jmp
mov
nop
lods
cmpsb
and
ss
hlt
out
out
push
daa
pop
in
adc
movsb
add
out
int3
jb
add
imul
mov
xorl
scas
aaa
adc
icebp
sub
xchg
repnz
movsb
bound
sbb
clc
fiaddl
push
pop
mov
ljmp
test
cld
mov
shlb
cltd
shrl
cltd
stc
cmp
insb
lret
in
mov
push
pop
jno
jmp
or
aaa
clc
sub
jo
xchg
inc
xchg
dec
outsl
inc
outsb
sub
push
jecxz
in
or
outsb
mov
sbb
iret
sub
adc
push
adc
add
aaa
xor
xchg
xor
xchg
cmp
mov
adc
ficompl
cmp
cmp
fcomip
mov
xor
jo
pushf
mov
test
and
lds
leave
inc
dec
out
xor
pop
in
in
int
insl
xor
add
add
out
mov
fldcw
cmp
dec
xlat
add
xorb
pop
es
nop
pop
lock
add
out
out
leave
cmc
sbb
mov
jo
add
and
inc
mov
dec
out
and
fdivrp
inc
mov
adc
mov
or
mov
jno
lret
rcrb
mov
push
mov
xor
jge
or
dec
lock
inc
jb
pop
pop
int
push
mov
std
xchg
jp
fstpl
add
loope
or
push
xor
mov
arpl
xchg
inc
insb
add
push
xor
repz
jmp
push
xchg
test
lea
leave
mov
cwtl
xorb
fnstsw
xchg
in
fnstsw
pop
xor
lcall
sahf
jle
test
lcall
adc
call
sti
cwtl
mov
nop
insl
or
mov
aad
xor
jns
mov
dec
mov
ja
andl
add
cmp
jle
pushf
rorl
and
push
dec
fucomip
mov
pusha
add
mov
test
mov
sbb
ss
or
inc
xor
and
fistps
data16
repz
xor
sbb
rcrb
sbb
xchg
pop
aad
and
call
repz
push
sbb
in
sbb
push
dec
inc
sub
mov
les
movsb
pushf
sbb
es
sbb
mov
shlb
nop
shrb
fisttpll
add
mov
jb
mov
std
int3
sub
mov
loope
inc
cmp
pop
xor
sahf
inc
arpl
imul
addr16
mov
xchg
fs
push
mov
imul
idivl
xchg
and
pop
pop
clc
xor
inc
leave
cwtl
adc
cmp
jns
loopne
in
jle
push
xchg
insl
bound
lds
jecxz
out
push
test
xchg
loope
popa
shll
dec
xor
insb
mov
aaa
movsl
cmpsl
rorb
fstp
inc
jns
jg
push
dec
mov
pushfw
loope
and
sub
push
adc
and
dec
shl
cs
add
fstpt
pcmpgtw
pusha
hlt
pop
aad
sub
mov
mov
adc
jnp
or
inc
jno
mov
sub
test
fisttpll
xor
dec
fldcw
cmpsb
jb
adc
add
ror
lods
or
mov
push
testb
pop
dec
ret
dec
xchg
mov
iret
mov
xor
clc
xchg
and
daa
loope
add
add
pop
inc
clc
leave
mov
jo
hlt
mov
test
add
mov
push
bound
insl
std
or
insl
int3
rcll
rcr
aam
leave
xor
stos
test
in
pop
into
outsb
vcvtps2dq
sub
adc
or
lock
les
or
testb
loope
add
sbb
movb
or
xchg
dec
loope
popf
mov
mov
movsl
mov
mov
inc
xor
pop
adc
popa
mov
in
cmpsl
aas
imul
sbb
jg
pushl
jle
lods
jge
jns
inc
sbbl
mov
jg
add
cmp
xor
dec
mov
divb
adc
stos
testl
push
aam
inc
das
xchg
adc
pop
mov
mov
xor
faddp
cmpsl
pop
xor
add
pop
xor
hlt
ror
lock
jmp
call
push
in
nop
insb
in
nop
cwtl
pop
fwait
lret
movsb
fs
push
dec
adc
xor
pop
std
pop
out
rolb
pusha
rorb
rep
lcall
pop
add
push
leave
int
in
jmp
aas
outsl
push
into
dec
or
sbb
aas
ss
lods
push
aam
scas
dec
pop
sub
aas
iret
mov
cmp
add
mov
sbb
cs
rclb
movsl
and
pop
and
bound
pop
and
jge
test
add
sbb
orl
push
pop
sub
jecxz
jmp
outsb
cwtl
incl
inc
es
icebp
popf
adc
pop
jb
int3
inc
jo
dec
insl
adc
or
push
imul
jl
cmp
mov
sbb
in
je
sub
mov
test
jl
xor
sbb
fists
push
imul
add
adc
inc
jbe
adc
mov
inc
cmc
add
aas
jns
pop
push
mov
xchg
scas
jecxz
call
cld
dec
popa
in
idivl
sub
lds
or
rorb
clc
inc
rolb
pushf
adc
es
pop
xor
les
rorl
test
imul
sbb
lods
mov
jp
sbb
loop
and
sub
sbb
sub
sti
jge
mov
hlt
adc
jae
divb
cmp
push
jno
and
inc
dec
or
jnp
out
jmp
cs
aas
mov
mov
outsb
cmp
sub
and
aaa
nop
ud0
dec
cmp
stc
and
ds
insb
xchg
add
pusha
lea
dec
repnz
and
push
loopne
sbb
jns
push
test
sbb
call
xor
imul
jmp
jl
mov
inc
lret
xchg
sbb
fisubl
mov
xor
pop
dec
adc
mov
rep
popf
add
popf
push
dec
or
imul
aad
push
pop
lea
cli
mov
mov
inc
mov
dec
sti
xchg
fsubl
outsb
sub
sub
pop
adc
scas
in
out
mov
shll
out
mov
call
push
mov
std
add
pop
mov
or
ret
mov
or
repnz
repnz
loop
pushf
imulb
scas
insb
mov
shlb
insb
cmp
mov
mov
mulb
imul
mov
jle
addb
repnz
mov
mov
js
cmc
push
pop
mov
sbb
xchg
ja
sub
sub
orb
mov
or
loop
repnz
movsl
lods
mov
dec
cld
out
sub
dec
mov
and
jnp
mov
and
jle
out
adc
mov
dec
push
sbb
icebp
and
lret
sbb
xor
jae
adc
addl
push
enter
sbb
dec
inc
scas
shrb
or
testb
cs
jae
hlt
add
rclb
cmp
popl
push
adc
adc
mov
xchg
stos
int3
and
sbb
push
mov
ret
or
xchg
adc
xor
cli
xor
adc
adc
sbb
xorb
cld
sub
or
xor
ljmp
xlat
inc
jmp
mov
cs
inc
cmp
rol
mov
cmp
movsb
mov
das
sbb
jno
pusha
sar
std
inc
adc
sti
sarb
add
mov
hlt
fldenv
dec
dec
add
ljmp
pushf
out
push
or
out
lds
enter
mov
and
pop
or
in
test
mov
loope
mov
loopne
mov
lods
jl
and
jno
out
and
xor
push
dec
cmp
div
add
stc
dec
jecxz
in
andb
sbb
sub
sub
sub
fs
or
dec
repz
push
sbb
jae
push
insl
dec
push
idiv
dec
xchg
jb
sti
or
and
cli
mov
dec
pusha
daa
fcomip
push
xlat
leave
xchg
adc
test
sbb
pop
and
mov
push
pop
fldcw
lcall
call
push
dec
xchg
in
xchg
in
or
or
xor
jno
xor
mov
mov
rorl
lret
xor
mov
cmp
mov
mov
cwtl
fisubs
es
out
ds
cmc
push
rcr
dec
push
mov
adc
add
add
test
inc
fs
dec
or
jle
int
cmc
add
inc
xchg
lock
jge
rcrl
test
nop
out
mov
test
cmp
stc
push
icebp
push
mov
pop
push
ret
xchg
inc
inc
test
inc
mov
dec
stos
xchg
xor
xchg
mov
fs
sahf
mov
jg
inc
xor
imul
fs
or
sub
jns
mov
add
mov
xchg
data16
cmpsl
clc
dec
dec
repz
dec
add
fstl
pushf
fwait
pop
popf
test
mov
jge
jb
movsl
sar
inc
mov
xor
mov
xor
mov
iret
out
sub
xchg
cmpsb
cmpsl
push
cmp
insb
cmp
fcoml
fiadds
cmp
push
mov
push
push
adc
out
cld
cltd
mov
mov
movsb
call
lea
sbb
mov
jmp
movsl
nop
jnp
test
sbb
hlt
inc
test
mov
sbb
and
pop
push
in
fdivr
cli
fucom
aad
jb
mov
xchg
sbb
shr
lret
fs
xchg
dec
add
xchg
ret
or
xor
xchg
fs
adc
fmull
xchg
lret
ss
sbb
shll
add
insl
or
jb
or
inc
out
pop
in
mov
pop
fcmovnbe
mov
cmp
inc
cmp
sbb
lock
add
push
aaa
push
imul
mov
mov
jp
outsb
mov
sub
fbld
adc
test
iret
mov
cmp
mov
adc
inc
or
xor
int
insb
aam
mov
aad
xchg
das
frstor
pop
fisubl
sbb
aam
jle
daa
sub
scas
mov
fucomip
stos
add
pop
sbb
and
adc
push
shrb
mov
push
push
adc
pop
fiaddl
xchg
out
mov
stos
pushf
mov
ja
imul
js
mov
sbb
fdivrl
lret
or
jmp
adc
or
out
mov
decb
pop
fldcw
sub
in
lds
xor
int
int
addl
mov
sbb
mov
test
adc
mov
gs
xchg
mov
push
aam
cmpsl
lea
cmp
js
push
adc
fsubl
push
scas
sub
fcompl
popa
sbb
push
mov
push
test
lods
fsubrs
aam
leave
test
bound
mov
stos
jne
jns
sbb
das
aaa
cmp
jecxz
pop
xchg
push
jge
mov
adc
mov
lahf
sbb
xor
fmulp
jno
and
fldl
pop
cmpb
ss
dec
jge
adc
std
addr16
push
shll
inc
dec
add
push
dec
push
xor
push
jne
out
std
mov
orb
aam
je
shrl
jbe
mov
into
ss
aam
cwtl
or
inc
inc
push
hlt
inc
lods
inc
aas
mov
xchg
xchg
push
push
pop
loopne
daa
test
in
jecxz
fcomip
or
gs
cwtl
std
adc
cmp
xor
ljmp
pop
sbb
pop
lock
repz
sub
fwait
stc
jae
mov
outsl
movsl
popf
scas
scas
add
imul
adc
jg
outsl
not
xadd
sbb
add
mov
xorb
xchg
fidivs
repnz
cmp
sub
loope
xor
jmp
jecxz
jle
xchg
inc
jno
jge
xchg
lea
sub
fsubs
mov
lods
push
mov
out
mov
daa
test
movb
frstor
add
outsb
xchg
mov
inc
test
cmp
sbb
xchg
push
sub
out
ds
sahf
cmp
adc
inc
sbb
jmp
push
pop
inc
cmc
sti
mov
sbbl
cmp
sbb
mov
jo
in
fcomip
pop
xlat
mov
pop
push
inc
outsl
aad
inc
int
stc
jecxz
iret
test
popa
jge
fwait
outsl
rcll
shlb
push
leave
leave
cmpl
mov
and
scas
inc
loopne
or
scas
dec
out
paddb
fcmovnu
aam
pop
mov
mov
jbe
addr16
lret
xchg
inc
aam
xchg
inc
stc
jnp
fsubr
outsl
adc
sub
sbb
xor
call
mov
mov
push
leave
inc
aam
dec
mov
faddl
jl
xor
iret
fs
push
test
arpl
mov
jp
or
mov
xor
mov
bound
stos
jmp
pop
in
lret
popf
jl
cwtl
pop
xchg
mov
push
jg
pop
jge
in
stos
hlt
out
lret
pop
movsb
add
inc
aad
lock
es
add
adc
sbb
sub
fidivrl
adc
fisttpll
into
imul
mov
xchg
sti
icebp
lock
push
loope
call
dec
je
mov
dec
add
adc
add
mov
scas
mov
fdivrs
xor
movsb
lods
sbb
test
or
aaa
xor
mov
lret
jne
jge
cmp
xchg
je
mov
xor
pop
adc
xor
inc
call
leave
mov
cmc
outsb
sub
pop
xchg
insl
xor
test
xor
aad
scas
das
pop
mov
daa
rcll
push
mov
sbb
mov
in
jge
rcl
push
pop
cmpsl
in
test
and
sbb
dec
adc
xor
mov
mov
inc
mov
push
sti
stos
cmpl
cld
lret
sbb
xchg
lret
stc
and
outsb
cwtl
xchg
stos
inc
and
aaa
cmc
or
insb
aam
in
mov
or
dec
or
inc
in
cmp
call
add
jmp
inc
gs
or
jae
pop
dec
add
mov
pop
xor
in
push
sub
test
daa
cmp
fnstenv
pop
lock
ds
int
cmp
pop
mov
push
out
dec
test
mov
in
dec
or
mov
jo
and
add
or
mov
fildl
lcall
jge
rcrl
icebp
into
cmp
std
dec
ss
mov
cmp
sub
imul
mov
in
push
pusha
out
xor
loopne
pop
sti
movsb
fists
test
cmpsb
sbb
subb
adc
pushf
rol
lret
push
insb
cld
pop
cmpsb
testb
mov
cwtl
xchg
inc
popa
and
pop
in
or
out
popa
inc
loopne
nop
in
and
lcall
mov
sbb
daa
icebp
cmp
sub
pop
mov
call
test
sbb
fsubrl
je
rcl
inc
adc
jnp
aad
rorl
jo
insb
lahf
popf
pop
mov
push
ds
lcall
dec
and
push
xchg
and
sarb
and
adc
mov
roll
inc
aaa
jmp
push
inc
push
idivl
into
adc
gs
idivb
int3
movsl
comiss
movb
push
push
or
gs
inc
int3
cltd
ljmp
pop
mov
xchg
lods
sub
xchg
cltd
jo
test
nop
loope
lds
add
sbb
pop
adc
les
lds
jns
mov
push
negl
subb
sub
xor
jp
fdivs
inc
stos
leave
ss
bnd
cltd
ss
in
sahf
pop
stc
ja
push
jnp
or
imul
jno
daa
outsl
xchg
mov
je
xor
cmp
mov
pop
push
jmp
in
inc
cmp
in
hlt
shrl
xor
decl
ljmp
jge
mov
dec
jnp
movsl
lret
aam
aas
xchg
pop
pusha
xchg
fsubl
mov
push
shll
nop
push
cli
sub
out
pop
lret
mov
cmpsb
popf
adc
cmpsb
pop
mov
dec
shl
pop
xchg
add
gs
arpl
add
subb
aad
and
js
jne
sti
pop
and
mov
insb
jp
pop
rolb
les
jns
out
inc
nop
mov
test
shll
iret
and
or
test
xor
push
cmp
dec
cltd
pop
mov
mov
mov
jl
jmp
out
xor
mov
push
mov
push
dec
addl
sub
lahf
cltd
xchg
mov
lock
xchg
negl
ret
inc
ja
jae
scas
stos
adc
sub
adc
xchg
jle
cmp
mov
scas
xchg
andl
sub
outsl
dec
je
popa
stos
adc
mov
mov
sbb
movsl
insb
adc
sbb
and
push
add
leave
jnp
fadds
je
clc
jb
imul
mov
mov
xchg
jne
jnp
imul
sbb
dec
es
inc
dec
inc
lcall
pop
cmpsb
mov
dec
test
divb
jne
jne
mov
fdivp
rcl
xchg
push
cmpsl
fsts
lret
iret
repnz
test
sbb
jl
sub
rcr
int
andb
ret
mov
cli
adc
mov
popf
icebp
aad
dec
sti
push
mov
dec
pusha
lea
pusha
cs
push
mov
cmp
push
push
mov
cmp
or
inc
shrb
dec
dec
sahf
xchg
sbb
test
loope
ror
jge
loop
or
fwait
daa
and
mov
icebp
sbbl
dec
pop
and
in
out
push
mov
mov
nop
popa
mov
push
pop
pop
movsb
mov
push
outsl
cmp
jmp
lahf
xlat
std
iret
out
xchg
popa
pop
and
xchg
loop
jo
pusha
dec
inc
fwait
mov
in
repnz
outsb
jl
mov
pop
inc
repz
mov
shll
mov
loop
push
scas
or
enter
and
into
pop
fmulp
sbb
cltd
jbe
aaa
fidivs
or
xchg
cmp
shl
pop
loop
sbb
fwait
mov
inc
mov
mov
dec
push
and
pop
fiadds
jmp
inc
inc
sub
in
add
aaa
ds
in
and
push
sbb
clc
pop
adc
cmc
imulb
fwait
mov
aaa
shrb
mov
jecxz
xchg
test
push
call
pop
popl
bound
out
leave
mov
ljmp
jl
or
adc
fsubrp
cmpsb
lea
pop
push
popf
sbb
pop
scas
xchg
jmp
out
xchg
and
test
and
xchg
push
ret
push
insl
ss
leave
mov
push
lret
aaa
je
sahf
mov
test
rcrl
mov
fcomi
inc
sub
adc
push
imul
xchg
jne
adc
xchg
shlb
aas
xchg
lea
lds
push
popf
int
pop
pop
test
jns
push
pop
mov
jbe
decl
pop
cli
rcl
subb
push
mov
push
dec
stc
icebp
add
icebp
add
xor
bound
dec
sub
dec
ss
dec
adc
aad
das
or
adc
popa
cmp
ljmp
mov
xor
daa
adc
sbb
sbb
add
les
es
cmp
or
pop
mov
dec
pop
mov
aas
popf
xchg
cmp
lret
dec
ja
push
add
mov
dec
pop
and
or
ret
inc
and
sbb
inc
loop
cmpsl
lock
sbb
stos
cmp
ja
push
lea
outsl
sbb
fdivp
push
imul
sub
jmp
add
lds
scas
in
nop
lods
loopne
filds
xor
pushf
sub
jp
dec
pop
sbb
cmc
nop
outsl
add
sahf
int3
into
mov
jne
ljmpw
jne
shrl
sub
lock
xchg
nop
push
pop
xchg
repz
mov
cld
xchg
fidivrl
cli
dec
and
dec
sahf
and
popa
mov
les
rorb
enter
std
repnz
mov
mov
js
push
and
movb
into
mov
mov
loopne
bound
jnp
test
cld
inc
sarb
xchg
jl
enter
shlb
and
outsb
dec
push
or
jns
dec
inc
fnsave
hlt
dec
jno
mov
adc
repz
gs
rorl
popa
add
push
inc
fs
push
pop
adc
mov
pop
add
lcall
push
push
and
insb
stos
push
pop
and
clc
cli
insl
lret
ss
xchg
cmp
out
js
ss
mov
dec
jle
decb
test
test
dec
arpl
mov
repnz
push
xchg
fnstsw
mov
enter
lcall
pop
xor
xor
cld
test
add
cmp
mov
or
push
adc
loope
imul
mov
add
mov
inc
test
jbe
repz
cli
sarl
in
imul
insb
push
push
or
mov
xor
push
sbb
jl
cmp
cmp
xchg
push
loopne,pn
jl
imul
xor
insb
out
out
leave
lea
jle
ret
out
xor
js
stos
ret
ret
repnz
add
movsb
xchg
xchg
inc
nop
mov
cwtl
and
out
ret
nop
jge
adc
xchg
mov
imul
mov
sub
mov
xchg
and
sbb
inc
js
dec
aad
push
fdivrl
mov
in
inc
test
mov
cmp
cltd
adc
ds
jbe
xor
lahf
pop
popf
int
fwait
pop
je
into
mov
add
test
fisttpll
maskmovq
mull
jnp
ss
push
mov
popa
xchg
cmp
out
jge
fs
jp
jle
fidivl
sarb
pop
push
lods
jg
pop
stos
jnp
out
push
clc
loope
xchg
std
sti
int3
jae
xor
out
aam
ljmp
insb
scas
or
cltd
cli
dec
aaa
push
pop
ffree
xchg
pop
xchg
cmp
jle
jg
repnz
push
int
adc
stos
jge
repnz
cli
iret
xchg
rcrl
negb
and
movsl
mov
mov
pop
fstps
subl
shrb
mov
mov
dec
rcrb
cmp
mov
sti
mov
lods
mov
cmp
shll
inc
or
mov
clc
push
aaa
aam
push
or
xchg
push
inc
mov
dec
and
int3
repz
xchg
jo
add
pop
fstl
out
aam
fs
sbb
mov
mov
in
out
gs
xorb
mov
outsb
outsl
jmp
rcll
or
repz
push
addl
stc
cmp
and
push
cmp
adc
enter
cs
int
mov
aad
loope
aad
xor
pop
mov
popf
mov
aaa
stc
lret
ret
xor
xor
push
cmpsl
adc
jmp
inc
int
inc
sbb
test
adcl
lods
cmpsb
loope
popf
jle
dec
cmp
push
mov
inc
xor
lret
pushf
loope
mov
out
jne
fcmove
cmp
pop
sub
in
mov
ret
and
pop
loop
mov
mov
outsl
xor
nop
jmp
jecxz
dec
ljmp
popa
push
or
push
fcoml
push
test
outsb
out
lods
cmp
gs
sub
inc
and
mov
sahf
in
lods
pop
push
call
scas
push
lret
add
jle
push
jmp
daa
mov
repz
xchg
out
lret
inc
movsb
mov
adc
out
xchg
adc
or
iret
fwait
clc
adc
pop
sub
and
mov
popf
in
adc
push
sti
hlt
pop
cmp
cs
dec
sbb
xor
fbld
aaa
mov
cmp
inc
fcoml
xor
test
js
in
jns
in
push
push
push
xor
xor
cs
jmp
push
pop
js
loop
sbb
jle
or
lahf
cmc
subb
lahf
pusha
add
jge
cld
adc
jbe
addr16
leave
cmp
mov
and
clc
jb
sub
xchg
addr16
push
orb
mull
cmp
mov
lods
ret
lods
adc
and
test
fimull
push
das
xchg
fcomip
shrl
push
adc
popa
lcall
icebp
jnp
mov
pop
xchg
xchg
or
das
xchg
and
pop
sub
jmp
pop
popl
int3
int
add
stc
sub
repnz
xor
pop
loope
or
fists
divl
es
sbb
or
and
sarb
push
xor
jb
xchg
rclb
sahf
mov
push
clc
fnstcw
or
or
push
xlat
push
cmp
sbb
test
stc
dec
fnsave
fcomps
jne
mov
sarb
mov
and
arpl
fucom
out
mov
scas
dec
cwtl
out
xchg
and
daa
inc
call
icebp
lcall
and
cld
je
mov
pop
int
add
jecxz
or
pop
lea
adcb
fucomip
push
outsl
mov
pusha
out
dec
mov
push
lock
scas
cltd
sti
rcrb
jmp
adc
dec
out
push
cmp
stos
add
xchg
fidivs
jg
adc
sbb
ds
mov
xchg
add
mov
into
mov
pop
mov
into
std
cmpsl
cmp
cwtl
pop
out
repnz
fimuls
sbb
jns
jbe
addr16
scas
jns
fildll
test
in
test
add
scas
insl
test
outsb
jmp
std
add
sub
sub
cmp
enter
push
es
pop
fisubs
jbe
rcl
adc
cmp
ss
insb
stos
iret
and
xchg
push
mov
int
fwait
push
mov
push
ja
pop
adc
ss
std
inc
je
adc
lret
inc
xor
cwtl
lahf
jb
mov
jo
pop
xchg
and
insl
xchg
imul
cmp
data16
jle
pop
leave
push
cmp
mov
pop
xor
push
mov
dec
popf
jnp
movsb
xchg
nop
bound
adc
sub
imul
mov
lret
adc
out
das
gs
add
popf
iret
mov
aad
pop
xor
push
jle
inc
ds
pop
popf
dec
int3
test
cmovb
pop
adc
orl
jmp
push
lahf
repz
aam
push
jae
jnp
fistl
adc
inc
fstpl
mov
adc
sub
pushf
add
push
lea
mov
or
clc
andb
push
test
inc
push
pop
push
rorb
fiaddl
mov
pop
and
jmp
mov
clc
out
ds
in
stos
jnp
in
andb
aaa
jmp
rorl
mov
sub
xlat
mov
repnz
cltd
test
pop
imul
loope
cld
data16
arpl
add
cmp
cmp
je
testl
sbb
fisttpll
imul
out
movsb
rcrl
addr16
dec
xor
aas
insb
fadd
imul
add
aas
fwait
push
add
xor
pusha
inc
mov
sub
mov
push
dec
and
jbe
outsb
insl
sub
and
xor
bound
or
inc
fwait
pusha
jns
mov
mov
or
sti
push
mov
bound
mov
rcr
outsl
ja
les
fidivl
mov
mov
jne
call
mov
push
sub
scas
in
mov
sahf
lcall
cwtl
leave
bound
rcll
jmp
popa
xlat
sbb
inc
dec
shrb
push
pop
int3
inc
xchg
pop
mov
imul
pop
mov
push
sub
loop
and
arpl
jl
shrl
testl
and
dec
in
ja
adc
xlat
add
fdivrl
or
push
stos
inc
aam
loope
mov
xor
mov
mov
fsubrl
insl
sti
jno
fs
sub
jp
cmp
inc
pop
scas
inc
dec
fdivs
fldcw
cmpsb
cmp
mov
outsb
and
push
hlt
sub
loope
clc
lcall
icebp
inc
dec
cli
out
push
sub
mov
mov
nop
aas
xor
fcoml
mov
jmp
mov
dec
push
mov
iret
or
rorb
sub
insb
outsb
es
push
cli
scas
inc
pop
les
into
inc
push
jmp
cmpl
mov
push
jno
jmp
xor
lock
clc
mov
inc
dec
and
jge
ud1
mov
add
inc
cmp
xchg
cmp
inc
cli
and
sbb
movsl
push
jns
dec
sahf
iret
mov
or
push
jmp
jbe
icebp
movsl
push
xchg
scas
mov
divl
insb
daa
lcall
outsb
jmp
cli
push
xorb
sbb
pop
xchg
stos
mov
sbb
or
jecxz
movsb
pop
int
or
lahf
push
pop
pop
shll
and
arpl
fdivl
insb
call
aad
or
in
and
xchg
cmpsb
ret
pop
imul
clts
lds
mov
leave
xchg
fcoml
adc
dec
pop
gs
fsubr
push
test
jle
mov
popf
add
cwtl
mov
cld
add
int3
scas
stc
xchg
mov
fs
fwait
mov
test
test
scas
add
sbb
lret
xchg
cmpl
repnz
dec
pushf
addw
or
out
push
mov
push
inc
mov
inc
clc
fimuls
iret
jno
xlat
or
movsb
push
mov
repnz
or
or
inc
hlt
dec
les
adc
lods
pop
pusha
shrb
popf
lods
and
ljmp
loope
mov
jl
negb
and
sti
lret
pop
popf
gs
test
add
adcl
mov
ljmp
mov
aam
fsubp
mov
adc
movl
test
inc
jle
fxch
xchg
jb
inc
xchg
pop
push
cmpsb
and
repz
adc
jb
mov
sub
sbb
fnstcw
clc
mov
enter
icebp
out
cld
inc
dec
test
inc
pop
inc
xor
mov
repz
sbb
xor
jp
push
mov
add
adc
push
adc
dec
scas
dec
and
or
xlat
xor
rolb
lea
inc
lods
push
out
js
push
jbe
inc
pusha
sbb
out
js
imul
lock
mov
out
aad
jns
push
mov
stos
je
int3
adc
mov
push
jns
loop
ret
push
xchg
in
adc
mov
push
in
jecxz
out
xchg
and
pop
outsb
mov
fisttpll
sti
push
adc
jle
push
incl
ja
adc
xchg
push
shl
mov
pop
fcoml
mov
pop
loope
lds
clc
cmp
adc
out
jae
pop
insb
lcall
lock
in
lods
mov
lret
and
imul
mov
mov
sbb
xchg
sub
sbb
lcall
xor
test
jmp
cmp
adc
aas
ffree
push
adc
cmpsl
pop
roll
pop
mov
adc
test
mov
lea
mov
adc
push
stos
add
xchg
xchg
xchg
inc
jle
push
jae
lea
repz
jmp
mov
xchg
or
jecxz
aas
loopnew
insb
jno
insl
xlat
pop
cltd
outsl
push
xchg
mov
pop
dec
dec
dec
cltd
incb
repz
rcl
mov
jp
pop
push
pop
and
push
scas
add
or
jg
stc
inc
sbb
ret
repz
adc
test
punpckhwd
mov
aaa
stc
popf
scas
pop
adc
test
fisubl
mov
xor
aaa
fstpl
call
repnz
dec
out
std
xor
or
xchg
jnp
test
stos
or
cmp
addr16
shl
orl
lahf
inc
test
fwait
outsl
mov
adc
sbb
and
adc
shll
js
gs
sahf
mov
xchg
rcrb
test
cmp
cmpsb
aad
cli
jg
hlt
dec
mov
push
outsb
std
xlat
mov
fidivrs
inc
leave
cmp
mov
fstpl
cmpsl
jmp
sbb
repz
xchg
xchg
mov
push
insb
add
push
mov
pusha
mov
aas
jp
add
dec
inc
or
add
lret
inc
ja
sbb
mov
jb
mov
cmc
adc
add
jns
sub
js
pop
arpl
pop
ret
dec
or
push
pop
dec
and
out
add
mov
fisubrl
stc
mov
cld
mov
scas
pop
imul
sarl
lcall
icebp
pop
sbb
inc
jecxz
push
sub
stc
ret
iret
test
jbe
jno
sbb
and
icebp
divb
pop
aas
mov
jg
dec
pop
push
loopne
or
notl
xchg
insl
fisubl
daa
cmpsl
pop
stos
dec
push
xor
movsl
pop
movsl
dec
fs
pop
ret
mov
dec
dec
sub
pop
ljmp
jne
in
sar
test
setnp
mov
lret
inc
ret
inc
data16
pop
ljmp
fmull
pop
out
pop
push
add
shrb
ds
into
loopne
stos
cmpsb
xlat
loopne
mov
mov
and
rcll
adc
imul
mov
and
pusha
inc
imul
fistps
fildll
and
cmp
outsb
pop
inc
inc
fs
and
dec
movsb
leave
rolb
fnstcw
jnp
test
dec
cmpl
cmc
xchg
lret
fildll
jb
push
pop
mov
and
xchg
adc
jg
orb
cmp
outsl
xchg
mov
inc
fcmove
and
mov
cmp
push
mov
xor
pushf
add
scas
mov
pop
push
popf
das
rorb
jp
or
cmc
pop
mov
bound
mov
mov
jl
rcrb
sub
pop
inc
int3
add
push
out
sbb
imulb
insl
insb
or
popf
mov
leave
mov
lahf
fsubl
mov
cmpsl
jle
enter
xlat
enter
sbb
addl
push
int3
fldt
mov
scas
jo
mov
cld
sbbl
sbb
sti
out
insb
cmpsb
movsb
mov
sub
out
push
mov
sbb
popf
fwait
bound
mov
push
pop
hlt
pushf
sub
cmp
stos
jbe
mov
daa
jb
pop
lcall
sub
call
mov
jne
adc
adc
lahf
xchg
dec
cmp
sahf
orb
leave
stc
xchg
addr16
xchg
push
notl
xchg
call
mov
jns
orl
test
mov
cld
stos
gs
sbb
add
pop
shrl
pop
test
mov
sbbl
push
vmread
xor
scas
sbb
xor
rcrl
sub
je
sub
test
mov
fdivrs
loope
push
mov
les
xor
decl
bound
shll
mov
pop
rcr
fxch
xchg
nop
dec
mov
ss
jl
jmp
mov
xlat
cmp
sti
mov
and
in
mov
xchg
xchg
jmp
pop
mov
mov
xchg
jecxz
cmp
jno
cmp
dec
adc
scas
mov
adc
cmpsl
cmpsl
inc
xor
cltd
out
xor
rorl
addr16
shl
or
clc
adc
jbe
adc
mov
jns
jle
jl
or
push
lock
mov
out
ljmp
pop
aad
lds
adc
cli
cltd
cltd
sub
adc
in
stos
mov
les
hlt
dec
add
inc
hlt
out
outsb
mov
mov
jmp
xchg
jnp
lret
lods
dec
scas
sub
outsl
cs
push
scas
sub
push
xor
ret
clc
mov
dec
sub
sbb
iret
sahf
push
ss
sbb
push
outsl
mov
sahf
outsb
inc
stos
imul
fcomps
adcl
mov
jno
mov
mov
sbb
out
jns
lret
in
scas
push
iret
scas
rcrb
out
sti
jbe
pop
scas
addl
mull
push
and
shlb
divb
push
dec
xor
loope
sbb
cmp
and
shl
add
mov
lret
xchg
add
lods
out
mov
push
repnz
das
ja
enter
jbe
call
mov
xchg
pop
xor
aad
xchg
mov
and
fcoml
cli
adc
dec
pop
das
mov
fsubrs
jb
jb
mov
push
or
flds
das
fdivp
pushf
out
scas
push
movsl
pop
jo
out
inc
jbe
inc
iret
pop
arpl
mov
and
pop
xor
les
in
in
arpl
lea
inc
call
bound
or
loope
mov
xor
icebp
xchg
fnstenv
fldl
addr16
cmc
sbb
or
and
popl
int
lock
push
or
jecxz
loope
les
push
pusha
outsl
pushf
add
aas
mov
adc
mov
cmc
stc
pop
lds
mov
mov
mov
popa
cmp
pop
sub
xchg
mov
pop
lcall
sbb
inc
ret
scas
mov
add
xor
aam
xchg
sub
enter
sub
inc
push
sbb
repz
pop
imul
movsb
outsl
andb
hlt
push
sbb
aam
push
lret
jle
pop
jbe
pop
and
pop
mov
loop
es
iret
cli
mov
iret
ret
cmc
rcr
push
mov
shl
out
push
inc
cmp
dec
dec
clc
repz
hlt
mov
or
mov
fidivs
insl
out
je
fnstenv
and
jnp
pop
adc
ja
xchg
jg
mov
rolb
clc
add
inc
enter
rcrl
in
mov
push
dec
adc
mov
jge
clc
movsl
or
iret
jmp
push
cltd
ds
nop
mov
or
mov
push
xchg
sbb
sub
xchg
cmc
cld
fsubrl
stos
sbb
pop
xor
xchg
adc
pop
pop
clc
and
int3
pop
cmp
sub
jmp
out
mov
shrl
cwtl
fldcw
jg
stos
cmp
mov
jecxz
sub
cltd
insb
push
in
roll
lods
cmp
out
jmp
cli
popa
lret
add
fidivrl
cmp
add
in
inc
add
stos
imul
and
mov
mov
ja
test
fwait
push
fs
jb
sbb
push
add
jo
mov
cld
push
push
pop
clc
push
fcompl
das
mov
cld
jnp
mov
inc
js
pop
sbb
sub
pop
scas
in
cs
paddw
stos
xchg
adc
mov
sub
dec
jecxz
popf
es
sub
mov
out
pcmpeqw
adc
shlb
xchg
adcl
not
insl
or
cmp
int3
test
outsb
push
mov
jmp
sub
sub
cmp
scas
pop
movsb
sub
mov
mov
mov
ss
dec
jbe
xchg
fucomp
rcl
out
ss
mov
lods
call
mov
in
lods
cmpsb
dec
mov
ja
insb
das
int3
rcll
repz
xlat
inc
xchg
pop
decl
test
jnp
sbb
mov
jmp
das
jo
pop
bound
insb
add
ret
orb
pushf
add
dec
std
imul
xor
std
add
les
add
pop
es
push
ret
inc
or
arpl
test
je
ret
sub
jne
loop
out
into
sbb
mov
icebp
and
pop
int3
dec
movl
and
cmp
cmp
daa
daa
jae
jle
xor
mov
adc
xchg
mov
aas
jb
hlt
pop
rorb
sarl
sbb
jle
iret
aam
mov
enter
arpl
aam
mov
mov
idivb
fistl
scas
add
cs
je
outsl
arpl
pop
mov
jno
or
sub
xchg
or
cmp
out
test
push
imul
cmpsb
or
sbbl
push
dec
sti
fmull
sub
rorb
mov
leave
inc
add
mov
test
jl
xor
mov
cmp
shlb
push
dec
movsl
jae
sbb
mov
jne
outsl
cwtl
icebp
mov
push
inc
fstl
or
mov
dec
push
mov
ret
sbb
inc
xor
push
nop
lcall
imul
cld
cmp
ret
lods
movsl
mov
push
lea
inc
jg
xchg
andb
dec
mov
out
xchg
loopne
adc
mull
into
cli
test
adc
mov
ret
aas
xchg
sub
lcall
and
test
test
and
out
shrl
ret
lret
pop
mov
ret
dec
sbb
lret
mov
ret
pop
shl
fwait
inc
leave
rcrw
js
fadds
add
pushf
jne
mov
stos
js
inc
fwait
pmaxub
loopne
insl
imul
adc
cmp
xchg
jnp
inc
or
movb
push
fiadds
mov
pushf
mov
f2xm1
dec
bnd
or
or
aaa
repz
xchg
pop
xor
cmp
mov
rcll
add
sbb
rcll
add
inc
roll
into
out
in
xchg
mov
mov
mov
adc
xchg
rorb
aas
jno
popa
jmp
in
sbb
lret
fistps
or
jle
and
xor
fistl
hlt
xorl
xor
mov
fcoml
mov
mov
adc
add
cmpsb
fidivl
in
jp
addl
sub
mov
popa
or
out
rorl
xor
pusha
add
push
cwtl
xor
test
dec
cmpsl
jmp
repnz
mov
pop
scas
push
es
adc
dec
or
mov
pop
js
add
add
push
cwtl
icebp
xchg
push
mov
jbe
xlat
sti
dec
sub
enter
test
test
aas
jns
cwtl
push
push
mov
push
mov
lock
sbb
pop
loope
imul
inc
inc
pusha
push
jecxz
test
mov
sbb
sbb
mov
mov
lods
dec
mov
mov
pop
andb
nop
out
sub
fnsave
cmc
adc
mov
lods
mov
inc
mov
sub
lahf
test
xchg
out
dec
adc
test
sbb
xchg
jge
jb
scas
nop
mov
scas
cmp
cmp
ja
pop
add
aas
test
dec
fisttps
lds
into
and
lods
and
mov
fstpl
mov
cmp
popa
add
lods
enterw
push
je
cs
sub
in
dec
pop
mov
xor
adc
adc
in
shr
cmp
std
mov
or
dec
insl
int3
mov
push
ss
pop
fiaddl
xor
add
lret
and
in
jecxz
or
fldcw
and
jecxz
in
std
xor
mov
push
cld
mov
repz
inc
ss
int3
inc
idiv
push
icebp
mov
aas
mov
push
mov
lods
jb
push
jge
test
or
mov
xchg
push
repnz
repnz
les
and
cltd
pop
and
mov
outsb
test
call
lret
ja
lcall
mov
jo
mov
push
sarl
out
fisttpll
sbb
scas
in
les
sbb
int3
sbb
adc
mov
xchg
lahf
lock
clc
dec
push
divl
push
arpl
popf
add
push
ret
push
pop
out
bswap
adc
sbb
fbstp
pop
cmp
jnp
loopne
loopne
add
and
mov
sbb
je
js
test
lods
inc
rcl
cmp
fld
and
fisttpl
sbb
les
mov
mov
addr16
lods
adc
sbb
insb
movsl
cmp
jmp
add
xchg
std
test
leave
rep
push
add
jp
adc
movl
fbld
inc
sbb
cltd
testl
rcr
test
test
data16
insb
jle
addr16
mov
inc
sub
sbb
inc
mov
nop
mov
and
into
or
lcall
push
flds
je
dec
aad
jnp
into
orl
shll
adc
and
leave
test
or
jnp
dec
cwtl
xchg
mov
pop
testl
rorl
cmp
jg
push
lahf
push
scas
and
mov
mov
pusha
cmc
xchg
cli
push
int
xchg
fcmove
test
repnz
xchg
add
shlb
test
xchg
jl
ret
ljmp
jp
stc
rcrb
aad
ja
stc
pushw
mov
pop
add
hlt
dec
lcall
dec
sarl
sbb
movsb
push
dec
dec
cmp
xor
push
dec
stc
mov
dec
fdivrs
lods
sub
fdivrs
or
pusha
push
or
xor
cli
clc
cs
scas
test
bound
cltd
mov
xor
das
or
jns
cmp
xchg
adcl
negl
push
arpl
push
xor
std
outsb
jae
mov
cli
test
sbb
push
fstl
or
mov
mov
jnp
xor
cs
push
mov
adc
lea
jmp
inc
outsl
fisttpll
dec
xchg
sbb
insl
jnp
mov
add
movsb
insb
fcoms
movsb
jno
cwtl
dec
xchg
decl
jne
sbb
lahf
lret
outsl
cmpl
or
subl
or
pop
shll
jg
xor
fidivl
lret
add
lds
fwait
push
jg
or
lcall
sbb
out
lds
rorl
icebp
out
or
mov
sub
push
dec
cmp
push
mov
insl
inc
add
loop
jo
fcoml
push
in
aaa
je
sbb
sbb
fwait
mov
nopl
pop
mov
and
lret
or
ss
jns
repnz
lea
jno
pop
in
es
jmp
pop
sbb
fsubl
loopne
xlat
cmpsl
gs
and
dec
arpl
outsb
mov
arpl
dec
and
pop
xchg
fisttpl
add
shr
nop
arpl
fnsave
mov
and
lret
jns
push
inc
mov
stos
jg
popa
xor
cmp
addr16
add
mov
push
dec
and
or
inc
stc
insl
fildll
mov
enter
fnstenv
mov
cmp
mov
fnstcw
clc
sarb
in
sub
cmpsl
mov
notb
scas
mov
stc
pop
push
and
pop
in
sub
push
mov
dec
dec
pop
cmp
jnp
inc
dec
out
das
mov
das
cltd
dec
pop
mov
arpl
jge
jbe
out
pop
lods
iret
add
int3
xchg
jo
adc
rorb
outsl
mov
or
inc
and
add
sahf
std
call
cmovns
mov
int
movsb
mov
push
test
pop
mov
sbb
cmpsb
lcall
jmp
shr
vmovss
adc
inc
int
mov
adc
fdivr
cmp
sub
add
pop
stos
mov
mov
mov
dec
aas
ss
cld
push
cltd
repnz
cmp
dec
push
mov
xchg
mov
push
lcall
xor
cltd
adc
cmpsb
jp
dec
cld
pop
mov
and
sbb
movsl
push
cwtl
test
or
std
push
not
pop
lahf
sti
mov
push
cli
jp
jbe
lds
push
pop
or
lahf
dec
imul
ja
mov
int3
adc
popf
mov
push
add
out
lret
loopne
stos
cltd
push
and
test
das
lods
xchg
sbb
and
insl
je
mov
das
mov
sarb
mov
sbb
pop
test
jae
clc
pop
movsl
cmp
adc
test
adc
xchg
adc
push
and
inc
leave
nop
push
sbb
lock
gs
inc
faddl
mov
cwtl
aaa
testl
mov
out
or
push
inc
jl
xor
push
cmp
bound
jnp
lcall
insl
divb
mov
mov
lea
add
mul
outsl
lods
jp
jo
fsts
dec
out
mov
cld
out
or
imul
adc
pop
negl
pop
add
push
cli
xchg
subps
inc
and
jl
pop
jne
pop
lcall
cli
fisubrl
sahf
das
cs
nop
sub
movsb
adcl
rol
ret
mov
in
lock
adc
pop
mov
pop
jne
scas
fisubl
in
inc
test
std
push
sysret
adc
cmp
cmp
fsubp
and
push
jne
rcr
inc
push
sub
xor
loope
movsl
leave
mov
shl
gs
pusha
mov
cli
out
leave
add
sub
push
in
adc
es
sub
xor
fidivl
cmpsb
aas
es
jecxz
shlb
movsb
cmp
int
jecxz
subl
dec
iret
adc
inc
cld
stos
cli
pop
cmp
sbb
out
fwait
xchg
in
jnp
pop
dec
pop
jle
addl
loopne
xchg
add
push
push
push
ret
add
fwait
mov
adc
cmp
scas
fucomi
cmp
pop
ljmp
lcall
sti
or
hlt
jb
mov
pusha
int
cmp
loop
scas
in
pop
jb
mov
and
dec
int3
fwait
lahf
movsb
cwtl
les
enter
and
push
cwtl
aad
jns
dec
adc
lock
int3
sbb
mov
scas
push
jg
notl
aaa
cmp
mov
js
cmp
mov
bound
dec
pop
bswap
and
xchg
cmp
lea
inc
ret
pop
ret
aas
repnz
fwait
leave
in
push
mov
mov
ret
dec
jb
inc
pusha
aad
mov
gs
aas
in
cli
mov
out
xchg
sub
pop
jno
sbb
ffreep
sahf
test
lcall
pop
xlat
icebp
inc
adcl
xchg
call
cwtl
mov
push
mov
xor
sarb
lea
xchg
ret
dec
idivl
cmp
push
pop
push
daa
stos
pushf
dec
ds
stos
mov
xchg
pop
insb
call
and
fsubrp
pop
jb
add
cmp
fistps
in
stos
test
and
mov
xchg
dec
xor
lock
cld
or
fstcw
jg
and
pop
jo
sbb
fdivrl
notb
mov
mov
ficoms
push
mulb
push
dec
sbb
negb
pop
push
push
cs
or
repnz
jns
pop
seto
gs
push
xchg
and
dec
subb
mov
jmp
into
js
mov
pop
mov
fisttpll
dec
sub
pop
fwait
or
pop
cmpsl
cwtl
pop
inc
or
cmpsl
xchg
fistl
adc
sbb
pop
repz
movsl
jne
adc
and
mov
jae
add
in
ja
lahf
lds
dec
icebp
pop
arpl
cmp
lret
iret
pusha
int
loopne
mov
into
out
popl
loope
frstor
sahf
jb
dec
cmp
pop
mov
and
fisttps
sub
fstl
wbinvd
or
mov
loope
cmp
aad
movsl
out
or
push
pusha
xor
dec
dec
mov
aaa
nop
sbb
xchg
and
sbb
aaa
cwtl
and
shll
sbb
ret
scas
fldcw
jge
push
fistps
cwtl
mov
jne
pop
inc
js
pop
aad
cmp
cltd
in
fs
sub
les
push
lahf
icebp
inc
pusha
lret
xchg
push
xchg
pop
loop
iret
imull
cmpsb
xor
mov
movsl
push
lret
dec
add
add
rcrl
loope
xor
pop
push
pusha
dec
lahf
je
dec
sbb
iret
movsl
pushf
insb
mov
lods
jo
pop
mov
mov
fmuls
fidivrl
cmp
out
add
cmp
shll
stos
pop
adc
repnz
sub
test
into
inc
lock
push
sub
jecxz
sbb
dec
sti
mov
pop
push
in
insl
test
pop
psubq
mov
push
or
xlat
or
jle
or
clc
sbb
popa
mov
jb
imul
stos
sub
pop
out
fs
inc
adc
out
roll
xchg
imul
adc
adc
int
jle
push
pop
pushf
add
dec
mov
aas
sbb
mov
sbb
icebp
pushf
decl
sub
push
xchg
inc
addr16
imul
xchg
imul
aad
sahf
mov
xchg
ja
sbbb
aad
jns
fsubrl
jne
or
add
sar
and
sbb
xor
push
xor
mov
push
cmpsl
adc
fcoml
pop
pop
hlt
push
rcll
and
loope
loope
jne
push
xchg
pop
mov
jb
inc
cmp
hlt
pusha
std
add
pop
pop
sbb
ljmp
adc
or
pop
leave
fmull
add
scas
pop
sbb
push
dec
nop
ljmp
fdivr
imul
pop
pop
incl
and
cmp
add
aaa
mov
jg
sbb
hlt
push
jecxz
push
sbbb
cltd
sbb
mov
mov
dec
std
push
sbb
add
and
repnz
jge
mov
insb
insl
push
mov
fcmovnbe
push
sub
xchg
push
popf
pushf
rolb
xor
xor
lods
jns
das
ret
mov
sub
testl
jl
fcoml
jnp
ljmp
jns
fnstenv
clc
xor
mov
jg
std
in
dec
mov
mov
rcll
push
fcoms
push
imul
mov
pop
sub
ja
sub
fstps
lcall
cltd
and
rclb
or
push
inc
sti
mov
pop
insb
das
dec
dec
popl
lret
dec
pop
cmc
or
sub
dec
mov
adc
lahf
xor
gs
mov
mov
lods
jmp
dec
scas
aam
jmp
cli
lea
pop
clc
and
inc
xor
test
jge
jecxz
addr16
mov
mov
xchg
mov
jmp
loope
pushf
cwtl
pop
jmp
add
jle
and
dec
pop
in
test
insl
jns
sub
lea
sbb
xchg
mov
push
aas
dec
popf
aas
pop
add
push
cli
insb
out
sbb
das
jns
add
jmp
daa
insb
fwait
adc
mov
cmp
sbb
pusha
jnp
mov
mov
xchg
repz
or
ret
pop
push
cs
dec
cmp
sub
xor
mov
sahf
jmp
push
mov
in
push
cli
xor
mov
dec
pop
mov
xor
add
xchg
xor
push
cmp
dec
fidivrs
das
or
iretw
stc
push
scas
cli
and
mov
push
repz
ret
je
add
mov
sahf
out
mov
mov
xchg
mov
lret
xor
sub
daa
movl
push
sub
mov
push
ret
jo
adc
push
in
or
cwtl
and
nop
cltd
push
sbb
sbb
sarb
out
jge
add
shrb
jo
movsb
dec
stos
sub
jo
mov
enter
iret
push
push
mov
cmp
add
sub
pusha
movsl
xorl
mov
cmc
rorb
inc
adc
mov
pop
push
cmpb
cld
js
mov
mov
daa
cmp
aad
lcall
or
pop
jp,pn
test
call
xorb
push
out
sahf
adc
jb
mov
nop
xchg
arpl
xchg
xlat
cs
fdiv
sub
mov
pop
dec
push
cmpsb
jo
sub
mov
data16
pop
dec
xchg
xor
cmp
push
mov
test
xchg
ds
pop
hlt
cs
imul
push
repnz
pop
add
inc
sbb
dec
arpl
nop
jae
cwtl
cmp
pop
add
sub
mov
test
xlat
fs
sahf
je
lcall
sub
lahf
aam
mov
cmp
sar
fiadds
cmpsl
dec
or
jle
das
xor
subl
das
call
push
pop
and
or
mov
aad
ljmp
stos
notl
and
push
movsl
test
add
mov
out
xchg
hlt
aad
lahf
mov
mov
xor
xchg
scas
dec
fs
cmp
push
es
adc
stos
mov
or
dec
outsb
sbb
mov
in
insb
idiv
dec
out
or
call
inc
or
pop
xor
imul
adc
sub
in
movsb
add
pop
les
dec
fsin
dec
in
mov
cmc
ficoml
xchg
hlt
ljmp
lahf
lods
xchg
dec
mov
lods
pop
jb
mov
lret
mov
daa
ja
mov
jb
test
sub
lods
mov
fld1
jge
jns
or
in
jnp
jecxz
or
ret
popa
das
sub
iret
inc
mov
nop
arpl
incl
cwtl
sub
pusha
jnp
xchg
and
cli
mov
and
adc
fdivs
jbe
adc
push
jmp
xor
push
das
cmp
call
orl
mov
cltd
pop
inc
xor
xchg
mov
sub
fdivrs
cmp
in
mov
lods
clc
inc
sbb
add
lds
adc
push
xlat
js
dec
sub
xor
addr16
test
adcb
jl
mov
adc
lea
std
sub
ret
jecxz
clc
daa
into
xor
mov
mov
mov
addr16
stc
inc
sbb
xor
fdivl
shll
xlat
or
cs
hlt
imul
mov
jae
mov
pop
shlb
icebp
pop
cmp
lds
mov
adc
imul
jle
xlat
mov
adc
push
xchg
aad
adc
jp,pn
sub
mov
lods
or
cmpsb
jle
ds
and
xchg
popf
gs
mov
test
pop
push
repz
in
test
mov
shll
ror
addr16
mov
in
mov
mov
inc
loop
mov
inc
clc
jg
ss
adc
lret
dec
test
in
in
jle
jne
loop
jno
cmc
or
stos
mov
ljmp
push
dec
mov
cmp
subl
das
mov
repnz
ret
pop
test
nop
aam
fmull
int3
lahf
pop
stc
lret
dec
mov
xorb
or
lcall
dec
sbb
jo
cs
movsl
cmp
int3
cmp
push
lds
dec
jns
sbb
stc
out
pop
sahf
dec
out
nop
inc
loope
adc
dec
ret
ret
sub
lods
sbb
jne
pushf
cltd
stos
mov
sbb
movsb
add
fcmovb
push
je
enter
rcrl
imul
cmpsl
mov
inc
movsl
push
jp
inc
enter
pusha
fxch
jmp
aas
mov
mov
out
inc
sbb
cld
and
mov
xchg
rcrl
lcall
inc
ljmp
xor
lahf
aas
pop
fimuls
daa
mov
inc
inc
loop
and
sbb
filds
mov
std
push
hlt
cmp
test
mov
cmc
adc
sbb
cmp
loope
mov
fs
adc
add
hlt
dec
sar
cmp
sub
addr16
pop
inc
mov
jns
dec
pop
cs
imul
mov
test
sarb
aaa
aas
sub
sub
je
or
inc
subb
sub
adc
mov
inc
sbb
pop
cli
adc
xchg
shufps
mov
inc
seto
fisubrl
push
and
repnz
scas
outsb
jae
sbb
sahf
jp
pushf
insl
ret
addr16
sub
dec
shr
icebp
push
outsl
hlt
data16
aas
call
push
add
fstl
lock
pop
negb
sub
sbb
pop
fisttpl
lcall
aas
shrl
insl
cmc
mov
stc
std
out
stc
mov
jnp
stos
out
lahf
testl
andb
sbb
int
ret
mov
and
fucomp
inc
stos
outsl
mov
stos
loop
aad
dec
xchg
fimuls
adc
mov
jle
lcall
add
leave
add
call
or
jb
push
popf
sbb
insl
jecxz
pop
push
lds
cmpsb
cmp
imul
sbb
jp
add
push
inc
lea
sub
xchg
ljmp
cmpl
sub
or
out
inc
inc
mov
adc
fldl
or
lea
jno
fimull
or
lret
push
icebp
stos
mov
mov
popf
mov
jo
aad
sahf
mov
adc
xlat
sbb
in
stos
mov
idivl
aas
pop
xor
mov
outsb
rcr
shll
and
cmc
cmp
iret
dec
pop
loope
mov
scas
inc
data16
or
add
fmul
jno
mov
flds
mov
xchg
jmp
mov
mov
imul
scas
in
das
sahf
mov
mov
orl
push
sub
js
xchg
outsb
mov
and
or
push
movsb
stos
cltd
aaa
arpl
ss
mov
sahf
sbb
outsb
test
std
addr16
sti
push
stos
mov
mov
and
cmovb
gs
jle
mov
rorb
and
cmovno
insl
mov
sub
lret
push
cmp
sub
sub
pop
loope
rolb
push
cmc
mov
arpl
mov
jne
sbb
aaa
fs
bound
outsl
lds
das
je
jae
movsl
xchg
jle
lahf
clc
popa
fisttpll
pop
inc
cmp
lods
testl
lcall
fnstcw
jp
subb
and
push
xchg
sub
sub
cld
lahf
imulb
stc
jnp
and
xchg
mov
xchg
pusha
scas
lahf
lahf
out
movsl
shl
adc
jns
mov
cld
leave
mov
sbb
lds
mov
jge
push
jae
cmpsl
repz
cmp
cli
inc
insb
jmp
test
call
rcrl
ficompl
pushl
rcrb
xchg
sbbl
xchg
stos
std
mov
jae
in
or
ds
cmc
dec
fadds
scas
sbb
in
push
outsl
lds
jle
mov
and
adc
jnp
xchg
jge
pop
add
shll
or
out
stos
int3
pop
and
pop
scas
add
xor
jg
addb
dec
inc
outsb
rcr
nop
insl
jns
hlt
sahf
mov
adc
fimull
out
jg
insb
mov
mov
mov
clc
add
pop
loope
fcomip
fldl
movsb
or
inc
popl
nop
mov
add
cmp
pop
mov
and
pusha
cwtl
pusha
or
sub
push
test
sbb
movb
push
pop
adc
sub
jns
daa
jo
jle
test
push
sub
sbb
add
pop
mov
fwait
xchg
ret
mov
lret
adc
nop
inc
sbb
push
pop
inc
dec
xchg
push
sbb
mov
push
call
fisttpl
rorl
cld
repz
push
shl
cmpsb
lret
inc
loopne
push
mov
cs
mov
iret
xchg
cltd
add
jecxz
call
std
nop
xchg
add
adc
xchg
add
jb
leave
and
mov
pop
jne
dec
dec
addl
jle
lds
bound
movsl
divb
push
and
mov
adc
mov
xor
ret
arpl
loope
jp
loope
cmp
xchg
adc
jmp
test
xchg
popa
lret
push
xchg
clc
xchg
jne
jo
shrl
cmp
dec
mov
sub
cld
dec
gs
xor
mov
lahf
sub
jb
mov
lret
pop
or
jae
iret
daa
jo
mov
mov
push
push
ds
pop
cmpsl
jle
mov
cmp
pop
mov
nop
push
and
mov
ds
int
repz
outsb
cmc
cmpsb
pop
inc
imul
push
imul
idiv
fs
sbb
add
inc
pop
or
cld
enter
in
out
pop
test
imul
sahf
mov
test
push
mov
inc
mov
roll
pop
sbb
std
das
pop
push
xchg
in
pushf
rolb
dec
mov
out
adc
lds
and
jmp
inc
mov
rcrl
fsubr
sbb
xor
mov
jge
movsb
aas
or
loop
sub
mov
aas
hlt
in
int3
add
divb
xchg
xchg
pop
pop
out
adc
mov
adc
nop
pop
cmpsl
pop
add
push
xor
fxch
outsb
sub
or
bound
popf
jo
push
inc
je
ja
add
push
js
jle
xor
mov
mov
repz
dec
xor
enter
bound
mov
xor
cwtl
test
movsb
inc
xor
dec
jae
xchg
loope
adc
clc
ds
and
push
jbe
push
daa
add
cwtl
sbb
jp
xchg
adc
clc
sub
inc
pop
xchg
xor
punpcklwd
je
adcl
js
sbb
loopne
repz
pop
pop
push
adc
or
xlat
imul
xchg
mov
imul
add
cwtl
sub
std
push
xchg
cltd
outsb
movsl
pop
mov
addl
xor
icebp
or
mov
fs
dec
outsl
mov
les
pop
sub
and
repnz
mov
fs
mov
sub
test
cmp
movsb
nop
movsb
mov
mov
inc
jbe
ja
xchg
or
lahf
add
loope
mov
push
xchg
movsb
cmp
xchg
cmc
cld
push
dec
cld
mov
jl
xchg
call
xchg
mov
xchg
or
loope
add
lcall
inc
cmp
adc
repz
xchg
mov
push
jmp
aas
mov
push
outsb
add
mov
push
mov
jno
test
divb
sti
and
jbe
std
sti
mov
in
loope
ss
jg
sbb
stc
inc
adc
mov
hlt
test
xor
pop
jle
data16
cmc
ljmp
lcall
pop
sbb
orb
in
add
xchg
insb
push
dec
mov
push
mov
adc
xchg
jbe
add
add
jecxz
mov
popa
iret
and
shl
out
add
in
add
lret
push
push
out
loop
pop
stos
incb
dec
and
test
cmp
rcl
pop
ficoml
mov
pushf
iret
fdivrl
dec
lret
fdivrl
lds
or
nop
scas
and
mov
int3
jne
mov
imul
movsl
jmp
mov
push
sub
jb
in
subb
sti
adc
pusha
icebp
test
rcrl
leave
sub
adc
in
add
inc
xchg
rorl
xchg
jp
mov
xchg
fisttps
mov
adc
mov
inc
cmp
js
mov
mov
pop
xor
fcmovnb
inc
dec
in
xchg
jae
lea
xor
push
addr16
cmp
jae
cmp
fists
mov
jb
dec
shll
fdiv
mov
and
dec
xor
xorl
xor
sarb
out
cmpsl
loope
add
ret
dec
dec
stos
les
push
lods
pop
cli
outsl
cmp
sub
mov
sti
es
xchg
insb
add
insl
xor
xchg
pop
xlat
fimull
fsub
addb
pop
or
jmp
fistl
mov
fcmovbe
mov
mov
adc
stos
in
mov
push
movsb
xchg
mov
cmpsb
lea
scas
mov
fcomp
dec
push
in
movsl
mov
jmp
and
rorl
gs
mov
mov
sarl
lahf
stc
out
cli
cltd
mov
inc
sub
sub
lds
sbb
mov
cmp
fcompl
jb
adc
push
popf
cmpsb
adc
addr16
into
enter
addr16
adc
sbb
lahf
cmpsl
bound
nop
mov
andl
ss
les
pop
push
xor
adc
test
add
sub
xlat
cld
mov
jg
xchg
xor
out
addr16
jecxz
push
and
jle
rcrb
push
cli
rcrb
mov
jo
add
cld
ret
mov
negl
xor
cli
cmc
cld
es
scas
lods
cmpsl
ds
xchg
sti
lds
adc
stc
sbb
lcall
add
inc
pop
shrl
shll
cmp
fisttps
pop
push
out
sbb
mov
pop
cmp
scas
addr16
fcompl
test
jl
movsl
in
rolb
stc
or
les
xchg
sub
jmp
mov
cmp
and
xorl
xchg
cmpsb
test
and
lods
jb
adc
scas
imul
into
out
mov
push
jp
repz
add
lds
daa
pop
inc
jmp
lahf
push
dec
testl
std
repnz
push
jb
adc
sbb
out
repnz
sub
add
daa
pop
jno
pop
xchg
lock
jle
inc
mov
xor
popf
mov
push
add
fmuls
jns
mov
cltd
shlb
lret
sbb
mov
pop
mov
cmpsb
pop
add
push
add
jge
sbb
xor
cwtl
faddp
jne
inc
mov
scas
dec
call
ret
rolb
js
inc
out
rolb
mov
lahf
push
stc
lret
pop
or
jg
jmp
pop
mov
adc
dec
mov
add
sbb
inc
pop
clc
cmpsb
mov
push
mov
and
jecxz
mov
fimuls
pop
cltd
cmpsb
mov
sbb
lea
ja
jp
shlb
mov
stos
lods
sub
testb
push
inc
sub
and
mov
ja
rcll
jp
ds
xchg
add
sub
sarl
ficomps
jle
and
ljmp
mov
pop
mov
repz
jge
ljmp
or
dec
cmc
popa
test
add
push
ja
cltd
inc
mov
add
nop
jp
mov
pop
dec
mul
or
pop
data16
fisttps
mov
mov
mov
cmp
out
das
scas
loope
mov
push
pusha
push
lea
outsb
jnp
movsl
movsl
dec
sub
mov
scas
sbb
xchg
arpl
lahf
lret
xchg
and
daa
pushf
fadds
jb
cmc
dec
cltd
fsubrl
jecxz
scas
lods
and
push
adc
xchg
mov
outsl
add
andb
ror
int
lds
mov
push
xchg
filds
sbb
pop
scas
loop
mov
xorb
sub
mov
and
jae,pn
adc
inc
push
cli
pushf
pop
cmp
cmpsl
bound
rclb
int
or
test
repz
insl
cld
jb
xchg
cmc
adc
push
outsl
mov
dec
mov
shl
mov
nop
or
inc
jns
pop
fidivrs
icebp
inc
test
mov
popa
and
stos
cwtl
jb
sti
push
mov
orb
inc
pop
sti
xor
jns
imul
mov
and
inc
cmpsb
out
add
pavgw
cmp
pop
xor
iret
movsl
push
sbbl
leave
jb
fisubs
aaa
sahf
in
aad
adc
and
inc
or
lea
inc
adc
or
daa
ja
fnstenv
lret
xor
cmp
or
mov
xchg
mov
rolb
subb
lods
xor
icebp
push
xchg
or
sbb
push
jns
std
clc
or
insl
jp
lock
push
testb
das
push
je
adc
imul
mov
cmp
xor
cmp
lret
dec
fidivs
push
sbb
jne
and
cmp
dec
jae
cmp
xor
imul
jns
in
stc
test
ret
hlt
test
sbb
enter
jno
or
pop
jl
jle
ja
mov
fisubs
add
xchg
add
mov
xchg
int3
sbb
xchg
jle
inc
dec
addr16
jne
repnz
cmp
in
mov
ljmp
xor
ds
jae
fidivrl
or
adc
mov
lahf
cmpsl
test
add
jb
sbb
imul
or
mov
pop
repnz
ret
or
cmpsb
insl
movsl
fldenv
jecxz
into
pop
mov
out
out
xor
jne
js
and
ret
mov
int
inc
rcll
mov
pop
sub
mov
out
jg
mov
dec
leave
mov
adc
sarb
cmp
xchg
test
jno
das
ret
add
mov
cmpsb
lret
push
mov
pushf
push
sahf
xor
xchg
bound
mov
inc
lds
push
jnp
aaa
aaa
sbb
sub
loopne
cwtl
mov
adc
or
mov
lcall
iret
negl
jle
jb
incl
sub
push
loop
inc
jle
scas
add
pop
aad
or
pop
jp
cmpl
loopne,pn
aam
fcoml
pop
bound
idivl
cmp
test
push
ss
add
in
je
sub
push
outsl
mov
ds
add
lock
stc
cmp
sub
scas
jnp
jne
bound
cmp
and
push
fldt
push
decl
cmc
cld
rcr
add
out
or
nop
dec
fdivr
in
jne
add
js
and
cltd
xchg
xlat
iret
jne
insb
aam
and
lods
jbe
pop
cld
cwtl
pop
mov
shlb
cli
cmpl
mov
ja
mov
je
adc
push
xor
and
fbstp
sbb
movsb
addr16
popa
pop
ds
inc
sbb
shlb
mov
mov
outsl
inc
adc
rolb
addr16
lds
and
std
enter
mov
insl
cltd
rolb
mov
push
data16
pop
jmp
cltd
es
sbb
sbb
fstpt
int
inc
imul
push
ret
fs
cmpsb
iret
adc
jne
rcl
scas
cmp
arpl
addr16
jae
aad
cltd
daa
push
mov
add
sub
jle
dec
add
dec
mov
jle
mov
push
mov
mov
push
pop
loop
sahf
push
sub
sub
mov
push
and
adc
imul
les
lahf
mov
sub
fisubs
orl
jge
cmpsl
dec
or
cmp
push
xorb
xor
mov
mov
pop
rorl
dec
mov
aam
stc
cltd
adc
lock
mov
insb
cld
scas
es
cmp
mov
pushf
loope
insl
inc
es
mov
pop
sub
fs
inc
lock
inc
loope
les
sbb
sbb
dec
cmc
cmp
imul
insl
rol
pop
das
movsb
push
shll
add
shlb
std
mov
and
into
shll
sbb
or
lock
mov
and
jp
loopne
mov
sbb
cld
and
xor
mov
fimull
stc
adc
arpl
mov
int3
and
mov
ret
out
cld
pushl
fcoml
xchg
xlat
lods
pop
hlt
xor
mov
and
inc
movsb
and
and
inc
movsl
iret
repnz
or
add
aaa
pop
add
jo
inc
xchg
xorb
out
mov
nop
in
jo
cld
mov
enter
ds
dec
popf
mov
and
mull
xchg
sahf
xchg
lcall
adc
loope
jge
rcrl
pop
out
test
mov
cmp
dec
lods
out
stc
ss
cmp
sub
imul
lret
mov
jb
pop
push
loop
mov
xchg
std
xchg
dec
incb
mov
jns
jmp
std
xchg
test
lahf
mov
push
lret
loope
adc
into
push
dec
xor
sbb
test
xchg
stos
xchg
xor
sbb
jno
cmp
dec
mov
pop
sbb
pop
adc
mov
rorb
andl
lock
popf
jne
andl
mov
das
lcall
addl
arpl
inc
loope
jg
sub
clc
jp
lds
test
xor
mov
daa
cmpsb
jp
iret
scas
test
pop
xchg
ds
sub
lcall
and
mov
mov
xorb
insb
xchg
jle
pop
mov
ret
push
sbb
icebp
cmpsl
lcall
lock
mov
add
in
push
mov
arpl
mov
sti
loopne
mov
adc
addr16
sbb
mov
mov
gs
push
jns
push
adc
cmc
rcrl
xchg
push
xchg
adc
test
cmp
jecxz
mov
movsb
add
hlt
imul
mov
repnz
je
add
fwait
imul
loope
aad
mov
outsb
add
xchg
insl
outsl
loopne
push
cmpsl
out
cmp
arpl
xchg
rcrl
adc
insb
xchg
lea
outsb
outsb
inc
pop
mov
mov
jae
ret
lret
jns
sti
push
aaa
inc
call
lds
testl
ret
cli
mov
sahf
mov
and
stc
push
xchg
jmp
fsin
adc
sbb
out
mov
stos
cltd
pop
rcll
inc
into
jmp
sbb
pop
fildll
aas
xchg
scas
cmpl
jbe
pop
inc
jns
push
mov
inc
fldt
push
inc
xor
pop
jge
mov
fwait
aam
jne
push
and
adc
jo
stos
lods
mul
jge
adc
cmp
sub
roll
and
xor
jmp
shlb
push
dec
dec
iret
notl
cwtl
or
scas
mov
sub
rcrl
cld
jb
insb
fwait
popf
gs
mov
into
les
jg
stc
adc
pop
mov
lock
iret
popf
cltd
in
inc
xchg
insl
add
popl
cmp
mov
ss
xchg
xlat
das
ret
divb
jmp
fistpll
xchg
cmovbe
mov
lcall
dec
mov
and
push
mov
lds
gs
stos
xchg
addr16
xchg
xor
and
push
push
mov
fwait
dec
xchg
xchg
jae
aad
ja
mov
add
cs
adc
jg
arpl
jae
fists
jne
xchg
lds
iret
add
sbb
hlt
push
or
aam
push
in
cmp
adc
and
popa
inc
sbb
les
mov
insl
inc
cs
cli
repz
lret
std
popa
out
mov
xor
xor
ds
repz
mov
cs
xchg
scas
adc
adc
aaa
push
int3
sbb
pop
xchg
jo
cmpsl
js
loope
mov
sbb
rcll
adc
cwtl
idivl
in
dec
aam
pusha
mov
scas
aaa
scas
sbb
adc
dec
xchg
pop
or
jmp
inc
test
mov
and
bound
insl
and
dec
movl
inc
xor
push
shr
inc
and
sub
mov
xchg
ja
adc
sbb
and
test
lret
jge
mov
aad
cmp
inc
addl
mov
ljmp
pop
sub
sbb
movsb
repnz
hlt
inc
push
jns
xchg
xchg
testb
jp
inc
outsb
int3
jp
in
sahf
loope
fisubl
adc
lods
ljmp
push
sub
ljmp
shlb
jge
mov
scas
sbb
jmp
movsl
arpl
jno
lods
xchg
in
sub
rorl
sbb
jbe
fistl
cltd
mov
je
arpl
hlt
dec
mov
xor
xor
test
lods
shl
and
pop
test
jp
push
cmp
sbb
es
mov
xor
insl
arpl
mov
iret
xor
aaa
inc
aas
mov
sbb
mov
pusha
icebp
aam
mov
pop
repz
or
fimull
xchg
int3
add
jns
pop
inc
xor
lods
imul
bound
jmp
ljmp
scas
lock
test
repz
sub
outsb
jae
sbb
mov
push
in
mov
xor
or
sub
movsl
sbb
notl
shlb
je
cmp
out
in
outsl
mov
push
xor
mov
das
scas
cmpsl
icebp
outsb
inc
mov
ja,pn
pop
pop
repz
sti
mov
pop
sbb
or
test
mov
inc
test
adc
out
adc
add
cmc
or
dec
in
pop
mov
mov
andl
jb
fs
ljmp
push
push
shll
and
cmp
mov
mov
fyl2xp1
mov
shll
jb
icebp
jl
adc
sub
nop
cmpsb
xchg
lret
cmp
out
or
bound
push
fisttpll
mov
or
in
cmp
mov
mov
xchg
insb
imul
idiv
mov
pop
pop
iret
testb
out
int
dec
pushf
dec
mov
jge
sbb
das
xlat
int
and
js
pop
add
lock
jbe
lret
pop
add
cmc
stos
out
popa
mov
mov
popa
xor
xor
lret
add
lods
push
dec
imul
or
js
mov
mov
pop
adc
enter
outsb
stos
or
pop
add
test
pop
inc
push
sbb
ret
call
and
and
movsl
loopne
mov
jae
jo
or
pusha
mov
lods
inc
sbb
or
aas
cli
pop
aam
ja
push
fwait
dec
in
and
outsb
sub
testl
bound
pop
sub
inc
loope
sar
mov
cmp
outsb
fcmovbe
stos
bound
shl
inc
lahf
movsl
cwtl
cmp
sahf
insl
cmpsl
call
sbb
jl
jns
jne
jne
lahf
sub
rolb
inc
mov
test
mov
lret
mov
mov
mov
pusha
sbb
pop
jns
or
pop
nop
mov
push
cmpsl
dec
out
popa
mov
jo
jle
jmp
sahf
stc
push
call
or
retw
sub
xchg
mov
shl
lods
and
and
xor
data16
loope
pop
push
jp
inc
shlb
mov
out
outsl
sub
jle
sub
xor
out
push
test
pop
jge
in
imul
mov
xor
mov
inc
xlat
aad
mov
xor
or
outsl
adcb
mov
cmpl
xchg
dec
jb
and
pop
add
pop
push
movsb
xchg
loopne
pop
push
cmp
pop
inc
ja
pop
fstl
push
imul
jle
or
dec
clc
fcom
inc
into
or
or
hlt
inc
add
sub
jns
fisttpl
add
cli
addr16
jmp
out
mulb
jmp
mov
std
inc
push
cs
pop
mov
loop
insl
pop
fwait
push
mov
push
add
mov
mov
lock
or
into
test
mov
rorb
stc
out
lahf
loope
or
aam
pushf
stc
cmp
pop
mov
lahf
bound
lock
pop
add
push
mov
in
or
xor
arpl
jne
fcoms
mulb
or
stc
pop
pushf
pop
test
scas
das
mov
mov
push
xchg
fldt
jnp
mov
int3
xor
int3
sub
add
ds
je
sbb
es
nop
push
mov
shr
or
lods
mov
cld
jecxz
jo
pop
outsb
adc
incl
aam
add
in
pop
mov
lds
out
je
loopne
adc
sarb
push
out
mov
arpl
push
cltd
jo
dec
cmp
hlt
lahf
je
dec
addr16
mov
mov
sahf
mov
push
cmpsb
or
mov
loopne
dec
adc
fnstcw
mov
xchg
ss
shll
pop
pop
inc
xchg
sarb
mov
xchg
addl
or
xchg
testb
or
out
fidivrs
sbb
jno
inc
fcmovu
pushf
xor
popf
mov
xor
mov
sbb
fsubr
jbe
adc
addr16
xor
sub
mov
jae
push
push
hlt
pop
arpl
shl
sbb
inc
dec
mov
cmp
sbb
in
jl
mov
mov
xchg
fsubrl
cmp
mov
mov
or
mov
stos
aas
movsl
nop
cmc
cmpsb
daa
or
xlat
lret
push
mov
mov
mov
mov
data16
xchg
push
call
lret
out
nop
je,pn
popa
aas
jle
sbb
pop
dec
loop
sub
rorb
outsb
addr16
out
jo
mov
movb
jecxz
xor
or
xor
out
add
cld
sub
cmp
jmp
sbb
or
aaa
xchg
ficoml
jae
insl
jmp
cmp
jne
lods
cmpsl
repz
pop
frstor
sarl
addr16
in
ret
imul
in
popa
add
mov
int3
lods
mov
jge
test
test
xlat
xor
sub
outsl
fs
imulb
test
lea
adc
dec
push
pop
adc
pop
mov
mov
adc
mov
adc
js
pop
pushf
and
add
push
ja
scas
add
push
repnz
or
mov
enter
or
sbb
dec
inc
scas
pusha
insb
test
xlat
pop
pop
mov
rclb
dec
lahf
shrl
pop
lods
mov
mov
nop
mov
outsl
pop
cmp
call
and
js
mov
insl
pop
and
sti
jno
test
idiv
cmc
xchg
xchg
hlt
adc
popl
or
mov
je
push
jbe
jne
cmc
xor
lret
xor
ss
and
xchg
sub
add
js
sub
rol
xchg
pop
mov
fwait
repnz
sub
aam
cmp
jmp
sub
je
mov
inc
in
popf
cmp
mov
pop
mov
repnz
imul
dec
add
hlt
lods
outsb
xor
int3
inc
pusha
cwtl
or
das
inc
enter
stos
gs
add
cwtl
cmpsb
outsb
dec
mov
in
xor
push
fwait
add
sub
add
scas
sub
scas
rcr
mov
inc
inc
jle
lret
js
pop
pop
stos
jae
cltd
imul
sbb
dec
test
aad
test
scas
add
dec
sub
cmpsl
dec
pop
inc
and
cmp
in
loopne
pop
movsl
push
xchg
mov
mov
dec
shr
jae
dec
jo
lret
pop
inc
jmp
push
sbbl
mov
xor
or
mov
lods
add
dec
mov
jbe
arpl
shrl
pop
hlt
into
sti
push
out
insb
xchg
xor
dec
mov
rcl
out
mov
sbb
cmp
std
dec
mov
cld
mov
xor
mov
in
pop
ret
shrb
dec
leave
jae
loop
mov
mov
inc
ds
jecxz
sbb
push
sarb
ds
pop
sbb
clc
icebp
ret
sub
arpl
sub
mov
nop
sbbb
xchg
xchg
ret
or
int
push
iret
dec
xlat
test
test
andl
shr
gs
inc
cwtl
or
jmp
in
cwtl
pop
lret
fdivrl
cmp
mov
sahf
cli
div
pop
dec
call
les
jg
rclb
xchg
shrl
out
in
fwait
lds
lahf
jmp
adc
adc
xlat
les
and
ret
xchg
fiadds
xor
aas
test
repz
sub
jge
orl
sbb
mov
cltd
outsl
inc
mov
test
fildll
dec
xlat
or
inc
fisttpll
cmpsl
dec
push
lcall
fstpt
inc
ret
aad
mov
cmp
adc
mov
and
lods
cli
mov
inc
scas
sub
push
cmpsb
sbb
aas
jb
repnz
xlat
xor
adc
sub
mov
xor
std
daa
pop
xchg
faddl
shll
movsl
push
and
cli
or
les
jo
lahf
test
jae
push
fistl
adc
iret
dec
xchg
loope
pushf
test
out
ljmp
test
aam
cli
sbb
mov
adc
arpl
jl
mov
outsb
push
loopne
sub
addr16
add
pop
fwait
shrl
or
adc
mov
push
in
pop
ds
mov
mov
mov
sub
popf
push
push
push
jecxz
xchg
js
mov
ficompl
xor
mov
mov
int3
out
fisubl
adc
lds
xchg
xchg
insb
mov
nop
ss
or
scas
jno,pn
testb
add
jle
xor
and
test
sub
xchg
repz
mov
scas
lahf
and
pop
jge
hlt
and
rol
lea
cmp
cmpsb
mov
sbb
imul
mov
mov
or
fstl
lahf
push
and
or
addr16
iret
sbb
push
sub
fs
adc
loopne
cwtl
ja
cmpsl
pop
mov
cld
sbb
in
ret
mov
xor
dec
addb
repnz
rolb
negb
lock
or
mov
sub
daa
fisubrs
insl
mov
loopne
setns
sahf
dec
sub
add
movsb
fwait
adc
jo
dec
mov
inc
and
clc
mov
cld
scas
jmp
and
iret
mov
test
jp
inc
mov
clc
scas
adc
sub
mov
push
popa
mov
pushf
sub
mov
add
cmc
xchg
adc
mov
inc
xchg
mov
mov
mov
mov
loope
mov
or
test
lcall
adc
xor
jecxz
fildll
sub
das
loop
mov
push
xor
mov
adc
ret
push
daa
out
jmp
add
sahf
mov
push
adc
push
stos
icebp
xchg
inc
shr
push
mov
xchg
in
fnstenv
sbb
lret
mov
hlt
clc
xchg
test
mov
add
cmp
aaa
xor
cs
xor
jne
out
mov
add
sbb
lret
jg
push
and
incb
sti
pop
cmp
int3
sbb
sar
cmpsb
sub
cmpsb
sbb
or
cwtl
pop
imul
push
movsl
je
into
push
mov
jne
mov
daa
inc
jl
repz
push
das
mov
mov
jmp
lret
pop
ljmp
mov
sbb
mov
notl
inc
and
mov
fwait
lahf
mov
xor
inc
jno
adc
ret
hlt
jl
mov
fwait
lahf
scas
jl
mov
jo
popa
dec
xchg
aaa
jp
jns
and
jmp
mov
push
fisubl
cmpsl
push
popf
test
mov
mov
mov
and
stc
scas
arpl
sbbb
aam
out
cmc
ja
and
int
xchg
fwait
xchg
scas
das
mov
data16
in
lods
fimuls
or
sbb
push
cltd
add
cltd
pop
nop
ds
imul
in
fmuls
pop
xorb
or
hlt
push
cmp
push
xlat
lcall
mov
mov
test
mov
ja
nop
in
addr16
in
inc
lds
loopne
mov
mov
sahf
jno
xchg
clc
shll
sub
popf
sbb
cmpsl
fidivl
js
out
mov
or
and
lea
lahf
test
dec
addr16
out
inc
aas
hlt
pop
scas
les
dec
daa
shrb
repz
mov
je
test
xor
xor
sbb
pop
call
repz
push
test
cmpsb
negb
mov
lods
xchg
adc
adc
ffree
aam
push
pop
test
adc
xor
bound
or
and
fstl
sbb
mov
xor
or
stos
xor
icebp
dec
arpl
lret
or
xorb
mov
sarb
push
je
aad
xchg
imul
mov
fadd
out
pop
xor
out
xchg
ret
pusha
fidivrl
insb
lret
xchg
inc
jp
xchg
ficoms
ja
aas
lahf
push
or
add
push
dec
insb
sbb
or
mov
inc
ljmp
in
sub
pop
or
inc
pop
loopne
cld
xor
xor
imul
jle
xchg
dec
in
mov
add
out
dec
adc
scas
push
imul
mov
aaa
sbb
jge
cmpsb
pand
lods
into
loope
jl
mov
cmp
mov
dec
scas
icebp
enter
pop
adc
fistps
push
out
sub
mov
test
jne
mov
push
jbe
sahf
ficomps
pop
sbb
sti
int3
xchg
movsb
popf
jnp
adc
inc
pop
push
in
lods
or
jbe
ss
cli
les
insl
cld
insb
sbb
and
cmp
mov
mov
push
sbb
jb
mov
push
faddl
push
pop
shll
fstps
pop
sbb
or
mov
mov
nop
ljmp
testb
jg
dec
jg
jne
rol
sbb
sub
lahf
mov
dec
in
test
mov
and
cmp
push
out
jbe
mov
sbb
mov
and
cwtl
add
das
dec
clc
and
mov
pushf
sbb
dec
lock
push
pop
je
decl
cmp
mov
ljmp
gs
in
sbb
pusha
testb
ret
fbld
push
lcall
push
repnz
jnp
repz
pop
fimuls
mov
and
adc
gs
fnstsw
push
sbb
out
subl
xchg
push
dec
push
arpl
std
stos
pop
or
xchg
mov
xchg
adc
negb
pop
call
lds
or
mov
daa
loop
cli
in
icebp
jecxz
iret
add
mov
and
mov
out
iret
push
inc
dec
xor
es
xchg
cs
arpl
pop
push
divb
mov
mov
xchg
clc
mov
cli
outsb
add
push
cwtl
outsl
lret
add
movsl
mov
jne
push
pop
jmp
mov
xchg
and
and
push
push
xchg
lods
or
iret
cmp
jl
pop
test
jmp
pop
enter
dec
or
addb
sahf
adc
popa
iret
fidivrs
loopne
cld
cmp
add
mov
clc
or
mov
or
mov
scas
sub
and
jbe
jns
outsl
dec
add
or
hlt
sub
jb
in
push
pop
sub
adc
push
fisubs
or
cmpsb
xchg
inc
adc
pop
sub
pop
mov
xchg
notl
fcmove
inc
xchg
adc
xor
inc
lcall
push
ret
inc
sbb
inc
cltd
pop
lock
pop
sub
and
fmuls
mov
shll
adc
outsl
pop
pop
xchg
pop
jmp
test
xor
fildll
out
lods
mov
daa
in
jl
and
cmp
insb
cmp
sub
dec
pop
inc
idivl
mov
jg
sub
aaa
in
pushf
sahf
mov
insb
scas
and
and
and
cmpsb
push
movsb
cmp
fisubl
xchg
int
enter
jb
aaa
ficoml
dec
adc
outsl
mov
push
cmp
xchg
fimull
popa
in
sahf
adc
and
jg
mov
rorb
stos
dec
out
xchg
mov
ret
pop
pop
pop
imul
mov
adc
and
or
or
dec
pop
sub
mov
inc
dec
jg
daa
add
jbe
sbb
pop
clc
rclb
push
jmp
add
xchg
ffreep
stc
xchg
ljmp
sub
xchg
repz
cs
arpl
icebp
inc
xchg
fisubrs
hlt
inc
dec
push
jo
pop
outsl
inc
lea
cmpsl
out
add
dec
movsl
sbb
outsb
mov
insb
in
xor
clc
xor
in
outsl
scas
sbb
xchg
dec
jne
xor
add
mov
xchg
icebp
leave
hlt
outsb
sbb
jne
add
push
jle
dec
outsb
int
in
push
cmp
clc
inc
push
sub
pop
xlat
cmp
mov
aas
fadds
mov
aaa
aaa
clc
xor
mov
cmp
stos
std
icebp
addr16
mov
push
mov
lahf
and
xor
cmpsb
idiv
outsl
add
test
mov
sub
sub
sbb
outsl
mov
inc
scas
pusha
add
test
cmp
xor
rcll
addr16
les
mov
out
mov
push
test
xor
cwtl
jmp
cmp
enter
sbb
add
xchg
sbb
jmp
sub
stos
xchg
fsubrp
inc
cs
inc
out
adc
inc
in
cmc
mov
jp
testl
sbb
lods
ret
mov
cmpsl
rcrb
inc
in
pop
movsl
movsl
xchg
jns
jbe
sbb
push
xorb
out
fwait
jge
imul
sbb
bound
or
push
into
jl
push
pushf
shlb
sahf
ss
and
sub
imul
call
test
or
jno
jge
inc
sbb
fs
clc
dec
sbb
in
add
inc
xchg
arpl
lds
jno
fsubs
push
push
pusha
lret
aaa
inc
lret
cmp
xchg
mov
and
dec
insl
cmp
imul
ljmp
cld
cmp
rcl
mov
aas
push
xchg
pop
push
dec
sbb
or
pusha
xlat
fistps
std
mov
dec
add
add
dec
sub
outsl
push
enter
jp
popa
pop
call
mov
in
sahf
nop
jg
mov
das
in
sub
sbb
test
iret
or
in
jno
or
push
mov
mov
mov
pop
mov
xor
test
nop
mov
clc
jecxz
fdivrs
or
adc
int
mov
mov
lahf
icebp
je
cmp
or
lods
jns
mov
movsl
cld
test
xchg
fisttpll
sbb
int3
cwtl
lcall
std
sub
int3
andl
cmp
inc
sbb
mov
out
push
cwtl
ja
fnstsw
cmp
jb
jbe
ja
std
mov
popl
aaa
sub
adc
xchg
cmovo
push
jg
inc
pushf
lock
lret
adc
sbb
adc
jo
out
jbe
ficompl
inc
and
cmpsl
mov
inc
sbb
and
jns
cwtl
andl
pop
fistpll
inc
scas
cmpsl
jns
and
hlt
bound
inc
mov
sub
ja
cmpsl
daa
leave
or
fs
scas
cmp
pop
sbb
mov
and
repnz
negb
push
adcb
es
bswap
xor
and
adc
sub
sub
jecxz
addl
leave
ds
adc
adc
adc
je
lods
pop
sub
into
fwait
enter
jns
jle
shl
sub
xorl
fadd
test
push
xchg
jge
mov
mov
inc
push
sub
or
cmp
pop
xor
xchg
ja
mov
fsubrl
cmpsb
gs
cmp
xor
xor
nop
mov
nop
jnp
js
inc
mov
insb
inc
sub
or
xor
mov
out
in
sti
lds
je
scas
add
aam
jle
imul
loop
fcomps
loop
in
out
jns
push
daa
or
bound
dec
inc
leave
pop
sub
sub
mov
mov
mov
jmp
xchg
leave
aas
ljmp
xchg
je
mov
movsb
push
rolb
and
xor
repz
pop
jo
fidivl
or
int3
aas
inc
jae
mov
push
jl
mov
es
jmp
pushf
add
sbb
roll
pop
dec
stos
xchg
stos
lock
lods
insl
loope
xchg
lods
shl
insb
add
fsubrs
pop
xlat
xchg
cmp
or
data16
adc
and
xor
adc
add
in
lea
sbb
lock
data16
sub
dec
int
push
std
inc
stc
in
adcb
cltd
rcrl
frstor
test
jae
dec
imul
cld
dec
jnp
xor
shrb
pushf
push
and
sarl
cli
in
dec
xchg
and
repz
arpl
or
fstps
or
mov
dec
adc
pop
lret
das
and
jp
mov
popf
popf
pusha
sub
add
jno
fsts
mov
fstpt
enter
aaa
push
aaa
es
clc
scas
imul
and
mov
test
inc
popf
dec
sub
mov
mov
mov
sub
stos
inc
out
and
int3
cmpsb
jecxz
dec
add
mov
imul
push
sbb
in
pop
shll
roll
jge
out
dec
xchg
loope
icebp
push
mov
repnz
or
or
xlat
fldl
jae
lret
jp
inc
mov
pushf
loop
mov
stc
jae
add
cmp
jle
push
mov
add
pop
dec
mov
hlt
stos
sub
xor
push
lock
lcall
lret
repnz
loope
ror
jl
sbb
xor
push
lds
test
lcall
shlb
sub
or
pop
lods
jp
sbb
xchg
fwait
stos
bound
les
fldl
push
fdivrs
push
pusha
mov
jns
clc
or
lahf
icebp
imul
fsubrl
in
test
roll
sub
in
ljmp
cmc
add
fsubrs
sbb
aam
out
jnp
xchg
jecxz
jns
push
cmp
mov
mov
mov
push
xor
mov
mov
sub
stos
ret
mov
lret
jnp
push
cmp
sbb
nop
enter
cmp
or
push
mov
xor
mov
movsl
xor
or
xlat
mov
fisubl
outsl
jbe
xor
aas
add
arpl
jecxz
jbe
ror
mov
mov
cmpsl
sub
push
loop
mov
mov
adc
mov
add
lods
call
jle
jmp
sub
nop
pop
jp
mov
xor
jg
insb
push
adc
aas
mov
push
mov
and
leave
rcr
icebp
sarb
sub
mov
sbb
lret
insl
pop
add
push
aaa
aaa
jecxz
adc
iret
ja
loop
pop
pop
sbb
push
add
cmp
lock
add
fucomip
mov
dec
cmpl
loop
xor
cmpsb
lods
hlt
loop
sbb
stos
jb
add
cmp
rcll
jle
xchg
in
mov
in
fsubs
push
jmp
add
pop
mov
dec
outsb
or
sti
xchg
jnp
leave
pop
pop
jmp
sbb
scas
je
shrl
lock
dec
roll
subb
pop
bound
mov
push
sub
mov
mov
mov
adc
pushf
arpl
shr
xchg
mov
mov
xor
mov
pusha
daa
hlt
add
out
out
call
rorl
and
xchg
and
pop
stc
addr16
mov
and
popf
and
dec
mov
lret
jno
sahf
sarb
xor
cmp
mov
adc
and
cltd
push
inc
test
sbb
fs
in
xor
sarb
rcll
dec
mov
adc
in
dec
inc
mov
into
jecxz
mov
cld
adc
pushf
add
sub
push
and
ds
mov
aam
cmpsl
fidivrs
nop
cmp
ficoml
sahf
enter
popf
not
or
dec
orb
and
enter
scas
in
lock
in
mov
outsb
pop
pop
pushf
pop
out
pop
mov
iret
fildll
fsubrp
test
pop
push
incb
dec
insl
or
sub
in
mov
int3
sbb
jno
rcll
pop
imul
inc
jp
mov
bound
push
mov
mov
out
inc
or
rclb
cmp
sbb
daa
xlat
shrl
cmpsb
out
ss
shlb
nop
sti
dec
out
adc
mov
cmp
dec
in
pushf
in
inc
sub
and
mov
mov
out
mov
cmp
pop
push
sbb
daa
add
fmuls
lods
pop
sub
lods
mov
mov
inc
lods
jbe
fsubr
or
inc
and
xchg
loop
cmp
das
sub
cmp
dec
cmp
adcl
lds
push
orl
xchg
gs
add
sbb
shlb
aaa
and
jl
ret
ss
jo
and
int3
jno
icebp
mov
dec
mov
sbb
or
cmpsl
repnz
mov
xchg
cld
aaa
scas
faddp
dec
adc
mov
and
sti
xor
xorl
clc
ret
and
leave
icebp
mov
jns
inc
jnp
ret
cmp
push
mov
mov
pop
mov
xor
data16
test
jnp
loope
rcll
xor
mov
fcomip
out
sub
fldenv
clc
mov
in
mov
push
sbb
ljmp
loopne
rorl
mov
and
mov
pop
lahf
ror
sarb
in
and
repnz
test
aaa
push
dec
mov
js
push
inc
sub
push
jo
inc
sub
insb
or
imul
ss
xchg
cmpb
push
mov
xchg
cli
clc
loope
add
push
stc
inc
mov
icebp
add
mov
and
inc
cmp
or
scas
lcall
push
push
push
inc
push
shrb
xchg
in
ss
mov
mov
js
daa
lea
sbb
mov
insb
mov
mov
in
mov
push
sub
xor
insb
int3
in
scas
int3
data16
subl
push
adc
pop
mov
cmc
jne
mov
js
outsl
dec
jle
inc
imul
iret
pop
in
in
sub
fistpl
adc
fmuls
jecxz
imul
andl
push
push
in
mov
js
inc
push
inc
push
sbb
cmp
movsl
add
adc
mov
ss
in
loop
pop
mov
push
sub
int3
je
and
inc
into
cmpsl
rolb
add
adc
pop
sarl
lret
std
inc
xchg
mov
jne
fiadds
sub
add
mov
dec
cmp
jb
shll
mov
je
xor
pop
stc
jb
fisubs
insl
dec
rcrb
sub
mov
xor
pushl
adc
imul
imul
mov
mov
clc
push
lods
mov
mov
insb
sbb
and
sub
push
push
test
jle
sub
dec
adc
cmpsl
int3
dec
les
dec
jle
in
pop
cmp
gs
repnz
inc
and
cmp
stos
mov
and
cmp
icebp
iret
mov
inc
inc
fcomp
aas
out
add
mov
xchg
jb
lcall
clc
xchg
idivl
aam
pop
lcall
test
xor
aad
xchg
xchg
lahf
pusha
clc
jae
clc
add
ds
in
jo
jne
dec
sbb
add
mov
addb
cmc
outsl
mov
lcall
adc
call
fdivrp
and
lea
sbbl
loop
pop
mov
mov
cmp
popf
adc
and
mov
dec
and
pop
cmp
in
push
int3
adc
pop
mov
enter
icebp
bound
enter
sbb
in
in
ljmp
adc
mov
inc
mov
out
mov
xchg
xor
jmp
shll
fnstsw
xchg
lock
in
aas
cltd
mov
xchg
gs
pop
aam
cli
jo
xchg
jbe
popa
inc
xchg
movsb
rorl
aam
ds
xchg
push
enter
add
dec
jl
xchg
aam
test
mov
jns
sub
out
push
outsl
jmp
or
imul
cmp
out
dec
incb
sbb
mov
push
das
sbb
test
cmpsb
daa
jne
sbb
test
mov
gs
push
mov
and
nop
bound
repz
mov
insl
pushf
leave
loope
xor
sahf
xchg
push
jmp
insl
fwait
jmp
pop
mov
arpl
cmp
adc
jns
fcos
sbb
cmpb
insl
inc
push
push
mov
fcmove
mov
aad
out
dec
iret
leave
stos
inc
jae
ret
add
ror
jns
lds
dec
out
ja
push
out
dec
es
stos
push
sub
and
mov
xor
loop
popf
in
daa
loope
lret
testl
aas
cmp
aaa
movsl
mov
and
repnz
jmp
in
jp
xchg
jecxz
add
sarb
sub
aad
mov
movups
mov
insb
test
fdiv
ds
jmp
push
inc
dec
sub
clc
std
outsb
scas
inc
pop
lods
xor
in
hlt
incb
loopne
xor
jb
int
lret
lret
jmp
movsl
dec
ljmp
sahf
std
incb
test
add
xchg
ljmp
jno
push
mov
push
jno
stc
mov
in
stos
adc
push
adc
lret
insl
fstpt
ja
sar
int3
xor
out
and
sbb
adc
sbb
or
jbe
push
adc
mov
inc
add
lock
fs
push
ds
out
scas
pop
jle
nop
xchg
rdtsc
in
mov
loop
shrb
insl
adc
leave
xchg
adc
hlt
lock
rol
daa
int3
cld
es
add
jmp
jl,pt
inc
jno
xor
pop
jnp
sub
jge
out
scas
sbb
push
sarb
mov
mov
fbstp
xchg
xchg
and
and
dec
xor
sbb
das
addb
cltd
test
mov
lock
jbe
cmp
popa
hlt
lcall
jmp
inc
roll
push
in
lods
aam
sbb
inc
xchg
imul
ret
mov
scas
int
cmp
push
pop
push
or
vmwrite
add
js
xor
call
mov
mov
jmp
push
cmp
cmp
sbb
mov
push
mov
cmp
mov
add
cmpsb
fists
dec
ja
mov
popa
mov
cmp
cmp
push
mov
pop
mov
mov
das
stc
call
push
shr
adc
loop
in
add
ss
ja
add
jle
push
jns
test
add
jno
pusha
repz
add
mov
sbb
sbb
mov
cmp
leave
sti
jle
outsb
inc
fdivl
xlat
ds
mov
push
dec
into
push
add
push
inc
pop
in
jno
add
stc
pop
cltd
cmp
into
outsl
mov
test
nop
lea
aad
es
mov
ja
rolb
mov
dec
cs
mov
mov
mov
idivb
cs
xchg
cwtl
push
or
rclb
sbb
push
xchg
lods
ds
testl
popf
ficoms
mov
int3
aam
fmull
mov
pop
ret
icebp
lahf
dec
test
mov
aam
inc
je
pop
jno
test
in
fidivrs
jbe
jle
mov
xchg
clc
andl
xchg
and
xor
shrb
test
into
xchg
sbb
jle
mov
jg
add
adc
mov
jo
imul
test
jle
add
add
insb
and
negb
mov
loope
test
xchg
cmpl
cmp
fmulp
clc
inc
sub
out
inc
or
sbb
pop
xchg
or
mov
jne
lea
sub
and
dec
push
cmp
push
dec
stos
inc
mov
imul
sti
mov
lea
mov
pop
lret
adc
push
aas
jnp
and
push
into
aad
inc
pop
lcall
mov
or
hlt
repnz
daa
sub
adc
dec
dec
ljmp
and
aas
adc
imul
lahf
push
pop
lods
mov
ret
scas
pop
add
andl
mov
xor
popa
mov
cmp
and
sub
aam
into
shll
push
dec
xor
lods
divb
sahf
cmp
shl
in
divb
popa
in
mov
pop
sub
in
add
add
aad
enter
daa
aam
push
xor
bound
dec
cld
sbb
outsb
sbb
outsl
pop
inc
xchg
sbb
sbb
jae
push
pushf
js
adc
cli
jmp
xchg
lret
dec
cmp
movsb
pusha
mov
pop
mov
js
mov
mov
push
pop
shlb
sbb
cmp
fimuls
movsl
or
xchg
add
push
imul
dec
dec
shlb
push
aaa
xchg
ret
mov
or
sbb
fwait
stos
repz
mov
xchg
jl
imul
repz
jl
addl
dec
mov
inc
negb
dec
add
xchg
outsl
arpl
mov
xor
push
jno
insl
mov
cmc
jne
jecxz
pop
stos
icebp
and
mov
cmc
cmpsl
xchg
or
nop
xchg
out
cmc
jno
inc
mov
nop
stos
jne
sub
inc
dec
ret
lock
push
xchg
ljmp
es
sub
sbb
cmp
nop
jg
outsb
mov
int3
aam
mov
cmc
popa
not
mov
and
cmp
testl
and
mov
aad
add
in
cmp
popa
inc
rclb
pop
sbb
sbb
xorl
es
xchg
adc
sahf
ja
add
js
jno
ffreep
sub
push
push
or
je
rcrb
sarl
sub
mov
add
loope
jge
inc
xchg
push
dec
mov
push
jl
pushf
mov
or
jb
hlt
xchg
xlat
outsl
int
jmp
in
sub
mov
leave
xlat
stos
cs
les
push
jp
jge
sub
cmp
lods
push
cmp
icebp
dec
nop
or
and
icebp
xchg
in
loope
pop
fwait
fwait
imul
xor
xchg
enter
iret
xlat
mov
dec
les
pop
lods
mov
int
sbb
dec
jo
mov
mov
inc
fcomps
sti
jnp
movsl
push
pop
ret
mov
addr16
or
enter
jecxz
adc
dec
jl
xor
rorb
hlt
adc
js
adc
mov
nop
in
js
mov
jbe
pushf
cmpsl
sbb
in
fidivrs
int
lret
mov
bound
sub
dec
ret
ficoml
test
xchg
adcb
push
fstpl
clc
cs
movsl
pause
es
adc
xchg
xor
movsb
bound
fstp
loopne
cs
xorl
xchg
in
add
pop
sahf
lds
in
adc
or
and
sub
mov
or
jmp
inc
mov
repz
lea
jp
fdivr
sahf
inc
aaa
xor
xor
cmp
cmp
jmp
in
cwtl
jmp
inc
and
movsl
icebp
pop
add
push
fcmovu
int3
push
int
ret
lcall
sub
insl
in
jg
push
mov
shlb
jb
aaa
stos
jnp
add
pop
and
out
inc
loop
xlat
push
push
xchg
flds
shrl
movsb
pushf
and
mov
aad
add
xchg
add
cmpsl
ljmp
roll
nop
or
jns
mov
xchg
cmpsb
ss
pop
cmc
sub
mov
loop
cmp
or
sub
push
add
jae
fwait
sti
sar
pop
js
jge
mov
je
inc
jle
xchg
rclb
icebp
repnz
je
sahf
xor
pop
xchg
sbb
mov
jb
push
xor
mov
es
into
jbe
add
outsb
push
cltd
pusha
push
pop
push
loopne
xchg
dec
and
push
cmp
in
bound
scas
jno
mov
das
or
sahf
mov
pushf
sub
sub
xchg
push
sub
pop
mov
loope
int3
nop
fstpl
out
ss
int3
aam
cmp
es
or
cltd
cs
arpl
mov
or
and
push
pop
and
fiaddl
xchg
lock
out
lahf
cmc
inc
or
ja
daa
not
out
mulb
pusha
xor
and
cmp
dec
hlt
sbb
dec
jge
sti
inc
fs
inc
mov
test
aad
out
sbb
pop
rol
pop
mov
into
pop
icebp
add
mov
sahf
popa
repz
fcompl
aaa
jl
lcall
es
loop
mov
or
adc
inc
inc
imul
mov
daa
mov
push
cmpsb
addr16
clc
les
sub
fisubs
fwait
mov
add
or
stos
add
xor
clc
push
aam
push
push
sahf
cmc
daa
pop
lahf
mov
jb
push
lahf
cmpsl
jge
cmp
pop
int
and
mov
jno
scas
and
cmp
call
push
jp
out
in
sub
cmpsl
lcall
es
movsl
stc
sarl
xchg
mov
das
add
insb
lds
cld
fwait
in
and
jnp
adc
push
shlb
dec
mov
aas
dec
mov
insl
or
mov
mov
rcll
jmp
stos
push
jmp
imul
jle
push
test
dec
inc
pop
push
cli
mov
jp
push
shlb
sub
push
loop
in
sbbb
imul
clc
pop
shll
faddp
daa
sbb
push
mov
stos
jne
push
sbb
cmp
and
adc
stc
test
js
push
push
mov
loopne
or
pushf
repz
mov
in
and
push
out
into
sahf
loopne
pop
xchg
push
dec
pop
dec
loopne
iret
sub
outsl
movsb
sar
fwait
sbb
xchg
loope
les
js
push
cmpsl
rorb
mov
fistpll
aaa
add
adc
sbb
lock
into
rcr
pushf
sbb
cmp
inc
std
dec
mov
int
int
stos
mov
pop
jmp
cli
pusha
xor
das
dec
mov
xor
pushl
jp
pop
out
mov
cmp
add
xor
push
imul
cwtl
out
cmpsb
jg
pusha
or
addr16
mov
loope
or
insl
fdivl
mov
ret
fwait
and
mov
jle
mov
mov
and
bnd
inc
sbb
sti
outsl
cmpsl
stos
cmp
push
enter
je
sbb
xor
fcoms
bound
or
cmovp
mov
pop
or
sahf
out
xchg
push
cwtl
sub
repz
inc
testl
jnp
pop
jl
pop
cmp
sahf
mov
adc
loopne
mov
add
sti
jl
mov
dec
or
cld
sti
mov
jo
pusha
iret
clc
pushf
bound
or
mov
bnd
push
aad
push
jle
push
jne
andl
popf
jmp
das
dec
mov
cs
mov
inc
aas
and
lcall
push
fstenv
mov
cli
popa
imul
fiaddl
test
idivb
lcall
mov
lret
imul
mov
rcll
jecxz
mov
jo
rorb
repz
in
xor
dec
add
das
and
inc
dec
iret
mov
push
dec
add
lcall
loop
xor
cltd
popa
insb
jo
xchg
add
jne
mov
inc
je
add
ja
lret
shlb
inc
stos
sub
stc
mov
mov
es
push
sub
lret
cmp
call
arpl
mov
inc
pop
sub
aam
rcrb
bound
xchg
fldl
jmp
rorb
mov
jns
inc
mov
or
inc
test
pop
nop
pop
xchg
outsl
fcompl
push
pusha
jns
add
loop
push
sbb
push
cltd
out
or
mov
shrl
mov
call
sbb
mov
xchg
shrl
mov
xchg
xchg
push
sahf
inc
test
ds
sbb
sbb
inc
push
pop
call
dec
mov
cmp
cmp
lds
idivb
fisubrs
cmpsl
sub
jg
inc
test
subl
pusha
repnz
test
add
sbb
test
lret
test
popa
push
fsubp
mov
adc
nop
mov
mov
push
pop
out
sbb
outsb
cmp
shlb
dec
js
popw
pop
cmpsl
mov
cmc
arpl
in
pop
xchg
jmp
xchg
xchg
mov
xor
mov
add
insb
das
in
cmc
jne
adc
pusha
imul
testl
stc
add
xchg
aad
push
and
mov
push
je
push
fwait
pop
shr
mov
xchg
dec
sbb
lock
mov
jo
inc
or
xor
pop
leave
mov
add
sub
jne
add
adc
popa
mov
loope
mov
xlat
int3
rclb
data16
and
adc
xor
nop
test
or
jo
sbb
xor
in
cmp
adc
mov
push
mov
cmp
rcl
inc
and
jno
or
and
xor
daa
in
sbb
fwait
or
push
pop
cs
adc
adc
outsl
jae
and
lock
js
and
sbb
or
negl
dec
fucomp
mov
data16
loope
xchg
and
pop
pop
out
repz
scas
fsubrl
xchg
movsb
popf
stos
pushf
daa
shr
ja
xor
mull
aas
je
sub
out
lds
or
fisubrs
ret
je
xlat
out
arpl
inc
sbb
jge
xor
out
jne,pn
movsl
cmp
cmc
dec
cmpsb
loop
inc
movsb
subl
cmp
cmp
fldenv
dec
push
jmp
ss
cld
jns
or
adc
outsl
xchg
andb
pop
or
push
andb
or
adc
xchg
das
mov
jo
testb
fidivrl
loope
pusha
cmpsb
jne
or
jns
outsb
inc
inc
dec
xchg
insb
clc
sbb
and
sbb
decb
mov
mov
adc
sahf
cmp
arpl
in
sub
lcall
add
cmp
cmp
clc
nop
dec
sbb
inc
mov
dec
fwait
sbb
or
pop
int3
jmp
ret
out
mov
xchg
mov
movsl
mov
push
dec
jmp
fs
sub
pushf
sub
lret
or
push
clc
in
inc
cli
cwtl
push
and
dec
push
test
in
sbb
add
sub
out
mov
stc
test
in
dec
daa
test
jp
in
xor
push
or
outsl
ret
gs
mov
push
cmpsb
mov
dec
jbe
movb
cld
xchg
scas
arpl
lret
add
mov
mov
jno
push
xchg
or
inc
add
icebp
mov
in
iret
sbb
jg
cs
rclb
mov
popf
rorb
scas
loopne
or
sub
mov
mov
pop
lea
pop
or
mov
jg
fdivrl
sahf
sbb
cmpsl
test
repz
sub
enter
shrb
add
scas
into
add
jg
push
push
negb
sbbl
out
sub
subl
pop
int3
call
adc
pop
jge
dec
dec
fs
push
pop
mov
andb
fldl
cs
popf
lods
xchg
lcall
cmp
cmpsl
add
outsl
nop
cmp
mov
out
adc
pop
negb
ret
je
mov
push
inc
out
mov
mov
out
hlt
fldcw
pop
jae
fnstenv
sub
or
jecxz
push
pop
push
and
out
adc
fcoml
pop
pop
sub
adc
cli
sbb
loopne
or
fistl
incl
insb
push
hlt
xor
dec
test
jle
sbb
push
sub
shrb
cmc
out
add
inc
add
sti
mov
pop
pusha
ret
out
jmp
jge
fld
mov
shlb
jae
push
test
xchg
cltd
lea
xchg
nop
in
movl
inc
sbb
popf
fbld
rcl
mov
int
lret
mov
add
hlt
shlb
jg
mov
loopne
inc
mov
mov
fs
mov
dec
fisttps
push
lahf
inc
jl
insb
cld
and
pop
jecxz
mov
push
cmc
iret
clc
xor
pop
mov
mov
cmp
pop
call
cmp
xor
jl
adc
mov
movsl
movsb
aam
cmpsb
ds
fbld
mov
cmp
subb
push
out
clc
aam
mov
cmc
adc
pop
out
or
imul
and
cmp
dec
xchg
stc
fidivs
rol
nop
xchg
mov
cwtl
clc
dec
sbb
orb
enter
dec
xchg
je
mov
das
bound
decl
pop
into
sbb
in
in
pop
cld
das
sub
push
fcomip
xor
pop
test
adc
scas
addr16
lds
adc
adc
sub
jnp
sub
or
lahf
mov
jns
push
mov
xchg
in
shlb
jge
enter
jmp
sbb
mov
movb
pop
push
int
flds
popf
add
xchg
push
fcmovbe
sbb
xchg
jns
jns
xchg
loop
and
dec
popf
and
addr16
fistps
aad
int3
sub
dec
push
fldl
dec
imul
loope
into
add
jmp
outsl
sbb
pop
and
sbb
aaa
inc
dec
inc
pop
iret
or
fstl
mov
jp
push
pop
add
shlb
std
shlb
imul
ljmp
mov
jae
cmp
inc
mov
sbb
push
and
jns
pop
xchg
lcall
xchg
inc
dec
std
xchg
sbb
lods
push
fisubl
inc
mov
xor
cmpsb
lods
call
mov
hlt
sbb
call
jne
pop
jge
iret
mov
jl
daa
cmc
push
mov
jo
or
add
sbb
out
pop
mov
mov
scas
push
stos
sub
mov
cmp
xchg
inc
mov
cmpsl
xchg
mov
hlt
movsl
or
aad
pop
push
in
shrl
push
fs
or
push
jne
stos
arpl
sub
je
pop
imul
lods
xor
lret
aas
xor
std
sub
jne
loope
or
test
fimull
pop
test
int
test
cmp
ss
and
mov
add
shl
push
test
popf
sbb
dec
lea
push
and
or
xchg
mov
push
test
arpl
fcompp
mov
inc
xchg
sti
neg
push
dec
inc
js
shrl
xor
lret
je
shlb
lahf
ja
sbb
shll
aas
mov
lcall
mov
xor
ret
cmp
mov
stos
inc
lret
xchg
cmp
mov
sbb
hlt
lds
xor
sbb
jno
rorl
pop
and
repnz
push
adc
gs
push
xor
push
adc
loop
cltd
xchg
jp
fmull
cmpl
and
and
movsl
lcall
lds
in
inc
add
shl
shl
stc
sub
cld
push
scas
sti
mov
sub
popf
fdivp
lcall
jle
ljmp
addr16
jl
orl
int3
sti
mov
pop
movsb
push
rol
in
jl
addr16
gs
mull
repnz
leave
pop
cmp
pop
out
call
shrb
fmuls
daa
stos
sub
jge
leave
xchg
pop
int
clc
std
pop
hlt
inc
stos
mov
fwait
insl
mov
mov
sub
sub
jbe
lret
enter
js
out
in
xchg
mov
insl
cmpsl
roll
cmpsb
sbb
adc
mov
nop
lret
jno
cmp
shlb
push
test
rcrl
jp
fcoml
adc
jmp
repz
clc
dec
xchg
sub
mov
es
movsl
cmp
xor
lcall
frstor
jp
aad
mov
sbb
repnz
subb
mov
shrl
jl
in
fucomi
and
or
ljmp
jne
pop
outsl
test
mov
shrl
mov
lea
lret
xor
sbb
fcompl
dec
mov
dec
or
in
jns
int3
movb
int3
adc
adc
cmpsl
shlb
dec
lahf
push
popf
mov
ret
hlt
pop
push
js
dec
xor
cli
cld
xor
in
mov
push
mov
ds
not
add
out
incb
jne
enter
mov
in
sub
mov
loop
idiv
sub
aam
push
cld
fnstsw
xor
xor
jp
xchg
xor
rclb
lahf
out
aad
inc
out
jmp
jns
fwait
cmpb
aas
sbb
outsb
iret
imul
cmpsl
xchg
ret
xor
mov
add
outsl
push
xchg
jae
and
or
xor
popf
sbb
pop
test
push
test
push
mov
outsb
fwait
and
xlat
pop
push
xchg
xchg
into
cmp
jno
imul
faddp
push
mov
pusha
das
sbb
das
push
or
push
pushf
and
sbb
fcmovne
add
mov
dec
add
adcl
jmp
arpl
lods
mov
sbb
iret
jge
sub
adc
pop
and
add
lret
daa
xor
xor
scas
adc
cmp
inc
add
aaa
adc
jmp
fcmovnu
mov
xchg
jo,pt
fldcw
out
push
scas
lret
jo
and
mov
sub
or
and
cwtl
mov
adc
mov
or
cmp
cmp
cld
and
inc
repz
adc
lcall
mov
mov
jge
out
adc
in
jle
or
ret
inc
lds
rolb
push
add
push
outsb
mov
mov
or
iret
xor
daa
pop
dec
jl
scas
outsl
fistl
add
pop
adcl
jns
insw
pop
inc
lret
andl
add
and
call
popa
flds
data16
jbe
in
or
xchg
loope
xchg
inc
push
push
loop
sbb
cwtl
loopne
add
test
mov
inc
ss
shlb
xlat
xor
dec
outsl
test
in
sar
xor
sub
popf
insl
insb
imul
subl
push
daa
lcall
cmc
loope
xchg
je
addr16
mov
cs
mov
jbe
xchg
mov
lahf
pop
fwait
cld
sub
cmpsl
popf
and
and
push
call
and
mov
out
mov
sbb
push
and
bound
inc
push
pusha
or
lds
jae
divl
and
and
xchg
std
mov
jecxz
push
in
xorl
loopne
lea
or
lods
xor
push
mov
add
dec
dec
das
dec
cltd
xchg
dec
sub
adc
inc
push
lods
pop
incb
cmpsb
mov
pop
push
call
enter
loopne
insb
push
mov
ja
cmc
mov
les
bound
out
imul
mov
je
add
pop
lea
xor
adc
test
jnp
inc
sbb
push
sub
and
js
subb
pop
adc
sub
sti
stc
test
sahf
add
ret
jb
test
cmp
testb
mov
cltd
pusha
dec
jno
cmp
sub
xlat
dec
push
ror
sub
dec
push
and
mov
adc
cmpsl
outsl
sub
push
loopne
sbb
je
jb
nop
jb
pop
and
sti
inc
imul
out
or
scas
aaa
mov
jp
cmp
cmp
xchg
outsl
daa
and
icebp
add
lods
xchg
jle
iret
cltd
aam
inc
idivl
lods
or
inc
or
inc
imul
or
cmpsl
test
cmp
jmp
shlb
push
mov
inc
mov
sub
xchg
fsubl
xor
jmp
mov
lret
cmc
cmpsb
push
mov
sarb
xchg
mov
mov
lcall
gs
movsb
rclb
add
gs
in
sub
mov
out
push
mov
mov
and
popf
mov
cmc
xor
xchg
movsb
in
mov
and
mov
add
or
mov
stc
xchg
pop
shll
scas
stos
and
inc
mov
cmpsb
inc
std
test
test
addr16
loop
popa
cmp
int
pop
pop
xor
insl
add
ss
rol
mov
mov
jg
out
adc
lods
inc
sbb
and
repz
mov
lods
aad
or
jbe
push
add
jp
sbb
mov
sbb
icebp
adc
clc
sub
cltd
pop
divl
dec
xor
repz
inc
push
xor
fnstsw
adc
out
sbb
insb
mov
scas
in
mov
adc
mov
stos
cmp
xor
and
sbb
or
das
packuswb
test
jg
pop
daa
je
addr16
inc
xor
adc
adc
lret
pop
shl
cmpsl
push
imul
push
xor
jl
shll
outsb
jle
push
mov
dec
push
sti
or
ja
or
inc
enter
cmp
int
and
rcl
lds
cmpsb
add
fsubl
cwtl
xor
mov
leave
and
and
push
out
adc
sbb
mov
mov
xchg
fs
dec
outsb
in
and
in
pop
ss
cli
mov
mov
pop
push
sbb
lods
jno
test
cmp
and
hlt
pop
mov
mov
push
xor
xor
outsl
jno
js
divw
mov
fsubrs
pop
out
insl
popf
lods
jae
push
test
sbb
fiaddl
ret
lods
mov
cmp
int
sbb
std
inc
jb
pop
shrl
pop
mov
xor
mov
hlt
inc
cmp
and
rclb
push
lea
jge
mov
mov
xchg
fdivrl
and
loopne
xchg
bnd
sahf
inc
into
cli
push
jbe
icebp
int3
adc
aas
mov
pop
mov
pop
push
dec
mov
shrl
mov
sub
adc
mov
inc
popa
stc
cmp
mov
inc
int3
mov
or
mov
test
dec
push
xchg
cld
inc
xchg
inc
pushf
dec
pop
sub
push
push
xor
bound
lds
and
fdivl
sbb
test
mov
jno
rorb
sbb
pop
rcll
add
loope
ds
push
js
cmp
sub
mov
xor
out
pop
xchg
fcmove
dec
bound
fdivs
pop
sbbl
aad
push
xchg
cli
enter
cmp
loope
and
cmpl
jno
dec
pop
push
jno
fisubl
jns
stos
sahf
fdivrs
mov
xchg
stc
and
pop
pop
cli
and
dec
sar
add
hlt
or
int3
lock
pop
std
cmp
pop
sbb
dec
fcmovu
mov
leave
divb
inc
inc
cmp
mov
nop
std
sahf
sbb
fistps
mov
xchg
jmp
mov
loop
jmp
imul
notl
out
scas
leave
ficoml
mov
lret
sub
vpand
ret
xchg
stos
imul
pop
iret
cwtl
repz
out
xlat
popf
push
lcall
adc
fistps
mov
jmp
mov
mov
or
mov
and
sub
aas
pusha
sbb
lea
fs
in
cmp
sti
je
cltd
inc
xor
hlt
push
iret
subb
hlt
pushw
xchg
jl
ss
dec
js
mov
ds
mov
mov
xchg
pop
inc
ficompl
push
pop
ljmp
out
pop
in
inc
nop
ss
pop
xchg
jmp
shlb
sbb
out
push
fwait
add
das
push
arpl
in
rorl
cmp
jbe
add
adc
lds
je
mov
cmp
dec
in
jl
std
jp
jge
inc
mov
xor
jp
and
sub
pop
pop
cmp
or
or
sub
and
pop
fwait
rolb
in
add
icebp
ss
ja
push
les
ja
push
js
mov
into
xchg
mov
cwtl
inc
mov
mov
fbld
pop
mov
jge
pop
mov
mov
into
loopne
mov
pop
jnp
cmp
test
aam
push
rorl
decb
xchg
sbb
es
jle
add
inc
add
arpl
cmpsb
cmpsb
mull
mov
icebp
push
sbb
aaa
xchg
xlat
ret
ficompl
cmpsl
jno
jmp
icebp
movsl
xchg
loop
lret
lcall
or
bound
mov
out
cmc
push
mov
js
sub
xor
adcl
jle
movsb
fdivr
ret
jmp
mov
in
push
or
fldl
outsl
aaa
data16
mov
jp
mov
iret
inc
push
push
in
dec
lahf
imul
imul
cmp
push
test
add
inc
pcmpeqd
xor
xchg
and
dec
dec
add
shrl
ficoms
out
outsb
and
mov
cld
cmp
lahf
inc
cmp
dec
lea
sub
and
inc
gs
popf
jmp
cmc
sub
xlat
jns
xchg
pop
add
mov
popf
adc
jp
jl
cmp
mov
loopne
ret
jae
mov
pop
ret
mov
sub
sub
jne
loop
cld
pmaddwd
dec
xlat
mov
mov
sarl
popa
push
dec
fildl
and
shll
cltd
fs
repnz
add
mov
push
or
rolb
ret
lods
cmp
mov
pusha
adc
and
cmp
lea
lss
pop
mov
popa
push
push
cmp
in
test
jne
sub
lret
add
inc
adc
cmp
xor
mov
jecxz
loopne
popf
mov
ret
in
leave
mov
and
mov
js
sbb
shll
jne
cmp
pop
xchg
aad
mov
pop
cmp
jmp
test
fcom
add
xchg
adc
add
stos
cmp
inc
mov
popa
imul
into
mov
dec
movsb
mov
lds
test
stc
cmp
cmp
dec
inc
or
lret
adc
xchg
push
jecxz
mov
test
hlt
mov
imul
cmp
popa
scas
xchg
or
pop
cmp
ret
sub
xchg
and
push
push
icebp
pop
inc
imul
call
hlt
xchg
or
movsb
add
dec
xchg
fs
inc
mov
inc
sahf
scas
mov
imul
lea
cltd
sbb
mov
rolb
mov
mov
sub
mov
xor
or
add
mov
mov
adcl
daa
add
cmpsb
aam
jle
addr16
aas
mov
cli
jmp
inc
clc
jg
jle
out
or
sbb
into
adcb
mov
js
inc
loopne
push
enter
mov
cltd
push
outsb
or
cltd
sbb
mov
test
hlt
push
int
dec
cltd
mov
addl
test
lret
lahf
or
pcmpgtw
lahf
mov
std
in
imul
cmpsb
mov
jne
dec
rorl
test
aaa
and
data16
xchg
mov
test
lods
in
pusha
push
add
mov
out
mov
jge
daa
pop
adc
push
jo
ret
or
pop
jnp
jmp
adc
jo
cltd
push
push
push
call
sub
push
cmp
movsbl
jo
mov
mov
adc
into
jle
aad
dec
sub
sbb
pop
dec
adcb
shr
sbb
dec
mov
inc
xor
cld
dec
stos
lcall
mov
or
fistpll
movb
jnp
or
andb
daa
inc
push
cli
hlt
mov
jae
inc
test
lahf
pop
and
dec
jmp
lret
iret
divl
cld
mov
or
add
scas
mov
leave
sub
push
pop
call
and
rcrb
mov
mov
daa
inc
add
loopne
sub
xchg
sub
stos
pop
dec
nop
pusha
ja
in
faddp
mov
inc
mov
pop
push
cmp
jnp
xchg
fcompl
pop
fistl
aam
push
sti
sub
dec
in
cmp
rorb
pop
mov
shrb
insb
xchg
jmp
pop
aas
add
and
clc
aas
mov
std
out
jp
insb
in
setne
and
and
call
sahf
ds
out
inc
xchg
leave
mov
xchg
lcall
out
jp
pop
lock
sbb
in
fwait
xor
loopne
cwtl
pop
mov
divb
xchg
repnz
mov
imul
sti
call
sbb
insl
insb
jmp
xor
lods
inc
cmp
adc
fldenv
in
or
out
pop
idivl
mov
aad
pushf
xor
pusha
inc
mov
mov
cs
test
fsubrp
addr16
insl
xlat
aad
mov
pushf
cmp
push
xchg
test
out
aam
les
inc
imul
ficomps
idivb
mov
sbb
jmp
push
adc
arpl
or
pop
es
fwait
adc
mov
sbb
ret
call
in
pushf
mov
mov
xor
mov
add
xor
and
mov
or
in
lods
shlb
loope
cmp
aam
enter
add
inc
mov
je
daa
jg
les
addr16
add
outsl
mov
adc
cmpsb
inc
jle
imul
pop
fidivs
andb
dec
decb
out
mov
ja
rcrb
inc
call
and
imul
cltd
and
mov
ret
sub
mov
sbb
sahf
es
dec
jnp
add
movsb
add
add
inc
and
push
xchg
testl
pushf
dec
scas
xchg
cmpsl
aas
xchg
jecxz
fbld
test
test
mov
dec
ss
addr16
pop
jg
sbb
push
mov
jae
in
mov
xlat
out
addr16
sbb
inc
data16
or
sarb
and
xor
cmp
add
xchg
fwait
pop
sub
negl
mov
cmp
loop
out
fldl
dec
aas
fld
cmp
xor
cmp
divl
subb
sub
push
jl
lahf
fldl
adc
jo
jns
aaa
push
mov
mov
push
addr16
or
cltd
out
hlt
scas
pop
pop
insl
inc
cmc
adc
pop
xchg
and
and
sbb
push
push
mov
cmp
xor
stos
inc
lcall
mov
sti
dec
push
jns
add
mov
shll
sub
or
and
push
imul
cltd
imul
xor
mov
jle
fimull
outsb
xor
mov
sub
hlt
push
jmp
mov
push
mov
out
clc
outsb
mov
dec
insb
test
push
pusha
aas
sub
and
bnd
cmpsl
sub
lods
push
dec
mov
clc
sub
and
popf
dec
sbb
lcall
les
fcoml
jnp
mov
iret
enter
push
aam
ret
es
sub
int3
dec
aam
xor
jae
clc
pop
lea
xchg
repz
and
jne
pop
adc
push
push
rcr
jae
ss
pop
pop
adc
fsubrp
sub
mov
jb
mov
dec
stc
das
cmpsl
xchg
daa
inc
fidivs
mov
mov
pop
push
in
dec
fiadds
pop
cmp
fiaddl
and
fcmovnb
pop
imul
in
push
repnz
or
iret
dec
and
mov
call
sub
jae
add
push
inc
dec
fadds
testl
loope
ds
enter
arpl
rcl
push
sub
sub
hlt
je
jle
fcomi
and
ds
jae
fistps
dec
jae
jecxz
test
adc
push
divl
popf
jecxz
add
adc
inc
es
in
rcrb
adc
sbb
ret
cli
sub
mov
or
and
sub
pop
int
push
inc
add
cmp
scas
fnsave
mov
test
ret
sbb
inc
stos
dec
sub
xor
xlat
pop
mov
push
mov
loope
ds
addr16
pop
jns
and
and
sub
les
mov
out
mov
push
bound
pop
pop
lret
xchg
push
add
dec
sub
ljmp
push
cvttps2pi
sbb
aad
sarb
cmp
add
adc
sub
sub
dec
mov
push
roll
push
rcl
stc
fldenv
mov
cwtl
and
cli
mov
cwtl
mov
std
lahf
mov
xorl
rcl
jbe
jo
sbb
hlt
sti
sub
jg
cmp
popf
les
rclb
shrb
test
inc
addb
ds
cltd
hlt
das
sbb
arpl
data16
mov
cwtl
fstpt
fmull
add
jge
xor
pop
jns
sub
insb
push
pause
push
icebp
mov
xor
popf
lods
inc
iret
xor
sbb
or
nop
add
inc
mov
fsubrs
sub
inc
fstl
dec
pop
rol
in
push
xor
dec
or
pop
xchg
jg
gs
add
test
iret
cmc
data16
cs
outsb
gs
and
sbb
pop
mov
xor
add
jg
in
mov
add
fcomp
lock
inc
push
lar
push
loop
adc
sti
and
icebp
or
mov
xchg
daa
hlt
inc
mov
clc
lock
js
adc
mov
ffree
addr16
das
cwtl
add
pop
fidivl
test
mov
mov
and
jno
cmc
dec
mov
or
ja
add
mov
pop
out
mov
sbb
ja
fiaddl
sbb
into
pop
jecxz
mov
outsb
shll
out
js
add
pop
dec
xchg
sbb
mov
xlat
pop
mov
jp
push
js
lods
imul
repnz
out
je
vpshab
clc
inc
and
ljmp
or
in
xor
sbb
xchg
mov
pop
mov
push
divl
pop
and
mov
mov
pop
inc
mov
aaa
popa
mov
and
add
lret
pop
jecxz
repnz
xchg
pusha
les
ret
xchg
lds
repnz
adc
movsl
push
mov
out
fsubs
test
jnp
sub
and
test
sahf
cs
mov
in
popf
stc
stos
out
ret
fimuls
orb
lds
push
les
repz
fldenv
lea
movsl
push
pusha
popa
cwtl
leave
outsb
push
negb
or
pushw
daa
mov
dec
pop
out
in
mov
mov
cmp
insb
sti
pop
movsl
mov
pop
and
mov
rorl
dec
std
inc
sub
rorb
push
mov
in
scas
sahf
sbb
add
dec
mov
fdivl
repnz
sub
testl
xorl
loop
mov
fistpll
scas
inc
je
mov
in
lret
jnp
xchg
test
lea
mov
or
and
sbbl
push
pop
mov
sbb
mov
or
push
jp
in
cmp
faddl
mov
movsl
jl
push
fwait
add
gs
pop
and
dec
jo
push
mov
in
mov
sbb
into
xchg
jge
mov
mov
cmpsl
dec
into
mov
add
inc
jnp
mov
rorl
mov
repnz
jecxz
cltd
je
xchg
xchg
leave
and
add
add
inc
inc
jmp
mov
aad
mov
fdivl
in
pop
or
sbb
insl
decl
xor
scas
fwait
and
call
dec
loop
movsl
sub
mov
adc
arpl
cli
mov
push
pop
pusha
sub
pop
jb
xor
xchg
jns
or
incl
mov
imul
xor
push
sbb
xor
sub
mov
insl
popf
scas
fidivrs
pop
mov
in
inc
sub
das
cmp
and
sbbb
gs
mov
add
jno,pn
pushf
sub
repnz
and
test
test
mov
push
or
sub
hlt
dec
dec
sbb
out
dec
mov
cli
cld
int3
aad
jnp
add
cs
arpl
iret
or
ss
push
loop
scas
iret
pop
scas
cmp
in
negb
adc
shlb
fcompl
clc
pop
lock
push
in
pop
jp
fcoml
xlat
lock
lods
sbb
ljmp
mov
mov
fwait
lahf
pop
fsubl
dec
sbb
xchg
outsl
inc
cmp
test
mov
cs
adc
xchg
out
stc
sub
notb
inc
mov
idivb
mov
out
pop
clc
ljmp
rcrb
sti
sub
cld
stos
loop
xchg
sub
dec
lahf
repnz
adc
sbbb
mov
jno
fcomip
mov
imul
aad
push
xchg
push
loope
xchg
popa
lahf
and
cld
xorl
sbb
in
sti
insb
and
dec
dec
loopne
mov
push
cwtl
scas
sahf
push
sbbl
and
pop
push
lds
inc
add
bound
xor
push
jnp
add
adcb
mov
jg
mov
call
ljmp
adcl
dec
xor
cmp
mov
dec
add
mov
xorl
and
inc
jmp
pop
outsb
loop
adc
sub
dec
loope
xor
mov
xor
movsl
repnz
fwait
or
mov
outsb
imul
sbb
xchg
popa
int
dec
push
out
repz
and
fimuls
in
ss
sub
sub
jbe
xchg
gs
cmp
stos
cmp
jecxz
sbb
cwtd
cld
push
cmp
adc
test
dec
bound
jo
fistpll
push
pop
mov
sub
dec
xchg
cmp
jmp
shlb
push
jecxz
mov
jae
jge
dec
scas
lods
inc
sbb
xchg
inc
movsb
lahf
xchg
mov
dec
mov
popa
mov
jl
lock
mov
rcrl
imul
sbb
jnp
arpl
xorl
dec
or
enter
cmp
sti
ret
hlt
and
pusha
iret
lret
aam
pop
sbb
fnstcw
inc
lods
nop
jns
mov
mov
ds
rclb
fwait
sub
adc
fcmovne
and
or
jb
lret
out
and
cmp
shlb
push
incw
aas
aaa
adc
and
out
mov
repz
sub
data16
sub
and
sbb
test
pop
cld
xchg
sub
insl
stos
xor
inc
outsb
adc
xlat
xchg
lock
push
hlt
mov
jl
hlt
pop
movsb
mulb
sbb
pop
sahf
out
or
sub
ret
sbb
aam
mov
int
jp
or
push
mov
scas
pop
ficompl
call
jg
popf
mov
inc
pop
mov
xor
nop
mov
push
jb
inc
jg
xchg
mov
sbb
das
rclb
adc
pop
pop
adc
mov
cmp
pop
fsts
inc
ds
or
mov
rcll
xchg
vprotw
fbstp
dec
push
popf
imul
sahf
sub
adc
das
mov
les
pop
pop
jge
cmc
jle
sete
add
in
loope
stc
xchg
ficomps
hlt
repz
pcmpeqb
arpl
mov
inc
data16
mov
mul
inc
out
cmpsb
pop
mov
mov
jbe
jg
sbb
in
loop
xchg
insb
in
mov
inc
jne
pushf
shlb
mov
call
repz
ljmp
xor
rcr
xor
xchg
mov
imul
mov
scas
push
push
mov
leave
xchg
stos
aad
jbe
cmp
cmp
fadds
roll
lods
insb
push
cmp
aas
in
fsubrs
sub
cmp
fists
aad
pop
lods
push
fsubl
push
insl
mov
and
into
add
insw
orb
pop
in
fldcw
fmull
xchg
dec
xor
cmp
lods
cmp
test
mov
mov
or
loope
sub
lcall
jmp
and
and
xchg
in
sub
pop
push
and
loop
icebp
pop
test
aam
jnp
adcl
push
lahf
xchg
outsl
inc
ret
xor
lret
sti
es
lods
sub
sbb
xor
dec
ret
push
cmp
xchg
test
xor
outsl
insl
sub
aam
xor
and
mov
and
jns
jae
bound
pop
sbb
pop
dec
xor
adcl
mov
int
js
mov
icebp
mov
lcall
rclb
sbb
mov
popa
add
aam
pop
mov
aaa
push
xor
jle
push
sti
hlt
xchg
lods
rorb
gs
xchg
or
or
leave
add
orb
pop
fiadds
cltd
lea
push
inc
add
movsl
inc
data16
cwtl
ja
rcrl
xchg
mov
scas
jns
fldl
sub
jmp
or
pop
sbb
pop
lods
stos
cwtl
loope
xchg
les
pushf
push
jns
adc
or
xor
shlb
ret
leavew
push
addr16
jg
in
xchg
out
sti
inc
dec
imul
push
sub
outsb
call
cwtl
cltd
fisubl
lods
ljmp
xorb
imul
sarb
orl
inc
and
lcall
rol
jl
mov
push
push
inc
fistps
ds
ljmp
cli
out
mov
pop
or
and
and
or
sbb
add
aam
mov
insb
les
xchg
add
imul
jns
nop
add
fcoms
test
xor
jg
pop
fnstenv
mov
insl
out
jae
xchg
and
xor
mov
std
xor
mov
mov
sbbl
push
fsubrl
mov
pop
loop
int3
inc
push
pop
out
sahf
jns
das
and
pop
lahf
mov
mov
fidivrl
mov
or
cld
mov
jo
std
xor
lds
repnz
adc
or
insl
fbld
les
sbb
out
insl
add
mov
dec
add
dec
and
xlat
jmp
cmpsl
mov
les
aas
push
push
lock
push
xor
xchg
hlt
mov
jmp
and
and
insl
cld
fwait
and
sub
mov
mov
mov
inc
push
mov
cmc
imul
pop
dec
pop
mov
shrl
fwait
test
sub
sub
popf
movsl
mov
rcl
ret
inc
cltd
add
ds
lods
inc
pop
std
movsl
add
sub
mov
mov
pop
inc
stos
ss
inc
insb
inc
sub
adc
push
mov
std
add
loopne
mov
roll
inc
fwait
leave
mov
jbe
std
mov
inc
pushf
enter
and
mov
into
movsb
add
pop
sbbl
daa
dec
clc
sbb
out
pusha
or
adc
sahf
dec
lock
cld
int
cs
jecxz
xchg
test
jge
xchg
xor
repz
sbb
les
mov
stos
and
cmc
lret
mov
dec
idiv
mov
stos
sub
inc
je
pop
sbb
xor
cmp
xchg
call
dec
test
mov
addl
loopne
mov
push
xlat
aas
pop
test
shll
in
cmp
mov
aad
sbb
or
pop
test
lods
inc
pop
dec
in
jecxz
in
arpl
sbb
call
adc
popf
iret
outsb
push
outsl
jmp
in
jecxz
fldcw
insb
fisttpl
movsb
push
cmpsl
lock
aas
jo
mov
movsb
or
int3
or
and
mov
imul
call
and
shlb
mov
cmpsb
dec
inc
enter
dec
jno
or
mov
incb
lock
pusha
mov
adc
or
push
arpl
sbb
out
enter
call
ljmp
inc
sbb
mov
out
outsl
adc
repnz
cmpsl
dec
push
mov
sarl
cmovb
movsl
and
xor
in
push
sub
sbb
loopne
sbb
jbe
dec
mov
shlb
aaa
mov
sti
mov
xchg
mov
pusha
push
adc
sbb
and
sahf
scas
cwtl
jbe
in
mov
iret
cmp
das
idivl
xchg
xor
push
aam
arpl
push
or
mov
mov
clc
stos
mov
mov
lds
jge
es
fsubrp
sahf
pusha
rclb
mov
stos
rolb
pop
in
lods
mov
jmp
outsb
call
adc
loope
fs
dec
push
jns
dec
ljmp
add
adc
bound
jp
rcrb
jg
cld
cmp
mov
pushf
jno
call
pop
cltd
xor
mov
dec
int
push
daa
cmpsl
mov
filds
addr16
cmp
in
xlat
sarb
faddl
jbe
cmp
fisubs
xor
ss
call
xchg
xchg
out
fld
repnz
cmp
movl
mov
mov
push
jno
mov
jns
fwait
shlb
ret
cld
jb
pop
and
pop
adc
lods
xchg
push
dec
xor
cs
cli
jne
jmp
xchg
cmp
push
imul
out
pop
aam
shlb
fs
lea
adc
jno
adcb
sub
and
mov
repz
fwait
in
jb
call
repnz
pop
mov
push
pop
sbb
mov
js
add
add
sub
fdivl
jecxz
adc
les
lahf
movlps
dec
push
rclb
gs
icebp
fstl
push
in
ret
fnsave
fwait
add
xor
mov
repnz
xor
icebp
pop
xor
jae
mov
fldenv
fstl
fdiv
sub
fs
mov
int
push
mov
gs
adc
xchg
inc
ror
dec
lret
stos
mov
mov
das
mov
gs
add
and
in
pusha
mov
cmp
sbb
pop
adc
ror
addr16
in
inc
loope
es
dec
jge
sbb
outsl
in
in
jns
ret
xchg
fmul
sub
repnz
sbb
aaa
xor
mov
aaa
xlat
or
sub
out
in
jnp
sbb
sbbl
sub
insl
mov
adc
xchg
in
and
dec
sub
cli
lds
sub
test
and
pop
xorb
and
mov
inc
mov
mov
data16
lods
inc
ret
ljmp
insb
xor
std
cs
pushf
ficomps
jo
dec
mov
jo
mov
cmp
xor
scas
pop
mov
jbe
push
mov
aam
mov
mov
scas
mov
jge
pop
mov
or
and
cwtl
jle
imul
xchg
inc
add
in
sbb
push
nop
lods
nop
ljmp
enter
stc
inc
cmp
cmpsb
mov
jmp
sets
sahf
inc
in
push
inc
insl
mov
pop
movsl
sub
popa
sub
xor
test
aaa
sub
mov
outsl
lcall
inc
and
sub
leave
sub
sub
cwtl
cmpsb
inc
push
mov
je
mov
enter
xor
push
loope
test
push
repz
mov
or
popf
cmp
add
mov
je
mov
jb
addb
xchg
mov
sub
pop
dec
jecxz
repnz
out
pop
ret
in
pop
add
sub
pop
or
dec
jl
lret
inc
cld
push
imul
pop
jae
sarb
cmpb
adcb
cmp
or
add
std
pop
mov
std
mov
subl
add
inc
inc
jns
push
testb
jg
adc
imul
or
jg
pop
cmpsl
mov
ja
mov
ljmp
lock
les
rclb
add
jl
mov
add
bound
aaa
fcmovb
add
movsb
lods
iret
popa
cmp
mov
jp
dec
mov
xchg
lcall
clc
sar
inc
and
add
pop
pusha
or
pop
mov
leave
jl
ret
stos
je
out
jo
sbb
xlat
and
sub
mov
arpl
and
jbe
mov
xchg
xchg
xchg
loop
pop
dec
xor
cwtl
inc
adc
andb
cmp
sbb
lock
adc
xchg
jbe
ja
dec
xor
mov
aam
nop
xchg
xchg
and
mov
mov
pop
adc
mov
ret
fstps
pop
pusha
out
cmp
lods
jg
jne
jp
in
sub
enter
sub
mov
push
test
or
rclb
adc
pop
push
or
sbb
mov
in
pop
mov
jmp
xchg
leave
enter
and
movsb
js
imul
and
dec
pop
adc
mov
push
sub
std
ret
sbb
imulb
xchg
clc
mov
and
aam
shrb
sub
push
ljmp
pop
dec
ja
lds
pop
push
sub
mov
xchg
jmp
jbe
je
inc
sub
inc
cltd
dec
mov
cmp
mov
rcrb
aas
repz
icebp
and
inc
xchg
push
push
add
add
stc
xlat
mov
loope
cld
add
mov
push
mov
mov
std
mov
dec
dec
dec
pop
pop
adcl
out
std
ficompl
mov
sbb
lea
imul
inc
push
aas
push
push
push
dec
out
ret
outsl
sbb
dec
cmpsb
clc
xchg
sbb
mov
dec
xchg
sbb
orb
cmc
ljmp
iret
shrb
sbbb
xor
cmp
and
push
xchg
rcl
inc
cmc
imul
lret
mov
dec
out
xor
add
sub
mov
out
inc
in
add
mov
and
mov
adc
test
jg
clc
jae
xchg
fwait
push
lods
fimuls
rcll
dec
xor
xor
xor
and
pop
pop
mov
push
or
pop
scas
mov
shlb
fildll
xchg
jns
jl
mov
mov
sahf
xchg
xchg
xor
leave
inc
jbe
leave
jns
scas
push
or
leave
imul
pop
jnp
loopne
push
sbb
sti
aas
sub
sti
fs
mov
cmp
movsl
xchg
popf
add
adc
jb
mov
xor
rolb
pop
xchg
adc
pop
into
dec
mov
adc
ds
or
fistl
lcall
icebp
add
repnz
cmp
xchg
repnz
cmc
test
xchg
mov
or
xchg
sbb
dec
insb
mov
into
cmp
lea
lods
pop
notb
je
js
mov
push
cmp
and
fwait
pop
ljmp
aam
mov
xchg
insb
mov
cmp
jnp,pt
push
push
mov
jne
xor
shl
fstpl
dec
mov
and
lahf
fisttps
mov
dec
cld
insb
enter
mov
jae
dec
dec
int
push
addr16
js
sbb
fisubrs
cmp
cs
out
negb
mov
sahf
add
inc
enter
xchg
inc
orl
mov
hlt
jp
cmp
push
dec
ljmp
mov
pop
xchg
incl
scas
and
mov
daa
pslld
xor
sub
xchg
not
shlb
stos
mov
pop
repz
gs
xorl
popf
mov
push
in
ret
dec
shrb
out
out
adc
cmc
notb
mov
cmp
cmpsb
jmp
cmp
jno
mov
cmp
lock
icebp
adc
push
mov
mov
imul
mov
xor
mov
pop
out
pushf
xchg
cmp
mov
inc
rclb
and
cmc
mov
cmc
xchg
flds
push
dec
test
icebp
in
sbb
paddq
shll
mov
pop
popa
aaa
xlat
inc
shlb
and
pop
inc
mov
lods
bound
cwtl
xchg
icebp
pop
jo
add
insb
fs
or
adc
call
adc
movsb
jne
add
out
cmp
in
xchg
cltd
insb
xor
mov
pop
mov
mov
jnp
andb
jbe
mov
push
or
fcoml
pop
cltd
out
mov
imul
adc
daa
jmp
cmc
adcb
lods
dec
loopne
lds
movsl
call
push
aam
negb
insl
ficoms
decb
rolb
pop
jne
inc
leave
add
sti
push
sub
or
stos
pushf
adc
subl
jecxz
subl
stos
or
pop
pop
inc
mov
inc
in
or
fcomps
enter
lock
inc
test
out
push
lods
or
add
cwtl
std
mov
mov
or
xchg
adc
lds
xor
jae
bound
cmpsl
pop
jae
outsb
out
adc
rclb
ret
out
mov
scas
cld
lea
addr16
cmpb
xchg
je
fs
in
cmp
outsl
mov
pop
xchg
rcr
aas
mov
lret
je
fldenv
out
pop
ss
mov
cmp
mov
mov
cmpl
jl
aaa
mov
jnp
jmp
rorb
push
shll
mov
or
and
and
mov
cmp
out
in
repnz
rcrl
xchg
cmp
sbb
gs
dec
lret
aad
rclb
mov
xchg
arpl
pop
pop
pop
imul
inc
inc
adc
shll
scas
or
out
mov
inc
inc
andl
movsb
pop
jmp
popf
jns
mov
sub
repz
call
jp
sbb
inc
fiadds
in
cmp
in
lea
push
cmpsb
xor
lret
dec
inc
push
aas
jne
ljmp
loop
setp
pop
loop
repnz
shll
jae
pop
enter
sub
push
test
mov
fstpl
jb
inc
lods
cmc
mov
hlt
out
dec
adc
sub
sbb
jp
pop
clc
pop
cs
sahf
fisttpl
xor
xor
inc
and
dec
dec
dec
lcall
jmp
pop
ret
mov
into
mov
lock
enter
mov
les
jo
fwait
pop
jmp
pop
sbb
iret
ficompl
xchg
jl
scas
lock
test
push
loop
flds
clc
repz
push
xchg
rol
mov
cmpsl
rcr
pusha
arpl
sti
hlt
mov
sbb
dec
dec
jb
in
pushf
imul
jo
sbb
push
jmp
cmp
xchg
int3
and
es
in
pop
sbb
iret
inc
aaa
inc
aaa
loop
pop
clc
xor
mov
dec
cwtl
xchg
push
ljmp
jmp
cmc
adc
adc
out
cmpsl
loopne
adc
fdivp
fisubrl
and
imul
test
adc
add
test
or
popa
lods
inc
addr16
mov
pop
or
inc
scas
pop
stos
jne
aas
mov
pop
and
jmp
sbb
push
in
xchg
mov
stc
nop
pop
rep
fmull
mov
stos
insb
ja
mov
mov
leave
pop
stos
arpl
fisttpl
fildll
aaa
insb
inc
adc
pop
mov
add
sub
test
mov
sbb
call
xchg
sbb
addb
emms
xchg
or
es
xchg
push
cwtl
pop
jge
call
aaa
pop
inc
shr
or
push
int3
push
outsl
fs
jo
jo
xor
daa
jmp
jae
insb
test
mov
repz
mov
xor
arpl
fidivrl
mov
js
and
jbe
enter
pop
pusha
pop
adc
inc
xchg
cmp
pop
and
clc
mov
fdivrs
test
dec
lea
rorl
mov
decl
xchg
lcall
xlat
cmp
in
inc
sbb
out
dec
push
jnp
add
sub
cli
mov
inc
and
dec
jmp
out
mov
mov
add
gs
neg
mov
rcrb
insl
imulb
xchg
mov
test
add
aad
jbe
clc
cs
mov
jns
jmp
aaa
jne
jge
cmp
push
shlb
subb
and
insl
mov
pop
mov
or
scas
and
addl
ret
fstpl
mov
or
jmp
das
adc
aam
stc
pop
push
push
add
stc
add
outsb
loop
xchg
xor
cmp
loopne
scas
incb
mov
and
xor
fstpl
ret
dec
adc
outsl
nop
lahf
mov
rcr
stos
or
cmp
shll
aaa
push
xor
leave
push
or
or
aad
mov
push
xchg
out
lret
js
fadds
fsubrl
jae
sub
mov
cwtl
and
mov
pop
popf
iret
clc
ljmp
mov
popa
or
test
imul
or
adc
and
inc
outsl
arpl
imul
jl
in
lahf
xchg
xchg
and
pushf
mul
sbbl
jecxz
sbb
jnp
mov
mov
roll
push
mov
pop
loope
xchg
pop
dec
std
pop
jge
cmp
leave
movb
xchg
inc
xchg
mov
jbe
adc
pop
hlt
cmp
adc
dec
xor
repz
dec
add
adc
xor
scas
jmp
cwtl
cmp
lods
add
mov
mov
fwait
clc
aas
or
cmp
or
jno
scas
insl
push
jb,pn
insl
roll
pop
lret
mov
pop
fstl
out
enter
sbb
js
fbld
pop
add
loopne
rcrb
lock
xor
mov
fsubs
jae
clc
sahf
ljmp
aad
jge
test
jno
push
repz
xor
xchg
xlat
sbb
and
xchg
fistpl
loopne
push
push
je
mov
sbbl
ret
lahf
mov
add
insb
xlat
shl
pop
mov
xchg
dec
sub
test
pop
fstpl
shll
insl
sub
icebp
pop
push
cmp
inc
xchg
test
mov
pop
in
xchg
xchg
sub
fisttpl
inc
clc
jns
fstpl
sti
ja
enter
pop
and
xchg
mov
jb
xor
leave
das
ret
out
out
sahf
push
call
mov
mov
adc
pop
movsb
pushf
subb
or
movsb
or
mov
call
sbb
clc
xchg
push
insb
pop
fwait
jp
shrb
add
jbe
in
sahf
je
popa
cvtpi2ps
clc
mov
bound
sahf
je
mov
and
fisubs
jp
mov
int
repz
popa
jge
fwait
xchg
subl
dec
fldenv
fiadds
and
lret
ja,pn
jl
outsl
cmpsl
hlt
pop
sub
mov
push
mov
and
adc
imul
sub
xchg
lret
inc
add
xchg
lock
sbb
xor
pop
out
imul
bound
icebp
xor
cmc
and
imul
scas
shll
notl
mov
cmc
stos
adc
insb
sub
xor
pop
push
stc
jmp
pop
cmc
bound
cs
push
jmp
or
shlb
xchg
pushf
data16
mov
cmp
xor
ror
mov
and
dec
mov
addb
jb
push
sbb
lock
enter
inc
jp
push
push
ds
fdivr
jb
js
pop
cmp
loope
movsl
add
cmp
insl
in
jp
fwait
scas
lahf
add
pushf
les
stos
adc
mov
daa
or
cmp
pop
add
test
std
xorb
mov
mov
mov
fnsave
xchg
xor
ret
lock
xchg
lahf
out
cmp
lods
mov
dec
push
sub
adc
xchg
fisttps
cmp
inc
xor
test
xchg
jbe
push
hlt
or
push
or
dec
clc
hlt
dec
decb
adc
flds
sahf
xor
jnp
xchg
add
sarb
std
test
inc
dec
enter
adc
xchg
mov
xchg
pop
or
mov
lock
sbb
mov
add
or
fldcw
in
lahf
jb
push
leave
and
popf
and
inc
gs
aam
mov
xor
mov
xor
sub
roll
adc
lods
inc
mov
fldl
pop
movsb
sbb
inc
jne
pop
jae
wrmsr
add
xorb
mov
adc
imul
adc
pop
push
lods
push
add
mov
xor
cs
imul
inc
jb
std
cld
out
ficoms
jecxz
xor
ss
inc
jbe
outsb
cli
je
mov
mov
mov
jl
mov
xchg
lcall
pop
lods
lahf
mov
adc
ja
inc
adc
adc
clc
negl
mov
push
lret
les
orl
loop
ja
jmp
mov
shl
inc
mov
jb
xchg
mov
push
sbb
repz
nop
stc
insl
push
iret
adc
ror
bound
push
jbe
lahf
mov
aas
jmp
push
add
aam
test
adc
xchg
lods
das
sub
jg
in
leave
loopne
jns
aad
sub
cmp
pusha
pop
jl
cmp
cld
mov
cmp
dec
pop
mov
stos
mov
mov
and
fimull
ja
push
pusha
xlat
jnp
mov
into
ficomps
lea
scas
stc
jbe
cmp
and
mov
test
movsb
bound
orb
inc
xor
cmp
sub
mov
or
cmpsl
cmp
xchg
xchg
lock
loope
stos
cmpsb
mov
mov
push
jnp
sti
mov
icebp
mov
icebp
rclb
xor
adc
idiv
lret
cmp
lret
arpl
sub
push
mov
sub
shrb
leave
jno
xchg
push
mov
sbb
scas
add
aas
in
loop
icebp
out
pop
fwait
movsb
out
sub
lock
test
test
icebp
cmpsl
movsl
sub
aas
adc
push
stos
xchg
in
mov
push
xchg
loop
cli
stos
adc
jne
jge
fimuls
xchg
sbb
sbb
add
insb
outsb
mov
adc
ret
mov
jl
outsb
lahf
push
sub
sti
mov
popa
cwtl
lods
add
es
dec
fnstenv
mov
xchg
cmp
mov
call
and
std
hlt
stos
fadds
ds
xchg
gs
cli
aad
mov
test
mov
inc
mov
dec
mov
roll
cmpsl
pop
pop
iret
fcompl
in
aad
data16
xchg
jnp
sub
mov
pop
daa
jp
mov
pop
inc
mov
jb
ja
jg
jo
adc
cwtl
cltd
cmc
pop
sub
mov
in
hlt
aad
dec
dec
cmc
arpl
sbb
aas
adc
dec
out
shll
mov
push
push
adc
in
mov
or
jl
movsb
addl
fchs
sti
pop
sbb
mov
lea
lods
sub
sbb
test
in
xchg
and
jnp
test
xor
mov
fisubl
js
inc
xchg
lds
subl
in
add
push
jnp
cmc
aad
or
roll
cmp
xchg
or
add
xchg
repz
dec
scas
sarb
push
stos
add
sub
jecxz
repnz
fadd
mov
xor
out
xor
ljmp
mull
xchg
xor
xchg
lods
pop
je
mov
or
fstpt
mov
mov
jp
jns
and
outsb
jne
push
int
inc
or
insl
mov
lahf
add
sub
fdivl
popf
sub
bound
lret
in
dec
imull
adc
push
loope
mov
push
rcll
inc
cmpps
dec
stc
or
push
nop
xchg
adc
stos
xchg
std
sub
hlt
mov
and
icebp
aas
sub
daa
cmpsl
xor
lret
or
pop
or
loope
ficomps
xchg
lods
mov
jp
dec
inc
lods
dec
xor
adc
and
daa
add
outsb
lock
and
mov
enter
and
xor
cli
cmp
loope
push
jp
pop
xchg
inc
pop
call
or
ret
out
xor
xor
adc
mov
mov
ss
sbb
mov
xor
mov
mov
es
scas
mov
testb
stos
jl
push
cmp
push
jne
pandn
and
lret
gs
icebp
push
es
adc
xchg
fldenv
aaa
repnz
mov
jle
loope
loope
mov
sbb
cld
sub
daa
sar
mov
loop
js
or
andl
dec
sti
adc
std
mov
stos
enter
jl
aas
movsb
cmp
sub
scas
jne
mov
ficompl
stos
sub
sti
or
popa
stos
sub
lds
and
xchg
rclb
sahf
shlb
dec
mov
jl
sub
inc
cld
stos
ror
and
mov
leave
fnsave
outsb
leave
and
push
xor
push
iret
adc
pop
out
sbb
push
and
pop
dec
sbb
in
mov
sbb
add
out
pop
add
add
hlt
jp
ret
cmp
dec
ds
mov
pop
enter
aaa
push
mov
and
sar
xor
shll
xchg
xor
int3
and
aas
dec
movsbl
mov
fldl2t
xchg
fildl
jo
bound
adcb
add
loope
out
mov
lock
ja
jl
mov
sbb
mull
jo
xchg
aas
and
idiv
lahf
inc
out
das
iret
mov
lods
mov
mov
xor
mov
shrb
in
je
into
daa
xor
in
das
adc
aad
scas
sub
insb
jecxz
inc
pop
dec
mull
push
lret
mov
cltd
daa
scas
push
xorb
inc
adc
xor
push
loopne
popf
mov
adc
not
faddl
inc
cmpsl
cmp
push
jo
nop
cmp
push
add
push
pushf
call
sub
les
sub
lock
dec
in
push
xchg
fidivrl
xchg
xchg
jns
and
inc
and
cmp
scas
pop
cmp
in
mov
mov
pop
xor
lock
fildll
jmp
jg
inc
mov
cwtl
aas
int
inc
or
gs
test
cmp
xorl
mov
imul
cli
mov
inc
pop
lcall
and
or
dec
push
jns
imul
sub
sbb
xor
add
inc
imul
negl
sub
push
fidivl
cmp
pop
leave
mov
cmpsl
sub
lods
and
or
lock
xchg
inc
or
iret
adc
imull
jb
test
rcr
cmpl
rorl
xchg
ds
insb
shr
xor
adc
pop
adc
sbb
pop
dec
pop
and
lock
fldt
sub
outsl
aad
cmp
jne
push
scas
push
pop
jg
push
movsl
int
sub
adc
mov
pop
fisubs
in
and
adc
xchg
mov
mov
sbb
es
mov
dec
outsb
les
je
adc
lds
sbb
adc
mov
andb
mov
mulb
jo
decl
dec
mov
dec
push
roll
in
nop
inc
xchg
inc
and
pushf
shll
clc
imul
shrb
inc
int
fsubrl
or
icebp
jns
aas
mov
cmp
jle
mov
out
fisubrs
xchg
hlt
dec
push
std
mov
lds
repz
or
not
adc
sub
mov
add
xor
imul
xchg
and
push
lahf
xchg
pusha
pop
and
stos
pop
shlb
leave
aas
sti
jg
pop
xchg
in
lea
adc
outsl
cmp
sti
push
or
or
int3
lcall
mov
cmpsl
mov
roll
arpl
inc
add
mov
cmc
lock
push
xor
cmp
mov
pop
cwtl
adc
cmp
fwait
les
mov
push
cmp
add
mov
cs
add
lcall
adc
iret
sbb
xchg
xchg
decb
mov
scas
dec
jge
repnz
pop
ret
out
xor
sbb
aaa
jae
and
popf
cs
cltd
mov
insl
xchg
xchg
pop
push
les
rolb
sbb
xor
lea
pop
xor
and
daa
mov
repz
cmp
mov
inc
add
es
lods
outsb
je
mov
outsb
jne
mov
inc
xchg
mov
rcll
out
sarb
cli
push
sbb
fnstenv
mov
xchg
arpl
push
mov
cli
mov
jecxz
lods
out
adc
jbe
lea
jns
cmpb
mov
push
idiv
out
mov
sbb
and
in
adc
sbb
pusha
jb
vmovmskps
stos
sbb
iret
mov
popa
mov
mov
outsb
push
mov
sbbb
mov
ds
mov
push
inc
or
xchg
lret
or
inc
into
dec
sbbl
test
push
test
adc
pop
ret
mov
xchg
ret
mov
jne
jns
mov
out
fwait
dec
jg
insb
dec
scas
mov
aad
mov
test
add
pop
jbe
mov
xchg
mov
in
je
mov
mov
mov
lds
ds
jb
aas
jp
test
sub
mov
scas
fistpll
jecxz
pop
pop
mov
in
sub
roll
mov
mov
lds
fstl
inc
outsl
fcomps
sub
lods
or
sahf
xor
repz
imul
lock
or
aaa
cs
add
data16
push
mov
sbb
rol
dec
xchg
adc
sub
lods
imul
sub
mov
stc
icebp
inc
shrl
test
popa
mov
push
dec
dec
lahf
outsb
loope
xchg
push
inc
xor
ficomps
pop
fisubs
xchg
sti
mov
das
scas
cmp
stc
mov
scas
push
lret
fisttps
cld
rorb
jno
imulb
cmp
mov
xor
test
cmp
ret
sbbb
jno
pop
xorb
fmulp
mov
mov
inc
sti
mov
xchg
jg
xchg
lock
adc
ljmp
adc
pusha
xor
push
add
or
into
pop
xlat
loopne
jmp
dec
fmul
cs
push
clc
leave
xor
sbb
and
pop
sbb
and
mov
lret
add
test
push
pop
xchg
adc
jb
stos
bswap
repnz
xchg
mov
pop
cs
std
popf
mov
pop
lods
stc
xchg
jns
xchg
jmp
and
aaa
mov
cmpsl
aas
add
hlt
push
push
xchg
jl
test
mov
outsl
movsb
nop
jbe
daa
pop
mov
pop
adc
data16
rcl
add
inc
jg
sti
movsb
dec
jmp
xor
leave
inc
jb
bound
xchg
pushl
scas
dec
push
data16
inc
and
aad
cli
pop
test
stos
push
cmpsb
adc
mov
icebp
cld
add
cmp
fbld
test
test
mov
dec
hlt
jmp
fwait
jmp
addr16
sub
or
jmp
imul
jle
popfw
sub
scas
stos
cld
out
pop
ror
repz
std
xchg
xchg
inc
negb
sarb
mov
loop
fldcw
mov
push
add
cmpsl
loopne
pop
lret
inc
sub
cmpsb
jns
mov
leave
in
movsb
call
and
pop
les
imul
sub
fdivrs
gs
sbb
imul
dec
inc
enter
mov
pop
fcomps
sbb
jmp
lret
xchg
in
lock
fisubrs
cmpsl
test
popf
les
loop
gs
incb
call
aaa
daa
pop
rclb
or
shrb
insl
pop
imul
jb
mov
cmp
xchg
dec
les
mov
add
push
sbb
sbb
shr
arpl
stos
jl
test
pop
mov
mov
xchg
sub
popf
xchg
and
mov
mov
jbe
shl
loope
montmul
cmpsb
inc
hlt
imulb
inc
movsb
mov
insl
push
std
mov
mov
jb
lds
gs
dec
shl
test
out
inc
test
dec
adc
cmp
rcl
shl
lahf
sub
xchg
xor
inc
pop
scas
das
jno
rorl
mov
iret
mov
inc
testl
add
aaa
bound
adc
sub
rorb
push
jmp
add
jmp
adc
cmp
dec
pop
jne
test
sbb
xor
movsb
lmsw
out
popa
push
cmp
clc
mov
or
lcall
stos
xlat
adc
jns
outsl
inc
inc
dec
aaa
mov
scas
in
pusha
aaa
add
push
outsl
lods
push
and
test
dec
or
pop
jcxz
loopne
xor
or
addr16
fnclex
aad
rclb
mov
dec
fcmovb
push
xor
xchg
sbb
jle
mov
pop
jo
cmp
and
loop
iret
test
mov
bound
cmpsl
inc
mov
sti
add
pop
imul
mov
sub
movsb
sti
adc
fs
aas
mov
and
aas
mov
xor
cltd
pop
aas
addr16
jp
cs
sub
aas
stc
jle
loopne
jb
xor
leave
mov
pop
arpl
out
mov
pop
loope
sub
cld
jnp
mov
lret
mov
mov
dec
into
add
mov
jp
ja
push
and
jg
pop
jmp
push
push
lods
inc
repnz
popa
les
inc
rolb
ljmp
sbb
aas
mov
mov
or
fwait
mov
js
and
lds
arpl
jnp
pop
push
inc
aas
ljmp
push
in
push
pusha
mov
fnstcw
push
cmp
repz
test
mov
jmp
and
xor
mov
lods
leave
mov
ret
mov
mov
daa
sahf
and
or
cmpsl
adc
cltd
mov
shlb
je
push
popa
add
loope
mov
arpl
lcall
xor
jmp
push
pop
jle
loop
mov
shl
xchg
add
icebp
call
inc
movsl
push
into
arpl
inc
jp
mov
mov
xor
inc
mov
imul
aas
mov
mov
sbb
jg
inc
fadds
cwtl
add
push
mov
cmp
push
mov
popa
movsb
shlb
cltd
jb
push
pop
popf
fucom
mov
inc
mov
icebp
xchg
mov
pop
inc
and
add
js
cmp
movsl
dec
in
sub
and
mov
cmp
xchg
daa
call
stos
mov
aas
or
sti
mov
xchg
jne
call
pop
pop
and
sbb
mov
pop
push
mull
pop
adc
jns
dec
cmc
or
scas
mov
dec
pushf
pushf
into
push
lods
popa
loopne
cwtl
jle
in
sbb
push
or
push
stos
add
jl
push
inc
bound
shl
pop
loopne
cmpsb
imul
pop
cwtl
notl
sarb
out
and
data16
cmp
push
fcom
mov
inc
dec
cwtl
push
je
cwtl
dec
in
loop
mov
adc
out
out
mov
and
andb
scas
in
dec
jge
xor
std
mov
sahf
sbb
add
inc
xchg
inc
sarl
pop
inc
cmpsb
int3
scas
popa
sub
movsl
cmp
ror
push
mov
inc
sti
dec
sbb
cmpsb
or
stos
mov
add
fstpl
sub
lock
lds
push
inc
xor
nop
imul
pop
stos
mov
inc
pop
and
popf
xchg
loop
ja
inc
imul
mov
pop
scas
aad
imul
mov
aaa
lahf
jnp
mov
loop
mov
sbbb
stos
fwait
push
and
shll
mov
or
jmp
sub
cmp
dec
imul
inc
idiv
cmc
mov
push
or
maskmovq
notl
mov
stc
lret
and
dec
mov
push
xor
mov
xchg
push
dec
mov
leave
mov
mov
add
imul
test
leave
loopne
cmpsb
je
push
and
jnp
das
lret
testb
jge
std
cmp
mov
sti
imul
int
push
aaa
sbb
das
pop
das
jl
out
cltd
adc
xchg
and
mov
das
pop
jge
fstps
mov
in
pop
cld
push
adc
xor
or
cmp
ljmp
sub
push
fbld
pop
xchg
add
pop
xor
pop
inc
sbb
inc
jnp
jge
cltd
imul
mov
outsl
cmp
lret
sub
or
pop
js
push
push
in
add
add
mov
add
sbb
test
mov
movsb
jge
lahf
push
rcrb
jecxz
es
cmc
pusha
jle
imul
test
inc
jl
pop
dec
mov
mov
mov
mov
and
jg
scas
add
nop
mov
out
mov
js
test
xor
push
push
imul
hlt
clc
pop
mov
xchg
jae
popf
imul
xchg
pop
cld
or
out
setg
popa
cmpsl
repz
stos
pop
adc
sbb
and
jl
push
xchg
jae
dec
into
mov
sahf
cmp
in
test
jmp
loopne
fs
les
xor
stos
rolb
dec
and
mov
and
lcall
mov
xor
cmpb
je
gs
dec
adc
adc
mov
inc
mov
xor
addr16
movsb
hlt
mov
ljmp
sti
fldenv
outsl
daa
xor
or
stc
mov
scas
loop
lret
inc
int3
mov
adc
arpl
ret
add
jl
hlt
sbb
mov
stos
mov
lcall
fdivrl
add
fwait
and
mov
adc
shll
fwait
xor
lea
add
inc
dec
int
lahf
scas
xchg
orl
rcll
jmp
pop
jne
shlb
mov
call
jge
imul
jne
fcmovnbe
jmp
cwtl
mov
ret
pop
push
adc
push
jmp
sbb
cmp
rcrb
sub
pop
push
out
cmp
lret
push
mov
outsl
push
mov
and
jns,pt
inc
sbb
mov
enter
iret
adc
push
cmpsl
lcall
push
jecxz
jb
lock
dec
mov
mov
dec
stos
mov
mov
push
mov
fwait
outsb
and
sbb
sub
dec
out
xchg
lods
inc
inc
inc
push
mov
xchg
and
cmpsb
sbb
push
in
rcrl
stos
ss
lock
xchg
mov
std
icebp
je
pop
test
std
jmp
aad
lods
xchg
iret
subb
cld
das
jmp
mov
repz
pusha
test
arpl
cmp
cmpsl
aaa
loopne
gs
mov
jge
movsl
sbb
shlb
inc
and
adc
iret
mov
popf
push
shl
lods
lret
jmp
fyl2x
pop
xchg
daa
les
xlat
popf
fidivrs
repz
subl
mov
test
mov
sub
cltd
pop
data16
sub
inc
push
insl
mov
push
mov
outsb
mov
inc
sbb
mov
test
pop
mov
xlat
cmp
inc
fnstenv
jge
jae
dec
push
in
mov
packsswb
js
add
sub
jnp
lods
jbe
shll
adc
es
and
movsb
adcl
jb
adc
mov
mov
lret
inc
mov
mov
xor
xchg
negl
int3
mov
xor
and
popl
movsl
enter
push
repnz
rcrl
bound
movsl
loopne
dec
pusha
xor
mov
mov
shrl
fs
bound
mov
arpl
dec
xchg
jnp
push
das
and
jb
xchg
test
ficoms
jg
mov
loopne
insl
movb
adc
jge
mov
ja
and
mov
xor
or
mov
mov
js
ficomps
inc
aas
pop
push
out
hlt
popa
xor
enter
aas
fildll
out
push
mov
in
add
or
fstps
jp
push
mov
and
push
flds
or
out
xchg
lahf
in
add
and
out
sbb
pop
sub
in
inc
cmpsb
clc
or
push
scas
out
je
jnp
push
stc
rorb
dec
cmp
fistl
inc
dec
add
mov
lretw
inc
loope
aad
jmp
mov
pop
iret
push
outsb
xor
push
or
out
xchg
mov
insb
mov
fstps
add
push
pop
jnp
push
lods
jno
push
push
pop
fcomps
mov
or
mov
call
jp
dec
adc
imul
stos
je
jmp
sbb
lahf
mov
push
push
test
mov
aad
mov
add
and
adc
push
es
sub
add
mov
cmpsb
bound
push
cmpsb
mov
mov
inc
iret
cmp
test
psrad
lret
add
or
mov
lds
mov
movsb
mov
add
inc
in
insb
jo
pop
sbb
sub
mov
jecxz
sbb
outsb
data16
loope
ja
mov
nop
sub
add
es
pusha
das
les
jge
push
sub
mov
cwtl
mov
ss
jne
popa
aas
sbb
out
cs
ja
mov
or
pop
mov
jmp
mov
push
fisttps
je
ss
add
mov
gs
pop
adc
pop
out
test
jcxz
dec
popf
fidivrl
movl
adc
or
dec
ret
fcoms
cmpsl
adc
mov
and
daa
push
jmp
fstps
cltd
cmp
dec
xor
inc
xor
dec
frstor
callw
push
xlat
inc
ljmp
sub
push
test
adc
out
ret
pusha
cmp
sbb
xchg
mov
insl
test
lds
data16
imulb
jmp
pop
add
and
xor
pop
jp
aam
out
and
xor
shl
xchg
cmc
add
sahf
scas
xchg
push
shll
pcmpeqd
test
flds
int
imulb
cld
mov
sbb
mov
int
push
fwait
lods
xor
jb
imul
scas
sbb
jle
loope
mov
test
cmp
test
dec
inc
fdiv
cmpsb
call
cli
pop
cs
mull
fstps
jae
in
ja
mov
push
jo
pop
mov
lahf
jne
inc
popf
arpl
cmpsl
jl
pop
sub
mov
sbb
cmp
mov
pop
lcall
or
call
inc
in
ja
stos
rcrb
dec
cmp
inc
push
bound
dec
mov
dec
in
negb
and
int3
clc
cmp
andl
xor
lea
aad
frndint
and
popa
pop
dec
or
push
dec
pminsw
lahf
in
cmp
jmp
shr
pop
mov
cli
adc
lds
push
add
jl
and
xchg
jge
scas
ret
sub
mov
adc
lds
jo
addl
mov
in
arpl
xor
or
inc
dec
jnp
pop
or
push
out
lret
sub
inc
xchg
pop
mov
xor
xchg
mov
outsl
pop
pop
arpl
adc
mov
dec
or
mov
daa
pop
xchg
mov
or
outsb
inc
inc
cmpsb
adc
sub
dec
mov
jg
sub
mov
cld
cmp
enter
fdivrs
inc
sti
insb
pop
sbb
jo
mov
fcompl
cmpsl
repnz
nop
add
push
test
lock
push
test
shll
add
cmpsl
fwait
jmp
mov
sahf
arpl
add
mov
mov
fmuls
in
test
cwtl
outsl
lret
mov
hlt
mov
mov
mov
std
pop
out
adcl
inc
rolb
std
inc
push
xchg
mov
scas
icebp
xchg
shrl
mov
push
mov
mov
rcrb
shl
mov
sbb
cmp
and
mov
add
jno
inc
push
sbb
sti
call
jge
insl
outsb
jnp
in
clc
rcl
jo
out
out
dec
jae
or
pop
jno
xchg
push
xchg
call
adc
jno
lods
or
pop
jo
pop
mov
cmp
divl
push
cmpsl
popf
mov
shrb
mov
adc
push
cmp
shlb
inc
js
cmpsl
imul
sbb
psraw
test
adc
fldt
inc
test
lcall
fs
sti
jne
sbb
mov
lcall
negb
push
pop
add
and
pop
adc
stos
leave
adc
shll
xchg
mov
cs
or
and
lret
iret
std
arpl
test
cmp
fcoms
mov
dec
or
mov
add
adc
pop
xchg
movsb
dec
push
hlt
add
inc
mov
out
jle
add
mov
test
sahf
rorb
fwait
enter
cld
jnp
lret
pop
subl
flds
dec
sub
adc
pop
mov
jbe
es
and
pop
mov
loop
jmp
fwait
mov
cmp
jno
adcb
dec
insb
loop
leave
test
and
int
adc
add
aaa
aam
ret
xchg
aad
xchg
flds
in
enter
cmp
push
pop
fldt
xchg
shlb
out
inc
xor
or
and
pop
stos
mov
icebp
test
push
cmp
sub
leave
dec
dec
arpl
jbe
push
mov
addr16
cmp
mov
mov
push
sbb
xlat
adc
pop
adc
inc
testl
gs
mov
add
mov
outsl
call
insb
mov
aad
jnp
adc
adc
int
sbb
cmp
sub
scas
clc
cli
into
mov
loop
jecxz
xor
hlt
aam
jle
in
aas
pop
push
or
push
pop
call
sub
and
outsb
aad
sbb
xchg
mov
imul
sbb
out
cmp
into
push
ret
aad
hlt
aam
push
mov
les
imul
outsl
aas
dec
jne
add
mov
push
fnstenv
cmp
dec
xor
lea
mov
add
test
and
ret
testb
fldenv
jecxz
mov
add
adc
inc
add
mov
xchg
mov
outsb
out
mov
sub
insl
ja
push
ss
xchg
mov
jb
jmp
loop
stos
sbbb
jnp
push
out
and
xchg
cld
xchg
std
stos
nop
jg
cli
cmc
aas
or
push
enter
sub
cmp
ret
js
and
jecxz
xchg
out
sub
jbe
push
mov
pop
adc
sahf
xchg
stc
in
rol
or
ret
arpl
repz
lods
mov
mov
in
add
push
imul
sbb
add
fstpl
inc
test
jb
ljmp
dec
or
pop
or
bswap
lea
or
mov
push
testl
addr16
std
jo
or
or
xchg
cmpsl
movsb
movsl
cmp
fidivl
mov
pusha
mov
add
stc
fidivl
fsubl
or
push
fadds
adc
and
dec
out
in
je
setnp
mov
test
fmull
in
pop
inc
sbb
and
pop
std
ret
mov
xor
mov
push
push
jl
mov
fadd
cmpsl
pop
loopne
pop
and
pop
out
aad
pop
add
sub
add
pop
pop
pusha
sbb
mov
xor
lock
inc
pop
daa
adc
dec
or
jmp
lods
cmp
imul
hlt
aaa
ret
pop
es
pop
mov
mov
mov
and
sub
jmp
nop
popf
scas
push
out
xchg
pop
cmpb
adc
fstpt
jno
or
neg
mov
in
add
call
push
dec
sbb
scas
out
push
fwait
sbb
int3
inc
test
xchg
add
pop
lods
addl
lds
enter
or
sarb
jno
jb
dec
push
mov
arpl
cmpsb
xor
fldenv
pop
jmp
push
push
repz
sti
pop
lcall
stc
lret
jbe
sub
scas
incl
in
cmp
leave
out
js
jb
pop
or
mov
clc
mov
jo
mov
or
lock
jge
mov
cld
sbb
xchg
push
mov
orb
lods
and
xlat
fstpt
mov
test
mov
shll
xor
adc
xchg
and
xchg
dec
pop
cltd
xor
cs
push
leave
stc
icebp
mov
lcall
loop
pushf
inc
push
cwtl
mov
mov
mov
icebp
iret
pop
mov
jno
inc
xor
adc
adc
or
lcall
mov
shrb
inc
mov
or
add
adc
xor
cli
decb
cmpsb
and
cwtl
cmc
lods
add
xlat
xchg
lcall
mov
xorl
mov
mov
sbb
xor
xchg
xchg
das
loopne
gs
adc
adcb
ret
shlb
mov
xchg
lahf
lock
sbb
xchg
and
cmp
cmpsl
push
dec
sub
cmpsb
std
push
jg
std
addr16
push
push
imul
xchg
ja
push
mov
cmp
mov
cltd
jg
inc
lea
push
cmpsl
div
lahf
inc
push
addr16
stc
cltd
xchg
lret
and
pop
or
fcoml
mov
jno
dec
pop
test
xchg
ljmp
mov
mov
bound
or
imul
adcb
or
jmp
mov
mov
jno
inc
mov
incb
jb
xor
mov
notl
or
and
or
sub
iret
int3
push
add
stos
dec
aaa
ja
roll
mov
mov
imul
pop
aad
pop
mov
push
sub
push
popf
push
mov
mov
flds
divl
sub
leave
xor
xchg
gs
and
out
test
push
dec
cmc
lret
in
loope
xchg
fbstp
fucomi
imul
jg
push
lcall
lcall
sub
mov
and
and
fisubl
cmp
pushf
dec
pop
mov
and
sahf
push
sub
push
data16
mov
dec
push
push
add
pop
cltd
lods
jg
repnz
loop
and
push
jecxz
rcll
idivl
imul
xlat
and
lret
jg
sbb
in
push
lds
inc
lds
inc
mov
faddl
mov
aas
ret
adc
push
pusha
test
lods
dec
cmp
lods
je
sar
adc
sar
test
js
pop
push
xor
add
les
sbb
loop
cmpsb
es
loope
and
jb
ret
or
aam
cmp
jmp
and
push
test
adc
rol
xor
hlt
hlt
mov
jo
in
bound
xchg
push
ret
in
push
cmp
data16
scas
fisttpll
imulb
cmp
sahf
xor
lods
mov
subb
push
pusha
ss
sbb
mov
arpl
pop
cmp
xchg
subb
dec
xchg
jns
xor
push
test
sarb
dec
xchg
mov
push
mov
scas
shrl
cvtdq2ps
lret
jp
sbb
xor
adc
jb
mov
clc
les
je
jle
orl
int
leave
ss
jae
bnd
dec
ss
ficoms
add
stos
scas
movsl
rclb
stos
rcll
stos
ret
mov
push
and
adcb
out
notb
sub
mov
sub
out
xchg
ss
push
adc
nop
in
out
lods
ljmp
icebp
outsl
and
fcmovbe
lret
mov
inc
sahf
rcrl
add
mov
adc
fnstcw
in
xor
pop
pop
mov
addr16
ret
lods
xlat
jns
mov
das
push
gs
push
popf
or
punpcklbw
sti
mov
mov
cmp
test
lods
stos
pop
inc
mov
popa
push
push
xchg
pop
test
push
scas
cmp
cwtl
adc
adc
xchg
mov
sub
ds
clc
sbbb
test
push
mov
dec
pop
dec
sub
dec
es
and
dec
cmp
xlat
test
pop
lods
ds
push
lahf
jmp
cmp
hlt
jae
push
pusha
add
xor
cmp
push
jns
loope
icebp
dec
add
xchg
lret
mov
jl
dec
cmp
dec
cmc
addb
inc
hlt
sbb
rorb
jb
dec
adc
outsl
ret
dec
mov
pop
inc
adc
out
dec
mov
lcall
adc
xchg
push
push
push
push
iret
cmp
int3
and
jnp
ret
imul
cli
push
ljmp
push
movsb
inc
cmp
inc
xchg
outsl
add
test
shl
add
and
mov
cwtl
jmp
hlt
or
jl
scas
fcmovb
xchg
ja
aad
mov
or
addr16
sub
cmp
testb
cmp
adc
mov
push
adc
sahf
xor
js
mov
cli
fdivs
pop
xlat
mov
mov
ljmp
fisttpll
lods
sbb
pushf
js
add
pop
sub
fsubl
xchg
test
outsb
jo
and
ret
rcr
jl
or
rclb
loope
cltd
and
mull
inc
clc
cmp
or
add
ret
add
dec
sub
cmpsl
mov
roll
out
cmp
cmpsl
cmpsb
in
mov
push
push
mov
js
aaa
mov
lods
rorb
repnz
jb
pop
push
dec
or
adc
mov
stos
inc
mov
gs
int
dec
je
repz
xlat
in
nop
xor
sbb
push
push
cmpsl
and
mov
dec
fiaddl
insb
loop,pt
movsb
out
or
loope
cmc
inc
cwtl
dec
dec
inc
push
mov
push
push
adc
lock
inc
out
jno
dec
add
mov
ret
sub
das
xchg
rorb
out
inc
adc
push
mov
and
adc
push
cmpsb
xor
js
pop
mov
add
je
insl
jp
jae
icebp
inc
adc
sbb
pop
fwait
xrelease
xchg
cltd
test
pop
jbe
jg
mov
sbb
inc
inc
push
xlat
pusha
popl
fisubrs
mov
xor
push
cltd
idiv
push
cmc
dec
fucom
sar
pop
stos
mov
pop
inc
mov
or
add
mov
js
mov
or
aad
nop
hlt
int3
in
jbe
fdivl
hlt
jno
dec
icebp
push
dec
add
repz
repnz
add
hlt
adc
xchg
cmpsl
push
cmc
nop
jb
in
test
pop
ljmp
in
in
sbb
xorl
cmp
rcrl
divl
sub
mov
dec
jecxz
pusha
daa
jle
cmc
int
pop
cmpsb
xor
mov
sub
xchg
cmp
roll
in
adc
mov
cmc
nop
add
mov
mov
sbb
jecxz
push
xchg
pop
push
cli
loop
mov
xor
xchg
or
or
ljmp
adc
fcmovnu
fcoms
mov
pop
lods
xchg
sbb
jae
lret
out
push
scas
add
add
lret
mov
movsl
repnz
loop
cmc
iret
stc
repz
popl
movl
jno
or
fldenv
or
roll
inc
cmp
fdivrl
out
int3
mov
mov
mov
xor
nop
jno
pop
xor
and
aam
in
inc
aaa
dec
aam
xor
mov
sbb
ds
sub
add
test
int
cmp
test
jg
mov
or
lods
xor
mov
aam
fsubs
dec
jno
ret
inc
gs
jns
icebp
fcompl
in
inc
sar
inc
bnd
adc
and
rcrl
cmp
inc
jnp
add
das
adc
pop
testl
insb
popa
dec
mov
sahf
pushf
stos
ja
inc
sarl
and
inc
in
enter
cld
adc
dec
and
ror
scas
cwtl
sub
in
xor
out
sub
sbb
pop
insb
mov
in
nop
push
fistl
fdivs
jo
xor
adc
imul
out
xor
pop
addr16
sbb
insb
stos
xor
xchg
cltd
mov
ss
add
push
jo
inc
lods
pusha
and
shrl
add
ffreep
dec
mov
loope
fisubs
mov
leave
out
sub
and
adc
leave
pushf
cmpsb
adc
fistl
and
pushl
pop
jl
pushf
pop
xchg
sbb
add
int
pop
add
cmp
mov
hlt
in
xchg
aas
mov
ljmp
aam
xor
xchg
notl
pop
les
aaa
adc
icebp
subb
inc
popf
jmp
pop
aas
loope
outsl
mov
cmp
pop
popa
movb
lock
loop
pop
push
imul
mov
aaa
or
enter
push
mov
pop
mov
iret
insl
scas
adc
testb
mov
out
in
inc
pop
pusha
sbb
pop
push
add
popf
mov
cltd
int
pop
sbb
sbb
imul
and
mov
pushf
lahf
scas
push
pop
stos
shll
or
mov
cmpsl
mov
cmpsb
in
sub
js
or
popa
rclb
mov
rep
loope
sbb
adc
iret
mov
adc
jne
inc
bound
push
cld
mov
lods
push
enter
cmpsb
xchg
lods
adc
pop
mov
repnz
sub
int3
nop
loope
push
in
pop
decb
jae
sub
adc
jb
mov
cmp
pusha
mov
stos
into
pop
sbb
shlb
daa
paddsw
arpl
rep
rcll
mov
or
movsb
jg
inc
lret
xchg
push
inc
sub
outsl
push
pop
cmp
sbb
mov
mov
cmp
scas
out
imul
and
int3
test
mov
loop
fwait
inc
mov
icebp
fs
or
fnsave
addl
adc
out
hlt
push
dec
push
sti
or
and
xor
popf
pop
xchg
sbb
mov
add
lods
cmpsb
mov
mov
sub
mov
insb
shl
lret
movsl
push
sub
xor
mov
jle
jne
lret
fs
lcall
push
inc
adc
shll
cmpsb
loop
loop
adc
xchg
or
xchg
ja,pn
push
les
outsl
fwait
sbb
inc
in
mov
adc
insb
sti
mov
andl
dec
cmc
test
clc
xchg
xlat
adc
shlb
or
jg
das
arpl
add
pop
std
cwtl
sbb
cmp
pop
sti
pop
in
xchg
or
stos
imul
xor
pop
jo
jmp
shr
fimuls
js
lods
xor
icebp
jg
push
pop
andb
mov
cmc
add
cld
xor
xchg
les
mov
and
test
data16
roll
out
sbb
fstps
fcompl
aaa
leave
xchg
lcall
jns
or
ljmp
xchg
add
pop
xor
mov
lret
adc
lcall
mov
lahf
pop
jge
cwtl
add
add
cmc
aas
pop
or
icebp
jbe
or
lahf
pop
mov
sti
pop
movsl
in
loopne
inc
ror
sub
add
aas
push
push
xchg
dec
insl
adc
sub
lods
ja
fisubs
add
sub
jecxz
jo
adc
repz
lods
inc
and
push
je
xchg
jnp
and
mov
adcl
inc
outsl
and
dec
mov
rorb
sbb
leave
and
xor
mov
fildl
cmp
adc
and
add
push
cltd
push
push
pop
mov
bound
mov
rolb
bound
js
ss
add
icebp
dec
adc
cmp
rol
push
es
jno
mov
push
mov
fstl
jle
test
xchg
jbe
dec
dec
adc
xchg
fs
fstps
mov
dec
fists
ret
cltd
cmpsb
stos
mov
test
into
and
fidivrl
adc
cs
test
insb
mov
out
lret
dec
in
push
jno
out
dec
pmaxsw
mov
jge
lods
mov
push
in
xlat
stos
lea
mov
xlat
xchg
fmuls
cwtl
mov
loopne
push
icebp
scas
pusha
sbb
test
nop
push
nop
ds
adc
test
or
roll
xchg
pop
inc
cs
and
test
inc
jbe
scas
sub
pop
stos
adc
movsl
incb
add
sub
lret
cmp
lods
sub
or
pushf
mov
ljmp
mov
outsl
scas
js
rol
hlt
pop
push
mov
adc
nopl
ss
sahf
in
push
push
mov
push
sub
mov
mov
ja
pop
dec
mov
sub
push
inc
adc
or
xchg
jecxz
leave
aas
imulb
shlb
or
shll
loope
call
sahf
movsb
subl
xorl
insl
out
imul
gs
and
or
movsl
cmp
clc
lods
xchg
mov
sbb
push
mov
adc
add
std
scas
in
loop
cmp
ds
nop
popa
push
inc
ds
pop
xchg
pusha
push
stc
dec
not
add
xchg
gs
outsl
inc
inc
test
jge
cmp
insb
push
out
stc
and
xchg
mov
mov
and
hlt
mov
aad
aas
pop
adc
sbb
movsl
lock
or
movsl
jl
xchg
sbb
push
jle
js
iret
imul
aam
add
mov
repnz
and
outsb
aam
je
cmpsb
popa
jo
outsb
js
jns
sbb
mov
pop
add
cmp
fisubs
jp
sbb
dec
pop
into
mov
jbe
or
loop
jne
sahf
xor
lret
or
ljmp
mov
cld
push
jecxz
dec
shr
dec
or
or
or
sbb
add
jns
cmc
inc
lea
push
cmpsl
ds
ss
movsb
mov
sarl
mov
test
rcl
jge
aad
push
push
sarl
das
int3
add
mov
adc
mov
xor
mov
lret
sbb
fst
mov
data16
inc
add
in
fwait
push
xlat
sub
sbb
cmp
sub
lods
int3
cmpsl
in
ljmp
adc
test
xor
lret
mov
mov
lret
test
push
mov
mov
sub
cmpsb
mov
sbb
jge
mov
leave
pop
movsl
test
fistl
xor
xor
xchg
inc
push
mov
dec
sbb
dec
popa
fnsave
fsubl
sub
mov
add
ret
xor
in
jo
call
aam
outsl
fisubrl
int3
in
jg
aam
inc
je
pop
jp
inc
mov
sub
xor
addr16
and
fs
aas
push
jbe
out
inc
or
dec
pop
out
int
imul
push
sub
jp
jle
xchg
xor
testb
imul
jbe
xor
inc
in
mov
stc
add
insb
and
mov
xchg
daa
clc
mov
arpl
aad
sub
cmpsb
inc
mov
mov
push
mov
adc
pop
str
cmp
and
push
repnz
xchg
int
pop
mov
call
xchg
out
aaa
xchg
xchg
insb
fsubs
fsubs
aam
popf
aas
data16
pop
bound
mov
outsb
aam
out
add
push
cli
inc
je
cs
dec
add
sbb
ret
push
sub
ficompl
or
jne
sub
rcrl
jg
cli
sbb
push
mov
movsl
inc
rcll
and
aas
test
adc
stos
inc
lds
iret
div
movsb
ret
test
cmpsl
dec
mov
call
pop
mov
mov
stc
cmp
or
cmpsl
leave
movsl
ud0
dec
int3
and
sub
fnstcw
pop
cs
sub
fwait
push
dec
or
stos
xchg
xchg
aaa
out
mov
jno
mov
push
imul
in
pusha
scas
aas
hlt
or
clc
push
inc
mov
cmpsb
or
adc
dec
mov
xchg
aad
aas
outsb
sarl
sbb
dec
imul
imul
ret
fwait
pop
or
add
fstl
cmpsl
out
pusha
pop
sbb
mov
add
sti
inc
xchg
loopne
fidivrs
imul
faddl
or
mov
sarl
xchg
arpl
xchg
dec
inc
xchg
lds
mov
pop
sub
mov
or
jp
jle
adc
inc
sbb
jl
dec
mov
push
pop
clc
sti
fisubrl
repz
pop
ja
repz
loop
and
leave
sbb
movsb
bound
daa
pop
inc
xor
clc
add
push
or
push
adc
mov
inc
mov
rorb
dec
insl
mov
fdivl
shr
jb
jp
cmpsb
mov
or
add
icebp
lods
addr16
fdivs
push
int
mov
cwtl
rcrb
mov
push
sahf
das
cmp
nop
ss
push
arpl
scas
adc
lret
pushf
or
or
sub
mov
adc
cmp
test
mov
sub
js
aam
in
sti
cmp
sub
fbstp
dec
mov
jns
stos
in
xor
movsb
xor
mov
ficompl
pop
push
xchg
fmuls
call
mov
xlat
scas
xor
loopne
push
mov
in
ja
and
adc
inc
cmp
test
sbb
jl
leave
jp
fcoms
es
jecxz
mov
shrl
js
push
clc
pop
add
add
add
outsl
add
jb
cmp
mov
les
xor
idivb
mov
dec
pop
das
push
incb
mov
movsl
add
rol
jns
ret
push
in
push
mov
push
repnz
adc
xchg
xchg
jmp
loop
adc
ret
mov
dec
fadd
inc
lret
push
pop
ss
and
dec
xor
cmp
cwtl
ret
pop
fisttpll
fsubr
scas
repnz
mov
into
repnz
and
mov
cmp
xchg
inc
mov
cld
mov
iret
mov
ficoml
shl
xchg
sarb
jp
fisubl
popf
mov
cltd
mov
insb
daa
xor
pop
lret
scas
or
add
jnp
jmp
xchg
adc
sub
cmp
sub
push
insb
mov
push
cltd
popf
loope
int
or
pop
cld
std
test
inc
and
test
mov
cmp
addb
jecxz
aas
cli
adc
lret
pop
repnz
sbb
dec
imul
out
call
jle
lcall
jno
pop
or
std
loopne
pusha
ss
nop
xchg
fldcw
ljmp
int
loopne
sbb
aam
xor
icebp
jmp
inc
sub
mov
fisubrl
mov
dec
std
sbb
int3
jnp
nop
test
mov
into
inc
cmp
dec
xorl
cld
sbb
adc
inc
jbe
xor
lock
sub
xor
lea
mov
lods
imul
mov
dec
mov
cmc
or
xor
loopne
je
and
inc
jo
and
ss
or
ss
test
jbe
sub
xchg
test
xchg
jno
push
das
movsb
popa
push
cmp
fmull
jecxz
testl
insb
push
outsb
sahf
int3
mov
cmc
and
dec
mov
pop
movsb
icebp
ja
sbb
jl
sub
mov
mov
lods
mov
push
daa
leave
jae
lcall
sbb
das
mov
decb
adc
mov
adc
xchg
adc
fwait
pop
mov
orl
fwait
es
test
mov
sub
push
adc
sbb
xchg
daa
rolb
xor
push
outsb
lock
aam
sbbb
mov
xchg
mov
cmpsb
sbb
imul
ret
xor
xor
cmpsb
jbe
mov
imul
out
mov
add
mov
jg
call
mov
hlt
push
xor
mov
in
les
lahf
jns
call
mov
jns
mov
and
jb
pop
dec
jmp
enter
cmpsb
and
data16
cmp
mov
in
push
in
out
aaa
loope
push
outsb
sbb
jne
in
outsl
sti
xlat
jne
std
lods
in
mov
stc
test
cmp
and
call
decl
pushf
fisttps
xchg
jo
xchg
jb
dec
iret
pop
lods
xchg
or
in
addr16
mov
or
dec
mov
jg
popa
lea
inc
mov
fisttps
xchg
mov
push
out
bound
sub
mov
pop
cmpsb
dec
add
fimull
test
push
mov
mov
dec
mov
inc
adc
inc
cmp
scas
mov
mov
mov
sbb
shll
es
pop
cmp
push
in
cli
xchg
cmp
stos
fdivrl
sub
sbb
mov
les
aam
fnstcw
lahf
cmp
fmul
push
loopne
movsb
adc
pop
jne
sbb
adc
sub
adc
jne
add
mov
mov
xor
or
idivl
mov
mov
xchg
roll
into
std
repnz
mov
push
cmp
sub
inc
sub
insb
push
lcall
or
fimuls
lea
out
or
mov
jle
push
out
clc
jmp
out
cmp
out
gs
cmp
lock
pushf
xor
popf
lock
into
mov
inc
sbb
aaa
jl
filds
aad
out
and
stc
sub
cmc
jge
rcl
imul
mov
xor
lahf
out
jns
ficomps
jmp
xor
xchg
sti
fidivl
mov
sti
inc
inc
cmc
cli
shll
sub
movsl
out
lock
jecxz
fucom
dec
jne
push
jns
mov
push
mov
sub
cld
hlt
and
jle
adc
pop
inc
mov
rorl
push
cmc
jbe
test
shrl
cmp
inc
mov
mov
cmp
rorl
cmp
push
mov
subb
pop
add
or
popa
push
adc
scas
jne
lahf
in
aas
cltd
mov
loopne
pushf
jnp
daa
lods
mov
mov
andb
mov
fiadds
out
jl
je
jbe
or
dec
out
xchg
pop
gs
gs
push
push
add
add
rcr
leave
inc
lock
shlb
inc
addr16
mov
mov
push
xorb
orb
mov
dec
cmp
cld
xchg
cmp
sub
mov
add
and
sub
shrb
xchg
neg
les
dec
outsb
mov
mov
xchg
adc
fmuls
pop
lcall
stos
popf
xor
push
iret
add
mov
jne
fcmovu
mov
xor
mov
lea
in
xchg
or
and
adc
xlat
push
xchg
dec
mov
clc
inc
in
adc
pop
aaa
push
adc
sub
sub
and
fwait
popf
lret
and
imul
push
mov
lods
jne
and
jo
adc
mov
sub
int
jmp
ret
push
leave
jae
test
jl
stos
out
mov
in
repz
movl
sub
push
aaa
push
and
sub
xor
test
arpl
mov
nop
mov
sub
ret
nop
mov
sub
xchg
pop
mov
adc
imul
insb
mov
xchg
orl
ret
cwtl
push
test
inc
pop
fwait
adc
lcall
pop
xor
jecxz
in
pop
mov
mov
add
je
repnz
cwtl
insl
dec
inc
fs
mov
lret
sbb
pop
sbb
out
lret
pop
sbb
xor
and
add
mul
cltd
mov
xlat
fstps
cltd
lea
cs
sbb
jmp
out
or
mov
cmp
jg
push
aaa
pop
popf
xor
cmovl
rorb
push
pop
adc
int
jb
dec
cmpl
adcl
push
mov
outsl
fdivp
repnz
les
mov
pop
pusha
into
push
out
and
and
enter
arpl
lods
inc
xchg
or
add
sub
into
or
daa
sete
mov
or
jne
xchg
jge
out
mov
test
popf
lcall
test
or
test
out
rcrb
out
jg
fs
cli
ret
xchg
inc
jl
mov
sbb
jmp
das
and
push
imulb
cwtl
pusha
adc
cmp
pop
jns
cmc
dec
mov
fistpll
fstpl
add
or
lods
dec
in
repnz
pop
in
sahf
aad
mov
cmpsl
add
stc
mov
sub
dec
out
stos
adc
jo
dec
fcompl
insl
push
adc
test
std
nop
push
pop
in
xchg
mov
or
sbb
push
pop
mul
test
inc
adc
pop
push
cmp
xor
sub
pop
rcll
inc
dec
sbb
fwait
adc
pop
jecxz
stc
or
mov
mov
icebp
fdivrs
or
push
push
mov
fwait
lcall
aam
popa
mov
pushf
cld
dec
pop
mov
sbb
sub
and
les
jmp
add
lods
shll
jns
ja
std
xorb
aad
out
aad
insb
sub
dec
insl
inc
mov
daa
push
jnp
cmpb
jge
jp
dec
ret
ror
add
out
int
sbb
sbb
and
dec
fwait
outsl
call
cmpsl
cltd
push
jnp
xor
dec
mov
sbb
xorb
insl
or
xor
in
jno
dec
scas
inc
fildll
aam
stc
jns
andl
enter
scas
repnz
xchg
cltd
mov
je
rolb
shlb
mov
pop
outsb
out
push
ret
scas
dec
dec
data16
xchg
cs
cwtl
scas
push
cmp
dec
pop
or
movsb
xchg
inc
add
mov
dec
ja
sub
sub
movsb
js
push
dec
je
sbb
add
jnp
inc
jae
xchg
xchg
repnz
cli
clc
pop
add
jo
out
mov
das
into
pop
pusha
int3
outsb
imul
jle
adc
xchg
js
pop
jnp
sub
sub
dec
xchg
mov
imul
into
adcb
scas
jge
and
mov
aaa
xchg
repz
jle
dec
repnz
dec
es
push
setl
icebp
sbb
imul
or
popa
sbb
mov
ljmp
in
mov
sbb
enter
inc
es
jo
xor
aas
in
fimull
mov
mov
inc
call
call
and
pop
or
xor
xchg
sbb
insb
lock
loop
lcall
adc
push
je
pusha
xchg
push
bnd
sub
jl
inc
lods
arpl
adc
es
cmpsb
sub
jge
hlt
add
pushf
mov
shrl
push
cmc
xchg
inc
xchg
test
gs
icebp
push
push
ret
push
mov
ret
xlat
ret
repnz
sub
loope
or
ret
mov
cld
into
push
arpl
push
je
insl
dec
push
push
mov
lcall
xlat
out
loop
xor
dec
inc
fcmovnu
rep
add
mov
xor
or
aas
fisubs
stos
add
pushf
sbb
hlt
sub
and
fildll
xor
ss
mov
xor
pop
adc
or
dec
cmovbe
dec
adcl
int3
pop
or
jno
and
push
cmpsl
adc
mov
mov
adc
loope
bound
mov
shrb
push
fidivl
filds
popa
push
cmpsl
std
dec
cmp
daa
in
ret
daa
push
test
loop
scas
fisttpl
mov
cltd
fdiv
mov
inc
add
scas
push
adc
stc
sbb
ja
cmp
nop
repnz
outsb
addr16
dec
cmc
sub
mov
inc
mov
enter
mov
iret
jp
test
add
cltd
arpl
aaa
adc
iret
sti
mov
cmp
xchg
pushf
xchg
cmp
mov
inc
inc
aam
lret
sahf
inc
add
ja
sub
aas
or
xchg
xchg
imulb
mov
out
clc
mov
xor
outsl
sbb
dec
add
icebp
test
cmp
daa
shrl
iret
loope
push
xor
sbb
imul
cmpsl
xchg
movsl
shll
mov
test
aas
aam
aas
hlt
sbb
jbe
push
xlat
icebp
push
jg
aam
shlb
pop
pop
testb
popa
lret
out
mov
adc
sub
xor
xor
jnp
fistpll
rclb
lods
lret
xlat
in
pop
and
inc
mov
mov
push
add
ss
in
and
mov
popf
aad
sub
jle
jo
shr
out
inc
stos
stc
mov
cmp
dec
jecxz
pop
dec
mov
into
outsl
sub
das
std
icebp
adc
and
in
xor
mov
aaa
aas
and
clc
and
gs
fcmovne
mov
repnz
pop
pop
pandn
mov
mov
inc
setbe
cli
pop
sbb
pop
dec
imul
fisttpl
xor
in
fucom
fildll
popl
pushf
shrl
out
imul
xchg
scas
sahf
out
cmc
aam
sahf
adc
pop
pop
inc
mov
orb
mov
es
xchg
nop
mov
fwait
push
in
dec
out
fstl
cmp
xor
mov
shll
add
sahf
leave
int3
mov
jne
dec
mov
add
fstps
test
push
adc
sti
clc
cmp
jp
jg
pop
and
sar
cmp
sbb
jmp
pop
enter
pop
hlt
loope
lahf
popa
or
outsl
push
clc
repnz
jb
jae
out
pop
pop
roll
adc
dec
int3
push
nop
fstl
nop
adc
inc
aaa
ja
scas
int
cmpsb
sti
lods
pop
mov
or
pop
mov
jecxz
hlt
outsb
lods
addb
pop
sub
or
imul
das
cmpsb
xor
sbb
mov
pop
lds
aam
xor
jne
sti
pop
cmp
imul
mov
cmpsb
push
cmp
jnp
xor
cmp
dec
inc
jg
mov
or
test
inc
in
cmp
movsl
mov
loop
xchg
sub
mov
pop
inc
mov
je
inc
fs
movsb
and
cmpb
sub
fwait
lock
adc
dec
cmp
mov
or
sub
inc
pop
insb
inc
or
mov
loope
cmp
sub
mull
or
inc
mov
and
push
xor
js
xchg
mov
jb
mov
mov
enter
jle
mov
lret
mov
aad
xchg
xchg
sub
or
aad
xor
out
in
sbb
mov
lcall
pop
push
clc
rorl
test
ret
rol
fmull
mov
dec
lds
pop
mov
andl
and
sub
cmp
sarb
add
fadd
cmp
lock
ss
insb
push
fisubl
and
adc
jle
jne
movsl
cltd
lods
jp
pop
mov
pop
test
cmp
mov
jecxz
jmp
test
inc
in
and
pop
inc
xor
cmc
inc
push
inc
hlt
cwtl
jmp
mov
mov
das
inc
in
cli
jl
or
int
sbb
xchg
mov
int3
add
xor
pop
adc
add
fldenv
addr16
mov
psubsb
out
jo
call
lods
sbb
mov
jl
pop
cmp
dec
push
mov
fnstenv
aaa
cwtl
sti
cltd
jg
xlat
lret
in
jmp
aas
repnz
repz
loope
or
add
or
push
cmp
scas
insb
xor
lock
add
pusha
mov
pop
xchg
popf
adc
sub
push
or
fadds
dec
mov
shl
jbe
test
pop
mov
adc
mov
or
clc
jno
cmp
addl
xchg
mov
movsl
xchg
mov
inc
cmp
int3
jmp
push
dec
test
adc
lahf
sub
iret
jle
cli
jnp
rclb
dec
frstor
int
lahf
mov
scas
mov
lret
repz
cmp
in
or
cmp
pop
test
push
xchg
ljmp
stos
or
stos
lods
pusha
inc
repnz
clc
into
in
aas
addb
push
cmp
fdivp
cwtl
dec
adc
daa
cld
dec
sub
data16
out
jecxz
push
push
pushf
leave
lcall
gs
test
dec
and
test
mov
arpl
cmp
add
or
xchg
aas
xchg
ret
pop
dec
hlt
in
cld
jecxz
or
cli
mov
rolb
dec
fucomip
leave
fcoms
stos
sahf
std
aaa
sbb
sti
lret
mov
mov
loopne
mov
add
sbb
stc
jp
jecxz
jp
adc
js
cwtl
lret
jo
lret
dec
push
pop
pop
jecxz
sbb
pop
push
xlat
pusha
push
daa
repnz
pop
cmp
sbb
scas
jecxz
sbbb
add
es
cmp
xor
mov
pop
push
movsb
mov
shrl
sub
xchg
shlb
popa
and
push
or
sbb
mov
mov
xor
sarl
dec
stc
arpl
jp
adc
daa
movsl
stc
fs
fisubs
push
mov
push
sbb
and
jae
xchg
mov
test
inc
daa
fdivs
jle
or
aas
mov
iret
mov
adc
clc
out
lret
xor
or
inc
jmp
lods
cs
mov
mov
loopne
mov
aas
adc
stos
cwtl
adc
pushf
pop
push
push
cmp
dec
cmp
sbb
pusha
hlt
lds
mov
jo
xchg
and
push
sahf
inc
pop
cmp
cmp
gs
rcrb
shrl
adc
imul
mov
stos
insl
xor
inc
jo
sbb
push
or
jecxz
cld
pop
inc
jbe
cmc
mov
data16
aas
adc
jo
pusha
outsl
inc
xchg
cmp
sbb
sbb
sbb
jne
test
adc
stc
inc
data16
xchg
outsl
loopne
xlat
cmp
cmp
mov
xor
pop
sbb
pushf
jecxz
cli
mov
cli
add
pusha
xchg
dec
popf
inc
mov
mov
subl
das
fstpt
cmp
ss
mul
or
mov
call
arpl
incl
xchg
aaa
inc
dec
addr16
inc
testb
jp
jno
add
inc
xchg
ljmp
loope
outsb
jl
fxch
mov
xlat
pop
lcall
pusha
fsub
test
xor
aam
aad
push
jecxz
push
pushf
repz
repz
adc
mov
push
in
nop
jne
mov
or
cs
out
je
and
bound
push
cmp
mov
pop
xchg
shl
std
jle
mov
mov
outsb
sbb
and
inc
mov
pop
mov
mov
jg
ficoml
adc
adc
jo
notl
sti
fwait
call
xor
push
sbb
jnp
test
icebp
scas
cmp
dec
inc
ss
jmp
cltd
push
ret
stc
push
stos
je
fldt
xlat
pusha
mov
pusha
sbb
sbb
scas
xchg
into
mov
cmp
or
clc
add
out
mov
push
or
popa
or
jmp
xor
mov
shlb
repz
push
out
int3
or
xchg
push
and
xlat
sub
sbb
imul
cmp
lcall
mov
jns
pop
imul
mov
jl
pop
sub
sbb
pushf
fsubrs
jne
jnp
pop
add
mov
mov
ret
inc
xlat
cs
dec
jo
repz
mov
icebp
lcall
mov
add
ret
xchg
popf
jo
and
xchg
sbb
fs
adc
inc
iret
cmp
cmpsl
ss
add
fbstp
xchg
push
jno
pop
pop
cmp
cmp
sbb
out
cmp
ljmp
cmpl
enter
addr16
fnstcw
int
sbbb
in
scas
push
sub
xchg
pop
test
movsl
mov
rorl
pusha
movsb
jno
addl
jge
pop
lock
jno
int
das
sub
daa
inc
mov
fistl
outsb
leave
dec
cmp
cltd
pop
fbstp
loope
and
dec
fsts
ljmp
sub
cmp
das
jle
aad
push
mov
testb
mov
xchg
jl
inc
push
aaa
push
aaa
imul
dec
push
cmp
nop
mov
push
sub
and
arpl
add
nop
xchg
aas
popf
xor
daa
je
jmp
lret
xchg
shl
sub
clc
mov
and
daa
ja
cmpsb
dec
cli
xlat
xor
mov
ss
push
data16
dec
ret
sub
inc
test
call
fistps
sub
out
inc
jnp
out
sahf
test
fisubrs
mov
push
pop
movsl
jmp
data16
push
fwait
mov
inc
sbb
or
or
dec
cmp
icebp
xor
jp
test
add
sub
mov
call
addr16
push
jne
sub
dec
push
jo
lods
add
jle
adc
inc
xchg
add
sbb
outsb
addr16
mov
inc
imul
sub
lsl
cwtl
aas
int3
sub
testl
shrb
roll
popf
daa
inc
negb
dec
xor
repnz
push
dec
mov
test
or
lahf
sbb
xchg
addr16
insl
add
dec
mov
xchg
jnp
add
ljmp
loope
jecxz
cmc
js
je
ss
adc
loopne
sbb
or
fmull
adc
cmp
or
nop
jb
cmp
in
out
mov
sub
dec
sbbb
sub
movsb
lret
inc
push
fidivl
test
int3
cmp
pop
jl
cmp
mov
jnp
dec
inc
sub
pop
iret
mov
push
movsl
jns
adc
push
mov
cltd
insl
push
xor
or
xor
repnz
loop
and
ja
cltd
stc
mov
sbb
sbb
and
adc
xor
scas
push
imull
dec
rcll
cmpsb
rol
pop
imul
xor
sub
push
mov
std
push
adc
sub
add
xchg
jmp
rorb
in
popf
sbb
gs
cmp
loopne
rorb
inc
imul
cmp
xchg
mov
fsubl
mov
sbb
jae
push
fs
ds
idivl
lods
iret
push
mov
push
test
cmpsb
outsl
xchg
stos
or
test
xchg
out
push
mov
clc
inc
xchg
loop
and
sbb
rolb
and
inc
mov
arpl
jns
sub
pusha
jne
push
clc
inc
xor
addr16
cmp
jp
jl
dec
push
add
mov
sbb
adc
enter
ljmp
inc
jns
and
enter
shrb
inc
sbb
xlat
ds
dec
push
outsb
pop
rol
xchg
jb
jb
stos
insl
xor
movsl
cmove
daa
fldenv
pop
xor
fnstenv
test
enter
fnsetpm(287
xchg
dec
mov
movsl
xor
dec
cmpsl
xor
add
jo
sub
les
sbb
into
out
mov
jo
pushf
xor
mov
outsl
loope
and
push
adc
test
mov
sub
loop
push
and
xor
shlb
mov
aam
cmp
enter
mov
add
or
push
adc
out
lcall
lret
sub
leave
dec
mov
mov
push
adc
mov
sbb
std
test
mov
into
pop
cmpsb
sbb
iret
cltd
xchg
pop
nop
xor
leave
adc
mov
rcll
icebp
ret
hlt
fwait
xchg
mov
aas
xor
push
rol
xor
pop
lds
ss
jb
movsb
int
sarl
mov
push
sub
pop
ret
push
in
or
sub
mov
notl
scas
and
popa
cltd
std
mov
add
fs
in
gs
mov
or
imul
pop
xchg
loop
subl
dec
jno
inc
or
insl
mov
xchg
mov
sarl
shl
testl
mov
dec
shll
mov
enter
jp
or
and
cmp
into
mov
test
in
andl
pop
xchg
xchg
leave
insl
xchg
mov
jg
jb
aad
pop
sbbb
sbb
cmp
jno
icebp
mov
pop
fiadds
loop
mov
in
and
movups
jne
mov
nop
inc
leave
std
repz
mov
xor
ss
dec
imul
or
into
fsts
or
mov
dec
in
mov
push
sbb
sub
jge
idivl
add
cltd
loopne
push
mov
push
push
sub
out
jmp
and
inc
fnstenv
sbb
adc
xchg
xor
rcrb
scas
rorl
push
mov
jg
stc
sub
adc
aas
xchg
add
jge
pop
jno
and
icebp
shrb
dec
lods
loopne
int3
mov
pop
jl
jne
xor
add
xchg
scas
fwait
or
movsb
add
sahf
sahf
adc
in
or
cs
sub
cmp
or
addr16
xchg
sbb
jnp
bswap
push
iret
in
and
push
into
shl
push
jmp
push
pop
inc
lcall
cmp
fcmovu
xchg
fisttpll
icebp
pop
mov
lods
inc
push
push
sbb
inc
scas
dec
mov
aas
gs
adc
iret
lahf
sahf
outsl
lret
lods
xor
inc
jp
and
jg
lock
rol
insl
inc
ret
inc
push
iret
sarl
int3
mov
or
jns
popl
fs
push
push
std
test
sarl
mov
push
ret
add
mov
pshufw
repnz
data16
jo
mov
xor
mov
movsl
movsb
insb
rorl
add
ljmp
mov
dec
cmp
dec
jle
imul
ss
int3
out
les
outsb
add
push
aaa
daa
mov
push
mov
adc
scas
arpl
popa
add
out
jle
sub
scas
xor
shll
inc
fistps
insb
outsl
lods
xchg
dec
jg
sti
cwtl
ficomps
mov
jecxz
ret
mov
inc
mov
cli
fcmovnb
inc
adc
mov
push
pop
dec
test
adc
sub
scas
outsb
push
jb
sub
rcr
pusha
push
push
lea
push
outsb
popf
mov
add
ret
adc
inc
mov
test
sahf
adc
pop
or
pop
mov
xor
mov
mov
dec
cmpsb
and
das
pop
fwait
dec
sbb
mov
mov
sti
pop
sub
add
push
std
mov
cmp
xor
jno
sbb
mov
adcb
imul
scas
sbb
add
stos
mov
pop
data16
clc
cmpb
test
insl
add
add
add
or
cwtl
testb
div
aas
mov
push
enter
loopne
dec
xchg
inc
popf
mov
add
mov
aam
dec
jge
adc
sbb
mul
inc
sbb
imul
lahf
jmp
in
sub
int3
dec
cld
out
inc
sbb
les
scas
mov
adc
pop
push
divb
pop
lret
add
insl
ja
xchg
sbb
mov
jae
shrb
int
adc
std
jns
ror
mov
add
test
sub
or
and
sub
scas
and
ret
sti
or
cltd
orb
push
and
inc
xorl
jle
cmp
push
movsb
add
xchg
repz
add
test
adc
or
cmp
or
xchg
test
popf
outsl
lods
mov
sbb
add
dec
shr
lock
push
jbe
lods
jmp
adc
inc
lea
aam
dec
rorb
test
mov
push
fs
out
iret
xchg
and
ljmp
andl
scas
mov
sub
cmp
mov
js
xchg
ljmp
xchg
call
add
and
rcl
mov
scas
les
sbb
push
mov
clc
mov
add
mov
mov
or
repz
sub
sbb
stc
outsl
fcoml
fs
sbb
jg
imul
in
idiv
inc
movsb
lret
pop
es
jl
mov
test
push
int
pushf
mov
cli
arpl
push
jl
xchg
push
or
test
sbb
inc
mov
mov
or
lods
jge
inc
cmpsl
and
mov
scas
adc
sbb
in
sub
test
out
lcall
inc
fdivrl
mov
xor
jmp
aam
inc
sub
xor
dec
push
xchg
add
inc
pop
xchg
jns
filds
ja
int3
inc
lret
fistl
out
dec
xchg
add
xchg
pop
sbb
xor
pop
sub
push
pop
mov
cs
add
xor
push
sbb
mov
inc
pop
cmp
repnz
andb
pop
pop
in
jns
sbbb
or
sahf
cmpsl
push
jo
icebp
mov
sahf
mov
ficomps
stc
jge
aaa
fs
lods
jle
stc
cmp
jns
mov
rorb
and
add
push
lcall
mov
in
and
push
cld
xchg
jnp
clc
aaa
sahf
testb
outsb
insl
sbb
push
jae
imul
imul
rcll
addr16
adc
ficomps
movsb
sub
das
mov
and
push
lock
pop
sub
jnp
inc
lods
cmp
leave
cmp
dec
xor
xor
sbb
pop
loop
mov
aad
push
push
lds
push
and
fnstsw
frstor
popf
xchg
or
mov
in
repz
mov
fcmovnu
inc
push
stos
dec
cltd
xchg
sub
sub
xor
and
loope
repnz
popf
test
dec
jno
shll
call
xlat
dec
lods
dec
mov
cmp
lret
popa
or
loopne
in
imul
cmp
xchg
jmp
lahf
gs
pop
push
xchg
lret
nop
js
nop
shrl
pop
and
xor
es
lret
push
in
jmp
xor
or
pop
cmp
les
and
xor
int3
pop
push
clc
add
shl
pop
pop
stos
dec
lods
fs
and
mov
jbe
push
mov
jmp
xor
xor
mov
mov
pop
jno
jns
push
js
mov
mov
frstor
pop
lock
or
jns
lret
inc
dec
or
pop
lcall
int3
cmp
push
pop
adcb
mul
pop
jl
adc
jns
push
cmp
data16
sahf
aad
cmpsl
std
dec
and
cmp
loope
test
adc
or
mov
gs
scas
push
mov
inc
mov
cmp
dec
jo
jmp
sbb
adc
test
gs
xchg
cwtl
adc
loopne
mov
mov
dec
pusha
xchg
xchg
jns
outsl
cmp
hlt
add
popa
cmc
out
inc
cmp
imul
inc
addr16
push
insb
mov
mov
add
mov
shr
popf
mov
add
nop
xchg
jbe
pop
aad
lahf
dec
lret
dec
pop
fisttpl
frstor
mov
jnp
xor
cmpb
js
push
lcall
rcrl
dec
cmpsl
loopne
fcmovbe
add
dec
cltd
mov
aam
lret
mov
xchg
in
sbb
je
mov
mov
add
add
push
push
popa
inc
add
inc
sahf
xor
dec
ss
cmp
ss
mov
inc
clc
insb
mov
mov
add
addr16
add
movsl
and
mov
jp
insl
adc
and
stos
out
in
sbb
pop
in
hlt
lds
sub
cld
js
dec
orb
negl
adc
xchg
mov
jg
sbb
xchg
popf
repnz
mov
test
push
int3
push
cmp
hlt
and
frstor
js
in
lcall
jl
sahf
int
fsts
lahf
inc
pop
push
dec
insl
cmp
movsb
mov
mov
les
adc
stos
pop
cld
das
les
daa
cmp
lods
fs
idivl
xchg
lahf
inc
mov
sahf
xor
cmpsb
enter
ret
jg
adc
sbb
push
or
xchg
roll
push
js
fistpl
cmpsl
in
dec
nop
push
jno
adc
xchg
xor
pushl
shr
icebp
leave
add
fcompl
mov
fisubrl
loop
jle
int
push
leave
pusha
rorb
add
mov
ret
adc
xchg
lret
out
and
ffree
xchg
icebp
outsl
movsl
inc
inc
fsubp
scas
pushf
jbe
push
mov
lds
stos
sbb
call
dec
lret
dec
xchg
mov
cmp
pop
adc
mov
xor
pop
and
sbb
mov
ds
xor
lret
mov
ret
push
fcoml
in
fistps
les
mov
stos
mov
repnz
jp
mov
push
lahf
sub
aam
outsl
add
pushf
mov
int
or
lret
cld
pop
jb
adc
insl
in
scas
leave
xchg
fdivr
scas
leave
enter
mov
dec
push
aaa
decb
test
xor
mov
leave
cmp
pop
fstps
roll
adc
lea
inc
dec
rcl
pop
ljmp
jns
ljmp
gs
adc
fstpt
mov
clc
ret
mov
or
lds
xchg
divl
fmul
jmp
ret
adc
pop
cmpl
cmp
insl
xchg
jnp
dec
mov
inc
or
stc
fcoml
movsl
dec
lret
inc
xor
sub
gs
adc
mov
cli
stc
jae
ljmp
cli
dec
cwtl
hlt
cmp
sti
insb
xor
xchg
sahf
xchg
mov
jp
sbb
xchg
iret
stc
sub
dec
mov
xchg
xor
adc
or
loopne
dec
mov
les
add
mov
mov
es
mov
mov
jmp
test
les
scas
into
out
aad
mov
iret
dec
mov
test
nop
shll
pop
ds
outsl
xchg
push
stos
jns
test
call
cmpsl
sbb
xchg
jle
mov
push
add
leave
xchg
aad
movsb
cmpsl
cmpsb
push
push
jl
xor
das
out
mov
sub
sbb
lock
enter
loopne
stc
daa
fs
xchg
pop
mov
addl
cld
pop
stc
fisttps
jge
test
daa
xchg
test
cmp
fists
jb
fcomps
push
sbb
adc
leave
lods
dec
fabs
jmp
leave
fs
mov
in
sbb
mov
mov
gs
pop
mov
sahf
icebp
sbb
insb
cmpsl
add
test
pop
jp
ja
pushf
inc
sbb
pop
out
repz
and
leave
cmc
sti
mov
cmpsl
mov
fistps
cmp
ljmp
mov
or
pop
cmp
and
out
add
xchg
ret
xchg
mov
lods
ja
mov
sub
xchg
mov
jp
mov
dec
cmp
mov
jmp
pop
fnsave
xchg
jb
arpl
ljmp
loop
dec
mov
in
int3
out
ss
lods
xor
cmp
scas
fdivrs
test
add
hlt
mov
sbb
jecxz
mov
sub
or
push
outsb
dec
and
stos
ds
call
dec
icebp
mov
fmuls
pop
sbb
mov
test
loopne
call
or
sub
pop
sub
adc
fs
xor
jecxz
push
popf
icebp
mov
lods
push
xchg
pop
loop
cltd
xchg
out
push
add
orb
jnp
or
inc
jns
pusha
movsl
mov
push
addr16
add
ljmp
nop
pop
sbb
cmp
push
cmpsb
mov
pusha
insl
es
sbb
jmp
outsb
cld
cmp
int3
cmp
pusha
lret
out
test
add
and
xor
fnstcw
rcll
cmc
dec
int
xchg
jle
js
lahf
int3
mov
test
int3
cwtl
enter
fcompl
movsl
loop
das
pop
push
pop
cmp
inc
rcl
lods
add
movsl
popf
shlb
leave
cli
xor
add
push
sbb
add
out
aam
mov
cmp
or
and
push
dec
adc
jg
jecxz
xlat
stc
cli
int
out
add
gs
mov
fidivs
pop
and
xor
inc
shrl
aad
test
repnz
pop
mov
and
fiaddl
push
and
inc
or
leave
js
fdiv
sub
fldt
xor
inc
sbb
popf
nop
push
jecxz
sahf
adc
inc
push
sarb
mov
mov
sbb
cld
shlb
xchg
insb
out
imul
xchg
data16
cmp
fdivrp
add
xor
lahf
repnz
xchg
out
mov
pusha
cs
xchg
shll
pusha
pop
aas
imul
dec
xchg
stos
aaa
cmp
xchg
cmp
sbb
enter
dec
cld
sbb
ljmp
pusha
mov
sbb
fiadds
cmp
sbb
aam
pop
or
loope
inc
jno
and
mov
addb
add
sbb
jge
sar
and
test
xchg
shll
mov
sub
enter
mov
jne
cmp
add
test
push
cmp
xchg
jp
xor
jns
leave
push
dec
add
loope
je
les
ljmp
stos
mov
mov
dec
mov
std
sbb
mov
add
mov
es
jmp
add
xchg
dec
mov
daa
bound
xor
sub
and
xchg
daa
adc
dec
mov
rcll
sub
pop
fsubl
loop
mov
jle
xor
out
dec
xor
xlat
cmp
inc
test
es
push
inc
inc
inc
push
xlat
cli
fldcw
xchg
fdivrl
xor
mov
cmpsl
andb
sbbb
pop
jne
call
cltd
add
mov
sbb
jecxz
les
xor
and
mov
popa
inc
enter
xchg
push
sub
jae
jno
in
jmp
ljmp
data16
push
xchg
adc
jb
nop
inc
sarb
inc
mov
ficoms
jne
out
outsb
loop
mov
dec
adc
pusha
aad
cmc
hlt
cmp
pop
inc
or
ds
lret
gs
lock
xchg
lcall
and
addr16
mov
xchg
dec
cmp
xor
add
and
out
adc
mov
fistps
bound
das
jmp
rcr
pop
sub
cld
mov
xchg
iret
pop
sti
scas
xor
dec
mov
sti
mov
loopne
mov
aam
cmp
rcl
or
pop
mov
lods
jno
out
push
cltd
loop
in
popa
dec
ss
pop
dec
adc
lock
add
add
xor
jle
stos
clc
pushaw
testl
aam
in
mov
add
popf
mov
push
mov
in
mov
nop
mov
pmulhuw
mov
xlat
jle
dec
push
mov
mov
mov
sbb
sub
jge
in
into
mov
ss
in
scas
pop
xchg
jo
mov
fisubrl
and
movsb
dec
les
sbb
pusha
add
lcall
fadd
es
push
jno
and
fdivrs
inc
mov
ret
dec
or
shrb
adc
lds
ret
adc
sub
repz
stc
inc
stc
stos
les
xchg
mov
jl
xchg
xlat
pop
cmp
xor
repz
imull
pop
bnd
mov
xchg
in
sub
lret
jo
inc
addr16
jl
leave
jmp
push
inc
test
mov
mov
aaa
out
jne
sbb
cmp
fcomi
sbb
fcmovnb
arpl
add
xchg
pop
adc
cmpsl
mov
cltd
mov
lret
sbb
into
push
mov
rolb
mov
ljmp
jae
fnstsw
mov
or
push
xor
cmp
adcl
sbb
pop
in
pop
pop
sbb
sub
aas
or
mov
xchg
sbb
pop
push
adc
pop
hlt
and
fistpll
ret
add
rcrw
lcall
xchg
dec
div
pop
movsl
push
xor
sarl
cmpsb
add
and
push
test
loop
stc
lods
push
sub
outsb
sub
movsb
mov
xchg
cmp
out
add
clc
imul
add
sti
or
insb
loop
mov
sar
shlb
mov
test
dec
xor
cmp
xlat
js
dec
adc
jb
push
mov
ja
cmc
or
lods
movsb
stos
enter
mov
dec
sahf
mov
outsl
push
jb
mov
subb
lahf
lret
cmpsl
dec
ret
jecxz
jo
mov
add
sbb
jge
ss
stos
sub
mov
sti
pop
ficompl
call
xchg
mov
pop
cmp
daa
sub
cmpb
popf
into
test
repnz
cld
pop
dec
ljmp
outsl
ja
call
test
mov
add
jb
je
in
out
loop
movsb
stc
stos
push
addb
ja
cmp
lods
bnd
sbb
jne
fldl
cmp
ret
imul
pop
cli
or
mov
lea
repz
hlt
loop
adc
mov
sar
test
mov
adc
imul
or
adc
mov
fcomps
sub
fnstsw
aas
cli
enter
stc
sub
sub
shr
stos
xchg
xor
test
sub
add
jne
xchg
inc
test
scas
dec
cmp
and
mov
iret
in
jo
fs
ja
xchg
fisttps
mov
adc
sub
mov
jae
xchg
xlat
sub
pop
cmpsl
js
cmpsb
xchg
jo
aaa
jns
cmp
les
jnp
sub
bswap
lahf
js
adc
pop
xchg
addl
mov
sti
icebp
jp
ja
mov
outsb
ljmp
out
daa
lds
dec
call
ljmp
ret
jnp
daa
push
les
loope
mov
adc
lret
in
xchg
sarl
ret
int3
ds
testl
jg
mov
push
ljmp
or
cmpsb
test
ret
push
imul
sbb
mov
mov
sbb
cmp
add
call
adc
push
aad
adc
adc
ljmp
stc
jecxz
mov
adc
pop
aam
mov
loopne
pop
dec
and
mov
mov
pop
xor
push
in
pop
insl
stos
mov
mov
push
and
fcmovnbe
xchg
sbb
into
mov
xchg
test
xchg
lock
dec
cs
sti
mov
xchg
loop
push
lods
es
stos
scas
jo
fmulp
cmpsb
cmp
or
neg
mov
push
or
cli
ds
in
pop
add
ljmp
lods
cmp
xchg
decl
aad
adc
ret
sbb
loope
adc
scas
jle
jno
push
test
jbe
leave
dec
out
jp
daa
neg
inc
sbb
and
das
jmp
pop
cvtpi2ps
jl
inc
ja
ret
psrlw
popa
stos
pop
ret
sbbb
xchg
lds
push
loopne
jp
adc
repz
adc
dec
cmp
dec
add
into
into
enter
pop
sarb
mov
push
xor
out
jbe,pn
stos
cmpsl
enter
mov
addr16
dec
sbb
cmp
in
sub
lahf
pop
arpl
fcoml
mov
nop
mov
test
adc
leave
repnz
insl
inc
xchg
icebp
mov
mov
dec
mov
aam
xchg
mov
xchg
repz
lods
xchg
xchg
jbe
arpl
sbb
das
ret
add
mov
add
adc
push
insl
iret
pop
lret
cltd
dec
call
pop
sub
mov
mov
dec
sbb
imul
jb
idivb
je
lret
sub
add
cld
iret
mov
inc
filds
jns
or
xlat
or
js
sarb
test
jns
out
imul
cmp
popf
jecxz
scas
aaa
lret
rclb
pop
ss
dec
xor
jge
dec
adc
xchg
clc
scas
jbe
movsl
or
test
mov
dec
and
mov
cmp
addr16
mov
xorl
dec
ds
mov
mov
mov
push
dec
loopne
xor
or
outsl
sbb
add
adc
subb
mov
or
mov
stos
out
out
xor
mov
pop
jbe
sti
mov
sub
pop
dec
icebp
stos
outsb
cmp
jae
inc
pop
and
jp
cmpsl
xchg
jp
lahf
mov
enter
pushl
cltd
jnp
add
loope
adc
and
addr16
xor
add
push
in
clc
iret
dec
or
pop
sbb
outsb
lods
jmp
in
jbe
dec
stos
popa
jl
in
jae
and
mov
jne
inc
mov
dec
out
test
jb
mov
push
pop
xchg
repnz
repz
inc
dec
test
add
add
loopne
or
jecxz
inc
sbb
andl
xchg
pop
adc
out
push
addr16
pop
in
loop
shll
xor
lds
imul
shlb
movsl
jge
std
and
stos
dec
test
out
add
movsb
cmp
jecxz
mov
and
xchg
dec
mov
popf
inc
mov
jmp
and
test
xchg
jmp
xchg
sub
cmpl
stos
lret
mov
mov
les
mov
pusha
xor
testl
jb
cmp
adc
push
in
scas
inc
dec
cmp
jne
cmpsb
jbe
add
fisubrl
or
dec
je
lret
js
jae
add
xchg
pop
fdivl
std
out
fstpt
push
shl
sbb
cmp
push
sahf
mov
xor
mov
fnstcw
adc
or
icebp
lret
ljmp
cmpsb
push
push
inc
in
movsb
adc
xchg
add
rcrb
cmp
mov
xrelease
das
xor
inc
mov
push
xchg
ja
mov
xchg
mov
mov
xor
sar
lds
pop
dec
stos
pop
add
xchg
mov
lcall
mov
insl
sub
xchg
out
mov
lahf
hlt
mov
mov
cmp
sub
mov
mov
pop
jg
and
jno
sarl
mov
stos
outsl
xor
mov
sbb
push
xchg
loopne
inc
push
cwtl
jbe
mov
add
idiv
xchg
xchg
fidivs
out
shll
push
outsb
scas
add
mov
ja
pop
and
test
bound
in
sub
fsubrs
fwait
cmpsb
pop
and
jno
xchg
lds
adcb
add
dec
pushl
addr16
test
lcall
lods
xchg
cmp
lods
sub
imul
jl
scas
sbb
in
xor
and
lfs
gs
lods
or
fidivrl
push
push
push
cmpsb
adc
subl
mov
or
iret
pop
push
fcomps
lret
mov
daa
incb
jecxz
iret
outsb
mov
and
stc
lods
call
aad
add
out
hlt
nop
pop
test
movsb
or
popa
shrl
lods
push
aad
push
ret
int3
out
mov
lahf
sbb
mov
pop
push
adc
pop
mov
xor
outsb
mov
clc
testb
xor
or
out
add
into
mov
in
pop
insl
push
mov
cli
or
jbe
test
sahf
in
inc
cmc
mov
xor
jge
repz
dec
and
adcl
enter
push
xor
or
push
sahf
dec
dec
push
fldenv
movb
mov
in
stc
sbb
jp
pop
js
mov
into
cwtl
adc
inc
ja
sbb
jle
rcrl
mov
es
mov
and
push
mov
add
and
mov
ljmp
dec
mov
jmp
nop
stos
xchg
cmp
jp
jge
fldcw
lret
bound
rcll
clc
push
adc
lahf
add
loop
fwait
mov
arpl
push
mov
mov
push
lds
adcl
and
push
jnp
push
lea
ret
lea
push
dec
repnz
int3
jns,pn
pop
add
scas
js
jnp
ljmp
dec
outsb
xchg
addb
push
subb
add
cmp
jp
daa
adcb
push
and
mov
xchg
pop
mov
ret
movsl
xchg
cs
jl
jbe
and
sub
das
loop
test
addb
and
inc
aas
shll
movsb
dec
daa
test
mov
push
sub
push
xchg
pop
mov
popf
frstor
popf
or
push
scas
sub
adc
mov
aam
or
outsb
jg
jp
iret
jne
and
push
push
xchg
cmp
xor
clc
sbb
das
leave
mov
xor
loope
cmp
add
cmp
das
sbb
jns
fs
stc
cli
pop
pop
and
xchg
ret
jge
xchg
roll
shrl
cmp
clc
inc
push
fs
sbb
add
push
push
mov
adc
and
add
stos
mov
test
data16
mov
mov
inc
sbb
sub
cmp
mov
mov
or
pop
js
jae
outsb
cmp
cmc
dec
clc
test
inc
loop
fldenv
push
shl
subb
je
std
cmp
jae
inc
mov
aaa
insb
pop
cltd
jnp
rolb
leave
and
ror
stc
add
pop
xor
mov
fistps
je
lock
xchg
mov
sub
lcall
dec
mov
jbe
fmuls
xor
lds
out
cmp
mov
nop
inc
jne
or
push
or
push
cmp
stos
lret
add
cmp
fldl
add
ja
ja
or
subb
or
cmp
sarl
aaa
inc
or
and
cmc
xor
cmc
pop
test
and
push
aad
cld
sub
mov
test
adc
sbb
sub
test
sub
xor
bnd
idiv
mov
push
mov
jl
dec
pop
push
xor
lods
cmp
cld
add
inc
pushf
mov
mov
xchg
test
mov
mov
mov
dec
xor
pop
xchg
int
ret
inc
cmc
test
hlt
mov
in
mov
rcrl
cmp
sarb
cmp
outsl
mov
addr16
pop
fs
mov
jb
scas
sub
inc
push
pop
cmpsl
imul
cwtl
shrb
xchg
cmp
popf
mov
addr16
jle
jae
fs
fisttpll
mov
clc
int3
cmp
push
scas
add
and
inc
mov
fmuls
repz
sub
mov
inc
fcomps
addl
push
pop
mov
mov
adc
pop
fstps
dec
ret
sub
dec
fisttps
or
js
hlt
mov
and
and
pop
add
int3
popa
addr16
mov
push
cmc
dec
mov
lods
xchg
loop
fiadds
shr
lret
sahf
aad
aas
pop
and
push
xchg
cmp
mov
pop
mov
sbb
inc
push
mov
jae
test
push
int3
rorl
and
out
push
ret
and
xchg
jo
mov
js
dec
xchg
cmp
in
inc
xchg
imul
push
ret
dec
xor
or
and
shl
test
or
aam
movsb
lret
mov
xchg
ret
pop
fldl
orb
insb
add
sahf
sbb
aad
dec
clc
pop
outsb
add
inc
orl
sbbb
dec
sub
mov
into
jae
and
mov
dec
and
std
push
pop
int3
pop
pop
jmp
mov
ja
stos
mov
add
lods
pop
jle
dec
dec
scas
xor
push
jle
ljmp
fiadds
xor
cmp
mov
pop
lahf
inc
lock
sbb
xor
test
adc
jae
arpl
ret
aas
clc
add
test
out
push
push
mov
and
xor
inc
rorb
mov
ret
fistpl
call
push
mov
outsb
call
insl
mov
cmp
sbb
sbb
adc
lea
test
inc
std
fs
hlt
or
jl
movsl
add
ja
sbb
nop
lods
inc
fwait
push
push
sar
sub
jge
pop
test
nop
push
in
inc
mov
nop
int
add
scas
in
xlat
cltd
nop
rolb
jmp
cmp
fcmovb
and
nop
rol
imul
push
cmc
imul
dec
mov
lahf
fisttpl
or
xchg
cli
jno
xchg
sbb
xor
push
pop
or
js
and
pop
adc
add
mov
xor
sub
mov
mov
xchg
mov
pop
pushf
js
mov
push
xchg
adc
jbe
inc
cmpb
xor
sbb
std
orb
out
aaa
in
in
int
in
js
mov
jmp
ficoml
inc
add
hlt
add
sti
sbb
test
fsubs
cmp
imul
pop
push
pop
insl
adc
shrb
pop
xor
mov
lds
pop
sbb
pop
out
sub
outsb
imul
mov
pop
mov
or
cmp
stos
cmp
popa
repz
mov
cld
insl
rolb
outsb
cltd
test
call
inc
or
test
faddp
push
out
cwtl
orl
adc
push
add
sbb
js
mov
mov
inc
movsb
add
or
adc
cmp
enter
shll
push
ja
int
sub
mov
jl
jge
mov
aam
dec
fsts
in
jns
cld
mov
daa
int
and
movsb
in
out
cmpsl
push
push
adc
push
and
push
xchg
push
fistl
sbb
in
insl
div
jge
sub
insb
daa
rcrl
sbb
cmp
imul
add
mov
inc
ret
nop
or
imul
adc
out
fidivrs
mov
push
dec
out
sbb
in
mov
fnstcw
or
scas
arpl
xchg
add
xor
ss
decb
adc
push
imulb
nop
xor
jl
pop
out
scas
fcomip
rolb
cmp
mov
xor
fs
dec
movsl
and
shlb
sarl
push
jecxz
xor
dec
fsubl
je
cltd
ficomps
jae
push
add
or
lret
mov
addr16
in
jg
xchg
jne
dec
rcrl
repnz
push
shl
dec
mov
push
out
sbb
pop
or
or
movsb
out
mov
or
movsl
add
cmp
jp
mov
sti
ds
xor
push
mov
mov
pop
and
insl
cmpsl
icebp
push
cmpsl
rorb
push
add
pop
mov
pop
ljmp
mov
out
jno
hlt
push
cwtl
iret
add
loope
test
shll
or
les
lcall
ret
adc
ret
mov
pop
outsb
loop
imul
and
jmp
cld
or
and
rcrl
scas
lret
push
bound
sbb
int3
leave
psubb
pushf
rolb
xlat
jo
std
mov
popa
push
out
dec
inc
inc
push
scas
aad
dec
add
mov
repz
repz
jne
sub
out
adc
adc
jae
in
and
loope
mov
or
pop
int3
sbb
mov
and
into
mov
rcrl
pusha
add
jge
aad
adc
push
adc
fwait
stos
and
test
iret
test
test
popf
in
das
enter
mov
sahf
or
or
mov
lock
roll
leave
or
mov
dec
mov
mov
and
pop
jp
push
out
testb
xor
mov
mov
inc
sbb
cmpsb
inc
xor
sahf
out
cmp
sbb
std
icebp
ss
sub
pushf
cmp
js
outsl
cmpxchg
je
cmp
adc
or
lds
xor
xor
scas
or
sbb
push
jb
and
leave
cmp
and
stc
dec
call
inc
jle
push
lea
jecxz
outsb
cld
jns
add
call
imul
clc
mov
fst
mov
stos
adc
jecxz
fs
and
lcall
lret
dec
popf
mov
lret
fcomi
lock
adc
loope
push
sub
push
stos
dec
add
scas
sbb
test
loop
hlt
mov
orps
outsb
testb
std
into
aad
mov
dec
mov
aaa
hlt
mov
xor
xchg
mov
mov
jnp
dec
popa
xor
mov
add
popf
mov
scas
pop
dec
mov
jg
stos
scas
sbb
or
dec
pop
push
add
jg
lahf
inc
pop
aam
ret
fisttpl
mov
movsl
push
push
xchg
xor
nop
or
pop
mov
inc
orl
lcall
ret
jb
cmpsb
mov
jmp
popa
dec
or
cltd
divb
and
cmp
push
add
pop
int
fcoms
dec
inc
aas
jne
rol
lods
jecxz
dec
dec
das
lds
enter
mov
stos
in
ror
rcrb
pop
aam
das
pop
enter
mov
mov
insb
fs
aaa
imul
fdivrs
clc
xor
out
jno
jmp
lock
cmp
rolb
or
cld
addr16
lcall
push
xchg
rcrb
idivl
jp
mov
sub
shr
jno
mov
loop
xor
adc
unpcklps
push
xchg
ss
imulb
and
dec
stc
in
repz
or
inc
cmp
jbe
imul
xchg
pop
push
addr16
loop
dec
sub
dec
pop
sub
enter
testl
push
das
fldcw
aam
mov
sbb
cwtl
lock
jp
loopne
jle
dec
in
sahf
mov
fcmovb
bound
std
jnp
ror
dec
fdivrp
leave
push
lret
sbb
lds
cmpsl
movsb
mov
push
jne
sbb
xchg
or
mov
mov
mov
ret
aad
jg
xor
les
mov
or
popa
sti
clc
jl
xchg
fucomi
pop
push
cmp
insb
imul
mov
arpl
xchg
xchg
adc
jno
adc
dec
push
inc
cwtl
test
les
out
lret
sub
ret
xchg
dec
mov
gs
fcom
cmp
pop
in
inc
in
addr16
test
or
adc
and
ja
xchg
movb
mov
cmp
ds
scas
or
in
int
dec
push
mov
push
nop
push
repz
add
cmp
xchg
lods
rorl
dec
jnp
or
adc
mov
sbb
push
sub
xchg
ljmp
xchg
nop
inc
or
sbb
in
dec
loop
jno
ja
jno
and
mov
cmp
test
ds
xchg
xchg
ja
mov
rclb
jl
sub
jnp
push
outsl
add
mov
mov
leave
sti
addr16
not
cmpsl
mov
mov
hlt
aad
lea
stos
xchg
pop
pop
dec
adc
mov
out
lret
push
popl
cwtl
push
xchg
mov
lcall
fisttpl
mov
clc
lea
push
mull
mov
push
shrb
jp
push
add
fldl
rcrl
stos
popa
sub
xor
imul
popa
test
dec
mov
leave
shl
xor
fstps
bound
mov
gs
insl
cmpsl
add
jbe
shll
lea
fists
adc
lds
cmpsb
dec
in
jl
testb
movsl
mov
xchg
bound
xor
mov
ljmp
mov
jb
mov
pop
or
int3
stos
rorb
ret
notb
mov
cs
cmpl
ds
or
jo
pushf
fldt
pop
imul
sbb
dec
xor
aad
in
addr16
add
xchg
pop
cld
fwait
shrb
shl
cmp
sub
or
pop
push
nop
ret
push
and
ret
xchg
cmpsb
xor
jnp
adc
in
pusha
out
dec
outsl
mov
movsl
inc
pop
mov
lds
pushf
mov
pop
int
test
in
lds
jno
mov
jnp
cmp
lds
int3
pop
data16
icebp
xchg
jecxz
and
in
mov
or
dec
cltd
mov
sahf
fsubrl
sbb
scas
push
jne
xor
enter
add
pop
cmp
mov
add
xchg
push
adc
icebp
mov
cmp
push
movsl
pop
mov
xor
das
std
inc
push
out
jle
adc
mov
push
ljmp
pop
repnz
add
mov
in
stc
or
jecxz
shlb
pushf
mov
outsl
mov
leave
fwait
jbe
sub
cmc
outsb
jb
pop
dec
dec
cmp
cmc
add
outsl
inc
push
pop
xor
push
int
mov
xchg
jle
out
push
insl
or
push
jb
jle
pop
pop
bound
fsts
mov
mov
push
cmp
cmp
ss
divl
xchg
dec
or
iret
int3
mov
and
and
js
push
mov
loopne
inc
insl
popf
lds
pop
sbb
outsl
insb
lret
lea
sbb
call
out
mov
pop
add
or
mov
repz
test
movsb
dec
aas
inc
jne
or
ds
and
push
push
mov
mov
or
andb
fisttpl
repz
loop
and
sbb
es
int3
pop
iret
or
push
or
addr16
lods
ja
rorl
pop
out
jne
jmp
out
push
in
outsb
xchg
mov
into
es
and
das
pop
ja
cmp
add
push
je
add
mulb
sub
or
out
xchg
xchg
lahf
mov
js
mov
sbb
lock
sti
push
add
cli
dec
sub
out
jne
call
es
shll
rorl
icebp
fisttpll
iret
imul
jp
je
daa
adc
call
adc
pop
lret
inc
jp
xlat
lcall
mov
mov
pushf
jo
enter
or
xorl
mov
int3
stc
outsb
push
inc
mov
and
lahf
mov
and
aad
jmp
xchg
cmc
xchg
cmp
pop
mov
inc
pop
movsb
roll
mov
mov
mov
sbb
mov
sbb
inc
insb
add
arpl
inc
pop
clc
or
into
sti
sahf
pop
fs
pusha
clc
bound
push
add
in
shlb
adc
jbe
sbb
pop
sub
clc
sbb
mov
xor
imul
dec
icebp
inc
dec
mov
pop
in
call
mov
lods
mov
dec
fsubr
gs
adc
sbb
mov
es
stos
mulb
bnd
mov
loop
dec
mov
ja
pop
push
mov
mov
negl
out
aad
or
repz
add
les
orb
push
mov
test
in
or
or
add
xchg
scas
mov
and
cmp
xor
stc
test
push
mov
xor
aaa
sbb
fldenv
ror
mov
and
jo
and
jecxz
into
shll
mov
sarl
sub
add
jns
xor
cmp
and
andb
arpl
sbb
cmp
stos
sub
test
push
jle
adcl
fcmove
push
lods
or
scas
xchg
xchg
add
mov
das
mov
pop
cmc
cmc
jae
lods
int
stos
fistpll
add
mov
lret
leave
xor
or
push
std
mov
jle
pop
fsubl
lret
mov
push
jmp
mov
dec
adc
inc
lods
sbb
test
sub
jbe
cmp
fs
scas
push
or
fldcw
outsb
push
xchg
push
or
outsl
pop
dec
orb
insl
mov
sbb
rorl
fldl
xor
mov
mov
mov
insl
pop
cld
sub
dec
adc
outsl
test
dec
into
addr16
adc
pop
das
sbb
pop
xor
nop
pop
jns
loope
cmpsl
stos
push
je
inc
sub
outsl
pop
jnp
dec
pop
sub
cld
lods
add
stos
fstpt
idiv
negl
mov
xchg
xchg
sub
js
daa
mov
sub
mov
xor
jmp
pop
jns
jmp
loop
mov
movsb
inc
push
adc
shl
mov
ljmp
testl
push
loop
incl
adc
mov
pop
arpl
ss
test
mov
ja
je
sar
push
pop
js
adc
adc
sbbl
jns
pop
mov
pop
mov
mov
cmpsb
movsl
cltd
jne
mov
cltd
loop
std
inc
mov
outsb
iret
fwait
jnp
iret
inc
pusha
js
jg
and
mov
push
subl
push
sbb
pop
aad
sbbb
hlt
push
call
mov
add
cld
out
xchg
sahf
in
je
and
sub
sub
ret
in
and
call
call
mov
out
pop
shr
jge,pn
mov
lds
mov
cwtl
lods
dec
cltd
jp
xchg
sarl
lods
das
sarl
mov
jne
lea
mov
sahf
pop
adc
mov
push
dec
cltd
dec
pop
sbb
fstl
sbb
and
sub
sub
add
jp
lahf
ja
pop
stos
xchg
ficompl
xchg
in
insb
cmpsb
jae
sbb
lret
rcrb
mov
movsl
outsb
cld
aas
into
jne
sub
lods
cmp
mov
pop
imul
cs
xchg
mov
notb
loop
mov
mov
jl
mov
insb
xchg
fwait
mov
mov
je
call
lcall
rorl
xor
xor
xor
push
mov
push
push
and
pop
inc
adc
lcall
pop
cmc
jecxz
and
mov
jecxz
sub
push
dec
imul
fcoms
adc
fwait
popa
in
mov
mov
jg
in
adc
pop
dec
out
sbb
mov
pop
push
iret
cmp
dec
add
fwait
xor
repnz
sbb
jno
mov
add
hlt
adc
test
es
ja
icebp
adc
fs
xor
lret
ss
sti
dec
dec
pop
xchg
push
and
lahf
cmpsl
iret
push
push
sbb
mov
cli
aas
pop
mov
das
or
xchg
pop
js
inc
repz
sub
fadd
and
cmpsl
pop
repnz
call
jmp
cmp
adc
mov
inc
push
cmpsl
out
add
sub
push
or
sub
mov
push
ret
jno
nop
or
add
call
mov
push
jnp
lods
jmp
scas
fucomi
pushf
inc
popa
mov
inc
cmp
cmp
jbe
test
push
cld
add
cmpsb
mov
fucom
mov
dec
lods
inc
adc
std
inc
pop
inc
movlps
call
lock
xchg
aam
mov
pop
pop
scas
aaa
jge
jae
pop
scas
sub
jge
decb
int
in
int3
push
insl
sbb
lcall
xchg
cmc
outsl
cmpsl
mov
pop
pop
adc
mov
aaa
dec
mov
mov
jp
rcl
or
push
popf
shrb
ret
inc
or
popa
adc
mov
dec
and
jmp
pop
lret
sbb
lahf
mov
mov
lahf
mov
inc
in
call
popf
in
cmpl
cmc
icebp
int3
adc
sub
stos
cmp
cmp
add
xchg
out
pushf
divb
imul
pop
ja
dec
cmp
adc
daa
les
pusha
xchg
and
mov
packssdw
adc
sub
nop
arpl
add
adc
sbb
xlat
sbb
adc
cli
bound
push
add
negl
adc
outsb
lret
xchg
push
mov
push
jg
xor
aas
pop
fistpll
inc
fnstsw
jg
adc
add
fildll
int3
xchg
inc
call
andl
mov
xor
gs
pop
jge
push
idiv
mov
mov
aaa
mov
leave
jl
cmp
jge
jns
fnsave
mov
mov
jmp
pop
pop
inc
in
jl
mov
dec
je
adc
negl
pop
mov
xor
push
addb
std
cltd
sbb
cmpsb
mov
cli
sbbl
jae
ficoms
pushf
jg
or
jo
shrl
fisubl
jle
cmp
dec
test
sahf
mov
push
lret
pop
lea
pop
jb
lcall
sbb
sbb
aad
or
out
fdiv
push
mov
daa
daa
dec
or
sbb
mov
and
mov
loop
lcall
aas
les
push
mov
xor
pop
push
pop
adc
hlt
push
adcb
push
jge
stos
enter
mov
mov
fmuls
jge
add
pop
cmc
mov
jae
mov
dec
cld
xor
aas
pop
in
cmovae
in
adc
and
fisttps
jae
insb
add
xor
lcall
jp
mul
popa
bound
sti
xchg
notb
dec
imul
fiaddl
imul
lret
cltd
pop
rcrb
dec
pop
ja
pop
dec
pop
mov
gs
fsubrs
fildl
dec
orl
and
fildll
or
sahf
pop
stc
xchg
int3
mov
outsb
dec
sar
fwait
jnp
cmp
pop
sub
ss
inc
imul
mov
push
repnz
fstpt
insl
jnp
xchg
xor
push
negl
xor
xor
add
add
aas
fsts
fistps
insb
adc
sbb
movsb
test
shl
push
sbb
cmp
mov
mov
mov
and
lock
ss
mov
add
sbbb
repnz
or
test
shlb
hlt
inc
or
imul
sbb
in
pusha
addr16
and
lahf
subb
imull
ja
dec
sub
mov
sbb
test
and
inc
inc
sbb
pusha
inc
adcl
test
jbe
jo
lock
stos
mov
adc
cmp
xor
loope
dec
jb
sahf
leave
addr16
pop
inc
aas
xorb
dec
push
xlat
jne
fmul
ss
mov
jno
mov
sub
mov
cwtl
xorl
sub
xlat
inc
sub
addr16
or
notb
pushf
scas
outsl
jg
test
dec
xchg
cmc
cmp
pop
pop
mov
pop
call
fildl
push
aam
mov
les
mov
lcall
jmp
push
nop
cmp
push
ja
lea
iret
and
sbb
jns
movsl
call
xchg
insl
lock
or
mov
lahf
mov
call
jmp
jmp
mov
jns
popf
jl
js
jae
mov
pop
ja
aam
xor
in
mov
adc
fwait
add
jbe
pop
in
aad
test
push
jge
or
cmp
repz
cmpsb
mov
or
jl
jae
lea
mov
jbe
jmp
stos
mov
pop
or
jae
dec
pop
jg
lock
add
push
push
and
mov
inc
pop
stos
or
and
je
lret
das
cmp
dec
jle
mov
adc
cmp
imul
sbbb
xchg
xchg
call
fisubrl
push
lahf
sub
mov
mov
jno
cwtl
or
lods
sbb
push
insb
jle
cmp
imul
jbe
xchg
test
es
jns
scas
inc
sub
dec
loope
lds
jno
scas
xchg
je
addr16
iret
inc
lock
mov
mov
mov
ss
pop
jns
or
pushl
add
adcb
push
and
bound
push
inc
int3
insb
or
push
cmp
sub
dec
mov
mov
mov
pop
das
cmp
ljmp
and
mov
test
out
in
sbb
push
sbb
adc
xor
xchg
jae
jb
stc
or
mov
sub
inc
std
aad
sbb
out
shr
jge
jmp
or
adc
sbb
and
xor
sub
and
stos
inc
adc
jae
ja
xchg
jp
xchg
xchg
dec
dec
mov
aas
addl
mov
shll
mov
lock
xorl
arpl
out
pop
push
in
scas
push
xchg
add
xchg
repz
cmp
mov
xchg
xor
fldcw
imul
and
js
in
adc
daa
xchg
push
fsubp
dec
lret
dec
les
ret
leave
push
imul
mov
mov
inc
dec
push
mov
mov
iret
cmp
mov
mov
mov
and
stos
cltd
lcall
fidivrl
lods
jnp
pop
sub
insl
pop
add
push
mov
ss
sub
sbb
mov
adc
data16
insl
and
push
inc
mov
int3
jb
dec
sub
ret
mov
adcl
mov
out
test
andl
inc
les
cmp
imul
mov
jge
or
lcall
jmp
jo
pop
mov
fnstcw
pop
pop
pusha
xchg
or
push
je
mov
testl
inc
xlat
stc
out
imul
icebp
fidivrl
pop
stc
jge
ud1
sub
push
ds
jle
aam
and
mov
int
mov
std
mov
jno
mov
rorl
lods
cld
js
xchg
xchg
jne
mov
lret
pop
xchg
jo
cwtl
mov
mov
cmp
loope
fldl
std
add
icebp
lock
popf
xor
sub
adc
adc
xchg
pushf
cltd
cmp
fistl
pop
je
rorb
scas
xor
in
in
fidivl
adc
mov
lret
sbb
inc
out
xor
jo
or
push
fidivrl
sub
cmpsl
xchg
aaa
lret
fsub
fstpt
sub
sbb
cmc
mull
lret
enter
adc
pop
jge
outsb
push
cltd
into
ss
movntq
cld
cmpsl
sbb
sbb
inc
stos
cmp
rclb
xor
aaa
ljmp
adc
loopne
lret
scas
enter
pop
xor
or
in
in
fcmovu
cmp
es
aas
jl
xchg
cmp
fs
mov
xchg
adc
jmp
stos
in
leave
xchg
pusha
inc
lods
sbb
mov
lea
stos
repz
push
push
out
sbbl
loop
sbb
dec
jecxz
xor
stos
fildll
dec
pop
mov
sbb
jnp
and
mov
arpl
add
sti
shlb
lcall
jnp
popf
push
clc
in
icebp
repz
mov
mov
and
dec
push
push
and
das
mov
std
xchg
cmpsb
and
wbinvd
or
push
clc
or
jbe
push
std
dec
xor
push
orb
div
mov
cmpsb
int
cli
es
adc
cltd
jle
out
or
lock
or
jecxz
icebp
dec
dec
pop
adc
je
adc
rolb
in
enter
add
aam
inc
add
cld
jecxz
into
pop
push
adc
mov
inc
cs
mov
mov
popf
push
jg
push
xchg
cli
dec
les
mov
cmpsl
jae
push
mov
dec
dec
sbb
mov
sar
add
jnp
xlat
mov
insb
movb
inc
jmp
or
dec
xchg
nop
inc
add
mov
push
lret
cs
xor
arpl
mov
or
test
add
out
sbb
mov
fwait
sbb
pop
out
cmp
insb
jbe
shlb
into
mov
movsl
sbb
or
iret
mov
popa
ss
pop
stos
and
push
jp
in
dec
lods
outsl
mov
arpl
mov
xor
loopne
rclb
inc
cmp
pusha
clc
pop
add
cltd
mov
mov
pop
in
pop
enter
adc
sub
lahf
fsubs
popa
fstpt
push
or
out
out
or
or
mov
fwait
pop
int3
xchg
and
xlat
loopne
pop
inc
fs
xchg
pop
mov
and
jmp
jb
into
scas
push
xor
jno
mov
xor
ds
test
or
jbe
push
mov
cwtl
xor
cld
shrb
xor
rcll
mov
mov
out
popa
aad
icebp
mov
in
lret
cli
pop
mov
fmul
cmp
cld
arpl
inc
inc
lods
inc
push
inc
dec
pop
jl
ljmp
jmp
scas
popf
pushf
fsubs
arpl
movaps
aas
mov
xor
outsb
add
or
test
icebp
ficoml
sbb
sbb
sbb
pop
jnp
pop
mov
xchg
jb
ljmp
push
das
repnz
inc
sbb
sbb
loope
add
or
lea
mov
sbb
push
pcmpgtb
pop
sub
mov
add
fwait
mov
ror
mov
jbe
stos
shll
mov
pmuludq
mov
or
fnsave
and
gs
idivb
cli
ret
mov
push
xor
jg
add
filds
cmp
mov
fsubl
sub
mov
scas
xor
pop
jns
pop
lods
js
push
xacquire
or
in
std
fistpl
sarl
mov
stos
xchg
cmp
sbb
in
ja
sbb
push
push
cmpsb
or
iret
pusha
popf
test
xchg
or
inc
lods
cmpsl
clc
sbb
lods
neg
scas
xor
faddl
dec
stos
int
jb
test
add
mov
fsubrl
xlat
add
inc
pushf
testl
pop
xchg
pushf
push
mov
or
scas
add
sbb
mov
ds
pop
add
out
orb
cld
xchg
int
idivb
mov
enter
and
adc
repnz
and
pop
in
cmp
inc
repz
in
out
pop
xchg
out
imul
ss
or
sub
enter
mov
ss
inc
mov
push
lahf
out
test
into
or
outsb
mov
or
stos
or
pop
in
or
push
pop
dec
sarl
jne
and
add
push
icebp
jnp
pushf
sbb
pop
sbb
imul
add
repz
sub
lock
adc
dec
dec
adc
cmp
xchg
mov
incl
pusha
imul
lea
loopne
mov
idiv
idivl
daa
inc
lods
mov
xchg
add
shll
je
inc
xchg
mov
lds
js
cmpsl
pusha
stc
mov
sub
push
and
xchg
cmovne
out
jg
sub
clc
xor
addr16
testb
jb
mov
push
leave
inc
dec
adc
les
mov
dec
loop
imul
cmp
lods
mov
ficoms
movsl
sub
pop
mov
data16
test
or
loope
xchg
lahf
daa
jmp
inc
dec
xchg
dec
add
lret
cmpsl
sbb
test
in
add
pop
lock
sub
dec
iret
sub
std
sub
jbe
or
fwait
and
cmpsl
outsl
xor
mov
push
mov
shlb
cltd
jecxz
adc
jle
dec
subb
in
call
in
rorb
xchg
push
jno
jge
and
and
ss
xor
imul
sti
mov
mov
lods
mov
test
or
lock
jecxz
pop
in
insl
mulb
mov
dec
lcall
bnd
inc
test
lret
pop
popa
cmp
in
mov
mov
ds
das
imul
gs
outsl
adc
leave
mov
f2xm1
push
mov
int
cmp
pop
push
cmp
dec
jns
jl
movsl
psllq
fstl
jge
in
xchg
movsb
cmpsl
cmp
fildll
cli
test
ss
mov
xor
cmpsb
or
add
mov
pop
shll
sub
jp
inc
sub
push
and
aaa
push
ja
sarl
sbb
bound
pop
pusha
clc
sbb
or
pop
faddl
orl
aaa
or
sub
jne
pop
out
sarb
jae
pusha
add
adcb
int
enter
sbb
adc
cmc
movsb
adc
fisttpl
mov
cs
sub
inc
pop
flds
jne
push
adc
push
or
xchg
sbb
add
rolb
mov
sbb
int
mov
cmp
xor
ret
add
mov
rcr
push
jg
inc
lods
js
adc
lods
sub
xchg
pop
test
push
mov
pop
pusha
int
rorl
adc
leave
pcmpgtd
loopne
jmp
add
mov
adc
cld
and
mov
out
insl
and
mov
loop
std
adc
sbb
ljmp
adc
and
stos
daa
addr16
push
lock
stc
inc
idiv
leave
pop
lock
imul
jnp
stos
inc
pop
xchg
fdivrl
push
into
jae
stos
jecxz
fisttpll
in
push
lcall
or
fnclex
fistl
lods
loopne
ds
testl
jp
ret
ss
dec
dec
xchg
sbb
push
insb
push
andb
in
sub
mov
in
insl
pop
loopne
dec
cwtl
stos
cmpsb
pop
cs
fstpl
mov
stos
testl
popf
cltd
push
fmuls
enter
xchg
dec
sub
int3
incl
out
mov
icebp
sub
xchg
daa
jae
mov
in
add
cs
xchg
das
aaa
stc
pop
dec
mov
jmp
push
fisubs
mov
xchg
add
arpl
in
popa
mov
mov
fldenv
sbb
aad
cmp
add
cmp
stos
rcrl
or
mov
lea
mov
pop
mov
cld
test
sbb
xchg
xor
icebp
mov
mov
fwait
mov
lods
dec
and
xor
jno
sbb
mov
mov
mov
dec
mov
adc
fisubrl
mov
or
inc
mov
mov
add
push
mov
in
fimuls
push
in
mov
cmp
int3
xor
iret
mov
or
xor
insl
push
jno
add
decl
hlt
cmp
shlb
pop
lcall
add
idivb
adc
jno
rorb
pusha
add
and
enter
push
stc
out
cli
dec
add
cli
pushf
mov
mov
scas
popa
add
cld
jnp
repz
inc
inc
push
pushf
dec
jg
xchg
add
mov
pop
jge
mov
jnp
xchg
fdivs
mov
icebp
sub
test
add
faddp
pop
sub
sub
jbe
sti
push
push
les
outsb
push
js
jae
mov
pop
lds
pop
adc
test
and
or
stc
sub
je
arpl
bound
mov
inc
in
clc
pop
jmp
fstpl
pushf
pop
pop
mov
aaa
xchg
mov
mov
in
and
in
inc
ss
in
jmp
sti
stos
cmc
xchg
adc
jne
sbb
das
inc
jmp
jno
dec
nop
stc
cmpsb
pop
in
loop
mov
and
inc
in
jno
in
jne
jle
test
lods
int3
outsb
mov
jl
adc
push
test
push
jmp
out
push
and
insl
xor
mov
or
scas
cli
sbb
dec
dec
xchg
ss
pop
scas
pop
addr16
scas
cwtl
maxps
sbb
jg
jp
lea
mov
adc
ret
cmpsl
xlat
mov
push
mov
imull
adc
jp
push
push
enter
dec
mov
nop
jmp
sub
data16
les
and
jno
lcall
push
jne
aas
dec
cmp
imul
add
cmpsb
sbb
rolb
int3
pcmpeqd
je
dec
pushf
inc
ret
jnp
mov
mov
mov
js
lret
and
popa
lret
in
pop
mov
or
ss
stc
inc
dec
nop
add
int3
adc
push
in
mov
out
and
jmp
sbb
lea
mov
mov
or
loop
push
loopne
scas
jl
test
shrb
pop
push
enter
push
lods
dec
fwait
jmp
xchg
imul
adc
aad
sub
je
mov
clc
pop
dec
cmp
mov
inc
scas
jecxz
xor
xchg
and
shll
cwtl
xor
cltd
push
stos
cmc
fwait
out
addb
cmp
push
stos
leave
mov
cmp
cld
cmp
insl
sub
jecxz
fsubrs
sahf
cmpsb
dec
dec
dec
adc
loop
jbe
adc
sahf
insb
cmp
mov
inc
mov
inc
and
pusha
pop
push
mov
xchg
cltd
je
inc
clc
les
popf
lods
and
rorl
or
push
mov
rcll
gs
inc
jle
jo
mov
dec
sahf
dec
outsl
jmp
pop
cmp
xor
pop
ljmp
pop
in
sub
gs
shrl
mov
pop
aam
iret
cmpsb
sbb
loop
xchg
fnsave
mov
cwtl
mov
outsb
xchg
inc
xchg
and
jb
pop
aas
je
jmp
iret
imul
pusha
inc
mov
andl
in
out
xchg
in
test
adc
das
pop
add
dec
jp
or
mov
pop
cmpsl
cltd
xchg
sahf
jnp
clc
xor
test
adc
rep
or
call
pop
and
pusha
fchs
add
add
fdivrs
cmpsb
mov
mov
mov
cld
gs
out
lahf
push
dec
ljmp
fidivs
cmp
dec
or
mov
inc
fwait
cmp
outsl
lahf
xchg
mov
dec
sbb
dec
push
push
add
test
push
jne
dec
cmp
nop
jmp
mov
or
jb
sub
sbb
fiaddl
push
movsl
mov
inc
cmp
pop
push
adc
jb
or
loop
shrl
ss
or
out
xchg
xor
mov
push
ja
jecxz
outsb
hlt
out
pop
cmp
fdivr
lods
mov
orb
int
pop
push
in
push
orb
mov
sbb
mov
icebp
leave
adc
push
jg
insb
dec
shl
mov
popa
fisubs
pusha
pop
testb
sbbb
lret
scas
mov
mov
mov
push
jo
fdivrs
stos
sbb
xor
pop
pop
mov
pop
daa
sub
in
xor
sub
das
idivb
mov
push
inc
xchg
test
xchg
jae
cmpsb
filds
xchg
es
cmp
mov
loop
add
es
hlt
dec
and
in
lret
push
pop
out
orl
les
les
xor
mov
pop
cmp
gs
push
lock
or
rclb
rorb
loop
in
scas
cld
cmp
push
sbb
nop
pop
cs
test
cmc
gs
rorl
int3
ljmp
ljmp
push
rcrb
mov
loope
outsl
ljmp
cwtl
rcl
popa
sbb
loope
out
jle
cld
adc
jecxz
add
mov
iret
test
in
mov
movsl
hlt
movsl
lock
push
lea
sysexit
lcall
fcomi
fistl
xchg
sar
push
repnz
mov
sub
stos
and
ds
ds
sarl
imul
sub
push
stc
fwait
dec
mov
lock
cmc
movsl
stos
stos
jecxz
mov
push
ljmp
clc
hlt
xchg
jp
lahf
hlt
jecxz
adc
test
int3
and
pushf
sub
aam
or
push
call
jns
dec
or
shlb
push
in
push
adc
sub
shlw
or
fistpll
pop
movsl
xchg
mov
inc
jb
xchg
mov
sub
pushf
pop
dec
xchg
popf
sub
sbb
mov
inc
push
or
lahf
push
sub
and
repz
icebp
mov
jnp
mov
outsl
bound
rcrb
popa
bound
inc
call
negl
test
add
pop
adc
xchg
cmpsl
test
ficompl
jnp
daa
cmp
ss
xchg
mov
pusha
mov
pop
jo
sub
mov
jns
fstps
int
inc
inc
ljmp
mov
ds
inc
xor
sub
sub
call
ret
jecxz
push
daa
lret
outsl
divl
mov
mov
dec
das
sbb
dec
fists
notl
adc
sti
into
mov
fildl
xchg
adc
movsb
jmp
and
rorl
push
inc
jb
push
xor
hlt
and
inc
ss
sbbl
lcallw
je
jle
inc
mov
add
jg
xor
fst
scas
rcll
leave
add
xor
fcmovnu
fsubl
out
inc
mov
cld
das
sbb
sub
insl
inc
rorb
out
jp
add
cmpsb
xchg
fisttps
sbb
shl
sub
xchg
mov
jb
aaa
inc
jp
nop
nop
jae
negl
gs
sti
cmp
fnstenv
rorb
and
vcvttps2dq
cmc
sbb
cmp
mov
rorb
in
and
cmpsb
pusha
ret
incb
and
dec
lahf
cmp
icebp
pushf
lcall
mov
mov
push
lret
pop
sbb
add
nop
iret
adc
les
rcr
xor
xchg
cmc
adc
idivl
arpl
or
movsl
addl
sub
hlt
cmp
sub
jno
sahf
int3
bound
add
sub
dec
frstor
call
jo
and
scas
hlt
aam
push
test
call
into
mov
xor
sbb
dec
push
mov
cld
push
imul
popa
mov
cmpsb
mov
mov
in
sar
cmp
inc
ljmp
ljmp
cmp
sub
mov
test
dec
xchg
mov
inc
and
imul
xor
push
ljmp
mov
imull
mov
popf
xchg
cltd
pop
mov
sub
shrb
str
fwait
or
mov
sub
mov
mov
fwait
orl
ret
in
jl
movsl
dec
pop
sti
hlt
cs
sbb
das
sbb
movsl
repz
and
sub
test
xor
xchg
adc
push
dec
cwtl
lods
lret
push
data16
adc
mov
imul
lahf
lods
out
out
lret
mov
adc
push
pop
pop
dec
inc
addr16
mov
mov
sub
jo
jae
sahf
pusha
dec
inc
ror
cmp
lock
rcll
sbb
dec
in
add
add
stc
jbe
lods
out
ret
mov
mov
dec
dec
cmp
gs
popa
and
add
push
sbb
pand
and
xchg
icebp
mov
repnz
jmp
jg
xor
aad
cmp
ds
test
repnz
mov
lahf
pop
into
and
mov
outsl
and
dec
mov
mov
mov
lods
pop
jo
cmp
cltd
adc
adc
push
adc
lods
xor
cli
mov
cltd
std
imul
jl
dec
cli
mov
sub
jl
pop
jmp
sub
loopne
decb
lock
pusha
fstpt
sub
pop
arpl
inc
xlat
out
ja
dec
pusha
push
push
mov
jbe
mov
xor
pop
subb
dec
mov
outsl
in
movb
out
orb
daa
jnp
push
cli
pop
aas
jecxz
repnz
test
stos
jp
mov
repnz
in
push
rcl
incl
adc
jp
mov
pusha
add
sarl
outsl
xor
or
js
sbb
imul
das
pop
imul
cmp
cs
xchg
xchg
pop
jmp
xchg
sti
pop
push
push
xlat
inc
ja
andb
sub
or
add
and
or
dec
mov
ss
jmp
ret
idivb
ljmp
sub
xchg
int3
mov
fs
push
std
clc
pop
shll
or
mov
mov
scas
outsl
sub
push
movsb
mov
lock
dec
cwtl
push
jecxz
jns
push
sarl
sub
dec
int3
pop
in
je
or
jp
gs
outsl
in
and
xor
ja
inc
push
fsubrl
mov
mov
push
adc
daa
out
xlat
mov
sbb
lcall
sbb
sbb
cmp
fcompl
js
pop
pusha
mov
call
xchg
dec
push
hlt
aaa
mov
ret
fsubrs
mov
int3
test
sarl
je
push
shll
jge
inc
ret
fldl
pop
int
add
pop
jbe
push
fsubrs
loop
mov
mov
lods
fdivrp
decb
icebp
xor
mov
pop
je
sub
cmpsb
pop
shl
xchg
into
out
sub
inc
cmp
les
mov
jne
rorb
vpmacsww
jl
mov
mov
jp
data16
aam
push
adc
xor
xor
imul
add
fistpll
leave
push
scas
scas
sbb
inc
push
xlat
push
cmp
xchg
sar
mov
insl
add
repnz
int3
loope
stos
lods
sbb
mov
int3
add
jnp
xchg
inc
fmull
das
jae
dec
repnz
mov
cld
cmp
sarb
jmp
pop
shll
movlps
popf
mov
out
adc
sbb
adc
mov
pop
adc
push
push
rcr
aas
and
inc
jns
pop
in
inc
js
int3
sub
cmpsl
mov
es
shrl
out
dec
pop
fwait
stos
pop
loopne
shl
mov
mov
test
push
or
sbb
dec
les
or
subb
fdivrl
pop
je
popa
shll
pushf
xchg
outsl
or
or
es
adc
hlt
imul
imulb
nop
cmpsl
movsl
mov
add
pop
aaa
out
mov
imul
pop
xchg
mov
add
sbb
pop
subb
cwtl
sbbb
xor
and
mov
lds
fwait
daa
add
ret
mov
inc
inc
cmpsl
mov
loopne
lahf
stc
mov
push
sahf
ja
adc
inc
popa
mov
or
sub
shrb
adc
mov
fisubrs
inc
ljmp
lea
cmp
test
leave
movhps
pop
xor
mov
pop
popa
rolb
in
aas
and
xchg
dec
stos
mov
in
xor
arpl
dec
call
jae
fs
ret
add
sbb
xchg
loop
into
push
xor
mov
adcl
ds
mov
loop
cmpsb
dec
cwtl
iret
shrb
popf
and
mov
add
sub
lods
and
sub
aas
cmpsb
or
mov
in
or
add
loopne
jbe
dec
lcall
test
lret
sub
div
jno
jge
pusha
fisubl
push
jecxz
jmp
aad
fsubs
movsb
and
cmpsb
ss
add
xchg
jno
bswap
lahf
add
aas
push
cmpb
and
in
fs
push
test
mov
dec
jmp
xchg
xor
push
aam
pop
test
div
xchg
lahf
xchg
outsb
xor
stos
adc
mov
or
addb
sbb
rclb
repz
mov
sbb
cmc
and
sbb
inc
cld
sbb
mov
sahf
pop
repnz
xchg
xor
cmp
rorl
fldcw
in
ret
cmpl
or
mov
cs
pop
lods
loopne
fmuls
sbb
outsl
cwtl
dec
aaa
xorb
push
adc
xchg
inc
mov
mov
aaa
call
jns
sbb
call
push
cmpsb
mov
test
dec
int3
ds
xchg
mov
push
adc
inc
lahf
out
lret
jne
sub
ja
xor
enter
subl
je
pushf
xorb
pop
pop
lock
or
xor
or
ljmp
add
mov
jae
dec
outsb
push
xchg
sub
sub
mov
push
dec
pushf
xlat
mov
pop
out
fwait
sbb
jp
daa
cwtl
mov
sub
outsl
data16
xor
pop
negl
ret
jmp
jle
mov
aas
jne
mov
repz
popf
shl
jge
mov
push
add
nop
mov
es
std
inc
pushf
into
insb
dec
lods
into
xorl
inc
cmp
dec
cmp
sbb
pop
xorl
cmc
push
ds
xor
arpl
filds
pop
pop
push
mov
fstpt
xor
ret
pop
lahf
add
and
jno
mov
add
jmp
je
rcrl
pusha
lahf
mov
push
mov
sbb
fs
pop
dec
inc
sarb
rclb
mov
fsts
xor
shrl
lret
testb
push
push
sub
daa
cli
jae
mov
fs
ja
jne
lcall
inc
gs
mov
dec
pop
dec
sbb
xor
outsb
mov
stc
stc
jbe
cmp
jp
xor
loopne
dec
sub
enter
jge
push
jecxz
xchg
outsl
dec
fdivs
rcrl
lcall
je
aad
fildl
pop
inc
xchg
outsl
out
mov
adc
aaa
ds
sahf
test
mov
stc
and
aas
jo
push
notb
rcrl
mov
adc
xchg
popf
rcr
repnz
add
in
add
fiadds
imul
cwtl
jp
or
jp
sbb
xor
or
sbb
imul
std
push
test
data16
out
ja
push
cltd
push
inc
or
jmp
pushl
fistps
clc
push
scas
push
push
or
mov
fists
sbb
lret
out
push
fst
sub
add
mov
ljmp
and
scas
movsl
xchg
cmp
push
xor
decb
sbb
mov
sar
lahf
and
or
scas
add
push
and
xchg
shll
out
lahf
push
popf
sbb
scas
mov
scas
cmp
cltd
enter
push
mov
call
test
outsl
fcmovne
mov
pop
add
loope
and
insl
mov
cltd
sub
jecxz
adc
pop
scas
fcmovbe
aaa
aad
xchg
cmp
nop
lret
xor
pop
mov
cld
scas
fs
dec
jae
pop
call
xchg
mov
pop
mov
sub
mov
fiaddl
shll
pop
jp
adc
pop
add
mov
stc
fistpl
mov
lods
notb
dec
imul
cli
dec
and
test
aad
andl
ret
add
add
jns
or
sub
xchg
sbb
idiv
hlt
stos
mov
mov
dec
mov
inc
jecxz
xchg
bound
mov
push
add
fstl
stos
test
dec
inc
adcl
into
js
fstps
sbb
and
ljmp
pop
push
adc
int3
mov
dec
mov
xchg
pop
jb
mov
fisubs
mov
add
imul
leave
sub
push
inc
enter
rorb
adc
popf
xchg
inc
es
mov
jae
stos
dec
ret
je
mov
pop
call
sbb
cmpsb
push
arpl
cld
pushf
test
sbb
shrb
mov
data16
mov
cmp
movsb
add
sbb
rolb
or
repz
inc
clc
jns
ds
outsb
out
int3
cli
popa
dec
je
cs
arpl
pop
ret
sub
cmp
add
jo
jne
arpl
pop
mulb
aaa
pushf
andl
push
xchg
adc
js
testb
scas
daa
jo
jp
cmp
sub
inc
mov
iret
mov
dec
push
mov
jo
subl
and
cmp
push
fldenv
pop
fnstcw
sbb
test
add
pop
stos
fstl
lods
jo
scas
pop
test
sub
outsb
adc
inc
push
xchg
push
in
test
add
push
nop
xor
jo
cltd
enter
or
and
lea
insb
sbb
jbe
push
aam
into
shlb
fs
xlat
lret
push
inc
xor
add
and
mov
and
cltd
js
pop
js
sbb
xchg
push
out
icebp
decl
or
call
test
cmp
popa
add
subb
je
pop
cs
jnp
repnz
lea
inc
push
test
add
cwtl
fidivl
or
mov
cwtl
push
mov
jnp
xchg
into
int3
lds
pop
stos
ficoml
std
or
xchg
or
mov
cmp
mov
sarb
jmp
push
popf
movl
jbe
mov
das
pushf
mov
or
sti
jne
mov
sbb
mov
cmp
adc
decb
mov
shll
cwtl
cmc
push
add
push
movsl
pop
shlb
jle
inc
inc
arpl
and
pop
sbb
dec
daa
sti
xchg
jg
clc
xor
jnp
mov
add
xchg
push
int3
jbe
insb
dec
stos
cmp
sbb
xchg
lret
das
int3
aam
push
cmp
aam
jmp
pop
sbb
pop
dec
xchg
and
ja
or
jae
mov
add
jp
scas
mov
jle
lahf
jg
fidivl
fists
mov
mov
dec
in
test
ss
pop
lahf
lods
fcomps
and
dec
stos
int
jb
repz
fcoml
cmp
outsb
jbe
and
popa
mov
mov
sub
imul
insb
inc
lcall
sub
imul
jo
jmp
mov
sub
mov
mov
jl
push
sub
mov
popf
addr16
xchg
xchg
add
nop
dec
inc
ret
jmp
dec
jle
inc
stos
jg
icebp
pop
aam
mov
xchg
and
gs
test
imul
jns
mov
les
lods
test
mov
lret
in
fsubr
dec
sub
and
sub
inc
int
adc
pop
pop
shll
divl
xor
cld
lret
mov
mov
dec
inc
fnstcw
es
jle
fildl
sub
lea
mov
pusha
xchg
jg
xor
push
xor
out
cmp
aas
add
data16
push
jmp
cltd
xchg
inc
jp
stc
xlat
imul
iret
xchg
push
mov
pop
sti
nop
scas
addr16
fcomi
jmp
fiaddl
cmp
mov
mov
push
out
rcrl
adc
inc
in
stos
bswap
mov
xchg
insb
ja
or
lds
test
xor
cmp
add
mov
das
jg
sub
jb
sub
dec
mov
or
xor
test
call
sub
pop
mov
rcrb
arpl
jnp,pt
int
sar
sbbb
fwait
sub
mulb
rclb
lret
sbb
mov
insl
test
fstpt
jmp
cmp
adc
cmp
mov
push
and
xchg
pop
sub
mov
adc
loope
popf
jb
out
adc
xor
fsubs
cwtl
insb
pop
je
xchg
pop
mov
pushf
adc
mov
mov
jns
int
mov
es
mov
psllq
add
outsb
sti
int3
push
mov
jg
data16
pop
dec
mov
flds
or
xor
xchg
loop
push
nop
lock
and
mov
pop
or
andnps
sub
sbb
outsb
aas
repz
cmpps
adc
dec
loop
jge
push
addr16
push
mov
mov
pop
fldcw
and
xchg
in
fisubs
cwtl
mov
xor
xor
jge
cmp
clc
loope
jecxz
shl
cs
shlb
xor
cmp
outsb
ret
filds
or
and
lock
push
and
lock
pop
negl
adc
stos
arpl
mov
push
gs
fwait
test
stc
sub
shrb
push
mov
jae
popa
aam
test
sbb
outsb
cs
lahf
ljmp
cmp
sbb
cmpsb
xchg
mov
xchg
movsl
fwait
xchg
and
ret
push
cs
loopne
inc
xchg
aaa
cmp
push
mov
add
mov
fistl
rcrb
ja
and
xor
and
scas
mov
movsl
cld
stc
cmp
fisubl
add
fstps
add
fiaddl
sbb
mov
mov
add
cmp
mov
les
cmpsb
test
clc
insb
sbb
sbb
repnz
movsb
sub
pushl
push
addb
les
push
inc
jbe
and
jmp
fnstenv
popa
idivb
mov
iret
jg
adc
mov
in
inc
and
sarl
sarl
adc
movsl
ja
fstpt
xchg
mov
cmp
lret
fildl
inc
mov
xor
rclb
popa
in
les
aas
and
or
in
sub
or
and
xchg
jbe
stos
movsb
rorb
jae
or
sub
sub
scas
jge
test
test
movsb
sub
je
sub
jne
stc
fisttps
or
leave
adc
add
mov
pushw
mov
js
fwait
push
stos
sub
sub
jle
outsb
add
xor
out
daa
lahf
gs
lahf
or
je
cmp
cwtl
and
mov
js
movsl
mov
mov
inc
in
add
cmpsl
push
lods
dec
outsb
nop
outsl
push
xor
cmp
pop
sti
xor
dec
shr
lds
sbb
or
shlb
xchg
xchg
ret
lock
inc
add
das
rcrl
and
fs
pop
or
cmp
aam
movsb
lahf
out
push
jnp
jbe
pushf
push
stos
cmp
cwtl
in
xchg
mov
rcr
cmpsl
leave
into
push
stc
cld
mov
repz
or
cmc
pop
out
add
add
mov
jg
xchg
mov
xor
jl
mov
push
push
stos
sub
dec
pop
ret
enter
pop
in
lret
xchg
sbb
sbb
jecxz
or
jne
xchg
xlat
mov
jae
cld
mov
into
shlb
pop
pop
jg
lea
cmpsb
lahf
add
shrb
push
cmpsb
idivl
aaa
pop
ljmp
into
pop
mov
inc
pop
adc
mov
movsb
mov
adc
adc
xchg
cmp
int
fwait
dec
jb
mov
imul
mov
dec
movsl
cmp
xchg
push
scas
stc
fsubs
jp
lock
std
mov
loope
sub
insb
in
sbb
mov
leave
or
jmp
add
inc
mov
push
int
popa
mov
ror
subb
xor
and
mov
sbb
repz
add
in
mov
push
mov
je
inc
ret
imul
pop
inc
sbb
ret
cltd
inc
stc
xchg
fiadds
xor
sub
call
in
loope
shrb
adc
repz
sti
and
orl
sbb
insb
mov
int
jle
lret
or
xor
js
mov
jo
xchg
icebp
mov
add
jle
mov
jne,pn
fisubs
andl
lea
push
popl
adc
rorl
movsl
xchg
and
cmp
mov
adc
test
inc
mov
push
mov
xlat
inc
subb
gs
inc
daa
das
adc
sbb
inc
cmpsb
mov
punpckldq
imul
mov
adc
pushf
push
cltd
jbe
roll
je
pop
hlt
aad
inc
outsb
or
jae
lahf
inc
mov
outsb
sti
xor
or
xchg
cmpsb
adc
jo
adcb
lret
std
bound
jmp
mov
shlb
pop
addr16
mov
xchg
addr16
test
jmp
pop
aaa
clc
mov
repnz
cmp
shll
cmpsl
insb
test
jl
or
insl
int3
pop
sub
jno
ljmp
xchg
out
dec
dec
mov
out
rcll
sub
adc
imul
inc
push
repz
inc
aad
jl
add
dec
jecxz
xor
cmp
cmp
shlb
sbb
sub
testb
jg
push
sbb
xchg
dec
cmp
fbld
dec
decb
xchg
mov
mov
bound
adc
aad
leave
jle
push
test
stc
mov
sbb
sub
inc
ficoms
in
and
push
xchg
add
adc
xlat
iret
or
inc
pextrw
xchg
outsl
mov
rclb
xor
divl
push
fidivrl
cmp
xchg
lods
out
jne
call
or
bound
es
dec
mov
movsb
sbb
inc
mov
fcom
mov
pop
ret
in
jecxz
adc
cmp
inc
or
ljmp
sti
jb
into
or
rcrl
and
loope
sarb
adc
push
ret
stos
xor
not
std
int3
lret
imul
lahf
rep
jo
out
cwtl
jp
mov
xor
inc
jnp
xor
adc
cli
sub
cmc
cmp
mov
stos
xchg
fdivrl
lret
in
xchg
pop
jo
xor
and
insb
scas
les
xchg
loop
flds
lret
pop
fstpl
ss
xchg
add
xchg
out
inc
mov
mov
jmp
xchg
sub
mov
pop
fdivrs
sub
push
int
pop
mov
adcl
jmp
imul
lods
outsb
xchg
rol
cld
inc
push
xchg
or
dec
mov
xor
sub
imull
push
jl
loope
js
push
xchg
jnp
sub
sti
push
stos
clc
jne
pop
inc
repz
add
stos
jl
gs
test
out
xor
stos
jmp
pop
dec
dec
iret
sti
rcr
cmc
lock
mov
sarl
mov
in
dec
outsb
lock
out
push
test
cmp
pop
jg
xchg
gs
lods
daa
sbb
push
aam
ds
in
loope
iret
xchg
xchg
pop
mov
insb
aas
mov
movsb
fnstenv
mov
jecxz
in
nop
fcmove
in
cmp
push
cmp
push
lods
pop
xchg
out
shll
js
idivl
pop
jae
ja
loop
push
test
rorl
xchg
aaa
aas
add
test
or
jo
popa
jg
pop
push
imul
jp
xor
fbld
outsl
mov
cltd
enter
mov
jmp
sub
pop
std
in
add
daa
inc
or
dec
dec
mov
inc
adc
sarb
jge
or
mov
testl
lods
lea
popa
inc
adc
sub
fsubrp
jnp
xchg
or
arpl
aad
push
jp
movsl
mov
test
shlb
mov
cmp
cmp
movsb
inc
and
fisubs
sub
lds
cmc
xchg
jle
sbb
mov
out
xchg
push
sbb
stos
xchg
jno
dec
cld
add
das
or
cmpsl
and
subb
fldl
jnp
and
mov
dec
dec
sti
pop
or
jle
push
cmp
jecxz
xor
das
cld
mov
inc
xchg
cwtl
vpackuswb
andb
dec
xchg
ret
sub
arpl
shl
test
inc
arpl
int
push
nop
inc
push
or
jno
daa
sub
mov
rcrb
mov
test
mov
sub
push
sbb
pop
leave
pop
mov
mov
or
incl
shll
xor
inc
xchg
adc
pusha
cs
rcl
xor
jg
mov
lock
sahf
lret
adc
out
frstor
jbe
sbb
ret
push
push
jb
add
mov
xchg
dec
out
dec
notb
call
add
xchg
pop
scas
jle
cld
cs
stc
push
data16
jle
std
notb
popf
popf
insb
or
xor
cmp
sub
adc
add
outsl
cmp
faddl
addr16
movsb
jo
dec
mov
mov
repz
push
xchg
push
fxch
cmp
cmp
loop
sub
mulb
lds
stos
leave
xor
mov
out
clc
push
icebp
sbb
add
icebp
fs
addr16
xor
lea
push
arpl
ds
into
mov
cmp
cwtl
outsl
pop
mov
out
xchg
xchg
mov
push
adc
adc
mov
inc
aam
call
jle
sar
dec
push
jmp
cmp
fistl
jne
sbb
push
aad
push
cwtl
daa
gs
aad
add
xchg
scas
stc
xchg
add
add
fcomi
jne
pop
add
push
dec
add
cmc
or
ret
insl
and
jecxz
icebp
aad
pop
inc
loope
sbb
cmp
cmp
xchg
mulb
leave
lret
mov
xchg
dec
inc
sub
and
dec
sbb
daa
cmp
dec
lret
and
cmp
popf
std
addl
xor
jns
adc
icebp
xor
jecxz
cmp
lods
push
xchg
jb
xchg
ror
punpckhwd
loopne
push
pusha
daa
or
data16
mov
sahf
pusha
xchg
outsl
adc
jnp
pop
sbb
xchg
add
jp
cmp
movsb
loop
adc
xchg
pop
imul
sbb
test
lea
mov
aam
mov
inc
loop
pusha
loope
int3
inc
jp
xor
push
aas
insl
sub
out
xchg
shl
adc
mov
and
mov
pop
mov
mov
call
pop
sbb
jbe
hlt
xor
dec
cmp
loope
leave
jnp
push
outsl
out
cmpl
loopne
movb
sub
loope
mov
sbb
es
js
jns
xchg
shll
cmp
add
out
adc
xor
xor
mov
xor
sbb
push
andl
loopne
imul
pop
rcll
pop
stc
es
mov
cmp
mov
sub
sub
sbb
cwtl
or
jp
xchg
scas
in
stos
jge
fcoml
jle
push
xchg
movsb
out
push
xchg
shlb
cltd
inc
jge
ficompl
out
mov
xor
cmp
popa
shr
je
lea
inc
lock
sbb
mov
mov
adc
add
sbb
or
mov
mov
loope
adc
or
inc
inc
ret
pop
ja
jno
or
mov
and
pop
xchg
call
data16
dec
cs
jno
iret
test
push
jbe
insb
cltd
loopne
in
lods
icebp
sub
jbe
cmc
jns
push
repnz
mov
pop
push
mov
das
imul
pop
jge
and
pop
rcl
adc
cmp
push
lods
mov
jp
mov
nop
icebp
add
das
sub
flds
xor
ss
jecxz
dec
pusha
and
push
adc
das
mov
lock
inc
push
rep
int3
or
rolb
and
sbb
pop
and
dec
xor
xlat
jno
lret
sub
jns
xchg
inc
repnz
dec
test
out
sub
popa
xor
in
sbb
cwtl
lret
or
mov
push
imul
xchg
push
pop
je
xor
and
sbb
jge
out
ss
lds
cmp
pop
jae
fldt
dec
pop
push
hlt
sub
stc
popa
dec
cmp
cmp
sub
cmp
dec
shll
add
push
pop
imul
push
shl
adc
pusha
scas
cmp
xlat
cs
and
fbld
push
into
rorb
test
cmp
push
or
dec
test
xchg
sbb
pop
sbbb
sbb
jae
shrb
add
outsb
in
jno
ja
pop
mov
xchg
and
mov
fimuls
add
pop
enter
loope
dec
or
cmpsl
and
mov
sbb
sbb
stos
xor
sub
push
jl
popf
test
inc
bound
adcb
and
push
xchg
adc
pmovmskb
mov
dec
jne
jecxz
sub
mov
test
mov
pushf
mov
daa
outsl
sbb
jg
jecxz
mov
sbb
mov
icebp
ss
mov
jae
data16
jno
cli
mov
gs
xlat
popa
sub
adc
mov
add
ss
pop
push
adc
pusha
lock
cwtl
jo
or
imul
jle
sbb
hlt
hlt
inc
cmp
push
pop
repz
out
sahf
ljmp
repnz
lock
push
or
dec
cmp
pusha
fistpl
jo
sub
clc
add
outsb
mov
mov
dec
xor
push
cmp
inc
dec
dec
enter
xchg
jl
or
js
sahf
cmp
xchg
pop
xor
pop
push
xor
loope
xchg
push
int
mov
inc
dec
mov
iret
xor
pop
pand
fsubrp
ds
xor
sbb
inc
shll
mov
or
jl
inc
adc
push
shlb
les
mov
mov
loope
mov
inc
adc
das
mov
or
fimull
sub
stc
sarb
iret
cltd
leave
xchg
repz
aad
addr16
xor
pop
pop
rorb
inc
mov
jns
lret
ret
jnp
xchg
adc
inc
jp
scas
loop
mov
xor
lahf
inc
inc
fdivl
int
cmp
call
add
lds
cmp
stc
jns
pop
daa
xchg
inc
pop
jmp
leave
pop
push
test
insl
cmp
out
jge
pop
xchg
jb
push
inc
pop
xor
dec
das
addr16
aam
out
in
cmp
bnd
sbb
fidivl
jae
jge
xor
push
mov
xor
insl
ds
sub
sub
lods
testl
repnz
jae
inc
mov
jbe
jle
stos
push
or
in
sbb
push
dec
adc
push
popf
xor
shl
movsl
inc
sbbb
push
das
sbb
xchg
pop
mov
dec
mov
jbe
fdivrl
decb
mov
ret
outsb
sbb
shlb
pop
call
jb
fwait
sub
bound
push
pop
adc
add
mov
ror
mov
sbb
test
or
iret
mov
inc
push
xor
lea
push
imull
out
cli
leave
imul
cmp
pushf
push
sbb
and
pop
xchg
mov
aaa
lahf
jnp
jns
jle
adc
dec
dec
lea
or
add
mov
sbb
mov
cmpb
ds
mov
xchg
jecxz
mov
mov
jae
into
sub
movsl
cwtl
bound
push
dec
sub
outsb
jno
push
jmp
jg
call
pushf
or
ljmp
adc
mov
pop
xlat
les
mov
fsubrs
add
xchg
lock
xor
and
jmp
test
enter
lods
dec
inc
push
out
imul
and
sbb
mov
sub
aad
clc
cwtl
pop
out
dec
sbb
js
add
loop
push
cld
push
lcall
jns
aaa
pop
out
push
icebp
lods
outsb
pop
popa
sti
mov
mov
push
pop
nop
xchg
sarl
test
jns
or
sub
add
jno
nop
into
mov
inc
sbbb
mov
aaa
daa
sbb
in
aas
adcb
cltd
sbb
cwtl
loope
dec
sarb
push
jle
daa
test
fcmovnb
cmc
inc
sahf
mov
add
pusha
pop
add
jl
or
and
pop
jp
pop
lret
jl
xchg
dec
pop
inc
sbb
mov
mov
mov
dec
xor
sub
stc
cld
cmpsb
xchg
icebp
jle
push
mov
les
int
mov
ss
and
cmp
nop
mov
sub
aad
insb
xchg
push
sbb
in
cltd
cwtl
adc
jl
push
push
stc
xchg
sub
divb
pushf
sub
daa
fxch
popf
mov
outsl
shlb
leave
shll
dec
sbb
lods
ss
mov
pop
jmp
mov
push
fdivrl
push
inc
cs
test
int3
arpl
pop
leave
outsl
bnd
and
dec
adc
test
cs
ds
sti
fistpll
jmp
lcall
scas
mov
lock
cmp
cld
inc
stos
sahf
mov
aas
dec
pop
lea
xchg
aam
inc
stos
mov
add
jp
mov
fisubrs
xchg
fisubrs
adc
in
scas
and
xchg
cmp
pop
shll
push
jge
sbb
add
rcll
insb
pop
xchg
xchg
stc
push
dec
mov
cmp
sub
lea
adc
inc
sub
xchg
add
xor
or
xchg
and
xor
outsb
push
pop
mov
mov
jae
jl
inc
test
jbe
pop
arpl
enter
fwait
clc
push
xor
test
out
adc
xor
add
cmpsl
dec
or
mov
push
push
fidivl
movsb
jbe
or
lods
cli
fistps
jo
int3
sub
cs
jne
mov
sub
iret
sahf
pushf
sbb
xchg
pop
incl
lahf
addl
aaa
xchg
cmpl
adc
mov
sub
fdivl
and
lods
shlb
and
xchg
sarl
cmp
aam
frstor
sub
inc
std
fldcw
xor
xchg
addr16
cli
inc
add
xchg
in
repz
mov
cmp
xor
icebp
pop
aam
orl
sahf
in
cmpsl
dec
cli
sti
aam
test
jg
xchg
mov
js
sub
jbe
pop
add
pop
inc
stos
mov
pop
aam
mov
arpl
pop
jecxz
into
mov
mov
pushf
sahf
es
test
jae
mov
mov
imul
mov
jl
add
popa
js
stc
in
mov
je
clc
push
push
cltd
stc
mov
pop
xchg
in
push
inc
sar
mov
lret
jmp
sbbb
stc
mov
push
filds
ret
xchg
data16
add
add
stc
insl
cmpsb
ja
sahf
sarb
push
adc
mov
adc
lret
dec
sahf
cmp
xor
mov
mov
stos
xlat
into
adc
pop
dec
cmp
fwait
ret
repnz
push
fiadds
test
cwtl
and
stos
mov
push
cmp
jle
out
mov
lea
jno
jbe
rclb
loope
imul
push
cmp
repz
lods
sbb
test
mov
fcoms
cld
clc
loop
jp
pop
test
inc
adc
push
dec
outsl
jns
or
mov
dec
mov
mov
mov
loopne
mov
jp
das
cmp
jle
pop
scas
mov
pop
and
pusha
adc
test
pusha
mov
adc
nop
ret
xor
data16
clc
xor
or
jo
adc
mov
out
inc
adc
sahf
mov
xor
lret
ds
cs
xor
imul
mov
dec
hlt
xor
jg
and
xchg
xchg
mov
into
dec
push
pop
fdivrs
aaa
lcall
jno
or
jg
cmp
push
xchg
iret
jo
jo
mov
sub
stc
test
pop
sub
cmpsl
mov
stos
mov
or
dec
inc
fs
outsb
mov
loope
cmp
cli
inc
and
in
mov
sub
mov
jne
sbbl
into
and
aad
cmp
int3
sub
popa
inc
incl
jbe
mov
orb
fprem
jnp
scas
cmp
mov
mov
cmp
sar
sbb
push
fcomps
ret
cmp
pop
ljmp
pop
push
sub
push
and
pop
lret
mov
xchg
mov
xor
mov
testb
imul
fidivs
mov
mov
bound
xchg
mov
push
mov
xor
ss
push
sub
pop
xchg
inc
aas
test
xchg
mov
lds
outsl
add
ds
int
mov
insb
and
pop
lods
mov
sbb
rorb
xchg
mulb
cmpsl
sub
pushf
jb
test
fstpl
adc
push
jmp
in
mov
roll
push
xchg
cmp
icebp
sub
pop
inc
mov
dec
or
mov
lds
iret
and
mov
and
inc
ds
es
subb
sbb
sbb
add
inc
repnz
mov
jb
push
out
daa
shrl
xchg
push
ja
xor
dec
jnp
inc
mov
xchg
mov
mov
sahf
jmp
dec
add
pop
popa
mov
mov
mov
sub
popa
dec
adcl
fistpll
inc
xchg
rcrb
cmpl
and
jecxz
fmul
or
push
mov
or
neg
xor
adcb
adc
fwait
lods
ret
fdiv
sub
add
jo
out
xor
ret
push
insl
test
into
xchg
rorb
sar
out
or
add
inc
cmpsb
or
jnp
pop
xchg
popl
inc
inc
and
push
fadds
sahf
repz
mov
pop
xor
out
ss
cmpsb
gs
aas
ja
pop
mov
inc
jne
pop
lock
int3
xor
xor
sbb
iret
lea
mov
mov
mov
stos
sbb
jne
call
or
mov
aad
cmp
mov
xor
test
ss
fisttps
fimuls
flds
mov
adc
aad
cmp
pop
ja
mov
push
mov
inc
ret
inc
xor
popa
add
stos
xor
js
xor
nop
jl
repnz
ss
jno
mov
mov
mov
repz
dec
lret
pusha
pusha
add
pop
movsl
or
and
lock
cwtl
xor
sub
test
cmpsb
out
inc
jae
jecxz
mov
jmp
in
cmc
lahf
pop
lret
mov
mov
push
std
comiss
imul
jne
ret
pop
cmp
xchg
adc
xchg
roll
fwait
add
aad
mov
clc
sub
sahf
jno
xchg
mov
shlb
clc
jp
in
rcll
or
jl
xchg
ret
enter
or
andl
fwait
push
mov
cmp
push
jge
fisubrs
and
leave
and
imul
fimull
pop
dec
stc
push
jns
push
fdivp
xor
les
shl
das
cmc
dec
sub
push
mov
mov
stc
cmp
fucomp
xchg
fnsave
ds
dec
imul
xor
xchg
jle
je
cmp
test
cmp
pop
or
jo
mov
or
mov
icebp
xlat
dec
insl
jge
insl
adc
xchg
int3
outsb
in
scas
sub
mov
cmp
mov
add
push
mov
dec
mov
fisubl
mov
rcrl
adc
and
mov
hlt
call
test
fisubl
pop
jnp
ret
aaa
dec
push
add
cmpsl
gs
xchg
ds
js
mov
or
sub
nop
mov
aad
sahf
and
cs
popa
xor
xchg
mov
out
sbb
pop
fldcw
adc
sub
adc
add
movsl
mov
jle
dec
es
das
mov
mov
subb
iret
outsb
daa
insl
jp
xchg
notb
pop
test
inc
insl
sbb
loopne
imul
shrb
adc
push
ds
data16
nop
inc
bound
in
cmp
push
loop
push
push
adc
and
push
xor
cld
loop,pn
sub
das
push
or
fistpl
dec
xchg
jge
sub
mov
inc
shl
data16
jb
cld
ss
mov
fwait
out
dec
and
pop
push
enter
aad
bnd
cmc
push
jmp
add
mov
push
fwait
jne
dec
lret
jnp
fdivs
jb
sti
adc
inc
xor
data16
add
xor
jb
test
ds
rclb
jo
adc
in
fnstcw
pusha
hlt
jno
cmp
popf
mov
sbb
into
jno
xlat
aad
jnp
lret
in
jne
sbb
fs
not
or
push
out
in
rorb
jmp
out
mov
jne
cmpsl
xor
sbb
fidivrs
icebp
pop
inc
and
xor
jmp
mov
xlat
and
int3
or
stc
lret
popf
lea
push
int3
aas
mov
arpl
cmpsl
daa
mov
add
jae
mov
mov
cmpb
add
xchg
sbb
and
sbb
dec
and
mov
xchg
add
cltd
outsb
cmp
icebp
repnz
aad
mov
and
jne
test
inc
popa
scas
mov
fimuls
in
push
shr
fidivl
in
pop
mov
out
and
dec
push
shlb
add
shl
jg
or
dec
stos
pushf
call
sahf
pop
subb
lds
cmp
ret
or
adc
out
loopne
pop
push
loope
les
mov
inc
mov
pop
add
mov
stos
aam
shrb
enter
xchg
push
call
sbb
int
pusha
int
div
pop
dec
or
mov
loopne
imul
mov
idivb
outsl
es
pusha
rorb
add
loop
jl
inc
dec
jb
int
mov
and
sbb
call
adc
add
pop
mov
sarl
pop
fildl
cmp
sbb
mov
out
sub
jbe
pop
lret
jae
je
daa
inc
add
mov
std
dec
scas
loop
lcall
sahf
daa
mov
mov
sti
dec
xor
cmp
or
clc
in
and
imul
jbe
and
sub
xor
inc
mov
aam
js
jecxz
adc
daa
inc
out
mov
enter
movsl
cld
pop
push
iret
shlb
cltd
xchg
push
push
sbb
sub
lock
jo
cmpsl
pop
lahf
js
mov
inc
inc
sub
scas
repz
sbb
jns
in
jle
loope
repnz
cwtl
mov
mov
pop
cmpsl
or
cmp
pop
outsl
imul
in
call
ret
cmpb
push
rcll
insb
and
add
lret
pop
xorb
jmp
rclb
adc
mov
out
add
pop
data16
inc
js
mov
loopne
ret
sbb
lcall
xchg
out
pop
shll
and
cmp
ss
adc
xchg
aad
rep
pop
mov
int
clc
or
mov
rorb
pop
mov
lods
les
jb
cmpsl
push
pusha
gs
adc
lret
mov
mov
cmc
and
xor
mov
sub
fwait
add
mov
mov
mov
arpl
xor
jmp
jl
push
aaa
lock
push
out
adc
jecxz
lcallw
fwait
sub
stos
cs
adc
xor
daa
xorb
pop
call
cmp
sbb
dec
in
cld
and
xor
jbe
xor
xchg
and
dec
repz
mov
out
divl
push
jge
rclb
xchg
push
andl
ja
arpl
or
mov
dec
xchg
xchg
inc
sub
popf
incl
test
mov
mov
jae
xchg
and
sub
aam
mov
and
xchg
cmpl
adc
sarb
inc
icebp
inc
out
pop
add
imul
in
jle
jb
xor
jnp
pop
push
cmp
jae
xchg
jbe
cmp
fidivs
mov
inc
lods
addr16
pop
jno
stc
dec
repnz
xchg
mov
sub
sub
dec
aam
or
sahf
ffreep
gs
push
in
decb
js
xor
xchg
xchg
mov
cld
mov
mov
lods
les
or
mov
shrl
in
es
imul
sub
xchg
lods
icebp
fistpl
cld
xor
subl
negl
or
test
fmull
mov
xchg
xchg
sbb
jg
std
int
mov
pop
pop
add
mov
scas
jb
or
jle
loope
sub
jg
in
xlat
stos
xor
lret
pop
sbb
mov
scas
or
sub
dec
fwait
xor
std
push
sub
or
aam
imul
inc
aam
mov
jno
push
jb
js
jb
sbb
mov
push
jbe
sub
adc
dec
iret
push
adc
enter
fs
pop
push
js
xor
and
lock
mov
aad
outsl
inc
lods
ljmp
das
loopne
lds
cltd
in
push
lret
arpl
cmpsb
jmp
add
xorl
std
enter
nop
xchg
sbb
sub
jle
sbb
xchg
gs
sbb
inc
imul
sbb
mov
shll
pusha
push
idivl
pop
dec
pop
push
sahf
lcall
mov
push
mov
movsb
mov
xor
sbb
xchg
mov
inc
mov
in
bound
cmp
push
addr16
jnp
push
inc
dec
enter
pop
add
test
loope
fdivrs
jge
test
jp
cmpsl
addr16
dec
icebp
sub
adc
adc
mov
sbb
movsb
int3
lods
push
dec
cli
rolb
mov
fcompl
or
inc
leave
pop
movnti
lock
and
push
mov
outsl
adc
mov
cmpsb
loop
adc
and
inc
add
fldenv
mov
fimull
cmp
in
lret
or
lds
inc
lods
inc
pop
pop
push
fldl
and
dec
push
pushf
enter
sub
in
hlt
xor
and
call
sub
xor
test
mov
xor
repz
sub
xor
loopne
out
mov
jl
sahf
mov
push
xchg
jb
loopne
pusha
cmp
push
es
mov
jbe
cmp
xor
lret
inc
ret
adc
jne
xor
iret
fcompl
inc
fwait
test
and
nop
push
xchg
shlb
push
mov
pop
jae
push
outsl
cmovo
cmp
scas
xchg
ja
nop
jmp
xor
fcompp
das
je
mov
loop
xchg
inc
push
xor
popf
int
stos
sbb
xchg
adc
mov
mov
mov
not
fidivl
pop
cs
add
into
or
lods
outsb
mov
cs
rclb
movl
xor
dec
jne
leave
and
fisttps
icebp
dec
movsl
mov
inc
clc
mov
inc
inc
mov
ficoml
push
and
mov
or
insb
lods
jg
pop
cmpsl
sbb
arpl
or
out
xchg
mov
aas
pop
dec
aaa
test
scas
shll
mov
in
xor
push
lods
inc
lss
inc
movl
stos
test
inc
outsb
cwtl
imul
mov
mov
push
cmp
leave
fnsave
leave
loopne
sahf
sub
xor
lods
mov
or
jg
jl
xor
inc
or
pop
cmp
rcll
push
dec
inc
and
xchg
sub
mov
lea
pop
add
rcl
fstl
jg
cmpsl
in
inc
mov
jecxz
jmp
and
insl
negb
mov
std
mov
and
mov
push
out
dec
loope
scas
lds
push
add
mov
aas
shlb
daa
sbb
fstpl
int
nop
mov
xchg
rep
sub
dec
scas
or
push
pop
add
stos
xor
out
jmp
pop
mov
push
push
sub
fwait
mov
xor
test
loope
popa
jne
test
mov
jb
pop
push
lds
inc
fmul
add
les
pop
add
sub
push
mov
xor
add
clc
inc
stc
lods
sub
imul
dec
xor
mov
rcrb
sbb
test
fldl
or
lret
or
sbb
lret
xor
mov
xchg
push
addr16
xlat
into
fbstp
cmc
vphaddbw
inc
lock
stos
push
cmc
or
lahf
jle
pop
xchg
scas
fidivs
mov
inc
cmp
or
dec
xorl
or
xor
inc
fnstsw
ror
pop
adc
add
scas
rcrb
cltd
mov
movsb
mov
lods
pop
push
outsl
out
insl
jb
pop
xor
insl
decl
add
jmp
movsb
adc
jne
inc
add
push
xchg
xchg
mov
xorb
inc
mov
iret
push
sub
scas
xchg
xchg
out
fistpll
ljmp
cmp
inc
std
mov
push
xchg
aad
adc
cmp
ljmp
inc
jno
shrb
xorl
movsb
or
mov
into
xchg
or
mov
jne
shrb
sub
rclb
mov
inc
push
mull
xchg
scas
int3
adc
test
add
sbb
or
out
mov
rcr
stc
dec
mov
cs
out
fwait
ja
cmp
dec
mov
ret
decb
pop
inc
into
jecxz
addr16
lcall
sub
mov
sub
cmp
push
dec
push
lock
sbb
inc
addb
pop
jg
fidivl
lcall
jp
or
mov
dec
inc
xorl
jne
dec
bound
test
xchg
subw
push
xchg
mov
pop
push
jb
dec
dec
xlat
pop
push
loopne
inc
in
cltd
jecxz
orl
inc
jae
cmpsl
add
pushf
pop
pop
xchg
jl
adc
xchg
inc
push
cmpsb
xchg
pop
dec
xchg
mov
inc
mov
sti
xorl
and
inc
lret
mov
lods
mov
sti
rorb
jae
jbe
lahf
dec
or
lahf
jecxz
lret
aaa
scas
mov
mov
mov
pop
cmp
popf
ret
push
mov
loop
jne
lret
outsb
add
rcl
call
decl
push
in
inc
xchg
push
cltd
add
sub
out
push
flds
pop
sbb
mov
ret
in
js
sti
jb
cld
cmc
jecxz
cmpsb
pop
movsb
add
fwait
sbb
pop
clc
mov
push
gs
leave
outsl
pop
cwtl
lcall
loopne
mov
xor
or
cmp
sbb
sarl
or
notl
enter
jbe
adc
insb
push
shlb
xor
jno
cmc
test
push
xchg
push
push
int3
mov
pop
push
bound
jmp
pop
push
cwtl
mov
adc
xor
jecxz
gs
push
in
adcl
or
mov
addr16
mov
mov
cmp
adc
mov
hlt
sahf
push
mov
lods
test
mov
stc
out
jp
leave
pop
mov
dec
or
push
cs
or
loopne
xchg
faddp
push
scas
adc
hlt
fdiv
inc
sahf
clc
add
xor
mov
test
mov
leave
fidivrl
popf
fwait
popa
in
nop
cmp
inc
mov
mov
loope
cltd
xor
test
mov
ljmp
stos
iret
push
repz
out
test
fs
sub
jp
or
sub
cmovo
push
mov
cmp
sahf
cmp
cmp
out
imul
mov
imul
pop
pop
imul
cltd
cld
add
in
mov
and
inc
fcmovb
sbb
cmp
cmp
pop
addl
cmc
lods
imul
test
jmp
ds
inc
dec
sbb
stos
iret
or
loopne
mov
sub
mov
xchg
sbbb
xor
fcmovnb
inc
sbb
aad
jb
ror
lahf
push
lods
xchg
popa
add
outsb
jmp
cltd
popa
repz
pop
mov
mov
lahf
movsl
test
cmp
xchg
sub
sub
cmp
xchg
bound
pop
dec
test
jp
nop
aad
stos
or
sub
mov
shr
and
cld
cltd
test
inc
mov
cld
lods
out
out
xor
mov
js
jnp
mov
scas
ficoms
or
or
cmp
out
loope
push
icebp
loopne
dec
mov
pop
add
aas
clc
add
cmp
adc
aas
movsb
ljmp
mov
pusha
dec
jns
inc
mov
lret
or
sti
cmp
es
and
adc
adc
pop
or
xchg
jle
stos
std
fcoms
adc
rolb
cmc
sub
sbb
push
aaa
imul
repnz
mov
imul
mov
aaa
inc
pop
pop
loop
fs
aas
and
cmpsb
add
enter
rcl
out
stc
test
dec
test
ret
je
xor
mov
out
mov
stos
inc
fmuls
mov
add
sti
push
cmpsb
fs
or
push
mov
pop
xchg
pop
hlt
inc
dec
adc
bound
scas
mov
hlt
cmp
orb
enter
icebp
push
hlt
test
jne
pop
out
leave
pop
and
aad
xchg
pop
mov
in
bound
and
js
and
bound
xor
dec
dec
ljmp
mov
iret
std
mov
test
cmp
inc
icebp
mov
adc
xchg
test
xchg
mov
pusha
jb
jae
mov
add
cmpsl
lock
loopne
hlt
fbld
rcrb
out
lds
xchg
insl
push
cmpsl
adc
mov
cmpsl
and
mov
jmp
int3
aas
mov
js
lret
test
inc
cmp
mov
mov
in
jmp
nop
xchg
scas
loop
mov
cmp
pop
pop
mov
dec
sub
dec
jns
push
fimuls
imul
mov
outsb
loop
movsl
in
xor
pop
xor
dec
mov
aad
and
inc
mov
pop
pop
mov
mov
sbbl
xchg
hlt
enter
cli
jge
push
es
in
addr16
adc
pop
sbb
pop
es
sub
lcall
out
push
sbb
mov
xchg
cli
add
test
stos
scas
sbb
mov
xor
daa
iret
xor
rcrl
push
sti
loope
and
jle
sahf
cltd
xchg
dec
mov
push
lds
in
mov
stc
pop
mov
sbb
fnstsw
rorb
jne
imul
cmp
popa
cmc
xchg
push
push
xchg
mov
jnp
and
sub
xchg
stos
shrl
lahf
inc
mov
inc
inc
stc
xor
outsl
pop
js
aas
rorb
insl
jno
or
lods
test
cmp
add
aad
out
mov
jnp
mov
imulb
fwait
sbb
leave
iret
jae
mov
pop
std
pop
and
xchg
fs
cmpsl
sub
pushf
add
ss
xor
gs
and
test
sbbl
clc
nop
and
test
fldt
dec
or
lret
mov
push
jle
xchg
arpl
mov
pop
insl
cmp
out
and
mov
jb
jne
lret
mov
insb
push
jle
jge
push
cmp
jno
pop
pmuludq
and
xlat
xchg
insl
inc
or
stc
sub
adc
fwait
jo
lret
rcrb
aam
sub
or
ds
add
mov
andb
cmp
ss
xlat
das
test
lcall
fwait
adc
fcmovnb
mov
pop
mov
pop
lock
ljmp
and
xor
or
xchg
pop
imul
mov
and
jmp
aaa
sahf
mov
add
xor
or
dec
push
xor
fwait
push
jmp
nop
or
dec
ljmp
inc
inc
dec
cmp
int
lds
or
stos
and
negl
mov
xchg
ja
rcr
jecxz
fdivr
test
or
fisttpll
jp
cmpsb
sahf
pop
xor
shrl
push
scas
sub
xor
rorl
lret
sbb
mov
push
nop
mov
push
sbb
jge
rclb
fstl
xchg
jb
insb
rcrb
cmp
aaa
inc
stos
test
sbb
loop
xlat
leave
adc
lcall
js
gs
fnsave
lret
mov
xor
jg
ds
xchg
cs
sti
out
cwtl
cs
jo
shrl
pop
push
sub
xchg
std
xlat
test
lea
bound
adc
jl
rorl
loop
push
daa
mov
mov
jmp
lahf
xchg
mov
mov
mov
inc
xor
dec
cmp
inc
lea
push
fs
fisubrs
es
addr16
sahf
add
mov
pop
xor
mov
and
mov
mov
rcrl
xchg
or
jecxz
pop
xchg
out
mov
xchg
xor
cmp
xor
lods
repz
xor
clc
and
lret
ret
addr16
das
mov
xlat
dec
pop
or
in
filds
jbe
std
sub
push
cmpsb
in
mov
lcall
push
stos
xchg
dec
xor
sti
sbb
adc
mov
lcall
ljmp
test
faddl
outsl
test
xchg
mov
clc
mov
divl
cld
mov
stos
cmp
pop
and
or
stos
adc
and
ja
jecxz
mov
push
stos
scas
shlb
sub
cs
pop
insl
ja
jns
data16
jns
dec
or
cmp
pushf
push
test
adc
leave
jns
fs
sub
cs
ljmp
inc
push
jp
push
xor
or
out
mov
ss
loope
popf
add
sub
mov
test
add
or
in
mov
lods
loop
xchg
xor
std
out
mov
xor
aaa
pop
sbb
mov
xlat
testl
adc
mov
mov
mov
or
push
fisttpll
cmp
pop
das
pop
insb
fs
shlb
enter
pusha
xchg
jmp
outsl
loop
inc
push
or
pop
mov
lods
mov
add
aam
xchg
shrl
cwtl
sti
mov
inc
mov
pusha
push
daa
jno
test
fwait
jae
push
inc
aas
add
outsl
lds
push
mov
jmp
lret
and
ja
lret
ljmp
out
out
jns
arpl
jle
lds
mov
adc
ja
xor
movsl
mov
adc
fs
popf
push
mov
dec
cs
mov
pop
out
fucomp
mov
iret
push
inc
fwait
mov
stos
inc
sti
subb
push
jge
jns
outsl
pushl
push
xchg
sar
dec
mov
daa
jmp
xchg
lock
and
pushf
pop
jecxz
inc
daa
xlat
leave
mov
leave
jg,pn
inc
in
mov
shll
adc
jno
and
loopw
xchg
aad
out
pop
loopne
jecxz
or
enter
cmp
xor
mov
loopne
pop
pop
jnp
mov
sbb
push
nop
pop
lahf
lods
and
xchg
cmpsb
fadds
clc
jge
add
cmp
lods
insl
jmp
repnz
mov
ds
scas
cmc
pushf
jmp
push
mov
cmp
jbe
pusha
movsl
scas
out
lcall
in
and
lea
xchg
out
aaa
sub
and
cmp
jo
push
js
or
pop
aam
and
cmp
mov
out
jmp
adc
mov
push
jns
std
xor
jnp
je
inc
je
aam
pop
pop
cmpsl
push
shlb
cmp
loop
cmp
repz
dec
jo
mov
inc
inc
adc
mov
and
shlb
fdivrl
xor
mov
rolb
jle
fiadds
out
fstl
fdiv
fildll
sysexit
test
inc
pop
adc
mov
push
sub
or
ss
jno
je
cmpsl
out
aaa
jmp
and
push
dec
mov
pop
xor
cld
add
call
pop
push
andl
test
mov
cmc
inc
cmp
xor
idivl
jb
js
inc
fsubrl
xchg
xor
mov
adc
mov
mov
mov
pop
test
jle
lods
lret
xor
cmp
inc
xchg
in
mov
mov
dec
cmp
mov
xchg
inc
mov
cmp
adc
jnp
jbe
adc
lret
loopne
mov
cmp
xor
or
subb
je
push
mov
push
mov
cmp
mov
lret
rclb
cli
inc
push
sub
lds
lret
fnsave
loop
sub
mov
jecxz
xor
cmp
mov
mov
test
mov
inc
jmp
popf
pop
call
jno
daa
into
rorl
push
movsb
xor
inc
out
or
add
xchg
loop
add
cmp
adc
or
jg
xchg
call
xchg
std
inc
mov
imul
fstpl
and
mov
aam
dec
sbb
out
jl
adc
push
push
push
into
add
nop
xlat
mov
mov
add
fildll
push
push
xor
test
mov
loope
push
mov
stos
data16
or
mov
setbe
xchg
int
in
gs
aaa
push
add
jno
sub
lea
pushf
cmp
mull
mov
inc
dec
add
sbb
scas
jno
mov
fstl
ret
push
outsl
jbe
inc
push
mov
push
clc
pop
or
pop
loop
cmp
push
ficoms
pop
pop
dec
pop
cmpsb
pop
enter
insb
sub
int
ljmp
iret
lods
jae
insl
sarb
xchg
or
cmpb
popa
unpckhps
cmp
jle
lods
icebp
xchg
aaa
outsb
ljmp
orl
xchg
fiaddl
xchg
shll
lahf
lahf
out
mov
int
iret
bound
inc
pop
mov
dec
mov
loope
mov
add
popf
and
loopne
ljmp
inc
mov
pushf
insl
or
xchg
jb
xchg
sarl
cmp
push
adc
pop
int3
in
mov
loope
cltd
xor
dec
jmp
arpl
jl
add
cmp
js
dec
xchg
jle
sbb
xchg
out
add
das
or
dec
ja
lds
mov
fdivrs
jecxz
mov
pusha
je
inc
xchg
je
push
add
iret
addb
sbb
pop
cmp
insb
dec
mov
add
call
sti
jp
imul
fcoml
iret
mov
movsl
hlt
fwait
leave
mov
sbb
xchg
fdivs
push
xchg
clc
push
push
dec
pop
fists
lcall
push
pop
vmovupd
pop
adc
pushl
jp
add
sub
sbb
xor
sbb
push
cmpsl
inc
dec
jae
ss
jecxz
jle
imul
adc
rol
fnstcw
jecxz
movsb
out
mov
aad
push
enter
lock
mov
pop
mov
push
dec
jno
popf
push
stc
sbb
mov
movsb
pop
fists
fidivs
sbb
xchg
dec
das
sbb
loop
pop
aad
fiaddl
in
nop
push
cmp
jmp
xchg
pop
mov
push
mov
xchg
dec
or
jae
cmp
cmpsl
or
or
rcr
pop
cmpsb
xchg
dec
insl
mov
std
ret
sar
dec
aaa
push
jne
xchg
jnp
les
pop
xor
or
out
add
push
push
fcomps
jmp
add
fdivr
mov
dec
repnz
mov
mov
pushl
sub
ret
xor
adc
xchg
push
fisttpl
aad
push
push
insl
and
and
cltd
movsb
outsb
mov
xchg
test
jecxz
dec
outsb
and
cmp
xor
test
ja
sub
adc
or
and
arpl
and
add
sub
and
loop
cmpsb
lods
popa
dec
jl
movsb
dec
inc
repz
ljmp
inc
movsb
dec
aas
cmpsb
pop
enter
test
out
fisubs
lret
test
sbb
push
inc
mov
loope
pop
sbb
mov
bound
jb
mov
cmp
mov
iret
loop
or
stos
popf
xchg
and
jl
out
mov
test
mov
mov
loopne
arpl
cwtl
jp
vsubsd
inc
call
enter
hlt
jg
loop
js
in
es
rorb
mull
test
jecxz
ret
pop
js
cmpsb
dec
int
sub
adc
push
lods
xlat
int3
addr16
dec
dec
sub
and
pop
popf
xchg
aas
pushf
js
mov
hlt
test
inc
mov
aaa
mov
sub
mov
aas
jg
mov
les
cld
xorl
xorl
in
mov
lcall
inc
arpl
dec
nop
jbe
pop
xchg
scas
stos
flds
in
sbb
push
loop
xor
sahf
in
jne
test
movsb
addr16
shl
and
bswap
adcl
aaa
hlt
sbb
push
jno
in
xchg
popa
loope
outsl
lds
push
or
insb
mov
repz
adc
fs
testl
add
fldt
pop
mov
mov
negl
imul
lret
ret
loop
enter
push
push
push
test
mov
fsts
imul
dec
pop
fs
add
sub
loop
add
cmp
or
xor
insl
aad
rcrl
sbb
xchg
pop
ficoml
pop
das
stos
aaa
paddb
insb
rolb
jg
mov
rsqrtps
rcll
sub
and
sahf
adc
inc
cmpsb
in
sub
mov
dec
mov
mov
cmp
mov
sub
add
and
add
cltd
lods
xor
dec
xor
mov
mov
push
imul
mov
inc
adcb
hlt
aad
jno
gs
jmp
add
sub
cld
bound
loopne
xchg
pop
cmp
in
push
or
iret
test
daa
lcall
out
addl
addr16
add
shr
push
sub
popa
int3
and
je
lock
cld
in
push
or
sbb
jl
cwtl
cmc
and
scas
jne
dec
movsl
loop
jl
pop
js
movsl
ds
pop
push
cld
cmc
sub
or
leave
cmpsb
and
add
fsubs
fs
add
push
inc
inc
ss
shl
or
sahf
das
sbb
pop
add
add
or
mov
loope
dec
sbb
ret
and
mov
mov
int
sub
popf
and
cmp
sbb
aas
adc
xor
cld
and
push
in
leave
daa
and
fildll
je
sub
xor
cmp
icebp
jle
inc
jae
scas
loop
addr16
push
mov
push
xchg
repz
pushf
cmp
mov
nop
mov
sarl
adc
ror
and
into
rcll
sbb
inc
and
pop
or
rcr
jbe
ficompl
adc
dec
push
pop
cmp
and
pop
sti
cmpsl
xchg
mov
repz
jbe
push
sbb
xchg
cmp
pop
pop
push
mov
pop
pop
scas
testb
out
je
jo
push
xor
jle
loop
loope
dec
sti
fisttpl
lret
enter
mov
mov
aad
dec
mov
and
mov
fcoms
orl
dec
daa
adc
bound
adc
mov
cmpsl
std
cmp
shlb
adc
scas
lret
jle
sti
or
repz
mov
in
mov
pusha
mov
pop
lret
in
mov
sub
sahf
push
std
adc
mov
movsl
sub
in
ror
dec
fsubl
in
stos
sub
add
cmp
push
int
mov
mov
les
dec
orl
mov
int
xor
add
and
mov
shrb
in
cmp
mov
fdivrs
scas
les
addr16
push
ret
pusha
xchg
fcmove
jno
lods
inc
lock
into
pop
mov
sti
sub
cmp
rol
cmp
cmp
jle
jl
imul
movsb
dec
dec
mov
aaa
ja
adc
movsl
enter
movsb
sbb
outsb
dec
mov
mov
inc
xchg
dec
mov
rcrl
push
push
cmp
shlb
sahf
lock
arpl
cmp
mov
pop
push
lock
xchg
cmp
push
pushf
arpl
es
xchg
fwait
adc
pop
fidivs
aad
jg
enter
inc
stc
nop
outsb
sbb
popl
jg
mov
flds
sub
adc
lods
inc
pop
push
ss
and
iret
ljmp
mov
mov
dec
or
mov
or
sbbb
dec
sbb
mov
std
sub
lods
inc
mov
fnstenv
adc
sbb
insb
and
pop
dec
repnz
pop
cld
lcall
sbb
sbb
dec
cld
in
enter
and
ret
in
out
in
outsl
rcrl
aad
dec
add
loopne
mov
dec
jg
ret
cltd
mov
add
push
cmp
xor
xor
pushf
push
or
jo
and
out
out
test
push
shld
sbb
sbb
fwait
xchg
jmp
mov
movsl
or
mov
cmp
shl
sbbl
or
loopne
and
mov
andb
loope
leave
je
sahf
dec
in
cmp
jg
dec
xor
and
hlt
or
iret
in
xchg
jbe
pop
fldenv
push
push
test
bound
push
cli
xchg
xchg
sbb
subl
pop
rcrb
repnz
outsl
leave
jae
fldt
mov
enter
fcompl
hlt
fnstsw
sbb
sbbl
pusha
lahf
aam
mov
gs
jl
mov
xchg
popf
xchg
xlat
push
mov
mov
pop
data16
and
dec
pop
xchg
aam
or
or
pusha
fwait
aad
adc
fcmovb
and
pusha
sar
pop
dec
jmp
insl
adc
loope
and
js
dec
cmp
popa
std
stos
sub
test
dec
sahf
std
cmp
mov
push
out
movsl
aaa
pusha
aas
inc
fdivs
adc
xchg
mov
cmp
xorl
test
pop
cmp
jg
and
pop
cwtl
xor
mov
xchg
jbe
and
push
jl
adc
movsb
xor
jne
inc
pop
mov
decb
mov
mov
je
and
cmp
cmp
imul
movsl
pop
mov
lock
push
mov
popa
fidivrl
sarb
outsl
sbb
sub
fldenv
cmp
dec
out
xchg
sub
mov
fcmovnbe
nop
icebp
inc
movsl
pop
mov
dec
adcl
jp
adc
push
test
xor
insb
popa
inc
mov
xor
mov
jbe
mov
nop
pop
inc
mov
scas
mov
stc
mov
mov
pop
fidivs
in
sub
and
jl
cltd
mov
iret
jns
dec
cmp
nop
mov
push
fwait
jl
or
das
dec
cmp
or
in
mov
xchg
add
mov
cld
pop
out
mov
aam
pop
outsl
gs
cmp
mov
mov
push
mov
dec
out
in
icebp
add
scas
pop
call
sti
jbe
gs
fiadds
cmc
cs
insl
mov
shll
mov
or
lock
dec
fstps
push
sub
or
fmuls
push
add
cmpb
movsl
cmpsb
jmp
sub
pop
nop
loop
dec
adc
call
mov
insb
enter
loop
scas
add
addb
shrb
cmp
or
lods
sbb
popf
push
movsb
int
cmp
xchg
repz
fldl
sahf
outsb
aad
fs
lods
xchg
cmp
sarl
lret
cmc
adc
int
rorb
cli
imul
loop
pop
mov
pop
sbb
cmp
scas
xchg
popf
jbe
mov
ret
fdivl
sub
push
test
mov
xchg
dec
inc
sub
jge
sub
aad
stos
mov
mov
pop
xor
cwtl
xorb
push
sahf
inc
hlt
or
in
or
inc
or
lret
fwait
and
sbbl
mov
push
inc
sub
cmp
in
imul
jecxz
enter
pop
mov
cld
pop
mov
gs
adc
jecxz
ficomps
adc
dec
movsb
inc
jbe
or
in
xchg
scas
xorb
dec
xchg
fcoml
lea
mov
clc
push
mov
push
xchg
psllq
xchg
adc
cmovno
in
jno
fidivl
xchg
mov
and
pop
fildl
fwait
mov
and
in
add
rorl
push
inc
cmp
ret
push
or
test
cmpsl
imul
jnp
sub
add
ss
ds
loop
cmp
xchg
ror
insb
cmp
push
lret
inc
sbb
punpcklbw
dec
pop
je
adc
push
aas
mov
pop
sbb
and
mov
jmp
insl
add
jne
or
outsl
shl
mov
cmp
leave
add
push
mov
push
mov
push
dec
in
jmp
cld
cmp
jb
dec
dec
push
enter
pusha
stos
xor
hlt
int
jg
sbbb
mov
lcall
scas
aaa
mov
les
adc
mov
aaa
or
mov
repz
sub
cmp
out
inc
xor
das
push
popf
ja
push
psllq
ficompl
dec
sahf
lcall
hlt
xchg
nop
jno
sub
sahf
or
or
ss
pop
daa
add
pop
repz
mov
dec
sbb
sub
out
and
les
or
sbb
stos
rolb
dec
sti
xchg
push
and
inc
pop
insl
mov
into
ljmp
or
cmp
pop
mov
or
arpl
fiadds
aad
sub
fs
gs
fcoml
jg
pushf
cmp
bound
fisttpll
sbb
pop
rorb
cltd
pop
pop
adc
jnp
stc
xchg
adc
sub
iret
mov
out
mull
xchg
and
xchg
sahf
inc
lds
jl
ret
int
mov
jmp
outsb
call
iret
jno
test
and
cmp
loope
push
out
and
dec
pusha
roll
es
aaa
imul
or
out
pop
mov
pop
fld
add
jnp
mov
cld
and
adc
cltd
cltd
adc
and
xchg
dec
pop
loopne
mov
mov
cmp
test
nop
stos
cmpsb
sahf
sbb
iret
sahf
add
xor
mov
fwait
or
mov
arpl
mov
mov
imul
jge
rcl
cmpsl
inc
ret
xchg
int
sbb
xlat
mov
dec
push
mov
adc
imul
lcall
out
inc
lds
imul
sbb
repz
jg
xchg
pop
mov
xchg
push
mov
test
les
lods
bound
xchg
fldenv
lods
subl
sub
lds
ret
jbe
sub
call
ret
mov
mov
rclb
add
sbb
mov
gs
adc
insb
mov
fnstcw
add
fs
scas
lods
jecxz
pop
adc
add
adcl
shlb
mov
sub
mov
jno
xchg
ret
lret
pop
xor
sbb
pusha
jp
nop
sti
sub
adc
popf
push
pop
mov
cmc
mov
sub
add
movsl
movsb
ret
popa
mov
pop
jb
push
push
or
sbb
push
test
sub
test
xchg
int
pop
or
insl
adcl
sub
jbe
xchg
in
mov
and
fnstcw
inc
sub
inc
xor
insl
xchg
fnstcw
and
outsb
addr16
mov
dec
xchg
out
inc
lods
sarb
jmp
aaa
xlat
jg
sahf
idiv
inc
mov
jae
pop
add
xor
outsb
and
lea
mov
mov
or
or
in
inc
sbb
lods
mov
loope
adc
pop
pop
sahf
sub
xchg
jp
pop
lods
rcll
fdivrs
cmp
je
mov
push
push
adc
or
jp
jns
add
xchg
repnz
out
cmpsb
or
int
add
jp
mov
les
sbb
xor
pop
xchg
scas
scas
dec
test
icebp
ds
mov
jecxz
cld
adc
sbb
scas
filds
xor
jno
int
stos
addb
je
dec
jbe
pop
aad
add
mov
les
psubw
scas
push
aaa
fmul
adc
int
sahf
fimuls
into
lods
xchg
mov
and
xlat
pop
aas
addl
jmp
call
xchg
sub
ja
mov
inc
inc
jmp
inc
andb
aam
add
lret
mov
ljmp
mov
cmp
ljmp
js
pop
inc
lar
jmp
sbbb
push
ss
jle
adc
sub
int3
or
jae
sbb
jmp
xchg
gs
mov
push
xchg
inc
wrpkru
rcrb
hlt
dec
jle
jno
loopne
push
ss
into
ja
cmp
push
cmpsb
adc
ror
xor
popa
jnp
sarb
and
insl
jb
cli
pop
inc
lds
pop
jnp
cmpsl
inc
iret
cli
jns
xchg
bound
stos
pop
mov
dec
sub
enter
mov
push
pop
dec
call
jge
and
adc
loope
loop
cmp
dec
stos
call
shlb
jg
cli
mov
arpl
mov
xor
test
cmpsl
int3
xchg
or
push
inc
cmp
outsb
cmp
pop
lcall
mov
repz
xchg
sub
jge,pt
sub
mov
mov
jecxz
fwait
shrb
adc
mov
ss
mov
jl
shr
outsb
adc
rolb
subb
movb
pop
aaa
xor
pop
and
fistps
add
outsl
push
push
test
shlb
rorl
imul
and
mov
add
sarl
mov
xor
out
ds
sbb
mov
sahf
adc
mov
out
out
dec
inc
mov
inc
in
stos
insb
repnz
ret
jb
mov
pop
outsl
mov
seto
jmp
fsub
inc
or
test
xchg
mov
flds
call
popa
shll
hlt
aas
xchg
xor
push
pop
mov
mov
mov
addb
fsubrs
jns
movsb
dec
sbb
adc
imul
cmp
stos
into
pop
mov
pop
add
or
pusha
outsl
dec
jle
add
sub
es
dec
imul
inc
mov
xchg
sub
loope
cmpsb
xchg
jb
ss
jp
outsl
outsb
xchg
mov
in
repnz
mov
insl
xlat
lret
mov
mov
rcrl
mov
jno
inc
sub
rcrb
mov
add
adc
fcomp
sub
adc
sbb
movsb
sahf
enter
jnp
icebp
xor
or
ss
lea
cs
adc
adc
xor
outsl
pop
mov
rcrl
mov
and
nop
fnop
imul
rolb
out
subb
rorb
adcl
data16
xor
aaa
lds
out
mov
shrl
mov
cmp
or
add
scas
and
ja
inc
xchg
cmp
adc
je
shll
xor
out
xchg
jno
fisubrl
lcall
cmp
and
out
push
inc
jne
movsl
jae
out
movsb
mov
out
pop
loope
dec
jo
jp
sbb
pop
loop
test
imul
pop
fldcw
loopne
sub
arpl
pusha
cmpb
jp
sbb
and
sbb
inc
dec
cmpsb
xor
arpl
mov
jno
scas
dec
aaa
push
mov
xchg
cli
cmp
sub
imul
push
and
adc
inc
lret
cmp
adc
push
inc
cmc
scas
sub
pushf
xchg
jecxz
xchg
adc
mov
pop
addr16
mov
repz
cmp
iret
mov
mov
loopne
stc
jbe
sbb
push
push
push
outsb
add
jl
jecxz
pop
insl
push
push
add
movb
loope
push
xor
jb
into
sbb
pop
xor
push
push
repz
movsl
sub
fbstp
or
fnstenv
cmp
in
dec
out
push
in
dec
addr16
pop
pop
imul
dec
decl
xchg
mov
pop
or
shrl
in
adc
stos
adc
inc
xchg
test
nop
dec
in
faddl
lods
in
lcall
sbb
push
call
push
jmp
mov
cmp
inc
inc
dec
push
fcoml
es
test
mov
jl
mov
imul
je
test
push
rorl
addps
sub
mov
andb
in
loope
sub
and
outsl
das
push
call
int
mov
in
sbb
out
pushf
cs
mov
dec
mov
cs
sbb
ss
orb
lret
push
push
repz
jno
into
ljmp
iret
mov
add
xchg
bound
mov
adc
pop
lea
cmp
inc
sbb
inc
fisttps
push
sub
movsl
in
cmp
jo
int
mov
cmp
pop
inc
pop
pop
setbe
test
mov
push
xor
es
in
cmp
andl
adc
test
cmc
jne
ret
xor
or
pop
inc
popa
jnp
sub
dec
sub
xchg
adc
aas
add
iret
les
sbb
sti
cmp
xchg
aaa
jns
cwtl
dec
test
mov
scas
jb
xor
ret
sarb
cwtl
pop
ss
adc
fdivrs
inc
sub
xchg
aas
adc
test
ss
loope
jle
adc
jmp
int
ficoml
push
loop
inc
mov
push
mov
dec
push
inc
xorl
inc
clc
test
mov
into
fmull
adc
mov
dec
pop
dec
testb
push
sbb
sub
inc
sbb
jne
pop
sub
fmuls
jns
and
ret
lods
xor
push
jl
mov
shll
stos
mov
in
lahf
invd
and
mov
dec
fbld
inc
fsubs
lods
or
loop
or
mov
sbb
or
mov
mov
mov
stos
sbb
out
js
fiadds
fists
ret
sub
cwtl
into
and
das
inc
cmpsb
mov
int
aas
daa
or
jae
push
xchg
stos
out
sbb
mov
jmp
add
push
jnp
xchg
xchg
lea
cmpsb
orl
cmp
repz
pop
adc
scas
mov
push
jo
mov
inc
adc
lret
mov
xor
mov
int
adcl
mov
data16
popa
pushf
mov
aas
push
inc
ljmp
xor
and
cwtl
rclb
das
fmul
ds
mov
in
lock
lcall
lret
push
shlb
lods
call
aaa
gs
push
jae
cmpsb
mov
add
adc
lds
dec
push
push
sbb
jle
lock
stc
ja
mov
pop
adc
sti
jns
repnz
in
repnz
bound
xchg
sbb
ljmp
xchg
cmpsl
mov
sub
fimuls
inc
sbb
je
das
add
out
sbb
dec
addr16
add
push
ja
call
xchg
ss
pop
pop
test
xor
je
inc
or
ss
push
mov
mov
lcall
int
imul
fisubrl
mov
cwtl
cmp
sub
fistpl
jbe
dec
mov
dec
jbe
mov
dec
xchg
cmp
add
aad
cmp
hlt
dec
les
sub
pop
jo
jecxz
fisttps
dec
or
arpl
adc
mov
cmp
test
mov
popa
xchg
mov
dec
add
xor
imul
add
push
mov
mov
popf
mov
and
xchg
insl
jnp
mov
adc
mov
jmp
mov
mov
jno
lret
mov
cmp
mov
ljmp
pop
and
mov
jo
xor
xchg
pop
and
pushf
repnz
ja
xor
or
fnsave
int
loop
cmp
scas
das
dec
mov
ret
xor
inc
sub
cwtl
push
adc
test
cwtl
int3
js
out
pop
cmp
rcrb
clc
movsb
sbb
jl
jo
rorb
hlt
test
sbb
sbb
xchg
adcb
inc
jl
icebp
xor
dec
outsb
xchg
pushf
mov
jbe
sub
loop
sbb
dec
sbb
fwait
xor
jns
xchg
pop
pop
call
push
jecxz
out
hlt
popf
jno
je
out
add
in
nop
gs
dec
sub
stos
sub
lcall
in
or
lock
rclb
jb
fstps
or
push
sub
and
sub
inc
push
jnp
into
lds
loopne
pop
mov
add
sti
fwait
pop
pop
stc
xchg
push
pop
mov
rolb
or
imul
lods
pop
insb
inc
pusha
insb
mov
adc
into
jbe
addr16
pop
into
mov
lahf
xor
lods
loop
lods
jns
mov
rcl
insl
loopne
movaps
leave
xor
into
push
nop
nop
bound
stos
adc
pop
in
mov
add
jno
cmp
jo
push
sbb
sbb
sbb
or
gs
sub
xchg
push
sub
sbb
xor
enter
jmp
inc
xchg
sub
ficoml
mov
loopne
adc
push
mov
rcll
adc
pop
pushf
aam
add
repz
adc
xor
clc
and
jae
data16
adc
xlat
jb
loopne
jae
stos
sbb
cmc
sbb
cmp
cmc
mov
add
gs
push
pusha
leave
pop
sub
mov
and
cld
mov
cmp
mov
ja
adc
xchg
xor
scas
in
and
jg
mov
loope
les
sbb
popa
cmpsb
stos
mov
xchg
xorb
mov
icebp
xor
xor
push
pop
sub
js
mov
inc
push
xchg
orl
sbb
fadd
es
push
and
js
daa
mov
imul
or
inc
or
inc
js
lds
subb
test
scas
movsb
leave
rcrl
sub
jmp
xor
push
mov
cmp
mov
dec
xchg
in
adc
mov
push
mov
fnstenv
jp
jmp
mov
out
inc
icebp
xlat
inc
xchg
leave
add
js
sub
mov
pop
jle
pop
ljmp
aaa
cmp
inc
mov
fwait
mov
fxch
add
mov
std
mov
mov
jno
xchg
dec
mov
cmovs
xchg
data16
jo
roll
mov
xchg
dec
test
jmp
push
dec
mov
add
lods
cmpsl
lret
lods
push
adc
es
cmc
gs
outsb
sbb
sub
push
pop
push
inc
dec
sbb
and
clc
cwtl
subb
stos
aas
lahf
mov
jae
test
push
imul
mov
xor
out
lret
lret
sub
ret
fidivrs
lods
popf
adc
mov
lahf
test
es
sbb
jmp
xor
fists
or
pop
cmp
sbb
icebp
imulb
dec
xchg
sub
loope
jnp
or
sbb
cmp
leave
pusha
adc
in
sbb
sbb
add
aas
fisttpll
rcrb
test
nop
and
in
pop
or
in
loopne
add
xor
inc
jge
fnsave
mov
pop
fs
mov
add
inc
push
or
std
jge
cmc
ljmp
jbe
sbb
cmpl
add
push
shlb
xchg
xchg
stos
pop
fistpll
je
lahf
push
outsb
insl
repz
in
or
jp
add
jl
cmp
js
jnp
adc
cltd
jp
xchg
fs
sahf
fbld
outsl
mov
ret
mov
dec
mov
subl
std
xchg
pop
js
mov
rclb
xchg
mov
mov
cld
sbb
and
push
mov
and
out
jge
in
bound
lret
dec
roll
push
sbb
int
xchg
mov
shll
adcl
dec
jbe
xor
xor
aad
inc
roll
add
mov
aam
add
xchg
cmc
mov
dec
popf
popf
push
xchg
sbb
and
push
inc
jo
push
incl
filds
sbb
lret
sub
add
inc
shlb
stc
enter
pop
fwait
jbe
daa
inc
dec
cld
cltd
fcmovnu
xor
jl
adc
leave
lahf
xchg
and
scas
imulb
inc
adc
out
sbb
cmpsl
jmp
test
cltd
lahf
fsub
pop
inc
push
add
addr16
xor
jns
push
mov
cltd
ja
inc
inc
aaa
sbb
mov
ret
enter
flds
or
push
fldl
test
sbb
mov
scas
es
jecxz
xchg
mov
xchg
rcl
repz
nop
aam
inc
xchg
pop
dec
xor
mov
sbb
in
int3
test
test
mov
inc
and
pop
cmc
into
outsl
data16
insb
add
dec
out
pop
push
pop
jbe
cmp
jae
adc
cld
call
ret
lea
push
mov
xchg
fists
dec
adc
push
lds
xor
int
shll
adc
jb
push
inc
inc
rcrl
into
je
jg
ja
fdivs
test
push
or
out
cmp
jo
lret
out
cmpsl
repz
ret
jl
mov
mov
mov
in
push
xor
jns
je
imul
add
or
ja
or
test
enter
xrelease
ss
scas
jmp
ficompl
push
xlat
iret
repz
sbb
cmc
jge
addr16
xor
xchg
arpl
scas
jecxz
ds
cmp
dec
repz
fwait
mov
popf
add
or
lods
mov
mov
mov
or
sbb
adc
sub
pop
adc
pop
xor
ret
rcrb
push
inc
lock
cmpsb
sbb
xor
fs
test
sub
loopne
repz
push
mov
stc
adc
push
push
test
mov
sub
inc
inc
fdivp
lret
inc
rorl
cld
mov
cmc
mov
ds
rorl
bound
es
push
fsubs
arpl
push
mov
or
aad
push
sub
xor
mov
jle
pop
cli
dec
sbb
cmc
jno
popf
push
add
lea
loope
scas
pop
xchg
jg
jmp
mov
inc
push
iret
sub
push
imul
lcall
cmp
dec
push
cmpb
es
popf
mov
subb
enter
mov
outsl
mov
jbe
cmpsl
cmp
or
xor
or
push
imulb
daa
loopne
mov
pop
jb
roll
inc
push
dec
rol
fwait
cmpsb
xlat
jbe
out
out
mov
pop
inc
in
movsb
popa
call
shll
jo
ljmp
inc
cli
mov
cmpsl
add
or
adc
sub
mov
sbb
pushf
cltd
dec
lods
mov
imul
out
push
pusha
aam
mov
dec
ljmp
aam
jnp
jbe
jne
cmp
sarl
push
inc
sub
loop
clc
mov
fst
popf
jb
popa
inc
imul
outsl
mov
jnp
iret
stos
cmp
pop
pop
jg
fists
sbb
or
fs
in
and
jo
in
xor
dec
das
adc
mov
mov
jno
jae
loop
inc
sub
jg
iret
push
in
jae
dec
jecxz
or
decl
push
je
xchg
movsb
loopne
aaa
dec
mov
mov
mov
movsb
addr16
jle
cs
pop
add
sub
ljmp
cmp
lea
clc
test
push
and
sbb
sub
js
xor
cli
xor
adc
fdivrp
loop
or
add
out
sub
arpl
sbb
cs
rcll
mov
fisubrl
mov
fdivl
je
cmp
sbbl
mov
cld
shlb
fs
icebp
fadd
outsb
mov
fbld
push
sbb
inc
pop
push
sbb
add
or
das
lahf
sti
outsb
fs
jae
hlt
or
scas
lods
inc
enter
jno
sbb
fildll
and
mov
inc
mov
sbb
xor
dec
cltd
push
cmp
and
jge
xor
mov
outsb
dec
xchg
loope
imul
add
jge
mov
dec
mov
movsb
xchg
ljmp
adc
iret
aas
out
dec
in
inc
minps
add
in
cltd
mov
mov
in
scas
pushf
mov
lea
or
mov
xchg
popa
push
testl
out
es
sbb
sbb
cmp
or
test
repz
les
mov
gs
inc
out
icebp
cmc
bound
fcmovbe
xchg
add
int
pop
sbb
push
call
add
mov
das
mov
shlb
and
jg
inc
pop
sti
dec
sub
or
and
out
adc
or
jo
into
mov
push
push
inc
xor
arpl
xor
lock
das
arpl
jno
imul
repnz
mov
and
xchg
mov
and
sbb
insl
scas
loope
sbb
mov
cwtl
jecxz
inc
mov
xor
fimull
imul
pop
push
fs
fmul
ljmp
repnz
sti
stc
xchg
xor
ror
je
lods
lahf
lret
call
fdivrs
scas
or
mov
fdivrs
out
cmp
jb
sbb
xchg
adc
dec
testl
sub
cmp
xor
or
fimuls
xor
jp
mov
out
pop
pop
mov
lahf
movsb
daa
pop
lock
orb
dec
lahf
cli
cmpsb
push
bound
sbb
xchg
jge
iret
add
leavew
dec
jmp
jnp
lods
aad
aad
push
xor
xor
inc
jno
call
mov
sbb
in
int3
lds
cmpsb
cltd
ror
inc
inc
pop
push
push
push
pop
pop
xor
xlat
jmp
push
div
mov
imul
leave
or
sub
lret
jb
mov
and
sbb
push
and
mov
int
mov
out
inc
orb
mov
inc
xor
notb
test
push
inc
fistps
imul
fisubl
jnp
mov
out
in
push
scas
fbstp
lea
xor
and
je
mov
fisubl
frstor
fwait
or
add
push
dec
gs
inc
jle
push
inc
lds
dec
and
out
cltd
add
into
sbb
cmc
inc
std
sti
dec
or
out
pop
adc
stc
push
cmp
in
dec
out
das
jae
xor
sub
jle
shlb
mov
loop
mov
popf
jecxz
data16
insl
insl
int3
jns
mov
sbb
sub
xchg
pushf
sbb
imulb
cld
push
push
lods
sbb
ffree
fs
mov
or
pop
ss
add
fldcw
decb
push
ds
fstpt
rcr
push
dec
push
sbb
xchg
sub
gs
inc
lret
cmp
stc
and
mov
push
cmp
inc
js
hlt
mov
repz
ss
mov
sub
cmpl
bound
clc
cs
lods
xor
sbb
pop
iret
out
std
mov
scas
mov
or
or
rcll
dec
mov
mov
sbb
jns
xchg
jp
mov
inc
rol
adcl
scas
rorl
xchg
inc
les
add
mov
in
nop
adc
sbb
jge
push
adc
sub
mov
sbb
pop
cmp
aas
lock
mov
xlat
inc
pop
movsb
push
stos
xlat
scas
jns
adc
mov
push
mov
int
out
inc
rorb
mov
mov
adc
cmp
hlt
int3
out
jge
bswap
lahf
icebp
dec
cli
scas
pop
mov
aas
repnz
dec
cltd
sbb
pushf
cmpsb
mov
sbb
rcr
jl
sti
fs
rclb
fnstcw
jb
insl
mov
test
fsubrl
iret
cmpsb
out
std
mov
dec
mov
dec
test
lret
mov
rorb
push
ret
sbb
cmpsl
in
adcb
dec
push
jp
lods
jecxz
cmp
jno
rclb
jmp
xor
outsb
faddp
pop
xchg
sbb
cld
jo
ret
mov
js
adc
out
jge
cmp
cmp
nop
fs
test
jnp
jl
fsub
push
pop
enter
addl
ret
in
ja
pop
adc
ficomps
inc
iret
imul
loopne
jnp
lahf
xchg
dec
mov
inc
push
jg
stc
cmc
arpl
fdivr
pop
sti
mov
inc
jecxz
lret
pop
jne
pop
pop
rdmsr
cmp
test
or
hlt
lods
dec
and
lock
outsl
stos
jl
cld
test
lock
add
adcl
push
into
dec
popa
push
inc
or
int
add
sbb
pusha
js
test
add
and
or
aas
mov
loop
and
sbb
xorl
sub
and
cmpsl
pop
fwait
in
pop
pusha
js
mov
mov
xor
insb
repz
arpl
or
mov
popf
aas
stos
pop
jmp
dec
test
xchg
and
jnp
pop
pop
cmpsb
sarb
popa
mov
mov
push
insl
mov
cmp
inc
loope
insb
incb
mov
dec
daa
inc
bound
pop
inc
test
fs
in
mov
dec
pop
shlb
mov
xlat
dec
add
das
mov
arpl
in
scas
mov
inc
push
or
ret
mov
loope
arpl
jb
cmp
and
das
xchg
add
mov
lcall
mov
pushf
mov
testl
and
dec
jb
test
lods
dec
pop
sahf
dec
cmp
pusha
movsb
mov
adc
ret
pop
mov
jp
addr16
aaa
pop
inc
push
sti
mov
mov
mov
add
adc
scas
pop
push
sbb
lea
rorb
jecxz
loop
cwtl
out
les
xchg
arpl
cmp
sub
sti
add
aam
rolb
sbbb
pop
cmp
xor
add
xchg
sub
fdiv
mov
shl
cmp
push
xchg
jecxz
cwtl
jae
popa
lods
xchg
ljmp
sbb
mov
add
lods
sbb
out
dec
pop
xchg
push
das
cltd
mov
add
popa
adc
xchg
loopne
fisubs
mov
xor
adc
out
and
sti
shl
pusha
sub
bound
sbb
xchg
cmp
enter
cmp
pop
rcr
data16
pushf
cs
cmpsb
dec
not
fbstp
xor
mov
lock
std
jmp
push
aas
mov
inc
hlt
data16
outsl
daa
insb
sbb
mov
ds
data16
loope
cmp
lcall
dec
xor
aas
insl
cmp
fisttps
cwtl
adc
sub
xor
js
mov
xchg
shl
dec
lahf
sub
jge
inc
cmp
enter
and
outsb
adc
sub
ljmp
call
divl
cmp
sub
push
jg
and
imul
int3
insb
out
lock
insl
pop
shrb
cli
pop
pop
xor
jae
int
cmp
or
scas
xor
lret
xor
fldl
mov
cld
xor
mov
loopne
loopne
cs
pop
mov
add
aas
inc
dec
fildl
push
int
ret
mov
mov
jns
jbe
xchg
cmp
adc
mov
add
in
or
mov
imul
loope
xor
pop
add
lret
outsl
aad
ret
sbb
pop
add
add
mov
cmp
icebp
push
cmp
pop
hlt
pop
nop
pop
popf
dec
into
es
fstpt
sbb
into
addb
pop
enter
cmp
fwait
pop
test
and
fcompl
inc
mov
mov
dec
jb
cwtl
push
jge
push
outsl
inc
inc
testb
or
mov
lahf
int
xor
mov
inc
xor
jg
sub
movsl
xchg
iret
lcall
adc
fdivrs
add
addr16
pop
movsl
add
add
mov
mov
pop
js
push
xor
ja
xchg
cmp
sbb
jb
xchg
pop
cmp
aas
and
data16
jae
daa
gs
xor
and
test
cmpsb
pop
mov
xchg
jnp
stos
test
add
rcll
xchg
jle,pn
and
adc
ljmp
cmp
les
mov
sub
and
cmp
arpl
stos
cbtw
icebp
push
mov
das
stos
inc
mov
jmp
mov
adcl
pop
mov
sbb
cmp
push
push
aad
aad
jb
int
std
sbb
insb
adc
or
push
mov
ss
es
sub
push
hlt
mov
xor
jg
pop
push
jns
outsb
mov
jbe
fadd
mov
pop
adc
xor
fwait
mov
sbb
aam
cld
or
fsubl
jo
cmp
push
cmp
adc
fmull
insl
das
lds
mov
or
data16
mov
push
shrl
movsb
sbb
scas
rcr
inc
mov
mov
fwait
ds
inc
and
and
pop
les
sub
inc
fwait
sub
pop
fisubrs
int
fnstcw
xchg
pop
ja
jge
and
ds
int3
xchg
adc
mov
mov
js
fxch
in
loope
mov
xchg
fsubrl
push
nop
lock
push
push
xor
adc
stos
adc
xor
push
mov
test
sbbl
adc
jno
pop
push
aaa
sbb
add
loope
xor
in
inc
pop
pusha
je
ljmp
fildll
mov
push
stc
test
dec
cmpb
adc
cwtl
nop
push
sbb
hlt
loope
cmp
xor
andl
jmp
adc
dec
sbb
mov
push
jb
sbb
nop
mov
jp
loopne
dec
sub
out
les
fs
aam
mov
ror
inc
and
ror
daa
sub
in
pop
add
aad
and
mov
lahf
fisttps
mov
dec
ffree
inc
inc
xor
sub
es
cwtl
lahf
and
jno
adc
daa
inc
lcall
out
jmp
or
xchg
xchg
jb
xchg
scas
or
sub
push
sarb
shrl
mov
int3
xchg
jecxz
dec
aad
ja
mov
mov
shll
dec
cmc
mov
jl
inc
dec
mov
fnstsw
scas
xlat
jnp
incb
and
xor
adc
cmp
xchg
or
jecxz
test
fidivl
mov
ljmp
lods
xchg
adc
inc
rorb
push
mov
cli
adc
mov
adc
popf
jno
push
dec
sbb
out
jecxz
icebp
sbb
hlt
cltd
insb
pop
aaa
popf
test
dec
xchg
adc
pushf
xor
push
addb
stc
imul
cli
add
js
fcomip
in
push
or
and
xchg
cmpsl
aam
in
mov
xchg
mov
or
push
loope
icebp
adc
daa
roll
rcll
stc
repz
cmpsb
mov
pop
or
or
jae
mov
pushf
stc
mov
push
push
pop
inc
data16
sbb
mov
stos
out
ja
lods
call
and
jl
fnstsw
fs
add
negl
test
test
repz
out
scas
push
outsl
loopne
enter
or
ljmp
xorb
stc
cmp
inc
sti
mov
jl
in
mov
inc
push
cld
dec
jne
xor
mov
stos
push
inc
jmp
xor
in
inc
xchg
pop
pushw
jle
fnstsw
pop
pop
dec
mov
int3
lret
cmp
mov
pop
call
dec
adc
or
iret
subb
test
les
inc
outsl
out
and
scas
dec
fwait
adc
fimuls
pop
lret
stos
dec
cs
dec
xor
shlb
ss
mov
jmp
and
or
fwait
inc
jmp
mov
cmpsl
cwtl
mov
mov
xor
xchg
ja
mov
mov
lret
je
inc
sub
push
push
push
insb
aas
mov
mov
cmp
lret
xorb
iret
mov
sbb
notb
mov
jno
pushf
stc
enter
jle
pop
mov
mov
fisubl
call
fidivl
mov
add
push
mov
mov
add
sub
cli
adc
mov
add
xor
jl
addr16
aad
push
enter
sub
pop
daa
repz
push
add
xchg
arpl
push
outsb
fisttpll
pop
push
xchg
mov
daa
mov
sar
inc
jle
sti
add
test
adc
addr16
cltd
inc
push
push
sti
lahf
sar
add
out
lock
cmp
ldmxcsr
inc
and
ljmp
lods
sbb
js
in
clc
lret
sbb
hlt
xlat
fcoms
lods
dec
mov
mov
test
out
movsb
push
les
jl
icebp
mov
push
aad
inc
adc
xchg
je
xor
pop
repz
and
xchg
lahf
sbb
adc
jp
pushf
xor
or
je
adcb
mov
mov
sahf
cmp
scas
bound
cmp
xchg
adc
sbb
test
dec
int
fmul
dec
or
ljmp
fldln2
pop
cmp
ret
and
je
sbb
sub
sarl
sti
fisubrs
cmpsb
mov
sub
decb
adc
dec
cltd
lret
xchg
test
ror
lea
lret
push
rcrb
jne
lahf
out
outsb
add
jmp
arpl
inc
add
sub
mov
pushf
mov
mov
out
cwtl
in
jb
aaa
iret
cld
dec
cli
mov
lock
xlat
sarl
sbb
mov
mov
sbb
ja
mov
rorl
and
cmpsl
xor
inc
lods
movsl
insl
mov
jecxz
pop
int3
xchg
push
pop
jbe
lcall
int3
push
pop
jg
test
aam
movsl
fcompl
mov
jecxz
xchg
or
sti
jp
xor
lcall
movsb
push
jmp
repz
std
pop
sub
cli
mov
jecxz
loope
mov
test
negb
push
ss
cmpsl
bound
push
mov
jecxz
in
jge
movsl
and
pop
fnsave
rcrb
dec
sbb
adc
adc
adc
xor
daa
int
jle
push
dec
xorb
cmp
add
xchg
lds
fnstcw
insl
adc
in
or
mov
sub
ds
mov
xor
pop
cmp
cmp
ljmp
adc
arpl
shrb
popa
shll
rolb
es
leave
sub
lahf
pop
fisubl
add
fisubl
inc
jmp
test
push
jl
repnz
inc
fcoml
or
inc
mov
jno
mov
push
dec
push
or
or
daa
xchg
adc
cmp
fstp
inc
shll
lahf
test
or
cmpsb
or
iret
adc
push
jne
add
mov
sarb
cmc
inc
mov
dec
jl
test
sbb
push
inc
pop
dec
dec
je
sub
imulb
cmp
shrb
xlat
orb
mov
and
shrb
imul
or
repz
sub
popa
test
xor
push
sub
lcall
rorl
hlt
jb
xchg
push
adc
fcomi
dec
scas
lds
je
sub
popa
fcmovb
shr
inc
nop
ds
inc
jbe
iret
mov
xchg
add
fs
mov
jmp
fmull
in
sbb
das
push
cli
xor
and
xorl
cmpsl
mov
mov
xlat
cmp
push
push
addr16
sbb
pop
sti
scas
or
je
adc
in
inc
nopl
jle
mov
call
sahf
adc
data16
sub
adc
cli
push
out
lods
in
jg
bswap
rcrb
out
ds
clc
mov
jno
icebp
or
cmpb
lea
xchg
or
jp
dec
cmp
mov
xchg
outsb
fwait
sub
adc
daa
adc
addr16
mov
pop
in
ret
dec
jmp
push
adc
out
rolb
aam
mov
or
test
repz
in
dec
andb
in
nop
enter
pushf
mov
fcomps
pop
ficoms
push
mov
jbe
mov
ret
and
cmp
in
sub
mulb
pop
sbb
imul
pusha
ja
or
cs
mov
adc
push
xlat
sub
pushf
jmp
inc
lods
pushf
xor
push
add
mov
je
cmp
mov
jp
mull
arpl
adc
xchg
inc
add
sahf
push
lahf
je
jns
mov
add
sbb
fs
adc
sub
add
fsts
outsl
dec
hlt
aam
jbe
mov
and
inc
stc
sub
pop
arpl
es
inc
int
rorl
bound
icebp
inc
scas
and
push
clc
jle
pop
or
mov
pusha
mov
cli
xor
lock
add
add
mov
sub
pop
sub
subb
movsb
inc
dec
loop
mov
aas
mov
ljmp
insb
mov
pop
mov
pop
popf
sub
xor
jbe
inc
pushf
pop
out
sbb
div
sbb
cmp
cmp
mov
jge
shrb
mov
jae
xchg
lcall
gs
mov
sbb
cmc
lahf
mov
pop
lcall
in
nop
adc
push
mov
mov
cmp
jge
int3
sbb
out
lahf
sarb
leave
insl
lret
inc
and
shll
cwtl
cli
mov
repnz
mov
stc
cmp
popa
inc
les
push
stos
cmp
jge
mov
push
fistps
es
cmpsl
sub
test
cmp
mov
aas
idivl
dec
aam
xchg
push
loopne
inc
mov
jecxz
nop
fcoml
insb
call
dec
movsb
cmp
cltd
mov
mov
das
xchg
scas
icebp
int
test
lock
pop
movsb
fstpl
rcrb
pop
mov
nop
scas
xor
mov
nop
lret
adc
movsl
push
adc
leave
sbb
inc
cmp
xchg
pop
adc
movsb
dec
pop
cmpsb
mov
add
popf
test
fs
pop
cwtl
pop
imul
cmp
jo
clc
mov
cmp
xchg
push
outsb
cwtl
xchg
int3
cwtl
clc
sbb
cld
clc
popf
sarl
xchg
dec
shlb
sbb
cmp
andb
cmpsb
add
lahf
lcall
push
mov
in
imul
jb
stos
push
mov
xchg
lahf
iret
repz
outsl
insb
cmp
shll
data16
jecxz
and
test
jbe
icebp
fwait
add
mov
movntq
std
and
xchg
sahf
xchg
add
xchg
loop
aaa
or
mov
subl
pop
fildl
xchg
jmp
dec
cmp
lret
cmp
mov
divb
mov
mov
dec
dec
test
lcall
cmc
sbb
test
xlat
inc
arpl
sbb
mov
adc
pushf
pop
xchg
cmc
push
push
sbb
push
cmpsb
dec
movsl
into
sbb
das
mov
xchg
dec
lea
mov
fwait
sbb
dec
ffree
imul
stos
dec
hlt
xchg
sti
jne
sti
ja
add
movsl
rcrl
stos
dec
xchg
out
or
adc
sbb
jecxz
outsb
cltd
jb
cwtl
sub
lret
pop
cmc
push
pop
or
lcall
shl
cli
mov
xchg
push
sarb
mov
mov
repnz
xchg
mov
lcall
sahf
fidivs
insl
add
sarl
pop
das
pop
outsl
lods
push
cmp
test
xchg
cli
jo
scas
scas
push
cmp
pop
mov
movsl
jge
jge
sub
call
into
lret
shl
repz
dec
mov
push
mov
insb
int3
pop
repz
sub
nop
jae
roll
mov
nopl
movsl
sub
in
fstl
jmp
enter
push
push
or
or
pushf
pop
lcall
xchg
int
adc
push
xchg
jo
mov
mov
cmp
jecxz
add
dec
imul
js
push
pop
cmp
aaa
cmpsl
out
sbb
mov
fiaddl
out
push
imul
and
mov
dec
mov
sbb
cmp
movb
add
push
mov
add
test
inc
inc
pushl
adc
sub
mov
pop
mov
out
ljmp
pop
adc
sub
cmova
xchg
cmc
cmp
inc
push
imul
jl
mov
and
test
outsl
sbb
movsb
pop
clc
outsl
adc
mov
insb
es
into
add
adc
and
jnp
mov
repz
nop
mov
je
push
mov
mov
xchg
jnp
push
push
and
stos
leave
fs
dec
jecxz
sbb
push
xor
rcrb
push
pop
jle
cmp
xor
mov
and
add
lcall
pop
mov
and
mov
lcall
jle
clc
jb
adc
out
mov
pop
sbb
push
mov
ja
push
jb
adc
lds
xor
cli
mov
sbbl
in
push
cmp
addr16
dec
dec
scas
addr16
and
jb
sub
inc
or
js
insl
mov
sbb
loope
ret
es
rorb
in
add
or
ja
jnp
jns
call
rcl
testl
sbb
outsl
ss
mov
sub
sarb
or
push
sub
arpl
mov
push
icebp
mov
mov
mov
push
xor
mov
mov
xor
imul
sbb
mov
testb
sub
sbb
mov
mov
cmpsb
pusha
and
mov
outsl
or
pop
sahf
movsl
mov
call
lock
jne
adc
in
push
jge
leave
adc
xor
stos
xor
sub
ljmp
and
ret
scas
push
jmp
out
dec
adc
shl
sarb
xchg
jbe
mov
push
mov
sub
or
fs
and
mov
push
or
fisttpll
inc
sti
pop
in
cld
push
adc
xor
cs
mov
cs
out
jg
push
jecxz
mulb
in
addr16
cmp
hlt
lcall
outsl
imul
dec
jecxz
add
gs
mov
add
pop
xor
insl
lods
int3
rolb
das
jb
jns
cli
add
mov
int3
and
mov
cmp
push
pushf
cmc
xchg
lds
pop
sub
lods
cmp
out
push
dec
dec
and
test
fsts
out
mov
sub
mov
insl
push
ja
sbb
std
xlat
aaa
adc
pop
xchg
imul
inc
sub
insl
pop
mov
in
dec
jmp
fiaddl
push
mov
xlat
ljmp
cmp
scas
aas
push
das
int
mov
dec
sbb
jmp
fldcw
lret
jp
fcmovu
stos
pop
and
adc
pop
sbb
add
mov
jle
ror
and
mov
fcmovnb
mov
into
or
test
dec
fsts
clc
shr
out
test
fcompl
push
lret
dec
or
clc
jmp
sahf
test
outsl
push
icebp
gs
out
in
jne
jnp
pop
jge
xchg
test
outsl
mov
dec
aad
in
ljmp
push
subb
mov
cmp
xchg
push
icebp
gs
adc
fisubs
cmpsl
push
lcall
inc
pop
pusha
or
mov
mov
jb
sahf
cmp
xchg
fcmovbe
push
int
test
push
add
fnsave
xchg
enter
rclb
mov
dec
hlt
mov
movsb
ss
push
fistpl
push
scas
cs
push
add
add
xlat
movsb
repz
lds
leavew
xchg
inc
and
in
cmp
popa
roll
int3
cltd
mov
jno
iret
mov
dec
inc
jl
fld
cld
cli
xchg
mov
popa
insb
jb
mov
inc
repz
mov
dec
into
xchg
pop
and
add
jb
jg
sbb
test
sbb
mov
push
pop
idiv
int
jle
xor
jae
jle
std
pop
mov
movsl
fsubl
pop
adc
stos
shll
xchg
test
test
push
push
xlat
jne
loopne
in
push
mov
push
xor
int
fs
push
xchg
rcrl
sub
mov
jno
inc
sbb
xchg
jle
idivl
sbb
jmp
rcrb
mov
movsb
loope
push
incl
fisttpll
pop
nop
mov
mov
in
and
movsl
dec
lret
ja
push
and
jbe
or
jg
cmp
rcrl
xor
and
cmpsb
fwait
jl
rclb
je
and
mov
jl
push
sbb
out
test
divl
jge
and
jae
dec
in
xchg
jnp
xchg
ja
jle
subl
rcrl
aas
repnz
mov
jnp
pop
movsb
push
add
and
data16
loopne
dec
sub
inc
incl
add
pusha
aas
sub
pop
jle
pop
jb
inc
jg
movsb
popa
cltd
mov
cli
push
or
cwtl
mov
rcr
outsl
negb
xor
outsb
rcr
lret
cmp
adc
jno
pushf
out
inc
push
mov
mov
adc
adc
movsl
lock
pop
inc
cmp
sub
lret
fwait
rol
dec
cld
dec
mov
pop
arpl
fdivl
cmp
xchg
and
mov
push
ljmp
nop
sub
xchg
movsb
mov
adc
daa
pop
loop
fidivs
in
gs
ss
test
jmp
shl
dec
push
and
repnz
sbb
mov
lret
mov
xor
sub
lret
pushf
mov
pop
mov
or
insb
pop
xor
jmp
jg
adc
dec
icebp
jmp
mov
std
mov
or
xchg
push
mov
nop
mov
icebp
icebp
addb
xchg
xchg
pop
mov
pop
xor
sbb
dec
push
cmp
dec
lcall
shrl
adc
inc
test
mov
jecxz
inc
imul
mov
lea
sub
mov
rcrb
sbb
mov
or
sub
xchg
jb
mov
inc
cmpsb
ss
das
adc
jne
dec
jae
imul
cwtl
je
rorb
mov
cld
and
rcrl
xor
or
ja
mov
outsl
sti
ds
and
jae
xchg
push
arpl
and
shlb
movsb
push
mov
repz
cmp
cmpsb
sarb
add
sub
stos
xchg
sub
push
test
aam
and
sub
bound
dec
mov
loope
pop
adc
movsl
cmp
and
inc
add
imul
push
mov
jns
cmpsl
jb
lcall
and
insb
lcall
jmp
jno
int
jge
lea
mov
or
add
adc
jp
adcb
mov
mov
fisttpl
rcrb
or
inc
sbbb
mov
inc
cmp
pop
int3
inc
cmp
imul
cmpsb
lods
mov
addr16
dec
adc
lods
ljmp
or
sub
negl
ds
xor
nop
inc
ja
jae
mov
and
outsl
push
lret
lcall
les
in
sub
push
pop
xor
clc
pop
and
jno
ss
hlt
cmc
stc
in
and
pop
cmp
sub
xor
je
pop
xor
pop
sbb
xchg
imul
xchg
mov
lods
xchg
icebp
fildl
and
pop
test
xlat
cmp
test
rcrl
lods
sahf
iret
sbbb
dec
aas
push
leave
sbb
in
outsb
dec
negb
dec
or
mov
popa
lahf
fidivrs
sub
jbe
push
mov
mov
pop
rcll
mov
mov
add
xchg
xchg
neg
inc
dec
fstpl
inc
fcmovnb
xchg
xor
sti
movb
mov
insb
mov
xor
cmp
inc
mov
in
ljmp
xchg
or
sub
mov
jo
loop
jp
out
adc
add
inc
mov
dec
or
pop
in
lcall
cmp
ret
sub
or
jmp
hlt
add
inc
test
adc
push
inc
cmp
outsl
xchg
add
scas
outsb
popf
lock
sub
inc
and
xchg
mov
adcl
shrb
push
mov
data16
rcrb
and
js
xchg
adc
mov
iret
loopne
aam
sub
add
popa
jae
addb
lds
cltd
in
andl
cmp
data16
fisttps
les
lock
test
addl
je
outsl
mov
adc
pop
orb
gs
add
ret
jno
mov
inc
cmp
xor
push
loop
lret
mov
xchg
in
loopne
xor
lds
or
mov
adc
mov
push
pushl
xchg
nop
popaw
mov
mov
std
mull
mov
arpl
notl
sbb
sub
adc
adc
fcoms
add
les
loop
mulb
aas
cmp
sub
dec
xlat
insb
fs
lea
xor
ret
ljmp
pop
jno
mov
sub
rcl
dec
sub
mov
cltd
mov
lods
mov
inc
mov
push
cmp
into
xchg
push
ret
arpl
jp
iret
jo
paddsb
enter
cld
jbe
jg
mov
xor
xor
popa
sub
pushf
jmp
and
mov
bound
in
fadds
mov
add
push
xchg
mov
repz
adc
and
mov
jne
je
adc
or
inc
dec
fisttpll
sub
mov
arpl
push
test
pop
mov
sahf
mov
cmp
iret
adc
les
mov
dec
sub
ds
jnp
and
sub
fsub
jmp
test
dec
jae
lcall
jo
je
pop
lock
mov
enter
sti
and
je
testl
or
scas
cmp
test
or
adc
movsb
mov
inc
cmp
pop
mov
cmp
in
sahf
aas
iret
dec
repnz
cld
sbb
cltd
jg
pushf
data16
xchg
repz
mov
fists
imul
dec
jno
out
fcomp
xor
pop
shrl
push
jle
clc
andl
xchg
pushf
lods
cs
jno
pop
popf
pop
mov
mov
adc
push
jb
jge
ja
push
add
add
fcmovbe
sbb
and
fucom
idivl
mov
dec
ds
fucompp
ret
ljmp
mov
in
jnp
mov
jne
jl
mov
sbbl
and
push
sub
adc
out
popa
jne
std
jle
or
push
int3
sub
add
adc
or
xchg
repnz
cltd
popa
das
out
repnz
mov
cmp
mov
std
addr16
ret
dec
inc
clc
lods
jno
sar
xlat
mov
cmc
push
bts
fdivr
mov
push
rclw
roll
dec
repz
sbb
or
mov
adcb
stos
jl
int
aas
pop
lret
into
mov
jp
jne
pop
lcall
lock
push
ss
inc
jbe
call
add
mov
mov
jge
cmp
in
addr16
arpl
int3
fwait
mov
mov
pop
and
sbb
arpl
jge
outsl
out
imul
ficomps
push
mov
mov
jmp
cmc
jg
fs
push
or
sub
cmp
dec
in
or
mov
repnz
pop
mul
aas
add
fwait
inc
cwtl
shl
push
sbb
jmp
xchg
loop
cli
pop
push
stc
mov
or
movl
data16
lock
repnz
jno
mov
mov
add
jae
mov
xchg
lods
std
out
les
insl
lods
or
movb
mov
mov
sbb
jo
mov
mov
adc
adc
sub
push
test
cmp
pop
dec
xchg
lahf
test
cmp
popf
pop
adcl
inc
js
dec
scas
mov
ljmp
push
movntps
sahf
jge
lea
js
pop
jle
mov
fistpll
fcomi
mov
cmp
pushf
les
lods
rcr
fidivrl
dec
testb
loopne
cwtl
push
mov
pop
repnz
out
xor
jnp
pushf
cmpsl
or
inc
add
in
lret
mov
in
and
ret
xor
nop
lock
nop
push
xchg
ds
inc
sbb
xchg
mov
sbb
mov
xor
and
cltd
add
sub
outsl
loope
negb
js
shl
outsl
sti
mov
xchg
and
in
inc
leave
pusha
in
mov
jbe
in
jnp
cmp
or
pop
sub
sub
out
adc
out
mov
add
aam
stos
scas
jmp
add
clc
mov
pop
cmc
in
testb
xchg
jo
daa
negl
inc
adc
inc
pop
add
lcall
cmpsb
cmp
xchg
in
int3
jbe
cltd
or
mov
or
hlt
sarl
and
cmovg
push
iret
sbb
push
outsb
jl
in
push
insl
push
fisttpl
and
sahf
push
jae
nop
sbb
mov
dec
adc
test
xlat
lods
outsl
or
ret
mov
test
out
pop
mov
lahf
arpl
andl
mov
mov
mov
lock
mov
scas
xor
cmpsb
mov
shrl
stc
shl
mov
mov
sbb
dec
sub
mov
push
pop
mov
scas
scas
sbb
das
mov
jg
insb
jp
xchg
mov
adc
out
lock
fwait
sbb
mov
addr16
ja
leave
push
ja
mov
popf
test
push
jp
xor
fadd
cmp
inc
stos
roll
fs
rcrb
mov
rorl
sub
or
xor
nop
mov
or
xor
and
mov
ds
fisttpll
call
dec
jecxz
lds
shlb
push
pop
adc
sbb
enter
cmp
xor
daa
adc
inc
cld
ds
sbb
scas
cmpsb
int
mov
adc
test
cli
inc
jbe
jg
push
std
in
mov
out
inc
fwait
stos
cmpsb
pop
popf
jo
test
fwait
dec
adc
in
sbb
pop
arpl
jne
add
call
mov
push
ds
js
sarl
inc
and
aad
imul
mov
in
inc
sub
xor
xchg
fs
divl
xchg
and
in
push
fdivrs
outsl
lret
or
mov
sti
add
mov
outsl
pop
cli
sbb
jle
push
jae
pushf
xchg
popa
cmp
into
loop
sbb
rorl
cmp
fisttps
pop
ja
clc
xchg
pop
sub
fsubrp
pop
std
nop
mov
pop
sbb
imul
daa
adc
jbe
cs
les
jle
or
enter
pop
jbe
jbe
clc
jge
sbb
into
faddl
and
push
enter
fs
popf
dec
push
mulb
jne
mov
mov
enter
push
popf
js
data16
xor
and
adc
cltd
inc
cld
adc
cmpsb
pop
adc
mov
or
xchg
outsb
lea
loop
jmp
cmp
lds
add
ret
cmp
push
xchg
iret
nop
dec
cwtl
push
cmp
mov
mov
dec
jae
dec
mov
ss
daa
ja
dec
jge
ss
out
push
mov
pushf
nop
xchg
sbb
out
gs
in
scas
sub
dec
inc
es
call
pusha
push
cld
lock
mov
pop
pop
inc
xchg
shrb
inc
or
test
xlat
push
adc
bound
cmp
dec
sbb
cmp
out
test
aam
mov
sub
int3
push
into
test
enter
and
cmp
adc
in
cld
or
mov
int
mov
subl
and
dec
jo
pop
inc
clc
dec
mov
rcl
test
xor
xchg
pop
and
test
iret
xor
mov
xchg
mov
dec
jecxz
repnz
pop
repz
pop
loopne
mov
dec
loop
jo
fwait
sbb
cmp
pop
lret
out
dec
ljmp
dec
inc
or
lds
pop
addr16
addr16
ljmp
movsl
sub
bound
fiadds
popf
jne
nop
insl
sub
push
cmp
xchg
pop
mov
push
cmp
mov
cmp
pop
push
xchg
call
push
fmull
push
lds
mov
or
das
add
jae
ret
pop
sub
hlt
inc
lock
in
jb
mov
scas
sbb
mov
jge
push
mov
dec
popa
adc
cmp
pop
stos
in
not
lock
xchg
fists
push
insb
jns
shl
aas
mov
in
sbb
mov
fcoml
sub
les
xchg
insb
faddl
aas
js
daa
add
into
loop
rcrb
xchg
std
lock
aam
mov
mov
adc
mov
sub
dec
dec
and
fdivs
cmp
mulb
adc
add
test
and
ss
sbb
gs
pop
aad
aas
mov
not
sbb
sub
push
inc
imul
call
dec
les
cld
mov
mov
jge
pop
and
fisubrs
or
pop
mov
add
shll
aaa
xchg
pop
js
push
fidivrs
xchg
pushl
push
adc
or
cwtl
fbld
rcrl
fwait
pop
sarl
push
sub
ret
adc
aaa
ja
xor
mov
inc
cli
rcrb
sub
xchg
int
call
cmpsb
adcb
xchg
aam
dec
dec
cmpsl
xchg
fstpl
ud2
jae
flds
es
lret
jg
in
sub
data16
push
pushf
rolb
daa
add
jno
xor
cmp
jle
or
mov
movb
sub
cmp
shl
mov
mov
out
test
les
sbb
sbb
jae
fldl
sahf
in
cmovbe
sub
mov
roll
dec
inc
pop
xchg
addr16
inc
pop
movsl
lods
in
sbb
dec
inc
cmpl
addr16
cmpsb
push
cmp
rol
gs
jle
dec
jno
sub
popf
cmp
xor
lock
scas
cld
pop
mov
incl
jns
out
pop
repnz
sub
loopne
sub
inc
out
and
clc
stos
roll
xchg
in
fucomi
sbb
mov
jle
adc
in
push
enter
jno
add
add
mov
xchg
add
jle
in
inc
test
pop
xor
mov
or
shlb
and
lret
or
push
repz
fcmovnbe
push
fs
scas
push
stos
aaa
xor
out
ds
cmp
dec
sbb
dec
bswap
in
mov
scas
mov
jge
movsl
xlat
mov
mov
ret
adc
or
aam
sbb
arpl
sub
mov
and
mov
sub
inc
push
bnd
jno
dec
or
divb
cltd
int
mov
xchg
rcrb
out
dec
shl
and
sub
inc
mov
in
sub
inc
repz
pop
mov
in
inc
mov
push
jne
jmp
roll
xchg
pop
aas
jno
daa
jl
aas
nop
out
sub
mov
xor
sub
aaa
jne
pushf
out
mov
lods
or
test
rcrb
cmpsb
mov
mov
clc
ds
scas
int
or
and
loopne
fucomp
out
mov
dec
or
jb
mov
xchg
cwtl
add
push
test
enter
xchg
mov
out
mov
xor
push
das
xchg
cs
pop
fwait
dec
push
mov
jo
das
dec
es
xchg
movsl
mov
lret
sahf
fs
rcrb
jno
aam
addl
insl
push
dec
cmp
mov
add
sub
enter
pop
test
cltd
mov
pop
and
fnstcw
or
inc
ss
cmp
lods
jmp
mov
adc
imull
or
adc
test
and
xor
out
jnp
inc
xchg
sti
and
sbb
pop
lds
mov
repnz
inc
xor
imul
mov
icebp
aam
scas
adc
insl
and
pop
int
mov
sbb
pop
movb
rol
into
mov
pop
fimull
xor
cmpb
out
jecxz
adc
and
jl
dec
jmp
xlat
dec
mov
sbb
and
mov
shlb
dec
xor
sbb
es
or
jmp
sbb
out
sti
push
add
mov
ds
dec
bound
push
sub
cwtl
and
orb
js
inc
sbbb
pusha
mov
xchg
aad
cmpsl
inc
out
mov
adc
cmc
inc
inc
mov
jge
ret
ja
scas
xorb
pop
pusha
mov
pusha
add
cmp
adc
mov
or
ljmp
rol
clc
popf
or
fs
xchg
lcall
scas
aas
sub
push
mov
cmc
pop
lcall
lods
test
pushf
repz
ljmp
push
pop
int
scas
into
adc
les
sub
jb
ret
dec
and
sbb
cmp
out
adc
mov
cwtl
sbb
xchg
cmp
cmp
sub
or
inc
push
int3
add
mov
mov
hlt
mov
sub
cmpsl
repnz
fwait
orl
imul
fdivrs
loopne
push
aaa
sti
insb
and
xchg
in
faddp
fadd
cmp
mov
aam
lahf
push
pop
shr
pop
out
hlt
sub
leave
bound
xlat
movsl
or
push
and
mov
inc
outsl
sbb
sub
inc
movlps
sar
dec
adc
xchg
repnz
sub
sub
push
mov
mov
jecxz
in
mov
mov
stos
xor
dec
push
jne
xchg
call
test
mov
sbb
push
cld
repnz
mov
pop
or
xor
pop
push
rorl
lea
push
test
jo
mov
fnstcw
hlt
popf
cmp
dec
mov
ljmp
rcll
ret
test
imul
scas
add
stos
aas
push
insl
dec
cmp
sahf
call
xchg
mov
fdivl
jns
sbb
retw
in
sahf
shrl
pop
mov
mov
in
and
scas
scas
xchg
and
cmp
sahf
inc
or
mov
jle
sub
imul
push
adc
xchg
xor
sbb
cltd
push
out
cmp
lea
or
sub
xchg
iret
fstpl
inc
iret
sbb
pop
mov
into
add
sub
xchg
repz
cltd
sbb
fwait
iret
inc
into
shrl
xor
mov
pushw
subb
sub
lea
cld
gs
mov
insb
into
and
aam
rcrl
stos
aas
loope
cmp
cwtl
lea
scas
cmp
imul
inc
sub
or
orb
dec
fbstp
add
iret
pusha
sub
jecxz
dec
mov
andl
repz
adc
ljmp
js
push
dec
bound
mov
inc
unpcklps
jae
sahf
mov
push
pushf
sub
daa
imul
inc
icebp
movsl
sbb
jae
out
xchg
jo
fidivs
in
or
push
std
cmp
adc
push
jg
fidivs
xlat
jbe
addb
sti
jmp
adc
cmp
pop
push
add
adc
inc
incb
jg
mov
imul
out
sbb
or
dec
lods
fmull
sub
pop
inc
stc
mov
cltd
push
clc
push
out
sbb
dec
std
and
pop
sti
push
cmpsb
ljmp
inc
jp
fstps
push
mov
mov
cli
out
mov
fistl
mov
and
aaa
inc
test
test
sub
mov
aam
enter
inc
xchg
lods
std
push
gs
insl
sbb
jno
mov
xor
test
aad
out
ss
xor
mov
mov
and
bound
sbb
mov
xor
repz
daa
lock
adc
xchg
inc
mov
enter
fwait
aam
les
popf
dec
fidivs
cmc
jno
pushf
cltd
pop
sbb
cltd
cmpsb
dec
fwait
cmc
jo
push
jge
add
inc
pop
mov
or
and
insl
pop
imul
inc
popf
repz
lods
les
negb
fstpl
imul
ficoml
cmpsb
pop
sbb
jle
add
loop
les
ret
add
ret
mov
in
iret
add
fiadds
daa
addr16
jns
pop
fistl
and
test
dec
js
or
jb
mov
out
adc
notl
cmp
lcall
pop
mov
mov
xor
cld
mov
push
test
push
pop
lret
or
cld
adc
add
ljmp
mov
test
out
sbb
jmp
andb
pop
mov
ja
lods
shll
fsubrs
push
and
stc
push
out
out
push
shr
add
push
shrl
push
mov
and
stos
inc
sahf
adc
and
inc
xchg
in
and
in
jmp
aaa
stc
jns
pusha
pop
cs
ja
mov
out
jne
adc
xor
fsts
pop
popa
xchg
mov
and
mov
repz
lret
stos
test
dec
and
in
pushf
mov
sub
sbb
jns
popa
cli
nop
sub
fsubp
adc
or
ret
xlat
inc
das
fiaddl
mov
mov
sbb
and
sub
into
dec
addr16
enter
cmp
out
mov
mov
movsb
mov
xor
mov
mov
xchg
mov
shll
shlb
lods
aaa
push
negl
sbb
sti
mov
test
in
scas
out
sar
outsb
dec
jl
fcmovne
cli
arpl
xor
or
in
test
loope
xchg
mov
mov
push
mov
cmp
pop
and
xor
sbb
outsl
mov
ds
shrb
ret
cwtl
push
out
dec
push
sbb
loop
outsb
or
adc
add
pop
mov
add
mov
xchg
mov
add
push
jbe
in
imul
push
adc
push
ljmp
mov
mov
sbb
push
pop
mov
pop
lods
xchg
cwtl
mov
inc
shll
xchg
test
popa
pop
xchg
sbb
fsubrs
fidivl
xchg
or
inc
jne
out
in
xchg
mov
dec
fs
int3
pop
pop
fdivp
inc
push
pop
repz
cmp
ss
and
sbb
cltd
lret
popf
out
movsl
fnstenv
out
daa
pushf
pop
daa
pop
fucom
dec
aas
add
or
or
jnp
pop
mov
jge
xchg
pop
outsb
jne
scas
movsl
nop
mov
cltd
mov
pop
adc
inc
mov
xchg
cmc
push
fnstenv
outsl
mov
punpckhbw
ret
adcl
pop
cli
pop
cmp
xor
add
xor
and
sbb
push
dec
lea
lret
and
je
hlt
inc
jbe
mov
xor
js
rol
mov
xchg
mov
mov
notl
dec
or
xor
movsb
sub
xor
add
shll
add
call
xor
sahf
ret
lods
pushf
jg
jmp
je
jg
jle
test
cmc
mov
fidivl
cmp
xor
xor
in
cmp
push
mov
sbb
call
test
or
insl
jnp
sti
sub
aad
jae
imul
cwtl
subb
les
jo
aam
fwait
lock
cmp
int3
std
movsb
sub
test
ljmp
add
enter
andb
in
iret
pop
cwtl
cld
push
jns
push
pop
xor
call
mov
jo
xor
pusha
imul
sub
movsb
roll
pop
stc
pop
xor
mov
jno
pop
mov
jbe
sub
pop
fisttps
pop
mov
dec
inc
xor
pop
pop
dec
jmp
jbe
stos
daa
xor
push
pop
call
dec
mov
mov
dec
inc
mov
mov
push
and
enter
sub
popa
and
push
cmp
add
mov
rcll
jp
jmp
popl
lret
div
in
and
push
fwait
and
repz
imul
pop
dec
push
test
fs
jnp
mov
sbb
fwait
jae
popf
test
fs
inc
pushf
mov
fyl2xp1
push
movl
xchg
div
decb
push
mov
test
cmp
mov
inc
xchg
aam
push
punpckhwd
adc
jb
xor
in
xchg
sub
pop
and
xchg
xchg
icebp
push
nop
rcll
lods
repz
dec
cli
mov
lea
xor
shlb
repz
add
movb
in
xlat
hlt
mov
pop
loop
dec
mov
stc
cmp
enter
mov
addr16
mov
xor
std
fs
or
cld
sarb
vpunpckldq
dec
push
or
push
into
xorl
inc
imulb
pop
je
js
mov
jo
and
mov
jb
dec
lods
or
push
or
int
push
jae
jl
cmpsb
stos
pop
xor
lds
scas
xchg
inc
subl
xchg
jmp
pusha
sub
jmp
inc
or
es
cld
inc
aam
fisttpll
sub
loope
scas
cmp
outsl
test
cmp
adc
loope
out
cmp
xchg
pop
stos
mov
lcall
pop
int
sub
test
cmp
mov
leave
dec
ret
sbb
dec
mov
xor
roll
cmpl
sub
call
push
pop
lahf
fs
jno
repz
andb
in
push
aam
inc
xor
dec
gs
lods
enter
sub
cmp
add
mull
mov
vpaddusw
jb
dec
lods
sub
mov
or
daa
cmpsb
dec
jnp
cmp
sub
inc
add
les
lods
pop
std
jecxz
dec
cmp
cmp
mov
aad
push
adc
xchg
aam
pop
repnz
jle
inc
mov
mov
push
sbb
loop
adc
add
cltd
inc
popa
das
push
cmp
xor
sbb
test
mov
sarb
mov
int3
out
inc
dec
mov
sub
lock
mov
ja
rorb
jbe
xor
inc
mov
push
stc
insb
xchg
out
sbb
xchg
sarl
aaa
sahf
imul
inc
test
push
inc
inc
ja
adc
test
dec
arpl
mov
call
xchg
das
inc
mov
add
xchg
lret
sub
sub
fistl
insl
inc
dec
adc
test
repz
popf
xor
and
data16
pop
pop
int3
cmp
rol
mov
jns
mov
fistps
fldenv
or
push
push
jb
mov
lds
fsubrp
mov
xchg
call
cmpsl
mov
dec
or
ror
inc
pushf
sbb
xchg
jns
jmp
mov
ljmp
gs
dec
leave
jp
mov
leave
aad
and
mov
inc
inc
jge
nop
sbb
mov
leave
mov
push
xchg
or
or
add
mov
es
bound
cmc
mov
cld
cltd
push
cwtl
mov
fcmovnu
sbb
cmp
push
lret
stos
dec
test
cwtl
in
xchg
pop
lods
jae
cmpsb
dec
or
pop
neg
fmuls
in
lret
dec
lods
dec
js
jns
sbb
inc
mov
ss
rol
mov
sarb
rcll
xor
test
push
repnz
pop
sahf
pop
dec
push
sar
xchg
stos
xchg
adc
loop
push
sub
out
repz
mov
sti
out
pop
pop
jo
lcall
xchg
out
lea
mov
sbb
xlat
cwtl
add
jo
mov
dec
sbb
jne
mov
fidivrl
adc
rcll
icebp
sbb
mov
sbbl
imul
xchg
inc
xchg
iret
andb
repz
pop
xlat
jbe
sbb
push
mov
popf
adc
pushf
xor
lods
add
cld
mov
pop
push
jns
pop
mov
subl
fdivs
loope
fisubrs
dec
adc
push
xchg
sbb
adc
das
out
xor
dec
adc
push
adc
dec
test
mov
lods
in
outsb
stos
movsl
mov
loopne
shll
dec
aam
pushf
xor
testb
and
bound
call
mul
jo
test
mov
iret
xchg
pushf
clc
ja
xor
push
mov
sbb
lods
xchg
add
xchg
dec
push
lret
mov
fcoms
sub
jp
dec
sub
call
xchg
mov
incl
push
push
xchg
insl
jo
mov
shll
push
sbb
lods
mov
inc
sbb
cld
test
in
jge
mov
or
and
mov
pop
mov
movsl
dec
dec
push
add
or
xor
cli
or
js
subl
xchg
xchg
dec
icebp
xor
or
jnp
or
in
add
in
xor
rclb
loop
xor
sbb
and
sti
push
addb
cmc
js
test
sub
repnz
cmpsb
gs
jne
movsl
mov
xchg
sbb
les
ss
and
lret
test
xor
or
inc
pop
push
lock
fwait
add
inc
sbb
cmpsl
pop
mov
push
add
daa
pop
and
add
sub
and
xor
jb
mov
adc
rorb
inc
roll
notb
mov
adc
repnz
jne
sbb
repz
lods
mov
pop
or
and
dec
aad
out
xchg
xor
dec
fsts
outsl
mov
sub
inc
and
movsb
cmpsl
sub
lds
mov
cli
in
push
push
push
pop
js
jmp
addr16
lds
or
xor
jne
ret
add
adc
and
aaa
arpl
cmp
hlt
mov
js
xchg
dec
add
xchg
hlt
jae
scas
add
jns
stos
add
adc
and
lock
push
pop
push
in
jb
and
fiaddl
xor
cmp
jge
xchg
adc
dec
aam
pop
mull
jle
ret
jns
cmp
iret
inc
cmc
jno
add
sbb
jp
out
push
bound
out
push
dec
xchg
popa
ja
jecxz
adc
popa
dec
dec
lods
pop
incl
pop
and
das
sbb
jbe
outsb
cwtl
pop
or
es
ss
ret
scas
fwait
testb
lds
xor
out
jae
sub
fistl
scas
mov
into
cmpsl
sub
loope
inc
fwait
mov
ss
int3
std
cmp
je
xchg
jbe
mov
mov
dec
adc
jge
push
cmp
dec
mov
test
mov
hlt
xor
ljmp
mov
icebp
repnz
jge
inc
pop
push
xchg
xchg
jle
xchg
stos
push
inc
leave
add
and
add
add
xor
sub
push
dec
xorb
test
nop
popl
jmp
aas
jge
dec
pop
jnp
ffree
mov
ficomps
inc
mov
std
in
outsb
aad
mov
mov
cmp
mov
jge
into
inc
fucomip
push
sti
ret
push
push
sbb
push
stos
popf
pop
xchg
in
push
mov
cmp
lea
jb
push
inc
movsl
mov
stc
test
pusha
mov
pop
nop
pop
imul
push
cli
sarl
ret
and
std
pop
daa
or
sub
repnz
dec
xor
imul
fxch
or
lret
test
mov
mov
or
xchg
int3
xchg
dec
loope
negl
mov
jns
sub
sbb
jae
orl
dec
test
mul
sarl
cwtl
inc
test
mov
sbb
aad
or
out
dec
dec
adc
push
in
sbb
inc
test
sarl
pop
lock
inc
adc
testb
int
jne
and
adc
jne
nop
xor
movsb
fnsave
rcll
mov
sub
call
imul
loop
mov
lcall
jns
xor
jmp
negb
adc
adc
lahf
mov
imul
add
sub
sahf
sub
int3
xor
inc
inc
and
fbstp
jle
pushl
mov
adc
xor
jmp
mov
clc
add
std
cs
dec
fiaddl
mov
xor
cmp
mov
xchg
icebp
xchg
xchg
lea
dec
sub
aaa
decb
sbb
sbb
xor
push
mov
ficoms
mov
mov
and
and
aad
ljmp
xor
inc
leave
pop
jmp
insl
cmpsl
xchg
xchg
adc
mov
imul
mov
mov
sbb
test
hlt
and
mov
stc
aas
imul
aad
fidivl
outsb
sahf
sbb
leave
add
movsb
rcrb
pop
in
scas
mov
les
lods
mov
jbe
mov
push
nop
test
inc
in
frstor
mov
outsb
xchg
mov
lret
shlb
ljmp
fdivrs
push
shll
mov
xchg
push
ror
cmp
xor
sbb
lret
cwtl
sub
in
mov
jecxz
ss
add
lahf
les
push
cmp
out
xor
popf
sti
sub
add
xchg
xlat
ss
mov
mov
mov
add
imul
inc
sbb
into
push
lock
xchg
mov
push
aam
push
push
lock
mov
mov
sub
out
iret
jecxz
jle
cli
sub
sub
cs
dec
jmp
sub
std
jns
das
out
mov
mov
adc
push
pop
scas
inc
sub
xchg
xchg
sarb
addr16
xchg
nop
setnp
and
test
bound
push
cmpsb
jne
test
sub
mov
repz
xchg
aas
dec
scas
dec
jmp
cmp
jbe
dec
mov
es
push
rorb
sub
clc
outsb
imul
sbb
cltd
inc
jnp
lret
jo
scas
orl
xor
cmp
lock
push
cli
adc
inc
movsb
mov
sbb
pop
dec
pushf
je
push
pop
add
lock
lock
xor
inc
sarl
push
and
fs
xor
mov
sub
xor
cli
scas
xchg
aas
or
jle
adc
sub
sub
or
cmp
and
pop
pushf
xchg
inc
mov
ss
sbb
icebp
mov
insb
jl
sub
testl
enter
bound
dec
mov
enter
dec
in
pop
stos
mov
xor
xchg
xor
push
adc
cmc
stc
ss
or
stc
mov
in
shrl
jge
inc
sbb
pop
fisttpl
jp
pop
int3
movsl
mov
repnz
pop
xchg
flds
clc
push
ficoms
clc
push
xor
or
and
fcomi
mov
jnp,pt
out
add
pop
xor
lock
sub
lods
test
in
sbb
xchg
test
mov
lcall
xchg
push
fnstcw
loopne
lds
es
adc
push
test
dec
stos
add
mov
cltd
jle
push
xorl
pop
jne
xchg
xchg
dec
aam
cmp
mov
jp
fwait
xor
js
mov
shrb
sbb
and
fisttpl
adc
jp
int
push
lret
cmpl
in
or
mov
xchg
sbb
ja
lahf
mov
and
fisttps
loop
rcr
mov
sbb
pop
sub
sbb
dec
push
das
dec
mov
ljmp
lret
iret
std
fimull
dec
jns
mov
push
call
clc
setns
in
mov
mov
into
sub
pop
inc
mov
cwtl
enter
cmp
mov
adc
fcomp
cwtl
sti
ficompl
clc
jns
jo
cwtl
mov
out
jns
scas
push
pop
add
rorl
in
xchg
jmp
sub
sbb
and
lods
fisubrl
cld
sbb
sti
mov
loopne
xor
dec
pop
cld
lea
or
imul
xor
lea
dec
out
ljmp
adc
xor
jp
jl
pop
or
jmp
js
mov
mov
mov
mov
andl
mov
lret
xor
xor
pop
and
mov
out
sahf
jecxz
push
jl
xlat
les
mov
repz
or
add
inc
cmp
mov
push
cmpsl
mov
cld
shlb
ss
scas
xchg
mov
aad
mov
mov
dec
sub
and
xchg
sub
jb
std
jne
xchg
repnz
ret
or
jecxz
lock
int3
jae
call
jne
subl
jne
mov
or
ds
xor
into
mov
inc
inc
mov
jnp
incl
pop
cmp
jns
fldl
or
movsb
arpl
xlat
dec
add
add
inc
xlat
pop
outsl
ss
shr
rcr
movsl
jb
insl
shlb
mov
jae
dec
mov
fnstsw
into
hlt
push
int3
or
inc
push
adc
or
cmp
fldt
in
test
js
cmp
mov
loope
pop
adc
mov
inc
add
cltd
lds
shr
jle
test
xor
loope
fmull
mov
pop
arpl
or
js
stc
ret
adc
shll
and
or
sahf
xorl
sahf
mov
cmp
jp
push
int
dec
inc
mov
dec
sbb
or
shr
or
mov
jmp
loope
scas
mov
adc
xchg
adc
aas
enter
imul
imul
repz
and
and
sub
sub
icebp
sbb
xor
jnp
and
in
adc
xchg
xor
lcall
push
xor
dec
inc
jno
sbb
sub
loop
ret
jno
add
mov
cmp
aas
add
cwtl
xchg
mov
cmpsb
jmp
xor
sbb
cmp
xchg
add
pusha
xchg
add
std
scas
into
xor
jg
aam
cmpsl
mov
out
stos
and
sbb
repnz
rcll
test
rcr
push
scas
adc
dec
scas
mov
xor
jns
aas
movsl
cmc
mov
adc
out
adc
xor
sbb
and
add
push
movsl
mov
push
cmp
out
push
mov
nop
mov
sbb
sub
add
int
pop
adc
hlt
xorl
pop
mov
cmpsb
xchg
scas
test
cli
push
lret
cld
js
in
or
dec
ret
jbe
or
out
popa
enter
xchg
mov
and
adc
ss
cwtl
mov
inc
ret
mov
sbb
loope
mov
fists
push
out
ficoml
adc
call
xchg
leave
push
mov
mov
jns
outsb
faddl
mov
in
or
xor
push
cltd
sahf
repnz
in
pushl
stc
in
fs
hlt
insb
add
jp
rcrl
mov
je
test
push
lcall
dec
push
lods
jbe
loop
xor
jmp
sub
dec
inc
dec
aam
jbe
sub
or
mov
mov
push
sbb
xor
test
ja
mov
cmc
fs
jns
sbb
shr
test
ret
push
and
mov
xchg
sti
leave
push
add
filds
jle
fs
int3
cltd
mov
xlat
pop
lahf
jne
sbb
repz
iret
and
jae
jnp
fstpt
adc
rolb
xchg
dec
lret
adc
xchg
rclb
sbb
and
lret
xor
mov
sbb
xlat
mov
inc
fisttpll
mul
shll
insb
lock
in
mov
dec
out
fdivrs
loope
mov
push
outsb
sub
out
cmc
cmp
push
or
inc
xchg
mov
mov
fs
cmpsb
jno
gs
and
mov
movsb
push
aam
out
sahf
lods
cmpsl
add
jae
xchg
hlt
shrb
inc
inc
and
stc
les
add
imul
pop
sub
mov
xchg
jecxz
shr
xchg
sbb
inc
in
push
or
sbb
das
mov
icebp
roll
mov
cmp
push
ds
jle
aam
ret
pop
jmp
idivb
adc
push
inc
adc
xchg
inc
or
inc
daa
mov
cmp
inc
add
push
or
mov
push
adc
inc
jmp
jae
mov
jb
test
mov
mov
push
and
and
ficomps
pop
and
inc
jb
xor
jbe
test
lret
adc
inc
or
cmp
ror
pop
mov
xchg
inc
dec
pop
into
hlt
aaa
mov
nop
cli
imul
jge
addr16
mov
dec
inc
adc
es
cmc
int
pop
pop
adc
popf
mov
aam
jle
outsb
xor
sbb
sbb
xor
jnp
mov
cmpsb
out
pop
dec
push
adcl
idivb
lods
aam
or
in
fsubrs
sbb
sub
sub
and
andps
mov
adc
loop
pop
enter
jle
dec
sbb
jle
cmc
notl
pop
hlt
hlt
jb
dec
cmp
popf
pop
aaa
add
and
mov
test
rolb
lods
cmp
dec
push
ds
mov
rorl
cwtl
arpl
movsb
stc
xor
or
ret
xchg
in
and
aaa
jecxz
fsubrl
cmp
mov
insb
and
in
popf
push
jnp
fstl
dec
push
rclb
dec
arpl
cmc
je
pop
mov
add
jae
push
pushf
andl
pop
push
adc
and
dec
xchg
js
sbb
gs
xor
in
inc
pop
std
jo
ret
and
in
lret
addr16
sti
mov
aas
aad
cld
ficoms
push
cmp
cli
mov
adc
out
insb
in
mov
lock
fdivl
cmpsb
mov
das
add
inc
pop
iret
loope
inc
or
pop
rcrb
sti
sub
fldenv
mov
lea
pop
repz
data16
sar
scas
push
ljmp
mov
mov
sub
add
loope
cltd
je
fs
lcall
cmpsl
ljmp
add
xchg
jae
ffree
adc
jmp
sahf
clc
pop
imul
pop
fcmove
push
pop
nop
test
mov
add
inc
addb
cmp
call
out
decl
fstpt
sahf
lret
and
sub
ljmp
cmp
lods
lcall
scas
in
push
cmp
das
icebp
xor
lcall
testb
adc
aaa
push
inc
popf
stc
dec
scas
addr16
dec
jmp
cmpsl
push
inc
out
adc
ret
xchg
xchg
int
cmp
in
insl
xchg
pop
repnz
mov
xchg
inc
fwait
and
rcrb
ret
sbb
lahf
clc
cld
cs
outsb
sub
cli
mov
add
jae
jmp
dec
push
fldt
mov
lahf
pushl
scas
je
and
cs
outsl
fistps
cmp
and
adc
add
sub
mov
addr16
fmul
ret
js
in
jae
mov
jmp
push
mov
fsubs
cmp
bound
mov
into
jo
fisttpll
xchg
in
jmp
adc
add
cmp
mov
dec
aad
gs
rclb
lods
in
mov
test
xchg
push
xor
jns
mov
int3
push
adc
orl
and
jmp
xor
in
adc
mov
das
fisttpl
adc
mov
adcl
dec
gs
data16
push
jl
sbb
adcb
imul
lahf
fwait
mov
inc
and
push
pop
mov
lock
mov
movaps
inc
mov
jecxz
inc
push
push
pushf
rcll
out
push
mov
ror
pusha
shll
jle
mov
jge
ljmp
mov
xor
outsb
fbstp
sar
cwtl
cmc
mov
xor
mov
stos
gs
mov
pop
mov
sub
add
adc
dec
sub
test
pop
cmpsb
inc
call
arpl
push
sub
jmp
dec
inc
inc
in
mov
int
out
jp
aas
test
or
sub
inc
pushf
lds
imul
call
popa
push
pop
xchg
and
or
adc
inc
cmp
loope
repnz
movsb
and
imul
stos
loope
adc
pop
sbb
test
in
push
cmpsl
aaa
sbb
or
rcrl
sti
cmp
adc
xchg
les
cmpsl
mov
icebp
lds
lds
jge
lret
and
and
pushf
scas
mov
jl
fildll
xchg
mov
addr16
test
ja
jge
inc
stos
dec
stc
stc
enter
rcl
jo
lahf
xor
std
shrl
pop
fwait
mov
push
sbb
ss
inc
lahf
add
mov
cmp
bound
dec
cmpsb
push
rorb
pusha
jp
mov
push
cmp
test
push
fisttpl
test
fcmovnbe
daa
in
stos
mov
cmp
jg
fptan
xchg
mov
pop
mov
and
jmp
fcmove
push
iret
jge
sbb
mov
push
test
mov
repnz
sbb
outsl
sbb
repz
fisttpll
cmpsl
out
sbb
add
xchg
push
mov
lods
sbb
inc
push
arpl
inc
cltd
insb
andb
xor
and
adc
and
cmpsl
repz
jle
clc
push
pop
push
sbb
lcall
mov
pop
and
xor
into
mov
loopne
sti
add
cmp
mov
xchg
mov
frstor
lret
fsubrl
or
in
lods
sti
cmpsl
gs
inc
leave
adc
adc
aas
dec
mov
push
jno
sbb
hlt
pop
mov
hlt
outsl
test
sbb
sub
mov
mov
xchg
xor
lods
push
push
and
rcll
or
dec
lahf
cli
out
cli
xor
mov
sbb
outsb
adc
orb
and
mov
xor
bnd
sbb
cmp
cltd
out
mov
and
pop
ret
add
sub
cmpsl
fcompl
pusha
in
inc
cld
xchg
sub
out
dec
mov
adc
xchg
imul
ds
push
or
xchg
sbb
jb
fistl
pop
push
xchg
lahf
mov
inc
inc
or
sbb
and
push
inc
inc
push
sarb
fbstp
into
sbb
sbb
fdivr
pop
int
lret
push
push
adc
loope
inc
push
push
inc
and
cmp
mov
ljmp
xchg
stc
fistps
scas
repz
jg
sub
jecxz
jecxz
jmp
sbb
xor
push
popf
hlt
and
shr
jnp
xor
sbb
xchg
dec
or
push
sub
in
dec
test
sub
loopne
sub
adc
sbbl
xchg
add
pop
pop
jp
test
mov
mov
cmp
mov
jp
pop
xchg
mov
and
inc
jae
cmp
loop
dec
sbbb
push
into
add
movsl
or
adcl
stos
hlt
or
sbb
add
pop
mov
jbe
mov
jno
dec
jecxz
push
stos
xchg
movsb
add
or
xchg
push
mov
xor
dec
add
pop
test
int3
es
gs
lock
pop
rorb
out
out
jp
movsl
test
jg
dec
adcl
pop
in
xchg
stos
mov
sbb
rolb
mov
fdivrl
clc
push
mov
test
lock
clc
jl
stos
xchg
outsb
int
jecxz
xchg
roll
mov
mov
ret
add
xchg
adc
outsb
pop
xlat
cmp
mov
lret
push
call
aaa
cld
jl
lea
ror
stc
cmpsb
insb
das
push
dec
mov
pop
push
and
mov
mov
cmp
arpl
popa
jne
mov
aad
iret
sbbl
dec
pop
loop
sub
or
mov
pushf
pop
popa
icebp
loop
or
in
or
pop
ds
jns
aas
add
dec
stos
and
in
jmp
outsl
pop
jl
xchg
push
rol
mov
ret
push
inc
hlt
in
inc
mov
in
addb
xor
imul
mov
imul
push
movb
cmp
pop
aaa
cwtl
mov
dec
add
lds
insb
push
inc
imul
inc
fmull
sbb
sub
mov
jmp
loopne
cmp
popa
xchg
fstl
outsb
movsl
add
pop
les
push
mov
cwtl
inc
es
push
and
fisttpl
sbb
call
pop
std
and
jg
xchg
pop
add
push
fiadds
dec
cli
stc
sub
inc
arpl
xchg
out
lret
test
sub
xchg
scas
xchg
mov
out
xor
test
clc
or
xchg
pop
int
mov
dec
ffreep
dec
jno
movsl
repz
xchg
and
dec
js
xchg
lea
cmpsl
loop
insl
ret
arpl
cmp
cs
sbb
pushf
and
ljmp
ds
adc
pop
fisubrs
pop
inc
dec
dec
dec
dec
icebp
ret
fdivl
mov
and
into
je
addr16
sub
icebp
cmp
add
mov
clc
and
xchg
mov
mov
mov
push
mov
popa
loope
mov
xchg
inc
sbb
sarl
call
xor
fidivrl
sbb
push
xchg
imul
jl
sbb
pop
cmc
xor
mov
repnz
repz
test
test
dec
or
add
push
outsl
or
loopne
test
out
lret
scas
clc
or
stos
push
shll
rcr
add
push
jp
pop
mov
shlb
stos
test
data16
push
in
je
xchg
sub
hlt
and
jle
pushf
xchg
or
enter
pop
dec
lcall
or
sbb
std
add
mov
div
mov
imul
lods
or
test
dec
lcall
addb
es
cmp
pop
pop
das
and
adc
out
clc
sarl
rcrl
add
scas
inc
xlat
mov
iret
xchg
negb
dec
pop
sbb
mov
test
dec
mov
lcall
cld
add
inc
roll
adcb
cld
sbbb
mov
mov
pop
test
je
frndint
mov
adcl
sub
aam
or
sub
push
cmp
enter
xchg
dec
loope
xor
fdivrl
aam
adc
inc
xchg
popf
je
xchg
sub
lcall
movsb
mov
or
push
rorl
mov
mov
roll
mov
into
xchg
loope
inc
jp
mov
cltd
cs
push
imul
inc
fisttpll
icebp
nop
mov
xlat
shlb
je
pop
shlb
aas
xchg
adc
dec
jecxz
push
cltd
or
int
pop
outsl
std
jl
fs
fstl
sbb
or
sub
inc
mov
mov
leave
inc
inc
mov
xchg
xchg
xchg
cli
add
dec
fiadds
loopne
in
fmull
mov
int3
pop
jbe
stos
adc
insl
xchg
js
xchg
jae
sbb
jne
movsb
dec
add
xchg
inc
ljmp
sub
xchg
lret
jecxz
sarb
push
out
adc
dec
sarb
cmp
lahf
dec
inc
std
sbb
cltd
sbb
adc
lret
out
sub
and
mov
and
js
mov
fisubrl
pop
arpl
movsb
mov
out
inc
data16
lret
in
sbb
das
xor
test
test
mov
dec
mov
call
sub
add
jl
lods
xchg
add
push
dec
mov
enter
in
add
jmp
mov
mov
dec
adc
mov
push
cli
enter
dec
sub
xlat
cmp
xor
lcall
mov
cmp
mov
adc
imul
inc
mov
incl
and
xchg
mov
cmp
jmp
popa
push
cmp
sahf
push
cmp
das
jne
adc
lock
and
cltd
mov
mov
pop
mov
fcomip
pop
add
je
out
scas
aam
xchg
je
xchg
sub
pusha
lcall
in
je
dec
stos
fdivs
jle
mov
fdiv
sub
mov
push
inc
cmpl
test
icebp
dec
fwait
xchg
jne
mov
test
inc
sbb
xchg
pushf
lds
sub
mov
ja
sub
in
xchg
cmpsl
out
jge
cmp
pop
or
mov
lret
jno
scas
test
rcr
mov
inc
mov
push
shll
popf
rcr
inc
add
sbb
in
mov
jge
xchg
adc
sbb
imul
push
cmovp
lock
mov
push
ret
push
jecxz
movsb
out
pop
mov
pop
jbe
pop
push
xor
lcall
fdivrl
push
rcll
sub
mov
loopne
shrb
mov
ret
movb
pop
leave
loope
popf
push
inc
xchg
sub
adc
mov
add
rcll
push
mov
in
out
and
push
arpl
hlt
sti
stos
mov
xchg
jno
jns
cltd
and
imul
mov
es
fldenv
into
fwait
inc
xchg
and
dec
xor
mov
inc
inc
mov
jecxz
xlat
rolb
mov
int3
orl
push
or
add
xchg
inc
jne
dec
iret
cmp
mov
sbb
out
mov
out
cmpsb
enter
mov
mov
jbe
loope
cmc
or
cli
mov
pop
xchg
sub
and
cs
movsb
fidivrs
push
dec
push
and
cmp
mov
xlat
cmpsb
std
jg
mov
orl
fs
fsubl
mov
add
rcll
ss
mov
mov
popf
push
xchg
or
cmp
jmp
clc
call
scas
in
add
andb
mov
bnd
xor
mov
mov
mov
shll
fsts
push
adc
daa
adc
jg
lret
push
xchg
test
test
dec
sub
add
into
and
jp
nop
out
jmp
mov
icebp
cmp
cmc
xor
enter
xor
mov
lahf
push
test
arpl
xchg
into
rorl
lds
and
adc
imul
loope
sarb
sbb
lods
adc
sbb
mov
jle
push
ja
out
aad
pop
lahf
int3
inc
data16
enter
dec
lods
jne
adc
xchg
jge
sti
cmpsl
cmc
adc
jne
fistpll
bound
cmp
subb
or
rol
sbb
pop
mov
mov
call
or
jae
popf
xorl
ljmp
rorl
and
dec
fisubl
xchg
nopl
cli
mov
ffree
pop
mov
or
xor
movsb
mov
inc
and
add
movsb
out
fldl
mov
lods
sahf
mov
cmc
in
ret
lods
mov
pop
xchg
jno
cmpsl
mov
and
cwtl
stc
jp
xchg
inc
loopne
xchg
outsl
xchg
cmp
inc
imul
daa
ljmp
adc
lcall
adc
xor
or
add
mov
daa
mov
sbb
ljmp
imul
aam
and
sbb
mov
xchg
or
pushf
mov
and
mov
pop
add
outsl
mov
in
inc
or
data16
or
jp
cwtl
or
clc
xor
andl
ror
scas
mov
mov
dec
fsubl
push
xor
call
lock
nop
fisttpll
dec
dec
into
mov
fisttpl
out
ja
aaa
fidivl
xchg
ljmp
push
sbb
loopne
dec
inc
push
mov
sbb
sbb
xor
cmp
es
std
sub
jae
mov
test
or
adc
fst
pop
movaps
nop
push
adc
cmp
lods
jp
add
pushf
mov
aaa
sbbb
sbb
pop
inc
cmp
mov
add
in
mov
loopne
divl
sbb
dec
xchg
jge
sub
aam
inc
cmp
insl
sti
mov
out
not
add
sbb
fisubrl
pop
test
js
and
fnstsw
push
cmc
jge
fidivl
pop
fisubl
mov
xchg
cltd
inc
adc
mov
shlb
push
sub
cmp
adc
lods
lahf
std
out
jo
jae
ds
ret
aas
iret
sbb
pop
dec
inc
fwait
out
and
mov
scas
les
nop
mov
scas
hlt
mov
out
movsb
xorb
es
subb
cmp
xor
jl
sub
subl
xor
adc
jno
pop
sub
push
add
xor
dec
inc
xor
or
sub
pop
aad
popf
push
push
outsb
jae
insb
cmp
inc
adc
jp
add
cmpsb
xor
lcall
lret
pushf
and
jecxz
add
adc
pop
mov
and
stos
adc
cmpsb
imul
adc
push
addr16
rcrl
xchg
mov
call
inc
mov
mov
xor
or
or
jbe
sbb
dec
pop
xor
lcall
loopne
mov
xchg
addr16
and
pusha
push
fwait
xchg
cmpsb
das
xchg
mov
jno
popl
sbb
fcompl
ror
pop
dec
mov
xor
scas
lcall
jp
and
and
sub
loope
pop
sbb
into
es
bound
push
jp
dec
imul
outsl
pop
test
mov
ror
outsl
push
or
scas
or
mov
test
mov
mov
fimuls
jnp
jl
push
cwtl
aaa
jmp
xchg
add
dec
cmp
push
lret
lock
cmpsl
jbe
int
enter
test
add
and
inc
push
mov
push
push
mov
jno
or
add
sarl
xchg
mov
lss
lods
inc
insl
imul
sub
stc
adc
inc
mov
mov
pop
aas
jecxz
xlat
inc
mov
es
std
pop
push
insl
mov
orl
out
sbb
cmp
shlb
xor
out
mov
xor
add
push
pop
loop
mov
sarl
mov
sbb
mov
in
lea
cs
cltd
push
push
fcoms
stc
adc
and
jmp
add
mov
add
mov
shlb
cwtl
mov
dec
mov
push
xor
mov
or
mov
mov
subl
add
rcr
lcall
inc
cmp
sar
mov
shlb
adc
mov
ljmp
lds
imul
dec
jne
mov
push
or
mov
popa
inc
pop
xor
jge
pop
mov
mov
idivb
icebp
inc
push
xchg
dec
jle
xlat
nop
mov
sbb
dec
jmp
jg
int3
mov
rcrb
dec
stos
xchg
lods
or
and
add
cmp
lcall
fimuls
pop
dec
rcl
lods
sub
dec
ds
dec
or
inc
xor
adc
or
mov
xchg
es
add
fsts
ret
mov
push
lds
pusha
or
xor
imul
jmp
jle
pop
xchg
into
or
icebp
int
out
fimull
jns
vmovlpd
insb
lds
mov
mov
imul
adc
enter
dec
mov
in
jns
pop
and
bound
push
push
jp
cmp
pop
int3
insb
pushl
sub
loop
mov
flds
sub
test
popa
inc
or
pop
push
pop
cmpsl
adc
pop
mov
push
pop
ss
xchg
inc
popf
mov
or
push
inc
and
mov
push
pushf
sbb
scas
sahf
xchg
mov
call
xor
and
mov
adc
inc
add
sub
and
or
adc
cmpsl
sub
imul
repnz
push
in
imul
mov
mov
mov
sbb
into
adc
adc
adc
fistl
xchg
jmp
dec
push
test
into
daa
addr16
dec
lret
mov
xchg
cmp
cmp
or
int
jne
pop
lea
cmpsb
scas
jo
nop
orb
int
gs
pop
inc
stos
inc
int3
movsb
xchg
lock
add
les
mov
jnp
xor
jns
fwait
push
movsb
and
out
fwait
sbb
add
cltd
dec
add
mov
push
cmp
gs
shrl
clc
sub
clc
adc
das
mov
mov
pop
fcom
int
jae
mov
xor
sub
adc
das
pop
hlt
movsl
xor
xchg
sbb
sub
sub
sahf
je
stos
mov
sub
or
xchg
add
sbb
adc
jnp
push
sub
andb
push
leave
fsubr
inc
or
in
rcrb
jle
mov
jno
std
inc
mov
fucomi
xchg
fwait
jne
arpl
sbb
addl
enter
inc
icebp
sub
pop
imul
mov
xchg
bound
xor
addb
pusha
fsubs
push
mov
push
aad
xchg
fsubl
mov
in
push
mov
and
sub
and
mov
mov
dec
inc
stos
cmp
and
xchg
push
in
cld
lahf
cmp
and
mov
int3
fsts
ret
or
adc
jae
cli
lahf
and
out
xchg
mov
xor
cmp
add
push
out
xchg
ret
dec
fadd
mov
add
rorb
scas
testl
pop
lret
cmpsl
push
jp
sbb
xlat
sbb
jo
xor
dec
bnd
cmpsb
rcl
and
cli
orb
in
lods
adc
dec
cli
mov
push
ret
pop
and
sbb
and
sbb
mov
negb
fsubrs
pop
mov
jge
insb
shr
notb
xchg
sub
or
in
outsb
push
lahf
cmpsl
jmp
mov
sbb
jno
push
arpl
dec
mov
int
xchg
imul
adc
sub
les
movsb
leave
cmp
in
xchg
dec
xor
mov
mov
add
andl
pushf
jno
add
clc
mov
xor
adc
aas
lds
sub
std
or
test
mov
adc
fadds
push
out
jg
push
lret
push
jmp
jns
repz
mov
das
cltd
iret
call
and
cmp
lods
sbbb
gs
jne
adc
push
cmp
aad
push
ja
dec
adc
out
test
imul
ja
push
aad
movsl
das
push
adc
pop
jae
mov
sub
cmpsl
mov
xchg
lret
jl
push
lret
xchg
lahf
arpl
popl
rorb
jb
rcrb
and
push
mov
xor
pop
lret
in
ljmp
test
mov
pop
and
jb
stc
das
out
mov
inc
lcall
loop
gs
nop
andb
cld
and
sbb
dec
mov
daa
push
in
jne
jmp
jle
jne
jbe
in
in
and
stc
shrb
mov
mov
mov
cmc
xor
rorl
scas
dec
lcall
out
lea
dec
scas
ja
cwtl
shrl
sbbl
out
add
stos
cltd
push
mov
ret
stos
mov
in
icebp
mov
push
push
lfs
fcmovu
and
rcl
and
in
push
fildll
ficoml
ja
sahf
mov
jbe
jle
dec
xor
gs
stc
mov
out
loope
sub
test
popa
ret
pushf
pop
cli
jl
sbb
int
in
inc
or
push
add
rol
xor
jne
and
out
push
sahf
outsb
mov
jns
lcall
lods
lret
cwtl
arpl
ret
push
pop
cli
std
push
das
aas
mov
cmp
outsb
mov
repz
scas
cmp
jae
out
xchg
adc
out
or
xor
test
cmpsb
mov
ss
jb
shrd
sbb
ja
xorb
mov
fadds
cmp
sbb
sub
jnp
das
xchg
out
sbb
scas
sub
xchg
sbb
scas
rcrb
popf
mov
mov
jge
in
lea
mov
adc
shll
jb
jne
inc
js
out
xchg
in
mov
xor
imul
jge
inc
int3
out
ret
push
clc
mov
inc
mov
xchg
xchg
jbe
add
or
or
mov
shlb
add
mov
inc
stos
inc
xor
or
xor
push
rcrb
ljmp
inc
push
ss
push
pushf
mov
fnstsw
es
lret
sahf
out
mov
sub
jmp
xor
bound
inc
mov
pop
xor
mov
fs
jg
xchg
jb
push
fdivl
jne
jg
mov
arpl
sbb
sub
adc
and
ja
mov
fdivrs
mov
xchg
adc
cmp
rcrl
sbb
xor
jno
rorb
gs
nop
and
lods
and
repnz
imul
imul
divl
aas
clc
xchg
dec
cmp
cmp
push
adc
sahf
lods
mov
addr16
shr
stos
shll
pop
mov
xchg
test
cmp
hlt
enter
sub
leave
xor
scas
nop
inc
and
enter
inc
add
inc
xor
pop
sbb
pop
cmp
pusha
cltd
or
jg
adc
or
hlt
and
pop
ret
std
inc
enter
lock
addl
add
std
pusha
jmp
push
addb
dec
mov
popf
push
push
mov
cmpsl
dec
add
jecxz
inc
push
xchg
pop
mov
xchg
nop
add
xchg
mov
add
pop
mov
sbb
fs
push
dec
fmuls
jne
je
dec
ret
loope
mov
insl
roll
test
jp
lcall
fsubrs
clc
jb
sahf
and
sbb
and
mov
jnp
out
fsubrl
test
cmp
xchg
pop
or
cwtl
test
sbb
vminps
push
add
insb
pmaddwd
pop
dec
push
jno
pop
leave
ljmp
fildll
add
fcomps
inc
test
mov
jecxz
mov
jp
mov
int
pop
pusha
jo
movsb
dec
pop
adc
data16
mov
repz
dec
fcoml
jno
cmp
dec
fldt
dec
hlt
mov
iret
imul
adc
push
jno
pop
fstps
mov
imul
cmp
loopne
inc
sub
neg
nop
adc
test
add
mov
gs
pop
std
xor
push
fnstsw
movsb
xchg
clc
jb
data16
xor
mov
stos
xchg
clc
cmp
sub
js
imul
xor
and
sti
rcrl
mov
push
insb
mov
add
fld
jns
mov
or
xlat
addr16
in
mov
sub
repz
add
xchg
xor
jl
mov
jecxz
dec
les
fsubrs
in
adc
mov
icebp
pop
fnstsw
repnz
or
lods
stos
cmc
loop
enter
push
fstpt
rclb
nop
xchg
pop
or
dec
scas
jnp
test
lahf
std
mov
lock
or
test
sub
cmpsb
ja
jbe
scas
jmp
or
mov
xchg
sbb
movsl
dec
sbb
pop
inc
xchg
test
repz
leave
ljmp
xchg
jno
out
mov
cld
jns
loope
mov
mov
jle
dec
sbb
mov
leave
cmp
insb
xchg
adcl
add
hlt
adc
sub
imul
jnp
add
stc
cli
jns
push
jge
mov
sti
sbb
dec
push
popf
inc
loop
add
jae
enter
lahf
sbb
dec
or
and
rcrb
push
sub
push
pusha
mov
popa
jne
push
pushf
push
or
scas
adc
mov
jecxz
rolb
mov
aas
int3
into
mov
dec
jmp
out
cmp
adc
mov
mov
sarb
loope
into
stos
add
sahf
gs
loop
xor
cltd
out
jg
js
cmc
in
out
out
sub
and
xchg
xchg
inc
adc
mov
fwait
mov
in
xchg
mov
gs
mov
ret
sub
ficoms
aaa
xor
add
sahf
inc
gs
dec
nop
cs
sti
mov
lods
es
insb
xchg
mov
sbb
mov
ret
push
pop
push
pop
push
and
pop
ljmp
adc
mov
notl
push
loop
push
ja
ret
pop
or
or
pop
aad
inc
je,pn
push
jmp
jg
pop
xor
mov
js,pn
pop
fwait
xlat
int3
push
and
cmp
bound
lcall
push
jle
dec
loope
add
fwait
addb
push
aas
mov
sub
pop
mov
int3
and
cmpsl
daa
call
je
movsl
pop
lcall
ficoms
lret
jmp
pcmpeqd
jecxz
lret
or
popa
inc
fwait
loope
cmpsl
lods
mov
inc
sbb
jp
out
rorl
int3
or
push
cmpsl
icebp
mov
int
sbb
js
push
mov
cwtl
add
and
test
push
push
scas
lods
lahf
fcompl
cmp
and
ds
mov
fldl
jnp
adc
addr16
mov
loope
inc
loope
mov
subb
enter
arpl
jnp
inc
mov
mov
pop
cs
jo
xor
add
xor
jae
fldl2e
jnp
pushf
jle
notl
scas
mov
out
lret
xchg
or
arpl
in
jns
pusha
xchg
lea
jl
dec
push
xchg
mov
imul
xor
mov
cmp
mov
fnstenv
in
jl
aaa
pop
add
sub
leave
inc
pop
push
add
scas
cmp
xor
mov
pop
inc
ficompl
cs
stc
popf
xlat
ss
stos
push
clc
pop
cmp
imul
adc
mov
ds
jnp
nop
minps
jp
inc
xchg
test
stos
inc
fistpl
pusha
jl
cmp
pop
ficompl
dec
scas
adc
shll
repz
pop
insl
xor
jg
pop
or
and
rcrl
movsl
dec
push
pusha
push
enter
jp
lahf
pop
in
dec
into
fwait
push
inc
sti
in
lcall
xor
xor
frstor
adc
dec
testb
mov
pop
scas
push
arpl
dec
pop
jg
insl
arpl
xor
xchg
scas
loop
mov
out
mul
fistpl
mov
dec
call
sbb
pop
outsb
les
shll
cmp
pop
mov
xlat
xchg
adcb
or
outsb
pop
daa
fildll
xbegin
lahf
push
mov
bound
xchg
mov
pop
jnp
setb
jo
add
and
aam
or
pop
adc
std
xchg
inc
sub
into
sbb
fisttpll
add
sub
add
lds
mov
mov
repnz
cmpsb
add
mov
xor
jns
mov
fdivs
pop
push
cmc
cmpsb
les
imul
arpl
call
mov
outsl
les
rorb
aaa
adc
or
xor
and
cld
fisttpl
popa
sub
int
mov
mov
inc
loopne
and
arpl
cmp
in
pop
in
inc
mov
and
add
fidivrs
je
or
mov
or
push
inc
pop
aas
mov
mov
pop
push
in
lods
dec
xchg
inc
repnz
iret
jmp
xchg
push
fstl
cmp
mov
rorb
mov
jns
jmp
pop
sub
add
sbb
lock
clc
aam
pop
pop
xor
pop
test
hlt
fildll
adc
add
data16
sti
loope
sti
insb
shlb
pop
fisubrs
xor
mov
repnz
and
inc
into
mov
cmp
loopne
inc
jns
sbb
in
jo
movsl
dec
popl
in
jp
pop
mov
mov
repnz
imul
mov
in
test
jbe
lods
dec
add
mov
scas
dec
mov
mov
imul
lret
xchg
pop
mov
daa
jne
dec
push
dec
stos
sbb
ret
xorl
lods
popa
sbb
je
or
stos
add
clc
pusha
adc
es
stos
push
popl
adc
sti
push
les
popf
pop
outsl
int3
cmp
jmp
fcomps
mov
movsl
jecxz
insl
push
xchg
sbb
outsb
fs
fisttps
xchg
cmc
lahf
xchg
mov
jb
dec
out
mov
push
adc
divl
std
pop
xor
inc
sbb
fistl
dec
inc
or
pop
stos
and
sub
nopl
adc
ja
stos
sahf
cmpsl
test
addr16
lret
push
sub
xchg
lds
mov
sub
mov
movsb
ret
sbb
mul
into
ja
and
mov
imul
xchg
lahf
adc
sbbb
mov
add
or
dec
mov
adc
fidivrl
insb
ljmp
push
mov
cmc
into
outsb
vsqrtps
fildl
test
jmp
fidivs
cltd
jb
push
push
push
movsb
cmp
add
cld
jne
push
push
xor
or
filds
orb
in
jbe
cs
jb
test
lcall
mov
cwtl
enter
les
mov
mov
aaa
repz
xchg
dec
mov
lock
movsl
repnz
addr16
outsb
push
in
and
dec
lock
dec
inc
lcall
mov
xchg
adc
mov
mov
mov
sar
and
xor
adc
cmp
insl
fcomps
and
or
inc
mov
test
jle
push
lods
insb
bnd
testl
ja
cmp
cmp
mov
pop
outsb
cltd
add
mov
mov
xlat
test
jl
or
push
pop
inc
and
and
push
pmaxsw
sub
push
adc
arpl
mov
ja
or
mov
out
add
test
or
repnz
outsb
jns
lods
imul
mov
cmp
cmc
sub
hlt
push
and
mov
scas
repz
aas
mov
scas
loopne
adcl
cs
add
push
mov
pushf
push
xchg
jo
mov
mov
das
push
sub
aam
ss
bound
leave
and
push
int3
cmp
mov
cmp
lods
xchg
and
js
xchg
stc
push
xor
insb
pop
mov
xor
adc
add
add
movsl
mov
jmp
into
jns
push
add
add
sbb
sbb
adc
push
cmc
push
in
push
scas
xor
addr16
out
sub
cli
inc
pop
push
addr16
mov
mov
dec
stc
fmulp
loope
cmp
nop
mov
out
mov
inc
popa
push
aas
dec
pop
shlb
dec
rcll
cmp
leave
xor
pop
pop
pop
pop
push
and
mov
mov
and
cmp
movlps
sub
jp
loope
sub
pop
adc
shl
cltd
mov
imul
mov
pusha
xchg
push
cmc
std
stos
out
outsl
pusha
cs
mov
or
int
out
dec
leave
fimuls
push
cmp
sbb
adc
arpl
xchg
popf
shll
cmp
push
dec
push
mov
lds
idivl
sbb
xchg
push
jg
leave
and
xchg
cmp
xchg
idivb
movsb
adc
push
call
jno
and
cmp
loop
aad
sub
jbe,pn
loope
pop
mov
push
mov
adc
js
cli
std
and
rorl
rclb
push
pop
enter
mov
and
sbb
cmp
pop
gs
dec
aas
jmp
jmp
sub
dec
fwait
adc
enter
pop
mov
jg
or
nop
test
fisubrl
and
dec
lret
adc
dec
adcl
and
dec
leave
xor
das
sub
clc
repnz
push
popf
and
inc
push
das
adc
xor
cmp
and
aaa
ss
scas
in
cwtl
test
adc
stos
scas
jno
and
fstpt
inc
bound
sbb
in
mov
push
mov
and
sub
and
inc
jb
movsb
pusha
fsubrl
repz
jecxz
and
cmp
pop
push
lods
popl
push
daa
sub
data16
push
test
xchg
mov
std
imul
in
movsb
out
dec
mov
cld
xor
pop
sub
call
sti
mov
cmp
xchg
sub
mov
in
sub
aad
jnp
mov
lahf
cltd
ljmp
mov
iret
fmuls
imul
lods
loope
stos
mov
add
cmp
movsl
xor
jg
pop
push
mov
sub
and
imul
ja
push
out
shlb
popa
test
or
jb
nop
dec
pop
add
mov
sbbl
mov
repz
mov
addr16
push
pop
xchg
ret
mov
jnp
inc
adc
js
dec
jb
fidivrs
sbb
sbb
ljmp
sub
dec
out
mov
daa
rcll
push
pop
imul
inc
mov
jne
pushf
dec
dec
aaa
mov
inc
icebp
icebp
jo
fidivrs
or
leave
ja
jmp
push
call
xchg
and
sbb
xchg
inc
repz
rcrl
adc
out
pop
ljmp
sub
jg
pushf
data16
ret
test
push
inc
sbb
in
push
pop
mov
xlat
fwait
push
jbe,pt
jbe
in
out
mov
mov
mov
cs
cld
icebp
sub
scas
and
and
pop
fwait
or
sbb
xchg
lods
sti
enter
outsb
sahf
xor
out
ret
sbb
in
pop
jo
mov
mov
jmp
lock
insb
xlat
gs
in
lock
addr16
xchg
inc
insb
xchg
mov
sbb
pop
xor
ret
std
iret
call
xchg
jb
int3
fsubr
stc
fimull
fldcw
add
inc
and
mov
jns
cmp
imul
cmpsl
and
push
mov
dec
mov
int3
popa
pop
in
fmulp
add
pop
sub
xor
xchg
into
mov
lahf
out
cmp
fadds
cmp
sbb
pop
mov
inc
negl
loopne
push
in
scas
ds
lea
cmp
mov
dec
push
int
or
shl
loop
aaa
jp
cmp
cmp
mov
xchg
xchg
mov
jl
push
cmp
pop
add
es
out
jbe
or
das
lret
inc
jbe
cmp
xchg
out
jl
mov
pop
sbb
loopne
jns
sub
ja
push
daa
sbb
add
jnp
or
fstpt
jnp
out
pop
das
push
aad
add
mov
fcomps
jbe
pop
stos
ds
and
mov
shl
sbb
pop
inc
lret
or
sub
shl
lret
cmp
sbb
test
dec
leave
aad
cmp
jnp
push
add
ds
inc
inc
sar
andl
jmp
xchg
mov
stos
hlt
jle
xor
fcompl
mov
fs
cmpsl
sub
dec
loopne
popf
pushf
out
popf
and
inc
cwtl
cmp
jp
inc
fcomps
sub
add
in
and
add
xchg
inc
mov
fldl
xor
mov
dec
pop
sahf
hlt
sbb
pop
loop
imul
mov
fsubrs
out
mov
and
jnp
and
mov
push
loope
in
pop
shlb
pop
or
fcompl
pop
cmp
andl
mov
loope
dec
xchg
sub
adc
dec
call
add
sahf
cld
mov
cmp
dec
into
outsb
nop
inc
iret
cmp
push
or
xor
fstl
mov
sub
mov
outsb
repnz
add
xlat
repnz
xor
cwtl
lret
pushf
sub
cmp
shll
mov
sbb
jbe
nop
adc
fisttpll
and
addr16
roll
inc
lcall
dec
nop
icebp
jmp
adc
mov
sti
xor
lret
mov
popa
js
mov
push
nop
inc
fistpl
ret
push
dec
push
adc
fwait
push
xchg
inc
xchg
int
aam
cmpsl
push
fmuls
jbe
pop
xchg
outsl
jmp
inc
inc
ds
cmp
cwtl
bound
sub
and
ror
sbb
mulb
or
test
cmp
inc
push
fisttpll
pop
test
mov
sti
sbb
or
je
jp
adc
cmpsb
jae
das
out
push
push
rcrb
inc
adc
mov
mov
mov
jp
das
aam
mov
mov
leave
jecxz
movsl
cmpsl
test
mov
inc
cs
roll
test
test
sub
fistpl
xchg
cwtl
mov
jns
add
mov
lcall
or
je
jle
mov
xchg
mov
ret
or
sahf
jae
or
jp
cs
sbb
sub
add
push
lcall
aam
add
pop
sbb
add
inc
ficoms
in
inc
loope
mov
sub
bound
aaa
dec
imul
push
jl
jmp
idivl
fsubl
mov
idiv
mov
cwtl
in
jno
mov
subl
sbb
dec
cmp
int
mov
pop
push
xor
decl
outsb
pusha
and
bswap
adc
and
and
out
or
add
add
mov
ss
bound
sbb
sbb
mov
add
mov
cmp
jo
or
mul
cmpsl
js
xor
scas
mov
push
mov
mov
xor
jl
sbb
jno
inc
xchg
sub
mov
lock
push
cmpsl
mov
lock
dec
add
or
or
pop
mov
pop
push
sub
cwtl
mov
inc
cltd
andl
sub
ret
mov
cmp
jecxz
adc
mov
mov
js
dec
sbb
mov
lods
adc
jmp
sbb
js
or
adc
std
pop
mov
fsubrp
lds
jbe
loop
outsb
xor
add
sub
push
lock
and
inc
jmp
adc
out
xlat
xchg
inc
sbb
xor
ds
and
call
mov
std
xchg
out
cmp
lret
mov
fcmovnb
lds
push
shrl
pop
repnz
in
inc
dec
loopne
add
test
jp
mov
loop
mov
frstor
je
insb
jmp
ja
jns
out
jmp
enter
shlb
aad
ja
pop
xchg
stos
inc
in
pop
cs
lock
orl
outsl
icebp
or
xlat
lahf
push
sahf
sub
test
mov
and
loopne
mov
cli
pop
fadd
popf
dec
fdivs
sub
out
mov
out
insb
cmpsb
pop
mov
loop
push
and
or
sub
xor
scas
sbb
dec
or
sub
adc
jle
mov
int3
scas
cmp
sbb
iret
xlat
pop
jae
fistl
dec
mov
mov
mov
cmpsl
sbb
pop
adcl
pop
sti
cwtl
test
shll
adc
cmpsl
in
call
xchg
nop
test
inc
xorl
stos
out
xchg
jo
add
or
in
inc
mov
xor
clc
adc
jmp
pop
lds
and
xchg
adc
mov
or
xchg
aam
cmpsl
les
push
je
repnz
mov
fs
es
call
xchg
adc
mov
jnp
mov
scas
lahf
adc
push
dec
push
loopne
mov
inc
pop
adc
jb
leave
pop
out
mov
add
xchg
xor
popf
mov
or
inc
imul
jp
ss
push
sub
cld
xor
jle
lds
push
loope
sub
fnsave
or
addr16
in
and
clc
adc
pop
and
pop
cwtl
loope
sub
das
pop
inc
mov
mov
lahf
fwait
js
out
push
pop
jno
fsubl
sub
cs
add
popf
loop
mov
xor
andb
pop
inc
test
out
pop
dec
jge
xchg
inc
sbb
dec
test
scas
outsl
cmp
ret
test
js
rorb
mov
mov
lcall
daa
jg
xor
xchg
push
cmp
clc
scas
testb
add
xchg
test
out
aaa
dec
hlt
add
xor
or
pop
fisubl
xchg
les
jns
mov
mov
and
stc
mov
icebp
stc
jo
loop
mov
into
sarb
ljmp
mov
mov
push
movsl
enter
pop
or
cmpsl
inc
lret
rcrl
jno
and
aad
push
fildll
js
xchg
fisubs
lahf
call
fildll
xorl
sti
push
cs
mov
cmp
or
cli
dec
loopne
jae
dec
push
loope
inc
pop
xorl
in
lret
ret
imull
jb
push
cmc
push
int
dec
iret
pop
adc
inc
in
add
ss
add
out
xor
mov
rcll
xor
in
cltd
pushf
pushf
mov
pop
push
pushf
rolb
push
lock
mov
gs
je
or
adc
pop
lcall
lcall
sub
in
rorl
insl
pop
jbe
push
js
or
rol
hlt
movsl
stc
loope
in
cwtl
xchg
cs
rol
in
push
sbb
iret
push
in
bound
mov
adc
clc
fcmovnbe
loope
out
fisubs
aas
dec
addr16
fwait
shlb
and
mov
lahf
sbb
add
mov
add
sub
mov
mov
cs
or
movsb
jnp
dec
sub
sub
insl
test
xchg
lret
mov
shl
add
popa
adc
adc
cmpsb
push
pop
loop
inc
xchg
xor
ror
push
imul
out
pop
sbb
ror
es
rclb
mov
sub
aas
mov
jae
sarl
cwtl
in
sub
test
shll
pop
cs
div
test
movsb
and
mov
sbbb
mov
cmp
jmp
popa
jecxz
push
mov
mov
and
mov
rsqrtps
insl
pop
xlat
sbb
dec
or
push
arpl
jne
lea
lret
jl
add
pop
jmp
pop
js
xchg
push
int
dec
frstor
cmc
mov
mov
pop
lods
add
xchg
bound
cmp
dec
inc
stos
dec
jmp
mov
push
mov
repnz
pop
cmp
stc
or
push
int
rorl
jecxz
test
or
xchg
mov
sti
adc
int3
out
out
xor
hlt
jge
lret
xchg
out
out
ret
mov
xor
and
pushf
popf
jl
icebp
sbb
xlat
xchg
ja
push
jl
pop
test
mov
loope
push
pusha
push
sbb
fstpt
or
inc
xchg
sbb
jns
sbb
xorb
leave
inc
imul
sbb
daa
test
sub
std
inc
adc
mov
dec
scas
leave
in
int3
jmp
in
loopne
mov
mov
add
adc
jle
pop
cmpl
iret
lock
pop
or
lahf
cmpb
aaa
jge
sbb
addr16
mov
bound
push
mov
loope
and
repz
xchg
cmc
push
pop
pop
xchg
ret
ljmp
pop
sbb
xchg
into
cld
loopne
das
ja
xchg
ficoms
xchg
pop
pop
outsb
dec
pusha
push
push
jmp
cmp
mov
adc
lahf
add
fsubs
push
xor
scas
add
or
add
push
call
mov
aaa
cmp
cwtl
shll
fidivs
enter
bound
or
fsubp
and
aam
cmp
test
das
lods
xlat
jmp
mov
inc
int
mov
pop
sub
inc
sbb
imul
and
lock
pop
push
cmovno
and
pop
or
xchg
test
and
and
dec
cmc
scas
imul
cwtl
jecxz
or
xchg
cmp
ja
inc
sbb
add
jmp
mov
push
call
das
fstpt
out
cmc
xchg
scas
or
push
mov
test
sub
in
inc
dec
mov
and
or
add
cltd
jmp
mov
movsb
ja
sub
add
inc
aas
push
int
inc
cmpsb
enter
xchg
xor
fwait
mov
cmp
push
popa
repnz
loop
mov
cli
ud2
lods
lods
jno
jl
jl
iret
cmc
xchg
rcrb
gs
test
cmp
movsb
loope
push
jmp
cs
dec
jae
sbb
adc
jae
jno
scas
adc
out
pop
pop
sub
orb
in
subl
js
xchg
sahf
mov
jns
inc
lea
or
adc
xchg
sbb
adc
mov
dec
jp
call
sbb
jge
mov
mov
outsb
push
xchg
sub
pop
and
sub
mov
shlb
std
fwait
adc
imul
xchg
bound
stc
and
mov
pop
add
inc
jb
int
insb
ljmp
push
pushf
adc
xor
and
enter
loop
flds
mov
frstor
jp
and
outsl
arpl
xchg
xorl
lods
inc
sti
out
mov
jg
js
cmp
mov
push
push
loopne
mov
in
cltd
dec
popa
nop
mov
inc
mov
sbb
int3
or
pop
fs
test
fldl
mov
push
xchg
cmp
mov
scas
jge
push
stos
rclb
xor
gs
dec
sub
xchg
add
mov
dec
cmp
mov
ds
and
dec
mov
mov
xor
shrl
cwtl
mov
xlat
jg
jge
lds
add
push
jns
cmp
pop
cld
mov
xchg
sub
dec
ret
mov
lahf
mov
xor
aaa
jne
xlat
dec
sbb
adc
dec
lcall
ja
sahf
jp
cmp
popa
jbe
stc
sub
push
mov
mov
pop
push
mov
test
xor
out
aad
jns
popa
out
pop
mov
add
push
test
xchg
imul
lock
icebp
roll
sbbb
dec
lods
and
add
fdivs
imul
push
jle
xchg
gs
dec
push
movsb
or
pop
imul
pusha
add
andb
test
dec
inc
sbb
sub
mov
mov
fcmovnb
xor
icebp
adc
adc
in
cwtl
adc
add
fxch
in
jl
pop
rorl
mov
lock
xor
incl
jb
dec
adc
cmp
mov
mov
mov
lea
adcl
rolb
inc
adc
lahf
xchg
add
int3
inc
pop
aam
cmpsb
icebp
mov
sub
adc
jo
mov
jae
ret
andl
imull
outsl
leave
pop
in
cmp
push
xchg
pop
add
jge
pushf
push
shrb
test
mov
jl
cmp
paddusb
mov
add
imul
gs
scas
js
sahf
adc
push
adc
mov
pop
inc
pop
xor
jo
dec
arpl
sbb
inc
mov
mov
scas
mov
inc
imul
outsb
pop
mov
sarl
cmp
xor
test
jnp
mov
gs
adc
sbbl
dec
lret
jp
and
das
gs
sub
fdiv
xor
es
dec
rclb
call
lods
out
mov
jb
lret
fidivrl
into
nop
inc
dec
push
sub
sub
mov
jg
ret
xchg
mov
inc
mov
call
cmpsb
hlt
lods
lods
shrb
aas
dec
fistl
xchg
adcl
push
es
fsubrl
or
int3
dec
loope
movsb
push
dec
dec
jle
pop
adc
call
jle
mov
mov
cwtl
xchg
lret
sub
imul
movsl
out
adc
mov
push
out
xchg
loop
data16
je
xchg
scas
fistl
jg
adc
shrb
loopne
in
ja
and
and
out
ss
enter
nop
mov
xchg
jae
cmpsl
aad
out
and
leave
add
mov
ret
cmp
or
ficoms
push
jp
jmp
out
dec
dec
fst
inc
xchg
fwait
adc
cmp
repz
ret
xor
dec
jp
push
add
cltd
and
mul
ss
sbb
shll
jno
iret
mov
push
arpl
or
sbb
nop
imul
jne
fdivrl
dec
out
xor
enter
movsb
mov
xor
ret
mov
and
mov
jbe
out
dec
aaa
xor
mov
aas
mov
pop
loope
ret
enter
xor
sbbb
mov
dec
mov
push
mov
push
mov
and
jmp
push
loope
out
lret
aas
or
stos
arpl
or
jnp
mov
xchg
popl
rclb
inc
adc
xchg
push
mov
fldcw
test
fs
or
mov
loopne
arpl
fisubs
mov
pop
mov
jns
mov
sub
adc
loop
mov
jne
cli
cmpb
stos
sti
ja
std
sbb
sub
test
movsb
mov
mov
jg
or
sti
out
nop
and
xchg
push
test
lahf
lret
xorb
adc
dec
adc
pop
pusha
xchg
in
mov
mov
push
ficompl
rcl
or
mov
stc
xchg
clc
push
cld
xchg
pop
sbb
cmp
test
jne
adc
bound
mov
push
cmp
cmc
xor
push
sub
jno
cmp
push
test
es
or
in
ss
inc
mov
pushf
adc
pop
cmp
adc
out
daa
outsb
and
sbb
push
pop
rorb
xchg
int3
cltd
outsl
icebp
jo
ja
push
cmpsl
or
rcr
add
into
shrb
sbb
push
test
cwtl
pop
nop
mov
popf
arpl
lds
and
lret
push
cmp
xchg
mov
data16
mov
aas
outsl
sbb
and
shlb
test
or
sub
xchg
mov
inc
mov
xchg
movsb
mov
mov
jbe
out
jmp
sub
push
add
inc
imulb
scas
xor
push
lret
cmp
xor
pushf
jnp
pop
ret
mov
or
push
xchg
data16
js
cwtd
movsb
push
ss
loope
popa
sbb
aam
xchg
cmpsl
enter
call
add
cmp
xchg
in
and
scas
pop
int
pop
inc
jne
out
jecxz
push
pop
shr
out
mov
bound
dec
adc
jo
xchg
push
push
pop
call
into
dec
mov
sti
addr16
mov
sub
out
decb
lock
push
mov
loopne
out
xchg
adc
sbb
lock
movsb
mov
cmp
dec
lods
mov
cwtl
pop
test
mov
sbb
and
and
pop
cmc
push
imul
cmp
and
xchg
push
pop
xor
pop
or
stos
push
loopne
out
push
cmp
or
sbb
subl
mov
mov
mov
xchg
cmpsl
xchg
cmc
inc
push
outsb
and
push
fidivrs
add
into
mov
dec
in
sub
loopne
mov
dec
pop
sbb
in
rcll
roll
movsb
stc
loopne
jmp
and
int
xchg
fs
fdivrs
fwait
xchg
ficomps
movsb
cmc
adc
dec
cmp
mov
outsb
pop
cs
cmpsl
xor
insl
sub
inc
sbb
fisubl
stos
jmp
aam
and
dec
inc
pop
popf
mov
xchg
stos
inc
popf
jnp
loope
push
mov
ljmp
shll
lods
outsb
cmp
push
lcall
hlt
mov
push
jle
mov
xor
cli
push
repnz
sbb
cmp
jg
xor
mov
push
insl
test
insl
out
and
add
dec
xchg
scas
jno
out
ret
jmp
push
xor
adc
mov
nop
add
pop
pop
xor
sbb
aad
mov
jb
mov
or
lret
ja
cmpsb
insl
and
sbb
xchg
sub
arpl
push
jg
adcl
xchg
bound
je
lahf
jp
into
dec
aad
cmc
xchg
fsub
movb
stos
jle
shrb
lahf
movsb
jnp
stos
stc
lock
or
mov
insl
loop
pop
and
fwait
jl
sti
imul
movsl
pop
xchg
sub
adc
pop
mov
push
and
shl
push
pop
inc
cwtl
loope
mov
data16
mov
mov
jae
adc
mov
xchg
xor
jge
call
jae
cmp
push
out
in
lods
sub
mov
lcall
add
cmp
gs
mov
cmpsl
mov
adc
cmp
es
jae
cwtl
repz
cmpsb
shll
jl
pop
dec
inc
enter
call
pop
mov
or
out
lcall
aad
enter
add
mov
or
mov
mov
jmp
jge
cltd
movsl
mov
mov
sbb
inc
adc
popf
pop
in
push
dec
jl
lock
mov
pop
hlt
into
inc
sub
xor
jb
inc
pop
mov
xchg
test
inc
test
shll
test
sub
fistps
aad
or
mov
add
je
sub
mov
aam
les
rclb
mov
in
aam
or
ret
or
lds
ficompl
popa
jnp
lret
jmp
add
cli
push
add
cmp
addb
mov
daa
push
stos
cmp
int
push
cs
inc
in
dec
xlat
imul
sub
sarl
sti
jnp
scas
je
add
les
jns
ja
fdivp
xchg
and
cmp
xchg
sti
ficomps
inc
jb
repnz
dec
divl
xchg
push
idivl
push
movsb
jns
arpl
addr16
gs
arpl
sbb
xchg
dec
js
xor
jg
mov
outsl
mov
xchg
push
sbbb
pushf
out
cmpsl
je
insl
xor
cmc
ljmp
in
je
aad
sbb
rcll
insl
and
fucom
dec
stos
insb
mov
cmp
js
jp
mov
sbb
or
outsb
jno
jp
mov
and
inc
cmp
mov
inc
popl
pop
xor
sub
fildl
xlat
fisubs
pop
mov
xor
or
call
mov
push
push
push
xlat
pop
push
push
jmp
jo,pn
xor
out
dec
sub
push
sahf
mov
push
mul
sbb
add
sub
ljmp
fisttps
adc
clc
push
push
xchg
das
mov
sub
in
inc
ja
adc
add
pop
fptan
xchg
pushf
xchg
ljmp
xor
enter
add
inc
xchg
pushf
fisttps
push
sub
bndldx
mov
iret
cmp
ret
sub
icebp
cltd
in
popf
repnz
call
roll
clc
mov
movsb
cmpsb
push
add
xor
stc
mov
incb
jge
mov
scas
mov
sub
inc
cmp
std
enter
inc
jl
jg
cmp
add
jnp
jg
xor
jo
ljmp
sub
add
out
imul
call
mov
js
xchg
cli
or
jo
scas
inc
cmp
inc
fadds
outsb
and
pop
repnz
in
jno
mov
ret
out
loop
mov
es
into
sbb
dec
das
divl
lea
jae
dec
xor
les
lods
sbbb
cmp
and
movsl
negb
mov
jg
in
dec
lock
mov
mov
jns
or
jmp
pop
mov
or
les
out
cwtl
mov
movsl
add
movsb
xlat
lods
cmpsl
loope
rcrb
sbb
js
daa
sarl
into
cmpsl
popf
lock
mov
into
add
sub
roll
pop
repnz
test
ror
pop
adc
lds
or
mov
xor
xchg
cmp
cmpl
push
sub
jo
push
jmp
sub
es
jle
arpl
testl
adc
inc
or
and
addr16
push
xchg
repz
ja
pushf
and
adcl
je
and
inc
pop
popa
out
sahf
jg
cli
mov
jne
mov
xchg
sub
test
ret
add
push
push
sbb
cs
int
cmp
mov
out
ljmp
push
add
rcrb
xchg
lret
xor
sahf
or
enter
xchg
insl
in
add
shr
push
mov
inc
addr16
xorl
jmp
xlat
cmpb
jae
sbb
fucom
xor
into
sub
add
leave
pop
ds
sbb
cli
or
jmp
test
pop
cli
fdivrl
cli
mov
xchg
in
popf
inc
stc
or
fadds
sub
xchg
jle
sbb
dec
bound
fwait
mov
enter
or
ja
cs
popf
hlt
mov
dec
test
sbb
fsqrt
pop
xchg
movsl
push
iret
pmaddwd
jl
cwtl
adc
add
pop
mov
in
out
cmpsb
ret
sub
xchg
pop
dec
dec
js
iret
stos
movsl
adc
push
dec
pop
cmp
xchg
add
mov
pop
sbb
xchg
dec
inc
xchg
shll
pop
add
sbb
in
lds
jns
mov
add
jnp
stos
daa
out
bound
mov
mov
scas
test
mov
cmp
push
inc
adc
dec
sub
pusha
adc
adc
inc
sbb
mull
test
pop
xlat
mov
insl
mov
out
daa
or
add
sub
dec
inc
and
adc
push
nop
sbb
lea
test
lea
aam
dec
mov
sar
xchg
push
mov
cltd
and
and
ret
fiadds
scas
aam
add
int3
add
dec
mov
mov
adc
rorb
cmp
imul
sbb
dec
or
addr16
pop
jb
test
sub
xor
nop
mov
cli
fmull
stc
and
andb
test
les
lock
pop
dec
fwait
adc
push
cmp
xor
sub
xchg
or
mov
xchg
gs
pushf
lods
mov
add
ret
cmp
inc
mov
mov
push
mov
inc
fdivl
sahf
ret
or
roll
je
int3
mov
and
jl
sbb
xchg
ds
jb
mov
daa
pop
dec
sar
add
adc
cmc
jp
enter
pop
imul
outsb
push
or
jns
cmpb
test
cmp
test
in
push
loopne
xor
push
xchg
aad
aaa
arpl
test
push
lahf
incl
or
dec
and
xchg
fcmovu
push
adc
xchg
gs
pop
icebp
push
push
sbb
push
jno
push
mov
jne
decl
rclb
ss
hlt
xor
jb
ds
push
dec
pushl
sub
xchg
shlb
jl
cmp
repnz
lods
ret
sbb
dec
cld
lret
jg
sti
dec
inc
insl
xchg
xchg
popf
les
call
push
xor
call
inc
pushf
clc
inc
pop
test
loope
ret
les
and
mov
ficomps
gs
push
sub
lds
add
dec
pop
pop
in
addr16
or
test
mov
leave
mov
leave
dec
hlt
xor
mov
insl
jbe
dec
sub
adc
movsl
jb
cmpsb
cmp
pop
shll
sbb
mov
push
or
jae
les
lret
push
cmpb
or
mov
popf
jmp
inc
sbb
jnp
mov
popf
adc
ja
stc
loop
fsubrp
cmp
and
jns
stc
dec
mov
hlt
jbe
mov
sub
dec
andl
cmc
mov
sub
and
mov
js
cmc
lret
xchg
inc
mov
pop
es
pop
hlt
in
leave
xor
mov
fwait
push
jl
jo
cli
mov
pusha
push
outsl
ljmp
push
or
jns
sbb
lcall
xor
push
out
clc
lods
mov
fwait
js
or
xor
lcall
mov
inc
mov
fists
add
pop
hlt
dec
push
ss
sbb
pop
aas
test
arpl
and
cmc
ss
sbb
repz
xchg
jne
lret
movsb
adc
aas
stos
mov
xlat
pop
cmp
dec
adc
cld
outsb
frstor
xchg
into
jg
mov
outsb
rcll
pop
out
icebp
push
and
daa
xor
push
sbb
clc
mov
add
mov
add
mov
dec
lock
cmp
out
mov
mov
xor
test
xchg
inc
int
cmp
pop
aaa
andl
in
test
adc
ret
adc
dec
lea
js
popf
movsl
es
movsl
enter
or
mov
jmp
sub
mov
and
inc
iret
enter
pop
dec
push
mov
xchg
mov
cmc
cld
dec
push
adc
mov
inc
push
mov
shld
gs
aaa
jmp
and
mov
mov
call
sbb
cmpsl
negl
scas
jg
inc
cmp
es
test
cmpsl
lds
and
adc
inc
sub
pop
jmp
mov
rcrb
xchg
inc
pop
fwait
sub
mov
iret
pop
icebp
sub
cmp
mov
out
xchg
jns
test
inc
cmp
enter
push
scas
mov
mov
in
pop
nop
sub
cmp
lret
out
dec
or
addr16
repz
jmp
add
rol
mov
stos
lods
mov
sub
mov
mov
subb
xchg
and
mov
push
addl
dec
fimull
xchg
mov
out
in
and
scas
jl
mov
scas
mov
stc
clc
leave
xchg
in
jecxz
jns
mov
icebp
cmpsl
cmpsb
mov
hlt
lods
decl
enter
out
loope
inc
adc
loop
cli
pusha
aas
ret
lcall
js
ja
sahf
cltd
shrl
add
fcomp
sbbb
fwait
sub
jae
sbb
mov
mov
push
and
cmpsl
sub
or
mov
pop
daa
xor
in
mov
mov
xchg
adc
mov
jecxz
je
pushf
mov
movsl
add
into
insl
addr16
out
mov
pop
adc
mov
inc
jbe
sbb
nop
jne
pop
mov
mov
inc
insl
ljmp
xor
mov
or
lahf
dec
jmp
push
orl
and
adc
cs
push
pop
pop
outsl
ret
xchg
clc
xor
sarb
int
loope
or
mov
addr16
testb
insl
and
inc
inc
movsl
inc
in
mov
push
inc
cmpsl
push
orb
cwtl
shlb
andl
inc
mov
sar
pop
cmp
outsl
std
decb
xor
xchg
pop
lea
jne
pop
lcall
cmp
pop
jnp
mov
je
jns
sbb
arpl
inc
xlat
mov
mov
or
pop
dec
mov
aas
push
popa
out
lods
repnz
in
addr16
sarl
int
xchg
xor
cwtl
pop
loope
stc
mov
and
mov
mov
push
es
rcrb
xchg
fsubrs
addr16
into
mov
outsb
sub
dec
inc
mov
scas
pop
ljmp
and
sbb
pop
scas
inc
cmp
inc
sub
and
test
and
mov
das
jmp
pop
std
or
movsb
xor
and
jno
hlt
and
sbb
xchg
scas
and
jge
push
cmp
ficoms
fdivrl
mov
arpl
mov
and
cmc
dec
mov
jno
ljmp
addr16
divl
sti
data16
repz
ficoms
xor
leave
cmpsl
into
mov
out
out
loope
adc
cmpsl
outsb
dec
or
and
mov
shll
cwtl
mov
xchg
add
js
dec
push
aad
push
insl
jno
wrmsr
mov
sub
sub
add
push
sub
mov
outsb
push
daa
mov
sbb
leave
cld
scas
lcall
push
mov
gs
mov
ja
addb
mov
jns
dec
jg
jecxz
fsubrs
sbb
pop
fdivl
pop
push
fwait
repz
inc
push
shlb
outsl
cltd
xchg
mov
cmc
int
pop
pop
push
nop
or
pushf
rorl
inc
add
stc
addb
fldl
jns
and
les
fchs
push
imul
cmc
lea
or
int3
stc
cmp
aam
test
and
outsb
push
pop
mov
mov
out
xchg
pushf
test
ds
and
add
ret
sbb
mov
inc
shlb
imul
adc
mov
mov
stc
popa
stos
pop
lahf
add
adc
lea
movsl
loop
adc
flds
lock
sbb
xchg
nop
into
and
mov
daa
popf
pushf
or
stos
bswap
sar
fcmovnu
mov
fs
xor
and
inc
mov
inc
and
xchg
mov
pop
or
and
and
mov
and
mov
mov
aaa
addb
popa
and
add
fisubl
inc
or
shrl
lods
out
mov
addl
push
mov
xor
fsubs
mov
pushf
mov
inc
pushf
lcall
sti
dec
in
setbe
xor
cs
inc
repnz
cmp
scas
sbb
jnp
xchg
flds
andl
aad
insb
pusha
inc
sub
lret
addb
sbb
sub
sub
or
js
pop
sarl
fisttpl
cmc
inc
repz
mov
adc
loope
cmc
call
cmc
rcll
dec
pop
push
and
leave
adc
ss
jmp
inc
mov
stos
out
scas
xchg
lret
insb
test
test
clc
lahf
fldl
outsl
xchg
insl
or
mov
or
ljmp
stos
mov
mov
xchg
jnp
enter
pavgb
jno
lea
mov
sub
adc
inc
repnz
stc
decb
dec
jle
add
rcrb
inc
cmp
fnstsw
repnz
xchg
sahf
sub
addr16
push
ret
mov
mov
in
repnz
lds
cltd
pushf
adc
outsb
dec
stos
pop
xor
sbbb
jnp
sub
shll
inc
stos
sbb
dec
mov
cmp
sbb
loop
ljmp
push
xor
stos
jmp
in
lahf
daa
push
fnsave
lods
test
pop
pop
xor
add
pop
test
arpl
adc
cmpsb
enter
gs
mov
mov
rorb
cmp
pop
imul
and
xor
pop
lret
mov
pop
imul
adc
idiv
or
out
jecxz
xchg
fimuls
iret
test
rclb
xchg
inc
or
addb
loope
mov
cmp
addb
fstpt
or
je
sahf
dec
lea
push
nop
test
push
dec
ja
outsl
mov
sbb
ljmp
mov
sbb
popf
pop
and
aas
lret
test
mov
cmp
xor
lods
inc
xor
arpl
daa
inc
dec
cmp
in
int3
rcrb
sti
int3
adc
outsb
pop
test
test
push
lret
cmc
jbe
jnp
out
test
add
pop
icebp
pop
test
mov
adc
pop
ret
popa
add
mov
popf
mov
les
pusha
fimull
rcrb
pushf
arpl
dec
mov
push
ds
push
inc
cmp
aaa
cltd
pop
mov
das
xchg
add
clc
xor
in
stos
loop
outsb
inc
repz
movsb
jecxz
ss
pushw
bound
rorb
arpl
test
xchg
add
outsb
mov
push
lahf
sbb
add
dec
out
xchg
inc
or
leavew
xchg
mov
lods
add
insb
ss
pop
dec
rclb
outsl
shrl
in
addl
add
inc
dec
fstps
add
pop
mov
or
ja
cmp
adc
sarb
in
std
shrl
push
lods
or
mov
fisttpll
mov
push
test
fisttps
sbb
repz
hlt
hlt
mov
push
pop
push
fbld
arpl
mov
sub
inc
pop
adc
push
mov
adc
inc
outsb
pop
popa
sub
xlat
sbb
cwtl
push
out
lods
cmc
gs
cmp
pushl
sbb
out
out
jo
sbb
xor
add
mov
lea
stos
mov
ret
and
jge
and
roll
xchg
xchg
cmp
lds
push
mov
lods
jns
inc
xchg
push
and
push
stos
inc
mov
dec
add
lods
lods
aad
push
mov
mov
mov
rol
jns
dec
arpl
xchg
rorb
dec
inc
loope
xor
scas
inc
xchg
les
add
int
mov
es
or
mov
mov
pop
sub
push
arpl
popf
ficoml
out
jno
sub
push
loopne
jg
bound
addb
push
lods
mov
dec
lahf
add
sbb
mov
add
divl
adc
mov
and
mov
xchg
inc
mov
lahf
push
mov
js
dec
xorb
add
lea
sbb
scas
or
in
subb
mov
fcompl
push
jns
xchg
sahf
aad
out
in
xlat
add
mov
lahf
sbb
mov
and
sub
cmp
jge
scas
das
fdivr
xchg
pop
sub
or
fisubl
xchg
ja
mov
sbb
dec
mov
in
jmp
adc
inc
imul
test
lret
xchg
cli
je
ss
adc
rclb
cld
mov
lahf
pusha
dec
jmp
cmpb
filds
loope
bnd
sub
mov
add
clc
add
sbb
sub
imul
fadds
lods
leave
jle
cli
add
inc
fcomp
addb
add
arpl
adc
jo
xchg
add
sbb
notl
insl
data16
and
fimull
pop
pop
enter
xchg
inc
sub
pop
mov
movsl
imul
cmp
inc
fldcw
test
popf
adc
mov
push
cmpsl
fwait
xor
fcoms
push
fdivs
fcomi
jo
mov
pop
dec
scas
popa
stos
sub
jecxz
push
sbb
das
dec
adc
sar
mov
jg
mov
cmp
sbb
imul
xchg
lods
fadd
cli
addl
add
fimuls
push
scas
mov
into
fildll
mov
leave
out
aam
nop
cmp
testl
imul
sbb
pop
or
fs
js
xor
into
ror
ljmp
aad
stc
inc
and
clc
jg
push
bnd
or
mov
insl
mov
out
sti
outsl
outsl
rorl
lods
ss
mov
add
pushf
push
xor
push
fnsave
popf
test
adc
test
fs
clc
aad
push
inc
mov
cmp
jp
cltd
stc
test
jns
jnp
insb
xlat
mov
jl
jecxz
insl
inc
cwtl
loop
stos
les
dec
sbb
or
mov
fsubrs
les
xchg
daa
movsl
outsl
sbb
in
xor
enter
stc
inc
add
mov
loope
push
fiaddl
out
mov
repnz
mov
pop
popa
add
mov
arpl
outsb
roll
push
outsl
mov
in
scas
and
jecxz
insl
push
popa
es
add
dec
loope
adc
xlat
test
xor
pop
outsb
mov
xor
mov
fwait
mov
cld
xor
pop
adcb
xchg
xchg
mov
fildll
scas
sub
popa
jp
sti
fidivl
push
fwait
sbb
or
or
push
repz
adc
mov
stc
mov
jo
push
outsb
sbb
dec
mov
jae
pop
xchg
movsl
mov
mov
leave
daa
rcl
push
cmpsb
jns
add
sbb
sub
add
xor
mov
mov
imul
mov
call
jo
sub
sub
mov
ljmp
outsl
cmp
push
inc
ret
mov
xor
push
mov
mov
or
push
xor
pop
loope
iret
xor
adc
jecxz
in
dec
ja
mov
pop
nop
notb
call
push
and
shlb
aam
adc
aaa
stc
notb
fwait
jle
mov
dec
imul
movsb
cmp
cmp
fsub
hlt
lock
push
insl
cs
dec
sar
adc
je
xor
adc
mov
sahf
inc
dec
dec
pusha
or
cld
aas
data16
out
and
enter
and
call
ds
push
adcb
jmp
data16
sbb
mov
mov
inc
cmp
mul
lods
adc
shrb
aas
enter
in
xchg
push
faddp
add
mov
les
pushf
pop
cmp
sub
xchg
xlat
cwtl
sub
mov
std
inc
jbe
clc
dec
sbb
xor
js
cmp
testl
pop
fadds
repz
sbb
xchg
adc
imul
js
sub
and
inc
imul
cli
loope
xor
leave
pop
xor
les
nop
loop
out
dec
dec
clc
js
scas
and
imul
mov
ljmp
sbb
in
sub
mov
mov
mov
rorb
mov
inc
pop
gs
sbbl
lea
pop
out
adc
enter
sub
sbb
js
stos
jl
je
js
mov
xor
pop
shll
xchg
movsl
das
popa
icebp
jne
popa
jno
push
into
cltd
jns
adc
inc
mov
lret
lret
dec
push
int
mov
push
aam
mov
inc
cli
out
push
mov
cmp
insb
jmp
or
pop
add
lea
imul
adc
scas
mov
xlat
lea
mov
outsl
jecxz
adc
addb
inc
gs
cwtl
out
lahf
shlb
fidivrl
es
sub
push
push
pop
loope
popa
sbb
push
loopne
rcrl
js
pop
je
adc
mov
adc
lods
enter
jle
iret
cmp
fstps
pop
push
or
pop
loop
lahf
les
dec
cmc
mov
sbb
shl
aas
fiadds
ds
pop
push
cwtl
dec
cmpsl
stos
and
daa
std
cmc
mov
cs
addr16
sub
cwtl
jg
lods
xor
daa
pop
push
mov
std
jbe
setb
negl
jne
rolb
add
add
mov
xlat
xor
ss
xchg
mov
xor
mov
mov
push
sahf
cli
dec
fcomps
push
out
jbe
outsb
push
mov
movl
fcoms
in
adc
je
std
insl
das
addr16
shlb
and
cmp
fnsave
sbb
cmp
testb
stc
push
js
ds
sub
and
cmpb
xor
in
pop
fsub
jnp
cli
and
jge
les
jo
fsubs
mov
inc
js
lds
and
and
sarb
sub
aaa
pusha
or
punpcklwd
sbb
int
add
popf
scas
mov
aaa
xor
cmp
jno
mov
rcrl
sarb
dec
inc
and
js
sbb
clc
clc
push
test
cwtl
mov
nop
fstps
das
pop
sbb
leave
sub
sbb
shll
aam
add
out
js
cwtl
loop
cmpsl
mov
cmp
fisubs
aaa
xchg
ljmp
lret
hlt
mov
jge
aam
pop
sub
aad
test
push
inc
cmp
testl
icebp
daa
jle
insl
xchg
mov
xor
andl
or
mov
mov
into
divl
jle
in
mov
cmc
mov
add
sub
mov
dec
das
dec
mov
xor
mov
add
xchg
mov
dec
enter
pop
dec
dec
mov
mov
loop
push
adc
movsb
mov
xchg
loopne
addr16
and
pusha
push
cmp
xchg
pop
mov
pop
push
xchg
iret
add
push
push
bound
aas
xorl
or
daa
dec
stc
or
mov
addr16
outsb
xor
jge
and
inc
bound
loop
je
mov
iret
inc
lods
and
sbbb
mov
cltd
mov
sub
cmpsl
jmp
pop
add
sbb
inc
decb
das
aam
lcall
out
mov
adc
mov
jg
pushf
xor
repz
cmp
sub
andb
xchg
es
movsl
imul
cmp
sar
or
popf
push
test
add
fcmovbe
ror
xchg
call
push
jg
js
insb
daa
test
mov
xor
dec
pop
fsubs
sub
sub
lods
pop
xchg
test
ret
xchg
mov
push
subb
lods
fninit
pop
dec
cmp
cli
stos
loop
fadd
sub
insb
xor
lea
out
pop
shl
sbb
sub
xor
ret
sahf
xlat
pmaddwd
adcl
and
pop
gs
scas
jno
mov
movsl
push
ficomps
cmp
jl
orl
cmp
fnsave
sub
jl
mov
fdivrl
ret
sub
out
xchg
popf
aad
xlat
inc
stos
les
lds
xchg
pop
mov
leave
adc
int3
jno
rorl
rcl
inc
lcall
rol
gs
fdivp
aad
lcall
jle
pop
cmp
mov
push
gs
jo
andl
pop
test
push
test
cmc
or
and
xor
jle
sub
clc
pop
std
jns
testl
rolb
scas
xor
std
ss
adc
scas
cmpsb
addr16
adc
jl
cmp
and
xchg
cwtl
push
dec
arpl
fucom
jno
rclb
push
jno
jbe
adc
pop
and
mov
roll
and
xchg
out
push
dec
and
hlt
movsl
inc
lods
lcall
xor
test
jb
mov
ljmp
adc
push
adc
mov
cwtl
adc
cld
imul
das
sub
mulb
mov
jne
or
ret
lds
fwait
xchg
pop
mov
pop
lcall
fdiv
jno
lret
xchg
shrl
dec
fwait
pop
faddl
scas
add
jp
lea
xchg
loope
cmp
or
mov
jg
dec
jne
pop
inc
and
repnz
mov
cmc
mov
outsl
mov
test
pushf
pop
or
stc
jp
sbb
fstl
fst
enter
mov
or
out
push
jo
jae
imul
dec
sbb
divl
or
aaa
jb
dec
jmp
js
in
sub
lret
mov
xor
pop
jo
add
sbb
add
mov
mov
dec
and
movsb
mov
push
hlt
fwait
sbb
in
int
fwait
xchg
sub
hlt
push
ja
mov
pop
mov
push
dec
popf
testl
xor
in
push
stos
xchg
ss
loope
add
mov
cmp
fistl
push
aas
movsl
dec
inc
jl
xor
inc
inc
inc
stos
xor
mov
fs
mov
push
and
xchg
jl
dec
cmpsb
sbb
ficoml
sti
or
push
rclb
daa
rcrl
ret
pop
imul
call
shl
push
into
lret
sbb
js
int3
xchg
dec
aaa
sahf
shlb
hlt
pop
push
gs
fs
arpl
mov
sbb
jle
addr16
push
pushf
jbe
lea
sbb
in
push
sbb
xlat
ss
fistpl
mov
cmpsl
mov
into
paddw
push
test
fldcw
xchg
xor
les
fwait
lret
and
push
ret
adc
mov
sub
jnp
mov
jbe
jns
cmp
jae
mov
and
je
rorl
clc
lock
call
repz
jmp
ret
xchg
jne
and
push
adc
push
popa
shrl
dec
adc
xor
fmull
jmp
mov
aad
daa
dec
push
push
lret
push
into
jo
jbe
and
dec
mov
sub
jo
add
jne
popf
jg
mov
hlt
enter
cltd
scas
add
dec
ja
dec
js
cmpsl
out
push
xor
loop
xor
add
out
fstpl
mov
cmp
cltd
sub
inc
repnz
fnstsw
push
jo
mov
jno
mov
xchg
lods
pop
clc
xchg
loop
mov
pop
out
cmc
stos
mov
imul
adc
mov
sub
stc
aas
cmp
mov
sbb
sub
lods
push
cmc
cmp
imul
enter
jmp
in
test
and
cld
mov
cmpsb
test
ljmp
shlb
dec
add
xchg
push
mov
xchg
cmpsb
mov
adc
loopne
mov
and
cli
jbe
int
ljmp
mov
cmpsl
and
xor
icebp
mov
mov
jbe
mov
lock
scas
mov
rclb
loopne
adc
mov
pop
ljmp
pop
inc
lcall
mov
jns
push
sarl
or
xchg
es
cmpsl
push
push
dec
mov
nop
or
jb
es
bound
imul
sbb
push
jae
sar
mov
mov
mov
mov
sub
dec
stc
inc
and
inc
ret
sbb
add
in
or
mov
xor
cwtl
je
loopne
mov
mov
sub
mov
push
insl
popf
outsb
pop
cmpsl
jle
call
pop
mov
inc
jnp
push
adc
cmp
out
mov
jne
dec
inc
mov
mov
aas
inc
test
fdivrs
loopne
cmp
mov
mov
addr16
movsl
leave
or
sub
loopne
mov
insb
sub
cld
insl
out
and
scas
inc
out
sub
push
fsubl
cli
jns
sbb
mov
sub
insl
aas
inc
push
fucomi
testl
pop
pop
push
pop
lock
jne
and
push
cmp
popa
dec
mov
leave
xchg
mov
xchg
lcall
fwait
push
shrb
pop
jns
in
xor
loope
or
mov
fisttpll
push
loope
sbb
aad
inc
xor
lahf
lcall
sub
add
mov
jmp
movsl
dec
or
jae
mov
adc
fldenv
cltd
sbb
jmp
insb
cmpb
or
into
or
add
xchg
xchg
mov
mov
ss
hlt
movsb
jg
cmpsl
mov
into
roll
jmp
sbb
and
in
xor
in
in
add
jle
test
maskmovq
notl
xor
mov
sub
xlat
js
stos
mov
and
popa
scas
out
sti
or
shlb
aas
lahf
stc
push
mov
push
pop
addr16
push
xchg
loope
arpl
addl
and
lret
xor
jbe
in
mov
add
aaa
mov
xor
dec
pop
std
mov
dec
fistps
mov
les
xchg
pop
out
sbb
mov
pop
out
call
jnp
dec
push
xor
jge
jle
fwait
test
add
sbb
add
or
mov
repnz
pop
fwait
pop
mov
es
sbb
loopne
call
lea
mov
imul
push
pop
stos
jno
xchg
and
lods
negb
mov
xlat
push
push
sbbl
cmp
ret
xor
mov
push
mov
aas
rorb
mov
adc
push
cld
mov
sub
mov
enter
xchg
aad
and
aad
nop
call
pop
adc
dec
xor
inc
pop
or
dec
cld
rcll
cmpsb
or
sbb
movsb
sbb
sub
mov
stos
loope
sbb
leave
fsubrl
call
cmc
nop
xor
test
sbb
jp
ja
shll
adc
out
dec
add
add
mov
inc
mov
out
mov
das
out
andl
lea
push
lods
mov
mov
jl
jns
mov
out
ficoms
scas
xchg
push
rcll
clc
jle
fldcw
jecxz
aad
jl
xchg
jge
cmc
mov
cmp
and
es
mov
pop
pop
rcrl
testb
push
cmp
pop
mov
fisubrl
pop
or
jp
jne
stos
dec
mov
and
fnstenv
into
je
sub
shl
or
xchg
sub
cmp
mov
or
add
mov
xor
fadd
xchg
push
js
movsl
and
in
cld
into
pop
xor
popf
push
cmpsb
rcrw
repz
sar
aas
xor
jecxz
fimuls
and
pop
jne
or
sbb
lock
gs
pop
pushl
jl
scas
xor
lock
and
inc
sub
lock
jbe
and
adc
in
jmp
dec
es
inc
or
call
mov
and
jmp
fiadds
mov
lahf
cmc
mov
adc
movsl
inc
jg
xor
faddl
push
inc
or
adc
cmc
sbb
xchg
xor
jnp
inc
idivb
fcompl
aas
push
das
cmp
mov
xor
mov
or
or
insl
out
jg
xlat
inc
popa
hlt
dec
pop
and
inc
pop
mov
mov
mov
aas
jmp
in
dec
loop
xlat
push
xor
sbb
pop
pop
jb
out
adc
jp
cmc
sub
xchg
out
mov
jg
rol
ss
repnz
or
outsb
or
dec
dec
je
xchg
mov
adc
int3
push
jb
outsb
je
cltd
adc
scas
sbb
popa
lcall
in
test
sarb
repnz
int
cltd
imul
jnp
jno
icebp
cmp
xor
fisttpll
in
pop
scas
fs
jbe
ds
sarb
idivl
push
jno
scas
ret
xorl
and
insb
iret
lds
mov
aam
adc
mov
lock
shlb
loopne
test
xchg
sbb
cmpl
xchg
inc
data16
rcll
push
arpl
dec
xor
movsl
mov
test
fstl
das
loopne
mov
cmp
int
sbb
ljmp
les
cld
int3
xchg
sbb
rcll
cmpsb
aas
xor
loopne
gs
lret
add
ljmp
add
push
stos
stc
pop
leave
rcl
add
inc
ret
inc
mov
jnp
push
and
push
mov
xchg
repnz
mov
ret
push
les
adcb
aaa
lods
sbb
mov
lret
idiv
xchg
adc
hlt
ret
dec
jge
and
dec
jnp
mov
inc
test
and
push
lret
fdivl
or
add
xor
js
aam
push
sub
xor
push
cmpsl
es
aas
shl
mov
lret
cmp
icebp
imul
xor
int3
hlt
outsb
or
jmp
aas
inc
popf
and
xchg
iret
aam
fsubs
push
out
cmp
push
loope
dec
push
loop
mov
dec
add
add
pop
mov
movsb
stos
cld
lock
cmp
add
mov
inc
dec
push
insl
in
lock
sub
pushf
mov
stos
mov
sbb
adc
sbb
lds
lock
xchg
mov
aaa
jg
pop
mov
sbb
gs
xor
inc
cs
test
jg
fdiv
jecxz
fucomp
stos
in
lret
mov
mov
pop
imul
popf
cmpsl
daa
dec
sbb
xor
ret
insb
popa
mov
jnp
stos
sub
rcrl
mov
xor
pushf
into
mov
push
push
ljmp
inc
scas
adc
push
push
ds
stos
push
mov
jae
shll
fs
loopne
or
dec
push
arpl
stos
or
out
stc
mov
hlt
adcb
aas
sarb
lea
insb
pop
and
ljmp
mov
negl
push
push
daa
xchg
popa
mov
add
fisubrs
das
shll
bound
in
jge
jno
shrl
std
dec
arpl
dec
xor
leave
sbb
adc
xchg
jp
nop
aad
ljmp
movsl
outsb
dec
jg
jbe
mov
fwait
adc
xor
in
inc
push
fimuls
and
adc
sub
pop
mov
xor
cmp
mov
xchg
pop
enter
xchg
adc
and
mov
sub
jg
sbb
imul
cwtl
mov
dec
stos
in
into
and
ret
fdivrl
jecxz
sti
xor
pushf
xchg
push
inc
sahf
mov
or
cltd
into
xor
cmpsl
lret
mov
or
xor
sub
loopne
ja
fcoms
push
dec
ja
dec
icebp
jae
popf
pop
adc
xlat
mov
mov
gs
mov
fmuls
into
dec
push
pop
ret
push
cs
jl
xor
mov
cli
pop
loopne
inc
xchg
xlat
lds
movsb
and
or
imul
mov
int3
test
pushf
ret
aaa
addb
push
xor
xchg
mov
adc
cli
fisubs
out
jne
xchg
dec
les
in
shr
mov
loope
popf
push
jmp
stc
jb
sub
imul
jg
ljmp
xor
mov
les
sbb
adcl
or
lock
scas
pop
fbld
test
mov
xchg
imull
shrl
add
jp
jg
xchg
nop
xchg
ret
addl
or
enter
fnstenv
das
adc
fsubrs
lahf
push
mov
xor
shlb
pop
out
clc
pop
out
adc
ds
pop
jnp
sbb
into
mov
sub
xor
push
out
scas
dec
mov
pop
aaa
jp
mov
mov
lock
xor
es
mov
pop
inc
cmp
test
xor
fmuls
aas
ja
es
out
shll
mov
sub
ret
aas
pop
fldt
xchg
push
rcl
inc
loop
mov
rolb
sbb
add
mov
ss
sbb
mov
lcall
and
iret
iret
dec
xor
jo
push
and
push
mov
and
push
lock
mov
stc
test
lcall
add
loop
movsb
fs
rorl
repnz
fsubl
lcall
rclb
mov
xlat
push
pop
sub
repz
push
pop
xchg
xor
push
aas
mov
movsb
inc
lcall
daa
or
jno
clc
and
cmp
inc
repnz
pop
dec
les
fldt
push
add
fiaddl
bound
fdiv
mov
sbb
loop
inc
mov
out
sub
jmp
pop
jmp
aas
mov
pop
and
push
inc
sbb
rcll
mov
mov
iret
adc
mov
or
insl
fwait
adc
ljmp
jl
jns
xchg
xor
filds
cmp
int
adc
pop
rcrl
cs
jge
pop
cmp
jns
imul
mov
pop
adc
aad
in
shr
push
into
add
mov
jns
scas
xor
sbb
jno
mov
sub
mov
cli
mov
xchg
enter
mov
shll
jne
inc
jnp
out
lret
sti
jns
add
into
fisubs
outsl
scas
jb
xchg
push
scas
clc
cltd
mov
loop
test
dec
nopl
ficompl
pop
jo
mov
xchg
rcll
dec
mov
lcall
adcl
leave
jo
dec
cmc
loope
xchg
push
aaa
pop
sub
popf
fisttpll
mov
xor
mov
mov
lahf
inc
lea
ret
sub
shlb
mov
inc
mov
mov
adc
pop
dec
lods
mov
out
push
mov
aas
in
cld
xlat
popf
jno
cmp
negl
push
push
addl
shrb
ljmp
mov
mov
fisubl
bound
xlat
and
outsl
pop
mov
sbb
aad
jb
ja
or
jecxz
insl
test
xor
adcb
inc
xchg
test
mov
outsb
or
jmp
push
sbb
jmp
adc
inc
sbb
or
inc
pusha
icebp
push
jl
imul
je
and
mov
pop
data16
mov
xchg
into
sbb
fldenv
sub
clc
mov
dec
ds
pop
cmp
dec
or
push
add
push
pop
jp
imul
or
push
ss
aam
mov
pop
push
fsubrl
inc
pop
sahf
mov
and
xchg
fs
into
push
shlb
xor
sbb
mov
push
movsl
outsl
sbb
mov
xchg
mov
sbb
cmp
inc
mov
or
in
mov
lods
popa
shl
inc
sbb
ja
sub
subl
or
sbb
xor
lret
addb
enter
inc
or
sti
inc
into
stos
shrb
shll
cs
jg
sub
sbb
push
hlt
rorl
adc
decb
or
insb
xchg
dec
sub
xchg
orl
lods
shl
pop
mov
sbb
pop
or
in
sub
leave
xlat
cmovl
cmpsl
imul
or
xchg
jmp
mov
push
ret
mul
ljmp
scas
dec
sub
pop
jg
inc
sub
outsb
out
pop
sbb
outsb
mov
adc
les
adc
mov
jl
cld
cmp
adc
jecxz
ds
pop
mov
jg
pusha
pop
lods
jae
mov
dec
movsl
xlat
pop
mov
shlb
inc
sahf
xchg
icebp
add
xchg
push
cli
dec
mov
inc
xor
adc
outsl
inc
xor
pop
je
sbb
adc
imul
imul
das
stos
xor
cmpsb
fstpt
cmp
clc
or
mov
sub
add
fnstsw
or
sub
or
out
daa
in
xchg
dec
shll
xchg
xor
mov
lret
jp
js
jno
dec
and
fisttps
or
out
ja
mov
pop
pop
pusha
and
jmp
inc
mov
sbb
jne
pop
push
sbb
mov
sub
sub
out
mov
mov
pop
jb
lods
adcl
jecxz
add
push
rcrb
lock
hlt
cmp
ffreep
and
pop
push
push
jae
shl
xchg
xchg
sti
mov
popf
arpl
mov
cld
stos
fcomps
bnd
jns
stos
push
fstl
mov
sub
xlat
int3
addr16
jl
out
sbb
xchg
jno
leave
xorl
adc
sbb
leave
sub
sub
inc
pop
mov
mov
bound
push
inc
lods
push
test
gs
aad
sub
mov
cmp
inc
inc
pushf
dec
xor
add
sbb
lret
xchg
in
jmp
and
dec
loop
fnstsw
sahf
lret
xchg
xchg
shl
rep
fidivs
imul
dec
pop
xchg
aam
pop
ret
or
and
sbbl
cmpb
shrb
jno
rorb
mov
cwtl
dec
jo
or
inc
jo
cmp
push
out
clc
xchg
or
dec
push
adc
dec
rcl
sub
sbb
adc
mov
push
jp
stos
pop
lock
and
addr16
pushw
je
fildll
stc
lods
mov
mov
pop
and
mov
ljmp
leave
insb
pop
sub
lahf
jmp
int3
pop
cmp
push
adc
aas
ljmp
lock
jecxz
push
push
dec
push
or
lods
lods
jl
adc
data16
aas
bound
dec
pop
movsb
aad
xor
testl
out
fs
rorl
sbb
mov
sbbl
xchg
fldt
sub
dec
xchg
jnp
pop
in
pop
aaa
cmp
or
adc
mov
pop
clc
outsl
and
addr16
imulb
xchg
mov
inc
xchg
jns
push
jne
xor
push
mov
ret
sub
outsl
icebp
mov
les
mov
bound
es
jae
add
cmp
loop
sbb
out
xor
sbb
in
push
jecxz
push
mov
pushf
cmp
jns
push
jo
or
or
shlb
inc
rcl
fstl
out
or
sbb
mov
push
xchg
dec
or
mov
and
dec
in
pop
leave
jecxz
mov
and
insb
xchg
push
hlt
and
repz
push
mov
xor
clc
fcompl
push
xchg
and
scas
int3
jae
lahf
sbb
jns
lods
scas
or
pushf
lods
cltd
sub
movsb
xchg
scas
ffree
mov
pop
xchg
jno
fwait
dec
jo
pusha
into
xchg
sub
loope
nop
insl
cli
mov
mov
add
sub
push
icebp
shll
add
mov
ss
mov
popf
cmc
fidivrs
sbb
bound
push
arpl
add
pop
mov
popf
jno
mov
out
ds
pop
dec
mov
mov
std
nop
mov
sbb
sbb
sub
les
ds
rorb
push
and
and
movsb
icebp
repnz
fstpl
test
int3
jbe
adc
and
mov
push
xor
push
mov
rcr
aad
adc
adc
int3
mov
push
pop
push
scas
dec
sbb
jnp
push
int
iret
xor
mov
call
sub
mov
jl
inc
jnp
loopne
xchg
outsb
cmp
popf
loopne
mov
sti
dec
add
cli
fldenv
lret
orb
test
jp
mov
inc
sbb
dec
xlat
flds
insl
insl
jne
xorb
xor
orb
xor
sub
rorl
je
jp
sarl
test
daa
or
and
outsl
insb
add
inc
add
jae
dec
sub
ss
xlat
pop
and
xchg
subl
push
scas
dec
pop
pop
cwtl
xor
xchg
push
dec
jge
dec
jmp
mov
fsubrs
dec
pop
bnd
aas
test
outsb
push
jno
lcall
mov
push
popf
mov
into
movsb
inc
sbb
xchg
rorl
xor
adc
push
mov
aam
or
rcl
inc
dec
test
jno
jle
dec
pushf
popf
fisubl
or
pop
or
jl
mov
jno
movsl
stos
mov
test
iret
dec
pop
inc
int3
stos
test
mov
roll
bound
in
stos
out
xchg
aas
push
out
and
cmp
call
sbb
aam
mov
sahf
push
or
leave
adc
xlat
orl
notb
push
mov
fcomip
sar
mov
adc
and
shrl
call
stos
out
mov
adc
mov
inc
mov
cmpsl
mov
notb
negl
add
inc
xchg
test
pop
je
jno
jmp
lock
cmp
test
sub
inc
aas
stc
lahf
stc
sub
inc
ss
stos
in
mov
cmp
rcr
add
scas
pop
dec
jbe
ss
adc
or
scas
pop
outsb
fwait
addb
ss
enter
fwait
aam
push
dec
jmp
idivb
inc
xchg
int3
es
les
out
sub
out
cwtl
push
popa
popa
inc
out
dec
sub
lret
jne
lods
adc
icebp
cmp
jge
push
xchg
leave
xlat
push
xrelease
dec
add
add
push
loop
aad
pushf
inc
jne
sub
cmp
and
sub
in
ljmp
lret
jne
inc
cmp
call
in
inc
sbb
xchg
jae
and
mov
inc
loope
repz
repnz
cmp
lret
loopne
mov
jo
xor
fsubrs
xor
popa
loop
movsl
mov
cmpsb
jo
xchg
leave
lret
adc
jo
cmp
jl
inc
inc
test
ljmp
lahf
adc
loopne
nop
push
loop
shlb
gs
int
pop
aad
push
push
adc
in
call
aad
stos
ja
movsb
js
inc
sarb
clc
lret
adc
xor
or
sbb
ja
adc
sub
xlat
mov
sbb
dec
xor
stos
or
aas
push
cmp
sub
inc
cmpb
push
inc
loope
cmp
jbe
and
and
push
sbb
enter
cmp
out
lods
lods
out
je
loope
jecxz
insl
jo
loopne
xor
scas
dec
daa
and
mov
test
lea
in
push
add
xor
xchg
lret
cmc
cmp
mov
mov
scas
lcall
lret
jecxz
inc
negl
pop
pop
jmp
mov
add
inc
std
ss
inc
mov
ljmp
in
imul
std
pushf
outsb
dec
into
push
mov
inc
xor
dec
iret
in
mov
std
mov
int3
movsl
sarb
lcall
add
insl
xchg
jb
xchg
aad
mov
inc
jge
mull
fcom
cmpsl
sbb
fcomp
dec
inc
es
pop
sarl
je
jle
repz
daa
movsb
scas
and
bound
fiadds
jb
mov
cwtl
dec
pop
mov
mov
dec
fsubl
mov
sbb
sub
dec
fstpl
decl
stos
xchg
push
add
xor
cltd
sub
in
icebp
rcr
fistpl
fisubl
test
sub
addb
push
mov
lret
jne
repnz
popw
push
inc
or
sub
dec
and
divl
stos
dec
aaa
push
adc
cli
sahf
xor
add
jl
jae
sbb
ret
dec
mov
or
and
setbe
pop
push
push
dec
cmp
clc
mov
daa
inc
cmp
jbe
pushl
cmp
idivb
popf
rolb
and
xchg
imul
dec
fcomps
lds
stos
aad
pushf
std
lods
cwtl
stos
xchg
jecxz
js
and
xor
dec
jae
sbb
cli
xchg
popl
lods
jge
pop
out
movsl
xor
mov
sub
pop
ja
popf
pop
pop
mov
mov
inc
pop
xchg
out
loopne
inc
test
mov
mov
daa
aas
adc
imul
jg
sbb
daa
mov
aam
jne
add
adc
iret
hlt
and
hlt
push
mov
fs
fisttpll
aam
dec
insl
and
arpl
je
lret
insb
aam
mov
xor
aad
fwait
je
outsb
add
shll
mov
push
lods
inc
dec
fcoms
jp
inc
cmp
or
dec
aaa
cmc
scas
les
jne
mov
mov
adc
sbb
std
push
and
xchg
mov
into
add
mov
lods
push
mov
ret
xor
mov
xchg
cwtl
mov
inc
pop
arpl
lahf
lods
stc
clc
adc
push
test
scas
add
fldcw
out
fnsave
mov
std
fimuls
outsb
jmp
int3
stc
jbe
mov
fildl
fimull
xchg
inc
das
push
jp
es
cmp
popa
mov
or
lods
pop
push
ret
push
sub
in
add
mov
scas
pushf
xor
dec
xlat
add
cmp
mov
jp
dec
adc
ret
or
inc
bound
hlt
xorl
and
outsl
add
rclb
je
pop
pop
iret
mov
xchg
xchg
lcall
mov
add
xor
cmp
pop
adc
sti
and
cld
rcrb
pushw
mov
fisubrl
aas
orl
mov
imull
push
outsl
gs
push
adc
mov
mov
subl
jns
test
push
subl
lcall
stc
xchg
dec
dec
dec
mov
adc
rcrl
mov
subb
sub
mov
nop
cld
xor
inc
xor
pop
int
dec
push
insl
inc
adc
out
mov
mov
clc
push
pop
aam
dec
aam
repz
add
call
add
xor
jge
fs
dec
cmc
ss
aam
push
dec
jae
sbb
push
mov
or
ja
adcb
fs
leave
imul
ljmp
test
xor
mov
enter
daa
lods
das
cs
mov
divl
std
jo
std
ror
jae
mov
jg
add
sub
mov
and
pop
pop
in
jns
adc
je
repz
shlb
cs
imul
mov
xchg
mov
out
in
adc
pop
sub
or
rcl
lea
lds
jnp
ficoms
movl
push
call
cwtl
mov
xchg
loop
jae
push
pop
inc
sub
xor
loope
pop
mov
data16
pop
dec
add
daa
pop
add
mov
shl
dec
fisubl
adcl
push
iret
or
push
les
pop
mov
cmp
cmp
bound
lret
push
sub
enter
pop
adc
daa
jecxz
inc
sbb
lahf
push
sbb
lret
jp
iret
or
pop
mov
mov
xchg
mov
or
hlt
shr
cli
and
xchg
cmp
mov
adc
xchg
push
call
popa
js
jae
lcall
jb
cmp
adc
fwait
pusha
and
outsl
loope
dec
sub
inc
aas
jno
cmp
pop
mov
iret
sub
mov
or
xchg
je
popf
ljmp
push
stc
pop
es
pop
xchg
fnsave
sahf
lret
mov
sub
inc
push
leave
cs
mov
mov
pop
int
jmp
add
pop
and
or
rorl
out
mov
mov
cmp
subb
enter
cltd
nop
cmp
insb
cmp
stc
jb,pt
dec
mov
jne
jno
into
lock
sbb
sub
aas
in
test
push
push
cmpsb
xor
xchg
popa
dec
mov
pop
xchg
aas
jmp
data16
pop
imul
outsl
push
inc
pop
or
fdivrl
call
sti
sbb
mov
xchg
and
mov
sbb
sub
lcall
js
cmc
testb
cmp
push
mov
aad
jbe
and
cli
ficoml
leave
add
out
or
xchg
ljmp
sti
adcb
fcompl
dec
enter
cmp
inc
mov
sbb
jge
loop
or
push
push
dec
jno
inc
sub
dec
xor
in
dec
cmp
adc
push
dec
ret
dec
pusha
movsb
clc
mov
repz
jns
mov
adc
lods
xchg
dec
jnp
push
aad
xchg
clc
fistl
repz
pop
xor
lret
push
out
cmpsb
fdivs
sbb
mov
adc
adc
dec
out
and
out
jecxz
out
aam
push
or
push
cmp
sub
cmp
cld
icebp
xchg
xchg
daa
lock
xchg
daa
stos
cmp
lret
rcl
lret
xchg
outsl
cmp
dec
adc
mov
inc
jns
ror
jo
sub
push
jbe
cmc
aad
sbb
push
pop
cmp
inc
int3
lock
repz
shll
or
je
popa
mov
adc
les
scas
mov
push
popa
jg
jl
mov
sbb
aad
mov
shlb
lret
and
mov
inc
add
xlat
xchg
sub
ret
ficomps
imul
adc
das
inc
xor
jnp
sbb
fidivrl
xchg
cltd
push
dec
mov
add
xor
pop
add
decb
mov
imul
out
mov
cmpb
addl
dec
xchg
pop
mov
xchg
sbbb
fidivrs
out
mov
adc
stos
pop
out
cmc
lods
test
fsubl
xor
std
xorb
pop
fwait
inc
pop
sbb
test
push
popf
into
jecxz
andb
push
cmp
push
xor
add
push
lds
sahf
sub
das
popa
outsl
clc
bound
out
mov
xchg
inc
sbb
dec
cmp
inc
pop
mov
lock
xchg
bnd
test
fbstp
outsb
xor
push
cmpsl
adc
scas
test
cmp
sbb
fistpll
push
jg
add
or
je
in
std
adc
insl
cld
dec
push
adc
adc
mov
mov
pop
add
push
mov
daa
pop
dec
ss
mov
push
cmp
stc
and
sarb
aam
adc
and
call
je
pop
call
in
mov
ds
sbb
pop
popa
inc
insb
xor
pop
jae
pop
inc
aam
cmp
ficoms
les
jle
insb
sbb
rorb
push
into
dec
xor
lods
and
add
jbe
jns
out
ds
movsl
nop
inc
lcall
aad
mov
jecxz
mov
dec
daa
xchg
loopew
cmp
add
xchg
sbb
into
pop
movsb
push
pop
add
jmp
cmp
fdivl
adc
push
pushf
mov
lods
push
push
imul
mov
jb
data16
jg
fimuls
lahf
or
es
mov
xor
push
or
and
lsl
sbb
unpckhps
jns
xchg
out
sbb
ljmp
fwait
daa
mov
inc
fnstsw
test
xlat
stc
lret
or
or
fnclex
ss
dec
nop
jl
sti
stos
into
movsl
fistps
test
or
shrl
pop
movsb
inc
lret
dec
dec
subl
aad
lds
jno
mov
push
sub
cmpsl
fsubl
int3
jle
sbb
stc
cmp
cmp
and
in
jae
adc
cli
jae
mov
pop
xchg
dec
jns
sbb
je
les
xchg
mov
push
int3
jge
pop
data16
or
fimuls
mov
add
es
pushf
fnsave
push
daa
mov
es
inc
cmpb
jmp
nop
mov
cmp
xchg
inc
sbb
hlt
xchg
adc
sbb
mov
ror
and
xchg
add
std
adc
das
mov
stos
call
frstor
push
call
lds
mov
inc
jp
jbe
fstpl
lahf
scas
pushf
jne
je
loopne
mov
iret
dec
jecxz
sub
cmp
in
divb
cmpsl
sarb
int3
inc
out
scas
clc
or
pop
xor
pop
xchg
jecxz
in
pop
mov
xchg
adc
mov
xchg
pop
pop
add
jnp
clc
mov
jne
gs
mov
sarb
ficomps
push
mov
cmpsb
mov
mov
in
pop
ret
mov
cld
add
test
test
pop
sub
ss
out
sbb
inc
notb
dec
mov
out
add
popl
mov
xlat
cmp
mov
xor
icebp
outsb
jp
loope
push
sbb
push
jae
stos
xchg
inc
pop
pop
popa
rclb
pop
cmpsl
mov
xchg
incl
push
push
inc
cmp
into
and
dec
xor
divb
adc
inc
cmp
js
rclb
adcb
sub
gs
push
add
push
xchg
fildl
mov
jne
adc
xchg
jl
stc
lods
dec
repz
jge
sub
mov
popa
and
dec
inc
std
sbb
jo
jnp
bound
xchg
xchg
addr16
sub
mov
xchg
and
add
andl
mov
xchg
pop
mov
sbb
stc
ret
add
adc
enter
out
fistps
push
sub
sbb
out
pop
dec
or
dec
xor
sar
out
push
sub
repz
sbb
push
inc
outsl
lret
loope
mov
pop
hlt
popa
std
jmp
fcmovnb
test
adc
mov
pop
lds
dec
push
std
aad
mov
pop
adc
in
mov
mov
cmp
xor
ja
daa
mov
mov
ret
push
mov
or
mov
mov
les
or
push
adc
sub
adc
sbb
jbe
sbb
scas
loop
xor
adc
addr16
pop
or
dec
adc
pop
mov
out
sbb
pop
adc
jge
xchg
fwait
xor
jae
data16
aam
mov
push
push
add
mov
shl
sti
and
pusha
mov
and
mov
xsave
cmp
dec
mov
pop
add
lcall
push
cmp
repz
cmc
shrb
jmp
pop
add
inc
cmpsl
dec
mov
or
xlat
aas
stc
rcr
cmpsl
cmp
fistps
ljmp
sbb
bound
cltd
test
loopne
adc
mov
adc
repnz
jae
cltd
mov
sbb
stos
xor
dec
cmpb
add
or
ret
add
pop
test
add
arpl
pop
jb
xorb
stos
arpl
mov
or
mov
testb
cmp
push
inc
push
jge
cld
std
xchg
in
inc
mov
fisubrl
mov
xlat
or
cli
mov
mov
mov
stos
push
js
xor
pop
add
or
stos
xchg
cmpl
lods
push
aad
movsl
cmpb
xor
clc
daa
adc
lea
push
mov
pop
out
out
cmpsb
loopne
in
ret
push
jl
push
lret
xor
inc
or
rclb
add
hlt
bound
ljmp
addr16
xchg
push
or
sbb
pop
xchg
les
dec
loopne
cmpsb
mov
jl
pop
xor
cmp
or
test
adc
or
cmp
addr16
ss
into
dec
dec
add
or
in
sub
stos
jne
or
in
scas
fildll
mov
leave
dec
cld
out
fsubl
sarb
jge
push
fiaddl
mov
clc
dec
dec
mov
ret
outsb
out
cld
out
or
ret
stos
ljmp
jl
cmp
jb
inc
mov
jbe
xor
fisubrs
sbb
mov
jmp
insb
pop
idiv
lods
addr16
fmull
mov
sbb
inc
lods
jbe
sub
fidivl
clc
add
in
mov
fwait
cmp
sti
leave
imul
pop
lock
adc
push
adc
shrb
mov
jmp
popa
jle
aas
jg
addr16
fsubl
into
xchg
mov
sub
repz
bound
mov
xlat
movsb
dec
mov
add
andb
or
dec
push
daa
push
jmp
inc
xchg
sub
adc
or
int
sub
lcall
inc
jo
dec
cmp
mov
or
sbb
ja
pop
jmp
dec
pop
or
mov
sbb
xor
lods
push
lods
add
aas
dec
pop
adc
loope
jg
adc
ljmp
dec
mov
push
imul
mov
aad
std
daa
add
stos
push
ds
xchg
movsb
pop
lock
les
mov
xor
pushf
test
jo
mov
arpl
mov
mov
push
xchg
mov
sbbl
sub
movsb
mov
jge
pop
lods
lahf
mov
cmp
call
adc
insb
lods
jbe
xchg
dec
and
mov
push
sub
fstpt
rcll
addr16
je
cli
testb
inc
cs
test
leave
ficoms
mov
ds
ret
insb
inc
pop
add
mov
ret
add
add
ljmp
pusha
sub
out
dec
rcl
stos
test
cmp
mov
cs
cmp
xchg
xchg
jae
jg
or
lcall
and
daa
jecxz
jge
pop
mov
dec
into
xchg
call
lds
adc
cmp
repz
sbb
xor
ret
inc
sbb
mov
or
and
dec
xchg
lods
or
inc
fwait
jnp
cmpb
sbb
shl
rcrb
fdivs
cltd
loope
jmp
addl
out
sbb
cmp
aas
leave
sbb
pop
cwtl
xchg
movsb
into
sub
sbb
add
jg
inc
andb
xlat
jo
cmp
and
mov
fstl
mov
pop
ror
notl
jle
lods
mov
cltd
insb
lcall
popf
mov
push
pushl
mov
adc
or
cwtl
jne
cmp
inc
sahf
aad
dec
push
jge
enter
fwait
arpl
sub
mov
mov
dec
cmpsl
lds
mov
loop
les
sahf
mov
mov
shl
test
into
add
push
mov
and
mov
enter
sbb
mov
cld
gs
xor
xor
in
fstpt
out
xor
mov
jge
xchg
mov
negb
mov
or
and
outsb
cmp
icebp
dec
jnp
movsl
or
and
sbb
out
movl
inc
xor
xchg
mov
xchg
lahf
rorb
jp
sbb
bound
or
jecxz
std
loopne
out
pop
add
push
jns
jne
aad
movsl
inc
andl
adc
mov
xor
or
das
fwait
dec
push
out
or
sub
pop
jle
ljmp
xorb
push
mov
in
call
aam
cmp
push
mov
sbb
ret
cmc
fcoml
pusha
shlb
mov
lea
mov
jae
movsb
cmp
pop
cwtl
fsts
loop
fstl
adc
xchg
js
mov
sbb
mov
das
dec
shl
dec
test
jae
lahf
add
jae
push
cmpsl
stc
or
fwait
sti
push
testb
and
mov
mov
xchg
clc
fsts
dec
fwait
dec
rcrb
cmp
sbb
jmp
or
insl
stc
xor
inc
shlb
in
gs
int
push
jecxz
test
add
fisttps
pop
mov
mov
add
lahf
fs
jle
xchg
pminub
aas
inc
mov
fidivl
imul
std
mov
pop
pop
xchg
inc
mov
leave
into
and
int3
aas
ficomps
pop
pop
xor
cmpsl
jno
pop
sbb
dec
and
nop
inc
fld
ss
shll
or
push
sub
arpl
sbb
psllw
pop
rorl
xchg
stc
mov
cltd
mov
outsl
std
aam
stos
cmpsl
gs
cmp
in
dec
shll
add
adc
js
sub
xchg
jne
mov
imul
data16
cltd
test
cs
data16
and
lods
mov
adc
jmp
push
movsb
stos
mov
push
clc
inc
xchg
jg
add
stos
sahf
dec
dec
es
sbb
lea
push
mov
loop
loop
dec
insl
inc
cmp
push
jae
sahf
adc
lret
and
hlt
cs
cmp
xchg
arpl
xchg
pop
idivb
xchg
mov
mov
xchg
sbb
sub
outsb
lahf
sbb
ss
jle
mov
stc
xchg
aaa
xor
lods
push
out
int3
mov
fwait
inc
movsb
pop
pop
outsl
and
mov
ljmp
mov
push
outsb
mov
out
cmp
mov
ljmp
xor
mov
inc
or
mov
lea
xor
pop
out
xor
in
gs
mov
xchg
mov
adc
add
mov
and
ja
pop
adcl
add
gs
fdiv
fisubs
iret
jns
mov
jmp
icebp
and
repz
add
sbb
aaa
dec
add
jmp
or
ds
rcll
cwtl
out
sarl
push
stc
or
rorb
lods
push
push
test
push
gs
push
popa
cmp
cmp
inc
and
dec
push
arpl
inc
and
iret
inc
hlt
mov
daa
push
sbb
cmpsb
dec
cmp
pop
sub
stos
cli
fdiv
adc
add
adc
into
xchg
or
pop
int
ret
enter
lock
pop
cmpl
xchg
jae
push
stos
or
mov
mov
popf
xor
push
call
aas
adc
ljmp
sahf
pop
rolb
scas
test
addr16
push
lods
pop
and
bound
fidivl
xor
clc
xchg
cmpsb
and
sub
aam
mov
xchg
xor
mov
or
pushf
leave
jb
lds
mov
outsb
fsts
inc
icebp
ret
roll
sub
fidivs
lahf
cmpsl
int
lock
lret
jp
cmp
mov
pop
mov
mov
lret
sbb
pop
insb
mov
ss
into
lret
jns
outsb
and
jle
sahf
aaa
cmp
sub
inc
dec
clc
enter
or
mov
insl
imull
les
daa
sbb
mov
notl
xchg
fistps
jnp
sbb
push
lahf
mov
mov
mov
rolb
fidivrl
sar
int3
xchg
repnz
or
clc
test
popa
xchg
push
or
xchg
mov
or
rclb
push
pop
add
shrb
push
fdivp
jecxz
mov
idiv
repnz
rorb
sub
sysret
lods
jge
shll
push
adc
xor
mov
out
fildll
mov
and
sbb
cld
jmp
bnd
mov
sub
xor
lods
stos
mov
mov
push
faddp
iret
shll
xlat
lds
pop
mov
imul
popa
mov
movsl
jbe
andb
data16
cld
stc
adc
shl
push
test
cmpsb
jle
or
mov
pop
subl
ljmp
adc
movsl
sub
stos
push
cmp
cmc
mov
into
xchg
xchg
ljmp
add
adc
xor
xchg
xchg
push
push
jbe
sbb
add
jecxz
lret
mov
sahf
aaa
mull
scas
fstl
mov
lea
xchg
push
sub
xchg
dec
scas
mov
dec
sub
sahf
das
lock
xchg
pushl
in
push
pop
push
pop
rcrl
clc
iret
pop
xor
loop
jge
push
push
mov
mov
repnz
mov
rcrl
push
out
jnp
jno
xchg
sub
inc
dec
clc
pop
scas
push
fdivrl
cmpsl
rcrb
ja
xor
sub
leave
cmp
or
sbb
movsb
cmp
lea
enter
pop
cwtl
fbld
mov
cmp
lods
inc
vshufps
push
pop
in
rclb
xchg
mov
sti
stos
lods
outsl
lea
nop
scas
jg
in
add
mov
mov
pusha
push
pop
jmp
clc
mov
scas
sti
mov
mov
mov
cmpl
xchg
pop
mov
push
adc
dec
into
pop
daa
neg
fstpt
mov
mov
cmc
movsb
mov
jns
gs
sub
and
sub
mov
xchg
dec
enter
mov
adc
idivl
sti
cmc
mov
lea
into
out
or
pop
jecxz
adc
jno
jle
inc
dec
pop
test
pop
pop
test
push
jb
sub
nop
repz
jg
ljmp
jb
mov
and
push
adc
xlat
xor
ret
outsl
cmp
stc
add
mov
sbb
mov
mov
out
mov
push
insl
shrl
out
sub
sub
xchg
cmpsb
dec
xchg
add
in
xchg
lds
adc
sub
insl
or
clc
push
lock
xchg
mov
push
sti
xlat
mov
rcr
jg
mov
ds
leave
jno
push
dec
adc
dec
jmp
ja
outsb
xchg
in
pop
jge
jle
out
bound
pop
push
jle
sub
sub
pop
lods
push
out
jecxz
scas
mov
aam
into
fwait
rorb
mov
shll
aas
mov
imul
dec
inc
lcall
jmp
jmp
mov
out
jge
outsl
sbb
aam
loope
ljmp
ljmp
test
jmp
mov
dec
or
add
mov
fnsave
dec
push
test
mov
mov
rcl
pop
mov
or
outsb
pop
xchg
and
sub
push
push
mov
jmp
or
dec
loopne
sub
xchg
push
mov
push
or
mov
ljmp
mov
push
jecxz
sub
mov
xor
xor
fdivl
pop
and
xchg
push
gs
pushf
adc
repnz
and
fcompl
dec
movsb
test
aad
dec
rorb
jecxz
std
and
mov
xlat
jl
xor
mov
sub
adc
insb
es
fnsave
or
sub
cmpsb
push
ror
dec
dec
cs
lds
xchg
nop
nop
cltd
das
xchg
cmc
pushf
frstor
mov
flds
shlb
xor
shll
icebp
push
xchg
xchg
mov
stos
test
lret
xor
cwtl
sub
pop
inc
sub
jmp
push
push
add
pop
cli
test
js
mov
adc
dec
push
and
xchg
loope
xor
xchg
repnz
mov
inc
les
add
ljmp
lret
popf
aas
insl
mov
lods
mov
sub
mov
pop
dec
or
cmp
adc
and
or
sbb
out
test
outsl
jp
and
xor
int3
rep
dec
cwtl
pop
inc
lret
enter
ret
lcall
jg
clc
mov
pop
hlt
cli
shr
insb
or
push
sarb
lret
shlb
xor
push
les
jbe
xchg
icebp
add
cmpsb
fs
cli
pop
pop
xorl
stc
mov
push
xor
stc
fimull
push
xchg
lds
push
jae
mov
outsb
xor
push
mov
insb
push
dec
xchg
sbb
fmul
je
out
add
mov
movsb
pop
insl
cmc
mov
sbb
mov
sti
filds
fsubl
or
jbe
rcrb
rcl
mov
xchg
jb
jb
mov
and
push
loope
nop
enter
pop
adc
dec
push
adc
js
pop
push
pop
lea
push
mov
inc
aam
mov
lods
sub
cmp
mov
out
cli
fisttpll
pcmpgtd
cmp
xchg
enter
dec
cmp
into
xchg
inc
lret
aam
adc
sbb
ret
add
out
icebp
lock
shl
jns
lret
in
sub
insl
out
into
bound
fwait
push
aaa
inc
or
ret
adc
add
aad
jns
sub
xor
cltd
xor
mov
insb
xor
cltd
insl
clc
rol
cwtl
lods
push
cltd
cld
test
mov
aad
fwait
clc
scas
ljmp
ja
shrl
push
lcall
ret
loope
mov
mov
cmp
pop
mov
pop
pop
icebp
gs
ds
dec
sarl
inc
sbb
cld
pop
scas
xchg
shll
aad
lods
call
push
stos
xchg
std
inc
push
imul
xlat
fmuls
xchg
dec
or
adc
mov
xchg
mov
repz
jo
mov
mov
fidivrl
jbe
sbb
fwait
cwtl
mov
and
xor
cmp
push
dec
fistl
cltd
or
sarl
mov
movsb
rcl
jns
flds
sbb
adc
cwtl
dec
mulb
in
add
lods
or
pop
xor
addr16
icebp
xor
lea
mov
lock
or
jmp
mov
mov
mov
inc
mov
es
pop
outsb
ljmp
adc
mov
xchg
xor
sbb
pusha
cli
mov
ret
push
add
cmpb
jnp
subb
dec
mov
mov
cld
popa
jle
push
adc
mov
std
mov
sub
fs
mov
lock
xchg
test
mov
js
dec
adc
cmp
ja
xchg
ret
lret
cmp
pop
pop
push
inc
rcl
das
fstl
lret
shrl
and
dec
aaa
mov
je
and
not
fdivrl
repz
xchg
push
dec
pop
mov
mov
rcr
xchg
sbb
adc
cmpsb
push
pop
xor
or
mov
xor
cmp
data16
movsl
test
jge
sub
hlt
and
sbb
pop
and
cmpsl
add
xchg
out
orl
mov
and
xor
lahf
enter
jp
inc
pop
sub
xor
repnz
lcall
cwtl
cmpsl
sti
in
daa
inc
loopne
jns
adc
enter
jb
add
push
lea
test
and
lock
aaa
fwait
enter
mov
and
and
sub
or
cmp
insb
mov
pop
lret
dec
xchg
arpl
imul
xchg
add
adc
inc
push
xchg
ljmp
push
das
mov
push
insb
pop
add
leave
ljmp
pop
int
jns
xchg
and
subb
shlb
hlt
sarl
mov
or
test
mov
repnz
pop
cmp
sarb
or
cld
aam
cld
repnz
test
sti
in
push
adc
mull
mov
cmp
imul
sbb
vpsubb
ja
shlb
inc
mov
sub
ljmp
xor
ss
in
and
loop
jmp
addr16
adc
rorl
stos
orb
xchg
push
in
mov
imul
icebp
stos
cmpsw
lock
or
cmpsb
out
aas
dec
mov
xchg
add
or
rcll
call
je
and
daa
adc
test
jno
xor
sub
mov
lcall
int3
addr16
mulb
xchg
xor
aas
sarl
push
icebp
cmpsl
imul
jl
lea
daa
je
mov
cmp
mov
iret
pop
pushf
push
ja
and
into
stc
xchg
aam
ret
rcrl
test
fs
test
mov
mov
adc
add
pop
ret
push
xchg
push
sbb
pop
int3
sub
sbb
sub
inc
lds
jecxz
add
xor
flds
out
rolb
leave
dec
mov
aas
fnsave
hlt
ja
push
lods
daa
sahf
mov
maskmovq
imull
mov
cmp
pop
pop
outsb
xor
fiaddl
and
cld
xchg
outsl
push
and
std
leave
sbb
out
ljmp
add
jne
test
mov
js
xorl
xchg
mov
out
rolb
jecxz
rclb
mov
cs
xchg
sbb
push
xor
test
cltd
ret
imul
jae
lahf
cltd
pop
and
or
sbb
xor
push
enter
jae
pop
dec
imul
push
ret
js
cs
mov
ljmp
iret
ss
pop
ds
ffreep
mov
jbe
pop
sbb
shrb
sbb
jecxz
aad
stc
jns
mov
and
aam
mov
cmp
pusha
fsts
push
push
movsl
ffree
mov
inc
sbb
jle
mov
imul
xchg
sbb
call
push
mov
out
push
jge
sti
sub
hlt
mov
jecxz
lahf
xchg
and
push
add
mov
mov
mov
dec
jecxz
stc
decl
dec
xchg
add
add
jnp
dec
lcall
sbb
fwait
cmovne
in
push
pop
sbb
out
xchg
adc
mov
mov
mov
or
mulb
out
adc
sub
jno
fldenv
xchg
fidivrs
pop
ret
mov
mov
xor
sbb
xchg
mov
mov
imul
push
into
outsb
xor
inc
mov
xor
mov
inc
cs
jle
cli
jle
popf
xchg
rclb
ret
loopne
push
push
or
xchg
add
aam
insb
int3
aam
adc
add
jo
rcrb
mov
mov
insb
fsubrl
loope
stos
lahf
leave
dec
add
gs
push
rorb
dec
sub
sbb
cmp
dec
daa
cwtl
idivb
mov
andl
push
inc
inc
sbb
jne
jae
leave
aaa
outsl
mov
dec
fidivrl
jge
mov
movsl
fildl
movsl
mov
push
fcomps
adc
sbbb
mov
xchg
lock
lea
pop
cmp
aam
add
psubq
xchg
mov
cs
jp
xlat
aam
and
mov
or
add
sub
push
aaa
mov
movsb
mov
jle
daa
push
push
orb
cmpsb
inc
aas
jge
add
outsb
jmp
or
pusha
mov
cld
inc
cwtl
ret
adc
test
rolb
sti
pop
push
or
mov
ret
add
icebp
mov
movsl
inc
sub
sbb
sub
add
adc
aam
sbb
fldt
mov
add
cmp
je
dec
lret
cmp
sub
push
ret
loopne
and
xchg
cld
add
insb
lcall
xchg
adc
ds
mov
adc
fcomps
sbb
repnz
call
push
cltd
pop
sub
jg
xchg
clc
in
push
mov
xlat
xor
gs
jbe
ror
push
inc
ja
sbb
mov
adc
data16
xchg
movsl
jp
cmp
sti
clc
pop
out
mov
xorb
andl
rcl
sbb
sbb
lret
push
fidivl
xchg
or
push
cmpsb
dec
scas
push
sbb
aam
cs
xlat
adc
or
lahf
iret
jnp
mov
stc
or
xor
andl
loop
test
jns
cs
pop
cmp
pop
lret
lcall
bound
push
mov
mov
out
mov
xlat
cmpsl
sbb
cmp
fsubrl
jne
imul
negl
shll
jle
loopne
and
lock
lock
int
sbb
mov
fnstenv
jnp
data16
dec
jecxz
fisttps
ljmp
call
rclb
gs
call
movsb
out
bound
pop
add
data16
cmp
sbbl
fwait
and
adc
repnz
add
cmp
xchg
inc
ficompl
pop
arpl
stc
dec
movsb
pop
in
data16
es
cmpsl
inc
inc
xlat
out
icebp
shrl
das
not
fldz
jp
and
mov
push
ljmp
movsb
jecxz
push
inc
mov
or
or
add
out
loope
mov
out
adc
fwait
and
daa
arpl
in
jl
cmpsb
data16
inc
push
mov
mov
sub
add
sub
or
xchg
cmpsl
xchg
mov
or
jne
mov
test
insb
mov
add
clc
shl
jno
aaa
dec
bound
adc
aad
jae
movsb
mov
xor
clc
ret
xor
push
insb
loope
adc
push
or
add
dec
out
out
jbe
and
sti
xchg
xchg
cmp
test
adc
lock
xor
lds
dec
out
inc
out
sbb
ja
cli
loope
jg
inc
mov
add
pop
mov
xor
sti
mov
mov
push
mov
ret
cltd
jecxz
sub
dec
nop
mov
push
push
mov
addl
xor
mov
jmp
xor
insl
sub
jecxz
sub
sbb
push
sbbl
leave
lods
push
jne
cmp
mov
mov
hlt
pop
mov
fldenv
or
dec
pop
push
jecxz
mov
cltd
sbb
std
das
add
xor
and
dec
push
mov
mov
push
xchg
xchg
push
adc
test
stos
daa
sahf
fwait
sbb
fidivrs
push
in
xor
xor
cld
fsub
xchg
sub
rcll
cmpsl
or
test
xchg
mov
or
pop
cmc
ret
mov
jns
rcrb
dec
fsubrs
jne
bound
inc
outsb
cmp
xchg
mov
cmp
or
ret
xchg
push
jg
mov
fwait
push
leave
pusha
orl
cwtl
test
outsb
test
mov
adc
repnz
dec
jg
xlat
add
shl
imul
pop
inc
and
mov
jnp
pop
jecxz
pop
xchg
sbb
lret
movsb
xchg
dec
adc
pop
mov
dec
fwait
int3
mov
jb
out
mov
in
sbb
sti
sti
aam
cmpsb
sbb
pop
mov
add
pop
call
dec
in
and
cld
push
add
dec
mov
mov
mov
push
dec
cmp
pop
pop
adc
imul
loop
mov
in
je
cli
clc
stos
pop
pop
mov
mov
lahf
cli
scas
cmp
xor
xor
dec
xchg
stos
xchg
xchg
sahf
pop
test
xor
mov
cmpsl
xchg
stc
dec
popf
mov
dec
jle
cs
pushf
jp
xor
rcll
aas
les
dec
jp
lea
push
lret
movsl
sub
dec
push
fldl
mov
adc
inc
push
cld
mov
mov
lret
aas
mov
mov
aaa
int
xchg
enter
sbb
pop
push
arpl
fistps
jns
dec
xchg
sub
push
push
mov
mov
shlb
loope
enter
mov
into
jnp
ret
shlb
test
repnz
pop
subl
sub
jg
adc
es
dec
sbb
jecxz
xor
dec
pop
push
fcomps
pop
dec
out
repnz
enter
bound
push
iret
mov
sti
jae
push
sarb
xor
loopne
xchg
add
mov
add
mov
xlat
inc
fiadds
push
adc
fisubl
xor
mov
inc
pop
fcomip
loope
ret
nop
jno
jno
add
scas
movsl
mov
shlb
push
test
push
movsl
jmp
pop
mov
pop
les
mov
shll
or
push
or
and
shlb
popa
or
xor
push
jg
insl
push
push
lahf
int
stc
sbb
and
loope
pop
popa
fmuls
xor
push
xor
test
mov
cmp
sbb
es
and
movsb
gs
testb
jle
out
jmp
push
dec
xor
fcmove
xchg
mov
mov
stos
sub
je
icebp
adc
cmp
inc
cli
aaa
and
cmp
pop
mov
cmp
inc
or
fidivrs
leave
or
cltd
dec
push
ficoms
idivb
or
popf
pop
sbb
int3
mov
std
pop
mov
movsb
cmpsl
cmp
xlat
mov
sub
xchg
and
jmp
cli
sarl
adc
mov
inc
imulb
push
fbstp
iret
subb
push
dec
jnp
aad
scas
add
enter
and
jge
pop
call
mov
or
jne
shll
sub
pop
inc
mov
pusha
arpl
sti
insl
mov
jns
cwtl
xor
lods
jg
push
dec
push
je
ret
pop
cmp
jp
pop
mov
mov
push
cmc
cwtl
imul
orb
testl
fdivrl
in
and
jae
fdivrl
call
jae
pop
mov
pop
push
or
jae
out
loope
xchg
orb
imull
xor
lahf
mov
inc
lds
inc
cmpsb
pop
sbb
mov
ljmp
pop
call
pop
mul
lret
mov
dec
sbb
sahf
mov
fcom
arpl
inc
sbbl
aad
rorl
cmp
sbb
es
jne
cmpsb
pop
nop
movsb
insb
repnz
pop
push
jae
mov
mov
xor
shrl
test
aam
mov
dec
sub
scas
inc
xchg
mov
repz
xchg
ss
pop
ds
in
or
mov
ss
fcmovu
lret
pusha
repnz
inc
neg
out
lds
cmp
mov
jg
mov
sub
scas
xchg
pop
lret
rclb
pop
into
push
or
xchg
adcb
mov
pop
sub
testb
xlat
mov
sub
xor
les
fwait
and
dec
inc
xor
test
lret
jp
sub
jnp
mov
xor
testl
xchg
sub
sub
add
ja
and
das
dec
loope
dec
lds
pop
icebp
inc
push
sub
mov
mov
mov
rcl
lods
js
mov
jb
clc
add
mov
rcl
or
mov
popa
sbb
rcrl
xchg
cld
sbb
xchg
mov
cwtl
cld
cli
xor
jmp
sbb
cmp
dec
mov
divl
fst
jb
lahf
das
push
stc
lods
push
aam
popa
mov
mov
testl
dec
mov
je
out
push
and
lds
shl
push
cmp
xchg
adc
les
cmp
ss
mov
in
adc
sarl
cwtl
sbb
dec
jp
add
imul
lahf
sub
rcll
lock
xor
clc
lods
jle
sub
cmpsb
inc
loop
rep
bound
push
pop
adc
mov
cmp
stos
lret
xchg
cmc
popf
sti
loopne
cmp
aam
imul
sahf
xchg
loop
inc
xor
shll
xchg
in
xchg
lret
ret
iret
and
das
xor
aam
inc
and
cmp
repz
scas
mov
not
and
stos
addb
sbb
pop
sbb
sub
cld
adc
pop
pusha
mov
out
add
jae
shll
mov
in
adc
lea
mov
lds
outsb
mov
cs
leave
pusha
les
jne
out
out
and
fdivl
mov
test
push
xchg
xchg
enter
popa
pushf
xchg
fucom
jge
mov
je
pusha
fiadds
or
adc
rorl
cwtl
jge
idiv
mov
or
ja
sti
int3
scas
imul
in
inc
shrl
and
pop
sbb
pop
shlb
sbb
lret
imul
or
mov
sbb
in
fidivs
outsb
lock
roll
adc
inc
jno
into
mov
rorb
pop
and
cmpw
imul
sbb
insb
outsl
mov
pop
cltd
loope
sbb
test
or
sahf
or
ret
xor
movd
pop
mov
aas
jle
xchg
ret
sbb
mov
or
or
gs
imul
dec
pusha
movb
sti
sub
jl
stos
sbb
jb
pop
data16
addl
add
sub
js
cmpb
out
shrl
adc
cmpsb
fs
cltd
fisttps
jae
xorb
cwtl
sbb
std
cltd
ds
inc
jo
in
cmp
jne
pop
push
or
push
push
and
sbb
hlt
loop
sahf
out
inc
inc
add
lock
lea
cmpsl
push
adc
out
push
add
movsl
pushf
push
fstp
adc
dec
xchg
sbbl
adc
jo
dec
pop
pop
push
mov
cld
dec
mov
repz
in
inc
sub
js
jo
imul
clc
in
push
call
dec
sahf
xchg
sbb
loope
mov
add
mov
je
cmp
movsl
mov
or
aad
fisttps
ss
mov
pushf
adc
test
gs
fistps
dec
push
fstpt
xchg
mov
jo
sti
fdivl
mov
repz
pusha
pop
testb
jbe
add
push
jno
inc
test
hlt
rolb
out
rcrl
pop
fxch
cmpsl
icebp
jp
mov
mov
pop
mov
mov
shrb
sbb
sub
xchg
and
or
test
push
and
and
vmovss
mov
mov
rcrb
mov
hlt
shlb
sti
xchg
push
inc
adc
test
inc
js
icebp
xchg
jecxz
cmpsl
sub
push
scas
push
out
xor
push
sbb
in
iret
jle
mov
jmp
xor
or
jne
pop
cld
inc
pop
xor
test
iret
pop
test
jmp
or
mov
jp
pop
cmp
push
ror
push
xchg
ds
outsb
int3
mov
sub
mov
out
xor
loop
jl
mov
mov
inc
jnp
lahf
outsb
xchg
jmp
adc
jno
push
add
and
mov
test
mov
inc
adc
xlat
pusha
lds
sbb
mov
add
adc
ret
fidivs
insl
hlt
mov
fnsave
out
imul
les
xchg
mov
jmp
lock
andb
cld
mov
sbb
shlb
jo
fwait
jb
xchg
xchg
std
fiadds
aad
cmpb
cmp
xchg
jecxz
insb
push
sti
cmpb
ljmp
dec
repz
mov
mov
add
je
loop
mov
lret
cltd
sti
mov
xchg
push
and
jbe
jl
pushf
stos
into
stc
cltd
fs
dec
pop
or
or
dec
sbb
push
mov
nop
pop
mov
jbe
cmpsl
or
data16
mov
movsb
add
inc
stc
push
xchg
lret
inc
push
lret
jne
sbb
mov
scas
in
jge
xchg
sub
aam
int3
sti
adc
or
inc
addb
mov
mov
mull
cs
addr16
dec
int
inc
adc
or
cltd
inc
mov
out
sub
xchg
adc
ret
sbb
out
dec
sub
sub
or
xchg
sti
adc
sti
in
stc
aas
push
xchg
xorb
sbb
dec
xor
mov
jle
fcmovb
fsubp
fimuls
mov
pushf
ffreep
iret
cltd
mov
or
repz
cmpsl
jbe
in
shll
push
lods
ljmp
mov
add
mov
dec
stos
sbb
sbb
or
std
in
xchg
loop
pusha
mov
daa
xchg
mov
dec
mov
addr16
not
xchg
inc
adc
popa
push
adc
add
fcoms
mov
add
mov
inc
inc
aam
imul
sbb
jb
xor
sbb
rolb
and
jl
cmp
dec
cmp
mov
xorl
inc
push
lock
cmpsl
cli
fldenv
mov
mov
adc
es
dec
sti
in
in
pop
dec
xchg
repnz
inc
cwtl
add
scas
push
and
daa
out
les
clc
push
adc
xchg
mov
daa
dec
cltd
fildl
mov
jg
mov
es
mov
fildl
outsl
hlt
rcl
sbb
pop
iret
ss
mov
push
jmp
mov
fldenv
mov
xchg
dec
clc
scas
loopne
lahf
repz
mov
dec
insb
rcrl
xor
mov
sub
and
std
jl
call
add
je
clc
mov
push
pop
bound
aaa
jno
and
loop
int
add
das
mov
jle
clc
adc
pop
loopne
fmuls
mov
mov
in
add
shl
jo
sub
xchg
sbb
out
push
xchg
stos
pop
call
fcmovnu
push
repz
orl
adc
mov
pushf
mov
stc
shll
mov
cmp
pop
sub
jo
adc
xlat
ss
xor
jo
or
lea
fstpl
in
popf
jecxz
bswap
push
fcoms
jns
xor
nop
dec
push
mov
jno
addr16
mov
push
mov
insl
dec
shlb
adc
push
pop
cmp
cmp
in
cmp
nop
cltd
hlt
mov
shld
sbb
test
inc
mov
fmull
lods
mov
cld
cmc
push
pop
bound
xchg
in
pop
stc
sbb
js
or
sahf
or
adc
out
jbe
out
pop
cmp
sub
xlat
inc
sub
jb
add
xchg
adc
movsb
pop
daa
xchg
cmp
xchg
mov
fildll
dec
cmp
push
or
xor
mov
hlt
dec
xor
push
lahf
shll
add
or
xor
or
adc
data16
sar
jmp
test
xor
mov
movsl
pop
adc
ja
scas
aad
push
pop
test
sbb
rclb
insb
xlat
jecxz
jb
in
icebp
mov
movsl
test
loop
frstor
in
pop
fistps
iret
push
popf
cmp
mov
ret
ds
mov
jecxz
out
into
mov
or
lcall
lds
sub
lahf
and
dec
iret
sbb
dec
lret
out
mov
inc
inc
jp
jae
adc
jbe
xor
je
stos
cwtl
shll
call
xchg
xor
shl
inc
pop
in
hlt
add
push
ja
push
jg
jne
xor
icebp
int3
jb
dec
fdivs
imul
pop
pop
or
call
inc
inc
mov
or
mull
lahf
xor
sub
notb
int3
sahf
push
fmuls
cld
add
imul
das
repz
in
jno
stc
sub
inc
push
cltd
inc
shlb
sbb
push
push
xor
jo
pop
hlt
add
out
pushf
lahf
add
loope
cmp
sub
test
sahf
addr16
xor
fadd
ret
inc
das
out
dec
cs
pop
test
test
jae
cmc
dec
adc
mov
nop
xor
ds
fisubrs
cli
and
add
jge
pop
jno
push
xor
popa
shrb
cli
sub
mov
lret
imul
shlb
in
or
add
setbe
push
cli
pushf
cs
or
out
xchg
add
scas
jns
enter
shlb
xchg
sub
dec
lahf
lds
sbb
icebp
mov
lds
cmp
bound
popa
push
jnp
aaa
sbb
ljmp
cli
cmp
add
mov
outsl
es
push
in
pop
fildl
aad
popa
sbb
add
adc
pop
in
ja
or
outsl
sbb
xchg
outsl
mov
jbe
call
or
adc
push
aaa
test
mov
lahf
inc
loopne
hlt
xor
pop
les
in
fs
mov
dec
subb
adc
lods
std
enter
jl
and
sbb
inc
cmp
add
cmc
jp
mov
xchg
sti
nop
inc
imulb
loop
mov
stc
inc
pushf
bound
and
cmc
bound
test
dec
movl
fcomps
dec
jnp
mov
mov
sarl
adc
adc
jbe
adc
mov
dec
lds
outsb
aad
xor
fcomp
loope
mov
clc
cmp
cmp
sub
roll
add
pushf
lahf
js
pushf
out
in
js
mov
pop
out
adc
stos
lds
sahf
rcrb
hlt
xor
enter
lret
and
aas
xlat
adc
pop
scas
hlt
jbe
ds
into
and
adc
jp
nop
lcall
mov
jns
jp
fwait
xchg
push
inc
mov
cmp
mov
push
inc
pusha
or
mov
negb
lret
cmc
ret
mov
ljmp
inc
mov
lods
mov
cwtl
or
mov
push
insl
mov
xchg
jge
sub
jge
std
lock
or
mov
cmpsl
mov
or
dec
ds
test
push
add
mov
movsb
movsl
jns
pop
sub
fsubrs
cmpsl
add
inc
and
scas
lods
jne
cmp
push
mov
jge
and
xor
jle
cli
and
shr
push
jge
arpl
mov
pop
xchg
arpl
sub
imul
push
icebp
repz
pop
add
sbb
fdiv
mov
lods
pop
dec
mov
dec
mov
xor
dec
js
vminsd
push
dec
add
popa
cmpsl
lcall
std
fwait
loope
xchg
mov
inc
dec
leave
dec
xor
inc
and
mov
inc
lret
mov
xlat
or
and
loope
stos
mov
cmp
rclb
mov
int3
lahf
cmp
das
aaa
push
addr16
pop
std
cmp
inc
mov
pop
inc
in
jle
pop
and
enter
mov
or
pop
or
mov
enter
cli
inc
lock
mov
in
cli
call
shl
mov
js
scas
inc
shll
cmp
das
sub
sub
loope
and
jb
sub
mov
push
lret
mov
enter
inc
mov
std
pop
mov
sub
mov
mov
mov
pop
push
fs
lods
xor
popa
jmp
insb
icebp
das
cld
out
jne
mov
repnz
movsb
dec
inc
int3
cwtl
and
mov
xchg
call
adc
hlt
mov
sbb
testb
movsb
jno
lcall
inc
fistpl
pop
jp
aas
pop
mov
test
and
xor
imul
fmuls
or
jae
push
les
pop
add
in
clc
out
inc
mov
add
lret
lret
fcomi
cmp
cmp
jecxz
add
sti
xorb
cmp
js
add
sub
cmpsl
stc
repnz
push
sbb
push
pop
add
inc
cmp
jg
jl,pn
cmp
pop
dec
push
outsb
cmp
cld
adc
aaa
cmp
mov
mov
adc
je
daa
stos
cwtl
fisubs
insl
or
inc
push
les
sbb
ret
sub
loope
sub
out
push
inc
mov
rcll
adc
repnz
enter
ficomps
out
pushf
lret
leave
sub
inc
shlb
cmpsl
cld
dec
mov
stc
daa
and
fists
jae
cmp
out
arpl
cmp
xchg
sbb
jnp
cmc
xchg
andb
and
mov
pop
push
cmp
push
loope
das
int
popl
repnz
hlt
sbb
inc
jb
xor
mov
mov
mov
jmp
pop
xorb
xor
test
fs
adc
pop
test
hlt
sub
dec
xlat
xlat
lock
outsl
pop
arpl
jg
sbb
stc
inc
mov
test
dec
in
js
lcall
test
shrl
inc
addl
jmp
cwtl
xchg
loope
subb
cmp
add
and
xchg
sar
aaa
cltd
push
xor
and
pop
jecxz
jbe
xor
or
pop
adcb
mov
xor
sub
xchg
cli
jnp
lret
jns
icebp
and
fisubrl
sar
lods
push
cmp
lea
xchg
jle
xor
cmp
stc
pop
lods
xchg
cmp
data16
push
out
pop
jns
pushf
push
loop
dec
cli
cmp
jb
pop
or
cmp
pop
bound
jb
xor
inc
xchg
test
jg
insl
fsubs
fcompl
push
fistpl
and
fsts
xor
pop
sbb
cmp
dec
idivl
cmp
into
ja
jge
sub
cmc
xchg
xchg
mov
ficoms
fisttpll
jg
fnstenv
fists
mov
sbb
sbb
scas
aad
mov
sub
mov
mov
clc
add
or
pop
lcall
dec
and
movsl
nop
mov
mov
bound
sub
jns
cmp
add
stos
xchg
dec
das
repz
lds
push
dec
xor
xor
add
xchg
fwait
sbb
ds
jg
sarb
inc
mov
jmp
pushf
mov
xor
pop
lods
sbb
xlat
stos
idiv
cs
popa
int
inc
sub
inc
hlt
in
into
ds
jp
mov
xor
enter
xchg
xlat
inc
aam
mov
xchg
adc
add
or
mov
mov
cmp
mov
adc
xchg
push
dec
sahf
dec
jp
stos
xchg
jbe
sbb
inc
mov
lods
pop
pop
gs
scas
cld
mov
popf
in
nop
mov
or
push
xchg
pop
mov
inc
sar
pop
push
jno
adc
sub
popa
icebp
into
imul
inc
ljmp
mov
mov
roll
xchg
hlt
dec
jmp
scas
inc
lahf
cmp
jo
xor
aam
repnz
mov
dec
jle
push
cli
mov
fs
mov
fdivrs
sub
mov
int3
lods
mov
repz
mov
movsl
sbbl
ret
jnp
dec
pop
das
xchg
lock
out
jg
cmc
pop
and
nop
xor
pop
mov
jp
iret
fdivrl
rorl
ljmp
mov
or
xor
push
sub
test
adc
ret
push
cltd
sub
hlt
mov
xorl
adc
push
cld
sbb
rcr
in
mov
adc
nop
xor
imul
mov
cltd
inc
fwait
xor
inc
leave
or
das
pop
adc
test
pop
movl
add
sub
push
add
rorl
mov
ret
jbe
in
mov
fsubr
in
mov
and
and
pop
sub
cltd
in
push
push
ja
mov
xor
repnz
cld
inc
add
inc
mov
mov
int
imul
mov
arpl
inc
sbb
or
inc
scas
aad
pop
movsl
or
fcmove
icebp
dec
add
in
repnz
jecxz
jl
cmp
mov
adc
push
push
xor
push
rcl
mov
call
cmpsb
push
or
xlat
mov
flds
jp
xchg
sbb
nop
dec
stos
cmp
xor
push
dec
xor
sbb
dec
push
scas
inc
enter
lahf
arpl
into
enter
out
dec
push
cmp
jp
jne
or
in
add
or
cmpsl
mov
int
and
mov
call
cmc
xchg
sbb
or
or
inc
push
fstps
das
imul
push
dec
mov
push
mov
and
pop
fistpll
call
cmc
lcall
xor
mov
je
lods
cld
in
call
icebp
mov
sbb
cmp
scas
cmp
and
pusha
jmp
mov
jl
push
push
push
je
mov
insb
pop
mov
inc
fistps
cmpsb
inc
or
shl
sub
aas
mov
mov
jge
pop
in
jg
mov
sub
cwtl
sub
jge
lds
push
sbb
icebp
sub
sub
cmpsb
sbb
inc
scas
shlb
loopne
or
sbb
adc
jae
jns
subl
mov
loope
dec
cwtl
clc
mov
mov
lock
pop
sub
mov
or
xor
movsl
xor
jnp
les
and
mov
repz
push
cmp
and
inc
jb
jge
push
ds
in
inc
pop
and
dec
cmc
inc
dec
stc
int
dec
and
cmp
mov
rolb
pop
push
mov
rcrb
aad
rcrl
dec
femms
pop
imul
imulb
test
jmp
shlb
mov
repnz
jo
in
mov
aad
call
pushl
mov
out
jge
jae
add
fsubr
mov
js
outsb
sbb
and
mov
cvtpi2ps
push
std
cltd
sbb
jb
adc
cmc
push
insb
xchg
outsl
cld
jle
sbb
dec
dec
xor
fnstenv
add
mov
js
add
test
sub
lret
sbb
aad
daa
pop
nop
je
les
lods
testl
mov
push
pop
inc
or
lahf
push
inc
arpl
rorb
and
test
mov
fadd
xchg
add
lods
call
arpl
adc
imul
stc
out
mov
in
test
stc
sbb
mov
and
mov
pop
mov
mov
insb
mov
js
inc
pop
and
mov
mov
bound
jae
into
hlt
mov
cmpsb
xchg
xchg
pop
jne
test
dec
es
test
adc
out
je
add
cmpsb
dec
outsb
cs
aam
lea
or
and
inc
cmpsl
cmc
ret
out
jo
mov
cmp
out
fstpl
pusha
or
out
inc
dec
adc
pushf
pop
outsb
ret
movsl
movsb
orb
sbb
rolb
pop
gs
ljmp
cmpb
push
and
jbe
pushf
nop
cmp
divb
cmp
arpl
dec
popl
lea
test
scas
jae
dec
pop
cld
das
dec
inc
and
inc
cmp
cmc
sahf
sbb
mov
mov
fldpi
dec
inc
jge
adc
mov
jle
ret
aad
jp
stc
mov
mov
cli
dec
and
stos
daa
into
pop
enter
mov
mov
lock
or
cltd
imul
leave
jno
test
hlt
inc
push
stos
out
xchg
lods
fwait
ss
cwtl
imul
sti
sahf
repz
imul
mov
cli
sub
pop
stc
push
pop
sub
lahf
push
dec
jg
push
loopne
das
shlb
fwait
xchg
sbb
cmpl
in
xchg
test
inc
mov
jl
ljmp
rcll
or
xor
mov
sbb
test
mov
mov
push
sbb
jbe
aaa
xchg
pop
gs
mov
push
insl
je
mov
push
and
jecxz
jo
stos
pusha
je
imul
sub
cs
and
es
push
out
push
push
fs
pop
and
mov
jecxz
push
mov
push
stc
stos
cmp
popf
lret
mov
and
pop
push
push
mov
inc
cmp
pop
nop
add
out
xchg
adc
bound
cs
fistps
test
or
jmp
push
mov
xchg
mov
or
mov
ja
xchg
and
mov
iret
cmp
adc
xor
stos
popa
mov
mov
mov
cmpsb
push
push
shll
clc
xor
nop
pop
mov
adc
mov
xor
sub
ss
sub
push
repnz
jns
popa
xchg
sar
pop
fucomip
push
and
jnp
data16
push
cmp
in
in
stos
cwtl
or
daa
mov
pop
pop
mov
push
in
mov
pushf
xchg
test
popa
sbb
fstpl
cmp
mov
cmp
cmp
movsb
pushf
movsl
inc
aas
sbb
adc
je
add
mov
sbb
push
push
pop
push
popa
ljmp
adc
inc
adcl
rcl
jae
push
mov
bound
adc
fldcw
test
mov
push
icebp
inc
inc
sbb
je
lds
xchg
in
sbb
mov
adc
popf
insb
pop
or
pop
loope
js
iret
das
xlat
mov
mov
xor
mov
scas
rcrb
sti
loope
into
sarb
mov
and
sahf
pop
lret
es
mov
ret
push
pop
sahf
test
xchg
inc
cmp
faddl
sbb
ss
push
xor
mov
dec
and
in
xor
jo
jb
sar
imulb
pop
sar
mov
sahf
dec
inc
sbb
sbb
add
jne
mov
fbstp
loope
or
insb
add
jo
mov
scas
pop
std
adc
fadds
jo
sbb
and
xchg
or
sub
adc
sub
dec
xchg
nop
xor
xchg
pop
pop
loopne
inc
sub
cltd
sbbl
inc
lahf
xchg
jnp
xor
das
js
stos
filds
push
adc
in
push
subl
sahf
cltd
fidivrl
insl
rclb
adc
dec
cld
sti
icebp
cmpl
lods
sbb
jge
mov
testb
xchg
push
fcom
dec
imul
cmpb
les
aas
sti
arpl
ret
or
pop
add
mov
cmp
xchg
inc
jp
mov
lock
call
xlat
adc
pop
mov
sub
xor
or
hlt
push
pop
pop
or
hlt
lahf
lret
push
cmp
clc
push
xchg
push
in
andb
ds
sub
pop
mov
cmp
mov
ss
sub
loope
dec
outsl
cld
mov
call
lahf
push
test
jbe
mov
cltd
add
inc
popf
lods
sarb
mov
xchg
outsb
xlat
call
jnp
xchg
lock
aas
push
jo
sbb
dec
cli
sub
add
shrl
push
movsl
sub
mov
cmp
fcom
out
cmp
push
sbb
add
jns
lock
xchg
neg
lods
jg
xchg
fwait
nop
mov
leave
data16
ss
sbb
sbb
pop
outsb
fiaddl
aas
or
sub
cltd
les
int3
test
mov
lahf
xchg
lods
xchg
je
jge
xor
popf
jmp
fldenv
shl
and
jge
insb
psubusw
xor
testl
in
test
shll
movsl
gs
aas
mov
mov
inc
dec
aas
jae
inc
xchg
xchg
fsts
pop
lret
cli
imul
adc
cmp
addr16
dec
repz
aaa
inc
rcrl
xor
xchg
adc
jb
popa
inc
popf
aam
cmp
or
arpl
or
xchg
cmp
into
aad
les
xor
or
in
in
and
xlat
loop
jecxz
bound
pop
outsb
cld
xlat
jmp
sub
fimuls
sub
imul
nop
ss
dec
ficompl
mov
cmpsb
outsb
cmp
nop
mov
jno
sub
in
xlat
rolb
not
dec
icebp
push
into
pop
mov
xchg
push
in
dec
mov
pusha
pushf
xchg
mov
fdivrl
jp
cli
cmc
add
pop
shll
into
push
lods
xchg
ret
out
cmc
and
out
dec
jne
xchg
ret
imul
int3
and
xor
dec
addr16
push
test
or
insl
sahf
push
jnp
dec
mov
arpl
sub
out
and
dec
xorl
pop
cmp
xchg
aas
mov
fsubr
fsubrl
jnp
xchg
xchg
cmp
jae
in
dec
movsb
repnz
fxch
mov
inc
rol
mov
mov
pop
repnz
inc
xchg
mov
and
jb
xchg
ss
hlt
inc
adc
shlb
arpl
ret
dec
mov
push
mov
jns
pop
lahf
push
mov
cs
mov
cmp
aam
mov
xlat
sbb
adc
sub
push
and
mov
iret
addr16
push
data16
outsl
pop
cmp
inc
mov
jle
or
lods
jecxz
hlt
lods
adcl
push
negb
insb
mov
xchg
add
out
mov
popf
popf
ja
add
sbb
in
imul
mov
ret
jnp
pusha
mov
jle
adc
pop
imul
jbe
mov
out
imul
sub
sbb
sbb
fisttps
cmp
mov
mov
les
fldt
out
dec
nop
cmpsb
pop
dec
pusha
adcb
mov
mov
xchg
in
je
push
stos
les
lahf
add
data16
sbb
call
into
mov
cmp
jg
gs
xor
push
iret
clc
popf
test
push
add
iret
in
pop
insb
mov
aas
daa
call
andb
xchg
mov
cli
add
fisttpl
pop
sbb
fucomip
lods
sbb
addb
push
ficoml
ja
movsb
mov
insl
jmp
aad
sbb
fnstsw
aad
fisubrl
cmpsl
shlb
sub
pop
aam
and
pop
or
das
into
and
cmpsl
in
xlat
dec
sbb
sahf
mov
pusha
jo
jbe
adc
xlat
jl
packsswb
repz
mov
xchg
dec
push
push
fiaddl
adc
xchg
mov
mov
daa
popf
rcrl
adc
xchg
mov
cmpsb
leave
inc
push
jno
add
cli
pusha
nop
xchg
pop
es
cmpl
mov
push
mov
in
jle
out
mov
es
cld
fsub
jecxz
stos
icebp
push
loop
mov
loop
fstp
je
or
or
int
push
add
pop
insl
xchg
mov
dec
mov
adc
push
pop
mov
mov
lret
imul
fidivrs
repnz
fstl
sub
adc
dec
sub
mul
xor
inc
mov
jnp
repz
mov
lock
add
jp
stc
cs
push
cltd
pusha
rcrl
aam
add
adc
in
lret
insb
pushf
mov
movsb
fistpl
cld
pusha
popf
cmp
insb
push
jb
dec
and
adcb
lahf
sahf
test
aas
cmp
or
xor
push
shlb
sahf
imul
fnstsw
push
pop
mov
mov
sbb
mov
imul
sub
pusha
sub
dec
mov
pop
aaa
sub
cld
sbb
stos
xchg
popa
xor
jge
adc
sub
xor
andb
fmuls
test
sub
mov
inc
cli
addr16
aaa
mov
xchg
or
xor
leave
push
js
xor
outsl
jl
cmpsb
pop
and
inc
pop
outsl
cmc
dec
loope
cltd
xor
testl
mov
mov
sub
in
pop
pusha
or
jge
bound
xchg
sub
jl
ds
aam
push
or
sub
pusha
mov
xor
iret
mov
pop
loopne
xchg
mov
sub
mov
loope
bound
or
cltd
push
pop
out
jo
pop
loope
stos
mov
push
das
and
jge
cmc
lods
clc
ds
inc
pop
mov
push
dec
xchg
jge
aam
and
pop
xlat
xchg
or
pop
fidivl
aas
test
scas
sahf
fcoml
cmp
nop
sub
xchg
sub
imul
daa
loop
jb
sbb
sub
xchg
xchg
sti
jb
test
pop
pushf
lock
insl
movsb
int
push
inc
mov
adc
pop
and
rolb
jbe
jbe
rcrb
ss
nop
daa
mov
cmp
shll
inc
mov
adc
xchg
mov
cmpsl
subl
out
pop
lahf
inc
mov
or
or
dec
cld
push
cwtl
stc
jge
pop
adc
sti
fisubrl
add
push
xchg
mov
cmp
and
iret
pop
push
mov
repz
es
rcr
call
and
push
mov
push
cmp
addb
inc
lahf
pop
xchg
jnp
cmpsb
addr16
xor
cmp
lea
pop
jnp
fsubrs
jo
repnz
out
andb
sub
xchg
addb
ja
mov
cld
jno
test
jle
adc
mov
fbstp
iret
stos
mov
jno
data16
das
mov
inc
ret
mov
inc
scas
or
jne
jne
bound
pop
adc
mov
pop
rorb
mov
pop
pushf
loope
cli
xor
rcrl
push
mov
jnp
sub
js
sbb
cli
mov
test
rcl
lcall
ficoml
xor
ret
sahf
dec
pop
aam
sti
mov
cmp
mov
js
xor
scas
out
hlt
sbb
lods
dec
ret
ds
adcb
xor
les
das
pop
mov
pop
ljmp
cmp
les
push
fistpl
pop
lret
pop
gs
push
inc
lods
test
adc
jge
dec
xlat
lods
mov
xor
sub
icebp
push
add
sbb
mov
mov
sahf
daa
jle
jnp
movl
jo
ja
sbb
sbb
in
out
repnz
clc
mov
rclb
int3
xchg
aam
lods
fcmovnb
hlt
cltd
inc
push
test
push
xor
lcall
mov
scas
in
pop
leave
cmp
dec
fldl
sbb
xchg
xor
pop
jl
scas
fnstenv
in
dec
cmp
mov
mov
mov
mov
jmp
adc
inc
repz
lea
pop
push
dec
loop
cmp
dec
mov
in
dec
inc
in
jns
push
and
xchg
xchg
pop
xchg
push
jg
dec
and
or
adc
fdivl
shrl
sbb
mov
mov
fisttpl
lahf
fnstcw
gs
sub
pop
mov
imul
add
mov
aas
xor
ret
pop
add
and
xor
aas
push
and
mov
sub
mov
out
fisubrl
cli
lahf
jl
shlb
dec
mov
pop
xor
ret
mov
mov
stos
pusha
int
fcmovu
popf
sub
pop
jl
mov
add
push
mov
mov
jnp
iret
lahf
sbb
pop
sbb
cmp
xchg
xorl
inc
sbb
nop
mov
mov
out
nop
mov
loope
mov
xor
xor
mov
push
mov
inc
daa
mov
shll
fstl
pop
xchg
pop
lret
test
rcl
cmp
jae
adc
std
cmpsb
push
and
stos
pop
jl
dec
aaa
stos
cmpsl
push
icebp
pushf
jge
push
icebp
aam
jne
sub
push
lock
cmpsl
push
aad
pop
or
mov
lahf
dec
xchg
insl
inc
mov
add
out
mov
mov
lods
addl
ret
int3
nop
out
inc
and
add
add
outsb
mov
fwait
adc
stos
testl
es
out
test
mov
ljmp
cmc
sbb
movsb
insb
lret
mov
xor
jbe
and
push
xchg
bound
in
xor
and
jno
pop
imul
mov
shll
sub
pop
loope
mov
inc
test
mov
stos
rorl
arpl
mov
mov
dec
int
or
and
xor
std
add
xchg
sbb
fsub
aas
jmp
mov
adc
jecxz
in
dec
into
push
mov
add
mov
mov
pop
rolb
push
push
and
subb
lods
or
fdivr
dec
jl
xlat
mov
pushf
lods
inc
hlt
leave
dec
pop
outsb
push
lahf
sbb
clc
mov
cmp
jno
aad
cltd
shl
fwait
in
orb
in
push
xchg
stos
stos
pop
pop
dec
sahf
xchg
mov
sbb
cmc
or
sub
loop
cmpsb
jp
xchg
ja
xchg
pop
xchg
jecxz
xor
jl
pcmpeqb
jb
lods
sub
pop
popf
push
jb
dec
xor
stc
in
repnz
repz
fcmovu
push
fsubrs
shlb
hlt
movsl
mov
loop
push
adc
xchg
add
adc
inc
push
inc
and
lcall
and
daa
add
and
iret
repnz
sub
adc
pop
and
idivb
mov
test
pop
pop
or
adc
xchg
pop
bound
inc
cmp
mov
or
dec
lods
push
inc
test
stos
push
mov
fwait
stc
arpl
addr16
push
push
sbb
outsb
mov
mov
inc
cmp
jb
icebp
lea
sbb
lock
inc
icebp
pop
adc
pop
aaa
jge
aad
jmp
inc
aad
sbb
call
cmp
notb
pop
int
push
das
sub
mov
out
inc
lret
or
ljmp
mov
adc
mov
mov
mov
incl
mov
icebp
cli
sub
inc
cmpsw
stos
mov
rorb
fcmove
pop
lea
mov
mov
and
ficoml
movsb
mov
adc
fs
cli
ret
jbe
cli
popa
jecxz
or
push
jmp
popf
sarl
mov
mov
mov
mov
sbb
roll
xchg
lahf
sbb
or
dec
xlat
sahf
sahf
out
pop
iret
outsl
or
or
std
in
idiv
sahf
and
push
push
cltd
mov
fnstenv
pop
jns
cmp
test
into
jb
xor
adc
pusha
xlat
nop
sub
dec
outsb
xor
pushf
pushf
idivl
and
xor
xlat
aas
outsb
mov
loop
rorl
mov
jb
mov
vmulsd
cmp
jg
jle
pop
out
inc
adc
mov
fs
in
mov
xorb
rorb
js
pop
cmpl
jo
out
cltd
mov
pop
or
inc
xchg
repz
js
jae
cmp
xchg
stos
mov
test
inc
mov
mov
lods
add
or
outsl
mov
or
call
cltd
fidivs
jnp
call
xchg
mov
adc
loop
int
pop
out
sbb
push
cmp
xchg
cmp
mov
xor
mov
test
repnz
mov
and
jne
pop
jo
push
mov
cmp
xor
and
dec
in
inc
hlt
adc
into
add
pushf
jae
cmp
mov
dec
repnz
dec
adc
or
xor
shl
mov
int
test
ja
es
hlt
popf
sub
test
xor
das
and
or
add
inc
push
fcmovnb
xor
dec
dec
and
dec
aam
dec
add
movsl
push
cmp
jbe
xor
sbb
push
inc
mov
cmpsb
adc
mov
gs
inc
and
aam
and
push
jb
xor
fadds
std
outsb
mov
sbb
cmp
mov
fnsave
outsb
jmp
mov
pop
adc
mov
push
lret
xor
jge
popa
ret
dec
xor
push
pop
out
and
cld
and
pushf
mov
sbb
add
or
loop
sub
mov
cmovs
lods
inc
adc
inc
inc
outsl
mov
cld
mov
in
call
lret
pop
int3
stos
jb
add
sbb
adc
push
nop
push
fwait
pop
pushf
pop
iret
int
mov
les
stc
or
mov
jno
sub
inc
sbb
sub
jmp
in
xchg
xor
jp
pop
xchg
fsubr
mov
push
mov
les
inc
jmp
mov
jp
add
repnz
outsl
and
add
dec
fs
nop
bnd
dec
cmc
ret
push
sbb
pop
cwtl
fistl
push
rolb
dec
jo
std
call
mov
xchg
adc
pop
lock
std
aaa
nop
clc
in
or
xor
pop
mov
cld
push
addr16
movsb
add
dec
daa
push
pushf
xor
popf
sbb
cmp
in
mov
es
jbe
xchg
inc
dec
test
inc
mov
adc
cmc
mull
inc
or
xchg
popf
dec
data16
fs
and
stc
jle
push
js
jns
xor
dec
daa
insb
mov
pop
rcrl
pushf
jae
js
pusha
lret
inc
sti
lods
push
and
movsb
xor
xchg
dec
fwait
dec
xchg
dec
pop
imul
jl
xchg
sub
ret
mov
jnp
or
push
in
mov
andl
movsb
mov
jle
xchg
add
inc
in
mov
inc
jecxz
clc
notl
pushf
int
ret
adc
mov
std
mov
jo
add
pop
mov
xchg
std
xor
inc
inc
add
clc
dec
or
add
cmpl
dec
jecxz
fwait
rorb
scas
xor
into
pop
add
out
enter
or
and
enter
xor
es
fwait
ss
pop
or
jge
add
cmp
mov
scas
inc
add
pop
mov
add
hlt
mov
dec
ret
xchg
dec
loopne
loop
dec
clc
out
fimuls
sub
jp
mov
pop
dec
cmp
test
in
mov
js
stc
cmpsb
loop
cs
dec
testl
inc
repz
lods
jnp
push
push
mov
or
out
sti
test
pop
mov
lock
add
jmp
jp
dec
jbe
enter
insl
aaa
iret
cmpl
jne
mov
repz
xor
je
or
repnz
pop
push
mov
add
ljmp
cmc
add
jecxz
in
cli
pushf
ret
jecxz
adc
outsb
cli
aas
xor
imul
dec
dec
lds
rcll
in
xchg
fcoms
sbbb
mov
data16
fistpl
iret
outsl
mov
push
adc
adc
add
sar
jp
jle
inc
dec
jbe
mov
sub
cmpsb
jge
aaa
mov
and
push
movsl
mov
cs
xchg
mov
nop
push
movsb
test
pop
dec
xor
es
xlat
adc
mov
repz
pop
leave
add
sub
xor
push
stc
pop
imul
push
scas
xchg
test
rolb
fidivrl
repz
jge
cmp
lds
mov
dec
aam
insl
fldt
and
sbb
xor
cmp
cmpl
mov
outsl
xor
cmpsb
and
out
add
adc
repz
mov
das
rolb
scas
ret
insb
lock
sbb
pop
fildl
pop
mov
and
lret
add
bound
ja
mov
addb
mov
push
or
clc
pop
mov
scas
dec
pushaw
mov
cmp
das
mov
and
adc
jnp
or
rcll
mov
pop
jg
inc
mov
mov
and
push
stos
mov
call
shl
inc
mov
scas
adc
js
mov
mov
es
test
xor
popf
add
lods
sub
jge
pop
aad
shr
add
push
nop
push
bound
pop
sarb
out
inc
stos
aad
fwait
fwait
into
out
pop
daa
das
lds
mov
bound
push
test
xor
leave
fyl2xp1
imull
and
dec
add
sbb
xor
std
leave
enter
xchg
int
loopne
je
clc
sbb
adcb
xchg
mov
pop
and
pop
stos
mov
xchg
push
xchg
mov
xchg
xor
push
incl
xchg
ljmp
pop
dec
stos
mov
outsl
or
test
insl
gs
add
jmp
xchg
fneni(8087
scas
sub
dec
loopne
xor
ret
dec
mov
or
outsl
mov
mov
adc
or
je
cmp
cmpsl
inc
push
fwait
aad
pusha
js
cmpl
inc
rep
fmul
dec
repz
mov
adc
out
stos
mov
push
push
loopne
adc
mov
test
add
xor
daa
fisubs
lret
mov
sub
and
inc
mull
push
lcall
fimull
es
outsl
inc
cltd
and
xchg
test
mov
fidivs
mov
xlat
xchg
rorb
das
rcrl
ret
jecxz
sti
xchg
les
pop
std
xor
iret
sbb
inc
data16
js
xchg
sbb
push
or
std
xor
cmp
push
push
xor
in
lcall
mov
and
movsl
sub
je
or
push
in
das
inc
into
ja
ret
push
xor
in
jp
fstp
in
fs
or
mov
movsl
movsl
xor
and
pop
lea
mov
jl
cwtl
js
imul
pop
adc
adcb
adc
fwait
cmp
in
pusha
sbb
cmp
fmuls
lods
clc
out
fwait
mov
dec
cltd
add
sbb
pop
pop
or
mov
loope
stos
popf
movsl
in
jl
and
shrb
mov
jmp
xchg
or
jecxz
arpl
dec
iret
call
fwait
jge
sbb
mov
roll
mov
cmpl
ret
int
jmp
mov
inc
push
jl
adcb
mov
push
lcall
pop
sbb
fs
pop
xchg
icebp
sub
inc
and
pop
adc
or
mov
push
mov
mov
fcoml
addr16
add
mov
push
adc
mov
dec
cltd
mov
popf
and
jb
xchg
aad
fstpt
movsl
xchg
test
dec
sub
aad
xchg
push
xchg
arpl
clc
jge
cmpsl
hlt
and
pop
test
insl
or
jl
cmpsl
movsb
sbb
inc
sahf
mov
pushf
lahf
lret
mov
xor
jmp
adcb
xchg
lret
inc
cmp
mov
insb
jle
pop
pop
or
mov
inc
jge
xchg
add
and
mov
pop
stos
sub
mov
mov
sbb
inc
mov
pop
cs
xor
xchg
lret
mov
cmp
and
aam
sub
mov
fcompl
hlt
sbb
push
mov
repz
sub
andb
mov
fisubrs
iret
and
mov
js
mov
fisubrs
and
cmp
push
mov
fwait
push
cmc
cli
ret
sub
lods
leave
mov
mov
sbb
repnz
insl
inc
mov
arpl
adc
dec
loope
add
add
adc
shlb
mov
mov
pop
mov
or
andb
out
xchg
int3
and
mov
cmp
and
xchg
cwtl
and
lds
das
sahf
cmp
imul
add
dec
call
mov
jnp
and
sahf
xor
push
ljmp
imulb
imul
addr16
cmpsb
and
mov
loop
mov
ss
jl
xlat
scas
pop
push
mov
stos
sub
pop
sbb
jecxz
inc
ja
loop
sub
inc
fsubrp
mov
dec
mov
ds
cmpsb
xor
mov
mov
mov
aad
and
mov
add
cmp
pop
sub
out
jnp
jne
add
pop
mov
js
push
stos
rclb
cmpsl
xchg
sub
sub
aam
scas
out
adc
jp
jmp
mov
int3
aam
jne,pn
jle
mov
add
push
jge
fwait
nop
xchg
icebp
xor
mov
jg
in
mov
int
lods
fwait
xchg
into
imul
jmp
outsb
out
punpckhbw
shr
push
jle
jae
test
xchg
xchg
test
cmp
cld
pushf
test
out
pusha
dec
stc
mov
pop
mov
aam
mov
in
inc
shll
orl
inc
add
ffreep
dec
out
jae
orl
cmpsb
adc
fbstp
repnz
jno
outsb
push
and
push
push
cmc
mov
lahf
or
out
mov
jns
mov
mov
sub
fisttpl
fcompl
mov
jns
adcl
jb
inc
pop
movb
call
cmpsb
in
cld
pop
imul
into
mov
xlat
fstpt
clc
or
jmp
jg
stc
lret
add
jo
jo
mov
cld
int
and
jmp
xchg
mov
popf
cmp
mov
movsl
fdiv
dec
jmp
mov
ret
lock
aad
and
pusha
jo
fisttpll
xchg
ret
push
test
xor
mov
andb
xlat
dec
insb
add
jle
ror
push
jb
sbb
cmp
and
sub
add
xor
pop
sub
out
dec
ret
inc
jns
add
call
repnz
push
pushf
mov
ret
dec
aad
in
stos
stos
sbb
xchg
ja
and
imul
push
inc
cmpb
scas
add
aad
mov
lahf
mov
orl
lret
hlt
and
in
sub
stc
jmp
aaa
ss
stc
div
pop
test
clc
and
jmp
mov
or
mov
xor
idivl
sti
outsb
outsl
sarb
stc
cmpl
push
adc
dec
xchg
sbb
xor
iret
dec
sahf
clc
mov
or
ds
fcomi
mov
pop
cmc
clc
sahf
push
jae
dec
subb
clc
pop
pusha
in
out
popf
mov
mov
jns
fstpt
adc
insb
lea
xchg
pop
push
repz
sub
pusha
mov
fcomps
popa
mov
push
mov
imul
popa
jb
cmp
add
add
inc
js
dec
jns
mov
mov
push
shlb
in
jbe
push
pcmpeqw
dec
mov
test
sbb
mov
adc
test
gs
andl
scas
loopne
cmp
add
addb
jl
or
daa
adc
jg
cmpsl
shrb
jns
cmpsb
or
xchg
std
cmc
repz
push
enter
adc
mov
call
pop
push
sbb
cmp
push
pusha
scas
fnstenv
rorl
sub
and
mov
cmpsb
es
sbb
je
iret
jae
dec
lcall
sub
mov
push
sub
add
cmp
mov
call
sub
mov
adc
or
in
fs
pop
ret
or
scas
jecxz
xchg
or
sbb
jne
call
ja
out
push
pop
out
mov
cmp
cmp
xor
mov
pop
jl
push
mov
std
sbb
push
sub
int3
shrb
sub
push
pop
adc
xchg
xchg
enter
ja
mov
add
je
fistpl
push
add
out
dec
adc
xchg
addr16
dec
enter
movsl
push
jb
lock
or
std
fs
xlat
jno
lods
mov
add
xor
in
pop
insb
leave
mov
clc
inc
cmp
sbb
sbb
pop
push
shll
push
addr16
insl
pop
add
outsl
adc
and
sahf
sbb
sub
sbb
sub
inc
into
jae
cs
and
jb
lret
sub
aaa
shlb
cld
es
jno
ret
mull
xor
inc
mov
or
sub
int3
out
fcoms
testl
test
push
add
xor
lock
cmp
or
das
movb
sub
mov
imul
cs
jns
cmc
pop
adc
push
icebp
mov
sub
inc
bound
and
pop
mov
mov
pop
fsts
push
daa
xor
cli
jmp
ss
clc
mov
out
inc
cld
jns
int
sub
sbb
mov
xchg
call
cld
popf
adc
sbb
out
xor
mov
arpl
call
jno
fiaddl
fnstcw
inc
and
insb
fcmovnb
pop
lret
ror
je
adcb
fs
dec
js
mov
repz
pop
add
imull
das
adc
xor
mov
add
jg
loope
xor
and
repz
cltd
cmp
and
sbb
mov
lcall
inc
mov
or
test
jmp
aam
lret
imul
cmpsl
mov
fmul
sti
leave
bound
ja
push
cmp
scas
and
sbb
ficoml
mov
shrb
gs
pop
cltd
aam
mov
sub
bound
pusha
sbbl
loop
fstpt
pop
jle
fldl
and
out
aam
mov
bound
arpl
enter
data16
sub
mov
and
jno
pop
fstpl
test
add
repz
addr16
ret
sbb
mov
jbe
sub
sub
xor
jge
mov
adc
dec
ret
arpl
xchg
jbe
adc
das
pop
sti
cmp
push
cld
pop
cld
cmc
inc
jo
repnz
mov
xchg
jne
insl
imul
shll
sbb
push
outsl
lods
cmp
xor
mov
jno
gs
and
mov
dec
adc
loop
pop
pop
test
jmp
mov
dec
bound
js
test
push
push
mov
sub
test
fs
aam
push
lret
ret
jecxz
cs
sub
test
jb
ljmp
mov
mov
push
sti
clc
mov
inc
dec
rorl
mov
push
daa
inc
dec
adc
cmc
test
das
mov
int
jle
push
dec
sti
cmc
adc
int3
xchg
sub
mov
fdivs
adc
icebp
cmp
mov
inc
sbb
lock
mov
ss
inc
test
dec
repz
out
loop
outsb
xor
mov
rorl
and
neg
sbb
clc
rclb
xor
lock
cmpb
adcl
push
les
or
inc
mov
loop
jbe
call
cli
pop
aam
and
jns
inc
cmp
push
jge
and
mov
das
mov
cmp
iret
aas
push
cmp
inc
mov
jmp
iret
pop
xchg
adc
or
clc
mov
sbb
push
pop
mov
jnp
or
cmpsb
mov
call
pop
xor
out
adc
xor
xor
fildl
in
mov
mov
pop
jp
pop
fistpl
pop
fstp
sub
xchg
jg
push
outsl
stos
ljmp
mov
push
jmp
dec
mov
mov
adc
dec
cmp
lcall
cmp
mov
mov
push
dec
cwtl
jno
cmp
mov
out
mov
or
adc
lock
andl
sbb
out
fs
sarl
pop
imul
mov
lret
stc
mov
xchg
in
dec
inc
subl
lea
or
outsl
adc
inc
xchg
inc
sub
sbb
xor
aad
pop
dec
outsb
adc
in
leave
aas
xchg
fdivp
pop
ret
and
jl
and
jge
stc
stos
sbb
push
and
imul
jg
push
mov
dec
push
jecxz
xchg
popa
adc
push
jl
mov
jmp
xchg
mov
cmp
loopne
cld
push
leave
mov
xchg
mov
sbb
outsb
and
pop
mov
push
loop
cmpsl
test
pop
mov
mov
mov
fistpll
dec
mov
jae
jns
pop
pusha
movb
pop
lods
and
lea
or
fstps
pop
es
icebp
fcmovu
addr16
push
jg
mov
sbb
pop
jno
mov
in
or
jmp
jns
adc
and
push
mov
out
test
and
jge
loope
lods
dec
rorb
cmc
cwtl
aad
sub
mov
mov
jecxz
jbe
scas
dec
fcmovnu
dec
mov
int3
stos
inc
orb
leave
out
loop
pop
loop
test
in
jbe
in
imul
push
or
jmp
fdivl
sbb
cmp
cld
pop
or
rcrl
jns
in
push
sbb
leave
hlt
inc
jne
mov
mov
aad
std
idiv
rcrb
jmp
pop
cli
fcomps
in
aaa
xor
mov
sti
int3
xchg
lods
into
xchg
std
push
cmc
sub
gs
test
adc
fistpl
pop
sbb
imul
out
push
jne
aas
mov
and
mov
adc
cmpsb
adc
pop
into
in
xchg
shll
mov
lret
add
mov
hlt
and
fstpl
sbb
int3
mov
ret
mov
xor
dec
lock
addr16
js
outsl
js
rorb
subb
sub
or
xchg
jle
gs
mov
loop
cmpsl
xchg
pop
test
negb
inc
sub
mov
fstps
mov
cwtl
push
insl
int
sbb
out
rcll
sub
das
sbb
hlt
int
sbb
or
sbb
arpl
mov
xchg
cmp
lods
pushf
jp
lret
or
mov
jmp
lret
dec
dec
cmp
aaa
in
mov
push
jecxz
push
cmp
or
pop
cmpsl
sbb
mul
jl
pop
or
cli
test
aaa
xchg
dec
adc
in
mov
sub
enter
sbb
out
gs
jbe
dec
cli
adc
push
lahf
dec
cmp
sbb
out
out
sti
inc
lods
hlt
and
loop
push
cmpsl
stos
aaa
add
test
dec
popa
xor
jmp
enter
fwait
pop
fisttps
or
or
and
push
jnp
out
jl
add
and
inc
adc
enter
adc
pop
mov
test
outsb
inc
insl
jns
and
inc
loop
or
mov
ljmp
xor
jge
add
dec
mov
mov
les
sbb
dec
xor
ljmp
and
or
add
or
push
xchg
roll
ret
jae
pop
ljmp
lock
lahf
lds
jae
xchg
aaa
dec
fbstp
fadds
int
std
lret
adc
out
int3
aam
mov
shl
add
pop
mov
or
sbb
xchg
push
pop
fistpll
out
and
jge
push
jnp
pusha
adc
cmp
xchg
aam
stos
mov
fnstcw
cmpsl
leave
jge
push
ljmp
pop
ds
cmp
pushf
mov
cmp
xor
pushf
sbb
adc
and
sbb
and
xor
movsb
jo
fs
daa
shlb
dec
mov
sti
mov
movsb
push
dec
dec
gs
adc
add
addl
scas
dec
mov
enter
add
jge
jbe
cld
xor
mov
push
nop
int3
push
int
imul
push
dec
mov
clc
movsb
sub
loope
push
std
and
push
loope
ffreep
lock
dec
loopne
fwait
jmp
das
push
cmp
aas
cld
incl
or
pop
mov
jo
mov
xchg
popf
fildll
mov
ja
push
hlt
bound
or
sarl
inc
mov
ds
movsb
push
ljmp
mov
adc
xchg
push
adc
repnz
ret
cmc
push
add
or
sbb
mov
lahf
jl
sti
sahf
jns
xchg
fadd
fmuls
jmp
divl
filds
sub
ds
and
mul
mov
lahf
pop
clc
push
pop
aam
in
jmp
test
sbb
insb
fbld
jnp
jmp
dec
mov
mov
ss
clc
mov
dec
dec
xchg
fcomi
scas
xchg
popf
dec
movb
mov
cs
push
pushf
ljmp
cmp
xor
mov
mov
dec
shlb
cmp
mov
in
pushl
add
stos
xor
sbb
push
cmc
push
sbb
imul
xchg
pop
int
add
adc
xlat
pop
cmpb
xor
dec
ficompl
and
sbb
cmp
inc
pop
roll
jp
sbb
pop
dec
inc
shrl
int3
stos
popf
mov
push
push
cwtl
fiadds
ja
xchg
mov
mov
arpl
jp
stos
mov
test
push
movsb
mov
daa
js
mov
fwait
inc
jns
cmpsb
dec
cmp
adcl
fstpt
insl
sub
sub
xchg
leave
out
stc
scas
std
add
mov
mov
xor
fcoms
mov
push
jae
stos
fildl
idivb
enter
jb
push
sbb
js
cmp
mov
test
jb
mov
ds
mov
cmp
cltd
jb
mov
pop
iret
loopne
in
pop
shll
xor
notl
pop
rolb
cli
or
mov
cli
and
dec
xor
jle
cmpsb
clc
je
jns
jmp
mov
addr16
aaa
jb
call
jae
pushf
push
mov
es
scas
jp
cld
sbb
outsl
stos
cmp
dec
lahf
pusha
jg
cmp
dec
xorl
inc
inc
and
das
jbe
out
sbb
cmp
dec
mov
das
mov
sbb
aaa
push
push
pop
xchg
adc
mov
push
adc
mov
sub
add
lret
and
out
dec
pop
mov
cmp
pop
and
imul
lret
movsl
mov
sub
jg
aad
outsb
mov
push
xchg
in
into
aam
adc
cmc
mov
jns
mov
and
xor
mov
stos
je
mov
or
fwait
mov
sub
jb
add
stos
dec
int3
test
inc
push
inc
out
popf
outsb
notl
ja
cmp
push
sub
ljmp
and
cmp
lahf
int3
outsb
fimull
fiadds
adc
rcll
sbb
nop
sbb
sub
sub
inc
cmp
cltd
push
xor
lods
pop
pop
roll
jns
test
in
aam
fs
cltd
mov
lret
fnstenv
mov
loopne
aaa
lock
mov
lcall
jo
add
cld
ret
sub
outsl
icebp
push
test
and
ffree
ljmp
mov
jg
adc
cs
dec
aad
lcall
dec
and
fisttpll
push
repnz
sub
jmp
adc
inc
or
push
addr16
sub
pop
jo
cmp
jo
negb
scas
mov
int
pushf
je
fsubrl
mov
push
insb
clc
inc
cmpsl
inc
xchg
adcb
pop
pop
jmp
ficompl
mov
mov
fisttpll
aaa
and
jb
push
sub
shll
cmpsb
add
mov
imull
push
push
mov
cmpsl
dec
mov
add
ficomps
aas
mov
mov
fldl
movsl
dec
imul
cmp
xchg
aam
mov
popa
dec
das
scas
sbb
add
pop
repz
or
pop
inc
or
pop
mov
notl
mov
cld
fnstenv
popl
xchg
push
pop
ds
jo
fucomp
mov
sti
pusha
test
mov
ja
jle
sub
push
or
jbe
lock
adc
shl
into
and
mov
test
frstor
pop
mov
cmpsb
mov
dec
mov
push
inc
loope
xor
push
lock
test
or
fcmovnb
sbb
popf
cmpsb
inc
cmp
lahf
mov
ret
mov
adc
imul
daa
ss
mov
xchg
or
mov
repz
ret
adc
test
pop
rcrb
leave
imul
fdivs
jp
xchg
mov
xor
jmp
inc
aad
scas
xchg
adc
orl
mov
mov
insl
adc
daa
stos
dec
arpl
mov
jmp
aam
xor
into
out
es
mov
hlt
movsb
test
lea
int
addb
mov
jp
inc
mov
xor
sbb
sbb
adc
or
mov
jle
mov
mov
jo
jo
and
ficomps
sbb
adc
xor
adc
inc
aam
pop
push
cmp
test
ss
shrl
rolb
dec
or
inc
sbb
es
leave
testb
push
shlb
xchg
and
in
push
iret
push
mov
sub
dec
scas
mov
loop
setae
jb
push
ds
inc
cmp
xor
lcall
insb
ror
movb
cmp
rcrb
xor
xchg
sub
enter
scas
sbb
ds
arpl
jns
js
int
fwait
scas
call
xor
xor
scas
xor
and
ljmp
cmp
cli
lds
enter
jge
fs
imul
ret
shrb
fs
out
rcr
test
mov
fidivrs
sti
sub
pop
lds
mov
insl
push
mov
aas
and
rcrl
or
add
je
sbb
lcall
aas
repnz
mov
push
sbbb
mov
cmpsb
sbb
bound
cmp
in
mov
cmc
jb
jecxz
js
cmp
cmovnp
cmp
in
stos
aaa
rcll
insb
mov
rolb
dec
mov
mov
in
ret
in
inc
inc
adc
xchg
je
dec
cmp
mov
negb
cs
mov
ja
dec
jle
fstp
pop
lahf
or
int3
aad
loop
int
lcall
lea
adc
aad
mov
sti
xchg
popa
bound
fiaddl
and
aam
lret
inc
xor
repnz
das
fdivl
test
mov
mov
stos
inc
sbb
sbb
ret
lock
dec
push
in
loopne
shll
into
dec
ja
lret
ljmp
or
mov
add
fmull
psubb
divb
lock
test
mov
leave
insl
push
stc
mov
insb
dec
xor
mov
int3
ljmp
sbb
iret
daa
pop
aas
stos
dec
xor
add
pop
mov
mov
lods
scas
mov
cli
mov
shlb
ror
pop
xchg
scas
push
adc
cmp
sbb
jae
es
mov
ja
xor
loope
mov
push
mov
dec
inc
leave
aam
sub
xor
repnz
add
sahf
insb
pop
dec
sti
inc
pop
sub
mov
xor
pop
enter
jecxz
sbb
sub
push
scas
xor
lret
bound
mov
in
cmpsl
jno
jns
xchg
push
fildl
lea
sbb
sbb
stc
adc
mov
lock
js
push
push
test
lods
shrl
pop
icebp
inc
push
call
lods
cmp
std
sbb
push
scas
in
jg
jbe
rcrb
xchg
subl
cwtl
stc
adc
dec
inc
and
jg
std
shll
sub
xlat
push
inc
mov
jb
mov
inc
mov
clc
fbld
cld
lcall
aam
orl
sbb
jno
mov
insl
nop
mov
push
outsb
and
pop
mov
xchg
shlb
cmp
js,pn
aad
cwtl
lcall
iret
in
ljmp
mov
aas
pop
mov
lahf
sub
sub
jno
mov
push
fcomi
jmp
lock
and
loop
jge
les
push
sbb
mov
pop
cmp
xor
xchg
pop
rcrl
mov
js
lret
es
mov
lock
dec
xchg
xchg
inc
jns
arpl
aad
inc
jg
insb
lcall
adc
inc
sbb
leave
add
mov
and
jp
jecxz
sbb
add
rcll
mov
std
mov
lret
ljmp
jmp
int
dec
adc
adc
jno
xor
frndint
pop
movsb
int3
shll
adc
jae
xor
hlt
je
sbb
dec
dec
push
imul
fnstsw
ficoms
shrb
cmp
lcall
jmp
push
or
inc
push
mov
test
ret
aas
outsb
push
pop
pop
cs
push
dec
cmp
push
mov
mov
pop
lods
mov
inc
int
sahf
ficomps
fsubrl
mov
add
outsl
or
xchg
and
nop
daa
dec
lea
testb
call
cmp
mov
add
push
xlat
data16
push
std
jae
push
into
jecxz
mov
sub
cmc
jle
mov
lds
adc
xor
lcall
add
aas
ret
adc
push
sbb
xor
fisubl
add
imul
and
int
addb
in
sub
cmp
add
mov
ds
jp
fwait
or
jae
pop
cmp
and
gs
mov
ret
repnz
mov
leave
mov
adc
and
dec
pop
adc
push
adc
shrb
shlb
lock
lahf
dec
fs
lock
pop
inc
aaa
cld
stos
dec
add
cltd
mov
dec
mov
test
int3
pop
aad
hlt
sub
push
outsb
inc
pop
inc
xor
scas
cmp
add
pushf
push
dec
jno
dec
inc
imul
inc
aad
and
ret
fnstsw
fwait
pop
rcl
divl
mov
xchg
inc
mov
sti
xor
jmp
es
sbb
ja
test
cmp
in
xlat
mov
mov
xchg
jg
popf
test
mov
sarl
add
cmp
aam
pop
jb
or
mov
jl
fimull
cmp
loop
mov
adc
cmpsb
push
repz
scas
and
dec
pop
insl
sti
dec
insb
mulb
inc
std
stos
cmp
test
ret
cs
xchg
jo
insl
mov
scas
outsl
dec
cmpsl
adc
xchg
insl
dec
decb
push
outsl
call
sub
sub
pushf
leave
rorl
and
fadd
jne
stc
les
inc
lds
cmp
gs
mov
je
fs
jp
or
xchg
xchg
push
loopne
cmp
mov
mov
ja
and
adc
outsl
dec
stos
dec
cmc
in
loope
loopne
clc
xchg
pop
xchg
popa
jl
dec
adc
nop
push
sbb
ret
push
xor
push
data16
ds
pop
daa
mov
stc
stc
andb
int
jo
and
mov
mov
cmp
nop
pop
add
iret
push
aaa
mov
das
gs
xlat
and
sbb
sub
or
jne
xchg
inc
xor
adc
xor
adc
and
aas
mov
clc
adc
popf
xor
inc
xlat
cltd
inc
fisubrs
aas
add
in
cmp
or
pop
cli
scas
cli
jle
repz
sub
lahf
ds
xchg
xchg
aas
mov
sbb
ret
push
ss
pop
dec
xchg
mov
pop
inc
pop
inc
lret
mov
ret
jb
popf
cmp
flds
rcll
sub
push
adc
dec
pop
and
mov
push
sbb
movsb
test
cmp
fwait
add
fwait
cmovg
movl
pusha
cwtl
fldenv
icebp
mov
ret
lahf
nop
mov
std
sub
aam
lahf
mov
inc
clc
and
pop
movsb
out
sub
xor
push
ljmp
in
fdivl
orb
sbb
loopne
cli
insl
stc
cs
stos
rcll
push
sub
repnz
repnz
fadd
lea
sbb
cli
lods
inc
push
push
imul
mov
insb
int3
scas
sub
sub
ljmp
test
insb
das
cmp
out
dec
hlt
stos
stc
jne
in
enter
fcoms
movsb
adc
xchg
xchg
andb
hlt
xchg
imul
das
lcall
xor
mov
mov
mov
aam
and
in
cld
lcall
orl
mov
xchg
mov
or
xchg
je
mov
xchg
xor
jp
ds
sub
adc
mov
ret
outsb
in
aam
sbbl
jns
imul
lret
repnz
xchg
arpl
fs
les
mov
rcl
shrl
pop
add
or
inc
ret
xchg
sti
inc
xor
movsb
pop
in
cmp
mov
sub
sbb
pop
cmp
or
push
orb
sbb
add
dec
mov
push
aas
arpl
out
mov
call
movsb
xchg
push
or
cmpsl
loop
inc
pop
sub
daa
jg
shr
inc
lea
xchg
movsl
mov
mov
adc
out
add
jno
mov
push
out
xor
das
ja
lods
dec
in
or
xchg
andl
cmp
push
inc
and
dec
fdivrs
idivl
fnstcw
popa
arpl
sti
jae
xlat
mov
into
jae
les
jge
ret
sbb
mov
jp
mov
iret
test
loop
bound
pushl
daa
pop
cmc
add
and
mov
rcr
rcrb
test
mov
push
add
xor
aad
jne
mov
sbb
sub
push
shlb
xchg
data16
fistps
adc
pop
ret
add
or
mov
fadd
rdtsc
negb
repnz
xor
popf
mov
pop
lods
in
jne
pop
mov
and
test
lahf
cmpsb
les
mov
aam
adc
popf
jg
fwait
mov
push
sub
xchg
das
xor
test
pop
add
mov
jns
shlb
fnstsw
rcrl
lds
sbb
jb
sub
inc
xchg
xchg
aam
jae
mov
mov
or
inc
movl
dec
mov
jns
dec
push
jmp
aam
in
arpl
sub
enter
insb
fiadds
mov
pop
mov
add
mov
xor
sbb
mov
fsubrs
int3
sub
popa
int
adc
jmp
fsubl
fldt
frstor
lcall
fwait
xor
retw
cmp
xor
loop
ja
and
jno
les
xchg
loopne
lods
xlat
or
sub
fwait
push
mov
jae
adcl
inc
pop
jbe
adc
and
push
pop
stc
mov
adc
mov
mov
cmp
mov
dec
lock
sbb
div
push
adc
or
mov
sbb
mov
push
into
sub
setne
xchg
xor
rclb
cmpsl
push
fildl
push
sub
fwait
in
dec
sbb
hlt
lret
adc
jle
xor
repz
add
ficoms
push
sbb
dec
lods
add
pop
and
jle
mov
sbb
fadds
mov
ljmp
fwait
lock
rcl
movsl
test
jp
push
call
fldenv
test
xchg
mov
filds
dec
enter
das
loop
fwait
inc
sub
inc
or
pop
push
loope
lret
mov
mov
pop
mov
mov
hlt
mov
mov
cmpsl
xchg
mov
int
adc
jp
xchg
add
into
cmp
fwait
mov
std
movsb
jg
xor
callw
or
imul
pop
mov
pop
cmpsb
stc
jp
sbb
and
dec
mov
cld
cmc
push
jne
int
fstps
add
pop
sbb
xchg
aas
out
sbb
ret
sub
sub
mov
daa
and
and
imul
lea
lea
cmpsl
shl
or
cltd
data16
or
xor
stos
lds
push
data16
add
inc
sub
xor
mov
test
jmp
adc
inc
jo
inc
leave
mov
shrb
mov
pop
ret
or
xor
or
js
mov
pop
xchg
adc
mov
mov
lret
lret
std
negl
fs
rolb
add
cmp
mov
clc
pushf
inc
mov
adc
jb
outsb
add
inc
bound
imul
push
and
mov
or
test
fsubrp
jae
add
sarl
ss
jmp
sbb
imul
arpl
stos
imul
push
fcom
sbb
jnp
xchg
mov
add
sub
push
scas
push
out
ja
pop
lock
cmovnp
ffree
add
or
jle
psubw
ret
neg
or
dec
mov
xor
sahf
jae
cmpsl
push
cwtl
xor
jns
int3
outsb
notb
in
popl
ja
ss
scas
xchg
dec
mov
in
daa
faddl
xchg
cmp
mov
lock
sbb
inc
icebp
cmp
pushf
xchg
sub
xorb
ss
repnz
loope
inc
xchg
imul
mov
xchg
loope
aaa
fs
aas
sbb
or
stos
std
and
fiaddl
ja
mov
mov
das
and
test
sub
sub
mov
sub
push
mov
push
int3
push
fs
test
add
into
ret
and
push
jl
js
sbb
lret
pop
xor
add
mov
dec
dec
xchg
sbb
jb
xchg
pusha
aam
mov
movsl
xor
and
xchg
adc
cmp
daa
mov
xor
or
pop
in
pop
out
cld
mov
push
sbb
cmpsb
lds
cmp
mov
js
fiaddl
or
in
mov
hlt
dec
mov
sub
mov
bound
inc
jle
js
mov
pop
into
in
scas
xchg
inc
in
je
jns
and
pop
add
mov
mov
movsb
loopne
iret
sahf
mov
adc
imul
movsb
imul
mov
mov
ret
popf
sbb
pushf
popf
stos
loopne
adc
sub
or
xchg
hlt
fwait
out
arpl
jo
ja
es
subl
cli
or
pop
cwtl
outsl
cs
mov
vmptrld
jl,pt
mov
xor
mov
cltd
fdivrs
fsubs
arpl
bound
pop
inc
in
inc
outsl
nop
imul
sbb
push
imul
jg
sub
rcrb
incb
lods
dec
loopne
outsl
int
push
stc
push
mov
cs
ficompl
fiaddl
push
out
and
sub
push
pop
xor
adc
xchg
jg
mov
jmp
jo
sbb
mov
insl
js
arpl
mov
out
ret
xchg
and
jg
and
cmp
addl
xchg
and
cwtl
ret
xlat
jle
cmp
fwait
test
arpl
in
test
push
sbb
jp
add
mull
jb
mov
sti
or
cwtl
ljmp
sbb
fadds
and
add
xchg
jge
lock
into
xor
jle
or
mov
in
jne
or
jecxz
lods
cmpsl
out
lods
aaa
out
mov
sbb
pop
mov
dec
fistl
cltd
dec
add
sbb
fwait
fwait
xchg
mov
jl
lods
push
cmpb
jp
orl
rclb
enter
sbb
inc
pop
addr16
mov
mov
sub
and
mov
jmp
fmul
fucomip
jl
mov
test
add
or
mov
dec
mov
add
call
out
and
sub
push
ret
mov
mov
push
inc
adc
test
leave
sub
outsl
sbb
hlt
divb
clc
jb
pop
jb
in
int
jp
cli
mov
testb
dec
inc
inc
lock
cmpsb
cld
sbb
shlb
into
call
jg
adc
cmp
mov
mov
sbb
push
xchg
mov
sub
mov
testl
orl
stos
repz
sahf
fstps
fistpl
push
mov
xchg
xchg
out
fmull
xchg
jae
xlat
pop
lcall
and
or
jae
sub
ja
mov
and
rol
and
dec
mov
addb
ret
xor
rcrb
call
cmpsb
lret
out
adc
jle
xor
dec
pusha
and
std
rcll
cltd
sub
dec
sub
sbb
push
insb
and
popf
fistpl
push
sbb
lods
cmp
jp
data16
cs
mov
addr16
jbe
add
jns
fucomip
xlat
lret
mov
pop
fistl
mov
sbbb
cmc
imul
mov
cmpsl
andl
mov
mov
xchg
sub
int
test
pop
mov
sti
ret
push
nop
das
fwait
xlat
lret
xchg
aam
mov
in
pop
int
cmp
pop
push
lock
jl
mov
mov
xor
push
add
add
xchg
push
pop
shll
jmp
fisttps
or
push
xor
mov
mov
daa
maskmovq
testl
test
testb
in
and
iret
sub
dec
cmp
pop
inc
hlt
jbe
inc
and
push
outsl
mov
mov
pop
mov
mov
dec
pop
pop
or
jge
repz
negb
test
push
insl
insb
movsb
mov
sbb
jne
or
cli
mov
push
push
mov
lcall
mov
pop
jmp
bnd
je
daa
lea
fldl2e
mov
mov
cld
iret
jnp
lods
dec
ljmp
movsb
sbb
cmp
les
cs
popf
test
xchg
dec
adc
jbe
mov
loope
pop
rcll
imul
mulb
lea
aaa
pop
adc
jg
dec
out
das
pop
push
inc
enter
or
and
push
xor
cmp
ss
pusha
je
in
xchg
add
lds
jae
imul
test
adc
divl
loope
inc
out
push
popa
rcrl
sbb
gs
shrb
pop
inc
mov
mov
adc
rolb
test
clc
pop
ja
adc
fisttps
mov
xchg
fbld
mov
aam
mov
mov
jmp
xor
sub
push
repnz
pop
or
iret
rcrl
push
test
and
and
adc
mov
xchg
mov
lods
mov
lock
cmp
out
nop
mov
lods
popa
ljmp
mov
mov
lret
loope
xor
cmp
mov
pop
mov
ret
rorb
mov
inc
into
add
push
ret
out
dec
fs
sub
mov
xor
rcl
mov
jno
mov
stos
xchg
xchg
xchg
rol
lcall
mov
cmp
or
call
jmp
jmp
push
cwtl
fistl
mov
push
hlt
and
pop
mov
push
bound
dec
mov
add
test
sub
mov
push
test
push
add
xor
or
mov
mov
push
pop
push
mov
lea
cs
loopne
pushf
fldcw
fcomps
out
and
roll
mov
imul
movsl
data16
ljmp
lds
pop
fwait
push
mov
jge
jmp
mov
pushf
mov
aas
inc
xchg
shl
push
nop
mov
mov
or
pop
or
cmpsl
jnp
adc
dec
pop
call
lahf
jns
ret
ja
movsb
fidivl
ljmpw
mov
add
jb
pop
enter
jle
inc
push
lret
add
inc
pop
pop
or
insl
fimuls
rorl
stos
pop
jne
pop
xor
adc
xchg
arpl
lret
or
ficompl
push
bound
sbb
sub
ljmp
cmpsb
or
loope
jno
pop
cmp
fsts
cmc
adc
xchg
fs
cmp
bound
cmp
jg
cmp
push
lret
ja
imull
inc
loopne
aam
and
es
pop
dec
out
ds
in
scas
out
jo
or
pop
mov
rorl
sub
xchg
xchg
add
dec
push
sti
xor
mov
xchg
dec
jl
mov
repnz
push
sub
push
outsb
mov
dec
xchg
lock
addb
and
jg
js
mov
cld
cmp
dec
notb
adc
rcrb
push
test
dec
pop
fwait
jle
repnz
call
aam
out
pusha
add
ljmp
repz
push
sub
jb
das
mov
xchg
arpl
pop
jne
cmp
push
inc
fiadds
imul
pop
lret
clc
out
jns
fbstp
inc
ret
aam
mov
dec
jne
mov
js
dec
or
test
sbb
jo,pt
leave
jno
pop
dec
mov
insl
out
jp
cmp
clc
popf
push
ja
xor
mov
pop
push
das
sarl
cmp
jns
inc
es
push
negl
xchg
mov
movsl
and
out
xor
lcall
and
cmp
add
sub
ret
mov
dec
test
inc
mov
lods
lea
aad
incb
imul
inc
mov
add
ficoms
push
mov
push
dec
out
push
add
cmp
inc
shl
mov
movsl
in
aaa
gs
cwtl
add
leave
jmp
pop
or
jecxz
jp
inc
lahf
inc
cs
jno
push
das
and
push
push
pop
mov
and
test
andl
test
jns
pop
movsb
dec
jb
lds
lcall
sub
sub
inc
das
leave
add
mov
pop
xchg
orl
insb
jbe
push
aam
rcrl
popf
xchg
push
push
or
les
dec
out
outsl
cltd
dec
pop
mov
sbb
lods
mov
pop
cwtl
movsb
mov
inc
add
mov
roll
dec
mov
cld
sub
inc
adcl
push
fstp
imul
in
mov
icebp
pcmpgtd
sbb
sti
call
loop
std
or
js
hlt
lods
jbe
inc
cmp
dec
inc
or
inc
jge
dec
repnz
call
aas
addl
inc
jns
loop
mov
push
lods
stos
push
jmp
jp
xchg
addr16
dec
push
int3
push
je
pop
adc
mov
inc
fwait
jo
loopne
push
fwait
outsb
jle
mov
mov
lods
pop
or
roll
nop
cltd
pop
fdivs
pop
loope
mov
fildl
loop
fs
jge
pop
cmp
adc
sub
mov
ss
xor
adc
ret
jmp
das
daa
inc
iret
cmp
or
pop
daa
popa
repz
inc
mov
fs
push
mov
rcr
sbb
daa
push
out
cmpsb
mov
mov
addb
leave
xlat
fdivl
and
xor
xchg
outsb
push
adc
popf
mov
or
adc
dec
pusha
xor
add
cmp
gs
scas
movsl
jecxz
pop
xor
xchg
jmp
bound
outsl
sbb
loope
sub
cwtl
pop
xor
or
mov
jne
add
xchg
into
popl
mov
les
bound
xor
int3
add
aas
hlt
xor
pop
arpl
dec
inc
fs
stc
push
pop
mov
js
cmp
xchg
sbb
mov
dec
lret
cmp
jbe
mov
xor
sahf
roll
out
sahf
mov
andl
cmc
repz
hlt
into
push
pushf
xchg
rol
out
out
push
and
outsb
fisttps
push
outsl
sbbb
loop
mov
push
sub
or
aam
ret
shll
bound
xchg
inc
push
xchg
ss
les
out
mov
dec
mov
push
addr16
int3
xchg
mov
icebp
scas
dec
aas
xlat
xor
mov
out
mov
cmp
cmpsb
cmp
imul
xchg
call
repnz
jp
inc
jo
das
mov
mov
imul
leave
call
outsb
dec
outsb
fs
pop
jp
xor
add
cmp
inc
jecxz
fdivr
push
outsl
adc
loopne
dec
sbb
xchg
mov
les
pop
cli
inc
ss
pusha
push
xor
cmp
out
xor
pop
stc
hlt
fsubl
and
or
dec
std
mov
call
push
mov
stc
mov
pop
or
push
and
xor
cli
adc
or
push
je
jns
jbe
mov
mov
aad
mov
incb
lret
aas
test
or
out
orl
adc
mov
xchg
jnp
sbb
outsl
data16
ljmp
jge
mov
js
in
mov
pop
xchg
fsubl
in
inc
int
outsl
cmpsl
test
arpl
mov
jmp
add
xchg
out
sbb
pop
enter
push
sub
lahf
push
sub
jns
test
in
nop
pushl
jge
pusha
in
xcrypt-cfb
cmpsl
arpl
and
cmc
add
jl
icebp
xchg
cmp
adc
and
and
jl
sub
push
lret
out
inc
cmpsb
adc
call
inc
mov
repnz
enter
dec
jmp
and
dec
loopne
shll
daa
out
dec
push
loopne
fisubrl
test
rep
pop
mov
ret
pushl
jl
movsl
rcrl
pop
cmp
inc
testb
icebp
js
or
sti
push
fdivr
ds
cmc
into
fs
adc
sub
jge
cwtl
sahf
jp
jmp
mov
mov
pop
aad
push
mov
cli
ss
mov
mov
adc
adc
inc
mov
ss
movsl
mov
mov
enter
dec
xor
data16
mov
repz
pop
iret
add
jge
push
push
mov
mov
pop
and
inc
sbb
ret
lock
add
outsb
les
scas
pop
mov
ret
xchg
push
mov
xor
inc
add
aad
xchg
in
loop
pop
out
test
mov
or
pop
push
lret
and
cwtl
cltd
sub
test
sbb
cs
mov
jns
mov
cmpsb
jno
push
mov
sbbl
scas
pop
mov
sbb
test
fistl
insl
lock
cmp
push
js
stos
push
jne
xchg
into
jg
lods
mov
dec
jbe
pop
jo
mov
arpl
je
aaa
sub
push
inc
or
fbld
xchg
pop
mov
imul
jns
push
jp
or
xor
push
mov
gs
xchg
mov
add
les
jg
adc
out
cmp
xchg
sub
jmp
call
jno
inc
dec
xchg
jno
xchg
adc
cmp
push
inc
push
mov
mov
xchg
imul
popa
lods
stos
mov
outsl
pop
rcl
jl
repz
lret
test
dec
mov
jg
push
pushf
aaa
cmp
inc
mov
call
iret
xor
cmpsl
or
dec
inc
mov
in
in
stos
push
adc
mulb
pop
add
pop
lret
out
cmp
xor
dec
jp
outsl
les
push
mov
mov
jge
jg
adc
enter
adc
fs
pop
cmpl
lea
adc
lock
fstps
adc
mov
out
push
cmc
pushf
ds
insb
in
in
test
pop
lret
mov
cmpsb
jnp
jo
and
mov
mov
mov
mov
and
cwtl
xlat
jne
bound
xchg
lock
mov
dec
xlat
xchg
xor
orl
push
cmpsb
push
std
ljmp
cwtl
je
test
int
jbe
mov
and
pop
dec
add
sbb
aad
xchg
lahf
popa
sbb
and
or
or
in
mov
stos
jne
mov
or
outsl
dec
sahf
lcall
and
xor
dec
push
je
std
dec
sti
jne
aam
adc
cmp
negb
fdivrp
in
leave
and
sar
sub
push
push
jb
mov
cmp
jo
and
iret
push
lret
mov
jl
addr16
stc
jge
test
mov
push
lahf
outsb
pusha
pop
je
push
xor
adc
adc
xchg
jb
cmpsb
mov
sub
mov
andl
rcrl
mov
push
xor
sbb
sub
fsubrl
or
cmpsb
scas
sbb
loop
or
jmp
xlat
mov
int3
adc
xchg
push
sarb
pusha
adc
push
repnz
dec
cmp
dec
mov
sahf
inc
dec
popa
popa
inc
popa
pusha
sbb
inc
push
cmp
add
enter
add
out
outsl
in
xor
mov
adc
jge
sub
stos
fwait
push
dec
mov
push
les
gs
inc
pop
xchg
das
test
jp
popa
lret
es
outsb
cs
in
das
repnz
je
sahf
and
daa
xor
inc
je,pn
inc
cmp
test
pop
ljmp
aaa
mov
lret
sbbl
mov
add
out
cmpsb
push
fadds
sbb
mov
pop
test
dec
int3
add
xchg
jne
inc
pop
jno
jbe
mov
pushf
movsb
stc
pop
shlb
mov
cmpsb
sbb
inc
dec
das
pusha
mov
in
std
rcll
push
stos
mov
sbb
out
fisubrl
adc
in
scas
scas
mov
xchg
mov
mov
adc
mov
cmpsl
insb
negl
imul
or
cli
xchg
scas
clc
aaa
cld
xchg
sub
jmp
xchg
jg
xchg
mov
mov
shrl
sbb
or
cwtl
xchg
mov
test
add
mov
and
adc
ret
lret
push
leave
js
call
or
push
push
mov
fisttps
xchg
mov
or
sti
cld
add
dec
dec
cmp
xor
mov
cmpsl
fidivrs
ds
push
mov
or
sti
addr16
out
pop
popf
fistpl
jbe
flds
rcrb
leave
lret
xor
movsl
pusha
outsl
subps
in
jg
and
jne
cmpsl
xchg
or
imul
shl
negl
jp
aaa
call
pusha
mov
adc
out
inc
rcl
les
push
stos
aam
and
rcrl
stos
cmp
lods
lods
jo
outsl
les
and
pop
pop
ret
les
inc
mov
xor
mov
addr16
fnstcw
mov
in
ret
sbb
jle
adc
cwtl
stos
mov
dec
imul
xchg
mov
and
mov
loope
or
mov
mov
test
sub
push
adc
and
sub
cld
decl
in
pop
insl
dec
stos
sbb
add
lea
fmull
mov
jno
sub
in
dec
clc
mov
mov
repnz
push
fwait
mov
push
and
ret
in
das
xlat
cmpsb
jno
jb
jecxz
jmp
sbb
ja
pop
add
lahf
std
ja
in
filds
adcb
mov
rcr
mov
shl
mov
sahf
or
inc
in
arpl
rcll
popa
xchg
mov
lret
push
call
pop
mov
test
jecxz
arpl
sbb
inc
pop
dec
cmp
add
push
test
push
mov
inc
cmp
jge
and
adc
push
cmp
and
xchg
fsubrl
cld
and
jo
adc
sub
pop
jmp
jmp
in
adc
adcl
push
pop
mov
mov
and
push
push
bound
or
dec
inc
pop
adc
loop
fucomip
pop
cli
fsubl
xchg
dec
mov
xchg
or
std
nop
scas
into
ss
jecxz
cs
push
fdiv
int3
fnstsw
dec
pop
cli
test
adc
pushf
push
iret
dec
rcrl
sub
sbb
fisttpll
adc
cmp
push
leave
add
push
mov
pop
stc
mov
mov
mov
popa
jns
sbb
pop
call
nop
or
ljmp
stos
lret
das
mov
inc
or
js
xorb
pop
jo
into
rcrb
dec
nop
arpl
cmp
insl
test
fcoms
lcall
inc
popa
iret
std
pop
mov
or
mov
data16
xor
pop
clc
sub
adc
inc
lods
push
mov
xchg
push
cltd
push
sbbl
pop
mov
icebp
add
or
push
inc
stc
fistl
mov
fnsave
inc
jno
cmp
scas
mov
rorl
rolb
jb
popa
rcll
addl
adc
mov
and
mov
sbb
jae
sti
pusha
sahf
mov
mov
paddd
sar
outsl
push
ds
mov
lret
fcmovbe
dec
pop
outsl
mov
or
jmp
adc
ljmp
mov
pusha
inc
dec
dec
hlt
imul
fcoms
and
sbb
cmp
pop
sub
pop
mov
iret
lea
push
sar
pop
lock
xchg
ss
and
nop
cs
cmp
mov
shll
xchg
push
inc
cltd
cli
addr16
insl
jmp
mov
mov
rcl
cmp
mov
or
sahf
xor
dec
xor
adc
add
fsub
addr16
pop
pop
mov
loop
sbb
sarb
push
inc
sub
leave
into
xchg
stos
dec
aam
adc
repnz
mov
data16
jge
mov
mov
daa
cmp
pop
fs
mov
out
dec
xchg
ret
adc
xchg
push
stc
outsb
data16
das
lock
das
cmp
testl
pop
cld
fdivrs
xor
rorl
ficompl
jne
pop
subb
xchg
jge
pop
aaa
push
jnp
movsb
out
ljmp
cmp
add
push
mov
inc
rorl
sbb
push
leave
sbb
push
add
xchg
or
sbb
fwait
jns
in
aam
xchg
jno
adc
adc
outsl
dec
inc
mov
xchg
in
mov
jge
lcall
enter
das
add
pop
loop
and
outsb
cmpsl
pop
pop
xchg
mov
sub
imul
xor
or
aas
adc
adc
test
hlt
mov
rcrb
mov
cmpsl
in
cmp
test
add
mov
dec
out
mov
xchg
das
dec
xchg
cmpsb
lahf
mov
imul
add
icebp
inc
push
push
mov
std
lret
jmp
stc
jge
aam
adc
cmc
xchg
loope
int3
loop
int
mov
sahf
test
adc
push
cmp
or
fsubs
push
xor
shl
xor
and
sbb
call
jmp
mov
or
pop
fistpll
jno
bsf
data16
pusha
scas
sub
pop
jmp
jae
jge
add
and
sbb
in
add
or
nop
adc
jnp
cs
fisubs
mov
mov
mov
rcrl
shlb
nop
cmc
mov
mov
imul
jle
lods
jg
mov
jb
insl
pushf
jmp
cmp
dec
adc
call
add
mov
jne
shrl
pusha
scas
cmpb
repnz
orl
and
inc
inc
mov
fwait
nop
sub
clc
jae
inc
in
push
push
aas
or
jl
rcll
mov
cli
push
xor
outsb
call
xor
sbb
andb
inc
inc
enter
popa
sbb
mov
pushf
cmpsl
lahf
sub
mov
xchg
push
inc
pop
pop
insl
jae
sahf
lds
mov
xchg
daa
xchg
jno,pt
jge
xor
lods
data16
rcl
faddl
and
mov
pop
cwtl
jne
pop
mov
sub
ss
insl
fiadds
ss
adc
sahf
sbb
sub
filds
jo
ret
dec
ret
dec
iret
ds
je
push
and
out
add
into
dec
or
fiadds
popa
scas
push
repz
jg
cltd
divl
in
and
repnz
mov
push
cltd
int
inc
dec
in
aad
xchg
sub
outsb
int
fsubr
bnd
and
mov
sbb
movsl
popf
xchg
loop
mov
scas
pop
mov
je
js
lahf
orb
xchg
ds
aad
cmp
sbb
pop
sarl
sub
add
ret
lahf
and
pop
inc
rcrl
jb
fs
sbb
in
inc
cmc
sarl
jp
xchg
push
xchg
lock
mov
xchg
push
mov
push
imul
mov
sub
subl
adc
inc
push
jmp
adc
out
inc
das
adc
lds
sbb
sar
pop
popf
pop
leave
add
cltd
repnz
test
or
popf
in
xchg
jnp
cltd
and
dec
adc
add
ds
fdiv
mov
jae
xchg
add
pushf
fimull
pop
cmp
push
jbe
xchg
xchg
mov
cld
add
mov
lods
adc
jae
mov
insb
outsb
jbe
shll
rolb
dec
xor
dec
fcoms
pop
pusha
fmul
pusha
rcrl
cld
shrb
mov
loopne
dec
pop
or
cmp
mov
test
mov
fldcw
mov
scas
lds
cwtl
iret
movsb
jno
inc
xor
enter
mov
addr16
test
add
mov
sbb
cmp
sbb
jp
sahf
pop
popa
jae
cmpl
mov
andw
repnz
cmp
mov
pop
gs
in
xchg
adc
xor
icebp
push
jl
xchg
test
add
nop
pop
les
lods
mov
jne
repnz
push
int3
sbb
repz
xor
xor
xchg
mov
data16
dec
cli
mov
xlat
sub
sbb
movsl
jno
sub
cmpsb
je
cmp
hlt
jge
adc
mov
cltd
adc
fwait
adc
pop
loopne
jne
aad
leave
add
jo
xchg
test
xchg
or
xchg
jnp
push
rorb
mov
sbb
pop
fwait
or
add
aaa
dec
sbb
cmp
sbb
mov
sbb
repnz
dec
mov
test
and
call
sub
sbb
or
dec
jnp
jnp
shll
inc
rorb
sbb
fstpl
sahf
bound
adc
data16
dec
dec
adc
out
adc
data16
dec
out
outsb
out
ljmp
bnd
data16
cs
dec
push
fbld
push
adc
enter
iret
lods
add
xor
jo
mov
adc
iret
gs
sub
pop
sub
push
pusha
mov
or
mov
cmp
pop
jbe
std
aaa
aad
pushf
mov
out
sub
inc
xchg
fnsave
stos
xor
jne
in
js
shll
mov
xchg
call
pop
cmpsb
scas
mov
stc
movb
sub
ficompl
into
iret
in
pop
xchg
jb
aad
or
out
push
int3
sbb
sbb
outsl
loop
in
dec
jb
cltd
jmp
push
aad
pop
jge
cmpl
in
loop
fmuls
cld
push
dec
ja
int3
fnstsw
jle
popa
pop
mov
push
out
aaa
push
and
mov
and
fdiv
hlt
xchg
and
push
adc
jbe
jle
mov
or
inc
mov
add
pop
cli
mov
mov
dec
mov
inc
adc
xor
stc
clc
mov
stos
inc
test
xlat
adc
cld
jmp
mov
aas
push
mov
decb
loope
mov
mov
mov
pop
imul
mov
fwait
push
je
jne
cmp
xor
add
es
leave
push
lahf
xchg
xchg
insl
mov
cmp
jle
pop
inc
and
jmp
pop
pop
pop
and
jecxz
and
sub
sahf
popa
adc
scas
push
push
sub
jge
jne
push
fistpl
push
jae
fwait
sub
out
sub
es
into
dec
mov
lods
sbb
push
outsb
outsl
out
mov
jl
mov
xor
mov
add
inc
out
sbb
adc
adc
pop
push
pop
jb
lds
test
rolb
jns
xor
repz
aam
out
and
aaa
xor
and
adc
mov
insl
mov
fmul
add
js
jns
out
sbb
xchg
pushl
cmp
inc
jnp
xor
pop
cli
sbb
xchg
dec
and
insl
addr16
lahf
aam
xor
and
inc
into
or
ret
clc
cmp
out
outsl
xchg
gs
xchg
or
std
and
mov
adcl
xor
or
popa
push
sub
shl
nop
mov
movsl
ljmp
mov
xchg
add
push
sub
xchg
push
in
sub
ficompl
movsb
lods
stos
mov
push
jne
pop
shll
push
call
mov
cmp
nop
pop
scas
sub
cmpsb
or
call
divl
mov
je
push
bound
push
aam
xchg
clc
dec
push
cmpsl
cmc
icebp
lods
sbbl
stos
xchg
or
cmpsl
and
outsl
push
lret
sub
cmp
mov
dec
mov
adc
rorb
pop
xor
sub
pusha
add
push
test
mov
out
andb
xor
mov
cli
cwtl
lds
js
jmp
xor
mov
nop
ds
jle
push
loopne
jb
mov
cli
or
sbb
aam
mov
lds
xchg
jae
jmp
fisubl
je
pusha
lds
je
js
mov
jb
out
in
sbb
sub
cmpsb
data16
ss
xchg
or
adc
cmc
push
xchg
ficomps
xchg
jnp
sbb
pop
addb
pop
sti
movsb
jb
lods
xchg
scas
int
sbb
test
sbb
insb
or
faddl
orb
or
push
lret
aaa
or
adc
xchg
psrad
mov
in
cmp
test
sub
and
add
ljmp
mov
push
push
lds
jnp
mov
xchg
xchg
loop
xlat
fisubl
mov
sti
jo
mov
stos
jmp
mul
add
xor
ret
sub
lret
addl
fs
jp
cli
rcll
add
out
push
mov
sub
mov
jbe
push
dec
pop
lret
stc
hlt
dec
adc
loop
jns
add
mov
mov
inc
mov
fcomi
jae
cmp
push
aas
dec
push
scas
test
inc
xchg
xor
hlt
ficoml
std
popa
into
rolb
mov
mov
cmp
mov
dec
je
or
lods
pop
out
ror
mov
pop
out
fsubrs
pop
pop
flds
mov
aad
adc
repnz
jae
scas
cli
bnd
pop
pop
sbb
repnz
xor
sbb
add
adc
or
sub
aaa
jo
ret
sbb
cmp
add
mov
clc
xlat
xor
incl
inc
ljmp
xchg
lods
mov
push
dec
test
xor
notb
insb
and
dec
add
cmp
loope
data16
mov
push
or
clc
rorb
and
fs
je
push
sbb
push
addr16
sub
dec
and
push
xlat
and
or
xor
xor
and
xor
pop
test
mov
pushf
repz
outsb
ret
pop
test
lret
jle
jo
mov
sti
divl
pop
pusha
inc
int
jno
jne
pop
or
jb
mov
aaa
int3
sbb
addr16
stos
pop
sub
mov
fsts
les
xchg
push
lock
sbb
mov
fstp
sub
pop
in
pop
mov
cmpsl
cmpsl
sbb
outsl
clc
cmpsl
in
fs
xchg
xchg
jne
fsub
ltr
or
mov
cmp
push
sbb
mov
xchg
cmp
incl
sahf
inc
push
test
lods
mov
sbb
lret
shrl
jmp
ret
loopne
filds
cmp
subl
scas
jae
std
mov
mov
fsub
inc
push
cmp
pushf
mov
aam
and
inc
adc
xchg
inc
popa
addb
js
push
fbld
mov
inc
adc
out
inc
test
pop
sub
cld
push
xchg
in
outsb
lock
mov
in
das
mov
inc
stos
vpmacsww
mov
addl
repz
popf
pop
mov
sahf
loopne
je
cmc
dec
test
xor
pushf
mov
adc
and
pop
ror
cmpb
jno
sub
xor
cli
loope
jecxz
inc
popa
dec
repnz
jge
int3
movsl
or
std
stc
mov
jnp
jg
xor
imul
fisubs
clc
in
xchg
lea
popf
inc
dec
imul
mov
cld
fldl
jno
or
aam
sub
push
or
daa
ret
add
pop
mull
in
dec
xlat
xor
lods
cmp
or
pop
test
mov
les
xchg
ret
adc
pop
repz
dec
mov
shr
push
mov
mov
push
sti
loopne
inc
inc
sar
cmp
push
dec
mov
or
sub
sbb
leave
jnp
cmc
or
cmpsb
es
xor
pop
xlat
clc
xchg
jo
loopne
ret
cmp
dec
add
int
jno
pop
js
ljmp
jge
arpl
mov
inc
cmp
shlb
mov
mov
mov
ja
inc
lock
les
xor
ror
add
lret
sbb
int3
movsb
add
add
shrl
outsl
add
pop
loop
idiv
jmp
sub
jns
sbb
outsb
shll
xchg
pop
add
xchg
xor
dec
mov
pop
inc
cmp
fwait
stc
fistl
fadds
mov
bound
ret
cld
insb
inc
popf
cld
inc
xchg
push
dec
jnp
repnz
or
mov
fcoml
add
icebp
jg
pop
pop
loope
cltd
stos
jnp
bnd
mov
xor
inc
loop
mov
je
rcl
mov
in
mov
jecxz
test
dec
jbe
mov
call
loopne
jp
or
sub
out
xchg
cmc
xchg
mov
aam
sbb
out
lock
rol
adc
stos
push
movsb
lret
ja
or
push
cwtl
fldenv
and
add
pusha
add
popf
inc
fadd
pop
lds
jmp
or
out
xchg
adc
xor
sub
dec
pusha
inc
sub
inc
nop
add
lods
xor
mov
adc
or
and
popf
in
popf
push
inc
and
mov
loope
push
adc
jns
jae
mov
cmp
and
jecxz
mov
push
cmp
jb
xchg
mov
push
and
stc
fistps
shl
dec
push
push
inc
inc
or
clc
jge
imul
out
cmpb
and
cmc
insb
pop
sub
scas
add
test
rclb
mov
pop
or
mov
inc
push
jns
hlt
push
sbb
mov
push
pusha
pop
adc
sti
adc
inc
daa
push
inc
cmp
cltd
popl
pop
movsb
into
popa
cld
rorb
sub
std
mov
std
adc
repnz
push
push
cmp
mov
mov
gs
mov
outsb
cld
lahf
sti
pop
int3
mov
mov
dec
pop
fstpt
bound
xlat
int
call
je
mov
dec
in
shrb
add
adc
adc
jb
cld
fdivrs
cs
movsb
fcmove
jns
mov
aam
in
movsl
jae
sarb
xchg
out
shll
sbb
pop
mov
pop
xbegin
add
xchg
push
cwtl
pop
lahf
adc
cs
mov
jle
or
adc
inc
fs
cmc
sti
test
push
cmp
mov
in
mov
push
mov
xchg
mov
cwtl
inc
mov
mov
dec
mov
cwtl
or
rcrl
cmpsb
mov
dec
sub
mov
dec
sub
push
or
or
out
cmp
mov
shl
sbb
mov
fdiv
gs
out
rorb
out
popa
push
ret
xor
mov
push
pop
rcl
xchg
aaa
add
in
mov
jbe
or
sub
test
mov
xor
pop
test
mov
mov
out
adc
xchg
pop
xchg
cmp
rcl
xlat
jle
cld
int3
or
mov
movsb
lea
push
sbb
pushf
test
add
jecxz
lahf
arpl
test
fmull
push
xor
ret
lret
dec
scas
insl
pusha
aaa
pop
cmc
inc
dec
xor
mov
jns
jecxz
pop
or
shrl
add
push
pushf
in
aad
fsubrl
and
xchg
or
inc
xor
dec
stos
push
mov
inc
fsubrl
pop
or
push
or
cmpl
repnz
sbb
pop
sub
adc
out
xchg
pop
cltd
inc
fisttpl
jmp
fiadds
std
adc
movsl
lods
inc
adc
pop
scas
xchg
add
leave
mov
push
aad
mov
testl
and
scas
imul
pop
call
dec
jbe
mov
outsb
les
or
movsl
inc
dec
stos
push
sbb
jge
xor
xchg
pushf
inc
aas
sahf
cmp
adc
stos
pop
dec
ficoms
pushw
mov
push
mov
sbb
push
aam
cld
xchg
ret
sti
lcall
sarl
aam
jecxz
ljmp
inc
push
movsl
cmc
inc
push
loop
push
jae
xorl
sub
das
popa
rcl
xor
stos
pop
adc
mov
and
shrl
lcall
mov
xchg
stos
inc
sbb
lret
test
ss
cmp
sbb
imul
sub
pop
addr16
sarb
dec
sub
add
repz
mov
mov
les
xor
ret
xchg
inc
add
xor
mov
jge
je
lcall
jp
cmpsb
sub
adc
mov
imul
jg
pop
outsl
arpl
cmp
test
cmp
imul
popf
cli
in
ja
push
into
pop
ljmp
sub
dec
pop
sbb
xchg
imul
in
xchg
jp
int3
mov
dec
aas
add
inc
or
cwtl
stos
inc
cmp
imul
pop
adc
push
loope
repz
push
push
cmc
cmpl
sar
ret
insl
cld
iret
stos
jmp
imul
addr16
aas
rcrb
mov
cmp
or
in
pop
push
lock
cmp
push
jle
arpl
add
mov
negb
subb
or
sub
js
rcll
fcomps
or
dec
cmp
xor
es
cmp
ds
jmp
mov
out
xchg
push
push
or
scas
jo
pop
shrl
out
dec
mov
fwait
jg
adc
lahf
addr16
pushf
fisttps
jg
pop
scas
cli
mov
les
adc
in
mov
mov
popf
shlb
orb
jo
dec
aam
scas
jle
aas
push
mov
test
pop
and
mov
mov
aaa
ljmp
fdiv
xchg
cmp
arpl
dec
popf
dec
mov
jecxz
pop
pop
push
or
enter
jge
test
inc
add
mov
pop
aaa
mov
stos
xchg
mov
out
mov
enter
push
dec
and
jae
sahf
adc
cwtl
scas
stc
data16
sbb
push
mov
nop
js
lahf
add
sbb
jo
insb
cmp
clc
push
jbe
rcll
cmpsb
mov
jle
fimuls
jo
out
push
gs
in
test
jae
sub
sbb
mov
fwait
push
adc
jbe
cmp
pop
stos
sbb
enter
in
ss
lret
out
shrl
imul
push
decl
mov
xchg
test
stos
pop
mov
cld
push
or
xchg
pop
cmc
push
lods
and
repnz
movsb
test
shr
mov
hlt
add
xor
xor
inc
repz
ja
fdivr
lods
pop
pop
jo
cld
fdivrl
jo
jge
es
push
pop
or
cmp
das
mov
jge
loop
jae
dec
shrl
and
jno
loopne
and
mov
arpl
std
dec
xchg
lds
jno
xchg
test
je
out
shll
aas
xchg
es
jle
or
insb
xchg
repnz
push
rep
cmp
mov
aaa
popf
cltd
mov
addr16
pop
mov
ret
or
mov
test
stos
xchg
jbe
inc
pop
leave
mov
pop
xchg
pop
mov
jl
push
mov
test
pop
pop
xchg
ss
test
jns
pop
or
dec
push
mov
loopne
cmp
push
adc
and
jp
jne
jmp
into
add
inc
enter
xor
push
icebp
xchg
shrb
and
dec
or
or
repz
inc
or
inc
xlat
xor
pushf
push
pop
xchg
jo
xchg
cmp
jo
add
nop
in
jbe
pop
outsb
js
fcmovnu
push
push
or
mov
sub
in
clc
scas
xor
in
dec
or
lea
push
push
and
arpl
inc
jge
pop
push
cli
shlb
push
cmpsl
imul
mov
inc
sahf
les
ljmp
sbb
cmp
shlb
jcxz
loop
pop
adc
mov
xchg
ret
mov
es
sub
sbb
adc
and
pushf
inc
jge
enter
pop
or
adc
xor
testb
fldt
push
scas
add
ss
adc
or
mov
flds
add
dec
cmp
lds
fnstenv
jo
sbb
xchg
mov
push
inc
mov
outsb
mov
inc
fsubs
int
pop
jecxz
lcall
loopne
push
mov
arpl
mov
in
fdivl
sub
add
sti
pushf
mov
in
jl
jmp
inc
pop
inc
push
out
sub
add
mov
mov
movsl
icebp
bound
xor
in
pop
hlt
jo
sbb
ret
sarb
aaa
mov
repnz
push
test
mov
and
cld
xor
jge
jbe
out
jmpw
push
sub
in
movsl
mov
pop
jns
rorb
movsb
imul
jae
xchg
jle
xor
shlb
sub
dec
and
cmp
push
inc
adc
mov
sub
fiaddl
das
add
sub
imul
jno
or
and
aas
xor
mov
aas
aas
lret
loopne
mov
and
mov
mov
pop
mov
mov
sbb
push
cmc
jle
add
aad
mov
xchg
mov
inc
aaa
popf
mov
test
and
dec
dec
and
push
testl
add
into
bnd
in
ds
cs
adc
aad
sub
data16
out
fdivl
pop
movsl
fdivrl
push
nop
into
out
jp
fdivrs
push
out
ljmp
aas
pop
fs
sbb
push
inc
sub
pop
xor
add
lret
mov
adc
cmp
cli
and
lcall
sbb
ds
mov
xor
jae
sbb
leave
mov
jge
orb
jge
cmp
mov
pop
aaa
sbbl
jg
repnz
aaa
repnz
adc
enter
xchg
or
mov
es
cmp
mov
outsb
stos
sbb
outsl
adc
daa
jg
ds
popa
loopne
inc
add
dec
mov
lahf
pop
mov
sbb
js
fiaddl
sbb
and
andb
pop
icebp
or
inc
rcll
cli
mov
dec
sub
add
sbb
mov
mov
cmp
and
mov
rcll
xchg
popf
clc
insl
push
push
ds
dec
mov
and
sub
xor
roll
adcb
movsb
mov
fldenv
mov
shll
fiadds
subl
je
call
or
fistpll
xchg
sbb
push
lahf
and
dec
andl
lods
sbb
ffree
push
lcall
dec
das
loope
jbe
add
mov
shrb
std
cmp
jb
call
and
dec
movsl
mov
mov
inc
ret
insl
sbb
mov
mov
sub
outsl
adc
mov
pop
pop
lahf
mov
sbb
jmp
or
cltd
scas
iret
dec
dec
lods
sbb
loopne
lea
enter
jg
jno
in
ljmp
lea
lock
jle
mov
ja
enter
idivb
xchg
pop
sbb
test
xchg
ret
add
xchg
jno
loop
pop
inc
das
pop
mov
stos
stos
in
into
and
fbstp
pop
iret
movb
mov
gs
int
in
aas
rclb
sub
enter
es
je
add
or
shr
sbb
or
aaa
cmpb
scas
push
fstpl
repnz
mov
lods
cmp
or
ljmp
xchg
add
fisubs
es
push
pop
movsl
lahf
dec
mov
lods
dec
mov
pop
in
cmp
imul
insl
cltd
cmp
mov
add
cmpb
into
add
jg
mov
cs
mov
jp
adc
out
aad
rcrl
and
stc
add
cld
call
inc
xor
and
lcall
imul
aaa
int3
leave
cmp
mov
xchg
xor
hlt
add
fs
leave
cmpsb
fdivl
hlt
shr
xchg
xchg
daa
sbb
xchg
ljmp
and
dec
icebp
sbb
daa
mov
jge
fldenv
mov
test
jecxz
dec
lea
fwait
mov
ja
out
mov
mov
or
pop
sarl
pushf
pop
popa
and
lock
inc
gs
xor
lock
dec
mov
sbb
push
ret
ja
popa
mov
mov
xor
inc
xchg
sub
imul
sub
inc
add
dec
adc
and
or
aas
sahf
mov
xor
push
ljmp
cmp
aam
out
push
xor
add
aaa
lock
insl
gs
in
jne
jbe
mov
xchg
xor
lods
loopne
scas
xlat
lds
mov
ljmp
and
leave
jecxz
mov
hlt
xchg
out
inc
ja
adcb
sahf
nop
stos
xchg
pop
movd
scas
push
push
jno
lods
imul
mov
adc
cmp
jnp
cs
outsl
aam
ss
rcl
cli
loope
and
test
fdivs
xchg
adc
push
mov
and
dec
fwait
rorb
xchg
adc
jbe
sarl
fldenv
lahf
dec
pushf
xor
or
sub
outsl
cmp
subb
add
mov
or
leave
in
sub
test
or
or
fists
adc
ja
push
sbb
inc
inc
and
jp
pop
cmc
add
xchg
mov
rcll
js
ss
xor
xchg
xchg
lret
push
sbb
rcrb
arpl
inc
mov
adc
stos
pop
inc
call
ljmp
int
incb
jne
popa
push
scas
pop
mov
js
pop
popa
sbb
xchg
sub
dec
jns
shll
add
out
stos
inc
mov
dec
sub
roll
jmp
in
addr16
jne,pn
fs
push
lock
stc
arpl
and
not
jle
cmc
loope
jp
fadds
ret
pop
pop
inc
das
mov
mov
fsts
pop
ljmp
or
jmp
xor
scas
test
mov
leave
mov
cmc
mov
stos
iret
xchg
ja
fsts
cmpsb
cld
scas
mov
mov
pop
test
inc
es
movsl
scas
cmc
or
and
inc
int
sbb
shll
xchg
jbe
jmp
jnp
mov
jmp
das
int3
adcb
scas
int
repnz
xorl
pusha
mov
rcrl
or
add
jne
movsb
jmp
sbb
jb
inc
pop
testb
mov
mov
push
out
inc
nop
imul
push
popa
in
mov
jle
into
cmp
cld
data16
cltd
xor
or
sbb
mov
dec
loope
into
push
mov
mov
push
sub
fnsetpm(287
pop
mov
mov
data16
sbb
add
ja
cwtl
mov
jb
int3
sarb
ds
not
rclb
xchg
aad
and
in
push
mov
add
in
mov
xorl
jno
cs
bound
lret
lcall
push
mov
adc
jmp
jno
pop
mov
push
hlt
xchg
int3
mov
jo
in
outsb
adc
loopne
jg
jge
mov
mov
in
jns
cwtl
pop
sti
sbb
jno
adc
push
cmp
decb
pop
int
mov
mov
dec
cmp
push
cmp
push
push
data16
pop
leave
push
in
shll
cmpl
inc
sub
ret
pop
mov
dec
push
or
nop
sti
scas
xor
pop
jge
test
add
jb
idivl
push
jnp
push
clc
dec
jns
lods
jbe
sbb
bound
sbb
pop
mov
pop
mov
xchg
imul
xchg
inc
mov
jnp
mov
dec
dec
adc
ret
mov
cli
push
loope
test
or
insl
dec
in
sub
in
and
fimuls
sbb
inc
jns
xor
push
mov
sub
lahf
mov
je
push
int3
xor
arpl
call
adc
out
push
into
lret
sbb
fimull
ja
add
mov
dec
fidivrl
stc
pop
xchg
test
outsl
in
cli
xchg
fcompl
rcrl
lock
jb
iret
ret
mov
xor
dec
lock
nop
lods
inc
or
jecxz
and
int3
and
lods
xor
inc
jns
xchg
sbb
pop
popa
mov
mov
cmp
or
mov
sbb
insl
mov
fld
mov
pop
xor
and
sub
testb
fnsave
adc
test
pop
nop
sbb
adc
lcall
repz
mov
sarb
jge
std
adc
fidivrl
clc
ja
loope
jp
outsl
rol
in
aad
mov
mov
jecxz
inc
xor
inc
bound
repnz
sbb
fs
hlt
aad
aaa
cmc
add
pop
arpl
idivb
outsl
ss
pop
out
pop
out
push
push
jb
lret
lcall
add
cmp
inc
out
mov
cwtl
add
dec
push
mov
and
aas
jbe
inc
inc
ss
dec
pop
in
pop
or
pop
adc
add
mov
mov
pushf
jns
ljmp
jne
pop
ret
repz
xorl
popf
inc
push
adc
mov
jmp
mov
fsub
fwait
push
sbb
inc
push
push
movsl
add
dec
fistl
ret
loopne
loope
adc
dec
mov
sub
stos
js
insb
xor
and
adc
inc
movsb
cs
xor
in
xchg
jb
sub
adc
es
dec
pop
jo
sbb
dec
and
popl
add
inc
or
cmpsl
cli
cltd
div
int3
jbe
stc
scas
adc
hlt
ja
pop
les
dec
dec
mov
outsl
es
pop
push
adc
movsb
loope
xor
xchg
cltd
dec
push
mov
mov
fists
pop
jns
imul
arpl
stos
in
push
jmp
fisubrs
pop
lods
sbb
xchg
movsl
xlat
popf
pop
jne
or
pop
ret
sub
inc
out
jbe
pop
arpl
enter
movsb
cli
cmpsl
lock
stc
call
push
push
pop
mov
lret
xor
mov
cmpsl
mov
push
les
and
ror
out
sbb
int
or
inc
dec
aaa
clc
inc
push
dec
dec
lcall
rep
add
cmovl
cmp
inc
negl
mov
mov
sub
leave
pop
dec
push
iret
fstpt
sub
int
and
stc
in
lods
fiaddl
in
mov
push
pop
cmpsb
pop
bound
imul
fwait
das
jnp
dec
loope
add
sub
pop
push
sahf
fdivr
dec
das
add
adc
loope
test
xor
and
inc
ss
jmp
int
add
sahf
or
stc
fs
add
lahf
push
cmp
jg
lret
ss
out
out
je
inc
mov
dec
or
out
daa
inc
jo
mov
test
xchg
mov
das
shll
adc
mov
jb
xor
sti
mov
data16
call
xor
shll
xchg
pop
outsb
out
xor
adc
dec
and
nop
iret
and
std
adc
call
dec
and
jmp
pop
pop
in
cmp
jl
pop
pop
jge
mov
fcomps
mov
movsl
mov
js
dec
pushf
fisubrl
idiv
popa
lock
fcoms
es
inc
and
aas
hlt
jb
movsb
xor
mov
mov
loope
dec
popf
test
xor
pop
aas
mov
sub
xor
ret
popa
orb
in
call
adc
xchg
outsb
pop
dec
add
sub
cmc
leave
iret
cli
push
test
jmp
pop
stc
sbb
inc
jno
in
cwtl
mov
xorb
jo,pn
sahf
push
mov
sub
and
cmpb
xchg
cmp
popa
and
cmp
sbb
rcll
pop
fdivr
repz
lahf
insb
outsl
mov
jb
push
mov
pusha
jne
je
mov
out
sbb
add
faddl
repnz
jmp
push
jl
rcll
pop
bound
xchg
insb
fidivrl
test
cmpsl
in
inc
sbb
mull
cmpsl
and
aam
out
mov
xchg
jl
cmp
fnstcw
cmp
inc
ss
or
in
insl
jo
test
es
sbb
pop
bound
movb
sub
ficomps
and
in
xchg
iret
out
jg
icebp
sub
rclb
out
or
cs
or
fcoml
cld
mov
mov
mov
mov
scas
pop
mov
cmp
sarb
movsb
sbb
mov
not
loopne
mov
pop
xor
push
inc
js
fsub
sub
jae
push
pop
sbb
mov
pushf
push
sbb
inc
pushf
ja
sbb
xor
cmp
and
sub
pop
jnp
xchg
fxch
xchg
inc
xchg
push
leave
aad
lods
pop
jg
and
roll
loopne
mov
pop
into
pop
dec
mov
jno
jne
sbb
inc
push
popa
jne
sub
loopne
pop
adcb
pop
imul
cmp
ret
pusha
dec
mov
aas
inc
jns
cwtl
dec
and
sti
mov
xchg
loope
imul
nop
jb
out
test
xor
loopne
rcrb
or
leave
hlt
push
sbb
js
mov
ficoml
sub
shll
inc
jl
hlt
inc
or
fdiv
out
adc
dec
adc
test
fsubrl
data16
mov
push
es
adc
xor
pop
int
push
jne
dec
ljmp
jns
js
ret
jl
mov
fildl
lahf
and
pop
fnsave
push
adc
lahf
adc
gs
sar
hlt
jo
add
mov
jle
andnps
shll
cli
loop
adc
je
sub
sub
lahf
out
daa
mov
std
out
bound
mov
cs
or
xchg
lahf
inc
mov
sbb
incl
out
clc
lret
mov
adc
ljmp
xor
es
loope
ficomps
xor
cmpsl
inc
or
and
mov
std
push
fldl
mov
xchg
dec
hlt
push
fdivl
lock
cmp
in
into
xchg
push
sbb
out
js
scas
rclb
xor
fs
clts
outsb
out
fistps
adc
aad
dec
nop
in
cmp
stos
popa
inc
mov
out
dec
push
xorl
xchg
call
jae
lea
rcl
cmp
push
jecxz
ret
popf
push
pop
pop
into
jnp
mov
cmp
or
dec
pop
or
xchg
lds
shrl
in
mov
mov
add
aaa
mov
jo
xor
mov
mov
jl
repnz
adc
int
in
inc
add
push
fidivs
jo
jbe
dec
sub
cmp
sub
icebp
and
push
insl
cs
mov
mov
mov
loopne
sub
into
push
lret
mov
jns
mov
or
testb
pop
test
jbe
fsub
lret
lcall
push
je
and
add
data16
xchg
cmpsl
pushf
ja
cmpsl
pop
xchg
sub
push
je
leave
cmpsl
xchg
and
sub
or
push
push
pop
or
mov
adc
mov
cmp
push
jp
ret
loope,pt
clc
mov
dec
scas
scas
xchg
jl
fmuls
pop
lret
mov
repz
aad
mov
fsts
add
mov
int3
in
or
sbb
or
jg
ss
in
outsb
stos
in
mov
jb
iret
bound
orb
mov
cmp
cmp
cmpsl
dec
es
xor
cmpsl
add
mov
mov
dec
popf
adc
push
aad
mov
or
adc
xor
or
sub
in
cmp
push
xchg
test
jae
out
enter
adc
jl
adc
and
adc
testl
lret
sbbl
scas
cmpsl
cmp
insb
popf
inc
shl
ds
xor
xor
mov
orl
std
and
ds
adc
aam
mov
cmpsb
push
insl
cmpsb
jg
aaa
or
xor
add
inc
mov
scas
orl
stos
das
push
fiadds
sub
xor
fisubrs
daa
push
test
xlat
jle
lcall
inc
cmp
loope
movhps
leave
repnz
jns
pusha
fsts
lret
stos
inc
loopne
pushf
inc
popa
fdivs
xchg
jne
cmp
mov
andb
pop
cmpb
jbe
jns
ljmp
out
ud2
push
push
inc
gs
repz
dec
push
xchg
popf
or
clc
pop
and
jae
into
mov
or
pop
sahf
sbb
clc
adcb
xor
sub
or
rcrb
adc
xchg
jmp
jo
nop
push
or
movsl
jae
mov
das
in
mov
xor
in
sbb
rolb
mov
dec
in
xor
sbb
sti
push
insl
jp
mull
xchg
and
mov
xor
negl
cli
mov
mov
aaa
lock
or
mov
fs
int3
jbe
stos
test
cltd
add
mov
outsb
ljmp
adc
adc
mov
negl
or
into
arpl
fwait
mov
insb
in
push
pop
sub
add
repnz
mov
jo
add
lock
sarl
cwtl
ret
xchg
add
into
adc
push
inc
pushf
repnz
jbe
jne
mov
push
dec
jge
call
inc
dec
rcr
push
gs
xor
xor
jbe
nop
add
notl
add
mov
sub
or
inc
fdiv
mov
les
adc
in
mov
outsl
sbb
fwait
add
mov
hlt
mov
std
xchg
mov
mov
das
sbb
repz
sbb
jbe
xchg
test
dec
lret
pop
hlt
sbb
jne
test
sbb
ret
popa
cld
pop
push
or
lcall
push
aad
and
test
mov
flds
mov
mov
xchg
std
push
add
sbb
lcall
jns
add
lahf
add
mov
repz
mov
mov
and
rcr
adc
cs
sahf
dec
jb
add
and
mov
in
lea
ss
push
dec
push
cmc
stc
push
aaa
sub
or
lret
dec
mov
mov
lea
jecxz
popf
roll
sarb
aaa
cltd
sub
jmp
inc
imul
test
lods
dec
js
rol
push
push
jo
cmp
mov
mov
inc
cmpsl
imul
stc
sbb
int3
sub
pop
pop
xchg
add
and
dec
adc
push
stos
fldenv
sub
push
loope
in
ret
or
stos
adc
inc
fbld
lahf
jns
jno
ret
dec
aaa
xchg
lret
int
cmpsb
dec
nop
fistpll
lods
add
into
pop
or
xchg
shld
aas
js
popf
dec
mov
loopne
test
aas
int
jae
push
pop
mov
jb
or
mov
cmpsl
push
mov
in
cmc
xlat
in
cld
inc
arpl
int3
inc
insl
mov
mov
in
cmc
aam
outsb
les
xor
int
fwait
push
fistps
ja
mov
push
aam
dec
fiaddl
and
jns
xchg
sbb
push
mov
iret
leave
out
ret
movsb
inc
pop
cld
test
mov
cmp
dec
xor
push
iret
jmp
cmp
sub
loop
fxch
or
jle
sbb
jl
dec
ljmp
push
daa
adcl
mov
fmuls
insl
adc
and
dec
pop
dec
mov
icebp
lods
push
push
sbb
push
rol
push
lds
notb
shlb
rcrl
push
jg
mov
cmc
or
icebp
loopne
jo
negb
mov
mov
push
fwait
mov
out
shr
sub
push
push
fmuls
mov
adc
push
stos
bound
ja
fwait
xor
das
mov
cmp
test
repnz
pop
shrb
dec
mov
and
rcrl
or
out
rolb
in
jb
nop
add
cmp
popa
cld
jne
outsb
iret
test
or
ret
pop
lock
sbb
pusha
inc
das
push
test
pushf
xchg
lods
xor
test
jbe
loop
or
testb
push
outsb
xchg
stos
ds
aas
push
push
xor
push
adc
and
jb
loope
out
fadd
pop
mov
mov
jl
add
lock
dec
pushf
sub
mov
adc
or
fbstp
dec
dec
das
scas
jns
dec
das
or
mov
fists
inc
mov
hlt
jecxz
push
lods
std
loop
jns
enter
xlat
adc
insl
cmc
lods
ret
pop
sub
addl
lods
shlb
hlt
xor
xchg
pop
fdivl
sbb
daa
or
jmp
mul
ret
or
stc
cld
dec
and
sbb
add
cwtl
bound
orb
movsl
int3
ret
adc
in
ficomps
mov
jl
cmp
test
pop
inc
adc
dec
sbb
addr16
sbb
jno
decl
xchg
pop
fsubrp
push
rclb
movsl
xchg
jl
adc
aam
pop
aad
sub
pushf
or
jo,pn
clc
insl
js
mov
mov
push
int3
add
fnstenv
pop
dec
bound
adc
aas
jmp
test
jecxz
add
aaa
fisubrl
dec
cs
in
mov
push
push
mov
dec
or
in
fnstcw
or
push
cmp
xchg
aam
cmp
lock
je
in
test
mov
mov
ds
mov
in
xchg
mov
mov
nop
mov
xor
add
pusha
sub
dec
push
into
bound
push
push
mov
lcall
adc
pushf
mov
cmp
icebp
sub
jae
mov
mov
fcompl
imul
mov
or
lahf
mov
mov
into
in
iret
or
cwtl
or
adc
push
aas
jmp
repz
dec
adc
fdivrl
xor
xchg
aas
and
push
jno
and
mov
adc
ss
stos
xchg
lods
scas
shl
push
test
das
add
mov
lods
call
jne
int
aad
sbb
je
adc
mov
xchg
cmp
jg
xlat
jno
push
jge
cmp
push
fsubl
xor
xchg
sarl
xor
jno
dec
shl
int3
daa
and
jp
sbb
aam
andb
push
imulb
and
out
repz
add
xchg
js
adc
add
out
clc
jle
push
out
or
cs
xor
pop
adc
call
movsl
mov
inc
fdiv
push
scas
sub
adc
cld
popa
iret
scas
mov
add
adc
fildl
in
inc
push
int
clc
jmp
lods
pusha
or
sub
jle
xor
jns
les
and
cltd
xchg
jne
repnz
les
into
push
fadds
push
mov
ret
sbb
mov
push
push
mov
lods
sbb
adc
sahf
sbb
subl
jg
cmp
mov
in
pop
daa
pop
std
movsb
pop
pop
cli
je
adc
pop
fsubrs
std
and
inc
inc
mov
mov
mov
sarb
pop
aas
pop
sbb
mov
mov
lahf
mov
bound
inc
cmp
inc
dec
sub
rcrl
xchg
in
nop
cli
and
arpl
frstor
outsl
fdivl
das
cld
shlb
adc
pushf
mov
mov
mov
in
test
aam
int3
es
and
fs
js
leave
stos
cmp
popf
in
jns
testb
mov
stc
mov
sbbl
pop
and
lret
inc
xchg
add
jp
lret
mov
and
xchg
xchg
rol
inc
sub
js
enter
jl
xorb
ljmp
cmpsl
add
les
mov
jne
shll
icebp
jg
test
xor
mov
cmpsl
mov
lret
jge
je
sub
dec
aaa
sub
mov
or
icebp
inc
lds
cmc
or
aam
insl
or
xchg
int3
jae
jo
hlt
icebp
sub
cmp
adc
shlb
insb
rorl
ljmp
mov
out
stos
xchg
add
loop
dec
fisttps
sbb
push
lret
mov
jp
adc
and
push
shrl
xor
jne
mov
lahf
dec
cmp
aam
notl
popf
push
push
inc
push
out
inc
repz
scas
repnz
push
ljmp
mov
jae
mov
dec
inc
jno
movsb
mov
sbb
inc
mov
xchg
inc
add
bnd
push
add
leave
cmp
iret
xlat
hlt
lds
mov
pop
out
inc
mov
addb
ficoms
xchg
je
sbb
insl
dec
pop
adc
pop
cmp
cmp
lods
test
pushf
aad
push
mov
insl
mov
test
call
stc
and
mov
shl
fsubr
test
jnp
adc
sti
push
xor
lcall
movsb
repnz
push
pop
leave
popa
mov
es
hlt
jnp
xchg
out
adc
fbstp
push
cld
and
iret
cmc
sub
or
push
push
pop
lret
inc
jecxz
push
sbb
hlt
cmp
cli
push
jo
mov
dec
mov
xor
aaa
xchg
pop
lods
sbb
pop
cltd
push
ret
sti
sbb
ljmp
leave
aad
or
jge
out
loope
cmp
mov
aas
shll
jnp
lea
pop
mov
jo
adc
out
mov
sbb
sub
test
movsl
or
dec
push
cmp
mov
jmp
sub
cmpsb
call
insl
mov
mov
or
dec
test
shl
cltd
fisttpll
stc
mov
cmp
mov
push
push
push
ja
jbe
imul
fistps
lret
push
lods
dec
fnstsw
cmp
std
stos
stc
out
daa
addb
fdivrs
jmp
out
pop
ljmp
xor
mov
gs
out
scas
mov
mov
xchg
aad
int
sbb
loopne
pop
leave
aad
mov
mov
lret
or
xchg
ret
push
dec
mov
out
outsb
outsl
das
fildl
or
jmp
mov
inc
jp
inc
dec
jbe
dec
mov
nop
rorb
clc
sub
shl
aaa
mov
jle
cmp
movsl
repnz
sbb
add
or
mov
outsl
fucomi
jne
push
out
movsb
jecxz
pop
add
xor
and
insb
clc
pop
lods
xlat
and
cmp
jno
cmp
pop
jle
xor
into
into
lret
testb
push
mov
out
shll
pop
dec
push
andl
xchg
xor
aaa
push
into
leave
mov
mov
icebp
ret
aad
pop
nop
sub
stos
xor
shll
jle
adc
repz
mov
int
repnz
cmp
ret
xchg
std
arpl
push
xchg
push
out
stc
jbe
pop
negl
cmp
adc
aam
ss
sbb
ss
push
lret
mov
in
mov
pop
test
icebp
mov
in
in
loopne
dec
mov
cmpsl
and
sti
push
pop
fucomp
mov
or
movb
dec
fidivrl
cmp
push
mov
frstor
and
into
push
inc
inc
sbb
shrb
xor
mov
cwtl
jno
aas
shrl
push
jmp
mov
and
mov
dec
pop
jge
adc
push
sub
sbb
xchg
dec
inc
inc
adc
popa
sarl
jl
imul
imul
cmp
das
adc
outsl
loop
or
ret
inc
adc
mov
mov
in
jecxz
push
jb
bound
mov
push
icebp
mov
es
pop
imul
push
add
dec
repnz
jg
and
or
cmp
inc
mov
insb
cmp
xchg
adc
fdivl
xchg
inc
les
sti
pop
cmpsl
or
jecxz
lds
cltd
dec
jl
inc
xor
dec
sub
push
ret
imul
mov
stc
cmp
ljmp
popl
inc
pop
mov
gs
dec
xor
jne
cmp
mov
into
clc
out
xor
jp
daa
xchg
and
push
xchg
adc
mov
lods
pop
icebp
lahf
push
ret
out
out
add
call
xchg
ss
cmp
popf
xchg
out
shlb
xchg
push
popf
and
jl
mov
scas
jbe
push
xor
adc
outsl
inc
xor
in
jecxz
ljmp
sysret
or
jg
lds
lret
imul
xchg
out
aas
test
aad
bound
pusha
repz
or
clc
sbb
ss
stos
xchg
jg
pushf
je
loop
into
xchg
mov
stos
int3
sbb
in
sahf
test
mov
out
lock
fstpt
jnp
mov
push
stos
cmc
lods
cmp
dec
add
jae
jae
outsb
and
std
iret
aaa
lock
push
ss
movsl
mov
cmp
and
add
test
cmp
jbe
lods
imul
lcall
fdivl
and
movsl
xchg
pop
inc
fimull
into
rcrb
dec
lds
xchg
xchg
daa
push
push
sbb
sub
pop
lock
divl
pushf
and
push
shlb
cmp
std
mov
imul
jl
push
inc
fcomps
inc
mov
arpl
js
int3
mov
add
std
push
xchg
mov
cmp
inc
sub
pop
pop
xor
cmp
rolb
lahf
leave
pushf
shll
das
pusha
push
cmp
and
ret
or
cltd
hlt
cmp
fdivp
sbb
and
adc
std
int3
add
cmp
inc
loop,pt
hlt
idiv
push
mov
stos
cmpl
scas
cltd
jecxz
inc
mov
jl
aaa
sbb
and
rcrb
insl
mov
jle
inc
cmp
fidivrs
dec
test
cmp
imul
imull
mov
lea
repnz
or
pusha
sub
and
inc
inc
add
sahf
dec
lods
jp
push
mov
sub
xor
into
inc
xor
jge
testb
xchg
xchg
inc
jl
das
or
dec
out
xchg
cld
sub
lock
jo
leave
pusha
cmp
xor
push
aas
fldcw
or
push
imul
fnstcw
cmp
int3
sti
lahf
cmp
jbe
pusha
xor
insl
cmp
adc
add
dec
pop
cmp
xor
xlat
pop
xor
cmp
ja
cli
mov
out
jo
push
push
aaa
jne
shrl
stos
data16
rol
dec
movsl
sub
mov
adc
fmulp
cltd
inc
popf
cmp
or
ret
in
lret
cmp
pop
dec
add
push
aam
xor
sbb
adc
sbb
sbb
ljmp
add
fld
push
and
jo
fldcw
dec
int
cltd
inc
aad
stos
inc
mov
add
and
inc
cwtl
push
and
data16
pusha
fcom
jmp
insl
push
ret
sub
adc
mov
lds
shl
fcoml
fidivrs
into
and
int3
mov
sahf
and
js
mov
scas
adcb
in
outsb
sbb
pushf
jge
lret
inc
and
les
cmp
ss
int
into
out
cmp
popa
in
pop
ja
mov
add
inc
cmp
loope
in
cmc
fsubs
bound
jl
lahf
or
mov
mov
jo
js
ror
loopne
mov
sbb
push
leave
add
and
push
mov
in
jae
xor
setle
les
jg
test
cmpsb
jae
pop
outsl
int3
and
adc
dec
push
stos
movsl
inc
push
fs
xchg
add
test
or
js
fidivs
jle
lods
das
cmp
mov
popf
jo
adc
vmovsd
das
popf
call
add
jg
jb
dec
aas
jmp
mov
clc
cmpsl
dec
sbb
sbb
pushf
adc
dec
imul
dec
adc
popf
adc
xor
test
adc
aas
dec
iret
mov
ret
cwtl
pop
in
sbb
xor
dec
stc
test
cmp
mov
ret
iret
mov
inc
cmp
outsb
xorb
in
and
inc
add
rcrb
fstl
fiadds
and
mov
fldt
and
inc
and
pop
dec
adc
pop
cs
xor
cmc
stos
in
repz
mov
or
mov
jo
cmp
leave
jecxz
cli
jge
je
ss
pop
dec
pop
nop
xchg
sbb
rcr
sbb
cs
cmp
xor
mov
mov
sbb
cmp
inc
and
in
not
inc
cmp
arpl
fcoms
xchg
push
aas
inc
jbe
push
jae
or
ds
sti
push
mov
test
roll
fsts
inc
dec
cmp
dec
repz
js
jmp
or
adc
push
loope,pn
jecxz
lret
mov
cmp
out
cmpsb
sub
xchg
mov
and
add
sub
call
dec
adc
popa
psubusw
mov
aam
out
cvtdq2ps
xchg
pop
cmpsb
cmpsl
sbb
out
mov
outsl
mov
mov
jle
aas
ja
stos
sbb
jecxz
andb
sbb
xlat
lock
cmpsb
test
leave
fisttpll
mov
sbb
dec
lods
or
repnz
push
mov
into
pop
inc
addr16
pop
inc
stos
jnp
outsl
adc
in
lock
icebp
sahf
push
add
jno
inc
jecxz
mov
adc
sbb
mov
pop
pop
mov
aaa
lea
sub
sbb
lret
xor
or
cwtl
lods
scas
aam
jns
daa
and
jns
inc
jae
je
sbb
xchg
inc
clc
stc
hlt
sub
movsb
lret
jnp
lods
jl
movsl
dec
enter
add
cmc
movsb
in
aam
cmp
mov
mov
fiadds
repz
dec
fbld
xor
outsb
lret
in
fsubrl
jge
insb
lahf
mov
int
xchg
push
and
enter
pop
and
fildll
dec
outsb
aas
or
mov
cmp
aaa
jmp
adcb
cmp
ror
xor
movsl
fnstcw
out
sub
ja
cmp
xor
xor
pop
inc
jnp
js
inc
jae
adc
sbb
add
rcrb
in
jge
or
jecxz
loope
mov
adc
inc
scas
nop
icebp
cmc
jmp
scas
xor
xchg
xchg
dec
push
lods
jns
gs
aaa
stos
xorl
push
lods
das
std
rcrb
and
or
pop
cmp
or
std
dec
jae
fidivl
xchg
lds
stos
es
imul
iret
popl
rorb
faddl
dec
mov
push
mov
or
notb
nop
decl
lcall
inc
mov
fisttpl
cmp
ret
xchg
pop
lods
cmp
inc
cmp
jge
xor
adc
sub
dec
cmp
sbb
add
cmp
sbb
dec
sub
or
inc
dec
cmp
leave
pop
into
xchg
enter
mov
daa
es
cmp
aad
gs
push
arpl
mov
lock
cwtl
iret
sti
call
mov
fimull
and
aam
imull
dec
jns
imul
int3
pop
mov
xchg
inc
incl
inc
jbe
insl
loopne
stos
mov
mov
mov
pop
rolb
jecxz
mov
xchg
pop
iret
pop
fldt
out
xchg
cld
mov
loop
subb
mov
lods
pop
adc
jg
push
call
and
mov
mov
testl
mov
leave
xchg
xchg
jnp
push
pop
adc
scas
push
bound
addl
sbb
or
jl
loope
sub
pop
jp
cmp
or
icebp
les
js
sbb
pop
inc
push
sub
fmul
std
loop
jl
nop
sbb
hlt
pusha
cmpsl
int
sub
pop
fimull
fnstenv
lret
scas
push
movsl
mov
sbb
sub
leave
xchg
daa
sahf
lea
loop
cmpsb
push
jne
mov
addr16
orb
gs
add
fwait
sbb
sbb
test
mov
ljmp
pop
popa
lods
rcr
idivl
in
outsb
mov
ja
pop
mov
out
mov
out
or
cld
mov
mov
pusha
in
or
fstpt
rdpmc
ret
pop
test
das
or
lds
lret
jne
loope
mov
test
pop
jg
jo
xchg
lock
mov
mov
cld
repnz
shll
rcrl
adc
push
test
mov
mov
push
pop
pop
movsl
ffreep
jp
movsb
aaa
pop
hlt
imul
sub
xor
cmc
push
cmc
and
fcoms
aas
outsb
push
xchg
mov
mov
adcl
movsl
mov
test
cmp
push
inc
jg
lahf
xor
out
fdivr
clc
jle
fstpl
outsl
in
mov
xchg
hlt
pop
jno
loopne
and
push
push
pop
dec
daa
pop
mov
stc
loopne
xor
cld
add
xor
mov
call
test
push
movsb
or
pop
daa
lock
ficoml
stos
xor
std
dec
pop
sub
push
cld
in
stc
test
int3
push
lea
test
cmp
rorl
dec
fmull
movsb
mov
sti
push
push
imulb
mov
jmp
xorb
mov
dec
dec
sub
xchg
push
pop
xchg
cmp
xor
cmp
xchg
int3
mov
lahf
out
inc
popa
add
cmp
repz
in
repnz
decl
push
movsl
in
ror
ss
mov
add
sub
inc
mov
popa
aam
add
inc
push
mov
scas
xor
lods
mov
xor
ds
fucom
out
int3
jno
test
mov
out
insb
mov
push
adc
mov
dec
loopne
inc
mov
mov
mov
adc
jl
sbb
loop
or
loope
push
mov
fsts
lcall
and
in
adc
pop
mov
jae
sbb
aad
into
jecxz
xchg
js
pop
aad
popf
popf
lea
fldcw
jge
les
xor
ror
and
bound
mov
stos
movsb
or
xchg
xchg
cmp
fistpl
aam
and
xor
enter
fnstenv
nop
lret
cmc
push
mov
lods
mov
inc
dec
dec
lock
mov
jae
out
nop
jns
add
aam
pop
and
add
rolb
daa
sbb
jne
push
mov
adc
sub
sub
dec
pop
dec
xchg
addr16
adc
test
out
mov
aad
aaa
sahf
lods
pop
inc
stc
and
jmp
pop
adc
push
sti
sub
pop
cmpsb
gs
cmp
js
out
sub
loopne
imul
fwait
and
stc
ds
and
fcoml
addl
add
stos
adc
dec
in
rclb
cmp
loope
or
xor
popa
imul
fadds
loop
aas
clc
adc
into
imulb
mov
jo
push
mov
ds
dec
or
insl
ja
cmp
fsubs
adc
xor
mov
sub
orl
fucomi
jl,pn
pusha
xchg
in
xlat
cmp
jbe
cmp
jp
mov
scas
add
aad
or
add
dec
or
and
cmpsl
add
xor
lock
pop
push
adc
fidivl
mov
enter
mov
sbb
pop
repz
jno
xchg
add
cmpsb
shll
and
jle
push
add
pop
idivl
mov
mov
insb
cmp
mov
mov
popf
push
xchg
adc
test
fistpll
and
in
ds
add
sbb
sub
xor
mov
in
js
aas
or
inc
inc
pop
aas
push
cmp
mov
mov
ret
mov
std
jae
dec
ret
cmp
or
fmuls
mov
fiaddl
lahf
jnp
loopne
pop
imul
push
iret
add
test
cmp
add
xchg
push
push
cmp
mov
stc
ja
sbb
mov
and
mov
rolb
cmp
std
call
jns
idivl
test
or
ljmp
aam
gs
pusha
and
sub
add
orb
add
pusha
xchg
cli
out
mov
inc
jns
and
pop
push
ds
inc
pop
jb
mov
sbb
in
fstpt
cmp
xor
adc
addb
xchg
jp
movsb
jecxz
or
cmc
adc
ja
movsl
je
out
sbb
push
cwtl
adc
sbb
pop
pop
in
add
dec
loope
stos
fsubrs
dec
out
dec
out
js
push
mov
dec
jo
xchg
dec
dec
icebp
pop
xchg
rcr
das
push
jno
sbb
into
adcl
int
aaa
daa
cli
cmpsl
repz
aaa
les
addl
fsubp
movsl
add
add
mov
push
pop
push
lods
dec
pop
xchg
jo
outsl
out
icebp
cltd
inc
xlat
lahf
add
roll
cmp
pop
lea
out
sub
jl
push
imul
cmc
cmp
scas
dec
add
addr16
test
loop
pop
jno
out
insl
fs
xor
sub
mov
fs
popa
cli
inc
pop
or
adc
jae
adc
data16
cmp
push
dec
loope
jecxz
scas
push
out
sbb
adc
sbb
cwtl
int3
jecxz
pop
xor
dec
imul
fdivl
jbe
push
xor
repz
mov
push
in
shrl
stc
mov
stos
andl
clc
rol
cmp
mov
and
test
ss
pop
arpl
pop
dec
ljmp
pop
mov
test
push
imul
ret
dec
add
add
jl
jge
or
mov
jbe
mov
sbb
adc
out
sti
enter
cmp
cli
push
loope
and
and
insl
fs
mov
sbb
dec
mov
in
bound
popa
jmp
jp
jl
and
mov
and
jl
mov
add
push
lret
aaa
xchg
adc
jns
mov
mov
push
cwtl
add
dec
stos
push
pushf
setbe
inc
mov
push
xchg
adcb
cmp
iret
xor
repnz
pop
lret
jge
imul
pop
in
ret
in
enter
adc
jae
ret
incb
cmpsb
leave
mov
cwtl
int3
inc
xor
shl
shrl
push
mov
push
repz
push
dec
and
cmp
push
fcmovb
rorb
movsb
lds
ja
sti
mov
es
in
insl
sbb
popa
rorl
sub
push
mov
jae
jae
lods
mov
stos
lock
test
mov
jl
xor
pop
xchg
das
sub
cmpl
lock
pop
in
jmp
testl
enter
orl
cmc
sub
xor
adc
mov
je
gs
fidivrl
add
xor
outsb
ret
pusha
pop
add
ljmp
sub
sbb
mov
and
lds
inc
xchg
cmp
in
stos
mov
in
push
jnp
xchg
jno
cmp
xor
push
mov
lret
mov
mov
subb
push
or
sbb
cmp
stc
cmpsb
dec
cmpsl
adc
lds
test
rolb
adc
push
adc
cmp
pusha
mov
jg
mov
rcrb
shrl
lahf
hlt
jle
leave
sti
cmpsb
jbe
dec
lret
popa
push
hlt
mov
mov
cmpsl
cmpsl
jmp
in
cmp
or
or
mov
mov
icebp
stos
notb
xor
xor
bswap
add
pop
push
enter
dec
addl
mov
pop
adc
sbb
test
sbb
decl
sbb
rclb
int3
xchg
push
push
jbe
push
scas
stos
adc
enter
inc
mov
or
movsl
comiss
rol
jmp
stc
jne
mov
mov
pushf
pop
jne
int
loope
push
popf
jb
xchg
jo
push
outsl
insl
sub
fldt
iret
pusha
fildll
or
jbe
lret
xchg
and
lahf
mov
cmp
mov
jle
add
inc
sbb
enter
iret
and
mov
test
xchg
call
lds
inc
inc
clc
ret
shl
iret
pop
jbe
rclb
into
divl
or
xor
pop
in
jno
and
mov
xor
push
popa
inc
dec
sti
jl
not
adc
mov
mov
and
fldenv
adc
mov
repnz
mov
fistps
aas
add
stos
cmp
shl
fmuls
std
pop
ljmp
adc
repnz
xchg
mov
sub
es
fcomip
inc
imul
and
and
adc
mov
adcl
jge
fldcw
fistl
shrl
xor
fisubrl
adcb
lret
adc
fwait
mov
arpl
aad
pop
pushf
dec
mov
xor
lods
stc
xor
scas
push
jg
inc
adc
clc
dec
andl
pop
scas
data16
xor
mov
cmc
fstpt
push
mov
in
outsb
push
sbb
sbb
or
jge
inc
sbb
arpl
mov
pusha
rcll
lds
jno
loopne
jge
in
push
popf
pop
sarl
imul
les
and
sbb
pop
jbe
movsl
fists
mov
roll
ja
mov
mov
push
arpl
int
pusha
jae
adc
out
mov
aam
repz
sbb
popa
inc
in
mov
add
cmc
xchg
std
popf
test
sbb
sbb
push
icebp
inc
aaa
xor
es
adc
cmpsb
cmpsl
or
inc
xchg
push
hlt
xchg
cmpsl
push
xchg
orb
jp
arpl
imul
inc
ret
pop
loop
inc
mov
test
pop
cld
sbb
push
xor
int3
pop
ljmp
push
jo
scas
addb
subl
test
mov
and
in
add
inc
lods
lock
loope
scas
push
in
daa
jg
cmpl
push
in
push
pop
push
stos
and
gs
adc
or
test
pop
fildl
ja
pushf
test
lods
mov
inc
sbb
xchg
orl
pusha
sub
pushf
cli
xchg
sbb
bound
es
dec
cmp
and
shlb
movd
jp
xor
nop
out
inc
mov
sub
jae
jmp
out
in
das
mov
mov
test
cli
test
or
jne
bound
dec
mov
mov
dec
xchg
mov
icebp
rcrb
dec
stos
sbb
push
and
enter
ss
stc
jns,pt
cmp
ss
xchg
stos
or
lock
xor
sbb
add
xor
scas
das
enter
pop
jae
aaa
cmpsl
fld
jno
into
and
icebp
lock
add
mov
pop
cs
adc
dec
outsb
pop
inc
sbb
inc
lea
fcomps
rorl
dec
rol
repz
popa
sub
push
sub
lret
cli
movsl
lea
iret
sbb
push
dec
rorb
mov
add
adc
mov
add
into
and
ss
aas
mov
jecxz
and
iret
push
xor
pop
and
jle
insb
push
lret
sub
jns
movsb
jnp
sbb
pop
add
movb
in
mov
popf
push
push
std
push
aas
popf
add
std
inc
pusha
mov
shl
pop
xchg
mov
into
xor
push
pusha
ljmp
push
mov
js,pt
cli
sub
mov
cmpsl
push
rcl
push
inc
mov
cli
fisttpll
dec
roll
inc
mov
sub
push
xor
sbb
into
inc
iret
pop
sub
mov
iret
mov
sub
and
into
out
lcall
pusha
inc
mov
sbb
dec
in
mov
cs
testl
es
push
add
push
mov
cmpsl
rcll
cmpsb
or
cli
cmp
ljmp
fwait
or
sub
mov
dec
test
mov
add
cli
jl
sbb
aas
lods
pop
push
nop
arpl
rclb
cmp
repnz
fisttpl
xchg
icebp
adc
ja
push
push
mov
insb
mov
bound
mov
adc
xor
loope
mov
popf
add
das
dec
icebp
sub
shr
sahf
sub
les
adc
xor
or
adc
and
ret
push
rclb
xor
popf
call
jns
jnp
mov
pop
cmp
das
jnp
push
ror
aad
and
ljmp
adc
jge
xor
push
leave
push
mov
adc
and
stos
xor
test
popa
ds
stos
test
push
sarl
add
jb
imulb
push
sahf
lods
in
in
aad
enter
stc
dec
mov
sarl
sahf
adc
mov
pmovmskb
cmp
adc
addr16
mov
mov
sub
enter
mov
push
push
mov
pop
or
ljmp
xor
push
dec
fildl
push
mov
inc
repnz
jg
cmp
mov
call
ja
mov
cmpsb
imul
popa
pop
jo
pop
shlb
lods
insl
loop
push
mov
mov
push
in
jg
movsl
xchg
lods
mov
int3
test
push
sbb
sub
cmp
inc
lret
out
cmp
cmpsl
push
call
dec
or
sub
in
lea
xor
mov
jecxz
lret
test
mov
je
test
gs
sub
xlat
inc
out
and
icebp
lds
lcall
mov
inc
out
mov
enter
orb
shlb
ret
scas
mov
sbb
dec
inc
push
inc
xchg
clc
dec
mov
or
pop
fcmovnbe
fdivs
in
jo
ret
xchg
pop
jno
mov
lea
notb
and
push
rorl
imul
divl
lcall
sub
shll
push
xchg
mov
lods
mov
int
mov
adc
jmp
pop
cmp
ret
scas
cmc
mov
mov
jmp
ret
fldenv
lahf
or
jns
fisttpll
aas
push
stos
mov
gs
push
and
pop
rorl
mov
pop
or
add
sahf
dec
xor
loop
in
xor
mov
andl
out
fstpt
jp
xor
mov
push
add
hlt
dec
sahf
mov
mov
mov
mov
jle
mov
daa
inc
push
jecxz
add
test
shll
sahf
scas
pop
add
inc
dec
adc
into
dec
sub
xor
adc
jg
fistpll
xor
mov
gs
xchg
adc
jae
mov
xor
xchg
aam
popa
leave
and
cmp
test
mov
fdiv
ficompl
popf
imul
dec
jae
idiv
jo
out
call
icebp
push
add
xchg
stc
repz
push
inc
out
and
mov
out
les
push
sbb
mov
mov
sbb
pop
push
mov
mov
insl
shlb
outsl
mov
fildll
add
fs
xchg
ljmp
sub
push
pop
sub
add
es
or
andl
lods
mov
push
sahf
push
push
and
add
pavgb
mov
mov
fwait
push
jb
xlat
jg
jne
xor
jne,pn
sub
pop
mov
mov
stos
sbb
fildl
aad
sub
pop
jne
movl
jb
add
icebp
int3
sbb
mov
sub
sbbb
jmp
aaa
in
cmp
mov
xor
xor
inc
mov
jmp
adc
or
sub
shrl
jns
xor
pop
push
in
ds
jo
jg
sub
xlat
fisubs
pop
and
fldt
rorb
lret
jbe
or
cmp
sahf
pop
cwtl
pop
mov
inc
sbb
jl
mov
cwtl
scas
lcall
dec
ret
or
add
or
in
into
push
int3
je
xchg
adc
sub
outsb
xchg
sub
push
and
xor
js
insl
sahf
jg
js
jno
test
loope
roll
in
dec
mov
fnsave
insb
and
dec
xor
lahf
mov
fists
testl
repnz
fsts
out
jo
cmp
dec
lods
popa
jp
repnz
jne
int
sbbl
lods
out
aad
shrl
jno
je
jnp
loopne
xchg
daa
mov
mov
xor
mov
lcall
call
push
sbb
pop
outsl
testl
ja
lcall
imul
sub
jnp
add
sbb
adc
jmp
inc
sub
stos
subb
or
xchg
movsb
ret
cmpsl
jmp
lret
jmp
lock
mov
jne
and
arpl
leave
inc
lret
cmp
xchg
and
inc
xlat
cmp
mov
inc
push
jmp
mov
js
mov
in
pop
scas
mov
loop
jae
jl
and
inc
stc
inc
cmp
mov
cmp
lcall
fwait
jne
or
pop
lahf
push
jmp
lahf
aas
ljmp
divb
incl
fmull
add
pop
test
xor
adc
dec
nop
xor
or
mov
pop
mov
mov
ss
adc
nop
popf
mov
mov
cmp
sub
incl
sbb
outsb
mov
int
pop
push
sbb
fstl
or
sarl
add
add
imul
pop
fnstsw
lahf
mov
cmpsb
movsl
sti
loope
jns
sti
xor
jns
int3
xor
insb
in
loopne
ja
cwtl
xchg
xchg
push
lods
mov
sbb
cmpb
ds
aas
inc
mov
cmp
push
imul
xchg
repz
in
mov
in
add
scas
or
xor
arpl
jg
and
fidivl
dec
dec
jmp
add
inc
xor
add
push
inc
int
adc
stos
and
stos
pop
mov
mov
int3
sbb
les
fwait
ljmp
ljmp
cmp
inc
fwait
sbb
push
or
xlat
adc
lods
pop
jne
out
cmp
sub
cmp
mov
loop
sbb
xor
cmp
mov
dec
xor
and
lcall
clc
inc
xor
xchg
into
xchg
jmp
aad
pop
xchg
imul
fnsave
adc
pushf
clc
scas
jecxz
xchg
test
aaa
fldt
or
ret
pop
test
sub
xchg
jle
cmp
pop
test
inc
xor
insb
xchg
jl
lock
fdivrl
andb
icebp
in
ss
xor
ss
aad
push
sete
test
insb
lcall
inc
movsb
xlat
daa
push
push
fdiv
push
xor
testl
sub
mov
cmp
mov
mov
shrb
repz
add
mov
dec
into
sub
aaa
push
xor
nop
shll
testl
icebp
addr16
or
or
outsb
arpl
push
inc
cmp
cli
cmp
jge
fidivrs
stc
mov
arpl
imul
add
stos
popa
int
push
stos
int
jge,pn
dec
add
lret
pop
addr16
icebp
out
ss
ljmp
push
addb
adc
sbb
xor
int3
iret
lahf
inc
mov
stc
fisubl
lret
pushf
lds
out
ja
scas
adc
mov
xchg
mov
ret
mov
sub
nop
cmovae
repnz
out
cmp
stos
jo
jne
divl
cltd
jmp
das
mov
push
jge
mov
shll
mov
mov
ss
test
jecxz
jb
xlat
lret
insb
testb
sbb
sbb
ss
cmpsb
xor
xchg
xor
jle
sub
int
shlb
sahf
or
xlat
cli
int3
popf
lret
pop
pop
jl,pt
sbb
lahf
sub
dec
cmp
pop
nop
and
test
scas
xchg
leave
dec
insb
cwtl
mov
sarl
add
stc
jno
and
mov
inc
pusha
xor
cmp
xor
push
aaa
aam
or
loop
mov
push
dec
btc
pop
fst
mov
sub
mov
or
mov
arpl
daa
orl
pusha
shll
scas
push
ret
fs
or
sub
sbb
adc
push
nop
and
sub
sahf
imul
enter
add
out
loopne
push
push
pop
jno
into
mov
xor
mov
pop
fsubl
mov
icebp
mov
pop
inc
inc
push
insb
rcll
arpl
mov
xchg
mov
out
sbbl
pop
pop
jb
push
add
cmp
pop
mov
mov
stos
mov
adcl
pop
fdivrl
lret
xor
out
xchg
mov
aam
add
push
mov
pop
mov
subl
jecxz
or
jnp
lret
sub
fiaddl
cmp
sbb
mov
roll
xchg
push
jl
es
mov
mov
imul
sub
jbe
lods
sub
and
popa
xchg
inc
jp
inc
mov
pop
loop
stos
fmuls
mov
xorl
outsb
sbb
js
mov
hlt
sahf
adc
adcl
sub
xor
push
mov
mov
mov
mov
out
dec
sti
fcmovb
sub
mov
push
aaa
sbb
popa
enter
add
repnz
push
inc
xor
ja
sahf
pop
xor
ds
vpmulhuw
leave
fildll
jecxz
xor
xor
mov
nop
sbb
adc
sbb
sub
jp
flds
pop
bound
mov
inc
ja
or
aas
push
scas
mov
shlb
je
test
dec
pushl
xor
mov
xchg
mov
imul
mov
mov
cwtl
cmp
sbb
lahf
dec
inc
idiv
pushf
adcb
jne
lcall
cmp
iret
testb
mov
inc
mov
add
push
jg
imul
jge
jl
mov
in
xchg
jae
data16
push
imul
loopne
repz
dec
push
daa
dec
imul
mov
fimuls
clc
popf
mov
mov
outsl
and
loope
enter
data16
mov
push
stc
xlat
ret
push
xor
in
adc
mov
pop
cmc
sub
in
xor
xor
add
xchg
enter
in
test
jne
loopne
push
mov
or
or
std
xor
rcll
arpl
xor
fwait
mov
xlat
sbb
out
mov
push
std
daa
mov
inc
pop
lods
xchg
shll
xor
sub
ffreep
mov
mov
fidivrs
lods
jno
fdivrl
aam
leave
cmp
or
outsl
cmpsl
cli
decl
dec
andl
mov
pop
insb
mov
in
ja
movb
mov
and
jnp
fildll
aaa
outsl
pushf
or
jno
daa
in
mov
dec
add
popf
mov
jge
and
mov
cmp
dec
insb
pop
cmp
orl
inc
lods
push
push
movsl
rolb
cmp
xchg
repz
ss
fidivl
xor
lret
push
mov
mov
and
add
ret
sbb
jge
ja
andl
ret
in
inc
inc
mov
icebp
jg
in
rorl
adc
imul
sub
popf
mov
into
mov
rcl
mov
sahf
dec
addr16
repnz
ret
popf
add
outsb
inc
sub
mov
fiadds
xlat
xchg
test
add
or
xor
sarl
sahf
adc
jle
jmp
sub
and
mov
jne
jg
jg,pt
or
inc
mov
mov
std
mov
dec
sbb
test
cli
add
pop
pop
jns
das
mov
mov
rcrl
into
stc
cmpl
mov
gs
mov
into
adc
xchg
push
scas
mov
loop
stos
pop
fmuls
sbb
test
popf
divb
pop
or
aam
ljmp
fisubl
mov
insl
sub
les
and
pop
std
dec
enter
arpl
int3
and
pop
movd
jp
push
or
xor
out
lcall
mov
cmp
cmp
imul
add
shlb
movsl
xor
push
movsl
push
cmp
insl
cs
pmullw
in
xchg
cld
lods
fisubl
pusha
xchg
mov
into
pop
loopne
jge
dec
in
mov
xor
out
xchg
push
dec
push
pop
jns
mov
int3
stc
and
cltd
fwait
mov
add
adc
insb
fcompl
jb
inc
fimull
pop
gs
in
jp
jecxz
popf
push
add
aad
dec
pop
adc
inc
push
pop
pop
mov
add
lret
cmp
fidivrs
pop
xor
xchg
and
add
stos
out
insl
jg
mov
lret
xchg
lea
add
roll
nop
pop
cmp
out
jp,pt
dec
cld
inc
loop
inc
jmp
push
lahf
push
pop
sbb
push
cmpsb
xchg
or
sub
in
and
test
push
mov
push
insl
out
xchg
xchg
mov
test
daa
nop
push
mov
dec
jecxz
std
nop
inc
pop
xchg
sub
movsl
je
sbb
aas
loop
adc
jl
add
insb
adc
push
sub
cmpsb
roll
sub
flds
cltd
bound
loope
mov
push
or
mov
lret
popf
test
fidivs
cwtl
cmp
popa
sbb
sub
sti
insb
pop
scas
shll
xchg
sbb
pop
and
pop
lahf
xor
icebp
push
test
test
mov
pop
adc
lea
fidivrs
mov
push
push
or
xlat
ja
leave
cltd
loope
or
movsb
test
das
mov
jne
jle
inc
xor
inc
aas
sti
mov
dec
lcall
xchg
mov
cli
sbb
push
mov
dec
mov
jno
ljmp
int3
inc
es
xchg
push
sub
cmp
mov
cmp
adc
adc
cmp
mov
xchg
repz
lods
add
pop
cmp
insb
lret
jecxz
pop
faddp
imul
movsl
mov
rcrb
and
mov
ds
xor
push
mov
in
cltd
stc
fists
or
movsl
and
loop
subl
or
fnstenv
int
push
sub
enter
repnz
mov
gs
outsb
jb
sub
cmp
aas
sub
loopne
scas
hlt
fiaddl
jb
pop
into
decb
xor
mov
mov
loopne
or
mov
fistpl
in
xlat
sub
mov
lret
stos
dec
xchg
adc
push
in
cwtl
movsb
cltd
cmp
insl
enter
inc
mov
sbb
rol
shr
fcmovnbe
lods
roll
or
insb
mov
dec
inc
fldl
femms
fcmovnb
mov
and
sbb
add
int3
push
sbb
and
ja
les
add
pop
adc
cmpsb
testl
sbb
xorb
push
cmp
sbb
stos
scas
xlat
repnz
inc
pop
cmp
subb
cmp
in
mov
mov
push
xchg
mov
orb
cmp
cltd
inc
fucomp
add
popf
and
mov
cmp
ja
jne
mov
push
cmp
fldcw
mov
push
icebp
add
js
jbe
inc
cltd
push
das
int3
xchg
loopne
xchg
mov
scas
jo
adc
aam
call
outsl
stc
shll
scas
sbb
jae
call
loopne
test
pop
clc
outsl
xchg
ret
jmp
jmp
xchg
jnp
test
mov
subb
jo
pop
and
pop
dec
mov
call
addr16
cmp
add
pop
mov
sahf
flds
mov
stos
mov
adc
adc
daa
jmp
es
inc
cld
movsb
xor
xchg
adc
jl
pop
call
inc
add
fcom
push
bound
push
addr16
or
sbb
mov
ds
cld
dec
ret
lret
shll
test
jecxz
dec
lret
pusha
sub
icebp
inc
inc
xchg
xchg
cli
aaa
xchg
pop
insl
cwtl
lret
or
scas
mov
push
xchg
stos
cli
lret
cmp
xchg
shlb
mov
fwait
pusha
outsl
insb
or
mov
popa
lea
ficomps
push
jnp
add
pop
jbe
aas
arpl
mov
mov
scas
push
mov
or
mov
jmp
xchg
cli
add
cmp
movsl
in
push
rorl
jge
adc
fwait
sub
inc
sub
test
pop
lahf
movsb
push
mov
push
fwait
repnz
ljmp
lahf
add
adc
not
fisubl
pop
je
push
and
mov
ficoml
call
cmp
inc
mov
lods
mov
cs
daa
movl
add
call
dec
or
ss
mov
mov
lods
decl
ficoms
dec
pop
dec
add
gs
xor
sbb
aad
push
dec
add
outsb
jge
xor
nop
out
cmpl
pop
push
adcb
push
icebp
dec
movsl
loopne
popf
xrelease
push
mov
fucom
ror
lock
push
std
lds
jno
data16
insb
cmp
cmpb
lods
jle
jbe
push
popa
aad
xchg
xchg
mov
stos
add
jmp
popf
mov
mov
push
mov
shl
mov
or
hlt
add
inc
or
loope
inc
jae
xchg
jg
xchg
jp
inc
bound
and
xor
rorb
movsb
ret
out
out
sarb
lea
sbb
sahf
sub
nop
jae
xchg
sub
xchg
call
shrb
xchg
jg
mov
imulb
nop
ss
sahf
das
ja
ret
mov
stos
jnp
mov
pop
and
pop
aaa
mov
cmpsb
lret
xchg
cmp
data16
xchg
add
call
dec
or
je
push
out
pop
cmpsl
call
and
addb
inc
adc
cmp
ret
pop
scas
add
mov
iret
adc
cmpb
jle
mov
jo
cli
fsubr
test
sub
in
sub
incl
jns
xor
push
cmp
negb
xchg
mov
sbb
sahf
push
addr16
dec
fwait
jae
lods
or
or
fs
add
decl
int
cmp
scas
cmp
scas
mov
nop
sbb
out
test
push
popf
jecxz
lret
arpl
inc
adc
mov
inc
xchg
sbb
pop
dec
inc
dec
or
jns
punpcklwd
cwtl
andl
and
jecxz
mov
sbb
loop
add
xchg
mov
push
adc
imul
pop
push
in
jns
dec
inc
xor
aad
mov
jnp
outsb
add
dec
insl
sub
lds
fdivl
mov
enter
movsl
sbb
jmp
mov
or
mov
mov
aaa
sbb
out
cmc
jmp
inc
xor
mov
cwtl
mov
xchg
sahf
sub
cmpsl
mov
inc
add
sbb
fdivrs
inc
and
cmpsb
xlat
push
insb
or
mov
jbe
pop
xor
addl
popf
push
or
in
nop
stos
cmp
out
adc
sarb
and
ficompl
and
xchg
in
mov
cmpl
pop
mov
mov
jmp
scas
pop
push
pop
lods
inc
mov
aaa
pop
mov
lock
lahf
dec
sbb
mov
loopne
jp
rcl
popa
out
rol
mov
pop
flds
and
inc
jns
leave
add
mov
jp
or
jns
in
mov
add
push
imul
push
loopne
pushf
adc
out
fdivrp
jmp
dec
inc
rorb
fisttpl
jmp
cli
outsl
push
mov
subb
push
or
mull
rorl
aad
imul
jb
jmp
mov
sub
xchg
push
ficoml
xlat
movsb
mov
sub
cmc
or
sub
int
cmp
imul
insl
ret
and
cmp
lahf
xor
dec
bound
sbb
jno
lcall
fdivs
mov
dec
decb
xor
xchg
xor
push
add
loopne
icebp
vphaddubd
and
aaa
addl
mov
fidivl
ljmp
push
in
push
fnstcw
addb
in
cld
add
sub
mov
mov
mov
notl
popf
xchg
mov
loop
mov
shll
push
lea
dec
rcr
stc
mov
push
xchg
sub
in
push
mov
push
fiadds
cmpsb
push
sbb
mov
mov
fiadds
mov
shr
xor
mov
and
mov
mov
shll
or
cmpl
hlt
jmp
push
clc
cmp
call
mov
push
daa
jp
or
mov
inc
mov
dec
jbe
pop
dec
sbb
push
or
lret
inc
mov
sbb
mov
mov
loop
jp
jae
mov
inc
adc
push
cmpsl
and
adc
sbb
negl
xor
and
aad
js
gs
imul
mov
int
mov
push
jmp
out
mov
lret
gs
mov
fists
popa
cli
cmpsl
adc
mov
ficomps
xchg
inc
push
out
mov
xchg
int
pop
and
outsb
push
xchg
mov
sub
inc
out
xchg
test
jg
data16
add
push
scas
push
repz
daa
pop
mull
mov
bound
sbb
jnp
cli
inc
gs
xchg
dec
push
mov
imul
fsts
sub
dec
mov
and
adc
popf
dec
or
dec
cwtl
mulb
inc
ljmp
adc
in
dec
stos
popf
lret
aam
ja
insb
sub
insl
fdivrs
scas
xor
fldz
test
cmp
shll
adc
inc
xor
jb
sbb
xchg
js
sub
mov
xchg
leave
insb
pop
pop
cmp
dec
ljmp
xorb
xor
je
aas
cs
and
pop
xchg
enter
pop
push
or
das
repz
push
inc
and
dec
insb
pop
incl
pop
mov
pop
aas
pop
mov
icebp
popf
out
jno
int
push
sub
setl
add
nop/reserved
mov
pinsrw
xchg
jo
push
jb
iret
insb
and
pop
and
in
lret
push
rcrb
loopne
out
repnz
mov
fsubr
mov
cmc
daa
repz
and
add
nop
xchg
outsb
push
fwait
jb
sbb
pushf
aas
sbb
push
cltd
mov
addb
mov
repnz
dec
lock
xchg
mov
jnp
push
xor
in
es
icebp
mov
insb
adc
lret
repz
nop
test
bound
fs
jne
fldl
add
fucomi
mov
test
adc
pop
mov
push
xorb
lret
cli
adc
jo
cmpsl
aas
and
enter
mov
mov
dec
aam
adc
mov
adcl
imul
push
lds
fistps
neg
fs
mov
mov
mov
add
cmc
popf
xchg
lds
cmp
test
addr16
jg
lods
rol
xlat
dec
pop
aam
in
and
jp
in
pop
sub
sub
fldcw
loopne
mov
or
mov
adc
xchg
rolb
decb
fsubs
lds
arpl
idivl
jnp
js
xchg
decb
or
dec
stc
jbe
dec
pusha
icebp
mov
jg
push
fs
xchg
jo
mov
enter
mov
dec
mov
jmp
jo
in
popf
icebp
and
pop
adc
jmp
dec
xor
adc
mov
inc
push
and
adc
mov
movsl
cli
pop
pushf
in
mov
test
insb
adc
jno
pop
or
rorl
mov
fists
imul
cld
lods
push
lret
pop
push
movsl
mov
test
pop
outsl
icebp
jno
popf
mov
lret
xor
cltd
mov
in
into
in
inc
or
or
mov
push
cmp
adc
push
out
push
add
int
sbb
imul
or
jg
add
pop
inc
insl
mov
out
cmp
cmc
insb
inc
shll
daa
shrb
pop
je
bound
divb
pop
aam
mov
or
xchg
fnsave
cmpsl
mov
xchg
in
dec
movsb
pusha
jno
into
jns
or
aad
jmp
out
pop
cld
pop
cmc
mov
and
xchg
and
jo
xor
cmp
xchg
movsb
push
and
mov
mov
out
sbbl
je
xchg
movl
lret
into
mov
pop
ret
jecxz
imul
inc
mov
stos
add
jns
lds
pushf
mov
sbb
out
and
cmp
mov
hlt
into
cmp
mov
shlb
push
and
ret
xor
cld
jp
stos
test
je
xor
add
out
sahf
mov
idivb
xchg
push
shll
pop
shr
push
stos
jb
stos
jge
mov
or
mov
subb
pushf
stc
xchg
xor
mov
pop
sahf
shlb
call
xchg
fisubrl
push
jbe
mov
adcb
mov
lds
dec
add
jl
sbb
cltd
clc
dec
pop
mov
cmp
sub
js
mov
rcll
leave
sti
sub
cmp
scas
jecxz
xor
push
int
xor
dec
cmc
call
sub
jl
mov
jnp
je
sbb
jo
ret
adc
cli
leave
inc
nop
mov
sub
push
pop
dec
sti
xor
dec
inc
push
arpl
cld
jno
mov
sub
shll
inc
mov
cli
test
cmp
ss
pop
sub
mov
call
push
lahf
jae
inc
js
jle
xor
paddsw
pop
fstpt
in
mov
sbb
les
dec
shrb
push
scas
xchg
sbb
xchg
push
add
dec
pushf
push
cmp
lods
sbb
out
pop
fiadds
adc
rclb
mov
incl
mov
shrl
add
stos
pop
sub
and
imul
add
xor
out
adc
ret
jbe
cmp
lahf
mov
fsin
cmp
pusha
cmc
jae
pop
sarl
addl
mov
int3
das
jecxz
fnstcw
or
jae
lods
pop
dec
and
movsl
cmp
pop
repz
fs
push
incb
js
stos
in
pop
mov
pusha
jb
adc
leave
add
pop
xchg
nop
pop
mov
mov
push
rolb
adc
sbbb
ja
das
int3
mov
lock
test
dec
cli
xchg
pop
mov
jne
data16
shlb
mov
pop
test
pop
out
pop
inc
nop
push
in
sti
orl
mov
lock
cld
cmp
std
lods
inc
add
xor
cmp
ljmp
mov
test
xor
shrl
inc
cltd
inc
jecxz
add
jbe
jl
pusha
and
jl
jns
mov
ljmp
rorb
xchg
mov
add
int3
pop
outsb
or
aam
push
arpl
lock
add
je
pop
cmc
mov
mov
addl
repnz
imul
test
jg
push
jns
scas
jg
cs
xchg
mov
dec
cmp
cwtl
mov
adc
data16
xor
into
pop
dec
mov
bound
pop
xor
in
enterw
scas
cmpsl
mov
add
xlat
or
adc
xchg
and
xor
ret
dec
mov
xchg
ds
jge
out
adc
sub
nop
rcll
in
dec
add
and
xchg
dec
xor
adcb
test
stos
outsl
test
sub
inc
clc
mov
call
dec
dec
ret
dec
inc
popf
push
out
into
outsb
and
dec
or
in
mov
adc
cld
hlt
popf
mov
sti
pop
lahf
jp
add
mov
test
push
pop
mov
adc
xchg
sub
aad
pusha
fs
test
pop
pop
mov
outsl
adc
push
rcrb
xor
sub
jo
mov
outsl
xor
in
push
outsl
dec
inc
in
mov
hlt
fldenv
jbe
xchg
sahf
jp
sbb
cwtl
adc
in
rorb
and
pop
xchg
push
stc
adc
cs
xchg
mov
repz
and
lcall
mov
bswap
pop
dec
das
push
inc
inc
mov
xor
cmpsb
test
cmp
mov
adc
lods
cmp
outsb
bound
jae
data16
daa
cmc
testl
lea
mov
cmp
orl
xlat
clc
xchg
dec
scas
in
fstl
stc
iret
inc
xchg
push
cmp
jbe
imul
pop
pop
rcrb
xor
stos
cmp
sbb
fldcw
cmp
mov
popa
mov
repnz
test
mov
out
in
fisttpll
cmp
inc
lahf
nop
es
lock
imul
rcrl
icebp
adc
push
mov
cmpsb
lods
loop
jle
adc
adc
out
outsl
mov
outsb
pop
jmp
dec
add
fists
sub
mov
arpl
cmp
cld
fmull
lcall
sbb
cmp
cmp
and
jg
xchg
mov
or
bound
mov
outsl
pop
cmp
jmp
scas
arpl
inc
es
push
pusha
les
push
and
and
pop
mov
lahf
cmp
das
je
aaa
test
int
push
mov
loope
inc
adc
jl
bound
lahf
aam
pushf
data16
push
mov
xor
ljmp
sti
xor
in
xchg
push
mov
scas
and
loope
mov
clc
mov
mov
xor
mov
mov
gs
sar
es
mov
inc
adc
mov
movsl
push
cmc
mov
out
dec
inc
pop
fwait
int3
cmp
sub
mov
and
push
inc
xchg
or
sbb
sbb
sbb
adc
push
stos
stc
dec
shl
fbld
clc
mov
sub
mov
dec
arpl
out
out
pop
adc
xorb
repz
jg
inc
inc
pop
inc
pop
fisttps
pop
pop
dec
and
sbb
in
das
ds
stos
cmpsb
cli
mov
pop
jne
int
loopne
stos
inc
test
clc
xlat
pop
popa
out
sub
lock
pop
adc
push
imul
mov
xlat
and
jp
loope
dec
ror
shl
jmp
shll
pop
mov
lods
xor
cmp
and
je
shrl
cli
pusha
or
paddw
shlb
les
mov
mov
xor
pop
outsl
lock
lock
pop
shrb
lock
idiv
in
ljmp
cmp
xchg
repz
je
cmp
shlb
fldcw
adc
inc
jo
adc
mov
mov
adc
sub
in
and
pop
shrl
mov
cmc
in
push
cmp
call
stc
inc
sbb
sarl
loopne
jp
stc
repnz
into
scas
fildl
and
mov
into
daa
xchg
lcall
call
jge
mov
testw
cmp
popa
js
mov
imul
dec
mov
xchg
mov
mov
lret
orb
mov
ret
loop
adc
neg
cmp
aas
lret
inc
sbb
xchg
xlat
and
sbb
mov
psrad
into
es
scas
dec
sub
nop
addr16
or
and
cmp
adcb
add
adc
scas
pop
xor
repnz
int
push
sti
arpl
mov
mov
iret
jno
mov
out
shrb
in
pop
std
push
pop
cltd
pop
std
gs
test
daa
inc
cmp
loope
jns
sti
call
dec
jle
xor
outsl
mov
mov
mov
mov
pop
out
rcll
mov
cli
push
jae
leave
pop
mov
mov
jecxz
aad
pop
andl
push
lods
jge
pop
imul
es
cwtl
sub
sbb
std
push
dec
hlt
sbb
push
scas
out
sbb
movsl
pop
iret
push
add
aad
call
lret
xor
jno
sub
push
sub
xchg
nop
sbb
sub
aam
jg
push
mov
and
pop
out
shrl
adc
mov
dec
cmp
test
aaa
add
push
shl
test
rcl
push
loop
mov
mov
push
aaa
xchg
push
dec
rcrb
mov
stos
xor
ret
jle
jne
sub
ljmp
std
jae
xlat
stos
test
es
or
popa
mov
cltd
jnp
int
pop
jo
xchg
fwait
jecxz
push
or
cmp
add
neg
mov
insl
mov
cmp
mov
xchg
repz
mov
mov
jecxz
imul
inc
adc
mov
bound
in
stos
lcall
mov
divl
jl
xchg
int3
pushf
scas
xchg
mov
ror
inc
xor
inc
inc
push
insb
cmp
mov
xchg
call
mov
adc
jnp
in
inc
add
mov
into
shll
das
ds
inc
cmp
jno
cmc
xlat
test
push
ja
loopne
and
sti
shl
testl
nop
push
sbb
xadd
and
or
div
dec
negl
pop
cmp
or
fs
cmpl
arpl
or
pop
push
ljmp
clc
xorl
mov
xor
rclb
inc
in
shl
mov
loope
js
fldl
inc
stos
les
in
jge
push
cld
popf
adc
ret
subb
nop
mov
fsubrs
add
mov
push
scas
mov
in
pop
mov
int3
mov
movsb
dec
pop
pop
leave
cld
aad
jnp
dec
mov
les
inc
mov
call
sub
movsl
nop
pop
jnp
adc
jo
mov
sti
jecxz
clc
pusha
dec
lret
sub
dec
push
sarb
pop
xchg
fwait
xchg
dec
add
mov
jb
adc
dec
mov
mov
or
sbb
outsl
sub
or
lcall
pop
ja
outsl
and
fxch
cmp
mov
pop
dec
jno
ds
pop
cmp
movsb
mov
mov
lcall
mov
out
adc
mov
sbb
test
jmp
fnstenv
mov
add
add
in
sub
shll
arpl
lret
push
aas
ret
stc
fisttpll
inc
in
sbb
mov
jp
iret
repz
mov
or
pushf
andl
mov
mov
pushf
pop
push
inc
push
cmp
aad
aas
lods
push
out
inc
push
cs
push
jge
enter
mov
mov
jge
push
mov
pusha
repnz
mov
or
jl
call
not
lods
cmp
lods
push
call
xchg
xchg
pop
jge
ljmp
outsb
add
sbb
sub
sti
or
in
shlb
frstor
repz
push
outsb
out
fwait
mov
sub
test
add
cmp
cmp
or
idivl
dec
enter
pop
mov
xor
cwtl
das
aas
pop
sahf
dec
jnp
fs
decl
movsl
mov
jo
popa
cltd
insl
mov
sub
mov
out
xchg
rcl
mov
mov
xor
test
sahf
push
dec
arpl
arpl
ljmp
lret
fbstp
push
aaa
pushw
adc
jp
push
adc
iret
out
arpl
fisttpll
insl
inc
jb
xor
fildl
mov
push
mov
fisttpll
in
jp
nop
orl
jno
cmpsb
xor
cmp
pop
add
in
in
push
mov
push
pop
jecxz
js
add
xchg
xor
js
xchg
sbb
xchg
dec
or
cwtl
jno
sub
mov
mov
push
pop
mov
leave
call
inc
movsl
xchg
jmp
loope
xchg
inc
cmp
pop
mov
and
outsl
sub
lods
sub
or
cmp
scas
adcb
lret
sbb
loop
cmc
mov
sti
cmpl
shl
sbb
add
fs
and
ffreep
test
fstps
mov
sbb
mov
xor
mov
or
xchg
inc
xor
fiadds
movsb
or
xor
das
mov
repnz
repnz
mov
xor
int
lcall
lods
sub
fdivs
and
ret
adc
xchg
mov
mov
mov
dec
cmc
fdivs
imul
stos
in
mov
cld
rcl
xor
hlt
test
in
lods
sbb
subl
test
dec
subl
mov
subl
call
mov
inc
mov
lea
mov
aaa
cmp
push
addr16
mov
imul
enter
cmpsl
outsb
mov
mov
int
or
stos
jle
sub
std
mov
out
or
xchg
push
push
xor
adc
dec
rcll
aam
mov
mov
push
nop
aas
aad
and
jmp
pushf
sub
adcl
sbb
xchg
cs
jp
mov
rolb
lods
sbb
and
ret
dec
ds
sarl
cmp
aad
loopne
fsubrs
in
pop
jb
int3
loop
repz
aad
mov
sub
shl
cltd
fistpll
js
stos
js
in
test
dec
xor
stos
mov
je
push
cmp
pop
xchg
push
ret
or
stos
popa
adc
icebp
mov
pushf
push
lods
repz
popf
pop
add
test
lahf
mov
jmp
outsl
cli
std
lods
loop
cmpsb
jl
pop
cld
inc
mov
rcrl
pusha
imul
push
out
jo
test
mov
test
test
stos
ret
testb
cwtl
fucomi
xlat
lcall
loope
das
cmp
jae
cmpsl
mov
xchg
xchg
ja
iret
movsb
push
fcomps
dec
clc
insl
sahf
movsl
sub
nop
pop
adc
and
mov
cmp
sub
sbbb
mov
andl
je
mov
inc
je
aaa
adc
out
jae
sub
mov
xorb
xor
adc
xor
jl
add
inc
in
dec
cs
out
fsts
cmp
mov
sbb
sub
mov
test
xor
mov
adcl
mov
lcall
jns
sub
arpl
or
and
cmp
scas
gs
inc
xor
stos
jo
sbb
lcall
outsl
lds
pushf
jae
pop
cld
mov
in
jl
or
lods
or
dec
push
das
sub
cmp
mov
je
sbb
xchg
pusha
stos
ja
lret
mov
xor
sbb
adc
daa
int
int3
and
mov
arpl
inc
jecxz
xchg
xchg
pop
imul
or
dec
sub
push
ljmp
repz
cmp
or
mov
mov
pop
xor
iret
mov
sbb
jecxz
ret
xchg
arpl
mov
pop
dec
pushf
mov
int
jge
fldt
sbb
test
and
fistps
jne
inc
and
pop
lret
push
shrb
xchg
mov
testl
imul
mov
ss
loop
notb
test
add
xor
jp
mov
lret
in
hlt
leave
out
jecxz
lret
sbb
insl
push
aam
hlt
stos
loope
and
dec
dec
fstsw
scas
cli
cmp
cs
pop
les
jns
negb
scas
cmc
pop
mov
xor
dec
mov
dec
cmp
adc
adc
adc
loope
mov
xchg
sub
mov
sbb
inc
es
pushf
mov
xchg
jge
xchg
pushf
xchg
shlb
inc
inc
push
sbb
push
xor
push
out
mov
outsl
fcoml
mov
xchg
icebp
or
rcrl
or
repnz
dec
repz
add
clc
push
fsts
pop
push
fs
mov
push
ret
repz
dec
fs
push
sbb
sbb
mov
mov
insl
push
cmpsb
shr
leave
pop
xor
lods
fstp
pop
sub
adc
sub
cmp
or
ficoml
xor
sub
scas
loopne
ret
jne
adc
xchg
cmp
ret
xor
sbb
xchg
bound
cmp
jbe
int3
loope
fidivrs
aam
add
pop
shlb
ret
adc
xor
xor
and
cmpsl
mov
mov
cmp
push
and
in
mov
int3
in
and
in
dec
into
insl
push
in
aaa
daa
into
xchg
cltd
movsl
adc
lahf
xchg
cmp
sbb
ljmp
dec
pop
stos
fisttpll
bswap
out
cmp
mov
imul
xor
test
jmp
push
cli
add
xor
or
sub
xor
pop
lods
push
leave
repz
daa
cmp
filds
cld
sar
rclb
xor
in
imul
imul
fstpl
dec
lret
fidivrl
push
mov
mov
stos
pop
and
dec
pop
cmp
sbb
dec
mov
add
jns
jae
dec
sbb
test
mov
rolb
in
xor
scas
xchg
dec
rclb
sbb
rorl
xchg
sub
daa
aaa
stos
lcall
pop
jmp
pop
insl
mov
fdivrs
jmp
jg
stos
cwtl
or
pop
lock
int3
jne
push
push
adc
pop
or
mov
mov
sbb
jne
jae
lret
jno
aad
test
cs
lds
stos
aaa
dec
sbb
test
dec
insl
xor
rcll
adc
sbb
jae
lret
sarb
inc
pop
icebp
lods
mov
xabort
xchg
pusha
jo
sbb
insb
jp
jecxz
sarl
js
sub
sbb
in
cmp
xor
add
inc
fidivs
push
int
loope
loopne
jl
cltd
push
xchg
and
inc
pop
adc
icebp
ljmp
dec
in
test
dec
cmc
inc
pop
lret
pop
cmp
mov
dec
fdiv
mov
sub
jge
in
or
or
push
dec
pop
test
lods
pop
jg
pop
pop
aaa
push
mov
mov
xlat
mov
out
jge
xchg
movsl
push
jae
dec
pop
sub
inc
mov
xchg
adc
jmp
popa
cmp
negb
scas
enter
cmp
or
pusha
cmp
jb
cmpsl
test
dec
fwait
inc
xchg
lret
push
sub
pop
fisubl
sub
sbb
sbb
fwait
jg
mov
js
mov
jnp
mov
fs
push
aaa
pop
mov
or
loop
inc
sbb
push
add
jg
jg
scas
inc
jecxz
jge
mov
fstpl
shlb
xchg
cmp
adc
mov
pop
push
pop
test
mov
mov
jmp
inc
fs
fmulp
sahf
push
cli
sbb
lret
push
dec
jnp
jb
lods
cmpl
jbe
add
mov
in
in
push
push
clc
sahf
daa
mov
pop
inc
mov
add
movsb
dec
sub
dec
pushf
stos
cmp
mov
cmpsl
aam
or
repz
mov
lcall
out
xchg
test
mov
inc
sbb
test
xor
cmpsl
add
mov
leave
mov
xorb
jnp
and
out
and
stos
push
stos
mov
int3
stos
xchg
lcall
mov
es
pop
or
outsb
movl
mov
mov
sbb
clc
mov
cmp
or
lcall
mov
ja
pop
and
aas
sbb
mov
ffreep
sbb
scas
xchg
push
mov
leave
sub
pop
jnp
inc
cmp
pop
mov
insl
inc
test
bound
mov
push
lock
cwtl
cmp
pop
mov
sbb
adc
dec
shlb
xlat
sahf
stc
push
movsl
bound
push
xchg
and
test
or
cmp
out
cltd
jp
sbb
fidivl
cmp
push
aad
js
scas
cwtl
sbbl
or
jb
push
and
out
iret
pop
lahf
insb
mulb
adcb
pop
loope
movsl
xlat
cmp
xor
ljmp
shl
mov
es
adc
les
ss
xchg
cmp
add
aaa
push
lret
sub
stos
leave
cld
ss
movsl
es
inc
xlat
push
and
subb
fs
jno
xchg
add
jne
cmpsb
xchg
outsb
pop
mov
popa
pop
and
faddl
aam
sbb
arpl
insb
rcl
hlt
cs
enter
dec
cltd
xlat
jbe
imul
mov
fnstenv
sbb
pop
add
mov
xlat
cltd
xchg
icebp
or
inc
aas
mov
mov
mov
and
cmp
push
inc
jnp
push
dec
les
lds
cli
dec
stc
popa
mov
sub
cltd
xor
add
xor
xor
dec
jne
and
or
lret
scas
xchg
jg
insb
sub
in
inc
dec
test
aas
int3
cmp
aad
jb
incb
inc
sbb
xor
xor
fs
in
aas
popl
or
jbe
hlt
out
mov
shll
js
bswap
mov
inc
lret
push
mov
mov
mov
data16
inc
mov
mov
ja
cld
data16
insb
leave
iret
mov
cmp
adc
push
inc
inc
clc
loopne
ficoml
rol
xor
inc
loopne
outsb
rorl
push
xor
adc
mov
jb
lds
lea
adc
cmp
and
addb
and
dec
mov
push
inc
push
sbb
pushf
dec
pusha
hlt
enter
out
ficoml
clc
or
out
lds
xchg
sti
adc
sbb
adc
into
insb
repnz
mov
inc
xor
stc
xchg
mov
cmc
add
aas
into
adcb
scas
jo
pop
xchg
xor
jb
lods
mov
dec
inc
xchg
pop
adc
in
xor
jbe
xorl
les
sti
mov
adc
push
ficomps
out
fdivs
and
or
ficoml
push
mov
leave
dec
sahf
add
cmp
sbbb
push
lret
pop
scas
dec
test
mov
ret
cmp
hlt
gs
scas
cli
fldcw
int3
push
iret
push
jg
out
sub
xchg
mov
dec
add
pop
imul
aaa
xchg
adc
lea
sti
ljmp
or
cmp
jg
add
adc
xor
push
shlb
insl
out
pop
sti
xchg
outsb
mov
and
dec
push
or
pop
adc
adc
xchg
loope
jnp
addr16
add
pop
sub
pop
jno
insb
aad
adc
inc
push
xor
sti
ljmp
pop
jnp
pusha
jnp
pop
inc
stos
xchg
xlat
jne
mov
cmpsl
jb
neg
arpl
and
sub
and
jg
push
xchg
add
add
inc
and
jnp
ja
rcrb
dec
lcall
test
mov
sbb
cmp
mov
mov
mov
sub
mov
mov
adcl
fucom
arpl
pop
pop
fldt
rorl
mov
repnz
and
movsb
pop
mov
mov
mov
repnz
push
mov
mov
mov
je
ja
push
je
pop
mov
ret
dec
das
aas
clc
lret
cmp
popf
push
imull
xorl
adc
or
loop
dec
and
add
mov
sub
cmpsl
popf
addb
clc
jecxz
es
test
jp
mov
lods
mov
popa
psllq
inc
pop
mov
cmp
mov
aam
aam
dec
mov
mov
mov
mov
pushf
or
daa
jmp
loope
shr
scas
mov
push
lods
cwtl
ret
cmp
and
pusha
in
repz
fdivr
mov
dec
xlat
jg
sbb
xlat
mov
mov
push
mov
scas
out
mov
arpl
mov
outsb
ja
and
push
ja
dec
fimuls
test
das
ds
in
sub
je
cmpsl
and
scas
pop
int3
dec
mov
jae
pop
xchg
rcl
jecxz
pop
mov
xchg
sbb
mov
jg
mov
faddl
nop
xor
pop
sbb
pop
inc
out
adc
xchg
pop
or
inc
test
push
and
push
sub
mov
push
pop
pop
inc
addl
xlat
dec
cmpsb
fdivs
mov
bound
std
or
mov
dec
mov
sbb
movb
sbb
stos
nop
add
dec
cmp
sub
jne
inc
int
jne
sbb
sub
jge
loope
push
shr
mov
xlat
rorl
adc
xchg
call
enter
jecxz
push
mov
mov
loope
jns
fsubl
stos
imul
mov
jae
add
xchg
jle
aas
push
popa
fdivrp
pusha
roll
aad
fs
bound
xchg
pop
lcall
popa
cmp
aam
push
rcrb
mov
in
cmp
je
cmp
and
ds
cltd
fcompl
jne
push
iret
dec
out
push
mov
icebp
clc
test
jo
lock
jge
sbb
js
fcoms
or
test
lret
or
jae
lret
nop
sti
adc
jo
and
cmp
xchg
sbb
mov
cmpsl
push
orl
fiadds
xchg
pop
sbb
xchg
mov
ds
xchg
test
dec
cwtl
and
insl
inc
lcall
push
dec
not
rclb
je
ljmp
jecxz
cmp
sub
sbb
shl
xchg
jo
mov
cs
xor
cmp
fisttps
xchg
cmp
faddl
nop
mov
dec
adc
sbb
mov
ret
mov
imul
ret
add
ljmp
xchg
into
adc
sti
popa
dec
or
push
adc
mov
push
andb
stc
dec
mov
daa
imul
add
in
jecxz
jnp
stos
pop
xlat
jecxz
leave
adc
dec
mov
test
imul
push
in
lcall
xchg
into
jae
sbb
push
mov
mov
inc
sbb
mov
imul
js
inc
inc
pop
sub
push
inc
dec
inc
or
enter
push
cmpsl
jnp
std
or
cltd
mov
pop
lods
xchg
jg
mov
mov
pop
mov
mov
and
jno
inc
out
push
push
cmpsb
stos
ds
mov
xor
push
or
xchg
cmp
jns
xor
ljmp
orb
adc
mov
int3
shl
adc
xchg
bsr
fisttpll
inc
cs
repnz
add
into
loopne
mov
pop
test
jle
loopne
mov
insl
aaa
push
mov
mov
frstor
pop
sbb
sbb
std
inc
fcoml
xlat
fstpt
dec
xor
arpl
scas
aas
ds
jmp
push
cmp
and
cmp
stc
in
andb
rcrl
push
imul
xchg
lock
dec
fimull
scas
sahf
xchg
std
xchg
or
xor
push
push
in
jns
pop
insb
fs
sub
mov
int3
fimull
mov
push
inc
out
pop
js
adc
and
pop
or
daa
mov
test
rcrl
add
fwait
cmpsb
push
test
leave
cmp
add
pop
xchg
stos
mov
cwtl
arpl
or
sarl
sub
push
cmp
sub
fs
dec
shll
jae
mov
jg
sub
fwait
stos
mov
mov
mov
mov
mov
stos
outsb
mov
popa
or
loop
rclb
mov
jnp
test
inc
testl
fdivl
xor
push
add
xor
inc
rolb
ljmp
pop
jl
cmp
jle
adc
xchg
cmpsl
sbb
clc
shl
add
push
insb
loope
xchg
int3
xchg
jo
inc
or
mov
mov
mov
mov
pop
loop
testb
lahf
das
jle
js
adcl
movsb
in
imul
sbb
xchg
dec
scas
dec
repz
fdivl
enter
push
incl
in
sarb
push
sbb
fcmovbe
sub
out
lahf
jb
xchg
lret
pop
and
mov
pushf
and
dec
or
pop
dec
movsl
push
mov
sbb
cs
fidivrs
cmpb
pop
sbbb
ret
data16
mov
cmp
hlt
xor
mov
push
cmp
mov
ja
inc
shll
fwait
xor
push
cmp
mov
lret
xor
sbb
sub
push
xor
add
jbe
cmp
jno
je
andl
xor
mov
cmp
and
cmpsl
cmp
daa
mov
subb
cmp
ja
add
fstl
push
arpl
cs
inc
ret
ja
jmp
mov
jnp
mov
fnstenv
push
pop
jle
es
jnp
sti
loope
loop
mov
pop
insb
pop
jl
mov
sbb
mov
or
dec
stos
sbb
inc
mov
arpl
sbb
dec
jo
sahf
test
idivl
mov
fsubp
mov
sub
push
call
sahf
cmc
movsl
mov
imull
push
inc
dec
imul
cmpsb
adc
jnp
add
mov
xchg
hlt
test
setnp
or
cmpsl
fstl
outsl
mov
sahf
insl
mov
out
and
jmp
xchg
faddp
mov
lea
mov
pop
inc
push
dec
and
jecxz
cmp
out
in
movsb
or
aad
sbb
xor
lods
aas
shr
xlat
push
shll
inc
mov
pop
or
lock
subl
popf
or
sub
mov
nop
push
je
xor
insb
lea
lods
push
outsb
aad
aas
fldcw
and
lcall
or
insb
imul
xchg
rcl
fstps
cmp
jns
lock
inc
scas
stc
or
dec
push
loop
jp
dec
inc
rcrb
jge
mulb
jge
adc
push
test
inc
into
dec
cmp
dec
mov
pop
add
jl
pushf
jp
pop
dec
xor
stos
or
ficoms
hlt
pusha
add
aad
mov
add
inc
inc
push
add
mov
mov
in
mov
hlt
push
jecxz
jge
mov
pushf
inc
movsb
addb
jle
add
mov
in
cwtl
mov
aas
adc
mov
adc
call
mov
out
cmp
outsl
jle
enter
cmp
jne
fdivp
xchg
pop
sbbb
xchg
test
add
push
cmp
xorl
ds
mov
repnz
sbb
clc
sub
inc
add
sbb
push
movsb
dec
mov
xchg
imul
mov
les
pop
loopne
inc
jl
lds
and
jl
adc
rolb
clc
inc
mov
orb
sbb
and
fistl
lcall
imul
and
outsl
and
mov
in
cmp
and
pop
mov
andl
cmp
mov
stos
fadds
mov
push
iret
aaa
xchg
fmuls
dec
sbb
pop
int3
fs
adc
xor
scas
push
call
mov
pop
stos
adc
test
adc
loopne
int3
loopne
loope
ret
inc
xor
clc
jae,pn
aas
ljmp
adc
xor
dec
rclb
cmp
das
xlat
clc
dec
popf
xchg
jge
and
push
pop
jle
mov
rcrb
mov
test
cs
inc
in
mov
push
xor
testb
aas
dec
jb
cmc
pop
shll
fiaddl
in
sub
jb
mov
les
daa
xor
xlat
aaa
aad
insl
push
arpl
dec
jp
addl
fsubs
pop
mov
xor
push
or
cld
dec
ret
insb
scas
lahf
xchg
mov
cmp
adc
movsb
xor
xor
out
out
mov
sbb
dec
cmp
push
push
scas
fnstcw
cli
add
pop
icebp
inc
push
dec
jecxz
xor
hlt
add
sub
ss
sbb
pusha
mov
mov
scas
xor
pop
frstor
bound
xor
add
xchg
sarl
sbb
dec
mov
push
mov
push
es
mov
setge
add
ret
cltd
sahf
xchg
fcomp
mov
add
aam
loop
xchg
mov
gs
idivb
outsl
mov
fnsave
mov
iret
data16
cmc
repz
xchg
inc
jns
fisubs
sarl
cs
mov
movsl
and
dec
movsb
lock
jnp
inc
sbb
jge
lods
add
int
push
push
add
mov
je
add
sbb
jmp
icebp
jle
jno
adc
pushf
cmp
xchg
xchg
sahf
in
push
fcmovnb
jo
addr16
adc
sbb
fisubl
in
jge
popa
fcomi
pop
ja
pop
aaa
add
add
mov
or
sbb
std
addr16
out
sbb
mov
andnps
imul
inc
add
daa
out
push
lret
addr16
push
mov
mov
xchg
bound
data16
sbb
inc
xchg
adc
xchg
mov
icebp
push
xor
xchg
dec
xlat
fwait
aaa
outsl
or
xchg
adc
push
jne
std
in
xor
call
jp
add
push
xchg
ja
out
test
jle
mov
mov
aaa
lret
xor
rcrb
call
sub
insl
sub
pusha
mov
clc
les
xor
test
xchg
mov
mov
xor
jnp
call
xor
mov
scas
aam
jns
sub
repz
lock
jg
fildl
mov
mov
cmp
mov
jl
aam
mov
adc
jge
or
inc
icebp
scas
shll
xchg
ljmp
outsl
nop
mov
xchg
int3
add
outsb
imul
push
repnz
adc
std
lock
out
add
add
jl
lcall
sbb
sti
aaa
pushf
rcll
or
and
into
cltd
and
mov
je
loop
mov
mov
sub
cmp
sub
outsl
cmp
sub
cmp
call
jbe
leave
pop
rcrb
cs
add
pushf
mov
cmp
in
addr16
testl
dec
jecxz
mov
add
cs
cmpsb
shlb
lods
enter
andb
jbe
cmp
sarl
pop
sub
mov
pop
icebp
pop
ja
daa
inc
std
push
or
scas
enter
mov
aas
test
jmpw
xchg
jae
repz
cli
in
fdivrl
aaa
aaa
push
jns
cli
enter
dec
test
inc
mov
add
inc
daa
mov
test
stos
mov
sti
mov
pop
idivl
jbe
jnp
cli
dec
bound
xchg
hlt
mov
cmpsb
aas
stos
popf
jo
popf
dec
push
push
sbb
std
jmp
jne
rorb
aad
mov
scas
mov
push
popa
cltd
dec
xor
push
dec
sub
movsl
push
cld
add
jl
stos
jns
mull
outsb
data16
shrb
sub
jg
cltd
add
cli
lds
cli
shrb
add
cmpsl
pop
test
fnstcw
lahf
std
sbb
fstpt
cli
push
rorl
inc
mov
dec
xchg
xchg
add
fnstenv
jmp
das
jl
in
push
push
fmuls
inc
mov
icebp
dec
mov
jle
mov
sub
inc
imull
movsl
xor
dec
clc
js
rorb
popl
or
movsb
out
cmpsl
xchg
push
aaa
adc
outsl
jg
xchg
cmp
sahf
fimull
adc
cmp
mov
or
popf
inc
inc
subl
fwait
mov
lods
push
mov
iret
ds
ret
dec
inc
aad
cmc
fstps
mov
add
mov
shlb
jge
push
adc
inc
fnstenv
rcl
jb
xchg
call
fisubrs
lock
das
jno
cs
mov
repnz
loopne
jmp
mov
xor
mov
or
jns
push
shlb
add
xchg
fwait
je
or
leave
clc
cltd
or
fsubl
pop
jns
xchg
sbb
sub
jb
mov
push
fmuls
push
sub
mov
sub
lcall
sub
inc
pop
xchg
mov
lods
inc
pop
lods
bound
ret
lahf
lods
mov
jb
out
or
dec
xlat
sahf
call
xor
jge
lods
cli
clc
inc
adc
xchg
rcrl
dec
dec
push
ret
in
and
sbb
xlat
inc
and
andb
push
mov
sbb
cmp
push
mov
in
lea
and
call
add
push
inc
cmp
mov
adc
mov
mov
shl
sbb
dec
sbb
cmp
rcrb
add
loopne
xchg
mov
xchg
scas
mov
cmp
lcall
mov
mov
mov
test
mov
fsubrl
lods
test
mov
adc
cmp
pop
add
aam
pop
rcr
mov
or
scas
sbb
fstps
dec
mov
pop
cmp
loopne
fxch
lea
fdivrs
jmp
lret
push
mov
sbbl
adc
jne
imul
pop
adcb
add
loopne
popf
rolb
orl
add
sub
ret
pop
inc
inc
mov
arpl
jb
cmc
or
xlat
pop
push
push
jmp
popf
inc
ss
xchg
jb
addr16
xchg
and
cmp
jns
cmpsl
movsl
sbb
pusha
push
test
daa
push
cwtl
inc
mov
mov
pop
es
or
jmp
mov
adc
lock
call
mov
scas
mov
xor
sti
pop
sahf
test
jnp
test
xlat
and
adc
cmpsl
push
stc
push
pop
and
mov
xor
push
push
lret
dec
sbb
xchg
aam
xchg
lcall
mov
mov
insl
outsb
and
push
rorb
lcall
xchg
movsb
jl
xor
popa
fistpl
cwtl
or
and
inc
mov
add
in
push
xchg
enter
outsb
push
cmp
mov
push
mov
out
cmc
sub
xchg
data16
jnp
dec
pop
mov
cmp
mov
jbe
xor
add
idivb
inc
repnz
adc
xor
add
test
mov
push
cmpsl
fld
dec
xor
stc
dec
mov
xor
js
subl
jp
push
fisttpll
pusha
pop
imul
sub
push
loopne
jp
jns
cmp
mov
imul
xchg
mov
or
leave
in
aad
push
repnz
mov
repz
jmp
int
mov
fldt
mov
cmp
pop
mov
xor
ss
xor
jecxz
mov
jno
std
ja
fcomip
aaa
loopne
dec
jge
rolb
shrb
push
adc
xchg
cmp
adcb
loopne
add
les
sarl
std
mov
jge
loopw
insl
cld
in
ja
mov
movsb
and
pop
les
pushl
repnz
inc
int3
sbb
push
fidivrl
repnz
clc
mov
mov
push
mov
dec
dec
jmp
in
stos
aas
ror
push
imul
mov
lods
movsb
lcall
mov
pop
bound
test
jae
call
pop
test
int
pop
stos
out
lock
push
xchg
mov
xor
cltd
push
adc
cmp
jae
push
fs
mov
push
int
jecxz
cltd
rclb
aam
pop
mov
imul
pushf
cltd
adc
lcall
lods
or
lcall
cmp
mov
cmp
int3
sti
jo
mov
cmp
sbb
pushf
hlt
fidivl
cmp
scas
xchg
inc
mov
xchg
cmp
and
lcall
fcomp
dec
mov
std
mov
add
popf
imul
fwait
sbb
ror
clc
outsl
mov
adc
push
out
bound
pop
xchg
jno
imul
mov
movsl
sub
and
mov
hlt
stos
jnp
or
int3
mov
js
xor
jp
ja
sbb
jb
rclb
in
hlt
dec
lea
sbb
fnstsw
stos
ffreep
pop
dec
fisubrl
add
cli
aad
push
ljmp
testl
push
mov
push
out
in
popf
and
push
adc
sti
jae
inc
ljmp
movsb
cmp
mov
lods
into
lea
jmp
in
imul
test
pop
cwtl
outsb
movsl
xor
sarl
and
xchg
or
xchg
jl
data16
dec
std
xorb
xlat
es
dec
es
cmp
addb
and
jo
js
push
dec
sub
inc
aas
iret
jno
mov
pop
pop
insl
popf
and
loope
mov
cmpl
je
sti
pop
cwtl
insl
or
test
sbb
mov
ja
mov
insb
push
xor
mov
hlt
stos
outsb
movsb
addr16
xchg
into
mov
dec
pop
xor
mov
sbb
fcompl
lods
repz
pusha
dec
loopne
dec
dec
pop
test
fisttpll
in
pop
jl
sbb
lret
xchg
ret
sti
cmc
popf
lea
mov
lcall
mov
out
xor
imul
xchg
imul
sbb
jnp
jb
cmpsb
xlat
xchg
or
fs
xchg
fsubl
test
add
shl
and
mov
mov
and
lods
loop
int3
and
aaa
dec
je
icebp
addb
dec
push
mov
mov
stos
sub
dec
ret
push
int
call
mov
and
clc
cltd
xor
scas
and
lods
mov
aam
sub
or
ljmp
nop
hlt
xor
push
mov
xchg
outsb
pop
adc
lret
cmp
int
cwtl
jns
sbb
jne
lcall
xor
add
imul
test
aas
jno
dec
pop
fiaddl
jp
xchg
lcall
dec
adc
loopne
test
jbe
daa
pop
pop
xorb
push
insb
xchg
pop
pop
imul
mov
dec
fstl
leave
push
jne
or
repnz
mov
data16
or
out
sub
outsl
icebp
pop
in
sub
sub
movsb
clc
cmp
call
test
sub
pop
jnp
or
std
mov
out
orb
bound
insb
nop
push
and
push
ds
gs
shl
lods
adc
or
jns
es
data16
ds
adc
inc
add
push
sub
test
out
stos
mov
mov
adc
sub
dec
popf
cmp
and
dec
in
sbb
inc
sub
jne
loope,pt
push
iret
inc
push
addl
mov
pop
jp
xlat
push
sub
inc
pop
pop
rcl
test
sub
cmp
sub
jno
add
cmpsl
push
mov
mov
repnz
bound
dec
push
mov
push
mov
sbb
iret
sti
mov
stos
test
movsl
or
pop
mov
xchg
xlat
int
test
cmp
add
repz
out
and
in
and
popa
gs
pop
adc
pop
scas
mov
inc
mov
adc
mov
adc
inc
push
mov
xor
jle
and
mov
orb
repz
add
sbb
ja
lahf
xor
and
arpl
das
es
mov
in
stos
or
pop
inc
cmpsl
and
sbb
popa
adc
mov
xor
fwait
jge
lret
jb
mov
pop
xor
jbe
add
push
jecxz
stos
cmp
es
mov
shll
movsb
dec
stos
xchg
jp
or
sbb
mov
push
pusha
push
lods
push
push
jb
ror
adc
xor
addr16
int
popf
or
jmp
dec
hlt
rclb
xor
mov
cmp
xchg
xorl
pop
fsubrs
je
inc
stos
cmpsw
sarb
nop
or
push
cmpsl
mov
movsb
repz
fmul
call
mov
idiv
pop
int3
sbb
xor
sub
adcb
cwtl
lods
sbb
fdiv
jg
mov
or
in
sub
mov
cld
popf
test
imul
repz
test
cmp
aaa
add
fbstp
add
sahf
xor
cmp
js
mov
mov
push
mov
add
dec
push
xor
iret
xchg
mov
and
push
aam
pop
insb
lahf
mov
push
pop
jb
fsubrs
xchg
arpl
or
fs
stos
in
in
int3
and
sbb
mov
fdivrl
and
jne
pop
and
cld
je
pop
cmp
pop
jle
adc
aad
sarl
movsb
mov
mov
hlt
mov
pop
shlb
xor
pushf
repz
add
mov
mov
fdivl
pop
enter
in
andb
pop
pop
test
inc
push
pop
mov
adcl
les
xor
push
aad
imul
das
mov
xor
cmc
xchg
out
data16
call
push
sbb
xchg
jl
stc
mov
adc
or
inc
repz
pop
cmp
in
xor
sub
cmp
ss
ds
addr16
adc
fcomps
daa
push
and
lods
pusha
push
and
ret
enter
inc
push
add
cmp
test
imulb
mov
xor
xlat
or
shrb
daa
and
movsl
in
sbb
cmp
sub
in
in
out
inc
cltd
test
adc
fwait
add
jl
mov
imul
pop
dec
xlat
sbb
mov
lods
into
in
and
mov
pop
push
mov
push
divl
scas
mov
fsubl
sbb
and
lods
ret
mulb
lods
sub
push
jecxz
sub
adc
xchg
mov
push
jb
jbe
pop
adc
ret
mov
in
mov
clc
cmovns
push
clc
adc
add
daa
pop
xlat
or
inc
mov
add
lock
add
or
aas
adc
jne
push
hlt
dec
dec
incl
cmp
or
repnz
mov
pop
push
sbb
out
jl
das
outsl
jbe
clc
inc
lret
loop
and
fistps
jl
dec
and
imul
and
add
insb
sub
push
pop
cs
addr16
ja
ja
dec
push
repz
call
fldl
mov
xchg
decb
pusha
adcl
ja
jb
mov
in
mov
mov
pop
sbb
sbb
sahf
inc
inc
jmp
pop
inc
lcall
outsl
es
scas
mov
mov
iret
shl
push
add
cmp
xchg
and
stos
pop
in
jl
mov
mov
dec
inc
sbb
icebp
push
sub
pop
shll
movsb
jnp
sbb
dec
dec
leave
pop
daa
sub
mov
retw
lcall
mov
rcrl
xchg
or
loopne
adc
andb
pop
or
jle
out
xchg
xchg
popa
pop
and
dec
and
int3
and
stos
mov
fwait
sbb
inc
test
inc
and
dec
fdivrl
popa
into
and
nop
iret
andl
pop
adc
sbb
or
dec
sub
mov
sub
push
mov
push
jae
scas
arpl
dec
pusha
loope
mov
xchg
cmp
or
les
loop
mov
data16
outsb
jle
subb
jns
pop
mov
mov
or
adc
imul
mov
testb
and
pop
data16
outsl
sbbl
in
lds
push
rcl
dec
pop
addr16
mov
add
test
lret
sahf
testb
jmp
sub
push
push
xchg
dec
repnz
loopne
iret
rol
jo
mov
loopne
xchg
or
jb
pop
loop
jne
nop
and
jne
xchg
das
leave
outsb
push
jo
aas
out
ss
daa
or
xchg
sbb
lods
ret
mov
lea
jle
jecxz
push
insb
sub
insl
and
int
fimull
sub
stc
xchg
test
ljmp
fucomi
add
cmp
fsubrs
js
xor
sub
pop
mov
push
fsubrs
xlat
lcall
mov
xchg
sahf
imul
iret
pop
sub
or
push
add
push
mov
jno
xchg
insl
in
or
es
push
iret
ficomps
xchg
test
mov
mov
adc
repnz
jl
and
rorb
stc
or
lret
jl
xlat
popa
test
loop
dec
mov
fsubrs
shl
and
cmpsb
div
inc
popf
repz
std
shr
push
mov
sbb
icebp
jecxz
stos
mov
js
movsb
pop
fisubs
cmpsb
mov
pop
cmp
mov
lock
and
nop
pop
imul
pop
loop
dec
sbb
jmp
fcomps
dec
xchg
mov
sub
dec
push
arpl
jnp
xchg
inc
jno
ja
and
cs
jg
outsl
sahf
sbb
mov
add
icebp
inc
cmp
mov
sbb
popf
push
or
and
and
gs
add
in
popf
arpl
frstor
jae
add
repnz
leave
fdivl
and
ljmp
push
xchg
roll
sahf
pop
cmp
add
icebp
push
negl
or
inc
lods
xchg
divl
adc
lock
adc
sub
pop
cmp
mov
inc
and
mov
sbb
mov
iret
dec
pop
js
fwait
enter
pop
inc
ss
mov
mov
daa
sbb
adc
test
into
mov
pop
push
addl
imul
lcall
sti
popf
xchg
rolb
dec
pop
sub
neg
xchg
jae
pusha
lods
sub
pop
xor
pop
and
out
cmc
mov
mov
pop
pop
popf
stc
inc
idivl
inc
sbb
int
push
icebp
mov
sub
sub
sbb
test
es
sti
dec
cld
ret
push
fcompl
xchg
jmp
sbb
jnp
cwtl
jmp
add
stc
mov
inc
inc
sbb
idiv
hlt
jle
cli
sahf
cmp
test
or
xor
xor
adc
inc
and
sub
dec
fistl
xsave
mov
mov
xor
xchg
outsl
mov
cmp
jmp
loope
cli
jae
mov
icebp
adc
out
lods
fs
mov
insl
push
ja
loop
add
jmp
mov
jns
int
dec
in
mov
xchg
clc
cli
mov
or
sti
push
pop
fidivrl
in
cmp
sub
jecxz
mov
jmp
jno
pop
pop
jmp
cmpsl
stos
jg
lods
stc
lea
and
movsb
mov
inc
push
test
jl
xor
out
push
push
mov
xchg
push
repz
xor
lea
sub
sub
mov
and
pushf
mov
mov
out
sahf
and
andl
movsb
movsb
mov
mov
ja
sbb
std
addr16
test
xchg
jno
cmp
divl
jle
add
jae
push
dec
out
test
loopne
xchg
in
or
push
sub
in
mov
cld
arpl
cld
mov
test
movsl
mov
push
sti
lret
aaa
mov
jmp
mov
or
lods
sbb
push
mov
mov
in
sub
js
rcrb
xor
and
fisubs
dec
xlat
adc
and
xor
mov
sub
int
shl
sbb
scas
jns
mov
and
and
adc
push
imul
repz
pop
lret
dec
xor
cmp
mov
pop
jno
or
add
iret
xor
into
cld
ds
stos
stos
bswap
dec
inc
cmp
sub
loope
pop
mov
idiv
jns
sbb
adc
push
inc
arpl
imulb
shl
xlat
sub
dec
fstps
xchg
inc
loop
inc
jp
jmp
fsubrs
push
outsb
and
and
push
push
leave
adc
jno
or
mov
in
imul
loop
cltd
je
and
mov
jle
cmp
xchg
dec
jne
mov
shlb
js
dec
shlb
cmp
lret
fildl
out
ret
movl
mov
enter
cltd
push
ds
sub
rcll
sti
or
inc
mov
popa
test
mov
icebp
or
xor
inc
dec
movsb
mov
scas
cli
pop
mov
xchg
pop
and
sub
mov
cmp
pusha
jnp
xor
xor
inc
imul
in
rorb
lret
icebp
movsl
cmpsb
pop
out
daa
rcrb
fisttps
mov
inc
cmp
ret
jecxz
mov
negl
leave
mov
xchg
mov
inc
les
pop
push
inc
jno
loopne
and
cmp
xor
sbbl
inc
loop
or
enter
push
rorl
daa
test
dec
pusha
add
xchg
jmp
push
jne
dec
inc
outsb
jmp
jp
or
cmpsl
cli
dec
adc
xchg
adc
jo
fnstsw
orl
xor
cmp
insl
roll
in
jle
bound
or
out
xor
and
mov
ret
fmull
mov
aas
sub
inc
adc
shll
jnp
fistps
aad
mov
pop
sub
in
jmp
mov
aam
add
loope
adc
sub
jno
mov
add
adc
adcb
xor
cvtpi2ps
mov
adc
dec
or
and
repz
adc
or
cmp
insl
into
mov
ret
dec
addr16
cmp
fwait
inc
sub
xchg
push
shlb
pop
lret
jle
test
pop
sub
and
repnz
clc
nop
inc
nop
inc
insl
rol
pop
syscall
lret
dec
fdivr
cmp
mov
mov
leave
sub
out
push
xor
arpl
adc
pop
outsl
bound
sbbb
movsl
xor
fidivs
lea
cwtl
nop
mov
jle
mov
les
mov
dec
inc
lods
pop
lods
cli
aaa
adcb
loop
add
repz
sub
repnz
or
stos
jecxz
xchg
shrl
fs
add
loop
je
jb
inc
lcallw
mov
movsl
das
dec
dec
adc
inc
pop
xlat
popf
and
iret
xor
or
cmp
mov
mov
mov
push
mov
push
pusha
in
sahf
in
or
sub
jge
fmul
adc
mov
pop
lea
sub
push
mov
or
dec
imul
test
shll
dec
scas
imul
enter
fistl
dec
rcrl
dec
pop
pusha
mov
or
mov
or
push
adc
in
std
jecxz
adc
ljmp
gs
add
jg
add
mov
adc
sub
in
cmp
jnp
lods
lods
cmp
and
cmp
mov
out
jl
repnz
jns
imul
xor
xchg
and
xchg
jns
fisubrs
subb
or
pop
jbe
sahf
or
loope
mov
mov
int3
or
loope
jmp
xchg
push
and
das
jl
pop
jo
ret
lret
jnp
lahf
jae,pt
jno
lcall
add
push
sub
add
sub
scas
xchg
sub
clc
and
inc
out
shr
mov
sbb
dec
add
ss
or
ret
ljmp
mov
push
jmp
ds
sub
into
mov
xchg
push
mov
mov
test
enter
stos
shrl
adc
out
gs
ljmp
icebp
add
push
sub
sub
popa
cld
pop
pop
rol
mov
sti
das
idivb
repnz
push
lcall
stc
iret
cmp
out
sub
fcoml
out
push
xchg
fiadds
test
jp
sub
movl
add
cmp
adc
cmp
loopne
sti
clc
pusha
sbbb
add
sbb
je
add
jl
fidivl
adc
aaa
clc
fwait
cmp
xchg
pop
push
idivb
mov
add
imul
sub
jecxz
add
aaa
cmpsl
xor
mov
shlb
add
call
or
in
mov
sbb
ret
add
jle
test
lahf
adc
in
xchg
ja
xchg
into
mov
jae
fimuls
divl
jmp
sbb
jne
sub
xchg
mov
divb
sbb
jecxz
fwait
jmp
or
push
pop
lfs
imul
cmpsl
call
inc
mov
jp
stc
sub
cli
fimuls
adc
pop
cmp
int
fs
subl
cmpl
push
or
add
out
hlt
inc
add
cli
xchg
push
inc
sub
and
out
push
fcomps
sub
cmp
iret
and
in
adc
popf
and
sub
jne
cli
cmp
add
cmpsb
inc
into
in
loopne
sub
and
ret
jne
pop
lods
mov
push
xchg
in
call
push
ret
popa
sbb
mov
mov
pop
aam
inc
and
dec
rolb
mov
pusha
ja
hlt
add
hlt
mov
repz
movsl
or
cwtl
lret
jns
sbb
push
std
mov
sbb
sub
mov
js
cmpb
loop
fcmovne
jb
fisubrs
or
aam
jae,pn
pushf
outsl
aas
lods
fs
hlt
jo
es
mov
shlb
aas
pop
xchg
sbb
mov
cltd
adc
mov
je
or
lds
xchg
cmp
arpl
mov
pop
sbb
clc
fsubs
xor
sbb
lods
incl
jns
icebp
inc
cs
ja
inc
dec
imul
in
hlt
adcb
mov
inc
daa
mov
inc
push
mov
cmc
jo
sbbb
je
inc
jnp
push
adc
mov
arpl
adc
sti
shr
pop
arpl
scas
sub
cli
shrb
push
jnp
es
and
pop
testl
in
loop
mov
dec
movsb
sahf
std
mov
add
mov
testl
cmp
dec
mov
lret
ja
lea
xchg
dec
lods
push
mov
mov
je
sub
adc
dec
or
in
mov
xor
andl
push
mov
mov
cmpsl
fs
in
ljmp
add
mov
imul
das
inc
ja
sar
cmp
cmp
mov
shl
es
outsl
pop
sub
out
dec
jp
movsb
in
les
or
je
pop
frstor
pusha
xchg
or
enter
scas
xchg
lock
cmp
jne
cmp
popa
test
insb
pop
push
jp
imul
aad
cmp
sbb
filds
push
lret
and
js
fisttps
cmp
hlt
ret
push
cmp
popa
popf
inc
xor
xchg
sub
mov
and
stos
jp
adcb
ret
mov
repnz
aaa
xor
pop
mov
cwtd
cmpb
mulb
or
jbe
rol
mov
insb
pop
in
cli
lcall
sub
hlt
das
fstpt
adc
cmpsb
push
mov
and
icebp
pop
pop
int3
inc
test
mov
push
aad
xchg
cmp
outsb
xchg
pop
and
ja
xchg
dec
rorl
lea
xlat
sarb
stos
loopne
loopne
lods
cltd
or
imul
cmp
mov
out
js
sub
repnz
cmp
xor
cmp
fisttpll
stos
cmpsl
and
fs
mov
xchg
insb
dec
sbb
cli
iret
jne
rcll
adc
ret
dec
sbbb
sub
add
repz
aas
mov
push
and
andb
ficoms
mov
test
cli
fmul
mov
mov
xor
popa
stos
jecxz,pn
inc
or
movsl
lcall
xor
mov
mov
push
xor
sahf
dec
adc
js
shll
mov
das
and
addb
mov
add
fmuls
repnz
scas
ret
rcrl
loope
fisubs
push
dec
fbld
cmp
jo
lcall
sahf
ljmp
sbb
mov
jg
pop
insb
fdivs
xor
cs
lret
std
dec
cmp
fdivrl
cmp
jo
jge
sub
jae
mov
gs
incl
sbb
sbb
mov
popf
pop
ret
push
outsl
mov
sub
xchg
inc
ds
iret
xorb
sub
je
repz
xchg
das
jo
test
gs
cld
sub
in
xchg
test
dec
mov
data16
jge
cltd
mov
xchg
add
and
inc
aam
pushf
xchg
xchg
std
enter
mov
pop
add
jbe
pusha
fs
lods
jp
and
gs
xor
loopne
inc
dec
mov
sbb
out
sbb
fcmove
jo
xchg
push
pushf
mov
sbb
push
int3
lock
div
lcall
dec
adc
mov
fdivrs
mov
leave
inc
call
and
emms
test
data16
mov
xchg
mov
flds
stc
fs
sub
movl
fcmove
outsb
sbb
push
mov
ja
add
jp
sbb
arpl
push
shll
addb
inc
or
mov
xor
loop
dec
rolb
inc
jnp
and
jmp
sti
mov
xorb
adc
outsb
int
sbb
add
jp
dec
inc
pop
adc
adc
daa
ss
mov
jb
out
sbb
push
mov
xchg
stos
xor
in
jns
sbb
push
loopne
cmp
xor
or
call
xchg
into
cmpsl
or
pop
jns
iret
and
dec
dec
sti
sub
push
jmp
mov
push
arpl
xchg
jns
and
mov
test
cmpl
mov
and
lcall
inc
jp
stos
test
movsb
push
lock
pop
jmp
push
push
aad
sbb
or
push
mov
jmp
adc
les
push
flds
cmpl
stos
bound
sub
or
mov
and
mov
aas
lahf
out
inc
insb
pushf
test
dec
dec
jl
dec
and
pusha
dec
adc
lods
cli
dec
test
andl
push
dec
in
adc
test
pop
ret
imul
pop
stos
or
lods
push
xchg
sbb
popf
out
jnp
mov
mov
mov
mov
jg
fidivrl
inc
fcmovu
movsl
js
jns
lcall
popf
test
mov
adc
outsb
call
fistl
mov
adc
pop
decl
xchg
sbb
cs
fwait
addr16
dec
fs
outsb
cmp
add
mov
adc
inc
xchg
fsubrs
repz
mov
lret
mov
jg
pop
imul
fmul
xchg
sbb
daa
mov
pop
sub
test
add
push
out
bound
mov
ficoml
lahf
xor
popf
sbb
inc
and
jbe
mov
pushf
push
in
pop
incb
cmp
bound
dec
negb
fstps
pop
cmpl
mov
repz
repnz
ret
orl
mov
shlb
cwtl
mov
push
gs
popa
push
insl
adcl
fs
xor
mov
mov
xor
cld
cmp
dec
sbb
out
xor
leave
lcall
jae
ljmp
out
test
sbbl
mov
mov
sub
loop
xchg
js
stos
dec
hlt
je
dec
mov
push
fsubs
les
jne
xchg
popf
shlb
mov
sbb
cmp
jo
add
mov
mov
xchg
daa
mov
fs
inc
dec
in
mov
mov
icebp
cmpsl
sub
cli
sub
or
pop
cmp
xor
pop
and
push
push
aad
pushf
jp
fs
ret
movsb
mov
sbb
lret
mov
nop
cwtl
cmp
mov
jp
add
je
aad
push
repnz
jle
mov
incb
sub
stos
sub
adc
sar
out
ffreep
lea
mov
cmp
dec
mov
add
fidivl
scas
cld
imul
cs
outsb
jmp
aaa
das
and
aaa
pop
xor
xchg
mov
or
out
loop
imul
scas
ret
sbb
fcmovnbe
push
dec
mov
std
mov
shll
sarl
dec
xchg
mov
lea
ret
out
shr
jnp
adc
into
xchg
iret
xchg
pop
int3
and
dec
mov
hlt
jge
out
pop
and
mov
rolb
mov
push
mov
fildll
pushf
mov
and
jecxz
push
or
mov
jp
jmp
dec
aam
mov
add
jae
lret
shrl
dec
in
cmp
pushf
pop
pop
mov
decb
dec
push
mov
sub
pop
xchg
mov
dec
mov
push
mov
cmp
lods
vpminub
ss
jmp
pop
iret
insl
test
je
sub
das
xlat
cwtl
pop
adc
dec
jmp
inc
imul
mov
mov
imul
popf
enter
push
pop
fwait
in
into
jbe
mov
shl
lock
sbb
push
xor
shr
mov
sahf
push
jns
js
insb
mov
lcall
jbe
xor
mov
xchg
subl
pop
add
pop
dec
pop
lods
mov
inc
popa
int3
std
fcoms
aas
pop
mov
cwtl
mov
sbb
sub
scas
leave
dec
dec
pop
push
add
pop
loop
jns
push
iret
movsl
add
xor
sti
fmuls
jno
es
push
jo
outsb
in
and
outsb
xchg
shrb
pop
dec
mov
adcl
mov
cli
adc
gs
add
lods
out
xor
movsl
pop
cmp
mov
mov
mov
pop
push
sbb
xchg
jle
daa
shl
push
std
adcb
mov
xchg
int
xor
into
clc
xor
test
sbb
pop
and
add
int
pop
je
scas
sub
jecxz
adc
pop
stos
xor
push
xor
add
pop
push
shlb
or
pop
mov
arpl
sbb
xchg
dec
jns
add
push
xor
push
mov
fisttpl
inc
adc
mov
test
nopl
test
icebp
je
scas
mov
shll
cmp
or
fs
fwait
testl
cltd
out
ss
mov
sbb
call
negl
xor
bound
mov
shl
stos
xor
dec
sub
cmpl
mov
fstpt
cmc
push
push
push
lcall
sub
jb
adc
jbe
rcr
dec
popa
lret
mov
or
lock
fcomip
test
or
dec
add
call
inc
das
ja
fwait
jns
sub
xchg
push
rcl
repnz
mov
jl
push
pop
aas
push
mov
mov
out
xlat
jge
adc
or
mov
xchg
push
and
add
das
push
pusha
out
cmc
xchg
lods
dec
xchg
xlat
ljmp
pushf
and
sbb
mov
call
idivb
cli
mov
jmp
jnp
int3
leave
add
push
and
sbb
mov
and
leave
xchg
mov
push
int
push
and
sub
xchg
push
mov
rol
pop
dec
popf
xor
mov
mov
jb
push
mov
mov
dec
xchg
mov
cmpsl
test
int3
add
mov
push
fdivp
repnz
out
jle
idivl
out
pop
xchg
xor
sbb
xchg
sti
ljmp
mov
out
setnp
xchg
pop
sub
push
cmpsb
or
xor
mov
pushf
das
repz
and
enter
and
pop
mov
cwtl
push
mov
xchg
fldt
adc
outsb
mov
incl
in
jmp
inc
cld
sub
rcll
add
call
lcall
scas
loop
jl
xchg
pop
push
adc
ficomps
inc
in
popf
js
imul
movsb
dec
add
mov
arpl
fidivrl
sbb
mov
xorl
leave
jno
and
push
aad
arpl
and
push
jge
inc
out
test
add
scas
les
adc
and
pop
ljmp
outsb
ds
xchg
mov
ss
cmpsl
testl
pop
stos
and
xor
jo
mov
push
mov
stos
inc
and
test
push
xor
shll
add
sbb
sbbl
mov
rclb
mov
test
loope
adc
lret
sbb
xchg
outsl
out
cli
mov
nop
push
xor
mov
jge
push
inc
outsl
repz
push
rol
pop
pop
mov
repz
mov
xchg
sbb
fimull
fisubrl
cmp
mov
subb
or
xor
int
dec
mov
push
je
in
pop
mov
clc
inc
inc
mov
mov
adc
insl
pop
int
push
and
xor
decl
je
sbb
pop
mov
pop
insb
lahf
mov
xor
jle
testl
and
test
mov
xchg
js
test
sbb
adc
add
popa
les
outsl
adc
popa
add
roll
in
in
into
roll
mov
adc
js
sbb
xor
xor
inc
and
and
cld
sub
pop
dec
cmc
dec
xor
filds
mov
add
inc
in
push
jnp
aaa
cwtl
test
dec
cltd
add
loope
test
push
mov
lcall
lret
jg
cmp
test
jns
and
out
push
insl
pop
push
loop
mov
pop
sbb
sahf
jge
subb
xchg
repz
jp
sbb
loope
rcrl
std
sbb
or
sub
arpl
mov
cmpsb
adc
mov
lahf
sub
test
repz
test
jge
xchg
or
dec
cmc
adc
loopne
hlt
push
mov
loope
pop
sbb
pusha
xchg
mov
movsl
fwait
jb
mov
das
lods
add
pop
mov
adc
jb
push
test
fidivs
lgs
sbb
mov
xor
pop
sub
hlt
xchg
xchg
ja
xchg
push
ret
cmp
push
pop
xchg
mov
pop
jecxz
ljmp
lahf
sti
loop
inc
adc
sub
popf
call
aad
xchg
out
sbb
inc
mov
leave
jecxz
jae
or
mov
sbb
cmovnp
and
std
cmp
lret
int
pusha
clc
xor
test
adc
mov
imul
push
aad
scas
cmp
jb
aam
lcall
dec
xchg
push
push
arpl
call
mov
mov
jge
popf
and
int3
push
xor
mov
and
mov
inc
cltd
in
cld
push
enter
sub
pop
sub
jne
jne
cs
testb
stos
push
shlb
jae
xor
shl
sub
jno
push
pop
pop
jp
sub
lods
orb
mov
push
and
jg
lds
fidivs
je
push
scas
mov
dec
enter
test
inc
divl
inc
push
jb
loop
std
in
jne
pop
scas
jne
mov
cmc
fmul
push
pop
adc
pop
pop
and
daa
sub
ror
xor
adc
es
fisttpl
mov
pop
imul
testl
outsb
into
insl
mov
call
push
shlb
cltd
lock
icebp
mov
mov
mov
call
or
fucomp
xor
jg
sub
sub
popl
dec
stos
insl
xor
cmp
dec
sub
add
loope
xchg
roll
mov
jno
int
fwait
and
push
lret
mov
mov
sbb
aad
jne
cmp
cltd
mov
lea
pusha
test
cs
ja
sbb
cmp
pop
sahf
fsubrl
daa
push
pop
cmp
jmp
inc
lret
je
sahf
repz
jns
xor
cli
sbbl
add
adc
imul
jne
mov
lea
ja
add
inc
push
jle
jge
loopne
jecxz
xchg
nop
nop
leave
mov
cmpsb
dec
push
adc
push
mov
nop
jne
inc
cwtl
in
shr
lret
icebp
ds
dec
cmp
fdivl
ret
mov
cmpsl
add
push
mov
das
mov
pop
cmp
jg
mov
adc
imul
pop
jle
cs
xor
data16
dec
lcall
xor
std
test
insl
dec
outsl
cld
dec
ljmp
das
cltd
cmp
pop
int3
mov
fsubl
adc
sub
mov
orb
and
or
aam
sbb
pop
mov
add
std
std
imul
mov
test
shll
add
fcomi
lret
jae
xchg
xor
stos
mov
es
cmp
test
push
daa
push
cmp
jge
jp
imul
mov
stc
dec
lock
push
ja
adc
fsubs
jmp
repz
pop
fwait
inc
movl
fs
loopne
add
cs
stos
int3
pop
call
orl
mov
jnp
sub
cmp
sbb
mul
jge
cmpsb
push
jbe
and
out
movsb
dec
mov
mulb
pop
clc
mov
jl
insl
mov
mov
push
icebp
lds
enter
push
push
fidivrs
lahf
push
xchg
xchg
or
pop
in
les
and
xor
scas
jle
loopne
and
pop
jmp
pusha
sahf
xor
pushf
into
push
push
mov
jl
push
js
sar
dec
loope,pn
xchg
je
jns
dec
mov
or
jns
aam
push
call
mov
dec
xchg
inc
or
mov
je
pusha
fimull
subb
adc
sub
add
std
pop
popf
std
cs
jg
lret
movsb
leave
sbb
mov
mov
mov
xor
mov
stc
in
add
shrb
daa
jne
cmp
scas
or
add
mov
mov
repz
notb
cmpsl
jae
iret
pop
xlat
lods
sub
lea
cmpsl
sbb
jge
sub
lahf
jo
imul
fisubrl
pop
sub
cmp
int
mov
jp
les
push
inc
mov
xchg
sub
clc
mov
out
aas
nop
sbb
jle
dec
fldenv
cmpsl
nop
outsl
jnp
mov
sbb
dec
or
movsb
inc
jmp
mov
arpl
mov
incb
scas
mov
fwait
add
jg
mov
xor
push
push
add
pop
mov
movsb
rcrb
fnsave
fldcw
sub
andl
lahf
mull
stos
mov
mov
fstps
jl
xchg
mov
sub
in
and
cld
shll
xorb
cmp
repnz
mov
xchg
imul
add
popa
loop
adc
fs
add
or
jp
and
cli
mov
fsub
test
push
adc
mov
inc
xchg
lock
and
test
data16
jl
popa
inc
push
aam
std
lcall
pop
or
add
adc
cwtl
outsl
divl
xchg
je,pn
xchg
repnz
test
sbb
fstl
jl
fisubrs
cmp
xlat
or
cld
test
add
add
fistpl
jl
mov
shlb
push
pop
cltd
iret
sub
or
inc
lahf
sub
jmp
insl
popf
ss
push
stos
mov
aas
mov
mov
nop
imul
mov
xor
pop
sub
call
nop
cmp
inc
mov
insb
jns
cmp
enter
or
repz
mov
lret
es
xchg
mov
in
sahf
mov
add
adc
mov
jnp
clc
cmc
test
sbb
mov
std
outsb
ja
pop
dec
shrb
insl
das
pop
fildll
xchg
and
xchg
fistpl
xor
dec
xchg
mov
lods
mov
cmpsl
push
nop
loopne
out
aas
add
mov
add
push
jg
mov
or
repnz
xchg
jbe
dec
xchg
aas
inc
cwtl
add
inc
into
pop
jns
fstps
daa
or
ja
ja
hlt
cltd
pop
cltd
shlb
std
adc
addb
pop
aam
out
test
cmp
xor
or
stos
nop
int3
and
negl
cmp
test
stc
push
mov
mov
jbe
imul
ret
sti
pop
and
into
js
ja
pop
loop
cmc
adc
leave
lock
das
ficoml
xor
cmp
repnz
out
pop
add
inc
sti
popl
out
rcr
ss
sti
imulb
mov
popa
add
mov
mov
nop
lret
pop
in
lock
mov
sarl
popa
mov
jl
aaa
sti
in
cmp
cwtl
sub
push
sbb
lds
add
jno
aas
or
cmp
and
lds
xchg
mov
jl
repz
or
sub
add
pop
xchg
fldenv
mov
cld
mov
mov
lock
inc
cmp
jae
ret
cmpsl
xchg
cmp
cwtl
gs
push
outsb
dec
adc
gs
int
mov
mov
or
xorb
call
sbb
mov
adc
aaa
dec
ret
or
lods
nop
ret
cltd
adc
add
push
mov
mov
nop
decb
xchg
movsl
addr16
test
dec
lea
stos
jmp
push
cmp
pop
in
adcb
sbb
inc
das
out
xor
out
pop
cltd
xor
mov
add
outsb
pop
out
rorl
and
scas
clc
in
mov
fwait
test
adc
cmp
stos
xchg
pop
xchg
cmp
pop
cmp
stos
stc
test
mov
pop
les
dec
cmp
popf
test
cwtl
dec
and
dec
hlt
into
pop
fsubrs
fdiv
pop
lock
sub
inc
ret
mov
movsl
dec
rcr
jmp
dec
stos
xchg
push
sub
je
add
loop
and
fstpl
movsb
pop
xchg
jle
scas
jb
xlat
notl
push
push
popa
outsb
cmc
mov
xor
out
ficoml
sub
inc
lods
jecxz
popf
cmp
mov
leave
pushf
jg
dec
push
sahf
pop
push
xor
jg
pop
and
and
imulb
jmp
clc
xor
addr16
inc
insl
aaa
push
sarl
cmp
or
bound
jnp
jne
add
add
xchg
je
adc
add
fisubs
sub
cmp
push
jne
lock
pusha
xchg
pop
pop
sar
mov
cmp
rorl
loop
sahf
dec
es
jne
cwtl
into
fwait
out
jecxz
fcomps
mov
pop
mov
in
xor
iret
addr16
testb
cmp
or
test
rorl
pop
jbe
ss
inc
in
push
jl
fwait
pop
lret
mov
xor
das
clc
add
test
cmc
lret
daa
outsl
push
out
xorl
xchg
cltd
mov
add
imul
xor
fcoml
adc
push
adc
fisubs
sub
fwait
cltd
jbe
jg
icebp
and
jns
inc
aam
mov
in
jnp
rorl
shrl
mov
and
or
ret
lcall
ljmp
rolb
jb
mov
add
out
shrb
mov
cmpsb
cmp
push
es
xchg
add
dec
cld
push
faddp
inc
or
daa
adc
jle
mov
or
adc
into
sbb
xchg
clc
test
fstpt
jecxz
push
fcmovb
test
les
insb
stc
scas
add
pop
add
testb
inc
xchg
sub
pop
cmp
int
mov
jle
mov
shll
fwait
mov
out
inc
mov
pusha
mov
sbb
push
mov
in
xchg
cmp
int
mov
into
sub
in
aas
inc
clc
dec
inc
xchg
jg
repnz
sbb
push
call
lods
dec
movsb
int3
mov
fimull
mov
popa
shlb
sbb
xchg
sbb
adc
push
aad
mov
xchg
les
aam
popl
lret
fdivs
stos
pop
pop
pop
jge
xlat
cwtl
roll
jo
cmc
mov
jne
and
test
mov
push
ljmp
push
mov
xchg
add
dec
dec
xchg
lret
push
mov
push
pop
xchg
shrl
cltd
sbb
xchg
lret
add
sub
cmp
ja
icebp
push
decb
push
arpl
xor
xchg
loop
in
pop
imul
dec
and
ret
aad
dec
push
andb
sub
outsl
add
mov
je
inc
in
mov
iret
es
pop
xor
and
add
or
shrl
scas
lds
xor
nop
sbb
pop
mov
fcomps
sub
dec
loopne
imul
xlat
mov
and
mov
test
pop
sahf
mov
and
sarb
sub
dec
je
or
mov
mov
daa
pop
lock
push
mov
mov
inc
enter
mov
xor
cltd
sti
icebp
jno
xchg
sub
xchg
fdivs
outsb
es
cmp
fs
popf
out
or
mov
or
aam
ds
lods
incl
pop
lock
test
aad
cmpsb
lret
insl
jge
lcall
push
pop
xchg
lea
cmp
out
lods
push
int3
push
mov
jmp
xchg
ja
call
inc
cs
ret
inc
mov
adc
insb
loopne
fs
dec
scas
out
mov
data16
sbb
cmp
inc
fwait
aaa
add
push
adc
das
jnp
insb
daa
insb
icebp
repnz
aas
adc
inc
cltd
add
push
cmp
jae
test
mov
pop
int3
subl
outsb
dec
cmp
mov
inc
imull
cmp
and
dec
xchg
nop
jle
outsl
cld
addb
push
mov
dec
pop
add
iret
sub
xchg
cmp
js
xchg
ss
pusha
or
outsl
mov
cli
dec
or
mov
xchg
iret
jne
ret
pop
mov
enter
popl
cmp
out
movsb
shlb
jle
out
shrl
outsb
lods
es
loope
and
loope
xor
push
ljmp
jle
jo
bound
mov
dec
and
leave
enter
loope
inc
sbbb
inc
sbb
addr16
mov
sbb
sub
filds
out
negb
jge
add
and
out
leave
pop
adc
jbe,pn
shlb
sbb
test
scas
bound
mov
enter
mov
loopne
push
cmp
mov
in
test
lret
imul
aad
jnp
jg
and
mov
mov
push
push
dec
nop
mov
add
sub
xor
ss
adc
imul
jg
les
mov
fistps
jns
jl
cld
stos
cmp
pusha
lods
push
cmp
sbb
mov
mov
xor
jmp
in
inc
fxam
das
in
shll
and
pop
mov
ds
decb
imul
ffree
shlb
data16
addl
and
mov
mov
or
sbb
mov
addr16
popf
cs
loopne
mov
negb
sub
lods
and
or
ret
mov
adc
ror
and
xlat
icebp
xor
fidivrl
jne
ret
xor
je
mov
ret
inc
xor
xchg
inc
iret
mov
mov
adc
pusha
xor
lahf
je
xor
cld
in
insb
mov
add
or
push
mov
repz
lods
nop
popf
sub
ss
mov
jl
aaa
push
aam
mov
xchg
jmp
lock
imul
inc
pop
out
bound
mov
les
dec
dec
and
mov
dec
xorb
cmp
aaa
push
arpl
icebp
pop
adc
in
das
repnz
mov
mov
mov
xchg
sub
je
jne
lea
push
pop
outsl
lcall
int
xor
popf
xor
add
sub
icebp
faddl
lahf
mov
imul
or
in
add
or
insb
fidivl
ds
bound
or
lds
push
mov
xor
mov
jg
jecxz
lds
icebp
out
jnp
dec
ret
xchg
sub
call
mov
pop
in
fwait
cmp
add
arpl
mov
xchg
inc
adc
pop
jg
lahf
lahf
push
adcb
out
andb
lret
lret
out
insl
ljmp
push
stos
insb
xor
bound
jbe
xchg
jb
dec
cli
stos
pusha
and
xchg
push
fwait
push
push
push
aas
push
aad
stos
clc
jp
fmul
jo
mov
insb
adc
popa
cmp
mov
lods
popa
adc
sbbl
cmpsb
sub
rorl
cmp
and
adc
inc
push
scas
cwtl
cmp
ljmp
pop
mull
clc
or
and
in
ss
inc
mov
cmpsl
js
out
mov
imul
lea
popa
sbb
or
xchg
jge
in
data16
sub
mov
rcrb
push
cmc
jmp
add
decl
jmp
fists
push
cmp
js
enter
shrl
mov
pop
dec
pop
call
into
jl
divb
idivb
mov
jnp
hlt
fstl
negb
adc
pop
xchg
or
ret
clc
movsb
je
orl
bound
mov
mov
xchg
ljmp
ds
or
inc
and
test
in
sub
push
jbe
or
insl
jo
test
push
xchg
push
outsb
mov
cltd
adc
mov
pop
cli
push
fdivrp
sahf
aad
adcb
repz
aam
pop
mov
dec
iret
sbb
fdivl
or
and
bound
call
sub
pop
push
clc
cmp
adc
sub
mov
cld
inc
sbb
push
and
add
push
out
or
repnz
cwtl
pop
ds
in
popa
sbb
into
movsb
hlt
xchg
xchg
and
adc
mov
push
popf
sbb
xchg
scas
lret
test
inc
aam
pushf
outsb
divl
sbb
mov
es
inc
push
mov
iret
lcall
add
mov
pop
sub
sub
les
andl
push
xchg
lret
dec
fsubrs
add
test
hlt
and
mov
nop
adc
inc
jo
or
and
popa
inc
stos
inc
cmp
sbb
adc
jne
fimuls
aam
int3
pop
cmp
test
stos
mov
ljmp
cmp
pop
sbb
push
xchg
and
xor
arpl
outsb
stos
ret
xchg
add
filds
add
into
leave
push
out
lcall
push
cmpsb
mulb
jns
pop
pop
pusha
lahf
pushf
dec
jle
mov
loope
mov
dec
aaa
cltd
hlt
in
push
adc
dec
mov
push
in
cmp
lcall
cltd
sub
mov
inc
add
xchg
jmp
call
testb
xlat
cmp
inc
cmpsb
aas
outsb
mov
and
mov
cli
cwtl
lahf
and
sti
dec
or
xchg
cmp
and
jge
repz
pushf
nop
int3
pop
dec
mov
pop
clc
ss
jle
ja
pop
in
es
dec
add
or
orps
pop
jge
jb
rclb
add
loope
xchg
mov
mov
push
or
fnstcw
rcrl
lods
inc
popf
and
je
mov
or
pop
cmp
cli
fistl
aam
push
sub
in
stos
jl
ret
jmp
push
shr
outsb
or
mov
rclb
or
mov
lahf
out
cmp
sbbl
cmp
xchg
loopne
push
dec
push
sub
repz
aam
aas
xor
stc
cld
mov
sti
mov
je
push
fisubs
jae
inc
mov
adc
push
push
addr16
adc
adc
shrl
xor
adc
loopne
and
test
out
nop
imul
sbb
mov
sub
sub
neg
mov
out
mov
xchg
lret
inc
gs
cmpsb
es
adc
fdivrs
inc
mov
mov
cmc
mov
push
fiaddl
aam
xor
pop
or
xchg
loopne
jnp
mov
lret
jnp
jmp
mov
cs
cltd
inc
jecxz
dec
mov
mov
addr16
dec
es
pusha
pop
cltd
call
stc
adc
xor
into
out
dec
add
stc
repz
mov
sbb
iret
jo
shrb
push
and
call
leave
sub
movsb
pop
and
dec
call
jg
lea
cmp
add
jge
dec
in
fdiv
sbb
ficoml
leave
pop
xchg
mov
or
push
insb
fsts
jb
cs
lahf
xchg
inc
xchg
cmp
out
loop
aas
push
dec
push
and
fwait
out
movsl
decb
xor
orb
ret
orb
jmp
fcmovnb
call
scas
fdivr
jmp
in
sub
subl
jmp
add
mov
push
bndcn
sbb
xor
and
or
jecxz
pop
cmpsb
mov
or
rorl
cmpsb
pop
hlt
dec
in
mov
addr16
lds
sub
addr16
sti
sbb
mov
nop
stos
and
repz
pop
mov
pop
adc
enter
jo
arpl
add
sub
lea
inc
popa
sub
fcmovbe
xor
std
sub
add
xchg
leave
sub
dec
sub
pop
push
sarl
jecxz
call
fidivs
and
xchg
push
cwtl
adc
aaa
aad
pushfw
nop
lahf
mov
movsb
inc
adc
shl
pop
fucomi
rdtsc
inc
dec
ret
sbb
mov
mov
pushf
out
add
push
mov
dec
incl
cmp
mov
shrb
cs
cmp
jmp
cltd
cld
xchg
inc
dec
loope
xchg
mov
fstps
jo
xor
aaa
fldcw
adc
repz
aad
or
outsl
scas
scas
jl
xchg
insb
nop
sbb
inc
out
adc
shl
adc
fnop
hlt
daa
mov
cmpsb
or
addl
arpl
in
mov
imul
xor
pop
enter
push
push
in
mov
pop
jl
mov
ds
mov
jae
into
cmp
nop
je
inc
push
call
mov
xor
jns
add
push
cmpsb
testb
mov
int3
aas
imul
sbb
mov
pop
adc
cmc
arpl
and
mov
inc
fcmovu
mov
es
xchg
je
mov
inc
and
jge
cld
cmpsb
adc
aas
adc
mov
mov
push
cmp
inc
xchg
loope
cld
mov
or
paddsw
mov
movsl
fisttps
loopne,pn
std
sub
cli
cmp
mov
outsl
mov
popa
dec
add
and
scas
aas
in
iret
or
xor
xchg
jecxz
mov
sub
mov
pusha
pop
jae
pushf
or
mov
dec
es
lds
arpl
mov
push
pop
mov
adc
pop
loop
jnp
lea
lea
push
lret
pop
jne
cld
adc
loope
mov
cmp
pop
or
mov
cld
int
mov
mov
cmp
or
mov
push
or
xor
cmpsb
or
lea
adc
ja
push
mov
popf
lcall
movsb
mov
mov
mov
xor
xchg
lea
into
inc
xchg
fcoml
or
scas
int3
cmpsb
dec
jb
cmpsb
movsb
xchg
cmp
sub
call
sbb
xor
adc
icebp
mov
push
cs
test
push
push
mov
cmp
jae
or
fdiv
jb
insl
test
and
lds
mov
scas
pop
ljmp
into
imul
icebp
jge
mov
imul
xchg
xchg
lods
dec
add
test
in
cmp
inc
cmpsl
jmp
imul
ljmp
fdivrl
mov
mov
hlt
adc
xor
das
enter
xchg
cmp
and
mov
push
and
push
xchg
ss
push
mov
add
mov
stos
movaps
sub
ret
mov
cmp
xorb
daa
or
sub
fmull
mov
shrb
rcr
or
idiv
scas
xor
mov
addr16
fnstenv
jg
popa
push
jl
dec
das
test
push
cmp
int
jnp
test
and
adc
stc
les
xlat
mov
bound
and
sbbl
das
xlat
mov
scas
inc
dec
inc
mov
dec
sub
sub
sub
mov
xor
aaa
cs
out
mov
dec
test
rcrb
repnz
loopne
rcll
out
imul
ret
add
mov
sbb
jmp
adc
pop
mov
or
cmpsb
cmp
inc
jnp
sbb
inc
addl
pop
mov
testl
cmp
add
jecxz
cld
ffree
push
call
or
clc
out
rcrb
test
push
insb
sahf
and
xchg
pushf
cli
inc
pop
shl
push
scas
add
ret
pop
xor
or
mov
sub
xor
out
aas
xor
lret
imul
add
ret
sbb
and
into
sar
dec
and
stos
or
mov
inc
outsb
in
inc
push
xchg
push
push
mov
loopne
lret
ss
cwtl
fldt
std
or
movsl
lods
imul
lds
jecxz
push
mull
cmp
mov
lods
rolb
loopne
aaa
sub
iret
imul
xor
scas
sub
dec
adc
lahf
mov
xchg
js
cmp
mov
loopne
aaa
add
xor
or
sbb
clc
mov
mov
mov
xchg
sbb
hlt
flds
arpl
dec
je
lahf
inc
movsl
mov
adc
push
leave
push
js
dec
imul
aaa
lods
sub
pop
or
sub
fisttpll
imul
setns
add
lahf
and
pop
or
jle
popa
fsubl
jno
mov
daa
mov
add
out
push
shl
andb
fcompl
xchg
fmuls
inc
xor
sbb
decb
ljmp
jmp
fimuls
stos
imul
outsb
xor
xchg
or
dec
in
xchg
mov
orl
jns
ljmp
push
jo
lods
out
mov
dec
out
fsubs
push
mov
fwait
stos
bound
pop
scas
or
mov
inc
or
mov
std
lret
jge
xor
mov
jl
sub
insb
hlt
dec
cmp
popf
push
pop
sahf
sbbb
pop
jo
mov
out
pop
stos
cli
cmp
and
add
inc
in
enter
jns
notl
scas
adc
adc
in
shll
pop
sbb
fisubl
xchg
cmp
out
clc
loop
mov
test
sbb
mov
cli
sbb
fidivrl
mov
or
adc
into
xchg
pop
mov
shlb
add
push
sbb
stc
pop
loope
dec
jl
pop
les
fucomi
xchg
sub
xor
pop
mov
xchg
int3
or
mov
and
or
push
movb
pop
and
mov
fstps
rorl
add
jo
push
enter
mov
out
mov
mov
int
xchg
mov
sarl
mov
jl
push
mov
rcr
adc
popf
sub
enter
int3
stos
xchg
in
cmp
icebp
and
ss
nop
push
les
call
jle
push
dec
dec
mov
adc
imul
mov
xlat
mov
bound
aam
pusha
push
aad
cmpsl
add
mov
cmp
push
idivl
jb
cmp
arpl
xchg
out
xor
inc
fdivrl
sub
mov
clc
adc
ret
outsb
int3
and
insl
in
sarl
push
push
loopne
bsr
or
mov
mov
scas
shrb
and
pop
or
cmpsb
mov
jmp
je
ficomps
adc
sbb
dec
mov
pop
adc
jne
loop
pusha
push
or
sub
jp
rolb
cmc
loop
cs
xor
je
jb
negb
pop
je
xor
ja
xor
int
cmp
pusha
or
jnp
scas
rorb
cmp
and
in
add
mov
sub
sbb
and
push
addr16
in
mov
add
int
mov
jno
dec
jp
xchg
lods
popf
lods
mov
dec
xchg
in
in
mov
lcall
fsubrl
add
sbb
cmp
jbe
mov
mov
lods
or
bound
xchg
inc
rcrl
icebp
mov
adc
enter
lods
scas
pop
add
or
mov
fidivrs
jbe
xchg
jp
ret
xlat
xor
stc
add
out
push
add
in
add
cli
lret
push
mov
cld
mov
sub
js
stc
cmpsl
push
and
cmp
add
insb
sub
inc
xor
pushf
ror
push
nop
jle
insl
mov
loope
sub
popa
mov
and
jns
mov
maxps
es
pusha
xchg
mov
cli
sbb
push
fsubrl
adc
jle
add
xchg
arpl
pop
mov
stc
xlat
ret
es
lock
mov
fwait
jo
cmp
shrb
jb
jmp
loope
xchg
les
fidivrs
dec
in
jle
test
xchg
mov
les
clc
shlb
int
lret
dec
call
sub
js
lret
inc
mov
rcll
add
cld
mov
dec
inc
orb
xchg
rclb
xor
arpl
xor
stc
cmc
loop
scas
fwait
sbb
std
daa
sub
int
and
sbb
jb
rcrb
mov
pop
pop
aas
push
or
inc
loop
jo
adc
ds
mov
cli
or
dec
adc
loop
dec
insb
movsbl
mov
sub
jo
jb
in
out
and
jle
out
test
aaa
and
out
icebp
pop
xchg
push
cli
xchg
enter
adc
pop
popf
mov
stc
sbb
out
or
ret
sub
dec
notb
punpckldq
jne
in
jns
out
jl
xrelease
mov
pop
pop
sbb
andl
outsl
or
adc
push
sbb
sarb
andb
cli
sub
or
push
mov
push
and
mov
daa
xchg
pop
mov
or
pop
xchg
movsb
mov
adc
xor
mov
pop
inc
pop
out
xor
js
inc
arpl
mov
test
cmp
adcl
shrd
pop
idivl
sub
movsl
xor
lcall
mov
lds
test
fcmovbe
shrb
sub
rorb
das
aaa
xchg
mov
push
push
mov
ja
addl
cmc
xchg
push
inc
dec
mov
lret
jb
js
mov
mov
es
jbe
jle
mov
lock
sbb
xchg
xor
lods
daa
xor
add
movb
adc
xor
sub
mov
mov
les
jmp
loopne
inc
outsl
xor
scas
mov
js
popf
subl
and
dec
mov
add
xchg
ss
sbb
sub
lock
cmp
pop
insl
lahf
push
dec
test
hlt
out
fstpl
addl
jle
mov
jge
pop
outsb
push
or
xor
out
notl
rcrl
pop
sarb
lea
test
in
pop
subl
loope
repz
jl
ds
stos
xchg
outsl
dec
das
or
pop
jb
jmp
xor
pop
mov
xor
dec
xchg
fcoms
mov
repnz
push
in
clc
add
push
dec
std
jp
sahf
add
jbe
dec
fsub
sub
push
rorl
fstpt
push
nop
sub
mov
xchg
imul
jbe
mov
into
orb
fcoms
ret
aad
pop
loopne
pop
fs
enter
or
shll
test
sub
dec
xchg
jo
andnps
jne
inc
fcoms
lods
loope
repnz
inc
jge
data16
cs
cmc
inc
push
sbb
add
insl
movsl
in
mov
int3
mov
jl
push
mov
xchg
push
cmp
cmp
adc
cmp
pushf
shll
pop
xchg
in
call
lods
loope
popf
xor
js
gs
repz
mov
push
xor
subl
cmp
jge
push
cs
popf
leave
jnp
dec
into
fisttpl
mov
inc
dec
ss
sub
inc
sbb
cmpl
mov
outsb
pop
inc
ljmp
mov
rcrb
or
lahf
pop
push
mov
xor
loop
push
and
dec
hlt
sbb
mov
lret
lret
test
jae
xor
ljmp
xor
test
leave
push
sub
psraw
push
aam
insb
mov
mov
jmp
scas
clc
dec
xchg
and
mov
stos
adc
ljmp
jb
xor
jp
sti
cmp
jnp
jno
cli
xchg
cmp
push
jno
test
dec
pop
cmpsb
inc
cmp
fsubs
mov
test
jbe
jl
mov
mov
mov
cmp
mov
jmp
imulb
gs
adc
mov
iret
inc
nop
cmp
nop
cli
jge
lea
mov
fneni(8087
jns
push
sbb
ficomps
test
jbe
pop
dec
xlat
es
inc
jp
stos
xor
shlb
xchg
lea
dec
mov
lahf
and
cmp
sub
sub
pushf
pop
pop
jae
mov
cmp
imul
cmc
outsb
daa
cs
unpckhpd
arpl
imul
scas
sbb
inc
jns
and
xor
mov
fistl
pop
jb
lahf
sub
rolb
pop
cmpl
das
sbb
jmp
pop
ret
ficompl
dec
push
and
mov
jne
xchg
je
lock
sahf
or
pop
out
push
testl
and
icebp
mov
js
xchg
in
nop
out
clc
pop
cli
inc
es
jo
xchg
shlb
pop
jns
test
hlt
jmp
inc
sub
sub
xor
das
adc
pop
sahf
xchg
in
mov
imul
aaa
andnps
pop
add
pop
jge
cmpsl
jnp
push
movsl
cs
aam
arpl
out
je
in
push
hlt
aaa
inc
cs
and
arpl
mov
int
lcall
mov
mov
aad
push
lret
dec
pop
pop
add
or
or
sbb
or
in
int3
mov
mov
clc
cmp
sarb
movsl
add
xor
hlt
clc
out
out
mov
cmp
inc
cmp
mov
sbb
dec
dec
dec
jno
dec
or
mov
std
out
jnp
es
out
fcomi
aad
and
call
sub
push
fimuls
inc
sub
xor
repz
push
mov
jbe
inc
out
jmp
add
ror
jns
movsl
leave
cli
lea
iret
push
xchg
mov
ret
jae
out
cmpsb
mov
pushl
inc
sub
mov
and
ja
inc
xor
daa
inc
inc
cmp
xor
jns
adc
add
pop
jae
fstl
add
je
negb
pop
movsl
jb
sub
cmp
mov
mov
loopne
insl
fstpt
aas
ljmp
push
jl
data16
dec
push
out
mov
jnp
add
cmpb
movl
cmp
ficoml
add
daa
xor
popa
push
add
xor
pop
scas
cmp
cmpsb
mov
dec
pusha
aas
fstps
fwait
pusha
add
ss
push
xchg
pop
test
xchg
push
push
inc
les
or
add
add
sub
push
lahf
movsb
xchg
in
shrl
loop
fisttpll
mov
popf
xchg
out
aas
jne
xor
shll
pop
jg
jo
lcall
daa
mov
inc
mov
popf
icebp
adc
cld
and
stos
or
fmul
test
sbb
fwait
mov
out
fimuls
add
stc
icebp
sub
pushf
out
and
cmpsl
in
scas
sub
xchg
into
and
mov
xorl
add
xchg
jmp
cmp
insl
dec
data16
aam
fdiv
mov
jb
adc
mov
push
xchg
es
jbe
fdivrs
bound
shl
popf
push
mov
xchg
andb
sbb
addr16
or
dec
mov
mov
out
rolb
cmpsb
pop
adc
adc
xchg
push
adc
pop
ficompl
dec
xor
sbb
out
sbb
shl
cmp
add
fmul
mov
movsb
fwait
cmp
insb
inc
fmul
cmp
sbb
xorb
sub
jge
push
sahf
nop
jns
xor
cmc
cmpsb
push
sub
sub
add
scas
jnp
sub
jl
mov
dec
cwtl
mov
xor
ficomps
or
xor
and
jmp
in
inc
jae
push
and
and
sahf
mov
psubq
imul
mov
mov
xor
push
adc
sub
mov
mov
roll
jle
push
int3
cli
jbe
xor
xchg
popf
xor
add
mov
cmp
dec
mov
cltd
add
sub
test
cmp
mov
repz
ljmp
gs
mov
outsb
add
sub
push
push
jl
push
or
mov
in
cmpsl
add
sahf
mov
pop
in
mov
push
mov
mov
xrelease
mov
rorb
cmp
mov
repz
repz
sub
cmpsb
xchg
jge
aad
hlt
aam
bnd
push
int
fwait
cmpsb
adc
outsb
icebp
les
es
jg
cs
jmp
mov
dec
push
pop
aad
shrb
add
shlb
push
jo
jmp
mov
fsubrl
clc
mov
and
mov
xor
or
imul
mov
std
push
xchg
dec
xchg
test
dec
out
bound
ss
inc
jne
imul
lcall
dec
add
jge
add
sub
mov
pushf
mov
mov
aam
inc
push
push
aam
xchg
test
xor
jae
imul
sub
loopne
inc
mov
out
mov
jp
cmp
stc
pop
mov
cltd
out
push
out
adc
lret
xor
jns
push
xchg
enter
sub
fstpt
scas
mov
inc
nop
cmpsb
test
or
push
or
jle
mov
cmp
stc
adc
nop
mov
inc
mov
mov
aam
dec
das
mov
or
pop
jno
dec
xchg
inc
je
sbb
movsb
fs
mov
pop
mov
and
inc
fidivrs
jno
sbb
les
bound
xchg
scas
aam
cmp
dec
out
out
inc
clc
insl
mov
inc
dec
aad
push
dec
popf
push
pop
in
shrl
dec
mov
mov
mov
ja
ds
cmp
cmp
adc
and
inc
xor
insl
jb
sub
inc
imul
imul
jge
insb
cwtl
icebp
push
adc
dec
movsl
inc
leave
jb
xchg
inc
push
dec
insl
inc
mov
mov
and
xchg
xchg
inc
pop
sar
push
andl
and
adc
sub
int
push
or
xchg
test
rol
loopne
subb
cld
add
cld
adc
outsl
insb
inc
popa
pop
nop
sbb
std
add
mov
js
aaa
icebp
aam
loope
insb
pusha
fwait
mov
cmp
fstpt
enter
push
inc
aas
adc
sub
or
popa
and
push
cmp
mov
fstpt
lret
jo
cwtl
movsb
out
out
lods
std
dec
out
mov
or
out
pop
dec
movsl
cmc
daa
jp
aad
adc
icebp
test
pop
movsb
push
gs
shll
push
lods
invd
pop
adc
and
rcl
ja
xor
add
sahf
aas
ja
mov
clc
jecxz
push
jns
faddp
popa
imul
loopne
out
andb
adc
xchg
add
imul
fisubs
dec
jns
cltd
pushl
sub
push
sub
iret
arpl
into
mov
and
stos
jmp
adc
xor
movsb
std
testb
fdivr
je
inc
clc
lea
xor
popa
mov
push
mov
arpl
push
mov
outsl
xchg
notl
pop
pop
ret
mov
push
out
add
inc
jecxz
xchg
sub
mov
sar
aaa
sub
lods
adc
test
gs
dec
sbb
add
and
sbb
mov
mov
pop
and
mov
add
mov
jmp
testb
pop
dec
lret
cmpl
dec
cmp
mov
cmp
inc
je
mov
dec
and
icebp
outsb
rcr
mov
or
or
adc
shlb
fdivl
fildl
mov
rorl
xor
pop
in
xchg
push
pop
addr16
jns
test
mov
arpl
jbe
aaa
or
mov
outsl
decb
pop
mov
decl
mov
jg
add
dec
movsb
fwait
xor
push
pusha
add
clc
imul
adc
adc
jae
add
jbe
dec
int
sahf
add
cli
pusha
mov
push
inc
mov
icebp
pop
imull
add
dec
ret
mov
sbb
xchg
bound
add
jle
pop
mov
outsb
push
sbb
xchg
jle
jnp
and
sbb
mov
in
sti
cmp
loope
mov
les
dec
jb
sbb
outsl
sarb
data16
pop
fdivl
add
push
mov
fstpl
mov
mov
icebp
insl
sti
mov
in
icebp
add
xor
les
push
scas
lahf
das
pop
in
jge
sbb
cmp
xchg
mov
int3
sbb
mov
sahf
mov
das
jge
push
add
insl
adc
cmpsl
arpl
dec
pop
jg
xor
cmp
and
and
fwait
aam
xor
push
mov
mov
push
sbb
lods
sbb
xchg
fmul
imul
sbb
xor
das
iret
mov
adc
inc
push
fstl
mov
jb
out
mov
or
cltd
jmp
or
les
push
fwait
scas
test
pop
imul
sti
fstpl
lds
cmpb
mov
pop
mov
jbe
inc
push
or
mov
insb
testb
jecxz
in
aas
test
mov
cmp
test
cmp
mov
out
or
pop
or
pop
jbe
mov
test
push
mov
outsb
out
pop
add
aad
jo
popa
and
cmp
dec
nop
ret
repz
or
add
push
nop
bound
push
pushf
xchg
lods
inc
sbb
push
repz
sbb
push
mov
add
loop
das
iret
test
decb
mov
clc
jae
adc
mov
negl
mov
or
fldl2t
jne
mov
dec
add
das
push
cwtl
jle
addr16
das
adc
fisubrs
hlt
and
lods
repz
fadd
mov
push
call
clc
outsl
mov
aam
add
push
pop
add
lret
jmp
std
mov
fs
pop
outsb
dec
les
mov
xor
mov
xchg
xor
out
jo
xchg
xlat
adc
jge
dec
aas
inc
mov
scas
add
dec
jb
jmp
push
cmp
adc
push
push
fidivs
adc
fdivl
sub
in
test
aas
ret
jge
out
push
dec
pop
pop
stos
cmpsl
in
push
loope
enter
mov
inc
xor
dec
ss
jle
std
rcrb
jge
mov
inc
jne
sub
add
xchg
mov
xchg
mov
adc
shrb
loop
fildll
bound
and
add
in
sub
inc
pop
xchg
adc
repz
mov
or
mov
sub
test
aaa
mov
fs
push
aaa
adc
ret
or
push
call
out
add
pop
rcr
bound
insl
push
adc
dec
cmp
cmpsb
dec
and
aad
cmp
data16
lock
cwtl
orb
les
lret
sbb
and
enter
hlt
scas
mov
pop
movsb
push
dec
imul
adc
and
inc
movsb
mov
jbe
xor
mov
test
fldenv
imul
lret
sbb
insb
imul
sub
cli
nop
push
sarb
loopne
lods
sarb
inc
in
sub
jecxz
xor
mov
dec
mov
sti
inc
sbb
xlat
sub
imul
xchg
cmp
push
lods
jne
push
dec
pusha
sub
and
jge
pop
cltd
mov
pop
and
sub
pushf
sbb
cld
adc
or
add
daa
testl
xchg
dec
movsl
pslld
cltd
mov
mov
or
mov
pop
pop
push
js
jl
cmp
notl
aas
sub
mov
and
jno
imul
mov
push
sti
aad
daa
add
les
cmc
lea
out
mov
cmp
stos
sbb
jl
out
xchg
das
xor
pop
and
mov
test
or
orb
outsl
jbe
push
and
fwait
pop
push
sub
aaa
test
mov
pop
sbb
dec
pop
arpl
cld
push
push
mov
movb
mov
add
sbb
sbb
mov
call
fs
imul
jmp
aad
pop
mov
mov
or
aas
xor
mov
pop
jno
scas
movsl
mov
into
lcall
int3
fs
dec
filds
jmp
in
insb
jl
imul
enter
sbb
sbb
inc
cmp
inc
and
xor
lods
mov
aam
mov
leave
pushl
sbbl
aam
sub
imul
repnz
jnp
sub
push
push
push
nop
inc
push
dec
flds
les
fsts
xor
mov
in
jp
mov
push
addb
cmp
dec
lods
icebp
rcrb
addr16
mov
stos
push
push
push
shl
fwait
out
xchg
mov
jb
sti
add
add
mov
or
je
popa
push
lret
mov
or
enter
fidivrs
outsb
or
add
jg
rcl
sti
mov
int3
js
push
aam
test
jns
or
adc
dec
ss
ljmp
cmpsl
dec
cmp
or
sub
cli
cwtl
jmp
aad
in
ds
inc
cmovae
std
sbb
test
dec
pushf
ja
inc
sbb
aaa
jmp
fs
mulb
mov
enter
xchg
cmp
and
xchg
xchg
cmp
vhsubpd
addr16
mov
xchg
inc
fdivrs
out
paddsw
mov
clc
jp,pt
mov
jno
xor
ljmp
fdivs
mov
pop
aam
cli
inc
popa
push
push
lock
jle
xchg
outsb
rclb
daa
mov
dec
add
push
cmp
dec
and
jno
repz
and
movsl
and
insb
push
mov
sbb
cmp
push
iret
jno
and
push
push
test
fmul
mov
or
and
dec
add
xor
mov
mov
rclb
mov
loope
fisubl
add
xchg
xchg
sub
mov
or
adc
sti
insb
mov
shrl
lahf
xor
rol
in
ret
mov
std
cmp
fcom
imul
dec
jno
fcmovne
pop
in
mov
aas
ljmp
or
enter
sbb
dec
in
sub
and
jae
repnz
or
insl
mov
movsb
push
shll
pop
push
subb
ss
jb
icebp
insl
repnz
jbe
out
subb
aad
xor
repz
nop
xor
inc
mov
jae
repnz
jle
cwtl
dec
loop
imul
pop
xchg
das
repz
xor
clc
into
xor
fadds
add
mov
pop
cmpsb
mov
add
and
ret
push
sbb
pusha
dec
cmp
std
ret
outsl
add
sti
jo
mov
shll
cld
cli
mov
add
in
das
add
pop
std
cmp
fisubrl
jno
out
mov
pop
or
sar
mul
push
lea
dec
in
jmp
and
test
sbb
stos
inc
fbstp
fisubl
pop
mov
imul
or
call
mov
jne
cmp
add
pop
jmp
lea
int3
test
push
outsb
mov
ljmp
repnz
into
js
cmc
or
push
fucomip
dec
pushf
jge
in
shll
aad
addr16
inc
mov
aaa
xor
dec
inc
push
loopne
adc
fcompl
in
rol
mov
lock
out
shll
pop
pushf
pusha
addr16
in
dec
add
negl
push
jmp
add
repz
jnp
ret
and
dec
lret
inc
xor
cld
or
mov
fidivrl
jl
sarl
std
pop
enter
insl
pop
int3
ljmp
or
pop
push
orl
in
add
aas
jecxz
xor
daa
icebp
adc
sbb
add
mov
sbb
adc
cmpsb
fldt
mov
dec
cmpsl
xor
inc
std
xor
xor
and
jecxz
push
loopne
mov
or
jne
inc
xor
mov
mov
cmp
fs
cs
jns
aam
sub
fwait
or
or
js
sbb
jne
jo
test
cmpl
mov
test
hlt
jl
rcr
in
out
loop
sbb
pop
icebp
jnp
stos
ss
mov
and
orb
test
sub
cmp
cld
or
test
cmp
xchg
adc
enter
insl
mov
pop
scas
add
jb
or
cmpsb
movsl
inc
lret
arpl
lods
ror
repnz
adc
jg
jle
scas
hlt
mov
xchg
arpl
popf
adc
mov
scas
or
ds
push
lock
cmp
pop
mov
push
sbbl
or
pop
dec
in
movsb
lds
jle
jmp
inc
je
add
push
push
lock
or
cld
addr16
pusha
add
jns
aad
inc
xor
push
mov
outsl
stos
cmpsl
pop
jecxz
fsts
jae
mov
insl
add
jb
inc
dec
inc
insb
jo
xchg
fs
jb
add
fwait
scas
lret
or
adc
lea
cmpsb
test
sbb
xchg
xor
dec
dec
shll
mov
bswap
lods
stos
ss
cld
in
mov
ss
stos
mov
sbb
adc
ss
xchg
sbb
xchg
repz
repz
adc
ja
push
jmp
fwait
les
sub
sub
in
cmc
mov
pop
imul
sahf
push
dec
mov
outsl
push
loopne
fbstp
add
nop
pop
aad
dec
movsb
xorb
jmp
in
icebp
xchg
es
es
out
inc
xor
ss
stos
pop
jecxz
scas
shl
jne
and
dec
mov
push
dec
mov
pop
bound
cs
subb
xor
lcall
pop
jle
mov
iret
mov
add
lahf
pusha
sbb
loope
mov
jle
xchg
adc
sbb
pop
fisubrl
cli
lock
test
js
jns
sbb
push
adc
mov
es
jnp
inc
pop
and
inc
jl
jb
lcall
or
inc
jae
lock
pushf
jmp
les
lret
inc
inc
cmp
cmp
into
gs
jmp
mov
sub
push
pusha
popa
jne
mov
ja
vdivss
js
xor
push
mov
mov
jnp
lcall
cmc
repnz
sub
movsl
xchg
jg
addr16
dec
xor
jb
xchg
es
xor
bound
dec
inc
insb
out
scas
dec
in
aaa
int
cli
add
or
cmp
in
inc
movsb
push
aam
mov
shl
sbb
les
dec
adc
mov
mov
jge
pop
addr16
xchg
mov
or
out
icebp
daa
sub
mov
inc
lahf
lahf
inc
jnp
push
mov
daa
int
jp
ss
xor
xor
or
pop
mov
scas
add
fs
stos
in
pop
jnp
insl
sub
or
mov
pop
push
jo
jle
xchg
or
cli
jg
loopne
aas
xchg
add
mov
pusha
and
mov
jno
fcompl
aas
addr16
mov
adc
adc
je
sbb
out
sub
jns
and
xchg
xor
adc
xor
sbb
adc
xor
sub
in
and
pop
out
jmp
pop
mov
mov
xor
js
data16
mov
jne
js
fmul
and
pop
jge
adc
mov
stc
push
jns
inc
push
cli
mov
cmpsb
mov
psubsw
ret
inc
push
jecxz
pop
inc
lock
add
sbb
jg
pop
ret
rcrb
in
loope
loope,pt
mov
or
dec
fdivrl
jp
push
mov
cwtl
lods
or
es
cmc
jmp
stos
or
das
imul
test
dec
pusha
push
jle
xor
js
cmp
lcall
inc
dec
outsb
mov
inc
push
mov
sarl
xchg
mov
adc
xchg
dec
inc
sahf
movsl
and
xor
aad
aas
jle
loope
mov
sub
push
mov
das
add
jge
psubd
fwait
outsb
dec
mov
add
jecxz
outsb
mov
sub
sub
icebp
jne
adc
pop
js
cmpb
xlat
test
lret
mov
les
fsubrl
ret
and
adc
enter
shll
ss
mov
mov
sbb
dec
in
enter
mov
mov
jns
icebp
fwait
pop
jo
fbstp
daa
insb
or
jmp
incl
lods
ja
insl
je
xor
mov
cmp
or
fnstenv
insl
dec
lahf
pmaddwd
shlb
fsubr
cmpsl
push
lea
adcl
cwtl
pushl
jbe
insl
push
sub
out
push
stc
std
adc
add
cmp
ljmp
mov
push
add
mov
push
jle
cmp
aad
push
xor
xor
in
imul
sbb
in
outsl
aad
sub
mov
fcoms
data16
adc
cmp
lahf
jmp
cmp
jmp
idivb
fs
push
fiadds
adc
shl
add
ss
xlat
ficoml
aad
inc
sbb
cmp
stc
inc
in
cmc
jle
push
fwait
jns
fdivr
int
push
cwtl
adc
xor
mov
pop
les
shlb
add
and
jecxz
add
in
jle
dec
pop
dec
jge
mov
add
fldt
push
dec
mov
and
inc
jle
xor
lretw
cmp
ret
dec
adc
mov
fwait
cli
loopne
mov
xlat
aam
mul
shll
cmp
sahf
add
stos
dec
repnz
mov
clc
dec
call
push
mov
enter
xlat
lret
shlb
sub
scas
je
leave
outsb
jno
mov
jbe
sbb
ljmp
das
inc
inc
mov
cs
push
hlt
into
jbe
and
xchg
mov
mov
or
mov
cmpsb
dec
addr16
xor
loopne
cwtl
fs
test
fisubrs
adc
dec
hlt
inc
cmp
sub
sub
sub
mov
lret
add
jbe
es
jecxz
adc
cmp
jl
mov
loope
shlb
jne
popf
ja
sub
fsubs
pop
dec
adc
stos
pop
ss
jns
dec
or
jo
pop
adc
or
xor
addb
inc
mov
xchg
fbld
jbe
fsqrt
and
orb
add
mov
xchg
adc
data16
adc
imul
in
pop
sbb
loop
push
mov
push
insb
xor
mov
mov
or
add
shlb
adcl
rcr
insl
jmp
loope
ljmp
loopne
pop
lahf
adc
out
popl
negb
mov
dec
or
ret
mov
aam
fisttpl
pop
andb
cmpsl
mov
mov
mov
add
mov
cmpsl
popa
xor
and
mov
stos
adc
je
fwait
xor
leave
mov
lret
mov
mov
out
cmc
std
std
pop
mov
in
dec
push
mov
inc
cwtl
mov
arpl
push
jno
jge
insl
iret
mov
je
js
lcall
stos
insl
clc
ss
fs
repnz
and
mov
stos
pop
and
sahf
push
outsl
jae
scas
inc
stos
jae,pn
in
lret
sbb
out
dec
push
loopne
ret
mov
and
mov
cmc
jae
push
push
push
inc
cmp
inc
and
negb
xchg
loop
iret
cmp
pusha
lret
scas
mov
mov
fisttpll
clc
xor
mov
daa
cmpsb
mov
dec
in
push
bound
repz
out
cmc
jns
out
fldt
icebp
add
pop
sbb
test
xchg
mov
push
xor
movsl
enter
mov
dec
call
push
test
inc
pop
xchg
dec
inc
and
ret
xor
dec
lahf
add
cmpb
stc
sub
es
icebp
dec
rcll
loopne
cld
or
dec
dec
jge
and
inc
mov
lds
dec
mov
add
push
je
call
outsb
mov
popa
adc
push
cwtl
sub
adc
ds
out
xchg
ss
clc
les
mov
arpl
loope
inc
cmpsb
and
sbb
xchg
sub
xlat
loopne
aam
mov
sbb
dec
jae
sub
rol
push
btc
xchg
sbb
gs
fucom
dec
lahf
test
cwtl
lret
mov
xor
imulb
js
or
ret
lret
adc
subl
pop
js
xor
shl
lahf
leave
into
cld
xchg
dec
adc
xor
psadbw
or
push
sbb
arpl
test
addr16
jl
inc
ffreep
je
fsubrs
mov
repz
or
imul
cmpsl
mov
mov
aas
call
rcr
roll
mov
dec
arpl
adc
nop
push
outsl
sti
enter
cmp
mov
ret
sbb
cs
arpl
jg
mov
mov
ds
mov
pop
ja
inc
adc
imul
hlt
xor
aaa
daa
ret
out
mov
jl
jb
pop
rcrb
dec
lock
repnz
js
jle
dec
sbb
push
aad
pop
mov
insl
sbb
adc
outsb
jo
mov
inc
pop
and
mov
cltd
pop
xchg
scas
scas
movsb
sub
mov
test
dec
pop
push
sub
js
stc
divb
iret
push
aaa
stos
sbb
cmp
jno
ljmp
jg
mov
mov
les
int
push
cmpb
adc
aad
in
push
outsl
movsb
test
imul
cltd
imul
inc
ficompl
shll
xchg
shll
xlat
ficoml
mov
xchg
xor
jo
jp
outsl
daa
std
psubw
inc
in
lret
dec
ja
sub
repz
mov
push
jge
scas
mov
jno
xchg
jecxz
popa
push
hlt
test
dec
inc
mov
loope
mov
dec
adc
cld
xchg
inc
jle
jnp
scas
inc
scas
pushf
add
pop
pop
mov
in
pushf
cmp
rorl
nop
insb
push
int3
push
icebp
loopne
popa
mov
jb
repz
les
xchg
pusha
inc
test
dec
mov
push
sub
push
or
sub
repz
or
je
push
or
lock
int
adc
pop
pop
pop
mov
xchg
pop
test
jl
inc
shl
fs
cli
je
ret
fistps
shl
sub
andl
imul
push
or
loopne
pop
lea
xor
pop
lds
cmp
sub
jbe
inc
iret
inc
xchg
dec
xchg
push
ja
jmp
nop
popa
sub
pop
je
ljmp
xchg
loopne
cmp
dec
ljmp
mov
and
mov
repnz
lahf
pop
gs
mov
dec
xchg
xchg
jns
rcrb
sub
sbb
test
sbb
jp
shl
addr16
icebp
mov
rorl
lea
repnz
xor
dec
and
lods
xchg
lahf
loope
mov
stos
xlat
pop
inc
test
imul
les
mov
mov
ds
adc
or
cmp
outsl
inc
push
xchg
sub
sbb
test
nop
mov
mov
sub
js
nop
imul
jge
push
cltd
ret
icebp
jbe
pop
notb
insl
fs
outsl
sub
mov
popa
js
cmp
loopne
fmuls
add
ror
negl
sbb
pop
mov
xchg
jle
xor
aas
int
mov
ret
std
cwtl
fdivs
add
fs
mov
je
mov
pop
push
cmpsl
mov
scas
lods
hlt
mov
movsl
xchg
inc
imul
sub
mov
mov
adc
sub
aad
push
xlat
cmp
sub
sub
pop
pusha
fst
lahf
std
push
jnp
push
pop
mov
push
nop
or
xor
inc
push
or
xor
mov
jp
in
gs
xchg
mov
gs
ret
adc
lods
movl
in
add
stc
pop
mov
mov
popa
mov
in
pop
int
cmp
mov
out
gs
imul
or
popa
jl
lods
add
insl
pop
cmc
inc
push
rorl
add
dec
add
js
cmp
popa
lcall
rorl
push
add
in
ja
mov
or
imul
lret
in
clc
add
inc
cs
clc
mov
sub
mov
in
adcl
cmp
xchg
or
pop
jmp
xor
sbb
sahf
dec
xchg
scas
fidivrs
mov
mov
pop
test
inc
dec
loopne
sbb
loope
hlt
xor
and
adc
mov
scas
lods
das
inc
xor
or
popa
rclb
ret
bound
shl
push
sbb
jae
xchg
push
xchg
fwait
aas
mov
lahf
mov
nop
jg
lea
jge
jmp
outsl
xchg
sub
lcall
out
pop
rcr
sub
stos
cmovl
lods
ljmp
or
push
mov
pop
add
pop
jnp
inc
stc
jae
push
sbbl
movsl
stos
in
add
aaa
pop
sub
out
mov
in
sbb
mov
cmp
popf
mov
out
in
dec
jge
in
mov
ds
mov
rorl
jnp
mov
lret
mov
cmc
push
insb
mov
dec
icebp
adcl
in
sub
das
ret
lds
jmp
js
sub
lahf
jecxz
mov
xchg
movsl
test
pusha
xor
and
jl
add
lods
inc
aas
sbb
fidivs
sbb
arpl
mov
cmp
leave
test
std
cwtl
div
jmp
mov
and
aas
cmp
in
int3
loopne
adc
js
or
pusha
and
lea
fists
xor
pop
lea
fsubl
hlt
cmpsl
ljmp
jb
movl
in
mov
clc
int
jmp
sbb
sbb
imul
std
inc
sub
or
rorl
fidivs
jl
mov
cwtl
fsubp
pop
test
icebp
or
mov
pop
and
inc
xlat
pop
cmp
xchg
inc
push
sbb
ss
sub
mov
sti
mov
roll
push
fistpll
jl
adc
jb
lret
xor
loop,pt
out
mov
jecxz
ss
int
sbb
pop
mov
negl
mov
mov
icebp
mov
push
xchg
xchg
incl
rcrl
jl
mov
mov
cli
push
cltd
push
xchg
inc
pushf
xor
cli
stos
xor
jns
add
inc
jbe
into
pop
jnp
inc
dec
sub
pop
sub
mov
xlat
stos
sahf
scas
cmp
lahf
test
fucom
jbe
fstps
in
mov
mov
out
arpl
adc
in
sbb
es
out
push
or
movsl
rolb
and
pop
les
fdivrs
cwtl
cmpsb
mov
pop
ret
bnd
sub
push
mov
scas
repz
and
push
sub
cmpl
mov
mov
sub
and
stc
fdivr
pop
cs
arpl
aaa
mov
mov
jg
movsb
mov
lcall
add
in
aam
xlat
sbb
dec
mov
mov
jo
push
push
cmp
sub
push
pop
rclb
orb
call
hlt
dec
push
arpl
push
mov
add
in
inc
pop
data16
mov
shrb
xor
pop
cmpb
mov
add
cmp
aad
push
add
fstpl
sbb
dec
mov
and
pop
shll
fisubl
sbb
ljmp
sbb
imul
pop
or
sub
mov
das
jecxz
jl
ljmp
pop
push
add
push
adc
pop
pop
cmp
mov
aam
es
xor
into
xchg
push
mov
or
arpl
jmp
imul
mov
shrb
mov
cmp
push
out
pop
cmp
xchg
sti
push
xchg
lods
inc
call
cmp
imul
insb
jb
adc
in
stos
mov
or
adcl
mov
cmp
sbb
jecxz
add
mov
and
xor
shll
cwtl
push
ljmp
xor
push
into
mov
and
sbb
and
pop
xor
in
mov
cmpsb
outsl
mov
sbb
test
shlb
fstpl
mov
jmp
stos
add
imul
int
cld
cmp
xor
fmull
movsl
xor
loope
test
call
jmp
sarl
push
cmpsl
pop
jg
daa
xchg
cmp
call
xor
mov
pusha
mov
xor
pop
mov
mov
xchg
adc
jae
pop
das
adc
adc
or
pop
sbb
notb
in
inc
cmp
lods
hlt
sbb
adc
nop
fsts
sub
jle
stos
cmp
out
mov
int3
ror
push
dec
rolb
sub
popf
cltd
push
cmp
xchg
nop
nop
stos
push
jle
adc
dec
or
mov
repz
mov
sbb
sub
cld
jne
sbb
sub
jmp
bound
jmp
xlat
ret
test
mov
in
daa
xchg
inc
add
mov
xchg
cs
adcl
pop
cmc
sub
or
call
push
xchg
dec
imul
push
lcall
mov
das
inc
rorl
push
fists
dec
mov
cld
pop
mov
idivb
ret
stos
fldcw
adc
ds
jmp
push
jbe
sub
lock
movsl
out
xor
or
lock
xor
lods
dec
lcall
popf
repnz
pop
and
cli
xor
adc
jge
aad
or
ljmp
jl
fs
aam
xchg
adc
jo
nop
adc
subb
insl
jg
jl
mov
cltd
popf
inc
push
xlat
or
adc
mov
xchg
cmp
sub
push
bound
imul
inc
in
xchg
rclb
js
xor
mov
sti
aas
jmp
push
ffree
out
sub
cmpsl
mov
mov
ret
iret
lahf
aaa
jo
mov
cmpsl
dec
int
xor
xor
dec
lock
xorb
faddl
pop
call
xor
iret
cld
out
pop
jmp
mov
loope
mov
cmp
cmpsb
jbe
xor
inc
mov
and
cli
or
rorb
dec
and
sub
cltd
rorb
daa
mov
mov
push
movsl
push
mov
arpl
push
lods
pop
jne
jo
mov
lcall
fs
imulb
pop
push
lock
and
adc
inc
movsb
mov
jns
iret
lds
mov
mov
or
jmp
inc
pop
repz
or
pop
lret
fimull
xchg
inc
and
dec
jp
aad
lock
xchg
ljmp
xchg
xchg
pushf
or
inc
inc
js
mov
push
mov
xchg
mov
lahf
fidivrs
pop
push
loope
xchg
and
mov
xchg
cmpsl
cmp
movsl
ljmp
imul
hlt
ret
sarb
adc
sub
in
jnp
aas
rcrl
adc
pop
cmpsl
cmp
xchg
and
je
xor
fs
mov
sub
jae
jae
mov
sbb
mov
push
add
add
xchg
ss
rclb
push
mov
xchg
and
lcall
icebp
ss
scas
fstps
xchg
arpl
pop
or
das
pop
rcrb
xchg
pop
sbb
les
loop
movsl
stc
pop
and
and
movsb
sub
adc
pop
sub
xor
xchg
ds
jnp
scas
stos
lahf
mov
dec
or
inc
pop
call
and
sti
cmp
je
adc
mov
jno
shll
sbb
pop
push
lahf
cmp
pop
pop
xlat
and
sbb
or
add
mov
jo
cmp
cmpsl
mov
imul
xchg
enter
rcl
xchg
xchg
or
cli
xchg
xchg
movsb
or
xor
lods
add
ja
out
pop
ret
and
out
imul
mov
xchg
imul
mov
or
je
lret
adc
sbb
or
push
js
mov
and
mov
ljmp
imul
xchg
test
mov
xchg
jno
pop
popl
mov
xor
je
push
dec
jnp
cwtl
rolb
lods
cltd
jecxz
sarb
or
sti
sti
out
mov
push
sbb
and
xor
sbb
cmpsb
into
es
inc
pop
sub
dec
loope
ficompl
jle
aad
push
pop
pop
int
js
and
mov
xchg
mov
add
inc
cmc
mov
dec
rcl
add
dec
mov
push
xor
fisubl
popa
mov
push
testl
push
test
je
fs
enter
call
into
jno
and
or
push
push
cld
cmpsb
movsl
and
out
into
pushf
adc
test
and
and
out
mov
push
cs
out
sti
or
add
hlt
ja
inc
popa
push
imul
mov
mov
clc
ret
cmp
daa
inc
call
rcll
add
xchg
mov
mov
cld
lea
push
jmp
inc
mov
xor
mov
arpl
mov
into
xor
cld
outsb
pop
jmp
xlat
rol
icebp
cmp
les
mov
sbb
lret
and
jo
sbb
movb
sub
xor
jne
rol
leave
out
push
cld
out
mov
lea
adc
push
jb
shr
xchg
mov
and
int
popf
mov
imul
add
inc
lods
stos
loop
mov
sbb
cwtl
mov
test
mov
or
mov
nop
sbb
arpl
pop
push
sub
jmp
stc
popa
test
mov
ja
add
shl
jns
scas
repnz
mov
imul
mov
leave
cli
cli
add
mov
enter
sub
loop
xchg
test
movsb
push
add
and
ficompl
add
cmp
jns
push
clc
mov
or
lahf
sub
das
das
xor
stc
jg
jp
popf
mov
mov
and
push
xchg
dec
das
inc
in
js
add
mov
leave
jecxz
int3
xchg
clc
repnz
call
ret
pop
xchg
sti
cld
das
sti
xchg
or
ljmp
push
test
mov
cmpsb
add
add
xor
gs
cs
xchg
inc
sti
and
mov
add
movsb
out
inc
scas
pop
mov
mov
mov
xchg
mov
fsubr
or
sbbb
adc
xchg
fs
es
mov
add
mov
lds
mov
clc
loop
loop
hlt
sbb
int3
cmpsb
xchg
push
pop
cmp
insl
lret
test
sbb
xlat
ret
leave
push
or
mov
mov
pusha
loopne
mov
push
cmp
and
outsl
cltd
add
lods
sbb
sub
dec
fisubs
insb
sbb
xlat
jge
dec
dec
in
cmp
adc
jecxz
or
lods
outsb
dec
pop
sub
test
push
adc
out
push
inc
xchg
jmp
test
sub
stos
std
les
push
lea
movsl
adc
push
movsb
sbb
jge
inc
or
xchg
repz
or
rcll
repnz
outsb
movsl
or
ds
fcomip
outsb
mov
cld
bound
add
sub
inc
rcrb
pop
mov
mov
mov
mov
dec
sbb
push
mov
mov
mov
out
fadds
sbb
rorb
ret
push
cltd
sub
or
hlt
xchg
mov
mov
ficoml
cwtl
push
or
les
fidivl
xor
sub
xchg
pop
mov
leave
test
imul
jmp
mov
sbb
fistps
add
dec
pop
push
stos
cmp
push
xchg
mov
sbb
mov
and
jo
mov
ss
into
js
hlt
sbb
cmpsl
stos
pop
into
mov
repz
or
cmc
sbb
add
inc
xchg
fwait
repnz
mov
cmp
rcrb
xor
add
mov
push
gs
pop
iret
cmpsb
cmp
dec
adc
jns
negl
pop
lahf
adc
dec
adc
mov
or
jns
mov
and
pop
cmp
sub
push
in
popa
mov
outsb
jg
push
test
ficompl
adc
xchg
inc
inc
in
ja
cmp
or
fs
push
cmp
xchg
int3
rcll
std
add
sbb
sub
or
jge
inc
cmpsl
sbb
cld
push
pop
jmp
dec
adc
add
push
pop
jnp
icebp
imul
divb
lahf
inc
jmp
inc
pop
cmp
mov
mov
jp
daa
test
mov
push
cmpsb
rcll
outsl
nop
mov
sub
ljmp
insb
movsb
rcrb
movsb
fwait
xchg
jne
decl
push
sub
sbb
fs
jge
stos
arpl
movsl
dec
adc
push
cmc
lock
loop
enter
orl
sub
in
gs
sub
add
jmp
fisttpll
movsb
test
fldl
or
cmpsb
fadd
push
test
cmp
sub
push
lock
mov
jle
sub
int
repnz
mov
push
sub
pushf
cmp
xchg
push
sarb
pop
xchg
loopne
mov
or
jns
mov
movsl
mov
cmp
shrl
cmp
ror
call
icebp
cmp
lcall
leave
pop
fcmovnb
inc
ljmp
adc
add
addr16
xchg
push
jecxz
aas
sub
ljmp
mov
mov
push
jecxz
jno
stos
icebp
call
dec
sbb
faddl
repnz
push
outsb
dec
insl
punpcklbw
lea
xor
jl
add
adc
ja
xchg
test
cltd
mov
shl
push
out
mov
dec
inc
sub
and
sub
arpl
mull
cmp
mov
pop
cli
fsubl
or
adc
pop
pusha
xadd
stc
inc
cmp
loopne
icebp
stos
out
adcl
push
pop
xor
cmp
mov
mov
adc
add
dec
icebp
pop
mov
push
test
push
mov
jae
aam
mov
mov
dec
andb
lock
lcall
lret
frstor
push
in
pop
in
mov
es
add
lret
mov
cmc
or
add
add
cmp
aam
fsubrl
cs
imul
cmp
jae
std
iret
or
jp
pop
cmp
movsb
mov
movsb
pop
int3
add
mov
xorb
push
and
adcb
xchg
in
les
jge
lods
popa
pop
lds
imul
mov
and
or
cmp
insl
clc
mov
shlb
outsb
jge
fwait
pop
lods
loopne
sub
fbld
out
lahf
loope
sysret
xchg
es
mov
adc
aad
mov
mov
bound
cltd
mov
jg
hlt
lods
dec
mov
add
push
jb
cmp
jp
push
mov
test
push
sbb
mov
gs
fcmovnu
jle
and
pop
sub
in
mov
movsb
sbb
xchg
jle
inc
mov
mov
xchg
shll
imull
pop
xchg
call
jns
jl
out
mov
lret
xlat
mov
test
push
imul
movsb
mov
pop
dec
loope
pop
cwtl
cs
or
adc
mov
pop
insl
or
mov
pop
outsb
mov
jecxz
divb
mov
les
imul
cmpl
insl
pop
nop
ror
add
test
push
movsb
sahf
fcomps
sbb
clc
rcl
mov
sbb
pushf
mov
in
or
out
dec
gs
cmp
mov
push
push
sbb
dec
daa
imul
aam
test
std
mov
into
jns
cmpsb
add
push
mov
sub
sbb
inc
sbb
add
cld
jae
jp
test
pop
sub
xor
sbb
dec
gs
out
mov
sbb
iret
cmp
sbb
push
daa
int3
mov
shr
daa
data16
inc
or
testl
push
arpl
sbb
add
iret
in
into
mulb
mov
fcomp
mov
lock
mov
popf
or
adc
dec
jp
stos
and
adc
push
mov
pop
sub
cmpsb
push
cmpsb
inc
jp
inc
pop
inc
jae
fsub
xchg
lahf
pop
popl
sbbb
fisttpl
jle
dec
std
push
and
pop
rorl
jecxz
cmpl
jle
mov
ja
xchg
mov
addr16
outsl
mov
mov
les
ror
sbb
lods
sbb
cmp
adc
icebp
cmp
inc
clc
inc
pusha
or
mov
and
icebp
aaa
adc
int
mov
mov
jecxz
push
or
ljmp
sub
or
cmpsb
and
testb
dec
mov
mov
fimull
xlat
cli
cmp
adc
dec
lcall
aas
into
push
or
repnz
or
add
xchg
jae
ja
ret
cmp
pop
call
ja
adc
jecxz
dec
out
loope
jge
pop
inc
sub
ja
xchg
inc
lcall
sbb
jg
stos
loop
jecxz
lret
push
dec
lret
lahf
pop
jmp
out
clc
add
andb
dec
push
push
fmull
insb
les
std
lock
rol
adc
lods
mov
mov
push
mov
ds
loop
pusha
bnd
and
xchg
sbb
xchg
cmp
in
pusha
dec
and
jmp
and
loop
pop
loope
add
mov
out
mov
inc
popf
jp
add
sub
lahf
cmp
clc
les
fs
pandn
in
mov
or
imul
bound
sub
dec
or
sub
jecxz
lock
mov
sti
or
pop
pop
andl
imul
mov
push
and
lds
dec
sub
add
aaa
mov
sarb
mov
stc
repnz
sub
or
pusha
sub
xchg
in
jb
sub
imulb
ljmp
push
inc
jmp
sbb
jg
mov
repnz
push
mov
mov
xchg
dec
lahf
aaa
dec
mov
in
mov
stos
adc
jbe
cmpsb
lahf
into
and
adc
pop
outsb
xor
mov
cli
int
icebp
clc
pop
cmp
mov
jae
aad
cmpsl
mov
call
dec
xchg
xor
dec
jo
add
push
jp
rol
popa
outsl
and
ja
sbb
and
loope
xchg
out
xor
mov
sbb
lcall
movsb
cvtps2pd
adc
or
xor
stc
into
out
cmc
aas
fdivl
mov
jbe
and
cmp
mov
mov
iret
xor
mov
or
inc
lock
scas
inc
mov
mov
dec
out
push
add
daa
and
mov
push
addl
ficoms
inc
mov
xchg
jns
push
push
in
xchg
xor
mov
inc
cmpsl
mov
testl
add
loope
mov
inc
loope
in
fdivrl
arpl
mov
imul
dec
and
add
stos
scas
lcall
push
inc
in
adc
jb
test
jno
and
cmp
sbb
scas
std
fildl
mov
les
mov
repz
xor
mov
push
pop
and
stos
lret
push
out
adc
sbb
xor
popa
jecxz
leave
and
dec
not
cltd
push
pop
add
insl
mov
out
divb
mov
or
xor
pop
mov
repz
inc
stc
xchg
xchg
aad
in
fadds
movsl
scas
xor
es
cmpsb
mov
cld
mov
cwtl
jne
jecxz
pop
jno
stos
push
xor
jg
frstor
jae
test
mov
xchg
cltd
out
jns
int
mov
sbb
lret
add
fidivs
lcall
test
inc
xchg
aad
fs
adc
jecxz
or
arpl
jecxz
cmc
imulb
in
dec
pop
pusha
mov
in
or
arpl
mov
xchg
mov
cmc
or
fs
lcall
cli
enter
ljmp
xchg
and
mov
or
jle
andb
jae
add
rorl
sub
sti
outsb
xor
nop
and
xor
push
fpatan
aaa
adc
lret
fcom
fnsave
sbb
and
jo
xchg
ficoml
xor
sti
scas
imul
pop
dec
dec
ficomps
stos
dec
inc
adc
popa
mov
add
je
sub
in
into
mov
insb
jno
push
popf
dec
ficompl
mov
pop
neg
dec
das
xor
hlt
outsb
int
lea
je
add
out
js
or
fs
call
jo
insl
mov
aad
in
loop
push
xchg
and
mov
xor
seta
push
cmp
add
jnp
and
repz
sbb
xor
test
or
int
insb
mov
xor
xchg
jp
ficomps
lret
aad
push
loope
fwait
jbe
fs
pop
inc
pop
mov
repnz
or
in
fadds
shr
jg
sbb
xchg
sbb
mov
ret
mov
adc
movsb
mov
fimuls
stos
jno
sbb
lods
rep
aaa
rcrl
iret
jmp
insl
shlb
pop
lret
orb
cmp
mov
mov
fdivrl
addr16
jns
sbb
test
iret
cmp
jmp
js
fldt
xor
and
mov
jb
mov
xorb
pop
mov
add
mov
dec
lods
stos
dec
jl
jmp
adc
popa
aad
outsb
test
je
cmp
jle
or
loop
ror
pop
push
lcall
adc
push
add
movsl
mov
mov
sarb
imul
ss
loope
jl
in
dec
gs
je
divb
mov
mov
xor
scas
clc
xchg
push
jns
leave
push
mov
test
xchg
lods
shll
add
xchg
call
mov
push
push
push
out
sbb
sbb
out
mov
add
in
imul
mov
mov
gs
ds
cli
decb
sbb
sub
mov
ss
cmp
push
sbbb
push
cmp
adc
in
cmp
xchg
mov
inc
xor
mov
lea
dec
dec
mov
fisubrs
xlat
gs
movsb
cmp
dec
inc
add
insb
xor
stc
inc
mov
add
jg
aas
push
fsubrl
bound
sub
std
jno
xchg
mov
dec
pop
inc
dec
or
stc
xorl
xor
or
pushf
sub
xor
inc
adc
lods
fs
lret
mov
or
ret
cmpsb
xchg
or
push
int3
hlt
addr16
mov
xor
push
mov
mov
gs
repz
cmp
cmp
pop
jecxz
popa
push
cli
mov
jb
dec
repz
jne
movsb
movsl
pop
mov
pop
ret
xchg
stc
sbb
fstpt
mov
aas
loop
pop
mov
sub
mov
mov
movsb
lret
test
fsubs
adc
mov
xor
xchg
sbb
adc
sub
rcrb
orl
xchg
ja
fbstp
mov
subb
xchg
add
and
pop
inc
cmp
dec
lds
jo
jmp
aad
fists
inc
sar
and
mov
xchg
cwtl
adc
dec
sarl
and
js
dec
icebp
pop
iret
hlt
adc
cmpsl
pop
xor
inc
out
outsl
inc
cwtl
cld
scas
mov
in
adc
loopne
xor
jnp
insb
cmp
ret
enter
dec
dec
inc
aad
mov
mov
fwait
ret
ds
in
orl
push
or
sub
mov
pop
inc
cmc
xor
push
lods
push
stos
mov
in
push
jl
addb
push
popf
pusha
jl
jo
and
dec
mov
jno
fmulp
pop
lahf
jge
subl
ss
push
xchg
pop
pop
push
sub
sti
int3
pop
nop
and
xor
lds
pop
aad
pop
jae
outsb
adc
rol
push
pop
and
mov
xchg
and
cld
sub
or
xchg
cli
out
adc
or
push
add
mov
mov
and
inc
mov
mov
pop
xchg
fiaddl
sub
push
andb
fcmovnu
mov
cmc
adcl
add
sub
in
loopne
jg
or
and
jecxz
out
cltd
inc
push
dec
lcall
cmp
or
mov
shll
jae
cmp
mov
jge
xor
out
ljmp
xchg
pop
aam
jge
mov
sub
sub
xorb
inc
cmp
orl
and
inc
and
mov
jbe
pop
sub
inc
mov
and
out
cwtl
xchg
push
push
hlt
imull
adc
popa
adc
std
mov
lcall
mov
add
mov
push
push
les
and
lahf
rclb
fnstenv
sub
add
mov
std
test
dec
call
mov
sar
out
sbb
jnp
sub
xchg
jns
jmp
sbbl
je
scas
xchg
or
xor
xor
and
mov
aas
inc
pop
mov
adc
pushf
stos
or
pop
sti
pop
push
dec
adc
or
sbb
jo
and
int
movsl
add
imul
rcr
cmp
rcrl
or
and
imul
mov
ds
stos
lea
cmp
xchg
cmp
cmpsb
out
push
xchg
push
movsl
out
dec
mov
mov
mov
mov
jle
inc
pop
xchg
push
cmc
aas
insb
clc
mov
xchg
jge
or
scas
xor
pop
jnp
call
mov
jae
xchg
pop
loop
push
rcrb
je
test
sub
insl
xor
dec
popa
pop
sbb
or
out
popf
push
int
dec
mov
jp
sub
cmp
push
push
sub
jl
std
lods
repz
cld
popa
cld
pop
out
dec
ljmp
sbb
xor
jp
cs
mov
sti
insl
scas
repz
leave
xlat
imul
mov
adc
movsl
sbb
cmp
ss
decl
repz
dec
rclb
popa
push
or
repz
arpl
movsl
inc
push
or
sbb
push
aas
pushfw
xchg
ret
add
lcall
xor
and
mov
ljmp
aad
rcl
sarl
xchg
add
out
jne
push
mov
lock
mov
add
test
pop
xchg
inc
jle
pop
jne
mov
cmp
inc
mov
sbb
cltd
loope
push
and
jno
je
pop
movsl
push
mov
cwtl
cltd
push
ja
push
add
or
ret
inc
and
cmp
dec
jg
ljmp
call
jl
or
testb
mov
in
loopne
cmp
push
int
jo
cmp
push
mull
cmp
sub
lock
sub
or
ljmp
and
insb
adc
mov
insb
or
xchg
and
mov
mov
enter
adcb
jecxz
fs
lods
cmp
dec
sbb
xor
call
lea
sbb
pop
leave
push
or
jge
cli
pop
fldcw
gs
or
lods
aaa
and
xchg
dec
test
add
cmc
inc
mov
inc
dec
and
scas
push
pop
xchg
cmp
xor
nop
mov
insb
xor
mov
push
mov
and
lds
imul
dec
arpl
das
jbe
inc
in
mov
sub
int3
xor
xor
aas
push
xchg
cmp
mov
insb
or
cmpsl
aad
dec
dec
daa
leave
add
add
mov
cwtl
jl
mov
mov
mov
dec
shll
mov
testb
mov
sub
ja
jae
lahf
fsubl
mov
cs
sub
cmpsb
sbb
lds
call
icebp
stos
notl
cltd
nop
dec
mov
mov
mov
and
pop
loope
ret
in
adc
push
test
jno
int
scas
xor
daa
cmp
jge
mov
bnd
pop
ret
jle
pop
fs
fucom
push
mov
push
inc
xor
rcr
xchg
adc
mov
iret
fildll
aam
pop
xchg
jne
inc
or
in
or
cltd
sub
js
arpl
sub
jmp
or
sahf
in
icebp
lods
lcall
dec
jle
and
fisubrl
movsb
fisubs
or
jmp
adc
and
dec
shl
stos
push
sbb
jnp
adc
cmpsl
jnp
pop
fldcw
adc
mov
mov
push
push
ja
lods
adc
gs
push
out
lahf
das
jg
pop
testb
cmp
pop
inc
push
enter
loop
jnp
mov
cmp
data16
jae
push
cmp
jmp
or
add
iret
or
xor
add
fwait
pop
scas
xchg
dec
rcl
cmp
pop
filds
jbe
push
lds
addl
cmp
jl
mov
clc
dec
inc
cmp
sbb
ret
iret
xchg
push
adc
sub
mov
in
push
in
nop
addl
mov
inc
lods
in
adc
shrl
std
nop
xor
outsl
pop
enter
pusha
cs
dec
insl
ljmp
sub
in
out
mov
cld
jmp
mov
sub
inc
jno
sub
inc
ja
jne
mov
or
mov
cld
daa
cwtl
xchg
sub
inc
adc
inc
rorb
fwait
adcl
ljmp
fcmovb
and
in
mov
int3
aaa
pop
cld
mov
loopne
aas
or
add
sbb
stc
push
arpl
jge
dec
mov
mov
cmp
inc
andl
pop
sbb
sbb
clc
popa
pop
aaa
jae
es
pop
mov
and
or
sub
setp
mov
push
test
xchg
mov
dec
jmp
pushf
fimull
inc
jp
icebp
xchg
in
mov
jo
lret
dec
pop
xchg
pop
inc
push
jbe
cmp
ret
sub
push
xorl
jp
sti
and
push
xlat
jp
jne
in
jg
aaa
cmp
push
pop
outsl
and
int
lahf
adc
adc
ja
sbb
shll
divb
std
mov
inc
cltd
stos
imul
jmp
cmp
out
or
rorb
xor
lcall
faddl
ds
in
jo
sbb
cmp
adc
sbb
push
repz
dec
rorb
push
jno
cmp
dec
sub
mov
mov
aam
call
inc
mov
int3
xor
out
jl
lods
mov
jo
into
jp
inc
push
push
ret
xor
jae
cltd
das
outsb
out
cmp
xor
test
dec
insb
xlat
xor
adc
lret
les
sbb
lcall
fcmovb
test
test
lcall
les
xor
int
bnd
push
out
dec
ljmp
loope
data16
shll
jo
push
sub
int3
sub
push
pop
repz
mov
adc
addb
stos
icebp
enter
inc
xchg
out
shll
pop
mov
adc
lret
mov
xor
inc
cmpsl
and
and
inc
cwtl
out
jp
add
sbb
add
aam
pop
cmpsb
add
inc
push
jecxz
mov
mov
shlb
mov
repnz
mov
pop
jmp
sbb
in
push
movl
mov
mov
xor
out
cli
and
xchg
pop
mov
je
stc
fdivrp
inc
cwtl
shrl
inc
adc
clc
xor
fs
hlt
mov
and
ss
lea
pop
pop
cwtl
xor
xor
mov
scas
out
mov
dec
sbb
lret
movsb
sub
and
mov
mov
xor
sub
push
rorl
push
sub
lahf
mov
sbb
mov
xchg
mov
or
cmc
and
ja
xchg
or
push
imul
mov
lahf
adc
shr
push
push
aad
sbb
mov
or
mov
cmp
shll
push
outsl
cmp
xchg
mov
push
loop
xor
dec
inc
jo
or
xor
lret
mov
mov
or
ret
push
inc
mov
adc
decb
add
pop
repz
dec
inc
mov
lahf
movsl
adc
push
fsubrs
je
sub
sbbl
cmp
pusha
getsec
lods
inc
inc
xor
pop
decb
and
pop
fldcw
jp
popf
cltd
push
in
xchg
mov
mov
pop
jle
imul
test
pop
and
out
add
mov
sahf
insl
cld
push
xlat
leave
adc
cmp
cmp
mov
pop
xchg
sbb
callw
jno
or
cmp
in
xchg
ja
test
shl
add
inc
adc
sub
mov
rcrb
nop
xor
or
dec
sbb
data16
xor
jge
call
sub
into
or
rcrl
hlt
add
cmp
mov
sbb
sbbl
fwait
call
mov
cmc
ret
out
push
pop
sbb
adc
fmulp
and
adc
sub
and
xor
jle
sbb
in
adc
ljmp
sahf
sbb
js
xor
sbb
jecxz
xchg
mov
sbb
je
mov
push
shrb
rorl
ja
add
shl
push
dec
scas
mov
pop
mov
and
push
sub
aaa
outsb
fimull
inc
out
mov
mov
cmpsb
add
inc
sbb
add
pop
fwait
pop
mov
lcall
push
cmc
pop
es
std
iret
cmp
lahf
jmp
ficoml
int3
test
inc
mov
arpl
out
adc
adc
jbe
mov
sub
mov
jge
fidivrl
mov
cmp
lods
mov
jnp
dec
test
fmul
add
jo
pop
pop
fwait
dec
cmpsb
inc
push
insb
xchg
mov
out
inc
cmpsb
xchg
in
movsl
mov
mov
ljmp
lods
mov
sub
mov
js
test
inc
stc
loopne
dec
jle
add
pop
scas
fwait
inc
mov
or
jo
ljmp
mov
fstps
int
les
and
add
or
xchg
adc
and
cmc
jne
leave
mov
xor
and
push
cld
lods
lods
out
ror
xor
add
sbb
and
in
hlt
pop
jb
push
cld
daa
xchg
ss
adc
inc
addr16
mov
mov
sub
xor
sub
mov
inc
sub
mov
mov
sarb
mov
movsl
push
mov
mov
jb
pop
idiv
popf
shll
xchg
fwait
jp
addr16
repnz
pusha
vcvttss2si
sub
in
ficomps
loopne
int
push
imul
xchg
jae
xchg
cmp
cwtd
ss
popa
push
dec
loopne
loope
mull
lea
int
lcall
lods
sbb
es
aaa
movsb
push
xchg
ss
popa
sbb
nop
mov
and
mov
cmpsl
inc
arpl
mov
xchg
mov
mov
ja
sub
push
push
cwtl
test
mov
ud0
mov
or
outsl
hlt
lods
cld
cltd
inc
addl
mov
jo
hlt
pop
cld
inc
test
sbb
mov
loopne
in
and
jp
clc
pop
mov
js
pop
xor
scas
fldcw
gs
inc
stos
mov
push
pop
movsl
int3
testb
or
repz
mov
adcb
xchg
or
fmul
xor
xchg
adc
or
cmp
aam
add
xor
ret
push
lret
pop
bound
jge
lcall
jp
daa
lcall
cmpb
dec
sbb
lds
mov
and
aam
jl
xor
rclb
xor
subl
add
out
jae
xorb
clc
cmpsl
jecxz
lods
cmpl
je
mov
idivl
sub
cmp
rcl
cmpsb
xor
int3
lret
pop
dec
xchg
adc
test
adc
adc
int
js
daa
fcmovbe
jp
xor
sbb
aam
pop
pop
in
add
pop
push
inc
jb
sbb
stc
mov
bnd
gs
insb
jb
std
cmp
sbb
mov
into
bound
pop
cld
cli
dec
sbb
pop
adc
std
stc
cmp
jbe
sarl
mov
sti
inc
fs
js
sbb
push
aaa
and
les
sbb
lock
call
mov
lret
ljmp
inc
gs
mov
sub
cmp
fdivrp
dec
mov
in
cli
lahf
lock
mov
bound
cmpsb
sahf
clc
inc
push
add
adc
xchg
loopne
push
out
xchg
test
mov
movsl
inc
je
inc
out
popf
mov
mov
into
hlt
call
and
nop
and
sub
ret
mov
es
jns
imul
lods
adc
gs
xchg
xor
dec
add
insb
pop
mov
std
or
jmp
out
xchg
sbb
sarl
decl
mov
dec
jb
adc
test
test
cs
mov
roll
inc
mov
dec
jmp
xor
push
push
jae
filds
add
out
and
iret
setns
pop
cmp
xchg
iret
rorb
test
add
nop
lds
sbb
std
mov
pop
inc
dec
mov
fidivrs
sub
mov
inc
push
sub
lret
mov
test
sub
lds
das
add
add
mov
jo
xor
xchg
mov
shr
gs
or
jg
mov
mov
mov
sbb
leave
inc
fs
jne
fisubrs
insb
mov
into
shrb
mov
into
dec
sub
or
xlat
sub
xor
mov
lods
fmul
out
and
pusha
pop
xchg
cmp
cwtl
lock
adc
add
addr16
xor
pop
mov
mov
xchg
push
push
or
ljmp
leave
imul
pop
sub
sub
mov
jbe
sahf
lcall
mov
push
jecxz
xor
sub
adc
push
pop
ljmp
insb
dec
xlat
push
cmp
lock
sar
push
lods
int3
fucomip
and
dec
pop
arpl
fwait
inc
xor
sbb
lea
aad
mov
ss
push
mov
roll
xor
jns
adc
push
and
or
iret
test
mov
lock
sbb
ljmp
ss
and
sub
sbb
loopne
pop
sub
ret
mov
jnp
push
dec
in
jp
fs
pushf
pushf
jl
sti
sahf
mov
lds
inc
pusha
cmp
and
xchg
out
in
mov
sbb
loopne
xchg
dec
rcrb
addb
cmp
in
mov
sub
imul
paddsw
bound
faddl
mov
stos
inc
and
mov
lcall
xor
es
inc
nop
sarb
or
test
addl
add
mov
cmp
lcall
or
pop
lock
or
rolb
fcomps
lods
jne
mov
push
leave
repz
xor
jle
addr16
lret
insl
leave
push
push
pop
ljmp
and
clc
jne
cmp
into
mov
imul
jl
cld
mov
stos
out
push
mov
ror
fcom
add
pop
out
xchg
mov
dec
cs
jge
jge
sub
inc
stos
aam
push
xchg
mov
sti
fstpt
xchg
ja
ror
jne
and
cs
mov
pop
scas
out
mov
jne
data16
dec
jns
or
mov
int
jbe
or
inc
popa
xchg
lcall
iret
fdivrs
sub
insb
repnz
pop
xchg
or
pop
leave
aad
out
mov
jp
popa
push
cld
cs
cld
pushf
aaa
sub
xor
js
popf
cltd
rorl
aas
icebp
pop
mov
mov
pushf
sub
repz
mov
jnp
mov
nop
out
mov
test
fwait
stc
jmp
mov
mov
xor
adc
mov
mov
mov
aam
pop
mov
in
pop
pop
adc
aad
mov
jns
push
dec
sub
int
imul
push
fidivl
mov
out
inc
pusha
shl
aaa
push
pop
xlat
push
lret
pusha
rep
lea
push
in
sar
dec
inc
loope
scas
roll
js
test
flds
or
ret
mov
out
push
insl
push
mov
push
mov
push
outsb
outsb
fwait
test
jge
xor
movsl
pop
iret
inc
daa
jle
cmp
into
call
ret
jo
dec
iret
out
or
mov
sbb
adc
ljmp
in
push
addr16
es
fwait
mov
aaa
mov
mov
or
mov
lret
dec
sahf
or
lock
pop
lret
xor
adc
mov
push
jl
daa
push
cld
inc
xor
outsb
loopne
dec
shlb
pshufw
sub
notb
push
inc
sbb
mov
movsl
shlb
cltd
pop
pop
outsb
in
mov
add
mov
jge
cmpsl
stc
xchg
mov
cmp
xor
push
scas
pop
sub
pop
pop
add
jb
adc
mov
pop
add
sub
sti
sub
test
rcrl
inc
sbbb
jns
imul
pop
and
xchg
xchg
je
push
ret
mov
in
push
sbbb
push
xor
daa
ds
pop
push
popf
push
mov
cmp
lock
arpl
ds
mov
mov
xchg
stos
nop
sub
les
je
shlb
lock
cmp
in
scas
add
pop
adc
pop
inc
or
daa
mov
repnz
out
pop
add
xor
xchg
push
jae
xchg
cmp
dec
mov
cmp
inc
mov
and
clc
push
mov
ss
mov
shrl
mov
push
pop
aas
test
ds
jl
mov
iret
push
lea
in
xor
popf
inc
pop
xchg
sub
xor
add
aaa
imul
inc
into
fists
insl
dec
push
cltd
in
outsb
mov
es
cmp
mov
add
jb
pop
or
pop
repz
jbe
inc
xor
inc
xor
pop
inc
test
jp
insl
jae
subb
clc
mov
cmpsb
cmp
into
mov
ficompl
leave
dec
pop
fistpl
jge
or
mov
daa
inc
fsubrl
cmc
push
cmp
and
iret
sbb
rclb
adc
xor
pop
xchg
aam
ror
mov
add
pop
inc
mov
iret
popf
mov
test
mov
rcrl
incl
cmpsb
or
repz
dec
mov
sbb
push
imul
test
test
inc
std
loope
imul
loopne
ljmp
lahf
mov
aaa
jmp
xchg
dec
sub
movsl
ljmp
push
loopne
push
push
mov
nop
aaa
sti
test
ljmp
push
enter
mov
jecxz
gs
aad
mov
pop
shl
sbb
mov
test
sbb
nop
mov
adc
dec
mov
dec
push
pop
jecxz
sub
mov
gs
out
xchg
ds
adc
dec
adc
movsl
mov
leave
jmp
push
test
xor
std
jae
mov
inc
mov
inc
jbe
scas
adc
sub
and
xor
fs
lds
icebp
movsb
aas
sbb
dec
push
insl
cmp
stc
xor
xor
cmc
icebp
pop
cmp
lret
mov
fstpt
mov
repz
loop
inc
jb
es
rclb
movl
cltd
aaa
inc
movsb
and
punpcklbw
fwait
mov
popa
int3
sahf
inc
jns
stos
rcl
cmc
std
lret
enter
into
call
or
loopne
shr
cmp
stos
adc
popf
inc
pop
jle
push
movsl
add
adc
ja
mov
cmp
rolb
jmp
scas
mov
cmp
pushf
iret
push
xchg
push
mov
test
rcl
sub
leave
fsubrp
aad
es
push
test
scas
sbb
icebp
aad
jae
push
ja
push
aas
mov
adc
sbb
dec
sbb
pop
inc
inc
scas
ljmp
sbb
mov
xor
fcmovnb
ficompl
aas
fbstp
jne
daa
xchg
fildl
lock
xor
dec
xchg
rorb
stc
mov
pop
mov
xchg
test
and
lods
and
loope
jo
fcoml
cltd
adc
hlt
call
push
mov
outsb
stos
bound
repnz
ds
lock
lret
test
xor
mov
fmull
push
aam
pushf
das
aad
clc
repnz
insl
lcall
inc
scas
pusha
inc
xor
jp
push
inc
cwtl
aaa
arpl
mov
fnstsw
pop
xor
mov
push
push
cmpsl
jb
cmp
mov
iret
pop
les
das
stos
repnz
cwtl
iret
push
lods
xchg
and
fdivrs
out
fidivl
jns
and
rolb
nop
loop
pop
imul
repnz
sbb
les
stos
inc
sub
bound
xlat
pushf
xchg
shlb
jge
mov
inc
jmp
ror
out
and
mov
sub
cmc
mov
adc
or
mov
lock
test
jge
aam
or
or
cmpsl
xchg
movsl
mov
bnd
jb
jno
loop
stc
push
scas
js
mov
leave
cmp
adc
das
xor
lock
cli
pop
cld
hlt
arpl
xlat
xlat
fcmovnb
jp
mov
ljmp
push
insb
xchg
imul
sbb
decb
pop
mov
into
pop
push
loop
stc
sti
fiadds
clc
stos
xlat
cmp
loopne
sub
fildl
sub
sub
addb
pop
imul
inc
es
mov
int
loopne
and
es
mov
cmp
mov
push
hlt
popa
xor
aas
add
lahf
push
loope
adc
pop
lock
arpl
cli
xchg
cmp
enter
jbe
jns
adc
xchg
sbbl
push
mov
insl
sub
sbb
das
pop
jle
sub
clc
mov
jnp
mov
xchg
sub
lods
jno
push
mov
ret
je
pop
mov
dec
movsb
push
push
lahf
mov
jl
movb
cmp
fucomip
aam
ja
mov
lea
pop
xlat
mov
mov
mov
jbe
mov
lods
in
or
fdivp
out
xchg
jae
imul
test
ljmp
xorl
sub
jl
rorl
xchg
sub
pusha
in
fucom
stos
je
inc
pop
cmp
stos
iret
xchg
push
hlt
scas
rorb
jne
in
aad
jp
or
jge
aam
inc
mov
data16
jp
pop
insl
gs
push
or
lods
push
and
push
cmp
add
xchg
jnp
cmp
out
or
mov
ret
xchg
jbe
mov
xor
or
xor
repnz
push
mov
add
inc
fists
scas
into
out
jo
jno
and
stc
xor
mov
or
cwtl
ret
rclb
jmp
push
sbb
mov
push
js
jns
rcrl
sbb
jle
jge
cmp
in
inc
and
pop
dec
lret
mov
test
mov
lods
cmp
test
pop
into
hlt
mov
or
lock
mov
pop
mov
pop
mov
jge
xlat
mov
adc
sahf
or
sub
iret
or
pop
push
adc
jbe
pusha
pop
lret
pop
push
int3
scas
arpl
aas
test
sbb
stos
pop
push
insl
aad
adc
in
or
xchg
xchg
sub
in
push
sbb
inc
call
xchg
scas
shlb
imul
cmp
cs
adc
mov
in
icebp
scas
or
scas
inc
lret
cmc
push
sahf
stc
sbbb
or
stos
add
xor
xchg
mov
repnz
scas
sti
adc
push
arpl
pop
das
out
out
mov
cmp
lret
cmp
or
movsb
jecxz
xor
inc
xor
mov
enter
fs
ja,pn
adc
push
dec
pop
mov
jno
push
cmp
hlt
rep
aad
xchg
cmp
lds
ja
lods
xor
popa
scas
mov
and
sub
jmp
mov
pop
push
add
scas
aas
insl
mov
pop
repz
das
jmp
push
add
xchg
jecxz
and
mov
pop
aaa
inc
jnp
pop
inc
dec
loope
es
sti
inc
or
sub
push
arpl
lds
push
adc
mov
int
mov
sbb
jge
inc
push
mov
mov
out
in
repz
dec
scas
mov
mov
xchg
arpl
inc
mov
mov
pop
cli
dec
xchg
repnz
or
sub
mov
cmp
ret
pop
adc
in
jne
mov
mov
jg
and
and
ds
les
test
lret
and
sbb
xor
add
xchg
dec
jmp
mov
testb
nop
sub
push
inc
push
and
mov
xor
cmpsb
addr16
or
dec
ds
push
jae
cmpsl
jbe
push
pop
fs
push
and
int
sub
loope
int
loope
rcrl
ja
into
mov
add
fldl
and
cmp
mov
fadds
adc
leave
cmpsl
mov
jne
rcl
test
mov
mov
ret
sub
cmp
and
hlt
mov
popa
mov
adc
inc
mov
addl
push
fdivl
rcr
push
jns
adc
jecxz
daa
pop
adc
xlat
push
dec
inc
lret
push
subb
jae
lcall
mov
fbstp
or
shr
cmp
ja
pop
xlat
or
mov
sti
stos
aas
push
fcomps
inc
mov
jp
lret
ja
lahf
enter
clc
mov
push
shld
dec
hlt
adc
dec
push
testb
dec
xlat
jno
jl
mov
mul
es
jg
mov
fcompl
aas
cld
pop
enter
aad
or
js
adc
loope
js
or
push
xchg
xchg
pop
cmpl
xor
ds
jo
jno
add
leave
and
inc
ret
add
inc
sub
jo,pn
lock
fst
pop
rol
mov
and
mov
mov
or
push
and
xor
cmp
fldenv
xor
fs
rcr
inc
xor
orl
fidivl
test
add
add
sbb
jae
and
je
inc
pop
fistpl
jb
or
repnz
adc
js
adc
xchg
jle
cwtl
imul
mov
fwait
mulb
nop
repnz
mov
sbb
loop
fmul
popa
imulb
iret
jns
mov
out
ds
rep
mov
sub
mov
movsb
movsb
add
imul
add
jae
rolb
xlat
cltd
or
enter
loope
cmc
int3
aad
push
imul
fistpll
or
mov
mulb
iret
aaa
push
push
mov
ja
add
hlt
fsubrp
arpl
lock
add
pop
ljmp
adc
flds
aaa
cmc
repnz
mov
mov
mov
or
push
in
sbb
pop
iret
ret
dec
shrb
mov
xchg
popf
lods
dec
lret
adc
cwtl
je
sbbl
stos
adc
aaa
test
into
ret
test
mov
push
jg
cmp
mov
pop
loopne
lds
add
fs
pop
imul
nop
lret
mov
jno
mov
repz
aam
inc
stos
mov
or
fsubr
xchg
fdivrp
xor
ret
sbb
or
stos
in
push
sbb
dec
aad
push
test
mul
jg
std
int
jl
add
and
cmp
aad
aaa
mov
iret
dec
push
mov
pop
pop
inc
insb
xchg
movsb
pop
sbb
inc
inc
add
and
jbe
push
mov
movl
icebp
pop
clc
sub
and
inc
dec
jp
mov
je
rcr
sub
jns
and
cmp
fisubrs
or
pop
sub
xchg
and
pop
adc
or
jne
sarb
pop
ficompl
and
iret
push
xchg
testl
in
jl
sbbb
arpl
and
call
mov
cld
or
outsb
idivb
scas
xchg
leave
mov
push
lods
jle
sub
add
sbb
pushf
stos
shrl
bound
jp
jmp
pop
jne
sub
mov
xchg
mov
xlat
jg
lcall
push
dec
mov
dec
mov
roll
cmpl
add
loopne
xchg
inc
cwtl
jae
or
push
xor
in
dec
cmpb
adc
jge
pop
je
hlt
cmpsb
and
jp
pop
imulb
add
adcb
and
movb
lret
and
jnp
jge
xchg
aam
sarb
fmuls
cli
xchg
fsubr
add
es
arpl
cmp
dec
ret
rolb
dec
mov
out
mov
mov
or
jp
fcoms
push
xchg
mov
jg
adc
in
mov
in
pop
xchg
fiaddl
sub
test
mov
loope
aad
xchg
ret
sub
sbb
xchg
dec
dec
outsb
push
cld
es
orl
pop
jl
gs
and
clc
popf
test
sbb
cwtl
setle
cltd
fadd
aad
in
mov
inc
pop
out
jns
cld
js
cmpsb
pop
pop
sahf
in
aam
ficoml
frstor
loopne
and
cmp
push
ljmp
shll
out
cmp
in
insb
imul
sub
cmp
push
sub
mov
push
sub
movsb
data16
outsb
pusha
jmp
adc
stc
mov
daa
pop
xchg
xchg
mov
shll
hlt
and
jae
lds
pusha
int3
insb
push
clc
mov
sahf
cmc
sti
add
push
movsl
into
es
and
pop
mov
stc
or
int
incl
mov
inc
sbb
inc
daa
ds
clc
inc
ds
test
fcomps
and
dec
sbb
sub
lods
add
cmpsb
popa
dec
xchg
repz
das
cmp
pslld
cli
inc
cmp
sub
pop
inc
std
cmp
and
mov
icebp
cmpl
aas
mov
inc
sbb
test
daa
cmp
scas
sbb
sub
jg
clc
mov
push
cmp
shrb
mov
sahf
cld
rcrb
sbbb
aad
fdivr
push
pop
stos
cmp
xchg
shr
add
cmp
mov
xchg
jb
jno
fistpll
sbb
enter
mov
sub
pop
or
sub
push
cwtl
fsubrp
inc
jge
dec
xchg
jno
mov
popa
mov
jo
adc
pop
or
cmp
dec
xchg
loop
sub
push
mov
aad
cmp
arpl
enter
jnp
scas
imulb
jecxz
arpl
arpl
lret
xchg
fsubs
fisttpl
jle
int3
jb
inc
adc
je
std
lods
fnsave
ja
dec
loope
mov
mov
mov
pop
jno
dec
cmp
cmc
pusha
iret
in
mov
daa
add
je
xchg
or
or
jo
pop
mov
mov
sub
jns
int
or
daa
or
pop
inc
pop
pop
mov
insb
jns
mul
cmp
sub
into
dec
loopne
cmc
cmp
in
stos
popa
inc
dec
xchg
insl
sti
gs
in
ss
cmp
cmc
jnp
sahf
xor
cmp
ja
adc
mov
xchg
pop
xor
mov
cmp
mov
adc
jae
lock
pop
adc
push
add
shlb
inc
pusha
jl
adc
xchg
lds
enter
rorl
mov
insb
xor
inc
leave
shlb
sub
xlat
in
inc
lret
fcomp
jmp
mov
or
push
andl
in
push
or
mov
mov
gs
sbb
nop
push
adc
andb
js
sbb
xor
adc
test
adc
ljmp
in
sbb
and
bnd
cmp
sub
std
hlt
adc
lahf
cld
dec
mov
mov
cmovge
push
jne
jecxz
mov
pop
adcb
testb
movsl
icebp
sub
xor
cmp
popf
mov
or
shrb
cmp
cmpsb
loope
mov
adc
lcall
fiaddl
rcl
jl
or
popf
fcompl
jne
sbb
cmc
jge
xchg
repz
push
repnz
sti
mov
lock
dec
fs
das
push
mov
lret
shr
out
mov
fsubr
mov
cmp
add
scas
cmp
subb
adcl
outsb
repz
mov
iret
ja
dec
fstl
int3
or
test
xchg
jge
lods
mov
pusha
mov
xchg
xlat
cltd
ljmp
sbb
jns
btr
enter
scas
xor
mov
mov
ss
scas
ljmp
std
in
inc
mov
repz
cmp
mov
call
insl
pop
xchg
cmp
jecxz
popa
adc
xor
sahf
jb
pushf
push
es
fwait
inc
sti
inc
insb
cld
sbb
lods
sahf
scas
movsl
jns
mov
lahf
mov
int
mov
addr16
mov
and
and
sub
leave
adc
int3
mov
scas
test
dec
mov
dec
sub
stc
cs
sub
bound
sbb
jmp
xchg
test
adc
outsl
cmp
sub
pop
test
push
into
dec
popa
gs
mov
mov
sbb
aad
push
mov
or
cmp
fcomps
nop
mov
pop
jo
sbb
add
cmp
icebp
aaa
jg
addb
jnp
sahf
pusha
clc
hlt
aas
sub
sbb
decl
ret
scas
fstps
int3
adc
loopne
inc
adc
in
lea
mov
adc
dec
pop
vcvtps2dq
jecxz
icebp
push
xchg
arpl
stc
add
in
ljmp
push
cli
push
lret
xchg
or
call
fcmovbe
fnsave
lods
and
call
inc
dec
lret
jle
sub
or
fsubr
sbb
jmp
jle
movsl
movsb
inc
lds
bound
dec
addr16
imul
mov
lods
cs
dec
push
enter
sti
repz
psllw
fwait
push
insl
xlat
int
test
mov
andl
push
adc
ds
outsl
insl
sti
rorl
add
lret
dec
test
xor
jg
pop
pop
sbb
jl
inc
insl
cmpsl
inc
jle
rcrb
testl
icebp
scas
pop
jo
lods
push
ja
out
into
cmp
addr16
sbb
mov
xor
add
ja
cmc
or
pop
lds
popf
stos
loopne
mov
inc
aas
push
mov
or
add
aas
push
mov
jp
fstps
cmp
pop
ret
je
mov
stos
insl
loope
jbe
repz
lcall
adc
xor
sbb
sbb
aaa
pop
sub
movsl
add
dec
cmp
sbb
js
sub
lret
or
enter
cld
jmp
xrelease
jp
stos
or
pop
adc
push
xor
and
xchg
mov
pop
xor
lods
lret
sub
inc
xchg
sbb
xchg
sub
pop
mov
mov
mov
xor
cmp
mov
xorl
cli
mov
sbb
jnp
sbbl
xchg
cmc
adc
lods
cli
adc
call
sub
clc
jge
imul
adc
and
add
mov
call
cmp
movsb
out
cmc
push
rorl
pop
scas
or
mov
loopne
and
mov
mov
and
pop
and
cmp
mov
lds
fs
adc
sub
test
ja
idiv
loop
call
insb
xor
dec
mov
ja
jmp
inc
sub
jmpw
push
scas
mov
test
and
sub
or
or
mov
addr16
adc
je
sub
je
popa
mov
jo
pop
ds
push
in
pop
jp
cmpsl
les
mov
pop
ret
sub
in
insb
cltd
pop
int
and
scas
or
adc
adc
test
aam
lret
je
or
add
fwait
outsb
sub
add
shll
xor
ret
inc
push
nop
and
lret
das
fsts
es
sub
adc
xor
aaa
jae
jge
cmp
mov
mov
shll
cltd
and
cmpb
es
dec
popf
xor
sbb
int
test
sbb
push
cmp
lcall
xchg
lret
xchg
insb
add
mov
and
add
push
les
mov
into
je
add
pusha
int
mov
inc
jmp
and
add
insl
add
mov
sbb
pop
mov
fsubs
mov
mov
mov
in
push
out
fcoml
cmp
jo
lds
mov
mov
int
jge
pop
popl
jge
jo
int3
push
outsb
fwait
cmp
push
shrb
bound
andb
mov
mov
ficoms
sti
add
mov
xchg
jno
mov
mov
mov
inc
cmp
mov
out
xor
mov
test
sbb
ret
not
mov
push
addr16
dec
pop
aas
add
mov
dec
xchg
or
jnp
and
or
lock
pop
inc
cmpsl
js
dec
sbb
les
sti
xchg
jbe
gs
add
mov
dec
mov
inc
stc
or
andl
pop
lods
sbb
and
idivb
testl
vaddps
lcall
out
mov
lock
push
out
xchg
iret
mov
xchg
pop
call
xchg
repz
adc
jle
and
mov
setns
ds
sub
mov
add
shrl
jne
loop
pop
dec
sub
and
fdivrl
ret
jmp
sub
arpl
or
imul
mov
ret
ja
xchg
xor
push
push
stos
push
sbb
pop
lock
mov
sbb
dec
subl
pop
xor
test
inc
std
in
mov
and
jae
xor
call
in
pop
pop
mov
loopne
jb
leave
push
dec
push
dec
push
sub
dec
lahf
and
fstl
mov
les
xor
js
fcmovnu
pop
pop
lcall
xchg
adcl
stos
ljmp
aas
add
adc
sar
dec
mov
gs
out
std
mov
out
mov
pop
jecxz
push
movsb
dec
xor
mov
lods
and
vmovss
fmul
aad
xor
mov
push
lods
sarl
jnp
pushf
add
daa
scas
cltd
insl
icebp
lret
fnstsw
popa
pop
clc
jnp
shld
jno
lret
pop
lcall
sarl
out
jle
and
cmp
mov
lcall
pop
aam
sub
adc
into
in
dec
sbb
notl
rolb
pop
mov
aas
mov
rcrl
leave
adcb
sahf
and
das
js
mov
mov
push
js
out
lahf
or
jno
roll
cmp
aas
popf
scas
loop
popf
test
mulb
fsubl
sbb
lock
or
cltd
cs
xor
cmc
shl
add
push
mov
mov
inc
pop
mov
mov
xor
jecxz
pusha
push
pop
inc
mov
push
mov
cwtl
lods
data16
bound
nop
jecxz
jae
stos
jbe
jle
jl
and
add
pop
pushf
jns
pop
xchg
cld
out
mov
in
test
inc
adc
sbb
mov
push
daa
imul
inc
insl
fs
mov
ja
sbbb
mov
pop
addb
pop
push
int
add
jl
mov
inc
jmp
aaa
push
stc
pusha
or
xor
or
xor
cmpsl
imul
cmpsl
xchg
outsw
ret
adcl
xchg
addb
push
sub
mov
aam
cmp
jno
or
stos
mov
or
ret
mov
ja
xchg
ret
jnp
dec
mov
ljmp
lds
mov
and
es
fidivs
test
pop
fidivl
push
repnz
test
sti
push
push
sahf
mov
clc
push
repnz
inc
mov
dec
aad
dec
mov
inc
fidivrs
loope
je
jg
test
mov
mov
fs
xchg
dec
pushf
les
jae
sub
pop
stos
scas
loope
out
test
movsb
lcall
iret
push
paddusw
dec
jp
cli
or
movsb
sub
mov
push
push
adc
lods
mov
sub
push
fsub
shlb
cmp
jnp
pop
das
out
add
lds
cmc
and
cwtl
in
enter
loope
adc
pop
enter
jns
or
aam
jle
mov
mov
pop
je
fldcw
aaa
scas
fwait
mov
aaa
mov
shlb
cmpsb
in
addl
dec
inc
sbb
jne
enter
addr16
in
mov
dec
jb
mov
lret
fbld
pop
jl
pop
imul
pop
or
mov
or
xchg
mov
mov
mov
mov
nop
movsl
mov
cmp
scas
jo
ljmp
inc
add
xchg
xor
sbb
jns
adc
mov
push
iret
lret
pop
mov
or
inc
fcompl
fadds
into
addr16
pop
pusha
xor
lock
mov
mov
outsl
cmp
mov
xor
cmpsl
and
push
sbb
xchg
and
pop
or
xchg
js
mov
mov
jecxz
mov
pop
iret
cwtl
jbe
xor
mov
loopne
sbb
dec
dec
not
push
mulb
mov
mov
xor
sbb
cs
movsb
sbb
or
jecxz
xchg
inc
mov
sub
mov
dec
mov
stos
imul
jns
jae
sub
jle
ljmp
in
int3
dec
in
dec
jge
and
push
inc
je
lods
jmp
adc
clc
mov
arpl
xchg
cmp
xor
xor
inc
jmp
int3
sahf
and
and
fbstp
addl
cld
push
dec
insb
call
fwait
inc
out
mov
sbb
addr16
lds
lret
ret
adc
rolb
sbb
enter
dec
push
inc
push
mov
rcrl
lods
xchg
arpl
outsb
jecxz
mov
in
scas
out
scas
fwait
cmpsb
mov
mov
or
cmpsl
or
cs
clc
or
out
inc
lods
xchg
movsl
xor
out
jecxz
push
mov
pop
sti
mov
movsb
jae
add
sbb
pop
jno
jg
inc
pop
jmp
fnstsw
ret
out
push
jmp
lret
cmp
iret
jecxz
in
inc
addr16
lods
pop
loopne
in
data16
jge
add
xor
daa
and
cmp
sbb
xor
fcom
jns
sub
ss
jbe
fsubrs
test
xchg
fs
push
dec
test
mov
push
mov
mov
test
push
jg
adc
cwtl
es
loopne
and
icebp
push
mov
xchg
lahf
push
popa
ja
xor
clc
hlt
adc
iret
test
stos
xor
pop
push
xchg
mov
pushl
fisttpll
lahf
dec
inc
aad
sti
xor
push
ljmp
xor
pop
dec
mov
dec
movb
mov
and
xor
push
jmp
and
es
out
imul
xchg
loope
xchg
jmp
loop
lds
lahf
or
sarl
xor
push
cmp
arpl
xchg
scas
mov
add
aaa
push
sbb
mov
and
and
sbb
dec
and
pop
fisttpl
push
xchg
xor
es
adc
aas
inc
negl
jno
icebp
mov
add
mov
mov
int3
push
lret
mov
lods
outsl
das
sahf
push
sub
mov
cmc
fsubs
mull
xor
jbe
notl
fldcw
xchg
adc
mov
cmp
cli
dec
shl
xchg
adc
xchg
lret
cmp
add
inc
lods
mov
int
xchg
pop
test
stc
in
and
loopne
or
inc
shl
mov
ud2
xchg
stos
xor
js
lahf
shrb
es
push
movsb
xchg
jg
inc
ud0
xchg
cwtl
mov
xchg
loop
sbb
pushf
or
addr16
test
aad
mov
push
imul
insb
mov
push
jl
fst
pop
xchg
cmp
leave
fmul
xchg
adc
out
add
push
mov
sub
xor
mov
repnz
ljmp
test
xchg
dec
ret
call
adc
fxch
addr16
push
sub
mov
ljmp
push
jne
mov
xchg
addb
outsl
les
push
lcall
loopne
add
jns
divb
cmp
scas
movl
insl
add
repz
iret
sub
sahf
xor
in
and
mov
add
sub
ficoms
mov
adc
fwait
sbb
inc
push
ret
in
mov
or
jbe
cmp
adc
ja
call
mov
inc
mov
push
sahf
xor
mov
in
mov
loop
pop
pop
lcall
or
daa
dec
add
sbb
push
push
add
and
jl
lret
iret
stos
imul
pop
iret
rolb
dec
orb
add
mov
cwtl
test
shlb
aas
jecxz
lret
jae
movlps
push
stc
mov
shrb
enter
repnz
xchg
ss
inc
adc
shll
pop
inc
mov
cli
popa
jge
orl
bound
faddp
mov
cmp
sysexit
xor
xor
out
out
or
cmp
mov
int3
xchg
jbe
jbe
cmp
inc
jnp
lods
cmp
fldl2e
adc
xor
mull
jnp
mov
cmp
movsl
pop
repnz
stos
sti
inc
lret
add
mov
jbe
mov
ret
or
push
scas
pop
shll
sbb
fwait
int
insb
cmp
daa
xor
loope
imul
or
mov
data16
lock
cmp
imul
xchg
fisttpl
push
sbb
or
ret
adc
xor
jnp
mov
lahf
adc
mov
movsb
lds
ror
push
or
jecxz
fs
dec
push
into
pop
xchg
push
add
sbb
pop
sbb
xor
aam
inc
stc
pop
rclb
test
cmpsl
enter
ss
xor
out
pop
test
daa
add
loop
fidivl
test
lock
jge
dec
sub
mov
or
call
iret
jge
and
add
test
or
ljmp
mov
cld
cs
add
cmp
test
je
std
repnz
mov
xor
cltd
popf
dec
xchg
cwtl
shl
xchg
sahf
adc
pop
adc
pop
mov
add
arpl
dec
insb
mov
fwait
jae
mov
rclb
out
dec
pop
jl
cs
xorl
push
mov
add
repz
inc
imul
cmc
pusha
adc
ljmp
lret
jmp
xor
roll
fisubrl
xchg
mov
dec
jg
dec
push
mov
jb
xchg
into
jb
xor
roll
cmp
push
arpl
sub
xchg
shll
lds
xchg
mov
lods
mov
and
in
insl
xor
jno
cmp
mov
scas
subl
and
popf
cli
fadds
call
ret
les
xchg
sub
push
call
jne
ret
mov
imul
jae
arpl
cmc
fdivl
inc
test
les
loope
mov
xchg
fsts
cmpsl
mov
sahf
cltd
push
cli
and
inc
cwtl
mov
sbb
mov
in
int3
fdivrs
sub
mov
int
in
pop
or
outsb
sbb
dec
mov
mov
inc
dec
jmp
mov
fwait
jp
mov
sahf
push
jne
add
dec
into
rolb
mov
xor
add
loop
in
mov
test
es
push
push
dec
sbb
mov
push
push
rcrl
xchg
data16
push
push
dec
pop
or
fnstsw
inc
push
gs
cmpl
stos
sbb
or
and
xchg
lds
mov
push
mov
mov
inc
lret
in
loopne
es
leave
and
popa
inc
mov
pop
aas
gs
call
jae
add
pop
sub
add
int
lods
mov
or
cmpl
pop
gs
in
dec
std
and
fistl
cs
pop
jp
push
xor
pusha
cli
shl
jmp
int
fs
shlb
mov
ljmp
mov
enter
jns
jp
add
fs
pop
lods
stos
dec
xor
ret
pop
add
nop
jl
ficomps
pop
std
fldcw
xbegin
test
mov
and
adc
mov
inc
xor
std
outsb
mov
andb
add
arpl
sub
test
ret
add
adc
faddl
test
xchg
and
xor
inc
imul
mov
in
cs
mov
cmpsl
mov
ret
in
or
jne
insb
mov
mov
roll
sahf
jmp
sbb
adc
ret
lret
sbb
cld
jp
sub
push
ljmp
push
dec
xchg
jp
xchg
dec
push
es
mov
insl
jg
lock
shlb
sbb
jp
int
pop
adc
aad
lcall
sbb
or
aad
adc
xchg
nop
dec
insb
outsl
hlt
mov
jmp
aaa
inc
ret
outsb
jns
xor
push
cmp
pop
push
movsb
divb
es
pop
jne
push
or
loopne
in
cmp
push
dec
addb
je
dec
pop
xchg
inc
popa
fmuls
lret
sub
xchg
out
les
and
lds
ror
les
sub
mov
mov
jmp
shrb
sbb
mov
push
mov
sub
out
mulb
addr16
repz
xchg
mov
push
inc
stos
xchg
jecxz
jbe
add
push
mov
imul
loope
adc
int3
fimull
mov
mov
pop
push
es
inc
fs
lods
lret
dec
subl
addr16
fdivrl
dec
sbb
fdivs
jl
fcmovnu
imul
inc
inc
jp
lcall
dec
dec
mov
gs
aas
and
bound
xor
sub
push
arpl
shll
pop
ljmp
jge
lahf
test
xchg
cmpsl
or
stos
pop
ret
aaa
xlat
lahf
add
adc
shll
xor
ljmp
push
shr
push
daa
and
mov
or
xchg
repnz
xchg
imul
sbb
push
xor
jo
sbb
shll
mov
mov
inc
adc
and
mov
dec
cld
aam
xor
cmpsb
dec
es
into
jmp
push
cmp
inc
sbb
rcrb
lds
and
stc
jno
aam
out
sbb
adc
dec
jg
adc
xchg
add
mov
or
ror
ret
ficompl
sub
xchg
mov
fisubrl
das
cmp
notb
mov
jmp
push
and
jecxz
ja
mov
add
ss
sub
repz
es
je
dec
icebp
pop
test
mulb
les
clc
jg
sbb
popl
jle
fcoms
movsb
fs
cmpsb
cmp
fcoms
movsl
mov
stc
jl
in
stos
aam
gs
mov
in
mov
adc
imul
sub
xchg
bound
in
xor
in
outsl
push
lds
movsl
dec
fisubs
stos
mov
rcrl
repz
or
xchg
dec
adc
out
stos
imul
and
xor
or
sub
inc
inc
xchg
imul
lock
shlb
adc
mov
shr
lock
int3
sbb
push
push
mov
cmp
push
mov
ret
in
add
fnstcw
scas
push
test
push
xor
out
and
push
in
pop
mov
sarb
fs
sub
scas
cmp
dec
jno
jmp
cmp
data16
sbb
aad
sbb
or
movsb
mov
sbb
jmp
mov
out
lock
dec
sbb
push
add
mov
movmskps
jbe
imul
in
mov
push
or
mov
enter
lds
jbe
fs
inc
pop
jp
push
pop
ficomps
out
cld
rclb
cwtl
pushf
pop
in
mov
js
fisubrl
inc
fnstcw
or
sti
fdiv
mov
add
push
popf
std
aaa
subl
cmp
sub
mul
ret
cmp
ret
xor
addr16
push
imul
shll
adc
xor
stc
loope
enter
aam
inc
cmp
push
push
out
cmp
cmc
xor
call
jbe
mov
mov
mov
mov
inc
add
fistps
mov
or
in
sbb
imulb
into
rcll
xor
in
mov
pop
or
es
std
mov
mov
xchg
pop
icebp
mov
jno
pop
xchg
aam
dec
mov
loopne
dec
adc
xchg
fnsave
scas
push
out
in
mov
cli
add
and
sub
dec
jns
mov
out
movsb
sbb
mov
inc
mov
sar
add
pop
ret
pop
xor
adc
into
add
jl
sub
hlt
and
mov
dec
dec
out
adc
xor
push
popa
sub
fwait
addl
xchg
or
lahf
ljmp
lds
mov
xchg
mov
decb
xchg
adc
mov
scas
out
adc
xor
mov
cmp
jg
sbb
mov
sbb
movsb
pop
mov
loope
sbb
incb
add
sub
movsb
or
in
xchg
fistpl
adc
loopne
enter
pop
jne
rcr
sub
lcall
and
or
ljmp
loopne
adc
inc
je
push
les
lods
es
popa
xor
inc
or
shrl
out
dec
inc
jp
xchg
xchg
and
xchg
les
loope
sub
addr16
cmp
dec
mov
clc
mov
jae
sub
push
fimull
arpl
cmp
repnz
sbb
add
pop
inc
adc
neg
lds
sti
add
ret
mov
je
popf
iret
cld
pop
test
mov
cmp
mov
or
negb
fsqrt
jecxz
fucomi
pop
dec
sbbb
adc
pop
scas
cmc
pop
mov
stc
jg
inc
hlt
ds
loop
xchg
push
inc
cmp
imul
decb
gs
jo
sarb
pop
negb
or
add
pop
imul
push
aaa
ljmp
jno
mov
lock
pushf
in
addr16
jmp
cmp
and
pop
hlt
ss
cmp
fmuls
data16
inc
and
repz
pop
fs
out
add
cmp
outsl
add
and
arpl
mov
cmp
push
repnz
jae
cmp
fisttpl
lret
mov
mov
mov
sub
rcrb
js
outsb
mov
cwtl
dec
popf
mov
add
cmpsl
cs
xchg
sti
sub
outsb
aaa
ret
inc
and
jne
insl
pusha
mov
xchg
aaa
sbb
push
push
rcll
arpl
es
dec
lock
jle
andb
into
add
xor
add
or
into
and
sbb
xor
mov
adc
add
dec
stos
pop
jne
dec
sti
lahf
pop
mov
or
outsl
inc
lcall
sbb
cmp
xchg
adc
mov
in
sbb
cmp
dec
sub
push
mov
mov
jbe
cli
dec
aad
stc
addr16
lds
xchg
pushf
push
dec
rclb
rcll
js
leave
nop
ret
scas
adc
les
sub
dec
push
mov
in
cwtl
outsl
add
xchg
mov
roll
mov
push
lods
sub
cmc
icebp
int3
inc
in
imul
sub
bound
cmp
ret
enter
lods
sarb
pop
mov
inc
insl
out
enter
mov
aad
cld
ret
push
loop
ret
fldenv
xor
das
adc
popa
popa
out
fdivrl
jno
xor
mov
sarb
insl
xor
jbe
sbbl
in
sub
mov
fnsave
ds
mov
movsb
xchg
iret
pusha
dec
jl
dec
xor
mov
lock
repz
movl
jmp
pop
sub
push
icebp
adc
repnz
xchg
mov
aaa
mov
out
fisttpll
adc
rcll
mov
shlb
push
pop
sbb
xchg
sbb
push
jno
or
shr
mov
adc
pop
and
xchg
dec
push
pop
inc
jp
adc
mov
mov
rorl
lods
or
or
lea
std
inc
cld
jge
add
and
pop
sbb
sarl
add
jmp
pop
jecxz
jge
inc
js
push
rorb
xchg
push
pop
cmp
jo
mov
dec
test
cmpsb
sbb
imul
mov
or
mov
and
mov
cmc
sbb
dec
inc
jg
pop
adc
jecxz
in
push
sbb
push
pushf
push
or
mov
movsl
loopnew
sub
psadbw
pop
and
mov
pop
inc
incl
mov
add
les
xchg
popf
adc
mov
scas
fs
std
in
lret
stc
fdivrs
mov
dec
push
adc
daa
mov
adc
mov
inc
aaa
dec
sti
add
pop
aas
jae
pusha
int
mov
adc
es
xor
adc
jl
scas
pushf
orb
dec
jecxz
fiadds
mov
and
mov
stos
stos
xor
mov
add
xlat
sbb
aas
dec
bound
repnz
fs
jb
xor
xor
testb
cmp
xchg
shll
mov
and
pop
xchg
push
sub
pushf
inc
repnz
xor
arpl
mov
subw
cmp
ds
and
int3
jnp
mov
xor
mov
xchg
icebp
cmp
je
mov
push
sub
ja
inc
cmpsl
mov
mov
xlat
adc
pop
pop
arpl
push
cmp
fwait
xlat
and
sub
test
inc
loopne
inc
test
sbb
jl
xchg
adc
sub
jae
cltd
sub
push
jno
popf
mov
aam
loopne
and
xor
aad
pop
lds
jo
mov
sbb
cmp
cmp
cmp
bound
mov
mov
dec
insl
insb
ss
push
sbb
fnstenv
rorl
xchg
cli
rcl
xchg
test
fs
sbb
xor
in
nop
xchg
dec
cmp
stos
xchg
jo
rcrl
inc
shlb
pusha
pop
lods
ss
push
jne
xchg
or
out
nop
pushf
out
fcoml
jmp
or
sbb
xor
xchg
mov
push
jg
clc
gs
pop
scas
test
mov
xlat
les
in
sarb
rol
push
arpl
mov
into
rcrb
lods
inc
stos
negl
lahf
scas
outsl
negl
cmc
imul
js
shrl
sbb
mov
adc
sub
int3
push
gs
cwtl
push
ja
push
push
cmp
out
xlat
outsb
leave
and
push
mov
push
dec
push
aas
dec
xchg
fcomp
rorl
psubsb
pushw
xor
mov
adc
lods
nop
xchg
mov
outsb
add
adc
mov
mov
gs
mov
mov
fcmovu
negl
and
scas
das
inc
sbb
push
xlat
cs
add
cwtl
cmp
aad
insb
int3
addr16
mov
fldcw
inc
sub
clc
cmp
add
test
sub
pop
inc
and
out
push
lahf
out
mov
mov
roll
in
movsl
ja
gs
out
push
cmp
pop
andl
clc
mov
pop
push
and
insl
mov
add
push
push
inc
and
jg
mov
rol
push
out
fs
xchg
mov
mov
xor
jp
daa
add
pop
push
sbb
xchg
pmovmskb
adc
jle
ss
inc
add
scas
jecxz
cmpsl
nop
xchg
gs
xchg
arpl
std
cmp
jp
movsl
int
xchg
adc
cmc
sahf
mov
pop
dec
jp
adc
xchg
sub
cmpsl
mov
dec
jno
adc
ret
xor
sub
cmp
xchg
mov
or
jne
cmp
xlat
lock
enter
xchg
jecxz
mov
mov
inc
cmp
mov
cltd
test
sub
loope
sbb
fisttpl
movsl
stos
test
mov
rcr
xor
fcoms
add
mov
imul
into
adc
dec
jns
rorl
lea
mov
mov
lret
jle
push
pop
fdivrs
loop
pop
ljmp
xchg
icebp
dec
xor
cli
sub
cmc
cmp
test
cltd
stos
out
rep
lea
outsl
stos
cmpsl
cwtl
stos
pop
mov
out
mov
mov
mov
xchg
imull
jae
test
cmp
mov
or
pop
scas
mov
in
cmpb
inc
scas
popf
bound
stc
sbb
mov
jno
repnz
pop
inc
cwtl
and
fdivrl
pop
mov
and
orl
int
and
inc
dec
xchg
dec
jne
cmp
sbb
ret
rorl
mov
xor
out
ja
dec
and
cld
dec
sub
xchg
icebp
aaa
jge
dec
dec
lds
iret
inc
sub
dec
adc
adc
jno
mov
mov
mov
ljmp
inc
inc
jns
addr16
mov
ret
je
pop
imul
ja
sbb
add
fwait
push
les
mov
push
int
inc
int3
mov
lods
mov
insl
xor
adc
push
add
repnz
fs
movl
jl
mov
popa
push
mov
push
xor
xchg
jno
outsl
cmp
push
fnstenv
cmpsl
jle
sbb
pop
cwtl
jg
repz
mov
xchg
div
xchg
fwait
lret
sbb
inc
adc
lcall
cmp
sbb
addr16
adc
in
lods
or
jae
pop
jb
sub
and
inc
mov
pop
mov
addr16
dec
push
movsl
sub
fcmovne
fiaddl
dec
xor
cmp
mov
mov
mov
dec
test
push
mov
cmpsl
push
clc
ret
sub
loop
popa
ret
jnp
int3
dec
fs
sub
mulb
cmp
iret
adc
mov
inc
ret
addb
and
clc
mov
and
mov
xchg
ljmp
jg
test
out
or
out
scas
imull
sub
pop
into
fdivrp
std
das
negb
inc
pushl
mov
inc
adc
xor
cwtl
rol
aas
or
cmp
mov
mov
inc
nop
jae
dec
mov
jnp
mov
mov
call
adc
adc
rorl
pop
mov
scas
sbb
and
test
es
mov
push
push
hlt
sbb
push
loopne
cltd
cs
or
pop
cmp
bound
jno
add
and
xor
inc
stos
mov
ficoml
jle
rorl
dec
pop
cmp
unpcklps
das
dec
test
cmp
stos
xchg
andl
nop
fisubrs
enter
stc
in
loopne
bound
div
xor
cmp
pop
push
push
dec
repz
js
mov
pusha
dec
mov
pusha
jb
sbb
jnp
jnp
xchg
pop
pop
xor
pop
aaa
repnz
pop
out
or
popa
jb
sbb
repz
gs
aad
les
sub
test
iret
lods
cli
inc
push
mov
ret
inc
jno
cwtl
jecxz
insb
into
imul
shlb
enter
mov
lret
xchg
dec
test
and
imul
cmp
xchg
hlt
xchg
sbb
cmc
xchg
pop
in
stc
ret
aaa
push
incb
sti
arpl
mov
and
and
mov
iret
lret
lods
pop
cmp
loop
and
mov
or
sbb
cmp
mov
add
lret
imul
xchg
mov
dec
dec
cmp
ds
mov
ret
data16
icebp
imul
mov
mov
mov
testl
or
or
fldcw
dec
pop
scas
jp
mov
bnd
call
xor
inc
popa
negb
jne
iret
lock
out
xor
dec
push
cmp
aad
mov
lock
enter
shll
xchg
shll
adc
movsb
loopne
push
test
nop
add
loope
out
out
jmp
enter
jecxz
iret
mov
add
mov
add
loop
pop
push
pop
aas
cs
shll
out
add
sbb
inc
lea
xor
sub
lds
jle
adc
jle
xlat
mov
dec
sub
arpl
xor
out
jp
gs
xor
mov
and
xchg
test
adc
xchg
ds
inc
lods
clc
lcall
mov
cmp
cmpsl
test
pop
out
ljmp
sbb
repnz
xor
js
test
jmp
inc
pop
test
mov
stc
pop
push
mov
or
or
es
inc
dec
cld
icebp
mov
test
jecxz
inc
mov
cmp
cmp
subl
movsb
rorb
xchg
or
outsl
arpl
mov
nop
cwtl
outsl
js
mov
xor
jno
dec
mov
popf
pop
repnz
enter
cmp
scas
sub
mov
jmp
mov
or
mov
inc
repz
pop
into
mov
jb
mov
jbe
mov
mov
mov
cld
lret
shll
addr16
enter
inc
daa
mov
notb
test
and
jle
adc
push
test
mov
jg
mov
sbb
push
sbb
pop
sarl
stos
mov
in
pop
or
push
mov
sub
push
sub
push
adc
pop
inc
adc
movl
and
mov
add
ficoms
cld
test
aas
jg
jle
lahf
aaa
xlat
in
jecxz
test
cli
pop
sbb
outsl
mov
mov
cli
xchg
popa
pop
push
nop
cmp
push
lret
daa
inc
inc
mov
hlt
xor
adc
fs
push
cmc
mov
repnz
adc
jbe
sti
gs
mov
das
mov
mov
and
jmp
jp
xchg
and
popf
stos
cmpsb
out
cwtl
sub
ret
andl
jns
jge
pop
add
inc
aam
mov
dec
adc
pop
cmpsl
fnstenv
cmp
andl
or
add
dec
hlt
das
mov
jae
pop
mov
push
lahf
push
ret
mov
xlat
cmpsb
sub
addb
lret
jae
ljmp
mov
jb
sbb
sub
mov
test
jo
mov
sbb
adc
xor
adcb
adcb
cmp
inc
hlt
incl
cmp
inc
mov
dec
iret
mov
incl
add
mov
jb
out
cld
sub
inc
and
pop
xchg
pop
lret
inc
imul
add
jle
imul
test
insl
fucom
adc
arpl
sbb
js
dec
and
adc
dec
out
and
or
sub
mov
js
rol
std
cmp
stos
inc
into
lods
aas
sbb
jo
jne
stc
add
arpl
fisubs
mov
ss
dec
xchg
jle
stc
xor
mov
push
mov
sub
or
push
pusha
pop
xchg
cmp
add
mov
nop
icebp
stc
fwait
inc
add
loop
xchg
cli
ror
sub
jae
sub
push
rolb
ljmp
and
cmp
lods
scas
xorb
mov
push
fxch
mov
pop
adc
lahf
std
movsl
xor
out
dec
fcomip
dec
loop
push
xchg
inc
cmp
pop
push
dec
fildll
pushf
and
pop
cli
mov
scas
js
or
movl
stos
xchg
and
iret
out
out
lods
lods
lret
lds
fs
clc
xlat
faddp
shll
pop
inc
cmp
inc
pop
inc
sarl
mov
ror
add
out
xchg
cmpb
int3
ds
xlat
outsb
push
jno
movsb
insl
flds
es
sbb
mov
in
fistpll
and
nop
loop
in
pop
ss
flds
ljmp
adc
rcrl
mov
dec
int3
add
arpl
dec
jns
jle
push
and
je
sbb
xor
rcrl
inc
pusha
inc
into
mov
jmp
les
stos
pop
pop
sub
sti
arpl
inc
jno
mov
push
dec
cld
addr16
repz
push
hlt
mov
sub
xor
mov
cmp
add
jo
dec
and
mov
xchg
jns
shlb
call
outsl
mov
pop
dec
lds
or
dec
jle
pop
pop
inc
sub
pop
and
or
jp
rcll
mov
cmp
jl
push
lds
dec
mov
push
hlt
bound
pop
push
aas
jae
sbb
dec
mov
lret
jg
sub
cltd
push
pop
inc
shlb
inc
aas
notl
sti
mov
xchg
stos
cmp
and
gs
addr16
out
aaa
mov
jge
push
jge
adc
jns
push
ficoml
std
inc
pushf
hlt
mov
push
test
jl
mov
pop
daa
sub
mov
jle
xchg
imul
lret
aaa
mov
jo
in
ja
cmpsl
stc
push
or
popf
mov
mov
lret
mov
sub
cmp
and
jl
out
adc
aad
mov
cmc
nop
sub
out
out
aaa
fs
bound
mov
dec
mov
jns
xlat
jmp
out
std
iret
out
outsl
popf
das
and
fbstp
cmpsb
xlat
dec
ss
pop
and
fistpl
fwait
add
pop
mov
adc
rol
xchg
in
jl
xchg
mov
scas
cmpl
sahf
mov
cmp
inc
xchg
adc
push
pop
adc
or
and
mov
syscall
sub
push
cmp
bound
xor
and
add
or
stos
jp
mov
pusha
or
call
push
lods
xchg
es
xor
hlt
add
es
pop
jo
hlt
sbb
dec
xor
and
cmpl
dec
je
inc
dec
in
adc
inc
pop
repnz
cmovs
test
lods
pop
imul
xchg
mov
add
xor
mov
push
mov
mov
in
push
cli
popa
test
inc
mov
lret
repz
out
cmc
dec
mov
shll
loop
cld
sub
pop
cmpsl
es
insb
or
push
jns
dec
adc
and
sub
mov
or
jne
nop
ret
sti
popa
adc
mov
jmp
mov
adc
dec
mov
lods
es
in
xchg
nop
faddl
pop
sbbl
mov
test
shll
ret
mov
lock
xor
rclb
adc
testl
out
pop
or
cmpsl
pop
sahf
rol
iret
fwait
mov
xchg
fnstenv
aad
xchg
addr16
mov
insl
lds
aas
xchg
test
jp
fiadds
out
ffreep
daa
add
adc
ret
lret
xchg
adc
test
into
mov
or
mov
scas
push
fdivs
aam
jb
adc
or
push
mov
popf
cmp
pop
jns
mov
sub
sub
jne
jp
pop
pop
ret
cs
lods
add
bound
loopne
mov
data16
mov
fnstenv
sbb
call
leave
pop
gs
xchg
fwait
mov
push
add
out
loopne
insb
call
xchg
ret
xlat
dec
rcr
adc
or
test
shll
pop
xchg
or
js
jns
sbb
xchg
outsb
lock
scas
test
repnz
nop
adc
mov
int3
jmp
xchg
loope
jge
mov
in
testl
mov
mov
test
adc
jno
cmp
arpl
insb
mov
sbb
jecxz
inc
mov
inc
pop
ficomps
sub
push
iret
dec
shll
cmp
js
dec
lahf
lods
jge
dec
adc
cmp
xchg
jl
outsl
xchg
mov
nop
jl
mov
mov
adc
or
arpl
int
lds
fldt
xor
fistps
test
xor
jns
int3
faddl
inc
dec
push
add
or
push
pop
xchg
add
xor
insl
inc
jae
pusha
mov
sub
loopne
push
xor
repz
jmp
cmpsl
xor
jns
clc
xor
addb
and
push
jmp
stc
std
rolb
jne
add
cmpsl
lret
jno
movq
arpl
xchg
mov
es
inc
mov
aaa
ja
in
adc
scas
mov
sbb
andb
jge
repnz
out
adc
lret
rolb
and
mov
rorl
adc
jmp
test
lcall
jg
roll
leave
idivl
aam
jo
mov
jle
pop
pusha
mov
sub
xchg
push
loop
xor
sub
stos
inc
sbb
xchg
ret
dec
lock
pop
scas
loope
out
mov
mov
push
inc
cmc
add
mov
mov
arpl
xchg
sti
sub
fimull
cs
or
in
jnp
xlat
mov
scas
sub
in
popa
es
in
shrb
sbb
push
mov
fildl
sbb
clc
call
or
add
add
mov
rcrb
ss
imul
or
arpl
clc
pop
cmp
subb
pusha
in
fimull
sbb
and
mov
pop
aas
cmpsl
xor
inc
addr16
cmc
repz
loope
lcall
sahf
nop
sub
mov
shll
xchg
mov
adc
arpl
xchg
lret
push
popf
mov
cmp
cmp
pop
repnz
push
fcmovne
int3
and
dec
add
insb
mov
xchg
adc
dec
leave
aas
cltd
inc
cmp
sbb
mov
and
sub
pop
pop
xchg
mov
das
pop
push
sub
daa
cmp
sub
outsl
sti
lock
roll
std
rcl
ljmp
dec
dec
scas
movsl
jmp
inc
inc
cmp
or
dec
movl
or
dec
inc
ret
mov
ljmp
lds
sub
outsb
and
addr16
xchg
xor
stos
mov
and
daa
aam
jecxz
jg
in
popf
adc
test
adc
incb
xor
inc
gs
and
lahf
mov
xor
mov
xor
test
dec
mov
jb
adc
cmp
push
in
add
test
jle
insb
cwtl
push
mov
pusha
xor
pop
or
sbb
scas
mov
lcall
push
xor
es
arpl
cs
ds
cmpl
jnp
shlb
pop
add
pop
cmpsl
je
mov
enter
dec
test
mov
mov
outsb
pop
jns
scas
jg
push
enter
js
adc
stos
lds
or
xorl
mov
movl
adc
mov
and
dec
push
xchg
cwtl
xchg
shll
fsubs
or
in
mov
pop
ret
mov
std
dec
or
xchg
adc
jmp
pop
xorb
or
jo
mov
sbb
outsb
mov
sub
fwait
sub
loopne
lret
adc
or
pop
jmp
roll
mov
mov
mov
aaa
mov
movsb
xchg
xchg
mov
xchg
inc
jle
xchg
push
es
fisubrs
pop
aam
test
sub
ret
in
hlt
pop
dec
mov
xchg
or
call
movb
sbb
in
add
filds
test
fidivs
imul
stc
xchg
test
jns
xchg
ds
js
shll
out
mov
js
into
fildll
inc
add
and
call
adc
es
dec
mov
adc
mov
stos
push
push
subl
inc
out
dec
cmc
jg
dec
in
fwait
jnp
xchg
aam
add
xchg
xchg
push
out
stos
and
mov
repz
lds
lods
scas
xorl
or
inc
pop
mov
jno
fsubl
and
aam
push
xor
mov
cmp
daa
mov
jo
adc
push
dec
cwtl
mov
into
jmp
adc
xchg
aaa
scas
mov
icebp
or
mov
add
loopne
and
das
mov
andb
jl
push
jmp
jae
iret
mov
daa
in
adc
cmp
dec
test
mov
adc
pop
xchg
push
pusha
push
imull
push
shlb
jo
push
xlat
mov
out
ja
sbb
xchg
xor
mov
xor
mov
mov
fmul
cmpsb
scas
les
push
mov
popf
mov
mov
hlt
pop
pop
push
sub
sbb
and
jnp,pt
push
xor
sbb
xchg
cli
xchg
pmuludq
adc
xor
cwtl
outsb
mov
add
hlt
dec
mov
inc
pop
push
cmc
add
ret
sub
sbb
lcall
jp
and
sbb
nop
cs
jmp
scas
jmp
sbb
dec
call
inc
adc
sub
in
bnd
lcall
mov
cld
dec
in
mov
mov
dec
push
int
cmpsl
jge
dec
out
mov
mov
cmp
cmp
loopne
jge
add
ret
sbb
lcall
sbb
cmpsb
cmp
aad
inc
pop
mov
add
cmp
jae
int3
sbb
cld
push
push
mov
test
jmp
jb
insb
shlb
jmp
cmpsl
push
xchg
imul
xor
leave
cs
xchg
in
test
push
ja
lock
movsb
lcall
mov
mov
xor
jmp
jbe
push
shlb
out
mov
inc
inc
and
cltd
sbb
shll
jge
scas
lea
enter
data16
push
mov
movsb
xor
mov
xchg
jl
mov
dec
jne
bound
mov
rcrl
adc
cmp
mov
das
mov
sbb
adc
mov
das
push
add
mov
mov
lahf
divb
dec
push
jb
mov
loope
subb
ficompl
jl
ljmp
adc
add
cmp
insb
and
xchg
fdiv
neg
leave
int3
sti
lock
xor
rcr
aaa
cmp
adc
les
test
xchg
xchg
mov
dec
scas
pushf
mov
sub
and
test
adc
out
and
mov
mov
mov
push
push
scas
loopne
out
loop
ret
cmp
dec
vmovupd
sbb
mov
leave
inc
fdivrp
mov
sub
dec
stos
pop
jo
ds
andl
ds
ds
xchg
xchg
mov
mov
mov
iret
in
inc
adc
pop
sbb
subl
sbb
out
and
sbb
loope
or
enter
add
dec
movb
call
lret
loop
aad
loope
cld
push
sti
xchg
jl
adc
mov
daa
and
add
xor
rcr
lea
sbb
or
popf
pop
clc
cmpsb
and
cs
push
hlt
add
add
ljmp
enter
mov
aaa
out
adc
or
sub
push
xor
das
xchg
inc
andb
sbb
mov
sbb
adc
je
jg
lret
or
xor
jo
lret
aad
lock
adc
jb
outsl
inc
mov
xchg
jg
mov
dec
xlat
pop
hlt
mov
fsts
loope
pushf
aad
stos
jg
push
bound
dec
das
hlt
rcrb
mov
into
and
mov
lcall
mov
and
and
pusha
dec
push
and
cmp
shll
mov
hlt
dec
test
test
or
aad
data16
addr16
adc
ficompl
add
mov
add
mov
mov
xchg
cmp
hlt
cltd
add
cmp
jecxz
push
loop
cmpsl
dec
pop
add
adc
pop
mov
mov
lahf
push
enter
sub
xor
stos
addr16
icebp
sub
ss
push
jbe
mov
js
cmp
xchg
scas
dec
cmp
pop
xchg
add
dec
push
sub
and
hlt
int
push
push
or
imul
adc
pop
fisttpll
inc
outsb
mov
js
daa
or
adc
mov
aad
push
test
aaa
cs
xor
cmpsl
cmp
mov
sbb
push
ds
inc
adc
js
lret
repnz
or
nop
imul
mov
jmp
insb
jbe
sub
popa
lods
inc
ss
pop
scas
das
stos
mov
jl
push
loopne
pop
push
orl
add
mov
popf
out
out
cltd
jecxz
stos
adc
dec
xorl
repz
add
imul
jno
mov
loopne
mov
and
ljmp
mov
in
or
out
sub
cmp
cmpsb
push
jge
adc
xor
dec
fdivs
xchg
aam
es
jnp
inc
add
jecxz
xor
in
cmp
movsl
mov
out
loopne
and
or
enter
jp
cld
dec
inc
sub
jno
sub
dec
pop
sbb
gs
cmp
push
xchg
cmpsl
scas
mov
adc
lret
and
cwtl
icebp
std
int
imul
or
bound
xor
fnstsw
sub
aaa
sbb
mov
or
insl
daa
dec
or
lock
mov
fnstcw
mov
aaa
outsl
mov
cmp
mov
xor
leave
outsb
mov
mov
into
pusha
testb
scas
ret
push
inc
mov
pusha
mov
xchg
imul
or
mov
rol
xlat
dec
rcll
ss
and
push
sti
mov
sbb
adc
aas
fwait
or
icebp
ret
cltd
fmull
dec
push
imull
rorw
mov
add
mov
sub
cld
push
lock
xchg
lods
push
ja
fdivs
imul
xchg
mov
and
dec
xlat
jne
push
movsb
mov
cmp
sub
je
xchg
xchg
gs
mov
push
pop
push
inc
sbb
adc
pop
mov
mov
addr16
inc
mov
js
push
cmpl
scas
bound
lods
inc
scas
and
mov
push
stc
ljmp
icebp
jg
xchg
sub
dec
jbe
push
mov
inc
cmp
pop
inc
jae
xchg
ret
xor
add
sub
cmp
cld
loope
push
mov
lcall
mov
aad
int
into
dec
je
dec
xchg
jo
jmp
shl
mov
movsl
or
int3
hlt
daa
out
insl
dec
adc
add
mov
or
fstps
add
adc
sti
xchg
mov
icebp
xor
xchg
imul
push
adc
rol
sbb
mov
sbb
imul
cwtl
fstpl
push
cmpl
dec
sar
fwait
js
jecxz
test
stos
aam
js
mov
add
shrl
push
and
push
cmp
mov
sarl
stos
popf
inc
fsubrs
insb
fimuls
mov
fcmovnbe
dec
sti
inc
out
test
nop
out
inc
repz
pop
xchg
cmp
mov
loope
cltd
sub
lods
lret
icebp
nop
xor
mov
dec
clc
out
fnstsw
movsb
movsb
push
xor
and
push
stc
sub
mov
jne
mov
jns
mov
pop
in
dec
out
ljmp
lret
mov
js
call
push
cwtl
and
popa
push
aaa
push
mov
xchg
cs
daa
inc
lret
icebp
pop
cld
mov
enter
jge
stc
cli
ja
pop
adc
pushf
lret
test
loope
adc
in
add
push
mov
add
sbb
jp
xlat
shll
loope
pop
movsl
mov
lock
test
lret
jae
cmpl
dec
sbb
insb
aad
add
and
jno,pt
outsb
mov
xchg
add
mov
and
mov
push
out
movsb
fstp
jp
jb
cli
std
mov
and
lods
pop
out
imul
sbb
sub
add
bound
int
mov
sbb
sbb
stc
clc
inc
jo
repz
je
sub
and
pop
jge
sbb
cmc
es
faddl
dec
xlat
or
popf
std
imul
lret
or
jnp
addr16
sbb
or
insb
push
cmp
pop
repnz
in
cmpsl
in
pop
test
into
push
xor
testl
sub
mov
cwtl
call
xchg
insl
stc
cs
adc
lods
outsl
mov
stc
sbb
fidivl
enter
jmp
stc
pop
in
xor
mov
push
cwtl
dec
stos
int
jg
test
jb
lods
pop
sbb
nop
mov
and
shrl
jg
or
or
lret
sub
jecxz
mov
dec
sub
mov
mov
cld
aas
stc
xchg
sbb
cmp
call
sub
add
in
push
jb
add
or
jle
xor
pop
jns
insl
xor
fucomip
sub
loop
shrb
test
fwait
and
pop
imul
mov
enter
inc
ja
lods
aam
add
and
sbb
and
ror
sbb
out
sbb
sbb
cmp
mov
jmp
clc
mov
aad
pop
or
push
push
std
rorl
and
int3
test
pop
adcl
push
jg
cs
cmc
mov
test
xchg
cmp
or
sub
push
outsb
cmp
inc
stos
ljmp
sub
mov
push
imulb
sub
or
je
mov
or
xlat
insb
inc
cmp
sbb
and
scas
sub
add
sbb
call
cmp
or
xlat
out
lods
push
sarb
inc
adc
xchg
loop
rcrb
xor
add
push
sbb
subb
push
fdivr
orb
les
fs
jno
mov
pop
in
es
fadds
in
cmp
in
sbb
dec
push
mov
lds
cltd
mov
loope
fmuls
sbb
mov
cmp
dec
movb
movsb
jmp
and
test
inc
pop
or
dec
pushf
lret
pop
popf
movsb
pop
cmp
xchg
mov
cli
xlat
sub
mov
scas
addr16
rcl
scas
std
clc
push
jo
in
mov
iret
sub
cmc
in
int
pop
mov
adc
lret
fistps
jg
push
les
inc
fistps
jbe
orl
jl
cli
es
jmp
jnp
pop
mull
add
xor
pop
xchg
test
repnz
and
ret
jae
inc
cltd
fidivl
mov
sub
dec
pop
cmp
int3
mov
sub
imul
sub
mov
aad
dec
rcr
fs
sbb
mov
mov
jbe
fcomps
mov
subl
notl
xchg
cmpsb
push
dec
out
xor
xor
sbb
insb
mov
mov
xchg
cli
enter
push
fidivs
test
lret
push
fwait
cmp
fwait
lret
icebp
pushf
sahf
mov
subb
das
lock
mov
xor
xlat
cmp
fwait
mov
add
add
add
sbb
ljmp
add
int
stos
loop
xchg
jbe
add
cmp
loop
push
pshufw
dec
mov
or
stos
sub
inc
mov
hlt
dec
mov
je
je
daa
mov
jns
sarb
and
fdiv
je
sbb
mov
adc
mov
mov
fs
xor
inc
xor
inc
stc
jo
cmc
or
arpl
lods
adc
xchg
fs
and
dec
jbe
jo
test
rorl
jb
pop
push
or
jle
shl
pop
rcr
fimull
cld
pop
adc
dec
out
pushf
fwait
pop
lock
adc
cmc
xorb
xchg
jae
imul
jns
test
push
mov
hlt
mov
jne
fsubrp
push
data16
lcall
xor
adc
xor
bound
adc
in
push
lahf
cmpsb
mov
and
ds
jecxz
aas
jnp
fcom
clc
mov
jno
popa
pop
sbb
push
push
test
scas
std
nop
insb
cmc
and
outsl
or
mov
xor
iret
mov
in
jl
repz
sub
sub
repnz
repz
fdivr
daa
pusha
inc
mov
dec
add
push
js
mov
int
pop
adc
mul
out
cmp
sbb
xor
scas
das
add
mov
mov
shll
push
orl
cld
or
dec
pushf
mov
add
ret
iret
or
push
ret
in
push
dec
sub
leave
mov
adc
pop
fcmovu
sahf
add
adc
cmp
dec
loope
sub
icebp
shlb
mov
loope
andb
cltd
sbb
aaa
clc
push
jne
mov
jge
inc
push
jne
cmp
sub
sub
mov
jecxz
adc
cltd
out
out
pop
add
cmp
in
sti
jl
mov
mov
dec
push
test
int3
and
push
mov
jno
icebp
sti
push
in
add
push
push
stos
pop
sub
negb
imul
push
pop
aam
add
pop
and
popf
mov
mov
inc
mov
ja
rorb
out
shlb
divl
aaa
mov
outsl
sahf
mov
sbb
xchg
inc
push
mov
pop
dec
popa
cmp
xchg
fcompl
cltd
xchg
js
xor
push
add
push
xchg
rcrb
aas
fmull
jae
andl
in
mov
pop
outsl
stos
push
xor
push
pop
mov
stos
cmc
ret
dec
and
inc
mov
mov
movl
ss
into
add
loop
pusha
mov
jns
icebp
dec
adc
insl
jae
lds
push
pushf
cmp
or
std
xlat
cmpsl
jmp
mov
push
enter
je
fucomi
lret
pop
pop
inc
push
rolb
fists
int3
jle
out
pop
pop
repz
dec
daa
std
repz
shlb
rorl
push
dec
lret
insb
cli
out
out
arpl
push
jbe
js
sbb
sub
inc
push
in
sub
sbb
sub
mov
test
xchg
inc
std
xorl
mov
rcrb
mov
cwtl
cmp
stos
xchg
aas
adc
dec
fldcw
or
push
mov
xchg
sbb
push
fmul
dec
fwait
xchg
movsl
fnstenv
or
outsb
lds
pop
in
std
fadds
jl
scas
xor
or
ret
shl
clc
iret
pop
fistl
stc
or
xchg
push
push
mov
std
clc
nop
test
inc
fadd
adc
sub
inc
imul
mov
jb
mov
pop
adc
rcll
xchg
pop
jecxz
cmp
pop
jae
testb
pop
xchg
jp
pop
cmpl
xlat
push
mov
pop
imul
mov
lods
xchg
jecxz
mov
mov
pop
lods
and
add
or
push
sub
mov
cmp
and
test
mov
and
push
shll
addr16
addr16
push
push
jmp
and
jp
pop
stos
jge
xchg
inc
sbb
cld
je
in
dec
fisttps
push
mov
out
sub
rcll
mov
jp
or
in
jbe
fadd
jo
test
xor
mov
jg
stos
lea
mov
fildll
out
push
outsl
leave
adc
enter
jnp
jns
shll
int
cld
sarl
in
adc
push
jno,pn
ds
out
sbb
add
in
in
jbe
cmp
fists
push
xchg
ja
inc
paddsw
jl
jns
or
lret
addr16
testl
xorl
fistpll
mov
xchg
pusha
pop
push
or
iret
mov
jmp
bound
xchg
mov
sarb
add
sti
sbb
in
mov
sbbl
cmpl
aad
sbb
pop
idiv
popa
call
clc
sti
push
pop
lcall
add
cld
xchg
cwtl
mov
mov
inc
and
call
rorl
lret
leave
xchg
sbb
cmp
mov
pop
ja
pusha
cli
xor
es
inc
push
jb
mov
push
clc
in
mov
ja
cs
push
lret
sub
iret
aaa
sub
adcl
xor
cmp
and
xchg
mov
stos
jo
addr16
cmp
je
outsl
mov
rcll
mov
mov
mov
outsl
nop
int
int3
insl
ljmp
jecxz
push
cmpsb
in
aaa
icebp
ljmp
jne
push
cltd
in
dec
mov
sbb
outsb
mov
cmp
cmp
xor
in
jo
addr16
sub
jmp
jnp
mov
xor
imul
in
or
call
test
xor
jno
jo
fs
jns
pop
fucom
mov
mov
dec
dec
mov
cli
scas
arpl
pop
pop
dec
pushf
insb
pop
pop
in
mov
arpl
dec
jmp
pop
push
fdiv
xor
insb
test
jo
sub
jne
jecxz
xchg
frstor
jnp
loopne
int
jmp
and
add
stos
dec
jne
xchg
enter
arpl
sti
mov
and
mov
jge
add
jns
mov
jmp
loop
out
add
push
push
not
cmc
cli
and
loope
pop
mov
ret
xchg
es
test
mov
pop
xchg
nop
or
and
lahf
mov
imul
lret
cmp
sbb
or
lret
push
xor
popf
cmp
mov
test
jle
stos
xchg
push
mov
jae
fwait
add
mov
cmp
out
in
pop
pusha
jl
xchg
cmp
shlb
lds
daa
outsb
xor
out
sti
jg
sti
lahf
pop
sub
cmp
fsubrl
and
pop
sar
int
push
clc
mov
stos
sub
dec
sub
insb
stos
ds
loop
push
aam
jmp
adc
mull
push
mov
lcall
lds
mov
ds
push
aaa
inc
pop
lock
pushf
mov
rcrl
call
stc
add
xor
gs
push
mov
inc
jne
loope
mov
add
pop
stos
mov
lods
dec
and
dec
ret
scas
push
mov
cmpl
arpl
rolb
add
jae
ret
ret
outsl
fs
add
adc
fcompl
push
mov
mov
inc
sbb
aam
popf
mov
popf
dec
outsl
js
sbb
adc
inc
sbb
xor
mov
es
rorb
push
mov
inc
in
leave
cmp
std
and
mov
push
ljmp
add
push
ds
cmp
iret
pop
cmp
add
fmuls
das
xlat
mov
in
mov
jmp
mov
jecxz
repz
push
push
push
ja
imul
out
arpl
ss
out
test
jp
mov
jae
pop
lock
push
or
pop
mov
ret
mov
push
js
cs
sahf
or
repz
dec
inc
dec
in
rorb
pop
mov
loope
in
testb
sbb
xlat
popa
pop
push
cli
scas
imul
jp
mov
subb
into
xchg
mov
std
pop
jne
cmpsl
mov
in
daa
pop
adcl
push
call
popa
inc
push
mov
je
sub
clc
inc
loope
jb
loop
fisttpl
lods
push
leave
and
scas
call
xchg
adc
pop
icebp
test
mov
jecxz
scas
jp
pop
adc
cmc
pop
out
pop
cltd
or
push
jle
jnp
in
cmp
xchg
dec
jle
mov
lock
push
sbb
lahf
inc
movsb
pop
push
pop
out
jecxz
sub
mov
push
in
sub
dec
movsb
xchg
movsl
add
sub
push
test
sbbb
mov
sbb
jo
dec
push
inc
add
insl
dec
popf
mov
movsl
shlb
aas
stc
cmc
pop
negb
insl
mov
cltd
lods
movsl
add
sbb
je
aas
arpl
shll
mov
lods
push
push
add
hlt
dec
in
mov
je
pop
int3
mov
ficoml
sub
cmp
sub
pop
push
popf
aam
lods
emms
cmp
sub
or
aad
test
xchg
xchg
imul
push
sub
shll
mov
cmc
lret
add
and
mov
ficompl
inc
test
mov
cmp
jecxz
adc
jae
push
nop
jmp
sbb
ds
lahf
popf
pushf
push
xor
in
fnstcw
mov
jne
movsl
ljmp
stos
imull
aad
push
push
in
mov
or
test
jp
je
sbb
cltd
xchg
inc
idivl
pop
add
jmp
xor
pop
jmp
xchg
pop
fnstsw
les
xchg
adc
jp
testb
mov
cmp
pusha
adc
mov
push
push
mov
loope
fdivrs
dec
div
dec
js
out
add
mov
fldenv
cmc
adc
outsb
loopne
sarl
xor
into
das
adc
fistpll
push
mov
hlt
fiaddl
adc
stos
repnz
mov
out
mov
dec
movsl
inc
out
sub
mov
jb
out
dec
sbb
repnz
inc
inc
add
iret
testl
mov
pushf
sub
je
sahf
inc
insl
xor
nop
sar
lcall
gs
mov
cmp
fadd
inc
cltd
es
and
js
lds
cli
push
mov
into
out
imull
jle
or
jnp,pt
xor
xor
jg
xlat
nop
sbb
push
testb
bound
daa
push
add
loope
or
pop
jge
cld
jns
add
cld
sub
cwtl
lods
loope
or
sbb
iret
js
inc
xchg
jp
inc
push
push
mov
outsb
push
pop
sahf
lret
adcb
add
jmp
int
out
dec
jns
clc
repz
push
mov
jmp
push
pop
outsb
ljmp
icebp
cmp
outsb
shlb
xchg
shrl
jecxz
cmp
fsubrs
mov
pusha
cmp
sbb
mov
add
or
lds
int3
inc
adc
push
daa
cltd
out
icebp
mov
jnp
xor
fldl
ffreep
push
fwait
sub
shlb
xlat
or
popf
cli
xor
xchg
cmp
jns
sbb
inc
into
inc
pop
sbb
cmp
insb
cmpl
repnz
fmull
adc
mov
pop
cltd
or
xor
sub
test
std
repz
lods
cmp
jle
ja
es
mov
cmpl
rcrb
addr16
mov
shrl
jo
popf
mov
and
pop
mov
add
rcr
addr16
sbb
cli
daa
inc
mov
jl
movsb
sbb
jo
test
xchg
cmp
jb
leave
stos
loop
rorb
out
test
inc
clc
and
ljmp
xor
repnz
sbb
xchg
or
repnz
mov
pop
rorl
mov
fdivs
inc
cmc
adc
and
inc
rcrl
pop
cmp
in
fiaddl
push
outsl
sbb
test
push
sub
adc
int
das
in
aad
xchg
pop
jae
push
mov
pop
mov
rcrb
inc
jb
mov
and
pop
dec
hlt
adc
mov
xchg
lret
outsb
gs
mov
fmuls
lea
mov
xchg
fidivrl
cmp
push
jne
mov
pop
or
nop
inc
jns
pop
outsb
cmp
mov
outsb
insb
dec
in
push
inc
addr16
mov
adc
jne
jl
mov
push
or
repz
out
cmp
or
rcrl
popa
loope
push
pusha
add
int
and
call
ret
pop
push
mov
push
lea
dec
jno
iret
pop
lret
pop
sbb
dec
or
dec
dec
ljmp
dec
and
inc
mov
aad
adc
mov
jp
or
fisttpll
int
repnz
sub
lret
stc
cwtl
sub
dec
cmpsb
sbb
xchg
stos
into
inc
cmpb
and
mov
dec
add
cmpsl
xor
scas
mov
aam
cli
scas
inc
lds
mov
cmc
fcomp
add
jo
outsl
adc
outsb
mov
test
sub
stos
jae
push
pop
lods
mov
bound
dec
xchg
sbb
mov
andb
into
test
or
push
xor
leave
xchg
sub
pop
jno
ss
push
adc
push
or
xor
add
sub
pop
jmp
incl
out
xlat
std
mov
fldenv
xor
cltd
cmp
outsb
in
dec
xchg
bound
mov
arpl
jae
push
xchg
push
push
stos
push
dec
pop
ss
push
add
rorl
mov
adc
mov
stc
repnz
inc
jle
xor
decl
insb
push
dec
add
mov
push
enter
imul
xchg
pop
jmp
sarl
dec
cmp
data16
push
in
sbbl
mov
rclb
push
adc
jb
scas
dec
aad
mov
into
sbb
je
jmp
pop
inc
les
jl
addr16
dec
jecxz
mov
rol
mulb
or
mov
lods
in
cs
add
mov
push
imul
push
js
ljmp
push
mov
pop
and
pop
lahf
leave
pop
adc
in
icebp
jp
data16
lds
in
lods
and
in
lods
loop
mov
in
xor
jbe
sbb
push
rcrb
mov
sbb
mov
js
sbb
dec
push
mull
or
lret
je
std
xor
inc
jo
aad
bound
sti
mov
jo
loopne
pop
add
pusha
push
mov
into
sbb
jl
sahf
dec
fsubrl
add
pop
jl
and
or
fdivs
jg
test
outsb
xor
subl
lods
pop
pop
or
imul
rep
movsb
dec
shll
rcrb
mov
stc
dec
fst
xor
push
movsb
pushf
adc
cwtl
out
xchg
in
lods
sbb
add
pop
adc
ds
push
push
mov
adc
enter
arpl
and
ret
pop
das
push
jmp
lock
js
add
xchg
xlat
mov
mov
jl
cmp
add
xchg
pop
jbe
pop
dec
lea
xchg
test
out
mov
jno
xchg
scas
inc
jae
lcall
ret
outsb
sbb
sbb
out
sahf
pop
repz
roll
cwtl
mov
vpmacsswd
or
inc
cmpsb
dec
stos
pop
stos
out
mov
add
push
sbbl
dec
stos
push
and
sbb
cmpsw
lea
jnp
lret
aad
and
lahf
pop
test
outsl
test
mov
fldpi
sub
jo
sbb
push
scas
pop
push
inc
enter
adc
pop
in
or
ret
dec
sub
adc
jbe
cmp
dec
or
push
enter
bound
mov
hlt
sbb
adc
stos
rcrl
push
scas
mov
mov
xor
fcom
and
push
out
test
and
xor
gs
or
jl
mov
outsl
jns
in
stos
js
repz
data16
not
js
js
and
pusha
xchg
in
mov
test
adcb
daa
ficoml
add
inc
pop
out
in
xor
in
push
shlb
nop
xor
cmp
fidivs
adc
jne
imul
mov
xor
push
and
jns
xchg
sbb
mov
test
in
pushf
notl
dec
jecxz
pop
pop
stos
es
cmpsb
jl
mov
cmp
xor
mov
push
fsubrs
in
shl
dec
cli
adc
push
rcrb
sub
lret
sahf
inc
jb
pop
out
cmpsb
aaa
popf
xchg
movsl
sbb
or
mov
or
push
pop
int3
pusha
fisubs
sub
inc
ja
test
jmp
xchg
pop
aam
mov
scas
dec
jmp
jb
cld
jecxz
notb
push
sub
xchg
and
mov
xor
mov
daa
mov
xor
ss
sbbl
xor
dec
into
mov
stos
std
out
stos
test
jmp
xchg
or
mov
imul
cs
mov
mov
add
jo
fimull
lods
out
adc
lods
or
jne
dec
xor
ret
repz
push
dec
inc
cmp
xor
sub
rorb
stc
dec
aaa
adc
rcrl
shlb
jbe
mov
dec
jmp
sub
mov
into
inc
ss
add
fimull
insb
lea
in
addl
movsb
cltd
lock
stos
jo
cld
test
clc
mov
or
inc
jmp
xor
int3
xchg
aaa
hlt
xor
mov
push
add
dec
outsl
cmp
in
mov
fisubrs
push
stc
xchg
rcr
fwait
add
sbb
jg
mov
fstl
inc
xchg
cmp
rcrb
lods
xchg
out
fnsave
lods
fildll
into
nop
mov
es
xor
idivb
wbinvd
enter
jnp
int
out
addr16
and
nop
pushl
xchg
popf
pop
imul
cmpsl
in
pop
pop
xchg
cld
sbbb
jbe
push
jne
out
jbe
mov
mov
incb
pop
repz
add
xchg
cmp
jno
scas
xchg
pop
fdiv
mov
jnp
push
jecxz
shlb
ljmp
sbb
ret
and
fs
lds
fsubrp
inc
jg
mov
movsb
mov
mov
or
sub
addr16
sub
xchg
outsb
cmp
adc
enter
jmp
mov
int3
xchg
mov
jns
shrb
xorl
sahf
jne
sbb
jp
fisubs
out
out
bound
mov
aam
jl
pusha
xor
cmp
clc
or
roll
push
jg
cmp
cld
fwait
stos
xchg
mov
in
lea
and
or
xchg
xchg
sub
adc
js
mov
cmp
imull
cmp
es
filds
adc
jp
lods
sti
fwait
sarl
mov
sub
sahf
fnstenv
push
adc
cmp
icebp
daa
mov
mov
lds
out
and
adc
adc
sub
mov
add
jns
xchg
add
ljmp
testb
mov
sub
mov
pop
shrb
xlat
add
or
lret
nop
ds
xchg
outsl
testb
scas
xchg
sbb
fistl
int3
aad
dec
outsb
fsts
fisttpl
pop
adc
or
push
clc
enter
xor
ljmp
incl
cwtl
jp
cmpsb
and
and
mov
cmp
leave
add
in
ret
mov
mov
inc
sub
push
je
mov
xchg
mov
mov
and
adc
int3
xor
inc
jnp
mov
sahf
das
loop
in
xchg
mov
push
scas
xor
call
movsl
jl
dec
adc
pushf
jmp
adc
and
imull
mov
das
fnsave
adc
adc
jne
mov
incl
xor
mov
xchg
call
xor
inc
fidivl
repz
mov
push
insl
sub
mov
mov
fnstenv
sbb
int
cmp
push
daa
loopne
ljmp
test
fwait
add
jne
push
adc
mov
test
into
xchg
shll
pop
xor
in
pop
ja
pop
dec
xchg
add
les
dec
testb
mov
mov
in
xchg
imul
jecxz
pop
repnz
gs
in
jmp
push
mov
scas
xchg
pop
je
push
mov
push
cmp
inc
pop
insl
sub
and
mov
and
push
mov
dec
repz
shll
fninit
adc
iret
scas
fstpt
push
mov
cmc
mov
repnz
dec
mov
sub
pop
rorb
out
cli
clc
ret
test
inc
jb
and
adc
mov
nop
lods
mov
sub
xor
pop
mov
cmp
imul
push
xor
push
push
lret
push
adc
jl
ljmp
fs
mov
cmc
cmc
mov
push
cld
fcoms
and
cs
out
jmp
jmp
dec
aam
negl
movsl
mov
sub
jne
xor
pop
dec
mov
mov
clc
mov
ret
xlat
jns
pop
sahf
inc
shufps
cld
mov
iret
test
scas
mov
test
pop
fdivrl
in
sub
loop
cmp
lret
jp
mov
mov
dec
roll
leave
out
or
sbb
mov
sub
lds
iret
shrb
mov
sbb
call
jnp
sarl
xchg
imul
and
insb
std
sub
add
adc
test
mov
mov
xchg
inc
dec
and
cld
nop
sbb
dec
adc
jmp
test
pop
scas
loop
xor
sbb
or
or
fwait
stos
decb
and
or
fcompl
xchg
and
outsb
repz
sarl
arpl
sbb
sub
xchg
xor
jmp
xlat
jbe
dec
hlt
inc
std
sahf
lret
sub
pop
mov
adc
test
xlat
nop
jno
insl
sub
inc
popl
jae
sub
cmp
sub
jne
les
push
out
imul
repz
mov
adc
ss
sub
adc
lods
add
mov
or
leave
sar
pop
mov
add
clc
ret
fsubl
hlt
push
or
fs
or
pop
pop
inc
xor
ficompl
std
mov
cmc
fs
xorb
adc
inc
cmp
push
and
nop
sahf
push
scas
xchg
mov
rcr
dec
pop
je
pop
cmp
int3
cld
push
fnsave
pop
jg
push
addl
dec
mov
test
and
inc
rol
and
rcrl
movsl
nop
cmp
inc
lret
add
call
mov
cs
push
insl
cmp
std
cmp
inc
push
inc
es
fucomip
mov
jl
xchg
push
bound
xor
xor
imul
mov
loopne
pop
es
mov
lcall
or
dec
adc
les
lcall
push
jmp
std
test
in
lcall
adcb
push
cld
ret
push
popf
jecxz
push
mov
sbb
jge
xor
cmp
bound
mov
das
incl
dec
popa
bound
jns
or
jle
es
pushw
idivl
push
xor
dec
sar
aam
jbe
notl
in
dec
in
pop
mov
dec
add
fwait
inc
sub
xchg
loopne
or
add
sbb
fs
sarl
jp
jnp
shll
push
lret
jne
clc
cmp
popf
adc
insl
stc
aam
jb
mov
mov
and
mov
inc
mov
xchg
cmp
pop
or
jne
add
les
adc
mov
lock
or
jl
or
mov
daa
xlat
ja
addl
in
ljmp
rol
std
outsl
fldenv
insb
sahf
jb
nop
push
aad
sub
lahf
mov
pop
in
pop
cmpsb
int3
lods
shlb
shlb
sub
ret
sub
dec
js
xchg
xchg
in
arpl
mov
loope
cld
orl
pop
jo
mov
loopne
xor
ja
mov
jge
or
and
in
jno
add
or
negl
clc
stos
push
lock
cmp
aas
testb
dec
inc
repnz
sbb
xchg
adcl
subb
sub
loopne
inc
scas
imul
loop
sbb
popf
push
pop
sbb
xor
decb
add
mov
jbe
inc
pushf
sub
fmuls
adcl
mov
push
sub
movsl
fwait
xchg
daa
inc
jne
mov
dec
adc
pop
mov
xor
in
sbb
push
sbb
xchg
add
dec
fsubl
adc
jge
cmp
fdivl
sub
xor
fisttps
xchg
pop
pop
xor
add
adc
mov
test
pop
push
in
pop
fdivrs
out
fwait
popa
popa
pop
dec
jge
loopne
or
and
mov
mov
pop
clc
push
nop
mov
hlt
std
push
xchg
div
sbb
mov
ret
or
xor
jo
je,pn
mov
ja
lock
sbb
aas
lcall
sbb
in
or
pop
and
data16
es
xchg
push
xchg
push
add
into
inc
pop
xchg
xchg
lcall
lcall
sbb
cmp
test
xor
cs
icebp
mov
mov
int
push
sbb
shll
outsl
scas
xchg
mov
push
out
pop
lea
repnz
mov
add
push
aam
sbb
jb
xchg
punpcklwd
push
xchg
lock
jmp
mov
sti
dec
sbb
ds
std
imul
lods
cmp
or
push
cli
nop
inc
mov
cmp
dec
fucomp
scas
test
repnz
loopne
jae
outsb
ret
shlb
mov
out
mov
fstpt
mov
sbb
xor
std
xor
jge
pop
loopne
mov
sub
and
sar
lock
add
xorb
inc
mov
es
addr16
lods
adc
xchg
das
mov
adc
negl
cmp
test
sbbl
jnp
rep
aad
orb
pop
pusha
ret
ja
clc
and
out
fnstcw
cmp
mov
cmp
fwait
mov
mov
jp
shrb
das
jnp
cmc
fs
fiaddl
mov
repnz
or
cmp
in
and
js
dec
cmpsl
enter
mov
lretw
lods
lret
xor
in
stos
leave
xchg
cs
jb
mov
pop
fcomp
mov
push
stos
jmp
inc
sbb
push
dec
mov
ja
jb
adc
mov
aad
imul
push
xchg
adc
loope
or
pop
xchg
fists
or
add
addb
shr
fstpt
scas
lods
lret
cmp
add
xchg
movsl
jns
iret
jg
lret
mov
add
inc
mov
dec
dec
mov
lds
mov
outsl
sub
push
addr16
ljmp
sub
jmp
repnz
fstl
cmp
call
movsl
je
mov
pop
inc
adcw
shll
cmp
lods
loope
inc
into
jo
mov
aaa
gs
scas
pop
imul
mov
js
loopne
add
pop
push
sub
aad
ja
rorl
push
lahf
test
es
iret
or
dec
gs
not
imul
mov
popa
sbb
add
xchg
pop
in
out
loope
stos
push
pop
ja
sbb
jecxz
faddl
subb
inc
cmc
push
les
mov
xor
jle
xchg
fdivl
ficoms
mov
les
loope
pop
nop
push
test
xor
lcall
pop
xchg
jb,pn
push
fbstp
and
xor
imul
sar
std
pop
cmpsl
xchg
addr16
add
dec
outsb
mov
cmp
pop
repz
mov
mov
ja
stc
stc
mov
pop
mov
cmp
int
sub
pop
mov
or
inc
jl
xchg
dec
mov
sarb
pop
cmpl
inc
mov
or
and
rorl
jae
daa
add
sahf
faddl
je
shlb
push
jmp
dec
jmp
adc
outsb
push
repz
add
dec
xor
sub
rorb
push
test
pop
rcrl
cmp
jecxz
dec
sbb
bound
fs
pop
cltd
scas
sub
bound
xchg
iret
xor
dec
aas
jb
gs
lea
andl
popa
rorl
pop
mov
lods
pop
into
movsb
jmp
dec
fisubl
mov
cmp
inc
and
icebp
sarb
cmp
bound
cmp
pop
daa
test
xchg
push
jge
cld
add
fildl
outsb
add
adc
xor
cltd
pop
mov
movsb
pop
dec
or
mov
push
jae
jo
fnsave
outsb
xchg
mov
cmp
arpl
jb
pop
adc
pop
js
dec
jg
inc
es
sbb
lret
cmp
dec
je
mov
xor
repz
int3
insl
and
popf
js
lahf
sub
mov
dec
lret
sbb
in
rolb
lock
aaa
je
movsb
push
xor
fsts
sbb
jae
sbb
dec
sti
push
imull
jb
push
jnp
pushf
jbe
outsb
and
push
pusha
sub
ret
sub
sbb
mov
xchg
das
movsl
cmp
or
mov
push
aam
xlat
sahf
sub
rclb
imul
lcall
outsl
pop
cmp
std
int
push
cmpsb
sbb
sub
push
repz
sbb
out
sub
scas
sbb
or
fists
imul
cmp
fstpt
int
adc
clc
inc
jo
jecxz
adc
xchg
push
or
in
inc
imul
divb
cmpb
faddp
inc
sub
dec
lcall
insb
dec
lcall
jo
rcll
dec
jmp
push
jmp
mov
setp
aam
call
add
lods
pop
es
xor
fcoml
xor
sub
je
sahf
leave
sbb
xchg
aas
mov
xor
ljmp
testl
inc
inc
adc
push
iret
pushf
inc
add
jb
in
stc
cmp
pop
adc
mov
lds
repnz
or
mov
mov
or
mov
in
xchg
repnz
addr16
add
xchg
pop
add
lea
aaa
inc
and
push
push
cmp
mov
cmp
add
pop
cli
push
mov
cmovnp
sbb
insl
dec
fdivrs
in
pop
xchg
mov
mov
int3
and
fistpll
roll
xchg
iret
pop
loopne
and
sbb
mov
insb
mov
jne
addr16
mov
mov
fimull
sbb
cmp
mov
mov
pop
xchg
mov
xchg
mov
arpl
mov
sub
mov
movsb
bound
mov
mov
mov
mov
andb
push
lahf
pop
pop
sahf
pop
mov
gs
mov
mull
jns
leave
xchg
mov
inc
inc
outsb
adc
cmpsl
lds
inc
jns
stos
mov
lods
mov
nop
lret
cmp
mov
scas
enter
mov
fiadds
loop
in
xlat
imul
movsb
test
mov
xchg
lods
out
mov
xchg
lds
sbb
inc
sbb
mov
jae
jbe
adc
sarb
push
jmp
sub
fcoml
mov
lahf
sub
dec
xchg
adc
pop
in
sbb
negb
add
cld
outsb
rclb
or
pushl
pop
xchg
fdivrs
push
dec
xchg
mov
and
jb
pop
mov
hlt
dec
decb
mov
ret
mull
xor
adc
jno
cs
ljmp
cs
cmp
clc
mov
insb
inc
icebp
cmp
std
adc
ss
fwait
mull
or
xchg
xchg
imul
lea
mov
mov
es
pusha
jnp
cmp
in
loopne
aaa
pop
cltd
insl
lock
adc
xor
fcoml
leave
mov
add
cld
stos
xor
repnz
jbe
insb
push
mov
xlat
and
insb
fcmovnbe
les
sar
repz
in
insb
xchg
add
push
cmpl
sub
xchg
sbb
lret
cmp
enter
cmpsl
xchg
idivl
jmp
aam
out
xor
adc
mov
xchg
adc
movsb
adc
test
dec
jp
mov
mov
jo
cmp
scas
dec
js
dec
push
in
orl
dec
fisubl
daa
push
int
mov
jnp
inc
or
jbe
push
mov
fcmovne
stos
jg
inc
inc
or
mov
cmp
jbe
negb
imul
add
sbb
push
sbb
inc
jo
cmp
fildll
adc
bound
cmp
ss
push
rcr
add
and
dec
sahf
mov
xor
add
jp
sbb
movsl
cmovle
fmuls
lret
mov
sub
cs
dec
cmp
xor
pop
in
jb
cmp
dec
push
xchg
popf
add
fistl
arpl
stos
cmp
push
add
stc
push
add
test
cltd
sub
movsb
xchg
gs
ss
push
mov
mov
fisttpl
push
pop
fcoms
dec
push
ret
dec
fisubl
jl
or
xor
sbb
mov
adc
adc
mov
cmc
outsl
jne
scas
adc
mov
ret
pop
call
push
dec
or
or
sbb
repz
cmpsl
cmpsb
test
and
adc
mov
inc
dec
enter
or
adc
push
or
jb
test
in
in
movsl
out
pop
imul
xchg
data16
aaa
movsl
and
int
sub
aaa
sbb
lcall
movsb
pop
jne
inc
dec
sub
jne
out
mov
push
xchg
sub
mov
add
jle
nop
xchg
lcall
test
stos
sbb
mov
sarb
int3
mov
inc
mov
ret
or
adc
test
push
ljmp
stos
mov
or
or
out
imul
and
mov
add
mov
sub
cmpsl
jne
movsl
mov
cld
ficompl
or
rcr
xchg
cmp
fisttpl
ja
xchg
fstp
jo
test
mov
gs
in
lock
gs
adc
push
or
xchg
daa
pushf
pop
imul
insb
jae
shrb
ljmp
popf
popa
cmp
in
jno
jl
adc
mov
fildll
outsl
sub
stos
into
out
mov
mov
in
push
test
push
push
inc
push
outsb
sarb
adc
xchg
jl
sub
and
add
adc
in
or
jle
xor
sub
fnstcw
sbb
push
les
push
and
dec
add
cmp
sbb
adc
add
xchg
push
je
pop
push
loope
push
sahf
pop
repnz
insl
mov
cmpsb
xchg
daa
xchg
jle
adc
jbe
mov
xor
push
int3
lods
repnz
push
adc
ret
adc
and
cs
jno
add
nop
mov
add
cmp
int
fsts
jle
jno
hlt
dec
rol
sti
lahf
idivl
outsl
imul
xchg
cmpsb
lds
pop
lods
lods
pop
imul
jae
movsl
cmp
xor
movsbl
xchg
leave
lods
mov
cmp
icebp
stc
adc
bndldx
popa
jae
test
cs
leave
fsts
mov
std
mov
fdivrs
cmpsl
mov
jl
jecxz
jecxz
in
data16
xchg
pop
sbb
sbb
in
push
and
lahf
in
fldl
stos
lretw
jge
arpl
daa
dec
adc
test
fistpll
rcrl
pop
stc
and
mov
push
fsubrl
daa
add
int3
mov
inc
repz
dec
movsl
aaa
cmpb
mov
sbb
cli
xor
or
mov
adc
dec
mov
push
sti
pop
push
clc
andl
clc
nop
mov
rclb
jle
sub
jne
outsb
cwtl
vsubss
xchg
cmpsl
arpl
dec
push
shll
push
xchg
xor
gs
or
and
xor
xchg
inc
mov
inc
inc
scas
lods
lcall
push
mov
icebp
sub
add
adc
mov
subl
insb
pop
jl
sbb
push
lea
add
aas
int3
clc
push
cmp
ljmp
scas
leave
xchg
popa
push
push
imul
jp
and
pop
mov
adc
fwait
movsb
clc
pop
cmp
inc
cmp
inc
pop
lods
mov
inc
in
test
pop
sarb
inc
xor
imul
mov
lcall
mov
or
test
outsb
inc
ret
pop
pusha
inc
inc
mov
jp
cltd
pushf
pop
cmp
cmp
or
sub
jp
scas
iret
es
loop
loope
ret
pusha
cmp
aas
addb
add
push
xchg
pop
mov
xor
mov
fnstsw
xchg
mov
mov
xor
jb
lret
bound
sub
pop
push
shlb
cmpsb
mov
sub
fwait
mov
dec
push
jp
or
in
mov
mov
or
les
xor
sbb
enter
cli
daa
sahf
lds
mov
add
fimull
fs
aas
aas
in
cltd
inc
aad
scas
pop
inc
pop
shr
push
lods
jl
and
mov
xchg
sbb
inc
inc
pop
jae
push
jb
cwtl
cltd
divl
sub
daa
mov
icebp
aaa
xor
cmpsb
repnz
inc
dec
mov
sbb
jmp
in
mov
idivl
mov
in
cmp
mov
and
in
mov
shlb
push
pop
ss
cmp
fstpt
add
daa
out
cmc
out
stos
in
pop
or
mov
iret
push
dec
movsl
xor
xor
mov
add
xlat
sbb
and
jl
add
jae
jnp
divl
outsl
lahf
cmp
imul
ret
cld
sub
enter
jne
sbb
push
inc
jecxz
push
enter
jmp
xchg
jl
insb
jge
push
mov
inc
lds
push
stos
add
arpl
mov
loopne
cmp
mov
scas
jmp
xchg
inc
push
int
mov
sar
jnp
jne
jo
mov
jb
jp
add
push
data16
push
mov
mov
pop
repz
mov
mov
lock
lret
call
cmp
jne
cmp
sub
mov
xchg
xor
pop
shrb
dec
or
and
cmp
es
push
xchg
ret
es
movsl
push
dec
mov
and
push
leave
mov
push
cmp
add
std
cwtl
jae
add
cli
or
mov
and
stos
pop
jge
lahf
push
dec
fsts
adc
test
cmp
cmp
push
sbb
shll
int
mov
insb
loope
pop
push
jp
cltd
icebp
inc
inc
inc
lret
xor
dec
xor
stos
xor
pop
push
or
rcrb
xchg
mov
mov
inc
mov
out
dec
xor
lret
mov
pop
mov
push
imul
fsubrl
jg
lahf
call
mov
pop
mov
stos
or
iret
fildl
inc
sub
adc
jl
or
aaa
xchg
sub
sbb
mov
add
adc
dec
mov
shlb
int
mov
xor
icebp
dec
mov
mov
scas
andb
outsb
lret
loope
add
cmpsl
sbb
out
sbb
movsl
push
jmp
je
ret
lea
mov
push
mov
xor
mov
sbb
mov
out
push
outsl
cmp
cltd
adcl
mov
and
outsb
rcl
xchg
js
push
push
xchg
xchg
jp
jb
xor
bound
push
adc
or
dec
mov
mov
mov
test
lods
and
repz
data16
out
push
test
inc
out
negl
repnz
loopne
sar
shrl
sub
and
inc
inc
stos
and
sbb
jno
fwait
iret
or
out
icebp
insb
add
xchg
mov
mov
jns
cwtl
popf
xchg
pop
and
ljmp
mov
in
ds
adc
jo
pop
ja
lds
lods
jmp
sbb
fdivl
xchg
xor
aaa
push
bound
sbb
ficompl
cltd
sub
filds
inc
and
mov
jp
sbb
fs
sbb
out
addl
jmp
or
jbe
jle
jbe
push
sub
or
xchg
pop
or
inc
dec
dec
int3
cmp
sbb
repnz
jnp
lods
dec
aaa
inc
dec
mov
mov
jns
xor
push
mov
loopne
mov
jmp
aas
mov
push
and
and
mov
xchg
push
clc
jp
jo
xchg
add
dec
mov
lret
jp
add
sbb
cmp
ret
jnp,pt
aas
cmpxchg
jb
cmp
push
fmulp
loop
lds
les
inc
gs
arpl
out
jg
mov
sbb
enter
mov
pop
es
jns
fwait
es
inc
sub
add
stc
aaa
cltd
add
sub
xor
es
cmpsl
xor
inc
xor
and
mov
jecxz
sbb
in
jle
test
xchg
out
call
loop
outsb
mov
jae
inc
addr16
jmp
jle
pushf
outsl
mov
test
test
inc
cmpsb
push
or
push
ljmp
xor
outsb
sti
pop
lods
add
mov
pop
cmpl
pop
js
imul
sbb
pop
icebp
popa
int3
mov
sub
pop
cmp
lret
out
jo
fmull
mov
xchg
in
cmp
or
dec
cmpsb
cmp
mov
and
xchg
xor
test
shrb
ss
mov
mov
dec
inc
bnd
gs
dec
jns
sbb
fsubr
addb
xor
mov
add
mov
push
mov
or
test
xor
ds
sub
fsubrs
adc
in
mov
hlt
mov
clc
pop
sub
test
flds
in
mov
sbb
push
mov
jbe
push
jp
sti
popf
testl
pop
cmp
or
jae
jns
xor
mov
popf
push
mov
or
mov
data16
mov
cmp
test
iret
pop
xor
sub
mov
adc
or
imul
addr16
push
call
cmp
xchg
repz
leave
int3
pop
mov
cli
push
mov
xor
pop
sub
stos
into
repz
nop
lret
jo
inc
roll
adc
pushf
insb
xor
aas
int3
movsb
pop
orb
js
int
enter
mov
aad
adc
xchg
add
push
jae
cmc
or
or
xchg
pop
mov
lret
jno
outsb
or
xchg
sbb
jns
rolb
lcall
xchg
ficoml
cmp
xchg
mov
gs
ret
jp
lods
mov
jecxz
enter
mov
cmpsl
sahf
mov
adc
dec
imul
cmc
cmp
mov
ficomps
fdivrs
and
sub
ret
stos
jle
push
add
lods
enter
inc
xchg
or
lret
fisttps
insb
idivb
cmpl
push
je
push
push
or
mov
mov
inc
push
test
adcb
cli
lret
call
jle
fstpt
sub
lds
push
data16
jle
testb
inc
addr16
into
test
mov
adc
lds
sbb
in
xchg
inc
mov
sub
out
mov
mov
fsubrs
pop
in
sbb
sti
jo
in
rorb
mov
daa
mov
adc
nop
leave
adc
sti
push
push
inc
xlat
ret
pop
push
pop
sbb
aas
push
mov
das
aas
adc
mov
es
rolb
xchg
adc
mov
or
push
fdivs
mov
lret
mov
outsl
in
dec
testb
das
out
xor
in
fwait
sbbb
push
and
xorb
jb
fldl
push
or
fnstenv
pop
mov
or
adc
jle
or
enter
enter
jns
dec
divl
data16
stos
cmp
mov
mov
jnp
mov
pop
xchg
push
insb
mov
cwtl
mov
and
pop
cmpsl
mov
sbb
jb
inc
inc
pop
leave
mov
sbb
std
or
aad
cmp
adc
fwait
jno
or
pop
jnp
testl
xchg
jp
sub
lods
inc
loop
fcomps
rcrb
push
xor
insb
adc
pop
int
push
es
ja
mov
push
mov
push
adc
out
lods
orb
out
and
sbb
push
jmp
repz
jp
sbb
push
popf
adc
sbb
dec
jg
adc
xchg
pushf
pop
inc
add
jb
je
mov
push
push
pop
inc
and
aaa
in
dec
jns
insl
scas
dec
fstl
xchg
cwtl
mov
ret
xchg
in
out
xchg
jb
lea
xchg
ss
pop
mov
cmp
inc
mov
mov
stos
pop
pop
add
lcall
fdivl
ljmp
jp
or
jecxz
or
bound
pop
push
cmc
xchg
lret
lods
add
nop
cmpsb
cmp
push
lods
fildl
sbb
dec
or
jecxz
sti
dec
clc
push
test
sbb
data16
testl
iret
push
fwait
addr16
lock
test
rcll
mov
pop
imul
jg
pop
pop
loop
add
repnz
mov
jae
testl
cmp
add
mov
repnz
rcll
xchg
or
pop
loopne
cs
mov
push
lods
sbb
outsl
movsl
mov
sbb
mov
in
pop
mov
cmp
xor
add
lahf
in
negb
cmp
mov
cwtl
sahf
push
mov
cmp
mov
jmp
fisubl
rolb
xor
fwait
cltd
rorb
dec
icebp
das
lret
ds
xchg
stc
add
jmp
fstps
iret
adc
dec
xchg
inc
roll
jl
in
push
fldcw
xor
and
stos
sarl
imul
and
sti
scas
or
arpl
in
sub
inc
cld
jno
cmovs
push
and
or
mul
xor
cld
xor
sbb
cmp
pandn
and
xchg
scas
sbb
xchg
int3
sub
push
loop
jbe
inc
je
mov
mov
push
xchg
pop
pop
mov
push
ss
test
cltd
mov
fnstcw
enter
loop
cld
xor
aad
and
ret
xor
stos
test
push
xor
inc
and
xor
sbbl
outsb
je
fwait
mov
mov
xchg
and
and
push
lods
loop,pt
rolb
adc
jecxz
nop
fs
mov
fsubl
pop
pop
pop
in
inc
sbb
and
mov
adc
outsl
push
mov
repz
mov
mov
and
lds
add
sbb
cld
stos
in
ret
pop
pop
mov
adc
hlt
adc
mov
push
aas
jmp
mov
xlat
mov
cli
call
add
or
stos
mov
out
jns
std
fnstcw
and
xchg
sahf
pop
mov
sub
or
popa
lret
stos
inc
fisubs
das
loop
dec
inc
adc
inc
ja
pushf
mov
sbb
addr16
jns
test
push
add
inc
jns
jmp
xor
clc
inc
dec
add
xor
push
sbb
push
pop
push
or
xor
dec
jg
adc
mov
adc
add
xchg
add
cmp
dec
mov
cmc
out
jbe
pusha
sbb
outsb
mov
insb
mulb
mulb
lret
adc
cmpsb
out
sub
xor
push
lods
pop
pop
in
xchg
dec
mov
xor
mov
cld
mov
hlt
xor
das
jnp
push
iret
icebp
cmp
das
cmp
jne
adc
pop
adc
cmpb
mov
jmp
ret
mov
push
or
sbb
jno
sub
cmpsb
cli
jmp
fldenv
jbe
jo
pop
pop
xor
jbe
mov
push
dec
pop
xor
mov
inc
push
lret
testb
je
jge
mov
sbb
fs
ds
xor
pop
loopne
lock
repz
xchg
mov
arpl
leave
push
shlb
mov
das
and
sub
ret
pop
shrl
push
adc
or
or
pop
cwtl
das
data16
repz
add
add
negl
jae
xchg
push
dec
cmp
push
gs
loopne
push
mov
lcall
xchg
iret
xor
mov
idiv
cmpb
ret
cmp
sub
adc
movsb
jb
add
adc
mov
out
adc
aas
dec
fnstsw
movsl
je
mov
insb
stos
arpl
and
mov
adc
xchg
mov
pop
sahf
jmp
xchg
sub
xchg
adc
adc
fsts
cld
shl
out
push
pop
adc
adc
dec
dec
aas
jo
mov
pusha
movsl
mov
inc
mov
jmp
fidivs
fs
popf
xor
mov
mov
dec
sbb
cmpsb
je
insb
fstl
mov
lret
xchg
iret
or
mov
aam
adc
std
out
inc
cmp
xor
lods
adc
and
jnp
xchg
rcrb
cmc
aaa
lds
mov
enter
or
fistpl
inc
shlb
scas
mov
inc
adc
popf
sti
mov
cmp
and
stos
mov
or
jge
imul
add
cmp
mov
inc
add
mov
push
les
pop
xor
lcall
movsb
xchg
mov
mov
sahf
decl
mov
in
ds
inc
enter
fwait
push
nop
out
pop
push
mov
jg
xchg
cld
and
xor
xchg
inc
fbstp
gs
pop
stos
pop
lret
aaa
dec
ret
dec
push
dec
adc
xchg
lret
push
popa
lds
push
bound
nop
jmp
movsl
sbbl
rorl
jns
outsl
int
pusha
bound
cmp
popf
cld
dec
inc
xchg
outsl
jo
adc
push
test
mov
or
aas
fs
clc
inc
sub
sub
mov
pop
sub
push
or
cmpsl
push
rcrl
ret
inc
int3
popa
xor
inc
stos
adc
mov
pop
fwait
adcl
cmpsb
leave
adc
cmc
dec
sbb
xor
enter
pop
insb
pushf
xchg
add
push
cwtl
sbb
addr16
adc
mov
sbb
sbb
pushf
sbb
sbb
mov
mov
and
adc
fdiv
int3
mov
jns
pushf
adc
or
rol
mov
je
ss
pop
push
mov
xchg
data16
cwtl
sub
clc
mov
fisubrl
iret
punpckhdq
inc
xor
pop
add
sub
cltd
aam
mov
or
push
aas
mov
pushl
aam
or
sahf
jae
outsl
test
xchg
rorl
or
jl
jl
es
shll
sbb
outsb
ret
and
in
out
jp
sub
mov
dec
inc
data16
loop
inc
xchg
pop
sarl
push
xor
push
or
push
xor
xor
negb
and
popf
jle
pop
cmpsl
jns
lds
xchg
push
mov
cwtl
push
aad
mov
call
mov
mov
in
mov
popf
mov
pop
lahf
cmp
sbb
sub
cmp
mov
mov
mov
cmp
fisttps
repz
sbb
jmp
popa
loop
fldt
xchg
sar
jo
pshufw
jg
in
add
mov
shl
sbb
cwtl
movsb
mov
mov
jo
xchg
jp
ljmp
dec
or
jne,pn
mov
inc
fs
sub
sub
dec
inc
int3
addr16
lcall
sbb
fdivr
cmp
shr
fldcw
sub
add
divb
fcom
mov
jns
dec
insl
xor
addr16
push
add
jns
bound
push
add
or
and
dec
test
sub
xchg
jge
repz
push
inc
repz
test
sbb
and
xchg
xchg
test
shr
sub
sti
add
test
xchg
lods
mov
es
jae
sub
pushf
imul
adc
dec
mov
movsl
push
mov
cmp
imul
loope
adc
xlat
bound
subl
hlt
aad
mov
loop
xor
and
cmpsl
mov
adc
push
test
stos
call
jbe
mov
mov
iret
jns
repz
stos
cld
into
pushf
adc
sub
pop
jnp
mov
js
popa
daa
jb
jmp
mov
inc
sbb
scas
or
push
aaa
leave
push
push
aas
mov
push
test
mov
aad
xchg
mov
dec
cwtl
outsl
mov
into
xchg
or
out
aam
inc
loopne
in
pop
insb
push
xchg
ret
jl
jp
push
mov
shlb
or
gs
push
pusha
mov
push
repnz
stc
fwait
int
loope
push
out
jle
fmulp
sbb
adc
push
lcall
xlat
sub
mov
pushf
int
cmp
adc
xorb
pop
mov
enter
movsl
and
mov
mov
lahf
mov
loop
and
jp
dec
pop
xor
mov
and
fcoms
fmulp
fdivrl
or
add
cmpsb
fsts
push
in
push
or
mov
lods
cmp
int3
stos
fdivs
add
stc
fistl
sub
lods
lahf
xchg
push
sbbl
mov
lret
leave
cs
mov
and
xor
std
mov
push
push
fcomps
push
sahf
push
imul
stos
imul
lock
jge
push
movl
mov
lds
cmp
mov
mov
xchg
sbb
data16
jge
ret
ja
jle
mov
imul
inc
push
test
aas
loopne
xchg
cmpsb
pop
sub
aam
sub
out
sub
mov
push
or
cs
shrl
jge
inc
pop
leave
mov
gs
mov
ds
dec
jae
mov
lret
dec
push
xchg
stos
inc
in
dec
mov
rorl
xchg
adc
adc
sti
pop
jg
sub
push
cmp
test
nop
test
xchg
ja
jne
jb
mov
xlat
sub
pop
sti
dec
das
ret
dec
mov
mov
shl
jmp
hlt
aad
movsl
push
push
pusha
sub
testl
rorb
fistps
jge
pop
mov
daa
cmpsl
std
pop
test
cmpsl
test
mov
ficoml
or
inc
pop
fsubrl
popa
ret
pop
sahf
nop
jg
inc
es
jle
ljmp
jnp
outsl
insl
aaa
les
push
test
add
mov
dec
sub
jno
jmp
test
sbb
sbb
inc
push
jnp
pusha
lds
cli
mov
je
jg
int3
mov
fsave
lsl
adc
add
sub
mov
inc
cwtl
mov
jmp
add
pop
pop
xchg
les
test
sub
pop
imul
loopne
ja
out
xor
out
adc
insb
mov
cld
sub
aam
ret
xchg
cmp
push
mov
imul
notl
jo
mov
and
dec
cmp
insb
cwtl
jl
fsubrs
dec
mov
adc
pop
push
mov
cmp
out
insb
jnp
inc
imul
popf
and
xchg
daa
sti
add
mov
cmp
xor
pushf
adc
lock
push
out
mov
cmp
js
push
and
xchg
test
dec
jp
test
imul
aaa
lret
hlt
mov
push
jo
fwait
push
inc
data16
adc
and
js
int3
inc
sbb
xor
dec
or
pop
movsb
in
mulb
scas
push
jmp
rcrl
outsb
mov
mov
in
cld
push
testb
push
mov
mov
insl
out
fs
push
sub
jnp
dec
mov
scas
std
jp
mov
pop
in
inc
pop
push
mov
cmp
adc
xchg
outsl
lock
lock
push
xchg
cmpsb
dec
cmc
mov
push
clc
aas
gs
xor
leave
sarb
rolb
cmpsb
jmp
xlat
bswap
imul
pusha
ffree
out
jg
push
call
test
stos
daa
push
mov
inc
sahf
std
test
movsl
add
ret
fld1
or
mov
dec
jecxz
and
rorb
lods
pop
dec
dec
jno
stos
inc
fidivs
jae
inc
out
into
jbe
repz
test
cmc
mov
enter
cmp
pushf
push
jecxz
xor
inc
xchg
or
xor
popa
mov
fsts
fwait
into
out
js
fadds
lret
mov
add
xchg
pop
mov
int
lret
inc
add
sub
dec
sub
add
pop
in
psubd
mov
sar
cmp
add
iret
rcl
sbb
sti
and
aaa
sbb
mov
stc
cltd
jae
jg
movsb
mov
out
insb
test
shl
mov
cmp
dec
cmp
push
cmp
inc
in
adcl
or
inc
xchg
xor
in
xor
dec
in
cmp
in
repz
dec
int3
in
arpl
sti
fnstcw
fwait
jmp
lcall
cmpsb
cmpsb
out
mull
sbb
leave
xor
insl
loop
jg
xor
movsb
test
push
ja
fdivs
cmpsb
lahf
test
das
popf
test
in
ret
jne
movsl
and
in
mov
les
test
fidivl
pop
mov
cmpl
mov
xchg
jnp
xlat
xchg
dec
pop
mov
hlt
cwtl
cmp
pop
aam
test
movsl
fucom
ja
out
mov
sbb
out
ss
stos
daa
adc
mov
pop
mov
dec
or
sub
xchg
icebp
ss
and
dec
xor
xchg
aad
je
mov
je
enter
popa
lods
sub
sub
iret
sbb
pop
test
inc
xchg
lock
mov
arpl
fcmovnbe
insl
sbb
cmp
push
out
or
sarb
lods
xchg
into
fnsave
repnz
movsl
pop
add
xor
pop
pushf
mov
in
mov
ficoml
xor
and
xchg
rorl
dec
add
sbb
call
mov
stc
rcll
cmp
nop
dec
xchg
stos
inc
repz
pop
divl
mov
or
jp
out
into
mov
push
test
fidivrs
jmp
aam
xchg
inc
insl
out
in
cmp
and
out
stos
pop
push
sbb
mov
cwtl
hlt
lods
bound
pop
mov
jbe
js
push
sbb
cltd
xor
mov
mov
or
mov
cmpsl
lret
inc
jle
add
andl
dec
xchg
test
nop
in
xchg
xchg
ja
leave
imul
cmp
sbb
icebp
cmp
cmp
out
sbb
std
adc
ret
dec
mov
cwtl
lcall
decb
sti
xor
cltd
jbe
scas
je
fs
xchg
jbe
das
jmp
lcall
and
dec
lret
mov
jle
cmp
sbb
adc
and
out
lods
push
je
shll
mov
ret
cmp
jbe
mov
out
scas
cltd
mov
dec
jmp
xchg
sub
mov
sbb
mov
cmpsb
icebp
lods
dec
in
mov
ret
bound
out
rcrl
adc
scas
xchg
scas
ret
jle
sub
lea
xor
lock
cmp
rorb
xchg
push
dec
mov
outsl
sbb
sahf
push
jno
mov
gs
cmp
pop
mov
outsl
inc
dec
sbb
loopne
and
add
push
outsb
subb
arpl
sub
mov
out
mov
mov
imull
xlat
js
movsl
add
or
mov
enter
dec
loope
xor
pop
loopne
push
push
adc
xchg
xchg
cmp
add
shlb
clc
adc
xchg
sbb
mov
jno
ret
shl
mov
adc
scas
xchg
movsl
add
mov
outsb
pop
jecxz
decb
jmp
mov
mov
jl
fildl
pop
hlt
jl
dec
inc
or
cli
jb
xor
sub
cs
jp
iret
nop
jp
stos
dec
xchg
ds
icebp
mov
sbb
push
into
fwait
pop
ret
sub
cs
in
xlat
push
insl
imul
cmc
pop
push
inc
iret
gs
jp
decl
push
or
sub
je
and
jo
fisubrl
fmul
jmp
negb
pop
nop
repnz
les
pop
in
pusha
or
mov
lret
ret
mov
xor
jmp
test
pop
stos
sub
sbb
fsub
lds
push
insb
jb
ja
in
test
dec
out
jge
js
sub
sbb
ret
dec
fucom
push
cli
mov
rorl
pop
mov
mov
mov
dec
outsb
mov
aad
mov
rcr
jnp
cmp
lods
fcomi
test
in
mov
fsubr
pop
jge
inc
xor
shl
outsb
inc
sub
mov
gs
inc
lods
push
adc
std
mov
ficomps
test
movsb
loope
adc
pop
and
xchg
pushf
lods
inc
sub
mov
repz
inc
and
add
mov
mov
fstl
arpl
or
lcall
pop
push
jbe
cwtl
out
or
ja
mov
lock
mov
cmp
adc
push
insl
rolb
stos
movsb
out
mov
shll
popa
test
mov
mov
jl
hlt
fwait
scas
xor
jmp
and
out
repz
sbb
je
fwait
mov
dec
stos
fnclex
pop
mov
push
rcll
jmp
push
mov
es
sub
cwtl
sti
cwtl
jle
pop
cmc
lods
ss
sub
lods
aad
add
enter
or
cmp
sub
jne
jmp
xchg
out
scas
inc
fcoms
and
cmp
roll
popf
pushw
pop
in
dec
xchg
xchg
lods
jne
jge
popa
mov
cmp
xchg
jae
leave
jle
movsb
sub
jle
sbb
adc
in
cltd
inc
andl
mov
bound
pop
mov
in
test
lea
int
mov
out
inc
pop
das
mov
push
pop
pop
adc
sbb
xchg
imul
push
jp
adc
repz
jl
jg
inc
cmp
je
pop
push
sub
jecxz
aad
or
outsb
mov
mov
ds
xchg
pop
addr16
out
sub
sbb
je
movsl
adc
mov
mov
mov
xchg
fcoms
clc
unpcklps
sub
xlat
push
cltd
push
pop
or
arpl
pop
push
mov
outsb
mov
cmp
cmc
lahf
mov
popf
mov
pop
ds
cmp
xorb
in
popf
cs
dec
outsl
loope
ss
jp
push
and
repz
lahf
mov
retw
mov
adc
or
or
repz
jmp
inc
loopne
mov
iret
and
jo
cmp
movsb
mov
orb
mov
popf
lods
jl
push
shl
jl
iret
xchg
nop
mov
faddl
dec
pop
popa
std
into
mov
xchg
adc
test
xchg
xchg
or
mov
aam
pop
add
rcll
push
subl
testl
std
gs
sub
shll
shrl
test
in
mov
in
and
sbb
scas
icebp
pusha
lock
test
leave
and
add
jmp
sbb
ja
cmp
jb
or
xor
lea
cmp
cwtl
inc
and
test
and
int
jl
adc
jge
push
push
iret
call
ret
repz
leave
xchg
mov
push
fwait
std
adc
and
xchg
int
adcb
movsl
test
jl
add
pminub
fstp
stc
push
int3
pop
push
mov
dec
inc
cmp
incl
daa
add
enter
fwait
xchg
mov
pushf
call
cld
jne
fadds
loope
mov
add
sbb
fisubs
jle
out
out
std
sub
pop
es
xchg
lods
sub
add
push
xor
repnz
loop
add
stos
sbb
clc
or
movb
dec
cli
loopne
pop
push
inc
movsl
mov
push
adc
mov
cmpsb
lods
add
pop
xor
sarl
or
push
clc
lcall
pop
push
jp
jns
or
cld
inc
stos
pop
clc
pop
pop
inc
adc
test
gs
bswap
dec
jmp
outsl
push
add
sahf
es
mov
insl
add
frstor
jbe
fwait
adc
sti
xchg
lahf
lock
bound
pop
cltd
mov
hlt
xchg
jmp
divl
adc
jle
sub
pushf
jle
sub
jl
cmpsb
cmp
insl
xchg
pop
scas
jno
xlat
repz
test
in
loopne
or
sti
jg
push
pushf
xchg
sti
push
inc
xchg
dec
stc
mov
mov
cmp
sbb
lahf
sti
or
lock
mov
stc
fidivs
jmp
clc
popa
nopl
dec
lcall
clc
insb
sub
test
inc
mov
push
fstl
jae
push
les
mov
inc
fsubs
inc
mov
rolb
outsb
sub
ljmp
sbb
pop
inc
fcoml
and
hlt
dec
int3
lods
fisubrl
cli
jmp
iret
lock
adc
xlat
or
push
or
sahf
jne
stc
out
aam
arpl
mov
adc
lahf
sbb
stos
gs
or
inc
ret
shl
std
bound
out
jg
cld
mov
lds
in
pop
adcb
xchg
jae
push
sarb
jb
add
or
out
jbe
jmp
mov
cli
movsbl
xlat
aam
es
int
mov
stos
or
mov
xchg
lret
xlat
jle
mull
repnz
cltd
out
xchg
scas
jns
jle
pushf
cmp
xchg
shr
xlat
xor
jb
xchg
mov
es
js
pop
out
and
stos
mov
push
fistps
outsl
sub
idiv
xchg
inc
aam
push
xchg
nop
add
sub
ret
imul
leave
idiv
jle
fadd
xchg
js
popf
xchg
pop
jae
inc
xor
push
push
int
or
rolb
mov
outsb
dec
mov
int
mov
imul
jns
pop
mov
add
pop
push
inc
push
mov
adc
or
aas
test
jo
rclb
loopne
popa
sti
filds
bound
or
dec
pop
dec
pop
add
cmpsb
sub
cmp
sub
push
and
dec
sahf
data16
loope
popf
jmp
and
mov
push
fstpl
fwait
pop
dec
and
inc
sbb
push
pop
inc
test
test
movsl
sbb
aaa
pop
call
dec
xor
fcoml
hlt
call
pop
rcll
mov
sahf
cmc
ret
cmpsl
dec
xor
scas
in
js
lret
in
ret
mov
into
sbbb
pop
out
ja
cmp
xor
inc
aam
pop
mov
add
push
or
stos
jg
je
ljmp
add
lds
daa
loopne,pn
aam
xchg
icebp
test
sahf
lcall
dec
add
pushf
sbbl
push
jge
jmp
cmp
inc
cld
fiadds
stos
adc
mov
cmpsb
lock
mov
sub
add
stos
popf
xchg
sub
cmp
sub
xor
lret
arpl
push
pop
in
loopne
rorl
xchg
push
add
movsb
out
sbb
incl
cmp
push
push
aam
jle
or
hlt
add
push
movsb
fnstcw
mov
enter
cmc
outsl
xchg
and
or
lods
mov
mov
mov
adc
push
and
push
and
cs
test
jae
push
cmc
sarl
je
and
add
xchg
mov
add
push
fidivs
pop
cmp
bound
dec
jne
sub
mov
cmp
lret
mov
and
es
stos
xchg
adc
sahf
mov
out
cmpsb
cmp
je
sbb
add
outsb
lea
ret
xor
loopne
gs
js
hlt
cmp
push
lcall
adc
jle
aad
mov
orl
ss
stos
scas
cmpsb
jno
loop
outsb
and
or
hlt
gs
or
mov
xchg
scas
ja
aam
mov
inc
stos
xor
dec
and
jl
mov
lock
lods
cs
dec
and
dec
adc
mov
pop
popf
xor
mov
xchg
into
fnstcw
out
sub
dec
sub
das
pushf
ds
mov
inc
out
lcall
je
jg
daa
test
inc
push
push
inc
push
mov
bound
cli
xor
pop
fmuls
or
xchg
clc
cld
fcmovu
call
cmpsl
ret
sub
and
sub
mov
sbbl
xchg
adc
int3
rcrb
pop
shll
std
jns
int3
mov
sarl
ret
mov
jnp
sbb
xchg
adc
jo
or
ds
mov
mov
mov
test
fsubs
sub
and
add
jmp
jae
jecxz
mov
fwait
pop
int
xchg
iret
sbb
push
push
cmpsl
mov
mov
or
dec
fdivrl
cli
push
inc
movsb
or
ret
xchg
sbb
sti
and
jl
cmp
hlt
aas
xchg
xor
leave
xor
cmpl
xor
in
in
mov
clc
adc
sub
pop
outsb
push
outsl
cs
add
or
les
hlt
inc
pop
sahf
test
popf
jmp
dec
mov
or
sub
ret
cmpsb
inc
orl
add
sub
sbb
pushf
insb
xor
je
adc
inc
fidivrs
arpl
mov
push
dec
roll
push
dec
mov
sub
jnp
inc
rcll
xchg
je
lcall
scas
inc
lret
leave
or
cs
xor
aad
mov
mov
push
add
cmp
mov
movsb
iret
int
mov
sbb
sbb
insl
mov
nop
loope
rclb
cli
fsubl
jns
mov
and
in
dec
gs
aaa
push
fwait
or
mov
icebp
pop
mov
jge
push
sub
or
dec
pop
add
xor
pop
mov
mov
rorb
imul
or
pusha
sbb
mov
js
icebp
adc
pop
mov
add
loope
rolb
dec
lcall
sub
lahf
outsl
cs
or
or
lods
shlb
das
jp
sub
in
int3
xchg
cs
test
imul
sub
js
sub
roll
dec
divb
mov
rcrl
pop
push
iret
aaa
push
enter
out
add
es
cmp
add
repz
add
pop
adc
in
inc
xor
lds
stos
outsb
aas
insl
sub
push
mov
aaa
lods
sar
cmp
in
pop
mov
loopne
mov
lret
xchg
mov
dec
dec
dec
inc
sar
ss
inc
out
cmp
jo
push
rcrl
inc
pusha
mov
inc
cmp
pop
hlt
xor
push
jecxz
mov
cmp
pop
inc
add
imul
pop
mov
addr16
cmp
push
loope
pop
pop
inc
clc
push
fsubrp
movsb
pop
test
jb
mov
lods
xchg
xchg
add
icebp
repnz
inc
mov
jle
pop
popf
mov
push
loopne
push
pop
xchg
push
fs
mov
jae
andb
es
ret
mov
pusha
pusha
add
orl
imul
xor
daa
rcll
aam
jmp
js,pt
clc
xor
xor
and
nop
aaa
and
push
sub
push
pusha
cmp
push
pop
dec
or
dec
inc
inc
mov
dec
sub
adc
out
add
jno
pop
mov
int
jmp
cltd
jno
push
mov
hlt
pop
fidivrs
stc
loope
inc
xchg
outsl
pop
enter
and
outsb
sbb
sub
xor
push
add
mov
xor
data16
pop
imul
andl
adc
xchg
mov
ljmp
or
mov
sub
or
incl
jns
xor
jne
cmp
push
lret
sbb
pop
push
rolb
sbb
enter
pop
inc
std
push
std
imul
rcrb
pop
cmpsb
sub
sti
push
mov
outsl
pop
shlb
add
mov
mov
xchg
pusha
out
cmp
pop
mov
divl
sub
mov
push
inc
arpl
jge
loop
mov
inc
data16
insl
xchg
jae
shl
mov
xchg
imul
push
add
inc
or
xor
mov
lods
cwtl
outsb
arpl
mov
dec
adc
pop
jb
dec
pop
hlt
pop
push
fwait
push
pop
out
mov
mov
fcoml
lea
imul
pop
pop
hlt
sahf
adc
mov
loop
sbb
adc
mov
mov
xchg
test
sti
fwait
mov
cs
pop
popf
ja
adc
xchg
or
enter
mov
ja
shll
popf
adc
cmp
and
mov
push
mov
adc
loop
into
push
or
out
jns
or
xlat
stos
adc
fmuls
fidivrl
cmpsl
push
test
fcomi
loopne
out
fwait
hlt
pop
lds
adc
cld
jl
rcl
pop
inc
lods
aaa
pop
fsubrp
pop
mov
sbb
dec
stos
mov
subb
in
or
pop
mov
dec
mov
cltd
mov
pop
std
lods
stos
fisttpll
inc
lock
iret
mov
lea
pusha
in
cmp
cmp
jp
add
cmpsl
adc
mov
int3
aam
inc
lods
fcoml
adc
dec
ljmp
divb
ret
fisubrl
hlt
xchg
add
mov
int3
imul
mov
out
sub
scas
sub
push
stos
cmpsb
arpl
or
push
les
imul
nop
imul
cmp
or
das
pop
sbb
pop
test
call
mov
arpl
ffree
mov
sahf
data16
rorl
and
sub
rolb
xchg
int
div
sbb
scas
rcrl
cld
cli
adc
popa
mov
dec
and
add
cmpsl
mov
aad
sbb
push
mov
pop
push
in
in
call
scas
test
into
aam
inc
add
sbb
cli
sbb
add
aaa
insb
inc
jecxz
pusha
out
mov
pop
inc
mov
movsb
jmp
push
mov
aas
push
push
pop
add
lods
scas
insb
jmp
jecxz
popf
shrl
rolb
sub
xor
jno
push
pushf
cld
and
mov
mov
add
ja
adc
cmp
inc
je
rcrb
divb
nop
xchg
inc
loopne
xorl
movsb
icebp
jo
das
jmp
idivb
test
decb
mov
xor
sub
xchg
mov
ss
cmpsl
mov
xchg
out
jb
rclb
call
and
cmp
gs
push
cmpsl
repz
syscall
cld
aad
xor
cmp
sub
icebp
addr16
lods
xchg
mov
cmp
enter
mov
cltd
aaa
inc
jmp
dec
outsb
jmp
mov
or
lret
jg
adc
dec
stos
mov
addr16
das
fistl
fimuls
and
fists
cs
inc
mov
stos
add
movsl
insl
mov
jl
movsl
mov
jp
fsubrs
sub
or
nop
imul
fisubrl
mov
pop
pop
jmp
gs
pop
push
lods
or
pop
mov
mov
outsb
cmc
mov
lcall
add
cmc
aam
mov
adc
jmp
es
fisttpl
roll
fcoms
std
mov
jle
jg
stc
sub
or
pop
in
push
fstps
es
pop
inc
test
jbe
jo
fstpt
rorl
ret
in
add
stos
cmp
adc
cmp
fs
push
mov
and
dec
xchg
je
ds
inc
fwait
dec
mov
pushf
adcb
lret
jnp
mov
xchg
or
andl
out
out
sahf
add
fstps
daa
sbb
mov
popf
jmp
ljmp
inc
ja
fidivrl
in
ret
into
cmp
or
repz
sub
gs
fistl
sub
mov
mov
inc
and
rcll
aas
inc
shrl
fsubr
test
mov
outsl
das
movb
ficompl
adc
repz
or
add
xchg
pop
xor
test
std
aam
pop
les
stc
inc
out
mov
or
in
fwait
mov
cli
repz
cmp
cmp
dec
or
loopne
sub
mov
stos
xchg
leave
adc
mov
mov
lods
mov
pop
mov
ret
test
cli
jp
mov
pushl
outsl
idiv
subl
jno
mov
mov
jb
in
cmpsb
pushf
and
push
lret
outsl
jecxz
sahf
aas
lds
sbb
dec
jle
mov
xlat
scas
jno
aad
xorb
lahf
sub
cmp
cmp
xor
dec
loope
in
rcrb
loopne
mov
cmpsb
mov
rclb
dec
popf
mov
inc
sbb
xor
inc
adc
scas
add
popa
imul
xchg
jl
addr16
push
mov
mov
adcb
mov
ss
test
sbb
arpl
mov
fwait
ret
in
out
js
sbb
inc
sbb
int3
jns
movsl
xor
inc
popf
adc
mov
inc
cwtl
cmp
sbb
push
inc
xchg
addr16
pop
sbb
lret
cmc
sti
push
fs
and
enter
push
inc
hlt
lahf
sbb
add
sub
fisubs
ja
jp
push
call
push
jg
sbb
sub
in
jecxz
ss
cmp
pop
scas
outsl
mov
dec
dec
xorb
mov
mov
jl
jne
cmp
or
mov
movsl
inc
cwtl
sbb
sbb
xchg
sub
fbld
mov
fisttpl
mov
fwait
imul
lods
rol
lcall
sub
imul
sbb
and
mov
push
inc
adc
dec
dec
xor
mov
xlat
jns
cltd
into
in
mov
and
aam
aad
xchg
mov
inc
or
xor
jle
inc
and
adc
fiadds
sub
push
cltd
arpl
and
xor
movsb
mov
imul
outsl
xchg
dec
cltd
ljmp
inc
cmp
push
pop
jb
push
sti
sahf
lds
scas
inc
pop
mov
insl
sbb
dec
pop
pop
aam
pop
sahf
in
adc
sbb
call
into
dec
fdivl
mov
rcrb
or
or
add
cmp
popf
dec
icebp
mov
repnz
add
movsb
sbb
inc
jp
sub
cmpsl
xor
push
fbld
adc
in
inc
push
mov
adc
test
mov
sbb
cmp
nop
sbb
clc
mov
repnz
or
lret
xor
xor
test
cmpl
stc
or
xorl
ja
jns
pop
cmp
dec
cmp
xchg
and
cmp
stos
xchg
mov
aaa
cli
test
adc
sti
mov
out
cmp
popf
loop
sahf
mov
push
sbb
enter
mov
jg
xor
inc
xchg
insl
fcoml
dec
pop
cmp
xchg
inc
dec
bound
cmp
jmp
dec
mov
imul
dec
inc
stos
stc
mov
imul
jle
divb
push
xlat
sub
clc
outsb
roll
and
inc
in
shr
push
std
rcrb
adcl
ljmp
cmp
fists
push
lcall
adc
lahf
pop
cmpsl
push
jge
add
aam
imul
xchg
outsl
cmp
inc
mov
lret
xchg
xchg
jmp
sub
mov
or
mov
test
sahf
pop
ret
jb
mov
mov
adc
xchg
jg
sub
es
out
adc
mov
mov
ljmp
pop
mov
xor
and
lock
jno
pop
int3
sub
sub
jle
aad
fwait
js
or
inc
inc
shl
std
data16
in
movsl
or
ds
shr
jnp
and
cmp
mov
bnd
add
pop
sub
jbe
rcr
test
fcoms
cmp
insb
sbb
push
sbb
xor
aad
mov
push
or
idivb
es
or
dec
mov
imul
dec
popf
mov
fadds
aaa
mov
xor
sub
push
lods
jmp
nop
or
dec
pop
sub
fwait
lret
add
out
insl
leave
sbb
inc
mov
xchg
loope
adc
add
int
mov
out
out
add
mov
nop
sarl
mov
shlb
rorl
sub
call
test
or
addr16
inc
cmpsl
pusha
pop
and
xchg
push
int3
inc
and
push
add
pop
add
pop
addr16
jo
pop
jecxz
inc
and
aam
jl
adc
or
xchg
pop
movsl
dec
jge
xor
and
inc
cmp
mov
jne
add
mul
scas
jg
and
gs
testb
pop
xor
jo
sahf
ljmp
pop
pop
nop
sub
push
fisttpl
ja
loop
pop
mov
mov
bound
ss
jb
mov
adc
outsl
lods
add
mov
pushf
gs
in
add
adc
mov
mov
call
xchg
test
mov
mov
jp
jb
cmp
dec
inc
lcall
repz
stc
pop
and
dec
ret
mov
push
adc
inc
xlat
add
adc
dec
cmp
sti
shrl
cmp
mov
jae
mov
das
popa
jbe
stos
aam
outsl
insl
lds
dec
mov
mov
and
adc
sub
xchg
sub
xchg
arpl
add
aas
jbe
xor
lea
pop
loope
cmp
cmp
test
mov
scas
movsl
fwait
mov
xlat
nop
stos
lods
adc
movsl
sahf
cld
rcll
add
adc
test
mov
or
cwtl
clc
xor
scas
push
pushf
mov
xchg
scas
mov
push
lcall
ud0
cmp
sub
or
mov
add
jle
lcall
test
cmc
and
mov
popf
addr16
out
xor
xor
push
ljmp
add
pop
arpl
dec
ret
addr16
cmp
pusha
inc
push
sbb
insl
jb
xor
pop
mov
add
xor
pop
push
jns
jg
dec
dec
cmp
adc
mov
lea
leave
mov
mov
push
mov
jo
loope
and
sti
hlt
or
iret
stc
cmpsb
dec
insb
add
cmp
cmp
fs
mov
rolb
addr16
hlt
xor
in
xchg
xor
xorl
add
out
aam
dec
popa
mov
je
dec
imul
imull
dec
and
es
data16
ss
sti
adc
testl
add
addb
iret
lahf
xchg
sbb
rcll
xchg
scas
leave
dec
aaa
dec
mov
rol
and
mov
mov
test
push
add
pop
test
mov
add
movsb
aaa
int
mov
lods
mov
addb
fs
stos
sahf
push
shlb
daa
popa
cmp
leave
ljmp
clc
lret
or
outsb
mov
xor
hlt
and
push
jg
jmp
and
in
pop
mov
cmpsb
inc
ljmp
sbb
iret
scas
sub
pop
mov
in
mov
iret
inc
jecxz
pop
andl
cmc
mov
add
lods
pop
hlt
dec
xchg
xchg
rcrl
imul
aaa
aam
mov
cld
gs
jno
fldenv
jb
xlat
xchg
mov
push
push
inc
pop
sub
xchg
bound
sub
and
jo
xchg
sub
enter
jne
mov
je
jp
jp
mov
imul
bound
jmp
mov
aam
sub
negb
sbb
mov
jmp
xor
inc
mov
add
or
adcb
or
mov
ss
push
or
xor
jne
loope
add
loop
scas
xor
inc
add
daa
mov
lods
lret
xor
test
push
andl
adcb
rcrl
jecxz
xorl
mov
cmp
or
cmp
sbb
push
jg
adc
push
ljmp
pushf
lahf
sub
push
dec
ljmp
push
add
jae
and
inc
add
mov
iret
xor
mov
add
mulb
fsubrs
in
jbe
mov
add
leave
and
addr16
sub
rcll
sbb
sti
adc
add
dec
or
ja
xchg
or
sub
in
ljmp
lock
pop
and
out
shll
sub
sarb
int
into
push
sbb
cmp
leave
mov
add
push
add
imul
adc
jbe
addr16
pushf
inc
daa
mov
je
mov
rol
mov
mov
scas
repz
xor
testl
stos
inc
movsb
fcoms
or
xor
ror
ds
fistps
inc
sub
sub
pop
lret
or
rcll
xor
leave
xchg
push
mov
sub
inc
jbe
jnp
xor
jg
cmpsl
test
orb
into
int3
cmpsl
out
sub
or
loop
test
pop
lret
js
iret
sbb
test
les
stos
fdivr
cmp
jle
es
aas
das
arpl
mov
pushf
adc
dec
xchg
xchg
jno
cmp
jns
lcall
push
xchg
xor
out
mov
adc
cmpsl
mov
cmp
sbb
andb
cmp
jg
mov
jb
mov
sbb
jns
sub
push
scas
addl
loope
das
scas
scas
mov
jno
in
sbb
xor
ja
push
sti
movb
shrl
add
leave
jl
das
inc
shll
lods
jne
insb
and
inc
ficoml
sub
dec
cs
lret
cmc
inc
mov
add
xchg
xchg
xor
std
nop
inc
sbb
or
inc
and
pop
incl
ja
or
out
cli
fadds
in
inc
cmp
cwtl
loopne
andb
sbb
scas
sahf
push
xchg
dec
bound
and
sub
aas
fcoml
enter
daa
xorl
dec
in
popa
arpl
out
cmp
into
mov
mov
mov
outsl
loop
dec
fdivl
movb
adc
lcall
mov
shl
push
pop
xor
ror
fistpll
stos
jne
xchg
pop
mov
aas
and
pop
xchg
bnd
push
jmp
jmp
inc
repnz
pop
push
ljmp
push
pop
pop
lret
adc
jbe
aam
mov
out
scas
test
pop
and
add
cmpsb
jns
inc
pop
out
cmp
dec
repnz
rcl
xor
notb
in
push
pop
push
stc
pop
cmp
jecxz
push
addr16
sbb
iret
jecxz
mov
movsb
and
sbb
inc
mov
push
sub
std
roll
cmc
repnz
mov
es
decl
popf
mov
or
push
inc
stc
mov
addl
xor
jge
sbb
hlt
xchg
pop
cmp
xchg
inc
pushf
mov
or
fnstsw
leave
outsl
imul
dec
rorl
mov
xorl
aad
es
push
cmpsl
rcr
push
xchg
shrl
lods
xor
ljmp
les
adc
sbb
lods
add
add
mov
ror
idivl
pop
jmp
mov
mov
sbb
hlt
adc
shlb
cmp
pop
lea
dec
sbb
lods
ret
or
xchg
mov
rorb
lea
dec
push
fldt
sub
inc
mov
inc
cmpsb
js
rclb
cmp
or
lret
fwait
sub
fldcw
test
jmp
inc
int3
daa
jo
divl
mov
ss
int
sub
xchg
pop
movb
dec
xor
fwait
mov
pop
add
sbb
xchg
cmp
dec
in
or
orl
std
and
jle
add
xchg
sub
arpl
pop
inc
daa
xlat
aam
aam
imul
pop
rcrl
add
ss
movsl
mov
or
sti
adc
lods
daa
lods
sub
lret
test
adc
aam
fisubs
out
movsb
outsl
dec
in
jg
pusha
pop
dec
jno
xchg
jno
mov
mov
fdivrs
sub
std
mov
aaa
mov
test
mov
or
je
inc
fs
sti
pop
and
in
ficompl
or
mov
or
and
push
movsl
jns
jno
stc
mov
jecxz
jle
pusha
mov
mov
arpl
lcall
xchg
divb
add
loop
cmpsb
inc
lock
xor
subl
dec
mov
mov
pop
idivb
ret
movl
push
fnstcw
cs
push
out
and
jmp
inc
movl
sbb
ret
mov
push
mov
push
inc
mov
pop
idivb
negl
adc
fs
cmp
pop
lahf
lds
jne
sub
daa
pop
mov
test
mov
and
je
adc
inc
dec
stos
in
add
cld
mov
mov
cmp
or
iret
pop
xlat
and
mov
or
cs
fs
mov
push
daa
sub
fwait
add
push
inc
jae
stc
pop
sbb
into
add
push
pop
mov
jne
pop
loopne
and
mov
mov
jnp
lahf
out
xor
sbb
push
jno
adc
inc
sbb
inc
or
test
mov
mov
pushf
push
inc
pop
inc
outsl
call
dec
cmp
movsl
dec
add
cmp
clc
gs
mov
ja
push
mov
jp
stos
or
pop
scas
jle
push
jle
pop
pop
cmpl
pop
push
negl
xlat
arpl
pcmpeqw
mov
ret
leave
in
push
imul
lahf
or
aaa
arpl
gs
cmp
push
les
inc
sub
and
cld
clc
loope
sub
mov
add
outsb
inc
add
int3
test
mov
js
loope
push
cmp
test
and
les
outsl
sub
adc
icebp
jmp
lahf
icebp
aas
fistl
ljmp
rcrb
imul
or
push
push
add
or
mov
je
xchg
cs
pop
mov
outsb
xor
xchg
adc
push
rcll
ret
inc
scas
pop
sub
mov
out
mov
js
ljmp
aam
cwtl
xor
mov
fldenv
add
or
int
mov
in
jae
sbb
and
sub
pop
push
into
pop
jp
xor
ja
cmp
add
in
dec
arpl
hlt
fwait
and
and
sbb
mov
sbb
mov
fs
add
xchg
loopne
add
mov
or
faddl
add
jmp
imul
pop
and
adc
aam
pop
pop
push
mov
leave
push
outsb
jmp
repz
imul
pushf
or
mov
inc
rcrl
repz
ret
jmp
inc
test
or
push
sahf
leave
shrb
es
subb
inc
fwait
lods
cmpb
inc
rcrb
sub
mov
inc
xor
jb
nop
or
inc
lcall
cmp
mov
cmp
sbb
add
scas
sbb
xchg
clc
scas
xor
pop
mov
pop
sti
xchg
mov
in
sbb
add
mov
into
aaa
cmpsb
push
mov
out
lds
mov
xchg
xchg
mov
push
aaa
ljmp
fstpl
jmp
sti
clc
mov
dec
sahf
jp
cld
cltd
movsb
push
fcoms
loopne
cmp
out
movsb
pop
stc
push
subb
xor
stos
add
pop
loopne
hlt
jo
iret
dec
cmp
scas
pop
sti
push
testb
inc
xchg
inc
out
fldt
ds
mov
sbb
lea
mov
mov
lods
push
out
out
in
cli
mov
notb
ret
loop
dec
dec
mov
test
pop
pop
test
pop
mov
jae
xlat
lods
cvtdq2ps
cmp
cs
ret
mov
mull
cmp
into
mov
and
pop
mov
push
outsb
jl
in
call
outsb
data16
lock
sbb
sahf
mov
or
inc
pop
insl
push
das
enter
int3
sahf
cmp
dec
sub
push
lret
mov
mov
push
inc
adc
fadd
sti
xor
pop
mov
lea
mov
pusha
sarl
inc
sub
xor
lcall
and
shll
and
pushl
push
dec
aas
jmp
mov
data16
gs
cmp
xchg
cld
aas
add
repz
scas
outsl
and
fs
shlb
jge
stc
pop
pop
hlt
call
test
mov
mov
xchg
inc
in
sub
negb
dec
loopne
mov
stc
test
in
ret
jmp
or
jbe
jns
cs
push
pushf
out
mov
sub
std
push
clc
mov
pop
jl
inc
shlb
icebp
push
repnz
mov
popl
sub
iret
cld
dec
mov
cmpsb
repnz
adc
paddb
dec
xchg
imul
push
cli
xchg
adc
push
push
dec
and
and
rcll
inc
lahf
mov
push
aaa
pop
dec
mov
sbb
sbb
and
outsl
and
pusha
mov
fstpt
xlat
push
inc
ja
fnstenv
popa
lcall
jg
mov
lret
cs
aaa
xlat
add
mov
inc
aad
xor
xchg
mov
dec
arpl
rcl
pop
sub
aas
pop
ror
dec
and
xor
mov
jecxz
scas
int
or
ss
inc
or
adc
hlt
ds
jge
pushf
dec
es
aas
push
pop
addl
sbb
outsl
xor
xchg
aas
in
inc
push
jb
jbe
push
dec
mov
fdivrl
aam
int3
stos
mov
loope
mov
std
mov
pushf
jnp
sbb
mov
adc
es
mov
add
mov
iret
inc
daa
add
pop
xor
jns
out
imull
mov
dec
lahf
loop
mov
push
out
inc
pop
sub
popa
push
lea
inc
inc
xchg
add
cmp
cmc
sbb
cld
in
outsl
xchg
out
pop
mov
mov
sub
or
push
lahf
je
mov
mov
mov
pop
int
mov
pushf
andl
loopne
or
pop
mov
cmpsb
adc
xchg
andl
hlt
aaa
rorb
xor
cmc
push
add
dec
fnstsw
push
int3
inc
arpl
lods
stos
add
jbe
mov
jp
mov
push
push
dec
mov
or
pop
lds
adc
sub
adc
xor
inc
jl
loop
in
mul
sbb
sbb
fcom
ret
into
cmp
ja
aas
insl
jge
out
mov
shr
jg
into
mov
add
mov
pop
arpl
adc
inc
push
ljmp
shlb
add
pop
in
cmp
js
dec
pusha
push
ljmp
sub
mov
rorl
ds
cmc
rcll
mov
jl
repnz
sbb
mov
mov
add
test
xchg
scas
nop
pushf
test
mov
out
bnd
lock
popf
mov
or
sub
dec
fisubs
ror
mov
mov
adc
cmp
daa
cmp
fdivl
jl
jnp
scas
testl
stos
xchg
test
addr16
sub
sub
sarl
mov
fs
pop
std
dec
bound
daa
xchg
jecxz
xlat
popa
jg
mov
call
loop
loopne
fisubrl
xchg
xchg
push
add
and
xchg
mov
xchg
mov
dec
mov
xchg
stos
pop
loopne
std
ss
ljmp
jb
push
cmp
cmpsl
rol
div
fisubl
xchg
push
shll
add
sbb
dec
lahf
jl
jo
jge
cltd
imul
push
mov
push
push
enter
pop
sbb
bound
sbbl
loop
cld
popf
push
test
add
pop
pushf
mov
jns
jmp
sub
and
jno
mov
pop
push
daa
dec
push
pushf
je
lods
int3
mov
lret
mov
bound
jp
mov
mov
jle
testl
scas
dec
mov
test
add
popa
pop
xor
xchg
and
ret
repz
mov
xor
pop
fs
jge
jmp
xchg
mov
cmc
aad
in
jl
scas
mov
jo
test
lods
jb
push
push
pop
jl
jne
ret
mov
dec
sub
and
stos
push
sarb
jne
outsb
inc
lds
jmp
movsl
mov
adcb
inc
push
scas
repnz
les
stos
cld
push
and
mov
mov
jmp
and
xchg
pop
subb
in
push
xor
xchg
inc
daa
out
push
rcl
movl
pop
das
rorl
sbb
adc
call
ds
ja
int
das
adc
push
xchg
aam
stos
dec
iret
or
mov
add
shrb
xchg
jo
mov
jb
and
fdivl
mov
or
mov
push
lods
pop
outsl
mov
mov
adc
out
aaa
hlt
mov
dec
dec
shl
lret
dec
mov
pop
xchg
mov
jb
jp
loop
pop
pop
mov
xchg
leave
es
inc
mov
xchg
idivl
or
loop
test
inc
mov
repz
popf
lods
mov
mov
cmp
in
xlat
pop
fs
adc
sub
shrl
ret
fdivrs
pop
jg
dec
ljmp
dec
mov
rcll
pop
scas
mov
or
sbb
or
or
ljmp
mov
stos
out
jg
mov
fldenv
push
or
cmp
stos
adc
jecxz
adc
pop
bound
icebp
cmp
and
cmp
mov
adc
aam
scas
cld
fstpt
mov
mov
addr16
outsb
dec
rcll
adc
sub
ret
leave
push
nop
pop
pop
lcall
fsubs
in
ret
push
and
mov
rcll
fadd
or
xchg
sbb
pop
sub
lds
lods
out
mov
iret
in
in
mov
mov
lret
aas
divl
xchg
inc
push
out
fnstenv
test
jno
out
dec
or
xor
int3
and
push
pushf
adc
mov
jbe
pop
loop
insl
pushf
inc
lods
inc
addr16
cld
repz
fwait
bound
cwtl
out
pop
mov
jo
in
arpl
bound
cmp
mov
mov
inc
ds
ja
add
aam
imul
mov
fistl
hlt
jp
cs
push
adc
adc
cwtl
lock
xchg
cli
popf
int
mov
lret
mov
pusha
inc
fisubs
fwait
hlt
sbb
scas
jge
cs
fwait
jge
mov
testb
scas
ds
xchg
lea
daa
call
mov
fiadds
nop
inc
pop
dec
pop
xor
outsb
lods
vmwrite
jmp
sbbb
xchg
pop
add
out
lds
mov
xchg
inc
xchg
decb
lods
or
cld
fstpl
movsl
jp
repnz
mov
adc
repz
xchg
mov
shl
test
jp
sub
push
mov
or
arpl
jecxz
test
xchg
sub
or
sub
in
mov
or
dec
mov
cmc
push
inc
mov
loopne
aad
adc
dec
out
jnp
and
mov
xchg
dec
cmp
into
or
subb
testb
pusha
jle
stos
ret
push
negl
fnstenv
gs
das
adcl
xchg
mov
std
mov
aaa
lods
jne
sti
push
aas
movsb
pop
outsl
sub
inc
int3
pop
push
inc
push
fnstcw
lds
inc
hlt
hlt
cmp
in
adc
adc
repnz
into
movsl
stos
xor
ds
push
mov
and
lods
and
imulb
jae
sbb
sarb
aaa
test
xorl
int
filds
insl
daa
cmpsb
add
xchg
add
jp
push
push
or
or
aas
jge
sub
jnp
das
pop
insb
mov
pop
fdivs
lcall
mov
pop
mov
loope
lahf
and
mov
mov
into
arpl
fbstp
pusha
inc
cmpsb
repz
pop
fsubr
int
inc
xchg
inc
mov
or
shlb
push
cltd
dec
and
mov
mov
outsb
pop
mov
xor
scas
mov
push
shll
movsl
jae
out
aam
hlt
and
push
push
inc
insb
pop
jns
test
mov
jle
enter
mov
icebp
jp
mov
pusha
insl
push
push
inc
xorb
cld
fidivl
adc
fsts
in
and
gs
stos
add
jecxz
pop
lahf
add
ret
jecxz
inc
aad
xchg
test
popa
sbb
push
or
sarl
adc
loopne
jg
jmp
mov
mov
in
xor
add
mov
stc
out
pop
adc
insb
ror
mov
imul
mov
jae
imul
cld
cmp
mov
push
stos
cs
or
in
aas
bndstx
stos
bnd
mov
in
les
mov
cli
xchg
icebp
mov
cmpsl
hlt
jl
cs
jmp
jg
sub
cld
pusha
xchg
int3
stos
std
dec
push
fmuls
cmpsb
data16
out
dec
test
negb
daa
out
xchg
dec
test
jl
adc
sbb
sub
call
mov
mov
mov
add
adc
sub
sarb
scas
mov
xchg
pop
lods
repz
add
lds
aam
or
mov
sbb
mov
lahf
adc
lret
cmpsb
push
mov
into
jnp
xchg
addr16
dec
or
ret
lret
inc
int3
int3
movsl
lds
subb
cwtl
mov
add
shl
push
and
pavgw
sub
mov
into
push
cli
dec
jle
lea
loop
int3
or
add
push
clc
popf
stos
pop
testb
mov
cmc
xor
xchg
xchg
mov
adc
pop
dec
arpl
xchg
push
inc
cmp
adc
and
inc
xchg
push
clc
push
pop
dec
insb
cmp
jnp
adc
jbe
sbb
xchg
fcomi
stos
sbb
mov
or
pop
in
dec
aaa
adcb
js
xchg
pop
xlat
mov
xchg
cmpsl
aam
pushf
das
and
in
jl
cmp
add
test
sub
adc
ret
push
inc
pop
out
mov
ret
lock
mov
inc
stc
pop
fldt
or
jns
pop
pop
lods
pop
test
test
dec
adcl
xor
pop
xor
shr
sahf
mov
mov
xchg
mov
cs
xorl
mov
stc
push
xor
lret
or
int3
es
lcall
adc
sub
sub
lcall
mov
mov
pop
xlat
movsb
and
ss
push
or
sbb
xchg
cmp
add
cmpb
xchg
push
mov
adc
stos
or
rorb
sub
mov
push
jnp
xchg
pop
out
enter
xchg
loopne
sub
loopne
xchg
out
and
or
aaa
in
in
mov
xor
aam
jne
fsubs
jl
push
faddp
cmc
mov
fwait
insb
fistl
push
outsb
add
pop
in
shlb
fcomi
sbb
mov
adc
stc
push
mov
fstl
mov
dec
and
in
sbb
sti
faddl
pop
lds
adc
movsb
mov
xchg
lret
lods
dec
hlt
mov
or
push
mov
pusha
mov
and
jge
imul
inc
mov
jp
ret
xchg
mov
dec
pop
inc
pop
mov
nop
je
cltd
mov
xor
jle
sbb
xlat
dec
jge
push
jbe
cltd
mov
and
ret
pop
inc
cld
xchg
mov
add
fldenv
movb
movsl
xchg
pop
ja
jne
push
push
mov
bnd
jae
movsb
jmp
outsl
push
stc
mov
mov
std
xchg
inc
repnz
push
ja
xor
test
repz
aad
sbb
mov
mov
out
rcll
and
jbe
add
jl
jge
xor
enter
sbb
imul
test
nop
out
insb
add
stc
inc
gs
ds
jo
xorl
loope,pt
mov
inc
cmp
leave
mov
inc
aam
aam
fidivrs
adc
mov
push
add
leave
jg
movsb
cmp
push
lcall
adc
cli
into
daa
sub
test
test
lods
inc
xor
cmp
fwait
inc
adc
cmpsl
add
inc
add
adc
mov
inc
addb
adc
bound
push
xor
orl
and
jp
mov
fcoml
inc
aam
addr16
inc
dec
adc
mov
flds
adc
adc
movsb
dec
push
sub
jg
cmp
sbb
inc
rorl
test
sub
push
and
jecxz
push
cmp
add
movsb
ja
adc
cmp
pop
or
pop
les
and
aam
js
push
mov
mov
pop
xchg
xchg
clc
fsubs
jge
imulb
aaa
and
andb
and
addr16
shrl
les
fstl
sti
cli
jns
or
xor
xchg
sahf
div
adc
setg
sti
add
jno
and
xlat
mov
adc
lods
pop
sub
das
or
test
push
in
mov
icebp
dec
sub
lret
cli
inc
pop
pop
xchg
movsl
jns
jno
mov
inc
inc
pop
outsb
pop
leave
lock
stos
or
sbb
lcall
push
pop
je
jns
cmp
dec
scas
aam
adc
mov
jns
aam
mov
mov
push
cmp
out
test
sub
pusha
mov
mov
psrld
int
sub
or
mov
cltd
jnp
test
push
faddl
sbb
repz
test
mov
aad
xor
dec
jg
mov
jbe
mov
test
es
out
imul
push
add
popf
lds
rcrb
cmp
mov
mov
ds
pop
sub
ss
out
fldt
test
and
xor
imul
mov
and
lahf
lock
jnp
gs
cld
lret
cmp
or
ret
dec
popa
push
mov
cmp
scas
xor
and
call
xlat
mov
mov
flds
ds
push
test
sbb
fwait
mov
loop
pop
push
mov
insl
les
sub
repnz
sbb
jb
imul
cmp
fdivp
xchg
mov
jo
arpl
bound
mov
outsl
adc
cmpsl
aad
movsl
pop
adc
inc
xchg
jns
popf
add
jne
loopne
mov
pop
aas
insl
fs
push
stos
lret
rcll
into
or
xor
pop
out
mov
lods
xchg
cmpsl
xor
fbld
mov
dec
inc
addr16
pop
add
mov
cs
leave
mov
xor
ffree
lea
mov
mov
push
push
clc
adc
leave
cmc
mov
mov
or
add
pop
lahf
popf
push
shrb
dec
es
cli
aas
cmp
mov
inc
pushf
sahf
mov
insl
shlb
mov
aad
mov
push
mov
mov
mov
sbb
jecxz
push
sarb
sbb
fldcw
mov
scas
repnz
pop
mov
fs
repnz
inc
imulb
pop
ja
cmpb
xchg
push
xor
cmp
push
popf
dec
inc
push
ljmp
stc
pop
or
lahf
outsb
pop
pop
add
cli
test
pop
lods
or
cmp
inc
test
jmp
mov
icebp
sbbb
xlat
sub
fildll
jae
pop
movsb
cmpsl
adc
fs
in
fstl
mov
shlb
dec
xor
mov
jnp
movl
mov
or
ret
in
decb
mov
sahf
add
push
jle
xchg
jl
lahf
rcl
mov
dec
mov
js
xchg
repz
xor
clc
adc
jno
das
push
adc
fs
and
pop
sbb
cmp
and
cmc
les
rcr
scas
fnsave
adc
mov
int3
int3
stos
adc
rorl
adc
mov
jge
dec
cmp
aam
xchg
mov
mov
stos
inc
jb
int3
std
add
lcall
roll
lret
xchg
in
sub
and
in
rclb
aad
jge
mov
ljmp
xor
adc
out
arpl
mov
cmp
push
pop
lahf
je
rcrb
xor
inc
out
jmp
out
jle
cmpsb
popa
nop
into
cmpb
adc
dec
mov
cmp
fnstenv
hlt
aas
pushf
mov
add
out
mov
out
cmc
test
clc
stos
and
xchg
push
dec
adc
ja
mov
sbb
cmp
inc
je
push
mov
and
out
and
add
adc
fs
stc
inc
adc
and
enter
out
mov
xlat
jb
les
pop
fmuls
shlb
push
cmovle
xor
stos
pusha
cmp
pop
out
adc
test
daa
mov
fstps
das
cmc
inc
popf
stos
and
inc
adc
mov
dec
sbb
movsb
mov
insb
lea
je
pop
hlt
cmp
int
in
popa
ljmp
and
sub
jnp
push
or
clc
insl
je
add
in
mov
in
out
push
cmp
cld
je
sub
gs
idivb
add
bound
imul
xchg
xchg
clc
sub
dec
popf
dec
add
xchg
mov
xchg
out
out
xlat
inc
jne
sarl
out
in
ljmp
movsb
pop
mov
test
in
sahf
inc
mov
and
jo
inc
outsl
sub
and
xchg
mov
xor
aaa
scas
jno
jp
or
sub
mov
pop
or
fdivl
test
stos
sub
repnz
mov
ljmp
dec
fdivrs
mov
scas
shr
sbb
ja
mov
outsb
cli
out
jmp
sub
and
lods
mov
rolb
dec
pop
jle
jns
sub
mov
dec
sbb
push
insl
jnp
or
cld
mov
inc
mov
int
dec
jb
adc
and
push
push
jne
imul
insl
out
jne
or
mov
test
inc
sti
mov
mov
ret
lods
or
push
adc
sbb
ja
test
jb
mov
dec
mov
fs
xchg
test
je
add
pop
in
int3
jns
jmp
xor
push
pop
fmul
xchg
pop
inc
test
repz
mov
in
sub
stos
jge
dec
push
notb
or
sbb
jecxz
mov
in
xor
jp
stos
adc
mov
fistpl
insl
movsb
pop
loop
cltd
lock
orb
loop
adc
jle
dec
xchg
add
jne
orb
imul
pop
divb
xor
cmpsl
pop
insl
int3
push
push
cmp
outsl
outsl
out
sbb
xchg
inc
mov
ljmp
add
jl
or
rorb
sbbl
stc
pop
iret
mov
jl
jmp
xlat
add
or
insb
or
jmp
adc
daa
push
cmp
sub
pop
cmp
ret
xchg
repnz
sbb
jl
mov
push
xchg
xchg
loop
sbb
loop
push
pop
adc
inc
xor
lahf
xor
mov
mov
cmp
push
mov
cmp
addb
xchg
mov
or
loope
jl
xchg
mov
mov
dec
push
or
cwtl
mov
push
pushf
mov
lods
iret
scas
and
dec
add
mov
cltd
js
mov
out
and
sub
jl
xchg
pushf
cld
std
fs
repnz
icebp
sti
fildl
cltd
aam
inc
push
adc
dec
cmpsl
cmp
push
divb
outsb
xor
scas
mov
xchg
bound
fisubrs
push
mov
push
dec
pop
cmp
daa
mov
lret
test
lret
dec
dec
push
jmp
dec
xchg
cld
out
aad
imul
popf
lds
jp
call
sbb
cmp
jp
adc
and
mov
cmpsl
movsb
aam
dec
dec
xorl
cmp
das
dec
pop
mov
fadds
cs
sub
jae
ret
mov
imul
inc
pop
cs
je
or
stos
inc
xor
outsl
mov
jbe
fisttps
lea
pusha
jmp
and
cmp
jb
int
test
sub
ss
in
nop
aad
push
jecxz
adc
xchg
sub
add
test
mov
stos
out
dec
sbb
mov
push
cmpsl
and
out
sbb
fs
nop
mov
xor
mov
mov
inc
mull
jae
mov
pop
roll
std
pop
push
call
roll
fcmovb
fists
inc
int
or
inc
or
test
in
jo
insb
ret
xchg
insl
jnp
mov
cs
repz
inc
sub
jmp
add
leave
mov
mov
push
add
adc
sti
rclb
loop
or
add
call
mov
loopne
enter
xlat
lea
mov
adc
push
cmp
test
jmp
mov
push
push
or
xchg
rolb
add
js
cmpsb
insb
imul
es
push
loope
loopne
cmp
xlat
xchg
icebp
jge
aad
mov
mov
adc
push
push
mov
popf
icebp
mov
push
cmp
push
xor
sub
push
ljmp
out
mov
pop
inc
cmp
jne
jb
adc
mov
cli
pop
stos
cvttps2pi
fs
fstps
dec
test
dec
jmp
imul
inc
movsb
test
mov
cltd
pop
jecxz
pop
lock
fcmovu
in
outsl
out
cmp
push
cmp
fs
call
testb
sub
xchg
dec
push
mov
out
cltd
roll
ret
push
mov
mov
iret
sbb
les
inc
loop
jmp
push
jb
sarb
and
fwait
inc
fcomp
dec
ljmp
add
arpl
or
dec
fwait
mov
pop
xor
lret
cmpsb
lahf
jmp
pusha
jle
mov
xchg
loopne
cltd
pop
ja
lds
iret
cmc
jecxz
ror
daa
sub
sub
std
les
or
or
xchg
fadds
popa
and
jb
dec
mov
divb
pop
mov
nop
hlt
sub
iret
loope
push
jp
or
sub
xchg
cmp
dec
nop
xchg
shll
mov
sbb
lds
push
and
popf
jo
leave
fdivs
xchg
pop
and
inc
adc
stos
cmp
pop
arpl
stc
fnstcw
aam
sub
sbb
inc
jp
loop
xchg
cmp
adc
leave
mov
in
sbb
pusha
je
andl
aam
xchg
into
out
mov
xorb
or
jle
gs
insl
loop
and
pop
cld
and
sarl
cmp
lock
push
xlat
test
cmpsl
push
ret
hlt
sbb
ja
lods
cwtl
arpl
inc
data16
movsb
add
arpl
mov
jbe
lcall
dec
cmpsl
int
add
lock
lret
and
push
das
cld
or
adc
fdiv
add
popa
cmp
loop
push
dec
push
out
cmp
int3
or
xor
insb
test
shl
pushf
cmp
out
xchg
sub
xchg
fnstenv
popa
xor
outsb
popl
cs
adc
mov
push
cmp
arpl
lret
xor
popa
rcr
in
lret
adc
dec
nop
sub
fmul
jmp
in
mov
imul
int3
mov
cmp
add
xlat
repnz
and
xchg
jno
adc
lret
int
out
adc
imul
sahf
or
inc
inc
and
dec
repz
fldenv
jnp
mov
jae
lods
and
dec
lret
and
call
jo
dec
rcl
pop
sbb
pop
scas
mov
add
sub
popa
cmc
cs
jmp
stos
arpl
inc
pop
int3
push
dec
adc
xor
cmp
or
xchg
and
adc
lret
xor
movsl
fstpt
push
cmp
push
cmp
je
sub
cmc
pshufw
mov
xor
sub
or
mov
in
push
cli
and
and
mov
add
ficoms
lods
nop
into
dec
inc
add
mov
outsl
push
pop
xor
ret
pop
rclb
mov
test
jb
daa
cmpsb
mov
lods
jnp
xor
and
movsb
lods
mov
je
insb
mov
test
push
shll
mov
out
call
ds
cmpsl
lods
push
sub
push
scas
js
fimuls
pop
negb
push
js
lea
shl
aaa
cmc
push
mov
inc
pusha
push
inc
gs
call
insl
test
sub
dec
loop
pop
pop
dec
lock
jne
jle
xchg
dec
add
xor
mov
pop
loope
jp
jnp
fs
in
fstpl
cli
mov
xor
repz
mov
rorb
and
hlt
sub
add
dec
sub
loopne
arpl
aad
jg
jae
fdivl
sub
int
pop
cli
mov
add
push
lds
pop
mov
xchg
in
pop
cmp
pop
jl
dec
and
jo
int
mov
test
mov
inc
pop
mov
dec
or
call
rep
std
mov
xor
xorl
pop
adc
fldl
adc
shlb
mul
cmp
mov
and
mov
cs
jb
xchg
or
andb
repz
rorl
cmp
inc
lahf
jae
sbb
test
loop
ret
mov
les
sub
jp
clc
fwait
xor
xor
mov
mov
mov
rorl
adc
ljmp
push
inc
xchg
jne
clc
inc
lfs
mov
loop
pop
jl
push
push
jo
mov
stos
test
push
jbe
mov
clc
pop
pop
out
xor
push
ror
nop
lock
aam
or
adc
adc
cmp
test
daa
sub
xchg
mov
sbb
test
sbb
mov
xchg
dec
les
lsl
out
arpl
rclb
out
ret
es
pusha
pop
xchg
hlt
mov
mov
or
stos
cli
inc
jle
dec
dec
cmc
das
adc
rcll
xor
aas
sarl
pushf
jo
cmp
lret
das
push
dec
xchg
movsl
add
dec
mov
dec
pusha
mov
dec
fadd
inc
mov
jge
mov
out
scas
mov
sub
mov
adc
dec
or
adc
iret
cmp
test
jp
adc
outsl
jnp
push
adc
mov
push
push
mov
xchg
leave
and
dec
cmp
test
pop
inc
arpl
push
xchg
int
fisubs
jmp
ret
add
bound
shrb
shlb
sub
loope
mov
cmp
sbb
insl
jo
sahf
inc
adc
das
jl
jp
jne
lret
sbb
cmp
pop
pusha
push
xchg
fmuls
adc
pop
mov
push
dec
stos
jge
cld
dec
push
and
pop
clc
aaa
adcb
into
cwtl
lret
or
cmc
jg
lock
pushf
ror
fchs
mov
into
insl
push
dec
addr16
das
movsl
test
fdivrs
fildll
pop
mov
xlat
xchg
dec
pop
popf
nop
loop
loopne
push
pushf
jb
outsl
adc
into
repz
in
nop
jmp
adc
fwait
inc
and
jbe
ret
std
sbb
sbb
leave
xor
les
xchg
aas
cmp
shlb
sti
inc
xchg
fidivrl
lret
pop
enter
or
or
dec
adc
cmp
push
sub
scas
fnclex
insl
loop
jb
pushf
add
mov
jne
adc
iret
xchg
or
cmp
scas
cld
subb
xchg
push
mov
inc
loop
mov
mov
mov
jl
imul
fildll
dec
stos
fldl
mov
shll
pusha
inc
movsb
icebp
push
andb
push
push
mov
in
iret
sub
ret
mov
lret
call
jp
and
fwait
shl
addl
mov
stos
dec
aaa
push
mov
insl
pop
repz
mov
mov
movsb
mov
ja
adc
mov
lods
jecxz
cwtl
sub
mov
jmp
pop
sub
shl
fistps
stos
or
int
sbb
loopne
add
jmp
hlt
rolb
orl
pop
loop
sub
mov
sbb
dec
lret
push
mov
and
lahf
add
rcrb
lea
mov
and
scas
out
inc
and
aad
dec
add
and
out
pop
cmpsl
insl
and
scas
fcoml
scas
test
pop
inc
repnz
aam
lock
into
mov
or
cmp
xor
xchg
adc
mov
add
pop
hlt
fidivrl
fwait
jecxz
faddp
test
clc
ja
les
push
mov
cld
test
jbe
mov
pushl
in
insl
por
pop
stos
and
jecxz
fstl
jmp
negb
mov
cmp
sbb
sbb
inc
mov
arpl
jecxz
push
xchg
mov
dec
inc
push
lcall
jae
xchg
sahf
inc
es
push
fidivrs
or
fld
sbb
jge
push
push
xlat
xor
jbe
aad
negb
jne
cld
adc
mov
mov
add
mov
icebp
loop
std
imul
jns
cmpsb
pcmpgtw
lods
mov
or
mov
mov
in
and
ret
or
mov
xor
or
mov
mov
dec
add
fidivs
stos
cli
test
push
test
aad
dec
ror
jne
add
shrb
mov
scas
stos
xor
int
add
xor
mov
mov
inc
popf
cwtl
sub
push
sbbb
add
adc
das
sbb
mov
data16
mov
adc
aas
mov
sbb
xor
dec
mov
mov
frstor
arpl
adc
push
xor
aaa
shlb
aad
fsubs
test
and
push
call
adc
stc
mov
repnz
add
adc
lcall
leave
dec
add
mov
dec
mov
mov
mov
or
aam
mov
cmp
fsts
imul
mov
flds
mov
jg
inc
pop
aam
xchg
les
inc
test
push
lret
imul
add
bound
ret
push
loope
xlat
cwtl
jae
push
push
mov
int
mov
testb
xchg
hlt
test
push
fisttpl
push
sbb
pop
loop
ret
mov
cmpsl
lahf
adc
js
iret
sub
scas
jmp
aaa
lcall
rorl
jne
lret
push
cmp
push
mov
pop
jp
xchg
adc
push
fidivs
cld
es
fisubs
bound
movsb
pushf
test
adc
cli
xchg
test
push
sti
cmp
in
add
add
xchg
mov
rcr
cmpsl
jno
adc
dec
xor
xor
push
pusha
enter
xorb
push
and
test
pop
sub
test
push
es
stos
jno
sar
xor
mov
ficoml
popf
sub
xchg
or
jnp
rol
je
inc
pop
pop
pop
push
ret
cwtl
bts
mov
call
ljmp
ror
sub
stos
mov
push
jecxz
loop
jge
pusha
jo
xchg
cmp
jg
shrb
mov
push
je
sub
loopne
or
mov
cmc
subb
push
dec
mov
test
sbb
sbb
aas
das
sti
test
mov
and
adc
sub
icebp
xchg
pop
aaa
mov
mov
push
js
pop
push
push
jecxz
pop
mov
fisubl
lds
jnp
aam
xchg
cmpsb
ss
adcl
sarb
sbb
xchg
frstor
pop
jno
and
shll
addr16
dec
pop
lock
xor
sbb
mov
xchg
enter
push
div
pusha
adc
notb
mov
sub
movl
xchg
and
es
rclb
insb
and
shll
ret
and
scas
mov
sub
dec
cltd
xchg
jmp
lock
push
fs
mov
jbe
cltd
mov
adcl
imul
ficomps
je
or
and
jno
xor
mov
test
fisubrs
outsl
jae
dec
ljmp
enter
push
fildll
cltd
sbb
cwtl
or
bound
jecxz
nop
insb
sti
adc
sbb
pop
adc
inc
shll
add
scas
sub
cmp
int3
mov
rep
loopne
ret
dec
xchg
test
adc
movsw
jae
add
icebp
loopne
loopne
cmp
push
mov
jl
mov
jmp
cmpsl
cmpsb
pushf
mov
sub
xor
sub
es
stos
and
les
mov
add
jg
and
inc
mov
cmp
dec
sbb
jg
hlt
sahf
test
test
or
orb
mov
adc
dec
or
mov
jb
xchg
xor
ret
xchg
adc
mov
test
dec
loope
fcoms
cmpb
sub
idivb
scas
rcll
lcall
sub
imul
fucom
iret
aad
dec
sbb
push
pop
addr16
pusha
clc
adc
lret
clc
dec
sub
shll
xor
cltd
movsl
xor
outsl
sbb
jecxz
adc
jge
loopne
test
das
dec
clc
xchg
sbb
cmpsb
popf
sub
cmp
stos
jle
mov
push
push
jecxz
push
out
sub
in
pop
fnstsw
push
stos
adc
orb
aad
pusha
hlt
push
push
sub
inc
aas
cmp
leave
addr16
sub
pop
and
pop
addr16
jno
cmc
cmpsl
xchg
xchg
cmp
pop
mov
iret
repz
xor
movsb
lock
pop
inc
sarb
ss
dec
in
fisubs
xchg
mov
adc
aad
sbb
sub
cmp
sub
jae
in
ror
inc
mov
aad
push
push
ds
pusha
imul
mov
mov
mov
insb
dec
or
aad
mov
loopne
aam
imul
cmp
test
and
bound
out
and
or
lock
push
fnstenv
xchg
lret
cmpsl
jecxz
in
cmp
pop
push
pop
cli
inc
pop
sahf
cmp
stos
adc
mov
bound
lock
int
stos
xor
dec
stos
sub
out
add
nop
ljmp
pop
cltd
jp
pusha
pop
aad
sub
call
push
cs
jb
outsb
icebp
or
mov
pop
jo
sahf
push
out
lock
sbb
adc
fiadds
inc
and
aaa
push
lret
notl
xor
hlt
jb
xchg
test
cmp
popf
les
daa
sub
jno
or
add
or
mov
cltd
jl
pop
mov
xor
push
push
lds
adc
test
mov
orl
bnd
decl
add
lret
mov
bound
mov
sti
sbb
pushf
mov
cltd
icebp
cmp
clc
dec
dec
xchg
out
cmp
xchg
jno
mov
pop
add
fcom
cmp
stos
ja
fmuls
lret
mov
movsb
and
jp
sub
xor
mov
insl
bound
aad
jnp
test
test
arpl
ljmp
jp
ljmp
addr16
sub
xchg
cmp
xchg
pop
out
dec
xchg
jge
jecxz
xor
lahf
push
xor
mov
jge
pop
cld
pop
out
ja
cmc
pop
ds
out
loopne
jmp
inc
repnz
inc
inc
mov
xchg
mov
xor
fdivrp
cmp
lret
push
xchg
bound
xor
sarb
jns
mov
cmp
ss
pop
scas
inc
fnsave
test
add
mov
and
out
es
sbb
jmp
lods
in
xchg
push
push
nop
ja
bound
add
push
jno
add
cmp
cmpsb
ja
gs
add
fldenv
cmc
mov
int3
add
cmp
lds
iret
push
jnp
inc
out
scas
mov
pop
sbb
or
jmp
insl
xchg
cmp
mov
and
or
in
aaa
lcall
xchg
imul
mov
dec
fwait
push
subl
xor
pushf
repnz
mov
push
push
mov
ret
es
int3
outsb
stc
shlb
xor
dec
add
lock
mov
stos
cmp
out
xor
cmp
and
mov
lds
stc
mov
add
insb
sub
fsubrl
sbb
je
dec
mov
xchg
loopne
jl
lea
into
sub
push
xchg
fldcw
cmpsl
push
cmpsl
jecxz
icebp
adc
mov
push
cmpsl
add
xlat
mov
jns
pop
xchg
or
clc
cmc
out
sbb
push
inc
xchg
pop
and
jge
xor
orl
push
out
faddl
enter
je
mov
push
ss
xor
mov
aaa
mov
inc
ja
mov
mov
sub
das
out
xchg
sbb
pop
sub
or
call
gs
scas
push
lods
jne
push
jp
in
jae
sbb
cmp
push
xor
into
adc
mov
xchg
inc
mov
fwait
fwait
jge
sbb
rorl
push
jne
pop
mov
dec
mov
dec
add
loopnew
jno
or
imul
and
mov
in
std
loope
sbb
dec
add
leave
push
pop
mov
int
into
sbb
or
and
jbe
mov
sub
pushf
xchg
sub
add
sti
pushf
aam
lret
cltd
add
popf
push
icebp
pushf
out
mov
jbe
daa
movsb
xor
mov
jge
cmp
test
push
mov
cmpl
pop
vandps
es
pusha
test
push
and
out
xor
enter
mov
int3
mov
nopl
icebp
adc
ja
or
mov
or
pop
lret
scas
cld
ja
loop
jge
out
fsubrs
stos
cli
adc
loopne
mov
int
xor
lock
xchg
sahf
insl
push
and
in
jnp
adc
sub
shlb
push
pusha
jecxz
out
or
loopne
sbb
int
mov
sub
xor
test
fwait
or
cwtl
cli
mov
mov
inc
mov
test
mov
scas
mov
clc
and
test
or
pop
sub
push
or
jnp
jb
rorl
jecxz
roll
fstl
mov
and
es
mov
stos
and
loope
jo
mov
test
shrl
mov
cwtl
loope
and
mov
repz
jns
mov
xor
sbb
adc
es
jmp
lock
int
lahf
pop
cmp
cmpsl
sahf
xchg
mov
sbb
mov
jg
loop
mov
shrl
cmp
jl
out
and
jmp
and
cmc
pop
mov
push
ret
or
and
xchg
jb
pushf
das
sub
in
pop
push
push
adc
mov
in
cs
aad
add
push
push
repz
cmpsb
and
jmp
stos
cli
adc
pop
dec
jecxz
loopne
imul
adc
jecxz
or
movsl
gs
xor
mov
mov
inc
push
dec
lods
mov
and
les
loop
push
mov
aas
pop
faddl
lret
loopne
fxtract
push
notl
add
add
enter
or
and
insb
xchg
ret
pop
push
notl
jbe
fwait
gs
sbb
or
add
jb
and
sti
push
ss
mov
mov
pusha
mov
in
lahf
mov
das
rcrb
into
jnp
int3
mov
adc
dec
jp
sbb
std
lods
rcrb
addb
orb
and
inc
bound
repz
fnstenv
lcall
and
test
or
in
popf
mul
loope
inc
scas
movsl
mov
jno
les
out
rol
divb
dec
sub
dec
cltd
mov
int
pusha
sbb
xchg
pop
cmp
or
dec
notb
sbb
cmp
mov
sbb
push
ja
pop
cmp
dec
xor
cmp
mov
mov
push
pop
cmp
xchg
push
pop
jae
mov
xchg
sub
xchg
sarl
aam
lahf
lds
sub
cmpsl
pop
cs
repnz
mov
jbe
push
stc
popf
movsb
sub
dec
movsl
jmp
je
dec
hlt
xor
clc
lds
sub
add
pop
jmp
xchg
mov
or
scas
out
repnz
cs
push
sub
jno
repz
mov
push
jns
mov
mov
sub
push
lmsw
insl
les
add
hlt
xchg
push
jne
xor
lahf
sub
push
outsl
lret
fdivl
call
out
jp
movsl
jmp
daa
shll
fmul
les
xchg
fists
sbb
push
mov
jae
sub
out
movsl
cli
jle
js
fldcw
test
adc
jne
aam
lock
dec
push
popa
sub
rcl
addr16
mov
stos
mov
repnz
push
out
mov
push
sub
sub
pop
dec
rcll
xor
mov
mov
push
jp
out
add
push
cmp
fmuls
cld
mov
clc
mov
test
jmp
pop
sub
data16
jae
xor
xor
movsb
sahf
in
and
es
das
xchg
hlt
cmp
scas
mov
scas
daa
and
adc
and
call
inc
fcmovb
jecxz
fidivrs
rorb
sarl
stc
jmp
shlb
pop
test
mul
lret
pop
jae
lods
popa
jmp
xchg
xchg
mov
mov
xor
mov
push
lret
ja
add
imul
sub
fiaddl
fnstcw
push
repz
adc
test
out
leave
orl
insb
stc
aam
aaa
jp
push
daa
or
jbe
mov
mov
mov
fstpl
inc
sub
outsb
fwait
jp
xor
int3
cmpb
fwait
inc
outsb
lods
ret
or
test
cmpb
jne
addl
fidivrs
les
pop
mov
jl
mov
mov
pop
add
xor
mov
jge
ljmp
jae
sbb
imul
or
dec
lock
fdivr
lret
out
outsl
pop
sbb
mov
mov
sti
fnstcw
xchg
adc
sbb
pop
ret
xchg
imul
push
out
inc
loope
add
les
mov
sbb
push
andl
mov
cmp
inc
mov
jo
lods
cs
fdivs
insb
sbbl
push
or
jae
pop
add
xor
add
jg
cmc
push
mov
in
lods
in
push
ja
cmpl
cmc
mov
imul
les
outsl
insb
mov
imull
pushf
or
cmp
mov
fs
adc
das
sti
and
dec
push
mov
stos
sarl
out
pop
sub
sahf
pop
adc
jno
dec
dec
scas
and
pushf
arpl
dec
xchg
negb
mov
outsl
jge
fs
arpl
aaa
stc
jge
inc
cmp
add
inc
lods
pop
gs
push
shll
test
xchg
nop
imull
addr16
js
repnz
xchg
flds
stc
xlat
repz
insl
jbe
imul
je
inc
or
pop
pop
or
mov
ss
mov
inc
hlt
mov
mov
rcrb
cmc
push
loopne
js,pn
or
dec
sbb
mov
test
stc
sti
sbb
inc
adc
inc
xchg
inc
pop
adc
repnz
scas
push
aad
add
and
mov
dec
je
sbb
aas
cmp
int
sub
mov
les
lahf
add
cmpsb
or
push
fstl
es
xor
lock
sub
shr
mov
mov
mov
js
test
pop
stc
fwait
mov
pop
cmovbe
mov
add
cmp
outsl
popf
sub
data16
fwait
cmp
es
notl
adc
xchg
out
arpl
fidivrl
jae
test
inc
mov
repz
cltd
mov
in
mov
out
jns
lods
out
xchg
adc
or
mov
jmp
mov
dec
stos
jecxz
push
ret
out
fwait
xor
je
addl
jmp
mov
fimull
mov
mov
mov
jmp
mov
add
divl
movsb
ja
push
pusha
leave
mov
incl
add
sbb
lods
sub
sbb
push
jmp
xor
pop
sub
lcall
or
dec
add
sti
stc
ljmp
fistpll
insb
xchg
lods
cmpl
test
xlat
aam
aad
dec
add
aas
dec
pop
cmp
insl
es
sub
cmp
mov
out
decl
jg
scas
jp
xlat
sbb
mov
adc
je
jecxz
mov
loop
insl
sbb
loopne
pop
jmp
fdivl
frstor
es
xchg
fwait
pop
enter
jg
mov
mov
jl
or
mov
frstor
movsl
call
shl
xchg
arpl
cmp
fs
aaa
std
stc
dec
test
or
lea
jae
adc
cwtl
pop
cld
mov
push
lock
cmp
inc
lds
in
and
rcll
lret
pop
jnp
loop
adc
out
mov
mov
aaa
dec
xor
out
adc
xchg
dec
and
fwait
dec
out
push
in
add
xchg
sub
scas
addr16
sub
push
dec
jecxz
jo
sbb
sub
pop
xchg
pop
jnp
sbb
cmp
xor
popf
scas
cmpb
mov
fnsave
sub
pop
xchg
gs
fiaddl
shlb
jbe
out
ret
mov
cmp
cmc
adc
cld
jge
hlt
je
sbb
pushf
leave
push
cmp
stos
push
mov
in
mov
mov
push
fcompl
inc
push
repnz
sti
push
xor
fnstenv
or
xor
ljmp
mov
roll
lret
or
fwait
jne
jmp
fiaddl
iret
inc
je
call
lods
scas
cmp
cmc
out
pop
cwtl
add
xchg
outsb
and
adc
cli
ja
fimull
addl
pushf
fdivl
into
inc
jbe
mov
test
push
daa
or
jecxz
ss
inc
lahf
cmp
cmp
pop
daa
cmp
and
call
loopne
xor
xor
pop
fs
sbb
call
mov
test
fsubl
mov
lock
lret
mov
pop
mov
jae
out
or
inc
stos
mov
loopne
pop
inc
fisttpll
in
ret
jno
inc
dec
cmc
add
or
into
leave
pop
or
out
loop
mov
inc
xlat
inc
dec
and
out
ror
pop
push
pop
int3
and
inc
cld
xchg
sar
push
pop
ret
sbb
out
test
mov
cmc
sbb
outsb
push
pop
hlt
dec
nop
pusha
imul
shlb
adc
ljmp
dec
cs
add
dec
lock
sbb
addr16
cmp
push
add
mov
and
movsb
and
imul
jge
inc
and
add
rorb
dec
jmp
sub
jmp
jne
stc
jae
lea
aad
popf
dec
xchg
xorb
pop
mov
pushf
cwtl
sub
and
or
inc
in
push
fmull
stos
ss
xor
daa
enter
mov
jns
psrlq
aaa
adc
fnstenv
xchg
lret
jne
mov
loop
mov
in
out
enter
lods
jle
imulb
add
sub
lahf
popf
push
faddl
xchg
inc
or
xchg
cmc
iret
sbb
xchg
dec
inc
fisttpl
js
ja
mov
je
mov
test
pop
jbe
mov
test
je
notb
bound
pop
sahf
mov
and
cli
arpl
or
pop
lcall
fwait
push
imul
mov
mov
ljmp
movb
in
sbb
leave
lcall
bnd
imul
cmc
iret
xchg
fidivrs
inc
dec
inc
cmp
adc
inc
cmp
cs
testb
mov
ljmp
icebp
sbb
fldcw
dec
test
int
xor
dec
mov
arpl
movsl
push
sahf
cmpsb
roll
mov
mov
test
push
pop
inc
jbe
mov
and
push
adc
add
adc
in
popa
add
mov
push
loopne
pop
dec
push
dec
vmovupd
mov
outsb
cmpsb
push
cmc
sbb
cli
insb
lock
jbe
aaa
loope
and
push
and
dec
jns
add
jne
inc
loop
sub
add
dec
or
sub
mov
mov
enter
cmp
in
and
roll
les
jmp
int
add
mov
mov
inc
push
sub
push
mov
xchg
mov
test
jg
dec
test
mov
dec
jno
mov
inc
hlt
popa
or
negl
fucom
adc
xchg
lods
push
sbb
cmp
inc
jb
mov
clc
std
enter
xchg
and
xchg
ja
sbb
out
dec
inc
insl
repnz
lds
pop
paddb
xchg
outsl
int3
insl
sub
jbe
inc
fistps
or
cltd
shl
aaa
sahf
sub
mov
jg
pop
mov
imul
inc
je
add
insb
fildll
jp
lds
push
scas
insl
jg
mov
push
push
mov
adc
mov
xchg
mov
sub
push
aam
gs
and
inc
sub
mov
add
add
rcrl
lods
adc
fisttpl
sub
cwtl
ja
mov
add
mov
cmpsl
fwait
sub
sub
lret
push
repz
jp
sbb
xor
xor
xchg
dec
cld
leave
dec
sarl
jbe
mov
roll
gs
dec
push
mov
lret
loop
mov
or
jne
test
push
fmul
xchg
inc
ds
push
and
scas
hlt
lds
push
sbb
cld
sbb
inc
call
or
lock
add
dec
push
dec
dec
add
test
fcomi
enter
out
xor
mov
cmp
stos
sbb
mov
scas
movsl
mov
outsb
insb
or
mov
mov
and
mov
movsl
dec
xchg
mov
lock
xchg
push
cmp
xor
sub
push
fiadds
mov
pop
or
testl
rcr
pop
das
ljmp
loopne
movsb
dec
or
sbb
xchg
shr
lret
jno
idivl
pop
xchg
fisttpll
cmp
pop
push
pop
push
push
xor
cmpsb
mov
lods
sahf
call
jge
in
int
fwait
jg
sahf
out
repz
enter
jo
mov
leave
ss
sbbb
repz
xchg
popa
push
cltd
insl
sbb
or
pop
mov
je
scas
pop
nop
push
cmpl
enter
sbb
mov
mov
xchg
cltd
xorb
ss
fs
xor
clc
iret
aad
rclb
imul
repz
bound
fwait
cmpb
nop
pop
fcoms
jecxz
das
mov
insl
fimull
out
scas
xor
iret
rorl
add
jg
test
push
sbb
notl
pushf
push
dec
test
cld
xchg
mov
add
add
push
jmp
lahf
xor
push
xchg
popa
mov
inc
mov
adc
dec
testl
fcoms
stc
arpl
pop
loope
sub
sbb
bound
push
vpshufhw
inc
dec
xor
je
stc
mov
fwait
icebp
xchg
sti
lea
sub
test
dec
push
inc
popa
xchg
xor
fs
jno
add
sub
pushf
stos
jnp
adc
dec
cmp
dec
mov
ret
pop
in
push
mov
insb
insl
shlb
or
daa
sbbl
data16
push
xchg
sbb
push
fcompl
jmp
scas
xor
gs
mov
pop
mov
sub
pop
sub
adc
mov
fistpl
nop
addl
shl
popf
insb
adc
rcl
xchg
daa
adc
push
pop
and
or
jb
bound
jle
adc
dec
test
xchg
ret
xchg
in
push
shlb
imul
stos
es
pop
mov
sbb
adc
rorb
nop
inc
mov
fisubrl
mov
lahf
lret
or
pop
imul
lret
push
inc
insb
sti
mov
dec
and
xor
into
xchg
jmp
xor
pop
mov
push
ror
add
sti
adcb
mov
sahf
inc
pop
int3
data16
sarb
lcall
mov
add
mov
clc
pusha
jno
or
rorb
jne
cltd
loop
mov
ret
jae
mov
outsl
jl
and
ss
movsb
popf
shrl
aam
inc
dec
push
mov
push
cs
outsb
hlt
rclb
jp
in
cli
repz
arpl
stos
imulb
pop
incl
ds
aas
xchg
dec
clc
ljmp
in
into
or
push
inc
xlat
les
push
daa
fdivl
sbb
pop
fcomps
fstl
add
loopne
divl
std
aaa
adc
stos
mov
sub
in
pushaw
xor
fsubr
xor
imul
inc
imul
movsl
add
sbb
cli
fldl
lods
mov
xor
add
mov
int
mov
into
rclb
imul
mov
inc
es
ja
outsb
xor
enter
xor
iret
add
pop
outsb
sub
dec
outsl
mov
sbbl
mov
ja
add
in
dec
adc
int
xor
cs
mov
mov
gs
lret
stos
shrl
lock
es
push
pop
and
adc
lcall
loopne
jne
push
jno
test
addr16
in
in
xchg
add
es
sub
lahf
mov
jo
or
ds
pop
enter
aam
shrb
pusha
aam
imul
mov
mov
pop
xchg
mov
out
out
insl
scas
nop
aad
cmp
xor
cwtl
lcall
popa
ja
fbld
xor
shrb
xlat
pop
out
rcrb
int
fcmovb
test
clc
and
repz
xchg
mov
jae
mov
push
and
arpl
or
pop
addr16
or
movb
fcmovnbe
jmp
fistpl
inc
adc
inc
sbb
dec
or
sbb
add
cmp
and
stos
push
pop
mov
add
subb
mov
jp
xchg
inc
shll
xchg
pop
cmp
jmp
jb
in
and
in
mov
cmp
or
aas
dec
lock
or
icebp
fiadds
cmc
data16
aam
sbb
movsb
jbe
push
xor
imul
push
aad
sbb
or
push
clc
push
mov
ja
mov
mov
push
testl
fsubrl
sbb
fldcw
adc
jg
imul
adc
inc
xchg
inc
pop
inc
and
jbe
sbb
cwtl
daa
sbb
cmp
cltd
jns
test
pop
inc
aad
mov
push
pop
sub
push
mov
fsubs
mov
or
fnsave
daa
into
mulb
sub
lcall
js
sub
dec
insl
test
subb
dec
dec
repz
xor
add
jp
dec
lret
mov
cmp
sbb
insb
test
add
repz
fists
fidivrs
xchg
sbb
test
aad
sub
test
imul
sub
or
cmpl
push
pop
iret
sbb
mov
adc
xchg
aad
jp
push
test
xchg
and
or
hlt
lods
mov
push
sub
aam
xchg
mov
pop
push
out
or
xor
gs
and
cmp
add
or
cmp
mov
push
in
pop
movl
popa
leave
sbb
add
mov
data16
add
xchg
or
insl
in
cmc
add
xlat
test
push
and
setbe
mov
fisubrl
nop
adcl
cmpsl
inc
xchg
inc
mov
es
mov
dec
fst
insl
pop
fidivs
iret
and
push
or
iret
adc
mov
je
daa
mov
cmp
xchg
bound
or
shll
adc
jb
sub
fidivs
dec
frndint
lahf
bound
testl
loope
je
xor
add
jns
aam
sbb
push
jno
cwtl
mov
and
fistl
push
ror
imul
sub
loope
dec
sarl
pop
add
and
jo
hlt
cli
jno
mov
pop
les
mov
jle,pt
mov
leave
in
in
or
jp
movsl
xchg
mov
adc
pusha
ja
cmp
mov
jg
add
bound
syscall
cwtl
ret
mov
jno
xor
shll
lcall
pop
adc
and
or
jb
jae
mov
mov
fcomi
mov
cmp
pop
jge
xor
sbb
dec
jno
sarb
xchg
push
sbb
xlat
in
mov
jbe
cld
mov
push
aaa
push
stos
aaa
cmpsl
push
pop
add
mov
test
jle
xchg
push
in
cmc
lret
rclb
fstl
repz
push
sti
scas
bound
xor
and
xlat
scas
ud0
daa
adc
cmpsb
cmp
dec
and
pop
lods
sbb
push
movl
rolb
xchg
jns
aas
jbe
add
xor
outsl
lock
sbbb
or
out
rsqrtps
mov
imul
mov
or
cs
mov
dec
cli
lds
data16
jle
pop
nop
or
and
pop
inc
btr
or
out
pop
out
lods
push
cmp
cmc
fdivrl
add
lods
sbbl
lret
adc
jmp
in
add
cmp
jbe
movl
test
scas
dec
mov
mov
js
xor
jb
movsl
adc
gs
adc
addl
mov
mov
movsl
int
lret
enter
out
ss
inc
sub
dec
paddb
inc
jns
and
cmp
pop
stos
and
lret
les
cltd
popa
cli
mov
mov
adc
subb
mov
adc
test
aad
mov
adc
jmp
push
inc
inc
sbb
pop
mov
push
mov
sub
mov
pop
pop
mov
or
daa
ja
adc
mov
in
test
push
cmp
pop
fnsave
cltd
mov
jecxz
xchg
sbb
lock
pop
fbstp
pop
pop
into
je
pop
cmp
or
lea
dec
cltd
popf
xchg
sbb
aad
cmp
mov
mov
xlat
test
add
loopne
aas
sbb
call
aam
ret
testl
jecxz
inc
and
dec
in
leave
mov
or
jmp
push
dec
cmp
inc
dec
and
xchg
ficoms
sub
adc
pop
cmp
pop
or
mov
cli
es
mov
xor
cmp
push
pop
dec
popf
mov
add
movsb
pop
mov
and
lea
rcl
mov
mov
xchg
arpl
pop
mov
sub
outsb
ja
jl
cld
enter
es
dec
pop
call
daa
data16
pop
jmp
sbb
loope
cli
push
push
test
mov
inc
sbb
and
movsb
and
push
jne
inc
cmp
sbb
mov
adc
sarl
icebp
lret
scas
outsl
xchg
into
sbb
or
add
mov
inc
js
push
sub
add
xchg
jae
cmc
imul
add
stos
and
aad
mov
mulb
dec
lret
lock
jp
inc
mov
rcll
ret
into
add
or
fnsaves
andb
into
xchg
out
outsb
and
sbb
fdivrs
pop
mov
sub
enter
add
gs
mov
iret
call
loopne
in
dec
sub
sbb
jns
filds
mov
and
pop
pop
clc
mov
and
dec
dec
out
es
into
add
jle
lret
je
stos
paddb
lahf
scas
pop
jb
lret
arpl
out
nop
add
popa
fsubs
xchg
jmp
mov
pop
inc
mov
out
dec
mov
leave
icebp
mov
les
xchg
mov
pop
mov
inc
or
jbe
lahf
dec
in
movsb
dec
xchg
mov
in
lock
jp
ljmp
std
add
inc
jmp
dec
fadds
mov
add
insb
sbb
mov
mov
fimuls
leave
xchg
out
adc
inc
and
nop
sti
in
inc
das
ret
cmp
push
xor
push
dec
pop
and
repnz
add
mov
out
ljmp
out
dec
or
inc
xor
push
popf
mov
xor
cmp
cmp
and
pusha
xor
es
arpl
adc
ret
int
ja
outsl
mov
mov
sbb
pop
mov
pop
and
sarl
imul
ja
mov
and
adc
dec
xor
das
adc
push
loope
mov
inc
pop
das
adc
fsub
js
hlt
bound
pop
push
repz
mov
test
xchg
and
cli
movsl
mov
push
pop
and
ss
lcall
inc
xchg
push
cli
pushl
jne
sub
jns
adc
insl
or
aas
dec
iret
imul
jae
out
mov
push
fnstsw
jnp
cmp
xlat
mov
xchg
xchg
stos
adcb
testl
mov
push
pop
pop
mov
dec
in
or
push
xchg
xor
xchg
inc
xchg
cwtl
push
dec
subl
outsb
in
test
sub
outsb
idivl
sub
dec
repnz
ficoml
shll
pusha
jnp
mov
bound
pop
arpl
dec
cs
pop
aas
ret
mov
xor
or
mov
jge
xchg
sub
push
jecxz
pop
xchg
mov
jle
leave
in
push
addl
add
setle
xchg
dec
int3
xor
pop
aas
movsl
and
imul
ljmp
jmp
bound
pop
xchg
jecxz
jnp
mov
lock
pop
push
mov
pop
xor
iret
mov
jg
jl
mov
andl
ljmp
insl
sbb
sub
outsb
daa
xor
aad
rclb
aas
jecxz
sub
pusha
push
movsb
inc
mov
xlat
fiaddl
push
in
arpl
mov
scas
int3
out
sbb
xchg
loope
sbb
xchg
int3
decl
cmp
outsb
mov
push
and
cmpsl
add
cs
aam
je
insb
cs
sahf
lret
xchg
adc
adc
jne
out
fsubrs
dec
ret
ds
adc
cmp
inc
or
ljmp
cmp
rcl
or
jae
cmpsb
sbb
lods
loope
aas
xlat
loope
xor
ljmp
pop
scas
stos
pop
push
fwait
test
imul
enter
adc
pop
outsb
sub
sub
repz
or
push
sub
xlat
push
add
frstor
mov
sbb
sbbb
arpl
in
add
bound
mov
sbb
jnp
add
sbbb
fistps
push
add
loop
mov
and
adc
sahf
push
dec
rorl
jecxz
push
inc
orl
mov
es
adc
sub
and
push
cmpsl
and
int
mov
inc
dec
ss
mov
mov
scas
jecxz
pusha
out
adc
push
in
push
ret
jl
sbb
push
mov
push
sub
jo
cmp
inc
into
add
xchg
pop
sbb
sub
jg
inc
adc
and
pop
loopne
imul
cmc
insb
and
outsl
test
sub
bound
and
aas
imul
push
push
xorb
bound
lods
xor
insl
push
stc
dec
adc
push
adc
outsb
push
sub
or
xor
xor
std
sub
out
adc
adc
popa
hlt
inc
stc
or
adc
aas
sub
sub
jo
xor
dec
mov
inc
pop
add
jne
jno
test
popa
mov
cmp
mov
dec
ljmp
imul
aaa
push
out
clc
sub
mov
data16
aam
and
ljmp
add
pop
into
aas
aaa
mov
pop
jle
repz
mov
aas
data16
fistpll
mov
cs
arpl
cmp
push
cmp
imul
cmpsb
mov
repnz
jg
ljmp
mov
push
hlt
addr16
cmpsb
push
clc
das
add
cmp
loope
ja
andb
enter
or
mov
pop
add
pop
pop
cmp
pop
sub
inc
fs
jl
pop
insb
mov
sbb
cs
xchg
cmp
aas
int3
sub
roll
int3
sub
pop
xor
adc
inc
int3
and
add
xchg
out
cs
jno
jmp
mov
add
popa
cmp
mov
out
rcrb
ret
int
mov
into
loopne
xchg
jo
jl
movsb
push
mov
mov
daa
adc
bound
into
cli
fs
sbb
fistpll
repnz
aas
pop
cmc
add
xchg
adc
dec
mov
mov
xchg
xor
dec
and
dec
add
leave
or
jle
push
imul
ffreep
push
sbb
sbb
adc
rcrl
push
xchg
ror
sbbl
stc
fucom
mov
mov
adc
outsb
stc
dec
std
cmp
insb
cmc
fwait
inc
jbe
and
push
mov
test
pop
mov
jg
mov
pop
dec
scas
cmp
sbb
push
sub
jle
iret
lock
jbe
fdiv
mov
ret
jl
out
xor
cmpsl
or
ss
imul
fstl
jecxz
xorb
pop
xchg
lds
mov
lret
jg
lcall
cltd
sub
adc
arpl
lret
cmp
movsl
loope
das
jnp
xor
shll
cmc
in
call
scas
jne
and
xchg
out
gs
mov
faddl
cmp
nop
and
mov
paddsb
shlb
ds
cmp
cmp
xchg
and
andl
mov
or
or
repz
jmp
sarb
lret
pop
icebp
cltd
in
xchg
cmp
mov
push
test
movsl
in
jp
nop
pop
add
outsb
push
sub
sbb
cmpsb
adc
popa
cmp
addr16
dec
cmpsb
cmpsl
pusha
pushw
cmp
push
sub
repnz
mov
push
and
push
cmp
cmp
mov
clc
adc
arpl
shl
aas
sub
push
cmp
cmp
mov
cmc
fucomi
shrb
sbb
xchg
clc
mov
inc
xchg
nop
or
mov
push
testl
test
clc
sub
adc
push
scas
adc
int3
sub
dec
insb
mov
cmp
jge
mov
setnp
aas
mov
pusha
outsl
fistl
inc
mov
sbb
pop
push
test
aaa
rcrb
repz
hlt
push
dec
or
fsubrl
arpl
test
and
pextrw
sbb
mov
nop
xchg
sub
pop
into
std
lret
dec
mov
push
add
sub
inc
pop
fndisi(8087
pop
ja
std
lcall
cmc
sbb
add
jle
cmpsl
in
dec
xor
mov
je
inc
cwtl
push
sti
shlb
in
push
add
fs
ret
cmp
adc
mov
push
aad
xchg
sub
add
cmpsl
out
hlt
dec
sahf
adc
outsb
movsb
movsl
daa
add
test
sti
add
jle
imul
pushf
mov
cli
mov
cmpsb
enter
mov
xor
fsubl
dec
in
jae
push
jo
out
insb
shl
lods
test
lods
inc
and
cmpsw
popa
adc
cwtl
push
in
jne
adc
orl
push
pop
jecxz
mov
pop
popa
sub
xchg
pop
jb
jecxz
add
mov
xor
cmp
or
push
pop
dec
dec
push
push
mov
inc
xchg
mov
dec
cmp
pop
mov
adcl
je
pusha
ja
sub
mov
adcb
inc
xor
sub
out
sbb
ret
add
cmc
in
out
imul
jle
popa
xchg
or
push
sub
push
sub
jmp
push
inc
mov
mov
std
outsb
imul
stos
mov
int3
dec
in
and
aas
push
jno
hlt
or
lds
test
dec
out
outsb
sub
cmp
xchg
cmp
mov
pop
pop
icebp
xchg
out
ljmp
jmp
jmp
pop
repnz
pop
jno
push
jge
clc
mov
lahf
inc
iret
in
in
mov
loopne
fsubs
stos
cmp
or
movb
rcrl
ret
aas
mov
cltd
fisttpl
sbb
cmpsb
aaa
cmp
push
xor
mov
cmpsl
inc
cmpsl
out
inc
fstps
arpl
mov
xchg
push
xchg
sbb
enter
xor
add
sbb
or
into
sub
adc
ficomps
inc
add
lret
mov
sub
idivb
int
gs
lock
pop
inc
dec
xchg
mov
push
insb
mov
daa
jno
add
test
xor
leave
mov
aaa
sub
nop
loopne
jo
inc
scas
sub
sbb
lret
mov
mov
mov
adc
addl
outsl
fnsave
imul
push
mov
fs
stos
jge
add
popf
xor
jo
test
popa
or
jp
pop
pop
clc
aaa
aaa
xchg
loop
jb
sub
or
inc
enter
mov
adc
fwait
jbe
jmp
ja
jmp
pop
jo
mov
dec
fprem1
sub
sti
pop
test
stos
mov
leave
out
outsb
mov
jae
ljmp
mov
jae
xchg
mov
sbb
push
sub
sahf
mov
loope
icebp
jle
sarl
dec
push
sub
mov
mov
push
push
mov
xor
push
sahf
pop
xchg
mov
idiv
sub
push
out
daa
das
in
dec
xchg
jmp
pop
mov
and
out
ret
push
jecxz
nop
push
sbb
dec
sbb
push
pushf
jne
mov
xor
mov
add
int
cld
decl
sbb
int3
icebp
sub
lock
pop
mov
lcall
je
sub
imul
xchg
mov
sub
ficoml
sbb
xchg
movsl
fistps
arpl
je
xchg
pop
ja
cli
leave
subb
in
loopne
popf
inc
inc
mov
or
dec
rcrl
pop
push
and
mov
cmc
push
push
push
sbb
repnz
push
push
xchg
leave
inc
mov
and
in
shll
ja
testb
shlb
fwait
movsl
xchg
addr16
or
nop
leave
mov
mov
inc
push
loopne
push
push
les
lahf
mov
mov
or
fwait
rolb
lcallw
cmc
xlat
push
fmull
inc
mov
lods
push
out
jl
mov
int
or
cs
add
popa
lock
ficomps
es
or
lret
ret
inc
lret
or
call
mov
lods
mov
push
mov
jno
inc
mov
cmc
dec
leave
arpl
mov
mov
jl
mov
je
or
insb
shlb
ljmp
sub
push
es
pop
iret
mov
mov
incl
or
xchg
inc
loopne
mov
add
or
mov
xlat
dec
lret
arpl
je
add
je
adc
fists
lods
stc
jbe
push
push
ficoms
je
sub
dec
das
imul
aas
cwtl
mov
negl
ret
jbe
rcr
leave
push
jmp
bound
outsl
push
push
and
addl
pop
jp
popf
pushf
cmpsl
rcr
popl
dec
pop
gs
in
push
sahf
imul
arpl
xchg
sti
push
push
and
fwait
push
mov
mov
sub
mov
cmp
idivl
push
in
in
push
movsb
scas
jmp
mov
xchg
movsl
test
xor
add
sbb
rcll
mov
cmp
in
add
xchg
adcb
xor
into
adc
ret
addl
lods
mov
ret
in
dec
add
or
outsl
imul
lock
mov
scas
popa
cmp
jae
jle
bnd
adc
and
push
cld
or
add
dec
ret
sub
jp
mov
mov
in
ljmp
sbbl
and
jbe
push
jl
int
lahf
adc
push
decl
rclb
clc
in
adc
lea
aaa
test
sbb
test
or
mov
in
mov
lods
lods
mov
addr16
mov
and
jae
jle
int3
sarb
loope
mov
push
xchg
rolb
cwtl
imul
mov
loope
cmp
and
mov
stos
inc
insl
push
mov
out
ds
mov
sbb
pop
arpl
xchg
ss
sub
add
sub
lock
inc
sub
or
imul
inc
loope
xor
addr16
cs
aaa
pop
mov
repnz
arpl
adc
data16
jl
mov
mov
sub
mov
adc
mov
and
dec
pop
ljmp
pinsrw
mov
repnz
pop
in
cmpsl
jecxz
aas
ud2
fimull
dec
lahf
push
shll
jbe
insl
loope
test
pop
and
cs
sub
fnstcw
lds
out
jge
data16
in
add
add
lods
ret
mov
aas
ret
add
scas
and
aad
ret
pop
imul
hlt
xchg
lds
cwtl
xchg
and
inc
fstl
daa
cmpsb
xor
or
subl
leave
movsl
mov
mov
int
lea
fld
lds
faddl
and
add
lods
sarb
dec
mov
adc
dec
jb
in
or
and
les
test
xor
movsb
dec
add
jnp
out
or
push
test
inc
rorb
dec
shll
sub
or
imul
mov
or
cmp
dec
movsb
fisttpl
xor
jns
mov
inc
xchg
sbb
sbb
inc
gs
roll
pop
push
dec
enter
std
out
scas
add
sub
mulb
cmp
jmp
fcoml
call
insb
loope
or
or
insb
mov
clc
adc
jmp
das
mov
or
lcall
nop
mov
fcmovnbe
loop
stos
adc
shl
mov
repz
scas
jmp
cmp
es
int
cs
push
cmp
xor
movl
call
imul
or
sbb
cld
sbb
cmpsb
pop
dec
mov
mov
movsb
pusha
or
cs
xor
pop
and
and
mulb
push
mov
popa
dec
dec
mov
jbe
ret
pushf
and
dec
push
sub
cwtl
pop
adc
adc
fcmovu
arpl
rorb
rol
subb
in
lods
and
add
addl
popf
fsubp
cmpl
icebp
insl
or
xchg
rep
out
call
sub
and
rol
decl
pop
adc
lahf
test
add
lahf
jge
cmpsb
mov
out
dec
sub
jecxz
dec
push
addr16
push
mov
loope,pn
pop
mov
adc
add
cmp
clc
cmc
push
jg
dec
test
icebp
pop
sub
shll
fistpl
imul
fisubs
divb
mov
pop
lds
rcrl
jno
ret
rcll
or
dec
adc
lahf
xchg
mov
cmpsl
mov
out
rolb
std
add
mov
push
adc
jg
adc
fs
sbb
ror
and
enter
pop
or
fstpt
jae
shll
jp
mov
push
push
xor
push
dec
iret
loopne
sahf
mov
lahf
or
inc
test
push
js
out
xchg
rep
xor
cwtl
loop
dec
leave
andb
jp
cld
sarl
das
int3
dec
pop
mov
or
or
insl
push
dec
push
pop
fisubl
add
add
andb
mov
adc
int
subl
es
in
fstl
jno
fsubrl
loop
sub
xchg
push
ljmp
xchg
jns
gs
in
xor
fcmovnbe
or
lret
add
xchg
pop
push
lods
in
hlt
sbb
cli
out
jmp
push
xchg
pop
mov
lods
je
addr16
adc
lods
mov
addr16
imul
jmp
dec
xchg
push
daa
stos
rolb
das
pop
jno
nop
jae
lcall
stos
mov
push
stc
cltd
cwtl
dec
pop
adc
and
addr16
mov
pcmpeqd
jge
or
stc
mov
cwtl
fcmovne
subl
stos
cmp
call
mov
push
out
lods
cld
scas
icebp
jmp
adc
xchg
jae
adc
mov
push
or
jns
mov
mov
fldenv
dec
jno
inc
lcall
ss
push
push
sbb
popf
or
es
xor
cwtl
shll
xchg
add
dec
pop
xchg
cld
daa
push
addb
stos
call
sub
sub
scas
push
inc
imul
lahf
adc
inc
shlb
push
push
push
decl
sbbb
jmp
xor
icebp
xchg
jmp
adc
inc
push
pop
cmc
je
cmp
jae
data16
movsl
fdivs
mov
dec
mov
hlt
inc
mov
test
scas
sbb
fiaddl
sub
sub
mov
sbb
les
sar
out
shlb
lret
fdivr
and
scas
mov
pop
xorb
shlb
mov
cmp
cmp
pop
outsl
cmovo
push
cmpsb
jo
lods
sbb
jmp
xchg
test
dec
sbb
jnp
jp
add
icebp
repz
out
cmp
xchg
int
jg
es
sbb
cmp
inc
lcall
jge
std
sub
add
fisttpll
lret
fsubl
enter
mov
loop
pop
test
xchg
scas
xchg
xchg
add
sub
and
mov
or
ljmp
jns
sbb
rcr
pop
jb
mov
imul
pop
rcrl
popf
push
sbb
jbe
mov
xor
cmpsl
cwtl
fwait
xchg
inc
jbe
arpl
mov
or
mov
fnstcw
stos
jbe
mov
daa
jecxz
jmp
sbb
mov
xchg
into
outsb
dec
ja
xchg
sbb
je
movsb
in
xchg
cli
fsubrl
inc
cmp
jne
ljmp
clc
inc
mulps
pushf
mov
cmp
shl
xorl
test
test
sub
cmp
xchg
mov
xchg
data16
stos
dec
xor
add
sub
mov
popf
pop
mov
ret
cmp
fidivrs
mov
test
dec
add
clc
push
int3
imul
mov
jg
sub
pop
pusha
int
adc
stc
sub
pop
ljmp
shr
dec
jp
jmp
insl
test
xchg
daa
ss
repnz
repz
xor
lahf
dec
dec
pop
cmp
lock
adc
fwait
imul
lcall
inc
jmp
jae
lahf
xor
int3
push
jge
cmpb
scas
mov
outsl
inc
inc
outsl
ret
sub
lock
in
adc
loopne
nop
mov
xchg
jge
sub
sbb
mov
mov
imul
enter
xchg
arpl
out
rol
pop
fidivrs
sub
push
push
fsts
clc
fisttpl
add
popf
into
in
mov
js
jae
pop
idiv
stc
testl
je
add
sub
and
ficoms
push
sub
sar
fsubl
jbe
rcr
sbb
dec
lret
xchg
dec
fiaddl
lret
and
push
cmpsl
gs
mov
imul
add
cmpsb
cli
iret
xor
xchg
addb
sub
clc
xchg
ds
lret
imul
cwtl
adc
pop
jnp
adc
out
inc
mov
outsb
mov
in
adc
push
mov
xchg
test
and
push
mov
jecxz
lcall
pop
and
ds
fildll
mov
aaa
cwtl
push
jns
pop
iret
fwait
cld
or
mov
mov
mov
push
ss
xchg
cwtl
movsl
testb
cmp
mov
xorb
inc
call
mov
test
in
cmc
mov
adc
inc
dec
testl
leave
rcll
sbb
dec
jmp
mov
cmp
pop
rcl
and
dec
cwtl
add
or
je
pop
inc
out
jp
cltd
sub
fucom
cli
cmc
inc
fadds
jb
es
popf
pop
jmp
sbb
and
inc
stos
jg
pop
pop
mov
xchg
inc
ljmp
sbb
mov
cmp
aas
xor
cltd
mov
sti
add
sbb
xchg
mov
mov
incb
in
jecxz
cs
ret
pop
sub
testl
sub
gs
and
fistpll
cltd
out
mov
faddl
inc
push
xchg
push
adc
cmp
pusha
insb
inc
data16
dec
push
push
shlb
mov
mov
mov
mov
xor
enter
sti
jp
mov
js
sahf
xchg
ret
sub
lods
in
jle
mov
jmp
je
inc
and
and
lea
rorl
in
or
dec
shrb
shrb
divb
dec
test
and
adc
or
mov
mov
mov
je
mov
leave
mov
imul
jmp
jle
dec
outsb
hlt
sub
cmpsb
pushf
adc
aas
mov
jge
bound
push
dec
nop
xor
or
arpl
cltd
xchg
lods
add
and
arpl
int
out
ret
test
dec
rcll
xchg
insb
pusha
sbb
jbe
sbb
xchg
sbb
jbe
arpl
shll
shlb
sbb
add
loope
xlat
xchg
ds
mov
mov
movsl
add
outsb
test
sub
repnz
popa
pop
add
and
push
fisttpl
scas
push
adc
dec
lcall
push
add
shll
pop
mov
sbb
inc
dec
jmp
inc
js
lea
loopne
inc
sahf
mov
lcall
sbb
and
adc
fsubl
cli
test
inc
loopne
mov
ud2
popl
mov
xchg
mov
push
je
cmp
adc
mov
daa
movnti
jmp
rcrl
clc
inc
mov
fs
xchg
es
pop
mov
in
adc
jmp
int
xchg
mov
jle
jbe
arpl
inc
jl
test
cmc
pop
sbb
inc
and
jmp
movsb
or
arpl
xor
cld
pop
push
int
fbstp
mov
and
mov
cmp
lret
stos
mov
aaa
iret
es
movsb
sub
scas
mov
outsb
adcl
les
xor
dec
in
sub
jbe
push
loopne
stos
dec
cltd
lods
into
and
add
call
bound
outsb
hlt
xchg
test
sub
and
xchg
loope
jbe
in
lcall
xor
push
test
mov
out
inc
mov
jno
aad
shlb
enter
lea
sti
int3
mov
xor
jl
pop
in
jl
bound
dec
cmpb
jb
mov
adc
pop
dec
add
pop
lret
push
adc
ret
mov
lods
in
mov
stos
out
pushf
pop
inc
shlb
and
mov
stos
mov
stc
add
loope
stc
or
dec
cmp
xchg
mov
sarl
xlat
xchg
lods
mov
movb
sbbb
repnz
aam
leave
shlb
push
push
subl
push
repnz
lock
jmp
xchg
push
lods
fs
nop
std
dec
mov
mov
adc
cmpl
mov
arpl
popa
int
adc
cs
mov
incb
adcl
dec
push
xchg
loope
loope
pop
les
push
and
dec
sub
pop
cld
lahf
rcrb
jb
mov
push
cmp
lcall
arpl
xchg
push
popa
data16
test
push
movsl
loopne
mov
ret
cli
icebp
jo
adc
shld
mov
test
ror
dec
fsubl
data16
fldenv
jg
jmp
xchg
mov
arpl
movb
dec
cs
add
stos
out
mov
rcrl
sub
or
pop
es
jae
xchg
mov
mov
dec
and
dec
xchg
clc
clc
inc
mov
stos
popl
mov
repz
lret
jb
pop
out
shlb
sbb
adc
adc
sub
lods
xor
xor
mov
stos
fsubs
gs
push
stos
push
cwtl
out
xchg
mov
dec
jo
adc
cmp
xor
add
loop
inc
out
in
popa
mov
push
sub
jecxz
sbb
fbstp
jmp
push
stc
mov
das
repnz
push
pop
sbb
fs
insb
lahf
xchg
xor
test
lret
fsts
mov
jecxz
mov
xchg
push
stos
xlat
rorb
lock
les
scas
nop
adc
and
push
jg
adc
push
add
xchg
xor
jno
lret
pop
fcomi
push
jae
lcall
out
scas
sbb
fimuls
pop
add
xlat
movsb
sbb
fists
and
fistpll
dec
cld
adc
sti
addl
push
imull
xchg
daa
jle
lea
push
mov
cmp
xchg
ret
mov
cmc
andb
mov
lea
mov
ja
in
repz
test
add
jne
hlt
pop
dec
dec
mov
mov
cmp
cmpsl
shlb
inc
dec
lock
stos
sahf
mov
adc
add
jl
ret
punpckhbw
out
cmp
dec
adc
mov
rcll
push
xor
mov
mov
push
lret
es
mov
std
mov
jle
and
or
push
sbb
jb
adc
cmpsl
das
sbb
dec
or
mov
lods
fnstsw
mov
push
mov
adc
xchg
in
inc
push
mov
adc
mov
sub
cmp
outsb
out
push
scas
push
mov
mov
stos
cmp
or
addl
lahf
pushf
cmp
inc
stos
jge
pop
enter
add
lock
inc
outsb
and
xchg
jnp
pop
pop
bound
sbb
cmp
mov
cmc
push
movsl
xchg
mov
cmpsb
adc
pop
mov
adc
xor
add
mov
and
xchg
jecxz
mov
sbb
mov
lahf
lret
or
inc
mov
jbe
mov
jmp
test
add
mov
je
mov
stos
jnp
cmpsl
shll
js
pop
sahf
lret
and
dec
cli
sarl
icebp
cmp
lock
test
pop
jne
mov
stos
xchg
cmc
sbbb
mov
mov
bts
andb
out
push
sbb
fld
dec
aas
xchg
adc
scas
jge
jno
test
loopne
add
mov
cmp
pop
aam
aas
or
jmp
jno
dec
push
ret
xor
imul
movsb
sub
push
lret
dec
mov
sbb
fs
testl
movsb
pop
add
fisubrl
cmc
loopne
sbb
lret
xchg
jne
sub
jl
mov
divb
dec
scas
add
repnz
lea
mov
mov
fxch
fstpt
pop
xchg
subb
inc
xchg
sub
mov
lock
cmp
xchg
xchg
push
pop
movsb
cld
push
jo
dec
adc
xchg
lods
outsb
ret
xchg
mov
xchg
or
pop
mov
imul
icebp
or
addr16
xor
pop
es
push
xor
sbb
ja
pusha
jl
fisubl
paddb
lods
push
xchg
es
inc
mov
xchg
dec
iret
lock
lea
push
inc
daa
stc
inc
out
inc
loope
and
pop
insl
data16
jmp
sbb
cmp
or
push
mov
mov
cmp
movsb
sbb
cmpsb
inc
cltd
es
cmc
cmpsb
sbb
fdivl
repnz
or
stc
xchg
imul
mov
inc
jns
cmpsb
pop
pop
std
data16
or
leave
mov
lds
inc
or
mov
cmpb
fstps
cmp
int
dec
ds
in
sbb
frstor
cmp
outsb
xor
sub
fcomps
cli
or
xchg
cli
mov
jno
shlb
gs
xchg
push
test
je
std
pop
pop
fcom
mov
lret
xchg
mov
sub
sbb
bound
and
movapd
and
pushf
xchg
or
pop
and
fcoml
mov
and
push
leave
das
and
mov
aad
fildl
rcr
xchg
inc
fisubl
mov
adc
sbb
sub
mov
adc
clc
nop
xlat
adc
adc
sub
or
imul
inc
lods
jae
jecxz
cmp
vhsubpd
mov
stos
shlb
stos
repz
sbb
sahf
adc
cli
pushf
mov
cmpsb
mov
das
xor
gs
push
push
mov
aas
mov
and
sbb
jle
pop
popa
jbe
jle
ret
push
xchg
adc
push
xchg
and
aas
je
fisubrl
subl
int
in
lret
popf
sbb
dec
cmpsb
mov
sbb
pop
ret
outsl
or
jl
es
cmp
jns
pushf
hlt
iret
sub
aaa
push
add
ja
sahf
lds
jge
adc
or
or
add
cmp
push
mov
fsubrl
and
paddq
call
faddl
mov
inc
jbe
pushf
mov
mov
pop
sub
and
cs
dec
int
sub
xlat
add
repz
and
movsb
ficoms
push
add
inc
jbe
arpl
mov
das
xchg
repz
loope
jecxz
inc
sub
pushf
push
jae
aaa
lahf
mov
incl
xchg
bound
ror
movsl
movsl
pop
mov
ss
test
add
mov
cmpsl
repz
fsubl
xor
stos
mov
aas
ss
inc
aaa
mov
shlb
loope
mov
sarl
inc
imul
jbe
mov
adc
das
sti
cltd
sub
test
stos
test
or
test
call
mov
push
sub
cwtl
pop
mov
subl
loopne
mov
dec
daa
gs
mov
lock
or
fcompl
adcl
mov
imul
or
lock
icebp
xchg
pushf
adc
jp
pop
or
int
fstps
ja
xchg
dec
inc
aaa
mov
and
int3
int
mov
mov
dec
lahf
push
cltd
aad
cmovnp
mov
jmp
adc
inc
cld
push
ljmp
mov
fadds
jb
cmp
js
mov
mov
sub
mov
xor
push
jb
adc
jp
aad
push
jmp
arpl
cwtl
lods
mov
fildll
andb
bound
mov
jp
add
int3
movsb
leave
loope
xchg
sub
js
cmp
cmpsb
pop
or
xchg
cmp
rcll
neg
mov
inc
loop
mov
push
mov
push
or
sbbb
xorl
inc
xchg
jmp
mov
pop
mov
mov
rorl
jne
iret
imul
push
mov
mov
into
pop
pop
inc
push
pop
xchg
aad
dec
jb
int3
lds
in
aad
fnstsw
or
lea
lods
add
fwait
mov
mov
xor
adc
insl
xchg
push
je
in
mov
iret
movsb
leave
lods
fisubrl
mov
jno
lods
add
mov
sub
adc
pop
negl
jle
fdivrl
mov
xor
sbb
loopne
jg
pop
shrb
std
sub
inc
test
insl
test
sub
mov
jge
aad
rorl
cmpsb
jo
cltd
cmp
jb
cmp
mov
pop
aaa
popf
sbb
pop
cmpsl
mov
and
ficoml
add
inc
xchg
mov
xchg
pop
push
xchg
shll
mov
jl
cmp
or
test
mov
fstl
push
or
out
mov
hlt
aam
pop
dec
inc
ljmp
dec
cltd
adc
fsubrl
xchg
and
sub
xchg
push
dec
mov
pop
cmpsl
push
jo
arpl
rclb
mov
loope
es
adc
mov
xchg
or
aaa
idivl
push
std
or
in
shlb
xchg
dec
lret
addr16
aad
or
push
shl
fiadds
flds
dec
xor
push
cmc
lret
pop
roll
adc
mov
fmuls
popa
shrb
outsl
sahf
jo
outsb
outsl
es
rcl
jo
sbb
fsubrl
in
mov
xchg
or
je
sub
mov
rcrb
test
push
sbb
dec
pop
loope
aaa
cmpsb
enter
push
pop
xorb
sbbl
pop
xchg
push
pop
aad
xchg
sarl
sub
adc
xchg
into
es
mov
xchg
push
jge
inc
enter
cmp
sub
pop
int3
out
inc
xor
pop
lret
add
mov
mov
in
jbe
adc
jno
mov
jbe
iret
icebp
fdivrs
sub
push
inc
jp
jg
repz
loop
xchg
pop
inc
mul
xor
dec
fnsave
jg
sarl
in
mov
mov
les
push
out
sub
mov
add
cmp
push
or
js
in
out
cli
pop
test
and
adc
lea
pop
xchg
ljmp
out
pop
jmp
cld
inc
push
push
push
mov
or
loope
repz
push
mov
repnz
mov
enter
jmp
mov
and
aam
xchg
hlt
dec
mov
lds
sbbl
xchg
popf
addr16
push
push
dec
in
popf
push
test
sub
sbb
sarb
jne
je
shlb
stos
push
xor
repnz
push
mov
jle
pop
data16
push
fisubs
call
xchg
insl
mov
repnz
push
andb
les
fistl
test
and
jb
imul
push
jp
rcrl
aad
out
push
cwtl
repnz
ds
roll
aaa
cmpsl
add
adc
daa
leave
jno
je
and
mov
rorl
and
inc
jge
je
mov
sbb
mov
insl
sbb
xor
fbld
xchg
inc
loope
data16
xor
out
sub
adc
and
or
mov
bswap
add
les
cmc
ja
push
inc
mov
jb
outsb
test
pop
test
into
dec
pop
xor
sbb
push
popa
lcall
cltd
sbb
cmp
push
jge
cli
or
pop
push
or
push
scas
jg
pop
je
daa
jb
pop
js
insl
ret
iret
in
rcr
push
jecxz
sar
lods
add
sarb
mov
out
push
hlt
pop
adc
out
ret
jnp
les
out
ud1
mov
movsl
dec
dec
xor
andb
and
dec
xor
in
mov
std
test
in
mull
push
pusha
ja
push
shrb
dec
fsub
test
pop
fwait
sub
imul
jp
das
mov
out
mov
addb
bound
pop
cmp
pusha
fadds
xor
jbe
and
jae
push
loop
test
movsl
ss
pop
fstpt
add
push
pop
sti
nop
mov
out
ds
inc
and
movsb
pusha
xchg
dec
mov
inc
incl
lock
rcrb
call
sub
cli
ret
pop
and
pop
mov
jno
sti
loope
nop
pop
mov
jp
mov
cld
jl
adc
add
and
cmc
mov
pop
push
jmp
aam
and
ja
xchg
adc
pop
je
pop
aad
sbb
jbe
pop
mov
orb
inc
xor
insl
adc
add
shll
pop
or
mov
mov
movsl
pop
sub
les
mov
mov
insb
xor
les
dec
mov
lea
pusha
pop
ret
rcl
xor
hlt
enter
pop
add
jno
mov
lods
sub
mov
mov
cmp
mov
lock
jmp
xchg
jo
adc
sbb
adc
mov
aas
test
in
imulb
fstpt
cmp
pop
gs
nop
cltd
mov
xor
jo
mov
addr16
push
sub
andl
lock
jno
mov
shrl
dec
cmpxchg
test
push
mov
shlb
mov
inc
test
and
repz
cmpsl
xor
xchg
lcall
mov
dec
pop
and
dec
ds
imul
adc
aad
ror
adc
pop
push
sti
test
mov
inc
cwtl
mov
out
xor
mov
cmp
fdivs
xchg
add
call
aad
rcrl
mov
mov
jbe
je
outsb
cmp
mov
push
stos
pop
scas
xor
adcb
and
fimull
or
repnz
cltd
cmpb
push
inc
cmp
data16
lret
cmpsl
test
pop
push
divl
idivl
adc
lret
sbbl
mov
cli
sub
mov
dec
or
adc
lahf
lcall
insl
out
xor
xlat
cmp
dec
aaa
pushf
xor
adc
adc
int3
jbe
push
fnstenv
sbb
dec
adc
aad
or
adc
add
sarl
in
push
push
inc
iret
icebp
lods
add
sbb
dec
les
int
lods
idivl
cwtl
and
xor
adc
lds
outsb
sahf
lods
push
ret
mov
push
std
inc
xchg
into
repz
int
fildl
add
fsubrl
xor
into
daa
pop
mov
test
inc
adcb
and
gs
pop
ficoml
rep
adc
or
and
cmpsl
rclb
cmp
mov
sahf
pop
int3
movsl
shl
jecxz
rcrb
push
bnd
sbb
pop
clc
ja
pop
ret
add
es
lret
mov
iret
pop
cmpsb
adc
rcrl
out
xchg
or
sbbl
lret
bound
mov
es
test
scas
push
pusha
adc
inc
add
fstps
dec
add
lods
and
aaa
and
fsubrs
cmc
push
inc
loop
rclb
fildll
bound
icebp
aas
ss
mov
mov
aaa
cmp
ret
cwtl
and
xor
pop
icebp
dec
push
cmc
adc
clc
in
adc
fbld
pop
dec
xor
push
xchg
sarl
xlat
inc
test
push
lds
sbb
sbb
out
dec
inc
adc
inc
scas
imul
jle
adc
mov
jg
les
sub
mov
jmp
pop
add
data16
or
daa
fistpll
lods
and
lahf
frstor
xor
negb
xchg
imulb
sti
push
jbe
dec
jb
push
dec
sub
int
pop
lret
mov
sbb
test
not
mov
adc
mov
xchg
xlat
cmpsl
repnz
pushf
lcall
adc
and
mov
test
mov
js
leave
in
push
add
mov
dec
push
push
push
sub
add
nop
sub
fmuls
mov
adc
dec
stos
dec
sub
hlt
mov
test
pop
xchg
xchg
inc
int3
incl
xchg
out
mov
mov
dec
push
loopne
inc
in
out
insl
mov
mov
mov
mov
cwtl
lahf
jmp
out
sbb
mov
out
pusha
dec
cmc
stos
ss
mov
lds
and
lods
xchg
hlt
mov
cmp
pop
cli
sbb
shll
lahf
jge
jmp
push
sbb
sub
pop
hlt
lret
cltd
rolb
xchg
dec
xor
adc
std
xlat
dec
int3
decb
std
sbb
das
gs
and
bound
rorl
lret
inc
imul
pop
les
hlt
leave
fmul
shrb
cmc
sub
xor
sti
stc
flds
scas
pop
jns
mov
and
mov
loope
int3
into
fcomps
popa
xchg
adc
lahf
push
cli
cmp
int
pop
mov
lahf
inc
push
ljmp
mov
mov
fldenv
or
sbb
mov
lods
leave
mov
push
push
jmp
fs
insl
add
cmpsb
test
push
add
or
mov
incb
mov
jle
push
xor
adc
mov
mov
mov
mov
mov
inc
xchg
cmp
pop
push
push
mov
cmpsl
lock
inc
cmp
inc
scas
jne
dec
dec
inc
es
add
push
call
cmp
pop
lret
cmc
out
cmp
cmp
mov
xchg
inc
pop
adc
cmc
repz
push
and
cmp
or
mov
sbb
inc
xchg
imul
lcall
mov
mov
cmp
add
lea
xchg
fdivrs
call
fwait
sub
dec
cmp
testl
cmc
or
cltd
lret
jns
pop
daa
icebp
push
and
andb
imul
cmp
pop
popaw
inc
and
jne
fimull
jecxz
fcomip
mov
or
pop
aad
sbb
mov
ret
adc
dec
dec
adc
lock
mov
negb
shll
dec
es
ja
stos
xchg
pop
mov
jne
imul
pop
sbb
mov
pusha
repz
les
push
lea
testb
push
xchg
sub
xor
push
loopne
push
jno
push
outsb
jmp
and
outsl
out
jp
ret
lock
in
ret
movsb
fs
pop
cwtl
xchg
out
call
jnp
sbb
leave
push
add
jno
adc
cli
inc
sbb
lret
daa
and
and
mov
loop
mov
daa
xchg
ljmp
cmpsb
test
xchg
and
mov
ljmp
aam
jbe
stos
in
std
mov
mov
pop
inc
push
cwtl
imul
mov
scas
stos
mov
cmp
mov
lea
ljmp
pop
xchg
aad
or
mov
inc
addl
into
mov
and
push
mov
jecxz
sub
aaa
jge
mov
jnp
xor
mov
icebp
or
test
jmp
mov
nop
daa
xor
xchg
std
mov
out
mov
shl
pop
pop
adc
mov
jle
cltd
dec
add
xchg
xor
mov
jbe
mov
negl
add
cmpsl
movsb
jle
and
xchg
and
or
nop
sarb
sbb
pop
ret
int3
adc
aad
add
fdiv
fdivs
lret
stc
adc
inc
cmp
mov
or
push
push
cltd
int3
popa
add
ror
aam
sbb
sub
shll
movb
cs
cmp
push
mov
clc
mov
push
push
jge
xlat
cmp
push
cld
sbb
mov
enter
add
dec
stc
jl
iret
cmpsb
adc
fdivr
adc
lock
xor
pop
dec
cltd
dec
jmp
gs
cltd
flds
xchg
pop
dec
bound
xchg
cltd
cmpsl
insb
xor
cwtl
dec
xor
push
popa
ja
aad
iret
adc
loop
push
push
lods
ss
ret
addb
mov
mov
jge
cmp
or
sbb
and
mov
jmp
adc
dec
xchg
lret
lock
aam
and
adc
sub
pop
pop
adc
aam
dec
xchg
aas
test
dec
dec
decl
ss
es
pop
cmp
and
stos
shr
bound
and
push
bound
aas
push
sub
jge
mov
sbb
sub
and
mov
movsb
in
jmp
jnp
and
mov
pop
xchg
cs
bound
imul
in
outsb
push
pop
or
xchg
push
mov
adc
ret
add
pop
ljmp
daa
notl
popf
in
sbb
fisubs
inc
add
xor
stos
xor
rcr
in
xor
adc
pop
aam
pop
imul
mov
adc
shr
popa
out
mov
test
into
mov
push
xchg
popa
repz
jg
mov
mov
sub
xchg
movsb
imul
push
adc
xor
jp
test
ret
xchg
in
jb
call
lret
arpl
push
icebp
mov
or
test
add
sar
cmp
adc
pop
lock
or
adc
or
push
nop
jp
mov
mov
lock
hlt
pusha
popf
inc
cmp
xchg
adc
hlt
jecxz
pop
xchg
int
adc
sti
jbe
clc
aam
cmp
mov
sbb
xlat
fwait
mov
or
cld
test
fstps
push
adc
or
mov
mov
sbb
out
outsl
insb
xor
inc
sbb
add
inc
and
adc
es
loop
mov
xchg
insl
mov
xor
mov
sub
mov
dec
mov
ficomps
mov
pop
and
pop
jmp
imul
out
mov
ljmp
cltd
inc
stc
rdpmc
sbb
and
fcomip
xor
jae
rcrb
int3
data16
subl
sub
cmpsb
in
cmpsl
lahf
mov
lret
xor
bound
cmp
icebp
push
jnp
rol
lea
add
shr
mov
push
or
sbb
repnz
test
push
xor
and
and
cmc
mov
adc
data16
stos
mov
insb
outsl
mov
and
mov
cmpsl
imul
test
or
sub
push
popf
sub
or
mov
jmp
call
movsl
lods
fisttpll
jae
or
and
jns
add
xchg
jns
or
add
inc
in
adc
fldl
std
fisubs
adc
jb
sahf
cmp
mov
sub
mov
jecxz
addr16
filds
adc
jae
dec
xor
push
mov
push
int
jle
jb
adc
in
mov
xor
in
sub
inc
cli
dec
push
push
xchg
test
aaa
inc
xlat
dec
in
dec
ss
dec
mov
lods
sub
jns
into
mov
jl
push
pop
sbb
or
loop
xchg
inc
sub
inc
je
int
aaa
movsb
xor
push
out
lcall
inc
lahf
pop
dec
jbe
fcomps
in
cmp
mov
and
push
sub
arpl
adc
lods
and
js
mov
insb
rcl
xchg
jg
and
pop
gs
push
jne
in
pop
sub
mov
test
pop
test
jns
icebp
cmp
sahf
mul
and
bound
leave
xchg
sub
pop
mov
jecxz
mov
imul
scas
xchg
imulb
cmp
call
sbb
clc
loop
pushf
in
xchg
or
cmpsb
sbb
stos
lret
inc
jb
fdivr
xchg
dec
push
mov
out
std
fiaddl
popf
ljmp
movsb
sbbl
jno
inc
out
mov
and
repz
or
push
and
or
test
xchg
sar
or
xor
ljmp
jno
xorb
sbb
lcall
es
out
scas
add
fsubrs
cmp
pop
xchg
sub
decb
and
popa
xchg
add
hlt
les
mov
adc
mov
add
test
mov
es
mov
mov
mov
adc
xor
mov
test
nop
ret
fcomi
xchg
dec
mov
sar
je
cmp
fwait
hlt
ljmp
rcll
ss
stc
lods
lahf
add
dec
xchg
or
lret
add
add
mov
dec
sahf
xchg
rclb
mov
push
enter
aaa
xchg
mov
mov
test
pop
addr16
ret
jbe
push
inc
and
mov
dec
pop
call
xor
adc
fisubs
in
insl
xchg
or
movsl
inc
aaa
arpl
std
insb
popa
fistl
dec
js
repz
mov
nop
outsb
das
decl
icebp
icebp
sub
mov
pop
out
push
xlat
jno
mull
jnp
adc
mov
pop
mov
pop
outsb
pop
cmc
imul
sub
decb
dec
popl
and
push
outsb
inc
mov
pop
sbb
mov
insb
fs
mov
mov
popf
jns
dec
dec
popa
addb
xchg
loop
dec
mov
cmp
ret
ss
jo
or
ret
and
std
imul
insb
into
mov
mov
rcll
cmp
mov
mov
imul
mov
cmpsb
movsb
repnz
sub
or
loop
outsb
fisttps
jmp
movsl
fsubr
rcr
fdivr
sub
xlat
ja
pop
xor
fsubr
insb
inc
lcall
ljmp
add
jnp
pop
int3
icebp
push
inc
popa
jb
xchg
repz
lret
cwtl
test
cmp
dec
push
pop
push
rcll
jae
push
adc
mov
and
sbb
and
adc
leave
fcoml
aas
xor
jno
inc
fwait
or
cmp
outsl
push
stos
imul
pop
and
inc
popa
jl
cmc
jmp
ffreep
sbb
xchg
or
or
dec
inc
adcl
lcall
insb
aas
vpcmpgtb
dec
pop
mov
imul
sarb
push
lods
subb
lods
xlat
fwait
cmp
inc
and
dec
bnd
pop
cmpsl
xchg
rclb
adc
outsl
xchg
fmuls
repz
nop
lcall
and
lcall
sub
fwait
mov
repnz
mov
push
sbb
mov
or
mov
loope
out
inc
inc
cmpl
inc
xchg
iret
mov
jmp
cld
or
jg
xchg
and
jp
mov
loope
sub
adc
mov
repz
sbb
scas
and
iret
mov
cmp
jg
lcall
stos
jge
rolb
jl
fmuls
mov
sub
pop
pop
jg
jle
sub
mov
pushf
stos
sbb
xchg
mov
add
xorb
sbb
repnz
mov
or
and
loopne
xchg
adcb
adc
sub
aaa
add
jne
data16
fcompl
xlat
loop
mov
adc
test
test
sbb
shl
fbstp
sahf
mov
cltd
mov
int
outsb
jno
inc
mov
sti
jno
or
stc
loopne
xor
std
movsl
cli
mov
sub
cmpsl
cmp
je
jbe
pop
xchg
in
jb
repnz
nop
addr16
cmp
sub
les
loopne
pop
rcll
pushf
insb
cmpb
push
add
bound
adcl
out
cwtl
add
or
adc
xchg
xchg
and
outsb
loop
pop
pushf
pop
mov
cmp
and
stc
fwait
mov
xchg
xlat
mov
sub
fimuls
jo
or
movsb
xor
leave
loopne
cld
call
movsl
call
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
add
cltd
fwait
stos
xorb
jmp
rcrl
addr16
adc
mov
aad
xor
sbb
pop
insl
clc
sub
cmpsl
outsl
cltd
and
adc
pop
out
stos
sub
adc
das
clc
mov
sahf
jo
lea
les
push
ss
scas
jl
xor
je
dec
adc
mov
pop
mov
add
xor
push
out
sbbb
pop
xor
enter
mov
mov
stos
inc
pop
xor
push
jecxz
pop
popa
ljmp
mov
nop
jecxz
inc
adc
push
and
cs
ja
pop
dec
add
mov
cmp
mov
icebp
sarb
shrl
in
mov
cs
pop
clc
fs
popa
add
inc
insl
sub
sbb
adc
cmp
sbb
add
dec
dec
mov
ret
fnstcw
push
or
gs
cmp
leave
mov
pop
pop
sbb
arpl
jnp
sbb
pop
sbb
out
mov
xchg
sbb
in
inc
mov
clc
sub
aad
add
out
xchg
mov
mov
mov
fs
stos
rcrl
in
xchg
fisubrs
sbb
pop
aad
scas
and
lods
or
sub
ja
xchg
mov
arpl
mov
pop
jl
rol
ja
pop
rol
lahf
inc
xor
es
fists
imul
push
dec
or
add
push
lret
fs
mov
jmp
jae
inc
jecxz
daa
push
add
sti
jno
mov
lock
out
pop
jne
iret
les
lods
adc
inc
or
jnp
adc
mov
mov
inc
fcompl
and
push
mov
cmp
orb
or
fsubrl
lahf
add
lcall
jecxz
loopne
mov
sub
xor
dec
clc
movq
adc
adc
xchg
jb
mov
inc
out
fists
xchg
ret
out
test
and
cmp
movsb
lods
movsl
popa
lods
inc
xlat
popf
pop
cmc
lds
cs
adc
scas
popa
daa
xor
adc
push
jne
and
aad
stc
iret
mov
negl
dec
stc
fsubrs
rorl
xor
popa
push
shl
ja
xchg
and
fstpt
push
fwait
gs
popf
xor
lahf
add
cld
int3
movsb
and
and
fcoms
add
dec
ror
mov
inc
mov
push
stos
cmpsl
ret
mov
lods
outsl
es
into
inc
push
xchg
je
dec
aas
jle
mov
sarl
jp
xor
repnz
push
lods
rcr
stos
int3
dec
adc
mov
lods
test
lret
push
mov
es
lret
and
ss
out
jno
into
iret
push
xchg
jmp
mov
xchg
mov
jmp
push
cmpsl
pop
mov
movb
dec
ljmp
add
xchg
js
or
out
and
lds
inc
shrl
fadds
mov
lea
mov
inc
inc
or
add
xchg
fidivl
cmp
sbb
xor
lock
jne
in
scas
pop
and
int3
adc
pop
aad
push
lret
xor
ds
sub
inc
sbb
pop
cs
jmp
into
sbbb
scas
add
mov
icebp
aaa
scas
xor
ljmp
popa
fstl
imul
xor
cmc
nop
arpl
loop
pop
aas
or
pop
jge
iret
inc
in
mov
add
aam
adc
push
insl
mov
bound
aaa
pop
inc
or
jae
or
or
and
daa
mov
gs
and
clc
adc
cmp
push
adc
test
push
shrb
xchg
test
cmc
fistl
push
stc
pop
out
stc
xchg
shl
sbb
pop
popf
inc
dec
xor
jle
stos
inc
repnz
fs
dec
mov
mov
inc
into
dec
push
xchg
enter
jp
or
incl
cmc
push
rcll
jl
loope
lea
mov
sub
bound
imul
sbbb
faddl
xchg
roll
mov
add
in
jecxz
rorl
lds
push
and
xchg
xchg
dec
mov
or
inc
xchg
push
xchg
jnp
repz
push
fadds
call
cli
or
mov
push
jg
or
scas
pop
in
rolb
arpl
ret
aas
aaa
insl
out
dec
outsb
pop
popa
jne
adc
int
or
ljmp
mov
cmpsb
or
insl
mov
push
add
aaa
pop
pop
ja
lods
jae
stc
fldenv
sub
or
stos
push
clc
xchg
aam
mov
add
mov
jo
rcrl
rorl
cmpsb
jns
jle
mov
push
jmp
mov
inc
lahf
pop
adc
adc
or
dec
hlt
lods
jae
cmp
jp
pushf
push
mov
xchg
pop
sbb
ds
lret
call
mov
lods
faddp
nop
add
mov
call
lods
aam
scas
clc
xor
inc
jg
inc
pop
std
mov
fnstenv
mov
add
push
xor
out
xchg
and
jmp
and
pop
int3
mov
loope
cmp
testl
out
arpl
push
jae
inc
or
pop
dec
ja
sti
sub
mov
aad
cs
jmp
mov
fdivs
pop
pop
sub
mov
gs
testb
dec
xchg
movsl
adc
stos
mov
sarb
dec
sub
xor
lret
cmp
or
sbb
cmp
in
inc
jg
loope
cwtl
pop
mov
fs
mov
xchg
xchg
mov
jno
or
dec
out
pop
lock
sbb
adc
and
insb
cmpsb
mov
mov
mov
testl
xchg
cmpsb
into
iret
jbe
adc
fwait
lds
and
fsts
mov
ja
or
icebp
insl
pop
pop
cli
mov
push
lods
push
fidivrs
lds
filds
dec
cld
inc
jl
mov
push
lea
pop
mul
push
sahf
test
add
out
and
dec
loop
dec
cmp
cmp
pop
sar
scas
and
push
jmp
add
dec
push
xchg
cltd
inc
addb
inc
push
inc
inc
flds
add
pop
scas
subb
orl
xlat
popf
cmp
sub
adc
sbb
xorb
add
jmp
mov
mov
mov
out
sti
fisubl
add
call
sub
scas
mov
popf
jp
and
sar
in
mov
je
push
cmp
push
enter
sub
jp
push
popa
mov
sbb
jbe
xor
xorl
jns
lcall
insb
inc
sbb
push
xchg
out
shll
hlt
clc
imul
out
and
addb
adc
rcrb
pop
sbb
push
inc
dec
lret
fwait
ss
mov
mull
or
add
gs
lret
xchg
jae
pop
out
xchg
mov
loopne
pop
adc
jg
push
push
jle
pop
arpl
ret
lea
adc
adc
test
push
pop
in
mov
fisubrl
push
lret
mov
inc
and
stos
iret
jnp
pop
dec
sub
adcl
jle
stos
add
cwtl
jp
or
fcmovu
outsb
mov
push
mov
icebp
pop
popa
jb
sub
aas
pop
mov
sbb
daa
shr
mov
push
jo
ss
mov
inc
cmp
pop
jg
in
pop
add
jl
pop
outsb
bound
icebp
ja
add
inc
fistpl
xorl
flds
cmp
dec
popf
in
dec
xchg
add
aaa
inc
or
lret
aam
sub
mov
jbe
inc
stos
cmp
das
lds
std
mov
adc
jae
xchg
lret
dec
popa
out
xchg
adc
jne
push
adc
cs
dec
gs
mov
push
jl
out
lcall
mov
mull
jle
aaa
push
les
lds
fmuls
scas
nop
inc
mov
loope
dec
adc
xor
and
push
fstl
jmp
push
or
stos
cs
roll
int
hlt
dec
addr16
mov
lods
and
dec
mov
loopne
and
xchg
call
cwtl
xor
fbld
and
loope
dec
clc
loope
mov
dec
ljmp
jbe
call
test
cmp
adc
pushf
sti
insl
aaa
jg
inc
push
js
mov
mov
les
adc
scas
lds
sub
mov
dec
ja
dec
inc
dec
dec
out
ret
dec
xchg
and
xchg
rorl
test
sbb
adc
gs
inc
mov
sbb
pushf
or
ljmp
mov
sub
hlt
int
xor
sub
dec
enter
lock
xor
scas
xor
movb
ds
mov
nop
dec
sarb
adc
insl
pop
aad
push
bound
in
popa
out
push
dec
mov
aad
insb
std
je
lock
rclb
pop
jno
mov
jge
rcr
mov
fwait
jb
xor
adc
in
inc
mov
rcl
cs
jae
adc
cmp
in
xor
das
pop
cmp
xor
pusha
addr16
fimull
bound
xchg
adc
adc
arpl
dec
or
push
sub
fnstenv
dec
das
jb
shll
mov
insl
mov
sub
sbb
push
cmpsb
icebp
dec
mov
push
mov
lret
pop
pop
sub
aaa
push
leave
xchg
inc
add
xorl
pop
out
int
mov
lods
mov
mov
pop
cltd
pop
mov
addb
shrb
scas
jmp
mov
test
pop
shrb
add
xor
cwtl
xor
jbe
daa
adc
call
xchg
pop
sbb
pop
imul
sti
cmp
mov
cmp
pop
ficoml
int
andl
psadbw
xor
xchg
repz
stos
je
iret
ss
inc
inc
out
xlat
push
xchg
xchg
fistl
sub
jle
cmp
adcl
push
iret
cli
inc
xor
xchg
mov
je
push
in
stos
mov
test
clc
pop
outsb
popf
lock
ret
pusha
push
jnp
inc
stc
and
jg
test
adc
aaa
mov
mov
scas
dec
adc
sub
dec
mov
cmp
jns
dec
and
xlat
lods
mov
mov
or
jae
mov
or
push
jg
jle
dec
sub
xchg
fs
adc
js
add
and
inc
pop
push
aaa
adc
push
mov
jns
andl
mov
inc
push
jge
push
mov
ret
xor
inc
test
lods
dec
mov
adc
sbb
pop
cs
je
iret
pop
adc
or
aam
loop
mov
insl
out
in
pop
adc
fsub
imul
sbb
pop
jp
or
add
mov
movsl
testb
outsb
ret
push
and
pop
sub
pop
cli
cmpsl
lret
and
jnp
sbb
cmpsl
and
shll
xchg
push
lea
or
push
adc
mov
cld
mov
mov
push
push
cltd
xor
out
sbb
pop
or
add
push
repnz
push
fcomi
ss
jecxz
xchg
sarb
push
aam
or
cwtl
aam
repnz
push
dec
jne
cmp
pop
out
data16
js
mov
sbb
and
pop
arpl
inc
dec
fs
mov
into
filds
dec
xchg
sbb
insl
cltd
push
mov
mov
and
or
sbb
push
ss
sub
sti
sahf
lcall
sub
and
dec
add
push
xor
xchg
dec
push
ret
ds
mov
jne
pusha
stc
sbb
loopne
and
xchg
jo
push
mov
shl
enter
mov
cmpsb
mov
testb
mov
lret
push
pop
jno
leave
inc
fsubrl
rorl
xchg
ss
shl
roll
scas
idiv
call
xchg
clc
add
mov
pop
fdivrp
sarl
gs
call
pop
lcall
aaa
cmp
xor
enter
and
push
addr16
leave
jle
or
add
ss
cmp
mov
lea
add
lcall
imul
inc
lds
ljmp
ret
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
int3
insl
add
add
