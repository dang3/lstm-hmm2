or
leave
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
test
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
lea
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
lea
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
orl
orl
push
push
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
lea
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
push
push
call
test
js
mov
test
jne
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
fldl
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
mov
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
cmpb
jne
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
push
call
mov
cmp
jne
lea
cmp
jb
lea
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
push
mov
mov
movl
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
pushl
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
fdivl
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
mov
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
mov
add
pop
ret
mov
mov
test
je
andl
add
dec
jne
jmp
xor
pop
ret
push
mov
mov
andl
test
jne
lea
call
lea
pop
jmp
push
mov
andl
call
test
mov
jne
pop
jmp
int3
int3
fldl
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fldl
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
fldl
faddl
fcomp
fnstsw
test
je
fstp
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
add
push
pushl
call
mov
pop
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
mov
push
push
mov
push
jne
test
jne
mov
lea
xor
push
mov
mov
call
testb
jne
mov
cmp
je
mov
mov
lea
push
push
call
lea
call
mov
mov
push
push
lea
call
test
je
mov
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
cmpl
je
lea
call
xor
pop
pop
pop
pop
add
ret
lea
push
mov
mov
call
testb
jne
mov
mov
mov
mov
mov
push
push
push
mov
push
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
push
push
mov
push
push
lea
movl
call
add
cmpl
je
test
jl
mov
mov
lea
push
mov
push
mov
mov
mov
add
push
push
call
test
js
cmp
jae
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
mov
pop
pop
pop
xor
ret
int3
push
mov
and
sub
test
push
push
je
movl
test
je
sar
test
je
movl
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
lea
push
push
push
call
add
test
je
mov
mov
lea
push
mov
push
push
push
call
add
test
je
fldl
lea
push
sub
fstpl
call
add
test
jne
mov
push
call
add
pop
or
pop
mov
pop
ret
pushl
andl
mov
mov
call
mov
ret
mov
mov
mov
mov
cmp
push
jne
call
ret
int3
sub
mov
xor
mov
push
mov
push
push
push
mov
call
mov
cmp
je
cmp
je
cmp
je
movzbl
cmp
jle
mov
mov
mov
push
push
mov
call
test
jne
mov
orl
mov
cmpl
jne
cmpb
jne
mov
orl
mov
cmpl
jne
testw
je
mov
call
test
je
cmpb
jne
mov
orl
mov
movzbl
cmp
jne
mov
mov
mov
push
push
mov
call
test
je
mov
test
je
cmp
je
mov
mov
lea
push
call
test
je
mov
test
lea
mov
movl
movl
movl
mov
movw
lea
je
push
push
call
cmpl
je
mov
test
jne
test
jne
mov
test
jne
mov
mov
pop
pop
pop
xor
call
add
ret
cmpl
je
jmp
sub
cmp
ja
movzbl
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
mov
mov
mov
push
push
call
test
je
jmp
testb
jne
cmpb
je
mov
mov
lea
lea
push
push
movl
call
cmpl
je
mov
orl
mov
jmp
mov
orl
mov
jmp
testw
je
jmp
mov
orl
mov
jmp
add
adc
ja
adc
add
add
add
add
add
int3
int3
int3
int3
int3
mov
mov
push
push
push
mov
test
push
jg
mov
pop
pop
pop
movl
xor
pop
ret
mov
mov
xor
lea
mov
cmp
je
add
add
cmp
jl
mov
pop
pop
pop
movl
xor
pop
ret
mov
push
mov
call
add
test
je
mov
jmp
mov
lea
call
test
je
mov
mov
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
lea
push
mov
push
mov
push
push
movl
call
mov
test
jge
push
mov
push
call
test
je
movl
orl
pop
xor
pop
pop
ret
mov
mov
shl
sub
lea
mov
push
push
call
xor
pop
pop
ret
mov
mov
cmpl
je
push
pushl
call
ret
xor
jmp
int3
int3
push
push
mov
mov
mov
mov
mov
call
test
jbe
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
mov
call
add
cmp
jb
pop
pop
pop
pop
pop
ret
mov
cmp
jne
mov
mov
test
jne
push
push
call
test
je
mov
mov
push
call
mov
jmp
mov
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
push
call
push
lea
mov
call
mov
lea
push
push
push
call
mov
push
call
pushl
movb
pushl
pushl
push
call
test
mov
js
mov
call
mov
push
push
mov
pushl
mov
push
call
sub
je
dec
je
mov
call
mov
pop
pop
pop
pop
ret
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
push
mov
mov
mov
mov
push
mov
xor
cmpb
mov
mov
jne
cmpb
je
call
test
jne
mov
mov
mov
push
push
mov
call
cmp
je
mov
call
mov
movl
mov
mov
mov
push
push
push
push
push
push
mov
call
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
cmp
jne
mov
mov
lea
push
push
add
push
push
mov
mov
mov
call
mov
test
js
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
mov
push
mov
push
push
push
mov
call
mov
lea
mov
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
jne
lea
test
je
mov
test
mov
movl
movl
mov
mov
je
mov
mov
push
call
mov
test
mov
push
mov
push
mov
mov
je
mov
mov
push
call
mov
test
mov
jne
mov
lea
call
lea
call
mov
test
pop
pop
je
mov
mov
push
call
xor
add
ret
mov
jmp
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
cmp
push
push
lea
push
mov
mov
jb
mov
xor
cmp
je
mov
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
test
je
cmpl
jb
mov
mov
mov
add
push
push
push
xor
lea
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
mov
call
test
js
mov
push
push
xor
lea
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
mov
push
mov
push
mov
push
push
push
push
call
test
je
lea
push
push
push
call
add
test
je
test
mov
je
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
sub
cmp
push
mov
push
je
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
add
ret
cmpl
je
xor
ret
cmpl
je
push
push
mov
push
lea
mov
call
test
je
push
lea
push
mov
call
push
lea
call
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jbe
push
mov
xor
cmp
je
movzwl
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jae
cmp
jae
cmp
jae
cmp
jae
add
cmp
jb
pop
pop
ret
mov
movzbw
movzwl
jmp
cmp
ja
jmp
movb
jmp
mov
test
je
mov
test
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
push
push
push
mov
push
mov
test
mov
je
mov
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
or
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
push
push
call
xor
add
cmp
jne
cmp
jne
xor
lea
mov
push
call
add
cmp
jne
jmp
cmp
jne
mov
mov
mov
cmp
jge
mov
call
mov
mov
mov
mov
cmp
je
lea
cmpl
je
mov
mov
push
call
add
cmp
jne
cmp
jne
xor
mov
push
call
add
cmp
jne
mov
lea
mov
mov
cmp
jl
cmp
je
mov
cmp
je
add
mov
cmp
mov
je
addl
cmp
jne
mov
mov
call
push
call
add
jmp
mov
sub
je
sub
jne
cmp
jne
mov
mov
call
mov
cmp
jne
lea
call
movl
mov
call
pop
pop
pop
pop
pop
ret
cmp
je
mov
mov
cmp
lea
jne
mov
push
push
call
pop
pop
pop
pop
pop
ret
mov
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
call
test
movl
mov
je
addl
mov
mov
mov
mov
mov
movl
mov
xor
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
lea
push
lea
mov
call
mov
movl
mov
push
call
add
jmp
mov
mov
mov
mov
jmp
mov
push
call
jmp
push
mov
lea
push
call
mov
pop
mov
mov
cmp
pop
push
jne
call
ret
push
mov
sub
push
push
push
mov
mov
call
test
mov
je
mov
mov
push
xor
call
cmp
je
mov
mov
call
push
mov
lea
mov
call
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
mov
mov
mov
call
mov
cmp
je
call
cmp
jne
cmp
jne
mov
mov
push
push
pushl
call
lea
call
lea
call
lea
call
lea
call
cmp
jne
lea
call
pop
pop
pop
leave
ret
pushl
call
test
pop
jne
jmp
push
mov
sub
andl
push
push
push
call
test
je
mov
xor
lea
inc
mov
push
mov
mov
mov
call
test
pop
mov
jne
mov
lea
push
movl
mov
mov
mov
call
test
pop
jne
mov
testb
je
pushl
andl
pushl
call
pop
pop
test
je
push
push
call
pop
pop
cmpb
jne
mov
lea
mov
push
mov
mov
mov
call
push
push
mov
call
add
cmpl
jne
mov
andl
lea
push
movl
mov
call
lea
push
lea
push
lea
mov
push
movl
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
lea
push
lea
push
lea
mov
push
mov
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
andl
add
movl
mov
push
lea
call
mov
mov
call
test
js
mov
push
call
test
je
andl
mov
mov
lea
push
push
pushl
movl
call
pushl
pushl
call
add
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
xor
push
push
mov
mov
mov
mov
movl
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
push
lea
mov
mov
movl
movl
mov
call
push
call
add
push
mov
call
lea
push
call
add
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
xor
mov
call
add
ret
mov
ret
int3
int3
int3
int3
int3
sub
push
push
mov
xor
cmp
push
je
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
mov
je
mov
lea
push
push
mov
call
mov
cmp
jg
cmpl
je
mov
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
mov
mov
push
push
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
test
js
cmp
je
mov
mov
lea
push
push
mov
call
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
push
lea
mov
call
mov
mov
lea
push
push
mov
call
mov
test
js
mov
cmp
je
mov
mov
add
push
mov
push
push
mov
call
lea
call
jmp
push
mov
and
mov
mov
sub
push
mov
test
push
push
movl
jne
push
mov
call
add
push
mov
call
mov
add
lea
push
mov
mov
push
push
push
mov
movl
call
mov
mov
mov
add
test
je
mov
test
je
jmp
lea
mov
test
je
mov
xor
nop
cmpw
je
xor
test
jne
add
add
jmp
cmp
je
mov
test
jne
xor
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
jmp
test
je
mov
mov
mov
mov
cmp
je
movzwl
movzwl
sub
jne
jmp
sub
add
add
test
jne
jmp
mov
mov
push
push
call
add
test
je
mov
not
test
jne
mov
push
push
xor
call
add
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
mov
call
cmp
mov
je
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
call
test
js
cmp
je
mov
mov
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
lea
call
lea
call
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
mov
jmp
mov
call
test
jne
mov
mov
mov
mov
push
push
call
add
add
jmp
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
cmpl
je
call
mov
cmp
jne
mov
test
je
mov
pushl
mov
push
call
ret
push
xor
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
mov
mov
cmpl
je
xor
pop
pop
pop
pop
add
ret
mov
push
call
add
test
je
call
mov
test
mov
je
mov
mov
push
call
test
movl
je
push
call
test
js
push
call
add
test
je
mov
mov
call
mov
lea
call
cmpl
je
call
test
mov
je
mov
mov
mov
push
call
mov
test
je
mov
test
je
push
push
call
add
test
mov
je
mov
push
call
mov
lea
push
lea
push
push
push
push
call
add
test
js
mov
test
je
mov
push
push
call
mov
push
mov
mov
push
push
movl
call
add
test
je
mov
mov
mov
push
push
push
call
test
js
push
call
add
mov
test
je
test
je
mov
mov
lea
call
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lea
je
mov
shr
lea
cmp
jl
mov
cmp
je
mov
and
lea
mov
mov
mov
push
push
call
push
push
call
sub
jns
lea
xor
mov
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
and
pop
add
add
in
add
jne
pop
testl
add
outsl
jmp
add
add
popl
mov
add
movsl
jle
nop
add
add
jge
xchg
add
add
andb
jb
add
gs
add
rolb
movsb
nop
testl
add
jle
fiadds
push
mov
add
push
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
jp
push
mov
cwtl
mov
add
mov
cld
mov
icebp
cmpsl
cltd
sti
xchg
hlt
js
xchg
pop
mov
xchg
add
cld
scas
mov
add
push
int
add
sti
outsl
lods
add
in
fcomps
inc
in
push
push
push
push
lea
push
push
push
push
call
iret
push
fdivrs
mov
add
mov
jmp
test
xchg
jecxz
add
xchg
add
stos
pop
stos
icebp
add
mov
add
add
pop
fiadds
or
push
cwtl
roll
add
scas
pop
add
push
ror
fadds
add
mov
lcall
push
push
lea
push
push
push
push
push
lea
push
call
push
sti
add
push
add
into
scas
out
pop
iret
jge
xchg
mov
hlt
incb
add
imul
add
lret
add
pop
add
lahf
push
add
add
out
mov
mov
jno
xchg
add
add
rolb
fs
imul
add
mov
loopne
int
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
mov
push
pop
add
leave
jbe
add
fildl
jne
add
add
push
scas
jmp
jl
add
mov
add
mov
jb
pop
hlt
stos
add
mov
add
lcall
add
add
push
push
lea
push
lea
push
push
lea
push
call
test
mov
add
mov
push
push
mov
rcr
add
add
call
popl
lds
add
fiaddl
add
add
fisubl
in
lock
stc
jns
sti
incb
add
cmp
add
push
lea
push
lea
push
lea
push
push
push
call
popl
scas
add
add
pusha
loope
add
fs
loopne
add
push
mov
mov
add
add
mov
xchg
lret
std
mov
add
xchg
call
mov
out
add
incb
aam
add
add
push
in
add
data16
jmp
push
push
push
push
push
push
push
call
mov
roll
rcrb
add
loopne
mov
mov
cli
xchg
add
add
pop
mov
fidivs
add
add
jae
out
mov
test
jge
jb
xchg
call
ret
mov
push
lea
push
push
lea
push
lea
push
push
push
push
call
fwait
add
faddl
xchg
add
add
icebp
add
add
push
mov
pusha
add
add
add
push
popa
mov
addb
add
jb
pop
cmpsb
add
sub
pop
mov
push
push
push
push
push
push
call
add
jnp
add
add
pop
mov
je
lret
push
jne
lock
in
ficoml
push
int
bound
fildl
add
aad
add
icebp
add
add
add
fsubl
out
test
add
mov
nop
add
pop
add
in
rcrl
je
add
ja
lcall
lcall
pop
in
push
push
push
push
call
cmpsb
add
xlat
hlt
xlat
xchg
roll
pop
add
add
ret
add
in
pop
mov
pop
add
push
add
pushf
pushf
fiaddl
add
add
hlt
fnstenv
pusha
mov
arpl
pop
sub
pop
add
add
push
push
push
push
call
add
add
pop
jb
lahf
sti
jo
add
lea
mov
add
jl
add
push
lea
add
fnstenv
movb
hlt
jecxz
in
lock
lcall
pop
add
repz
adc
mov
lods
push
sub
ror
sub
push
xor
add
add
sub
add
rol
sub
inc
dec
pop
shr
not
pop
push
push
lea
push
push
lea
push
call
add
push
add
add
mov
add
popa
ljmp
add
jne
lret
incb
add
cli
mul
jae
in
in
pop
pushl
call
push
push
push
push
call
add
push
add
out
add
jns
sti
arpl
mov
movl
jl
add
imul
add
add
add
jmp
test
nop
add
icebp
in
add
inc
lock
push
lea
push
push
push
push
push
push
push
call
jecxz
add
in
pop
mov
in
repnz
lea
in
movl
jl
add
test
lods
jne
add
add
hlt
fcompl
xchg
add
in
fdivr
lcall
inc
call
push
push
lea
push
push
push
push
push
push
call
mov
pop
addb
mov
mov
fcom
add
lret
add
add
add
add
add
leave
add
mov
test
rol
add
pop
fiaddl
imul
add
add
movsb
scas
int3
mov
mov
mov
loopne
lea
push
push
push
push
push
push
push
push
push
call
stc
fwait
add
filds
lahf
int
mov
je
add
jle
lret
add
mov
xchg
subl
jne
mov
imul
icebp
lock
add
pushl
push
push
push
push
push
push
push
push
push
call
cld
jle
add
jp
add
add
repnz
filds
in
ljmp
add
add
xchg
add
jmp
les
pop
addb
stos
add
add
mov
add
add
in
fdivr
lcall
jne
call
push
push
push
push
push
push
push
push
call
push
imul
mov
add
add
mov
add
leave
rcr
imul
add
add
in
add
add
push
push
imul
sub
pop
pushl
pushl
push
lea
push
lea
push
lea
push
call
add
mov
enter
bound
add
in
fildl
mov
stos
push
cli
add
add
cld
xlat
in
cmpsb
add
std
jge
mov
add
add
add
cli
std
jge
test
iret
add
filds
add
stc
pop
lcall
add
mov
addr16
add
lcall
mov
rol
mov
push
rol
push
or
not
add
xor
sub
ror
pop
xor
shl
pop
push
push
lea
push
lea
push
push
push
call
jl
enter
add
mov
add
stos
xchg
xchg
cmc
lock
repnz
aam
add
add
jge
shrb
lcall
lret
into
mov
add
pop
pushf
add
mov
xchg
sub
pop
pushl
push
push
push
push
push
push
call
jno
fistl
push
mov
ljmp
mov
jae
mov
jae
push
int3
stc
in
mulb
mov
add
lahf
mov
add
add
xchg
out
iret
add
add
pop
sarl
add
lcall
sbb
add
push
push
push
push
call
pop
add
add
add
add
add
in
hlt
fmuls
pop
add
loopne
add
mov
popl
add
add
flds
jmp
pop
out
ret
movsl
jns
lods
add
add
add
in
lock
lcall
inc
push
push
sub
shl
push
xor
add
shl
sub
lea
sub
add
pop
not
dec
lea
pop
push
lea
push
push
push
call
add
pop
pop
jnp
pop
add
mov
add
fwait
pop
movsl
add
add
mov
mov
add
gs
add
stos
add
mov
cmpsl
pusha
lret
rol
lcall
movb
add
add
icebp
rolb
add
mov
mov
lret
cwtl
sub
pop
push
push
push
push
push
push
push
push
call
rcr
mov
xlat
mov
ffreep
add
test
push
bound
stos
add
shrb
add
xchg
jo
add
add
scas
in
add
popa
push
mov
push
call
mov
fsubrl
arpl
bound
jb
add
mov
hlt
add
add
pusha
sub
pop
call
push
push
lea
push
call
jno
leave
add
add
ja
cmpsb
jns
lret
add
clc
lahf
sbbb
fldt
jmp
add
data16
fldl
in
add
jecxz
add
gs
pop
add
mov
add
add
jo
sub
pop
mov
push
push
push
push
push
lea
push
push
push
call
push
add
xchg
mov
add
mov
jl
loopne
lea
add
mov
lahf
pop
mov
pusha
cltd
add
gs
add
add
add
jmp
pop
add
add
lcall
push
push
push
push
call
mov
cmpsb
addl
add
add
add
add
cmpsb
add
mov
imul
sahf
icebp
mov
add
mov
mov
add
pop
add
rolb
pop
mov
add
push
lea
push
call
in
pop
add
add
add
jl
add
add
in
cwtl
insb
add
outsl
mov
in
mov
roll
push
into
movb
add
arpl
mov
mov
ljmp
add
add
push
lea
push
push
lea
push
push
call
jb
xlat
add
add
sahf
ja
shll
mov
add
add
mov
jae
add
xchg
xchg
xchg
mov
pop
mov
add
mov
add
push
push
push
push
push
push
push
call
movsb
fwait
xchg
mov
add
test
add
int3
in
add
add
fcomp
push
add
add
mov
pop
pop
add
add
add
add
lcall
xor
jno
adc
inc
lahf
mov
push
lea
push
push
push
push
call
pop
add
add
scas
add
imul
rolb
stc
pop
repnz
pushf
cld
jge
xlat
add
add
lcall
xor
push
push
call
aam
jae
add
cli
fildl
jl
add
mov
stos
sahf
int
rorb
jge
movb
nop
mov
mov
add
clc
lcall
les
add
push
push
push
push
lea
push
push
push
push
call
add
loope
add
add
xchg
jbe
push
popf
add
cmpsl
mov
rolb
loope
jle
add
clc
popa
mov
mov
cmpsl
add
fiaddl
add
add
add
push
sub
pop
add
push
push
call
fwait
add
mov
add
fldenv
and
jnp
add
add
lret
xchg
xlat
push
jmp
ja
in
add
pop
mov
sarl
add
mov
jecxz
add
xchg
lcall
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
xchg
add
add
add
add
pop
js
mul
cmpb
mov
push
add
xchg
jp
in
add
stc
jb
add
mov
int3
add
add
add
js
mov
add
fcomps
inc
or
adc
xor
push
call
add
sahf
jnp
xchg
add
pop
stos
add
add
add
mov
add
pop
shll
leave
mov
test
in
mov
jbe
repnz
imul
scas
test
jno
je
sub
mov
ljmp
leave
sub
pop
add
push
push
push
lea
push
push
lea
push
push
call
add
insb
add
addl
add
add
imul
add
stc
lahf
iret
loope
movsb
push
mov
hlt
outsl
mov
add
push
add
je
lods
add
add
xchg
out
mov
add
test
test
pop
add
sub
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
add
add
add
into
add
add
js
clc
mov
add
mov
push
add
pushf
repnz
add
add
add
mov
loopne
enter
out
mov
in
fdivr
lcall
dec
add
icebp
xor
adc
cltd
testl
adc
push
push
push
push
call
call
jnp
mov
add
pop
stc
out
jl
out
fimull
add
addl
add
push
mov
add
loopne
push
mov
xor
push
lea
push
lea
push
push
push
push
call
mov
add
mov
xchg
add
arpl
add
mov
jmp
roll
test
hlt
mov
add
jbe
mov
mov
add
mov
pop
aad
sahf
mov
std
loope
hlt
push
out
add
jle
add
add
sub
pop
sub
push
push
push
call
xchg
jle
mov
add
mov
std
jge
add
add
roll
add
add
add
pop
xchg
add
mov
add
jne
pop
push
add
imul
pusha
sarb
lcall
push
push
push
push
push
push
push
call
add
bound
imul
mov
hlt
js
push
out
bound
sahf
mov
push
cmpl
jo
add
add
lcall
movsb
pop
push
push
push
push
push
call
xchg
testl
xlat
iret
icebp
lea
imul
add
ja
mov
mov
lods
fdivrs
push
jb
fildl
add
lret
mov
mov
add
add
add
add
mov
js
jae
add
pop
hlt
push
lea
push
push
lea
push
push
push
push
call
arpl
add
aam
add
jo
int3
insb
scas
test
insb
rolb
popf
push
test
addl
lods
fwait
loopne
cmpsb
add
xchg
xchg
add
jno
mov
add
fldcw
add
pop
add
lret
mov
push
add
mov
add
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
mov
sahf
add
xchg
hlt
push
xchg
nop
icebp
mov
add
gs
pop
in
movsl
add
mov
fiadds
jmp
add
add
add
add
add
test
aam
add
mov
add
mov
mov
fiaddl
jb
add
jecxz
pop
jae
add
sub
pop
add
add
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
jno
jns
add
add
cld
add
in
cmc
mov
insb
add
rcrl
nop
out
add
lahf
mov
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
mov
ret
in
fiaddl
mov
filds
add
and
add
add
outsl
stos
push
xchg
add
push
add
add
std
mov
add
in
mov
add
pop
add
mov
add
icebp
out
nop
mov
nop
add
pop
xlat
lock
pop
xor
push
push
call
cmpb
add
add
imul
xchg
test
mov
popa
scas
aad
mov
in
clc
pop
add
push
lea
push
lea
push
push
push
lea
push
push
call
mov
push
add
xchg
add
add
popa
add
out
add
clc
ljmp
shl
add
jnp
add
add
fwait
add
add
add
mov
mov
push
ljmp
mov
push
push
push
push
call
add
add
addl
test
outsl
mov
xchg
add
add
jmp
add
f2xm1
xchg
jo
shr
pop
into
jae
test
shlb
hlt
lcall
adc
push
push
lea
push
push
push
push
lea
push
push
call
pop
test
lock
add
push
add
movb
add
push
add
add
jne
out
mov
add
loopne
icebp
pop
mov
test
add
add
in
loopne
add
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
mov
add
mull
mov
stos
add
retw
add
add
in
push
fcomps
dec
sub
jno
adc
push
push
lea
push
push
call
add
xchg
push
je
lret
add
mov
nop
add
add
cli
pop
add
add
add
jle
roll
jb
fsubp
add
push
imul
mov
andl
call
out
pop
movsl
out
mul
icebp
add
push
add
arpl
fwait
scas
add
cmpsb
rolb
add
loop
data16
add
xlat
jnp
pop
add
fwait
mov
lret
mov
data16
icebp
add
add
fwait
add
shll
add
add
divb
add
xchg
add
sub
pop
add
push
xor
sub
pop
add
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
ret
cmpsl
add
pop
add
add
rol
hlt
add
jecxz
mov
test
test
xchg
jne
xchg
jns
loope
bound
enter
add
jmp
push
cmpsb
jns
sub
pop
add
push
pop
mov
push
push
xor
sub
xor
push
or
inc
add
sub
sub
lea
pop
add
inc
shl
inc
pop
push
pop
pushl
call
push
push
push
push
push
push
push
call
lahf
xorb
mov
add
push
pusha
add
mov
mov
loope
add
add
jae
push
add
test
add
lea
pop
xchg
pushf
xchg
pop
add
cmc
pusha
xchg
mov
in
in
push
push
push
shl
rol
shl
push
sub
add
dec
not
add
sub
ror
sub
xor
pop
lea
rol
add
shl
pop
push
push
push
call
jo
imul
movsb
push
cmc
shll
shr
rcr
add
add
nop
sbbb
fwait
add
int3
fldcw
add
cld
add
loop
jmp
jmp
add
pushf
mov
in
pop
add
add
sub
pop
push
push
ror
lea
pop
push
call
push
sub
inc
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
add
mov
leave
jb
add
add
icebp
les
add
lods
cmc
out
movsb
xchg
pop
pusha
add
xchg
fcmovnu
add
add
add
add
outsl
add
in
aam
cwtl
ja
les
push
ror
xor
dec
pop
push
push
shl
xor
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
add
imul
mov
mov
xchg
add
fcomip
add
fldenv
les
call
add
pop
mov
fmulp
xchg
mov
data16
add
pusha
xchg
jp
add
add
in
in
fcompl
pop
in
push
dec
pop
add
add
push
lea
push
push
push
push
push
push
push
push
call
test
roll
add
add
fiaddl
add
mul
fs
add
mov
push
rcr
add
fildl
jae
push
push
push
push
push
push
call
add
popf
ja
add
fildll
hlt
add
add
jecxz
xlat
call
cli
add
faddl
nop
aam
je
test
mov
add
push
lahf
out
xchg
insb
push
lahf
add
in
add
pop
scas
pop
push
testb
add
add
add
push
cld
sub
pop
xor
push
push
push
lea
push
push
lea
push
call
mov
pop
push
add
mov
test
ret
fldl
arpl
lcall
test
pop
mov
nop
scas
mov
popf
roll
mov
sub
pop
add
push
dec
rol
inc
inc
pop
add
push
push
push
lea
push
push
call
in
lock
movsb
add
add
add
cli
mov
addb
add
std
test
add
roll
add
mov
fiaddl
xchg
mov
arpl
add
mov
jmp
jmp
icebp
imul
add
add
movsb
add
xchg
int3
fnstcw
pop
push
push
lea
shr
rol
pop
mov
xor
push
not
dec
not
pop
add
push
shl
shr
pop
pop
mov
xor
push
lea
push
push
lea
push
lea
push
push
call
lahf
roll
add
mov
xchg
rolb
add
add
mov
movsl
add
call
out
add
push
ret
add
add
cwtl
cli
xchg
push
add
cmc
jb
mov
in
call
rep
push
push
push
push
call
add
jl
mov
rcrb
add
add
mov
mov
xchg
fadd
mov
add
ret
into
xchg
stc
add
in
lock
mov
xor
push
not
pop
or
je
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
add
test
out
stos
add
add
add
mov
loopne
xlat
add
fildl
add
pop
outsl
shll
mov
sub
pop
mov
xor
push
push
call
clc
jge
enter
xchg
movsl
cwtl
add
stos
pop
add
cwtl
incb
iret
add
add
mov
add
call
mov
add
add
stos
pop
add
add
lret
add
out
pop
add
push
rolb
filds
push
in
clc
xchg
mov
lods
push
outsl
jmp
cwtl
add
pop
sub
pop
mov
xor
push
lea
rol
sub
pop
add
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
xlat
mov
fsubrs
xchg
add
movsl
add
pop
add
add
add
int
add
jl
loop
add
roll
mov
lcall
jne
push
push
push
push
push
push
call
add
pop
add
addl
test
add
gs
push
jmp
mov
scas
incb
loop
add
out
mov
in
call
push
push
push
lea
push
push
push
lea
push
push
push
push
call
loopne
push
rolb
add
add
add
cld
add
add
xchg
add
test
outsl
add
add
mov
out
mov
into
add
add
mov
std
add
fcompl
inc
or
adc
out
not
not
pop
add
push
lea
push
lea
push
call
add
jo
mov
add
movsb
add
jge
add
insb
scas
add
add
add
add
js
pop
je
lcall
movsl
add
jecxz
mulb
mov
loop
pop
add
out
push
add
aam
stos
mov
sub
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
add
xchg
add
xchg
add
jns
imul
add
jae
add
out
out
jne
mov
pop
clc
test
add
fisttpll
add
add
add
rolb
add
imul
add
movsb
push
inc
inc
lea
pop
mov
xor
push
push
push
lea
push
push
push
push
lea
push
push
call
enter
jae
push
jecxz
shll
add
push
hlt
mov
add
add
add
std
sahf
addr16
nop
aad
add
call
mov
add
aad
push
imul
lea
fcompl
leave
je
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
cmpsl
add
movsl
pop
std
scas
hlt
add
mov
mov
add
add
clc
iret
mov
rolb
lods
add
add
add
mov
add
rcl
icebp
mov
test
rcl
and
add
ljmp
push
sub
pop
mov
add
push
pop
add
rep
push
inc
ror
sub
pop
pop
push
push
sub
push
or
inc
add
shr
lea
sub
not
rol
xor
pop
pop
push
push
push
push
lea
push
call
shrl
int3
mov
cmpsl
mov
pop
lods
mov
add
movsl
mov
add
add
mov
gs
jns
nop
xchg
add
add
add
iret
sub
pop
pop
mov
push
shl
pop
mov
push
rol
sub
xor
pop
mov
push
dec
lea
ror
pop
jmp
push
push
push
lea
push
push
push
call
add
add
pop
add
outsl
push
pop
add
add
push
mov
faddl
add
scas
loopne
mov
xchg
add
add
add
pusha
add
add
jle
add
in
call
push
push
lea
push
push
push
call
add
fidivl
cwtl
xchg
push
add
into
add
out
jl
add
pop
fldl
pushf
fstpt
add
gs
fsubr
add
sahf
add
jne
push
pop
push
movsl
cmpsb
pop
add
addl
add
add
add
add
pusha
out
add
add
fiaddl
scas
add
lcall
in
push
not
pop
add
push
push
inc
pop
push
push
push
push
push
push
push
push
push
call
sarl
roll
xlat
bound
mov
add
pop
pop
add
cld
pop
mov
add
std
iret
in
fadds
push
in
add
bnd
jne
icebp
mov
cli
flds
icebp
rorl
js
lcall
loopne
lcall
push
push
add
ror
ror
xor
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
std
mov
cld
sti
mov
gs
lret
shrl
and
sarl
bound
xlat
xorb
push
add
std
jno
add
add
jmp
enter
jb
xchg
add
test
add
lret
mov
jbe
add
fs
mov
in
fcomps
push
push
push
call
add
xchg
add
add
add
add
addr16
pop
add
mov
and
add
add
cwtl
add
addb
add
jle
add
shll
leave
add
add
add
add
enter
fisubrl
mov
scas
mov
jge
in
hlt
pop
pop
push
push
push
push
call
shll
test
test
add
jne
add
add
add
xchg
add
add
repnz
add
addr16
push
add
loop
insb
add
in
lock
pop
push
push
push
call
pop
add
add
add
add
pop
out
movsl
jae
push
add
enter
mov
lahf
int
iret
xchg
add
rclb
sti
jae
iret
mov
cmc
fwait
add
add
mov
add
jl
add
in
add
mov
add
mov
add
add
sub
pop
pop
push
lea
push
lea
push
push
push
lea
push
lea
push
call
pushf
add
xchg
repnz
push
subb
loop
add
repnz
add
pop
out
add
add
lds
add
add
in
add
sbbb
xchg
les
jno
jb
push
add
jae
addb
mov
add
pop
add
iret
cwtl
in
add
jmp
add
lcall
ret
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
jmp
add
push
in
add
add
add
iret
add
lods
add
add
add
add
popf
add
lds
popf
ret
mov
test
jl
add
pop
mov
leave
std
lahf
iret
add
testl
add
add
ret
in
loopne
push
push
sub
dec
inc
pop
mov
push
shl
dec
pop
add
push
add
pop
push
push
push
push
push
call
push
popf
loope
xchg
faddl
mov
mov
cmc
mov
out
add
pop
add
add
add
out
mov
ja
add
add
push
mov
mov
sub
pop
push
push
push
push
lea
push
call
xchg
jmp
add
jecxz
test
stos
add
add
add
pop
lret
pop
mov
add
cmpsl
add
fildl
add
into
push
call
add
lcall
push
shr
sub
ror
pop
push
push
push
lea
push
call
xchg
add
xchg
add
fsubs
les
iret
add
xor
add
cmc
cltd
lods
mov
add
les
scas
add
lahf
mov
sub
mov
add
test
imul
add
add
in
fdivrl
add
mov
lcall
in
hlt
pop
movl
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
lods
jmp
mov
add
out
add
xchg
add
mov
xchg
nop
add
jns
lods
popf
pop
int
add
lea
add
in
fdivr
lcall
inc
clc
incl
add
add
lea
push
push
push
push
push
push
call
je
add
fiaddl
xchg
add
cmpsl
xchg
add
cmpsb
addr16
add
xchg
nop
add
cltd
lds
mov
iret
add
in
add
mov
loop
lods
add
add
add
jb
mov
in
add
imul
sub
pop
mov
pop
push
shr
inc
not
ror
pop
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
rolb
add
pusha
add
add
data16
add
data16
add
add
in
add
test
jmp
xchg
xchg
pop
mov
add
xlat
add
mov
shlb
shrl
jbe
add
add
cld
enter
mov
add
int
add
push
push
call
out
add
cltd
mov
testl
add
jle
add
int3
pop
add
add
mov
add
leave
push
jecxz
xchg
add
mov
call
loopne
int3
xchg
add
pop
shll
ret
add
mov
mov
sub
pop
pop
push
add
add
shr
dec
pop
leave
push
lea
push
push
push
push
push
push
push
lea
push
call
add
pusha
stc
stos
push
add
flds
popf
add
add
outsl
scas
mov
mov
add
xchg
add
hlt
mov
clc
cli
add
cmc
add
cmpsb
sahf
add
pop
pop
add
pop
mov
add
jne
aad
add
out
xchg
push
add
scas
jo
loop
and
sub
pop
ret
push
shl
ror
sub
pop
push
mov
push
push
call
mov
add
stos
lret
add
mov
popf
out
mov
add
out
add
add
data16
mov
add
add
mov
fucomi
add
push
add
add
mov
mov
sarb
mov
lcall
cld
push
rol
rol
pop
push
push
not
inc
dec
pop
push
push
dec
xor
pop
push
push
push
inc
add
pop
testl
push
push
push
push
push
call
test
fchs
jp
popl
pop
lret
rolb
mov
mov
jo
fildl
int3
add
add
add
movsl
jmp
ja
xchg
lret
add
icebp
jno
arpl
call
pop
addl
push
push
lea
push
lea
push
push
lea
push
call
out
add
xchg
ja
cwtl
jb
mov
add
add
mov
testl
mov
mov
lcall
xchg
roll
sahf
rcll
push
mov
lods
add
in
call
lea
add
sub
pop
call
mov
push
sub
xor
shl
pop
pushl
push
ror
ror
pop
push
push
lea
push
push
push
call
add
add
jge
add
xchg
test
pusha
add
add
cmpb
loopne
add
pushf
sarl
push
call
add
add
test
pop
add
add
bound
mov
pusha
stos
add
add
rolb
add
xchg
stos
loopne
sub
pop
push
call
push
rol
pop
cmpl
jne
push
sub
lea
xor
pop
pop
pop
push
add
pop
pop
push
dec
inc
xor
pop
pop
leave
push
add
dec
pop
ret
push
push
not
rol
pop
mov
add
push
push
push
push
lea
push
push
lea
push
call
test
mov
data16
mov
add
push
arpl
loopne
nop
lea
add
add
sarb
xchg
add
jl
in
in
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
rcr
xchg
clc
add
add
ret
add
push
add
sub
pop
push
push
push
call
add
stc
add
add
jo
pusha
imul
add
mov
ljmp
int
lods
add
jae
add
add
push
add
add
bound
cwtl
add
add
out
movsl
in
fiaddl
add
sub
pop
push
push
add
add
inc
pop
push
push
push
push
push
lea
push
push
push
push
call
std
add
add
xlat
lret
mov
roll
add
add
push
aam
add
xchg
add
add
mov
mov
je
add
roll
mov
hlt
aam
loope
add
std
clc
add
in
add
loopne
movl
push
push
lea
push
push
push
push
push
lea
push
push
call
sahf
roll
add
add
add
imul
push
add
fists
add
add
leave
add
add
xchg
pop
lods
add
add
popf
fcomp
add
mov
fs
loope
xchg
add
sub
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
add
mov
mov
movb
fdivs
pop
add
mov
mov
fistps
add
add
ljmp
jl
mov
cli
add
add
mulb
add
mov
enter
push
movb
ret
enter
mov
add
add
add
lcall
mov
lea
rol
dec
pop
push
call
push
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
clc
add
xchg
into
jnp
add
pop
enter
mull
int3
add
cwtl
add
lret
add
out
jecxz
cmpsl
add
add
add
mov
add
xchg
fsts
sti
fidivrs
fcomps
insl
cld
add
test
call
push
push
push
push
push
push
call
in
add
popf
stos
xchg
lcall
cli
jae
cld
add
mov
add
iret
sti
test
nop
add
mov
add
add
cmc
add
testb
in
call
pop
pop
push
push
push
lea
push
push
push
call
add
add
add
popf
jne
cwtl
in
add
add
cli
in
loopne
add
add
mov
jb
add
jnp
add
jnp
lret
add
into
mov
mov
add
in
mov
jge
pop
add
lcall
push
shr
not
sub
pop
pop
push
not
dec
not
dec
pop
leave
push
push
push
lea
push
push
push
lea
push
push
push
call
call
add
mov
add
mov
add
add
add
push
add
add
add
add
pop
repnz
mov
fiadds
add
mov
aad
faddl
add
add
add
in
fdivr
lcall
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
pop
je
rolb
mov
fildl
clc
add
add
test
lds
add
mov
clc
add
add
xlat
movsb
mov
mov
fcompl
in
add
push
sub
sub
ror
pop
push
push
lea
push
lea
push
push
push
call
add
adcb
call
cmc
aad
mov
icebp
sbb
add
test
mov
pop
hlt
fisubl
scas
add
xchg
mov
pop
sahf
add
mov
sub
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
out
mov
fiadds
add
loopne
add
leave
in
xchg
fdivl
call
stc
add
pop
add
add
lret
into
add
add
mov
push
sahf
pop
lds
add
sti
add
lret
sub
pop
push
push
push
lea
push
push
call
add
pop
mov
cli
js
enter
scas
jno
orb
pop
pop
test
pop
add
bound
add
add
rolb
int
loopne
pop
aad
repnz
add
add
mov
mov
mov
push
mov
sub
pop
push
push
add
pop
mov
lea
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
imul
add
mov
shlb
popf
add
popf
int3
mov
test
mov
pop
add
xchg
jno
add
mov
add
add
test
loop
enter
push
call
add
add
pushf
mov
cmc
mov
in
add
lcall
call
shl
pop
mov
shr
push
add
rol
lea
pop
add
mov
push
ror
inc
pop
mov
add
push
lea
xor
pop
add
push
push
push
push
push
lea
push
call
out
push
add
add
add
xchg
push
stos
imul
add
mov
add
jmp
arpl
jl
push
testl
add
add
clc
rol
pop
mov
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
scas
stos
sarl
movsb
add
pop
rolb
add
lods
add
mov
add
pop
cmpsb
add
lret
fcom
mov
add
addb
add
fs
sub
pop
cmp
jne
push
push
push
push
call
loop
xchg
movsl
aad
add
repnz
lret
in
xchg
insb
mov
cmc
pop
add
add
add
stc
fildl
add
add
lea
fsts
add
add
add
add
cltd
add
add
add
add
mov
add
add
add
add
cwtl
fadds
add
jne
mov
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
les
fsts
stos
sarb
push
mov
add
add
clc
add
add
add
ja
cld
int
in
fdivr
lcall
add
add
add
push
call
xchg
add
pop
add
pop
add
add
movl
add
add
mov
cli
mov
sub
pop
jmp
push
push
call
outsl
add
add
leave
push
lock
mov
jl
addl
add
ja
add
add
fiaddl
add
fstpl
fsubl
jae
mov
mov
add
add
add
add
add
add
xlat
jns
add
pop
addb
out
jae
aad
in
clc
lcall
inc
cld
push
push
push
call
mov
add
aad
add
mov
push
add
fsubr
pusha
push
fs
jns
add
lods
filds
push
add
jp
bound
add
pop
add
ret
push
fiaddl
add
add
cmc
sahf
add
add
in
jecxz
add
cmc
add
mov
add
add
popl
push
or
adc
test
ror
add
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
shr
add
ja
add
je
add
repnz
test
clc
int3
lods
pop
mov
push
add
in
ficoml
add
fwait
adc
add
add
hlt
jne
insb
sahf
add
sub
pop
movl
jmp
push
sub
rol
shr
shr
pop
mov
push
rol
lea
ror
dec
pop
mov
cmp
jne
push
sub
inc
inc
not
pop
mov
push
pop
movl
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
out
jmp
add
mov
add
add
xchg
movb
js
fiaddl
jo
push
leave
push
in
fdivr
lcall
push
or
add
dec
shr
pop
cmpw
jne
push
push
push
push
push
call
add
pop
mov
aad
add
xchg
lods
add
leave
add
add
out
pop
aam
jo
add
pop
mov
arpl
mov
test
add
fisubrs
les
mov
mov
sub
pop
mov
movl
push
push
push
push
push
push
call
xchg
jne
add
imul
addl
popf
in
xchg
add
add
add
add
jp
arpl
add
add
add
cltd
mov
xchg
jb
lea
pop
clc
shlb
add
sub
pop
jmp
push
inc
xor
pop
pushl
pop
push
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
call
leave
mov
add
push
pop
xchg
add
jnp
pushf
je
add
add
push
nop
nop
je
add
fildl
pop
aam
fldl
jbe
outsl
cld
rolb
mov
add
mov
add
rcrb
add
mov
roll
sbb
push
call
xchg
lock
mov
add
pop
jmp
jle
push
call
fdiv
jno
mov
stos
scas
sti
mov
repnz
add
jmp
jo
mov
popf
add
enter
icebp
jno
cmc
add
lods
add
rol
add
call
add
jno
fs
pop
mov
push
push
lea
dec
shl
push
sub
add
add
sub
rol
pop
not
pop
push
inc
xor
sub
pop
push
push
ror
ror
pop
call
push
not
shr
pop
cmpl
je
push
push
ror
inc
add
inc
push
or
not
add
sub
shl
lea
sub
not
sub
not
add
pop
shl
pop
push
shr
pop
push
call
push
lea
push
push
call
jle
add
mov
lret
out
mov
and
add
xchg
out
add
lock
add
stos
aad
add
jne
cmpsl
add
cwtl
stos
mov
out
testb
add
xchg
pop
jmp
addl
add
mov
into
and
push
mov
in
hlt
pop
cmpl
je
push
push
dec
push
sub
add
add
shl
shl
sub
sub
not
pop
xor
rol
pop
push
push
push
push
push
lea
push
push
push
push
push
call
xchg
jle
push
stc
rolb
add
cmpsl
stc
add
clc
push
pop
mov
add
mov
mov
add
cltd
add
add
fadds
iret
jae
stc
mov
imul
mov
push
push
shl
pop
call
push
push
push
push
call
aam
pop
testb
add
in
cwtl
add
add
popf
lds
jns
add
add
roll
push
int3
xchg
add
nop
mov
popa
add
fwait
out
add
lcall
cmp
add
int3
je
push
push
push
or
inc
add
shr
rol
not
sub
add
xor
pop
add
rol
pop
push
ror
shr
ror
sub
pop
push
push
add
rol
pop
call
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
flds
movsb
int3
mov
std
lods
jns
pop
add
mov
add
push
clc
in
pop
add
add
stc
filds
mov
iret
mov
icebp
add
into
in
sti
repnz
in
fdivr
lcall
cmp
rol
je
push
push
not
sub
push
or
inc
add
rol
inc
ror
sub
sub
not
shl
dec
pop
ror
shr
ror
pop
push
lea
push
lea
push
lea
push
push
push
lea
push
call
fwait
add
movsb
add
mov
mov
test
push
add
icebp
fwait
lcall
mov
add
test
add
movsb
ret
std
scas
push
hlt
sub
pop
push
call
push
add
lea
pop
cmpl
je
push
push
xor
add
lea
push
push
pop
add
shl
inc
sub
sub
add
rol
pop
shr
pop
push
push
lea
push
lea
push
call
hlt
pop
add
loopne
jnp
je
mov
jmp
cli
js
jge
loop
add
mov
test
mov
jae
fcompl
add
add
mov
popa
imul
movb
add
imul
jecxz
add
subl
out
ja
test
in
sub
pop
push
push
push
push
push
call
add
mov
jp
add
add
mov
add
add
imul
add
add
mov
push
add
lcall
aaa
xor
add
push
push
call
add
roll
lcall
jl
pop
sahf
scas
add
loop
xchg
clc
mov
xchg
add
test
outsl
iret
notl
test
test
leave
add
ljmp
stc
cmpsl
ret
cltd
add
add
xchg
arpl
negl
lock
jmp
pop
movsb
sub
pop
cmpl
je
push
push
add
add
push
or
inc
add
xor
dec
sub
lea
pop
add
inc
pop
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
mov
add
push
fiadds
add
iret
mov
add
add
movb
roll
xchg
hlt
add
xchg
add
add
mov
add
add
add
imul
add
pop
jle
movsb
add
jnp
fadds
add
mov
mov
jecxz
add
cmpsb
int
mov
sub
pop
push
push
shr
lea
pop
call
cmpl
je
push
push
add
add
inc
lea
push
or
inc
add
lea
shr
xor
sub
rol
add
pop
not
sub
pop
push
push
push
lea
push
push
push
push
call
add
push
je
add
movsl
add
add
add
add
jo
xchg
add
loope
push
addr16
pop
add
call
push
push
push
push
push
push
push
push
push
push
call
xchg
mov
add
scas
popa
cltd
lods
mov
add
add
add
push
sar
xchg
negb
jp
push
mov
add
xchg
sub
pop
cmpl
je
push
push
shr
dec
push
or
not
add
sub
dec
sub
shr
shr
rol
pop
add
pop
push
push
push
push
push
call
pop
mov
add
add
call
lods
mov
hlt
movsl
xchg
repnz
add
add
fisubl
int
call
jecxz
data16
mov
mov
std
popa
js
add
popl
add
add
pop
mov
lds
sub
pop
push
push
ror
pop
call
push
lea
push
push
push
call
pusha
add
cmpsb
xchg
in
scas
add
pop
in
add
xchg
mov
fs
pop
xchg
xchg
je
mov
xchg
mov
add
mov
popa
add
add
add
jbe
hlt
add
add
add
out
test
add
repnz
pop
cmpl
je
push
push
not
push
push
pop
add
xor
shl
lea
sub
sub
sub
dec
pop
lea
shl
shl
add
pop
push
lea
push
lea
push
push
push
push
call
mov
add
add
push
add
fsts
xchg
mov
add
aad
push
add
jp
add
push
add
push
aad
rcr
add
add
mov
mov
add
lret
add
push
popf
xchg
sub
pop
push
push
sub
pop
call
cmpl
je
push
push
shr
dec
push
or
inc
add
rol
sub
shl
pop
inc
inc
pop
push
xor
pop
push
push
pop
call
push
pop
cmpl
je
push
push
sub
dec
sub
push
or
not
add
not
sub
shr
lea
pop
sub
sub
shl
pop
push
add
sub
pop
push
call
push
add
ror
not
pop
cmpl
je
push
push
lea
push
push
pop
add
inc
sub
shr
add
shl
pop
not
xor
pop
push
pop
push
push
sub
add
pop
call
push
lea
add
add
pop
cmpl
jne
push
xor
inc
pop
mov
push
push
lea
push
lea
push
push
call
mov
stos
add
movsb
in
scas
add
out
mov
addl
mov
movsb
mov
add
mov
mov
add
jb
mov
in
in
lcall
add
add
add
lea
push
push
push
call
add
xchg
aad
ret
loop
aad
add
mov
add
testl
add
add
mov
push
add
cmpb
sar
add
jbe
scas
mov
icebp
mov
mov
addl
arpl
in
clc
mov
push
out
out
popf
loop
xchg
add
xchg
int3
cltd
xchg
arpl
add
lcall
sldt
add
rclb
pop
lea
sub
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
aad
icebp
push
mov
add
push
jns
add
add
lds
add
cld
jno
addl
arpl
add
shl
test
mov
xchg
int3
leave
ret
add
add
int
bound
in
loopne
lcall
pop
push
inc
pop
pop
push
inc
pop
leave
push
push
push
push
push
push
push
push
push
push
call
shll
roll
cwtl
add
pop
add
add
add
ljmp
mov
jp
add
add
jl
cmc
add
scas
xchg
orl
push
enter
mov
add
or
push
not
pop
push
push
rol
pop
mov
push
shl
ror
pop
add
cmpl
jne
push
push
sub
shl
push
push
pop
add
add
rol
sub
shl
rol
pop
lea
sub
shl
pop
push
pop
pushl
push
ror
ror
pop
call
push
push
lea
ror
pop
call
push
shl
lea
pop
jmp
push
dec
not
sub
dec
pop
cmpl
je
push
xor
rol
pop
cmpl
jne
push
push
push
push
push
lea
push
push
push
call
out
mov
add
add
scas
mov
mov
mov
mov
aam
pop
out
add
add
sub
pop
mov
push
push
call
add
add
imul
jno
add
add
add
mov
int
mov
int3
add
movb
popf
enter
add
add
hlt
mov
add
jnp
add
xchg
mov
outsl
movsl
std
popa
add
aam
add
add
lcall
push
pop
add
ret
push
pop
jmp
push
push
push
push
push
push
call
xchg
add
mov
test
lea
push
pop
mov
subb
rorb
add
cli
add
mov
pop
add
add
cmpsb
enter
sub
pop
cmpl
jne
push
push
shr
push
and
add
inc
not
sub
xor
inc
xor
pop
add
pop
push
push
lea
push
call
mov
int3
push
xchg
mov
add
sahf
push
add
add
add
hlt
add
add
add
add
in
hlt
lcall
jne
call
push
pop
push
push
lea
push
lea
push
push
push
push
push
call
imul
lock
lcall
add
mov
aam
faddl
iret
add
add
out
nop
add
pop
mov
add
scas
add
add
aam
push
jae
rcrl
sub
pop
call
push
push
push
lea
push
push
call
add
mov
add
mov
out
add
fnstenv
pop
mov
add
jmp
push
clc
lahf
add
gs
add
add
add
sub
pop
jmp
push
push
push
push
lea
push
push
push
push
call
std
lret
add
loope
add
je
lcall
mov
mov
add
add
jmp
cld
add
in
add
add
jge
roll
add
add
fs
test
jge
add
test
pop
add
push
push
lea
push
push
push
lea
push
push
call
loopne
lods
add
in
mov
iret
pop
mov
mov
jmp
mov
jbe
les
fmulp
lret
add
in
lcall
add
add
push
not
pop
mov
push
ror
add
ror
pop
push
push
push
shr
sub
push
sub
add
rol
sub
sub
rol
shr
pop
pop
push
sub
pop
pushl
call
push
lea
push
push
call
mov
xchg
add
add
rolb
test
jae
mov
mov
push
test
xchg
add
mov
mov
add
add
add
filds
add
arpl
add
stc
add
rcl
jbe
add
add
mov
fwait
add
sub
pop
call
push
push
shl
push
xor
add
sub
rol
pop
dec
shl
pop
push
push
lea
push
push
lea
push
call
mov
add
add
add
add
icebp
lods
test
jecxz
mov
add
add
add
add
andb
xchg
lea
fcoml
add
call
add
mov
in
pop
pushl
call
push
shr
pop
call
push
push
shl
sub
push
sub
add
add
not
dec
dec
sub
shr
inc
add
pop
lea
xor
shr
pop
push
push
lea
push
lea
push
call
add
fisttpl
add
mov
ljmp
add
add
add
mov
add
xchg
xchg
add
add
out
add
in
addl
jge
add
sub
pop
pushl
call
push
sub
pop
call
push
push
shr
push
or
inc
add
not
lea
dec
sub
add
shl
shr
shl
pop
shl
dec
sub
pop
push
push
push
push
push
push
push
push
push
call
aam
xchg
call
add
ficoms
cld
jle
rolb
pop
mov
add
add
add
xchg
push
imul
testl
pushf
jmp
pop
popl
jecxz
add
add
add
in
sub
pop
pushl
push
push
push
push
call
add
add
ja
loope
arpl
add
enter
mov
xchg
add
add
add
rol
sub
pop
call
push
dec
inc
not
pop
call
push
push
sub
push
and
add
add
rol
rol
shl
sub
lea
add
shl
not
pop
shl
pop
push
sub
ror
dec
add
pop
pushl
call
push
xor
sub
pop
call
push
push
inc
dec
push
xor
add
shr
not
sub
ror
sub
pop
sub
inc
inc
pop
push
ror
pop
pushl
push
add
dec
add
pop
call
push
lea
add
xor
lea
pop
call
push
push
add
add
push
or
inc
add
shl
sub
dec
rol
inc
pop
rol
pop
push
add
pop
pushl
call
push
sub
ror
rol
pop
call
push
push
xor
dec
add
push
push
pop
add
rol
inc
shl
sub
pop
lea
add
pop
push
push
push
push
push
lea
push
call
add
int3
add
add
rolb
addl
push
roll
add
popa
add
popl
testl
add
out
jnp
add
out
repnz
pop
pushl
push
xor
inc
add
pop
call
call
push
push
dec
push
or
not
add
xor
add
sub
rol
lea
add
pop
xor
not
xor
add
pop
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
mov
roll
mov
cli
xchg
add
add
fiadds
add
mov
mov
shl
fwait
loope
addr16
add
cli
cmpsb
scas
add
mov
jecxz
in
loopne
pushl
call
push
push
call
add
popl
popl
add
mov
std
cmpl
add
cltd
push
test
push
mov
lds
sarl
cmc
mov
test
ret
jns
add
add
idivl
clc
lcall
shrb
shrl
mov
not
add
not
push
and
add
dec
sub
dec
add
not
pop
inc
add
dec
pop
push
push
push
lea
push
call
add
add
stc
xchg
mov
add
cltd
nop
push
add
aam
add
movl
ja
rolb
add
rcr
je
mov
add
aad
je
loop
add
jne
call
push
sub
shl
xor
pop
lea
push
lea
push
push
push
push
push
lea
push
push
push
push
call
mov
mov
sahf
cmc
int
pusha
loopne
add
jnp
movsl
mov
movsb
add
cmpsl
cmc
mov
add
add
jmp
add
mov
add
add
add
mov
lcall
call
push
push
rol
push
sub
add
sub
sub
add
xor
pop
not
shl
pop
push
push
push
push
lea
push
push
push
call
lahf
lcall
int3
cmpl
push
add
add
add
mov
pop
rolb
add
add
add
lods
add
add
lahf
add
add
lcall
jne
push
lea
push
call
add
add
add
jbe
jge
imul
mov
movsb
rolb
bound
mov
add
jmp
mov
lcall
lods
push
add
push
push
push
push
push
push
push
lea
push
push
call
add
scas
jge
add
nop
cmc
js
add
cmpsl
loopne
stos
scas
enter
push
sahf
pushf
movsl
mov
test
add
xlat
add
mov
imulb
lock
scas
sbbl
lret
ja
add
jnp
mov
add
gs
push
push
add
rol
not
add
push
sub
add
rol
lea
sub
shr
shr
sub
pop
shr
shl
add
pop
push
sub
add
rol
pop
pushl
push
add
pop
call
call
push
push
push
sub
add
rol
add
add
sub
pop
sub
rol
pop
push
dec
lea
shl
add
pop
pushl
push
push
push
push
call
add
add
into
xorl
loopne
insb
xchg
ljmp
add
jbe
add
testl
add
add
add
sub
pop
call
push
push
push
push
push
push
push
call
add
add
add
out
fwait
loopne
hlt
pop
add
jecxz
imul
add
add
clc
loope
xlat
add
push
mov
mov
cld
add
mov
mov
add
nop
jns
faddl
lret
flds
jae
pushf
call
jne
add
jbe
in
in
call
push
push
not
sub
push
or
inc
add
lea
xor
add
sub
dec
shr
rol
pop
rol
pop
push
not
pop
pushl
push
lea
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
jne
addr16
in
fs
data16
add
clc
lcall
add
add
push
add
jle
ret
jno
cmpsl
xchg
add
add
shr
add
enter
ret
push
mov
add
add
fldcw
mov
add
pop
repnz
subl
add
jb
sub
pop
call
push
push
sub
push
sub
add
lea
shr
sub
sub
inc
pop
ror
shl
pop
push
push
dec
sub
ror
push
xor
add
lea
add
sub
rol
sub
inc
pop
add
inc
not
pop
push
lea
lea
pop
call
push
push
lea
push
push
push
push
push
push
call
jnp
fcomps
lcall
jmp
add
pop
push
mov
loope
jae
mov
cmpsl
add
add
roll
pushw
into
pop
mov
add
add
add
add
cld
mov
test
lcall
push
rol
ror
pop
dec
jne
push
push
dec
push
push
pop
add
shr
rol
sub
xor
shl
dec
pop
lea
pop
push
push
push
push
push
push
push
push
push
push
call
fcmovne
add
jbe
add
mov
mov
xchg
add
push
add
add
add
addl
pop
add
jle
add
add
sub
pop
pushl
push
lea
add
rol
pop
call
push
rol
not
sub
pop
lea
push
add
pop
push
push
xor
pop
push
push
pop
push
push
add
add
ror
pop
push
push
shr
add
pop
call
push
lea
push
push
call
iret
mov
rolb
add
lds
add
add
add
add
jnp
add
add
ficomps
movb
push
add
add
add
pop
jle
mov
imul
testl
add
mov
fcompp
add
lcall
scas
pop
add
push
push
xor
ror
shr
lea
push
or
inc
add
rol
inc
inc
sub
not
pop
ror
pop
push
add
ror
rol
pop
pushl
push
xor
add
rol
rol
pop
call
push
push
push
push
push
lea
push
call
add
add
add
add
testl
push
in
test
mov
xchg
imul
out
push
push
push
testl
cmpsl
add
add
lods
mov
add
call
inc
lea
sub
pop
call
push
lea
push
lea
push
call
mov
add
jge
add
out
cwtl
add
xchg
scas
jecxz
mov
add
hlt
les
je
movb
add
scas
insb
test
fdivs
jo
add
int3
xchg
mov
out
add
sub
pop
mov
push
push
ror
rol
not
push
sub
add
dec
inc
sub
shr
shr
sub
pop
dec
shr
pop
push
push
lea
push
push
call
les
xchg
add
js
cmc
push
jne
add
add
add
fmull
fdivrs
add
fistps
cli
mov
mov
sub
pop
pushl
push
add
sub
pop
call
lea
push
push
push
push
push
call
cmpsl
cmc
jge
mov
fists
mov
icebp
mov
add
mov
add
add
pop
add
jne
mov
lahf
add
fwait
out
mov
pop
add
add
cltd
jno
add
sub
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
popf
jb
add
push
shlb
movl
pusha
clc
leave
fiadds
lahf
mov
add
mov
mov
pop
lret
fwait
iret
movsb
add
add
add
add
add
add
mov
jge
add
ja
add
fcomps
add
aad
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
xchg
enter
mov
std
mov
int
out
lea
mov
add
push
add
add
add
add
mov
mov
push
scas
xchg
pushf
xchg
pop
pop
lock
mov
movsl
sti
pop
stos
roll
cwtl
add
mov
add
lcall
rorb
ljmp
mov
adcb
add
call
pop
add
add
sub
xor
sub
shr
pop
rol
ror
add
pop
push
add
pop
pushl
push
ror
pop
call
push
push
push
push
push
push
push
push
push
push
call
jecxz
xchg
ret
sahf
int3
iret
stos
add
add
test
lods
mov
add
add
add
sahf
push
jle
lcall
pop
add
scas
add
push
in
rolb
add
popf
lods
add
lcall
shrb
jno
push
push
add
shl
push
xor
add
sub
xor
pop
shl
add
pop
push
add
pop
pushl
push
sub
ror
sub
inc
pop
call
push
sub
sub
dec
dec
pop
call
push
not
pop
mov
push
dec
rol
ror
add
pop
lea
push
push
dec
xor
ror
push
xor
add
add
sub
sub
dec
shl
add
pop
dec
lea
pop
push
push
push
call
ljmp
add
push
test
jp
scas
xor
add
mov
add
xchg
lahf
jmp
jo
jnp
outsl
add
jne
call
push
not
sub
pop
lea
push
lea
pop
push
push
push
lea
push
push
push
call
sti
jmp
xchg
imul
push
add
mov
lods
add
add
outsl
mov
jo
add
cltd
mov
bnd
add
lcall
add
jle
push
push
lea
push
lea
push
lea
push
call
mov
fs
loopne
rcrb
add
les
add
add
cmpsb
add
push
add
enter
add
cld
add
xlat
mov
xchg
mov
add
repnz
data16
lahf
add
add
add
add
lods
add
jle
sub
pop
pushl
push
push
rol
inc
sub
push
push
pop
add
sub
dec
xor
add
xor
pop
lea
pop
push
shl
rol
pop
push
call
push
push
shl
shl
push
sub
add
sub
rol
sub
ror
pop
sub
lea
rol
not
pop
push
lea
push
push
push
push
call
mov
rcl
add
popa
add
mov
add
into
shr
push
popa
mov
add
add
cli
imul
add
add
popa
add
pop
nop
pop
add
fisubl
pushl
push
not
shl
xor
rol
pop
call
push
ror
ror
pop
push
push
push
lea
push
call
andb
add
add
jecxz
xchg
out
add
xchg
push
add
add
add
cld
jp
enter
mov
add
fdivl
add
add
ja
add
jl
add
add
add
cli
fadds
ja
push
in
mov
sub
pop
call
push
push
sub
shr
rol
push
or
not
add
lea
sub
rol
dec
pop
sub
not
not
ror
pop
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
mov
test
mov
push
mov
loop
add
add
outsl
std
mov
ljmp
iret
loope
add
add
add
jp
push
pop
push
fstpl
fcompl
jne
call
push
not
lea
lea
pop
call
push
rol
not
pop
jmp
push
push
push
push
push
call
xlat
test
mov
lahf
mov
lret
add
faddp
fbstp
scas
add
add
mov
mov
stc
add
fadds
imul
jp
xchg
pushl
push
shr
xor
shr
pop
mov
push
dec
pop
jmp
push
push
xor
push
push
pop
add
add
lea
sub
add
sub
ror
add
sub
pop
shl
add
pop
push
ror
sub
pop
pushl
push
lea
push
push
push
push
push
call
bound
add
add
mov
std
jge
lea
add
add
out
pop
popf
scas
mov
jmp
pop
sub
pop
call
push
push
inc
pop
call
push
push
inc
shr
push
xor
add
inc
sub
ror
shl
sub
pop
xor
rol
pop
push
push
push
push
push
push
push
lea
push
push
push
call
int
in
outsl
mov
add
add
sbb
jecxz
loope
add
cltd
addl
rcrl
add
sahf
add
in
lret
add
fdiv
pop
pop
in
add
push
add
mov
pop
pushl
push
xor
shl
shl
pop
call
push
lea
push
push
push
call
xchg
jge
out
add
mov
lds
lods
jge
jecxz
arpl
add
add
out
add
mov
add
addb
shlb
mov
xchg
bound
jl
add
lock
lcall
call
push
dec
pop
leave
add
push
shl
add
sub
pop
pop
push
push
push
call
add
add
xchg
test
jb
add
rcrl
add
add
pop
add
push
add
imul
fsincos
jb
add
addb
out
mov
xchg
test
jmp
cmc
call
add
add
mov
add
jne
add
mov
lcall
push
push
push
push
push
push
push
call
test
fildl
add
popa
lock
pop
add
popa
jne
icebp
imul
subl
int
add
fsubs
add
mov
ret
xchg
add
add
add
jae
outsl
shll
hlt
sub
pop
pop
xor
push
lea
push
push
push
push
push
push
push
push
lea
push
call
pop
jmp
add
notb
fs
mov
mov
xchg
add
arpl
aad
in
add
cli
movl
push
add
insb
clc
add
in
add
push
push
test
jmp
add
jl
test
popa
sub
pop
inc
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
lahf
in
jmp
lds
add
std
jmp
cmpl
icebp
add
test
bound
fst
add
add
pop
jnp
add
add
rolb
add
ljmp
add
in
fcomps
or
leave
push
push
lea
push
call
fwait
testl
jmp
mov
add
add
aad
mov
iret
add
cwtl
add
add
add
xchg
cli
stos
add
in
add
sub
pop
ret
push
dec
shl
ror
pop
push
mov
push
shl
lea
pop
cmpl
jne
push
shl
add
add
pop
mov
push
push
lea
push
call
add
add
add
xchg
cmpsl
push
mov
addr16
rolb
out
shll
ljmp
rcrb
cld
xchg
mov
add
add
xchg
mov
imul
jbe
in
add
add
lcall
cwtl
shr
sub
pop
jmp
push
push
push
push
push
call
push
add
mov
push
pop
into
arpl
fdivl
testb
add
add
lret
fwait
mov
out
clc
loop
push
fistl
xlat
cmpsl
nop
sub
pop
mov
and
push
push
push
lea
push
push
push
push
push
call
fsub
fs
add
add
mov
ficomps
out
add
jae
add
stc
int3
jno
lea
add
mov
roll
pop
rolb
mov
xchg
pop
add
testb
add
lcall
leave
push
lea
push
push
lea
push
call
fadds
mov
add
add
pushf
cmpl
jmp
lods
rol
sar
add
aam
mov
add
add
lret
xchg
js
int
add
fldl
add
add
xchg
mov
loop
xchg
add
test
add
sub
pop
xor
add
push
push
push
push
call
add
add
arpl
mov
add
add
add
movsb
in
arpl
push
add
aam
add
sub
pop
xor
dec
push
add
ror
sub
pop
sub
push
xor
rol
add
pop
jmp
sub
push
lea
push
lea
push
push
push
call
add
mov
lods
test
rolb
clc
cmpb
jb
push
stos
sarl
stc
icebp
add
lcall
xor
push
call
push
cmc
add
add
push
add
jmp
add
add
fs
roll
add
lcall
add
jo
rolb
test
leave
add
int
pop
add
aad
fcomi
movb
scas
add
movsb
imul
lods
add
out
mov
add
add
add
lcall
jmp
cmp
jne
push
push
push
call
xchg
stc
add
add
sarl
ficomps
jmp
clc
pop
add
popa
sbbl
sub
add
add
addr16
push
cld
pop
div
add
pop
in
pop
icebp
addr16
mov
ret
mov
add
ljmp
test
in
hlt
pop
mov
push
push
push
push
push
push
push
push
call
roll
add
mov
fwait
mov
shr
mov
add
or
icebp
add
mov
add
lret
xchg
add
add
mov
add
add
stos
add
jl
stos
test
dec
cmp
not
inc
dec
not
pop
sub
push
ror
pop
mov
push
push
lea
push
lea
push
lea
push
push
call
mov
loopne
add
mov
add
mov
jne
shll
push
mov
mov
add
lods
push
mov
in
leave
addb
mov
mov
sti
add
add
test
in
cltd
int3
add
add
sub
pop
shr
add
push
lea
push
push
push
lea
push
call
add
outsl
rcrb
std
into
out
fs
add
add
lret
add
push
add
pop
lcall
sahf
jge
mov
add
xor
add
add
jle
mov
stc
push
add
mov
add
jne
add
sub
push
push
push
push
call
pop
jmp
je
gs
add
push
mov
loop
lahf
test
add
push
out
mov
int3
lcall
flds
add
lods
add
add
mov
aad
fnsave
lds
jne
push
add
int3
add
add
add
out
outsl
imul
jp
in
lock
pushl
pop
push
shl
not
pop
shr
and
push
shl
add
pop
sub
push
not
shl
xor
ror
pop
cmp
jne
push
push
lea
push
call
add
fcmovb
jle
add
pop
add
int3
jecxz
lds
test
add
addr16
loop
xchg
mov
xchg
filds
push
jl
stos
lret
add
add
add
mov
add
enter
mov
in
hlt
lcall
push
push
lea
push
push
push
call
jno
add
jl
lds
add
in
les
bound
addl
cmpsb
icebp
rcrl
mov
loopne
add
add
push
push
add
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
add
mov
lahf
rcr
add
ljmp
mov
pop
rorb
icebp
ljmp
cmp
push
add
cld
push
push
push
push
push
push
call
inc
add
add
fs
jmp
push
ljmp
add
fadds
into
cmpsb
lret
aad
lock
add
add
xchg
add
jbe
add
add
cld
mov
out
add
push
add
movl
pop
push
push
push
sub
lea
not
pop
push
push
lea
push
push
push
push
push
push
call
ja
add
nop
cmpsb
add
mov
add
ljmp
fdiv
mov
mov
add
nop
add
add
loope
test
push
add
xchg
add
nop
clc
xchg
mov
add
push
push
call
add
loopne
ljmp
add
mov
lcall
add
xchg
fucomip
pop
jmp
ja
fdiv
pop
cmpsl
xchg
fucomip
mov
jmp
add
xchg
add
add
add
mov
push
pop
lea
push
pop
sub
push
push
push
push
push
lea
push
lea
push
lea
push
call
addl
fildl
imul
fwait
add
loopne
jmp
jne
add
add
lea
xchg
cld
pusha
mov
jmp
xchg
in
jb
add
loope
cli
add
push
add
out
add
test
insb
popf
add
add
mov
mov
hlt
jnp
pop
add
push
test
sub
pop
mov
push
pop
shr
push
pop
add
mov
push
add
xor
rol
xor
pop
add
push
lea
dec
pop
mov
push
shl
ror
ror
pop
add
push
push
push
push
push
call
add
add
push
add
add
hlt
xchg
add
add
mov
add
add
jge
add
test
add
sahf
sti
add
rcl
out
stos
fistps
add
jno
movsl
add
out
add
in
pop
xor
push
push
push
push
lea
push
push
push
lea
push
push
push
call
scas
add
mov
xchg
add
add
popf
xchg
fiaddl
mov
push
mov
popf
std
pop
add
in
add
cld
mov
flds
incb
repnz
fsub
add
shrl
jns
test
mov
les
add
cld
xchg
pop
mov
and
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
frstor
mov
add
add
add
add
stos
lcall
mov
add
mov
push
shll
out
cmc
push
std
xchg
jb
add
mov
ja
add
les
mov
jl
in
fcompl
rolb
jecxz
lea
push
push
lea
push
lea
push
call
popa
mov
add
in
addb
add
fiaddl
insb
mov
popa
incb
rolb
xchg
aad
jnp
mov
push
push
loopne
fnsave
je
add
pop
cld
push
in
in
lcall
add
inc
push
push
lea
push
call
mov
mov
add
pop
out
sahf
out
mov
movsl
add
jns
jo
add
push
add
rorb
push
add
add
lea
lods
add
ret
mov
fs
mov
test
sub
pop
cmpb
jne
push
add
pop
add
push
push
push
push
push
call
lods
addr16
mov
mov
push
nop
js
add
mov
add
add
add
imul
mov
bound
mov
cwtl
add
out
stos
je
gs
pop
je
test
jl
add
fiadds
add
mov
jno
xchg
arpl
hlt
add
in
in
pop
cmp
je
add
push
add
rol
pop
cmpl
jne
push
shr
shl
ror
lea
pop
xor
push
lea
push
lea
push
call
lret
add
insb
jge
test
out
jmp
xchg
enter
add
add
add
add
test
pop
lock
add
add
fisubs
jo
mov
lcall
pop
push
inc
rol
not
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
sti
add
enter
push
add
mov
add
addr16
rcrl
xchg
mov
push
add
add
add
jo
add
popa
mov
add
add
add
data16
add
loop
fs
outsl
add
xchg
addl
filds
lcall
push
push
push
push
push
push
push
push
push
call
les
xchg
add
add
mov
xchg
add
jno
jo
mov
js
pop
add
add
jp
add
lods
outsl
xchg
flds
jl
add
xchg
jb
add
pop
leave
ret
push
rol
dec
add
pop
mov
push
dec
shl
pop
add
push
push
push
push
push
push
push
push
push
call
aad
add
push
lods
add
xchg
add
imul
mov
mov
fcomps
add
bound
pop
add
jnp
pop
add
add
push
stos
pop
out
pop
mov
push
imul
sub
pop
mov
push
push
not
not
pop
mulw
pop
push
xor
pop
call
push
push
lea
push
push
lea
push
lea
push
push
push
call
xchg
add
push
scas
add
push
add
mov
add
arpl
mov
cld
push
push
sti
fcmovu
aad
mov
push
stos
roll
add
add
mov
push
call
push
lea
push
push
push
push
lea
push
push
lea
push
call
shll
lods
mov
add
sti
scas
pop
add
aam
mov
add
mov
cmpsl
add
xlat
rorb
clc
roll
add
addr16
test
add
add
std
add
jnp
sahf
xchg
add
add
add
mov
lcall
xor
pop
push
add
sub
pop
pop
push
add
xor
pop
pop
push
sub
pop
pop
push
push
lea
push
lea
push
push
call
shrl
add
jecxz
nop
push
mov
add
rolb
add
add
xchg
cld
pop
mov
xchg
add
scas
faddl
out
sub
pop
pop
push
lea
pop
leave
ret
push
shr
not
inc
add
pop
push
mov
push
ror
inc
pop
add
push
push
push
push
push
push
push
push
push
push
call
adcl
add
add
xlat
add
lods
ret
add
test
jo
ja
sti
push
flds
xchg
call
jno
add
imul
push
push
lea
push
lea
push
push
push
call
add
jns
add
add
add
add
test
into
add
into
add
mov
pop
ja
add
popa
shll
xchg
add
mov
push
push
pop
push
push
push
push
lea
push
call
mov
add
add
add
out
movsb
mov
test
push
xchg
popl
add
add
add
add
add
jecxz
add
call
jo
mov
faddl
lods
add
aad
subb
push
add
repnz
add
add
add
push
lock
sub
pop
mov
push
push
lea
push
lea
push
call
into
sahf
add
leave
add
add
out
add
sti
fidivrl
jge
enter
adc
pop
xlat
mov
jp
add
cmpsl
sahf
sahf
pushf
add
scas
add
mov
mov
add
test
in
lock
lcall
pop
push
push
push
push
call
aam
add
gs
gs
add
mov
les
add
jmp
je
enter
add
fmul
add
mov
add
add
add
call
popa
add
fldl
add
add
add
add
sub
pop
lea
sub
push
shl
pop
mov
shr
push
push
push
call
add
mov
test
push
add
jbe
loop
push
aad
add
push
xchg
out
insb
add
movl
lods
ljmp
add
add
scas
mov
add
lcall
fimull
push
push
lea
push
push
push
push
call
ficoms
lahf
add
add
data16
in
add
mov
push
mov
add
enter
cld
xchg
add
add
pop
add
aad
popl
test
add
cmc
jae
add
push
jnp
bound
add
pop
xchg
shlb
outsl
mov
lcall
pop
add
pushl
push
add
xor
ror
pop
popl
push
push
push
push
push
push
push
push
call
js
mov
jge
jecxz
add
add
mov
lret
les
add
arpl
mov
mov
mov
add
add
mov
add
lret
add
add
mov
push
in
loopne
lcall
jnp
push
push
push
lea
push
push
push
push
push
push
call
mov
popa
fwait
add
add
mov
add
add
pop
int3
add
shl
hlt
in
jp
add
stc
xor
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
cmpb
add
cmpsb
add
add
mov
ja
loop
lods
xchg
mov
mov
mov
hlt
add
add
add
sahf
movsl
add
lcall
adc
push
not
pop
mov
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
rcll
mov
int3
enter
addr16
mov
add
je
test
push
stos
rcr
mov
lret
sahf
jb
lock
fidivl
sub
pop
add
push
dec
pop
xor
push
dec
add
pop
rol
push
pop
nop
push
sub
sub
xor
pop
nop
push
lea
dec
rol
pop
xor
nop
push
push
push
call
mov
mov
add
test
mov
add
add
pop
add
ficoms
jb
add
jnp
outsl
stc
scas
rolb
testl
add
add
jne
add
andb
js
fldenv
aam
jnp
cmpb
loope
mov
add
in
hlt
pop
nop
push
pop
inc
nop
push
add
pop
nop
push
shl
xor
xor
pop
cmpb
jne
push
sub
inc
pop
add
nop
push
push
lea
push
push
push
push
push
push
push
push
call
xchg
add
mov
int
add
add
mov
loope
pop
add
leave
mov
add
arpl
int3
add
test
fiadds
add
call
in
sub
pop
nop
cmp
je
push
push
push
lea
push
push
lea
push
push
call
add
ljmp
add
push
imul
clc
mov
jmp
push
std
fisubl
xchg
in
mov
add
add
fistl
jne
add
fmulp
shl
stos
add
les
sahf
xchg
add
add
mov
popa
jns
in
in
nop
nop
push
ror
shr
lea
pop
inc
nop
push
push
push
lea
push
push
push
call
add
add
roll
add
mov
push
mov
int3
add
jno
add
rcrl
clc
outsl
imul
mov
add
in
in
call
nop
cmp
jb
push
push
lea
push
lea
push
push
lea
push
call
std
loop
push
add
int3
lahf
add
add
add
xchg
leave
scas
push
xchg
add
add
mov
clc
cld
add
rclb
add
add
add
aam
lock
mov
add
stos
test
add
arpl
rclb
pop
xchg
movl
sti
push
push
push
call
mov
scas
add
add
fnsave
gs
add
add
pushf
push
add
xchg
in
filds
in
lods
xchg
mov
add
mov
pop
icebp
push
int3
sub
pop
jmp
push
lea
push
push
push
push
push
push
lea
push
call
add
add
add
push
shlb
popf
out
push
add
jne
mov
pop
orl
test
insb
add
icebp
fisubl
mov
add
lcall
push
and
inc
ror
rol
inc
pop
add
push
push
push
push
call
mov
add
cltd
add
add
scas
clc
add
add
add
loope
mov
fsub
loope
add
mov
mov
sub
pop
movzwl
mov
push
rol
pop
add
push
lea
sub
rol
pop
mov
push
add
sub
pop
xor
xor
push
shr
pop
shl
push
push
push
push
lea
push
call
movl
jnp
out
add
push
add
add
out
add
add
pusha
scas
jae
ljmp
jae
add
fildl
add
add
xchg
mov
xlat
mov
mov
add
in
lcall
dec
nop
add
roll
loope
xor
push
push
push
push
push
lea
push
push
call
ret
mov
xlat
test
xchg
mov
and
jecxz
loopne
xchg
add
xchg
hlt
pop
jp
test
add
fildll
add
lea
lcall
loope
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
xchg
test
pop
popa
add
add
add
push
mov
jle
add
out
pushf
add
add
cmpb
add
mov
add
data16
add
add
out
mov
mov
add
mov
in
fdivr
lcall
or
push
sub
pop
mov
push
add
pop
add
push
push
push
call
cmpsl
fcomps
popf
add
add
xchg
push
out
leave
testb
add
xchg
push
pop
add
add
loope
add
jns
add
fadds
add
mov
imull
add
pop
push
shr
add
pop
pop
pop
push
push
push
push
push
push
push
push
push
call
add
pop
into
add
push
imul
add
add
jno
xchg
imul
add
add
imul
xchg
roll
mov
add
mov
lods
fiaddl
add
cltd
jmp
mov
movb
mov
add
add
add
movsl
add
out
cmc
add
lcall
leave
push
push
lea
push
lea
push
push
call
xchg
jae
lret
lret
int
iret
jle
add
add
lea
add
add
add
clc
sub
pop
ret
push
push
push
push
push
push
push
lea
push
call
add
push
cmpsl
add
add
add
jnp
jge
mov
js
cld
sbb
add
loop
jp
mov
add
cwtl
addb
in
lahf
sub
pop
mov
push
push
push
push
push
push
call
add
add
insb
loopne
add
test
mov
add
gs
add
lcall
pop
loopne
add
cltd
mov
push
in
call
push
push
push
dec
rol
pop
push
push
add
dec
pop
push
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
incb
add
xchg
insb
jp
cmpb
add
pop
rorb
cmc
jnp
xchg
mov
add
add
test
add
add
pop
add
notb
add
cmpsl
rolb
movsb
add
mov
add
ficoms
lea
lcall
adc
and
push
push
push
push
push
call
nop
ficoml
pop
add
push
add
add
jne
mov
mov
mov
xchg
add
icebp
fisubl
mov
add
add
in
fdivr
lcall
jge
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
iret
in
jp
add
sahf
test
faddl
test
xchg
mov
add
add
add
add
add
add
add
out
add
push
std
add
lcall
rorb
test
add
mov
push
shl
sub
add
sub
pop
test
je
push
inc
sub
pop
mov
push
push
push
push
lea
push
push
push
push
call
add
push
jle
add
enter
mov
add
lret
cli
xchg
outsl
xchg
add
add
mov
int
add
rolb
add
sarb
lods
ljmp
lcall
dec
or
pop
push
lea
push
push
call
nop
add
mov
std
jmp
push
jmp
add
xchg
add
add
in
mov
fdivp
xchg
xchg
out
xlat
outsl
movsl
add
test
mov
push
mov
cli
lret
add
add
add
add
pop
sub
pop
inc
push
push
lea
push
lea
push
call
xchg
pop
mov
testl
fcmovnbe
loope
imul
fcoml
mov
rolb
int3
push
xchg
add
add
jmp
add
push
add
shll
enter
insb
in
test
xlat
sti
add
mov
mov
fs
in
lock
lcall
rorb
test
add
push
add
rol
pop
test
je
mov
push
xor
add
rol
pop
inc
push
push
lea
push
push
call
cmpsl
add
mov
add
idiv
jno
faddl
add
add
test
jl
add
add
add
mov
sub
pop
cmp
je
push
dec
pop
test
jne
push
rol
rol
pop
xor
pop
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
movb
pop
lea
xlat
add
roll
mov
push
lcall
add
add
test
je
xchg
jne
xchg
cmpl
jl
flds
fistps
fwait
add
lahf
add
mov
clc
mov
lcall
pop
push
push
lea
push
push
call
add
add
cwtl
loop
aad
shl
add
hlt
add
cmpsl
add
leave
mov
addb
fildl
rolb
int3
xchg
add
stos
test
add
iret
fadds
add
jns
lods
add
lock
lcall
leave
push
inc
pop
ret
push
ror
pop
mov
push
push
push
call
cmpsb
rolb
ficompl
add
add
add
add
add
add
add
sti
out
shrb
add
pop
scas
add
add
les
push
xlat
xchg
add
add
lahf
int
fidivrl
sti
add
add
mov
sub
pop
inc
push
push
lea
push
push
push
push
push
call
in
movb
mov
push
stos
add
stos
movsb
mov
fidivl
add
add
add
mov
addl
jbe
insb
jnp
lcall
add
call
push
jno
jo
push
mov
push
mov
test
cmp
jne
push
lea
push
call
mov
pop
jnp
arpl
push
add
popa
add
pop
add
mov
repnz
add
add
roll
in
add
gs
pushf
add
add
cli
xchg
pop
add
outsl
add
fadds
orb
add
add
add
add
add
mov
jno
lods
pop
lret
jge
imull
pop
lea
push
not
pop
mov
push
push
push
push
push
lea
push
push
call
cmpsb
mov
js
add
jb
add
mov
loop
movl
cmc
mov
pop
aad
add
mov
pop
jp
fsubl
into
mov
add
push
add
pushf
faddl
xchg
add
fwait
add
fdivl
add
sub
pop
test
je
mov
push
push
lea
push
push
push
push
call
testl
loope
imul
mov
je
pop
add
jmp
push
add
arpl
add
test
bound
fsubrl
out
test
add
fs
mov
add
cmpsl
add
ljmp
call
push
push
push
push
push
call
add
add
xchg
jbe
add
add
add
pop
pop
scas
out
jmp
clc
jmp
out
fwait
nop
add
mov
add
in
pop
cmp
jne
mov
push
push
call
pop
push
xchg
add
jp
rolb
add
lock
add
add
add
add
test
addb
in
clc
pop
test
je
mov
push
push
push
push
push
lea
push
push
push
call
jno
flds
pop
push
jb
icebp
add
jo
add
push
mov
mov
add
jnp
ja
mov
in
add
int
mov
loopne
lcall
roll
lea
push
push
push
push
call
popl
mov
scas
movsl
add
add
aam
add
mov
test
jno
add
jbe
add
cltd
mov
add
lret
add
add
enter
add
icebp
add
les
lret
pop
pop
mov
popa
sub
pop
cmp
je
push
push
push
push
push
call
pop
js
mov
xchg
add
push
add
jmp
add
add
add
jns
aam
into
add
add
add
xchg
shr
lret
enter
jns
jl
int3
pop
add
xchg
add
stos
jmp
jp
add
test
lods
lahf
push
mov
push
movsl
out
rolb
movsl
repnz
sub
pop
jmp
xor
push
add
ror
lea
pop
pop
push
push
call
add
cli
add
add
rcrb
add
imul
cmpsl
pop
stc
les
ljmp
gs
mull
sub
pop
pop
push
lea
push
push
call
in
shlb
add
add
repnz
add
mov
push
out
sbbb
add
scas
add
add
lcall
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
mov
lret
add
mov
into
in
jmp
add
stos
add
push
call
push
pop
jmp
add
add
pushf
test
add
je
add
mov
jle
add
int3
pop
popa
loopne
xlat
sub
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
mov
out
enter
add
add
mov
mov
add
roll
in
add
lahf
xchg
add
mov
aam
sub
pop
leave
ret
push
lea
add
pop
lea
pop
push
dec
dec
dec
pop
pop
pop
push
rol
xor
ror
add
pop
pop
push
dec
shr
sub
rol
pop
leave
ret
push
rol
shr
add
pop
mov
push
inc
sub
pop
pop
push
push
push
push
push
push
call
xchg
jbe
aam
mov
imul
jmp
jp
add
mov
mov
fcmovnbe
cwtl
jno
pop
mov
gs
pop
pop
pop
push
dec
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
add
loopne
addr16
stos
lods
mov
jmp
add
add
sarl
xchg
gs
add
aad
jnp
pop
mov
leave
push
add
pop
ret
xor
cmp
shll
cmp
xor
adc
and
adc
dec
cmp
mov
icebp
cmp
xor
adc
jb
adc
cmp
xchg
lods
dec
sub
imul
pusha
mov
int3
xchg
fidivrs
and
add
jb
sub
pmaxub
lods
repz
xor
aas
jmp
mov
dec
xor
loopne
xor
imul
lods
and
lcall
rcr
int3
mov
out
stos
mov
mov
stc
outsl
xlat
xor
dec
or
aas
or
lds
sub
mov
mov
lret
ds
and
jecxz
jno
push
subb
lahf
in
ljmp
mov
testl
push
and
scas
mov
sarl
lock
lods
fnstsw
test
jb
call
sub
sbb
into
popf
jb
fnstcw
jp
lock
sbb
pop
scas
and
and
jge
jge
faddl
loop
mov
sbb
popa
lcall
dec
push
xchg
inc
sbb
xchg
mov
xchg
lret
push
ret
adc
sub
test
sbb
decl
lcall
pop
lods
push
ljmp
push
aad
imull
mov
sbb
ja
in
lods
push
mov
jno
insl
sbb
push
sub
sahf
icebp
hlt
andb
ds
popa
xchg
in
inc
insb
bound
shl
push
rorl
stc
andb
dec
jae
stos
loopne
mov
les
xor
dec
inc
ljmp
fstl
mov
push
gs
and
test
ja
lahf
jg
inc
sub
aas
inc
xchg
and
push
inc
dec
andl
divb
inc
mov
inc
mov
pop
enter
test
ret
cmp
cmp
int3
adc
nop
js
js,pn
jno
xchg
sub
sub
aad
iret
enter
xchg
mov
sti
fidivs
int3
mov
icebp
lcall
icebp
mov
dec
dec
daa
push
fdivrl
fbstp
pop
xchg
dec
sbb
inc
js
jmp
cmpsb
aas
in
fwait
jp
stc
mov
shr
ds
popa
pushf
int
pushf
aaa
jae
movsb
inc
aad
lods
jge
sbb
or
movsb
fcmovne
dec
gs
mov
jnp
sbb
push
jnp
ljmp
pushf
roll
stos
add
jo
jne
inc
in
sub
xchg
adc
mov
xchg
rcll
jp
outsl
iret
or
insl
ficompl
aad
cld
xor
fnsave
xor
fstps
jne
imul
xor
ficoml
mov
repnz
cmc
lods
xor
lea
push
lods
cltd
stos
xchg
jb
pusha
xchg
push
xor
out
add
insb
or
ljmp
add
into
mov
push
repnz
dec
js
jge
daa
cld
and
pop
add
ret
push
aaa
jbe
mov
xor
mov
dec
out
stos
enter
fmuls
imul
push
leave
outsl
jecxz
add
repz
stos
xchg
or
xchg
mov
xorb
add
addr16
leave
fcompl
xchg
movsb
out
jns
add
out
cmp
cmp
je
sub
aad
fldcw
filds
or
shll
mov
popf
ljmp
inc
cld
push
test
mov
jge
jg
xor
pop
xchg
scas
mov
hlt
jb
push
mul
lcall
xor
xor
fldt
mov
xor
fisttpl
push
shrb
leave
lret
loopne
fsubrl
stos
mov
pop
dec
cmp
lret
xor
fnstsw
mov
enter
popf
inc
mov
shlb
dec
daa
jg
daa
cwtl
icebp
sub
gs
imul
fldt
das
jle
mov
pop
test
and
arpl
push
cmpsb
jle
add
je
push
or
scas
xchg
movsl
xorl
push
nop
adc
es
mov
lods
dec
sub
in
mov
clc
xor
fnsave
xchg
mov
mov
mov
and
and
and
test
jb
jns
inc
add
jmp
ss
idivl
mov
jnp
fldcw
sti
les
leave
jp
dec
add
xchg
repnz
dec
repnz
aaa
xchg
loope
push
ficoms
jnp
in
pop
push
stos
aad
xor
ljmp
jle
add
add
jne
inc
xlat
stc
dec
shrl
sbb
cwtl
jg
lods
push
fbld
cltd
mov
ljmp
xchg
or
mov
and
mov
sub
and
lea
in
or
subb
xor
jmp
nop
roll
cmp
aaa
mov
repz
xchg
aaa
cmp
int
add
mov
push
xchg
fldcw
movsb
inc
lea
add
das
inc
cld
cmp
sub
cli
mov
mov
xor
ficompl
cltd
xchg
movsb
pop
push
lret
enter
js
cs
lods
or
scas
lods
add
test
pusha
inc
ret
addr16
aas
xor
pop
jmp
imul
insl
sub
mov
xor
cmpsb
cmpsl
hlt
mov
call
nop
push
mov
loop
inc
sar
fcmovnb
lods
repnz
adc
mov
add
xor
lods
fwait
push
subb
jmp
lret
inc
sbb
adc
mov
adc
test
xchg
rcr
sub
or
pop
ds
jl
pop
mov
ffree
imul
mov
cltd
movsb
popf
daa
jae
stc
test
cmp
xor
jbe
test
jl
push
icebp
loop
pop
sar
lods
cmpsb
or
nop
sti
flds
cmpsl
imul
cli
dec
cmpl
nop
outsb
dec
lahf
ret
mov
ds
inc
fistpll
into
cld
xchg
jne
xchg
xchg
jno
addl
fisttpll
jl
xor
das
addr16
popf
adc
cmpsb
inc
sar
xchg
ret
fs
pop
rorl
dec
sub
jecxz
addr16
lock
mov
mov
testl
mov
inc
xchg
imul
pop
nop
cmp
add
xchg
ds
push
out
inc
dec
gs
scas
xor
cmp
mov
mov
jge
fs
clc
lahf
mov
and
test
cmpsb
and
mul
mov
popl
fisubs
gs
mov
les
add
aaa
int3
notb
jg
lahf
or
repz
xchg
or
pop
pop
sub
or
mov
cmpsb
cltd
cld
fimuls
out
hlt
aam
adc
xchg
xor
cmc
sub
sbb
scas
adc
sbb
stc
mov
rep
and
test
mov
mov
sbb
daa
xor
sub
pop
out
and
pusha
mov
or
dec
jae
add
or
adc
lds
adc
lret
cli
stc
jb
add
pop
and
fwait
imul
adc
imul
and
aaa
int
cmc
es
mov
jg
sbb
gs
or
test
je
mov
cltd
jb
mov
mov
cmpsl
push
fdivs
xchg
pop
jno
jb
pop
data16
in
gs
cmpsl
xchg
cwtl
inc
cmp
les
cld
mov
data16
add
test
int3
xor
rcrb
scas
lods
mov
xor
sub
rorb
in
dec
xor
loopne
jle
pop
jbe
jno
hlt
mov
sub
or
fnstsw
cmp
scas
jne
cmp
scas
cmp
mov
sub
popa
loope
leave
fcompl
std
jl
push
push
cmp
jg
inc
fnstsw
xchg
adc
mov
sub
cld
pop
xlat
shlb
outsb
out
mov
sbb
imull
add
loope
movsl
std
mov
call
out
sbb
pop
mov
aam
ret
jb
stos
inc
scas
cwtl
icebp
jnp
mov
jnp
repnz
pusha
rclb
jae
test
mov
dec
mov
loop
adc
sbb
jg
dec
jne
aad
pop
shrl
jmp
sub
mov
pop
mov
testl
icebp
sti
test
jb
or
push
mov
hlt
movsb
shl
mov
icebp
add
cmp
cmc
aad
push
sbb
push
int3
std
push
inc
sub
jg
xchg
and
mov
testb
das
aad
xor
out
mov
mov
out
pop
sub
mov
and
push
jp
mov
jno
ds
call
mov
push
and
addr16
and
xchg
inc
or
and
mov
pushf
movsl
pop
cmp
dec
and
inc
pop
xchg
fs
push
test
sti
clc
mov
or
dec
pop
outsl
and
sub
xor
ja
dec
movl
xchg
mov
cmp
push
add
mov
cmp
fildll
cli
or
or
hlt
roll
lds
inc
xchg
imul
adc
loope
scas
test
xor
and
outsb
and
addb
inc
stc
mov
mov
insl
push
ret
stos
mov
cmp
pop
lcall
sbb
inc
or
dec
daa
cmc
mov
dec
xor
inc
popa
inc
decb
push
cmpsb
out
jae
lea
mov
sub
lahf
into
int
pushf
jp
sbb
lret
scas
outsb
and
jno
gs
lret
dec
push
or
adc
xor
cltd
mov
dec
sbb
in
lods
mov
les
mov
xor
lahf
pop
mov
pop
mov
push
ss
jp
xor
int3
inc
inc
xchg
int
stos
xchg
test
ror
ja
xchg
xor
jg
mov
popa
pop
repz
loopne
repnz
xchg
mov
dec
xor
cmp
push
push
push
jp
xchg
je
mov
mov
int3
or
dec
stc
sbb
mov
mov
outsl
scas
or
adc
rorl
sbb
stos
xorl
arpl
aam
lcall
and
pusha
inc
int3
int
es
sub
pusha
iret
dec
lret
imul
lock
mov
cwtl
lret
mov
xchg
cmp
or
shrb
out
jnp
std
lahf
cltd
xlat
inc
loop
cs
lods
in
cwtl
insb
sbb
xchg
mov
test
mov
mov
xor
movsl
adc
das
push
mov
sub
cmpb
out
fwait
add
mov
pop
xor
xchg
out
cmp
mov
xor
push
cltd
mov
xor
jle
add
mov
fldt
or
mov
les
ss
pop
xor
dec
mov
add
sbb
adc
and
ficomps
push
jnp
xchg
mov
sub
jb
push
dec
lds
adc
xor
je
mov
leave
lret
cli
jno
call
cmp
inc
jae
cs
jg
outsb
jle
sub
in
xchg
divl
insl
adc
leave
cmpb
cmc
jmp
jno
adc
or
add
push
mov
jno
ret
mov
sbbl
sbb
pop
mov
push
add
mov
jns
lahf
push
push
pop
adc
jecxz
js
xchg
mov
scas
mov
subl
shll
sub
inc
jmp
jo
imul
fdiv
jnp
shll
repnz
insb
das
rcl
jle
xchg
fdivrl
sbb
in
xor
notb
test
rclb
xchg
mov
rorb
rcrl
push
outsl
pop
xchg
out
xchg
and
bound
xchg
adc
cmp
push
int3
sahf
insb
xchg
xchg
cmp
ljmp
sbb
fidivrl
mov
fldcw
inc
push
sub
aas
cmc
movsl
aaa
movsb
jmp
aaa
jne
xor
push
out
dec
cs
mov
inc
mov
popf
dec
mov
mov
pushf
pop
push
notl
icebp
xchg
fwait
jae
or
dec
cli
jae
popf
add
stos
pop
xor
cmp
push
lret
inc
dec
adc
movsb
lods
aad
js
dec
jnp
sbb
or
clc
roll
xor
das
out
or
mov
mov
ret
jne
fs
push
test
mov
loop
adc
stos
popa
out
subl
arpl
cmp
inc
sbb
test
mov
arpl
decl
or
outsb
inc
mov
xchg
loope
rcrl
mov
cld
mov
dec
cmp
xor
sub
push
jne
mov
aaa
fdiv
xchg
hlt
jmp
add
mov
cmp
cmp
pop
xchg
or
fnstsw
call
xchg
movsb
mov
and
sbb
sub
lds
loop
call
push
imulb
jnp
mulw
pop
out
add
rcrl
cmp
hlt
adc
inc
mov
pop
scas
sub
insl
out
mov
icebp
pop
cmp
cmp
es
fidivl
lods
icebp
adc
add
inc
fnstenv
int3
or
out
inc
stos
out
push
gs
xchg
adc
cmpsl
mov
test
inc
fxch
scas
mov
pop
push
lahf
mov
cmc
jae
cmp
xchg
rol
dec
add
mov
sbb
arpl
les
mov
jo
lea
xor
add
test
jbe
out
data16
mov
pop
push
mov
ret
and
je
ja
jle
mov
xchg
ljmp
push
into
rcr
cmpsb
jg
insl
or
xchg
rcr
sub
fwait
pop
xchg
mov
arpl
xchg
test
sub
movsb
pop
or
neg
or
mov
js
cmc
int3
je
pushl
mov
sub
aad
jmp
clc
es
ja
test
jle
sbb
mov
ficompl
cmp
mov
fstpl
dec
push
sub
jo
and
je
xorl
ds
jae
cwtl
rorb
cmp
mov
out
dec
adc
mov
test
stos
fbld
pushf
hlt
and
mov
xor
sub
ljmp
pushf
mov
pop
sub
mov
stos
push
or
outsb
in
mov
hlt
xchg
xor
mov
cmpsl
sub
mov
outsb
push
ds
xchg
rclw
aas
subl
push
ja
jmp
inc
sbb
inc
repz
not
adc
jmp
push
add
aas
std
sbb
push
inc
in
xor
fstpl
and
jmp
pop
xchg
hlt
stc
or
xchg
icebp
loope
mov
pop
fidivs
stos
sbb
mov
out
hlt
lcall
aaa
mov
xor
push
adc
add
int3
pop
daa
lcall
sub
xlat
popf
mov
rcr
mov
push
mov
jne
test
in
cmp
adc
jecxz
push
cmp
out
sub
adc
adcb
pushf
push
jmp
jp
mov
pushl
mov
xor
punpckhwd
lcall
stos
dec
inc
enter
jae
cmp
sub
sbb
mov
jno
fisttpl
xor
jae
pop
sti
xor
xchg
or
or
push
jnp
mov
imul
cmc
push
sbb
pop
or
stc
lock
pop
gs
pop
in
dec
cwtl
test
xchg
popf
dec
xor
fistpll
je
fidivl
fcmovne
jmp
xchg
in
mov
or
xchg
imul
in
daa
xor
stos
rcl
cmp
jbe
addr16
cs
xor
cli
xor
mov
mov
mov
mov
outsl
outsl
sub
fstpl
lret
lret
cmp
jno
in
test
add
mov
jbe
inc
mov
jle
mov
pop
les
xchg
xlat
pop
mov
je
out
pop
pop
scas
cmc
std
in
rolb
adc
xor
in
push
and
and
mov
dec
cwtl
jg
out
cmp
mov
sti
iret
rcl
nop
pop
mov
mov
or
bound
or
push
cmpsb
jnp
lea
sbb
jecxz
test
stos
xchg
dec
mov
stos
dec
pop
jge
mov
outsl
in
xchg
outsb
cli
lret
mov
int
adc
fdivs
cmp
test
dec
mov
sbb
decl
cmp
aad
xchg
scas
adc
call
mov
xchg
pop
pop
sub
sbb
mov
fs
incb
movsl
push
loopne
adc
mov
xchg
jne
mov
lahf
std
jg
insb
add
mov
jae
lods
faddl
push
push
aad
out
adc
xchg
and
stos
jns
push
adc
sbb
lret
xlat
push
outsb
pop
cmc
push
dec
das
xchg
repnz
clc
xorl
aas
mov
inc
dec
nop
jecxz
dec
jne
scas
push
arpl
adc
cmp
scas
arpl
and
mov
icebp
cld
stc
pusha
sub
push
adc
orl
aas
ret
push
loope
adc
insb
mov
and
fnsave
push
jb
outsl
and
in
pushf
in
pop
sarb
add
or
cltd
xchg
imul
xor
sbb
push
pop
stos
and
mov
addl
or
cmp
sahf
jnp
int3
lds
sbb
fwait
mov
mov
pop
push
jmp
out
mov
test
mov
bound
jno
lret
mov
jmp
repnz
repnz
in
push
cmp
aad
xor
es
fldt
ja
and
aaa
cmp
jmp
sub
inc
mov
inc
insb
lods
or
out
enter
imul
dec
xchg
adc
pusha
test
inc
into
int
pop
loop
sbb
sbbb
cld
sub
incb
lret
outsb
nop
push
adc
movsl
mov
les
int
rolb
mov
add
data16
mov
test
pop
adc
rcrl
sbb
push
push
loope
mov
inc
cs
divb
mov
test
int
sbb
cwtl
mov
xor
pop
hlt
fdivrl
xchg
inc
push
loop
outsl
insb
cmp
push
cmp
pop
pusha
and
sub
pop
jl
sbb
movb
and
cmc
add
fstp
fnstsw
sub
scas
lahf
imul
mov
out
stc
jp
shll
mov
cmpsb
cltd
push
pop
shll
inc
std
int3
lahf
addr16
sub
adc
jb
and
inc
mov
mov
mov
cs
sbb
rol
jecxz
or
jle
pop
add
das
dec
cld
arpl
aas
lret
sbb
jae
pusha
xor
mov
xchg
pop
xchg
popf
cmp
adc
dec
cmpsl
cmp
inc
fldl
jecxz
mov
jne
es
pop
jmp
cli
daa
lods
pop
dec
and
jp
mov
pop
dec
mov
mov
sbb
add
mov
dec
mov
data16
decb
clc
lds
sti
les
mov
adc
sub
pop
inc
pusha
enter
aam
call
fdivl
xchg
push
xor
ds
mov
ja
popa
xor
cmp
dec
push
mov
dec
aaa
in
xor
add
ss
jne
cltd
pop
test
int3
hlt
push
cmp
fnstcw
lods
pop
outsb
in
call
pop
pop
and
push
in
mov
sti
mov
stos
add
xchg
in
cld
sbb
xor
dec
data16
push
sub
inc
nop
jle
and
in
push
notl
int3
add
lock
cmpsl
cmp
jmp
scas
pop
mov
xlat
pop
mov
je
xor
test
aad
jge
inc
repnz
scas
xor
outsl
push
sbb
fwait
push
inc
mov
aas
xchg
out
lcall
adcb
cltd
pop
daa
sahf
cmpsb
rolb
jge
or
sbbl
cmc
jle
testl
xchg
shr
mov
int3
lds
hlt
call
pop
loope
push
adc
cmpsb
mov
mov
push
int3
popf
mov
xchg
jmp
dec
xor
pop
ret
jne
adc
push
addl
dec
mov
inc
pop
and
dec
and
pop
xlat
xchg
out
orl
popa
imul
sub
jge
repz
dec
sbb
inc
int
dec
and
sbb
dec
jle
sbb
sti
sbb
mov
rolb
jae
rclb
ss
out
outsb
jecxz
aam
push
jne
push
repz
ja
or
icebp
leave
xchg
adc
sbb
jo
mov
mov
stos
or
jnp
mov
cmpsl
jg
std
ja
pop
add
cmp
adc
mov
cltd
adc
pushf
or
hlt
mov
ja
mov
xor
gs
inc
jge
pop
xor
mov
sub
jge
inc
cmp
lcall
fsubr
in
dec
cmp
test
fnstenv
pushf
mov
ljmp
fnstcw
loop
mov
sar
inc
icebp
sub
hlt
xchg
stos
ret
sar
out
int3
fcomps
mov
push
loope
fmuls
movsl
lahf
mov
testl
stos
mov
cmc
mov
dec
mov
insb
sti
ret
jo
pop
mov
aad
rol
out
movsb
aam
add
adc
push
adc
xlat
xchg
sbb
inc
push
mov
mov
cmp
insl
aad
mov
pop
jbe
enter
and
or
pop
push
ljmp
add
in
or
xchg
push
das
add
jecxz
aad
mov
cmp
dec
sbb
fists
insl
jp
cmp
or
fistpll
xchg
inc
lret
icebp
jp
jp
xchg
jnp
mov
push
pop
or
in
pop
cltd
xor
mov
lock
rcll
adc
aaa
int
in
testb
dec
mov
imul
aas
addr16
inc
jge
and
inc
inc
push
test
divl
dec
stos
fmul
popf
icebp
adc
scas
xchg
add
xchg
lods
pusha
insb
mov
adc
lahf
sbb
push
call
dec
lock
jne
js
mov
xchg
ss
jae
mov
aas
sub
adc
add
lret
test
xchg
inc
cmp
dec
adc
pop
clc
inc
sbb
sub
or
std
mov
add
xchg
cmp
cmpsb
lods
ss
pop
mov
rcr
cmp
out
cmpsl
sub
int
or
adc
jbe
das
xchg
nop
in
push
imul
pusha
in
xor
cmp
mov
mov
dec
cwtl
nop
xchg
lods
fadds
fs
sub
cmp
mov
or
mov
jnp
mov
mov
fstl
mov
cmc
mov
mov
aad
fiadds
mov
popf
out
add
xlat
mov
sub
push
shll
mov
mov
xlat
addr16
jge
enter
or
dec
jmp
loopne
fsubl
gs
mov
push
push
xchg
mov
addl
fs
push
pushf
xor
test
jl
cmp
pop
cmp
lcall
aas
scas
je
fdivrl
dec
jl
shll
jae
mov
cld
cmc
outsl
cmc
jne
mov
jno
inc
fidivs
mov
call
inc
rolb
enter
pop
shrb
repz
lds
sub
das
sbb
xchg
mov
jp
mov
push
adc
pusha
shll
and
and
mov
rcr
fimull
inc
add
int
or
fdivrp
xchg
mov
in
data16
pop
mov
adc
sahf
sub
add
out
out
les
fs
xchg
jp
inc
inc
clc
ljmp
mov
adc
jno
jo
and
push
push
inc
in
adc
repz
adc
inc
push
loopne
mov
aas
arpl
call
cmp
inc
stos
imul
inc
xchg
jb
mov
push
adc
or
movsl
xchg
ffreep
push
add
mov
cli
pop
sub
sbb
and
imul
insb
movsb
and
lds
stos
sbb
ficoms
mov
sahf
jecxz
test
mov
incb
popf
pop
sub
mov
int3
jbe
or
icebp
dec
test
out
adc
lods
enter
daa
sbb
aam
lahf
sbb
xchg
push
inc
pusha
xchg
pushf
jg
loop
pop
scas
and
sbb
imul
xlat
mov
xchg
andl
gs
or
mov
and
mov
lcall
data16
insl
jmp
imul
mov
leave
inc
sub
sarb
out
jecxz
daa
xor
pop
cmp
icebp
mov
ds
insl
stos
or
sbb
or
ljmp
jmp
add
mov
test
sub
into
mov
gs
mov
lods
test
daa
test
or
mov
jmp
cmp
jp
push
sub
add
adc
dec
and
push
mov
stos
les
icebp
out
cli
or
cmp
inc
repnz
gs
xchg
pop
enter
cmpsb
jno
and
mov
sub
xor
call
aas
jne
aam
jmp
fsqrt
xchg
jl
nop
cmp
fldt
cmp
fnstenv
mov
mov
xchg
add
cmp
test
out
lret
scas
pushf
cmpsb
int
pushf
sbb
aas
mov
jmp
lret
daa
aas
push
cmp
data16
jb
xor
xor
sbb
jnp
cmp
popf
shlb
pop
es
loop
push
and
add
mov
jb
in
outsl
push
xor
rcrl
add
mov
xadd
fxch
ds
imul
mov
lret
les
mov
cli
out
loop
mov
inc
sub
add
push
jb
outsb
mov
push
std
push
xor
popa
mov
cmp
pop
lds
push
out
lods
adc
out
cld
cld
in
and
inc
xchg
inc
dec
dec
out
int
dec
ljmp
and
mov
imul
test
std
jns
mov
incb
lahf
xchg
sbb
dec
pop
xor
out
and
or
jns
fnstenv
pop
mov
stos
mov
movsl
cmp
push
sbb
orl
outsb
push
call
pop
ficoml
pop
mov
cmp
repz
fucomp
scas
addl
andnps
jno
ja
aad
inc
inc
fcmovu
es
fdivs
xchg
cwtl
hlt
sub
in
pusha
add
push
fsubrl
in
inc
mov
insb
cmp
pop
mov
add
rclb
mov
lds
mov
mov
ficomps
arpl
push
mov
scas
mov
sarl
mov
xor
repnz
push
push
nop
aad
popf
imul
mov
les
jb
lock
les
xor
mov
inc
dec
insl
pop
inc
test
xchg
sbb
xchg
cmp
and
daa
lock
mov
push
les
outsl
sbb
repz
cmp
push
repnz
jbe
popa
lret
mov
and
bound
ja
sbb
cmp
cltd
cld
aaa
push
mov
je
repnz
cs
adc
jo,pn
sub
mov
add
mov
cld
in
xor
mov
push
pop
loopne
ficoms
pop
add
out
and
xor
cmpsb
dec
adc
or
cmc
jecxz
lods
test
sbbb
cltd
pop
roll
mov
inc
push
mov
xor
adcl
aad
in
hlt
and
mov
xchg
cmpsl
loopne
xorl
lret
leave
popa
imul
add
sub
cld
mov
mov
imul
ret
mov
imul
and
sub
pop
add
dec
xchg
mov
mov
add
or
adc
imul
gs
push
es
into
rorb
insl
xor
sub
pop
lret
or
xor
mov
jo
xchg
and
in
dec
ja
ja
jp
fisubrl
gs
cltd
shl
mov
ret
sbbb
mov
in
sub
adc
adc
outsb
lret
sbb
mov
jo
insl
mov
and
push
xchg
imul
loope
repnz
xlat
pushf
inc
and
sub
sbb
mov
outsl
cmpsb
test
adc
pop
cmp
jmp
in
push
cld
imul
xor
pop
popf
arpl
mov
jecxz
mov
dec
mov
xchg
mulb
add
xchg
cmpsb
dec
mov
cmpsb
aad
cmp
inc
lret
pop
cld
mov
fiadds
pop
orl
sbbb
into
imull
in
ret
sbb
jmp
in
mov
sbb
in
mov
mov
cmp
std
stos
insb
cmc
mov
mov
cli
add
xchg
jno
mov
push
push
sbb
pop
xchg
mov
sbb
std
loopne
xchg
mov
xlat
xor
fbld
cmpsb
jmp
mov
sbb
or
rcrb
rorb
lods
shl
push
mov
xlat
cmpsl
pop
xor
enter
fisubl
xchg
sbb
pop
xchg
push
cmpsb
mov
movsb
jecxz
xor
cld
xchg
inc
in
ret
pop
loopne
call
in
fmull
es
jmp
subl
test
aam
outsb
rol
adc
pop
pop
mov
jne
daa
stos
jnp
pop
mov
das
lods
pop
fdivrl
push
mov
and
inc
in
lock
jl
outsl
sti
das
insl
ss
imul
pop
sbb
xor
dec
sub
rclb
sub
or
sub
mov
pop
add
lea
orb
sarb
in
mov
movsl
subb
mov
xor
rcll
pop
sub
jne
inc
sub
lahf
add
scas
mov
dec
adc
dec
mov
mov
mov
mov
dec
cltd
mov
inc
adc
jecxz
jo
dec
or
mov
xchg
or
cmp
xchg
inc
cmpsb
scas
pop
in
pusha
jge
cmp
push
pop
outsb
xchg
mov
std
sub
dec
mov
fisubl
ss
pushf
mov
adc
mov
mov
data16
adc
test
inc
adc
mov
dec
mov
test
pop
pavgw
addb
xor
lcall
sbb
mov
push
cmpsb
lahf
jae
xchg
ficoms
dec
insb
xchg
xchg
dec
or
mov
mov
lock
or
mov
enter
call
in
or
cmp
pusha
adc
add
cmp
add
sbb
jg
xor
mov
xchg
shr
idivl
aaa
sbb
sub
fwait
adc
pop
mov
inc
daa
inc
fmul
dec
cmc
std
pushf
rclb
iret
pushf
inc
arpl
fistl
incb
hlt
test
outsl
add
jmp
cmpsl
enter
add
mov
adc
cltd
pusha
adc
test
sub
outsb
leave
push
xchg
das
iret
lock
mov
dec
into
cmp
push
into
sti
mov
adc
mov
hlt
mov
test
insl
dec
cs
add
xchg
cwtl
xor
cltd
lcall
aam
loope
test
jne
push
pop
inc
adc
clc
nop
in
je
xchg
daa
xchg
addr16
cmp
sbb
pop
mov
int
cld
mov
fnstenv
stc
push
mov
cmpsb
xor
xchg
adc
loopne
push
jnp
lea
daa
sub
pop
push
inc
lret
fildl
ret
in
les
aad
xor
arpl
insl
adcl
mov
movsl
mov
and
pop
or
push
aam
loop
adc
mov
pop
ds
xchg
dec
cwtl
insb
dec
test
jl
mov
push
xchg
push
in
shlb
xchg
orb
or
addr16
js
cs
int3
je
xor
je
mov
or
inc
outsb
jb
aas
movsb
popa
cmp
or
jbe
test
jecxz
ss
xchg
rclb
js
sbb
cmp
ficomps
aaa
and
adc
jmp
mov
lds
or
lock
jnp
cltd
add
sbb
push
jo
xor
mov
push
popf
sahf
repz
push
jge
cmp
push
dec
jnp
daa
jmp
or
in
mov
into
fsubrs
negb
xor
ss
jle
inc
sub
pushf
add
mov
popa
les
test
push
movsl
pop
sub
sub
jp
ror
and
lret
jnp
xchg
mov
hlt
or
cmp
push
cwtl
rclb
dec
test
adc
ret
popf
sub
and
jb
or
or
xor
test
push
aaa
aas
add
rcll
insl
xchg
ljmp
xor
xchg
xchg
xor
lea
mov
ret
push
imul
in
loop
cmp
lods
adc
or
mov
and
add
out
push
shlb
shlb
mov
push
sbb
lock
cmp
cli
insl
and
xor
xor
add
mov
cld
mov
outsl
in
mov
ret
xchg
loopne
into
jp
cmp
lods
add
sub
or
aad
andb
add
jmp
pop
push
test
dec
repnz
jne
stc
test
jl
sub
iret
mov
cmc
imul
dec
pop
lods
aad
cmp
in
cmp
xor
pushf
sbbb
mov
mov
mov
inc
cmpl
inc
or
cmp
xchg
xlat
jns
adc
test
cs
and
lret
pop
pop
add
cmp
negb
js
jns
loop
lret
ja
add
pop
dec
pop
imul
sub
lods
jns
jns
sub
cmp
and
xor
mov
jns
nop
xor
mov
sbb
repnz
out
leave
and
xor
and
mov
pop
imul
add
repz
pop
jae
aas
inc
pop
cli
sahf
inc
addr16
in
fstps
xchg
mov
jg
lahf
adc
test
sbb
push
inc
mov
fnstsw
dec
and
jbe
xchg
jno
sbbb
rol
xor
je
cltd
pop
dec
dec
ljmp
xchg
xchg
cmp
mov
clc
push
mov
xchg
fwait
lcall
or
sbb
loop
aaa
leave
xchg
fdivr
push
jbe
pop
sbb
orl
lods
sub
nop
inc
mov
arpl
mov
cmp
stc
xchg
fwait
dec
push
lret
pop
repnz
scas
adc
mov
dec
cmc
xchg
out
rcll
es
ss
aaa
inc
in
pop
push
mov
stos
add
sti
pop
sbb
imul
iret
iret
movsb
sbb
sahf
rcrl
iret
mov
insl
repnz
scas
outsl
out
dec
mov
ljmp
mov
jb
pop
inc
inc
call
mov
std
mov
mov
mov
cli
mov
cmp
or
adc
inc
or
adc
fistpll
loop
jnp
adc
xorl
in
lahf
movsl
mov
jl
cmpsl
add
scas
movsl
in
add
sbb
clc
inc
pusha
push
mov
cli
or
cmp
and
lods
fstpl
jno
sub
xor
push
inc
shrb
mov
mov
inc
ss
aaa
lahf
add
sub
pop
test
rolb
mov
mov
pop
outsb
nop
adc
pop
mov
leave
les
out
jp
lods
xchg
add
push
jmp
mov
mov
test
push
xchg
ret
cmp
push
mov
mov
pop
pop
mov
dec
popa
das
std
mov
mov
test
sub
dec
stos
jp
mov
insl
mov
or
pusha
call
sbb
xchg
jp
fwait
add
mov
aaa
dec
pop
insb
sbb
cmpl
outsl
movsl
mov
sti
js
popf
mov
push
shrl
insb
mov
shll
ret
jnp
rcrb
int3
and
popf
fsubrl
jnp
movsb
sbb
test
ficoms
fildll
sti
das
mov
inc
mov
mov
inc
bound
mov
cwtl
push
dec
or
add
jl
push
adcl
cltd
scas
inc
push
xlat
hlt
psubusb
decb
clc
movsl
popf
adc
lods
push
or
lods
mov
sbbl
lret
int
cmp
mov
xlat
xchg
into
dec
sbbb
pushf
xchg
xchg
fldl2t
cmp
into
nop
push
shl
cmc
aam
leave
ljmp
pop
lret
xchg
aad
scas
sub
jecxz
xchg
outsl
cmpsb
xorb
mov
das
ja
inc
jg
push
mov
xchg
inc
push
xchg
lcall
pop
ja
xor
loop
add
inc
dec
fs
push
shrl
repnz
adc
popf
push
sub
and
pop
dec
repnz
in
inc
dec
roll
nop
or
addr16
mov
sbb
ret
inc
sub
dec
in
push
repz
jp
sti
inc
or
cmc
pusha
fs
pop
mov
sub
push
sub
mov
mov
into
mov
and
das
int3
mov
mov
jns
inc
nop
or
xlat
mov
and
cmp
sbb
xor
fnsave
pop
cmp
data16
das
lcall
and
ljmp
outsl
mov
cwtl
inc
sbb
int
xlat
push
xchg
mov
xor
and
xor
inc
jmp
pushf
xchg
fidivs
out
xchg
mov
cmpsl
icebp
adc
popa
lea
adc
xchg
fwait
out
xchg
inc
dec
pop
ds
cmpsb
aam
shlb
imul
mov
jnp
sbb
int
fisubl
dec
xchg
lods
ret
xchg
fisttpl
pushf
je
dec
sbb
pop
mov
sub
sti
jno
jmp
rolb
xchg
mov
in
hlt
pop
mov
in
cli
out
pop
jbe
addr16
inc
inc
int
call
cmpsl
sahf
add
cmp
out
cmp
bound
xchg
lods
add
add
xchg
movsb
hlt
pop
and
sub
lds
mov
ja
rorb
outsb
int
xchg
mov
jp
xchg
pushf
outsl
xorb
push
cltd
inc
insb
hlt
jb
or
test
mov
out
enter
dec
pop
cli
dec
lret
into
out
notl
push
xor
add
hlt
fisubl
adc
xchg
dec
adc
jb
or
sahf
leave
fsub
fisttpll
outsl
sahf
adc
mov
add
addl
jmp
sbb
fistpll
cmp
or
movl
movsl
dec
sub
jno
sti
sub
adc
aas
out
loope
mov
repz
cmp
hlt
sbb
push
pop
adc
orl
inc
outsb
mov
and
and
mov
mov
outsb
xor
dec
loop
mov
sti
mov
into
push
jo
loopne
outsl
pop
jl
leave
adc
mov
cmp
mov
adc
adc
imul
mov
xchg
sbbl
stc
jnp
mov
push
lret
gs
and
cmp
insb
sahf
fwait
stc
out
xor
xor
adc
inc
mov
dec
mov
dec
clc
outsl
mov
sub
or
fwait
jmp
inc
mov
xchg
in
ret
ret
scas
xchg
dec
shlb
mov
push
add
sub
stc
andl
into
test
xchg
stos
cs
pop
jo
push
insl
nop
data16
dec
mov
insb
int
out
jecxz
es
mov
cmpsl
push
mov
lock
mov
out
aam
int3
rcrl
inc
dec
mov
inc
mov
inc
mul
pop
push
divl
outsl
cmp
add
imul
cmp
xor
jmp
mov
imul
pop
shll
add
dec
mov
jnp
inc
pop
aaa
jmp
popf
outsl
rol
and
pop
dec
push
and
sub
or
inc
xchg
adc
je
dec
sub
sbb
mov
outsl
mov
cmpb
shll
je
test
ret
xchg
inc
test
fcoml
les
xor
jg
mov
xchg
sub
mov
pushf
inc
fdiv
mov
pmullw
mov
mov
cmpsl
sub
adc
pop
push
inc
add
push
sub
pop
and
arpl
mov
lcall
dec
loope
inc
dec
pop
in
enter
pop
clc
and
mov
out
mov
xor
inc
iret
repnz
loope
shlb
ret
ret
cmc
mov
mov
es
fsts
inc
xor
xor
jns
lret
inc
xchg
adc
xchg
sbb
lahf
cmp
aaa
movsb
scas
dec
lret
aad
popa
xor
push
xchg
cmpsb
cwtl
lds
inc
jne
pop
aad
and
jo
or
sub
xor
frstor
sub
sbb
data16
insb
cmp
push
pop
das
mov
out
fstp
mov
push
in
sbb
add
mov
lock
test
roll
adc
xor
xor
and
push
scas
or
insb
jnp
pop
fcmovnu
lock
dec
mov
fsub
add
add
std
sbb
popl
pop
es
ror
inc
sbb
adc
repz
mov
or
pop
arpl
fmuls
test
mov
lret
int3
mov
push
and
cmpsl
mov
adc
jecxz
mov
scas
in
leave
adc
in
inc
push
ret
je
fwait
scas
push
sub
sbb
pop
fisubl
adc
push
mov
cmp
adc
insb
jnp
loop
stos
dec
dec
loope
ret
or
pop
bound
fnsave
mov
sbb
cmp
cltd
dec
jno
pusha
ds
leave
cmp
popf
jmp
push
gs
aas
fdivl
pushf
pop
aam
xchg
lock
fdivr
jbe
mov
pop
cmp
cmp
test
and
leave
inc
jl
cmp
hlt
inc
push
mov
bound
lcall
lock
leave
aas
test
orl
jecxz
and
jge
jle
pop
lret
jo
xchg
fsubs
lret
dec
and
outsl
push
sub
idivl
lea
xlat
xchg
lcall
mov
roll
clc
jne
ja
fmull
imul
sti
insb
inc
xor
xchg
push
and
or
push
cli
dec
sbb
iret
dec
repnz
fdivrl
inc
jg
pop
int
mov
push
xchg
and
adc
mov
xchg
sbb
nop
aad
add
lcall
mov
push
fscale
pop
mov
call
in
data16
loopne
push
cmpb
in
cmp
cmp
shll
int3
sahf
out
ja
mov
xor
stc
and
sbb
sbb
cld
aad
or
sbb
movsb
dec
les
sbb
xor
cmp
adc
mov
adc
jg
aad
ds
sti
dec
push
stc
sbb
fwait
cmp
dec
outsb
icebp
movsl
ret
and
sbb
add
hlt
int3
loopne
xor
dec
sbb
ss
mov
cmp
or
stos
xchg
mov
imul
es
mov
sub
sbbl
xorw
mov
xor
je
je
pop
ljmp
mov
mov
and
pop
or
xor
pop
push
xor
in
mov
out
jns
lock
xor
dec
mov
dec
xchg
scas
mov
sti
mov
add
gs
sub
cwtl
sbb
jae
xor
cmp
movsl
fadds
lods
add
js
dec
jne
jmp
jnp
sbb
daa
or
cwtl
mov
adc
mov
push
std
mov
mov
lret
sbb
pop
fisubl
ficompl
rorb
scas
pop
into
pop
lea
fnstsw
push
jb
ret
in
pop
lods
pusha
xchg
cli
xchg
in
jo
fldl
adc
mov
fnstcw
mov
mov
and
push
es
push
xor
and
jne
lods
mov
cld
pop
xchg
scas
repz
cmp
xchg
xchg
repnz
popf
mov
dec
movsl
dec
addr16
stos
ret
dec
ret
into
push
pop
xor
inc
inc
sub
sbb
shll
adc
sbb
pushl
xor
lahf
fcoml
mov
lods
cmc
ljmp
pop
adc
cmp
shrb
jecxz
fistps
out
and
out
cwtl
lcall
mov
pop
sbb
dec
out
shlb
add
sbb
int3
adc
test
and
out
xchg
or
push
xchg
mov
cmp
xchg
pop
sahf
add
push
dec
jg
test
adc
xor
push
mov
pop
push
in
pop
push
icebp
push
sahf
mov
imul
fidivs
xchg
clc
mov
pop
xor
xchg
jg
je
imul
movsb
sub
pushf
test
mov
inc
ret
sti
xchg
loope
cmp
dec
lret
mov
adc
inc
adc
test
pop
gs
inc
mov
dec
mov
push
sbb
mov
sti
push
dec
jp
and
loop
inc
mov
movsb
inc
fwait
xchg
or
push
sub
jns
jns
test
ret
jno
adc
imul
leave
pushf
push
add
xchg
dec
in
mov
cmp
repnz
lahf
popa
popf
mov
fmull
sub
mov
aad
or
pop
mov
int3
mov
xor
mov
push
mov
repnz
lods
push
xor
cli
and
in
or
andl
push
insl
jno
push
bound
jae
add
ljmp
mov
push
sub
lea
mov
and
inc
addb
mov
cld
arpl
bound
xor
pop
dec
mov
cmpsb
ja
sub
stos
xchg
cld
mov
sbb
adc
cmp
call
xchg
sbb
cmp
js
add
hlt
mov
ficomps
xchg
xchg
adc
jle
pop
outsb
or
push
aam
faddl
jl
movsb
xchg
lahf
inc
pop
add
cld
jl
in
imul
insl
add
dec
cmpsl
mov
lahf
xor
cwtl
in
popf
in
flds
test
sti
jle
pop
cld
jl
dec
rcrl
inc
sbb
and
out
cmp
js
call
subb
add
popf
and
mov
xchg
adc
fwait
mov
lcall
and
pop
outsl
mov
push
pusha
or
out
imul
xchg
mov
mov
cld
mov
dec
add
bnd
sub
sub
pop
stos
test
xor
lcall
adc
vpaddusw
scas
jge
inc
jmp
pop
xchg
testl
jle
ret
setp
inc
pushf
add
pusha
or
jns
mov
insb
push
cmp
mov
xor
pusha
adc
ret
or
inc
stos
or
push
je
xor
mov
fiadds
and
js
pop
cmpsb
sub
shlb
outsb
inc
sbb
cld
in
aad
add
xchg
xchg
call
adc
ret
mov
leave
inc
lahf
jecxz
cwtl
movsl
je
fdivrs
or
mov
or
in
mov
hlt
sbb
sahf
fidivrs
test
cs
lret
xchg
mov
in
insb
pop
out
push
fildll
dec
xchg
adc
bound
mov
call
fbld
ret
xor
enter
add
push
sbbb
adc
fisubl
jb
inc
mov
mov
imul
mov
mov
leave
ds
mov
mov
gs
shlb
ja
aas
mov
push
outsl
cwtl
std
dec
addr16
lcall
pop
es
adc
push
fdivrs
stos
test
ds
sti
or
int
repnz
sbb
add
push
test
out
aaa
test
lds
dec
mov
ja
cmpsl
sahf
dec
push
int3
xchg
jo
ss
negl
imul
sarl
jle
or
sbb
inc
nop
fwait
cmp
xchg
jns
or
push
aaa
pushf
into
ret
mov
inc
out
inc
jae
iret
fistps
pop
scas
adc
sub
mov
and
cmpsl
dec
or
scas
xchg
push
call
test
arpl
loop
adc
adc
sub
pop
addr16
stos
xchg
std
dec
das
rorl
orl
and
add
insl
orb
sbb
fbld
leave
iret
clc
dec
or
mov
test
mov
dec
pop
xor
mov
jl
stos
in
xchg
adc
fwait
lds
dec
cld
mov
xchg
out
cli
aas
test
xchg
imul
addl
dec
dec
push
jge
je
jl
inc
in
jge
pusha
pop
sti
adc
xchg
fdivrs
test
push
nop
sti
es
fcompl
repnz
nop
push
arpl
dec
mov
je
shl
loopne
mov
icebp
sub
lahf
jle
js
cld
into
inc
js
ss
sbb
and
scas
push
fwait
movsb
out
pop
cmpsl
or
xor
cltd
xchg
test
mov
push
inc
sbb
mov
shrb
scas
lret
dec
adc
cmp
xchg
testb
fs
aaa
xchg
xchg
fwait
inc
cmp
fidivl
cmp
inc
mov
jbe
jg
mov
mov
ljmp
lret
mov
xchg
sub
loop
inc
push
out
pop
imul
sub
es
lods
divl
jmp
mov
sbb
push
push
xchg
dec
data16
lcall
fs
xor
cmp
insl
call
jmp
aaa
movaps
or
iret
mov
cmp
inc
pop
push
mov
dec
pop
mov
sbb
or
popa
xchg
std
ljmp
movsl
cltd
test
mov
or
outsl
cwtl
dec
jbe
insb
push
pop
and
jb
xor
aas
data16
pop
sbb
adc
add
mov
dec
mov
addr16
xchg
or
out
repz
mov
xchg
sti
mov
pop
outsl
mov
in
xchg
mov
repnz
loopne
out
fcmovbe
in
movsb
mov
ss
pop
cwtl
cli
mov
sti
mov
or
dec
test
punpckldq
insl
adc
addr16
lea
popa
jns
adc
mov
fisubrs
sub
loopne
push
and
addr16
pop
sbb
mov
pusha
sbb
sbb
inc
cld
or
sbb
mov
rcl
pop
jae
cmc
jae
jb
sub
push
mov
push
es
sbb
pop
jg
add
cmc
mov
mov
push
clc
push
lea
ds
mov
jecxz
fcomps
xor
lods
mov
addr16
cmp
insb
inc
pop
mov
xorl
adc
push
or
inc
cmp
lods
lock
addr16
mov
add
addr16
insl
or
stc
push
add
ja
mov
ret
mov
bound
jge
or
loope
xchg
inc
jmp
add
fnstcw
int3
and
push
imul
fsts
out
scas
adc
xchg
sbb
add
lret
mov
mov
pop
stos
dec
push
and
cmp
inc
in
iret
sbb
mov
jbe
or
xchg
inc
jo
xchg
dec
and
rcrb
enter
jne
popa
test
inc
lret
aad
stc
out
scas
xlat
les
ds
sbb
loope
push
add
inc
xchg
jp
adcl
dec
push
mov
mov
aam
pop
and
les
push
cmp
rclb
js
push
xor
imul
and
dec
add
ret
xchg
inc
roll
clc
loopne
mov
jmp
xorb
or
xchg
dec
jecxz
shlb
ljmp
fmuls
rcll
or
gs
clc
jnp
mov
imul
lret
dec
jge
icebp
mov
aas
call
imul
sbb
stos
daa
mov
fs
aam
jb
repz
push
jg
pop
cmp
iret
xor
popf
cs
mov
xor
xor
push
pop
mov
outsl
and
pop
push
iret
aaa
xchg
push
fidivrs
or
lock
adc
test
xchg
pop
inc
in
ja
xor
xor
cmp
jo
lods
mov
cmp
or
push
or
aad
cmp
or
loop
jo
test
or
xor
in
xchg
xchg
pop
mov
mov
mov
insb
add
stos
inc
dec
cmc
push
mov
imulb
sbb
sbb
mov
hlt
out
and
into
add
cmp
pop
sub
dec
mov
or
bound
push
mov
inc
mov
push
std
or
sbb
lods
outsb
or
aas
scas
add
xchg
push
fdivrs
push
xor
in
jg
mov
mov
mov
cli
push
lret
cmp
inc
test
popa
xor
pop
adc
pop
popf
jp
cld
outsl
xchg
xchg
shrb
mov
stc
push
mov
out
xchg
ret
mov
lock
gs
lret
xor
mov
push
test
ja
inc
xor
dec
lret
inc
jns
sbb
outsl
or
rorl
jmp
pop
mov
dec
cmp
out
and
scas
fdivr
pusha
and
or
push
push
xchg
xorl
ljmp
sub
mov
addr16
inc
pop
cmpsl
pop
enter
into
xor
or
mov
mov
mov
inc
jae
sarb
or
sbb
sbb
imul
fstpl
fistpl
gs
aam
sub
inc
sub
add
pop
pop
mov
jmp
es
dec
call
lahf
sahf
mov
adc
adc
dec
out
sub
fldt
xor
adc
inc
fisubl
sub
xchg
pop
lahf
adc
ja
and
inc
shl
ret
fisubl
test
arpl
ljmp
mov
mov
out
mov
dec
cmpl
jo
inc
inc
sub
shl
test
add
loope
inc
sub
lret
push
outsb
shrb
aam
xchg
sbb
imul
xchg
mov
in
je
pop
mov
int
push
imul
xor
adc
jo
loope
ret
sub
and
fisubrs
jb
sub
dec
jno
leave
frstpm(287
mov
iret
jb
xchg
cmp
mov
fwait
or
mov
icebp
rclb
aad
mov
cwtl
or
repnz
sbb
mov
adc
inc
or
xchg
or
pop
dec
ret
addr16
test
mov
aad
addl
cmp
aam
xchg
lods
test
mull
inc
std
pop
addr16
adc
imul
and
mov
pop
loop
cmp
dec
lret
loopne
sbb
loopne
inc
stos
cmp
jnp
mov
dec
movsb
mov
dec
cmp
imul
call
mov
rorl
add
not
push
pop
xchg
dec
orl
adc
mov
pushl
and
jo
shr
mov
or
mov
sti
xor
out
in
imul
sub
shlb
loopne
dec
nop
call
add
pop
fisubrl
push
xchg
out
std
pushf
cmp
push
iret
popf
inc
xchg
push
imul
out
cwtl
cld
mov
shlb
sbb
fldcw
push
ljmp
pop
xchg
dec
decb
outsb
adc
stos
xchg
jl
jbe
jo
xlat
iret
mov
mov
es
js
adc
xchg
mov
xchg
shr
and
push
ja
jg
pop
mov
mov
and
iret
nop
cwtl
mov
repz
aad
loope
pusha
nop
jp
jl
out
fmul
mov
adc
xlat
dec
inc
sub
cmpsb
pand
jo
jnp
inc
pop
sbb
loopne
sbb
or
xchg
jle
decl
push
scas
pop
lds
add
adc
adc
call
sbb
cmp
pop
lret
jns
addb
mov
rol
aad
push
les
dec
arpl
mov
push
xchg
addl
aad
sub
ret
addr16
test
dec
push
ljmp
jb
add
inc
shl
mov
pop
xchg
xchg
mov
mov
jnp
addr16
mov
out
add
insb
mov
test
mov
mov
int
mov
add
push
sub
xchg
push
gs
and
iret
inc
cmp
cli
lahf
gs
adc
bound
cmpl
cli
dec
jmp
int
sbb
or
mov
stos
xor
cltd
mov
das
xchg
loopne
xchg
inc
in
cmp
pop
call
sti
aad
xchg
mov
and
and
or
xchg
decl
adc
movsl
ret
xchg
ret
xor
sub
jno
pop
wrmsr
cli
mov
into
inc
and
mov
out
mov
inc
and
pop
add
xchg
mov
daa
out
int3
xor
mov
add
cwtl
sbb
jg
mov
cmp
or
gs
or
sar
nop
mov
xchg
sbb
loop
mov
test
inc
mov
repz
loope
sub
xchg
push
mov
jmp
jo
push
lret
lods
popf
or
inc
pop
test
inc
and
ja
sbb
sbb
adcl
out
dec
lods
cwtl
sti
mov
icebp
nop
fimuls
lret
fucomip
cmp
mov
fbld
inc
or
add
aam
loop
push
jp
sub
mov
xor
test
out
cmp
sbbl
pop
add
jne
imul
fwait
pop
pop
rcr
cmp
ss
daa
lods
mov
mov
sub
lcall
imul
cli
add
or
mov
popa
out
les
sarb
or
test
jmp
push
cmpsl
pop
call
and
push
dec
lock
push
or
inc
jle
mov
fidivrl
bextr
icebp
aad
adc
fwait
nop
mov
cmpsl
mov
cs
sub
out
jge
ljmp
and
pop
daa
or
or
rcll
test
in
adc
in
xchg
les
pop
mov
imull
mov
ja
jmp
fnstcw
mov
pop
inc
fistpl
imul
dec
stos
enter
cmc
les
rolb
ja
std
nop
pop
in
scas
cmp
rcrl
mov
outsl
lods
movsl
cmp
push
sar
int
test
ljmp
xchg
movsb
lods
ret
leave
loope
sub
dec
mov
fisubs
decb
jns
inc
adc
cmp
xor
and
nop
inc
insl
jmp
insb
sbbb
mov
xchg
bound
sbb
cld
sub
push
pop
jb
dec
sarb
lret
dec
push
push
xor
adc
jg
mov
mov
and
xchg
mov
inc
xor
lret
mov
sahf
push
adc
inc
add
and
inc
push
mov
lds
inc
rorb
sbb
mov
leave
movsb
mov
insl
or
inc
dec
push
cmp
xlat
sbb
xor
lock
clc
or
pop
inc
test
pop
cltd
lret
in
lahf
loop
add
fsubrs
das
inc
stc
add
ja
dec
lods
test
int3
insb
or
sub
cmc
mov
test
repz
push
mov
pop
imul
cmp
cmp
fiadds
or
cmp
cld
sbb
clc
mov
sub
mov
sub
mov
or
test
lret
jmp
lahf
test
lret
fsubrl
inc
in
mov
xchg
xchg
fisubrs
jge
bound
aam
inc
cmc
enter
stc
xor
jnp
outsl
data16
lcall
pushf
mov
jo
mov
jnp
and
fsts
lods
xor
lret
aam
xor
mov
jp
out
movsl
dec
lds
push
fsubl
loope
sbb
inc
int3
xor
fwait
bound
pushf
dec
and
inc
out
adc
sub
xchg
add
sahf
sub
int3
rolb
ljmp
sbb
push
mov
inc
mov
inc
sahf
push
cmp
push
mov
cli
lea
les
leave
std
repnz
sub
jns
pop
inc
std
and
jecxz
mov
jbe
pop
notb
jns
mov
out
pop
movl
push
call
rorl
cmp
popfw
shll
push
dec
and
add
mov
xchg
mov
lret
cmp
push
lock
mov
push
mov
stos
mov
les
lret
fbld
daa
imul
pushf
adc
xchg
mov
pusha
movsb
push
outsb
imul
add
aaa
orl
xchg
addb
lcall
dec
dec
pop
cmpsb
in
stc
loopne
divb
jl
addr16
push
add
mulb
mov
je
pop
pop
fnsave
daa
std
add
adc
push
lock
cmpsl
jle
call
and
push
pop
inc
inc
sbb
sub
popa
outsl
push
inc
mov
mov
adc
rep
lods
push
push
iret
daa
testl
cmp
out
scas
sbb
push
lcall
pushf
or
in
lret
push
ficoml
add
shr
adc
mov
movsb
fadds
jb
push
sub
dec
iret
stc
hlt
adc
rclb
xor
mov
and
dec
stos
insb
and
sub
js
shlb
jmp
stos
cmp
and
mov
jl
xchg
ljmp
xchg
sbb
out
dec
dec
push
loop
into
popl
aaa
mov
sar
fwait
cmp
out
add
adc
pop
mov
mov
ljmp
into
fildll
xor
in
inc
inc
movsb
xchg
cmp
jne
faddl
pusha
xchg
mov
cmp
xor
call
xor
jle
fmulp
cwtl
inc
push
pop
adc
jne
clc
js
cltd
mov
lret
shrl
xor
or
sbb
imul
sub
adc
push
pop
sub
cmc
push
add
inc
or
xchg
pop
test
sbb
lahf
in
cli
test
jg
inc
add
inc
out
ljmp
or
lret
sbb
pop
jae
in
mov
lods
mov
inc
pop
call
andl
jnp
scas
flds
mov
xchg
mov
mov
mov
das
cwtl
repnz
pop
leave
cmpsb
nop
outsl
inc
sbb
mov
push
mov
stos
mov
fiaddl
dec
push
mov
inc
dec
push
lret
shl
xor
test
jecxz
adc
fdivs
js
or
pop
push
movb
add
xlat
sbb
cmp
or
movsb
aas
call
adcl
pop
mov
adc
fldcw
mov
dec
adc
daa
add
pop
xor
jg
fwait
inc
lret
jl
test
pop
or
int3
fs
ja
sbb
dec
push
repz
or
pop
sub
push
rolb
pushf
rorb
repnz
fcoms
lret
test
pop
iret
pop
pop
loope
in
stc
push
mov
arpl
push
adcl
clc
insb
movsb
lcall
cltd
arpl
insl
stos
pop
or
iret
fidivs
shlb
mov
mov
iret
jns
daa
sbb
sbb
stos
sub
push
push
xlat
mov
jmp
lock
sub
sbb
sbb
mov
dec
inc
loop
arpl
inc
jg
cltd
mov
inc
cmp
js
stos
push
adc
lahf
xor
mov
ds
fistpll
push
xor
sbb
in
pop
fwait
pop
in
or
scas
xchg
or
mov
lret
push
aas
jae
aad
or
or
jmp
add
adc
mov
int
mov
dec
aaa
and
mov
push
push
cmp
fldz
stc
sub
xor
jbe
push
pop
mov
cmpsl
cmp
rolb
lret
jle
ljmp
push
test
clc
mov
mov
shl
xchg
aas
cmp
incl
cld
ss
ss
addr16
out
jns
popf
xchg
pushf
das
fldt
mov
cmc
xchg
cld
cwtl
pop
cmpsl
rclb
sbb
sti
and
aaa
xchg
fs
bound
adc
xchg
add
jge
fistpll
test
and
repnz
cmp
inc
rclb
stc
xchg
out
mov
mov
bound
adc
pop
std
or
mov
or
cmpsb
test
dec
push
push
dec
or
sti
push
dec
ss
sbb
mov
arpl
shrl
and
dec
fidivrl
lds
call
push
roll
cmpsb
and
sahf
fsubl
sub
pop
adc
xor
sub
push
cltd
pop
mov
inc
ficoms
gs
cmpsb
sub
fcmovb
iret
sub
dec
push
lahf
sub
push
dec
pop
lock
mov
mov
adc
daa
and
fdivrl
adc
cltd
xchg
xchg
push
adc
fisttpl
mov
mov
adc
pop
fwait
jl
cmp
sahf
mov
pop
sbb
daa
int
xchg
adc
popf
clc
insl
loop
fwait
jo
cltd
movsl
dec
cmp
xor
jae
daa
aad
lds
aas
daa
jae
jne
ljmp
add
movsb
ja
lds
mov
mov
lds
mov
cmp
scas
aas
adc
xchg
jle
xchg
ret
aad
or
mov
sbb
dec
pop
test
addl
dec
sahf
mov
stc
enter
push
lds
xor
push
loope
sub
shrl
daa
adcl
push
out
xchg
or
pop
in
add
or
xchg
sbb
and
mov
xchg
or
xchg
push
inc
testl
push
xchg
std
mov
adc
stos
in
mov
mov
iret
icebp
rclb
jo
xor
inc
xchg
and
and
int
jns
jae
inc
out
fsubr
cmp
sub
xchg
dec
and
push
std
out
cltd
in
and
int
clc
outsl
mov
in
fmull
lds
roll
and
mov
ret
out
addr16
dec
es
sar
mov
jmp
clc
flds
call
cwtl
and
sub
nop
pop
xor
jns
jnp
movl
iret
aam
sbb
jcxz
sub
mov
mov
dec
jb
fisubs
dec
fwait
adc
mov
fs
fisttpl
mov
push
mov
sub
dec
or
ds
test
ljmp
lea
ljmp
je
inc
add
pop
sbb
rcr
out
sub
push
int
sbb
lcall
or
je
xor
adc
xchg
movsb
fistpl
and
lret
stos
jl
sub
and
dec
add
xchg
cmp
xor
ret
loopne
inc
mov
cwtl
jmp
rclb
mov
stos
cmpsb
mov
mov
pop
ret
pop
sub
mov
xchg
jns
lret
cli
jnp
rcll
jecxz
sub
pop
and
daa
pop
mov
sub
loop
jnp
cmp
cmp
sub
movsl
scas
int3
mov
mov
negb
pcmpeqb
jae
mov
and
js
scas
lds
sub
mov
cmp
sbb
mov
test
adc
movsb
outsb
sbb
je
jle
jne
or
stos
ds
ror
sbb
push
sbb
shl
in
shll
dec
fdivl
sbb
dec
jne
xor
ds
push
cmpsb
push
mov
xlat
cmc
loop
sbb
adc
cmpl
cmp
mov
test
sub
xor
mov
movsb
xlat
push
cmpsl
or
pop
dec
nop
les
imul
fimull
mov
dec
into
into
adc
sahf
sbbb
xchg
cltd
jb
and
mov
loop
mov
mov
dec
jnp
pop
test
xchg
sbb
dec
lea
xor
add
fcmovu
repz
ret
je
mov
shll
subl
lcall
xor
pop
arpl
pusha
xchg
xchg
testl
add
shlb
sarb
adc
or
rep
rclb
sub
cmp
call
jb
and
outsl
popa
aas
aaa
pop
out
cmp
mov
mov
or
adc
dec
enter
fsqrt
aad
loopne
leave
clc
push
fsub
into
cld
sub
mov
ljmp
in
dec
inc
popf
inc
lret
add
mov
fcmove
dec
mov
mov
lret
dec
notl
xchg
xchg
jmp
repz
shlb
cmp
push
mov
cmc
dec
into
gs
cs
push
bound
and
mov
push
mov
cwtl
out
lods
gs
cmp
push
in
xchg
push
xor
roll
and
add
and
je
dec
inc
and
mov
and
lods
push
push
rolb
mov
sbb
or
cmp
cmp
mov
xchg
cltd
mov
mov
adc
pop
sbb
hlt
rolb
mov
loopne
mov
xor
popa
cmpsb
sarl
lcall
repnz
cltd
adc
stos
ja
xchg
lods
testb
cld
pop
mov
imul
pop
cmp
in
jne
enter
adc
xchg
fdiv
popf
daa
adc
xor
aad
pop
mov
cli
sub
shrb
push
sub
sarl
pop
jp
inc
std
ljmp
pop
bound
xor
ja
jb
into
jno
cld
mov
add
xchg
dec
xor
gs
pop
fcmovnb
mov
sbb
mov
push
js
mov
sbb
mov
dec
shll
jns
xor
ljmp
test
pop
push
in
jns
stos
loopne
loop
into
aas
gs
sti
push
push
aaa
xor
data16
lret
dec
fcmove
xchg
adc
in
push
jl
dec
pop
mul
popf
incb
mov
mov
xlat
cltd
jge
mov
adc
push
mov
mov
push
aas
clc
sti
cmpb
or
fisubs
imul
add
xor
outsb
xor
mov
mov
jge
test
sbb
mov
jmp
addr16
movsl
or
push
js
call
xchg
xchg
xor
jmp
xor
jecxz
ret
cltd
les
or
pop
jns
hlt
push
std
cltd
icebp
inc
movsb
pop
insb
cmp
fdivrs
jle
js
mov
mov
fstps
and
pushf
cmp
sub
push
xor
push
shl
cmpsb
call
xchg
adc
dec
cmpb
jge
or
fcmovbe
ret
push
dec
push
mov
nop
cmp
fidivrl
cmp
sahf
ret
pop
push
xor
in
xchg
mov
mov
jb
stc
push
lahf
xchg
lods
cwtl
lods
loope
pop
stos
dec
dec
and
je
pop
scas
arpl
cs
or
pop
pop
data16
cmp
ret
loopne
mov
adc
cmc
xchg
inc
loope
repz
pop
jmp
inc
pop
leave
out
add
lock
and
scas
xchg
ljmp
jo
js
lret
mov
sub
jno
jae
jmp
push
push
xchg
stos
insb
mov
addr16
insb
pop
mov
arpl
cmp
jge
sbb
mov
or
inc
jae
fs
adcb
inc
fists
xchg
daa
pop
nop
pop
arpl
or
jle
dec
cmp
mov
leave
rorb
loop
mov
ljmp
xor
inc
aad
push
ja
fcoml
ja
push
inc
or
adc
xor
pop
or
cmc
cwtl
push
push
sbb
test
popf
imul
push
mov
icebp
and
sti
push
dec
movsb
mov
jmp
xchg
enter
and
jns
ljmpw
lret
outsb
xchg
ja
cmpsb
jno
rcrb
lcall
test
xor
repnz
aas
and
bswap
push
inc
into
sbb
dec
dec
pushf
dec
jmp
pop
add
or
imul
jle
dec
ljmp
pop
mov
test
test
flds
ret
das
nop
int3
out
bound
mov
mov
sub
das
pop
daa
popa
inc
mov
in
loope
mov
shlb
or
addr16
jle
xorb
xchg
or
outsl
int3
inc
ret
icebp
je
mov
inc
jo
fmull
push
add
inc
xchg
mov
jge
add
cmp
adc
push
sarl
out
xchg
dec
push
mov
repz
je
xor
addb
jecxz
xchg
mov
les
shll
pushf
imul
pop
jne
int
cmp
imul
push
xor
aas
inc
xchg
mov
leave
dec
adc
mov
add
das
jno
js
jecxz
push
ficomps
rcrb
dec
push
iret
dec
jecxz
ret
jne
movsl
je
sahf
js
pop
sbb
inc
cld
inc
jge
sahf
lds
cld
and
cmp
ret
and
mov
pop
das
jmp
mov
or
shrl
popf
mov
neg
ljmp
sbb
nop
jl
addr16
sub
and
jp
xchg
cmc
fdivr
sub
sub
mov
push
mov
faddl
arpl
sarb
or
or
into
pop
adcb
leave
push
loope
inc
xchg
inc
xchg
sbb
dec
xchg
inc
popa
les
dec
pop
andl
hlt
rorb
adc
mov
test
lods
xchg
jmp
popf
xor
es
add
jb
das
and
arpl
arpl
lret
cwtl
adc
ss
mov
cltd
sbb
ljmp
adc
test
jno
jp
pop
incb
popf
add
test
pop
in
mov
xor
in
add
sarl
jl
ret
add
or
andb
xchg
dec
repnz
adc
jle
out
lcall
sub
cmp
cli
sti
inc
out
fnstsw
and
add
in
xchg
hlt
sti
scas
mov
xchg
pop
and
lds
js
dec
movsb
xor
xchg
cli
mov
pop
push
adc
lock
popf
test
jecxz
push
mov
adc
add
add
addr16
je
int
jle
and
stos
ret
fdivl
pusha
fwait
in
lret
mov
xchg
sbb
push
into
lds
or
std
stos
mov
inc
mov
ror
add
xchg
dec
arpl
pusha
xor
mov
pop
ljmp
scas
xchg
sbb
or
sbb
fnstsw
cli
adcb
sub
jp
cmpsl
dec
lods
adc
sub
ds
shll
ficompl
xchg
fs
int
sub
mov
daa
and
dec
pushf
test
adc
sbb
dec
std
outsl
push
lea
movsb
mov
mov
arpl
pushf
pop
sub
popl
js
jl
fsubrs
dec
cmp
jo
lods
fcoml
in
inc
mov
push
out
je
in
push
cmpsl
mov
pop
stos
int
inc
adc
pushf
mov
xchg
icebp
adc
push
inc
ljmp
add
mov
jmp
bsf
push
ds
cmpsl
cmp
jb
ljmp
int
sahf
outsb
scas
inc
mov
mov
sub
enter
popf
or
jecxz
adc
sbb
das
push
inc
mov
dec
adc
out
lret
xchg
adc
shll
or
mov
jne
sbb
inc
cmpb
punpckhbw
xchg
jge
jge
adc
sbb
mov
test
leave
dec
gs
mov
popf
cwtl
ror
xchg
test
or
mov
pop
fmuls
stos
lahf
icebp
lods
adc
iret
stos
cmp
imul
jg
mov
xchg
fwait
and
push
fisubrs
hlt
inc
cmpsl
icebp
lret
xchg
cmp
xchg
loope
sbb
jmp
sub
push
mov
sbb
orb
fiadds
mov
flds
sbb
dec
imul
inc
aaa
jne
jge
nop
xor
add
insl
in
inc
jl
push
jae
xor
imul
xor
jp
xlat
inc
into
cmp
inc
fimuls
push
jle
into
mov
daa
nop
xor
dec
push
pop
adc
aad
mov
mov
add
inc
je
mov
mov
loop
roll
xlat
fwait
aas
mov
or
pusha
cmc
adc
add
cmpb
mov
lret
xchg
out
les
ljmp
js
les
ljmp
and
jae
cmp
std
or
ret
in
add
push
sub
scas
imul
shll
leave
daa
nop
cmp
nop
mov
xchg
fs
pop
jbe
shrl
cmp
cs
pop
mov
and
cmp
sbb
addr16
cmp
hlt
sub
fcoms
jp
pop
andl
dec
add
push
xchg
pushf
sub
sbb
and
jnp
mov
mov
and
mov
out
pop
inc
adc
call
lea
das
out
adc
sub
push
cs
sub
out
jg
mov
add
jb
push
or
cmc
nop
push
sub
inc
loope
push
jp
xchg
cwtl
mov
jg
sbb
and
mulb
into
jmp
shll
sub
shlb
jge
daa
aas
loope
pop
scas
pop
lods
jmp
clc
jae
add
sarb
lret
addr16
push
lds
lea
dec
leave
or
pop
add
or
stc
in
mov
dec
fcoml
adc
lret
push
add
jecxz
jl
xor
cwtl
mov
inc
scas
js
cld
fsubs
cmpsb
and
repz
mov
dec
aad
lret
inc
je
nop
mov
test
mov
add
arpl
aas
outsl
xor
lds
xor
call
shrb
lcall
mov
lods
popa
sbb
int
push
sbb
mov
icebp
fimuls
js
pop
andl
mov
dec
cli
int
mov
outsl
xchg
cwtl
or
cmpb
fmull
sub
fsubrl
mov
and
lock
fdiv
xor
add
sahf
arpl
mov
rolb
pop
add
xchg
sbb
cmp
jmp
sub
dec
and
cwtl
rcrl
mov
or
adc
jbe
mov
xlat
push
ljmp
icebp
cmp
fcomps
mov
pop
pop
arpl
jnp
dec
mov
dec
pushw
inc
fwait
test
and
int
or
lret
sub
sbb
push
cmp
cmp
icebp
mov
stos
subb
rolb
lods
imull
aam
xchg
shlb
addr16
hlt
in
ret
pushf
movsb
fldt
movsb
clc
inc
xor
pop
sahf
lds
xchg
mov
sub
pop
arpl
notb
lss
test
pop
xchg
sbb
xchg
ds
shl
pop
fdivp
scas
js
sbb
ss
inc
dec
repnz
adc
xor
jno
adc
das
xlat
in
add
dec
aaa
dec
xchg
loop
xor
popf
mov
and
pop
xor
lahf
call
loope
dec
lcall
jb
addr16
push
lods
xor
ss
xchg
fwait
shll
lock
add
jns
jb
mov
xor
pop
xor
fisubrl
pop
pop
jbe
movsb
and
xor
std
les
cmp
lods
stos
orb
inc
push
sub
push
adc
cmp
jns
gs
stos
rclb
arpl
push
adc
xor
jbe
push
pop
sub
ficoms
fs
mov
dec
cld
mov
or
adc
jae
mov
stos
xor
and
mov
ds
imul
sub
test
jnp
and
or
imul
insl
sbbl
and
fsubrs
sbb
push
cmpsl
push
xor
fwait
cmpl
lcall
addr16
or
mulb
dec
pop
dec
dec
adc
in
fwait
stos
lcall
inc
xlat
popf
mov
fucomp
nop
fcmovne
cmp
mov
cwtl
add
add
jg
pop
notl
adc
into
mov
inc
shll
inc
cli
jo
out
sbbb
dec
or
xor
aad
mov
int3
cmp
scas
mov
dec
in
mov
xchg
jns,pt
nop
callw
cltd
pop
inc
jecxz
xchg
jmp
fimuls
jp
jb
insl
rclb
cs
sbb
xorb
repnz
lcall
inc
or
lea
pop
cli
xchg
mov
rep
mov
ret
stos
xor
outsl
and
pop
outsb
adc
std
xchg
and
pop
ret
sub
push
shlb
lock
or
push
lcall
test
lea
pusha
xchg
inc
inc
jmp
stos
adc
jg
out
cld
adc
mov
ret
adc
cld
fs
push
outsb
lahf
mov
mov
orb
cld
push
xor
dec
subl
imul
mov
ljmp
mov
fistl
bound
mov
sub
sub
iret
sbb
jb,pt
jmp
cmp
shr
es
dec
push
mov
inc
sbb
adc
cmp
cmp
pop
jo
cmp
in
gs
xchg
pop
dec
sbb
cmp
stc
fisttps
mov
lods
aaa
loop
outsl
pop
pop
cmp
pop
xlat
mov
xlat
dec
pop
push
pop
sti
push
daa
inc
xor
add
push
jge
push
fsubl
mov
add
fldcw
fmull
mov
mov
gs
mov
stos
je
inc
je
fs
icebp
sbb
sbb
ret
int
xchg
rorb
push
pop
push
mov
add
xchg
js
sub
seto
dec
adc
clc
pop
push
xchg
loope
pop
and
lahf
loop
dec
test
sub
pop
ss
out
jne
stc
mov
mov
xchg
stc
pusha
and
jge
inc
daa
lock
notb
sbb
sub
jle
pop
jge
scas
xor
push
xchg
mov
pop
insb
and
lret
shr
dec
ljmp
sbb
cmp
idivb
jmp
test
je
push
lcall
fsts
insl
nop
mov
out
mov
xor
xor
push
insl
fwait
sbb
mov
stos
pop
or
cmp
popl
add
fwait
xchg
xchg
test
add
pop
mov
and
fcmovnbe
stos
pop
movsb
fwait
mov
xchg
inc
sahf
cmc
mov
inc
inc
in
sub
aaa
dec
inc
repnz
push
stos
ret
je
iret
pop
test
jns
repnz
aad
add
pop
imul
sbb
aam
ffree
pop
inc
ljmpw
mov
ret
push
pop
cwtl
int
in
xlat
xor
in
add
clc
loopne
mov
hlt
xor
cmp
jno
std
cmp
lds
stos
adc
pop
loop
cmp
jecxz
inc
int
sub
shlb
xchg
cwtl
add
add
data16
dec
cmp
clc
pop
jmp
loopne
adc
outsl
mov
xchg
mov
sub
xchg
imul
xchg
daa
stos
insb
rcl
js
gs
sbb
push
jl
loope
cltd
mov
mov
dec
pop
adc
cli
mov
out
into
jnp
xchg
mov
test
aaa
aas
roll
jae
push
pop
mov
xchg
cli
mov
lds
inc
testb
jo
xchg
push
cmp
xor
mov
cmpsb
lret
lret
shl
or
or
and
mov
add
push
xchg
lock
push
loopne
aas
pop
insb
dec
repnz
lcall
push
fisubrl
pop
adcb
scas
jnp
es
data16
mov
rclb
mov
mov
stos
mov
repz
fdivrl
push
inc
mul
push
jbe
enter
xor
push
jnp
and
inc
jp
add
pop
mov
adc
inc
scas
jns
fisttpl
bound
fsubrs
ret
mov
and
dec
movsb
adc
aaa
mov
jmp
movsl
fmulp
jg
rclb
mov
push
test
call
xor
xor
mov
push
adc
sbb
out
mov
ljmp
xchg
sbb
movsb
push
sbb
sub
or
jp
iret
outsl
mov
sbb
dec
inc
les
add
rol
and
rol
xchg
loope
in
ffree
mov
push
pop
xor
lods
jno
add
jmp
popf
sahf
inc
pop
jne
pop
inc
scas
das
add
push
jo
adc
aas
ficoml
out
les
xor
push
gs
fimuls
fcoms
bnd
mov
push
add
ret
mov
int
xchg
dec
imul
ss
rol
call
test
insl
dec
repnz
je
ficoms
pop
js
std
mov
test
into
aas
imul
adc
outsb
jmp
sub
nop
inc
push
pop
sarl
adcl
add
mov
enter
fisttps
lea
adc
jge
xchg
aaa
sbb
les
stos
jns
out
sbb
outsb
push
insb
rcrl
mov
xchg
lahf
sti
inc
out
push
aad
sbb
in
jns
push
and
push
dec
xor
loop
hlt
pusha
cmp
xor
mov
addr16
jns
adc
iret
adc
cmp
imulb
push
cld
pop
xlat
push
fdivrl
lea
lret
lds
cmp
add
ficoms
pop
cld
push
popa
and
adc
call
adc
mov
lds
cltd
mov
lcall
push
jmp
jl
sub
outsl
aam
testb
dec
and
sub
mov
push
lods
pop
xchg
dec
pop
mov
adc
sti
cltd
dec
sub
cmp
and
mov
fmulp
negb
lahf
mov
dec
xchg
sub
test
lds
scas
xlat
push
xlat
cld
lods
jmp
push
mov
adc
cmpsb
shrl
iret
sbb
fcmovne
out
icebp
cmc
mov
cmp
mov
jg
aam
mov
mov
xor
add
xchg
std
inc
jle
sbb
lods
jno
hlt
das
xchg
jae
pop
or
adc
fcmove
mov
push
push
cmp
mov
mov
jmp
jb
xchg
inc
outsb
inc
js
add
vunpckhpd
aam
jo
add
mov
imul
push
leave
test
mov
in
cmp
incb
push
push
push
out
jg
push
xor
adc
orl
and
mov
jp
loope
mov
in
mov
mov
xlat
and
jnp
inc
jmp
and
and
xchg
nop
jae
lret
cmp
cmpsb
lret
cmc
mov
rorb
jmp
cwtl
push
dec
into
or
fimull
sarl
mov
fstl
sbb
pop
addr16
aam
adc
dec
scas
js
lret
adc
test
pavgb
xchg
aas
in
inc
or
mov
rcl
shlb
test
inc
pop
sbb
pop
or
sbb
xchg
push
xor
cli
aaa
cmpsl
int3
and
push
pop
jbe
lock
repnz
or
xchg
cltd
shrl
xchg
iret
mov
scas
stos
sarl
jne
jge
mov
dec
dec
mov
stos
mov
loop
jmp
lods
stc
test
add
cmp
sbb
sarb
mov
mov
jmp
mov
je
fildll
pop
push
stos
aaa
mov
mov
test
popf
push
mov
cmp
lahf
mov
arpl
jae
jmp
xchg
sub
xchg
pushf
sub
add
cmc
jno
sbb
push
pop
imul
inc
pushf
ss
dec
xlat
lods
inc
mov
in
cld
and
icebp
nop
sbb
repz
mov
or
mov
mov
sbb
lea
call
jecxz
mov
bound
push
lret
sahf
fisubrl
insb
adc
sbb
pop
mov
pop
xor
xor
fidivl
pop
mov
lret
adc
leave
cli
icebp
movsb
pop
sahf
stos
push
mov
inc
cmp
adc
xor
hlt
sbb
arpl
xchg
out
aad
lods
jmp
lds
mov
cmp
jne
mov
icebp
jl
inc
loope,pn
cwtl
test
mov
cmpsb
or
jns
stos
je
ret
lret
xchg
inc
adc
and
aaa
pop
in
adc
inc
fsub
mov
mov
dec
inc
mov
fisttps
inc
push
lods
insb
pop
pmullw
mov
scas
pop
fs
mov
dec
mov
outsl
rorb
test
fidivs
xchg
add
stos
lahf
mov
insl
xor
xor
jb
std
fildll
outsl
jne
scas
in
jbe
lock
int3
sub
adc
ss
out
or
ds
out
push
sbbl
push
adc
hlt
sarl
in
lcall
inc
bound
xchg
inc
inc
pop
push
dec
cmpsb
test
push
mov
test
daa
cmp
xchg
sub
xchg
cmp
rorl
in
arpl
mov
mov
popf
adc
cmp
inc
pop
popa
ficoms
notb
das
push
cmc
or
and
fsubrl
loope
shl
je
and
jbe
inc
push
scas
int
rol
out
pop
cld
push
push
ja
sub
mov
movsb
sub
in
fdivl
pop
sub
pop
sbb
arpl
pop
xor
aam
push
push
fidivl
adc
stos
inc
cmp
pop
xchg
sahf
movd
and
dec
jne
xor
push
maxps
jle
insl
xchg
shr
lcall
dec
pop
nop
add
mov
mov
call
lcall
push
sbb
ss
divb
pop
shl
xchg
dec
mov
push
gs
in
pushf
xchg
outsb
clc
aas
mov
addr16
aaa
imul
loop
adc
fneni(8087
cmp
push
inc
xchg
call
movsl
lahf
push
mov
mov
pop
inc
push
mov
push
push
sbb
push
lahf
fwait
fs
out
pushl
mov
mov
sub
adcb
in
or
mov
out
sub
sti
int
sti
inc
mov
inc
pop
inc
mov
adc
and
xchg
lret
push
cmp
lea
sbb
nop
das
inc
and
sub
and
jl
clc
lea
mov
xlat
cmc
sub
loop
out
inc
xchg
sarb
xchg
movsb
idivb
in
fdivrs
mov
aaa
mov
or
das
fbstp
test
hlt
and
nop
push
insb
lds
ret
cmp
fimull
lods
inc
pop
jno
xchg
out
inc
sbb
stos
fsubr
mov
stc
in
mov
dec
and
ljmp
cmpsl
fistps
mov
ljmp
fisubl
shrl
stc
orl
and
jae
xchg
dec
mov
mov
cmc
cmp
jns
pop
mov
sahf
imul
out
sub
xor
mov
test
mov
cmp
adc
movb
jnp
cwtl
push
mov
cmpb
adc
mov
pop
xchg
jge
and
pop
jle
iret
les
mov
xor
or
sub
lcall
stos
and
addr16
dec
sub
stos
cmp
lods
stc
outsl
stc
add
mov
xchg
outsl
push
cmp
shll
ret
out
inc
push
inc
testl
cmc
push
dec
ja
push
mov
ljmp
fdivrl
pop
sbb
faddl
and
adc
xchg
sbb
inc
ret
add
pushf
adc
inc
sub
xor
jae
xchg
sbb
popa
xchg
pop
lds
mov
les
int
cltd
fwait
sub
jl
push
bound
mov
fwait
cld
push
lret
sub
mov
xor
push
cs
sbb
pop
mov
lret
mov
aad
out
fs
rclb
pop
cmpsl
out
aaa
xchg
sub
inc
sbb
sub
repnz
jnp
lea
repnz
push
push
push
int3
cs
ss
mov
pop
push
sub
shlb
fwait
hlt
xor
js
or
push
or
faddl
je
montmul
cmpsb
xchg
mov
jp
call
xor
repz
faddl
dec
mov
push
inc
les
xchg
lcall
mov
sbb
scas
outsb
stos
sub
jne
jle
dec
push
inc
int
enter
inc
mov
clc
rorl
sarb
xor
mov
sbb
push
xchg
test
or
hlt
sub
mov
repnz
inc
adc
sub
jb
dec
arpl
scas
into
sbb
adc
imul
mov
movb
xchg
lea
in
in
bound
xchg
rorl
imul
mov
jl
ret
lods
int3
ficoms
rolb
movsl
std
ljmp
pop
out
std
insb
cltd
jmp
call
sbb
sbb
test
mov
mov
pop
andl
mov
or
push
rcll
or
mov
lahf
sub
fisttps
jno
cmp
scas
in
sbb
icebp
push
in
test
cmp
and
push
popf
mov
mov
cmc
pusha
sbb
xor
sub
push
or
and
mov
mov
lods
cmp
and
push
pop
lds
enter
add
add
into
not
add
jl
ret
scas
repz
imul
mov
sub
in
rol
mov
pop
xlat
fiadds
pop
cld
pushf
jp
or
in
xor
jge
lahf
rorl
mov
and
popf
ss
jbe
inc
and
pusha
jb,pn
xor
push
shlb
dec
xor
in
xorb
xchg
or
push
nop
add
sbb
mov
cltd
shlb
daa
sub
out
lods
inc
inc
xchg
pop
js
bound
pop
sub
out
push
jo
fwait
lret
push
xor
gs
cmpsb
inc
aaa
imul
stos
mov
jne
jmp
xchg
sbb
stc
repnz
xor
out
xchg
or
mov
dec
pushf
push
fs
sarb
jl
ret
dec
add
mov
mov
xor
test
mov
inc
mov
pop
gs
cltd
into
fsubs
int3
lds
push
scas
push
dec
aas
add
jae
int
push
subb
loopne
sbb
mov
add
std
enter
mov
sbb
mov
jp
adc
stos
stos
jg
aad
divl
ds
in
scas
xchg
inc
pop
sbb
or
pop
add
or
add
adc
shl
xor
les
std
sub
scas
sbb
mov
jmp
mov
mov
add
mov
repnz
mov
push
jg
aas
bound
jmp
push
aad
and
shlb
inc
es
mov
push
adc
or
fwait
pusha
inc
iret
add
xor
sub
pusha
lds
into
push
lret
out
pop
jecxz
loope
xor
sbb
cmp
jb
loop
int
xchg
sbbb
stc
rcr
int
incb
andb
insl
leave
xor
lret
lock
mov
mov
mov
gs
pop
icebp
imul
ljmp
frstor
ds
push
sub
jmp
je
inc
push
fdivp
push
in
in
ret
inc
xor
adc
sub
push
dec
mov
mov
xor
imul
mov
cmpsb
mov
mov
lahf
pop
out
dec
mov
xchg
or
shlb
xor
cmpsb
hlt
or
fcomps
mov
data16
cmp
stos
ljmp
repnz
out
xchg
mov
scas
mov
pop
push
add
pop
out
hlt
mov
or
xor
sub
mov
push
repz
in
dec
jecxz
jle
aam
xor
and
rcll
push
xor
add
jle
gs
and
into
out
push
jecxz
mov
negb
xorb
add
mov
scas
jno
inc
lret
sti
jb
mov
pushf
rcrl
lock
out
pushf
sbb
jg
and
fldenv
pop
sbb
jns
in
lods
mov
stc
dec
mov
ljmp
out
lret
test
fisubrl
dec
xchg
or
std
or
push
scas
fucomip
sbb
push
inc
push
adc
sbb
ret
les
decl
push
sahf
hlt
dec
repz
addr16
jne
leave
add
xchg
push
xor
int
dec
aam
pop
fdivr
sbb
add
pop
xchg
add
adc
push
into
push
add
and
out
loope
inc
sahf
and
inc
mov
mov
add
popa
adcl
mov
push
cmp
das
lds
enter
test
enter
jb
fsubl
cmc
adc
insl
testb
add
lock
repz
push
xor
fidivrs
pop
mov
ja
fwait
loopne
movsb
pop
cmpsb
es
push
ficoml
call
lods
add
jge
xchg
and
xchg
pop
ljmp
cli
and
inc
xor
mov
push
jmp
dec
bound
ljmp
insl
inc
or
fisttpll
loope
jns
adc
subb
loop
rol
aaa
pop
jecxz
add
and
sub
fistps
cmp
daa
cmpsl
rcrl
cltd
sbb
cmpsl
inc
adc
mov
cli
jp
cwtl
and
sbb
repnz
pop
adcl
jne
sbb
incl
pop
fldl
fists
out
pop
mov
xchg
add
inc
pop
or
inc
inc
rcl
cli
cmpsl
out
and
xor
fcoml
aad
and
adc
std
fwait
repnz
cli
pop
stos
dec
mov
mov
sahf
xchg
jecxz
cltd
mov
sahf
xchg
inc
cwtl
jno
mov
dec
nop
or
jmp
push
inc
int3
push
or
nop
push
pop
inc
jecxz
rorb
cwtl
sub
lods
mov
xor
pop
mov
pop
lea
int3
cltd
xchg
sbb
inc
in
cmp
mov
mov
mov
pop
ljmp
jno
mov
push
stos
js
addr16
cmp
cmpsl
data16
ret
fimuls
in
inc
sbb
ss
icebp
mov
xor
test
dec
push
adc
adc
mov
sub
push
pop
outsb
outsl
dec
pop
pop
push
xchg
stc
sub
or
iret
xchg
mov
out
movsl
push
add
push
jb
insl
xor
iret
and
out
cmp
mov
jns
rcrb
jo
inc
lock
lret
nop
cmpb
adc
outsl
mov
sti
push
leave
das
push
out
ficompl
cmp
xchg
pop
mov
cmp
sub
lret
sti
fcmovnu
xchg
sbb
xor
dec
xchg
adc
mov
jge
int3
movsl
sub
aam
adc
xchg
adc
lea
mov
or
roll
mov
mov
movsl
into
jnp
jmp
jg
inc
jno
push
sarb
int
push
out
ss
and
adc
hlt
jmp
shrb
push
ret
push
and
cmp
lcall
arpl
sub
cmp
adc
mov
stos
inc
add
xchg
pop
testl
mov
xor
push
mov
push
ret
les
outsb
lea
pop
es
sbb
stos
and
sbb
adc
lcall
loopne
adc
xchg
push
xor
sub
negl
out
push
add
in
scas
lret
lods
lret
adc
aaa
add
sub
pop
out
xor
or
movsl
dec
test
inc
aad
push
inc
dec
xchg
ljmp
cmp
adc
adc
mov
bound
push
and
not
sbb
je,pt
in
sbb
lods
mov
je
inc
aam
aaa
mov
insb
sbb
hlt
int
mov
stos
mov
sbb
cmp
sbb
xor
mov
push
jno
in
jecxz
jnp
fscale
add
loopne
cmc
cmp
cmp
dec
sbb
sahf
xor
sbb
out
mov
or
scas
and
dec
adcl
inc
sub
leave
rcrl
sub
sti
mov
pushf
jmp
sub
sarl
fbld
push
subb
scas
insl
mov
sar
ss
les
or
mov
leave
xchg
pop
es
or
xchg
mov
aaa
icebp
push
out
and
cmp
and
sarl
out
out
push
jbe
mov
mov
enter
fsubrl
fldt
and
psrlw
lods
cmp
fildll
shrb
mov
pop
mov
lcall
xor
je
out
aaa
test
add
wbinvd
add
ss
cmc
or
jbe
xchg
jle
dec
inc
pop
push
fistpll
scas
mov
scas
jle
sar
test
jae
or
cmp
mov
mov
fidivrs
add
leave
mov
rcl
les
jecxz
sub
jmp
aas
xchg
cmp
lcall
add
xorb
jo
cwtl
inc
jge
push
aam
push
fwait
out
dec
gs
scas
in
jmp
push
mov
add
aas
mov
iret
or
movsl
andb
iret
das
test
jge
mov
pop
into
fmull
mov
cwtl
mov
into
in
scas
loop
stos
int3
xor
pop
in
pop
add
test
test
sahf
adcb
mov
xor
bound
lods
jno
lds
mov
mov
je
dec
enter
popf
or
mov
xchg
and
fs
ss
dec
fs
pop
lret
ror
cmc
lahf
sub
push
daa
mov
aam
mov
push
cmp
push
pop
dec
sbb
push
pushf
rorl
pop
add
psrlw
lmsw
jp
cmp
dec
inc
mov
dec
je
ja
repnz
call
push
cmpsl
div
mov
mov
mov
movsl
ds
jmp
enter
xor
push
call
and
push
add
push
mov
mov
scas
and
push
pop
and
test
mov
mov
fdivrl
mov
arpl
cld
das
sub
imul
mov
lret
out
adc
cwtl
mov
inc
jno
aas
aaa
aad
cwtl
and
fs
mov
cmp
lods
mov
dec
scas
addr16
pop
out
push
adc
test
sbb
enter
jecxz
sub
test
adc
insb
cmp
ljmp
int3
sub
fwait
cwtl
cs
push
dec
fisubrs
jb
mov
testb
pop
lea
and
pop
ljmp
mov
data16
loopne
dec
mov
mov
out
das
jp
pop
movsb
and
fdivl
lret
jmp
xor
add
out
imul
xor
sbb
xchg
pop
mov
cmp
out
int
sti
jae
imul
fstp
mov
roll
mov
push
imul
sbb
inc
adc
dec
in
adc
scas
sarl
pop
sahf
inc
jbe
push
cmpsl
mov
arpl
dec
lea
ret
mov
popa
pushf
sar
lds
mov
mov
xor
test
cmp
test
push
fidivrs
in
mov
xlat
cmp
imul
pop
jns
add
xchg
outsl
imul
pop
lock
lods
jle
jmp
or
sbb
inc
cmp
xlat
ret
mull
vcvttpd2dq
adc
pop
xor
ficomps
das
pushf
sbbl
xchg
lds
mov
mov
xor
jne
mov
lret
repnz
xor
push
lcall
loop
mov
sbb
rol
pop
orb
xor
mov
ja
sbb
pop
or
out
dec
sub
xchg
cmp
insb
cmp
xor
stos
mov
mov
or
call
mov
shll
fwait
cmc
fdivrl
fdivrl
xor
addr16
sbb
mov
fldl
cmp
mov
mov
push
pop
or
clc
pop
add
pop
cmc
sti
and
cld
add
sbb
mov
sbb
popf
push
pop
fimuls
xchg
fdiv
jl
xor
and
insb
stos
xchg
into
mov
mov
cmp
pop
sahf
loopne
push
xchg
in
pushf
or
js
jmp
push
ds
push
add
fmuls
ljmp
push
int3
sbb
sub
mov
xor
sarb
pop
dec
fadds
cmp
and
jae
push
je
shl
sub
loop
or
cmp
lcall
fdivrp
mov
mov
aas
xchg
inc
sbbl
xorb
jno
jmp
xchg
pop
in
push
fbstp
xor
call
mov
in
push
add
aad
stos
idivl
leave
xchg
outsl
ret
xor
arpl
daa
ret
and
adc
push
cmp
cltd
and
pop
repz
mov
xor
mov
cmp
xchg
test
or
push
mov
inc
dec
mov
pop
adc
mov
sbb
loop
aam
int
sarb
inc
sub
icebp
int
nop
push
scas
mov
test
into
nop
mov
dec
mov
addr16
pop
orl
xchg
dec
outsb
mov
adc
inc
rcl
or
popf
lock
cmp
mov
jb
push
into
cmp
out
dec
addl
push
sub
aad
push
in
aam
inc
loopne
jge
sub
add
movsb
shr
pop
adc
or
mov
inc
xor
jne
xlat
call
adcl
mov
out
sub
jne
fwait
xchg
cmp
jbe
xor
sub
xchg
pop
aas
xchg
sbb
dec
lods
loop
loopne
xor
pop
ss
cmp
push
mov
dec
jmp
pusha
cli
jns
aaa
sti
mov
mov
xor
mov
jo
rcr
fisubrs
push
cltd
mov
aaa
add
arpl
push
inc
out
push
pop
pop
xchg
inc
sbb
inc
roll
and
rcl
push
inc
clc
add
ror
leave
lods
xor
sub
cwtl
mov
mov
data16
push
incl
pushf
dec
cmp
push
rol
push
repz
adc
jecxz
mov
inc
mov
lods
mov
cmp
das
in
mov
sbb
ss
fsubr
xor
add
add
sbb
mov
out
nop
cmp
dec
xor
gs
mov
adc
imul
fstl
pusha
in
sub
pop
or
out
jmp
inc
push
adc
lret
pop
aam
iret
pop
clc
mov
add
push
pushf
inc
mov
push
bound
test
gs
loopne
call
xor
arpl
mov
add
mov
sub
insl
xor
mov
cmp
outsl
xchg
cmp
jg
jmp
lret
shl
test
clc
push
ja
imul
xchg
jge
je
mov
or
in
mov
out
push
outsb
cs
pop
cmp
xor
adc
rcrl
mov
add
ds
dec
push
inc
cmpsb
outsl
daa
mov
movb
sub
cltd
addr16
adc
addr16
int
ret
jmp
mov
cmp
outsl
inc
in
cmp
repz
sub
movsb
arpl
fildl
in
mov
push
mov
adc
lods
xchg
enter
add
out
rcrb
push
mov
sub
adc
addr16
clc
ds
jecxz
lahf
xchg
js
sti
sub
ja
and
cmpsl
fstl
xor
sbb
inc
add
fs
cmp
in
mull
pop
xchg
dec
cwtl
xor
mov
inc
cmpsb
mov
pop
rclb
inc
lahf
or
mov
and
fmull
xor
sub
stc
popa
xor
cmp
mov
out
cwtl
mov
je
pushf
pop
dec
or
sbb
sahf
inc
cmpsb
adcl
push
int
xchg
sub
enter
enter
rorl
xchg
hlt
add
hlt
push
cmp
fisubs
and
das
mov
jmp
push
loop
xchg
pusha
fs
test
fwait
imul
outsl
mov
ljmp
xor
jno
int3
push
push
punpcklbw
ds
pop
jno
lods
inc
fdivs
roll
cmpsl
lods
mov
cmc
in
jb
fsub
in
repz
sbb
cmp
mov
pop
sbb
or
jg
lcall
push
hlt
dec
cmp
adc
outsl
or
jnp
std
jmp
cmp
sbb
mov
xchg
ja
cmp
sbbb
shll
popf
pop
in
sbbl
idivl
lock
inc
stos
or
addr16
dec
shl
jnp
jmp
or
sahf
mov
add
push
add
and
cwtl
dec
outsb
cld
ret
and
leave
ss
mov
lahf
leave
push
push
and
std
xor
xchg
sbb
ljmp
xchg
push
push
je
pop
jg
xor
mov
sbb
inc
addr16
lock
or
sub
and
inc
jmp
dec
stos
sbb
fldenv
push
cmp
pop
fildl
nop
in
lahf
xchg
sbb
das
fs
push
cmpsb
jbe
or
pop
mov
sbb
out
and
xor
inc
pop
lahf
cmp
dec
jmp
iret
or
sub
jge
insl
xchg
adc
sbb
dec
push
mov
jno
out
popa
aam
outsb
push
push
adc
dec
adc
sbbl
aas
enter
mov
pop
mov
pop
lret
fistl
dec
inc
adc
pop
imul
scas
sub
xor
out
int
mov
ret
mov
push
mov
push
mov
cwtl
push
sti
mov
or
in
in
sub
dec
sub
jo
dec
xchg
jle
cmp
mov
push
jno
lret
sub
les
push
or
rclb
jo
sub
mov
adc
dec
leave
arpl
mov
mov
xchg
cmp
cli
adc
inc
out
popf
lods
ljmp
mov
adc
xchg
push
hlt
roll
in
or
xlat
xor
and
stos
lock
jg
inc
jbe
sbb
fsubr
sbb
loopne
cmpsb
mov
popa
lea
int
sbb
add
or
jb
sbb
fisubs
je
test
jecxz
jae
xor
cmpsb
pushf
in
sub
aad
mov
mov
fldcw
mov
cmp
and
or
hlt
rsqrtps
xchg
inc
and
or
lahf
push
mov
push
loop
mov
lods
test
iret
mov
mov
arpl
imul
fnstenv
push
add
aam
repnz
pop
inc
int
aaa
fisubrl
xchg
push
rorb
mov
mov
lea
inc
mov
cli
xchg
fisttpll
fwait
int3
repnz
insl
sbb
jg
add
sahf
int
pop
sti
jcxz
aam
std
into
adc
and
cltd
or
fucomi
add
fistpll
into
cltd
fsubrl
pop
mov
add
or
dec
pop
jmp
jmp
repnz
inc
xchg
loop
push
cltd
das
lds
push
mov
lea
adc
or
daa
push
dec
cli
jne
fwait
jno
fwait
or
adc
out
sahf
jae
nop
aad
push
shlb
xor
lcall
mov
adc
sar
inc
test
adc
sbb
pop
fisttpl
sahf
jp
or
ja
dec
jnp
or
popa
jge
jge
xchg
add
adc
push
cltd
aad
push
jns
add
bound
test
pop
jp
outsb
or
push
or
sbb
pop
arpl
jbe
aad
in
xchg
add
sub
gs
or
adc
dec
mov
pop
push
daa
inc
ret
imul
test
rol
in
and
cmp
test
test
dec
aas
jns
pushf
lcall
inc
fdivrl
dec
add
ftst
imul
shll
xor
cmp
pop
xor
jmp
rcrb
cmp
mov
rcr
cli
mov
adc
hlt
outsl
cmp
aam
mov
push
gs
and
mov
xchg
push
hlt
dec
mov
sahf
jp
lea
pop
or
xor
hlt
jg
mov
imul
sub
push
pop
inc
or
pop
mov
jmp
cmp
pop
sub
xchg
bswap
popa
stc
mov
cs
cwtl
and
gs
adc
popl
cmc
mov
mov
es
stos
popa
es
lods
cmp
sbb
dec
arpl
sarb
movsb
push
popa
fidivl
std
das
rcll
dec
addb
loop
mov
jb
adc
jmp
shll
and
xor
dec
adc
lcall
fsubrs
jo
mov
dec
aaa
pop
sbb
aas
dec
push
es
cmc
xlat
cs
fstpt
push
push
add
lcall
mov
mov
cwtl
inc
jbe
jle
lret
ret
cmpsb
imul
iret
es
push
push
cmpsl
pop
pop
or
insb
lea
adcl
shrb
in
and
hlt
xor
shl
mov
push
add
push
mov
and
mov
mov
fcmovu
and
sub
fprem1
stos
mov
inc
push
popf
hlt
in
or
pop
inc
cmp
in
dec
lret
imul
pop
stc
gs
ljmp
xlat
sbbl
nop
aam
jg
push
mov
pop
jne
push
add
inc
xlat
dec
and
cmp
add
mov
push
sub
sahf
bound
inc
push
addr16
cmpsl
lcall
out
das
in
mov
mov
aas
cli
in
imul
ret
stos
cmp
fisubs
test
xchg
loopne
iret
aas
lds
fidivrl
in
addb
sub
push
inc
mov
outsb
icebp
and
lcall
mov
mov
adc
mov
pop
mov
mov
jne
xchg
subb
cli
sti
test
into
pop
rcrb
cltd
jmp
jno
jg
cltd
subb
in
inc
out
xchg
or
inc
xor
dec
dec
jo
xor
out
imul
xchg
dec
jnp
enter
xor
xor
addr16
dec
das
out
into
sahf
inc
sbb
adc
test
fildl
xor
iret
xchg
loope
into
fnstcw
cmpsl
cmp
movsb
aam
xor
out
stc
addl
push
xor
sub
dec
dec
lock
imul
sbb
fstl
mov
xchg
jmp
dec
into
clc
mov
arpl
ror
and
aaa
sbb
loopne
adc
cltd
mov
fsubrp
or
cmp
jl
and
je
rcrl
or
xchg
mov
bound
test
lret
add
mov
mov
push
mov
orb
cwtl
pop
pop
cmp
dec
push
dec
mov
inc
dec
cmpl
sbb
loop
nop
lret
addr16
mov
and
lahf
je
cmp
or
xor
out
lret
cld
test
or
lret
mov
fldenv
adc
mov
es
shll
int3
push
mov
cld
pop
fistl
or
xchg
aam
pop
mov
inc
pop
xchg
hlt
dec
mov
pop
jmp
aad
das
adc
in
imul
out
push
sti
sub
clc
cld
cli
aad
sub
lock
sub
pushf
mov
or
imul
sbb
pop
fistpll
jecxz
xchg
data16
repz
pop
lahf
test
or
sbb
sarl
data16
loope
jle
or
push
inc
into
xor
xlat
ja
aad
mov
add
xchg
mov
dec
test
ret
fisubl
cmp
and
in
icebp
add
dec
add
jo
jo
jne
aaa
adc
adc
inc
mov
imul
loop
mov
fnsetpm(287
lds
xor
pop
mov
xchg
ja
popa
xor
push
fidivl
fcomip
pop
mov
ret
jne
stc
mov
sbb
cli
stos
mov
xor
out
xlat
shll
and
nop
jno
dec
mov
enter
cmp
pop
cwtl
pop
test
mov
cmp
cs
pushf
xchg
pop
xchg
cltd
jp
test
xchg
ret
stos
aaa
and
stc
fistl
call
fcompl
adc
jo
fdivl
mov
sbb
add
sbb
call
or
or
int3
add
lea
xchg
mov
xchg
cmpsl
push
pop
dec
je
jecxz
insl
cmp
xchg
rcrl
jmp
out
int3
push
jae
sahf
mov
lahf
push
or
cli
xchg
in
cmc
mov
dec
loope
pusha
push
sti
andl
pop
test
in
pop
add
pop
lods
inc
mov
test
mov
aas
xchg
mov
xor
adc
sbb
pop
jg
inc
data16
sbb
call
dec
fidivrl
fwait
test
xchg
sub
pusha
lret
push
clc
out
dec
call
adcl
pop
cmp
sbb
or
xchg
mov
mov
cld
lcall
sbb
data16
shlb
push
mov
mov
lds
push
xor
jg
cwtl
shll
or
or
out
jle
cwtl
xlat
adc
movsl
push
and
lcall
lcall
xor
pop
stc
gs
cmp
cmp
and
mov
mov
sub
cmc
mov
cltd
shlb
and
pop
adc
sbb
cli
pop
xchg
test
fnstsw
and
and
repz
subb
test
inc
cmpb
fidivrl
sbbl
jnp
inc
out
pusha
scas
inc
mov
jp
push
cwtl
mov
push
xchg
imull
shr
xchg
xchg
jnp
xor
dec
xor
decb
mov
inc
jb
lahf
push
cmp
add
push
mov
cli
addr16
jae
sbb
push
out
inc
idiv
pop
push
jmp
test
popa
pushf
xchg
arpl
enter
fdivs
lret
je
add
sbb
out
jb
sbb
in
std
stos
pop
in
sub
sbb
and
test
mov
loopne
cmp
jnp
xchg
adc
push
gs
mov
dec
ds
adc
rorb
sti
sub
cs
adc
fsubrl
sub
sahf
adc
out
in
stc
push
test
inc
in
adc
add
fcomps
jb
hlt
lret
lea
jg
or
mov
repz
filds
pop
mov
jb
jp
mov
mov
dec
adc
das
rorb
dec
bound
outsb
mov
je
stos
repnz
mov
push
leave
xlat
mov
xor
mov
jge
outsb
jg
and
sub
mov
sbb
cmp
fdivs
add
pop
lahf
sub
loopne
shlb
jge
add
jmp
dec
shlb
jecxz
sub
and
add
xchg
pop
inc
sahf
jne
rorl
lret
aam
aas
sub
jecxz
jecxz
rcrb
lds
rorb
test
pop
clc
xchg
aad
inc
cmp
rcll
jge
or
sub
add
cmp
adc
inc
mov
adc
pop
pop
mov
inc
add
inc
shr
outsb
lahf
inc
pusha
adc
roll
inc
std
psrlq
inc
pop
sahf
sbb
adc
mov
sbb
jnp
call
icebp
lds
xchg
ss
xor
dec
cmp
and
pop
xchg
or
test
outsl
mov
mov
xor
fcomps
adc
test
dec
roll
fsub
movsl
ret
jb
adc
cmp
sbb
shll
xor
cmpsl
pop
int
mov
adc
mov
setno
stc
mov
add
sbb
out
inc
popa
or
outsl
inc
idivb
call
xchg
imul
cltd
adc
adc
push
mov
fdivrl
scas
out
push
pop
adc
mull
xchg
out
and
sub
push
jmp
dec
popf
les
outsb
lods
bound
adc
add
inc
push
mov
mov
sarl
jle
xchg
mov
pop
in
sti
push
and
rcrl
movb
ljmp
push
mov
flds
out
jbe
ret
sti
sahf
and
aad
lret
shr
push
sbb
sbb
adc
fisttpll
mov
jg
dec
int
push
and
push
push
andb
fadd
push
call
sub
aaa
mov
jne
adc
cmp
push
rorl
xchg
dec
push
cld
mov
cmp
mov
dec
xor
leave
sbb
stc
ds
jo
add
push
xchg
roll
mov
add
cmp
cmp
enter
fists
mov
cwtl
shr
fs
lods
adc
enter
push
rcll
loopne
sub
xchg
or
stc
rorl
or
cmp
rol
ds
call
int3
mov
fcomi
and
ss
mov
lahf
test
pusha
dec
mov
iret
and
mov
inc
outsb
mov
inc
fistpll
fdivr
xor
add
lret
cltd
cmp
push
test
push
adc
movsl
dec
les
xor
xor
stos
mov
sti
mov
pop
cld
dec
mov
cltd
icebp
add
call
sti
mov
xor
je
mov
lcall
mov
jbe
dec
ret
daa
mov
and
xchg
fldt
pusha
shrb
pop
shlb
ja
in
pop
jo
push
daa
fldt
cld
jg
inc
nop
movsb
rcrb
pop
mov
mov
popf
sti
sub
cmp
push
cmp
loop
inc
add
push
adc
out
jno
sub
inc
loopew
push
push
sub
sar
push
adc
mov
aaa
xchg
pop
adc
dec
cmpsb
xchg
aas
xchg
sub
outsb
lock
sar
es
jge
cmp
mov
cmp
adc
mov
inc
add
sub
lock
jnp
jecxz
pop
or
iret
pop
lcall
mov
loopne
add
mov
in
sub
icebp
cmpsb
pop
mov
call
mov
andb
popf
imul
mov
scas
lock
test
mov
js
inc
repnz
mov
xor
push
mov
cmp
in
jmp
inc
arpl
jnp
leave
jne
mov
or
mov
sti
inc
xor
dec
jmp
rcl
mov
fidivl
mov
xchg
adc
jecxz
mov
fsts
mov
inc
inc
div
and
adc
xchg
mov
push
iret
inc
loop
ja
inc
pop
hlt
ret
ja
arpl
or
sub
cmc
pop
loope
mov
fucomp
rorb
pushf
cmpl
xchg
pop
mov
sbb
movb
mov
mov
mov
xchg
fadds
test
pop
lret
movsl
cld
subl
stc
add
jle
das
out
shll
cmpb
mov
es
fwait
xchg
xchg
jns
clc
shl
fs
inc
outsb
loop
sbb
mov
lea
inc
in
stos
subl
popa
jge
xlat
adc
jmp
and
mov
adc
pop
ljmp
lock
xchg
enter
jle
adc
testb
cmpsb
sub
pop
insb
lret
fmull
xor
aas
xor
xchg
lods
fidivl
push
out
xlat
inc
cwtl
iret
jmp
jne
pushf
adc
adc
js
sub
add
push
pop
out
xchg
xchg
out
mov
imul
and
fistpll
js
mov
andl
pushf
ss
mov
push
sub
and
pop
ja
push
push
repz
popa
loopne
iret
and
and
push
mov
push
pop
xchg
and
repz
mov
std
mov
outsb
movsl
push
push
adc
or
add
push
push
add
jno
dec
stos
xchg
lds
enter
push
adc
fisttps
cmpsl
loopne
mov
fbstp
ds
or
fstpt
rclb
fwait
pop
or
outsl
mov
mov
ds
sub
int3
int
outsb
and
mov
test
ds
push
inc
jg
or
pop
repz
popf
add
mov
or
test
jns
jp
jb
faddl
mov
pop
sub
fs
cmpsb
ss
in
adc
push
push
into
mov
xor
sub
call
add
cmp
dec
mov
xchg
mov
sub
push
insb
jge
add
jmp
push
add
add
jle
shrl
push
repnz
jg
nop
jecxz
pop
inc
cmp
rclb
jecxz
and
test
into
xlat
pop
or
ret
in
int
sbb
scas
mov
mov
rclb
out
js
mov
and
lods
dec
lds
lret
movsl
pop
xchg
cli
fdivp
test
push
popf
sbb
movsb
aam
mov
dec
je
push
xlat
mov
les
mov
sbbb
cli
push
cmp
or
cmp
test
and
fchs
adc
sbb
mov
jo
push
pop
stos
adc
dec
push
inc
mov
pop
mov
in
fbld
adc
ficomps
sub
inc
cmp
fwait
cmp
dec
fcoml
mov
mov
bswap
cmpsb
xor
mov
out
xchg
mov
aaa
dec
into
mov
dec
jb
in
pop
mov
pop
sbbb
jmp
add
sbb
mov
mov
arpl
push
push
movsb
fidivrs
push
jl
jb
test
push
xor
push
bound
cmp
adc
push
inc
lods
adc
popa
jecxz
dec
cmpsb
mov
outsb
adc
ucomiss
int3
rcll
mov
fst
movsl
inc
lret
cli
dec
clc
das
mov
test
jno
out
fldcw
xchg
and
dec
xor
fcomp
test
cmc
xchg
int3
adc
inc
jbe
fwait
xchg
in
xor
sahf
lds
mov
ds
dec
data16
push
addb
sahf
pop
roll
and
fcoml
adc
repz
fisubrl
mov
in
pop
pop
dec
je
pop
cli
lock
out
sub
add
cmp
sub
inc
mov
xchg
xlat
loop
dec
enter
arpl
in
xchg
add
inc
inc
popa
or
out
dec
imul
mov
add
lahf
fadd
clc
sub
jne
pop
clc
int
fstps
push
js
insb
jmp
cmp
pushf
mov
mov
xor
lret
enter
repnz
loop
jle
iret
ljmp
and
int3
adc
xlat
stos
adcb
pop
sbb
out
dec
push
test
sbb
call
pop
or
popf
dec
xchg
jecxz
sbb
scas
inc
jge
insb
ret
shrl
lods
mov
data16
nop
mov
dec
sahf
js
daa
mov
push
insb
adc
movsb
xor
out
test
lods
data16
xlat
mov
xchg
outsb
push
imulb
dec
scas
inc
mov
push
pushl
xor
sarb
ss
pop
rcrb
int3
lcall
shll
and
xchg
dec
jge
icebp
jmp
or
sub
mov
imul
push
mov
cwtl
xor
out
xchg
in
in
leave
mov
jnp
push
fdiv
mov
int
or
fadds
mov
imull
scas
jbe
cmp
leave
mov
fdivr
jge
in
push
adc
insl
inc
pop
pop
pop
inc
leave
mov
adcl
aad
out
and
push
sub
adc
jno
enter
jmp
inc
and
testb
stos
sbb
inc
xchg
pop
loop
xlat
rolb
insl
inc
mov
jg
sahf
mov
push
mov
bnd
iret
in
sub
xchg
xorb
arpl
mov
jne
lret
sbb
jl
out
xchg
test
lret
push
daa
mov
or
psraw
push
lret
pop
cmp
fwait
push
inc
pop
jae
pop
xor
test
mov
icebp
mov
mov
and
lret
xchg
std
cmp
pushf
or
outsb
movl
xor
rcrb
jle
mov
icebp
test
mov
add
popf
outsb
inc
xor
xchg
inc
mov
test
enter
pop
mov
sub
lahf
cld
in
push
mov
inc
std
mov
popf
arpl
test
mov
stc
into
ret
dec
adc
jge
sbb
repnz
in
fildll
xchg
mov
adc
mov
in
cmp
xchg
or
sub
clc
shrb
or
pop
sar
push
jb
cltd
jl
movsl
into
imul
add
jno
mov
push
mov
cmp
xor
mov
mov
lods
cmp
loopne
aad
inc
cmp
repnz
rorb
add
loope
jb
filds
outsb
pushf
leave
das
inc
pop
sbb
pop
push
jne
jle
outsb
xchg
std
mov
cmpsb
je
dec
sarl
and
mov
leave
call
dec
or
push
and
mov
dec
xchg
mov
fnstsw
movb
addr16
jge
add
sbb
fidivs
sub
mov
in
mov
add
enter
and
stc
das
inc
mov
loop
push
or
outsb
pop
out
shrb
fsubr
sub
push
push
push
andb
mov
ror
push
aad
bound
jmp
adc
xor
mov
xor
add
mov
push
inc
jp
fistpll
pop
push
or
add
mov
and
adcl
stos
mov
outsb
repz
dec
xchg
loopne
cmp
jl
xlat
movsb
arpl
mov
bnd
mov
or
xor
xchg
sarb
inc
test
xchg
add
push
push
jb
loop
decl
jmp
mov
add
push
inc
adc
jp
push
ficoms
dec
cmpsl
ror
int
stos
sub
ja
cltd
js
pusha
add
stc
lahf
push
inc
mov
ds
stc
sub
dec
loopne
adc
inc
es
pop
gs
dec
sbb
adc
pop
or
test
mov
mov
push
loopne
flds
inc
pop
insb
loop
inc
push
int3
test
out
push
data16
sahf
sbb
xchg
repnz
xor
sbb
add
pop
fistps
lea
ss
inc
jmp
xchg
loope
and
cmp
mov
sbb
jb
test
ljmp
mov
aam
pop
test
push
or
pop
imull
andl
sbb
mov
sub
std
xor
shlb
je
add
es
xchg
push
in
in
jp
push
xchg
pop
and
mov
jae
in
cwtl
or
xchg
push
push
mov
mov
jmp
xor
dec
push
stos
enterw
lret
mov
andl
stos
or
ja
pop
ja
mov
mov
pop
mov
sti
insl
aad
cmp
mov
pop
mov
movb
pop
insl
popf
aad
imul
sub
xchg
dec
adc
mov
notb
aad
pop
mov
sub
jne
movsl
icebp
popa
xorl
adc
sbb
in
cmp
mov
add
test
movsb
mov
sub
lock
test
sbb
imul
lock
mov
testb
adc
test
sub
jns
fstps
daa
pop
lret
es
mov
fisttpll
dec
mov
pop
add
xorb
sub
lret
mov
mov
jmp
xchg
ljmp
lods
jbe
notl
sub
add
mov
lret
ds
pushl
std
mov
std
mov
add
or
movsl
or
mov
test
lds
ret
inc
popf
xor
inc
movsl
push
push
jns
insb
dec
jle
dec
xor
sarb
lods
mov
push
sub
js
shlb
fstps
iret
std
xchg
dec
xchg
popf
jns
imul
test
lahf
inc
pop
inc
push
sub
and
call
lret
andb
pusha
in
xor
cmp
hlt
sub
inc
adc
pop
fimull
jge
xchg
pop
or
dec
mov
shrb
push
and
add
pop
popf
push
inc
ja
cmc
and
rolb
sti
push
xchg
mov
mov
cltd
rorl
cmp
push
pop
push
pushf
dec
popf
ds
sub
stos
and
mov
leave
mov
or
jmpw
dec
cmp
sub
jne,pn
cmpsl
lret
sbb
stc
or
mov
pushf
call
mov
cmp
mov
out
js
ds
lcall
sbb
cmpsl
cmp
icebp
fmull
add
fidivs
xchg
mov
sti
mov
lret
imul
shlb
stos
aam
jmp
mov
ja
mov
pusha
mov
je
mov
or
cli
sub
mov
out
pop
xor
in
xor
repz
mov
mov
pop
out
jae
pop
dec
fwait
mov
push
mov
add
mov
aaa
inc
xor
push
or
pushf
sti
sub
jmp
stc
imul
sub
mov
lock
jo
scas
cmp
les
pop
dec
adc
fwait
jecxz
ss
insb
sbb
add
call
and
lock
mov
xchg
jnp
aas
push
inc
dec
sbb
mov
ds
out
sub
fisttps
xchg
mov
lret
imul
imul
dec
push
pop
mov
dec
int
pop
fldt
fxtract
adc
cmp
aam
jle
mov
movsl
lea
clc
or
jno
outsb
cmp
mov
ds
test
ljmp
mov
inc
xchg
pop
cwtl
in
jns
xor
adc
subb
shl
in
addl
rorl
xchg
aas
cld
xor
and
jbe
xchg
ljmp
push
cmc
lcall
iret
in
andb
mov
sbb
scas
lret
lret
mulb
jmp
fld
pusha
push
add
rolb
insb
hlt
mov
sbb
push
jnp
add
sbb
add
leave
and
int
pop
jp
mov
bswap
jne
push
cmp
or
ljmp
enter
das
adc
fidivrl
imul
cmp
cli
jo
xchg
cmp
pop
or
imul
loope
sbb
fs
mov
or
adc
dec
test
pop
mov
and
cmp
mov
sub
notl
jle
adc
in
mov
lret
scas
lret
pop
stc
pop
dec
mov
nop
cmpsb
or
cmc
or
mov
test
push
adc
nop
xor
or
xchg
adc
dec
mov
inc
dec
and
push
inc
sbb
mov
lods
sarb
add
add
pop
cmpsl
jae
jecxz
cmp
gs
cmp
mov
mov
sbb
scas
mov
icebp
lods
dec
jbe
jmp
js
dec
fsub
mov
arpl
test
leave
push
mov
leave
mov
mov
inc
testl
and
push
cmp
mov
lret
pusha
xchg
cmpsl
call
fst
arpl
cmp
test
push
sbb
sbb
neg
add
add
dec
jge
or
and
xchg
idivb
push
push
push
std
int3
in
data16
lret
adc
xor
test
iret
and
ljmp
pop
jbe
decb
repnz
in
pop
das
inc
jmp
cmp
jmp
popf
push
sub
inc
mov
arpl
hlt
jb
imul
dec
mov
gs
enter
pop
in
aam
inc
rcr
clc
js
mov
vpcmpgtd
je
inc
sbb
subb
push
stos
sbb
add
sbb
loopne
dec
ja
rdmsr
icebp
pop
movsl
inc
mov
push
lcall
inc
sbb
xchg
cli
out
pop
xchg
push
mov
scas
add
rorl
popa
inc
and
out
popa
ja
xor
cmpsl
mov
jnp
cmpsl
out
jp
ret
or
cmc
mov
pop
inc
pop
jo
add
nop
in
cmpsl
adc
sti
popa
inc
cld
mov
dec
push
push
jle
jbe
jmp
mov
cmc
jnp
fs
mov
outsl
and
mov
decl
lds
jmp
cmp
inc
mov
fwait
psubq
push
push
or
js
sub
les
in
out
inc
pop
sahf
or
in
lahf
inc
out
out
test
in
clc
sahf
rol
mov
sub
inc
jg,pn
cltd
xor
fisubrl
mov
adc
out
xchg
cltd
nop
dec
movsb
imul
inc
sarl
jne
add
and
loopne
sub
es
sub
pop
sbb
shll
aad
pop
mov
popf
or
test
cmp
fldcw
jmp
roll
cmpsb
dec
movsl
adc
mov
push
push
add
leave
popa
fsts
xor
pop
outsl
fiaddl
aam
popf
xchg
add
push
and
mov
lods
sbb
dec
cmp
push
rol
inc
mov
shrb
push
cwtl
bound
out
sub
jnp
sbb
aad
pop
test
cwtl
pop
mov
mov
push
mov
insl
pop
adc
or
test
jge
and
hlt
adcb
movsl
cmc
mov
test
popf
mov
xchg
ror
popa
mov
sarl
sub
lods
xchg
xchg
and
sub
pop
insb
sub
repz
inc
mov
jg
xchg
mov
and
push
and
xor
jmp
sub
pop
mov
movsl
dec
sbb
scas
mov
je
pop
mov
scas
push
mov
and
rcrl
lds
and
mov
push
mov
and
mov
jae
and
pop
xorb
leave
push
lods
orb
xor
push
repz
repnz
repz
inc
cmp
ja
xor
out
addr16
cmp
pop
stc
lods
pop
lret
out
adc
pop
adc
push
inc
aad
es
xorl
pop
jmp
cmpsl
in
and
dec
sub
pushf
jns
sarl
inc
lods
sti
loopne
cld
imulb
fmuls
dec
inc
mov
stc
jecxz
jo
cs
sub
and
xchg
mov
cli
loope
fldt
xor
rcll
mov
or
nop
sub
mov
int
sar
mov
lods
and
cs
push
aam
jnp
and
xchg
sub
es
das
ret
mov
and
cmc
stos
push
and
mov
sar
push
aam
add
sbb
add
mov
hlt
mov
loop
push
divl
shrb
add
mov
leave
lds
xchg
inc
mov
jns
popf
sub
inc
lcall
jmp
adc
jmp
je
jb
addr16
ret
push
arpl
sahf
add
push
push
scas
in
jl
sbb
adc
ljmp
sarb
mov
mov
andl
xchg
cmp
xchg
xor
xchg
xor
push
into
aas
mov
cmp
push
mov
cmp
mov
add
sub
mov
and
add
ljmp
out
pop
out
sub
mov
xchg
xchg
in
sbb
dec
mov
jmp
mov
xchg
daa
adc
fdivrl
mov
loope
lods
and
cmp
xchg
inc
mov
cmp
dec
mov
push
fisubrs
or
xor
mov
or
xchg
mov
test
mov
inc
sub
je
int3
xor
jnp
xchg
cltd
jb
int
mov
dec
insl
loopne
loop
mov
inc
clc
sbb
loop
jno
ds
cli
add
sbb
icebp
loop
out
and
out
pushf
in
mov
pushf
mov
push
pop
in
push
and
out
lds
xchg
mov
xchg
pop
fisubrl
shlb
shlb
add
mov
jo
cmpl
dec
push
sbb
loope
fldcw
jecxz
xor
jno
sbb
adc
mov
ja
cld
sub
add
shll
stc
pop
and
add
mov
sbb
inc
into
push
ljmp
pushf
mov
jae
dec
lds
mov
rclb
jge
sbb
adc
sbb
sbb
cmc
xchg
ss
stc
hlt
jmp
ret
rdpmc
inc
dec
out
scas
jo
fadd
fisubrs
pop
cwtl
into
mov
jge
xchg
scas
aam
inc
inc
shl
addl
fldl
jnp
inc
xor
into
push
or
or
jle
mov
push
in
adc
cli
movsl
scas
fists
movsb
pop
lahf
mov
mov
lahf
cmp
inc
icebp
adc
mov
dec
movsb
int
repz
jo
pop
cmpsl
sbb
pop
pop
rclb
insl
dec
mov
cmp
lahf
jp
insb
push
cmc
jbe
lret
addb
xor
fs
mov
xor
pop
pop
adc
xor
sub
inc
shr
add
enter
leave
int3
sar
adcb
jmp
addr16
jecxz
insb
sbbl
jecxz
sbb
cs
sti
add
xchg
cmp
push
pop
or
jae
insb
sbb
or
bound
sbb
mov
mov
mov
ror
nop
test
xchg
ja
frstor
cmpsb
lods
xor
iret
shr
int
cmp
mov
sahf
icebp
mov
iret
xchg
fstp
shll
dec
inc
push
add
push
sahf
or
pop
scas
push
stos
lea
mov
cmp
mov
lock
xor
fpatan
push
mov
sbb
cmc
enter
ljmp
xor
cmp
sbb
xchg
fs
fstps
inc
mov
out
sbb
leave
mov
pop
jns
inc
rcll
sub
xchg
inc
push
sbb
push
lcall
or
cmp
mov
cld
cmp
xchg
out
push
mov
lds
outsb
jmp
ss
insl
loope
inc
add
in
repnz
xlat
sub
in
imul
add
add
mov
push
cltd
sub
xchg
xchg
dec
sub
push
stc
mov
mov
adc
jne
and
mulb
pop
lds
inc
cld
add
push
mov
ja
cmp
mov
call
lods
sbb
inc
mov
sbb
js
idivb
and
je
or
jg
cmpsb
cmp
push
push
jne
jle
sub
adc
test
scas
push
mov
test
inc
test
andb
cmp
jl
and
aaa
add
mov
repz
mov
out
inc
inc
add
lret
jno
filds
aas
clc
mov
enter
cltd
fmull
push
jnp
outsb
jmp
xchg
popf
xor
or
lods
adc
in
je
push
hlt
cwtl
daa
sti
fs
mov
scas
in
in
neg
test
add
arpl
xor
xchg
pop
cld
test
sub
repnz
bswap
mov
mov
mov
sbb
cmc
cmp
push
push
rorb
test
or
lahf
cli
mov
adc
push
nop
daa
mov
mov
mov
mov
js
add
scas
cmpsb
aas
lds
outsl
adc
xor
stos
cld
and
jmp
int3
pop
adc
pop
shr
rclb
icebp
int
mov
mov
cltd
dec
pop
add
andl
add
push
dec
sti
in
loope
lret
repz
mov
mov
aaa
pop
loop
adc
icebp
sub
stc
fs
jno
ror
and
lds
aad
dec
jbe
sarb
and
add
push
cmp
and
sbb
and
loopne
inc
mov
out
gs
insl
cmp
xchg
in
mov
ret
jbe
sub
mov
push
rcl
psubusb
mov
jmp
rolb
sbb
and
cld
sub
loop
jbe
add
je
int
scas
xchg
and
outsb
fbld
push
icebp
cmpl
in
loope
add
jno
cmpb
loope
xchg
jno
ljmp
data16
cmp
push
mov
cmpsb
and
cmp
ja
cs
data16
push
or
scas
loope,pt
push
mov
mov
push
dec
les
cmp
das
inc
testb
add
in
mov
lods
mov
enter
sub
lcall
jle
incl
mov
fwait
or
adc
jp
nop
insl
jg
lods
mov
out
in
jecxz
cmpsb
outsb
fucomi
mov
mov
ljmp
pusha
sarl
jae
mov
imul
mov
pop
cli
adc
fs
incl
add
out
adc
jnp
mov
inc
fnstenv
imul
sbb
xchg
rcrl
pop
rclb
lea
lahf
cmp
or
mov
lahf
sbb
xor
jge
rclb
dec
adc
xor
xor
mov
jl
mov
dec
les
jg
sub
push
fsubl
dec
mov
and
mov
pop
or
jg
and
sbbl
dec
dec
insl
and
mov
dec
mov
ds
jnp
mov
js
jecxz
and
mov
mov
fmul
bound
push
xor
pop
in
push
push
mov
lcall
ljmp
and
hlt
adc
in
sahf
icebp
sub
mov
mov
pop
xor
stc
inc
mov
clc
pop
sbbb
mov
sub
mulb
sbb
xchg
popf
testb
scas
inc
mov
repz
or
sub
push
jle
or
sub
sbb
imul
cmp
sbb
jno
fiadds
or
sbb
xor
add
pusha
adc
dec
test
popa
cs
pop
adc
inc
mov
loope
test
fstl
call
sub
mov
ljmp
xor
jp
imul
cld
push
mov
mov
mov
adc
xchg
push
push
sub
mov
add
gs
sti
adc
pop
outsb
and
popa
jl
and
test
jmp
aaa
mov
sbb
sub
sub
xchg
mov
sbb
test
xchg
movsl
or
jne
mov
adc
dec
subl
or
and
mov
mov
jbe,pt
test
inc
jns
in
inc
and
mov
sbb
inc
pop
or
out
lret
nop
test
mov
push
lahf
mov
fistpll
movsb
pop
jno
push
insb
add
jecxz
std
mov
in
inc
inc
xchg
jns
hlt
fwait
sub
addr16
out
psrad
or
lcall
inc
xor
ds
mov
or
mov
cltd
pop
lcall
mov
hlt
or
arpl
jle
and
sub
aam
ja
and
call
imul
int
stc
inc
pop
and
or
subb
jge
or
mov
out
sub
lods
mov
mov
cli
jp
add
cltd
pushl
xlat
sbb
jno
or
adc
push
jne
stos
cmp
inc
xchg
je
mov
push
in
sub
das
aad
cmpsl
pushf
adc
in
sub
int3
test
mov
and
cmp
lods
and
mov
jl
cmpsb
fwait
pop
hlt
inc
sbb
test
addr16
and
push
push
sub
or
dec
pop
lret
jmp
inc
dec
test
or
jp,pt
sbb
jmp
enter
xor
js
lock
dec
xor
mov
lret
pop
shlb
jo
mov
push
orl
pop
pop
mov
orl
pop
jmp
rorb
xor
mov
mov
dec
loopne
jmp
ret
or
sti
ljmp
mov
and
xor
sbb
xchg
add
jle
push
jp
enter
pop
enter
or
add
jge
push
in
out
cmp
mov
jnp
movsl
push
and
jo
mov
sub
stos
or
xchg
and
cmp
loop
adc
aad
or
or
adc
rorb
mov
and
jmp
jnp
aam
into
adc
dec
jge
cltd
and
out
pop
mov
xchg
scas
inc
lcall
fwait
push
idivl
ret
jo
mov
or
push
jbe
cmpsl
outsb
pop
dec
out
mov
adcb
ficomps
push
adc
dec
stos
pop
enter
ret
arpl
xchg
sbb
sbb
pop
mov
test
push
imul
jae
push
jae
fs
fisubrl
cwtl
jp
push
xor
jmp
negb
push
dec
push
out
or
das
test
fnstcw
add
cmp
xchg
jl
sub
mov
popf
mov
adc
add
in
push
pop
push
sbb
into
call
pop
stc
and
and
out
dec
dec
cmpsb
mov
pop
xchg
fdivl
xor
xchg
mov
and
repz
mov
in
xchg
mov
push
adc
sbb
in
mov
stos
xchg
jge
popf
sahf
ss
adc
xchg
push
addb
pop
lea
xchg
mov
pop
imul
std
pop
insl
jno
xchg
dec
sahf
sbb
adc
outsl
or
xchg
jo
int
ret
xchg
cwtl
push
js
fistpl
xor
inc
movsl
pop
sbb
mov
cwtl
iret
cmpsb
xlat
std
mov
inc
loope
roll
loope
lret
das
jno
idivb
aaa
fcompl
dec
inc
faddp
or
ror
mov
in
adc
cmp
pop
dec
ljmp
lret
fiaddl
jmp
jp
jmp
jo
sub
int3
xchg
xchg
rclb
fistpl
and
xchg
out
imul
xor
dec
push
rcrb
loop
jmp
or
in
jnp
jno
sbb
mov
hlt
fnstenv
lods
jns
out
push
push
outsb
mov
xchg
icebp
lea
sub
stc
arpl
notl
cmp
cmpsl
imul
sub
addr16
addr16
mov
and
mov
pushf
out
adc
jg
or
stos
jecxz
rcrb
outsb
incl
mov
mov
loope
cs
into
repz
xor
int3
sub
pop
sbb
jle
push
lret
repz
cmp
cli
lods
or
jnp
mov
sbb
js
jmp
fistpll
stos
popf
or
pop
jo
pop
adc
aas
xchg
dec
and
push
mov
add
push
scas
fistpll
shll
lret
stos
jno
xchg
ror
sbb
sub
dec
nop
inc
in
pop
int3
divl
xor
test
mov
push
addr16
stc
pop
shrb
push
mov
iret
cli
je
dec
jns
gs
cli
xchg
xchg
popa
push
inc
cmp
out
pusha
sub
xchg
mov
outsb
repnz
pop
ljmp
sub
icebp
jp
mov
cmp
mov
test
cmp
pop
insb
rcrb
xlat
push
fsubr
adc
test
push
lods
push
or
add
popf
xchg
xor
xchg
mov
mov
xor
lods
in
pop
dec
jp
jmp
add
mov
mov
js
pop
sbb
xchg
enter
mov
shlb
dec
push
xlat
inc
rol
mov
stos
int3
pop
movsb
mov
dec
hlt
outsl
add
aad
sarb
xchg
dec
clc
jnp
lcall
push
lods
xchg
dec
mov
xchg
test
into
pop
mov
jge
testl
cmp
mov
insb
push
fistl
sbb
fiadds
orl
push
mov
arpl
lret
pop
or
out
jmp
imul
inc
pop
xchg
and
lea
push
enter
sbb
nop
push
notb
scas
sbb
pop
sti
mov
pop
outsb
rcrb
mov
out
out
or
enter
adc
push
into
std
fisubrl
inc
imul
testb
lcall
mov
or
iret
test
xor
js
pop
mov
mov
adc
outsb
mov
add
adc
aad
push
enter
or
neg
js
lret
jbe
xor
insl
push
fwait
push
or
fs
mov
ret
mov
mov
inc
xor
sub
and
push
ds
out
out
fsubs
out
insb
cli
dec
nop
mul
bound
xlat
test
pop
mov
push
cmpsb
xchg
imul
outsb
lods
mov
xor
sub
sti
xchg
into
iret
pop
loopne
aas
jns
or
jae
cmp
mov
cmp
iret
fists
sbb
adc
shlb
out
xchg
inc
mov
push
mov
clc
out
arpl
test
mov
jmp
loopne
loope
inc
repnz
loopne
in
mov
test
ss
pop
or
inc
xlat
dec
call
mov
push
idivb
adc
mov
rep
lods
and
out
pop
xchg
leave
imul
xor
cmp
mov
xchg
jmp
push
stc
addb
cli
mov
ss
cltd
or
push
cmp
jb
movsb
jle
inc
negb
jecxz
jle
pop
repz
add
and
bound
adc
icebp
mov
fcomi
or
test
pop
lds
insb
add
xchg
mov
notl
js
and
cli
pop
dec
and
cmp
pop
sbb
in
lcall
mov
inc
adc
push
jnp
xor
pop
pop
dec
lea
or
sar
cltd
or
out
mov
mov
ds
sbb
jecxz
push
jns
lret
in
push
in
pop
out
or
mov
outsb
push
in
sbb
mov
clc
xchg
and
jo
or
dec
loopne
adc
les
je
sbb
mov
mov
dec
in
scas
incb
fiadds
sub
and
cltd
mov
cltd
mov
aaa
out
push
pop
ret
sbb
lret
adc
mov
iret
imul
lahf
dec
mov
mov
std
movb
clc
sti
push
ljmp
repz
cltd
shl
popa
sbb
add
or
rcr
ud2
insl
xor
inc
mov
mov
pop
mov
cmp
bound
adc
popf
adc
xchg
push
nop
jns
add
jo
mov
dec
loop
sbb
xchg
and
adc
pushf
xor
ds
mov
mov
cmpsl
repnz
ljmp
lret
xchg
and
std
jecxz
int
ds
dec
xor
add
mov
inc
test
enter
imul
mov
cmp
lds
cmp
pop
repnz
mov
sti
or
cmp
xor
popa
stc
shrl
dec
sbb
out
jo
loope
pop
adc
mov
cmc
outsb
cmp
xor
ja
js
arpl
or
lock
insl
mov
mov
mov
and
inc
enter
in
mov
xchg
cli
lcall
outsl
push
out
and
fsubrl
enter
rep
or
lahf
adc
sub
nop
loopne
cld
imul
dec
icebp
adc
cltd
or
fs
jno
push
or
sbb
xor
lds
pusha
outsb
or
fucomi
mov
loopne
push
jge
pop
sub
ret
in
cs
sub
imul
ret
push
je
or
cmpl
adc
cmc
cmp
fcmove
or
js
ljmp
pop
filds
aas
rcll
mov
sub
adc
enter
and
xorl
int3
sti
movsl
xorl
mov
lock
adc
cmpsl
lds
int3
jns
dec
sub
pop
repnz
mov
push
cmp
push
aaa
xor
movsb
xchg
cmp
adc
in
or
sub
jl
mov
cld
into
adc
inc
lret
dec
xor
xor
mov
gs
arpl
insl
pop
cltd
aad
jg
push
pushl
arpl
imul
cmp
mov
fnstcw
mov
jne
cmp
mov
mov
xlat
icebp
test
or
fisttpl
mov
xor
dec
cltd
cmc
xchg
stos
pushl
inc
sar
add
repnz
xchg
mov
sub
and
and
xor
ja
imul
sbb
repnz
orl
dec
int3
fistpl
push
mov
sub
sub
filds
cmp
bound
mov
mov
sbb
out
cmp
xchg
out
fbstp
aam
xor
sub
in
mov
lds
in
nop
in
jge
clc
loopne
xchg
dec
xchg
mov
jg
push
cmp
adc
add
dec
out
jecxz
jmp
dec
fdiv
ret
adc
xchg
test
or
dec
add
js
mov
jae
pop
fst
int
dec
loope
pop
dec
jnp
adc
das
pop
mov
fadds
mov
push
dec
mov
loop
popa
addr16
add
out
pop
mov
push
lret
int
cwtl
iret
call
insl
dec
dec
nop
jnp
mov
xor
repz
fs
pop
call
pop
push
pop
mov
pop
push
pop
nop
pop
out
repz
fwait
cwtl
sbb
ret
pop
arpl
push
ret
cltd
push
sbb
xor
movsb
or
mov
mov
jo
xchg
dec
repnz
dec
andb
loope
sti
or
jno
aad
int
stc
xlat
push
addb
hlt
mov
sub
inc
dec
fdivrs
pop
std
mov
gs
adc
adc
aas
fiaddl
cwtl
outsb
out
jmp
mov
outsb
jne
mov
ljmp
or
dec
push
push
mov
mov
les
negl
jmp
hlt
and
out
test
sub
int3
cmpb
jnp
sbb
lret
xchg
test
adc
push
inc
mov
dec
int
or
add
sbb
add
xor
les
cmp
inc
pop
dec
icebp
lods
mov
cmpsb
test
out
sbb
jno
pushf
jle
ss
fwait
hlt
pop
adc
out
cmp
jge
mov
lods
inc
dec
mov
xchg
aas
dec
inc
push
cmpsb
movsb
jecxz
jne
pop
imul
xchg
cmp
stos
aaa
orb
lcall
call
and
xor
mov
inc
rcll
sbb
pop
jecxz
add
scas
into
inc
mov
fs
push
add
das
sub
fcmovu
cli
adc
in
in
xchg
fnsave
jle
xchg
in
pushl
push
pop
movsb
mov
xchg
jno
add
mov
movsl
popfw
pop
mov
scas
movsb
push
xchg
fxch
cmp
fisubrs
and
push
and
jecxz
aam
xorl
xchg
inc
ret
xchg
or
stos
cwtl
lret
push
jb
mov
mov
popf
test
xchg
out
push
fdivrl
cmp
jno
subl
add
in
fcmovbe
outsl
imul
inc
pop
cmp
int
cmp
dec
scas
fistl
pop
test
dec
out
jge
jp
ror
add
pusha
or
sub
mov
mov
mov
dec
rcll
cmpsb
ret
fsubl
arpl
fisubs
jno
cmp
das
xchg
fdiv
xchg
std
mov
jae
fs
or
rolb
jp
inc
ficompl
sub
pop
fsubrl
imul
jne
imul
ret
sbb
jecxz
cmp
jbe
lods
addr16
jl
retw
push
dec
scas
cmp
fcomps
repnz
sbb
arpl
cmp
jo
add
sbb
mov
xchg
ficoml
mov
test
mov
mov
sahf
repnz
pop
cld
test
lock
cmp
inc
cmp
fwait
stos
dec
and
push
xlat
stc
addr16
xchg
mov
les
pushf
sub
jle
lahf
ret
push
out
hlt
push
fstl
ss
rolb
data16
arpl
jnp
in
jb
xchg
cmp
push
pop
mov
mov
popf
das
shll
inc
pop
data16
pop
push
ret
ret
cwtl
cltd
lods
xchg
pushf
sbb
jnp
dec
mov
icebp
xor
or
les
mov
mov
add
fwait
aad
mov
fldcw
or
jno
mov
cld
clc
pop
mov
cmp
inc
aam
repz
cmpsb
and
or
mov
jae
rcrb
mov
and
mov
je
fbstp
sub
jecxz
iret
insb
push
lods
test
sarl
sbb
cmp
rclb
stc
adc
mov
jno
movsl
leave
lret
xor
notl
addb
add
mov
pushf
in
add
xor
leave
mov
lods
mov
test
mov
cld
ret
sub
cmp
xchg
cmpsl
clc
lods
lea
cmp
xor
and
rcll
orb
push
mov
xchg
push
shlb
jns
cmpsw
jb
loopne
sarl
push
xchg
pop
or
leave
out
test
inc
std
dec
mov
dec
push
lret
outsb
dec
push
sub
js
mov
jge
aam
daa
xorl
mov
inc
mov
push
addb
pushf
std
lret
popf
cwtl
ss
nop
and
xchg
push
mov
stos
jl
clc
mov
and
gs
xchg
mov
pop
mov
jnp
js
pop
xchg
inc
cmp
repnz
insb
mov
xchg
lahf
sbb
ss
and
fbld
movsb
lods
sbb
xlat
push
xchg
leave
dec
sbb
subb
xlat
add
in
pop
fsub
pop
adc
shlb
loope
jge
shlb
jle
stos
insl
jecxz
loope
je
hlt
jo
jne
nop
fs
fldcw
adc
xor
mov
push
insl
mov
repnz
xchg
sub
rcll
pop
imul
mov
outsb
imul
and
mov
or
adc
pushf
add
stos
out
into
mov
notb
sbb
xlat
push
xchg
mov
outsl
push
fidivl
pop
adc
xor
in
pusha
aad
mov
adc
xor
mov
sub
out
std
jo
mov
into
loop
sbb
cmp
pop
faddl
fstpt
push
dec
fcmovb
mov
dec
jne
insl
mov
scas
push
iret
dec
xor
sub
mov
lock
pop
fidivs
cmp
add
xchg
imul
in
and
call
add
aas
sbb
or
es
test
xchg
xor
xor
hlt
xchg
pop
mov
jmp
jmp
pop
pop
insl
jmp
lahf
xor
aam
or
dec
movsl
ficompl
xor
fistl
jmp
leave
sub
cmp
out
dec
dec
push
test
out
xchg
sub
push
scas
adc
jl
jecxz
jle
jne
bound
xor
insb
insl
mov
and
arpl
adc
nop
mov
sub
mov
cmp
insb
xchg
mov
stc
push
jmp
pop
call
pop
xchg
push
lea
rorb
pop
icebp
mov
mov
aam
mov
out
push
lcall
adc
outsl
xchg
jge
aas
nop
dec
jge
mov
leave
fbld
sbb
sub
jnp
aaa
mov
xor
mov
push
pop
addr16
mov
sub
repz
jmp
mov
jg,pn
fstpt
stc
sbb
out
jnp
mov
push
xchg
push
sub
sub
and
scas
mov
fdivrl
ret
ds
fincstp
mov
ljmp
cs
sahf
sbb
push
and
popf
icebp
xor
ja
cmc
popf
ds
inc
or
repz
add
aam
iret
jne
les
cmp
cmp
pop
jl
cmpsl
into
call
or
popf
mov
je
or
mov
pop
scas
xchg
repz
mov
sbb
xor
push
mov
rorb
movsl
xchg
dec
push
lret
jecxz
inc
js
mov
popf
je
jle
cmp
or
test
ja
fs
mov
mov
xor
lods
and
lcall
rorl
sbb
mov
shl
mov
xor
xor
xlat
push
sahf
xchg
cmp
mov
push
cmc
dec
addb
mov
add
sub
testl
xor
lcall
shlb
adc
jle
int3
imul
addr16
pop
inc
xrelease
or
pop
enter
dec
mov
push
cs
pop
enter
cmp
xor
fs
or
xor
mov
cmp
fisubl
shl
subl
repnz
pop
mov
pop
popa
into
add
push
out
xchg
cmp
fidivl
clc
fucom
mov
mov
inc
adcl
push
inc
aam
xor
adc
fisubrl
cmp
mov
inc
cmp
jmp
movsl
fcompl
fadds
mov
sbb
std
icebp
xchg
stos
mov
sub
out
int
jmp
pop
test
cld
pop
out
adc
ds
test
bnd
mov
jne
inc
scas
daa
les
loop
nop
shl
movsb
jb
test
js
cmp
sbb
pop
int3
jbe
div
les
fdivr
cmpsb
cmc
bound
push
dec
ja
je
roll
les
mov
and
cmp
dec
ds
jg
repz
pop
pop
pop
and
jmp
xchg
mov
fs
fiadds
loop
jge
test
in
fsubrs
sub
jg
repz
xchg
jmp
and
inc
int
std
lock
ljmp
in
add
pop
push
dec
push
mov
mov
in
ss
xor
imul
mov
stc
sbb
pop
scas
dec
fnsave
hlt
ja
out
pop
rcrl
je
xchg
or
nop
inc
fistpll
test
add
xor
test
jle
rorb
mov
sub
mov
loop
mov
insb
mov
adcb
sbb
aas
aad
imul
jge
sub
mov
outsb
sbb
jno
in
sbb
sbb
jge
mov
shrb
dec
dec
dec
aam
mov
and
mov
jo
ja
adc
mov
pusha
add
fwait
jl
inc
es
push
inc
into
push
divl
jg
arpl
test
xor
ret
push
add
push
dec
imul
addr16
arpl
std
nop
dec
push
push
ficomps
mov
jg
shr
lock
es
sbb
jg
inc
out
nop
inc
hlt
and
dec
clc
fcmovnb
cmpsl
loope
add
push
scas
faddl
push
cmpsb
sub
insl
movsl
rcll
ror
and
dec
adc
xor
mov
popf
jae
xor
or
jp
mov
pop
or
stos
mov
fcompl
adc
push
popa
push
loope
xchg
das
jbe
dec
shlb
out
adc
hlt
push
adc
and
sarl
out
popf
add
sub
sarb
dec
cld
loopne
push
jmp
jns
rcrb
dec
inc
cld
adc
iret
js
fimuls
sti
shl
jge
enter
cmp
or
scas
insl
in
jmp
vpunpckhbw
stc
xor
ds
mov
cmc
xor
es
cmp
pop
cmp
test
js
xor
cmc
pop
xchg
jge
sarb
jns
xchg
jb
addl
movsl
adc
push
sahf
add
jno
ret
sub
loope
sub
cmp
sbb
sbb
lds
nop
imull
mov
or
iret
js
mov
loop
sub
sbb
imul
cmp
fwait
mov
dec
std
add
dec
pop
sbb
cmp
test
sbb
and
xor
push
sub
and
aad
and
adc
call
or
fwait
aas
or
inc
dec
leave
fucomi
sub
xchg
cltd
mov
scas
cmp
mov
inc
xrelease
push
imul
gs
mov
push
xchg
stc
in
mov
popa
mov
push
push
andb
je
mov
out
add
sar
dec
cld
xchg
jns
jno
push
outsl
and
mov
cmp
cmp
jg
jb
mov
jecxz
mov
mov
inc
outsl
mov
pop
scas
ret
pop
aad
out
call
mov
cmp
xchg
mov
gs
insb
stos
sub
popa
es
mov
inc
rcl
and
jg
inc
mov
cs
aaa
mov
mov
stos
xchg
mov
push
insb
addr16
aam
std
sbb
pusha
mov
out
adc
sti
add
cmpsb
add
mov
pop
push
adc
add
cmp
cmpb
out
mov
out
xchg
adcb
ret
inc
mov
jbe
pop
dec
push
sub
pop
pop
mov
pushl
adc
sti
pop
push
sbb
and
mov
in
jge
xor
jo
shlb
xchg
lods
jecxz
adc
enter
ljmp
sbb
add
ds
inc
faddl
sahf
iret
shlb
ljmp
ja
xchg
fdivrp
ret
ss
inc
add
test
insl
xorb
mov
test
inc
mov
pop
mov
mov
xchg
cmc
xchg
adc
xor
mov
jl
cmpsl
xor
shr
addr16
inc
sbb
push
int3
xchg
adc
jge
jge
sarb
lods
mov
dec
jo
jbe
push
mov
dec
sbb
jbe
ret
fwait
sbb
lods
imul
push
adc
cmpsb
sbb
pop
sbb
shlb
ret
xor
sbb
es
test
andb
jg
pop
add
hlt
add
cmpsb
int
nop
cltd
movsl
xchg
out
pop
pop
inc
decb
imul
sub
push
and
xor
adc
push
out
pop
nop
add
into
xor
lods
push
icebp
and
and
fisubrl
adc
sbb
mov
sbb
imul
jns
mov
sti
nop
cwtl
idivb
popa
out
es
mov
pop
fiadds
std
dec
adc
sub
cmpsb
jo
orl
fistl
andb
sbb
sub
mov
sub
jnp
fwait
cmp
and
iret
sbb
and
sbb
sub
movsb
inc
lret
mov
sub
mov
push
repnz
xchg
adc
rcr
lods
sarl
jnp
call
rcrb
fsub
jbe
sub
out
push
cmc
imul
xchg
mov
lret
stc
in
jmp
data16
xlat
out
cltd
inc
pop
das
leave
mov
mov
stos
test
jmp
pop
loope
movups
inc
xchg
xchg
jp
insl
in
leave
fbld
jge
lret
out
xchg
fisubs
add
dec
test
mov
pop
cmp
or
xor
mov
jmp
scas
cmp
cs
data16
dec
shll
test
mov
inc
mov
sub
xor
sub
subl
adc
aas
xor
jnp
repnz
scas
shrl
gs
push
into
fildl
shlb
push
cld
dec
sbb
mov
or
add
pop
mov
mov
jbe
fiaddl
mov
adc
test
cmp
mov
pop
ss
addr16
bound
sbb
pop
and
ficoms
mov
sbb
ds
jle
add
rolb
dec
cld
mov
jno
and
mov
pop
aas
mov
sub
stos
mov
nop
lahf
mov
dec
popa
icebp
or
xor
or
mov
add
and
push
sbb
fdivrp
stos
pop
jae
xor
imul
xchg
dec
hlt
xchg
cmpsb
cmpsl
cmp
jno
xchg
andl
push
lahf
mov
sub
faddl
rcrl
ljmp
fs
das
jle
out
push
inc
daa
inc
mov
in
sub
and
dec
lods
out
jle
movsl
scas
xor
icebp
sti
pop
mov
insb
fisttps
add
or
pop
rcrl
fs
cmp
or
dec
push
shll
popf
cmp
jle
addr16
push
dec
pavgw
les
fdivs
rclb
call
push
add
mov
xchg
outsb
inc
roll
dec
orl
and
xor
push
xchg
mov
adc
pop
jecxz
daa
pop
mov
inc
and
pop
mov
enter
in
push
jbe
shrl
mov
jno
divb
inc
sbb
sub
ja
add
ss
in
leave
add
inc
add
jmp
rcl
sbb
sub
add
loope
jl
adc
sbb
pop
mov
dec
push
clc
pushf
outsb
and
add
icebp
cld
mov
push
jno
scas
into
push
jne
ja
scas
test
add
fcomp
inc
cmpb
mov
pop
push
add
mov
or
data16
inc
leave
xor
in
mov
loope
sub
sub
and
test
adc
push
mov
dec
imul
adc
addr16
pop
push
jo
or
cmpb
lds
push
mov
xor
icebp
aad
or
int
cmp
pop
pop
push
ficomps
push
loopne
sahf
test
or
jge
div
mov
or
leave
xlat
test
cmp
stc
stc
push
or
pushf
enter
stc
cmc
dec
ss
mov
dec
mov
loope
mov
in
fsub
arpl
inc
shlb
mov
or
cmp
fidivrl
mov
mov
dec
fsubs
mov
fistpl
lods
mov
pop
adc
mov
mov
test
mov
xchg
jl
sub
iret
dec
frstor
add
outsl
sub
js
lcall
lret
les
add
sub
ret
aam
xchg
mov
mov
pop
enter
dec
sbb
repz
pushf
aad
jae
pop
notl
xchg
int3
movsl
es
fdivr
ror
jmp
adc
mov
das
and
ficoms
in
mov
jge
mov
and
fmul
and
inc
aaa
or
jle
pop
and
push
into
adc
lret
iret
mov
dec
jp
lock
movsb
ret
sbb
xchg
lds
outsl
scas
xchg
mov
xchg
sbb
idivl
mov
adc
scas
sub
pop
push
and
out
cmp
sub
pop
or
movsb
push
int
or
add
lods
pop
inc
push
xchg
pop
and
xchg
call
std
cwtl
cs
gs
ret
cwtl
push
jecxz
sbb
fsub
push
pushf
push
std
mov
popf
mov
mov
mov
xor
mov
adc
insb
sbb
sbb
imul
mov
pop
adc
sarl
scas
call
jmp
sub
mov
sbb
inc
sub
dec
mov
adc
je
loopne
dec
jle
repnz
push
or
lea
xchg
nop
jecxz
insb
sub
addr16
mov
jne
pop
shll
jl
mov
jg
add
add
loop
mov
pusha
test
aas
in
mov
xorb
mov
sub
pop
pusha
or
push
mov
pop
cmp
fwait
out
lods
std
repnz
adc
frstor
xchg
mov
arpl
sti
mov
pop
xchg
lret
fwait
pop
sbb
jl
into
sti
mov
cmpsl
dec
scas
fdivrl
adcl
leave
imul
adc
inc
push
call
xor
xchg
ret
stos
cmp
adc
pop
dec
clc
push
cmp
aas
and
out
adc
jge
push
or
sbb
scas
fwait
int
jecxz
aaa
imulb
xor
pop
xchg
cmc
jb
jle
sahf
iret
cmovge
inc
cmp
ret
dec
mov
je
xchg
je
jne
pop
into
xchg
jo
sub
jnp
aaa
mov
stos
pop
and
test
ficomps
pop
pop
add
gs
addr16
jo
cmpb
popa
pop
or
pop
adc
js
xchg
rol
push
int3
sbb
shl
data16
test
add
div
jns
fdivs
test
movsb
in
mov
and
shlb
xor
out
loope
loop
cld
fndisi(8087
jmp
pop
popf
mov
adcl
cli
sarl
add
call
subl
int3
add
xchg
cwtl
lcall
leave
or
fsubl
cli
mov
test
scas
and
push
aad
dec
sub
jecxz
rcll
push
add
mov
adc
xchg
xchg
pop
in
mov
addr16
in
int
xor
rcll
scas
mov
imul
lock
fwait
dec
or
mov
loope
or
cmp
inc
or
gs
ret
xor
push
push
adcb
call
cmc
xlat
jns
ret
lock
pop
pusha
inc
cs
ret
imulb
or
pop
pop
mov
cmpsl
mov
xor
cli
test
sti
or
mov
decb
dec
aam
mov
rcrl
clc
stos
push
xor
fisubrl
fsts
iret
adc
or
dec
xor
jle
lahf
incb
testb
jns
test
pop
outsb
push
sbbb
mov
push
or
stos
mov
js
push
mov
sub
jb
gs
cmp
out
jge
inc
sub
js
mov
cwtl
push
jns
push
rolb
dec
xor
pushf
mov
push
mov
bound
inc
sub
pop
clc
push
cli
xchg
test
cmp
cmp
lret
jns
mov
cs
test
insl
test
mov
cld
sub
mov
xor
inc
daa
sbb
in
xchg
jno
adc
int
pop
sub
cmp
cwtl
push
mov
idivl
icebp
aad
loopne
incl
and
lret
test
rcr
stos
adc
mov
int
ret
dec
dec
push
push
in
scas
mov
mov
add
rep
adc
xchg
add
jg
add
movsb
popf
std
mov
and
jmp
mov
ljmp
out
mov
mov
or
addr16
sub
into
push
xchg
mov
fldcw
inc
sahf
insb
cmp
scas
cmp
jbe
lcall
lcall
stos
insl
addr16
adc
push
jge
in
movsl
and
test
mov
sub
std
add
aad
jae
sbb
push
pop
xlat
ffree
dec
mov
cmp
enter
test
xor
adc
xor
cmp
inc
out
push
repnz
xor
ljmp
sub
lods
mov
push
add
in
xchg
imul
fwait
xchg
clc
push
shrl
or
adc
xor
xchg
mov
repz
lock
or
out
or
pop
test
sbb
rcll
leave
dec
push
sahf
and
notl
fbstp
sub
movsb
in
jmp
jae
scas
inc
xor
fidivrl
rdmsr
daa
jnp
sub
outsb
ds
mov
ret
xor
lock
dec
xor
mov
test
cli
cmp
and
sub
pop
ss
sbbl
xchg
sub
dec
pop
inc
adc
xchg
sbb
sub
or
inc
sti
lahf
cs
lods
mov
xchg
mov
ljmp
ret
aam
rorl
xchg
pop
les
iret
sahf
sub
push
roll
les
lret
stos
mov
or
mov
daa
in
mov
daa
cmp
cmp
xchg
ret
xor
or
push
pop
add
rcll
sbb
lds
cwtl
xchg
inc
xchg
push
imul
jae
jle
xchg
jg
movsl
mov
pop
es
jae
sarl
cmp
insl
outsl
and
jge
test
out
addl
repz
stos
fsubrl
es
incb
dec
repnz
test
push
sti
cmp
or
mov
or
pusha
jno
clc
sub
out
gs
sbb
stos
lret
adc
out
cwtl
ja
xchg
call
pop
shufps
ret
adc
out
cwtl
xchg
mov
mov
pop
lods
cli
adc
xchg
push
and
mov
dec
mov
bound
inc
imul
adc
cld
mov
push
pop
shl
add
push
or
add
in
movsl
idiv
or
jmp
sbb
aam
sub
daa
loope
mov
pushf
pop
stc
add
and
clc
decl
lods
mov
iret
shrb
stos
les
mov
jnp
lods
push
into
fisubrl
push
in
cmp
movsl
adc
or
popf
data16
es
mov
clc
fdivrs
dec
jmp
les
push
pop
mov
add
scas
daa
push
dec
fidivrl
mov
mov
mov
or
mov
add
popa
shll
test
pop
out
jae
xchg
sarb
push
repnz
scas
repnz
pop
test
ljmp
shr
cmp
out
jecxz
scas
mov
push
mov
shlb
cmc
mov
into
mov
cltd
jno
lret
fisubs
sbb
sbbb
xor
aad
fcomi
scas
mov
scas
dec
shll
popa
mov
jae
nop
jo
out
sub
pushf
mov
aad
int3
cmpsl
adc
sbb
xchg
das
inc
push
rolb
icebp
xchg
shlb
mov
hlt
adc
daa
mov
pop
movsb
add
push
mov
jnp
push
lret
mov
outsl
imul
xchg
jo
lahf
jmp
pop
lods
sbb
pusha
fmull
mov
mov
add
insb
cmp
sbb
inc
xchg
out
jne
out
xchg
stos
jmp
test
int
xchg
lahf
fs
in
dec
movsb
sub
enter
sbb
mov
stos
ret
and
xor
jno
sbb
push
stc
out
popf
cli
mov
pop
push
divl
mov
sbb
ss
xor
cmpsb
sbb
lahf
mov
or
adc
paddusb
mov
lods
fs
inc
stos
push
arpl
and
pop
cwtl
dec
aad
mov
cltd
decl
dec
dec
enter
jno
pop
lds
mov
shll
jecxz
cli
es
cmpb
jp
hlt
insb
aam
push
ret
push
lds
xor
pop
popa
mov
inc
repz
dec
push
sbb
bound
outsl
icebp
inc
jbe
jb
popa
pop
push
mov
adc
push
dec
testl
test
ja
inc
inc
mov
ficomps
inc
mov
mov
fnsave
rclb
sbb
xchg
movsb
push
or
sub
xor
mov
adc
lods
mov
iret
mov
xchg
call
dec
adc
cmpsl
in
scas
mov
insl
jl
xor
inc
enter
mov
and
pop
lods
insb
dec
cs
push
enter
lds
daa
fidivl
mov
push
mov
xchg
jae
fstpt
add
inc
rol
ficompl
rorl
movsl
ret
xchg
mov
in
cld
jo
and
test
insl
data16
scas
cmp
pop
xchg
inc
daa
add
fdivl
adc
clc
data16
rcll
insl
lahf
jnp
ds
test
in
scas
popa
iret
mov
jnp
add
lret
js
sub
cs
repnz
sub
adc
and
es
dec
leave
arpl
loop
icebp
cs
loop
sub
aas
cwtl
mov
mov
or
lds
push
dec
mov
out
sub
and
das
pushf
sbb
std
sub
mov
roll
sub
push
loopne
and
test
and
sbb
push
jb
adc
es
addl
cmp
jnp
pop
xchg
btc
jne
cmpsl
add
sub
addb
pop
sbbl
cmp
in
cmp
nop
out
mov
pop
dec
mov
or
lods
dec
adc
add
call
es
mov
test
jo
bnd
daa
test
pop
sub
sub
add
sbb
inc
ror
mov
xchg
das
stos
xchg
pop
xchg
rcrb
push
cmc
shll
mov
cmp
enter
in
subl
xchg
xorl
mov
aas
rclb
ret
insb
in
psubsw
mov
pop
mov
pop
in
push
sbb
inc
out
adc
add
fdiv
and
jne
repnz
jae
loopne
xor
jecxz
or
push
xor
mov
fstl
aam
mov
dec
adc
jmp
nop
xchg
sbb
sbb
mov
pop
stos
daa
stos
in
lods
test
xchg
jne
jae
and
nop
jno
mov
pop
scas
out
xor
cmp
dec
ss
js
sub
xchg
pop
jne
and
xor
sub
movsl
sbb
and
shr
cltd
pop
int3
sbb
lcall
pop
sbb
lea
pop
testb
jmp
or
loopne
xchg
mov
dec
pop
push
cmp
jmp
fildl
and
sub
repz
add
into
dec
dec
adc
mov
mov
ss
test
lea
pop
cmp
or
cmc
jmp
sub
in
sbb
mov
push
cmp
daa
mov
lock
sahf
sub
push
outsb
inc
js
push
jb
mov
mov
in
add
push
cs
adc
push
jae
gs
cltd
push
inc
inc
mov
jp
mov
cmpsl
push
rorl
or
scas
fildl
cmp
dec
cmpsb
add
jecxz
jl
mov
and
out
aad
sbb
fcmovb
xchg
pusha
movsb
mov
shlb
loope
iret
jmp
nop
add
imul
add
mov
sub
dec
mov
shrl
mov
push
mov
xlat
cmc
ss
mov
inc
xchg
out
int
inc
dec
pop
push
inc
sub
inc
insb
or
cltd
sub
jae
dec
fisttpl
test
cmp
push
dec
sub
outsb
movsl
fcmovb
mov
push
cwtl
jns
loop
sbb
aam
xor
sbb
orb
pop
mov
adc
sahf
mov
or
jl
ret
add
inc
int
mov
mov
xchg
dec
int
jno
pusha
jae
xchg
lds
ret
mov
xor
sub
mov
loop
jne
int3
js
insl
mov
adc
jle
out
pop
int
or
inc
xor
push
dec
dec
pop
adc
xchg
lods
mov
mov
pop
cli
pop
pop
std
sbb
fistpll
xchg
pop
sbb
sti
adc
mov
mov
mov
cmpsl
rolb
in
pop
add
and
fistpll
cmp
pop
gs
sub
negb
jae
and
add
adc
push
lods
sti
ds
inc
pop
push
add
test
cmp
iret
cmc
in
mov
cmp
pop
mov
es
mov
pop
add
jge
icebp
xchg
push
sub
loope
icebp
cmp
stos
dec
cmp
cmpsl
jb
mov
and
bound
dec
in
cld
out
inc
repnz
mov
ds
sbb
das
and
push
fcom
jnp
cmp
clc
cwtl
aam
fdivs
scas
and
jecxz
pop
pop
jle
movsb
outsl
lods
push
rcll
pop
xchg
cli
jno
jno
int3
sbb
sbb
dec
mov
mov
nop
add
mov
pop
pop
or
sahf
mov
push
cmp
jo
dec
stos
ljmp
pusha
pop
je
addb
or
sbb
push
lret
popf
scas
xor
jle
inc
pop
movsb
mov
shrb
leave
jno
xor
mov
daa
jnp
push
sub
rep
adc
push
rcr
push
jecxz
jmp
leave
or
inc
xlat
mov
push
pop
ret
inc
jecxz
push
adc
adc
inc
das
or
lds
jbe
cmp
xchg
out
push
inc
push
enter
inc
mov
stos
js
ja
inc
test
icebp
shll
pushf
stos
lahf
aaa
adc
jmp
add
fwait
mov
ret
dec
sti
jmp
mov
mov
out
cmc
pop
test
mov
fdivrp
push
call
rorl
mov
imul
jp
pop
fldl
in
adc
xchg
repnz
sub
xchg
mov
adc
jg
add
hlt
movsl
stos
pop
xor
sbb
mov
fmulp
mov
cmpsb
cmpsb
add
xchg
sarl
dec
cmpsl
loop
xchg
and
jle
adc
orl
push
lods
cwtl
mov
icebp
mov
ja
ljmp
push
cli
insl
int
daa
test
scas
imul
pop
mov
xor
stos
mov
mov
outsl
adcb
leave
push
inc
shr
mov
xor
jbe
ja
aad
jle
sahf
push
lods
rclb
pop
push
movsb
in
adc
fnsave
sub
sub
dec
mov
mov
out
xchg
in
jbe
xor
jbe
sub
into
mov
xor
shl
fldenv
int
icebp
or
pusha
cmp
dec
cmp
mov
dec
xlat
ss
stos
jl
push
dec
adc
dec
adc
and
mov
adc
pop
dec
out
xor
gs
fcmovnbe
fucomp
pop
pop
fisubrs
call
pusha
cltd
cmp
lcall
and
popa
jne
push
cmp
loop
jecxz
and
xor
clc
pop
and
out
inc
mov
xchg
loope
or
jnp
ja
dec
jae
aad
hlt
and
jno
push
adc
test
scas
jcxz
jge
outsb
jl
jg
mov
cli
cmp
add
fs
sub
xchg
adc
sub
in
and
xor
inc
jle
shll
inc
clc
sahf
ljmp
lds
int3
inc
inc
mov
fdivs
lret
and
sub
aas
ret
sub
aad
add
adc
lret
inc
lea
repz
mov
stos
dec
push
outsl
shl
out
ljmp
xor
mov
hlt
jg
movsl
lods
pop
sub
outsb
pop
sub
mov
lcall
jl
leave
xchg
test
aaa
ret
push
add
bound
imul
in
rorl
jge
and
jnp
add
aas
cmp
mov
sarl
push
decb
jb
fstpl
add
add
sub
xchg
push
mov
pop
pop
stos
cli
jne
mov
loop
dec
adc
mov
sub
movsb
fbstp
cmpsl
jae
shrl
fistpll
ret
aam
cmp
and
imul
mov
fdivrs
or
fwait
jle
ret
ret
stc
stos
test
pop
xor
pop
mov
lret
idivb
jge
push
les
sti
inc
ja
mulb
or
sub
xchg
xor
mov
cltd
and
sbbl
xchg
inc
adc
or
es
movsb
dec
jmp
ret
xor
ja
loope
call
jns
mov
inc
mov
shlb
js
stos
xlat
push
std
pushf
push
out
xchg
test
or
insb
jge
pusha
xchg
push
js
fs
movsl
das
nop
sub
out
dec
int
imul
hlt
outsb
dec
jno
push
pop
xchg
cmp
mov
push
dec
icebp
jle
jbe
mov
call
and
cmpsb
jne
ljmp
fimuls
movsb
mov
imul
dec
mov
mov
lret
sbb
sub
xchg
mov
test
inc
cltd
pop
push
mov
pop
nop
push
fdiv
dec
jnp
cmpsb
dec
outsb
rcrb
sub
mov
or
pop
mov
loop
mov
push
in
push
outsl
sub
jne
push
push
stos
rcll
loope
out
push
pop
xchg
xor
and
mov
sub
in
in
push
out
ud2
in
in
hlt
sbb
in
dec
mov
mov
mov
cmpsl
lret
les
in
adc
mov
aas
jle
adc
pop
daa
xchg
push
subb
mulb
repz
mov
xor
iret
add
cs
jg
xchg
fistl
cmp
int
mov
sub
je
clc
cmpsb
add
xchg
cmp
dec
inc
lock
dec
dec
xor
lret
jb
cmp
pop
cmp
in
test
xchg
sub
jne
dec
es
imul
adc
push
inc
repz
mov
mov
mov
push
xchg
arpl
cmp
push
arpl
loopne
fists
add
arpl
mov
cmp
shrl
lret
cmp
pushf
daa
dec
fisubrs
ficomps
mov
je
jno
cld
add
add
inc
pandn
mov
mov
mov
fwait
mov
jle
std
xor
test
dec
sbb
xor
mov
sahf
fldenv
imul
mov
adc
lcall
cmp
imul
jge
lahf
incb
jb
pushl
xchg
insb
nop
lret
jg
xor
lcall
lsl
arpl
mov
pushf
xchg
mov
inc
enter
fmuls
push
mov
enter
jmp
adcl
jmp
adc
and
dec
adc
inc
lcall
insb
je
mov
xor
xchg
shrl
test
ret
mov
pop
bound
push
inc
add
std
rcrl
dec
push
adc
cmp
and
xorb
stc
data16
pop
push
imul
leave
pop
insl
ss
pop
sahf
fiaddl
fsub
outsb
imul
dec
push
imul
loopne
outsl
mov
push
mov
test
sub
push
pop
dec
add
dec
cmp
mov
ret
test
rolb
je
cs
pop
xchg
sarl
adc
push
cmp
fs
xor
add
sub
push
jbe
fdivrl
sub
mov
cld
loope
and
and
rcrl
cmp
mov
fbld
cmp
xchg
sbb
cmp
shrb
fbstp
xchg
rcrb
sbb
into
dec
jb
push
int
lock
and
out
jae
not
gs
in
dec
or
jp
dec
je
out
inc
xchg
pusha
arpl
jo
xchg
inc
out
jg
or
inc
mov
and
mov
cld
imul
sbb
test
ja
sahf
dec
xlat
mov
nop
pop
imul
mov
mov
fs
and
push
idivb
insb
mov
fcomip
lret
pop
lods
aam
pop
and
das
jle
cmp
pop
jb
xchg
inc
mov
stc
fwait
sub
xchg
mov
mov
lods
push
cmpsl
mov
pop
dec
lock
dec
push
adc
xor
leave
stos
add
mov
inc
lods
fdivs
mov
enter
mov
in
sahf
fdivrp
sub
fcoml
pushf
ja
lods
pop
icebp
mov
das
fimuls
or
mov
repz
xchg
jb
fidivs
in
test
insl
out
adc
dec
add
xchg
imul
mov
xchg
in
add
insb
jmp
repz
mov
ss
cld
xchg
std
inc
or
add
into
jle
mov
xchg
or
pop
aas
fnstenv
fiaddl
dec
inc
popf
lret
ret
negb
push
push
ja
sarl
pop
lret
mov
mov
and
cmpsb
mov
inc
pop
jno
aad
lret
jg
adc
mov
mov
jns
xor
xchg
repnz
sub
insl
mov
cmp
and
cld
test
cld
push
loop
jns
cmp
add
test
mov
push
dec
cmp
and
pop
fsubr
lcall
cmp
inc
and
sub
insl
mov
adcb
sbb
ret
xor
mov
pop
jae
cmp
fstpt
add
jle
lret
xchg
inc
jb
dec
cld
xchg
scas
push
shll
mov
dec
or
cs
lds
call
divb
or
loopne
data16
push
stc
mov
push
push
adc
xchg
lods
movntq
pushf
int
loope
jne
andb
js
mov
je
and
xchg
jb
xor
or
lods
inc
inc
jb
xchg
inc
ret
sub
sub
not
mov
je
mov
cmp
divb
push
lret
cmp
push
arpl
sti
sbb
js
mov
rcrl
dec
push
cmp
cmp
ss
push
pop
repz
pop
mov
cli
jae
lods
mov
inc
jg
lds
repnz
sahf
mov
dec
cmp
lods
adc
or
stos
add
jo
xlat
mov
or
fcmovnbe
jb
insb
fmuls
lods
pop
data16
and
adc
insb
cli
gs
jp
mov
into
mov
mov
andl
sahf
repz
xchg
sub
cmp
iret
pop
mov
jge
jo
adc
arpl
mov
cmp
cmc
repnz
sub
dec
add
daa
inc
cmc
pushf
fisttpll
pusha
xor
sub
cs
iret
cmc
pop
sar
lods
cli
cmp
jge
xor
outsl
lea
movsl
sbb
sbb
mov
test
mov
push
enter
insb
ficoms
lea
and
or
inc
jle
pop
jo
loopne
add
loop
shlb
or
sbb
xor
push
insb
bound
add
dec
shl
sahf
mov
jne
add
sti
pusha
daa
push
cmp
lods
dec
pop
push
repnz
push
mov
inc
push
int3
xor
std
clc
sub
sbb
in
or
dec
push
lock
imul
ficoml
adc
adc
add
pop
addl
loop
inc
push
lahf
push
fdivl
adc
ret
ss
aam
cmp
pop
add
test
test
scas
cmc
jle
imul
push
jno
xor
add
pop
ss
add
int3
cs
xchg
xchg
int
jle
cmp
notrack
jb
fldl
call
ret
movsb
and
clc
cmp
add
movb
je
cmp
jl
sub
shrb
std
jb
loopne
mov
and
push
sbbb
mov
sub
lcall
imul
and
arpl
ds
mov
int
repnz
inc
movsb
push
in
xchg
psadbw
mov
lahf
mov
call
mov
lods
jb
push
ja
fisubl
test
jnp
sub
les
lock
adc
mov
insb
lds
ss
out
je
jg
mov
nop
push
mov
fwait
neg
inc
movsb
mov
mov
dec
inc
outsl
hlt
cmpsb
ficomps
stos
fwait
enter
cmp
mov
cld
jns
cmp
cmp
add
testb
inc
or
adc
cmp
pusha
jmp
pushf
sbb
mov
sbb
lret
mov
insl
sub
aaa
adc
out
pop
shr
add
mov
push
jns
mov
movsl
mov
subl
xchg
mov
enter
push
inc
popf
cmpsl
add
mov
xchg
xor
insl
ret
test
into
xchg
push
stos
jo
or
loop
push
cmp
dec
push
pop
sub
frstor
shll
pop
sti
add
xchg
lret
xchg
sbb
fsub
adc
or
xlat
sti
pop
rorl
les
in
mov
jb
mov
or
fs
int
insb
adc
xchg
cmp
imul
pop
std
sbb
xorb
inc
cmpsb
cmp
pop
cmp
sub
lahf
mov
rorl
cmpsb
push
xor
outsl
mov
push
jmp
mov
jo
push
pusha
clc
enter
cmp
sub
mov
mov
add
loope
ret
add
inc
not
movsb
scas
cmp
movsb
shlb
rcl
jnp
sarl
push
repz
inc
rcrl
adc
shl
and
notl
testl
cmp
rolb
pop
cmc
add
fwait
out
pcmpeqw
mov
cmpsb
test
sub
push
xchg
cli
sub
cmpsl
and
xorb
sub
jo
push
or
lds
cmc
mov
shl
pop
sub
call
add
cbtw
insb
cmp
jb
fs
aas
popa
lahf
ret
aaa
sarl
lret
jnp
mov
jo
push
cltd
jge
mov
cld
popf
pop
lahf
mov
roll
das
dec
dec
xor
mov
mov
in
daa
les
subl
rolb
cwtl
add
cmpsl
push
add
or
adc
sar
mov
in
js
xor
js
xor
sub
inc
jns
rcll
movsl
jecxz
cmpsl
imul
pop
jne
shr
insb
mov
stos
in
push
sbb
cmp
cmpsl
pop
sub
in
adcb
int
mov
pop
mov
mov
pop
cmp
sub
test
or
orb
lea
push
fisubrl
inc
pusha
inc
adc
xchg
mov
call
scas
movsl
mov
sbb
fsubs
out
push
inc
push
pop
push
dec
mov
flds
in
jg
and
ja
add
push
xchg
in
out
pop
sub
outsb
sbb
sbb
inc
sbb
inc
stos
xchg
sahf
mov
lods
push
jns
mov
decb
dec
lds
movsl
je
notl
loop
int3
imul
dec
es
sahf
ja
push
mov
je
pop
pushf
pop
repnz
popf
sbb
test
nop
test
jne
xchg
mov
aas
add
pop
shrl
lahf
pop
xchg
inc
popa
mov
or
js
pop
je
in
jo
data16
xchg
mov
mov
mov
or
jecxz
fisubrs
jp
xchg
pop
jbe
mov
cmp
mov
repz
or
lret
fiaddl
fldl
mov
cmpb
push
push
movsb
add
in
test
add
inc
fsubs
fdivl
sbb
test
xlat
dec
mov
mov
or
callw
cli
add
xchg
jp
fbstp
push
push
nop
bound
jg
popa
mov
add
push
lods
add
fs
jae
shl
pop
xor
inc
movsl
les
push
lock
xchg
mov
sbb
test
mov
or
or
test
adc
xchg
shl
outsl
aaa
test
or
rdmsr
push
xchg
push
les
jp
pop
or
sub
push
je
movsl
mov
pusha
out
jns
pop
mov
adc
sbb
dec
stos
mov
inc
dec
inc
mov
and
mov
cmp
xchg
mov
rcl
xchg
mov
call
jns
push
sub
mov
popa
mov
cmpsb
lret
pop
imul
and
hlt
in
cmpsl
mov
test
ret
mov
fs
repnz
in
jecxz
into
jecxz
ljmp
adc
mov
xor
insl
scas
jno
nop
nop
insl
cmp
mov
pop
hlt
cmp
pop
pop
test
sbb
pop
popa
add
outsb
and
dec
cmp
fsubrl
cs
inc
push
subb
insb
xor
aaa
mov
push
push
andb
hlt
xchg
push
jbe
cmpsl
add
jno
rcrl
jp
xlat
xlat
pop
mov
mov
imul
jge
nop
and
jo
cmpsb
fwait
xlat
sub
pop
aam
jo
movsl
push
leave
push
xlat
mov
add
sbb
fsubrp
ljmp
dec
push
sub
sarb
sbb
nop
out
xchg
cmp
jo
filds
imul
leave
std
add
adc
inc
les
adc
femms
push
push
jb
add
mov
mov
jg
cs
rclb
pop
lods
rcrb
inc
push
mov
xchg
pushf
mov
xor
jg
pop
sub
insl
shrl
das
dec
mov
in
xchg
inc
sub
shrb
repnz
mov
sbb
out
icebp
jb
inc
insl
add
mov
inc
loop
int
popf
popf
mov
mov
stc
jns
fstpl
popf
out
pusha
adc
cmp
imulb
jle
fs
inc
int
scas
lret
je
pusha
jle
fdivs
addr16
inc
popf
mov
adc
dec
rclb
faddl
dec
int3
mov
stos
data16
inc
ja
jo
add
div
fisubs
jbe
rorl
clc
jnp
call
xchg
xchg
sub
pushf
addb
repz
hlt
dec
or
cmp
add
mov
mov
inc
repnz
cmp
aad
in
add
push
inc
sbb
movl
mov
xchg
push
es
mov
sbb
push
xor
xor
mov
pop
lcall
and
sbb
push
mov
rclb
in
popf
xchg
or
repnz
sbb
stc
testl
adc
addr16
jnp
lret
mov
mov
fisubrl
popaw
cmp
cmp
jns
jo
adc
sub
repz
iret
inc
sbb
add
repz
jo
out
ficoml
jecxz
push
add
pop
arpl
fcoms
cmp
cs
mov
or
pusha
jae
and
test
cmc
mov
mov
inc
mov
or
sbb
insb
out
jbe
cwtl
adc
imul
lcall
push
or
mov
inc
jmp
icebp
pop
lahf
mov
xchg
fucomi
or
adc
jg
es
adc
lock
xchg
mov
out
cli
sub
daa
jno
sbb
xor
movsb
test
and
push
pop
lret
pop
adc
or
push
pusha
iret
aam
clc
pop
xchg
mov
add
mov
repnz
fisttpl
jnp
leave
in
add
mov
pop
or
leave
cltd
dec
xlat
cmpsl
add
shlb
push
call
inc
inc
imul
aas
add
mov
or
push
iret
cwtl
or
jl
push
les
inc
xor
fs
or
jne
cli
add
sub
mov
sti
addl
mov
pop
jge
push
sub
inc
out
sbb
mov
jl
mov
inc
andl
call
aad
scas
inc
jns
insl
mov
stos
fcom
into
js
sub
stos
xor
sub
mov
inc
add
stos
mov
aad
jne
and
mov
adc
or
int3
sub
leave
xor
pop
int
mov
mov
jmp
jno
inc
cltd
mov
imul
push
mov
lods
adc
int
inc
ja
addb
mov
and
shll
and
xor
or
mov
inc
inc
lock
xchg
jne
adc
test
je
testb
lea
movsb
pushf
notb
mov
daa
sbb
sahf
fnstenv
pop
insb
adc
sub
mov
aas
aad
nop
scas
jns
cs
mov
sbb
jns
je
xor
sahf
jns
iret
sbb
repz
hlt
push
push
dec
aam
push
push
mov
mov
sbb
cwtl
inc
std
loop
out
ficoms
push
fists
in
js
jecxz
nop
inc
outsl
aam
xchg
and
aam
mov
scas
push
mov
mov
sub
pop
mov
mov
add
arpl
movsb
aas
mov
mov
rorb
mov
hlt
or
fisubl
mov
and
mov
lcall
ss
push
ja
add
dec
out
int3
xor
jno
push
jae
lods
sub
fcoms
push
fsubs
lret
clc
jle
xchg
mov
insb
negb
fidivl
push
sub
les
pop
jge
dec
dec
or
sbb
mov
sub
shrb
aam
pushf
std
insl
xor
shlb
lcall
addb
test
jb
mov
dec
imul
nop
into
test
outsl
pop
in
sahf
pop
mov
cmp
sub
setle
cmp
jmp
std
mov
mov
mov
jnp
pop
out
iret
test
sar
ds
xchg
push
ljmp
in
daa
mov
aam
pop
loopne
pcmpgtw
xchg
pop
dec
fstps
pusha
cwtl
test
je
ja
adc
sbb
insl
lea
sbb
icebp
das
pop
sbb
mov
inc
mov
insl
lock
adc
fdivs
xchg
sbb
and
xchg
out
jno
movsl
shll
fisttpl
pushf
jo
scas
jb
sbb
cmpsb
shl
test
and
mov
in
bound
dec
add
mov
out
jp
or
xchg
sbb
cltd
nop
and
mov
xchg
cld
mov
icebp
pop
bound
insl
add
push
add
mov
arpl
popa
inc
mov
add
sub
jnp
fwait
shrl
icebp
inc
jp
and
pop
jge
push
sub
shl
add
pop
dec
cmc
call
mov
and
mov
scas
fisubs
pop
push
lea
scas
leave
pop
leave
incl
mov
gs
mov
push
hlt
scas
mov
lahf
jle
aad
xchg
div
mov
pop
pushf
fs
lret
mov
jns
out
and
push
add
lods
sub
fisubl
ljmp
push
fsubp
sbb
sbb
out
ret
sbb
adc
cli
aaa
insb
sbb
dec
mov
out
xor
mov
ljmp
stos
lea
int3
push
mov
mov
das
pop
push
jo
mov
pop
dec
mov
cmp
shr
mov
scas
test
test
clc
push
inc
es
and
sbb
ds
data16
insl
dec
lea
sahf
mov
xchg
add
es
int
mov
popa
jge
sarb
dec
outsb
imul
jmp
and
and
pop
jnp
xor
out
push
pop
lret
mov
jl
aas
push
and
out
int3
les
out
out
popl
insl
mov
sti
push
cmp
push
dec
lock
rclb
sti
js
dec
jbe
xor
sub
int3
push
and
je
scas
mov
je
pop
pop
daa
mov
dec
test
lods
imul
pop
test
bound
adc
sub
roll
push
aas
ljmp
jno
leave
adc
cmc
mov
pushl
inc
add
jo
into
cmpsb
or
lcall
jecxz
dec
std
arpl
sbb
decl
pop
mov
aam
mov
push
loop
cmp
loope
dec
mov
add
xor
xor
imul
repz
push
pop
and
or
flds
xor
push
ret
pop
add
jo
inc
inc
iret
pop
loope
xor
mov
sbb
bound
add
dec
lahf
into
xor
xor
sbbl
mov
xchg
dec
jne
lods
pop
hlt
xchg
push
imul
mov
jp
pop
xor
xchg
das
lock
jo
jp
movsl
mov
bound
dec
leave
dec
out
adc
leave
jg
jo
push
cmc
in
ret
adc
and
push
movsl
pop
aam
stos
gs
mov
out
stos
add
pop
sbb
in
adcb
sub
and
sbb
inc
pop
inc
pop
push
fcoms
fstpl
sub
mov
add
pop
insb
adc
out
pop
add
dec
mov
xchg
int3
daa
adc
lret
ret
dec
sbb
jnp
aas
aaa
rcrl
xor
push
sti
or
jns
das
out
xlat
xor
test
push
andnps
or
mov
mov
jae
cmp
imull
xchg
inc
sbb
adc
neg
pushf
lahf
push
xor
bound
jmp
dec
icebp
mov
jb
sbb
dec
pop
negl
loopne
mov
push
aas
jbe
fimuls
dec
mov
out
mov
jecxz
fs
fisubrs
in
insl
dec
outsb
fisttps
push
mov
mov
data16
aad
and
add
jl
cwtl
ds
sub
sti
or
enter
imul
stos
and
jmp
mov
ret
movsb
ror
push
fs
add
cmpsb
jp
test
xor
adcl
push
sti
loopne
pusha
cmp
imul
divl
xchg
xor
loop
sahf
decl
xor
pop
and
cli
dec
lcall
mov
stos
out
mov
push
fs
dec
adc
cwtl
scas
in
add
lcall
mov
fwait
jle
stos
lea
bound
jp
push
sub
and
mov
cli
sbb
test
fidivl
push
sub
cld
cld
or
mov
shr
jno
cs
mov
sub
mov
xor
cmp
jle
jns
push
je
je
pop
punpckhbw
data16
gs
push
gs
insb
lds
sbb
adc
les
imul
jno
dec
push
ret
outsb
xchg
out
scas
inc
mov
std
inc
push
mov
das
pop
pop
cmp
scas
cmpsb
push
bound
data16
mov
mov
push
lcall
or
pop
jne
cmc
pop
cld
and
push
imul
fs
pop
lods
jnp
hlt
sub
scas
cmpsb
add
cmp
into
jmp
jnp
imul
out
jne
dec
sbb
insb
je
movsl
cmpsb
or
popa
mov
daa
mov
out
cmp
aaa
add
xchg
idivb
inc
xchg
push
push
lods
mov
shrl
sbb
clc
fadds
ds
push
push
dec
pop
fs
fldl2e
push
ret
fidivrl
mov
in
or
bound
or
rcrl
lea
ja
push
mov
cli
push
cmpsl
pop
fwait
aad
and
mov
adc
cmp
cmp
clc
add
sbb
jb
mov
sub
loop
ja
pop
scas
aaa
dec
loope
cmp
mov
call
mov
xchg
xchg
cltd
mov
sub
fstl
outsb
pop
cmp
cld
xor
xorb
insb
mov
cmpsb
sarl
mov
sub
cmp
ss
cmp
push
out
fistpl
xor
fs
ja
xchg
mov
subl
insb
cmp
push
repnz
rcrb
push
push
inc
push
and
lret
aaa
dec
loop
xchg
adc
mov
addl
in
dec
sub
bound
mov
dec
notl
inc
or
das
mov
mov
mov
stos
jp
lods
aaa
mov
cmp
and
xchg
jecxz
jne
pop
xchg
lahf
sub
ror
jmp
pushf
bound
push
insb
inc
fwait
cmpsl
loopne
jle
adc
xor
jmp
sbb
dec
mov
cmpsb
ljmp
sti
sbb
pop
fidivs
add
popa
lea
cli
xor
dec
test
fs
or
jae
xor
stos
mov
jbe
cmp
mov
rolb
hlt
mov
int
movsl
jne
inc
in
cmc
inc
rorb
or
cmp
lcall
xchg
cmp
das
mov
adc
outsl
fistps
mov
cmc
stos
bnd
repz
adc
leave
stos
cmp
stc
loopne
ljmp
push
stos
into
jmp
loop
xor
aas
imul
push
mull
dec
lea
cmpl
adc
cltd
xor
pop
adc
pop
mov
fdivrs
ja
loop
ss
and
mov
cmp
push
popf
scas
cmp
mov
xor
fwait
mov
clc
cmpsl
out
leave
mov
dec
popa
pop
push
es
jae
mov
out
and
jp
cmp
push
repz
inc
shll
lahf
pop
test
push
jae
push
idivb
pop
sub
xchg
dec
or
hlt
arpl
cmp
push
lds
sub
movsb
jne
dec
mov
dec
icebp
mov
scas
xor
nop
das
iret
fimuls
ret
gs
pop
xchg
mov
or
insl
and
xchg
jmp
and
sub
test
icebp
mov
sub
xchg
xor
sub
pop
out
outsl
push
les
lods
xor
daa
inc
dec
push
fmull
adc
mov
scas
jl
aaa
les
stos
push
dec
ret
imulb
jmp
mov
ljmp
mov
cmp
push
add
imul
ss
out
add
jg
xor
lretw
fwait
jl
xchg
inc
mov
mov
push
pop
and
rcll
mov
into
lahf
mov
sub
cmp
cmp
test
iret
sbb
adc
jle
sub
xchg
jecxz
dec
lret
fsubr
popf
xorl
mov
jbe
jbe
xorb
or
mov
cmpsl
subl
pop
lahf
xchg
push
mov
enter
sti
idivb
idivl
movsl
sbb
xchg
js
divl
push
imul
xor
dec
jge
mov
push
pop
nopl
xorl
ret
shlb
insl
cld
sbb
daa
pop
popf
adc
cmp
jecxz
rcrl
lea
and
sub
or
lahf
je
icebp
jno
sbb
pop
dec
mov
xlat
jl
cwtl
dec
lods
adc
and
xor
inc
lea
cwtl
dec
ret
hlt
pop
sub
cmpsb
jb
stos
push
xchg
je
outsl
sbb
jg
xor
pop
popf
mov
jmp
jg
mov
jmp
leave
cli
out
aas
adc
sahf
mov
mov
xchg
xor
xchg
sub
add
loope
push
push
adc
dec
insl
push
orl
or
jl
xchg
icebp
pop
sbb
ret
out
cli
add
pop
pop
or
sub
or
movsl
fwait
sub
push
adcl
iret
outsb
ret
sub
jns
inc
or
jp
shrl
lahf
inc
shlb
dec
sub
sub
cmpsl
dec
adc
lea
cmp
mov
cli
xor
mov
movsb
and
cmp
incb
mov
cltd
cmp
push
mov
mov
dec
xchg
outsl
mov
scas
add
das
call
cmp
mov
xchg
jne
inc
or
cltd
sub
popf
lock
inc
adc
xchg
rorb
mov
out
test
jge
jle
loop
push
xor
mov
xor
and
test
aam
cmp
bound
mov
mov
fwait
popf
inc
xor
jmp
mov
lds
xor
sbb
cmp
sub
jmp
divb
ja
push
and
dec
test
lret
mov
or
xchg
mov
scas
inc
push
pavgw
push
out
dec
mov
inc
mov
clc
addr16
idivb
cmp
inc
jge
or
xor
xlat
clc
aad
fld
mov
push
out
int
ja
into
pop
pushf
stos
sub
xchg
ret
in
mov
lds
int3
js
cmp
mov
pop
xchg
mov
or
ret
or
icebp
lret
ljmp
sarb
ljmp
daa
ljmp
inc
scas
test
imul
fsts
ss
mov
imul
xlat
ja
test
dec
add
ja
jo
pushf
mov
xchg
psadbw
movsb
fadds
push
in
ss
ret
jl
clc
jmp
test
js
arpl
es
sub
into
jg
repnz
push
jo
jnp,pn
lcall
push
push
movsl
mov
stos
sub
fimull
lcall
adc
mov
adc
decb
in
xchg
or
in
out
ret
add
inc
jge
out
imul
scas
loope
dec
repnz
mov
fwait
out
out
adc
ljmp
add
cli
xor
clc
mov
ss
mov
jp
cmp
and
enter
jmp
pop
dec
stos
push
jne
das
pop
adc
jae
imul
ss
enter
mov
adc
or
out
mov
and
ljmp
cmp
or
movsb
jmp
outsb
inc
stos
pop
push
stc
in
xor
jmp
push
stos
cmp
enter
adc
and
call
and
jg
repnz
fsubl
ljmp
pusha
sbb
push
or
decb
push
or
ret
stc
ljmp
fcmovu
mov
iret
dec
xor
push
shl
shll
add
les
popf
into
jne
add
call
lea
fiadds
adc
lods
repz
inc
data16
out
jne
fldenv
fiadds
pop
pop
out
aam
or
lock
ja
popf
mov
aam
sbb
mov
fs
xchg
xchg
or
in
inc
test
sarb
push
mov
xchg
fists
or
js
add
mov
xchg
adc
test
bound
cmpsl
pop
cmp
push
lds
xor
cmpsb
repz
daa
xchg
jge
fs
popf
dec
lahf
jge
cmp
in
ss
imul
arpl
in
loop
pop
jl
or
jb
pop
leave
mov
xor
rclb
adc
and
add
gs
movl
mov
push
pop
sbb
adc
jb,pt
shrb
mov
jge
pushf
mov
mov
mov
pop
inc
arpl
aaa
pop
in
fwait
jb
lock
mov
ret
adc
lret
lret
mov
call
sbb
dec
add
jns
or
jno
sbb
subl
ljmp
cmp
rcll
stos
in
sub
dec
fs
or
out
rcl
leave
jle
pop
mov
es
mov
bound
pop
pop
sub
cmp
push
shl
cmpsb
pop
cmp
mov
idivb
js
gs
aas
mov
addr16
mov
imul
pop
lods
test
repnz
ret
jne
xchg
xchg
jns
dec
jp
out
lret
xor
loope
stos
xor
outsb
xchg
cmp
xchg
inc
faddl
int
mov
xchg
xchg
in
movsl
mov
or
andb
sub
push
loope
and
jno
cltd
prefetcht2
lea
in
orb
mov
popa
iret
aam
push
mov
mov
mov
ror
xchg
jecxz
mov
jae
sbb
xchg
imul
std
je
incl
mov
jo
outsl
xor
sub
loop
xlat
sbb
mov
rcll
stos
mov
sti
sbb
icebp
mov
sub
add
shrl
xchg
xchg
pop
in
adc
notb
push
mov
mov
pop
lock
adc
stos
or
call
aas
or
js
mov
adc
push
fnstsw
cmp
fldl
orl
ficompl
jae
and
ret
mov
inc
into
sub
hlt
arpl
mov
test
ja
push
fidivs
cmp
test
add
insl
into
aad
push
inc
mov
mov
add
and
repnz
xor
jb
rcr
xlat
fcoms
pusha
cli
or
pop
andb
in
jg
es
stos
jno
scas
xlat
imul
flds
pop
std
test
call
inc
lahf
inc
inc
push
dec
jmp
divl
fsubr
mov
mov
xchg
int3
xchg
jbe
sti
pop
repnz
pop
sbb
bound
imul
test
mov
mov
test
sbb
and
cmp
pop
mov
xchg
stos
int
push
pop
push
hlt
jmp
sbb
fwait
lods
fsub
or
xor
push
ljmp
inc
test
sub
cli
lods
stc
int3
mov
inc
pop
popa
xchg
fisubrs
into
mov
jp
jmp
cmp
ja
add
lods
cmp
adc
ret
stos
gs
pop
mov
sahf
in
mov
shrb
dec
or
jb
mov
or
sbb
adc
jmp
cs
fcmovbe
daa
mov
dec
into
xlat
lret
incl
das
cld
mov
imulb
stos
popf
cmp
adc
push
jle
test
or
mov
popa
pop
in
ja
and
or
aad
cltd
icebp
enter
xchg
mov
mov
pop
push
addl
cmp
shlb
inc
cmpsb
ret
test
test
lahf
pop
add
clc
add
mov
cwtl
jg
js
addr16
insl
mov
stos
cmp
push
call
jge
mov
inc
jns
insl
adc
sbb
roll
sub
gs
aad
cltd
jns
mov
test
jmp
mov
idivb
fs
loopne
lods
rsqrtps
sub
push
add
in
call
pop
test
cwtl
mov
ljmp
aad
mov
jp
xchg
int
imul
fdivrs
shlb
jb
adc
test
jne
xchg
rcl
or
push
scas
nop
cmp
dec
and
cs
mov
jg
push
pop
adc
add
cmp
int
xor
inc
je
imul
jecxz
scas
stos
movsl
jl
jno
subl
or
imul
lock
frstor
test
push
jno
lahf
dec
fwait
pop
iret
popa
decl
xchg
xchg
stos
dec
cmpsl
lea
enter
aam
xorb
enter
in
add
xor
test
xchg
mov
hlt
cmp
xor
sbb
lret
es
ds
loope
clc
movsb
adc
fnstsw
movsl
enter
insb
scas
xlat
mov
sbb
clc
adc
ficoml
notl
or
xchg
mov
and
jb
mov
sub
mov
arpl
mov
scas
fwait
and
cld
ret
and
mov
je
das
xor
jmp
ss
out
das
dec
test
inc
mov
mov
mov
fincstp
xchg
arpl
adc
fucomip
addps
add
jmp
or
out
mov
in
cs
sbb
cmpsl
fs
in
fbld
fsubs
daa
xor
cli
dec
test
cmpsb
xchg
pop
push
idivl
push
xchg
ret
stos
popf
sub
test
cs
pop
aad
lock
lret
sub
jge
in
or
jne
jg
daa
inc
loope
mov
test
mov
negb
dec
fidivl
push
cwtl
fisttpll
or
insl
mov
lds
in
out
ja
scas
xchg
mov
sub
dec
inc
add
xchg
xor
push
rol
or
or
pop
insb
jne
inc
flds
hlt
icebp
andb
xchg
cmp
in
pop
cmc
mov
xor
xor
sbb
mov
icebp
insb
popf
dec
cmp
out
mov
das
stos
jno
mov
mov
mov
dec
loopne
add
mov
nop
mov
mull
sahf
lcall
xchg
jmp
out
pop
xor
sub
push
or
pop
insl
push
lcall
pop
in
mov
lret
into
jnp
sub
clc
repz
cltd
data16
imull
cmc
push
dec
push
aad
xchg
and
pop
jle
outsl
sbb
test
fstps
xchg
enter
std
mov
or
pop
add
xchg
adc
mov
mov
add
lret
add
fsubs
rcrb
mov
rcrw
andb
std
dec
cli
stos
pop
insb
ret
bound
daa
lret
sbb
pop
sub
push
inc
jno
jbe
shll
xor
mov
xchg
or
mov
arpl
fimull
testl
int3
les
lahf
fstl
add
in
ljmp
stos
push
shl
out
call
inc
sarl
jb
in
dec
popa
adc
push
pusha
inc
test
mov
insb
call
push
add
sbb
mov
jo
out
jne
enter
sub
out
clc
mov
inc
cmp
repnz
or
sbbb
push
inc
cmp
daa
mov
mov
cmp
push
popf
inc
jle
jno
xchg
ljmp
int3
cmpsb
in
jae
repz
xchg
jge
jo
inc
or
ret
int
into
mov
stos
fs
loopne
dec
jns
cmp
add
inc
xlat
push
dec
jmp
or
mov
xchg
adc
and
and
xlat
xchg
sbb
inc
ror
ficompl
adc
test
xor
jns
inc
call
arpl
ja
paddw
jp
std
push
movl
hlt
sarb
in
push
into
mov
mov
imulb
stos
push
or
mov
test
add
fidivs
lahf
mov
mov
rcrl
pop
fsubrl
push
idiv
xor
push
dec
adc
adc
mov
xlat
xchg
dec
popa
jmp
mov
and
dec
les
inc
dec
adc
push
cltd
xchg
in
dec
ljmp
xchg
xchg
pop
loope
xchg
pop
hlt
or
xchg
cmpl
or
pop
pop
popl
into
xor
inc
sbb
inc
mov
aam
dec
outsb
push
sub
mov
mov
sbb
je
nop
adc
inc
xchg
cmp
push
mov
push
je
xor
fsts
repnz
adc
jbe
mov
and
mov
testb
rol
sub
lds
subl
push
dec
ljmp
adc
or
jl
pushf
mov
das
les
mov
sbb
inc
pop
add
jp
repz
jne
outsl
movsb
jecxz
mov
sbb
mov
inc
adc
hlt
stos
xchg
push
inc
push
mov
sbb
and
push
cmp
je
pop
movsb
cld
or
xchg
in
adc
icebp
dec
push
jb
pop
scas
xor
push
inc
call
lret
mov
jbe
push
xchg
sub
jg
sub
sbb
push
in
mov
pushf
subb
test
cmp
imul
inc
sbb
pop
xor
clc
adc
call
daa
pop
add
sti
xor
shlb
mov
and
adc
test
push
mov
inc
or
xor
mov
imul
mov
pop
das
cmp
fistl
es
jge
xchg
jge
into
ljmp
push
imul
xor
out
sbb
pop
push
cmpsl
gs
xor
mov
add
dec
call
cld
jne
inc
jne
jno
sti
repnz
push
sbb
sbb
test
or
sub
stc
jmp
adc
loope
mov
pop
les
mov
adc
push
pop
fnsave
xchg
add
sub
xchg
and
sbbb
inc
add
inc
lcall
ja
sub
ret
mov
iret
and
xor
das
ss
sbb
cli
mov
bound
shrb
popf
rclb
jecxz
mulb
inc
cmp
and
pop
js
fsts
dec
sahf
xchg
lock
cs
pusha
shlb
pop
mov
enter
cmpsb
xchg
xor
cmp
pop
dec
and
dec
fs
std
fwait
xlat
jne
mov
jge
insb
ret
jno
pop
mov
es
xor
inc
mov
andb
mov
jo
stos
in
sub
inc
arpl
cmp
adc
dec
mov
loop
jae
dec
xchg
push
mov
in
and
pop
fidivrl
enter
mov
into
loop
xor
cmpsl
bound
repnz
popf
out
lds
adc
std
add
stc
nop
jns
rol
and
push
out
sub
notl
add
mov
fidivrl
repz
lea
or
cld
loopne
fdivl
adc
movsl
mov
push
sub
int3
inc
sbb
xor
mov
jb
inc
sti
dec
add
int
mov
arpl
push
mov
aas
pop
sbbb
xorl
movsb
rorl
test
mov
jbe
xchg
sub
add
ss
pop
push
jp
dec
sub
loope
in
stos
fldcw
pop
ret
je
inc
cmp
jnp
cs
mov
cmp
sub
adc
rclb
jg
jae
add
dec
inc
jo
pop
rcrb
mov
faddp
mov
int
or
xor
adc
out
fisubrl
xor
xchg
jne
pop
in
fwait
lret
and
lock
sub
dec
add
stos
dec
jno
arpl
and
call
and
mov
es
xchg
xor
xor
jecxz
jle
adc
stos
ret
pop
adc
sbb
mov
xchg
nop
mov
mov
lahf
mov
imul
dec
pop
cmp
adc
adc
jle
xchg
lock
pop
test
and
fiadds
xor
xchg
inc
xchg
dec
mov
mov
cmc
out
mov
arpl
daa
mov
mov
test
scas
aad
adcl
movsb
xor
dec
add
sbb
xorb
and
testb
push
imul
and
mov
movsb
repnz
push
jmp
popf
xchg
add
xor
xchg
add
repnz
in
push
cmp
arpl
shrl
adc
pop
cmp
cwtl
jl
ror
ffree
movsb
dec
insl
mov
jp
call
repnz
pusha
pop
and
xchg
push
jge
daa
rolb
push
mov
movaps
sub
and
sbb
cmpsl
shrl
scas
lock
inc
mov
or
ljmp
mov
fildll
aam
bound
jmp
sti
sbb
out
cmpsl
xor
xor
popa
mov
push
bound
add
sbb
push
or
adc
sbb
sub
jle
jo
and
xchg
lea
mov
add
adc
adcb
and
dec
mov
sub
outsb
pop
dec
adc
mov
mov
cmp
mov
pop
adc
repz
popf
repz
lods
aad
aam
adc
sub
jnp
sub
outsb
fwait
cmp
aad
jae
mov
shl
sbb
mov
std
stos
fisttpll
mov
insb
movsb
pop
cli
dec
mov
pop
jb
int
pop
call
iret
out
xor
adc
clc
dec
rorb
pop
xor
es
or
xchg
loop
test
rcrb
movsl
sub
sbb
pop
jl
mov
lock
rorl
stc
xor
enter
xor
xor
movsb
int
cmp
int3
push
leave
mov
jmp
aas
sub
xchg
arpl
sub
or
ja
lcall
jg
xchg
stos
sbb
mov
hlt
mov
push
popf
xor
gs
movsb
in
scas
jle
imul
jns
push
xchg
loopne
lods
nop
mov
int
fucomp
bnd
test
pop
push
lds
xchg
ljmp
pushf
lret
pop
jno
js
movsl
mov
cmpsb
push
dec
in
sbb
mov
dec
sub
jns
mov
mov
mov
imul
movsbl
dec
jnp
scas
lret
mov
subl
mov
scas
ljmp
mov
icebp
xchg
jbe
jno
sub
sub
icebp
test
mov
jo
xor
adc
xchg
xchg
push
sarb
pop
inc
cmp
sbb
cwtl
bound
call
enter
rcll
cmp
jp
dec
and
jmp
jle
test
xlat
mov
sbb
enter
stc
into
aas
sbb
rorl
arpl
int3
pop
pushf
add
ret
inc
jmp
aaa
add
ret
push
lret
cmc
jmp
xchg
cmc
push
lcall
shr
adc
loopne
xchg
shlb
lods
push
fistpl
popf
icebp
mov
mov
idivb
stc
or
or
xchg
sub
subb
mov
push
repz
cmc
xchg
sbb
enter
in
jbe
inc
and
jmp
xor
repnz
xor
dec
imulb
push
dec
loope
decl
pop
ret
add
cmc
int
insb
lock
xor
out
cld
int
sub
cmp
push
mov
dec
jbe
pop
pop
movsl
bound
cwtl
jo
mov
je
push
aam
outsl
cwtl
stc
adc
mov
jb
filds
push
loope
into
mov
mov
dec
js
push
adc
push
or
je
lods
js
scas
xchg
ret
cmp
inc
imul
imul
nop
idivb
inc
mov
rolb
and
xorb
xor
xchg
lret
inc
lods
fmul
sti
insb
push
adcl
aas
orl
push
fimull
scas
stos
adc
adc
sbbb
leave
dec
jo
ficoml
xchg
loope
ret
jne
push
mov
sbb
fadd
sub
xchg
insl
adc
test
popa
inc
into
in
cmp
mov
insl
add
push
shll
sti
cmp
mov
sbb
fcoml
mov
adc
mov
aas
dec
cmpsl
mov
pop
pop
pushf
inc
imul
mov
cmp
int
push
stos
bound
add
mov
and
sar
xor
mov
sbbb
fisubs
pop
cmpsb
out
cmc
outsl
popf
adc
in
divb
out
arpl
mov
sbbb
dec
fisttpll
mov
fs
and
cmc
hlt
mov
add
and
mov
dec
and
cmp
jl
mov
lock
cmp
mov
jge
icebp
cmp
lahf
push
and
test
test
test
enter
sbb
cmpb
push
jne
sub
xchg
adc
add
mov
setne
cmp
mov
pop
sub
inc
or
and
add
jle
jl
fidivl
xchg
sub
in
dec
dec
adc
bound
mov
sub
xor
or
jmp
mov
or
push
icebp
gs
js
int
iret
lds
lahf
dec
sarb
pop
jae
stc
sbb
cmc
int3
dec
jo
or
sbb
push
test
int3
adc
and
add
aas
dec
add
push
adc
dec
shll
pop
out
mov
ret
in
xchg
lretw
ds
gs
fcompl
inc
adc
inc
mov
mov
dec
sahf
and
hlt
push
dec
test
je
mov
outsb
hlt
jecxz
mov
sub
lahf
int
jae
dec
test
negl
dec
add
jl
hlt
scas
or
test
adc
enter
std
fcoms
mov
xor
jmp
pushf
pop
stos
mov
pop
loop
dec
push
fisttps
sti
je
subb
lea
sbb
loope
in
xchg
and
pop
aaa
xchg
jno
mov
jmp
inc
inc
loope
cli
and
pop
test
ds
xor
insl
sbb
daa
xor
test
sub
inc
lahf
xchg
sbb
jge
repnz
mov
mov
gs
inc
cli
xchg
inc
dec
xchg
jns
add
outsl
xchg
jmp
mov
or
sub
inc
mov
pop
add
in
or
xchg
ret
mov
pushf
inc
loopne
ret
push
sahf
mov
push
sub
jns
jno
mov
push
mov
sbb
inc
mov
test
jbe
fildll
mov
shl
std
addr16
sbbl
ret
in
push
dec
sbb
pushf
bound
mov
lods
lret
fnsave
mov
xor
jno
or
mov
inc
sti
dec
adc
sub
fidivrs
inc
ret
or
mov
jle
fcompl
inc
sbb
int
or
pop
loope
pop
addr16
pop
add
or
add
add
divl
mov
jecxz
add
push
xor
cmp
mov
or
xlat
mov
mov
sarb
outsl
es
and
mov
jns
les
inc
sarb
mov
jle
push
stc
cld
aam
popf
xchg
cmp
adc
and
mov
mov
sbb
aam
pop
fsubr
iret
int
fmuls
hlt
adc
fildll
test
lret
dec
cli
imul
pop
xchg
std
jecxz
push
dec
sbb
popa
shll
xchg
xor
xchg
inc
clc
imul
int
gs
sahf
mov
lods
iret
fwait
or
dec
xchg
push
divb
outsb
ret
aad
mov
jp
in
jecxz
lret
dec
fnsave
mov
out
and
push
std
loop
mov
paddusb
mov
popa
ja
jne
imul
cmpsb
push
divb
cltd
aas
push
mov
outsb
pop
sbb
es
test
mov
sub
jno
push
ss
mov
popa
mov
add
push
out
xchg
lock
jl
repnz
test
mov
xchg
in
ss
push
adc
jmp
loope
mov
out
push
xchg
cmp
jnp
jbe
pop
pop
xacquire
pop
out
sub
loop
repz
xor
out
mov
mov
pop
cmpsl
pop
sbb
insl
inc
or
pop
stos
insb
cmpsl
gs
inc
fistps
cmp
add
fs
mov
roll
inc
stos
add
jns
ror
xor
insl
cwtl
jg
jnp
jo
sti
lret
bound
sub
andb
dec
aas
jle
test
pushf
notb
pop
pop
jae
or
adc
jg
fucompp
or
mov
mov
icebp
aas
stc
mov
std
cmc
push
mov
inc
xor
int3
push
shr
lgs
inc
cs
lea
push
sbb
pop
inc
shll
mov
fldcw
pusha
jle
pop
lods
and
xchg
xchg
xchg
xchg
and
push
inc
scas
pop
push
inc
int
sub
push
ror
xchg
lahf
fsubr
or
and
ss
fistps
push
testb
ss
aad
das
sbb
movsb
subb
xrelease
cs
lock
mov
xchg
mov
js
mov
movsb
rcrl
fistps
dec
cmp
gs
imul
xor
sbb
in
in
inc
pop
push
js
push
inc
ja
sarl
jge
cmpsb
test
iret
fs
mov
imul
cmpsb
cmp
jb
stc
jp
inc
incl
daa
and
and
sub
and
imul
push
jmp
mov
jb
xor
repnz
cmp
loopne
sarb
jg
inc
sub
sub
xchg
push
les
inc
pop
push
mov
int3
scas
dec
adc
negl
sub
xor
pop
sahf
mov
push
dec
push
aas
je
push
jmp
mov
shlb
inc
aas
inc
mov
adc
xor
in
popf
inc
ja
inc
inc
loopne
jp
nop
bnd
arpl
cmp
add
bound
ljmp
lahf
cmpsb
pop
ds
fistps
jb
ftst
sub
push
pop
pop
ja
push
cwtl
mov
inc
pushf
pop
into
sbb
dec
shl
pushf
pushf
int
jge
xor
mov
int3
jae
iret
sub
push
mov
mov
leave
push
push
push
cmpsb
test
inc
inc
into
add
dec
out
into
sti
dec
add
imul
add
addl
push
sti
cli
pop
cmp
test
or
sub
loop
or
aas
xor
fcmovne
jge
dec
in
or
mov
decb
jmp
pop
nop
sarb
test
je
or
jp
lret
adc
ficoml
inc
outsb
and
ret
pop
mov
sbb
jmp
sbb
nop
fsubrl
out
adc
repz
xor
shlb
fimuls
js
cmp
xor
ja
test
jge
sub
imul
push
mov
cmp
ret
jnp
fbstp
fsub
inc
xchg
sahf
test
or
jmp
xchg
mov
orl
arpl
xchg
mov
mov
or
movsl
mov
movsb
mov
icebp
jbe
js
push
negb
jge
outsb
sbb
fcomip
aam
mov
or
movsb
mov
gs
test
mov
jno
push
movsl
out
jl
ss
in
mov
add
mov
test
sarb
mov
cli
mul
std
jge
dec
scas
dec
or
pop
pop
adc
pop
iret
cmp
dec
mov
jg
cmp
lret
cs
roll
jg
lret
hlt
ljmp
lods
ficomps
cmc
cmp
sbb
cmpsl
xlat
dec
out
jbe
loope
xchg
sbb
es
push
cltd
mov
loop
mov
inc
add
mov
jae
push
test
xchg
fiaddl
imul
dec
pop
and
mov
mov
dec
popf
and
scas
add
push
loopne
test
jno
inc
jecxz
sbb
fnstsw
sub
ret
imul
movaps
jnp
push
push
leave
mov
lcall
mov
sahf
push
sub
mov
lahf
aad
rcl
sub
sub
mov
dec
adc
aad
sbb
ret
push
xchg
icebp
inc
ss
aam
xchg
arpl
inc
cs
jb
bound
inc
cmp
xchg
je
out
jg
inc
mov
xchg
xor
sub
testl
out
mov
mov
test
int
hlt
mov
jp
andl
mov
lock
cmp
int
sbb
mov
xor
mov
xor
cmc
pop
xchg
lea
pop
pop
je
mov
nop
das
adc
scas
sbb
loopne
arpl
jb
or
ficomps
into
or
jnp
cmpsb
cmp
jg
test
lea
repnz
in
xchg
sbbb
xchg
mov
dec
jg
loopne
mov
hlt
jl
cmp
iret
jmp
pop
dec
idivb
cmc
mov
scas
js
inc
pusha
sbb
pop
gs
sub
and
jmp
sub
sbb
xchg
sbb
out
add
minps
mov
inc
mov
pusha
es
idivl
dec
shrl
daa
test
imul
adc
mov
pop
lahf
or
fiaddl
pop
out
push
add
sub
push
popf
mov
dec
or
inc
fwait
loope
jp
pop
into
push
std
aam
xlat
nop
out
jg
or
cmp
sub
mov
mov
push
mov
or
xchg
and
lea
mov
fdiv
cmp
mov
pop
outsb
outsb
aad
cs
inc
in
test
adc
lods
gs
jle
mov
test
cmp
clc
ja
adc
and
push
ss
cmp
std
mov
push
jns
cmp
mov
loope
js,pn
and
sub
loope
xchg
lods
rclb
bnd
jmp
jno
je
jg
shll
and
xlat
ljmp
mov
sbb
mov
rcrl
xor
inc
in
mov
inc
xchg
cs
test
xor
pop
add
mov
add
std
mov
xchg
cld
aad
imul
adc
aas
adc
ljmp
pop
je
push
lds
pop
mov
push
lret
rcl
in
pop
mov
mov
cmpsl
gs
popa
inc
inc
dec
out
xchg
jg
loope
jo
iret
in
jne
mov
jnp
jns
call
cltd
mov
xor
sbb
sbb
insb
cs
mov
imull
sbb
jle
mov
jmp
in
call
cmpsl
notb
inc
xorb
loope
andl
outsb
aaa
mov
add
mulb
inc
sub
ja
in
int3
dec
cmp
scas
and
lret
pop
mov
stos
mov
mov
push
cmpl
mov
xchg
inc
xchg
mov
dec
ror
aas
mov
cmpsb
mov
leave
je
xor
xor
xlat
dec
imul
push
mov
cmpsb
pop
xchg
js
into
ret
int
ret
inc
jae
ficomps
in
xor
lods
fistps
fisttpll
mov
loopne
stc
xorb
sub
push
xor
out
js
test
pusha
test
or
movsl
andb
psrlq
push
bnd
fs
sahf
andb
sti
out
push
pop
jecxz
push
push
ja
into
in
push
lock
lahf
fiaddl
sub
cmpsb
sbb
lds
xor
sub
add
mov
bnd
cli
inc
test
test
iret
add
movsb
cmp
inc
out
movsl
lret
push
nop
outsl
imulb
insl
push
cmp
mov
jo
jge
enter
in
xlat
cld
incb
movsb
push
in
lods
adc
insl
incb
or
pop
xor
inc
faddl
out
sbb
lds
jbe
insb
pop
and
shll
les
jno
sbb
jp
xchg
sbb
bound
and
mov
fbld
jmp
cwtl
leave
dec
dec
cli
cwtl
ja
lea
stos
test
jns
iret
not
xor
xchg
sbb
mov
test
test
mov
jns
pop
xor
pop
mov
frndint
xor
cs
jecxz
les
xchg
sbb
aaa
andl
push
ja
mov
outsb
jns
imul
xor
loop
aas
addb
pusha
jp
fcmovnbe
cltd
cmp
mov
aam
loope
ss
push
inc
fistpll
aaa
out
dec
push
jmp
in
xchg
enter
push
mov
js
rcrb
int3
mov
mov
lret
movsl
push
xchg
xor
orb
icebp
aaa
jns
xchg
and
loope
int
les
mov
daa
sarb
mov
movl
pop
sub
sti
pop
mov
dec
nopl
jbe
out
rcr
xor
fmul
orb
in
cmp
xchg
jno
mov
or
nop
ss
aas
dec
push
or
push
mov
repz
dec
dec
mov
cmpsb
fdiv
vpshufd
dec
pop
mov
fs
enter
lock
in
add
pushf
and
rorl
loopne
xchg
nop
nopl
adc
xor
clc
fists
xchg
mov
pop
int3
std
mov
adc
sbb
addb
sti
insb
dec
ljmp
mov
push
mov
push
es
push
and
or
out
frstor
imull
andb
rclb
imul
fwait
out
xchg
out
iret
mov
rorl
xor
push
mov
das
push
inc
lods
int3
stos
jl
fmull
xchg
fsubl
fwait
jne
add
popf
jno
mov
push
js
in
js
mov
push
jl
cmpsl
das
add
pop
les
mov
dec
sub
add
xchg
inc
lea
test
imul
xchg
rorl
adc
es
das
jp
daa
ret
test
test
out
repz
lcall
add
mov
outsb
sub
data16
mov
rcrb
loopne
testl
push
jae
or
fiaddl
or
mov
cmpsl
inc
sbb
js
push
mov
and
pop
mov
lret
fdiv
call
xchg
jge
aas
gs
lds
rclb
jmp
pusha
lret
lahf
xlat
outsl
ja
jg
hlt
stos
movsb
and
dec
ja
or
cmp
bound
mov
fadd
xchg
and
shll
or
jb
gs
adc
push
je
pop
das
cld
and
cmp
sub
lods
inc
outsb
das
jl
scas
push
ret
add
cmp
xchg
in
std
pop
int3
xchg
mov
roll
or
enter
imul
nop
cmp
adc
xchg
push
fcoms
sti
or
hlt
std
jg
imulb
in
inc
add
pop
addr16
push
in
iret
in
loope
pop
dec
xchg
outsl
and
jl
sbbb
inc
mov
in
push
xor
fldenv
add
push
lcall
dec
and
scas
dec
out
inc
xor
mov
inc
inc
mov
adc
xchg
push
in
jl
sbb
mov
jg
push
add
push
add
xlat
es
rorb
inc
popa
repz
jp
lcall
outsl
pushl
or
rcrl
ret
lods
imul
sbb
fcmovnu
inc
add
jno
push
inc
enter
sbb
add
mov
xchg
outsb
xor
rcrb
dec
xchg
xchg
std
pop
mov
movsl
les
gs
adc
or
inc
aad
ret
clc
popa
xchg
lods
loope
inc
loop
shlb
xchg
sar
xchg
mov
add
arpl
mov
xor
mov
inc
call
ljmp
lock
push
or
sbb
sub
aas
inc
bound
mov
movsl
jbe
push
xor
divl
clc
push
into
lods
mov
stos
xchg
into
bound
or
jl
sub
mov
mov
mov
add
add
mov
ret
xor
imul
orb
and
sub
mov
jnp
pop
inc
mov
leave
lahf
cli
rcr
sarb
les
sub
xlat
jno
mov
lock
loope
xor
mov
xchg
jge
mov
into
adc
jge
arpl
mov
xchg
or
into
adc
inc
pop
ret
xchg
sub
insl
ret
dec
cs
scas
mov
jge
outsb
or
addr16
mov
shlb
mov
mov
nop
inc
mov
stos
in
or
pop
gs
sbb
push
xlat
xlat
sub
xor
push
mov
insb
aam
lock
mov
dec
lahf
mov
mov
sub
imul
xchg
mov
push
dec
sub
jg
mov
adc
push
outsb
data16
pop
js
jle
imul
and
mov
cmp
dec
imul
cmp
add
aad
xor
call
popa
sbb
jo
add
pop
in
movsl
sub
cli
fstpt
jno
mov
je
inc
pop
fisubl
repz
adc
add
mov
call
lahf
aam
std
outsl
mov
arpl
push
int
push
jmp
dec
mov
movb
daa
xorb
sbb
sahf
jg
scas
jb
push
lret
pop
mov
cs
lahf
or
jl
mov
jge
mov
mov
cmp
in
fwait
mov
iret
adc
and
dec
and
add
out
inc
subl
fiadds
pop
outsl
stos
or
mov
xchg
mov
ds
mov
xchg
aaa
push
roll
sub
inc
jge
mov
test
fidivrs
fdivr
dec
lret
add
add
shrl
jns
add
aaa
insl
aas
mov
nop
mov
xchg
xchg
mov
mov
push
sub
pop
rep
and
mov
ja
in
insb
clc
test
mov
add
scas
test
xchg
ret
push
fs
adc
out
adc
lret
cmp
mov
popa
arpl
sbb
xor
clc
mov
ja
pop
pop
cmp
lods
sub
std
out
test
inc
shlb
ja
rclb
aaa
cmp
xchg
cmpsb
dec
outsl
add
iret
scas
bound
nop
xchg
jae
inc
inc
daa
rorb
movsb
mov
push
pop
cmp
das
testl
jno
add
pop
aaa
fwait
dec
cmp
cmp
add
aad
out
pop
push
inc
cmp
add
mov
jb
shlb
xchg
pop
out
in
jnp
jg
dec
mov
imul
int
xor
iret
les
mov
aam
dec
lahf
mov
gs
insb
sti
dec
sbb
aad
cmp
sub
cmp
add
nop
nop
fcom
adc
call
cli
pop
jmp
cltd
mov
dec
aas
mov
dec
pop
pusha
test
adc
fsubrp
jecxz
fs
add
cmp
fsubrs
mov
repz
pop
les
lods
scas
cs
idivl
push
push
or
and
emms
xor
push
gs
call
das
jb
xchg
add
jae
and
mov
xchg
push
arpl
xor
inc
pop
mov
mov
cmp
xchg
mov
in
in
or
jle
gs
sbb
mov
xor
sbb
je
push
jecxz
mov
insb
popf
loope
xor
popa
sbb
xor
xor
mov
adc
sub
add
jg
push
aam
dec
xchg
js
cmpsl
adc
rorl
xchg
sub
dec
adc
int3
jae
pop
jne
cld
nop
scas
push
rorb
adc
enter
daa
adc
mov
repz
xor
call
lds
andl
jb
idivb
pop
mov
pop
loope
idivb
lcall
push
or
inc
push
mov
push
or
jg
push
inc
shl
xchg
pop
xchg
shlb
andb
push
xor
pop
mov
outsl
ds
mov
or
dec
jg
fsubrp
jo
cmpsl
add
and
loope
aad
or
inc
and
inc
nop
pop
and
push
cmc
jns
xchg
insb
jp
or
fistps
scas
pop
pushf
add
sbb
xor
jns
int3
pushf
sbb
jl
add
pop
out
das
idiv
test
imul
mov
cmp
sbb
aaa
mov
mov
out
push
call
xor
xor
adc
pop
gs
xchg
pop
pop
frstor
test
pop
pushf
add
out
hlt
push
add
shl
xchg
cltd
lds
dec
jbe
test
cmp
cmp
push
and
shll
in
push
mov
popf
or
bound
ja
movsb
mov
negb
cmpsb
jo
push
sbb
push
jo
cli
test
mov
das
ds
xchg
cli
mov
lret
outsl
popf
bound
sub
out
add
pop
cmp
inc
test
or
orl
sbb
and
adc
sbb
sbb
dec
repnz
mov
add
cwtl
test
test
dec
adc
sub
daa
es
enter
dec
sarb
nop
enter
mov
push
fldt
add
in
es
sbb
dec
push
loope
outsl
imul
sbb
cmpsb
mov
mov
inc
xor
pop
pop
mov
or
repnz
movsb
and
rcll
and
fsubl
pop
fdivp
mov
aas
adc
lods
repnz
lret
aam
sub
es
loopne
mov
dec
pop
dec
negl
sti
cwtl
aas
sbb
push
push
pop
cwtl
sbb
adc
sarb
inc
imul
adc
mov
insb
popa
xchg
cmpsb
mov
pushf
fildll
enter
dec
cltd
pop
int
jmp
ljmp
mov
shlb
jne
dec
les
imul
dec
push
pop
pop
int
or
into
pop
pop
in
std
xchg
lar
andl
fdivrl
mov
pop
dec
and
sub
cltd
ficompl
xor
popa
arpl
mov
push
divl
popa
cld
sahf
in
jge
enter
jmp
addl
pop
adc
fwait
xor
fstpt
lret
daa
mov
inc
inc
push
lods
cmp
mov
cs
pusha
inc
cli
jns
cmp
popf
cmc
lahf
and
pop
scas
sub
sbb
jmp
sbb
enter
int3
push
outsl
ficoms
data16
lds
push
cmp
sub
mov
mov
mov
xchg
lds
adc
into
inc
push
mov
movsb
sbb
loopne
fbld
loopne
and
incb
ret
mov
dec
dec
push
xor
jle
shl
add
jb
and
mov
cli
mov
cld
jp
insb
cli
test
sub
mov
cmp
mov
lods
mov
test
jecxz
sub
adc
faddp
xlat
and
lahf
push
inc
mov
mov
or
sub
sub
nop
popl
mov
push
and
mov
leave
loope
das
push
testl
xchg
mov
add
sti
andb
xor
and
add
jno
jne
filds
ja
shr
dec
sahf
lcall
mov
mov
mov
dec
aad
and
push
push
fld1
jecxz
cltd
cmp
imul
push
sub
cli
pop
cwtl
xchg
cmp
lahf
popf
mov
arpl
pop
xor
cmp
dec
out
jns
cmpsl
jbe
dec
jp
fucomi
insb
pushf
pop
lds
add
push
sub
popf
rcrb
ret
stc
ja
test
loope
add
dec
aas
enter
outsl
sub
push
push
mov
and
in
testl
dec
jg
dec
aaa
fdivl
push
fwait
push
stc
ljmp
in
sub
ss
adc
adc
ret
push
cmp
inc
iret
mov
sbb
push
and
xchg
rcrl
imul
sbb
mov
fdivs
sahf
push
mov
pop
mov
mov
sub
lds
out
mov
fcmovu
jne
xchg
lds
push
aaa
push
or
je
nop
xchg
mov
bound
mov
push
fadd
popa
mov
in
adc
shll
pop
fldenv
pop
sub
and
adc
jle
lods
negb
mov
jmp
pop
in
mov
dec
mov
arpl
pop
xor
xor
mov
mov
xchg
inc
xor
lahf
ret
lahf
divl
outsb
inc
cmp
inc
push
sbb
stc
cmp
sub
add
mov
sbb
pop
mov
std
sub
mov
jge
ficomps
sub
fisubl
xchg
push
ds
sbb
or
stos
mov
mov
or
dec
loopne
fcoml
in
loope
and
aaa
sbb
cmc
sti
rcl
mov
call
in
pop
and
jae
xor
jl
dec
outsb
jle
cmpsb
lock
outsb
int3
iret
mov
jg
cmpsb
pop
push
pushf
push
cmp
fildll
sbbl
fbstp
mov
inc
xchg
add
push
movsb
cmpsb
stos
mov
add
mov
jnp
sbb
cmpl
xor
leave
shlb
stos
mov
mov
sahf
push
pop
insl
call
pop
jbe
cs
mov
sub
jge
int3
mov
leave
sub
push
mulb
int
cmp
xchg
pop
loopne
insl
aad
push
xchg
inc
pop
cld
imul
add
test
sahf
xchg
popa
in
int3
mov
xchg
sahf
pusha
cmpsb
lret
stos
call
xchg
or
lods
lcall
sbb
push
pop
cmova
outsl
or
lods
fs
mov
out
das
inc
cmp
jo
test
jno
cld
pushf
ret
xchg
test
aad
enter
or
fildll
sub
or
divb
test
push
ds
cli
int3
or
lcall
and
mov
test
fucom
xchg
jecxz
xchg
dec
data16
jbe
and
not
xchg
sub
inc
inc
pop
sbb
sub
push
daa
nop
cmpl
xor
sub
lods
add
sti
and
movsl
movsl
loope
out
push
and
inc
ja
je
pop
arpl
xor
add
xchg
dec
dec
mov
xchg
testl
das
cmp
in
lds
jp
inc
ja
jnp
movd
icebp
xchg
sub
or
aam
jge
or
dec
inc
pop
jne
dec
sub
mov
imul
mov
dec
ss
dec
sub
add
jge
mov
mov
jmp
mov
or
mov
mov
data16
xchg
sub
push
adc
add
adc
mov
lahf
cmp
jl
insl
aad
cmp
leave
loop
lds
add
or
and
pop
out
inc
push
es
in
test
mov
cmp
in
mov
mov
pop
cs
and
lcall
fucomi
out
mov
mov
dec
mov
les
icebp
mov
xor
add
sub
and
xchg
adc
cmp
out
pop
add
ret
jb
es
inc
and
das
rorb
lock
mov
cli
push
sti
sti
add
jne
ret
sahf
lock
pop
add
mov
dec
push
cs
sub
jns
mov
in
rcll
push
fisttpl
outsb
jg
jnp
adc
jmp
pushf
jb
inc
into
and
cmpsb
dec
mov
jns
mov
sbb
and
push
mov
lcall
pusha
push
dec
loopne
mov
push
pop
pop
add
out
cmp
xchg
push
inc
call
xorb
and
popa
xchg
pop
adc
rorb
sbbb
popa
ljmp
loopne
xchg
push
or
and
call
fmuls
call
mov
xchg
enter
or
jmp
adc
add
jnp
pop
out
int
flds
mov
inc
inc
pop
cwtl
lds
popa
jnp
sbb
push
mov
and
xchg
popa
inc
icebp
sub
add
loop
adc
push
xchg
mov
sub
mov
dec
sahf
test
pop
sbb
sbb
mov
adc
leave
adc
inc
ja
add
shl
and
hlt
push
aad
int
inc
inc
pop
pop
and
or
sub
jnp
sub
sahf
test
ret
cmpsb
xchg
xchg
lahf
fcmove
push
fmuls
in
scas
add
adcl
repnz
push
imul
arpl
iret
mov
push
dec
test
cmp
test
jne
mov
jle
mov
pop
repz
xchg
orl
shl
cli
mov
data16
push
lods
jl
popa
sub
ljmp
sbb
arpl
fldt
push
jnp
cli
xor
repz
xor
xor
int3
es
xchg
or
sbb
getsec
outsb
imul
push
rcrl
scas
clc
imul
inc
ja
jnp
xchg
cmp
xchg
ret
movsb
out
or
outsb
cltd
in
lahf
xchg
jl
dec
scas
fs
inc
xchg
cs
push
or
sub
fnstcw
fwait
std
lea
push
fs
xorb
pushf
xbegin
ret
cmp
dec
sub
mov
xor
xor
aam
jbe
sub
dec
pop
rcrb
jno,pn
test
pop
jno
jne
mov
cmc
jnp
test
jge
sbb
popf
ficompl
repz
pop
ret
push
sub
pop
inc
add
push
jecxz
in
inc
lds
outsl
cmp
push
xchg
jge
dec
rolb
mov
mov
js
icebp
pop
jg
sbbb
or
cmpsl
movsl
ss
out
sti
movsb
gs
push
in
mov
rcll
push
stos
push
arpl
push
ljmp
inc
jg
push
int
lds
loope
cmp
addr16
sbb
mov
and
xchg
cmp
test
stc
jae
jae
fucomi
push
push
cmp
push
fbstp
out
insb
data16
hlt
fcompl
sbb
fidivs
cmp
push
outsl
push
imul
pop
ss
xlat
fs
inc
int3
xor
out
fildl
or
in
cmpsb
mov
mov
mov
inc
mov
pop
loopne
call
mov
dec
sarb
sbb
jmp
je
dec
add
popf
daa
pop
decb
inc
enter
push
pop
xorb
and
dec
loop
mov
push
add
pop
imul
xor
adcl
or
mov
repz
out
xchg
xor
add
rcr
arpl
mov
adc
test
stos
mov
push
and
leave
repnz
loope
cmp
lods
jae
mov
stc
sbb
dec
mov
sbb
xchg
sahf
insb
sarl
out
xor
pop
in
lahf
cmp
sar
arpl
mov
xchg
push
dec
test
fbld
push
inc
or
xor
push
popf
fwait
ss
xchg
fnstenv
push
push
add
fsts
or
sbb
test
iret
sub
mov
jnp
push
push
lcall
dec
cltd
dec
outsb
sbb
das
testl
inc
stos
xchg
dec
imul
xchg
xor
sbb
lcall
jno
mov
lea
pop
dec
xchg
mov
int
add
outsb
mov
sub
sbb
pop
or
clc
dec
jl
dec
sbb
popf
fmul
add
sub
sub
jmp
adc
add
mov
mov
jbe
aas
or
adc
jb
mov
jns
and
arpl
cmpsb
mov
aad
lods
xchg
std
lock
xchg
mov
xchg
gs
shll
std
mov
and
dec
sarl
fcmovb
inc
movsb
leave
mov
arpl
ja
cmpl
ja
cmpsb
cmpsb
and
mov
shlb
dec
jg
mov
cmpsb
jecxz
xchg
add
scas
mov
mov
test
mov
push
xor
popf
jne
sti
data16
stos
or
dec
fstl
lods
push
int3
xor
push
cmp
dec
inc
outsb
popa
fmull
loopne
shld
push
in
lods
decb
xchg
rcl
sub
mov
mov
cmpsl
ret
inc
dec
and
jg
pop
jnp
mov
frstor
and
nop
mov
lock
sbb
inc
or
insl
and
pushf
jp
popa
nop
sbb
jo
lds
insl
or
into
icebp
sbb
fstl
hlt
decl
lock
pop
xor
sub
in
push
jno
in
rclb
pop
pop
lock
mov
mov
test
mov
cs
add
xchg
stc
dec
enter
ret
sbbb
in
in
push
sbb
ss
data16
outsl
inc
lahf
sbbl
loop
nop
inc
xor
sarl
mov
loopne
sub
aaa
movsb
hlt
pop
call
out
ret
push
add
mov
add
out
mov
and
jge
pop
jno
sbbb
inc
adc
ja
adc
jge
xchg
mov
aas
jmp
fldt
jp
mov
test
mov
loopne
inc
ret
and
lods
sbb
std
cmp
dec
xchg
jl
arpl
ss
and
inc
xchg
push
cmpsb
js
aam
popa
inc
hlt
test
xchg
pushf
cmc
xor
nop
dec
jne
repnz
jae
pop
pop
loope
mov
dec
cmp
out
ds
pop
mov
in
cmp
stos
or
aas
and
lods
and
enter
mov
mov
mov
pop
inc
add
lods
cs
adc
sbbb
xchg
sti
pop
adc
std
aad
sbb
add
sub
push
cwtl
data16
jno
and
or
pop
mov
sub
cmpsl
dec
add
lds
int3
sub
push
loop
int
add
into
ret
add
and
xorb
cmp
sub
fidivrs
cwtl
mov
dec
dec
test
mov
and
hlt
rcr
rcl
movd
pop
push
and
pop
xchg
sub
inc
add
or
inc
cmpsb
xchg
jno
in
imul
or
push
dec
scas
out
pusha
cmp
xor
imull
ret
pop
xor
sub
call
dec
call
fldenv
roll
xchg
stos
add
cmp
lds
fisttpl
std
lret
popa
pop
imul
pop
js
gs
push
or
adc
sbb
ficoms
xchg
push
adc
adc
push
pusha
cmp
add
jg
push
jae
xorl
aas
fisttpll
adc
ret
lods
sbb
hlt
cld
cltd
test
out
or
lcall
add
clc
xor
adc
gs
lock
add
inc
aam
fdivrs
call
stc
cmp
lcall
xchg
cmpsb
sub
mov
jae
je
loope
ucomiss
insl
xchg
shlb
hlt
xor
mov
jne
push
icebp
mov
add
lock
popf
inc
xor
pop
daa
lock
lock
sbb
js
mov
shrl
cmpsb
into
sbb
pop
sub
xchg
fidivrl
or
out
adc
popa
push
scas
mov
nop
in
mov
or
jne
cld
daa
or
test
or
shl
aam
aas
js
rcrb
addr16
out
push
leave
sub
mov
in
push
ret
add
inc
js
xor
pop
adc
aam
jl
add
mov
mov
pop
in
push
pop
mov
push
in
das
mov
pop
jg
test
ds
sti
out
jb
in
and
out
arpl
addr16
xor
inc
lods
lcall
jl
mov
hlt
push
xor
je
pop
jmp
mov
sarb
sub
ja
mov
xor
lcall
lea
mov
daa
notb
arpl
lock
test
mov
loop
decl
dec
jmp
shlb
data16
aas
lret
mov
loop
jmp
pop
nop
adc
leave
dec
out
cmp
or
pop
lret
cmc
add
dec
lods
int3
jle
cs
push
pushf
pop
rcr
mov
fdivrs
push
mov
dec
inc
nop
fidivs
mov
cli
add
out
jno
ss
jns
fimuls
lods
lret
add
xchg
inc
xchg
add
add
fidivrl
and
jns
stc
sub
adc
or
into
test
test
fildll
jbe
add
mov
daa
mov
sub
repz
pop
fwait
mov
xchg
adc
aaa
mov
ret
cmp
test
sarb
mov
xor
mov
jecxz
fwait
add
push
stos
inc
inc
shrl
shll
cmp
leave
push
cmp
data16
imul
test
push
ret
into
in
popf
mov
insb
fimull
jp
xor
xor
popf
push
fisttpl
jmp
imul
rcll
jecxz
cmc
mov
pop
jbe
js
xchg
clc
sbb
jge
mov
call
xor
cmpsb
lock
out
fcomps
adc
xchg
and
test
cmp
sbb
fisubrl
sbb
stc
xchg
inc
int
push
push
dec
jo
nopl
adc
int
leave
and
dec
or
mov
xchg
fistpll
icebp
xor
in
nop
or
pop
pop
ljmp
stc
pop
fwait
or
lods
insb
dec
pop
fadd
xor
movhps
ret
sbb
push
mov
and
fs
sti
cmovl
sub
dec
leave
jle
inc
push
mov
nop
negb
cmp
adc
sub
lods
test
leave
les
in
insb
add
fcmovu
mov
call
popa
or
scas
xor
sub
pop
jge
aam
int3
fsts
les
pop
pusha
iret
lock
out
daa
fistps
sub
sahf
cwtl
out
and
push
cmpsb
xchg
mov
mov
aam
je
divl
nop
mov
cwtl
xchg
or
fdivs
jo
cmpl
stos
lods
lret
cltd
ljmp
lock
jae
mov
or
dec
clc
mov
daa
inc
ss
jmp
add
loopne
xchg
adc
jg
jmp
inc
cmp
and
jg
addr16
jne
dec
daa
xor
mov
push
int3
loope
fs
pop
inc
scas
clc
clc
jl
push
push
jp
call
insl
mov
mov
fincstp
cmp
mov
hlt
dec
sbb
inc
imul
out
and
stc
in
in
mov
or
add
lret
js
das
outsb
mov
jge
cmp
in
out
and
pop
xchg
pop
leave
insb
push
sarb
jecxz
mov
mov
push
mov
pop
sbb
ljmp
pop
dec
cld
mov
cmpsl
fcompl
or
je
sbb
sub
xchg
movsl
loope
jns
mov
cltd
dec
add
lret
sbb
ja
das
mov
xor
fcmovu
or
dec
shlb
daa
out
scas
les
ljmp
push
jg
add
xchg
or
fwait
ss
xchg
mov
icebp
mov
cld
fwait
mov
nop
push
mov
call
sub
jp
jle
fnclex
push
rolb
es
out
push
or
cltd
jo,pt
xchg
aad
dec
bound
adc
cmp
dec
iret
adc
in
sbb
mov
cwtl
stos
or
xor
xchg
fwait
cmp
aas
jge
mov
lea
mov
pop
cltd
imul
arpl
xchg
mov
push
icebp
lret
adc
aaa
mov
pop
and
jbe
pop
inc
loopne
sti
sti
cltd
movsl
and
dec
mov
mov
ss
mov
sahf
xchg
mov
loopne
sbb
scas
mov
test
leave
in
cmp
fmul
inc
sub
fmul
xchg
insl
or
scas
shlb
stos
out
xchg
sub
cmp
inc
out
scas
jp
mov
jbe
push
push
in
dec
push
vpminsw
mov
jle
stos
or
cmp
repnz
and
frstor
inc
in
shrl
in
push
lahf
mov
adc
pusha
xlat
push
or
enter
push
mov
sbb
ds
mov
jle
and
dec
cvtdq2ps
dec
sub
clc
fldcw
pop
lds
push
lret
out
stos
inc
dec
out
imul
push
inc
lock
fbld
dec
xchg
mov
cltd
cld
cwtl
outsl
ror
adc
or
mov
mov
dec
inc
orb
xchg
icebp
mov
nop
mov
neg
xor
out
outsb
xchg
jmp
icebp
scas
faddp
jne
cmp
jo
mov
push
repnz
pop
push
sbb
aas
leave
stos
cmpl
pop
dec
pop
mov
jo
mov
xchg
inc
les
sub
aam
pop
or
jb
mov
lahf
sub
arpl
dec
lcall
cmpsb
pop
fcomps
jne
mov
jg
movsl
pushf
mov
mov
addr16
xchg
jl
in
cwtl
out
pop
ret
outsb
push
push
xor
inc
xor
ja
mov
es
mov
sahf
adc
push
add
cmpl
or
mov
and
cmp
and
sub
test
mov
hlt
mov
loope
push
pop
add
sbb
inc
pushw
sti
cmpsb
xchg
sbb
in
pusha
mov
add
push
cs
dec
xor
cmp
or
divb
mov
mov
fs
push
sbb
push
stos
mov
add
xchg
rcrl
stc
outsl
sub
pop
jmp
pushf
shl
pop
scas
jns
mov
sbb
inc
xchg
jb
or
rol
jns
jmp
xor
negb
pushl
xor
js
sbb
mov
xchg
jnp
out
ja
sbb
or
add
inc
out
outsb
or
sub
cwtl
xchg
sbb
das
xchg
mov
push
jne
fldcw
sub
cltd
pusha
push
or
xchg
popl
insl
push
lods
push
and
rol
in
fsubs
fcompl
hlt
cmp
loopne
cmc
push
das
jle
scas
xchg
cld
jo
xchg
or
in
jbe
push
lods
movsb
fcomi
pusha
sbb
lret
in
and
mov
push
shrb
stos
inc
popa
mov
xchg
je
sub
cwtl
in
push
data16
ret
and
repnz
sub
scas
mov
decb
js
jp
jl
add
push
test
mov
and
imul
xchg
ficomps
jl
sahf
sahf
imul
in
inc
pop
lock
shrb
jo
push
sbb
imul
data16
mov
dec
push
call
imul
pop
mov
mov
jb
ret
mov
cwtl
jnp
cmpsb
push
cmpsb
push
imul
mov
pop
mov
xchg
inc
sub
pop
jmp
pusha
loopne
sti
cltd
xchg
cmp
mov
sub
popa
in
fiaddl
daa
or
jno
lahf
or
push
sub
dec
mov
leave
pop
insb
cmp
or
and
add
scas
fiadds
mov
inc
adc
ds
stc
popa
xor
ret
lods
mov
es
ss
mov
sbb
aas
dec
push
std
and
push
into
jo
jb
mulb
addr16
pop
push
icebp
ret
in
dec
negb
dec
pop
out
cmp
xchg
insb
es
sahf
push
stos
fisttps
mov
mov
mov
or
jnp
addr16
pop
lock
inc
push
mov
mov
inc
inc
add
leave
and
jae
jae
imul
outsl
jns
jmp
lock
repnz
fnsave
pop
and
aaa
sbb
es
pop
sbb
adc
mov
adcb
fsubrs
pop
call
push
sub
mov
mov
dec
xor
xor
jb
xor
icebp
repz
daa
cmpb
mov
jns
inc
xor
lock
ss
lods
pop
out
dec
daa
jge
dec
cltd
gs
or
shl
mov
cmpsl
shlb
shlb
lods
bound
mov
mul
fsubr
aam
xchg
adc
adc
jge
pushf
les
add
xchg
loopne
arpl
xor
and
cmp
insl
int3
dec
sub
add
ljmp
cmp
cmp
xchg
jg
bound
ds
pop
cmp
push
stc
dec
cld
decl
mov
or
sbb
insl
or
dec
clc
out
mov
dec
inc
push
xor
sub
lcall
mov
xor
fs
jbe
jns
js
cmp
adc
mov
dec
and
aas
scas
adc
inc
shlb
repz
inc
and
xor
and
mov
inc
sub
sti
arpl
add
sub
lods
mov
iret
in
cmp
dec
jo
sub
in
pop
jbe
ret
rol
xchg
loopne
jnp
sahf
inc
movsl
test
shrl
je
xchg
sub
adc
inc
rcll
ja
inc
inc
cwtl
fs
inc
adc
das
repnz
adc
sbb
jle
inc
imul
xor
fmull
mov
je
cs
sbb
stos
repz
jp
and
sub
fisubrs
je
cmc
pop
bound
popa
inc
adc
sub
pop
add
cwtl
adc
cs
push
jl
and
pop
js
xchg
xchg
mov
loope
xchg
mov
inc
push
mov
repnz
jecxz
cmp
shrl
adc
nop
icebp
sub
and
xchg
sbb
dec
dec
in
adc
xchg
ljmp
xor
mov
xor
pusha
add
popf
jno
sbb
shll
pop
ljmp
loope
cmp
adc
xchg
js
pop
mov
xlat
jp
jmp
sbb
lahf
fwait
test
dec
js
test
add
cli
ret
faddl
cmp
negb
scas
mov
push
dec
xchg
imul
jb
xor
push
fcmovu
clc
retw
roll
in
mov
jmp
cs
faddl
and
push
pop
add
jno
mov
into
jo
ret
lds
mov
arpl
pop
icebp
pop
cmp
enter
imul
dec
push
js
inc
es
jnp
fisttpl
popa
stos
push
insb
add
int3
hlt
iret
mov
mov
adc
inc
std
cli
int3
cmp
lods
push
cmpsb
cmp
jo
xor
or
pop
stc
int
lock
fsts
shlb
decb
push
inc
adc
add
or
mov
fmuls
or
dec
or
cmp
outsb
clc
add
hlt
inc
sub
lcall
shll
rcll
jb
mov
lahf
neg
cmp
xor
repz
daa
rcrb
cmpl
test
add
mov
imul
xlat
sbb
xor
xchg
cld
cwtl
outsb
xchg
jb
pushf
pusha
or
mov
mov
dec
aaa
fmul
shlb
push
xchg
mov
sbb
and
ja
aas
or
rcl
push
fldenv
jae
mov
repnz
push
cld
add
pop
aad
push
jl
aam
icebp
mov
xchg
mov
outsb
pop
pop
mov
arpl
dec
shlb
rcrl
mov
pop
jae
mov
cmp
jg
lods
cmp
lods
add
adc
je
mov
test
outsb
leave
ljmp
dec
and
sbb
lock
std
jle
ljmp
dec
test
loope
test
mov
insb
cmp
cli
adc
ss
pop
loop
cmc
add
popa
jns
cmp
insb
out
in
movsb
dec
xor
test
rorl
cmp
mov
cli
xchg
sbb
cmpsb
sbb
fisubrs
in
in
xchg
push
rcr
out
pop
pushf
mov
jmp
in
sti
loopne
icebp
xchg
loop
popa
fwait
cmp
sbb
inc
dec
int
add
lea
inc
jns
cltd
cmpsb
pop
jle
inc
or
cltd
mov
nop
enter
out
adc
add
mov
sub
push
cmp
mov
popfw
dec
or
stc
pop
adc
iret
cmp
aad
test
push
ljmp
push
jns
pop
popf
and
ret
adc
int3
mov
mov
stos
xchg
mov
popf
push
repnz
fistps
jne
inc
mov
jo
das
add
cld
inc
pop
and
mov
mov
leave
call
ja
in
hlt
insl
pop
cmp
test
cmp
adc
cmc
idivl
xchg
pop
push
cmpsl
fildl
inc
dec
xchg
iret
subb
mov
and
jae
sub
adc
dec
incl
clc
cs
inc
pop
jp
in
push
in
pop
dec
je
call
push
mov
aas
jbe
jmp
aad
lea
adc
xchg
imul
into
mov
xchg
mov
jmp
or
or
popa
icebp
pop
jmp
loope
ss
cmp
and
or
add
outsl
ret
and
mov
mov
mov
xlat
insl
in
add
stc
mov
sbb
jo
lahf
in
dec
and
loop
add
jne
call
xorl
loope
fwait
repz
cmp
cmc
xchg
dec
sub
adc
lea
and
icebp
xor
xor
cmc
mov
popl
push
aas
push
fidivl
movsl
xchg
aad
iret
sub
les
out
aas
dec
inc
dec
add
mov
adc
js
daa
and
xchg
cwtl
xchg
xor
sarb
jae
sub
jle
mov
add
clc
sahf
and
sbb
mov
test
cld
notb
inc
out
iret
cmp
add
into
xor
popf
sti
xchg
dec
sub
pop
cmp
xor
imul
mov
mov
loope
stos
in
clc
or
xchg
xlat
inc
or
pop
cmp
sbbb
push
jl
pop
cmpsl
or
inc
loopne
push
cmp
mov
adc
mov
movsb
cmpsl
adc
ret
mov
stos
movsl
fisubs
aam
cmc
mov
inc
xchg
test
mov
add
fiaddl
fiaddl
or
inc
or
loope
aas
test
pop
pushf
repz
add
outsl
xchg
shlb
mov
and
adc
cmpsl
rorl
popf
push
stc
popa
xor
sub
sahf
mov
js
and
rorl
pmulhuw
lods
inc
movsb
call
inc
rcr
fbld
jmp
jb
mov
adc
xor
lcall
cmpsl
aam
xchg
arpl
jo
and
pop
mov
fbld
or
pop
aas
mov
push
cmp
add
lods
mov
lds
das
adc
rcrl
cld
sbb
cmc
mov
dec
xchg
test
insb
cli
js
pop
ds
sub
cld
fistpll
or
and
mov
bound
sbb
loope
sub
sub
add
mov
imul
gs
dec
stc
in
inc
or
and
jb
scas
test
lods
call
fcom
imul
cmp
das
sbb
lods
and
jge
psubd
push
sbb
cmpsb
cli
dec
jmp
shll
js
cmp
dec
outsl
mov
xchg
mov
mov
sti
lds
rorb
jecxz
je
xor
dec
sahf
xchg
lcall
fistpll
dec
xorb
movsb
cltd
loopne
movsb
loope
dec
pop
adc
sub
xor
mov
outsl
lea
jbe
imulb
ficomps
jge
es
aaa
xchg
push
cmp
jae
lods
add
xchg
jp
sbb
or
out
outsl
into
movsb
inc
mov
imul
xor
shrl
mov
in
outsl
push
push
adc
icebp
sbb
lcall
sbb
and
cmp
jmp
and
fiadds
xorl
jnp
test
es
shrb
mov
cmp
repnz
movsb
mov
cwtl
loopne
scas
sub
mov
hlt
inc
add
insb
nop
push
es
inc
in
test
mov
and
loope
mov
adc
cmp
and
incb
enter
stos
xchg
or
add
xor
sbb
or
push
mov
loop
mov
push
pop
adc
xchg
fcompl
ss
adc
outsb
aam
pop
mov
aaa
cmpsl
in
inc
pushf
idivl
repz
adc
test
dec
loop
data16
test
sub
aas
ja
xor
xor
jb
push
insl
cmp
mov
and
sbb
xchg
scas
lahf
inc
sbb
sub
inc
cmpsb
jl
es
sbb
mov
xor
call
xchg
mov
ds
sub
xorb
and
adc
int
pushf
mov
sbb
pop
sub
lods
pop
les
dec
popf
in
movl
push
dec
push
xchg
push
lds
gs
inc
pop
lret
shrb
movsb
je
dec
rorb
lods
in
adc
jl
pop
jne
mov
lahf
mov
jns
mov
mov
sar
push
callw
mov
rcll
ja
lret
mov
mov
xor
out
and
lock
shlb
in
pop
or
movsb
and
sbb
ja
outsb
cwtl
pop
mov
cmp
inc
mov
lock
push
adc
jae
push
cmp
ljmp
jbe
mov
inc
mov
jle
sbb
jecxz
inc
lret
and
xlat
ret
sti
ss
rcr
rorl
mov
icebp
in
xor
and
xchg
lock
jp
or
movsb
inc
shlb
lea
js
pop
cltd
cmc
daa
xchg
jge
pop
and
stc
das
nop
or
ja
in
mov
push
dec
loopne
sahf
push
stc
and
rcl
enter
dec
cmp
mov
mov
outsl
push
mov
sahf
mov
outsl
or
mov
ljmp
pop
repnz
push
adc
mov
loopne
cmc
pop
push
insb
xor
pop
fxch
mov
add
mov
add
into
outsb
mov
aam
fldenv
shlb
int
ds
aam
aaa
pop
sub
cmpsl
mov
es
inc
jge
sub
jle
inc
push
jae
jb
mov
testl
jmp
cmp
lds
es
rcrl
mov
inc
jmp
inc
mov
add
xlat
push
std
cmpsb
dec
notl
incl
outsl
pop
shll
push
pop
dec
lods
mov
jmp
cmpsb
cmp
or
dec
jno
mov
cmc
std
test
gs
sbb
cmp
and
decb
sbb
or
in
call
fdivrs
aaa
stos
shrl
jne
fdivs
rcll
or
ja
mov
mov
pop
push
jo
add
jecxz
sub
sub
stos
pusha
outsb
out
pop
sub
repz
mov
push
mov
dec
pop
xchg
dec
jle
and
je
out
cmp
adc
lret
mov
mov
popf
movsl
pusha
add
std
ljmp
in
and
fistps
xchg
mov
loopne
lock
dec
imul
sbb
divb
mov
xchg
jg
lret
adc
test
jbe
mov
scas
shlb
add
mov
sbb
mov
mov
imul
scas
xchg
sub
lea
roll
inc
int3
cmpsb
mov
jl
sub
jecxz
or
test
inc
hlt
sbb
fnstsw
pop
jg
mov
mov
inc
xchg
add
sarl
gs
mov
aad
jp
push
clc
xchg
and
mov
std
xchg
jge
cmpsb
jo
fst
out
fistpll
out
push
pop
jns
aad
jbe
popf
push
mov
repz
outsl
ja
mov
nop
ljmp
sbb
adc
fs
xchg
xchg
clc
sub
lods
cwtl
in
test
push
out
xor
or
aam
or
dec
and
mov
arpl
pop
mov
jo
gs
jae
sub
out
repnz
sub
cmp
sbb
or
sub
outsb
fmul
loope
adc
aam
out
jns
cmp
add
pushl
add
outsl
add
lods
cmp
mov
pop
iret
cmp
hlt
push
sbb
js
pop
rorl
aad
daa
aaa
mov
insb
mov
mov
loop
ljmp
xor
push
movsb
subb
je
in
sti
pop
repnz
sub
add
sahf
mov
lds
push
xchg
dec
inc
or
cmp
pop
or
stos
mov
lahf
daa
lods
scas
cmc
inc
inc
stos
test
cmp
xchg
repz
xor
push
sbb
pop
insb
aaa
inc
adc
test
xchg
fisubrs
sti
in
and
loope
andb
out
xchg
ljmp
dec
sti
xor
sub
adc
iret
push
mov
lea
mov
inc
inc
ret
adc
out
enter
xor
jg
pop
shlb
xor
in
dec
jne
fwait
mov
rorl
pop
pop
cmp
sbb
mov
ds
cmp
add
cmp
dec
xchg
cmc
or
push
pop
inc
mov
lret
pusha
shll
xchg
in
fxch
insb
sub
and
cli
std
cmp
jnp
les
pusha
jg
loope
jmp
test
in
dec
ljmp
outsl
mov
or
mov
shr
push
push
test
cmp
scas
jno
sub
push
mov
mov
leave
insl
test
insl
stc
outsl
push
mov
rcll
mov
adc
popf
push
out
movsl
sbb
sub
out
cmpsl
sbb
sbb
mov
sahf
rclb
push
or
jne
stos
call
jbe
fs
xchg
or
jbe
aas
or
push
in
mov
sbb
je
cmp
cli
xor
lahf
and
and
xor
xchg
lret
sbb
daa
add
push
push
mov
sub
lret
sbb
mov
mov
mov
dec
out
mov
cmp
cmp
flds
lret
loop
insl
sti
and
adc
fucomip
ljmp
lea
inc
les
lock
or
mov
fwait
dec
lret
mov
push
and
ret
jae
jns
sub
pop
scas
xorb
cmp
push
imul
xchg
aas
xchg
cmp
push
mov
jne
or
clc
stc
xorb
rolb
push
dec
popa
stos
mov
repnz
test
push
inc
jno
hlt
jo
insb
mov
pushl
xor
sub
movsl
aaa
mov
cmp
cltd
mov
shrl
jne
call
and
pop
sub
cmp
cmp
rolb
or
sbb
dec
addr16
inc
std
push
ljmp
pushf
mov
scas
pop
pop
and
inc
or
mov
inc
dec
dec
add
sub
insl
dec
jnp
pop
aas
adc
outsl
and
dec
mov
cmpsb
cmpsb
lret
adc
dec
out
sar
rol
call
pop
inc
repz
idivl
and
pop
stos
loope
sbb
notl
es
test
pop
mov
int3
mov
adc
rcrl
push
adc
sbb
sarl
and
pop
mov
out
imul
jg
push
mov
mov
test
test
roll
fcmovnb
lret
mov
pop
test
movb
sti
sub
aas
mov
xchg
jns
mov
in
inc
push
sbb
dec
sub
xchg
gs
mov
decb
jne
xchg
orb
fstpl
sbb
repz
daa
mov
loopne
repz
pop
loopne
test
rorb
rclb
test
pop
add
loop
sub
flds
mov
sbb
stc
pop
imul
dec
jb
stos
mov
in
jmp
push
push
stos
test
shll
jge
in
or
stos
and
cmp
xchg
enter
fdivrs
outsl
pop
jmp
lea
or
cmp
inc
int
aas
inc
clc
or
cwtl
rcrb
pusha
mov
lret
xchg
outsb
mov
dec
dec
jns
inc
jl
pop
sub
mov
pop
dec
xlat
dec
pop
out
cmp
push
rcr
xor
lods
idivl
inc
hlt
lea
cmp
mov
outsl
movb
sub
adc
dec
cmp
adc
in
push
or
lret
pop
fwait
mov
jae
mov
fdivs
je
in
test
sub
adc
adc
jg
and
lea
icebp
lods
stos
push
xchg
jne
lods
insl
or
and
fwait
mov
out
les
mov
jg
cmp
sti
aam
fildl
mov
sbb
adc
addr16
push
cmpsb
rol
in
scas
mov
cs
push
jp
into
daa
lods
lock
jno
mov
and
sbb
scas
cmp
out
popa
xor
dec
addr16
fcomp
bound
push
or
outsb
cmp
jle
test
je
jp
mov
stos
sarl
divl
and
xlat
fisttpll
jb
lods
jnp
pop
shlb
or
add
inc
jns
hlt
ret
push
inc
popa
das
or
ja
rolb
loopne
mov
push
mov
mov
and
pop
push
mov
push
repnz
aam
inc
gs
push
mov
jb
les
xchg
adc
sbb
into
insl
ljmp
iret
sub
aam
aad
cs
xor
xor
jo
adc
dec
push
iret
aad
xor
arpl
iret
and
inc
inc
daa
cld
stos
xor
push
or
add
jmp
push
jae
dec
push
inc
in
out
inc
hlt
pop
hlt
fnsave
insl
sbb
push
push
fs
dec
push
pop
sub
pop
mov
lds
pushf
adcl
fildl
sbbl
xchg
add
jp
je
sbb
jmp
pop
fs
out
push
out
lret
stc
ss
ds
dec
inc
popf
jp
and
outsl
icebp
pop
outsl
push
sbb
jns
sarl
xlat
jno
mov
ss
push
loopne
roll
imul
mov
icebp
mov
iret
jbe
sub
pop
call
fwait
in
add
daa
lret
fimull
add
inc
jmp
cmc
stc
mov
mov
pop
fcoms
mov
aas
inc
fwait
mov
mov
sub
jmp
sahf
emms
ljmp
mov
fadds
fisubrl
call
pop
movsb
pop
dec
mov
outsb
scas
jg
mov
jmp
pop
popf
xor
dec
outsl
std
and
lods
sub
repz
sbb
shr
int
loopne
mov
js
cmp
test
add
fidivrs
repz
push
push
push
mov
loopne
aad
into
mov
out
push
push
jne
jmp
jo
jmp
imul
bound
cwtl
push
push
shl
adc
jl
inc
cli
scas
dec
sar
cmp
cwtl
xor
je
sbb
loopne
ficoml
cmp
aad
cmp
enter
mov
lret
adc
push
movsl
arpl
mov
jecxz
dec
test
dec
and
mov
add
or
addb
enter
adc
pop
insl
jno
push
sti
push
or
pop
pop
sub
mov
jecxz
jp
mov
cmp
fildll
in
jb
inc
jp
mov
cld
mov
pushf
or
xchg
jne
negl
gs
sarl
and
aaa
stc
mov
adc
mov
xchg
add
roll
adc
stos
or
sub
movsl
pushf
dec
sahf
xchg
call
add
fbstp
aam
push
sbb
xorb
dec
pop
out
or
xchg
gs
int3
xchg
nop
test
fwait
test
xchg
neg
iret
jmp
nop
pusha
loope
adc
xor
ja
mov
jae
pop
in
pop
xchg
sub
lea
mov
xor
popa
add
test
jp
jmp
add
adc
test
and
mov
pop
and
xor
dec
dec
pop
in
push
lea
adc
push
in
xchg
mov
mov
cltd
mov
test
lcall
mov
sub
fstps
test
sub
and
cmp
lods
sarl
pop
out
inc
leave
adc
inc
mov
inc
push
inc
roll
popf
in
jb
add
hlt
cmp
pusha
sti
roll
cmp
mov
inc
cld
hlt
lock
mov
ljmp
mov
adc
sub
pusha
pop
push
sub
fwait
aaa
rcl
xchg
or
add
lods
jbe
enter
mov
push
jge
sub
sbb
aam
rcl
or
pop
in
stos
addb
xchg
add
mov
icebp
sub
inc
ffree
inc
pop
push
in
push
imul
aas
stos
mov
daa
lret
jbe
jmp
cmpsl
enter
xchg
lods
addr16
jmp
lret
mov
lcall
sbbb
rcrl
or
lock
fdivs
sub
xchg
cs
pop
frstor
push
xchg
hlt
ficoml
or
mov
in
mov
inc
fldenv
jne
and
mov
cmc
dec
add
lods
jnp
mov
lock
scas
sub
addr16
jp
push
sti
arpl
int3
sub
fnstcw
and
mov
push
pop
stc
or
nop
loope
ljmp
mov
popa
sti
test
xchg
or
push
push
push
test
dec
mov
testl
out
mov
fldcw
add
je
xchg
push
lds
mov
dec
fwait
mov
popf
lcall
imul
data16
in
push
pop
testl
adc
popf
pop
xor
pop
ljmp
mov
pop
mov
mov
mov
mov
sub
cmp
mov
adc
arpl
mov
scas
arpl
jecxz
insl
ljmp
ja
adc
sbb
fsts
cmp
test
imul
or
mov
fmull
adc
test
mov
add
mov
jnp
daa
add
dec
xor
jae
cmp
rcll
xor
fidivl
jns
add
and
inc
scas
sub
xchg
in
icebp
xlat
add
out
rorl
inc
adc
out
xchg
ret
dec
test
push
push
xor
stos
adcb
pop
inc
and
ds
push
and
jecxz
jns
in
pop
aad
xchg
xor
pusha
mov
pop
divb
push
mov
fwait
out
lds
mov
mov
std
push
in
or
out
or
mov
xor
mov
subb
lcall
clc
insb
dec
mov
mov
pop
xor
js
cli
popf
int3
mov
sbb
stos
rorl
in
data16
pop
push
jle
adc
jle
pop
enter
push
stos
data16
xor
sbb
mov
push
jl
xchg
xor
stos
mov
loopne
int
es
sbb
out
icebp
fs
imul
hlt
add
mov
dec
cld
mov
add
adc
jne
adc
lock
add
cwtl
ljmp
popa
arpl
inc
in
push
push
data16
aad
and
outsb
mov
jbe
jae
adc
fsubrs
pop
orl
jp
and
sbb
test
popa
rcrl
outsl
dec
repnz
sti
cmp
push
sbbl
or
jp
lret
dec
jae
cmp
imul
sbb
xchg
shrl
out
rcl
and
xchg
mov
or
push
cld
iret
jb
adc
push
sbb
insb
mov
ljmp
loope
sbb
fwait
mov
and
lds
xorb
addr16
inc
and
rolb
js
mov
lods
aad
pop
jnp
ljmp
pop
mov
in
cmp
aad
push
xchg
and
ret
es
xchg
loopne
jle
xor
aam
out
in
fwait
cmp
jne
mov
in
sub
push
push
adc
movsb
std
mov
shlb
add
fldcw
push
testb
pop
adcb
mov
sub
out
sub
push
add
mov
fwait
into
scas
inc
mov
loop
mov
adc
sbb
addr16
push
pop
pop
adc
icebp
pop
cmp
mov
lea
mov
xor
mov
pop
dec
push
xchg
fldenv
push
lds
mov
xor
mov
frstor
sbbl
ret
mov
popa
xchg
addr16
ret
sub
cmp
fiaddl
fdivr
call
inc
scas
das
mov
mov
push
mov
aaa
xchg
cmpsb
sbb
xchg
xor
jge
cmp
js
jmp
push
fs
test
je
push
jg
subb
test
in
or
mov
out
lcall
xchg
cmp
int
adc
jmp
xor
ror
push
or
pop
clc
jp
sahf
xor
mov
into
push
cs
ss
repnz
loopne
aad
fadds
mov
cs
push
push
adc
mov
int
add
mov
dec
push
pop
add
xchg
test
int3
outsb
mov
pop
sub
pop
neg
add
mov
dec
mov
mov
xor
cwtl
xchg
xlat
add
out
lock
adc
sbb
aam
ret
cwtl
jp
mov
and
cmc
out
lods
nop
stos
stos
lcall
jb
stos
jmp
add
mov
xchg
xor
xchg
adc
mov
jmp
or
in
push
pushf
pusha
add
push
pop
pushf
aam
mov
dec
push
jbe
dec
xchg
das
pop
fcompl
push
jl
ficomps
dec
adc
mov
and
cmp
outsl
ret
repz
ss
xchg
pop
push
mov
pushf
cwtl
jnp
std
cmp
out
mov
jb
into
stc
cs
data16
es
adc
mov
xor
addr16
je
std
popa
pop
arpl
mov
sarl
in
inc
mov
test
test
mov
xchg
jge
xchg
ss
pusha
push
dec
insl
pop
int
mov
imul
mov
in
and
lahf
cmp
push
fdivl
cmp
dec
sbbl
fldt
inc
leave
push
add
dec
inc
notb
add
int3
hlt
mov
sub
sbbl
enter
cmpsl
cmovne
movsl
pop
pop
jb
sti
pop
shrl
fldt
cmp
dec
push
into
sbb
inc
jmp
adc
xorb
repz
js
push
ljmp
fisubl
aam
fsubs
loope
adc
lods
pop
out
lea
add
lods
fsub
sub
or
jge
fiadds
push
jg
fwait
sbb
iret
mov
dec
out
lret
xchg
mov
insl
je
jnp
stc
aaa
testb
add
jle
loope
adc
dec
push
cmc
je
cmp
dec
and
cmp
dec
adc
pop
adc
or
ds
cmp
rorl
aaa
mov
fildl
sub
or
xchg
lods
flds
loope
push
aaa
inc
sbb
lods
test
dec
test
sbb
add
repnz
rol
lods
jmp
dec
or
in
or
call
and
or
cld
and
cs
movsb
push
fs
jb
in
mov
dec
or
push
scas
sub
addr16
hlt
andl
mov
dec
mov
scas
mov
pushf
push
mov
aam
lret
push
out
mov
push
addb
xlat
mov
or
test
insl
pop
sbb
bound
insb
stc
lods
gs
rcrl
dec
mov
je
inc
lahf
sbb
push
mov
pop
cltd
push
sbb
fcomi
xchg
push
loope
xchg
jne
mov
mov
lock
jne
pop
cld
out
xor
addb
sbb
mov
xchg
or
imul
dec
js,pt
iret
pop
or
cltd
stos
sahf
enter
pop
dec
sbb
jmp
lds
push
repz
pop
ficomps
fdivl
add
sub
pop
fisttpl
or
cmpsl
mov
popa
pop
push
movsb
mov
mov
imul
in
out
je
push
or
mov
jnp
in
or
pop
mov
mov
push
js
in
mov
test
push
js
mov
lea
push
fnstenv
js
fmuls
push
mov
in
xchg
xlat
sbb
xchg
inc
insl
loop
adc
sbb
mov
jne
add
cwtl
arpl
mov
test
push
adc
cmp
pop
lock
xchg
cmpb
es
jecxz
mov
cmpsb
mov
out
sbb
mov
add
mov
in
sbb
pop
cmpsb
xchg
cltd
cld
add
pop
pop
fdivrl
roll
xchg
xchg
arpl
sarb
xchg
das
je
mov
push
dec
push
aaa
sbb
xorb
pop
inc
test
pop
mov
call
push
cmp
pop
pop
dec
mov
lcall
cmp
adc
push
mov
xor
lods
push
es
icebp
test
rolb
push
adc
jnp
test
inc
cmc
cmp
jnp
outsl
movsb
stc
fbstp
sbbl
stos
sub
nop
les
lea
cs
jae
fisttps
ret
inc
lea
cmp
mov
fsubs
and
dec
xor
aam
and
xor
xchg
pop
imul
cmp
mov
daa
mov
xchg
sahf
mov
pop
in
daa
fisttps
imul
jae
es
f2xm1
nop
pop
adcl
xchg
adc
push
test
je
call
std
andl
repnz
xor
add
pop
jl
leave
inc
adc
jo
mov
jb
lock
dec
outsb
test
clc
pop
aad
pop
mov
inc
push
shr
mov
xor
pusha
or
je
inc
cwtl
push
inc
add
jp
loope
or
add
jmp
outsl
cmp
mov
xchg
cmp
stos
dec
push
stc
xchg
xchg
mov
mov
cmc
fsubrs
rclb
push
call
or
sti
dec
dec
adc
or
sub
jg
mov
pop
stos
aad
je
xchg
adc
dec
dec
mov
shl
cmpsl
lcall
shrl
ds
or
imul
jp
mov
je
pusha
ret
jns
push
ja
xchg
sbb
pop
lret
add
aam
xchg
js
and
pop
pop
sarl
and
cmpsl
xchg
insb
sub
nop
js
xchg
jl
sbb
inc
andl
ficoms
jne
mov
fucomip
arpl
pop
pop
arpl
sbb
addr16
inc
loopne
dec
arpl
incl
aaa
stc
adc
or
shr
das
inc
inc
sub
jb
mov
loopne
xchg
add
xlat
pusha
fdivrs
sub
jg
mov
mov
xchg
and
outsb
cmp
cmp
mov
sbb
mov
in
push
pusha
lcall
cmpsb
jo
mov
fmull
adc
sbb
adcl
mov
or
jae
in
jae
push
sahf
push
dec
lret
xchg
rclb
sub
lahf
push
jns
orl
push
jge
push
cmpsl
sti
mov
lods
ficomps
sbb
shrb
mulps
inc
mov
int
push
lret
pop
fwait
xchg
mov
std
ret
enter
in
jmp
pop
push
andb
cmp
inc
push
icebp
out
imul
sbb
mov
or
push
test
or
xchg
outsb
lcall
ds
testl
fistl
sbb
jge
clc
jae
jb
sub
pop
xchg
and
stos
cmp
xchg
idiv
bound
xor
inc
mov
popf
jmp
dec
pop
and
push
mov
sbb
cmpsb
lea
pop
es
jo
push
xchg
push
cmp
inc
pop
test
mov
stos
pop
xchg
fdivrl
jbe
enter
or
sbb
dec
adc
fwait
sbb
adc
pop
cmp
pop
cli
stc
xchg
cmp
push
scas
test
mov
pusha
sbb
xor
movsb
sbb
jge
icebp
scas
icebp
daa
mov
xchg
mov
neg
jmp
imul
fisttps
cmpsl
insb
fiaddl
dec
gs
ja
or
das
sbb
movsb
nop
xor
sbb
mov
pop
mov
enter
imul
lods
iret
fistl
xchg
jle
pop
addr16
adc
rol
mov
cmp
mov
lds
push
or
jb
cld
out
xor
xchg
in
xchg
mov
mull
decb
xchg
dec
mov
pop
daa
mov
cmpl
or
dec
hlt
pop
leave
sub
call
jae
pop
imul
sti
sbb
lds
nop
pop
sub
movlps
mov
add
lea
or
push
lret
mov
fs
or
imulb
xchg
mov
outsb
shlb
or
sbb
push
sbb
aaa
xchg
popa
push
arpl
cmp
add
ret
jg
movsl
cmp
add
mov
cmc
movsb
jmp
fiaddl
mov
jno
jae
ljmp
inc
cmpl
js
nop
push
loop
inc
inc
ret
dec
int3
mov
pusha
pop
mov
ljmp
xchg
xchg
or
shl
orl
add
outsl
jo
sub
js
or
fwait
stos
sub
xchg
add
in
jle
mov
sti
or
and
mov
xchg
cmpsb
loope
inc
dec
inc
andl
pop
into
inc
clc
lret
shlb
add
test
xor
jp
aas
push
mov
subl
das
add
xchg
jno
inc
xchg
lahf
enter
push
mov
add
sub
jbe
pop
fninit
adc
sbb
into
jb
clc
je
xchg
in
fcmovnbe
clc
and
pop
xlat
and
push
movl
dec
xor
and
xor
sbb
jno
mov
jo
dec
ds
mov
out
loopne
lods
jecxz
pop
cmp
les
pop
daa
popf
icebp
pop
cli
mov
and
xchg
out
inc
into
cmp
cmc
out
outsl
mov
int3
sub
test
xor
inc
std
hlt
ficoml
out
mov
scas
call
xor
sbb
sub
imul
pop
sub
pop
add
sbbl
iret
test
cmpsb
cli
mov
jmp
pop
xchg
je
cmp
xchg
sub
in
dec
jecxz
jmp
mov
pop
jl
loop
inc
pop
and
mov
mov
dec
movsb
and
scas
cmp
fstpl
test
or
je
fbld
xor
cmp
aas
push
jae
mov
mov
popa
inc
add
ds
cs
sahf
jp
jo
or
mov
adc
mov
aam
leave
in
pop
lahf
adc
inc
mov
cli
jns
pop
mov
stos
mov
je
dec
dec
or
test
in
sbb
and
ret
dec
xchg
sarb
out
or
popf
xor
in
fisubrl
cli
fs
add
inc
lods
jno
jns
pusha
add
scas
clc
gs
push
push
mov
or
jg
out
inc
adc
lods
aam
and
loopne
daa
sbb
lahf
and
mov
jo
imul
push
cmpsl
jecxz
mov
lock
jecxz
pop
jo
in
xchg
in
call
test
pop
lret
mov
js
scas
arpl
aas
dec
mov
dec
push
rcrb
les
punpckhdq
scas
inc
push
insl
lock
movsl
xrelease
mov
jns
dec
ret
pop
and
pusha
xor
and
mov
jp
xor
xor
xchg
insl
rclb
xor
inc
cmpsl
roll
push
mov
addr16
clc
xchg
inc
dec
aam
xor
enter
add
movsl
push
cmpl
in
xchg
mov
insl
repnz
lods
sbb
push
in
mov
notl
xor
push
decb
daa
and
scas
mov
stos
pop
negb
dec
into
cs
mov
xor
cmc
jbe
mov
fcmovnbe
mov
jmp
or
dec
fs
sbb
dec
loopne
inc
jecxz
popa
cmp
addr16
ja
pusha
scas
jmp
jb
adc
mov
or
sbb
in
dec
lds
adc
cmp
dec
enter
mov
repz
jb
data16
scas
out
loop
jecxz
js
push
out
mov
movsb
subb
aaa
leave
or
jle
ja
push
sub
mov
dec
dec
testl
hlt
jg
leave
int3
push
div
imul
mov
out
lods
mov
ret
mov
idivl
mov
les
dec
rorb
popa
jp
jbe
clc
sbb
es
test
sbb
aas
jo
mov
or
cmp
mov
ja
outsb
push
and
cmp
lea
lcall
push
shlb
xchg
loop
arpl
ljmp
push
inc
push
jecxz
dec
and
add
bswap
leave
loopne
add
pop
pop
ss
shrl
jae
in
ss
out
subl
mov
mov
mov
xlat
pop
cmpsb
sbb
scas
test
push
test
lods
pop
mov
js
shlb
sar
push
test
xor
mov
mov
popf
arpl
sbb
lds
dec
pop
fimuls
pop
xchg
xchg
push
inc
dec
rorb
in
and
mov
std
ffree
popa
imul
in
xor
dec
mov
insb
fucompp
stos
out
push
jg
jb
call
jp
add
push
enter
outsl
es
pop
sbb
mov
arpl
int3
push
add
imul
dec
es
dec
jne
mov
mov
sbb
arpl
lock
xor
jne
cmpsl
push
mov
pop
fs
cltd
cmc
arpl
mov
bswap
insl
push
iret
inc
dec
out
sarb
mov
mov
jae
mov
xor
loopne
pop
out
jle
xchg
xorl
outsl
dec
jge
xor
in
mov
inc
xlat
repz
push
subb
inc
xchg
fnstsw
sub
xor
jmp
pop
out
lret
stos
cld
sub
ss
xchg
lahf
outsl
add
jno
mov
push
scas
gs
clc
fdecstp
mov
xchg
pop
test
inc
sbb
and
leave
jbe
jbe
movsb
fidivl
sub
icebp
out
das
addl
or
push
mov
imul
xor
jmp
loop
out
shl
loope
mov
daa
inc
shll
andl
pop
pop
nop
daa
mov
mov
pop
xchg
jmp
repz
push
pop
mov
pop
mov
bnd
mov
andl
dec
ja
add
arpl
mov
ss
jmp
xor
push
pushf
lds
call
es
cmp
mov
push
clc
push
mov
imul
push
int
test
or
pcmpgtd
hlt
dec
lods
out
decb
mov
enter
inc
sub
dec
push
xchg
jmp
cwtl
sahf
and
je
pop
jge
xlat
test
jo
into
icebp
sbb
push
cwtl
cmp
lods
mulb
orb
fmul
inc
xlat
jmp
movsl
mov
mov
ds
movsb
lds
cmpsl
cmp
jb
pcmpgtw
mov
das
sti
inc
xchg
lahf
inc
in
add
jmp
adc
or
mov
sub
mov
fcompl
pop
cmpsb
mov
repnz
jmp
outsb
push
xchg
rep
mov
sub
xlat
inc
movsb
mov
bound
loope
bound
xchg
sub
xchg
jmp
int
popa
gs
pop
or
sub
push
or
fadds
pop
push
and
push
xchg
ss
jbe
imul
bound
inc
pop
dec
push
or
jbe
rclb
cld
outsb
aam
cwtl
xchg
data16
mov
in
fdivrs
ljmp
mov
xor
fnstenv
and
fcompl
jnp
xchg
sahf
fwait
jo
dec
or
jnp
adc
dec
and
inc
mov
ret
negb
inc
jge
jns
scas
sub
xchg
jmp
sahf
xor
test
lahf
add
out
adc
xor
stc
enter
sub
fwait
mov
jmp
lea
inc
imul
jo
punpckhbw
sub
pop
insb
push
insb
hlt
aaa
mov
les
add
ljmp
or
in
scas
dec
and
pop
xchg
pop
xor
sub
xor
lods
push
enter
mov
and
imul
clc
pop
mov
jae
pop
cld
stc
test
insb
dec
gs
ja
iret
cmp
or
lods
stc
pop
and
dec
sub
ret
push
stos
lds
jnp
xor
loope
xchg
stc
hlt
stc
push
mov
fst
or
jp
sbb
mov
and
iret
push
repnz
adc
test
incb
mov
enter
inc
push
cmp
insb
mov
shlb
add
leave
jmp
fidivrs
push
shl
push
add
sbb
lock
mov
test
nop
mov
dec
inc
js
pop
adc
sub
mov
stc
stos
pusha
out
lea
fdivs
jp
mov
pop
inc
and
mov
es
outsl
inc
nop
inc
and
cltd
ret
andw
fadds
lea
add
and
jae
cmp
sahf
jecxz
mov
cli
xor
dec
jl
push
sbb
mov
inc
lods
adc
push
popa
push
repnz
dec
decl
sub
mov
jno
mov
cmp
cld
cmc
inc
or
adc
dec
arpl
sbb
dec
lret
rcrb
xor
cmc
icebp
add
ret
xchg
jle
pop
adcb
shrl
sub
aam
adc
bound
mov
dec
scas
adc
insl
mov
lods
inc
icebp
stc
test
mov
ret
mov
inc
xchg
cs
in
and
hlt
lods
ret
dec
pop
dec
rdtsc
dec
adc
shrl
jnp
repz
int
popf
dec
sbb
outsb
push
jo
jae
mov
ljmp
add
jge
nop
sbb
movsb
xor
pop
cli
out
jmp
ja
pop
clc
xor
sub
jge
dec
jb
in
sti
sti
addb
aad
data16
mov
sbb
ds
xor
loop
cwtl
sub
inc
mov
stos
stos
push
mov
xchg
rorl
mov
clc
cmp
sub
repz
pop
and
jbe
mov
in
xor
push
arpl
movsb
inc
jmp
movsb
pusha
pop
pop
pop
cli
pop
and
lret
rcrl
nop
mov
or
daa
xor
sbb
aas
xor
lods
je
fwait
xorl
and
loop
jno
scas
pop
push
cli
out
adc
sub
faddl
les
adc
xchg
sbb
add
jp
dec
sub
pop
jg
inc
cli
int3
pop
push
cmp
out
and
fnstcw
mov
shrl
outsl
cltd
inc
test
dec
jl
hlt
jg
out
stos
dec
cs
js
dec
sub
pop
repnz
push
cmpsl
mov
push
scas
mov
push
inc
xor
mov
ja
push
imul
mov
insl
pop
jne
cmc
cmp
xor
iret
push
mov
pop
sbb
push
cld
xchg
and
cmp
push
and
push
mov
ret
sub
jno
stos
stos
hlt
mov
test
and
inc
pop
testb
rcrl
push
negl
test
pusha
mov
mov
mov
xchg
into
lods
sbb
lea
movsl
lcall
repz
push
call
dec
pop
pop
cmpsb
sti
jo
mov
pop
adc
mov
inc
popf
loope
xor
faddp
cmp
rclw
bnd
addl
pop
lcall
mov
add
sbb
inc
dec
test
or
xor
iret
push
jnp
push
inc
push
addr16
add
test
adc
push
mov
int
add
lahf
pop
enter
jo
mov
cmpsl
pop
xchg
jnp
xor
sbb
adc
push
inc
sbb
femms
ds
addr16
cltd
leave
mov
add
stos
push
out
add
lds
xchg
lods
fistpl
lods
into
dec
inc
fcmovbe
fcoml
out
aad
xor
or
xor
dec
fs
adcb
cmp
shll
push
fnclex
or
pop
ret
jbe
lret
std
push
mov
sahf
jmp
fcoms
pop
xor
fs
jmp
add
ss
mov
sub
call
sub
push
stos
cmc
xlat
insl
in
in
push
mov
les
inc
pop
mov
push
push
stos
push
outsl
adc
ret
sbb
add
sub
fs
das
adc
jno
jge
pop
add
lods
mov
mov
das
and
and
ss
dec
repnz
cmp
aas
and
or
movsl
mov
inc
cmp
nop
cld
les
in
xor
and
xchg
in
rcrb
pop
leave
add
push
jle
imul
scas
pop
cvtdq2ps
dec
lods
xchg
sbb
mov
push
mov
add
outsl
das
or
and
add
lret
jp
or
scas
mov
scas
movsl
fwait
lret
adc
push
mov
mov
sub
mov
xchg
adc
test
push
jp
loop
outsl
add
rcll
mov
lods
rcpps
push
inc
jae
call
and
fnstsw
cwtl
jg
push
add
pop
mov
lods
sub
js
pusha
sti
add
cmpl
popa
xchg
mov
push
push
or
call
adc
inc
push
movd
pop
insb
lods
adc
mov
mov
cmpsl
fdivl
lea
ret
xchg
lret
shlb
xor
je
repnz
addr16
adc
inc
sbb
and
out
pop
popa
mov
inc
xchg
flds
add
outsb
xor
sahf
xchg
xchg
shlb
loope
jns
pop
inc
insl
mov
sbb
in
sub
in
xchg
mov
cltd
xor
loop
out
mov
insl
data16
inc
cmc
add
pop
jecxz
adc
jb
mov
cld
test
rcl
icebp
cwtl
adc
jo
mov
cmpb
das
sbb
es
push
lods
mov
or
inc
and
or
stos
mov
call
inc
arpl
adc
sub
inc
cmp
lea
mov
test
int3
test
out
xchg
fbstp
enter
xchg
mov
xor
in
call
dec
andl
or
push
adc
adcb
andb
pushf
sub
lcall
pop
test
xchg
fs
jle
rcll
stc
addl
jbe
int3
push
fucomp
daa
xor
mov
xlat
add
mov
scas
lcall
aas
pusha
adc
jb
push
fmull
sub
rol
mov
jnp
mov
and
in
or
dec
rol
dec
stos
mov
leave
or
sti
outsb
and
and
cmc
sbb
stc
push
es
fwait
insb
hlt
xor
xchg
fdivrl
or
add
jl
mov
pop
cli
pop
or
xor
arpl
imul
test
add
mov
sub
shrl
xor
lret
movsb
mov
es
rorb
es
cli
jno
arpl
push
adc
shll
mov
fnsave
or
jb
ds
inc
xchg
xchg
lock
cld
leave
clc
push
lods
cwtl
nop
test
pop
jp
out
inc
mov
mov
fcom
sbb
cmp
hlt
imul
pop
out
mov
inc
mov
xor
imul
iret
jmp
fcmovnu
adc
insl
stc
xchg
mov
push
adc
inc
dec
lahf
shr
movsl
mov
and
ficoml
push
lock
and
out
mov
loopne
xor
enter
inc
insb
add
and
xor
or
nop
orb
pop
mov
inc
inc
dec
or
data16
arpl
ret
subb
sti
icebp
push
and
je
add
in
fdivs
lock
lods
pop
sub
push
cmp
pmaxsw
mov
adc
and
xchg
stos
mov
xor
xchg
add
push
and
aaa
xchg
loop
lods
xor
das
ja
adcb
dec
pop
or
xchg
jbe
mov
inc
imul
fs
loopne
out
decb
jo
insb
outsb
cmp
push
ror
stos
mov
mov
pop
jge
ret
jbe
sub
cmp
cmpsl
or
scas
mov
lds
cmp
push
fistpll
push
or
push
mov
pop
mov
xor
xlat
lods
orb
out
stos
adc
jns
gs
daa
repz
jmp
lea
subl
sbb
loop
je
ret
cld
sti
cmpsb
cmp
jg
popa
mov
ret
les
out
xor
cmp
inc
das
pop
cmpsb
or
and
es
sub
in
icebp
adc
adc
mov
adc
clc
aad
lcall
lcall
lcall
movb
movb
jne
leave
mov
pop
mov
mov
outsb
push
mov
in
das
pop
pop
outsb
xchg
data16
bnd
lock
out
push
test
cmpsl
cli
xchg
jae
xchg
cmp
push
push
clc
sbb
scas
pop
jbe
fsts
push
fsubr
inc
pop
adc
in
or
imull
ret
pop
testb
pop
stos
fcomps
push
test
std
jo
mov
adc
mov
fwait
lds
cld
das
cmp
xchg
popa
mov
xor
addr16
jmp
mov
pop
or
aad
ds
and
cmpsl
rolb
add
push
xchg
sahf
sub
mov
pop
xor
xchg
jle
mov
add
sub
mov
adc
fbstp
mov
add
jbe
inc
mov
dec
cmp
adc
mov
das
std
outsl
mov
mov
dec
test
mov
mov
xor
fdivr
stc
sub
lods
daa
jp
adc
xchg
rolb
outsl
fildl
sub
and
inc
jl
inc
test
jle
lcall
lea
ficoml
ret
xchg
sub
jge
push
iret
pop
outsb
sbb
orb
xor
aam
cmp
sub
xchg
xchg
wrmsr
sbb
or
add
sub
adc
out
jmp
mov
movsl
jnp
inc
jbe
dec
mov
lods
and
or
insl
mov
push
dec
xorl
aas
push
xchg
les
fwait
lock
es
out
aas
sub
pop
xor
mov
outsb
out
fisubrs
xor
inc
mov
loop
mov
mov
sub
add
add
test
jno
addb
out
jno
in
xor
sbb
cmc
xchg
mov
iret
cmp
push
or
popa
mov
cwtl
or
mov
adc
test
dec
or
jb
lds
ljmp
and
jl
pop
lcallw
cs
rol
mov
push
pop
add
fs
jae
stos
cmp
iret
cmp
lods
les
sub
ret
movsb
sub
mov
ljmp
movsl
fwait
cmp
add
int3
int
fld1
xchg
adc
inc
jp
cmpsb
test
cwtl
data16
adc
cltd
or
arpl
xchg
iret
pop
into
push
bound
push
push
mov
imul
jle
aad
popa
xchg
movsl
cvtdq2ps
mov
jmp
or
scas
cmp
mov
cs
sbb
shll
jmp
sub
xor
xchg
add
sahf
inc
mov
lret
leave
out
loope
sbb
push
stos
lcall
hlt
xchg
sub
mov
jns
mov
xor
sbb
mov
pop
sbb
je
lods
xchg
test
notb
sbb
mov
mov
xchg
aam
and
or
mov
adc
sbb
or
jmp
and
mov
mov
aaa
mov
xchg
xor
or
inc
fcomip
scas
inc
ljmp
add
xchg
daa
or
fistl
movb
jmp
loop
lods
adc
nop
mov
sub
outsb
pop
push
fs
loope
push
jg
xchg
dec
jle
mov
sub
push
out
lret
imul
lods
mov
lret
sub
or
lret
shll
xchg
and
sti
mov
push
insb
sarb
inc
cli
stos
xchg
mov
call
stos
cmp
jno
jmp
in
mov
mov
shlb
arpl
sub
imul
mov
outsb
call
mov
in
and
mov
push
test
lret
inc
mov
jo
push
push
adcb
push
aaa
outsl
cmpsb
mov
popa
int
sti
jl
add
not
and
jl
add
ljmp
das
out
sub
add
pop
les
inc
leave
sub
adc
add
popf
in
test
or
xor
pop
inc
jne
jge
outsb
outsl
test
mov
rorb
or
faddl
sti
mov
loopne
pushf
pushf
jb
pop
xchg
or
and
lcall
in
mov
rcrl
clc
repnz
cs
lods
mov
inc
jb
imul
inc
ret
or
cmp
clc
gs
push
scas
stos
ret
xchg
inc
shlb
and
enter
xor
push
and
push
mov
add
jae
pop
mov
xor
xchg
mov
inc
mov
data16
ja
or
jmp
cmc
repnz
loope
stos
jecxz
xchg
push
push
sub
cli
aas
xchg
fs
hlt
sbb
dec
fiaddl
mov
mov
mov
inc
xor
testl
loopne
fwait
in
cmp
pop
xchg
clc
lods
into
sbb
aaa
add
xor
cwtl
popf
sub
xor
in
bnd
pop
orl
test
mov
movl
jp
adc
ja
cli
xor
adc
push
add
gs
fistps
dec
fwait
push
mov
lcall
rorb
xor
jae
mov
xor
mov
sub
imul
push
sbb
sbb
mov
mov
and
or
jae
xlat
inc
xlat
jnp
rcrb
fstl
mov
sti
xchg
stc
dec
pop
push
xchg
mov
imul
test
adc
fprem
fs
dec
movsb
test
in
xchg
cmc
and
sbb
mov
dec
jp
xor
or
test
add
mov
repz
jne
jle
addl
fcmovne
xor
shrl
pop
mull
jp
xchg
inc
lcall
je
xor
and
and
outsb
loope
test
jae
mov
mov
outsb
pop
stos
mov
and
dec
push
or
xchg
stos
sub
mov
push
ret
pop
cmpsb
in
mov
ds
adc
mov
cmp
cmp
test
lcall
inc
dec
xor
cmp
adc
outsl
mov
insb
sbb
pop
inc
mov
lock
dec
and
stos
push
les
mov
add
and
lret
popf
push
outsb
or
and
jnp
imul
je
and
movsb
jbe
das
je
mov
andl
jg
andl
push
lock
mov
mov
mov
xchg
adc
xorb
sub
jno
loop
mov
lret
sub
xchg
push
inc
sar
mov
cwtl
sub
fs
and
push
mov
jle
cmp
std
dec
and
mov
pop
jbe
out
stc
mov
cmpsb
repnz
jmp
cmpsl
mov
lret
mov
push
dec
es
pop
in
ss
or
mov
cmc
fstps
xor
dec
mov
adc
fdivrl
push
sub
cmc
sub
inc
lcall
lds
aad
addr16
and
rcrb
nop
xor
data16
popa
mov
jnp
testl
sub
rep
lods
stos
sbb
popa
mov
mov
mov
popf
jns
aad
test
test
xor
loopne
fs
fxam
pop
dec
add
sub
pop
xchg
cmp
and
iret
dec
lret
mov
mov
dec
jnp
mov
jne
ficomps
pop
cmp
inc
aam
in
pop
pop
jle
test
leave
or
xchg
repz
jle
sub
das
and
mov
push
shll
mov
in
insl
and
imul
pop
fidivrs
je
int
xor
mov
lea
dec
sbb
pop
fstps
jae
test
xchg
jle
in
mov
xlat
add
pop
sbb
faddl
sbb
icebp
loopne
xchg
mov
xlat
adc
inc
push
aam
jg
popf
or
dec
popa
out
les
lret
xor
mov
lret
cmc
xor
das
out
cmp
ret
int3
lahf
and
or
stos
mov
outsl
and
inc
jnp
mov
push
cmp
and
in
cltd
add
add
repz
bound
dec
jmp
pop
stc
pop
jp
inc
jae
pop
lds
data16
jl
arpl
shr
adc
xchg
ret
add
testl
and
pop
pop
out
mov
cmpsl
sbb
outsl
dec
sarb
clc
fists
sub
fxam
callw
pop
aad
push
sub
inc
sbb
sbbl
fwait
adc
jl
sub
or
fstp
xor
and
punpckldq
repnz
js
mov
adc
jnp
arpl
popa
mov
outsb
mov
xor
rclb
sub
data16
cmpsb
add
xchg
inc
loopne
ficomps
out
mov
scas
fildll
xor
in
xor
insb
jnp
mov
or
and
icebp
jnp
jno
mov
pop
inc
scas
test
push
aam
mov
jmp
pusha
cltd
mov
push
clc
sarb
out
lock
into
incb
cs
jae
mov
mov
mov
insb
loopne
lods
jno
add
cmp
xor
shl
in
adc
repnz
lods
adc
nop
int3
enter
hlt
enter
or
test
cmp
sub
fbstp
loope
mov
iret
in
jle
jle
inc
jne
sbb
mov
test
mov
dec
jne
scas
pop
clc
test
test
sub
pop
inc
cmpsb
jne
out
push
ret
mov
dec
or
hlt
or
out
imul
mov
jb
and
test
dec
mov
js
sub
jp
in
mov
mov
pushf
mov
cwtl
sub
movsb
fsubr
nop
aad
sub
in
sbb
mov
movsb
mov
jmp
inc
push
push
fnstsw
orl
xchg
stos
xor
cmpsl
mov
cmp
scas
cmp
ljmp
mov
xchg
imul
movsl
or
mov
test
leave
stos
xchg
and
adc
daa
pop
cmp
rolb
or
jb
std
sar
or
push
dec
cmp
int3
add
loop
push
orb
xor
jg
addl
scas
out
mov
or
fwait
in
fidivrs
mov
pop
cmp
and
in
loope
mov
movsl
loopne
or
popa
sahf
inc
push
ss
mov
hlt
add
inc
mov
cs
pusha
dec
push
pop
xchg
mov
cli
sbb
or
cwtl
iret
jmp
jo
repz
cld
aam
mov
inc
stos
test
out
jbe
jl
jg
mov
and
fs
repnz
das
movsb
aad
xchg
mov
cmpsl
sub
shlb
incl
rcrb
inc
fbld
ret
push
ja
mov
dec
and
add
cltd
mov
js
rolb
mov
cltd
xorb
arpl
aam
stos
ljmp
add
jnp
mov
imul
pop
adc
stos
or
ror
inc
cmp
cmp
push
mov
lahf
shlb
jae
add
sub
jne
stos
leave
jae
aaa
out
mov
or
jl
aas
cli
mov
stos
in
xchg
jmp
nop
sbb
test
ret
jbe
or
or
pop
aas
mov
pop
dec
dec
leave
mov
push
cli
aam
sub
push
sahf
inc
jne
addr16
test
cltd
rorb
test
mul
ret
dec
and
out
pop
mov
daa
xchg
jo
xor
push
adc
and
jno
in
jb
icebp
out
std
jmp
aam
xchg
dec
daa
push
and
pop
xchg
xor
dec
filds
add
out
xchg
cli
mov
js
mov
push
in
lods
jo
decb
sahf
test
push
push
lods
rol
adc
inc
or
push
gs
loope
push
and
jg
repz
and
add
scas
ret
fcoml
sub
xlat
xor
mov
mov
pop
vmptrst
or
and
popa
fldl
mov
or
sub
push
fwait
push
jecxz
add
mov
add
je
int3
and
sub
dec
pop
fcmovnb
loope
pusha
mov
aam
sub
push
lods
repz
jnp
orl
xor
pushf
adc
jae
jg,pt
jp
mul
xchg
inc
push
lahf
loop
adc
nop
scas
into
adc
xchg
stos
in
bound
push
adc
jo
pop
mov
bound
data16
or
mov
repnz
jns
sbb
into
cmp
dec
lahf
xchg
adc
lret
cmp
mov
les
jo
test
es
pop
aas
lahf
jae
xchg
push
lds
lahf
mov
test
xorl
add
test
mov
jnp
pop
stc
gs
cmp
mov
cmpsb
es
lock
push
dec
jle
into
pushf
out
imulb
mov
mov
popf
pop
imul
test
insb
cwtl
rol
jg
sar
lret
mov
or
add
cltd
notb
flds
cmp
sbb
pop
and
sbb
lret
jmp
pop
loopne
dec
daa
imul
cmp
jge
idivb
pop
lret
pop
sbb
iret
push
leave
cmpsl
mov
xlat
cltd
jnp
and
xor
jmp
subb
pop
sbb
jae
mov
jge
loopne
or
cwtl
jge
out
sbbb
inc
insb
out
je
mov
inc
sbb
ret
mov
rcl
repnz
sbb
push
mov
pop
ret
add
mov
shlb
sbb
bound
pop
xor
fwait
mov
lahf
aaa
dec
jb
mov
pop
push
push
push
arpl
jne
jp
mov
adc
je
jae
pop
lret
test
or
movsb
and
je
or
out
cmp
inc
in
sub
or
stos
push
jmp
leave
popl
jle
fwait
cmp
sub
aam
jmp
imul
int
mov
jb
into
repz
int3
jp
or
mov
cmp
dec
push
mov
sbb
iret
das
cmp
sbb
xchg
movsb
adc
push
dec
mov
ret
test
outsl
test
test
pop
xchg
fidivrs
mov
xchg
jae
test
lods
adc
ficoms
push
shlb
cmp
addl
lahf
xchg
out
and
jnp
xor
cli
pusha
pop
bound
data16
leave
inc
ret
pop
daa
jl
pop
roll
mov
cmp
pop
ss
les
fcmovu
pop
mov
jae
nop
pop
jns
addr16
fmull
stc
jb
push
or
push
ret
xchg
pusha
pop
adc
mov
sub
push
js
dec
stc
jle
shrb
add
repz
call
sub
ja
daa
popa
adc
gs
loopne
xor
shl
jle
xchg
pop
or
mov
add
insb
out
dec
inc
data16
sahf
imul
repz
cmp
fistpl
xchg
imul
sbb
push
int3
or
sarb
sbb
lds
int3
lahf
shlb
ss
mov
ret
mov
adc
jg
imul
and
dec
add
lahf
icebp
movsl
stos
jge
mov
outsb
push
xor
cmp
out
add
add
mov
call
lods
lods
lcall
das
mov
dec
push
das
movsb
xchg
and
ret
cmp
cmpsl
cli
add
inc
imul
jp
or
dec
and
hlt
push
enter
cwtl
mov
dec
inc
add
push
dec
add
aad
inc
gs
sbb
fcom
jae
sahf
mov
xchg
popa
imul
sub
push
add
pop
and
decl
mov
mov
pop
mov
mov
ds
and
push
pop
and
icebp
pop
ficomps
adc
mov
fdivl
pop
aas
fistpll
xchg
out
cmpsl
call
sbb
sar
cmp
pop
mov
jae
into
inc
loope
insb
cmp
scas
in
cmp
pop
inc
cwtl
int
aas
fistl
sti
icebp
jle
xor
mov
cmpsl
mov
and
out
jbe
push
out
jne
adc
pop
out
movsb
ljmp
rcrl
sarl
shl
loope
dec
mov
rcrl
dec
sub
push
nop
cmp
push
mov
mov
mov
lds
adc
cmc
fildl
bound
cmp
xchg
lds
xor
jnp
pop
sarb
push
mov
ja
pop
inc
mov
cli
and
jb
ret
sub
hlt
jge
lahf
enter
adc
add
in
dec
mov
out
add
mov
not
mov
xor
jns
pusha
sub
pop
ja
dec
mov
jb
popa
loopne
stos
aas
and
je
and
cltd
sub
mov
cs
push
mov
es
push
mov
add
cmp
push
sub
inc
les
cs
xchg
cs
pop
pop
and
mov
xor
sbb
mov
fmuls
xchg
push
cmc
repnz
dec
dec
test
jo
pop
xchg
stc
and
adc
mov
mov
stc
js
sbb
inc
sbbl
lahf
aaa
inc
xchg
outsl
and
in
ss
or
pushf
pop
push
test
dec
lcall
cmpsl
or
mov
push
pusha
cmc
cmpsl
pop
and
mov
lock
add
loope
ss
add
inc
add
js
dec
pop
sahf
adc
test
jns
std
push
lret
pop
dec
or
push
fisubrl
sbb
mov
push
dec
push
push
dec
jno
daa
adc
lock
mov
add
add
cld
jg
es
imul
icebp
lcall
int3
aad
xchg
mov
mov
adc
pop
dec
aam
dec
or
aam
lret
in
sub
sbb
mov
jae
fildll
xchg
xchg
xorb
rcrl
es
aas
rcr
sti
push
mov
ret
fdivl
jecxz
call
mov
fcmovbe
das
xchg
fcomi
mov
lods
mov
jne
stos
dec
insb
mov
lret
inc
or
arpl
lret
test
add
xlat
cwtl
xor
push
jo
les
jmp
cmp
negb
or
lods
es
rcrl
and
data16
xor
pop
push
xchg
out
mov
out
push
mov
aaa
les
inc
dec
mov
add
das
into
cmp
add
jns
sbb
dec
inc
and
pop
sbb
xchg
jge
mov
mov
xchg
ss
sbb
scas
stos
inc
mov
jmp
mov
push
jo
and
xor
ret
jno
rorl
jecxz
mov
pop
repnz
adc
test
aad
sbb
lods
in
xchg
cmp
ds
das
mov
cmp
push
xchg
repz
xor
adc
ret
jle
pop
insb
add
add
dec
scas
mov
mov
loopne
insb
addr16
push
jp
sbb
sub
dec
xor
out
jo
add
mov
je
fsubl
mov
pop
test
or
std
into
or
pusha
xorb
push
enter
jno
mov
gs
xchg
add
adc
mov
mov
adc
and
call
arpl
push
outsb
and
out
shlb
test
or
sub
lret
aas
lock
lock
dec
or
cmp
jnp
ret
lret
push
lods
inc
das
mov
cli
jb
mov
cmp
cmpsl
nop
jae
or
sub
push
test
jo
pop
out
imul
dec
inc
sbb
mov
push
arpl
or
inc
into
sbb
subl
jmp
stc
xorl
sub
inc
push
test
ds
bound
les
mov
or
dec
into
lock
std
mov
nop
and
into
xchg
sbb
enter
pop
inc
insl
xor
xor
je
pusha
mov
shlb
sub
pop
testb
incl
jle
mov
sbb
loopne
hlt
cmp
cmp
push
int
push
jl
inc
mov
jbe
cs
andb
js
fmull
mov
sub
add
dec
fadds
inc
adc
and
clc
push
xor
or
test
xchg
lcall
mov
sub
ljmp
dec
adc
shl
push
andb
fdivrl
push
cmpsl
sbb
dec
enter
mov
popa
pop
jb
bound
pop
jg
out
test
out
mov
jle
inc
mov
fstl
or
or
das
sti
lods
sub
test
cmc
mov
adc
mov
cli
push
mov
gs
sub
stos
jle
dec
dec
jnp
jno
dec
and
ret
insb
xchg
int3
in
shll
ljmp
test
fildl
fistps
mov
jmp
push
cmp
jmp
and
adc
inc
mov
shll
pop
js
inc
jbe
jge
pushf
in
mov
adc
cwtl
adc
lea
cmp
mov
jae
sub
fdivp
sub
fwait
cld
mov
addb
fsubrl
mov
insb
mov
ss
ficoms
stos
sbb
stos
stos
test
xor
cld
rorb
out
or
lock
in
sbb
xor
xor
add
cmp
mov
adc
in
and
iret
push
mov
shlb
jbe
push
sbb
mov
xlat
mov
pushf
dec
in
mov
out
in
sahf
ljmp
popa
inc
jle
mov
or
sti
push
movsl
test
fs
add
jnp
cmc
ja
pop
push
jle
inc
aam
mov
push
sbb
jb
push
ss
aaa
cmp
out
push
outsb
mov
sub
stos
dec
lea
ja
inc
xor
mov
and
xlat
les
push
stos
add
fcomps
into
leave
insl
mov
movsb
inc
mov
cmp
or
cmp
les
test
jno
subb
cmpsb
jne
cmp
out
mov
mov
xchg
cmp
mov
mov
dec
test
push
aaa
sbb
rcll
push
movsl
xor
or
clc
jp
mov
jg
xchg
xchg
mov
push
sub
pushf
popa
hlt
js
sbb
negl
dec
sbb
call
mov
retw
add
cs
push
mov
addr16
out
cmpsl
out
push
cmp
mov
dec
subl
movsb
inc
mov
aam
dec
fwait
push
cmp
iret
iret
mov
pop
inc
ret
out
mov
inc
mov
inc
push
and
and
in
imul
mov
add
cmpsb
inc
popf
call
jl
inc
jae
out
mov
mov
push
push
out
dec
out
iret
jnp
pop
or
shrb
xor
lret
rcrl
int3
jmp
jg
mov
insl
dec
cmp
mov
clc
jno
push
call
fwait
stos
mov
xor
lds
pop
lret
cmp
aas
cmc
xor
hlt
fisubrs
inc
loope
xchg
add
add
sahf
out
pop
les
sbb
push
rcrl
daa
mov
mov
out
les
add
pop
mov
ret
mov
mov
es
push
fstpt
inc
sarb
pusha
iret
add
lret
data16
aad
imul
lea
addr16
dec
jl
adc
mov
lods
or
sub
mov
lods
in
xor
adc
xchg
out
xor
pusha
or
fs
mov
mov
bound
dec
or
mov
jge
dec
lods
sahf
cmp
repnz
insl
movsb
adc
jo
push
aad
jb
mov
push
mov
push
mov
or
andl
mov
pop
in
fidivs
jmp
rcr
pop
mov
mov
jnp
xchg
mov
jmp
mov
xchg
out
pop
ret
mov
dec
mov
ss
jmp
cmp
pushf
mov
outsl
ret
stc
movsb
adc
roll
mov
scas
push
dec
lea
imul
inc
pusha
inc
icebp
add
or
dec
les
push
addl
mov
add
mov
dec
mov
cmpl
ss
or
aad
jns
mov
cmpsl
loopne
jno
xor
pop
push
pop
pop
adc
test
xor
les
sbb
scas
and
xor
push
in
jmp
out
test
lret
cld
sub
xorl
into
sub
cmpsb
stc
les
popaw
ja
mov
or
dec
lock
out
mov
sbb
bound
jb
jb
dec
jno
add
or
push
int3
lret
insl
and
movsw
addb
xchg
mov
cs
jnp
push
or
loop
je
cmc
xor
out
mov
sbb
adc
jbe
loopne
sahf
mov
int3
loop
cmc
mov
push
add
repnz
cmp
xchg
push
adc
xchg
xchg
mov
mov
xchg
loope
cld
push
out
out
out
push
mov
push
rorb
push
adc
addl
out
daa
cld
jg
inc
out
ds
pop
pop
lret
jmp
test
push
push
es
fstps
lea
add
and
shll
pop
loopne
pop
je
pop
adc
test
add
frstor
jmp
mov
stc
pop
mov
push
sub
or
out
push
fiaddl
into
mov
call
or
push
jns
adc
jae
das
cmp
inc
xchg
mov
jo
and
jo
adc
sbb
cli
pop
mov
fsubrp
adc
das
movsb
xchg
out
f2xm1
push
dec
je
ss
sub
ret
enter
aas
lods
xor
je
call
out
int3
jl
jg
out
out
mov
and
insl
jg
dec
addr16
inc
pop
fistps
fsubrs
lea
imul
xchg
jae
out
fmuls
cli
fstl
sahf
mov
dec
or
lds
notl
in
xlat
pop
push
jge
cmc
inc
inc
fsubrp
insl
mov
push
inc
xchg
jno
xchg
and
and
mov
jbe
push
mov
and
das
ret
xchg
sbb
fistps
mov
mov
xor
jns
push
sbb
icebp
stc
fwait
pop
push
and
insb
in
lock
or
shl
dec
pop
or
cli
xor
int3
iret
jne
cmp
je
add
mov
out
pushf
hlt
loope
pop
mov
dec
stc
fisubrs
cmpsb
xchg
pop
jbe
fisttpl
mov
test
test
insb
scas
movsl
fisubrs
mov
imul
jp
push
adc
jle
xor
xchg
jle
push
jb
cmp
lds
mov
in
dec
sbb
stc
cld
mov
testb
or
js
punpckldq
and
inc
aas
cltd
xchg
inc
sub
mov
xor
int
insb
imul
sub
sbb
mov
adc
shr
sbb
mov
dec
xor
jbe
ret
add
xchg
push
subb
mov
push
xor
mov
inc
xchg
push
pop
insb
lahf
xchg
pop
xor
subb
fisubrl
rorb
outsl
mov
sbb
lds
cmpsl
outsb
call
mov
mov
jmp
or
test
out
and
adc
sbb
mov
mov
ja
arpl
stos
loope
cmp
ljmp
and
stos
cmpsl
xor
pop
fst
ljmp
and
cmp
call
adc
jo
mov
adc
pop
xchg
ja
cmp
mov
popf
mov
bnd
lcall
fdiv
fwait
adcl
lods
jp
sub
aaa
pminsw
push
jns
cmpsb
mov
add
xor
aas
shlb
inc
mov
dec
das
push
pop
sti
ds
xchg
das
and
inc
push
xchg
daa
mov
mov
dec
pop
cmpsl
push
stos
mov
xor
ljmp
imul
loope
test
sub
xchg
iret
xlat
in
or
push
ja
lea
xchg
add
mov
xchg
push
ret
xor
clc
enter
jbe
movsl
cmpsl
lret
pop
and
out
inc
data16
pop
test
aam
jns
stos
in
mov
sbb
pusha
fldl
aaa
inc
push
xor
push
stos
lcall
je
ljmp
adc
imul
aam
or
dec
jae
call
lret
jbe
popf
cmp
in
ret
adc
cmpsb
sbb
fcompl
sub
rol
nop
cmp
lds
aaa
fs
inc
pop
aaa
or
test
pminsw
cli
jg
imul
mov
jbe
or
mov
push
mov
inc
lock
jp
and
ljmp
lret
nop
cwtl
push
sub
mov
xchg
adcb
fnstcw
inc
outsb
fwait
stos
in
xchg
sbb
adc
mov
jbe
mov
fsubr
mov
jecxz
mov
insl
test
daa
push
dec
inc
fwait
jge
ljmp
iret
xor
mov
in
inc
mov
and
es
repnz
xchg
les
pop
jbe
aas
stc
daa
xchg
test
aam
cld
enter
scas
adc
fldt
repnz
icebp
jb
orl
cmp
mov
pushf
addr16
cltd
fists
pop
cli
add
sub
pop
out
dec
aaa
leave
mov
movsb
adc
add
fiaddl
xchg
movsl
sti
cmp
push
jecxz
fwait
mov
dec
or
pop
and
loop
mov
add
shr
jbe
div
in
mov
xor
in
jle
mov
mov
fwait
dec
test
jmp
jl
cmp
cli
lods
xor
dec
subb
addl
ffree
aad
cmp
lods
iret
lret
xlat
inc
jo
mov
popa
or
mov
inc
shrb
mov
xchg
aas
add
add
mov
pop
je
lock
xor
rcrl
sarl
inc
lcall
incl
imul
addl
and
cmp
or
lahf
xchg
pop
jnp
testl
dec
mov
sub
int
inc
pop
sub
stos
add
ret
subb
xor
in
mov
xchg
xchg
lret
inc
mov
add
insb
adc
jl
lcall
loopne
andl
add
and
pop
aad
jae
xlat
imul
cmp
and
shl
xor
pop
mov
pslld
xchg
cmpsl
leave
outsb
mov
ljmp
out
test
test
add
call
jbe
pop
pop
ds
rorb
cmpsl
or
enter
cmp
in
out
sub
inc
fwait
push
and
test
sti
into
dec
sbb
add
adc
loope
inc
scas
ljmp
ljmp
mov
imul
jno
inc
sahf
fimuls
in
ss
xchg
sbb
popf
icebp
pop
pop
and
orl
sbb
lods
mov
xlat
daa
mov
stos
lock
jp
fstpt
and
cmp
daa
sub
xchg
mov
xor
push
push
repnz
push
mov
or
scas
jle
and
pop
mov
aad
push
push
cmc
popa
fisttpll
sub
test
sub
cmp
pop
jno
adc
pop
push
xor
lea
xor
jbe
int3
inc
shrb
push
subb
loopne
mov
fdivl
xlat
adc
mov
mov
jb
push
or
cltd
jno
mov
sbb
lods
loopne
jg
hlt
aad
rep
or
mov
cmpsb
cmp
das
jae
inc
int3
pop
sub
sbb
cmpsb
cmc
mov
sub
es
jns
dec
ja
pop
fmuls
inc
rcr
cs
pop
stos
test
enter
enter
and
aam
ret
in
cltd
and
leave
shll
xor
or
adc
divb
lods
data16
dec
rclb
jg
push
cmp
adc
push
or
movsl
sbb
and
xchg
xchg
adc
sbb
sub
cwtl
ror
jg
mov
adc
rcrb
sub
into
mov
push
sub
gs
cmp
repnz
cmp
bound
ljmp
cmp
add
and
push
mov
mov
js
cwtl
sub
or
push
and
add
ret
movsl
loop
sbb
scas
cmp
out
lods
cmp
int
mov
mov
mov
dec
and
jmp
lcall
iret
and
ss
xlat
sub
or
lds
xchg
adc
sarb
pop
cwtl
shlb
add
loop
mov
jle
or
into
add
repz
add
mov
outsb
jne
cltd
mov
clc
pop
adc
add
test
jge
popa
repnz
jnp
inc
fsub
push
and
fcmovnbe
iret
sahf
sub
sbb
lcall
or
adc
jnp
mov
repz
ja
pop
sti
cmp
mov
cmp
in
add
clc
scas
pop
pop
cmp
add
iret
cmp
pop
js
push
pop
mov
mov
cmp
jp
jp
sbb
stos
stos
pop
loope
mov
mov
mov
sub
mov
bnd
repnz
testb
xchg
xchg
inc
dec
xor
add
out
test
adc
adc
rclb
test
data16
pop
ljmp
mov
xor
jmp
dec
int
adc
jno
popa
xchg
lods
addr16
xchg
pusha
add
sub
cmp
pop
or
add
add
rolb
sti
loop
jbe
add
push
push
pop
mov
mov
iret
adc
mov
test
in
and
ljmp
cmp
jno
push
mov
jo
pusha
lret
inc
out
gs
xor
adc
out
aam
mov
fs
push
mov
add
dec
push
xchg
fsub
xchg
hlt
inc
lea
pop
xor
and
js
les
cmp
inc
lods
pop
fs
imul
test
imul
mov
adc
jbe
les
mov
sub
ror
mov
lods
iret
out
lcall
add
ret
or
xlat
dec
daa
ret
jge
cmp
das
inc
addr16
arpl
pop
jecxz
pop
stc
cld
lahf
out
xchg
add
xor
sahf
sbb
cmc
xchg
jecxz
cwtl
jno
cs
sahf
mov
cmp
iret
mov
pop
insb
pop
in
bound
stc
stos
sub
outsb
adc
call
push
and
movsl
in
nop
add
sbb
and
dec
cwtl
fstpl
out
adc
dec
call
and
sbb
aad
xor
xorl
test
popa
or
cwtl
pushl
xor
pushf
sbb
subl
fwait
leave
jmp
dec
sub
movsl
sbb
out
nop
es
cwtl
cmp
push
adc
ljmp
mov
add
dec
pushf
aad
mov
rol
loope
fstps
jecxz
rcr
dec
xor
cmc
imul
sarb
scas
inc
push
inc
mov
js
inc
sbb
lret
sarb
xor
jnp
push
inc
scas
mov
xor
jnp
lock
jg
dec
das
jmp
sarb
sarb
sbb
sub
mov
or
xchg
sahf
fwait
dec
test
xchg
or
mov
test
dec
popf
fxch
jno
add
sub
loope
jae
xchg
jg
movsl
xchg
fwait
xor
push
inc
icebp
fcmovu
loope
fsubrs
mov
mov
or
mov
push
cmpsl
mov
imul
push
out
aam
inc
mov
or
outsl
mov
pop
sub
cwtl
pop
fcmovne
flds
lea
leave
push
int3
stc
rclb
adc
add
popf
adc
sti
decb
loopne
sbb
cmp
mov
xchg
xor
ret
xchg
cmp
fadds
imul
pop
test
ljmp
sub
inc
or
and
mov
std
mov
sbb
lods
xchg
dec
pop
scas
push
cmc
fprem1
outsb
add
loop
jno
outsl
pop
inc
repz
pop
mov
loopne
lods
test
push
cmp
inc
imul
push
sbb
outsb
loop
xlat
adc
jp
xchg
js
mov
popf
hlt
movsb
mov
add
sti
mov
add
xor
outsb
adcl
and
icebp
sub
test
push
mov
lds
lcall
decl
adc
outsb
xchg
inc
sub
mov
test
mov
xchg
cmc
aad
sub
bnd
shll
xchg
push
loope
nop
dec
xchg
popa
std
push
aam
xorl
test
and
loope
xchg
cmp
mov
out
fidivrs
mov
sbb
lock
stos
ficoms
push
inc
jno
push
dec
icebp
or
in
flds
shlb
mov
test
mov
ja
or
ret
mov
sbb
adcl
movsl
pop
sbb
jmp
push
fs
or
ja
cmp
xchg
adc
insl
adcl
add
popa
push
fnstsw
jns
cmp
inc
bound
mov
and
jbe
xor
out
js
je
test
in
call
cmp
jl
aas
inc
pop
cld
icebp
xchg
mov
loopne
xchg
or
inc
out
cwtl
mov
mov
bound
cmp
cmc
xor
fcmovne
xchg
ljmp
icebp
testb
jae
sub
cmp
push
divl
push
inc
arpl
rolb
lret
pop
dec
stos
add
xor
pusha
addr16
daa
sbb
lods
shll
enter
in
or
or
mov
shrl
int3
add
push
sbb
cltd
mov
icebp
pop
and
scas
mov
andl
xchg
sahf
pushf
mov
dec
dec
add
push
add
cmpb
or
insl
xchg
das
fnstcw
fs
ja
mov
jl
sbb
mov
push
pusha
sarb
mov
add
or
dec
jecxz
mov
shll
dec
sbb
mov
xchg
inc
mov
dec
dec
cmpsl
fcompl
xchg
fwait
inc
jb
cltd
mov
xchg
in
insl
mov
add
mov
imul
cld
in
out
std
mov
push
testb
jnp
fwait
jl
mov
imul
cld
adc
aas
and
out
inc
xchg
mov
rcr
das
adc
mov
sbbb
add
ret
cld
jne
movsl
into
jl
push
stos
mov
pushf
mov
dec
dec
inc
pop
cmpsb
inc
out
cmp
fs
popa
stos
xchg
push
add
movsb
std
mov
mov
inc
outsl
ss
push
sbb
test
jp
sub
leave
push
jl
test
xchg
or
dec
fmuls
cmpsl
jp
inc
jl
inc
push
xlat
mov
dec
cmp
stc
repnz
dec
xchg
repnz
imul
insb
jp
orb
data16
out
mov
int
or
mov
insb
jne
dec
in
jb
cltd
lahf
inc
aaa
in
aam
xor
adc
dec
fs
adc
xor
add
stos
pop
xor
mov
sub
stos
push
je
and
mov
dec
fs
call
sbb
movsw
dec
subl
mov
inc
stc
mov
adc
and
aad
loopne
je
arpl
xchg
push
popl
and
out
fwait
es
into
mov
fwait
loop
es
xchg
inc
orl
pop
jge
stos
xor
inc
jmp
mov
mov
mov
cltd
mov
aad
mov
andb
insb
ljmp
test
mov
in
out
popa
or
inc
cwtl
mov
popf
xchg
jg
lar
push
mov
fsubs
aam
cmp
aad
jb
or
popf
xchg
inc
mov
and
fcmovne
mov
lock
xchg
fwait
inc
mov
subl
adc
test
sbb
or
jg
in
push
mov
aas
test
xchg
jge
cli
dec
bound
ja
mov
xchg
mov
adc
cmpsb
sub
in
dec
push
or
leave
lret
xchg
lods
loope
imul
xchg
mov
and
jo
mov
idiv
push
enter
incb
jo
cltd
cmp
in
pop
push
int
sahf
insb
daa
or
sbb
mov
lds
enter
test
iret
outsb
pop
and
loopne
sbb
dec
or
push
push
aam
cmp
adc
sub
fs
push
mov
lahf
or
out
insl
inc
gs
xor
das
pop
mov
aam
fdivrl
jns
pop
es
test
mov
out
push
stc
lods
add
div
or
jmp
cli
push
insb
das
push
sub
jl
je
cmp
ret
lods
xchg
out
mov
loope
jmp
imul
cs
or
mov
ret
and
ret
adc
jmp
jle
and
mov
jns
push
mov
into
icebp
ret
or
cmp
ret
aad
pop
cmp
push
pop
inc
stos
mov
jns
or
sbb
adc
cmp
dec
and
cmp
stos
movsb
aad
sbb
xchg
ret
mov
dec
addr16
adc
dec
cwtl
xchg
push
dec
add
test
mov
or
aam
int3
std
add
dec
jle
ljmp
outsl
loop
sub
arpl
jge
and
ret
sub
push
subl
jns
loop
xchg
fs
imul
mov
dec
sbb
mov
pop
pop
inc
or
xchg
lock
lock
pop
outsl
lea
leave
add
bound
test
subl
jge
jnp
addb
dec
pop
fdivr
repz
xor
jge
testb
cmp
cmp
push
icebp
ret
bswap
mov
outsl
jns
andl
int3
pop
mov
jb
loopne
fisttpll
out
mov
pop
cmpsl
jmp
fnstsw
outsl
cld
pushf
mov
sub
fwait
insb
mov
dec
das
stos
sbb
stc
jl
xchg
xor
mov
test
mov
idivb
mov
jge
leave
push
aas
inc
and
cmp
cli
sbb
sub
jmp
mov
push
push
mov
aas
ret
popf
xor
in
push
movsb
jmp
pop
mov
jle
int3
in
stos
push
jbe
les
cld
mov
shll
inc
mov
cltd
mov
mov
push
sbb
icebp
jg
imul
loope
inc
and
and
sub
sub
test
dec
js
mov
cmp
int3
mov
sahf
bound
pop
ds
adc
fsubs
pop
cmpsl
out
jl
imul
sub
in
jecxz
int3
outsl
inc
js
mov
mov
in
mov
adc
cmp
paddd
imul
xlat
dec
dec
push
or
cs
add
xchg
outsl
mov
inc
aad
adc
xchg
cmp
inc
pop
clc
push
cld
pop
aad
or
test
or
lcall
bts
and
test
sub
out
aas
pop
mov
mov
insb
lods
mov
jl
push
pop
xor
sti
ret
fsubl
ja
test
mov
sbb
push
jne
mov
lods
lods
subl
add
call
mov
jge
sub
jmp
xchg
test
scas
jne
fwait
adc
mov
push
test
fadds
fidivrs
loop
mov
das
fcoml
test
xchg
xchg
js
ret
adc
cmc
aam
je
enter
or
sub
call
out
dec
and
mov
xchg
jle
mov
mov
lret
fistl
and
fidivrs
push
js
xchg
inc
sarl
inc
mov
je
repz
mov
fimuls
push
mov
pop
sbb
xchg
inc
jge
mov
push
lods
ljmp
in
iret
pop
int3
xchg
fs
jno
popa
inc
int3
int
add
pop
mov
pop
and
int3
mov
std
sbbw
rclb
scas
fistps
out
jb
addr16
or
pop
hlt
das
imul
addr16
filds
pop
jg
cmpb
callw
rol
xchg
mov
arpl
push
test
push
cld
sbb
int
push
pop
or
mov
sub
jp
rorb
and
sub
mov
and
stos
aaa
push
iret
or
scas
ret
jmp
mov
pushf
fisubrs
dec
lods
xor
pop
addl
aam
fs
test
pop
xor
repnz
xor
rep
xchg
mov
cmp
jne
pop
test
stos
push
push
dec
jno
loope
test
lock
add
push
lcall
nop
lea
idivb
outsb
mov
fs
mov
pop
xlat
roll
mov
pushf
push
cmpsl
dec
pop
lret
decl
add
and
jno
in
lods
fbld
mov
jmp
cmpsl
jns
mov
pop
in
fildll
repnz
movsl
jns
sub
loopne
mulb
ret
xchg
int
jbe
and
hlt
ss
pop
or
insl
mov
sbb
arpl
add
in
cltd
push
lods
mov
lcall
sub
in
cmp
jg
aad
mov
and
mov
jmp
rorl
mov
test
dec
dec
les
mov
cmp
jg
sbb
pop
cli
cmpsb
add
fnstcw
in
inc
stos
lcall
dec
add
jmp
pop
enter
mov
inc
outsb
dec
mov
push
sub
loopne
aad
jge
and
dec
mov
stos
cs
data16
or
sbb
xor
rclb
test
push
loope
ds
xchg
sbbb
push
movsb
or
sbb
dec
push
mov
cmpsb
cmp
test
mov
and
pushf
out
std
and
outsl
movsl
dec
lret
and
adc
lods
test
lea
jge
dec
add
repnz
pop
sub
pop
and
inc
sub
push
and
jns
dec
mov
inc
jge
jb
jmp
scas
pop
popf
dec
pop
out
mov
lcall
inc
sbb
lahf
shlb
stos
ficomps
add
cmp
mov
sub
mov
in
pop
cmp
cmp
adc
loope
inc
pop
xchg
sub
shll
push
jmp
add
je
loopne
xchg
lahf
sub
loop
jns
jb
dec
and
xchg
inc
mov
mov
pop
daa
cmp
lcall
sbb
mov
jl
dec
xchg
push
dec
int
std
cmpsl
lahf
std
or
cltd
movsl
inc
jbe
mov
sets
xor
pop
mov
sub
cli
xor
and
out
pushf
push
push
sbb
pop
ja
ret
pushf
sahf
push
fistpl
sbb
pop
adc
pop
push
stc
loopne
lods
dec
mov
pop
and
mov
mov
neg
pop
mov
push
scas
push
loope
rolb
repz
sub
enter
jno
cmc
mov
push
adc
xor
outsb
cld
and
sbb
sbb
fisttps
and
fnstenv
orb
inc
mov
sbb
sahf
mov
lcall
das
repnz
leave
push
jo
xor
out
out
sbb
call
insl
sbb
dec
mov
data16
out
cmp
call
cmp
lcall
aaa
sbb
fdivs
xchg
popa
dec
imulb
pop
inc
xor
rcr
shlb
sub
out
rcll
or
mov
mov
mov
or
jo
jl
pop
pop
push
fldt
fcomi
loopne
or
mov
xor
adc
xchg
imul
dec
inc
mov
sub
aas
int
push
and
jg
notl
sbb
int
int3
jle
dec
inc
mov
xor
dec
out
in
clc
add
ret
bound
lret
add
push
lods
repz
pop
in
sub
push
or
hlt
mov
movsb
movsl
hlt
mov
mov
fsts
fildll
and
inc
test
aad
fdecstp
test
push
mov
fs
jbe
mov
push
sbb
xor
lcall
and
icebp
sub
mov
fdivrl
pop
add
addr16
lahf
aad
sbb
push
repnz
push
and
stos
cmpsl
mov
cltd
dec
fs
sub
outsb
inc
fsubr
cmp
test
xor
pop
mov
jp
jmp
inc
sbb
enter
lcall
loope
pop
mov
adcl
repz
lea
pop
mov
cs
popa
mov
sbb
les
lcall
pop
pusha
aam
inc
jl
arpl
aas
mov
loope
movsb
shr
jecxz
adcb
out
sbb
mov
sbb
pop
cmp
cmp
cs
cmc
lret
das
xorl
test
sbb
pushf
pushf
xlat
mov
aad
aad
aas
cwtl
jns
insl
jle
or
push
arpl
xor
jmp
repz
inc
or
jns
and
loopne
sbb
out
and
adc
dec
jne
subb
in
mov
and
pop
scas
sub
push
in
std
jnp
jge
sub
jae
jno
es
pop
int
testl
push
inc
mov
sahf
xchg
pop
xor
fsubs
and
iret
xor
add
ficoml
daa
prefetchnta
adc
mov
cwtl
hlt
jae
sub
adc
jge
add
push
mov
pop
push
pop
rol
or
ret
addb
push
in
stc
test
nop
mov
jo
xor
xchg
adc
icebp
cmc
cltd
xchg
push
lock
xchg
mov
jne
adc
cmp
nop
pop
sub
xchg
icebp
mov
lret
cwtl
arpl
push
jmp
stos
imul
repz
mov
add
test
xor
scas
mov
jns
sub
sbb
icebp
aam
and
lods
and
add
rorb
stos
test
push
jbe
cmp
inc
loope
out
sbb
push
dec
mov
sti
sarl
sbb
sub
pop
popa
jl
or
adc
aad
xchg
rcrl
and
roll
pop
fnstcw
imul
mov
mov
xchg
insb
xlat
sbb
mov
push
mov
inc
js
test
fstps
hlt
mov
sbb
aas
and
cmp
cs
ss
shll
lock
imul
loope
pop
aas
adc
addl
jecxz
sub
adc
les
loop
lea
inc
xorl
mov
popa
sbb
xor
jno
mov
lock
add
jle
sub
int
scas
int
icebp
sub
lea
inc
cmpsl
pop
shrb
insl
xchg
push
sbb
mov
jns
inc
xchg
add
xlat
shlb
pushf
lods
leave
mov
or
mov
loop
adc
out
lahf
adc
nop
add
incb
shl
fists
dec
imul
add
or
xor
or
sub
push
cmp
cwtl
rcll
clc
pop
mov
in
shll
fistpl
xor
cmp
loopne
add
test
fidivrl
or
arpl
lea
lock
add
xor
dec
xchg
fsincos
gs
in
push
outsb
adc
ds
lret
mov
outsl
loopne
insl
jg
sub
inc
loopne
outsb
repnz
xchg
push
rcl
insl
leave
push
pop
jge
sub
test
push
mov
out
ja
mov
clc
aas
cli
push
outsb
fistpll
ret
xchg
sti
xor
fcoml
mov
lds
pushf
scas
fistpll
cmp
or
add
mov
js
sti
add
dec
dec
loop
or
pop
jge
cmpsl
inc
je
lret
fistpl
mov
jo
sbb
jg
adc
xchg
mov
mov
jo
mov
mov
icebp
inc
mov
and
xchg
jae
inc
inc
mov
pop
and
pop
dec
jne
cmp
add
test
cli
jb
bound
ret
jnp
js
dec
inc
adc
and
mov
jns
cmp
test
push
mov
sub
pop
js
lcall
ss
dec
ret
stc
scas
aad
xor
push
push
in
pop
lcall
call
mov
cmp
pop
aam
jge
into
pop
js
enter
pop
int
mov
xchg
pop
test
mov
gs
push
cmc
leave
push
mov
in
aas
sbb
std
jmp
mov
or
int
fisubs
outsl
mov
mov
scas
hlt
in
mov
je
adc
push
xchg
dec
xlat
cmp
imul
cmpsb
pop
into
shlb
out
fsubrp
push
add
aaa
into
inc
xchg
xchg
cmpsb
add
rorl
shrb
mov
mov
js
aam
cmpsb
adc
push
and
or
mov
jnp
push
cmp
notb
mov
dec
cli
aam
sub
sbb
dec
or
sti
inc
xor
insb
aam
push
xchg
stos
imul
sbb
adc
sbb
rcll
xchg
in
mov
add
adc
outsb
jbe
cmp
lods
rclb
rclw
jp
bound
sbb
out
mov
sub
cs
sbb
mov
aaa
jg
sbb
test
mov
mov
jbe
adcb
rol
test
add
jecxz
stos
sub
in
push
mov
in
mov
add
fwait
jbe
outsb
out
mov
out
addb
xchg
push
sub
cmp
sbb
outsl
imul
addl
sub
iret
int
outsl
outsb
test
lods
sbb
push
pop
outsb
add
sbb
int3
fisttpll
fcoms
aas
cmp
hlt
add
jne
lcall
jne
and
or
adc
mov
mov
les
cs
dec
arpl
std
enter
dec
imul
cmp
cli
ja
int3
adc
ret
loop
push
out
loope
aad
out
loopne
pop
roll
fcomip
shl
les
jnp
ja
test
cwtl
mov
cmpsb
pop
mov
mov
sbb
daa
fcmovnbe
xchg
lods
cltd
add
sahf
ficoml
jnp
stc
in
sahf
fs
jmp
and
sub
subb
loopne
push
enter
xchg
lcall
push
shrb
fldl
pop
shl
push
xchg
out
scas
inc
cmp
testb
jno
mov
cld
shl
jne
mov
icebp
sub
adc
or
cmpsb
test
mov
lods
jle
loop
bound
sub
mov
or
adc
aas
jmp
nop
mov
push
lret
push
loopne
dec
imull
int3
push
popa
xchg
and
jg
lods
lret
lods
out
xlat
mov
andl
jmp
inc
cmpsl
loop
out
xchg
adc
dec
int
negl
lcall
jle
mov
jo
or
dec
aas
cld
addr16
mov
lods
fdivrl
les
sub
cmp
addb
test
hlt
stos
sub
daa
mov
jns
lods
repz
mov
push
jns
subl
sbb
pop
bound
test
fcmovne
in
iret
ljmp
lds
push
cld
int
mov
outsb
push
dec
mov
pusha
lds
jp
repnz
loop
cmp
sbb
fists
loopne
mov
xchg
inc
stc
loop
mov
adc
fdivr
pop
xchg
jge
mov
imulb
xorps
adc
cmp
inc
adc
fadds
ss
jmp
sbb
lret
daa
hlt
lahf
xchg
mov
dec
pop
jle
test
arpl
addb
xchg
cld
iret
push
xor
pop
icebp
test
or
xor
dec
fsub
and
dec
mov
xchg
arpl
imul
add
decb
ja
push
xor
cld
call
push
dec
mov
cli
movsl
jbe
push
movb
dec
mov
adc
test
lea
or
andb
lret
stc
roll
sar
mov
xlat
leave
lods
je
dec
or
nop
lods
repz
jbe
lret
jno
int
out
jmp
xor
aad
xor
test
std
dec
clc
aam
sti
in
push
cmp
pop
pop
outsb
mov
adc
xchg
cmp
jbe
pop
push
divl
xchg
push
adc
cli
cmc
mov
stos
call
sbb
out
dec
xor
icebp
mov
mov
lods
inc
lret
jmp
lods
sbbl
out
fs
pop
inc
loope
lret
push
push
push
idivb
push
dec
popl
dec
jnp
pop
xor
dec
roll
pop
test
loopne
ss
in
imul
pop
mov
sub
mov
sub
cmp
mov
flds
stos
xchg
divl
stos
lds
or
xor
sub
pop
or
dec
icebp
mov
in
xor
cmp
adc
pop
popf
dec
test
aad
arpl
cmp
push
out
xor
mov
test
movsb
inc
pop
inc
lods
xor
dec
push
movsl
data16
or
aad
push
movsb
test
pusha
cmp
inc
sarl
data16
dec
int3
jbe
xchg
jmp
fidivrl
mov
imul
xorl
inc
dec
jp
pop
popf
imul
jmp
scas
ja
inc
mov
sar
lcall
lahf
ficomps
lock
xchg
sub
orl
out
sbb
in
sbb
idiv
xchg
mov
add
pop
sbb
in
mov
rcl
inc
mov
xchg
imul
and
movsl
add
leave
jae
test
push
imul
pop
mov
iret
pop
addr16
orl
inc
push
jne
aaa
xchg
inc
push
lahf
dec
mov
adc
pusha
pop
fsts
das
dec
xor
lods
je
or
lea
push
xchg
xchg
ljmp
aaa
fsts
rorl
in
call
xchg
aam
inc
jbe
in
pop
mov
inc
jno
cmp
sbb
dec
rcr
cmp
inc
dec
call
dec
mov
popa
arpl
push
jle
lcall
loop
add
sub
and
loopne
movsl
imul
cmp
stos
nop
out
stos
loope
cmp
test
push
and
jle
cli
add
xchg
mov
and
not
fcmovne
fcoml
aad
jb
in
test
xlat
jecxz
ret
dec
loope,pn
pop
mov
adc
divb
sub
cmp
test
idiv
popf
xchg
sub
in
out
mov
sbb
nop
inc
pop
das
sbb
xchg
outsb
test
mov
mov
jbe
imul
fnstenv
lcall
in
xor
dec
xor
pop
mov
push
sahf
in
nop
and
pop
leave
adc
xchg
ss
int
push
cwtl
or
xchg
add
or
rorl
dec
dec
inc
mov
aam
mov
aad
xor
pop
leave
ret
out
fcomps
sbb
adc
popa
jp
mov
in
shrb
rorb
test
adcl
lods
xchg
pop
sub
jmp
mov
pusha
pop
cmp
shrl
cmp
lfs
shlb
lret
daa
int
jle
jg
sbb
push
and
jbe
fidivs
int
out
push
sbb
push
cmp
loop
fisttpll
dec
push
icebp
dec
clc
rclb
mov
arpl
sbb
sahf
adc
and
fnstenv
mov
ret
xor
push
push
cld
sub
nop
es
mov
sub
jmp
cmp
add
inc
or
enter
pop
insb
jl
xor
lds
add
mov
out
sub
ret
in
lea
jae
stos
jp
ljmp
popf
scas
lods
sahf
fldt
in
mov
xor
mov
inc
push
cli
outsb
fxch
inc
insl
xor
push
jb
push
sbbl
mov
pop
mov
in
dec
pop
ja
inc
dec
fistpl
or
sbb
push
mov
jmp
xchg
mov
push
in
cmp
inc
ficomps
jg
enter
xchg
sub
mov
lds
scas
imul
out
mov
adc
dec
fucomi
inc
pop
and
sarb
js
mov
into
sub
push
daa
add
lcall
mov
jmp
jecxz
pop
inc
xor
and
or
cmpsl
fcmovnu
xchg
nop
jo
sbb
mov
jno
fstpl
cmpb
sub
sti
push
test
icebp
divb
cmp
lcall
push
sub
daa
rol
mov
mov
je
inc
in
clc
mov
mov
push
loop
adc
cltd
jns
push
add
cmp
xchg
sti
xchg
cmp
sbb
btr
jbe
or
inc
daa
aad
xor
repz
sahf
dec
cld
inc
xor
push
xor
flds
inc
dec
mov
lea
add
out
sub
push
outsb
xchg
push
fs
xchg
in
aas
aas
sbb
dec
dec
leave
push
pop
dec
mov
repnz
pop
adcb
subb
or
dec
pop
cmp
dec
sub
dec
or
sti
push
xor
rcrb
xchg
inc
xchg
imul
nopl
inc
into
adc
lea
loop
ss
sbbl
pop
sbb
pusha
scas
scas
dec
rcll
ret
cmp
andl
test
mov
testl
pop
shr
jge
in
stos
add
xor
outsb
adc
jg
das
test
jnp
testl
mov
lds
aas
add
dec
add
xchg
push
and
inc
xor
xchg
cmpsl
mov
inc
test
imul
sarl
out
mov
xchg
insb
cs
sub
xchg
and
sub
mov
and
out
popa
dec
shrb
fadd
out
cmpsb
pop
test
sbbb
fmulp
sbb
mov
mov
loope
mov
adc
decb
xor
mov
pop
int
nop
loop
mov
in
imul
dec
xor
jno
add
pop
push
jp
mov
pop
or
insb
addb
or
pop
stos
jp
mov
push
xchg
shl
insl
pop
dec
aam
lcall
push
arpl
pop
movsb
dec
jmp
fildll
pop
ret
add
lcall
jg
repz
dec
mov
jmp
push
jno
xor
inc
xchg
push
sub
stos
into
testl
leave
in
mov
push
out
shr
sub
xor
bound
pop
sub
addr16
pop
xchg
cwtl
and
jb
cmp
pop
xor
pop
mov
sub
mov
lahf
xchg
lods
lret
inc
mov
xor
adc
adc
iret
pop
mov
jge
std
inc
stos
nop
pop
ret
push
inc
fiaddl
cmp
out
xorl
jb
in
and
hlt
jo
and
inc
aad
daa
xchg
in
stc
fs
jae
mov
adcb
notb
pop
xchg
fstpl
push
loop
mov
pusha
call
dec
mov
scas
cmc
les
stc
fildl
rorl
imul
cmpsl
imul
jbe
mov
sub
dec
inc
add
inc
les
add
lea
fdivl
pushf
aas
pop
adc
add
pop
addr16
mov
out
cli
mov
pop
xchg
sub
xchg
xchg
mov
sub
sbb
scas
xchg
test
cs
mov
aam
loopne
pop
jo
movsb
adc
loope
inc
push
or
lea
mov
iret
aas
dec
xchg
mov
mov
cmp
xchg
stos
or
addr16
add
insl
cmp
test
xchg
sub
mov
dec
inc
je
outsb
pop
das
xchg
mov
adc
cmc
mov
sub
fistpll
fs
fs
out
lea
es
in
lret
xlat
inc
jecxz
sysret
dec
push
sub
fiaddl
es
rcr
push
sub
jnp
les
cmpsl
outsb
sbb
sbb
aad
inc
and
inc
xchg
ret
jecxz
dec
cmp
jl
divl
cltd
movb
aas
or
add
fstpt
dec
xor
sti
stos
jo
out
cmp
int3
jle
xchg
and
sbb
push
dec
mov
cmpsb
sar
mov
pop
xchg
mov
add
sbb
xchg
outsl
lods
pop
cmp
mov
in
add
inc
xchg
push
movsl
xor
mov
add
cmp
mov
dec
push
movsb
xor
ljmp
sub
inc
pop
lock
inc
xorb
pusha
in
imull
xchg
enter
fidivrs
push
mov
fsubrs
push
loop
pop
out
pcmpeqd
push
xor
fldt
outsl
rol
push
cmp
mov
mov
inc
inc
test
mov
push
cld
sub
das
movsb
dec
xchg
loop
sti
test
push
popf
xchg
gs
out
jne
or
in
mov
sbb
mov
cmp
jmp
int
pop
xchg
imul
mov
push
sbb
lods
jb
fsubrl
rol
jbe
inc
jmp
sbb
scas
dec
icebp
test
iret
out
cltd
mov
xor
inc
insl
push
adc
lcall
stos
push
mov
dec
enter
leave
sub
xchg
push
adc
mov
loopne
and
mov
aas
addr16
mov
sbb
idivb
pop
add
push
hlt
imul
pop
xor
rorl
je
jecxz
adc
inc
xchg
sub
sub
ret
push
push
icebp
mov
fistpl
lock
je
inc
shll
push
adc
fxch
and
mov
cld
xor
inc
aaa
aam
lods
call
mov
mov
and
jl
loope
xrelease
inc
outsl
js
push
jp
xchg
or
mov
cmc
sbb
cli
ret
test
pusha
sbbl
dec
bound
push
pop
les
mov
std
dec
and
or
xchg
cmp
mov
pop
fcomps
roll
lret
pop
ss
cltd
mov
mov
add
lds
fldcw
xor
jecxz
sarb
out
into
inc
mov
push
int
cld
push
clc
adc
push
std
mov
icebp
fwait
pusha
lods
fs
popa
jge
xor
jg
clc
jle
push
cltd
mov
ret
push
cs
pop
jmp
or
mov
push
cld
cmpsl
push
mov
int
cmp
mov
imul
out
inc
inc
cmpsl
adc
pop
push
and
lock
inc
repnz
out
push
sub
enter
adc
fidivs
add
mov
or
pop
int3
xchg
jecxz
out
pop
or
and
shll
loopne
pop
push
mov
fldcw
xchg
test
sarb
jbe
std
cltd
mov
dec
xchg
outsb
fidivl
out
popf
mov
mov
gs
mov
xlat
int
out
daa
jno
aaa
cmp
sti
mov
inc
pop
and
roll
add
push
shrl
cmp
inc
cmp
adc
dec
or
dec
inc
call
out
sarl
dec
cli
adcl
jecxz
cmpsl
jne
or
rclb
jl
rcll
enter
push
pop
sbbb
xchg
or
dec
mov
js
xlat
push
add
out
movsl
test
pop
pop
mov
cld
xchg
xchg
mov
mov
xor
dec
lea
out
lock
xchg
jb
jnp
ret
jno,pt
pop
xchg
jbe
scas
dec
dec
ds
outsl
lods
lret
add
stc
push
pop
mov
aad
lea
in
divl
sbb
mov
daa
mov
dec
push
mov
incb
jmp
pop
cmpsb
adc
sub
adc
add
scas
cmp
jne
and
pop
adc
mov
insb
mov
leave
lock
xor
push
mov
add
popf
mov
and
xchg
clc
push
jl
jns
stos
dec
fstl
test
out
adc
xor
push
rcll
arpl
loop
lock
mov
fdivr
push
neg
std
mov
mov
xor
pusha
sbb
cld
mov
cli
ss
sti
mov
jbe
adc
xchg
cmp
xor
sbb
xlat
pushf
cmpsb
push
dec
sbb
sbb
loop
push
mov
loop
push
and
jnp
aaa
xor
cli
sbb
mov
xor
pop
dec
push
jg
pop
pushf
enter
incb
xor
sahf
outsl
jp
sbb
pop
jne
scas
in
jle
leave
sub
push
jb
and
dec
ja
mov
rcrl
inc
dec
xchg
arpl
lretw
hlt
into
fdivrs
mov
cs
xor
stc
movsl
mov
cmp
rcll
das
mov
fcomps
lds
push
jmp
mov
dec
clc
xlat
dec
or
add
inc
nop
adc
dec
push
push
in
xchg
cmp
nop
inc
pop
movsl
xchg
or
stos
and
jmp
xchg
sub
or
inc
pushf
adc
jp
sub
ds
imul
or
and
mov
push
lcall
loopne
mov
add
xchg
test
scas
jb
cmp
sub
mov
cmp
cmpsb
and
add
fdivrs
loop
xor
out
dec
rorb
sbb
dec
sbb
popf
xchg
fmuls
lods
iret
icebp
sti
lds
adc
fwait
cs
in
pushf
pop
push
mov
dec
fwait
cmp
int3
adc
cmp
std
add
jne
pop
fcoms
mov
int
shrl
jns
jle
popf
fcompl
xchg
add
cmpsl
outsl
or
scas
into
adc
fsubp
mov
add
adc
push
js
jp
int3
cmp
loopne
mov
jns
sub
cmp
in
and
adc
cwtl
or
add
shlb
jge
adc
lock
pop
inc
jmp
and
mov
lret
test
loop
imul
add
pop
inc
pop
xor
movsb
pop
xor
xchg
ljmp
les
arpl
pop
adc
or
cmpb
and
lahf
jns
xchg
inc
bound
jae
adc
test
inc
cmpsl
fidivs
xchg
push
fsubs
pusha
mov
cmc
mov
incb
or
jmp
jno
lock
pop
adcl
fiadds
mov
fisubl
mov
sbb
arpl
shlb
popa
es
jns
inc
ret
add
insl
pop
dec
jp
pop
into
jmp
xor
rcll
jge
clc
lahf
jns
dec
mov
sub
push
test
cmp
outsl
call
mov
rcll
imulb
mov
ljmp
pop
cmp
mov
sbb
inc
test
adc
mov
xchg
ljmp
jecxz
jmp
lock
fcoms
pop
jbe
pop
cmpsl
or
mov
xchg
inc
or
cmp
cld
aas
les
inc
loope
mov
mov
or
clc
pop
shlb
dec
dec
in
push
mov
mov
mov
out
adc
aas
fisubrl
cltd
adc
jnp
sub
mov
call
sub
jns
insl
cmp
adc
rcrl
jg
stos
inc
in
les
enter
add
leave
cmp
popf
insb
push
ja
cli
lods
stos
jns
add
xchg
pop
sbb
pop
lret
push
dec
testb
aam
xor
movsl
push
adc
loope
sub
adc
dec
jne
xlat
lahf
mov
shrl
push
sarl
adc
inc
add
push
gs
insb
and
outsl
ret
or
dec
mov
test
push
mov
push
mov
out
sahf
gs
inc
js
popa
sub
or
test
fists
push
ja
xor
and
ja
or
mov
mov
ss
push
add
iret
jne
or
cld
repz
jge
pop
lock
out
adc
jge
or
pop
out
out
sbb
gs
adc
dec
xchg
rcll
fidivl
xor
mov
jp
cmp
sub
mov
add
cmp
or
hlt
add
das
xlat
add
data16
mov
shl
jmp
pop
ret
push
out
mov
daa
inc
sbb
fwait
mov
pop
pop
stos
je
sbb
adc
imul
cmp
mov
push
push
mov
push
adc
or
push
aad
push
push
cmp
mov
sbb
mov
xchg
pop
je
aad
into
insl
sbb
push
add
repnz
adc
cmpsb
add
mov
xchg
mov
inc
or
mull
out
fcom
jmp
xor
int
icebp
ss
pop
aad
dec
lahf
pop
or
je
pop
ds
xchg
cmp
inc
sarb
and
pop
or
out
mov
adc
in
or
lret
nop
and
add
daa
mov
int3
adcb
clc
imull
hlt
adc
xchg
mov
in
aaa
sahf
lahf
aam
stos
shll
pop
jns
push
jecxz
mov
mov
mov
aad
add
sbb
sbb
cmpl
ja
leave
and
fnstcw
push
fcompl
jge
fsubl
inc
xor
adc
jle
mov
cltd
add
adc
lea
push
in
cmpsl
push
out
or
xchg
das
sbb
sub
cmp
fisubrs
cld
sub
push
xor
and
lret
loope
movsb
mov
ljmp
adc
fmuls
iret
jne
call
mov
popa
scas
bound
inc
jne
add
xor
movsl
cmp
jge
push
mov
lock
jo
jo
stos
lods
push
add
push
dec
jg
pop
aam
sub
out
pop
test
lahf
pushf
jb
shr
scas
es
add
jmp
or
repz
jmp
mulb
jle
pop
iret
cmp
mov
dec
clc
popf
jns
and
call
xchg
cmp
js
adc
mov
das
dec
mov
addr16
add
lods
in
xor
iret
cmc
into
mov
lahf
icebp
imul
adcl
adc
add
pop
imul
repnz
xchg
and
or
sub
test
stos
icebp
cmpsl
loope
xor
loopne
xchg
outsb
pop
repz
xchg
es
jnp
or
pop
pop
mov
std
cvtps2pi
mov
dec
or
ret
int3
fnstenv
test
adc
imul
shl
aaa
jne
pop
repz
add
push
pop
xor
aad
jno
dec
es
lods
cmpsl
sub
shrl
xchg
neg
push
mov
mov
in
xorb
mov
int
cli
jl
xchg
lods
cmpsl
sub
in
or
push
push
xor
call
shlb
mov
jl
or
mov
add
lahf
arpl
sbb
sbb
cmc
add
adc
sub
dec
cmpsb
xor
cmp
push
push
jle
es
or
int3
rcll
in
xchg
jecxz
fcompl
lcall
jge
push
xor
sub
popf
push
mov
sbb
mov
xor
clc
mov
jmp
push
xor
test
inc
ret
enter
das
lea
sub
fildll
mov
lods
sub
xor
es
jp
pop
and
cli
inc
fsubrs
jmp
xchg
js
ja
test
leave
dec
mov
out
add
pop
aaa
jmp
rorl
es
jae
inc
in
push
adcb
dec
subl
mov
pop
cmp
xchg
mov
and
mov
pop
in
inc
jmp
adc
sbb
mov
test
aaa
aad
ficoml
js
sbb
mov
inc
push
add
mov
sub
scas
fists
xor
pop
test
adc
rorl
fidivl
je
push
xchg
add
jp
push
add
xchg
sbb
xor
cmp
and
fdivl
inc
fcmovne
std
test
dec
lods
sti
sub
mov
sahf
loope
xor
repz
xchg
mov
xchg
roll
and
cmp
movsb
cmc
nop
insb
icebp
push
cld
push
pop
and
jne
das
push
in
pslld
jo
xor
cmpsb
and
and
mov
nop
nop
mov
jno
mov
shll
mov
fisubl
bound
cld
mov
mov
sbb
stos
push
ret
icebp
mov
push
or
mov
out
mov
mov
shrd
cmp
xchg
rcl
ja
and
jnp
fucompp
and
push
cmp
int
add
jl
ror
mov
mov
es
add
mov
mov
fs
lret
scas
lods
push
pop
cmp
xlat
aad
xchg
dec
push
cmp
jecxz
into
cmp
adc
xorl
movsb
decb
dec
adc
or
mov
int
adc
sahf
loope
out
jp
mov
imul
add
lea
xlat
mov
enter
shlb
mov
pop
inc
call
xor
pop
mov
pop
adc
ret
and
or
shr
cli
push
add
in
out
repnz
ja
lock
and
push
sbb
or
sbbb
aas
sbb
mov
mov
pop
adc
ds
lret
push
push
hlt
mov
adc
out
lods
fwait
pop
vmread
inc
notl
cltd
and
push
lret
jbe
mov
xchg
aam
daa
test
cmc
insb
andl
iret
mov
insb
fisubrl
aas
xor
mov
pop
fld
dec
add
sub
inc
insl
pop
int
dec
push
or
nop
jge
or
shl
nop
sarl
aas
inc
push
jno
add
hlt
rep
push
dec
mov
stos
inc
dec
movsl
cmpsb
cmp
hlt
mov
push
sub
mov
fidivl
out
dec
add
popa
jmp
pusha
lock
and
mov
jno
adcl
jecxz
cli
jno
fldl
xlat
mov
add
mov
jae
lock
sub
inc
inc
shlb
and
mov
push
or
fstpt
loopne
and
ret
clc
jns
in
cltd
call
pop
mov
inc
mov
lcall
sti
mov
mov
stc
xchg
fwait
and
xchg
mov
mov
cmp
insl
sub
pop
bound
shrl
pop
push
mov
and
push
or
aad
lret
jo
ret
in
in
xor
lds
fmul
insl
aas
push
loop
dec
inc
sub
jns
ret
fistl
pop
add
popf
clc
sti
fs
xchg
mov
pop
cmp
ss
les
psubsb
xor
xchg
cld
rcll
inc
add
cld
aam
xchg
xlat
arpl
dec
stc
popf
arpl
enter
and
pop
lcall
pop
jne
cli
fucomp
mov
push
mov
shr
int
mov
xchg
cli
jmp
mov
mov
xor
push
mov
mov
jp
jp
arpl
push
ror
xchg
addl
pop
mov
dec
leave
sbbl
pminub
daa
mov
mov
out
mov
add
fdivs
sti
mov
sti
sub
jns
xchg
rolb
lods
ss
ret
mov
nop
xor
aas
jge
sbb
mov
push
push
into
or
mov
sbb
xlat
inc
dec
sbb
sub
stc
lods
lcall
dec
sub
or
jg
xor
aad
out
lea
iret
and
enter
jle
or
push
push
aaa
repz
sub
lods
scas
test
leave
mulb
repz
out
and
jl
fstps
out
dec
int3
loopne
cmc
out
xor
imul
sbb
or
sub
scas
call
aas
adc
fs
stc
bsr
icebp
jecxz
mov
push
rcl
dec
xchg
pop
dec
sub
repnz
adc
pop
jae
mov
xor
push
scas
xchg
push
jb
xor
iret
mov
jno
scas
jp
sub
out
jmp
insl
movups
xor
pop
or
rcrb
dec
mov
lods
js
repnz
mov
repz
push
cmp
cltd
pop
cmpw
xlat
mov
push
insb
cmpb
daa
push
subb
arpl
fs
or
rcr
dec
jg
jecxz
sub
scas
cmpl
es
jp
decl
mov
int3
sub
inc
mov
insl
mov
lock
aas
xchg
arpl
imul
loop
mov
cld
mov
js
push
sbbb
lods
scas
jp
push
or
sub
outsb
inc
jp
sti
mov
xchg
clc
mov
jg
stos
shld
rcll
in
cmpb
xchg
fwait
sbb
jg
pop
aas
adc
xlat
shlb
in
or
and
wrmsr
push
xor
jns
dec
cmpsb
mov
mov
jne
mov
ljmp
sbb
push
adc
xchg
push
cmp
out
sbb
adc
stc
adc
adc
and
mov
hlt
gs
call
icebp
inc
and
sbb
xchg
and
in
loope
mov
adc
lcall
fucomp
lahf
adc
sbb
in
fcmovnu
sbb
imul
or
cmp
cld
or
and
in
mov
and
scas
sub
jmp
imul
data16
cmpsb
insb
cmpb
js
sahf
cmp
mov
and
ja
into
sbb
jne
sub
leave
in
sub
dec
hlt
jno
dec
xchg
arpl
cmp
sahf
imul
jmp
faddl
lods
and
lods
xchg
fldt
aam
mov
fildl
cs
mov
movsl
mov
cmp
and
lfs
out
add
ljmp
out
loope
sbb
sub
dec
push
mov
insb
scas
inc
pushf
jecxz
lods
mov
jnp
sbb
std
push
les
push
mov
aam
insb
divl
stos
mov
mov
or
push
fcmovnu
inc
test
scas
not
push
lods
jecxz
pop
dec
stc
push
xor
add
std
xor
ja
shl
es
dec
in
mov
dec
fsub
ror
movsl
push
jae
cmpsl
mov
fwait
ja
cmp
inc
call
cltd
lcall
iret
push
mov
test
mov
int
inc
pop
dec
jg
and
pop
xor
mov
and
pushf
push
ss
insl
insl
and
push
mov
dec
and
test
cwtl
test
fidivs
or
shll
dec
loop
dec
fisubrs
into
fstps
lret
pop
lahf
mov
dec
mov
lahf
dec
aam
dec
and
adc
imul
and
iret
xchg
adc
sub
adcl
dec
dec
pushf
aas
js
lods
pop
icebp
dec
dec
rcrb
lea
mov
mov
add
add
stos
jecxz
je
loope
push
push
addb
and
push
xor
add
xchg
mov
adc
xor
lods
loope
push
into
mov
nop
cmp
sti
iret
shlb
std
popf
ret
cmp
aaa
and
mov
jns
aam
push
or
addr16
aam
cmpb
adc
lock
add
mov
std
cli
and
enter
pop
ja
cmp
mov
movsb
clc
lahf
subb
mov
and
lock
ror
xor
mov
add
mov
fwait
mov
scas
shlb
dec
ss
ss
adc
xchg
inc
or
movl
sub
pop
je
into
repnz
cld
loopne
cld
les
lret
lds
inc
stos
pushl
add
sbb
inc
jae
cmc
and
out
pushf
adc
lods
popa
pop
sub
fadd
pop
xor
aas
ljmp
and
inc
outsl
sbb
sub
roll
and
iret
xor
xchg
sbb
repnz
mov
cltd
sahf
hlt
dec
mov
out
push
or
push
inc
pmulhw
and
out
shl
mov
pop
dec
div
movb
cmp
jg
out
jl
test
outsb
pop
popf
jl
inc
cmp
je
mov
pop
mov
sbbb
sub
adc
and
inc
adc
jmp
enter
hlt
mov
aaa
roll
xor
sbb
jge
push
sahf
ljmp
jp
sub
cs
jl
rcrl
popf
rcrl
pop
pop
in
mov
pushf
into
js
add
adc
mov
loopne
push
pop
push
or
ss
insl
daa
jge
xchg
test
cmpsb
sub
jge
xor
jmp
shlb
sub
arpl
leave
pop
push
fsub
fwait
int
xchg
out
and
lret
push
sbb
hlt
ss
and
sbb
add
xchg
inc
sbb
js
dec
and
andl
mov
mov
gs
cmc
jns
repz
subl
jl
repz
sbb
popa
mov
push
sbb
lret
adc
bound
mov
dec
int
add
jg
cld
push
mov
mov
mov
sub
jecxz
mov
xor
mov
pushf
or
test
cs
ficoms
add
int
fidivl
xchg
push
mov
sub
fimull
jle
test
or
test
popf
or
xor
insl
and
je
sub
rol
mov
cmp
out
movsl
push
fisttpll
cmp
mov
jo
jmp
jnp
push
add
xor
mov
mov
scas
ds
shll
mov
je
cld
xor
mov
arpl
or
sti
int
jl
xor
jnp
ret
mov
pop
mov
xchg
sbb
jmp
adc
inc
inc
inc
dec
testb
xchg
movsl
repz
cwtl
clc
push
push
shl
in
mov
cli
add
arpl
jle
mov
sti
pop
adc
dec
into
mov
jne
out
jb
fwait
push
sbb
and
xor
fcomps
into
sub
mov
xor
xor
stc
jnp
hlt
outsl
dec
and
mov
sub
aad
icebp
mov
jecxz
pop
jp
sub
and
push
jg
jb
shl
into
push
pusha
cmpsl
cmpsb
ror
fbstp
iret
out
fstpl
mov
cltd
lods
popf
or
adc
push
cld
dec
mov
mov
push
mov
cmpsb
xor
mov
mov
and
push
popa
mul
push
fnsave
and
mov
push
inc
mov
stc
gs
push
push
push
and
ror
fwait
loop
test
int
push
jne
loope
sub
jb
add
ret
int3
in
mov
cmp
ss
pop
pop
inc
sbb
pop
push
push
add
cmpsl
cmp
daa
pop
push
cmpsl
cwtl
icebp
xchg
push
movsl
xor
loop
je
sbb
andb
xor
imul
and
cmp
xchg
sbb
pop
loopne
inc
jno
push
insl
mov
cmp
and
stos
xor
test
cmp
push
pop
mov
gs
xor
es
inc
int
scas
std
sub
pop
stos
push
xorl
or
sub
sbb
xor
jle
xchg
xchg
push
sub
jp
cmp
arpl
cmc
xchg
iret
mov
ret
out
ja
arpl
push
bound
jb
jg
ret
movsl
sub
in
jcxz
aam
jns
ds
xchg
or
add
gs
or
xor
outsl
sbb
out
xor
sub
outsl
call
or
mov
sbb
inc
cmp
xchg
xchg
insl
and
addr16
scas
push
dec
mov
add
lds
xchg
mov
test
out
dec
jne
sbb
int3
push
repz
mov
arpl
ficompl
add
mov
push
sbb
dec
cmp
repnz
fsubs
test
rorl
lea
movl
lock
push
sub
jp
xor
mov
xor
js
shr
mov
mov
inc
xlat
aaa
xchg
sub
in
pop
sub
in
push
push
xchg
pop
mov
jmpw
and
rcrb
pop
xor
or
pop
cs
sbb
push
icebp
shrb
inc
scas
adc
mov
jecxz
pop
mov
xchg
xchg
rcr
dec
out
jns
xchg
lods
or
adc
sbb
xor
push
mov
sub
and
inc
mov
push
xchg
jnp
sahf
call
xchg
inc
xor
imul
jne
push
int3
lahf
test
int3
mov
leave
add
pop
in
fs
clc
mov
out
cmc
mov
mov
add
rcll
mulb
dec
rorl
shl
out
inc
xchg
loopne
jmp
scas
movsb
inc
scas
inc
movsb
sbbb
or
add
mov
imul
jge
js
cmc
push
sbb
sahf
gs
pop
lahf
rcrl
aam
xlat
push
mov
arpl
xor
cli
iret
enter
sub
stos
push
lret
mov
insl
gs
jnp
cmp
aaa
clc
stos
dec
cmp
in
sub
push
in
pop
jne
rol
mov
mov
movsb
add
jp
mov
or
inc
fwait
jle
add
pop
and
push
xchg
mov
rcl
xor
pop
popa
mov
push
dec
and
add
xor
and
push
lcall
add
xchg
pop
mov
jle
repnz
imul
mov
dec
dec
mov
daa
lods
stos
aas
in
mov
mov
lods
push
pop
in
jp
or
adc
pusha
outsl
test
and
push
xor
or
int3
xor
lock
lds
cmp
add
rolb
jbe
fldcw
mov
mov
frndint
push
push
push
lock
pop
mov
xchg
jecxz
stos
sub
call
mov
aas
jmp
test
out
push
xorb
adc
pop
shll
mov
mov
cmp
aad
adc
and
mov
cmpsb
rolb
xchg
cltd
ss
xchg
aad
daa
imul
out
push
and
xchg
jl
adc
dec
push
xchg
in
dec
or
lahf
jae
or
fistps
add
and
adc
out
popf
data16
mov
outsl
enter
xchg
leave
mov
push
pop
add
jle
sbb
xorb
xor
icebp
and
jmp
popf
cmp
fdivl
sbb
stos
add
jnp
lock
stos
ficompl
push
pop
push
into
and
mov
out
leave
lcall
push
mov
mov
push
adc
adc
aas
cmp
orb
mov
rcll
push
push
test
fs
sbbl
lcall
dec
cwtl
scas
xchg
imul
mov
inc
jg
adc
mov
add
mov
dec
xchg
out
imul
push
mov
xchg
out
add
inc
cmp
cmc
lea
ja
sub
fisttpll
adc
dec
jns
movsb
cmpsb
bound
pop
imul
fwait
ret
add
inc
out
pushf
mov
aaa
stos
ret
add
lret
push
sub
jnp
arpl
fcomps
and
fldl
fiadds
pushf
inc
xchg
or
sahf
xchg
cmp
mov
adc
stc
hlt
les
clc
ficomps
aas
cltd
add
inc
xorb
mov
lds
adc
sbb
addr16
fisubrl
push
jbe
sbb
add
js
xchg
ljmp
push
or
shrb
lret
jbe
scas
ret
inc
into
lods
pushf
insb
lea
es
movsb
xlat
jno
mov
xchg
icebp
inc
lgs
fwait
sbb
push
pop
mov
mov
dec
push
push
frstor
sti
fcoml
cmp
stos
push
mov
out
mov
leave
and
and
sbb
in
shll
lods
loopne
or
mov
int
mov
ss
stos
fistps
loopne
jno
scas
sub
pop
inc
nop
fnstsw
mov
jns
mov
mov
or
lods
jl
push
icebp
out
ds
test
lds
test
enter
mov
shrb
push
pusha
rorl
push
dec
mov
outsl
fsubl
int
and
jmp
jbe
xor
ds
mov
fidivrs
sbbb
adc
adc
cmp
add
push
es
and
xlat
add
dec
outsl
push
jb
mov
inc
out
pop
xchg
lcall
addr16
and
lcall
inc
mov
nop
and
int
imul
mov
cmp
sub
jns
push
mov
mov
mov
xor
pop
sbb
xrelease
mov
push
pop
mov
lock
pop
hlt
repz
fisubs
call
add
into
lods
shlb
in
andl
dec
sahf
aas
xor
sbb
rorb
mov
mov
sub
and
mov
mov
jl
jno
jle
es
jo
sub
adc
ds
roll
popf
mov
imul
dec
mov
cvtpi2ps
in
adc
scas
cmpsl
or
in
fdivs
and
mov
not
cmp
push
push
cmp
xor
inc
sbb
imul
cmp
lahf
xchg
and
jnp
jmp
inc
clc
in
cmp
cmp
mov
jne
dec
inc
shll
ljmp
dec
js
gs
daa
push
push
mov
into
and
mov
mov
adc
pop
sahf
or
sub
adc
xlat
push
push
pop
xchg
test
dec
ficompl
pop
in
adc
xchg
cs
stc
jno
popf
dec
jmp
xor
adc
daa
lods
mov
and
pusha
mov
cmp
add
push
fisubs
push
leave
pop
add
inc
inc
xchg
cmp
sbb
pusha
les
pop
sub
or
xchg
into
dec
insl
rorb
test
cwtl
std
mov
dec
xchg
cmpb
out
jle
mov
mov
jl
mov
push
repz
sub
call
mov
add
xor
mov
pop
dec
or
mov
xlat
or
mov
add
movsb
std
jb
pop
cs
adc
out
xor
aas
sbb
addr16
xchg
loope
or
arpl
push
inc
adc
xor
xchg
mov
dec
jg
or
adc
jns
popf
inc
movsl
ficompl
sub
sbb
mov
inc
mov
mov
cmp
xor
or
xor
push
inc
ja
and
pop
sbb
fs
push
sbb
push
adc
mov
mov
bound
loopne
sub
jno
mov
xor
mov
int3
lods
or
in
xchg
lods
xor
data16
cmp
pop
jg
adc
xchg
loopne
leave
cmpsl
push
fnstcw
sub
sbb
mov
sub
jo
or
out
fdivl
mov
leave
cmpsb
sbb
add
mov
out
pop
fnstcw
popl
nop
imul
lret
enter
addr16
into
sbb
pop
clc
jl
enter
mov
insl
sbb
dec
xor
push
shrb
in
xor
xchg
int3
out
fcoms
dec
or
cmpsl
cmp
lock
cmp
push
outsb
xlat
ja
iret
ret
hlt
push
jmp
xchg
movsl
xor
iret
es
arpl
loop
ljmp
pop
add
cmc
push
fidivl
pop
cmpsl
mov
pop
fsub
hlt
mov
ja
inc
lds
pop
pop
push
test
cmpsb
adc
out
js
or
adc
sbb
mov
inc
lock
pushf
fstpl
inc
push
fistps
repnz
xchg
popa
mov
mov
test
and
pop
pop
adc
rcll
fs
lds
lock
test
xlat
push
pop
into
push
mov
push
xor
ljmp
xchg
sub
and
dec
lods
sbb
mov
dec
push
lods
dec
dec
sbb
xlat
adcl
iret
mull
les
bnd
inc
cmpsb
jle
sbbb
jle
or
loopne
mov
xchg
fcompl
inc
imul
mov
js
ja
sub
cmpsb
test
push
lods
jb
fs
dec
shl
xor
xlat
jmp
jae
push
cmpsl
dec
scas
sarb
add
xchg
xchg
mov
push
lret
xlat
cmp
mov
push
and
ret
callw
push
pusha
push
add
cld
jecxz
pusha
out
add
and
fisubrl
xchg
mov
sub
aaa
mov
mov
test
push
push
sbb
dec
xchg
xor
jp
test
mov
pushl
adc
cld
in
cmp
jbe
clc
ljmp
pop
jns
into
lds
inc
xchg
inc
std
mov
mov
lds
sub
jne
shrb
sbb
les
mov
push
jmp
repz
jo,pt
rcrl
jge
push
faddl
inc
mov
add
ljmp
lahf
or
and
cmp
shrl
xor
int3
and
push
sbb
xchg
divb
ret
mov
cmp
mov
nop
mov
cwtl
pusha
or
cld
test
repz
mov
stc
mov
dec
sbb
pop
pop
ljmp
aam
pop
push
inc
rol
sub
lahf
jne
or
rol
push
or
js
aad
lock
sub
adc
pop
int
or
shl
nop
mov
inc
and
mov
aaa
push
dec
dec
pop
dec
gs
je
mov
or
les
lret
cli
mov
movsl
scas
sub
sub
cmc
imulb
mov
mov
lock
sbb
and
jbe
outsl
pop
push
negb
mov
cli
pusha
mov
or
dec
sbb
jmp
inc
or
sbb
negl
mov
jae
int
mov
push
xor
stos
sbb
stos
jecxz
int
ds
jecxz
or
sarb
ffreep
and
and
out
add
mov
js
or
push
shll
pushf
arpl
gs
inc
mov
ret
movsb
cmp
or
daa
sub
mov
xchg
out
cmp
mov
jo
mov
pop
dec
sub
ja
idivl
jge
loopne
stos
sarl
and
out
xor
leave
inc
dec
mov
jg
sbb
jno
xchg
popf
jge
cmp
pop
je
inc
pushf
pop
fists
stos
out
dec
arpl
shrb
int
mov
add
cvtps2pi
mov
fistps
std
in
pop
dec
sar
rcl
adc
imul
push
or
orl
fistpl
pusha
sbbl
cmp
dec
mov
sahf
scas
push
out
lock
cmp
orl
xor
add
inc
xor
push
mov
xor
or
jae
es
pop
and
xor
inc
dec
push
clc
test
pop
xchg
xor
icebp
imull
or
fwait
jae
cmp
xchg
insl
inc
out
fs
adc
ja
and
xchg
test
ds
mov
push
stc
push
xchg
pop
adc
rorb
loope
clc
xchg
add
out
fbld
out
lret
mov
push
push
pop
xor
imul
push
lods
sub
int
xchg
lock
or
add
pop
pop
sub
mov
lahf
mov
ja
xchg
inc
jnp
ja
mov
adc
fucomp
xor
test
push
in
mov
and
mov
mov
test
sbb
mov
popf
cwtl
mov
adc
adcl
mov
adcb
push
loopne
lods
mov
dec
mov
in
je
addr16
jmp
mov
sub
shl
out
adc
mov
shr
lcall
lods
lock
mov
pop
jbe
mov
pushf
pop
dec
enter
mov
push
sub
sub
xchg
std
and
fwait
call
in
movsb
or
jns
push
jecxz
inc
xchg
xchg
xchg
or
ret
lock
lock
push
pop
sbb
inc
and
sub
mov
dec
dec
aaa
ret
jb
or
and
xor
je
testb
cmp
mov
push
and
inc
xor
outsb
sahf
inc
mov
test
aaa
fisubrl
lcall
xchg
test
sub
dec
dec
int3
adc
mov
xchg
mov
mov
mov
pop
xchg
inc
fidivl
imul
xchg
gs
xor
push
insl
dec
inc
jle
int
loope
and
or
mov
lcall
orl
inc
xor
lds
ljmp
bound
push
inc
xorl
mov
dec
repz
iret
arpl
imul
cltd
push
jecxz,pn
sub
xlat
xor
rcrb
leave
pop
loop
aas
xchg
and
inc
push
sahf
mov
jae
mov
add
inc
mov
mov
dec
out
in
adc
lcall
add
daa
mov
sub
jns
fldcw
xor
pushf
dec
adc
pop
enter
cld
push
add
sub
and
rcll
mov
sub
xchg
shll
xlat
inc
sahf
cli
or
lret
in
scas
movsb
push
test
push
addr16
mov
dec
and
aas
ds
into
in
cmc
les
loopne
and
movsb
mov
gs
xor
adc
call
xor
push
iret
push
inc
push
jbe
pusha
and
cmp
cmpsl
xor
out
sub
lcall
jbe
test
jbe
pop
and
fcmovnb
insb
or
out
inc
ss
mov
mov
cmp
sub
call
jae
sub
xchg
mov
or
jno
leave
push
xchg
add
mov
enter
ret
stos
fidivrl
inc
popa
and
xor
fildll
arpl
daa
filds
out
jg
jbe
push
mov
mov
test
sti
lret
aas
arpl
dec
jp
xchg
in
arpl
arpl
xor
sbb
mov
or
mov
sahf
cmp
fildll
inc
xor
inc
cld
and
outsb
sahf
in
xchg
mov
add
jg
dec
lcall
lock
or
das
and
nop
sbb
and
call
jp
fwait
cwtl
icebp
inc
xorl
mov
jae
scas
mov
dec
mov
cmp
in
mov
xor
mov
cmp
sub
xor
pop
sub
inc
rcrl
lcall
addr16
or
stos
push
sbb
stos
icebp
push
jg
cs
dec
dec
pop
inc
cld
pop
pop
inc
ljmp
cld
jmp
lret
inc
pusha
add
je
xor
add
sbbl
adc
mov
push
lret
or
or
xchg
jbe
xor
push
mov
jne
sbb
mov
and
adc
sbb
jl
outsb
scas
cld
mov
fiadds
cmp
adc
xchg
stc
ja
shrl
jecxz
pop
jg
mov
fdivl
nop
xlat
out
push
sub
or
aam
mov
movsl
repnz
rcrb
test
icebp
fs
out
mov
mov
sbb
clc
icebp
inc
mov
in
pusha
and
xchg
shlb
xor
dec
lods
test
rclb
cmp
add
ret
sahf
int3
scas
ret
mov
inc
in
insb
leave
loope
inc
push
sub
or
pop
push
add
jae
xchg
mov
pop
push
dec
mov
dec
dec
stos
mov
fcomps
push
push
mov
xchg
loopne
fnsave
xchg
xorl
ret
outsb
in
or
sbb
scas
cld
fcoml
jnp
jo
inc
mov
or
jae
dec
repz
in
std
decb
fmuls
adc
xchg
das
es
pop
xlat
xor
cltd
push
dec
repz
test
mov
lods
add
mov
adc
inc
lea
sbb
or
sarl
cmp
xchg
js
scas
dec
dec
in
inc
push
inc
imul
sbb
sbb
fwait
jle
xor
ja
mov
fsubl
dec
cmc
push
lret
or
sbb
shl
xchg
es
xchg
int
push
outsl
push
popa
js
outsb
ds
xchg
mov
fisubl
ss
stos
test
lret
sub
call
scas
xchg
add
push
mov
lahf
mov
imul
popa
jmp
push
jmp
or
pop
in
xchg
jns
data16
add
pop
lds
adc
loop
into
xor
jecxz
add
rcrl
push
mov
mov
frstor
int
fwait
mov
lahf
ja
popa
push
nop
in
scas
lds
test
and
fstps
and
cmp
shrb
shll
push
sub
mov
push
add
or
test
inc
jp
inc
push
push
xchg
push
or
jp
push
cmp
sbb
cmp
es
jns
fcmovu
divb
sub
test
rcll
loop
ljmp
popf
and
xorl
inc
or
std
mov
out
cmpsb
or
jp
popa
xchg
mov
lods
bound
repnz
sete
out
divl
mov
out
cmp
aam
cmp
bound
sahf
cmp
xchg
sar
insb
ret
in
xor
cmp
ret
insb
dec
sbb
xchg
mov
pop
cmp
xor
repz
loopne
int3
je
sahf
adc
xor
outsb
jmp
jnp
pop
cs
call
push
ds
ds
sbb
push
inc
dec
mov
stos
jbe
loopne
xchg
je
jmp
xor
idivb
in
popa
fistpll
out
jns
mov
ljmp
and
push
and
xor
aaa
and
mov
or
arpl
fisubrs
jecxz
fcoms
jp
jmp
outsb
cmp
nop
mov
push
xchg
lahf
inc
pop
lds
sbb
icebp
pop
push
fsts
inc
dec
test
push
in
push
mov
hlt
mov
loop
jb
sbb
in
test
jmp
fadds
mov
sub
push
sbb
cltd
dec
xlat
int
sti
jl
fildll
dec
lret
push
lods
mov
add
xor
mov
jae
cmp
ret
or
jecxz
xchg
lahf
rcr
push
subl
dec
daa
xchg
jnp
ljmp
aam
jae
es
mov
xor
xorb
adc
or
test
jo
movsb
xchg
hlt
lahf
pop
vpminub
xchg
xchg
sbb
dec
mov
popf
cmpsb
mov
adc
and
or
bound
push
mov
lahf
sbbl
aaa
cmpsb
jo
mov
push
popf
mov
push
mov
xor
out
daa
sbb
fbld
and
pop
dec
in
xchg
test
jns
and
xchg
popa
rcrl
mov
hlt
mov
lods
aas
aaa
mov
jns
jb
clc
jmp
psllq
mov
xor
mov
negl
jle
sbb
xchg
mov
das
ds
add
lret
cltd
and
fwait
cmc
or
pop
movsb
sub
fs
push
push
mov
test
je
jae
push
push
cwtl
or
pop
pop
mov
test
pop
test
addr16
jecxz
mov
lock
jl
dec
mov
sub
fdivp
mov
int3
lret
out
scas
repnz
loope
mov
push
and
or
xor
out
dec
outsb
into
into
mov
mov
hlt
sbb
pop
push
ja
jno
inc
xchg
inc
ret
repz
ret
mov
das
and
dec
loop
fdivs
out
and
mov
call
addr16
in
outsl
fistl
xor
cmpsb
jl
lcall
enter
repz
or
repnz
push
sbb
lret
int3
sar
and
stos
int3
ficoms
mov
and
out
or
dec
lahf
lods
or
sbb
mov
inc
jp
push
pop
cmpsb
es
mov
dec
scas
adc
orb
scas
mov
stos
mov
jne
sbbl
shrl
push
xchg
xchg
xchg
adc
call
psrld
insb
shll
daa
cmpsb
ds
cwtl
sub
jge
xor
xor
jo
andl
scas
cmpsb
and
and
mov
sub
ret
lret
jne
mov
xchg
mov
nop
mov
dec
xlat
push
add
shll
cmp
fcomi
les
xor
sbb
sar
cs
dec
mov
cmp
cmp
cmp
mov
adc
jle
inc
mov
xlat
jb
mov
pop
dec
dec
jno
ss
cmc
pushf
dec
xor
js
cmpsl
dec
push
repnz
int3
stc
repz
cwtl
xchg
loope
gs
dec
xor
pusha
sub
shlb
outsb
pop
aam
mov
insl
ss
inc
loopne
andb
inc
and
call
call
inc
lahf
jle
pop
outsl
or
testb
inc
lret
jle
lods
je
sub
cmp
push
adc
sub
leave
jl
dec
and
cmpb
xchg
or
jl
int3
shlb
mov
in
mov
pushf
and
inc
cmp
stos
jge
xchg
dec
je
inc
inc
outsb
stos
cwtl
nop
mov
dec
fs
xchg
insl
int
mov
leave
fucom
inc
rcl
push
or
xor
dec
repnz
jnp
push
sbb
rclb
mov
sub
push
adc
mov
xor
adc
push
dec
lret
jmp
sub
add
dec
lcall
mov
push
les
out
mov
les
std
lods
mov
aad
or
cli
sbb
sub
jge
dec
jge
enter
int
cmp
mov
test
push
sub
push
adc
out
ljmp
xchg
rorl
push
sarl
in
repnz
push
std
mov
cltd
xchg
dec
sbb
je
pushf
mov
dec
pop
mov
aad
gs
cmp
insl
mov
xchg
imulb
mov
repz
es
mov
pop
adc
mov
rcrl
mov
sar
add
repnz
sub
dec
loopne
sbb
pop
ret
jb
cmc
in
pop
pop
sbb
movsb
mov
and
dec
stos
int3
cmc
adc
inc
outsb
pop
xchg
pop
fsubrl
cld
pop
inc
inc
xchg
cmp
mov
jb
dec
jb
adc
lret
add
mov
add
data16
hlt
fiadds
push
cs
dec
pop
xchg
sub
mov
mov
movsl
and
pop
lret
add
dec
lods
xchg
sbb
xlat
cli
pop
aad
leave
adc
loop
loop
mov
bnd
cmpsl
aas
adc
pusha
fldt
xor
adcl
imul
sbb
lret
push
fs
jnp
es
jb
out
xor
fisubrs
into
outsb
sbb
inc
or
mov
cs
jb
add
mov
out
add
sub
mov
sub
sbb
cs
xor
or
pop
aaa
fsubs
arpl
mov
movsl
test
or
jmp
jbe
pop
daa
mov
mov
aas
cmp
loop
jae
mov
shrl
jne
jecxz
insb
dec
adc
jae
lret
ss
cmpsl
or
sti
mov
dec
popa
in
repz
loop
shll
enter
sbb
and
jb
aad
pop
cli
in
aaa
imull
or
pop
data16
mov
push
fbld
and
imul
sub
cs
das
push
pop
sub
add
fldl
dec
push
mov
cwtl
mov
outsl
sbb
jmp
cli
movsb
jmp
ficoms
mov
icebp
stos
push
fwait
sbb
mov
andb
aaa
jns
call
jns
out
and
mov
and
loop
notb
ds
incb
inc
rcrb
fucomip
adcl
repz
cmc
sbb
ds
addr16
aas
insl
arpl
xor
jno
cmp
inc
es
vpsrlw
sub
jnp
scas
inc
jp
jns
into
mov
cmpsl
cmp
rolb
dec
push
dec
enter
imul
pop
sti
pop
dec
scas
dec
mov
cmp
or
pop
scas
clc
xchg
inc
ret
mov
inc
lcall
push
adc
ja
mov
scas
mov
jne
mov
mov
fistps
mov
cmp
sbb
mov
push
add
testl
mov
es
sbb
push
out
icebp
adc
mov
mov
arpl
jo
les
lock
arpl
fs
and
cmc
dec
adc
adc
add
and
lods
or
loope
cmp
imul
mov
je
dec
scas
cli
xlat
inc
add
sub
push
inc
int
fwait
dec
xlat
in
add
icebp
repz
dec
js
iret
shll
sub
inc
loopne
mov
mov
xor
xor
dec
jb
cmpsl
movsb
xlat
inc
mov
cmp
xchg
lock
mov
loop
outsb
loopne
inc
sub
cmp
aad
movsb
or
jnp
ret
je
outsb
fs
insl
sub
mov
cmp
mov
push
mov
add
fldcw
adc
mov
cmp
inc
or
add
sbb
inc
nop
cmp
jae
xor
xlat
punpckhbw
shr
push
shll
sbb
enter
orl
push
sub
cli
mov
mov
shlb
mov
arpl
jge
std
sbb
dec
fists
insb
mov
call
les
test
jmp
xchg
inc
adc
xor
ja
addb
or
pop
fadds
jae
or
xor
nop
scas
int3
adc
pop
lahf
roll
repnz
or
inc
loop
fcoms
dec
bound
push
dec
arpl
popf
xlat
jle
or
sbb
out
push
push
insl
out
jno
repnz
fmul
fsts
xchg
cld
mov
sbb
push
mov
mov
int
in
mov
shll
xchg
pop
loop
test
aaa
mov
or
cmp
pop
jbe
enter
push
dec
popf
xorb
xchg
or
fstl
push
inc
movsb
fsubs
call
push
dec
stc
mov
imul
mov
in
dec
cmp
shll
test
jl
push
in
aad
cmc
fbld
fucomi
sar
outsb
sbb
fcoml
insb
movsb
cmc
cmp
popf
pop
push
fadds
push
push
pop
jmp
lock
push
jb
lea
adc
pop
insl
jbe
cld
js
xorl
aas
mov
rolb
out
cmpsb
jae
xchg
mov
mov
mov
push
std
lock
sbb
inc
mov
dec
addr16
xor
mov
mov
jb
shll
shlb
xchg
test
mov
loope
jge
in
mov
or
and
shr
insb
inc
icebp
mov
adc
or
icebp
pop
cltd
and
adc
incl
dec
jo
dec
inc
fwait
pop
ret
xchg
sarb
movsb
pop
pusha
cltd
jo
inc
sarb
jo
xor
int
pusha
pop
loop
repz
xchg
inc
pushf
int
add
and
sub
push
shlb
add
std
pop
sbb
incl
push
push
mov
jae
mov
out
in
shl
mov
cmp
cmc
lret
int3
mov
cmc
mov
dec
or
inc
lods
pop
ds
pop
xchg
cld
bound
scas
inc
in
ljmp
orl
das
arpl
cmp
cwtl
addr16
sub
push
pop
lret
aam
or
cmp
sbb
stc
mov
hlt
mov
gs
out
mov
pop
stos
movsl
sbb
fcmovnu
sub
into
sbb
repz
xchg
aas
insb
push
fdivrl
insb
in
mov
mov
jmp
sahf
xor
addr16
or
inc
push
mov
aam
jo
aas
ret
cmp
bound
and
xchg
in
ja
pop
push
xchg
or
cmp
sbb
ljmp
pop
in
pop
out
lods
and
add
gs
aas
mov
sub
in
inc
out
clc
jae
xchg
mov
sbb
sbb
rep
ds
inc
fwait
push
lahf
push
sbb
push
sbb
ds
repz
push
loop
imull
or
inc
aaa
and
xor
loop
icebp
stos
pop
in
jb
iret
clc
out
xchg
cs
es
les
sbbl
jl
xchg
cmp
push
repnz
mov
cmp
push
pop
mov
push
sbb
inc
cmpsl
mov
jp
cmp
stc
xor
mov
pop
jmp
sahf
cs
lfs
adc
icebp
pop
fwait
pop
and
or
fidivrl
adc
lcall
popf
in
sbb
mov
rcrb
dec
mov
stos
jle
mov
loopne
or
fdecstp
push
sub
sti
sub
jnp
mov
inc
push
xor
add
mov
loop
add
sub
inc
mov
jno
mov
int3
push
out
cli
jmp
pop
sub
push
loop
test
and
fildl
pushf
jg
call
pop
mov
xor
xchg
int3
pushf
push
outsl
push
and
mov
or
les
mov
jb
dec
jle
or
xlat
xchg
jge
lods
fists
xor
sub
loop
fisttpll
inc
mov
lahf
shrb
popa
add
jbe
cmpsb
mov
push
inc
pop
cmp
xchg
jg
or
and
jle
adc
sbb
test
cmp
dec
ds
cld
push
scas
push
das
addr16
aaa
add
xchg
add
aas
ja
dec
mov
jmp
push
sub
loope
xlat
add
mov
xchg
insl
test
mov
xor
fmuls
push
cltd
pop
movl
add
mov
fdivrs
push
lock
inc
pop
add
std
cmp
push
mov
ljmp
lock
imul
jge
leave
outsb
push
stos
or
fcompl
daa
push
fcompl
inc
mov
and
pushl
inc
xchg
inc
add
and
push
pop
sub
add
xchg
test
scas
repnz
decb
sbb
test
add
fldenv
jb
lds
xor
sub
add
insb
or
cmpsl
mov
pop
and
fwait
ds
cmp
cmp
add
fnstsw
push
pop
mov
rorl
add
subl
movsl
sub
rcrl
mov
cmp
pop
fnsetpm(287
das
pop
inc
jnp
pop
data16
pop
ljmp
arpl
jle
mov
sar
inc
popf
gs
mov
cmp
or
and
shr
test
sbb
ret
jbe
pop
cmp
ret
push
aad
inc
push
inc
test
orl
cltd
mov
cld
in
cmpsb
pop
and
clc
pop
insb
jl
sbb
add
jmp
fdivr
add
jle
dec
jb
and
stos
xchg
push
ds
fs
jp
or
mov
xlat
inc
push
sbbl
adc
ljmp
jp
sbb
cmp
loopne
test
cli
mov
adc
sbb
insl
ss
rcrl
push
jo
test
icebp
pop
imul
mov
mov
stos
xchg
mov
mov
mov
push
int
inc
jno
lds
fnstcw
pop
fbstp
pusha
dec
fnstenv
sbbl
pop
xchg
lods
or
sbb
dec
lret
inc
pop
dec
pop
pushf
xor
lods
lcall
mov
mov
jle
xchg
sbbb
insb
mov
jmp
lret
shll
icebp
pop
mov
push
xor
sbb
dec
mov
jbe
out
pop
cwtl
push
loopne
arpl
pop
dec
shll
lds
insl
lods
daa
test
insb
or
jo
inc
add
mov
jp
dec
push
pop
clc
mov
push
xor
out
sti
je
fstpt
lods
cmp
xor
imul
sbb
stos
and
adc
popf
out
ud2
push
sbb
ja
push
addr16
pop
mov
sub
insb
dec
push
xchg
in
cmp
sub
dec
lds
xor
or
inc
sub
mov
xor
fldcw
mov
or
rcrb
xchg
adc
or
adc
xor
adc
cld
imul
scas
sbb
fcomps
inc
cmp
and
popa
stos
jp
test
or
aad
inc
dec
mov
fwait
push
outsl
aam
cmc
out
xchg
xor
jnp
mov
push
sbb
frstor
mov
xchg
mov
sbb
movsb
sbbl
shrb
bound
into
pop
cmp
mov
pop
lds
pop
push
mov
inc
andb
jle
mov
movb
ret
gs
xchg
or
push
stc
andl
adc
shrb
push
ds
mov
dec
sub
ret
inc
mov
adc
sti
add
movsl
stos
or
es
call
hlt
xchg
mov
adc
ss
fcomip
bound
sub
pop
jmp
outsl
sub
addr16
mov
sub
jns
cmp
ror
sub
push
subb
xchg
push
xchg
mov
cmp
cmp
in
lods
in
ret
fsubs
imul
ljmp
mov
push
cmc
inc
ret
sub
xchg
inc
cld
jne
data16
pop
mov
pandn
sub
adc
sahf
ja
pop
pushf
repnz
stc
mov
inc
cld
insb
xchg
repz
lods
mov
xchg
imul
xchg
xor
leave
jns
nop
inc
push
push
cs
mov
add
pop
inc
pop
inc
mov
imul
mov
push
dec
ja
cltd
dec
mov
mov
popa
sub
mov
int3
push
pop
push
mov
jp
cmp
jns
rcr
scas
cmp
leave
fwait
lods
or
push
xor
aas
andl
adc
ret
sarb
in
fimuls
jge
or
pop
add
add
sar
inc
sub
push
cs
aas
int
shll
in
scas
inc
xchg
inc
lret
cld
clc
ret
bound
testb
adcl
xchg
add
sub
negb
adc
push
xor
or
xchg
sbb
outsl
js
sti
mov
andb
stc
test
push
add
xor
mov
jecxz
dec
out
cli
mov
add
daa
pop
jo
popf
lret
pop
mov
jge
out
push
add
push
cmc
cmpsl
in
andb
adc
xchg
inc
aas
inc
neg
je
inc
movsl
mov
jle
mov
jmp
or
mov
outsl
mov
add
sub
jns
out
mov
cs
test
in
sbb
insb
sbb
in
xchg
les
shrl
pusha
outsl
icebp
ljmp
dec
shlb
or
inc
mov
xlat
push
mov
pop
xchg
arpl
das
rcr
sub
xchg
insl
adc
adc
sub
cmp
loope
lret
fisubs
subb
int
sbb
decb
sti
es
mov
lahf
stos
sti
xor
cmp
enter
mov
xchg
xchg
enter
dec
sbb
add
clc
ret
insb
test
adc
leave
loopne
daa
enter
mov
addr16
adc
sbb
adc
mov
sub
lods
xchg
in
jbe
pop
stos
imul
mov
xchg
insl
push
add
mov
sub
jo
dec
les
dec
xchg
repz
jle
test
js
aas
rorl
fisubs
xchg
push
jp
mov
mov
mov
leave
pusha
in
adc
loopne
xor
pushf
mov
inc
icebp
or
stc
mov
bound
repnz
movlhps
out
sub
xchg
pop
loope
sub
cmp
dec
jnp
xchg
ficoml
sbb
pop
sbbb
mov
xor
push
jmp
out
jns
lods
pop
add
pop
mov
or
cmp
mov
stos
andl
xchg
mov
repz
negl
and
or
and
imul
xchg
mov
sub
mov
sub
rcrl
xchg
or
repz
repnz
mov
inc
sub
cli
in
jo,pn
push
pusha
cltd
mov
xchg
mov
sub
sbb
ljmp
fisubrs
sbb
out
int
push
push
dec
js
fmull
cltd
imul
loop
out
ret
aam
mov
ljmp
jmp
lea
push
xchg
mov
push
cmpsb
lods
pop
inc
fdivl
xchg
jl
addr16
sbb
mov
imul
sub
pop
jb
push
cltd
sbb
lods
ret
call
pushl
in
cmp
pusha
and
pop
jns
xchg
adc
mov
inc
xchg
sub
sti
xor
push
nop
fs
sbb
or
rcrb
test
enter
movsb
xchg
mov
enter
jmp
in
in
jg
cmp
xchg
fcmovnb
inc
cmpsb
bound
mov
push
mov
outsb
xchg
hlt
lods
lock
pop
xchg
lods
aas
lds
in
xor
mov
mov
test
mov
nop
movsl
dec
dec
jmp
fwait
stos
add
mov
pusha
xchg
es
and
iret
loopne
cwtl
pusha
sub
and
ret
cmp
mov
cmc
and
fwait
mov
int
mov
and
xor
pop
push
dec
mov
idiv
stc
push
push
arpl
pop
push
mov
js
nop
fadds
cmpl
mov
pop
fstp
loope
sub
jl
jnp
xchg
mov
mov
fs
repnz
lock
sbb
xor
lock
sub
push
sti
stc
cmc
sbb
idivl
mov
loop
outsl
sbb
inc
into
int3
in
hlt
sbb
ds
sub
cmp
mov
and
mov
adc
shll
cmpsb
mov
mov
ljmp
gs
and
push
xor
outsl
mov
xlat
xchg
shlb
ror
lret
mov
cmp
inc
add
repnz
es
and
out
pushf
std
jmp
jae
pop
sub
pop
out
loopne
outsb
sub
mov
xchg
pop
mov
cmp
js
or
dec
pop
leave
cmpsb
push
pop
nop
inc
cwtl
aam
mov
xchg
xor
mov
cmc
pop
movsb
addr16
and
lahf
icebp
out
or
xchg
pop
test
adc
xor
dec
stos
cltd
sbb
jae
adc
divb
and
fnstsw
out
xchg
add
repz
inc
or
jmp
popa
mov
mov
stos
lret
scas
pop
xchg
and
mov
out
inc
fistpl
pop
sub
push
pop
and
mov
jle
inc
std
xchg
or
xchg
test
xchg
push
jecxz
outsl
mov
and
out
icebp
inc
cltd
test
shll
popa
mov
lock
mov
jp
mov
xchg
jecxz
cs
leave
fbstp
incl
dec
mov
mov
jo
mov
out
push
loop
stos
sub
ret
mov
ja
adc
fsubr
gs
push
aam
push
mov
pop
xchg
dec
adc
loopne
notb
js
mov
mov
insl
sbb
or
lret
mov
jmp
mov
ja
cli
cmp
int3
fs
mov
or
out
sub
inc
xchg
stos
insl
adc
xchg
xor
outsl
sub
fwait
xor
cmp
scas
orb
leave
movsb
cmp
adc
mov
jl
rcrl
pop
mov
mov
mov
adc
fimull
cmp
or
sbb
call
ds
xor
push
mov
mov
fnsave
mov
aad
nopl
pop
jns
add
popa
popf
dec
mov
int3
imul
mov
mov
test
mov
adc
push
shlb
fnstcw
fstpt
in
cmp
clc
add
imul
lea
inc
sub
fdivrl
mov
mov
in
cmp
cmp
mov
fs
imul
pusha
pop
and
and
bound
add
sbb
imul
inc
sti
jg
arpl
dec
test
mov
xchg
jb
rorb
cmpsl
fwait
iret
jae
dec
mov
mov
outsl
adc
int3
cli
idivb
push
pslld
mov
mov
in
and
inc
push
pop
into
subl
or
clc
sbb
push
rcl
addr16
mov
pop
mov
and
jg
out
popf
outsb
push
fidivs
lret
pop
mov
rcrl
push
idivl
dec
xor
sti
out
or
nop
sub
test
mov
jno
xor
fsubrs
cmp
inc
adc
ret
mov
jno
jl
jge
cli
bsr
sub
mov
mov
sub
add
xchg
mov
and
dec
pop
jnp
ja
xchg
adc
insw
jle
jne
jb
mov
xchg
arpl
arpl
adc
push
nop
push
insl
test
adc
data16
insb
fwait
cmc
inc
or
xchg
mov
sub
cmp
xchg
rol
mov
in
mov
cmp
fwait
imul
xor
cld
mov
into
mov
add
xor
shll
cs
xchg
std
lret
mov
subl
pop
sbbl
lds
fincstp
xchg
pusha
push
shlb
xchg
mov
rclb
scas
pop
lds
sbb
add
insl
je
jle
fisttpl
jno
icebp
test
xchg
and
cmp
insw
sbb
push
sbb
repz
adc
mov
clc
mov
and
mov
sub
and
mov
pop
ljmp
push
jb
mov
popa
jno
mov
xchg
inc
xor
negb
leave
push
out
push
cmpl
push
jge
lea
jb
mov
push
pop
dec
sar
movsl
inc
aad
sarb
lds
leave
int
xchg
psubusw
lret
mov
mov
jns
roll
test
xor
lods
lret
rolb
add
xchg
mov
mov
mov
mov
repnz
lcall
mov
add
daa
mov
push
shrl
addr16
daa
and
popf
sbb
sub
shll
aas
or
flds
lods
inc
mov
dec
xchg
cmp
in
jge
stos
das
push
repz
stos
sub
pop
popf
gs
mov
bound
push
popa
xor
jmp
xchg
sbbl
pop
in
jae
jae
sub
ljmp
xchg
and
idiv
and
xchg
and
pusha
fists
cmp
out
gs
xchg
enter
dec
sub
test
stos
mov
in
stos
xor
aad
xor
lock
notl
cwtl
push
dec
sbb
xor
cld
shrb
jno
cmp
orl
pop
jno
xchg
sub
mov
add
adc
push
and
lea
sbb
mov
lods
fistpl
jmp
xor
add
je
pop
mov
pop
mov
pop
mov
cmc
mov
ret
xchg
jae
xor
mov
push
mov
or
movhlps
rcll
test
repz
mov
push
cmp
jnp
or
pop
call
sub
callw
sub
mov
leave
je
mov
add
out
adc
push
mov
adc
xchg
fistl
adc
mov
aad
and
in
adc
js
adc
scas
mov
sub
lds
sub
cmp
adc
mov
jg
sbb
pop
mov
cli
sbb
cmp
dec
and
pop
add
ss
ja
in
xor
fiadds
lret
sub
aad
loop
lcall
adc
icebp
mov
xor
fnstcw
cli
adc
rclb
addr16
pusha
scas
pop
mov
lods
clc
cmp
es
sub
xorb
mov
xor
incl
lret
xchg
loope
cli
bound
in
mov
xchg
mov
xchg
mov
and
lea
in
icebp
bound
add
lea
and
add
xchg
scas
xlat
test
pop
in
flds
add
cmpsl
ret
fcompl
into
mov
arpl
pop
dec
add
test
cmp
sbb
cmp
adc
pop
cmp
das
inc
ds
mov
mov
test
cmp
sub
sbb
pop
pop
stc
je
lret
fmul
sub
xchg
jne
mov
xor
imul
add
subb
cmp
jmp
out
call
mov
xlat
mov
stc
xor
lods
pop
pop
cltd
sub
adc
into
mov
jne
out
push
pop
imul
pop
mov
mov
mov
in
or
pop
xchg
jp
loopne
push
push
add
les
jne
popa
cmpsl
and
insl
addr16
popf
fsubrs
mov
lods
call
sub
push
sbb
test
xor
dec
xor
adc
in
sbb
shll
or
add
push
pop
in
out
sbb
xchg
ret
ret
mov
lea
int
add
rcr
pop
xchg
mov
lahf
sub
lds
and
jecxz
dec
pop
or
adc
mov
xchg
sub
xchg
mov
sbb
mov
xchg
and
dec
sahf
push
mov
jae
in
inc
out
mov
mov
and
push
test
cmp
adc
jnp
outsl
cmpsl
jge
mov
outsl
shlb
test
ret
pushf
fldcw
mov
ds
adc
outsl
stc
or
ljmp
push
sbb
outsl
or
call
push
imul
jb
jmp
fstpl
shlb
add
mov
pop
dec
sbb
test
add
xlat
sub
mov
cmp
out
mov
mov
popf
in
js
cwtl
and
mov
adc
inc
dec
push
dec
stc
dec
and
outsl
stc
xchg
push
dec
jecxz
mov
movsb
divb
in
push
or
out
adc
mov
or
or
pop
fstl
jge
enter
lds
cmpsb
mov
aaa
push
push
jp
jne
dec
fmul
cmp
scas
shr
jge
jnp
mov
int
pop
loop
cmp
mov
xor
adc
ja
jo
sub
enter
test
sub
data16
and
jge
jo
sub
sbbb
sbb
mov
fs
adc
imul
ret
adc
clc
adc
sti
cmpsb
push
mov
je
adc
stos
movl
push
mov
pop
mov
sbb
sbb
shrl
les
stos
ljmp
and
mov
dec
push
imul
jno
push
shl
lods
les
mov
adc
xchg
push
std
sbb
loop
fldl
push
jl
lcall
sbb
adc
aad
leave
jb
mov
xor
push
sbb
mov
adc
stos
dec
rorb
repz
or
adc
cmpsl
in
and
ljmp
test
xchg
pop
out
aam
pop
push
rdmsr
flds
sub
test
jnp
adc
stos
stos
adc
test
mov
adc
popf
fnstsw
loope
ret
inc
call
adc
mov
movsl
dec
pop
pushf
pushf
push
rol
loope
push
in
add
pop
call
and
loop
inc
xor
pop
add
and
jbe
lock
jp
dec
fsubrl
xchg
cmp
rclb
mov
scas
sbb
mov
sub
les
push
test
out
sti
xchg
int
test
leave
sarl
das
adc
and
gs
inc
dec
lock
jmp
bound
filds
iret
xor
mov
push
out
ss
test
mov
cmp
fiaddl
mov
stos
je
rorb
adc
jmp
dec
mov
out
out
imul
mov
insb
ret
adc
insl
faddl
xor
jge
lods
add
jg
xor
xchg
pushf
nop
ds
mov
jmp
lcall
push
aaa
das
rcrb
dec
aaa
shrb
adc
adc
fimuls
sbb
adc
dec
inc
lahf
mov
nop
xchg
stc
int3
cmpsl
inc
pop
cld
jb
sbb
pop
pop
sbb
xchg
cmp
lds
gs
cmp
inc
loopne
mov
xor
out
sti
pop
xchg
mov
out
mov
xchg
gs
sbbl
or
push
in
lods
jmp
imul
fnstsw
sub
bound
mov
xchg
push
lret
inc
or
loopne
subl
gs
push
fbld
push
mov
sbb
in
ljmp
xchg
vpsubsw
inc
inc
jae
xor
jns
inc
sbb
shl
aam
xor
jae
ret
lcall
jnp
mov
mov
es
iret
jo
xor
dec
sar
or
jne
outsl
clc
icebp
cmpsl
or
jp
movsb
add
jge
sub
adc
frstor
pop
jp
daa
out
aas
jae
std
xor
call
das
ret
inc
adc
jecxz
sub
mov
movsl
jmp
or
clc
in
sbb
cmc
and
cmc
mov
out
test
sbb
fidivs
lret
pop
jno
data16
ss
pushf
in
mov
jne
jecxz
push
xor
test
cmp
movl
sbb
imul
push
push
in
lods
pop
sub
inc
mov
pop
ret
push
xor
sub
mov
inc
scas
mov
outsb
movsb
lahf
int3
xchg
pop
or
push
push
push
jno
aas
insb
std
adc
fcompl
dec
insb
stc
es
push
sti
frstpm(287
add
pop
fnstcw
add
daa
jae
sub
notb
inc
push
out
mov
dec
add
push
jo
cltd
pop
jg
xlat
stc
stc
push
cmp
pop
add
and
es
add
cmp
push
cmp
test
fiaddl
push
push
enter
cmp
movb
jl
xchg
addl
sbb
cmpsl
mov
loopne
and
sahf
pop
test
push
cmp
sub
xchg
add
mov
xor
int
in
jnp
adc
add
shl
stos
lret
or
cmp
adc
xor
mov
ret
sbb
mov
fistl
in
sti
lods
mov
enter
or
sti
jno
adc
and
shlb
je
jecxz
dec
in
jge
les
and
xchg
adc
push
dec
inc
fdivl
imul
pop
xlat
test
and
lock
sbb
repz
int3
dec
outsl
jge
cmp
imul
sub
and
mov
jl
cmp
xchg
sbbl
cmpsb
out
call
ja
add
imul
mov
loope
lret
xor
mov
jecxz
sub
in
inc
jns
inc
mov
xlat
pop
scas
mov
dec
or
daa
cmp
sub
les
call
jns
mov
jg
sub
and
cmp
pushw
sbb
xchg
scas
xchg
out
inc
sub
adc
lcall
mov
insl
int3
popa
push
jae
inc
dec
jg
mov
in
sbb
int
sbb
lea
out
adc
pop
pop
addr16
int3
sbb
out
push
fisubl
ja
aas
push
jae
mov
xor
repz
adc
xor
cmpsb
sbb
and
adc
loopne
jne
mov
jae
jbe
loope
stos
dec
pop
jb
addb
out
mov
out
shlb
inc
push
and
fwait
cmp
sbbb
inc
adc
pop
and
stos
or
xlat
inc
pushl
mov
xchg
icebp
les
jp
out
cmp
jmp
mov
push
loop
pop
ret
pop
push
xlat
push
xor
jecxz
addr16
and
out
loop
mov
shll
ret
push
mov
int3
or
sahf
xchg
cld
cmp
decl
or
out
dec
mov
rsm
inc
dec
rcll
imul
enter
movsl
jg
lcall
push
insl
jbe
xor
jmp
outsl
lahf
movsb
adc
sbbb
push
adc
inc
jmp
and
pop
dec
or
daa
out
pop
jecxz
mov
nop
or
sbb
push
sti
pop
pop
sub
jecxz
mov
or
mov
rcr
mov
and
inc
pop
sub
cwtl
add
adc
arpl
lahf
pop
stos
rolb
in
pop
loope
stc
fimull
jae
or
js
fdiv
out
jp
pushw
lds
jb
jp
ljmp
push
push
std
arpl
dec
and
pop
sbb
pop
sbb
nop
inc
sbb
rcrl
inc
test
in
das
aaa
addr16
pop
inc
sub
cmc
outsl
add
movl
adc
jmp
cmp
dec
cltd
pusha
mov
fsubl
in
test
call
lock
int3
std
outsl
aaa
in
in
cmp
in
mov
xor
mov
cmp
sbb
inc
jo
inc
cltd
shr
movsb
xor
push
mov
adc
push
stos
fdivp
xor
add
ret
leave
in
add
mov
mov
adc
loope
iret
scas
and
testb
pushw
adc
cmpsl
outsl
lret
repnz
scas
test
cmp
inc
dec
push
dec
jecxz
es
mov
cmpsl
js
jnp
jmp
cltd
int3
push
fsubrl
add
ret
add
push
dec
aaa
lods
or
adc
test
jp
jbe
mov
jae
jmp
pop
loop
add
ljmp
fstl
xchg
push
cmpsl
sbb
push
sub
out
arpl
sbb
xchg
or
xchg
sbb
roll
jecxz
ficoms
andb
add
mov
loope
push
insb
cmp
mov
sub
pop
xor
lods
aas
mov
mov
gs
sahf
adc
cmp
xchg
addr16
jb
mov
stos
and
dec
jo
pop
loopnew
add
vaddsubps
push
mov
scas
call
inc
push
je
xchg
mov
cld
adc
insb
push
push
gs
sti
imul
pop
or
popa
inc
xchg
inc
push
cmp
push
ds
mov
test
mov
push
lds
call
lds
test
push
dec
movl
sub
mov
fists
addb
mov
mov
xchg
mov
ss
rcrl
shll
enter
imul
popa
sbb
pop
bound
sub
pop
push
sub
push
push
fldl
in
hlt
push
rclb
fldenv
jbe
jno
pop
in
xchg
insl
out
ds
push
push
xor
and
imul
xchg
mov
je
mov
or
sub
sub
jne
sub
push
dec
pop
and
or
cmp
and
xor
daa
in
mov
pop
or
popa
mov
xchg
cli
dec
int
lret
enter
adc
mov
roll
ja
aas
cmp
mov
ljmp
ret
gs
pop
push
fscale
pop
mov
scas
cld
out
stos
jecxz
adc
loopne
jecxz
sub
pop
mov
insb
xor
xlat
scas
jne
call
ror
outsb
mov
adc
mov
inc
sub
pop
push
out
mov
jns
dec
jb
pop
mov
sbb
aam
pop
cmp
testl
xchg
jle
dec
into
hlt
inc
outsb
std
mov
fldcw
pop
pop
stc
push
std
fistl
faddl
push
mov
inc
out
jge
push
push
sub
xchg
cmp
push
sub
mov
cmp
sbb
push
stc
out
fildll
mov
xchg
loopne
pop
test
pop
daa
dec
fisubrl
sbb
out
cmpsb
cmp
push
test
insb
testb
pop
inc
pop
inc
mov
xor
push
inc
lods
xor
cli
dec
iret
or
or
pushf
jp
pop
mov
adc
inc
test
repnz
xchg
std
sub
adc
xchg
inc
push
cwtl
imul
decl
sbb
shrb
int
lods
push
and
push
shlb
sbb
sbb
leave
inc
pop
dec
js
es
mov
insl
sub
xor
rclb
push
push
dec
ss
pusha
ds
in
test
dec
jmp
or
add
adc
fwait
mov
shlb
and
scas
outsl
mov
test
xchg
popl
ss
cs
cmpsl
ljmp
enter
and
jno
and
ja
outsl
sbb
mov
xchg
cmp
xor
popa
add
sub
es
inc
jo
rorb
add
add
mov
insb
std
out
mov
shlb
or
pop
test
mov
mov
imul
push
cltd
push
jecxz
xchg
or
cld
jbe
mov
dec
fcomps
lahf
jbe
mov
out
out
adc
jnp
inc
xchg
cmp
pushf
sarb
xor
cmc
sahf
lods
pop
mov
pcmpgtb
cld
repz
dec
aam
stos
lods
arpl
mov
frstor
idiv
mov
call
xchg
mov
movsb
xchg
insb
ret
jg
cmp
pusha
pop
pop
mov
jle
es
push
stc
xor
mov
in
xchg
mov
sahf
dec
jae
cwtl
and
shr
cmp
shrl
jb
arpl
pop
and
add
je
pop
gs
into
out
loope
ljmp
pop
test
rcrb
xchg
clc
xor
call
ret
inc
mov
inc
shl
das
pop
xchg
xchg
push
hlt
xor
stos
dec
fistpl
inc
cmpsb
in
mov
cmc
sbb
or
adc
mov
aaa
lock
or
xor
into
jge,pt
jbe
push
clc
mov
scas
xor
pop
scas
stos
sub
leave
scas
cld
js
int3
jecxz
mov
jecxz
and
sub
scas
jmp
pop
fsubrl
mov
ds
add
adc
mov
dec
mov
add
xchg
sub
loopne
fnstcw
xor
push
cmpsl
add
mov
gs
mov
jbe
lret
aad
cmp
pop
insl
sbb
and
fwait
int
sbb
lret
xlat
ja
or
mov
fbld
sub
pop
pop
call
mov
out
jae
data16
popf
in
subb
sbb
push
xchg
jmp
or
outsl
imul
jle
in
mov
pop
pop
inc
mov
repnz
aam
pop
pop
mov
fs
xor
cs
test
add
xlat
adc
pop
sub
cmp
push
mov
iret
mov
rclb
fiaddl
clc
ljmp
jp
sahf
cmc
int
adc
sti
aaa
mov
ja
dec
sbb
dec
fistps
outsl
jb
cmp
xor
and
into
fistps
and
hlt
ja
or
jne
jo
mov
adc
jo
packuswb
sti
scas
fldz
mov
jo
mov
pushf
mov
mov
sbb
adc
sub
out
lods
clc
push
or
jns
pop
outsl
xor
sbb
cld
mov
ss
mov
dec
mov
jge
sub
inc
jnp
jmp
je
stos
xor
sub
imul
mov
add
xchg
push
ljmp
fisubs
pop
mov
aaa
mov
jecxz
in
test
outsb
dec
jb
push
xchg
imul
sub
xchg
stc
inc
sub
inc
shr
cld
jnp
and
or
cmpsb
push
insb
scas
pop
daa
fxch
popl
dec
loopne
push
xchg
fcompl
cld
dec
mov
jb
in
or
cmp
mov
loop
dec
and
jle
cmp
cwtl
out
cmp
sbb
les
sub
adc
adc
aad
test
jne
inc
xor
rolb
sbb
cld
scas
movsb
cmp
push
lcall
pop
dec
xor
lret
sub
pusha
out
inc
mov
in
sub
inc
inc
es
jae
out
in
pop
sbb
mov
mov
push
lods
lahf
lock
je
popa
mov
jns
sbb
push
popa
mov
out
fsubr
mov
push
push
sbb
mov
add
or
push
cmp
mov
push
xor
xchg
jle
dec
repnz
jl
jge
pop
out
inc
aaa
loopne
fstp
cmp
push
pushl
js
xchg
movsb
ret
add
mov
mov
sbb
add
jl
mov
inc
sbb
fs
jmp
dec
popa
mov
sub
movsb
fnstenv
icebp
mov
push
pop
popa
mov
push
shll
imul
mov
adcb
xor
jbe
push
push
adc
cld
add
jmp
push
loope
inc
pop
inc
push
add
adc
mov
or
mov
or
sub
clts
xor
std
cmpsl
in
addr16
push
out
imul
inc
pushf
pop
lds
mov
add
sub
adc
push
push
add
xchg
popa
lods
sub
insl
sti
repz
push
int3
pop
xor
mov
sbb
xor
insb
rcll
xchg
pop
mov
sub
sbb
sbb
aam
fs
push
pushf
in
jmp
xchg
cld
ljmp
std
ret
xchg
jbe
add
insl
and
and
mov
sbb
mov
xorb
addr16
cmc
mov
idivl
out
inc
test
ret
jnp
pushf
mov
adcl
lods
push
adc
mov
je
cmc
sub
jmp
add
ja
add
int
leave
test
adc
xlat
xchg
mov
ret
sub
out
bound
sbb
sbb
push
mov
rclb
add
xchg
std
cli
sub
movsb
cmp
jnp
pop
push
sub
add
lods
sub
iret
scas
je
adc
mov
mov
push
xchg
cmp
nop
jle
mov
inc
sbb
shll
jp
fwait
repnz
popa
jmp
inc
adc
jl
push
fwait
mov
stos
dec
cmpsl
loope
divl
stos
xor
mov
fs
jmp
sarb
sahf
out
add
sbb
testb
outsb
negb
scas
xchg
push
jmp
shll
mov
mov
or
mov
repnz
jle
adc
or
insb
rorb
dec
outsb
jg
dec
fbld
divb
enter
je
cs
and
cmc
rcl
sub
mov
pusha
fcomps
jno
add
nop
jp
icebp
xchg
ljmp
jmp
call
mov
push
lods
mov
icebp
pop
xchg
jp
lret
das
dec
aas
push
push
in
fisttpll
jnp
xor
outsl
fildll
cmp
mov
or
arpl
mov
xor
push
push
lcall
xchg
icebp
adc
in
add
cld
out
mov
cmc
mov
inc
dec
stos
int
mov
fs
sub
adc
fisubrs
xchg
and
push
pop
lret
add
cmpsb
xor
stc
or
or
inc
mov
and
sub
ds
adc
mov
nop
xlat
mov
sbb
mov
add
cmp
pushf
inc
sub
lcall
lret
inc
dec
pop
pop
push
push
stos
mov
and
pop
js
fsubl
fldl
and
data16
xchg
mov
fld
xchg
insl
push
add
daa
pop
jo
dec
lret
mov
lock
cmp
mov
pop
push
xchg
das
cmp
bound
adc
sbb
jno
xchg
nop
or
dec
sub
xchg
xchg
repz
outsl
jle
adc
stos
and
icebp
pop
xchg
jle
lret
pop
xor
aaa
outsl
xchg
repz
iret
adc
add
xchg
mov
popf
and
dec
push
xor
sbb
xor
loope
int3
mov
fsubrl
paddsw
mov
mov
or
xchg
out
stos
push
and
mov
xchg
negl
mov
popa
cmp
fwait
arpl
pop
mov
adc
add
jle
and
rcll
inc
push
add
jg
lret
mov
ljmp
cmp
xor
cmc
into
jnp
enter
xor
sub
pusha
test
mov
mov
mov
cmp
shll
sar
popa
mov
dec
mov
fildl
xlat
dec
dec
jg
loopne
cmp
js
out
imul
popf
inc
es
cmc
sbb
sbb
dec
aaa
ds
leave
push
push
pop
data16
inc
inc
push
jp
clc
in
sbbl
and
fwait
pop
mov
xor
push
add
mov
push
fwait
sbb
mov
test
fcompl
fs
xchg
outsb
mov
lret
cmpsb
mov
subl
mov
mov
or
inc
and
dec
imul
cli
andb
enter
fldt
dec
xchg
or
and
jno
adc
adc
int3
scas
inc
testl
dec
push
push
nop
mov
inc
out
mov
cmp
xchg
mov
les
adc
movsb
push
mov
pop
jp
xchg
pop
dec
pop
xchg
jns
push
push
or
jp
repnz
mov
lds
rol
push
jno
mov
mov
xchg
inc
mov
imul
jns
sbb
ja
sarl
jmp
ror
mov
pop
sbb
pop
dec
mov
fidivs
cmp
and
dec
jns
hlt
adc
lret
xchg
bnd
sar
jne
cwtl
xchg
dec
sbb
or
dec
xchg
hlt
sbb
lock
pusha
test
leave
pushf
icebp
or
loope
mov
mov
sbb
inc
mul
xchg
xchg
lahf
add
mov
xor
adc
lock
jle
stos
and
mov
cli
sub
pop
test
mov
out
cs
inc
movsl
inc
popf
mov
out
orb
popf
rcrb
fisubl
sarl
pop
rclb
stc
inc
mov
sub
inc
fs
xchg
jmp
cwtl
pushf
in
xor
add
mov
inc
sub
mov
shl
push
leave
xchg
xor
arpl
cmp
out
movsl
mov
bound
xlat
pop
push
fiaddl
pop
xlat
in
pop
xchg
push
cwtl
incb
faddl
jle
mov
mov
popa
mov
test
fisubrs
jne
jnp
inc
inc
ret
movsb
ljmp
addl
xchg
pop
mov
fsubrl
fsubp
fbstp
out
sahf
cli
sahf
test
mov
das
dec
jns
es
pop
in
test
shrl
sub
jecxz
cmc
pop
sbb
sbb
mov
clc
jb
sbb
xor
adc
cwtl
or
sbb
fisubl
mov
add
jb
out
cmp
popa
cmpsl
repnz
pop
push
xor
test
cld
push
inc
sub
les
or
cltd
inc
das
adc
add
or
push
jb
insb
cltd
cltd
add
repnz
call
pop
add
lods
ret
out
add
cmp
xor
sbb
fwait
sub
add
enter
in
in
fs
push
outsb
into
int
jno
in
xchg
sti
stos
xor
clc
pushf
fidivl
pop
int3
ds
mov
nop
and
aaa
addl
notb
loopne
add
pop
test
add
out
dec
and
mov
fcmovu
xor
frndint
xor
push
cmp
dec
int3
lahf
xchg
in
in
int
out
test
push
pop
jb
loop
dec
mov
repnz
cld
push
fcompl
jo
or
lahf
and
jp
xchg
xchg
cmp
sbb
movsl
nop
mov
xor
cmp
lock
ds
lods
jbe
jge
cmp
test
mov
push
pop
xchg
out
fstpt
inc
fwait
sub
sub
mov
iret
and
mov
push
jmp
add
xor
cmp
jbe
out
xchg
jle
push
aam
dec
sub
and
inc
orl
cmp
cmpsl
xor
xchg
adc
push
jg
pop
fistpll
mov
scas
sbb
std
add
mov
test
mov
or
mov
mov
jno
rcrb
into
dec
test
rcrb
scas
push
lods
or
cmp
dec
dec
xchg
fcomi
mov
int
cltd
mov
mov
push
push
and
inc
data16
sbb
mov
cli
int
jecxz
xlat
or
jle
mov
rorl
into
pop
lock
enter
cmp
jmp
fimuls
dec
fldcw
out
sahf
cmc
sub
jns
pusha
or
test
test
dec
test
addr16
cmpsb
pop
xlat
das
pop
insl
xchg
pop
xor
std
and
sub
jno
je
jbe
and
stos
out
sti
jns
adc
movsl
loope
fs
loopne
arpl
or
rcrl
mov
inc
imull
test
inc
push
daa
movsl
ljmp
mov
adc
dec
stos
arpl
repnz
jno
mov
push
lock
popa
loope
xchg
mov
insb
add
push
dec
scas
pop
cwtl
adc
pop
ss
jb
dec
loopne
mov
repz
test
sub
aam
daa
icebp
cs
xor
sub
mov
mov
cli
loope
pop
popf
mov
clc
mov
shrb
xor
lcall
push
dec
mov
rcrb
repnz
fisubrl
ret
int
and
daa
imul
sti
loop
pop
or
push
insb
fdiv
lret
xor
jge
pop
addr16
loopne
add
xchg
ss
lock
js
mov
jmp
into
jl
js
cmpsl
cltd
je
xor
sbb
ja
xchg
and
add
movsl
ret
mov
ret
lock
xor
cmpsl
cmp
mov
out
out
jecxz
mov
mov
in
loop
repnz
xor
lods
sbb
xlat
mov
mov
aad
sbb
int
jnp
pop
push
arpl
cmp
inc
dec
fs
ficomps
xor
mov
rcrl
mov
push
adcb
push
jle
sub
cli
adc
push
and
arpl
lods
pop
xchg
xlat
scas
jmp
les
adc
pop
outsl
jno
test
into
adc
push
sbb
pop
stos
mov
cmc
lods
sbb
xchg
dec
aas
fdivs
push
push
cltd
cwtl
adc
xchg
aam
pop
jae
outsl
jecxz
mov
jns
aam
sub
or
or
or
lret
mov
scas
stc
mov
clc
mov
push
enter
in
rcrb
inc
xlat
mov
enter
pop
jp
popa
dec
in
mov
mov
jns
cwtl
cmpsl
aam
jbe
test
addr16
push
daa
fs
fdivs
jp
cmpb
cmpsl
jbe
rclb
and
sbb
dec
cmp
enter
movl
addl
inc
aaa
pop
push
je
mov
add
test
and
fwait
push
cmp
jecxz
push
fnsave
cmp
xlat
xchg
rcll
mov
fidivrs
or
lock
nop
add
insb
ror
bound
lea
out
stos
add
mov
pusha
add
xchg
sbb
aaa
push
int
mov
dec
inc
pushf
sbb
mov
inc
sub
sub
sbb
call
push
test
cmpsb
xor
push
fdivrs
fwait
stc
imul
testl
addr16
xlat
sub
and
sbb
jne
in
adc
jno
mov
mov
sbb
jg
sbb
jb
in
xor
sub
cli
cli
inc
push
push
xchg
or
lahf
lahf
leave
ret
and
lea
les
pop
movsl
fcompl
icebp
icebp
cmp
add
fs
daa
je
fidivl
scas
and
push
aad
pop
push
add
sahf
pop
sub
sbbl
mov
stc
test
sbb
iret
xchg
jl
inc
mov
sbb
movsb
jmp
es
std
jle
dec
insl
add
or
addr16
out
test
add
mov
test
push
xchg
call
test
shll
imulb
inc
insb
sahf
dec
mov
and
lods
inc
test
cwtl
cmp
test
pop
inc
insb
mov
lahf
daa
mov
mov
jne
roll
cmpsb
insb
xor
push
sbb
fldenv
clc
push
outsl
push
mov
xor
movsb
push
dec
mov
pop
mov
scas
movsb
sub
xchg
popf
mov
inc
jle
mov
aaa
incl
add
dec
adc
push
stos
fwait
and
cli
jae
in
lahf
push
arpl
sub
pusha
pop
xchg
sub
xor
xlat
mov
add
push
xor
aaa
cmp
hlt
outsb
xor
or
pop
scas
and
push
xor
idivb
mov
ret
xchg
arpl
rcr
push
cld
add
rcll
test
cmc
lds
pop
xchg
adc
mov
and
and
lcall
decl
es
ret
adcl
xchg
add
outsb
fidivrl
test
fsubl
inc
adc
xchg
sbb
mov
or
ret
xor
xchg
jb
scas
das
dec
dec
inc
xchg
push
fbstp
push
mov
mov
and
mov
push
das
fs
push
cmp
imul
pop
aam
stc
or
xchg
dec
test
scas
mov
inc
sti
add
rcll
xor
mov
cli
insl
and
xchg
pushf
mov
mov
push
dec
mul
xchg
sbb
arpl
mov
dec
mov
fcompl
mov
loop
jle
nop
mov
insl
sbb
negb
sub
xchg
sub
dec
idivl
mov
fcmove
fcoms
or
xor
repnz
mov
movsb
sbbb
repnz
jbe
stos
xor
xchg
inc
scas
add
imul
ja
fadds
repnz
dec
sahf
mov
test
ja
js
mov
popf
mov
out
gs
imul
pop
insb
pop
push
adcb
pop
outsb
not
adc
mov
lret
scas
mov
fisttpl
cmpsb
ret
sbb
ljmp
mov
xchg
dec
or
call
jo
ret
es
in
fiaddl
inc
icebp
lcall
loopne
and
jbe
iret
xor
dec
mov
mov
dec
cld
and
mov
mov
jnp
rolb
dec
scas
mov
clc
aad
in
jae
insb
cmp
sarb
in
flds
xchg
push
sub
inc
xchg
stos
scas
inc
popf
rcll
repz
cmp
pop
pop
incb
cmp
pop
clc
xchg
cs
mov
test
cmp
in
dec
arpl
push
cli
es
and
and
aaa
int
loope
fs
enter
adc
test
push
jle
adc
inc
xchg
mov
js
gs
fimull
add
jno
es
and
movsl
out
push
in
data16
and
mov
mov
mov
les
movsl
lods
dec
mov
inc
inc
adc
adc
fs
fstpt
imul
jle
jmp
mov
sbb
mov
test
in
iret
jns
int3
clc
ss
test
push
fs
inc
pop
xorb
pop
pop
mov
fnstcw
pop
xor
xchg
rcl
fs
fnstcw
icebp
jns
je
jecxz
jne
pop
mov
cmp
or
xchg
mov
push
and
fidivrs
stos
fprem
xor
and
notb
enter
shll
inc
add
ret
mov
test
push
pop
jnp
pop
cmc
mov
xchg
jno
jp
or
popf
addr16
pop
sbb
popa
enter
imul
ds
mov
popf
addr16
fsubl
lea
int3
mov
mov
fimull
push
in
sub
pop
push
ret
dec
scas
insl
popa
int3
test
pushf
mov
setae
popa
mov
int3
sub
dec
data16
pop
sbbl
test
movsb
xchg
rcr
jp
incl
ret
int
xor
out
or
lcall
pop
fbstp
xor
adcb
sub
push
ficoms
sbb
xor
outsb
lcall
xor
ds
stos
push
push
ret
or
jl
ss
rcl
sub
dec
int
or
jle
adc
in
loopne
or
xchg
fmull
and
cmpsb
jb
outsb
mov
shrl
out
or
or
cmp
aas
popa
xor
mov
pop
fs
data16
jmp
adc
imul
jle
push
inc
jne
aaa
cmp
fsubrs
add
out
inc
stc
push
jge
int
and
stc
cwtl
sub
ret
sub
push
inc
mov
sub
call
rorl
jns
and
pop
adc
push
or
movsb
jge
and
in
cmp
scas
inc
add
dec
push
lock
imul
pop
sub
hlt
stc
add
fdivr
aas
insb
outsb
mov
dec
loope
pop
aas
dec
ficoms
fsub
dec
sub
sbb
add
mov
rep
jp
cmp
xor
sbb
mov
inc
pop
adc
je
push
mov
cmp
js
in
lret
popf
xor
or
insl
xchg
inc
ret
mov
js
ss
jge
fucom
xor
test
pop
imulb
xchg
outsl
call
jle
jg,pt
ret
pop
push
stos
mov
pop
out
call
add
enter
and
xorb
mov
int3
les
imul
cmpb
cwtl
mov
cmp
jecxz
popl
or
lea
fstps
lret
dec
mov
pop
push
popa
push
jo
xor
rolb
cld
pop
int3
jge
cwtl
inc
cmp
loopne
jg
cmp
cli
ljmp
fld
cwtl
xor
sub
aam
fwait
xchg
in
and
mov
sahf
gs
xor
jns
jg
out
or
ds
dec
mov
dec
bound
lcall
xor
sub
dec
int
inc
mov
add
gs
lret
lock
clc
adc
jmp
cltd
inc
imul
test
dec
push
cli
inc
in
push
negl
dec
dec
ss
inc
xchg
fildl
lods
stos
inc
fdiv
sbb
shrb
testb
lods
xorb
out
pusha
fldcw
dec
inc
sub
aas
mov
out
xchg
push
and
xor
push
mov
jbe
mov
lret
cmp
ret
xchg
jns
or
in
jmp
lods
jge
pusha
xor
in
loope
lcall
sub
xchg
add
test
jne
divb
popf
sub
test
pop
out
lds
inc
jp
add
nop
mov
push
stc
xchg
push
and
sti
jnp
jl
test
shrb
jae
mov
xchg
mov
jle
pop
mulb
cmp
inc
sbb
jne
int3
sub
add
cmp
adc
sub
pop
les
loop
es
mov
pop
in
or
movsb
inc
sub
push
xor
cmp
lock
push
jecxz
cmp
imul
mov
xor
lds
bnd
jmp
test
repz
or
mov
jnp
in
sub
push
nop
add
fidivl
jge
out
fcomi
push
mov
or
notl
cmp
aad
aad
pop
mov
int
lods
or
xchg
sar
in
mov
loope
aad
dec
inc
mov
xchg
xchg
mov
ss
scas
scas
iret
imul
adc
jnp
pop
lcall
jecxz
call
adcl
loop
jno
push
mov
std
incl
push
push
push
or
and
mov
add
sarb
je
or
dec
push
pop
in
imul
movsb
lret
inc
loope
cwtl
int
adc
imull
and
mov
mov
sub
aam
scas
cmp
adcb
insl
sbb
sub
mov
jo
inc
push
repz
aaa
lods
xchg
xlat
add
cli
rcl
mov
jno
mov
jg
jbe
sarl
ljmp
test
xorl
push
shl
or
cwtl
dec
jp
out
in
jg
inc
inc
xor
jnp
out
pop
test
xorl
cmp
xchg
es
jecxz
cs
sarl
dec
and
std
cmp
add
push
push
shl
sbb
mov
mov
and
repz
adc
rcrl
rcrb
mov
xor
scas
addl
push
lret
push
or
popf
add
and
add
inc
outsl
push
fisttpl
int
sbb
out
daa
fistpl
pop
daa
out
ret
xchg
dec
shll
sbb
movsb
pop
mov
scas
sub
adc
mov
add
fdivl
cmp
xlat
inc
mov
xchg
scas
ds
cld
mov
nop
ss
testl
ss
mov
movb
xor
jnp
test
jecxz
pop
fiaddl
adc
mov
inc
sub
pop
imulb
int
pop
xorl
mov
in
sbb
pop
mov
sub
and
js
ljmp
inc
push
out
jnp,pt
lea
jmp
lods
inc
sbb
xlat
xchg
fisubrs
lea
sbb
seto
leave
cmc
stos
push
jno
imul
add
mov
add
adc
push
cmpsl
dec
repnz
xor
bound
sahf
ljmp
popf
movsb
cmc
xchg
movl
cmp
fnstcw
je
xchg
das
popa
cmpsl
lcall
mov
jae
fldl
pop
aam
cmc
dec
daa
sub
xchg
mov
test
sbb
idivb
jno
push
xor
cld
jns
loope
fldcw
stc
sub
inc
jg
mov
hlt
add
call
mov
mov
in
adc
jle
or
aad
jne
ret
cmp
imul
xor
add
js
push
and
inc
js
idivb
adc
pop
sbb
shl
rcrb
pop
popf
sbb
sti
or
inc
pop
dec
shrl
jmp
sub
add
mov
mov
test
out
pop
test
aaa
daa
dec
movsb
mov
add
test
fisttps
mov
in
cli
mov
lcall
cmp
not
and
les
mov
shll
lret
ljmp
out
cwtl
adc
outsl
pop
push
inc
aaa
les
fsubrs
fs
cmp
pop
cmp
cmp
outsb
mov
movl
xchg
push
int3
jmp
addr16
lret
and
push
jmp
aam
sbb
cld
adcb
xchg
ja
int
add
mov
in
dec
test
sub
sahf
mov
add
or
repz
pop
pop
push
in
and
rorl
pop
inc
adc
lret
and
rorl
jo
pop
lods
sbb
xor
cmp
inc
push
inc
adc
call
sub
fs
test
imul
rclb
mov
xlat
loop
xchg
dec
sub
adc
or
push
mov
test
pop
andl
mov
xchg
aam
fistpll
lret
dec
sub
push
pusha
mov
sbb
jb
xlat
into
inc
mov
int
sub
imul
jle
pop
lahf
jp
adc
shlb
jns
lods
inc
jl
stos
xchg
outsl
inc
cmpsl
pop
jne
pop
push
xor
pop
add
aam
lahf
int3
pop
dec
jno
cwtl
push
cmpl
and
push
fwait
ja
insb
pop
mov
daa
sbb
hlt
loop
sub
and
jecxz
sbb
push
or
add
rclb
mov
mov
inc
xchg
jne
decl
pushl
xor
mov
loopne
mov
cmp
mov
mov
pop
fbld
push
test
outsb
mov
mov
xor
pop
ja
add
stc
bnd
or
lret
out
rcrb
adc
inc
aaa
cmp
sub
pop
rcr
mov
add
mov
test
xor
aam
aam
push
mov
sbb
jmp
out
fadds
icebp
dec
jg
or
mov
xchg
aas
and
adc
or
hlt
lods
or
cmp
push
mov
icebp
iret
mov
pop
rep
mov
lds
adc
and
mov
xor
or
xchg
and
negb
mov
jbe
mov
add
push
jg
inc
or
aas
cwtl
pop
or
cmp
fistpll
lock
test
insb
out
add
rcl
mov
inc
mov
push
loopne
fwait
test
jge
fcmovnu
pop
icebp
mov
sub
push
insl
fdivr
push
sub
shlb
cmp
mov
pushf
ds
and
addl
cmp
lahf
inc
outsb
sbb
sbb
jbe
aas
mov
test
xlat
cltd
stos
push
and
roll
mov
loop
or
loopne
lods
je
clc
mov
lods
lods
sbbb
outsb
pop
adc
inc
js
xor
adc
in
pop
imul
adc
jmp
cmc
jge
jnp
mov
or
movaps
leave
push
sbb
popa
inc
pop
mov
sub
jbe
inc
pop
std
nop
rcll
dec
push
and
push
push
pop
pop
psadbw
cmp
daa
push
xorb
fisttpll
sub
jnp
test
push
add
stc
insb
clc
adc
adc
ss
sbbl
in
cmc
into
push
lahf
rcrb
rorl
xor
test
fimuls
mov
repnz
inc
lea
rcl
jnp
je
pushf
ljmp
mov
pmaxsw
int
inc
les
ljmp
dec
arpl
dec
mov
or
push
mov
push
in
mov
push
inc
ficompl
clc
ficoms
sbb
dec
push
loopne
sbb
pop
jb
xor
mov
enter
aaa
mov
push
lods
sti
cmp
mov
adc
repnz
sub
mov
mov
in
std
and
dec
nop
dec
mov
xor
data16
sbb
addr16
push
xor
psllq
in
pop
jns
mov
not
lods
xor
test
dec
adc
cmp
mov
or
sub
mov
mov
jmp
faddl
dec
les
loope
cmp
iret
adc
xchg
inc
jl
adc
push
stos
andl
aam
arpl
icebp
jge
in
iret
ja
mov
jae
sub
in
mull
mov
in
pushf
or
add
mov
cmp
pusha
into
hlt
insb
repz
outsb
test
inc
add
or
inc
incb
xor
clc
pusha
xor
push
gs
push
aam
sub
cmp
sub
stos
aam
inc
or
and
test
stc
mov
fwait
add
jno
xorb
xchg
test
mov
call
xor
fucom
lcall
mov
jbe
or
push
pop
scas
lods
sbb
leave
lds
sbb
mov
xor
push
push
cmp
cmp
xchg
int
negl
mov
sub
mov
adc
pop
test
shrb
mov
add
mov
dec
aam
rorl
sbb
jle
push
aad
leave
sub
fbstp
popa
jo
or
loope
inc
sbb
adc
and
push
mov
fwait
mov
jnp,pn
add
xchg
ds
xor
jmp
or
adc
push
inc
add
insb
and
popf
or
xchg
lods
push
fistpll
or
pop
rcr
adc
add
jae
and
sbb
lock
push
xor
push
fcoms
add
int3
lods
stos
inc
loopne
cmp
sbb
pusha
push
mov
mov
mov
dec
fwait
add
and
lcall
stos
inc
cs
daa
mov
js
in
stc
leave
or
aam
int
shl
jne
cmp
push
movsl
cmc
jmp
jge
ficompl
fdivrl
jge
jno
xor
fmull
push
jge
xor
dec
in
inc
icebp
or
push
sbb
sbb
xchg
shlb
cmp
sub
xor
into
mov
and
mov
scas
mov
mov
and
xchg
scas
mov
idivl
mov
mov
sbb
mov
into
lret
in
mov
ljmp
stos
js
push
pop
clc
les
out
xchg
pushf
movsb
stc
jg
mov
lods
fstps
inc
repnz
lea
inc
mov
push
in
dec
pushf
add
add
inc
xor
out
mov
cmpsb
jo
cmp
out
mov
add
arpl
push
pushl
mov
stos
jbe
test
xbegin
xchg
nop
inc
or
adc
mov
push
ss
or
inc
test
jg
jae
lea
dec
das
lret
imul
test
mov
xor
mov
sub
pop
dec
cltd
out
lret
push
loop
jnp
lcall
adc
cmp
rcll
pop
inc
mov
aas
pop
inc
or
jge
lcall
mov
ja
and
fdivrl
pop
sbb
jno
jno
cmp
shrb
push
or
adc
mov
jno
sbb
adc
mov
and
push
add
out
insl
cmp
cld
xchg
pop
roll
hlt
jns
adc
pop
les
pop
js
imul
pop
test
int3
adc
daa
cmc
add
hlt
add
add
pop
aam
add
scas
js
cmc
rcll
aam
loope
aaa
sbb
es
jmp
subb
je
in
pop
rcr
ret
test
cli
inc
pop
out
mov
push
divb
or
pop
mov
xchg
add
mov
andl
mov
push
pop
xor
sbb
pop
leave
mov
js
mov
in
xor
call
mov
popf
movsl
or
add
inc
movsl
mov
fwait
ret
inc
mov
mov
mov
fidivrs
addr16
cmpsb
bound
mov
pop
outsb
test
inc
mov
and
pop
adc
push
pop
sti
jmp
sub
or
jne
xor
xchg
aad
loopne
fwait
jno
int
sbb
pop
rolb
xor
pop
je
loop
mov
decl
sub
mov
call
adc
xchg
out
inc
or
out
and
xchg
or
mov
inc
jg
and
mov
repz
lahf
push
loop
inc
lret
dec
sbb
mov
enter
in
mov
pop
pop
jl
xchg
jmp
cmp
push
mov
cmp
lret
cmpsl
sti
mov
push
dec
popa
xchg
push
popf
dec
sbbl
pop
xor
leave
test
fidivs
in
cmp
loop
shrl
push
jge
repz
pop
or
subb
ss
repz
in
cmp
adc
adc
shrb
and
fistps
test
add
adcb
std
add
and
pop
push
shrb
or
lds
ffree
jmp
lret
lods
inc
insb
lds
add
sbb
mov
and
cmp
arpl
sub
mov
rorb
pop
das
andb
add
outsl
sub
gs
rorb
adc
xchg
into
xor
cmovp
jmp
push
cmpsb
out
pop
add
test
cmpsl
cmpsl
push
or
adc
insl
les
push
adc
jle
inc
addr16
lret
pop
add
popf
xchg
hlt
ja
mul
xor
push
test
cmp
pusha
icebp
push
ss
bound
mov
jmp
imul
add
pop
arpl
pop
and
push
or
inc
call
and
dec
xchg
adc
pop
inc
stos
movsb
xor
xchg
andb
add
add
and
sub
add
push
data16
sbb
roll
je
sbb
aam
aaa
dec
sbb
push
adc
rcrb
jg
cli
cmpsb
xor
sbbb
insl
sahf
jp
xchg
jecxz
jle
insb
xor
lods
cli
aas
mov
out
lock
ficomps
xlat
movsb
ja
insb
mov
push
fisttpll
in
mov
cltd
xor
cmpsb
mov
mov
mov
jecxz
or
aaa
dec
popa
loop
pop
ret
ljmp
jb
adc
jnp
scas
inc
cmp
adc
andl
int
rol
mov
mov
pushf
ds
scas
pushl
in
les
addr16
mov
add
lods
scas
adc
or
testb
outsb
das
add
data16
jmp
pop
pop
imul
adc
add
or
cli
jno
ds
dec
jo
jb
hlt
or
outsb
push
sub
xchg
sub
mov
enter
pop
sub
sti
lret
mov
pop
stos
hlt
lods
push
cmp
cmpsb
mov
xchg
popf
addr16
scas
or
pop
fildl
test
jb
sub
sbbb
arpl
mov
loop,pn
bnd
mov
adc
inc
shlb
mov
enter
stc
cmp
jne
xchg
pop
pop
fidivrl
and
jmp
fildll
push
cld
mov
sahf
push
call
loope
jle
jnp
daa
and
pop
adc
aas
enter
sbb
cltd
adc
fnstsw
mov
dec
and
sar
push
jmp
lcall
xor
pop
sub
dec
lock
jecxz
sbb
dec
push
sub
mov
pop
mov
ret
xlat
xchg
in
repnz
pop
rorb
xchg
in
lods
addr16
insb
and
or
in
xchg
out
xchg
inc
xchg
xchg
addr16
inc
leave
xlat
call
and
fnstcw
dec
test
mov
lea
push
push
test
cs
shll
fistpl
fistps
lret
push
rclb
pop
sbb
ljmp
jo
aaa
or
pop
and
dec
out
mov
fwait
movsb
pop
mov
lahf
fcomp
inc
aas
rcrl
aam
mov
cmp
icebp
nop
fldcw
in
xchg
imul
cmp
mov
popf
sub
xchg
and
out
sub
repnz
cwtl
or
jge
imul
imul
setno
nop
or
sbb
sti
lds
add
push
add
jbe
rclb
data16
mov
lods
sub
cli
fsts
cltd
gs
pop
inc
imul
cwtl
repz
mov
ss
mov
loopne
push
adc
jmp
aad
daa
out
jp
mov
mov
mov
jb
mov
xchg
jecxz
and
clc
add
in
lods
arpl
jns
mov
ja
lret
std
jecxz
into
jmp
std
sub
sbb
xchg
gs
ficomps
jge
daa
mov
and
popf
jmp
mov
push
nop
je
icebp
pop
daa
mov
sahf
in
outsl
adc
push
aam
enter
or
mov
pop
push
lock
shl
clc
mov
popa
jl
imul
xrelease
lret
push
enter
cmc
push
sbb
mov
iret
shrb
pop
test
sahf
shufps
fwait
pop
cld
imul
jbe
mov
sarb
mov
and
cmp
mov
adc
out
out
fdivl
es
lods
pop
push
nop
push
scas
pop
cs
jl
movsl
lods
or
neg
cld
test
xlat
fsubs
adc
repnz
or
add
popf
cmp
cltd
cmp
mov
adc
cmp
or
into
sub
outsl
or
mov
enter
mov
mov
dec
lret
loope
es
adcl
xchg
into
lret
leave
cld
fstp
insl
inc
xchg
call
cmp
xlat
add
xor
mov
rorl
sbbl
iret
je
xchg
outsb
imul
sbb
insl
jl
cmp
lahf
inc
lret
mov
arpl
inc
aas
scas
movsl
push
push
movsb
repz
ss
mov
inc
jg
mov
jae
cmpb
inc
lds
dec
cld
loope
sub
adc
insb
movsl
xchg
and
int3
sub
out
out
pop
mov
cmpsl
dec
ss
push
sub
sbb
movsl
mov
ret
xor
fld
mulb
pop
push
ja
jns
andb
dec
cmc
push
jmp
add
jl
add
out
xor
mov
lds
pop
pop
loopew
or
jecxz
sub
jecxz
sbb
cmp
jmp
mov
sti
std
ja
mov
aaa
fistpl
jge
clc
sub
shll
iret
inc
je
lret
push
mov
das
pop
or
adc
jecxz
sbb
mov
stc
push
xor
addr16
mov
fisttpl
in
daa
mov
lods
fwait
pop
or
popf
movl
xor
push
rcl
popa
les
adc
repz
mov
add
test
inc
out
into
mov
and
dec
je
scas
xchg
mull
dec
push
pop
add
push
popf
and
addr16
cmp
lret
test
fdivp
adc
jl
in
dec
jae
mov
fstps
dec
xchg
or
repz
mov
loope
js
ss
mov
adc
rorl
aad
push
dec
push
sub
push
xchg
aaa
or
fsubl
fnstcw
ret
gs
loopne
je
es
in
es
in
mull
rol
mov
jl
fstpl
mov
arpl
xchg
mov
bound
stc
lock
mov
daa
mov
sub
push
mov
sarb
mov
imul
adc
and
dec
pop
cmp
jne
xchg
adc
xchg
movsb
xchg
cmp
adc
cmp
xchg
dec
aad
fsubl
xlat
ds
lcall
pop
push
adc
sub
icebp
jo
shll
pop
test
xchg
sbb
ja
addb
popf
outsl
aaa
pop
into
or
and
cmpsl
sbb
inc
xchg
pop
cltd
jg
xchg
test
jle
sbbl
mov
jecxz
pop
jae
pop
push
incl
insb
sub
push
pop
cmp
jne
inc
imul
or
add
pop
dec
clc
fwait
sbb
popa
sarb
loop
cmp
dec
pop
xor
shlb
or
test
mov
clc
mov
jecxz
fcoml
shlb
shr
xor
sahf
es
call
push
aaa
mov
xor
xchg
lock
dec
xor
xchg
mov
and
cmp
in
jo
ljmp
xchg
fiadds
or
mov
xor
xchg
xlat
sti
add
push
loop
bound
push
fstl
xor
outsb
push
out
sub
mov
popl
push
or
dec
fildl
mov
addr16
stos
call
pop
out
fsub
mov
pop
insl
and
lds
imul
dec
or
fcmovnbe
sbb
fidivrs
out
adc
data16
inc
xor
dec
data16
in
fisubs
pop
xchg
cs
and
ss
fmul
jl
jmp
in
and
mov
test
arpl
rcll
mov
mov
mov
outsl
adc
js
xchg
lds
and
or
mov
mov
dec
or
fdivrl
jns
mov
iret
and
or
mov
ljmp
mov
pop
testb
sub
bound
and
mov
sub
in
mov
fstps
xor
arpl
jbe
addr16
jl
aaa
xchg
mov
cmp
fsubs
les
or
jns
cmc
pusha
js
rclb
xor
ret
mov
mov
dec
scas
pop
leave
mov
pop
push
fadds
es
mov
lds
jecxz
cmpsb
ljmp
xchg
fwait
sbbb
adc
jl
ret
ljmp
and
mov
mov
pop
sub
jno
movsb
mov
icebp
test
sub
jge
xchg
inc
std
stos
sbb
push
push
je
fiaddl
pop
test
push
dec
scas
sub
stc
movsb
test
movsb
stos
mov
jne
sub
cs
add
loope
lret
push
pushf
push
pop
fnsave
rorl
ret
sbb
pop
mov
ds
mov
sbb
cmpsl
mov
and
repnz
sub
test
icebp
pusha
adc
or
cmp
and
sub
dec
mov
mov
cwtl
cmp
mov
jo
pop
sbb
inc
cwtl
loopne
mov
mov
cmp
mov
and
popa
jecxz
sti
aam
cmp
jo
adc
adc
pop
mov
mov
test
pop
movsb
xor
into
jp
fiaddl
pusha
jns
call
lret
mov
out
mov
pop
dec
cmp
add
repz
aaa
popf
pop
rclb
xor
mov
sbb
loopne
push
idivl
sbb
mov
cmp
and
out
int3
dec
bound
jecxz
cmp
jbe
insb
jmp
repz
mov
and
sub
in
insl
call
pushf
push
push
sub
fidivl
pop
inc
ss
addb
sarl
jle
daa
and
test
add
pusha
cli
cmc
xlat
stc
in
jmp
xchg
leave
fsts
inc
ds
push
das
or
jmp
xchg
psubusb
mov
fiadds
push
in
aaa
mov
test
pop
pop
int
push
js
xor
mov
mov
cmpsl
jl
adc
in
cmp
repnz
movsl
fsts
xchg
movsb
jno
push
out
jmp
adc
sub
sbb
add
jle
fdivrs
lret
ss
cltd
jmp
mov
std
daa
mov
pop
outsb
lock
jb
test
les
mov
jo
divb
movsb
adc
sbbl
ret
mov
jl
pop
cmp
repz
repnz
mov
in
jo
rcrb
fs
es
pop
bound
sub
pop
movsb
xchg
in
fsub
xchg
shll
jo
or
pop
add
mov
sub
adc
mov
test
mov
das
adc
mov
fwait
fs
ret
cmc
jl
shll
jge
sub
pop
mov
int
cmp
adc
popa
pop
sbb
enter
hlt
adc
jno
orl
aad
mov
mov
cmp
in
pop
jge
mov
fcmovbe
adc
mov
test
push
jnp
jb
push
aam
jne
dec
test
mov
fisubrl
add
push
fnop
je
imul
rorl
mov
aas
mov
in
cltd
lret
mov
xchg
and
mov
sub
push
repz
mov
hlt
push
call
push
and
push
jl
out
cmpsb
xor
xor
lret
or
stc
repz
je
jb
out
sub
out
in
push
data16
jno
dec
mov
in
aas
mov
pop
sahf
movsb
jb
aaa
lock
mov
jg
pop
mov
mov
sbb
and
ret
test
test
pop
push
add
push
mov
shlb
orl
add
push
and
arpl
mov
rorb
pusha
leave
xchg
or
add
adc
jns
jnp
inc
push
cmpsl
jg
cmp
mov
in
xor
jecxz
mov
and
bound
inc
mov
ret
cmp
inc
mov
out
jnp
bound
ficompl
sub
mov
scas
call
xor
dec
test
cmp
icebp
jbe
dec
sub
ret
sbb
cli
dec
push
in
stos
loop
jne
outsl
inc
fstpt
aad
sarb
mov
pop
dec
dec
jo
cli
lahf
and
push
nop
das
jno
mov
and
pop
push
cltd
lock
divl
into
cltd
mov
push
ja
leave
add
lds
fistps
and
mov
imul
inc
push
sbb
repz
test
fcompl
add
out
les
lods
sbb
movsl
pop
mov
test
jbe
test
adc
jge
cmp
pop
mov
nop
es
pop
xor
hlt
jae
cmp
loop
pushf
movsl
sub
jne
cmp
mov
cmc
mov
mov
fidivrs
ss
ss
xor
notl
mov
or
xor
imul
pop
inc
out
lcall
adc
push
aam
loope
in
dec
fs
mov
mov
jp
out
sbb
inc
rcrl
popa
je
push
out
adc
leave
mov
ljmp
scas
xor
mov
pusha
setl
test
sbb
mov
sub
addr16
insb
xchg
pop
sbb
xor
rcll
test
ss
push
repnz
in
cwtl
js
shll
adcb
rorb
xor
and
div
bound
ficomps
jns
mul
jo
xchg
or
lcall
shrb
and
jnp
rcrl
out
mov
mov
inc
mov
ds
insb
jle
clc
sub
movsl
sbb
pop
cwtl
mov
jmp
shl
scas
leave
push
or
add
xor
gs
jl
mov
sarb
jg
cs
mov
mov
mov
movsl
cmpsl
lods
lods
cmc
jl
stc
mov
mov
leave
icebp
jp
repnz
rorb
popl
in
cmp
inc
push
push
lahf
push
repnz
outsl
mov
mov
mov
add
mov
arpl
lahf
js
push
sub
das
jle
data16
insb
insl
shrb
sub
pop
mov
push
imul
std
inc
jmp
adc
xchg
or
test
pop
push
sbb
fistpll
and
ja
adc
mov
lcall
daa
inc
and
call
dec
fisttps
mov
inc
mov
scas
repz
inc
dec
movsl
gs
cld
in
test
cmp
call
push
aas
mov
clc
ret
popa
data16
mov
les
lds
loop
adc
xor
mov
inc
jle
movsb
adc
sti
add
in
lret
fimuls
mov
mov
push
scas
fs
jno
lods
xchg
lcall
or
inc
movsl
and
loop
xor
lcall
add
jne
fcomps
pop
pop
xchg
and
push
jb
fs
xchg
outsl
jg
adc
xor
jl
inc
cs
fcoml
adc
sbb
mov
sub
xor
push
pop
cmp
gs
xor
xor
push
sub
insb
add
mov
and
je
divl
ss
je
lret
test
dec
scas
push
lcall
fwait
adc
mov
push
aaa
push
jmp
pop
pop
xor
sbb
mov
rcr
aaa
sub
stos
jp
xor
sub
imul
fldt
pop
pop
pop
xchg
jmp
js
test
dec
incb
lea
jl
in
cli
dec
mov
sti
xor
lea
lock
lds
rolb
aad
sysexit
mov
mov
pushf
push
lret
popf
imul
test
pop
or
imul
test
add
cmpsl
fs
adc
stos
subb
sub
int
inc
dec
loope
sbb
push
mov
xchg
sub
xor
movb
cmpsl
aaa
xor
aas
ljmp
add
bnd
jb
fsubrl
cmp
fbstp
mov
cmc
call
mov
xor
cmc
popf
mov
push
sbb
push
add
mov
lcall
ss
mov
jle
cli
mov
xchg
or
push
push
xchg
loop
out
push
or
int
repz
cmp
inc
ret
and
movsl
out
xchg
xchg
inc
mov
lds
cmpsb
shr
incl
in
fcoml
js
adc
int
das
sbb
out
push
sarb
cmp
xor
jb
pusha
cwtl
jb
add
lcall
imul
gs
int
mov
ljmp
ljmp
push
mov
sbb
fdivr
ret
mov
rolb
mov
test
or
sub
enter
jae
xchg
mov
bound
ficomps
mov
fisttps
mov
or
insl
ja
lahf
jl
hlt
jno
scas
out
adc
aam
iret
ss
stos
jns
test
xchg
xchg
jb
lds
sti
aam
or
cld
pop
mov
fildl
stos
lds
hlt
push
dec
ret
mov
ficomps
xchg
add
ss
movsl
popa
subl
js
and
fsubs
sub
add
ret
gs
push
dec
push
test
push
addr16
jne
lods
jne
popf
mov
movb
xchg
jnp
inc
test
fstp
jbe
mov
lea
sbb
mov
sub
jne
inc
cwtl
sbb
lods
xchg
rorl
mov
mov
add
nop
shl
fistps
enter
mov
pop
mov
mov
mov
mov
pop
xor
or
adc
out
daa
pusha
iret
ljmp
push
je
xor
xchg
cmpsb
stc
mov
ds
dec
lcall
dec
idivl
mov
daa
loope
dec
scas
and
xchg
das
xlat
mov
aam
add
lods
shll
mov
inc
xlat
adc
push
dec
push
pusha
xor
sub
jl
and
mov
ss
push
fidivrl
lds
push
aaa
mov
lods
sti
fists
mov
movsl
pop
ljmp
sub
inc
pusha
movsl
mov
dec
or
fisttpl
pop
cmp
imul
lods
and
fdivrl
cmp
das
jg
push
cmp
inc
pop
jns
enter
jb
jmp
jmp
icebp
repnz
push
fisttpl
dec
incl
test
jns
js
scas
xchg
subb
mov
loope
cmpl
dec
cmpsb
adc
das
dec
movsl
in
fcoms
addr16
testl
aaa
dec
xorb
add
push
adc
shll
add
adc
insb
icebp
arpl
daa
mov
inc
out
add
or
xor
lea
aaa
mov
xchg
mov
iret
shlb
cli
push
add
aaa
mov
cmp
dec
xor
pop
hlt
mov
add
popa
mov
mov
inc
mov
xchg
xor
lods
stos
aam
out
jg
and
leave
data16
and
xchg
mov
mov
mov
sbb
les
icebp
and
jg
movsb
sahf
and
mov
adc
enter
int
mov
xchg
insb
add
cmpsl
cld
mov
gs
outsl
leave
add
js
das
pop
fistps
pop
mov
inc
fidivl
inc
les
dec
or
jle
adc
cmc
loopne
lcall
pop
hlt
out
aaa
sbb
jns
jecxz
les
pop
imul
dec
cmp
cmc
push
mov
and
xchg
fstl
ljmp
inc
dec
insl
jp
xchg
pop
adc
xchg
mov
or
addr16
or
cli
imul
cs
fdivrl
sub
cmp
in
cltd
dec
mov
push
mov
add
xor
mov
jb
jg
jecxz
out
add
adc
fs
push
lahf
cmp
icebp
outsb
xchg
pop
lds
popa
negb
ja
adc
add
xrelease
scas
jmp
in
shlb
idivl
lcall
aad
movsl
cmp
shrb
testb
out
into
andl
lods
xor
outsl
xchg
enter
jp
pop
insl
jo
or
fsub
push
mov
bound
das
add
fcoms
mov
jno
xor
jbe
rclb
cmpsl
frstor
mov
and
cltd
dec
jne
xchg
test
xchg
and
movsb
adc
inc
jg
int3
pop
testl
imul
pusha
sbb
or
or
sar
adc
dec
gs
sub
sbb
and
mov
add
ja
pop
shrb
jmp
dec
in
idiv
or
repz
sti
or
mov
and
imul
pop
push
inc
je
outsb
es
insl
inc
imul
mov
movsb
js
jmp
aad
out
pop
out
mov
push
or
fnsave
adc
adc
es
and
pop
pushf
xchg
mov
sub
jle
lods
jl
xlat
dec
aaa
pop
mov
jns
mov
je
cld
sub
popf
xlat
xchg
pushf
xor
dec
mov
mov
fnstsw
inc
adcl
ret
ds
pop
sub
inc
lahf
adc
sub
inc
pusha
addr16
loope
pop
mov
enter
aas
rcr
imul
repnz
psraw
dec
mov
dec
xchg
sbb
out
mov
pop
fiadds
sbb
mov
daa
dec
dec
test
lret
int3
jo
cmpsb
mov
push
cld
push
cmovne
inc
add
add
xor
jne
lcall
push
jne
call
fwait
test
call
jl
add
push
xlat
mov
mov
xchg
out
push
mov
jecxz
out
push
add
ret
sahf
add
pop
cmp
mov
mov
pop
cwtl
int
push
aas
mov
xchg
xor
addr16
fdivrl
mov
xchg
popa
outsl
psllw
fs
fadds
cmpsb
ds
repz
aad
and
fldt
subl
jb
pop
jno
out
std
fsubr
jno
pop
inc
int
xlat
dec
push
jns
jmp
outsl
addl
cmp
xchg
fsubrs
femms
pop
pop
inc
dec
jmp
std
xchg
out
pusha
mov
ret
rolb
jno
cmp
sti
movsb
in
pop
xor
das
cmp
xor
jns
ret
leave
jge
int3
jb
fdivr
adc
pop
push
mov
add
outsl
movb
mov
fdiv
out
jmp
xchg
mov
aam
and
or
loopne
dec
and
add
xchg
cmp
mov
js
insl
sbb
ss
sub
lods
push
ljmp
cld
adc
xchg
lock
mov
mov
inc
and
jge
into
and
sub
pop
add
rclb
call
sub
in
adc
cmpsb
cmp
or
mov
cmp
and
cmp
pop
and
sub
xchg
and
pop
jl
mov
cmp
xor
cmp
xchg
add
shlb
jle
pop
outsl
cwtl
js
rorb
es
xorb
cmp
mov
or
xor
cmpsb
mov
push
mov
clc
cmp
adc
cli
sub
out
and
bound
insl
or
xchg
sub
mov
fildll
mul
cmp
push
in
mov
insb
loopne
and
mov
or
sbb
int3
daa
push
aad
js
push
jnp
cmp
cltd
bound
adc
xorb
fiadds
lahf
cmp
inc
jg
insb
aas
push
test
fistps
xchg
xorl
pop
cmp
popa
adc
push
adc
jno
aaa
dec
in
cmp
std
sub
decl
ret
adc
inc
test
jmp
gs
dec
lea
scas
inc
bound
rolb
aaa
pop
sbb
xor
fwait
lret
push
pushl
xor
paddd
icebp
insl
cltd
adc
add
add
sti
pop
faddl
or
aaa
sbb
in
repnz
jmp
mov
call
mov
adcb
mull
mov
outsl
xchg
jl
lods
mov
sbb
fcom
or
ficompl
hlt
addr16
repz
jbe
push
mov
les
mov
int
ljmp
out
jge
jnp
movsb
add
xchg
pop
mov
jb
mov
test
mov
push
pop
jno
repnz
in
adc
add
jmp
enter
adc
insb
das
les
mov
or
popf
xchg
jp
das
jmp
test
lods
test
pushf
aad
repnz
push
subb
dec
and
ja
sbbl
push
daa
invd
jmp
mov
and
push
mov
pop
aam
fldcw
push
push
mov
sub
pop
lods
gs
repnz
push
inc
lcall
pusha
xchg
adc
mulb
cltd
arpl
push
inc
insl
inc
lods
mov
sahf
lock
shrb
add
iret
inc
mov
jae
sbb
mov
inc
push
xchg
and
bnd
adcb
sbb
stos
lcall
cmc
jmp
call
mov
or
xchg
test
dec
mov
shrl
aaa
xchg
imul
dec
pusha
sub
hlt
inc
pop
les
pop
fsubrs
jl
sahf
inc
pusha
pushf
call
push
aaa
xchg
scas
repz
or
cs
or
jg
pop
out
idivb
or
test
mov
mov
or
inc
scas
outsl
test
lods
clc
ljmp
push
jo
fsubp
cmp
aas
xchg
xorl
loope
and
repnz
xor
mov
sub
inc
ret
push
jns
pop
test
xor
les
outsl
mov
mov
pop
icebp
mov
movsb
pop
xchg
ret
sahf
out
int3
cmp
add
lock
mulb
mov
hlt
arpl
xchg
insb
dec
or
mov
adc
add
mov
xor
inc
dec
icebp
repnz
adc
adc
movsb
inc
sub
jbe
sbb
sub
and
xchg
cs
shrl
push
shll
sbb
add
lea
mov
push
xchg
sahf
iret
mov
xchg
push
sbb
sbb
out
push
sbb
jno
imul
xchg
cmp
test
cmp
dec
adc
dec
push
or
mov
add
sub
imul
xor
jmp
xchg
js
movsl
aaa
xor
xchg
sub
dec
sub
es
into
or
icebp
shrb
daa
adc
push
xor
icebp
mov
je
shll
sarl
lret
jl
and
jge
repz
push
mov
inc
filds
sbb
ret
mov
inc
arpl
cmp
ja
fmuls
cmpsb
push
repz
mov
push
pop
cwtl
cmp
fnstenv
cs
outsl
sahf
dec
xor
adc
cli
inc
cmp
mov
sahf
jecxz
mov
sbb
or
jecxz
or
clc
mov
out
test
lahf
sbb
mov
jle
cmpsl
in
xor
add
jns
out
or
imulb
and
or
add
inc
lock
arpl
lock
test
push
mov
push
push
gs
fstps
push
ret
lods
and
xchg
lods
adc
outsb
sub
jecxz
popf
jo
inc
dec
dec
xor
adc
aad
hlt
insl
add
xchg
mov
pop
fwait
sub
pushf
sbb
cmp
lret
mov
dec
dec
and
sbb
stos
lods
test
or
dec
mov
das
jp
test
cmp
sbb
push
mov
testl
sbbl
mov
jne
mull
in
mov
test
inc
or
aad
sub
adc
mov
sbbl
fwait
cltd
sbb
mov
lods
dec
inc
mov
xchg
sub
inc
adc
mov
pop
leave
mov
fmull
sub
rcr
fadds
dec
enter
imull
xchg
jne
pop
cli
lret
jnp
jbe
mov
mov
call
imul
sarb
add
rolb
leave
decb
sub
mov
mov
sub
pop
test
jns
mov
mov
pushf
add
int
or
sbb
and
jl
ljmp
mov
jns
repnz
mov
rep
pop
pop
fnsave
mov
jmp
gs
adc
lds
push
incb
lahf
mov
cmp
xchg
repnz
sub
lods
and
pop
inc
xor
and
pop
sbb
iret
pusha
jg
xchg
sbb
xor
jecxz
push
mov
mov
in
push
and
aad
ja
xchg
mov
cmp
push
mov
cld
mov
dec
std
enter
faddp
mov
sub
mov
addr16
mov
push
push
int
lods
mov
imull
into
rolb
sub
shrl
jns
or
jge
or
jo
not
and
fsts
cmpsb
in
sti
fchs
or
jge
sub
mov
movsl
and
dec
push
scas
lods
out
pop
mov
int
pop
bound
pop
xor
pop
xor
int
adc
incb
inc
xchg
add
adc
adc
jo
pop
testb
clc
cmp
mov
pop
or
xchg
xchg
cld
fsubrl
dec
mov
sti
pop
jg
outsl
push
dec
cmp
adc
push
out
add
add
xor
cld
mov
ret
mov
xor
in
sub
and
scas
orb
cltd
mov
mov
jnp
cmp
adc
cmp
or
popf
dec
in
lods
mov
and
dec
fidivl
cmc
aas
pop
adc
adc
dec
shr
add
rcl
test
push
mov
out
data16
jge
jp
pop
out
int
cmp
sub
push
scas
xchg
test
div
lea
iret
pop
xor
pushf
ret
xor
mov
xchg
jns
add
pop
unpckhps
jg
in
adc
push
adc
mov
pop
loop
fdivrl
pop
adc
or
clc
xchg
xchg
cmp
lret
fsubr
inc
jecxz
or
cmc
repnz
lock
pop
repz
or
leave
clc
mov
je
call
fldcw
mov
insl
mov
addl
sbb
rol
in
out
fwait
mov
fistl
cwtl
je
xchg
mov
pop
pop
fcomps
add
stc
iret
push
sub
xchg
inc
sbb
push
addr16
das
in
mov
pop
nop
jns
push
fs
pop
rcrl
stc
mov
jns
xor
mov
push
jecxz
insb
mov
aad
fiadds
jb
add
lds
xchg
out
int
das
cmp
or
sub
mov
mov
cmc
out
ret
lods
repz
pop
sti
jle
jb
jl
insl
into
fmull
mov
inc
xor
cmc
rorb
loope
mov
cmp
test
pop
and
or
fs
cld
mov
jns
add
mov
mov
xchg
in
ss
out
insl
out
push
cmp
inc
out
aad
adc
es
mov
dec
mov
dec
lods
or
stos
test
mov
test
jo
fiaddl
push
cmpsl
pusha
adc
cmc
pop
and
sbb
js
adc
test
fdivs
and
lahf
lret
jo
or
mov
cmp
push
mov
xor
test
sbb
ss
add
out
stos
int
mulb
add
outsl
mov
mov
sbb
in
out
pop
xor
ret
movl
inc
cmc
lods
cmpsb
jmp
or
cmp
xor
loopne
mov
jbe
push
shlb
aam
pop
mov
lret
icebp
stos
test
fstps
pop
rorb
fs
xor
aad
xor
or
aam
mov
or
ret
movsl
js
xor
test
sbb
out
rclb
lock
dec
add
ss
hlt
mov
test
mov
out
negl
or
stc
xlat
cld
cmp
cmpsb
sbb
xchg
dec
es
push
pop
js
int
stc
and
jge
sbb
add
mov
out
push
in
mov
aaa
arpl
nop
mov
xchg
out
lea
sbb
push
std
pusha
test
dec
insl
cmp
test
push
push
mov
xchg
jo
in
adc
ret
sahf
fisttpl
pop
adcb
mov
fucom
mov
jecxz
or
aaa
call
je
mov
add
push
in
andb
adc
cmp
push
int
cwtl
xorl
lret
fcoms
jnp
das
jo
scas
mov
fxch
scas
jge
push
xchg
adc
and
jbe
into
jge
mov
inc
fbstp
div
rolb
lcall
lock
xchg
and
dec
stos
or
js
jo
and
mov
icebp
into
mov
out
jmp
sub
jmp
fbld
lock
pop
push
push
in
ds
out
fisttpl
aam
jp
ret
cli
sahf
add
add
clc
aam
push
mov
jle
loope
push
adc
jbe
test
mov
jnp
mov
dec
jg
ds
int
scas
lea
pop
bound
mov
popa
mov
icebp
test
xorl
pop
insl
out
lcall
nopl
dec
xchg
adc
hlt
xchg
std
xlat
popf
xchg
cmp
lcall
les
clc
dec
lea
push
mov
or
aas
sbb
mov
mov
int3
daa
cmpsl
xchg
lret
mov
iret
add
or
mov
pusha
lds
cmp
pop
mov
cli
rorl
hlt
mov
add
jmp
or
xchg
xor
lcall
inc
lods
cmpsb
push
sub
lahf
outsl
call
mov
les
sbb
lds
fsubrl
fmuls
xor
xchg
int3
pop
in
mov
add
jmp
jns
mov
xchg
iret
mov
test
in
mov
push
dec
call
jl
fcos
pop
idivl
mov
and
insl
xor
xchg
lock
inc
loopne
std
pop
lret
lds
iret
pop
fs
fbstp
jl
and
inc
data16
xchg
mov
fneni(8087
mov
test
xor
inc
sub
int3
push
cmp
cwtl
adc
push
inc
xchg
nop
sbb
les
fs
out
dec
xchg
leave
mov
scas
push
rol
into
xchg
xchg
xchg
xor
ss
adc
je
lds
in
xchg
and
test
loopne
scas
stos
sub
sub
sbb
mov
mov
pushaw
aaa
cmp
cmp
lock
pop
jb
jno
imul
add
std
pushf
inc
mov
add
repnz
xchg
and
stos
sahf
mov
enter
jl
dec
mov
xor
cli
testl
cmc
cmpsl
mov
fwait
mov
ret
xor
mov
imul
test
pop
imul
ffree
mov
pop
dec
fisubl
sti
aas
adc
shrl
add
add
xor
pop
push
leave
test
ds
rcr
mov
cmpsl
ss
pop
jb
fisttpll
add
cmp
aam
sbb
jmp
dec
inc
lods
into
adc
lret
stc
mull
adcb
sti
inc
je
push
std
test
data16
add
lahf
stc
sahf
lahf
xchg
icebp
sbb
cmpsl
pop
sub
loope
xchg
mov
popf
sbb
fdivrp
adc
xchg
or
add
sub
in
jbe
jne
push
ds
add
les
and
out
ror
into
sti
xor
xchg
mov
xchg
sub
out
sbb
or
fucomp
test
jmp
push
or
or
inc
hlt
jecxz
mov
jae
or
xor
test
ret
fstpl
daa
sub
fs
sti
push
repz
lods
stos
inc
mov
mov
inc
enter
mov
dec
je
mov
add
add
scas
jne
cli
aas
test
mov
test
sub
pop
sub
clc
fs
ret
test
xor
push
push
ficomps
mov
in
xor
lds
pusha
repnz
and
scas
sub
test
js,pt
movsb
ljmp
ljmp
inc
add
and
xor
mov
xor
in
push
movsl
dec
lock
cltd
rcll
add
in
jmp
add
push
popf
pop
loope
rcrb
jl
imul
bound
idivb
loopne
or
mov
fdivl
hlt
xchg
jbe
call
ror
jne
fs
outsb
xor
mov
cmp
push
xor
dec
es
aad
arpl
bound
dec
xor
rcrl
fmul
stos
stc
push
cmpsb
ret
mov
cmp
mov
add
faddl
into
or
into
in
cmp
xchg
stc
lret
mov
jmp
pop
movsl
nop
outsl
push
pop
loope
inc
scas
lret
jp
lds
into
mov
mov
xchg
cmpsb
aaa
cmc
sahf
fnsave
push
pop
lods
push
bnd
dec
pop
push
je
jp
ss
and
leave
pop
enter
push
arpl
loop
jmp
dec
push
ja
adc
pop
ss
inc
adc
push
pusha
les
cltd
jb
shll
clc
add
xchg
fisubrl
push
out
outsb
lock
mov
fistpll
mov
out
cmp
stc
std
add
pop
dec
popf
std
dec
inc
inc
out
cmpsb
dec
mov
iret
cmp
jo
das
jp
pusha
das
mov
lahf
bound
or
or
and
test
jb
lret
add
xor
xor
cli
ficomps
dec
sti
or
jne
je
adc
fistpl
gs
dec
out
fldl
and
adc
scas
inc
mov
dec
inc
icebp
loop
gs
mov
and
arpl
xchg
xchg
inc
cmp
inc
nop
push
lds
jp
mov
std
movsl
subb
mov
dec
push
dec
mov
sti
repz
in
and
loopne
test
iret
aad
or
pop
cli
faddl
out
cltd
outsl
pop
in
cmp
pop
and
add
inc
jnp
imulb
inc
imull
sbb
rolb
pop
repz
repnz
mov
xchg
xlat
xchg
cmp
mov
dec
inc
and
bound
mov
test
xor
inc
xor
loopne
sbb
sub
dec
lds
in
mov
cli
stos
jae
outsl
clc
je
lahf
xchg
and
mov
xor
mov
and
mov
xchg
sarl
push
add
add
scas
fbstp
sarb
jg
sahf
test
mov
fwait
add
scas
mov
fs
mov
scas
jmp
push
sahf
repz
and
add
and
mov
jle
loop
dec
mov
inc
add
adc
sbbb
stos
test
icebp
enter
in
dec
std
pushf
mov
mov
pushf
test
movb
in
shrb
sbb
jb
pop
leave
xchg
mov
icebp
shlb
adc
add
in
push
dec
sbbb
ret
mov
jg
aaa
or
bound
scas
xchg
icebp
cmpsb
arpl
cli
nop
xchg
outsl
in
push
repz
xchg
push
xchg
in
inc
jne
cmp
cmc
outsb
stos
adc
out
inc
push
sahf
stos
out
xchg
sub
loope
jle
xor
sub
add
ds
ret
jns
leave
in
rcl
movsl
or
push
sub
call
pop
out
mov
lods
iret
push
adc
enter
arpl
push
dec
mov
roll
pop
or
jp
pop
les
add
adc
sbb
cmc
push
arpl
fistpll
xchg
adc
push
fcompl
push
adc
mov
lods
inc
adc
or
sub
aad
aam
lds
in
add
and
jl
pushf
or
lcall
leave
fisubl
pushf
push
xor
outsb
xchg
pop
leave
add
mov
sub
xchg
outsb
ret
lea
js
dec
ret
mov
repnz
arpl
sti
stos
loopne
adcb
mov
mov
stc
jnp
jo
cmp
outsb
mov
sub
divb
cmp
icebp
loopne
loopne
and
add
arpl
cmp
adc
shr
push
lcall
jmp
notl
adc
jbe
add
xchg
call
add
fnstcw
or
mov
scas
int
mov
push
mov
xchg
sbbl
add
jmp
in
nop
mov
insl
pop
dec
dec
sub
lods
inc
stos
inc
or
daa
xchg
loope
push
repz
cmp
fnstenv
or
jno
mov
cmpb
or
inc
jmp
jnp
jne
gs
stos
int
fcoms
push
add
outsb
sti
xchg
mull
rcrb
jns
iret
xchg
sbb
cmp
gs
orl
ret
xchg
popf
xchg
mov
xchg
rorl
xchg
push
sub
mov
outsb
filds
jle
push
subb
mov
mov
add
pop
popf
xchg
sti
lds
pusha
mov
or
leave
popa
mov
jo
lods
pop
fwait
mov
push
adc
or
vunpcklpd
loop
jbe
ja
adc
leavew
data16
sub
out
sahf
mov
popa
sub
imul
arpl
and
pop
jmp
push
ret
push
inc
out
mov
mov
aad
cwtl
adc
pusha
and
xor
jno
ja
add
leave
jo
aaa
dec
ss
jecxz
orl
adc
add
mov
ud0
push
aad
pop
dec
in
mov
dec
aaa
dec
gs
imul
pop
js
cwtl
popf
push
in
xchg
mov
popa
sbb
lret
cmpsb
or
xchg
dec
lock
sub
and
cmp
pop
mov
fwait
pop
mov
cwtl
pop
stos
inc
jo
out
dec
mov
cmp
jae
and
mov
or
cltd
lret
mov
int
mov
xchg
cmp
outsl
jno
adc
aas
xchg
movsl
and
xchg
lcall
mov
rorb
push
loopne
sbb
mov
cmc
mov
clc
or
or
ljmp
mov
xor
fmul
jmp
cli
sub
outsl
push
pop
xchg
int
mov
cli
pop
cmpsl
call
inc
clc
pop
and
daa
push
mov
mov
leave
sub
push
popa
cmc
xchg
sbb
scas
jb
lods
ss
dec
stos
inc
ret
sub
cmp
outsb
pop
xchg
add
mov
fnsave
repz
out
enter
sub
adc
or
into
mov
lahf
mov
outsl
xchg
inc
lock
popf
pop
into
or
and
mov
cli
and
adc
dec
scas
mov
and
mov
ljmp
xchg
push
out
bound
fdivl
jb
xor
jmp
iret
or
rcr
push
into
aad
jbe
or
cmc
arpl
out
cmp
lea
inc
jp
pop
pusha
addr16
mov
jmp
xabort
cmpsl
fstpt
inc
mov
aad
pop
enter
repnz
and
mov
mov
outsl
mov
pop
xchg
adc
xchg
pop
cmpsl
aad
cmp
adc
xchg
addb
add
push
cmp
repnz
adc
test
jb
repz
lret
ljmp
jecxz
mov
adc
jne
sub
das
je
movsl
add
scas
mov
push
test
ficomps
push
add
push
pop
inc
inc
push
addl
or
cmp
ljmp
shrb
inc
and
pushf
stos
xchg
xor
mov
enter
and
std
and
in
jge
cmpsl
adc
out
pop
pushf
add
fidivl
add
je
jbe
scas
xchg
lods
jae
cmc
jbe
rcrb
shlb
cmp
mov
adcl
ljmp
adc
imul
xchg
xchg
mov
xlat
dec
add
lods
sbb
ret
inc
js
mov
add
inc
sub
leave
xor
or
and
push
in
mov
sub
adc
adc
jecxz
arpl
sub
repnz
push
mov
mov
sub
cltd
jge
mov
jae
rolb
jnp
cwtl
inc
sub
cmpsl
inc
or
jecxz
jo
notb
test
push
jae
ret
mov
and
inc
test
pop
jmp
movsl
inc
test
add
repz
jae
cwtl
hlt
jno
adc
sbb
xor
ret
xor
cmpb
add
cmpsl
and
cmp
rorl
lret
enter
movb
adc
xlat
mov
jae
sub
mov
ljmp
xor
pop
inc
adc
into
jne
out
daa
dec
mov
and
clc
inc
add
xchg
push
pop
into
mov
mov
dec
popa
dec
cli
adc
addr16
and
dec
outsl
cmpsb
pop
popf
pop
cwtl
shll
mov
enter
add
outsb
cmpb
cmp
sbb
dec
repnz
add
gs
add
out
outsb
scas
es
cwtl
add
outsb
in
sub
mov
mov
jae
push
jne
stc
test
xor
icebp
stos
mov
out
lret
stos
lods
das
xor
jae
or
jns
out
cltd
lods
hlt
loopne
daa
scas
das
stos
push
pop
jbe
out
mov
rclb
pushf
mov
dec
xchg
xchg
call
mov
pushf
adc
cmpsb
push
movsl
mov
lea
lods
mov
stc
jp
popa
xchg
xor
xor
lret
jl
mov
mov
mov
pop
std
fcmovne
mov
xchg
ss
js
mov
hlt
std
or
jno
push
std
sub
gs
std
jmp
lret
lock
jp
sub
sahf
fimull
mov
aas
sub
mov
aaa
enter
push
mov
shl
stos
and
add
rcl
push
cmpsb
xchg
sub
rcrl
sub
jb
and
jp
daa
push
mov
push
mov
inc
rcr
jbe
addr16
outsb
test
mov
or
daa
daa
js
push
mov
mov
movsb
jns
decb
fisubl
lods
arpl
shrl
sbb
insb
stos
inc
add
das
jbe
inc
fidivrl
ret
adc
or
pop
pushf
push
subb
jl
ss
and
arpl
push
cld
adc
lock
push
loope
ja
orl
pop
ret
stc
or
movsb
mov
mov
pop
mov
mov
loope
movsb
decl
pop
ret
lods
aam
test
repz
cld
mov
mov
cmp
hlt
je
subl
ss
jle
mov
gs
push
mov
sbb
cmp
ret
push
pusha
pop
mov
cmovno
cltd
arpl
and
jecxz
add
mov
orb
jbe
mov
test
pushl
ds
mov
cmp
jge
push
fistps
mov
icebp
or
hlt
inc
mov
daa
push
fcoms
aam
das
push
sbb
jae
push
push
rcrl
dec
test
cmp
sbb
fstpl
clc
xchg
lock
mov
out
mov
cwtl
push
dec
mov
jo
test
lea
loopne
dec
shll
or
in
out
repz
dec
xchg
pop
mov
mov
push
pop
sti
aaa
sub
sarl
lcall
mov
cmp
div
pop
xchg
cld
lcall
push
xlat
push
dec
mov
lods
or
inc
adc
push
cmpsb
jno
repnz
pusha
in
jns
dec
cmpsb
hlt
fs
outsl
xchg
sarb
add
mov
mov
out
jno
stos
je
scas
orl
jle
jno
jns
movsl
mov
fldt
cmp
cmc
jb
daa
adc
add
aam
insl
cld
cmp
aad
dec
test
or
adc
aas
xlat
and
stos
les
jge
negl
aaa
fcmovb
not
cmp
add
gs
cmpsl
fwait
mov
movsb
xchg
movsb
xchg
jmp
pop
out
mov
fcomps
mov
pusha
inc
dec
pop
mov
pop
pusha
cmpsl
pop
testl
mov
sub
test
es
rcl
inc
lahf
mov
lock
fnsave
push
mov
or
inc
inc
sbb
clc
inc
aam
arpl
out
dec
mov
movsl
xchg
repnz
ja
sarb
cmp
push
mov
jno
adc
call
add
mov
or
jmp
dec
fmull
xchg
push
dec
pop
aas
sbbl
xor
fdivs
xchg
pop
inc
dec
bound
push
insb
int3
mov
inc
cmpsl
dec
testb
lret
imul
je
pop
out
adc
pushf
popf
or
imul
xchg
mov
dec
mov
insb
mov
lahf
inc
or
mov
dec
jns
es
cmp
push
cs
scas
aad
pop
sbb
pop
push
testb
sbb
nop
ret
jle
xchg
test
mov
or
arpl
stos
stos
repnz
xchg
icebp
fs
cwtl
popf
mov
inc
std
adc
test
add
lea
ret
sbb
xor
jbe
mov
adc
cmp
sub
add
in
inc
jge
dec
out
mov
loop
or
cli
insl
push
movsb
lods
add
ret
imul
xchg
mov
test
mov
jns
xchg
test
mov
cli
fiadds
js
jg
stos
lret
sub
and
stos
loopne
test
popf
sub
aam
cmp
rclb
or
sbb
icebp
stos
inc
mov
or
xor
sub
les
xor
fmull
xor
test
jne
xchg
lock
xor
inc
adc
pushf
or
mov
mov
scas
fbld
sbb
fimull
stc
imul
aas
hlt
out
cmp
punpckhdq
push
aad
movsb
mov
orl
xlat
sub
adc
push
in
dec
inc
add
add
ja
sbb
loopne
or
fs
addl
data16
lea
push
pop
sar
push
adc
outsl
push
loope
xor
int
mov
mov
pop
inc
inc
mov
dec
sub
jne
pop
or
mov
push
inc
jae
mov
cmp
jp
add
adc
cmc
push
jo
inc
push
mov
inc
ficomps
adc
sub
ror
push
popf
je
push
inc
inc
adc
push
sub
inc
mov
cmpsb
repz
and
imul
lret
ljmp
pop
push
stos
inc
inc
test
fldl2t
pop
pop
mov
xchg
out
add
lret
insb
xor
push
jns
ret
outsl
stc
mov
aad
sbb
and
adc
insl
lret
mov
in
mov
cwtl
int
xor
mov
mov
xor
fsubl
and
enter
dec
push
ficomps
add
adc
outsb
mov
mov
xchg
fninit
mov
aad
aad
xchg
dec
cmc
pop
fnsave
add
or
test
sub
mov
jns
adc
add
cmp
inc
aad
push
mov
push
jb
adc
rolb
sbb
and
daa
dec
js
fdivl
mov
sbb
adc
out
cmpsb
dec
xchg
ja
arpl
jno
adc
cmc
pop
hlt
sarl
je
fs
jae
dec
call
shll
xor
mov
adc
in
fadd
jb
sbbl
popa
mov
nop
xor
sub
cli
xlat
pop
fiaddl
jno
push
add
xor
lret
mov
jns
inc
pushl
aaa
sarl
xorb
rcr
dec
cmpsb
shrl
mov
push
movsl
push
mull
add
in
mov
fstpt
mov
adc
lret
int
fisubrl
pop
sbb
dec
lods
adc
adc
inc
cmpsb
add
out
inc
mov
xor
ss
fcomp
imul
pop
repnz
outsb
int
mov
movsl
mov
enter
sbb
js
into
and
and
jnp
call
push
push
sub
push
daa
mov
cmp
mov
clc
mov
mov
sbb
in
outsb
pop
dec
xchg
cmc
mov
lods
test
mov
mov
and
pushf
xchg
sub
mov
pop
mov
xchg
in
jnp
jecxz
and
fwait
push
test
sti
push
mov
xlat
sub
or
push
lods
fistl
cmp
pop
jmp
lods
mov
xchg
xchg
dec
xor
fnstenv
negb
sub
push
cld
leave
int3
jae
clc
ja
xchg
mov
mov
or
adcl
jp
jl
hlt
sub
pop
mov
sahf
sti
adcl
cmovle
mov
out
loop
push
sub
push
pop
call
dec
dec
out
xchg
clc
jne
mov
sti
xor
out
js
les
std
scas
mov
inc
cld
xchg
andb
out
jns
xor
icebp
out
ja
das
mov
loope
call
lahf
popf
fwait
mov
inc
imul
push
xchg
call
mov
cmp
mov
xor
aam
daa
pop
aas
arpl
xlat
enter
and
rcrl
das
loope
sub
inc
dec
outsb
pop
mov
data16
cmp
fcmovnu
sbb
in
outsb
rorl
movsl
and
pop
int
mov
dec
push
bound
dec
cli
negl
mov
adc
push
push
dec
ja
push
jmp
and
cmp
addl
xchg
jne
jg
inc
add
dec
push
scas
or
and
leave
xor
je
push
cmc
sti
and
movsb
mov
cmp
pop
sub
shl
lcall
push
xchg
sbb
add
mov
push
pop
jle
pop
sti
mov
iret
lahf
or
add
shll
mov
sbb
fidivs
dec
xor
adc
mov
and
lret
push
and
test
outsl
mov
mov
jl
aad
or
mov
add
inc
lds
xchg
jp
daa
clc
lea
mov
das
jb
into
jne
jmp
jle
add
and
or
sbb
insl
push
sub
sarb
imul
popf
sbb
aam
push
or
add
pop
iret
stos
jo
mov
ds
push
stos
xorl
sarl
addr16
in
pop
fadds
mov
and
push
pop
or
sub
xor
mov
adc
xor
lea
in
mov
mov
mov
bound
adc
cltd
mov
xchg
popa
inc
loop
pop
xor
jns
adc
sbb
jge
adc
jno
jne
pop
mov
sarl
or
scas
mov
fmuls
lcall
adc
adc
jge
fsts
cmp
fisttpl
sub
sbb
ret
inc
mov
xchg
cmp
int
xor
lret
jns
clc
mov
les
imul
cmc
inc
mov
jne
inc
xor
sbb
fnstcw
xchg
inc
cli
dec
scas
popa
mov
mov
dec
jge
push
sub
dec
or
mov
mov
mov
xchg
push
paddb
cmp
mov
pop
inc
dec
in
lods
inc
xchg
test
or
sbb
outsl
lea
adc
sbb
jno
or
pushf
aas
fcoms
add
jo
aad
xor
inc
lds
into
les
iret
into
and
pop
mov
and
pop
fisttpll
sbb
aad
repz
cmpb
in
cs
mov
or
jle
cmpsb
ror
mov
mov
mov
mov
fcmovbe
fstl
adc
arpl
mov
mov
imul
push
inc
and
stos
mov
and
mov
js
fdivl
or
adc
arpl
inc
scas
add
mov
add
aas
stos
cmpb
jo
js
mov
adc
push
xor
fs
xor
pop
into
adc
es
stc
xor
inc
loop
mov
sbb
hlt
lds
lea
ljmp
mov
sbb
sbb
pop
call
pushf
fildl
mov
inc
mov
mov
dec
jno
push
enter
cmp
jmp
mov
ds
out
insb
js
inc
adc
mov
adc
out
aaa
test
out
daa
jae
push
cmp
hlt
sub
xchg
mov
shlb
inc
test
fldcw
mov
xchg
frndint
jg
test
fcoml
add
mov
push
shl
cmovnp
mov
repnz
iret
adc
xor
lds
repz
jge
push
cmp
push
daa
jle
or
and
dec
push
xchg
push
loop
pop
mov
aaa
fwait
mov
faddl
stc
rcr
dec
dec
cmp
dec
std
icebp
cmpb
lret
clc
out
push
mov
lods
subb
add
lods
in
enter
adc
mov
stos
lock
ja
and
xchg
imul
mov
or
out
int
mov
sahf
dec
jmp
and
and
ljmp
repz
or
and
mov
mov
add
data16
imul
xor
ficoms
ja
mov
xchg
outsl
jnp
ds
scas
jne
add
fstl
sub
cld
in
pop
or
hlt
mov
inc
fmull
pushf
sub
or
jmp
jle
lods
mov
sbb
stc
fwait
out
shrl
mov
jb
ljmp
loop
imulb
aam
mov
push
fwait
jb
imul
jg
leave
enter
sub
xor
out
fdivrs
xchg
std
jnp
or
bound
mov
ja
inc
push
sbb
imul
daa
push
outsl
mov
jns
sub
xor
jl
mov
cmp
lock
cmpsl
mov
pop
lds
lcall
xor
inc
loop
inc
hlt
push
pop
or
push
clc
mov
and
aaa
or
mov
add
jg
mov
pop
ljmp
mov
jae
or
cmpsb
repnz
jne
xchg
cmp
push
xchg
es
adc
pop
jb
jge
mov
in
dec
iret
mov
mov
adc
out
mov
push
cmp
jle
lret
arpl
xor
iret
in
add
cmpb
aam
xor
arpl
jae
adc
sub
mov
ret
lds
negb
cmp
int
cmp
or
lret
ja
xchg
sbb
outsl
sbb
pop
jo
cmp
aam
leavew
xor
scas
add
test
mov
aas
pop
push
repnz
dec
loope
push
or
pop
sbb
xchg
push
fsts
leave
cli
fmuls
inc
xor
ret
push
icebp
cwtl
mov
insb
jmp
lcall
or
test
mov
pusha
xchg
mov
out
orl
cmc
mov
xor
js
jge
andl
inc
outsl
dec
nop
cmpsl
push
mov
sbb
mov
test
mov
test
jne
les
push
inc
inc
sbb
mov
rcll
shll
shll
mov
jae
rolb
cs
out
dec
roll
add
jnp
mov
push
cmp
iret
aam
movsb
jl
mov
insb
loop
repz
push
add
mov
test
ljmp
lods
jp
cmp
push
cwtl
jecxz
push
inc
pop
ret
je
scas
cmp
pop
adc
cmp
rol
lods
imul
or
xor
ret
cmp
push
rcrl
mov
push
jo
fidivs
jno
jg
jns
pop
sbb
imul
push
iret
push
dec
aas
mov
mov
push
xchg
cmp
shl
dec
ret
adc
cli
jp
jp
lcall
cltd
mov
inc
adc
xchg
mov
sahf
hlt
scas
mov
in
sub
mov
jl
in
shr
lahf
lods
loopne
sbb
jno
shrb
out
cmc
push
push
mov
xchg
jl
repz
mov
push
cmp
mov
cltd
sub
aas
mov
mov
insb
jp
jo
dec
mov
mov
aas
rol
jbe
movsb
mov
data16
movsb
push
into
mov
dec
mov
xchg
cmpsb
push
push
out
arpl
fistpll
dec
cmp
xlat
mul
imul
stc
adc
adcl
inc
xchg
mov
arpl
insl
inc
loop
cmp
xchg
aam
shrb
icebp
repz
lret
mov
xchg
sahf
adc
je
sub
into
sbb
lret
ret
test
fsubrp
addl
call
loop
fnstenv
pop
dec
inc
gs
imul
or
mov
add
bound
out
sti
sub
shrl
arpl
imul
sub
mov
iret
cmp
adc
jnp
jmp
inc
pop
add
push
xchg
add
add
push
cs
push
fistpll
dec
push
fsubrl
fisubrl
or
test
or
pop
mov
or
push
push
stc
jp
pop
push
in
or
or
adc
inc
mov
adc
std
dec
sub
ltr
out
push
lods
add
sub
call
xchg
fnstsw
cli
aam
out
adc
mov
loope
xchg
add
push
ds
sbb
fistpl
pop
jmp
jns
inc
cltd
bound
jo
faddp
mov
mov
out
sbb
xchg
imul
out
or
or
fisubl
jge
es
adcl
addr16
ret
ds
scas
jbe
fsts
sub
fwait
jmp
setne
dec
ljmp
popf
pop
fs
and
stos
cmp
movsl
repnz
sub
ss
out
and
adc
leave
out
icebp
int3
cwtl
mov
pushf
push
negl
xor
xchg
jmp
gs
ss
inc
iret
mov
pop
mov
mul
jecxz
and
sub
jnp
popf
pop
jns
push
mov
push
test
mov
loope
push
jae
pop
dec
push
fstp
not
out
sub
inc
shrl
jns
loopne
cmp
popf
int
lods
sahf
adc
jle
mov
es
shll
mov
inc
or
mov
xchg
mov
pop
sub
mov
mov
shl
mov
push
xchg
popa
aam
mov
das
pop
jle
jae
cmp
dec
xchg
jno
push
and
fiaddl
pop
loop
push
cmpsl
dec
cld
pop
sub
bnd
ja
mov
jno
jo
inc
popl
push
ds
sahf
push
insb
testl
and
adc
or
fxch
imul
xor
push
loopne
or
jnp
fwait
leave
push
fsubl
rol
mov
or
mov
mov
dec
or
movsl
daa
mov
pop
cltd
push
or
jno
stos
popa
rol
push
jo
adc
enter
call
loope
out
nop
xchg
jb
xor
std
fwait
int3
lods
ret
cmp
lret
stos
mov
fcmove
pop
mov
xchg
fldenv
in
test
popa
mov
lret
arpl
mov
cmpsb
pop
push
je
mov
sub
repz
or
icebp
xchg
lret
insl
xchg
and
cmp
insb
dec
inc
mov
das
push
and
and
inc
push
mov
sbb
jl
adc
cmp
dec
xchg
lods
ss
cli
stos
ror
lds
pop
and
pop
adc
inc
dec
sbb
jmp
sub
xchg
lds
mov
push
mov
lds
sbb
xchg
mov
out
xchg
fldcw
dec
sub
jne
lock
movb
aad
les
negb
cmp
aaa
mov
mov
push
ds
or
ret
cmpsl
jbe
adc
in
inc
push
mov
xor
cli
bound
jl
push
pop
fwait
out
in
xchg
repz
xchg
sub
xor
cmp
int3
inc
cmpsl
adc
das
xchg
push
add
cmp
xchg
and
es
das
pop
or
cli
cmpsl
add
jne
jmp
dec
imul
cmp
sub
cmp
dec
sbb
ret
mov
aaa
repnz
std
ds
dec
adc
insl
jmp
and
mov
loopne
pop
xchg
or
mov
daa
imul
popl
mov
sbb
sarl
outsb
xchg
jp
sahf
mov
test
movsb
test
push
ret
or
scas
cwtl
inc
push
cmc
jl
sub
sub
aas
jne
out
int3
push
mov
pop
addr16
mov
in
cld
cwtl
and
add
sbb
aad
loop
aas
sub
mov
lret
movsl
mov
cltd
cmp
or
mov
adcb
lock
popf
aad
jnp
push
enter
adc
inc
addr16
fisubrl
dec
test
sub
fiaddl
push
xchg
sbb
inc
push
and
dec
repnz
and
cmpsl
push
mov
dec
mov
js
inc
call
jns
or
xor
sub
pushf
popf
pop
adc
adc
cmp
test
arpl
out
add
cmpsl
inc
jmp
pop
mov
int
addb
fwait
pop
aas
ss
divl
push
dec
sahf
test
rclb
add
call
iret
jmp
repnz
cmpb
jp
iret
insb
lahf
arpl
popa
mov
mov
mov
adc
fcmovb
mov
pop
or
gs
aas
xor
xor
jl
inc
sbb
aas
popa
cmp
push
pop
jo
xchg
inc
push
sbb
je
jge
cli
adc
xchg
jo
or
popf
aam
inc
loop
into
sti
sub
shl
xor
xor
dec
mov
nop
inc
add
mov
lret
xor
ja
jle
push
movsl
inc
lods
popf
in
scas
lret
lret
fucomip
jl
out
mov
clc
mov
imull
adc
and
jbe
cmp
xor
mov
fstpl
hlt
rorb
or
clc
out
sbb
dec
cld
enter
scas
cmpsl
enter
aas
sbb
xor
cmp
push
out
js
dec
es
loopne
lea
or
mov
jecxz
cmpsl
out
dec
mov
testb
call
inc
test
jg
js
cmc
cmpsb
push
into
adc
xor
adc
arpl
ljmp
sub
inc
mov
or
test
fcoms
pop
inc
adc
xorb
fiaddl
sub
push
outsb
test
inc
out
lods
out
pop
addb
pop
cmp
add
in
jne
cld
loope
mov
rorb
jb
hlt
add
and
or
cmc
adc
xchg
inc
jg
mov
lret
jae
je
or
xchg
std
adc
fstpt
dec
and
js
push
push
cmp
jmp
mov
mov
and
fwait
das
pop
rsm
sub
mov
add
xchg
sahf
popa
cs
add
leave
dec
sub
or
testb
push
ss
lcall
jb
push
iret
ja
js
sub
sub
mov
in
mov
xor
xor
jp
popl
insb
test
mov
jne
push
inc
add
pop
call
movsb
add
sub
popa
xor
je
cs
notb
dec
js
xchg
sub
push
fisttpll
daa
orl
hlt
jmp
mov
js
fistl
scas
pop
imul
push
out
pop
std
addr16
in
add
jns
or
xchg
pop
repz
push
dec
push
mov
push
jg
mov
sub
push
push
mov
and
dec
mov
cltd
fstpt
ret
jo
mov
psubsb
xlat
mov
jae
test
xchg
sub
iret
mov
pusha
pop
lods
sbbl
ja
inc
es
mov
adc
mov
cli
and
les
mov
sbb
shll
pop
mov
sbb
sbb
xchg
repnz
dec
movsl
insl
je
mov
add
es
mov
sbb
outsb
mov
pop
test
imul
rorb
lock
xchg
and
mov
adc
js
add
add
stc
mov
dec
sbb
jecxz
fs
pop
sub
leave
js,pn
push
ret
cmp
push
shrl
cmpl
cmp
add
sub
push
mov
push
fcompl
mov
leave
in
test
addr16
and
cmp
je
push
icebp
jns
lea
push
movntps
popa
push
or
and
sbb
fdivr
and
imul
dec
lahf
outsb
xchg
repz
cs
movsb
int
daa
nop
xchg
dec
int3
adc
sbb
xor
inc
xorl
xchg
xchg
mulb
dec
repnz
sbb
popa
cmp
dec
lret
pop
cli
test
cld
enter
pop
cmp
sub
rorb
fbstp
xchg
xchg
test
cs
xor
sti
lcall
shll
xchg
in
push
sarb
jae
imul
gs
int
mov
negl
nop
loope
dec
mov
add
xor
mov
out
in
cld
push
out
sub
in
arpl
into
xor
pop
divl
pushf
outsb
sub
add
or
addr16
sub
add
dec
mov
push
je
xchg
adc
in
sub
inc
push
mov
jne
mov
add
or
lcall
divl
dec
cmp
int
bound
lret
lea
into
mov
cmp
and
nop
repnz
les
mov
sub
mov
inc
mov
cmp
loopne
lcall
in
lret
repz
and
adc
aad
mov
fldl
out
dec
inc
mov
xor
out
int3
xor
mov
popl
orb
sub
adc
jno
lods
jg
inc
lea
in
testl
mov
sbbl
mov
pushf
pop
lock
and
inc
sub
adc
xchg
dec
cli
pusha
test
or
sub
and
fsts
imulb
mov
push
shl
add
and
jmp
mov
pop
in
sbb
or
dec
fists
cli
lcall
insl
je
mov
jb
cli
lods
ucomiss
in
lahf
out
adc
test
gs
imul
xchg
neg
xor
icebp
sub
pcmpeqb
push
data16
cmp
test
rcr
in
pop
in
mov
cld
fidivrs
sub
mov
nop
push
fisttpll
adc
pop
mov
or
in
sar
in
lods
fbstp
mov
mov
adc
std
clc
data16
mov
ljmp
jl
ret
xchg
out
xchg
mov
jno
push
mov
xchg
adc
jbe
xchg
mov
push
inc
mov
insb
xlat
test
lds
xchg
dec
jne
lock
mov
pop
int3
xlat
pslld
mov
push
fbstp
sahf
stos
xchg
icebp
sub
mov
and
cmp
hlt
stc
or
loop
bound
sub
add
lods
cmpsb
jg
cmpsl
ljmp
sbb
inc
lret
cmpsl
mov
or
out
nop
stc
and
cmp
add
mov
jecxz
or
jns
push
int
pop
adc
xchg
jecxz
icebp
add
into
pop
cmpsb
test
cmp
sbb
es
push
inc
xchg
cld
pop
ja
jne
orl
jg
pop
mov
adc
outsb
sub
dec
mov
and
aaa
outsl
mov
push
push
push
mov
xor
iret
push
popf
xchg
lret
test
xchg
fxtract
mov
iret
lret
sti
xor
in
add
mov
jae
dec
mov
xor
insb
mov
sub
push
xor
xchg
hlt
lret
xchg
outsb
cmp
ss
push
xor
cmpb
popf
aad
lods
push
jae
gs
es
and
idivb
pop
adc
shrl
push
dec
cwtl
ss
sbb
fistpl
mov
xor
mov
in
adcl
xchg
or
jg
cmpsb
jno
icebp
pop
out
outsl
inc
inc
or
sbb
xchg
push
mov
je
pop
enter
add
and
fisubrl
in
push
mov
xor
mul
pushl
add
dec
out
mov
cmc
or
cmp
or
add
jg
gs
or
pop
add
add
shrl
sub
lock
pop
rep
popa
aad
jae
inc
mov
cmc
xlat
sub
lcall
orl
mov
les
and
add
xchg
jge
leave
gs
loope
addr16
bound
jne
sbb
scas
fdivp
xor
adc
in
lcall
inc
je
adc
inc
lahf
in
push
xchg
pop
xor
mov
std
and
xchg
int3
sbb
roll
adc
mov
test
mov
imul
dec
push
sub
pop
jbe
and
movsb
jb
jae
push
lcall
adc
sub
jge
and
jne
leave
insb
cmpsb
loopne
pop
jg
mov
xchg
dec
xchg
fiaddl
mov
jle
fs
sbb
sbb
adc
and
or
dec
sbb
pop
or
lock
add
pop
adc
add
stc
pop
pop
xor
sbb
pop
inc
andb
pushf
stos
sbb
add
cmp
aad
sub
pop
into
add
push
cmpsb
in
inc
ja
dec
adc
fcmovbe
insl
xlat
es
add
adc
push
mov
or
xor
cmp
js
or
fisttpll
mov
loope
pop
and
sbb
jge
cld
scas
insb
sbb
ret
fiaddl
and
sahf
sar
fidivs
adc
pop
xchg
dec
and
fidivs
rcrb
inc
inc
lret
xorb
push
pop
push
dec
xor
dec
movsl
jg
rclb
xchg
nop
sub
stos
fcompl
jmp
mov
popa
jns
pop
test
es
lahf
cmp
pop
cmp
imul
les
cmc
arpl
mov
pusha
sbbb
push
outsl
leave
repnz
sub
outsl
sahf
push
mov
mov
fmull
loopne
or
mov
sbb
subl
jae
push
notb
je
and
mov
xchg
sbb
add
in
stc
sahf
ds
out
daa
mov
aad
cmp
lea
pop
popf
ret
popa
pop
lcall
sub
subb
inc
inc
insl
dec
push
xor
xor
lods
sbb
mov
ss
cmp
faddl
push
lgdtl
xor
imul
mov
xchg
lcall
xchg
out
pop
mov
stc
and
jnp
and
xchg
xor
sti
inc
pushf
int
cmp
inc
dec
cs
jo
fcoml
fwait
test
mov
add
dec
mov
xlat
add
mov
test
out
in
cld
jb
lock
mov
and
out
repz
push
xchg
or
fdivs
rorl
cmp
xchg
lcall
xor
in
jae
lahf
fnstsw
pop
push
pop
pop
insl
pop
push
aas
xchg
movsb
jl
mov
ret
fs
stos
ret
xchg
stos
jg
inc
cmp
es
lret
mov
inc
xchg
jge
and
sub
or
fistpll
stc
dec
jbe
sub
xchg
sbb
mov
add
xor
out
cmp
xor
stc
cmp
repnz
sub
jp
add
les
push
scas
jae
dec
in
fistpll
sbb
sub
clc
fimuls
sbb
dec
jb
shr
stc
dec
adc
and
and
rol
sub
sub
jno
and
js
mov
out
in
dec
dec
mov
mov
adc
imul
out
fistpl
mov
lcall
ss
insb
mov
push
cmp
xor
in
jb
jecxz
mov
pushf
adc
mov
cmp
xchg
lcall
ficomps
cmpsl
test
jbe
arpl
mov
and
scas
cmpsl
adc
rcll
jmp
adc
fcoml
jg
ret
xlat
cltd
lret
das
pusha
aam
jno
xor
out
inc
leave
xor
std
dec
xlat
pop
jbe
xlat
outsl
insl
aaa
int3
aam
xchg
mul
dec
mov
loop
scas
add
jle
fs
jns
or
add
add
push
xchg
fistpl
jns
ds
xlat
out
inc
or
sbb
repnz
cltd
and
arpl
in
es
sub
inc
push
cli
sub
test
sub
mov
lods
and
sbb
icebp
lds
mov
gs
ljmp
or
sub
pushf
xchg
std
scas
data16
in
jmp
sub
mov
bound
loopne
dec
pop
or
in
test
jae
lds
jg
fnstcw
mov
jne
dec
and
push
cmpsl
mov
and
sub
jmp
sbb
and
ret
jle
sub
nop
mov
je
and
inc
insb
test
cmp
movsl
inc
cld
and
jb
out
mov
push
pusha
pop
stos
into
sub
adc
inc
insl
ret
dec
sbb
fiaddl
mov
int
mov
push
add
dec
lret
jno
je
cmp
bound
mov
pop
popf
jnp
repz
dec
xchg
or
add
add
jg
sbb
sub
sbb
loop
jl
mov
jae
or
ror
xor
cmp
subl
repz
js
mov
and
scas
cmp
and
mov
sti
mov
pop
outsl
not
ljmp
add
sbb
adc
stos
lcall
add
jp
cld
mov
pop
hlt
jns
jge
xor
ret
lret
js
or
adc
mov
scas
push
add
mov
stos
mov
stc
cmpl
icebp
jmp
mov
lock
dec
mov
shrb
jb
clc
pushf
inc
stos
idivl
jae
test
push
es
xlat
inc
shlb
scas
sti
xor
pop
dec
les
and
fwait
xchg
rclb
cmp
dec
imul
pop
dec
mov
mov
xlat
and
jb
cmp
data16
stos
nop
xor
cmpl
sbb
adc
ja
ljmpw
xchg
cmp
stos
pop
push
imul
cmp
lock
pusha
push
add
sbb
or
shrb
outsb
mov
dec
cmp
cmp
lock
or
cmpsb
cmpsb
loope
jno
jge
test
incb
jns
push
gs
mov
and
scas
out
in
pushf
add
pop
repnz
in
ficomps
adc
inc
test
inc
outsb
jo
xchg
xchg
jp
inc
sbb
xor
scas
jg
mov
xchg
adc
test
jnp
imul
shll
int
xchg
xchg
movsb
sbbl
sbb
sbb
dec
lods
out
int
add
cmp
jb
add
add
cli
je
lret
xlat
shlb
inc
and
outsl
js
xchg
xchg
test
sbb
pusha
orb
xchg
pop
inc
nop
fldl2t
adc
sub
sbb
inc
lahf
xor
mov
in
sahf
test
xor
loopne
and
repnz
jge
push
sub
push
jo
lret
fstl
hlt
mov
inc
clc
mov
xchg
rclb
loopne
popa
and
aam
daa
add
cmpl
mov
aas
push
pusha
fs
aas
cmp
push
cmp
js
popf
pop
sub
xorb
insb
test
push
out
mov
fstps
dec
lods
arpl
pop
loopne
scas
push
fcom
mov
mov
mov
imul
jge
fwait
sub
jp
adc
push
arpl
xchg
lods
fsubl
andb
fcomps
mov
mov
xchg
sub
push
inc
insl
sti
fmull
add
and
leave
push
mov
mov
dec
xor
test
in
insl
mov
imul
jmp
lcall
pop
cmp
dec
and
inc
xor
test
or
inc
xor
cmp
push
das
add
adc
jo
sarb
int
cli
les
scas
es
mov
mov
push
mov
cld
mov
lret
incb
add
sbb
fsubl
ljmp
fisubs
jge
sbb
jl
stos
insb
lret
imul
sub
inc
mov
cmpl
sbb
test
pop
mov
cmp
add
adc
dec
cmp
push
psubusb
mov
xor
xchg
sub
sub
aam
cmp
out
push
notb
push
jbe
xor
iret
out
bound
xchg
sub
adc
mov
mul
adc
in
imul
jns
adc
mov
jecxz
ljmp
add
sub
add
and
add
lods
shr
cltd
mov
out
jo
mull
xchg
lahf
lret
xor
sbb
es
mov
mov
adc
jge
add
mov
int
and
inc
fiadds
jbe
xor
or
cmpsb
jno
pop
mov
add
sub
push
sbb
mov
add
push
mov
negl
jae
mov
and
or
loope
and
sbb
cmp
mov
adc
jle
cld
pusha
pop
push
or
enter
aaa
push
dec
lds
nopl
mov
orb
shrl
pop
and
negb
stos
pop
jle
stos
lret
shrl
lret
pusha
mov
or
je
movb
pop
popf
movsb
and
in
scas
gs
lods
rcll
aas
clc
pop
hlt
mov
jg
test
jmp
inc
roll
dec
outsb
rolb
sub
pop
mov
and
add
hlt
jb
loopne
jge
xchg
xchg
cltd
sbb
sub
jecxz
and
pcmpeqb
xor
or
repz
mov
push
test
cltd
or
push
cmp
push
jmp
mov
shrl
pop
pop
xchg
ret
push
mov
pop
aaa
mov
add
mov
xchg
loop
mov
lds
js
repnz
mov
popf
cmp
xchg
mov
scas
shll
cli
ds
iret
mov
xchg
dec
bound
push
pop
notl
lock
add
idivb
sub
xchg
xchg
pop
push
push
cmpsl
jle
sub
xchg
mov
jne
fcoms
lock
dec
jp
int
mov
push
repz
mov
inc
add
sarb
mov
outsl
push
mov
testl
popa
dec
add
jg
je
sahf
repz
mov
fiadds
repnz
pop
adc
mov
sub
nop
lea
jp
jnp
sar
insb
sbb
sbb
daa
xchg
push
icebp
jnp
outsl
int3
fmuls
mul
pop
fcoms
lcall
cltd
out
and
jne
aad
int
cld
in
inc
inc
push
jecxz
mov
lret
jae
inc
jbe
push
xchg
inc
mov
xchg
pop
and
cli
repnz
xchg
pop
dec
xchg
sub
jl
push
adc
adc
iret
mov
sub
mov
adc
xor
fs
mov
mov
sbb
pushf
int3
pop
xor
sub
add
std
jmp
dec
notl
pop
xchg
test
lods
xchg
insl
sbb
sub
idiv
xchg
lretw
leave
adc
inc
push
cmp
jecxz
mov
and
test
xchg
adc
pushf
xchg
test
lods
pop
push
out
push
hlt
ljmp
or
je
sbb
sub
adc
test
lods
mov
scas
jb
adc
pop
mov
add
sub
and
cmpl
push
cmp
pop
outsb
mov
bound
pop
mov
std
jge
or
shll
push
mov
push
ja
push
push
cmp
pop
mov
sub
adc
arpl
or
or
mov
add
inc
xchg
in
mov
mov
hlt
sub
pop
xchg
add
dec
cmpsl
inc
add
add
popl
or
stc
cmp
sarb
push
or
cmc
fcom
inc
xlat
add
movsl
fistpl
lds
dec
scas
fmull
mov
addb
jb
out
sub
leave
andl
scas
ljmp
lahf
mov
adc
mov
jge
ret
test
iret
daa
dec
cmp
xor
cmp
cmpsb
mov
in
in
roll
push
inc
popf
sbb
inc
or
sbb
sbb
outsl
push
gs
lahf
fisubs
mov
fidivrs
aaa
cmp
mov
test
mov
push
add
inc
sbb
clc
mov
adc
push
les
cltd
arpl
dec
jns
adc
popf
outsb
jge
inc
adc
stos
xorl
int
jl
sbb
inc
inc
insl
pushf
inc
inc
std
cmpsl
and
inc
sub
imul
loope
xor
mov
mov
pop
inc
jbe
xchg
and
in
ss
push
jno
lods
lret
adc
daa
push
and
xor
mov
stc
dec
testb
bound
repz
pushf
imul
in
aaa
cltd
or
enter
outsb
ret
fiaddl
ret
iret
jecxz
mov
push
adc
pop
xchg
cmp
xchg
subb
dec
pop
rcl
insb
roll
dec
xor
push
aas
add
addr16
pusha
xchg
mov
pushf
sub
into
pop
stos
or
std
xchg
arpl
call
mov
movsb
sbb
aas
je
and
popf
iret
sub
or
pop
or
or
popa
mov
dec
or
aaa
je
mov
lcall
popf
rolb
cmpsl
nop
push
ja
cmpsl
ret
fiadds
in
into
jle
stc
cvtpi2ps
push
mov
sbb
out
xchg
test
xchg
sahf
addr16
popa
es
pop
cmp
xchg
shl
inc
iret
mov
fcoms
add
shll
add
cld
mov
and
std
shrl
cwtl
add
in
pop
add
sub
inc
jo
mov
movl
int3
arpl
rorl
inc
rcrb
push
mov
nop
or
cltd
sbb
push
fstps
xchg
outsb
cmp
pusha
mov
xchg
call
rcrl
rcrl
and
sbb
and
and
lods
aam
aad
int3
add
stos
mov
test
jnp
loopne
mov
lret
mov
fdivrs
or
shrl
pop
xor
mov
shlb
xchg
lods
int
in
in
cmc
rorl
cli
sub
dec
int
roll
dec
mov
cmp
call
leave
fwait
out
ret
js
sub
jne
mov
outsb
add
add
and
xor
sbb
inc
mov
pushf
rclb
inc
fs
push
popf
fnstcw
bound
push
sbb
cld
popf
cmp
ret
inc
jge
ret
xor
lds
imul
push
test
or
int3
incl
xchg
out
pop
fidivrl
testl
sahf
in
data16
test
inc
dec
add
or
sarb
loope
sbb
fdivr
in
data16
mov
dec
mov
fs
scas
mov
fs
xor
mov
ja
jl
sahf
scas
lea
call
mov
mov
and
push
push
pop
enter
push
test
std
jb
sahf
rcl
cld
mov
repz
jns
pusha
pushf
mov
cmp
mov
out
push
xchg
sti
ja
dec
insb
inc
jp
jo
cmpsl
add
xlat
mov
cs
pop
cmpsb
mov
mov
popf
out
cmpsl
or
in
mov
xor
fsubl
fcomip
jecxz
pop
cmp
inc
ljmp
push
sti
fwait
js
sub
mov
std
imul
mov
sbb
idivl
repnz
sub
and
cwtl
out
dec
push
xchg
shr
arpl
gs
ret
fldenv
icebp
test
inc
xchg
in
xchg
outsb
mov
int
out
lea
mov
std
ljmp
pop
inc
bound
fdivrs
adc
popa
add
gs
add
orb
fwait
xlat
arpl
movsl
je
mov
sbb
arpl
xor
xchg
out
xchg
les
je
div
inc
leave
cmp
xor
or
ljmpw
arpl
mov
jne
jecxz
out
fcom
fdiv
inc
mov
jmp
push
mov
mov
addr16
adc
sub
xchg
mov
push
ret
test
sub
pop
popa
sti
push
aaa
shlb
call
jb
push
adc
dec
loopne
push
jnp
dec
dec
xchg
mov
lahf
jecxz
lods
add
hlt
sbb
dec
xchg
test
jbe
test
ss
aas
int
imul
test
xchg
sti
sub
mov
sbbl
es
inc
or
or
fidivs
mov
jb
ljmp
addb
les
inc
stc
add
outsb
arpl
or
es
add
and
stos
pushf
mov
xor
mov
push
test
clc
sbb
in
jo
xchg
sub
pushf
sbb
cs
mov
fsubs
sub
mov
outsb
lea
fildll
mov
cmpsl
xchg
call
ljmp
mov
test
mov
xor
xchg
push
inc
dec
stos
pushf
out
repz
scas
push
cmpsb
push
rcr
leavew
push
adc
ds
xor
or
xchg
into
rol
aam
mov
sub
push
pusha
fwait
adc
clc
scas
xor
xor
fsubrl
adcb
fs
mov
adc
jae
fsubl
out
push
lahf
pusha
dec
outsb
dec
mov
out
mov
or
repz
stos
and
cltd
enter
stos
ret
jge
xchg
cmc
sbb
les
mov
roll
inc
iret
mov
outsb
sbb
mov
stos
test
loop
dec
xor
pop
in
dec
jg
and
ret
hlt
cld
cmp
push
faddl
jae
insl
jne
xchg
jg
mov
fwait
ljmp
xor
mov
sbbl
pusha
mov
push
sbb
xor
dec
clc
std
js
push
jbe
stos
cmp
cmp
icebp
inc
push
or
mov
jno
jne
dec
push
scas
in
scas
insb
add
ss
fnsave
pushf
aas
cmpb
or
mov
pop
or
dec
mov
mov
or
clc
jecxz
andb
xchg
sbb
push
je
test
sbb
push
xchg
sahf
jns
mov
and
push
sar
add
jmp
push
adc
mov
movsl
push
inc
cmp
sub
xchg
mov
mov
inc
pop
in
stos
dec
cwtl
ret
cmp
stc
sub
pop
fisubl
adc
pop
outsb
pushf
xchg
dec
ss
or
stc
in
adc
in
fildl
jno
push
sbb
sub
pushf
lahf
and
insl
and
shlw
ljmp
jns
xchg
or
jmp
leave
pop
push
push
jae
adc
jae
pop
outsl
data16
repnz
mov
insb
add
cld
repz
xchg
cmpb
shll
adc
ret
loope
in
mov
jg
cmpb
adc
pop
inc
das
pushf
dec
push
and
stos
dec
sbb
sbb
push
rol
rorl
notb
inc
addr16
int3
and
push
rol
push
into
cmp
mov
adc
and
out
rcll
inc
fdivl
xor
mov
pop
subb
xchg
mov
lcall
jnp
es
jecxz
cmp
call
sbb
fstpl
dec
es
mov
mov
incb
cmp
fneni(8087
push
rolb
xchg
fmul
fs
add
test
aas
in
fsubrl
push
xchg
adc
pop
loop
inc
scas
sti
pop
popa
adc
lock
cmpsb
rcll
sbbl
jb
out
loopne
lods
arpl
stos
gs
sub
jge
and
xchg
dec
repz
repnz
sbb
js
or
mov
imul
dec
fnstcw
push
nop
pop
mov
push
inc
or
add
icebp
movl
or
mov
jle
call
cmp
xor
pop
imul
nop
call
or
lret
or
js
ret
rcl
popa
inc
cmp
out
add
das
cwtl
fdivl
mov
outsl
add
mov
pop
fadds
vfrczps
xchg
push
nop
test
push
repnz
jg
jmp
add
mov
push
lods
add
dec
push
sub
test
push
sbb
jp
test
mov
js
inc
mov
fistpll
xchg
push
mov
adc
scas
in
xchg
sub
rcr
cld
loopne
shlb
cmp
jecxz
mov
lcall
pop
add
mov
ret
xor
cld
xchg
std
cmc
lret
repnz
or
aam
cmc
daa
sbb
rclb
pop
sbbl
adcb
movsl
add
lcall
neg
cli
xchg
std
and
push
out
jae
cmp
in
pop
jno
jg
leave
mov
repnz
inc
stos
or
lahf
cs
mov
lock
sbbb
stos
movl
jmp
aad
movsl
mov
xlat
inc
scas
mov
mov
rorb
inc
popf
push
pusha
sbb
ljmp
out
adc
dec
sbb
aad
int3
sub
mov
scas
inc
or
jg
mov
fs
pushf
adc
lret
gs
sahf
stos
push
add
aad
xor
loop
test
lret
mov
inc
pop
add
adc
inc
add
test
je
popf
sbb
sub
es
repnz
xor
mov
jbe
sbb
das
and
pop
in
or
push
jmp
popa
xchg
or
les
icebp
lcall
pop
outsb
sbb
push
ficompl
pop
aam
jle
adc
add
dec
loopne
pop
pop
or
adc
pop
insl
gs
xchg
pop
stos
sub
jmp
hlt
es
sub
ss
ficoml
and
inc
and
xchg
adc
mov
sub
xchg
xchg
mov
xlat
mov
jnp
in
mov
mov
inc
outsl
mov
int
pop
xchg
popa
sub
xor
call
xchg
imul
arpl
jl
ret
lods
sbb
out
in
inc
mov
leave
fisubl
stos
roll
mov
jae
int3
mov
daa
jno
outsb
test
sub
rolb
pop
out
pop
hlt
test
lods
mov
sub
push
mov
clc
and
fs
sbb
xchg
or
cli
sbb
xchg
cmp
xchg
mov
push
dec
add
push
jns
add
mov
pusha
scas
pop
bound
jg
inc
inc
lret
mov
cmp
hlt
rcl
cmp
or
cld
mov
mov
jnp
dec
ret
and
js
xlat
fists
or
cld
xchg
cmp
inc
enter
lods
mov
adc
lret
iret
out
loope
sbb
add
mov
mov
mov
mov
jg
sub
mov
add
and
jg
pop
lahf
jmp
nop
xchg
push
dec
sbb
clc
ljmp
test
cmpl
lcall
clc
sahf
xchg
sbbb
fs
or
dec
fld
daa
add
imul
lcall
aam
cli
dec
and
popf
xor
test
mov
es
or
pop
xlat
push
test
dec
addr16
les
xchg
sti
push
imul
xchg
sbb
sbbl
mov
sub
data16
mov
cmp
rolb
add
inc
jge
xor
aam
sbb
xchg
mov
jp
insl
jge
mov
test
stos
daa
cmp
pop
js
call
test
gs
cltd
jbe
inc
adc
ret
lock
mov
fcmovnbe
ja
push
fsubr
shll
stc
outsl
jns
or
mov
scas
test
test
stos
fwait
mov
cmp
mov
fcoms
lods
pop
sti
jg
lods
add
in
lea
push
jns
int3
add
mov
xor
insl
loopne
ret
stc
add
cltd
jb
mov
movq
int
arpl
mov
fadds
lcall
jge
xor
jmp
xlat
sbb
rclb
mov
je
push
in
and
out
bound
sub
hlt
fisttps
jne
add
and
mov
inc
insb
inc
or
gs
sbbb
add
push
jae
pop
mov
push
addr16
test
in
jns
dec
out
aam
loop
sti
popa
imul
jmp
cmp
movsl
mov
sub
jg
push
scas
outsb
and
pop
in
clc
ss
outsl
adcl
push
dec
inc
add
inc
inc
pop
scas
adc
xlat
mov
jne
adc
subl
outsb
jae
js
and
inc
pop
aam
addr16
out
orl
mov
adc
mov
push
sahf
in
or
fwait
movsl
pop
jo
mov
jp
inc
push
test
rcll
adc
test
andl
les
add
sbb
or
add
cmp
rcrl
dec
arpl
mov
es
mov
out
mov
sub
mov
adc
nop
pop
jne
hlt
inc
xchg
xchg
fcmovnbe
add
ret
jle
lcall
call
mov
or
mov
addr16
xor
fimull
inc
fistps
pop
nop
inc
popf
int
or
push
out
fcomps
xor
push
sub
rorb
mov
sub
sbb
stc
fcmovnbe
rol
fwait
push
cmc
testb
movsl
cmp
add
in
cmpsl
lods
mov
pop
mov
mov
and
mov
hlt
add
mov
push
aad
pushf
and
sbb
out
outsl
mov
imul
daa
int3
pop
mov
cltd
jo
xor
jmp
or
inc
imul
fisubs
arpl
in
clc
sub
cmp
fisttpl
js
lahf
adc
imul
into
mov
push
jle
loopne
daa
imul
cmp
or
mov
mov
or
jle
lods
loopne
ficoml
and
mov
lods
fcmovnbe
xlat
jne
mov
mov
stos
or
aad
inc
or
sbb
inc
mov
test
loope
push
enter
mov
cmp
or
jae
outsl
jne
lcall
test
or
mov
mov
cmpsb
mov
shrl
loopne
push
mov
push
ss
adc
int3
pop
cmp
push
std
jne
ret
mov
ret
sub
pop
mov
aad
sbb
cld
pusha
cmpsb
fs
dec
pop
mov
loope
adcb
and
bnd
pop
popa
adc
clc
fcompl
out
mov
sub
mov
xchg
pusha
lret
mov
inc
add
pusha
test
mov
into
mov
gs
lret
popa
imul
pop
sahf
imul
mov
xchg
ret
mov
xchg
lods
nop
dec
xchg
scas
cltd
push
jne
lods
mov
mov
aad
daa
mov
adc
jbe
scas
add
test
xlat
movsl
dec
daa
repnz
add
push
push
sbb
insl
inc
arpl
cwtl
xlat
sub
cltd
jne
sub
call
cmp
xlat
xlat
push
js
pushf
sbb
out
xchg
jnp
xchg
loop
pop
inc
test
xchg
imul
popf
jns
mov
cmp
lods
xor
or
aam
movsb
xchg
popf
inc
in
sub
mov
mov
ret
ret
mov
add
sub
adc
jae
xchg
push
mov
mov
outsl
incb
mov
or
and
xor
jne
das
inc
lret
jmp
push
movb
mov
lret
fmull
xchg
lcall
orb
je
push
inc
ss
xor
sub
adc
es
ja
lods
pop
lcall
iret
int
pop
and
jmp
or
imul
hlt
add
ret
sbb
xchg
ret
es
aas
push
cs
cmpsb
scas
dec
pushf
mov
ds
or
mov
cmpsl
pop
dec
mov
clc
add
inc
jl
dec
ds
cmp
ret
das
adc
arpl
inc
mov
outsb
push
ficompl
lds
adc
and
hlt
inc
jge
data16
nop
xchg
fidivrl
adc
es
ja
jns
add
aam
out
int
shll
repz
pop
mov
mov
and
adc
out
in
cmp
pop
mov
sbbb
jb
jl
add
test
push
push
sub
inc
repnz
push
dec
aam
mov
xchg
outsb
aaa
xor
and
jae
mov
sbb
mov
dec
jp
xchg
fldl
push
repz
mov
or
xor
hlt
pop
lsl
loope
xor
push
cmpsb
sub
sti
add
add
frstor
js
and
cmpsl
mov
outsb
rcrb
lock
ffree
imull
mov
call
sbb
in
sbb
pop
pusha
push
fidivrl
das
ret
jmp
mov
sub
cmp
mov
test
rolb
xor
push
jg
add
std
adc
mov
es
test
mov
adc
pop
xchg
sub
je
inc
mov
jb
and
ds
cli
xor
data16
ljmp
cmpsl
mov
sbb
jp
test
adc
jbe
fldcw
pusha
adc
or
sub
dec
inc
jge
dec
cs
out
das
xchg
adc
subb
jle
int3
xchg
inc
out
sub
jne
xlat
inc
daa
test
xchg
add
jl
pop
sbb
leave
movsl
sub
and
into
test
xor
push
jmp
xor
and
xchg
dec
pop
cmp
cmp
add
jle
jg
mov
test
loope
repz
loopne
push
leave
daa
fnstcw
loope
pusha
cmpsb
mov
cli
mov
enterw
jmp
sbb
