jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
into
inc
add
or
mov
mov
mov
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
jns
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
roll
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
cmpsb
inc
add
cmp
ret
outsb
or
push
jno
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
repz
shr
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
pushf
mov
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
iret
into
inc
add
decl
dec
and
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
lods
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
add
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
add
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
add
xchg
adc
mov
dec
and
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
xchg
mov
add
jl
je
jl
js
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
add
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
add
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
sahf
inc
add
test
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
inc
add
test
lock
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
inc
add
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
add
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
add
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
mov
rol
add
add
decl
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
movl
mov
call
test
jne
add
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
add
push
lea
call
mov
call
cmp
je
call
test
je
cmpl
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
test
je
mov
jmp
mov
test
je
jmp
mov
movl
jmp
mov
mov
and
xor
or
jne
pop
xor
pop
pop
pop
mov
pop
ret
xor
jmp
mov
add
call
ret
push
mov
sub
mov
push
lea
push
push
xor
push
mov
call
mov
cmp
je
add
lea
push
mov
mov
push
call
test
js
mov
push
mov
mov
call
mov
mov
and
mov
mov
call
mov
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
add
mov
push
push
mov
push
mov
xor
mov
mov
movl
mov
call
push
push
push
push
push
push
push
push
lea
push
mov
mov
data16
add
pop
and
mov
movl
call
cmp
je
lea
call
mov
push
push
lea
call
test
je
mov
mov
mov
push
mov
push
call
add
cmp
je
lea
mov
mov
mov
mov
call
mov
cmp
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
push
push
push
lea
push
push
lea
push
movl
mov
call
add
cmp
mov
je
mov
cmp
je
push
call
add
cmp
je
mov
movl
mov
mov
mov
mov
lea
add
cmp
lea
je
push
mov
mov
call
mov
mov
add
mov
mov
cmp
mov
je
mov
cmp
mov
je
push
call
add
mov
mov
cmp
mov
mov
je
add
push
mov
call
mov
cmp
mov
je
add
lea
cmp
jne
mov
mov
mov
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
mov
movzbl
mov
and
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
push
push
xor
call
add
cmp
je
push
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmpb
je
push
push
lea
lea
mov
call
mov
cmp
je
add
mov
mov
push
mov
call
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
lea
push
call
mov
add
test
je
mov
push
push
push
call
add
movb
test
mov
je
mov
mov
push
call
add
xor
lea
call
cmp
pop
je
pop
mov
pop
pop
add
ret
pushl
mov
mov
pushl
mov
push
call
ret
mov
mov
push
mov
add
push
call
pop
ret
int3
int3
test
je
mov
test
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
movl
call
mov
add
test
mov
je
push
push
push
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
add
mov
xor
pop
pop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
inc
pop
call
cmpl
jne
sub
add
cmp
jg
cmp
je
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
push
mov
push
cmpl
push
pop
lea
je
push
mov
sahf
mov
or
mov
push
push
push
pushl
lea
push
xor
call
mov
mov
mov
add
xor
push
inc
call
test
pop
je
mov
push
call
pusha
push
call
mov
scas
out
push
lret
add
add
scas
push
incb
add
pusha
cli
loop
imulb
jne
add
add
add
add
lret
pop
lods
mov
icebp
test
addb
push
fnstsw
xchg
imul
mov
gs
insb
aam
out
jo
add
push
add
std
add
jne
add
pushf
pop
sti
add
cltd
jmp
enter
add
loopne
add
push
add
jbe
rcll
add
add
pop
pop
aam
gs
add
add
push
lret
movb
mov
jecxz
add
imul
add
add
lcall
in
clc
mov
xchg
shll
mov
add
add
add
pop
fildl
ja
mov
add
push
push
push
push
push
push
lea
push
call
jmp
fldl
jne
xchg
mov
jnp
sahf
add
pop
loop
addr16
mov
int
shl
add
add
cwtl
add
add
fiadds
lret
add
add
rcr
add
add
add
add
jcxz
add
idivl
pop
cmpsl
in
pop
call
jmp
push
pop
lcall
add
les
inc
cld
add
add
push
push
call
pop
add
push
leave
add
lea
add
stos
filds
stos
pop
jge
add
lods
pushf
rorl
popf
jne
add
add
pop
pop
ret
jno
add
add
xorb
pop
add
nop
push
mov
add
jno
push
mov
fldt
int
mov
aam
bound
pop
popl
push
push
push
push
push
push
push
push
push
push
call
aad
mov
push
add
loope
lds
push
cli
loope
jnp
add
add
data16
lea
aam
in
add
mov
add
mov
add
imul
add
add
idivl
add
fnstcw
lret
push
add
test
add
into
add
mov
lea
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
fwait
addr16
cmpsl
scas
cmpsb
stos
add
add
jge
into
out
add
cli
push
cmpsl
sub
add
sahf
lds
fiadds
add
add
cmpsl
aad
add
out
les
add
add
jmp
lds
out
push
add
add
mov
add
lahf
add
out
je
fstpt
lcall
fstpl
sahf
push
add
lea
pop
push
push
push
push
push
push
call
xchg
add
add
icebp
add
in
add
add
push
add
mov
addw
add
in
add
cli
jnp
jnp
in
fiadds
push
add
fiaddl
add
icebp
std
std
in
add
add
mov
ja
add
mov
aad
push
movsl
add
add
mov
mov
add
in
xchg
xchg
mov
lea
pop
push
call
call
push
push
lea
push
lea
push
push
call
out
add
xchg
mov
add
mov
mov
out
mov
adc
add
add
int
add
add
add
pop
movsb
mov
rcr
pop
pop
push
lods
jne
aad
add
stos
add
fs
clc
test
popf
xchg
add
mov
pop
clc
lock
mov
push
add
in
mov
lea
pop
push
call
jmp
push
push
push
push
push
lea
push
call
add
nop
add
movsb
stc
add
push
add
push
fiaddl
test
test
mov
test
add
shll
jge
add
add
add
ja
lret
sti
jle
add
leave
mov
pop
mov
fildl
add
add
pop
add
add
int3
push
iret
jnp
jnp
pop
imul
pop
ret
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
add
push
add
mov
add
jp
add
movsl
in
jbe
test
add
xchg
xchg
cmc
testl
aam
lret
rorb
add
add
add
mov
mov
add
in
add
push
ja
cmpsb
add
pop
mov
push
jge
gs
les
inc
in
push
lea
push
push
push
push
call
jo
add
popa
add
add
test
fs
push
jb
mov
mov
mov
xlat
add
enter
add
add
add
add
pushf
add
bound
add
add
push
movb
into
add
add
xchg
je
lahf
movsl
jp
stos
in
scas
add
add
loope
add
cmc
add
je
add
imul
cwtl
lahf
xchg
xchg
and
mov
add
int3
lea
pop
mov
add
add
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
popa
pop
add
pop
add
mov
add
gs
roll
jle
add
add
cmpsl
lods
add
mov
xchg
gs
popl
add
icebp
add
add
out
pop
xchg
add
les
cmc
push
pop
add
add
jp
movsl
add
gs
lock
stos
add
push
add
add
sbb
incb
add
mov
pushf
add
add
int
add
push
add
pop
add
mov
xor
push
push
push
push
push
push
push
push
push
call
pop
add
add
nop
sahf
popa
ja
add
out
out
jns
add
testb
enter
lahf
movsb
fxch
add
add
lea
enter
mov
push
add
add
add
add
mov
mov
jae
mov
scas
add
add
lods
mov
data16
add
call
push
push
push
push
call
add
popa
roll
rcrl
aam
pop
add
fcmovnbe
je
out
sti
add
rol
nop
add
jp
add
add
loop
add
fdivrs
bound
add
test
add
add
fiaddl
imul
enter
add
mov
add
rcrl
add
add
add
pop
mov
xor
push
push
shr
push
sub
add
add
sub
sub
shl
not
pop
xor
dec
pop
push
push
call
faddl
icebp
sahf
add
data16
xchg
add
pop
data16
cmc
add
add
mov
stos
add
pop
iret
icebp
xchg
jbe
stos
in
lahf
push
test
add
add
mov
jecxz
mov
movsl
cmpsl
xchg
jecxz
stos
xchg
add
sti
add
fstpl
call
xchg
add
pop
cmc
mov
pusha
xchg
add
js
mov
lea
pop
pushl
push
push
push
push
lea
push
push
push
push
push
call
in
les
adcl
push
add
add
iret
repnz
jnp
mov
cmpsb
add
lods
add
push
add
add
add
fadds
std
add
add
sti
add
out
mov
add
movsl
add
xchg
add
xchg
pushf
add
add
andb
push
add
fwait
testl
pop
add
mov
movl
push
push
push
push
push
call
add
fnop
std
add
xchg
add
add
mov
add
push
add
cld
add
int3
scas
add
mov
add
add
lods
jle
lahf
xchg
add
mov
add
in
int
jo
add
jae
mov
jo
add
out
lock
add
add
push
testb
lea
push
push
call
add
data16
add
cmpsb
add
xacquire
add
add
add
mov
add
mov
ja
int3
lods
bound
add
add
into
xchg
mov
fildl
mov
add
add
add
jle
fwait
jge
addl
add
push
movsb
xchg
add
test
icebp
mov
lea
pop
push
pushl
pushl
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
add
add
mov
faddl
ret
add
mov
lahf
call
out
xchg
add
add
aad
fwait
mov
add
movsb
add
popa
jmp
fst
jge
add
aad
add
push
stos
call
cmc
xchg
add
add
gs
shl
stos
mov
fmul
sbbl
ret
imul
mov
lea
pop
call
pushl
pushl
push
push
push
call
mov
mov
add
pop
fwait
test
add
add
lds
add
repnz
jmp
stos
add
add
add
add
add
add
add
add
add
pop
pusha
add
add
mov
addb
add
addr16
bound
add
add
in
add
jmp
popa
or
call
push
push
inc
inc
sub
push
and
add
dec
lea
rol
sub
add
sub
add
pop
sub
shl
pop
push
push
lea
push
push
call
add
loope
mov
add
add
add
mov
cld
in
mov
jnp
jmp
movsl
fildl
add
movsl
je
test
int3
mov
mov
xchg
add
data16
mov
add
mov
add
nop
mov
loop
stc
jbe
shl
add
jmp
pop
addl
mov
js
push
pop
mov
lea
pop
pushl
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
insb
add
fcmovb
test
add
add
test
mov
add
test
add
rolb
mov
pop
add
sti
push
adc
lock
add
add
add
add
xchg
lret
xchg
fcoms
mov
outsl
xchg
pop
add
add
add
cli
add
push
mov
xchg
push
add
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
scas
lods
add
add
add
push
add
xchg
fiaddl
in
mov
add
add
mov
add
add
add
lea
mov
xchg
loopne
out
out
jno
aad
sahf
fistps
mov
adcl
lret
add
out
push
mov
xchg
jge
xlat
push
mov
ror
add
add
lcall
push
testl
test
lea
shl
push
push
pop
add
sub
sub
ror
sub
pop
add
pop
push
push
push
lea
push
push
push
push
call
fistps
mov
add
jbe
out
out
add
mov
mov
lods
add
add
add
add
lcall
add
add
mov
into
push
loop
mov
add
std
fwait
lods
jnp
xchg
jnp
add
add
mov
mov
cli
test
pusha
xchg
faddl
incb
in
in
test
xchg
scas
add
popa
add
mov
lea
pop
push
call
mov
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
loop
jbe
add
ja
add
fisubrl
push
add
add
add
int3
icebp
lock
rolb
fildl
mov
loopne
std
add
add
pop
lahf
in
imulb
scas
scas
std
add
add
jno
add
add
mov
add
in
scas
testl
add
cmpsb
sbbl
add
add
mov
mov
add
lea
pop
push
push
mov
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
icebp
add
jnp
std
fs
add
add
add
cwtl
testb
jge
mov
iret
jnp
add
rolb
xlat
add
lds
add
add
add
add
add
ror
stc
add
add
add
jge
pop
mov
test
scas
add
sarl
incb
clc
int3
mov
and
add
add
push
push
lea
push
call
lods
loopne
add
add
xchg
rolb
add
add
movl
add
add
add
enter
add
add
add
add
mov
add
shr
cmpsb
add
add
add
add
add
mov
push
add
add
add
rorb
add
mov
xor
push
lea
push
push
push
call
cmc
add
sti
int3
add
ja
int
add
jne
add
mov
incb
pop
imulb
push
add
add
add
cltd
add
add
rorl
mov
leave
add
popa
add
jb
fxch
add
sahf
xchg
data16
sti
loope
pop
mov
add
out
add
pop
addr16
xchg
lret
add
mov
pop
add
push
push
push
lea
push
push
push
push
call
push
push
fidivl
add
pop
cwtl
cmc
add
mov
in
rolb
imul
mov
outsl
add
add
add
add
push
jo
add
add
call
ret
sahf
add
fcoms
add
add
rolb
add
add
xchg
add
mov
add
add
add
addr16
loop
mov
lea
pop
push
mov
push
push
push
call
mov
add
fadd
pop
add
add
mov
add
lods
out
mov
add
fsub
scas
in
add
add
add
xlat
add
add
mov
in
jp
pushf
in
int
add
push
insb
add
add
add
push
rolb
popa
sti
add
add
add
fs
push
out
add
add
stos
add
bound
outsl
add
mov
lea
pop
xor
push
push
call
add
add
push
loope
jo
add
add
pop
cmpsl
clc
int3
add
shl
add
add
pop
outsl
add
scas
scas
rorl
jecxz
nop
mov
push
int3
leave
add
loopne
add
out
mov
xchg
xchg
out
js
pop
fsincos
add
add
add
add
lcall
add
iret
push
add
mov
add
jge
out
add
orl
add
push
push
lea
push
call
leave
add
push
int3
call
mov
push
add
repnz
push
add
ret
add
loop
add
add
add
pop
add
lock
add
notb
mov
add
imul
leave
bound
mov
add
add
insb
ret
imul
add
mov
push
add
fiadds
int
arpl
add
add
arpl
faddl
mov
mov
lea
pop
add
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
add
mov
cmpsl
stc
push
add
add
repnz
add
xchg
jp
shrb
ljmp
mov
add
add
add
add
hlt
jge
mov
loopne
push
add
repnz
out
fildl
mov
ret
add
add
add
mov
jo
jecxz
faddl
ljmp
and
pop
mov
xor
push
push
push
push
lea
push
push
push
push
push
call
leave
add
mov
add
int
mov
add
fdivr
add
add
aad
call
stc
mov
add
add
add
add
jecxz
add
mov
sahf
add
add
push
add
jae
add
add
enter
nop
test
fimull
cld
les
add
lcall
push
mov
push
push
lea
push
push
push
push
lea
push
push
call
mov
icebp
lods
add
nop
add
add
add
mov
cld
stos
add
pop
xlat
add
loop
xchg
add
rol
addb
ror
jle
xchg
imul
mov
mov
scas
mov
add
add
fwait
out
aad
out
or
add
mov
cmpl
add
push
jp
call
in
movsl
xchg
out
in
js
push
stc
mov
lea
pop
xor
push
push
push
lea
push
push
push
push
push
call
scas
add
loope
mov
jo
add
xchg
lods
scas
add
add
in
faddl
pop
xchg
filds
xchg
int
mov
add
xchg
mov
rcrl
outsl
loop
add
add
fwait
add
add
add
fildl
iret
add
add
int3
lea
pop
add
push
push
push
push
push
push
lea
push
call
enter
add
add
jo
popa
imul
add
mov
add
add
lret
add
jno
aam
clc
fdivr
push
add
ljmp
mov
add
mov
in
cli
ja
flds
add
push
lods
add
xchg
popl
add
mov
test
xchg
add
add
iret
mov
lea
pop
sub
pop
rep
push
push
push
push
push
lea
push
push
push
push
push
call
add
fstl
fiaddl
icebp
out
add
out
mov
add
add
xchg
rolb
add
je
mov
lods
add
lcall
jl
add
fst
popf
mov
divb
lds
cwtl
add
out
scas
into
push
aam
push
mov
add
nop
into
add
add
data16
add
mov
lea
pop
pop
push
lea
push
push
lea
push
call
mov
add
push
test
add
xchg
add
or
xchg
gs
add
jmp
addl
add
add
imul
lds
jno
add
xorl
add
fs
xchg
movl
add
add
add
stos
lahf
rolb
add
add
add
in
mov
push
into
add
clc
add
cli
add
cli
mov
lea
pop
mov
add
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
jo
add
scas
out
lret
add
loopne
in
add
add
add
jbe
jbe
faddl
lret
out
add
enter
insb
jmp
add
jl
add
sti
push
mov
pop
push
idivb
loop
loope
mov
jl
add
call
xchg
add
add
jmp
add
cltd
jo
add
js
fucomi
fbld
add
add
pop
add
add
mov
xor
push
lea
push
push
push
push
call
add
add
add
int
add
push
cmpsb
fld
add
add
add
add
lods
iret
cld
push
add
add
imul
add
add
add
shll
into
roll
scas
add
popl
enter
stos
add
add
lods
add
xchg
lods
bound
fadds
nop
lds
push
in
add
mov
pusha
adc
mov
xor
push
push
push
push
push
push
push
call
jle
jo
add
pop
movl
add
nop
add
xorb
add
pushf
add
cli
add
add
add
pop
push
add
add
data16
fcmovne
add
rolb
out
aam
add
xchg
xchg
sahf
add
mov
add
push
fadds
xchg
out
test
aam
bound
mov
push
push
push
push
push
push
push
lea
push
call
call
mov
loopne
mov
out
loope
add
pop
add
pop
add
mov
add
mov
nop
out
aad
mov
int3
add
push
xor
xchg
cmpsb
shlb
in
xchg
jne
jnp
add
clc
out
roll
mov
add
enter
movsb
stos
imul
jnp
mov
lea
pop
xor
push
push
lea
push
call
add
add
lock
add
in
add
pop
jae
add
add
mov
add
xchg
pop
jp
add
stc
lret
mov
mov
lods
mov
add
mov
fdivr
add
movsl
imul
add
cmpsl
sti
call
scas
add
imul
bound
add
add
push
lea
push
push
push
push
push
lea
push
push
push
push
call
pop
icebp
mov
rcrl
lret
loop
add
fwait
movsb
in
out
add
add
add
loope
add
cmpsb
jo
aad
mov
cmpsl
ficoml
fs
cld
in
add
movb
add
add
add
add
add
xchg
lcall
add
lods
mov
mov
add
add
in
in
add
add
mov
js
hlt
lea
pop
add
mov
push
push
sub
xor
sub
push
and
add
sub
lea
shl
shr
pop
inc
add
pop
push
lea
push
push
push
push
lea
push
push
call
bound
add
ljmp
test
add
mov
add
mov
pop
popa
fs
add
xchg
fdivrs
pop
out
mov
lret
in
cmpsb
xchg
add
lods
lret
mov
outsl
mul
xchg
add
add
add
add
add
lods
add
fiadds
add
rorl
pushl
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
ficoml
lahf
add
jbe
mov
add
add
mov
pop
out
mov
jecxz
rolb
add
in
lods
add
cld
add
loop
lods
out
lods
arpl
push
hlt
out
add
add
popf
ljmp
add
add
add
mov
div
mov
ret
cwtl
add
add
in
mov
lea
pop
call
push
push
push
sub
not
push
push
pop
add
not
shl
xor
inc
sub
ror
lea
rol
shl
pop
sub
add
inc
ror
pop
push
lea
push
push
lea
push
lea
push
push
call
add
fwait
add
mov
mov
add
jnp
xchg
test
mov
filds
pop
add
add
add
xchg
add
mov
add
add
add
add
fiaddl
jecxz
add
lcall
jmp
add
lds
je
loopne
add
pop
xchg
add
out
add
mov
ret
mov
jae
push
nop
int
mov
lea
pop
push
push
push
push
push
lea
push
push
call
data16
push
int3
outsl
add
push
mov
movsl
add
pop
jge
cli
add
popf
jns
push
subl
add
add
add
add
in
add
in
testl
add
jns
add
cli
mov
popl
jge
popa
push
add
jmp
mov
rolb
loope
push
jnp
push
fimuls
pop
call
mov
push
push
push
push
push
push
push
call
imul
push
out
push
mov
add
add
mov
jo
add
pushf
pop
push
mov
loop
fnstcw
add
add
push
stos
mov
jge
add
mov
add
sahf
add
scas
out
jns
leave
sti
add
testb
mov
lods
loop
add
add
stc
ljmp
push
push
mov
push
push
push
call
loopne
addl
add
add
stos
add
mov
pusha
shr
add
test
filds
loopne
add
out
jl
add
add
add
add
add
add
loopne
lret
jae
repnz
ficompl
mul
mov
add
movsl
cmc
iret
add
call
out
ljmp
bound
add
push
push
push
lea
push
push
push
lea
push
push
call
ljmp
hlt
add
pop
add
add
mov
add
add
cmc
add
add
hlt
add
add
out
add
nop
add
add
add
pop
js
push
fsubrl
ljmp
xchg
add
add
add
add
imulb
add
pop
add
add
jne
test
addr16
lea
pop
add
push
push
call
out
nop
sti
lcall
add
add
leave
pop
xchg
add
add
leave
rcr
imul
faddl
hlt
add
add
out
mov
add
loopne
jne
mov
out
mov
xchg
xchg
lods
jl
popa
roll
pop
fidivs
add
fwait
mov
fdivp
add
shrb
add
mov
add
add
pop
add
mov
xor
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
bound
test
roll
jmp
add
add
loope
add
roll
add
add
loopne
add
mov
pop
in
mov
test
je
mov
mov
cwtl
pop
xlat
add
mov
into
add
lods
jae
add
aad
sarl
jnp
add
add
outsl
xchg
add
movsb
mov
lea
pop
add
push
mov
xor
push
push
push
call
leave
add
mov
pop
xchg
std
stc
in
add
pop
gs
int3
add
lds
nop
call
cmpb
fbld
stc
add
add
pop
ja
lea
add
jmp
pop
pop
lret
lods
stos
nop
jb
add
add
jl
jns
sti
mov
add
outsl
cld
pop
lcall
pop
add
fmuls
pop
add
push
lea
push
push
push
push
push
push
lea
push
call
add
leave
xchg
movsb
pop
add
clc
cmpsl
xlat
add
pushf
add
mov
pop
call
add
jae
add
add
test
add
testl
scas
cmc
mov
in
xchg
scas
add
aad
add
add
in
add
filds
imul
pop
loop
data16
test
add
pop
pop
mov
push
push
push
call
mov
lret
add
loop
add
push
add
fstpl
mov
add
add
add
popl
cwtl
outsl
add
cltd
add
push
pop
add
mull
mov
filds
fidivs
js
jb
mov
push
add
icebp
popa
add
jnp
rolb
add
add
rorl
lea
pop
xor
push
push
push
push
push
push
push
push
push
call
cmpsl
imul
pusha
jge
xchg
add
jge
add
add
out
lret
jmp
add
jmp
scas
xchg
addl
add
mov
add
add
lea
in
fiaddl
add
imul
jae
loopne
aad
mov
pop
lret
add
popf
add
add
fisubl
jbe
scas
sti
aad
hlt
lea
pop
add
push
lea
push
push
push
push
push
push
lea
push
call
add
push
pop
les
shl
add
mov
mov
xchg
aam
push
add
cmc
add
add
jns
add
jnp
sbbl
std
add
add
push
addb
ja
add
jne
jmp
add
loopne
ja
add
les
pop
mov
add
fildl
sahf
popf
xchg
add
lea
pop
rep
push
push
push
call
stc
mov
popa
cmpsl
ret
add
add
mov
ljmp
leave
mov
mov
push
add
add
movsb
add
in
movsb
add
in
mov
jnp
out
fildl
add
add
add
aam
mov
add
add
lock
add
add
lods
out
add
add
add
pop
mov
push
push
push
lea
push
push
lea
push
call
push
nop
pushf
sarl
pop
xchg
add
scas
add
add
mov
add
cltd
shr
add
add
add
fldl
jge
std
add
test
add
cmc
add
add
add
flds
add
outsl
push
fadds
add
faddl
jle
mov
out
add
cmpsb
add
add
pop
mov
add
xchg
mov
add
rolb
enter
lea
pop
xor
push
lea
push
lea
push
push
push
push
push
lea
push
call
rcll
scas
add
add
loopne
add
fnstsw
pop
ljmp
jge
mov
add
mov
mov
add
testl
add
popf
enter
add
mov
add
nop
add
pusha
mov
popl
jp
call
push
mov
mov
lea
pop
add
push
push
lea
push
push
push
push
call
mov
data16
add
sti
loope
in
scas
int
add
xchg
mov
add
fildl
cmc
mov
add
in
in
nop
add
push
iret
mov
rol
mov
jae
pushf
movsb
add
scas
add
add
pop
mov
add
out
add
cli
mov
lea
add
int
cli
add
leave
scas
xchg
add
bound
pop
or
je
mov
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
cld
loope
mov
jae
add
add
in
add
cld
add
add
push
mov
std
add
xchg
lods
shrb
jge
loop
xchg
add
add
mov
fld
imul
xchg
roll
in
xchg
clc
add
lahf
out
add
pop
imul
fistps
aad
add
out
mov
rolb
mov
lea
pop
xor
push
push
push
push
push
call
cwtl
add
fiaddl
aam
bound
addr16
add
add
push
add
cli
add
add
add
add
add
add
adc
add
pushf
add
add
nop
mov
add
add
add
add
push
lcall
jmp
add
add
push
jecxz
in
nop
testb
enter
jge
pop
add
into
add
in
add
int3
shlb
add
out
add
lea
pop
add
push
lea
inc
xor
pop
mov
push
push
lea
push
push
push
push
lea
push
call
ja
popl
add
add
shll
test
outsl
add
ficomps
mov
mov
cwtl
add
add
add
fld
imul
addl
add
lahf
pop
xlat
rcrl
jns
add
mov
jl
mov
mov
add
add
xlat
push
add
pop
xor
push
lea
push
push
push
push
push
push
call
add
in
jo
add
add
js
add
add
mov
add
iret
sahf
xchg
push
stos
add
add
ret
int
mov
add
add
lahf
rol
add
filds
rcrl
js
pop
jbe
les
add
add
add
add
mov
add
addr16
push
add
mov
mov
add
mov
mov
int
add
add
pop
jbe
mov
mov
lea
pop
add
push
push
push
push
lea
push
lea
push
push
call
scas
mov
add
mov
pop
fadds
add
add
add
add
add
out
add
add
add
add
add
add
mov
popf
add
push
int
xchg
in
add
add
mov
into
cmpl
lahf
test
add
mov
push
add
lods
cli
add
mov
lea
pop
add
push
lea
push
push
push
call
add
cmpsb
fisttps
add
out
add
pop
lret
add
push
mov
stos
bound
add
mov
add
add
mov
scas
jne
push
add
add
add
add
jnp
gs
add
insb
add
add
add
add
add
add
add
add
mov
add
add
movsl
stos
cltd
add
mov
lea
pop
add
push
push
call
xchg
incb
jge
addb
mov
jp
jb
mov
add
add
mov
fdivp
add
stos
mov
cmpsl
gs
add
pop
pop
jge
rorl
add
add
andb
add
jge
sahf
add
stos
roll
pop
fs
add
add
add
add
add
mov
jmp
push
lcall
add
mov
lea
pop
push
mov
push
push
push
push
call
call
adc
add
add
mov
arpl
add
add
add
int3
pop
test
pop
mov
lods
negb
push
add
ret
jno
loopne
fldenv
push
lahf
mov
mov
add
xchg
andb
push
pop
add
rolb
movsb
add
gs
movsl
add
int3
rorb
loop
into
add
pop
add
add
pop
mov
lea
pop
xor
push
push
call
nop
mov
sahf
je
scas
add
jmp
out
add
add
add
mov
lock
add
fs
loop
jae
out
add
add
add
js
add
stc
push
cmpsl
stc
sahf
add
add
iret
add
add
add
add
loop
rolb
rcll
movsl
jge
add
jb
rolb
int3
add
loop
in
cld
lea
pop
add
push
push
push
push
push
push
lea
push
call
loop
imul
add
add
cmpb
add
lock
add
add
add
add
jp
clc
xlat
mov
int
add
add
add
cltd
add
add
mov
pop
test
add
addr16
mov
mov
xchg
add
add
cmpsl
add
ja
popa
sahf
add
cmpsb
add
sahf
xchg
arpl
add
add
add
mov
lea
pop
add
pop
rep
push
push
call
fwait
add
pop
add
jge
add
mov
sahf
rclb
add
add
aam
fldl
add
je
rolb
add
add
sahf
test
add
mov
arpl
add
add
mov
movsl
mov
icebp
pop
add
push
jge
xchg
add
fadds
mov
lods
add
arpl
negb
mov
lea
pop
mov
push
push
push
push
lea
push
push
lea
push
call
add
add
lret
mov
add
add
add
add
xchg
mov
test
fstpt
lock
push
hlt
xchg
xchg
mov
add
add
add
jmp
jmp
lcall
add
add
mov
in
mov
add
add
jp
add
add
add
stos
add
shrb
data16
add
pop
xor
push
push
push
push
push
push
call
add
negb
pop
xchg
add
cld
add
addb
jno
scas
nop
mov
in
add
pop
xchg
add
mov
add
hlt
add
jo
jl
xlat
test
push
push
imul
add
fsin
lock
add
sahf
xchg
add
roll
add
fiadds
add
add
mov
lea
pop
add
push
xor
rol
add
pop
or
je
push
push
push
push
push
push
call
jl
add
je
lahf
loope
add
jecxz
mov
lahf
add
add
add
add
add
add
mov
xchg
push
xchg
add
add
jns
in
jae
xchg
add
add
clc
add
add
add
mov
cld
mov
jbe
add
add
test
add
aad
add
add
sbb
repz
push
not
shl
pop
add
rep
pop
push
push
sub
push
push
pop
add
lea
sub
dec
shl
inc
pop
xor
rol
pop
push
xor
shl
add
not
pop
pop
mov
mov
push
not
rol
pop
mov
jmp
push
push
rol
rol
pop
mov
add
push
push
push
push
push
push
push
push
call
jle
rcrb
add
add
movsl
xchg
jmp
add
mov
push
lods
add
cli
lds
push
jbe
in
rolb
add
jmp
pop
mov
add
divl
add
push
cltd
lods
iret
popa
add
cli
add
add
lds
jmp
add
movsl
add
stc
icebp
add
mov
lea
pop
push
push
push
push
lea
push
call
pushf
xlat
lcall
add
add
fwait
out
pusha
jecxz
jno
add
cmpl
lret
xlat
je
lahf
mov
add
add
add
mov
add
fistps
mov
roll
jle
mov
jecxz
mov
add
testl
fldl
mov
xchg
add
add
roll
mov
lea
pop
push
push
push
push
push
push
push
push
call
add
icebp
hlt
add
jp
mov
cmpsl
add
fldcw
pop
arpl
add
add
fwait
in
add
jae
fstpt
test
add
jge
flds
jae
jp
add
add
xchg
add
aad
jl
add
mov
add
mov
add
lea
mov
pop
imul
mov
add
pop
cmc
add
add
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
jbe
ret
test
add
add
add
loopne
xchg
add
cli
addb
faddl
add
add
add
les
add
push
test
int3
cld
nop
cltd
add
jge
enter
icebp
add
add
push
roll
jle
fisubs
pop
cld
add
add
add
loop
popa
push
push
jnp
xchg
pop
lcall
mov
lea
pop
pop
push
ror
pop
pop
pop
pop
push
push
lea
push
lea
push
push
call
stc
xchg
bound
add
cwtl
ljmp
bound
push
xchg
add
add
movsb
loopne
push
data16
test
test
loop
fists
sarb
out
xchg
add
out
data16
imul
rolb
iret
mov
popa
add
add
add
iret
add
fistpl
add
add
add
add
lea
pop
leave
push
ror
add
add
pop
ret
push
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
fxch
incb
push
pop
les
cld
mov
xchg
sahf
ja
add
stc
negl
jb
imul
add
mov
add
add
push
in
faddl
mov
jecxz
mov
lret
add
mov
loop
jmp
mull
icebp
add
add
push
bound
mov
fwait
enter
add
fcmovb
nop
add
add
in
add
pusha
add
mov
lea
pop
add
push
push
push
sub
shl
pop
push
push
movl
push
push
push
push
push
call
jp
add
stos
add
lods
fcomip
int3
jmp
movsb
lock
test
scas
add
lret
mov
mov
add
jbe
add
insb
into
add
add
fldl
push
mov
pop
add
add
mov
add
fsubs
fwait
xorl
popa
int
std
mov
lret
add
popf
shl
rolb
lds
mov
add
aam
bound
addl
push
ror
lea
pop
test
je
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
mov
jo
pop
out
add
push
mov
xchg
fisttpll
xchg
cmpsl
add
add
leave
add
add
clc
push
xchg
cltd
test
push
test
mov
mov
out
add
push
mov
call
add
addl
xchg
inc
add
pusha
add
jge
add
test
add
mov
arpl
pop
mov
push
push
lea
push
push
lea
push
push
call
fiaddl
fadds
mov
mov
jmp
cmpsb
popa
mov
insb
add
out
add
aam
fcmovne
add
xchg
repnz
add
lea
jno
mov
add
ja
cmc
add
add
mov
roll
jle
aam
mov
add
ja
fadds
in
add
add
pop
pop
pop
push
rol
rol
add
pop
pop
push
sub
sub
add
shl
pop
pop
leave
ret
push
push
lea
push
lea
push
call
out
add
add
jno
add
loope
add
add
mov
push
add
testb
mov
xchg
mov
jbe
jo
call
cltd
movsl
shlb
add
mov
mov
mov
add
sahf
add
imul
popf
add
cmpsl
push
mov
ja
xchg
add
hlt
add
pop
hlt
out
cld
lea
pop
push
push
sub
not
sub
pop
mov
push
shr
pop
add
push
push
push
sub
not
pop
push
push
ror
ror
not
pop
push
push
shl
rol
inc
not
pop
testl
addl
push
lea
push
push
lea
push
push
call
cwtl
je
insb
add
mov
roll
cwtl
add
cli
addl
push
add
add
xchg
in
xchg
add
rcll
pop
pop
add
add
mov
test
mov
lahf
jecxz
popf
mov
subb
test
loope
add
add
add
outsl
rolb
mov
add
add
pop
push
call
push
xor
pop
mov
push
push
push
push
call
add
notb
push
fstl
mov
add
push
movsl
jo
movsb
loopne
jmp
imul
ret
jne
pushf
add
lods
fildl
jo
add
add
lds
jne
stc
jp
test
add
push
nop
add
int3
add
add
add
add
pop
jecxz
add
aam
mov
add
mov
lea
pop
pushl
push
ror
pop
push
push
push
shr
sub
pop
call
push
lea
push
lea
push
push
call
add
add
mov
pop
mov
movsb
shrb
add
gs
pushf
add
add
imul
xchg
std
mov
leave
imul
cmpsl
pop
shll
cmc
pop
add
xchg
mov
loopne
add
aad
lods
stos
add
les
add
jns
push
mov
lea
pop
cmpl
jne
pop
pop
push
shl
shr
pop
pop
push
push
push
push
lea
push
push
push
lea
push
call
add
fildl
add
je
add
test
add
add
push
pop
jnp
fcompl
mov
push
mov
add
add
jp
add
jmp
fildl
into
mov
sahf
add
aam
add
add
lret
out
add
out
add
rcrl
ljmp
rolb
loope
sti
hlt
mov
add
lret
aam
bound
pop
pop
leave
push
xor
sub
xor
pop
ret
push
mov
push
sub
pop
add
push
push
push
call
testl
mov
add
push
arpl
test
fsubrs
add
mov
add
jge
add
sti
xchg
pop
ficoml
pop
add
xchg
fidivrs
popf
mov
pop
mov
add
aam
add
mov
mov
add
jnp
add
test
scas
je
mov
sbbb
fmull
push
rol
pop
push
push
ror
pop
push
push
push
sub
add
pop
movl
push
dec
pop
push
call
push
inc
lea
pop
push
call
subl
push
xor
pop
cmpl
jne
pop
push
push
push
push
call
add
add
mov
add
aad
add
mov
movl
in
out
add
enter
cltd
lock
add
enter
cli
add
in
add
lahf
jmp
add
add
lods
fucomip
jmp
add
add
add
add
push
test
jp
mov
pop
add
lods
lea
pop
imul
ret
pop
sarb
add
mov
lea
pop
pop
pop
push
push
push
push
push
push
push
push
call
add
add
pop
js
add
addr16
lahf
scas
add
int3
out
imul
add
stc
in
xlat
icebp
adc
add
pop
add
xchg
pop
cld
mov
add
xchg
imul
add
loop
pop
lahf
add
xchg
test
add
add
fdivs
add
xchg
add
add
add
xchg
add
add
jns
mov
popf
pop
loope
test
jle
add
cltd
add
pop
pop
push
lea
push
call
add
mov
mov
mov
fsts
add
xorl
add
add
add
mov
add
test
add
je
mov
add
push
insb
add
pop
fwait
add
add
add
imul
pop
push
add
addr16
add
mov
adcl
push
movsl
mov
aam
bound
pop
leave
push
push
push
lea
push
push
call
pusha
flds
jo
add
cmc
add
pushf
in
push
mov
aad
roll
xchg
mov
jge
fucompp
push
movsl
add
icebp
mov
mov
add
add
mov
xchg
add
cli
rolb
cmpl
add
push
gs
add
push
gs
add
add
mov
adc
ret
push
inc
xor
add
pop
push
mov
add
push
push
lea
push
push
push
push
push
push
call
int
xchg
jmp
add
add
add
scas
add
roll
imul
testl
add
test
add
add
add
add
xorb
mov
faddl
jp
add
push
mov
add
add
push
in
add
fsqrt
addr16
add
add
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
int3
mov
jmp
add
pop
mov
clc
jle
mov
add
add
add
ret
out
pop
lret
push
mov
jle
jmp
add
add
push
pop
add
push
pushf
leave
lock
rcr
add
add
divl
add
xchg
xchg
mov
add
add
fiaddl
lret
divb
add
lahf
add
add
loop
rcl
mov
lea
pop
push
push
push
push
push
lea
push
push
call
push
add
add
fadds
addb
test
pop
add
add
xlat
test
add
mov
add
stos
test
fiadds
cltd
fcmovnb
loope
lods
xchg
mov
add
jge
add
pop
jle
add
lods
enter
lds
xchg
fidivs
add
mov
test
sbb
inc
or
inc
cmp
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
imul
push
add
mov
stos
add
sti
add
add
push
add
push
jl
add
jl
nop
rolb
cli
push
iret
loopw
popl
data16
jp
stc
add
add
add
add
jae
bound
add
jecxz
jmp
lahf
mov
add
push
out
add
add
mov
lea
pop
sub
mov
shr
push
add
pop
add
mov
mov
push
shr
shl
pop
add
push
push
push
lea
push
push
push
push
call
add
add
hlt
xchg
lahf
fstps
add
roll
rolb
into
pop
push
add
jae
add
xchg
add
out
fwait
add
add
mov
add
pop
add
add
push
add
add
jno
mov
pop
loop
add
roll
mov
stc
xchg
les
mov
mov
pop
mov
addl
mov
mov
lea
pop
add
mov
mov
push
push
push
push
call
movl
jge
add
mov
cld
mov
cmpb
add
cwtl
add
add
add
clc
cltd
loope
cwtl
stos
add
out
neg
cli
pop
add
add
lds
popl
add
add
add
add
add
pop
into
pop
push
mov
xchg
push
add
mov
ja
mov
popa
push
lret
pop
add
xchg
ljmp
pop
cmp
jne
push
shl
pop
cmp
jne
push
lea
push
lea
push
push
push
push
push
lea
push
call
rolb
lods
add
jae
lcall
hlt
popf
add
mov
add
mov
push
lock
ja
cmpsl
add
add
aam
movl
mov
into
add
jnp
hlt
add
add
add
flds
iret
add
and
bound
mov
push
add
lock
mov
cmpsl
add
test
pop
mov
push
shr
ror
inc
pop
movl
jmp
push
push
push
push
push
push
push
call
rcr
add
mov
add
mov
jl
add
add
xlat
add
cwtl
pop
lock
pop
add
add
add
cwtl
mov
push
icebp
sahf
enter
cmpsb
outsl
add
pop
mov
lea
stc
lcall
nop
add
mov
cwtl
jns
int
add
add
pop
jbe
fisttps
pop
mov
mov
sub
jne
push
dec
not
not
sub
pop
mov
movl
push
sub
pop
jmp
push
rol
shr
pop
mov
mov
push
add
not
pop
cmp
jne
mov
movl
push
lea
push
push
push
lea
push
push
push
call
enter
add
add
add
add
stc
push
data16
jae
cltd
in
pop
cmpsl
rcrl
mov
lods
out
xorl
lret
xchg
std
clc
cli
jno
add
hlt
add
call
icebp
add
flds
jnp
add
xchg
cmpsl
ficoml
out
add
int3
pop
in
cltd
mov
lea
pop
jmp
mov
cmpw
jne
push
ror
shl
pop
mov
push
push
push
push
push
push
push
call
add
movb
mov
addb
add
shr
xchg
add
mov
jp
ljmp
testb
push
add
fs
mov
faddl
mov
add
add
add
fs
test
add
add
add
jno
out
add
add
fcomi
mov
rorb
add
add
add
pop
add
add
mull
hlt
lea
pop
movl
jmp
pushl
push
push
push
push
push
push
push
push
push
call
mov
cld
jbe
imul
arpl
enter
add
icebp
pushf
add
add
fsubrs
fsub
addl
test
outsl
shll
mov
cmc
jne
add
test
loop
add
mov
add
roll
mov
add
call
add
popl
repnz
imul
add
aam
bound
pop
mov
push
push
push
lea
push
push
push
call
jmp
mov
jle
mov
lods
fcompl
loope
pop
js
add
aad
iret
into
ja
out
add
xchg
push
addr16
outsl
add
add
mov
enter
test
out
in
mov
fiaddl
add
add
jno
stos
add
add
ljmp
add
add
shl
mov
add
cmpsb
add
pop
mov
push
sub
pop
mov
push
push
rol
add
inc
not
push
xor
add
sub
sub
pop
not
xor
pop
push
push
push
push
push
push
lea
push
call
jmp
add
in
add
add
fbld
add
addl
add
add
popa
in
xlat
add
iret
testb
mov
pop
add
popf
push
fildl
pop
add
call
cltd
nop
test
cli
add
jecxz
rcl
mov
cld
stos
xchg
add
cli
adcb
jae
jle
out
add
bound
push
call
push
ror
xor
dec
pop
cmpl
je
push
push
not
push
xor
add
not
shl
rol
sub
add
xor
pop
sub
lea
shr
add
pop
push
push
push
push
push
push
call
add
pop
push
xchg
rclb
rcrl
test
icebp
arpl
in
scas
add
icebp
movsl
add
add
out
add
add
xchg
mov
add
add
add
popf
in
stos
push
pop
js
add
hlt
push
jae
xchg
mov
arpl
add
add
xchg
ret
add
iret
fcmovnu
mov
push
xchg
pop
add
add
mov
add
pop
push
call
cmpl
je
push
push
shr
push
sub
add
add
shr
xor
sub
xor
lea
pop
xor
pop
push
ror
add
add
pop
push
push
push
push
lea
push
call
lock
popf
mov
xchg
cld
add
mov
xchg
mov
mov
jmp
add
jge
mov
bnd
testb
les
add
xchg
aad
pop
ja
add
add
mov
add
in
xchg
rcll
je
add
add
cmpsb
mov
add
fisttpll
pop
call
cmpl
je
push
push
rol
ror
push
sub
add
add
inc
sub
dec
pop
pop
push
lea
push
push
call
lret
hlt
jae
lret
add
add
cld
add
add
add
jne
add
mov
lahf
add
add
xlat
push
fistl
std
add
lock
mov
add
lahf
js
pop
add
sahf
lods
add
add
add
data16
stc
add
mov
add
call
push
add
add
lret
int3
lea
pop
push
call
push
sub
pop
cmpl
je
push
push
xor
xor
push
sub
add
add
sub
inc
shl
inc
inc
pop
not
pop
push
push
push
push
call
test
imul
add
add
test
add
addl
jle
add
jl
add
add
add
add
mov
nop
out
push
loop
imul
cwtl
cmpsb
xchg
loop
ljmp
add
test
mov
add
add
add
test
mov
lea
pop
call
push
push
call
add
in
rcll
pop
mov
add
mov
pop
mov
add
add
add
fdivrs
add
add
imul
icebp
add
add
fiadds
mov
add
add
sahf
xchg
add
add
add
push
mov
add
add
hlt
lea
pop
cmpl
je
push
push
add
xor
xor
push
or
inc
add
sub
rol
sub
not
pop
xor
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
jne
add
add
add
mov
lea
add
add
add
js
mov
aad
mov
nop
add
in
push
jb
fstl
pusha
loop
mov
xchg
add
add
jo
xchg
add
add
les
mov
lea
pop
push
call
push
sub
rol
sub
sub
pop
cmpl
je
push
push
shl
push
and
add
inc
sub
pop
lea
add
shl
sub
pop
push
push
push
push
lea
push
call
stos
jb
cltd
add
hlt
add
sti
vpcomud
push
add
ja
mov
xlat
pop
std
icebp
data16
add
in
mov
add
add
add
add
jnp
add
loopne
out
adcl
add
add
lods
add
js
addr16
add
data16
add
fnsave
addr16
push
call
cmpl
je
push
push
not
inc
dec
add
push
sub
add
ror
add
lea
sub
lea
dec
not
pop
xor
xor
pop
push
push
push
call
cld
mov
cltd
loopne
lods
push
cli
mov
stos
cmpsl
add
mov
lahf
outsl
mov
xchg
add
pop
add
mov
movsl
out
mov
lret
push
cli
add
add
add
pusha
mov
rol
mov
add
mov
add
push
int3
mov
add
add
cmpsl
add
fcoms
add
add
movsb
aam
xchg
clc
fs
mov
add
pop
push
call
push
sub
sub
inc
pop
cmpl
je
push
push
dec
not
rol
push
push
pop
add
ror
add
sub
shr
xor
xor
shr
pop
add
sub
pop
push
push
push
push
lea
push
call
add
rcrl
add
fiaddl
jmp
rolb
mov
add
add
xchg
jl
add
cli
add
push
ret
in
jge
andl
lods
add
add
add
add
add
stos
mov
mov
add
add
xchg
add
add
add
arpl
std
add
enter
jmp
add
add
xchg
fmul
test
cli
lods
add
adc
ds
add
cmpl
je
push
push
rol
sub
sub
sub
push
or
inc
add
sub
lea
sub
shl
pop
ror
not
pop
push
dec
pop
push
call
cmpl
je
push
push
not
add
push
and
add
inc
inc
sub
not
sub
pop
ror
pop
push
push
push
push
call
fwait
add
xchg
jns
mov
fadds
add
push
jne
cltd
jp
add
add
imul
add
add
lds
pop
iret
add
pop
pop
add
imul
hlt
mov
in
add
add
add
jns
jge
add
nop
add
add
stos
stos
cwtl
add
add
add
mov
jb
xchg
faddl
mov
lea
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
pop
push
add
pop
add
add
sahf
outsl
fdivrs
out
mov
in
pop
adc
cwtl
les
mov
ja
mov
popl
add
lcall
cld
outsl
mov
mov
add
pusha
addl
mov
addr16
add
add
add
rcrb
les
lods
and
or
rol
je
push
push
shl
push
sub
add
add
sub
sub
inc
sub
dec
pop
lea
inc
pop
push
push
push
push
push
lea
push
call
jbe
stc
add
ror
jle
outsl
push
movsb
fildl
xlat
xchg
pop
out
mov
add
jmp
flds
add
add
add
add
aam
imul
stc
add
fsts
roll
bound
add
hlt
pusha
mov
movb
add
in
testb
add
add
add
loop
mov
fadds
add
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
lds
mov
mov
add
add
mov
pop
xchg
scas
xchg
cli
lea
popa
frstor
xorl
mov
jbe
aam
arpl
mov
mov
add
xchg
imul
lods
aad
faddl
xchg
arpl
roll
ja
lock
xchg
mov
add
pop
call
push
push
push
push
push
push
push
call
xchg
add
add
movsb
pop
add
movl
pop
jp
cltd
mov
loopne
jno
xchg
stc
pusha
mov
fcmovne
push
cltd
nop
cld
jp
iret
add
fdivl
push
add
cmpsl
pop
test
add
lods
jl
add
mov
call
lods
cmpsb
add
scas
icebp
jne
loope
add
bound
in
imul
lea
pop
cmpl
je
push
push
dec
rol
push
and
add
sub
rol
add
add
pop
inc
sub
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
mov
add
mov
pop
xchg
ljmp
add
stc
add
repnz
movsl
push
popa
add
fcomip
add
xchg
sti
add
jp
add
add
rolb
add
push
mov
insb
mov
add
loop
lods
add
mov
aad
movsb
jb
add
xchg
add
jns
add
add
jmp
mov
lea
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
lds
add
add
mov
add
xorb
fcmovb
lock
add
lods
add
cmpsb
test
add
mov
mov
in
insb
add
lods
out
add
mov
data16
add
pusha
sahf
in
jnp
mov
jp
add
imul
xchg
lock
jnp
mov
mov
jecxz
pop
mov
mov
lea
pop
call
cmpl
jne
mov
push
push
push
push
push
call
add
mov
xchg
roll
sahf
les
je
lods
add
sar
shl
add
add
nop
xchg
add
pushf
add
add
nop
scas
mov
add
mov
in
jno
imul
mov
xchg
add
test
push
add
imul
fildl
add
add
mov
push
scas
rorl
leave
lods
push
add
gs
add
add
add
loop
aam
bound
movl
jmp
push
dec
shr
pop
xor
push
dec
xor
not
pop
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
mov
lods
add
out
fs
nop
jnp
push
add
add
fdiv
enter
add
mov
add
subb
mov
push
push
add
fmull
test
js
mov
push
aam
push
shrl
add
add
add
add
add
add
sarb
add
add
add
add
int
mov
lea
pop
pop
push
inc
rol
pop
pop
pop
leave
push
add
lea
sub
ror
pop
ret
push
shl
shl
shr
pop
push
mov
push
add
sub
pop
add
cmpl
jne
push
push
not
add
push
sub
add
dec
dec
dec
sub
sub
sub
ror
pop
sub
pop
push
rol
pop
pushl
call
push
push
push
call
xlat
arpl
mov
hlt
add
lock
jae
sub
lods
test
test
cld
fidivrl
hlt
scas
add
add
push
add
mov
fwait
stc
add
add
push
in
cld
andl
loope
mov
fadds
lcall
add
add
add
jecxz
add
xchg
add
mov
lea
pop
push
call
jmp
push
push
lea
push
call
addl
hlt
xchg
ljmp
pop
add
add
test
fwait
add
lock
lret
add
add
ret
vpshlw
jle
jno
nop
add
add
imul
std
incb
mov
add
add
mov
pop
xor
scas
jae
add
in
add
out
xchg
pop
push
add
add
repnz
lahf
lcall
cld
lea
pop
cmpl
je
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
out
add
lahf
add
les
add
hlt
add
pop
add
add
add
insb
roll
add
mov
out
pop
jne
add
add
add
add
add
mov
cltd
mov
mov
pusha
add
bound
cmc
int
rcrl
add
jmp
mov
add
add
pop
cmpl
jne
leave
push
xor
shr
rol
pop
add
push
push
push
lea
push
push
push
call
lcall
mov
add
add
add
add
add
add
xchg
movsb
add
add
les
mov
jno
stc
fs
fs
fbld
add
loop
mov
add
cli
mov
mov
add
add
addl
popf
add
add
add
jne
cld
lea
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
imul
lcall
jp
addl
movsb
mov
add
add
mov
cld
call
add
mov
add
int3
add
pushf
add
pop
popl
mov
add
pop
pop
add
mov
xchg
add
fildl
add
add
pop
pop
pop
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
test
mov
add
sti
into
add
lcall
push
shl
add
add
mov
add
mov
push
add
mov
iret
add
loop
add
add
xchg
push
ljmp
imul
out
add
mov
xchg
add
fldl
imul
hlt
lea
pop
leave
push
sub
shl
lea
xor
pop
add
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
fs
add
gs
out
cli
mov
fldl
add
xlat
imul
imul
enter
mov
jne
in
add
add
std
add
iret
mov
add
add
std
icebp
add
add
pop
cmc
pop
popf
stos
gs
xchg
in
add
aam
lcall
in
popf
push
add
add
fwait
mov
mov
leave
leave
hlt
arpl
pop
ret
push
shr
sub
shl
pop
jmp
cmpl
jne
push
push
ror
push
or
inc
add
shr
xor
add
sub
sub
xor
pop
pop
push
push
push
push
push
push
lea
push
call
mov
pop
mov
add
popf
fcmovbe
mov
add
cmpsb
iret
add
add
jo
lods
mov
pusha
add
add
pop
neg
add
fwait
sti
add
cwtl
add
xchg
jecxz
xchg
in
aam
mov
outsl
mov
lea
fnsave
fistpl
sbb
pushl
push
shl
inc
sub
pop
call
push
push
push
push
push
push
push
call
jp
mov
push
add
add
sahf
imul
add
add
xchg
mull
rolb
loop
lock
add
xchg
add
add
jo
jae
mov
add
in
add
add
fisubrl
test
jae
add
add
pop
add
mov
int
add
mov
add
ret
into
mov
lea
pop
push
push
xor
inc
pop
call
push
push
push
lea
push
push
push
push
call
mov
fiaddl
sarb
push
jbe
add
rorl
cmpsb
fildl
add
add
add
add
add
add
jecxz
add
add
mov
test
movb
push
mov
add
jle
xchg
stos
pushf
push
out
in
add
add
add
add
add
cld
add
movb
popf
add
scas
cwtl
mov
lea
pop
jmp
cmpl
jne
push
push
lea
push
lea
push
push
lea
push
push
push
call
fcmovb
out
jb
add
add
out
add
pop
add
add
add
jge
jge
add
mov
loopne
push
icebp
xchg
mov
out
jmp
add
in
add
fstpt
mov
pop
add
mov
add
movsb
add
in
loope
add
addl
add
in
add
jl
aam
bound
pop
mov
push
lea
push
lea
push
lea
push
push
lea
push
push
call
call
stos
mov
icebp
popa
add
add
add
movb
sti
xchg
pop
add
outsl
jl
std
jecxz
add
add
cld
add
lods
mov
mov
in
lret
out
roll
loope
push
movsb
out
in
shrl
movsb
aam
scas
add
loope
ljmp
fucom
mov
cli
cltd
js
les
jmp
mov
sbb
mov
jmp
push
push
push
lea
push
call
pushf
ljmp
fistl
add
mov
add
xchg
je
filds
movsb
add
nop
add
lret
pop
mov
hlt
add
add
insb
pop
int3
add
add
mov
stos
mov
fnstcw
add
stos
stos
add
loopne
jb
jmp
add
addl
add
add
pop
mov
lea
pop
pop
dec
jne
push
lea
push
lea
push
call
ja
add
add
xchg
mov
test
xchg
pop
add
pop
pop
leave
pop
jp
out
add
add
add
in
mov
mov
xchg
add
add
mov
xchg
pop
scas
lock
imul
add
add
lds
ret
add
add
pusha
add
stos
lds
mov
lea
pop
call
jmp
push
lea
push
push
push
push
push
push
push
call
pop
mov
int3
add
stc
in
add
jmp
add
add
bound
popf
fdivl
in
add
out
add
andb
mov
mov
cmpsb
hlt
out
xchg
lea
add
pop
iret
stos
jne
mov
jecxz
add
mov
add
and
repz
add
push
push
xor
shl
push
push
pop
add
rol
ror
sub
inc
pop
ror
pop
push
rol
pop
pushl
push
push
push
push
lea
push
push
push
push
call
jns
frstor
pop
mov
cltd
clc
xlat
add
out
add
fwait
xchg
sti
mov
bound
ljmp
add
popf
movsb
shlb
push
mov
clc
add
mov
fidivrs
mov
add
flds
sarb
add
add
lret
push
fiadds
add
add
scas
push
fldl
addr16
xchg
movl
jae
add
les
hlt
lea
pop
call
push
inc
pop
push
push
push
lea
push
push
call
jns
rclb
add
clc
loopne
ja
mov
test
push
mov
jge
lahf
mov
xchg
jle
les
add
test
xchg
bound
mov
lock
xchg
add
pusha
movsb
add
add
movsl
add
add
out
aad
rcl
add
lock
add
jns
mov
add
push
add
lret
hlt
into
mov
lea
pop
call
push
push
call
shl
mov
add
add
add
imul
add
add
add
ret
add
roll
add
push
add
mov
loopne
fcomps
add
push
mov
push
std
mov
movsb
add
stc
pop
mov
cld
xchg
cltd
xchg
jne
mov
lea
pop
mov
lea
push
push
xor
push
sub
add
inc
not
lea
sub
sub
pop
pop
push
rol
ror
pop
pushl
call
push
push
push
push
lea
push
push
push
push
push
call
out
scas
mov
add
xchg
scas
insb
add
jo
add
mov
add
add
iret
test
add
cltd
fnsetpm(287
jge
sahf
mov
xchg
sar
add
add
xchg
add
add
add
mov
pushf
pop
mov
testl
outsl
popa
add
mov
rolb
xchg
add
pop
call
push
push
ror
shr
shl
push
sub
add
sub
rol
dec
rol
pop
xor
dec
inc
pop
pushl
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
ja
jno
add
push
cmpsl
jge
je
cmc
ret
add
jbe
fcoms
mov
mov
mov
add
add
add
jl
stos
mov
pop
incb
fwait
add
add
sahf
incb
add
xchg
xchg
arpl
add
sti
shlb
add
add
fs
mov
lea
pop
call
push
sub
lea
pop
call
mov
push
push
push
push
call
jp
add
mov
cli
leave
in
add
test
add
mov
hlt
xchg
add
jo
bound
loop
add
pushf
std
add
add
add
mov
mov
mov
mov
movsl
add
add
mulb
add
test
add
add
out
rcll
jo
push
add
mov
popf
mov
add
add
lret
xchg
cltd
rcl
add
int3
mov
lea
pop
lea
push
push
sub
xor
lea
push
push
pop
add
sub
sub
shl
pop
xor
dec
pop
push
push
push
lea
push
call
in
mov
add
stc
data16
jmp
mov
push
add
add
outsl
add
xchg
add
add
imul
push
decb
mov
mov
add
call
popf
jge
mov
mov
fistpll
xchg
std
add
stos
fiadds
popl
add
add
scas
stos
add
pusha
adc
jne
push
shr
shr
dec
pop
call
push
add
add
inc
pop
lea
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
jne
mov
mov
fiaddl
add
fstpl
xchg
shll
roll
aam
mov
add
outsl
xchg
rcrl
pop
mov
lcall
lret
mov
add
movsb
pop
add
add
stc
push
mov
push
add
roll
ja
mov
fcmovne
ffree
loop
pop
add
pop
popa
jge
add
pop
push
push
sub
pop
push
push
pushl
push
push
inc
rol
add
shr
push
or
inc
add
add
sub
not
shl
pop
rol
lea
pop
push
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
jge
add
cmpsl
add
pusha
add
add
push
bound
add
mov
add
mov
fidivl
push
rcll
icebp
pop
loopne
add
pop
add
test
movsl
add
add
cli
rcr
mov
add
sahf
fadds
in
add
jmp
lret
mov
lods
add
std
popa
mov
lea
pop
call
push
push
rol
sub
inc
push
push
pop
add
dec
xor
sub
sub
xor
add
rol
pop
not
add
not
rol
pop
pushl
push
add
lea
pop
call
push
push
push
push
push
push
push
lea
push
push
call
call
add
xchg
lods
sahf
fiadds
rolb
in
cld
movsb
add
push
mov
pop
movl
stos
mov
cwtd
test
add
add
icebp
add
fscale
notb
jmp
mov
in
cmpsl
popa
add
out
add
pop
mov
add
xchg
jbe
add
js
popa
xchg
leave
ljmp
int3
lea
pop
push
push
shr
sub
add
pop
call
push
push
push
or
not
add
add
sub
add
lea
pop
dec
pop
pushl
push
push
push
push
push
call
loope
pop
add
add
add
call
jnp
xchg
test
jle
jp
jo
jbe
add
cwtl
push
repnz
jmp
sub
mov
add
aam
fistpll
add
fiadds
sar
lret
xchg
add
add
fidivrl
fcom
add
les
mov
add
mov
mov
add
mov
add
lret
int3
push
enter
arpl
call
push
add
shr
pop
call
jmp
push
add
dec
rol
pop
pushl
push
pop
mov
jmp
push
push
sub
shr
push
xor
add
lea
add
dec
sub
pop
sub
add
dec
pop
push
shl
rol
pop
pushl
call
push
push
call
mov
bound
mov
push
add
add
mov
test
add
clc
scas
enter
add
mov
icebp
test
mov
movsl
add
cltd
nop
mov
add
add
add
jo
add
data16
add
add
add
add
bound
add
mov
xchg
mov
lea
pop
push
call
push
push
lea
inc
inc
push
sub
add
rol
sub
not
shl
shl
sub
pop
inc
ror
pop
push
dec
rol
shr
pop
pushl
call
push
push
sub
sub
lea
pop
call
leave
push
push
lea
push
push
push
push
call
mov
add
in
add
add
push
jns
mov
add
add
nop
xchg
add
jmp
add
arpl
add
add
add
xchg
jp
idivb
in
arpl
test
mov
mov
push
mov
push
lock
addl
fidivs
xchg
add
mov
mov
xchg
add
pop
add
pop
add
pop
pop
push
lea
push
push
lea
push
lea
push
push
call
add
add
stos
loop
out
jbe
fs
add
add
add
cmpsl
add
insb
mov
call
add
add
ja
in
add
xchg
add
ljmp
add
xchg
ja
xchg
add
fiaddl
xchg
fstp
pop
loopne
add
addr16
push
outsl
mov
loopne
loop
pop
add
sti
roll
pop
jns
les
push
shr
sub
pop
pop
leave
add
push
sub
sub
pop
ret
push
push
push
push
push
push
lea
push
push
call
add
add
sti
mov
push
add
mov
fwait
add
data16
pop
add
mov
add
mov
mov
jbe
add
cwtl
fchs
arpl
add
out
add
jp
leave
cld
add
xchg
popa
add
xchg
int
mov
fs
lea
pop
leave
ret
push
push
sub
not
pop
mov
cmpl
jne
mov
push
add
shl
ror
pop
jmp
mov
and
push
dec
not
pop
xor
xor
push
add
shl
lea
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
call
fiadds
scas
popa
movsb
mov
pop
add
add
push
fildl
repnz
pusha
icebp
push
hlt
arpl
icebp
stos
add
in
mov
jp
in
mov
lea
imul
add
aad
add
popa
push
xchg
popl
in
lahf
std
push
out
add
in
shrl
add
xchg
rcl
mov
mov
and
xor
push
add
xor
add
inc
pop
dec
sub
jmp
push
lea
push
push
lea
push
push
push
push
push
push
push
call
insb
push
xchg
xchg
aam
nop
add
mov
fsubs
pop
ret
add
repnz
add
pop
ret
mov
jnp
add
mov
push
add
add
cmpsb
cli
pop
add
cltd
add
add
fwait
add
add
add
add
enter
pop
add
pop
sub
push
add
pop
pushl
push
lea
not
xor
pop
pop
push
add
pop
sub
cmp
jne
mov
push
add
add
pop
lea
sub
mov
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
fwait
mov
pop
add
pop
cwtl
mov
ret
out
add
mov
add
add
stos
xchg
popf
add
fs
ret
push
fiadds
add
test
jo
lret
xchg
add
test
push
add
lret
mov
shrl
add
lahf
lods
add
rcrl
add
jmp
stc
out
mov
lea
pop
shr
add
push
dec
shr
pop
sub
push
push
push
push
lea
push
call
in
add
push
cmpsb
std
add
mov
add
stos
bound
add
sti
mov
mov
ljmp
fdivrs
add
pop
add
fdivl
pop
out
add
add
shr
add
lods
fisubs
add
add
xchg
out
add
add
mov
mov
add
add
pop
ja
add
pop
add
jns
pop
movsl
pop
out
add
pop
pushl
push
add
inc
add
pop
pop
push
push
lea
push
push
lea
push
call
stos
jne
in
add
mov
gs
in
fsubp
out
add
add
add
add
add
fwait
add
fs
push
mov
add
xlat
lret
clc
mov
add
fists
xchg
add
in
fcmovnu
lret
scas
add
aam
mov
insb
popf
add
testb
popl
add
add
ret
xchg
stc
add
add
add
nop
in
pop
lock
lret
out
add
pop
shr
push
add
dec
dec
pop
and
push
sub
shl
add
not
pop
sub
push
push
call
pop
hlt
ret
xlat
mov
pop
mov
add
mov
mov
in
loop
scas
add
xchg
addr16
push
add
add
add
mov
testb
add
pop
add
lods
jmp
add
xchg
add
arpl
push
add
fcoml
add
mov
add
add
pusha
or
stc
push
popf
decl
test
sti
dec
ret
push
xor
shr
sub
pop
push
mov
add
push
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
call
loop
jb
xchg
push
add
push
sti
add
lcall
add
negb
add
add
add
lods
mov
cld
jns
add
add
add
add
add
add
fdiv
pop
add
test
out
add
add
fisubs
out
clc
add
mov
add
lahf
movb
popf
repnz
jo
pop
add
cli
loop
int3
add
lea
pop
push
push
push
dec
sub
pop
push
push
push
rol
add
shr
pop
mov
push
add
inc
lea
pop
lea
push
xor
lea
lea
pop
sub
mov
shr
push
add
pop
add
mov
add
push
push
lea
push
push
push
push
push
push
call
loopne
xchg
add
add
push
add
add
fadds
add
lods
xchg
mov
addb
jmp
mov
shr
add
jle
in
loop
xchg
divl
test
xchg
je
in
mov
lret
fstpl
mov
add
pusha
push
xchg
cmpsl
arpl
repnz
faddl
lds
mov
add
add
jle
push
mov
hlt
lea
pop
mov
push
lea
push
push
push
push
lea
push
call
mov
add
cmpsb
xchg
roll
mov
fucomp
jae
push
mov
stos
mov
rolb
stc
add
mov
sti
add
mov
jmp
shr
mov
movsb
add
scas
repnz
add
rolb
lret
sti
add
lahf
mov
push
imul
add
add
clc
push
xchg
add
add
add
add
mov
call
cld
lea
pop
add
xor
mov
push
push
push
lea
push
push
push
lea
push
push
push
call
xchg
shr
pop
mov
roll
add
sarb
jl
add
flds
add
jno
les
fiadds
out
add
add
add
add
pop
popf
add
imul
stos
add
add
xchg
add
push
lahf
arpl
xchg
push
add
add
test
add
enter
add
mov
pop
and
call
add
push
shr
rol
pop
cmp
je
add
push
sub
pop
cmpl
jne
push
lea
lea
pop
xor
pop
push
dec
shr
lea
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
call
stos
std
lret
add
add
lods
push
push
insb
mov
add
js
pusha
jno
ret
add
pop
pushf
mov
add
movsl
pop
add
mov
out
jecxz
iret
mov
scas
xchg
add
mov
sti
mov
push
add
add
jno
in
out
mov
lea
pop
pop
pop
pop
push
push
push
push
push
push
call
add
in
add
lret
fbld
jno
push
icebp
lods
loopne
data16
jge
xlat
mov
loopne
movsl
jne
out
ficoml
add
add
pop
push
iret
add
add
popf
add
lods
cli
jbe
jnp
add
iret
push
in
add
repnz
add
data16
ret
push
rol
inc
ror
shr
pop
mov
add
push
push
add
pop
push
pop
push
push
push
lea
push
push
push
push
push
push
push
call
ja
test
jle
testl
add
add
xchg
jmp
mov
xchg
js
in
mov
shlb
lods
fiaddl
add
test
int
add
imul
mov
add
pop
jns
roll
test
add
add
mov
fs
in
in
add
lret
stc
mov
lea
pop
pop
push
add
pop
mov
push
not
pop
push
push
ror
rol
pop
call
xor
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
filds
add
add
lret
add
mov
mov
lock
out
outsl
jnp
add
icebp
add
lret
out
outsl
jno
in
mov
mov
add
pop
in
add
add
lods
add
out
mov
out
add
out
cltd
aad
gs
add
add
add
add
sahf
mov
mull
push
add
cli
aam
push
add
arpl
pop
push
lea
push
push
push
lea
push
push
call
xchg
add
lahf
loope
add
loop
xchg
add
mov
push
popa
add
push
add
pop
pop
loope
add
jae
add
mov
mov
lahf
out
imulb
test
push
fisubs
add
mov
add
xlat
add
add
add
jo
aad
add
add
movsb
add
rolb
std
jge
add
clc
rorb
pop
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
icebp
ja
out
mov
lds
push
cltd
int3
mov
shll
test
mov
fnsave
xchg
insb
movsb
in
jp
pop
stos
ja
imul
add
add
ret
add
add
add
aad
icebp
xchg
add
clc
push
popf
arpl
testl
push
pop
add
enter
add
add
jecxz
cmpsl
add
mov
cld
lea
pop
pop
push
push
push
push
push
push
push
call
mov
mov
add
lods
add
into
add
add
add
add
mull
out
movsb
add
ficomps
add
out
add
enter
add
imul
sub
insb
push
jb
add
add
imul
add
jl
std
add
cmpsl
enter
js
mov
mov
lea
pop
pop
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
fs
add
cltd
add
flds
add
add
rol
add
cld
mov
mov
jbe
jecxz
mov
add
jno
imulb
stos
add
bound
icebp
add
add
faddl
push
xchg
js
jbe
jmp
out
frstor
in
add
lret
mov
stos
push
lods
in
jmp
test
mov
lea
pop
leave
ret
push
push
inc
add
pop
mov
add
push
push
lea
push
push
push
push
push
call
loopne
divb
rcll
push
pusha
add
lods
orl
add
stos
mov
iret
lods
outsl
mov
add
jmp
cmpsl
les
add
add
xchg
cmpsb
mov
pop
in
add
mov
pop
cmc
jbe
jbe
rcrl
add
pop
test
add
add
push
pop
loop
add
jbe
mov
add
xchg
add
mov
lea
pop
push
push
push
push
push
call
lock
mov
lahf
jle
aam
pusha
mov
arpl
pop
push
xchg
add
popf
cwtl
in
bound
pushf
sti
add
pusha
pusha
jp
int
add
xchg
sti
fildl
sti
mov
mov
push
into
add
jp
add
add
add
lods
jle
loope
xchg
lahf
popf
lds
add
in
add
pushf
negb
mov
mov
lea
pop
push
push
push
rol
ror
pop
push
push
push
lea
push
call
test
add
enter
add
add
addb
add
stos
pop
int3
add
addl
push
mov
xchg
test
iret
add
lods
xchg
add
mov
popa
jns
cmpsl
movsb
addr16
add
lds
add
jno
add
add
add
mov
test
cmpsl
std
add
stos
ret
add
aam
mov
mov
lea
pop
mov
push
ror
add
dec
pop
push
push
push
call
addb
sahf
int
fs
mov
icebp
add
mov
add
insb
fcmovne
add
xchg
shll
addb
imul
pop
addr16
aad
add
add
add
add
push
mov
add
pop
lds
out
cmc
add
add
jge
add
xchg
push
add
cld
jmp
add
popf
add
fld
add
pop
pop
lea
sub
push
lea
push
push
push
push
lea
push
push
push
call
add
add
into
call
roll
cli
addl
in
cmpsl
add
add
adcl
add
stos
pop
xchg
test
test
ja
iret
add
fwait
iret
fmulp
out
add
cmpsl
scas
mov
lods
repnz
add
ret
je
add
imul
loope
icebp
shr
mov
lea
pop
mov
shr
add
push
lea
shl
not
ror
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
push
mov
xchg
rcr
orb
fsubl
add
enter
movsb
jl
add
add
mov
call
add
add
enter
push
pop
add
out
add
push
add
add
add
xlat
nop
add
push
add
add
popa
add
cwtl
add
imul
add
pop
add
push
shr
sub
shr
not
pop
pushl
popl
push
ror
add
lea
pop
mov
add
push
shr
pop
xor
push
lea
push
call
mov
ret
add
popf
shlb
ja
jo
add
add
add
add
flds
add
jbe
in
add
lds
add
js
pop
test
mov
out
pop
jo
mov
shl
add
sti
mov
add
jae
mov
mov
scas
movsl
mov
add
xchg
add
mov
insb
mov
lea
push
testb
les
adc
mov
add
push
push
push
call
xchg
add
jne
add
ja
add
movsl
jb
mov
mov
add
incb
movsb
shll
pop
add
add
faddl
repnz
outsl
add
add
int3
add
mov
lahf
add
rolb
mov
add
add
fmull
add
pop
mov
add
cld
add
mov
lea
pop
xor
call
add
push
add
xor
shl
pop
nop
push
inc
inc
pop
nop
cmp
je
nop
push
sub
sub
xor
pop
nop
push
push
push
push
call
shlb
lret
cmpsb
out
loopne
sarb
sti
lret
in
add
mov
je
mov
add
out
loope
push
call
add
add
iret
add
std
push
test
shl
in
jo
add
mov
lcall
add
aam
push
mov
lea
pop
inc
push
shr
xor
pop
nop
nop
cmp
jb
push
lea
push
push
push
push
push
push
push
call
add
rcrb
mov
add
add
loop
pushf
add
filds
imul
cmpsb
xchg
push
add
mov
mov
popa
xchg
test
cmc
pop
jbe
add
mov
add
stos
jecxz
xlat
lods
add
cmpsb
jno
add
pushf
mov
pop
test
loope
add
mov
sti
mov
lea
pop
xor
jmp
mov
push
inc
add
shl
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
push
call
rolb
repnz
add
add
mov
add
cwtl
leave
xchg
fidivl
add
test
add
out
imul
movsb
add
imul
add
les
scas
push
outsl
add
decb
mov
gs
xchg
add
jge
jo
push
add
lret
leave
add
sub
mov
jb
pop
mov
push
not
pop
add
push
push
push
push
push
push
push
push
call
mov
imul
add
imul
add
bound
add
add
add
test
roll
add
cmpsl
fiadds
push
jnp
lret
push
pusha
int
out
aad
les
in
add
add
arpl
imul
push
jmp
test
fdivrs
mov
mov
lea
pop
mov
push
sub
shr
pop
xor
push
ror
pop
xor
shl
xor
push
ror
pop
shl
xor
push
shl
shl
inc
pop
shl
xor
push
shl
pop
mov
push
push
push
push
push
push
push
call
add
add
je
hlt
pop
xchg
add
mov
push
add
xchg
hlt
test
sahf
lods
icebp
test
add
mov
pop
notl
push
idiv
add
push
data16
ret
mov
addr16
add
call
add
add
add
add
fwait
jb
add
add
pop
jbe
add
pop
add
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
push
pop
filds
gs
add
cwtl
cld
movsl
call
push
pusha
add
add
jae
mov
outsl
addr16
push
add
repnz
mov
test
mov
loop
std
add
jne
cli
add
add
add
cmpsl
mov
add
push
add
pop
xchg
add
pushf
xchg
stos
add
push
mov
add
add
pop
mulb
sub
push
push
push
call
add
call
aam
add
add
add
add
xchg
enter
add
popa
add
jl
shr
add
sbbb
add
jne
mov
int
add
add
scas
add
out
add
add
add
xchg
xchg
lcall
add
lcall
fiaddl
add
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
pop
icebp
push
add
aam
lahf
fldt
add
ljmp
push
mov
add
je
add
imul
add
push
jae
int3
cmpsl
mov
add
test
movb
jmp
mov
aam
cli
jmp
add
add
add
add
movl
cli
add
pushf
xlat
jmp
add
loopne
ljmp
and
pop
push
sub
pop
pop
leave
push
xor
dec
rol
pop
ret
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
sahf
cld
pop
add
jmp
shl
add
add
loope
add
add
add
jbe
add
in
cmpsl
jecxz
mov
add
imul
jnp
lret
mov
add
add
add
add
int3
jge
add
ja
mov
mov
lock
xchg
sti
add
add
add
and
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
ljmp
cmc
nop
xchg
scas
int3
mov
add
sahf
into
lods
mov
cmc
push
add
add
andb
in
shlb
sahf
mov
add
jo
mov
imul
addb
add
movb
int
repnz
in
add
pop
lcall
add
lea
pop
mov
push
lea
push
push
push
lea
push
call
mov
mov
mov
shrl
movsl
scas
sahf
mov
lods
icebp
add
add
add
add
cli
add
xchg
add
test
mov
cmpl
add
negl
mov
add
add
fucompp
add
in
pop
loop
add
jnp
cld
lea
pop
push
push
push
push
add
pop
push
mov
mov
push
push
push
push
push
lea
push
push
lea
push
call
pusha
xchg
jb
jns
add
popf
add
fsubrp
mov
mov
add
push
add
pop
add
add
add
xorl
pusha
out
jmp
test
add
outsl
mov
add
mov
fcmovu
add
aam
push
add
fiaddl
imul
addl
add
mov
add
add
aam
bound
pop
mov
push
lea
pop
test
je
mov
push
push
call
jo
bound
add
mov
roll
out
mov
scas
add
add
icebp
add
addl
xchg
add
divb
stos
add
pop
fs
add
add
add
aam
aad
add
mov
push
add
add
add
mull
mov
out
gs
xlat
popf
fcmovnu
push
mov
mov
pop
test
je
mov
push
lea
push
push
push
push
push
push
push
push
call
add
js
add
add
mov
add
bound
add
sti
add
add
mov
fwait
add
push
js
add
xchg
in
mov
imul
pop
rolb
add
sbbb
push
add
shrl
add
pop
add
imull
loope
add
xchg
add
add
add
xchg
push
add
add
imul
popa
int
les
dec
or
pop
inc
push
lea
add
pop
cmp
je
test
je
push
lea
push
lea
push
push
push
push
call
add
popf
add
add
mov
in
mov
push
mov
add
in
add
add
rolb
add
test
xchg
jmp
push
lds
add
push
scas
push
cwtl
mov
data16
add
jl
jo
pop
add
lods
add
fsubs
fildl
mov
rolb
jle
add
fs
add
add
mov
lea
pop
mov
inc
cmp
je
push
lea
push
push
lea
push
push
push
push
call
addl
add
incb
add
add
add
in
pop
scas
jle
add
add
add
mov
push
rolb
add
mov
add
popf
enter
add
add
std
jne
int
add
jecxz
push
mov
cld
add
fcompl
rolb
fiadds
push
sti
xchg
add
pop
fwait
test
add
xchg
xchg
add
js
xchg
add
mov
lea
pop
test
jne
xor
push
sub
add
sub
pop
pop
push
push
call
jge
movb
add
call
xchg
lcall
hlt
pusha
add
xchg
pop
pop
stc
add
sbbl
jae
int
add
addb
add
outsl
jo
mov
outsl
cwtl
movl
jnp
addl
mov
mov
jp
cwtl
in
outsl
add
loop
add
add
arpl
pop
pop
push
ror
shr
pop
pop
pop
push
shl
lea
pop
leave
push
add
pop
ret
mov
inc
push
lea
push
push
push
push
push
push
lea
push
call
add
pop
lea
mov
add
add
int3
data16
out
enter
add
popa
nop
fwait
mov
shll
flds
add
lret
stos
test
xchg
add
add
add
fidivs
andb
mov
stos
test
add
lret
pop
nop
fsubrs
mov
mov
pusha
rcr
popf
mov
lea
pop
cmp
jne
push
lea
pop
lea
push
sub
shl
sub
pop
mov
test
je
mov
push
shl
dec
add
pop
add
push
sub
shl
pop
cmp
jne
push
push
push
lea
push
push
push
lea
push
push
push
call
stos
clc
ja
hlt
ja
add
mov
icebp
sti
lods
out
cmpsl
roll
mov
data16
loopne
mov
addl
add
arpl
jns
test
add
add
add
lret
push
pop
add
cld
sarl
popf
add
jae
add
mov
movsl
leave
add
imul
mov
pop
test
aam
bound
mov
push
shr
inc
add
rol
pop
test
je
push
push
push
push
push
push
push
call
imul
add
add
into
pop
push
jo
iret
roll
xchg
out
mov
add
add
add
hlt
loope
add
cmpsb
add
push
add
pop
jge
lock
add
jnp
add
repnz
mov
sti
add
mov
add
xchg
push
enter
add
test
add
add
pop
mov
add
push
shl
pop
cmp
je
push
lea
push
push
call
add
pop
mov
add
stc
bound
adc
add
fnstenv
popf
push
add
add
add
roll
mov
ja
mov
add
in
cltd
add
loop
add
add
mov
add
jmp
mov
push
pop
loope
jno
mov
je
pop
add
lea
pop
jmp
xor
pop
push
xor
shr
sub
pop
pop
push
shr
rol
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
call
push
push
mov
add
in
lock
repnz
out
jmp
add
mov
and
pop
into
in
push
add
lock
add
jne
shl
popf
fwait
outsl
andl
cmpsl
rcrl
mov
add
jnp
shll
add
faddl
add
jno
testb
add
add
fmull
leave
ret
push
lea
sub
xor
pop
lea
pop
push
push
push
push
lea
push
push
call
add
add
xchg
jle
scas
gs
test
jo
pop
ficompl
add
add
imul
leave
xchg
jae
add
add
add
imul
add
mov
addb
cmc
mov
out
add
shrb
pushf
clc
repnz
push
add
cltd
fwait
shlb
sti
cmpsb
add
hlt
lea
pop
pop
push
push
push
push
lea
push
push
call
xchg
add
jae
imul
add
lods
jno
scas
lahf
lods
enter
stos
int
mov
add
mov
scas
fistpl
add
add
jno
add
mov
roll
add
out
add
push
add
add
xchg
addb
add
je
mov
loop
mov
mov
roll
add
lds
pop
pop
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
stos
mov
xchg
add
lods
add
mov
mov
add
xchg
test
mov
xchg
xchg
fs
int3
repnz
lods
movb
jns
add
scas
stos
mov
loop
js
mov
add
push
sti
add
push
add
lcall
into
push
mov
add
mov
les
push
shl
rol
lea
add
pop
leave
push
lea
rol
sub
xor
pop
ret
mov
push
shr
sub
inc
pop
pop
push
rol
xor
pop
pop
pop
pop
push
push
push
push
call
xchg
add
add
ljmp
fadds
mov
add
add
xchg
jae
fisubrs
popf
enter
mov
testl
jmp
mov
jns
jge
nop
mov
mov
out
add
add
mov
add
add
add
pop
scas
scas
popa
add
push
xchg
mov
cltd
cwtl
bound
rolb
je
roll
hlt
lea
pop
leave
ret
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
scas
jbe
scas
xchg
lods
add
xchg
nop
mov
lock
movl
add
add
add
jne
aam
xchg
add
add
add
lret
fiadds
jmp
add
mov
jge
lcall
add
add
repnz
ja
in
cwtl
mov
jbe
xorl
add
add
mov
sub
rolb
push
push
push
push
lea
push
call
add
pop
add
add
mov
add
popa
testl
jno
cltd
out
cmc
call
add
pop
cltd
add
mov
rolb
add
subb
add
ficoms
loope
add
scas
mov
mov
nop
addr16
lods
add
pop
add
movb
bound
add
fs
hlt
lea
pop
inc
cmpb
jne
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
jno
sti
movsb
popa
mov
sti
movsb
andl
sti
mov
push
mov
sti
movsb
shlb
sti
mul
sub
add
rcrl
orb
data16
adc
sub
out
hlt
fdivs
sbb
into
cli
mov
aam
test
xchg
test
fmulp
movsl
insb
imul
xor
jnp
push
inc
cmpsl
mov
sahf
and
xlat
aam
pop
cmp
aad
movl
stos
xchg
scas
cmp
stos
pop
mov
and
mov
sub
jl
cmp
rcrl
adc
subb
xchg
fadd
xor
mov
push
inc
push
daa
pop
xor
sub
aaa
pop
loope
adc
scas
push
shrl
or
push
xchg
fldl
adc
sti
jmp
imul
mov
cs
aas
xor
ljmp
push
add
ja
push
xor
push
addb
jo
adc
fucom
add
repz
in
leave
add
jno
clc
push
sarl
add
or
jns
add
xchg
adc
add
stos
callw
cld
push
sbb
lcall
pop
ds
cmpsl
hlt
pop
jno
stos
sub
mov
cld
adc
shl
mov
push
push
hlt
sbb
lods
rorb
jbe
cmpsb
inc
sbb
xor
and
xor
add
or
or
add
pop
push
push
mov
ficoms
jmp
add
dec
rcrl
inc
mov
imull
test
dec
cmpsl
mov
aaa
and
pop
xchg
insb
pusha
ficoms
das
push
adc
xchg
xorl
add
mov
dec
lods
push
mov
testb
mov
and
jns
stc
add
jne
mov
cmp
xchg
pop
push
sti
shlb
cmp
sti
pop
shll
pop
and
mov
xor
mov
insl
out
pop
lea
and
rcr
jne
int3
mov
imul
ds
or
repz
jg
shr
adc
mov
cltd
pusha
std
sbb
lahf
mov
cmp
test
mov
jmp
adc
pop
out
jg
and
cmpsl
ret
jae
cmpsl
mov
sbbb
jae
pushf
int3
pop
in
adc
adc
sbb
jo
mov
sti
aad
scas
dec
adc
mov
scas
lods
icebp
insb
sub
fsub
mov
xchg
cmp
jnp
add
inc
inc
lahf
push
jecxz
enter
sub
adc
lahf
nop
mov
out
out
mov
jne
arpl
pusha
adc
bound
jnp
lahf
dec
adc
sub
movsl
lods
mov
ret
outsl
int3
xor
cli
insl
adc
adc
or
andl
mov
xchg
push
and
movsl
cmpsb
or
fdivs
gs
ret
mov
xor
xchg
pop
push
movsl
mov
stos
cmp
push
lcall
lods
pop
pushf
xor
inc
xchg
nop
pop
nop
jae
cmpsl
and
or
and
gs
test
clc
sub
fidivrl
pop
leave
cmpsb
dec
cmpsb
dec
int3
cwtl
sub
test
mov
ficoml
push
inc
in
dec
mov
xor
pusha
test
mov
xchg
jg
xor
cmpsb
adc
ja
dec
mov
mov
sub
mov
and
pop
pop
mov
cld
ret
push
fimull
bound
xlat
rcl
out
lahf
xchg
jns
mov
mov
stos
mov
dec
jg
inc
ffree
cmp
scas
sub
dec
xchg
adc
sti
inc
cmc
dec
xchg
or
jne
lret
outsb
pop
adc
ds
sbb
cli
push
or
sub
xchg
int3
repz
sub
sbb
sub
inc
push
jae
or
sbb
imull
fnstenv
pop
enter
adc
jmp
out
mov
das
xchg
movsb
mov
lock
or
sub
pop
or
dec
outsb
mov
add
sbb
out
push
xor
inc
pop
aam
shrl
or
xor
fbld
fnstenv
and
xor
dec
ds
ret
or
daa
mov
or
in
cmp
fidivs
mov
inc
mov
jae
mov
test
jns
mov
fcoml
clc
loope
outsl
or
icebp
aam
or
mov
dec
in
outsb
sbb
bound
sub
cs
mov
in
xorb
or
xchg
dec
adc
mov
movl
lret
dec
hlt
push
xlat
jb
in
push
mov
xchg
in
cmpsl
inc
mov
movsb
in
xchg
xlat
sub
push
lds
imul
cmc
int3
repz
mov
jnp
pop
xor
xchg
dec
sbb
mov
std
clc
sbb
adc
movsb
xor
testl
pop
cwtl
cmpsb
jle
push
scas
mov
pop
mov
ljmp
mov
out
sub
xchg
mov
imulb
scas
sub
jb
lret
lods
test
adc
pushf
push
cmp
jbe
cld
fsub
dec
sbb
clc
dec
cmp
xchg
add
wbinvd
std
inc
das
lock
bound
push
mov
cmc
add
or
cmp
ret
sub
adc
loopne
into
cmp
pop
pop
mov
push
mov
ss
repz
fwait
lret
push
loop
mov
lcall
mov
mov
test
jl
aad
gs
xchg
mov
pop
iret
cld
jno
stos
lea
push
int3
dec
rcrl
jp
cmp
scas
cld
or
pop
sub
addr16
xchg
and
das
push
sub
scas
cmp
jmp
mov
mov
fwait
clc
sar
cmpsl
sub
pop
mov
outsl
insl
dec
push
or
dec
pop
sbb
ffreep
or
or
jbe
push
jge
inc
mov
mov
stos
mov
push
pop
cltd
leave
jge
cmp
stos
mov
or
iret
add
popf
into
sub
iret
push
dec
mov
sbb
dec
mov
xchg
insb
sbb
jle
mov
mov
sub
pop
pop
pusha
adc
sbb
mov
ljmp
lret
push
jne
call
mov
inc
stos
push
loope
cmp
gs
ja
test
push
aad
and
cmpsb
push
xlat
icebp
jo
pusha
mov
shr
rclb
das
sub
sarb
outsl
pop
je
pop
xchg
mov
push
in
fwait
jecxz
in
mov
outsl
mov
loopne
jl
pop
fisubl
popa
push
imul
mov
adc
pushf
cltd
jge
in
dec
push
sbb
mov
sbb
fucomip
xchg
adc
mov
stos
sbb
daa
in
or
jl
mov
loopne
testb
sbb
sbb
push
inc
add
dec
lret
push
sub
add
and
push
add
cmp
cmp
jns
mov
mov
sub
outsl
xchg
sub
notl
mov
add
mov
sbb
sbb
je
xchg
mov
mov
dec
xor
and
imul
xlat
sti
fcoml
xlat
aas
aad
fisubrs
jo
and
test
pushf
push
stos
adcb
ret
mov
or
cmp
popa
sbb
dec
int
mov
xchg
sub
mull
cmp
push
pushf
push
sbb
roll
es
in
dec
mov
test
push
pop
int
add
fcompl
pop
xor
mov
lods
or
roll
mov
pop
aas
into
inc
sahf
pop
or
add
mov
orb
jnp
shr
jne,pn
shll
xor
cmp
in
push
enter
and
mov
mov
mov
xor
shrb
div
mov
mov
lds
push
xchg
int
mov
mov
repnz
es
les
push
stos
sub
dec
ss
cmc
mov
jbe
push
adc
test
fcoms
outsb
push
mov
clc
jl
xchg
pop
xchg
aad
and
mov
mov
shlb
sbb
mov
clc
add
loopne
popa
pop
js
pop
popa
out
dec
sub
rcpps
pop
cmp
sbbb
js
or
cmp
lcall
jmp
roll
fstpt
pop
add
and
jo
out
std
fdivs
dec
push
mov
ljmp
add
and
mov
fs
into
and
pop
push
xor
xchg
pop
imul
xlat
adc
xchg
jg
mov
mov
cli
dec
mov
mov
clc
dec
xor
popf
jl
btc
repz
mov
fdivrl
pop
cli
insl
add
loope
add
arpl
adc
das
xchg
and
cltd
repnz
pop
mov
and
mov
aad
mov
das
push
or
sub
leave
mov
push
jecxz
jl
andps
insl
adc
push
out
dec
pop
sub
add
cmpsb
js
stc
cmp
mov
in
aam
adc
mov
or
push
stos
push
adc
pop
dec
andb
repnz
xchg
lcall
xchg
xor
cmc
add
lcall
cli
scas
push
aas
test
jae
sbbb
jecxz
movsl
das
adc
loope
mov
cmpsl
bound
push
mov
push
cld
or
xchg
mov
cs
dec
gs
mov
pusha
sbb
sbb
ljmp
icebp
das
xchg
pusha
ss
lea
jne
jnp
rorb
das
sub
arpl
repnz
cmp
push
repnz
neg
gs
xchg
movsl
mov
xor
cmpsl
rorl
pop
mov
xchg
les
push
and
jae
dec
or
jns
aas
jmp
cmp
xchg
scas
std
cmovo
inc
std
mov
sub
pop
stos
insb
jmp
push
cmpsl
push
lea
lcall
xchg
nop
push
fsubl
add
test
inc
es
fisubrs
out
mov
mov
and
xchg
shlb
imulb
scas
mov
int3
add
xchg
push
or
enter
jno
data16
enter
imul
dec
test
fisubs
aas
xlat
in
lods
pop
push
fdivp
lahf
or
push
aam
fstl
adc
sbb
xchg
mov
scas
imul
add
xlat
xor
jp
xchg
mov
test
xchg
lsl
mov
pop
xor
je
push
push
jae
cmp
pop
push
out
lods
lods
mov
andb
jnp
jp
and
outsl
jp
xchg
adc
xor
je
pop
push
xchg
rolb
push
jge
inc
rorl
in
insl
cmp
xchg
adc
xchg
icebp
insl
and
aaa
xchg
out
or
cld
adc
insl
pushf
jb
push
mov
sar
aam
sub
adc
insl
fisubrl
mov
sbb
popf
js
out
or
test
lds
clc
jmp
push
in
loopne
rcll
and
sbb
in
rolb
inc
adc
cmc
outsl
jecxz
push
addr16
in
pop
sahf
andl
stos
pop
insl
out
fidivs
idiv
cmpl
adc
jge
insl
mov
jecxz
xor
test
aaa
imul
sub
lock
data16
sbb
ret
arpl
aaa
fwait
mov
repz
cltd
add
je
mov
lods
lock
xchg
fimuls
add
mov
mov
adc
std
hlt
test
inc
loope
enter
push
lahf
push
xchg
out
pop
push
mov
test
and
std
inc
mov
bound
xchg
or
sub
in
mov
loope
lock
cmp
mov
repnz
fiaddl
add
or
inc
mov
pop
pop
scas
pop
jo
test
xor
and
in
add
sbb
outsl
cmp
pop
or
sbb
mov
jns
sbb
and
test
mov
shl
aam
sbb
notl
pop
outsb
addl
inc
jno
or
mov
jae
add
test
movsl
cmp
lods
jnp
in
mov
sbb
fs
mov
add
loope
enter
das
bound
mov
push
fsubr
push
pop
pop
fs
mov
test
aam
mov
iret
jo
sahf
xor
mov
pusha
lods
mov
jmp
mov
or
out
mov
inc
sti
mov
cs
and
mov
loope
ret
sub
das
lock
dec
and
mov
pop
mov
sbb
es
adc
mov
arpl
or
push
add
ljmp
add
in
aaa
dec
ljmp
cmp
push
ret
dec
or
mov
ret
adc
in
sbb
or
repnz
adc
inc
lahf
push
mov
push
clc
ficomps
mov
fnstenv
and
inc
jmp
xchg
cli
xchg
shl
fsubrl
pushf
adc
pushf
xlat
pop
sub
aam
dec
adc
cwtl
icebp
jae
mov
mov
movsl
mov
scas
inc
xchg
call
js
into
push
jg
mov
sub
adc
mov
movsb
add
mov
mov
mov
push
mov
mov
ret
rclb
aas
cmpsb
jns
mov
out
lret
mov
stos
test
cmp
orb
ficompl
stos
push
mov
hlt
lret
in
mov
clc
fiadds
adc
lods
mov
adc
mov
imul
cmpsb
xchg
test
leave
push
aas
or
loop
rcll
mov
mov
addr16
stos
pop
gs
jns
jl
xor
inc
ja
aam
xchg
cmp
xchg
out
jle
inc
outsl
fsubrp
rol
push
mov
dec
cmp
push
dec
loope
shlb
cmpsl
adc
pop
xor
repz
bnd
imul
pop
sarl
les
dec
mov
or
fwait
inc
add
repnz
xchg
or
dec
mov
fs
inc
mov
fs
push
les
call
iret
lcall
bound
sbb
adc
dec
leave
cmp
frstor
ja
pop
pop
mov
shrb
ss
data16
adc
jecxz
pop
add
jge
jge
jnp
jge
ljmp
inc
scas
or
vsqrtps
jle
fcompl
mov
xchg
sbb
pop
mov
sahf
addb
mov
shrb
roll
cli
data16
sbb
nop
mov
jae
mov
xchg
cli
rcrl
xor
call
cltd
movsb
sub
xorb
sub
xor
push
mov
repnz
mov
loop
js
push
cmp
sub
pop
mov
mov
insl
pop
or
arpl
add
mov
or
stos
cmp
ret
movsl
jno
or
lds
xchg
adc
jb
pop
push
push
popa
stos
jmp
js
imul
int3
push
push
pop
nop
jmp
and
sbb
jbe
scas
orl
std
mov
or
sub
xor
fstpt
or
inc
into
lds
mov
push
data16
in
mov
adc
inc
loop
inc
push
jnp
push
push
fdivr
jmp
jae
mov
pop
into
aam
imull
cmpsl
lret
lcall
xor
ds
adc
and
out
inc
in
pop
mov
push
sub
mov
sahf
sbb
shrb
jne
xlat
add
mov
push
mov
mov
pop
scas
cmc
out
push
bound
mov
lahf
inc
popf
test
fcomi
shrl
bound
fmulp
in
mov
pop
mov
mov
outsb
loopne
rcr
cltd
jg
mov
mov
jle
sub
loop
lods
dec
push
cmp
rcl
mov
lea
pushf
jb
push
or
adc
mov
lret
jl
out
fsubs
adc
cs
idiv
xchg
subb
pop
ret
pop
decb
pushf
mov
aam
xchg
scas
adc
sbbl
mov
mov
leave
cmp
push
cmp
int3
add
insb
repnz
pusha
aam
xchg
jg
sarl
jnp
inc
push
in
dec
sbb
xor
test
jmp
popa
push
dec
inc
insl
lcall
mov
mov
mov
loope
loop
fnstenv
mov
mov
pusha
leave
jo
out
popf
and
lds
cs
hlt
sarb
push
push
pop
test
in
ret
rcrb
pop
mov
mov
bound
dec
dec
aam
ljmp
cwtl
xorb
notb
lods
popf
mov
jmp
std
xor
jle
ljmp
push
cltd
mov
ss
pushf
sbb
push
and
fistps
mov
mov
jno
cmp
xchg
test
lcall
lret
vmovups
stc
jle
scas
add
jle
shrl
not
xor
jl
dec
loope
wbinvd
movaps
scas
push
scas
dec
jp
out
out
pop
pop
adc
popa
dec
xor
int3
and
jae
jecxz
xchg
fs
cld
pop
jecxz
adc
xor
stos
inc
sub
xchg
inc
jmp
or
lret
xchg
push
fstpt
insb
mov
dec
sub
ds
ret
adc
add
jns
jns
test
sbb
fwait
ljmp
add
mov
loope
adc
dec
in
jp
call
fists
insb
xchg
sti
imul
sbb
shlb
mov
ljmp
cmp
nop
adc
inc
mov
jb
data16
sbb
cli
mov
ljmp
xor
mov
push
ja
inc
jge
mov
and
decb
clc
leave
dec
mov
inc
pop
cmp
sbb
mov
lret
mov
cld
js
add
sahf
mov
mov
ret
jnp
mov
mov
cld
mov
pop
sbb
inc
fstl
jle
out
sbbl
pop
sti
fstl
sub
jne
lahf
pop
mulb
inc
ficoms
mov
and
gs
mov
leave
loop
push
or
outsb
or
sbb
or
stc
scas
std
jne
mov
fs
nop
pop
push
inc
insl
jo
pop
ljmp
out
mov
mov
cltd
or
icebp
loopne
cmc
les
jl
movsl
fsubrs
icebp
or
or
daa
and
jle
imul
mov
cld
fcoms
push
push
les
fimuls
addb
jmp
lods
ljmp
and
bound
test
push
jecxz
and
imul
push
sbb
shrl
in
lds
jb
enter
insl
pop
dec
out
pop
test
dec
bound
cmp
mov
and
push
push
xchg
sahf
outsl
ds
mov
jne
pop
xlat
arpl
pop
lcall
add
mov
xor
mov
dec
push
mov
loope
in
lods
xor
jg
push
and
push
mov
pop
mov
xor
scas
mov
nop
sub
clc
jp
in
loope
mov
dec
xor
cmp
lret
adc
pop
fucompp
lret
jno
push
sbb
mov
sub
add
inc
inc
std
in
xor
jbe
or
nop
fwait
add
call
jecxz
xor
iret
inc
push
in
fdivs
xchg
mov
icebp
das
les
daa
aas
lret
xor
loop
mov
test
adc
dec
mov
orb
clc
js
stos
xchg
dec
jle
cltd
mov
xchg
fidivrs
cmc
fisttps
add
jmp
sarl
leave
jl
stc
ret
daa
or
dec
push
xor
xchg
dec
xchg
mov
xor
mov
cmp
in
jnp
cmpsl
bnd
orb
and
mulb
out
jl
ret
shr
lcall
mov
pushf
xlat
mov
call
push
pop
cwtl
dec
shrl
adc
ret
inc
mov
and
xchg
jae
push
jl
lret
sub
pop
stos
adc
xchg
adc
scas
ds
add
sub
push
inc
repz
mov
out
loopne
dec
dec
mov
add
push
sub
add
addr16
jmp
mov
hlt
adc
inc
lret
mov
push
imul
cmc
xor
data16
pop
shl
pop
sub
sbb
push
subl
xor
repnz
ret
daa
movsb
sub
or
testb
xor
movl
test
cmp
xchg
fsubrl
xor
std
xlat
movsb
cmp
pop
mov
push
imul
mov
pop
out
cmp
or
mov
lock
xchg
xchg
out
rol
ljmp
fidivrl
sbb
cltd
cmp
add
jmp
data16
push
popf
add
arpl
mov
aad
cltd
pop
aas
arpl
scas
jecxz
mov
outsb
ret
push
imul
sbb
and
pop
xor
push
mov
loope
dec
jle
mov
test
or
das
imul
testl
xchg
insb
mov
adc
cmp
data16
fs
cmpsb
mov
push
xchg
mov
call
fbld
in
es
cs
push
cmpsb
or
and
sbb
xor
movsl
push
xchg
aaa
ret
inc
xchg
add
int
int3
push
adc
sbb
stos
dec
mov
cmc
jo
stos
roll
dec
mov
add
mov
jne
test
subl
fisttps
push
gs
push
jecxz
hlt
adc
and
inc
insl
aad
rcll
mov
cmp
movsl
xlat
sub
outsl
jbe
sti
pop
pop
stc
pop
dec
push
call
scas
push
outsb
jg
and
ds
mov
cmc
mov
xlat
outsl
mov
pop
xchg
inc
or
push
or
adc
dec
cmp
fldenv
sarb
cs
cmpb
stc
push
outsb
insb
xor
add
mov
cmpsb
mov
adc
push
in
and
xchg
or
jge
ljmp
test
cwtl
mov
mov
js
hlt
inc
adc
dec
int3
mov
mov
mov
pop
xor
mov
ret
jge
outsb
push
pop
inc
cmp
int
and
fucom
or
repnz
push
adc
stc
pop
jle
in
xchg
insl
sub
fsts
and
adc
addr16
xchg
dec
jb
mov
cmc
ss
lock
popa
mov
fxch
push
sbb
adc
mov
pop
out
push
ret
cmpsb
sbb
pushl
addl
fldt
cli
insb
iret
and
out
loope
sarb
iret
dec
push
mov
adc
add
add
cmp
cld
repz
mov
and
std
popa
or
syscall
mull
lods
das
fadd
xchg
or
lahf
leave
lock
imul
mov
mov
stc
xchg
jg
xor
and
repnz
jle
cld
notl
int3
mov
jp
xchg
mov
bound
in
jb
pop
sub
add
and
jnp
mov
test
loopne
jmp
loopne
sub
pusha
loope
fnstenv
out
xchg
enter
lock
icebp
jmp
xchg
push
mov
xor
dec
jl
in
dec
xor
lcall
inc
mov
aas
xlat
stos
pop
lea
mov
jge
add
xor
mov
in
mov
add
xchg
cmc
daa
orb
inc
cmp
vcvtsd2si
or
in
cld
pop
xchg
mov
in
pop
daa
jbe
rcl
in
inc
out
pop
xchg
push
mov
scas
outsb
xchg
mov
push
dec
jle
xlat
add
mov
fsubs
movsl
adc
mov
xchg
pop
rcr
push
lret
lock
dec
inc
pop
sarl
cmpps
lret
lret
movsl
les
and
or
ret
jno
ja
sub
push
aaa
inc
testl
pop
xadd
ret
fisttpl
pop
xchg
xorb
sub
pop
pop
popf
sub
lret
pop
sbb
sub
xchg
testl
dec
out
adc
nop
sti
fstpl
push
cmpsl
cmp
mov
adc
aam
in
adcl
jae
icebp
sahf
cmp
into
mov
sbb
jb
repz
sbb
call
cli
aas
dec
push
add
insb
jp
dec
jns
push
mov
iret
sub
bound
jo
jg
jge
sub
arpl
push
xor
in
push
mov
sub
xor
and
push
dec
mov
and
jmp
jb
mov
es
enter
dec
sub
aam
repz
sbb
push
xchg
add
push
movsl
inc
in
pmullw
fs
adc
add
pop
das
cmp
in
in
mov
mov
out
imul
lcall
enter
out
jae
pushf
and
adc
pop
inc
cmp
outsl
xlat
fdivrs
stos
lods
adc
mov
pop
mov
xchg
imul
push
lret
nop
outsl
gs
mov
imul
rcrb
cld
out
jbe
sbbb
movb
out
cmp
inc
cs
aad
mov
sbb
popa
rorb
or
icebp
xchg
xchg
faddl
rep
out
decl
jp
punpcklwd
jle
xchg
in
mov
add
jnp
lret
add
mov
xchg
or
jmp
mov
and
scas
in
and
xchg
jns
pop
pop
mov
cmpl
incl
sub
loop
je
mov
jb
sub
iret
jbe
sub
lock
sub
fsts
jnp
jle
inc
cmpsl
mov
iret
sbb
sbb
roll
outsl
notb
cmp
cmp
push
push
adc
add
fisubrs
mov
push
adc
inc
xchg
mov
cltd
movsl
sbb
das
add
in
inc
in
jo
pop
pop
pop
out
mov
ja
popa
dec
mov
cli
mov
mul
push
fwait
push
sbb
xchg
lea
jmp
adc
outsl
mov
int
add
adc
iret
pop
xchg
test
mov
lcall
inc
scas
incl
xchg
cmp
and
push
xchg
shl
cmp
adc
pop
sub
scas
inc
pop
clc
add
cmp
sbb
pop
mull
adc
sbb
repz
xor
mov
mov
pop
sti
ljmp
cmp
popa
orl
mov
xor
roll
std
add
inc
lods
fisubs
call
cmp
cltd
add
stc
push
scas
xor
and
or
shll
cld
jg
cmp
and
hlt
add
out
ret
outsl
xor
and
jbe
stos
jns
mov
and
sub
stc
sbb
jne
loop
fnstsw
cmpsl
push
out
dec
call
ljmp
negl
inc
jns
mov
and
or
xor
pop
sbb
lcall
jnp
in
and
test
jle
adc
jecxz
sub
adc
sbb
pushf
mov
inc
aas
add
in
pop
jp
loope
sub
sbb
adc
lsl
sub
mov
add
jno
outsl
aas
fwait
mov
popa
and
push
insl
popa
dec
rolb
push
psubsw
lds
divb
rcll
cmc
fiadds
arpl
ja
insb
xchg
cmp
je
mov
stos
hlt
push
xchg
mov
mov
adc
and
ljmp
stc
jmp
inc
lret
lret
in
mov
adc
dec
or
fldt
test
ja
fisubrs
pushf
loop
mov
test
sarb
jle
and
push
jno
test
xor
orl
cs
sub
sahf
xchg
cmc
jae
es
pop
jl
mov
call
xchg
push
cmp
or
dec
cld
jmp
std
dec
daa
dec
mov
cli
pop
jae
and
xchg
in
sbb
frstor
xor
mov
and
or
out
mov
push
mov
mov
xor
in
stos
jns
mov
sbb
jp
inc
xor
je
dec
push
rol
rcrb
pop
sbb
mov
fildll
cmp
jl
loop
mov
sub
loopne
daa
lret
insb
pop
sti
gs
dec
adc
jns
adc
jecxz
push
pop
testb
xchg
cmc
call
sub
sub
adc
daa
inc
out
movsl
iret
sbb
mov
sbb
les
lret
int3
cmpsl
std
mov
xor
mov
icebp
push
dec
shl
out
or
xor
sti
xchg
sbb
filds
nop
std
inc
xor
sbb
lret
mov
sbb
sub
xor
lds
in
addb
inc
push
aas
aaa
sbb
adc
int3
mov
add
mov
lds
jg
lock
in
pop
jmp
mov
test
push
dec
ret
dec
dec
and
stos
scas
sti
imul
mov
inc
sbb
lret
es
jns
fistpl
daa
pop
int
inc
mov
in
cld
int3
inc
pop
popf
aas
add
pop
dec
popa
sbb
pop
iret
sbb
mov
adc
fwait
push
xchg
mov
pushf
jne
sbb
mov
cmp
daa
push
pop
rclb
jmp
cmp
xchg
mov
adc
dec
mov
inc
jg
ja
cmpsl
repz
dec
jmp
xchg
xchg
adc
xor
jl
push
push
sahf
bound
mov
pop
in
pop
insl
sbb
cmp
inc
adc
dec
test
cmp
and
sbb
jp
add
sbb
add
out
jnp
loope
loop
mov
out
adc
pop
inc
pop
adc
scas
or
jae
cld
shrb
mov
mov
ds
pop
int3
sti
jg
flds
pop
scas
lret
or
sub
pause
fisttps
mov
dec
daa
pop
fisubs
inc
clc
dec
push
shlb
cwtl
add
xchg
jns
jecxz
lods
mov
push
push
inc
fstpl
out
mov
imul
movsl
arpl
adc
ljmp
mov
mov
pop
leave
out
pusha
call
push
xchg
or
lret
inc
jge
jb
in
stc
test
adc
mov
jo
jno
daa
cmpl
mov
pop
iret
sub
cli
inc
mov
pop
adc
or
loop
mov
loop
cltd
sub
inc
adc
ret
jne
in
fldl2e
je,pn
add
int3
xor
out
lea
xchg
mov
push
rcll
int
dec
cmp
out
in
divl
ret
sahf
and
test
inc
mul
xor
ret
sbb
xchg
push
sbb
jmp
ds
and
adc
js
dec
and
jno
ds
mov
lds
out
loop
mov
das
lretw
ljmp
sub
mov
mov
into
xchg
ret
rorl
xchg
lcall
pop
out
in
repnz
push
das
dec
sbb
popf
xchg
in
sbb
mov
and
cmpsl
jle
loop
adc
cs
sti
xor
xor
nop
ja
cmp
sbb
pop
xchg
loope
arpl
mov
sahf
std
push
inc
pop
cli
test
cmp
sbb
mov
dec
push
sti
jns
push
in
inc
or
add
test
insb
clc
insl
fsubrl
push
mov
jne
sarb
leave
loopne
xor
xorb
cmpsb
ljmp
aam
push
push
add
idivl
pop
push
out
daa
ljmp
ljmp
gs
imul
daa
jmp
jge
cmp
std
testl
stc
lea
fidivrl
fcoml
mov
arpl
push
or
stos
in
add
es
insl
xor
sbb
and
shrl
fs
pop
leave
mov
push
pop
fdivrl
fnstenv
sbb
mov
arpl
cmp
movsb
ret
cld
jp
cmp
adc
mov
cmp
pop
pop
mov
cmp
sti
mov
mov
ja
ds
negb
sub
pop
fsubl
frstor
sbb
inc
dec
xchg
ljmp
ss
push
xchg
xchg
push
sbb
int3
and
ret
ficompl
push
push
test
add
push
jg
rcl
push
ds
xchg
xchg
jge
or
iret
xor
lock
dec
fcmove
jbe
div
negl
stos
push
icebp
stos
mov
fcomps
iret
adc
iret
or
je
movl
or
call
lds
xor
jns
mov
xor
fwait
test
das
adc
mov
dec
sub
mov
leave
add
in
addb
cld
mov
cmp
mov
mov
xor
sbb
pushf
mov
arpl
sahf
movsb
int3
lods
dec
add
cltd
lds
pop
les
adc
cmpb
fucom
jnp
push
add
ja
aad
cmpsl
sub
in
fdivrl
mov
adc
mov
mov
dec
adc
mov
inc
xor
add
into
jmp
in
or
mov
es
loop
aaa
xorb
lock
jg
repz
or
cmp
dec
or
movsl
xchg
shll
int3
mov
adc
inc
pop
xlat
mov
mov
ljmp
lock
sbb
lret
xchg
dec
mov
xor
rorb
mov
pop
push
adc
push
mov
push
cmp
mov
pushf
enter
cmc
cltd
xchg
jae
test
sub
push
jl
push
sub
pop
jmp
dec
data16
enter
pusha
std
sub
insl
sbb
std
rcrb
rcr
loop
es
sub
cmp
sub
lcall
sarl
aam
out
or
cmpsb
pop
mov
and
jle
and
nop
and
push
inc
sbb
dec
mov
stos
popf
dec
lods
lods
cs
inc
das
and
nop
inc
aaa
popa
inc
cmp
push
ficompl
out
pop
mov
lret
mov
xchg
fadds
inc
lods
cmpsb
jmp
mov
jmp
cld
fxrstor
xchg
mov
mov
shlb
lcall
cwtl
sbb
shrb
cwtl
fnsave
mov
std
or
aas
dec
adc
push
pop
jl
ljmp
cld
or
sub
add
or
dec
in
adc
adc
jb
decl
cmpsl
xor
iret
subb
xor
push
and
push
sub
fistps
movsb
cmp
cmp
loop
in
fnstsw
adc
rclb
push
fstpl
pop
cs
mov
push
add
popa
mov
call
inc
mov
inc
lea
jnp
jae
int3
push
iret
sub
mov
cmp
icebp
push
stc
jmp
xchg
sub
push
test
sub
add
or
inc
xchg
scas
leave
jp
imulb
aaa
test
sbbl
in
push
jl
jb
mov
xchg
inc
clc
in
outsl
stos
or
sub
add
inc
sar
inc
xor
cmpsl
stc
stos
shrl
xchg
push
mov
mov
in
mov
add
dec
mov
cltd
xchg
sub
push
adc
cltd
fs
sub
xchg
adc
lahf
add
aad
dec
nop
mov
push
test
push
fists
leave
add
sbb
ja
push
fldenv
out
xchg
fwait
xor
in
jbe
daa
cs
push
xchg
dec
ja
fsubp
xor
mov
adc
jp
ret
sbb
jne
push
jbe
mov
pop
ret
fldt
stos
adc
aas
movsb
out
pusha
pusha
lock
fildll
leave
sbb
fcom
mov
das
lds
aad
cs
or
xor
movsb
pop
mov
test
je
es
mov
icebp
adcl
xchg
jb
scas
xor
cmp
and
cmp
out
xchg
das
mov
enter
cmp
mul
dec
rcl
pop
xchg
stos
push
mov
in
push
mov
sbb
mov
dec
loopne
xchg
jo
out
mov
rol
iret
fldt
mov
and
fisubl
insl
cmpsb
xchg
movsb
mov
sub
insb
fisttpl
push
clc
lods
sub
daa
mov
mov
pop
es
ss
mov
cmp
jg
les
dec
cmp
and
xor
lahf
cld
loopne
pushf
fnstsw
loopne
mov
test
fsubl
jb
and
sti
cmp
lcall
les
or
push
data16
sti
cmpsb
add
cmp
dec
les
mov
stc
mov
es
mov
or
movsb
jbe
mov
mov
or
test
adc
dec
push
setge
lods
outsl
lahf
xchg
cmp
sahf
or
in
ret
jl
xchg
push
fists
add
js
repz
jecxz
ret
xor
sbb
dec
add
fldl
dec
lahf
and
jl
mov
repz
outsb
inc
xchg
lea
mov
fwait
lret
pusha
sbb
ret
add
mov
mov
cmp
or
mov
lret
adc
testl
sbb
ret
xchg
test
sbbb
and
mov
push
popa
and
lds
insb
xor
mov
aaa
xor
movsb
inc
sbb
sub
mov
dec
pop
sti
dec
enter
stc
aam
mov
mov
mov
dec
or
cld
enter
adc
mov
jae
ljmp
mov
and
adc
xchg
mov
mov
sub
or
loope
int
and
cmp
inc
in
stos
push
arpl
mov
dec
pop
and
xchg
mov
pusha
mov
cwtl
add
sar
fisubs
cmpsb
adc
lds
cmp
mov
adc
sbb
dec
cmovp
inc
divl
sub
mov
xor
lock
filds
adc
sbb
adc
jbe
test
dec
mov
mov
and
mov
adc
jecxz
gs
outsb
xchg
mov
popf
jne
loope
mov
lds
out
popa
fsubs
mov
xchg
mov
push
ret
arpl
call
or
repz
mov
push
pusha
or
xor
rcrl
outsb
pop
cmp
pop
pop
sub
push
cs
cwtl
add
ret
subl
jge
imul
lret
and
jb
and
push
in
into
ror
pop
jecxz
dec
inc
popa
sub
mov
pusha
or
rep
or
jno
sbb
add
mov
fcomip
xor
aad
cs
pushf
jne
hlt
fs
scas
test
mov
push
fldt
fs
jae
cld
cmp
shrl
js
mov
int3
scas
test
stos
push
jecxz
mov
and
ds
mov
push
xchg
mov
dec
shr
adc
fistpl
test
clc
stos
cltd
hlt
arpl
jb
jmp
jge
daa
jbe
sahf
adc
xchg
out
dec
fldl
es
fcoms
andb
jle
or
lds
push
mov
pushf
dec
and
movsl
fcomp
int
insb
xor
mov
jno
nop
mov
pop
xchg
or
movsb
std
or
or
cmp
das
fwait
cmp
jnp
sbb
cmp
sub
orb
ja
sub
nop
fldt
push
mov
mov
add
orb
mov
sub
or
sub
pop
mov
sub
das
dec
rcrl
push
xchg
cltd
jbe
popf
cmpb
cli
push
push
clc
add
cmp
mov
xlat
mov
pop
into
inc
or
sbb
jge
bound
adc
xchg
jmp
dec
imul
adc
testl
jo
xor
and
push
aam
jg
push
lahf
sub
xchg
push
stos
test
repz
sub
xor
sahf
ljmp
out
or
mov
cmp
cld
cmpsl
aad
dec
xlat
sti
pop
mov
cmp
mov
bound
lahf
rorl
es
pop
or
xchg
pop
cmp
test
mov
inc
test
or
es
adc
inc
outsb
xor
sub
daa
jae
mov
rorl
mov
adcb
mov
fdiv
add
push
cmp
int
add
cmpsl
jge
cmp
add
fdiv
test
fists
int3
jg
je
std
mov
cld
pop
dec
lods
fbld
movl
pop
fdivrs
inc
in
xchg
pusha
shrl
pop
add
insl
aas
inc
sbb
dec
loopne
scas
inc
hlt
fwait
cmp
adc
inc
out
mov
push
jmp
dec
test
jmp
push
outsb
test
mov
hlt
xchg
adc
and
loopne
mov
pop
mov
xchg
push
fsubl
std
lds
in
sub
mov
sbb
mov
les
mov
js
or
faddp
push
adc
fldpi
xchg
jnp
imul
xor
test
aaa
movsb
and
andl
fs
push
data16
pop
stc
sti
jl
sahf
rcrb
add
dec
mov
jg
negb
dec
cmpsb
push
mov
inc
bound
and
push
leave
adc
daa
pop
or
rcll
mov
dec
popf
popa
add
aam
aas
adc
jmp
cmpsl
jmp
push
aas
imul
lret
and
lcall
jl
scas
pop
mov
out
outsb
outsl
imul
jmp
inc
jb
xlat
mov
hlt
outsb
movsl
cmp
testb
fstpt
aam
scas
aas
cmpsb
xor
decb
pusha
loop
scas
gs
and
dec
in
inc
adc
aaa
out
aaa
mov
push
mov
and
gs
orl
and
jp
icebp
xchg
je
push
ror
push
mov
mov
in
mov
xor
hlt
insb
repz
in
dec
inc
push
lret
jae
orb
insl
adc
push
lea
mov
lds
and
inc
dec
stos
jo
push
mov
sub
mov
add
loopne
jmp
mov
mov
mov
lods
mov
and
lods
iret
fs
xor
xchg
jg
adc
xor
ja
jb
xchg
lds
in
ja
fldl
push
icebp
dec
pusha
jo
mov
xor
sub
rolb
lea
pop
jbe
lcall
mov
roll
pushf
rcl
xorl
pusha
pop
call
pop
scas
pusha
jb
fstps
push
mov
dec
push
dec
pop
jmp
add
and
inc
add
loop
int
aad
popf
aas
mov
or
xorb
sub
inc
repnz
dec
push
sub
inc
push
add
add
mov
sti
cmp
xchg
into
inc
lret
jl
mov
push
stos
fistpll
sti
mov
into
ret
lea
or
mov
aas
cld
pop
fstpl
xor
into
outsl
scas
xchg
outsl
data16
jne
lcall
pusha
int
mov
in
jg
or
sbb
push
sub
popf
mov
xor
add
xorb
adc
xchg
xor
sbb
sbb
cmp
mov
pusha
rcll
lods
daa
pushf
addr16
stos
mov
mov
in
mov
leave
mov
sub
sarb
and
fsubs
dec
scas
scas
xor
xchg
pop
xchg
out
mov
xor
push
jl
repnz
js
loopne
lock
jmp
cwtl
out
mov
cmp
sub
cmp
sbb
mov
push
fcompl
aaa
jae
and
and
int3
or
jns
cmp
cmp
jnp
ja
lahf
cmc
cmp
cmpsb
mov
out
and
pop
jnp
subb
pop
pushf
pop
incl
jmp
mov
mov
mov
test
xchg
testl
inc
xchg
ljmp
lods
pminub
out
xchg
sub
lea
pop
cmpsb
lret
pop
xchg
inc
cmpsl
xchg
iret
cmp
int
sub
adc
ret
jno
test
repz
jns
xor
fadds
cmpsl
inc
dec
mov
and
mov
sbbb
sub
stos
push
js
ljmp
cmp
movsl
jns
add
imul
sbb
rcll
arpl
in
mov
xchg
outsl
and
test
push
jl
push
jae
pop
dec
fisubrs
cmc
push
in
stc
psubusw
std
jle
mov
xor
sub
push
inc
xor
imul
mov
es
mov
sbb
pusha
test
fwait
and
les
xor
lods
loop
cmp
lret
js
and
pop
imul
cltd
pop
sub
and
inc
mov
pop
mov
cmc
data16
xor
sbb
adc
clc
mov
es
loopne
xor
inc
pop
rorl
jno
push
xchg
and
mov
push
dec
sbb
icebp
push
or
push
adc
dec
iret
ljmp
inc
fimull
insb
stos
inc
adc
mov
xor
ljmp
xorb
pop
pushl
stc
stc
add
mov
sbb
xchg
aas
jecxz
call
iret
inc
adc
repnz
das
jle
mov
pusha
pop
int3
or
sub
rcll
cli
ret
rorl
lods
mov
xor
ds
enter
mov
daa
sub
bound
pop
add
fidivrl
mov
sbb
jg
das
xchg
jbe
sub
push
out
push
sub
push
movsl
mov
stos
sub
sbbl
lods
nop
adc
int
inc
push
sub
inc
fisttpl
cmpb
andb
inc
sub
sbb
xor
pop
xor
jnp
add
sbb
xor
scas
test
enter
mov
aaa
daa
push
test
sbb
dec
pop
pop
scas
lds
pushf
pop
je
out
das
imul
ljmp
mov
cmp
sbb
xchg
adc
iret
aaa
xchg
jp
jns
pop
adc
ljmp
xor
jg
sahf
and
dec
xor
popa
and
rcr
xor
arpl
js
xlat
and
cmp
and
das
je
sub
fdivl
test
stos
adc
mov
mov
pop
xchg
insl
mov
mov
jmp
loope,pn
and
mov
mov
cmp
int
stc
fsubs
aam
jmp
std
add
lahf
out
add
sbb
push
sbb
fisubrl
hlt
xchg
icebp
jmp
mov
and
and
popa
test
mov
pop
mov
orl
xchg
outsb
inc
dec
enter
sub
pop
adc
out
shlb
pusha
mov
movsb
data16
fisubrs
icebp
mov
std
dec
test
jmp
call
into
pop
into
gs
xchg
pusha
test
dec
mov
rolb
lcall
adc
mov
fidivrs
mov
push
xor
gs
or
movsb
push
andl
mov
jecxz
insb
es
popa
aas
push
jge
sub
in
movl
cltd
fstps
mov
scas
push
or
and
ret
out
cltd
or
sbb
sub
test
push
mov
iret
out
cmp
cmp
push
push
pop
sbb
out
cmp
popa
sub
lea
dec
pop
icebp
mov
lods
mov
stos
jmp
mov
add
mov
aaa
mov
sbb
hlt
outsb
mov
pusha
xor
xchg
jmp
aaa
das
decb
jmp
pop
adc
popf
pop
sbb
stos
cs
cs
push
mov
add
xor
cltd
popf
arpl
sub
or
in
xchg
sbb
xchg
leave
inc
cmp
call
cmpsb
lret
push
dec
cmpl
andb
cwtl
mov
inc
sub
lret
sbb
mov
clc
cltd
lods
cmpsb
jg
adcl
into
jg
mov
add
xchg
sub
cs
push
inc
ljmp
mov
xchg
inc
dec
lock
std
push
mov
mov
test
mov
test
ret
xchg
adc
push
push
inc
mov
gs
mov
imul
mov
xor
lcall
dec
jg
sub
gs
stos
cmp
push
daa
mov
das
push
inc
pop
or
fbstp
aaa
mov
loope
hlt
sbb
mov
popf
sbb
dec
in
dec
lock
xor
shll
gs
imul
data16
ss
or
jae
es
pop
lahf
hlt
jl
loop
mov
insl
dec
inc
call
mov
aad
les
mov
ja
stos
xchg
inc
inc
repz
ret
outsb
cs
sub
out
push
lea
xchg
cmpsl
add
lea
fscale
outsl
sbb
dec
bound
xor
loop
popf
stc
aaa
loopne
xchg
fidivl
out
dec
xor
repnz
add
mov
scas
scas
fmul
rcll
push
mov
jno
pop
and
adc
repz
sbb
out
jmp
movsb
aad
inc
shrl
pop
push
mov
pop
mov
outsl
pushf
mov
outsl
inc
mov
ficompl
mov
xlat
mov
mov
mov
daa
pop
popa
cltd
and
hlt
push
xor
inc
pop
xor
xor
int
scas
cs
mov
xchg
jge
stc
mov
and
dec
inc
pop
cmp
fldcw
and
push
dec
loopne
pop
scas
lods
jg
mov
push
sbb
pop
ret
loopne
or
mov
pextrw
sbb
xchg
inc
and
push
dec
mov
jmp
andl
inc
push
out
adc
xor
popa
arpl
cmp
out
sub
stos
dec
sbbl
cld
pop
xor
sub
jbe
push
popa
ret
sbb
lods
inc
push
shll
jb
fnstenv
jp
inc
push
lret
in
jmp
mov
mov
push
jns
and
out
out
jns
jge
loopne
sub
scas
pop
scas
out
mov
jecxz
cmc
sbb
sbb
cmpsl
sbb
aaa
or
xchg
and
push
or
mov
mov
lds
bnd
pop
inc
and
scas
add
pop
out
adc
mov
movsl
lods
xor
xchg
adc
xchg
sbb
cmp
push
mov
jle
pop
dec
daa
fmull
int3
mov
or
lcall
mov
lods
jnp
xchg
sub
cmc
hlt
sbb
imul
orl
repz
jnp
push
sub
cmpsl
push
rcrb
jno
mov
mov
push
sbb
lods
in
push
add
xor
jns
inc
cmp
push
inc
outsb
aas
sub
adc
lds
mov
and
sbb
mov
add
jno
test
ljmp
jmp
pop
mov
or
cmp
mov
push
mov
out
or
xchg
test
je
dec
push
lock
add
fs
mov
cli
inc
inc
or
sub
sbb
cmpsb
test
xor
jle
or
xchg
xorl
mov
inc
fistl
mov
les
sub
sub
and
mov
dec
mov
aas
nop
mov
cmp
dec
or
das
or
in
cmp
je
lret
lods
mov
shll
pop
sbb
pop
cmp
or
ficomps
ds
fisubrs
sbb
out
gs
xor
cltd
pop
cmc
int
aaa
iret
je
push
ret
cltd
xchg
jmp
or
pop
lahf
xchg
inc
push
call
lock
mov
lahf
ret
jp
out
add
sub
popf
dec
xchg
loop
jecxz
vmread
pop
in
dec
orl
rorb
dec
sti
aaa
ja
fcoml
jnp
lock
pop
aas
data16
rol
or
pusha
aam
test
stc
fwait
mov
push
inc
dec
inc
fmuls
xchg
jno
in
movsl
lods
mov
nop
cmp
xchg
fbstp
dec
clc
lahf
call
dec
aaa
pop
jmp
clc
xor
xor
or
aaa
inc
notl
mov
adc
cmp
enter
pop
dec
cld
fwait
mov
add
mov
icebp
xor
scas
out
push
in
subl
xchg
mov
loopne,pt
jp
cli
xlat
clc
jecxz
fsubr
das
push
test
jnp
mov
mov
xor
push
dec
mov
or
imul
push
mov
shrl
xchg
fmull
cltd
cltd
outsl
leave
fcompp
or
xor
mov
ss
sbb
cmp
std
or
sub
int
mov
adc
int
scas
jne
jae
imul
push
les
adc
xor
dec
out
sub
jmp
nop
xor
xchg
leave
aas
dec
lahf
rorb
dec
rclb
push
push
fcoms
adc
fnstsw
adcl
xchg
xchg
push
subb
push
comiss
sbb
sub
ja
cli
mov
repz
add
add
xor
movsl
and
xchg
add
mov
shr
leave
shll
ret
jae
rorl
push
push
inc
cmp
loope
sub
xchg
dec
ss
mov
add
gs
loopne
jo
fidivl
sub
jl
out
xchg
and
dec
pusha
push
js
mov
push
pop
arpl
add
mov
mov
cmp
mov
adcb
loopne
xor
push
xor
inc
or
pcmpeqd
pop
jbe
cltd
sub
jmp
fs
dec
out
sbb
mov
fld
fstpl
out
jno
int
mov
push
sbb
mov
mov
mov
ja
insl
jae
js
iret
ss
cmp
dec
push
pop
imul
lods
adc
cmpb
out
mul
dec
xchg
stos
push
pusha
testl
xor
adc
iret
pop
sub
iret
lret
cmp
pusha
push
jns
pop
pop
jne
test
insb
fstps
out
dec
cmpsb
sbb
loop
shll
xchg
jp
dec
lods
gs
sub
nop
xchg
inc
and
ret
icebp
mov
pop
inc
loop
leave
stc
enter
cmp
dec
inc
fcmovnu
xorl
dec
push
cmpl
in
jmp
je
popa
divw
mov
fldcw
mov
mov
sbb
pusha
out
mov
sbb
jle
js
cltd
xchg
pop
lcall
movsb
push
and
pop
mov
mov
push
or
adc
sarb
mov
outsb
jl
jecxz
mov
adc
in
fmull
in
std
aam
add
dec
jmp
std
sbb
jae
std
pop
xor
repnz
out
outsb
lods
jl
cmpl
out
sar
nop
sbb
lods
decb
jle
iret
dec
add
mov
cld
or
lods
mov
addl
sbb
inc
and
jns
or
stc
adc
pop
repnz
adc
out
add
sub
and
cmpsb
icebp
push
cmp
add
mov
lahf
and
je
movsb
jp
push
shlb
jge
push
fimuls
and
jnp
in
les
mov
push
movq
pop
push
xchg
pop
lahf
and
sub
jle
lcall
fildl
xor
xorl
cmc
push
leave
pop
lret
notl
dec
pusha
push
push
xchg
xor
fsubp
mov
xor
daa
cmc
fwait
je
mulb
push
test
rclb
pop
jae
test
sar
test
aas
mov
jge
or
or
xchg
int3
mov
aad
addl
jg
xchg
lods
xchg
adc
sub
adc
xchg
imul
fsts
dec
xchg
xor
pop
sub
sub
push
addl
mov
lcall
jb
or
push
addr16
adc
inc
int
inc
pop
xchg
dec
fnstenv
dec
jae
daa
fnsave
push
xor
push
fst
in
call
push
mov
jmp
stc
push
inc
push
insb
xchg
xor
cmp
add
push
sbb
mov
sbb
inc
dec
mov
lahf
test
mov
fbld
fsubrl
and
clc
add
lret
and
rorb
pop
jb
add
je
push
sbb
nop
push
cmpsl
dec
aam
inc
pop
xchg
aas
sahf
xchg
mov
lock
enter
push
pop
adc
dec
xchg
xorb
clc
jb
sbb
adc
jg
mov
cmp
mov
push
pop
xor
mov
or
mov
test
test
mov
outsl
add
enter
rcll
mov
jae
and
mov
outsl
or
lret
add
jge
xchg
ja
popa
push
sahf
lods
fiaddl
std
pop
bound
jo
leave
add
jl
push
pop
stc
xor
push
dec
ds
push
adc
jae
outsl
add
pusha
xlat
mov
imul
fwait
add
subl
ss
lret
ds
jmp
iret
push
jg
mov
leave
gs
jb
imul
and
sub
inc
or
sbb
jb
push
dec
xchg
movsl
int3
xchg
or
xchg
pop
inc
fs
out
xchg
jnp
inc
das
mov
ret
inc
cmp
inc
push
addr16
insb
lods
notl
xchg
mov
es
add
jns
mov
xor
loop
sbb
bound
rclb
mov
cmp
xor
and
mov
out
into
ss
cmpsb
lock
jne
and
gs
and
mov
jnp
push
jl
inc
rorl
popa
inc
adc
mov
inc
call
aaa
jl
adc
cmpsb
orl
xchg
lret
mov
adc
stos
iret
cmp
mov
adc
addl
stos
outsl
or
inc
andb
push
addl
mov
in
jle
dec
xor
pop
enter
jb
test
mov
out
cld
enter
xchg
xor
ret
lods
loope
iret
orb
clc
leave
push
push
inc
fcomi
hlt
add
lods
cld
jmp
imul
test
fwait
xchg
test
mov
movsl
add
leave
andl
insl
cmp
fwait
inc
sbb
lret
mov
lods
push
hlt
lcall
jb
jo
push
adc
bound
shr
in
ds
mov
xor
mov
popa
inc
shl
pop
add
aaa
and
xor
mov
enter
and
loope
xchg
cwtl
mov
push
scas
mov
mov
cltd
jle
and
xlat
mov
jae
mov
rcrb
or
fs
xchg
inc
sbb
push
sbb
int
leave
out
jecxz
inc
aam
mov
inc
adc
repnz
sbb
jmp
push
add
cli
sahf
sub
and
lret
add
xchg
fisttps
and
pop
add
andl
notl
mov
xchg
mov
adc
bound
in
adcb
in
clc
push
std
outsl
ret
out
xchg
loop
cld
mov
fwait
sbb
cmpsl
xchg
add
clc
push
jb
leave
fmuls
jmp
ja
sahf
lods
pop
mov
mov
push
sbb
adc
mov
into
cmpb
or
mov
mov
cmp
fisubrs
pushl
xor
andl
xchg
and
cs
push
aad
inc
enter
inc
add
ss
adc
cmp
cmpb
inc
jmp
scas
aad
sbb
xor
sub
es
testb
outsb
mov
int3
fimuls
sub
jmp
nop
mov
push
mov
push
xchg
pop
fldcw
adc
xchg
or
rclb
and
lods
jo
into
pop
pop
out
jl
fst
push
xor
xchg
outsl
mov
scas
loop
cmp
mov
gs
popf
dec
out
pop
cmp
out
data16
jge
mov
scas
fucom
fsubrs
fimull
fisttps
xchg
movsl
aad
dec
mov
jp
push
jae
mov
insb
xchg
stos
ja
fistpl
loop
sbb
repz
mov
int
dec
out
daa
and
jmp
mov
rcrl
bound
hlt
std
rclb
adc
roll
stos
pop
push
xchg
pop
outsl
dec
rorl
fidivrs
lods
pop
test
fistpl
mov
test
adc
xor
lret
add
in
repz
xchg
xchg
jns
stos
aam
daa
xor
push
jecxz
add
pop
ds
movsb
push
add
jmp
cmp
and
outsb
xchg
adc
hlt
stos
jge
sbb
xchg
sbb
hlt
fs
jmp
pop
sbb
fs
jmp
mov
push
fisubrl
mov
pop
push
mov
aas
imul
cmp
loopne
icebp
xchg
push
push
or
negb
dec
adc
mov
push
or
es
xchg
int3
push
push
and
mov
out
imul
lods
fistps
pop
pop
sub
add
ljmp
cwtl
xor
subb
push
loope
mov
mov
adc
stos
mov
pop
ficomps
gs
inc
pop
lcall
add
push
lods
test
outsl
imull
push
sbb
jo
stc
mov
pop
testl
add
xchg
scas
jge
dec
pop
sbb
jmp
fdivs
pop
int
movsl
imul
out
pop
int3
cmpsl
outsl
dec
gs
cmpsb
pop
inc
jbe
adc
push
push
rcll
loop
inc
xchg
inc
xchg
or
dec
data16
fcompl
cltd
inc
std
sbb
imul
aad
jne
xchg
and
loope
insb
xlat
xor
sbb
outsl
movsb
cltd
adc
dec
add
in
sbb
mov
scas
push
jne
sbb
adc
push
sbb
mov
cmpsb
ret
clc
xchg
mov
add
xchg
mov
mov
add
mov
sbb
mov
mov
mov
mov
cmp
pushf
push
and
dec
popf
enter
xchg
fwait
mov
pop
jle
mov
out
xchg
repnz
ss
ds
call
out
ss
add
dec
add
popa
inc
mov
sbb
add
inc
scas
icebp
bound
push
mov
adc
mov
lcall
xorb
sub
pushf
cmp
out
and
fcoml
shlb
pop
jnp
idiv
jg
std
sbb
mov
loopne
cmpsl
add
loop
adc
sub
jecxz
push
sbb
or
mov
aad
adc
xchg
mov
mov
hlt
cmpsb
mov
pop
stos
and
popa
push
xchg
push
add
jecxz
push
andl
xor
insb
pop
test
xlat
popa
push
hlt
in
rclb
pop
mov
pop
test
pop
test
push
mov
lret
xor
vpaddusb
scas
cmpl
dec
mov
mov
in
jg
hlt
nop
insl
imul
mov
cmp
out
jge
je,pn
and
clc
loope
and
or
ret
sub
and
and
jge
lea
imul
jg
arpl
sbb
add
fwait
jno
xor
fcmovnbe
rolb
ds
lods
xchg
adc
mov
repz
jb
inc
clc
and
or
ret
leave
loop
sub
mov
xchg
jno
int
lea
cmpb
push
xchg
sub
fwait
dec
ds
add
lret
cmpsl
in
test
shrb
int
pop
leave
arpl
push
dec
outsb
inc
adc
dec
rol
data16
and
out
out
or
push
push
sub
sub
xchg
dec
test
mov
sbb
xchg
stos
cmp
sbb
inc
dec
mov
out
sahf
sub
test
lcall
inc
leave
add
lret
add
pushf
dec
and
xor
pop
pop
pop
arpl
call
adc
insl
popa
ljmp
jns
dec
fs
jmp
pop
test
int
push
inc
mov
cmpsl
mov
inc
and
pushf
mov
mov
les
and
lret
int
lret
push
stos
xchg
filds
aam
push
fsubrl
lea
loope
sub
sbb
jno
shrb
sbb
decb
pop
pop
iret
cwtl
xor
jns
pop
pusha
inc
or
dec
dec
sub
loop
fwait
push
loope
dec
insb
pop
xor
mov
push
cmp
insb
or
mov
mov
inc
or
xlat
fisttps
test
in
stos
sub
inc
cmp
jmp
lods
mov
ljmp
sbb
or
ret
fcmovne
ja
out
shlb
jne
ss
repnz
das
pop
push
movb
add
fucomi
ds
fsubrs
xchg
call
in
sub
andb
sbb
and
push
xor
loope
lret
sbb
nop
inc
das
neg
xor
stc
sahf
lret
cmp
jno
cmp
jmp
xchg
js
js
fs
imul
inc
stos
lock
add
pop
cmpsb
cmp
pop
or
mull
cmp
and
movsb
popf
fbld
cwtl
lods
je
stos
and
into
out
jp
mov
or
rcrl
mov
pop
jl
inc
mov
out
jp
icebp
inc
and
jecxz
sub
jnp
pop
jp
pop
fs
es
xlat
inc
add
loop
jns
lcall
mov
mov
leave
inc
xchg
sub
inc
adc
and
fcompl
cld
mov
lahf
dec
adc
fs
fmuls
out
xor
xchg
mov
fwait
pop
aas
ljmp
lea
jmp
enter
in
lahf
and
add
jbe
fstps
lret
fldt
add
pop
jne
or
and
push
mov
fwait
xchg
das
xchg
push
lcall
inc
rorb
orl
in
dec
fwait
std
scas
xlat
call
xchg
mov
add
xchg
mov
lret
cs
sbb
push
sub
in
mov
and
inc
fld
ss
das
adc
out
dec
sub
insb
psubw
sbb
cmp
and
hlt
fdivr
std
pop
or
ja
into
mov
fisttpl
push
xchg
push
call
jecxz
lret
xor
pop
push
sbb
pop
adc
dec
sub
or
push
adc
iret
push
mov
jg
insb
mov
adc
xchg
mov
jg
or
jbe
sarl
xor
sub
ret
jns
loop
inc
stos
push
jp
rcrb
xor
notl
mov
add
dec
test
dec
cmp
stc
push
fs
inc
ret
test
test
jge
pop
imul
cmp
int3
and
add
hlt
iret
push
loop
repz
lods
inc
dec
repnz
lods
aaa
or
nop
push
iret
lea
daa
outsb
jne
mov
lods
sub
ss
sub
jp
lds
ja
or
pop
pop
fisubrl
dec
out
or
repz
aad
inc
ret
adc
inc
in
rcll
sahf
push
idivl
inc
inc
lds
pop
push
fldl
in
push
sub
lods
mov
mov
les
imul
or
mov
cmpb
add
mov
adc
mov
cwtl
aam
leave
insl
cmp
loope
std
fidivl
jae
loop
and
xor
jge
les
stos
and
mov
xchg
sub
mov
rolb
jno
xchg
xchg
movsb
xor
vpunpckldq
mov
xchg
les
shrb
into
xchg
xor
fisubs
sub
dec
mov
lds
icebp
sbb
mov
mov
dec
adc
add
lds
les
mov
xor
xchg
cmpsl
loopne
sahf
or
call
lock
mov
dec
mov
pop
push
push
push
jnp
daa
sbbb
or
sbb
lret
mov
xchg
xchg
lods
mov
jmp
mov
in
inc
xchg
popf
scas
sub
add
pushf
pop
icebp
mov
pop
xchg
pop
stc
push
test
cmp
mov
mov
scas
sub
jne
nop
mov
mov
sub
xor
fs
and
xchg
aas
push
addr16
xchg
xchg
cld
and
ds
in
mov
out
jmp
and
pop
movsl
sarb
mov
fs
ret
mov
xlat
imul
mov
daa
cli
pop
push
push
mov
push
and
shrl
loope
cmp
jmp
mov
sub
rolb
mov
and
dec
aaa
adc
jnp
std
test
in
inc
add
out
xor
xlat
pop
pop
out
in
xchg
shl
rclb
mov
adc
bnd
popa
lock
shlb
test
fs
test
jnp
shl
aaa
cmp
sub
xor
loopne
imul
mov
or
push
cmp
imul
loopne
dec
mov
and
cmp
in
arpl
add
mov
xor
cmpsb
cmp
jge
pop
fidivrs
adc
icebp
xchg
cmc
inc
cmp
jg
or
mov
and
mov
ror
push
in
ss
std
mov
pop
and
jecxz
pusha
sub
pop
jb
cltd
jnp
sbb
arpl
dec
jle
sub
sti
pop
and
xorl
stc
xchg
pop
movsl
jno
lds
loopne
dec
jg
into
mov
daa
dec
xchg
loope
mov
roll
das
xchg
fwait
or
imul
mov
push
and
sbb
movsl
inc
sarl
mov
add
push
push
jp
test
sbb
xor
mov
mov
test
adc
filds
ret
push
aam
mulb
xor
into
out
xchg
cli
out
and
dec
adc
test
cmpsb
sahf
adc
fiadds
ja
arpl
pusha
or
fidivl
cvtdq2ps
iret
aad
or
push
dec
xlat
cltd
or
mov
cld
sbb
pop
cld
lahf
xchg
mov
or
aas
cmp
sbb
push
xor
fcompl
sbb
jle
cmp
std
mov
ljmp
fimull
nop
mov
push
push
inc
jnp
jns
xchg
xor
cmp
pop
imul
xor
es
imul
sbbl
xchg
fcoms
add
mov
inc
jns
dec
cmpsb
xchg
andb
pop
adc
into
testb
hlt
mov
sub
mov
ljmp
xor
add
adc
in
cmp
shll
and
or
les
pusha
movsl
outsl
sub
out
xchg
neg
xor
andl
pop
minps
icebp
nop
jo
or
jbe
xchg
sub
test
sub
mov
addb
fld
call
mov
sub
cmp
and
cwtl
out
sbbl
daa
stos
insb
or
loop
cmp
xor
in
cmpsl
adc
cmp
test
rorl
add
movsb
int3
scas
pop
sbb
hlt
lods
das
inc
test
icebp
repnz
or
and
insl
mov
je
insb
inc
fnstenv
mov
fsubs
push
mov
xchg
jle
pop
in
std
push
inc
push
and
push
pop
jmp
xchg
mov
push
int
jle
ds
mov
cmpsl
cs
cli
dec
lock
adc
mov
es
add
adcb
out
inc
jg
pop
dec
enter
inc
push
jle
jo
scas
or
arpl
les
xchg
xor
das
mov
sub
iret
pop
or
notb
mov
xchg
xor
jb
jle
mov
call
repz
add
push
mov
cmp
or
dec
aad
clc
sbbb
push
pop
push
mov
shrb
mov
or
sahf
filds
ret
cld
ds
pop
sbb
aam
jno
sbb
adc
popf
dec
jmp
aam
out
shr
mov
or
das
xchg
sbbl
popf
lahf
test
dec
dec
add
sbb
push
movsl
mov
jl
cli
mov
aad
adc
mov
add
adc
cltd
ret
out
jge
pop
mov
out
flds
fisttps
pop
adc
jo
or
and
fwait
addr16
fsubl
int
jbe
bound
notl
cmpsb
mov
cmp
jge
inc
and
mov
sti
push
outsb
insb
hlt
add
sbb
pop
out
pop
scas
pusha
mov
sub
jo
mov
out
popf
frstpm(287
inc
rcll
js
sbb
jp
int3
push
push
repz
inc
mov
dec
add
in
call
pop
call
and
sub
in
inc
psubq
call
sub
sti
and
add
add
or
scas
mov
jge
mov
cwtl
fisttpl
popf
pop
push
pop
mov
adc
inc
pop
mov
inc
and
and
outsl
data16
mov
imul
or
inc
icebp
loopne
adc
lds
xchg
incb
dec
mov
sahf
arpl
inc
lock
add
pop
or
retw
push
or
push
mov
adc
out
jle
xor
andl
or
ret
xchg
les
scas
xlat
aad
pop
in
pop
add
adc
lahf
cmp
adc
cmp
enter
div
jne
ljmp
mov
sti
xchg
mov
lock
fwait
test
frstor
ja
mov
jns
in
jo
and
jns
bound
mov
xor
mov
addl
js
pop
xchg
test
cmpb
insl
loop
mov
pop
adc
into
cmpsl
cwtl
pop
inc
rcll
sub
test
cld
sbb
jp
jnp
mov
sbb
imul
dec
mov
cmp
out
jmp
fdivs
daa
mov
mov
stos
ljmp
sbb
out
in
xchg
mov
mov
xor
std
mov
mov
push
cli
in
or
test
rorb
aas
ret
inc
and
cmpsb
pop
xor
adc
fcmovnb
bound
inc
xchg
mov
lock
hlt
mov
lret
aam
pop
data16
jns
je
xor
dec
les
fnstsw
dec
jns
mov
or
add
jb
stc
out
gs
fbstp
xor
adc
cmp
ret
jmp
arpl
adcb
sbb
mov
mov
fmuls
cmp
test
add
cmp
movsb
lcall
imull
cmp
cmc
dec
leave
into
insb
insb
aas
jp
insl
cmpsb
movsl
sbb
push
ds
inc
imull
xchg
xor
xor
in
leave
mov
inc
cmpb
into
testl
repz
mov
add
popf
xor
subb
inc
negl
xchg
sub
stos
rcll
scas
xchg
cmp
jecxz
lock
adc
fidivs
sbb
ds
fmull
in
xchg
daa
xchg
pop
leave
add
pop
inc
mov
inc
inc
mov
in
je
lods
inc
mov
repz
jge
andl
pop
xor
xchg
test
and
js
inc
jg
ret
cld
or
ljmp
roll
jae
mov
repz
dec
or
dec
idivl
int3
outsl
push
jecxz
and
inc
mov
addr16
mov
lds
add
and
xchg
out
outsl
or
add
xor
and
and
mov
insl
add
arpl
insb
dec
test
andb
lods
lock
dec
test
lret
mov
aam
mov
pop
mov
cmp
out
fdivr
aam
add
mov
adc
pop
cwtl
or
dec
xchg
push
movsl
lret
pop
or
test
repz
dec
or
fwait
mov
jnp
push
push
push
shll
jmp
or
dec
dec
xor
nop
inc
push
leave
jnp
sahf
dec
add
cmp
add
repz
scas
repnz
fsubrp
add
je
ds
xor
cmpsb
cmpsb
xor
imull
in
stos
stos
gs
mov
jno
std
fs
imul
loope
or
cwtl
clc
icebp
in
xor
mov
dec
or
pop
mov
movsb
nop
lret
add
ds
push
addr16
negl
and
adc
fiaddl
mov
cmpsb
pop
push
pop
or
shlb
out
lahf
xorl
popf
outsb
popa
pop
bswap
mov
in
cmpsb
int3
ss
jns
jp
int
xor
mov
sti
and
nop
cmp
inc
popa
mov
inc
test
and
add
movsl
mov
mov
adc
nop
and
xchg
inc
adc
push
xchg
loopne
push
inc
and
mov
leave
rcrb
test
pop
enter
adc
and
js
adc
pop
xor
fnstsw
cmp
stc
mov
popa
inc
popa
add
jbe
out
lret
push
decb
adc
add
xchg
mov
out
mov
or
test
mov
jge
or
fidivrl
loopne
push
inc
mov
mov
test
je
fisttps
mov
mov
in
mov
data16
lods
cmp
jo
push
out
jle
push
and
lods
xor
int
or
jmp
adc
mov
cmp
loopne
mov
lods
pusha
cwtl
shll
addr16
add
dec
sbb
and
dec
xorb
scas
ficoms
pop
daa
or
xchg
sub
add
mov
cmc
rcl
inc
or
cmp
fistpl
pop
test
sbb
sti
fbld
repz
jp
icebp
ret
int
sbb
aam
es
xchg
xchg
sbb
jl
cmpsl
sbb
jb
mov
or
scas
cmp
pop
add
aaa
inc
movsl
inc
loope
into
and
int3
inc
arpl
rcrw
lods
sbb
shrl
dec
cltd
pop
inc
adc
add
mov
lcall
shrl
push
push
jmp
mov
lahf
subb
cmp
pop
adc
in
push
sub
test
ficomps
adc
ss
push
repnz
je
inc
scas
adc
push
and
popa
mov
dec
sub
or
lahf
add
mov
push
xor
dec
lret
or
mov
pop
rcl
xchg
inc
imull
cmp
lea
addr16
sub
mov
jmp
test
outsb
ret
sbb
in
dec
add
std
mov
pop
sarb
divb
mov
pop
lods
in
push
jge
mov
cmp
leave
mov
adc
pop
inc
js
push
mov
fnstsw
mov
rcrb
jg
lahf
sub
ret
dec
and
test
stos
xor
ss
pop
push
aas
xor
out
mov
iret
sti
jbe
xlat
bnd
insl
out
add
mov
dec
shl
jb
cmc
adc
icebp
jb
or
orl
hlt
notb
cmpsb
daa
mov
sub
inc
js
aad
repnz
push
data16
cmpsl
adc
and
test
insb
push
stos
push
mov
adc
push
data16
push
sbb
xchg
add
push
mov
ss
jl
popa
stmxcsr
int
call
dec
jecxz
das
lahf
inc
xorl
addr16
fmulp
pop
and
lahf
mov
cs
xor
je
and
sbb
sarl
in
cmp
pushf
or
cmp
cld
push
loope
and
es
lret
cli
loop
loopne
imul
cmc
data16
in
je
pop
cld
push
adc
cli
or
mov
leave
shll
pop
insl
or
mov
rclb
mov
xlat
je
pop
mulb
push
out
push
clc
jo
add
jmp
cltd
leave
jne
cltd
cli
and
sbb
cmpsl
loopne
pop
mov
inc
pop
xor
rolb
in
arpl
mov
adc
nop
cmp
aas
or
ret
out
sbb
in
jae
dec
ret
push
and
push
mov
pop
fildl
in
xchg
repz
cmc
leave
push
bound
add
mov
push
rorl
jb
mov
jmp
inc
pop
jo
dec
sbb
mov
repnz
lea
adc
out
mulb
mov
bound
in
push
ret
dec
push
jnp
scas
loope
adc
add
jb
in
stos
inc
ja
hlt
rol
mov
jb
dec
int
movb
int
sbb
leave
xor
clc
out
lock
cld
push
mov
aaa
div
movsb
push
cli
add
fstps
push
jl
test
icebp
push
dec
dec
add
or
stos
xor
push
push
sti
insl
in
fisubrs
hlt
fcom
int
ret
scas
dec
dec
xchg
in
pop
lea
sbb
jle
mov
data16
loopne
mov
jne
and
out
mov
mov
leave
sub
pop
pop
icebp
movsb
mov
mov
lods
sti
sub
testl
push
lods
aam
push
push
sub
imul
imul
sub
shll
add
aaa
in
push
jp
repnz
push
out
push
bound
jo
adc
add
sub
ss
xchg
mov
jl
inc
pop
dec
movsb
int
xchg
or
dec
out
mov
fistps
push
cmp
mov
lea
mov
xlat
ret
test
jle
ljmp
inc
popf
repz
pushf
lods
add
dec
shlb
xchg
mov
cmp
mov
test
or
je
push
inc
mov
sub
pop
pop
xor
fistpll
mov
je
iret
imul
sbb
faddp
cmpl
pop
sub
and
or
insb
mov
popa
inc
xchg
sti
test
push
dec
aam
popa
push
inc
enter
or
jne
in
mov
lods
mov
lods
les
mov
sbb
popf
add
pop
xorl
out
fadd
int
push
dec
cmpsl
mov
nop
cld
enter
cld
pop
pushf
pop
shlb
jne
sbb
jo
outsb
xorb
pop
push
dec
push
add
lods
push
test
xchg
or
das
mov
mov
js
inc
in
lret
sahf
movsl
lret
jns
and
push
inc
icebp
dec
sti
add
xor
adc
fmull
adc
lock
mov
or
add
sub
jge
cli
jl
leave
push
mov
jmp
sub
sbb
in
inc
mov
jne
sti
cld
mov
cs
sahf
popf
cmc
nop
xor
sbb
pusha
iret
mov
lret
rorb
dec
inc
loopew
mov
mov
icebp
xor
pusha
jns
shr
sub
inc
fdivl
push
mov
adc
xchg
xchg
adcb
adc
stc
cmp
insb
push
pop
lret
push
pop
or
inc
neg
or
pushf
lret
xor
dec
cmp
sbb
loope
fs
inc
xchg
or
xchg
andb
mov
pop
mov
out
mov
lods
cmp
jnp
jns
scas
cmp
jmp
xor
fidivrl
cmp
mov
sahf
out
enter
lcall
ja
out
paddd
mov
shll
lret
xor
icebp
fwait
in
xchg
xor
ror
imul
fstl
push
xor
loop
pop
dec
inc
inc
mov
mov
nop
xchg
inc
mov
sbb
sti
or
pop
mov
pop
call
mov
push
cli
mov
daa
mov
jno
xchg
push
xor
int
mov
or
xchg
mov
lahf
mov
das
or
popf
pop
xchg
mov
xor
cmp
mov
mov
clc
out
push
cmp
mov
push
dec
imul
jle
lahf
fists
xchg
testb
xchg
xchg
sar
ss
in
shr
adc
inc
scas
jno
loopne
jo
adc
mov
jmp
bound
push
scas
add
jle
movsl
pop
push
add
cwtl
in
jno
inc
adc
lret
test
mov
pop
repnz
jg
cmpsb
movsb
fwait
insl
inc
xchg
in
insl
repnz
inc
imul
int3
in
scas
call
scas
jno
xor
dec
lret
loop
pop
pop
cs
dec
test
icebp
and
hlt
jae
xchg
inc
sub
sbb
sbb
add
shrb
hlt
sub
imul
push
mov
daa
dec
in
mov
mov
cld
sbb
adc
pop
mov
jge
andl
test
mov
stos
and
push
xor
or
mov
lock
xchg
mov
fbld
mov
and
mov
xchg
sub
popa
gs
test
mov
add
dec
rorl
xor
mov
mov
push
pop
lret
xor
mov
cltd
ja
add
into
imul
pop
int
add
jmp
xor
fmuls
stos
insl
mov
mov
icebp
cmp
out
push
jbe
and
pop
mov
lea
sti
pop
dec
cmp
push
add
fldl
in
gs
fs
pop
lahf
in
fs
scas
mov
pusha
inc
dec
inc
test
jmp
pop
in
sub
push
push
sahf
cmp
push
xor
jo
jne
bound
jns
andb
push
xor
mov
pop
mov
push
sub
pop
and
xchg
stos
mov
popa
dec
dec
pop
dec
lea
insb
pop
addl
cmp
mov
mov
inc
rcr
orl
insb
jecxz
jecxz
outsl
pusha
pusha
push
mov
xor
in
scas
mov
xor
or
mov
ja
stos
xchg
xchg
cld
out
or
testb
aam
mov
into
arpl
pop
aaa
rorb
mov
sub
iret
fistl
stos
jg
iret
jmp
adc
or
xchg
mov
insb
pop
sbb
mov
pop
push
and
inc
mov
pop
inc
pop
push
cwtl
in
and
inc
movsl
push
add
movsb
out
push
push
pop
jns
loop
jmp
int3
mov
in
adc
adc
xor
cwtl
push
cmp
nop
loopne
mov
inc
icebp
lcall
nop
xchg
pop
sub
ret
fcmovne
dec
mov
int3
aam
or
pusha
xchg
cmpsb
fidivs
sar
push
stc
aaa
cmp
sarb
std
hlt
iret
mov
mov
scas
mov
iret
dec
sub
mov
mov
je
mov
ret
cmp
sbb
out
mov
fwait
out
testl
dec
repnz
icebp
popa
pop
divb
mov
add
dec
inc
subb
sbb
aad
jl
rorl
das
mov
add
pop
dec
xchg
out
xchg
dec
and
out
fsubl
rol
dec
inc
mov
pop
pop
adc
push
mov
jb
pop
enter
and
repz
stos
xor
imul
push
mov
call
xchg
cmpsl
push
inc
cmpsl
lea
lret
cmp
adcb
dec
les
cwtl
das
mov
and
ret
fisubs
pop
mov
cmp
mov
xchg
push
xlat
adc
sarb
mov
insl
mov
mov
add
and
add
xchg
in
xor
sbb
adcb
aaa
mov
sbb
int
sub
mov
jne
cmp
rcll
hlt
pusha
add
loope
or
xchg
repnz
push
adc
fimuls
aas
and
ret
insl
lods
dec
iret
cli
movl
xor
mov
lock
sub
insb
adc
mov
xchg
pop
sub
mov
out
cmp
push
out
loop
or
add
mov
xchg
loopne
inc
pusha
lret
in
adc
hlt
xor
loopne
int3
mov
jp
mov
mov
mov
in
outsb
mov
icebp
lods
inc
inc
sbb
ret
sbb
mov
jl
mov
outsb
mov
aas
popw
inc
xchg
lcall
stc
inc
jae
mov
add
int3
loopne
outsb
ret
sbb
enter
dec
scas
sbb
in
lcall
and
out
pop
nop
lods
inc
roll
xchg
andl
xchg
aas
ret
ret
int
sub
cmp
nop
inc
or
cs
imul
iret
shrb
jae
add
push
lcall
dec
in
dec
xchg
sub
sbb
mov
mov
aaa
jp
rol
push
lret
ret
int
aad
mov
gs
scas
scas
add
cmp
or
arpl
sar
pushf
xchg
lcall
ds
fldcw
inc
lods
test
jo
jg
sub
insb
dec
lods
sub
cmp
mov
xor
pushl
inc
out
clc
cld
sub
call
cmpl
test
outsb
jb
sahf
jge
shrb
jno
lahf
movb
pop
dec
or
dec
cltd
adc
mov
pop
and
repnz
outsl
test
pop
mov
stos
fs
add
add
scas
scas
sub
mov
js
ds
ss
push
fcomip
and
aad
out
cmp
addb
jmp
les
pop
fildl
stos
or
mov
jle
mov
dec
stc
sbb
lods
popf
sbb
addb
in
add
inc
in
and
dec
fildll
mov
cld
out
or
xor
iret
out
dec
lcall
adc
mov
mov
mov
cltd
movsl
jnp
sub
dec
xorb
aam
or
popf
pop
or
inc
leave
cmc
pop
push
jno
popf
push
test
sub
pop
loope
clc
and
idiv
mov
mov
cs
rorb
xchg
test
adc
rorl
mov
out
shll
add
jge
push
or
xchg
dec
mov
or
imul
lods
pop
pop
out
insl
hlt
daa
mov
std
xchg
pushf
nop
ja
addr16
bnd
dec
xlat
adc
movsl
pop
repnz
adc
outsb
iret
cs
ljmp
fwait
sub
pop
outsb
addb
aam
pop
mov
je
pushl
in
push
ljmp
adc
sbb
sahf
scas
mov
jno
xor
sbb
adc
xor
mov
arpl
fidivl
pop
insl
shrl
ret
xchg
bound
push
jnp
push
mov
xor
loope
cmp
mov
mov
stos
mov
adc
pop
mov
push
xor
nopl
bound
call
pop
add
sbb
push
or
divb
in
mov
jmp
pop
add
lds
cmpsl
cmc
fsubrp
cmp
arpl
popa
mov
scas
daa
ds
inc
push
repz
xchg
push
inc
mov
in
call
and
jbe
dec
ljmp
dec
insb
addl
pop
decl
das
jnp
push
inc
pop
jns
mov
add
cs
inc
pop
push
xor
out
sub
and
mov
mov
pop
rcrl
mov
jl
fisubs
cld
dec
repz
into
shl
mov
das
rcrb
mov
popf
cltd
addr16
scas
pop
aaa
xchg
pop
das
imul
sub
int
dec
shlb
in
pop
sub
push
pop
push
popf
push
imul
out
xchg
icebp
push
pusha
sub
dec
adc
scas
movsw
int
imul
push
push
cmp
mov
cli
dec
mov
out
xchg
insl
aad
or
jl
mov
test
repz
sahf
dec
in
mov
or
cmp
movsl
add
pushf
fisttpl
mov
adc
ret
add
in
cmp
arpl
or
cmc
aad
jae
cmc
icebp
or
nop
mov
xlat
add
ror
fs
test
call
lock
jmp
jne
pop
pop
push
lods
xchg
sub
mov
rolb
ss
xchg
rorb
mov
out
leave
mov
mov
sub
mov
add
jns
in
addb
push
data16
mov
dec
mov
fs
int
hlt
jae
insl
outsl
loope
mov
inc
cmp
ret
lahf
jg
enter
insb
or
push
in
adc
add
ljmp
mov
add
mov
subb
rclb
insb
lods
inc
stc
xor
inc
divl
and
xchg
lret
pop
aam
adc
aam
sub
push
leave
or
daa
mov
pop
jb
jb
cmp
rcl
lods
cs
sahf
jecxz
bound
test
icebp
inc
fwait
sbb
int3
jae
mov
frstor
mov
jne
bound
clc
jecxz
mov
loop
fwait
xor
mov
sbb
pop
insl
es
cli
fistpl
inc
test
std
js
xchg
daa
pop
and
arpl
ja
xor
repnz
cmp
rclb
xlat
fidivrs
inc
scas
add
stos
fdivl
push
clc
test
flds
jmp
in
test
inc
sub
and
inc
adc
push
inc
add
mov
jge
jne
mov
mov
ja
insl
fisubrl
stos
popa
mov
sbb
insb
cs
loope
mov
pusha
pop
rclb
jl
icebp
js
push
ret
push
mov
and
jmp
lock
push
and
cmp
pop
sub
fstps
lock
in
adc
rcrl
and
pushf
leave
cmc
std
push
stos
sbb
loop
rcll
push
jbe
loope
xor
and
push
mov
dec
in
das
mov
xor
mov
sbb
std
leave
dec
lret
jp
adc
fldt
outsb
push
hlt
es
sub
icebp
xchg
push
cmp
or
push
push
aam
mov
and
lock
mov
andl
fildll
lea
addr16
xlat
insb
gs
push
dec
xchg
bswap
mov
arpl
testb
jnp
rolb
pop
aad
inc
pop
sbb
cmp
daa
daa
adc
mov
push
sbb
sub
jle
pop
xlat
shrl
push
sti
and
cs
cmpsl
icebp
cmpsb
sahf
inc
data16
add
scas
daa
push
sub
add
addr16
mov
rcr
add
mov
test
push
icebp
sahf
ds
add
mov
fidivs
and
cmp
int
loope
pop
jno
sbb
xchg
daa
icebp
jl
cmp
adc
in
push
pop
lea
rcrl
lahf
scas
mov
push
lahf
mov
inc
in
inc
dec
jne
mov
jnp
ret
adc
andl
pop
shll
ja
add
mov
sub
test
or
out
outsb
aad
pushf
cld
dec
or
ficompl
stos
jecxz
mov
fst
cwtl
out
mov
mov
ds
push
mov
in
cmpsb
hlt
out
dec
dec
test
adc
inc
movsb
mov
dec
dec
cmc
mov
cmpl
mov
sub
inc
nop
cmc
adc
iret
mov
xchg
scas
iret
adc
push
cmp
xchg
inc
rcll
mov
xor
test
push
fisubs
jl
cwtl
int
jno
ds
push
sub
sbb
xchg
or
fsub
dec
sub
add
clc
xor
daa
pavgw
setb
fnstcw
push
out
out
mov
pushf
cmpsl
xlat
pop
adc
xor
out
cmpsl
dec
adc
lds
jb
add
add
cmp
call
push
mov
pusha
out
xor
subb
orl
or
xchg
mov
out
mov
xchg
cmp
aaa
shr
mov
push
flds
stos
sbb
inc
push
mov
imull
pop
mov
adc
push
lea
imul
rcrb
roll
xor
mov
sbb
cmp
dec
stc
cld
sub
std
nop
dec
mov
mov
push
stos
cld
lods
sbb
jbe
and
cmc
xor
mov
inc
idivl
xchg
fisttps
xor
stc
clc
cmp
cmpsb
add
pop
in
jg
cmp
ljmp
jnp
cmp
scas
mov
mov
lds
cltd
lret
or
mov
mov
fisttpll
iret
and
inc
lods
xchg
icebp
daa
inc
mov
push
xchg
push
jbe
sysret
push
xchg
test
add
inc
fsubrs
test
mov
jbe
imul
pop
aaa
cmp
mov
jg
pop
es
hlt
out
cwtl
mov
nop
pop
sarl
pop
jecxz
add
xchg
repz
icebp
fs
xchg
and
push
cmp
mov
xchg
int3
insb
sbb
insl
repnz
inc
cwtl
inc
inc
test
sub
sbb
ret
das
jnp
das
sub
iret
ljmp
mov
or
mov
xchg
subb
lods
outsl
push
mov
or
pop
mov
hlt
xor
dec
stc
mov
jg
incl
mov
rcrl
popa
ret
arpl
shrl
outsb
xor
repnz
jl
inc
call
pushf
subb
or
scas
xchg
sub
push
add
mov
ret
imul
pop
ret
aaa
xor
mov
lahf
lcall
pop
add
icebp
xchg
adc
jl
movsl
loopne
mov
push
jge
mov
ficoms
out
movsb
mov
ficomps
pop
inc
arpl
jmp
cmp
fistpl
pop
stc
xor
pusha
and
int
dec
push
mov
xor
mov
mov
add
xchg
fwait
in
rcrb
in
pop
pop
leave
add
dec
faddl
inc
and
jns,pt
jns
add
push
mov
add
push
fxam
test
clc
cmp
cs
fs
mov
mov
adc
adc
test
or
jg
inc
and
out
add
fcoml
pop
idivb
inc
sub
fcomps
xor
jbe
mov
push
aaa
jmp
add
xchg
test
jl
inc
jno
or
adcb
sub
mov
sbbb
decl
in
pop
es
shlb
adcb
jl
aam
stc
push
ret
dec
testl
or
icebp
icebp
cmp
mov
inc
movsl
and
jno
fwait
cmpsb
push
bswap
ljmp
mov
jnp
add
mov
push
pop
or
add
scas
dec
cmp
or
data16
int3
test
xchg
or
or
adc
pushl
clc
test
pop
and
repz
or
loopne
mov
cmp
mov
cmp
sbb
dec
lock
mov
xor
or
das
inc
mov
pop
xor
mov
aam
ffree
mov
jmp
mov
pop
inc
les
xchg
fidivs
movsb
lea
inc
xchg
dec
xlat
test
pop
rcrl
mov
ficompl
arpl
fildll
std
ds
es
insb
push
movsl
sti
or
test
nop
jb
stos
mov
adcl
push
mov
iret
push
cmpsl
mov
sbb
dec
add
sbb
lret
sbb
scas
pop
cli
xchg
fisubl
mov
imul
pop
movsl
cld
sbb
mov
inc
pop
imul
insl
cmp
ds
and
adc
cltd
mov
fstpt
pop
cmpsl
adc
fcmovnbe
mov
dec
test
or
lods
add
sub
das
push
xchg
call
mov
aam
pop
xchg
push
xchg
xlat
cmpsl
xor
mov
cmp
ret
into
in
clc
or
mov
adc
fsts
dec
outsb
scas
or
push
mov
mov
jae
push
mov
cmp
ret
inc
xchg
cmpsb
jecxz
xor
movsl
fists
ret
stos
or
xor
int
cmp
jno
mov
lods
fildl
inc
inc
pop
jg
mov
sub
mov
ljmp
jae
arpl
xchg
mov
pop
push
or
mov
jp
xchg
xlat
imul
jne
cmpsl
dec
xchg
pop
xchg
mov
cwtl
pop
roll
je
fwait
mov
scas
sub
aam
scas
cli
inc
aas
xorl
mov
fbld
sub
sahf
mov
lock
inc
inc
jnp
sub
or
xchg
xchg
clc
or
subb
and
inc
cmpsb
pop
and
cmp
fidivrl
inc
aam
test
mov
out
lods
inc
cld
and
lock
mov
add
js
adc
mov
push
in
aad
out
les
sbb
jb
in
xchg
fnstsw
fisttpll
stos
cmpsl
jecxz
cmpsb
out
jge
sbb
sbb
inc
xchg
add
jle
es
add
ja
xor
js
pop
scas
int3
pusha
xchg
rclb
pop
mov
in
mov
pop
aaa
bound
pop
or
jg
lcall
and
filds
pop
cwtl
pushf
push
mov
mov
decl
mov
mov
adc
ficoml
push
push
pop
push
pop
mov
add
mov
cmp
adc
xchg
pop
test
jns
fstpl
and
pop
shl
push
xchg
push
or
std
cmc
mulb
aad
mov
pop
imul
or
xlat
mov
js
add
gs
pushf
xchg
mov
cmp
cmp
cmpsl
and
cmpsl
push
mov
cmp
cmpl
fwait
movsl
test
add
movsl
mov
push
out
testl
jb
dec
icebp
jge
movsl
xchg
cmp
pop
pop
mov
pop
push
adc
test
jb
pusha
outsb
pop
jns
pop
fcomp
mov
int3
xor
mov
and
sub
cli
cmp
sahf
jb
aas
cltd
cmpsl
pop
shr
das
add
jb
inc
sbbb
sbb
pusha
test
cmc
lods
in
movl
out
or
push
aad
movsb
rcrb
jecxz
test
sarl
sbb
arpl
stos
add
fdivrl
sub
jmp
cmpsl
icebp
xchg
cmp
in
mov
movsl
mov
push
movsl
mov
xchg
cmp
aam
pusha
xchg
stos
fcomp
pusha
lods
movsb
mov
cwtl
pusha
insb
insl
je
xchg
pop
or
das
cltd
mov
data16
lea
mov
popa
or
jne
inc
arpl
pop
inc
adc
xchg
fsubs
leave
shlb
jae
nop
leave
sub
fisttpl
or
sarl
jo
leave
mov
mov
out
dec
in
leave
pop
movsb
faddp
xor
imul
xchg
inc
roll
ret
fcmovb
mov
sub
shr
call
sub
fbstp
cmp
in
xorl
jae
ja
fwait
bound
sbb
push
lret
push
dec
fnstcw
adc
rcrl
dec
pop
mov
fmuls
push
stos
mov
xchg
dec
mov
fsub
arpl
js
dec
mov
mov
pop
xchg
sub
stos
jp
pop
mov
sbb
insl
jbe
xchg
loopne
pop
mov
ficomps
jnp
push
rorb
inc
rcl
jo
push
les
or
push
mov
jnp
sub
sbb
ret
adc
in
aas
jmp
in
inc
out
pop
stos
mov
mov
shlb
lret
jb,pt
push
dec
jns
cmp
cli
lret
jnp
out
mov
mov
add
adc
jnp
jmp
sbb
jge
or
pop
pop
lods
test
push
jnp
inc
cmc
push
loopne
sub
push
subl
adc
das
mov
pushf
mov
fnstsw
mov
push
mov
sbb
cwtl
xor
mov
movsb
mov
les
xchg
pop
or
fs
fdiv
popf
inc
cmp
cld
sarl
sbbb
gs
test
fstps
arpl
scas
jne
xor
psubsb
dec
mov
dec
and
add
in
dec
mov
insb
cmp
pop
push
mov
test
adc
xchg
lock
inc
movsl
out
adc
lds
test
adc
adc
mov
out
jge
bound
das
loope
push
adc
shl
arpl
push
xchg
lcall
xchg
dec
jne
sarw
pop
add
mov
push
insl
inc
jbe
fwait
cmp
add
xchg
aas
stos
push
and
lea
mov
into
ds
lea
sahf
loopne
cli
pop
dec
inc
xchg
push
rorb
mov
xor
mov
push
mov
xor
addr16
mov
jo
ret
mov
jnp
sbb
mov
cltd
rorl
push
push
mov
sbb
adc
xchg
inc
insl
xor
sub
jne
sbb
aaa
lds
xor
pop
scas
xor
int3
jp
xchg
xchg
or
or
test
jge
mov
sub
pushf
pop
lds
mov
stos
cltd
mov
pop
jmp
in
dec
iret
test
pop
std
movsl
sbb
arpl
call
fs
dec
leave
int3
ret
iret
idivb
pushl
jae
xchg
and
adc
cmp
pop
dec
cs
leave
stos
xchg
xchg
pop
add
pop
or
lock
bound
push
inc
int
cmc
cmp
or
and
push
icebp
bound
xchg
mov
mov
and
fidivrs
popf
shrl
inc
dec
dec
and
pushf
pop
jecxz
hlt
xchg
push
inc
mov
cmpb
in
mov
popf
ret
xorl
jbe
mov
add
add
cmpsb
shrl
jns
xchg
adc
lcall
and
ja
mov
fwait
jecxz
and
rcll
mov
jb
sbbl
inc
push
scas
xor
jl
adc
cmp
push
popa
cli
lcall
scas
loopne
cli
mov
mov
mov
xor
pusha
in
lods
bound
cld
xchg
or
loope
pop
into
mov
cmp
pop
fisttps
pop
mov
inc
imul
scas
call
xor
xor
inc
subb
mov
xchg
stos
jne
push
daa
stos
xor
data16
cmp
ljmp
clc
cwtl
xlat
push
jnp
and
adc
fmulp
mov
out
movsb
cwtl
push
icebp
lock
fadds
in
push
xchg
cmp
pop
lds
cmpsl
inc
ds
scas
test
jg
xchg
or
pop
imul
stos
adc
mov
clc
xchg
add
add
xchg
inc
jmp
cs
rorb
sahf
cwtl
imul
das
mov
test
pop
jae
or
pop
adc
fildl
jp
cmc
xchg
int
fcmovnu
in
gs
adc
std
in
movsl
pop
xadd
and
add
mov
rorl
inc
push
cmp
mov
lret
sbb
movsb
mov
xor
cmp
and
dec
mov
cli
jnp
sub
cmp
adc
jno
or
out
in
cmp
in
jle
adc
pop
mov
fcoms
test
scas
lock
add
mov
mov
int3
push
jae
cli
jo
imul
je
jle
mov
pushl
sahf
push
or
adc
xchg
pop
je
imul
xchg
cmc
jae
mov
and
cmp
xchg
inc
insb
adc
xor
std
pop
cmc
push
std
mov
cmp
js
mov
insb
shll
test
sbb
or
mov
adc
aas
sbb
cmpxchg
out
or
mov
sbb
test
test
outsb
mov
mov
iret
pop
or
add
mov
jns
sub
cmc
pusha
insl
adc
push
jno
push
adc
sbbb
inc
jae
lret
sbb
outsb
jne
mov
xor
sahf
and
fisubs
add
xchg
push
jbe
inc
xchg
or
imul
loopne
dec
adc
pop
xor
dec
and
adc
push
sarb
add
pop
sbb
sub
add
out
inc
mov
xchg
sbb
das
and
jl
mov
imul
xchg
adc
mov
cmpsb
push
fidivrl
push
xchg
xlat
sbb
mov
andb
and
dec
outsb
cmpsb
pop
and
sti
mov
data16
or
pop
loope
pop
movsl
movsb
xor
nop
das
andl
fdiv
xchg
xchg
iret
cmp
sub
push
dec
jp
fsub
icebp
decb
out
mov
or
stc
and
fldl
insb
divl
sbb
adc
jne
and
sbb
dec
mov
lcall
in
xchg
xor
int
pop
and
sbb
fcompl
icebp
repz
sub
int3
ja
pop
das
mov
jno
pop
ss
outsl
stos
cmp
lcall
jo
enter
in
out
mov
pop
inc
mov
aam
aam
inc
call
push
push
pop
pop
xchg
int3
outsl
test
shr
jb
dec
cmp
cmc
and
pop
jbe
pop
mov
ja
loopne
mov
negb
out
pop
pop
cltd
sti
cmp
nop
mov
idivb
and
xchg
test
push
add
fldenv
cli
and
in
push
mov
xchg
je,pn
loop
mov
test
adc
imul
outsl
jmp
and
je
sbb
xchg
xor
push
mov
repnz
out
and
xor
dec
pop
in
ret
xor
cmp
mov
in
loope
push
inc
jle
pop
std
push
push
out
rcll
cmp
enter
cwtl
jmp
adc
pop
stos
sahf
int
mov
pop
rcrb
xchg
pop
mov
fwait
test
lea
lods
push
cltd
rcl
mov
and
xor
test
iret
test
jno
mov
add
pop
xchg
or
jg
loop
mov
scas
add
cmp
xor
mov
fwait
enter
xor
andb
repnz
jo
ret
mov
and
xchg
push
test
mov
adc
je
in
loope
lds
in
fiaddl
xchg
movsl
cltd
fstpt
cmpsl
test
in
into
paddb
jo
dec
cmp
xlat
or
sbbl
jl
mov
cltd
sub
push
inc
mov
jnp
cmp
incb
loopne
fidivrs
addl
testb
pop
adc
and
adc
arpl
daa
or
sahf
sub
dec
jmp
fmuls
sbb
mov
ret
inc
dec
and
add
fdivl
cmp
sbb
idivb
negb
add
pushf
mov
subb
insl
jne
inc
icebp
sbb
xor
ret
or
pop
orl
cmp
popa
repz
fmuls
add
xor
xor
and
xchg
pop
mov
xor
xchg
or
loopne
jge
out
loopne
mov
mov
inc
aas
pop
insb
scas
sub
jl
xor
mov
lods
movsl
nop
add
sub
loop
outsb
xchg
xlat
pusha
jmp
cmp
mov
push
sahf
outsb
in
cltd
xor
fmull
xor
rcr
lahf
pop
pop
lds
insb
mov
jb
jne
inc
jmp
mov
xorb
dec
xchg
cmpsb
adc
cmp
arpl
loopne
fwait
mov
call
pop
cmp
test
lret
rorb
push
dec
lods
push
mov
testb
sub
lds
mov
sub
mov
test
jg
dec
pop
je
loopne
and
push
dec
xor
jno
xchg
mov
ljmp
push
mov
enter
loopne
xchg
xor
shlb
xchg
sbb
adc
mov
out
outsb
mov
mov
push
mov
or
xor
fmuls
jb
cmp
sub
push
or
mov
dec
or
cmp
loope
jmp
pop
mov
cmp
aad
loope
mov
stc
inc
sub
lcall
pop
mov
movsl
out
repnz
adc
out
sub
pop
addr16
lods
sub
cmp
push
push
mov
jns
add
xor
lock
mov
fnstenv
incl
inc
xor
in
into
push
adc
leave
inc
sub
adc
adc
mov
cmp
xchg
pop
inc
ror
loop
dec
pop
outsl
cltd
cmpsb
or
call
lods
es
test
sti
or
sbb
sub
lds
test
mov
cltd
cmp
cmp
and
sub
adc
mov
push
add
cli
push
outsb
push
popa
aad
sub
or
call
call
mov
add
push
adcl
adc
sub
jl
std
xor
ret
pushf
sub
popa
and
sub
xor
mov
and
adc
adc
in
and
pop
fsubrl
popa
mov
icebp
cmp
scas
add
sbb
pop
cmpsl
cs
jo
mov
call
sub
ficompl
int3
mov
mov
dec
outsb
mov
mov
add
mov
adc
ret
ret
lcall
dec
fs
xor
sbb
add
adc
outsl
jle
movsbl
push
mov
sub
int
push
pop
std
dec
push
xlat
jo
dec
aas
jl
fimull
addb
mov
sbb
test
fistl
jno
imul
dec
iret
inc
push
out
shr
sbb
call
jl
aaa
jl
xor
sbb
mov
sub
mov
push
mov
jne
lcall
addr16
inc
xchg
mov
pop
loope
sub
inc
data16
imul
mov
and
push
movsl
dec
pop
icebp
mov
add
add
xchg
inc
ss
sahf
in
xchg
mov
mov
and
adc
dec
sub
sbb
sbb
inc
pop
fs
rorb
xchg
xor
clc
dec
push
pop
leave
xchg
cmp
icebp
in
mov
and
mov
adc
pop
lea
data16
mov
ds
stc
mov
sbb
mov
push
fisttpll
test
das
and
dec
push
mov
test
inc
xor
dec
repnz
shlb
cltd
inc
and
mov
add
xchg
fdivl
fwait
iret
cmp
and
hlt
clc
insb
es
adc
mov
xchg
pop
rclb
adcl
sub
outsb
in
lahf
xchg
mov
in
and
xchg
mov
mov
imul
mov
and
mov
dec
subl
in
inc
repz
ficoml
call
iret
jg
scas
std
pop
call
jae
mov
mov
cmp
inc
xchg
inc
pushf
movsb
mov
rcl
and
mov
in
push
mov
xchg
mov
in
pop
xorb
mov
sbb
push
fstpl
cmp
leave
mov
frstor
adc
xchg
cmp
jecxz
jmp
add
scas
xlat
mov
push
fbld
pop
fmul
pop
lcall
arpl
push
dec
jo
cmp
mov
scas
sbb
push
mov
jb
pop
inc
push
inc
mov
xchg
and
stos
jns
cltd
lcall
or
rcl
sbb
mov
scas
xor
fmul
pop
rcrl
rclb
mov
mov
mov
add
xchg
xor
cmp
pop
pop
dec
xor
pop
adc
sar
and
xor
mov
xchg
test
sub
or
dec
sbb
test
stos
ja
arpl
scas
cltd
sbb
stc
fld
jne
cwtl
adc
sbb
pop
fbld
cmc
xlat
sub
xchg
xchg
mov
pop
outsb
fidivs
lds
aam
sbb
xchg
mov
sub
cmp
mov
iret
aad
movsb
nop
in
in
nop
sub
rcll
divl
mov
lgs
sbb
jecxz
cli
pop
adc
and
cmp
push
jo
mov
push
xchg
pop
xchg
notb
mov
lds
push
ljmp
insb
jmp
pop
loopne
call
nop
mov
push
mov
out
and
jp
adc
jb
mov
jge
lock
out
adc
mov
outsb
iret
fisttps
mov
hlt
pop
mov
dec
mov
inc
sub
cmp
lock
lcall
sahf
sbbb
pop
jecxz
xor
divb
and
dec
pop
cmpl
aad
add
cmp
or
inc
addr16
and
inc
shlb
push
imul
and
sub
insl
pop
jecxz
out
aad
movsl
sbb
pusha
push
cli
aaa
inc
dec
jns
ret
and
mov
add
call
add
add
repnz
mov
mov
lahf
ret
mov
lcall
inc
xchg
cmpsl
dec
in
push
fldenv
mov
adc
std
stc
push
pushf
xor
mov
lods
testl
cmp
push
mov
xor
inc
ret
pop
jne
lahf
inc
pop
jae
clc
mov
nop
rolb
mov
data16
and
inc
pop
sbb
test
pop
jmp
out
stos
ja
incl
iret
hlt
inc
xlat
aaa
pop
sahf
dec
int3
xlat
lret
js
idivb
sbb
jg
pop
xor
xchg
mov
xor
and
or
jl
sbb
sbb
fistpl
xor
pop
pop
hlt
lods
aam
cmp
push
mov
cmpsl
mov
pop
icebp
inc
cwtl
push
pop
pop
test
inc
dec
ds
imul
sti
pop
mov
xor
mov
jae
outsb
sbb
repz
mov
test
clc
inc
fsubrs
push
jo
pusha
dec
inc
insb
push
shlb
dec
push
test
fwait
or
or
push
fcomi
out
push
and
loop
imul
shlb
lock
iret
cld
mov
push
notb
adc
incb
fimull
scas
mov
and
inc
or
xchg
insl
mov
mov
jg
rcl
cld
fcmovnu
idiv
dec
dec
clc
adc
int
daa
xor
pop
or
xor
mov
dec
inc
dec
pop
aas
fs
mov
inc
aaa
or
jae
jge
inc
repz
or
into
out
push
mov
jmp
jl
mov
aas
jbe
dec
inc
test
pop
addr16
jnp
xchg
mov
push
push
leave
and
out
xor
xchg
loopne
and
mov
inc
xchg
xchg
loopne
inc
sbb
aad
mov
fcoml
popa
xor
inc
mov
repz
mov
mov
cmc
out
lods
fcomps
aad
aam
cmova
addr16
sbb
shlb
inc
out
decl
pop
cld
pop
xor
dec
mov
cmc
shl
add
mov
xchg
xchg
inc
aas
insl
jo
mov
inc
imul
int3
lcall
and
repz
mov
xchg
ret
cmpsl
sbb
divl
xchg
mov
adc
in
mov
sti
push
icebp
into
fwait
sbb
scas
dec
sbb
ja
xor
push
push
addr16
sbb
lret
fcomi
shll
stos
fs
sbbl
rcrb
mov
cmc
aas
or
pop
stos
pop
mov
inc
jmp
lods
out
clts
outsl
lock
test
sarb
stos
movsl
adc
push
push
fldt
mov
stc
mov
fldt
jp
out
lea
jb
shlb
inc
pop
adc
xchg
mov
test
dec
dec
sarl
pusha
cmp
adc
leave
xor
out
xor
fcoms
fildl
lds
aam
xlat
sbb
cli
sbb
aaa
push
jl
sar
pop
inc
stc
xor
mov
out
add
sub
inc
mov
leave
dec
fistps
sbb
mov
loopne
movb
int3
pop
add
add
add
adc
xor
mov
xchg
mov
incb
mov
imul
call
pop
mov
fcomip
pop
inc
enter
adc
out
push
pop
je
mov
popa
xchg
in
repz
int
mov
mov
pop
orb
sub
fimuls
in
sub
mov
loope
sbb
roll
cmpsb
dec
sub
imul
or
adc
or
cli
dec
loopne
outsb
fisubrs
in
pop
add
sti
push
push
add
mov
sarb
aas
dec
push
in
cld
mov
jns
div
mov
mov
inc
into
jp
loop
mov
sbb
insl
movsb
stc
ds
aaa
dec
popa
add
inc
mov
lods
fwait
cld
add
ret
push
pop
out
fsts
mov
ds
xor
dec
movsb
outsb
add
jge
loopne
push
es
push
aad
rorb
jmp
and
cs
cmp
jecxz
jns
je
inc
fisttps
dec
jnp
mov
mov
mov
pop
lahf
mov
loop
bound
ficoms
xchg
adc
jno
jne
stos
push
fildl
pop
xchg
test
mov
stc
aaa
pop
mov
popa
dec
int
jns
inc
scas
loop
push
mov
out
inc
gs
dec
or
and
jecxz
inc
mov
cmp
ret
dec
pop
add
sub
add
in
xor
or
andl
mov
xchg
xor
sti
or
xchg
inc
mov
mov
mov
mov
xchg
out
pop
mov
test
sar
xchg
or
es
mov
cltd
inc
out
loopne
ss
stc
scas
les
shrl
sbb
stos
mov
dec
pop
xchg
cld
sti
mov
loopne
std
sahf
pop
pop
dec
shl
adc
rcrb
jo
cmp
adc
std
sbbb
repnz
test
addr16
fdivl
repz
jbe
cld
fucomi
das
sub
ss
subb
lods
pop
and
data16
xlat
rcl
leave
inc
int3
mov
cld
and
out
adc
nop
cmpsb
inc
cmp
data16
lods
fcomps
test
dec
dec
mov
jb
xchg
push
push
into
ret
int
lock
cld
imul
sbb
arpl
xchg
mov
sub
jmp
push
aaa
clc
mov
push
jl
test
aas
adc
inc
incb
mov
mov
xchg
rorb
push
add
and
arpl
dec
jg
xor
arpl
xchg
js
jle
repnz
push
adc
shl
mov
cmp
sbb
mov
inc
mov
inc
xor
cmp
sbb
xchg
sbb
jo
stc
ficompl
fisttps
divl
test
outsb
mov
or
enter
mov
cmp
aaa
cmp
sbb
push
sub
push
hlt
in
push
add
jns
or
sbb
adc
xor
cmp
call
fsts
dec
pop
pop
adc
xor
and
mov
and
dec
std
push
iret
ret
sahf
cmpsl
and
inc
mov
insl
mov
std
arpl
mov
xchg
out
mov
outsb
aas
cmpsb
sub
xor
insb
push
push
lret
popf
jp
loopne
jecxz
mov
jp
mov
shl
add
jbe
ds
sub
mov
push
push
xchg
clc
sub
imul
hlt
push
jno
out
lea
pushf
out
xchg
sbb
mov
dec
ss
mov
cmp
sti
dec
mov
add
mov
loope
inc
outsl
out
mov
and
aas
cmc
ss
mov
stc
add
fwait
pushf
test
fistpl
lods
leave
jbe
imul
mov
jb
inc
sti
std
and
xchg
imul
popf
loop
and
sub
icebp
cmp
or
test
cs
push
push
adc
cltd
in
pop
mov
xchg
xor
cmpsb
xor
push
mov
or
aad
xchg
xor
mov
dec
pushf
push
jb
das
fisubrs
and
dec
fwait
xor
movsb
pop
cmp
call
out
mov
inc
int
xchg
push
xlat
and
mov
dec
ljmp
or
pop
lds
movsb
sti
cmpsb
in
xchg
ds
into
movsb
fsubrp
arpl
xor
enter
dec
into
leave
lahf
cmp
stos
xor
outsb
mov
pop
cmp
dec
or
icebp
clc
adc
sub
pop
mov
jge
jge
sti
pop
js
mov
mov
inc
mov
lea
rorl
dec
daa
or
push
mov
pop
fisubrl
add
loope
cs
jnp
loopne
adc
xor
xor
loop
ret
xor
mov
pop
inc
fsub
adc
mov
jnp
out
mov
test
popf
cmp
into
cmp
hlt
mov
test
xchg
mov
add
xchg
mov
jb,pn
fldenv
ljmp
dec
jmp
push
in
sbb
mov
or
lods
adc
dec
repnz
rclb
pop
in
sbb
lret
push
ficoml
sbb
inc
xor
mov
mov
xor
out
ljmp
pushf
fwait
shrl
push
rol
js
push
sub
pop
and
popa
leave
sub
hlt
subb
sbb
test
repz
jno
aad
xor
xor
push
xor
pop
mov
aam
loope
outsb
arpl
mov
cwtl
pop
pop
push
aad
lods
nop
popa
outsl
push
addr16
mov
sbb
sbb
sbb
cmp
xchg
add
ret
arpl
fcmovnbe
in
lret
das
add
and
push
pop
inc
sbb
adc
cmp
xlat
jno
rorl
push
outsb
loopne
inc
push
aas
adc
icebp
inc
adc
push
push
cmp
shll
loopne
call
lret
outsl
repz
cmp
into
cmp
subb
sub
decb
mull
gs
mov
or
mov
sahf
push
cmp
out
xchg
jae
adc
call
aam
push
dec
mov
push
stos
mov
dec
testl
aad
call
decl
inc
xchg
jno
stc
cmpsb
mov
xlat
decb
imul
inc
push
mov
fwait
jae
jp
pusha
addr16
nop
hlt
in
in
inc
scas
sbb
in
orl
cmpsl
sar
aam
jge
out
add
inc
in
cmp
call
mov
jg
or
lcall
sbb
in
imul
jns
cmp
outsl
rorl
out
xchg
sub
add
xor
and
push
je
push
mov
sub
std
iret
lods
popf
call
cltd
inc
mov
push
popa
popa
and
scas
xchg
rorl
loop
jge
and
xor
pushf
push
inc
mov
sub
push
push
inc
imul
sub
loop
dec
inc
mov
pop
icebp
outsb
popl
sti
js
mov
roll
cmp
xchg
out
fbstp
add
xchg
rdtsc
fiadds
adc
mov
sarb
adc
pop
mov
xor
test
and
xchg
fs
adc
insl
dec
inc
icebp
aam
jle
rol
mov
push
jo
push
sar
lret
jge
fcomip
jno
addr16
sub
pop
push
aam
xor
aam
jmp
fsubrp
sub
in
int3
cmp
bound
adc
push
ret
mov
fadds
mov
in
inc
aaa
sbb
jmp
mov
loopne
icebp
push
cmp
fsubr
pop
jp
add
push
lea
cmp
dec
xlat
and
inc
jne
aad
jno
inc
popa
inc
adc
fsubr
mov
lods
cmc
xor
jns
push
imul
sbb
dec
add
mov
js
mov
orb
xchg
pushf
repz
out
adc
adc
adc
push
sub
loopne
sbb
outsb
enter
or
es
push
loope
cmp
shlb
push
pushf
dec
xchg
push
inc
mov
push
std
sub
cmp
sbb
andl
scas
lods
or
mov
xor
loopne
inc
cli
mov
cmpsl
or
movsl
mov
pop
jge
cmpsl
xchg
push
shl
test
flds
ret
ljmp
inc
fisubl
adc
lock
es
aaa
mov
mov
jae
xor
inc
pushf
sbb
mov
fimuls
leave
jl,pt
out
divl
jbe
or
add
loope
push
divb
sub
ja
bound
fisttpll
aad
pop
hlt
scas
add
inc
mov
jp
loopne
out
cmp
ficompl
add
adc
pop
aas
inc
fistps
push
hlt
iret
loop
scas
or
sbb
outsl
xchg
xor
mov
jmp
addb
cwtl
shl
push
push
jbe
xchg
je
push
fists
mov
negl
and
mov
xlat
mov
inc
lcall
sub
mov
nop
sarl
lahf
shll
pop
lahf
push
test
je
mov
xchg
inc
jmp
std
outsb
out
out
or
dec
pop
scas
jo
fcoml
fldl
loopne
sti
jnp
cmpsl
dec
cmp
mov
js
push
push
add
imulb
push
fs
mov
ljmp
es
test
or
sub
scas
cli
bound
lret
nop
sub
cltd
ret
or
inc
inc
test
inc
stos
and
jecxz
arpl
in
pop
or
jbe
ret
flds
xor
mov
inc
mov
mov
push
bound
scas
inc
adc
adc
in
mov
and
rcl
cmp
pushf
dec
and
xchg
pop
push
leave
cltd
ss
push
mov
pop
stos
clc
pushf
xor
scas
or
adc
xchg
das
mov
pusha
xchg
test
and
shl
pop
pop
cmc
sbb
stos
sub
hlt
mov
inc
sbb
xchg
test
aaa
cltd
jns
jae
xor
and
ret
adc
cmc
cmp
mov
mov
pusha
pop
shll
jne
lret
mov
pushf
ljmp
mov
jnp
dec
sbb
ret
jbe
cmp
mov
inc
aas
mov
jmp
xchg
cmp
push
insb
insl
xor
int
ret
clc
pop
mov
fmuls
lods
mov
inc
jecxz
jbe
sahf
mov
cwtl
js
jg
into
add
jmp
popa
add
mov
shl
ljmp
cmpsl
adc
and
stos
and
push
jo
mov
repz
imul
mov
enter
pop
packsswb
test
repnz
xchg
lahf
adc
mov
cmp
loope
push
xchg
dec
in
adcb
rcll
scas
repz
and
cmp
cwtl
sub
jecxz
lds
adc
movsl
jg
xor
xchg
mov
fmul
inc
lods
push
fsubp
sbb
sbb
push
mov
popf
ret
mov
test
xor
mov
outsb
inc
rclb
xor
aaa
mov
pop
aaa
mov
fsts
cs
out
mov
jbe
jecxz
mov
push
push
stc
jno
dec
lods
jb
out
mov
inc
fs
leave
sbb
es
enter
xchg
jae
mov
xlat
fwait
ja
in
ljmp
mov
mov
adc
mov
in
sti
sbb
add
out
jecxz
and
mov
scas
pushf
adc
and
fisubs
mov
pusha
mov
dec
cltd
jp
rcll
enter
in
push
xor
repz
sarb
jg
push
mov
sbb
jns
pushf
xchg
dec
popf
xchg
and
xor
repnz
sbb
and
loopne
gs
in
jae
fisubrs
rolb
dec
pop
int
sub
xchg
xchg
push
push
push
xor
into
leave
es
ljmp
jp
pop
dec
and
jg
dec
sbb
pop
jne
inc
andb
jl
sub
in
fdivr
cld
dec
ret
out
or
test
adc
mov
shrl
adc
pop
popl
mov
jns
or
add
pop
xchg
jmp
xlat
push
in
jg
jge
iret
jecxz
adc
inc
icebp
aaa
int
cld
rorb
out
in
jne
repnz
jne
adc
or
xor
mov
out
pop
adc
scas
sti
fidivrl
les
sub
sti
inc
cmp
das
mov
and
mov
xchg
hlt
xchg
sub
push
aam
in
push
mov
unpckhps
popa
loop
mov
popw
test
adc
pushf
mov
leave
inc
add
mov
jle
mov
outsl
inc
pusha
jecxz
call
mov
divb
xor
pop
mov
and
xor
out
jp
icebp
sub
push
xchg
jp
stos
test
lods
loope
shlb
add
scas
repz
fwait
in
aaa
and
int
inc
add
inc
pop
jle
mov
add
cmp
inc
lahf
insb
inc
mov
adc
or
loop
inc
xor
mov
sub
cmp
test
lret
and
cltd
fists
jb
ret
pushf
xor
xor
mov
mov
aad
dec
push
call
icebp
cwtl
sbb
loop
repnz
and
ds
call
call
inc
pop
out
xor
pop
cmpsb
adc
out
aad
int
stc
ret
dec
sub
jmp
mov
bswap
mov
sahf
lods
or
fcoml
sahf
les
xchg
lods
loop
inc
fnsave
add
test
daa
jno
sub
incb
dec
fimull
xchg
repnz
out
and
out
in
sbb
and
xchg
inc
push
inc
xchg
mov
cmc
pop
sbb
sub
dec
ja
jo
les
mov
xchg
add
imul
js
xchg
sub
pop
sbb
lods
iret
fistpl
add
outsl
ret
xorl
shl
cwtl
adc
xor
bound
mull
lock
xor
adc
shl
lea
sarl
popa
mov
add
or
test
outsl
inc
xor
fidivs
push
fidivrs
mov
and
andl
inc
jge
fdivl
or
jne
call
stc
cld
add
push
add
sbb
xor
mov
sub
dec
clc
jb
xor
push
fs
icebp
add
push
mov
sbb
les
outsb
jno
xor
ljmp
shrl
adc
add
xlat
and
popf
adcl
mov
dec
xchg
sarb
xchg
xlat
mov
mov
mov
add
lods
and
mul
mov
lods
jne
dec
mov
inc
fucomip
femms
inc
sub
mov
or
dec
xor
jp
out
and
jno
xor
lods
mov
cmp
popa
lahf
and
mov
mov
jg
gs
and
jns
nop
xchg
jmp
aam
int3
out
js
mov
adc
sarl
mov
mov
js
mov
push
and
lds
push
cmpsl
lcall
jo
sub
dec
rclb
outsb
pusha
xchg
push
lock
loop
mov
in
lret
dec
push
les
mov
lds
arpl
js
adcb
jp
inc
push
jbe
ja
inc
insb
and
gs
test
dec
es
daa
orl
xchg
jg
mov
xor
jp
add
stos
jns
sbb
lods
lds
gs
outsl
xchg
gs
out
aas
mov
xchg
int
mov
iret
gs
mov
out
cmpsb
lea
push
in
lret
cmp
fisttps
push
out
cmp
sub
andl
lock
push
push
movsl
xchg
lock
cvtpi2ps
jae
leave
xchg
or
xchg
pop
in
xchg
lret
shrb
and
mov
or
int
push
fsts
ret
inc
stos
or
test
or
in
cmc
push
push
dec
inc
ds
cmp
lret
and
sbb
inc
notl
cmp
sub
ljmp
cmpb
xchg
sbb
jo
loop
leave
stc
push
sub
push
cmp
stc
pop
fldl
imul
sbb
jl
jle
mov
orps
sbb
mov
aas
mul
iret
mov
test
data16
and
pop
arpl
outsl
xor
jne
mov
add
cmp
sbb
incb
popf
nop
adcb
push
je
add
xchg
or
push
ds
mov
out
xchg
lcall
addb
ret
mov
lret
jl
sub
insb
outsl
jge
adc
inc
jp
cmc
adc
fucom
dec
xchg
pop
sbb
aas
push
insb
lret
aam
cmc
and
pop
xor
jle
js
jnp
out
clc
inc
mov
movsb
mov
cmp
mov
gs
lock
jmp
mov
sub
cmp
dec
inc
fsubrp
cmpsb
adc
xor
std
stc
pop
mov
loope
or
mov
sub
push
fmul
xchg
fs
adc
and
sbb
or
mov
repnz
les
or
addl
push
clc
test
cmp
cmc
clc
dec
rorb
ret
add
cmpb
nop
popa
mov
testb
clc
and
xor
sub
rclb
stc
sbb
in
dec
dec
cmp
cmp
and
mov
fisttpll
mov
mov
fs
fidivrs
popl
es
dec
cltd
push
inc
pop
dec
aam
roll
ds
push
or
cmp
and
scas
inc
inc
pop
jg
push
xchg
add
in
pop
ja
pop
jno
js
stos
nop
fidivrl
jnp
xor
xchg
ret
add
sub
sub
lcall
rorl
int
xchg
test
mov
and
insb
sub
xor
lock
xor
mov
scas
add
fistpl
lahf
arpl
mov
popf
mov
stc
jg
lea
and
pminub
aas
aam
js
ret
addr16
ljmp
pop
jne
mov
psadbw
pop
sub
push
and
repnz
cld
push
xor
repz
mov
pusha
in
mov
enter
pop
sti
add
cwtl
xor
cltd
jmp
push
add
sbb
sub
push
imul
aaa
pop
popa
insb
subb
pop
popf
push
add
movsb
fcompl
mov
jg
adc
sbb
scas
dec
add
loope
xchg
xchg
adc
push
sbb
scas
sub
daa
out
mov
fsubr
mov
fisttpl
arpl
in
cmc
cmp
and
fsubrs
jge
mov
ljmp
pop
sahf
mov
insl
shr
or
sbbl
pusha
xchg
lcall
test
shll
xlat
stos
mov
lds
lret
pop
cmp
addr16
push
xor
hlt
mov
jns
jge
xlat
test
imul
dec
jecxz
pop
insl
pop
mov
sub
adc
xor
enter
in
push
and
mov
mov
inc
sbb
mov
mov
jge
loop
inc
leave
sahf
gs
push
mov
mov
adc
pop
mov
pop
mov
lret
add
ret
daa
dec
jo
div
out
in
test
jbe
js
add
mov
or
negb
mov
or
jbe
in
cmp
and
rolb
xor
pushf
mov
dec
mov
pop
repz
out
mov
ss
inc
mov
or
xlat
ljmp
cld
jg
mov
rorb
pop
leave
or
dec
cwtl
xlat
das
lcall
les
ret
stos
pop
xor
enter
jb
mov
or
push
addr16
bound
mov
add
jle
jb
les
sbb
add
jmp
movsl
dec
test
lcall
pop
sub
push
and
xorb
aas
mov
fldenv
and
mov
push
xchg
aad
shl
cmp
clc
mov
mov
xchg
and
add
mov
pop
mov
bnd
xchg
lock
cmpxchg
stos
push
sahf
sub
mov
stos
jecxz
and
imul
movl
pop
jne
scas
and
cld
repz
mov
mov
pop
add
sub
sbb
mov
mov
test
jno
fistl
fbld
inc
sub
fists
xlat
out
mov
insl
cltd
sahf
jnp
jns
dec
fwait
int3
inc
in
testb
cmpsl
in
insl
mov
testl
jbe
sbb
inc
jl
dec
pop
lcall
rorb
add
xchg
fstpt
lahf
add
ficompl
mov
jl
lods
xchg
mov
xor
test
rcll
cltd
cmp
testl
test
push
dec
decb
mov
cmp
inc
je
dec
shrl
push
jge
pop
mov
jns
sub
xor
std
rorb
call
dec
push
xorl
add
cmp
pop
push
add
xlat
mov
jno
ja
and
in
xor
xchg
xchg
ja,pt
rorl
push
insl
insl
cmpsl
leave
push
ss
jl
adc
add
sub
jge
add
mov
popa
sbb
cld
movsl
popa
dec
ss
push
sub
pop
enter
xchg
jns
inc
es
adc
lcall
arpl
inc
lods
pushf
pop
fs
sub
mov
push
jge
inc
mov
out
push
lds
lds
dec
lahf
leave
pop
mov
xchg
mov
or
js
xor
sub
cmp
mov
fcmove
xor
mov
sar
cwtl
out
hlt
add
pop
sub
inc
popf
outsl
cmc
mov
jns
loope
sbb
mov
adc
push
filds
daa
les
mov
xor
push
cld
jnp
push
outsl
test
loop
cwtl
jge
lcall
cmp
jbe
push
movsl
sahf
pop
cs
xor
xor
adc
pop
dec
cltd
and
jae
mov
es
and
mov
movsl
push
jecxz
and
lret
out
arpl
in
mov
xor
or
out
push
stos
jecxz
scas
ja
pushf
je
movsl
jne
xchg
inc
xlat
or
sub
clc
sarl
scas
cmp
in
add
mov
shlb
fiaddl
pop
idivb
mov
insl
pop
mov
add
sbb
lea
jge
movsl
fsts
sub
sbb
cmp
xchg
mov
cs
fidivs
ja
cmpsb
xchg
loope
fists
mov
lret
test
xchg
sbb
icebp
push
sub
pop
lcall
jns
fstp
xor
sti
les
mov
adcb
jbe
mov
mov
in
mov
mov
jecxz
sub
stos
pop
jle
sti
pusha
js
dec
adc
pop
xchg
or
addr16
mov
sahf
jne
movsb
inc
or
pushf
fildl
adc
daa
loop
pop
and
push
pop
icebp
ret
test
jmp
ja
pop
mov
pop
lods
clc
out
jge
fnstenv
push
aaa
dec
cwtl
cmpsl
cmp
hlt
push
pop
fwait
sbb
sub
dec
aaa
fisttps
enter
add
mov
sub
pop
sbb
hlt
cmp
scas
cmp
jge
xchg
dec
notb
pop
and
pop
xchg
jmp
mov
jp
dec
cmp
mov
icebp
mov
scas
jl
pop
orb
iret
add
mov
push
arpl
fnstcw
inc
enter
jmp
fwait
pop
shrb
jecxz
in
xchg
mov
int
sbb
pop
fidivrl
jg
shrl
lds
fcmovbe
pop
aam
movsl
mov
cmc
lea
sbb
dec
sbb
pusha
imul
xchg
scas
int
nop
rcrl
pop
test
xor
in
lret
xor
add
pop
adc
push
daa
and
jae
pop
scas
leave
lcall
and
adc
jl
loope
inc
rolb
add
lret
xorl
adc
push
mov
adc
repz
sub
jno
jbe
xlat
mov
push
add
scas
movsl
mov
pop
shrb
scas
sub
or
mov
jmp
mov
std
cltd
sbb
aas
std
lcall
inc
out
jne
icebp
xchg
ds
rcl
ja
push
sbb
lock
dec
fbld
mov
iret
adcb
int
rcr
pushf
dec
inc
iret
jge
jg
cltd
and
and
shll
push
jns
ret
cmp
pop
mov
daa
std
insl
int3
push
xchg
ja
mov
imul
in
lds
icebp
iret
mov
stc
out
jbe
ret
jbe
fstl
cltd
pusha
mov
fiaddl
sub
fcom
cli
aam
in
push
fildll
pushl
pushf
ficoms
jne
jl
in
sbb
inc
and
add
pop
loope
stos
mov
xor
ret
lds
jb
jecxz
and
add
mov
mov
mov
lret
sub
or
xchg
jmp
adc
fmulp
stc
pop
or
es
or
pop
lock
and
xor
sti
lds
add
orl
cmp
mov
enter
jbe
imul
sbbb
or
adc
fmuls
pavgb
cmp
xor
pop
push
mov
sbb
dec
fcomi
in
cmp
xor
jno
jns
cld
adc
ljmp
daa
sbb
push
out
repz
pop
xorl
fldcw
inc
jno
sub
rcll
xchg
imul
mov
pop
out
mov
outsl
pop
js
cmp
adcl
jae
pop
je
in
inc
dec
movsl
pop
or
aam
test
mov
sub
iret
gs
or
inc
scas
adc
mov
ds
jns
cwtl
mov
pop
jecxz
dec
test
loope
adc
sub
inc
dec
repnz
mov
out
sub
adc
cltd
and
jb
ljmp
out
mov
pop
and
aam
dec
pushf
std
psllw
inc
into
xor
lods
adc
jbe
mov
insl
vandnpd
pop
sbb
adc
aas
mov
loope
jbe
inc
in
or
fstps
push
mov
cmpsb
push
push
or
jg
ds
loop
inc
cmp
cmp
cmp
mov
test
rorb
xor
inc
mov
enter
vsqrtsd
cmp
orb
fcmovnbe
cmpsl
pop
xchg
jmp
mov
dec
sub
fidivl
pop
inc
mov
outsb
mov
inc
lahf
dec
inc
pop
popa
dec
jns
mov
fistl
std
sub
mov
mov
loope
sbb
std
jecxz
out
mov
mov
lea
out
dec
sub
dec
adc
mov
outsl
enter
addr16
or
and
es
cmp
daa
aaa
push
push
sbb
shrb
lds
and
flds
test
mov
xchg
stc
lcall
jl
cmc
fdivs
mov
call
and
mov
out
pusha
std
push
adc
lods
add
xor
mov
push
les
fistpll
test
add
jle
xchg
jbe
mov
cli
add
inc
push
je
fidivs
adc
sbb
dec
fwait
xchg
push
pop
add
adc
jl
push
movsl
jnp
dec
ret
popa
into
inc
imul
jge
mov
arpl
popf
ss
inc
aam
ret
aaa
mov
outsl
lret
popa
and
lock
sub
mov
dec
repz
lds
cld
dec
jmp
jns
dec
aaa
sbb
insl
push
negb
test
pusha
sub
xchg
sbb
stc
pop
in
insl
mov
jb
fmull
dec
push
dec
data16
mov
data16
fisubs
outsl
js
loop
sbb
xchg
leave
cmpsl
sbb
test
push
and
push
xor
in
inc
in
lcall
lods
jg
mov
sti
lahf
sbb
subb
adc
call
adc
test
cld
data16
mov
fadds
jmp
mov
repz
sbb
mov
out
arpl
ret
js
addr16
push
xchg
leave
xlat
cs
sbb
xchg
pop
lods
or
cmp
add
sahf
arpl
push
pop
int3
in
cmp
ficoms
jge
dec
test
loopne
sbb
flds
cli
adc
jo
ret
aam
out
jae
xor
mov
stc
inc
ret
mov
hlt
fninit
dec
ret
cmp
xor
mov
xor
les
cltd
dec
inc
jg
mov
inc
popl
fnstsw
aam
xor
sub
sbb
fmul
pop
jno
adc
pusha
cltd
adc
orb
rcl
add
leave
popf
jl
cmp
cmp
or
mov
dec
or
xchg
leave
stos
inc
pop
mov
outsb
adc
sbb
jmp
cmc
popa
mov
pop
leave
jp
je
insl
aaa
add
inc
pop
daa
sub
and
seta
push
inc
xor
jo
lods
sub
imul
les
lock
inc
dec
and
jl
outsl
and
push
adc
clc
lret
ficoml
mov
or
inc
xchg
mov
xchg
inc
mov
sub
es
js
lret
push
pop
inc
inc
test
cs
jno
xchg
dec
lcall
imul
cmp
into
test
fisttpll
ret
lea
adc
jmp
mov
inc
outsb
push
add
mov
scas
lods
inc
cwtl
or
and
mov
mov
pop
test
test
jns
push
sbb
mov
inc
fisttps
mov
cltd
aaa
inc
test
adc
idivl
sahf
add
add
dec
cld
sbb
jne
inc
sbb
mov
or
aad
mov
adc
into
fisttpl
inc
push
clc
lcall
sbbl
and
pop
and
insb
push
pop
js
lahf
cmp
fcoml
mov
movb
xor
mov
xchg
rorl
rclb
es
mov
cmpsl
xchg
sbb
push
movsl
inc
shlb
icebp
or
sub
inc
rcrl
xchg
xchg
jns
lcall
loop
jg
in
scas
add
test
dec
mov
xchg
xor
js
pop
shr
movsb
jg
mov
fst
fildll
mov
repnz
iret
aaa
pop
jl
lds
or
mov
clc
fidivrs
mov
and
insb
adc
dec
cmp
mov
cmp
pusha
out
push
pop
rcrb
or
cmp
bound
mov
sahf
add
adc
movsl
sub
iret
mov
sbb
inc
sbb
xchg
ss
in
cmp
leave
pop
pop
cmp
js
jg
jmp
jmp
or
pop
adc
stos
cli
fbstp
mov
out
inc
cmp
jl
sarb
repz
repnz
mov
sub
mov
dec
into
insb
mov
aad
pop
insb
test
xor
sar
repnz
jl
mov
sub
adc
mov
xchg
imul
imul
sub
jne
loop
in
jno
gs
imul
push
rol
push
cmc
push
and
call
xchg
shrl
aaa
xor
push
push
mov
jmp
inc
cmp
ret
insl
insb
pop
aam
push
repz
popa
adc
call
leave
jno
mov
lds
fcmovnb
jmp
adc
sbb
mov
loopne
dec
das
xchg
out
push
sbb
sub
and
sbb
les
aam
ret
push
sbb
lahf
out
bound
in
push
mov
xchg
adc
ret
pop
movsb
je
mov
insl
cs
lretw
les
mov
mov
jne
push
aas
inc
test
dec
scas
mov
mov
repz
outsb
pop
mov
xor
jmp
outsb
in
gs
sbb
shrl
mov
inc
and
stos
or
sbb
in
mov
sub
dec
xchg
mov
or
push
lahf
dec
enter
mov
rcll
push
subb
fstp
std
fldt
jno
jns
imul
rorl
fdivrp
shl
cmpsb
xchg
xchg
daa
cmp
inc
js
push
cli
leave
xor
inc
lods
jno
out
sub
dec
dec
sahf
add
inc
aad
stos
hlt
std
xor
push
hlt
popa
jbe
jle
fsubrs
add
test
push
pushf
push
sub
or
out
push
shlb
stc
sahf
cwtl
daa
or
pop
adc
orl
outsb
adc
shrb
rolb
push
jae
mov
pop
xchg
dec
mov
repz
shrl
shll
jo
leave
mov
nop
outsl
pushf
push
popl
jns
sbbl
cmp
add
inc
call
fwait
dec
andb
loopne
jbe
test
out
jb
push
adc
notb
jae
xchg
adc
xchg
pushf
rorb
imul
repnz
insb
mov
bound
outsl
and
sub
test
mov
fcomps
dec
sbbl
xchg
xchg
incl
adc
push
xor
jge
pop
xchg
inc
adc
cmp
push
test
out
ficoms
inc
cmp
pop
pop
orl
jns
pop
mov
or
addr16
addb
int3
pop
sbb
inc
push
rolb
push
jp
out
and
shlb
add
or
mov
in
mov
clc
sub
outsb
add
scas
push
pop
arpl
xor
dec
mov
flds
xorb
jb
push
movsl
xchg
cwtl
xor
rcll
xor
notb
fsubr
lods
cli
add
xchg
sub
jns
clc
jmp
jmp
ja
imulb
outsb
ljmp
push
inc
jbe
js
or
dec
jge
lock
shlb
sti
xor
xchg
xorb
jge
jb
icebp
loopne
sar
inc
mov
add
inc
sbb
lret
cmpsb
les
cmc
cltd
mov
ret
mov
cmpl
loopne
dec
jne
leave
pushf
sbb
xchg
ret
popf
and
add
ffreep
in
sbb
repnz
pop
loope
jge
push
xchg
mov
addr16
mov
push
dec
jg
loopne
ret
mov
mov
and
fsubr
xchg
xor
pop
xlat
fwait
notrack
adc
cmc
dec
mov
movsb
scas
shl
out
mov
push
imul
shrb
xchg
fistps
test
leave
sub
nop
push
loop
or
cmp
inc
mov
push
aam
mov
or
xchg
xchg
data16
ljmp
imul
in
sbb
mov
aaa
sbb
and
cmp
xchg
fcomps
rcrb
es
rcrb
leave
pop
lret
iret
mov
push
jns
xor
lods
std
jnp
pop
scas
jns
dec
lds
mov
out
orl
ret
shrb
inc
or
push
mov
mov
dec
mov
sbb
mov
lds
test
add
push
mov
jl
je
outsl
xor
jecxz
daa
stos
out
mov
mov
push
cld
es
lods
cmpsb
mov
add
mov
and
fildl
jns
sbb
push
sahf
jae
stos
in
imul
inc
cmp
xchg
jle
ss
inc
std
movsb
sbb
push
mov
jle
pop
lea
ficoml
xchg
repnz
in
lds
leave
int
xchg
mov
and
out
mov
sbb
daa
loop
imul
scas
lret
in
sub
and
nop
outsl
cmp
pop
std
aam
mov
movsb
cmp
inc
std
inc
mov
push
test
cmp
sbb
negb
ds
loope
test
jnp
shr
pop
add
xchg
pop
sahf
arpl
mov
into
ljmp
das
es
dec
mov
or
or
iret
cmp
ja
ss
pop
repz
jbe
inc
lcall
dec
inc
mov
fidivl
daa
sbb
inc
mov
sub
mov
pop
push
cmp
xchg
push
sahf
mov
push
mov
out
jge
out
dec
pop
lret
push
daa
cli
inc
adc
es
or
icebp
movsl
sub
in
mov
mov
and
mov
dec
nop
and
or
xlat
cmp
and
stos
mov
out
cmp
push
loopne
lods
cli
test
cmp
sti
inc
jne
or
mov
cmpsb
push
test
xchg
adc
repz
popa
mov
mov
jle
cld
lock
mov
outsb
nop
cld
leave
inc
pusha
push
subl
lahf
jbe
test
mov
jbe
aas
ljmp
dec
jg
sub
shrl
sub
fwait
scas
insl
xchg
pop
cmp
push
ficoms
and
fiadds
add
shr
jne
lcall
dec
push
mov
stos
enter
pop
adc
adc
adc
xor
xor
sbb
adc
push
jecxz
jno
daa
sub
imul
push
adcb
call
sbb
xchg
pop
adc
mov
cmp
out
stc
xor
add
jo
pop
cmp
xchg
mov
ss
mov
jne
popa
fistl
mov
outsl
push
movl
inc
clc
dec
inc
sbbl
aas
rorl
stos
add
imul
xchg
jle
or
cli
dec
inc
xchg
pusha
xchg
xchg
xor
mov
cmpsb
std
mov
out
jmp
fwait
ja
mov
lock
into
xchg
ficomps
mov
add
sti
out
xor
and
cmp
mov
pop
or
bound
mov
mov
das
push
jnp
pop
ds
or
popa
push
sahf
insl
addr16
mov
mov
sub
jle
jbe
stos
mov
xor
sbb
and
xchg
lea
stos
imul
xor
xchg
inc
out
pop
adc
or
jle
sbb
fiaddl
xchg
lock
test
in
arpl
jne
fldl
add
mov
push
pop
or
mov
fldt
pusha
in
mov
xor
gs
inc
xchg
fistps
add
iret
dec
stc
cmpsb
in
ss
xchg
mov
inc
dec
add
mov
sub
jno
cld
aam
pop
outsl
int3
xor
lret
arpl
sub
add
hlt
push
jge
in
adc
push
dec
and
or
imul
mov
idivb
ss
xchg
sub
outsl
sarl
pop
or
ret
jae
cs
popf
mov
cld
jle
test
in
call
sbb
pop
aaa
sarl
lea
cmp
fisttps
sti
xchg
lret
and
jns
aas
jne
scas
mov
cli
andl
adc
jno
adc
pop
pop
ljmp
cld
scas
test
xor
fsubp
movsb
mov
fwait
je
hlt
stos
sbb
mov
cli
or
adc
jecxz
sub
jg
jb
inc
mov
inc
xchg
and
mov
scas
mov
out
mov
sub
or
int3
dec
adc
pop
aas
sub
cmpsb
inc
mov
insl
repnz
aam
mov
lcall
pop
jg
mov
mov
mov
cmpsb
pop
in
xchg
jecxz
jmp
fsts
test
pop
stos
stos
ja
stos
xor
mov
popa
jmp
fadds
push
xor
jbe
clc
xor
dec
jb
mov
cmc
and
and
dec
lcall
push
icebp
ret
xchg
xchg
cld
add
fidivrl
and
adc
lea
jnp
lahf
cmp
dec
pop
sti
clc
cmpsl
jmp
jo
dec
stos
out
pop
inc
adc
lea
push
jb
repnz
mov
rolb
mov
xor
pop
or
add
sub
adc
sbb
icebp
test
aas
adc
jecxz
or
stos
mov
push
inc
imul
cmc
stc
push
fwait
adc
ret
or
adc
mov
add
pop
mov
leave
push
mov
push
lret
lods
xchg
fnstsw
fucomi
cmp
mov
cmpb
addb
pop
mov
lret
in
mov
sbb
mov
dec
rorl
xchg
js
ss
add
inc
inc
mov
sub
outsb
divb
leave
faddp
xchg
jg
insl
ss
and
out
adc
cmp
mov
popa
sbb
lahf
sbb
aaa
push
fdivr
mov
leave
xlat
cmp
in
out
mov
and
popa
add
inc
cltd
cs
and
shrl
xchg
mov
cmp
jle
ja
addr16
jmp
jmp
fs
leave
notl
push
cmp
sub
xorl
and
out
xchg
insb
cmp
test
xchg
out
or
sub
jmp
loopne
push
xor
add
test
fisttpl
push
pop
xor
ret
add
sbb
ret
arpl
or
test
lret
loopne
outsb
lock
daa
imul
jecxz
and
lcall
test
push
movsl
ficoms
cmp
loop
addl
data16
add
pop
and
xchg
mov
insl
xchg
scas
xor
cmpsb
cmp
sbb
inc
int3
fimuls
dec
push
adc
xor
sbb
cmp
movsb
into
add
xchg
loope
push
test
repz
push
test
dec
jno
push
aaa
hlt
sub
call
mov
aam
adc
scas
orb
shll
ljmp
mov
je
aad
and
sub
mov
and
push
and
inc
pop
cltd
pop
inc
repnz
xchg
mov
ljmp
push
test
inc
dec
fwait
aas
inc
xchg
push
test
add
adc
xor
or
xchg
stos
insb
mov
push
jg
jbe
fwait
cmpsl
imulb
movsb
test
or
jno
ret
popf
or
lahf
push
adc
fbstp
sub
test
jmp
les
mov
test
jle
outsl
inc
fcoms
cld
cwtl
pop
mov
fisubs
movsl
jbe
mov
pusha
push
pop
loop
lahf
in
imul
xor
mov
fsub
pop
xchg
das
push
mov
aad
xchg
jo
lock
mov
dec
mov
shl
shll
xor
mov
cmc
xor
xchg
fdiv
and
retw
dec
lock
jmp
sti
sbb
push
lahf
or
jecxz
stos
scas
in
mov
xor
mov
cmp
sub
aas
test
mov
daa
adc
jp
fistps
mov
stos
sbb
inc
fbld
mov
jbe
or
pop
mov
imul
fdivrs
dec
pop
pop
lret
push
cmp
test
and
negb
cli
xor
movsb
std
aaa
push
test
mov
mov
lret
mov
popf
push
push
shl
mov
cmp
sti
scas
insb
lds
popa
fsubrl
pop
add
and
xor
orb
in
mov
mov
sub
fdivs
icebp
dec
push
hlt
pop
in
mov
subl
push
addb
fnstenv
insb
mov
ljmp
pop
std
jb
addl
icebp
push
inc
cmp
mov
ret
mov
or
pop
push
es
mov
xor
cltd
insb
jge
std
and
lods
lds
pop
push
jp
rorb
ds
movsb
mov
out
bound
lods
pop
sahf
fwait
insb
push
js
sub
inc
lcall
push
mov
cmp
sbb
mov
push
cmp
sar
sbb
mov
mov
lcall
pop
xchg
dec
inc
and
insb
ret
mov
pop
pop
nop
addl
add
cmpsb
push
cs
stos
loope
ljmp
pushf
mov
aas
sub
lret
xor
dec
dec
cld
pusha
lcall
aaa
inc
scas
int3
adc
add
data16
pop
push
insb
sbb
dec
mov
leave
xchg
sahf
mov
test
xor
insl
mov
cmp
and
ret
fs
cmp
in
lds
xor
jns
push
and
aaa
xchg
pushf
mov
adc
jnp
cmp
xor
jbe
inc
ret
adc
pop
ret
test
mov
xchg
pushf
mov
in
pop
sahf
jns
icebp
xchg
push
arpl
cmp
inc
and
test
stos
pop
in
mov
cmp
inc
xchg
xor
cs
jle
or
dec
push
sub
fisubl
std
cmp
bound
jnp
divb
or
xchg
xor
jl
fwait
in
adc
inc
jns
xchg
pop
sbb
in
xchg
nop
sub
loope
sub
aad
pop
inc
mull
and
xor
jae
subl
popf
ss
jns
cmc
cmp
mov
leave
dec
sub
pushf
jno
jae
push
out
mov
cmpb
mov
or
stc
arpl
rol
das
cmp
sar
mov
mov
cmp
mov
jmp
gs
push
xor
sbb
sub
mov
sub
mov
stos
popf
sbb
mov
jae
pop
push
enter
ret
sub
div
xchg
adc
in
jbe
pop
lods
cltd
out
cmp
std
mov
lods
aas
lods
dec
les
imulb
push
shlb
mov
add
sbb
int3
cmp
push
adc
popf
push
jns
pop
arpl
sub
das
mov
addps
xor
inc
popl
cmpsl
je,pt
push
mov
xor
xchg
aad
outsl
push
fsubrl
and
mov
dec
test
dec
inc
in
and
into
pop
out
push
and
xorb
popf
arpl
mov
bound
nop
shll
push
jle
ret
iret
cwtl
sub
insl
cs
jle
sti
and
and
popa
add
or
dec
outsl
dec
ficompl
aad
inc
push
cmp
jp
adc
mov
mov
in
loope
xor
mov
lcall
push
insl
jns
imul
cmp
dec
arpl
jne
js
pusha
jae
jecxz
mov
popf
mov
clc
xor
fstps
aad
dec
or
imul
dec
rcll
pop
std
dec
imul
jb
fs
push
fwait
das
cs
jo
stc
sbb
shrl
pop
or
jns
sahf
mov
xor
cmp
test
neg
pop
shll
or
sarb
das
dec
mov
pop
stos
mov
jmp
sbb
add
or
jmp
andl
test
adc
xchg
or
xorb
jmp
inc
repnz
cmpb
add
out
jnp
arpl
je
xchg
shr
inc
cmp
inc
sbb
lods
icebp
loop
ja
mov
shll
sub
dec
lret
pop
clc
adcl
xchg
insb
call
adc
rcrb
popf
cld
xchg
and
cmp
and
adc
adc
xchg
xchg
frstor
cltd
movsl
adc
lock
fcmovb
mov
sbb
sarl
dec
cmp
scas
sub
or
es
push
inc
mov
sbbb
adc
sti
scas
xor
xchg
push
or
inc
mov
cmp
mov
test
shll
pop
pusha
add
outsb
inc
test
xchg
in
insb
insb
std
mov
leavew
and
mov
inc
xchg
sbbl
imul
xlat
push
mov
ret
prefetch
pop
xor
or
mov
mov
cmp
imulb
push
in
fwait
cmp
test
xor
cmp
lahf
sbb
sbb
xchg
pop
inc
aaa
aaa
mov
leave
mov
jg
add
mulb
mov
xchg
push
or
movsb
push
sbb
movsl
inc
xlat
xchg
push
sub
adc
xor
push
jp
orl
cmp
inc
int
test
jp
sub
dec
ret
mov
push
movsl
imul
inc
iret
mov
mov
repz
sarb
ljmp
sub
fidivrs
ret
out
aam
xchg
out
inc
mov
scas
sbb
pop
aaa
cmp
cltd
push
and
mov
adc
xor
fcoms
sbbl
popl
push
or
testb
sub
and
test
outsb
out
mov
sahf
sub
loopne
loopne
and
movb
push
xchg
sarl
pop
clc
xor
sub
xor
cmp
sbb
test
cmp
pop
pop
adc
xlat
pop
stc
sbb
push
add
es
jae
mov
jo
leave
insl
outsb
mov
push
mov
push
mov
mov
fistpl
inc
shll
mov
out
stos
sub
and
xchg
insb
fmull
mov
dec
leave
js
outsl
inc
jbe
out
jmp
fwait
mov
ds
jl
mov
push
inc
push
fs
aam
sbb
jbe
fbld
jl
sub
xchg
idivb
fsub
sbbb
enter
sub
and
daa
aaa
xor
and
lcall
sbb
pop
test
adc
jecxz
loop
fstl
inc
or
out
gs
stos
add
es
mov
cmp
mov
inc
ljmp
lret
lds
mov
cs
in
xor
add
push
call
sbb
pop
cwtl
lds
adc
out
in
lock
sub
scas
repz
xchg
adc
dec
shlb
arpl
mov
xchg
mov
jge
dec
mov
inc
mov
ja
pusha
es
xchg
mov
std
push
mov
sbb
test
jecxz
pop
cmp
loope
es
push
in
test
and
dec
lret
push
pop
insl
dec
dec
lahf
insl
pop
movsl
dec
hlt
mov
or
or
addr16
sub
lret
add
movsb
push
movsb
push
loope
inc
or
cmpsl
mov
push
pop
push
mov
jge
jmp
pop
incb
xchg
mov
mov
xchg
sub
xchg
aaa
out
js
sbbb
fisubrl
and
imul
insl
and
and
and
mov
ret
xchg
mov
sti
jecxz
xor
lret
mov
cmovnp
sub
dec
in
add
mov
arpl
jne
notb
mov
adcl
in
sbb
inc
push
sub
rcrl
or
insb
dec
lahf
dec
rcrb
adc
sbb
pushf
xchg
and
dec
or
out
test
xchg
in
mov
iret
aaa
xlat
or
popa
push
imul
jmp
mov
mov
lahf
out
inc
add
pusha
aam
out
scas
pop
inc
push
inc
data16
arpl
inc
add
push
or
rorl
lcall
push
jge
addr16
push
inc
in
fadds
into
test
test
add
repnz
cli
inc
addr16
test
cmc
div
sbb
or
nop
enter
fstps
js
pushf
push
dec
push
push
push
pop
pop
xchg
jp
cmpsl
push
iret
jb
xchg
mov
pop
mov
fisttpll
movsb
rcr
pushf
mov
in
aam
jle
mov
lods
xchg
or
sub
das
jne
pop
and
out
mov
sbb
daa
pop
and
adc
lahf
add
cmp
flds
out
aaa
insb
jne
testl
iret
mov
call
out
jno
push
lds
mov
push
pop
je
movsl
xor
xchg
cmp
iret
xor
pusha
adcl
dec
inc
orl
fstpl
das
addb
shll
adc
clc
or
ljmp
adc
mov
shr
inc
mov
xchg
loop
inc
push
mov
out
mov
pop
dec
and
hlt
and
loopne
ss
inc
scas
data16
mov
jb
jl
cmp
jb
mov
and
add
lea
test
jg
movsl
pop
sbb
sbb
mov
xchg
add
dec
sbb
movsb
test
and
test
mov
popf
repz
push
jl
in
push
xlat
inc
vpmacssdd
nop
mov
les
stc
push
push
mov
sub
cmp
cmp
mov
xor
push
and
les
movsl
cmp
subb
sub
jl
push
xor
push
sbb
pop
sbb
inc
cwtl
sbb
mov
mov
xchg
dec
psubd
sub
push
test
pop
in
rorl
mov
xor
test
adc
insb
pop
jmp
and
jle
loopne
ret
enter
out
push
ficompl
pushf
faddp
lds
mov
repz
iret
adc
push
loopne
jnp
dec
jnp
xor
int
pop
push
mov
cmp
xor
mov
shlb
std
outsl
faddp
aaa
ljmp
or
arpl
imul
jb
push
sbb
mov
xchg
loopne
imul
mov
mov
and
xor
and
das
mov
test
sub
shlb
xchg
ret
xchg
arpl
cld
xchg
outsl
pop
loope
cmp
or
aas
and
ret
aaa
push
ss
inc
pop
cmc
adc
or
sub
dec
fwait
push
pop
push
call
test
shrb
je
sub
and
icebp
loope
arpl
pop
mov
lret
and
dec
dec
mov
out
push
mov
mov
pop
inc
adc
push
adc
faddl
add
dec
ret
mov
dec
divl
mov
into
data16
ja
lret
or
mov
pushf
sbb
jnp
lret
pop
inc
ds
insb
cmp
mov
push
leave
pop
pushf
clc
pop
mov
xchg
or
adc
pop
push
sub
push
push
out
push
push
fistpl
rol
movsl
dec
sbb
mov
sahf
cwtl
flds
push
sbb
adc
cmpsl
dec
mov
xchg
enter
das
inc
fists
lea
add
push
inc
mov
push
cmpb
xor
sarb
lea
pop
sti
ret
dec
add
or
out
and
cmp
clc
cs
sub
aam
jo
test
sub
mov
cmpsb
jno
add
push
xchg
sub
inc
jb
ljmp
stos
ret
in
lret
idivb
mov
pushl
scas
mov
sbb
fldenv
outsl
cmp
mov
jmp
inc
inc
sub
cwtl
xor
sub
mov
sbb
sub
inc
fwait
mov
sub
pop
mov
lock
sahf
pushf
movl
xor
aaa
lret
pop
jge
call
cmp
pop
add
push
bound
cmp
pop
sub
mov
fwait
mov
cmpsb
aam
sbb
call
jnp
pop
into
int
adc
shlb
push
mov
add
inc
jmp
cwtl
rclb
ret
stc
notl
add
lods
or
mov
sbb
push
mov
inc
test
and
movsb
in
ss
cmpsl
xchg
add
xor
mov
icebp
movsb
cmp
loop
push
fisttpl
cmpsl
loope
sub
xchg
call
fisttpll
push
aad
mov
jne
sub
xor
add
jno
mov
pushf
sbb
out
mov
mov
xchg
xor
mov
fldl
int3
dec
adc
adc
adc
cli
push
stos
mov
sbb
mov
lcall
loopne
loop
pushf
cmc
mov
out
pop
imul
ficoml
push
fsubs
mov
jbe
sbbl
testb
xchg
sti
inc
pop
andl
jae
mov
aad
pushl
lahf
jecxz
xorl
mov
inc
mov
rcrl
stc
leave
push
pop
sbb
push
test
and
mov
pushl
ss
jl
push
testl
scas
inc
jmp
sahf
jo
dec
aaa
or
adc
loopne
scas
and
roll
mov
fwait
loop
filds
enter
xlat
fistpll
mov
inc
mov
invd
push
insl
push
insb
cld
lods
or
hlt
adc
out
push
jns
cmp
sbb
jae
pop
push
inc
push
lods
sti
fnstcw
leave
jp
jno
xor
push
push
xchg
mov
jb
or
mov
jnp
in
and
lock
mov
mov
sahf
fsqrt
mov
in
js
mov
mov
pushf
mov
push
xor
std
popf
ret
mov
mov
add
int3
mov
fnstcw
les
je
jl
mov
or
aad
xor
clc
es
adc
insl
adc
ret
pop
adc
ss
dec
je
add
inc
xchg
das
in
jne
xchg
addr16
pop
pop
and
shrl
stc
cmp
call
mov
jg
faddl
sbb
imul
shrl
aam
sbb
inc
sub
mov
sub
movsl
call
inc
mov
mov
xchg
sbb
cmpsb
neg
xor
aam
cmp
daa
imull
cli
pop
push
pop
testb
dec
sti
mov
jne
jg
in
dec
adc
sbb
sub
aaa
xchg
pop
leave
stos
repz
fcoms
loopne
es
pop
inc
xor
sub
sbb
cld
mov
sub
pop
fisubrs
jo
xchg
jmp
xchg
fcmovnbe
inc
cmpb
jge
xchg
inc
fcmovnb
mov
jnp
inc
xor
loop
js
mov
push
js
sbb
and
icebp
adc
mov
stos
test
pop
and
xor
adc
stos
loope
jmp
outsl
jno
mov
sbb
cli
addl
cld
fisubrs
ljmp
aam
cltd
pop
mov
xchg
test
outsb
stc
rcr
out
push
cmp
test
mov
jae
xchg
scas
rcrl
xor
dec
mov
and
testl
xchg
addr16
push
test
push
mov
or
scas
int
jmp
stos
scas
cmp
cmpsl
mov
mov
jp
fsubp
mov
mov
dec
and
in
push
movsl
aaa
jb
mov
nop
ret
mov
mov
clc
jge
ss
jns
sub
nop
cmp
mov
push
push
sbb
cmpsl
sub
xchg
inc
jnp
dec
fmul
mov
xchg
add
push
xlat
mov
dec
ljmp
scas
gs
aaa
inc
or
cld
jle
jl
or
aam
repz
inc
push
lahf
jb
dec
cmp
lds
inc
push
cmc
or
xchg
out
jo
fdivrs
std
inc
dec
push
push
mov
hlt
xor
rol
popa
fists
lods
push
xorl
jmp
xchg
xchg
bound
add
outsb
mov
dec
cmc
xchg
dec
stc
sbb
aaa
inc
fisubs
mov
adc
aad
mov
lods
xor
dec
cld
setle
sub
sti
and
loop
sub
cmp
fs
int3
cli
push
fs
dec
push
cmpsl
or
sub
xor
pop
xchg
mov
mov
daa
jne
pop
mov
insl
cmp
mov
les
pop
mov
je
hlt
addr16
xor
dec
sub
movsl
and
pop
movsl
into
jae
push
xchg
and
ret
jns
inc
ja
iret
daa
outsl
pop
xor
xor
or
jecxz
ljmp
int3
aam
mov
addl
pop
subb
ret
ret
imul
fucom
push
fsubp
inc
push
clc
fnstcw
or
adcl
lds
jmp
cmpsl
add
adc
sbb
sbb
mov
addr16
mov
fcoml
scas
ljmp
mov
and
cmp
cmp
push
jecxz
mov
mov
insb
lret
lahf
sbb
jl
pop
lcall
push
cmp
pop
outsl
mov
cltd
sbb
bswap
pop
cmp
sahf
or
add
scas
dec
cmpb
adc
cmp
out
scas
cmp
pop
sub
sub
aam
pop
movsb
mov
add
icebp
inc
xor
jg
ret
and
push
adc
xor
push
jle
out
cwtl
xchg
xlat
addr16
mov
arpl
into
xchg
and
aaa
mov
mov
sub
inc
pop
push
mov
add
sub
rcll
or
imull
flds
xchg
mov
push
stos
in
test
mov
bound
aaa
fmull
stos
sub
jmp
pop
push
bnd
dec
jecxz
ds
xchg
cmp
imul
pop
int3
push
cltd
int
or
stc
sbb
mov
push
jbe
lcall
mov
jae
fnstcw
sti
pop
adc
dec
mov
repnz
lahf
xchg
sub
test
xor
movsl
xchg
xor
imul
mov
jge
jmp
test
jb
push
xorl
in
jno
cmp
lea
imul
clc
pop
call
in
mov
lea
bound
xchg
in
mov
push
lret
js
jns
sbb
clc
sub
mov
addb
cmp
arpl
jnp
jae
repnz
or
ss
mov
push
or
movsb
lahf
loopne
dec
push
lret
dec
movsb
shll
xchg
jge
mov
test
mov
sub
dec
pavgw
push
or
or
push
lahf
lahf
data16
nop
mov
sbb
inc
je
push
negl
xlat
in
and
or
mov
nop
test
mov
jmp
data16
outsl
frstor
mov
or
jo
outsb
test
imul
stos
push
sub
add
jmp
in
push
pop
out
in
pop
xor
call
cltd
clc
cmp
jp
mov
mov
push
push
pop
movsb
shl
aad
inc
das
inc
fsubl
fadds
push
sbb
clc
mov
xor
es
add
mov
cmp
mov
xor
pop
push
sbb
cmp
cmp
pop
jbe
neg
pusha
repz
mov
jb
incb
pop
fistpl
pop
test
push
mov
fldlg2
xchg
inc
out
scas
xchg
addr16
sarb
push
lret
mov
in
or
scas
mov
add
iret
inc
inc
jp
inc
stos
out
aam
dec
sub
cltd
jb
lods
mov
sbb
sub
mov
and
sub
dec
mov
inc
pop
mov
cmp
inc
mov
dec
call
pusha
stc
cmp
xchg
sbb
jns,pt
jle
xor
cmp
mov
pop
dec
loop
test
call
and
fmull
sub
xor
mov
dec
mov
std
das
mov
xchg
push
push
adc
add
xor
imul
movsl
rcll
repnz
jns
add
rcrb
scas
in
pop
push
sub
in
and
cmc
add
jno
ljmp
and
cmp
es
fmulp
and
stos
cs
aam
push
lds
iret
aad
inc
mov
icebp
jl
pop
jns
pusha
pusha
test
pop
push
vpshldvq
mov
sub
jecxz
xchg
lea
dec
jg
lds
cmp
movb
out
js
into
aad
aam
sub
outsl
cltd
inc
shl
cmp
and
fistl
sbb
or
mov
lods
xor
repnz
xor
xchg
pushf
add
aas
mov
xor
cs
jecxz
pop
sub
jnp
pushf
call
jmp
or
sub
xor
test
sub
fidivs
pop
xchg
jmp
jns
inc
add
dec
jmp
push
js
sbb
xor
sub
push
inc
jecxz
mov
sub
out
push
pop
pop
mov
or
ss
mov
xchg
mov
sub
movsb
fcomip
adc
cmpsl
scas
test
mov
hlt
stos
movsb
fsubrs
dec
sbb
or
pop
jle
jns
mov
push
repz
cmp
ja
mov
adc
pusha
push
adc
popa
fisttpl
fucomip
cwtl
es
mov
mov
lods
out
xor
imul
pop
fsubrl
xor
cmpsl
or
mov
lods
add
sub
sub
cmp
and
adc
pop
jnp
cmp
xchg
dec
adc
addr16
mov
and
scas
lds
les
jl
in
jge
loop
inc
sub
les
or
xlat
jle
mov
daa
scas
inc
dec
xor
fisubrs
mov
pop
imul
push
outsb
sbb
and
gs
xchg
loop
push
data16
or
bndstx
jns
pop
sbb
mov
mov
test
jbe
mov
out
aas
mov
jae
push
sbb
cmp
mov
cmpsl
xor
mov
ds
and
mov
repnz
ljmp
int
dec
pop
jne
mov
inc
xchg
mov
xchg
repnz
cld
dec
push
jnp
testb
mov
or
aad
out
arpl
fnstsw
mov
iret
cmp
into
aas
push
push
and
or
mov
inc
jo
test
int3
loope
mov
mov
mov
pop
mov
jnp
roll
or
xor
mov
popa
gs
adc
lret
sub
pusha
jmp
mov
and
sysenter
aas
add
xor
mov
push
inc
mov
inc
movsb
std
push
ja
xchg
add
stc
xchg
jb
pop
pop
sahf
addb
push
rcrl
ret
or
adc
loope
adc
mov
imull
movsl
cli
xchg
popa
adc
jg
push
addb
inc
decb
imul
es
scas
jmp
fsubp
popa
mov
or
adc
mov
push
mov
ljmp
lcall
mov
inc
fldl
cmp
dec
push
mov
and
shrb
pusha
jno
les
push
shr
jle
inc
fnstenv
fsts
rcrl
or
jmp
mov
out
mov
mov
adc
pop
das
lods
mov
sub
shlb
mov
ja
pop
subl
loop
or
mov
cmp
xchg
stos
mov
sbb
hlt
cmp
mov
cmpsb
push
push
pushf
cmp
shrb
and
outsb
xchg
or
int
and
xor
setge
pusha
cmp
or
or
push
push
cmp
inc
fsubrs
cltd
cmpsb
fsubr
mov
push
rcll
push
dec
out
sub
test
xchg
push
sub
xor
repnz
inc
lcall
xchg
cmc
dec
mov
sbb
cmp
push
sbb
dec
je
repnz
flds
adc
cmp
inc
adc
es
adc
jl
push
bound
adc
and
xor
fdivrl
add
xchg
adc
fcmove
mov
notl
mov
adc
ret
adc
cwtl
repz
cld
pop
jge
movsl
xor
mov
jecxz
aaa
mov
and
lods
push
dec
mov
bound
cmpsb
gs
mov
and
and
stc
mov
mov
jne
adc
cmp
enter
xor
decl
jge
nop
je
mov
pop
gs
arpl
pop
fldcw
outsb
ds
sbb
daa
dec
sub
stos
in
icebp
shlb
inc
pop
mov
cmp
fsubs
sahf
cli
and
sbb
xor
idivb
lahf
jp
jge
pushw
jge
add
insb
out
jge
jp
outsl
fldt
push
mov
jmp
dec
imul
cwtl
jecxz
mov
xchg
ja
rorb
mov
lods
adc
fisubrl
or
jge
pop
das
mov
cli
mov
cwtl
aad
sub
jb
loopne
add
loop
loope
sub
hlt
out
cwtl
and
inc
dec
dec
data16
xchg
es
ds
cmpsl
cmpsb
lock
adc
ds
pushf
les
cltd
xor
mov
pop
push
xor
ret
mov
push
cs
mov
jl
lret
dec
punpckldq
pop
scas
mov
sahf
mov
sub
out
cmp
or
mov
cli
mov
sub
iret
pushf
test
dec
decb
cli
aaa
mov
jns
xchg
xlat
ret
lock
or
and
clc
xchg
inc
mov
mov
pop
xchg
lods
leave
dec
test
das
test
push
mov
aas
mov
or
dec
mov
repz
add
cmp
mov
loop
push
jmp
dec
and
mov
lcall
jnp
add
lret
jns
mov
push
insl
mov
js
and
iret
leave
sahf
dec
add
popf
ss
pop
add
loope
xor
rol
xchg
inc
icebp
sub
in
in
sub
mov
test
lock
jnp
sti
call
pop
cmp
and
sbb
xor
cmpsl
cmc
ss
arpl
or
adc
mov
cwtl
aam
ret
inc
xchg
or
adc
fidivl
cwtl
dec
in
decb
cs
inc
lahf
inc
shlb
xchg
add
cmp
js
pop
loop
cltd
sbb
inc
enter
mov
adc
loope
mov
pop
sahf
push
int3
cmpb
shrl
cli
dec
mov
test
sbb
cmp
cli
incb
xor
mov
ja
jo
xchg
push
loopne
pop
outsb
mov
sub
xchg
xchg
push
mov
out
jb
cli
mov
fucom
sub
fs
loop
cmp
push
insb
inc
test
clc
pop
xchg
test
push
and
mov
or
or
cmp
mov
and
mov
add
push
dec
mov
push
cmp
push
gs
xor
fisttpl
cwtl
cmpsl
mov
or
cli
and
pop
outsb
sahf
sub
loopne
in
mov
xchg
mov
cmp
xor
in
int3
push
insb
jmp
arpl
dec
lods
addps
stos
dec
cmpsl
cmpsl
pop
pushf
out
int3
mov
bound
inc
push
int
ret
shl
pop
sub
fwait
leave
and
int3
js
add
inc
repnz
sub
xor
sbb
hlt
std
xchg
mov
push
incb
popl
inc
sub
stos
and
in
sarb
sub
xchg
std
data16
xchg
mov
test
insb
push
stos
push
lcall
and
and
pop
mov
movsl
cmpsl
sbb
cmp
shll
jge
or
subl
xchg
in
fcoml
inc
clc
cmpsl
test
xchg
xchg
aas
jmp
aam
loop
jnp
adc
adc
outsb
sbb
jne
push
lret
bound
test
sbb
cs
mov
fcomip
adcb
loop
lea
loope
xchg
in
mov
mov
ds
push
scas
scas
mov
cmpsl
movb
hlt
in
dec
movsb
scas
cs
jge
and
fcomps
int3
adc
mov
jo
lds
out
jb
in
mov
sub
jle
ret
cmp
cltd
xchg
test
insl
xchg
xchg
jge
lods
loop
adc
popa
xchg
or
jecxz
loop
aad
lds
sbb
push
sarl
outsl
mov
mov
in
sahf
fst
add
cmp
loopne
enter
test
insl
lret
in
stc
or
and
xchg
mov
call
sub
stos
out
mov
mov
stc
fcoms
insl
ficomps
xchg
pop
fiaddl
ja
out
push
stc
test
je
jo
mov
mov
adc
push
xchg
or
shll
push
data16
inc
lods
jge
cs
and
inc
loope
mov
lret
jne
test
lahf
scas
test
icebp
idivl
cmp
nop
and
inc
pop
dec
in
nop
pushf
push
cmp
xor
add
xlat
inc
arpl
jo
pop
addr16
sbb
test
repnz
adcl
rorb
xchg
shll
loop
xchg
jae
out
add
mov
shrb
pop
adc
jmp
push
aam
stos
pusha
mov
pop
sbb
popa
jg
xchg
push
aaa
push
push
dec
xchg
jns
test
test
adc
jg
std
dec
lret
jge
insb
insb
or
out
bound
or
shlb
mov
test
out
cld
out
add
ja
nop
out
fimuls
pushf
mov
es
shlb
inc
les
or
aam
sub
das
imul
ficoms
repz
cmpsl
mov
je
jp
mov
lods
outsb
je
inc
leave
gs
lahf
cltd
ds
gs
sahf
in
mov
mov
out
mov
cli
sub
push
xor
cmpsb
inc
add
sti
pop
std
shll
inc
es
sahf
mov
in
add
aad
hlt
ja
xor
jmp
inc
pushf
data16
xor
insb
or
mov
lret
mov
mov
cmp
and
inc
dec
push
push
fcmovnu
addr16
xchg
jnp
push
ret
cmp
xor
andb
pusha
jp
ret
adc
lcall
push
xchg
arpl
adc
sbb
xchg
xchg
out
clc
add
hlt
shll
faddl
ret
insl
or
inc
fildl
cwtl
dec
mov
mov
js
fistps
pop
sub
scas
in
pop
cltd
jmp
int3
sbb
incl
xor
inc
mov
pop
pop
push
into
mov
ds
ret
push
mov
hlt
movsl
jb
mov
inc
pop
sarb
xlat
imul
out
cmp
adc
mov
imull
test
inc
xchg
mov
push
xor
sub
pop
cli
out
add
aaa
popa
hlt
jp
iret
sbb
sub
cmp
call
push
fdivrl
dec
pop
jmp
ret
or
lcall
ds
icebp
push
aad
lea
xor
mov
sub
imul
in
adc
mov
cmpsl
fcomi
inc
lar
int
mov
test
and
in
mov
pop
push
jge
mov
mov
jne
fdivs
mov
ljmp
push
add
add
mov
clc
jecxz
iret
test
outsb
cmp
orb
pop
adc
sarb
in
imul
sahf
sub
sub
mov
and
xchg
bound
push
dec
xor
fs
jbe
adcl
pusha
bound
push
cmp
or
test
push
and
sub
aam
scas
std
imul
push
fisttps
inc
push
jnp
mov
pop
push
jle
jno
and
insl
mov
lods
fmul
mov
cmp
cmpsl
rcrb
and
in
mov
and
shl
lock
push
push
push
out
cmpsl
call
test
outsl
clc
sbb
inc
pop
pop
sbb
or
out
loop,pn
pop
mov
mov
rcrb
repz
or
mov
dec
jmp
push
lea
je
fimuls
fnstcw
lock
sub
dec
popf
lods
fwait
dec
inc
adc
xor
or
inc
add
inc
and
add
insl
add
mov
push
xor
add
and
lcall
sti
pop
rcrl
jp
xor
sbb
test
dec
mov
xchg
mov
xchg
jnp
sbb
cmp
xlat
rcrl
push
pop
dec
inc
push
mov
inc
enter
out
pop
sub
loop
stos
inc
cmp
pop
lcall
mov
sbbb
jecxz
sahf
cs
pushf
fisubrl
pop
adc
inc
call
inc
xchg
push
in
mov
rcr
sub
daa
inc
pop
cltd
jmp
pop
into
xor
mov
add
add
mov
ja
pop
adc
adc
jbe
cmp
cmpsl
aam
mov
bound
sub
jg
sbb
dec
push
in
add
mov
icebp
sub
cmp
leave
scas
jge
mov
fs
decb
mov
mov
rclb
jne
dec
inc
push
or
sarb
add
faddl
scas
icebp
clc
fiadds
inc
jnp
or
cld
ja
jno
popf
movsl
sbb
bound
xchg
lods
ficoml
int3
mov
mov
imul
loop
shll
cmpsl
sub
mov
addr16
aas
xchg
push
repz
cmp
popa
mov
sbb
ja
mov
or
jge
push
push
jo
sub
mov
js
and
add
fistps
xchg
push
cmp
sbb
lcall
mov
jne
pop
in
data16
in
or
in
mov
push
fwait
ret
pop
fldenv
adc
pusha
add
roll
je
bound
inc
outsl
adc
inc
out
and
sbb
cmp
popf
mov
iret
add
cmp
testl
dec
aas
imul
pop
iret
and
xchg
rcrl
sub
out
lea
nop
push
in
cmp
sbb
movsb
adc
inc
adc
idivl
andl
mov
lods
sbb
out
cmp
sbb
sbb
sarl
mov
and
pop
popf
pop
testb
add
sub
outsl
or
aam
scas
adc
subl
stos
pop
pop
or
sahf
repnz
repnz
sahf
push
enter
out
push
lcall
sub
lods
xor
sub
fiaddl
insl
into
lahf
fcmovnbe
pop
cmp
les
push
shrl
add
sub
stos
adc
clc
cs
popf
xchg
jmp
or
jns
insl
sti
stc
xchg
mov
mov
xchg
ljmp
jmp
rorb
mov
lcall
cmp
inc
xor
loopne
sbb
clc
lcall
inc
xlat
inc
cmc
jns
adcb
xchg
push
mov
fbstp
or
or
out
in
or
push
ret
push
aam
mov
pop
adc
mov
mov
and
sub
add
in
push
adc
movsl
adc
test
mov
dec
test
dec
dec
lock
cmc
addr16
sbb
mov
loopne
sarb
bound
jae
aad
and
out
insl
das
fs
fstl
dec
mov
mov
push
dec
popa
loope
rcpps
fistl
add
xchg
into
cli
pusha
je
shlb
sbb
sbb
in
cs
push
pop
call
xchg
mov
and
mov
jae
cld
out
repnz
cmp
add
xor
int3
jmp
sbb
xchg
stc
loope
adc
pop
das
fcoml
int3
xchg
sbb
xlat
scas
hlt
out
in
aaa
sbb
ds
outsb
mov
ret
mov
dec
int3
loope
lret
mov
nop
add
insl
mov
lea
and
fisubs
mov
mov
pop
popa
pop
shll
jg
insl
push
or
dec
sub
in
cmp
lds
pusha
inc
cmpsb
dec
cld
pop
sbb
imul
mov
movsb
cmp
push
ss
les
pop
push
sahf
cmp
adc
addb
out
cmp
xchg
dec
pop
pusha
fcmovbe
sub
jnp
xchg
int3
ja
mov
jg
and
mov
mov
aas
or
pop
cmpsb
push
les
lods
pop
or
popa
push
push
insb
lret
in
pushf
out
jns
mov
xchg
or
out
pop
fsubs
cmp
call
insl
enter
lods
sub
aas
jae
int3
icebp
inc
ret
sbbb
pop
imul
sbb
mov
cltd
ret
das
xor
jp
fwait
daa
jns
push
fsubs
jnp
loop
ret
test
out
cmp
cmpsb
enter
cmc
or
xor
sub
add
jmp
lret
cmp
push
inc
mov
nop
lahf
andl
aas
fisubl
jne
push
pop
xchg
xchg
aam
aaa
pop
sub
inc
xor
push
cmp
jle
nop
mov
ja
xchg
and
cmpsb
fistpll
cs
loop,pt
push
fsubs
adc
pop
sbb
jge
pop
pusha
xchg
movsl
leave
add
inc
movsl
push
inc
xchg
adc
mov
fdivl
mov
faddl
pusha
mov
mov
adc
mov
mov
xor
cli
xchg
gs
push
fcomi
xor
mov
jl
js
cltd
or
subb
push
xchg
cs
mov
sub
xchg
adc
data16
lock
pop
mov
push
enter
ret
out
mov
stos
pushf
add
xchg
mov
push
push
sbb
call
lds
inc
imul
push
imul
sarl
adc
mov
lret
mov
mov
sub
dec
mov
or
popa
stos
push
push
cmp
call
and
fdiv
outsl
stos
sbb
push
cltd
pop
int3
js
mov
mov
cmpsl
cmp
jne
jnp
test
lcall
sbb
es
inc
pop
fbld
int
jbe
mov
fs
pop
push
mov
cmp
xchg
adc
add
sahf
push
in
dec
jmp
mov
popa
or
xchg
das
sbb
xchg
mov
enter
pop
out
jg
out
and
mov
scas
sub
pop
xchg
dec
adcb
add
or
xchg
hlt
jge
andb
pop
in
push
dec
sub
mov
nop
mov
inc
out
and
testb
das
xchg
in
jo
dec
leave
shlb
sbb
mov
push
lcall
cmp
xchg
mov
pop
orb
mov
daa
lahf
jo
imul
xchg
push
inc
loope
pushf
cmp
mov
dec
push
pop
mull
iret
int
mov
fnsave
das
test
sbb
sbb
cld
jg
or
or
out
sub
jmp
inc
sti
fsts
cmp
jmp
cmc
clc
pop
test
ja
je
arpl
xlat
lret
cmpsb
pusha
jae
sbb
pop
sbb
insl
test
xchg
xor
rorb
jo
mov
and
xor
xchg
mov
loop
sbbb
jo
call
adc
or
cmpb
jecxz
sub
sub
xchg
mov
insb
push
imul
jbe
rcll
mov
jbe
out
jno
outsl
xchg
sbb
mov
cmp
enter
push
add
lods
je
mov
nop
adc
pop
jmp
sahf
or
and
mov
stos
ljmp
hlt
in
sti
pop
in
sti
pop
sub
inc
loope
cs
into
rcrl
mulb
cmpsl
test
loopne
notl
and
inc
jb
rorl
mov
jbe
addb
adcb
pop
ret
cmp
pop
adc
popf
mov
test
adc
push
dec
stos
cmpsb
cltd
dec
jae
push
mov
push
popf
jo
js
mov
inc
dec
jns,pn
and
adc
insb
repz
hlt
sub
jno
pop
push
sub
xchg
jg
pop
inc
sub
or
clc
test
imul
cmp
or
mov
shll
ret
jmp
insl
mov
pop
sbb
cmovbe
pop
popf
lds
inc
out
pop
stos
jle
leave
push
push
add
inc
xor
out
leave
xchg
mov
lea
cmp
inc
xchg
rcrb
dec
movsb
filds
popf
jp
and
cltd
xorb
add
aaa
xchg
jl
inc
jb
pop
xchg
repnz
shl
lret
xor
cmp
cli
cmp
sbb
mov
lahf
add
jmp
jmp
loopne
add
and
ret
cs
cmp
xor
sarb
inc
mov
mov
into
btc
mov
jns
inc
cld
arpl
xchg
lret
mov
lock
std
cwtl
lds
push
mov
aam
or
add
cld
mov
test
pop
pusha
sti
aad
add
sbb
aam
cmp
push
lahf
in
loope
xorb
mov
fdivrs
adc
and
mov
in
xor
add
xchg
enter
call
jns
push
mov
inc
cli
inc
push
sub
adc
xor
mov
mov
xchg
cmp
enter
insb
and
sub
push
insl
andb
mov
inc
ret
xor
jg
pop
xchg
fnstcw
lret
jbe
sub
test
add
fisubl
push
push
fiaddl
cmpsb
inc
and
dec
mov
sub
in
add
mov
popa
pop
inc
addb
push
leave
mov
add
adc
aas
ja
cmp
pushf
ss
nop
push
movsl
and
and
or
inc
xchg
mov
and
add
bound
pop
mov
inc
sti
pop
fiaddl
aaa
xor
scas
out
rcrb
or
fnstenv
mov
into
cmp
test
adc
cmp
sub
shlb
xor
inc
inc
mov
xorb
lahf
fisubl
into
sbb
mov
in
bound
shl
mov
mov
jnp
pop
inc
ds
out
and
outsl
aam
jae
inc
pusha
push
test
cmp
lods
nop
cltd
ja
scas
mov
mov
loope
inc
push
mov
cmpsb
cs
pop
xchg
data16
scas
mov
daa
pop
jmp
je
xchg
stos
push
sub
data16
test
int
enter
jge
std
lret
or
dec
mov
js
dec
mov
dec
icebp
divl
xor
stc
cmp
fldcw
es
hlt
das
xor
imul
jne
or
inc
imul
repz
xlat
test
jae
fst
daa
aaa
mov
jo
je
cwtl
mov
xor
mov
xchg
inc
dec
dec
dec
pop
in
mov
outsb
mov
adc
jl
fsub
adc
mov
dec
push
sbb
insl
inc
push
sub
push
jmp
push
inc
cmc
icebp
xor
nop
xchg
jge
xchg
out
out
shl
ss
fcmovne
mov
jo
jp
mov
push
cli
adc
and
mov
push
push
scas
dec
shll
xor
mov
stos
imul
sub
in
out
outsb
jmp
dec
inc
dec
cmp
lcall
or
lds
pop
xchg
or
xor
xchg
ja
xor
mov
cmp
jmp
push
push
sbbl
jne
leave
rorb
test
lea
nop
sub
cld
cltd
xor
ret
notb
adc
and
inc
push
andb
in
adc
test
push
cmp
pop
push
lods
xchg
push
std
push
xorl
xchg
and
and
inc
and
sub
sbb
dec
loope
sub
scas
sbb
jle
push
xchg
add
push
mov
in
out
xchg
add
sub
repz
das
xor
fst
les
sti
pop
mov
mov
js
pop
fs
mov
mov
lret
mov
aad
mov
pushf
or
fwait
movsl
testl
mov
cmp
mov
fucomp
push
ds
cmp
int3
pusha
xor
mov
xchg
jp
test
rol
fstpt
lahf
aaa
inc
mov
movsb
xor
push
jge
fistpl
push
jl
add
or
or
insl
loop
cmp
sbb
mov
push
adc
decl
push
add
push
sbb
inc
xchg
mov
xchg
loop
iret
subb
or
mov
stc
push
push
mov
mov
push
cmpsb
sub
mov
jecxz
and
aad
add
sub
ljmp
insl
cmp
shrb
mov
pop
maskmovq
testl
negb
mov
sub
outsb
aas
loopne
pop
jle
add
out
insl
xlat
out
and
adcb
sar
inc
stc
ja
aaa
dec
add
push
not
scas
xor
scas
out
push
das
mov
clc
out
loope
sahf
push
stos
xor
loop
icebp
sub
push
imul
cld
inc
sbbb
add
shll
pop
sbb
movsb
fcmovne
or
adc
data16
pop
sbb
scas
data16
jb
rcrl
sbb
leave
adc
inc
pusha
out
aam
xor
rorb
popa
repz
jmp
xchg
or
out
add
push
in
push
mov
cmp
js
jmp
repz
mov
js
sub
xchg
rorb
loope
dec
sarl
cltd
mov
push
xchg
repz
sti
stc
cmp
aaa
mov
cmp
sbb
test
aad
imul
das
jae
and
and
test
fldcw
into
cmpsb
jb
insl
in
xor
cwtl
lcall
scas
adc
mov
shll
mov
inc
aaa
popf
das
inc
rcll
mov
mov
push
jp
adc
push
clc
in
les
push
lods
inc
imul
mov
repz
cwtl
jg
mov
xor
xchg
fst
fisubrs
scas
insl
mov
push
sahf
adc
jno
fcomi
xor
lahf
filds
xchg
shl
push
xchg
mov
outsl
add
lods
test
int
xchg
or
mov
hlt
inc
dec
push
mov
add
adc
and
test
gs
sub
sub
jl
jmp
sbb
dec
jl
inc
addl
test
mov
stos
ljmp
int
aad
sbb
mov
movl
mov
inc
rcll
mov
cmp
out
push
clc
pop
ret
sub
mov
mov
xor
sbb
loopne
insb
jb
and
mov
push
jns
xor
in
inc
aad
xor
dec
pop
and
jno
jmp
lods
or
insl
add
leave
pop
pop
mov
mov
or
inc
pop
into
adc
fcmovbe
cld
scas
and
jns
aad
cmc
jg
push
pop
je
push
pop
int3
push
dec
popa
stos
mov
sbb
mov
repz
xchg
jns
lahf
lods
and
sub
dec
fdivrs
xor
and
pop
pop
ret
adc
mov
push
fidivrl
pop
jl
push
insl
je
cmp
repnz
nop
lods
inc
dec
add
jl
insb
mov
loop
rcl
subl
sbb
xor
sahf
jmp
pop
ljmp
push
flds
enter
xor
jle
fnsave
in
pop
pop
adc
and
sbb
cltd
jmp
push
inc
fimull
jb
xchg
call
adc
ja
aas
xchg
push
cli
ss
outsl
ljmp
cwtl
fldenv
add
mov
inc
mov
in
inc
mov
fs
inc
imul
popf
cmp
cs
insb
imul
and
mov
pop
mov
test
je
aaa
bound
movzbl
cmp
add
push
xor
imul
inc
or
test
cwtl
lods
fnstsw
shl
adc
and
gs
inc
pushf
popf
rorb
inc
add
or
xor
mov
cmpsb
out
fildll
ds
jb
ret
fdivrs
xchg
pop
mov
jo
out
adc
sub
xor
fsubl
lds
out
sbb
stos
mov
jne
nop
idivl
in
xchg
js
mov
mov
lret
mov
aad
xchg
jo
daa
cmpsb
fcmovu
mov
xchg
outsl
das
scas
inc
jne
sub
adc
adc
adc
lret
push
outsl
in
stos
mov
in
adc
rclb
adc
add
sub
scas
cld
daa
jle,pt
cltd
jmp
shlb
or
rclb
dec
xchg
mov
sub
leave
clc
bound
jno
sub
and
lods
mov
cmpsb
sub
sbb
sub
pop
xlat
leave
lea
cmp
push
outsb
xchg
leave
pushw
in
push
dec
mov
lock
bound
sub
push
or
mov
mov
pop
gs
loope
shll
mov
cmovno
nop
cmp
or
jle
xlat
dec
sub
xchg
pop
push
adc
and
xor
nop
ret
mov
add
pop
mov
fldl
mov
pop
daa
xchg
pushf
aad
ja
push
in
pop
pop
enter
adc
jmp
xchg
pusha
add
push
imul
rcll
mov
mov
or
push
cs
mov
jo
dec
cli
add
mov
push
push
lcall
data16
sbb
cmp
aas
adc
pop
xor
cmp
push
xor
push
jnp
in
mov
das
js
mov
jl
cmp
clc
movsb
mov
push
sbb
add
add
dec
lock
jns
fcompl
setno
xor
xor
add
cmpsl
clc
fwait
mov
leave
inc
int
pop
cld
sbbb
cmp
and
adc
nop
adc
aas
xchg
pop
pop
shll
sub
cmp
xchg
push
adc
push
inc
push
inc
jbe
or
pushf
dec
rorl
gs
in
movsl
mov
cmpsb
pop
pop
sub
push
add
fistpl
cwtl
sub
and
stos
test
pop
inc
clc
adc
jne
xor
push
testb
xchg
jp
loop
xchg
xchg
pop
xchg
repz
or
add
dec
jmp
push
icebp
mov
push
jmp
enter
xor
inc
pop
push
aaa
iret
sti
arpl
inc
sbb
jl
dec
xor
mov
xchg
pop
push
push
sub
adc
icebp
out
xchg
loop
ljmp
lahf
pop
js
pusha
mov
push
push
dec
loope
ss
add
rolb
int3
sub
push
xor
fidivrl
jecxz
and
or
dec
lret
xor
insl
jecxz
andb
and
push
pop
sbb
push
out
pop
inc
pop
and
fcmovbe
arpl
negb
xor
push
mov
stc
mov
xchg
add
fdivl
rorb
rcrb
dec
dec
xchg
int
fs
pop
push
mov
sbb
stc
or
dec
pop
dec
ficomps
rol
jno
mull
or
mov
mov
stos
inc
and
fcomp
xor
dec
sbb
pusha
outsb
test
dec
mov
shl
loopne
and
jb
sbb
cltd
call
lock
xchg
arpl
and
imul
adc
nop
out
aad
mov
mov
das
mov
pop
nop
pusha
movsb
ljmp
int
hlt
add
stc
adc
dec
je
jnp
ret
add
pop
xor
xchg
sbb
pop
ja
das
je
lock
adc
lods
mov
das
and
xchg
ret
dec
popf
add
and
sbb
les
iret
push
negb
lret
and
push
in
push
lock
mov
test
es
fmul
mov
mov
pop
xchg
cmc
jmp
mov
dec
test
sbb
fimull
fiadds
aaa
sbbl
ret
cs
in
imulb
pop
sbb
cli
push
xchg
sti
loop
outsb
mov
pusha
ficomps
xlat
jo
lcall
rorb
mov
adc
test
dec
mov
test
stc
cmp
xorl
fs
test
gs
jp
pop
ret
stos
jl
ficoms
or
mov
adc
dec
enter
insb
adc
jae
mov
dec
lret
sub
sahf
lret
add
add
movsb
cld
pop
add
mov
mov
and
sbb
mov
fbstp
push
loop
sbb
adc
cmp
jmp
jne
xor
and
pop
mov
lods
mov
xor
dec
mov
adc
jl
mov
cli
xor
shll
push
out
xor
add
pop
popf
jmp
aad
scas
and
mov
gs
xor
rolb
sbb
ss
and
xor
sub
cld
cs
int3
sti
cmp
xor
and
pushf
inc
add
rcll
mov
call
add
repnz
xor
jne
cmp
mov
xchg
add
divl
xchg
mov
push
sbb
add
js
cmp
cltd
xchg
sbb
dec
popf
xor
xchg
and
pop
mov
sub
icebp
rcrb
movsb
or
imul
or
sub
xor
enter
xor
and
pop
mov
sub
pop
push
test
inc
les
outsl
dec
jo
out
ljmp
sub
int
movsl
ret
fnstcw
mov
into
aas
pop
xor
jmp
cmp
push
mov
mov
cmp
test
lock
dec
sti
pop
popa
jg
pop
mov
mov
lcall
xchg
push
jo
aam
mov
inc
mov
push
adc
loopne
push
popa
push
nop
xchg
xor
or
or
lock
cli
sub
inc
xor
popf
sarl
mov
jmp
xor
addr16
stos
pop
dec
push
pop
push
cli
mov
pop
cmp
dec
cltd
stc
imul
sbb
push
mov
sub
mov
push
pusha
pop
xchg
popf
mov
xchg
pop
loop
and
int3
xchg
mov
or
jl
add
cld
xchg
lea
lds
add
jo
mov
add
xchg
out
dec
nop
fs
stos
mov
xor
mov
test
ret
ret
in
mov
push
loope
pop
push
aam
sahf
les
int
push
jle
addl
roll
xchg
push
push
call
mov
aam
std
fdivrs
repnz
stos
jo
mov
lcall
imul
cld
popf
roll
sbb
outsb
sti
push
push
fs
or
psrld
or
mov
adc
loop
aaa
or
insb
pop
fisttpll
std
mov
fstpl
out
lods
mov
lods
adc
sub
outsb
ds
repz
ret
fistps
xchg
push
cmc
movsb
xor
jp
cmp
in
jns
leave
sbb
notb
and
dec
push
mov
sbb
out
fcmovb
push
mov
and
nop
or
mov
pop
imul
loopne
cwtl
mov
ret
jl
xchg
dec
push
cmp
and
pusha
mov
out
and
cs
das
jae
dec
jbe
bound
adc
es
and
jl
in
xlat
cmp
nop
xchg
lods
sub
push
aam
icebp
cmp
xrelease
pop
dec
fistl
es
add
fs
test
mov
sahf
inc
mov
lret
adc
scas
xchg
ret
outsb
push
push
mov
xorb
adc
outsb
pop
jmp
sub
or
in
sbb
hlt
stc
out
lods
jbe
shl
xchg
pop
xorb
rol
sbb
jno
fprem
pusha
mov
and
dec
pop
int3
insl
lahf
sbb
cmp
sub
pop
pop
sbb
pop
add
fiaddl
imul
adc
sub
inc
fwait
mov
test
jne
nop
repz
popa
and
cmp
divl
mov
out
dec
mov
loopne
nop
dec
cmp
scas
xchg
aam
nop
push
scas
add
int3
daa
pop
adcl
sub
sbb
in
and
adcb
adc
pop
ret
sbb
insl
jne
pushf
mov
aad
pusha
sarl
mov
mov
push
lcall
ret
inc
mov
mov
xlat
mov
je
sub
loopne
sub
add
rcll
mov
fldenv
fbstp
or
jnp
xchg
mov
in
rcrl
lods
adc
shll
mov
cmc
shlb
in
and
pop
mov
xchg
int
in
or
shlb
call
adc
push
mov
cmpsb
ss
cs
mov
in
xor
jp
jecxz
lds
sub
mov
lds
hlt
test
pop
dec
and
adc
lods
addb
int
lret
mov
push
rcrb
lods
jmp
mov
mov
mov
ljmp
sbb
or
mov
jno
jo
insl
cmp
fiadds
or
mov
or
cmpsl
je
pop
inc
mov
inc
into
dec
in
jg
nop
sbb
out
push
mov
mov
push
mov
dec
xor
enter
ja
inc
shll
rolb
mov
lea
insl
incl
xor
pop
fisubrl
lcall
inc
ljmp
fisttps
dec
push
add
mov
orl
in
pop
cmc
push
or
icebp
les
sbb
mov
imul
aas
push
mov
mov
fidivs
adc
pop
mov
es
fstpl
into
push
push
jne
push
cmp
or
mov
enter
out
jle
push
aam
pop
sbb
add
push
cmp
jns
sub
mov
outsl
mov
push
pop
aas
dec
into
inc
adc
leave
mov
mov
ret
pop
insb
int3
pop
addl
mov
shr
push
cmp
add
repnz
insl
add
mul
mov
push
lods
dec
and
test
mov
call
test
dec
sarb
cmp
je
lods
sbb
fdivrl
add
dec
sbbl
adc
data16
cmp
enter
fwait
jbe
out
adc
cmp
xchg
flds
xchg
pusha
xor
mov
imul
cwtl
xchg
pop
addr16
dec
rcrl
icebp
xchg
xchg
inc
icebp
jl
mov
outsl
pushf
es
iret
out
outsl
lcall
add
xor
adc
dec
xor
sbb
fldcw
lcall
movsl
sub
mov
mov
add
loope
pop
fidivs
daa
test
xor
jbe
mov
cwtl
out
test
ret
out
ret
jecxz
fsubl
dec
lods
sub
add
sti
stos
push
fistl
and
dec
push
lret
enter
scas
lds
push
sub
inc
push
fs
ljmp
jae
fs
cmp
ret
sbb
dec
mov
cmp
or
mov
clc
or
xchg
scas
add
add
cmp
movb
mov
xchg
mov
add
sub
xlat
pop
xorl
dec
and
jge
andl
xor
push
mov
ffree
in
sbb
mov
loope
in
push
out
jmp
inc
or
push
dec
in
jecxz
push
mov
je
scas
add
imull
rclb
push
in
das
and
js
inc
mov
pop
adc
out
inc
cmp
je
aam
xor
mov
and
movsb
scas
data16
lret
push
adc
lock
sti
pop
movsb
arpl
push
out
cmc
in
es
mov
sbb
pop
ljmp
add
inc
and
jo
or
inc
mov
rcrl
out
mov
adc
les
aad
adc
test
popa
adc
xor
xchg
pop
jmp
mulw
lcall
mov
outsl
xor
xorb
clc
mov
jno
out
cmpsb
adc
repnz
dec
pop
jg
jb
dec
pop
adc
xor
adc
fscale
cmc
ret
stos
mov
sbb
test
push
pop
mov
add
add
call
mov
and
loopne
push
inc
jae
insl
pop
ret
sub
mov
loope
pushf
lret
clc
mov
pop
and
ljmp
insb
test
jg
je
sbbb
dec
scas
jae
xlat
test
inc
xchg
popa
add
gs
jnp
clc
xchg
push
and
pop
out
or
xchg
mul
nop
jmp
add
sbb
and
pop
loope
out
cmp
outsl
je
pop
sahf
dec
lcall
xor
sbbl
dec
fdivrl
cmp
leave
imul
in
out
dec
push
test
ficoms
pop
cs
mov
ror
jl
out
push
cmp
push
push
mov
mov
and
xor
movsl
fwait
pusha
xchg
pushf
jecxz
out
in
dec
lea
outsl
in
cmpsl
movsl
xchg
stc
lods
jg
inc
sbb
push
cli
mov
inc
push
sahf
xchg
add
add
push
jl
aad
jbe
in
lret
add
add
pusha
mov
imul
lret
mov
lret
mov
cmp
mov
dec
inc
mov
cld
andl
movsb
cs
std
lret
orb
sub
out
xchg
sbb
arpl
fstpl
adc
jb
xchg
inc
mov
das
stos
movsl
aas
shrb
mov
data16
das
jp
pop
int3
push
sti
imul
stc
sbb
in
iret
repz
xlat
in
push
jno
pop
shll
je
imull
ret
cmpsl
mov
cmp
sbb
in
jl
sbb
jmp
shlb
jno
add
adc
data16
cmpsl
gs
js
add
mov
ljmp
jg
or
cld
jo
lods
sahf
push
cmp
fcoml
add
jns
dec
and
xor
push
lods
test
cmp
mov
clc
addb
adc
mov
scas
nop
pop
lahf
and
jne
aas
xor
xor
sub
cwtl
ret
jl
dec
adcl
outsl
pop
adc
cmp
jp
dec
mov
out
popf
mov
dec
jbe
jns
imul
test
dec
mov
int
fsubs
je
ficoml
xchg
sub
into
roll
cli
mov
test
mov
lods
popa
inc
adc
add
dec
ret
imul
in
dec
in
adc
test
nop
sbb
jb
or
dec
inc
push
mov
sub
notl
das
jb,pt
push
push
jbe
inc
sub
das
mov
xchg
push
push
imul
lock
mov
xchg
mov
das
adc
sar
fdivrs
mov
cmpsb
cld
xor
mov
dec
xor
jp
pop
or
xchg
push
jecxz
leave
fs
push
rcll
dec
pop
clc
cmp
cmp
mov
inc
sub
mov
mov
jnp
das
push
loop
test
loope
icebp
xchg
pushf
stos
push
inc
shll
dec
jne
pusha
cmpsl
and
adc
jp
aas
rclb
inc
jnp
lea
imul
mov
sti
adc
pop
mov
push
mov
ret
out
rorl
and
ja
stos
insb
aam
jecxz
mov
in
sbb
cltd
jmp
sub
in
jb
add
pop
shlb
xchg
faddl
dec
lahf
in
jo
mov
test
mov
inc
lea
out
and
js
lods
and
sarb
adc
inc
xor
xor
repnz
lock
scas
insb
xor
aas
and
xchg
andl
xor
sub
mov
and
mov
dec
in
aam
mov
cmpsb
mov
pop
add
pop
jbe
rcrl
mov
xor
cmpb
adc
shrl
or
bound
mov
stos
and
mov
movsl
cmp
ss
jecxz
aad
mov
sub
out
mov
nop
insb
mov
sbb
inc
pop
lods
int3
pushf
push
bound
or
lret
adc
ljmp
and
psadbw
or
addr16
mov
loope
jne
or
ja
movl
ja
mov
mov
out
and
dec
push
add
inc
push
jo
pusha
push
scas
outsb
and
jno
fists
rcrl
dec
mov
test
icebp
imul
in
bnd
dec
icebp
test
aas
jge
or
pop
xor
shr
rolb
xchg
into
out
ss
fwait
push
cmp
in
lcall
clc
ljmp
aaa
int
repz
fadd
jle
or
call
cs
or
push
push
sub
jmp
pop
jo
sbb
or
pop
mov
mull
and
or
aam
fstpt
cmp
dec
cmp
mulb
mov
ljmp
mov
pop
pop
das
jg
adc
pop
mov
cmp
add
push
pop
enter
outsl
stc
jg
paddsb
out
sbb
repz
push
add
js
mov
imul
xorb
pop
jecxz
xor
push
mov
fcoms
jl
mov
adc
imul
or
or
pop
push
ret
cld
lds
nop
shlb
mov
test
cmp
in
mov
test
xor
cmpsl
pop
outsl
xor
jg
sub
psraw
mov
cmpsb
and
insl
jmp
fbstp
shll
mov
mov
jmp
lea
xor
fwait
push
lds
dec
cli
sub
xor
adc
sbbb
js
insl
aam
cs
ret
test
xorl
ficompl
xchg
add
stos
stos
lcall
data16
mov
sbb
adc
movsl
lock
or
cmpsb
shr
into
xchg
mov
xor
jge
in
or
dec
in
addl
sbb
inc
mov
pop
inc
lds
adc
inc
cs
shl
lcall
repz
and
and
xor
jecxz
fadds
xchg
out
ljmp
mov
das
in
enter
rolb
or
sbb
insb
mov
aam
sub
mov
push
mov
lods
adc
xchg
out
xor
inc
mov
xor
hlt
jne
les
or
lock
push
lods
movsb
pop
inc
xchg
imul
xor
xor
jp
scas
das
negl
cmp
clc
fwait
and
daa
pop
lcall
push
out
dec
scas
cmc
mov
ljmp
decb
push
and
lods
imul
and
mov
stos
shll
outsb
or
xor
xchg
pop
mov
cmp
ficomps
or
loope
mov
jb
mov
add
std
xor
mov
outsl
pop
or
jmp
roll
in
sub
adc
push
movntq
out
and
sub
mov
fcomps
repnz
inc
icebp
stos
movl
push
gs
lret
loop
inc
jle
cs
dec
mov
lods
inc
flds
xor
int
xor
add
dec
push
jbe
mov
adc
inc
lods
aas
or
push
int3
and
in
ljmp
lahf
push
cmovb
mov
sub
lods
push
lahf
sahf
mov
push
jecxz
clc
pop
xor
stc
leave
movsb
mov
sub
movsb
stos
push
mov
fs
ret
iret
out
mov
out
imul
std
pop
sub
or
jnp
daa
cmc
sub
idivl
or
sbb
hlt
mov
push
sbb
ret
push
test
int3
mov
iret
dec
lock
jae
jg
adc
arpl
pop
fnstcw
xor
pop
xchg
jmp
pop
mov
dec
inc
inc
mov
pop
sub
mov
loope
inc
mov
mov
cltd
adc
mov
into
mov
bound
out
test
mov
dec
xchg
sub
jno
mov
push
or
jae
sbbb
sbb
cmc
xchg
fsubl
dec
loopne
testb
mov
out
dec
or
rcrb
stc
movsl
pop
imul
mov
add
add
cmpsb
dec
mov
outsb
jmp
loopne
mov
mov
or
push
jo
scas
push
push
mov
sbb
dec
jbe
mov
icebp
push
dec
repnz
test
cmc
xchg
icebp
sub
fnstsw
xchg
push
sbb
adc
into
adc
shrb
ljmp
sub
mov
sbb
push
test
js
xchg
jl
dec
iret
jmp
mov
out
shrl
lea
pop
push
sbb
scas
inc
test
xor
pop
cli
es
dec
pop
pop
jbe
test
fs
or
out
popf
or
inc
xchg
icebp
fisubrs
dec
popf
cmp
inc
iret
andl
mov
dec
mov
jp
mov
xchg
push
add
add
inc
push
lods
push
xchg
or
xor
xchg
push
addr16
adc
mov
adc
je
pop
mov
lcall
dec
mov
mov
dec
jg
imul
cmp
les
mov
mov
mov
or
ret
adc
mov
cmp
inc
vrcpps
rorl
out
pop
mov
pop
dec
cmp
incb
fidivs
cmp
outsl
clc
add
dec
jbe
or
mov
fdivrl
add
std
inc
sbb
lea
mov
cmpb
inc
sub
lods
mov
mov
pop
adc
dec
dec
lock
out
movsl
pop
test
jo
cs
pop
jmp
aad
inc
mov
repnz
popa
sub
push
sbb
pop
lods
cmp
cld
inc
aaa
ljmp
pop
xchg
jnp
int
leave
and
push
shlb
out
popf
out
mov
jl
ficoml
adc
fldcw
in
pop
scas
xchg
lods
repnz
cmpsb
add
cmp
pop
jmp
fcompl
aad
push
sub
add
negl
shr
ficompl
sbb
sarl
shr
xchg
xchg
adc
cld
or
mov
mov
push
add
push
add
aad
js
jbe
pop
ja
dec
jne
mov
add
shrl
xor
jp
int3
cmc
lahf
frstor
aas
or
stos
daa
scas
jge
insb
cmc
inc
iret
std
aad
pushf
rcrb
fstpl
repnz
ret
popa
sbb
sbb
int
rolb
sahf
push
xchg
aam
call
jmp
cwtl
fdiv
push
and
movsb
fmull
jmp
mov
jno
adc
mov
aas
pop
loop
shl
sub
les
gs
mov
pop
gs
test
inc
add
pop
cmp
add
dec
jp
sub
dec
addr16
lret
stos
jne
fwait
sahf
sbbb
xor
stos
out
je
out
dec
fidivrs
ljmp
mov
jo
nop
sbb
ret
mov
cmp
je
icebp
lods
xor
jb
rclb
pushf
sbb
xor
out
adc
jns
out
sub
cmp
js
pop
std
dec
imul
xchg
push
xchg
cmpb
divb
fldenv
popf
mov
dec
mov
xchg
test
pop
rcrb
hlt
lcall
add
jle
jge
jns
lea
imul
stos
int3
xor
adc
roll
nop
scas
sbb
scas
lea
test
mov
or
out
addl
pop
mov
shl
int3
lods
jmp
stc
nop
add
dec
je
mov
into
dec
cmp
into
dec
xchg
leave
add
scas
ja
and
mov
mov
lods
lret
icebp
xchg
in
jnp
aas
insl
and
sub
test
lock
mov
and
pop
sbb
mov
inc
add
icebp
sub
push
in
xchg
inc
insl
mov
xchg
repnz
sbb
call
orb
sbb
ds
pop
scas
bound
xor
int3
mov
jge
add
xor
pushf
std
adc
repnz
push
and
xchg
or
sti
jnp
mov
lret
cwtl
cmpsb
xor
dec
jo
mov
dec
or
jbe
and
arpl
movsl
fsubrp
pop
jno
cmpl
adc
sub
lret
lahf
nop
or
sub
mov
sbb
mov
mov
sbbl
std
mov
pop
out
mov
pop
inc
inc
push
jmp
ret
xchg
ljmp
frstor
mov
pop
mov
cmp
fs
dec
jns
mov
iret
and
lds
dec
adc
fucomip
fsubs
loop
fists
pushf
int3
or
call
and
fnstenv
lds
repz
idivl
iret
dec
dec
rorl
cmp
xchg
je
xor
inc
je
sub
pop
xchg
mov
lret
xchg
ret
clc
sub
mov
nop
insb
jge
fnstenv
into
xchg
mov
gs
aaa
cmpsb
mov
lea
mov
mov
inc
adc
mov
xchg
loopne
mov
leave
xchg
ds
icebp
div
repnz
mull
add
jne
stos
data16
lahf
pop
fs
fstl
inc
dec
mov
scas
sbb
stc
jnp
xorl
arpl
pop
fs
xor
add
push
fistpl
sub
jo
xor
test
imul
in
pop
cld
push
icebp
adc
stos
test
mov
xchg
out
fisubs
arpl
fsubrl
std
lret
repnz
dec
jns
mov
inc
loope
jae
mov
lea
fisubrl
ds
into
xor
jne
test
andl
push
xor
in
push
fmull
sub
xor
dec
and
adc
mov
mov
aaa
aaa
int
add
xor
fisubl
loope
call
jp
das
mov
fisubrs
or
nop
jnp
pop
inc
enter
xor
je
xor
je
cmp
mov
movsb
sub
cmpsl
fucom
adc
sub
cmpsb
push
mov
cmp
jecxz
xchg
xor
ret
sti
push
daa
sub
fmul
inc
dec
mov
dec
and
mov
cmp
mov
loop
fisttpll
in
mov
xchg
lods
scas
mov
pop
dec
xchg
insl
or
dec
sub
sub
adc
xchg
push
div
dec
push
dec
push
and
and
cmc
nop
ljmp
jb
in
lock
push
leave
dec
int3
std
mov
sbb
pop
std
mov
and
jmp
sub
fidivs
dec
test
cltd
les
fdivr
lret
data16
dec
push
jae
sub
or
add
or
inc
xlat
pop
repnz
bound
lods
jae
mov
inc
add
in
orl
dec
mov
adc
xor
sub
clc
ds
adc
xchg
inc
sbb
cli
fwait
pop
fildll
imul
adc
or
mov
xchg
adc
scas
adc
push
inc
mov
ret
stc
pop
jae
in
pop
sahf
mov
incb
ja
and
xorb
mov
or
mov
hlt
mov
jo
aad
movsl
xchg
xchg
mov
dec
insb
xor
fidivrs
add
push
adc
pop
lds
iret
inc
in
mov
mov
mov
pop
popf
movsl
push
dec
sbb
pusha
add
ds
stos
mov
mov
xchg
dec
sbb
push
push
or
add
sub
push
mov
loope
shrl
sahf
mov
mov
int
insl
movsl
or
push
jo
pop
ljmp
sub
ret
pop
test
in
stos
lea
xor
mov
and
test
in
iret
dec
les
push
push
fwait
xor
aas
mov
cmp
shll
jno
mov
arpl
int3
add
add
mov
mov
xor
fldenv
lea
jmp
fdivl
add
push
or
sub
test
jb
dec
pop
push
add
sbb
movsl
pop
std
ljmp
gs
ss
loope
arpl
xor
mov
insb
loopne
test
push
mov
adc
mov
mov
jne
or
es
imul
pusha
dec
shlb
mov
xor
fimuls
cmpsb
sbb
cmp
fldenv
jg
cmp
cmp
mov
mov
or
shr
lcall
scas
push
out
pop
repnz
lret
or
push
outsb
adc
je
add
mov
hlt
mov
sahf
jmp
ficoms
stos
xchg
ja
jne
mov
lret
rcr
inc
ret
je
out
mov
xor
inc
cmp
mov
cmc
or
fwait
stos
pop
es
imul
fmull
roll
mov
add
jne
les
mov
stc
shl
mov
sub
imul
sbb
mov
int
repnz
fsts
es
or
lahf
cli
repnz
and
mov
fsubrl
adc
scas
loop
mov
lods
adc
jmp
rolb
and
imul
xchg
into
jbe
pop
sahf
dec
inc
insl
ror
fmuls
scas
popa
jg
pop
and
out
jle
dec
add
lcall
scas
aaa
dec
dec
mov
cmp
pushf
and
loope
jecxz
dec
mov
int3
xor
inc
dec
adc
lock
mov
aas
outsl
sub
mov
test
mov
aam
push
outsl
pop
push
dec
xchg
test
mov
xlat
std
mov
fcompl
out
popa
and
cwtl
cmp
mov
mov
mov
jg
mov
inc
repnz
out
in
or
add
push
and
jecxz
sbb
cmpsb
sbb
inc
sub
shrb
adc
pop
aaa
xor
sbb
adc
out
push
test
in
aas
das
pop
lods
loopne
out
inc
int
jns
mov
mov
pop
dec
sub
sbb
and
aas
rolb
jno
cmc
in
cmp
out
aas
or
ljmp
leave
in
dec
jbe
push
or
xchg
shr
and
jl
stc
or
pop
idiv
xchg
sub
addr16
dec
inc
icebp
scas
fs
xor
jne
sbb
in
fcmovb
lret
dec
inc
mov
dec
ret
jae
fs
dec
arpl
int
xchg
cmpsb
inc
mov
in
fldt
sub
cs
lods
divb
dec
mov
setbe
movb
addr16
pop
push
and
mov
dec
popl
fsub
out
mov
jle
or
pushf
cltd
je
pop
stos
inc
test
aam
jne
lret
nop
repnz
jns
fisttps
jg
jp
das
jno
movsb
push
mov
mov
mov
stc
lods
sub
mov
rclb
ds
inc
push
gs
sub
mov
out
push
xlat
mov
dec
xor
sub
lret
mov
insb
sub
scas
cld
inc
push
cmc
repz
insl
jmp
imul
outsl
inc
les
insb
outsb
push
nop
inc
fcompl
jmp
cli
push
mov
mov
fdivl
ret
out
jno
jo
call
daa
and
imul
ja
and
add
popf
sbb
pop
push
push
sbb
adc
rorb
test
into
scas
or
cli
xchg
ret
sbb
imul
push
xchg
shll
repnz
mov
pop
mul
inc
and
dec
sub
rcrl
pop
mov
aam
inc
push
orb
test
xor
insb
repnz
lret
dec
mov
lds
dec
out
enter
xor
adc
ret
mov
add
jo
or
mov
cmp
push
fisubrl
mov
and
add
rorl
inc
inc
inc
add
setle
nop
add
cmc
fldcw
pop
arpl
in
mov
std
pop
mov
cli
mov
inc
idivb
jl
inc
mov
roll
cmpsb
sar
push
addr16
mov
lret
jno
fidivs
pop
jnp
dec
ljmp
inc
jp
xchg
imul
in
ficoms
dec
in
pop
inc
loope
or
cmp
xor
ljmp
movsl
jo
cmp
lcall
or
stos
std
cli
lahf
cmpsb
push
inc
cmpsl
xchg
xchg
xor
loope
add
orl
lods
cmp
test
fstpt
push
sub
call
xchg
out
jae
adc
dec
xchg
lahf
test
aad
mov
and
fisttps
or
les
out
inc
dec
sar
push
and
sub
repnz
or
jns
xchg
aaa
or
mov
pop
jb
shrb
fisubs
test
std
cwtl
pop
push
repnz
sub
sub
jp
xchg
cmp
shlb
push
lcall
mov
inc
sbb
insl
dec
jnp
xor
adc
stos
jmp
push
je
sbb
fldenv
inc
movsl
in
dec
cs
xor
xor
arpl
inc
mov
enter
loope
cmc
mov
cmp
addr16
lret
sub
insb
xor
fnstenv
mov
sbb
sbb
mov
mov
inc
fs
ljmp
xor
sarl
xor
aam
xchg
cmc
jb
mov
and
push
and
inc
lock
ret
outsl
nop
push
add
sub
lret
jae
pop
mov
test
push
aaa
adc
aas
cmp
dec
mov
inc
dec
mov
clc
sarb
dec
lret
cmpsl
cmpsb
test
jge
inc
cmp
cwtl
inc
or
pop
lock
andl
pop
pop
add
sub
imul
notb
adc
call
loop
outsb
out
rcll
sub
xor
xor
es
push
mov
and
or
pop
mov
mov
popa
push
test
roll
test
dec
and
lahf
xchg
jns
ret
sbb
dec
push
mov
mov
outsb
jmp
mov
test
shrb
ss
xchg
and
dec
jne
add
addr16
cmp
test
push
into
sub
push
inc
ja
dec
fstps
sub
outsb
pop
mov
movsb
and
movsb
jbe
dec
push
fisubs
sar
pop
daa
mov
adc
and
jae
add
out
mov
stos
or
into
inc
add
mov
cwtl
mov
lods
jge
lcall
inc
mov
sbb
mov
roll
pop
loopne
nop
inc
or
and
mov
dec
jmp
dec
push
jge
xchg
aaa
idivb
push
fistl
daa
lahf
xchg
jne
push
psrld
test
pop
mov
and
pop
data16
int
dec
dec
push
cmc
adc
sbb
rcr
jne
je
stc
stos
add
testb
pop
fs
add
cmp
xchg
add
add
ret
pop
call
mov
sub
adc
jb
mov
mov
ror
xor
cmp
sub
xlat
sti
pop
roll
aaa
shrb
pop
outsb
jnp
hlt
pop
sub
mov
push
adc
jmp
bound
xorl
cmp
dec
fbstp
sub
aas
sbb
or
out
push
add
aas
cmpsb
divb
sbb
jbe
sbb
jbe
lds
and
and
rorb
es
xor
and
inc
packsswb
rorl
aam
and
lcall
jmp
push
dec
push
jmp
and
and
sbb
jmp
lds
inc
xchg
adcb
mov
jg
xchg
pop
push
cld
in
psrad
jns
mov
jl
and
xor
fs
sub
sub
and
repnz
and
test
test
loopne
jno
inc
dec
mov
call
xor
rorb
lods
lock
push
cs
adc
jle
xor
xchg
addb
dec
mov
inc
js
jecxz
bound
xor
fisubrs
pop
or
pop
pop
jbe
jae
ja
sbb
stc
rclb
into
inc
xor
dec
aaa
ffreep
add
jne,pn
movsb
push
call
xor
xor
dec
or
sti
mov
jnp
pmaddwd
pop
imul
jnp
sub
aas
adc
sti
stc
pop
scas
in
adc
inc
xchg
mov
repnz
negb
cmp
jns
adc
popf
rcll
mov
mov
and
dec
adc
stos
in
negl
rcrb
jb
ret
test
test
xchg
mov
or
dec
inc
notl
fneni(8087
rcll
aas
mov
sbbb
and
push
je
dec
jle
cmp
mov
fwait
cli
mov
xchg
das
loop
mov
gs
into
cmpl
dec
fldenv
mov
adc
lret
std
ret
arpl
dec
adc
jp
xchg
xor
xor
mov
arpl
pop
ljmp
mov
inc
add
fsubrs
xlat
movq
sbb
jno
pop
stc
cmp
outsb
pop
adc
into
les
aad
in
jae
das
imul
xlat
xor
jne
mov
insl
mov
jg
or
std
sbb
mov
cs
mov
repz
inc
lea
popa
mov
addb
sbb
iret
outsl
or
mov
jg
jg
rol
dec
les
in
xor
test
sub
scas
dec
xchg
aaa
in
out
pop
or
xchg
or
lock
inc
in
jne
xchg
push
xor
sbb
or
stc
daa
loopne
xor
rolb
loop
cmp
pop
push
push
in
xor
xchg
pushf
test
insl
inc
xor
jl
test
xor
xchg
mov
sbb
mov
cmp
pop
dec
push
pusha
mov
or
cmpsl
shlb
cmp
and
out
mov
loopne
mov
mov
aam
sbb
sbb
cli
adc
and
lcall
leave
pop
lret
lahf
jmp
push
mov
scas
sti
dec
inc
stos
mov
push
push
pop
ljmp
jle
shrb
xchg
ds
mov
lcall
dec
popf
call
pop
arpl
sahf
fisubs
push
mov
ficomps
jo
rcll
loope
xor
pushf
cmp
sarl
inc
scas
out
sub
loope
sahf
push
xorl
or
pop
jno
lea
out
ret
mov
cmp
aas
push
jne
enter
pop
add
loope
dec
inc
cmp
add
pusha
mov
aas
sbb
leave
sbb
fiadds
repnz
popf
ja
inc
cli
lcall
fisttpll
in
jb
test
fimull
cli
xlat
dec
sbb
repz
dec
adc
outsl
inc
or
sub
bnd
xor
pop
mov
mov
ds
jmp
int3
addr16
mov
stc
jbe
jmp
jae
fldcw
xor
pushf
insb
sahf
movsl
fsincos
or
rolb
xchg
outsb
xlat
xor
push
pop
call
jl
mov
mov
inc
or
dec
push
sbb
fsubrs
jmp
ficomps
mov
sbb
push
addr16
cli
mov
adcl
add
int3
lds
in
ja
imul
imul
mov
aam
xchg
xchg
sbb
nop
xchg
xor
in
push
inc
in
sbb
and
pop
sbb
iret
and
push
cmp
pop
adc
cmpsb
fbld
adc
pop
sub
mov
sub
cld
bound
cld
lcall
push
sti
aam
jae
dec
scas
clc
mov
sbb
xor
stos
adc
mov
mov
push
add
add
and
mov
enter
repnz
add
pop
das
and
mov
mov
jo
mov
les
popf
bound
fwait
mov
and
push
adc
push
cmc
call
and
mov
fcmovbe
dec
xchg
popf
mov
adc
sbb
jne
mov
xor
xor
ret
hlt
push
xchg
movsl
cs
xchg
cmp
or
shr
mov
lret
std
sbb
cltd
pop
movsb
xor
rorb
mov
loope
push
testl
call
sub
data16
and
adc
xchg
sub
mov
movsl
ret
cltd
or
xchg
loop
jmp
mov
adc
fbld
mov
lret
out
xor
push
jp
cmp
pop
iret
out
mov
cmp
pop
adc
or
nop
shl
cmp
movsl
xor
push
mov
sub
mov
push
dec
add
sbb
fsubrl
out
pop
fs
push
mov
jmp
imul
cwtl
xor
cs
bound
sbb
fwait
popf
dec
cltd
xor
mov
add
es
outsl
popl
mov
iret
rcll
mov
push
xchg
lock
jmp
dec
jb
scas
cmpsb
mov
testb
push
xor
push
les
mov
cmp
insb
ficomps
xor
jnp
test
mov
lea
jae
xchg
mov
lcall
sub
jge
mov
loope
sub
sbb
push
fwait
cmp
sbb
xor
cmpsl
xor
xchg
mov
stc
mov
imul
add
lahf
shlb
jb
das
jp
or
inc
je
sbb
lcall
pop
in
fists
inc
pop
mov
test
repz
pop
outsb
jb
rcrb
mov
adc
or
add
xor
mov
push
lahf
sbb
cltd
lahf
sbb
jmp
aas
outsl
adc
enter
aaa
movsb
sub
or
pop
push
pushf
dec
nop
cmp
mov
out
cli
adc
ds
ds
dec
mov
mov
cmp
imul
push
outsb
xor
mov
sbb
jg
jb
mov
lret
mov
icebp
aas
divb
in
out
or
daa
loope
jecxz
sbb
out
fists
leave
push
bound
jbe
das
daa
idivl
popf
push
inc
or
mov
cmp
cmp
sub
jnp
mov
push
std
cwtl
xorb
dec
loopne
jbe
test
xchg
fistpll
lea
jne
pop
pop
dec
add
clc
insb
das
sbb
and
js
jne
dec
sub
mov
hlt
fldcw
push
jmp
ljmp
testl
imul
mov
cmpsl
pop
rcrb
pushf
outsb
add
xchg
xor
cltd
adc
movzwl
push
ss
fsubrs
es
int3
out
lea
sbb
dec
outsl
push
push
mov
movl
xlat
mov
add
fdivs
jb
sbb
rcl
pop
push
pusha
and
jb
out
sub
hlt
add
mov
pusha
clc
andb
cwtl
mull
push
scas
test
ret
jmp
rcrb
addl
out
pop
cmp
cmc
lret
into
mov
sbb
lods
aad
inc
inc
out
andl
xchg
sbb
pop
dec
push
inc
aam
push
mov
push
push
in
push
jb
mov
mov
dec
mov
xchg
push
mov
sbb
dec
mov
fidivl
sub
outsb
arpl
xor
lret
xor
dec
xlat
adc
nop
clc
sahf
sub
adc
mov
push
aad
leave
jae
ja
out
hlt
pop
cltd
mov
mov
ja
push
dec
movsl
jns
dec
hlt
aaa
test
sbb
cld
jge
je
js
mov
imul
nop
add
jne
dec
scas
xchg
or
fwait
mov
ret
icebp
cmp
inc
clc
push
fisttps
or
dec
movsl
pop
popf
clc
mov
out
push
out
mov
xor
outsl
adc
xor
pop
jmp
lret
mov
mov
xchg
inc
inc
dec
incl
inc
decb
imul
arpl
inc
movsb
xchg
and
adcb
stos
insb
in
or
sub
xchg
ds
dec
pop
popa
out
sbb
mov
out
insl
pop
test
xchg
jmp
adc
mov
jne
mov
bound
sbb
sub
cli
jge
test
fldl
repnz
fcoml
push
lods
xchg
fsubp
mov
sbb
mov
xor
iret
addl
push
pushl
rorb
sbbl
jecxz
scas
jmp
sti
cmpsl
cmp
inc
std
or
pop
jae
cmp
push
pop
in
int3
adc
lods
loopne
xchg
inc
xor
mov
inc
sub
out
jnp
pop
insb
orb
xchg
add
mov
push
inc
xor
sub
sbb
push
cltd
stos
js
xchg
enter
repnz
leave
xchg
imul
outsl
dec
adc
ljmp
push
dec
enter
mov
mov
and
mov
bound
int3
adc
sbb
icebp
andl
aas
mov
cld
in
dec
xchg
imul
mov
xor
sbbb
and
xchg
jp
lods
push
sbb
sub
xor
lcall
test
mov
fildl
fs
mov
lods
add
in
jp
push
jle
pop
shlb
nop
pusha
lock
ret
add
mov
adc
adc
push
xor
mov
stc
dec
mov
repz
mov
and
xor
sbb
adc
jns
clc
call
orl
jecxz
arpl
jp
stos
xchg
push
xor
mov
aad
xor
xchg
cmp
test
out
sbb
adc
mov
popa
push
cmpsl
mov
or
push
fisubrl
mov
inc
rorb
cwtl
push
fbstp
inc
lods
cltd
ret
aam
test
test
and
cmp
jp
cmpsl
incl
adc
dec
aaa
jne
sub
adc
mov
mov
arpl
dec
adc
inc
movsl
inc
or
icebp
lret
add
pop
push
mov
sti
sbb
es
sub
int3
mov
adc
cmp
and
pop
frstor
clc
xchg
js
adc
aaa
xchg
decl
or
mov
cmp
xor
repz
es
lret
xor
xchg
mov
inc
add
xchg
jp
scas
cmp
cld
divl
inc
lcall
jae
loop
xchg
inc
stc
mov
push
jnp
xchg
pushf
popa
lock
loope
push
in
int
dec
push
ss
mov
mov
mov
or
dec
push
lods
test
nop
pop
test
xor
mov
in
mov
call
and
inc
aam
dec
ret
mov
in
jecxz
mov
into
sub
lret
out
outsl
ret
scas
nop
sar
push
push
add
or
popa
cmc
and
xchg
pop
ret
mov
mov
sbb
out
push
lods
inc
aaa
sub
xchg
mov
xchg
sub
add
push
enter
mov
out
lods
push
mov
fwait
push
xor
pop
jmp
inc
xor
lods
test
lods
movw
in
call
out
xchg
sbb
mov
xchg
aas
insl
repnz
icebp
xchg
mov
lods
out
sbb
jbe
cli
xchg
lcall
rolb
bound
jp
and
cmp
pop
inc
jns
add
sub
push
xchg
scas
pop
pop
mov
adc
sahf
enter
jmp
repz
std
mov
add
push
jae
notl
mov
sar
or
or
nop
in
inc
notb
pushf
les
sbb
clc
pop
cmp
enter
or
ss
pushf
jp
jl
xchg
xchg
aad
xor
scas
insl
fistps
sbbl
inc
xchg
push
mov
adc
adc
int
xchg
push
mov
inc
jg
cwtl
jecxz
shrb
fldcw
lods
xor
cmpsb
movsl
aaa
dec
xor
insl
shl
cmp
xor
stc
lods
je
stos
push
andl
in
xchg
test
jae
adc
or
and
jae
mov
cmp
dec
sub
daa
pop
cmpsl
sahf
andl
dec
adc
mov
add
mov
imul
and
movsl
push
stos
adc
cltd
adc
testl
jns
and
hlt
icebp
or
adc
and
push
mov
inc
je
push
aad
das
jne
mov
sbb
cmp
push
movsl
mov
enter
mov
inc
lahf
fisttps
dec
aam
pop
inc
xchg
mov
clc
cmp
int3
cli
inc
push
or
pop
cltd
hlt
shrb
pop
dec
add
jae
jl
insl
mov
popa
setnp
andb
hlt
and
or
test
xor
mov
push
clc
inc
jno
cltd
push
pop
jno
mov
loopne
mov
ret
or
dec
sbb
cmp
cmp
push
stos
ljmp
jmp
pop
shll
dec
push
dec
int3
mov
mov
xchg
pop
int
inc
mov
mov
js
inc
sbb
jnp
or
aam
sti
xor
out
dec
add
adc
dec
scas
and
sub
jnp
push
fmuls
cli
dec
fs
loop
dec
and
pop
icebp
enter
cmp
add
lahf
add
arpl
jbe
mov
cmp
out
idivl
mov
sub
out
addb
lahf
outsl
cs
neg
arpl
xchg
inc
inc
and
sbb
mov
cwtl
inc
mov
outsl
ret
lock
punpckhwd
lods
pop
sbb
mulb
js
mov
xchg
shr
stos
add
out
inc
mov
in
sarb
out
dec
cli
test
loop
into
jg,pt
and
lea
dec
aas
mov
dec
sbb
cmpsl
dec
sub
xor
xor
dec
sbb
lock
fimull
pop
test
das
jae
ds
pushf
jmp
add
jns
pop
and
mov
push
les
fs
sbb
out
pop
cmp
inc
maskmovq
divl
xchg
arpl
out
sub
das
jp
mov
cmp
leave
and
scas
pop
out
mov
or
movsl
call
or
imulb
lods
je
push
enter
cmp
loop
pop
sbb
add
bswap
mov
mov
out
sub
mov
or
pop
jae
pop
pop
ja,pn
cmp
aaa
nop
clc
inc
sti
lret
xchg
add
test
fmull
inc
rorb
push
stc
mov
stc
ds
gs
xor
insb
je
adc
shll
jno
xchg
mov
loop
sti
jg
aas
loope
or
and
das
test
jb
mov
shlb
arpl
pop
jnp
lcall
jbe
push
inc
aas
xchg
inc
loope
ds
mov
ljmp
rol
lods
fists
dec
into
xor
je
aas
lds
mov
bound
ret
and
in
lds
pushf
aaa
sub
aad
dec
pusha
pop
call
xor
stos
jmp
mov
test
adcb
mov
std
mov
es
aaa
lock
icebp
bswap
xor
loop
sub
mov
cltd
lods
push
cmp
sbb
test
mov
flds
pop
sar
cwtl
xchg
push
loopne
inc
paddusw
jmp
fists
pop
cmpsl
push
icebp
cltd
and
mov
mov
xchg
mov
orl
lcall
shlb
and
push
rcl
mov
adcl
in
or
sbb
and
lea
or
pop
out
clc
fstp
lret
popa
jge
jb
shlb
loop
mov
xor
inc
or
ljmp
push
ret
and
sbb
jb
dec
lcall
movsl
dec
jl
data16
lret
jnp
std
mov
enter
jns
fs
dec
jne
dec
es
or
lock
flds
push
sbb
sbb
out
xor
mov
mov
push
mov
out
xor
xchg
mov
sbb
mov
mov
fwait
mov
jmp
test
call
out
lahf
or
jge
stos
bound
push
cli
inc
insb
push
sbb
and
push
std
clc
push
xchg
adc
mov
test
pop
test
fimull
or
dec
mov
mov
loope
sub
mov
in
add
into
or
jns
pop
push
jmp
cmp
dec
jno
dec
pusha
hlt
gs
cmp
cmp
popa
push
lcall
and
mov
push
mov
in
inc
inc
mov
into
lahf
aad
sub
fstps
daa
mov
pop
cltd
or
clc
sub
shrb
mov
cmp
fstps
and
xor
test
sbb
clc
loop
xor
ret
pop
dec
mov
movsb
loopne
push
sbb
adc
adc
aad
mov
imull
pusha
notl
and
or
pop
sub
repz
mov
mov
cwtl
test
imul
out
adcb
je
cmp
int
roll
imulb
or
daa
inc
in
xchg
ds
mov
loopne
ret
mov
imul
out
mov
stos
adcb
inc
inc
dec
daa
sub
push
hlt
cmp
jae
mov
scas
int3
ror
je
out
fistl
popa
hlt
jno
push
das
cli
adc
ds
or
int
dec
xor
cs
jne
push
pop
jo
add
ret
mov
xchg
in
enter
pop
pushf
sub
es
jo
aas
sbb
mov
push
fwait
das
test
push
pop
fwait
add
movsl
and
int
dec
addr16
daa
ret
adc
aaa
gs
or
out
in
mov
sbb
lock
xchg
lods
insl
je
add
shrb
sbb
in
fiadds
cmp
lds
mov
or
cli
mov
mov
push
jmp
xchg
lea
push
push
ljmp
dec
mov
cltd
add
mov
aas
inc
push
mov
push
and
sub
pushf
fistps
lock
scas
test
jb
cmpsb
shl
stos
xor
testb
leave
mov
add
mov
aad
jmp
or
arpl
lahf
push
lcall
adc
movl
cli
xchg
jmp
jnp
push
mov
push
rcll
outsb
push
sbb
jae
je
xor
jecxz
mov
jmp
std
pop
and
scas
mov
insb
fsubs
and
in
lods
or
nop
imul
inc
mov
shrb
jmp
xchg
or
mov
js
popf
fxsave
sarl
jbe
cmpsl
or
aad
sarl
pop
cmp
popa
iret
iret
jno
sahf
push
push
fisubrs
fs
inc
fiadds
lock
fsubs
add
pushf
mov
mov
ljmp
out
es
repz
dec
fs
fisttpll
cs
cmp
mov
and
pop
dec
daa
mov
movl
es
into
mov
lret
js
sub
dec
sub
clc
outsb
cmp
not
jp
or
add
xchg
imul
in
aas
add
pavgw
imul
test
adc
aaa
popa
jo
enter
mov
fistl
mov
lcall
ljmp
fwait
pop
cmpsb
or
rclb
cmp
loope
cmpb
aas
xor
scas
movsb
in
imul
pop
jbe
cmpsb
sub
imul
aas
push
subl
fistpll
out
daa
lahf
int
xchg
sahf
out
orl
nop
mov
dec
lods
push
xchg
add
mov
ret
in
inc
rolb
and
push
mov
cmc
mov
xchg
add
mov
pop
jns
sarb
mov
mov
pop
mov
push
fwait
pop
push
aaa
popf
leave
xchg
lods
pusha
inc
mov
test
or
mov
push
and
popa
and
mov
adc
lret
inc
xor
arpl
ds
lock
cmp
addr16
push
fistpl
or
pop
jo
movsl
pop
fcoms
cld
rcrl
movsl
ret
ss
jo
inc
ss
mov
mov
add
out
lcall
sbb
xchg
jnp
pop
xchg
imul
mov
push
push
test
aas
push
xchg
ja
loope
fdivr
mov
lret
int3
mov
pusha
sub
add
adc
std
lods
and
mov
fadds
lret
aas
push
or
fpatan
je
jecxz
daa
outsl
cmpsl
ret
sub
gs
insl
frstor
das
dec
sahf
jmp
or
movsb
ret
rcll
int3
mov
xor
jecxz
repnz
jecxz
sub
xchg
mov
mov
sti
mov
and
mov
shr
adc
addr16
icebp
sub
insl
and
ja
or
jo
mov
xchg
mov
push
mov
insb
inc
mov
pushf
xor
adcl
add
adc
inc
lret
bnd
imull
fdivl
pusha
mov
sub
subl
arpl
pop
and
mov
in
stc
sbb
fimuls
cwtl
sub
adc
pop
pop
loopne
sub
call
inc
inc
pop
rorb
sub
xchg
mov
xlat
inc
cmp
jecxz
fcoms
and
push
pop
mov
push
jbe
sti
inc
adcb
shll
inc
mov
xor
sbb
out
pop
xchg
pushf
mov
daa
addr16
jno
mov
adc
stos
leave
repnz
xor
movsl
scas
addr16
pop
xor
cmp
cmc
cmp
loopne
repnz
pop
jmp
pop
pop
and
loop
ss
sbb
divb
pop
add
and
dec
rcrl
sub
out
fwait
xor
adc
fbld
mov
je
inc
adc
sti
and
dec
dec
sub
sbb
sbb
mov
mov
cmp
push
imul
cmp
jb
and
shll
rorb
push
push
aaa
add
sub
daa
adc
pop
arpl
jle
movsb
xchg
popa
cmp
mov
mov
ss
push
add
enter
lret
and
sbb
and
push
in
mov
inc
lret
sub
add
mov
rcrl
mov
mov
jns
stos
mov
and
xchg
js
dec
inc
movsl
cmpsl
xchg
xor
negl
or
arpl
xchg
imul
adc
jne
xchg
incb
pop
fistl
or
push
sbb
outsl
jmp
rcl
mov
sbb
mov
pcmpgtb
xchg
mov
mov
mov
int3
xchg
and
sarb
cltd
aas
and
and
lock
xor
cmpsl
jns
repz
xor
aad
push
cmp
js
jno
mov
mov
cld
xor
sub
cmpsl
out
hlt
mov
lret
aam
pop
cmp
je
lret
push
pop
enter
dec
test
mov
cmc
pop
cli
jecxz
in
mov
enter
leave
lcall
sbb
add
inc
sub
fnstcw
jns
stc
sahf
xlat
sti
jae
or
scas
push
xchg
fistpl
and
cmp
push
jne
inc
in
push
inc
pop
in
iret
xchg
cmpsb
pop
inc
and
and
orb
insl
dec
cmc
cmp
je
fimull
outsb
or
pop
mov
xchg
repnz
lcall
scas
and
leave
sbb
sbb
out
dec
inc
outsl
je
adc
enter
jg
bound
sbb
push
imul
mov
ja
call
jle
dec
and
fdivrl
mov
test
xchg
mov
push
add
xchg
xor
aad
push
stc
jo
repz
mov
mov
sbb
lock
jns
mov
outsl
jle
out
seta
bound
daa
xchg
mov
shrb
jle
loop
sbb
mov
mov
jo
pop
imul
hlt
ja
popa
stc
fwait
add
and
push
or
lcall
jle
cmpsl
ficoml
enter
rorb
andb
ret
repz
xchg
sub
mov
jmp
ss
mov
adc
pop
loope
std
adc
ds
popf
sub
pop
fdivl
push
cs
call
cmp
cmp
lretw
jge
gs
cmpsl
movsl
or
loopne
aad
mov
jne
fstpt
frstor
pop
lret
sub
leave
jg
push
sub
sbb
imul
test
mov
jnp
xchg
inc
and
shlb
daa
jae
xchg
xchg
dec
in
ficoml
sbb
bound
fs
push
in
push
in
xor
pop
into
jge
xchg
lret
xor
lcall
mov
mov
mov
xor
jb
out
lret
icebp
outsb
hlt
push
fldt
popf
adc
popa
cmc
push
clc
mov
lahf
cwtl
xchg
ja
adc
dec
sarb
or
gs
mov
or
jle
and
push
or
test
mov
mov
in
and
cmp
add
gs
cmp
sub
cmpb
push
adcb
arpl
fimuls
push
xchg
loop
xchg
pushf
or
daa
xor
sbb
aaa
rol
xor
xor
fmuls
mov
call
pusha
data16
cltd
ret
push
int
mov
jns
adc
adc
popl
icebp
nop
data16
aad
ss
inc
insl
mov
and
pop
sbb
sub
push
xchg
outsb
cli
nop
arpl
call
sarb
loopne
rolb
in
pop
dec
rcrl
jle
ljmp
jno
adc
stos
imul
jl
mov
jecxz
mov
out
add
aad
lcall
sub
pop
dec
xchg
sub
pop
ja
jbe
xchg
stos
ffree
in
dec
into
cmp
out
dec
mov
inc
push
xchg
outsl
daa
dec
int
lock
jl
mov
adc
dec
out
int3
cmpsb
inc
inc
int
sahf
push
icebp
sbb
adc
sbb
adcb
in
dec
lcall
inc
adc
sbb
arpl
or
cmp
cmpsb
in
push
inc
adc
cmpsb
pop
nop
ret
jno
jg
fwait
jne
adc
lcall
sub
ja
test
aaa
push
jle
jne
or
cmp
mov
sbb
jg
cmp
cmp
lds
xor
cmp
sub
sahf
lds
addr16
pop
sahf
xor
sub
cs
dec
enter
fidivl
insb
imul
jae
mov
lds
ds
stc
fildl
mov
add
sub
pop
jno
hlt
cwtl
push
test
xchg
shr
cmp
pop
mov
pushf
fwait
jmp
ret
loop
sub
push
push
mov
repnz
test
mov
mov
repz
cmp
xchg
xlat
and
es
inc
enter
cmpsb
iret
jmp
xor
jns
aam
or
iret
insb
sub
les
pop
outsb
xchg
cmpl
xchg
or
in
pop
enter
aam
push
or
roll
call
dec
or
lahf
jp
inc
mov
jp
cltd
bound
aam
xor
jl
adcb
leave
pop
and
mov
int3
add
sub
dec
cmp
mov
cwtl
outsl
sub
and
das
es
jo
cmp
enter
jl
repnz
mov
xor
or
cmp
lahf
mov
pop
mov
push
push
test
and
std
dec
mov
pop
or
push
xchg
push
push
or
pop
sub
stc
push
xor
ss
cs
adc
jno
lcall
rcrl
ret
jne
ficompl
stc
mov
xrelease
mov
add
les
shlb
fdiv
lahf
jmp
jmp
icebp
sub
or
out
test
in
aad
xor
or
pop
mov
dec
adc
call
add
push
fsubrs
cvtps2pi
lods
xor
mov
and
xchg
xor
cmc
lcall
stos
jg
inc
add
jecxz
jg
mov
jecxz
jne
mov
or
jb
arpl
clc
inc
mov
fbstp
movl
stos
test
jae
out
not
cmp
xchg
push
or
cmp
popf
nop
and
xchg
sub
jo
in
push
aad
or
inc
add
test
cmpsl
jmp
sti
aad
sub
push
fldt
test
addl
mov
or
stc
add
test
inc
sbbl
int
jle
das
sti
or
imul
xchg
and
rcrb
inc
cmp
nop
push
mov
dec
cmp
or
scas
clc
call
mov
or
push
push
push
es
xor
cs
sbb
test
push
sbb
test
xor
outsb
lods
dec
loope
sub
mov
push
jmp
mov
xchg
and
cltd
mov
adc
cltd
rorl
pusha
mov
lcall
mov
lds
shrl
and
nop
dec
mov
fidivs
jle
sti
jne
adc
push
push
jb
fldcw
rcrb
mov
fcmovnbe
fcomp
lfs
dec
sbb
dec
negb
pop
loopne
xchg
out
pop
mov
lods
xchg
cmp
jge
inc
xchg
lret
cmpl
pop
mov
sahf
loop
push
sbb
in
adc
das
xor
inc
dec
mov
lcall
mov
add
test
mov
mov
adc
popf
lds
jbe
push
sbb
push
loop
repnz
sahf
lcall
test
fldt
pop
adc
dec
test
dec
lods
cmpsl
dec
sbb
mov
or
add
ds
xchg
push
ss
pop
out
testl
jo
add
xchg
roll
mov
repz
sub
das
push
ljmp
scas
popf
call
pushf
add
pop
push
push
out
fsubl
pop
out
scas
inc
cmpsb
ja
call
mov
cld
std
xchg
bswap
sahf
jae
add
sbb
test
cmpsb
test
sbb
cld
shrl
inc
add
push
mov
call
cmp
test
mov
sub
aam
sbb
jl
in
inc
ret
mov
cmpsb
stc
inc
out
xor
cmp
mov
jcxz
in
out
shll
dec
push
cmp
ljmp
and
dec
adc
cmpl
jo
int
scas
fdivr
mov
jns
scas
mov
xor
pop
and
or
mov
test
cmp
xor
outsb
mov
push
jmp
adc
mov
inc
scas
jmp
add
pop
adc
pop
pop
sbb
daa
push
das
cmp
xchg
int
adc
add
ds
mov
lret
push
aam
fisubl
push
rcl
cld
cwtl
cld
outsl
lock
mov
enter
jp
out
pushf
adc
cmp
pusha
sub
push
mov
cs
aad
push
int
pop
imul
addb
test
pusha
adc
mov
cli
je
xchg
out
in
jl
mov
ja
mov
outsl
out
out
in
insl
les
mov
shll
inc
xchg
fmull
sub
adc
aam
mov
sahf
mov
sbb
scas
popa
mov
addr16
dec
sbb
dec
stos
fldl
testb
in
inc
fs
arpl
cmp
addb
cwtl
adc
in
fsubs
test
mov
shll
mov
loope
cmp
leave
icebp
cli
scas
pop
imul
bound
mov
sbb
sbb
or
sahf
cmc
mov
or
shlb
aaa
stos
dec
notl
jb
push
or
push
repnz
dec
pop
dec
pusha
inc
test
push
popa
xor
js
jne
or
sbb
inc
lret
movsb
sbb
cmpsl
idiv
cld
popa
mov
pop
add
dec
scas
into
cmpsl
cld
dec
xchg
test
out
mov
sbb
lds
mov
shlb
call
mov
sub
xchg
jmp
icebp
dec
inc
xor
cmc
scas
jge
or
dec
ficomps
scas
xchg
getsec
push
iret
mov
push
and
jmp
dec
adc
insl
pop
sbb
inc
aam
lret
add
ja
adc
sub
adc
and
cli
inc
outsb
jp
dec
push
bound
mov
push
repz
xor
cmp
jmp
mov
xor
or
jecxz
shl
mov
xchg
sahf
sbb
xchg
mov
adcl
push
mov
les
mov
and
sti
ret
pop
pop
sub
jo
mov
mov
leave
popa
lcall
sti
ret
xor
aas
cmc
cmpb
xchg
in
xchg
add
adc
jno
and
roll
mov
out
xor
test
xor
test
cmp
addl
xchg
jno
popa
in
jns
mov
mov
shlb
call
pusha
aad
pop
mov
lea
pop
out
mov
out
sbb
dec
add
add
sti
and
iret
shr
pop
mov
fldcw
pop
outsl
sbb
cmp
dec
cs
adc
out
in
inc
fstl
pop
outsl
pop
add
out
in
push
xor
ds
pusha
inc
out
mov
fcomps
push
mov
xor
pop
andb
push
xchg
mov
jnp
dec
sbb
bound
aas
inc
mov
mov
sub
xchg
jg
ret
mov
fstpt
leave
sub
cli
and
pop
push
roll
daa
repnz
stos
outsb
mov
test
cmp
pop
sub
and
addr16
movsb
and
cmp
jns
scas
lds
outsb
loop
fisubrl
adc
mov
sti
sti
or
push
xor
mov
xchg
outsb
neg
rcrl
xchg
lods
sarl
int
jne
repnz
sbb
cmpsl
xlat
jno
movsl
aam
adc
and
popa
es
pop
jl
cmpb
and
inc
dec
jno
das
jg
mov
or
ds
clc
lock
sub
jne
mov
es
leave
cmp
andl
imul
add
mov
xchg
insb
stos
aad
mov
and
mov
out
sub
add
lods
xchg
jae
mov
push
sbb
and
enter
fisubrs
sbb
pop
pusha
mov
mov
sub
shl
std
ljmp
xchg
ds
mov
inc
sahf
shr
jno
cmp
in
pop
dec
cli
inc
mov
das
inc
lds
dec
inc
std
test
mov
lods
ds
mov
xchg
cmp
ret
cmp
movsb
stos
push
test
add
scas
lods
add
cmpsb
loope
xor
ds
mov
pop
mov
lds
pop
shll
lret
ds
xlat
lret
into
mov
mov
cmp
subb
scas
lret
and
test
sahf
pushf
inc
push
fdivrs
fs
dec
jbe
orl
repz
mov
xor
sbb
sub
std
hlt
xchg
cmp
loop
fiaddl
and
subl
cli
adc
push
addr16
call
icebp
in
std
enter
jecxz
and
movsb
out
pop
or
imul
jns
inc
xchg
into
sub
cmc
push
mov
aad
cwtl
popf
hlt
sarb
repz
sti
subb
shlb
jmp
sub
mov
movsl
adc
inc
mov
and
fstpl
jnp
mov
pop
outsb
mov
dec
jmp
hlt
sub
cmp
mov
les
outsb
pop
js
repz
aaa
das
lret
rclb
jl
mov
in
icebp
sub
lods
sub
lods
pop
ret
daa
cmp
inc
or
push
mov
popa
cmpb
mov
add
mov
xor
mov
sub
inc
inc
inc
add
dec
sub
and
inc
stos
mov
test
cmp
mov
xchg
sahf
or
aaa
xor
loop
shl
add
add
repz
cmp
xor
ret
pop
orl
or
outsl
mov
rcrb
lret
pop
lock
or
imul
xchg
dec
int3
mov
int3
cmp
enter
call
cld
pusha
mov
imul
xchg
das
xchg
xlat
cmpb
push
repz
les
popa
push
cmp
push
xor
sbb
and
arpl
push
pop
out
mov
leave
sbb
or
int
xchg
adc
test
in
pop
pop
in
and
or
scas
sub
inc
scas
or
int3
xor
imul
filds
cmpsl
aas
pop
or
xor
stos
push
mov
pushf
dec
lods
aas
jns
add
inc
loop
cmp
lret
in
mov
or
dec
push
subl
std
and
in
and
jg
in
sbb
mov
stos
and
mov
call
and
mov
dec
das
push
push
cmc
pop
jge
in
test
clc
test
push
xor
xchg
xchg
cld
mov
add
dec
mov
cmp
cmp
rorb
cwtl
jge
repnz
js
mov
addr16
or
scas
popf
andl
lods
add
adc
jmp
add
xchg
ja
sbb
test
loop
out
daa
adc
mov
mov
ja
daa
dec
add
aad
test
das
xchg
cltd
sbb
popf
lahf
sub
fmul
rcrb
jge
sti
aad
push
lahf
or
and
adc
xor
push
dec
or
jge
cmp
xor
mov
fbstp
cmp
mov
addl
jge
test
dec
xor
js
push
sahf
sbb
xchg
je
push
push
xchg
negl
push
rcrl
stos
ret
mov
gs
pop
test
in
push
push
fisttps
xor
out
mov
dec
adc
mov
push
xchg
cmc
hlt
cmp
lea
ja
mov
scas
sti
push
dec
ss
pop
fdivr
and
add
imul
dec
and
inc
mov
stos
inc
out
push
and
push
lcall
sub
or
jle
xchg
adc
jmp
sbb
xor
adc
into
loopne
in
out
lock
shlb
imul
jae
adc
stos
out
ss
cmp
mov
add
dec
sbb
ja
les
cwtl
leave
aaa
jle
pop
sub
fistpll
xchg
fists
shrb
shl
lret
iret
test
repz
add
shrb
pusha
xchg
mov
hlt
outsb
lcall
dec
and
mov
cli
in
sar
jmp
inc
jo
jo
packuswb
das
mov
ficompl
mov
lock
loopne
inc
pop
mov
dec
leave
lods
repz
pop
inc
stc
jb
pop
jl
out
adcl
fst
mov
mov
inc
mov
inc
xchg
lock
rcrl
sbb
xchg
push
adc
inc
insl
in
int
sbb
cltd
inc
push
call
jmp
dec
add
lcall
sub
pop
cmp
adc
mov
lds
mov
jmp
cmp
mov
movsl
sub
push
mov
cmpsb
rcrb
or
xor
sbb
sti
push
andb
sub
dec
mov
ret
mov
sbb
push
out
loopne
xchg
mov
testb
mov
rcrb
inc
out
add
cli
add
dec
ret
sbb
and
pop
ja
xlat
cmp
pop
mov
mov
mov
cmp
sub
jnp
or
test
cmpsb
mov
outsb
inc
or
addl
and
mov
hlt
cmpsl
mov
pushl
dec
cmpsb
int
mov
subl
dec
inc
inc
adc
mov
inc
outsl
movsl
dec
sbb
hlt
rcrl
jecxz
into
movsb
add
mov
nop
adc
pop
or
stos
dec
outsb
jecxz
xlat
mov
ret
mulb
sub
xchg
stos
les
xlat
mov
jbe
jle
push
pcmpeqd
loopne
adc
mov
xor
lea
xchg
sub
dec
and
dec
push
pop
adc
scas
mov
sbb
or
stos
jo
sti
cld
mov
out
or
mov
out
sub
push
icebp
mov
sbb
stos
cmpsb
call
pop
jecxz
sbb
sbb
pop
push
repnz
sub
aad
mov
lea
mov
push
sub
push
or
sub
dec
dec
mov
mov
sub
es
nop
add
mov
lds
add
pop
mov
jno
adc
inc
jnp
in
call
mov
test
hlt
rorb
mov
in
rorl
pop
loope
outsb
insl
jp
sbb
les
inc
js
add
cmp
or
test
jae
mov
xor
push
enter
testb
add
movsbl
shr
sbb
loopne
xor
cmp
and
mov
jne
inc
sub
pop
flds
imul
push
or
pop
cmp
jbe
fnstcw
mov
addr16
jmp
cmp
mov
and
icebp
dec
sbb
pop
add
insb
ljmp
dec
sub
cmpsl
cmp
sub
mov
iret
fistpll
jbe
sti
mov
add
ds
jno
leave
in
in
jmp
pop
das
push
dec
gs
fwait
sbb
iret
orb
cwtl
mov
pop
and
xchg
cmp
mov
inc
data16
mov
dec
stc
stos
ret
in
cli
addps
pop
xor
lds
push
xorb
pop
insb
mov
cltd
int3
mov
addr16
fildll
adc
scas
pop
jns
mov
push
movsb
xlat
mov
xor
outsl
sarb
dec
arpl
fadds
pop
popa
xor
xor
imulb
pop
jge
pusha
jge
mov
sbb
mov
cli
data16
jge
into
xchg
in
insb
mov
xchg
jp
lea
lds
cmpsl
lea
add
pop
push
popf
iret
iret
cmc
jb
dec
lret
pusha
adc
loope
sti
add
sarl
imul
add
sbbl
lods
stos
jne
rcll
xor
out
int3
out
inc
jne
inc
imul
mov
es
add
push
sbb
mov
out
mov
out
cmp
xchg
idivl
mov
jo
mov
dec
xor
shr
int
ret
inc
aas
or
test
aad
mov
pop
out
les
pop
int3
cmc
xor
aad
out
push
and
pop
push
outsb
mov
mov
shl
or
insb
les
jecxz
xchg
and
bound
dec
scas
dec
clc
scas
inc
xchg
inc
rcrl
xor
cmpsb
xor
sbb
mov
les
add
movsb
or
xchg
xorb
pop
fildl
insb
andl
cmp
add
jno
outsb
xor
mov
mov
out
jmp
and
inc
popa
xchg
pop
out
push
inc
inc
inc
in
push
push
pop
pop
loop
inc
enter
mov
mov
popf
pop
adc
das
mov
mov
dec
and
mov
mov
jne
mov
out
mov
mov
or
sub
je
icebp
add
scas
mov
xchg
rorb
push
stc
popf
mov
mov
jb
aas
loop
ss
test
xor
sbb
aam
sbb
clc
out
rcrl
je
imulb
jmp
mov
add
sbb
mov
dec
xchg
or
sbb
push
cwtl
sub
bound
fiadds
enter
push
sub
pop
cs
aas
mov
mov
dec
and
mov
cmp
push
xlat
out
in
vsubpd
push
mov
js
in
aaa
js
les
push
mov
cmp
xor
or
mov
cli
add
je
inc
cmp
xor
enter
jg
mov
and
iret
sub
pop
mov
mov
stc
les
orb
dec
dec
cmp
outsb
aaa
jle
pop
pop
std
imul
or
divb
xchg
cld
ret
push
imul
iret
or
push
cmp
movsb
stc
shll
enter
sarb
xchg
lods
minps
inc
push
movsb
and
sub
add
inc
ja
icebp
test
in
dec
enter
adc
push
add
xchg
jmp
inc
adc
lret
fmuls
sar
mov
and
and
or
nop
pop
das
mov
xor
mov
sbb
fcoml
jp
sbbl
cmpsb
out
mov
mov
clc
cmpsb
ffree
idivb
cmp
or
lods
mov
jmp
sbb
fisubs
pop
repz
push
mov
pusha
test
arpl
hlt
cmpb
cmp
outsl
and
or
cld
and
jl
xor
cmpl
push
xor
loope
jne
gs
fsubp
push
fwait
jg
into
mov
sbb
push
lss
mov
sahf
outsl
add
daa
jb
xchg
adc
stos
imul
mov
imul
add
adc
stos
xchg
jp
aas
mov
ret
xor
cltd
test
adc
out
cld
sub
xor
cmp
and
and
push
jg
mov
ss
ds
cmp
cmp
stos
push
jns
lods
mov
mov
lret
jg
insb
xchg
dec
mov
jns
out
adc
std
ret
sbb
xor
hlt
mov
jae
dec
push
aas
movsb
adc
push
jg
pop
xchg
mov
xchg
and
inc
and
test
jno
and
mov
mov
daa
daa
setnp
xchg
fcomp
cmpsb
cli
leave
rcl
dec
mov
lods
das
jecxz
xor
pop
outsl
and
js
mov
cmp
fwait
and
mov
cmpsl
jl
push
xchg
push
cmp
hlt
jecxz
and
shrb
xlat
add
pop
out
movsl
subb
mulb
test
pop
add
movsb
cmc
cmovno
cmpsb
and
jns
or
push
repnz
out
mov
test
repnz
or
pop
mov
adc
frstor
cmpsb
dec
int
rcrb
pop
mov
sbb
xor
mov
jbe
push
call
jne
lahf
movsl
xchg
jne
lds
cwtl
inc
fucomi
popf
sbb
es
ds
fistl
cmp
cwtl
jecxz
adc
inc
lcall
in
push
jmp
xchg
sub
mov
lcall
jge
ret
or
cmp
inc
cltd
fnstcw
cld
jp
mov
or
shl
jge
imul
jge
pop
into
push
adc
xor
dec
inc
xchg
pop
mov
add
and
lods
sti
or
sti
or
enter
in
aas
push
fiadds
push
icebp
into
push
pop
sbb
addr16
mov
inc
aas
cmpsl
fisubrs
lds
sub
dec
fistpl
push
push
xor
cmp
add
divb
test
imul
mov
in
push
popf
inc
xchg
and
stos
xor
push
data16
sub
stos
mov
push
xchg
cmp
lea
fistl
xchg
aaa
add
sbb
push
sub
dec
int
push
pop
cmc
xchg
adc
in
jnp
jne
xor
out
enter
jmp
mov
mov
mov
mov
sub
or
es
push
jmp
fisubrs
out
pop
rcrl
mov
lahf
jle
fcomip
scas
stc
xlat
xchg
mov
adc
jle
aaa
and
jae
outsl
outsb
dec
fcomip
les
jo
push
xchg
xor
loopne
push
mov
dec
lret
adc
mov
push
and
push
lods
cmpsb
cmp
mov
inc
inc
push
cmp
jae
sbb
inc
lock
push
mov
pop
repnz
sbb
cmc
jge
out
aas
mov
cmc
movsl
mov
mov
pop
dec
lds
cmc
fwait
sbb
push
pop
xchg
loopne
jp
imul
xlat
test
loop
push
iret
shrb
mov
inc
pop
ror
insl
lcall
stos
fidivs
xor
jl
pop
ret
lds
mov
pushf
enter
fimull
xor
cmp
xchg
sahf
ss
js
and
out
loope
push
arpl
mov
cmp
mov
inc
lcall
daa
jne
mov
addb
out
in
shrb
add
int
jecxz
insl
sbb
jae
aam
sbb
jmp
push
imul
cltd
cmp
xchg
inc
dec
add
lahf
loop
dec
inc
lret
pop
and
adc
testb
xor
xchg
inc
sub
mov
aas
iret
and
mov
push
leave
ficoml
mov
mov
pop
cs
add
pop
sub
test
adc
fsubrs
mov
clc
stos
scas
cmpsl
or
imull
mov
outsb
loop
mov
xlat
mov
fidivl
mov
cltd
cmp
faddp
jmp
or
test
idivb
insl
icebp
enter
add
adc
mov
mov
xchg
repz
adc
or
push
test
mov
ljmp
dec
and
outsl
pop
aas
push
dec
loope
mov
outsl
jg
jne
pop
loopne
into
or
pop
scas
clc
jb
push
insl
dec
cmp
fs
adc
sbbb
mov
out
aam
ror
and
xor
imul
imul
in
decb
inc
in
scas
xor
shrb
adc
cmp
mov
or
into
insl
mov
push
pop
mov
ss
mov
and
repnz
pop
sbb
insl
cs
test
or
scas
cmpsl
cmp
pop
dec
inc
test
push
jae
sub
cmpsb
cmp
mov
mov
sbb
push
fisubrs
adc
das
nop
lret
and
hlt
cmpsl
push
enter
pop
dec
and
test
out
das
jae
test
pop
push
and
std
inc
out
test
or
insw
push
push
dec
lock
push
xchg
mov
push
mov
and
push
sub
popf
adc
fldl
stos
mov
fcoms
push
aaa
ja
push
or
xorl
fcomps
movsb
push
pop
imul
stos
repnz
scas
in
add
out
add
pop
dec
int3
push
stos
popf
adc
mov
dec
push
push
sub
xor
fs
and
lock
mov
dec
push
adc
int
dec
enter
aaa
cli
nop
cmc
push
lcall
cltd
jmp
jle
in
cltd
out
cmc
mov
sub
or
mov
out
fbld
test
ret
push
sub
mov
dec
or
or
pop
imul
push
inc
xchg
mov
cmp
or
fs
sbb
or
xchg
jns
dec
xchg
cld
sbb
or
jns
mov
jmp
jae
mov
mov
mov
sub
leave
imul
jg
inc
mov
push
xchg
xlat
in
iret
cmpsl
xchg
sbb
cmp
jae
mov
fcmovu
xor
jecxz
pushf
push
adc
inc
pop
push
or
pop
pop
sbb
ja
sbb
adc
cli
push
adc
sbb
out
icebp
dec
xor
cwtl
jo
hlt
sub
rcl
dec
test
dec
sub
daa
aad
adc
jge
push
jmp
popf
mov
pop
stos
cmp
jl
ficompl
mov
rclb
hlt
xchg
fstpl
push
lar
nop
outsb
fst
mov
cli
hlt
test
sub
repnz
dec
loopne
or
mov
mov
jno
sti
or
and
pusha
cmp
adc
pop
lods
test
cmp
daa
dec
aas
xchg
idivb
nop
or
lods
outsb
lcall
add
xor
mov
hlt
sub
sub
mov
dec
push
outsl
dec
js
cmp
mov
xchg
inc
cmp
cmpsb
xor
lock
jecxz
inc
pop
in
mov
ficoml
loopne
fdivl
lret
cli
aaa
jo
call
jb
xchg
jno
sbb
pop
or
cmp
lock
jp
sub
adc
xchg
and
addr16
mov
mov
pop
outsl
mov
push
repz
adc
dec
ss
test
pop
inc
in
push
aas
test
lods
outsb
mov
jl
mov
xchg
ja
movsl
imull
mov
mov
jge
inc
inc
es
jg
popa
gs
aad
sub
ljmp
in
sbb
sub
pop
or
scas
mov
loopne
stos
sub
mov
std
mov
nop
inc
sub
mov
aam
ficompl
jge
jne
cmpsb
repz
mov
xor
mov
test
sub
pop
lock
jae
adc
or
fiaddl
shl
push
rorl
mov
cmp
and
xlat
add
xchg
fsts
leave
mov
les
inc
nop
push
jbe
sub
out
faddl
sbb
xor
cmp
pushf
cmpsb
insl
mov
insb
pop
loopne
fstpt
dec
es
sub
push
cmp
mov
lahf
cmp
and
out
roll
imul
inc
pop
ds
lock
push
or
outsw
mov
out
insb
fldt
sub
cmpb
push
clc
mov
pop
xchg
xor
or
sbb
xchg
add
jnp
leave
pop
stos
add
adc
repnz
mov
push
ficompl
loope
jb
int3
outsl
fsubr
filds
pop
pop
mov
idiv
loop
xchg
cmp
test
ret
push
psrlq
jae
scas
test
jno
pop
jae
out
push
outsl
test
mov
mov
sub
inc
mov
fmul
int
xchg
sarb
push
lret
cmp
mov
cmp
lods
ficoml
or
adc
aad
mov
adc
fcmovnbe
mov
push
push
sub
sub
mov
hlt
push
lahf
jne
sub
xorb
or
negl
rol
insb
in
inc
cmpsb
bound
dec
stos
cmp
jg
loop
and
push
mov
dec
pop
or
fbstp
ja
fdivrp
mov
addr16
mov
inc
inc
fsubrs
inc
aam
loopne
xchg
in
test
jnp
aad
cld
mov
push
lock
inc
push
xor
or
out
mov
repz
or
stos
xor
and
xor
xchg
aam
mov
fs
js
inc
mov
ret
cmp
xorb
add
push
iret
insl
das
push
out
shl
xor
mov
jle
cltd
out
orl
fwait
pop
sti
enter
cmpsb
fcoms
push
sbb
pop
leave
leave
mov
pop
push
pusha
mov
fs
in
lcall
aad
enter
fdivp
test
pop
xchg
clc
cmpsl
dec
adc
xor
xor
cmp
xor
jmp
push
or
and
adc
xor
popf
insb
mov
inc
mov
addr16
xlat
xchg
insb
addr16
add
out
lods
lcall
sub
std
enter
sbb
mov
lods
cmp
jmp
mov
mov
andb
and
mov
pop
jge
lea
fucom
mov
sub
daa
insb
push
test
and
dec
mov
jle
dec
imul
cmc
pop
rorb
out
jg
mov
push
add
pusha
lcall
repnz
subb
mov
pop
sub
les
pop
sub
fwait
inc
sub
out
and
pusha
sub
xchg
and
lea
bound
fldenv
stos
mov
mov
cmp
or
adc
int3
cmc
mov
insb
es
ret
and
js
imul
in
jb
jne
btr
inc
aam
dec
outsb
or
fs
mov
cmpsl
lock
lret
jns
add
out
push
jne
imul
mov
pop
push
inc
mov
adc
mov
je
in
cmpsl
ficoms
rcl
in
sub
daa
out
mov
mov
cmp
cli
repz
cmp
nop
jg
xor
imul
xor
fbld
jnp
fs
loop
std
das
or
fistl
or
lcall
lea
adc
and
jl
xor
lock
les
rorl
mov
add
mov
pop
mov
adc
rolb
and
mov
aas
dec
hlt
and
fstpl
push
das
mov
xchg
dec
loope
or
xchg
movsb
mov
dec
sbb
or
mov
cwtl
into
sbbl
jae
incb
mov
popf
js
scas
and
cmp
pop
mov
mov
sbb
or
cmpsl
loopne
sbb
lret
test
repz
adc
pop
aam
push
out
js
in
lret
ja
nop
out
dec
pop
loopne
sub
das
xchg
push
mov
jl
add
subl
aas
cwtl
rol
mov
push
xchg
pop
mov
addb
test
loopew
and
add
push
sete
jnp
adc
cmpsb
xorb
leave
fadds
mov
shlb
mov
dec
movsl
imul
or
adc
loope
sub
fmulp
or
cmp
sub
xchg
sbb
mov
mov
ror
js
sub
mov
mulb
in
xor
ftst
mov
nop
movsb
sbbl
jb
call
shlb
movsl
aas
bound
jbe
and
sub
pop
aas
pushf
dec
adc
out
xchg
orb
int3
xchg
in
add
movsl
cmp
call
xor
add
std
adc
mov
data16
pop
outsl
repz
push
sbb
push
inc
ret
test
pop
xchg
pushf
jnp
mov
xor
into
push
and
and
call
ret
pop
arpl
add
push
mov
ret
xor
or
int
mov
addr16
repnz
lea
shlb
add
or
rcr
sbb
clc
sbb
xor
push
pop
int
jne
arpl
into
pop
inc
shrb
jo
jns
loop
fwait
popa
sarl
pextrw
adc
lret
add
or
xor
mov
int3
add
fbld
or
sub
and
mov
ds
xchg
sub
push
adc
ja
push
or
scas
roll
push
gs
pop
mov
js
movsl
loope
xchg
icebp
out
pop
xchg
daa
test
sub
hlt
xor
mov
sarl
movsl
xor
xor
pop
push
inc
outsb
push
inc
mov
pop
push
popa
and
or
xchg
int
loopne
mov
sahf
pop
sbb
adc
xchg
xchg
cmp
cmc
add
outsb
das
cltd
and
mov
and
cltd
and
jg
cltd
lcall
sbb
sbb
dec
call
adc
shlb
adc
in
loope
dec
push
dec
aas
jno
mov
push
mov
cmpsb
pop
icebp
push
jecxz
test
int
and
cld
loopne
imul
cmp
and
ss
fwait
loopne
out
orb
sub
cmc
nop
xchg
int
test
mov
sbb
orl
and
test
pop
push
fildll
imul
movsl
pop
pop
lds
jecxz
and
pop
and
sti
test
je
inc
mov
subb
dec
inc
aaa
push
inc
push
mov
mov
xchg
iret
inc
cmp
inc
std
into
es
cmc
xorb
in
jne
es
add
mov
fildl
sbb
adc
dec
sub
arpl
cwtl
jmp
or
inc
add
add
es
inc
mov
mov
jp
das
jns
cmp
call
repz
xchg
pop
push
jp
das
dec
out
jp
jecxz
les
sub
xchg
dec
cmpl
mov
scas
fcompl
push
cmp
out
xchg
push
rcr
test
pop
lods
imul
ja
fisttpl
sbb
pusha
jb
push
sub
vmovmskps
fistpll
scas
pop
jo
iret
subl
andb
cli
js
movsl
cltd
int3
std
sub
pop
push
mov
ss
xor
sub
pushf
xchg
mov
push
pop
icebp
jle
add
stc
xchg
xor
mov
xchg
data16
pop
jmp
push
leave
iret
cli
popa
jns
add
pop
xor
ficomps
out
jns
sti
adc
xchg
push
rcll
stos
loopne
adc
bound
fildl
mov
pop
pop
mov
sub
add
cld
and
xchg
sub
xlat
daa
mov
cmp
inc
test
int3
jb
popa
stos
dec
std
fcoml
pop
mul
adc
pop
scas
mov
mov
adc
jns
mov
mov
sub
xchg
mov
mov
mov
into
ss
stos
or
pop
fldl
aas
mov
pop
in
in
iret
pop
jecxz
xor
or
fmulp
jecxz
sub
or
leave
cmp
cmp
testl
xrelease
sbb
jmp
sub
mov
and
mov
jl
int
lock
arpl
add
repz
push
and
sbb
repz
sbb
ss
mov
addb
adc
movsl
test
std
mov
movsb
filds
jmp
test
cmpsb
fxch
addr16
shl
scas
rcrl
xor
mov
stos
jecxz
xor
pop
or
sti
mov
xor
cld
jbe
or
mov
call
fsub
mov
pop
cmp
jbe
cmp
jbe
enter
lret
xchg
insb
add
inc
ljmp
filds
jnp
pop
and
je
inc
dec
bound
xchg
out
and
inc
push
sub
pop
out
mov
aam
into
dec
xor
stos
repnz
xchg
test
and
pusha
es
ds
xor
mov
data16
jl
in
dec
xchg
lds
sti
enter
pop
sub
addr16
and
movsl
stc
xor
mov
xor
or
hlt
mov
cmc
xchg
test
push
add
push
fmuls
mov
sarl
fistl
into
and
adc
imul
fdivs
mov
mov
out
insb
add
data16
sbb
xchg
aad
in
test
mov
dec
dec
rol
jbe
sub
js
adc
pop
add
out
out
cmpsb
cmpsb
inc
push
lret
jb
fdivs
ss
sub
sbb
lahf
push
scas
mov
jns
ds
cli
and
addb
aaa
jle
push
xchg
fisttpl
iret
and
aaa
mov
je
mov
and
clc
adc
adc
loope
push
js
jl
dec
dec
dec
mov
rol
adc
lds
repz
out
fistl
sub
loope
fstpl
xchg
in
mov
lds
cmpsb
push
mov
cwtl
aad
xor
or
mov
mov
aad
fimull
or
rsqrtps
xor
sbb
repnz
push
in
insl
shrl
sub
pop
ss
arpl
fmull
and
jo
add
call
xor
stos
mov
or
loope
stc
adc
mul
or
and
and
icebp
pop
lea
push
push
ljmp
add
mov
nop
sbb
jecxz
xor
xchg
or
xchg
and
pop
sbb
push
andb
adc
adc
out
imul
mov
push
leave
inc
mov
dec
pop
pop
push
addl
notb
subb
pop
test
xor
push
cmp
push
dec
clc
and
jbe
push
in
inc
jl
and
adc
xor
mov
movsl
adc
xlat
jge
add
or
inc
add
jae
adc
mov
xchg
sbb
cmpsl
pop
mov
xchg
scas
idivl
push
push
jge
jae
sbb
mov
out
inc
shl
out
cmc
es
push
adc
mov
pop
sahf
and
pop
out
insl
xchg
or
sub
imul
or
xor
mov
outsl
xor
insl
mov
sahf
push
test
dec
das
les
xor
imul
cltd
lahf
inc
loopne
sahf
inc
dec
cmp
pop
test
sub
mov
lea
and
and
mov
mov
mov
pop
int
out
jb,pn
cmc
popa
int
push
xchg
pop
mov
jle
lret
popa
jle
mov
and
fmuls
or
sbbl
or
stos
xchg
loop
movsl
xchg
jmp
mov
jno
js
jnp,pn
enter
jns
test
movsb
insb
inc
adc
pusha
mov
rorb
mov
aaa
scas
leave
repnz
mov
ret
in
push
divb
sub
icebp
mov
jne
rdtsc
mov
dec
adc
jns
sbb
sub
aas
cmp
and
xor
xchg
xchg
cltd
or
cwtl
mov
in
mov
push
aaa
jmp
aas
sahf
aas
pop
and
pop
lea
push
xchg
shr
jp
xor
mov
fistps
adc
aad
sbb
jo
xor
shll
jp
mov
lods
insb
int3
insl
mov
mov
pushf
inc
sbb
pop
lret
and
sbb
push
inc
mov
cltd
sahf
cmc
jb
mov
lods
cmp
jns
xchg
sub
jnp
ret
add
scas
loopne
icebp
out
movsl
jg
nop
repz
fcompl
mov
adc
lock
pop
repnz
sub
mov
js
sub
push
sbb
iret
in
adcb
dec
ret
dec
sarl
xor
das
lret
insb
sbb
ret
mov
mov
out
sub
into
inc
mov
push
aaa
add
outsl
sbb
jle
sbb
stos
xor
loop
dec
or
fcom
cmp
fldcw
movsb
or
fistpll
mov
pop
imul
push
adc
std
fidivrs
jmp
in
lahf
sbb
icebp
inc
data16
insl
pop
or
ret
rolb
pop
fdivrs
or
int3
push
repz
jg
movsb
xor
lahf
cmp
adc
sub
cmp
xchg
mov
es
mov
jge
mov
ja
push
jl
xchg
leave
and
xchg
leave
or
mov
gs
leave
cs
lds
loop
sbb
xchg
cmpsb
mov
out
aad
lret
arpl
dec
fidivs
inc
mov
lods
fdivrl
lahf
jbe
or
and
xor
fsubs
xchg
mov
dec
lods
nop
mov
pop
jb
insb
jmp
lods
bound
xor
or
dec
pop
pcmpgtb
loopne
adc
test
or
cltd
dec
or
or
shlb
cmp
mov
imul
jecxz
push
scas
sub
push
pop
imul
test
stc
fadd
push
lcall
mov
rorl
xor
push
pushf
inc
or
xor
out
dec
dec
cltd
cwtl
das
sub
sbb
xchg
int3
lds
inc
sub
push
test
aaa
mov
call
fldl
fstps
std
dec
sub
pop
jl,pt
aam
cmp
test
nop
push
les
mov
cmp
sbb
lds
data16
cmpsb
fisubrl
adc
scas
or
cmp
pop
gs
out
addr16
cmp
pop
sub
les
test
jecxz
adc
cmpsb
test
cmp
pop
dec
arpl
outsb
out
fstpt
pop
lahf
rolb
neg
add
stos
add
xchg
inc
xchg
aas
out
stc
lcall
mov
into
pop
mov
inc
filds
shrb
cltd
dec
push
dec
mov
andb
cs
pop
sub
test
mov
pop
outsb
dec
shrb
mov
add
inc
cmp
mov
addr16
icebp
cmp
es
movsl
fstpt
mov
iret
lcall
adc
or
jno
sub
cmp
inc
jle
cld
push
cli
cmp
pop
add
outsb
cltd
or
sub
adc
push
in
mov
and
mov
cmp
xchg
addr16
aaa
adc
mov
nop
adc
or
test
pop
mov
jne
les
push
sti
pop
xlat
xor
aam
pop
mov
out
add
pop
mov
leave
ret
int3
dec
sbb
filds
mov
xchg
push
sahf
popf
mov
ljmp
mov
inc
addr16
cs
mov
daa
mov
jecxz
cmpsl
mov
mov
push
outsb
lcall
fwait
mov
push
and
cs
clc
fdivl
jne
nop
enter
and
mov
add
shlb
adcl
pop
mov
or
cmpsb
mov
sti
loopne
cld
adc
jnp
subb
pop
shll
or
setno
pop
lahf
adc
call
cmp
outsl
mov
mov
cld
push
sti
fsubrs
fldt
pop
out
inc
mov
and
or
leave
aad
sub
test
dec
adc
add
inc
sub
fcoms
mov
nop
xchg
jg
fisubl
add
xor
adc
or
nop
cmc
pop
adc
popf
pop
imul
sub
dec
inc
mov
adc
push
lock
inc
aas
stos
dec
jb
jmp
xor
jle
push
ja
fsub
mov
jl
sbb
add
mov
push
cmp
fs
int3
shll
inc
mov
sub
fstps
inc
cli
je
mov
push
scas
add
rorb
sbb
std
lds
call
lods
add
lods
imul
lret
int3
jb
test
cmp
and
loope
iret
add
sub
add
hlt
mov
adc
xchg
mov
popa
mov
lcall
push
roll
cmpl
dec
mov
jl
fstpt
clc
jmp
or
push
cli
pusha
inc
jns
mov
push
xchg
fcmovu
loopne
cmpl
xchg
test
mov
pop
test
pop
mov
pop
in
mov
pop
and
push
cmpsl
xchg
jnp
xor
movsl
sbb
fstpt
ficoml
mov
push
bound
js
sbb
jns
and
cmp
ljmp
pop
xchg
sbb
pop
dec
loop
push
imulb
fwait
lods
das
sbb
popf
or
int
jle
int
jle
or
lahf
lds
sbb
xor
lret
mov
in
pop
cmp
adc
xlat
and
inc
repnz
adc
cmp
daa
and
loope
xor
pusha
sarl
lret
std
fistl
add
movsb
mov
shlb
ret
xlat
mov
mov
inc
jp
inc
icebp
lea
iret
and
push
add
and
xchg
bound
mov
sti
adc
lret
leave
xor
cld
mov
in
pushf
fsub
out
dec
popf
repz
in
jae
add
mov
xlat
je
jb
sub
inc
xchg
pushf
int
cmp
cmp
scas
lret
dec
mov
jnp
cmp
pop
out
sbb
mov
cmp
add
inc
imulb
repz
mov
adc
mov
shr
ds
rol
or
cs
lea
jp
push
outsl
xor
cmp
addl
js
jbe
adc
pusha
cmp
or
stos
pop
in
faddl
mov
pop
popf
fwait
icebp
andl
jns
push
ret
outsb
adc
out
pop
xchg
and
int
inc
fs
test
jp
mov
adc
sbb
xor
mov
cli
scas
inc
negl
in
inc
dec
ret
in
iret
pushw
ret
in
subl
pop
pop
sarl
mov
loope
andb
xchg
mov
or
ljmp
xor
cmc
mov
mov
cmpsb
mov
lahf
pop
adc
push
lcall
cltd
add
imul
in
mov
mov
pop
sub
push
mov
fs
push
insl
inc
jl
lahf
jg
and
xlat
test
push
cmp
add
jmp
mov
subl
xchg
out
call
mov
mov
xor
test
inc
aas
int
mov
adc
test
mov
lock
mov
movsb
mov
mov
and
jl
xchg
mov
movsb
hlt
in
sub
dec
pop
mov
mov
les
adc
sbb
rorb
subl
cli
jge
pop
push
cmp
sbb
mov
aas
fs
js
adc
je
rcl
testb
adc
mov
out
push
push
les
out
jmp
mov
xlat
movsl
movsl
inc
xor
in
lahf
cmp
into
mov
or
jecxz
jno
mov
out
mov
lds
repz
into
sub
loop
outsb
out
sbb
inc
ret
das
pop
lods
dec
mov
rol
sub
mov
xchg
sbb
adc
and
xor
les
mov
rdmsr
orl
cli
sbb
testb
mov
test
scas
hlt
and
test
lock
aam
cli
cmp
lret
xchg
cmp
sti
mov
dec
movsb
bound
lods
scas
pop
sub
dec
cmp
leave
movsl
pop
aas
lds
pop
mov
aas
mov
xchg
sarb
xchg
jmp
xchg
scas
sub
and
es
mov
rorb
mov
cli
call
xchg
lcall
in
mov
sbb
fdivrs
push
jne
andl
js
add
sbb
dec
cmpl
aaa
imull
push
push
adc
scas
flds
or
cwtl
and
jno
add
mov
lea
inc
ss
pop
out
cmpsb
mov
push
sbb
add
xchg
jbe
adc
or
es
cmp
adc
add
inc
mov
mov
cs
rorb
mov
add
sahf
push
decb
push
pop
add
jno
mov
jns
les
test
bound
orl
xlat
push
sbb
jne
jg
xor
test
adc
pop
lret
xchg
aam
movsl
xchg
adc
ljmp
sbb
fnstcw
xchg
jp
cwtl
lods
pusha
mov
adc
movsb
repnz
dec
in
cmp
test
sahf
inc
cmp
fidivrs
and
shll
outsb
shl
loopne
out
aas
mov
cmpsl
lea
xchg
mov
mov
inc
xchg
or
mov
leave
push
testb
pop
push
lds
xchg
cmp
xchg
jmp
sbb
out
movb
xor
lahf
sbb
mov
fimull
hlt
in
and
repz
jbe
ss
add
aad
mov
push
and
jge
in
mov
fisubrl
add
das
in
jae
or
insl
dec
jbe
shl
xor
adc
cmpsl
int
in
test
mov
data16
jmp
mov
mov
stos
pop
adc
xchg
out
jl
imul
js
mov
jl
mov
data16
cmp
imul
cmp
push
cld
repz
mov
outsb
cmpps
ds
fs
jmp
adc
ds
lcall
add
idivb
dec
cmpsl
mov
push
dec
mov
popa
ds
mov
ss
add
sbb
testl
inc
or
cmp
test
sub
sbb
jg
test
sarb
inc
fwait
andb
cmpsb
or
cmp
fidivl
test
das
lea
mov
xchg
push
inc
fsubrs
mov
sbb
push
into
dec
mov
loopne
add
dec
push
push
jae
xlat
inc
xchg
int
push
outsb
sbb
in
lahf
pop
popf
push
fs
lret
inc
or
jns
xchg
dec
aaa
adc
aad
rol
ret
sti
mov
cmpsl
add
dec
pop
cmp
push
push
and
sti
in
push
inc
pop
hlt
pop
jnp
lcall
jbe
adc
insb
cld
pushl
loop
inc
addr16
outsl
adc
cld
int
pop
pop
pop
aaa
and
aaa
xchg
jne
mulb
loopne
adc
into
loopne
int
sub
inc
add
test
pop
push
mov
mov
inc
negl
push
cli
push
ja
xchg
test
test
outsl
fwait
rcrl
in
scas
inc
sub
lods
push
xchg
mov
popa
adc
dec
fmull
push
ljmp
aad
mov
int
testb
jg
cltd
xchg
pop
aaa
sbb
mov
aad
jno
fadd
cmp
dec
je
pop
jmp
mov
mov
mov
cmp
mov
ljmp
mov
ficoms
push
unpckhps
jg
sahf
aad
push
fimull
adc
sbb
addr16
cmpsb
outsb
and
std
test
pushf
cs
mov
fwait
iret
push
pop
sbb
mov
out
roll
inc
push
pop
das
mov
jl
xlat
rol
mov
add
bound
int
in
in
xor
or
add
mov
mov
stc
jo
mov
jno
dec
xor
pushf
cmp
in
imul
repnz
add
iret
inc
jge
shrl
adc
leave
aam
aas
in
fistl
icebp
jno
into
pop
jle
in
scas
pusha
xchg
jbe
and
xchg
cmp
stos
js
push
inc
adc
add
std
ffree
int
test
mov
mov
xor
inc
pushf
int3
or
mov
ja
pop
pop
into
js
filds
dec
bound
jle
sbb
or
jno
mov
nop
fnstcw
mov
or
das
mov
cmp
adc
jne
dec
pusha
pcmpgtb
dec
xchg
cmp
scas
aam
jmp
jg
stos
pop
cmpsl
xlat
mov
mov
push
inc
rep
cmc
in
leave
js
cmp
add
loope
mov
cmpsb
cmp
popl
std
out
out
mov
push
into
inc
sbb
addr16
pop
fldenv
bound
xor
push
dec
lcall
mov
xor
sbb
sub
pop
stos
dec
ret
mov
aam
jecxz
sub
idivl
dec
xor
outsb
xor
xchg
jp
js,pn
adc
rclb
pop
xchg
pushf
xchg
js
adc
lock
cmc
push
bound
popf
inc
and
rcll
jle
idivl
shll
mov
sub
leave
std
pushf
add
out
loope
push
mov
int
push
iret
into
call
jae
ljmp
xchg
cmp
inc
out
sbb
sbb
mov
add
pop
outsl
push
int3
jecxz
mov
sbb
sub
adc
cmpsb
cltd
xchg
dec
aam
xor
je
fwait
jae
enter
in
jecxz
mov
or
mov
mov
add
bound
mov
aas
test
xor
movsl
decl
push
out
push
dec
lods
push
shll
pop
inc
cmp
xor
xchg
mov
das
fwait
hlt
cmp
aam
or
cmovo
adc
js
ss
adc
into
sbb
cmp
sbb
int
dec
adc
repnz
xchg
movsl
shl
pop
repnz
sarl
shr
rolb
pushf
test
mov
mov
and
mov
sbb
rorb
inc
popl
imul
das
cltd
or
test
adc
mov
pop
daa
fcompl
or
je
dec
aas
fldenv
push
mov
insl
xor
dec
push
xchg
inc
mov
test
mov
mov
nop
mov
dec
inc
std
addr16
adc
adc
lock
int
shlb
aam
adc
inc
ret
xchg
pop
xor
test
pop
jo
mov
stc
fldt
lods
xor
mov
fsubr
dec
clc
adc
xacquire
js
mov
dec
jo
imul
jae
repz
loop
loopne
adc
icebp
aad
pushf
sub
sti
or
call
xchg
fdivrs
jno
push
lea
jne
sub
pop
repz
mov
scas
xor
dec
or
sbb
sbb
scas
xchg
jl
jb
cmp
pop
cmp
mov
ds
addr16
push
push
pop
push
mov
repnz
inc
into
jns
mov
leave
jecxz
addr16
mov
adc
clc
sbb
add
sub
in
into
jmp
stc
mov
roll
call
or
cmp
mov
nop
fisttpl
mov
shlb
cwtl
popa
pop
and
mov
data16
mov
push
mov
dec
pop
sub
push
mov
stc
out
andl
mov
sub
inc
mov
js
pop
jnp
lret
out
fs
xchg
add
mov
fs
sbb
js
sub
pushf
jae
sub
pop
fstl
and
aaa
aaa
push
das
xor
sbb
outsl
cwtl
jmp
cmc
cld
in
nop
dec
inc
hlt
sub
push
pop
test
nop
jbe
dec
movsb
cmp
add
fimuls
testb
shrb
jb
nop
push
das
mov
in
sahf
jl
mov
mov
aas
movsl
or
cmp
ds
lret
jbe
pop
ljmp
mov
icebp
cld
sbb
sbb
insl
das
mov
test
cmp
sub
mov
cmp
and
sbb
add
loope
rolb
hlt
dec
outsl
dec
cmp
pop
jmp
push
mov
daa
sub
mov
xchg
pop
mov
dec
dec
add
fdivp
dec
loop
lret
mov
notb
jmp
jb
aas
xor
mov
aas
cli
test
std
push
xor
cmpsl
jg
xchg
shr
rcrb
shrb
sbb
aaa
or
add
fnstenv
jge
ret
mov
or
dec
shlb
shll
push
lds
jl
jp
out
xorb
dec
mov
lods
mov
adc
mov
pusha
adc
mov
xchg
cmp
inc
dec
xchg
jmp
mov
cmpsl
and
je
dec
xchg
pop
pop
jbe
arpl
adc
fmul
xor
in
aas
jno
shll
xor
mov
mov
mov
adc
fs
enter
cmpb
inc
in
dec
imul
cmp
push
mov
and
repnz
iret
inc
int3
add
jbe
dec
enter
sub
xchg
mov
movsl
jnp
push
or
add
dec
dec
or
call
mov
insb
push
ds
jmp
ret
rolb
adc
stos
nop
add
cs
pop
or
dec
ljmp
sub
add
stos
rorl
push
lret
sahf
cs
dec
test
sti
push
bound
mov
inc
shufps
adcl
cmpsb
xor
sbb
inc
sbb
sub
sub
cmp
rol
cs
lock
shlb
hlt
push
xchg
out
pop
push
push
push
adc
xchg
and
sbb
fsubrl
bound
movsl
mov
and
adc
call
push
cmp
push
mov
in
mov
roll
cmc
in
mov
dec
insl
jns
cwtl
lods
cmpsl
xacquire
sub
inc
and
jns
daa
jmp
pop
enter
fistpll
pop
std
ja
dec
mov
push
or
lret
push
outsb
rorb
mov
movswl
push
mov
fwait
push
cmp
xlat
xchg
and
lret
inc
xor
adc
in
stos
push
jne
sbb
sub
mov
dec
xchg
popa
pop
in
lods
sbb
rorl
or
outsl
mov
outsl
inc
mov
xchg
mov
or
ljmp
rcrl
push
or
jbe
sbb
or
cli
xor
inc
inc
push
and
dec
inc
lock
insb
std
pop
mov
inc
sti
fucomp
loop
scas
gs
push
or
inc
ds
rcr
in
stos
jl
xchg
