and
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
cmp
inc
add
jl
sbb
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
xor
inc
add
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
loope
inc
add
lea
push
mov
mov
repz
sarl
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
sarb
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
xor
popf
xor
push
and
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
sub
adc
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
sub
std
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
das
inc
add
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
mov
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
sbb
inc
add
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
or
inc
add
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
bound
je
add
or
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
sahf
inc
inc
add
inc
cwtl
shl
mov
add
add
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
add
dec
clc
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
aaa
sub
inc
mov
add
add
inc
mov
add
add
inc
mov
add
add
adc
add
lods
add
add
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
inc
add
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
inc
add
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
roll
add
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
stos
dec
inc
add
xchg
inc
lock
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
add
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
add
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
call
cmp
pop
je
mov
xor
mov
stos
stos
xor
mov
push
mov
call
mov
pop
mov
lea
push
add
mov
push
push
call
test
jns
jmp
mov
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
lea
call
jmp
push
lea
call
xor
call
jmp
push
mov
sub
push
lea
mov
test
jne
inc
add
or
andl
andl
lea
mov
push
lea
lea
movl
mov
call
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
xor
mov
call
lea
xor
call
lea
xor
call
lea
call
lea
call
pop
leave
ret
push
push
push
push
push
push
push
movl
lea
mov
mov
push
push
call
mov
mov
cmp
jne
lea
mov
mov
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
push
xor
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
push
lea
push
call
inc
add
les
jmp
push
mov
and
mov
sub
cmpl
push
push
push
mov
jle
cmpl
jle
fldl
mov
fstl
fildl
fstl
fidivrl
fstl
fcompp
fnstsw
test
je
lea
fldl
sub
fldl
fmul
fxch
fstl
fmull
faddp
fstpl
call
call
fldl
fmull
mov
faddl
fstpl
call
add
call
test
mov
mov
mov
movl
jne
xor
cltd
idivl
cmp
mov
jg
lea
test
mov
mov
mov
jg
test
jg
test
jg
testb
jne
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
mov
fildl
lea
fldl
fdivr
fxch
fstpl
fildl
fdiv
fstpl
das
dec
inc
add
fstpl
fildl
mov
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fidivrl
fstpl
call
mov
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
test
je
addl
mov
test
mov
je
jmp
mov
and
neg
sbb
inc
ret
push
mov
mov
mov
push
push
xor
push
add
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
pop
pop
pop
ret
mov
jmp
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
cmp
je
pushl
mov
pushl
push
call
mov
lea
call
mov
jmp
mov
mov
jmp
push
mov
and
push
push
mov
push
push
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
test
jne
pushl
pushl
pushl
push
call
testb
jne
push
lea
push
call
test
je
mov
andb
test
je
cmp
je
mov
or
mov
xor
inc
pop
pop
pop
mov
pop
ret
cmp
jne
movzwl
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
pushl
xor
pushl
pushl
push
call
mov
movzwl
push
push
push
mov
call
test
je
mov
mov
jmp
push
push
pushl
mov
call
jmp
push
mov
call
test
je
orb
cmpl
jne
mov
push
push
mov
call
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jne
mov
mov
push
call
lea
call
lea
call
lea
call
inc
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
inc
cmpl
push
mov
jl
jg
cmpl
jbe
mov
mov
lea
push
call
test
je
push
mov
mov
mov
push
mov
call
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
mov
push
call
test
jne
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
pushl
mov
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
test
pop
pop
jne
cmpb
je
pushl
mov
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
mov
mov
lea
push
push
call
test
jne
xor
cmp
je
lea
push
mov
mov
mov
mov
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
add
sub
test
call
test
mov
je
mov
mov
push
call
cmpl
jl
jg
cmpl
ja
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
mov
call
push
push
lea
push
pushl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
add
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
call
push
push
lea
push
pushl
call
pushl
mov
pushl
call
test
pop
pop
jne
xor
lea
call
mov
test
jne
lea
call
mov
test
je
mov
push
call
lea
call
mov
test
je
mov
push
call
lea
call
xor
pop
pop
pop
leave
ret
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
xor
push
mov
call
mov
add
cmp
jne
push
call
xor
add
cmp
je
mov
mov
movl
sub
mov
mov
push
call
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
test
je
mov
push
call
add
test
je
mov
mov
push
push
push
mov
call
mov
test
js
mov
mov
push
call
pop
pop
mov
pop
pop
pop
ret
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
cmpl
je
push
mov
test
push
jne
cmpl
jne
pop
pop
pop
leave
ret
cmpl
je
xor
xor
mov
mov
mov
xor
push
pushl
push
push
pushl
push
push
call
jmp
testw
je
jmp
mov
cmpl
je
pushl
mov
pushl
mov
pushl
call
xor
ret
mov
add
jmp
push
mov
mov
test
jg
push
mov
call
test
jne
pushl
call
pop
ret
cmp
jle
jmp
mov
jmp
mov
mov
mov
push
push
call
xor
ret
push
mov
mov
sub
test
push
push
push
je
push
lea
xor
call
mov
cmp
ja
mov
push
push
push
lea
push
call
cmpl
jne
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
mov
lea
rep
xor
cmp
mov
mov
je
push
lea
call
push
push
lea
push
push
call
add
test
lea
js
mov
push
call
push
lea
push
push
call
add
test
js
mov
push
push
call
add
cmp
je
mov
lea
push
push
push
mov
movl
call
mov
push
push
push
push
push
call
mov
mov
mov
add
lea
push
push
lea
push
push
call
mov
test
jbe
mov
mov
xor
jmp
lea
mov
test
jne
add
add
cmp
jb
mov
push
call
mov
add
push
xor
mov
lea
mov
call
mov
cmp
je
mov
push
mov
call
test
js
lea
mov
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
mov
lea
push
push
add
call
mov
mov
add
push
mov
push
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
call
mov
add
jmp
push
mov
push
push
push
mov
mov
test
jne
cmp
je
incl
pop
leave
ret
cmpl
je
cmpl
jne
mov
xor
test
je
lea
push
push
mov
mov
push
call
mov
test
mov
je
mov
push
pushl
push
call
lea
call
jmp
incl
cmpl
jne
xor
push
mov
push
push
call
push
call
add
jmp
push
mov
and
sub
push
push
mov
xor
cmp
push
jne
mov
pushl
call
mov
call
cmp
jne
pop
pop
xor
pop
mov
pop
ret
push
call
cmp
pop
je
mov
lea
movl
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
lea
push
mov
mov
mov
call
push
lea
push
lea
push
mov
call
add
lea
push
mov
lea
call
mov
push
push
mov
mov
mov
lea
push
push
call
jmp
int3
int3
int3
sub
mov
mov
push
mov
push
push
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
inc
and
mov
pop
mov
pop
and
mov
pop
add
ret
mov
sub
cltd
sub
sar
add
jmp
mov
sub
add
jmp
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
sub
push
push
push
xor
mov
mov
push
lea
lea
mov
mov
mov
mov
push
push
call
mov
push
jp
xchg
mov
add
add
in
add
aam
mov
add
add
stc
add
ljmp
mov
add
add
xchg
andl
mov
sahf
mov
sahf
add
add
mov
test
mov
loop
add
out
cld
add
add
add
out
cltd
jb
jb
xchg
int3
push
push
mov
add
push
push
push
push
push
call
fnsave
notb
mov
push
add
sbb
add
cmc
out
imul
mov
ljmp
outsl
add
xchg
mov
int
mov
lods
jnp
mov
je
push
jne
mov
mov
lea
pop
popl
push
push
push
lea
push
push
push
push
call
lret
jb
pop
push
add
add
add
add
add
mov
mov
lods
loopne
in
out
in
stc
pop
mov
ret
lret
add
jae
test
push
xchg
add
add
mov
addr16
xlat
incb
add
mov
xchg
add
jo
aam
bound
push
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
jmp
add
rolb
add
les
movl
add
add
add
and
mov
pop
mov
xchg
rcrl
push
sahf
mov
lahf
mov
add
mov
xchg
cwtl
stos
js
add
lcall
ja
add
add
stos
arpl
xchg
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
lcall
xchg
cltd
add
add
loope
jmp
pop
jmp
arpl
add
mov
add
loopne
add
into
add
add
movl
fldcw
lret
add
pop
lahf
jae
mov
lea
pop
call
push
lea
push
push
call
fwait
out
pop
add
fdivr
in
add
mov
add
add
add
cltd
mov
mov
add
mov
add
cmc
stos
cmpsl
fists
movsl
add
ret
add
add
add
add
shll
nop
movl
lea
pop
call
push
push
push
push
call
add
pop
fldt
test
icebp
add
add
icebp
js
add
test
mov
push
lret
push
add
add
stos
add
bound
call
jmp
push
lea
push
call
les
add
pushf
push
add
add
mov
out
call
mov
add
shlb
add
popf
jae
cltd
mov
cli
imul
or
push
push
push
push
push
push
lea
push
call
add
pop
add
add
popl
push
icebp
shl
add
cltd
lds
stos
sti
fldl
add
add
add
test
in
add
test
add
add
pop
push
jo
add
rcr
callw
std
mov
push
xchg
fstl
push
iret
into
mov
popf
in
jge
ret
add
iret
in
fstl
mov
lea
pop
mov
push
push
call
add
clc
bound
lret
icebp
cli
leave
jl
mov
pop
in
lcall
add
add
cmc
add
xchg
add
ficoms
add
add
xchg
mov
pop
add
aad
test
cld
lea
pop
mov
add
push
push
call
jbe
add
add
add
add
xchg
jmp
mov
pop
lea
movsb
lock
fdivrs
pop
data16
movsl
add
movsl
add
iret
nop
fcmove
push
pushf
xchg
add
loopne
shll
add
add
loop
add
add
add
add
ret
pop
add
mov
loope
add
jo
aam
bound
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
popf
mov
add
add
add
add
in
add
ret
cmpsl
fwait
cmpsb
mov
add
jmp
add
mov
ljmp
gs
imul
jbe
push
mov
add
mov
mov
add
negb
xchg
add
add
add
pop
push
std
mov
lea
pop
add
push
push
push
push
push
lea
push
push
call
incb
pushf
mov
nop
add
add
enter
add
push
add
jle
flds
test
out
add
int
stos
add
add
out
lods
add
add
mov
fildl
add
add
lret
add
clc
add
movb
lods
cltd
scas
add
gs
fbld
movsb
mov
add
mov
lea
pop
mov
push
push
push
push
push
push
push
call
pop
add
jecxz
jae
rcrl
stos
mov
lcall
pop
add
fs
add
fldl
mov
push
add
int3
imul
mov
out
fildl
orl
pop
repnz
jecxz
cltd
add
shl
add
out
fimull
pop
xor
push
lea
push
push
push
push
push
push
push
call
mov
add
addb
jnp
rcr
arpl
in
add
push
pop
scas
add
push
icebp
fistl
icebp
testl
incb
js
lea
cmpsb
add
pop
add
push
push
add
push
or
inc
add
sub
sub
shl
pop
ror
pop
push
lea
push
push
call
out
popfw
int
scas
scas
push
xchg
jbe
popl
pop
stos
add
iret
jge
mov
add
pusha
add
add
mov
add
add
add
fsubl
ror
in
jl
jno
roll
add
fwait
pop
add
mov
in
rorb
add
pop
pushl
push
push
push
push
lea
push
call
in
pushf
rcl
add
aam
mov
mov
add
pop
jle
fwait
arpl
add
test
enter
mov
add
add
add
int3
add
stos
pop
add
add
cld
fs
cli
add
lea
pop
call
mov
push
lea
push
push
push
push
lea
push
call
add
add
add
add
pop
ficomps
add
js
add
jge
xchg
add
movl
mov
add
cltd
add
fs
scas
call
sbb
inc
loopne
add
add
shr
jg
push
push
lea
push
push
lea
push
call
fs
ja
pop
add
push
add
pop
add
jae
jbe
push
add
imul
fwait
rolb
aad
int
stos
mov
sti
xchg
mov
iret
add
jecxz
mov
add
mov
xchg
les
add
out
cmpsb
add
add
add
lea
pop
lea
push
push
lea
push
call
add
aad
add
xchg
mov
xchg
mov
fyl2x
xchg
fiaddl
addb
push
mov
lret
jbe
pop
add
mov
int
push
add
jecxz
add
mov
int3
add
push
jle
in
add
xchg
mov
rcrl
filds
testl
lea
pop
push
pushl
push
push
push
push
push
push
push
lea
push
call
jmp
push
lds
movsb
popf
test
add
push
out
add
jne
fwait
mov
add
cmpsb
int
movsl
add
cwtl
add
add
add
add
cmc
cwtl
add
add
add
add
nop
add
mov
nop
add
add
add
jne
lret
add
lea
pop
pushl
push
push
lea
push
push
push
push
call
sar
push
push
xchg
cli
add
xchg
pop
in
pushf
push
add
mov
add
les
jmp
add
jo
add
add
mov
add
movsb
into
mov
mov
loope
ret
hlt
lea
pop
call
push
push
lea
push
push
push
push
call
add
add
ja
leave
popa
mov
add
data16
js
jo
jp
mov
add
add
add
out
lock
mov
pop
lahf
add
loop
xchg
add
mov
lret
in
fdivrs
add
popa
mov
lea
pop
pushl
push
push
push
push
call
sub
les
mov
movsb
mov
add
add
jle
rolb
les
add
add
push
add
leave
add
clc
jl
push
add
add
add
mov
jo
add
in
add
xor
add
add
mov
lea
pop
pushl
call
push
push
shl
push
xor
add
add
sub
lea
sub
not
inc
xor
pop
not
dec
pop
push
push
push
push
push
push
push
lea
push
push
call
mov
addb
ret
add
scas
jecxz
loop
flds
hlt
add
add
add
add
add
loopne
out
add
xabort
jo
mov
jl
add
add
add
test
mov
add
mov
movsl
add
add
arpl
lock
add
pop
pushl
push
lea
push
push
push
push
call
add
jo
mov
mov
add
mov
iret
jo
add
cltd
mov
lods
call
add
jae
add
lahf
jae
add
jge
in
pop
add
bound
add
adc
call
push
lea
push
lea
push
call
mov
int3
add
imul
add
fldl
call
test
movl
stc
insb
stos
mov
xchg
jp
filds
test
lret
mov
les
lret
test
add
pop
in
cwtl
add
or
push
push
push
inc
shl
add
inc
push
or
not
add
add
dec
inc
sub
shr
lea
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
imul
fadds
mov
loopne
nop
testb
mov
clc
add
jge
popa
aad
xchg
add
add
jns
mov
in
jb
add
cltd
jae
xchg
add
jge
add
mov
add
js
add
mov
add
mov
aam
bound
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
jle
pushf
jge
stos
jae
int
roll
xorl
pop
mov
mov
imul
add
in
mov
add
add
add
pop
ret
outsl
add
add
push
add
add
add
pop
push
push
push
push
push
lea
push
push
push
call
arpl
aad
add
mov
aam
nop
mov
add
pop
push
add
mov
ja
add
sbb
add
fiadds
lods
add
add
add
jnp
mov
add
pop
call
mov
push
push
push
push
call
lret
pop
add
add
add
mov
add
add
pop
mov
mov
cmc
add
outsl
jecxz
xchg
add
pop
arpl
jp
int3
jp
jmp
in
lods
out
pop
add
add
mov
add
mov
stos
jo
cli
jl
test
add
add
loope
add
add
add
mov
lea
pop
push
push
push
lea
push
push
push
push
lea
push
call
test
jo
lds
add
addr16
fwait
add
add
add
lret
movsl
add
add
addb
add
icebp
adc
add
mov
rolb
loopne
pop
add
add
add
in
arpl
ja
add
fwait
add
out
jp
movsl
mov
add
mov
lea
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
rolb
add
xchg
popa
out
imulb
add
cltd
xchg
lods
push
add
mov
add
add
cli
jl
repnz
cmpsb
add
sar
nop
addb
lods
add
lea
pop
mov
push
push
push
push
push
call
jnp
mov
shll
fiadds
jmp
pushf
cmc
adcl
fisubs
out
test
jno
push
xchg
loop
add
add
push
jo
add
mov
fsub
add
enter
mov
adc
add
push
push
push
lea
push
push
lea
push
push
push
push
call
js
jnp
add
add
mov
add
cld
gs
add
add
add
mov
add
xchg
stos
add
int3
add
mov
push
scas
mov
ficoml
out
sti
mov
add
push
mov
iret
add
pop
push
aam
bound
add
push
lea
push
call
int
jp
rolb
pop
jo
mov
lods
fnstsw
add
jl
xorb
popf
add
repnz
add
test
add
rcr
add
call
mov
movb
pop
add
push
push
push
lea
push
lea
push
call
add
add
add
sti
in
leave
add
mov
jb
add
pusha
add
mov
mov
subb
add
hlt
add
add
xchg
xchg
add
xchg
mov
add
pop
add
mull
jno
mov
lea
pop
mov
xor
push
lea
push
push
push
push
push
call
add
stos
in
push
pop
push
xchg
std
idivl
lret
idivb
add
add
stos
pop
ljmp
mov
add
ficoms
jnp
adcl
add
faddp
js
add
add
mov
lea
pop
add
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
jge
lods
add
jns
lcall
add
add
addb
mov
out
ja
mov
add
loope
add
pop
add
add
mov
add
rol
add
push
add
mov
bound
mov
lea
pop
push
mov
push
push
push
push
lea
push
call
scas
fcomp
cli
lds
add
push
push
out
add
repnz
add
push
into
out
mov
movsl
add
add
fildl
jne
jge
add
loopne
mov
rclb
lea
pop
xor
push
lea
push
push
push
push
push
call
push
add
add
insb
add
cmc
add
add
out
add
mov
insb
add
add
lds
jp
insb
mov
add
pop
add
push
add
xchg
add
add
je
lea
bound
add
fstl
pop
addb
imul
roll
jb
pushf
add
add
xchg
lea
pop
add
push
push
push
push
push
push
push
push
push
call
imul
add
add
add
imul
add
mov
in
in
lahf
in
add
jmp
jae
mov
add
xchg
add
add
pop
add
add
pop
add
pop
push
lea
push
push
push
push
push
push
push
call
movsl
iret
add
addr16
add
jnp
rol
popf
test
xchg
ja
add
mov
pop
add
add
bound
je
roll
add
mov
mov
sar
lret
scas
add
add
mov
add
add
repnz
add
add
add
add
je
xchg
out
rcrb
and
dec
add
icebp
xchg
xor
push
push
push
push
push
call
add
add
mov
rorl
jmp
mov
pop
add
add
out
test
push
add
mov
mov
add
xchg
add
add
data16
gs
iret
out
xchg
pop
mov
lea
pop
push
push
push
push
lea
push
push
push
push
call
jmp
jb
fisubrl
enter
js
add
fisubl
mov
push
add
jl
mov
outsl
clc
add
mov
std
loopne
add
push
mov
lea
pop
mov
xor
push
lea
push
push
push
push
lea
push
push
call
add
add
insb
ret
in
add
mov
add
add
add
add
sahf
scas
add
jb
out
loop
add
jmp
cli
enter
shl
jge
add
scas
mov
add
pop
sub
push
push
push
push
push
call
xchg
add
aad
xchg
add
test
gs
jge
add
add
add
enter
jnp
popa
hlt
ret
add
add
mov
add
add
mov
add
repnz
ja
xchg
movsb
add
jl
out
test
add
pop
loope
add
scas
mov
clc
addb
add
shrl
pusha
adc
pop
push
push
push
push
push
push
push
push
call
add
imul
call
jge
icebp
mov
pop
lea
adcb
xchg
add
fsub
add
aam
arpl
add
ret
addl
push
add
mov
push
shll
loope
add
mov
data16
add
and
movsb
push
add
pop
pop
mov
push
push
push
push
push
push
push
call
stos
les
add
jbe
push
xchg
add
xchg
add
fidivrl
add
push
push
add
filds
add
pop
testb
add
enter
add
je
testl
lods
pop
mov
lods
aad
pop
add
cmpsl
aad
mov
outsl
mov
fmull
pop
in
ret
add
add
push
ror
sub
pop
add
push
push
lea
push
push
call
mov
andb
cli
sarl
add
lods
sarb
pop
add
mov
call
add
add
mov
lock
enter
in
cmc
add
out
jmp
add
push
mov
add
mov
lea
pop
mov
xor
push
push
push
push
call
in
push
add
loope
mov
add
fmul
add
movsl
mov
les
add
jo
push
mov
push
add
fyl2xp1
mov
data16
test
ret
lea
pop
mov
xor
push
push
lea
push
push
push
lea
push
call
pop
incb
sti
add
jmp
add
add
pop
test
pop
cli
mov
pusha
jnp
add
push
mov
enter
mov
add
pop
jae
add
xchg
in
jmp
jae
add
mov
push
add
add
jns
test
add
mov
ja
les
dec
sub
xor
push
lea
push
call
mov
mov
add
out
xchg
pushf
jmp
add
xchg
add
movsl
imul
loope
pop
add
cld
rcrl
add
add
mov
data16
imul
add
xchg
jnp
lret
mov
push
lret
add
or
xor
push
push
push
push
lea
push
lea
push
push
call
addl
int3
xchg
incb
add
jmp
mov
movsb
int
add
mov
add
call
rolb
mov
add
add
pop
popa
jmp
mov
add
push
repnz
add
add
push
mov
lea
pop
add
push
shl
shr
lea
pop
add
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
jbe
data16
lods
mov
add
loope
ljmp
pop
not
add
jge
lea
mov
jno
cmpsb
mov
fstcw
sbb
xchg
call
add
add
push
add
mov
lea
pop
add
push
shl
add
add
pop
mov
push
push
shr
rol
add
xor
push
sub
add
xor
sub
sub
sub
pop
rol
not
pop
push
lea
push
push
push
push
push
call
fbld
add
add
fldl
pop
add
sti
hlt
add
jle
repnz
add
test
fiaddl
mov
add
mov
add
mov
pop
mov
add
mov
test
cli
sbbl
js
add
pop
pushl
push
add
not
pop
call
push
push
push
sub
push
sub
add
ror
sub
xor
inc
ror
sub
pop
rol
pop
push
push
lea
push
lea
push
lea
push
push
push
push
call
jae
jbe
fistl
stos
mov
add
add
add
jbe
add
add
jae
mov
lods
popf
clc
fmuls
stos
add
lods
aad
add
jns
cmpsb
add
pop
push
push
pop
push
push
push
lea
push
call
xchg
add
ljmp
add
cmpsl
add
add
enter
add
add
add
xor
add
pop
sti
add
mov
pop
mov
add
clc
je
jmp
mov
aam
shl
loope
add
mov
fmull
shrl
loope
arpl
mov
add
test
mov
lea
pop
call
mov
push
ror
pop
push
push
push
push
push
call
out
fsubp
jae
stc
mov
mov
mov
scas
xchg
add
add
mov
add
add
push
imul
add
data16
add
repnz
int
lods
bnd
add
add
push
les
pop
in
push
lea
push
push
lea
push
push
lea
push
call
mov
add
fs
jmp
fldt
push
test
mov
test
add
xchg
fwait
push
add
lock
negl
add
stos
mov
pop
add
loope
mov
shll
xchg
jns
add
stos
add
mov
lea
pop
add
add
push
push
push
push
lea
push
push
call
xchg
insb
add
add
int
add
add
add
lods
add
jno
mov
int3
out
fwait
imul
add
test
mov
add
xchg
ljmp
mov
add
test
pop
lcall
jb
mov
in
add
add
add
add
orl
outsb
add
push
sub
dec
pop
mov
xor
push
lea
push
call
xchg
add
add
shlb
jb
add
sahf
test
iret
add
pop
popl
scas
add
add
add
add
jmp
mov
subb
add
movsl
gs
add
testb
out
mov
iret
add
jae
add
add
add
lea
pop
add
push
shr
dec
sub
pop
push
mov
push
push
push
push
lea
push
push
push
push
call
mov
mov
mov
stos
lret
pop
mov
add
pushf
test
test
in
sti
ficoml
add
out
add
add
out
clc
add
add
push
add
add
repnz
add
int3
xchg
add
jge
add
add
sbb
xor
push
push
push
call
pop
stc
jecxz
cmpsl
add
adcl
mov
push
mov
cli
insb
add
mov
add
stos
test
in
jle
jno
add
bound
stc
add
add
add
add
movsl
cld
xlat
int
add
pop
add
push
add
sub
pop
add
pop
push
push
push
push
lea
push
push
push
lea
push
call
out
add
add
add
add
push
add
xchg
arpl
add
add
add
add
pop
add
sti
push
mov
int3
aam
stos
mov
add
mov
add
add
out
xlat
mov
add
add
in
data16
cli
into
add
push
add
aam
bound
pop
mov
push
push
push
push
push
push
push
push
push
push
call
lcall
fldl
pop
cwtl
cmpsl
sbbl
xor
add
add
out
pop
add
lea
add
add
cmc
les
add
shlb
add
add
add
add
popa
add
mov
lea
pop
xor
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
sbbb
add
xchg
jmp
popf
jne
lods
rcrl
add
add
add
add
push
jne
std
fists
mov
lea
pop
add
push
lea
push
push
call
push
imul
add
sarb
add
add
add
add
movsl
add
add
enter
mov
mov
mov
pop
xchg
loop
stos
xchg
insb
add
imul
add
add
js
lret
mov
sbbb
imul
lea
pop
rep
push
push
push
push
push
push
push
call
shrb
mov
rcll
ljmp
push
mov
add
add
mov
add
add
mov
incb
mov
nop
xchg
out
add
in
fstl
add
add
insb
imul
stc
add
add
int3
lea
pop
mov
xor
push
push
lea
push
call
mov
ret
bound
push
in
add
out
mov
test
add
insb
add
fildl
add
jge
fcmovnb
add
addl
add
add
add
mov
jnp
lret
jae
test
add
add
push
jp
loopne
add
imul
test
add
pop
mov
push
push
push
lea
push
push
push
push
push
call
in
in
add
popa
add
addl
pop
add
add
add
add
add
in
out
out
add
add
fwait
xchg
lea
cltd
push
add
jb
lret
shlb
add
add
add
mov
bound
add
iret
add
test
add
pop
xor
push
push
lea
push
push
push
push
push
push
lea
push
push
call
les
add
add
xchg
add
test
mov
xchg
cltd
add
mov
cmc
add
out
roll
icebp
add
add
in
popf
add
js
cltd
mov
stos
add
les
les
add
push
push
lea
push
push
push
lea
push
call
addl
add
add
xlat
mov
mov
stc
cmc
hlt
mov
mov
pop
add
leave
out
js
movsb
cli
clc
fiaddl
add
add
add
test
pop
mov
xor
push
lea
push
push
lea
push
push
push
push
call
add
divb
add
add
add
add
mov
sti
add
jle
add
add
mov
lods
push
shll
lods
pop
add
loop
stos
ret
jae
add
int
stc
enter
pusha
sbb
add
push
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
fsubrl
add
add
add
les
aad
add
scas
add
push
mov
add
jo
fildl
shll
add
mov
add
repnz
add
faddl
mov
lea
pop
push
push
lea
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
fbstp
popa
int
testl
les
in
imul
popf
mov
mov
jb
pop
add
mov
add
addl
add
pop
jmp
add
cltd
add
add
imul
add
mov
imul
add
add
push
lahf
mov
cmpsb
sti
xchg
fiadds
add
fiadds
mov
lea
pop
xor
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
sti
add
movsb
add
add
mov
data16
add
xchg
popa
add
arpl
jo
jb
nop
push
out
gs
add
jne
jns
ret
mov
add
add
pop
add
mov
lea
pop
add
push
sub
sub
pop
add
push
lea
push
push
push
push
lea
push
push
call
mov
xchg
add
divl
mov
add
lds
je
les
lret
sahf
jl
add
rolb
int
add
add
mov
in
mov
lea
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
add
clc
pop
add
movsl
stos
mov
enter
add
add
shl
add
mov
pop
add
add
jge
add
in
fadds
push
pushf
xchg
fnsave
int3
lea
pop
rep
push
push
push
push
lea
push
push
push
push
call
push
xchg
add
add
ljmp
jo
mov
movsl
add
add
add
add
flds
les
add
stc
into
add
add
loope
add
add
mov
jmp
pop
add
lret
in
add
loop
add
ret
add
lea
pop
mov
push
push
lea
push
push
push
call
movl
mov
insb
std
pop
test
add
mov
xchg
add
jl
add
mov
add
sar
in
cli
idivl
mov
add
add
fs
add
rolb
lds
clc
add
push
pusha
add
lock
mov
mov
movsw
ja
sub
add
leave
int3
imull
jbe
cmpsb
mov
cld
lea
pop
xor
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
mov
leave
fmull
gs
add
loopne
test
mov
jns
xchg
stc
add
mov
xchg
add
jnp
add
pop
add
add
jp
negb
jae
jo
test
jl
add
test
out
add
add
lods
add
xchg
out
sti
xchg
mov
lea
pop
add
push
lea
rol
pop
or
je
push
ror
lea
pop
mov
push
ror
pop
add
push
not
lea
inc
pop
add
rep
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
out
add
out
stos
jae
mov
push
ljmp
add
rolb
addb
add
fs
roll
mov
add
mov
mov
xchg
add
rolb
mull
imul
push
pusha
out
pusha
jae
add
add
mov
lea
pop
pop
push
push
not
inc
shl
shl
push
or
not
add
shl
sub
shr
lea
pop
lea
sub
dec
inc
pop
push
shl
dec
lea
pop
pop
push
xor
xor
rol
pop
mov
push
push
lea
push
push
call
pop
std
lods
cmpsl
pop
call
cmpsl
add
add
pop
add
fisttps
jo
mov
add
pusha
out
ljmp
cld
add
xchg
je
test
add
add
add
xchg
cli
je
bound
jbe
add
add
add
add
add
add
lea
pop
mov
mov
push
sub
inc
pop
jmp
push
push
lea
push
lea
push
push
lea
push
call
lret
stc
pop
mov
stos
add
add
mov
xchg
mov
mov
mov
fdivrl
add
arpl
pop
push
add
add
jns
xchg
mov
add
add
aam
add
clc
fldl2e
add
scas
fstl
add
mov
lea
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
js
xchg
mov
add
mov
fiaddl
add
fildl
xchg
add
add
push
add
add
pop
push
in
int
les
xchg
movb
lahf
add
jo
push
into
ljmp
scas
add
mov
mov
lea
pop
mov
add
push
lea
push
push
push
call
xchg
mov
out
loop
mov
push
movsl
scas
divb
nop
roll
jmp
add
ret
out
mov
add
add
cli
xchg
filds
xchg
add
add
loope
xchg
cmpb
out
lods
std
add
add
add
shrb
pop
push
push
not
shl
pop
push
push
shr
inc
ror
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
cltd
mov
pop
out
add
icebp
add
push
mov
xchg
xchg
aad
add
imul
movsb
call
add
cmc
mov
jge
aad
call
cld
jge
add
add
xchg
add
add
out
fwait
add
int3
add
pusha
notb
ret
cmpsb
cmc
mov
lea
pop
mov
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
add
cmpsl
loopne
mov
lret
add
add
notb
in
mov
cmc
add
jmp
test
add
jne
mov
add
jl
insb
add
add
lea
pop
pop
push
lea
push
push
lea
push
push
push
call
add
xchg
in
iret
mov
jge
add
cltd
icebp
popa
add
rolb
mov
bound
les
add
shl
in
pop
xchg
in
xchg
add
add
add
testb
mov
add
jle
add
aam
add
add
addl
mov
lea
pop
pop
push
inc
not
inc
pop
pop
push
push
push
push
push
push
push
push
call
add
add
shrb
out
add
add
mov
in
cwtl
pusha
leave
add
jge
outsl
add
pop
mov
add
push
cld
add
add
add
stos
xchg
cmpsb
fcomip
rolb
call
xchg
add
mov
enter
add
scas
add
pop
pop
push
not
lea
pop
leave
push
rol
pop
ret
push
push
push
lea
push
push
push
lea
push
push
push
push
call
stos
ja
mov
jb
mov
mov
cwtl
movsl
pop
add
add
fcmovnbe
add
mov
mov
imul
fldl
mov
add
add
jbe
arpl
fldl
aad
xchg
add
pop
push
mov
push
push
push
lea
push
push
push
push
push
push
push
call
mov
adcb
pop
pop
add
popa
push
sarl
add
fstpt
mov
add
add
mov
push
mov
mov
add
test
aad
stos
add
xchg
shll
lret
std
lahf
add
push
add
lea
insb
mov
push
add
aad
fcoml
rolb
add
add
xchg
jns
int3
lea
pop
add
push
not
rol
add
pop
push
push
push
inc
rol
sub
pop
push
push
lea
push
push
lea
push
push
push
push
call
loopne
adcl
mov
add
imull
int3
mov
add
xchg
add
add
add
mov
pop
add
pushf
add
fwait
jb
add
pop
scas
add
add
add
mov
add
add
out
imul
add
in
fmul
mov
lea
pop
push
push
ror
dec
pop
movl
addl
push
lea
push
call
cwtl
add
mov
movsl
mov
lock
add
xchg
loopne
lret
add
out
push
add
add
test
data16
mov
mov
pusha
imul
jb
mov
add
mov
xchg
rorl
cld
fadd
add
push
add
mov
lea
pop
test
je
push
shr
xor
rol
ror
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
icebp
jge
add
lret
add
out
aad
add
fsubrl
add
clc
pop
jb
int3
xchg
addr16
roll
add
rolb
add
nop
shlb
sarl
xchg
stos
mov
lea
pop
pop
push
push
push
push
push
push
push
push
push
call
add
add
add
push
xchg
mov
icebp
add
pop
lret
ja
fildl
addr16
mov
pop
add
add
jbe
addl
push
ficompl
mov
lret
add
mov
data16
pop
pop
push
xor
inc
dec
pop
pop
push
xor
shl
add
pop
leave
push
lea
add
add
ror
pop
ret
push
rol
shr
pop
push
mov
push
xor
pop
add
push
push
push
push
push
push
push
push
push
push
call
pop
jno
add
iret
add
in
add
add
mov
fsubrp
jle
add
add
gs
jae
data16
add
in
add
mov
in
add
ret
add
test
les
add
add
mov
cmpl
fdiv
add
add
pop
add
add
jle
lds
pop
push
push
add
shl
dec
sub
pop
push
push
push
add
ror
pop
testl
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
popa
pop
add
add
aad
popl
add
lods
add
hlt
add
add
add
pop
roll
push
add
clc
add
mov
add
add
fiaddl
add
add
xchg
add
pop
addl
push
sub
rol
pop
push
call
push
inc
dec
not
pop
mov
push
not
pop
pushl
push
lea
push
lea
push
push
call
add
add
fisubs
add
icebp
shr
add
fsubrs
mov
push
add
in
loope
icebp
add
ljmp
loopne
stos
pushf
push
mov
jb
add
stc
xchg
mov
flds
add
hlt
scas
add
add
stc
add
push
pop
in
lahf
add
mov
push
ret
add
mov
add
mov
cmpsb
mov
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
pop
add
add
addb
rolb
add
add
add
jbe
add
add
mov
add
add
jo
scas
pop
mov
cld
lea
pop
call
push
add
pop
cmpl
jne
pop
push
push
push
push
push
push
push
call
notb
add
mov
lods
add
mov
add
mov
add
push
add
pop
add
add
rolb
add
add
add
add
mov
bound
flds
mov
lea
pop
pop
pop
push
pop
pop
push
lea
push
push
push
push
push
push
lea
push
call
ljmp
add
push
push
testl
addb
add
aad
add
add
add
bnd
add
hlt
add
popa
int3
add
mov
lea
pop
leave
ret
push
push
call
mov
add
shlb
loop
aam
add
add
add
sti
imul
cmpsl
add
lods
add
cmpsl
add
call
test
rclb
lahf
jns
lahf
addr16
popf
add
xchg
cltd
int
add
xchg
movsl
enter
sahf
add
mov
push
mov
lea
pop
push
mov
push
push
lea
push
push
lea
push
call
add
aam
repnz
lret
add
iret
out
arpl
out
add
add
jle
add
xchg
add
add
fildl
pop
add
outsl
lock
jno
mov
add
add
roll
add
add
lret
mov
push
jbe
add
rolb
pop
add
push
add
rol
add
pop
push
push
sub
inc
xor
not
pop
push
push
rol
pop
push
push
ror
rol
xor
add
pop
push
movl
push
sub
pop
push
push
push
lea
push
call
xchg
xchg
push
add
add
std
mov
in
mov
cli
mov
add
add
add
push
mov
lds
out
xlat
add
mov
repnz
addl
xchg
add
add
pop
roll
xchg
gs
pop
pop
mov
push
loope
add
jle
add
add
scas
mov
lea
pop
call
push
add
pop
push
call
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
sbbw
add
test
mov
test
pop
add
repnz
xchg
ja
add
pop
test
rol
add
lret
fxch
enter
cld
lea
pop
subl
cmpl
jne
push
sub
pop
pop
push
shr
lea
pop
pop
push
not
pop
pop
push
lea
push
push
lea
push
push
call
add
loopne
mov
iret
pop
mov
je
imul
add
add
jbe
pop
add
stc
mov
aam
enter
pop
add
test
testb
add
lods
add
add
xlat
add
push
cwtl
sub
add
add
add
add
mov
pop
add
pop
pop
push
push
call
sahf
fdiv
std
in
add
stos
add
cmpsb
push
add
add
loope
lret
add
add
cmpsl
mov
jbe
mov
add
lock
add
mov
js
flds
js
add
add
add
mov
add
add
hlt
lea
pop
leave
ret
push
push
lea
push
call
jae
scas
mov
pop
fcompl
std
add
addl
les
lret
add
loopne
add
xchg
std
cmc
fbld
add
add
xchg
int
add
or
push
push
lea
push
push
push
push
call
pushf
js
add
xchg
gs
add
add
leave
out
fiadds
int
addl
sti
add
add
add
pop
out
add
jmp
add
add
push
test
push
scas
mov
mov
lea
pop
mov
push
add
add
pop
add
push
lea
push
push
push
push
push
call
add
add
movsl
mov
iret
add
add
mov
add
add
pop
cld
add
fdivl
aam
fmull
add
les
mov
addl
stos
fwait
in
movsl
add
add
add
bnd
add
add
add
pusha
bound
mov
lea
pop
push
push
push
push
push
push
call
movsl
fwait
add
jecxz
add
jo
push
add
in
js
mov
add
js
xchg
std
stc
add
add
mov
filds
add
add
mov
mov
mov
addl
les
push
push
lea
push
push
push
call
add
fnstenv
add
mov
add
add
mov
out
add
into
ror
loop
mov
jecxz
add
lea
repnz
imul
add
push
fwait
add
add
ljmp
movsb
add
add
mov
add
add
pop
push
push
not
ror
inc
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
movsl
add
fxch
add
rolb
add
ljmp
push
add
lods
test
leave
repnz
add
out
fwait
sahf
add
call
add
mov
stos
pushf
mov
jl
add
mov
mov
sti
aad
pop
pushf
add
repnz
mov
add
bound
fidivrs
add
testb
lea
pop
lea
push
push
lea
push
push
push
push
call
faddl
xchg
mov
add
popf
jae
scas
add
add
out
add
insb
add
jns
jp
mov
add
into
jo
in
xchg
add
jbe
jmp
mov
sbb
call
rol
add
pop
shr
push
push
lea
push
lea
push
lea
push
call
add
mov
add
loop
add
lea
mov
add
add
cli
mov
js
add
jae
jne
add
out
add
add
add
add
add
mov
fiadds
testl
add
pop
mov
add
flds
jne
fmul
mov
add
pop
in
arpl
mov
pop
cld
mov
lea
pop
add
mov
push
rol
not
ror
pop
mov
push
lea
push
push
push
push
call
mov
pop
mov
xchg
loop
sti
add
add
jae
insb
add
in
leave
add
jo
rcrb
add
add
js
cld
test
xchg
mov
pushf
loope
bnd
data16
outsl
pop
add
jl
lret
scas
add
int3
add
add
add
je
jecxz
out
rorb
pop
add
push
push
lea
push
push
push
call
jl
les
xchg
add
mov
mov
rcll
cltd
add
pop
pop
arpl
neg
pop
add
add
add
mov
enter
add
rolb
xchg
pop
jno
add
mov
lea
pop
add
mov
push
push
push
push
push
push
call
add
add
add
call
mov
pop
add
add
add
add
scas
cwtl
pop
add
mov
jbe
add
cmpsl
add
lods
fldl
add
add
mov
add
add
push
mov
aam
mov
iret
xchg
xchg
add
fdivs
add
stc
add
add
cld
js
jae
cmpl
lea
pop
mov
push
push
lea
push
push
push
call
int3
jbe
add
pop
pop
test
add
add
hlt
add
add
mov
shrb
add
add
mov
jmp
add
add
mov
lea
pop
cmp
jne
push
push
push
push
push
push
push
call
add
out
xchg
add
add
add
add
call
fstps
out
add
mov
jle
gs
add
xchg
lods
in
int3
add
mov
add
add
add
add
add
mov
loope
ljmp
fnsave
mov
movsl
add
cmpl
mov
lea
pop
cmp
jne
mov
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
mov
add
loopne
jecxz
add
mov
jge
imulb
mov
push
je
add
xchg
mov
add
add
mulb
fmull
add
add
add
cmpsb
push
add
push
lea
push
call
out
add
mov
add
push
push
add
add
add
mov
add
add
bound
sti
jp
int3
flds
cmc
rol
insb
out
add
mov
sar
add
mov
jmp
add
ret
push
call
add
mov
jecxz
out
add
push
add
cmpsb
add
or
inc
cld
mov
push
inc
pop
sub
jne
mov
push
push
lea
push
call
add
icebp
fs
addl
mov
mov
jo
add
testl
add
push
stos
xlat
loopne
jl
add
arpl
add
data16
fldl
add
mov
add
lds
scas
add
call
jb
jle
xchg
add
int3
pop
iret
push
std
add
out
nop
out
jo
mov
mov
add
lea
pop
movl
jmp
push
push
push
lea
push
lea
push
call
add
add
vpackssdw
xchg
rcl
shl
add
add
add
mull
add
nop
add
lock
je
sbbl
add
add
scas
add
mov
lea
pop
mov
push
push
push
call
jb
arpl
jb
add
add
rolb
add
aam
add
mov
lock
add
add
flds
add
add
add
movsl
andb
mov
lea
pop
mov
cmp
jne
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
mov
mov
add
fsubl
add
add
mov
movsb
data16
add
testl
xorb
add
xchg
fsubrs
cltd
fnstenv
xchg
mov
add
mov
lea
pop
mov
movl
push
ror
rol
pop
jmp
push
sub
ror
pop
mov
cmpw
jne
push
lea
push
call
fildl
fimuls
movb
add
data16
add
mov
add
add
lock
scas
mov
add
jns
add
add
add
mov
jmp
jle
xchg
add
aad
pushw
cwtl
jmp
add
xchg
mov
lea
pop
mov
movl
push
push
lea
push
push
lea
push
push
push
call
add
test
lods
roll
add
bound
add
add
add
add
lds
lock
lcall
xchg
popf
add
add
into
add
mov
lea
pop
jmp
push
shl
pop
pushl
push
push
call
pusha
cmpsl
outsl
add
add
pop
leave
lret
push
addb
adcl
push
add
add
add
add
lds
mov
add
push
add
jge
loopne
mov
out
jp
add
add
jae
lods
out
mov
lea
pop
pop
mov
push
lea
push
push
push
push
lea
push
push
call
jp
add
add
aam
add
fcoml
add
ljmp
add
mov
mov
add
arpl
pop
add
jecxz
lret
pop
mov
add
mov
mov
add
flds
shr
add
frstor
mov
add
cld
lea
pop
mov
mov
push
push
add
dec
not
push
sub
add
add
rol
rol
sub
xor
add
pop
rol
sub
xor
shr
pop
push
inc
xor
inc
pop
push
call
push
push
lea
push
push
call
subb
jb
add
ja
mov
clc
push
add
add
add
add
subl
out
roll
sarb
push
nop
push
add
add
movsb
lret
shlb
adc
js
int3
fldz
ret
aaa
or
add
aad
inc
push
sub
xor
push
xor
add
lea
ror
sub
sub
rol
dec
lea
pop
sub
pop
push
not
add
pop
push
push
dec
rol
shl
sub
pop
call
cmpl
je
push
push
dec
ror
inc
push
and
add
sub
dec
sub
not
pop
inc
lea
pop
push
shr
ror
pop
push
call
push
push
push
lea
push
call
add
mov
add
push
pop
push
add
add
imul
add
mov
add
add
add
push
jne
clc
add
add
call
add
push
pop
add
add
addb
add
mov
lea
pop
cmpl
je
push
push
add
ror
sub
push
xor
add
xor
sub
shr
sub
rol
inc
pop
add
dec
shr
pop
push
sub
inc
pop
push
push
sub
inc
not
pop
call
push
dec
ror
pop
cmpl
je
push
push
rol
inc
shr
shr
push
or
inc
add
shl
dec
sub
sub
pop
add
sub
add
rol
pop
push
add
pop
push
call
push
push
push
lea
push
push
lea
push
push
push
call
loopne
lahf
mov
pop
push
popf
push
pop
gs
stos
lea
push
add
add
add
add
add
xchg
xchg
mov
out
mov
jmp
jge
add
movsl
clc
add
mov
rclb
lret
add
out
pop
sti
mov
add
int3
rcl
mov
lea
pop
cmpl
je
push
push
dec
add
rol
push
xor
add
dec
sub
sub
shl
pop
sub
xor
not
pop
push
push
push
push
lea
push
push
push
call
movl
add
push
push
add
add
add
fs
add
mov
imulb
enter
fs
add
mov
add
mov
lds
mov
out
add
sahf
xchg
add
push
xchg
add
jp
addb
add
mov
push
add
mov
xchg
clc
pop
add
aam
add
pop
push
push
lea
push
push
lea
push
call
add
into
fadds
add
add
mov
add
ja
popa
add
add
imul
add
xchg
add
add
add
cmc
add
arpl
add
add
mov
add
add
jae
add
icebp
add
push
mov
in
add
fidivs
mov
add
push
xchg
jno
shlb
movsl
xchg
pop
call
push
add
add
pop
cmpl
je
push
push
rol
dec
sub
push
push
pop
add
add
dec
add
sub
xor
pop
sub
pop
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
enter
test
in
cltd
je
out
cltd
mov
lds
jp
sbbb
mov
add
pop
mov
hlt
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
rcl
arpl
fists
in
jne
add
rorb
xchg
mov
add
add
int
add
mov
movsl
push
mov
lret
xchg
mov
jnp
stos
mov
push
fisttps
pop
call
push
sub
not
pop
cmpl
je
push
push
lea
xor
not
push
or
not
add
sub
not
sub
rol
inc
pop
add
sub
pop
push
add
shr
add
sub
pop
push
push
push
push
lea
push
lea
push
push
call
add
idivl
lds
add
jne
add
aam
lcall
add
lods
mov
add
pushf
mov
shr
add
cmc
add
add
in
add
add
pop
pop
push
xchg
lods
cmc
add
pusha
sbb
sahf
cmp
loope
pop
cmpl
je
push
push
lea
add
push
or
not
add
sub
add
pop
rol
add
inc
pop
push
push
push
push
push
call
pop
mov
je
add
movsb
add
stos
movsl
mov
out
add
add
add
popa
mov
mov
addr16
ficoml
movsb
jnp
add
faddl
add
sarl
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
call
add
push
cwtl
xchg
movsb
rolb
clc
add
jle
mov
add
mov
loope
out
lahf
add
add
add
add
add
add
add
rolb
add
in
add
add
add
add
mov
fdivrl
cmpsb
mov
data16
mov
add
ljmp
rol
je
push
push
sub
push
or
not
add
xor
sub
sub
rol
pop
sub
pop
push
push
push
push
call
lods
mov
add
rol
jge
add
add
lock
add
push
add
in
add
hlt
mov
out
or
ljmp
add
fldl
pop
add
xchg
add
lahf
add
int3
lea
pop
push
push
dec
shl
sub
pop
call
push
push
push
push
push
push
call
add
add
xchg
add
push
imul
in
lods
popa
add
out
pop
add
push
cmpsl
pop
add
mov
test
je
pop
lret
jns
in
lcall
fmul
addr16
add
jo
arpl
aad
add
js
add
out
add
pop
mov
testb
jp
ficompl
add
pop
cmpl
je
push
push
dec
inc
sub
push
sub
add
sub
sub
dec
rol
shl
sub
pop
xor
pop
push
sub
not
pop
push
push
sub
add
pop
call
cmpl
je
push
push
xor
xor
xor
push
or
inc
add
rol
inc
sub
rol
pop
add
ror
rol
lea
pop
push
pop
push
call
push
sub
sub
xor
pop
cmpl
je
push
push
sub
shr
push
sub
add
inc
sub
not
pop
shl
pop
push
push
lea
push
push
push
push
call
stos
int
add
add
push
add
add
add
pusha
add
jb
add
fwait
add
divl
add
fiadds
icebp
jge
jne
mov
loope
push
aam
add
add
rcrl
add
add
test
add
clc
mov
in
jnp
add
xchg
adcl
test
aam
rorb
push
push
push
lea
push
push
push
lea
push
call
loopne
add
data16
fiaddl
add
je
lea
rcl
xchg
loopne
pusha
jp
out
push
stc
rcr
jecxz
add
mov
add
xchg
add
add
adcl
add
pop
call
push
xor
inc
xor
pop
cmpl
jne
mov
push
xor
pop
movl
push
xor
pop
jmp
push
push
push
push
push
push
push
push
call
xchg
shll
cmpsb
add
add
jo
mov
cltd
mov
jns
mov
add
out
add
rolb
mov
jae
add
fadds
add
add
add
add
add
pop
push
pop
add
test
jnp
add
mov
mov
jns
hlt
lea
pop
xor
push
add
sub
pop
pop
push
add
dec
pop
pop
push
not
not
shr
pop
pop
push
shr
pop
pop
push
shr
pop
leave
ret
push
push
push
lea
push
push
push
push
call
cmpsb
add
add
lcall
fdivrs
add
xchg
add
mov
int
mov
js
movsb
pop
mov
cwtl
mov
mov
add
jb
cld
lea
pop
push
mov
push
push
push
lea
push
push
push
push
call
into
add
insb
add
out
add
add
add
mov
add
add
add
add
add
test
clc
out
mov
jae
insb
mov
arpl
stos
stos
add
add
pop
add
push
shr
sub
ror
lea
pop
cmpl
jne
push
push
sub
add
push
sub
add
sub
sub
rol
sub
pop
rol
inc
not
pop
push
xor
not
add
pop
pushl
push
add
not
pop
call
push
push
shr
rol
add
pop
call
jmp
push
push
push
push
push
push
call
add
add
add
js
jl
pop
insb
lea
jmp
push
pop
fsub
mov
hlt
add
add
xchg
add
out
insb
push
push
enter
add
pop
cmpl
je
cmpl
jne
push
push
push
lea
push
push
push
push
call
imul
enter
add
add
test
add
in
add
lahf
add
mov
jns
fisubs
add
imul
popa
jle
mov
xchg
mov
lahf
xchg
add
roll
add
mov
add
mov
int3
fstpt
shlb
fmull
push
sub
shl
pop
add
push
push
push
lea
push
lea
push
push
lea
push
call
mov
jle
fdivs
jmp
icebp
shrl
jns
cli
add
add
pop
add
mov
add
add
mov
popf
loope
jl
fnclex
movl
iret
add
add
ret
add
int
add
mov
add
repnz
pop
add
add
mov
lea
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
lds
shll
lahf
add
les
xchg
add
add
mov
stos
add
mov
les
add
mov
out
mov
mov
add
add
fldl
lea
mov
add
jle
into
lea
sub
push
sub
add
pop
pop
pop
push
lea
push
push
call
add
aam
add
cld
fsubl
add
loop
mov
add
fcomps
jno
add
add
mov
add
add
xchg
test
mov
jl
add
mov
add
out
add
add
test
push
add
xchg
arpl
add
test
jmp
add
or
leave
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
pop
jge
mov
add
scas
add
add
add
push
out
xchg
mov
add
xchg
mov
popa
fiaddl
imul
jb
jno
loopne
add
int3
imulb
repnz
add
lret
lea
add
add
imul
jb
addr16
push
lods
faddl
add
add
pop
ljmp
add
push
push
push
push
call
mov
int
cmpsb
xchg
js
pusha
mov
movsl
outsl
add
mov
xchg
add
cwtl
add
xchg
add
add
add
jns
out
jb
add
jp
add
add
mov
adc
adc
push
xor
lea
pop
jmp
push
ror
pop
cmpl
jne
push
push
sub
push
and
add
sub
sub
add
pop
shl
lea
pop
push
push
push
push
push
push
call
mov
and
add
cwtl
jno
lock
add
cli
addr16
cmpsl
add
testb
je
add
imul
add
rolb
add
mov
add
mov
mov
add
test
les
lds
add
mov
mov
add
add
jb
jmp
fmull
jne
push
add
pop
call
push
lea
push
push
push
lea
push
push
push
call
add
push
jmp
add
jge
add
pop
add
add
xchg
xchg
mov
int
add
stos
xchg
nop
in
xlat
add
add
cld
lea
pop
push
call
push
push
push
push
call
add
add
int3
arpl
stc
add
add
ljmp
add
fdivrs
add
popf
hlt
add
roll
mov
add
into
lock
add
pushf
xlat
xchg
add
add
icebp
repnz
add
add
loopne
push
add
add
lods
add
add
jp
mov
lea
pop
jmp
push
sub
pop
cmpl
jne
push
lea
push
push
call
pushf
lret
test
add
nop
cld
add
jle
arpl
push
cmpsb
lret
add
add
add
add
leave
add
cmpsb
in
test
testl
fistps
fwait
addl
int3
lea
pop
mov
push
push
call
push
add
mov
out
add
pop
add
add
push
jns
jecxz
stos
mov
jmp
mov
scas
gs
fiadds
add
arpl
popa
ficoms
mov
push
push
mov
lea
pop
mov
push
pop
push
push
push
lea
xor
push
xor
add
sub
sub
lea
sub
add
shr
shl
not
pop
xor
inc
pop
push
inc
pop
pushl
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
testl
pop
lods
add
add
add
test
add
int3
add
add
add
xchg
add
leave
add
mov
xchg
in
ljmp
xchg
add
mov
lea
pop
call
push
push
shl
inc
push
sub
add
rol
inc
sub
inc
shl
pop
add
pop
push
push
push
push
push
push
call
movsl
loope
std
add
aad
data16
add
pop
cli
jmp
add
add
mov
add
test
les
roll
icebp
add
jae
addb
arpl
mov
jae
add
add
add
std
test
mov
lea
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
push
call
lcall
mov
add
loope
scas
fucomi
imul
test
incb
rolb
add
push
jno
in
test
mov
lahf
roll
popl
xchg
mov
push
fsubrl
loopne
mov
lea
pop
call
push
push
push
push
push
call
int3
jbe
aad
mov
add
mov
aam
arpl
add
xchg
mov
test
xchg
mov
add
add
test
test
jnp
add
add
movsl
cld
pop
mov
leave
add
ror
add
mov
call
jbe
add
add
add
cmc
push
add
pop
call
push
push
xor
not
not
push
sub
add
sub
sub
add
sub
add
add
pop
add
ror
add
pop
push
push
lea
push
push
call
arpl
add
xchg
mov
call
add
stos
int
in
jl
add
add
fwait
add
into
clc
lret
add
xor
testb
add
mov
mov
mov
cmc
xchg
cli
jns
add
out
xlat
xchg
add
jp
int3
lea
pop
pushl
push
lea
push
push
push
call
ljmp
push
cmc
addl
add
push
mov
add
leave
add
push
addl
add
add
jge
add
xchg
add
cltd
add
lret
add
hlt
fnstsw
hlt
lea
pop
call
call
push
push
add
rol
lea
push
xor
add
sub
rol
sub
dec
shr
not
pop
rol
shr
pop
push
push
lea
push
push
push
lea
push
push
push
call
lret
add
add
add
arpl
jmp
iret
jp
jl
insb
testl
add
test
repnz
mov
xchg
add
in
in
add
lea
pop
mov
lea
pop
pushl
call
push
sub
lea
add
rol
pop
call
push
push
shr
sub
push
or
inc
add
add
sub
add
sub
not
pop
rol
pop
push
dec
rol
pop
pushl
push
inc
add
pop
call
push
push
push
push
call
add
add
je
into
add
movsb
pop
pushf
jnp
aam
add
arpl
add
push
add
jae
lahf
add
enter
pusha
testb
fwait
clc
loop
add
add
out
mov
les
add
mov
lea
pop
call
push
push
shl
add
shl
push
or
not
add
not
sub
shl
pop
shl
pop
push
inc
pop
pushl
push
rol
shl
not
xor
pop
call
call
push
push
sub
push
or
inc
add
ror
inc
sub
pop
ror
rol
ror
shl
pop
push
sub
pop
pushl
push
push
lea
push
push
push
lea
push
push
push
call
add
add
data16
add
pop
jo
fadds
clc
add
repnz
lret
sti
add
push
jmp
insb
add
enter
add
ja
lret
mov
aad
add
mov
lea
pop
call
push
push
push
lea
push
push
push
call
cli
cmc
aam
rol
ret
add
add
jbe
arpl
popf
jae
mov
mov
fisttpll
mov
in
jns
add
stos
mov
enter
add
add
bound
pop
call
push
shr
add
pop
call
push
rol
pop
lea
push
push
lea
lea
push
or
inc
add
add
sub
inc
dec
pop
xor
pop
push
inc
shl
pop
pushl
push
push
push
push
push
call
xchg
add
aam
jno
jl
loopne
push
std
std
add
into
stos
add
push
add
add
jge
push
in
jb
pop
add
test
add
adcl
mov
add
lret
roll
add
adc
call
push
push
push
push
call
cmpsb
cli
add
ret
mov
add
add
jnp
jae
jp
xlat
aad
mov
lahf
mov
leave
add
shll
add
clc
cmc
xchg
lcall
in
roll
jp
xchg
add
jmp
mov
je
add
add
add
add
push
cmpsl
add
pop
push
push
xor
sub
pop
call
push
push
lea
lea
dec
ror
push
or
inc
add
inc
dec
sub
dec
sub
pop
add
shr
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
aad
cmpsb
icebp
fcompl
add
aam
roll
leave
push
nop
add
imul
testl
out
jl
jno
jmp
fldl
add
mov
leave
add
add
data16
pushl
push
push
call
cmc
out
stc
push
add
add
imul
jne
fiaddl
push
add
cli
add
add
int3
insb
loopne
fwait
add
jbe
addb
movb
shl
jle
add
add
pop
add
cltd
jns
loope
jno
mov
lea
pop
call
call
push
push
push
call
jae
add
rcrl
mov
add
lcall
xchg
mov
add
add
add
mov
add
add
rcl
add
add
fs
add
in
add
mov
int3
lea
pop
mov
push
push
add
dec
push
sub
add
not
lea
sub
not
pop
shl
add
xor
pop
push
push
push
push
push
push
push
push
call
mov
jbe
add
enter
add
js
jp
repnz
add
add
add
add
lods
mov
add
popa
int
nop
add
add
mov
scas
scas
add
jns
fsubp
jmp
movsl
jge
imul
test
xchg
jle
loopnew
js
in
add
add
add
arpl
pop
pushl
call
push
lea
push
push
call
xchg
push
jno
repnz
mov
mov
nop
iret
push
out
mov
lds
out
into
add
add
enter
push
add
mov
add
out
cld
add
mov
rcll
pop
fsub
bound
cmp
jmp
add
out
add
add
fmull
add
lea
push
push
push
push
push
call
pushf
add
pop
fiaddl
jmp
test
shll
jge
jp
fwait
xchg
add
popf
add
jno
add
mov
add
nop
outsl
xlat
xchg
add
mov
add
jne
add
jge
addr16
movsb
xchg
jle
fwait
pop
roll
mov
add
jmp
mov
lea
pop
call
push
push
sub
push
sub
add
add
dec
sub
rol
xor
not
xor
pop
add
not
sub
pop
push
lea
push
call
scas
add
add
add
mov
movsl
add
add
shll
add
xchg
cld
jle
in
add
mov
xlat
add
add
pop
js
add
sti
mov
jle
add
out
js
jns
add
xchg
mov
fsubl
loopne
testb
add
xchg
enter
lea
pop
pushl
call
push
push
shr
push
xor
add
sub
shr
sub
rol
not
not
pop
xor
pop
push
push
sub
inc
sub
xor
push
xor
add
ror
sub
lea
inc
rol
pop
add
sub
not
pop
push
push
push
push
push
call
into
mov
mov
add
jmp
popa
jmp
pop
add
add
add
je
xchg
add
mov
push
add
xchg
std
pop
add
jecxz
add
mov
imul
add
xchg
mov
in
arpl
jmp
add
je
pop
jle
mov
bound
call
push
push
push
push
pop
add
dec
add
sub
add
lea
add
pop
sub
add
inc
pop
push
rol
shr
pop
pushl
call
push
push
push
push
push
push
lea
push
push
push
push
call
incb
pop
add
xchg
outsl
add
add
sahf
pusha
nop
mov
xorb
add
add
add
int3
add
add
in
add
add
jne
jmp
add
add
ljmp
add
add
sbbb
std
ror
mov
push
std
add
add
in
add
div
aad
cld
lea
pop
mov
push
lea
pop
lea
push
pop
lea
push
push
push
push
push
push
push
push
push
call
mov
jae
data16
mov
push
mov
add
imul
jnp
movsl
popa
mov
add
in
add
xchg
imul
fsubp
add
add
cmpsb
aad
out
imul
lahf
loop
add
int
add
mov
pop
add
icebp
add
add
mov
jecxz
add
mov
lea
pop
push
push
ror
dec
pop
push
push
push
push
push
push
push
push
push
push
call
jle
pop
mov
rolb
lcall
jmp
loope
pop
push
out
mov
test
imul
jge
pusha
test
add
jmp
jl
add
add
bound
add
frstor
mov
add
leave
je
add
mov
mov
add
mov
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
push
push
call
roll
jge
lret
add
lods
add
add
add
add
lret
out
fists
mov
jb
add
mov
in
arpl
add
add
sti
fidivs
add
arpl
add
add
out
add
add
add
add
mov
lea
pop
push
push
lea
push
push
call
pop
hlt
mov
ja
sahf
popf
push
lods
cli
test
data16
movsb
call
add
cltd
into
add
roll
mov
rolb
leave
lea
mov
je
add
cli
bound
out
add
add
lret
add
pop
sarb
add
add
pop
cltd
lds
icebp
jp
xchg
lcall
pop
push
push
push
push
push
call
mov
add
mov
out
jge
jo
xchg
jmp
add
add
add
roll
add
add
fiaddl
pop
add
mov
add
divb
aam
add
loope
je
jecxz
shr
loope
add
xchg
add
mov
mov
cmc
mov
jl
pop
jmp
out
add
test
push
cwtl
xchg
out
add
ret
mov
push
mov
lea
pop
push
push
rol
pop
pushl
push
push
push
push
push
lea
push
push
call
aam
push
add
add
lret
icebp
add
add
mov
jbe
add
add
jo
inc
test
add
add
in
add
jno
xchg
pop
shl
pop
fcmovu
aam
popf
test
mov
add
bound
push
call
push
push
rol
sub
inc
push
sub
add
rol
sub
shr
xor
shl
pop
lea
lea
inc
inc
pop
push
inc
pop
pushl
call
push
dec
pop
call
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
jae
ret
add
pop
mov
imul
add
out
arpl
pushf
addr16
mov
cli
add
movsb
fdivrp
imul
ret
add
cwtl
faddl
std
add
les
xchg
pop
scas
add
xchg
add
add
aad
ljmp
mov
add
add
xchg
add
mov
roll
out
int3
lea
pop
mov
push
inc
pop
pop
dec
jne
push
inc
add
pop
jmp
push
lea
push
lea
push
push
push
push
call
xlat
pop
add
cltd
pop
mov
flds
jnp
add
fldt
loop
add
repnz
add
add
push
mov
repnz
mov
popl
xchg
add
les
lock
add
out
in
push
xor
add
push
xor
add
not
ror
lea
sub
lea
pop
lea
not
pop
push
lea
push
call
add
add
popf
incb
add
lahf
movsl
ret
les
push
push
popl
add
add
mov
add
add
push
in
into
push
add
add
push
xchg
mov
add
add
test
stc
jmp
cltd
imul
push
not
sub
lea
pop
call
push
push
push
push
push
lea
push
lea
push
call
add
in
pop
int3
fisubrs
lret
gs
arpl
add
xchg
add
add
mov
add
jmp
add
add
sarl
xchg
mov
call
add
add
cwtl
add
ret
in
jl
add
mov
lea
pop
push
push
push
push
lea
push
call
jecxz
sti
popa
imul
out
mov
add
add
add
add
jae
add
add
add
add
clc
mov
filds
add
add
jae
push
and
loopne
add
add
call
lret
add
add
add
enter
int3
add
adc
sarb
push
push
push
push
lea
push
call
add
icebp
mov
lret
jmp
addb
add
stc
add
mov
mov
mov
aad
mov
lret
scas
mov
add
add
add
mov
arpl
lea
push
push
sub
xor
push
sub
add
ror
shr
inc
ror
sub
inc
pop
rol
ror
pop
push
ror
sub
rol
ror
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
int
add
mov
pusha
jle
jmp
add
add
mov
pop
mov
add
pop
mov
jae
pop
add
mov
xlat
loopne
add
cld
scas
jno
mov
lea
pop
call
push
push
lea
push
push
call
add
mov
xchg
roll
add
add
xchg
add
push
iret
in
lds
add
add
add
mov
hlt
sti
in
lahf
add
mov
in
lods
lods
mov
loopne
ljmp
mov
movl
imul
add
pop
add
xchg
add
mov
push
add
int
add
add
mov
lea
pop
call
push
push
ror
add
add
push
xor
add
dec
shl
sub
xor
ror
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
push
mov
lds
jmp
add
add
mov
add
push
imul
mov
add
pop
add
cwtl
mov
add
add
lret
add
rcrb
push
jmp
add
xchg
add
ja
lods
mov
lea
pop
pushl
push
push
lea
push
lea
push
push
push
call
lea
add
pop
ja
add
pop
add
out
test
jo
mov
add
jbe
add
pop
jno
add
repnz
push
movl
mov
add
je
cmc
xchg
jbe
add
add
out
push
add
add
add
fisttpll
pop
call
push
add
sub
inc
pop
call
push
push
call
in
add
add
add
xchg
mov
xorb
rolb
in
out
arpl
in
mov
scas
jbe
add
add
mov
cli
pop
nop
test
imul
push
jno
mov
leave
add
add
in
add
sarb
js
push
nop
mov
fisttpl
pop
mov
lea
push
push
dec
shl
sub
add
push
sub
add
shr
shl
shr
sub
sub
pop
add
shl
inc
xor
pop
push
push
push
push
push
push
push
call
iret
add
add
addb
add
in
rcrl
nop
xchg
and
add
enter
int
add
add
add
mov
test
test
add
push
add
stos
add
add
imul
mov
pop
mov
nop
mov
mov
cmpsl
xchg
leave
scas
add
lods
mov
lea
pop
pushl
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
cli
add
add
xchg
add
add
mov
push
jle
pop
add
add
push
add
lahf
add
add
pop
lahf
add
in
pop
iret
add
aam
xchg
cmc
add
test
pop
movsl
add
add
test
fcompl
add
pop
add
add
add
add
fistpll
mov
lea
pop
call
push
push
push
lea
push
push
push
call
push
cmc
mov
add
addr16
push
cwtl
pop
insb
cmpsb
mov
sti
lods
add
mov
outsl
sti
pop
pop
xchg
add
push
add
add
xchg
addr16
ljmp
testb
icebp
stos
cmpsl
mov
int3
lea
pop
lea
push
lea
push
push
push
push
push
call
jne
stc
add
add
jmp
shlb
add
movsb
add
add
out
jae
out
lret
mov
add
sarl
jne
in
mov
ret
add
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
push
call
popf
xchg
iret
add
rolb
add
ret
add
lret
rolb
arpl
lods
out
add
iret
cltd
mov
rcrb
lds
pushf
add
jne
add
mov
mov
lea
pop
push
push
not
sub
inc
add
pop
push
pushl
push
push
shl
push
xor
add
inc
lea
not
sub
shl
xor
pop
shr
pop
push
push
push
push
push
push
push
call
rcrl
cli
jne
in
push
xchg
add
add
xchg
xchg
fsubs
push
cmpsl
into
add
movsb
cli
add
add
jno
add
repnz
xchg
fnstcw
jp
mov
fwait
les
xchg
arpl
sbb
push
call
push
push
lea
push
and
add
inc
inc
sub
add
xor
pop
dec
add
add
pop
push
lea
lea
xor
pop
pushl
push
sub
inc
add
xor
pop
call
push
shr
sub
sub
pop
push
push
push
call
add
movb
add
mov
pop
jnp
add
lahf
cmpsl
mov
add
lea
push
enter
shll
add
add
add
ret
add
push
lret
add
push
aam
add
push
add
mov
aam
bound
pop
call
push
push
sub
push
or
inc
add
inc
rol
sub
ror
sub
pop
shr
inc
sub
sub
pop
push
not
shl
pop
pushl
call
push
push
push
lea
push
lea
push
push
push
call
mov
fsubp
add
mov
add
pop
cmc
jne
stos
jle
pusha
imul
pop
add
cmpsl
pusha
fs
add
xchg
jb
int
add
pop
cld
add
call
add
addb
add
jp
hlt
pop
add
stos
add
add
mov
push
add
xchg
pop
jecxz
cmc
jne
add
jmp
add
popf
add
arpl
call
push
shl
pop
jmp
push
push
push
push
lea
push
push
call
mov
pop
flds
add
add
jb
add
mov
jp
in
add
notl
add
pushf
xchg
add
add
add
mov
fisubs
pop
lods
stos
add
mov
mov
xchg
add
add
add
lea
xchg
add
add
mov
lea
pop
pushl
mov
push
dec
not
dec
rol
pop
jmp
push
push
add
ror
push
xor
add
ror
shl
rol
sub
sub
shl
xor
dec
pop
lea
dec
pop
push
pop
pushl
call
push
inc
inc
pop
push
push
lea
push
push
call
push
fildl
add
bound
add
mov
in
leave
rolb
in
int3
test
mov
mov
iret
push
add
jne
add
add
mov
scas
add
add
add
add
jl
mov
in
repnz
stc
insb
scas
add
add
lea
pop
call
push
push
not
push
sub
add
sub
inc
lea
sub
shr
pop
lea
lea
not
ror
pop
push
shr
not
shl
pop
pushl
call
push
sub
ror
add
pop
push
call
push
add
shr
inc
pop
leave
push
push
push
push
push
push
push
push
push
push
call
add
mov
add
add
add
add
jbe
mov
cld
add
mov
je
cmpb
xchg
pushf
add
add
cmpl
push
add
in
mov
add
test
fidivl
add
rcrl
xchg
cld
xorl
int3
negl
push
add
pusha
add
add
add
add
movsb
movsl
add
pop
add
push
push
push
push
push
push
push
push
push
call
add
jmp
mov
in
mov
hlt
add
add
add
ja
les
lea
jmp
add
add
xchg
icebp
pusha
les
popa
mov
lahf
push
add
addb
arpl
add
mov
xchg
pushf
js
add
add
mov
xchg
jae
add
pop
pop
push
push
call
add
subl
call
mov
std
movsl
stos
add
fstps
pop
add
push
cmpsb
mov
add
add
add
aam
pop
cli
fcompl
scas
add
pop
add
lea
sti
pusha
pop
stos
add
add
push
mov
add
pop
pop
pop
push
lea
push
push
push
push
lea
push
push
push
push
push
call
lahf
in
test
lret
into
fildl
int
cmc
imul
leave
mov
add
enter
lea
add
add
add
out
lahf
fcomi
cwtl
ja
add
push
cmpsb
push
add
add
cwtl
xchg
insb
add
add
mov
mov
stos
add
call
rolb
repnz
add
pop
mov
lea
pop
pop
leave
push
shr
add
pop
add
ret
push
push
lea
push
push
push
push
push
push
push
push
call
mul
fsub
mov
pop
add
add
add
pop
stc
add
lret
push
mov
pop
add
popf
sahf
shl
push
in
lahf
add
out
pop
mov
add
outsl
aad
in
movsb
aam
add
add
add
iret
xchg
add
enter
add
jo
mov
lea
pop
leave
ret
push
dec
pop
push
push
sub
xor
pop
mov
push
ror
pop
cmpl
jne
mov
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
xlat
fdivrs
add
add
mov
add
push
add
add
nop
rcll
add
xchg
add
xchg
out
roll
add
and
add
mov
xchg
fadds
shrl
xchg
jl
add
mov
jecxz
lea
pop
jmp
push
push
push
push
lea
push
push
push
lea
push
push
push
call
pop
stos
testl
movsb
aad
imul
add
add
add
add
jmp
add
cltd
xchg
jnp
jmp
stos
push
jecxz
flds
add
pop
popa
add
add
enter
add
in
add
add
loope
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
call
add
add
add
rcl
fbstp
jbe
push
add
pop
rcrl
insb
loope
fildl
jo
jmp
add
scas
rcll
cltd
xchg
pusha
add
push
lret
add
jne
popa
jns
add
bound
and
push
push
push
call
jecxz
out
mov
jl
push
mov
add
rcrb
pop
mov
in
mov
fiaddl
push
add
lock
jae
jmp
cmc
rolb
mov
mov
add
cwtl
test
arpl
lock
add
or
xor
push
lea
push
push
lea
push
push
push
push
push
call
add
add
pop
jmp
scas
mov
rolb
add
mov
fsubrs
mov
add
addb
mov
addl
shll
test
out
mov
nop
test
add
pop
add
adcl
add
std
lock
add
stos
addl
add
std
add
add
std
mov
lea
pop
xor
push
push
push
lea
push
call
mov
add
jns
sbbb
add
fisubrl
pop
push
jne
repnz
shrb
cmpsb
add
test
jns
aad
push
sahf
add
enter
add
into
cwtl
pop
add
rcrb
add
xchg
outsl
push
in
add
add
mov
in
mov
push
mov
lea
pop
add
xor
push
pop
dec
sub
push
ror
sub
ror
add
pop
jmp
push
ror
dec
shr
pop
sub
pushl
push
push
lea
push
push
push
push
push
push
call
add
les
gs
pop
mov
cld
add
pop
push
jecxz
add
add
add
jle
imul
insb
pop
addl
add
lcall
mov
jbe
add
pusha
add
add
add
add
add
push
add
out
mov
lea
pop
pop
push
not
pop
sub
push
rol
rol
pop
cmp
jne
push
push
push
push
lea
push
lea
push
push
call
push
add
fldl
outsl
pushf
add
out
jo
add
mov
scas
add
mov
in
movb
add
jecxz
add
mov
nop
out
lahf
pop
mov
add
add
arpl
push
jnp
push
add
add
add
add
add
mov
lea
pop
mov
lea
push
lea
push
lea
push
push
push
call
popa
add
jecxz
cltd
add
add
in
cmc
ja
push
fisttps
add
into
mov
loope
add
add
mov
mov
enter
nop
mov
add
in
add
jp
add
fnstsw
ljmp
mov
cmpsb
jne
gs
add
add
add
add
mov
lea
pop
sub
push
push
call
out
add
add
add
movsl
shll
aad
fs
add
jne
jbe
mov
add
imul
pop
mov
jns
add
out
aad
test
jecxz
mov
cmc
add
rcl
in
add
jmp
cli
jb
add
lods
add
lea
addl
repnz
rcrb
clc
insb
add
pop
mov
shr
push
not
sub
shr
pop
add
sub
push
push
push
push
lea
push
push
lea
push
push
call
add
jl
popa
fimull
ljmp
add
jno
fst
add
stos
mov
scas
filds
add
repnz
xchg
pop
add
flds
shl
rolb
add
add
ja
add
add
aad
add
mov
lea
pop
pushl
pop
push
add
pop
shr
and
push
push
push
call
add
add
pusha
add
ljmp
add
jmp
jl
leave
jnp
add
fs
add
push
fildl
fildl
leave
add
mov
mov
repnz
add
add
add
addl
or
sub
push
sub
not
inc
xor
pop
cmp
jne
leave
push
push
push
push
push
push
lea
push
call
add
cmpsb
add
aam
cwtl
xchg
add
lods
les
shlb
add
add
pop
mov
push
fildl
in
rorb
add
add
mov
aam
pop
push
popa
add
add
add
jp
mov
testl
xchg
jb
mov
add
mov
jmp
add
int3
lea
pop
ret
push
lea
dec
pop
push
mov
push
xor
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
call
andl
add
add
xchg
mov
test
xchg
add
add
mov
imul
faddp
ja
add
add
push
mov
fdivr
add
lods
add
mov
add
add
add
xlat
repnz
out
add
je
adcb
cli
pusha
pushf
mov
and
push
push
ror
shl
pop
push
push
push
lea
push
call
pusha
mov
mov
cli
repnz
add
add
jmp
lahf
ljmp
push
pop
js
add
jne
add
add
add
ljmp
xchg
add
fmull
push
push
push
push
lea
push
push
push
push
push
call
test
test
add
mov
add
repnz
add
mov
mov
add
add
fiadds
out
xchg
bound
add
mov
jbe
pop
add
mov
out
add
roll
in
pop
fimull
pop
push
push
push
lea
push
push
push
push
push
call
cld
add
fs
mov
lahf
jmp
add
popf
stos
add
adcl
cltd
jle
add
int
add
add
test
add
mov
lea
pop
mov
lea
push
shr
pop
sub
push
lea
push
push
push
push
push
push
push
push
push
call
arpl
jbe
add
add
add
add
std
std
test
jmp
popf
pop
loop
add
mov
add
add
xchg
jecxz
add
add
enter
add
add
lods
cmc
add
popa
jae
pop
add
test
mov
lea
pop
mov
push
shl
sub
rol
pop
shr
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
addl
add
jnp
out
popf
out
push
ja
mov
gs
mov
cwtl
xchg
mov
add
mov
add
movsb
add
rolb
add
adc
add
add
add
fs
les
mov
lea
pop
add
mov
push
lea
push
push
call
xchg
add
add
xchg
int
loop
pusha
add
sbb
roll
add
push
repnz
add
jbe
add
imul
rol
mov
add
ljmp
add
leave
add
fmull
pop
or
jae
push
lea
push
push
push
push
push
lea
push
call
jns
fildl
sti
xlat
cwtl
push
cmc
test
add
stos
lods
mov
cwtl
test
add
add
xchg
testl
lahf
add
add
sti
add
xchg
mov
add
cwtl
faddl
jecxz
pushf
jle
hlt
lea
pop
mov
push
dec
rol
inc
pop
add
xor
push
add
add
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
pop
lock
pop
mov
addr16
add
test
sbb
add
add
add
xchg
push
add
pop
les
add
add
add
add
xchg
add
add
scas
arpl
push
add
xlat
add
je
lock
loopne
pop
add
jbe
bound
in
add
add
jne
fmull
loopne
push
push
push
push
push
push
push
push
push
push
call
add
roll
stc
out
stos
xchg
in
out
aam
rcll
cli
cltd
idivb
add
arpl
addb
mov
add
add
xlat
jmp
ja
call
push
add
add
shll
clc
mov
jne
mov
add
pop
rol
push
push
lea
push
push
push
push
push
push
call
add
jb
add
mov
cltd
jle
test
add
add
add
mov
add
int3
add
add
lods
xchg
add
movsb
addl
add
in
add
out
test
outsl
je
sahf
add
add
scas
mov
mov
enter
push
ljmp
hlt
lea
pop
rol
push
lea
push
push
push
call
loope
fcomps
mov
add
scas
add
add
pop
jae
xchg
jo
cli
add
add
jb
mov
add
jl
call
popa
adc
add
call
add
hlt
add
xchg
cwtl
xchg
add
test
pusha
add
add
movsl
mov
add
add
xchg
add
mov
lcall
push
addr16
pop
jmp
xlat
fiadds
xchg
stc
lahf
out
les
push
popl
add
in
push
add
out
add
leave
enter
shr
mov
icebp
add
mov
lea
pop
inc
push
lea
push
push
push
lea
push
call
clc
jo
mov
pusha
add
mov
add
add
out
stc
add
cmpsb
fldcw
jo
add
add
mov
into
push
xchg
add
add
mov
jae
enter
in
fwait
add
popl
addl
pop
jo
add
adc
cmpb
jne
push
push
push
lea
push
push
lea
push
push
push
push
call
outsl
xlat
add
rolb
ret
push
xchg
out
add
add
mov
add
add
cmpsl
lahf
imul
add
push
mov
add
gs
add
pop
xchg
add
add
sahf
outsl
mov
mov
jecxz
add
xchg
mov
pop
jge
std
testb
std
add
add
movsl
push
add
mov
lea
pop
add
cmp
je
push
shr
shl
sub
pop
add
push
lea
pop
cmpl
jne
push
shr
not
pop
xor
push
inc
pop
pop
pop
push
xor
shl
lea
pop
pop
push
push
push
call
lods
xchg
mov
add
cmc
fadds
add
add
leave
add
xchg
js
pop
add
jb
mov
push
mov
fwait
add
add
pop
add
cmc
push
add
mov
add
add
add
sti
add
add
add
pop
pop
push
sub
add
pop
pop
push
add
ror
xor
ror
pop
leave
ret
push
rol
ror
xor
pop
mov
push
push
push
push
push
push
push
push
push
call
in
cmpl
add
add
pop
add
cld
cltd
add
jo
add
add
add
push
test
add
jo
test
add
add
add
mov
xchg
div
mov
jp
add
shrb
int
xchg
add
add
test
mov
int3
lea
pop
add
push
push
add
shl
pop
push
add
push
pop
xor
push
xor
pop
add
push
push
push
push
push
lea
push
lea
push
call
pop
add
in
lret
xchg
add
fmulp
add
add
add
push
add
pop
aam
add
add
add
ja
add
imulb
stos
add
mov
xchg
add
mov
add
add
enter
add
hlt
xchg
mov
add
add
sbbl
pop
add
pop
push
xor
lea
pop
pop
push
push
push
push
push
push
call
into
aam
roll
add
fs
push
cmc
add
lock
add
add
push
add
jo
shrl
loop
mov
ret
xchg
out
add
add
int
mov
sbb
add
pop
push
push
push
lea
push
push
push
push
push
push
push
lea
push
call
fiadds
cld
add
jo
test
xorb
mov
add
call
out
popa
mov
xchg
jns
mov
scas
add
fs
add
add
into
add
add
add
pop
call
push
lea
push
lea
push
push
push
call
rcr
add
lds
add
lods
sahf
scas
ja
pusha
fbstp
push
mov
push
fdivp
mov
add
std
in
jmp
nop
add
cmpsl
fwait
add
aad
out
cld
jns
add
add
adc
out
add
fs
jl
add
nop
movsl
call
stos
mov
in
aad
mov
loop
jp
outsl
jbe
hlt
lea
pop
xor
push
xor
shr
pop
pop
pop
push
sub
shr
lea
ror
pop
pop
push
push
push
push
push
push
push
call
push
pop
add
add
add
jecxz
js
xchg
add
add
sti
lret
jae
add
imul
rcrb
lahf
mov
loopne
mov
neg
mov
add
add
add
xchg
mov
add
add
outsl
mov
add
data16
pop
pop
push
push
lea
push
lea
push
push
call
pop
sarb
jae
add
lcall
add
stc
mov
add
xchg
data16
in
add
add
pop
xchg
add
add
data16
addl
lods
add
mov
push
add
jmp
rcr
add
add
mov
addl
add
aam
bound
leave
ret
push
push
push
lea
push
call
mov
stc
push
add
rolb
add
fldcw
add
mov
std
incb
add
jl
rolb
ja
add
loopne
xchg
add
add
aam
add
ret
add
mov
lea
pop
push
push
push
call
lahf
pop
push
xchg
scas
cmpsl
popa
cmpsb
lahf
add
add
roll
pop
jno
cli
xchg
mov
test
add
add
add
add
and
fcoml
add
jno
add
icebp
add
push
mov
lea
pop
mov
add
push
add
ror
add
pop
push
push
lea
push
push
push
call
in
insb
xchg
movl
in
roll
fs
movb
add
icebp
movl
lock
jae
mov
add
je
add
pop
outsl
pop
add
mov
lea
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
push
call
fldl
imul
stc
mov
in
out
add
pop
add
mov
mov
jae
add
leave
mov
add
add
addr16
add
fucomip
fldl
add
pusha
add
add
add
mov
add
push
stos
jp
addr16
mov
add
add
add
pop
lea
pop
add
arpl
pop
push
push
inc
dec
add
add
pop
push
mov
push
xor
lea
pop
push
push
rol
pop
pop
lea
push
lea
push
push
push
call
mov
jb
add
lods
test
jle
imul
mov
jl
add
add
mov
fs
add
clc
fcmovb
cmpsl
add
test
bound
jno
in
les
ljmp
push
sti
push
push
lea
push
push
push
push
push
call
add
add
mov
scas
add
jnp
xchg
jne
idivl
add
ja
add
add
stos
ja
aam
mov
mov
push
add
pop
add
add
test
add
cld
push
xlat
add
fiadds
fisubrs
lea
pop
mov
shr
push
lea
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
call
scas
push
loopne
push
push
add
fst
scas
add
xchg
add
pusha
not
jmp
cltd
popf
fchs
pop
js
add
xchg
hlt
jnp
add
mov
int3
add
fildl
sarl
add
jle
les
scas
data16
outsl
pop
addl
jb
xchg
or
add
subb
rolb
xchg
add
sarl
fs
ja
mov
lea
pop
mov
add
push
lea
push
push
lea
push
push
push
push
lea
push
call
roll
add
mov
lret
roll
add
mov
rclb
xchg
cld
out
add
ljmp
fdivr
sti
jns
add
icebp
add
add
mov
pop
add
loopne
lcall
rol
mov
lea
pop
pushl
push
sub
pop
popl
push
xor
inc
pop
mov
add
push
push
push
lea
push
lea
push
push
push
call
lahf
add
add
fisubs
cltd
mov
push
fstpt
in
pop
adc
add
add
cld
mov
cmpsb
add
add
add
add
out
add
fisubs
int3
mov
add
push
add
mov
lea
pop
xor
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
hlt
jno
subb
add
roll
add
jns
add
add
add
add
pop
mov
add
rolb
lea
add
add
pop
shl
movb
les
adc
clc
lea
pop
add
push
push
call
mov
clc
add
out
imul
mov
mov
imul
add
ja
xchg
jecxz
pop
out
stos
add
cmc
add
xchg
jl
mov
mov
mov
popa
movb
push
add
add
mov
lea
pop
xor
rol
push
shl
add
ror
pop
nop
push
lea
push
push
push
lea
push
call
shll
add
add
into
add
fildll
mov
pop
mov
lds
add
testl
add
out
lock
ja
fs
add
test
mov
add
jle
in
fdiv
cld
add
roll
add
mov
movb
add
pop
push
add
add
sti
jge
add
nop
mov
lea
pop
nop
xor
push
lea
lea
pop
nop
push
sub
pop
nop
inc
push
push
push
call
cld
xchg
stos
push
add
std
mov
add
cltd
add
add
jmp
mov
mov
jae
mov
enter
add
add
lahf
add
add
test
iret
pop
add
add
add
pop
nop
nop
push
push
push
push
push
lea
push
lea
push
call
int3
fs
add
mov
add
xchg
add
enter
add
neg
mov
jnp
add
add
insb
cmc
add
lea
pop
cmpb
jne
push
add
inc
pop
add
nop
push
push
call
movb
mov
add
jae
jae
cmp
add
add
pop
add
add
pop
insb
subl
add
mov
add
add
add
pusha
add
test
test
mov
lea
pop
nop
cmp
je
push
add
pop
nop
nop
push
add
inc
dec
shl
pop
inc
push
push
lea
push
push
call
fdivl
add
stos
add
mov
lds
stos
xchg
jecxz
mov
add
stos
add
add
loop
ljmp
mov
xlat
add
iret
scas
add
fisttps
pop
nop
push
push
push
push
call
add
lock
sarl
add
fcoms
je
in
movsl
add
insb
add
add
lret
add
add
in
in
in
add
ja
jno
fcmovbe
add
pop
jne
pop
addl
add
pop
gs
repnz
loope
cld
add
pop
scas
xlat
add
add
adc
push
inc
not
add
shl
pop
cmp
jb
xor
push
rol
dec
shl
shr
pop
jmp
mov
push
push
call
roll
xchg
add
mov
icebp
add
hlt
add
aad
mov
movsb
icebp
stos
add
add
push
mov
stos
mov
jle
in
add
add
add
add
xchg
negl
jno
mov
lea
pop
add
push
ror
shr
pop
movzwl
push
rol
sub
pop
mov
push
push
push
push
push
push
lea
push
call
cmc
mov
rcl
pushf
mov
mov
js
mov
add
mov
add
lods
in
popl
xor
add
pop
popa
xchg
add
lock
mov
add
lret
mov
mov
faddl
cmpsl
andl
mov
add
mov
bound
pop
add
push
add
shr
shl
shl
pop
mov
push
push
push
call
xchg
sahf
rcl
jecxz
push
add
pusha
mov
sti
iret
push
add
add
ljmp
in
add
add
faddl
mov
add
mov
xchg
fistps
jbe
test
push
add
xchg
pop
into
jecxz
mov
lea
pop
xor
xor
push
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
xchg
add
add
add
mov
into
sarl
arpl
add
testb
outsl
add
xchg
gs
jmp
rolb
insb
pop
pop
add
add
lcall
push
lea
pop
shl
xor
push
ror
shl
sub
rol
pop
shl
push
inc
ror
pop
xor
push
lea
shr
pop
shl
push
push
push
push
lea
push
call
mov
clc
push
add
add
add
xchg
jo
add
add
add
add
pop
jmp
int3
not
add
add
push
add
add
andb
into
add
cwtl
add
add
loopne
add
add
add
aam
bound
xor
mov
push
lea
push
push
push
lea
push
push
push
lea
push
call
fs
mov
rorb
stc
sti
mov
jle
mov
mov
loopne
pop
fs
filds
xchg
in
sti
sarb
jb
outsl
jmp
mov
lea
pop
add
push
push
push
push
lea
push
call
xchg
xchg
int3
test
add
add
fcoms
jae
in
cmpsb
test
jb
cmpl
add
add
imul
push
std
filds
movb
mov
pop
push
add
aam
data16
add
mov
add
push
add
sahf
add
cmpsl
in
add
rolb
add
pop
pop
pop
push
push
lea
push
push
push
push
call
add
jge
add
lds
add
mov
insb
add
movsb
pop
fbstp
add
xchg
add
add
add
add
movsb
add
add
mov
lea
pop
pop
push
not
add
add
pop
pop
push
lea
push
lea
push
push
push
call
push
add
clc
xchg
fndisi(8087
add
call
xchg
add
shl
add
out
imul
xchg
leave
imul
bnd
push
add
idivb
addl
add
add
add
add
fistl
loop
add
add
add
pop
leave
ret
push
xor
pop
push
push
push
push
push
call
add
pushf
add
ja
icebp
add
fildl
out
add
test
fnsave
xchg
add
mov
cltd
sbb
jecxz
repnz
add
push
add
movb
add
add
mov
lea
pop
mov
push
push
lea
push
call
testb
je
mov
add
push
addb
add
add
xchg
aam
push
push
jge
add
add
xchg
add
out
fiadds
add
roll
in
test
divl
add
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
xchg
jecxz
jbe
fnstsw
mov
int3
out
out
add
pop
out
jae
popa
in
add
imul
mov
add
push
bound
shll
xchg
add
lea
add
add
mov
add
rolb
add
add
mov
repnz
pop
push
push
lea
push
push
lea
push
push
push
call
pop
iret
pop
cmc
loope
add
add
add
gs
add
add
add
mov
cmpsl
add
mov
in
add
add
aad
flds
cmp
add
add
scas
mov
lea
pop
push
push
pop
mov
push
shr
pop
mov
push
inc
inc
sub
pop
mov
push
dec
pop
test
je
push
lea
push
push
push
push
lea
push
push
push
push
call
xchg
test
mov
add
mov
pushf
stc
movb
lods
jl
mov
add
test
add
add
fmulp
mov
jecxz
in
jnp
jb
sahf
xchg
sti
test
repnz
fiadds
add
fiadds
fcmovb
add
add
add
pop
xchg
add
scas
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
call
add
imul
add
arpl
add
add
add
ljmp
mov
test
je
popa
add
pushf
shlb
push
add
add
add
std
lods
bound
mov
jecxz
push
jbe
add
lods
mov
pop
test
je
mov
push
pop
mov
push
push
push
lea
push
push
push
lea
push
call
faddl
pop
add
cwtl
add
cmc
imul
add
mov
adc
xchg
add
lret
mov
add
sti
js
test
add
add
add
add
add
in
mov
add
add
lret
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
cmc
mov
mov
add
mov
in
mov
add
stos
mov
in
add
jmp
add
popa
add
add
add
mov
shrb
pop
cwtl
add
mov
mov
stos
add
filds
push
data16
scas
add
add
add
pop
pop
mov
lea
pop
inc
push
add
pop
cmp
je
test
je
push
shl
xor
add
pop
mov
inc
push
add
sub
dec
pop
cmp
je
test
jne
push
sub
pop
xor
push
dec
add
add
pop
pop
push
push
push
call
add
scas
jb
add
jp
add
lea
mov
xchg
js
add
leave
enter
add
sahf
add
push
add
cmpsb
popf
push
mov
stos
mov
lea
pop
pop
pop
push
lea
push
push
push
push
push
push
lea
push
call
test
mov
add
add
add
stc
xchg
add
add
add
lcall
mov
neg
xchg
ficoms
and
push
lea
push
push
push
push
push
call
imul
push
into
add
into
jp
in
popa
lock
aam
add
in
add
std
stos
test
adc
add
test
add
add
add
mov
add
enter
cli
add
add
xchg
add
add
ljmp
pop
mov
cld
mov
sbb
push
push
push
lea
push
push
push
push
lea
push
push
push
call
js
arpl
add
add
popf
rol
add
xchg
add
outsl
add
popa
jbe
in
add
jae
mov
add
in
fstpl
icebp
add
popa
roll
nop
mov
xchg
mov
lea
pop
ret
push
lea
push
push
call
outsl
xchg
in
mov
jmp
push
sti
push
popa
add
cmpsb
mov
jb
xchg
pusha
add
sti
nop
add
hlt
add
add
add
mov
xchg
xchg
add
addb
fnstsw
loope
ret
mov
scas
cli
add
sarb
lods
test
mov
add
add
add
test
add
testl
mov
lea
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
roll
cld
mov
scas
add
cltd
sti
scas
add
add
loop
aad
sar
into
into
add
jbe
xchg
add
fimull
add
add
add
insb
xchg
jb
stos
add
ret
add
in
mov
add
add
add
add
add
fildll
lock
lea
pop
inc
push
ror
rol
pop
cmp
jne
push
add
add
not
add
pop
lea
push
xor
sub
pop
mov
push
rol
shl
pop
test
je
push
push
push
push
call
lret
into
fldlg2
sahf
jnp
int3
add
mov
call
jmp
add
push
out
sarl
add
lea
xchg
lret
push
add
push
test
mov
jge
add
mov
lea
mov
add
lahf
jo
add
arpl
lea
pop
mov
push
shl
pop
add
push
shl
pop
cmp
jne
mov
push
push
push
push
push
push
push
lea
push
push
call
add
in
add
mov
cwtl
int
add
add
push
loop
out
pop
add
leave
add
add
mov
test
shrl
mov
add
push
push
insb
add
xchg
add
lods
add
add
add
lea
pop
test
je
mov
push
xor
add
pop
add
push
push
call
add
mov
mov
add
test
add
mov
add
jecxz
movsb
add
lds
clc
add
sbb
lret
aad
mov
xchg
jo
add
add
add
cld
mov
add
pop
cmp
je
jmp
push
add
not
not
pop
xor
pop
push
lea
push
push
push
push
call
data16
lock
arpl
add
imul
mov
movsl
add
add
cld
add
add
add
add
add
add
add
leave
add
jle
mov
add
lcall
mov
push
add
add
add
xchg
icebp
mov
jmp
jmp
jno
add
mov
lea
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
add
mov
shrl
xlat
test
add
jmp
sbbl
jo
into
add
imul
add
arpl
shlb
add
push
call
lea
pop
pop
leave
push
lea
push
push
call
mov
stc
pop
add
out
mov
xchg
push
fs
add
enter
add
add
add
movsl
sahf
ret
xchg
mov
loop
fsub
add
add
arpl
add
add
add
add
add
mov
add
mov
imul
addr16
ret
lea
push
not
dec
pop
pop
pop
push
rol
pop
pop
push
lea
push
push
lea
push
push
lea
push
call
add
data16
cld
add
lods
add
lcall
lret
hlt
add
data16
stos
insb
push
add
add
add
bnd
mov
int
add
js
add
mov
lea
pop
pop
leave
push
push
push
push
call
jecxz
xchg
add
iret
mov
add
add
add
stos
rolb
xchg
add
add
jne
sti
add
add
mov
cld
add
insb
incb
add
lahf
add
xchg
add
add
lock
pushf
in
mov
lea
pop
ret
mov
push
rol
shl
ror
pop
pop
push
sub
dec
shr
sub
pop
pop
push
lea
push
lea
push
push
push
call
mov
js
add
add
lods
aad
rolb
pop
pushf
addb
jle
xchg
add
out
in
add
push
popf
rolb
pop
iret
insb
js
add
jp
imul
rolb
lock
add
data16
add
add
iret
pop
push
add
lahf
mov
out
sbbl
add
nop
jo
add
imul
aam
bound
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
xchg
add
fwait
test
mov
nop
add
adc
add
mov
xchg
add
push
jb
pop
add
add
add
arpl
add
add
fildl
outsl
in
xchg
add
test
mov
pop
sbb
cli
push
add
fildll
imulb
add
movsl
cmc
add
cli
add
and
leave
push
push
push
push
call
clc
aam
out
fsts
jno
je
add
add
add
call
add
add
insb
mov
loopne
push
add
std
mov
lea
pop
ret
xchg
adc
xchg
icebp
je
pop
add
shll
xchg
jno
imul
mov
imul
enter
xor
xlat
jne
cmp
cmp
sub
dec
mov
xor
sub
subb
sbb
xor
imul
mov
stc
dec
ljmp
xchg
roll
xor
out
jle
mov
cmp
or
and
push
or
arpl
inc
mov
stc
cmpsl
mov
xchg
xchg
mov
push
loop
xor
sbb
fildl
dec
imul
call
push
repnz
dec
or
test
add
add
ds
jecxz
jg
and
mov
bound
pop
insl
inc
push
fsub
shl
or
clc
jl
hlt
ss
cmp
fcmovb
lods
add
lea
sbb
pop
call
push
mov
not
push
in
jno
decl
dec
xor
sub
int
movsb
inc
adc
jae
cs
push
inc
clc
ret
jbe
and
inc
mov
clc
mov
cmp
cmp
cmpsl
loop
xchg
repnz
mov
mov
push
push
xor
das
jnp
jg
test
imul
fsts
xchg
sarb
cs
inc
jae
jl
int
sbb
adc
ja
shr
frstor
jmp
jp
lret
push
in
cmp
in
pop
or
mov
push
cmp
adc
xor
add
call
stc
out
add
daa
stos
xchg
sbb
sbbb
and
xor
lahf
xchg
and
outsl
into
or
push
push
outsb
fucomip
push
icebp
jg
cmp
jp
xchg
adcb
in
repz
test
xchg
lods
shll
stos
aad
scas
mov
xchg
ror
cmc
imul
pop
sub
inc
inc
add
aam
pop
inc
movsb
out
pop
mov
and
xchg
cs
add
insl
push
cmc
hlt
xor
paddd
cmp
es
cmpl
out
jg
ja
addr16
aad
sbb
mov
nop
inc
jle
pop
jle
push
mov
repz
shrb
outsb
je
add
jae
push
dec
sbb
ret
lcall
lret
scas
roll
or
ret
jp
outsl
cmpsl
inc
and
mov
pop
out
jp
loopne
test
xchg
mov
repz
jp
lret
roll
push
dec
iret
lods
inc
mov
xor
xor
pop
movsl
sbb
or
arpl
jnp
es
or
jnp
jo
andl
lret
cmpsl
outsl
outsb
idivl
insb
inc
fstl
push
lock
fsubl
or
mov
sbb
mov
das
adc
lods
ljmp
cmp
pop
and
loopne
sub
dec
fldl
fiaddl
and
inc
std
mov
inc
sbb
out
cmp
repnz
test
jmp
mov
jle
data16
out
or
pop
arpl
daa
scas
shlb
fcmovnb
fsts
adc
out
popf
jge
push
sti
dec
mov
push
pop
dec
pop
push
sbb
das
scas
mov
inc
out
dec
cmp
test
dec
xor
lahf
popf
sub
inc
sbb
ljmp
outsb
insl
lret
popf
push
imul
rcrl
loope
adc
mov
aad
cmp
sbb
dec
pop
loop
in
or
cmp
add
fsts
sbb
ljmp
mov
inc
mov
sub
test
lret
out
test
outsl
and
sub
mov
mov
cwtl
mov
cmp
jb
mov
imulb
fisubs
iret
arpl
daa
add
stos
stos
dec
xchg
fnstcw
ror
add
rcl
js
insl
ret
mov
or
and
pop
jnp
fdivs
sbb
mov
or
xchg
repz
push
and
pop
loopne
test
mov
push
cmp
xchg
loop
sbb
gs
imul
add
inc
clc
daa
sbb
outsl
cli
xor
popa
std
dec
repz
jecxz
cmp
aam
and
lods
xor
dec
sti
pop
add
jne
pusha
mov
mov
loop
add
sbb
xor
pop
sahf
je
mov
mov
lds
add
stc
mov
cmpl
out
dec
mov
pop
and
inc
pop
orb
xchg
int
adc
push
lret
into
inc
shll
adcb
push
andb
mov
lock
scas
dec
fisubs
xor
mov
inc
dec
ret
mov
and
cs
jae
mov
notb
inc
adc
mov
cmp
loope
lock
loope
fwait
push
push
and
outsl
push
jno
lret
std
fld
test
xchg
mov
rolb
mov
scas
in
aas
jl
add
int3
push
loopne
adc
lods
sbb
ja
jno
jp
icebp
test
dec
test
mov
addl
push
popa
mov
cmp
mov
mov
mov
lret
mov
mov
lret
out
and
mov
iret
loop
mov
mov
push
mov
ds
movsb
add
lcall
scas
aas
stos
sub
jecxz
cmp
addr16
mov
out
xchg
std
inc
or
push
pushf
xor
pop
or
inc
dec
xchg
mov
daa
add
scas
sbb
insb
cmp
mov
or
xchg
popa
adc
xor
mov
out
sub
test
roll
gs
jmp
push
add
jmp
mov
lahf
sub
xor
int
adcl
dec
sbbb
mov
fwait
xor
dec
push
sub
cmp
sub
inc
mov
scas
mov
add
pop
stos
push
pop
stos
cld
mov
inc
dec
cmc
lock
fs
push
fistl
pop
dec
dec
inc
movsb
pop
mov
xor
jg
mov
sbb
sub
lret
adc
sahf
out
mov
inc
aad
sub
sbb
hlt
jl
push
cwtl
movsb
sub
mov
in
push
orl
add
mov
test
push
sub
mov
fiadds
shll
scas
sub
in
cs
lods
nop
xor
lds
or
mov
std
cmc
sbb
add
jno
xchg
fisubs
gs
add
les
insb
addr16
orb
std
mov
enter
scas
out
xchg
mov
rorl
cmpsl
xchg
add
pop
adc
and
loop
pop
pop
cmpsb
cmpsl
mov
jo
mov
int3
xchg
or
push
mov
xorb
pop
dec
xchg
icebp
test
cmpsb
leave
add
cmp
insl
and
adc
sub
mov
dec
icebp
loop
inc
xor
nop
scas
xchg
fadds
fistl
lea
cmp
icebp
mov
inc
gs
xchg
mov
sti
xor
outsl
sbbl
stos
imul
xchg
test
mov
das
aam
inc
push
dec
not
out
pushf
and
mov
imul
ret
shl
scas
add
ret
js
mov
stos
lods
lea
cs
cld
mov
inc
pop
pop
pop
push
sbb
mov
add
mov
mov
mov
mov
mov
cld
ss
je
jnp
lcall
pushl
pop
or
sahf
cmp
mov
and
fldl
shlb
mov
sub
and
adc
inc
out
mov
inc
mov
dec
cmpl
lret
xchg
mov
cmpsl
jp
jecxz
or
icebp
sbb
sahf
lods
test
inc
fwait
xor
cmpsl
pop
imul
mov
cmp
adc
mov
int
dec
sahf
test
sub
imul
in
ss
inc
lret
adc
jns
mov
and
adc
jne
cmp
sub
xchg
inc
mov
sbb
imul
insb
add
fimull
psubq
stc
jmp
xlat
inc
push
aam
rorl
xor
pop
xchg
pusha
cmp
sti
mov
test
mov
int
icebp
lahf
and
push
xchg
push
pop
dec
loopne
mov
cwtl
dec
xor
mov
xchg
std
jl
dec
fs
test
aam
inc
std
lods
push
fstpl
cltd
xor
xor
adc
xchg
xchg
outsb
cli
push
adc
and
daa
pusha
jnp
cmp
mov
cs
push
cli
sub
ret
mov
lock
outsb
inc
divl
test
cmp
xchg
iret
jecxz
shrl
push
dec
push
in
aas
in
addr16
test
call
aad
cmp
push
fstpl
pop
addr16
mov
inc
push
mov
das
hlt
lods
adc
cmp
or
popf
sbb
sbb
cld
mov
and
mov
loope
rcrb
stos
fists
pop
pop
inc
lahf
jl
das
fidivs
notl
adc
lods
and
into
sbb
sti
push
push
mov
mov
mov
outsb
into
lahf
adc
loope
dec
scas
push
popa
inc
dec
pop
jg
adc
dec
cs
mov
in
call
xchg
adc
sub
out
and
test
adc
push
inc
daa
or
cmp
das
lahf
add
or
aaa
cmp
ss
jge
sarl
push
dec
cmpsb
and
sti
mov
out
loopne
add
lcall
movsb
scas
jp
pop
add
popf
js,pn
mov
test
push
ret
inc
push
loope
in
ljmp
jle
xlat
sarb
std
or
jne
std
push
fiadds
mov
and
dec
in
lcall
and
testb
arpl
cmp
into
pop
sbb
pop
push
ss
jo
sub
mov
jbe
mov
jecxz
hlt
fldcw
or
aad
or
mov
xchg
mov
jp
inc
cmp
fbstp
das
repz
in
lcall
pop
subb
jg
jg
cmpsb
shl
jmp
sbb
cmp
stos
in
cmp
lcall
xor
fwait
movsl
adc
fcomip
push
sti
sbb
xchg
pusha
bound
jmp
out
lahf
or
mov
arpl
jno
jnp
adc
aam
lds
rolb
and
add
xchg
add
outsl
pop
inc
push
mov
dec
dec
divb
movsb
test
xchg
xor
jae
fsubrl
sbb
push
cld
scas
pop
hlt
addb
xchg
xchg
aas
sarl
mov
xor
cld
clc
imul
in
xchg
cmc
movsb
sbb
fwait
dec
in
sub
and
pusha
mov
test
xchg
add
lods
data16
in
sar
inc
jge
mov
call
hlt
push
jbe
mov
cmp
imul
sahf
dec
clc
xchg
or
add
popf
pop
adc
dec
mov
movsb
fstl
cmp
movsb
push
fstpl
in
add
push
adcb
xor
cwtl
or
dec
movsl
aam
aad
dec
test
aaa
icebp
idivl
jmp
sbb
mov
mov
stos
mov
cmpsl
scas
xchg
xor
cmp
es
inc
mov
mov
and
test
aad
cmpsl
dec
sub
stos
mov
cmp
je
scas
sub
jmp
inc
jnp
ds
jno
dec
jge
cmp
inc
leave
insb
mov
sbbb
lods
cmp
inc
sbb
pop
in
lahf
push
mov
sub
pop
inc
xchg
subl
movsl
sub
loopne
addr16
shll
gs
adc
inc
out
sub
and
ret
into
xchg
jb
mov
inc
fisubrl
aaa
outsl
sbb
outsb
aaa
popf
sbb
aas
add
mov
pop
xchg
cwtl
jne
daa
cld
or
bound
adc
addr16
cmp
ja
cs
dec
enter
psubusb
and
enter
aaa
insb
inc
adc
subb
sbb
xchg
push
adc
into
xor
jg
mov
lds
lcall
lods
mov
jne
sub
mov
or
inc
mov
adc
jle
inc
dec
pop
inc
mov
pop
pop
sub
outsl
xchg
mov
repz
xor
pop
cmovge
add
in
pop
xlat
xor
mov
push
mov
scas
and
shlb
xchg
mov
xor
or
jnp
xor
out
ret
mov
mov
cmp
cli
popl
mov
pop
xlat
jno
scas
cmp
fcoms
pop
fnstsw
xor
loop
cmp
mov
push
repz
xchg
in
fucomi
movsb
dec
add
and
or
pop
ret
cmpsl
scas
sti
sbb
aad
or
mov
dec
sbb
stos
mov
xchg
pmaxub
fmull
sub
mov
adc
cmp
lock
jno
jge
xor
or
jne
data16
aam
das
mov
mov
inc
filds
push
add
xor
sbb
shll
pop
clc
or
dec
push
stos
inc
push
fidivs
dec
arpl
lock
xchg
xchg
lret
sub
cmp
add
adc
aad
mov
lea
iret
clc
mov
ljmp
fdivrl
cli
pop
scas
sub
jge
daa
adcb
mov
pop
jmp
fldt
cmp
jno
add
in
xchg
pop
mov
pop
xlat
je
sub
and
sbb
mov
add
push
xor
jns
push
mov
popa
pop
movsb
and
ljmp
xchg
pop
push
and
add
mov
mov
jb
in
mov
lods
rol
add
sub
in
xor
dec
add
mov
insb
call
xor
jno
ret
dec
imul
xlat
dec
repz
xchg
jle
sarb
fsubl
icebp
testb
xor
cwtl
lds
inc
icebp
or
or
cmpsl
notrack
lret
mov
ficoml
fs
in
and
ds
mov
push
stos
dec
or
push
cwtl
out
pop
dec
mov
in
push
and
je
scas
cwtl
push
rorb
cmpsl
icebp
js
xor
repnz
adc
jne
add
cmp
dec
push
xchg
loopne
rcrb
dec
subl
fadds
addr16
cs
outsb
inc
cmpsb
xor
xchg
lea
mov
pop
push
cli
fdivl
pushf
enter
xchg
push
insl
ljmp
fdivs
sbb
outsl
mov
adc
outsl
dec
or
mov
in
and
lahf
xlat
cmp
xchg
mov
pop
int3
xor
inc
xchg
js
lcall
cs
lret
sar
shl
and
mov
ret
mov
fsubs
jl
adc
cmp
dec
stos
pop
shlb
lret
popf
and
adc
les
cld
outsl
mov
push
cmpsl
cld
cli
testb
incl
jbe
mov
dec
ffree
and
sbb
mov
xchg
jbe
cmp
fwait
movsb
cmp
inc
call
inc
icebp
mov
les
mov
lock
arpl
sub
or
mov
in
add
inc
aaa
mov
or
out
fwait
in
add
xchg
das
mov
xchg
mov
pop
popf
pop
je
sub
sbb
fcoml
mov
or
dec
or
aaa
leave
int
daa
pop
inc
nop
sub
lcall
gs
inc
mov
aam
lds
cmp
push
sar
fst
adc
cmp
arpl
cmp
sti
lret
leave
sti
ljmp
pop
fucom
push
push
inc
mov
adc
mov
shlb
data16
pop
push
jmp
leave
or
and
cwtl
cli
mov
pop
int
pop
andl
lahf
orb
adc
sub
loope
aaa
lahf
fisttpl
aas
fdivrl
mov
loopne
jge
adc
out
or
inc
loop
xor
mov
addr16
lret
push
cmp
mov
adc
xor
adc
leave
pop
fidivs
inc
xchg
pop
insl
or
ficoms
cmc
outsb
add
inc
jecxz
inc
sar
daa
push
call
fwait
xchg
in
and
jp
xchg
mov
repz
dec
in
mov
dec
loop
loope
fidivrs
out
scas
fcompl
xchg
cs
mov
add
and
sbb
dec
sbb
add
mov
test
sbb
arpl
dec
mov
insl
add
sbbb
pop
adc
jl
cltd
dec
scas
push
xor
ficoml
fs
jge
mov
mov
dec
mov
sub
xchg
fidivl
push
mov
out
sbb
jmp
mov
lcall
nop
mov
xchg
fdivrs
jmp
lds
subl
push
cltd
pusha
mov
push
push
and
fld
lret
movsl
jae
imul
popf
fistpll
arpl
pop
jg
jle
jmp
adc
jg
xchg
mov
sub
nop
pop
sar
enter
int3
lea
imul
mov
push
and
int3
xor
enter
int
mov
aaa
std
call
je
out
shll
loopne
dec
pop
sub
inc
daa
adc
xchg
fidivrl
fisubrs
fisttpl
cmpsb
cmp
cmp
dec
ss
lds
adc
add
icebp
repnz
nop
lea
mov
bound
and
rclb
cmpsl
testb
push
push
lea
out
sbb
xor
js
shlb
dec
fwait
push
fsub
stc
imul
hlt
imul
lods
movsl
jb
iret
mov
mov
add
adc
rcrl
sbb
in
and
adc
mov
call
push
mov
xor
xchg
push
sbb
int3
test
cld
xor
pop
jnp
adc
jmp
call
cmc
pop
xlat
jbe
inc
cli
mov
sbb
push
mov
xor
outsb
adcl
mov
xlat
cmpsb
sub
out
inc
xor
lahf
mov
xlat
pop
in
bound
rcrl
mov
sbb
and
rcll
pop
push
xor
pop
lret
adc
pushf
push
pusha
xchg
roll
bnd
ljmp
and
clc
das
push
movsl
out
and
inc
cmp
sub
adc
nop
aaa
mov
pop
jp
mov
mov
pop
and
loop
loop
push
ljmp
into
xchg
pushf
pop
movsl
jb
cli
data16
xchg
cmp
or
mov
adc
push
inc
mov
ret
cltd
add
push
mov
stos
movsl
mov
lods
dec
test
sbb
sbb
fiaddl
mov
lock
mov
das
push
test
fnstcw
in
sub
lahf
rcrl
cmp
dec
int
mov
lods
loope
mov
repz
shll
mov
dec
dec
push
pop
mulb
ljmp
insl
sbb
call
arpl
pop
mov
xchg
shll
cmp
or
push
cli
addr16
into
std
bound
jbe
sahf
jg
gs
fsubs
leave
cwtl
cli
cli
push
popf
push
ss
loope
mov
jae
shlb
add
dec
in
sbb
adc
pop
imul
xor
or
movsl
lahf
adc
jbe
sub
cld
dec
lcall
inc
xchg
pop
jp
sbb
push
jnp
rcll
aas
adc
mov
pop
mov
xchg
push
int
test
fidivrs
std
inc
mov
add
sub
add
or
sbbb
adc
cmp
lea
fdiv
push
xor
movaps
push
and
xchg
add
mov
xchg
movsl
cmc
stos
lea
pop
or
retw
mov
sarb
push
lret
imull
pop
outsb
lret
jg
push
pop
adc
fcmovne
mov
cmp
push
out
sbb
repnz
js
mov
or
adc
push
mov
adc
xchg
mov
adc
repnz
mov
enter
out
and
out
xchg
das
push
outsb
mov
xor
movl
lea
lock
inc
mov
mov
into
repnz
hlt
push
xchg
xchg
div
insb
sub
insb
nop
cs
add
test
inc
mov
xor
add
sbb
pushf
loope
mov
add
sbb
or
mov
lds
hlt
fs
imul
mov
adc
arpl
cmpsl
mov
sbb
decl
rolb
test
xchg
pop
sub
faddl
sub
push
cld
and
cld
out
pop
dec
xor
test
add
xchg
and
cld
pop
dec
test
and
aaa
sbb
jbe
adc
mov
fnstenv
dec
and
cmpsl
jo
push
loop
out
pop
sbb
or
repz
push
cmp
std
fs
es
icebp
sahf
push
mov
outsb
pop
scas
clc
inc
sti
mov
in
inc
inc
mov
pop
jg
scas
imul
cli
push
inc
clc
push
sbb
lahf
xlat
jns
pusha
cmc
lock
mov
aad
push
into
imul
xlat
enter
ja
and
cmp
repz
jne
negb
adc
pop
rol
cmp
stos
pop
ss
xlat
leave
push
adc
es
mov
sub
cmp
sbb
movb
lret
adc
mov
mov
push
mov
in
jb
adc
cmp
adc
push
add
sbb
js
fwait
xor
std
mov
shlb
adc
sub
ss
adc
xor
dec
pop
sub
das
clc
aad
xor
repnz
rclb
adc
cmp
and
out
imul
lahf
clc
fwait
and
sbb
das
test
pop
cld
cld
add
mov
inc
test
push
les
xlat
mov
sub
call
dec
mov
je
sbb
fdiv
jecxz
xchg
add
mov
mov
fldt
in
mov
or
lods
inc
outsb
aas
cmp
js
cltd
orl
dec
fs
pop
and
add
popa
inc
lds
xchg
push
xchg
xor
cmp
mov
sahf
mov
stos
or
sbb
js
cmpsl
fs
outsl
or
push
inc
dec
mov
push
cmpsl
sbb
movsl
xor
sbb
cmp
dec
cs
fstpl
outsb
inc
arpl
xor
lcall
aam
pop
sub
cwtl
aad
jl
add
sbb
aad
cmpsb
je
int
add
fnstsw
dec
mov
xor
cld
push
aaa
gs
dec
xchg
or
sub
fldl
mov
xchg
pcmpgtd
outsb
outsb
fidivrs
aas
loop
xor
std
gs
push
cli
pop
orl
sbb
test
popa
test
movsb
xchg
adc
repz
inc
out
pop
clc
pop
jge
cmp
fs
enter
std
ss
cmp
jmp
mov
nop
xchg
mov
jo
div
xlat
aaa
and
add
inc
jae
mov
mov
jmp
xor
movsl
fisubs
mov
cmp
movsbl
adc
aad
ret
int
push
lret
lret
icebp
xlat
adc
jnp
fisubrl
jno
ljmp
mov
ret
stos
fdivrl
dec
pop
xchg
in
daa
mov
and
pop
adc
stc
xchg
jae
jmp
popa
dec
sbb
cmp
cmp
sbb
aam
stos
pop
enter
test
insl
inc
lcall
insb
xor
push
sub
mov
xlat
mov
adc
shl
repnz
aaa
insl
inc
repnz
sbb
fstpl
inc
sbb
push
mov
jnp
jae
jns
sbb
sub
mov
mov
xor
inc
pop
mov
jns
lahf
xor
incl
sbb
pusha
pop
in
inc
push
xor
jmp
xchg
xor
inc
adc
sbb
mov
push
xor
xlat
push
rclb
jp
push
cmpl
xchg
adc
testl
out
and
and
push
sub
dec
daa
lds
sub
xchg
aas
gs
mov
jne
adc
sub
not
adc
mov
enter
push
ds
aas
addr16
xor
mov
pop
pop
push
mov
adc
clc
xchg
mov
fildll
cwtl
pushf
outsl
cmp
jmp
or
sub
lahf
xchg
pop
dec
mov
insl
test
cli
or
ret
pop
cli
pop
and
mov
jle
call
cld
movsl
or
mov
ret
lret
or
clc
or
adc
rolb
sub
cmp
sbb
in
adc
xor
fdivrl
fs
add
sub
push
xchg
lcall
pop
add
xchg
leave
or
das
fcomps
jno
push
repz
jnp
mov
cmc
out
adc
jp
pop
lds
inc
cmpsl
insl
xchg
insl
out
inc
div
out
cld
jb
xor
test
pusha
jo
mov
pushf
imul
xchg
shlb
lock
sbb
or
testl
cmp
cmpsb
nop
es
xchg
xchg
xor
mov
rcrl
xchg
das
xchg
insb
mov
fstpl
jns
bound
testl
add
xchg
filds
mov
repnz
scas
jnp
mov
int3
mov
ret
push
cmpsb
pop
cmp
sarl
or
jmp
xor
ret
sbb
mov
xchg
mov
inc
loop
ds
or
mov
or
aas
mov
xlat
mov
rcrl
roll
scas
mov
mov
ret
push
ds
and
and
sbbl
and
in
xchg
add
add
cmpsb
mov
aam
push
push
add
mov
cmp
adcl
js
rorb
stc
fstps
popf
enter
cmp
aam
mov
popf
push
mov
mov
sbb
push
xchg
mov
jle
jne
jae
movsb
add
push
fstpl
je
into
mov
insb
sbb
dec
imul
cmp
fcmovb
or
add
cmp
or
inc
xchg
pop
mov
mov
aad
mov
xchg
mov
shrl
iret
or
and
mov
ret
or
mov
lds
int3
add
mov
jae
mov
fildl
jb
loope
in
ja
push
call
lretw
mov
jbe
xchg
aad
xchg
leave
popf
or
xchg
jge
pop
cld
adc
das
in
mov
cmp
jns
adc
mov
adc
push
lret
pop
lock
addb
push
aas
xchg
ja
adc
xor
push
mov
inc
sbb
rcll
xchg
xor
jg
mov
xor
popa
sarb
jge
inc
adc
push
call
fstpt
stos
fs
push
and
fldl
or
jne
jne
adc
mov
mov
xchg
dec
jg
scas
xor
sbb
push
insb
xchg
pop
push
and
inc
pop
iret
sbb
dec
and
mov
iret
or
pop
lret
or
mov
adc
sbb
push
pusha
out
das
movsb
and
xchg
cmp
push
xor
or
mov
sbb
ljmp
shll
push
mov
xchg
push
clc
scas
add
or
incl
add
dec
lea
bound
sbb
repz
leave
xchg
and
call
sti
out
popa
inc
mov
cltd
stos
jmp
imul
add
xor
popa
sarb
dec
movsb
sarb
test
je
ljmp
xor
movsb
insl
pop
push
cmp
sub
lock
in
subb
add
push
and
xchg
xchg
jle
or
inc
aam
sti
outsl
mov
nop
xor
push
lea
mov
sub
inc
xlat
push
add
cmp
dec
or
ja
xchg
fs
xchg
lcall
enter
mov
repz
pop
push
fstl
jo
popf
mov
jecxz
xchg
aam
test
lods
fbld
loopne
fdiv
mov
fwait
and
jmp
jp
push
mov
sbb
sarb
sub
pop
or
je
xchg
stos
js
shl
leave
push
jecxz
ret
ja
sub
das
jnp
lods
dec
jns
jp
push
adc
dec
outsb
pushf
shlb
sbb
jns
iret
addr16
inc
movsl
repnz
dec
scas
inc
dec
dec
out
inc
ljmp
mov
or
idivb
sbb
inc
xchg
call
fmull
sbb
cli
mov
mov
test
ret
sub
adc
testl
cli
lret
lods
cmc
test
push
jo
dec
insl
cwtl
mov
cmp
sub
adc
aam
and
xchg
add
leave
ficoml
jno
outsb
das
loope
in
insb
and
out
into
and
sbb
bound
push
cmp
xor
xchg
pop
out
cld
dec
addr16
insl
or
inc
push
pop
test
sub
or
adc
aam
sti
test
pop
les
cs
jp
nop
in
xor
fstpl
out
push
xor
jle
das
inc
sbb
adc
xchg
ffree
cmp
scas
inc
jbe
roll
fcomps
dec
cmp
aas
xor
mov
stc
jno
adc
dec
out
cmp
xlat
or
subb
cmp
xchg
push
cld
adc
cltd
xorl
pop
mov
cmp
adc
xor
adc
sbb
push
lock
rcrl
je
cmp
cmp
enter
leave
in
xor
mov
fwait
cwtl
mov
mov
in
add
pop
arpl
cmp
pop
pop
sti
cmp
test
cmc
push
dec
cwtl
test
push
testb
jg
inc
xor
pop
xchg
movsb
cmp
lret
xchg
push
xor
add
jmp
add
aaa
lds
xchg
inc
or
test
es
add
sahf
loopne
jmp
out
test
sub
ja
adc
inc
rcll
cmpsb
jl
push
push
test
sahf
xchg
les
sub
popf
mov
mov
in
add
lea
hlt
xchg
pop
mov
xchg
xchg
imul
scas
sbb
out
repz
jne
mov
dec
push
and
imul
fdivl
push
cmp
outsb
pop
adc
add
cs
fdiv
mov
mov
insl
mov
fwait
dec
mov
and
dec
ss
jecxz
add
cs
mov
test
jbe
xor
testb
out
lock
es
adc
out
push
mov
popf
decl
cmc
adc
fsubrl
lock
jle
imul
pop
rcll
fisttps
test
sbbl
loope
lods
mov
xchg
mov
push
mov
adc
lret
push
add
mov
clc
int
iret
jge
mov
add
gs
cmp
xor
ja
mov
add
and
jb
aam
inc
push
bound
push
cmc
test
pop
sbb
jp
xchg
xor
mov
or
dec
scas
mov
inc
jl
or
fildll
pop
aas
pushf
and
and
push
push
jne
gs
movsb
outsb
xor
xor
aad
lods
cli
mov
cmc
or
ds
loope
roll
into
dec
test
add
out
pop
and
dec
cli
test
mov
test
sbb
push
xor
pop
cmc
adc
xchg
mov
cmp
dec
shl
or
cmpsl
mov
cli
insb
cmp
shrb
mov
das
mov
sbb
and
or
xor
ret
repz
cmc
xor
mov
add
adc
or
lods
mov
xor
inc
mov
test
mov
sub
ret
enter
in
addr16
adc
push
xchg
xor
xchg
mov
add
or
inc
rclb
mov
out
in
xor
imul
sbb
insl
arpl
shrb
fldl
rcrl
dec
cmc
inc
xor
push
xor
sahf
fdivs
sbb
adc
inc
repz
push
nop
xchg
xchg
test
popf
pop
out
add
dec
pop
dec
scas
insb
pop
stos
push
into
das
test
arpl
push
repz
mov
cs
push
movsl
mov
sbb
test
pop
xchg
jnp
ficomps
lret
out
or
adcl
ds
push
push
imul
xor
int
mov
into
push
in
adc
shrb
subl
inc
lods
sub
movsb
mov
xor
cltd
sahf
test
push
mov
dec
push
mov
mov
mov
jne
insl
jno
xchg
leave
jg
xor
mov
cwtl
push
xor
loopne
sub
mov
pop
insb
mov
cld
popa
mov
xchg
pop
cwtl
sbb
mov
out
dec
xor
push
test
pop
lret
scas
push
mov
notb
or
and
jnp
lcall
mov
lea
jle
fmuls
push
xchg
pop
add
outsl
mov
leave
sbb
xchg
mov
scas
cmp
cmp
pop
outsb
add
mov
lea
mov
aas
or
out
push
jo
push
adc
aaa
xchg
push
dec
aas
pop
lock
jmp
pop
push
in
fsub
mov
stc
iret
or
xor
jg
lea
mov
fidivs
test
lcall
xchg
aad
std
inc
lea
jne
jle
das
aaa
shl
dec
repnz
sub
mov
loop
test
aad
ljmp
imul
dec
inc
mov
push
push
rcl
mov
or
movb
pop
cmp
xor
xchg
xor
stos
and
lods
popa
icebp
out
daa
das
jecxz
in
test
fxch
cli
ss
xor
fisttpll
leave
in
fadd
cmc
jbe
pusha
scas
or
push
outsb
mov
loope
jecxz
stos
fwait
cwtl
into
aaa
in
lcall
fmuls
mov
push
outsb
xchg
fcmovb
shrl
js
test
cwtl
xor
ret
xor
or
lret
arpl
pmaxub
cmp
sub
xchg
fcomps
icebp
pushf
clc
jns
xchg
mov
push
pop
cli
jl
adc
xor
sti
dec
sbb
mov
xchg
adc
add
dec
mov
cli
dec
cld
push
inc
cmovle
cld
inc
mov
cmc
in
dec
test
jle
int
adc
enter
push
aad
jmp
xchg
mov
sbb
inc
mov
adc
sbb
xchg
fidivrs
mov
rorl
es
sub
mov
fcoms
sub
loopne
cmp
stc
aad
daa
out
lods
mov
xor
popa
stc
icebp
mov
out
cmp
int3
adc
and
scas
xor
lcall
pop
xchg
jb
testb
in
and
and
and
mov
movsb
pushf
fisttpll
fs
xor
xor
cmpsb
jae
mov
inc
fsubrs
jl
xchg
jo
cmpsl
lods
notb
xor
mov
jecxz
call
bound
pop
outsb
xchg
push
fiaddl
fstenv
sub
pop
xchg
mov
jbe
js
inc
rcl
ja
add
push
inc
and
mov
jns
je
dec
scas
and
or
lods
popf
scas
push
daa
movsb
cmp
into
and
scas
dec
stos
test
mov
fcmovne
pop
sarb
dec
adc
std
mov
push
push
inc
out
andl
push
mov
inc
movb
int
push
pop
push
popf
outsl
fyl2xp1
cmp
outsb
add
gs
mov
ret
or
addl
sub
dec
mov
jle
into
or
loope
push
es
sub
scas
inc
shl
mov
push
pop
sub
jl
push
add
pop
mov
sub
test
inc
or
sbb
leave
lods
into
sub
adc
xor
jmp
inc
nop
jle
mov
mov
mov
push
lods
sbb
mov
call
lods
xchg
or
mov
arpl
mov
ljmp
fdivs
int3
orb
xchg
fcomps
push
cmpsb
test
mov
cmp
push
pcmpgtd
sbb
iret
pop
dec
shlb
frstor
mov
int3
ljmp
sarb
pop
cs
addl
pop
mov
rol
outsb
xchg
js
scas
stc
ss
xchg
lds
push
call
pop
loope
arpl
test
cwtl
jns
mov
xor
sub
mov
jmp
dec
adc
out
sub
test
hlt
ja
cmp
inc
and
push
mov
fiadds
ret
pop
and
jnp
fisttpll
aas
aad
rcrb
inc
dec
xor
shlb
jmp
pop
push
shll
add
int3
clc
pusha
cmp
xchg
inc
or
fiaddl
fnstcw
scas
inc
call
ljmp
inc
mov
lcall
cli
xchg
jmp
ror
add
xorl
loopne
test
ja
repz
adc
mov
movsb
lcall
cmp
mov
mov
ret
daa
mov
dec
mov
sbb
shl
leave
inc
lahf
inc
js
and
cltd
push
sbb
push
popf
xlat
iret
mov
push
faddl
addb
sub
sbb
adc
push
or
orb
clc
pop
push
test
push
xchg
cmp
and
in
and
inc
nop
pop
xchg
jle
iret
mov
dec
pop
notl
inc
push
loope
mov
mov
icebp
test
sbb
mov
repz
mov
loopne
jae
in
aam
ds
push
lret
and
and
mov
pop
xchg
xchg
clc
or
cmpsb
test
push
les
imul
aad
ljmp
call
xchg
mov
jno
sarb
or
movsl
cmp
cmp
shlb
jge
push
add
stos
leave
inc
xorb
lds
imul
lock
test
jp
adc
mov
in
pop
insb
pop
dec
mov
test
jb,pn
push
xlat
std
xlat
iret
int3
outsl
push
sbb
cmp
mov
jbe
pushf
xchg
push
sarl
mov
mov
cltd
repnz
inc
adc
and
cmp
out
test
aaa
adc
mov
bound
jl
stos
mov
mov
xor
push
ret
add
cmpsb
push
sub
insl
lock
flds
cmp
aad
mov
or
pop
adc
fbld
aad
mov
mov
mov
adc
mov
lea
lods
aaa
mov
push
idiv
mov
insl
loop
in
pop
lret
imul
dec
push
test
popa
sbb
sub
div
mov
hlt
popa
es
jge
and
addr16
out
std
ret
fcoml
lcall
lea
call
push
push
andb
orb
cld
lcall
test
and
jge
dec
mov
scas
adcb
in
ficoml
outsl
mov
sbb
push
jne
mov
std
int
adc
push
scas
fstl
in
sub
xchg
sahf
stos
pushf
cmp
stc
adc
push
mov
inc
sub
mov
mov
out
fstpt
mov
inc
push
xor
push
test
clc
test
sbb
cli
pushf
adc
cmp
insb
pop
adc
cmp
pop
fisubl
imul
outsl
clc
fisubs
push
add
xchg
es
pop
jno
cmp
dec
daa
inc
or
scas
movsb
rorb
xor
sbb
push
movsb
jnp
cmp
lods
inc
aas
push
stos
fimull
mov
xchg
mov
pop
ss
or
fxam
inc
test
jge
lods
adc
jbe
insl
nop
push
and
dec
lret
fs
dec
repz
ja
mov
das
shl
imul
out
ss
test
pop
testb
xchg
xchg
test
pop
sbb
and
pop
ja
imul
pop
es
mov
loop
fwait
inc
int3
jns
adc
fxsave
aas
xor
cwtl
test
jle
inc
xchg
mov
lret
or
icebp
rcrb
mov
js
sub
xchg
lret
arpl
rclb
mov
push
addr16
lock
inc
aam
adcl
xchg
sbb
xor
aad
orb
push
sub
ja
cmp
jns
sbb
enter
data16
out
pmaxsw
out
bswap
xchg
fwait
aas
inc
adc
push
ds
pop
pusha
shlb
cmp
movsb
add
fwait
xchg
leave
xor
cltd
lds
mov
lcall
mov
sub
shl
icebp
fs
push
mov
dec
lds
push
cmp
cs
imul
leave
rolb
mov
shll
dec
mov
mov
inc
jne
pop
adc
das
add
or
data16
mov
push
jo
fcom
aaa
and
pusha
in
pop
sub
xor
jp
sarl
ret
sbbl
jae
lds
das
aas
sahf
test
fs
andb
ss
icebp
jle
mov
lock
movsl
inc
cmc
cmpsl
js
xchg
das
inc
jl
and
mov
push
ss
gs
clc
mov
inc
rcrl
dec
lret
add
adc
out
sbb
insb
scas
adc
and
sbb
inc
loop,pt
in
addr16
nop
repnz
cmp
inc
repz
ret
mov
sub
call
sbb
pop
push
fwait
inc
adc
push
dec
arpl
daa
in
xchg
adc
aaa
lahf
push
or
dec
ss
mov
jecxz
inc
add
fisttps
pop
push
mov
sbb
push
scas
mov
mov
and
popa
or
into
das
push
call
ds
into
sbb
jp
aas
aaa
push
lods
bound
push
cmc
xlat
or
rcll
or
push
je
int
mov
fildll
int3
aaa
xor
addl
clc
mov
fsubl
or
and
sahf
cmpb
orb
and
das
and
testl
jne
jae
fstenv
jl
inc
roll
cmp
rcr
push
lcall
lock
mov
rcrb
or
jns
das
inc
enter
imul
xor
ret
jno
out
cmc
cli
daa
insl
decb
test
xchg
fnstsw
ja
repnz
push
xlat
dec
call
iret
push
ss
sbb
inc
dec
call
push
sbb
mov
lahf
insl
xor
sub
rorb
inc
jp
mov
fmul
mov
mov
mov
xor
mov
stos
lcall
push
in
loope
pop
and
daa
jne
and
sub
arpl
aam
pop
or
adc
popf
sbb
loope
dec
mov
or
push
test
sbb
cs
xchg
mov
mov
enter
jo
ljmp
jne
push
es
scas
mov
jmp
dec
xchg
je
testl
fldpi
push
inc
scas
xchg
cmc
adc
es
and
das
ja
cmp
adc
cmp
stos
dec
sub
pop
pop
dec
pop
xchg
jae
sbb
sbb
or
movsl
call
fstp
fcomps
and
sub
xor
fnsave
out
aaa
icebp
repnz
mov
sub
shrl
push
aas
pop
out
mov
loope
sbb
xchg
adc
mov
adc
gs
mov
insb
pushf
adc
mov
mov
mov
pop
jns
mov
std
aas
sub
add
cwtl
xchg
fwait
pop
addb
iret
fisubrs
enter
adc
dec
dec
xchg
mov
out
xor
mov
mov
std
sbb
pop
xchg
aas
loope
and
and
jecxz
icebp
add
cld
push
mov
ds
or
push
mov
push
test
sbb
xchg
jb
xor
ja
xor
cltd
fisttps
inc
dec
push
cmpsb
jne
adcb
popa
rcrb
inc
dec
icebp
or
jno
sub
sbb
pop
pop
adc
popa
xor
dec
jbe
mov
push
js
mov
mov
pop
dec
cmp
aaa
scas
lcall
sbb
mov
xchg
subb
push
or
dec
pop
insb
mov
inc
mov
push
test
mov
pop
mov
fcompl
cmpl
pushf
loope
cwtl
ret
adc
xor
imul
sti
xchg
inc
jb
lret
pusha
xor
cmpps
loop
pop
cltd
xchg
mov
ds
xor
mov
lock
adc
push
cmp
fistpll
mov
int3
or
test
and
gs
div
pop
fidivrl
scas
pushf
adc
push
jge
dec
push
xchg
adc
ret
inc
mov
push
cmpsb
aas
stc
jae
testb
adc
cmp
jo
jp
aas
movsb
cld
aas
fwait
outsb
mov
pop
ss
enter
out
loope
cmpsb
insl
add
mov
push
dec
mov
ret
xchg
mov
stc
cld
pcmpgtb
mov
mov
inc
mov
ja
arpl
jp
jnp
cmpsl
or
sbb
push
fs
mov
std
mov
pop
fiaddl
shll
je
leave
sub
jno
stc
popf
pushf
pop
push
add
addb
int
mov
jecxz
mov
lret
lods
or
sbb
aad
mov
cmp
jl
rcrb
ljmp
xor
outsl
cmp
jbe
mov
dec
fistpl
xchg
aas
xor
dec
dec
push
rcrb
mov
xorl
inc
inc
popf
repz
push
mov
ss
or
inc
cmpb
xlat
js
xor
sub
mov
mov
add
mov
lds
pop
xchg
out
xchg
inc
popa
shlb
aam
in
jge
push
and
pop
mov
xchg
pop
jmp
add
les
fmulp
jmp
add
mov
adc
cs
dec
es
sub
lock
fs
pop
loope
rcl
imul
jl
xchg
shr
mov
jge
mov
xchg
das
jo
adc
call
scas
or
outsb
push
sbb
push
add
xor
and
sbb
aas
mov
icebp
or
cld
pop
push
lret
and
and
mov
insl
jo
sub
movsb
idivb
insl
and
roll
daa
xchg
gs
ret
jae
lea
sbb
imull
xor
push
inc
sub
leave
xchg
push
xchg
sbb
mov
roll
aas
dec
std
sbb
insl
hlt
test
sahf
shl
cmp
aam
jno
push
push
mov
clc
rol
les
pop
push
mov
jecxz
sub
mov
hlt
ljmp
aas
fsubl
mov
xor
pop
adc
loop
mov
fs
sub
jmp
sbb
stc
push
mov
aad
or
mov
adc
hlt
repz
add
xor
mov
in
stos
push
stos
decl
or
lods
subl
and
add
shll
cmp
ja
adcb
jmp
dec
push
xor
jae
ret
xor
mov
int
out
pop
popa
pusha
mov
aam
xor
insl
add
mov
jns
popa
sub
mov
add
xor
adc
add
inc
cmp
cmpb
add
push
cmp
sbb
nop
pushf
push
fdivs
jnp
pop
mov
cmp
pop
mov
outsl
loope
sbb
jecxz
sbb
sbb
sub
inc
loop
xor
lahf
mov
and
dec
bound
int3
cmp
test
arpl
push
shrb
mov
xor
pop
jl
push
push
loope
pushf
mov
or
int
mov
movsl
mov
push
push
hlt
inc
or
mov
in
push
jl
movsl
es
jle
out
lcall
call
jp
xchg
cmp
ret
clc
pop
out
scas
sbb
mov
mov
push
into
push
pop
push
je
cli
aas
push
sahf
sbb
ss
mov
pusha
es
repnz
popf
fs
cmp
iret
adc
dec
out
arpl
call
jmpw
mov
xchg
leave
addr16
mov
gs
inc
sub
push
sub
xor
pop
mov
push
lahf
add
jae,pt
mov
pop
repnz
ret
jl
pushf
int3
fisubl
fnstcw
push
mov
sub
jae
push
mov
loop
mov
lahf
xchg
mov
push
jmp
leave
pushf
lahf
push
imul
jns
into
mov
pop
adc
aam
cmp
inc
scas
and
and
pop
sub
pushf
or
aad
and
add
je
negb
popa
or
add
sub
mov
sarb
aam
sbb
mov
rcrb
fcoms
inc
nop
pop
xor
cmp
gs
out
aad
adc
inc
ffree
and
daa
fistpll
fiadds
jg
imul
sub
lock
dec
mov
ja
jp
jl
xor
ja
xor
sbb
bound
mov
inc
cmp
and
xchg
mov
loopne
sub
aaa
mov
cld
test
sub
or
xchg
pop
mov
pop
cmp
ljmp
js
pop
lret
maxps
out
fldcw
ljmp
jecxz
xchg
dec
cmc
bound
sub
adc
push
xor
mov
daa
gs
andb
test
add
loop
xchg
jo
lea
inc
push
scas
imulb
mov
push
mov
sbb
jb
add
fdivl
out
shl
sbb
int3
cmp
mov
jne
out
xor
test
cltd
pslld
arpl
or
leave
xor
por
add
add
inc
jp
cmp
mov
adc
push
test
add
out
out
data16
lds
dec
cmp
les
jge
sbb
mov
inc
std
xorb
inc
mov
mov
addl
sarl
pushf
in
je
adc
dec
mov
pop
movsl
repnz
or
cmpsb
lahf
inc
lcall
sub
xlat
sbb
add
cli
cmpsl
jle
jb
dec
arpl
inc
or
std
aas
inc
sbbb
jmp
xchg
inc
sub
mov
lds
lods
and
jae
stc
inc
cmc
sbb
mov
ss
inc
in
mov
cltd
scas
ds
jne
mov
lods
mov
loopne
repz
ret
pop
insl
sbbb
dec
shll
or
adc
test
stos
add
cmp
rcrl
sti
ja
mov
pop
out
add
jne
shll
mov
jne
inc
mov
pushf
cmp
mov
inc
push
test
imul
add
or
popa
or
fbld
scas
scas
jo
mov
aaa
xchg
pusha
es
mov
and
mov
in
es
push
ds
sarb
out
mov
subb
sub
adc
dec
out
pop
loop
daa
sbb
in
scas
fmull
ret
sbb
sti
loope
lret
inc
dec
sbb
xchg
daa
daa
add
mov
add
jae
lret
push
add
xlat
repnz
inc
leave
inc
daa
in
push
popa
data16
dec
xchg
aas
popl
dec
vcvtsi2sdl
cli
jbe
xor
pop
or
push
repnz
sbb
cmp
leave
cmp
into
or
mov
pop
sbb
mov
xchg
lock
pop
xchg
cmp
orb
cmp
jo
mov
stos
fadds
ss
sub
pop
pop
imul
pop
mov
sub
lock
inc
xchg
cmp
test
out
loop
std
and
push
mov
xor
mov
repz
ss
sbbl
dec
arpl
rol
ret
xchg
test
fldcw
addl
in
cmp
js
jmpw
mov
outsb
jge
push
jae
mov
inc
outsb
push
mov
xor
in
cmpsl
pop
adc
cmp
push
xor
ljmp
test
and
mov
cwtl
aam
jp
fmull
dec
fsubp
xor
pop
cmpsl
pop
mov
pop
jle
sub
and
sbb
add
lcall
jl
or
or
sbb
jno
push
or
add
pop
fsts
fistps
xor
xlat
test
cmp
mov
xor
mov
xor
mov
stos
pop
mov
sbb
sub
std
jne
jmp
pop
sbb
or
mov
in
pushf
int
sbb
loop
add
sbb
int3
cltd
enter
mov
mov
mov
inc
and
stc
rcr
dec
adc
and
aam
push
xor
loope
lcall
ret
shlb
mov
in
mov
das
adc
jbe
jp
mov
jo
sub
pop
dec
sbb
int
addb
or
out
cmp
gs
mov
xor
mov
or
sub
xchg
pushf
stos
sti
das
out
sti
adc
mov
arpl
lcall
sub
sbb
or
add
pop
jo
js
lds
cli
lcall
dec
loop
pop
fdivl
adc
fs
push
mov
jo
movsb
lods
xchg
add
das
in
adc
div
xchg
clc
gs
sbb
push
ficomps
cmc
xor
daa
movsl
sub
outsb
sub
and
out
adc
fincstp
sub
mov
cmc
inc
mov
jo
xchg
jno
rorb
push
xor
cli
arpl
fstpl
mov
lahf
jns
inc
mov
mov
data16
push
xorb
fwait
sbb
mov
popa
pop
repnz
dec
pop
scas
je
fisttps
je
arpl
cld
inc
mov
jb
and
mov
pop
ficomps
inc
pop
mov
ss
xor
adc
or
or
arpl
xchg
mov
and
adc
dec
push
and
fsubs
push
jge
dec
and
mov
in
mov
aaa
jmp
repnz
and
in
out
insb
xlat
and
jp
dec
xor
mov
cmp
and
shlb
jb
in
popf
adcl
cmp
cmp
fcmovnbe
pop
push
das
fidivrl
cltd
and
fsubs
imul
imul
cmp
cmp
ds
popa
outsb
es
iret
cmp
jecxz
xchg
add
test
xchg
fsub
mov
mov
jecxz
push
dec
inc
scas
fcmovnb
andb
iret
mov
cmp
mov
mov
data16
ret
sbb
jno
jg
fldt
push
or
pop
lret
imul
jns
ss
movsb
adc
inc
mov
mov
int
and
pushf
cli
xchg
pushf
out
or
pop
mov
xor
in
pop
iret
iret
lcall
test
pop
pop
jo
mov
xchg
xchg
sbb
xchg
pop
jge
outsl
mov
test
jmp
adc
cmp
push
je
movsl
xchg
cmc
je
icebp
sbb
and
mov
clc
gs
lds
hlt
das
pop
pop
ss
inc
sahf
push
and
rcrl
adc
sti
popa
lahf
out
inc
inc
mov
sti
aad
into
cmpsl
xchg
xor
push
jnp
in
shlb
outsb
cmp
fs
jg
cmp
inc
mov
xchg
jg
sub
and
cmp
jg
mov
inc
jl
inc
shll
jb
rep
sub
data16
loope
sub
lcall
movsl
adc
mov
jns
cmp
add
sbb
fwait
cmp
cmpsl
fildl
pop
lahf
mov
add
shll
xchg
jge
pop
xchg
mov
in
or
loop
inc
sub
mov
xor
push
jg
add
dec
imul
inc
dec
test
sub
lcall
lahf
movsb
sbb
cwtl
das
or
sub
test
pop
mov
daa
cmpsl
mov
sti
jbe
dec
push
int
cli
rorb
out
mov
mov
in
repnz
fisttpl
fwait
lret
mov
sbb
push
lcall
ret
mov
fcoml
or
add
outsb
dec
pop
pop
jne
popa
cmp
leave
cwtl
xchg
sbb
adc
sbb
int
inc
lcall
pop
jo
and
movsb
aas
jecxz
lahf
or
jo
clc
dec
mov
movsb
mov
inc
mov
imul
add
nop
in
outsb
pop
jmp
ja
push
mov
loopne
push
shlb
leave
inc
subb
insl
cmp
jle
mov
imul
mov
sbb
popa
js
scas
inc
inc
jo
dec
out
jns
push
pop
std
jecxz
scas
xor
cltd
xor
mov
mov
add
loope
push
fmull
cmp
mov
or
push
pop
cld
inc
insl
addr16
fidivrl
clc
mov
dec
test
stos
pop
lret
sub
sub
fldenv
sbb
sti
mov
cmp
out
lods
insl
sub
inc
sub
cmc
in
aas
mov
mov
xor
imul
push
dec
and
insl
orb
mov
bound
popa
in
arpl
lret
and
xchg
dec
push
sbb
dec
cs
push
cmp
mov
jle
xchg
or
pop
xor
cmp
push
lods
cld
insb
and
jno
add
jge
jo
mov
lock
mov
mov
push
and
fisubrl
sub
mov
sub
push
stos
pushl
cmp
xchg
xor
bound
mov
jns
jmp
mov
adc
pop
cmp
negl
mov
cltd
push
das
push
movsl
dec
dec
loope
mov
movsb
xchg
jle
loope
iret
cmp
repz
sub
int
or
movsb
sbb
jne
add
pop
inc
imul
fwait
shl
dec
aam
ja
mov
in
leave
mov
add
cmp
inc
adc
mov
and
adc
push
mov
adc
aas
xchg
push
mov
sub
int
lock
xchg
fnstsw
push
fmul
xchg
enter
jle
push
cmp
jne
mov
fidivl
cltd
push
pop
in
sub
pushf
ja
inc
fisubrl
inc
rcl
imul
inc
push
sub
cmp
xchg
lds
shlb
sti
mov
mov
fdivrl
push
fidivl
mov
movsb
and
je
mov
xchg
ds
sub
imul
lahf
xchg
movsl
mov
add
mov
loope
xor
ret
xchg
adc
out
mov
cmpsl
aas
dec
sub
mov
sub
sub
stos
js
pop
lret
mov
outsb
or
stc
fldt
aam
ja
adc
test
fildll
mov
sub
pop
sbbl
lahf
faddl
adc
outsb
add
imul
xchg
adc
andb
aaa
sub
loop
je
mov
hlt
xchg
daa
jne
cbtw
dec
xchg
insb
fistpll
cmpsb
outsl
test
and
mov
mov
cmpsl
out
scas
mov
adc
shlb
push
rcll
shrb
loope
ficoms
test
jmp
mov
jle
xchg
or
push
mov
add
test
imulb
pop
cld
std
cmpsb
lret
daa
push
lods
push
cmpsl
imulb
sbb
cmpb
fimuls
adc
sub
cmp
dec
jecxz
pop
jmp
sub
push
xchg
push
call
mov
stos
scas
or
jecxz
cwtl
pop
or
sbb
scas
bnd
adc
and
adc
adc
in
mov
out
add
fs
cmc
mov
inc
sbb
xchg
outsl
inc
jp
lock
out
push
fcomps
mov
in
enter
sub
les
mov
ja
or
lahf
adc
arpl
and
lea
inc
aas
dec
jbe
push
gs
xchg
cs
ror
xor
inc
dec
jmp
cld
ror
pop
xor
push
data16
rcl
mov
mov
jge
ja
in
add
lcall
mov
test
mov
adc
pop
cmc
mov
jecxz
pop
cmp
push
cmpsl
scas
loopne
push
dec
xchg
adc
xor
mov
jb
push
and
scas
je
jmp
or
out
notl
dec
add
jbe
dec
sbb
mov
cmp
into
shrl
loop
push
jl
mov
rorl
push
lock
sub
push
addr16
test
sub
test
xor
push
push
shll
aaa
aas
repz
mov
movsl
sub
and
frstor
xchg
mov
fld
mov
mov
xlat
aam
cwtl
xchg
loopne
hlt
data16
fnstcw
jno
fisttpl
movsl
xchg
es
lret
cs
movsl
cli
rorb
fisubrl
lds
sub
mov
cmp
popa
jb
test
or
pop
je
fcmovb
repz
mov
xchg
sub
sbb
xchg
fcmovb
xor
xor
daa
ret
xor
jns
cmc
xchg
jge
in
dec
xchg
or
cmpsl
outsb
sbb
pop
xor
dec
lea
xchg
and
adc
push
cmp
mov
inc
fsts
add
mov
push
push
pushw
lock
lcall
mov
mov
or
jg
mov
sahf
cmp
cmp
in
cmp
out
cmc
sbb
mov
cmpsl
xor
out
adc
and
popa
add
jmp
aad
cmp
arpl
cmp
sbb
test
addb
pop
xchg
cmp
mov
fistps
or
xchg
les
fisubs
push
subl
cmpl
adcb
ljmp
repz
lahf
test
out
cmp
mov
aam
cli
jb
ljmp
cld
sbb
dec
pop
cmp
dec
xchg
push
mov
test
popa
and
or
lds
add
push
xor
xchg
in
and
test
aaa
xchg
and
pop
sbb
cmpsl
push
xchg
mov
jmp
push
mov
cmp
sub
dec
and
loopne
bound
mulb
adc
out
inc
cmc
fsubs
lret
into
fists
xor
add
stos
jle
enter
sbb
add
sbb
ds
push
xor
jg
inc
jo
in
out
aad
insb
test
aas
pop
mov
cmp
mov
sbb
les
mov
cwtl
insb
das
inc
add
jge
xchg
xchg
xchg
frstor
in
sbb
lds
fimuls
push
aas
popf
jp
lcall
and
enter
addr16
pop
adc
movsl
lret
sub
cli
movl
push
rcrb
and
and
push
sub
sti
lds
jmp
aad
cmc
cmpb
mov
inc
out
mov
out
je
sub
loope
jle
lahf
mov
dec
mov
push
rclb
rcrb
jp
stc
pushf
test
add
pop
pusha
pop
dec
ss
imul
imul
add
test
popl
push
fwait
das
int
pop
in
push
jno
xchg
push
rclb
imul
divb
dec
mov
test
push
mov
push
or
mov
movsb
cmp
jno
xchg
jb
cmpsl
clc
mov
mov
jbe
push
push
adc
fwait
mov
pop
ret
fcomps
lods
sbb
inc
adc
fucomi
pop
test
jns
mov
sbb
in
or
in
sti
inc
push
aam
jb
inc
or
dec
pop
cmovg
xchg
ja
add
scas
dec
js
movsl
loopne
gs
jge
sar
ret
scas
mov
sbb
cltd
or
out
adc
cmp
cmpsl
addr16
cs
inc
dec
add
and
pop
rcrl
cmpsb
in
add
roll
pop
xchg
out
loope
lods
daa
push
or
jb
stos
sbb
scas
cmc
sarl
lret
jne,pt
loop
mov
push
mov
pop
rol
and
sub
lahf
ja
pop
ljmp
and
test
jmp
lcall
fwait
sub
ja
mov
fcmovu
inc
sub
xchg
movsl
les
ss
fwait
adc
imul
mov
jne,pn
dec
mov
jns
out
cmp
or
cmp
push
xor
dec
mov
fcoml
lret
call
mov
repnz
bound
in
push
add
iret
pushf
dec
lahf
insl
pause
pop
ljmp
lock
stos
hlt
mov
loop
loope
cmc
adc
or
aad
lret
lret
or
aad
das
xor
xchg
and
push
mov
pop
fcomps
mov
loopne
jns
or
push
test
pop
pop
arpl
xchg
test
adc
or
add
or
xchg
iret
fmul
jae
test
xchg
mov
xor
lods
movsb
cmp
push
pop
push
popa
mov
aas
mov
into
icebp
xor
sub
mov
push
push
sub
cmp
rclb
push
test
mov
xor
jle
insl
push
sahf
icebp
mov
jbe
and
adc
jae
jmp
test
mov
cld
mov
fmull
arpl
int3
push
repz
adc
test
xor
lcall
loopne
pop
mov
lcall
in
push
push
and
jno
fisttps
iret
in
and
in
imulb
push
cmp
idivl
rclb
sbb
shlb
lock
icebp
outsb
inc
mov
sub
xchg
mov
fwait
in
dec
xor
sbb
lods
rcrl
js
xor
push
mov
inc
mov
add
push
loopne
pop
icebp
xchg
jg
mov
lret
jo
push
push
push
add
hlt
ss
daa
and
insb
xchg
icebp
mov
cmp
in
jne
sub
jae
add
jle
insl
inc
lret
mov
mov
jbe
mov
adc
mov
cld
popf
add
push
aas
stos
or
aad
cmc
push
push
xchg
mov
mov
les
or
mov
jns
mov
lds
fbld
sub
xchg
loope
popl
add
add
aas
mov
stos
lret
xlat
sub
push
cmpsb
cltd
ficoml
test
sub
cld
push
inc
dec
iret
cmp
or
aam
roll
push
dec
out
rcrl
fimuls
add
mov
cs
lods
push
dec
ljmp
popa
jl
cmp
lock
push
mov
or
aam
shr
add
or
add
arpl
int
scas
jnp
pop
xchg
sarb
jge
rcrl
sub
sbbl
dec
into
hlt
dec
aam
call
inc
xor
mov
push
imul
das
in
out
dec
jnp
fldenv
movsl
test
ret
das
mov
cwtl
adc
push
lcall
cmpsl
imul
iret
adc
xchg
cmp
push
sbb
push
dec
pop
mov
outsb
and
aad
or
mov
into
cmp
fildl
jmp
jno
xchg
xlat
xorl
jge
out
lds
mov
ret
inc
rclb
sub
imul
dec
dec
testl
popf
pop
mov
cwtl
inc
push
xchg
fs
mov
jle
jnp
jo
mov
loope
or
das
jmp
fidivl
xchg
sbb
sahf
pop
faddl
sahf
cmp
outsl
push
jns
inc
add
clc
stos
xorl
jae
loopne
stc
add
xchg
sub
push
fistpl
jg
mov
mov
push
loope
cmpsl
mov
mov
cs
add
push
call
and
xor
cmp
xor
sub
stc
xor
scas
adc
dec
cmpsl
into
out
inc
mov
xchg
roll
lcall
add
outsb
inc
sahf
ret
inc
ret
push
repnz
adc
push
adc
mov
lahf
mov
jb
mov
fldcw
jnp
inc
int
addb
repnz
sar
push
lret
push
out
jl
push
aad
add
mov
bound
adc
cmp
or
nop
push
movb
out
xchg
mov
cmp
mov
pop
rclb
push
push
pop
push
movsb
cwtl
lds
cmp
dec
aaa
mov
push
int
dec
and
repz
pushf
ror
js
or
adc
ja
lock
stos
xchg
xchg
pop
push
fsubrs
pushf
jae
out
mov
scas
bound
sbb
and
lcall
stc
cld
outsb
adc
pop
xor
fs
lds
pusha
push
mov
add
addr16
jmp
movq
subl
or
pop
jl
cmp
out
sbb
shr
fwait
sbb
andl
movsl
xlat
push
pusha
xchg
stc
pop
jg
daa
in
mov
inc
pop
sbb
inc
lcall
pushf
jmp
and
movzwl
sbb
mov
je
fnstsw
scas
or
mov
pop
test
lods
cmp
nop
adcl
stos
mov
mov
popf
icebp
and
push
divl
xchg
jge
jns
and
out
cmpl
jb
jge
mov
cmp
xchg
xor
insb
imul
jl
imul
daa
mov
imul
mov
nop
xor
sahf
cmp
ret
dec
repnz
mov
mov
xlat
shrb
mov
rcll
inc
and
adc
rcr
int
mov
aam
lcall
pop
jne
outsl
lcall
xor
mov
push
pop
add
mov
loop
push
mov
jmp
stc
jo
mov
rolb
aas
mov
xor
rcll
das
aas
das
xlat
out
bound
adc
sub
ljmp
loopne
in
addr16
lods
xchg
dec
arpl
pop
adc
outsl
cmp
and
fucom
mov
dec
in
fs
adc
adc
mov
iret
cmc
cmp
lahf
loop
js
aas
fdivrl
data16
xor
push
cli
inc
frstor
xor
outsb
adc
cmp
jne
cwtl
std
aam
lods
out
inc
call
or
loope
or
jo
jns
mov
fstps
mov
inc
mov
roll
mov
and
xchg
cmovnp
push
push
js
xor
hlt
mov
pop
mov
cltd
jne
imul
int
dec
shll
lea
dec
or
out
stos
dec
cmp
pop
mov
mov
aas
push
mov
lea
push
cmp
fwait
out
scas
jb
xor
das
sti
mov
pop
and
enter
dec
lret
push
aam
add
add
xchg
dec
cmp
jecxz
mov
xchg
mov
popf
popa
ja
imul
or
sub
jecxz
jo
xchg
cli
push
fisttpll
jns
aaa
inc
inc
in
inc
mov
add
adc
mov
xchg
jmp
push
dec
dec
mov
mov
insb
lret
push
repnz
mov
iret
adc
xchg
je
in
push
jmp
xchg
pop
aad
xor
inc
adc
mov
fimull
dec
add
das
push
mov
xchg
sbb
sahf
xlat
push
mov
sub
mov
inc
xor
xchg
adc
jnp
dec
fdivl
pop
and
sub
stos
or
fdivrs
test
loope
push
jg
insl
mov
xchg
pop
cltd
out
mov
into
insb
jne
ds
sub
jl
inc
jmp
imul
test
imul
cltd
jmp
ds
jecxz
fsincos
cmpsl
stos
rorb
adc
in
popa
push
icebp
pop
cltd
int3
adc
enter
pop
movsl
inc
pop
push
jp
iret
daa
out
dec
jle
xchg
and
xchg
mov
in
subl
mov
imul
xor
test
out
test
aaa
xor
ja
loop
popa
fstl
andl
je
lahf
test
mov
insb
add
test
imul
inc
cmp
repnz
jg
lret
lds
shll
adc
or
sbb
scas
div
add
in
xchg
push
rclb
test
out
mov
xor
push
fcomp
push
in
and
sbb
lcall
in
in
iret
xchg
xchg
out
ret
popf
cmp
xor
pop
loop
test
mov
or
inc
or
mov
push
sahf
push
outsl
outsl
frstor
or
jecxz
movsl
or
xchg
es
nop
push
inc
mov
mov
jp
stc
mov
icebp
in
cmp
pop
arpl
jl
sahf
xchg
xchg
je
sbb
movl
popf
cwtl
leave
sti
mov
cwtl
pop
fisttpll
stos
popa
adc
insb
cmp
cmp
xor
and
and
pusha
jnp
inc
daa
daa
lods
jl
mulb
mov
mov
cmpl
mov
cmp
add
inc
aam
scas
jno
lds
push
scas
outsb
outsl
icebp
pop
enter
mov
dec
icebp
dec
aam
scas
arpl
fldcw
or
mov
adc
lods
cli
fucom
jb
and
pop
leave
aam
cmp
aas
cltd
sbb
push
jo
or
jg
mov
push
into
imul
mov
push
adc
jbe
andb
addb
ljmp
sbb
fstpl
pop
loope
test
mov
daa
loopne
cwtl
cld
popf
movsl
push
xchg
repnz
cmpsl
call
jmp
enter
ds
adc
jg
push
sbb
fmull
adc
test
lea
inc
iret
lahf
jge
cmc
ja
outsb
fmul
mov
icebp
pop
call
repz
das
push
mov
hlt
je
xchg
fsincos
inc
and
add
mov
mov
push
jmp
inc
add
xlat
push
sbb
sbb
and
push
push
test
daa
mov
out
jbe
std
bound
fstl
or
mov
test
stc
xor
imul
clc
mov
sbb
sub
into
cmpsl
xor
add
push
repnz
cwtl
das
mov
outsl
or
cltd
sub
fucom
fldt
xor
fistpl
mulb
cs
pusha
push
adc
repnz
lds
mov
or
xchg
out
dec
aaa
sub
jb
sbb
popa
cmp
adc
ljmp
jae
testl
subb
jmp
fbstp
xor
sub
sbb
decb
bound
scas
cs
jmp
add
in
sub
lods
addr16
xor
pop
adc
imul
jmp
loopne
push
stos
lods
jbe
jns
outsb
in
hlt
cmp
mov
notl
inc
int
mov
jns
mov
es
inc
movsb
aad
sub
and
and
notb
dec
call
cmp
das
adc
cmpsl
fcomps
jge
je
movsb
xchg
data16
or
xlat
jge
adc
mov
lahf
mov
dec
and
cwtl
fisubrl
nopl
stos
in
scas
aaa
lds
ds
push
adc
cmpsb
dec
inc
test
inc
daa
jl
xchg
xor
xchg
sbb
adc
lret
push
faddl
push
pop
mov
sahf
adc
add
push
adc
mov
pop
andl
pop
or
les
xor
outsb
mov
lds
xchg
dec
imul
and
lret
and
test
pop
push
mov
inc
into
xorb
pop
jle
es
lcall
adc
xorb
mov
arpl
jle
jp
jnp
lret
add
lret
shr
pushf
add
cmp
roll
popa
insl
cmp
popa
insl
push
xchg
outsl
loop
jge
ficoms
add
data16
mov
dec
subl
jle
lods
push
lcall
dec
jp
sub
mov
xchg
mov
xchg
test
mov
sarl
test
dec
sahf
xor
lea
in
dec
movsl
stos
and
jns
mov
mov
or
push
shlb
add
cwtl
mov
xlat
mov
jmp
jp
inc
jns
mov
fwait
adc
mov
mov
rcrb
push
sbb
repz
leave
mov
mov
or
addr16
xor
xchg
pop
out
mov
aas
in
cmp
lea
cli
mov
or
add
int3
ret
lea
jle
push
push
rcrb
mov
sub
jge
sbb
movsb
add
insl
xor
in
cmp
pop
and
or
fdivp
mov
push
mov
sarl
add
cmc
lahf
mov
ja
rorb
push
adc
adc
add
fadd
mull
call
jge
ret
insl
lock
and
or
sbb
leave
mov
movsl
lret
ror
je
fmuls
or
loope
sti
jge
ficoml
inc
xchg
addr16
inc
mov
pop
hlt
ret
xchg
mov
jge
mov
lcall
and
add
mov
ds
sub
in
adc
cmp
or
rcrl
push
test
sbb
out
fdivs
imul
mov
inc
clc
mov
mov
sbb
push
lea
imul
xchg
cmp
dec
js
imul
stc
pop
or
or
lds
push
mov
mov
add
call
call
or
push
dec
jb
sub
lds
sbb
xlat
dec
pop
lret
fmuls
cmp
mov
stos
cld
fnsave
adcb
inc
push
sbbl
pop
dec
jbe
cmp
je
inc
mov
jmp
xchg
add
addr16
test
popf
cmpsb
adcl
pop
outsl
xor
push
cli
cmpsl
enter
inc
mov
push
xchg
mov
xchg
pusha
int
fisttpll
jecxz
aad
add
in
push
call
jnp
cmp
mov
popa
sbb
mov
push
out
ret
adc
or
xor
sarl
xor
mov
add
mov
add
out
movsb
cli
movsb
and
js
or
cmp
cmp
mov
xchg
aad
xor
push
aam
push
jne
dec
sbb
pop
xor
cld
jecxz
add
push
mov
enter
pusha
xchg
sbb
jmp
dec
subb
dec
sub
push
shl
pop
sahf
mov
fstps
out
jle
inc
lds
sbb
push
shlb
movsl
xlat
popf
sbb
mov
insb
ret
inc
xchg
test
jmp
fcmovu
sub
aad
int3
jl
imul
lock
mov
lcall
push
jns
adc
ds
pop
mov
mov
push
push
jb
cmpl
fadds
into
xorb
adc
fldenv
pop
cmp
rcrl
cmp
dec
jecxz
in
or
sbb
pop
cmpsl
sub
fdivs
add
jecxz
sub
push
xchg
mov
sub
data16
daa
and
xlat
iret
insl
jle
mov
xchg
es
inc
fadds
fs
or
push
mov
mov
mov
sbb
pop
or
sahf
pop
sbb
push
cmp
imul
into
pop
fs
sbb
scas
mov
dec
jmp
push
or
lods
cmc
push
loopne
push
cmp
movsl
rolb
sbbb
pop
pop
int3
pop
push
fdivs
add
iretw
sub
sbb
pop
sub
popa
or
enter
mov
out
sub
enter
pop
sub
mov
fucomp
pop
jp
xchg
adc
mov
out
inc
sbb
call
push
popa
fwait
dec
out
mov
repz
dec
fcmovb
jge
fstpl
cmp
fdivl
in
lea
pop
das
dec
and
mov
and
jne
jle
dec
jne
add
test
mov
and
std
sub
adc
pop
testb
add
sarb
cmp
add
imul
sbb
xchg
andl
and
nop
popa
je
lock
pop
test
out
mov
jle
iret
fmulp
loopne
mov
add
clc
cltd
sbb
push
add
gs
jo
xchg
mov
sti
ds
pop
sub
movsl
mov
mov
out
jno
jl
je
fidivrs
lods
popf
les
or
out
std
aas
xor
mov
insl
mov
mov
sbb
add
int3
ss
mov
ret
xor
xlat
pop
imul
mov
cmp
cmp
adc
and
cmp
nop
pop
incl
xorb
push
jne
adc
pop
push
js
push
jne
mov
notl
aas
jmp
mov
inc
push
jl
in
cwtl
fwait
lods
jge
pop
jo
cmp
push
xchg
dec
pop
fs
xchg
jns
and
ror
pop
stos
inc
jg
pop
mov
fxch
push
jl
and
push
subb
lahf
int
cld
int
jmp
push
fs
push
sbb
lea
xchg
inc
in
dec
mov
mov
mov
xor
aaa
loop
inc
out
push
or
mov
jo
imul
pop
orb
push
dec
add
jmp
nop
xor
sbb
outsb
fs
popf
test
mov
jge
sub
xchg
dec
push
push
fistpl
dec
push
or
dec
les
jp
push
ret
les
ds
cltd
inc
test
jge
jmp
inc
and
das
scas
pop
adc
ljmp
gs
adc
xor
xorb
xlat
cli
and
ss
fistpl
aaa
cmpsb
shrl
adc
mov
fsubrp
push
and
inc
movb
push
xchg
lret
push
or
insl
leave
repnz
push
xor
mov
inc
lret
sti
pop
xorl
sbb
dec
xchg
out
xor
pushf
into
in
subl
mov
iret
xor
inc
jp
test
ret
xchg
lahf
popf
shll
lret
mov
xchg
arpl
mov
inc
mov
mov
mov
mov
sbb
cmpsl
or
fs
mov
pop
and
faddl
data16
inc
test
cmp
gs
out
cs
xor
pop
xchg
xchg
sti
xlat
loop
aas
pop
mov
out
mov
sub
aad
and
xchg
xor
pop
aaa
dec
mov
test
cmpsb
and
or
push
call
jmp
adc
inc
add
outsb
scas
mov
or
cld
mov
jg
jb
mov
mov
imull
pop
sarl
insl
sti
stos
push
and
mov
pop
and
cli
enter
pop
pusha
add
mov
xchg
jp
mov
add
lahf
not
out
es
flds
inc
roll
sti
push
out
push
lret
lock
xor
mov
cmpxchg
insl
loope
call
mov
int
dec
js
sub
mov
dec
or
mov
pop
push
cltd
inc
aas
sub
adc
pop
jnp
jl
and
xchg
cmp
pop
lds
dec
dec
orb
adc
mov
push
inc
sahf
cmc
or
dec
pop
daa
push
add
xchg
add
test
xorb
add
repz
popa
movsl
jbe
push
add
lret
sub
sbb
or
push
bound
jmp
es
rcrb
or
lods
cmpsl
and
rcr
pop
push
mov
test
adc
out
imul
lcall
and
jl
sub
sbb
sub
fcmovbe
mov
outsb
mov
lods
dec
pop
sub
mov
aad
mov
jle
pop
enter
fstl
call
jle
dec
bound
idivl
fmulp
mov
sub
fdivl
cmp
or
adc
push
sbb
mov
fists
cmp
cmp
ss
push
jnp
ss
xor
loope
xchg
das
or
arpl
mov
adc
pusha
roll
leave
jmp
sti
pusha
in
ret
sbb
lock
inc
and
add
iret
mov
dec
pop
jb
lods
push
sbb
lods
pop
sub
or
repnz
adc
lret
add
adc
pop
xchg
data16
mov
imul
movsl
dec
push
test
cld
xchg
jp
jmp
sbb
pushf
das
fsubr
mov
xchg
test
mov
or
inc
cld
loope
inc
add
dec
imul
mov
imul
push
loopne
adc
das
loope
mov
adc
es
cs
or
repnz
das
ds
loopne
mov
xor
xchg
add
mov
xor
subb
xor
repnz
in
xchg
mov
iret
pop
or
loope
lcall
adc
das
hlt
fildl
scas
xor
loope
mov
mov
std
js
aaa
xor
roll
adc
jno
data16
scas
add
stos
adc
jg
lret
xchg
stos
push
or
xor
inc
ljmp
mov
ljmp
adc
cmp
into
jb
andb
das
xor
and
cmp
cmp
pop
sub
decl
sub
stos
dec
clc
ljmp
movsb
cmpsb
mov
cs
aaa
fmull
pop
jle
gs
xchg
mov
fwait
mov
xor
mov
std
cmp
and
adcb
lds
xor
mov
pushw
test
das
push
jne
xchg
aam
iret
and
clc
lcall
outsb
inc
je
lahf
loop
negl
pushf
pop
daa
mov
sub
test
jb
pop
jb
cmpsb
pop
push
sar
push
inc
sbb
adc
insb
addb
cld
mov
iret
lods
mov
push
jae
add
pmullw
jl
les
jae
mov
adc
sbb
cli
push
out
out
jp
jle
cs
mov
paddsw
scas
enter
in
and
data16
push
sbb
movsb
mov
insb
iret
sbb
or
lret
jg
cmc
ljmp
adc
insb
xchg
mov
xchg
pop
mov
cltd
stos
xor
testl
mov
iret
adc
stc
sbb
add
push
xchg
add
imul
mov
shlb
cmpsb
arpl
and
mov
jg
popl
out
mov
dec
xchg
ret
fs
movsb
jno
inc
dec
cmc
loop
aas
cmc
xchg
lahf
cltd
test
movsl
bound
aad
cmpsb
and
dec
insl
daa
aam
je
pusha
pop
out
enter
movl
mov
xchg
mov
xor
mov
push
cmp
or
lcall
sahf
movsb
out
or
cmp
or
xor
push
leave
xchg
fldl
lods
mov
mov
inc
adc
dec
adc
xor
das
lret
cmpsb
inc
lret
loope
and
dec
repz
lods
stos
call
decb
bound
dec
mov
loopne
inc
sbb
cld
fwait
loopne
mov
push
sbb
aam
aam
stc
jg
mov
jecxz
adc
pop
inc
cwtl
inc
aas
mov
sub
lods
and
lcall
decb
add
add
and
loope
add
adc
sbb
jo
push
and
jecxz
xchg
inc
inc
jb
mov
sub
dec
fmull
fdiv
repz
add
test
push
mov
adc
and
sahf
js
pusha
adc
fs
out
or
bound
jmp
jp
and
cwtl
sub
add
cmp
push
bound
out
add
test
mov
jge
mov
popa
daa
jae
loopne
aas
cltd
dec
lods
pop
rcrb
jle
xor
mov
push
call
dec
sbb
sbb
orb
sbb
xchg
orb
sahf
ljmp
dec
mov
ficoml
jle
cwtl
mov
out
push
pop
out
mov
addr16
push
scas
adc
cwtl
fwait
or
or
outsl
sbbb
dec
add
shl
cli
dec
mov
shl
dec
gs
fists
popl
getsec
bswap
in
cmpsb
pusha
in
loopne
in
jo
loope
sbb
cltd
sub
lret
adc
push
mov
and
mov
ret
jns
xchg
imul
dec
gs
sub
push
fwait
mov
lods
mov
add
nop
ret
cmp
lret
pop
pop
sti
icebp
cli
push
sbb
mov
mov
addr16
cli
jg
insb
fs
cs
mov
jo
cltd
sbb
push
push
push
jno
fnsave
into
pop
xchg
lret
lock
jecxz
mov
add
pusha
cmp
in
movsl
ret
shrl
ficompl
dec
rdtsc
xchg
aad
mov
sbb
xchg
mov
jp
sub
xor
cmp
pop
add
add
or
push
sbb
jl
loopne
mov
xor
loope
and
or
notl
out
iret
push
lcall
pop
movsl
mov
sub
test
repnz
cmc
arpl
adc
mov
mov
fwait
push
cmpsl
mov
enter
jle
je
imul
mov
pusha
xor
xor
mov
jb
iret
cmp
or
pop
push
mov
sub
por
xchg
cmc
adc
xor
imul
xor
scas
ret
dec
lret
xorl
inc
add
sbb
xchg
add
scas
sub
inc
lods
jmp
inc
adc
arpl
ficompl
cmpb
push
xchg
push
cmp
push
pop
insb
stos
add
popf
pop
xor
js
shl
jp
jno
fmuls
imul
mov
cltd
push
test
test
push
lahf
jmp
je
adc
xchg
lods
jae
outsl
jns,pn
dec
inc
scas
jo
cmp
les
add
or
aam
mov
arpl
xor
sbb
mov
jecxz
test
jno
xor
ret
scas
enter
into
out
inc
jge
add
ss
sbb
js
lret
dec
cmpsl
sub
inc
int3
push
cmp
clc
and
test
mov
cmpsb
movsl
and
arpl
loop
mov
aam
negb
daa
mov
orl
xor
negb
rcrl
mov
fcoml
js
imul
scas
je
pop
xor
xor
scas
in
xchg
loop
dec
int
mov
int
mov
mov
adc
cmp
decb
mov
sub
xchg
cltd
test
ss
mov
dec
mov
imul
das
cld
pop
bound
cmc
decl
mov
mov
fwait
insl
mov
push
aaa
popa
sub
in
roll
imul
jg
pop
sahf
les
jp
lds
mov
jne
dec
mov
sub
pop
add
addr16
test
test
sti
out
stos
jmp
jne
cs
popf
fldenv
or
sub
mov
jae
add
orl
jnp
mov
mov
pop
outsb
push
fbld
ljmp
cmp
push
pushf
lret
cmpb
mov
jmp
fs
jecxz
nop
cmp
js
in
fbstp
add
jo
and
inc
cltd
fcomp
in
jecxz
mov
repnz
fwait
mov
out
ret
iret
ret
leave
ss
sub
or
or
cwtl
dec
in
inc
in
call
ret
pop
leave
imul
loope
loop
popf
test
hlt
or
push
push
fists
dec
push
sbbb
add
loop
sbb
push
mov
cmp
fnstenv
bnd
cmp
pop
mov
sbb
xchg
lods
mov
pop
inc
dec
mov
jmp
cmp
mov
cmp
repz
aaa
jecxz
sbb
test
insl
fld
xchg
inc
pop
imul
mov
or
pop
mov
push
pusha
pop
pop
jnp
out
inc
inc
pushf
push
sar
or
int
cmp
outsb
push
sbb
jnp
in
shll
lods
mov
push
mov
adc
push
in
call
popf
jbe
jl
scas
test
jbe
scas
ret
or
repnz
mov
dec
dec
mov
ficoms
lret
add
xchg
dec
cmpsb
divl
mov
test
pop
out
fiaddl
jl
lods
call
call
shrb
mov
lds
sub
pusha
sub
fmull
rolb
dec
pop
ss
dec
mov
pushf
stos
or
cmp
dec
aaa
push
or
dec
push
jge
movsb
adc
adc
dec
xor
push
jp
ss
jnp
xchg
ss
stos
jl
mov
xor
and
cmp
icebp
or
mov
sub
gs
cli
adc
adc
xchg
adc
cld
mov
stos
sub
or
shll
scas
iret
lods
sbb
sub
sub
xchg
pushf
mov
sbb
aas
cmp
push
mov
push
sub
cmpb
adc
dec
movsb
dec
cmpsb
mov
xor
out
insb
cmp
push
pop
dec
mov
mov
out
adcb
jl
mov
mov
cs
cmc
icebp
mov
lods
mov
adc
rcll
xchg
push
sub
mov
ja
aas
sbb
sub
and
test
mov
leave
lds
pop
scas
sub
sbb
sbb
int
in
andb
rcrl
cmpsl
rcrb
pushl
cmovle
repz
pop
test
or
cmp
dec
pop
fstpl
xor
cmc
xlat
jge
sub
cmpsb
adc
or
scas
xorb
std
or
sbb
testl
cmc
mov
xchg
roll
sbbl
add
incl
aas
movsb
pop
push
dec
sahf
mov
rcr
add
pop
push
xor
cmp
push
mov
insl
fmul
mov
rorb
xchg
pop
and
jp
mov
lahf
stc
mov
fistpl
push
mov
mov
mov
push
pusha
pop
mov
add
push
rcl
call
arpl
stc
inc
sub
pop
sbb
push
jnp
mov
sbb
fwait
and
pop
push
hlt
pop
push
ret
lods
xchg
aam
cmp
push
mov
scas
or
push
jno
mov
mov
les
inc
cmp
xchg
cmc
mov
test
mov
mov
daa
out
adc
mov
arpl
out
pop
pop
jecxz
imul
or
push
xlat
stos
add
push
pop
mov
xchg
pop
mov
out
icebp
cwtl
mov
test
cld
adc
lea
roll
icebp
and
loope
cltd
gs
imul
fwait
icebp
in
mov
iret
mov
scas
and
push
cmp
cs
js
pop
pop
pop
insb
fildll
rcll
xchg
js
testb
sbb
faddl
in
push
pop
mov
shl
pop
mov
push
pop
daa
push
push
pop
ror
xchg
push
xchg
mov
icebp
push
xchg
mov
jb
jns
push
insl
or
test
test
inc
lds
arpl
jmp
movsb
push
mov
movsl
adc
repnz
adcl
in
mov
test
or
and
in
mov
pop
push
addr16
outsb
inc
stos
jmp
div
add
cli
pop
out
fwait
cli
loop
sarb
aas
lds
scas
fwait
repnz
or
sub
lret
out
sub
movsb
and
ret
or
xchg
lods
in
mov
int3
mov
mov
sbb
les
repz
dec
mov
xor
pop
push
aaa
push
stos
pop
or
and
ljmp
and
cmpsl
rorl
jne
fwait
sahf
xchg
push
ds
or
mov
dec
xchg
dec
aas
sbb
push
movsb
iret
cmc
cmp
int3
and
movsl
push
jg
into
dec
dec
adc
dec
push
cmc
loope
xchg
ss
mov
mov
push
jno
cmp
mov
clc
leave
test
sbb
out
js
add
cmp
push
insb
mov
insb
pop
in
mov
lret
or
cmp
and
pop
push
in
pushf
jb
arpl
loop
test
add
adc
cmc
pop
push
mov
movsb
cmp
jbe
in
jecxz
sbb
ljmp
and
in
mov
in
dec
mov
xor
rsqrtps
dec
sbb
xor
cmpsb
mov
push
cmp
inc
stc
in
and
or
test
jmp
idivl
inc
in
dec
xor
rcr
xor
mov
sti
pop
popf
mov
and
sbbb
or
or
and
scas
lahf
xchg
jg
arpl
std
lahf
xor
jo
cmp
sbb
mov
mov
xchg
push
insb
fs
rorl
mov
adc
sub
mov
mov
cmc
mov
cmpsl
sub
and
xlat
mov
loopne
pop
scas
push
xor
movsl
xor
imul
and
dec
dec
ds
test
xchg
into
pop
mov
cmpsb
mov
out
jg
test
push
mov
cltd
nopl
mov
add
std
in
addb
cmp
sbb
add
jg
add
jl
mov
mulb
fpatan
jecxz
pushf
pop
ffreep
sti
stos
ljmp
lods
jmp
into
pushaw
repz
test
cmp
pushf
add
adc
jl
js
xchg
int
int
in
test
pop
xchg
cmp
dec
push
xor
test
fmul
push
popf
xchg
sbb
mov
dec
sub
inc
ja
arpl
out
mov
stc
test
lahf
testl
add
out
push
push
ret
adc
hlt
cmpsl
ljmp
mov
jecxz
or
mov
pop
lahf
iret
sbb
movsl
imul
sbb
mov
sub
scas
inc
mov
adc
xchg
sub
mov
je
rolb
mov
shll
arpl
and
ds
cmpl
pop
out
ret
into
ja
mov
ljmp
cmp
shrl
fcoms
xor
push
push
inc
shlb
or
fldcw
jno
xchg
test
sub
popa
test
adc
xor
push
pop
adc
pop
js
shr
mov
stos
adc
cmp
iret
cltd
loopne
pop
jmp
jo
jae
cld
mov
gs
aad
push
mov
and
arpl
fildl
sub
cs
add
test
das
xchg
out
pop
jmp
cwtl
and
hlt
pop
jp
sbbl
in
push
stos
mov
sbb
lods
cmpsl
icebp
cmp
sbb
lds
adc
stos
gs
mov
xchg
out
inc
mov
xor
nop
xchg
add
es
sub
addr16
iret
fistps
adc
fsts
into
dec
lock
mov
arpl
jno
fsubrl
xchg
in
push
jmp
std
dec
call
inc
pop
lret
mov
push
aad
jbe
push
dec
gs
out
in
sbb
xchg
jb
xchg
pushw
insl
or
mov
out
pop
pop
into
pop
outsl
fistpll
leave
js
adc
int
dec
aaa
add
les
cltd
movb
shlb
add
orl
push
dec
imul
jbe
mov
push
pusha
aaa
stos
or
pushf
and
fwait
test
daa
ljmp
insl
mov
lahf
enter
pop
mov
out
jae
outsb
cli
xor
xor
shll
std
mov
ret
cli
pushf
jecxz
pop
cmpsl
sbb
arpl
test
push
mov
out
ss
out
and
push
adc
push
jmp
add
fildl
mov
scas
xchg
jp
sub
popf
lret
xchg
pop
lock
sbb
cmpsb
jl
push
and
ret
fisubl
or
dec
jmp
mov
inc
cmc
jno
xchg
ja
fcoml
mov
push
addb
push
jp
lods
cmc
adc
add
sbb
or
jne
push
jnp
andl
or
mov
dec
movsl
inc
inc
pop
mov
mov
lods
ljmp
in
cmpsl
bound
jle
mov
ljmp
jns
pushf
mov
daa
fsubp
shll
or
cltd
pop
mov
jnp
xor
pop
add
sub
pop
ret
inc
int
jle
lret
fistl
jo
cmp
je
add
mov
sti
test
add
test
and
mov
mov
mov
mov
add
lret
or
pop
push
adc
and
int3
fsub
adc
xor
push
add
rorb
ljmp
add
leave
mov
mov
stos
arpl
aas
fcomip
inc
or
adc
adc
and
or
xor
int3
push
inc
andl
lods
call
jmp
ret
pop
int3
lods
jmp
inc
popa
sbb
dec
add
xchg
add
and
cmp
mov
mov
sub
mov
sub
dec
adc
outsl
adc
xchg
dec
add
xor
or
pop
pop
repz
fbld
jge
ret
insb
iret
add
jo
scas
dec
push
or
arpl
insb
xlat
inc
jl
popa
sub
lods
loopne
xchg
mov
iret
inc
je
fbld
aam
cmp
mov
push
xchg
cmp
jmp
imul
bound
jb
sub
dec
sub
push
mov
adc
pop
add
mov
sahf
inc
imul
stc
cmp
pop
sub
outsl
lret
mov
fdivl
mov
push
mov
push
cmpsb
inc
stos
and
xchg
les
cwtl
clc
fildll
add
jb
addb
aam
mov
jl
dec
ja
push
daa
mov
dec
enter
push
or
inc
mov
cmpb
or
out
mov
and
int3
daa
lds
pop
pusha
xor
jne
dec
in
lods
xlat
push
loopne
data16
cmp
pop
mov
xchg
or
inc
das
push
or
in
aaa
fnstenv
push
xchg
sub
add
mov
push
mov
dec
call
in
rorl
stos
mov
or
popa
mov
push
adc
mov
mov
fsubr
outsb
mov
int3
jge
cli
jp
ret
inc
adc
xor
pop
aaa
outsb
inc
sbb
xchg
stos
jbe
and
mov
hlt
sti
nop
popa
jo,pt
push
xlat
insb
jbe
ljmp
aaa
cmc
xchg
orl
adc
xchg
rol
movsb
int3
add
or
dec
mov
adc
scas
cmc
lahf
sbb
repz
push
out
lds
pusha
add
pop
fcoms
aam
lds
dec
nop
idivb
xchg
ljmp
mov
sbb
ljmp
pop
add
mov
or
leave
dec
dec
mov
add
add
jno
pop
inc
mov
sti
fdivrl
leave
xor
cmp
into
movsb
xor
jg
mov
aam
xor
imulb
mov
ds
or
pop
mov
adc
inc
lds
xchg
jl
pop
xchg
cld
dec
daa
gs
xor
jnp
jl
adc
xorb
mov
inc
popa
push
inc
push
test
xor
dec
rclb
cltd
idivb
sbb
mov
inc
add
loopne
out
sub
sub
mov
clc
or
xor
cmp
test
mov
out
or
mov
addr16
sub
or
xchg
sub
add
sub
pop
lret
mov
out
imul
mov
in
mov
popf
and
mov
xorb
sbb
lds
test
fwait
mov
mov
std
idivb
pop
ja
sbb
inc
icebp
inc
push
es
scas
loopne
cli
mov
shrl
push
push
pop
push
adc
pop
stc
xchg
bound
imul
fcmovne
insl
and
xchg
or
jne
jge
push
mov
mov
das
repz
mov
pushf
cli
cmp
test
or
or
adc
xor
sub
pop
int3
jp
das
mov
mov
out
xor
pop
shl
xor
sub
push
add
and
cmp
mov
and
jae
ret
pop
lds
mov
sbb
cmpsl
enter
in
sbb
cwtl
rcll
dec
mov
insl
movsb
push
mov
push
sub
push
jb
inc
pop
insl
or
loopne
push
nop
push
cmp
push
cmp
aas
lds
push
mov
push
fistps
out
mov
sub
fldenv
out
xor
inc
dec
xchg
xor
cld
in
jns
mov
cmp
cld
test
ret
ficomps
frstor
fadd
ljmp
dec
pop
out
or
testl
add
lods
lcall
pop
xor
jns
mov
imul
out
test
mov
roll
xor
or
ret
lods
jne
or
dec
add
inc
out
cmpsb
mov
or
push
dec
pusha
ss
cmp
jne
addr16
jnp
popa
enter
fcmove
insb
sbbl
int
pop
into
ss
aam
data16
mov
xchg
or
sbb
jmp
jae
arpl
mov
cmp
mov
pop
les
insb
fsub
test
push
hlt
or
in
sarb
xchg
mov
cmp
xor
xchg
sti
mov
mov
mov
dec
add
cmpsl
fcmovbe
inc
into
dec
loope
jo
pop
xchg
imul
imul
push
arpl
mov
xchg
in
int
aad
pop
fldl
rclb
mov
idivb
and
inc
fidivs
mov
mov
push
jmp
push
inc
cmp
loope
sub
push
inc
gs
test
inc
xlat
ret
lcall
in
pop
adc
mov
cmp
call
jo
xor
fildll
cs
data16
lods
rcr
jle
push
push
mov
pslld
roll
mov
ror
movsb
insb
stos
dec
popa
cmp
mov
pop
pop
sbb
adc
mov
mov
sub
inc
sub
mov
pushf
push
sarb
inc
pop
outsb
cmp
mov
incb
fcoms
jno
push
xor
aas
jno
out
call
jns
adc
cld
xor
data16
sbbb
lods
mov
arpl
dec
xor
and
dec
in
mov
mov
aam
ja
dec
sbb
and
xchg
xchg
pop
les
sbb
mov
pop
or
push
rcrb
xchg
mov
fiadds
pusha
bound
jge
xchg
in
sti
popa
std
cmp
leave
or
popf
dec
lahf
add
push
lods
stc
or
lds
fnstcw
inc
repz
xor
adc
sbb
test
popa
inc
dec
fninit
fldenv
out
pop
jp
popl
add
fdivs
cmp
jae
shll
std
aam
and
or
fisttpll
into
mov
mov
xchg
xorl
sbb
dec
mov
sbb
sbb
int
jle
addr16
mov
jle
insl
pop
xor
dec
int3
sub
loop
push
lods
mov
pop
sahf
pop
and
movsl
mov
aad
inc
cmp
test
sbb
les
ret
int
dec
sahf
jp
fwait
lret
mov
push
je
aad
insl
xor
mov
hlt
popf
pop
cmp
mov
cmp
xor
loope
mov
insb
out
mov
mov
jae
cmpl
jle
nop
gs
sbb
pushf
mov
ds
mov
nop
pop
insb
jmp
ja
pop
push
repz
cmp
and
fs
push
lcall
push
roll
lds
mov
mov
into
ret
test
sahf
xchg
stos
xchg
in
mov
jns
and
or
push
sub
mov
in
jne
adcb
loop
or
ret
or
test
pmaddwd
bound
fimull
cmp
std
frstor
jle
dec
adc
enter
gs
int
mov
out
cmp
aad
imul
test
mov
push
aad
lds
dec
cmp
imul
insb
jb
test
jg
rcrl
jmp
cmpsb
lods
testb
mov
sub
into
sub
mov
and
dec
mov
xor
xorb
lds
prefetcht1
xchg
adc
pop
addb
jno
test
push
inc
aam
inc
mov
push
arpl
rorb
pusha
das
loop
push
add
mov
decl
fxam
mov
lods
jae
pushf
push
sub
int
aad
or
shll
gs
lcall
mov
cmp
js
jns
inc
sbb
push
and
in
ret
adcb
out
pop
mov
lea
push
cltd
adc
test
dec
insb
pop
adc
std
push
aas
jl
jb
add
mov
or
cmp
ret
imul
cmp
ret
lret
loopne
pop
xchg
jo
mov
insb
dec
pushf
xor
cs
pop
mov
ljmp
cwtl
nop
loop
jmp
hlt
cmp
into
frstor
mov
sub
and
sbb
clc
rcrl
xchg
jae
not
es
mul
sub
mov
shlb
mov
lods
mov
lahf
fcmovnb
in
flds
inc
lods
xor
sbb
loop
pop
int
mov
push
cmp
xchg
in
xor
add
xlat
mov
fidivrl
adc
fdivrs
jle
icebp
mov
pop
inc
stos
iret
mov
sbb
or
adc
mov
test
add
imul
cmp
gs
xor
das
dec
adc
sarl
fdivl
jmp
data16
sub
push
lahf
out
and
mov
orb
xor
daa
mov
add
test
hlt
pop
loopne
cmp
ret
insb
std
daa
pop
pushf
and
fisubs
lret
pop
aam
dec
cli
outsb
dec
mov
fs
je
out
mov
inc
ficoml
sarl
push
adc
test
inc
shrl
cmpsl
jae
or
mov
jecxz
outsl
mov
testl
mov
or
sbb
push
enter
fldcw
js
fdivs
out
lods
aad
test
icebp
movsb
jb
pop
test
shlb
mov
out
xchg
dec
push
pop
pop
cltd
xor
mov
fdivrs
sbbl
sbb
cmpsl
adc
inc
fdivs
adc
int3
jno
mov
mov
jbe
in
xchg
inc
jp
ja
and
popa
jg
aad
test
aaa
sub
jns
inc
and
test
hlt
xchg
dec
mov
xlat
imul
pop
gs
int3
push
gs
sbb
mov
adc
rclb
cmpl
pop
movsb
mov
imul
cmpsb
inc
mov
in
xor
mov
jmp
inc
bound
scas
ret
sbbb
xchg
fisubl
cltd
std
out
insb
in
dec
pop
xor
inc
pusha
fistpl
push
dec
mov
or
pop
imul
out
stos
movsb
lcall
stc
push
jecxz
out
inc
int3
pop
lcall
adc
int3
movsb
inc
pop
push
shrb
lock
add
and
or
mov
pop
je
sahf
shl
inc
int3
jecxz
fistpll
lea
or
push
icebp
dec
mov
icebp
mov
orl
out
ljmp
loop
loop
xchg
pop
hlt
or
lods
fs
dec
xchg
cmp
pop
or
rcl
dec
fisubl
bound
mov
cmp
sbb
xor
stos
in
jo
sarb
xchg
jne
mov
or
cs
xor
pop
sub
insb
rcrb
mov
adc
lods
scas
xchg
and
dec
cmp
out
enter
inc
cmp
je
cmp
hlt
pushf
mov
adc
dec
adc
xor
in
mov
bound
sahf
sahf
lds
mov
adc
jne
dec
cmp
loop
ds
fidivrs
clc
jo
mov
sbb
and
fwait
ret
mov
fcomps
sbb
mov
movsl
xchg
xchg
xchg
iret
and
int
lock
ret
insb
bound
lcall
add
cs
les
mov
pop
lcall
cmp
xlat
stos
sbb
pushl
loop
popf
jae
add
icebp
imul
movsb
xchg
pop
repz
aam
jmp
rcr
and
push
pop
mov
ret
mov
lods
jbe
sahf
push
dec
in
aas
popf
mov
scas
inc
add
insl
enter
mov
test
xor
push
and
push
daa
push
mov
inc
pushf
repnz
addr16
loopne
mov
inc
dec
xor
repnz
xchg
insl
or
inc
pop
mov
cwtl
xchg
push
andb
repnz
xor
xchg
pushf
and
cltd
movsl
jmp
imul
cmp
sbb
cmp
inc
xor
add
loop
inc
xchg
adc
shlb
lock
mov
fidivs
insb
mov
push
dec
and
mov
mov
sub
ss
sbb
mov
xor
cmp
loopne
std
cltd
cli
fldcw
movq
adc
arpl
mov
data16
in
sarb
sub
jge
inc
loopne
xlat
imul
scas
roll
push
mov
mov
mov
adcb
aas
cltd
stc
lcall
in
stos
xor
in
fldenv
call
dec
popa
mov
xchg
or
dec
dec
out
fucom
lret
mov
lret
repnz
std
test
stos
out
dec
fs
pushf
aaa
dec
push
daa
sub
mov
mov
xchg
test
lods
push
repnz
imul
leave
stc
xchg
sub
or
inc
ret
dec
sub
fstpl
pushf
or
xchg
xor
scas
mov
aaa
jmp
ljmp
sub
xor
daa
and
sahf
jmp
push
jbe
add
ljmp
push
fs
iret
andl
js
xchg
fidivl
loope
insl
cmp
push
jb
insl
imul
pop
adc
mov
and
loop
xor
and
mov
cmp
add
lret
or
mov
out
xchg
mov
adc
cmp
or
bound
adc
sbb
cmp
mov
out
add
scas
xor
push
inc
mov
lods
mov
out
fisttps
xlat
pop
addl
mov
out
or
roll
mov
pushf
sbbl
pop
cmp
or
push
mov
mov
es
addr16
and
push
pop
jl
fdivr
test
push
mov
negb
fcompl
stc
sbb
fcompl
mov
adc
push
sbb
mov
mov
movsl
je
into
pusha
mov
sub
push
int3
loop
inc
inc
lahf
mov
nop
sub
loop
pop
addr16
push
sub
adc
out
inc
loopne
mov
pushf
pop
adc
xor
mov
jle
enter
out
sbb
pop
push
repnz
stc
cs
cmp
hlt
fwait
addr16
xchg
pop
mov
in
xor
pop
test
xorb
xchg
neg
or
push
decl
xlat
mov
jecxz
insl
data16
fdiv
popf
xor
fistpll
pop
int3
insb
mov
adc
mov
cmovb
pop
mov
pop
sub
sbb
sub
xchg
add
out
movsl
jb
sbb
mov
insb
hlt
push
in
push
add
jno
test
int3
push
dec
shl
and
dec
ficoml
jo
dec
or
pop
aam
inc
jmp
mov
adc
fldt
mov
decb
and
aad
hlt
js
pop
mov
cmp
dec
push
mov
std
lock
adc
mov
out
add
or
int
jecxz
dec
cmp
mov
es
pop
mov
cmp
xchg
mov
test
out
mov
push
mov
mov
jns
mov
ret
push
outsb
inc
scas
rcll
in
cmp
add
adc
mov
mov
push
inc
divl
aad
fptan
testl
pop
lcall
movhps
popa
dec
adc
cwtl
ret
adc
pushf
xlat
lret
xchg
mov
in
stc
cmpb
mov
cmp
mov
or
fsubp
cmp
pushf
inc
leave
dec
test
pop
mov
mov
pushf
mov
mov
inc
shl
xchg
scas
lods
mov
push
adc
add
stos
jae
or
jae
test
andl
xchg
dec
arpl
in
insl
stc
or
inc
push
das
or
mov
nop
nop
adc
icebp
mov
cld
adc
mov
mov
in
sbb
or
sub
aas
fwait
inc
lret
pushl
iret
stos
jmp
aad
sahf
inc
mov
jg
ja
xor
xchg
imul
call
sbb
loope
in
jl
jmp
push
out
aaa
pop
cwtl
inc
or
xchg
push
dec
std
jne
push
xchg
push
cmp
push
cltd
jne
dec
add
cmp
ljmp
pop
outsb
cmp
cltd
leave
xor
cwtl
int3
xchg
mov
punpcklbw
fiaddl
push
in
push
stos
pop
and
xor
mov
sbb
jl
enter
cmp
or
ja
dec
scas
jl
loopne
sbb
test
fsts
in
and
stos
call
adc
inc
data16
pop
xor
ss
add
and
mov
incl
pop
jnp
mov
and
or
push
inc
jb
mov
loope
sub
pop
xchg
inc
pop
ret
adc
ja
jge
dec
insb
adc
mull
call
lds
mov
pop
mov
mov
loope
ffreep
gs
mov
or
mov
fcompl
push
shlb
cmp
mov
fwait
in
push
xchg
lods
push
data16
movsb
inc
clc
ss
xchg
jb
or
xchg
and
dec
sub
and
sbb
aas
testb
jmp
mov
int
inc
pop
mov
adc
mov
and
leave
pop
enter
inc
or
popf
lods
sbb
lret
push
jmp
daa
mov
pusha
inc
mov
cmc
xor
sub
test
shr
mov
ds
lds
cli
ljmp
data16
neg
and
mov
cmpsl
jnp
shll
pop
das
out
sarb
xchg
aaa
inc
loopne
mov
adc
mov
pop
push
insl
cmc
loope
jne
dec
mov
sub
jecxz
xor
nop
rclb
jmp
movsb
ds
mov
cs
jle
xchg
movsb
loop
icebp
lret
mov
pop
sbb
xor
jbe
lods
pop
inc
or
jmp
xchg
pop
mov
add
arpl
cmp
inc
push
sbb
out
out
daa
sti
jne
mov
loopne
movsb
hlt
dec
fs
xlat
ror
add
xchg
call
pop
add
ss
neg
in
in
fnstsw
xchg
and
inc
fdivr
stos
xor
sub
jnp
inc
fcomps
out
or
std
jg
mov
mov
addr16
or
sbb
ja
cwtl
sub
pop
ss
bound
mov
clc
lds
lock
lock
adc
call
fwait
xchg
arpl
enter
clc
push
or
sahf
loopne
mov
xchg
or
ja
dec
pop
aad
scas
ds
dec
lret
fnsave
sbb
pusha
xor
xchg
or
or
push
ja
data16
sbb
scas
loop
in
inc
pop
pusha
pop
push
or
andb
adc
imul
leave
pop
fistpl
test
rcll
xor
enter
push
push
add
xchg
xor
cltd
pop
xchg
cmp
pop
insb
cwtl
or
sub
shl
cmc
mov
jl
inc
push
lds
hlt
mov
fldcw
dec
and
push
loop
hlt
and
enter
das
mov
mov
repnz
in
lock
cmp
mov
inc
std
insl
fistpll
add
dec
loopne
arpl
bswap
add
mov
loope
out
repz
or
gs
jae
cmc
sub
setns
sub
scas
cli
mov
dec
mov
in
xchg
stos
and
cmc
inc
push
push
and
or
jecxz
push
inc
in
push
loope
arpl
les
subb
test
je
clc
mov
mov
cs
pop
mov
mov
cld
and
sbb
inc
sub
int3
sbb
xor
mov
adc
pop
insb
sbb
ret
mov
jo
or
xor
std
imull
pop
jb
fmull
fisubl
packsswb
push
cmpsl
xchg
and
in
add
test
mov
out
into
push
fldenv
mov
jnp
or
int3
mov
xor
sbb
icebp
mov
rorb
fsubrs
in
es
fsubrl
loop
cld
cltd
sub
scas
mov
lret
inc
in
add
iret
pop
inc
push
cmc
xchg
push
in
outsl
les
lea
inc
dec
mov
sbb
mov
cmpl
push
push
pop
jecxz
jecxz
fstps
push
mov
xchg
inc
inc
mov
inc
dec
cwtl
outsl
jmp
arpl
lds
imulb
mov
ds
and
int3
mov
ret
adc
push
in
cmp
jno
cmpsb
or
fdivl
rcrl
xchg
icebp
pop
stc
mov
mov
dec
fistl
lahf
insl
mov
xlat
inc
int3
mov
sbb
jno
sub
lret
data16
popf
incl
cmp
cld
ret
int3
or
xchg
lock
lcall
xor
push
or
or
pop
test
mov
pop
shl
mov
movsl
test
ret
imul
mov
fdivs
cwtl
push
shll
out
sub
cmp
mov
scas
stc
ljmp
repz
mov
lahf
mov
push
xchg
mov
and
cmp
mov
negb
sub
addr16
enter
in
pop
in
jecxz
push
add
inc
test
push
mov
outsl
pop
lods
cmp
add
jbe
xchg
sti
aaa
push
adc
pushf
in
dec
push
mov
xor
imul
xor
je,pn
and
fwait
sahf
cmp
push
sbb
jg
daa
int
sub
repnz
pop
cld
shll
stos
adcb
ja
movsb
fucomp
and
cmc
sub
push
pop
repnz
or
jno
lds
jle
sub
jne
pop
sbb
addr16
mov
jns
cli
lock
loope
mov
rcrb
int
pusha
jge
rcrl
mov
imul
add
test
enter
dec
shl
jmp
xchg
leave
test
call
mov
repnz
xor
lods
in
dec
call
scas
xor
ljmp
jecxz
cmp
cmc
fwait
addr16
rolb
test
sbb
dec
in
nop
mov
in
mov
cmpsb
push
aad
aad
repz
jns
jno
mov
mov
repnz
ret
pushl
mov
inc
stos
test
jl
lea
call
mov
pop
std
xchg
gs
jl
stc
in
jae
add
or
jns
lea
push
ja
dec
mov
fstpt
jmp
xchg
into
push
cmc
pop
cmp
int3
add
in
push
in
jo
decb
mov
jp
jmp
arpl
sub
pop
and
addr16
jl
lods
test
xchg
dec
daa
sbb
push
cli
rcrl
outsl
sub
mov
js
aad
scas
or
jge
sbb
add
adc
hlt
jnp
and
fistl
jge
test
push
ljmp
addr16
adc
push
xchg
or
xchg
cmpsl
add
pop
dec
rorb
dec
in
add
stc
jns
es
sub
jp
jo
add
cmp
jecxz
nop
adcb
lods
dec
push
jo
xchg
clc
lret
mov
imul
mov
jg
add
in
std
aam
lock
and
sahf
add
int3
sbb
pop
push
add
popa
sub
jae
cmp
jb
fadds
cmp
out
mov
mov
pop
sahf
sbb
pop
xlat
add
daa
dec
cmp
fld
loope
mov
sbb
sbb
push
pop
sbb
mov
scas
inc
cmpsb
xchg
cmp
sub
sub
mov
mov
pop
test
fisubs
in
or
popf
leave
imul
in
scas
pop
jp
pushf
sbb
xor
push
repnz
cwtl
imul
xchg
out
cmp
je
sbb
mov
jne
leave
daa
ret
ja
fxch
mov
jnp
push
stos
test
inc
jbe
dec
xchg
jmp
add
addl
push
add
test
aas
push
adc
push
adc
pusha
push
sub
inc
sbb
add
mov
jge
pop
addr16
add
arpl
push
cmp
scas
ss
mov
add
mov
outsb
mov
fnstsw
lods
jecxz
arpl
nop
in
or
pop
orb
repz
sti
subb
mov
rcr
std
test
adc
push
gs
add
sbb
test
push
and
fwait
andl
ficomps
push
ja
or
out
out
push
or
mov
push
and
xchg
push
dec
xor
jb
adc
adc
fldenv
add
cmpsl
addr16
incb
xor
lods
pop
add
mov
mov
push
pop
dec
mov
jnp
push
ljmp
mov
fwait
push
repz
mov
or
mov
lret
cmpsb
test
cmp
ljmp
cmp
xchg
in
push
rorl
test
push
sahf
incl
ljmp
iret
xor
push
int3
aam
imul
push
and
and
movsl
xchg
inc
mov
push
lcall
inc
xor
in
lahf
xor
in
mov
xchg
mov
jbe
lea
jp
aas
movsl
lcall
cmp
dec
push
jae
xor
iret
mov
sub
mov
es
mov
js
mov
sbb
xor
inc
fistpll
or
data16
or
mov
or
jb
imul
outsl
mov
aas
fdivrs
ljmp
cmpsl
subb
jns
movsl
addr16
push
or
push
push
ret
popf
sti
mov
ss
sahf
and
fmuls
or
in
push
lcall
xor
add
jmp
pop
mov
mov
xor
or
mov
pop
and
xor
cmp
inc
push
out
and
fstps
ja
cmpsl
adc
or
xchg
or
in
pop
bswap
jmp
sbb
xchg
inc
adc
in
pop
clc
sahf
or
fcmovne
xor
pushf
or
icebp
movsl
cld
cs
ficoms
shll
jmp
pop
mov
sbb
ss
sbb
bound
cmc
roll
pushf
sti
inc
into
mov
xchg
pop
lahf
push
in
in
and
mov
push
lods
test
aaa
cs
jnp
mov
cltd
shl
mov
sub
js
cmp
clc
xor
pop
shlb
push
dec
loope
xchg
fs
or
imul
jl
cmp
aas
movsl
mov
mov
sub
popa
shlb
in
stc
in
sti
pop
ja
mov
adc
push
add
push
push
in
pop
jge
inc
sbb
hlt
stc
cs
sbb
cmc
cltd
addr16
push
in
scas
aad
das
sub
jno
xlat
or
lods
outsl
pop
add
das
and
orl
push
dec
sub
fs
jbe
jecxz
cmp
rol
mov
imul
jb
xchg
xchg
jnp
popa
stc
jae
lret
int
dec
jne
lret
arpl
cmp
stc
ds
hlt
out
sbb
xchg
in
jbe
inc
add
and
cmp
add
imul
cmp
sub
pop
outsb
mov
hlt
data16
cmc
std
in
adcb
jbe
mov
mov
dec
lods
cltd
ret
push
add
in
mov
sub
repnz
dec
mov
or
shl
pop
in
fcom
shrb
jne
xlat
sub
and
pushf
inc
xchg
flds
sbb
adc
push
pop
xorb
rcrl
mov
lea
mov
cmp
rcl
mov
mov
outsl
or
xchg
jle
call
into
sbbb
bound
pop
inc
pop
add
jb
arpl
sub
into
fisubs
push
test
xchg
dec
shl
mov
insl
aas
std
mov
sbb
or
mov
std
loopne
inc
fstps
fcomi
fs
xchg
bt
dec
repz
movsl
mov
pop
orl
dec
jl
mov
iret
or
adc
shrb
test
call
mov
jg
enter
pop
clc
frstor
cs
repnz
in
mov
repnz
sbb
pop
icebp
movsl
or
fnsave
dec
lcall
inc
aam
jnp
aad
arpl
out
mov
fcmovb
jge
fwait
mov
mov
out
adc
scas
sub
inc
jge
lret
aad
je
jae
add
push
add
fsubl
fwait
jp
xchg
cmp
adc
rcll
sub
adc
sub
sbbl
mov
lds
insl
int
push
pusha
mov
sbb
sub
imul
adcb
imul
sarb
hlt
mov
hlt
divl
sbb
fcoml
ss
js
sbb
imul
cmpb
orb
gs
lret
faddp
fsubrs
fcomip
mov
data16
mov
cs
mov
aad
mov
xor
sbb
add
lret
arpl
aaa
mov
movsl
xchg
adc
loopne
lcall
inc
ja
xor
inc
mov
mov
insl
aas
sub
mov
or
dec
clc
movl
jne
sti
adc
pop
into
adc
enter
sbb
kandnw
push
fdivrp
fs
cwtl
adcl
mov
andl
mov
cmp
sub
mov
jne
push
pop
mov
test
cmp
push
adc
dec
shrb
mov
cmp
movsl
push
jo
js
popa
scas
or
dec
adc
cmc
mov
lds
je
lea
push
mov
ret
xchg
mov
dec
xor
mov
mov
lahf
push
pop
repnz
xor
fsubr
iret
out
scas
cmpsl
jl
sti
cmpsl
repnz
in
cmp
fildl
xacquire
and
aaa
mov
xchg
xor
sbb
add
insl
out
sub
sub
mov
icebp
pushf
jmp
idivl
push
rcl
insb
mov
xor
sub
stos
das
mov
je
in
xor
jne
inc
push
lods
repnz
and
or
call
leave
jno
cmpsl
xor
and
test
push
test
mov
adc
cld
mov
jecxz
dec
fiadds
je
mov
jns
or
adc
nop
push
xchg
fsubrs
lcall
mov
push
add
jb
call
inc
inc
loopne
xor
fnsave
inc
rclb
inc
fidivl
cmp
flds
add
sbb
popf
insb
inc
rorb
das
xchg
push
loope
mov
pop
and
push
inc
xor
dec
mov
repz
jae
lock
jl
incl
in
mov
xchg
jmp
inc
jmp
push
cmp
mov
icebp
popa
sub
or
shlb
mulb
dec
pop
bound
xor
pop
movsl
bound
and
out
int3
fcmovnu
and
daa
dec
xor
int
lods
cmp
add
fdiv
inc
push
jbe
leave
mov
sbb
xor
int
ret
cld
adc
mov
xchg
mov
add
cltd
ja
xor
cmp
push
lea
adc
sti
or
push
popa
dec
cmc
inc
mov
push
mov
jo
add
dec
xchg
inc
mov
and
lahf
andb
out
int3
dec
mov
lea
movsb
int3
dec
sub
xchg
mov
fadds
mov
out
aas
pop
pop
arpl
add
xor
inc
push
dec
push
dec
imul
inc
or
jns
push
repz
xchg
or
dec
stc
xchg
mov
jo
push
sbb
adc
xchg
xchg
sub
scas
sbb
jb
scas
fwait
ret
jge
sub
cmpl
jle
popf
int3
xor
cmp
dec
mov
mov
mov
adc
ret
push
rclb
dec
mov
cmp
int
clc
test
cld
push
mov
mov
cmp
cmp
jle
push
fisubrs
cmp
fwait
addr16
dec
lods
iret
mov
repz
in
orl
mov
sub
dec
icebp
sbb
mov
push
xchg
stos
sbb
in
dec
shlb
aaa
enter
cmpsl
aas
mov
lret
adc
imul
or
pop
pop
std
pop
in
in
movsb
loope
repnz
mov
add
lock
mov
mov
xor
mov
notb
icebp
out
pop
insb
pop
enter
roll
pop
ret
cmp
cld
push
rorb
mov
xchg
inc
imull
or
daa
add
mov
fnstsw
pop
mov
mov
sub
and
adc
cmp
jbe
daa
das
popf
or
mov
jnp
ficoms
sub
inc
adc
jg
cmp
mov
adc
mov
test
addl
sbb
lds
aaa
xchg
adc
mov
push
dec
and
jae
shrl
xchg
jmp
mov
adc
imul
sbb
jae
aam
ja
lret
adc
aad
mov
cmp
popf
mov
in
movsl
rorl
out
push
cmp
xor
imul
push
push
sbb
mov
mov
xchg
addr16
pop
xor
inc
js
enter
fmull
addl
xchg
das
dec
stos
push
in
dec
cli
xchg
mov
fwait
cmpsb
push
fwait
push
imul
rcr
outsb
test
in
scas
ja
push
sbb
push
push
cmpsb
mov
cmp
cmp
add
push
pop
dec
jnp
icebp
sbb
or
insb
add
sti
call
and
jp
add
sahf
jne
inc
insb
repz
cmp
inc
mov
test
xor
mov
in
dec
movsl
jns
push
inc
mov
cmp
notb
mov
add
mov
bound
adc
pop
inc
inc
sub
pop
jns
jns
sbb
adcl
and
aad
out
dec
test
jae
pop
and
jb,pt
ret
mov
filds
xor
dec
pop
push
aaa
call
sahf
fisubs
xchg
mov
in
push
jne
int
sbb
xchg
dec
xchg
push
mov
or
and
dec
jnp
hlt
imul
pop
mov
sbb
push
sbb
adc
dec
adc
push
sbb
push
into
repz
mov
in
sbb
push
xchg
sarl
sub
or
gs
cmp
mov
cmc
sbb
clc
cmp
mov
fsub
dec
sti
mov
loop,pt
shr
aad
aaa
pusha
aam
shll
popa
sbb
fimuls
push
mov
roll
outsb
es
add
jbe
mov
jne
test
sbb
inc
xchg
ja
insb
loope
stos
mov
xor
insl
sbb
ja
jb
daa
add
mov
and
xor
negb
add
or
xlat
fildll
xchg
mov
mov
and
xor
xor
mov
sti
pop
fimuls
out
sbb
jecxz
adc
jb
mov
in
inc
ljmp
ljmp
test
nop
js
jmp
out
add
jnp
jb
mov
lods
aas
test
orb
xchg
push
xchg
es
in
popa
arpl
xchg
sarl
adc
mov
and
sbbl
or
push
adc
add
push
movsl
lahf
cmp
jg
lahf
repz
es
cmp
xor
and
sbb
movsb
negb
and
fcomip
stos
adc
call
jg
jecxz
mov
daa
pop
cmc
adc
jb
adc
icebp
cmp
push
mov
dec
xchg
popf
sbb
push
repnz
push
inc
sahf
sti
loope
fnstenv
cmpl
sti
dec
xor
lods
lret
adc
in
movsb
add
xchg
outsb
repz
imul
enter
sahf
or
cmp
push
frstor
mov
imul
gs
test
sbb
lds
cmpb
int
add
cltd
sbb
aam
xorl
ljmp
push
and
xchg
test
xchg
pop
aad
aad
or
xor
aad
inc
mov
movsl
test
cwtl
and
sub
xchg
sarl
lods
in
mov
mov
dec
xchg
lea
hlt
mov
push
outsl
icebp
mov
push
hlt
xchg
ja
mov
mov
fucomip
mov
repz
fisubl
ds
jl
push
xchg
sub
xchg
ds
es
inc
sbb
adc
stos
xlat
test
stc
add
jge
push
sbb
pop
fistps
cmp
movsl
pop
add
sub
jno
pusha
in
push
test
loop
sub
mov
sub
mov
mov
cmp
xor
mov
rcl
cmpsb
add
nop
out
cmpsb
adc
push
movsb
nop
cli
dec
mov
sub
rclb
mov
ljmp
lahf
test
imul
das
and
add
es
imul
pop
cs
mov
pop
push
lds
scas
jecxz
inc
cmc
mov
sahf
sbb
push
mov
jg
sarl
add
dec
jbe
or
xor
mov
inc
cmp
push
jbe
dec
push
pop
mov
mov
dec
cmp
and
arpl
push
inc
add
insl
jecxz
push
adc
out
pop
pop
push
xor
xchg
or
js
les
push
cld
or
mov
add
ret
filds
sbb
fs
mov
pop
dec
out
jbe
add
ds
shl
xor
movsb
mov
sub
fucomip
xchg
mov
lahf
mov
mov
cmpsb
imul
sbb
cli
xchg
ret
inc
ror
fbld
mov
aaa
popa
stos
push
pop
mov
mov
or
mov
cli
std
adc
in
gs
xor
rolb
icebp
insl
push
xchg
adc
stos
add
adc
stc
sub
dec
inc
xor
mov
fwait
nop
push
lret
xchg
das
aas
loope
clc
jl
fcmovnbe
int
xor
adc
cltd
cltd
jecxz
test
es
iret
les
and
mov
jae
fxch
movsb
ja
dec
pop
mov
cmp
adc
xchg
mov
cmp
repnz
jg
or
push
imul
dec
test
outsb
mov
jb
lods
jmp
and
paddb
xor
aaa
adc
test
insl
lret
nop
sub
call
fldenv
out
sar
cmpsb
cs
arpl
das
sti
xchg
iret
mov
scas
pop
loop
rorl
hlt
aam
adc
push
mov
cli
inc
mov
cli
dec
pop
imul
xchg
or
mov
cmp
loopne
inc
jae
and
add
jbe
jo
sahf
cmpsb
daa
and
negl
sub
jbe
mov
sbb
test
cltd
fstl
arpl
and
dec
inc
jne
incl
cmp
cs
sub
les
jecxz
and
xchg
iret
jge
push
out
scas
cli
or
rcrl
xor
jne
lods
les
imul
add
outsb
mov
adc
lock
mov
push
cltd
test
sbb
sbb
pushf
dec
das
adc
jo
dec
outsl
jle
push
push
mov
pop
loopne
int3
int3
aad
push
jno
xor
cmp
call
sahf
dec
xchg
cmp
jae
and
jbe
mov
mov
jbe
and
mov
jnp
xor
mov
dec
mov
add
int
jmp
inc
jmp
push
rol
fiaddl
adc
fdivr
push
pushf
cmpsb
leave
sbb
mov
xchg
addr16
sub
jnp
mov
mov
inc
sbb
cmp
shrl
int
mov
xchg
outsb
out
loop
xchg
imul
shll
mov
dec
ds
jns
xor
out
add
fidivl
shll
test
pushf
out
push
push
inc
mov
sarb
fldenv
ljmp
mov
ret
das
sbb
cwtl
jecxz
notl
lock
dec
lods
and
les
and
push
aas
mull
ds
cmp
or
xchg
inc
adcb
je
cmpsl
outsl
scas
rclb
push
mov
lock
jcxz
mov
xor
or
sti
les
call
cpuid
jl
jle
outsb
lods
adc
test
aam
mov
sub
jne
xchg
lea
xchg
add
push
cmp
test
call
mov
mov
sub
sbb
je
adc
test
cmp
xchg
push
daa
jg
ljmp
dec
jle
test
fstpl
and
je
das
mov
dec
sub
and
cli
shll
push
inc
lods
filds
add
out
loope
mov
cmp
shlb
sub
sbb
les
dec
jnp
sub
arpl
and
push
stos
pop
jg
sub
loopne
and
mov
rcrb
test
inc
outsb
pop
mov
dec
dec
in
aad
or
jbe
dec
dec
addb
adc
jge
inc
push
leave
mov
and
dec
add
es
daa
imul
and
fisttpll
pop
pop
sbb
fsubr
sub
popf
shrl
aas
jbe
inc
movsb
add
lahf
gs
add
pop
mov
rcrb
repz
mov
std
daa
and
cld
jbe
lahf
arpl
inc
mov
addr16
mov
cltd
in
mov
jae
dec
xchg
clc
mov
mov
mov
into
and
ss
lret
fdivrs
jb
or
aas
or
fwait
cld
jp
fidivrl
scas
lods
arpl
jmp
mov
dec
mov
in
js
mov
mov
xchg
sub
dec
jl
into
jns
in
mov
xor
dec
punpckhwd
loope
pop
jge
jmp
adc
xor
shl
xor
xchg
aaa
and
out
repz
mov
add
popf
pop
push
pop
int3
mov
xor
cmp
pop
jbe
loopne
cwtl
jmp
xchg
xor
iret
sub
mov
into
mov
lret
cmpsb
enter
push
cmc
xchg
in
jb
mov
push
mov
xor
mov
jns
ret
std
aad
jp
repz
mov
aam
icebp
sbb
push
lock
or
jl
xor
and
sbb
loopne
cmpsb
mov
mov
lea
pop
pop
arpl
sbb
dec
sbb
popf
mov
xchg
adc
scas
xchg
xor
gs
mov
push
std
fnstsw
sub
outsl
pop
es
jg
jl
cli
test
and
push
mov
insl
and
pop
aad
jb
xchg
in
mov
iret
sti
mov
dec
stos
movsb
mov
jecxz
fs
inc
aas
test
fimull
iret
push
fs
pop
xor
dec
pop
adc
sub
rorb
cli
add
aad
fnstsw
rcr
ds
lock
adc
or
hlt
mov
xor
aad
sub
add
pop
adc
sub
xchg
sbbl
cmpsl
cld
jecxz
test
sub
add
ret
xchg
push
xchg
sbb
ret
mov
in
jge
xor
cmp
icebp
inc
aaa
insl
add
fisttpl
add
or
subl
stos
lahf
mov
or
fmull
lret
dec
ss
test
cs
and
dec
stc
fwait
js
jecxz
ficoms
dec
in
imul
mov
nop
and
adc
push
push
loop
bound
push
or
jb
movsb
int
outsb
and
ja
rclb
jb
pop
mov
jnp
mov
pop
push
enter
aam
add
push
dec
cld
dec
inc
aas
and
out
out
int
jg
test
test
jo
clc
lcall
sub
and
aam
jns
rcll
sbb
dec
or
inc
aam
out
lret
xchg
mov
ja
inc
popa
or
fsubp
push
aam
mov
jge
je
gs
in
lods
or
pop
jno
rcll
fisubrs
dec
sbb
mov
cld
loopne
inc
cmc
mov
scas
popa
mov
loopne
jmp
inc
pusha
xchg
pop
mov
lret
fsin
ret
mov
bound
inc
pushf
mov
push
mov
mov
inc
bound
xor
add
cmp
aaa
adc
cmpl
sti
imul
stos
outsl
leave
cmpsl
lret
pop
cmp
popa
inc
scas
xchg
push
mov
fwait
sub
es
mov
jbe
add
popf
jg
dec
push
push
mov
insl
ss
push
dec
ja
mov
aas
cmp
sbb
ret
mov
inc
bound
and
cwtl
pop
loope
xor
aaa
xchg
xor
push
sbb
je
push
inc
xchg
fnstcw
int3
push
fstl
jle
aam
shlb
adc
add
cmp
dec
mov
cmp
aam
jo
jae
inc
mov
cwtl
mov
stos
adc
pop
addr16
push
jne
adc
js
loopne
fwait
lret
xchg
cmpl
imul
lret
add
fs
hlt
sbb
scas
jmp
ret
lret
in
mov
cmpsb
mov
sub
loop
adc
jne
push
jbe
cwtl
and
push
stc
push
pop
int3
mov
movl
int3
mov
inc
jg
pop
xor
mov
and
xor
mov
inc
mov
jns
cmp
and
icebp
fwait
insl
xor
int3
pop
mov
pushf
insb
add
fnstcw
or
xchg
cmp
daa
or
in
mov
js
sub
stos
test
imul
movsb
andl
fst
inc
xchg
jb
push
cmpsl
js
jg
decb
push
inc
xchg
shrb
jb
loopne
loop
and
adc
negl
adc
sbb
sbbb
mov
pop
jp
call
mov
lea
fcomps
xchg
ja
jb
sti
mov
pusha
dec
pusha
out
lods
scas
rclb
data16
jo
jmp
je
jae
daa
arpl
int
xchg
push
incb
aaa
iret
sub
scas
mov
mov
inc
dec
mov
fiaddl
mov
pop
repz
dec
dec
adc
repz
imul
in
xchg
inc
call
mov
ss
call
add
inc
daa
dec
jg
shlb
jnp
pop
and
mov
mov
sbbl
sbb
jne
mov
sahf
mov
outsb
sahf
xchg
popa
pushf
int3
ljmp
repnz
inc
add
imul
inc
adc
cmp
cmp
jns
xor
arpl
lahf
xor
jne
xchg
hlt
pop
or
inc
add
cmp
inc
js
mul
jb
push
mov
sub
adc
flds
iret
cmc
sub
adc
add
cwtl
repnz
mov
js
fsts
dec
mov
bound
dec
hlt
push
mov
mov
rorl
daa
mov
xor
out
loopne
aaa
arpl
insb
and
pop
cmpsl
ret
imul
je
push
out
fidivrl
sbb
test
icebp
int
sub
mov
inc
xor
repz
sub
xchg
add
inc
xor
bound
cmp
mov
mov
rclb
jmp
loope
arpl
in
out
adc
push
daa
andl
add
push
andl
sub
mov
sahf
sti
pop
scas
addr16
lahf
loope
jno
sub
cmp
and
pushf
outsb
fs
sub
fisttpll
xor
mov
repz
mov
xchg
dec
mov
pop
add
or
jnp
sbb
aas
pop
push
sbb
in
js
or
jp
test
push
and
sti
scas
xlat
add
repnz
loop
push
sarl
fstpl
data16
dec
push
inc
inc
ss
movsb
dec
xchg
inc
xorl
mov
jae
fcoml
and
pushf
lret
out
in
fistpl
mov
or
jg
sbb
xor
imul
pop
pop
sub
mov
jp
xchg
push
fcom
dec
xchg
in
inc
xchg
dec
xor
imul
sbb
loop
orl
lret
cwtl
cmp
stc
sahf
fsub
repnz
push
lret
aaa
into
into
out
cwtl
mov
repz
mov
xor
aam
les
sbb
pop
pop
push
sbbl
adc
or
sub
stc
in
or
hlt
popa
arpl
push
push
sub
ss
outsl
stos
fcomps
dec
and
shll
adc
push
or
inc
jg
and
ret
leave
lods
xchg
mov
mov
hlt
rcll
test
mov
add
dec
mov
psadbw
cmp
orb
mov
outsl
iret
ret
and
fwait
adc
into
pop
bound
xchg
dec
push
jecxz
lret
mov
xchg
cmc
jo
mov
xchg
xchg
mov
mov
adc
or
popf
popf
dec
push
xchg
adc
add
mov
ja
add
cmc
pusha
negl
add
pop
lcall
pop
mov
outsl
fcmovbe
insl
push
or
fldl
add
insl
lods
ret
in
mov
enter
imul
sbbb
shll
sub
dec
bound
sahf
add
and
jo
mov
mov
adcb
scas
or
jmp
push
ja
loopne
jg
push
leave
mov
push
je
or
lds
jb
notl
movntq
jns
cli
mov
mov
adc
mov
clc
cmp
aad
dec
sbb
sbb
dec
sub
xchg
fwait
pushf
dec
sub
cmpsb
addl
jb
sarb
fisttpl
add
and
pop
inc
data16
jl
repnz
mov
loopne
mov
jno
mov
and
mov
push
shrb
push
bound
and
xchg
adc
mov
sti
inc
sbb
dec
xor
sub
sub
in
fistps
repnz
frstor
in
add
stos
adc
cld
inc
sbb
cmpsb
movsl
mov
mov
push
nop
std
jno
and
fdivs
sbb
incl
fistps
pop
xor
lock
lods
stos
inc
jno
testb
xchg
test
leave
shll
adc
adc
mov
std
cmovo
daa
adc
daa
push
mov
fcomps
and
stos
in
into
ljmp
jp
jno
push
popw
lahf
out
repz
and
bound
adc
in
pmuludq
mov
pop
jo
xchg
leave
lret
dec
cmp
jbe
shrb
in
add
dec
inc
jmp
neg
sbb
mov
enter
push
test
jb
mov
adc
mov
fistl
sub
push
jl
cmp
roll
icebp
fisttpl
out
jl
ss
add
mov
aad
out
mov
sub
cmc
cmp
xor
in
int3
pop
xchg
pop
in
mov
ds
ret
test
adc
sub
jnp
or
lret
bound
xor
inc
imul
loope
sbb
int3
icebp
in
popf
stc
roll
lods
daa
bnd
xor
sbb
in
rcl
xchg
jl
adc
and
or
insl
jl
daa
mov
jp
aas
ja
sub
inc
sbb
es
hlt
xchg
mov
imul
out
mov
out
cmc
jne
pop
and
jbe
xchg
in
mov
shr
cmc
dec
int3
popf
push
sub
test
pop
xchg
inc
frstor
int
jmp
push
pop
loope
fisubl
lret
out
xor
mov
cmp
push
cs
pop
cld
int
icebp
xor
push
xchg
cld
inc
mov
jge
in
popf
and
cmpsb
out
add
bound
ret
test
mov
movsb
test
mov
les
test
or
jl
aad
sbbl
jno
mov
pop
mov
in
addl
std
dec
ret
jmp
pop
aas
lock
fcompl
stos
add
popa
mov
and
adc
filds
jo
xchg
mov
test
mov
mov
pop
cmp
jnp
popf
lret
push
dec
shrl
stc
adc
sbb
lea
fadd
test
adc
dec
in
mov
clc
dec
fcmovbe
lcall
aas
test
fs
sbb
mov
sbb
xor
cs
ret
jl
xchg
mov
push
in
test
out
add
addr16
bound
cmp
les
mov
sbbb
loope
subb
int3
xchg
mov
enter
loop
inc
and
xchg
icebp
test
dec
lahf
jl
sbb
lds
dec
cmpsb
or
jnp
imul
sbbb
push
lods
imul
negl
into
aam
cltd
pop
in
cld
sub
outsl
adc
dec
adc
and
xor
iret
ljmp
cmpl
out
inc
pop
pop
push
jmp
jne
clc
adc
jnp
mov
adc
push
xor
aam
fcoml
shlb
arpl
dec
cmp
das
mov
int3
pop
outsb
je
es
adc
daa
daa
aad
add
andb
out
stos
shl
pop
sub
pop
push
inc
ret
shll
mov
es
pop
adc
aas
mov
jle
pop
cmp
cmpsl
inc
inc
push
inc
inc
sub
jne
mov
sub
dec
mov
mov
ljmp
sbb
cmp
ds
push
popa
push
stos
sub
mov
lret
int3
jb
int
jp
fbstp
adc
or
roll
ja
jp
mov
insl
mov
push
mov
stc
js
adc
fwait
sahf
imull
cmpsl
out
loopne
addr16
je
addr16
imul
inc
jnp
push
inc
lret
push
mov
int3
xchg
jne
sbb
lea
mov
mov
sbb
call
mov
outsb
orl
add
pop
cmp
mov
inc
imulb
fidivs
shlb
cmpsl
movsl
jbe
cmp
add
sub
call
mov
xor
inc
test
int3
out
dec
je
push
repz
test
pop
sbb
enter
and
cld
dec
jb
lea
aas
push
stos
mov
push
sbb
bt
mov
enter
cmp
scas
jl
addr16
aas
and
mov
xchg
add
inc
insb
pop
mov
pusha
imul
ljmp
out
cmp
xchg
ja
jle
cmp
mov
push
in
dec
sti
rorb
into
adc
lcall
mov
aaa
insl
jl
xchg
scas
inc
xorl
dec
notl
ret
cwtl
cmp
dec
ss
ret
dec
mov
into
fwait
mov
push
pop
dec
insb
sub
add
add
adc
pushf
mov
cmp
adc
mov
ficompl
pop
int3
mov
pop
enter
or
rcl
gs
inc
and
xor
mov
ss
shlb
jb
inc
aas
dec
das
pop
dec
sbb
fs
push
cmpl
push
sub
pop
pop
xchg
sub
test
imul
push
in
jmp
adc
imul
jle
cmp
lods
or
push
pusha
movsl
xchg
jae
test
add
xor
imul
je
dec
mov
sub
lahf
pusha
push
xchg
cwtl
test
jae
in
add
ret
pop
and
lret
jae
popf
cmp
mov
ja
xor
xor
lahf
cmp
sti
sbb
in
scas
sub
sbb
xor
ret
dec
xchg
xchg
mov
mov
cltd
arpl
pop
xchg
out
bound
cmp
into
jo
imul
outsl
mov
xchg
add
lods
lods
push
mov
add
mov
loope
xchg
and
mov
mov
or
lahf
push
scas
shll
dec
xchg
repnz
add
sub
std
ficoml
dec
xchg
lods
stos
xor
jo
mov
inc
cli
inc
rolb
mov
hlt
dec
outsb
lret
daa
add
push
iret
mov
jnp
fistpl
out
adc
inc
test
daa
xchg
cmpsl
subb
inc
sub
mov
xchg
shlb
shlb
rorb
push
test
sbb
jp
sub
in
iret
ret
ret
in
mov
scas
add
and
lds
fs
outsb
icebp
jbe
shlb
movsb
push
sbb
std
adc
stos
mov
fisttps
xor
cmc
cmp
out
mul
stos
aas
jmp
lds
mov
mov
push
inc
sbb
adc
cmpsl
jns
scas
addr16
xchg
inc
outsl
inc
sbb
ljmp
addr16
fcompl
cltd
fistpll
and
in
mov
test
in
fbstp
mov
sbb
sahf
push
mov
sub
unpcklps
mov
push
jb
sub
pop
inc
movsl
out
cmp
dec
pop
clc
xchg
dec
dec
ja
xchg
lea
mov
jo
arpl
dec
xchg
nop
jbe
lods
add
xor
add
sub
lea
popf
js
mov
loope
add
push
xchg
das
pop
fimuls
leave
push
aas
mov
popl
sbb
jmp
fdivs
loope
jge
mov
aas
sbb
cli
inc
and
hlt
inc
cmpsb
xor
jg
mov
xor
sub
sbb
pop
out
sub
inc
es
lds
lahf
jg
add
maskmovq
notl
xchg
lret
cmp
pop
xor
fsubrl
ja
cltd
insl
daa
ret
jb
push
lret
mov
mov
xchg
test
rorw
pop
leave
inc
fiadds
pushf
dec
lahf
aam
das
fwait
lcall
call
dec
mov
pop
movsb
lock
fidivs
inc
call
ret
clc
ret
xchg
jbe
sbb
lds
xchg
xchg
lods
inc
cmpsb
popa
xchg
int
cmc
sbb
cwtl
insl
aad
push
mov
sub
pop
sbb
std
ret
cmp
orl
xor
push
cmp
and
sbb
imul
adc
scas
mov
stc
mov
mov
fldl
inc
ds
jne
insl
stc
and
movl
push
add
js
sbb
test
out
iret
jecxz
in
pop
rorb
mov
in
adc
shlb
cmpsb
cwtl
push
pop
inc
aaa
addr16
dec
or
fadd
aas
and
inc
xchg
xor
mov
and
mov
xchg
or
fcompl
xchg
jno
ret
mov
out
imul
movsb
sub
imul
leave
push
lret
loop
sub
and
jge
subb
lds
repnz
pusha
stc
sub
and
sub
xorl
shlb
sbb
push
notl
insl
xor
shrl
xor
fcoms
enter
jnp
or
cmp
arpl
pop
nop
js
sbb
xchg
or
sbb
aas
inc
ret
sbbl
cmp
mov
mov
and
jnp
cmpsb
mov
and
negl
inc
filds
sbb
fnsave
sbbb
movsl
mov
fmuls
cmp
cmp
sbb
lods
lods
jmp
and
mov
jp
mov
adc
cmpsl
xchg
jp
mov
mov
cmp
lret
xchg
mov
push
push
inc
dec
adc
subb
enter
lods
in
dec
je
push
and
nop
loope
xor
iret
push
loop
incl
mov
xorl
inc
scas
daa
rcrb
push
sbb
and
lea
mov
out
data16
imul
push
jp
int
imulb
push
ds
into
fistpl
ret
mov
pop
mov
mov
nop
jno
jle
adc
stos
inc
cmpb
jnp
repnz
idivb
outsb
inc
inc
cmp
fisttps
in
xor
imul
test
sbb
repz
jg
loopne
outsb
push
dec
xchg
pop
cmp
les
lret
divl
lds
fdivr
lret
pop
sub
popf
cld
adc
sub
push
popf
nop
test
sbb
sbb
xor
jae
jmp
xor
push
xor
sbb
lret
mov
fadd
neg
mov
out
out
fnstenv
or
xchg
mov
mov
pop
inc
mov
or
movsl
jnp
flds
mov
imul
pushf
adc
clc
call
jb
ja
cmp
movsl
pusha
lods
fs
push
rcl
inc
in
arpl
jg
mov
add
movsb
cltd
jp
mov
in
lea
jns
pusha
sub
nop
xchg
sbb
notb
or
mov
sahf
pushf
es
pop
je
je
out
test
je
cmc
cmp
mov
sub
pop
or
add
enter
jne
xchg
int
xchg
into
jo
aaa
aam
out
fdivrl
xchg
cld
arpl
or
scas
nop
es
aaa
stc
xchg
lret
cmp
jns
in
mov
outsb
mov
aam
mov
loop
inc
stos
lea
stos
aas
lret
aaa
push
dec
popa
insl
jns
xchg
in
sub
rolb
mov
dec
repz
leave
lods
outsl
ffreep
arpl
sbb
lcall
push
in
or
test
sar
mov
adc
mov
cwtl
movsl
ss
fistps
adc
or
sbb
aad
mov
addr16
jl
lret
outsb
inc
gs
ret
cmp
sub
lret
daa
in
push
in
shr
pop
sbb
xor
xchg
sub
cmp
mov
idivb
or
mov
or
arpl
adc
stos
cmpsb
into
cmp
inc
pushf
xchg
and
loope
dec
in
push
sarl
int3
push
lods
out
shrb
or
pop
sub
int
push
mov
xlat
xor
inc
fs
in
pop
imul
mov
or
dec
sub
xchg
call
mov
mov
enter
pop
ss
ljmp
in
sub
pop
pop
stc
mov
shlb
fimull
adc
pushf
or
push
cmp
addl
lret
xchg
jmp
push
jg
mov
adc
fsubrl
ficoms
out
popa
jmp
lret
and
inc
adc
out
xchg
enter
popa
movsl
adc
int
pop
arpl
jns
xchg
scas
mov
jg
stos
jge
stc
jmp
jo
adc
inc
mov
push
iret
cld
out
xchg
sbb
dec
cmp
ret
sub
xor
add
or
push
inc
std
and
jecxz
into
or
xchg
pop
repnz
pop
jle
jecxz
sbb
in
push
adc
xchg
mov
icebp
lret
inc
cmp
mov
stos
movsl
dec
jo
iret
aam
andb
sub
mov
adc
mov
inc
and
cmp
push
jne
add
and
mov
and
lahf
pop
in
push
push
lahf
push
hlt
stos
xchg
jl
jmp
repnz
xor
jecxz
and
pop
pop
jg
mov
dec
enter
in
mov
fdivrl
fs
xor
cmpsl
ljmp
hlt
dec
pop
xchg
or
mov
mov
mov
adc
add
push
scas
fwait
jns
dec
pop
mov
mov
and
sub
inc
jge
sbb
jp
inc
out
mov
cld
xchg
pop
inc
cld
push
cmpsb
mov
sbb
mov
je
pop
jg
fmull
leave
adc
in
mov
lea
pop
rcrl
lret
daa
and
mov
lods
mov
xchg
imulb
push
out
push
and
jge
mov
adc
test
cmpsb
divl
dec
dec
aas
sub
jno
pop
xor
and
popa
pop
sti
pop
cmp
push
test
add
push
in
jge
mov
jbe
out
push
adc
stos
and
jp
xchg
icebp
test
dec
sbb
add
mov
jl
mov
in
dec
jge
and
mov
sbb
movsb
adc
add
inc
stos
pop
cmp
xchg
mov
loope
test
mov
addr16
pushf
inc
xor
ret
dec
leave
mov
jg
dec
mov
ja
cmp
pop
mov
jns
sub
repnz
push
out
arpl
pushf
mov
pop
push
fisubrl
mov
pushf
lret
adc
loope
aaa
adc
cmp
push
hlt
adc
loop
and
mov
add
dec
pusha
jg
out
fisubs
xchg
xchg
arpl
pop
icebp
xchg
push
jne
xor
xchg
lock
or
cli
jbe
xor
and
in
into
and
scas
xor
into
repnz
xor
std
hlt
in
fs
adc
cmp
pusha
pop
aad
lods
xor
xor
nop
sbb
loope
movsb
test
mov
lods
lcall
jne
sbb
fcomi
outsl
in
insb
das
xor
lock
mov
lds
mov
es
jns
jp
mov
ret
shlb
dec
fbstp
xor
xchg
outsl
outsb
cwtl
mov
jp
imul
cmp
sbb
push
jb
and
adc
mov
pop
insl
ss
arpl
sarb
mov
int3
stos
dec
jnp
cmp
adc
fimull
inc
testb
inc
imul
dec
cmc
mov
dec
mov
sbb
insb
jg
cmpsb
pop
sbb
in
dec
orb
mov
mov
dec
fs
clc
fldl
mov
mov
sbb
mov
mov
sub
add
roll
pop
inc
fwait
xchg
data16
mov
pusha
inc
push
movsb
adc
xor
icebp
inc
aad
je
add
outsb
add
mov
imul
int
and
lods
es
mov
loope
lock
ja
jmp
outsl
xor
jbe
push
stos
roll
cmpb
test
dec
jp
adc
cld
roll
in
cmp
cli
ljmp
mov
insb
jae
fnstenv
clc
cmp
adc
xor
gs
push
xchg
int3
sub
test
xor
cmp
pusha
movl
mov
cli
rolb
mov
xchg
xor
aam
jmp
je
pop
mov
in
pop
out
aaa
pop
jecxz
push
push
xchg
stos
dec
in
inc
and
test
push
xor
push
aaa
dec
xchg
cmp
movsb
pusha
mov
adc
sbb
shlb
ss
push
in
cmp
daa
cmc
add
and
pop
cmpsb
popa
and
dec
cmpsl
popf
dec
mov
data16
into
ficompl
subl
pop
pop
stc
fmull
cmpsb
imul
xor
js
loop
movsb
fstp
out
inc
clc
xchg
bound
sbb
stos
push
in
push
arpl
mov
js
or
clc
pop
inc
jo
mov
or
dec
faddp
push
xor
cmpsl
arpl
dec
fcoml
pop
push
into
sub
shlb
pusha
xchg
mov
mov
pop
xchg
out
das
dec
lret
dec
insl
jl
test
call
push
jge
jae
push
sti
add
frstor
bound
in
mov
jg
lret
hlt
mov
outsb
or
flds
data16
or
jmp
sub
jle
dec
xchg
stos
sub
fistps
stc
clc
rcl
jecxz
push
repnz
adc
and
dec
jg
dec
icebp
mov
js
popf
push
push
negl
repz
sub
div
dec
mov
ljmp
pop
inc
mov
icebp
sahf
scas
inc
and
popa
sbb
in
shrb
ds
sub
mov
shll
adc
inc
popa
mov
jb
rcr
das
jecxz
cmp
fwait
xor
daa
push
and
push
inc
jge
push
stos
fisubs
faddl
sub
clc
sbb
mov
js
push
jp
enter
mov
fstl
test
xor
or
mov
decl
std
or
cli
mov
addr16
mov
stc
mov
aam
js
out
loopne
dec
sahf
push
or
cmpsl
aas
scas
jne
jae
lods
stc
inc
mov
dec
cmp
or
dec
dec
mov
fnstenv
cld
push
pop
push
inc
pop
pop
jp
xor
xchg
sbb
mov
je
pop
es
mov
or
leave
lock
aas
test
pop
sarl
cmp
pop
arpl
dec
mov
lock
fs
jbe
dec
sarb
dec
pop
mov
xor
imul
mov
clc
mov
mov
adc
jno
add
xor
cmpsl
xor
push
xchg
mov
scas
stc
dec
mov
pop
adc
insl
or
scas
jnp
sub
mov
sti
out
movsb
ljmp
inc
loopne
jb
outsl
mov
cwtl
bound
sub
mov
push
adcl
sub
add
jecxz
add
andb
test
pop
ret
loope
jle
sti
push
mov
mov
rep
xchg
sub
push
jnp
mov
jae
inc
jb
jecxz
add
push
mov
mov
cltd
jle
test
and
pop
negl
lods
mov
es
sub
pop
insl
xor
pop
decl
cmc
pop
repz
push
pusha
jg
stc
mov
sbb
mov
sub
jo
jl
xor
xchg
sti
jb
cmp
mov
js
jl
jnp
imul
fidivl
in
sub
fwait
int3
rcrb
mov
dec
pop
stos
cld
jecxz
mov
jb
mov
jno
out
ret
push
inc
dec
cmp
sbbl
mov
and
daa
jmp
repnz
ret
push
and
sahf
push
add
mov
mov
add
cmp
iret
push
jb
fbld
xor
jnp
cmp
iret
insb
icebp
aam
fldt
jmp
mov
push
push
jno
xor
pop
lods
xor
mov
cmp
scas
ja
sti
rorb
push
adc
mov
mov
rcll
pop
cmpsl
sahf
pop
xlat
into
mov
cltd
jl
ret
sti
cmp
sub
pop
sti
jns
js
js
fstps
mov
mov
add
in
cmpsb
fidivrl
leave
xchg
inc
push
lret
pop
aas
mov
cwtl
xor
insl
into
xorl
inc
popa
hlt
jmp
fdivrl
and
sti
and
data16
outsl
ss
pop
in
aad
push
and
jns
sbb
cmp
inc
fsubp
out
pop
ret
adc
xchg
leave
movsb
add
in
test
cmp
test
notb
fisubs
lret
mov
add
roll
push
pop
inc
data16
inc
mov
add
loopne
mov
cld
mov
push
mov
dec
jnp
push
pop
outsl
les
test
and
test
mov
test
sbb
and
je
push
rep
push
xor
fisubrs
sub
xchg
xor
std
cmpsb
xchg
in
out
jns
jp
fistpl
jno
faddl
xor
pop
jge
sbb
cmp
fidivs
fisubrs
ja
test
sub
sub
and
out
cmp
jbe
in
pusha
je
mov
or
mov
test
lahf
and
jle
sbb
lea
mov
ret
fwait
subl
es
jne
xchg
scas
xor
dec
jle
gs
dec
mull
push
jge
pop
mov
insb
fcmovb
out
icebp
sbb
sbb
test
popa
fsubs
pop
sti
inc
int3
out
insb
cmp
lods
cwtl
stc
data16
mov
jl
or
mov
fld
sti
out
dec
add
adc
xor
add
mov
cld
jo
in
sbb
adc
test
push
cmp
mov
movsl
in
dec
or
mov
iret
outsb
bound
inc
lret
xchg
std
xchg
dec
inc
fisubs
lcall
adc
push
dec
aad
mov
and
stc
fs
mov
cmp
inc
shrl
push
pop
pushf
push
imul
sub
aad
mov
pop
dec
stc
sub
imul
jmp
out
jae
or
sti
inc
xchg
lea
outsl
mov
fdivrs
out
loopne
and
inc
ja
xchg
leave
es
js
mov
cmpsb
xlat
sbb
jno
in
sub
in
iret
or
cli
pop
stos
xor
imul
jp
pop
and
or
inc
mov
mov
pcmpgtw
sub
sbb
lret
dec
popa
xchg
dec
cmp
test
loop
jge
jnp
cmpsb
popf
add
pmullw
push
adc
clc
mov
push
out
sarl
xchg
rcll
mov
repnz
repnz
pop
dec
push
mov
inc
jge
lods
stc
lea
outsl
sarl
jno
mov
cmpsb
roll
clc
or
test
rcll
or
push
loop
mov
sub
and
or
mov
push
dec
lret
pop
ljmp
xchg
movb
lcall
shll
xchg
fcoml
add
addb
sub
or
daa
movsb
dec
cmp
fcoml
je
adc
in
jg
lds
cmp
ret
imul
xorl
aas
mov
cmp
mov
pop
xchg
mov
mov
pop
test
jo
add
pop
lods
popf
lcall
imul
es
mov
and
daa
divb
out
push
jb
out
push
sub
push
xchg
push
rcrb
jp
dec
insb
dec
rorl
dec
dec
and
push
mov
leave
mov
loope
addl
dec
lods
arpl
filds
rclb
inc
sti
decl
mov
inc
aad
wrmsr
adc
or
xchg
jp
or
jo
mov
mov
jno
jecxz
lret
mov
sub
jb
xchg
jo
mov
ljmp
sahf
je
pop
jl
fs
bound
adc
xchg
int
xchg
mov
stos
adc
or
mov
test
movsl
and
call
cmc
xor
ja
jmp
rclb
sub
das
arpl
cmp
out
lcall
add
xchg
adc
test
jnp
int3
mov
loopne
jno
popf
sbb
loopne
xor
pushf
or
cmp
scas
mov
adc
aad
adc
jb
popa
hlt
jecxz
jl
or
xlat
push
sbb
call
ss
out
fsts
push
inc
jae
popf
or
or
shll
adc
test
int
push
adc
stos
jne
nop
imul
mov
xor
enter
cmp
mov
cmp
faddl
pop
pop
mov
add
lret
pop
or
mov
inc
mov
inc
mov
xchg
push
xchg
mov
xlat
ret
push
xchg
sbb
xor
aam
lods
ret
xchg
sub
dec
scas
mov
test
sub
xchg
mov
mov
aad
fnop
jns
push
add
pop
mov
inc
cs
fwait
je
jo
and
jmp
adc
dec
dec
out
sbb
jecxz
cmp
sub
ja
jecxz
je
jbe
xor
es
pusha
lcall
or
rolb
inc
enter
ja
testl
pusha
mov
mov
mov
test
dec
sub
shrl
xor
xor
pop
pop
cmp
adcl
pusha
out
insl
xchg
aas
in
sub
pop
popf
rcll
mov
lahf
lods
nop
add
addr16
cli
aas
jo
mov
sbb
pop
movsb
and
dec
push
add
sbb
in
and
jbe
adc
in
sub
pushf
xor
lea
or
xor
mov
jno
xor
mov
mov
cltd
mov
lret
lods
xor
mov
push
sbb
hlt
mov
mov
xlat
ja
loope
or
fiadds
lcall
mov
sub
loope
lea
dec
insb
movsl
cli
inc
mov
mov
sbb
lods
lahf
xor
xor
dec
jno
xchg
std
leave
fildll
inc
cs
js
int
pop
pop
pusha
mov
fstp
mov
les
push
test
cmp
or
pushl
jno
jo
push
xor
lea
cmp
or
mov
repnz
lock
mov
dec
xor
mov
mov
adc
and
and
int
pop
jge
add
adcb
mov
push
lock
scas
and
aas
loop
mov
add
push
test
das
and
outsb
sbbb
add
inc
dec
xor
gs
out
loope
jp
pop
rep
sahf
icebp
loop
in
dec
mov
push
dec
mov
stos
popa
adc
or
in
adc
jae
cltd
aam
rolb
mov
or
outsl
jb
aad
or
mov
cmp
dec
mov
and
mov
cltd
mov
xchg
dec
push
adcl
out
mov
sar
mov
int
into
push
data16
mov
and
test
cmp
sti
out
push
cltd
mov
dec
pusha
sbb
je
dec
ds
out
mov
sub
aaa
adc
daa
jnp
int
testb
mov
test
mov
cmpsl
lock
pushf
pop
fs
outsb
shr
nop
out
dec
scas
cmp
addr16
mov
sub
and
rclb
in
add
xchg
sahf
pop
loopne
sbb
arpl
je
ja
and
jnp
push
adc
fmuls
adc
mov
rclb
mov
sbb
jns
mov
in
pop
aad
sub
adc
ret
aad
repz
cmc
push
mov
les
iret
lret
inc
into
pushf
dec
cwtl
fcoml
ds
or
dec
repnz
xorb
aam
pop
andb
outsl
pop
cltd
cmpsb
in
push
scas
fadd
adc
mov
lods
pop
fwait
into
push
in
cmpsl
sub
loopne
aam
sbbl
jno
pop
mov
xchg
mov
add
add
mov
sti
sbb
sbb
lea
leave
imulb
jp
mov
in
in
dec
stc
sub
sub
out
pop
sub
xor
mov
push
mov
mov
pop
sub
push
mov
mov
mov
cld
sbb
or
outsl
inc
sub
rcll
push
add
out
cmp
mov
xor
xchg
mov
data16
fstpl
stc
stos
xor
mov
in
sbb
jg
xor
arpl
jns
jle
aad
rcll
xchg
std
mov
push
es
iret
ss
clc
cld
jmp
dec
dec
mov
add
adc
cltd
dec
scas
inc
nop
push
xor
int
shrl
xchg
pop
call
add
sti
rcrb
imul
mov
push
test
cmp
jg
cmpsb
pop
ret
sbbb
push
int
cmpl
addl
rcr
lret
fs
js
dec
ret
pop
pop
cli
dec
mov
or
or
mov
sbb
int3
and
sub
shlb
sbb
cmp
lock
mov
cmp
xchg
cmpsb
sarl
inc
call
push
and
xchg
insl
inc
mov
and
cmp
mov
mov
dec
xor
andb
sub
outsl
ljmp
enter
cmc
lods
push
ret
pop
mov
ja
clc
imull
jns
rcll
imul
jbe
push
pop
sbb
insb
in
scas
jmp
sub
pop
push
xor
fmul
xor
sbb
mov
xchg
mov
sub
sub
push
cmpb
or
cmpsl
aaa
mov
and
in
mov
rcrb
addr16
push
lock
push
sub
fs
loop
lock
xchg
sbbb
mov
bound
push
push
or
sarb
stos
xor
and
xlat
test
cmp
xor
mov
fsub
or
lret
jge
cmp
lcall
dec
add
xchg
xor
fstl
sub
or
fcompl
xchg
arpl
xchg
and
push
std
aas
or
inc
icebp
test
mov
cmp
cmpsb
fs
fists
xchg
mov
daa
cmp
cmp
mov
mov
or
roll
and
int3
push
das
adc
cmc
shr
mov
repz
rolb
int3
scas
imul
in
inc
push
and
push
cwtl
inc
test
dec
loop
xchg
cmp
in
dec
rcll
lock
int
xor
pusha
or
aam
dec
pop
repnz
leave
pop
repz
sarl
sub
push
sbb
pop
jo
mov
sbbl
adc
jb
je
cmp
add
push
lock
icebp
push
je
lea
adc
fldenv
adc
loopne
mov
jne
mov
jno
test
fbstp
mov
mov
cltd
aad
push
mov
xchg
fstpl
or
sub
stc
and
xchg
inc
pop
lcall
mov
inc
mov
inc
fwait
ss
shrd
push
inc
xlat
sub
sub
mov
adc
fs
dec
mov
add
or
cwtl
cli
or
xchg
fwait
out
lods
and
std
mov
and
movb
arpl
inc
fnstenv
addr16
iret
jecxz
mov
lea
cwtl
and
mov
mov
orb
mov
pop
cs
shll
push
pusha
pusha
pop
sub
ljmp
push
mov
sbb
sbb
sbb
mov
cs
sub
cli
xor
inc
add
fsub
cwtl
xor
xchg
mov
jecxz
jns
jmp
mov
in
pop
xchg
nop
mov
bnd
push
mov
aas
in
inc
push
lods
ret
dec
clc
jmp
sbb
mov
shll
xor
sbb
lret
sti
xchg
and
mov
test
and
jmp
ljmp
mov
push
xchg
fstpt
mov
jne
or
add
inc
jl
stos
sarl
sub
sbb
stc
insb
inc
dec
enter
and
xor
into
std
push
push
ds
add
cmp
dec
cmp
stos
shll
das
mull
xor
or
rcrb
lea
cmp
popa
lds
xchg
sub
les
icebp
inc
mov
or
sbb
fmull
add
in
and
std
popa
popa
fwait
add
xchg
and
out
repnz
jnp
inc
test
jecxz
mov
or
lcall
std
addr16
ret
xor
cmp
lcall
mov
loope
aaa
in
or
adc
subb
idivl
sbb
push
cmpl
idivb
jg
lcall
scas
mov
sbbl
pushf
sbb
add
fidivl
cmpsb
dec
cmp
cmp
movsl
movsl
loope
sbb
jl
mov
cmc
ja
or
push
pop
std
and
dec
inc
adc
repz
adc
pusha
dec
sub
and
popf
int3
into
add
scas
jecxz
nop
test
ljmp
scas
daa
inc
push
inc
pop
pop
push
add
pop
mov
or
mov
push
mov
xchg
push
lret
cltd
pop
lea
shll
loop
push
push
xchg
je
mov
cltd
ds
mov
add
rolb
and
rolb
pusha
xchg
shrl
pusha
adc
xchg
inc
xchg
ljmp
mov
add
cmp
cmpsl
hlt
loop
lcall
jne
ja,pt
icebp
in
mov
js
decb
arpl
push
or
and
mov
mov
xchg
daa
in
scas
sub
jp
adc
cmp
lahf
mov
test
data16
and
xchg
imul
mov
test
cli
or
ret
gs
pop
xor
cmp
lea
les
mov
jb
out
inc
add
in
iret
or
subb
mov
dec
xchg
movsl
pop
sbb
fistl
jecxz
jg
sub
in
jge
fucom
test
or
push
sbb
inc
movsl
inc
sbb
xchg
lret
icebp
pop
lods
and
or
hlt
mov
in
or
cld
xor
mov
mov
inc
mov
fmulp
in
mov
mov
sarl
and
and
inc
jne
dec
mov
mov
inc
or
test
movsb
stc
out
xor
push
cmc
mov
ud1
outsb
sub
mov
ljmp
cmc
jmp
mov
and
es
scas
shll
je
push
and
xchg
mov
enter
pop
or
push
scas
popa
mov
fucomi
inc
ds
rolb
jmp
cmp
iret
mov
jo
jmp
scas
fwait
pop
dec
xlat
out
pop
movsb
test
cmpsl
cs
add
in
scas
push
movsb
push
data16
outsb
or
dec
mov
test
in
cltd
xchg
xor
mov
lcall
pop
rclb
adc
insl
and
cmc
pop
pop
sub
fcomps
nop
fdivs
in
jmp
test
adcl
call
ja
mov
mov
inc
inc
xchg
insb
adc
clc
fnstcw
test
xlat
lea
in
mov
into
lret
xchg
xor
outsl
fwait
jb
ret
pop
add
mov
jae
sub
out
pop
adc
insl
ret
andnps
adc
into
xchg
sbb
std
mov
fstl
add
push
sbb
movsb
icebp
aas
sub
sub
in
push
and
xchg
popl
sub
mov
inc
xor
xchg
mov
cmc
add
push
pop
aam
sub
insl
rclb
mov
nop
or
cwtl
mov
sub
xor
rcll
mov
pop
sub
int3
mov
lret
mov
out
sahf
xchg
jae
pusha
pop
pushf
pop
xchg
subb
loopne
call
testb
fisubl
loopne
std
mov
pushf
xchg
add
dec
jecxz
xor
inc
mov
fiadds
loopne
jno
dec
jno
test
push
add
push
xchg
test
pop
icebp
push
xor
xor
jl
out
cmp
inc
jge
xor
pop
pop
ficoms
add
into
cmp
lods
fsubrs
divb
inc
adc
lds
in
loopne
hlt
sub
subl
rcl
xor
mov
add
or
ja
popa
gs
ljmp
out
dec
mov
push
and
lahf
adc
lret
nop
aad
and
cmp
fldt
ret
xor
pop
push
insl
or
xchg
int3
enter
mov
jne
sbb
push
pusha
clc
mov
adc
mov
fisubs
js
xchg
mov
rclb
or
sbb
xchg
mov
sbb
mov
ljmp
outsl
pushf
ja
cmp
push
mov
sbb
idivl
movd
xor
pop
adc
mov
addb
ficoms
cs
in
and
jnp
dec
enter
or
push
into
dec
hlt
mov
push
loopne
sbb
icebp
addb
int3
iret
mov
sub
mov
adc
pop
test
push
and
xchg
mov
ja
sbb
in
adc
ss
cltd
adc
jmp
push
bound
jecxz
xor
out
mov
mov
or
push
fisttps
jns
xlat
push
rorl
pusha
xchg
push
push
pop
jmp
adc
cmpsl
add
mov
push
ljmp
gs
sahf
jns
insb
xchg
sbb
mov
xor
xchg
fdivrs
movsl
cmp
sahf
mov
or
stos
sbb
fldl
adcl
jle
jecxz
lds
adc
push
mov
mov
in
fwait
nop
jnp
inc
adc
pop
jge
xchg
mov
jae
mov
aad
and
xor
or
pop
pop
ret
ss
lea
rorb
loopne
jge
stc
sbb
imul
xchg
lods
js
sahf
aaa
inc
fwait
ds
test
popa
mov
and
sbb
xchg
mov
jno
rep
pop
jge
insl
mov
pop
push
enter
push
test
mov
icebp
inc
aaa
xchg
lock
or
sbb
pop
dec
sub
aam
fildl
jno
mov
cld
data16
add
aas
adc
sbb
dec
rcrl
sahf
or
add
sub
je
cwtl
inc
pop
call
daa
ja
lock
add
mov
jb
push
pop
push
rcrl
xchg
incl
xor
loopne
adc
adc
daa
leave
jg
or
push
mov
jo
adc
mov
adc
cli
or
pop
pop
sub
repnz
inc
xor
push
cli
orb
xor
dec
sbb
popf
inc
and
xchg
push
jmp
add
test
mov
mov
daa
mov
icebp
int
jg
sbb
sbb
insb
arpl
dec
jno
pop
iret
or
sub
test
enter
push
push
dec
scas
add
pop
jg
xchg
leave
nop
push
or
cmp
pop
or
sbb
mov
in
and
stc
test
pop
das
mov
mov
mov
popf
sbb
cmp
pop
movsl
jnp
push
out
xchg
mov
inc
daa
xchg
loop
ret
and
xchg
jae
hlt
push
movsl
stc
dec
xor
sahf
push
push
inc
adc
jl
jo
adc
jo
or
nop
sbb
push
lods
mov
inc
sub
cwtl
data16
xor
fnstenv
out
cmpl
xchg
sub
add
ljmp
pop
roll
repz
ficompl
mov
fstps
clc
jge
jb
cmp
roll
cmpb
cmp
fwait
dec
inc
addr16
ret
sub
xor
int
or
dec
add
xorl
fldt
adc
inc
mov
cmp
in
fucom
pushf
mov
inc
push
sub
ret
mov
ja
push
pop
std
dec
in
jl
cmp
andl
push
add
adc
repz
cmp
xchg
xor
aas
or
pop
jo
les
in
sbb
pop
cwtl
and
in
imul
sbb
cwtl
cmp
mov
pop
jns
incl
jmp
js
imul
add
call
mov
dec
mov
cmp
outsl
mov
test
xor
jae
jmp
jl
pushl
ja
xor
add
cltd
adc
cltd
adc
clc
cs
mov
in
popa
loopne
ror
not
cmp
data16
nop
scas
dec
dec
cmc
adc
inc
sbb
loope,pt
addr16
int3
fdivrl
xchg
push
int
movsb
out
sti
xchg
mov
pop
pop
imul
or
push
or
add
je
jge
pop
in
sbb
clc
ret
std
jno
adc
dec
xchg
repz
aam
rep
xchg
jo
imul
loopne
or
icebp
sbb
addb
cmp
andb
push
dec
out
add
out
pop
sbb
pop
xchg
jg
cmp
insl
adc
and
add
or
in
repz
push
cwtl
test
xchg
addl
pop
lea
inc
mov
sub
fs
sbb
enter
fwait
ds
js
insb
cmpsl
mov
cmp
arpl
add
mov
xor
iret
and
test
dec
popf
popa
jno
addr16
inc
outsb
lret
loop
rcr
rcrl
sbb
loopne
arpl
jle
mov
dec
aas
mov
jg
or
pop
push
cli
das
ljmp
ds
mov
mov
mov
in
daa
jmp
cmc
or
stc
popf
and
xchg
arpl
jge
std
jmp
lcall
mov
int
xchg
in
addr16
arpl
ss
mov
adc
cld
inc
add
fistpl
sub
cmp
leave
mov
dec
mov
xchg
js
add
popf
jmp
inc
dec
out
inc
les
filds
lods
leave
ficompl
pop
jl
imul
in
cli
mov
xchg
xchg
movb
cli
shrb
gs
test
loope
shl
ror
and
mov
hlt
ret
sbb
int
mov
jno
cli
jno
shr
imul
jge
lret
mov
out
fwait
lock
adc
mov
mov
int3
adc
pop
jmp
mov
std
dec
cs
stos
add
mov
xchg
xorl
daa
push
pushw
cmp
rcr
sarl
rcrl
pop
repnz
cltd
imul
outsl
imul
test
lods
push
sbb
push
sarl
repz
push
insb
jmp
sbb
jnp
out
mov
jb
loope
inc
mov
jne
cmc
in
adc
hlt
loop
mov
outsb
pusha
dec
jecxz
inc
xlat
dec
loop
aas
orl
sub
into
in
fcomip
and
or
pop
adc
dec
mov
test
dec
dec
popa
aad
cmpsl
ds
idivb
push
pop
mov
jle
cmpsb
jmp
fdiv
arpl
ret
inc
cmpsl
fdivrs
insb
fadds
mov
pushf
sub
ss
and
cmp
repz
inc
out
xor
mov
dec
or
inc
and
push
add
dec
repnz
sub
sbb
bound
sbb
test
imul
pop
xlat
push
cmpsl
cmp
inc
fcomp
jns
xlat
push
jmp
pushf
lcall
stc
test
push
xor
imul
and
mov
xchg
cmc
shlb
push
jno
pop
test
pop
pop
out
mov
inc
lret
inc
adc
and
clc
test
mov
jecxz
int
and
pop
outsb
imul
mov
pop
scas
mov
insb
pop
xchg
sti
repz
cmpl
xchg
dec
jmp
mov
inc
or
jne
xor
or
rcrl
cltd
push
xchg
mov
lret
and
pop
pop
lods
pop
add
sbb
or
loope
lcall
xor
div
scas
lret
inc
clc
repz
push
pop
ficomps
hlt
pop
push
mov
or
adc
out
dec
mov
dec
loope
aad
sbb
outsb
jl
mov
cmpsl
jnp
pop
jne
mov
js
std
les
add
jge
stos
das
pop
std
out
sahf
adc
sub
mov
or
and
pop
xchg
sbb
and
pop
add
movsb
popf
mov
lock
ljmp
lret
xchg
sbb
mov
xor
gs
leave
imul
ror
sub
in
jecxz
xor
call
sub
lcall
mov
pop
xorl
sarl
loope
pop
clc
mov
hlt
sbb
dec
out
dec
jecxz
xor
push
inc
out
pop
mov
or
xchg
sbb
push
ja
or
mov
add
add
add
sbb
fidivl
fwait
sub
into
daa
sbb
or
xchg
das
pop
adc
sbb
leave
push
adc
in
mov
jo
cli
dec
dec
push
enter
iret
fucomip
jbe
fildl
mov
jae
jmp
lret
movsb
repnz
call
push
mov
adcb
and
enter
push
dec
inc
xchg
mov
rcrl
enter
nop
mov
arpl
imul
cmp
pushf
imul
and
outsb
test
xchg
pop
imul
or
jmp
insl
rcrl
jmp
mov
and
adc
add
sub
xchg
insb
jb
add
out
sbb
ds
in
stos
lcall
mov
insb
sbb
fldl2t
ficoml
fwait
stos
stc
loopne
stc
sbb
jg
arpl
push
mov
sub
subl
jnp
frstor
add
rcrb
push
imul
out
ret
mov
xchg
or
loope
xor
out
xor
stos
pop
or
stc
xchg
into
sbbl
xlat
pop
jo
mov
cld
jle
repnz
das
call
jns
sub
frstpm(287
jae
pop
mov
cmc
repz
mov
enter
call
les
add
cmp
pop
stc
fdivrs
aaa
repz
aas
mov
mov
xchg
rolb
xchg
ret
cs
xlat
jbe
fisubrl
push
enter
in
and
clc
iret
sub
jbe
clc
cmp
adc
cld
push
cmp
out
jl
inc
daa
mov
andb
push
dec
jecxz
push
outsl
int3
test
cmp
jne
mov
clc
addr16
es
enter
pop
mov
fstl
enter
es
cmp
pop
mov
inc
jne
shrl
fs
popa
inc
jl
fists
shr
not
sub
call
mov
ss
inc
pop
add
adc
sbb
outsl
pop
jp
dec
pop
and
lods
xchg
fstl
mov
adc
mov
jmp
push
or
sub
and
push
insb
jmp
xchg
push
and
or
sbb
xlat
test
add
and
cmpsl
push
ret
out
test
sbb
popa
xlat
test
or
je
cs
mov
pop
xchg
lock
dec
mov
mov
mov
sub
call
jae
mov
cwtl
xchg
cmc
or
cltd
pusha
sarb
jle
push
jmp
lock
in
lcall
lea
movsb
in
ds
repnz
mov
mov
in
aad
cmp
pop
sbb
push
cs
or
shl
jge
out
bswap
mov
add
push
insb
scas
push
scas
daa
inc
popf
dec
dec
mov
aam
add
sarb
hlt
jne
add
scas
or
fwait
xchg
mov
inc
inc
test
cmp
pop
mov
out
push
push
mov
cmp
push
jbe
mov
shl
inc
punpcklwd
outsl
inc
pop
pcmpgtw
dec
and
push
sarb
cld
cltd
addr16
inc
sbb
sbb
inc
mov
into
fwait
sub
call
or
test
xchg
inc
adc
sub
and
adcb
rorb
inc
xor
lods
outsb
addr16
add
add
cmp
dec
lea
out
pop
cmp
loope
xor
dec
cmpsb
add
lods
sub
popa
mov
leave
sbb
mov
in
sub
movsl
dec
les
pop
insl
jb
jl
cmpsl
test
frstor
cmc
dec
inc
xchg
out
aam
or
dec
jle
sbb
jmp
fsubr
mov
aaa
mov
add
inc
sub
stos
ljmp
sahf
fwait
jns
stc
imul
mov
adc
lcall
cwtl
cmp
call
sbb
fsubrp
or
jmp
cmp
dec
adc
jle
push
rorb
sub
push
and
lcall
fs
hlt
sbb
imul
dec
inc
test
cmpsb
jno
jge
shl
fisubrl
outsl
and
stos
mov
jno
mov
out
dec
enter
pop
in
dec
jg
ss
stos
xchg
fs
dec
lods
hlt
popa
sub
dec
hlt
jg
rcrl
mov
adc
in
sbb
cmp
jmp
jne
lcall
jns
push
dec
mov
movsb
lret
mov
push
sub
imul
stc
les
and
fsubrs
xchg
sub
aas
fnstcw
cmc
jg
lret
push
jmp
adc
nop
lea
jno
cmp
xor
leave
arpl
roll
xor
add
scas
sbb
pop
push
les
stos
fldpi
incl
divb
imul
cs
sbb
repz
jnp,pn
or
loope
xor
xor
or
gs
out
or
fistpll
pop
ror
mov
into
sub
and
adc
mov
dec
sbb
sub
adc
cmp
pop
dec
mov
jl
ljmp
jbe
add
repnz
adc
cld
or
mov
push
push
sbb
cmpb
adc
fxtract
fwait
or
jb
nop
scas
or
clc
lds
xchg
fcomp
stos
dec
test
lods
call
push
xlat
loopne
mov
pop
add
test
adc
push
ret
shll
movsl
adc
mov
mov
xchg
psrlw
lcall
fisubl
jno
cmp
popa
clc
test
mov
xlat
mov
in
pop
xchg
popa
pusha
add
sahf
mov
push
push
lcall
push
sub
jmp
jge
xchg
xor
mov
icebp
orl
jns
aas
andl
repnz
pop
loope
dec
out
mov
decb
insl
jl
sub
test
jns
arpl
push
mov
xor
push
mov
test
xchg
pop
mov
out
pop
sub
addr16
pop
scas
mov
add
adcb
rclb
sti
mov
push
pop
add
push
pop
sbb
ds
clc
sub
stos
or
movsl
fistl
or
cli
lock
into
mov
lret
clc
scas
repz
inc
mov
sub
jo
fs
movsb
sbb
mov
pop
lock
orl
and
in
jecxz
test
and
stos
lock
shl
mov
xlat
add
pop
movsb
sbb
inc
dec
jg
daa
rorl
push
insl
jmp
xchg
jg
icebp
xor
jge
or
sbb
or
add
add
loop
lds
daa
iret
rcr
push
mov
mov
cmp
mov
jmp
adc
jmp
mov
push
push
js
loop
imull
das
outsb
xchg
mov
sarl
add
test
xor
insb
jp
add
xor
pop
sbb
stos
ljmp
mov
pop
mov
mov
xchg
movsb
add
call
sahf
or
cmp
push
sub
lea
xor
and
dec
inc
out
mov
clc
add
in
aam
inc
test
hlt
shll
divl
stos
cmp
imul
pop
jp
lcall
adc
inc
xlat
jo
daa
inc
push
push
int
pop
fs
test
pop
jge
ss
popa
adc
pop
mov
cmp
push
adc
mov
hlt
dec
rcr
aas
pop
jo
adc
pushl
aam
sbb
aam
cli
iret
movsl
jp
roll
test
inc
dec
mov
in
pusha
int3
and
outsb
rcrl
aaa
cltd
lret
lcall
nop
xor
mov
inc
pop
in
insl
lods
mov
imul
jle
mov
outsl
cld
xchg
mov
inc
jmp
aad
jnp
cmp
test
sub
lcall
inc
mov
or
stc
sbb
mov
mov
nop
xchg
mov
xor
popa
dec
inc
fwait
mov
jl
scas
and
xchg
pop
loop
jmp
dec
mov
jmp
daa
xor
stos
jb
leave
mov
fxch
mov
aaa
push
mov
mov
in
xchg
enter
wrmsr
mov
cmp
mov
bound
jp
mov
jnp
dec
xor
scas
cld
add
adc
dec
inc
pop
jno
shr
mov
stos
test
dec
pop
or
es
add
arpl
gs
mov
das
fldl
das
mov
push
mov
lock
push
imul
mov
pop
push
es
ror
movsl
xchg
and
xchg
adcl
ja
adcl
lock
pop
adc
mov
pop
aam
mov
mov
cmpsb
nop
lods
scas
into
inc
cmc
outsl
add
aaa
rcrl
dec
push
out
out
mov
icebp
sahf
xchg
sbb
aas
sbb
bound
dec
addl
int
cwtl
xchg
nop
cmpsl
sbb
scas
fiaddl
sub
adc
out
push
pop
fdivrl
jns
fs
imul
and
loop
insb
nop
mov
clc
testl
dec
push
jmp
add
jb
jbe
dec
addr16
out
jle
jl
call
adc
mov
xchg
sub
fs
mov
iret
cli
xlat
insl
mov
adc
mov
or
arpl
lret
xlat
je
mov
pop
xchg
jecxz
pop
sbb
call
mov
sahf
xchg
ret
fisubrl
sub
mov
arpl
push
mov
jae
push
push
sub
loope
mov
mov
jle
xchg
jge
jg
sub
cli
cmc
dec
imul
or
pop
aas
push
xlat
test
outsb
leave
ja
stos
jb
in
sahf
and
lods
leave
push
movsl
fs
add
push
movsb
mov
adc
mov
mov
xlat
mov
ficomps
nop
pushf
mov
push
pop
cmpsb
push
sub
in
les
lea
cmp
popf
out
mov
push
mov
sub
lret
icebp
idivb
push
push
add
pop
popf
adc
iret
mov
movsl
lods
dec
repz
fcomip
inc
test
fiaddl
mov
test
push
lahf
jb
bound
inc
or
rorl
pop
xchg
ret
adc
xlat
jecxz
push
or
adc
enter
into
cli
outsb
cwtl
or
xchg
imul
jns
xchg
sbbl
xor
push
sahf
ds
mov
loopne
sbb
negb
sbb
in
pop
dec
push
fsubl
mov
fbld
sbb
mov
jns
ljmp
loopne
xadd
ljmp
mov
or
in
push
jecxz
push
pop
sub
popl
or
inc
out
sti
sbb
jbe
push
adc
es
and
into
mov
mov
and
pop
cmp
or
xor
dec
in
push
cmp
test
jp
fldcw
xchg
mov
das
sbb
loope
or
mov
pop
jmp
ss
push
movsl
push
jl
or
daa
imul
jge
lods
out
aam
imul
mov
lea
scas
orl
stc
shll
out
and
push
sub
stos
push
fsubl
adc
out
mov
and
xchg
lret
and
xlat
jo
mov
out
fwait
int
mov
je
push
stos
mov
rol
into
lods
lcall
sarl
adc
jecxz
dec
inc
mov
inc
outsl
dec
push
pop
jno
mov
fs
fwait
lock
sub
adc
mov
sbb
sbb
mov
adc
fstl
sub
fstl
xor
xchg
jge
hlt
jmp
clc
mov
jno
adc
jle
xchg
sahf
in
mov
sbb
dec
mov
repnz
or
test
lret
ja
movsb
jmp
sarl
leave
add
shlb
mov
mov
popf
sub
shrb
push
dec
movsb
fdiv
popf
pusha
jp
xor
pop
push
xor
shl
in
dec
cmp
sub
fcmove
jg
daa
jne
ljmp
push
push
ret
repz
push
add
scas
and
sbb
call
outsl
sub
ja
mov
and
cmp
sub
enter
mov
or
mov
mov
mov
mov
adc
enter
test
push
ljmp
cmc
scas
jg
lcall
ds
sub
popa
jge
xchg
cmp
cmc
aaa
fwait
cmpl
mov
pop
xchg
lods
xchg
push
mov
sub
push
or
leave
cmp
cmp
test
rcrl
pop
pop
lods
rcr
cmpsl
mov
mov
cmpsb
mov
and
dec
jbe
insb
mov
in
xor
stos
arpl
idivl
lret
cld
sbb
inc
pop
mov
in
dec
les
call
mov
and
pop
inc
add
out
xor
jecxz
mov
add
sub
add
ss
inc
inc
push
inc
addr16
decl
adcb
pop
cmpxchg
xchg
push
notl
xchg
and
sub
sarb
add
sarl
mov
and
cmp
lcall
leave
subl
lret
nop
ds
arpl
test
push
sub
leave
inc
dec
ss
sbb
mov
xor
aaa
push
sub
setl
int
sub
fistl
in
aad
cltd
sub
test
fwait
jne
push
mov
cld
add
ret
cmpsl
xlat
push
mov
arpl
test
push
sub
fsubs
pop
mov
cltd
lds
adc
sub
inc
jmp
sbb
mov
jle
push
divl
mov
or
pusha
push
sub
add
or
and
decb
and
push
call
and
push
inc
add
adcb
jnp
sub
push
mov
mov
xchg
sbb
lods
imul
sbb
and
cmc
lret
inc
push
aad
xor
xor
sub
dec
into
pop
lds
and
mov
rcrl
mov
mov
mov
fisttpll
jns
mov
dec
icebp
scas
inc
cmp
add
bound
sub
lret
int3
andb
jne
roll
or
lods
stos
jge
or
mov
cmp
adc
cltd
ja
cmp
ss
mov
lock
stc
pop
mov
scas
mov
adc
jae
xor
dec
subl
shll
push
pop
xchg
pop
fildl
add
mov
sbb
pop
push
cli
mov
push
cs
lods
imul
pop
movl
imul
or
sbbl
adc
inc
push
rorb
adc
sbb
sahf
add
pop
scas
sub
pop
jno
or
fs
out
pushf
sarb
lahf
xchg
pusha
xchg
test
and
test
sar
mov
shlb
dec
cmc
pop
insb
stos
aam
sub
clc
xlat
push
and
imul
icebp
popa
pop
xchg
in
pop
insb
sbb
int3
icebp
test
mov
xchg
inc
subl
hlt
nop
lods
mov
push
jp
push
push
adc
test
push
mov
xchg
mov
mov
int
iret
pop
out
jns
orl
bound
push
mov
and
jae
sub
adc
stc
dec
sbbl
hlt
add
adcb
push
add
loop
lcall
icebp
jo
cmp
cmpsl
inc
std
scas
xchg
repnz
mov
dec
aad
dec
aad
push
inc
xchg
enter
jp
pop
or
test
bound
lahf
int3
adc
cmp
xchg
and
sub
lret
xlat
dec
mov
movsl
stos
jnp
xchg
icebp
xor
mov
mov
xor
mov
arpl
jo
lea
inc
jg
sbb
cmp
pop
cs
or
stos
stos
movsl
pop
sub
in
and
xor
and
cmp
lahf
mov
movb
cwtl
add
roll
hlt
adc
mov
out
test
mov
subb
jns
sub
ret
arpl
pop
lods
jl
adc
dec
lret
jno
lcall
fcmovu
cmpsl
lret
mov
negb
push
jmp
mov
test
repz
pop
popa
mov
adc
pop
enter
adc
or
fdivs
pop
add
outsb
test
movsl
dec
pop
stos
test
push
fimull
dec
movsb
cli
mov
jp
scas
mov
mov
rclb
dec
push
xor
mov
pop
shlb
cmp
cmp
movsb
ds
mull
out
aaa
outsb
xor
xor
test
dec
and
fsubrs
es
andl
fcom
and
inc
mov
in
mov
xlat
dec
mov
push
daa
fadds
arpl
xchg
or
adc
push
lcall
fsubrl
xor
pop
mov
jbe
jle
mov
js
test
out
addr16
lret
mov
push
push
pop
loope
cmp
andb
inc
jge
dec
std
mov
cmc
xchg
lret
and
pop
imul
jge
or
xchg
popa
iret
fs
arpl
mov
push
mov
jne
dec
pop
sbb
insl
pop
xchg
jp
fists
fistpll
fldenv
mov
jl
popa
lods
dec
cli
xor
and
ret
pusha
lahf
test
lea
push
in
test
push
xor
cmp
fisttps
pop
insl
add
imul
sahf
mov
arpl
jl
push
mov
add
dec
lods
mov
aad
inc
cli
into
gs
xor
lea
inc
fnstcw
mov
daa
fsubrs
aad
lret
inc
xor
xchg
mov
test
cmp
outsb
add
push
jns
lods
stc
xchg
test
hlt
push
jmp
fmul
pop
lods
sahf
push
shrd
ss
mov
scas
movsb
in
push
lret
fmuls
mov
xchg
jo
mov
cli
mov
loope
sti
mov
das
clc
clc
or
shl
dec
jbe
mov
push
sub
mov
mov
mov
xchg
mov
mov
pop
jb
filds
dec
mov
sbb
xorb
loope
enter
sub
leave
ss
inc
sub
cmpb
pop
clc
mov
aaa
and
lods
cmpb
mov
push
mov
jns
mov
or
mov
mov
mov
xor
or
icebp
dec
pop
aad
loop
loop
loopne
push
or
xor
sub
add
ss
aam
ja
fwait
daa
push
push
rolb
dec
cld
not
mov
jno
sub
xchg
imul
mov
lea
add
mov
insb
xchg
fcomp
in
or
lods
add
jae
adc
inc
adc
sbb
push
and
sub
pop
mov
aam
sub
addr16
inc
inc
lods
cmc
pusha
mov
popl
xlat
push
adc
dec
daa
stc
movsl
ficoms
or
stos
or
inc
mov
je
dec
rorb
insb
fistps
xchg
inc
push
fs
arpl
mov
add
xlat
cs
add
push
mov
sbb
sarb
repz
fsts
rcll
sub
mov
cltd
or
jge
das
inc
lods
stos
loope
pushf
or
stos
stc
js
dec
mov
nop
push
push
jg
and
popf
add
sarb
scas
xorps
popf
movups
out
stos
cmpb
add
ds
or
inc
inc
mov
aaa
ret
call
pop
test
xchg
mov
shrb
pop
add
mov
xchg
cmpsl
jmp
cmpsl
out
sub
dec
movsl
movaps
sbb
repnz
cltd
add
adc
dec
fisubrl
inc
frstor
or
jae
mov
xchg
ret
int3
pop
btr
mov
adc
adc
shlb
add
cmp
addl
cmp
or
pop
pop
jns
xor
lcall
xor
adc
shll
mov
or
movsb
in
xor
dec
fists
pop
fcompl
mov
inc
shll
shl
ret
jo
std
xlat
adc
daa
fadd
lret
rcrl
cmpsb
push
sub
xchg
push
dec
movsl
push
xchg
pop
mov
pop
sub
sub
sbb
xchg
paddusb
add
es
or
xor
or
sub
ds
dec
stos
icebp
mov
jns
aaa
xor
ja
and
test
fimuls
testl
es
test
inc
sahf
cli
xchg
mov
xchg
test
lahf
jnp
cmp
fs
xor
insl
fists
cmp
lahf
inc
cmp
pop
add
testb
outsl
fsubl
mov
pop
dec
sub
in
jp
cld
pop
out
jne
mov
cmp
add
pop
ljmp
les
mov
das
xchg
pop
aad
or
int
aad
std
jno,pt
cmp
mov
stos
fmuls
arpl
mov
bound
mov
lds
xor
xchg
in
loopne
jmp
ljmp
and
fldt
push
dec
lret
mov
sbb
or
adc
test
pop
mov
mov
push
add
xor
mov
xorb
scas
jne
ljmp
arpl
jl
push
inc
scas
push
mov
leave
xchg
inc
pop
insl
shlb
xor
mov
out
sub
stos
addb
lret
or
idiv
out
pusha
data16
daa
pusha
pusha
mov
or
cmp
jbe
addr16
inc
adcl
jns
add
mov
mov
rcrb
adc
jge
idiv
adc
mov
add
insb
inc
mov
cmp
int3
insb
xchg
pop
xchg
outsb
out
and
push
aad
pop
push
lret
dec
mov
jmp
adc
ljmp
int
movsb
mov
and
mov
bound
pop
dec
cmpl
jns
xchg
out
jae
icebp
push
adc
mov
loopne
test
inc
stos
xor
push
popa
int
mov
push
fdivp
ret
cld
movsb
mov
push
cmpsb
jl
jns
xor
test
cs
or
lods
shll
sbb
stc
repnz
and
or
add
pushf
push
mov
pop
out
dec
inc
push
mov
out
addr16
clc
ja
out
or
cmp
stos
cmp
inc
dec
cmp
add
int3
insb
test
shl
sub
sbb
adc
mov
dec
jge
jmp
and
je
push
add
xchg
inc
mov
fs
and
mov
gs
xchg
mov
pop
inc
daa
cmp
lods
pop
adc
xor
and
inc
mov
out
mulb
inc
inc
jns
lret
dec
dec
adc
xor
mov
mov
lretw
ljmp
daa
js
and
push
mov
xor
push
es
insl
sub
repz
cli
cltd
out
nop
pop
jp
ficompl
sbb
inc
aad
imul
xor
mov
sub
jp
fistps
or
and
outsl
jl
mov
mov
lea
jae
enter
imul
pop
cwtl
orl
add
xchg
adc
int
movsl
out
adc
cmpsb
int
sub
adc
daa
push
jns
pop
mov
scas
or
dec
arpl
das
inc
sub
es
addr16
fimull
outsl
jno
test
add
pop
cmp
cld
add
sub
mov
xchg
sub
outsb
jbe
adc
iret
cmp
in
hlt
jb
cmp
sbb
sbb
sub
test
jmp
mov
enter
mov
aad
pop
xor
jp
flds
scas
divl
jge
inc
repnz
or
js
pushf
sbbl
dec
test
fistl
pop
movsb
sbb
mov
fs
scas
hlt
call
dec
inc
imul
psubd
mov
xor
jne
jge
imul
lods
add
dec
lds
and
inc
cltd
scas
and
leave
jns
rcll
out
xchg
imul
test
inc
cmp
into
jne
sub
aam
xor
stc
push
mov
js
cltd
sub
xchg
fldl
into
jp
js
jbe
pushf
sar
add
fs
push
daa
pop
mov
les
bound
sub
or
sahf
dec
pop
std
loope
push
int3
dec
pop
sbb
repz
cmp
pop
jmp
xor
leave
pop
or
aas
inc
mov
mov
mov
test
rcrl
std
inc
scas
add
mov
cmc
imul
dec
scas
in
jecxz
rcrb
jg
imul
iret
add
sbb
sbb
pop
jns
lret
inc
addr16
stc
popa
pop
ret
lea
sbb
repz
test
mov
mov
mov
mov
mov
pop
cli
imul
mov
outsl
push
test
hlt
clc
ja
jne
jae
and
daa
je
push
addr16
cmp
add
mov
and
sarl
dec
xchg
mov
repnz
imul
scas
adc
sti
fsts
and
js
repnz
ja
aas
cld
cmp
icebp
adc
nop
int
mov
cs
fs
xchg
cmp
pop
ret
frstor
sbb
xchg
add
sbbl
sub
repnz
push
add
pop
mov
pop
xor
push
repz
xor
das
xor
sbb
jnp
roll
aad
jmp
cmp
sbb
mov
add
add
pop
mov
lcall
mov
mov
je
dec
push
push
data16
pop
and
sbb
scas
cmp
xor
mov
and
mov
out
dec
push
or
vpmuludq
xor
or
in
mov
push
icebp
jb
jle
pushf
ja
add
mov
pop
fistl
in
pop
imul
sbb
xor
push
cmpsl
cmp
insb
mov
mov
loop
arpl
es
repz
cs
cmp
dec
ljmp
and
add
sbb
fists
inc
imulb
add
lahf
dec
and
imul
jo
sbb
outsl
inc
and
push
les
pop
cltd
mov
dec
std
cmpb
in
leave
pop
lods
and
icebp
inc
push
or
sbb
cmp
dec
stos
jecxz
mov
add
sbb
jecxz
xchg
iret
fnstcw
jg
mov
rclb
mov
stos
ss
xchg
pop
jnp
sub
xchg
mov
cs
xlat
ds
imul
clc
imul
aaa
in
fldl
hlt
clc
mov
mov
mov
mov
faddl
inc
int3
hlt
inc
movsl
aad
adc
fdivs
or
mov
sbb
dec
fsubs
jp
xor
aam
jmp
andb
stos
leave
sub
pop
stos
mov
movsb
out
idiv
insb
repz
xchg
mov
sub
out
sub
pop
sahf
lret
adc
and
pop
sub
mov
xchg
cmp
sub
fsubr
not
pop
pop
int
or
xchg
adc
pop
cs
add
and
popf
cld
inc
idivl
xor
mov
in
adc
stos
cmp
sub
in
sub
xchg
sbb
insl
mov
arpl
cmp
pop
add
lds
add
jnp
js
cmpsl
jmp
sbb
mov
xchg
in
sbb
push
dec
or
popa
leave
arpl
jecxz
int3
sub
xchg
adcl
testb
jne
ljmp
cld
popl
inc
fldenv
cld
mov
dec
mov
repz
xor
pop
pop
out
fs
dec
test
or
stc
loopne
push
les
push
jle
aas
lods
neg
xchg
dec
mov
mov
cmp
sbb
call
cltd
aad
sub
jge
fists
dec
lds
xchg
sbb
mov
lock
loopne
mov
xor
push
vdivsd
push
inc
jo
cltd
push
cmp
aam
xchg
mov
addr16
outsl
dec
jl
lret
cmp
adc
ret
rcr
cmp
repz
mov
stos
mov
ljmp
aad
jle
mov
xchg
mov
pop
lods
ljmp
insb
add
sub
in
push
xchg
mov
andb
cmp
pop
ss
dec
pop
mov
cmp
loop
xchg
push
push
push
lods
jne
or
jle
shr
cmc
xchg
pusha
test
insl
or
insb
push
lods
pop
scas
fsubrs
cmp
test
adc
sub
rolb
or
aad
sub
add
ret
adc
mov
inc
psubusw
in
in
xchg
sub
movsb
inc
cmp
loopne
inc
mov
arpl
inc
inc
mov
sbb
push
lahf
jno
sarb
xchg
or
ja
xchg
jecxz
add
xchg
sahf
test
sbb
dec
xor
repnz
pusha
mov
aas
add
popf
mov
jg
popa
lea
or
jl
jno
mov
and
and
cld
pop
fnsave
xlat
and
jl
in
lods
mov
inc
mov
movsb
fcomi
les
push
mov
adc
dec
sub
mov
or
add
fists
cmc
cmpb
arpl
imull
xchg
push
sbb
notb
mov
dec
scas
push
pusha
test
sbb
mov
adc
aas
cmp
xlat
ljmp
mov
jge
xchg
xor
and
lods
dec
pop
fbstp
test
mov
pop
adc
test
mov
cwtl
mov
pop
mov
enter
mov
mov
test
mov
sub
stos
sub
mov
pop
add
lods
movsb
in
popa
xchg
outsb
fsubrl
ss
cli
imul
or
js
hlt
cmp
lods
pushf
add
je
gs
inc
jp
mov
add
sbb
lods
cmp
pusha
lret
inc
out
mov
cmc
and
push
daa
daa
xor
int
rclb
das
stc
into
sub
xchg
out
push
pop
mov
daa
xchg
adc
dec
add
jecxz
sbb
andl
adcb
loopne
test
jmp
test
call
jge
sub
jecxz
bound
mov
mov
cmp
movsb
mov
dec
outsl
jae
adc
mov
xchg
mov
cmp
clc
mov
scas
ja
and
fsubs
push
je
xchg
sub
pinsrw
scas
sub
push
int3
mov
loopne
and
and
cmp
popa
add
sub
push
xchg
push
bound
pop
nop
lcall
call
nop
pop
jle
push
push
xchg
pop
ds
lock
cwtl
idivl
inc
mov
push
loopne
push
sub
push
shll
xchg
sbb
inc
mov
dec
dec
ret
das
aam
fwait
jmp
ja
mov
pop
adc
lahf
xor
xchg
add
nop
lret
pop
sub
cmp
out
je
xchg
loope
sub
mov
int
nop
mov
popf
push
jle
adc
aaa
cli
arpl
lock
mov
sub
pushf
mov
adc
aam
or
push
cmpsl
fs
in
push
call
js
lret
stos
stc
cmp
aas
pop
pop
jg
xchg
ds
sahf
stos
fnstcw
ss
popf
lds
pop
movsb
shrl
xchg
xchg
jo
cmp
dec
and
or
leave
xchg
inc
cmpsl
jl
addr16
cmp
dec
push
sarb
stos
add
cs
enter
sub
jg
sbb
sarb
sbb
dec
mov
dec
sub
pop
js
sub
or
scas
xchg
mov
add
into
push
jnp
cs
bound
cmpsl
sbb
aam
mov
je
sub
sub
repnz
enter
in
xor
std
sub
aam
into
push
je
sbb
in
in
cmp
mov
cmp
mov
aas
aam
into
xchg
pushw
dec
popa
cmp
gs
xchg
mov
ljmp
testl
and
jp
popf
addr16
mov
pop
filds
dec
fdivl
incb
pop
sbb
xchg
fisubrs
aas
xor
loopne
in
stos
clc
sarl
sahf
dec
cmpsb
dec
adc
dec
pop
js
jecxz
xchg
mov
fucomip
fldenv
push
push
add
mov
mov
xlat
jno
lods
ficoms
mov
push
imul
popa
mov
in
push
fucomi
mov
stc
popa
push
mov
mov
jo
stos
out
ret
test
and
inc
xchg
in
les
mov
mov
mov
and
in
push
popa
dec
pop
ficompl
adc
xor
cmp
test
jle
movsb
mov
repz
ret
or
xorl
jae
lds
adc
cmpsl
aas
fcoms
pusha
sarl
pusha
or
test
pop
mov
loopne
nop
jecxz
mov
stos
mov
repz
add
lret
push
adc
or
inc
pop
scas
data16
mov
jno
mov
jno
jl
fists
mov
outsl
push
aam
inc
outsb
mov
push
sbb
js
shrb
in
xchg
sbb
mov
cmp
jbe
sbb
pop
mov
ja
or
shl
icebp
mov
sub
pop
jns
xchg
mov
mov
dec
cmp
jne
je
out
les
add
movsl
lock
push
mov
xchg
arpl
fstp
cltd
lret
or
cmc
std
jmp
imul
imul
pop
repnz
test
and
scas
sbb
clc
pop
scas
imul
test
enter
enter
or
mov
rorl
or
shrl
and
add
loopne
push
pop
mov
adc
or
test
cmp
push
sahf
mov
xor
sahf
sbb
mov
dec
adc
das
and
or
movsb
inc
in
sahf
ficomps
xor
dec
pusha
insb
cmpsb
faddl
fimull
fstpt
nop
dec
jecxz
adc
mov
add
xor
lcall
cmp
mov
cmp
in
inc
xor
sbb
add
scas
leave
mov
in
sub
jb
movsb
lds
mov
xchg
push
inc
adc
shlb
stc
sub
fisttpl
fsubrl
fs
dec
je
enter
jmp
cld
sbb
fsubl
lret
aaa
mov
leave
mov
jge
jns
rcl
pusha
ss
dec
addr16
push
sbb
popa
mov
test
iret
mov
pop
dec
cld
fists
popf
fstp
sub
pop
iret
aas
mov
push
push
xor
fdivrl
in
fs
divl
rclb
imul
das
mov
sbb
mov
xchg
mov
les
jle
cmp
sub
adc
ja
insl
nop
mov
and
stos
mov
stc
sahf
icebp
jg
add
fldenv
test
mov
aad
dec
ficoms
movl
rdtsc
sti
subps
shrl
cltd
out
sbb
popa
sbb
sub
sbb
out
pop
pop
inc
shll
add
and
mov
sbb
mov
push
cmp
dec
aam
pop
scas
mov
push
mov
push
push
movsb
pop
test
dec
pop
xchg
pop
popa
shrl
sbb
hlt
mov
pop
lds
addr16
mov
js
cli
pop
sbb
scas
out
push
lahf
and
push
pop
scas
jb
dec
inc
loope
test
subl
pop
dec
in
cmp
dec
dec
inc
movsl
insb
ljmp
ret
sub
dec
cmp
jne
lahf
xchg
pusha
push
inc
movsb
xchg
ljmp
ds
scas
pop
mov
pop
mov
out
adc
add
sub
sub
or
nop
or
xlat
dec
mov
lahf
cmp
es
cld
push
jns
mov
and
pop
adc
add
pop
call
jmp
add
fsubl
sbb
xchg
mov
addr16
sbb
push
ds
add
sbb
jmp
jle
fsubrl
mov
mov
mov
in
push
jp
ds
pop
es
or
frstor
xor
mov
push
pop
xchg
xlat
nop
daa
shlb
shlb
rorb
gs
out
out
lods
and
add
xchg
daa
in
mov
into
mov
jle
js
movsb
nop
arpl
adc
insl
lds
mov
cmpsl
lcall
pop
mov
sub
repz
leave
mov
loopne
sbb
rcrb
sbb
test
xor
in
and
cmp
mov
adc
stos
or
cmp
dec
xchg
fldenv
inc
mov
or
mov
bound
lock
shll
push
push
jnp
dec
jb
popa
lea
fisttpll
mov
jo
icebp
xchg
mov
jmp
mov
repz
or
add
add
sahf
push
dec
mov
sbb
cmp
addr16
mov
jg
imul
sub
mov
jl
scas
and
rol
xchg
dec
mov
daa
movsb
sub
pop
lds
popa
sarb
scas
jg
cs
jns
fsubr
xchg
inc
push
test
jb
pop
sbb
pop
leave
push
ficompl
jg
mov
aad
dec
dec
push
push
push
cs
in
add
mov
iret
bnd
sahf
adcb
pop
test
inc
or
rcrb
in
divb
push
mov
cmpsl
gs
mov
sub
mov
test
sbb
pop
jno
int3
scas
mov
lret
ja
xchg
xchg
add
lods
test
inc
or
sbb
lea
ss
jbe
cmp
jl
dec
in
ret
lret
ljmp
mov
pop
sbb
cmp
in
add
mov
rcr
xor
pop
jae
inc
sub
imul
mov
pop
push
xchg
add
mov
inc
arpl
fidivrl
push
cltd
mov
push
push
ficoml
cmpsb
pop
fidivs
fs
cld
rcrb
cs
sbb
ljmp
or
or
jle
ds
mov
out
mov
in
ret
mov
push
jno
jg
cwtl
es
push
int
das
addr16
ficoml
iret
xor
or
scas
testl
and
shlb
fmull
xchg
push
jle
cwtl
xchg
or
lea
sbb
and
pop
pop
out
sub
inc
out
add
js
adc
int
push
leave
push
bound
fildll
cmc
sti
pop
xchg
sbb
sbb
gs
dec
cltd
xchg
iret
sbb
add
pop
call
enter
jo
jbe
dec
outsl
sbb
ds
outsb
imul
push
in
add
cmp
sub
sub
mull
jb
jns
mov
inc
adc
fisttpl
and
xor
pop
and
pushl
adc
add
roll
sub
or
out
pop
mov
mov
fstp
mov
push
or
imul
push
jno
mov
test
mov
adc
push
ja
lret
dec
sbb
hlt
mov
sub
leave
stos
daa
aad
addr16
mov
xchg
in
fisubs
fdiv
int3
pushf
movsb
sbb
int
fisubrl
adc
inc
sahf
push
scas
or
sti
inc
and
rol
or
dec
lds
das
sti
testb
idivb
loopne
inc
adc
push
adc
pop
imul
dec
xor
das
xor
cmp
clc
test
dec
aam
dec
imulb
mov
lds
pop
mov
movsl
jo
mov
dec
sbb
mov
adc
xchg
adc
int
pop
lret
addr16
push
divl
dec
mov
add
gs
mov
cwtl
mov
and
and
not
mov
add
pop
jae
fdivl
cmp
cwtl
push
mov
sub
add
xchg
pop
cmp
hlt
adc
cmpsl
jmp
mov
pop
xchg
lods
pop
xchg
mov
dec
clc
mov
mov
repz
jae
jecxz
loopne
push
jecxz
xchg
sub
jg
sbb
mov
xor
adc
push
ja
and
enter
push
mov
das
mov
add
jecxz
push
aas
stos
mov
mov
mov
test
mov
scas
xor
daa
push
mov
and
cmp
out
jge
les
mov
sub
mov
mov
jno
mov
jo
aam
dec
mov
add
or
test
in
sahf
xor
outsb
out
jb
adc
pusha
cld
scas
call
stos
movsl
pop
hlt
mov
inc
fsubrs
mov
jge
test
ror
sbb
pop
push
aas
xor
enter
shrb
lea
test
test
xor
rclb
pusha
push
inc
xchg
test
fmuls
aam
inc
das
push
inc
sub
jecxz
imul
xor
std
and
loope
cs
jge
mov
mov
inc
jge
testl
sbb
xchg
mov
scas
push
movsb
sbb
sub
adc
in
int
bound
and
inc
lock
push
fistpll
push
movsl
and
incb
mov
stc
shlb
inc
xor
repnz
loope
inc
xor
xchg
std
adc
sub
xlat
movsl
test
faddl
jbe
mov
push
jge
test
hlt
sub
mov
push
or
sub
pop
mov
daa
lahf
into
add
repnz
movsb
in
fisttpll
imul
pop
mov
adc
mov
xor
push
stos
or
push
std
pop
dec
cmp
aam
out
dec
scas
dec
jno
das
pop
pop
lods
and
xor
xchg
xchg
push
or
push
mov
hlt
cmp
bnd
int3
cmpsb
xchg
pop
add
push
popl
dec
push
sub
sub
ss
dec
stos
jg
fimull
dec
sub
rclb
lock
test
dec
cli
movsb
or
and
mov
loopne
fidivrs
jl
xor
mov
add
dec
loop
or
xchg
sub
adc
xchg
in
cmpsb
lock
or
pop
push
adc
or
flds
add
push
mov
dec
mov
dec
test
jne
pop
sbb
mov
cmc
inc
out
inc
rolb
enter
insl
iret
xorl
push
mov
inc
mov
sub
push
or
ficompl
push
pop
push
inc
les
inc
clc
lods
sub
test
dec
leave
cmp
dec
push
subb
jg
lret
push
xchg
inc
push
shr
or
fisttpll
mov
inc
cltd
inc
repz
sbb
mov
mov
jg
ljmp
in
add
mov
adc
das
int3
ret
flds
aaa
into
sbb
inc
xchg
mov
sbb
sarl
mov
push
xor
push
xor
sarb
mov
or
xlat
jmp
cmp
mov
pop
cld
xchg
push
out
push
add
mov
loop
push
xor
or
not
add
cmp
sub
pushf
loopne
jb
cmp
aam
aam
inc
shll
sub
or
pop
cwtl
cmp
mov
mov
jns
sahf
cmp
mov
push
rcrb
mov
mov
mov
cmc
xchg
xchg
decb
ret
add
bound
push
mov
nop/reserved
lret
push
lods
jmp
test
stos
mov
pop
or
mov
mov
sbb
lea
jge
movsb
jmp
inc
inc
call
sahf
mov
fs
add
mov
sub
push
pop
adc
pop
pushf
das
ror
sub
mov
out
mov
daa
dec
aam
sbb
cmp
out
mov
mov
mov
pop
movsl
jbe
negb
std
and
push
sahf
mov
es
mov
sbbl
fsubrs
pusha
or
inc
stos
pop
dec
dec
in
pop
xchg
scas
dec
lahf
add
xlat
jmp
jne
addb
pop
mov
mov
decl
adc
ja
jecxz
push
jle
imul
xor
mov
out
in
and
adc
loop
lahf
xchg
add
jmp
or
stos
push
mov
cmpsb
push
xchg
jb
or
rcrb
mov
push
adc
mov
inc
jnp
dec
dec
cmpsl
xchg
push
mov
mov
adc
sbb
sarb
pushl
add
xchg
adc
into
stos
in
xor
push
mov
clc
or
jb,pt
mov
inc
jbe
pop
rorl
ret
int
push
mov
push
loop
ljmp
clc
add
rcrb
gs
add
rclb
lds
xchg
push
pop
mov
dec
out
scas
mov
mov
mov
test
lods
push
scas
enter
cmpsl
out
into
adc
dec
pop
xor
or
imul
inc
or
pop
dec
insb
inc
push
mov
ss
int3
gs
lea
imul
and
xlat
jle
test
lcall
stc
int3
or
fildll
pop
mov
cld
sbb
mov
adc
push
mov
pop
sub
jne
push
lock
mov
pop
xor
repnz
xchg
push
aaa
in
scas
shlb
sbb
pop
cmp
jmp
and
addr16
enter
sub
test
aaa
test
rcrl
popa
push
pop
test
inc
sub
pop
cmpsb
fildll
jb
lcall
lods
xor
clc
sub
movlps
idivb
pop
ret
mov
rclb
gs
out
jg
sub
test
lret
dec
es
cs
and
add
add
and
mov
popa
test
arpl
jge
outsl
sub
adc
repnz
sbb
mov
cmp
outsb
fidivrs
push
outsl
jg
fxch
hlt
xor
enter
ficoms
dec
mov
out
push
out
sub
nop
rclb
jle
shll
jecxz
jne
push
mov
mov
ss
mov
insb
pop
xchg
scas
jecxz
jnp
je
test
dec
mov
mov
insl
jae
mov
sub
mov
call
add
mov
std
in
movsb
xchg
loope
jne
ja
stos
add
aas
xor
mov
mov
into
and
pop
fwait
pop
mov
mov
jge
out
fsubrl
jno
movsb
out
stos
les
fstcw
sbb
fsubl
cld
ret
xchg
cli
mov
cltd
dec
ret
cltd
xor
xchg
adc
in
inc
sub
leave
lock
jg
jecxz
jo
push
cmp
arpl
arpl
orl
iret
xchg
inc
jno
xchg
and
fisubl
push
push
lds
mov
shr
xchg
test
cld
or
popa
and
fs
lock
push
lods
or
push
aad
add
or
clc
jl
test
fwait
xchg
mull
dec
push
push
lods
cwtl
mov
pop
imul
mul
cmp
xchg
imull
and
cmp
ss
cmp
mov
in
jp
adc
fwait
out
arpl
push
lods
frstor
mulb
xchg
dec
int
push
movsb
jg
xor
sbb
jo
daa
mov
mov
out
nop
dec
mov
push
cmpsl
inc
pop
cmp
xchg
cmp
mov
data16
repz
jge
xor
popa
mov
xchg
jb
fisubl
sub
adc
loope
push
sbb
mov
aas
push
insb
add
push
leave
pop
sbb
sub
push
jl
mov
xorb
loopne
pop
inc
aad
fcmovnu
fiadds
jno
mov
repnz
mov
jecxz
sbb
jmp
pop
mov
fidivs
xchg
mov
sti
loopne
pusha
push
mov
xor
xchg
clc
sbb
xorb
add
jnp
icebp
or
add
add
pop
jns
add
sub
pop
cmpb
push
xor
push
push
call
pop
or
xchg
scas
cmp
das
mov
xchg
into
int3
repz
jae
jnp
push
les
lods
neg
popf
fnstsw
and
ficomps
pushf
mov
int3
cmc
pop
or
lods
pop
fildl
mov
lock
sbb
ss
mov
push
push
pop
dec
cld
sub
mov
sub
cmc
mov
fwait
xadd
mov
loope
lock
adc
jb
cmc
dec
cli
and
cli
pop
mov
mov
adc
sub
lahf
into
comiss
dec
test
cmp
cmp
into
shr
lds
inc
outsl
push
enter
pop
adc
xchg
mov
pop
data16
mov
ljmp
inc
jecxz
fidivl
lahf
xlat
imul
sub
inc
lahf
std
movsl
rcrb
add
xchg
cld
jg
xchg
addb
sbb
push
jno
mulb
push
pop
loopne
push
stc
data16
stos
test
xchg
sti
bnd
fimull
or
push
enter
sub
or
shlb
jmp
sub
in
into
js
sbbb
negl
jno
push
push
push
ds
das
iret
lcall
dec
adc
rorb
insb
out
jns
sub
xchg
mov
xchg
push
cmp
imul
or
jno
adc
lcall
add
dec
or
sub
in
rorb
pop
flds
neg
insl
fwait
xor
jnp
seto
mov
mov
data16
mov
cmp
jp
dec
rorb
scas
fldenv
pop
divl
stc
pop
arpl
mov
push
f2xm1
xrelease
xor
add
roll
mov
cltd
popf
stos
mov
dec
adc
add
inc
xor
xor
cltd
jae
sub
cmpsb
pop
mov
lcall
iret
and
add
push
fwait
popf
and
mov
or
adc
push
adc
test
insb
mov
mov
ret
pop
ret
push
adc
mov
call
mov
add
xchg
in
mov
imul
inc
xchg
and
push
rcrl
in
sbb
mov
pop
clc
lret
loop
out
push
mov
xchg
mov
outsb
adc
les
icebp
dec
cmpsb
mov
aaa
pop
mov
fiadds
cmpsl
jp
sahf
btc
jp
mov
or
movsl
push
test
loop
mov
cltd
jl
leave
sbb
mov
icebp
inc
call
and
add
adc
out
or
mov
imul
ficompl
jb
pop
sub
xchg
inc
pop
mov
cmp
fists
dec
mov
xchg
mov
push
inc
scas
xlat
insb
push
cmpsb
xchg
or
popf
xchg
int
xlat
pop
mov
mov
lahf
test
adc
sti
ja
fmull
iret
mov
rcr
lahf
pop
cli
fcmove
push
mov
dec
sahf
jge
test
fidivrl
mov
out
sbb
out
mov
hlt
repnz
addr16
inc
js
xchg
movsl
hlt
adc
adc
inc
mov
mov
jbe
inc
xchg
loope
inc
shr
jp
dec
jp
stos
in
mov
fdivl
adc
jecxz
and
push
outsl
aas
scas
or
add
fcomi
into
add
pop
adc
loop
xor
pop
push
xchg
sub
cmpsb
fs
insl
and
adc
sub
adc
lods
call
dec
icebp
sbbb
mov
mov
add
cwtl
icebp
leave
pop
outsb
or
dec
movsb
or
push
into
out
cs
sbb
fsub
ret
dec
mov
into
push
jle
fwait
xchg
std
pop
sbb
movsb
dec
cli
mov
das
and
mov
pop
jmp
cmp
push
lcall
fcoms
outsb
jns
adc
stc
in
cltd
ss
xor
jb
and
jmp
das
mov
roll
fcmove
pusha
sub
xchg
sbb
je
repnz
adc
ja
dec
lcall
movsb
js
sub
stos
xor
repnz
int3
imul
cmp
das
pushf
arpl
sub
leave
push
in
pop
sti
push
hlt
movsl
adc
popf
push
cli
test
clc
test
lock
mov
fnsave
sbb
inc
daa
arpl
stos
into
in
mov
lret
push
dec
and
subl
out
pop
dec
mov
jno
jg
rorl
ret
mov
xorl
sbb
test
out
or
adc
leave
cmp
fmuls
cmp
ss
in
xchg
jno
in
and
addr16
sub
mov
inc
jne
sbb
add
push
popa
cmp
xchg
push
into
push
ds
jmp
dec
data16
lret
or
push
inc
call
and
xchg
repz
iret
cltd
cmpsl
pop
sub
inc
sbb
jbe
lahf
shl
sbb
inc
push
addr16
stc
sbb
xchg
das
sbb
fs
dec
cltd
iret
pushf
jle
or
pop
adc
aaa
mov
fistps
ja
add
mov
in
jns
sub
push
or
test
add
push
sbb
sbb
mov
xor
scas
pop
andb
push
loope
fcmovnb
jge
gs
sbb
lods
mov
push
pop
dec
xchg
and
shl
in
sti
mov
out
leave
call
push
or
xchg
cmpsl
ljmp
mov
xlat
aaa
mov
rcrb
sbb
cmp
and
insb
negl
add
out
adc
xor
and
xchg
les
ret
xor
mov
fwait
mov
push
inc
cld
add
rorl
xor
push
imul
shl
movsb
jecxz
jb
pop
cmp
repnz
in
cltd
stc
and
pop
push
cmp
icebp
jo
ss
icebp
pshufw
pop
cmp
add
sbb
int
jmp
lock
daa
enter
ss
iret
jo
aaa
fbld
mov
mov
jp
cmpsb
and
ljmp
iret
in
std
sbb
sbb
xchg
out
sbb
ljmp
push
ficompl
mov
lahf
idivl
jg
mov
lahf
dec
mov
test
mov
loop
jmp
adc
jmp
and
add
mov
icebp
movsl
push
cmp
add
hlt
out
push
and
sbb
and
jnp
iret
xchg
add
rorb
push
sti
jns
jae
shlb
loopne
dec
adc
add
and
imulb
cmp
insl
add
arpl
in
mov
and
outsb
sbb
pop
fwait
and
cmp
mov
jne
add
add
ret
push
leave
fcmovnb
adc
pop
sbb
push
jmp
mov
xchg
mov
adcb
mov
mov
cmp
mov
adcb
sub
lods
jecxz
jne
add
pop
cltd
pop
lods
fidivl
lods
jbe
xor
sbb
ret
adc
test
dec
clc
add
lret
scas
jbe
movsl
mov
mov
iret
cs
xor
xchg
dec
dec
adc
js
inc
loopne
cltd
mov
cli
fbstp
aam
imul
and
sbb
orb
pusha
xor
loope
add
and
dec
test
jmp
xchg
scas
iret
mov
clc
mov
xchg
pop
ja
imul
in
dec
cmp
pop
push
arpl
lds
aad
jne
fdivrp
adc
and
mov
push
inc
orl
fldl
das
es
jle
out
and
pop
iret
and
stos
xlat
xor
sbb
outsb
sub
movsb
stos
mov
sbb
adc
stos
leave
scas
pop
add
clc
mov
jne
das
js
stc
scas
sbb
stos
add
outsl
fstp
jae
out
enter
cmp
sahf
stos
cwtl
or
adc
stos
nop
mov
jle
jmp
pusha
mov
pcmpeqw
cmp
inc
jnp
xchg
popa
xchg
daa
mov
sub
fisubs
inc
mov
addl
nop
enter
mov
pop
sbb
adc
out
and
jnp
adc
test
setns
lcall
mov
ljmp
loop
jae
push
push
shlb
xor
or
pop
push
mov
xchg
mov
out
lock
mov
stos
out
outsb
aad
inc
cmp
aam
push
jbe
test
jp
gs
dec
dec
and
repz
popa
out
icebp
insb
sbb
add
cmp
dec
inc
repnz
stos
ss
fs
movsl
jae
cmp
cld
xchg
push
in
cmp
stos
loope
and
cmp
fidivrs
aaa
int
iret
sbb
adc
je
lret
and
rorb
lcall
or
loop
sti
inc
cmp
insb
sbb
pop
movsb
lret
in
add
cmp
cmp
pop
mov
jbe
jle
push
fisttps
add
in
jmp
js
je
fwait
xor
std
push
push
movsb
xchg
mov
out
mov
xor
ljmp
fwait
ljmp
fxch
jne
sub
pop
jnp
in
roll
lods
sbb
jnp
dec
std
push
push
cmpsl
jno
imul
mov
frstor
icebp
bound
and
ja
jge
imul
dec
je
inc
xchg
sub
aam
pusha
ja
lock
and
aas
xchg
jo
lret
sub
xlat
loope
gs
dec
subl
ror
pusha
sub
in
xor
test
mov
rcl
jecxz
cltd
andb
int
jle
xchg
and
out
jne
cmp
jbe
stos
fs
jle
nop
aaa
mov
fmuls
cld
dec
mov
add
adc
fwait
push
add
mov
imul
xchg
sub
outsl
out
xchg
inc
int
mov
sub
or
scas
int3
adc
and
test
adc
mov
iret
jne
test
pop
bound
sbb
dec
fstps
cmp
gs
mov
bound
outsb
movsl
and
fimull
stos
dec
mov
scas
test
cmc
sub
mov
push
add
sub
jle
or
xchg
xchg
nop
pop
inc
fistl
mov
fnstenv
into
sub
insl
mov
dec
rcl
xchg
aaa
lock
daa
lahf
mov
mov
sub
in
sub
adc
adc
jno
in
repz
int
push
sahf
xchg
cmp
outsb
mov
mov
sub
or
repz
ljmp
lods
dec
jl
scas
outsl
xor
push
mov
push
incl
decb
sbb
sub
pop
sub
cmp
pop
inc
cmp
pop
jne
addr16
nop
faddl
dec
push
inc
ss
lret
or
fbstp
or
lret
mov
stos
pop
mov
xchg
xchg
jb
mov
js
mov
cli
pop
jg
ret
mov
stc
jle
mov
dec
dec
daa
cld
in
inc
iret
adc
rclb
mov
pop
sti
fmull
adc
cmp
xchg
into
fcompl
xchg
cmp
mov
dec
adc
jnp
orl
movsb
jl
repz
add
je
popf
dec
sub
cld
addl
repz
sbb
lret
sub
icebp
xchg
lea
adc
aas
lret
ss
sub
rcrb
fsubs
jl
add
pop
push
cmp
shlb
popf
mov
lock
out
in
adc
mov
repnz
mov
dec
cmp
mov
dec
cmpsl
adc
or
xchg
dec
mov
add
mov
sub
xlat
fwait
mov
and
filds
or
icebp
enter
or
mov
sahf
negl
xchg
push
and
stos
test
gs
fstp
mov
jecxz
pop
shlb
mov
inc
cmp
pop
hlt
dec
movsb
and
mov
fincstp
notl
jbe
sub
in
je
mov
pop
xor
test
or
test
cmp
inc
loopne
mov
mov
fildl
pop
push
inc
add
mov
mov
adc
jecxz
fisubs
sbb
sbb
dec
pop
jae
test
pop
inc
int
dec
out
movl
cli
out
jge
sarl
pop
push
mov
sbb
sub
pop
sti
stos
mov
sahf
jmp
daa
push
not
notb
rolb
loopne
dec
repnz
fisubl
jge
jo
ss
jbe
sbb
mov
jns
jne
jl
ja
popf
adcb
ljmp
mov
fiadds
or
mov
add
xor
cmp
sub
jae
sar
sub
fwait
mov
decb
mov
lret
add
lret
repnz
xchg
sbb
into
sahf
xchg
shlb
pop
xchg
outsl
fmull
mov
test
test
sbb
mull
adc
inc
rcr
inc
push
jne
pop
inc
inc
inc
aam
jmp
mov
je
mov
dec
sub
rclb
insb
int
cwtl
xchg
dec
popa
pop
rolb
mov
or
add
aad
rcl
pop
movsb
fs
mov
xor
scas
repnz
mov
outsl
leave
pop
imul
into
sub
push
jl
mov
clc
xor
sbb
cli
xor
and
cwtl
mov
xchg
out
mov
cmpsl
mov
dec
or
mov
int3
jno
repnz
fistpl
jmp
xor
jo
stc
inc
adc
call
out
cmpl
mov
not
mov
pop
push
scas
mov
aas
icebp
add
adc
add
cmp
mov
and
leave
push
aad
lret
jecxz
ds
inc
dec
inc
lock
shll
adc
ja
adc
xchg
enter
and
pop
adc
js
xchg
iret
push
mov
jb
sahf
xor
fsubr
adc
and
jb
in
sbbb
xor
lahf
adc
push
aaa
roll
push
sub
add
pushf
out
or
push
in
cmp
aad
push
cmp
inc
ljmp
cmpsb
pusha
dec
aad
popf
imulb
lcall
and
sub
imul
das
aad
gs
xchg
outsl
dec
cli
and
mov
dec
jbe
int
dec
das
jg
jno
xchg
sbb
lods
push
xchg
fimull
xchg
adc
add
mov
xchg
pushf
rclb
add
fyl2x
in
mov
in
xor
mov
int3
pop
fcmovb
jge
inc
fiaddl
test
sbb
test
lret
jmp
mov
mov
rclb
popl
imul
insl
sub
jns
or
stos
pop
mov
or
cwtl
enter
or
cli
mov
adc
add
xor
jb
mov
cmp
rolb
loop
loope
sub
pop
iret
dec
pop
std
xor
push
or
addr16
and
adc
mov
sahf
ss
pop
notb
test
rclb
jmp
jae
leave
addr16
inc
aam
es
lods
je
aas
xchg
cmc
mov
fwait
mov
imul
cli
xchg
jp
pop
jmp
sbb
imul
lea
add
shl
push
xchg
mov
fldcw
stos
dec
test
inc
faddl
add
ja
bound
imull
push
mov
push
pop
loop
mov
pop
lods
xchg
mov
inc
sbb
and
out
xchg
pusha
pop
xlat
in
nop
cmpsl
lods
arpl
ffreep
ret
inc
cmpsb
xor
push
dec
xchg
clc
xchg
mov
xchg
mov
imulb
notb
hlt
pop
loop
mov
scas
lret
in
lret
imul
inc
add
jbe
dec
fs
mov
enter
push
insl
pop
mov
nop
jp
dec
test
push
add
stc
sti
fsincos
les
out
movsb
sbb
push
das
pop
andb
shlb
nop
and
sbb
out
iret
mov
idivl
jl
mov
lret
add
fbstp
sarb
daa
pushf
cs
cmp
movsb
mov
lret
lods
movsl
jle
imul
out
lea
aad
cmp
and
pop
xchg
mov
cwtl
popa
add
es
in
adc
fnstsw
inc
push
inc
fidivl
out
call
and
fisubs
lock
ret
mov
ret
jne
dec
or
aam
pushf
fmuls
addr16
test
inc
xor
xchg
sub
xorb
sub
jae
adc
mov
nop
daa
push
out
push
jmp
fisubs
mov
jnp
mov
adcb
idivb
pop
mov
das
lret
mov
xchg
mov
iret
lds
inc
xor
jge
imul
test
insl
stc
hlt
add
adc
add
push
jmp
xchg
inc
scas
fcmovne
icebp
sub
ljmp
and
scas
push
imul
fcmovbe
pop
mov
xor
iret
stos
ljmp
push
adc
inc
fwait
jnp
aam
mov
mov
ljmp
push
dec
dec
mov
and
out
cmpsb
mov
leave
loop
pop
stc
repnz
int
mov
pop
inc
sbb
and
mov
jno
and
inc
mov
int
jl
andl
jb
mov
push
cmpsl
pop
adc
shlb
lock
rorb
sbb
push
mov
or
sarl
out
mov
ja
inc
mov
jmp
in
or
in
std
out
mov
inc
mov
or
ljmp
out
gs
pop
mov
mov
test
arpl
jl
clc
push
or
or
sub
push
ss
shrl
push
mov
cmpsl
das
jb
sub
xchg
sub
adc
fisubl
add
sarl
movsb
mov
adc
dec
out
leave
pop
mov
adc
mov
push
shlb
mov
pop
sub
cwtl
push
in
pop
out
xchg
outsb
mov
jae
and
in
fcoml
out
pushf
push
push
push
dec
loop
mov
stos
dec
das
push
insl
mov
adc
fldt
pop
ror
jb
and
sub
lods
inc
push
add
jns
mov
xchg
fucomip
or
aas
inc
mov
faddl
lods
subb
fbstp
jg
xchg
mov
arpl
mov
ret
in
push
stos
int
push
xor
pop
inc
int
xchg
stos
arpl
cmp
xor
bndldx
test
xor
and
mov
lret
mov
xor
mov
add
out
dec
out
cmp
insl
outsl
push
push
adc
mov
int
inc
popa
je
pop
popa
add
add
jns
mov
std
repz
nop
fbld
repz
sub
shl
and
mov
jle
jbe
mov
or
or
dec
push
call
shlb
push
mov
pop
mov
sbb
scas
outsl
xchg
shrl
push
push
popa
enter
mov
fnstsw
sub
clc
inc
cmp
test
dec
mov
lahf
in
mov
ljmp
aaa
rcll
aas
pushf
data16
cld
mov
sti
push
mov
jno
xchg
aas
mov
push
mov
mov
inc
jmp
imul
xchg
leave
pop
fcoms
sub
xlat
aaa
and
into
xchg
hlt
out
dec
pop
push
or
mov
add
cli
dec
sbb
imul
add
iret
sbb
mov
mov
and
jae
loopne
xor
or
add
sbb
xchg
push
xor
pop
fstpl
inc
sbb
dec
push
mov
pop
mov
cwtl
dec
dec
jne
sub
jae
inc
mov
or
mov
gs
into
mov
popa
in
pop
lock
jecxz
push
cmp
xor
pop
loope
aam
xor
or
shr
cwtl
and
adc
shlb
pop
shr
add
mov
je
dec
xchg
repz
lds
mov
arpl
xchg
mov
loop
rcrb
and
fmuls
je
shlb
je
xchg
mov
lods
xor
adc
mov
std
ja
or
push
dec
loop
jp
jecxz
xchg
sbb
mov
cmp
inc
das
test
iret
rclb
hlt
mov
cmp
daa
jmp
or
pushf
repnz
mov
addr16
subps
jecxz
add
mov
mov
cli
iret
jns
lods
jne
fwait
std
pusha
sbb
shll
mov
jge
jecxz
fldt
pop
mov
mov
mov
or
scas
push
rolb
in
mov
xor
mov
jge
rol
or
jecxz
dec
or
int3
stos
ret
mov
std
out
divb
js
xchg
xor
in
test
outsb
sub
out
scas
pop
jge
sar
andb
shl
pop
add
adc
pop
clc
xor
stos
add
push
mov
movsl
daa
cmpsl
mov
movsb
ret
pop
xchg
cwtl
jo
hlt
mov
dec
inc
in
push
mov
rol
mov
stos
push
xorl
jmp
imul
adc
aaa
xchg
xchg
repnz
or
daa
pop
stos
hlt
js
add
push
stos
jecxz
xchg
mov
push
enter
clc
test
mov
mov
jns
or
xchg
iret
or
and
xchg
xor
add
jnp
jp
pop
or
gs
or
call
in
test
or
out
andl
dec
fstpl
lock
push
jp
inc
pop
cltd
shr
aas
jmp
pop
int
stos
lret
fdivs
cmpsl
loope
sub
stos
out
insl
ret
sub
inc
dec
inc
lcall
es
addr16
mov
inc
adc
scas
std
xchg
imul
mov
or
daa
xchg
xchg
xchg
xor
enter
mov
adc
dec
push
loope
jo
scas
pop
stc
fpatan
popf
in
fnop
repz
pop
sub
sbb
out
pop
das
push
push
sbbb
cmp
aas
sub
stc
dec
shrl
xchg
scas
lods
or
adcb
in
inc
adc
outsb
addl
push
push
icebp
divb
inc
or
adc
dec
sbb
or
out
push
or
pop
fs
scas
push
or
mov
add
gs
out
push
sbb
je
out
shll
in
sbb
insb
cmc
add
dec
dec
js
mov
cmp
xchg
and
sub
test
mov
es
add
pop
xchg
dec
mov
mov
sbb
fimull
test
inc
add
adcl
pop
or
sbb
sub
push
add
mov
std
cmp
inc
dec
pop
lds
mov
jge
xchg
adc
js
pushf
dec
push
ret
sahf
inc
dec
and
test
push
mov
or
fucomp
ss
adc
std
cmp
push
in
sbb
cmp
fsubl
mov
pop
inc
aam
call
dec
adc
pop
fbstp
scas
adc
xchg
push
int
mov
cmpsb
mov
ljmp
push
xor
mov
jecxz
mov
aam
call
sub
adc
xor
inc
imul
fildl
loope,pt
cmpsb
and
ret
lret
jecxz
int3
mov
fsubs
fnsave
inc
push
lock
mov
pop
or
or
sub
popa
cmp
aam
ljmp
rclb
inc
fstpl
mov
fisttps
iret
cld
sbb
push
es
in
mov
data16
outsl
js
mov
sub
shlb
decl
jmp
ficomps
sub
and
or
push
lods
movsb
das
dec
mov
test
sub
or
cld
popf
popl
and
adc
cli
pop
sub
jo
dec
pop
pushl
cmp
jbe
out
iret
or
cmp
pop
xor
into
nop
mov
mov
xchg
or
out
push
pop
lcall
mov
lahf
cmp
ljmp
sub
xchg
and
je
fisubl
je
mov
lahf
mov
xor
scas
mov
inc
mov
sub
in
jnp
clc
sti
adc
xlat
jp
jle
cltd
jl
lods
iret
or
adc
mov
jp
and
mov
xor
jo,pt
xchg
mov
ret
dec
sbb
cmp
frstpm(287
xlat
xor
push
fdivs
mov
xchg
insl
and
adc
add
cmp
out
stc
pop
or
dec
mov
daa
inc
je
push
inc
cmp
inc
scas
movsb
dec
xchg
mov
popf
test
mov
lret
cmpsb
or
aam
add
adc
xchg
lahf
xor
call
clc
xchg
fdivr
mov
xor
cmp
dec
jnp
cmp
adc
movsl
push
dec
push
cmp
pop
lret
loop
cmpl
int
sub
pusha
ja
mov
sub
rcll
jno
add
cmp
outsb
and
aaa
sub
sub
xchg
jnp
lea
dec
into
lea
in
sbb
mov
push
push
inc
lahf
daa
jne
mov
sub
mov
and
mov
mov
dec
xchg
in
mov
jns
pop
pop
mov
mov
insb
jl
sahf
push
jne,pt
xor
or
add
add
sub
mov
fildl
mov
xchg
imul
insb
and
mov
je
das
pushf
dec
adc
dec
test
mov
ret
mov
ja
out
xlat
xor
jno
lds
push
jno
jae
ret
addr16
cmp
add
mov
cmp
push
mov
jle
push
pop
adc
aam
jb
repnz
cwtl
dec
dec
mov
pop
mov
inc
sarb
xor
add
pop
mov
es
mov
shlb
add
push
cmp
repz
or
dec
jp
cmp
iret
push
lds
dec
aad
icebp
in
xor
mov
stc
jg
aad
jnp
nop
mov
pop
inc
dec
lock
fistpl
jmp
dec
cmc
and
fstp
ror
adc
and
gs
enter
mov
push
mov
and
rclb
call
pop
in
sub
mov
shl
mov
clc
mov
sub
jnp
mov
push
or
push
decl
xchg
mov
shll
mov
in
jne
inc
aad
jmp
cli
mov
xchg
sub
mov
daa
mov
xchg
xchg
mov
dec
pop
jge
or
sub
inc
mov
aad
rclb
jo
push
pushf
pop
xchg
jbe
fistl
cmp
sbb
cmpsl
inc
pusha
xchg
jo
arpl
sbb
pop
add
leave
icebp
shll
inc
clc
cwtl
dec
rorl
jl
mov
or
mov
inc
pop
xchg
inc
jmp
andb
pop
cmp
arpl
push
sub
mov
or
pop
push
arpl
mov
push
scas
lods
jmp
stos
es
mov
push
imul
push
das
les
arpl
jbe
pop
mov
cli
test
in
xor
pop
rcr
insb
in
mov
pop
lea
push
pop
dec
push
aaa
or
cmp
mov
inc
xchg
mov
out
jle
daa
out
inc
sbb
or
xor
out
jl
jmp
outsl
daa
imull
jno
jp
adc
cltd
jge
push
jnp
cmpsb
scas
push
push
das
mov
int3
cmp
bound
inc
fldl
int
add
inc
add
jmp
cwtl
xchg
or
add
pusha
cltd
and
rorl
jnp
xchg
adc
mov
scas
lcall
ja
or
lea
add
lret
int
and
stos
adc
mov
divl
mov
xor
jae
push
push
mov
cmp
cltd
sti
std
fimull
test
sub
or
in
std
jnp
lds
xor
and
fs
and
jmp
loope,pt
rclb
aas
test
add
adc
pushf
imul
sbb
pop
pusha
push
out
test
leave
outsl
jo
int3
mov
insb
jge
daa
xlat
push
fistpl
xchg
rclb
imull
mov
daa
sti
repz
xor
pop
push
incb
das
mov
fimull
sub
push
inc
jmp
and
mov
lcall
popa
out
cwtl
sbb
popf
test
std
xlat
xchg
cmpsl
sarl
jmp
pop
or
and
test
xchg
xor
fldcw
sarl
sbbl
ret
testl
lret
mov
pop
fs
jb
jge
ret
add
int3
ret
in
sbb
outsl
mov
jp
shrl
shll
push
push
sahf
xchg
scas
cmpsl
add
inc
push
push
ja
test
out
mov
gs
mov
pusha
pop
or
insb
repnz
aaa
add
loope
jle
jne
and
mov
test
and
shl
xor
dec
sub
cmc
movsb
imul
push
lods
xchg
inc
xor
hlt
pop
int
cmp
insb
scas
fwait
pop
dec
js
sti
and
cmp
dec
jge
or
jg
or
imul
pop
mov
mov
cmpsl
cmp
or
mov
fbld
nop
icebp
icebp
pop
popa
add
pusha
add
pusha
mov
or
arpl
xlat
or
sub
xchg
mov
scas
sbb
push
sarb
xchg
fstpl
lret
stos
push
daa
xorb
xchg
sub
ss
scas
std
imul
and
push
push
in
or
push
shr
pusha
push
pusha
enter
rorl
in
sub
es
xchg
dec
adc
push
mov
pop
or
mov
insl
cmp
adc
test
xor
arpl
test
sbb
mov
push
aas
fprem
dec
adc
sub
adc
pop
iret
xlat
in
push
loope
enter
push
and
fcoms
in
loop
in
pop
call
cmp
sub
jo
jo
push
pop
xchg
les
mov
shll
idiv
xchg
mov
lods
push
inc
es
mov
adc
inc
dec
call
movsb
out
and
jecxz
test
mov
mov
loop
jae
jle
rcrl
lcall
call
loope
and
mov
add
psrlw
cli
inc
inc
sbb
and
test
jecxz
lret
jbe
cmp
cmp
mov
movsl
dec
and
sahf
ja
subl
repnz
lods
sbb
aam
jmp
push
arpl
rcll
jno
pop
pushf
sbb
movsb
mov
leave
rcrl
sbb
aad
repz
jmp
lods
mov
popa
inc
push
push
and
and
out
or
sbb
mov
fmulp
push
jge
sub
dec
xchg
adc
cmp
mov
test
sarb
ja
xor
ret
iret
popf
arpl
jg
mov
push
pop
mov
add
lds
insl
dec
scas
sbbl
jns
aas
jne
movb
cmp
in
test
lret
out
mov
in
cmp
faddl
fisttpl
lds
fcomip
int
popf
ja
icebp
pop
jns
xor
and
lret
and
push
mov
jmp
stos
mov
mov
aaa
or
xchg
inc
les
jmp
mov
dec
leave
jmp
mov
pop
pop
inc
aas
mov
sub
cwtl
or
ret
data16
push
or
mov
adc
rcl
jo
addb
mov
das
ja
es
outsl
inc
iret
inc
or
leave
and
int3
dec
and
xchg
lods
inc
mov
and
fistl
add
jge
or
mov
inc
pop
jo
dec
jecxz
repz
ljmp
and
mov
dec
push
ss
mov
xchg
imul
out
jecxz
cmp
or
xchg
es
aad
stos
pop
cmp
ja
out
call
loope
sbb
xor
mov
aaa
lret
cmp
sbb
sub
add
mov
sbb
mov
push
movsb
sub
jl
sbb
loop
xchg
xchg
lods
mov
dec
out
pop
nop
add
sub
inc
push
lods
sub
pop
cmp
and
jp
out
shlb
jecxz,pn
sub
xchg
ret
cltd
nop
cmp
dec
pop
sbb
and
test
insb
out
xor
aad
data16
dec
adc
xchg
sbb
jmp
lock
cmpb
pop
out
or
mov
mov
fadds
scas
lahf
loop
rcrl
in
adc
addr16
lds
sub
jbe
flds
xchg
jae
xlat
stos
lods
data16
stos
pop
adc
xor
adc
cwtl
cmp
jno
mov
xor
or
movsb
pushl
aaa
loop
js
lret
mov
dec
add
mov
scas
dec
or
xchg
and
out
rcll
ljmp
pushf
and
aam
call
mov
dec
jmp
adc
or
cld
hlt
cmp
scas
cmp
loope
mov
jle
scas
adc
ljmp
dec
cmpb
cmpl
icebp
push
ss
ja
inc
lods
add
neg
sbb
mov
fimull
repnz
scas
insl
xchg
popa
xlat
push
xchg
dec
xor
inc
xchg
fmuls
icebp
jo
cmp
xor
xchg
jge
pop
inc
xchg
cmp
mov
jae
test
sahf
ljmp
dec
stos
dec
pop
cmp
jg
rcrl
icebp
and
or
fs
xchg
lds
outsl
jno
jns
clc
pop
lcall
cmp
movsl
and
in
jb
js
xor
dec
test
xchg
xchg
dec
cmc
add
add
fmul
jmp
xor
mov
push
xor
aaa
push
xchg
push
adcl
sbb
sbb
mov
dec
movsl
jecxz
fmuls
jg
push
add
and
movsb
xor
sub
jmp
arpl
or
out
pop
xor
xor
jb
das
jmp
add
sub
fst
mov
mov
les
in
xor
repz
cwtl
xchg
pop
or
in
sbb
mov
fadds
jo
lret
sub
sti
push
pop
jns
addr16
xor
and
aas
cmpsb
filds
loope
or
mov
xchg
mov
mov
rorb
scas
pop
sub
pop
mov
daa
popf
dec
in
push
xchg
ret
sub
adc
jno
mov
add
test
js
push
mov
ficompl
mov
out
jecxz
inc
pop
mov
fisubs
stos
pusha
out
dec
mov
fadd
adc
fcoml
xor
pop
in
dec
call
lods
xchg
and
pop
pop
dec
pop
les
pushf
lcall
sub
jge
sarl
flds
inc
les
jbe
xor
sarb
pop
imulb
enter
push
pop
push
xor
jae
jnp
orl
push
jecxz
je
sub
sub
and
lcall
mov
mov
les
sbb
adc
imul
rolb
imulb
inc
push
loope
adc
ror
outsb
ljmp
jns
fabs
cmp
dec
popf
fistpll
mov
es
push
and
adc
mov
add
jb
mov
cmpsl
loopne
mov
lock
addr16
les
fiaddl
mov
punpckhbw
addr16
movsl
arpl
sbb
pushf
sub
mov
movsl
adc
bound
xor
mov
clc
and
mov
imul
adc
js
dec
xchg
jp
inc
xchg
dec
loop
sub
std
cmpsb
ja
xchg
loope
shll
outsb
fcom
lcall
test
xor
lea
pop
scas
inc
lahf
dec
and
adc
sahf
sbb
test
xchg
jnp
sub
xchg
xchg
xchg
aad
dec
pusha
fs
xchg
xchg
pop
orl
pop
or
data16
and
push
int3
jp
pop
mov
jmp
icebp
cs
pushf
lods
lret
push
cmp
push
fnstcw
js
xchg
push
pushf
dec
xor
mov
xor
xor
xchg
jp
popf
sub
xor
repz
testl
insb
inc
jg
fimuls
sub
enter
inc
mov
sub
pop
jns
dec
mov
dec
xchg
les
mov
mov
add
clc
mov
add
or
mov
jl
scas
imul
jae
sbb
jg
add
test
jb
fdivl
push
inc
hlt
jb
dec
js
shl
aad
mov
fcom
enter
aas
and
inc
and
aad
lock
add
mov
jae
dec
fs
popf
jp
pop
test
push
int
add
lds
stos
leave
jae
jne
adc
fs
adc
cli
pop
jl
minps
xchg
aas
hlt
pop
je
subps
and
mov
mov
leave
sbb
divb
jecxz
add
xor
cmp
lds
or
dec
je
movsb
inc
ret
pop
push
mov
xchg
or
out
fsubr
call
fs
stos
xor
in
jge
mov
aas
filds
mov
pop
mulb
out
inc
sub
pushf
sub
cwtl
mov
leave
das
stos
cmpsl
adcl
jle
sub
jb
pop
insb
xor
movsb
ja
or
in
sbb
mov
jbe
lret
mov
add
mov
pop
pop
cmp
dec
scas
ds
test
bound
cmp
out
scas
mov
sbb
pop
push
jmp
mov
sbb
inc
orl
shlb
or
xor
inc
ds
pop
adc
cmc
cmp
insb
ret
cld
loop
mov
jle
dec
mov
xchg
xchg
sbb
pusha
cmpsb
test
imul
out
andb
jp
cmp
push
lret
movsl
sub
adc
mov
repnz
in
jge
xor
pop
mov
jmp
pop
adc
mov
sbbl
jle
dec
mov
cmpsl
mov
cmp
in
xchg
jmp
out
xor
dec
push
add
cmp
or
ret
jmp
dec
icebp
cmpsl
mov
lret
sbb
mov
lea
cs
xor
pop
pop
daa
mov
scas
sbb
loopne
xor
rorl
or
jge
cli
fwait
arpl
incb
and
mov
mov
rcll
sbb
ja
scas
daa
inc
add
adc
xchg
adc
les
push
loop
insl
in
mov
cmp
ljmp
jbe
ljmp
ret
jno
push
inc
xchg
or
addr16
movsl
or
sub
js
and
add
inc
outsb
pushf
push
pop
dec
insl
es
or
xchg
ret
cld
in
lcall
nop
xchg
jo
sbb
ljmp
dec
jbe
push
cld
mov
jge
mov
test
mov
cmp
in
and
push
cs
jo
cwtl
gs
enter
cwtl
pusha
sbb
shl
push
jnp
stc
fsubs
xor
add
rcrb
adc
sti
cli
xorb
xorb
ficoml
dec
out
lds
pop
xor
icebp
sarl
outsl
xchg
push
push
add
pop
inc
scas
cmp
xchg
xor
adc
sbb
mov
cmpsl
inc
les
stos
fmulp
and
mov
icebp
stc
int3
jae
fisubrl
jne
xor
repnz
sbb
xlat
repnz
cwtl
cltd
insl
lods
cs
in
ss
cli
inc
dec
lds
lods
rol
mov
popa
cmp
lea
dec
das
lock
clc
ficoms
pushf
sub
lret
jae
sti
push
sbb
pop
sub
repz
sbb
dec
inc
mov
lret
sbb
pop
test
push
xor
or
xchg
test
mov
bound
insl
add
rcrb
fisttpl
lret
cmp
out
subps
call
lret
fsubrs
cs
push
jmp
js
adc
insl
pop
insl
adc
add
and
sub
jne
jle
mov
xchg
push
pop
mov
mov
in
jecxz
ja
out
sbb
test
aaa
shrl
sub
data16
push
pusha
add
fcmovbe
fiadds
fistl
or
jns
mov
sbb
add
jecxz
in
shll
mov
adc
jae
mov
jmp
aam
imul
xor
repz
andl
and
cmp
arpl
mov
dec
bound
mov
imul
nop
fmuls
xchg
xchg
mov
iret
jp
adc
data16
mov
lock
sbb
mov
mov
xor
mov
push
add
lret
xchg
jp
mov
sbb
inc
out
xor
xchg
sahf
pop
out
pop
jle
add
aaa
xchg
xchg
or
imul
das
adcb
outsl
jmp
int
rorl
int3
jmp
mov
adc
dec
and
iret
adc
je
xchg
dec
push
adc
popa
jecxz
ja
mov
mov
xor
adc
pop
daa
add
adc
jns
mov
pop
or
mov
jl
outsb
mov
icebp
aas
and
inc
gs
stc
loopne
adc
icebp
cmp
pop
xchg
scas
mov
lcall
decl
mov
mov
fnstcw
cmp
imul
inc
xor
fcoml
mov
xchg
cltd
xchg
mov
pop
addr16
test
cmp
push
xchg
and
test
hlt
ss
out
push
cmc
and
mov
int3
popf
out
mov
mov
mov
imul
repz
xor
in
daa
jne
out
pushl
fwait
enter
pop
mov
mov
lret
add
cld
jo
xchg
in
stos
jo
add
movsl
pop
cmp
sbb
sub
cmpl
call
push
or
rcrb
cmpsb
lock
xor
lahf
stos
popf
popf
mov
jecxz
pop
or
or
sub
fs
cmp
mov
sbb
xchg
outsb
testb
fsts
adc
rcr
cmpsb
push
inc
xor
insb
call
pop
imul
mov
lock
dec
xchg
out
lock
inc
je
test
imul
jno
adc
scas
lods
addl
add
ss
enter
xchg
sub
insl
jb
xchg
cmpsl
popf
xchg
lcall
pop
cmp
pop
push
test
adc
pop
js
add
inc
mov
xchg
jecxz
or
stos
and
cmp
je
pop
enter
add
mov
rorl
push
jnp
insl
cli
jne
add
ljmp
pusha
mov
mov
ffree
fs
push
cmpsb
and
jl
push
arpl
stc
or
shll
bnd
push
out
test
repz
pop
clc
xchg
loopne
adc
and
push
inc
addr16
nop
jne
mov
push
out
add
enter
ret
inc
testb
push
pop
movsb
add
push
aad
and
jns
sbb
mov
mov
outsl
je
push
cmp
mov
loope
add
test
sub
adc
leave
scas
or
mov
and
or
lret
push
stos
ja
push
add
hlt
dec
sub
rclb
cmp
je
pusha
lods
push
repz
test
loopne
pop
fcmovnu
add
dec
movsl
out
mov
or
enter
lds
pop
push
shrl
loopne
adc
pop
lds
lods
pop
dec
ljmp
cmp
repnz
inc
dec
test
push
rcrl
in
fsub
and
fwait
cmpsb
testb
fcmove
loop
out
test
jle
bound
ret
std
hlt
and
mov
les
or
jo
cli
outsl
jecxz
cmp
fnsave
jge
frstor
cli
mov
fstpl
mov
or
or
rol
sub
ret
cmp
push
roll
aad
mov
mov
or
fs
xchg
inc
imul
stos
mov
cmpb
mov
pop
and
fs
mov
loopne
pop
fimull
test
fwait
call
fisubl
cmpsl
and
std
cmp
mov
adc
xorl
test
roll
dec
pop
ss
mov
xchg
pushf
testl
sarb
rclb
rcrb
divb
pop
push
adc
icebp
mov
loopne
push
push
es
xchg
jb
mulb
cs
lcall
div
int
enter
rcrb
in
iret
int3
dec
and
stos
mov
ror
and
mov
dec
jne
negb
cld
fimuls
mov
jb
xchg
mov
jnp
stos
sub
mov
stos
jae
cmp
inc
cmp
pop
outsb
mov
in
mov
pop
out
lock
pop
cmp
inc
das
add
bound
stos
cmp
mov
sbb
ds
pusha
and
fwait
jmp
into
clc
stos
jb
cli
cmp
jl
lods
mov
xchg
inc
jno
push
retw
ss
mov
xchg
mov
cmp
jns
or
and
ss
jns
xor
repnz
add
xchg
mov
ret
outsb
push
movsl
into
sub
mov
push
jno
mov
ror
aaa
inc
pop
mov
adc
roll
jg
push
stos
lcall
xor
jp
in
mov
mov
lods
add
out
pop
enter
in
flds
add
add
inc
jno
sub
or
repnz
test
sarl
mov
nop
sub
lods
enter
int3
dec
mov
cmc
in
sub
mov
cmp
out
and
pusha
ficoms
in
pop
mov
cmp
enter
lds
imul
rcll
adc
push
sub
mov
cmpsb
fcoms
adc
lea
aad
movsl
push
mov
cmpsl
faddp
cmc
xchg
das
jp
jmp
inc
rcrl
or
dec
stc
lea
subl
cmp
add
cltd
push
pop
sub
or
mov
fstpt
js
or
jb
aaa
rcr
adc
lret
mov
ljmp
xchg
push
jge
xchg
and
shll
arpl
movsb
fmull
or
popf
xor
fisubl
push
dec
or
adc
add
pop
pop
xchg
jle
fcomip
xchg
xchg
popa
add
mov
mov
aad
repz
pop
or
or
or
nop
data16
dec
adc
fbstp
bound
jp
cmp
mov
fnstcw
sbb
add
mov
mov
adc
add
fistpl
mov
out
inc
jno
out
ss
add
cmp
mov
pop
jnp
push
xchg
pop
insb
cwtl
pop
jnp
mov
out
xor
test
in
les
sbb
lahf
or
add
fbstp
dec
jae
dec
pop
in
jl
mov
pushf
loopne
jae
jl
or
pusha
cmp
rcr
mov
lret
repz
adc
arpl
cmp
out
cs
rclb
imulb
mov
push
in
mov
jae
mov
inc
jnp
pushl
shlb
xor
jb
jbe
cmp
stos
loop
into
rcrb
fs
imul
leave
fists
hlt
mov
clc
jne
add
dec
insl
cmp
aas
sbb
mov
cwtl
pop
dec
inc
pop
test
hlt
cmp
jl
cmp
adc
aad
addr16
sbb
mov
push
repnz
jbe
cltd
pop
dec
subb
xor
or
mov
and
xor
sbb
mov
jns
mov
sub
jno
dec
fmul
jae
sub
std
iret
jb
cmc
out
and
xchg
adc
mov
pop
ja
fcoms
and
inc
jge
or
mov
jnp
lds
idivb
and
adc
stos
insl
lahf
int3
xchg
sbb
rol
push
push
mov
mov
sub
fwait
outsl
int3
sbb
sbbb
push
xor
xchg
inc
stos
ds
ja
mov
mov
mov
lods
push
push
scas
fchs
mov
repnz
xchg
push
into
pop
fldl
popa
inc
inc
nop
sbb
push
mov
inc
lock
dec
sbb
out
fcomip
jge
out
cmp
cmc
or
ficoms
repnz
mov
or
stos
fstpl
jl
fcomps
dec
push
fs
mov
sbb
notb
outsl
stos
mov
ficomps
pop
mov
jo
mov
dec
jnp
dec
les
sahf
pop
pop
arpl
add
and
inc
stc
mov
mov
jno
in
sub
xorl
mov
jle
aad
xlat
popa
jp
scas
mov
jecxz
hlt
div
repnz
ja
scas
imul
lret
dec
cmp
mov
push
adcb
pop
sbb
dec
in
cwtl
push
ret
es
es
shrb
pop
or
mov
jnp
aam
adc
xchg
std
xlat
ljmp
sub
iret
fstl
jb
addr16
out
das
inc
jne
invd
sub
divl
hlt
mov
neg
jno
fcomps
inc
dec
add
mov
cs
popf
lods
cmp
cwtl
add
pop
xor
pop
cmp
or
outsb
dec
mov
aad
inc
adc
cltd
mov
jl
xchg
cwtl
inc
mov
fildll
mov
sub
out
jle
int
jns
mov
cmp
movsl
xor
push
movsl
pop
shlb
push
inc
cmp
xchg
fsubs
testb
stos
shll
jns
xlat
insb
pushf
sbb
mov
out
mov
popa
call
ja
rep
jae
mov
mov
iret
or
lds
cmp
movsl
mov
idivl
fisttps
inc
mov
sbb
push
shll
jg
out
lods
xchg
xchg
mov
mov
push
outsl
cmc
pop
cs
mov
cmp
add
idivb
std
add
addr16
scas
mov
sbb
pop
outsl
and
pushf
jg
mov
mov
popa
in
test
and
mov
mov
cli
pop
adc
dec
inc
xor
mov
mov
adc
mov
out
mov
das
lods
addr16
inc
imul
push
xchg
push
fdivl
aad
ret
xor
arpl
negl
outsb
stos
or
pop
push
cwtl
xchg
sti
stc
cmp
out
test
xchg
sar
sub
das
cltd
pop
imul
sbb
lret
push
jmp
push
aaa
dec
xor
adc
add
jae
jmp
out
or
mov
xchg
jecxz
jmp
or
lods
adc
lret
sarl
addr16
adc
jp
pushw
mov
xchg
js
mov
mov
das
cmpsl
pop
xchg
or
add
lds
mov
mov
ljmp
sub
lds
mov
jns
lds
je
mov
stos
dec
popa
mov
xor
mov
sysret
dec
test
out
push
enter
sub
stos
aam
scas
mov
enter
mov
fcoml
pop
dec
nop
or
mov
stos
daa
sub
cmp
lahf
aad
mov
shll
adc
lahf
sub
lcall
pop
sarb
push
rorb
inc
mov
cmpsl
cmp
mov
pop
insb
shlb
bndldx
sti
fistps
data16
or
push
scas
push
and
jge
add
mov
jne
imul
shlb
push
sbb
shl
addr16
arpl
mov
push
arpl
fcomp
cmp
sbb
movsb
pop
shr
rcll
jbe
hlt
and
rcll
aas
out
xchg
daa
push
xorl
dec
xchg
dec
inc
test
test
sbb
out
movsb
dec
ficomps
sub
addr16
mov
push
jmp
lods
push
sbb
jno
jb
xor
jb
pop
cmp
lods
pop
pop
js
mov
in
and
shlb
xor
daa
jmp
jne
mov
repz
xlat
xchg
test
mov
pushf
inc
sbb
jbe
xor
mov
lods
inc
ja
add
xor
cli
pusha
inc
mov
js
std
sbb
mov
inc
decl
sub
dec
icebp
sbb
iret
out
dec
in
ret
sarl
ja
ret
test
push
push
jns
pop
sub
popf
popa
push
sarl
and
mov
xor
adc
pop
notb
sti
lret
pop
pop
leave
xchg
sbb
mov
and
sti
notb
mov
pop
repnz
ljmp
fwait
nop
popa
inc
out
and
and
cld
test
jmp
lods
and
xor
das
stc
push
mov
sbb
xchg
dec
push
or
dec
mov
les
addl
nop
pop
fcompl
pushf
sbb
lret
push
pop
or
pop
jg
xchg
loope
sub
dec
ss
or
out
in
or
enter
add
dec
mov
inc
ds
xchg
sti
lods
push
mov
jp
push
arpl
adc
mov
out
jp
push
and
xchg
test
inc
arpl
test
mov
out
jae
push
mov
pop
dec
mov
frstor
test
push
inc
decb
adc
incb
rorl
jle
adc
into
fistl
movsl
lret
outsl
add
xchg
pop
aaa
out
loopne
inc
add
pop
and
xchg
jmp
sub
cmp
add
xchg
cs
cmp
les
test
negb
mov
sub
mov
sbb
inc
lahf
gs
dec
stos
ficoms
push
and
ss
push
push
cwtl
hlt
mov
or
mov
test
jnp
imul
pop
mov
fcomps
mov
push
or
sbb
sbb
and
mov
mov
pop
push
inc
or
out
push
cwtl
inc
pop
jne
xor
rolb
cmpsl
lea
mov
cmpsb
loop
popa
add
nop
mov
and
dec
lret
xchg
sbb
inc
cwtl
add
jbe
and
pop
rcll
call
mov
push
pop
mov
sub
jg
loope
insb
or
xchg
xchg
ss
mov
pop
adcl
iret
sub
add
push
push
or
fnstsw
out
mov
lahf
outsb
cmpsl
mov
pop
jnp,pt
iret
dec
xlat
cmp
cmpsb
faddl
or
xchg
or
sbb
out
rcrl
adc
sub
cmp
jge
pop
sub
pop
cmp
mov
push
jbe
adc
sbb
mov
mov
inc
push
push
mov
xchg
lds
mov
jno
enter
pop
jecxz,pn
inc
call
in
test
outsb
stos
pop
js
mov
stos
jne
jle
push
mov
mov
lock
push
movsb
mov
adc
adc
enter
loop
mov
and
xchg
cmpsl
fisttps
push
cli
stos
sub
sbb
mov
outsl
mov
xchg
pop
jle
xor
div
adc
fwait
rorl
cmp
mov
outsl
shll
adc
jne
enter
xlat
test
mov
hlt
push
and
ficoml
jg
orb
jmp
push
mov
into
mov
lods
lahf
imul
out
ja
mov
jbe
cmpsl
mov
xchg
hlt
cli
call
js
test
adc
data16
icebp
cmc
call
xor
leave
jo
inc
inc
sti
test
psrlq
push
and
dec
dec
in
out
sbb
sbb
loop
xchg
mov
jge
call
addb
dec
roll
fucomi
mov
xchg
je
cmpl
pop
inc
sub
cmp
dec
add
shrb
aas
push
mov
mov
fmul
pop
data16
sub
push
push
push
lock
dec
pop
jb
and
int3
jl
cmp
sbb
mov
inc
pop
cmpsb
jle
adc
mov
inc
cs
data16
ljmp
add
andl
rcrl
xor
mov
in
mov
mov
mov
sbb
mov
xchg
xchg
int3
cmpb
cld
mov
jl
out
adc
stos
jp
adc
push
mov
cmp
fdivrl
cltd
sbb
sahf
xlat
rcll
mov
inc
rclb
and
ljmp
push
es
sub
mov
adc
ljmp
fcmovu
xchg
rorb
out
insb
fs
push
sub
or
pop
sub
mov
movsb
inc
mov
push
fcmovb
rorb
test
or
jmp
test
les
jne
adc
sub
scas
or
cmp
leave
fucomp
pop
pop
pusha
jmp
cmpsl
es
addb
stos
mov
in
addr16
xchg
xor
popf
pop
ss
inc
push
xchg
test
ljmp
fisubl
test
add
xor
push
sbb
mov
dec
jge
pop
cltd
and
add
cmp
fisubs
sub
in
stos
nop
sbb
mov
les
enter
sarl
jns
lock
jb
scas
inc
pop
push
cwtl
push
mov
sbb
cld
cmpsl
sbb
int
popf
dec
hlt
push
xchg
movsl
and
std
ss
je
jo
mov
loope
dec
les
or
or
out
push
lea
and
push
mov
repnz
inc
dec
lahf
lcall
movsl
push
dec
test
push
sbb
push
ret
lret
in
inc
insb
aas
pop
cmp
in
mov
jp
rcll
ljmp
repz
ret
xor
add
loopne
mov
mov
pop
aaa
loope
jnp
mov
shl
mov
shlb
imulb
push
jl
add
xchg
nop
mov
lds
inc
out
xchg
cli
mov
ffree
fnstcw
fsubs
dec
pop
stos
loope
stos
inc
std
cmp
stos
mov
lods
hlt
inc
in
pop
in
repz
dec
aaa
popl
call
pop
xchg
stos
shll
daa
dec
jb
and
push
pusha
test
or
je
inc
fwait
test
inc
nop
bound
test
push
cmp
fwait
lds
jecxz
sbb
subl
xchg
xlat
add
xchg
mov
test
jecxz
shlb
into
inc
xchg
sbb
inc
cs
data16
and
in
mov
lcall
ljmp
mov
roll
fdivs
aam
jle
rcll
scas
test
jg
sarl
fists
inc
mov
lret
fildl
pop
dec
push
cld
xchg
fcmovb
shll
or
pop
jecxz
inc
mov
aam
mov
cs
add
dec
lock
jle
cmpsl
or
mov
sub
popf
push
shrl
insb
sub
ds
jp
repz
and
cmp
inc
add
xchg
hlt
jnp
lret
dec
int
nop
jne
mov
mov
cmpl
lret
or
movq
jbe
pop
pushf
rcll
inc
mov
mov
add
ret
jbe
aad
fists
ss
movsl
sub
stos
insb
stc
test
add
xor
push
repz
adcb
mov
in
addw
add
xchg
js
subb
mov
jle
loope
das
in
out
sbb
adc
inc
fwait
imul
rol
push
or
cs
sub
xor
push
dec
ds
inc
aad
das
scas
mov
mov
stc
loope
clc
sbb
fistl
iret
mov
bound
repz
mov
lods
sbbl
sbb
stc
out
inc
xor
sub
jecxz
bound
mov
test
jg
leave
xor
nop
sbb
fidivl
mov
pop
inc
push
mov
mov
test
push
loopne
outsl
xchg
sub
cmp
push
push
daa
mov
ror
icebp
divl
sbb
cwtl
int
andl
jmp
sub
lock
rclb
jne
subb
lret
out
pusha
jp
getsec
push
nop
inc
cmp
adc
addr16
mov
or
adc
stos
mov
scas
out
subl
rcll
xchg
jnp
xor
bound
and
fadds
sarl
mov
je
pop
mov
mov
jne
pop
icebp
sub
mov
xlat
push
inc
test
imul
sarb
int3
push
nop
inc
push
xor
pop
mov
inc
aam
lods
out
mov
xchg
test
rcll
addr16
jns
aaa
out
adc
jmp
jp
lahf
sub
or
xchg
add
call
cmp
mov
mov
adc
lock
dec
sub
push
or
jle
dec
jbe
cmp
fnstenv
sub
cmp
shl
mov
sub
pop
cmp
outsl
xchg
xor
jge
cmp
fwait
mov
push
shll
or
dec
xchg
loope
sub
pop
pop
and
lahf
fwait
andb
fsubl
jl
sbb
bound
scas
push
jbe
xchg
lods
mov
mov
sbb
add
or
mov
push
ret
idivb
hlt
int
lods
cmp
jp
cwtl
inc
stc
dec
icebp
jp
jno
addr16
inc
shl
int3
jecxz
repnz
lahf
mov
cmp
enter
xchg
push
lds
adc
ret
idivb
ret
cmpl
rcll
mov
outsl
push
sub
xchg
stos
into
mov
mov
jns
arpl
fcoms
sub
cmp
imul
mov
jp
fsubrl
mov
dec
jnp
inc
inc
xchg
mov
addr16
out
sti
xor
mov
pop
jne
lods
dec
ret
insb
mov
jne
loopne
out
cmp
fucomp
ss
nop
xchg
push
pop
pop
xchg
xlat
mov
xchg
dec
insl
ja
push
fnstenv
jno
sub
lods
pop
mov
stos
sub
jnp
sub
dec
mov
and
popf
aad
in
mov
subb
gs
imul
movsb
in
test
inc
xor
lds
in
fiadds
cmc
imul
loop
repz
ja
jp
sub
stc
mulb
xchg
adc
stos
pop
mov
sbb
leave
xchg
pop
pop
pminsw
mov
jb
sub
inc
loop
je
mull
insl
repz
fistl
int
scas
jbe
lcall
pushf
es
daa
dec
pop
outsb
inc
les
inc
and
mov
movsl
mov
shll
rorb
or
cmp
inc
cli
out
call
push
popa
cmp
ss
pop
aad
sbbb
xorb
int
mov
xchg
das
or
push
pop
mov
inc
pop
add
mov
sbb
adc
sub
push
and
repnz
mov
lods
push
out
jl
mov
adc
ljmp
mov
mov
add
push
bound
out
sub
adc
shlb
lods
xchg
cmp
popf
cmp
scas
mov
push
mov
ja
adc
push
push
mov
xor
mov
push
test
push
xchg
adc
popf
rorb
xlat
out
sbb
dec
mov
inc
in
jg
clc
insb
fucomip
add
in
mul
xchg
fiadds
movsb
cmp
pop
mov
jnp
in
add
mov
popa
mov
xchg
push
call
xchg
pop
testb
mov
fsubrl
sbb
push
popl
repz
out
jno
jnp
inc
shlb
gs
outsb
dec
mov
adc
cmp
push
mov
cmp
add
push
jns
xor
fistpl
sbb
nop
push
shrb
adc
xor
mov
add
mov
outsl
xor
hlt
dec
das
mov
dec
xchg
sub
xor
cmp
in
cmp
inc
xchg
jno
scas
fstps
cmc
movsb
std
mov
insl
mov
stos
cmpsl
testl
lret
daa
push
imul
mov
push
add
push
sbb
shrb
stos
pop
arpl
test
aaa
lods
jecxz
sub
cmp
jge
mov
aam
in
push
xchg
sub
mov
testb
jnp
pop
or
inc
data16
fists
das
fsubs
push
mov
leave
es
js
inc
jns
mov
mov
mov
jmp
pop
dec
push
cs
call
sbb
lds
call
jp
gs
scas
mov
imul
arpl
sub
mov
mov
mov
std
mov
pop
jae
divb
lret
repz
js
mov
repnz
cli
in
loope
call
dec
pushf
sub
sar
sbb
sub
lds
popf
xchg
mov
repz
mov
out
in
mov
dec
dec
pop
mov
aas
xor
cli
dec
icebp
inc
fistl
int3
inc
rcll
xor
popf
xor
fwait
popa
mov
movl
add
pop
pop
push
add
mov
xchg
cwtl
add
cmc
xor
sbb
push
pop
repnz
test
and
adc
iret
rcll
inc
movsl
or
sbb
mov
sarl
shlb
xchg
push
out
jo
jmp
push
push
mov
cmp
ds
inc
xor
insb
mov
cmp
mov
sbb
or
cli
cmc
xchg
push
cs
movsb
add
sub
cmpsl
scas
nop
cmp
mov
outsb
xchg
rcl
lcall
cmc
ret
xchg
rolb
out
xchg
jb
aas
rorl
into
sub
cmp
fst
ljmp
jne
mov
xor
and
outsb
dec
inc
jle
pop
xor
push
fs
inc
lahf
cld
cs
fs
xchg
loopne
push
test
dec
daa
and
jno
andl
ficoms
mov
mov
lret
jno
xchg
xchg
pop
dec
cmp
decb
xor
mov
sbb
scas
movsl
jno
jl
je
and
xchg
ror
push
sbb
movsl
lods
arpl
cmp
xchg
ss
cmp
mov
repz
sub
mov
ds
add
pop
mov
cmpsl
jg
inc
cmp
mov
in
clc
imul
sbb
mov
adc
es
cmp
add
pushf
sbbb
das
pop
rcl
aad
mov
test
dec
pushf
test
out
decb
xchg
pop
inc
xchg
mov
lret
and
inc
mov
stos
push
adc
mov
dec
mov
xchg
idivl
pop
mov
jmp
mov
jecxz
pop
push
sahf
mov
push
nop
and
pop
sti
mov
movsb
aam
pop
lods
leave
or
sbb
in
out
iret
jno
fcoml
mov
fdivrs
mov
shll
or
aad
pop
sar
add
mov
push
cwtl
scas
mov
sub
mov
mov
cltd
pop
mov
fucomi
fmul
pop
and
sbb
gs
fdivrs
add
lret
std
test
push
or
or
loop
dec
mov
xor
xor
loop
add
mov
fs
lock
fstpt
xor
push
ffree
movsb
call
jno
fwait
sbb
xchg
std
xchg
mov
fidivrl
adc
cltd
in
jecxz
clc
imul
add
sbb
loope
cwtl
sub
jnp
pop
adc
mov
rclb
add
mov
xorl
aaa
mov
mov
xchg
mov
stos
int3
push
adc
cmp
pop
xchg
int
sbb
sub
mov
adc
mov
cs
es
dec
jecxz
test
ret
adc
or
mov
jg
into
dec
jg
mov
outsb
out
sarl
inc
inc
mov
divl
inc
pushl
add
pop
loop
mov
repz
mov
mov
jmp
sahf
cmp
sub
adc
cwtl
out
push
testb
push
pusha
jne
jg
bt
movsb
bswap
jp
stc
scas
test
push
mov
push
arpl
xor
pushf
fidivrl
jnp
dec
daa
cli
jne
insb
mov
dec
mov
andl
insl
hlt
mov
dec
xchg
rol
pop
add
std
inc
sbb
out
mov
and
mov
add
and
or
pop
xchg
or
out
jle
cmpsl
movsb
pop
jb
mov
jbe
in
mov
pop
lss
fnsave
fsubrl
sub
jmp
popf
push
xor
pop
mov
rolb
inc
push
xchg
mov
xorl
jae
enter
mov
xor
out
stos
repz
dec
jl
pop
scas
inc
jecxz
stos
iret
psubusw
stos
add
xchg
pop
cltd
sub
mov
rcrb
jle
mov
add
leave
in
xor
cltd
sti
dec
mov
inc
sahf
xchg
cmp
data16
lock
push
shlb
jae
or
push
pop
xor
inc
fsubrl
imul
xchg
mov
lret
cltd
mov
ret
dec
dec
aaa
out
movsb
ficoms
pop
mov
xor
out
out
jg
loop
xor
mov
xlat
call
jecxz
aam
andb
jp
shlb
faddl
pop
mov
rcrl
dec
jecxz
je
or
pop
addr16
mov
rolb
sub
aam
call
sti
stos
sub
inc
jl
jns
test
mov
in
ret
imul
push
aaa
out
cli
pop
arpl
aaa
mov
or
mov
les
insb
testb
xor
loopne
popa
cmpsl
pop
mov
xchg
shll
adc
test
mov
inc
push
fstl
push
test
pusha
and
out
cmp
into
xor
mov
iret
aad
mov
dec
mov
movsl
sub
popa
pop
fwait
lret
cltd
pop
fcomp
or
jo
std
les
dec
loope
inc
cld
sub
jnp
les
icebp
cmp
push
pop
popf
mov
fs
xchg
cmp
ss
aaa
js
outsl
sbb
mov
sub
cmp
lcall
xor
jle
inc
jmp
jno
dec
inc
ror
push
pop
dec
push
push
roll
xchg
inc
mov
cmp
in
cld
insb
jp
cmp
xchg
inc
inc
lds
add
ds
add
add
shl
xchg
in
xchg
jmp
jg
add
pop
adc
ret
loop
lds
mov
push
int3
bound
sti
lock
fldcw
clc
int
movsbl
jmp
cld
pop
pop
fcomps
loope
mov
push
shlb
bnd
rcrb
mov
aad
call
fdivr
dec
jbe
sub
mov
es
pop
repnz
inc
lods
adc
dec
mov
mov
cmp
lds
shll
mov
jge
adc
fnsave
arpl
dec
dec
jnp
leave
sbb
movsl
scas
push
pop
xor
jp
pop
jno
mov
call
inc
mov
mov
adcl
cli
or
loope
cmpsw
shlb
push
insl
push
push
sbb
je
adc
or
cmp
shlb
dec
xor
mov
cs
mov
bound
cmpsl
xchg
mov
cmp
lcall
in
test
push
mov
xor
test
loope
push
cmpsb
insb
ljmp
call
ror
movsb
sbb
pop
cmp
pop
addr16
adc
dec
jns
js
jp
and
adc
pop
negl
mov
mov
sub
xchg
ret
cmp
sub
inc
stos
clc
mov
mov
loop
inc
shlb
dec
icebp
imul
jecxz
mov
push
out
jp
je
inc
dec
inc
sub
xchg
jnp
fsubrs
sbb
mov
icebp
mov
cmpxchg
xor
mov
cmp
lea
add
push
aaa
xchg
insl
pop
jmp
fsubl
xchg
data16
sti
jnp
ss
add
push
jb
mov
inc
inc
push
dec
sub
push
arpl
jg
pop
jo
mov
ja
xchg
mov
push
arpl
shl
mov
ds
lds
iret
mov
jge
outsl
and
stc
inc
jae
daa
cmp
movb
or
into
mov
lods
int3
lahf
xchg
ficoms
mov
vpsubq
shrb
nop
iret
inc
mov
iret
xchg
xchg
sbb
mov
or
and
mov
mov
nop
adcl
mov
sbbl
int3
into
fldl
pop
call
inc
les
rclb
adcb
sbb
xchg
cld
aad
repnz
sub
pop
mov
iret
cmp
dec
movsl
out
dec
iret
insl
insb
push
imul
push
in
jge
iret
inc
dec
pop
dec
adc
lock
into
or
push
mov
push
addr16
xor
add
push
fdivrs
repnz
jmp
inc
push
push
cmp
fisubrs
ja
lcall
jo
mov
sbb
cld
je
in
mov
shl
mov
mov
mov
cmp
in
inc
pop
cmp
nop
ret
dec
sub
sbb
flds
and
or
mov
mov
push
aaa
fwait
adc
sbb
xorl
mov
pop
cmpsb
sub
pop
mov
pop
movsl
frstor
sub
out
outsb
enter
movsb
xlat
in
jno
pop
insb
xor
pop
inc
xlat
add
cmp
push
and
sbb
test
pushf
fsts
iret
lods
sub
sbb
sub
hlt
xlat
adc
adc
stos
sub
je
popf
aad
lret
out
fs
push
aad
sbb
jnp
dec
in
cs
lret
cltd
cltd
in
cmp
imul
cmp
xor
xor
push
test
adc
test
daa
sub
aad
push
or
pushw
pop
cs
sbb
push
movsb
pop
call
hlt
push
dec
mov
adc
pop
ljmp
call
mov
scas
lods
xor
jbe
rorb
jg
sbb
les
adc
push
pop
sti
pop
leave
mov
jge
dec
inc
pusha
mov
test
cmp
movsl
test
sbb
stos
xchg
iret
adc
mov
jge
sahf
dec
daa
jecxz
push
je
mov
mov
push
inc
jecxz
or
or
dec
mov
std
or
and
push
add
cwtl
and
sbb
fmull
push
sbb
jle
out
mov
int3
jge
or
out
fnstenv
push
je
or
cmp
inc
jne
jnp
daa
mov
mov
data16
lds
ret
cli
add
and
in
sub
jbe
xchg
xor
jecxz
arpl
fsubl
les
cmp
mov
aad
mov
je
push
mov
pop
mov
mov
cwtl
jmp
jg
lea
xchg
sbb
jmp
out
inc
divl
scas
or
inc
ret
pushf
mov
shlb
xchg
dec
iret
jno
daa
mov
add
push
cmp
lock
imul
dec
aaa
testb
dec
mov
mov
bound
insl
out
daa
mov
enter
cltd
sub
in
cmp
inc
push
pop
sbb
imul
fnsave
aad
arpl
daa
inc
mov
mov
sub
sahf
and
fsts
xchg
pop
dec
lcall
push
mov
dec
jg
add
adc
dec
rclb
iret
xrelease
pop
cmp
js
xor
jle
push
jae
cli
in
cmpb
test
or
in
lcall
push
lcall
cmp
mov
push
iret
xor
jp
test
stos
and
shll
inc
jmp
or
sub
cmc
movsl
mov
mov
jns
sbb
mov
in
sub
cmp
cmp
orl
call
sti
adc
add
jp
test
dec
jl
or
pop
dec
mov
xor
adc
rol
lods
rcrl
jno
gs
jo
and
and
loop
lahf
jp
into
and
popa
xor
pop
fldcw
ds
lret
sub
mov
pop
xor
ret
pushf
xchg
lahf
shll
mov
fdivl
pusha
mov
xchg
nop
aad
aas
dec
cmc
jo
dec
repz
out
fadds
pop
cmp
push
and
lcall
test
mov
or
ret
mov
add
mov
stos
add
mov
pop
mov
lret
dec
addr16
mov
mov
jns
mov
sbb
fwait
push
pmullw
sub
in
les
dec
push
outsb
xor
sbb
sbb
and
pop
mov
dec
aas
jo
insl
aas
push
pop
lods
int
and
pop
imulb
pop
mov
xor
fdivrs
das
fcoml
mov
shll
push
mov
in
jno
push
fnstsw
adc
jb
xchg
les
les
addr16
stos
pop
es
or
xor
sbb
arpl
mov
test
add
dec
jp
sbb
loope
insl
sbb
adc
dec
addr16
cld
pop
mov
xchg
cmp
jb
mov
sbb
ret
jo
std
cmp
fldcw
sbb
xlat
shl
adc
add
add
test
adc
jnp
or
shll
lods
lods
and
lock
std
sti
and
pop
cmp
push
ds
pop
pop
out
sbb
inc
repz
jmp
cmp
in
bound
jns
loope
int3
xchg
and
jmp
pop
push
xor
hlt
movsl
das
pop
and
fcomip
mov
aas
movsb
out
pop
into
in
pop
jge
xchg
mov
inc
jge
inc
gs
sti
inc
xchg
cmp
repnz
xor
mov
sbb
jbe
inc
xor
idiv
mov
or
arpl
mov
mov
popf
xor
call
outsb
cmp
rcrb
aam
sub
out
mov
xor
dec
or
dec
fldt
pop
clc
lcall
xor
xchg
sub
test
scas
add
mov
xor
mov
in
push
cmp
xor
aam
inc
lds
sbb
cmp
mov
dec
inc
out
push
aas
imull
loop
adc
fsubs
negl
dec
add
xchg
mov
mov
decl
mov
sub
mulb
xor
pop
movb
test
cwtl
out
outsb
loopne
cmc
nop
adc
jle
jg
sti
mov
lret
cmp
push
and
js
adc
mov
or
dec
insl
movsl
dec
dec
mov
inc
xor
adc
jno
aad
inc
xchg
idivb
enter
xchg
jecxz
or
sbbb
pushf
outsb
pushl
xchg
test
cmp
mov
lahf
std
xor
pop
dec
popf
sub
mov
jg
push
je
jno
stos
in
inc
and
push
mov
mov
popa
cwtl
aam
dec
loop
dec
mov
jl
push
js
dec
stc
sub
pop
sbb
negl
push
mov
stos
xchg
ret
or
xor
sub
int3
cmp
or
or
sbb
movsl
dec
bound
cli
repnz
test
out
jnp
push
ror
dec
jecxz
jo
scas
cld
adcb
test
ljmp
sti
stos
jmp
ja
pop
lahf
movsl
sar
cmp
xchg
sbb
dec
subb
mov
pushf
in
shlb
aam
jae
xchg
fisttpll
insl
aaa
call
sub
ljmp
xor
movsb
mov
hlt
xor
push
jp
push
ss
adc
add
cmp
sbb
fcoml
icebp
aad
pop
lds
mov
in
cwtl
mov
and
std
jecxz
cli
std
or
mov
leave
push
in
pushf
pop
adc
test
scas
mov
or
js
cwtl
pop
xor
mov
loopne
fwait
mov
cmc
or
lds
sbb
lock
cmp
shlb
int
test
in
jp
out
push
or
sub
out
mov
cmpsl
sub
roll
push
fdivrs
push
adc
mov
mov
and
leave
or
sbb
fldenv
mov
or
aad
sti
pop
in
mov
outsb
insl
fimuls
push
jl
mov
pop
jmp
test
or
sbb
loop
mov
or
xor
daa
and
imul
mov
ret
movsl
cltd
scas
cltd
sub
and
mov
int
enter
in
cmp
mov
shlb
jg
or
insb
jns
fstl
mov
movsb
out
insl
cmp
sbb
jno
jge
xlat
cltd
sti
inc
fdivrs
inc
xor
or
adcl
aad
adc
int
adc
pushf
enter
aaa
xchg
cltd
into
jo
jns
jecxz
fs
je
scas
jp
loope
into
cmp
addr16
cwtl
enter
imul
pop
fisttpll
xor
xchg
xorl
sub
mov
shl
icebp
call
add
jno
movsl
xor
fnsave
out
adc
push
mov
out
insb
mov
das
mov
ror
mov
mov
pop
enter
sarb
sbb
mov
shr
mov
lea
jg
rorb
lds
dec
mov
sbbl
pop
push
xchg
adc
in
cmp
imul
jno
jae
sub
pop
stc
sub
lcall
sbb
ret
xchg
dec
xchg
lahf
icebp
mov
stos
stc
mov
xchg
lds
jbe
mov
and
rcr
push
aam
mov
cmpsb
add
sub
in
loop
out
dec
cmp
decl
ljmp
mov
dec
ret
inc
ret
push
cmp
push
scas
into
jl
or
clc
into
loope
sbb
pop
popf
js
dec
shlb
cmpsl
imul
jl
movsl
mov
flds
push
test
mov
insl
stos
and
xor
and
push
xchg
fildll
inc
fldln2
jb
xlat
out
pop
xor
or
in
or
dec
cli
mov
inc
push
mov
les
pop
mov
in
push
ljmp
jnp
dec
pop
inc
pop
test
jmp
push
mov
xchg
dec
pop
sub
xchg
insb
xor
add
jne
jge
mov
insl
mov
xor
cmpsl
push
dec
and
out
xor
jno
mov
incl
dec
xor
fld
insb
jecxz
jns
xor
pop
je
lds
inc
mov
movsl
sarb
sub
and
adc
in
cmp
mov
lods
nop
mov
ss
std
jge
xor
or
imul
test
mov
ja
adc
mov
push
aaa
pop
push
add
dec
and
rclb
lahf
add
adc
mov
roll
daa
shrw
sti
adc
mov
test
movsl
lcall
mov
mov
push
rolb
cwtl
sbb
out
mulb
in
sbb
jo
rcrl
je
mov
stc
pop
cli
int3
cmp
xchg
add
push
inc
dec
mov
pop
insb
add
rorl
xlat
push
lret
pop
xor
sub
sub
mov
pop
mov
push
sbb
jns
cltd
or
call
inc
push
cmp
jae
mov
das
xchg
jo,pt
lahf
sbb
dec
test
scas
jecxz
in
mov
imul
rol
jge
test
ds
out
inc
div
fxch
mov
aaa
fimull
das
gs
dec
cltd
fdivrs
pop
andl
insb
movsl
pop
popa
ja
test
scas
fldt
cmp
jnp
test
into
shl
jne
int
fs
xchg
fcom
imul
jae
shll
mov
out
andl
mov
call
imul
push
test
sub
cmp
jnp
lods
loope
jle
mov
xchg
pop
xchg
out
scas
pop
dec
jg
in
mov
cmpsl
mov
sub
aas
sbbb
ljmp
movl
insb
test
and
push
cmp
movsb
or
mov
push
jb
cmp
jg
ffreep
cmpsl
push
mov
jle
lock
mov
lret
cmpxchg
xor
je
cltd
mov
xor
cmp
inc
sbb
cmp
lret
mov
sbb
cmpsl
and
lret
outsb
fs
test
aad
jnp
sbb
imul
stos
pushf
inc
icebp
push
mov
adc
lahf
xchg
sbb
jmp
jne
iret
orl
mov
lret
mov
inc
sti
lods
mov
jns
or
or
inc
imul
cmp
out
insb
mov
add
jmp
dec
ret
xlat
addr16
push
inc
movb
sub
mov
lahf
pop
gs
clc
fimull
and
das
or
je
cmp
xor
loopne
xchg
or
iret
andb
rclb
imulb
jbe
adc
std
mov
mov
mov
and
movsb
xor
repz
xchg
mov
test
fsubs
mov
lahf
shl
mov
invd
mov
out
loopne
test
dec
je
and
insb
test
sbbb
xor
mov
les
push
enter
gs
mov
sbb
adc
test
and
ja
lds
lret
push
push
and
or
arpl
pop
fwait
push
push
movsb
movsb
jae
es
add
push
and
rorb
sub
dec
or
lret
rorb
pop
or
daa
mov
dec
push
stos
in
adc
xchg
popa
mov
dec
nop
xchg
pusha
jnp
sub
jg
iret
dec
add
aad
lea
and
pop
sti
repz
ljmp
xchg
aam
bound
lock
scas
adc
out
dec
add
jg
jg
add
aas
cld
repz
cmp
bound
pop
xchg
int
sbb
adc
mov
addr16
mov
fstpl
ficoms
inc
aaa
cs
dec
pop
aam
mov
or
pop
inc
xor
aaa
std
xchg
adc
mov
shlb
cmp
push
movsb
sub
hlt
fistpll
dec
insb
lods
idivb
inc
stos
cmpl
fs
jne
fisubl
lea
insb
das
mov
popf
addb
mov
inc
mov
pop
adc
xchg
nop
pop
xchg
adcb
fsubrs
mov
es
or
pop
or
test
mov
inc
or
ss
mov
ljmp
js
lea
dec
xchg
mov
into
xchg
popf
cmp
push
hlt
pop
xchg
dec
mov
jg
cmpsb
mov
rcrb
into
dec
add
stos
rclb
inc
fdivrs
je
mov
push
inc
add
inc
dec
imul
mov
in
sbbl
lods
add
and
mov
push
into
stos
mov
subb
cld
icebp
mov
fwait
stos
pop
or
cltd
mov
outsl
aas
add
push
jp
int3
mov
lcall
xchg
hlt
fldenv
mov
imul
xchg
cmp
repnz
sbb
out
imul
push
gs
out
pusha
in
js
lods
leave
scas
or
mov
mov
push
test
push
xchg
jbe
shll
iret
les
lret
jnp
mulb
cmp
dec
cltd
push
sub
mov
xchg
or
lret
adc
out
jle
mov
inc
mov
cmp
dec
movsb
mov
mov
outsl
outsl
psadbw
push
push
sub
cld
pop
push
jecxz
mov
or
out
cld
jmp
push
inc
stos
jae
add
ret
aam
out
call
iret
and
sub
push
xchg
fidivrl
inc
outsl
jmp
and
aad
jae
pop
test
xor
mov
jns
out
ficoml
push
rorl
cmpsb
popf
pusha
fcompl
jae
jae
ret
clc
jbe
call
cmpsb
push
out
mov
out
inc
mov
dec
cmp
fmull
nop
xchg
xchg
scas
mov
cmp
stc
adc
mov
je
sbb
inc
roll
push
xchg
fs
inc
jbe
out
mov
mov
lret
into
aad
xchg
insl
or
test
ss
xchg
shlb
dec
mov
enter
xchg
icebp
scas
pop
dec
mov
sub
ret
mov
sbb
psrlq
sub
aad
imul
and
jle
xor
dec
outsb
or
inc
mov
mov
ret
adcb
stos
xlat
add
inc
ret
or
lods
jle
or
push
rclb
mov
mov
xchg
mov
push
ret
add
cmp
dec
dec
add
add
fistps
lea
push
add
lea
int
and
iret
mov
into
dec
stc
out
rol
in
push
das
je
xchg
incl
ds
fisubs
xchg
mov
movsb
mov
push
jbe
jle
xchg
int3
gs
jbe
cld
mov
jge
jg
add
and
adc
shl
cltd
mov
std
mov
int
xchg
sub
cwtl
add
add
enter
movsl
out
or
loope
push
out
push
sti
imul
inc
lea
lods
push
sub
out
leave
in
pusha
dec
rorb
mov
jno
ss
and
jmp
jb
imul
daa
push
sahf
jecxz
je
fstl
jp
jge
imul
cmp
add
orl
pop
add
dec
inc
lcall
sbb
or
or
leave
inc
out
mov
xor
add
shrb
inc
cmpsl
scas
imulb
adc
push
int
or
add
push
dec
lea
sbb
scas
add
xchg
mov
les
jb
cmp
aad
jns
nop
pop
fstl
inc
xchg
je
add
inc
xbegin
pop
aad
clc
push
aad
adc
hlt
pusha
jb
mov
into
shl
mov
sub
loop
jp
mov
cmpsl
lea
dec
sbb
lods
in
fimuls
mov
pusha
dec
mov
ret
jb
jnp
stos
sbb
xchg
cmp
and
gs
je
cmpsl
mov
or
insb
jmp
and
data16
sbbl
mov
pusha
sahf
je
aaa
out
push
or
aam
out
ret
mov
mov
nop
jae
inc
data16
cli
int
ja
inc
jnp
sbb
fiaddl
popf
xchg
ljmp
mov
lods
test
mov
das
push
cmp
pop
xchg
sub
movsl
mov
cmp
or
data16
sbb
pop
shll
xlat
mov
add
subb
cmc
das
and
dec
bound
mov
cmpsb
xchg
dec
shlb
ds
in
mov
inc
popa
xor
cmp
rcll
stos
cmp
in
ror
loope
mov
pop
jle
or
pusha
dec
jbe
and
loopne
sub
jp
jno
xchg
ss
mov
sub
xor
add
xchg
mov
xchg
push
xor
fwait
sub
jp
lcall
inc
xchg
inc
je
sbb
and
hlt
fucom
push
or
inc
mov
lock
aam
sbb
dec
pop
popf
push
inc
rcll
adc
adc
sbb
or
jle
lods
xchg
lods
clc
das
push
out
xor
push
orl
cmpsb
sbb
xor
ret
aad
mov
repnz
xorl
xor
mov
mov
pop
insl
cld
jo
sarl
or
mov
aam
in
jo
inc
scas
outsb
cmpb
aaa
mov
xchg
push
jecxz
sub
fs
das
dec
mov
mov
mov
mov
sahf
sbb
out
jo
adcb
mov
ss
popa
in
inc
and
xchg
les
pop
dec
test
dec
scas
dec
push
mov
mov
outsl
push
je
inc
shrb
test
pushf
mov
xor
movsb
test
cld
fnsave
ficomps
imul
xchg
repnz
mov
in
sarb
lea
pop
xor
mov
mov
mov
in
pop
pop
enter
xor
into
mov
add
dec
cmp
out
sub
addr16
rorb
cli
lds
repnz
cmp
sahf
mov
iret
scas
xchg
or
mov
dec
fnsave
orb
in
push
fcmovu
in
sbb
push
mov
xchg
nop
nop
mov
pop
hlt
mov
pop
push
daa
int
push
pushf
fnsave
dec
mov
mov
shlb
xor
pushf
or
fidivl
mov
xor
scas
or
das
scas
lret
cmp
mov
out
mov
movsl
xlat
data16
movsb
xlat
cmp
ficomps
cld
jl
inc
and
push
xor
add
push
jl
pop
jecxz
pop
lea
xchg
dec
jb
mov
pop
outsb
push
adc
insl
inc
add
dec
pop
ret
int
je
jl
pop
mov
jecxz
xlat
push
insb
ss
sub
ss
mov
sbb
cmp
pop
xchg
test
and
sarb
jg
and
icebp
ds
inc
xor
shlb
inc
lods
arpl
test
out
dec
aaa
cmp
xor
push
cmp
pushf
lods
inc
and
xlat
test
cmp
jl
aaa
jmp
push
out
dec
or
xchg
pop
iret
and
outsb
xchg
dec
repz
daa
movsb
pop
fists
fstps
js,pn
enter
mov
je
andl
dec
mov
add
sbb
push
gs
jl
in
xor
stos
call
cmp
insl
jecxz
mov
fsts
cmp
fstpt
cld
pop
cmpsl
call
mov
lea
and
lods
mov
pop
cmpsb
repz
mov
jle
xor
mov
cmpsb
mov
add
sbb
insl
pop
stos
and
das
xor
fdivrs
inc
daa
mov
pop
sub
mov
mov
jb
inc
mov
lea
iret
pusha
or
imul
xorl
lock
jne
mov
push
xchg
jns
jp
test
dec
adc
xor
mov
sarb
call
sti
lds
xlat
xlat
push
leave
insl
bound
into
cs
jg
and
in
filds
xchg
test
stc
jl
cmp
repz
xchg
lds
sub
pop
cs
push
jo
movsb
hlt
int3
int3
and
push
fnstenv
ja
or
lock
sbb
mov
ja
fcoms
mov
add
push
and
cmp
pusha
fcmovnbe
or
filds
leave
fldln2
cld
mov
mov
je
arpl
sbb
div
dec
dec
js
stos
push
and
in
pop
leave
ret
mov
add
mov
lahf
push
scas
pop
rcr
das
out
andb
sub
stc
mov
xchg
add
in
sbb
les
fstl
xchg
in
push
aas
sti
inc
enter
sbb
lock
push
mov
push
ljmp
xor
and
scas
sbb
inc
mov
incl
jmp
xor
insl
adc
maskmovq
negl
or
xchg
mov
icebp
jno
je
mov
pop
jno
push
and
mov
push
mov
std
jnp
loope
cli
inc
sbb
add
mov
xor
push
into
repnz
or
roll
lret
mov
and
sub
loope
popf
lods
pusha
mov
xchg
xor
jns
cld
lret
shrb
xor
add
mov
mov
mov
leave
fwait
push
nop
sbb
je
jbe
cmp
imul
clc
sarb
lods
xchg
inc
jmp
iret
push
cmpsb
scas
test
mov
push
dec
lcall
add
dec
mov
mov
sbb
add
gs
add
pop
lahf
mov
mov
xor
mov
lds
rcrb
push
xlat
das
iret
sbb
mov
sbb
fildll
sub
push
lcall
dec
mov
dec
dec
outsb
int
jns
test
jmp
add
jb
out
adc
push
pop
xlat
lea
xor
cmp
xlat
push
pmulhuw
pop
xor
adc
icebp
mov
or
cli
test
xor
dec
div
dec
insl
sbb
xchg
xchg
and
imul
inc
mov
pop
test
pop
ficomps
dec
mov
fdivr
inc
xchg
ss
jo
xchg
add
pusha
add
ss
mov
xor
adc
in
lods
and
mov
test
lret
frstor
clc
mov
xor
movsb
ret
fidivrs
ret
push
das
orl
addl
push
ljmp
mov
cmc
lcall
or
lcall
inc
or
out
adc
xchg
inc
xor
or
mov
test
fxch
mov
enter
push
dec
adc
mov
push
fcmovnu
pop
and
mov
push
stos
inc
dec
add
in
push
push
int
xchg
dec
iret
in
cmp
pop
in
in
fwait
add
or
lcall
inc
repnz
lret
lea
outsb
xchg
push
dec
add
insb
insl
fwait
aad
or
es
mov
sbb
jl
jnp
push
xor
testl
mov
enter
insl
or
insb
in
test
loope
call
lret
mov
subl
xchg
mov
cmp
pop
ds
adc
fs
test
sub
lahf
sahf
stc
stc
ljmp
cmp
pusha
jge
cmp
js
add
sbb
pop
xchg
jnp
ljmp
sub
mov
mov
add
lret
push
mov
or
mov
test
jecxz
sub
dec
loopne
jns
xchg
data16
clc
popf
repz
mov
es
loopne
push
push
dec
imul
and
and
pop
jl
dec
pop
shll
inc
adc
ret
icebp
jge
shrl
mov
mov
xorb
aam
pop
iret
push
adc
repnz
cli
call
xor
fnsave
pop
dec
or
roll
imul
test
jp
cmp
sti
hlt
push
adc
lock
adc
push
inc
fsubr
cmp
or
add
subl
outsl
mov
idivl
jg
sarl
xor
out
jecxz
mov
pop
sti
in
or
jnp
cmpsb
push
add
pop
mov
sub
inc
cmp
pop
pop
adc
int3
sub
popa
bound
notb
sub
mov
scas
ljmp
fcoms
push
mov
dec
add
sbb
bound
les
cmp
sbb
js
jne
sub
fwait
and
popf
or
jg
iret
xorb
ficompl
sahf
into
push
les
pushf
test
shr
dec
mov
lret
shlb
leave
adc
pushl
cmp
iret
repnz
ss
and
call
add
loopne
mov
push
lcall
xor
psubd
add
mov
es
fistps
cmc
sbb
outsl
push
or
xchg
dec
es
sbb
mov
nop
cmpl
inc
mov
jl
jbe
xor
hlt
mov
hlt
jo
cs
add
aam
sbb
gs
add
push
mov
fwait
xor
inc
xchg
sub
inc
xchg
and
add
mov
mov
lret
loope
cld
mov
push
out
test
add
inc
sub
daa
fs
int3
push
sub
orb
lcall
push
cli
xor
adc
ds
mov
xlat
jbe
add
xor
data16
lea
fidivrl
ss
jp
xchg
inc
shll
out
repz
loope
movsb
flds
mov
test
imul
xchg
popf
addr16
fs
loope
or
fldenv
xor
pop
jecxz
xor
jle
inc
enter
xchg
fmull
ja
push
jp
mov
mov
dec
or
rcrb
clc
lock
xchg
aad
jo
cmp
ret
fisttpll
shrl
loopne
mov
xlat
lods
les
xorl
jb
scas
in
inc
or
inc
jo
addl
outsb
mov
sbb
push
push
pop
nop
xchg
add
psrld
mov
jl
pop
lret
and
xchg
sbb
pop
hlt
mov
movsl
fs
fldt
push
push
xchg
fistpll
ret
and
les
dec
xor
daa
gs
lds
test
mov
or
insb
and
dec
push
ja
push
pop
bound
sbb
cmp
xor
int
jge
imul
pop
sti
nop
xchg
pop
add
jbe
insb
adc
dec
push
mov
pusha
jns
fdiv
popa
imul
fstps
insb
and
out
out
or
lahf
jns
int
dec
dec
lea
jecxz
sub
add
cmpsb
mov
sbb
inc
jns
outsl
adc
lds
fidivrl
int
jecxz
mov
outsl
mov
mov
popf
pop
ss
and
fld
insl
nop
ljmp
cmp
in
push
mov
in
int
and
subb
cmpsl
push
inc
jb
ljmp
aaa
int
imul
mov
adc
je
mov
mov
cmp
mov
pop
jb
add
cmp
add
andb
ret
adc
mov
sbb
push
aam
cli
mov
rcrl
mov
out
mov
sbb
stc
int3
fwait
in
add
out
dec
out
imul
aas
inc
add
mov
xchg
mov
dec
adc
clc
std
add
jmp
aam
or
push
lcall
fs
out
jns
cmp
cmpsl
outsl
je
adc
xor
shlb
or
xlat
mov
lret
lahf
push
call
lods
sti
inc
test
push
movsb
ret
adc
test
jmp
push
js
je
push
mov
xchg
in
aas
dec
mov
bound
iret
xchg
mov
jb
cmp
adc
scas
jb
xchg
mov
test
aad
iret
sub
mov
mov
jecxz
cwtl
adc
pop
xor
icebp
add
test
cmp
cli
mov
repz
aaa
loop
mov
xchg
mov
mov
mov
in
das
gs
push
movsb
shlb
xor
out
clc
inc
clc
cmp
test
icebp
jbe
xor
test
pop
mov
jns
xchg
or
push
gs
dec
jle
push
hlt
xchg
or
sarl
xchg
sbb
cld
add
mov
js
push
push
imul
enter
imul
arpl
dec
cltd
xor
pop
test
xchg
and
lods
gs
scas
movsb
mov
cmp
syscall
add
jg
and
xor
dec
ljmp
push
fwait
push
out
dec
into
pop
frstor
dec
shl
aam
jb
or
push
adc
adc
push
mov
pop
sbb
jbe
jle
push
enter
xchg
mov
xchg
ja
xchg
cmpsl
mov
mov
es
cmpsb
lret
sub
aam
pop
add
push
aaa
dec
call
xchg
mov
inc
push
sahf
ud0
in
arpl
or
les
jns
pop
dec
push
sbb
daa
mov
sbb
mov
repnz
les
gs
adc
jp
add
push
jl
xchg
movsl
push
push
xchg
cmp
loop
xor
fs
push
sbb
sbb
mov
sub
imul
mov
cld
loopne
aaa
mov
dec
adc
les
jecxz
das
lahf
mov
xchg
out
bound
das
das
jg
jo
shll
lret
jno
sbb
dec
cmp
arpl
in
mov
adc
xchg
push
mov
push
sbb
clc
icebp
in
movsl
cwtl
inc
jmp
shll
cwtl
gs
jecxz
inc
aam
mov
jmp
inc
ljmp
rorl
add
mov
add
xchg
loopne
mov
pop
out
push
mov
mov
xor
cmpl
pusha
out
mov
loopne
les
inc
jns
xchg
add
js
cwtl
dec
cmp
add
push
divb
push
pushf
test
xor
and
mov
imul
rorb
or
popf
mov
cs
mov
andps
cltd
loope
testb
movsl
clc
sub
shrl
clc
insl
nop
mov
in
mov
mov
xchg
add
sub
inc
nop
push
dec
popf
out
lahf
outsb
inc
pop
loop
int
repz
add
or
and
clc
sbb
jg
sarb
adc
xchg
dec
fld
es
push
xchg
push
ljmp
add
sbb
add
add
mov
testl
aaa
jl
sbb
pop
adc
and
jo
mov
ret
sub
les
push
cmp
dec
std
push
sbbl
pop
out
hlt
inc
and
clc
lods
sti
mov
mov
scas
or
outsl
xor
arpl
cmp
mov
fsubrp
out
leave
push
pop
dec
in
sub
rolb
cmpsb
aaa
repnz
int3
fwait
nop
and
jno
xchg
bound
inc
pop
and
scas
sub
adc
mov
sarb
push
aad
jb
jmp
mov
mov
cld
sub
mov
xor
dec
and
lea
popf
arpl
sbb
jp
cmpsl
jbe
lret
rorl
mov
ret
ljmp
mov
xchg
jns
and
mov
fwait
in
insb
jmp
or
call
icebp
mov
fsubrs
jnp
adc
cltd
mov
cwtl
jne
sbb
roll
pop
xchg
mul
icebp
pop
xor
xor
and
xchg
pusha
mov
cmp
leave
inc
daa
xchg
decb
cld
mov
bound
mov
adc
cwtl
hlt
ds
fsubrl
addr16
int3
xor
jge
xchg
aaa
push
test
mov
nop
lea
dec
std
mov
cmpsb
push
mov
cmp
pop
out
rcrl
jmp
fisttpll
out
iret
xchg
inc
and
jb
pop
test
jp
dec
mov
test
ret
adc
mov
mov
inc
lods
aad
cmc
jae
jmp
cld
xor
jns
add
mov
add
cli
jp
orb
sub
bound
sub
lahf
lock
or
pop
mov
pop
mov
adc
int3
imul
sbb
and
xchg
pop
fstpt
and
cmp
mov
pop
inc
leave
and
orl
mov
outsb
dec
clc
pop
enter
lahf
inc
cmp
jne
roll
sub
cld
repnz
mov
movb
in
popa
loopne
stos
jmp
mov
fmul
push
mov
and
scas
popa
fbstp
in
pop
aam
iret
pop
adc
bnd
movsl
leave
sbb
lret
and
sbb
mov
push
cmpsb
sub
inc
in
fnsave
jb
sbb
in
outsb
lret
adc
stos
hlt
dec
inc
js
ror
fisttps
test
dec
imul
cmp
out
xchg
or
clc
stos
xor
mov
mov
mov
cmpl
xor
mov
jno
and
and
pusha
lcall
out
fsubl
add
pop
hlt
xlat
aaa
enter
hlt
push
jle
add
and
jb
test
push
or
mov
cmpl
enter
clc
test
pop
jne
cli
cs
push
cltd
jmp
mov
in
sub
out
aam
mov
xor
cmovbe
mov
lret
inc
mov
add
dec
cmp
push
sub
mov
xlat
ficomps
movl
in
and
fidivs
jmp
pop
jne
cmpsb
int3
call
ja
inc
in
sub
fwait
sbb
mov
dec
sbb
sub
push
dec
je
sbb
js
xchg
outsb
cmpsl
fidivl
jnp
ja
dec
aaa
subb
and
fcomps
loope
test
sbb
cli
adc
cwtl
lcall
mov
lds
jnp
push
lods
test
out
and
pop
jmp
mov
pop
pop
mov
mov
mov
mov
outsl
xchg
mov
test
dec
fbstp
push
fwait
das
loop
pop
outsl
mov
sub
xchg
sub
adc
roll
ret
lret
pushf
arpl
pushf
push
push
mov
sub
fidivs
mov
push
int
ds
in
je
ret
or
xchg
mov
aad
cwtl
jmp
scas
adc
xlat
lods
pop
dec
jae
jge
inc
and
fldenv
mov
mov
es
mov
lods
adc
mov
mov
mov
test
dec
std
enter
movsb
inc
add
add
out
push
es
mov
adc
das
int
dec
scas
mov
pop
jne
dec
pusha
fwait
aam
fwait
cwtl
sbb
lods
enter
push
ret
popf
mov
xor
sbb
push
cmpl
sbb
ss
dec
out
les
loopne
pop
xor
dec
mov
in
lea
aaa
or
stc
js
in
repz
adc
mov
fists
loopne
cmp
scas
icebp
push
xchg
cli
inc
sbb
inc
or
sahf
push
inc
mov
mov
sub
adc
sub
pop
pop
gs
je
add
mov
clc
mov
leave
xor
sbb
aas
cmp
mov
or
loop
lret
xchg
les
push
or
cmp
dec
js
jl
adc
cmpsb
lret
fdivr
xchg
sarl
inc
aas
pop
dec
aaa
adc
xchg
xchg
imul
popf
mov
pop
pop
out
cmp
cmp
out
ljmp
loop
add
dec
and
push
cmpl
jl
ret
es
int
test
xlat
lods
movsb
push
cmp
sub
cmp
sub
enter
jo
pop
insl
lret
mov
cltd
dec
lods
out
mov
jne
std
out
lret
cmpsb
iret
adc
stos
dec
adc
xchg
mov
mov
pushf
sbbl
clc
xor
orl
sbb
loopne
jp
pop
in
push
fcoms
dec
adc
aas
sbb
mov
jns
dec
int3
stos
fstp
cmp
cmpsl
dec
jp
jne
cmpb
cs
and
mov
cmp
fldcw
inc
xchg
test
mov
clc
dec
rep
xchg
xchg
ret
addr16
sbb
adc
jmp
arpl
jnp
sub
call
push
and
dec
cmp
mov
sbb
xlat
jmp
xchg
cmp
test
dec
data16
inc
lds
jbe
subl
rcrl
arpl
pop
inc
pop
jge
fisttps
enter
ret
inc
imul
pop
cmp
cmp
js
xchg
fdivs
fimull
clc
sub
jge
add
cmp
sarl
sar
ret
jno
sbb
ja
out
int
dec
jmp
movsb
and
int
pop
mov
push
dec
sbb
xor
mov
into
shl
fldl
and
adc
aaa
xor
fadd
fsubrl
xchg
in
mov
xchg
pop
xchg
and
loop
jns
pop
enter
sbb
loop
mov
mov
outsl
imull
std
loope
cmp
push
pop
mov
loopne
daa
cwtl
pop
dec
or
mov
jmp
test
std
or
insb
std
jbe
xchg
and
pusha
pop
xlat
add
cmp
and
add
jge
sahf
push
mov
sub
xor
test
fwait
imul
jno
addl
sbb
sub
es
std
repnz
inc
mov
test
jnp
push
ret
or
sub
les
mov
fistpll
rclb
fadd
xlat
filds
cmp
je
xor
fs
fwait
ljmp
lahf
imul
stos
jb
jo
daa
test
add
pushf
imul
jmp
xor
ja
stos
stc
int3
jmp
xchg
jle
mov
int3
idivl
arpl
pusha
mov
fwait
pushf
jo
pop
sahf
test
outsb
scas
shr
data16
negb
imul
mov
jns
push
sub
fimull
or
mov
loop
add
lcall
lcall
sub
add
add
into
jae
sbb
fwait
enter
adc
subl
mov
fbld
mov
mov
mov
sub
cli
inc
xor
dec
sbb
xchg
push
xor
or
adc
mov
das
cmp
sub
jle
xor
jne
sbb
aad
cmp
mov
xor
jnp
aaa
sahf
cmc
or
jmp
jae
or
mov
add
inc
fistl
xchg
cmp
iret
mov
fs
mov
stos
sbb
or
dec
ficoms
sahf
inc
pop
cmpsb
pusha
lods
mov
scas
pop
fmul
jb
sbb
ret
mov
das
flds
cld
inc
shrl
and
jbe
add
cli
mov
cmp
adc
and
fiadds
cltd
add
xchg
xor
xlat
stos
call
pop
xor
sbb
aad
rol
out
mov
pop
clc
mov
sub
xchg
ret
das
lret
call
out
pop
rorl
xor
mov
cmpsb
push
sub
inc
es
inc
jmp
or
pusha
mov
fiadds
dec
sbbb
pop
lea
cli
pushf
mov
push
add
fisttpl
push
pop
out
test
repnz
fs
fwait
in
push
adc
cmp
scas
and
inc
jecxz
mov
lods
cltd
hlt
mov
movsb
mov
hlt
add
push
jno
andl
aam
lea
sbb
dec
push
lret
mov
xchg
pop
gs
xchg
jne
xchg
int3
and
out
cmp
cmp
outsb
cmc
dec
xor
pop
js
lcall
scas
push
and
int3
orb
sar
cli
int3
xchg
inc
mov
shrl
leave
xor
popa
mov
inc
out
repnz
fdivrl
je
and
mov
push
jbe
cmc
out
jmp
push
test
popa
inc
rorb
inc
aam
dec
xor
bound
shrl
int3
adc
xor
je
enter
call
pushf
mov
mov
popf
push
pop
add
or
js
adc
mov
mov
xchg
push
push
int
xor
inc
lret
xchg
pop
add
rcrb
add
lods
aam
int
mov
ret
cmp
lahf
scas
xchg
xorl
cwtl
pop
mov
inc
test
mov
ficoms
ficomps
sub
cmp
push
mov
fldenv
clc
outsl
fcmove
sub
inc
pop
jmp
sbb
mov
test
xlat
pop
insb
rorl
xor
addr16
jmp
add
insl
int
cmpsl
faddp
and
mov
add
inc
test
jo
out
mov
jmp
dec
movsl
push
mov
cmpsl
je
push
xlat
cld
adc
mov
ret
push
sbbb
pop
sbb
mov
ljmp
test
jo
fcmove
mov
jns
repnz
jno
movb
mov
and
aas
loop
imul
add
repz
mov
mov
jecxz
test
mov
pusha
stc
mov
xor
mov
sub
push
mov
fstps
cmp
adc
adcb
paddd
xchg
mov
lock
sbbl
leave
lods
movswl
rorb
sub
mov
lcall
sbbb
jp
cwtl
add
push
mov
imul
sub
outsl
sub
or
jmp
mov
mov
add
and
mov
dec
pop
addl
lods
push
xchg
aaa
lods
inc
in
cs
call
shl
gs
pop
pop
fisubrl
cli
cmp
in
push
pushl
fldl2e
aas
mov
incl
and
ja
push
jbe
xchg
mov
es
mov
add
sbb
and
stc
aas
jmp
mov
jg
mov
jnp
mov
adc
push
mov
xchg
push
xchg
aaa
adc
cs
stos
xor
leave
xlat
inc
dec
insb
or
dec
cmp
dec
inc
cmpsl
add
sarl
test
xchg
cmpsb
add
jb
cwtl
jo
mov
ficompl
out
sub
shld
cli
jecxz
pusha
sbb
je
mov
fs
jmp
push
cmp
rolb
out
jns
inc
xchg
je
push
ss
in
xchg
pop
ret
push
mov
mov
aad
sahf
push
jge
outsl
das
or
and
loope
mov
push
cwtl
mov
push
shrb
lret
mov
sarl
add
test
js
paddd
jno
xor
ja
and
iret
adc
jo
mov
jle
sti
push
out
jno
imul
mov
inc
cmp
sahf
ret
in
in
stc
pop
jo
fsts
xchg
test
cmp
xchg
cmp
pop
mov
push
repz
pop
and
dec
stc
xor
push
jmp
fnstenv
rcrl
test
mov
pop
mov
push
pushw
mov
sbb
mov
or
mov
xchg
cmpl
loope
popf
test
jg
xchg
push
js
loop
cmp
add
shll
scas
xor
jnp
lahf
xlat
cmovs
std
rclb
xor
ljmp
stc
mov
xor
mov
inc
jle
add
rolb
nop
cwtl
fwait
pop
and
and
in
iret
cltd
and
xlat
and
pop
outsl
adc
and
mov
lods
xchg
lock
popf
push
and
shll
or
ss
inc
jb
mov
shrl
sub
cmpsb
pop
bound
lcall
iret
mov
push
add
insb
fisubrl
das
sbb
push
xor
xchg
xor
jne
lcall
adc
fwait
add
scas
mov
dec
xchg
lahf
push
into
rcll
mov
xchg
jne
push
lods
insb
inc
loopne
insb
push
enter
push
xchg
mov
scas
push
jmp
mov
lock
stos
lods
lahf
stc
and
mov
cmc
stc
dec
sbb
push
push
push
adc
loop
mov
push
les
scas
jno
clc
jno
nop
cmp
daa
test
push
pop
aad
aad
jnp
add
jne
in
rcrb
dec
je
jmp
jae
jne
inc
jns
jle
pushf
ds
xor
jbe
jb
repz
xchg
push
popf
les
or
jbe
add
mov
addr16
cmpsl
int3
add
cltd
or
aam
iret
cltd
aas
dec
nop
shrb
aad
lock
pop
sahf
lods
mov
ffreep
pop
push
pop
mov
add
xchg
pop
imul
adc
insl
shrl
nop
shll
or
lods
std
leave
sub
pop
xor
inc
push
std
pop
outsb
hlt
mov
out
jmp
pop
sub
sub
mov
divl
jnp
xchg
adc
cmpsl
fiadds
call
mov
enter
in
das
aam
xchg
add
ja
jmp
adc
add
shl
jg
mov
bound
out
call
sub
ret
add
cltd
and
dec
sub
ret
add
cli
insb
scas
icebp
lret
in
xchg
movsl
loop
loope
push
mov
icebp
ss
gs
repz
xlat
dec
push
cmp
mov
mov
int3
push
mov
inc
mov
ljmp
mov
push
fsubl
jecxz
push
xor
sbb
fisubs
cmp
shll
mov
sub
adc
stos
sbb
aam
xchg
popa
xchg
insb
sub
cmp
add
add
pop
loope
ljmp
into
inc
int3
xchg
push
push
or
rol
lods
sub
xchg
es
outsl
xchg
dec
scas
mov
or
lret
popa
adcl
inc
pusha
pop
or
dec
cmp
sub
das
popf
adc
lds
xor
imull
rcrb
add
lock
pop
lods
repz
outsl
lahf
sbbl
arpl
and
and
ljmp
push
sar
adc
lret
loope
shlb
lret
das
xor
movsl
lds
mov
das
sub
ret
jg
inc
and
sbb
cmp
inc
dec
xchg
mov
sub
cmp
nop
inc
ss
inc
dec
out
jae
jb
rorl
xor
fistps
pop
dec
push
mov
or
push
outsl
rcll
and
or
enter
fidivrl
jns
ret
out
pop
push
push
lods
xor
sbb
int
cmp
pop
push
sbb
cmpsb
jmp
add
jb
mov
pop
lcall
cmp
test
jns
jns
jp
movsl
jnp
cmpsb
int
sahf
std
push
pop
xor
mov
fs
fwait
or
pusha
jecxz
cmp
xorb
ja
gs
aad
sub
data16
out
mov
add
sahf
ds
sub
cmc
mov
mov
mov
mov
out
jne
pop
dec
xchg
sti
push
lock
dec
dec
into
rorl
sarb
je
insb
pop
pop
pop
les
hlt
lret
leave
sti
xlat
lds
aaa
leave
jo
xor
inc
shrl
imul
das
dec
sub
aas
pop
fnsave
sahf
dec
jecxz
fisttpll
xlat
rorb
rolb
fst
jae
mov
mov
hlt
cltd
pusha
jp
stc
jp
push
sbb
mov
movsl
xor
stc
andl
popf
imul
rorl
nop
dec
aaa
cmpl
jecxz
mov
das
outsl
sarl
pop
out
jbe
aad
enter
fnsave
notb
push
xchg
int3
sbb
xchg
fsts
rcrb
xchg
or
stos
aaa
sbb
sbb
cmpsb
in
les
fnsave
pushf
and
sub
or
cmc
inc
popa
jne
sbbl
std
and
stos
mov
imul
mov
inc
shrb
xchg
inc
in
loope
push
shl
les
outsl
push
mov
sti
rcr
xchg
add
scas
jge,pt
sbb
sbb
mov
push
xchg
gs
repz
xor
inc
jmp
dec
scas
push
insl
repnz
cmpsb
jbe
int3
cli
adc
jbe
inc
mov
pop
ss
xor
pop
mov
lods
pop
jne
pop
add
inc
mov
mov
push
mov
imul
jbe
add
test
sbb
add
and
int
push
imulb
les
dec
xchg
mov
cwtl
pop
jb
push
ljmp
jb
xor
ss
movsl
xchg
sti
mov
jae
dec
pushf
or
movl
ds
add
outsl
sub
cmpsl
push
push
sbbb
sub
dec
lahf
or
xchg
stos
mov
aam
jg
imul
cmpsb
mov
sub
xor
push
or
push
addr16
push
hlt
push
or
jl
inc
das
bound
std
xor
loop
and
scas
cmpsb
jne
mov
lea
sbb
cwtl
mov
inc
mov
jl
pop
ds
insb
icebp
mov
sbb
inc
pop
push
add
jae
push
scas
bnd
addr16
dec
jb
mov
stos
mov
ficomps
push
jno
repz
xlat
mov
pop
dec
dec
jo
mov
lret
xor
jle
and
aaa
jmp
clc
movsl
mov
pop
pusha
xchg
xchg
pop
iret
popa
sbb
mov
adc
imul
bound
or
ret
out
push
pop
ja
cmc
push
cmc
les
in
pusha
sub
test
pushf
jp
orl
cltd
testl
repz
xchg
pop
out
daa
jnp
add
jae
adc
stos
shr
mov
inc
sbb
mov
adc
mov
xor
ret
ret
icebp
out
pusha
jns
inc
jecxz
lds
jg
or
inc
and
popf
mov
mov
nop
call
jo
xchg
add
jecxz
dec
or
subl
fstpt
push
addl
mov
les
data16
xchg
out
outsl
and
sub
push
ss
loopne
jp
std
sub
idivl
xchg
xor
xor
ja
push
pop
test
push
add
xor
jnp
leave
inc
jo
jge
jae
xor
or
ljmp
ljmp
xchg
jne
lret
inc
test
std
jl
outsb
ja
xor
cltd
pop
inc
jmp
into
add
enter
gs
movsl
jp
jae
popa
cwtl
sub
dec
add
cmpsl
out
ja
jmp
pop
xchg
xorb
lcall
je
inc
adc
pop
xor
pop
pop
mov
cmovo
or
pop
xor
add
or
in
mov
cs
cmp
pop
mov
in
cld
mov
xchg
inc
out
xchg
insl
jg
cmpsb
inc
test
push
xchg
mov
jle
stos
xchg
push
adc
xlat
shrb
add
aad
and
gs
test
and
xor
cltd
push
cld
sub
test
pushf
pop
mov
and
lcall
mov
and
inc
es
cs
mov
js
lock
testb
cmp
loop
iret
or
jb
push
mov
inc
dec
shl
notl
sbbb
pop
inc
mov
cltd
cmp
xchg
xor
mov
hlt
cwtl
jne
jmp
sub
mov
mov
or
popf
clc
lcall
cmpsb
inc
inc
lahf
shlb
cltd
ja
add
lret
xchg
stc
or
out
shrl
pop
out
or
imul
push
lahf
es
mov
mov
jnp
jecxz
jne
adc
dec
push
movsb
mov
es
lea
daa
sbb
and
sbb
lahf
dec
pop
js
adc
test
cs
push
aam
push
mov
pop
pop
es
add
ss
test
pop
sti
mov
adc
mov
lret
je
or
stos
lret
test
ret
lock
les
jmp
aad
and
and
pop
pop
jne
and
mov
jmp
jo
fnsave
sub
fbld
lret
xor
jge
sbb
test
lahf
mov
push
gs
fiadds
push
inc
addr16
in
dec
ret
incl
push
popf
sarl
call
repz
cmpsl
dec
imul
addr16
pop
aam
imul
push
xchg
out
int3
cltd
nop
scas
mov
inc
sbb
cli
sbb
push
push
dec
pop
jecxz
jg
mov
inc
adc
loope
inc
and
dec
lods
pop
mov
insl
inc
jl
shl
adc
mov
sbb
sahf
ret
jecxz
mov
push
mov
test
call
pop
ret
imul
dec
dec
data16
mov
inc
imul
push
pop
inc
arpl
pop
aaa
mov
mov
adc
pop
jno
jne
pop
bound
pop
sbb
inc
sub
xchg
cmp
loope
mov
fldl
aad
and
ret
jmp
pop
in
in
or
pop
mov
or
call
push
push
push
xchg
imulb
in
push
je
jecxz
and
and
or
movsl
stos
jecxz
repnz
js
push
lea
xor
mov
test
clc
test
jnp
and
dec
test
jge
movsb
add
dec
mov
ds
int3
mov
fdivrl
inc
cld
insl
jle
lods
inc
pop
xor
roll
pop
pop
add
dec
outsb
movsb
jecxz
inc
stc
out
shlb
imul
lcall
sarb
jmp
shl
mov
dec
subl
mov
inc
sbb
mov
and
cmp
bound
ret
notb
jg
xor
repz
push
mov
out
add
pop
pop
mulb
movsl
mov
shll
nop
cmp
out
or
loop
fidivs
lds
cmp
mov
out
push
xchg
rclb
lret
scas
cmpsl
jge
inc
scas
fdivl
xchg
add
cwtl
call
push
dec
mov
enter
and
push
std
arpl
xlat
in
in
cmp
jns
jecxz
scas
mov
mov
sub
mov
shr
rclb
cmp
jle
fcompl
addr16
sbb
es
call
sbb
scas
in
and
and
mov
add
push
sti
andb
fdivrl
adc
repnz
sti
int3
mov
std
add
or
pushf
les
xor
cmpl
fscale
shlb
cltd
inc
popa
mov
xchg
andb
pushf
add
mov
addr16
push
stc
pusha
loop
xor
into
mov
jns
addl
push
in
or
sub
mov
push
and
lods
mov
add
cmc
shlb
mov
cmp
add
aam
push
add
dec
aas
mov
and
cmpsl
iret
popf
add
mov
or
gs
inc
fidivl
addr16
jne
scas
mov
adc
leave
add
mov
pop
sbb
addb
pusha
lea
jnp
pop
into
pop
xor
pop
es
data16
scas
loope
jecxz
mov
jecxz
and
lea
inc
lods
loop
les
sti
rcll
mov
or
inc
std
push
les
push
lss
jl
out
sub
mov
cltd
add
push
jecxz
xor
cld
xchg
jg
andb
dec
fstl
mov
xchg
gs
push
scas
mov
mov
cs
push
jmp
arpl
aad
adc
xchg
or
push
in
xchg
sub
loope
aas
adc
scas
xor
shlb
push
inc
pushf
add
mov
mov
lods
sbb
sbb
dec
mov
mov
unpckhps
push
mov
outsb
xchg
sbb
dec
in
jae
pusha
lea
pop
sti
je
les
inc
iret
stos
lahf
in
sub
push
lds
and
push
mov
push
icebp
fs
cmpb
pop
clc
lea
xor
add
lahf
fadds
sub
movsl
ljmp
std
loope
in
cltd
out
lcall
adc
add
testb
sbb
xchg
fdivr
adc
pop
add
dec
pop
xchg
jmp
scas
cld
sbb
xchg
mov
add
fldcw
es
sbb
inc
xchg
and
dec
jge
xchg
dec
inc
push
test
and
xchg
xlat
ja
adc
fnstsw
jae
or
shr
jp
icebp
scas
sub
sbb
incb
out
inc
jo
mov
mov
bound
cwtl
jp
cmp
into
push
dec
stos
mov
lcall
push
add
jmp
icebp
lcall
mov
push
adc
add
scas
lods
sti
repz
adc
lea
bound
sub
aaa
and
mov
repz
inc
mov
adc
jg
add
lock
popa
sub
cmpsl
gs
out
enter
inc
insl
push
push
sbb
mov
xchg
jae
int3
ret
sbb
cmc
ret
dec
out
ljmp
je
mov
sub
add
scas
xor
subl
cmp
insb
adc
popa
lret
out
jbe
cld
mov
cli
ror
adc
mov
popa
mov
push
lcall
sbb
std
in
ficompl
dec
fs
pop
sti
inc
jmp
mov
xchg
sub
mov
xchg
mov
xor
scas
dec
test
fistps
adc
or
pop
stc
jne
sub
fdivp
dec
mov
xchg
push
out
hlt
mov
inc
rcll
imull
mov
add
shlb
dec
mov
jle
adc
iret
jecxz
sarw
js
jno
push
sbb
cmp
jecxz
mov
jp,pn
jae
adc
pop
xlat
push
or
cld
imul
loop
mov
xor
ret
fimull
push
add
stos
js
js
mov
xchg
push
lods
fwait
jl
inc
repz
xor
lods
leave
clc
outsb
or
or
test
pushf
adc
pop
inc
jmp
cmovb
push
ret
insl
xchg
fld
push
cwtl
lods
xchg
pop
jae
xor
scas
mov
xchg
adc
loop
stos
cmp
test
sbb
pop
push
out
lods
or
das
aaa
jae
or
xor
cmp
je
and
adc
add
lcall
adc
roll
pop
fdivr
sub
pop
mov
inc
cmp
jge
jnp
inc
lret
mov
js
mov
xchg
stos
push
add
xchg
adc
loop
mov
cmpl
aad
std
out
pop
pop
and
outsb
addr16
and
lods
xchg
and
push
mov
jne
jbe
push
xor
fstps
lods
mov
cld
lahf
cmpsl
test
add
cmpsb
lds
dec
push
loopne
adc
mov
aad
fdivrs
stc
ds
int
dec
add
sbb
or
std
sar
push
xor
add
cmp
lods
imul
adc
lahf
mov
push
fwait
iret
aam
pushl
insl
push
fninit
and
xlat
cli
outsb
ljmp
aam
repz
cmp
aas
mov
push
test
testb
stc
inc
and
cmp
dec
cmp
repz
push
mov
mov
push
sub
stos
mov
xchg
mov
jl
jmp
cmp
sbb
mov
cmp
popa
ja
iret
into
ja
pop
sbb
shrb
int
add
jns
cmpsb
xchg
pusha
mov
xlat
jne
das
xor
cmp
jmp
pop
ret
push
mull
or
aas
pop
or
push
mov
add
sbb
xchg
jbe
xchg
sub
xchg
imul
ret
add
xlat
adc
les
mov
or
mov
sub
andnps
pop
mov
xchg
mov
adc
xchg
inc
push
adc
add
cmc
adc
fs
cmp
cmp
jecxz
inc
lods
iret
sub
fldt
je
mov
jge
dec
out
push
push
popa
pop
cltd
hlt
ret
push
mov
push
int
jge
cmpsb
icebp
mov
xchg
data16
push
sbb
ret
ss
ret
cmp
arpl
sahf
inc
sbb
pushl
pop
cmpsl
int3
popa
jbe
ret
push
sbb
test
lret
daa
sbb
inc
xchg
xchg
out
data16
dec
adc
jmp
xchg
mov
dec
test
insl
outsb
push
je
cli
mov
cmp
mov
rclb
push
and
mov
or
iret
jae
mov
cmp
pop
cmp
push
dec
pop
xor
sti
mov
inc
lea
adc
xor
mov
pop
fwait
cmp
addr16
cmpsl
xchg
mul
xchg
scas
mov
jnp
mov
bound
xchg
lret
add
addb
iret
pop
push
dec
mov
movsl
push
jge
adcl
repz
dec
pop
call
movsb
xchg
xchg
jmp
jg
inc
dec
push
rdmsr
pop
jo
jae
mov
sub
inc
mov
jne
ficoms
or
addr16
call
stos
push
pop
pop
cmpsb
inc
lahf
sub
lcall
xchg
mov
mov
xor
jne
adc
add
jbe
xor
dec
push
push
mov
adc
imul
mov
dec
mov
sbb
lods
jp
sahf
je
push
mov
pop
mov
pop
daa
jecxz,pn
ret
sub
outsb
pop
inc
stc
dec
lock
lret
adc
jns
mov
in
mov
push
dec
inc
xchg
adc
aas
repz
int
pop
pop
mov
mov
or
icebp
mov
scas
mov
jne
adc
xchg
pop
icebp
into
cmp
xchg
jo
rolb
xchg
inc
loope
mov
mov
divl
adc
push
dec
mulb
mov
jnp
push
sub
das
frstor
mov
repz
xchg
stos
lahf
jecxz
lahf
mov
xchg
clc
xchg
adc
xchg
dec
into
popf
loope
mov
sub
pop
jp
sub
movsb
cmc
ja
inc
lret
mov
ror
rcll
dec
cmp
xor
js
jle
and
mov
cmp
sbb
ss
in
inc
lahf
push
ret
xor
cmp
xlat
xor
test
jmp
leave
mov
int3
pop
push
jbe
xor
dec
icebp
inc
mov
lods
imul
js
scas
jns
pop
mov
jl
loope
xchg
mov
sub
insl
adcb
xchg
and
jno
adc
mov
mov
imul
fwait
sbb
xor
ret
push
divb
ja
adc
push
pop
and
subl
jle
push
sbb
xlat
cltd
fs
sub
xor
cmp
dec
cmp
or
add
leave
xchg
addb
fnstcw
push
in
jno
pushl
pop
adc
addr16
sbb
mov
inc
rcrb
lods
mov
cmpsl
mov
fwait
lods
out
std
mov
inc
in
lahf
aam
push
adc
cmp
and
dec
xchg
aam
adc
xor
jo
push
sub
dec
jmp
dec
fxch
xchg
ds
add
int
mov
dec
lock
jl
mov
fsubs
pop
movsl
lods
outsl
paddsb
fldt
jg
push
sub
jl
enter
mov
cwtl
cld
test
jecxz
mov
mov
enter
pop
addl
jmp
or
jns
es
fldcw
cltd
les
pop
shrl
push
mov
mov
ret
sbb
push
fisttps
sub
mov
push
add
fmull
xchg
adc
test
stos
sbb
cld
sbb
testb
and
gs
jae,pt
in
jns
lret
cmpsl
mov
test
std
imul
mov
adc
pop
data16
mov
out
mov
out
add
imul
jns
xor
xchg
push
sbb
out
sbb
stos
jmp
jb
fistpl
int
jg
xchg
das
movsb
data16
or
and
jbe
and
inc
sti
iret
xchg
xor
xor
sub
jmp
icebp
sub
ret
lds
std
xor
repz
mov
lods
mov
scas
pop
fimull
add
jo
cmp
daa
idivl
push
mov
pavgw
cmp
jb
pop
clc
iret
adc
loop
sbb
jne
xchg
adc
movsl
mov
jns
mov
push
ret
xor
mull
add
jb
outsl
mov
push
stc
sub
add
mov
sbb
jg
sbb
pinsrw
mov
cmp
cmp
dec
mull
lds
adc
pusha
sbb
bound
pop
cmp
leave
roll
sub
movsl
xchg
iret
jge
mov
xchg
mov
in
inc
lock
mov
sbb
je
int3
sbb
or
ret
outsl
mov
idivl
imul
test
push
pushf
or
jl
xchg
push
fcmovne
loop
push
xorb
sbb
popf
notl
fnstsw
adc
fisttps
xchg
xor
sub
loopne
and
or
dec
pop
pusha
mov
sub
jns
cmp
cli
xor
out
mov
dec
dec
fisubl
les
mov
pop
les
push
stos
pop
mov
test
or
outsl
mov
roll
pop
mov
rclb
pop
inc
xor
mov
aaa
lret
cmpxchg
dec
repz
dec
clc
mov
mov
and
dec
out
lea
cwtl
adc
pop
stc
inc
lcall
cmc
mov
stc
aam
and
cmp
fcmovne
lcall
xlat
repz
mov
pop
mov
pushf
mov
arpl
push
push
ljmp
sub
je
adc
or
mov
out
pushf
cmp
popa
mov
int3
in
xor
xchg
inc
or
sbb
push
inc
pusha
inc
cmp
adc
jle
pushf
sub
sbb
pusha
pushf
rcrb
cmp
pop
jbe
mov
imul
incb
or
fstpl
dec
lods
or
repz
cmp
add
cltd
movsb
not
add
mov
test
xchg
ja
push
std
ret
outsb
sbb
jmp
xchg
push
push
stos
outsl
fistps
shl
dec
push
out
imul
or
jne
fnstcw
out
push
sbb
jmp
xchg
stos
jecxz
mov
out
sbb
sbb
stc
je
stos
fmulp
jmp
adc
mov
inc
repnz
testl
lock
lock
ds
pop
cld
das
pop
add
lahf
jge
in
in
or
adc
cmpsb
aam
retw
pop
sub
pop
mov
fisubs
mov
cli
lret
jbe
jns
subb
mov
sti
mov
xlat
stos
or
out
out
in
xchg
ja
out
stos
or
add
pop
fdivr
push
loopne
push
sbb
mov
xchg
sbb
add
push
xor
or
push
and
aaa
in
inc
in
xlat
dec
push
cmp
push
call
mov
rolb
mov
aaa
pusha
dec
lea
add
push
xchg
lret
xor
aam
cmp
test
xchg
shll
imull
lods
fisubs
jecxz
adc
pop
adc
stos
loop
sub
pop
hlt
pop
sbb
mov
inc
pop
lea
mov
jb
repnz
imul
enter
pop
or
or
xchg
and
sub
xchg
movsl
je
out
pop
cmp
push
ret
test
enter
add
xchg
xor
movsb
mov
cmpsb
xor
mov
sbb
xchg
cmp
mov
ret
mov
cli
icebp
push
fnstcw
push
inc
sbb
inc
jle
mov
mov
sbb
mov
rclb
dec
mov
push
icebp
sbb
add
mov
xlat
test
outsl
sbbb
fisubs
mov
xlat
leave
pop
popa
test
push
xchg
adc
movsl
add
cli
pop
cmp
fimull
xlat
cld
enter
jae
inc
sbb
dec
js
pmaddwd
dec
sbb
cmp
and
adc
ret
jnp
and
inc
mov
outsb
repnz
mov
jns
int
cli
and
insb
jle
stos
jmp
inc
jb
xlat
pop
or
mov
mov
leave
lahf
out
jo
jnp
add
inc
lret
rcrl
jae
mov
jp
jmp
and
mov
sbb
and
arpl
and
mov
sbb
ss
jl
stc
filds
cmp
test
dec
in
jp
nop
jmp
inc
sbb
dec
popfw
mov
or
sar
inc
out
cmc
mov
dec
push
subb
out
lods
repz
mov
repz
sub
pop
clc
fcomps
loopne
fidivl
shrb
xchg
sbb
addr16
jmp
out
adc
ljmp
push
cmpsb
orb
std
cmpsb
outsl
jae
ja
cwtl
push
mov
lods
mov
or
xchg
es
mov
mov
add
repnz
adc
cwtl
rcll
loop
repnz
data16
int
sub
shl
mov
sub
xchg
sbb
fisttpll
fmul
push
push
lret
or
gs
xchg
mov
jns
adcb
jne
jo
mov
lret
int
mov
or
push
cmp
test
inc
int
xchg
aas
mov
ret
mov
pop
xchg
pop
jmp
into
sbb
fwait
cmpl
push
and
pushf
sbb
popf
cld
pop
lret
adc
sti
jno
sti
stos
xchg
loopne
js
scas
xchg
ja
mov
ret
mov
lods
xchg
xor
pop
rcr
jge
push
stos
dec
cmpsb
pop
aas
ljmp
jmp
mov
push
loopne
mov
std
sbb
xor
fdivl
es
ja
nop
aad
test
xlat
mov
jo
aaa
in
inc
inc
push
mov
and
lret
nop
inc
pop
jge
aam
add
enter
mov
xor
add
idivb
aaa
dec
addr16
jge
adc
leave
mov
lret
adc
adc
sub
inc
xchg
inc
cmp
ror
mov
sbb
je
insl
icebp
sub
push
xor
sub
lret
pop
aad
pop
and
adc
lds
cmpsb
add
test
sahf
dec
mov
pop
xor
adc
and
or
js
lock
mov
hlt
push
jge
mov
or
push
xor
mov
out
cwtl
je
adc
leave
inc
or
mul
pop
je
cmpb
test
insb
test
loope
sub
jno
push
cmp
mov
outsl
mov
lfs
repz
mov
lea
xchg
out
out
mov
mov
jo
pushf
jns
ror
cmpsb
insl
and
clc
xor
adc
push
lret
aad
movsl
loop
push
iret
push
xchg
gs
dec
cmp
aaa
xor
gs
push
iret
or
push
inc
push
jo
mov
in
mov
hlt
test
dec
or
arpl
adc
loopne
jns
cli
push
add
lret
adc
sbbb
out
repz
inc
sahf
inc
push
ds
lea
insb
pop
push
popa
xchg
test
into
fistl
test
xorl
stc
or
and
mov
subl
lret
in
mov
sbb
jp
neg
pavgw
fisubrs
pop
jmp
sub
js
ljmp
xor
push
dec
push
jne
iret
das
cmp
sub
icebp
call
or
add
xchg
inc
dec
add
imul
loopne
add
negb
jne
call
mov
mov
decb
dec
mov
loopne
scas
jecxz
movsb
sarb
pop
mov
mov
mov
add
cmpsl
shl
sbb
mov
or
out
das
sub
xlat
sbb
out
lods
mov
sbb
jge
or
jle
add
cmc
cmpsb
insl
addr16
pop
mov
jge
xchg
outsb
outsb
sub
pop
outsb
inc
adc
stc
pop
dec
and
lds
mov
pop
lods
mov
or
std
rclb
xchg
lret
and
jo
notb
xchg
mov
inc
orl
lods
mov
and
dec
sub
movsb
xchg
push
je
mov
mov
mov
pop
mov
lret
jp
insl
les
fs
jnp
push
into
pushf
clc
xchg
int
pop
flds
mov
jo
sti
rclb
pop
sbb
fistpll
add
sub
adc
inc
jle
dec
out
repnz
xchg
mov
and
cmp
lahf
sub
jo
xlat
pop
cs
ss
rcr
xor
pop
mov
into
xor
ret
orb
cmc
mov
push
lret
and
dec
popf
push
scas
mov
fsubs
jno
pop
dec
xchg
inc
mov
pop
inc
jp
movsl
in
sbb
lcall
insl
vcvtsi2ssl
xchg
jg
call
mov
jge
mov
push
dec
push
xchg
adc
and
mov
inc
arpl
inc
cwtl
out
in
mov
rolb
or
daa
scas
push
rcll
je
cmp
push
scas
mov
mov
loopne
mov
lahf
roll
int3
mov
fs
or
xchg
cmp
loop
inc
or
or
sar
ds
jb
int3
aas
adc
fidivrl
mov
pop
mov
cmp
adc
push
mov
pop
fimull
cwtl
cmp
inc
in
inc
adc
cmp
pop
lods
lahf
out
orl
jb
pop
andb
out
lret
test
fmull
pop
or
dec
rol
int3
imul
stc
xor
rcrl
addr16
addr16
mov
es
cs
push
les
mov
mov
pop
pop
push
mov
lock
ret
and
and
jecxz
mov
mov
cwtl
inc
into
jae
loopne
xor
pushf
daa
sbb
ja
test
rcrb
popa
idiv
fs
xorb
xchg
js
sub
mov
pop
cmp
mov
mov
repz
pushf
mov
sbb
xor
testb
jg
pop
xor
imul
jbe
xlat
ds
mov
cmc
mov
pop
popf
mov
sbb
test
test
scas
int
push
dec
xor
cmp
aad
outsl
mov
sub
stc
jno
imul
jne
add
shll
jge
cmp
push
add
in
adc
into
ja
xchg
push
push
pop
fnstcw
outsb
mov
imul
cmp
jl
out
xor
mov
shl
mov
in
aam
nop
inc
adc
pop
ss
arpl
enter
inc
aaa
lcall
add
push
lea
fildll
jl
mov
aam
xor
sbb
test
divb
xchg
xlat
jg
pop
xchg
xlat
ja
sub
or
mov
test
out
test
cli
enter
add
pop
cmp
loope
push
jmp
std
cli
mov
jbe
push
xchg
xor
or
jo
inc
adc
nop
inc
pop
add
popf
test
mov
push
inc
adc
rclb
daa
pop
sbbl
hlt
in
incl
push
jno
add
cmp
jns
mov
adc
mov
push
push
ljmp
mov
rcrb
int
imul
mov
jmp
aad
ljmp
cld
mov
pop
cs
xchg
lret
pusha
xchg
adc
clc
xchg
sub
cs
cmp
sub
push
sub
mov
insl
into
mov
out
push
stc
push
shll
mov
push
jmp
imul
inc
cwtl
ja
out
movsl
add
add
cmpsb
pop
sub
mov
lods
sbb
jne
xlat
sub
pop
jmp
xor
adc
inc
sahf
lret
cmc
jne
shll
notl
pop
and
gs
movsb
inc
inc
imul
fldcw
jo
sbbb
mov
fbstp
jno
add
testb
dec
subl
divl
fdivl
out
rcll
int
cmpsb
cmpl
add
push
cmpsb
xor
scas
jecxz
imul
mov
sub
dec
jp
js
sub
popa
ljmp
cwtl
aam
std
xor
ret
or
gs
aas
fiaddl
popa
xorl
aaa
pop
mov
in
cmp
lea
das
insb
add
mov
aaa
ljmp
jle
mov
jl
pslld
shl
sub
call
into
jnp
lret
cwtl
fwait
mov
add
repz
dec
pop
adc
jne
lcall
in
sub
rcl
and
push
int
stos
icebp
push
push
ljmp
jmp
sbb
es
daa
rcr
je
arpl
sub
xor
fdiv
pop
cltd
jmp
gs
repz
test
and
adc
xor
aaa
push
cs
cmpsb
in
push
idivl
fbld
xor
pop
enter
insb
lret
push
lret
pop
jl
push
jnp
int3
and
push
lret
adc
fsubrs
mov
loope
ss
cltd
sub
xor
xor
pop
mov
mov
test
ds
adc
imul
xor
gs
test
icebp
push
rcrb
fsubrl
mov
das
das
int
push
gs
fimuls
push
cmp
das
mov
add
lahf
stos
xchg
push
repnz
sub
je
int3
mov
and
jb
popf
call
imul
pop
ss
xchg
lods
shrb
cmp
sub
jne
jae
cmc
not
sbb
inc
mov
dec
inc
sbb
or
pop
jge
flds
mov
fistps
add
int
mov
mov
mov
int3
loope,pt
adc
movsb
in
jns
stos
push
rcr
jmp
das
test
fcoml
pop
pop
loope
pop
xor
xor
bound
repz
lea
int3
pop
pop
add
pop
sbb
bound
jle
clc
lcall
inc
sbb
fiadds
imul
add
or
xchg
lods
inc
stos
lret
jbe
lahf
or
aas
aam
jo
out
mov
jl
mov
inc
mov
mov
loope
xor
stos
sub
xchg
jg
xor
lret
stc
add
pop
jecxz
jp
dec
mov
sbb
int
adc
jecxz
aad
inc
rorl
or
in
jl
sahf
pop
inc
cmp
add
hlt
pop
cmp
popa
js
lds
addb
lret
or
xor
adc
adc
aaa
js
mov
push
mov
push
lds
mov
cmp
outsb
fcompl
sbbl
lret
or
push
and
push
scas
sub
mov
ficompl
add
push
mov
iret
call
cmp
inc
pop
lds
inc
daa
mov
dec
add
jg
shll
loope
lea
push
push
setl
ret
or
xor
xor
test
or
out
add
adc
loop
mov
movups
lock
push
popf
add
xchg
sbb
sahf
mov
sahf
cmc
push
bound
insl
sub
pushf
sbb
pop
mov
lods
enter
cmpsb
shll
stos
lret
je
xor
fnstcw
jo
cwtl
jmp
pop
lret
sbb
mov
int3
dec
mov
push
push
rclb
cs
fisttps
lods
fbld
push
adc
movsl
sahf
and
hlt
ljmp
ror
mov
insl
adc
cmpsl
stos
adc
add
aad
fbstp
ss
xchg
jnp
push
and
in
lods
test
cmp
lret
cmp
xor
cmp
xor
add
addr16
mov
dec
or
dec
in
push
dec
inc
mov
mov
insl
pop
jmp
or
lret
in
in
sub
sub
arpl
cmpl
pop
pop
add
xor
cmpsb
cld
aaa
pop
pusha
shrd
fmull
sbb
addr16
icebp
push
jns
in
sbb
or
and
or
into
dec
push
pop
xchg
pop
call
inc
leave
jb
dec
push
mov
push
and
adc
fadd
popf
dec
repz
pusha
imul
je
jp
les
aaa
cmp
cmp
xorb
sahf
add
in
mov
jmp
test
ja
sahf
insb
mov
pop
sbb
gs
mov
xchg
jnp
pop
pop
aaa
sti
xor
jge
movups
xchg
jecxz
in
lcall
lock
xor
jbe
cmp
xchg
xor
xchg
cld
and
add
add
dec
add
dec
or
sub
jno
jle
insb
xchg
jle
push
ds
lds
push
pop
xchg
nop
out
ret
xor
cltd
pop
mov
or
mov
xchg
dec
arpl
xor
sbb
adc
ss
loop
jae
jge
dec
cltd
push
test
std
mov
gs
cmpsb
pop
and
sti
aas
fidivs
fcompl
push
aas
jmp
aas
mov
repz
fisttpll
test
mov
push
jnp
decb
xor
push
pop
xchg
mov
aas
outsl
imul
iret
dec
push
cwtl
sub
repz
int3
cmpsl
filds
shrb
mov
int
repz
mov
popa
jb,pt
jb
mov
dec
test
cmp
andl
adc
in
mov
inc
jmp
ret
xchg
clc
outsl
cmp
std
push
lods
dec
sbb
stc
push
sar
xchg
addr16
into
dec
fsubl
lods
jecxz
cs
sub
dec
pop
loopne
test
pop
mov
gs
clc
rcr
dec
stc
xchg
sub
or
xorl
out
in
sbb
mov
xchg
push
aas
push
stc
and
inc
xor
mov
mov
adc
push
sti
xchg
adc
sub
push
call
cmp
cmc
test
fmul
jl
cmp
test
push
int3
push
popf
inc
scas
ret
and
push
xor
inc
inc
and
gs
push
je
movsl
cli
inc
out
xchg
xchg
pop
cli
fsubl
lcall
mov
popf
mov
inc
pop
mull
pop
in
xchg
xor
test
dec
push
lods
mov
orb
dec
movsb
fisubrs
sub
jo
jp
sbb
push
lods
enter
mov
cmpsb
xchg
adc
roll
test
ficompl
xchg
xlat
test
jmp
mov
push
mov
mov
sub
push
xchg
mov
fidivs
jne
sbb
loop
xor
adc
pop
ret
mov
popf
mov
flds
shll
out
lcall
clc
sbbl
loop
jge
and
add
cmpsb
ljmp
pop
inc
shl
cmc
lock
movsb
cmp
mov
aam
or
punpckhbw
enter
sbb
aam
cmp
add
orb
jmp
or
enter
add
rolb
pop
in
push
mov
mov
jo
or
push
pop
add
js
mov
cld
sub
and
fwait
mov
lcall
inc
fisttpl
cmc
adc
pop
rcll
push
test
inc
jae
inc
ret
jg
or
or
dec
subb
into
loop
inc
push
out
mov
jl
mov
cmp
in
gs
movw
mov
int
and
mov
jnp
insl
hlt
jae
out
and
movsb
and
push
mov
mov
adc
aad
call
xor
inc
lahf
sub
mov
xchg
bound
mov
outsb
gs
sub
xor
pop
fstps
bnd
clc
cmpsl
push
pop
fsubrs
sub
insb
ljmp
cs
or
mov
aaa
lahf
das
mov
push
inc
cmp
testl
jb
inc
mov
dec
out
add
shll
sub
clc
test
jno
pop
scas
out
jecxz
psubusw
dec
fildl
mov
dec
aam
inc
fsubrs
shlb
fmull
stos
jo
push
leave
xchg
adc
add
nop
mov
pop
clc
dec
jno
cld
test
test
rcr
push
fwait
xchg
out
mov
add
add
lret
fstl
lea
in
iret
fidivs
xor
jb
rcll
adc
je
cltd
roll
in
pop
ss
mov
dec
std
je
sbb
leave
and
cltd
data16
aad
pop
or
push
mov
jno
mov
in
addr16
sbbb
scas
in
bnd
and
cmc
mov
out
stos
mov
add
adc
out
test
stos
mov
scas
inc
pop
out
js
outsb
sbb
mov
add
sub
rorb
xchg
int
icebp
xchg
or
xor
pusha
sbb
test
repnz
and
xor
push
push
mov
xchg
sahf
popf
or
in
in
leave
insl
add
pop
dec
inc
jle
push
adc
pop
pop
jbe
xchg
jns
test
inc
pop
ret
jle
xor
mov
jb
movsl
scas
push
pop
fdivrl
inc
or
pop
rcr
movsb
xor
xor
insb
add
xchg
cmp
pop
mov
dec
and
jecxz
mov
and
and
jp
sub
movsb
fstl
add
mov
je
stc
dec
inc
add
or
test
fldt
test
and
je
jge
jns
inc
in
pop
test
fisubl
xchg
mov
mov
jmp
or
or
inc
rorb
push
adc
mov
test
mov
pusha
pop
jo
call
lods
xor
mov
and
inc
mov
hlt
add
jno
lret
push
dec
sbb
mov
add
sub
sub
outsl
call
push
cmc
sub
add
add
jne
test
jne
mov
fidivs
ret
adcl
jg
leave
sti
sbb
aam
ss
adc
sbb
mov
cmc
test
mov
cmc
lahf
mov
push
popf
push
mov
cmpsb
inc
outsb
aaa
jl
fnstcw
or
jae
or
pushf
jno
lahf
rcll
pop
sti
pop
outsb
inc
sbb
mov
xor
or
roll
in
and
incl
xchg
sub
hlt
jne
xchg
repnz
stos
cs
xchg
lods
inc
imul
ds
ret
leave
aaa
test
jl
add
mov
repz
addr16
lahf
add
test
lret
out
xlat
mov
addr16
sub
or
lock
pop
add
mov
dec
and
bound
sbb
dec
adc
lock
push
xchg
and
xlat
pop
inc
sub
jmp
filds
rorl
sbb
arpl
mov
inc
mov
cmp
subb
sti
dec
shrb
push
mov
mov
je
xor
or
mov
fnstsw
fisttpll
hlt
jg
gs
rorb
cmc
fldenv
idiv
xor
xchg
push
ljmp
std
stc
push
decb
rcrl
pushf
add
xrelease
jb
ds
mov
hlt
mov
adc
test
fdivs
cmp
jmp
cwtl
cmp
adc
repz
pop
cld
adc
call
xor
xchg
sub
and
shlb
xchg
xchg
xchg
sbb
jnp
clc
adc
sbb
cmp
xor
sbb
jl
nop
loop
outsb
iret
jge
arpl
mov
sbb
push
mov
insb
or
mov
cmp
rolb
mov
outsl
popf
inc
popa
insl
bound
xchg
xor
jecxz
sbb
sti
sbb
pusha
push
cltd
stc
outsl
sarb
xchg
lock
data16
xor
lods
mov
or
or
test
ljmp
ret
adc
in
das
inc
pop
clc
lahf
insl
inc
in
cmp
sbb
pop
jne
and
scas
fisttps
fisttpll
call
js
sub
js
mov
lahf
sub
arpl
pusha
leave
nop
push
cmp
add
and
mov
jl
mov
dec
jmp
dec
pop
push
xor
inc
xchg
or
add
hlt
ficomps
pop
push
dec
and
mov
sbb
mov
pop
outsl
jns
pop
imul
pop
jnp
adc
push
push
mov
mov
xor
je
xlat
xchg
sbb
pop
icebp
arpl
mov
sub
daa
insl
aaa
pop
adc
dec
bound
insl
push
xchg
xchg
mov
jne
adcl
push
clc
sub
xlat
mov
sbb
or
mov
ret
mov
lea
mov
and
lcall
xchg
adc
lcall
imul
sar
lcall
lahf
nop
gs
mov
and
vshufps
xor
sbb
jo
dec
out
inc
insl
mov
ja
punpckhwd
js
inc
mov
fwait
dec
sub
inc
pop
cmp
cmp
je
mov
mulb
mov
ret
or
sbb
adc
pop
jbe
ffreep
les
das
ja
les
mov
jbe
xchg
js
sub
pop
ffreep
ja
adcl
sbb
fistps
fucom
pop
daa
jg
pop
call
test
jl
movsl
mov
clc
out
cmp
sti
imul
adc
xchg
out
cmp
in
or
mov
outsb
jns
clc
fwait
mov
in
xor
and
cmp
mov
insl
xchg
sub
add
addl
lcall
fwait
out
pop
mov
or
faddl
and
mov
push
push
stc
lahf
lock
notl
cmp
fsub
insb
jge
aad
and
xor
mov
aam
inc
lret
lds
repnz
in
cwtl
mov
scas
mov
jmp
push
imul
mov
cmp
or
xlat
add
hlt
ficompl
mov
orl
xchg
imul
mov
leave
mov
pop
pop
xchg
xchg
cmp
jns
mov
lea
xor
in
push
push
shll
movsl
orb
fsts
fcompl
mov
sub
and
iret
aas
icebp
sti
pop
mov
lret
push
xor
inc
ja
mov
xchg
insl
jbe
insl
ja
popf
or
dec
cmp
outsl
repnz
jg
mov
imul
ret
dec
sbb
aam
fists
push
add
jg
in
das
xchg
aaa
pop
cwtl
sti
loope
push
loope
mov
rcll
pusha
push
xchg
adc
test
xchg
ss
sub
enter
or
shlb
push
sub
mov
cltd
sub
insl
mov
cmp
cli
push
mov
cmp
scas
xchg
sbb
popa
dec
xlat
sbb
fldt
scas
push
fidivl
cltd
cwtl
lahf
arpl
xchg
fwait
pop
rol
jns
gs
bound
sbb
or
xor
data16
out
inc
leave
mov
into
lea
enter
inc
fisubl
loop
xchg
cmp
sub
iret
sbb
daa
outsb
sbb
in
inc
hlt
xchg
outsl
or
inc
shrl
inc
xor
iret
data16
xchg
cvtdq2ps
add
lods
sbb
xchg
inc
mov
pop
jno
dec
addb
sbb
dec
negl
jb
aaa
fldenv
jns
push
or
adc
lea
or
xchg
sbbl
mov
cwtl
or
and
sub
nop
in
imul
or
sub
repz
jle
scas
out
imul
pop
or
mov
jecxz
push
pop
cmp
shlb
outsb
pop
cld
xchg
cwtl
adc
inc
scas
dec
mov
mov
popa
leave
lcall
mov
inc
mov
push
or
xchg
nop
adc
loop
inc
sub
push
cmpsl
dec
mov
add
push
nop
ret
negb
test
iret
xchg
mov
pop
add
sub
mov
rolb
mov
xor
cmc
pop
adc
jg
das
rcl
aas
fsubrl
mov
clc
xchg
sub
ja
movsl
das
sub
cs
sahf
mov
shlb
jne,pn
es
mov
add
cmp
movsb
mov
in
adc
pminub
adc
nop
sbb
mov
pop
inc
xchg
dec
fbld
pop
xor
sarb
out
std
pop
movsl
insl
jns
pop
out
dec
aam
xlat
flds
sahf
dec
mov
adc
sub
imul
es
sbb
fcompl
pop
jns
int3
lahf
cmp
out
test
sbb
out
pop
iret
in
xchg
push
addr16
pop
jl
mov
clc
aas
or
cmpsb
loopne
pushf
sub
mov
push
sbb
cs
mov
rclb
mov
ljmp
push
cmpsb
ret
jne
jl
cmp
in
push
inc
or
subb
leave
leave
mov
fisttpll
ljmp
pop
les
pop
outsl
jmp
test
pop
loopne
cmp
mov
pop
lahf
mov
jle
insb
mov
sub
and
hlt
testb
cmp
aaa
pop
mov
mov
arpl
push
or
or
mov
pop
xor
xor
sbb
sbb
aaa
add
lcall
clc
pop
cmp
popf
es
lcall
outsb
fcomp
jmp
inc
movsl
mov
pop
or
pop
jmp
fwait
inc
icebp
clc
daa
in
out
test
and
and
in
cmp
sub
test
sbb
test
scas
jo
fmuls
pop
push
sbbb
lret
push
inc
pop
subb
out
cmc
sub
test
test
ss
das
xor
punpcklbw
pop
mov
mov
pop
mov
push
add
pushf
test
mov
scas
or
sbb
jge
push
movsl
push
xor
cmp
in
sti
loope
rcrl
movb
pop
xor
adc
gs
mov
mov
push
jge
sarb
pop
pop
jg
out
faddl
jp
jne
movsl
fs
adc
xor
xchg
std
jp
sahf
mov
mov
out
jbe
xlat
and
inc
movsl
imul
daa
repz
mov
sti
jmp
js
je
mov
jp
push
movsl
adc
add
inc
xchg
and
rclb
add
movsb
and
cmp
cmp
sbb
iret
rol
bound
push
fildl
mov
cmp
mov
lods
cli
cld
add
cli
shlb
sbb
shll
add
ja
or
adc
add
fsubl
hlt
pop
fsubrl
mov
or
mov
popa
inc
jmp
cmp
mov
add
adcb
sahf
fwait
mov
cmp
cmpsb
inc
cwtl
fisttpl
ret
ret
sahf
sbb
idiv
jnp
inc
fstpt
test
jmp
sub
jge
or
setnp
clc
ficoms
cmp
mov
jb
inc
dec
jne
scas
mov
or
in
sub
adc
jo
mov
into
xchg
mov
imulb
add
fsubl
js
pop
sti
jle
mov
and
jp
popf
xor
mov
xlat
sbb
jo
jl
cmp
sbb
pop
addr16
cmp
in
sub
cmp
das
mov
push
mov
repz
dec
sub
mov
sbb
sub
mov
mov
loope
jns
xchg
movsb
stc
cmp
bound
loope
pop
inc
jns
das
lcall
mov
int
scas
xor
jb
outsb
sub
pop
dec
repnz
adc
repz
dec
or
repz
dec
xchg
mov
imul
bound
insl
subb
pusha
pop
insl
cwtl
sub
repnz
mov
xchg
roll
push
insl
inc
ror
dec
fisttpll
xchg
mov
bnd
fsubrs
pop
aad
rorl
les
or
pop
push
sub
xor
inc
iret
cmp
fdivrl
jb
sub
aad
lret
or
repz
push
repnz
or
mov
