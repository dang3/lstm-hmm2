push
mov
mov
push
mov
xor
sub
mov
test
je
xor
jmp
sub
roll
inc
mov
inc
cmp
jb
xor
inc
pop
pop
ret
push
mov
sub
push
push
push
call
mov
push
pushl
call
mov
push
push
call
push
call
mov
mov
mov
movl
jmp
mov
sub
mov
mov
xor
push
pop
div
push
pop
mov
sar
mov
mov
xor
push
pop
div
mov
mov
shr
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
mov
push
pushl
push
call
add
cmp
je
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
sar
or
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
imul
mov
mov
xor
push
pop
div
mov
mov
shr
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
pushl
call
push
push
push
push
push
push
call
pushl
pushl
pushl
call
push
call
pushl
call
push
push
call
pop
pop
push
call
push
push
call
push
call
push
call
pop
pop
leave
ret
int3
int3
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
adc
or
cmp
mov
jmp
pusha
nop
in
loope
fstpl
xor
fimull
push
ss
out
jmp
mov
adc
roll
js
pop
mov
daa
dec
cmp
push
inc
dec
daa
add
inc
addr16
cmpl
pop
add
fwait
xor
pop
xchg
rolb
xlat
fmull
fists
and
mov
daa
call
adc
hlt
cli
dec
idivb
gs
xchg
arpl
stos
test
inc
add
and
orl
cmpsl
mov
sar
mov
adc
test
pop
sbb
push
dec
xchg
mov
mov
or
pop
mov
shl
mov
pop
subb
popf
das
std
mov
xlat
stos
ja
jns
sub
push
cs
xchg
mov
stos
cmp
cmp
sti
pop
or
add
jo
fcmovbe
rcrl
push
adcb
shll
fistpll
push
mov
mov
rorb
pushf
inc
add
movsb
frstor
dec
inc
adc
mov
movsb
adc
jo
idivb
fildll
jnp
js
cld
sub
fisubl
std
mov
xchg
or
arpl
mov
xor
jp
scas
loopne
sahf
addr16
hlt
or
imul
test
shrl
mov
jecxz
fildl
push
sbb
pop
or
in
sub
inc
push
cmpsb
ret
push
jo
outsl
xchg
pop
dec
sbb
jae
rcrl
inc
push
imul
cmpsb
dec
test
jmp
add
ds
or
divl
jecxz
call
dec
mov
add
stos
inc
shlb
cmp
inc
adc
test
out
arpl
cmp
mov
cwtl
mov
mov
int
pop
sarl
aam
pop
loop
lea
or
insl
sub
push
outsb
adc
inc
adc
add
test
lods
or
sbb
lret
mov
sbb
mov
jno
mov
xlat
jno
or
js
push
dec
xchg
pop
add
test
xchg
jbe
add
xor
xchg
pusha
dec
lahf
push
movsb
adc
push
outsb
daa
cltd
xabort
aas
shlb
jbe
dec
xchg
mov
push
mov
addb
sub
or
rcr
stos
adc
insl
ds
imull
sti
lret
adc
adc
pusha
shrl
sub
cmp
rcrb
movsb
cmc
push
mov
cmp
mov
pop
popa
pop
xchg
out
sub
inc
sub
and
mov
xor
lods
shrl
mulb
inc
jno
xor
int
cmc
and
xchg
aam
hlt
shll
or
movsb
pop
daa
jp
jge
jmp
and
sbb
cwtl
ficoml
stos
out
outsl
add
mov
push
aaa
insb
inc
aaa
pop
movsl
arpl
lret
jp
and
int3
jmp
scas
cmp
lcall
lret
negl
sahf
enter
cli
lods
jns
jno
add
xchg
icebp
fistpl
mov
add
add
jnp
inc
inc
mov
push
in
scas
jl
mov
jns
cld
or
pop
mov
lock
outsl
rol
xor
sub
push
jmp
es
es
pop
inc
jno
push
mov
into
jne
int3
mov
loope
divl
in
inc
out
inc
test
jbe
jbe
xor
sti
push
les
sub
daa
sahf
mov
adc
scas
mov
rcll
mov
popf
mov
clc
or
sub
lea
pop
test
ret
test
test
mov
scas
inc
out
pop
enter
orl
jbe
jle
imul
sbb
jg
stos
and
xchg
fcompp
cwtl
dec
fisttpl
adc
notb
mov
jno
test
lcall
dec
mov
mov
xor
mov
mov
push
mov
adc
xor
and
in
mov
je
ficoml
or
jbe
filds
mov
sub
cmp
adc
out
in
mov
loopne
aas
mov
repnz
push
je
mov
cli
add
and
sub
fld
or
mov
push
lds
jp
in
dec
mov
jns
adc
jle
mov
test
mov
std
scas
jmp
mov
lods
cltd
inc
jecxz
ffreep
dec
cmpb
and
cmp
in
mov
sbb
dec
enter
stos
xor
mov
sub
sbb
sub
mov
xor
ss
sbb
mov
clc
jo
mulb
daa
mov
dec
cmp
mov
insb
jae
pop
mov
imul
cli
inc
push
xor
fnstsw
iret
int3
inc
pop
and
or
dec
je
ss
xchg
push
rcll
ds
xchg
popa
div
sahf
jg
inc
push
mov
mov
rcll
pop
mov
sahf
stos
loope
pop
mov
cmp
xchg
jno
aam
stos
filds
fcompl
adc
mov
mov
add
mov
adc
decl
push
and
jb
cs
mov
xchg
mov
and
or
aad
add
dec
arpl
hlt
sub
int3
frndint
mov
aaa
sub
loop
ret
push
push
out
daa
mov
push
imul
fiaddl
xchg
jle
or
in
lods
push
mov
mov
ret
push
addr16
fwait
in
add
popa
in
pop
mov
stc
and
mov
repnz
mov
add
push
test
outsl
mov
pop
or
push
nop
into
jmp
push
fiadds
dec
sahf
xor
xor
ds
dec
popa
xchg
mov
ja
into
xchg
insl
mov
mov
jecxz
cmp
adc
cmp
jg
dec
in
clc
pop
jge
mov
test
add
push
call
repnz
lret
mov
xor
fs
adc
jmp
ja
sub
push
pop
add
and
xchg
sarl
cltd
mov
loopne
in
roll
cmpsb
les
jae
aas
fdivrs
xlat
push
in
loop
jno
mov
fwait
test
cli
inc
or
mov
test
sub
push
js
mov
or
cmp
ret
sub
mov
mov
test
cwtl
cmpsl
mov
lods
push
je
je
inc
push
or
movsl
push
mov
and
and
test
and
mov
add
sahf
test
cmp
jae
pop
rorb
ret
or
adcl
int
jle
test
je
stos
shrb
out
cmpsb
into
outsb
icebp
mov
enter
xor
lcall
dec
pop
cld
xorl
test
mov
in
movsb
ficompl
add
fsubs
call
fwait
dec
mov
sub
rorb
xor
push
std
inc
mov
iret
in
arpl
mov
shl
ss
adc
addr16
sub
pop
testb
mov
loope
mov
test
sbbb
or
mov
roll
shll
fsubrl
insl
pop
cs
push
push
mov
lret
jge
push
jo
push
iret
pop
lahf
pop
mov
jg
es
pop
fistl
and
push
mov
test
xor
lods
je
lret
adc
imul
mov
pop
int3
pop
fmul
jnp
xchg
loop
or
ficomps
mov
cld
inc
addr16
jl
lock
mov
push
shl
cmp
pop
adc
loop
test
mov
push
ljmp
mov
mov
mov
and
pop
gs
dec
mov
arpl
sbb
pop
addr16
ljmp
cltd
sbb
nop
dec
jbe
enter
imul
mov
call
roll
in
xchg
cmp
sahf
adc
xor
arpl
aas
das
pop
jmp
out
jb
jae
shl
cmp
xchg
loope
into
push
aas
test
xchg
js
xchg
jge
xor
je
lahf
fiaddl
pop
xlat
pop
out
sahf
cmp
mov
and
and
adc
push
inc
pop
pop
mov
jle
fs
adc
add
icebp
iret
ret
gs
popf
ljmp
test
xchg
icebp
movsb
jbe
lea
dec
cmp
subl
icebp
dec
mov
rolb
inc
clc
call
mov
jns
pushf
push
xorb
bound
cmp
js
mov
sbb
iret
pop
sbb
pop
push
ja
xchg
sbb
pop
pop
mov
movsl
mov
enter
jge
inc
inc
inc
lock
out
xchg
push
xchg
std
or
icebp
lcall
mov
imul
mov
and
inc
sub
mov
or
outsb
cmpsl
rcrl
cmp
xor
mov
out
gs
inc
sbb
push
dec
scas
les
test
cmp
sub
sub
xchg
add
push
and
or
mov
in
lret
or
add
jns
lcall
cmp
insb
sbb
inc
std
in
aas
xor
aam
pop
lcall
inc
xor
and
ret
jmp
loop
jge
cmp
cwtl
jno
lods
dec
ja
adc
scas
les
dec
cmpsl
push
mov
or
pop
in
sbb
xchg
and
xchg
xchg
fdivs
out
outsb
mov
daa
push
sub
sub
adc
cltd
sbb
add
aaa
lea
jnp
pop
xchg
fisttps
adc
js
xor
mov
push
movsb
sub
shrb
adc
dec
jnp
sbb
lock
insb
leave
jns
test
ret
jmp
movsb
mov
inc
pop
sbb
mov
mov
lret
push
push
imul
cli
aam
and
ret
in
xor
jns
fldl
or
imul
rcrl
in
insl
leave
mov
cmpsl
push
imul
in
mov
xchg
lods
sub
mov
pop
mov
repz
fdivrl
decl
or
dec
lea
xor
stc
inc
sub
lods
pop
xchg
cmpsb
inc
sbb
fwait
jbe
mov
nop
int
push
lods
jmp
cmp
pop
and
fstps
push
mov
dec
iret
and
dec
sub
adc
inc
das
and
adc
sbb
shlb
xlat
aad
adc
sbb
loope
sti
inc
mov
and
push
in
outsl
js
mov
xor
test
arpl
and
test
loopne
lods
lods
mov
sarl
out
je
lods
fisubrl
lds
xor
mov
daa
mov
dec
ret
iret
icebp
pop
push
push
push
shrb
inc
scas
mov
scas
cmp
fs
jmp
mov
xchg
add
in
xchg
or
mov
and
lock
jmp
mov
xchg
jge
out
cmc
sbb
mov
call
push
fstl
lahf
aam
adc
adc
hlt
mov
or
jp
testl
add
sub
mov
clc
mov
aam
repz
xchg
push
dec
xchg
push
popf
jnp
ja
cs
jns
add
fsub
out
out
or
adc
stos
scas
cwtl
push
xchg
push
inc
dec
mov
mov
cmp
fidivrs
push
mov
sbb
decb
aad
xchg
xchg
mov
std
jb
cmp
lret
mov
xor
push
push
xchg
mov
sbb
adc
shll
xor
sub
pop
jns
pop
inc
adc
sbb
xor
add
or
mov
jle
aas
lea
adc
std
sbb
cmp
outsl
popa
pop
icebp
insb
cli
out
sbb
lret
adc
mov
scas
or
push
xchg
mov
sahf
sub
cmp
xchg
or
scas
mov
mov
mov
test
pop
inc
mov
cld
arpl
pusha
or
mov
adc
mov
add
jae
mov
xchg
iret
jmp
push
shll
rorb
stos
inc
mov
mov
int
frstor
push
shl
fcomip
in
adc
mov
pop
cmc
imul
and
sbb
mov
out
lret
in
or
add
xor
cmp
ret
fnstcw
mov
in
pop
cmpsb
lds
mov
xchg
jge
mov
push
xchg
xchg
jge
scas
test
test
movsb
call
push
jmp
inc
test
pop
sti
jp
je
push
cwtl
jl
ds
push
mov
mov
les
mov
lret
pop
imul
scas
scas
jb
test
loope
mov
and
lds
xchg
mov
rcrb
nop
je
pop
xor
mov
aad
cld
inc
lock
dec
xlat
in
sbb
lea
loopne
or
jge
pop
xlat
cli
leave
mov
lea
sub
pop
sbb
and
or
ds
push
sub
adc
ret
adc
cmp
stos
push
out
popf
jbe
mov
insb
in
popa
aam
loope
mov
test
out
out
mov
hlt
xchg
aas
or
rclb
out
rcrl
jg
mov
test
jns
leave
icebp
js
shl
pop
sub
rol
ljmp
outsl
jmp
pop
sub
xlat
cld
xchg
mov
mov
pushf
dec
lret
roll
loopne
cld
insl
test
inc
aam
adc
mov
xor
pop
mov
mov
nop
sub
aad
arpl
or
popf
in
cld
test
lea
testl
test
push
cmp
adc
add
add
outsb
xor
hlt
lea
mov
out
xor
fcos
jge
rolb
mov
test
test
and
inc
into
in
call
rcl
jecxz
in
push
ret
add
and
sub
jae
xchg
pusha
rcr
aas
mov
add
cwtl
pop
add
push
push
push
push
out
push
jo
sahf
mov
addr16
sahf
inc
mov
mov
pop
repz
mov
cmp
ss
add
icebp
sub
cli
cltd
sbb
stos
es
adc
cmpsb
jecxz
or
push
xchg
stc
push
xchg
loop
mov
pop
shlb
cwtl
hlt
cltd
sti
add
adc
xchg
lret
mov
pusha
add
pop
cld
adc
mov
js
inc
fwait
jp
ja
adc
dec
inc
cmp
jl
mov
xor
xor
mov
or
imul
cld
sub
popf
lret
push
sbb
inc
or
adc
lahf
sbb
jecxz
mov
ficomps
xor
add
sbb
shl
mov
mov
test
push
xchg
cmp
push
mov
xchg
shll
jb
xchg
xor
adc
out
jmp
test
xchg
lock
pop
lea
popf
outsl
es
ljmp
lock
pop
lods
sti
mov
cld
in
push
cmpb
xchg
sti
or
jecxz
dec
cmpl
cmp
xchg
jmp
test
aam
mov
jl
or
into
imul
mov
sbb
fs
jmp
lahf
movsl
lret
pop
xor
pop
rorb
stos
cmp
sarl
lods
jle
sbb
xchg
lds
scas
insl
jo
cld
cltd
mov
cwtl
and
jmp
arpl
rol
jmp
iret
pop
and
xchg
jmp
pop
add
arpl
cmp
xchg
mov
add
xchg
rcr
imul
daa
lock
add
push
and
dec
test
int3
push
push
jg
ret
or
inc
incb
xor
insb
sub
stos
xchg
dec
mov
add
and
popa
sbbb
scas
aaa
xor
test
std
lods
inc
jge
mov
adc
cmp
push
add
ljmp
pop
ss
inc
invd
dec
cmpsl
std
outsb
pop
pusha
push
jb
mov
int
lret
jle
mov
ror
les
jae
inc
add
fs
add
les
rcll
rcll
pop
pop
test
xor
xorb
push
hlt
adc
or
mov
add
loop
mov
cmp
sub
jge
cmp
out
ret
add
inc
out
xor
hlt
btrl
lret
movsb
repz
push
pop
fsub
pop
mov
js
neg
jle
nop
jl
pop
rcl
or
xor
int
push
test
cmp
lea
cltd
jmp
cmp
cmovs
movsb
test
fmuls
push
mov
sub
push
outsb
mov
repnz
push
scas
sarl
mov
xor
mov
or
mov
out
iret
push
out
js
sub
lahf
mov
adc
mov
add
add
sahf
or
outsl
call
inc
or
lcall
loopne
pop
nop
fbld
xor
mov
ds
xor
lods
mov
mov
mov
out
xchg
add
push
out
imul
movsb
lods
pop
insb
into
ljmp
adc
xlat
sahf
test
fsubs
cmpsl
or
pop
sbb
xor
push
mov
and
dec
xchg
outsl
ss
clc
aam
pop
pop
cmp
mov
dec
daa
xor
add
pop
decb
clc
cmc
test
fxch
test
sti
loopne
iret
in
or
add
cmpsl
dec
xchg
fimuls
aam
cmp
push
push
iret
rclb
stc
stos
and
mov
xor
je
xor
loope
xchg
dec
fistps
insl
cwtl
mov
int3
jo
ds
dec
add
xor
dec
mov
cltd
mov
jb
hlt
mov
xor
ja
adc
clc
movsl
add
rolb
popf
daa
scas
mov
test
pop
loope
aam
cmp
inc
mov
ljmp
insl
iret
xchg
add
sti
sub
xor
cltd
out
push
loop
hlt
es
idivb
or
rcll
lods
sbb
push
mov
gs
xor
dec
bound
push
mov
pop
or
insb
fs
add
inc
jb
repnz
movsb
or
fmuls
adc
ljmp
loopne
cld
pop
mov
shll
les
pop
dec
xchg
ljmp
aam
cmp
lahf
sub
pushf
and
test
adc
dec
test
cmpsb
inc
push
insl
aaa
mov
rorl
andb
xchg
push
sub
and
push
dec
push
xchg
hlt
test
repnz
add
out
sub
cmp
xor
jg
insl
sbb
inc
sub
rcrl
add
adcl
imul
mov
inc
and
sub
add
pop
xlat
add
inc
push
sub
aas
into
leave
stc
sbb
sub
and
lock
lret
mov
aad
dec
mov
push
repnz
insb
leave
xor
xchg
scas
addr16
ja
iret
and
or
fucomp
mov
shll
xlat
jb
scas
test
mov
inc
ret
iret
sbb
aam
in
sbb
dec
ja
jmp
jno
fmull
pop
test
sbbb
add
ret
inc
lods
xchg
and
jmp
xchg
and
ret
adc
jecxz
shrb
mov
xchg
cli
out
xor
rcrb
or
cmp
enter
shl
inc
ja
cmp
dec
ficompl
push
std
in
pop
js
push
movsb
mov
filds
xor
stos
mov
mov
mov
pop
sbb
xchg
in
push
test
jae
inc
in
mov
mov
aad
aas
out
and
mov
sub
push
je
imul
mov
lcall
outsb
insl
push
xor
fistps
cmp
dec
icebp
push
mov
pop
and
ja
mov
jle
das
sub
xor
in
push
mov
enter
mov
gs
mov
inc
adc
stos
test
sub
icebp
push
jmp
jae
andb
cmp
fucomp
inc
inc
push
or
mov
pop
ret
out
int3
sarl
push
push
mov
inc
neg
popa
das
push
nop
data16
test
push
cmp
leave
sub
ret
jne
jle
mov
xor
sub
adc
es
push
jle
jl
std
cmp
jae
push
mov
fisubrl
sti
inc
lds
call
pop
mov
mov
xchg
mov
xchg
loope
in
add
psubusw
xchg
lret
dec
mov
fcoms
addr16
movsl
push
in
push
lret
out
popa
mov
mov
and
and
lods
dec
inc
pop
sbb
xor
lahf
jns
filds
insb
xor
and
in
lcall
inc
movsl
pusha
nop
imul
rcr
test
push
or
mov
mov
nopl
mov
fdivrl
insl
bound
mov
movzbl
daa
dec
roll
add
les
sub
mov
xlat
test
add
incl
xchg
ret
ret
in
mov
and
loopne
lcall
and
adc
cmp
jp
mov
add
push
scas
inc
push
outsb
inc
cli
pop
cmpb
mov
xchg
mov
mov
sbb
mov
lcall
or
pop
sub
push
pop
fldcw
sbb
in
iret
and
pop
arpl
mov
addl
pop
xchg
pop
lahf
mulb
bound
xchg
xor
push
jge,pn
add
sub
push
inc
andb
push
ret
fidivrs
and
aaa
add
jecxz
ja
mov
jmp
mov
pop
mov
test
aad
ret
into
or
mov
pop
je
mov
jmp
leave
dec
int
data16
loopne
adc
add
test
push
lcall
adc
leave
mov
adc
mov
jns
xchg
call
pusha
int3
adc
pop
insl
js
push
mov
int3
add
xchg
bound
mulb
shll
inc
loop
lea
inc
notl
fimuls
das
fisttpl
jnp
xor
dec
mov
mov
sbb
inc
out
loopne
push
gs
scas
sub
push
and
inc
inc
inc
cmp
or
sbb
inc
add
testl
cwtl
cmp
divps
repz
add
je
xorl
and
xor
scas
jo
int3
mov
sub
clc
xchg
rcrb
scas
add
cmp
clc
jecxz
in
imul
xchg
xchg
or
hlt
ret
push
xor
pushf
imul
xchg
mov
mov
pop
ja
xchg
add
rcll
mov
mov
fsubrl
cld
in
xchg
pop
popl
int
xor
mov
dec
out
jae
cmp
scas
mov
cwtl
nop
pop
aaa
or
mov
sub
int3
fdivs
cmpsl
pop
xor
rcl
ret
add
xor
xlat
mov
jge
jmp
xor
mov
icebp
push
add
xchg
mov
jo
mov
push
jg
xor
adc
mov
jns
rcrb
mov
cli
ds
orl
jge
scas
out
inc
bts
add
roll
jp
pop
dec
add
loop
pushf
inc
mov
sub
mov
aam
and
fldl
aad
into
mov
push
jns
dec
jo
pop
addl
sbb
mov
inc
push
loop
mov
xchg
sub
cmpsb
js
insl
negl
inc
outsb
push
aas
dec
aas
mov
rolb
bound
in
or
sbb
xchg
push
rcrl
out
scas
xor
addr16
mov
stc
push
fs
and
in
adc
adc
dec
sub
pop
cmp
add
mov
jns
add
push
insb
fs
movsb
push
cmp
or
hlt
or
jle
add
and
rcrl
lea
lret
jo
cmp
inc
pcmpgtb
push
outsb
sbb
rol
dec
std
cli
push
cmpsl
test
repz
push
shlb
jmp
xor
pushf
aas
adc
aaa
syscall
add
cmpsl
ret
push
ljmp
jns
or
inc
xchg
mov
pop
mov
mov
lret
jmp
cmpl
mov
in
fcoml
sbb
out
lods
sbb
inc
pop
add
xor
fs
shl
test
adcb
imull
sub
test
cmp
push
addb
mov
and
mov
push
or
add
cltd
mov
out
sarl
pusha
ss
shl
mov
fistl
jns
dec
test
cld
rcrb
jns
hlt
push
ret
inc
inc
scas
cmc
inc
orb
pop
popf
cmp
rorb
add
xchg
adc
jg
int
jb
out
out
not
adc
rcl
out
stos
popf
cmp
xor
xor
stc
sbb
jno
adc
outsl
add
pop
push
pop
jge
mov
jecxz
dec
dec
jl
pop
jl
cmpl
outsb
scas
into
sbb
mov
sub
daa
jecxz
scas
xchg
testl
add
jb
sub
mov
xor
xor
push
stos
push
rcr
add
pop
sbb
mov
push
scas
inc
ret
jge
in
inc
or
fstpl
out
mov
or
ret
jl
cld
inc
cmpsb
mov
adc
outsl
cmp
jo
mov
imul
ficoml
inc
aad
pusha
sub
js
inc
scas
cmc
or
adc
repz
loopne
loope
lods
mov
xchg
fstpl
mov
sbb
mov
inc
cmp
jbe
mov
mov
into
dec
aad
mov
jo
test
loopne
cmp
fiaddl
fcoml
leave
jge
or
leave
jae
push
imul
mov
or
jae
xor
jno
dec
mov
orb
mov
test
lret
mov
repz
nop
mov
das
movsl
add
and
add
mov
dec
xorl
stos
sbb
xor
xchg
scas
push
or
jae
jle
adc
and
fidivl
and
repz
mov
popa
xorb
fxch
lods
jns
ds
inc
xchg
outsb
sub
aaa
xor
jge
mov
jecxz
repnz
imul
ret
and
fiadds
mov
int
mov
call
mov
loope
mov
insb
cmc
in
shll
dec
push
mov
pop
adc
mov
insb
xchg
jno
xlat
insl
enter
or
pushf
bound
sbb
insb
xchg
shrl
dec
inc
andl
imul
inc
pop
fwait
movsb
movsb
pop
daa
frstor
pop
icebp
pop
js
imul
shlb
js
out
mov
inc
popf
cs
icebp
outsb
aam
cs
inc
dec
cwtl
adc
or
shll
stos
xchg
je
or
xchg
sti
ficoml
jmp
mov
aaa
jae
cmp
ds
lock
scas
mov
inc
sub
push
jge
fstpt
push
add
dec
xor
dec
test
fimull
sbb
xchg
or
fwait
sbb
notl
dec
in
inc
lahf
andl
and
cmpsb
cs
mov
std
jmp
mov
cld
fsubrs
into
into
popf
add
imul
push
lahf
ja
jo
daa
sbb
xor
pushf
pop
insb
inc
xor
xchg
push
cmp
cmp
jns
mov
stos
ret
rol
jmp
xor
data16
test
mov
mov
jge
xorb
inc
ss
inc
push
pop
mov
out
inc
pop
outsl
cwtl
xchg
mov
popa
stc
mov
xchg
mov
inc
in
mov
add
xor
loop
xor
leave
sbb
dec
loopne
jge
div
mov
mov
adc
xchg
push
mov
icebp
mov
mov
inc
int3
lret
or
inc
xchg
add
dec
mov
enter
lret
mov
jne
jae
dec
rorl
jmp
or
sbbb
rorl
je
add
pop
inc
in
imul
sbb
jb
mov
jnp
movsb
dec
and
mov
adcb
and
pusha
cmp
dec
xor
cmpsb
gs
cmp
cwtl
cli
xlat
jnp
std
imul
sub
sti
inc
ds
dec
adc
push
add
push
add
pop
call
lods
push
stc
mov
cmpsl
loop
outsl
jne
and
pop
mov
popf
pop
pusha
xchg
scas
data16
and
insb
xchg
pop
lcall
insb
je
dec
popa
xlat
pop
das
dec
lods
imul
stos
sub
inc
lods
pop
mov
dec
add
cmpb
lods
pop
dec
xor
sbb
outsl
das
sbb
push
mov
lar
jnp
sub
sti
xchg
or
dec
ss
ret
xorl
adc
lahf
jb
xchg
lret
adc
js
repz
inc
mov
iret
jae
test
jne
cmp
add
sbb
outsb
pop
mov
fnsave
out
fsubp
cld
adc
push
xchg
sub
pop
jp
mov
inc
notb
jmp
mov
cmc
mov
xchg
mov
push
outsb
daa
loope
sub
inc
or
fwait
jmp
sbb
int3
or
popa
sub
lods
jg
pop
int3
aas
mov
xor
insb
jmp
inc
cmp
shll
jecxz
lods
iret
aaa
pusha
fisubs
sbb
cmp
pop
xchg
add
cmp
and
popf
xor
jmp
and
sar
popf
adc
neg
mov
leave
inc
sarb
in
xor
adc
add
insl
ret
xor
icebp
xchg
or
jmp
xchg
out
loope
fsub
icebp
out
xlat
jb
cmp
stc
xor
jnp
push
loop
adcb
aad
daa
outsl
in
out
fbld
cmpsb
outsl
jo
mov
mov
loopne
or
xchg
push
out
or
test
js
andl
pop
rol
cmpsb
nop
dec
mov
and
pop
decl
and
inc
sbb
and
pop
lds
cmp
scas
repnz
and
add
lock
sbb
aad
xchg
aad
jecxz
sub
div
cli
loopne
cmp
inc
add
je
and
lret
or
jo
jbe
fsubrs
pusha
cltd
in
and
scas
ret
stos
and
and
inc
xchg
push
jnp
mov
div
aaa
dec
leave
mov
sbb
fldenv
dec
clc
idivl
xor
sbb
mov
jbe
mov
call
mov
fdivrl
sub
mov
fwait
andb
jo
movsb
std
or
push
out
or
add
cmpsl
xchg
rolb
dec
das
lahf
adc
arpl
fmul
adc
dec
add
xchg
mov
sub
aam
in
pop
lcall
inc
adc
decb
jp
xor
xchg
fwait
icebp
std
sbb
mov
adc
dec
and
sbb
lds
sub
jg
pusha
push
int3
and
das
mov
xor
fs
lock
jmp
popf
movsb
mov
sub
aaa
add
sub
pushf
addr16
cmp
lahf
mul
frstor
pop
or
dec
loopne
movsl
lcall
inc
pop
mov
aas
jg
pop
jne
jge
mov
adc
mov
push
test
mov
xor
incl
mov
mov
test
lret
jnp
fldl
stc
pop
pop
dec
mov
push
loope
repnz
negl
dec
mov
jp
adc
pop
sbb
stc
pop
daa
xchg
lret
shll
mov
jb
mov
sub
mov
mulps
add
mov
cli
mov
clc
sub
or
scas
or
arpl
xor
xchg
and
hlt
mov
shll
shlb
stc
outsb
add
iret
push
rcll
mov
add
inc
add
mov
leave
add
add
ret
sbbl
mov
hlt
mov
cs
push
and
imul
and
mov
sbb
and
movsl
mov
jnp
out
inc
mov
mov
dec
xchg
rol
insb
pop
add
fidivs
sub
icebp
outsb
xlat
stos
inc
pop
icebp
fwait
shll
add
mov
in
addr16
je
push
lds
in
xchg
xor
mov
xchg
mov
sub
push
push
xorb
test
ret
xchg
out
int3
shll
jg
push
push
daa
mov
mov
ss
test
xchg
fcoms
dec
mov
mov
jnp
loopne
xchg
fists
push
xor
push
add
mov
mov
mov
test
cmpb
jmp
add
jbe
fs
inc
xor
adc
and
sahf
inc
icebp
mov
xlat
jb
jmp
push
mov
pop
and
sbb
cltd
andb
cs
aam
push
jge
cld
pop
addl
add
out
fsubs
sub
jl
jno
pop
lret
out
int
loop
roll
fcompp
mov
xrelease
stos
add
mov
testl
or
xchg
push
mov
in
sub
push
jae
pop
add
add
jnp
push
xchg
mov
xlat
lahf
cmp
cli
pusha
aaa
test
cmp
aad
adc
cli
push
or
mov
jne
out
lcall
pop
jno
mov
push
ret
in
iret
je
ret
inc
push
popa
jo
pop
jnp
pop
cmpsb
mov
jg
xor
mov
imull
or
jg
add
out
lahf
cmpl
std
mov
mov
aad
pop
loope
push
cmpsb
popf
aas
dec
dec
mov
sarb
subb
fldl
subl
mov
mov
and
mov
lock
mov
fwait
or
jle
addr16
stos
lcall
xchg
in
movl
sahf
xchg
xchg
cs
mov
cwtl
mull
into
in
push
ljmp
sbb
mov
mov
pop
cmp
push
inc
jp
rcrb
daa
cmp
jle
es
rclb
sub
add
mov
add
xchg
adc
push
fcoml
rcrl
cltd
inc
mov
jg
jno
aam
popf
ss
mov
negl
loopne
xchg
cli
cli
shll
leave
dec
and
out
pushf
jo
inc
into
or
adc
fiadds
or
sti
xor
in
sbb
testb
and
in
test
imul
mov
aas
sub
and
adc
in
jo
jge
xor
sbb
or
test
push
adc
push
imul
jne
push
loop
sub
in
push
or
ficompl
xor
pop
je
aad
lods
repnz
push
jo
out
cmp
cmp
inc
shrb
mov
test
mov
lcall
inc
add
mov
xor
insl
xchg
rorl
and
jmp
and
adc
scas
in
into
sbbb
movsb
and
xor
dec
sbb
add
push
and
or
rcrb
and
xlat
and
cli
adc
dec
icebp
and
jae
cmp
repnz
data16
dec
push
mov
iret
pop
out
cs
or
fnstsw
aaa
gs
push
and
je
jbe
mov
push
rolb
mov
sub
pop
in
out
xchg
push
iret
es
insl
cmp
inc
or
sub
ret
pop
add
mov
jmp
les
jns
es
icebp
addr16
ja
pop
in
xchg
das
inc
mov
jle
xor
jbe
lods
adc
sub
add
das
outsl
dec
xchg
dec
cs
lods
cmp
cmp
cmp
ds
or
sti
les
sbb
xor
pop
xor
rorl
dec
mov
mov
mov
cmp
mov
sub
repnz
jbe
nop
out
pmulhuw
lahf
or
fistl
out
sbb
add
jae
inc
repz
fs
jmp
sbb
jb
sub
imul
xchg
pusha
inc
frstor
aam
or
sbbb
push
mov
sbb
pop
mov
mov
sbb
xor
dec
dec
xor
outsb
pop
iret
lods
ljmp
test
xchg
add
lahf
cltd
or
dec
stos
int3
sub
shll
scas
xor
pop
xchg
and
xor
stos
fstpt
inc
cmp
shlb
dec
mov
mov
fists
loope
cmp
fistpll
shlb
cmp
ret
fs
cmp
clc
inc
jns
repnz
add
test
out
movntq
add
std
loopne
xor
mov
sbb
inc
xchg
fs
mov
jns
fs
ret
loopne
incb
icebp
fildll
fdivrl
and
movsl
jb
sbb
arpl
gs
clc
and
pop
dec
sbb
mov
sahf
divb
fstpt
dec
mov
mov
and
pop
dec
clc
mov
inc
arpl
lock
mov
into
and
or
push
inc
xor
push
sbb
frstor
enter
pop
pop
add
sub
pop
repz
fistl
shrb
inc
mov
push
lcall
cmpsb
push
sub
pusha
fimull
mov
inc
xor
cmp
arpl
and
in
dec
mov
cs
jnp
aas
cwtl
roll
pop
stos
daa
gs
in
mov
testl
and
sub
sub
test
pop
xchg
push
xchg
ret
clc
mov
mov
push
lds
pop
in
fwait
mov
data16
negl
stos
je
push
adc
pop
push
mov
outsl
cmpsb
mov
pop
ljmp
adc
idiv
mov
or
jbe
and
mov
xor
shll
clc
fcomps
cmpsl
or
outsl
or
dec
cmp
inc
xor
les
lret
fldenv
popf
negb
push
stc
test
mov
inc
out
push
add
jno
mov
dec
cmp
or
aaa
ret
insl
test
test
dec
stc
mov
dec
jle
ljmp
clc
jb
fsubrp
sarl
push
in
sbb
cmp
cmpsb
adc
cmc
push
mov
and
mov
pop
mov
mov
mov
lahf
add
sub
mov
push
je
cld
xchg
movsl
ror
aam
dec
lock
and
mov
mov
ficomps
fs
lds
or
loope
cwtl
xchg
inc
cmp
push
or
into
add
or
and
inc
or
les
insb
leave
and
test
cmc
out
pop
movb
mov
dec
loopne
push
pop
jnp
mov
inc
or
mov
fs
and
insb
mov
add
jne
xchg
mov
dec
shr
int
jo
pop
and
xlat
cli
insb
cmpsb
and
mov
jno
fnstcw
and
jae
jg
es
in
mov
roll
push
ret
cmc
cmp
std
or
test
and
fdivrl
xor
popl
xchg
notl
add
test
int3
jg
jge
addb
test
fidivrl
cmp
dec
mov
or
xchg
or
out
cs
sbb
jl
jg
mov
dec
hlt
dec
and
movsb
adc
adc
push
and
shl
ret
sahf
and
and
fucomip
pushf
inc
jb
and
fistps
out
ja
nop
ss
adc
push
dec
jbe
mov
hlt
inc
je
dec
cld
ljmp
in
leave
add
mov
add
jae
jle
xor
inc
ja
mov
jb
jnp
in
push
lret
mull
jb
add
push
repnz
mov
fildll
adc
out
xor
lahf
in
popf
loopne
call
fbstp
push
push
cmc
mov
insb
add
cmp
scas
adc
cltd
or
loopne
mov
add
cltd
mov
jbe
aas
frstor
xlat
mov
add
in
fists
pop
cmc
icebp
inc
sbb
dec
lret
leave
rclb
sub
and
out
sbb
mov
and
xor
orl
fiadds
pop
shlb
out
fidivs
pop
scas
or
imul
cmc
in
cmp
roll
pop
dec
mov
mov
inc
cmpl
jmp
call
or
sbb
rcrb
push
sbb
dec
lahf
mul
lcall
adc
mov
inc
into
dec
and
insl
out
mov
test
fwait
xchg
cmpsl
lea
mov
pop
mov
out
pop
sub
leave
push
adc
cmp
sub
in
cmp
imul
mull
xchg
out
xchg
popf
dec
mov
mov
gs
in
xlat
idivl
das
fsubr
mov
es
inc
xor
dec
stos
fbstp
sub
or
mov
fisubrs
out
dec
xchg
add
jl
mov
orl
negl
dec
lret
xchg
add
ja
push
dec
adc
fnstenv
mov
in
push
xchg
add
pushf
out
lods
adc
push
mov
nop
adc
pop
in
loop
inc
mov
inc
sub
out
mov
jae
inc
sarl
xchg
loope
sbb
nop
insb
test
dec
mov
mov
jmp
inc
xchg
xor
insl
test
xor
sbb
jbe
pop
pusha
inc
mov
and
cltd
insb
pop
add
cli
sbb
call
sbb
pop
iret
add
or
jp
sarb
add
pop
mov
adc
lea
jecxz
and
test
insl
sbb
pop
dec
xor
push
pop
data16
outsb
sub
sub
adc
rorl
inc
sub
and
add
out
xchg
ret
popa
test
stos
jl
in
mov
cli
scas
lret
clc
xchg
cmp
cmp
sbb
jnp
mov
in
inc
fisubs
sbb
add
cwtl
gs
test
xchg
and
adc
push
xor
lds
lahf
aas
mov
xchg
push
aam
test
dec
push
jns
pop
int3
das
in
clc
jle
xor
pop
xchg
add
pop
push
lods
xor
cmp
fdivs
pusha
aas
push
test
pop
in
lock
test
push
lret
and
push
addr16
out
or
ds
ret
add
push
cmovl
sti
xor
xor
mov
std
sub
jge
lret
mov
out
int3
in
loope
jb
scas
adc
inc
ds
frstor
icebp
bnd
jp
test
dec
ja
test
in
sbb
sub
cld
inc
jae
or
mov
xchg
or
xchg
scas
cltd
call
adc
or
dec
lret
inc
mov
aad
jecxz
dec
negb
pop
sbb
and
iret
cmpsl
adc
gs
mov
test
leave
mov
xor
pop
in
test
jbe
fbld
push
push
xor
lret
sub
fsub
inc
fwait
mov
xor
insb
in
cs
or
mov
mov
add
inc
or
lahf
filds
imul
inc
mov
cwtl
cmp
or
pusha
xor
bound
jo
vpmaxub
dec
pop
jne
cmp
lahf
and
pop
cltd
pop
jne
bnd
push
lcall
inc
mov
mov
mov
lcall
xchg
mov
gs
cli
mov
fwait
pop
stc
pop
pop
lahf
or
sub
cs
in
jg
ret
and
xor
cli
icebp
loop
out
and
and
cmpsl
dec
push
iret
outsb
mov
and
push
mov
dec
mov
cmp
sbb
cmpsl
fucompp
addl
push
gs
jecxz
jmp
sbb
dec
mov
sbb
insl
outsb
pop
pop
pop
out
mov
arpl
gs
push
cmp
sub
orb
loope
icebp
cli
jne
pushf
std
popf
dec
movsb
sbb
cmp
mov
es
shrb
add
das
dec
mov
jp
popa
inc
xchg
movsb
fdivrs
xchg
orl
in
or
sbb
mov
pop
inc
pop
xor
into
and
push
push
pop
sahf
outsl
ds
ss
mov
shlb
xchg
mov
xchg
pop
cli
sbbl
mov
xor
movsb
lret
dec
mov
xchg
clc
jge
or
add
pop
mov
sbbb
cmp
out
imul
into
mov
sub
int
push
ss
aad
int
push
xor
xorb
mov
test
test
inc
sub
xchg
fsubr
and
adc
pop
cmp
cwtl
or
mov
das
pushl
mov
fbstp
fnstsw
pop
cmp
xor
call
push
aaa
mov
outsb
in
imul
sbb
jno
outsb
or
mov
inc
mov
lds
icebp
pop
call
add
pop
clc
ret
dec
cmp
lahf
sub
inc
cld
gs
push
outsl
xchg
sub
das
fidivl
cld
cwtl
add
pop
int
aaa
fidivrs
mov
mov
add
cmc
xchg
mov
mov
imul
or
test
xchg
jmp
pusha
push
mov
or
mov
icebp
pop
stos
in
gs
les
outsl
or
cmp
cmpsb
push
in
mov
dec
mov
test
dec
pop
sti
and
cmpsb
xor
pop
cmp
ljmp
lahf
xor
jb
aam
repnz
inc
rol
pop
mov
out
movsl
jae
cmp
mov
add
or
push
fwait
rorb
cld
fwait
loope
push
push
imul
loopne
clc
inc
jecxz
cmpl
shlb
test
lret
das
jmp
iret
cmovb
jnp
mov
push
ret
clc
lret
pop
add
loope
fimull
repnz
mov
loop
add
adc
fstpl
pushf
mov
fwait
push
jb
pushw
mov
out
ja
sbb
ja
sbb
push
inc
xchg
inc
je
pop
jge
sahf
and
push
dec
lret
cmpl
ffreep
dec
pop
cli
dec
fmul
xbegin
fsub
jb
jno
popf
pop
ret
adc
fdivrs
dec
push
adc
jg
sub
dec
inc
dec
and
mov
pop
int
jmp
bound
test
pop
test
outsb
push
fcompl
aaa
xor
sub
jecxz
js
mov
notb
sub
repnz
fcmovne
pop
test
lods
lahf
pop
sub
mov
adc
pop
popa
jp
mov
in
fists
inc
scas
sbb
jae
jb
das
mov
jl
stc
inc
adc
stos
adc
mov
push
dec
fs
and
dec
mov
faddl
mov
jl
jg
push
lcall
fimull
jle
fdecstp
xor
cmp
in
ror
sub
xchg
jl
rcrb
je
or
and
or
shl
lcall
dec
jns
clc
test
fcoms
loop
leave
mov
push
mov
jb
cwtl
jo
lret
bound
insl
adc
ds
cmp
mov
cmpsl
sti
mov
fidivs
cmp
andb
push
ss
add
imul
jbe
repz
mov
popf
inc
mov
popa
sahf
pop
out
sbb
nop
mov
lods
inc
mov
mov
jge
add
rcll
xchg
cmpsb
adc
xchg
mov
out
test
jae
sub
mov
cmc
in
dec
icebp
popa
mov
jnp
sub
inc
in
cmp
sub
hlt
sbb
push
jno
ds
dec
and
push
xlat
or
fisubrs
mov
jl
jmp
jp
pop
fists
dec
jo
hlt
mov
mov
mov
lret
xorl
lock
inc
jb
jl
push
fldt
sbb
inc
into
mov
xor
loop
stos
pop
sahf
sahf
pinsrw
ja
sbb
insb
and
rorb
xor
out
mov
sub
xor
insl
sub
add
ja
pop
dec
roll
jno
pop
or
xor
stc
xor
ds
or
xor
push
push
adc
mov
xchg
out
xchg
stos
cmp
jbe
xchg
sbb
out
in
sub
mov
sahf
mov
pop
mov
shl
pop
push
out
mov
cltd
aam
fnstenv
mov
adc
and
adc
push
mov
jmp
je
testl
mov
les
std
andb
inc
xorl
jne
das
repz
leave
lret
or
jge
test
pop
cltd
adc
arpl
pop
mov
lcall
imul
stos
ret
pop
addb
cli
mov
push
rclb
enter
mov
ss
pop
ljmp
and
shll
dec
jnp
out
adc
dec
leave
out
mov
jae
cmpsb
fwait
sahf
fcomi
aaa
adc
aam
dec
pop
and
scas
nop
cmp
ja
icebp
lret
inc
jb
testb
cmp
cmp
pop
sti
cmp
xor
aaa
inc
loope
pop
iret
mov
push
xlat
xchg
subl
jno
sub
push
mov
sbb
movsb
xchg
sbbb
mov
in
mov
js
shrl
xor
dec
xor
cmp
popf
inc
xchg
sbb
outsb
int3
in
sbb
ja
or
in
mov
adc
xor
das
adc
cmp
or
jmp
rol
out
shrb
icebp
push
mov
push
jne
int3
dec
scas
iret
inc
enter
fwait
loope
cmp
and
sub
dec
xor
movsbl
push
jl
or
clc
dec
sub
stc
enter
lcall
jo
pop
sbb
xchg
xlat
mov
xor
xor
idivb
and
pushf
push
cmp
add
loop
orps
daa
ds
into
shlb
aad
lea
cmp
sti
mov
into
pop
insb
sbb
adc
div
mov
xchg
mov
out
mov
lcall
fdivrs
call
ja
hlt
fwait
call
mov
js
in
mov
inc
scas
rcrl
jne
adcl
jmp
arpl
leave
xlat
nop
mov
push
pop
clc
bound
jle
loopne
xor
bound
and
and
aad
es
mov
add
scas
and
or
dec
and
mov
jg
loop,pt
test
jns
add
int3
push
adc
incb
jae
imul
pusha
insb
cmpl
test
scas
lret
ss
push
stos
mov
or
test
test
das
mov
mov
mov
mov
mov
aas
repz
lods
mov
data16
arpl
add
in
sub
clc
sub
mov
inc
sbb
xlat
int
adc
mov
pop
jmp
mov
sbb
sub
loop
add
sub
jbe
cli
sbb
cmp
pop
inc
push
test
cmp
int3
push
xchg
dec
or
sbb
aas
rorb
movl
sbbb
mov
jl
rorl
adc
sti
jb
loop
adc
cmp
mov
in
cltd
mov
std
jl
leave
add
loop
gs
sbb
lea
mov
and
and
leave
xchg
add
idiv
das
clc
lods
mov
adc
data16
mov
jno
roll
xor
pop
addr16
icebp
or
xor
pop
roll
loope
jg
xor
mov
dec
or
sbb
pop
out
inc
aad
mov
jg
push
add
stos
hlt
bnd
shlb
cmp
outsb
add
ret
stos
dec
push
inc
repz
lcall
jnp
jno
into
out
inc
popa
push
inc
jb
sub
jge
xchg
inc
adc
ss
dec
cmpsb
popf
xor
sbb
or
cltd
pop
mov
es
jg
mov
mov
icebp
lds
pop
mov
mov
aas
xor
push
test
vmread
or
adc
test
sbb
cmp
mov
mov
into
push
shrl
ds
mov
daa
inc
add
pop
pop
xor
test
fidivs
ljmp
shlb
push
push
subb
clc
cmp
test
aaa
fwait
and
int
mov
mov
shrb
xor
xchg
mov
aam
daa
dec
push
pop
jle
scas
dec
shrb
dec
mov
xor
stos
orps
cs
adc
lods
rol
xchg
ja
inc
push
or
adc
lds
sub
js
or
or
xchg
add
lea
fdivrl
aad
pusha
sbb
cmp
lcallw
sahf
lock
andl
out
and
ljmp
mov
test
loope
pop
mov
out
pushf
lock
test
imul
fwait
inc
mov
lahf
cmc
and
xor
hlt
mov
call
jg
out
mov
popa
jnp
xorb
jb
jnp
mov
push
inc
fdivr
lret
pop
add
adc
jno
xor
adc
icebp
push
pop
adc
cli
sbb
mov
call
das
cld
adc
xor
cmpsb
jb
repnz
mov
cmp
adc
and
mov
push
outsl
loopne
mov
test
pop
cld
pop
jl
mov
add
or
jne
mov
insl
add
inc
pusha
mov
insb
push
data16
push
outsb
cmpsl
nop
mov
mov
lods
mov
cmp
inc
stc
popa
bound
shll
mov
ja
add
cmp
sub
aam
subb
mov
cmp
adc
jb
insl
and
add
clc
fldenv
pop
fsubrl
adc
add
daa
ss
adc
push
jle
shlb
cmpsb
push
mov
je
xor
leave
cmp
sub
rolb
fucomp
sbb
inc
jo
sbb
dec
mov
sub
aam
es
icebp
or
out
in
ret
adc
pop
incl
cmpsb
xchg
lock
push
loopne
adc
bound
outsl
gs
xchg
xchg
mov
adc
inc
int3
pop
insl
fidivrs
sub
mov
fstpl
call
push
in
mov
nop
ror
lods
mov
pop
push
aam
int
mov
lcall
push
mov
faddl
xchg
mov
inc
sbb
daa
std
orl
jmp
inc
mov
xor
test
insb
in
flds
inc
push
lods
cmpsl
xchg
mov
arpl
dec
jge
cmp
daa
xchg
cld
lds
das
outsb
mov
cmp
sbb
mov
add
dec
or
fisttpll
aaa
jnp
ljmp
enter
jo
outsl
mov
call
xchg
add
outsl
mov
jge
push
repnz
inc
sbb
mov
sbbb
push
jg
push
push
mov
xor
dec
js
in
test
les
and
xchg
dec
mov
add
mov
sbb
adc
xor
aam
inc
and
filds
add
or
gs
stos
push
outsb
jae
cmpsl
vmovapd
cli
cmp
pop
push
data16
cmp
dec
lds
xchg
add
jg
sbb
sahf
test
dec
nop
mov
xor
pop
imulb
inc
dec
mov
lock
fxch
iret
mov
mov
lods
jbe
push
ret
or
mov
xor
jmp
push
cmp
loopne
cltd
sub
and
pop
add
xchg
push
test
jge
mov
mov
pop
pop
mov
fcomi
stos
cmp
enter
lds
aas
adc
push
push
sbb
mov
push
xor
cwtl
sbb
addr16
mov
inc
mov
mov
push
cwtl
xchg
adc
outsb
test
xor
std
insb
movsl
cwtl
inc
inc
or
loope
xchg
xorb
test
inc
arpl
insb
mov
pop
sbb
cwtl
push
push
fisubs
int
movsl
add
mov
inc
and
and
adc
gs
test
dec
fwait
cltd
aas
gs
xor
lret
stos
inc
or
sbb
inc
jle
mov
mov
pop
and
mov
lds
or
xchg
jns
outsl
dec
sbb
mov
pop
xor
push
in
mov
repz
dec
cmp
out
or
lcall
sub
sbb
daa
dec
setl
es
sbb
xchg
dec
pop
jbe
fxch
in
xor
mov
ja
cmc
mov
pop
sbbb
add
pop
jb
mov
out
aaa
cmp
xchg
mov
stc
movb
xor
call
arpl
ret
add
mov
adc
stos
xorl
sbb
xor
or
jo
sbb
and
loop
leave
icebp
inc
mov
push
push
dec
stos
add
aad
ds
insb
inc
mov
stc
icebp
imul
hlt
add
adc
test
add
sahf
cmpsl
or
xor
jb
inc
mov
bound
mov
gs
sbb
xchg
jae,pn
lods
int3
or
xchg
mov
add
push
cld
xor
aaa
xlat
in
sub
mov
lcall
push
shlb
and
std
mov
xchg
movlps
sbb
movsb
adc
std
mov
cmp
cmpsl
jle
sbbb
pusha
lock
push
or
stos
jmp
adc
pusha
fwait
subl
push
dec
dec
xor
jbe
dec
clc
ss
pop
lds
sahf
mov
xor
sbb
jle
lahf
outsl
or
xlat
andb
scas
and
and
mov
sub
and
stos
sbb
lret
out
test
popf
out
jle
test
out
fwait
and
ja
pop
shl
addr16
divb
mov
cltd
add
loope
or
dec
sub
dec
cmpsl
sbb
pop
sub
xor
add
ret
dec
aas
push
fcomps
push
sahf
sbb
std
inc
pop
sbb
fsubs
cld
subl
mov
and
loopne
sbb
cwtl
nop
adc
xchg
scas
push
pop
xchg
xchg
add
movsb
je
scas
std
imul
int3
push
scas
dec
je
xchg
mov
inc
mov
nop
insl
clc
cmp
xchg
jbe
cmpsl
and
in
loop
dec
jp
insl
mov
jb
sbb
in
jg
leave
inc
fistps
lods
in
icebp
les
aam
andl
arpl
mov
add
rclb
jge
loop
cmp
and
loope
jmp
into
ret
enter
cmp
jmp
faddl
push
push
sbb
arpl
adc
or
add
repz
and
das
xor
and
mov
addr16
xor
les
cwtl
inc
xchg
stos
xor
je
fnstcw
decl
aas
loopne
inc
xchg
and
cmp
movsb
pop
into
cmp
or
mov
shrb
int3
daa
mov
adcb
inc
mov
fwait
xchg
out
sub
out
pop
loop
sbb
fwait
mov
jl
ret
sbb
xchg
loopne
cwtl
and
ret
xchg
rorb
mov
adc
fmuls
cltd
push
push
lods
sub
and
lret
dec
mov
dec
ret
leave
xor
andl
fs
addb
imul
inc
mov
js
cmp
mov
arpl
sub
fbld
cld
jnp
jle
adc
mov
in
xchg
roll
add
call
xlat
inc
out
imul
data16
dec
das
add
hlt
fldcw
pop
inc
loop
stc
cs
out
int3
add
dec
adc
les
xchg
dec
jns
mov
lahf
stos
hlt
add
xor
shl
pop
cmp
cmp
movsb
nop
rclb
fcomi
sbb
or
lret
fcmovu
cld
adc
sbb
cmp
fisttpl
cmp
push
inc
cli
jnp
push
mov
imul
dec
test
outsb
jb
gs
lds
adcb
xchg
lret
aam
mov
and
aas
mov
mov
ja
push
jno
push
push
pop
orl
push
push
ds
fistpll
sub
mov
push
push
fmull
pop
fldl
out
jge
jecxz
adc
lock
out
cmp
iret
pop
into
pop
loopne
aaa
xchg
and
subb
jne
mov
movsb
adc
and
aaa
pushl
cmpsl
arpl
dec
out
xchg
outsb
in
dec
scas
xchg
mov
add
pusha
dec
outsb
out
mov
das
cmp
out
pop
fs
cmp
pop
mov
aad
out
jecxz
xchg
or
mov
mov
or
xchg
es
xor
aaa
inc
push
inc
js
sti
dec
cmc
lcall
stos
mul
mov
dec
mov
push
pop
push
cmp
jecxz
and
ficompl
enter
xor
cli
les
pusha
out
xchg
mov
rol
nop
pop
mov
arpl
es
lret
idivl
mov
inc
std
scas
lods
cmp
inc
pop
or
repnz
sub
shlb
mov
sbb
mov
fcoml
inc
inc
bound
cmpb
stc
in
out
mov
sti
sahf
aas
cmp
jns
inc
rclb
test
jae
cmp
shrl
sahf
int
sti
enter
add
add
adc
negb
sahf
xchg
popf
cli
jg
push
jge
mov
cwtl
sub
jp
aas
sub
repz
pushf
mov
mov
movsl
lock
jl
addr16
lods
test
repnz
mov
and
mov
imul
sbb
jl
jge
cwtl
rcrb
and
mov
lods
in
das
mov
cmp
iret
je
jl
inc
add
pop
dec
dec
insl
sub
or
in
cmp
idivl
lds
inc
inc
test
cmp
push
mov
adc
add
inc
inc
gs
popa
mov
xchg
and
adc
mov
gs
cwtl
fiaddl
pop
es
pop
cmp
dec
aad
dec
arpl
push
nop
mov
sbb
cmp
sub
push
and
aaa
cmpsb
sub
out
push
mov
enter
jb
rolb
xorb
fimull
ljmp
push
pop
push
imul
outsl
fidivrs
and
xchg
adc
test
xor
sub
jae
cltd
mov
bnd
cmp
dec
xor
dec
mov
sbb
mov
mov
scas
test
inc
adc
cltd
enter
jge
push
aam
pop
jl
adc
jle
push
lods
cwtl
lock
dec
data16
rorl
fsubr
pushf
or
mov
fwait
loope
in
scas
cmpsl
ficoml
in
pop
add
cmp
cltd
sbb
mov
or
rcrb
dec
es
pop
lret
mov
jno
jl
fidivrl
mov
jnp
sub
ret
xchg
pop
and
out
lds
inc
adc
pop
das
mov
fnsave
mov
cmpsb
xchg
icebp
movl
icebp
int3
ljmp
lds
outsl
ljmp
jns
jb
icebp
and
cld
xor
cmp
push
dec
aad
mov
dec
sbb
jo
inc
or
xchg
mov
clc
ret
inc
rclb
sub
xchg
or
lods
or
inc
lods
scas
scas
fwait
ljmp
or
stos
dec
push
or
in
dec
mov
mov
sbb
sub
ds
pushf
cltd
mov
mov
or
fmul
cmp
mov
test
mov
add
push
mov
mov
pop
push
sub
call
movsl
sub
xor
adc
dec
add
pop
aad
sbb
xchg
or
lcall
cmp
sbb
imul
push
pop
outsl
and
mov
lret
repnz
jns
cmp
shrb
movsb
and
ret
fsubrs
pop
fdivs
stos
idiv
icebp
xor
lds
and
sub
loope
pop
push
push
xor
and
pop
sarb
jge
js
sti
in
daa
out
js
sub
mov
insb
stos
xchg
je
jne
cmp
daa
dec
aad
cmp
mov
std
lahf
cmp
cmpsl
inc
enter
add
stos
mov
std
add
pusha
sub
leave
dec
imul
lahf
inc
fidivrl
mov
in
sbb
test
loopne
fsubrs
outsl
jae
jne
imul
jnp
into
scas
cmp
sub
mov
js
pop
lret
paddsw
ljmp
dec
xor
dec
fcoml
das
js
dec
shlb
jp
outsl
outsl
daa
movsl
sbb
outsb
mov
sbb
movsb
add
jge
pop
lods
fucomi
imul
je
pop
push
je
sbb
cmc
fwait
inc
jb
and
test
inc
ret
jb
mov
dec
xor
pop
jge
pop
lcall
fcomps
dec
and
or
cmp
jne
mov
push
outsb
push
inc
mov
rclb
mov
cmp
mov
cmp
mov
nop
cmpsl
or
or
mov
cli
mov
stos
mov
cli
pop
mov
cmpsb
and
xchg
orl
push
daa
sub
cmp
test
lods
jne
fcoml
pop
sbb
shrb
test
loop
aam
xor
mov
mov
je
pop
dec
loop
sub
xchg
les
mov
mov
add
xor
mov
or
js
fs
ljmp
xor
push
or
pusha
xchg
leave
mov
dec
or
clc
fadds
data16
xor
dec
xchg
mov
int3
sub
lea
sbb
adc
dec
arpl
loopne
jl
push
adc
push
pushf
jbe
sbb
aam
sub
inc
shr
xchg
inc
and
daa
shr
cmp
lahf
js
mov
add
fwait
add
hlt
insl
pop
fnstcw
pusha
mov
pop
jp
jne
popa
xchg
clc
pop
jle
pop
and
push
int3
dec
leave
or
push
cmp
bound
dec
repz
jp
lods
outsl
push
lods
adc
popf
adc
call
lods
add
repz
push
xchg
xchg
and
das
popa
shll
sbb
push
cltd
mov
mov
sbb
punpckldq
out
mov
dec
loope
mov
xchg
nop
test
mov
pop
mov
js
xor
jge
movsb
dec
negl
pop
testl
cmpsl
push
add
add
mov
fsubs
cltd
xor
lods
xor
mov
xor
or
ficompl
dec
pop
and
dec
mov
cwtl
jmp
scas
cmpsl
stos
inc
loope
in
dec
xor
dec
test
dec
or
mov
pop
cwtl
add
idivl
and
std
mov
mov
mov
mull
push
xor
lcall
imul
divb
dec
enter
in
xor
arpl
mov
in
inc
mov
imul
ja
dec
and
movsl
xchg
or
popa
jge
push
fdivr
test
sbb
fadds
test
push
cld
paddsb
push
rcrl
pop
xor
test
insl
std
andb
inc
mov
orl
xorb
inc
sbb
sbb
jnp
movsl
cltd
pop
and
ret
add
insl
outsb
add
mov
adc
add
inc
xor
push
fcomi
scas
stc
mov
pushf
test
je
xchg
inc
lds
mov
xchg
movsb
lods
fwait
fwait
adc
dec
sbb
jge
dec
mov
dec
pminub
leave
mov
sub
sti
lahf
mov
pop
lods
adc
mov
lds
stc
xchg
out
arpl
scas
fisubrs
ds
mov
jle
sub
shrl
jae
mov
xor
lcall
xor
sbb
in
adc
mov
xor
scas
push
add
xchg
stos
or
ljmp
mov
nop
aad
repz
test
pop
outsb
cwtl
lods
xor
mov
es
xor
cs
pop
inc
rolb
fstpl
cmp
loope
mov
jge
sbb
jns
add
out
inc
add
scas
push
and
lods
push
lock
jl
imul
rclb
icebp
les
jnp
jecxz
inc
test
cltd
mov
rorb
xor
sti
sbb
adc
sbb
test
lock
cmpb
or
add
into
or
icebp
ljmp
stc
sub
jl
ret
addr16
jecxz
fbld
in
sbb
fcomps
xor
xchg
gs
dec
fists
sub
ret
mov
xchg
xchg
addr16
subl
loop
inc
xor
in
test
mov
test
add
cmp
jae
mov
loope
std
fmuls
and
mov
sub
pop
dec
lock
test
inc
xor
pop
pop
jbe
shll
insl
imul
cvtps2pd
mov
or
insb
mov
stos
xor
dec
or
daa
lret
cmp
ret
mov
xchg
adc
int
sub
in
mov
test
fs
shll
rcl
mov
mov
add
or
pusha
cmp
out
repnz
lods
fdivl
data16
pusha
lods
call
in
call
xchg
cmpsb
pusha
mov
loop
jmp
adc
or
jmp
cmp
lret
data16
sub
mov
and
cmp
dec
jns
int3
inc
and
out
loop
pusha
pusha
xchg
mov
sub
loopne
fdecstp
scas
mov
sub
mov
add
std
mov
aaa
sbb
push
rorl
dec
arpl
movsl
call
sub
adc
lret
pusha
sbb
inc
lret
adc
mov
push
insl
data16
xchg
jo
fcmovnu
js
cmp
clc
jl
dec
cmp
inc
cmp
mov
add
xchg
xchg
cmp
shl
cli
and
les
nop
jo
and
jg
jp
mov
mov
negb
stc
pusha
push
xor
loop
push
dec
sub
sbb
loopne
cmp
sub
jecxz
or
jecxz
sub
les
dec
stos
push
push
into
lahf
mov
movsl
cs
cmp
in
loope
lret
ss
sbb
or
jne
inc
pop
loope
push
daa
popf
addr16
lea
adc
fucom
call
outsl
push
je
cli
int
mov
pusha
out
js
repnz
imul
sbb
lret
aaa
aad
dec
lds
fadds
mov
sti
insb
jecxz
sub
pusha
jne
scas
jp
scas
mov
mov
inc
adc
xchg
mov
sti
mov
addr16
jl
mov
fcoms
ja
pop
cmc
iret
mov
mov
aas
push
sub
scas
cmc
pop
or
pop
imul
test
fnstenv
insb
fwait
jge
mov
or
cmpsb
push
push
repnz
push
xchg
lods
xor
push
or
dec
fidivrl
mov
aas
adc
repnz
fstpt
mov
popa
test
add
into
jmp
ds
mov
pushf
add
xchg
add
lea
ds
ret
dec
jns
jb
jno
sbb
mov
adcb
rorb
out
cmpsl
mov
or
pusha
lcall
int3
sbb
sbb
jo
pop
orl
test
and
arpl
fcmovnu
fdivs
add
divb
cmp
dec
les
sub
es
ret
insb
ffree
jg
pop
or
sbb
adc
lock
leave
je
dec
xchg
adc
sub
pop
and
inc
nop
mov
sbb
dec
inc
fdiv
mov
push
cmp
sbb
popa
out
dec
gs
jge
je
dec
sub
sbb
fcompl
xor
pop
xorb
add
adc
stos
xchg
mov
or
das
xor
or
dec
pop
btr
and
cmpsl
mov
cmp
dec
testb
popa
jle
rorl
in
mov
ret
or
test
adc
cmp
mov
cmp
dec
sub
pop
push
dec
mov
push
xchg
pushf
notb
shlb
jle
push
jp
xchg
add
xchg
mov
test
es
pop
mov
ss
lods
mov
aaa
lcall
mov
sbb
mov
sub
rcrb
mov
shr
sub
sbb
sbb
stc
sbb
rolb
sbb
and
add
xchg
xor
out
mov
insl
stos
enter
jae
lret
xor
stos
nop
mov
push
gs
cld
xchg
xor
hlt
xchg
xlat
mov
adc
mov
popf
into
dec
add
pop
test
inc
xor
fistpl
gs
sub
mov
dec
jne
adc
xabort
sub
imul
add
push
push
xorb
lds
shlb
dec
mov
insb
ja
lret
es
jp
cmpl
mov
and
fucomip
add
cltd
stos
ret
arpl
mov
add
xchg
jmp
push
pshuflw
jae
xchg
xlat
sbb
pop
test
xchg
mov
in
sub
pusha
and
mov
mov
addb
aad
mov
mov
fsts
daa
out
sub
mov
mov
test
mov
bound
shlb
cmc
or
test
cmp
push
dec
mov
jp
es
mov
dec
add
push
mov
fildl
cmp
mov
push
lods
cmc
aas
add
push
ret
popl
bound
enter
jg
add
mov
insb
enter
sti
cmp
adc
in
arpl
test
loope
lea
xchg
inc
movsb
mov
push
es
addl
shrl
into
inc
pop
mov
js
adc
add
mov
or
je
aaa
mov
xchg
leave
add
mov
mov
or
inc
cmp
cltd
addr16
faddl
mov
lds
sub
enter
xor
or
mov
fwait
jnp
ficoml
mov
movsb
pop
cmpsl
ror
mov
jo
lret
mov
or
sub
pushf
sti
push
ss
andb
movsb
push
mov
sbb
scas
std
or
daa
out
nop
mov
lret
loop
jae
outsb
leave
out
inc
mov
cmp
sub
test
mov
sbb
cmp
pop
addr16
xchg
stos
sahf
test
jns
add
xor
dec
jb
mov
clc
fst
xchg
lds
or
push
lahf
imul
popf
cmpsb
mov
shrb
jne
xchg
fimuls
ja
xchg
lods
pop
scas
xchg
mov
rclb
out
mov
mov
pop
xor
lahf
gs
cltd
sub
mov
push
cmp
inc
shlb
lds
fsubl
pop
jle
insb
in
pop
loopne
and
test
outsl
rorl
out
sahf
loop
cmp
jmp
imul
mov
es
sahf
lret
xor
jle
or
sbb
data16
pop
xorl
pop
mov
jno
jmp
int3
sub
int3
call
xchg
push
iret
mov
int
dec
imul
jmp
xor
mov
cmpsb
inc
xor
push
cld
jle
jl
add
sub
mov
aad
stc
mov
pop
clc
mov
stos
fcomp
pop
mov
push
lods
insb
sahf
adc
xor
jae,pt
push
or
push
xchg
into
in
jl
xchg
inc
jae
mov
mov
dec
imul
lds
notl
xchg
rcrb
lods
push
loopne
adc
jp
xchg
inc
dec
and
sbb
call
jp
mov
xor
ss
test
adc
clc
xor
add
into
push
dec
outsl
dec
xor
das
testb
sbb
leave
or
daa
cs
xor
xor
punpckhwd
xor
push
mov
xor
pop
dec
loopne
push
sub
scas
inc
imul
pop
jae
gs
repnz
loop
enter
xor
pop
xchg
xchg
push
icebp
xchg
aam
push
mov
shlb
xor
jle
cs
into
jg
mov
jp
mov
movb
jnp
and
adcl
or
add
mov
bound
ja
and
mov
mov
imul
repnz
faddl
cwtl
sti
cld
lods
lods
hlt
jo
xor
scas
leave
repz
inc
or
jmp
xor
jne
jecxz
mov
int3
das
inc
xchg
pop
outsb
mov
xchg
mov
mov
je
push
inc
mov
pusha
sub
add
mov
mov
cmpsb
pop
call
cmp
ret
mov
rcrl
push
mov
fs
and
lods
mov
call
or
les
incl
sub
sbb
jb
into
enter
shrb
dec
adc
fdivrs
pusha
pop
in
and
jle
movsb
out
lods
jge
sarl
sbb
mov
fdivrs
outsb
ret
loop
mov
les
mov
arpl
sete
in
out
add
insl
fwait
fs
xchg
xor
aas
cli
fdivr
mov
movsb
sbb
mov
push
rorb
cmpsb
xorl
out
lock
sbb
outsb
xchg
ficoml
stc
add
nop
outsl
dec
add
fcmovnu
cmpsl
lret
inc
push
mov
mov
cli
iret
jns
mov
sahf
xchg
fnstcw
mov
jno
sbb
cmpsl
mov
pop
push
dec
addr16
rcl
and
sub
push
out
adc
push
aas
into
aam
test
gs
fs
movsl
jp
js
bound
cmpsl
das
adc
rcll
inc
rorb
adc
jle
pop
addb
std
faddl
or
cmpsb
inc
add
ror
jo
sub
pop
lea
fstpt
add
arpl
and
filds
faddl
stc
pop
hlt
mov
mov
add
enter
pop
cmp
xor
xor
inc
jg
lret
test
inc
and
frstor
push
add
rolb
and
outsb
mov
sub
ljmp
js
pop
int
subb
pushl
test
movsb
inc
mov
mov
fcoml
hlt
pop
sbb
push
sub
hlt
pop
bound
iret
outsb
jcxz
sub
mov
inc
cli
sbb
inc
hlt
out
addr16
jbe
jne
pop
mov
and
pop
jbe
push
icebp
push
in
dec
cli
aaa
cli
leave
jnp
or
or
mov
jl
adc
cwtl
dec
adc
test
adc
or
adc
mov
das
xchg
loope
lods
lock
lahf
scas
in
mov
sbb
loop
into
out
xor
mov
push
daa
cmpsb
cld
xor
repz
jle
dec
mov
flds
jp
sub
mov
push
sarl
mov
inc
cmp
inc
rorl
out
add
push
fidivs
adc
cmpsb
and
outsl
stc
test
mov
mov
test
leave
pop
orl
shrl
add
popa
mov
bound
loopne
fistps
dec
lahf
jl
bound
hlt
jmp
jno
es
push
pop
mov
sub
sub
repz
xor
sub
xor
test
jmp
test
in
mov
imul
xor
jb
movb
lret
jnp
inc
out
cltd
cmp
add
dec
ds
nop
js
test
in
std
sti
test
movsb
xchg
nop
mov
pusha
add
or
out
movsl
jnp
and
or
loop
out
add
outsb
std
mov
addr16
xor
out
lods
fs
and
mov
aas
xchg
pop
fildl
das
sti
lea
sbb
stos
pop
addr16
pusha
inc
je
jmp
dec
push
xor
xchg
nop
adc
mov
push
inc
and
mov
fcmovb
mov
call
scas
pop
inc
adc
mov
jp
mov
cmp
pop
push
pop
xchg
ja
inc
pushf
pop
pop
shlb
xor
lret
frstor
dec
inc
push
jmp
in
mov
fidivrl
enter
inc
mov
test
sbb
popf
cmpsl
insl
jno
or
movsb
pop
sbb
data16
xchg
nop
fiadds
dec
dec
adc
gs
push
stc
iret
push
add
ret
inc
pop
enter
in
push
mov
ret
scas
cmp
adc
fnstsw
push
and
loopne
cmc
jae
pushf
jle
push
mov
push
psubsb
push
repnz
sbb
ljmp
les
xchg
leave
add
or
xchg
mov
mov
pop
inc
pop
add
sbb
lock
adc
cltd
jne
jmp
call
or
adc
test
pop
shl
jmp
mov
lret
sbb
mov
into
push
cmp
out
cmp
std
in
push
push
push
xchg
shll
stos
xor
sbb
and
and
push
pop
inc
pop
negb
push
xchg
jp
loope
lret
imull
pop
adc
pusha
push
sub
decl
cmpsl
sbb
iret
inc
mov
or
fdivs
dec
xchg
loope
sahf
fists
mov
call
mov
pop
push
popf
push
int3
mov
sub
inc
test
sbb
push
pop
pop
mov
add
mov
cwtl
out
pusha
xchg
jmp
jecxz
scas
addr16
ret
daa
pop
repnz
push
filds
sbb
loop
add
inc
int
cmp
negb
xchg
push
mov
xor
adc
add
mov
cmp
cmp
adc
push
sbb
jne
lock
imulb
ljmp
pop
xor
imul
into
pop
out
sbb
pop
adc
leave
aam
jns
into
repz
add
xchg
jecxz
lahf
xchg
xor
push
xorb
ficoml
dec
das
imul
jbe
pop
cmpsb
adc
or
lds
mov
dec
and
test
push
mov
mov
inc
inc
adc
mov
inc
leave
xchg
add
mov
cmpl
lahf
imul
dec
addr16
pop
push
nop
jnp
imul
imul
int
lret
call
ljmp
dec
jmp
cmpsb
push
sarb
and
loope
xor
pop
jge
insb
cmp
xchg
mov
jmp
in
inc
add
mov
lcall
mov
daa
cmp
ds
mov
leave
hlt
fistps
inc
js
mov
sub
inc
fwait
fwait
cmp
sub
push
cs
xor
in
in
dec
lock
mov
filds
xor
outsb
dec
and
pop
pop
and
fildll
pmaxub
push
dec
cmp
pop
popa
push
ret
dec
fwait
and
shll
pop
ja
mov
fisubrs
scas
out
cli
pushf
cmp
jno
aas
pop
xchg
jae
pushf
dec
xor
push
or
xor
dec
dec
jns
xchg
je
ror
lahf
aas
mov
xchg
and
std
push
scas
mov
cmp
ja
out
popf
pop
pusha
jnp
fidivrl
fstps
enter
adc
movsl
movsl
daa
fwait
dec
jecxz
shl
loop
shl
pop
mov
xchg
inc
insl
and
mov
rclb
jno
popf
jge
mov
dec
pop
mov
dec
cmpsb
mov
aam
mov
inc
sub
test
in
stos
ffree
cld
dec
inc
sub
jmp
movsb
or
pop
lods
inc
into
or
rorl
das
xor
lahf
ljmp
jne
shrb
adc
call
and
scas
outsb
loopne
dec
adc
ffree
or
aad
test
shll
push
iret
add
xchg
xchg
aam
and
mov
sub
sub
dec
jle
aas
push
jg
inc
or
fldl
imulb
dec
repz
mov
push
jo
xchg
js
fmul
rcll
cmp
daa
mov
inc
inc
pop
pusha
inc
mov
sub
and
cmp
inc
jmp
add
xor
mov
push
push
icebp
flds
popf
pop
fisubs
aam
mov
sbb
inc
popf
inc
out
sahf
sbb
fidivl
xchg
pop
rorb
add
push
mov
std
ret
data16
pusha
scas
xor
jae
pop
push
sahf
ss
mov
pop
lds
loope
daa
clc
incl
pop
sbb
push
sar
mov
add
lea
mov
scas
dec
movsb
and
sbb
shrl
and
cmp
mov
test
enter
repnz
cmpsl
cld
jnp
pop
jae
ret
mov
sbb
fldenv
enter
sti
jae
sub
std
push
test
mov
jo
adc
lods
jge
jle
mov
daa
ret
jmp
xlat
cmpsl
push
pop
push
xorb
nop
mov
mov
or
or
outsb
push
or
std
shr
dec
test
sub
dec
bound
iret
movsb
inc
push
sbb
testb
cmp
enter
sub
jmp
pop
cmp
sbb
nop
cmp
sbb
lods
sbb
pop
loope
enter
add
stos
jl
aam
sbb
adc
xor
ja
pop
sub
aas
and
je
inc
js
ds
rcll
dec
sbb
cli
dec
fcom
out
xor
int
sub
pop
cmp
and
test
pop
sub
and
in
mov
cwtl
xchg
pusha
data16
push
mov
add
shrl
xchg
fucomip
scas
mov
test
pusha
rcrb
sub
pushf
mov
xor
ds
hlt
test
inc
xor
pop
into
pop
adc
jg
sub
mov
icebp
pop
mov
imul
imul
mov
cmp
repnz
jne
filds
aas
add
or
sbb
pop
jge
aam
dec
xor
sahf
in
xchg
jl
icebp
adc
ja,pt
scas
sti
xchg
mov
push
int3
sub
mov
xor
scas
dec
adc
call
pop
shrb
jo
dec
shll
mov
pop
cld
loop
push
push
in
bound
nop
add
shlb
shll
popa
mov
test
adc
mov
addr16
and
loopne
dec
stos
cmp
jmp
outsl
ja
sbb
int
sbb
fldt
cwtl
inc
xor
dec
cmpsb
je
mov
push
add
mov
push
in
add
addb
push
stc
xor
stos
scas
pcmpeqw
mov
lcall
add
dec
jne
push
jns
scas
cmp
or
xor
insb
out
arpl
stos
xchg
mov
out
cmp
sub
pop
adc
popa
fadd
cmc
pop
sbb
or
jecxz
sub
hlt
or
add
and
ljmp
inc
mov
push
jb
aam
shll
mov
std
punpcklbw
insb
in
sarb
xor
push
xor
xor
cmp
ret
xchg
or
aas
add
lret
push
in
sbb
lods
mov
sub
enter
scas
fiadds
push
cld
dec
repnz
and
sbb
add
test
icebp
cmpsl
push
xor
xchg
push
and
ljmp
outsl
or
pop
push
sub
dec
push
aas
repz
shl
in
mov
xchg
push
sub
ja
cmp
shl
es
gs
call
jge
cmc
or
orl
mov
cmpsl
cli
das
test
fnstcw
lret
repnz
bound
mov
pop
push
in
cltd
xchg
pop
push
inc
cmp
ja
daa
mov
mov
pop
in
pusha
loope
jle
rcll
jno
dec
pop
and
fadds
mov
cmc
mov
js
lds
les
loope
aaa
dec
adc
mov
xchg
popf
push
fldt
mov
jbe
fisttpll
insl
mov
and
pop
gs
mov
test
xchg
sbb
cltd
je
lret
dec
sarb
sub
mov
loop
cmp
sub
idivb
inc
mov
pop
mov
or
out
das
imul
int3
lods
pop
xor
mov
add
jmp
rorb
loopne
scas
dec
testb
inc
outsb
lret
dec
pusha
mov
adc
lods
dec
adc
adc
xchg
enter
lock
mov
cwtl
pop
pop
xchg
scas
pop
movsl
imul
loope
cmc
mov
and
leave
mov
imul
mov
push
rolb
push
mov
adc
xor
lret
jmp
int3
lds
pop
lret
fisttpl
jnp
jb
fdivrs
fdivs
or
loop
push
out
inc
jns
scas
sbb
add
fcompl
adc
jecxz
repnz
and
loop
mulb
lds
aaa
push
mov
cli
dec
hlt
sub
mov
dec
push
aad
loope
data16
cwtl
inc
dec
xchg
jle
cwtl
or
sarb
stc
repz
xchg
cli
jmp
xchg
jne
inc
mov
cmp
pusha
sub
push
mov
adc
cmp
cld
sbb
out
pop
dec
add
test
pusha
into
test
push
sub
xchg
and
test
mov
test
ret
push
pop
add
je
aad
push
aad
icebp
push
fldz
movsb
add
sbb
scas
dec
or
adc
xor
add
sbb
sti
es
mov
fsts
shll
mov
cmp
test
pop
pop
dec
sub
or
mov
jb
xchg
lods
sbb
mov
add
test
pop
in
in
sahf
mov
dec
push
pop
and
negl
imull
mov
scas
xchg
pop
mov
pop
dec
pop
add
push
mov
dec
jge
mov
mov
testb
pop
sub
adc
scas
outsb
icebp
inc
push
dec
sbb
lods
or
mov
jo
or
pop
and
ljmp
jl
repz
sbb
test
pop
imul
cmpsb
mov
jge
xchg
mov
int
cmp
insl
sbb
icebp
data16
mov
add
dec
in
in
lock
repnz
std
bound
or
cmp
xchg
aaa
out
dec
dec
daa
cmpsb
pop
lret
dec
movsb
int
pop
in
mov
mov
dec
sbb
or
shlb
lret
sbbb
es
cmp
pop
stos
je
rcll
sbb
dec
jg
sub
and
shl
mov
test
rep
test
in
loope
and
or
jo
inc
mov
xchg
fidivrl
mov
shrl
pop
xchg
mov
mov
push
ds
adc
push
insl
icebp
jle
shrl
cld
fs
mov
aas
pop
xor
mov
sbb
fdivrs
icebp
lock
xor
mov
mov
adc
mov
cmpsb
sbb
incl
mov
fcmovbe
iret
cmpsb
lods
jl
mov
test
les
lahf
lods
jne
loop
cltd
js
sbb
int
aad
lahf
in
pusha
push
movsl
push
jl
push
dec
mov
insb
pushf
adc
movsl
subl
rcrl
inc
or
mov
vmread
movsl
fldenv
rcr
xlat
filds
fcmovb
rcll
adc
push
insb
add
out
scas
insb
mov
insb
add
fstl
mov
mov
xor
and
pusha
push
cmp
and
pop
push
iret
mov
retw
pop
aas
hlt
add
lods
hlt
cwtl
jne
and
fldt
cltd
jge
movsb
jecxz
mov
pop
cmp
enter
and
and
jle
fcomps
fcompl
aam
xchg
xchg
sub
mov
fistl
mov
fs
cmp
jle
into
lods
subb
addr16
outsl
lret
jne
in
mov
cmp
mov
sbb
dec
pushf
or
jp
add
mov
mov
adc
out
jno
pop
lods
xor
dec
leave
in
fs
fbld
xchg
imul
cmp
js
into
xor
shrb
bswap
les
sub
adc
movsl
xchg
and
mov
aas
mov
mov
imul
sti
lcall
pop
cmpsl
mov
mov
repnz
cmpsl
dec
add
xor
aad
cmc
mov
rorl
jge
es
cld
mov
arpl
push
aad
rclb
inc
pop
test
sbb
lret
cmc
mov
mov
cmp
xchg
mov
es
pop
ficomps
in
mov
test
stos
push
cmpsb
and
sahf
jmp
rcr
jns
mov
or
fstl
sub
pusha
sub
pop
xor
incl
xor
insl
add
adcb
pop
cmpl
or
mov
mov
popa
jmp
leave
or
shlb
mov
ljmp
cmp
pop
push
jb
mov
sub
xor
sub
xor
js
ficoms
jg
add
sbb
es
mov
push
lret
sysexit
or
aas
mov
add
xchg
gs
pop
jo
cs
addr16
jecxz
cmp
sbb
mov
jmp
fbstp
inc
and
pop
dec
test
std
sti
mov
sub
fst
mov
scas
aaa
mov
ret
jg
pextrw
push
add
rcrb
aaa
aaa
out
sub
add
bound
rclb
xor
in
mov
or
xchg
mov
cs
jge
push
lcall
ret
adc
add
in
push
je
fisttpll
mov
leave
outsl
cwtl
cmpsl
das
popa
rorl
stos
xor
add
cmpsb
and
jae
and
fiadds
fidivl
mov
movups
lds
inc
sbb
aam
push
arpl
mov
dec
je
mov
dec
xchg
stos
movsb
add
out
divb
sti
mov
sbb
hlt
cltd
or
scas
pop
dec
push
ja
test
aaa
adc
adc
xor
aam
xchg
xor
adcb
xor
lods
iret
jmp
push
sbb
xor
dec
sbb
imul
lret
sbb
fucom
je
inc
mov
add
rcl
aad
xchg
fidivrl
xchg
xchg
clc
or
mov
mov
adc
orb
shrl
push
adc
sub
adcb
jp
inc
pop
mov
push
das
mov
mov
es
cmc
stos
lds
stos
inc
out
fimuls
lods
imul
mov
dec
jecxz
or
cmp
es
mov
aas
sbb
mov
syscall
pop
mov
add
mov
outsl
incb
mov
jno
mov
std
push
push
xchg
and
scas
xor
push
or
pop
inc
stos
rorl
rcll
and
lret
fmul
fdivp
xchg
pop
cwtl
add
cmp
fdivs
mov
cmp
adc
ljmp
add
data16
xchg
jle
sub
imul
jmp
imul
jg
jecxz
inc
lock
repnz
dec
cld
test
nop
sbb
sub
xor
lock
dec
aaa
xchg
xor
je
add
std
out
mov
bound
xor
fists
add
mov
sti
lods
adc
icebp
fistl
out
lock
cmovle
push
xchg
jb
pop
adc
or
adc
mov
adc
xchg
cmpsl
add
cmp
adc
xor
pop
mov
mov
imul
mov
sbb
pop
fisttpl
cmc
xchg
es
jbe
pop
xor
test
push
int3
in
xlat
jns
in
test
xlat
sahf
sbb
xor
inc
fildll
cmpsb
sahf
test
stc
insl
std
mov
addr16
add
mov
test
pop
inc
addr16
add
imul
cli
sub
xchg
push
xchg
adc
mov
xchg
loope
popf
cmpsl
xchg
jb
les
and
push
jmp
lahf
mov
fmul
xor
xorl
inc
jle
filds
ljmp
fsub
cwtl
mov
xchg
pop
fwait
inc
std
xor
in
pop
jecxz
mov
xchg
stos
adc
adcb
xchg
push
jne
push
out
fst
test
dec
insb
pop
push
and
fs
testb
outsb
push
inc
sbb
mov
pop
insb
data16
xchg
mov
jle
cmp
mov
dec
xlat
data16
in
sahf
pop
push
scas
ret
imul
loopne
out
cmpsl
sbb
cmp
xchg
and
hlt
inc
imul
int
aam
ds
daa
lret
loope
call
std
add
or
adc
arpl
js
shlb
and
jecxz
repz
sbb
adc
sbb
es
adc
add
dec
xchg
cmp
cmp
inc
les
leave
dec
mov
fdivrs
adc
and
or
xor
adc
xchg
repnz
mov
dec
cld
sbb
nop
xchg
pop
jno
xchg
imul
jns
enter
les
inc
inc
jbe
mov
aas
movzwl
add
inc
clc
mov
pop
lahf
or
shlb
sbb
hlt
lret
and
sbb
mov
mov
mov
xchg
in
mov
push
and
cli
ds
and
testb
pop
jne
pop
sub
inc
xor
mov
add
idivl
leave
in
cltd
mov
xor
aaa
fmull
subb
mov
jns
mov
mov
mov
xchg
imul
xchg
lods
xor
xor
inc
outsl
insl
pop
adc
cmpsl
dec
ret
enter
jmp
mov
and
addr16
call
pop
or
push
sub
mov
xchg
push
je
ja
xor
xchg
push
les
andl
xchg
push
in
int3
lock
dec
clc
sbb
leave
les
xchg
loopne
jb
adc
pop
add
mov
in
fbld
shrl
in
inc
adc
fs
mov
lods
stos
add
fadds
jnp
ljmp
cmp
sbb
dec
das
lock
sub
imul
or
jnp
sub
sbb
mov
pop
jbe
push
xchg
inc
popl
dec
jp
xlat
cmp
aam
mov
or
lahf
out
loope
sub
mov
aaa
clc
add
pop
xlat
cmp
sbb
loopne
loop
ds
inc
push
shrb
mov
shll
iret
sub
clc
adc
xchg
rorl
out
or
adc
roll
cmp
aas
dec
mov
bound
call
cltd
adc
ds
and
repnz
jle
lahf
lahf
cmp
mov
js
jecxz
test
or
popf
mov
loop
dec
flds
ret
inc
gs
mov
push
pop
dec
stc
loope
pop
popf
cld
pop
lea
out
push
pop
or
mov
cmpsb
test
leave
call
mov
push
stos
jns
push
mov
sbb
sub
mov
dec
sub
cmpsb
leave
test
mov
lock
mov
jmp
outsb
popf
fs
addr16
clc
pop
rcrl
sbb
cmp
popa
imul
in
pop
cwtl
xor
adc
push
sub
xchg
scas
pop
lret
cli
push
add
clc
xchg
mov
mov
add
jmp
std
push
dec
xor
mov
les
or
outsb
jns
clc
iret
mov
adc
ret
arpl
add
inc
dec
stos
cmpsl
xlat
dec
cmp
imul
fisubs
fimuls
adcb
movsb
loopne
pop
mov
outsl
dec
fildl
jnp
sub
xchg
cmp
xchg
pop
fnstcw
xorl
test
and
shll
pop
mov
pop
push
idivl
std
sbb
in
imul
push
int3
xorb
pusha
movsl
rcll
jg
mov
add
je
mov
shr
cmp
andb
mov
sbb
stos
test
jp
xor
pop
inc
lcall
movsl
mov
xor
sbb
cmp
mov
mov
int3
jnp
int
das
imul
mov
outsb
inc
mov
and
sbbb
mov
jnp
jae
test
mov
fstps
adc
loop
repnz
cs
aaa
jmp
ret
mov
adc
add
dec
imul
lea
xlat
mov
popf
xor
sub
jbe
sbb
adc
cli
nop
test
adc
xchg
aaa
fstpl
jg
js
mov
jno
rcrl
dec
or
mov
insb
xor
rorl
cmpsb
mov
mov
jnp
xor
nop
add
sahf
mov
push
sub
mov
scas
inc
sahf
test
mov
inc
aad
loop
mov
loope
and
lret
xchg
cmp
jb
cld
int3
sbb
movsb
arpl
inc
sbb
sub
dec
and
adc
insl
ret
lods
pop
in
and
repz
fisubrl
lods
mov
add
and
mov
inc
js
int
dec
adc
in
sbb
adc
daa
pop
mov
xor
cli
push
cmc
sub
sub
mov
jbe
rcr
inc
xor
and
iret
and
add
mov
sti
jp
jecxz
mul
jns
cmp
in
sbbl
dec
mov
ljmp
je
in
jns
in
fsub
std
mov
mov
cmpsl
mov
dec
hlt
hlt
movsb
aad
loope
pop
fs
pop
xchg
or
lds
cmp
pop
pushf
xchg
fs
mov
or
jl
out
into
or
lods
add
mov
sub
scas
pcmpgtw
push
les
xor
push
out
and
rcr
or
xor
je
xor
lahf
jle
jg
hlt
or
inc
mov
inc
jmp
pusha
scas
popf
xchg
loop
cmpsl
dec
xchg
in
push
ss
adc
xor
push
push
push
lds
dec
inc
sbbl
sbb
scas
fwait
mov
push
rcl
pop
scas
pushf
icebp
fisubl
ljmp
and
mov
je
jl,pn
jo
pop
in
and
mov
ss
and
inc
leave
xor
aad
lahf
push
out
mov
sub
scas
pop
loope
or
mov
aas
nop
jno
aam
adc
lods
add
or
movsb
pusha
das
pushf
pop
push
sbb
daa
sbb
adc
jae
sbb
add
cmp
cwtl
stc
or
imul
mov
scas
cwtl
stc
jb
or
adc
fstpl
xlat
adc
imul
ret
lret
xchg
inc
sbb
sub
pop
sbb
jne
movsl
jns
pop
iret
add
or
mov
inc
cmpb
xchg
jno
test
add
out
add
or
arpl
popa
push
push
es
mov
adc
lret
lods
lods
lds
loopne
mov
xchg
mov
cmpsb
jo
int3
cltd
mov
or
lds
fwait
cmpsb
rolb
lds
add
dec
lahf
jl
mov
stos
int3
cltd
in
stc
dec
jns
pop
push
pop
mov
sbb
dec
sub
or
jbe
mov
lahf
mov
mov
adc
push
push
sub
mov
xor
stc
aas
test
js
push
pop
sub
xchg
sahf
xchg
mov
push
sub
xor
jmp
mov
repnz
cmp
jl
sub
xor
xchg
roll
add
xor
ret
mov
pop
inc
repnz
lret
and
pop
or
mov
pop
or
dec
shlb
sbb
popf
pop
dec
pop
mov
jne
mov
iret
cwtl
mov
cmp
mov
sbb
jae
faddl
and
mov
and
push
mov
mov
adc
cmp
and
sub
inc
in
sub
ljmp
dec
jmp
push
mov
dec
imul
mov
jb
pushf
mov
mov
std
dec
les
leave
outsb
and
inc
jo
push
adc
mov
cmp
mov
test
xchg
scas
daa
push
ss
shl
push
pushf
push
aam
aad
ljmp
ret
subb
or
out
fwait
fwait
push
fsubl
lahf
aad
mov
jl
daa
lods
jmp
add
xchg
mov
sti
pop
iret
subl
mov
push
js
ficoml
or
mov
jle
and
sub
lods
sub
cli
bound
mov
adc
mov
in
jecxz
mov
sbb
inc
and
fs
sub
mov
sbb
test
in
aam
fdivs
or
les
jmp
lods
cmp
testb
xchg
and
add
add
sub
mov
inc
test
pop
mov
xor
andl
sbb
nop
js
push
add
mulb
mov
or
outsb
sub
pop
sti
mov
jp
cmpsl
jbe
fs
fldt
dec
xor
push
arpl
out
cmp
lahf
leave
inc
popf
jmp
pop
inc
pop
xchg
jne
std
scas
jmp
sti
daa
jb
es
sti
test
jmp
cmpsl
aas
pop
cmpsl
test
lcall
add
xor
adc
rep
rol
xor
mov
idiv
daa
lea
sbb
test
add
and
adc
popa
addb
cmc
and
inc
lea
lcall
daa
sub
ficomps
push
movb
push
adc
push
ljmp
aaa
in
icebp
cmp
adc
jp
jmp
mov
aaa
inc
out
jle
dec
add
loop
mov
repz
add
bound
mov
loop
outsb
cmpb
icebp
loop
add
ljmp
pop
leave
mov
or
repz
and
ss
in
shlb
cli
out
jp
loopne
fcomps
rcrl
push
mov
lret
inc
inc
mov
sbb
ss
je
sub
ret
xchg
ljmp
pop
les
pop
nop
jb
shl
jecxz
in
and
bound
sbb
mov
mov
adc
push
mov
fsubl
mov
push
sub
movsl
iret
inc
lods
and
out
bound
repnz
call
je
std
shlb
inc
shrl
cmp
cmpsb
add
mov
out
adc
adc
les
pop
cwtl
inc
xor
xor
xchg
lret
xor
mov
pop
adc
int
mov
mov
sbb
cltd
ficoml
mov
loopw
in
shll
ret
dec
fistpl
mov
call
cmp
push
mov
jle
and
les
int
adc
adc
inc
dec
push
cmp
mov
or
jmp
notl
sbb
inc
in
mov
jns
cmp
adc
mov
hlt
jae
mov
dec
or
popa
mov
shlb
or
or
xor
sbb
fwait
cli
stc
aam
push
imul
popf
xor
push
enter
ljmp
add
inc
cwtd
xor
sbbb
mov
jnp
cmp
and
lcall
shll
in
into
xor
jmp
out
jb
rolb
push
sarl
in
js
imul
pushf
push
scas
cli
sahf
dec
sub
mov
add
stc
imulb
adc
gs
or
add
push
js
sbb
insb
mov
xorb
das
or
sbb
js
pop
mov
mov
call
dec
jecxz
sbb
jg
rclb
jb
dec
iret
or
rcrl
jne
push
jl
xchg
sahf
jae
jb
and
push
adc
pop
mov
inc
cs
xor
iret
movsl
int
mov
lret
cmc
fstpt
mov
shl
mov
ficompl
icebp
push
out
xchg
xor
mov
mov
xor
add
add
push
pop
popl
jmp
xchg
xlat
inc
jl
fucomp
inc
jge
cltd
adc
pop
xchg
jge
pop
adc
roll
movsl
rorb
xor
cmp
hlt
xchg
sbb
imul
jl
mov
loop
sahf
scas
cltd
rolb
pop
add
sub
ret
stc
call
mov
std
jmp
sbb
popf
daa
jge
and
adc
movsb
ret
mov
and
stc
jmp
gs
push
leave
jge
fisttpl
xchg
cmp
imul
jg
mov
jo
fisubs
xrelease
xchg
push
xchg
adc
movsb
xchg
inc
jb
mov
xchg
outsl
jp
dec
inc
pop
outsl
ret
mov
pop
into
mov
test
pop
xchg
jge
jp
shlb
pop
hlt
popa
xchg
psubd
inc
pop
fdivrl
pop
jg
push
inc
ret
out
xchg
dec
pushf
ret
or
movsl
xor
js
cwtl
pop
lret
inc
mov
mov
out
jle
popf
fwait
pusha
jmp
in
insb
sub
cmpsl
out
cmp
pop
cltd
add
mov
mov
and
test
sete
add
push
sub
gs
sbb
adc
cli
cs
xchg
mov
inc
mov
and
inc
fidivrl
xor
fdivr
in
lea
cld
fcoml
into
andl
push
nop
mov
dec
test
add
add
lahf
test
mov
imul
jecxz
add
loopne
xchg
dec
mov
pop
insb
xchg
dec
lret
lds
incl
ret
fdivl
enter
cmc
pop
lock
daa
mov
xchg
packuswb
xlat
sbb
push
inc
repz
out
dec
or
xor
cmp
jno
jbe
jmp
in
xchg
test
scas
xchg
fcoml
aad
jecxz
adc
mov
popa
lret
pop
fildl
cmp
sub
mov
ja
aad
cmp
adc
or
adc
arpl
sahf
sub
in
call
test
dec
mov
push
sahf
sbb
push
mov
xlat
mov
fsubp
loop
sub
notb
mov
sbb
add
stos
xchg
bound
es
mov
out
push
movsb
lods
cltd
xchg
mov
iret
pusha
dec
mov
dec
xlat
mov
jns
enter
mov
jo
fs
pushf
js
pop
cltd
pop
ljmp
mov
fldcw
xchg
pop
jmp
scas
push
cwtl
aaa
stos
test
addl
mov
cmp
and
jnp
cld
pushf
cmpsb
lods
inc
je
jne
test
daa
mov
movsb
xchg
ljmp
jno
stos
or
cmpsb
out
out
fs
mov
push
add
outsb
push
xor
sub
jle
jl
xor
loopne
cmp
jg
jo
out
mov
rcrl
jbe
and
mov
cmp
imul
in
das
pop
pop
nop
outsl
adcl
and
test
dec
test
scas
loop
pop
pop
push
out
dec
push
xor
icebp
es
push
sub
arpl
jbe
test
sti
add
cwtl
add
pop
leave
daa
repz
xlat
movsl
popf
push
lret
mov
outsb
mov
inc
imul
lret
sub
jmp
imul
cmp
lods
or
or
ss
pop
mov
cmpsb
in
mov
sbb
mov
jo
scas
push
stos
das
stos
in
jae
leave
movsb
pop
iret
sti
mov
add
lret
push
dec
mov
ss
cs
jge
adc
xor
pop
out
push
addr16
stos
mov
mov
out
xor
fs
aad
or
aaa
imul
ds
call
mov
sti
push
jp
and
mov
pop
mov
test
scas
mov
dec
sbb
mov
dec
pushf
je
jg
push
inc
xchg
mov
xchg
push
cmp
stos
cmc
loop
xchg
add
int3
pop
adc
dec
and
fildl
push
es
js
push
xchg
jne
push
out
push
lock
inc
stc
clc
lods
lcall
aas
popa
inc
mov
repz
dec
xchg
pushf
jge
ss
movsl
adc
add
outsl
notl
inc
xlat
xor
loopne
icebp
das
mov
mov
push
or
sti
dec
out
adc
stc
in
inc
sub
mov
dec
outsl
mov
in
lods
cmp
cmpsb
cmpsb
sbb
loope
xchg
cmp
dec
lods
ljmp
rcrb
dec
rorl
xchg
in
and
push
xchg
sub
jg
into
rcrb
lea
push
mov
push
lret
pop
sbb
sbb
inc
cmp
mov
cltd
cmp
cmpsb
dec
push
pop
cmpsl
jp
movsl
stos
cmpsb
out
ret
jmp
popf
cmp
repnz
inc
add
and
in
lock
aas
fldt
repz
xchg
jge
popa
inc
sbb
addl
out
push
pop
xor
mov
out
pop
fnstenv
sub
out
or
das
imul
xchg
js
cs
pop
idivl
dec
sub
pop
mov
loopne
inc
repnz
pop
std
int3
repz
adc
add
add
jp
out
into
fstpt
push
stos
scas
cmc
bound
xor
pop
pop
mov
add
add
sub
ret
mov
and
dec
pop
adc
jno
cwtl
clc
inc
jge
pop
pop
or
outsb
pop
loopne
mov
add
push
pop
int
lods
pushf
int
sub
aad
add
pop
jb
add
sbb
out
jp
mov
pop
test
mov
dec
cld
and
and
mov
xchg
jae
or
movsb
push
adc
call
cltd
sbb
cmc
xchg
xor
cld
pop
cmp
mov
sbb
push
cmc
cwtl
pop
fcomp
in
inc
pop
push
in
icebp
lret
push
xor
adc
cmpsl
dec
je
lock
fidivrs
dec
xor
dec
nop
outsl
fisttps
xchg
dec
subps
mov
jnp
mov
clc
cltd
std
pop
or
pop
push
push
jge
add
inc
imul
mulb
jmp
or
cmp
ds
mov
jnp
jle
pop
xchg
scas
in
in
sub
adc
dec
push
popw
push
push
andl
pop
cmc
pop
pop
lea
mov
mov
loop
das
jb
xlat
pushl
mov
mov
jo
jne
and
adc
xchg
lcall
pop
fisubs
das
push
shr
cld
outsb
and
incb
mov
fisubrs
cmp
sub
fwait
rcrb
lret
enter
bound
aad
js
pusha
jl
inc
and
outsb
xor
test
mov
xor
dec
insb
xchg
scas
cmp
adc
xchg
lret
test
outsl
popa
movsb
push
pop
xchg
dec
fcomps
jne
loopne
dec
xlat
aam
adc
and
add
imulb
sub
add
insb
mov
movsl
bound
pushf
or
cmpsl
sub
ja
push
bound
sbb
testb
sub
lahf
aas
jae
mov
xor
push
shl
lods
imul
jg
mov
mov
push
mov
dec
xor
leave
ljmp
mov
ret
push
sbb
add
pop
sbb
xorb
aas
nop
push
shrb
adc
jl
jle
dec
and
adc
mov
sub
lock
push
mov
push
mov
mov
mov
std
mov
andps
xor
sub
xor
iret
pushf
sub
cwtl
mov
stc
or
test
and
out
xlat
sbb
cmpsb
mov
sbb
repnz
mov
cmpsb
cmp
push
jmp
testl
es
stc
sub
inc
jg
or
scas
push
vphaddwq
jnp
xchg
cmp
aad
cmp
mov
xor
mov
cmpsl
leave
das
ljmp
pop
push
ja
nop
push
lock
dec
enter
stos
es
sub
mov
pop
xchg
push
sbb
push
sub
sahf
cltd
fcompl
jmp
xlat
data16
inc
jecxz
or
mov
lds
and
xchg
ret
jno
sbb
daa
imul
mov
mulb
test
lahf
repnz
jne
xor
sbb
ss
call
or
aam
mov
fmull
inc
sbb
xor
add
enter
sbb
cmp
or
and
cmp
call
add
cmpsb
enter
scas
idivl
je
mov
xor
pop
inc
jle
adc
cmp
test
push
add
mov
stos
sbb
mov
ret
pop
pop
inc
out
lea
xchg
lea
cmp
loopne
inc
sub
loop
mov
push
aas
lods
jle
in
jae
push
and
push
cwtl
lcall
out
das
mov
push
cmp
push
lret
jg
aam
scas
sbb
subl
aas
scas
aam
push
sbb
push
jmp
dec
mov
cmp
out
popa
ss
push
cltd
and
fsubrs
xchg
das
out
loope
es
shll
sbb
mov
xchg
and
imul
adcl
xor
stos
out
xlat
aaa
stc
in
push
adcb
repnz
in
mov
push
pop
xor
cmpb
inc
mov
test
fstl
ss
dec
outsl
dec
movsb
pcmpeqb
mov
fiaddl
stos
xchg
xchg
in
lods
scas
sub
es
lods
popf
mov
mov
push
pusha
cmp
popa
lret
mov
pop
je
stos
pop
sub
das
shrl
je
mov
ljmp
addb
mov
mov
test
jno
filds
icebp
push
adc
and
gs
xchg
add
mov
xor
adc
mov
jl
push
add
and
cmp
xor
add
mov
cmc
loop
call
out
sbb
push
dec
shr
mov
lret
sub
sahf
ror
pop
fdivp
mov
mov
idivl
adc
into
xor
adc
and
cld
mov
and
push
roll
mov
xlat
mov
mov
jbe
lock
mov
es
mov
pop
inc
mov
addb
pop
fimull
or
push
mov
xchg
data16
jl
pop
inc
roll
loop
sbb
lea
xchg
pop
cmp
push
xor
dec
push
lcall
mov
jmp
jbe
inc
test
std
push
add
inc
mov
scas
inc
lods
mov
outsl
outsl
in
push
or
dec
or
mov
push
sub
repnz
addr16
daa
mov
pop
test
cmp
or
pop
loope
mov
xor
or
push
fdivrl
mov
mov
mov
add
rcll
mov
lods
and
cmp
js
inc
or
jbe
xor
je
ret
negb
mov
fcomi
iret
xchg
mov
adc
cmc
in
stos
sbb
push
and
dec
fildl
aas
cmp
xchg
lds
test
or
dec
arpl
imul
bound
cmp
sub
movl
mov
lahf
test
inc
xchg
bound
enter
or
push
out
sbb
sbb
sub
clc
enter
xchg
fidivs
call
daa
xchg
stc
pop
push
mov
adc
sbbl
mov
insl
sbb
fxch
in
sub
mov
inc
push
js
or
inc
js
or
jae
fildl
lock
mov
into
push
mov
rorb
jns
mov
shll
push
data16
mov
shlb
movsb
scas
inc
and
or
addr16
cmp
lds
fcoms
cmp
sar
mov
scas
into
and
int3
pushf
mov
rclb
xchg
ljmp
cmp
cld
ret
add
call
cmp
sub
mov
pop
cmpsb
inc
mov
es
stos
into
push
adc
xchg
in
xchg
add
inc
popa
subl
mov
mov
pushf
push
cmp
mov
xchg
inc
inc
std
jecxz
call
les
movsl
lods
jns
int
in
push
insl
adc
movsb
cmp
inc
into
jle
mov
mov
enter
pusha
pop
push
xor
pop
jmp
fsubl
sti
cmc
icebp
loope
rorl
mov
jb
pop
sub
popf
mov
push
sbb
out
or
repz
or
push
xor
fidivrs
out
lea
shl
ficomps
or
out
sub
into
daa
inc
je
pop
loope
aas
adc
test
out
fcompl
imul
and
rorb
out
repnz
out
inc
repnz
mov
lds
or
loop
mul
mov
enter
pop
mov
lret
mov
dec
jmp
cwtl
push
jne
dec
jnp
pusha
cmp
loop
lcall
adc
stos
aad
push
addr16
sub
insb
adc
sar
insb
adc
mov
gs
sbb
loope
in
ljmp
lahf
bound
add
repz
mov
ficompl
lahf
mov
and
lods
loop
out
fistl
pop
dec
data16
fs
and
or
scas
dec
ficoml
inc
loopne
stos
sub
test
pop
mov
fistps
cmc
jb
mov
mov
popf
mov
aas
push
cmpsb
call
sub
dec
in
ljmp
xor
gs
lock
sbb
adc
frstor
sub
dec
insl
scas
sub
pop
js
push
orb
push
fldcw
dec
sbb
jns
test
ret
inc
mov
and
aas
or
sbb
movsb
jmp
mov
mov
pop
scas
lcall
cmp
stos
cs
sbb
mov
pop
xchg
in
jl
mov
and
mov
jecxz
jecxz
pop
sub
push
mov
pushf
movsl
inc
sti
dec
sub
and
fadd
add
xchg
fcom
mov
shlb
pop
and
les
mov
std
cli
sub
adc
sahf
cltd
dec
jmp
adc
les
sti
test
hlt
push
scas
loopne
cmp
or
and
popf
or
pusha
mov
outsb
popf
bnd
daa
jnp
cmpsl
mov
cmp
shr
mov
push
or
cmp
add
frstor
mov
scas
mov
jb
daa
mov
lds
gs
add
jg
sub
and
dec
movsb
fs
inc
aas
dec
fcoms
xchg
nop
sarl
fmuls
cli
mov
dec
xchg
adc
arpl
clc
sarl
mov
cmp
mulb
or
mov
mov
in
cs
pop
xchg
jmp
jle
pop
repz
scas
out
sbb
outsl
dec
out
mov
jge
das
fs
dec
jp
pop
in
sbb
mov
jne
in
enter
jg
inc
mov
outsl
mov
mov
sahf
mov
inc
mov
push
bound
fcmovnu
sub
dec
mov
cmp
roll
adc
mov
call
cmpsb
jb
mov
lea
adc
adc
add
add
icebp
dec
outsb
pop
cmp
xor
xchg
incb
xor
sahf
cmp
into
aam
xchg
mov
mov
mov
push
mov
mov
sub
xor
add
aas
xchg
mov
hlt
dec
pop
sbb
mov
dec
xor
mov
push
pop
call
repz
je
popf
nop
jmp
sarb
push
lods
xchg
sti
sub
lods
mov
pop
test
mov
jae
sbb
jnp
dec
mov
xchg
mov
mov
jp
and
popf
jp
sub
loope
add
sub
inc
inc
andb
mov
aad
leave
cmpsb
dec
dec
daa
xor
dec
pop
cmp
push
pop
sbb
imul
fildll
and
inc
adc
dec
shrl
jmp
xor
rclb
jmp
in
dec
faddl
stc
add
or
ja
xchg
pop
movsl
xchg
add
cmp
add
lret
jnp
test
dec
ror
fs
fsubrl
jle
call
or
pop
or
ret
lock
mov
cmpl
out
xchg
outsl
mov
test
sub
and
inc
imul
mov
test
cwtl
fwait
jne
stos
cmc
inc
jnp
dec
xor
fimuls
xchg
nop
mov
imulb
ja
repz
sarl
daa
mov
jmp
or
lahf
jno
jle
cmpsb
or
cmpsl
adc
je
or
jle
fstpl
sub
adc
stos
xchg
dec
and
sbb
cltd
clc
sub
inc
icebp
cltd
jp
mov
loope
punpcklwd
lret
idiv
mov
jmp
sub
loope
sbb
shl
pop
or
jecxz
mov
inc
xchg
or
adc
push
lea
js
loopne
cltd
fistl
mov
in
xor
mov
and
in
sbb
cmp
in
repnz
cmp
in
jne
jo
popf
sbb
bnd
add
hlt
sbbb
jbe
das
mov
sub
mov
xchg
out
imul
fs
in
cmp
dec
or
lods
lcall
cltd
mov
adc
shr
mov
ss
push
orl
aam
imul
dec
xor
cmp
shll
call
mov
in
jmp
imul
data16
cmpsl
jmp
lea
inc
jne
or
daa
ss
xchg
leave
xchg
data16
insl
ds
je
adc
cmp
sbb
test
pop
rorl
mov
repz
jg
loop
pop
pop
sub
xchg
cltd
jae
add
push
ja
and
movl
and
ds
insb
lret
adc
push
cltd
or
into
sbb
addr16
shrb
push
or
fmuls
sbb
pop
in
pop
cmp
and
jl
push
add
pop
mov
push
stos
cli
fcoml
ficompl
adc
xor
dec
mov
dec
and
and
pop
and
subb
jb
sbb
fwait
cmp
data16
mov
ficompl
rcrl
pop
mov
push
or
lea
dec
fs
ljmp
mov
cmc
divb
push
xlat
mov
xchg
pushf
call
outsl
mov
lds
test
adc
shrb
or
jnp
int
int
sbb
lea
imul
inc
aam
iret
cwtl
mov
dec
xchg
pushf
push
add
cmp
mov
xchg
dec
sub
xchg
or
sbb
aaa
divb
sbb
ret
insl
mov
roll
ja
jbe
int3
xor
xchg
add
pop
sub
shrl
test
dec
inc
inc
jo
imul
jnp
push
jp
imul
xchg
test
loop
sti
xchg
cmp
leave
in
jle
xchg
decl
push
add
mov
hlt
out
xchg
sbb
mov
mov
dec
bound
mov
xor
and
adc
or
std
inc
sub
into
pop
test
jg
arpl
add
xchg
aas
or
jnp
jae
pop
ss
mov
and
leave
jnp
cli
mov
or
or
loope
sub
pop
sbbl
add
mov
lcall
xor
outsl
xor
fs
jae,pt
mov
jl
dec
sbb
test
jl
cs
and
xor
sub
cld
gs
lods
and
pop
bound
pop
mov
push
cld
shrb
outsb
adc
inc
or
push
loope
insl
lea
sub
mov
sbb
dec
negb
shl
rorl
aaa
popf
or
inc
nop
cs
test
test
mov
int
mov
ljmp
add
je
test
sub
mov
test
or
clc
enter
mov
lock
jl
add
inc
clc
or
ja
jg
call
dec
aad
imul
cmc
movsl
hlt
into
test
and
ds
inc
and
outsb
out
rcrb
ret
push
ljmp
loopne
jmp
stos
std
ret
sbb
jmp
xchg
pop
jge
push
fs
jl
mov
xor
lahf
push
fistps
dec
cltd
dec
mov
inc
fs
cmp
xor
fldt
mov
cmpsb
rcrl
cltd
or
cs
jmp
jle
test
daa
jle
cmp
cmp
push
or
lods
repz
add
jne
jnp
and
ret
mov
testb
add
adc
push
cmpsb
jp
call
in
es
jle
loopne
jl
push
jns
in
add
push
inc
push
jnp
mov
test
sahf
mov
and
stos
pop
mov
xor
ret
pop
xorb
sub
push
pop
pop
jnp
push
jecxz
out
sub
test
movsl
sub
out
scas
inc
mov
stos
in
mov
fidivl
sub
sahf
xor
mov
inc
mov
or
adc
push
and
jp
jg
jle
cmp
sar
dec
in
imul
sub
and
mov
or
cld
fwait
push
pop
test
sbb
out
mov
jne
xchg
mov
js
and
fisubl
ret
jge
scas
add
data16
sbb
mov
scas
sbb
in
sarl
pop
pop
decb
push
mov
pusha
push
icebp
daa
pop
inc
jmp
mov
in
cli
jecxz
pop
sbb
pop
adc
out
inc
mov
mull
stc
pop
lret
into
sbb
das
mov
jo
cltd
into
lods
es
sbb
popa
in
insl
pop
push
enter
test
jmp
fisubrl
xor
dec
repz
push
cmp
mov
push
aam
aaa
insb
lcall
test
xchg
cmpsb
packsswb
push
push
inc
fsubp
or
and
mov
inc
shll
jne
dec
mov
add
xchg
pop
mov
xchg
mov
out
push
dec
rclb
xchg
push
sub
rolb
pop
addb
mov
mul
inc
add
jecxz
mov
aam
pop
sbb
mov
lcall
je
test
mov
sub
add
sub
lea
or
and
in
inc
cmpsl
sub
adc
movsb
adc
scas
push
call
cmp
fldenv
mov
ss
sub
and
ret
jge
mov
xchg
push
pop
mov
push
scas
icebp
loop
ret
or
and
or
in
repnz
mov
mov
bound
out
sbbl
mov
cli
push
loopne
pop
mov
adc
outsl
push
push
mov
sub
add
out
or
add
lock
aad
lret
mov
mov
stos
add
sbb
inc
out
sub
or
mov
popf
orb
test
ret
xor
insl
shrl
lods
fs
sub
mov
push
cmpsb
andl
movsl
hlt
arpl
sub
mov
in
dec
mov
xchg
fstl
or
iret
pusha
repnz
push
sbbl
push
out
gs
add
push
test
cmp
aas
je
rorl
pop
cmp
pop
mov
add
cmpb
arpl
adc
icebp
xchg
loop
xor
dec
daa
pop
jg
sbb
xlat
adc
add
jae
cmpsb
xchg
xor
dec
mov
icebp
addb
xchg
inc
fbld
fisttpll
out
in
inc
mov
xchg
pop
adc
ljmp
icebp
cmpsb
idivl
lods
xchg
fwait
dec
in
icebp
mov
popa
cmp
cmp
sbb
mov
pop
mov
popa
cli
sub
mov
ret
jbe
cmp
xor
mov
or
dec
or
fdecstp
pop
inc
int3
out
inc
jnp
push
push
ret
mov
gs
jl
adc
jo
xcrypt-cfb
cmpsl
mov
mov
jnp
or
outsl
sub
test
inc
js
imul
add
frstor
pop
test
shrl
cli
push
scas
adc
push
pop
lods
mov
mov
sbb
jmp
adcb
adc
jmp
fsubrl
xor
in
adc
jb
call
sbb
repz
subb
repnz
bound
jbe
inc
jl
ja
outsb
addr16
test
and
push
inc
pop
dec
or
aas
dec
sub
jle
xchg
test
xchg
movsl
mov
into
jle
je
aad
aad
cwtl
pusha
jae,pt
adc
push
xor
xchg
mov
lock
cmp
js
call
mov
jns
or
iret
mov
movsb
int3
adc
cmp
xor
insl
hlt
cmp
xor
testb
cwtl
mov
push
movsl
cs
fadds
loopne
cwtl
fcoms
push
in
pusha
push
out
xchg
aaa
cmp
pop
aad
in
jbe
lods
mov
pop
add
dec
shrl
gs
and
xorb
mov
popf
sub
mov
leave
mov
cs
jns
mov
iret
ljmp
out
mov
jne
loop
aaa
test
push
mov
pop
data16
cmp
or
inc
shl
push
clc
sbb
cld
sbb
pushf
adc
pop
out
loopne
mov
pop
es
xor
xchg
filds
jnp
insl
pushf
mov
outsb
ljmp
in
sbb
scas
add
push
es
adc
in
leave
jp
mov
or
pop
push
rcr
movsb
leave
push
aad
xor
mov
js
aas
test
add
fisubs
pop
jecxz
mov
push
or
loop
test
ja
adc
imul
jnp
add
jb
mov
int3
std
jae
fcomp
fisubrs
add
cmc
cmp
lahf
rcrw
adc
movsb
cmp
mov
xchg
add
jns
ljmp
inc
and
test
in
iret
outsb
or
or
xor
hlt
push
call
aaa
test
aas
pcmpgtw
jno
mov
adcl
dec
mov
adc
sarb
pushf
dec
lock
jno
dec
sub
mov
add
test
add
adc
push
jnp
sub
push
mov
ljmp
pop
pmaddwd
mov
popa
nop
inc
cli
mov
bswap
pop
dec
in
inc
mov
int3
mov
fwait
sub
adc
jb
and
jp
mov
movsl
scas
mov
xchg
push
push
jo
test
mov
test
int
gs
xchg
pusha
mov
push
inc
and
lds
imul
addr16
stos
lcall
cmp
jg
push
or
addr16
xor
data16
add
fnstcw
inc
loopne
loop
xchg
aaa
out
and
inc
ljmp
out
mov
fs
add
cli
add
pop
lahf
das
or
addr16
jae
jno
dec
je
rorb
in
movsb
inc
fldcw
loopne
sbb
mov
js
stos
adc
popa
mov
pop
in
dec
cwtl
hlt
jmp
das
add
movsb
loop
mov
jmp
faddl
out
test
mov
ds
jg
jae
fdivrl
dec
hlt
push
pop
enter
popa
cmpsl
repz
jne
mov
pop
fisubrl
jg
imul
push
sub
rclb
cmp
call
jbe
aad
addl
xor
dec
dec
xor
stos
in
adc
xchg
pushf
mov
mov
push
divb
xchg
add
add
add
cmp
movsb
cltd
inc
xchg
andb
lret
cmp
int
mov
outsl
push
mov
add
adc
xor
popf
add
jne
divb
lret
cmp
movsl
jge
pop
outsl
push
cmp
dec
lret
xchg
mov
addr16
mov
add
arpl
mov
mov
sbb
sub
push
mov
xchg
lahf
sub
ja
jmp
addr16
sbb
pop
cld
push
addr16
sti
clc
enter
cmpsb
sbb
pop
inc
push
mov
in
cmp
dec
cmp
les
movsl
scas
leave
mov
shrb
fadd
dec
jge
ds
aam
scas
das
mov
add
adc
ret
push
ds
cmp
fsubrl
pop
popa
sbb
and
adc
add
push
or
mov
or
bound
loop
adc
push
sbb
imul
nop
popf
mov
hlt
inc
testl
in
jae
push
wbinvd
xor
mull
ds
xlat
lea
cmpsl
fs
xor
lea
rcl
aad
push
js
cltd
sbb
xor
mov
subb
sub
je
push
pop
pop
pop
cld
in
loope
adc
and
and
jle
shlb
hlt
or
and
sbb
pusha
sbb
adc
insl
jecxz
sarl
jle
dec
mov
mov
out
cmp
call
sub
test
xchg
fucom
cld
pop
xor
ss
out
das
scas
call
sub
leave
adc
sbb
hlt
jmp
push
mov
mov
xlat
fwait
and
sbb
and
pop
xchg
inc
pop
sub
mov
add
ja
outsb
out
ficoml
loope
shr
outsl
sbb
fisttpl
adc
and
insl
insb
mov
inc
and
push
mov
out
fdivl
sbb
mov
and
add
inc
es
mov
cmp
push
xor
ret
popf
loop
fwait
xor
pop
sbb
mov
stos
jmp
xchg
out
dec
mov
icebp
arpl
hlt
jmp
mov
test
sbb
int
sti
mov
jbe
sbb
orl
in
push
or
and
and
jge
push
pop
lock
fs
stc
fstps
mov
or
int
push
cmp
inc
nop
lcall
icebp
in
fcoms
and
dec
dec
pop
in
ljmp
lods
jp
andb
leave
sbbb
mov
or
iret
icebp
push
inc
mov
gs
cld
and
leave
cmp
pop
xor
jne
mov
adc
je
sbb
stos
in
add
or
ror
push
lods
pushf
mov
rcl
mov
lahf
and
aam
sub
ljmp
jbe
mov
stos
pop
sbb
mov
int3
aam
cld
repz
adc
xor
cltd
sbb
loopne
pop
ja
inc
rolb
xchg
mov
mov
and
jo
outsb
cmp
or
sahf
xorb
cmpsb
lret
or
sub
nop
lods
mov
in
shrb
jae
inc
fcoms
adc
rorl
pop
pop
lds
or
cwtl
push
imul
andl
int3
cmp
outsb
push
mov
cli
adc
cmpsl
jl
xchg
sbb
xchg
imul
sbb
int
xor
fs
mov
or
or
fadds
cs
pop
add
mov
repnz
mov
jns
inc
push
fnstsw
inc
or
adc
mov
jg
sbb
psubsw
faddl
lahf
mov
xlat
mov
and
pop
push
dec
imul
jo
insb
insb
movsb
cmpsb
pop
es
xchg
call
mov
leave
mov
inc
sbb
clc
cmpb
mov
orb
adc
mov
jg
mov
sub
shrl
or
loope
insb
push
arpl
xchg
pop
rep
gs
mov
out
ret
mov
jge
pushf
jb
fdivl
adc
fs
jmp
jbe
stos
lea
lods
xor
fs
lea
or
repnz
mov
dec
lret
push
jnp
mov
dec
xchg
cmp
rcr
cltd
mov
or
rorl
mov
cmp
jnp
pusha
mov
pusha
and
ror
push
filds
aaa
pop
cmp
mov
inc
pusha
testl
mov
lods
popf
popf
scas
daa
popf
cmpsl
aaa
sbb
push
shll
ret
and
lret
out
icebp
sbb
ja
pop
pop
xchg
jae
mov
pop
ljmp
cmp
hlt
mov
mov
mov
push
fidivrs
add
sahf
aaa
xchg
fsubs
test
push
mov
stos
xor
dec
sub
movsb
fwait
lods
or
push
sti
rol
xor
push
shll
push
sub
jle
dec
inc
lahf
in
jecxz
into
repnz
inc
jno
lret
ret
int
pop
push
jns
cmp
inc
imul
pop
movb
jne
scas
lahf
pop
or
xchg
int
xchg
fwait
inc
int3
lock
popa
sub
test
imul
add
lods
adc
les
cvtpi2ps
insb
sub
inc
sub
pop
int3
addr16
add
shll
sub
popa
sbb
lcall
and
cs
sbb
std
add
lods
and
repz
or
mov
cmp
jno
ljmp
add
adc
lock
test
jge
inc
and
fbld
in
test
and
push
into
pusha
arpl
orb
out
lea
insl
and
dec
pop
mov
xor
xchg
aaa
mov
jne
sahf
sbb
inc
dec
cltd
ss
inc
or
lds
fidivl
hlt
mov
loope
leave
mov
je
hlt
into
in
dec
enter
sets
pop
sbb
sahf
pop
and
and
or
push
inc
popa
jae
pop
stc
sbb
aas
cmp
jecxz
jge
and
add
mov
hlt
sbbb
fcomps
sbb
inc
imul
orb
cmpsl
test
insb
xchg
and
arpl
mov
sti
leave
outsb
dec
jle
adc
cmpsb
push
xchg
or
out
arpl
mov
dec
daa
icebp
in
pop
lret
push
jge
out
cmpl
cmpsb
in
je
shll
movsl
dec
xchg
and
fmull
loop
sub
mov
xchg
loope
dec
jl
outsb
push
lcall
jns
xchg
mov
pop
or
mov
int
jno
scas
ss
stos
jae
mov
sahf
aaa
push
addb
cmp
adc
fldpi
add
dec
sub
cwtl
arpl
movsb
cmp
add
ds
loopne
xor
adc
inc
adc
fldl
and
push
push
lock
loope
scas
outsl
addb
xchg
add
imul
xor
or
jge
rcrb
mov
push
gs
scas
xchg
aaa
lret
mov
das
dec
cmp
add
jecxz
add
andl
cmp
dec
xchg
jne
jns
sub
js
popa
leave
push
push
mov
cmp
mov
xchg
push
xor
and
pop
sti
mov
cs
jmp
shll
arpl
int3
add
test
sub
add
mov
stos
idivl
scas
shll
push
pop
cltd
xchg
lret
rcrb
jno
mov
push
xchg
pop
push
bound
cmc
sub
sub
mov
repz
mov
rorb
xchg
adc
xchg
xor
jle
aas
psrad
xchg
jle
mov
call
dec
shll
and
movb
sahf
or
cmp
jne
cmpsl
mov
and
inc
mov
mov
jecxz
mov
lcall
cmp
add
sbb
mov
adc
sub
mov
jno
sub
cmp
sti
gs
ret
sarl
stos
xor
sub
andb
int3
pop
mov
pop
fdivr
adc
fsts
pusha
inc
xlat
mov
inc
dec
or
inc
cld
inc
bound
mov
pop
movsl
in
jnp
in
fs
cltd
or
loopne
add
cmp
idivl
dec
cmpsb
pop
mov
js
int3
fldenv
dec
sar
push
jge
cld
das
lods
jg
sbb
mov
xor
sbb
push
or
push
fildl
push
imul
xchg
cmp
push
dec
add
aam
lahf
jle
xchg
sar
test
add
jnp
aad
cs
push
jle
sub
push
call
jl
lcall
add
lds
rcrb
and
mov
daa
lahf
push
loop
xchg
adc
sbb
cltd
xorl
jmp
repz
mov
loope
pop
cmpsl
fsubrl
out
aam
push
inc
push
add
mov
cmp
out
mov
cmc
push
sub
sub
mov
inc
push
cmc
shll
shr
subl
scas
stos
dec
ss
cli
jne
dec
invd
and
pushf
inc
fsubrs
pop
loopne
xchg
lcall
jo
in
or
add
pop
and
dec
adc
jb
add
inc
dec
add
push
inc
and
mov
xchg
sarl
pusha
aas
pop
sbb
push
add
stc
mov
ljmp
mov
movb
sub
jl
add
lret
add
test
je
adc
add
movsb
pop
xchg
mov
adc
cs
lret
int3
inc
add
dec
jle
mov
fld
mov
adc
xchg
and
jnp
sub
push
push
ss
xchg
cmp
hlt
cmpsl
jle
ficoml
scas
fwait
ret
clts
pop
lods
ficoms
cmp
stos
fidivrl
and
add
or
or
jecxz
mov
aam
stos
add
dec
divb
inc
lcall
scas
je
adc
fmuls
ljmp
jl
or
std
mov
int
dec
scas
lods
jecxz
or
movsl
cmp
in
sub
cmp
popf
loope
push
xchg
and
pop
lret
scas
stc
push
xor
pop
or
and
ds
mov
aad
push
cmp
js
ljmp
or
pop
cmc
rcrl
std
inc
or
gs
pop
loopne
out
mov
jo
xor
jl
enter
mov
fstpl
dec
and
jb
mov
in
daa
adc
xchg
dec
pusha
insb
sub
cld
rcl
jl
mov
stos
hlt
xchg
sti
push
negb
jge
lret
sahf
push
aad
adcl
sub
test
mov
movsb
xor
push
lods
fwait
or
push
mov
xor
cmp
adc
cltd
sub
rcll
pop
cltd
aam
xchg
lret
movsb
mov
popa
sub
inc
push
in
or
ds
cmpsb
fldenv
inc
mov
scas
jg
hlt
ret
push
xor
pop
inc
sub
cmc
sbb
sarl
ficompl
and
cltd
cmp
into
push
push
aas
mov
cmp
xchg
insl
inc
pop
into
cmp
mov
pop
lea
push
mov
das
std
popa
xchg
or
sbb
pop
pop
imull
jle
or
fisubrs
cmp
enter
mov
cltd
mov
xor
xor
fcoms
dec
icebp
xchg
fs
ja
cwtl
jmp
mull
sub
xor
xor
cmp
jnp
sub
clc
mov
fcmovnu
inc
mov
adc
stc
adc
outsl
fisttpll
push
xchg
xor
or
sbb
mov
out
mov
mov
mov
rcll
jl
lds
inc
and
cmp
cmp
adc
push
lahf
inc
sbb
mov
mov
fadds
es
stc
sbb
sub
js,pn
push
mov
pop
mov
dec
and
jle
loop
out
xchg
fsub
jecxz,pn
mov
push
pop
mov
in
outsb
jg
int
pop
mov
out
sbb
jae
sub
les
push
pop
imul
pusha
insb
mov
jle
sar
dec
pop
xor
sbb
sbb
and
leave
jl
shll
repz
fistpll
mov
shll
bswap
or
cld
data16
call
in
adc
cmp
jns
and
and
lret
dec
testb
lahf
mov
xchg
mov
dec
fidivs
xorl
sbb
push
enter
or
lcall
and
adc
mov
addr16
stos
jno
sbb
in
cmpsb
stos
gs
mov
and
movsl
xchg
mov
add
jl
lret
js
cmpsb
gs
cltd
xor
mov
inc
cmp
xlat
push
cmp
cmpb
faddl
push
xchg
cltd
aaa
cmp
mov
cmp
adc
int3
shlb
sahf
rcrb
sbb
jno
push
mov
mov
popf
cmp
pop
insl
hlt
sub
add
shlb
ds
dec
lods
xor
shl
rorb
insl
cmp
loopne
sbb
insl
pop
push
movb
cmp
add
mov
inc
ret
or
mov
test
leave
out
bound
xor
inc
xchg
add
cmp
cmpsl
xor
or
jo
xchg
mov
pop
lea
inc
js
in
sbb
scas
mov
std
enter
xchg
rcrb
sbb
sbb
cs
add
loope
push
pop
lods
loopne
in
mov
mov
nop
and
add
inc
ret
pop
es
xlat
orl
stos
dec
adc
js
sbb
xor
add
loop
stc
loop
imul
test
fiaddl
iret
xor
inc
repz
aam
add
jmp
pop
test
pop
aad
stos
and
fcmovnb
dec
aas
pop
push
xchg
imul
sub
leave
outsl
cmc
orb
mov
test
pop
mov
sahf
iret
push
out
adc
scas
sahf
movsl
jno
into
add
mov
inc
stos
mov
xor
sbb
jle
push
clc
xchg
inc
push
jge
icebp
cmpsb
stos
xchg
jmp
aam
faddl
cmp
fucomip
in
mull
push
mov
jp
jnp
mov
pop
test
ja
js
fisubrl
inc
push
push
lds
or
mov
xchg
dec
loopne
dec
pop
xchg
ljmp
pop
inc
cli
sub
aam
cmp
push
out
xor
mov
aad
xor
jne
and
fildll
dec
sti
ficompl
add
mov
or
fisubs
cwtl
inc
add
in
sbb
mov
mov
and
jl
enter
fistpll
xor
test
pop
enter
pop
vcvtpd2psy
aaa
xchg
mov
lret
adc
fidivs
sbb
push
icebp
mov
xor
test
out
pop
fnstenv
cmp
bound
push
lea
cs
push
pop
insb
and
sub
pop
adc
and
fs
mov
neg
pusha
jno
xchg
adc
out
push
pop
jge
and
and
mov
loopne
negb
js
dec
aad
xchg
or
mov
subl
or
je
test
cmpsl
mov
push
add
or
jbe
hlt
mov
push
inc
inc
aaa
sbb
fisubl
cli
mov
xchg
sub
ret
aad
mov
cld
inc
jae
fbld
es
cmp
ds
outsb
aaa
jae
rcrl
sub
dec
mov
cs
insl
inc
lret
je
pusha
lret
push
jecxz
test
fmull
xor
cmove
sbb
push
stc
cmp
in
jmp
test
aam
ret
or
cmpsl
rorl
and
mov
rolb
rcrl
ss
rcrl
in
lret
shl
out
cltd
addr16
push
andl
test
in
lods
pop
mov
mov
mov
jbe
fisubs
pop
hlt
jno
out
mov
aas
aas
mov
xor
cli
bswap
sahf
mov
adc
mov
xor
dec
lret
lret
ja
adc
jmp
jae
bnd
test
insl
cld
or
mov
pushf
aam
ja
insl
lods
movsb
xchg
into
mov
cltd
lret
adcb
int
mov
or
pop
cld
mov
add
lds
push
sub
push
sbb
xchg
xchg
push
sahf
or
loope
pushf
lds
mov
mov
push
lds
mov
mov
dec
or
cs
das
bound
enter
call
pop
and
pop
sbb
jle
jbe
and
pop
xor
sbb
jge
push
mov
add
adc
outsb
jp
stc
addr16
es
dec
test
insb
nop
nop
inc
xchg
in
mov
clc
pop
lcall
dec
cmp
nop
xor
push
jmp
addr16
clc
xchg
sbb
push
lcall
inc
mov
xchg
dec
pop
pop
or
sub
push
adc
inc
dec
jno
mov
pop
jge
cmc
fnstenv
cltd
or
jne
cmp
call
leave
mov
pop
sub
xchg
dec
outsb
mov
hlt
add
mov
xor
dec
daa
inc
mov
lret
bound
ss
add
mov
int3
mov
iret
push
add
xor
adc
mov
in
shr
pop
cmp
jb
cmc
sbb
adc
add
aaa
dec
icebp
jmp
sub
dec
incl
outsl
xchg
add
cmpsb
lods
ret
mov
mov
or
sbb
push
adc
aaa
mov
pop
leave
dec
push
dec
mov
pop
fidivl
out
lcall
push
or
fcoml
or
insb
int
js
mov
loope
popa
inc
sarl
movsb
xchg
dec
sarb
outsb
mov
les
bound
test
pusha
call
xchg
cmpsl
into
or
push
ds
pop
xchg
xchg
jae
xlat
jmp
insb
mov
push
or
push
clc
mov
ds
mov
push
mov
sbb
cmp
aaa
xchg
das
pop
sbb
push
inc
mov
mov
cmc
sbb
mov
jne
add
rorl
pop
fildl
mov
or
xchg
das
pusha
mov
leave
xchg
dec
push
addr16
xor
in
out
dec
xor
leave
cltd
cmpsl
mov
pop
and
adc
mov
pusha
loop
flds
sbb
scas
stos
sarl
into
mov
movsl
into
xor
fldl
repnz
sub
and
pushf
and
or
sbb
and
cld
jae
xor
pop
and
pusha
xchg
rdtsc
pop
sbb
pop
repz
outsl
repz
inc
mov
jae
gs
add
inc
mov
and
lahf
and
aad
js
sub
xlat
ja
pop
pop
dec
mov
sbb
repz
movb
int3
fsubrs
sub
mov
cmc
adc
ljmp
roll
je
jb
xor
mov
and
cmpsb
loop
sub
ljmp
test
push
iret
jnp
jmp
insl
inc
pop
add
mov
add
outsl
mov
insb
add
jl
xor
push
mov
popa
leave
fldenv
jb
fs
sbb
jbe
stos
add
into
pop
mov
repnz
pushf
hlt
sbb
mov
cltd
and
mov
and
and
jb
sbb
add
and
hlt
das
bound
or
dec
out
push
or
xchg
and
xchg
test
lods
sarl
fadds
add
cmp
mov
testl
and
mov
out
xchg
xor
rorl
dec
mov
push
hlt
inc
movsl
jb
or
lods
dec
push
fbstp
jmp
scas
cltd
and
das
mov
mov
mov
sbb
xor
jecxz
rcrl
xchg
std
dec
jecxz
les
push
jne
and
mov
mov
fsubrl
or
add
aam
xchg
pop
pop
adc
lret
dec
jns
ret
ljmp
push
dec
and
add
cmp
int
and
ret
stos
lea
jb
add
pop
call
ret
pop
js
add
cwtl
movl
leave
jae
or
rcrl
stos
stos
pop
in
add
adc
iret
hlt
mov
into
dec
imul
cmp
lods
adc
pop
bts
outsl
faddl
loop
sbb
test
xor
mov
insb
pusha
into
sub
pusha
jae
shll
scas
xor
fadd
shll
cwtl
cltd
add
lcall
mov
pop
adc
in
mov
test
addl
lea
push
or
cmp
pop
ja
dec
sahf
adc
xor
jne
xor
movsb
sub
js
sub
mov
ret
pop
inc
push
mov
aad
mov
lea
dec
xor
push
cmp
xlat
dec
int3
out
jbe
cmp
cmp
aas
xchg
sbb
cmp
push
add
sbb
rclb
das
ljmp
js
out
add
and
push
repnz
add
ljmp
incb
jle
xor
in
adc
mov
jle
test
scas
lods
push
add
js
and
sti
test
adc
adc
pop
xlat
add
lret
out
xchg
sub
or
adc
pop
insl
or
jg
sbbb
mov
cmp
cmp
mov
andnps
int3
fcmovu
idiv
push
cltd
or
xlat
test
xchg
dec
mov
shrb
sbb
dec
mov
js
aaa
sub
test
pop
jge
out
mov
dec
std
std
mov
mov
xchg
shrb
mov
insl
dec
push
mov
test
loop
pop
pop
dec
das
sub
sub
loopne
test
sub
inc
mov
mov
lds
xchg
xor
pop
mov
xchg
jns
push
and
push
sbb
mov
jle
dec
in
stos
cmp
rcll
cmp
sbb
imul
icebp
push
cmpsb
into
mov
dec
test
popa
popl
ljmp
fwait
pusha
mov
xchg
xchg
popa
int3
push
in
stc
xor
popa
or
into
xchg
xor
call
mov
cmpsl
push
pop
push
mov
add
bound
mov
dec
popa
jecxz
mov
cmp
test
out
test
pop
jg
add
lahf
loope
repnz
notl
shll
mov
sbb
mov
std
repz
data16
inc
add
push
je
push
and
movsl
adc
addr16
mov
push
mov
rcll
leave
ret
jle
out
xchg
xor
popa
or
cs
xor
movsl
xchg
hlt
lcall
mov
xor
imul
cmp
jae
orl
xchg
mov
inc
fldl
or
pop
push
mov
fnstsw
xchg
xor
push
into
enter
lods
bound
int3
dec
in
dec
push
hlt
fsubrl
sahf
imul
lock
add
test
sbb
sbb
rcrb
mov
push
mov
xchg
mov
add
test
or
jo
fists
adc
and
sbb
add
mov
data16
xchg
fnstsw
aad
mov
pop
sahf
pop
pop
sbb
loopne
in
hlt
jne
sbb
adc
jo
mov
mov
bnd
lcall
push
clc
int3
or
sub
mov
jp
lds
rcll
push
jp
push
cmp
push
xchg
sahf
sub
in
and
jmp
sti
mov
mov
and
mov
clc
sbb
enter
cmp
cmpsl
jg
push
lock
add
xchg
push
inc
and
sbb
les
movsb
inc
inc
pop
icebp
push
push
push
adc
mov
inc
ficoml
lods
or
mov
lock
pop
mov
mov
pusha
mov
sbb
jo
insb
sub
mov
in
sbb
cmp
mov
sbbl
and
ret
push
jae
int
mov
or
fstps
jmp
clc
mov
loop
jg
mov
jnp
bound
push
adc
xchg
pop
xor
xchg
ja
lds
movsl
test
push
loope
lods
add
or
push
xchg
test
sahf
mov
inc
mov
mov
addl
sbb
pop
outsb
aaa
outsl
int3
dec
and
in
xor
fbstp
mov
sbb
xchg
push
mov
xor
fwait
sarb
push
daa
cmpl
mov
mov
add
lods
addr16
in
sbb
scas
rcrb
xor
jle
cld
jg
push
scas
ss
fadds
xlat
dec
in
lods
cmp
dec
xlat
jns
pop
clc
mov
data16
fmul
mov
mov
jmp
iret
dec
xchg
xchg
cmc
adc
stc
xchg
adc
fildll
lcall
das
ficoml
mov
xchg
dec
out
pavgw
adc
mov
lret
data16
pusha
fisubl
mov
push
xchg
mov
push
push
pop
adc
fmul
or
in
inc
cmc
jo
mov
movl
sbb
sti
test
jmp
jno
xchg
in
std
fldl
loopne
dec
mov
push
ljmp
aam
test
out
mov
xchg
or
js
mov
jle
add
filds
xchg
enter
jmp
sbb
repnz
cld
mov
cmpsb
xlat
les
sub
lret
test
les
ret
jle
aam
and
dec
pop
call
je
push
inc
xor
fucom
sub
dec
inc
jmp
loopne
pop
in
out
push
jmp
jae
cltd
xchg
aaa
or
mov
fdivrl
mov
jnp
mov
mov
scas
cmp
pop
or
subb
dec
dec
pop
lret
jbe
sub
int
ret
dec
icebp
mov
fdivrs
add
push
aam
xor
popf
repnz
sahf
testb
leave
pop
pop
into
pop
aaa
imul
insl
mov
leave
jb
add
jnp
or
scas
inc
mov
out
jmp
mov
mov
jnp
cmpsb
sbb
lods
mov
add
fnstcw
shl
outsl
xor
cli
adc
pop
sbb
xor
pop
fwait
xchg
jl
sub
mov
pop
mov
ljmp
mov
jo
push
stos
fwait
icebp
cmc
punpckhwd
add
sbb
mov
ljmp
lret
jb
ud0
data16
int
lock
stos
or
lret
imul
arpl
dec
ds
add
les
mov
arpl
jnp
sbb
sbb
adc
dec
mov
idivb
in
pop
imul
sbb
mov
in
inc
xor
or
outsb
lret
movsl
loope
pop
dec
mov
sbb
aad
pusha
in
mov
inc
hlt
daa
scas
push
lea
mov
and
out
jbe
sub
adc
in
add
cmp
fs
cwtl
push
pop
xchg
cmpsb
pop
mov
or
rclb
in
fs
fisubs
mov
lcall
sub
popa
ret
dec
fimuls
loop
sub
fistpl
out
mov
icebp
mov
xchg
hlt
cs
sets
repz
fnstenv
sbb
sbb
sarl
in
and
sarb
dec
mov
xchg
enter
adc
or
or
insl
mov
sbb
outsb
or
roll
add
cmp
sub
loope
mov
in
into
and
adc
jmp
in
bswap
in
into
int
push
shrb
add
sbb
adc
sbb
xor
mov
repz
or
push
jg
out
ret
mov
mov
out
mov
push
jmp
adc
aaa
or
icebp
inc
shrl
dec
popf
sahf
xlat
xchg
adc
roll
jb
cltd
mov
sbb
pop
in
sub
out
jge
adc
xchg
in
pop
push
or
sub
dec
decb
mov
xchg
jb
scas
cltd
xor
aas
xchg
dec
loopne
mov
or
dec
in
inc
push
jnp
push
stc
mov
and
cmp
rcll
push
pop
xlat
ret
imul
cmpl
outsl
push
fsubs
sub
push
xor
cld
push
lret
adc
push
imul
push
mov
mov
fisttpll
icebp
or
mov
sbb
adc
dec
xlat
or
into
mov
lret
sub
xchg
test
jno
icebp
and
xchg
pop
sbb
xchg
imul
adc
nop
pop
adc
jne
inc
aad
sar
sarl
pop
out
mov
sub
fdivs
loopne
cmp
push
aad
shl
andl
mov
test
add
popf
mov
jge
addr16
int
add
icebp
sarl
jg
inc
inc
jg
fdivs
or
adc
bound
add
dec
rorl
test
jbe
xor
mov
jmp
fcom
aad
and
mov
dec
test
xorb
adc
aad
fdivl
test
sub
lea
inc
and
mov
js
pop
mov
pop
mov
test
sbbb
and
js
add
dec
ret
fnstenv
je
pop
dec
and
jb
push
pusha
mov
sub
gs
std
or
lea
nop
mov
pop
fidivrl
inc
and
hlt
js
mov
fs
aaa
jb
daa
int
fidivrl
xchg
or
xchg
insl
cmp
inc
xor
and
add
jnp
xchg
jns
cmp
in
push
idiv
dec
mov
lret
movsb
mov
xlat
add
adc
test
es
push
cmp
cmp
pushf
fdivrp
xchg
popf
add
idivb
pop
mov
push
jmp
les
dec
daa
scas
idiv
sub
enter
cmc
sahf
call
daa
out
mov
je
xor
mov
mov
dec
and
or
and
call
movsb
pushf
fs
jecxz
mov
sarl
scas
jge
push
dec
repnz
jmp
ds
pop
pop
push
shl
add
xor
imul
in
or
cmp
push
fldcw
imull
sbb
sub
or
xlat
or
mov
adc
lea
dec
jp
push
outsb
inc
mov
cltd
adc
or
mov
aam
or
jle
idivl
sbb
into
adcb
test
enter
aas
nop
push
inc
jns
stos
rcrl
int3
icebp
aad
int3
xchg
push
adc
outsl
sub
adc
mov
pop
dec
xchg
dec
sbb
inc
xchg
mov
and
jne
dec
sub
imul
mov
add
add
rcrb
pop
push
ja
pushf
dec
xchg
sub
call
push
aaa
xor
inc
mov
js
repz
hlt
push
and
iret
sbb
mov
icebp
dec
or
xchg
push
jmp
hlt
cmp
jecxz
sahf
fidivrs
popf
lret
mov
dec
rcll
dec
jg
popl
clc
out
sub
rolb
jne
stos
sub
pop
or
repz
mov
jno
push
pop
cmp
cmp
fadds
jne
jp
testb
adc
scas
jno
sbb
sbbl
pop
pop
movsb
call
and
pop
leave
popf
jp
and
ffree
ret
jp
pop
fcoml
nop
in
adc
loopne
xchg
call
rcr
iret
jmp
pop
jo
inc
fcompl
fisubl
xchg
mov
in
mov
subl
or
pop
std
jb
push
loope
xchg
jge
inc
mov
sbb
mov
jno
incl
adc
fwait
sbb
push
inc
lods
xor
cmpb
mov
pop
and
movsb
sahf
icebp
xchg
inc
jne
mov
jae
fs
or
imulb
or
sbb
mov
in
test
add
inc
cmp
out
add
cltd
cs
aas
jg
imul
test
xlat
sub
aam
leave
loopne
enter
fidivrs
pop
mov
mov
sti
sbb
fstl
rol
call
shr
dec
lcall
aaa
dec
sub
clc
outsl
dec
out
mov
lret
xlat
jle
xchg
testb
gs
ss
and
inc
repz
add
mov
adc
stos
push
mov
js
xchg
imul
es
dec
data16
scas
cs
pop
xchg
and
and
loop
mov
cli
mov
mov
in
dec
add
divl
push
sub
dec
into
das
lods
push
std
push
xor
cmp
jns
mov
mov
mov
pushf
push
sti
lods
jo
std
cli
test
adc
cmp
rorl
pop
test
les
pop
or
cs
shl
lret
push
sub
icebp
leave
enter
jo
and
dec
pusha
in
push
fs
pusha
in
mov
bnd
add
pop
scas
dec
lds
sbb
xchg
daa
jnp
test
pop
mov
cmp
push
xor
icebp
arpl
adcb
add
adc
mov
mov
jae
outsb
push
les
inc
pushf
shrl
jnp
push
hlt
enter
imul
stos
jb
push
outsl
shrl
jmp
jno
jp
push
test
sti
lcall
xchg
lcall
insb
shlb
inc
xor
adc
sub
mov
imul
movsl
mov
mov
cs
es
fwait
add
sbb
cmpb
rcrb
sbb
int
dec
mov
xor
sti
clc
push
std
xor
into
adc
xorb
cmp
dec
cmp
out
mov
jne
jge
pusha
imul
or
aam
into
cmp
mov
mov
sub
or
cmp
jns
data16
imul
pop
jae
jae
mov
ret
pop
xchg
in
gs
mov
in
xchg
sti
pushl
shrl
ljmp
aad
sbb
imul
add
lretw
lds
add
aam
mov
outsb
fstl
dec
dec
cmp
popa
ds
ja
shl
push
cmpsb
xor
aas
test
mov
lea
and
fimuls
xchg
dec
fcompl
mov
insl
cmp
jg
loope
shl
or
sbb
dec
aam
in
inc
pop
xchg
xchg
pushf
jae
outsb
mov
push
gs
sub
xor
pop
dec
lods
or
sbb
shrb
std
push
cmp
pop
add
pop
mov
pop
cmp
xchg
or
and
add
add
xor
es
xchg
shr
data16
fsubr
sarl
mov
rcr
mull
aas
dec
mov
aas
adc
push
xchg
xor
inc
aam
aas
popf
jb
cmp
inc
fs
jmp
xchg
mov
out
fsubp
add
out
and
pusha
adc
push
lock
push
or
pushf
sbb
jmp
adc
and
xchg
data16
pop
xor
push
push
mov
dec
sub
adc
das
add
push
js
outsl
xchg
daa
mov
lea
jae
cmp
leave
and
inc
jnp
int
cltd
sahf
imul
mov
xorb
and
cmc
mov
in
loope
xor
inc
push
insl
pop
movsb
notl
fs
adc
fbstp
lods
ds
push
mov
sub
movsl
call
imul
pop
mov
xchg
shr
lock
mov
out
add
addr16
lods
sbb
test
out
mov
pop
ja
movsb
addr16
orb
xchg
cmpsl
push
movsl
sbb
dec
nop
xchg
mov
pop
adc
pop
push
cld
mov
stos
pop
xchg
mov
stos
fdecstp
mov
testl
hlt
ror
xor
in
outsl
sbb
into
mov
movsl
mov
out
lret
adc
adc
add
arpl
push
xchg
mov
sbb
push
ret
cmovg
push
mov
mull
cltd
or
pop
push
test
pushf
dec
nop
push
insb
sbb
adc
and
subb
stc
pusha
inc
mov
pop
pop
lds
inc
cmp
dec
das
fst
xorl
or
or
sub
aaa
xor
add
or
push
jmp
jbe
data16
sub
sahf
or
rcl
inc
enter
mov
push
pop
or
ss
and
pop
sti
inc
cltd
scas
imul
fucomi
cltd
lds
data16
cmp
fnstcw
xlat
mov
push
and
pop
xchg
sbbl
in
pop
stos
mov
insb
aas
insb
insl
mov
scas
xchg
mov
daa
cmp
rcrl
pushf
add
cmp
bnd
out
dec
lock
lods
mov
jge
xchg
mov
jno
mov
imul
mov
test
xor
push
aas
mov
mov
loopne
xor
subb
addb
mov
test
mov
jp
add
inc
enter
mov
mov
sbbb
cmp
cmc
mov
nop
and
lahf
pop
jbe
or
mov
dec
stos
push
aas
out
or
cmp
cmp
outsl
repnz
lods
add
xchg
test
or
xchg
xor
inc
sub
repz
mov
pop
and
lcall
test
xchg
jne
pushf
dec
inc
or
stos
mov
cmc
jmp
mov
jle
bnd
xchg
xchg
out
mov
clc
movsl
mov
out
aaa
add
outsb
xchg
aad
pop
out
cmp
shll
out
sbb
lock
rcll
xchg
in
ret
jle
mov
andl
sbb
xchg
lods
daa
inc
xchg
bound
and
mov
push
pop
fstpl
dec
imul
pop
xor
sub
ss
fstps
shr
dec
rcr
mov
and
stos
xchg
xor
mov
aas
out
lods
mov
lock
xor
lret
xchg
sbb
xchg
xchg
popa
cs
dec
mov
xchg
sbb
aas
or
pop
mov
mov
int
in
std
mov
xchg
sbb
sbb
fldl
clc
mov
ss
inc
mov
lock
mov
test
push
lahf
and
jp
xor
ja
push
in
imul
jnp
dec
push
mov
fdivl
and
and
jne
cmp
std
shll
sbb
sbb
pop
daa
push
dec
aas
fmul
dec
inc
jecxz
adc
and
mov
lods
imul
adc
push
push
cmc
insb
dec
or
aas
xchg
jb
addr16
push
mov
je
insb
hlt
mov
push
inc
outsl
aam
iret
adc
lcall
mov
das
shll
jmp
fisttpl
pop
inc
mov
cmp
pushl
adc
call
push
mov
xchg
sbb
inc
in
insl
cmp
push
jbe
jge
and
enter
iret
mov
icebp
adc
push
jmp
fwait
dec
lods
mov
mov
mov
push
pop
sub
dec
push
and
and
jbe
popf
mov
ss
inc
iret
xchg
push
shl
dec
jmp
pop
orb
or
ret
push
lds
fs
les
fidivrs
dec
and
test
jbe
mov
pop
out
mov
push
xor
push
cltd
icebp
xchg
jl
in
add
mov
xchg
pop
add
cmp
push
bound
ror
imul
lret
cmc
sbb
out
and
dec
mov
push
std
std
sbb
inc
pop
push
add
into
mov
and
pop
push
jne
out
jb
rclb
sub
mov
repz
push
jb
data16
push
xor
subl
xor
and
jae
cmp
add
inc
imul
mov
and
mov
xchg
sub
pop
adc
fsubl
or
sarl
inc
mov
pop
cmp
cmpsl
popa
jo
push
pop
add
pop
pmaxub
add
and
xchg
aam
mov
push
xor
daa
pop
add
aaa
adc
shll
lret
inc
lret
js
jecxz
ficoms
iret
fld
mov
roll
movsl
and
ja
sahf
mov
pop
aad
sbb
out
pop
sub
dec
sub
cmp
cmpsl
popa
sbb
insb
clc
push
gs
mov
pop
xchg
stc
dec
lcall
inc
test
sub
xchg
jle
add
jns
pop
xchg
xchg
xor
int
out
adc
in
jmp
ljmp
loopne
mov
cmp
jne
mov
lahf
data16
jne
out
dec
test
cltd
stos
fbld
mov
popa
mov
push
in
cld
icebp
ss
decl
or
xor
dec
dec
in
jle
pop
or
jp
clts
push
mov
mov
dec
xchg
and
push
mov
mov
sub
mov
inc
adcb
pop
enter
xor
mov
jns
lods
xor
mov
add
in
pop
xchg
jl
add
push
sub
push
and
nop
mov
and
push
adc
add
mov
xchg
cld
or
mov
xchg
inc
pop
das
mov
jg
adc
pop
xor
push
fwait
sub
jle
adc
xor
xchg
push
cwtl
xor
outsl
dec
outsb
lods
mov
outsb
add
rcll
xor
lods
ret
lods
cmpsb
and
xchg
loopne
mov
nop
dec
imul
aas
pop
outsl
outsl
xlat
mov
ficoms
fs
out
shll
lcall
insl
or
mov
or
xlat
inc
orb
jl
fsts
gs
into
xlat
cs
arpl
mov
arpl
pusha
pop
push
dec
pop
sub
cwtl
mov
add
lods
out
dec
rcr
int
call
add
xchg
jb
in
sub
sti
push
or
push
jecxz
xlat
adc
xchg
sub
xchg
test
fcoms
scas
dec
sub
rclb
lea
sbb
imul
xchg
dec
lds
and
inc
cmpsl
inc
outsb
ss
cmp
or
test
fstl
and
xor
jecxz
mov
mov
or
inc
push
imul
inc
js
mov
mov
lcall
leave
inc
push
jno
pusha
imul
jae
cld
int
lret
int
or
shrl
popf
dec
jp
dec
nop
jns
gs
leave
ja
arpl
jo
stc
mov
or
mov
lds
fs
lahf
lods
lea
jl
xchg
push
stc
push
adc
inc
incb
pop
mov
push
push
icebp
add
mov
cmp
pop
sub
sbb
xor
clc
fldcw
scas
mov
imul
jecxz
adc
ret
sbb
ds
sar
and
pop
sbb
fbstp
adc
pop
jbe
test
push
xchg
cmpsl
mov
pop
add
sub
sbb
into
cld
pop
adc
adc
dec
mov
xchg
cmpb
inc
testb
cld
out
pop
cmp
imul
stos
mov
xor
sbb
mov
dec
stos
cmpsb
xchg
aaa
fwait
xor
imul
in
xchg
xchg
mov
mov
mov
mov
in
cmp
popa
test
xchg
mov
ret
adc
cmp
popf
jg
mov
and
inc
popa
sub
sub
dec
sbb
jl
add
call
or
scas
mov
xchg
adc
test
insl
insb
lret
mov
jo
ret
imul
inc
lds
mov
ficoms
add
cwtl
jb
aam
mov
test
xchg
dec
push
test
mov
mov
into
sbb
daa
or
rcr
cld
es
icebp
imul
sbb
stos
fbld
inc
cs
dec
mov
and
jnp
cli
mov
ret
leave
xchg
inc
loope
orb
fstpt
or
xorb
ljmp
inc
mov
or
btr
dec
add
mov
pop
inc
out
lea
dec
sbb
xor
inc
and
jp
push
xchg
enter
fwait
daa
out
mov
imul
ljmp
add
inc
sbb
jae
call
xchg
xchg
xchg
imul
daa
push
clc
sbb
mov
xor
sbb
cmp
divl
or
movsb
fisubrs
popf
subb
das
lods
les
mov
out
pop
fcomp
mov
sbb
pop
ret
loopne
rcll
mov
or
mul
push
pop
test
adcb
pushl
inc
adc
nop
shl
cmpsl
adc
lock
cmp
add
lahf
fnstenv
push
inc
sbb
cltd
jge
insl
mov
ss
scas
push
cmp
mov
cmpsb
cltd
into
cmp
ds
jp
jg
ljmp
ret
cwtl
pop
and
test
pop
xchg
xor
insl
loop
outsl
sub
clc
gs
lods
inc
es
cmp
ja
bound
inc
lock
xchg
mov
push
cltd
pop
test
fistps
mov
inc
popa
cmp
and
addr16
pusha
sub
lcall
adc
mov
sbb
mov
sbb
aam
test
mov
pop
outsb
ja
dec
lret
pop
bound
cli
and
ret
inc
mov
faddl
jno
pop
ja
push
push
jo
cmpb
mov
xchg
add
das
test
xchg
add
cmpsb
cwtl
adc
jne
aaa
dec
sub
repnz
push
mov
arpl
xchg
dec
adc
push
mov
cmp
repz
xor
in
xor
jl
outsb
les
rclb
mov
les
cmp
lret
adc
sbb
je
cmpsb
xchg
jb
mov
xchg
imul
mov
ffree
xor
subb
out
dec
cmc
add
aad
jecxz
and
bound
in
xchg
rcrb
adc
ret
inc
push
adc
pop
xorl
in
sahf
aaa
test
xchg
xchg
les
repnz
mov
pushf
loopne
mov
pop
jge
mov
mov
iret
ret
out
leave
push
xchg
fs
jns
sahf
out
lock
hlt
gs
in
stos
sbb
xchg
inc
js
mov
push
dec
adc
das
push
and
cmp
jae
xor
daa
mov
fisttpl
rclb
or
rcrl
lahf
mov
push
fbld
xchg
das
cmc
and
push
add
nop
push
cmpsb
push
push
adc
rclb
test
aam
xchg
cmpsl
rcl
add
loopne
or
lods
add
loope
test
jbe
lahf
imul
call
cmc
notl
dec
jne
pop
lock
fsubs
push
adc
outsl
psubq
imul
push
xor
cmp
ja
or
mov
in
xor
sub
adc
push
movsl
notl
or
jl
test
xchg
neg
clc
mov
jl
inc
cwtl
dec
loope
push
adc
cmpsb
and
jno
movsb
or
out
je
xor
mov
sbbl
mov
dec
stos
popf
dec
js
mov
xor
in
aas
adc
push
cmp
faddl
cld
xchg
movsb
xchg
jno
dec
sbb
cli
addr16
cmp
inc
cs
lea
cltd
pop
inc
icebp
mov
stos
cmp
nop
lods
push
jmp
ret
fst
pusha
fwait
mov
sub
daa
push
push
pop
ret
jle
negb
cltd
repz
scas
pop
std
or
push
lahf
xchg
jae
and
and
ret
push
cmpb
mov
gs
sahf
and
jl
int3
xor
jl
mov
fsubs
gs
mov
cmp
pop
dec
nop
or
xchg
jno
lods
cmpsl
lock
adc
icebp
fmul
pushf
mov
inc
jo
lods
xor
mov
outsb
add
xchg
pop
mov
shll
iret
cmp
push
shlb
adc
rcl
shrb
decb
mov
cmp
sbb
sahf
jle
aad
adc
xor
cmpsl
imul
bound
icebp
loope
cltd
mov
xor
sub
adc
mov
xchg
ret
xlat
pop
jnp
push
sti
jb
pop
jno
add
jmp
mov
daa
fiadds
jge
rol
in
sarl
inc
jbe
mov
int
push
icebp
push
int3
scas
dec
pop
dec
xor
movb
js
fidivrs
fwait
std
cwtl
movsl
adc
jb
add
jl
sub
je
and
push
jno
pop
test
mov
mov
ss
das
mov
arpl
fcomip
push
outsb
movsl
subb
sahf
fistps
sahf
inc
js
mov
imul
lods
inc
scas
add
cmp
fidivs
xor
sbb
pop
ljmp
mov
push
push
sub
mov
mov
aad
fidivl
out
dec
outsb
mov
and
rcr
lock
xchg
pop
mov
adc
mov
cmp
ret
dec
push
idivb
xor
push
or
mov
pop
cwtl
push
xchg
adc
movsb
dec
daa
data16
movsb
pop
cld
dec
push
rclb
jnp
jp
inc
sbb
or
jnp
jmp
or
shlb
mov
cs
adc
dec
addr16
sbb
adc
daa
xchg
subl
pop
mov
dec
sub
shr
jle,pn
and
adc
repnz
cs
xchg
sbb
push
mov
inc
cs
lods
jge
adc
in
or
push
test
scas
push
pop
pop
subl
pop
mov
fldenv
mov
pop
jns
pop
stos
inc
add
pop
in
repnz
addr16
insb
xchg
xchg
scas
cmpsb
pop
in
push
popa
cld
int
push
dec
into
sub
xlat
inc
jge
sbbb
insl
or
and
mov
fs
hlt
and
pop
cwtl
jecxz
adc
mov
out
adc
mov
jne
mov
push
lahf
lret
push
or
bound
fstpt
addr16
add
and
push
popa
pop
or
mov
xchg
or
hlt
imul
mov
andl
add
ret
repz
insb
add
gs
test
lret
cmp
mov
and
xchg
pop
je
push
negl
ret
cmpb
add
cmc
sahf
xor
xor
xchg
push
inc
lahf
mov
mov
cmp
or
test
xor
stos
or
push
arpl
adc
mov
fstpt
sub
cmp
iret
cmp
stc
sahf
pop
sahf
out
and
in
icebp
lods
dec
mov
jne
movsl
mov
adc
lds
fucomp
xchg
insl
stc
scas
pop
das
xchg
sub
and
jg
sbb
aam
add
clc
sbb
xchg
out
mov
mov
imul
lea
call
scas
xchg
pop
int
xchg
pushf
rolb
pop
ret
fisttps
ret
imul
js
and
sbb
mov
jecxz
sub
popf
pop
insb
mov
mov
cmp
jns
dec
sbb
and
daa
leave
sbb
fwait
mov
je
cmp
cmp
push
inc
lret
mov
cmp
inc
adc
add
xlat
fmul
mov
dec
xor
add
in
sub
in
adc
lret
mov
inc
pop
hlt
js
mov
push
xor
rcl
cli
nop
push
in
lcall
cmpsb
pop
push
daa
rorl
push
push
into
jecxz
pop
xchg
lret
pop
fwait
mov
out
push
lret
ds
aaa
repnz
inc
ljmp
popa
cld
jecxz
dec
and
call
sarl
dec
idivb
ss
sbb
das
movsl
ret
in
pusha
mov
or
in
stos
dec
cld
in
sub
dec
aaa
lds
cld
imul
pop
mov
xor
std
icebp
js
adc
in
xlat
int
test
pop
sbb
or
push
push
mov
in
loop
call
mov
push
adcl
cmpsb
xchg
cli
loop
jle
adc
pusha
xchg
add
pushf
cmp
in
in
scas
xchg
cmc
push
mov
push
mov
cld
int
bound
sub
adc
movl
ja
lods
in
decb
sbb
fldcw
inc
ret
lret
mov
rorl
roll
dec
adc
xchg
mov
ljmp
cmpl
jbe
and
xor
cmp
addr16
out
ss
push
xor
mov
pop
add
icebp
dec
subl
std
lcall
push
push
sbb
pop
nop
pop
jmp
xor
mov
inc
jl
mov
repnz
out
lds
pop
scas
cmp
shll
fcompl
xchg
fldpi
mov
mov
push
or
loop
cltd
and
flds
dec
stc
add
rclb
mov
inc
pop
sub
mov
sbb
xchg
sti
jne
adc
push
mov
test
std
mov
imull
xor
in
fwait
test
dec
mov
mov
cmp
mov
cmc
adc
cmc
mov
and
dec
pop
insl
cli
cmc
jae
pushf
push
or
gs
xor
inc
mov
xchg
and
gs
add
push
enter
in
repnz
aaa
rcr
das
sbb
sbb
lock
pushf
lods
mov
push
lret
int
pop
cmp
movsl
add
push
fs
sub
ja
fwait
add
sub
jge
mov
into
and
in
leave
or
xchg
dec
mov
into
add
mov
mov
xchg
rolb
je
jne
mov
popl
mov
ret
push
add
pop
lretw
jge
sbb
adc
imul
xchg
sub
aam
xor
pusha
mov
shlb
cmp
cmpb
shlb
push
dec
mov
popf
sbb
jo
pusha
or
or
cmp
and
outsb
nop
mov
test
mov
ds
in
mov
mov
and
out
or
ret
out
lds
pop
cld
sbb
mov
out
loope
sbb
push
sbb
jnp
or
je
test
outsb
repnz
sub
adc
les
sbb
std
jmp
test
push
sub
mov
arpl
and
sub
and
xor
fcoms
add
jo
add
insl
cmp
outsl
out
rol
gs
sub
je
cmpb
cmp
mov
inc
jno
test
lahf
mov
mov
jb
adc
inc
cld
jb
mov
test
aas
test
adc
sub
mov
xor
pusha
insb
int
lds
push
or
xor
mov
xor
mov
es
es
cmpsb
cld
sbb
gs
out
pop
outsb
sbb
jecxz
roll
xorb
test
test
je
sbb
mov
xchg
cld
push
mov
rorb
inc
daa
xor
dec
mov
stc
adc
pop
in
cmp
jo
lds
shl
sti
cmp
mov
shl
bnd
sti
out
adc
fldcw
idivb
push
jne
andl
sbb
sub
andb
push
out
popf
or
lahf
jb
int3
add
inc
fstl
push
mov
mov
daa
pop
or
push
mov
and
cmp
scas
nop
ret
add
dec
cli
jno
cmp
icebp
jle
mov
dec
adc
outsl
inc
je
stos
insl
mov
ljmp
stos
jae
pusha
test
test
sub
dec
leave
outsb
xchg
and
mulb
lods
add
cmpl
mov
inc
push
in
cltd
test
fcomps
sbb
test
sub
add
mov
xor
std
lahf
push
push
in
sbb
sbb
sarb
and
into
cmp
stos
icebp
push
popf
negb
xchg
push
testl
mov
je
test
xor
inc
mov
sbb
or
stos
sub
jnp
jb
fisubrs
je
xchg
jge
sub
into
xchg
clc
jg
xorb
pop
out
inc
fisubrs
sub
sbbb
cmp
out
dec
or
adc
fcoml
dec
mov
dec
in
or
ficomps
mov
cmp
mov
mov
mov
rorb
mov
cmp
dec
adcb
xchg
scas
lods
sahf
lock
cmp
adc
mov
xor
push
fmuls
mov
pusha
cmp
inc
leave
hlt
dec
dec
xor
push
xlat
inc
xchg
push
incl
fsubp
hlt
sar
pop
mov
scas
lds
into
or
in
pop
cmp
dec
cmp
mov
jecxz
loope
mov
les
sbb
jno
fadds
mov
imul
fisttpll
xor
mov
ret
pop
sbb
add
xchg
xchg
lahf
int3
fsubrl
aaa
push
decb
pusha
in
scas
xor
xor
loopne
dec
add
xor
lret
cmp
fwait
aam
cmp
mov
cmp
push
cmpsb
or
scas
mov
pop
jae
punpcklbw
mov
in
bound
lret
repz
cmp
inc
xor
mov
or
fimull
lahf
in
addr16
ret
adc
sbb
pop
sub
idivl
popa
sub
push
mov
pop
dec
pop
adc
xor
das
xchg
jbe
enter
fisttpll
std
xchg
negb
gs
sub
fimuls
repz
popa
stc
xor
pop
xor
mov
ss
push
jle
jmp
clc
mov
push
insb
push
outsl
outsb
test
inc
cmp
pop
repz
cli
cs
call
stc
push
mov
sbb
mov
test
std
dec
popa
lret
pop
adc
add
arpl
imul
cmp
gs
imull
test
lea
push
xor
jp
lods
scas
pop
mov
pop
fnstcw
cmpsl
push
dec
stos
jno
into
mov
out
push
inc
xor
ret
mov
fcmovne
dec
mov
add
pop
xchg
movl
pop
idivb
add
nop
push
cltd
insl
jo
jle
push
std
lock
roll
mov
mov
push
mov
stos
popf
mov
xor
add
sbb
int
adc
mov
add
mov
fwait
or
jnp
mov
test
mov
xchg
nop
sbb
iret
bnd
push
addl
mov
pusha
cmpsl
xchg
cltd
jl
sub
aad
cld
mov
enter
scas
xor
mov
xchg
mov
cmp
dec
mov
pop
rorb
cli
sub
es
sub
out
jno
repnz
pop
sbb
sbb
popf
out
sub
call
mov
jns
data16
shrb
aad
mov
mov
dec
imull
sbb
jns
in
mov
or
icebp
into
sbb
mov
cmpsb
cwtl
add
push
test
mov
sub
xor
cmp
sub
ljmp
enter
jns
scas
xor
fwait
cltd
ja
mov
ja
pop
mov
test
sub
dec
pop
popf
outsb
dec
int3
incl
pop
mov
lret
pop
sub
data16
in
fcoms
dec
test
mov
adc
fmul
mov
xor
outsl
sub
daa
sahf
pop
inc
rol
add
outsb
js
mov
repz
addl
scas
clc
in
mov
std
xchg
mov
inc
pop
lcall
xchg
xor
push
cld
fidivrs
and
enter
or
mov
mov
inc
dec
stos
daa
inc
cwtl
add
sub
repnz
iret
into
dec
rolb
hlt
cmp
jg
rolb
mov
rorl
cltd
je
sbb
sub
fwait
inc
sub
xor
dec
hlt
mov
push
pusha
push
add
add
jbe
imul
adcb
fstpl
pop
and
roll
sub
pop
repz
das
test
sbb
aaa
mov
mov
insl
mov
popf
es
dec
call
mov
outsl
add
push
jg
xchg
xor
test
cmp
add
push
enter
xor
xchg
pusha
pop
clc
pop
daa
sti
nop
push
push
cltd
mov
loop
adc
push
inc
mov
sahf
jne
and
and
and
scas
stc
mov
shufps
fstl
dec
sub
dec
imul
into
test
jne
mov
icebp
jne
js
insl
mov
popa
adc
jns
shrl
test
jbe
xchg
jg
jne
mov
movl
ds
in
les
fdiv
sahf
pop
adc
inc
add
mov
ret
adc
inc
dec
xchg
sbb
fwait
js
movsb
jno
inc
out
mov
sub
mov
sbb
out
cmp
jecxz
push
mov
adc
movntq
nop
mov
arpl
pop
ret
int
out
mov
aas
into
jb
push
pusha
int
mov
jne
sahf
iret
mov
xor
jp
xor
jl
sarb
sub
jbe
data16
and
or
imul
and
outsl
pop
icebp
gs
push
xchg
xor
sbb
add
movsb
lock
or
adc
push
loope
sub
and
fwait
jmp
leave
dec
loop
sar
ret
push
lds
or
fidivrs
sahf
mov
paddd
push
dec
inc
jnp
test
cmpsl
ret
push
fstpl
cmpsl
cmpsb
mov
inc
inc
pop
jns
andb
sahf
ret
rorb
inc
mov
xchg
outsb
push
js
ret
std
out
fisubrl
cmpsb
push
pushf
jp
cld
sub
push
mov
jg
push
jecxz
xchg
fimuls
lret
cmp
sbbl
cmp
int3
mov
sbb
and
in
dec
push
xchg
adc
test
loopne
jnp
pop
mov
inc
cmp
mov
mov
sti
mov
test
jg
mov
das
lds
dec
cmp
in
inc
in
lea
sub
fimull
sub
add
stos
repz
pushf
pop
or
mov
sbb
js
sti
cmp
sbb
sbb
inc
dec
stos
pop
dec
mov
xchg
add
in
mov
lds
test
sub
imulb
cmpsb
push
xor
jbe
xchg
or
xchg
sub
and
cmpsb
sbb
cld
adc
sbb
cmp
roll
imull
or
lcall
lahf
les
aaa
cmc
and
cmpsl
mov
sub
inc
push
jno
mov
pop
rorl
push
repnz
imul
dec
or
aam
or
les
cmpsl
mov
loop
arpl
stos
sarb
scas
xchg
pop
jg
call
mov
add
xor
pop
popf
test
out
sbb
pop
sbb
pusha
xchg
mov
push
jno
loop
and
pop
aas
in
cmp
lcall
dec
mov
rclb
jno
in
mov
add
xchg
mov
adc
mov
push
pop
mov
push
int3
dec
and
push
nop
xchg
or
jl
into
lcall
xor
ljmp
pop
jmp
mov
or
mov
cmp
mov
mov
mov
out
cmc
sahf
add
dec
int3
add
cmpsb
or
filds
mov
cmpsb
test
add
dec
outsl
mov
loopne
adc
aaa
cld
xchg
iret
cli
dec
mov
push
cmp
and
xchg
cld
cli
ds
jle
test
leave
and
dec
int
push
push
sub
hlt
fbld
xorl
enter
sbb
cmp
add
jge
loopne
dec
lret
js
repnz
dec
sub
cmp
xchg
neg
into
mov
int
or
addb
xor
imul
imul
mov
jl
mov
std
das
push
and
sbb
sbb
stos
dec
mull
adc
pusha
or
mov
pop
and
inc
mov
cmc
fldenv
test
pop
test
inc
dec
clc
mov
jl
fsubs
lds
xchg
icebp
or
mov
hlt
push
mov
push
dec
daa
sbb
inc
rol
sarl
dec
adc
push
aad
ja
pop
or
insb
stos
mov
fnstsw
mov
jb
add
rcrb
arpl
mov
hlt
mov
push
pushf
inc
and
add
mov
and
pop
lock
inc
clc
shll
shll
push
cli
cmp
dec
pop
jp
dec
test
js
xchg
pop
xchg
je
mov
fwait
out
leave
sahf
mov
jle
add
test
mov
das
rcrb
ret
mov
push
std
xor
sub
xor
mull
sbb
adc
lods
inc
sub
dec
popf
xchg
pop
mov
jb
or
pop
push
sbb
fisubl
mov
pop
pop
dec
mov
in
insb
movsl
or
sbb
mov
mov
xor
mov
pop
mov
in
xchg
xchg
push
sbb
push
and
iret
jg
shll
xchg
in
dec
stc
inc
inc
mov
lea
xor
mov
iret
lock
js
mov
jmp
add
rcrb
mov
fucomp
ja
sbb
add
sbb
and
cmp
in
push
scas
mov
iret
daa
sti
mov
daa
xor
into
dec
push
xor
mov
les
cltd
push
pushf
and
mov
call
shlb
popa
lds
pop
ror
mov
shl
cli
sbb
jg
ds
cmpsl
jbe
jg
cld
mov
ficompl
inc
adc
adc
test
cmpsl
mov
in
test
outsb
cltd
xlat
cmp
jnp
lods
sbb
xchg
sub
fs
mov
pop
jl
cmp
xor
dec
adc
cmc
shl
mov
or
test
adc
mov
push
inc
adc
jo
scas
int3
push
rclb
push
pop
lods
in
loop
adc
sub
ja
add
lret
mov
or
cmp
push
aas
mov
pusha
icebp
mov
and
adc
xchg
push
pminsw
add
sbb
xchg
add
xor
xchg
test
xor
xor
stos
xchg
xor
add
mov
xchg
add
mov
pop
xor
jp
lahf
repnz
daa
pop
mov
mov
inc
ficoml
out
adc
into
mov
cmp
in
push
movsb
cmpsb
data16
pop
mov
popf
psubd
shr
add
pop
fsubl
lock
and
mov
outsl
fwait
adc
dec
push
lods
push
aad
inc
add
mov
es
js
jge
inc
push
sub
push
repz
jle
xchg
lea
mov
jnp
lods
pop
leave
stos
mov
xchg
push
and
inc
fwait
shll
insb
dec
jle
orb
lret
pop
sti
push
jle
je
shl
sti
push
and
sbb
lds
xchg
lods
dec
int3
call
in
icebp
add
pop
fs
call
ja
xorb
xor
sahf
mov
mov
inc
xchg
mov
lcall
jecxz
sub
jne
jg
adc
mov
sub
test
std
imul
cmp
fwait
adc
leave
popl
jae
inc
insl
mov
aad
add
fstpl
ficoms
loope
orl
inc
imulb
dec
mov
push
sub
dec
mov
mov
outsl
cmp
and
jle
mov
incl
dec
roll
clc
cli
pop
or
mov
shrb
jno
push
xor
mov
incl
add
xor
in
add
pusha
test
mov
mov
xchg
dec
xchg
shr
or
cmp
std
mov
ss
lds
mov
fwait
dec
pop
push
xchg
push
add
jne
das
pop
cmc
out
adc
adc
add
repz
sub
pop
or
xchg
inc
inc
pop
cmp
loop
jbe
mov
mull
push
mov
aad
or
inc
push
je
testl
push
lods
stos
cld
and
pushf
push
and
mov
sub
push
js
dec
ds
cltd
add
and
fs
stc
dec
jb
loopne
ljmp
mov
dec
jo
insl
andl
mov
push
add
pop
fsubl
es
xchg
mov
lock
sub
add
push
out
js
mov
scas
add
js
in
out
jae
add
jg,pn
pop
jmp
iret
jnp
adc
nop
fsts
xchg
es
pop
or
jns
push
insb
icebp
lods
cmpsl
mov
mov
pop
cmp
ljmp
js
xchg
add
sbb
clc
or
push
ror
inc
shrb
daa
sahf
inc
pop
and
test
or
imul
mov
in
into
sahf
jl
cmp
cmp
mov
imulb
cmp
dec
data16
cmovo
dec
je
pop
leave
xor
lcall
jnp
enter
pop
mov
fstpl
push
bound
push
repnz
xor
cs
fisubs
mov
cmp
lret
mov
aad
and
mov
push
xor
out
jg
arpl
outsl
insb
push
add
dec
and
fdivrs
mov
sti
aaa
nop
push
out
mov
mov
in
lahf
jl
xchg
mov
xor
sub
inc
aas
addr16
push
mov
or
in
and
sbb
jp
sbb
loopne
cmpsb
push
adc
adc
into
inc
inc
or
mov
rolb
pop
sarb
clc
push
dec
cmpsl
cld
xchg
sbb
rclb
rcrl
call
das
inc
mov
sub
push
ja
cltd
daa
xor
mov
sbb
mov
add
dec
xchg
ret
mov
xor
and
sub
fs
cmp
rorl
add
out
mov
rol
cmp
popa
mov
outsb
movsl
das
nop
push
mov
lock
mov
adc
push
shll
mov
fists
dec
out
cmp
and
jp
movsl
ja
adc
dec
mov
mov
mov
jmpw
sub
cmp
aad
rolb
sub
mov
dec
test
mov
mulb
das
mov
inc
jns
mov
xchg
xchg
rcl
out
and
repnz
mov
nop
out
inc
in
loopne
faddl
pop
mov
out
sub
pop
cli
jmp
sbb
cmp
clc
push
popf
sbb
inc
or
xchg
sbbb
inc
scas
lret
sub
sub
and
lret
push
and
inc
inc
imul
loopne
in
sbb
mov
xchg
mov
mov
sbb
sub
add
cli
and
push
and
mov
push
cmc
enter
aas
mov
ret
sbb
jb
stos
sbb
test
arpl
loop
xor
mov
xchg
cmp
pop
mov
pop
addr16
test
cmp
cmp
pop
xchg
cmpsb
enter
jb
mov
push
nop
pop
iret
jb
gs
xchg
iret
mov
pop
fdivrl
xlat
aad
xchg
xor
inc
jmp
aas
inc
sbb
cmp
mov
inc
cmc
jne
and
xchg
jle
cmp
adc
es
cmp
jne
int3
shll
stc
cmp
add
cmp
in
arpl
ret
les
add
jnp
jecxz
rcl
ret
out
xor
incl
sub
cmpsl
popa
xchg
cld
xchg
ljmp
jns
mulb
dec
jle
sub
dec
pop
and
faddl
inc
push
out
sbb
jnp
repnz
fldl
pushf
xchg
mov
arpl
scas
pop
testb
and
js
inc
mov
push
lret
add
mov
sbb
shl
and
loopne
in
mov
push
popf
cmp
mov
fistl
imul
jle,pn
aam
ret
test
ljmp
jae
loope
clc
push
jno
sbb
push
adc
sub
aam
ds
add
dec
add
mov
cmp
ja
push
xor
jae
dec
ret
dec
std
cli
push
cmp
mov
and
fisttpl
lods
lods
fdivrs
insl
fcoms
xchg
pop
fiaddl
sbb
subb
mov
sahf
lret
data16
ficoms
xchg
or
xchg
rcrb
fadds
ss
and
jnp
mov
fiaddl
faddp
cs
jno
xchg
sti
lahf
dec
xchg
mov
cmpsb
aam
dec
jge
pop
xor
sub
subb
popf
sbb
rorb
jmp
mov
or
sbb
mov
or
ds
adc
es
lcall
cli
dec
fildll
rcrl
jo
xchg
cmpsl
push
and
repz
pop
ret
xor
cwtl
xrelease
or
mov
gs
cmp
xor
or
enter
mov
ljmp
lds
loope
mov
sub
add
aas
dec
inc
out
xchg
xchg
mov
in
in
pminsw
push
mov
loopne
addb
sbb
pop
test
es
adc
mov
in
mov
sub
push
adc
jae
push
adc
mov
out
add
pop
repz
bnd
and
xor
test
loope
in
sub
std
jl
test
inc
mov
xchg
inc
mov
testl
push
pop
adc
jl
dec
daa
sub
aas
dec
fsubl
lret
jo
push
scas
stos
jb
sar
icebp
idivl
cmp
repnz
aaa
arpl
add
mov
and
leave
addb
imul
pop
push
jp
outsb
std
aam
add
add
and
sbb
add
add
dec
push
cmpsl
xchg
test
and
jae
rclb
jb
fsubs
sbb
and
xchg
mov
xchg
cmp
or
cmp
hlt
aam
addr16
sub
aam
lods
jmp
add
jno
in
mov
fwait
sbb
enter
mov
xorl
push
aas
iret
push
cs
fnstenv
into
aad
cs
scas
mov
rolb
and
ret
xchg
rorb
mov
sub
fstp
cmp
rol
lahf
add
mov
cmp
add
jl
xor
fsubrl
pushf
pop
sbb
and
in
pusha
sbb
push
inc
addr16
cmp
xor
mov
add
aaa
ljmp
inc
fisubs
mov
es
inc
mov
pop
push
clc
test
movsl
js,pn
mov
sub
mov
data16
imul
cmp
ja
mov
jmp
cwtl
lds
cld
add
pop
lret
cwtl
and
ja
loop
fcoms
mov
cmp
incb
cmp
adc
sbb
adc
sahf
cmp
into
pop
cmp
and
mov
rol
dec
push
add
pushl
jmp
in
sub
push
outsl
xor
sbb
jbe
push
xor
lret
es
icebp
mov
jg
insl
mov
push
push
in
mov
mov
jle
test
push
sbb
adc
bound
cmp
sbb
or
ja
outsb
adc
dec
mov
fldenv
pushf
xlat
test
xor
fdivl
push
adcb
fwait
inc
mov
mov
xchg
outsb
push
mov
mov
mov
mov
outsl
lret
outsb
xchg
adc
push
mov
out
mov
push
mov
sub
jno
mov
jl
jbe
add
out
rorl
adc
ret
addr16
mov
insb
jb
add
stos
xor
jp
mov
lret
adc
sub
fsubp
sub
mov
inc
add
gs
adc
cwtl
pop
and
out
aas
cmp
cli
iret
mov
jae
adc
inc
adc
mov
pop
dec
jge
aam
cli
das
pop
jp
jmp
imul
jbe
mov
cmp
mov
xor
adc
les
loope
loopne
test
sub
outsb
sbb
jmp
je
mov
js
lods
mov
out
jl
test
push
and
inc
mov
out
enter
mov
pop
xchg
or
inc
mov
adc
not
into
adc
sub
mov
mov
fadds
xchg
sub
inc
pop
out
lds
rep
dec
in
xor
lret
subl
ds
stc
cmp
push
sbb
nop
cltd
inc
fcmovnu
and
xchg
mov
int3
cmp
enter
insl
xchg
lahf
int
cmp
add
mov
loopne
fisubs
ss
mov
sahf
sub
jle
cmp
mov
pop
loope
pop
outsb
lret
add
mov
mov
daa
adc
aad
fcomps
inc
cs
sbb
dec
inc
pop
pop
imul
imul
sub
xchg
inc
in
add
in
lret
popf
xor
out
arpl
daa
jg
xchg
adc
and
imul
mov
inc
loopne,pn
in
into
xchg
xor
lods
aas
fsubrl
and
pop
ss
jl
push
push
imul
jnp
xor
xor
xor
test
push
loopne
lods
fisttpll
xlat
jge
adc
dec
mov
add
mov
test
jne
stos
fwait
and
pop
pop
in
cs
and
xlat
mov
pop
cmc
cs
xor
sbb
xchg
cmp
jo
daa
loopne
aas
in
pop
mov
inc
ljmp
cmp
fimuls
cmp
dec
jbe
jle
adc
les
gs
sahf
jns
jbe
mov
push
mov
cmpps
add
scas
pusha
ret
ja
mov
and
sub
jmp
out
std
push
in
pop
rep
pop
adc
dec
pop
dec
dec
outsb
inc
sbb
mov
adc
lcall
jecxz
xchg
or
pop
jne
outsl
shl
ret
loope
jecxz
jmp
push
in
jb
pcmpgtw
push
jb
adcb
or
cmp
sbb
lea
icebp
scas
cmpsl
sbb
pop
lahf
test
pop
jle
jecxz
testb
fidivl
inc
cli
in
rorl
jecxz
push
pop
or
dec
call
jge
add
cmc
cmp
dec
jbe
jo
cwtl
outsb
mov
dec
das
sbb
add
das
repz
mov
push
in
js
mov
push
jns
jns
sbb
push
fwait
push
imul
dec
and
xor
call
test
inc
inc
outsl
sub
mov
cmp
xor
jl
dec
mov
pop
clc
subl
mov
cmc
mov
outsl
pop
les
adc
xor
adc
xchg
and
add
adc
fs
sub
add
and
in
push
pop
xlat
add
into
sbb
lods
cld
aam
scas
and
lret
push
loope
into
test
ret
lea
roll
aaa
test
mov
jge
pop
jl
dec
ja
dec
stc
inc
pop
add
dec
mov
push
clc
cmpsl
bound
cmpsb
shrl
pop
in
mov
nop
sub
cmp
sbb
jae
insl
xchg
push
xchg
lds
orl
test
je
inc
sti
imul
push
insl
adc
stc
aas
xabort
ss
daa
inc
lock
jge
test
fstpt
lahf
dec
adc
js
orb
xlat
mov
adc
into
dec
shrb
test
and
mov
inc
mov
cmp
sub
outsl
mov
jge
inc
je
int3
adc
in
inc
sbb
adc
or
cwtl
imul
fcomps
fisubl
les
stos
stos
sbb
pop
es
jge
sbb
push
ja
bound
add
enter
call
testb
fwait
mov
pop
add
rorb
popf
mov
pop
add
roll
dec
xchg
into
negl
movsb
cld
out
xor
addr16
xchg
cmp
out
insb
jns
movsl
iret
xchg
mov
lods
mov
xor
fsubrs
in
cmpsb
imul
shlb
mov
cltd
fptan
negb
sbb
adc
fidivrs
xor
or
fmul
cmp
jge
les
push
or
dec
xchg
insb
xlat
mov
test
mov
adc
bound
mov
mov
arpl
jmp
notb
pop
or
adc
fistl
adc
mov
dec
add
arpl
xchg
adc
inc
adc
fwait
dec
xor
mov
dec
inc
dec
mov
jle
dec
jb
mov
push
add
testl
cmp
xchg
jnp
fs
inc
mov
bound
in
pushf
dec
mov
jp
ret
inc
test
hlt
out
clc
mov
aam
add
lahf
lret
not
in
out
adcb
jle
or
xchg
xchg
inc
jns
sbb
jnp
lret
push
jne
xchg
or
fwait
xor
jns
clc
ret
mov
inc
and
or
lahf
or
sahf
adc
fs
fst
in
leave
sub
negb
cmp
mov
add
and
stos
pop
mov
xor
jge
fimuls
adc
sub
xchg
les
je
jmp
mov
cwtl
mov
in
rorb
and
fnstsw
pop
xlat
ljmp
loope
pop
mov
cmp
sbb
add
pop
pusha
test
cwtl
xor
inc
into
mov
sub
cltd
les
adc
int3
sti
loopne
mov
jne
test
sbbb
sbb
inc
dec
gs
pusha
mov
test
notb
push
stc
xchg
jbe
pop
ljmp
pop
push
inc
xchg
inc
xor
mov
adc
or
aas
xor
mov
xor
cwtl
fnstcw
xchg
test
aad
test
loope
xchg
imull
jmp
xchg
pusha
cs
hlt
imul
mov
popa
gs
je
call
je
inc
lods
sbb
add
inc
pop
pop
xchg
mov
aam
popl
cmp
push
outsl
pop
mov
mov
in
lea
xchg
gs
sub
outsl
out
xchg
adc
in
xchg
sahf
mov
lods
std
pop
shll
lods
sbb
lods
add
cltd
shlb
ret
cmpsb
adcb
xchg
cmp
dec
stc
mov
jbe
jmp
jl
mov
sbb
or
shll
repnz
push
mov
aas
and
mov
lahf
call
mov
call
lahf
sti
mov
popl
sbb
sub
icebp
das
ror
cltd
jle
jl
int3
mov
into
out
into
loope
icebp
insb
xchg
and
fsubs
jne
or
sahf
call
and
jge
dec
dec
lods
mov
adc
jb
or
in
cmpsb
xor
fsts
lods
jb
mov
sarb
adc
dec
cli
jo
jnp
in
or
or
mov
cmpsb
fadds
rcrb
ja
dec
mov
mov
pop
jns
jns
addb
pushl
inc
push
mov
fistl
in
xchg
lds
jge
in
inc
mov
std
adc
push
lcall
and
int
cmp
pop
scas
mov
sub
sbb
jp
mov
scas
lret
jg
in
lods
lock
fadds
xor
test
cmp
popf
xchg
mov
fldenv
cltd
ret
lahf
pushf
mov
aaa
ss
and
in
daa
jle
das
cmpsb
jl
mov
or
push
mov
imul
in
cmp
fistl
daa
inc
push
es
and
push
les
shl
cmc
inc
push
loop
in
out
outsb
sub
push
mov
and
adc
sub
inc
mov
sub
xchg
in
cmpsl
mov
lock
fwait
push
clc
inc
mov
popf
decl
mov
outsb
test
bound
and
js
xchg
xor
addr16
and
sti
ret
push
push
out
stos
sub
mov
jno
gs
inc
out
cmp
sbb
or
sub
add
fwait
pop
inc
push
adc
sbb
sbb
mov
clc
mov
movsl
dec
repz
je
movsl
push
xor
aam
or
mov
mov
imul
dec
cmp
or
jp
cs
cltd
repz
and
test
sbb
xchg
inc
and
dec
in
gs
js
adc
jae
lea
pop
adc
scas
sbb
seto
rorb
pop
and
scas
push
jmp
push
and
add
or
add
mov
sbb
adc
adc
pop
push
jmp
loope
xlat
xchg
imul
stc
mov
xor
lods
leave
jns
loop
aas
or
jp
jae
and
xor
jo
clc
lds
mov
vpunpcklwd
clc
and
sbb
icebp
lcall
fdivrs
aaa
jbe
mov
xlat
inc
test
or
movsb
aaa
inc
xor
stos
lea
mov
adc
or
xor
leave
inc
adc
sbb
mov
scas
jae
push
inc
filds
add
mov
cmp
push
xchg
rcrl
or
cwtl
xchg
xlat
adc
repz
shlb
inc
and
cmp
das
arpl
fdivrl
mov
pop
movsl
ret
cmc
sub
and
inc
cld
les
cmc
in
rclb
add
outsb
or
mov
shr
test
jg
adc
cmp
test
xchg
mov
or
out
lar
dec
cmc
in
movsb
push
inc
test
jns
dec
dec
pop
pop
xor
cmpsb
jo
outsb
movb
adc
adc
adc
jnp
aaa
les
shll
or
addb
xor
add
cmp
popa
jbe
cmpsl
loop
lods
mov
xchg
shll
or
add
mov
stos
mov
jmp
cmpsl
rolb
pop
andb
loop
shll
outsl
jnp
cmp
call
js,pn
rcll
insl
stos
repz
out
cmpsb
mov
cmp
add
add
pushf
stc
fidivs
fnop
jg
or
sub
loopne
lock
push
les
clc
int
mov
push
xor
outsb
fsubrl
mov
mov
dec
xor
jb
and
cmp
jp
mov
xchg
jnp
loope
fcoml
imul
lods
roll
jnp
popa
rclb
ss
mov
inc
or
push
inc
leave
add
xchg
mov
jmp
out
adc
inc
out
ficompl
pop
movl
mov
sub
popa
pop
or
popa
cli
jl
loop
mov
mov
xor
in
xor
imul
pop
xor
mov
pusha
xchg
pop
push
mov
ret
ja
jg
cltd
jbe
inc
cmp
in
dec
pop
je
xchg
xor
rcrb
xchg
imul
adc
pusha
xchg
push
iret
push
into
add
cmp
cs
mov
jb
insl
pop
mov
add
sbb
pop
push
orb
addl
xor
out
icebp
jp
jnp
addb
rol
cmp
cmpsb
jo
ja
loop
mov
dec
xchg
push
rol
adc
mov
rcr
fs
jg
sti
test
into
cmp
or
sbb
sub
push
pop
and
test
paddsb
hlt
pop
push
or
aad
cmp
sbb
into
aad
jne
lret
adc
xor
mov
push
cmp
inc
lock
cmpsl
jae
add
mov
mov
enter
inc
xchg
adc
sbb
sti
adc
clc
and
push
aam
xor
sub
movl
cmpsl
xor
add
outsb
xor
fs
add
enter
mov
bnd
adc
xor
cmp
dec
pop
fisubrl
adc
aad
gs
or
jg
repz
adc
lods
aad
mov
repz
adc
xor
cmp
stos
test
mov
dec
jnp
sahf
daa
xchg
iret
mov
jle
int3
fildl
rcrl
sbb
test
iret
mov
xchg
mov
in
mov
add
jae
mov
push
cltd
stos
or
and
fildll
aas
movsl
xchg
pop
shlb
or
jnp
and
inc
rorb
xchg
cmp
or
jnp
cmc
lret
imul
add
mov
in
loopne
sbb
push
pop
lahf
mov
push
xchg
jne
mov
mov
pop
cmc
sub
pop
sti
dec
pop
adc
and
add
addb
push
out
cmovnp
push
clc
cmpsb
jl
dec
imul
rcr
addb
mov
jo
jo
inc
imul
mov
cmp
adc
add
cli
std
mov
xor
jbe
jns
cs
pop
or
shrl
mov
andl
adc
xchg
stos
lahf
out
jge
adc
pop
rclb
mov
shrb
je
cmp
lea
test
das
aad
add
and
adc
sahf
mov
out
adc
cmpsb
dec
loopne
ljmp
pop
popf
cmp
in
mov
adc
mov
stc
push
inc
xchg
jg
xchg
mov
mov
movsb
push
lods
mov
sub
clc
mov
inc
xchg
and
xchg
popf
push
pop
jae
xor
cmc
and
sbb
out
popf
mov
fidivs
sub
mov
ja
cwtl
add
or
inc
ficomps
mov
and
sbb
loopne
hlt
dec
mov
ds
mov
lret
mov
enter
mov
in
movsb
add
andb
dec
jnp
iret
lds
std
sarb
pop
mov
ja
sub
cwtl
shl
stc
pop
ljmp
inc
inc
adc
dec
pop
push
ret
cmp
add
cmp
gs
orl
adc
aas
xchg
data16
or
or
add
jecxz
addb
add
and
xchg
add
pop
push
push
sbb
imul
jae
pop
test
mov
add
mov
dec
push
in
or
jecxz
and
xchg
sub
inc
data16
mov
lahf
dec
call
dec
push
mov
xor
jle
jg
clc
dec
daa
mov
pop
int
subl
lret
cmpsl
imul
ja
les
jmp
jno
in
sbbl
or
iret
call
fstps
push
mov
pop
or
test
jne
mov
mov
les
mov
jg
push
icebp
mov
jnp
pop
stos
das
mov
sub
push
mov
mov
data16
out
add
xchg
call
inc
es
mov
jbe
loope
push
add
dec
xor
repz
or
rclb
lret
mov
inc
cmp
mov
and
jo
mov
mov
adc
xchg
and
insb
inc
aaa
ljmp
sbb
jecxz
jge
loop
push
arpl
push
sahf
pop
inc
vminpd
xor
movsl
cmp
mov
mov
cwtl
push
mov
cs
jne
out
pop
xlat
add
fimuls
dec
jle
xor
ds
call
fistpl
mull
push
cltd
mov
xchg
adc
push
es
push
test
sbb
testb
add
xor
sti
mov
fdivs
sahf
add
int
shll
dec
cmpl
xor
xchg
enter
sub
mov
xchg
adc
rorb
outsl
mov
push
or
iret
lea
fs
hlt
add
popf
movsl
aad
mov
mov
pusha
call
and
les
sub
mov
lret
xor
fcmovu
pop
sbb
jnp
lods
mov
mov
and
mov
sti
push
mov
inc
push
mov
dec
jno
shlb
jmp
push
insl
xor
imul
pop
xlat
int3
add
sbb
hlt
xchg
cld
or
pop
xor
frstor
ret
loop
dec
sti
xchg
mov
in
sub
mov
and
lds
push
inc
sti
mov
in
ret
dec
mov
mov
xor
inc
add
lret
and
dec
pop
and
fcoml
dec
inc
cltd
and
bound
pop
adc
pop
cmp
pop
inc
negb
fs
dec
jmp
incb
mov
movsb
sub
cmp
shlb
xchg
adc
xchg
adc
pop
pop
mov
mov
dec
insb
mov
stos
aaa
outsb
js
ss
mov
leave
pushf
jnp
fcompl
gs
mov
xor
jb
or
aas
pop
fstpt
andl
cmp
sti
iret
jp
jb
pop
add
xor
mov
xchg
fsubr
mov
pop
mov
jno
das
lret
ja
cli
pop
adc
mov
mov
xor
rclb
fwait
xchg
aas
xchg
dec
and
jns
cmp
xchg
and
inc
inc
clc
mov
sub
fisubrs
out
add
cmc
pop
cmp
or
mov
std
ficoml
cmp
add
shll
lcall
insl
fs
ret
xchg
in
push
out
shll
jnp
mov
adc
mov
lret
lea
fnstenv
test
pop
cmp
adc
inc
pop
jl
fwait
dec
in
js
xor
nopl
sub
adc
cmp
adc
out
je
pop
rcrb
push
imul
bound
dec
xlat
push
enter
loopne
enter
xor
stos
rcrl
jle
stc
int3
sbb
aaa
xor
inc
insb
rorb
bound
mov
sub
mov
insb
arpl
push
add
jo
mov
popa
cmp
cwtl
mov
push
repz
sub
out
xchg
addl
fldenv
test
pop
jp
xor
xchg
imul
ljmp
ret
mov
and
mov
daa
cmp
or
ljmp
adc
int
adc
lret
xor
in
daa
and
and
int3
or
xor
iret
loop
iret
mov
and
mov
out
inc
cltd
gs
cmp
leave
in
xor
dec
out
dec
jl
movsb
dec
test
xchg
fidivs
mov
lahf
jae
pop
mov
popa
cmpsb
pop
rcrb
sub
lock
lods
in
les
cmp
sahf
add
sbbl
loopne
mov
bound
mov
or
dec
jne
in
pop
test
sub
sbbl
xchg
xchg
cltd
xor
mov
movsb
enter
cmp
push
cmc
inc
pop
jg
dec
std
add
cltd
inc
bound
or
mov
shl
nop
adc
cmpsb
mov
mov
stos
fisubs
xchg
xchg
sbb
test
push
xor
xchg
cmp
xchg
dec
add
xor
or
je
mov
cs
jbe,pt
nop
nop
or
cltd
adc
cmpsb
inc
ret
insb
dec
jns
sar
jle
sahf
pushf
rcl
movsl
inc
in
xchg
addb
stos
cmpb
lahf
jne
inc
ja
push
cmovle
dec
in
pop
add
fsubs
mov
adc
add
xor
mov
jo
jb
jo
sahf
inc
mov
movb
scas
jl
and
adc
inc
imul
xchg
outsb
inc
test
push
lret
adc
add
mov
movsl
or
jecxz
adc
xor
mov
xchg
fcomi
pop
cmp
mov
movsb
cwtl
nop
lods
enter
push
mov
dec
out
pop
inc
mov
jo
lods
int3
mov
push
jg
aaa
mov
test
fsts
arpl
repz
mov
mov
mov
int3
pop
out
sub
cmp
mov
jp
lock
add
out
movsl
inc
sub
loopne
es
stos
sub
or
push
cltd
cmpsb
mov
pusha
sbb
jle
pushf
test
addb
and
aas
ljmp
testb
inc
insl
pop
out
rolb
and
mov
push
push
mov
loope
cmc
fldt
decb
icebp
adc
inc
add
ja
pop
call
sub
fwait
ds
or
xor
ficoms
jae
xlat
lcall
test
mov
adc
cmp
jae
push
xorb
pop
mov
xchg
adc
das
aaa
sub
lahf
cmp
mov
sbb
or
jo
jns
adc
mov
in
out
jl
rclb
sbb
push
in
scas
daa
in
psraw
cmp
enter
int3
pop
test
out
jg
ds
or
sbb
push
loopne
repz
divl
aam
mov
mov
mov
rcr
push
ja
fwait
lret
pop
outsb
test
mov
cmp
lea
pop
push
push
sbb
inc
lock
out
xchg
dec
stc
mov
subl
xchg
mov
mov
mov
xchg
shlb
ficoml
repnz
mov
data16
js
pop
ret
and
pop
sti
aaa
sbb
rep
or
orb
lret
rcrb
icebp
icebp
in
test
sub
mov
cmp
cli
rep
iret
ret
jnp
shrl
data16
adc
icebp
addr16
fadds
ljmp
roll
lcall
pop
cmp
xchg
or
sarb
jmp
in
inc
imul
scas
in
lds
xor
in
loopne
lds
push
sbb
movsl
jg
test
jo
cmpsb
add
call
mov
sbb
mov
cmp
sarl
jl
lret
imul
inc
xchg
mov
pop
xchg
movsl
aam
and
sahf
inc
xor
jnp
push
sti
xorb
adc
or
aas
ss
shrb
hlt
sbb
incl
stos
push
inc
mov
mov
mov
pop
dec
icebp
lahf
pop
mov
jae
imul
bound
mov
pop
xor
pop
outsb
xchg
out
lds
jb
cli
push
or
xchg
sbb
sub
jnp
fdivrs
add
insb
xor
out
nop
lret
and
push
inc
cmp
dec
int
push
inc
adc
lcall
loopne
stos
and
or
cmp
mov
int
jno
pop
cmp
mov
jl
into
lock
shrb
out
repz
fwait
inc
stos
dec
clc
fisubs
fwait
or
enter
cwtl
jmp
int3
std
push
jg
adc
jle
add
repnz
push
and
xchg
rcll
fsts
fidivrs
mov
adc
mov
cmp
push
jg
das
repz
push
xchg
mov
push
popa
les
xor
ret
xorb
dec
in
mov
push
jnp
gs
xor
mov
sub
dec
icebp
in
push
fistpll
mov
mov
add
adc
mov
rol
add
lret
xlat
mov
push
and
test
jb
ret
jbe
mov
mov
jnp
sahf
call
ret
addb
push
notl
xchg
roll
pop
mov
fdivl
cmp
clc
jp
adc
ja,pt
jmp
mov
xor
jne
push
negb
inc
pushf
call
mov
imul
cmpsb
lahf
or
outsl
mov
call
into
add
cmp
cltd
push
ds
jg
inc
pop
cltd
xorl
push
out
fdivs
mov
mov
or
inc
push
pop
stos
or
xlat
shll
popf
pop
in
xor
pop
add
hlt
out
or
ret
push
into
mov
test
frstor
sahf
xor
or
push
test
pop
test
adc
stos
cs
push
xchg
dec
mov
js
add
adc
adc
ret
jmp
sahf
test
pop
pop
insl
es
xchg
fcos
in
cmp
inc
inc
xchg
shlb
cmpsb
jns
fcmovnu
push
sbb
sub
fs
ljmp
enter
sub
inc
mov
lea
call
outsl
jp
dec
jae
pop
lods
mov
cmp
mov
fwait
mov
pop
or
sbb
adc
test
cmpsb
sbb
outsl
add
popa
add
or
and
sbb
or
sbb
sbb
pop
add
pop
xchg
ret
pop
sarl
mov
lcall
fnstcw
outsl
sub
pop
mov
ret
test
mov
xchg
int3
sub
mov
andl
out
sub
jnp
inc
loopne
mov
aaa
xchg
test
or
lods
sub
mov
mov
pushf
movsb
add
sub
and
and
or
popa
lret
or
ss
aaa
and
dec
mov
pop
and
and
cmp
xor
jle
or
dec
jg
and
jae
scas
mov
sub
arpl
push
mov
fisubs
ret
jp
adc
pop
dec
add
out
mov
pop
dec
jnp
inc
popw
pop
mov
aas
xorb
mov
add
fcompl
dec
sbb
in
shlb
push
jmp
and
jb
cmpl
loop
fdivrl
shlb
add
pop
je
lock
cmp
add
mov
popa
aam
mov
and
xchg
insl
xchg
and
xchg
lcall
mov
pusha
fidivrs
mov
push
rcr
pusha
cmpsb
or
in
ljmp
jno
jno
out
or
push
and
in
nop
pop
xor
imul
repz
inc
sub
mov
or
push
loope
cli
mov
mov
fnsave
arpl
test
shl
dec
add
push
jg
fsubs
nopl
fstps
xchg
sbb
jecxz
mov
popf
aaa
cld
jmp
jecxz
jge
push
sbb
aas
add
dec
push
lods
jmp
xchg
mov
cmp
sar
pop
mov
inc
int
incl
fs
cmp
cmp
push
add
push
clc
rorb
push
mov
push
and
sub
dec
cwtl
sti
js
cwtl
aam
pop
xchg
aad
aaa
ret
test
push
das
fcoms
movzwl
aad
adc
loope
dec
and
dec
push
lcall
xchg
mov
insl
jmp
jg
fwait
data16
mov
lds
ret
stc
sub
jo
fwait
or
xor
mov
in
int3
repnz
shrl
std
pop
pop
incb
lock
jno
mov
inc
cmp
add
sbbl
add
aas
ja
and
push
sti
pusha
mov
movl
leave
mov
sbb
dec
inc
jge
pop
scas
outsl
sub
xchg
sbb
pop
or
aad
lcall
xor
inc
pop
add
jb
pop
sub
insb
ret
jae
ret
jne
imul
mov
cmc
mov
shlb
jb
jno
mov
add
bound
in
dec
mov
jbe
jne
or
rclb
sti
loope
xchg
mov
add
sbb
lret
lahf
jecxz
test
mov
incb
push
subb
mov
adc
cmp
aam
mov
xchg
test
xchg
xchg
repz
push
sti
shl
psubusw
repnz
jmp
dec
andl
nop
addr16
fs
in
jl
and
mov
mov
roll
mov
inc
aas
mov
mov
xchg
lea
pop
push
and
dec
mov
xchg
adc
sbb
xchg
shlb
int
addb
iret
pop
js,pt
adcb
cmp
shlb
icebp
jg
xchg
push
sub
loopne
dec
pop
cmc
mov
cmpxchg
sub
dec
or
xchg
fldz
xchg
stc
pop
or
xchg
in
addr16
sbb
and
pop
std
fwait
inc
mov
lcall
jae
int3
fwait
cltd
clc
ja
or
outsb
push
cmpsb
inc
cmp
jno
out
repnz
rolb
loopne
or
xor
in
test
les
icebp
mov
fists
andps
data16
add
sub
push
jle
std
mov
push
mov
xlat
test
rol
in
iret
add
sbb
inc
in
add
push
push
sub
testb
sbb
aam
sub
test
insb
or
mov
movsl
cmc
dec
lret
or
or
sbb
or
cmp
in
xchg
mov
jl
cmpsb
shr
lret
cmpsl
aam
push
fcoml
or
lock
sub
dec
cmpsb
fstl
mov
enter
sub
jbe
out
fisubl
sbb
fadd
scas
jb
sub
es
dec
add
cmp
mov
push
pop
adc
lea
daa
daa
cwtl
xor
out
aad
xchg
jge
mov
movsb
cmp
or
int
stc
push
xor
jge
cmpsb
in
sbb
xlat
xor
aad
cs
dec
rolb
imul
pop
bound
fwait
dec
inc
imul
push
shl
cmp
push
or
out
push
cwtl
iret
dec
sbbl
scas
mov
mov
sub
dec
xor
add
loope
and
test
hlt
sbb
add
lcall
dec
cmp
je
mov
jle
lock
push
lahf
js
mov
xchg
aas
in
push
jge
dec
jmp
out
jle
push
jb
jge
aam
add
xchg
sti
push
lods
push
nop
bound
mov
in
roll
push
lahf
ljmp
sub
popf
call
cmpl
mov
jae
sub
xchg
lea
pusha
xchg
out
sbb
push
aaa
lods
in
add
inc
cld
xchg
xor
out
add
lods
in
jl
xlat
aas
pop
clc
in
add
inc
xor
or
pop
and
ret
aam
mov
xor
mov
fld
adc
xor
sbb
insb
ret
clc
push
or
lcall
pop
adc
mov
les
jne
iret
sbb
push
fldenv
push
dec
mov
adc
lahf
jmp
push
int
sub
add
loope
and
and
adc
in
jecxz
gs
scas
pop
dec
in
mov
mulps
mov
xchg
out
fcompl
ja
sbb
xchg
cmpsl
outsb
adc
aaa
pushf
std
mov
sbb
icebp
pop
adc
xorl
shlb
jecxz
ja
loopne
ret
scas
stc
jl
push
cmpb
repnz
fs
xorb
out
into
stos
adcb
aam
xchg
adc
dec
or
inc
push
jge
add
rclb
notb
add
dec
mov
pushw
sub
fcmovu
ret
daa
cltd
add
mov
push
imul
push
adc
sbb
mov
test
add
in
aad
scas
popf
and
dec
pop
or
pop
pop
out
aas
sub
aaa
xor
jp
sbb
imull
dec
add
rclb
sbb
lret
cmp
jle
cmc
sbb
icebp
mov
lods
sbb
insb
fistl
lods
ljmp
or
jnp
in
inc
inc
cmpsl
push
inc
mov
dec
lock
sub
cltd
out
jne
and
vphsubdq
sub
test
lods
cmp
shll
aas
dec
jmp
lahf
add
imul
fsubr
loope
pop
sar
popf
sub
arpl
add
fs
fldcw
jne
push
decb
mov
loope
in
cmp
shrl
jecxz
iret
xlat
aad
push
add
out
sub
loopne
es
pop
mov
pop
leave
push
pop
sbb
sbb
roll
xchg
loope
pop
jecxz
imul
stc
imul
jbe
jle
inc
das
cmpsb
xor
call
or
jmp
enterw
iret
popf
pop
push
fnsave
in
int
test
pop
mov
stos
pop
or
add
push
call
dec
ja,pn
jnp
xor
jge
popa
xchg
daa
rolb
sbb
cmp
lods
mov
loop
arpl
daa
lods
add
mov
bound
sbb
or
xor
push
jmp
in
movsl
inc
add
lock
mov
cmp
mov
pop
mov
mov
js
insl
push
fwait
jmp
mov
xchg
dec
fdivrp
sub
out
mov
loopne
lret
mov
mov
pop
rclb
scas
push
in
fcoml
xor
dec
mov
push
mov
out
push
nop
iret
xchg
jp
js
inc
cmpsb
mov
jp
add
mov
jnp
dec
mov
aaa
std
shrb
imul
sbbl
ds
inc
ds
je
jno
dec
cmp
add
ss
shll
or
cs
mov
mov
in
adcb
xchg
push
sbb
ss
mov
jecxz
mov
cmpsl
repz
adc
popf
push
test
mov
dec
pop
xor
xchg
scas
jno
stc
xor
orb
ret
push
xchg
push
data16
jp
pop
arpl
hlt
mov
mov
mov
flds
push
in
lods
imul
push
sub
adc
xlat
add
pop
xchg
call
mov
xor
pushf
sub
xor
mov
js
pop
icebp
cmpsb
ret
jge
sbb
xor
pushf
jge
cmpsl
adcl
aad
mov
xor
jg
shr
iret
dec
xor
imul
inc
sub
mov
adc
push
inc
and
sub
pop
sahf
xchg
inc
xor
int
jns
popa
mov
fs
pop
je
pushf
inc
or
xor
mov
sub
negb
mov
xor
mov
addl
clc
and
test
jbe
test
fldcw
mov
pop
nop
out
pop
sbb
ds
fldenv
lahf
js
insb
subl
push
push
dec
or
fildl
add
dec
dec
pop
or
int
std
lret
dec
jmp
fisubrs
cmp
inc
inc
mov
std
ljmp
lret
push
fistps
iret
ds
shrb
aam
cld
jne
push
bound
jecxz
ja
orl
ss
insb
fnsave
xor
stc
push
ss
inc
xor
mov
pushf
iret
int
xchg
jp
roll
clc
sbb
xor
jbe
test
mov
rolb
sbb
jo
clc
mov
std
and
inc
insb
dec
sub
or
jo
ds
arpl
add
jns
push
shl
fiaddl
adc
xlat
aaa
scas
or
and
arpl
sub
in
aam
or
int3
fimull
jb
out
xlat
clc
jmp
push
cmp
cmc
arpl
cld
lret
pop
push
cli
xchg
repz
xchg
mov
pop
mov
bound
jb
iret
cmp
pop
jp
xchg
push
jae
pushf
loope
or
add
ljmp
loope
mov
mov
jmp
idivl
repz
and
cmc
dec
cmpsl
and
dec
pop
mov
sbb
jle
or
or
mov
ljmp
push
int
std
lods
sbb
pop
mov
lcall
stc
xchg
and
lcall
push
dec
rorl
pusha
sub
fisttpll
les
nop
adc
xchg
pusha
imul
push
lahf
lods
repz
imul
mov
sub
dec
outsw
divl
dec
rcr
adc
pop
fwait
ja
data16
lret
lock
lcall
or
jo
les
dec
cmp
xchg
lret
mov
addr16
inc
sbb
sub
mov
fsubrl
pop
push
test
das
sub
ret
add
daa
dec
jecxz
in
jmp
insl
aas
adc
out
fdecstp
cmpb
in
mov
pop
inc
add
stc
cltd
daa
lret
jns
leave
sbb
cmp
rcr
scas
xchg
out
xor
dec
push
lds
xchg
xor
scas
rcrl
or
arpl
cwtl
xor
mov
cld
out
cmpsb
data16
loopne
dec
mov
int
push
imul
ds
fbld
or
cmp
into
rcll
rcll
xchg
mov
lret
jo
mov
jns
or
xor
xchg
fstpl
rcll
pop
xchg
js
and
mov
jge
add
lahf
aaa
je
in
add
adc
jl
loopne
and
push
pop
gs
sbb
scas
cmpsl
test
pop
or
mov
ret
mov
mov
and
in
packuswb
cmp
popa
test
cmpb
push
or
pop
cwtl
and
fsub
inc
fisubs
jmp
loop
mov
or
mov
xchg
xchg
aad
rcll
and
sub
xor
fxch
push
pusha
imull
lea
jmp
aam
xor
popf
pop
sub
push
lret
xchg
cmp
aaa
mov
inc
out
xor
rorb
gs
dec
es
ficoml
lock
inc
push
xchg
loopne
lahf
or
pop
insl
xchg
push
inc
ss
test
mov
dec
sbb
jmp
or
es
pop
xchg
mov
addr16
jmp
adc
clc
movsl
push
je
aas
and
or
pushl
sbb
mov
jo
sbb
mov
repz
iret
sbb
jbe
jnp
jmp
push
and
sbb
jl
lcall
and
in
repnz
and
scas
mov
scas
and
loop
inc
cmpsl
data16
cld
rcll
gs
inc
mov
cli
or
leave
xor
sub
mov
add
outsb
lahf
call
push
jecxz
lahf
inc
in
cs
cmpb
cmp
pop
pop
xor
push
in
sub
in
aad
inc
xchg
pop
jnp
or
out
into
scas
push
int
mov
loop
cltd
jmp
jp
fnstsw
or
inc
rorl
jnp
add
cltd
iret
jae
out
jmp
ss
xor
xor
out
js
mov
in
mov
jns
dec
loopne
rcrb
mov
test
inc
xor
cwtl
add
dec
sub
jl
out
pop
fs
sbb
dec
js
sub
jl
jl
cs
jb
push
mov
mov
cltd
data16
pushf
mov
sub
sub
dec
xchg
xchg
rcrb
test
push
aad
ds
test
dec
fldl
mov
ds
fmuls
pop
cltd
xchg
add
bound
in
or
sub
push
lds
cmp
jge
lahf
out
add
fcmovnbe
cmp
jecxz
outsb
jne
push
js
loopne
mov
xchg
sub
lds
lcall
dec
lds
xor
sarl
ret
movsb
fstps
dec
sbb
fistpll
ret
test
out
inc
mov
mov
cmp
jge
cmp
xor
in
sub
add
mov
stos
push
pop
push
int
lahf
and
cmpsb
push
jae
and
in
sub
pop
loopew,pn
mov
xchg
aaa
ret
movsl
mov
hlt
lds
rcrl
insb
mov
jmp
cmp
lret
cwtl
sub
sub
adc
sarl
mov
mov
xor
sub
popf
and
add
mov
out
mov
lea
or
xchg
inc
iret
bnd
jb
inc
arpl
sarb
fnstenv
lret
pop
cmpsl
insl
notl
test
aaa
xlat
cltd
sub
xchg
mov
cmp
call
xor
sub
lods
xor
scas
outsb
mov
aad
mov
push
dec
push
inc
shl
xchg
shrb
xchg
mov
xchg
and
mov
lea
xchg
push
fcomi
jecxz
shlb
in
jp
pop
dec
sbb
lret
ljmp
lahf
adc
cmp
mov
cmpsl
nop
jg
mov
decb
sbb
adc
inc
adc
scas
hlt
pop
or
cmp
loope
rcll
cmp
xor
aaa
adc
inc
mov
push
push
jge
jecxz
lret
add
jb
cmp
bnd
xor
call
cwtl
push
frstor
sbb
call
inc
aaa
divl
xchg
cmp
out
fcompp
das
and
xchg
subl
mov
dec
xlat
scas
int3
mov
push
ret
and
leave
add
mov
pusha
cmp
pop
adc
push
mov
mov
cmp
add
and
jae
jo
xlat
sbb
fsubl
fstpl
sub
mov
test
int3
cmpsb
cld
stos
mov
adc
xor
ja
es
std
cs
jno
movsl
adc
push
push
cli
pop
jnp
mov
lods
shl
sub
fimuls
lods
pop
inc
and
xchg
aad
push
fcoms
pop
xchg
add
ss
fldl2t
ror
sub
jmp
lret
pop
lea
mov
inc
jnp
mov
dec
std
add
add
scas
inc
dec
ss
and
jne
lods
inc
adc
mov
test
mov
jne
stc
push
adc
test
cmp
call
jns
das
stc
xor
icebp
mov
mov
push
jp
hlt
arpl
js
cmp
dec
shl
and
lock
stos
jmp
pop
cmc
setbe
shlb
pop
lock
mov
cmp
xorl
cli
push
mov
cmp
or
xchg
rorl
cltd
lods
aam
das
mov
xor
cmpsb
jmp
mov
fbstp
pushf
sub
and
aas
xlat
xchg
test
xor
into
or
mov
pop
mov
dec
inc
insl
outsl
xchg
cmp
mov
or
xchg
scas
test
or
arpl
cltd
xchg
js
or
orb
test
pop
dec
dec
sbb
in
lds
subb
les
test
mov
sbb
pop
aaa
push
push
and
sub
lock
dec
aaa
ljmp
shlb
sub
and
jno
add
mov
negl
adc
pop
cmp
jg
xor
enter
inc
adc
inc
jo
cwtl
add
mov
xor
paddw
sbb
jle
xor
sbb
addr16
or
mov
xchg
ret
mov
adc
daa
cmpsb
div
popf
jb
pop
cmp
mov
mov
mov
sbb
fdivl
pop
dec
test
imul
push
fcmovnu
jmp
add
xchg
lods
jl
adc
lods
dec
ret
mov
push
pop
jns
pop
jo
push
pop
stos
lcall
pop
xor
pop
and
xchg
jae
call
mov
cltd
xlat
lahf
stos
sub
stc
push
loop
stc
clc
sub
pop
int3
enter
loopne
mov
aad
push
stos
push
ss
jecxz
icebp
rcr
jecxz
cwtl
jnp
xor
and
or
jmp
addb
pop
add
sub
es
mov
out
mov
scas
mov
adc
out
jnp
lahf
pop
inc
mov
mov
xchg
fcmovnu
fstl
repz
inc
mov
inc
loope
outsl
push
pop
rorl
mov
shlb
xchg
push
js
mov
and
sub
cmp
add
or
mov
ror
cmp
cld
and
dec
cmp
scas
mov
jle
push
repnz
jns
push
rolb
dec
aaa
sbb
cmpsb
xchg
mov
and
or
or
in
jno
xchg
inc
ljmp
ja
adc
jl
stos
jmp
lea
and
loopne
cmp
add
sub
adc
and
mov
dec
xlat
dec
xor
xchg
xchg
or
and
imul
sub
daa
jo
aaa
jbe
push
das
adc
mov
test
inc
insb
fwait
mov
and
and
test
xchg
imul
test
mov
mov
inc
xor
mov
data16
xor
cmp
or
add
mov
cwtl
inc
sarb
out
jecxz
xchg
popf
int3
pop
push
enter
daa
mov
pop
cmp
mov
int3
mov
mov
adc
std
lods
pop
and
dec
dec
pop
mov
cld
jae
sbb
push
xor
adc
int3
out
mov
int
cmpsb
push
pop
arpl
or
jp
xor
mov
mov
dec
lock
fs
and
bnd
push
in
add
cmp
or
ret
cmp
repnz
lahf
adc
adc
in
adc
pop
es
jo
sub
jnp
fisttpl
std
xchg
push
add
adc
sbb
repz
mov
dec
and
popf
popl
mov
ljmp
add
out
cld
or
stos
int
icebp
and
out
xchg
negl
pop
xlat
add
cmpsb
jns
mov
repnz
push
sub
cmc
pop
hlt
jecxz
orl
cmp
push
ret
arpl
int
test
mov
push
xchg
into
fistpl
push
cmpsl
nop
mov
jge
test
cmc
fisubs
jnp
xor
loopne
popf
inc
mov
pop
push
mov
scas
shll
fndisi(8087
mov
cmp
sbb
cmp
es
sahf
xchg
shufps
sti
inc
dec
sub
das
fstpt
and
and
leave
fnstenv
inc
and
xchg
xchg
test
xor
int
lahf
daa
scas
mov
loop,pt
iret
add
shrl
shll
in
push
mov
cmpsb
orl
cmp
insl
mov
jb
and
add
cmpsb
sub
or
iret
divl
xor
fs
int3
sahf
mov
mov
dec
cmpsb
pusha
lods
cmp
pop
movsb
or
ss
adc
imul
das
pop
mov
mov
push
cld
mov
jg
pop
repnz
jg
push
or
outsl
lock
inc
clc
outsb
cmpsl
dec
add
aam
xchg
dec
jl
shrb
arpl
inc
aad
push
xlat
dec
add
ljmp
cmpb
stc
cmp
out
in
mov
mov
adc
fstpt
xchg
lock
lret
mov
ss
xor
loopne
or
cmp
orb
repnz
mov
cmpsb
inc
cmp
lods
cli
ss
jecxz
jo
and
jl
pop
xchg
or
jle
lret
inc
adcb
andl
aad
xchg
sarl
xchg
movsl
xchg
jp
or
sub
idivb
xchg
cmp
mov
je
xor
dec
jmp
mov
sahf
xchg
sub
mov
add
test
adc
add
enter
sub
filds
jno
jb
nop
mov
iret
pop
call
js
idivb
pop
mov
or
xor
xchg
in
xchg
ret
or
subb
arpl
inc
add
je
pop
xor
sub
mov
lret
mov
push
inc
sub
ret
cmpsl
push
mov
std
pop
push
sbb
sub
sub
or
mov
fildl
shll
outsl
jo
or
mov
and
ud2
xor
xchg
cmp
mov
xor
es
data16
or
sub
cmp
pop
les
cmp
negl
cmp
imul
scas
or
cltd
jmp
aas
or
or
cli
add
xchg
jo
ret
sub
data16
inc
adcl
push
and
or
test
mov
into
xor
mov
xchg
push
push
and
inc
stos
or
mov
add
jmp
ds
imul
dec
xor
rclb
mov
popf
pushf
icebp
lock
xchg
inc
or
add
ja
push
ja,pn
adc
fiaddl
into
cmpsb
call
jae
dec
lock
dec
iret
mov
xor
decb
cld
loop
call
push
lods
fcmovnbe
mov
jae
push
cmp
inc
in
mov
insb
inc
jno
sbbl
cli
xchg
mov
pop
xor
dec
pusha
pop
cmp
imul
sbb
rcr
xchg
xor
loope
jno
ljmp
xchg
pushf
imul
in
mov
add
and
enter
push
into
test
fdivs
pop
sub
iret
incl
push
dec
sbb
mov
fiadds
test
cmpsb
or
add
aad
mov
shrb
mov
lret
and
pop
mov
inc
std
dec
xchg
inc
mov
sbb
sahf
adc
or
push
popf
dec
jmp
push
in
js
sahf
cmp
mov
imul
xor
adc
or
cmp
push
mov
aas
jne
scas
xchg
xor
or
flds
add
shrb
in
xlat
sub
cmpsb
mov
dec
inc
rcrb
into
decl
add
in
push
push
xchg
sbb
loope
vmovhpd
aam
notl
mov
imul
ret
cmc
fcoms
add
rcll
push
repz
pop
jg
outsb
mov
test
nop
loop
call
cmp
lds
ret
pop
outsb
jnp
imul
push
inc
je
push
xor
loop
adc
into
orl
and
xchg
xchg
leave
sub
add
mov
push
or
cltd
and
push
cmp
push
stc
cmp
stos
sbb
insb
adc
mov
popa
xchg
adc
cltd
mov
sub
test
jg
sub
flds
testb
ja
rcl
insb
fdivrl
or
cld
add
jg
fsubrs
out
mov
xchg
ficoms
sbb
repnz
insl
pop
ja
inc
pop
mov
adc
inc
stos
call
dec
popa
loopne
sub
or
and
push
nop
mov
test
or
lods
and
push
idivb
ljmp
pop
jmp
push
pushf
aam
sbb
push
push
push
stos
es
jp
enter
cltd
ss
cmc
mov
inc
and
lret
ja
mov
pop
mov
out
imul
rorl
repz
movsl
mov
aaa
xchg
push
idivl
lahf
fidivs
js
pop
jne
jge
stc
mov
sub
scas
int3
pop
adc
mov
add
test
mov
fwait
lea
jle
lock
mov
jge
insl
test
mov
in
rolb
mull
test
push
xchg
int3
imul
sbb
mov
mov
lcall
aad
sbb
loop
mov
outsb
sbb
sbb
add
and
inc
mov
sbb
sub
adc
xor
mov
cwtl
outsl
sub
xor
pusha
sbbb
fisubl
iret
adc
ss
in
aas
notb
mov
cmp
xor
shll
mov
stos
ljmp
test
fs
xchg
sbb
test
mov
pandn
jo
ds
xchg
fistpl
fadd
fwait
sbb
pushf
enter
fldenv
xchg
xor
and
cmp
outsb
shlb
jp
pushf
inc
mov
rclb
scas
adc
daa
or
dec
add
adc
sbb
pop
je
xchg
ljmp
rorl
fistl
cmp
shll
xchg
xchg
and
mov
adc
dec
mov
mov
adc
jo
dec
cld
pop
xor
adc
adcl
pusha
inc
iret
cmp
in
outsl
pop
push
add
lea
dec
mov
push
mov
inc
cmc
mov
cld
arpl
jo
setnp
loopne
xchg
lea
xchg
add
bound
adc
push
mov
adc
hlt
dec
xchg
scas
das
lods
insb
popa
jmp
pop
inc
cli
pop
cmp
adc
pushf
pop
inc
in
xchg
movsb
pop
mov
fs
push
add
dec
sbb
add
lods
cld
ja
mulb
bound
shufps
push
fstps
std
jle
jno
cmp
cmp
cld
xchg
loopne
xchg
pop
mov
in
popf
inc
xchg
cmp
dec
pusha
adc
and
adc
pop
dec
out
movl
push
loop
sub
pop
in
xchg
shr
cmpsb
add
outsl
push
dec
xchg
sbb
mov
or
mov
add
popf
or
lock
outsb
mov
test
icebp
loop
sbb
pop
push
xor
jg
mov
xor
vpsrld
into
icebp
fsubrs
scas
mov
adc
aas
push
jge
sub
and
aaa
push
lret
cmp
push
xchg
jmp
add
dec
cmp
add
jle
adc
enter
dec
lods
inc
addw
push
xchg
push
mov
mov
inc
inc
aad
out
pop
jne
cmp
mov
add
mov
rcll
mov
sbb
sahf
loope
cmp
fstps
sub
js
mulb
push
push
xchg
fstps
scas
xchg
mov
jecxz
jp
sti
inc
cmc
xchg
ret
sbb
xor
das
aaa
add
icebp
loope
pop
jl
rorl
push
sub
jns
jp
jp
mov
push
inc
add
xlat
and
adc
pop
repnz
shll
das
ljmp
addr16
mov
aam
mov
int3
dec
je
and
sub
aas
and
and
xlat
lcall
js
cwtl
add
add
dec
and
push
mov
mov
lods
add
xor
cmp
popf
cmp
sbb
mov
and
test
and
push
ret
repnz
mov
lock
pop
insb
shlb
mov
call
mov
in
inc
push
or
sbb
add
mov
jbe
test
add
jo
push
dec
test
out
or
bound
dec
mov
fldenv
faddl
jno
lods
aas
xchg
adc
cmp
adc
sbb
popa
inc
cmp
ss
mov
lods
dec
or
cmp
sub
cmp
push
loope
mov
test
fstl
jmp
inc
sarb
or
pushf
inc
cmp
lcall
push
and
xchg
leave
inc
cmpsb
subl
inc
push
js
mov
xchg
or
fwait
xor
pop
inc
pop
ret
negl
in
sbb
sub
int
pop
decl
adc
rorb
neg
push
fcomps
jne
push
out
movl
xlat
dec
lret
mov
push
ss
std
scas
sbb
xchg
out
test
sar
ret
mov
dec
pop
cmp
cmp
cmp
das
mov
movsb
andb
mov
push
cltd
mov
outsl
scas
sub
and
mov
js
jo
or
push
mov
mov
mov
jbe
sbb
fwait
out
push
jl
shrl
rolb
in
es
aam
dec
mov
jp
or
sti
and
imul
cwtl
dec
mov
dec
xchg
test
stc
jns
jb
nop
adc
test
or
jmp
aad
or
pop
sbb
lret
adc
insl
in
ja
test
sbb
clc
add
inc
jg
lret
dec
pop
divl
mov
xchg
fsts
dec
push
cli
hlt
test
punpckldq
lret
and
ret
sub
hlt
clc
or
mov
or
mov
mov
pop
xor
push
into
xor
sbb
out
cmp
push
xchg
pop
mov
int
cmp
jge
aaa
jnp
int
add
jae
push
dec
xchg
adc
lret
sub
fimuls
xchg
mov
push
ret
mov
int3
sub
dec
inc
add
jb
jmp
call
push
push
or
popa
inc
in
bound
ret
mov
je
add
movsb
movsl
inc
mov
ds
roll
clc
into
pop
enter
mov
shll
cmp
fistpll
daa
loop
fs
mov
adc
mov
daa
int3
shll
xchg
pop
dec
inc
mov
addl
icebp
in
lcall
loope
sbb
inc
out
insb
inc
dec
imul
or
cvtps2pi
xchg
out
fdivrl
mov
cwtl
push
std
sbb
add
dec
fisttpl
or
sub
inc
mov
sbb
mov
push
imul
bound
mov
dec
pop
rcl
cmpsl
rcll
mov
jle
xchg
lea
repnz
dec
imul
sbb
test
lea
fisttpl
icebp
ljmp
cmc
add
dec
and
ja
cmc
dec
mov
out
xchg
aas
ja
int
pop
ds
mov
cmpsl
lods
insb
xchg
std
cmp
cmp
sbb
iret
inc
add
loope
xor
aaa
sti
adc
pop
xchg
movsb
sub
pop
sub
mov
sub
jp
stos
mov
mov
fdivp
mov
outsl
sbb
lahf
xchg
test
je
lret
fstl
repz
jle
mov
imul
in
sub
test
out
int
pop
ja
dec
mov
dec
mov
pop
sarb
jle
push
or
fucompp
xor
jbe
pop
push
jge
loop
fstpt
dec
mov
and
jp
or
int3
cs
leave
pop
dec
scas
rorb
jo
in
xor
or
or
dec
mov
mov
out
and
mov
dec
inc
dec
sbb
add
sbb
jp
sahf
ja
subb
or
mov
jge
hlt
add
inc
dec
sub
fbld
pop
cmp
ds
repz
dec
sub
xchg
addb
mov
bound
arpl
ss
lret
shrl
ljmp
and
ret
jae
jae
jp
sbb
add
push
shll
addb
into
pop
adc
test
dec
mov
lahf
cwtl
or
xchg
loope
std
xchg
lahf
mov
push
push
add
int
scas
pushf
in
sbb
xchg
std
fadd
inc
test
shrb
into
arpl
nop
or
jb
mov
mov
jo
cmp
mov
addr16
fidivs
jecxz
jno
add
ss
or
cmc
inc
push
sbb
add
jb
dec
mov
in
and
dec
pop
mov
cmpsb
into
out
sbb
das
cmc
push
mov
adc
pop
xchg
leave
mov
stos
push
sub
jns
xor
sahf
push
mov
mov
push
sub
ds
pop
test
mov
or
loop
dec
arpl
cld
or
dec
pop
cmp
es
push
stos
inc
inc
mov
xchg
mov
and
cmp
sub
addb
sub
pushf
imul
xchg
dec
dec
mov
dec
and
bound
ret
adc
rclb
mov
pop
jg
sbb
loope
in
int
push
inc
push
outsl
incl
and
nop
cltd
xor
xor
push
add
mov
push
cmp
push
popa
xlat
scas
push
xlat
lods
mov
call
mov
jb
in
xor
insl
test
sbb
adcb
xchg
mov
xorl
jae
xor
lods
dec
jge
filds
and
push
dec
es
inc
cmp
sbb
sbb
adcl
dec
push
and
cmpsl
jle
cmp
adc
push
loopne
pop
or
push
nop
xchg
stc
adc
pushw
or
jg
dec
lds
sub
ss
sbb
inc
push
xchg
shll
cmp
inc
adc
pop
fimuls
pop
mov
jl
cmp
imul
mov
leave
paddsw
scas
add
inc
inc
push
outsl
dec
mov
jg
stos
dec
xchg
jge
xor
sbb
mov
xlat
xlat
ficoms
fistps
pusha
push
mov
cs
add
add
pop
xor
pop
sub
jns
xchg
and
xchg
jecxz
mov
or
xchg
xchg
incl
fsubrs
dec
outsb
lcall
hlt
push
ss
je
fistps
arpl
andb
dec
push
mov
ss
fcomps
jns
leave
pushf
or
ret
bnd
push
jbe
xor
sub
add
enter
or
cs
mov
inc
enter
xlat
adc
mov
inc
sbb
std
data16
outsb
push
enter
sbb
inc
xor
push
movsb
pop
xor
test
mov
mov
dec
mov
jno
dec
xchg
jle
add
push
sbb
xor
xor
sub
dec
hlt
test
dec
inc
sub
pop
clc
pop
insb
or
aas
and
call
ds
fldl2e
pusha
cwtl
mov
xor
enter
addr16
addl
adcb
inc
lahf
mov
sbb
sub
fisttpl
insl
xchg
movsb
subb
xlat
stos
fs
sbb
mov
sarb
sahf
mov
mov
sub
jmp
cs
out
lahf
pushf
jmp
pop
sbb
out
and
out
bound
mov
jo
divl
addr16
rcrb
jo
mov
lea
cmp
adc
outsl
insb
orl
pusha
enter
sub
push
mov
test
js
push
clc
loope
cmp
mov
gs
in
js
int3
inc
adc
add
push
nop
push
fidivrs
add
fidivrs
arpl
lock
insl
xchg
inc
addr16
lods
daa
sub
mov
mov
cmpl
push
add
in
pop
popa
das
std
lcall
mov
insb
and
lods
mov
mov
mov
inc
xor
pop
xchg
sbb
shl
cltd
push
xor
xlat
push
jnp
cld
or
push
bound
lahf
sbb
ja
push
cmpsl
imul
dec
popa
loope
or
mov
ja
xor
jmp
adc
inc
sub
cwtl
lret
lods
addr16
faddp
push
dec
cli
movb
loope
pop
lahf
pop
daa
dec
adc
rcrb
in
push
sbb
adc
push
lret
xchg
sub
push
mov
fs
xchg
addr16
dec
sub
jo
imul
insl
or
sbb
hlt
movsb
mov
sbb
stos
pop
jl
jmp
outsb
in
rcrl
bound
jp
pop
inc
aas
cwtl
xor
or
cmp
lcall
mov
sub
inc
mov
repnz
sub
data16
addr16
push
imul
adc
loopne
push
jmp
icebp
or
imul
xchg
dec
aas
sub
jle
test
mov
fdivl
pop
adc
inc
or
and
cmp
pop
divl
inc
mov
push
sbb
jae
xlat
andl
and
add
lea
or
sub
pop
std
sbb
jo
lcall
jecxz
pop
mov
push
add
addr16
or
testb
and
dec
xor
or
mov
fldl
jl
adc
sbb
xor
xchg
or
aam
push
cli
inc
insl
adc
xor
xchg
or
mov
jecxz
jno
push
popf
and
dec
xor
mov
outsb
in
stos
push
sbb
mov
sahf
out
and
xor
dec
and
cltd
inc
mov
mov
pop
lret
inc
xchg
xor
popf
dec
mov
daa
andl
fistps
gs
jmp
xchg
push
jne
test
xchg
fnstsw
in
dec
dec
jle
lahf
dec
mov
nop
add
gs
push
sahf
xchg
mov
lea
xchg
jb
and
sbb
repz
pop
pop
addr16
out
jmp
lea
test
push
lea
loopne
shlb
lahf
les
aad
and
int3
pushf
or
jbe
call
fs
jno
add
ss
dec
xchg
mov
fimull
mov
or
xor
repz
mov
and
idivl
mov
std
pop
hlt
enter
dec
lods
in
pop
sbbb
add
daa
add
pusha
out
sub
sbb
out
loope
inc
pop
notb
loopne
mov
adc
jae
xor
xor
cmp
outsb
or
fdivs
fcoms
mov
inc
lods
mov
stos
cmp
inc
mov
orb
popf
test
jg
or
pop
adc
push
or
mov
pop
lret
dec
jae
cmpsb
jge
dec
jae
mov
sub
cli
scas
cmp
inc
push
mov
sbb
mov
cld
cmpsb
loopne
sbb
stos
jnp
ljmp
xor
mov
gs
ds
xor
jns
mov
cmp
push
in
sahf
mov
mov
sub
mov
inc
shrb
outsl
sahf
mov
jle
aaa
aam
out
into
mov
les
insl
dec
mov
aam
ljmp
push
aad
mov
inc
cmp
stc
or
inc
mov
andb
or
or
cli
dec
sub
pop
call
pop
xchg
idivb
sub
adc
idiv
mov
xchg
shlb
js
iret
sub
xor
pop
add
js
sub
and
push
xchg
sbb
xorl
push
or
cmpsl
div
inc
cmc
mov
dec
rorb
fnstenv
mov
mov
jg
std
cs
movsl
pop
daa
pop
and
cmp
popf
or
mov
out
std
aad
fcomps
movsb
imul
sbb
stc
mov
cmp
lcall
pop
das
fidivl
jg
or
inc
or
addl
imul
loopne
pop
in
pop
cld
dec
mov
sbb
push
rcl
shll
call
lcall
clc
mov
add
inc
xchg
lea
jmp
ret
mov
shl
dec
and
ror
stc
push
add
lahf
mov
in
cmp
popa
call
sbb
mov
cmpsl
repz
push
jg,pt
mov
fwait
enter
sahf
fbstp
aaa
pop
push
rol
mov
mov
push
rcll
cmp
add
pop
push
fdivrs
mov
pop
out
dec
inc
and
repnz
pop
cwtl
loopne
shrl
lahf
out
sbbb
push
xchg
mull
cmp
rep
fidivs
addr16
arpl
stos
lock
cltd
jne
cltd
test
test
or
push
sub
aaa
cmp
lods
jmp
int3
push
push
cmp
loop
cltd
xchg
aad
add
or
adc
cmpsl
rolb
cmp
xor
mov
js
jns
pop
mov
xor
pop
mov
sub
or
sbb
push
lahf
xchg
fstps
ret
test
in
jnp
test
dec
sub
jmp
push
xlat
outsb
xchg
lods
inc
dec
jno
mov
xor
stos
cmp
jmp
je
jp
aaa
jo
push
lret
sub
jbe
cmc
stos
test
jmp
mov
stos
inc
add
adc
xor
sub
push
jns
push
imul
std
int
cltd
mov
pop
jns
xchg
push
cmp
lds
lahf
mov
iret
scas
les
fcmovnb
adc
bswap
push
push
mov
mov
xchg
lret
jno
bound
push
fwait
add
roll
inc
fsts
pop
rcll
dec
or
sub
add
aaa
xor
ret
sbb
lahf
in
pop
pop
pushf
xchg
jae
sub
adc
in
lods
adc
and
js
testl
dec
dec
mov
shll
and
xchg
xchg
lock
xchg
jle
mov
test
mov
cmp
movsl
sarl
pop
or
aad
arpl
push
sbb
aam
adc
fldt
jnp
sub
in
icebp
je
inc
xchg
scas
inc
clc
lret
js
inc
data16
loopne
jge
js
jl
xor
sbb
adc
lods
lds
mov
subb
hlt
sub
sbb
ret
pop
push
aas
mov
inc
adc
cli
jno
movsb
add
dec
pop
xchg
adc
adc
gs
jp
cli
outsl
icebp
cli
jl
sbb
and
dec
add
lret
and
xor
add
mov
mov
add
sub
aad
test
mov
loope
testl
mov
jmp
loop
adc
stc
repnz
push
std
jno
xchg
mov
push
xchg
add
lret
aam
or
add
sub
xlat
xchg
js
inc
test
dec
daa
sub
sarl
dec
and
popf
push
sti
repz
add
cmp
ficompl
sbb
sub
pop
inc
imul
out
movsl
lea
sbb
int3
clc
xor
or
or
int3
lret
sbb
xchg
imul
cmp
out
aas
mov
jmp
dec
cmp
mov
scas
imull
mov
sub
pop
dec
xchg
call
xor
sub
popa
lock
es
dec
pop
adc
stos
test
pop
aad
bound
jno
jmp
cmp
xchg
lds
xchg
push
add
pop
outsb
add
orb
mov
push
addb
inc
mov
pop
xor
imul
dec
test
jg
mov
shll
mov
hlt
testb
cltd
xor
sub
mov
pop
repnz
mov
popl
pop
sahf
ss
shll
jge
call
scas
in
hlt
enter
fdivs
sub
cmp
xor
rclb
push
testb
aas
mov
bswap
dec
int3
cmp
push
test
loop
add
inc
not
inc
imul
mov
and
adc
dec
jae
sub
mov
xchg
leave
rcrl
jl
mov
cltd
in
cmp
out
mov
shl
or
loopne
jne
push
xchg
or
lods
inc
outsl
cltd
add
icebp
sbb
cltd
mov
xchg
mov
and
cwtl
lock
sbb
aas
pop
ret
xchg
rolb
jae
and
xchg
jnp
arpl
divl
gs
sub
arpl
in
and
dec
xchg
pop
inc
dec
push
rorl
out
push
or
add
jp
rcrl
out
jl
mov
cmp
dec
fmull
subl
jmp
add
push
adc
aas
lea
lods
push
sbb
dec
or
jae
mov
inc
jecxz
repnz
bound
cmpsb
ljmp
adc
mov
out
cs
mov
rolb
in
les
xchg
insb
fcoml
lock
das
mov
ss
jle
ja
jg
pop
js
dec
cmp
lret
shrb
rorl
push
push
lock
jl
sub
fwait
pusha
cmp
sbb
fists
mov
stc
iret
stc
jnp
clc
dec
lahf
mov
xchg
in
ficompl
jb
pop
test
mov
adc
mov
hlt
fucomi
outsl
in
push
in
pop
shr
fistps
fiaddl
repz
pop
sbb
adc
in
arpl
movl
rcr
outsb
sbb
cwtl
and
sub
call
test
insl
imul
push
and
push
adc
fidivrs
dec
lds
mov
or
xor
or
lods
loope
outsb
xchg
xchg
loope
sub
jae
pop
leave
jmp
add
popa
mov
dec
xor
in
sarl
xor
ret
cmc
in
sbbl
ja
dec
adc
ret
or
fistps
pushf
pusha
fucomi
pop
testl
loop
popa
iret
lods
cli
sbb
mov
mov
mov
and
clc
fidivl
lcall
push
cmp
jae
push
andb
pop
rcll
ds
or
imul
push
mov
pop
mov
leave
or
daa
cltd
lret
aaa
xor
fsubl
rcl
adc
sbb
bound
fsubs
jge
adc
dec
push
mov
shrl
test
xchg
dec
xchg
add
inc
das
shl
push
xchg
popf
cmp
incl
cmpsl
mov
cmpsl
adc
test
pop
inc
cmp
sar
outsl
xlat
loope
xchg
jecxz
jnp
daa
ljmp
rorb
test
jecxz
push
iret
ret
lds
lahf
or
sbb
out
push
jb
push
xor
fstpt
repnz
cmpsb
lret
and
in
sub
movsl
mov
in
in
sbbl
inc
mov
pop
insl
add
movsl
hlt
sub
test
jg
loopne
pop
mov
mov
mov
and
xor
pop
sbb
xchg
shll
xor
rcrl
loopne
xor
inc
aam
adc
pushl
dec
xchg
push
push
sbb
addl
pusha
mov
lcall
jne
jne
pop
pop
rol
nop
cs
or
daa
adc
out
jnp
mov
xchg
stos
push
xor
cli
cmp
repz
sub
mov
cmp
adc
int3
lret
idivl
xchg
sbb
sbbl
cltd
out
ja
lods
in
xchg
rol
adc
aam
lahf
sbb
dec
ljmp
mov
xchg
nop
pop
jnp
and
sub
int3
rcl
clc
cmp
pop
test
movsb
outsl
mov
pop
gs
loop
xchg
mov
inc
mov
xchg
cmc
loope
mov
add
or
push
sub
lret
sub
push
sbb
mov
test
or
adc
xor
jmp
and
cmpsl
std
sub
add
inc
jmp
sbb
or
cwtl
xor
dec
in
dec
and
xchg
add
aam
or
mov
jnp
lea
movsb
iret
lret
mov
add
imul
xchg
in
imul
pop
loop
pop
mov
pop
movsl
adc
xor
gs
cmp
stos
xchg
sub
xchg
xor
and
movsl
std
loop
fcomi
scas
cltd
adc
xor
add
das
out
inc
mov
inc
cmp
lahf
repnz
stos
inc
in
dec
sbb
dec
lock
jmp
in
aaa
out
jnp
fdivrp
icebp
mov
xchg
int
fcomps
das
stos
fwait
mov
jmp
lods
mov
pop
or
ret
push
xchg
cs
pop
pop
or
add
push
les
pop
cwtl
pop
cmpsl
xchg
lret
mov
movsl
test
jmp
sub
ljmp
jg
pop
cmp
les
lea
and
insb
in
cld
dec
sbbl
rorb
popf
pop
call
enter
sbb
inc
adc
fdivrs
je
inc
sbb
cltd
pop
pushf
cltd
mov
jmp
mov
ss
sbb
xchg
dec
pop
test
pushf
pop
xor
das
adc
imul
sub
hlt
fsts
arpl
inc
test
mov
std
fisttpl
hlt
loopne
fstpl
out
cmp
and
mov
or
push
sub
imul
divl
and
and
frstor
dec
push
nop
mov
cmpsl
mov
not
pop
xchg
icebp
incb
sub
mov
pop
lcall
push
call
in
sbb
cwtl
scas
out
aad
dec
push
mov
jg
lcall
pop
sbb
pop
jg
pop
das
imul
shll
mov
mov
arpl
les
xor
xor
mov
push
in
out
sbb
or
push
inc
inc
lock
pop
inc
mov
decl
iret
push
cld
mov
cmp
enter
pop
jb
jne
and
jae
cltd
lods
stos
push
test
ficoml
jno
sub
or
jle
push
movsb
loop
out
lahf
mov
movsb
inc
insl
pop
dec
test
adc
jo
leave
and
xchg
rclb
orb
or
add
arpl
xor
jae
pop
andl
lcall
inc
rclb
cli
push
lock
andb
jae
push
repz
jo
arpl
cld
or
push
xor
ss
in
mov
pop
shlb
xchg
xchg
rcrb
mov
push
mov
pop
repz
stos
mov
add
ficomps
jmp
sub
loope
and
test
movsb
pushf
call
movsl
ficoms
aam
push
inc
push
dec
repnz
orl
push
pop
push
es
push
stos
mov
jmp
mov
push
js
inc
scas
ds
dec
inc
jl
sbb
mov
jns
mov
dec
sub
and
sahf
pop
cmpsl
xchg
rol
mov
cmc
pop
sarb
mov
add
pop
sbb
inc
lcall
pop
ljmp
sbb
pop
xchg
lcall
lret
add
mov
in
sarl
pusha
loop
xchg
orb
ret
add
in
cmp
cmp
xor
xor
mov
mov
sbb
sub
and
mov
jb
push
in
inc
test
cmp
aad
xor
mov
fmuls
orb
pop
hlt
in
incb
xchg
jl
pop
jge
popf
cld
in
addr16
movsl
pushl
popa
xor
ljmp
sub
sub
test
inc
jmp
pop
cmp
or
jle
dec
mov
and
test
xchg
pop
aas
movsb
stos
sub
pop
mov
inc
into
lcall
xor
mov
cmc
das
push
popf
stos
or
mov
push
sbb
repz
fdivl
repz
dec
add
mov
aas
xchg
subl
scas
mov
push
adc
scas
imul
mov
es
insb
mov
sub
out
cs
mov
mov
rcrl
movsl
sbb
cmp
and
fldenv
sub
insb
imul
outsb
std
leave
outsb
lds
jns
shlb
pop
stos
pop
in
jbe
clc
xchg
sub
mov
hlt
fsubrl
imul
sub
xor
inc
xchg
sub
push
and
insb
xor
daa
dec
cmp
in
sti
pop
jg
sub
jno
sarl
dec
test
jno
fst
fnstenv
and
mov
aaa
or
jbe
ror
mov
cmp
mov
fcoms
ljmp
popf
shlb
jp
cli
dec
hlt
int
xchg
in
push
mov
sbb
xchg
shl
mov
test
ret
lcall
outsb
mov
test
fs
je
mov
mov
fsubs
lds
add
lea
jp
in
pop
fadds
fildll
fdivs
and
mov
or
dec
fstl
push
push
sbb
sbb
out
add
es
ret
mov
orb
outsb
jns
and
adc
adc
jecxz
xchg
sub
add
arpl
dec
jb
add
cs
test
sub
call
clc
add
sbb
push
hlt
fnstenv
cmc
adcl
cmp
push
aad
jne
ror
add
repnz
arpl
enter
ss
popa
lea
shll
or
mov
pop
adcb
sub
and
fldl2t
adc
or
std
sahf
sbb
dec
mov
xchg
lret
inc
inc
roll
cmp
xchg
mov
push
je
push
dec
fsub
push
scas
pop
out
xchg
mov
popl
xchg
dec
fidivs
inc
nop
in
sbb
push
popf
push
aaa
ret
and
and
pop
lahf
bound
cmc
gs
mov
cmp
gs
add
push
iret
sbb
outsl
push
aad
push
loopne
sub
arpl
sbb
pop
mov
xchg
pop
push
pop
leave
out
xor
sub
mov
inc
fidivs
sbb
cmp
test
jge
out
sub
lcall
adc
cmpsb
rcr
xor
xor
pop
xor
adc
mov
sbb
xor
outsb
or
cmc
outsb
bound
add
insb
shr
jbe
and
pushf
frstor
lcall
shlb
sub
dec
imul
ljmp
cli
xchg
sub
iret
inc
push
mov
stc
cmp
push
mul
icebp
cmp
mov
dec
mul
fcoml
loopne
jne
sbb
sub
lods
sub
sbb
cmp
xor
int3
cmpb
insl
outsl
jae
sbb
dec
mov
jmp
rcl
je
and
mov
cmp
push
xor
cmpb
xchg
sub
imul
int3
xlat
cmpsb
nop
ds
dec
aas
lret
insl
icebp
rcrl
pop
mov
test
mov
cli
fcoms
xor
fdivr
or
repnz
jp
aam
jne
pop
xchg
and
out
and
cmp
gs
pop
sbbb
pop
cmpsl
adc
xchg
sbb
dec
repnz
add
or
jno
insl
inc
lds
add
inc
bound
cmp
or
adc
pushf
lahf
std
push
inc
xchg
addb
pop
test
adc
dec
shll
out
jmp
jmp
in
data16
loope
sub
add
add
test
lahf
xor
mov
in
pusha
ljmp
sti
mov
notb
add
sub
rcrb
gs
nop
xor
push
stc
and
stc
inc
xchg
stos
lods
nop
jge
jecxz
in
int
pop
movsb
sbb
dec
call
jl
in
dec
jle
pop
les
xorl
pop
popf
xor
fstp
adc
and
mov
rorb
mov
cs
aas
iret
push
cwtl
imul
adc
int
pusha
push
cmc
push
mov
ret
les
add
outsb
test
inc
ds
pcmpgtd
ret
push
cmp
sub
fwait
sub
loopne
mov
call
cmp
inc
or
rorl
pop
shrb
orl
ficoms
fnsave
stc
shlb
in
and
cltd
or
lds
jecxz
cmp
outsl
xchg
mov
stos
fnstsw
cmp
les
adc
mov
or
pop
fisubs
jnp
ds
adc
inc
xor
xchg
hlt
sbb
jp
push
scas
ret
xorb
dec
cld
scas
pop
push
scas
fwait
bound
icebp
push
mov
orl
hlt
aam
addr16
inc
inc
ljmp
and
inc
pusha
lahf
cmp
fmuls
das
out
push
lock
dec
mov
cs
mov
daa
push
or
jmp
pop
lods
mov
sub
in
mov
add
push
scas
mov
iret
adc
dec
xchg
pop
mov
sti
out
cmp
test
out
xchg
jnp
pop
aad
push
add
lods
orb
jo
jae
stos
xchg
push
mov
xlat
lret
fistps
pop
aas
xchg
sub
jecxz
pop
adc
paddsw
fwait
lods
lret
mov
jbe
into
mov
out
add
mov
and
sbb
jno
add
call
mov
adc
cmp
dec
jne
stc
rclb
addr16
pop
mov
xchg
xor
jo
sbb
and
ja
sub
pusha
cmp
dec
rolb
sbb
add
pop
push
and
fcmovnbe
aas
mov
sbb
lahf
cmp
sbb
push
outsb
iret
xchg
popa
mov
dec
push
data16
or
fs
mov
das
pop
jmp
jl
mov
lret
mov
fisubrs
xor
pop
jns
jecxz
pop
cmp
pop
pop
mov
pop
mov
cli
mov
in
adc
mov
popf
enter
sub
into
sub
rol
ljmp
ja
ror
shr
ret
ret
sub
testl
lds
add
jge
mov
mov
xchg
icebp
js
int3
sub
lret
es
cmp
fldt
sub
ficoms
test
stc
mov
repz
stc
lret
sbb
test
cmp
sbb
aaa
push
addr16
jo
movsl
adc
push
cltd
mov
push
out
pop
aam
mov
mov
xchg
out
xor
popl
inc
hlt
mov
clc
xchg
and
and
dec
fisubl
enter
jns
mov
add
shlb
shrb
fistpl
pop
jno
pop
rcrl
in
sti
les
sbb
lahf
cli
mov
mov
and
adc
shrl
out
pop
pop
push
dec
fstps
pusha
xlat
aas
push
jle
mov
jns
mov
push
push
xlat
inc
cmp
pop
shr
push
jb
loopne
cmpsl
out
stc
push
or
sub
inc
fimull
sarl
ss
xlat
adc
pop
and
mov
push
pop
add
adc
inc
xor
daa
test
data16
dec
scas
cmp
test
insb
jle
aaa
popl
mov
sub
jns
into
movsb
sti
in
iret
cld
dec
das
xchg
dec
in
xchg
mov
call
xlat
mov
or
adc
sbb
push
leave
cltd
adc
jo
mov
arpl
mov
in
xor
sub
add
fisubl
xchg
or
scas
bound
adc
mov
ds
mov
cmp
sti
and
sbb
nop
inc
loop
insb
mov
push
and
clc
rclb
xchg
out
xchg
packssdw
cmp
sahf
mov
insl
test
dec
sub
js
scas
dec
xchg
insb
shlb
and
push
lcall
push
inc
adc
inc
mov
push
xchg
xchg
dec
sub
cmp
fstps
lock
fimull
xor
dec
out
adc
cmp
adc
mov
lret
and
sub
and
pushf
mov
xlat
movsb
dec
fmul
mov
scas
mov
out
push
push
push
jnp
adc
into
dec
scas
inc
js
lea
aaa
push
sbb
shl
jmp
cmpsl
push
mov
addr16
fmull
les
adc
clc
aas
mov
or
xchg
push
movsb
into
enter
sub
xor
adc
lds
sbb
insb
or
push
addb
lahf
sbbb
scas
sub
fistpl
cwtl
dec
xor
shl
jmp
pushf
imull
loopne
jb
movb
mulb
jbe
mov
cli
jbe
mov
xor
rclb
in
imul
lcall
fsubrs
dec
arpl
jle
sub
and
cli
clc
mov
push
xor
dec
inc
mov
jecxz
testl
add
add
dec
inc
adc
adc
pop
shlb
clc
loopne
jge
inc
into
dec
lahf
xchg
or
dec
cwtl
pop
stos
aam
sub
mov
xchg
inc
stos
push
xchg
add
xchg
mov
or
or
sbb
pop
sahf
outsb
inc
stos
je
sbb
std
push
cld
jmp
push
pop
xor
out
add
movsl
inc
sub
scas
cmc
cmp
mov
rcrl
cmp
outsl
insb
inc
cmpsb
dec
cmc
das
das
test
add
xor
xchg
test
aad
mov
cwtl
lret
xor
push
push
xchg
fmull
icebp
lock
outsl
dec
lock
pop
and
shrb
mov
xor
pushf
cmp
add
stos
or
test
push
push
dec
push
in
mov
mov
outsl
add
push
and
faddl
pop
loope
das
je
call
lcall
cmp
movhlps
xchg
xor
mov
iret
pop
xchg
xchg
jne
aam
push
dec
cltd
cmc
inc
dec
xor
es
lods
add
cmp
mov
cmp
sbb
clc
pop
cmp
fwait
scas
cmpsb
icebp
aaa
push
xchg
outsb
push
or
adc
lods
ss
movsb
lods
cmpsl
in
jge
ss
mov
loop
jp
dec
mov
lcall
sbb
adc
cmpsl
xchg
rorb
mov
xlat
xor
lahf
or
push
jecxz
into
dec
sub
stc
jecxz
inc
mov
mov
sahf
sbb
jne
test
shrl
xchg
add
movsb
in
scas
out
inc
sahf
stos
fldt
xrelease
cli
push
push
mov
aad
push
jle
lret
mov
mov
popa
sbb
outsb
or
or
mov
mov
sub
xlat
imul
fmuls
jle
movsl
pusha
cmpsb
mov
pop
jmp
loop
push
pop
ficompl
stos
mov
cli
sub
arpl
adc
popa
sbb
mov
les
push
or
loope
cmp
lds
inc
aas
out
xchg
sbb
je
jge
pop
mov
mov
cmp
pop
fcoml
in
popa
ret
cmc
or
jge
idivl
insb
fistpl
mov
nopl
shll
bound
adc
js
enter
cmp
mov
dec
add
pop
mov
inc
adcb
inc
mov
mov
pop
in
lods
jle
xchg
addr16
stc
inc
xor
fisubs
mov
xchg
std
push
lds
and
dec
pop
push
adc
shll
pushf
data16
push
jl
mov
xor
mov
movsb
test
push
rolb
leave
pop
lds
addr16
pop
push
cli
inc
popa
or
mull
mov
mov
in
dec
jle
xchg
fstps
gs
mov
xlat
stos
add
ret
mov
insl
pop
popf
popa
add
sub
ja
mov
pop
aaa
shrb
imul
cmp
mov
xor
pop
andb
stos
scas
aam
jge
mov
xchg
outsb
sarl
jmp
push
inc
cmp
adc
loopne
dec
iret
aas
sbb
push
arpl
lods
into
hlt
ds
jp
or
sub
pop
xor
xor
xchg
roll
jb
pop
push
mov
ljmp
xchg
jg
scas
lahf
or
mov
sbb
push
push
or
ret
and
out
enter
add
movsl
nop
test
testb
mov
lods
or
mov
sbb
inc
sub
aad
lods
pop
push
xor
jle
add
mov
test
mov
jnp
push
ret
clc
mov
cmp
jne
sbb
sbb
xchg
cmpsl
pop
xchg
add
xor
pusha
lret
mov
pop
lret
mov
adc
int3
or
cmc
mov
add
neg
shlb
mov
jg
cs
imul
orb
arpl
insb
leave
fadds
jg
add
pop
dec
mov
sahf
add
or
mov
adc
pop
fs
ljmp
and
xchg
mov
mov
push
jp
jecxz
and
sbb
dec
hlt
lods
fnsave
call
xchg
xorb
shll
inc
push
jnp
lcall
mov
add
sub
sub
jnp
xchg
and
arpl
mov
add
outsl
dec
sbb
insl
rol
sbb
xchg
popa
adc
in
es
lods
ret
pop
xor
jp
jg
adc
ljmp
cld
push
les
iret
or
xor
out
lret
into
shlb
call
out
mov
mov
cmp
mov
out
gs
or
push
aam
cmpsb
insl
leave
inc
sub
stc
out
das
mov
dec
mov
mov
rorl
fwait
xor
xor
add
xor
mov
clc
clc
test
or
out
sub
lock
fisttpl
jbe
mov
dec
roll
adc
inc
mov
in
xor
cmp
fstps
mov
cmpsb
fisubl
adc
mov
in
pop
popf
lods
movsb
hlt
xchg
xchg
and
aad
lcall
pop
ja
fneni(8087
pusha
ja
dec
push
jmp
mov
push
ds
cltd
xor
adc
dec
add
push
in
cmpsb
sti
pushf
adc
add
sub
xchg
outsl
movsb
daa
loopne
sub
sub
adc
std
xor
call
imul
popl
jle
arpl
mov
inc
pushf
jp
jle
test
mov
jp
xlat
and
mov
or
cmp
mov
jbe
jle
and
mov
cli
mov
cmp
sahf
mov
sbb
dec
or
popl
ja
xchg
mov
fmul
push
sub
xchg
popf
inc
addr16
fs
andb
pop
adc
pop
notl
fcmovb
leave
sbbl
shrl
jle,pt
cmp
jge
and
movsl
adc
mov
repnz
fcmovnu
cwtl
inc
lea
insl
and
jge
pop
les
inc
xchg
mov
test
aad
out
mov
clc
push
fstpl
mov
pushf
loope
scas
sbb
sub
sbbb
ds
cmp
dec
and
aad
sti
xchg
mov
cwtl
sbb
icebp
jae
iret
stos
cmpsl
cmp
add
mov
scas
inc
lret
out
cld
push
or
cwtl
mov
push
popa
stc
jns
xchg
aaa
mov
cmc
sbb
jmp
cmc
mov
insb
dec
in
or
mov
xchg
jb
mov
divl
addr16
push
push
insb
out
cmp
push
push
add
arpl
jl
jae
mov
sbb
mov
je
out
cmp
iret
lods
lods
testl
nop
inc
lods
pop
fadds
adcl
and
pop
pusha
movsl
aaa
leave
inc
pop
add
push
mov
inc
xchg
hlt
fidivs
dec
jmp
into
lret
movsb
add
adc
nop
test
push
inc
sbb
js
mul
and
jge
cmc
xchg
mov
cwtl
mov
sbb
mov
gs
pop
loop
stc
pop
mov
cmc
mov
mov
test
jp
js
sbb
jbe
stos
adc
pusha
enter
aad
mov
mov
sahf
insb
adc
shlb
xchg
jge
jl
mov
ret
femms
arpl
mov
aad
or
fmulp
mov
aad
pop
dec
imul
jns
sub
mov
mov
jo
pcmpgtd
pop
nop
mov
dec
aad
pop
psubw
loope
sbb
bnd
sbb
jnp
or
cltd
and
ss
sti
ljmp
mov
sub
lds
ja
js
imul
add
push
mov
testl
pop
or
int
hlt
lahf
jno
inc
lock
push
popf
loopne
xor
jae
aad
shl
add
mov
pop
iret
push
sub
and
cld
pusha
or
stos
mov
jp
inc
aaa
pop
in
inc
icebp
mov
in
clc
popf
or
mov
pop
in
inc
popl
subb
adc
in
add
adc
shll
mov
sub
ret
aam
cmp
xor
sbb
ja
enter
jno
add
lahf
xor
int3
mov
or
pop
scas
xchg
lcall
stos
xchg
rcrb
inc
push
insb
xchg
jbe
lcall
fwait
xor
lahf
dec
dec
sbb
xchg
adc
nop
jno
jns
outsl
jno
pushf
stos
push
or
and
andl
jo
add
xlat
cmp
insb
cmpsb
ljmp
mov
or
dec
lcall
cmc
repnz
fcmovbe
cmpsb
insl
sbb
xchg
or
xor
mov
jno
inc
dec
mov
xchg
lahf
sub
ret
sub
cmp
xor
pop
fistl
jno
add
test
in
mov
mov
int3
hlt
adc
pop
jne
pop
push
jae
dec
orb
push
dec
leave
mov
jl
ficomps
cs
push
fucomip
xchg
jmp
aaa
add
nop
clc
adc
jp
dec
adc
inc
inc
mov
dec
xor
enter
lret
dec
mov
cmpsl
jp
dec
ja
pop
push
cs
mov
and
xchg
mov
cwtl
repz
sarl
mov
push
mov
dec
xor
push
cmpsl
out
xor
js
fisubrs
inc
imul
fldcw
lds
pop
xor
in
jge
mov
daa
dec
pop
mov
mov
pop
mov
in
mov
test
loopne
fstpl
test
nop
lcall
xchg
push
or
or
or
xor
dec
mov
pop
mov
cltd
sti
jnp
pushf
jne
faddl
mov
and
decl
pop
cmp
lock
mov
push
add
mov
mov
xchg
jns
cld
ds
jg
enter
xchg
fwait
cmp
cmp
fildll
pop
stos
insb
cmpsl
in
ret
ret
fcomi
xchg
xchg
sti
xchg
push
xor
mov
data16
push
jb
jp
xchg
outsl
sub
bound
push
mov
sub
jmp
jae
sbb
pushw
addr16
ljmp
imull
mov
jg
decb
mov
rcr
dec
popf
movsl
jge
mov
fwait
sbb
xchg
and
push
das
sub
outsl
test
loope
jno
inc
push
mov
test
ret
cmpsl
xor
push
aaa
aam
lret
jo
add
leave
xor
stos
mov
in
jmp
int3
push
pop
fnsave
ljmp
or
jp
xchg
lds
jmp
int
and
cmp
les
sbb
test
loop
sub
xlat
arpl
sbb
loop
xor
fs
cmc
inc
dec
addr16
mov
dec
jl
sbb
or
push
ret
mov
std
in
inc
xor
hlt
imul
fcmovb
in
stos
es
testb
or
aaa
ja
jmp
or
adc
sbb
movb
roll
addr16
mov
int
mov
mov
leave
xor
jb
jae
out
loope
mov
add
sbb
aaa
push
xor
adc
sbb
cltd
add
cmp
fistl
xchg
mov
pop
in
sub
enter
pop
jg
add
sbb
push
add
xor
jb
repz
cmp
push
mov
jge
push
scas
pop
mov
mov
call
dec
push
or
and
pop
add
stos
add
cmp
or
xchg
fistl
add
jno
push
stc
jmp
jb
movsb
push
ret
cli
cmp
jo
or
cmp
aad
sbb
test
mov
xchg
inc
push
mov
mov
jge
inc
jb
jo
aaa
mov
mov
mov
lcall
push
sub
and
ljmp
test
jae
clc
test
clc
adcb
mov
push
jmp
cltd
xor
rorl
mov
xor
dec
jl
lds
into
stos
cld
into
leave
pop
push
jmp
ret
jns
out
jg
mov
into
pusha
lock
push
lods
repnz
movsb
sti
sahf
fisubl
fldcw
cli
sub
inc
mov
fstpt
sub
inc
jmp
lea
xchg
push
sub
pop
jg
cmc
adc
push
sti
pop
xor
lret
pop
jge
adc
lret
mov
push
insl
and
dec
and
dec
sbbl
popa
jle
data16
mov
pop
inc
in
mov
stos
and
pop
cmp
movd
cmp
cmpsl
imul
outsl
incb
fs
xor
sbb
pop
sbb
divl
dec
cwtl
jno
into
gs
dec
iret
lret
in
dec
pop
les
dec
shr
jo
loop
mull
cwtl
inc
mov
mov
clc
add
lods
dec
push
sbb
jno
pop
mov
mov
cmpsb
xor
jg
fcmovnb
cmpsb
mov
mov
aad
shrl
push
jmp
cmc
outsb
cmp
cld
inc
outsb
jae
movsl
mov
imul
cld
shl
dec
inc
jmp
paddusb
xor
xchg
ffreep
fdivrl
sbb
jmp
rorl
rol
std
or
mov
cltd
lds
cwtl
or
lock
out
cs
addr16
or
pop
iret
push
movsb
pop
das
and
cmp
inc
into
out
out
xchg
test
jno
pop
xlat
js
mov
sbb
inc
mov
fsubrl
add
mov
mov
jno
adcl
shll
rcll
sub
call
xor
mov
push
loope
inc
aas
push
adc
xchg
jge
setno
xchg
jnp
dec
ret
xchg
rcrb
orb
popf
sbb
pop
addl
nop
jns
leave
mov
xchg
fidivl
jmp
pop
dec
in
cld
push
cmpsl
mov
jns
and
cmp
into
or
test
ds
and
ja
popf
xchg
subb
in
pop
call
mov
dec
inc
inc
xchg
pop
mov
cli
or
jns
in
int3
inc
and
xlat
fdivrs
push
pop
out
xor
jae
xchg
loop
out
cli
andb
push
or
push
mov
cmpsl
sbb
movsb
adc
in
ljmp
adc
lcall
cmp
rsqrtps
lret
pop
and
adc
add
push
sbb
loopne
pop
outsl
push
push
adc
or
sub
fmul
inc
mov
aaa
push
out
inc
xchg
mov
loopne
or
cmpb
hlt
popa
jnp
and
scas
pop
ds
js
test
popf
inc
sti
mov
loope
xchg
xor
pop
mov
mov
clc
mov
test
pop
dec
out
scas
inc
push
fsubl
adc
mov
mov
sahf
mov
sbbb
add
pop
push
cwtl
mov
mov
cmp
push
and
add
jmp
mov
jl
add
notl
add
fs
je
movsl
std
xor
shlb
inc
push
or
jbe
jmp
xor
jbe
mov
iret
imul
stc
flds
cmpsb
mov
dec
loope
ret
inc
mov
or
jne
imul
lcall
repz
inc
inc
push
fmul
ja
sbb
adcl
test
xlat
fcoms
call
xorb
aaa
inc
and
das
insb
inc
lods
sub
lods
push
loopne
pop
pop
xor
sub
push
inc
jne
pushf
lds
push
rcrl
mov
lods
push
testl
sarl
scas
in
cld
sbb
into
aam
lea
push
push
call
lret
jecxz
ficomps
lea
out
cli
lods
xor
dec
xor
in
inc
xor
popa
loopne
shrl
xor
jbe
bound
loopne
lahf
or
pop
jecxz
xor
sti
sti
pusha
mov
mov
sahf
mov
sbb
flds
test
out
xchg
inc
mov
and
std
aas
sbb
cmpl
dec
xchg
inc
je
call
jbe
add
adc
mov
add
sbb
and
aad
mov
clc
lea
or
shlb
jge
sbb
dec
jecxz
lahf
cmp
decb
pop
sbb
icebp
std
or
scas
in
dec
aam
mov
aas
sbb
mov
add
daa
aas
cmp
cmp
cmp
lahf
aaa
das
imul
fcmovne
inc
inc
mov
dec
shl
jp
jo
push
xchg
aad
or
iret
sub
loope
jbe
gs
aaa
mov
mov
mov
test
loope
push
ret
and
jl
inc
mov
icebp
movsl
inc
into
adc
cmp
inc
popa
sahf
insb
stos
andb
das
push
dec
mov
loope
push
sub
sahf
mov
movsb
cmp
cmpsl
test
or
add
pop
fcom
cmp
mov
cmpb
inc
roll
xchg
adc
daa
imul
out
jmp
ds
stc
adc
xor
mov
push
adc
sti
cmp
cmp
in
js
push
jg
pop
mov
aas
jecxz
mov
mov
or
or
stos
repz
adc
seto
stos
jo
push
jge
fmull
jno
adc
test
jge
cs
xrelease
insl
in
mov
loop
and
aam
mov
mov
notl
pop
sub
xchg
fnstcw
xchg
sbb
loope
jle
jnp
pop
xchg
hlt
xlat
dec
xlat
pop
xor
xlat
nop
aad
clc
fs
add
bound
insb
cltd
push
mov
aas
decl
jl
mov
das
out
lods
pop
jnp
shlb
lret
cmp
pop
sub
adc
lods
cltd
imul
emms
mov
fcompl
cmp
cmc
xchg
stos
test
movsb
xchg
push
mov
dec
inc
lret
jmp
into
push
cld
jg
test
xor
out
loop
testl
sbb
sti
repnz
cmpsb
xlat
repnz
jge
pop
pop
mov
mov
jp
cmp
or
shll
test
lea
dec
stos
pop
fs
movsb
pop
xchg
les
adc
mov
out
arpl
int
push
push
mulb
dec
xchg
cwtl
lret
adc
and
xchg
aam
mov
mov
subb
addr16
mov
ret
xor
or
inc
dec
or
inc
mov
inc
repnz
push
in
inc
cltd
scas
insb
in
lcall
or
mov
mov
inc
cld
mov
push
icebp
inc
sub
sub
jo
icebp
jbe
adc
es
cs
outsl
cld
imul
jbe
mov
mov
loop
aas
dec
lcall
inc
mov
xor
push
gs
push
adc
imul
js
jns
mov
js
pop
fiaddl
dec
cmp
jge
shrl
or
mov
jb
push
mov
nopl
add
push
repz
push
test
icebp
sbb
and
mov
fisubs
inc
push
jne
into
mov
scas
mov
mov
add
in
push
dec
push
push
dec
xchg
les
sarb
jae
outsb
xchg
stos
inc
cmp
jge
ret
out
sbb
pop
insl
fildll
rcr
sbb
cmp
sahf
clc
lret
test
ret
fsubr
sub
data16
adc
pop
inc
loopne
dec
inc
out
and
hlt
inc
mov
cltd
test
ljmp
add
adc
mov
inc
fst
mov
push
aam
test
mov
rcll
cmpsl
shlb
fiadds
jns
dec
push
imul
push
xor
ret
lcall
pop
adc
movsb
loop
and
or
sbb
mov
mov
imul
lods
jecxz
cld
push
jecxz
mov
das
loope
enter
jecxz
scas
adc
jns
aaa
jmp
and
mov
jecxz
sbb
mov
stos
and
lock
push
dec
popa
inc
push
sub
aad
rcll
dec
fucom
jle
sbb
lock
xchg
sbb
data16
jle
lret
dec
ret
and
int3
xlat
mov
sbb
test
fcomps
int3
sets
adc
xchg
movsb
jns
pop
jns
popa
sbb
int3
fmuls
out
movsb
imull
stos
mov
je
pop
xlat
xchg
push
fsubrs
sub
das
in
xchg
jmp
bnd
loopnew
pop
xchg
add
mov
mov
loopne
ret
das
sar
dec
rclb
out
or
cmpsb
pop
adc
cmp
scas
imul
sub
pop
cs
cmp
outsb
loope
mov
sti
imul
in
loope
jmp
xor
and
jne
fdivr
jne
loope
mov
sbb
sub
cs
cld
sbb
xchg
xlat
sbb
test
iret
dec
ficompl
test
jmp
in
jecxz
ror
rorb
jg
pop
add
add
outsl
pop
add
push
imul
xor
jne
fwait
stc
push
sub
inc
jo
push
sub
jne
lea
mov
cmp
xor
cmpsl
outsl
mov
push
movb
xchg
fsubs
xchg
call
fsubrs
pusha
dec
fdivr
xchg
add
jle
aaa
jmp
jmp
loop
test
ror
sub
and
cmp
xchg
std
and
sbb
mov
cltd
ja
cmp
push
out
mov
ss
xchg
xchg
fucomi
pusha
or
test
mov
popa
rcll
stos
and
or
mov
aaa
and
les
inc
inc
xor
mov
in
fsubr
movsb
dec
sub
lcall
mov
sbb
inc
shrl
ds
pop
sbb
mov
sbb
das
decl
push
inc
fwait
push
push
jo
shrl
rcll
into
rclb
inc
cmp
jle
outsb
push
cmpb
sub
aaa
sub
in
es
push
sbb
or
adc
and
out
insl
cmc
repz
pop
mov
adc
lret
push
xchg
or
addr16
dec
loopne
cmc
loope
dec
mov
scas
mov
rolb
cmc
rcr
adc
ljmp
movsb
out
daa
jnp
push
sbb
mov
sbb
push
addr16
dec
push
in
xchg
mov
adc
inc
jnp
xchg
cld
in
dec
shrl
jno
int
sbb
add
inc
dec
adc
cmp
nop
lcall
clc
xor
pusha
movsl
into
aam
dec
add
xor
lahf
sbb
stc
mov
lea
pusha
push
mov
daa
je
addr16
sbb
out
into
dec
add
sti
jmp
aaa
jmp
insl
pop
insb
shll
dec
lret
lds
sbb
xchg
mov
pop
jae
je
int
or
repnz
pop
mov
pop
or
adc
xchg
jne
outsl
dec
dec
loop
dec
add
rcl
sbb
out
ficoms
fstps
xor
inc
rol
imul
fwait
outsb
data16
inc
sar
in
mov
mov
cld
inc
in
cmp
repz
dec
push
insb
test
jnp
fmuls
add
and
inc
cmpsb
sub
repz
mov
adc
add
push
adc
in
loopne
adc
movsb
stos
imull
jb
cmp
pop
jno
sbb
loopne
mov
loope
mov
fwait
adc
pop
lods
pop
pop
xchg
adc
xor
movsl
inc
xor
push
and
out
or
icebp
int3
mov
popf
sar
mov
adc
cmpsl
pop
jl
or
inc
or
adc
clc
fdivp
jbe
mov
int
ret
push
xor
inc
hlt
clc
cs
adcb
adc
pop
sub
push
movsl
repz
lahf
xchg
jns
pop
push
mov
test
xchg
mov
add
out
push
mov
push
sbb
daa
and
mov
xchg
leave
cmc
add
stos
sar
cmpsb
mov
sub
and
lds
out
pop
jmp
insb
clc
or
add
pop
arpl
mov
lds
dec
mov
dec
xor
enter
or
inc
and
leave
popa
in
mov
in
faddl
out
addb
lods
aaa
test
loopne
pop
iret
int
xor
mov
or
test
mov
xor
push
sbb
mov
jle
icebp
cmpxchg
xchg
mov
pop
jmp
pop
std
jecxz
les
pop
push
mov
add
mov
pop
lcall
lea
cmp
adc
jnp
cmp
out
mov
add
rorl
or
aad
push
lahf
fldenv
and
orb
aam
dec
pop
aaa
adc
or
jo
pusha
push
add
sub
dec
jno
into
sbb
jle
stos
inc
fnstenv
pushf
mov
stos
jl
xchg
adc
les
or
test
sarl
jmp
jle
rol
outsl
push
xor
adc
repz
mov
mov
push
popa
adc
arpl
push
je
and
dec
mov
stc
lahf
sbb
cld
lods
cmp
sbb
mov
call
xchg
mov
add
xor
aaa
arpl
loop
sub
bound
int3
std
pop
icebp
inc
inc
icebp
mov
ljmp
mov
and
je
ljmp
clc
test
aad
sub
push
fcomps
or
gs
xor
ds
jmp
in
sub
test
mov
cmp
push
add
mov
mov
inc
sahf
lock
je
xchg
fdivrl
inc
aaa
jge
loope
cld
pop
mov
cltd
fs
in
add
es
xchg
movsb
inc
scas
iret
cmpxchg8b
pop
icebp
push
xchg
xchg
sbb
in
repnz
mov
jge
xor
sahf
cmp
rorb
pop
adc
cmc
xor
in
adc
test
sti
jo
lret
test
or
leave
add
adc
xchg
stos
std
dec
cmp
adc
lcall
in
loop
outsb
je
out
push
mov
cmp
mov
cld
daa
sarl
push
and
shll
dec
shll
sub
stos
cmpsb
push
pushf
mov
xchg
mov
add
mov
sub
sbbb
imul
outsl
pop
dec
push
iret
int
popa
movsl
rclb
call
scas
arpl
push
cltd
or
xchg
pop
xchg
clc
push
xor
das
les
out
daa
mov
scas
mov
aad
pop
sbb
sub
push
push
adc
inc
pop
dec
mov
dec
jp
in
jns
sbb
adc
jns
or
mov
adc
icebp
jbe
inc
fnsave
xchg
sbb
jge
add
lods
inc
rcr
cmp
je
int
push
and
push
icebp
mov
movsl
imul
movsl
outsl
push
inc
fiadds
inc
dec
adc
jno
ret
add
gs
or
mov
xor
sub
cmpl
mov
js
scas
aaa
lods
insb
dec
int
dec
loop
add
sbb
pop
cwtl
outsl
push
or
add
je
and
rsqrtps
nop
rcll
xlat
sbb
in
mov
jle
sbb
jne
jo
das
pop
pop
cs
push
adc
das
sub
dec
enter
aam
mov
out
sub
out
iret
or
inc
dec
push
ss
cs
pop
rclb
mov
imul
fs
sbb
add
fcmovu
push
xchg
movsb
sti
mulb
out
mov
xor
cmp
sub
add
lret
call
dec
push
stc
movq
add
push
pop
shll
xchg
adc
jne
ljmp
and
popf
stos
or
push
push
rcll
jl
jg
ret
xchg
inc
push
sbbb
mov
orl
cmpsb
out
pushf
xor
mov
lea
arpl
sbb
jg
das
xchg
int
fcmovnb
lcall
cmp
not
es
lds
push
pushf
xchg
mov
mov
jae
adc
cmp
fcmovu
pop
rolb
sbb
lock
leave
in
cmp
or
push
loop
mov
mov
aaa
push
cmp
add
stos
lods
addb
clc
out
jp
add
sub
add
stos
es
mov
xchg
inc
jo
mov
jl
dec
loopne
mov
add
cmp
jg
int3
out
lds
insl
popa
scas
xchg
out
call
jl
data16
data16
mov
sarl
add
jg
movsl
push
rcrl
xor
pop
sti
je
or
xchg
shlb
data16
push
je
dec
hlt
gs
bound
jns
push
daa
fcmovnbe
cmp
into
xchg
sbb
jb
sar
pop
or
cwtl
mov
jmp
inc
stc
pop
dec
xchg
add
aaa
push
push
jp
cmp
int3
cmpsb
lds
movsl
std
pop
shl
push
outsl
or
sbb
sbb
mov
push
movsb
inc
shll
sahf
pop
add
icebp
inc
xchg
push
cmp
xchg
orb
std
adc
adc
cmp
sbb
scas
add
adc
cs
dec
repnz
lret
inc
cmpsb
add
xlat
mov
adc
push
or
pop
adc
dec
and
out
adc
lret
mov
icebp
pop
aaa
cmpsb
ljmp
mov
jno
mov
stc
xlat
pop
leave
cmp
cmp
inc
mov
sti
cmpb
inc
je
push
fwait
or
ficomps
ss
in
lock
es
jns
scas
pop
push
cmp
subl
dec
cld
mov
jg
pop
inc
and
push
push
lods
out
ret
pop
sti
pop
jl
mov
push
mov
jg
hlt
add
and
xchg
mov
popf
pop
inc
int3
rol
aam
rcrl
xchg
cwtl
dec
insl
scas
pop
jmp
popf
insl
mov
xchg
mov
sarl
sbb
jmp
xor
xchg
lods
jmp
inc
in
lcall
and
clc
jg
add
pushf
sahf
jae
adc
sarl
mov
and
ret
bsf
mov
sti
xchg
jbe
dec
jo
and
and
push
insl
push
imul
nop
movsl
inc
sbb
jp
or
jle
and
jo
push
mov
icebp
mov
xor
jo
test
mov
aas
idivl
cmp
jl
xor
xchg
jnp
sbb
rorl
imul
sub
ljmp
hlt
ss
mov
jg
dec
andb
jae
movsl
adc
and
sbb
decl
lret
stos
xchg
mov
rcll
mov
loope
or
xor
movsb
popf
outsb
dec
scas
and
jmp
ret
pop
mov
xor
in
aaa
adc
je
inc
push
or
mov
filds
insl
pop
dec
dec
stos
xchg
out
das
push
hlt
add
fdivp
pop
lcall
mov
insl
add
cmp
jns
mov
ret
std
xlat
mov
xchg
jp
adc
sbb
jge
jae
mov
lds
push
pushl
sbb
popf
mov
push
daa
dec
xchg
sbb
pop
pop
dec
xor
inc
adc
mov
sbb
push
jne
pusha
cmp
notl
and
pop
jbe
int3
pop
adc
loopne
or
lahf
vcvtsd2si
dec
sub
fisubrs
mov
add
icebp
sbb
sbbb
xchg
mov
sarl
cmpsl
pop
addb
xchg
mov
xlat
mov
insb
cmp
mov
xchg
sbb
sub
jae
call
cmpsb
adc
mov
insb
and
cmpsb
sbb
xor
or
mov
je
mov
push
mov
shll
arpl
sbb
repz
jle
mov
rcr
out
jno
movsl
in
mov
cli
scas
gs
xchg
jbe,pn
repz
repnz
js
xchg
pop
jg
push
jb
insl
add
lcall
test
daa
and
rcll
lods
add
cmc
inc
pop
xchg
adc
std
scas
push
inc
fcoms
jmp
loop
aad
and
push
push
mov
add
push
mov
xchg
cltd
xor
xlat
dec
jl
ljmp
push
jmp
clc
insb
out
jnp
jmp
inc
scas
or
mov
test
jg
cli
inc
pop
mov
jnp
repnz
push
mov
iret
jmp
in
fs
dec
pop
sub
mov
outsl
push
insb
push
ficompl
inc
ret
mov
mov
or
scas
jmp
fs
imul
mov
dec
sub
inc
adc
mov
test
sub
in
in
jecxz
icebp
ljmp
sahf
cwtl
orl
js
cmc
cwtl
scas
pop
and
and
or
mov
aaa
add
adc
fnstcw
aam
fiaddl
or
sbb
es
push
xchg
pop
aaa
mov
outsl
das
xor
and
rol
sbb
mov
movsl
lea
jge
jo
adc
inc
inc
mov
dec
inc
mov
pop
mov
push
mov
mov
add
jg
cmp
push
gs
sbb
aad
fistpll
mov
enter
dec
shr
movsb
cmp
aam
mov
xchg
mov
push
cmp
nop
cmp
xchg
push
stc
add
pop
and
repnz
pop
loopne
int3
data16
mov
cmpsb
int3
xor
inc
in
mov
not
or
std
sti
inc
xchg
add
sub
mov
movsb
test
divl
test
mov
sarl
in
int3
cmc
lahf
sahf
or
mov
ja
xor
sbb
xor
mov
lods
je
xchg
pusha
or
sbb
xchg
arpl
stos
ret
inc
in
in
inc
inc
or
in
clc
mov
jbe
jecxz
ret
movsb
jecxz
sub
int3
mov
dec
imul
arpl
cwtl
mov
faddp
or
push
dec
out
fwait
data16
inc
or
leave
iret
jp
fnsave
sti
lods
adc
rclb
out
out
mov
fsubrs
repz
pop
push
pop
xchg
add
dec
call
repnz
sub
idivb
int3
cmp
push
push
dec
pushf
adc
jno
dec
imul
dec
bound
ds
mov
xor
test
pop
inc
in
push
bound
lret
push
xor
out
in
imul
js,pt
inc
pusha
xchg
xor
xor
sub
jns
mul
enter
pop
push
adc
add
push
lret
pop
in
loope
sbb
shrl
and
fiadds
xchg
lods
xchg
mov
xor
jecxz
xor
mov
add
jl
scas
stc
out
cmp
push
imul
stos
hlt
xor
cmp
pop
cmpsl
insb
aam
dec
sub
dec
mov
xchg
sub
out
or
pop
movsb
sbb
sub
and
mov
push
arpl
int3
out
sti
and
test
xlat
inc
pusha
push
cmp
pop
push
mov
cmpl
pop
rcr
pop
mov
jo
out
jl
and
add
gs
mov
push
pusha
sbb
pushf
xor
cmpsl
nop
push
filds
xor
or
addr16
mov
jmp
or
aad
or
fwait
inc
pop
shl
pop
pop
sub
dec
mov
outsl
subb
shlb
imul
cmp
lret
out
mull
icebp
mov
mov
subl
push
cmp
call
cmp
inc
or
int
pop
mov
cmpb
fisubl
call
test
mov
jg
loop
inc
mov
jmp
out
jno
sbb
inc
rcll
mov
xchg
or
nop
jne
jge
pop
and
xor
neg
jae
add
cld
std
in
jp
mov
mov
pop
das
lcall
divps
adc
dec
gs
inc
inc
and
icebp
xchg
add
push
inc
jge
fisttps
adc
jle
hlt
jecxz
lea
adc
inc
mov
cmp
stc
pop
les
in
out
es
sub
pop
fld1
mov
mov
repz
fs
push
pop
xchg
xor
mov
adc
fildl
mov
pop
xchg
mov
inc
xchg
shrb
mov
jb
inc
movsl
sub
pop
sub
and
or
clc
jo
dec
add
push
dec
in
out
nop
cmp
out
out
sub
fdivl
or
cmp
bound
popf
push
pop
push
jmp
mov
cmc
sahf
xchg
loop
add
adc
inc
inc
into
adc
inc
or
and
xor
mov
ss
mov
lea
mov
xorb
adc
fimull
add
ret
or
fisttpl
loope
push
into
jbe
mov
sub
cmp
push
test
sub
les
push
add
lods
call
lret
aas
loope
xlat
sub
mov
call
pop
lret
cwtl
repz
addb
mov
push
dec
push
fmuls
mov
add
xorb
test
iret
sub
sub
enter
add
popa
ljmp
scas
inc
or
insb
jg
xchg
movsb
cli
pop
dec
pushf
in
and
cld
or
mov
or
sub
in
cmp
mov
inc
in
mov
loop
lds
mov
outsl
sarl
xorb
scas
aad
sub
or
sbb
sbb
fcompl
notb
adc
inc
sahf
or
and
jo
push
les
es
push
fstp
jle
push
xchg
mov
les
loop
jge
add
addb
xchg
xchg
leave
jne
dec
xor
dec
pop
sub
lret
xchg
push
popf
push
dec
mov
out
cmpsb
pop
stc
push
pop
cmpsl
aad
idivl
add
cmp
fnstcw
or
fcom
inc
es
xchg
scas
sbb
jo
cmp
ficompl
mov
mov
push
shll
fs
lods
jno
xor
mov
xchg
arpl
ret
mov
fisttpll
mov
or
ss
inc
sbb
lock
sub
mov
pop
add
jmp
inc
call
cmp
pop
or
sbb
sbb
into
xchg
out
jb
testl
js
add
push
in
dec
jo
push
cmp
or
ret
movsb
sbbb
movsb
cmpsb
xor
jmp
out
xchg
inc
pop
cld
hlt
popf
sbb
leave
jb
ret
jge
cmc
mov
les
adcl
push
shrb
shll
std
inc
pop
repnz
cli
pop
out
xor
jmp
cwtl
call
imul
fwait
in
std
cmpb
pop
mov
mov
xchg
adc
je
xor
pop
adc
scas
js
sbb
hlt
sbb
and
mov
inc
add
in
ds
testb
mov
ljmp
repz
dec
inc
mov
pop
out
cmc
bound
push
xor
pop
rorb
or
jg
mov
sbb
jae
cmp
adc
test
push
leave
jo
or
xchg
je
add
pop
push
pop
and
cmp
mov
adc
lret
enter
sahf
pop
mov
mov
cmp
pop
loope,pt
xchg
repz
xchg
mov
mov
pop
stc
push
sub
lods
pop
dec
push
gs
std
xchg
push
stos
inc
and
pop
enter
addr16
nop
stos
cmp
pop
fiaddl
cmp
ret
mov
and
jno
dec
push
call
mov
pop
push
mov
dec
jge
xor
aas
inc
ror
fidivs
std
test
ja
lar
and
frstor
mov
push
sub
or
mov
scas
addr16
xchg
stos
shrl
mov
or
iret
incl
mov
shlb
xor
push
ficoms
fs
cltd
jge
or
repnz
sub
and
loop
test
imul
jb
scas
outsb
insl
insl
test
adc
lret
outsl
jne
ficomps
rcll
mov
pop
inc
ret
shl
dec
ds
mov
add
push
sbb
rolb
loopne
inc
filds
sbb
sbbb
xchg
aaa
add
push
pop
add
jg,pn
pop
call
cmp
jle
adc
mov
jne
cmpsb
lods
out
dec
pushf
test
mov
sbb
outsl
ja
adc
adc
popa
push
test
pushf
xor
add
add
sbb
iret
inc
movsb
inc
sub
sbb
xor
dec
mov
mov
sub
ffree
stos
and
stos
rcl
cmp
dec
out
add
mov
jg
out
not
and
ret
pushf
sbb
lcall
push
push
sub
fbld
and
ret
imulb
popf
sub
mov
call
jo
rorb
aas
xchg
aad
shr
or
imul
js
or
lret
pop
push
call
cmc
out
or
lcall
xor
ljmp
call
xchg
fs
das
push
aad
push
rep
xchg
pusha
stos
dec
lock
stos
push
adc
pop
jge
jne
in
jge
lcall
xchg
dec
sahf
dec
imul
arpl
sti
ret
push
mov
push
lock
daa
stos
lods
adc
jae
mov
mov
jns
mov
and
or
fdivs
jo
leave
cmp
xchg
add
imul
movsb
test
mov
xor
push
lea
add
jne
fcoml
pop
and
xchg
pop
test
push
in
aaa
dec
outsb
inc
xchg
inc
ficoms
dec
je
jg
adc
dec
pop
mov
xor
adc
test
jbe
pushl
in
lea
push
dec
xchg
insb
push
mov
push
hlt
lods
jb
outsb
pop
stos
or
cmp
fsubp
gs
ja
cs
and
fistl
aam
in
subb
dec
pop
mov
xlat
daa
xchg
je
into
cmp
jmp
out
xchg
mov
inc
fcmovu
test
loopne
and
jle
xchg
jmp
out
jmp
gs
push
push
imull
pop
add
andb
frstor
mov
or
jmp
lock
mov
add
xchg
loop
and
sbb
in
dec
sub
scas
mov
xor
jmp
or
js
dec
push
iret
xchg
sub
out
xor
jbe
int
loopne
mov
sbbb
mov
hlt
xchg
das
ret
mov
jne
or
pop
repz
cmp
rolb
push
int3
or
repnz
cli
nop
std
lods
scas
jbe,pt
xchg
cmp
xlat
mov
mov
dec
mov
cmc
loop
dec
loopne
inc
fisubrl
inc
pop
and
mov
clc
sbb
gs
mov
mov
adc
mov
movsl
dec
lret
aad
in
outsb
push
mov
cmpsl
cmpsl
int3
ds
es
push
mov
dec
or
mov
pop
jno
mov
adc
shl
jns
fmull
pop
xlat
inc
jp
inc
je
cli
pop
inc
mov
testl
pop
xchg
jmp
push
cmp
mov
imul
inc
mov
sti
xchg
jnp
xchg
inc
inc
sbbl
push
jmp
mov
shrb
shrl
mov
ljmp
xchg
push
or
adc
lcall
jnp
cmpsl
mov
fs
mov
mov
scas
mov
cmp
inc
jp
fisubrl
outsl
push
xchg
enter
pushf
fcompl
jb
mov
int3
pop
ret
or
fcmovnb
lret
inc
dec
shlb
sbb
mov
add
pop
fdivl
cmp
adc
enter
xchg
movsb
push
fnstcw
loope
mull
dec
add
push
inc
mov
nop
int3
mov
nop
xor
fisttpl
add
add
and
jae
push
insb
mov
data16
mov
pop
and
imulb
loopne
test
pop
push
pusha
inc
lea
in
sbb
imul
mov
sbb
sbb
jg
in
ret
sub
push
pop
aad
xchg
sbb
pop
inc
push
adc
lock
inc
stc
and
ss
in
mov
mov
xor
cld
pop
gs
mov
cmc
lods
mov
and
sbb
adc
arpl
xchg
mov
dec
mov
shrb
fwait
push
lock
push
rorb
inc
jb
add
lahf
xor
rorb
push
adc
add
stc
jg
mov
adc
in
inc
sub
test
enter
mov
jge
dec
insl
popf
pop
mov
cmp
xchg
xchg
xor
mov
insb
sub
cmpsl
test
push
popl
push
xchg
inc
pop
and
fstl
xlat
into
xor
mov
inc
sub
xchg
add
loope
inc
rcrl
repnz
xor
cli
sub
inc
xchg
sti
arpl
xor
push
sti
push
xchg
sub
not
imul
stos
cmp
leave
xlat
cmp
lret
add
stos
sub
cltd
ss
adc
inc
inc
cmp
inc
js
cmp
shr
jmp
movsl
xorb
fcom
xor
sub
sub
int3
jne
les
and
sub
mov
mov
adc
lcall
cmpsb
pop
andl
rol
jo
test
dec
clc
in
sub
jo
sbb
cld
sub
dec
shlb
shrl
int3
fisubrl
ja
hlt
jmp
popa
mov
scas
dec
das
lods
xchg
or
and
inc
jl
xchg
mov
jl
mov
or
aad
pop
xchg
lds
out
stc
ss
xchg
nop
leave
iret
stos
arpl
pop
jo
sbb
pop
icebp
stc
mov
dec
les
dec
stc
adc
test
andb
add
push
mov
stos
repz
in
mov
ret
xor
push
dec
sub
xchg
pop
popf
pushf
sbb
gs
orl
mov
xchg
jae
int
insb
fwait
iret
adc
mov
cli
inc
daa
and
clc
and
mov
and
and
out
loopne
dec
sub
or
xchg
add
push
sbb
sub
subl
arpl
xor
rorb
jp
call
in
je
mov
icebp
ja
mov
mov
lds
add
add
dec
pop
into
dec
outsb
mov
hlt
aaa
inc
pop
add
test
cmp
fsts
mov
leave
lea
xorb
jl
push
mov
mov
cmp
pusha
sti
jp
mov
cmpsb
cmc
push
dec
dec
stos
dec
cs
jnp
xor
das
adc
test
cld
inc
pop
std
into
int3
in
insl
jbe
shrb
ja
xor
wrmsr
mov
in
xchg
xchg
push
dec
gs
cmp
add
mov
jge
repz
pop
and
arpl
clc
push
mov
shrb
add
mov
decl
int3
jle
xchg
daa
rcll
cmpsb
fsubs
pop
push
clc
lods
xchg
and
pop
sbb
repz
setb
clc
mov
jecxz
mov
or
outsl
dec
test
xchg
jp
cli
pop
add
jmp
int
mov
mov
xchg
adc
mov
faddl
push
sbb
add
dec
sub
dec
push
dec
cli
inc
shlb
idiv
or
sbb
pop
ficompl
ret
jmp
out
repz
jno
and
cmp
stos
jns
loopne
push
sub
inc
jbe
sahf
adc
fisubrl
lods
xchg
jnp
dec
add
cltd
or
add
shlb
xor
scas
test
jns,pt
pushf
pop
jge
or
push
or
mov
jo
jbe
pop
xchg
dec
adc
dec
les
jg
leave
aad
stos
loope
sub
mov
inc
adc
xor
xlat
out
xchg
xlat
cld
xchg
ret
xlat
push
imul
and
lods
add
adcb
mov
cld
mov
push
xchg
push
test
push
sub
mov
stos
xchg
movsl
pop
lock
js
data16
subl
sub
mov
ds
or
cmp
les
hlt
loop
jecxz
ja
notl
out
dec
scas
enter
inc
mov
outsb
xchg
out
test
gs
mov
fimuls
xchg
push
inc
push
xchg
loop
pop
out
cmp
cmp
push
fisttpl
mov
mov
jo
scas
mov
inc
jns
xor
stos
jle
repnz
pop
subl
mov
icebp
shlb
xlat
push
es
test
hlt
xchg
stc
xchg
xor
xchg
dec
lcall
add
inc
mov
inc
movsl
pop
out
fstl
xchg
cltd
popa
outsl
nop
mov
pop
fisttpl
push
mov
push
mov
inc
sub
xchg
mov
pop
insb
out
popf
xor
pusha
sahf
addr16
dec
xchg
lret
mov
mov
sub
mov
in
mov
out
cmc
push
scas
mov
call
pop
pop
or
mov
or
das
xchg
daa
fstl
bound
lock
fsubrs
int3
mov
push
lock
xlat
lods
mov
dec
sub
inc
decb
jb
je
dec
iret
mov
mov
insl
xor
xchg
faddl
rol
out
outsb
inc
sub
lea
test
das
and
and
lea
push
jo
lea
test
sbb
jge
push
sub
mov
sub
xchg
iret
mov
shll
adc
enter
popa
lret
jns
icebp
clc
js
daa
cmp
rol
in
push
cmpsl
add
dec
jp
jmp
xor
or
scas
into
pop
mov
push
jge
jo
out
adc
test
mov
push
lcall
call
add
add
add
inc
push
dec
and
add
jnp
pusha
iret
dec
and
inc
fdivp
enter
or
inc
pop
clc
mov
mov
fcmove
xchg
jae
cmpsb
adc
test
into
mov
and
test
lahf
add
mov
fcompl
mov
iret
mov
out
push
int
out
jmp
sbb
pop
push
lods
cmp
nop
jle
lcall
xchg
fcomip
incl
fs
mov
pusha
and
test
lods
iret
clc
pop
mov
xor
enter
jo
and
xchg
cmc
ret
outsl
xorb
ss
call
lret
xchg
mull
and
imul
fistl
xor
add
xor
movsl
mov
cmpsb
iret
dec
push
es
ret
lret
mov
sub
inc
imul
adcl
mov
int3
jnp
dec
xchg
jmp
xor
pop
sbb
mov
inc
test
idiv
lods
callw
mov
mov
inc
cmp
xchg
gs
stc
sub
xchg
test
loope
fstpl
mov
sbb
mov
cmpsb
mov
cmpsb
push
push
dec
sub
cmp
dec
push
sub
push
stos
jl
or
cld
mov
sbbb
or
fsubrs
loope
ja
xchg
add
adc
ljmp
aaa
mov
mov
lea
jmp
arpl
push
mov
xchg
ror
repz
or
and
mov
lret
rcl
adc
pop
mov
std
push
sub
out
sub
lcall
lods
int3
pushf
mov
pop
jnp
sbb
jecxz
loopne
dec
fidivrs
ret
pop
add
testb
adc
sahf
cli
int3
pop
or
ljmp
inc
jne
sub
mov
push
popa
fildl
addb
or
into
das
adc
adc
mov
or
imul
push
out
mov
loop
in
mov
ret
push
call
aas
mov
out
jb
shl
aad
mov
dec
or
cmp
adc
or
inc
in
cmp
sub
stos
ret
data16
addr16
and
in
adc
iret
stos
inc
xchg
mov
outsb
test
mov
insb
mov
dec
mov
mov
or
inc
sub
push
or
cmp
out
jno
pop
push
mulb
addl
xchg
mov
mov
int
cmp
std
dec
sti
lahf
push
lahf
jp
jnp
xor
mov
push
xchg
dec
or
sbb
mov
lods
or
xlat
nop
push
flds
fcompl
div
adc
jp
js
push
shll
daa
lods
stc
or
popa
lea
jecxz
cmp
cmpsl
mov
stc
jb
xchg
shll
xor
lret
push
push
jle
push
dec
gs
adc
sub
out
dec
hlt
pusha
cmc
dec
imul
in
cmpsb
sbb
rcrb
sub
inc
mov
out
xchg
inc
pop
divb
push
xor
xchg
inc
mov
pop
add
and
fs
loop
mov
mov
mul
xorl
dec
mov
sbb
sti
out
imul
mov
sahf
inc
imul
jo
hlt
leave
das
xchg
mov
cwtl
daa
dec
lret
rorl
cmp
rorb
insl
jge
inc
xchg
jbe
sub
loope
xchg
mov
and
adc
cmp
push
xor
dec
inc
mov
or
test
jbe
enter
sarl
ss
mov
xor
jne
inc
pushf
push
lods
add
push
mov
daa
dec
add
test
faddl
push
icebp
dec
add
lock
push
fsts
mov
popa
in
into
int
sti
icebp
enter
jp
adcb
adc
mov
iret
push
xor
jp
cmpsb
and
mov
push
lahf
aas
dec
fxch
cmp
movsb
dec
lahf
xchg
push
lds
nop
cmp
push
mul
int3
ja
xor
inc
mov
xchg
mov
mov
pop
add
pop
ficomps
sbb
stos
xchg
popf
and
movsl
adc
hlt
clc
aaa
test
sbb
push
dec
inc
stos
pop
cli
jne
mov
enter
mov
call
fdivs
lcall
vpmacsww
or
addr16
jge
xor
or
adc
insl
pusha
iret
fistl
mov
jle
push
cmp
mov
dec
gs
jne
mov
cmp
ret
and
fldl
mov
jg
sbb
enter
cmpsb
clc
jnp
add
mov
test
in
sub
test
jns
test
mov
adc
out
stos
xchg
xchg
jbe
cmp
clc
jns
sti
lahf
add
shlb
or
aad
sub
fwait
inc
xchg
stos
mov
pusha
mov
push
movsb
cmp
test
stos
dec
pop
mov
and
lock
jl
push
jge
fistpl
test
mov
mov
cli
pusha
clc
daa
push
and
pop
cmp
sbb
push
stos
mov
cs
xchg
scas
cwtl
adc
clc
push
stos
xor
push
aam
nop
mov
sub
movsl
sbb
es
jge
js
dec
cli
mov
cmp
test
xchg
hlt
clts
dec
arpl
cmpsb
or
dec
rcll
or
sbb
jmp
sbb
in
adc
fists
sub
pop
fwait
mov
add
mov
adc
negl
stc
and
lahf
pop
cmpsl
inc
lock
xor
cmp
int
jl
xchg
xor
jnp,pn
out
dec
mov
push
adc
adc
sbbb
xchg
cmp
aaa
imul
das
addb
xchg
cmp
pop
xor
xchg
xor
cld
scas
movsl
mov
cs
test
movsl
mov
push
fnstsw
hlt
shrb
into
in
test
adc
arpl
lods
sahf
push
fmulp
add
or
leave
mov
or
rcrb
push
out
clc
dec
lret
sub
mov
xlat
pop
insb
cmp
mov
loop
jle
sub
or
outsl
adcl
test
cltd
sbb
idivl
xchg
add
jmp
idivl
lret
mov
in
sbb
aas
sbbb
ss
xchg
jns
dec
cli
out
lret
xor
nop
xorb
out
jb
bnd
and
popa
shrl
jg
xor
pop
pop
call
sub
sub
aam
movsb
push
sahf
adc
popa
orb
outsb
pop
out
add
fnstcw
fcom
arpl
repz
stos
loope
adc
fnsave
movsb
mov
aad
fs
addb
adc
scas
fwait
mov
roll
out
lahf
or
jns
xor
int
and
and
jge
inc
inc
movsl
dec
shl
mov
sub
dec
imul
fildll
mov
add
es
cmp
jnp
sbb
bound
test
popf
xor
sbbb
mov
fdivrl
mov
add
inc
ficomps
pop
jecxz
add
dec
movzbl
movb
mov
pop
mov
test
jnp
shlb
gs
dec
movsb
sub
xlat
adc
pusha
pop
fstpl
outsb
dec
pop
or
xor
cmc
mov
jne
mov
gs
pop
movsl
mov
jg
mov
dec
xchg
cltd
add
into
cmp
push
pop
dec
or
mov
and
test
push
shll
outsb
daa
add
pushf
fdivs
xchg
sub
add
push
add
xor
xor
ss
add
stc
xchg
aad
loopne
bound
jbe
pop
sbb
bound
sbb
cli
add
popf
std
inc
es
sbb
or
pushf
fbld
setno
dec
mov
adc
imul
pop
in
mov
cmp
aas
sahf
imul
lock
cs
push
out
or
sub
push
call
roll
fiaddl
addr16
movsl
jmp
andb
mov
mov
xor
repz
movsl
inc
test
repnz
sub
adc
dec
fidivl
and
sbb
and
add
mov
jg
setno
mov
mov
mov
je
lea
cmp
arpl
xchg
lea
mov
inc
jp
les
stos
sahf
insl
cwtl
add
pop
sub
add
jge
adc
sbb
xchg
fstpt
lds
cltd
sahf
int
add
push
adc
jne
cmp
push
fucomip
or
inc
jecxz
daa
imul
push
imulb
gs
push
add
imul
popa
jge
cmp
outsl
lds
outsb
fs
loop
arpl
lcall
mov
sbb
test
insl
pop
hlt
cmc
mov
xor
fnstcw
aaa
les
pop
sbb
inc
cmp
imul
mov
adc
sbb
dec
add
fisubrl
mov
jbe
pop
jl
popf
pop
push
jmp
mov
fisttpll
mov
call
sub
inc
outsb
incb
mov
adc
push
cs
outsl
iret
push
jp
mov
inc
rclb
out
movsl
jns
dec
rol
cltd
cmc
mov
stc
test
icebp
addb
push
push
pop
xlat
daa
mov
sbb
mov
arpl
imulb
das
pop
incl
pushf
dec
lds
cld
int
add
scas
fstps
push
cltd
and
jae
jbe
jg
adc
rol
sub
xlat
xor
fwait
imul
repz
mov
mov
enter
push
push
cld
pop
mov
xlat
lds
cld
inc
jns
test
or
pop
mov
inc
pop
mul
imul
dec
or
add
out
jbe
scas
mov
sti
mov
mov
or
mov
add
sbb
lods
or
fst
mov
lret
push
sahf
jmp
out
xchg
and
jge
movsl
jae
mov
test
xchg
das
fsubrl
pop
mov
in
xchg
aas
rclb
or
movsb
pop
in
loopne
push
and
in
xchg
and
xchg
mov
subl
fsubp
inc
dec
dec
xor
ds
pop
shrl
mov
inc
scas
scas
outsb
rcl
mov
popf
lea
pop
call
in
divl
outsl
sbb
lret
xlat
sar
jbe
stos
mov
jbe
and
movsb
mov
cmpsl
mov
add
les
push
jno
cmpsl
push
and
xor
lods
or
mov
jl
mov
xchg
shll
xor
popf
jnp
inc
dec
shll
in
ret
pop
xchg
sub
rcll
divb
outsl
adc
mov
push
call
mov
icebp
jae
xlat
fdivl
int3
cwtl
xchg
fidivl
daa
sahf
mov
lods
dec
xor
xchg
add
aad
aas
not
push
push
jbe
lds
ret
stos
in
adc
into
aad
mov
inc
push
fwait
cmpsb
ret
dec
push
xchg
mov
pop
insl
cmc
mov
test
data16
add
inc
scas
mov
and
mov
scas
cmc
sub
lock
dec
push
sbb
push
jecxz
add
cmp
push
in
inc
sbb
jecxz
cwtl
das
pop
and
cmpb
outsl
imul
cld
or
mov
inc
daa
cmpsb
xor
das
ss
mov
mov
lea
mov
pusha
jmp
mov
add
repz
dec
lds
loope
dec
pop
adc
jmp
push
bound
cmpsl
es
test
mov
push
lret
dec
jecxz
lret
movsl
push
xor
in
mov
and
jnp
and
adc
mov
sbb
je
mov
neg
loop
xor
fwait
cli
sbb
pushf
and
inc
adc
mov
sbb
ret
test
mov
in
andl
pop
lock
es
lds
and
jae
mov
icebp
scas
clc
pushw
mov
xlat
inc
pop
popa
xchg
xchg
icebp
pop
or
hlt
sbb
sbb
fs
lods
mov
jnp
int
mov
sbb
lcall
sbb
ret
mov
mov
aaa
mov
idiv
and
test
pop
aam
loope
clc
jnp
push
jp
enter
push
xor
add
mov
sub
cmp
mov
mov
mov
sbb
sbb
test
mov
js
cmp
lods
lock
ds
or
sub
lahf
scas
mov
pop
push
mov
and
flds
xor
out
xchg
repz
sub
icebp
aas
sahf
cld
mov
cmpsb
dec
test
enter
fcoms
sbb
aas
jmp
scas
jno
out
cmp
mov
cmp
or
jp
add
add
and
repnz
fcmovb
jge
xchg
lcall
sahf
subl
shrl
mov
sbb
pop
mov
call
fsubrp
mov
mov
sub
xchg
ja
mov
xchg
mov
icebp
in
fisubrs
ds
cmpsb
jg
adc
dec
push
xor
int
popf
nop
ljmp
ret
lret
divl
mov
jnp
imul
lret
xchg
fidivrs
ja
insb
jle
loop
fcomip
int3
xor
lea
or
movsl
xchg
test
int3
or
add
movsl
inc
fs
dec
scas
mov
test
inc
out
sbb
shl
scas
or
ret
std
sub
stos
mov
mov
inc
jae
insb
sbb
mov
cmp
sbb
xchg
test
push
xor
mov
data16
or
lods
or
lret
sbb
inc
ret
and
jno
add
popa
xchg
pop
pop
out
push
out
repnz
cmp
dec
mov
jmp
mov
pop
hlt
pusha
mov
dec
jg
mov
pop
popa
and
aas
pop
sub
popf
int3
add
lds
mov
out
ret
in
loop
pop
stos
imul
enter
dec
xchg
testb
sub
cltd
push
movsb
cmpsb
inc
sbb
or
ss
bound
repnz
icebp
and
iret
inc
movsl
test
scas
daa
out
testl
lret
out
adc
sub
mov
push
or
jb
push
inc
pop
outsb
call
sarl
xchg
rcrl
shl
std
jb
fwait
js
push
lret
call
cld
cmp
stos
adc
out
jae
movsb
adc
jae
nop
je
pop
imul
mov
inc
std
push
fisttpl
aaa
add
lret
aas
or
or
mov
jno
scas
pop
cmp
repz
jne
lret
loopne
mov
sahf
lds
call
mov
cltd
mov
int3
pop
cmpsl
push
mov
inc
lcall
rolb
jb
int3
push
xor
pop
cmc
add
mov
sarl
push
mov
mov
rorl
mov
inc
xchg
jbe
push
xor
jp
popf
jmp
push
dec
shl
bound
pop
fsubs
xorb
xchg
dec
mov
and
shrl
or
lods
fisubl
mov
inc
addr16
fmuls
out
jns
jle
pop
xchg
inc
sbb
pop
ss
mov
in
push
push
jle
xor
or
jo
mov
sbb
fisttpl
leave
test
push
fxch
fidivrs
das
and
cmp
push
and
inc
add
insl
in
imul
xor
push
in
cmp
inc
fwait
repnz
imul
mov
movsb
add
and
adc
push
or
and
add
pop
fcom
lret
leave
ljmp
stc
push
pop
out
aas
sub
xchg
adc
sbb
idivb
jmp
push
mov
flds
inc
cs
aaa
aaa
aam
or
or
push
cli
mov
or
in
addb
adc
icebp
mov
and
and
movsl
into
jge
in
pop
inc
popf
push
out
cs
jb
dec
cmp
sbb
push
gs
inc
cmp
cmp
lcall
in
xor
mov
adc
shrb
roll
int3
lods
lods
cs
dec
test
jae
sbb
push
sub
add
stos
data16
inc
in
int3
jg
dec
test
sub
bound
jge
dec
enter
cwtl
ja
inc
xchg
mov
fldl
cli
pop
add
enter
mov
mov
cvtps2pi
mov
nop
lods
and
inc
xchg
enter
mov
call
sarl
int3
inc
sbbb
int3
in
inc
out
shrb
fisttps
imul
sub
lahf
mov
pop
rorb
cmp
icebp
jle
into
lods
outsb
movsb
testb
idivb
das
data16
jb
popa
sahf
sahf
sbb
mov
pop
push
and
fs
incb
iret
lret
lret
popa
fdivr
cmp
test
adc
cmp
clc
cmovo
daa
cmpsb
mov
clc
repnz
push
xor
add
sub
mov
mov
adc
fwait
les
xchg
cmp
or
ja
cli
std
mov
sbb
push
fbld
mov
pop
loope
pop
mov
push
mov
jb
stc
arpl
hlt
xor
sbb
inc
cli
mov
lcall
mov
and
xchg
aas
mov
mov
pop
js
xchg
out
pop
push
arpl
mov
in
in
out
dec
dec
cmp
adc
mov
xor
mov
inc
popf
jecxz
adc
pop
fsts
pop
out
dec
in
dec
imul
sub
lahf
pop
inc
xor
inc
repz
or
and
cmp
push
jmp
mov
outsb
shlb
lea
enter
pop
mov
xor
push
arpl
icebp
fsubrl
shr
jbe
repz
cmp
outsb
das
jge
add
or
iret
pop
mov
pop
mov
lret
mov
js
lock
xorl
roll
fidivs
aam
arpl
int3
cmp
mov
outsb
fucom
add
cmp
add
or
pop
add
loope
push
inc
fbstp
pop
lcall
push
pop
pusha
or
stos
jge
mov
shll
adc
inc
sti
cmp
or
add
stc
mov
filds
or
sbb
adc
inc
test
xchg
lret
pop
adcb
mov
inc
sub
cmp
stos
sub
cmpsl
pop
xchg
jecxz
jnp
mov
xchg
popa
inc
pop
add
xchg
in
and
xchg
sti
inc
jg
pop
cld
sbb
inc
test
or
loope
stc
fistl
stc
fs
shl
aas
mov
out
test
cld
les
out
push
add
stos
mov
cmpsb
popl
cmc
xor
test
pusha
add
scas
in
mov
inc
dec
or
adc
mov
or
outsl
pop
mov
sbb
sub
mov
test
dec
nop
lods
adc
and
mov
mov
and
cmp
int3
outsl
rcl
bound
jnp
xchg
sub
mov
sahf
mov
push
or
aaa
cmp
fxch
fstl
lds
jae
xor
cli
lods
lds
push
xchg
sub
leave
and
fmuls
mov
pop
stc
pop
xor
cltd
fisttpll
xor
fimull
int3
or
sbb
push
ficoms
lret
sub
xchg
bnd
loop
leave
sbb
enter
sub
insl
outsl
mov
pop
push
pusha
mov
jmp
test
mov
mov
out
cmp
repnz
add
or
inc
idivl
cmp
push
cmp
push
fs
cwtl
inc
push
shlb
imul
fwait
inc
bound
jg
arpl
lea
icebp
out
out
gs
dec
pusha
sbb
insb
sbb
fdivp
sbb
fdivp
pop
cmc
addr16
mov
es
sub
jb
mov
das
cmp
mov
mov
mov
enter
pop
pop
in
fdivp
ret
or
sbb
sti
in
sub
data16
adc
fldenv
add
rorb
mov
insb
jo
popa
in
fists
xchg
fdivs
sub
pop
jns
js
in
cmc
push
movsl
mov
jo
jns
dec
into
lcall
push
ja
ljmp
cli
sub
sub
jmp
sub
pop
cmpsb
fcoms
xor
lahf
or
das
out
xor
sub
cmpsb
in
xor
aaa
sub
pushf
adc
inc
mov
fldl
test
dec
push
or
loope
cmc
mov
xor
sti
pop
outsb
push
inc
or
cli
and
adc
in
cmp
sbb
ss
add
jbe
mov
push
pop
xor
cmp
out
iret
push
lds
xchg
loop
fwait
pop
jmp
sti
mov
sbb
ret
gs
repz
or
sbb
inc
cmp
xchg
jecxz
sub
ss
insl
in
je
nop
test
pop
adc
push
dec
daa
sub
xor
ss
jne
inc
sub
fbld
lock
dec
or
cmp
loopne
test
or
clc
stos
lods
fstpl
push
jmp
movq
pusha
fbld
cmpsl
negl
sbb
adc
cmpsb
xchg
rolb
pop
cmp
fcomps
sbb
lds
out
lock
sub
push
ret
fucomp
es
ljmp
lahf
sub
cmp
cmp
xor
mov
mov
cmp
mov
ss
test
jns
jle
pop
dec
and
sub
and
pcmpgtd
pop
test
aad
fsubl
gs
inc
jnp
in
push
cmp
addb
mov
or
ljmp
pop
shlb
bnd
int3
or
sub
sub
repz
ss
push
sbb
shlb
scas
mov
decl
outsl
imul
jb
cmp
or
mov
xchg
lcall
xchg
push
fcoms
and
ret
and
int
push
std
sub
pop
lret
and
mov
push
cmpsl
addr16
pop
lret
gs
loop
cmp
cmp
jbe
stos
xchg
pop
xlat
adc
movsl
orl
mov
out
out
dec
xchg
aam
push
mov
sbb
data16
ja
dec
xor
orb
adc
loope
pop
adc
clc
xor
and
test
shrl
out
xor
div
in
adc
jmp
inc
arpl
mov
out
sbb
inc
cmp
loope
sar
mov
cmp
jl
pop
lock
mov
inc
jne
inc
into
out
cmp
pusha
push
fwait
jnp
je
jg
bound
inc
ss
loop
xchg
xchg
xorl
push
sub
pusha
in
or
js
idivb
lock
mov
add
or
cwtl
dec
adc
xchg
stc
repz
or
movl
xchg
in
fcmovb
popa
sub
xchg
pop
adc
and
pusha
or
adc
sub
outsb
cmp
jbe
add
fcomip
add
pop
leave
jne
dec
jns
ljmp
sub
and
scas
inc
adc
ret
pop
pop
fcoml
pusha
arpl
jne
pushf
sbb
mov
jb
cs
movsb
fisubrs
sbb
outsb
cmp
inc
scas
mov
push
xor
les
test
or
add
fbld
arpl
ja
es
into
lods
popa
or
pop
fwait
or
xchg
fwait
add
sub
xchg
fucomip
mov
jbe
cmpsl
mov
movsb
outsb
xchg
push
xchg
fldt
inc
and
adcl
enter
es
int
loop
cmpsl
lds
mov
lret
jg
hlt
lahf
lea
mov
mov
les
cmp
loopne
mov
mov
shll
jo
pop
adc
mov
scas
cmp
push
lcall
push
rcll
outsb
jo
movsw
hlt
push
dec
pusha
stos
pop
fbstp
xchg
stc
mov
cmp
and
mov
xor
das
imul
pmaxsw
mov
pop
rcrb
es
jle
mov
inc
or
testl
sub
dec
cmpsl
popa
outsb
mov
sub
insb
stos
jnp
imul
aam
xchg
pop
fdivr
mov
pop
es
std
jae
add
inc
shl
pop
inc
mov
mov
pushf
push
cmp
mov
pop
mov
fstpt
lods
fadds
push
decl
xor
adc
push
int3
popf
mov
add
and
ret
mov
push
iret
outsb
push
rcrl
imul
jb
pop
sbb
pusha
test
sub
sbbl
mov
mov
cli
push
and
add
xor
sarb
xorl
out
int3
rorb
subl
pop
pop
pusha
cmp
shl
in
lock
mov
adc
push
aaa
cmp
mov
pop
insb
lods
fists
push
cmp
rorb
dec
or
enter
cmpsl
and
xor
iret
add
in
rolb
or
or
mov
and
sub
popa
jge
push
aaa
out
adc
scas
gs
mov
xchg
andl
gs
fsubs
clc
cli
add
jb
sub
out
xor
add
inc
sub
leave
mov
adc
dec
xchg
aad
jnp
add
push
xor
pop
xchg
mov
ss
movsl
inc
push
cmc
in
push
and
lea
sbb
in
stc
xchg
push
data16
sbb
std
loopne
sbb
mov
cmp
dec
mov
cmp
xor
sub
idivl
jle
and
dec
add
mov
adc
sbb
data16
adc
inc
xor
inc
push
sbb
fisubl
fsub
sub
mov
sbb
fstl
mov
push
jnp
pop
mov
mov
mov
je
adcl
in
scas
fcoms
ret
aam
in
jmp
mov
fcompl
js
pop
xchg
inc
orl
movsb
mov
iret
out
mov
add
mov
sarl
or
dec
cmpsl
add
push
xor
clc
inc
pop
mov
mov
movsb
test
decl
mov
lahf
arpl
xor
or
add
shll
das
icebp
pop
add
adc
lods
mov
push
int
adc
rcrb
iret
movsb
aam
pop
ja
popf
pop
cmp
scas
mov
mov
in
bound
rolb
push
cmp
or
and
jl
fldenv
cmp
movb
mov
ds
js
and
mov
fstps
sub
outsb
add
xchg
mulps
mov
mov
in
testl
xlat
shr
mov
inc
or
fiaddl
xlat
into
pop
popa
aas
jo
cmp
lods
movsb
or
stos
popf
fs
cltd
push
icebp
movsl
sub
outsl
cmc
jge
pop
subb
fcoms
fwait
gs
push
inc
shlb
fimull
cmp
push
cmp
cld
jne
xorb
xchg
lret
xchg
and
lahf
and
jnp
aaa
mov
inc
mov
xchg
mov
aad
in
dec
jbe
loop
js
lods
jbe
cli
jle
sar
jno
mov
out
rclb
jns
pop
jl
push
loopne
jbe
cmp
add
lods
dec
sub
or
push
and
addr16
scas
sarl
sub
cwtl
and
ja
or
dec
dec
mov
mov
dec
jne
mov
fmull
ds
mov
movsl
pushf
mov
pop
pop
pop
addr16
jo
pop
adc
mov
cwtl
mov
pop
add
in
or
test
sti
xor
and
mov
and
std
adc
push
push
pop
scas
loop
cs
push
add
test
lcall
addl
repz
bound
and
mov
and
xchg
sbb
cmp
mov
dec
jae
int3
and
mov
ds
outsl
inc
js
fsubrs
cmp
xchg
jg
mov
jg
in
adc
push
ljmp
std
cltd
sahf
and
inc
outsl
notl
and
shlb
inc
xor
das
xor
jno
push
xchg
jb
icebp
stos
fmuls
outsl
loop
push
test
add
adc
add
out
fdivrs
lcall
sahf
adc
clc
xorb
mov
ja
jo
nop
and
ds
push
cmp
mov
jle
push
call
cld
cmp
enter
and
mov
add
pop
in
xor
dec
fwait
xchg
arpl
sti
mov
arpl
push
mov
sub
mov
mov
mov
mov
push
cs
pop
sbb
cmp
sub
jg
std
jns
push
or
outsl
bound
cmp
andl
scas
out
and
in
clc
stos
jl
pop
mov
sub
sub
leave
leave
ret
dec
shll
mov
dec
mov
insl
pop
cli
les
stos
mov
push
jbe
rolb
lods
stc
pop
sahf
rolb
xchg
adc
iret
je
cli
stc
sub
loopne
shll
aaa
out
push
dec
mov
fisubrl
mov
add
sub
inc
fisttpl
mov
jnp
or
push
or
out
mov
inc
lahf
jecxz
lds
lret
ror
leave
pushfw
ja
pop
int
loope
xlat
cmpsl
pop
mov
daa
adc
wrmsr
and
ret
sbb
shrb
sbb
incl
push
sub
xor
sub
pop
jl
and
mov
dec
add
arpl
and
rol
push
jns
rorb
lea
popa
test
pop
push
ds
test
pop
adc
pop
jbe
mov
jmp
fldl
aam
out
sub
pop
nop
mov
nop
xor
mov
fwait
sbb
icebp
bnd
jmp
mov
xchg
sbb
test
fs
pop
scas
subl
repnz
std
inc
jecxz
mov
popa
mov
fisttpll
std
mov
out
mov
push
pop
add
mov
dec
mov
insl
data16
sub
cmpsb
mov
bound
vpshad
and
or
mov
aam
sbb
imul
imul
pushf
jecxz
push
hlt
sbb
or
or
std
ljmp
mov
decb
add
xor
jg
mov
jb
jecxz
and
mov
pop
pop
and
mov
jns
imul
add
cmc
xchg
jne
xchg
test
loope
mov
push
mov
andl
inc
cmp
inc
js
or
jns
movsl
rorb
jo
aas
inc
inc
xor
inc
mov
roll
or
lds
fs
rcrl
popf
pop
addr16
dec
std
adc
std
std
xchg
inc
cli
mov
stos
pushf
repnz
mov
and
dec
rorb
cmp
aad
in
xor
inc
out
sbb
mov
divl
xchg
push
push
jmp
mov
xchg
movsl
repnz
out
test
push
push
mov
sub
jmp
es
cmp
addr16
adc
jmp
push
adc
enter
into
in
lahf
xorl
and
push
sahf
das
jmp
repnz
push
push
mov
mov
scas
shll
xor
test
insl
mov
les
push
fstpl
mov
fdivp
lds
shrb
lock
jbe
rorl
mov
iret
inc
addr16
fisttpll
sbb
mov
xchg
lods
sub
dec
pusha
aam
jle
xchg
leave
fstl
sahf
cmp
test
out
dec
mov
inc
inc
ljmp
cs
cld
mov
or
je
mov
cmp
insl
adc
mov
sbb
pop
mov
push
mov
shll
cmp
lds
xchg
rclb
bound
xchg
pop
pop
mov
in
sbb
psubusw
jp
mov
dec
push
add
das
mov
lods
inc
jg
pushf
sahf
in
test
pop
fwait
test
daa
iret
loopne
cmpsb
sahf
cmp
xchg
inc
insb
mov
in
add
mov
out
test
loopne
in
or
xchg
inc
cmp
ficoml
cmp
ja
pop
mov
int
sub
xor
ljmp
cs
jle
pushf
add
mov
fs
insl
jne
test
fidivs
lret
jnp
pop
add
mov
dec
adc
mov
nop
sub
or
imul
sub
inc
xor
mov
es
shl
roll
push
pop
iret
dec
fisubrs
scas
jne
pusha
and
xchg
iret
pop
jp
add
addr16
push
lcall
adc
loopne
pop
in
fcmovb
mov
dec
xor
lret
in
inc
ljmp
and
pop
xor
cld
pop
call
jecxz
shrl
call
dec
stos
xchg
test
push
cmp
test
cmp
cwtl
mov
dec
mov
into
mov
mov
xorl
push
lds
bnd
mov
jp
pushf
push
mov
in
push
sub
les
and
or
mov
je
add
or
cmc
daa
mov
icebp
xor
les
push
ljmp
test
sub
imul
nop
test
cmpsl
mov
cmp
mov
movsl
xchg
jne
sub
push
and
dec
mov
and
mov
pusha
arpl
ret
insb
xlat
mov
pop
adc
sbb
add
adc
imull
fwait
aad
pop
mov
call
jge
cmp
loop
mov
fs
push
lds
mov
sub
push
pop
jns
nop
imul
or
xchg
ret
ss
inc
pusha
gs
or
je
adc
add
in
or
fbstp
pop
int
out
mov
aad
inc
or
mov
cli
dec
repnz
adc
andb
add
daa
ss
popa
mov
mov
in
mov
mov
xor
ror
je
inc
dec
jnp
aam
jo
jmp
jne
popf
xor
test
push
jecxz
xchg
pusha
test
cmp
dec
arpl
cwtl
int3
stos
in
dec
jbe
fdivrl
and
leave
int3
test
jp
pop
out
pushf
out
pop
inc
loop
not
mov
adc
in
cmc
or
jae
pop
data16
int3
or
mov
sbb
jnp
jbe
mov
sub
ret
pop
ret
pusha
rolb
test
add
nop
es
jmp
loop
lods
mov
xchg
shl
mov
cwtl
mov
jo
cs
inc
mov
int
int
xor
jp
pop
push
push
bound
outsb
dec
inc
rorl
push
movsb
movsl
fistl
pusha
sub
push
push
inc
ljmp
rol
xlat
xchg
mov
xchg
fistl
inc
push
rcl
pop
shll
mov
add
mov
xor
aaa
mov
or
jmp
dec
int
mov
adc
leave
pusha
fdivr
das
test
sahf
jmp
or
mov
je
adc
mov
aaa
jb
lods
mov
sbb
neg
mov
xor
cmp
jnp
sub
out
stos
push
sub
divl
mov
test
out
lahf
mov
in
sub
rclb
pop
es
test
mov
mov
xchg
stos
in
mov
popf
cmpsl
imul
mov
int
out
out
shl
xchg
icebp
pushf
into
ficoms
mov
mov
xchg
inc
or
daa
out
add
shrl
mov
imul
fwait
lret
mov
mov
add
jne
sbb
fcoms
pop
lret
dec
push
rcrb
icebp
mov
or
push
xor
sub
xor
mov
fnstcw
xor
and
push
rcl
dec
mov
inc
fsub
jbe
sahf
sub
in
in
fwait
incb
sub
lods
imul
mov
and
testb
cmpsl
sti
xor
loop
push
dec
mov
gs
or
cmp
jge
sti
pop
cli
add
mov
imull
test
add
aaa
shlb
jecxz
mov
pop
mov
sbbb
rolb
pop
ljmp
xchg
jb
test
push
pop
mov
fs
jnp
arpl
mov
dec
xchg
cmp
repnz
jg
mov
inc
dec
lds
sbb
cwtl
push
js
les
sub
sbb
mov
and
adc
or
xor
jns
xchg
or
loopne
lods
jno
cmp
add
jno
out
xchg
sbb
push
lahf
mov
adc
fbstp
into
or
js
movsl
mov
cmp
jecxz
sub
jmp
ss
movsb
sbb
mov
jge
xchg
hlt
leave
jo
inc
push
adc
sbb
sahf
cmpsb
jmp
insl
adc
add
jb
dec
es
jae
lock
pusha
test
test
jmp
clc
subl
jns
cmp
movsl
adc
test
aam
outsl
dec
scas
ja
fsub
add
data16
sahf
faddl
or
test
fwait
xchg
idivb
jmp
lret
adc
cmc
xor
dec
pop
scas
cs
call
push
pusha
lcall
inc
pop
mov
outsl
adc
in
movsb
scas
outsl
test
cwtl
push
int
mov
arpl
in
iret
add
cmc
jecxz
in
or
jecxz
fldcw
and
sub
jnp
adc
mov
and
sbb
inc
aas
push
mov
test
test
inc
cmp
inc
xor
mov
add
jno
lods
test
push
push
cmp
insl
enter
adc
mov
je
jp
xor
sahf
mov
mov
gs
sbb
aaa
daa
sub
arpl
divl
mov
cmp
sbb
inc
jne
push
orl
out
aad
jo
mov
punpckhdq
xchg
pop
adc
fwait
cmp
das
xchg
in
int
call
pop
or
outsb
in
mov
and
xchg
add
arpl
inc
cmp
popl
cld
ret
insl
xlat
sti
in
scas
rcrb
jb
adc
pushf
push
mov
push
mov
rol
mov
mov
loopne
loope
scas
cmp
pop
adc
dec
xchg
or
cwtl
inc
lahf
and
ret
ret
mov
push
testb
xor
aaa
addr16
push
scas
jb
in
mov
dec
mov
mov
pop
js
cmpsb
inc
jne
pushl
jnp
inc
mov
xor
cltd
xor
jecxz
les
int3
pop
movsb
icebp
fidivl
dec
sbb
sbb
dec
aas
sbb
insb
or
lods
jbe
and
pop
push
and
pop
adc
xchg
mov
cld
clc
mov
and
pop
sbbb
data16
dec
push
sub
pop
sbb
inc
test
or
push
sub
push
int3
xor
adc
or
or
xchg
popf
push
stos
pop
inc
pop
nop
pop
icebp
push
ss
out
imul
xlat
mov
xchg
add
bound
push
inc
sub
into
push
adc
ds
nop
mov
pop
adc
shr
push
fmull
push
xchg
into
cmpsb
and
inc
aaa
stos
xchg
icebp
aaa
pushf
jmp
fimull
fdivrl
out
mov
xchg
out
inc
shrl
inc
std
dec
push
dec
xchg
imul
stc
insl
jg
dec
pop
lods
inc
stc
subb
and
jns
inc
push
push
adc
loopne
les
or
sbb
mov
xor
imul
push
sahf
in
mov
jg
cmp
fmull
lahf
mov
subb
jl
das
nop
aad
pusha
js
xor
imul
insb
rcr
xchg
and
stos
inc
cmp
sbb
outsb
jbe
fcompl
push
daa
gs
icebp
lahf
inc
or
jmp
dec
or
cmp
mov
sarl
leave
mov
iret
adc
cli
in
in
sub
push
dec
jnp
cmc
mov
mov
adc
lods
mov
or
cmp
jmp
xchg
aas
xor
inc
mov
popl
mov
cmp
icebp
xor
lock
jl
std
sahf
mov
arpl
pop
or
pushf
pusha
sbb
enter
mov
insb
jmp
pop
aas
mov
stos
lret
outsb
test
xor
in
cwtl
mov
inc
dec
jae
mov
aad
decb
shlb
adc
xchg
scas
jmp
cld
fs
mov
cmp
iret
mov
inc
mov
pop
dec
mov
add
cwtl
pop
dec
bound
cmp
jl
xor
inc
stos
enter
fiadds
data16
jns
mov
xchg
add
fisubrs
mov
inc
mov
or
sub
imul
scas
sub
mov
xor
stos
aaa
inc
pop
mov
popa
cltd
or
inc
ljmp
mov
mov
shlb
jns
xor
mov
pop
lock
cmc
es
fists
inc
xorb
sub
xlat
shlb
pop
jb
rcl
mull
les
jmp
or
cwtl
cltd
loope
out
mov
jne
notl
inc
cmp
lds
mov
mov
sub
cmpsb
push
inc
int3
adc
inc
mov
add
mov
aam
cwtl
push
aad
push
out
dec
pop
pop
push
lcall
cmp
dec
test
add
jmp
psubsb
test
sahf
mov
orl
das
push
aas
popl
pop
xor
into
call
rclb
cmp
pop
jae
fs
adc
in
push
xor
push
mov
or
jb
sbb
xchg
mov
push
popa
rcll
sti
ljmp
clc
mov
hlt
push
sub
out
adc
std
mov
push
data16
cmp
sbb
jae
dec
inc
faddl
lret
push
jecxz
jle
add
out
repz
mov
and
test
int
add
testb
xlat
aas
fdivrl
adc
jnp
mov
adc
lea
jge
pmaddwd
shlb
mov
mov
icebp
push
sbb
scas
dec
cmp
add
and
aam
stos
xor
popf
adcl
mov
repz
lret
sub
aad
movsl
fmuls
sub
jae
hlt
mov
ret
outsl
fcomp
mov
push
xchg
jbe
push
jmp
sub
and
xchg
xchg
adc
inc
fcomps
testl
adc
mov
ss
bound
xor
cmp
push
cmpb
insb
mov
movsb
lods
xlat
repnz
fwait
mov
jle
cld
dec
sub
jl
scas
mov
xchg
divl
rorb
ja
stos
call
repz
cmp
pop
mov
push
and
sub
lea
cmp
xchg
lods
loopne
mov
divl
fcomps
ss
pop
or
or
aam
push
adc
lods
lods
push
or
fisttpl
inc
mov
push
fcmovnbe
mov
mov
sbb
cmp
scas
fs
mov
movsb
imul
mov
test
lods
repz
leave
cld
fdiv
rorb
mov
add
cli
in
lcall
lods
mov
or
popa
ss
aas
adc
outsl
cld
call
push
xor
mov
icebp
out
adc
jmp
out
push
call
ss
mov
test
sbb
cltd
jbe
repnz
fildll
xchg
cli
and
aaa
mov
loopne
aad
call
mov
push
ja
mov
out
inc
sbb
insl
lahf
stc
fs
hlt
sub
add
sti
pop
repz
push
cmc
fbstp
insl
sub
mov
xor
pop
inc
add
mov
mov
es
clc
pop
xor
dec
add
pop
push
cmpsl
xchg
cmpl
insb
pop
push
push
fwait
and
mov
loope
xor
stos
in
xchg
mov
push
xor
fs
dec
int
ror
sarl
out
add
jnp
push
adcl
cmp
rcl
insb
cwtl
cmp
int
pusha
aad
push
mov
enter
add
mov
sbb
loope
repz
cmpsb
popa
jno
lock
cmp
push
mov
add
add
mov
div
cmp
das
loope
lcall
dec
push
dec
and
out
popa
nop
sbb
mov
leave
cmp
mov
addr16
push
outsl
loopne
xor
popa
mov
pop
sub
lock
xchg
in
outsb
cli
jo
cmp
add
sbb
add
int
jno
mov
insl
mov
int
popf
fidivl
push
nop
and
and
inc
add
pop
or
mov
movsl
cs
sbb
daa
cmpsl
cmp
jnp
jnp
popf
paddusb
lock
cmpsl
repnz
imul
inc
adc
ror
outsb
mov
xchg
add
cmpsb
negl
mov
insl
rclb
xor
cld
push
call
addb
in
mov
loop
sarl
in
imul
inc
and
aas
cs
cmp
mov
test
sarl
in
pop
ror
dec
test
mov
out
jnp
inc
imul
inc
iret
outsl
ds
adc
pop
inc
jl
add
jecxz
mov
into
mov
mov
cmpb
sub
add
dec
xchg
mov
mov
jmp
aaa
push
loope
aam
jo
sub
add
lret
xchg
fdivr
push
inc
loopne
mov
sahf
and
cmp
shll
cmp
les
adc
outsl
lea
in
and
mov
repnz
sbb
ficoml
push
addr16
xor
cltd
cs
mov
adc
ss
lods
add
xchg
sahf
enter
adc
or
pop
lock
js
mov
cmp
push
jmp
xor
sub
stc
or
testl
ljmp
pop
cmp
test
mov
es
pop
cmp
stc
sub
sub
xacquire
mov
xchg
push
into
adc
clc
scas
jne
lcall
sub
mov
pushf
xor
movsl
mov
push
ss
movsb
outsb
fwait
js
call
les
dec
in
mov
sub
add
aas
or
cmp
adc
in
sub
sub
notb
jae
xadd
adc
jmp
jne
adc
sahf
dec
inc
imul
dec
cld
test
fiadds
outsl
dec
cmpl
aam
rorb
jnp
ds
scas
into
clc
mov
sarb
fcmovb
rcrl
pop
stos
movsl
lods
rcrb
adc
pop
fldenv
or
dec
jnp
jmp
cmp
pop
adc
and
das
sub
xchg
les
jnp
mov
in
movsl
or
mov
xlat
push
pop
cmp
shl
pop
sbb
dec
cmp
xchg
push
mov
mov
aad
and
cmp
pop
and
xor
mov
or
jae
rcl
xchg
imul
jo
imul
xchg
dec
push
push
or
and
pop
popf
outsl
lea
dec
das
push
cmp
js
pop
lret
xchg
xor
cmpsb
and
mov
cmp
aaa
js
mov
fadds
add
and
iret
nop
pushl
in
cltd
daa
cmp
jmp
mov
cmp
jo
aaa
mov
adc
dec
adc
fcoml
loopne
daa
jno
je
fisttps
mov
addr16
repnz
jge
jne
popa
sahf
jl,pn
mov
cmp
clc
pop
int3
pop
addb
inc
jns
pop
xor
jns
sarb
lds
or
pushl
xor
or
lret
lock
icebp
xchg
sub
push
mov
xchg
or
in
ffree
jecxz
iret
push
cmp
sbb
movsb
jge
repz
jb
pusha
out
in
lods
gs
and
push
lods
outsb
popa
jb
xlat
sarl
into
sbb
inc
nop
xor
stos
ljmp
inc
inc
mov
and
cmp
jmp
pop
stos
and
cmpsl
ds
gs
jecxz
xchg
cmpsb
in
dec
inc
dec
xor
xchg
push
cmpsl
pop
dec
fdiv
adc
fsubs
mov
test
or
icebp
enter
cmpl
sti
push
push
xor
stos
ds
leave
into
out
sbb
shlb
std
xor
addr16
aas
xchg
enter
fstpl
sti
jle
je
loop
mov
inc
xchg
cmpsl
cmp
and
sbb
mov
mov
inc
mov
fldenv
xchg
inc
jg
adcb
test
inc
push
cmpsl
xor
scas
xchg
lret
push
xchg
mov
sbb
pop
lods
sub
fldcw
jg
jnp
inc
mov
xchg
add
adc
nop
jb
mov
out
sub
push
enter
mov
sub
adc
push
imul
or
sub
mov
pop
arpl
in
xlat
aaa
movsl
cld
cmp
pop
fnstenv
paddb
push
inc
xchg
or
movsl
aaa
aas
pop
jmp
add
nop
adc
test
ret
leave
inc
xchg
sbbl
daa
mov
fisubl
mov
xchg
lret
ret
fiadds
sbb
jb
mov
or
rcll
jno
addr16
lret
stos
or
inc
mov
inc
push
push
pop
jmp
lods
std
inc
pop
sbb
adc
xor
out
sub
outsb
aam
icebp
and
cwtl
inc
pop
xlat
js
icebp
sbb
iret
aaa
sub
mov
xchg
inc
mov
mov
shrb
fldt
call
lock
mov
jl
add
mov
fstl
adc
sub
cmp
jp
jno
mov
pop
cs
mov
mov
jmp
ret
cmc
jb
pop
or
outsb
iret
dec
imul
mov
int
jg
rcrb
pushl
aam
dec
mov
pop
call
jl
inc
icebp
pop
ret
pop
mov
insl
frstor
test
adc
out
mov
mov
dec
mov
lods
fst
cmp
fs
lahf
jbe
shlb
push
jg
inc
push
or
sub
repnz
jle
and
mov
lcall
xor
add
loop
stos
mov
dec
adc
jnp
shrb
push
mov
outsb
ret
rclb
push
rcrb
fimuls
inc
jae
pop
in
lea
arpl
repz
popf
cmp
cmp
push
add
xor
ret
mov
iret
add
in
mov
push
push
imul
stc
add
push
pusha
fldt
pop
adc
jle
sub
inc
test
jmp
sbb
ja
aas
repz
testl
pop
and
xor
ja
mov
or
pop
clc
fadd
adc
xchg
jp
adc
aad
or
insb
adc
enter
ljmp
dec
cld
mov
dec
xlat
imul
fcomps
repnz
xchg
scas
repnz
add
testl
test
bound
sub
push
fsubl
rcl
push
cli
test
inc
cmp
in
xorl
add
dec
mov
rcll
push
inc
in
int3
xchg
push
push
je
std
fldt
aad
jp
and
cmp
hlt
loopne
jo
lods
inc
jno
addl
hlt
sbb
test
inc
ds
ja
add
cmp
rcrl
jg
scas
cmp
sbb
out
insb
addl
pop
lods
pop
sub
xchg
data16
lods
in
fucomi
scas
xchg
mov
jb
sarl
adc
fld
repnz
lcall
jge
pop
adc
lea
cld
sti
push
cmpsl
pop
jno
movsb
sub
outsl
xchg
xor
inc
dec
xor
hlt
cmp
or
cmp
aad
or
xor
pop
and
scas
dec
add
push
cltd
dec
or
push
adc
mov
imul
aaa
jg
stos
adc
pusha
add
scas
mov
jo
inc
popf
pop
mov
pop
xchg
les
push
push
pop
pop
addr16
mov
nop
jno
ja
push
dec
mov
dec
sub
adc
and
dec
lgs
add
push
push
lahf
cmp
lret
mov
sbb
pop
cltd
mov
and
mov
cmpsl
inc
mov
cltd
mov
ret
mov
cmpsl
nop
aam
push
sahf
outsl
ret
sub
lahf
aad
pop
push
xchg
xchg
pop
ja
mov
fbstp
daa
cmp
cwtl
sarb
inc
jmp
js
aas
jb
cmp
imulb
pop
cmpsb
stos
jo
cld
fsqrt
mov
imulb
arpl
and
outsb
pop
xor
leave
cmpsb
inc
dec
icebp
dec
sti
mov
in
gs
lods
sub
mov
pop
dec
lds
in
adc
mov
adc
sbb
lock
push
jbe
in
dec
out
jae
dec
pop
aam
cld
xlat
mov
push
int
inc
sub
jns
daa
aam
call
xor
mov
xlat
xchg
mov
jns
jnp
je
pop
add
xor
jbe
lods
popf
outsb
imul
add
test
les
jb
inc
hlt
xchg
jno
push
test
push
cmp
and
lret
pusha
add
jecxz
scas
imul
orl
mov
in
or
xlat
pop
cmp
rcll
sub
hlt
imul
inc
jg
imul
and
adc
push
adc
inc
test
movsl
xor
and
xchg
push
sub
test
pop
mov
mov
or
ds
mov
sub
nop
sbb
cmpsl
sbb
int
loop
leave
push
add
dec
dec
mov
mov
pop
in
cmpsl
orl
sbb
aad
leave
lcall
ret
dec
test
leave
fistps
pop
push
sub
test
repnz
push
aaa
jmp
dec
insl
insl
jecxz
shlb
and
insl
shll
xor
es
clc
jmp
cmpsl
jne
add
das
mov
sub
shlb
jnp
xchg
cmp
pop
mov
and
nop
iret
iret
xchg
jecxz
xchg
pop
push
jb
sahf
in
pusha
dec
push
roll
sbb
hlt
xchg
repnz
ss
jmp
mov
adc
nop
fs
jo
push
xchg
adc
xor
sarb
hlt
adc
jnp
push
insb
leave
mov
movsl
jp
fisubrs
leave
and
shlb
dec
push
sbb
jecxz
mov
sub
scas
and
xchg
imul
mov
pop
mov
xchg
out
add
in
cmovp
add
sub
mov
leave
sub
sarb
mov
dec
push
inc
leave
rcrb
pop
mov
cmp
mov
pop
sbb
jl
sbb
stc
xor
push
out
out
dec
scas
lods
dec
adc
lahf
or
repz
push
sbb
arpl
std
repz
sub
cmp
lock
cmp
enter
xchg
cmpsl
jl
movsl
xchg
out
mov
mov
mov
lahf
mov
xlat
fnstcw
scas
insl
fwait
popa
xorb
insb
data16
jbe
xchg
cmpb
out
and
or
cmpsb
mov
jae
push
call
cmp
js
cwtl
clc
icebp
iret
test
xor
cmp
push
sbb
test
lret
push
sbb
out
adc
xorl
jp
jmp
inc
ss
into
jmp
lret
cwtl
dec
adc
movsb
xor
sub
lds
xchg
orl
pop
sbb
cmp
scas
rorb
call
xchg
cli
rcrb
cmpsl
push
xor
addr16
mov
push
insl
pop
adc
push
outsl
and
mov
imul
fs
fdivrl
test
nop
icebp
mov
ror
jge
out
and
cld
in
mov
push
or
inc
push
int
enter
sahf
push
mov
sbb
ljmp
stos
mov
mov
aad
insb
and
sub
cmpxchg
pop
inc
xor
pop
sub
into
out
xor
mov
aas
mov
adc
int
xchg
push
inc
add
add
cli
call
and
mov
and
add
addr16
push
mov
fs
push
or
jo
cmpsb
sbb
inc
fiadds
mov
xlat
xor
shlb
push
fs
popa
adc
mov
push
and
push
inc
addr16
xor
and
ret
xor
cmpsl
mov
sub
xchg
dec
and
cmp
js
push
hlt
jmp
push
jecxz
mov
adc
dec
nop
test
sub
mov
gs
call
int3
pushf
rcrl
lea
in
fld
xchg
enter
arpl
mov
pop
add
inc
xor
mov
add
stc
movsl
xor
test
out
adc
aad
sub
nop
or
repnz
hlt
mov
lret
cmc
xchg
cmpl
lds
mov
faddl
mov
cmp
xchg
shll
push
data16
pop
pop
mov
mov
jbe
or
les
gs
cli
fistpll
inc
pop
sbb
outsb
inc
mov
into
arpl
push
jbe
fidivrl
add
jmpw
and
sbb
jl
inc
repz
xchg
jns
shrl
enter
mov
add
mov
aas
addr16
or
pop
je
dec
pop
out
inc
mov
ss
lret
dec
fiadds
mov
xchg
dec
stos
bound
xchg
sub
movsl
sub
push
pop
icebp
mov
jg
jb
or
jo
in
xchg
arpl
and
push
mov
mov
pusha
pop
jmp
cli
or
stos
xchg
mov
imul
xor
ja
xchg
mov
push
out
add
shrb
dec
icebp
fidivl
stos
fidivrl
mov
mov
test
jmp
repnz
aam
int
je
fcoms
fdivrs
data16
addr16
or
out
ds
mov
jo
popa
adc
cld
fs
rclb
sbb
stos
dec
ja
push
fadds
mov
pop
fidivrl
sub
pop
dec
cmp
sar
lods
adc
aaa
bnd
cmpsb
inc
lock
and
mov
rcrb
addr16
cwtl
mov
test
pop
je
mov
or
fwait
aad
loope
mov
jne
xchg
sbb
out
lcall
push
divb
xor
fnsave
test
mov
cmp
fdivl
mov
aaa
xor
xor
add
mov
fwait
mov
icebp
out
dec
jle
lcall
sti
cli
test
movsb
fsub
stos
mov
cmpsb
fdivl
pop
test
sub
movsb
stos
add
pusha
jnp
jl
mov
add
xchg
loopne,pt
aas
into
lahf
mov
add
jecxz
sub
sahf
int3
es
jp
mov
out
daa
outsb
int
movsl
pop
or
frstor
aad
into
popa
int
ret
sbb
xor
xchg
xchg
add
pop
shrb
call
jne
ret
mov
sbbb
dec
aad
cltd
mov
inc
imul
std
and
push
jl
pusha
shlb
push
add
push
sub
cmc
mov
stc
push
mov
dec
inc
call
jne
shrl
pop
pop
aaa
clc
mov
inc
mov
dec
dec
dec
pushf
xor
scas
mov
ja
test
lea
rcr
ret
mov
add
xchg
data16
daa
fdivrl
inc
add
pop
mov
aaa
cmpsl
inc
sub
ss
adc
int
sbb
mov
and
in
lds
mov
fcmovb
sub
xchg
inc
popa
aam
mov
popf
mov
xchg
add
loop
adc
lcall
sarb
push
and
movsb
push
cmpsl
icebp
cmpsl
iret
insl
mov
arpl
xchg
mov
pop
pop
xor
imul
out
iret
sbb
add
xor
fs
mov
mov
in
insb
or
daa
sub
pop
and
push
loop
frstor
lahf
jecxz
pop
add
lds
adc
lods
jge
cmp
jb
sub
sahf
pop
js
jg
notb
lods
out
adc
cld
fstpl
sbb
in
nop
mov
and
rclb
aaa
je
sub
mov
aam
xchg
mov
xchg
mov
pop
pop
adc
das
lret
mov
or
shl
hlt
lods
cld
push
divl
fildl
test
push
lea
cmp
mov
mov
mov
fdivrl
mov
jle
xchg
cs
xchg
push
inc
cmp
mov
or
fcompl
cld
push
aad
add
std
pop
ss
loope
icebp
sub
repnz
test
push
hlt
ja
dec
cmp
mov
out
repz
jecxz
fldt
mov
fwait
nop
popf
or
movsb
jmp
or
dec
fs
dec
hlt
das
jnp
pop
ret
xlat
insl
out
out
loop
fidivs
cmc
std
clc
inc
pop
sbb
cmc
daa
cmp
out
rclb
and
xchg
push
fldenv
jne
or
data16
jns
ljmp
cwtl
mov
ljmp
or
sub
cmpsl
icebp
in
js
nop
mov
or
loop
mov
movsb
lahf
clc
loope
mov
dec
pop
and
into
out
inc
push
outsb
clc
pop
sbb
mov
mov
test
add
adc
and
sbb
mov
mov
dec
mov
sbb
nop
mov
out
loop
adc
push
cmp
gs
adc
mov
mov
mov
test
daa
xor
clc
sub
rorl
fimuls
or
xchg
in
loopne
stos
testb
sbb
and
mov
test
imulb
pop
jge
ror
ss
xor
stos
xor
aaa
add
pop
ss
rolb
or
sbb
cli
cmp
out
das
cltd
cmp
mov
xchg
mov
adc
push
mov
pop
jns
mov
leave
jae
xchg
negl
cs
ja
pushf
inc
pop
cmc
push
outsl
jmp
test
mov
xchg
mov
sub
pop
or
aad
or
mov
icebp
cli
pop
out
or
jne
fdiv
xchg
ret
int
or
cmp
jmp
adc
dec
push
adc
cld
fidivl
fwait
shrl
and
push
aad
cmp
fiaddl
arpl
out
mov
and
adc
jne
adc
xchg
pop
in
lcall
jecxz
or
pop
xchg
jb
adc
test
mov
dec
pop
adc
nop
jo
mov
mov
jno
mov
sbb
pushf
lcall
int3
push
jp
inc
sub
push
xchg
pop
sub
fists
es
pop
andb
cwtl
aam
call
dec
hlt
add
ret
ret
imul
js
in
mov
or
sbb
cwtl
mov
dec
cmp
mov
sub
adc
rcrb
leave
add
mov
cmp
adc
and
mov
cmpsb
sub
xchg
iret
int
pop
clts
enter
dec
subb
mov
pushl
jo
xlat
sbb
mov
or
das
push
push
in
jb
pushf
inc
in
sub
js
out
mov
xchg
movsb
cmpsb
sub
sbb
jae
fcoms
cmpsb
xlat
jle
les
mov
dec
scas
and
adc
xchg
or
bound
and
add
mov
outsl
mov
adc
arpl
test
cmp
lea
inc
add
aad
cmp
mov
out
aas
xchg
jecxz
and
shll
push
add
inc
imul
push
out
lods
pop
in
pushf
jge
mov
jmp
fs
stos
call
nop
dec
sub
les
push
fidivl
push
mov
ljmp
mov
in
cmp
xor
arpl
movsl
lahf
or
xchg
clc
or
out
pushf
out
jne
int
cmp
psllw
xlat
jp
push
jecxz
jmp
ret
xchg
ret
pop
test
fsubs
repz
lods
mov
cmovns
dec
lahf
add
adc
stc
ja
lods
fisttpll
inc
aad
inc
leave
push
repnz
je
jmp
fmul
push
insl
jecxz
in
mov
clc
xchg
cmpsl
out
outsb
mov
jno
inc
mov
stc
test
sub
rcll
push
dec
out
dec
sar
arpl
nop
mov
loope
inc
pop
jo
repz
inc
mov
dec
roll
in
sbb
and
dec
insl
scas
xchg
cmp
fisubs
test
in
stos
popa
cmc
pusha
cmpsl
jae
push
lahf
hlt
inc
mov
push
das
inc
xor
dec
push
inc
adc
cmc
test
xor
push
call
pop
push
sti
push
pop
ret
jg
xchg
cld
jmp
test
cmp
dec
mov
insl
mov
cmp
or
and
push
or
add
mov
mov
dec
movsl
xor
ss
rcrl
leave
mov
or
out
pushf
lods
xor
bound
repnz
aas
ret
and
pushf
mov
ljmp
cmp
loope
xchg
push
ja
jle
inc
test
les
fists
shll
cmpsb
orl
jecxz
mov
and
sbb
lds
xchg
lcall
out
les
outsl
dec
ret
jmp
jp
add
das
mov
mov
jae
scas
outsb
aad
lods
cli
je,pt
leave
les
jmp
mov
and
jno
xlat
movsb
movsb
push
or
xchg
mov
jl
and
js
in
cmpsl
int3
mov
or
jno
ja
fnstcw
mov
sbb
lcall
cmpb
push
mov
push
and
pop
dec
or
inc
cwtl
bound
cmovp
add
movl
inc
clc
test
int
aam
and
je
mov
jle
or
mov
ret
mov
inc
push
or
js
ret
cltd
push
sti
push
inc
push
adc
pop
addr16
out
les
sub
dec
dec
dec
pop
pushf
push
mov
pusha
cmp
aas
push
push
ds
lods
mov
and
fstpt
jge
inc
mov
push
or
inc
ljmp
in
movsb
sahf
xor
in
subps
cmp
sahf
xchg
in
add
mov
icebp
add
lock
ds
subl
fbld
jmp
shr
sub
sub
fmulp
mov
scas
ja
xlat
xor
xor
xor
push
cmpsl
loope
cmp
rcrl
push
bound
push
or
xchg
mov
jmp
ja
and
data16
xor
ss
int3
jb
test
popf
adc
adc
sbb
repz
scas
ficomps
dec
mov
pop
add
inc
mov
movsl
or
mov
mov
lret
ret
mov
ja
dec
adc
sarb
cmp
arpl
and
pop
cli
mov
imul
roll
les
pop
push
addl
bound
cs
int3
dec
fisubs
jp
and
sub
inc
filds
mov
jb
mov
cmp
dec
inc
add
outsl
jge
mov
flds
mov
sub
stc
scas
xchg
xchg
or
leave
lock
mov
mov
out
add
enter
stos
ljmp
jae
mov
sahf
mov
jp
push
pop
jnp
add
es
andl
imul
rclb
inc
das
enter
stos
push
pop
xchg
cwtl
repnz
dec
test
sti
popf
lods
cld
imul
movsb
sahf
mov
dec
or
dec
insb
repz
cmp
dec
adc
pusha
mov
inc
mull
dec
aaa
outsl
cmp
out
mov
or
cmp
fnstcw
inc
outsl
push
push
lcall
mov
cwtl
dec
mov
inc
dec
mov
sti
jo
pop
push
pop
fisubrl
call
inc
jb
pop
fwait
xchg
jg
es
test
push
sbb
les
or
adc
seta
sub
lret
das
icebp
into
and
xor
cmpsb
cld
xchg
fisttpll
pop
cmc
outsl
push
and
adc
mov
sbb
mov
xchg
and
cs
out
pop
sbb
nop
add
add
testl
add
jl
in
dec
mov
pop
push
ja
jbe
jp
in
pop
or
add
dec
leave
stc
and
dec
mov
stos
dec
aas
adc
lcall
or
sbb
cwtl
faddl
cli
mov
add
sbb
xchg
sub
fcoml
add
aaa
daa
push
out
ss
or
sbb
cwtl
mov
cltd
mov
sbb
mov
addr16
pop
test
insb
test
dec
iret
popa
xor
dec
add
les
add
data16
cmp
in
call
cli
fdecstp
cli
filds
in
cld
mov
mov
sbb
mov
adc
addb
mov
pop
mov
cmp
int
insb
or
adc
jnp
shlb
cld
pushf
gs
cld
mov
imul
add
dec
aad
aas
idivb
xchg
xor
xchg
test
push
and
inc
pop
in
xchg
hlt
in
imul
subl
push
lcall
repnz
and
sbb
clc
pop
out
fwait
je
aas
mov
test
daa
or
ljmp
int3
in
cmpsl
aam
xor
inc
pop
out
mov
pop
sub
test
int
pop
arpl
add
push
imul
pop
mov
cmp
xchg
addb
xor
mov
mov
mov
enter
or
inc
hlt
mov
paddusb
pop
scas
arpl
pop
outsl
inc
pop
xchg
jnp
mov
roll
dec
adc
push
imul
or
data16
push
sbb
cmpsl
xchg
ret
push
sahf
cwtl
leave
jg,pt
push
mov
ds
arpl
adc
scas
test
stc
or
sbb
nop
sbb
repz
ret
clc
jmp
mov
push
imulb
xlat
imul
cmp
pushl
mov
test
stos
sub
sub
mov
imul
xchg
leave
sub
add
add
repz
shl
mov
push
addl
popa
push
popa
loop
push
lds
aam
adc
aas
cmpsb
mov
or
add
mov
add
aam
jbe
jnp
cmp
xchg
cs
rcrl
cmp
int
mov
outsl
rorb
ljmp
xchg
mov
dec
or
std
and
loop
dec
sbb
mov
add
pop
dec
test
mov
mov
lret
push
mov
fistpll
cmp
mov
js
push
sbb
test
mov
repz
call
xchg
mov
mov
leave
hlt
int3
icebp
enter
cmpb
jecxz
loopne
xchg
loopne
in
pop
scas
into
push
adc
jno
loope
sbb
pop
das
faddp
cmp
nop
dec
mov
daa
push
sarl
pop
mov
jnp
js
js
jo
jae
mov
lock
jge
pop
hlt
cwtl
mov
cmp
or
mov
std
sbb
and
in
lds
call
xor
sahf
push
sub
inc
hlt
ja
xchg
aas
mov
mov
out
call
mov
cwtl
add
push
push
ss
mov
js
inc
and
jmp
clc
int3
fs
bound
je
sbb
xchg
adc
or
out
das
mov
hlt
push
mov
cmp
push
cmpsb
jge
xor
inc
add
jbe
inc
mov
jne
push
dec
sbb
pop
adc
inc
pusha
adc
notb
cmp
mov
mov
xchg
xchg
push
out
xchg
popa
xchg
or
push
aad
push
in
add
fsts
mov
sbb
inc
test
xlat
push
movsl
insl
pop
mov
mov
inc
xlat
xchg
mov
ret
fisttps
adc
rcl
inc
out
flds
rcl
lea
popf
dec
mov
lock
jl
cmp
ja
mov
sub
and
dec
imul
pushf
lret
movsl
push
or
imul
or
or
adc
mov
adc
mov
mov
jecxz
clc
in
loop
lret
or
or
push
xchg
ja
mov
xorl
imulb
mov
out
lods
divl
mov
push
inc
mov
add
in
addb
lods
cs
jge
push
jle
or
mov
xor
sti
push
and
shl
dec
cmp
gs
or
and
adc
fsubl
cmpsl
fs
sti
pop
mov
push
enter
cmp
aam
mov
popf
add
xor
test
loopne
mov
cli
fcompl
nop
push
and
push
cmp
mov
push
test
jbe
sti
mov
pop
cmpsb
mov
and
xor
lock
pushf
les
aam
mov
adc
xchg
xchg
imul
jnp
push
mov
mov
adc
xchg
in
js
add
pop
ljmp
cmpl
pop
cmc
cmp
addr16
movsl
inc
jnp
mov
scas
push
pop
and
lock
dec
xchg
dec
push
imul
cltd
mov
xorl
popa
jno
mov
push
push
clc
jp
xor
out
mov
mov
les
adc
movups
push
leave
movsl
dec
outsl
mov
sbb
xor
ss
sbb
adc
push
outsl
pusha
ss
add
sarl
mov
sbbl
shr
in
ds
int3
dec
cmp
out
sbb
in
les
mov
mov
pop
cmp
call
xor
jmp
ljmp
mov
lods
movsl
data16
push
sbb
popf
pop
ljmp
jge
fucomip
add
dec
xor
mov
or
xchg
addr16
mov
out
rorb
das
into
jecxz
jnp
jg
jmp
pshufw
imul
push
cmpsb
pop
lock
xchg
xchg
adc
mov
push
test
mov
lods
popf
jno
sub
and
fcoms
pop
cmp
lock
or
sub
fwait
jno
xchg
push
or
pop
dec
scas
ss
xchg
cmp
jns
ret
inc
sbb
fisttps
mov
inc
rclb
jbe
push
cltd
adc
shl
inc
adc
lahf
sbb
fcoms
sub
std
dec
adc
repz
xchg
mov
cli
jmp
out
jb
hlt
es
sbb
push
sarl
movb
mov
inc
cmp
mov
add
ret
or
dec
in
outsb
inc
in
lret
fimuls
lahf
cmp
mov
push
nop
aaa
out
and
loop
xchg
mov
popa
add
push
iret
cmc
jne
mov
push
xchg
mov
pop
fisttps
cs
hlt
fdivl
fstpt
in
pop
jecxz
sarl
dec
leave
cmpsl
jecxz
cmp
xor
std
xor
daa
insb
insb
mov
les
push
xchg
out
mov
out
pop
mov
cmp
movsl
cmc
iret
inc
lea
jp
inc
pop
or
das
repnz
arpl
ljmp
mov
into
sbb
rcr
test
ret
mov
mov
xchg
addr16
xor
fnstenv
fcmove
add
dec
mov
jae
dec
dec
fildll
push
in
and
dec
stos
mov
fldenv
popa
mov
movsb
xchg
cmp
sbb
shll
out
shlb
pusha
mov
dec
testl
mov
test
sbb
std
xchg
repnz
push
inc
loop
dec
sbb
movsb
xchg
sub
jmp
xchg
std
cltd
bnd
ljmp
loopne
mov
lods
jno
add
je
das
mov
pop
sbb
dec
test
fldt
mov
mov
es
adc
int
lret
out
push
lea
int
ret
int
xor
or
pusha
jg
xchg
pop
and
mov
inc
xchg
adc
pop
xchg
arpl
ret
push
jmp
test
addr16
mov
dec
adc
je
inc
jno
sub
push
test
sarb
push
andl
std
mov
mov
inc
lret
test
fxch
inc
test
mov
cmp
sub
mov
shrl
cmp
mov
push
hlt
dec
or
xor
outsl
rcrb
or
es
xchg
ljmp
test
push
clc
mov
mov
adc
pop
and
dec
mov
xor
hlt
pop
pushf
faddl
pop
xor
add
push
mov
rcrb
cmp
les
cmp
orb
out
into
mov
or
push
scas
xor
mov
lock
loop
xor
inc
mov
dec
mov
std
push
loop
data16
or
pop
imul
push
shlb
push
ret
jnp
add
movsb
lret
test
xor
pop
dec
or
rcrl
in
xchg
push
out
test
cmpl
sub
adc
stos
stos
add
xchg
mov
cmp
or
cwtl
dec
xor
sbb
loope
xchg
enter
cmp
sahf
stc
add
outsl
cli
jno
movsl
shr
xlat
push
sbb
sbb
je
loope
shl
add
and
aaa
add
sub
xchg
bound
popf
ljmp
sub
mov
and
mov
fcmovnbe
lock
pop
jge
loope
je
repz
imul
divb
das
fucom
push
jmp
in
push
jecxz
cmp
js
in
sub
add
or
mov
jns
in
jb
pop
lods
mov
xchg
out
leave
lret
push
push
xor
pop
dec
test
pop
and
addl
push
into
mov
data16
mov
call
imul
mov
lds
mov
push
and
mov
adc
jne
add
ret
test
mov
pop
je
popf
xchg
push
dec
in
or
das
cli
push
out
sub
in
lods
loopne
or
pop
arpl
in
or
push
out
shll
mov
jle
sbb
xor
xchg
call
xchg
mov
mov
dec
roll
adc
pop
push
out
and
sub
xchg
test
add
popl
xchg
ret
push
fadd
fadds
xchg
imul
cmp
flds
nop
xor
call
xchg
inc
pusha
inc
sub
sbbb
shlb
addr16
inc
mov
loope
mov
mov
int3
push
lock
lods
addr16
ja
pop
jmp
sti
adc
loop
sub
ret
mov
or
cli
in
jb
loopne
jge
mov
lds
cmpsb
push
sbb
push
daa
mov
adc
or
push
sub
and
push
flds
shrl
enter
fwait
inc
add
fisubs
jle
cmpsl
stos
jo
jp
shll
inc
and
xchg
in
cmp
loopne
mov
fdivl
push
scas
push
repz
push
adcl
dec
sub
int3
dec
arpl
jbe
xor
sbb
movb
jno
subl
arpl
xor
sbb
rclb
and
daa
mov
adc
pop
pop
mov
jp
mov
test
cwtl
fisttps
mov
repz
jnp
sbb
sub
fildll
pop
pop
mov
lea
add
mov
pop
inc
fistpl
movb
jp
pop
call
sub
pop
xchg
cmc
pop
mov
mov
xor
add
cmp
pop
mov
sub
mov
into
sub
mov
dec
dec
gs
pop
push
insb
loop
pop
mov
adc
ljmp
xchg
push
jp
cmpsl
aam
cli
inc
ror
jo
push
daa
call
sub
push
scas
fimuls
lods
push
mov
push
dec
jge
aam
movsb
mov
out
sub
sub
or
adc
mov
into
jo
mov
leave
scas
mov
pop
popf
jbe
dec
mov
frstor
outsl
or
dec
fsubl
lret
mov
pop
shlb
insb
imul
loope
and
pop
aaa
mov
cmp
js
sbbl
adc
stos
ret
xchg
cld
stos
jge
xor
pop
das
cmpsl
lahf
daa
ror
lods
ds
dec
sub
dec
sub
xor
imul
mov
mov
xchg
cmpsl
dec
adc
loope
icebp
jmp
int
repz
insl
sub
mov
repnz
clc
push
xor
and
dec
add
in
je
cmpb
add
jnp
pop
clc
das
adc
jecxz
in
and
or
cmp
jg
data16
cmp
fmul
inc
sub
jp
aam
pop
dec
push
lock
mov
lods
push
incl
in
jmp
xchg
ljmp
sti
jl
push
stc
out
loopne
push
cmc
xchg
sbb
lret
out
pop
xchg
gs
push
je
xchg
pop
and
ror
jle
test
test
mov
std
mov
push
fildl
fists
pop
aam
test
sbb
xchg
jle
ret
out
insb
pop
sub
sbb
adc
stos
push
pop
movsb
bound
into
call
sbb
push
repnz
ret
out
mov
push
push
cmpsb
mov
jne
pop
cs
mov
inc
outsb
ret
movsb
mov
addr16
jmp
movsb
icebp
cld
push
cmp
scas
clc
xchg
jl
lcall
std
mov
mov
xor
cmp
lahf
nop
mov
les
sub
cwtl
lods
in
sub
hlt
inc
inc
pop
imul
add
dec
pop
or
dec
fmuls
or
jb
imul
shl
jo
mov
sbb
pusha
mov
jp
psrad
inc
hlt
sbb
or
mov
add
inc
jle
pop
jecxz
fsubrl
nop
fsubrs
movsb
push
inc
dec
out
sbb
xor
cmp
mov
bound
cld
mov
xchg
cmp
mov
mov
fisttpl
std
out
xchg
xchg
mov
mov
sbb
int
pop
call
dec
leave
dec
mov
push
shr
stos
mov
jecxz
adc
hlt
pushf
into
lahf
sbb
mov
imul
jecxz
fwait
jg
hlt
ja
mov
cld
add
out
clc
jae
inc
ret
icebp
test
mov
mov
out
cmpl
or
dec
push
imull
iret
nop
sahf
dec
jb
add
ljmp
sub
jae
sbb
mov
int
add
dec
shl
fisttpll
int3
cltd
pop
xchg
or
push
push
jl
cmp
test
adc
arpl
les
dec
jbe
push
addr16
mov
push
negl
cmp
fcmovbe
adc
push
or
inc
dec
inc
aam
sbb
xchg
mov
lahf
jnp
lahf
lahf
idivl
adc
jno
ret
clc
lds
or
mov
xor
das
push
inc
fwait
mov
cwtl
cld
aas
iret
push
mov
in
add
jbe
lret
cltd
jno
pop
in
or
sub
xchg
xor
add
xchg
fldcw
lods
sti
xchg
sbb
mov
cmp
sbb
add
das
xchg
xchg
dec
jns
mov
je
fildl
pop
ja
sbb
push
dec
pop
pop
dec
fists
leave
cld
sub
or
test
pop
test
sub
cwtl
mov
pop
mov
aas
cmpsb
pop
or
and
jmp
das
push
pop
xchg
jb
jge
sbb
cmp
lock
sbb
xchg
repnz
add
sbb
loop
je
pop
push
xor
scas
int3
into
fmull
stc
pop
mov
push
push
sub
loopne
pushf
stc
popa
cmpsb
inc
cmpsl
xchg
fdivl
mov
out
cmpsb
int
nop
and
sub
insl
mov
xchg
outsl
ja
pop
fcoms
movsl
add
jb
or
cmp
in
jns
or
adc
fwait
push
dec
rorl
mov
xor
mov
jmp
ret
and
cmp
loope
pop
xchg
fcompl
aas
idiv
popa
lret
sti
out
sub
xchg
fisubs
and
adc
sbb
nop
adc
insl
aas
dec
cmp
push
adc
add
leave
rclb
test
push
sub
xchg
dec
inc
test
push
pop
dec
xor
xor
je
sbb
outsl
mov
xor
xor
inc
sbb
stc
push
inc
rorb
cmp
icebp
xchg
fildll
mov
clc
or
mov
add
add
in
movsb
ss
aam
mov
xor
pushf
push
mov
shlb
adc
lcall
push
aam
inc
xor
insl
push
stc
scas
test
dec
jb
pusha
gs
cmpsb
mov
stc
and
pop
xor
lea
fldl
xchg
mov
rorb
or
call
outsb
out
and
lcall
gs
inc
sbb
insl
in
inc
paddusb
and
es
fwait
repnz
mov
and
leave
fsubl
mov
mov
lock
popl
sub
jg
in
jb
jno
mov
jns
pop
mov
lds
mov
xchg
enter
xor
and
jno
push
out
lret
adc
push
incb
cmpsb
sbb
movsb
lea
popl
jg
cmc
pop
test
add
jge
inc
sahf
and
sbb
jno
push
ljmp
aaa
sbb
lret
ja
imul
icebp
enter
roll
psrld
jbe
fistpll
inc
xchg
mov
mov
cs
lret
add
clc
inc
aad
aad
sbb
xchg
enter
sahf
pop
push
clc
cmp
insb
mov
or
inc
out
popf
lahf
int3
pusha
dec
imul
dec
imul
inc
out
pop
sbbl
imul
jae
cmp
in
es
clc
outsb
and
lret
movsb
push
xchg
jo
mov
dec
stos
fnstenv
mov
adc
fcmovu
mov
inc
fldenv
pop
int3
mov
out
jmp
sbb
xor
push
popf
xor
inc
dec
sbb
daa
mov
imul
mov
cmp
fcoms
int3
iret
pop
inc
bound
imul
lods
sbb
jmp
cs
lea
rcll
cmc
add
icebp
cmpsb
jg
cmp
sahf
icebp
cmpsb
nop
adc
enter
mov
aad
ret
push
test
mov
flds
mulb
push
cmc
inc
push
push
movsb
lahf
xchg
mov
xor
cmpsb
and
and
inc
es
mov
pop
das
add
aam
xchg
das
and
and
cs
in
inc
fcompl
adc
xor
xor
jp
js
nop
mov
fstpt
test
mov
pop
adc
jbe
push
shrb
cmc
dec
jl
lods
cmp
jns
loope
inc
and
hlt
pop
call
pop
mov
inc
add
or
lret
sbb
clc
fstps
xor
xor
sub
and
jmp
or
clc
sbb
daa
sarl
sbb
pop
adc
push
inc
hlt
pop
icebp
js
sub
cmc
insb
sub
lcall
sahf
mov
repnz
test
call
out
push
ret
dec
aam
hlt
sbb
mov
leave
xlat
sub
imul
mov
xchg
add
test
inc
xor
and
dec
add
adc
adc
das
arpl
sub
adc
fs
pop
push
loop
pop
pushl
cmp
in
pop
xor
ret
and
inc
rolb
jno
mov
pop
push
fstl
xchg
push
cli
pop
cmp
inc
movsb
pop
pop
ret
lods
pop
cli
mov
iret
aad
jl
inc
pushf
and
xlat
sbb
pop
dec
pop
sti
push
or
cmpsb
xor
cltd
cmp
jo
jno
pop
jmp
insl
hlt
insb
outsb
and
mov
inc
js
cltd
pop
aam
cwtl
cli
sbb
pop
movl
jnp
out
pop
out
imul
outsl
fwait
push
mov
popa
sub
add
jne
cmp
mov
pop
lods
push
mov
sub
in
mov
cmp
push
mov
dec
inc
test
mov
jg
or
adc
push
rcrl
mov
repz
mov
mov
cmc
test
fstl
inc
or
in
mov
sarb
sub
es
std
lahf
jl
cli
push
push
sbb
imul
sbb
adc
push
mov
loope
mov
subb
lock
xchg
cmpsb
push
lods
jl
push
nop
sub
and
int3
or
sub
pop
divb
dec
pop
mov
xlat
mov
push
push
movsl
jne
xchg
cmp
imul
je
popa
sbb
mov
fdivs
movsl
mov
mov
xor
cmp
cmpsb
push
pop
sbb
daa
ja
sarl
mov
rorb
mov
mov
push
xor
lret
inc
or
jno
jbe
in
dec
or
fwait
loope
pop
loope
and
fadds
xlat
inc
adc
mov
cmp
or
jnp
sub
push
lcall
in
or
mov
lea
or
sbb
test
and
das
pop
repz
cltd
mov
outsl
into
cltd
pop
push
mov
and
xchg
das
flds
inc
ja
lods
sbb
inc
mov
mov
mov
addb
out
ds
add
mov
or
js
and
rcrl
sub
pushf
cmp
les
mov
stos
outsb
pushf
ljmp
sbb
cs
leave
imul
add
cs
jge
mov
jecxz
shl
repnz
jmp
push
sub
cs
fmuls
testb
push
or
sahf
mov
or
xchg
rolb
sub
xchg
cmp
pushf
cwtl
inc
sub
inc
dec
pop
or
lods
shlb
sub
in
xor
call
std
inc
jae
adc
sar
cmp
and
xchg
lahf
pop
xor
faddl
xchg
arpl
fnstcw
stos
push
and
sub
aas
xchg
jle
xchg
sub
add
aam
pop
add
mov
loopne
cmp
jmp
imul
daa
mov
sub
xor
aam
mov
or
add
movsl
pop
cs
push
jg
icebp
dec
add
push
ljmp
cli
lea
jmp
adc
lea
cmpsb
imul
orl
and
popf
js
ja
and
sub
add
xchg
lret
icebp
cmpsl
dec
dec
and
lds
pusha
sub
andl
dec
fs
xchg
andw
ja
push
jmp
push
sub
test
push
enter
pop
pop
push
cld
fcmovbe
mov
scas
push
stc
cmp
int3
mov
sub
call
mov
mov
repz
imul
xchg
scas
in
cmpsl
fcompp
xor
rcr
aas
xchg
in
sub
into
pushf
push
dec
push
and
lock
mov
and
lods
movsl
test
stos
idiv
repz
js
mov
xchg
gs
shlb
xchg
stos
notb
inc
testb
cmc
insl
pop
fstps
sbb
mov
xchg
daa
jp
addl
mov
loopne,pn
daa
shll
xchg
sbb
xor
test
mov
xchg
test
pusha
cld
and
pushw
cltd
cmp
mov
sub
loopne
cld
pcmpeqd
sub
scas
std
mov
mov
shrb
ljmp
out
inc
adc
addr16
adcl
lods
mov
xchg
stc
xlat
cmpsb
popl
or
nop
dec
ja
pop
shl
jnp
cmp
jl
loop
xchg
dec
arpl
sbb
into
or
jb
ret
pop
je
or
dec
fisubs
jle
or
rol
mov
pop
mov
dec
sbb
shrl
xor
fisubrs
loop
mov
movsl
daa
int3
fs
mov
xor
addr16
daa
fcompl
mov
xor
xor
cmp
pop
adc
das
xchg
cmpsl
aas
lods
xchg
jg
sub
data16
add
es
sbb
dec
xchg
and
push
add
xor
or
cmp
imul
inc
imul
stc
iret
test
sub
push
push
dec
inc
decb
ljmp
sub
mov
cld
cs
xor
push
pop
aaa
mov
out
pop
js
adc
pushf
loope
in
adc
test
sbb
jmp
test
lock
xchg
xor
outsb
repnz
inc
rorl
sbb
ds
xchg
inc
jbe
mov
xor
jnp
andl
call
int3
xchg
push
mov
scas
mov
mov
jmp
fs
dec
cmc
dec
and
cmp
inc
inc
lahf
push
adc
into
add
fisttpll
mov
adc
rcrb
mov
shrl
jge
stos
mov
sbb
sub
pop
pop
dec
out
or
out
imul
or
pop
mov
aaa
loopnew
jle
test
jns
cltd
sub
push
add
mov
push
cmp
pushf
leave
push
or
fcompl
cld
or
xchg
test
adcb
xchg
or
jbe
mov
jae
cmp
sbb
inc
dec
xchg
lret
add
ret
mov
jecxz
in
add
imul
repnz
mov
cmpsb
faddl
loop
xchg
in
push
test
inc
dec
jb
es
pusha
mov
pop
push
imul
sub
cmp
pop
mov
adc
mov
push
xor
arpl
mov
pop
push
addr16
ljmp
nop
icebp
dec
push
mov
xor
in
cs
outsl
or
enter
xchg
dec
mov
jl
sub
iret
ret
add
xchg
sbb
push
and
sbb
cmp
dec
je
jle
xorb
js
cmc
shll
fwait
cmp
fwait
lret
cmp
and
pop
xchg
xor
lock
dec
mov
or
leave
cmp
xlat
mov
xchg
jns
xchg
xor
shrd
pushf
xchg
push
ret
pop
repz
jmp
int
pushf
pop
push
sbbb
mov
cli
add
in
sbb
xchg
add
negb
pop
repnz
lea
icebp
test
mov
sti
cmpb
or
not
icebp
mov
test
adc
mov
fdivl
xchg
mov
cli
sti
jnp
jmp
fistl
je
cmc
jnp
cmc
mov
pop
sbb
or
sti
adc
enter
push
scas
push
inc
fcmovnbe
sbb
lock
in
cltd
mov
test
add
pop
mov
test
jecxz
stos
shlb
adc
cli
leave
clc
es
pop
ret
jne
test
scas
fwait
nop
negb
jno
adc
decl
push
in
pop
sbb
je
daa
aam
inc
icebp
lcall
insb
inc
mov
mov
xchg
xchg
insl
inc
inc
push
push
jmp
sar
mov
adc
mov
loop
cmp
push
mov
mov
mov
fsubr
aad
sub
pop
cmp
mov
orb
and
mov
add
xchg
fs
inc
mov
stc
xchg
dec
jb
adc
inc
lds
in
adc
xchg
sub
push
adc
jmp
pop
push
aam
xor
mov
lret
sub
std
jmp
call
mov
push
punpckhdq
arpl
fsubrp
or
adc
test
psrlq
les
dec
iret
adc
pop
jmp
lds
mov
push
jle
repnz
cmp
mov
add
in
scas
iret
xor
aaa
push
push
ror
into
adc
sbb
pop
js
cwtl
pushf
fistps
xor
ja
inc
js
and
movsl
lds
imul
inc
je
push
das
add
aaa
out
cmc
push
dec
push
movsb
cmp
jb
push
add
out
push
sarl
fisttps
addr16
ljmp
mov
iret
imul
ret
stc
jns
pop
add
fs
add
addr16
scas
inc
out
rcr
or
lret
xchg
or
mov
sbb
cwtl
inc
sub
pop
das
dec
mov
sub
add
mov
cmc
arpl
xchg
mov
dec
xchg
cmp
or
mov
mov
in
pushf
add
or
xor
push
adc
pop
scas
hlt
ds
dec
cmc
mov
imul
scas
imull
ret
xchg
add
pop
cmpb
mov
push
cmp
push
push
push
dec
aas
sbb
loope
mov
pop
dec
cmp
scas
and
mov
std
cmp
jne
movsl
jno
cmp
outsl
adcb
outsl
xchg
jp
xchg
test
outsl
adc
cmpsl
cmp
movl
in
ds
mov
pop
rorl
adc
pop
iret
stc
mov
jecxz
mov
shl
pushf
ficomps
mov
imul
lret
lret
pop
dec
lret
mulb
mov
add
idiv
enter
int3
and
inc
insb
dec
xchg
loop
or
stc
cmp
cmp
dec
add
cmc
xor
mov
sbb
dec
daa
and
and
lret
dec
dec
mov
add
cmp
les
cmp
adc
out
popa
sub
lock
push
push
stc
rol
imul
ds
cmp
and
pushl
sbb
inc
jg
test
mov
orl
lock
or
mov
add
and
fldcw
cltd
sub
movsl
inc
sbb
leave
or
movsb
data16
sub
mov
jle
out
jbe
add
xlat
jcxz
inc
mov
jg
and
fstpl
fsts
mov
test
test
nop
inc
out
fistpll
add
adcb
imulb
push
jbe
jo
pop
sub
push
pop
dec
jp
mov
int3
cltd
push
lcall
xchg
les
jmp
nop
mov
add
fs
jp
inc
in
cmpsl
leave
in
sub
dec
sub
mov
cmpsb
sbb
lret
pop
es
aaa
dec
pop
enter
lahf
repnz
xchg
pop
and
imul
addr16
iret
lods
pop
fsubr
stc
leave
loopne
arpl
sahf
push
testb
hlt
jp
out
lea
cmpsl
sub
mov
repnz
jl
shrb
xchg
fisubrs
push
sub
testl
mov
fnstenv
push
fwait
dec
adc
pop
xchg
push
sarl
dec
mov
cmp
shl
test
and
xchg
hlt
testb
sbb
cmp
mov
fidivs
and
mov
inc
fcoml
push
mov
inc
movsl
das
popa
movsl
ret
jmp
and
and
sarl
movsl
push
mov
std
add
mov
adc
icebp
nop
xor
fdivrl
dec
jecxz
out
lahf
mov
into
scas
cwtl
lret
loop
and
mov
ret
sub
push
sbb
add
add
pop
jne
enter
stos
test
in
ret
fbstp
mov
scas
test
cmp
cmp
pushf
stos
pop
add
add
call
sbb
dec
pop
aas
and
and
fsub
or
mov
pop
cmp
cmc
and
test
xchg
cwtl
std
add
add
dec
add
aas
jg
pop
jbe
push
fsubrs
fnstcw
iret
dec
or
cmpsb
mov
ds
cmc
mov
and
add
adc
fcmovnbe
insl
rolb
leave
cmp
repz
cmc
mov
std
dec
ljmp
subl
mov
int
cmp
cmp
push
idivb
cli
sub
aaa
popf
cmp
test
shrl
push
xchg
push
jge
es
pop
call
add
pop
jg
mov
xchg
les
xchg
sub
out
vmread
mov
and
clc
sbb
mov
rcl
xor
fsubrs
xchg
pop
mov
aam
inc
sbb
jae
jo
test
xchg
es
adc
push
jp
scas
xor
mov
push
mov
xlat
aam
xor
jno
inc
mov
jae
lea
pop
outsl
sub
mov
and
pop
outsb
xchg
and
cwtl
adc
cmp
inc
sub
lret
jo
adc
dec
mov
add
lret
xchg
mov
out
dec
xchg
cmp
jp
add
fs
popa
out
jg
pushl
movl
push
push
mov
notb
push
or
cmp
pop
loopne
inc
decb
adc
jae
jge
in
cmc
arpl
movsb
sub
push
xor
ret
in
xchg
shl
jnp
or
dec
lcall
mov
add
dec
loopne
jecxz
mov
jmp
loop
dec
or
jb
cmc
pop
repnz
jns
push
imul
jb
rol
arpl
pop
or
xor
lret
jmp
ss
mov
bound
cmp
add
daa
pop
into
dec
pop
pushf
jg
lahf
cwtl
jae
mov
add
adc
add
adc
cmovno
ljmp
inc
pusha
sub
dec
mov
push
lret
dec
imul
xor
orl
loope
push
repz
scas
and
adc
movsl
ret
inc
mov
out
insl
xor
aad
out
repz
test
das
dec
or
and
stos
or
jbe
push
cmc
cmp
jmp
xor
test
or
xor
arpl
jmp
adc
dec
and
les
stc
add
adc
push
lret
dec
mov
sbb
addl
stc
in
sub
outsl
jmp
push
jmp
nop
cwtl
and
pop
xchg
decl
xorl
lds
pop
int3
adcl
stc
sub
inc
mov
enter
xor
pusha
pop
or
add
ds
jp,pt
ficoml
sbb
adc
or
dec
xor
lret
mov
in
inc
inc
addr16
or
std
dec
loop
sarl
fsubr
test
push
jp
jns
mov
sub
fldt
jp
add
mov
clc
jl
rclb
xchg
mov
aad
adc
adc
jnp
push
rclb
out
cltd
and
sub
stc
loope
out
ficoms
cltd
mov
pop
jo
pushf
pushf
int
inc
jecxz
adc
insb
in
xchg
xor
jmp
add
shr
std
out
sbb
pop
push
mov
mov
xchg
xor
cld
pop
mov
rolb
xor
fbstp
popf
sub
pushf
pop
push
cmp
clc
mov
mov
test
outsl
lahf
jbe
pusha
lahf
shlb
mov
getsec
or
sbb
in
push
pop
and
pop
sbb
js
push
sbbb
cmc
js
or
sub
dec
popa
push
cmp
dec
cmpb
inc
loopne
add
movb
lock
inc
pop
fdiv
mov
sahf
xchg
pop
fldenv
iret
in
or
dec
ret
cmc
ds
popf
adc
mov
in
push
and
nop
imul
xchg
lods
jb
jae
in
adcb
lret
stos
hlt
lds
iret
je
fisttps
mov
add
stc
mov
repnz
and
cmp
int3
cmp
mov
adc
mov
push
adc
int3
inc
cld
and
pop
aam
jmp
pop
fldl
inc
xchg
dec
push
test
jae
cs
arpl
xchg
jle
push
lods
and
loopne
enter
arpl
aas
js
inc
mov
xchg
aad
inc
lahf
lahf
fdivrl
int3
pop
scas
sti
ss
fs
xchg
arpl
add
xor
xchg
pop
inc
lods
inc
in
sbb
pop
jg
ds
aaa
insl
out
cmp
stos
stos
jae
shr
imul
mov
or
or
repnz
sahf
cmpsl
inc
movsb
jo
mov
int3
stos
xor
mov
mov
or
sub
mov
inc
ljmp
adc
dec
clc
mov
mov
xlat
movsb
mov
scas
push
popf
iret
sub
imul
sbb
mov
mov
ja
in
mov
cmp
cltd
adc
and
je
scas
push
sbb
pop
adc
dec
daa
mov
cmp
mov
jecxz
cltd
lret
mov
hlt
mov
mov
jp
mov
dec
and
jl
repnz
rcll
sub
adc
jnp
movsl
push
leave
xor
jae
and
in
data16
stc
mov
jmp
movsb
adc
mov
out
aad
add
mov
mov
jno
push
mov
mov
lcall
add
ret
push
les
gs
test
jmp
sbb
inc
mov
dec
dec
mov
ret
cmp
sub
outsl
inc
cmp
insl
sarl
loopne
mov
mov
cmc
jae
das
hlt
popa
test
pop
les
adc
dec
xchg
add
push
pop
push
xor
es
bound
mov
sub
push
rcr
fcompl
jecxz
mov
push
push
mov
cmp
lret
aam
cmp
push
jno
outsl
imul
or
ja
dec
mov
adc
jp
pop
push
pop
ja
xor
ljmp
cmp
hlt
lea
data16
add
push
jecxz
and
sbb
push
push
int3
adc
jge
sbb
or
clc
lahf
mov
fwait
jb
push
add
dec
rcrl
pop
subb
es
aad
lahf
xchg
ja
psubw
xor
inc
xor
add
stc
xchg
pop
add
cltd
leave
sub
jecxz
sbb
sarl
in
ljmp
xor
out
movsl
arpl
sub
aas
lcall
mov
repnz
push
cmp
lock
cld
pmulhuw
jno
aad
mov
mulb
movsl
shrl
pop
mov
and
push
popa
lret
mov
xor
addr16
lea
push
movsbl
ret
jl
hlt
loope
cmp
subl
lods
push
popf
arpl
and
pop
cpuid
jns
xchg
push
xor
outsl
or
mov
sub
cmp
jno
and
in
and
stc
call
mov
test
movsb
mov
dec
in
add
enter
dec
pop
mov
xchg
cmpsl
ficomps
js
push
lretw
jg
sub
dec
pop
or
pop
fcoms
push
xchg
mov
lcall
sub
int3
or
test
cmp
push
dec
pusha
pop
out
icebp
push
adc
test
xchg
push
jge
movsl
outsb
sahf
fbstp
out
mov
cltd
push
orl
arpl
arpl
imul
sub
or
and
or
fisttpll
test
out
fldenv
inc
cmp
aad
lret
adc
ret
shll
fcoms
cltd
pusha
push
clc
add
sub
insl
mov
pop
pop
pop
mov
pushf
cmp
cmpsb
sub
cmpsl
cmp
lcall
in
out
and
lret
fldl2e
and
mov
das
pop
jle
lods
add
jno
stos
jl
iret
xor
sub
push
add
shlb
mov
push
and
pushf
stos
and
fs
stos
inc
je
sahf
push
add
data16
shlb
sti
inc
xchg
mov
push
ljmp
stc
dec
sbb
mov
gs
cmp
push
adc
or
loopne
dec
jbe
sbb
xlat
jns
add
bswap
ss
das
mov
xchg
push
aad
mov
inc
jne
movsb
fistps
test
mov
stos
jmp
icebp
push
into
adcl
adc
jbe
or
jbe,pt
or
call
cmp
and
xchg
push
fxch
dec
fcomi
inc
aaa
pop
loop
cs
mov
xchg
xchg
mov
pop
pushf
ret
mov
scas
mov
or
nop
xchg
loop
out
sub
and
shrl
sahf
adc
fiaddl
or
inc
dec
xor
xor
adc
vmovlps
jno
mov
jge
lods
and
add
mov
push
inc
insl
sti
sub
fsubrs
fstpt
sub
outsl
jne
jg
lods
testl
inc
std
fdivrs
popa
inc
inc
sarb
sub
nop
arpl
popf
push
xchg
stos
cmc
rcll
xorl
ror
inc
xchg
mov
pop
leave
test
mov
rol
mov
repz
push
mov
push
or
fnsave
out
lcall
push
mov
loop
mov
scas
push
repnz
out
xlat
xchg
inc
mov
inc
in
mov
out
push
xchg
and
iret
imul
xchg
dec
xlat
mov
gs
das
sub
stos
in
inc
pop
mov
aad
ja
mov
cmpl
rcll
sbb
pop
das
fiadds
xor
rorb
sbb
pop
push
pusha
hlt
xchg
ret
in
jo
sarl
lret
fisttpll
mov
pop
adc
mov
or
jo
adcl
leave
cwtl
sub
loop
cmp
call
sub
dec
dec
fadd
pop
mov
orl
xchg
pop
lock
mov
gs
cmp
add
dec
sub
arpl
or
jecxz
sbb
adc
xchg
jmp
jmp
mov
jge
repz
pushf
orl
push
jecxz
jl
filds
insb
mov
xchg
test
xchg
push
fcmovnb
or
or
pop
and
xor
pop
or
push
dec
andl
ret
mov
push
sub
lock
ficoml
and
mov
mov
mov
popa
mov
add
mov
addr16
mov
out
je
ja
xor
aad
or
xchg
add
xchg
cmp
aaa
adc
loope
jmp
scas
dec
dec
push
pop
cld
mov
inc
lds
push
jmp
push
xorl
idiv
and
jmp
inc
rolb
in
shl
or
dec
sbb
xchg
push
cmpsb
imul
cmp
add
decb
lcall
pop
xchg
daa
lods
out
imul
repnz
cli
jmp
mul
push
cmpsl
inc
fisttps
lret
push
xchg
popa
push
xchg
inc
je
dec
push
fs
pop
push
rorl
fwait
dec
leave
cwtl
mov
push
xchg
xchg
repz
outsl
arpl
pop
pop
push
aaa
in
add
pop
bound
ljmp
and
sbb
mov
add
inc
daa
sub
fcomps
in
test
push
sub
fildll
in
sti
andl
push
les
loope
sbb
push
xor
jo
out
inc
lcall
into
addr16
mov
je
imul
es
pop
cmpsb
pop
mov
dec
gs
and
xchg
inc
xor
mov
mov
push
or
inc
mov
lock
ficomps
cmpsl
in
push
push
in
outsl
test
das
inc
jae
lock
movlhps
sbb
cmpsl
pop
add
aad
std
pop
nop
pop
mov
cmp
fsubl
pop
out
jno
jp
jnp
arpl
lods
adc
xchg
std
add
int
push
test
je
or
call
jge
mov
and
aas
xor
jae
scas
pop
jnp
mov
fsubrs
jmp
addr16
mov
aas
mov
nop
aaa
paddusb
outsl
inc
add
scas
xor
push
repnz
push
xor
out
imul
xor
mov
or
stos
es
mov
jge
rorl
idivl
xchg
xchg
mov
jmp
mov
shrb
outsb
loop
imul
dec
ret
xchg
and
imul
repnz
jmp
xor
movsb
ja
xchg
inc
mov
cmp
in
xchg
test
dec
jecxz
push
iret
sbbl
jne
loope
pop
insl
sub
cmp
mov
movsb
aam
dec
movsl
mov
pop
xchg
xor
rorb
push
xchg
lret
mov
pop
sub
xor
mov
mov
dec
push
cs
cs
sarb
cltd
insb
sub
cld
lds
pop
push
call
bound
scas
fistl
mov
mov
push
loopne
dec
and
sar
icebp
pusha
scas
fldl
cld
xchg
sub
in
mov
mov
in
pop
into
ja
fs
mov
adc
cli
fistl
cwtl
mov
jae
sbb
pop
cmp
pop
xchg
xlat
cmc
aas
std
mov
mov
stos
int3
jp
iret
adc
dec
cmc
test
or
push
add
dec
push
scas
cs
call
stos
loopne
xchg
adcb
gs
sbb
or
cmc
push
sbb
or
fsubl
pop
rcll
dec
cmpb
jl
outsl
jae
icebp
call
fimuls
mov
rcr
lcall
lds
ret
das
ja
repz
jnp
dec
popa
pop
xchg
bound
xchg
or
dec
lea
push
rep
xor
sarb
mov
jae
div
int3
mov
xchg
mov
shll
sbb
pop
dec
fildll
sti
mov
repnz
out
repnz
mov
mov
inc
sub
loop
ds
testb
and
pusha
xor
lods
inc
xor
movsb
cmp
jl
add
push
jne
loop
sub
jns
icebp
test
dec
rep
fcomps
test
test
xor
adc
jb
or
xor
and
pop
les
out
scas
push
stos
out
loope
or
jns
mov
ss
or
dec
dec
cmc
sahf
addr16
adc
xor
lds
jmp
pop
frstor
sahf
and
adc
jb
push
loopne
push
addb
and
sub
enter
scas
sbb
add
filds
fdivl
dec
clc
lret
xchg
mov
adc
adc
sbb
mov
mov
pop
push
mov
mov
mov
repnz
filds
sbbl
cmp
je
mov
jae
and
cwtl
lods
inc
es
sahf
mov
pop
cmp
mov
jns
jmp
lret
pop
pop
ljmp
das
pop
fwait
sbb
push
lock
add
popf
push
stos
fnstenv
shll
das
daa
mov
orb
mov
js
push
xlat
xchg
pusha
lcall
clc
ret
mov
or
add
aaa
jg
mov
mov
popa
xor
jbe
ret
test
mov
rcrb
adc
out
cmc
ja
jo
adc
mov
mov
incb
in
enter
mov
rol
jae
sub
mov
shl
pop
fnsave
test
jmp
cmp
test
sub
xlat
xor
mov
inc
pop
mov
popf
rorl
xchg
mov
pop
loopne
insl
dec
mov
in
int
or
push
or
adc
mov
test
cmp
jae
jnp
mov
mov
addb
xlat
jl
mov
sub
cmp
subl
cmp
in
and
repnz
mov
adc
pop
mov
outsb
push
out
push
popf
dec
icebp
testb
inc
cmp
test
orl
cmp
inc
fneni(8087
cmp
jle
aas
dec
out
xchg
adc
jmp
arpl
sub
mov
pop
xchg
enter
push
push
or
addl
loope
jg
test
mov
add
jns
rolb
push
mov
dec
push
cmp
pop
icebp
lcall
test
cli
cld
dec
cmp
aas
daa
sub
enter
ss
mov
decb
jo
sbb
leave
scas
inc
call
insl
sbb
ficoms
inc
sbb
inc
inc
pop
or
mov
cmp
lds
imul
jne
jns
ret
stos
mov
or
mov
inc
pop
es
mov
popf
push
mov
xchg
push
sbb
cld
std
sbb
xchg
in
cmpsb
xlat
inc
fldl
sub
flds
adc
sub
repnz
jmp
xor
xchg
loopne
or
test
xchg
mov
sbb
or
or
xlat
popf
sarl
hlt
sbb
add
movsb
test
lgs
mov
adc
aam
fs
shrb
loop
lcall
test
jne
cli
scas
cmc
xor
or
sbb
fidivs
lahf
mov
icebp
mov
out
jmp
push
shll
inc
push
jle
cld
dec
dec
or
jbe
add
dec
loope
std
xlat
in
mov
mov
pop
gs
leave
repz
inc
dec
rcrb
cmc
or
mov
in
negb
out
inc
cs
mov
hlt
xchg
mov
adc
pop
dec
call
adc
xchg
dec
xor
dec
push
push
imul
aaa
cmp
int
add
clc
pop
mov
push
lahf
fildll
push
jbe
jns
lea
pop
repnz
out
sub
sub
smsw
jmp
or
lods
addr16
inc
ds
std
and
push
jns
ljmp
testl
xchg
mov
xchg
pop
fcompl
pop
push
dec
push
std
xor
xchg
jp
and
jg
xor
lock
mov
mulb
out
inc
std
jl
insl
arpl
or
mov
mov
xchg
sti
in
cmpsb
pop
aas
scas
or
inc
mov
testl
repnz
popa
int
push
push
lock
mov
insb
ret
push
in
stc
pop
insb
and
movsb
sbb
jns
xchg
jo
bound
mov
sub
ret
icebp
iret
pushf
in
leave
inc
out
sub
sti
lods
mov
sub
and
fnstcw
adc
or
and
pop
bound
insb
ret
jp
jl
test
and
pop
pop
xor
mov
shll
add
in
mov
dec
jns
pop
jecxz
out
jnp
shrb
mov
mov
cli
fadd
fstpl
inc
aam
inc
xchg
addr16
int
pop
jbe
inc
add
sbb
jbe
rcrb
jmp
notb
push
cs
data16
stc
pop
js
pop
rep
xchg
sub
mov
inc
insb
add
fwait
nop
int3
pop
sub
daa
inc
sbbl
pop
lds
xchg
adc
jp
mov
dec
mov
push
xor
xchg
xchg
jge
movsb
sbb
in
test
pop
jp
inc
cmpsb
push
hlt
pop
mov
jp
push
xchg
xor
xor
and
ja
dec
sahf
fildll
bound
into
sarb
repz
pmaxsw
ss
ret
daa
push
call
cmc
loope
movsl
mov
cmpsl
imul
enter
mov
cli
shlb
fidivrs
scas
jmp
inc
sbb
or
or
and
lret
fcmovnbe
sbb
test
dec
mov
xchg
sarl
cltd
or
jb
incl
cs
cmp
movsb
add
imul
rorb
add
clc
xchg
mov
jb
inc
sbb
sub
push
test
ljmp
xlat
popf
iret
ucomiss
push
or
push
stos
cmp
scas
rorl
lock
mov
inc
es
imul
popa
je
aad
inc
xor
jp
cmp
arpl
mov
insl
jmp
jmp
cmp
mov
clc
xchg
pop
or
sti
fs
addr16
lock
rclb
cmp
sbb
mov
mov
pop
mov
movsl
fs
push
ficomps
jmp
xor
ret
xlat
call
lds
nop
cmp
or
ficoml
xor
lret
mulb
out
push
sub
jbe
and
xor
test
cmc
dec
icebp
mov
jge
jae,pt
dec
and
xor
imul
jnp
shlb
loopne
repnz
jmp
xor
pop
mov
shl
xlat
subl
dec
lods
mov
adc
mov
test
fs
jne
mov
cwtl
mov
mov
outsl
mov
and
stos
loope
xchg
sbb
lock
pop
jmp
dec
cltd
mov
mov
cmp
mov
sti
jecxz
iret
lret
test
xchg
jp
xchg
fcomp
or
inc
adc
test
pop
xor
cmp
push
dec
fstpl
shl
es
xchg
sub
inc
or
cwtl
arpl
mov
cmp
pop
in
pop
push
xchg
xchg
je
sub
cmpsl
sbb
add
test
mov
stos
jg
jp
scas
add
xchg
xchg
pop
ret
ja
mov
inc
lods
cmp
push
cmp
mov
and
mov
and
jg
mov
sbb
sbb
inc
mov
cld
jecxz
repnz
add
adc
xchg
rcrb
jb
mov
sbb
xchg
push
cmovne
enter
mov
cmpsl
push
scas
insl
jmp
rdseed
out
imul
mov
pop
and
xor
pop
js
insl
xchg
dec
iret
in
push
xor
ss
push
dec
sahf
int3
push
add
movsb
out
lahf
dec
lea
out
das
xchg
push
test
pop
sub
and
cli
mov
mov
jae
call
cli
lea
xor
out
adc
nop
jecxz
ljmp
mov
xor
int3
test
sub
cmc
into
adc
mov
xchg
fadd
shl
cmp
sahf
xchg
inc
adc
lds
mov
jge
stos
mov
mov
mov
enter
cmpsl
test
or
lock
fwait
mov
aad
ja
hlt
xchg
xchg
out
rolb
leave
xchg
xchg
push
xchg
insl
sub
cmp
jp
ss
in
addr16
cmp
lret
sbb
adc
and
mov
lahf
jg
stos
cltd
scas
fldt
sub
scas
cmpsl
push
pop
and
sbb
mov
sahf
push
pop
pop
into
add
xchg
jnp
adcl
cmp
sarb
and
jnp
adc
into
or
fs
dec
andl
mov
mov
mov
data16
pop
lea
sbb
iret
mov
and
jbe
shlb
stos
ds
jle
xorb
outsl
subb
aas
xlat
xor
call
xor
mov
push
add
mov
jns
mov
mov
or
std
aas
adc
dec
cmpsl
or
sbb
ret
pop
jl
cwtl
popa
pusha
out
inc
lods
call
inc
push
leave
mov
or
lods
dec
adc
dec
push
lock
addr16
add
mov
iret
cli
jl
mov
fwait
or
les
dec
mov
inc
inc
mov
mov
mov
mov
mov
inc
xor
je
incl
out
xchg
pop
dec
dec
mov
roll
cmp
mov
add
call
adc
movb
inc
fs
ret
add
imul
push
stc
mov
dec
xor
push
or
out
mov
push
dec
or
jmp
fidivrs
out
jmp
or
sbb
sbb
and
aad
fnsave
adc
push
imul
and
std
inc
push
mov
or
mov
enter
lcall
dec
shlb
jle
add
mov
push
mov
jecxz
mov
pop
int3
jge
movsb
inc
in
outsb
js
xor
shl
add
pop
adc
inc
les
mov
pop
sub
test
pop
sbb
dec
mov
ss
sarb
mov
mov
mov
lods
popa
dec
jge
or
mov
addl
dec
pop
push
into
int3
lret
mov
jbe
lret
les
pop
scas
adc
repnz
add
fildll
repz
imull
out
sbbl
sbb
or
jge
stos
lds
cmp
jbe
fsubp
mov
clc
repnz
aad
shrb
insb
and
pop
push
mov
mov
adc
fimuls
out
push
cwtl
rcrl
shrb
jae
popa
sbb
jg
repnz
stos
push
cmp
and
repz
loopne
xorl
dec
shlb
jno,pn
in
shl
xlat
mov
mov
and
mov
scas
mov
xchg
push
mov
fisubs
js
add
loop
jl
or
lods
pop
decl
movsb
lds
jmp
fdivr
dec
imull
and
stos
loopne
mov
scas
cmp
dec
pop
add
mov
iret
loope
bound
es
dec
cltd
push
jae
hlt
xchg
cmp
push
mov
int
push
xchg
add
push
test
xchg
pop
cmp
popa
mov
pop
sub
push
jl
lret
jecxz
add
out
xor
add
aam
fs
and
xchg
adc
sbb
sbb
aad
xlat
mov
int3
xchg
fwait
stc
pushf
je
pop
cltd
adc
or
popw
fwait
and
divl
gs
mov
push
push
and
ja
pop
scas
dec
push
jp,pn
int
stc
sub
push
psraw
adc
and
push
mov
xor
cld
mov
cmc
in
jae
stos
popf
imul
mov
inc
fldt
sub
push
data16
addb
xchg
pusha
daa
jne
ret
addr16
push
repz
ja
mov
cwtl
cmp
mov
pop
std
imul
in
fistpll
mov
cmp
hlt
inc
test
jle
mov
dec
mov
pop
push
fildll
imul
xchg
icebp
cmc
mov
push
push
pushf
cmp
mov
adc
movsb
sub
xor
cmp
add
sub
adc
out
push
cli
pop
xor
clc
lds
rcl
and
loop
push
cmp
repz
mov
iret
pop
push
in
push
jae
add
out
mov
inc
ds
sahf
subps
sub
xchg
pop
and
loope
adc
in
nop
jmp
sub
repz
push
lds
and
cmp
dec
mov
out
or
jo
dec
push
movsb
pop
movl
repz
push
lahf
out
pop
jle
lock
mov
inc
out
fdivs
aas
adc
nop
dec
aam
adc
sub
inc
in
mov
pop
enterw
sbb
shll
xor
imul
or
and
js
jbe
cmp
outsl
add
sbb
xchg
sub
int3
fadd
out
mov
fwait
sub
mov
jno
nop
mov
mov
ret
sub
data16
jno
inc
les
test
hlt
fcmovnbe
push
scas
cltd
mov
mov
or
lret
movsb
sub
mov
movsl
inc
jle
xchg
pop
repz
add
push
cli
pop
int
je
mov
pusha
inc
fldl
jmp
in
jle
mov
dec
lods
fldl
inc
mov
xchg
push
sub
lcall
fcoms
mov
repnz
shl
push
rolb
mov
sar
jno
ljmp
je
ret
add
js
jnp
addr16
mov
insb
call
data16
inc
jo
adc
ficomps
push
mov
sti
imul
out
int3
lcall
add
subb
pop
mov
fstpt
in
cmp
sbb
lods
jnp
or
pop
lcall
pop
add
call
in
or
sub
xlat
test
mov
pop
pop
std
outsl
xor
and
mov
jecxz
popf
add
mov
cli
mov
out
and
dec
mov
daa
andb
scas
arpl
pushf
inc
mov
idivb
popf
mov
cmp
mov
adc
pop
and
sbb
cli
dec
mov
jns
movsb
pop
sub
and
ret
mov
inc
xor
sbb
mov
pusha
dec
cmpsb
mov
hlt
mov
loope
dec
ds
mov
shl
jp
adc
ja
xchg
filds
shlb
cmc
xor
cmp
inc
sahf
into
fidivs
popa
cmpsl
inc
mov
mov
dec
push
call
xor
out
test
mov
scas
aas
cmp
and
dec
mov
jbe
jnp
fidivs
repz
sbb
in
jns
add
mov
notb
cmp
test
mov
das
push
inc
jb
xchg
cmp
scas
movsl
jle
push
jnp
lods
and
stos
stc
movsl
push
pop
mov
daa
leave
push
daa
push
sbb
std
jbe
and
clc
xchg
inc
icebp
adc
push
xor
outsb
mov
and
mov
inc
into
gs
ret
and
repnz
in
sbb
ss
push
into
pop
or
mov
bswap
in
fadds
mov
mov
jae
insl
dec
sub
repnz
pop
pop
and
jnp
popa
popf
mov
dec
int
outsl
jne
xchg
or
sahf
mov
xchg
lret
cmp
cli
and
stc
push
roll
and
loopne
cwtl
cmpsl
and
sbb
cli
push
push
push
push
dec
mov
incl
xor
std
xor
outsb
mov
es
dec
out
sbb
and
mov
push
mov
cmpb
pop
mov
pushf
and
shrb
push
mov
pop
push
lods
push
out
leave
in
or
enter
mov
in
cmp
rcll
adc
adc
mov
stc
mov
js
jae
sbb
sbb
fcmovbe
push
add
shlb
adc
daa
and
sahf
fwait
mov
cmp
dec
andl
jo
mov
mov
jae
mov
mov
shlb
inc
add
cmp
inc
loopne
cmp
sar
jae
dec
lock
sub
int
lods
cmp
mov
shrb
lret
popa
lock
push
xchg
imul
dec
shrl
aam
push
cld
fbstp
out
repz
inc
sub
xchg
ret
test
fs
mov
lods
pop
dec
cmovg
push
out
subb
push
lret
popa
xor
stos
rcrl
sub
jecxz
sahf
ret
cmp
es
lret
out
and
rcll
les
adc
mov
xchg
call
and
psraw
outsb
testl
xchg
mov
xchg
pop
add
aas
and
dec
or
xor
sbbb
stc
leave
jne,pt
mov
cmp
or
add
loop
dec
cmp
pop
fld
jge
faddl
mov
jle
movsl
mov
mov
pop
push
hlt
adc
mov
jnp
fdiv
popa
pop
or
jle
push
adc
movsl
testl
cmp
bound
mov
jns
lea
inc
inc
lods
shrl
cmp
or
fs
pop
into
jp
imulb
lret
and
cld
jns
lods
daa
push
cmp
or
mov
sbb
xchg
mov
rclb
subb
das
pop
cld
pop
cmp
rclb
test
movb
sbb
xor
mov
pop
pop
push
push
cmpsl
mov
pop
or
xor
iret
cmpsl
pavgb
leave
lock
sbb
or
js
pop
out
cmpsb
inc
andb
pop
cmp
sub
push
cmovp
fwait
cmp
sbb
pusha
sahf
shl
dec
fcompl
mov
rcr
mov
push
ret
jecxz
mov
call
jge
call
add
cmp
das
nop
repnz
repz
add
dec
jg
gs
test
lods
add
sub
movsb
rcrl
cmp
pop
cltd
sbb
out
xlat
in
mov
outsl
pop
inc
push
shll
fadds
repnz
push
pop
cli
roll
repnz
out
sub
push
dec
negl
test
lret
cli
cltd
aas
out
fcmovb
mov
sub
insl
popa
ret
push
popl
jmp
sbb
lret
lods
dec
out
and
test
cmp
pop
popa
mov
loopne
inc
movsl
mov
sarb
mov
cmp
sbb
int3
mov
mov
leave
ja
cld
push
push
ret
mov
inc
cmpsl
add
es
adc
mov
pusha
insl
int3
icebp
popf
insl
sbb
push
bound
dec
xchg
out
mov
and
pusha
mov
loopne
push
add
cmc
test
xor
pop
push
dec
mov
imul
scas
xchg
cli
mov
faddl
loopne
cmp
push
pop
or
adc
adc
lods
inc
aad
add
ret
fadds
xchg
lea
xchg
xchg
stc
mov
add
stc
data16
std
repz
add
xor
xchg
adc
or
dec
inc
sar
cmp
xchg
std
inc
or
jns
ljmp
ss
jae
cmc
pop
ljmp
shlb
ret
test
shl
xor
test
lcall
cmp
and
jbe
inc
push
jle
mov
out
inc
mov
add
ret
shr
mov
aas
mov
scas
clc
or
int3
in
movsb
sub
es
cld
aaa
sbb
and
mov
xchg
test
rolb
inc
in
cmpsl
add
cmp
fwait
xchg
mov
mov
pop
jecxz
aam
xor
lcall
mov
js
cmp
mov
mov
in
test
call
into
jle
iret
mov
and
rcll
sbb
enter
adc
add
fld
xchg
push
test
dec
push
sub
out
data16
nop
and
cmc
adc
dec
dec
mov
rcpps
or
data16
sbb
jecxz
mov
add
aad
lcall
sbb
and
fdivp
xor
xchg
mov
add
cmpsl
fists
mov
ja
jp
push
xchg
dec
ja
dec
loop
out
push
jmp
lahf
inc
repnz
sub
repz
test
and
push
xor
push
add
decb
mov
jge
cmp
sbb
push
push
sti
in
enter
inc
mov
mov
insl
dec
sbb
mov
ja
lea
sub
mov
adc
mov
cmp
lods
jl
sub
sub
lret
sar
mov
in
sti
in
sub
popf
jmp
pop
lahf
and
mov
imul
in
inc
jmp
fs
call
jo
cli
dec
pusha
rclb
fistpl
loop
aam
or
add
scas
lds
mov
cltd
xchg
and
in
loope
lahf
lcall
lret
pop
punpckhbw
jns
and
enter
inc
loope
lock
iret
sbb
jns
pushf
into
ds
xor
fwait
sahf
sub
cmp
enter
sub
pop
sub
imulb
data16
mov
and
fistpl
and
stos
shrb
mov
test
cmp
mov
pop
test
fldl
fsub
adc
cmp
arpl
mov
xor
insl
dec
sbb
and
sub
push
adc
test
sbb
and
les
xchg
movsl
pop
xchg
in
lock
movsl
call
notl
push
stc
xor
loop
mov
xchg
out
cmp
in
scas
push
fwait
icebp
adc
gs
push
ret
mov
or
js
popa
mov
and
lds
sbb
and
subl
jns
das
dec
out
xchg
adc
adc
push
cld
imul
shlb
loopne
call
test
sub
into
push
lahf
aad
sbb
sbb
fmuls
sub
sub
sub
test
inc
mov
jg
pop
jmp
ja
jge
add
ss
js
pop
pop
push
add
pop
xchg
mov
pop
fwait
scas
fstl
std
jg
xor
dec
data16
dec
or
sub
mov
push
jle
pusha
cmpsb
es
cmp
shll
loope
stos
jge
adc
and
repz
xchg
dec
test
sub
pop
xchg
dec
lock
cmp
inc
sarl
inc
lret
xchg
mov
cmpsl
lock
jle
movsb
dec
jnp
push
icebp
or
popf
push
jl
mov
xor
push
js
mov
aas
adc
lock
sub
pop
mov
sub
cmp
cmpsl
pop
cmp
imul
xchg
add
adc
arpl
hlt
scas
stos
dec
movl
in
push
or
pop
cmpsl
lods
inc
shrb
das
cmc
ds
repz
fimull
fnsave
les
enter
xchg
leave
test
fnsave
enter
imull
add
clc
fsubrs
outsl
inc
pop
fadds
or
xlat
insl
jmp
repz
bound
jne
xchg
and
mov
ret
gs
popa
pop
push
push
insl
xchg
ret
cmp
pop
call
dec
int3
mov
push
mov
aas
fistpll
pop
or
out
dec
cmp
mov
xchg
add
stc
shlb
lret
mov
jg
xchg
dec
push
in
mov
mov
mov
push
push
stos
fdivrl
lods
mov
sahf
mov
push
stc
sbb
arpl
mov
xor
imul
stc
out
rcrb
insl
aad
mov
cmp
lret
xor
pop
push
xor
xchg
adc
cmpsl
mov
in
pop
bound
enter
ret
sbb
add
jle
aas
mov
icebp
int
popf
data16
lea
test
sbb
das
rcrb
sub
out
cli
pop
cmpsb
adc
ds
mov
loop
mov
leave
push
insb
scas
add
int3
hlt
addr16
sbb
add
or
mov
lret
leave
jecxz
mov
mov
insb
pushf
sbb
aam
dec
loopne
insb
fsubrl
fisubs
mov
push
xor
sub
jle
and
es
movsb
andl
inc
xchg
test
in
jl
stos
push
shrl
clc
or
arpl
popa
movb
xchg
insb
lret
push
icebp
pusha
cmpsb
adc
loop
dec
in
dec
aaa
sti
std
pop
push
xchg
cmp
xchg
mov
xor
ficoml
fbstp
add
fdivr
icebp
lea
arpl
insb
jne
and
jle
pop
shrl
leave
sbb
daa
cmp
arpl
sub
cmpb
ljmp
cmp
leave
adc
cmp
push
mov
jle
xor
and
insl
fcmove
xorb
mov
adc
cmp
dec
xorl
into
xchg
cmp
sbb
mull
jno
and
xor
mov
sbbb
push
scas
test
xor
das
jno
fidivs
push
into
mov
mov
repz
scas
push
fwait
mov
mov
inc
je
adc
jmp
cmc
andl
popf
ljmp
hlt
push
sub
mov
in
out
outsb
pop
imul
pop
mov
sahf
aam
test
cwtl
dec
lock
push
inc
out
inc
mov
push
mov
dec
ja
jae
and
jp
sub
sbb
sti
sbb
xor
shlb
jecxz
inc
call
aaa
mov
je
stos
dec
test
nop
repz
test
xchg
imul
dec
bound
or
mov
or
pushf
insb
push
arpl
iret
xor
lock
cmp
pusha
mov
mov
stc
push
xchg
rcll
aad
ja
fidivs
inc
fisubrl
xchg
cmpsb
pop
cmp
adc
pop
cmpl
pop
movsb
and
andb
push
mov
addr16
mov
sub
mov
mov
lock
sbb
mov
dec
ret
mov
dec
sub
inc
mov
ret
and
imul
aas
and
jae
mov
insl
int3
addr16
or
lret
jp
fs
inc
sbbb
movsb
pop
out
sbb
push
mov
and
into
in
gs
pop
incb
daa
add
and
jno
sub
lret
lcall
dec
push
sbb
loope
ljmp
lret
out
pop
sub
jbe
insl
gs
test
adc
jle
mov
pop
add
or
fwait
pushf
fcmovb
mov
int3
inc
pop
jo
cmp
mov
scas
inc
inc
xchg
fwait
mov
jle
push
dec
jo
xchg
jo
inc
pop
inc
sbb
add
outsb
lret
movsl
mov
stos
ret
sti
mov
ss
in
pop
mov
jmp
pop
mov
aaa
and
loope
xchg
mov
inc
mov
repz
incl
ret
cld
jb
add
or
pop
sub
dec
shll
daa
xchg
cld
cmc
cmp
sbb
lret
add
jmp
icebp
sub
sbb
add
push
xor
stos
mov
mov
sbb
cmpsb
lea
jg
add
lock
icebp
or
repz
out
add
push
jo
sti
xor
int
loope
test
jbe
push
out
pop
xchg
or
push
in
in
xchg
fdivrl
ret
insb
mov
sbb
dec
cld
sub
sub
repnz
leave
jnp
int3
pop
cmp
mov
mov
cmpsb
enter
pop
in
lahf
push
or
xor
hlt
dec
int
adc
into
mov
pop
cwtl
xor
clc
lcall
sub
loop
ja
cs
outsl
bound
cld
bound
push
inc
arpl
dec
pop
dec
cmovb
cmc
push
or
into
xor
or
push
sbb
out
rclb
xlat
ret
test
bnd
sub
test
inc
shlb
push
loop
imul
fdivs
insb
xchg
and
inc
aad
pop
xor
cmpl
jo
inc
adc
ds
inc
shll
js
or
mov
lods
or
ljmp
addr16
mov
sbb
adc
and
sarl
adc
cs
outsb
and
out
jno
fistpll
aam
out
test
sbb
mov
jnp
mov
jb
add
rcl
rcrl
lods
aam
rorb
inc
sahf
mov
imul
and
xor
adc
cld
jp
mov
iret
test
gs
mov
push
mov
push
mov
or
rcrl
inc
cli
out
mov
cmp
ljmp
jecxz
dec
inc
adc
dec
push
dec
mov
pop
mov
out
and
sti
pop
jp
jno
adc
fistpl
pop
dec
jo
mov
popf
insl
sbb
fstpt
fcomp
test
mov
sub
pop
adc
xchg
cmc
and
mov
inc
pop
les
and
jge
stc
lcall
int3
sbb
jecxz
je
aad
mul
lret
xchg
popa
dec
inc
or
inc
js
or
push
add
rclb
cmpsb
add
push
es
fistps
into
mov
mov
sbb
adc
xor
push
push
stos
inc
xorl
add
out
outsl
fwait
or
js
enter
sarb
fs
sbb
mov
push
arpl
jno
push
xchg
test
repz
int
ljmp
mov
pop
repnz
in
movsl
sub
fcoml
in
push
incb
movsb
imul
jnp
push
mov
pop
add
loopne
or
loopne
xchg
or
sub
enter
pop
add
push
pop
inc
nop
popf
les
add
inc
xor
cmpsl
dec
rorl
xor
fsubr
popf
adc
xchg
rol
xchg
outsb
xor
push
outsl
ss
orl
jge
adc
jl
inc
negl
xchg
jae
cmp
adc
sub
dec
cli
pop
es
mov
ljmp
es
popa
ret
and
xlat
in
and
loope
xor
imul
nop
push
decb
fdivrs
lret
push
fdivrl
in
mov
rcr
push
sub
xlat
incb
fmull
in
sub
pop
repnz
lods
xor
in
dec
out
call
pop
cld
ss
in
sbb
mov
xchg
outsb
xchg
pop
in
or
inc
sbb
test
and
pusha
jne
xor
push
movsl
cmc
and
or
leavew
sbb
out
fistpl
mov
gs
dec
xor
lods
xchg
cmp
daa
dec
jnp
outsl
jno
add
arpl
movsl
icebp
lock
testb
out
push
sti
stos
in
pop
inc
cmp
and
push
or
pop
mov
xchg
das
mov
ds
divl
inc
or
icebp
dec
test
mov
dec
jl
fistpl
xchg
push
fdivrl
out
movsl
jae
push
imul
in
inc
jbe
dec
insb
sbb
fbstp
mov
rol
cmp
adc
mov
inc
add
fisubrl
xchg
cmp
sbb
fimuls
lock
mov
mov
ss
sbb
inc
cwtl
jle
jne
adc
fcoms
out
dec
add
mov
pop
sub
lea
or
in
cwtl
lods
push
icebp
jmp
push
lret
aas
mov
push
vunpcklps
rcr
imull
dec
xor
mov
aam
outsl
cld
cmp
repz
nop
push
andb
cs
pop
in
daa
inc
add
mov
adc
popf
or
push
inc
ret
push
lea
hlt
sub
mov
jno
dec
and
lods
pop
leave
clc
cmp
aam
jo
mov
and
push
mov
in
in
dec
aam
xor
xchg
add
arpl
push
mov
pushf
ficomps
idivl
iret
outsl
stos
jp
mov
cltd
cmp
mov
mov
ja
ljmp
push
push
subb
test
mov
push
dec
test
sub
iret
mov
fidivrs
or
inc
iret
and
pop
add
inc
push
mov
mov
mov
lock
mov
jle
pop
pushl
dec
mov
cmpsl
outsb
js
add
shrb
and
imul
adc
in
mov
push
stos
push
daa
pop
jbe
sbb
mov
adc
int
hlt
pop
xor
adcl
and
imul
inc
xor
stos
mov
lock
inc
outsb
leave
out
lahf
push
scas
insb
inc
mov
inc
fs
aas
mov
mov
inc
or
test
scas
push
les
adc
jo
push
enter
cmp
mov
xchg
test
shlb
and
shrb
test
xchg
aad
ljmp
imull
or
jbe
add
cmc
add
sub
mov
mov
shrb
cmp
aam
cmp
test
xchg
lds
jns
pushl
in
fnstcw
pop
mov
xor
movsl
int
push
aad
pop
pop
fldenv
cmc
ret
mov
inc
adc
je
cmp
xorb
das
setl
mov
sub
add
adc
xchg
cmp
mov
pop
stc
or
test
test
stos
dec
jnp
jnp
xchg
push
js
pop
push
mov
and
pmullw
inc
mov
jle
cld
push
clc
jns
jp
xor
loopne
sarl
adc
jae
clc
std
cmp
push
cmc
popf
lahf
sub
in
jae
jmp
out
xchg
sub
scas
push
sub
xchg
cmc
pop
shll
test
adc
out
sub
mov
pushf
decl
mov
push
dec
je
push
pop
inc
mov
iret
mov
outsl
xor
jno
aad
adc
sahf
xchg
push
jo
mov
int
pop
test
mov
mov
es
int
dec
and
xchg
cmp
mov
xchg
pop
push
jno
add
pop
pop
in
aad
mov
inc
mov
add
jno
pop
sti
xor
pop
mov
jae
out
pop
xchg
mov
sti
ret
aam
push
jae
in
lods
fcom
ja
pop
adc
dec
sub
sbb
cmp
outsb
into
inc
js
std
test
pop
shl
mov
popf
lcall
add
frndint
fimuls
cltd
and
or
insl
and
cmp
fstpl
nop
inc
cmp
push
imul
adc
cmc
fimull
jmp
sub
adc
xorl
aam
imul
sbb
cs
jne
jne
lods
fisubrl
popf
test
cwtl
cmp
dec
mov
dec
push
ret
rcr
ds
data16
mov
push
cwtl
inc
push
adc
lret
pop
jg
rcl
pop
mov
or
mov
push
add
mov
adc
mov
mov
push
mov
inc
rclb
clc
add
aaa
cli
rcrb
or
cld
cmc
push
mov
cmpsl
mov
lret
mov
inc
cmp
mov
jne
addr16
mov
incl
daa
or
or
stc
loope
or
cmp
leave
jnp
in
sarb
xchg
in
or
inc
mov
mov
xchg
roll
sbb
sub
mov
sbb
adc
and
lea
push
sbb
fisubl
aaa
into
subb
mov
lea
enter
dec
mov
dec
sub
in
aaa
sub
sti
sbb
push
lock
fcoml
vcvtsi2sdl
mov
out
mov
pop
nop
shrb
inc
inc
or
or
sub
addr16
jp
mov
mov
pusha
xchg
scas
dec
mov
loopne
es
popa
push
ret
or
popa
xchg
xchg
ret
xchg
adc
mov
imul
js
inc
movsb
les
sub
add
stos
scas
int
sbb
or
in
push
shrb
mov
stos
inc
inc
cmp
add
pop
sbb
dec
cmp
dec
hlt
jne
sbb
mov
repz
xchg
call
and
lcall
jle
adc
or
xchg
xor
aaa
mov
cmp
xchg
and
adc
data16
out
mov
mov
xchg
nop
sbb
xchg
push
pop
inc
scas
sti
sbb
jp
push
pop
inc
lods
ds
out
jbe
pop
add
or
xchg
in
push
aas
xorl
inc
lret
cmp
jge
in
xchg
pop
inc
imul
pop
mov
xchg
push
daa
cmp
shl
arpl
fwait
ds
insb
adc
pop
lods
mov
xchg
jecxz
fdivs
xchg
xchg
or
jge
test
xor
mov
jbe
sbb
scas
mov
mov
dec
clc
add
pop
stos
push
ret
rcl
mov
arpl
scas
ret
adc
cmpsl
add
jle
or
or
arpl
mov
ret
frstor
loop
fstl
sub
xor
loop
cmp
push
sbb
stos
pop
loopne
clc
dec
daa
or
push
xchg
test
fildll
daa
clc
cs
inc
movsb
fldt
test
sbb
divl
clc
mov
into
stos
and
in
fsubs
shrb
loope
arpl
aaa
xor
pop
xor
xchg
sbb
pop
popa
out
test
xor
fisttpll
ja
and
sub
out
xorb
xchg
sbb
mov
jo
or
repz
es
in
leave
sbb
in
js
add
outsl
test
stos
mov
add
sub
dec
pop
gs
jge
sbb
or
push
mov
addr16
mov
push
mov
xchg
lahf
in
and
testl
in
inc
sub
divb
js
jno
mov
lcall
stc
xchg
mov
movsl
lods
rcl
mov
push
inc
cmpsl
mov
or
push
push
bound
imul
sbb
fcom
mov
dec
push
inc
lds
pop
or
adc
push
mov
idivl
xor
sub
xchg
push
iret
arpl
dec
das
scas
mov
lock
and
fnop
mov
mov
addb
inc
jp
stc
sbb
popa
out
inc
loop
lods
insb
imul
inc
test
mov
mov
movsb
push
mov
testb
icebp
mov
sbb
ja
bound
cmpb
xor
lcall
add
or
mov
push
push
rcl
xchg
scas
movsb
mov
insb
test
movsb
push
pop
dec
pop
or
pop
pop
lret
and
out
dec
cmpsb
push
sahf
data16
mov
cmp
outsb
jle
lret
jnp
mov
or
jno
test
lcall
and
and
add
xchg
sbb
push
fmul
inc
mov
sbb
jne
and
outsb
adc
cmp
ret
inc
pushw
daa
and
cld
in
inc
xlat
fwait
daa
dec
mov
lds
loopne
test
or
imul
sub
andb
jne
dec
test
je
sub
mov
loop
xchg
fisubs
mov
jmpw
sti
nop
nop
mov
mov
inc
lods
jl
out
pop
cltd
xchg
xor
repz
pop
out
pusha
nop
xor
xor
adc
imul
icebp
push
sar
mov
cmp
sti
pop
mov
clc
iret
sbb
inc
dec
enter
mov
out
loopne
mov
pop
stos
sub
pop
push
mov
out
pop
pop
or
or
rcrl
adc
cmp
cmp
ficoml
add
or
iret
pushl
movsl
xor
in
xor
test
pop
fxch
lods
in
inc
out
aaa
adc
pop
or
dec
adc
push
popa
add
mov
or
pop
inc
pop
stos
call
or
mov
and
mov
pop
lahf
enter
push
cmp
sbb
mov
iret
shr
add
rcll
cmp
push
ret
stos
sub
xchg
push
mov
jns
sbb
jl
push
out
dec
inc
imul
add
mov
mov
sub
mov
lret
pushf
leave
insl
loopne
out
stos
scas
mov
sarl
hlt
adc
lahf
dec
mov
fsts
push
add
fnstcw
incb
subl
xor
das
arpl
or
test
push
into
adc
insl
fsubs
xor
enter
mov
cltd
mov
inc
outsl
cs
insl
lahf
cmp
push
mov
sbb
cli
sub
cmc
lcall
jnp
enter
bound
push
ret
add
mov
add
dec
jb
push
inc
aad
push
in
sbb
fcompl
insb
rorl
adc
loop
sbb
in
cmp
sub
mov
xchg
mov
adc
mov
pop
xchg
mov
add
ss
mov
lret
xchg
push
mov
dec
aaa
lret
mov
dec
or
cmpsb
rolb
dec
out
push
xor
lods
in
adc
arpl
imul
push
pop
fidivrl
orl
aam
fsubrs
int3
enter
jecxz
cmpsb
adc
cmpsl
jnp
sbb
or
cmpsb
jle,pn
stos
shrb
outsb
jo
jno
pop
mov
insb
lea
pop
jmp
mov
jp
fsqrt
les
clc
mov
mov
jle
aaa
imul
call
xor
imul
mov
movsb
ss
cli
hlt
mov
loopne
sub
es
xor
sub
push
repnz
scas
call
addl
adc
out
push
mov
icebp
rorb
and
int
fnstenv
inc
push
call
fdivl
push
in
mov
xlat
jo
jnp
or
or
int
mov
and
cmpsl
mov
lcall
sub
scas
gs
jle
lods
nop
pop
rcrl
ret
and
and
sub
mov
xor
jge
int
adc
adc
xor
xor
aad
jae
adcl
daa
cmp
gs
loope
jns
jnp
pushf
push
add
mov
adc
jb
and
and
lahf
fsub
andb
cli
outsb
mov
outsb
jecxz
mov
mov
push
lret
cli
jl
pop
pop
xchg
mov
outsl
lods
frstor
mov
inc
clc
test
fisttpll
cmpsl
and
imul
fwait
lods
inc
popl
test
cltd
in
mov
jg
mov
sbb
shlb
cmp
xor
or
dec
mov
outsl
mov
mov
clc
jmp
repnz
ret
out
ffreep
hlt
sbbl
jb,pn
cmpsb
repnz
push
imul
and
cltd
imul
cmp
xchg
cmp
sub
std
js
sti
mov
mov
lcall
out
loop
mov
cwtl
jp
lret
sub
dec
sahf
movsl
out
pop
fdivrl
inc
mov
cmpsb
cld
idivl
fwait
lcall
sub
jae
jecxz
dec
mov
es
mov
shlb
movsl
cmp
add
dec
xor
xchg
aas
jg
jb
fwait
jbe
ret
or
jl
ret
adc
inc
jmp
std
xchg
cmp
mov
rcrb
push
push
sbb
scas
adc
idivl
int
popf
push
sub
and
fcomp
cs
mov
int
cmp
call
aad
lods
test
add
repz
int3
mov
lret
dec
fcompl
lea
aad
pusha
sub
hlt
int3
xchg
xorl
int
sub
mov
fdivrs
stos
test
adc
xchg
pusha
popa
shl
push
pop
mov
lea
rcll
mov
iret
mov
cli
or
loopne
pop
in
push
sbb
loope
sar
pusha
sub
and
add
imul
push
repz
cmp
mov
jnp
mov
pushl
pop
roll
mov
cltd
arpl
mov
gs
idivb
loop
sahf
add
mov
es
aad
jecxz
int3
sub
lods
ret
enter
xor
pop
imul
push
aaa
shlb
push
ds
xor
jge
xchg
fdivs
fstl
repz
inc
push
dec
aad
mov
xchg
add
in
pop
aam
mov
popa
or
or
and
push
lock
iret
mov
cld
jle
fucomp
pop
shr
mov
out
adc
lods
icebp
out
pop
aad
addr16
jns
mov
in
ret
jne
jne
xchg
cs
aaa
fists
cltd
ficoml
jbe
ret
xlat
data16
mov
test
jle
scas
mov
dec
cmp
cwtl
or
dec
data16
and
dec
iret
aad
push
enter
push
pop
std
loop
mov
data16
mov
mov
sti
fs
add
pop
push
push
leave
mov
sub
popf
xchg
aad
pop
mov
xor
jmp
into
mov
ficoml
mov
shr
push
pusha
loop
jnp
cmp
adc
xor
fcmovnu
insl
ret
dec
pop
add
xchg
rolb
loop
mov
enter
cmp
movsl
shlb
lcall
cmp
daa
les
mov
fnsave
fiadds
add
repnz
push
jne
mov
inc
daa
xchg
jge
sahf
cmp
and
fnstenv
xchg
das
push
push
cmp
cs
mov
outsb
dec
mov
and
mov
dec
mov
pushf
or
scas
std
mov
fwait
enter
stos
cmpsl
mov
rorb
and
adc
mov
addb
cwtl
data16
pop
push
or
cwtl
or
subl
aaa
inc
xchg
test
decl
push
outsl
lahf
sub
ret
mov
adc
in
repnz
andl
into
xor
jne
aad
lock
test
les
dec
fsubrl
fwait
pusha
cli
shrb
push
xor
in
inc
std
rcrl
outsb
inc
stc
jle
xor
pop
sbb
xchg
insb
adc
cmp
mov
dec
in
hlt
arpl
sbb
add
mov
rclb
cmpsl
out
out
mov
jnp
jge
pop
xor
inc
cwtl
lea
pop
mov
xchg
into
clc
out
andb
pop
push
inc
sbb
jno
scas
mov
add
cs
jo
mov
xchg
add
mov
mov
jge
xchg
cmpsb
stos
or
fwait
xchg
push
rclb
xlat
inc
mov
jbe
xchg
push
icebp
fdivrs
cmpsl
fimuls
mov
addr16
push
stos
xor
sbb
adc
xchg
test
jmp
je
pop
jo
out
add
call
and
stc
ret
jmp
ds
jl
mov
add
rcrb
in
xor
xchg
push
push
xchg
adc
mov
mov
aas
push
aam
mov
mov
fnsave
jo
sbb
lret
mov
add
cs
sbb
shlb
pop
test
xor
out
xlat
fwait
mov
cmp
fdivr
popa
mov
std
and
hlt
inc
cmp
ds
dec
arpl
inc
add
mov
sti
test
dec
xchg
jne
pop
mov
loopne
lods
add
int
roll
xchg
inc
mov
cmp
imul
cmpsl
adc
jbe
jbe
out
repz
in
repnz
cltd
fs
adc
gs
or
mov
mov
jae
add
insl
lcall
add
pop
xor
ficompl
and
sub
out
mov
repnz
outsl
xchg
jno
push
mov
jo
in
mov
mov
xchg
add
or
rcll
adc
pop
das
sbb
fbstp
into
daa
add
sub
sub
aam
movl
mov
mov
jo
cmp
popf
stos
add
jg
test
clc
lods
jo
and
je
push
nop
in
cmpsb
insb
lret
inc
xchg
mov
mov
or
ds
add
inc
out
es
cs
sarl
dec
push
xorl
ficoms
movsb
fildll
daa
punpckhwd
shlb
ficoms
aad
das
pop
aaa
xchg
loope
push
pop
cmp
and
test
push
mov
xor
sbb
fiaddl
ds
mov
pop
scas
lea
outsl
mul
je
jns
imul
lock
mov
push
mov
push
lea
pop
pop
fbstp
sub
mov
inc
jl
test
or
dec
ret
rorb
push
dec
repnz
testb
lret
sub
sti
lock
push
lds
or
mov
roll
sbb
dec
sbb
mov
movsb
cli
and
fwait
popa
pop
or
js
sbb
into
loopne
or
push
rolb
adc
fbld
negl
cli
ds
popf
or
mov
xchg
adc
push
fmuls
lret
adc
pop
sbb
cmp
imul
insl
xchg
dec
mov
jecxz
es
mov
icebp
pop
mov
clc
adc
in
imul
mov
dec
cmp
addr16
push
mov
pop
inc
mov
and
gs
mov
add
add
dec
or
inc
enter
pop
mov
notl
cmpsl
sub
and
xchg
test
jns
inc
loopne
mov
les
fwait
adcb
or
or
cmpsl
push
jno
shrb
mov
enter
sub
lds
jl
sub
std
jae
mov
cs
cmp
pop
adc
and
jne
in
lods
sbb
xchg
inc
in
xchg
jnp
xchg
std
jmp
pushf
xor
test
sbb
mov
js
dec
aam
fisubrs
fstl
jmp
mov
loop
out
and
std
scas
pop
jle
into
in
or
lcall
sarb
inc
lock
lds
insl
adc
and
mov
add
pushf
xlat
pusha
in
jno
lret
pushf
adc
ds
adc
lcall
in
mov
sbb
push
lods
jle
das
push
mov
int3
mov
xchg
fidivl
xor
cmc
lods
adc
jbe
push
inc
push
mov
jge
fwait
jl
aad
leave
mov
movsl
add
cld
add
in
repnz
lods
ljmp
cmp
in
stos
cli
addb
jns
jne
adc
cld
scas
push
inc
mov
iret
mov
sbbl
imul
addb
or
push
test
xchg
mov
imul
fdiv
arpl
or
ds
aad
jmp
mov
nop
push
push
popa
sbb
adc
call
out
mov
mov
jmp
cs
aad
mov
and
das
aaa
dec
inc
movsl
stc
push
inc
mov
jns
adc
std
pop
sbb
mov
jmp
or
xchg
js
std
mov
icebp
xor
xchg
fcmove
jmp
jg
test
js
fs
add
imul
aaa
sub
cmp
enter
pop
mov
aaa
add
test
xor
xchg
inc
ror
neg
subl
ficoms
outsl
cmpsb
cmp
movsl
pushf
test
mov
push
jg
je
scas
mov
int3
add
pop
jmp
pop
inc
jb
cmp
leave
pusha
inc
mov
sbb
mov
and
popa
pop
es
xchg
xchg
cmpsb
cltd
test
outsl
in
inc
repz
sti
lahf
ret
data16
notb
push
js
stos
imull
mov
push
sbbl
andl
int
std
shlb
fadd
cmpsb
imulb
fucom
jle
je
ret
arpl
fmuls
pop
lock
popa
or
test
test
dec
ret
test
call
dec
pushl
insb
jl
pop
orb
aaa
mull
popf
jecxz
imul
push
in
fidivl
sbb
and
ja
loopne
lods
es
inc
insb
movsb
xlat
jl
leave
ljmp
insl
mov
and
ret
sbb
adc
mov
dec
aaa
pop
aad
add
je
test
jge
mov
push
jmp
mov
pop
jp
imul
bound
push
and
rcr
sahf
jg
cmp
inc
daa
lahf
roll
mov
xchg
mov
lods
mov
add
xlat
test
mov
out
jl
fdivp
rolb
es
pop
jmp
mov
daa
fcomip
sub
jne
push
loop
pop
in
mov
adc
push
xlat
in
sbb
adc
sti
test
lds
push
xchg
add
aas
sahf
cld
and
cltd
dec
add
cwtl
pop
sarb
mov
inc
fdivr
pop
aaa
lds
mov
jno
and
movsb
cltd
and
outsl
sti
inc
mov
dec
xchg
push
rcrb
cmpl
adc
scas
arpl
fistpll
jp
push
dec
add
dec
pop
xchg
es
jbe
inc
scas
inc
stos
mov
add
rcl
xor
and
bound
dec
sbb
imul
sbb
mov
sbb
in
cltd
xchg
and
dec
lret
pop
sbb
mov
pop
psrlw
or
mov
in
ror
sti
negb
test
lock
adcb
inc
add
sbbb
jbe
cld
mov
mov
scas
cmpsl
xchg
stc
scas
out
cwtl
in
pushf
inc
xor
inc
aas
lods
stos
mov
cmc
add
dec
popa
xor
jge
pushf
push
sbb
test
fdivr
jmp
call
jmp
cmp
hlt
mov
sbbb
and
lea
mov
cmp
nop
mov
xor
jbe
sub
push
jb
decl
out
daa
jp
imul
stc
sub
fadds
ret
and
rcrl
sbb
pop
push
cmp
jmp
inc
push
push
add
out
cmp
xchg
xor
shrb
xchg
pushf
add
and
sbb
and
push
ss
leave
xor
test
jae
mov
xchg
nop
xchg
fwait
je
pop
and
testb
mov
jo
pop
outsl
out
inc
mov
fwait
sbbl
xor
aaa
hlt
pop
dec
pop
pop
stos
outsb
jmp
push
imul
adc
jmp
sti
cmpsl
aad
ret
pushf
mov
pop
xchg
and
jbe
pushf
dec
in
sbb
movsl
push
lods
cltd
inc
sbb
pop
fsubs
lods
outsb
mov
sub
push
sti
icebp
arpl
mov
sub
pop
mov
dec
cmp
mov
lds
idiv
test
xchg
ret
repnz
mov
or
mov
add
jl
jne
in
xchg
inc
shrb
test
paddsw
cmp
inc
ret
pcmpgtb
pop
add
mov
imul
mov
jns
insb
push
pushf
adc
adc
mov
cmp
inc
test
fldenv
dec
push
mov
add
adc
nop
loop
out
lret
push
inc
mov
push
out
mov
push
adc
xchg
adc
inc
es
inc
pop
andb
cmp
xchg
inc
dec
loop
mov
pop
inc
daa
mov
std
and
das
mov
cmp
pop
iret
push
xchg
pop
adc
ret
mov
sbb
daa
mov
mov
push
jg
push
inc
outsb
dec
ficoml
stc
add
sar
mov
into
cmp
jl
add
add
jecxz
xchg
mov
repnz
push
jmp
mov
std
arpl
pop
jb
repnz
loopne
out
add
push
xor
cmp
into
in
sub
fdivrl
out
ficomps
and
aam
xor
dec
lods
cs
rclb
pop
push
dec
fwait
negb
lahf
mov
ja
arpl
test
lds
sbb
jb
push
mov
je
pop
mov
fwait
dec
fsub
mov
ss
push
push
xchg
imul
mov
jmp
jnp
cmovns
loopne
jae
outsl
dec
scas
test
ss
xor
xchg
addr16
inc
mov
std
in
xchg
daa
push
nop
sti
sti
lret
mov
cmp
lcall
dec
pop
pop
in
cmp
pop
add
push
jp
adc
dec
mov
aad
mov
hlt
movsl
movl
pop
sub
push
fldt
call
sub
mov
nop
add
or
sub
je
xchg
mov
inc
in
sub
in
stc
push
xor
mov
add
add
or
call
or
out
jns
lahf
cs
fs
or
jl
and
xchg
pop
hlt
test
lods
imulb
dec
and
mov
jge
adc
or
xor
push
leave
sbbb
sub
cmp
in
stc
nop
pop
cld
call
xchg
lock
js
das
rcrb
jbe
pop
adc
push
clc
and
mov
or
repnz
test
pop
push
push
lock
xor
mov
popf
out
pop
cmp
cmpsb
pusha
adc
fs
imul
or
mov
adc
repz
jb
loop
repz
cmp
faddl
sub
add
ljmp
pop
push
shr
xor
shll
mov
and
xchg
out
sti
in
mov
and
and
jo
fbld
ja
xchg
mov
nop
dec
pushf
js
scas
push
jo
mov
inc
fistpl
je
xor
dec
mov
jo
out
pop
fisubrl
mov
es
or
loop
dec
mov
pop
ljmp
test
out
stc
mov
sti
ret
sub
xchg
and
mov
xor
pop
mov
mov
and
and
rolb
and
sbb
test
push
test
scas
icebp
cwtl
pop
jnp
testl
inc
jp
sbb
jo
or
je
aas
cmpsl
mov
aas
jne
and
dec
test
adc
shlb
adc
dec
jae
dec
push
add
idivl
sbb
pusha
jno
hlt
or
aaa
imul
xor
jecxz
inc
pop
dec
xchg
iret
mov
das
or
push
imul
sub
je
mov
movsl
mov
push
movsl
popa
ljmp
out
sbb
adc
mov
or
sti
mov
cmpsb
mov
mov
inc
lods
add
sub
int3
aam
or
outsl
xchg
xor
push
sbb
std
mov
shrl
pusha
push
outsl
stos
xor
arpl
cmp
ficoml
dec
test
nop
subb
xchg
std
cwtl
add
movsl
xor
mov
and
fstpl
cmpsb
mov
mov
adc
mov
or
lret
into
inc
adc
lret
inc
or
push
pop
lock
ret
cs
pop
mov
jg
sbb
mov
roll
jbe
movl
push
loop
cwtl
mov
pop
sbb
mov
imull
push
ss
mov
add
dec
push
aam
cli
out
add
xor
sub
int3
test
in
and
in
mov
inc
popf
pop
popf
sbb
and
pop
in
loope
push
and
or
loopne
das
add
and
mov
xchg
push
mov
xchg
mov
pop
inc
scas
daa
pop
cmp
push
rcrl
dec
pop
push
stc
scas
jp
adc
cmc
aad
js
pop
pop
mov
shll
dec
movsl
fidivs
ds
scas
jae
mov
mov
inc
inc
jns
lods
cmc
pop
pop
cmp
pop
aam
sti
cmp
cli
or
setae
push
adc
mov
mov
loope
cld
dec
jbe
sbb
dec
dec
or
test
push
xor
adc
cmp
bound
sahf
and
lcall
sbb
adc
mov
jb
xchg
orl
imul
nop
mov
xor
mov
fisubl
and
fcomi
sbb
jmp
jge
dec
sbb
out
mov
jecxz
push
xlat
and
mov
aad
aas
aaa
mov
push
int
mov
xor
loopne
testb
lret
add
loope
mov
cmpb
mov
cmp
cli
hlt
mov
fst
je
lret
lock
jp
vorps
cmc
mov
test
mov
mov
cltd
add
and
movsl
push
das
movsl
ds
into
mov
cmp
xor
or
xor
mov
and
add
imul
ja
addl
inc
cmpsb
inc
stos
and
xchg
mov
xchg
xor
mov
mov
movsl
cli
jbe
adc
outsl
adc
xchg
cmp
mov
mov
inc
lock
mov
ds
ja
stc
add
out
orl
loopne
xchg
int
inc
pushf
out
jo
sbb
cmp
jno
subb
mov
mov
leave
or
mov
lret
add
and
inc
lcall
notb
aaa
xchg
fs
xor
cmpsl
movsb
mov
cmp
add
iret
mov
inc
inc
loop
je
xchg
sbb
in
std
pop
jnp
push
pop
rol
sbb
fstl
dec
inc
pop
sub
cmp
xchg
movsb
pop
xor
or
mov
jbe
jmp
sbb
test
call
dec
cmpsl
lret
push
xor
sbb
cld
add
hlt
pop
dec
out
add
enter
mov
fwait
int3
ficoml
mov
adc
nop
loope
das
inc
decl
addl
mov
enter
mov
dec
xchg
dec
mov
popa
adc
int
addr16
pop
ss
jo
mov
or
inc
popf
lock
daa
xchg
popa
mov
mov
shlb
aam
cli
stc
stos
jno
adc
jg
filds
sahf
rolb
out
into
xlat
loopne
and
mov
jp
popa
mov
adc
loopne
pop
push
push
aam
lret
pop
aam
les
push
push
pop
ja
or
sub
xchg
mov
call
push
inc
and
fistpl
gs
push
cmp
int
lret
lahf
pushf
mov
pop
rorb
pop
sub
add
das
pop
dec
inc
pop
adc
pop
insb
xlat
pop
ret
cmp
or
mov
scas
inc
mov
sbb
xchg
arpl
dec
rolb
cmp
repz
adc
dec
mov
xchg
in
dec
jecxz
insb
sbb
cmp
xchg
xchg
pop
xor
mov
fsubrs
movsb
lea
mov
xor
xor
lret
fldcw
imul
push
jo
sub
or
fmul
adc
fisttps
and
xor
xchg
push
add
loopne
vpcmpeqd
jnp
dec
inc
scas
mov
test
cmp
mov
pop
ret
push
aad
in
cmp
lock
rorb
testl
in
addr16
mov
sahf
insl
or
inc
jge
in
jbe
int3
cld
fnstenv
push
cmpsl
fsubrl
rcrb
lds
mov
popf
imul
popw
int3
pop
pop
es
shlb
stos
cmpsb
repz
mov
inc
and
pop
pushl
push
aaa
pusha
lea
ljmp
xor
ret
sahf
xor
pop
jbe
fsubr
loop
ds
out
and
in
xor
int3
cmp
daa
aas
shl
mov
mov
jge
adc
and
add
insb
fdivl
push
aas
and
ficoms
add
xor
push
xchg
jmp
xchg
fs
mov
mov
cmpsb
mov
jge
cmpsl
nop
ljmp
xor
rorl
mov
imul
xchg
mov
fwait
cmp
pop
pop
fwait
aam
dec
loop
cltd
push
cld
stc
xchg
jb
jg
aas
les
pop
cwtl
or
sbb
sarb
push
gs
mov
xchg
imul
mov
aaa
ss
inc
cmp
inc
lock
shlb
push
mov
and
cltd
pop
add
nop
ds
les
test
and
and
xor
pop
lods
lea
xor
jl
xchg
dec
pop
cmp
pop
push
mov
imul
or
fwait
movsl
pop
cs
dec
cmpsl
push
neg
sub
out
je
jb
cmp
inc
sti
mov
adc
or
dec
mov
cmc
inc
mov
mov
lods
pop
xchg
loopne
fdivrl
sbb
and
in
mov
pop
imul
sub
mov
cmp
add
aad
aaa
pop
jmp
mov
inc
or
inc
insb
or
out
jne
mov
mov
adc
mov
jle
testb
push
mov
jne
aas
shl
in
push
fisttpl
jl
leave
mov
scas
adcl
lahf
mov
pop
or
jo
sbbb
arpl
mov
push
mov
cmp
lcall
mov
in
mov
ss
pop
pusha
jp
adc
jge,pn
sub
aad
xchg
jb
push
repz
xor
or
leave
cmp
scas
sbb
pushf
pop
movsb
mov
xor
repz
dec
bswap
push
jo
pop
jl
out
and
dec
pop
flds
push
shlb
pusha
xchg
insb
fisttpll
popa
mov
push
test
xchg
pop
cmp
adc
out
pop
lods
cmp
push
inc
es
movsl
fiadds
and
divl
dec
mov
pop
ret
pop
fs
call
jns
xor
mov
leave
test
mov
pushf
adc
lahf
sbb
scas
cld
fimuls
mov
out
orb
xchg
lea
sahf
mov
test
movzwl
mov
roll
cmpsb
test
inc
pop
incb
out
xchg
sub
jmp
fcmovb
sub
push
fbld
xor
leave
sbb
and
jb
repnz
fisubrs
xlat
sahf
or
shl
rcr
aas
test
cld
pop
pop
mov
pop
cmpsb
test
rorb
or
mov
data16
lcall
pop
popa
scas
daa
pop
icebp
mov
addr16
fstpt
mov
clc
jo
push
lods
ret
lock
dec
cmp
aad
push
icebp
jge
outsb
add
jge
testb
xchg
adc
mov
subb
or
mov
into
inc
sti
add
add
aad
push
xchg
pop
jo
fcompl
subb
orb
dec
mov
jmp
jmp
mov
sbb
or
and
cmp
xchg
dec
jl
xor
mov
daa
inc
insb
dec
push
inc
mov
xor
xor
add
pop
pop
mov
fidivs
pop
pop
imul
sbbb
push
mov
xchg
in
roll
push
stc
adc
sbbl
push
pop
seta
xchg
ljmp
xchg
sahf
and
pushf
mov
pop
in
xor
xlat
inc
lds
in
mov
jle
adc
adc
adc
sbb
or
push
add
das
jle
fcompl
or
movsl
test
call
pop
scas
sti
xchg
jmp
loope
stos
dec
and
ret
ss
sub
int3
pushf
jle
inc
cmc
adc
inc
punpckhdq
dec
cwtl
xor
pop
repnz
imul
jle
push
dec
pop
aas
mov
outsl
fs
ret
cmp
rcll
fneni(8087
es
lods
addr16
adc
xor
fs
mov
repz
scas
out
es
lret
scas
cmp
stc
roll
iret
sub
lock
cwtl
add
sbb
loop
fs
pusha
cmpsl
xor
out
mull
adc
out
loop
xchg
mov
mov
call
jne
into
cli
outsl
sahf
dec
sarb
stos
cmp
std
or
stos
push
dec
and
cmpsb
cmp
mov
jg
inc
push
daa
inc
pop
xor
je
pop
xor
std
push
test
cmp
popf
or
ja
mov
test
mov
mov
cld
mov
jmp
mov
xor
push
das
sub
enter
or
add
pop
dec
popl
xchg
xor
pop
xchg
rcl
gs
cmp
aad
add
xor
sbb
fsubrl
stos
out
pop
mov
push
fwait
hlt
pop
jecxz
xor
and
push
lret
popa
clc
loopne
ljmp
xadd
ret
pop
add
add
hlt
mov
jae
icebp
ret
aam
loopne
jle
ret
dec
mov
ror
dec
in
push
sub
sahf
inc
std
or
js
lahf
jp
test
pop
je
xchg
repz
mov
in
sub
push
orb
mov
daa
negb
pop
xor
push
leave
xor
out
cmp
jo
push
arpl
mov
sub
cmp
jmp
mov
ds
out
popa
sahf
add
push
jne
pop
loope
inc
adcl
movsl
sub
stos
or
sbb
pop
sbb
test
and
push
jno
dec
inc
mov
in
clc
popa
call
gs
inc
add
mov
stos
fistpll
sbb
xchg
dec
mov
xchg
outsl
cmp
pop
adc
out
push
mov
lret
adc
fimull
pop
xlat
clc
and
sub
icebp
fwait
popf
jg
jecxz
push
lcall
jno
sbb
test
mov
cmp
in
and
mov
cli
lret
cmp
lods
lahf
pop
fistpl
xor
fmulp
shll
insl
mov
mov
movsb
or
lods
pushf
push
data16
shll
iret
mov
sbb
test
dec
les
mov
movsb
pop
jg
jo
ja
aas
and
pop
into
orb
outsl
movsl
xlat
gs
and
ds
into
jae
mov
or
pop
das
mov
inc
lods
cmp
shlb
push
and
les
inc
les
mov
aaa
movb
rorb
int
arpl
out
pusha
sahf
arpl
repz
clc
dec
jo
xchg
es
inc
xor
add
sti
push
divb
sbb
iret
bsf
xchg
push
fdivrs
sub
out
subb
sahf
dec
rcr
jbe
data16
ret
sbb
int3
sbb
jne
pop
nop
mov
mov
xchg
out
pusha
sub
pop
andb
inc
ret
sub
pop
mov
ss
adc
insl
clc
cmp
push
je
ffreep
mov
jmp
jne
xorl
jge
insb
sub
es
lods
lahf
mov
in
push
jbe
inc
es
out
rolb
jmp
or
pop
adcb
call
int
push
arpl
jb
inc
mov
pop
jne
leave
pop
jne
mov
adc
imul
mov
bound
pop
scas
xor
mov
cmp
or
pop
mov
jo
sarl
mov
inc
je
leave
push
lcall
xor
lock
std
and
jge
jb
cs
or
inc
sbb
or
testl
pusha
lret
popa
push
jne
repnz
scas
cmp
or
lcall
add
pop
xchg
xor
loopne
add
push
cmpl
fisttpl
outsb
cmpsb
movsl
push
popa
ds
add
sbb
int3
pushf
popf
cmpsl
push
mov
notb
jne
das
mov
pop
xchg
add
cmp
data16
add
pop
push
sub
and
mov
int3
add
jae
jmp
inc
stos
or
inc
rolb
sbb
lock
xor
shrb
push
repz
push
xlat
movb
leave
jns
jp
aaa
add
pop
ret
xor
arpl
and
inc
xor
into
mov
call
mov
jmp
fwait
mov
jl
sahf
pop
cltd
std
jo
cmc
xor
loopne
and
mov
lock
sub
vcvttpd2dq
clc
push
leave
cli
ret
xchg
jne
or
hlt
mov
sbb
add
out
dec
cmpsb
rorl
lret
div
sarb
pop
xchg
cmpb
jg
lods
cmp
pop
scas
clc
add
inc
lods
mov
inc
add
dec
inc
aas
cld
jne
xor
cli
pop
call
les
call
xor
xchg
sub
ret
scas
rcrb
jno
repnz
aas
movsb
mov
in
mov
jp
sub
dec
xor
das
cli
pop
and
ret
sbb
aas
jmp
add
mov
outsl
mov
push
xchg
push
movsl
movsl
inc
push
std
in
out
out
and
test
xchg
popf
sbb
popf
jge
pop
clc
add
xchg
mov
push
inc
mov
call
sbb
adc
ljmp
outsl
inc
jns
jl,pn
mov
adc
fwait
inc
jge
push
add
pop
mov
dec
shlb
fdivrl
cmp
inc
cmp
in
movsl
testl
dec
pop
ret
mov
mov
push
shrb
push
scas
mov
sbb
ss
sbb
mov
cwtl
cmc
mov
push
loope
push
jmp
fistl
sub
aam
dec
xchg
loop
idiv
or
push
aad
cmpsb
dec
enter
sbb
inc
or
jmp
mov
insb
mov
xchg
rorl
stos
test
inc
inc
mov
das
fucom
pop
dec
popf
lret
adc
call
cmp
fstpl
outsl
jnp
call
ret
lods
pushf
lret
pop
pusha
out
dec
inc
out
inc
mov
jne
lahf
out
aad
fwait
cwtl
pop
inc
jp
xchg
sbb
lahf
mov
loopne
mov
andl
xchg
push
jecxz
xor
fwait
sbb
push
int3
mov
xchg
or
sarb
or
int3
negl
push
mov
push
lret
jmp
rorb
cmp
es
sbb
xchg
xor
insl
ret
jno
jnp
xor
sbb
int3
xor
call
cmp
gs
add
jno
stos
pop
fadd
add
shrb
sbb
nop
popf
push
push
test
sbb
pop
mov
movsb
arpl
ds
rorl
xchg
push
mov
sub
pusha
cmp
dec
sysenter
sub
rorl
enter
adc
arpl
into
jecxz
sub
mov
push
test
in
out
movsb
stc
xor
call
into
addr16
popf
pop
inc
lds
sbb
sbb
mov
pop
jns
and
sub
mov
shl
or
insb
ret
xchg
adc
movsb
pop
nop
add
scas
mov
jbe
jne
popf
lahf
shrl
lods
mov
dec
sub
icebp
xchg
stos
add
mov
inc
adc
xchg
shlb
xchg
xlat
addr16
jl
xchg
and
paddusb
aas
popf
rcrl
jg
inc
mov
ret
lods
hlt
aaa
movb
nop
popf
pop
mov
xor
pop
out
mov
pushf
hlt
rcrl
mov
mov
push
mov
in
cmpb
pop
pop
out
ret
shlb
shlb
ucomiss
pop
sbb
push
icebp
and
fdivl
and
leave
mov
pop
scas
stc
mov
test
lds
push
scas
cmp
sub
dec
test
jae
decl
flds
jnp
push
push
pop
nop
push
dec
and
scas
cmpsl
daa
dec
mov
leave
cmpsb
ds
or
enter
mov
movsl
in
call
mov
shll
movups
dec
mov
mov
outsl
add
xor
adc
imull
mov
cmpsl
sar
pop
lods
cmpsl
lret
mov
pop
mov
aad
lahf
iret
rcrb
cli
mov
xor
and
mov
push
cmp
mov
aaa
ds
cmp
imulb
fstl
or
push
mov
mov
push
cmpsl
popf
dec
mov
xor
cmpsb
stos
mov
inc
sbbb
cld
sar
nop
pop
dec
out
iret
inc
adc
test
test
sbb
test
lahf
pop
sbb
xchg
mov
mov
push
cmp
xor
out
cli
inc
jnp
sub
ds
lahf
imul
mov
shl
and
push
fsubl
mov
jbe,pt
inc
cmc
cmp
and
jo
lahf
aam
cmc
jb
add
push
into
xor
mov
xchg
push
cs
adc
repz
incl
test
push
mov
xchg
es
aad
les
imul
xchg
stos
rorb
stc
imul
or
fnstsw
fwait
mov
test
or
add
jbe
add
lds
nop
pop
in
jae
or
jns
or
push
daa
pusha
call
lods
inc
sbb
xchg
sub
cmpsl
stos
and
add
xchg
xor
scas
cmpsl
dec
adc
sahf
mov
std
and
loopne
push
mov
test
fsubrs
jecxz
inc
lods
lcall
push
movsb
lret
cmpsl
xlat
mov
mov
and
out
test
jb
rcll
js
jg
inc
xchg
inc
cltd
aas
lock
fdiv
xor
lds
inc
mov
lock
ret
add
ljmp
mov
sbb
cmp
jmp
scas
jno
lods
popa
movb
lahf
sub
mov
pop
push
ss
lcall
mov
pusha
idivl
sbb
adc
mov
scas
sub
mov
movsb
loope
ja
rcll
sub
lcall
call
cmp
int3
out
gs
push
push
mov
sub
lea
dec
adc
xchg
das
mov
in
pusha
popf
or
xchg
bound
jne
lret
or
mov
xchg
data16
mov
jo
in
das
outsb
jp
inc
xchg
push
mov
and
mov
sbb
test
fnstcw
jg
lret
sbb
popf
mov
mov
sbbl
add
sub
xchg
lret
pop
inc
pop
pop
enter
ss
jmp
scas
fs
xchg
clc
mov
push
or
js
shll
xor
adc
jbe
dec
arpl
adcl
outsb
outsl
mov
rorl
sbb
hlt
inc
sub
or
leave
adc
mov
fs
test
js
fbstp
mov
mov
or
jno
dec
cli
sarb
dec
inc
mov
xlat
xchg
push
pop
scas
std
lcall
dec
push
mov
negb
xor
hlt
jl
enter
or
mov
xchg
mov
mov
xlat
stos
mov
mov
test
jmp
aad
movsl
int3
mov
adc
mov
cwtl
sub
testl
iret
pop
fstpl
push
ss
loope
sbb
xlat
loopne
shrb
int
inc
xchg
and
sub
mov
jae
jmp
push
add
data16
out
jno
and
scas
sahf
dec
push
lcall
jns
mov
pop
add
xchg
mov
mov
and
leave
mov
movb
ss
push
cmp
mov
jp
mov
cmp
xor
dec
ret
inc
js
add
daa
dec
jl
mov
cmp
jb
or
push
mov
cmp
mov
add
ss
pop
shl
imul
lret
pop
add
rorl
mov
ror
popf
fdivl
dec
fsts
xor
inc
ret
imul
pop
add
cli
mov
aaa
cli
pop
adc
mov
pop
inc
pop
pop
dec
push
xlat
xor
and
movsb
xrelease
mov
jnp
jmp
hlt
outsb
leave
test
cmc
or
and
nop
and
fwait
ret
adc
push
in
outsl
aad
push
popf
cmp
cwtl
push
xchg
xchg
rcl
cwtl
ret
pop
mov
jnp
pop
cltd
nop
adc
pusha
jge
xchg
ds
in
cld
or
mov
cli
ljmp
shlb
add
push
iret
push
jae
movsl
ret
or
lock
add
sbb
cli
jl
mov
xchg
stc
lods
sub
jno
aaa
mov
inc
pop
dec
push
cmc
scas
std
lahf
mov
imul
mov
ljmp
aas
pop
mov
int
or
in
in
sahf
add
not
or
sub
in
idivb
mov
pop
cmpl
xorb
test
xchg
fsubrl
gs
pop
inc
out
js
dec
jae
push
stc
pop
das
in
sub
addr16
cmp
pop
push
ret
aad
roll
lock
cmp
stos
fprem1
push
mov
mov
cmp
cmpsb
and
lock
cmp
push
and
popf
sbb
je
xchg
dec
xor
inc
jp
cltd
adc
arpl
repnz
loopne
jecxz
popf
test
mov
filds
jae
jno
aam
cs
xlat
int
iret
fwait
xor
in
pop
fisttpll
sbb
mov
das
addr16
ret
dec
jle
push
dec
popa
dec
pop
add
les
movsl
data16
jmp
lcall
cmpsb
jae
popf
imul
jg
and
pop
popa
cli
imul
loop
pop
and
mov
push
dec
lods
jl
lds
jp
ficoml
mov
repz
ss
pop
mov
filds
jbe
pop
xchg
cmpsl
in
popa
mov
mov
pop
fwait
adc
xchg
lods
sub
xor
jmp
scas
out
or
jmp
xchg
fwait
rclb
scas
cli
andl
outsl
js
cli
enter
es
jecxz
xchg
or
popf
dec
lods
pop
or
pop
pop
xor
pushl
mov
in
pop
mov
mov
pop
test
into
xchg
fldt
pop
andb
gs
je
outsl
sbb
xchg
imul
sti
xchg
push
sbb
pushf
xlat
xchg
mov
adc
jne
repz
ret
aad
lock
and
out
sti
decl
subb
cltd
mov
pop
pusha
cmpsb
ss
and
rcrl
into
pop
out
add
push
nop
outsl
mov
or
int3
xchg
push
scas
mul
loopne
or
jge
test
push
xchg
jnp
jne
push
jmp
mov
mov
and
es
jmp
enter
outsl
andl
cs
icebp
icebp
mov
cmpsb
mov
shl
movsb
adc
enter
in
xchg
cltd
push
push
push
or
mov
addr16
nop
sub
add
xchg
mov
cli
in
ja
sahf
adc
xchg
bound
cs
mov
mov
js
sbb
fmuls
or
mov
push
push
inc
sbb
pop
bound
pop
xor
pushf
fimull
stos
insb
movhps
imul
mov
push
push
mov
and
xchg
sbbb
ljmp
sbb
fldl
mov
lods
adc
shrb
add
popf
je
ss
push
aad
mov
inc
adc
leave
pop
in
out
push
mov
cmp
pusha
jbe
fisubrs
testl
inc
pop
push
push
incb
mov
sub
clc
jp
xchg
mov
add
aas
dec
ljmp
lods
cltd
cmpsb
add
out
jo
xchg
int3
mov
cmp
bound
mov
lret
sti
add
or
cwtl
int
rep
mov
mov
jbe
push
jp
jo
push
sub
sbb
cmp
sbb
xchg
das
inc
xchg
orl
psubw
subl
popf
push
mov
and
mov
js
icebp
cld
icebp
sbb
test
push
jne
test
les
loop
cmp
scas
out
popa
mov
and
xchg
iret
nopl
out
or
sbb
push
js
adc
inc
es
scas
fdivl
jecxz
add
fsubrl
bound
lea
add
jge
decb
ljmp
cmpsl
cli
push
mov
pop
sbb
xor
jnp
outsb
mov
adc
jl
xchg
pop
dec
dec
xor
sbb
xor
je
ret
push
pop
sbb
jne
out
sub
sbb
xor
mov
clc
mov
mov
pop
sub
fidivl
jp
mov
cwtl
sti
shll
subb
jecxz
daa
es
adcb
adc
mov
push
shlb
subb
mov
xchg
dec
shl
out
in
adc
inc
xor
rcr
aaa
setns
mov
push
in
lds
cmp
into
enter
or
inc
mov
xchg
insb
inc
aas
clc
andl
inc
add
mov
movsl
sar
or
and
imul
ja
pop
js
jno
daa
int
stos
int3
xchg
repnz
push
aaa
adc
std
lcall
stos
adc
or
aad
add
cmp
dec
sarl
or
repz
jl
xor
mov
adc
and
fldenv
sub
jge
sub
push
orl
jmp
mov
inc
xlat
xor
dec
cmp
mov
mov
or
or
cmp
into
incl
jno
sahf
arpl
xchg
out
or
mov
aam
adc
fsts
stos
jae
cmpsb
rcrb
mov
popl
mov
repnz
mov
out
out
adc
popf
xchg
mov
pusha
xchg
fcoml
and
popa
jmp
movsb
daa
or
jmp
loopne
adc
or
lds
scas
jmp
sbb
lods
add
adc
xlat
sub
and
or
sbb
push
push
xchg
jo,pt
ret
inc
mov
ds
lea
push
push
and
adc
ret
ret
dec
insb
sahf
mov
movsl
add
adc
pusha
push
faddl
out
je
in
imul
push
pop
and
pop
add
lds
insl
pop
jp
dec
out
popa
push
push
add
loop
xchg
dec
enter
add
addr16
jecxz
aaa
and
inc
mov
xchg
test
ret
loopne
jno
adc
cmp
inc
cmp
cmpsl
cli
mov
repz
cmc
jnp
sub
repnz
mov
bound
out
sbb
subb
push
inc
jae
xor
xchg
mov
pop
cmpsl
adc
testl
insl
fwait
int3
fisttpll
mov
xor
mov
jp
mov
cmp
aaa
mov
cs
popf
xor
sub
push
sbb
push
movsb
sub
jmp
dec
mov
in
test
xor
and
clc
scas
or
push
and
lods
js
mov
loopne
jl
ss
sarb
sbb
ja
adc
pop
loopne
adc
js
xor
mov
and
lods
cmp
cs
lods
sbb
loope
mov
mov
xchg
jns
sub
into
aaa
iret
pop
xor
fwait
mov
jle
ret
adc
inc
push
dec
int
pushf
negl
fwait
jecxz
cmp
shl
mov
subl
xchg
xchg
mov
jns
bound
adc
aas
jae
sbb
jno
sbb
add
jmp
mov
cmpsl
jbe
inc
lret
ret
sub
mov
pop
stc
push
pushf
jg
and
test
and
ss
sbb
shl
ss
jl
loopne
ja
aaa
dec
xchg
pop
mov
dec
or
xor
mov
test
cltd
cmpsb
sub
mov
jmp
aad
inc
sub
mov
add
mov
fsubrl
lods
sahf
mov
aam
jns
in
cli
dec
mov
movsl
pop
or
shlb
popf
push
ljmp
pop
stos
adc
sarb
pop
les
push
add
inc
js
cmp
and
xchg
mov
jp
sbb
scas
hlt
stc
loopne
pop
enter
fidivrs
popa
add
sti
dec
test
dec
cmp
jo
jne
sbb
jg
mov
cli
or
push
sbb
dec
nop
negl
std
inc
iret
js
out
fisttpl
dec
mov
loope
mov
mov
dec
pop
pop
ljmp
outsb
adc
mov
adc
es
divl
ds
mov
cmp
pop
xchg
sbb
xchg
and
and
add
inc
call
push
jnp
js
arpl
pop
mov
cmp
push
xor
xor
dec
jo
mov
dec
pop
cs
clc
jecxz
jno
movsb
pop
push
jle
push
mov
shlb
dec
inc
xor
and
sar
lret
or
mov
cmp
rcl
cmovo
push
nop
dec
xor
cmpsl
mov
pop
add
ljmp
outsl
push
sarb
add
scas
or
and
mov
adc
mov
sub
xchg
adc
and
lret
or
popf
shrd
xor
inc
cmp
sub
into
lods
movsl
loopne
jo
xor
test
push
cmp
mov
dec
inc
cmc
inc
insb
dec
pop
pushf
adc
sbb
sbb
sbb
or
sarb
lods
mov
leave
dec
mov
test
inc
push
lahf
scas
icebp
addl
xorl
jmp
dec
test
cmp
mov
mov
inc
adc
outsl
xlat
pop
dec
and
lcall
loop
xchg
mov
out
mov
add
repz
xchg
pop
pusha
pop
popa
jle
adc
jg
popf
xchg
or
stc
add
dec
or
mov
adc
cmpsl
addr16
add
or
imul
insb
mov
push
shlb
mov
je
lods
sub
or
pop
dec
mov
out
cmp
mov
ret
pop
pop
in
cmp
jo
ret
xor
fs
xchg
inc
test
inc
test
jns
jge
pushf
stc
xor
out
dec
add
insl
inc
mov
sbb
adc
orb
xchg
xor
sub
shrl
jmp
cltd
pop
jmp
test
das
scas
push
xor
or
jmp
push
icebp
repnz
dec
lcall
xchg
and
add
cmpsl
push
daa
mov
std
xor
repz
jb
rcrb
mov
jne
roll
ja
inc
xchg
outsl
cwtl
and
lret
push
in
leave
ss
test
mov
fs
mov
inc
ret
aad
rcll
in
xchg
and
mov
fdivrl
and
jl
dec
jae
shll
aad
aam
mov
fs
and
andl
jbe
subl
lods
and
js
inc
ficompl
inc
out
shll
clc
mov
out
inc
push
mov
mov
sub
or
nop
sub
les
int
xchg
dec
sub
jecxz
cli
mov
mov
js
adc
arpl
pop
out
inc
ljmp
mov
and
movsl
jae
rorl
jo
mov
leave
push
cwtl
sbb
or
fwait
mov
add
xchg
adc
leave
push
adc
adc
mov
call
dec
outsl
xor
inc
cmp
fsubs
fistpll
mov
add
bound
dec
jl
cmp
dec
push
dec
add
shll
xchg
adc
sub
das
jnp
cmp
paddd
sbb
jecxz
movsl
stos
mov
out
je
xlat
xchg
in
sbb
jge
push
data16
xchg
inc
fdiv
mov
out
in
adc
enter
xor
mov
mov
jle
push
rorb
in
sti
fisubrs
leave
call
add
popa
mov
push
or
hlt
xchg
sarb
sub
rol
into
es
mov
fcompl
out
adc
mov
pop
scas
jl
dec
pop
push
add
shr
ds
gs
pop
repnz
lahf
dec
mov
or
mov
mov
lea
popa
mov
xchg
loopne
es
mov
mov
pusha
mov
sbb
loopne
bound
cltd
pushf
ja
sub
vmwrite
jnp
aad
shl
setnp
add
mov
adcl
jae
or
mov
lods
in
in
repnz
rolb
nop
mov
add
andb
ja
inc
inc
and
fidivl
dec
push
mov
adc
loop
call
lahf
jmp
lcall
in
mov
enter
pop
sub
mov
xchg
ss
cmp
sub
and
loop
int
xchg
dec
and
mov
and
mov
mov
push
cltd
inc
jmp
in
xchg
fimuls
int
inc
sarb
lcall
popf
rcll
cmp
pop
ja
fs
ror
stos
mov
repz
mov
jno
es
mov
mov
fs
les
adc
fwait
or
or
loope
je
lahf
dec
aad
movd
in
ret
lret
dec
xchg
lods
jb
push
out
or
dec
jmp
lcall
mov
gs
mov
dec
je
cltd
das
cmp
mov
xchg
jb
mov
jnp
jne
out
insl
in
outsl
mov
scas
mov
jno
pop
out
push
pop
xor
fcompl
push
xchg
sub
push
mov
mov
mov
pushf
mov
jmp
popf
cld
sbb
loope
cmpb
push
adc
adc
das
sub
push
pop
pop
andb
cmpsl
pop
xor
xor
pop
pop
inc
imul
imul
sbb
jle
mov
repnz
push
adc
or
pop
xor
nop
push
sbb
and
and
dec
or
xchg
sub
mov
add
call
pop
leave
orl
sbb
imul
push
je
loopne
cwtl
lcall
mov
rcrl
jmp
xchg
mov
stos
leave
push
sbb
int
mov
jno
cmp
inc
out
inc
pop
scas
or
push
ljmp
imul
aaa
sub
jno
cltd
add
jge
outsw
dec
jnp
insb
out
mov
pusha
insb
jl
and
and
add
sbb
pop
sbb
out
sub
cld
inc
dec
pop
and
sbb
aas
xchg
nop
fildll
mov
stos
rorb
sub
cwtl
inc
dec
outsb
jbe
pop
xor
push
inc
xchg
stos
test
push
sbb
mov
aas
aad
dec
rcrl
xchg
xchg
xchg
xchg
pop
notb
lds
clc
cld
push
add
inc
jns
pusha
or
dec
stos
stos
sub
add
leave
fs
stos
pop
mov
ss
dec
aas
sub
mov
rolb
in
push
and
xor
clc
mov
push
aas
out
jmp
into
cmp
ffreep
sub
rolb
scas
mov
movl
xor
pop
in
mov
add
inc
outsl
movsb
stc
arpl
leave
push
sti
sub
dec
movb
xchg
xor
sbb
cltd
jge
pop
stos
enter
test
out
pop
cmp
lds
dec
imul
sub
stos
mov
in
jge
aad
or
js
loop
test
pop
and
sahf
jge
dec
xchg
cmpsb
je
shll
mov
cld
add
inc
mov
inc
out
filds
mov
lods
enter
xlat
cli
out
cmp
loope
and
inc
mov
dec
imull
test
push
or
mov
jmp
adcb
dec
dec
mov
pop
or
xor
and
and
out
cmp
fsubr
int3
adc
ljmp
sbb
imulb
adcb
out
sub
xor
stc
pusha
gs
std
and
mov
bound
insb
mov
dec
push
jg
repz
ja
xchg
mov
stos
in
pop
cmp
ss
or
pop
testb
xchg
or
inc
mov
inc
dec
cmpsb
mov
rclb
adcb
mov
cmp
iret
popa
dec
add
mov
lret
imulb
mov
cmp
jns
das
lahf
sub
cwtl
mov
xchg
mov
sbb
ret
test
and
sub
cmpsb
and
into
xchg
sub
mov
stos
imulb
inc
mov
adc
mov
std
add
inc
lret
jmp
cmc
sub
mov
repz
dec
pop
decb
gs
inc
repnz
push
addr16
cmp
insb
and
addl
icebp
pushf
es
clc
testl
mov
inc
push
pushw
xchg
or
out
notl
fmul
pop
and
inc
subl
shrb
insl
movsl
or
mov
mov
push
fcomps
leave
int
lods
stc
jmp
in
inc
push
rorl
jge
mov
xor
xlat
push
pop
insl
jne
xchg
lret
xor
mov
movsb
negb
push
ret
movsb
testl
daa
cs
shrl
fistps
mov
outsl
xor
mov
xchg
es
enter
sub
adc
cmp
or
pop
dec
in
daa
fistps
pop
int3
cmc
sbb
xor
or
fstps
in
fisubrs
sub
fadds
ss
pop
mov
negb
pop
jae,pn
mov
inc
lahf
movsl
rcll
aas
mov
ret
fmuls
mov
pusha
xor
repz
cs
dec
pop
jae
lock
leave
xchg
out
ljmp
and
in
lret
xchg
loope
cltd
or
cmp
test
loope
sbb
pop
in
or
leave
dec
rcrl
imul
xor
iret
bound
into
mov
push
fimull
xchg
in
jge
and
es
add
arpl
xor
add
pop
mov
shrl
add
pop
jno
inc
xlat
xor
outsl
stos
push
inc
xor
movsb
or
dec
mov
add
ror
iret
pop
cmpsl
or
fs
push
pushf
fildll
jno
enter
cmp
xchg
mov
popf
sub
test
push
lahf
arpl
mov
ret
or
outsl
jae
sbb
out
shlb
aaa
repnz
cli
adc
movl
cmp
lcall
movsl
in
shrb
or
and
in
shrb
push
les
pop
loope
pop
popf
lods
ljmp
adc
push
sahf
add
lods
out
xchg
ds
push
aaa
xchg
mov
pop
xchg
sbb
dec
mov
ljmp
dec
sbb
dec
mov
repnz
xchg
xchg
xchg
in
mov
dec
sub
rorl
push
and
je
inc
and
and
sub
jo
dec
and
insl
in
cmpsb
popa
jmp
addl
insl
pusha
cmc
sub
imulb
movb
sbbl
and
pop
mov
jns
xchg
and
in
fcoms
rcl
push
mov
test
enter
scas
cmpsl
and
push
andl
sbb
stos
push
stos
scas
xorb
repz
or
mov
jg
sbb
lea
js
iret
pushf
ljmp
jp
sub
push
inc
nop
repz
je
mov
leave
or
xchg
inc
fdiv
dec
inc
xchg
outsl
adc
cmpsb
imul
pop
mov
or
add
fwait
pop
lock
iret
ljmp
xor
sub
xchg
push
mov
dec
sbb
ds
cmc
in
inc
bound
or
mov
and
xchg
xor
adc
inc
std
cmp
jp
mov
iret
movsl
push
stos
dec
icebp
sub
clc
xor
jp
inc
repnz
push
hlt
push
xlat
bound
popf
lock
addr16
test
insb
in
fldt
cltd
rolb
jae
mov
clc
dec
lcall
call
inc
or
add
mov
adc
mov
xchg
pop
or
add
insl
push
adc
fsubs
outsb
shlb
adc
sbb
ds
inc
pop
mov
xor
lods
rep
cmp
cmpsl
aaa
mov
out
mov
or
pop
shlb
mov
test
test
popa
push
cs
lahf
movsb
into
inc
sti
ss
xchg
mov
and
and
push
mov
dec
out
mov
jecxz
mov
pop
add
jbe
lds
adc
rclb
cmpsl
lods
mov
push
jb
pop
negl
shl
sar
mov
fldt
jbe
mov
gs
push
insb
sub
jo
lea
imul
mov
inc
test
sbb
out
std
xor
repnz
xchg
in
cltd
and
xchg
xor
mov
add
sahf
test
sbb
pop
movsl
imul
cmp
fnsave
in
dec
gs
out
inc
lret
addl
lods
and
xchg
sbb
mov
jae
daa
or
push
adc
jle
sub
dec
cmpsl
ja
cmpsl
repz
cld
fists
xor
cwtl
rolb
push
xchg
sub
stos
jnp
sbbb
cmc
or
inc
dec
lcall
dec
mov
push
mov
cld
sbb
movsl
mov
add
mov
xchg
sub
clc
cmpsl
pushf
popf
mov
daa
mov
lret
adc
imul
push
lahf
cmc
dec
add
ja
mov
inc
js
ja
enter
ret
adc
mov
cmpsl
push
sub
es
sub
js
idivl
sub
daa
or
mov
cmpsb
int3
adc
in
mov
or
jl
pop
loop
xor
adc
and
adc
lea
dec
pop
int
jae
mov
shl
sbb
in
int3
arpl
scas
pop
inc
sti
xor
std
jle
decl
inc
pop
sbb
orl
pop
adc
outsb
and
jo
cs
cmp
repz
imul
std
in
iret
aad
jg
aad
movsb
jmp
xchg
xchg
out
lret
shl
xchg
push
scas
iret
andl
dec
or
mov
add
pop
lret
ret
xchg
mov
cmp
add
movsb
push
jne
mov
rorb
test
pop
loope
or
mov
fnstsw
popf
call
sub
push
push
sbbb
mov
sarl
xor
jnp
or
or
iret
std
jg
cmp
mov
xor
add
enter
xchg
iret
sub
xchg
lahf
insb
bound
xor
jmp
cld
adc
lahf
xor
push
in
dec
mull
fptan
pop
mov
dec
scas
xchg
sahf
stc
xchg
or
cwtl
pop
subb
ds
dec
iret
ror
jb
jmp
idivl
movsl
ret
pop
jae
pushf
xlat
in
pop
in
js
dec
push
imul
loop
xchg
push
push
push
ds
add
stc
out
jo
xlat
pop
pop
adc
jle
cmp
movsl
ret
sbb
es
mov
and
out
adc
inc
dec
add
jg
mov
stos
lahf
mov
js
ljmp
data16
or
or
jl
call
add
sarl
test
call
pop
push
dec
clc
sbb
out
jbe
mov
inc
js
dec
jo
pop
cli
sub
adc
dec
pop
cs
sub
sarb
lret
fdivrl
fstpl
pop
rcrl
jae
or
sbb
push
imul
or
mov
mov
cmc
mov
mov
mov
ljmp
xchg
xchg
aad
inc
xchg
sub
rorb
lret
das
data16
xlat
mov
mov
leave
mov
sbb
pop
std
mov
dec
adc
mov
fldl
sbb
push
mov
arpl
fwait
std
idiv
andl
dec
mov
and
jle
stos
mov
and
and
sbb
call
cmp
xor
or
mov
pop
sub
add
sbb
xchg
mov
fiadds
adc
ret
cmp
inc
xor
jb
test
hlt
data16
imul
lods
sub
mov
mov
shrb
xchg
aaa
rcrl
jecxz
bound
dec
jge
push
addr16
sbb
push
test
cli
test
int3
pop
push
out
jo
push
jbe
sbb
inc
mov
pop
fcomps
inc
or
cmpb
push
push
loop
fwait
insb
lods
fsubrp
pop
test
add
inc
iret
mov
jmp
or
pop
mov
lods
inc
bnd
rsm
mov
xor
aaa
iret
call
mov
mov
lret
loope
push
ja
dec
dec
xchg
sbb
jecxz
scas
adc
outsb
int3
jl
fistpll
and
xor
add
lds
test
leave
and
push
sti
les
cmpsb
sbb
adc
lea
insl
xor
and
add
sub
and
sarl
mov
lock
mov
jmp
adc
sub
cltd
lods
jns
push
insl
mov
pop
push
in
inc
sbb
mov
jo
xor
enter
jge
pop
dec
mov
push
push
mov
gs
mov
mov
pop
pop
adc
fwait
rcll
loope
sub
in
arpl
out
fstpt
cmp
sbb
and
sbb
das
rcr
in
or
mov
movsb
test
mov
stos
imul
dec
push
adc
sub
vmread
xor
push
ret
jns
sbb
stos
cmpsl
xchg
push
fwait
cli
add
jle
xchg
outsl
xor
pop
sub
fwait
decl
and
sub
xchg
fistpl
cmp
leave
mov
iret
xor
jne
jae
sbb
jae
cs
shr
xchg
sbb
xor
hlt
mov
lock
add
sarl
and
or
pop
xor
cs
lahf
sbb
mov
add
ret
dec
sbb
pop
cmpb
mov
cltd
insb
sub
jbe
pop
cmp
or
lcall
push
adc
xchg
mov
je
jns,pt
xchg
cmp
adc
xor
jmp
sti
pop
inc
jb
xor
repnz
ror
in
ljmp
ret
loope
aam
adc
in
imul
sub
in
dec
mov
ret
rcll
je
dec
sti
lock
cwtl
jmp
stos
cltd
cmp
mov
std
xchg
inc
lock
insb
and
int
dec
xor
aam
lahf
jno
mov
mov
fstpl
jne
leave
dec
into
std
push
lods
in
mov
lahf
push
adcb
or
clc
or
push
cmp
mov
andl
cld
pushf
ss
dec
cwtl
fnsave
int
mov
lea
ficompl
lea
lret
in
add
inc
in
jb
imul
or
inc
xchg
and
adc
iret
fiaddl
std
jmp
mov
outsl
decl
push
jp
mov
outsl
das
outsb
jecxz
out
andb
cmp
das
out
jmp
ret
inc
pop
xlat
xor
ficoms
aam
dec
inc
leave
cld
out
out
xor
push
and
lods
int
pop
and
pop
repz
pushf
jbe
pop
mov
push
movsl
int
testl
scas
lods
lock
cmpsl
lods
mov
gs
loopne
inc
int3
or
enter
xchg
xchg
ljmp
aam
popa
shld
leave
rcrl
in
sbb
xchg
fs
xchg
cmp
push
fs
jnp
pusha
movsb
cmp
push
pushf
dec
bound
mov
aaa
jae
add
sub
jo
add
mov
sarb
ja
popf
call
enter
das
ret
fwait
mov
cmp
dec
mov
or
jne
aas
aaa
cmpsl
dec
cmp
mov
dec
lahf
stc
adc
sbb
test
aam
jno
fmul
div
mov
mov
enter
lods
push
repnz
mov
popf
and
rcrl
or
push
xchg
nop
dec
push
jae
imul
jnp
insl
dec
mov
data16
mov
xorb
jno
pop
insl
mov
or
adc
dec
mov
arpl
push
pop
cmp
ja
aad
dec
cli
add
sub
cmp
loop
notb
cmp
xchg
sub
int
mov
jle
daa
jo
xchg
js
cwtl
out
out
iret
push
push
in
aas
rorl
hlt
pop
icebp
fnstcw
jle
push
mov
clc
dec
push
lret
fildll
pop
movsl
dec
gs
mov
arpl
mov
adc
xor
adc
fsubrl
mov
xor
inc
sub
or
push
pop
enter
xor
sbb
in
xor
sub
scas
jg
pusha
xchg
test
adc
mov
adc
lods
jge
imul
les
scas
xchg
ljmp
and
mov
loope
inc
test
nop
mov
adc
out
sahf
mov
xor
jne
or
xor
stos
test
cmp
out
pop
repnz
daa
jle
xchg
test
push
jge
cmp
js
sahf
test
cmp
in
idiv
sti
add
les
inc
push
push
repnz
imul
sub
out
inc
mov
jne
add
cld
punpcklbw
or
rorl
lds
xchg
les
data16
push
cmp
inc
into
rcr
sub
push
and
jne
adc
sub
xorb
mov
fdivl
xor
xor
add
pop
cmpsb
fs
sar
out
ja
das
js
push
sub
sub
das
adc
cs
push
mov
adc
jl
push
jbe
fs
pop
mov
xor
outsb
sbb
mov
hlt
fildl
xlat
or
test
inc
outsb
or
push
sbb
cwtl
dec
divl
add
call
std
and
inc
lods
push
xchg
fldt
push
push
mov
ljmp
and
lea
jle
xchg
xor
mov
adc
xchg
add
xchg
repz
stos
and
fildl
out
aam
fldcw
scas
pop
jae
pop
inc
pop
xlat
dec
dec
inc
pop
stc
cmp
mov
icebp
jb
lods
xchg
pop
add
movsl
fdivrp
popa
mov
imul
sbb
sub
xorb
movsb
mov
adc
xor
popa
lea
sub
pop
jecxz
loopne
loope
or
imulb
inc
dec
xchg
adc
ret
sub
and
add
xchg
idivl
int
mov
mov
xchg
cmp
mov
sbb
enter
pop
inc
fdiv
clc
das
mov
sahf
shrl
jbe
cmp
gs
adc
mov
mov
adc
sub
mov
test
fnsave
or
sbb
ds
aaa
add
dec
mov
pushf
push
loop
jae
cmp
stos
arpl
xor
lods
int3
lret
mov
jp
insb
jae
jae
pop
sti
cld
cmp
loope
pop
fcos
dec
push
rorl
es
add
mov
in
scas
je
push
add
mov
lods
mov
and
sub
adc
or
add
sub
bound
ss
outsl
in
jg
in
imul
fwait
jbe
cmpsb
enter
push
pop
lock
sbb
lret
jns
cli
dec
xchg
jle
or
inc
pusha
and
rcll
mov
adc
mov
fistl
sub
add
sahf
inc
add
ret
imul
add
lcall
test
cmp
mov
fs
inc
mov
mov
inc
sahf
js
mov
mov
into
int
cmp
add
loopne
cs
pusha
ffreep
scas
xchg
shrl
jno
sub
cmpsb
loop
sarb
push
add
mov
outsl
pop
shrl
sti
cltd
stc
jae
push
jnp
push
bound
sbb
cmp
pusha
cmp
xor
lret
and
jl
shll
xor
std
test
jae
test
mov
pop
pop
pop
ja
out
insb
mov
rcl
jmp
sahf
pop
adc
adc
rol
cmp
or
push
scas
dec
imulb
add
daa
xlat
repz
shl
mov
jle
scas
xor
mov
test
adc
xchg
es
pop
lods
xor
mov
xor
adc
lcall
scas
orl
jns
loop
cmc
fistl
and
jecxz
jno
adc
popa
push
int3
dec
cwtl
xor
cmpsl
mov
adc
inc
push
fildll
imul
mov
jne
stos
push
lds
mov
ret
leave
sahf
and
notb
lds
sbb
fs
sbb
or
dec
or
loop
mov
fsave
out
adc
sbb
hlt
cwtl
push
jecxz
dec
mov
jecxz
push
xor
por
mov
sub
push
scas
pop
sub
or
test
push
or
hlt
dec
repnz
imul
xchg
fstpt
push
lcall
sub
push
out
incb
fsubr
jnp
mov
pusha
cmp
mov
inc
sub
mov
repnz
bound
in
lods
adc
mov
pop
out
mov
roll
sub
fiadds
loop
adc
stc
aam
scas
jmp
dec
dec
sarl
into
jb
mov
sbb
jge
cmc
jge
dec
stos
xchg
mov
mov
sar
jecxz
inc
movntq
scas
xchg
testl
lds
repnz
pop
loope
add
cmp
mov
mov
mov
inc
icebp
sahf
dec
xlat
insl
lds
mov
mov
test
lret
push
push
xchg
or
outsl
divb
ret
and
enter
jg
and
test
popa
jle
add
mov
addr16
add
add
or
mov
in
cmp
sbb
ret
icebp
sub
aaa
lahf
pop
aam
ds
js
pop
loopne
aaa
add
les
cld
mov
jnp
cmp
xor
push
mov
dec
es
mov
divb
bound
orb
sbb
popf
repnz
pushf
insl
xchg
pop
dec
fisubrl
test
fcoml
popa
in
jle
inc
lret
pop
icebp
fildl
add
dec
arpl
sub
pop
sbb
push
mov
inc
or
push
jle
mov
sub
adc
jle
push
cmp
mov
pop
test
sbb
das
cmp
mov
pop
mov
sbb
xlat
sub
popf
or
xchg
jg
dec
fdivr
test
shrl
sbb
fstl
outsb
push
mov
push
lcall
or
cmp
loop
das
mov
xor
inc
xor
in
inc
inc
and
fsubrs
xchg
lods
sub
mov
cltd
leave
popa
lock
pop
jp
es
adc
inc
in
cld
lret
into
sbb
pop
inc
xchg
push
sbb
xorb
inc
movsb
cltd
jo
mov
out
fs
call
add
je
push
and
imul
cmpsl
loope
gs
ja
and
add
jle
adc
jle
ret
fiaddl
dec
fsubr
mov
mov
xchg
inc
outsb
jge
lcall
inc
sbb
pop
sub
mov
adc
and
les
nop
lds
clc
fbstp
xor
and
xchg
mov
inc
cli
jbe
outsb
sahf
sbb
xchg
push
ja
shufps
cmpsl
mov
bound
ret
movsb
sub
arpl
mov
pop
cmpsb
jnp
out
in
sbb
lret
roll
icebp
lahf
lret
inc
push
sub
out
mov
mov
out
cmc
push
testl
add
fstps
cltd
add
jp
repz
into
lret
and
test
cmp
aam
push
mov
cmpsb
or
add
das
cmp
sti
jp
fcomip
fldt
sub
adc
mov
push
push
test
or
inc
or
aaa
inc
push
testb
or
mov
push
mov
jl
fldcw
cmp
pushf
sub
push
out
jnp
out
dec
cmpsl
or
das
and
leave
in
jbe
inc
aas
sbb
push
test
dec
int
push
mov
sbb
xor
shrb
repnz
push
movsl
lds
inc
add
cmpsl
frstor
out
pop
sbb
das
dec
cli
stos
cli
repz
mov
xchg
call
ret
out
sbbl
pop
lds
shll
add
movsl
fwait
imul
lea
mov
cltd
pop
daa
xlat
mov
push
dec
add
iret
push
sbb
nop
sub
dec
xchg
jbe
mov
lcall
cltd
mov
push
fsubp
outsl
xchg
lods
add
push
pop
xlat
sub
inc
pop
insb
call
in
jmp
fisubrl
xchg
xor
jecxz
movsl
fidivrs
dec
imul
es
or
adc
add
outsb
xchg
cltd
mov
pop
jno
jo
inc
fcmovne
jg
outsb
dec
out
sti
mov
jp
mov
push
dec
cltd
inc
jno
add
popf
push
fmul
xchg
and
imul
mov
sub
insb
push
jae
pop
or
xor
mov
loope
jle
sbb
sbb
call
loope
sub
mov
addr16
es
or
pop
adc
or
dec
dec
add
add
int3
sarb
inc
adc
push
jb
jo
jl
mov
fidivl
stos
aam
test
testb
cmp
mov
sti
mov
or
test
sbb
mov
aaa
jecxz
popa
xlat
repz
xlat
arpl
cmp
int3
jnp
jo
es
xchg
mov
adc
xchg
mov
cmp
xchg
pcmpeqb
testl
lea
xlat
dec
jno
test
sarb
adc
in
int
imul
mov
and
loope
xchg
aam
lret
inc
test
pusha
mov
push
popf
push
mov
push
jae
in
jecxz
rcll
add
sbb
scas
call
ret
inc
cltd
cwtl
jo
xchg
sbbl
mov
jae
mov
jne
mov
lds
mov
arpl
dec
lahf
xor
data16
xadd
push
in
push
je,pt
xor
lds
jo
stc
xchg
decl
xor
fidivrl
ds
xor
push
mov
lods
pop
jl
and
xchg
sub
arpl
addr16
lret
jg
cli
push
mov
sub
ficoms
mov
jmp
xor
fistps
stos
cmp
jl
int
sub
lock
or
aas
pop
iret
fadd
stos
jl
mov
out
mov
jnp
jle
daa
and
clc
pushl
dec
loopne
rdpmc
push
xor
lock
or
in
fildl
mov
fmull
aaa
and
mov
xchg
lahf
xor
push
dec
aam
pop
dec
lods
push
jbe
and
adc
loope
xchg
ror
and
in
aam
or
xor
sbb
jl
pop
lock
cwtl
xor
mov
sub
mov
out
fists
lret
pushf
jo
xchg
in
and
retw
mov
add
arpl
mov
xchg
push
clc
jae
dec
hlt
inc
push
pop
leave
add
push
dec
sub
scas
loope
xor
xchg
gs
mov
insl
outsb
cwtl
jg
imul
pop
cmp
sbbb
pop
ds
call
push
lods
push
cmpsl
cltd
add
repz
popa
pop
lcall
push
fimuls
pop
je
cmpsl
les
mov
stos
sahf
lret
jae
and
outsb
add
test
and
rcrl
ret
xor
js
inc
repnz
mov
rclb
rcrl
test
sbb
enter
cmp
pop
lcall
in
mov
std
iret
pop
jge
loop
jne
scas
adc
test
fs
imul
jmp
loop
lret
or
cmc
ret
lcall
cmp
mov
jo
imul
and
outsl
pop
subl
pushf
or
rcrb
dec
xlat
roll
imul
in
mov
aad
cmpsl
xchg
cmpsb
and
shlb
call
pushl
push
sbb
imul
mov
sub
mov
shll
call
cld
mov
lahf
nop
push
fdivr
mov
test
fs
fdivrs
lret
imul
stc
dec
into
dec
cltd
xor
in
aad
jmp
pushf
negb
xchg
xlat
fistpll
pop
pop
cmp
add
stc
pop
add
insl
lea
cmpsl
jmp
dec
cmp
in
pop
push
inc
fdivrs
scas
sbb
lods
leave
and
cmp
ljmp
sub
dec
cmp
mov
adc
filds
daa
mov
jae
call
dec
sbb
aaa
cmp
sub
repnz
dec
xchg
cmpsl
je
andl
cmc
dec
dec
dec
or
scas
jae
jmp
sti
add
call
mov
mov
out
and
push
pushf
push
xor
adc
cmc
sub
lds
and
sahf
iret
mov
cwtl
test
shlb
sbb
inc
dec
inc
jle
das
pop
pop
lret
outsl
xor
jns
mov
mov
mov
movb
adc
mov
in
in
sbb
add
icebp
mov
cmp
mov
add
pop
xchg
bound
pop
mov
mov
jle
add
ljmp
bound
rclb
sbb
pushf
jne
push
fs
test
out
fucomp
dec
stos
jecxz
pop
lahf
pop
adc
or
int
dec
sbb
or
sbb
fdivrs
jo
std
dec
sbb
nop
lahf
pop
clc
mov
adcb
sub
add
pop
cmc
inc
dec
inc
nop
in
sub
push
adc
jne
sbb
cmp
imul
add
mov
imul
insl
jns
adcb
das
in
test
mov
faddl
mov
loop
imul
loopne
or
movsb
ljmp
add
inc
lret
iret
mov
test
bound
jle
inc
adcl
std
jno
jmp
sbb
fmuls
fsubl
cmp
lods
mov
call
icebp
jg
xchg
adc
pop
scas
dec
rcr
cmp
into
sahf
fs
out
adc
jl
mov
arpl
xchg
in
scas
mov
aad
pushf
pop
pop
stc
mov
fucomi
add
and
jp
jge
sbb
pop
cmp
les
xor
push
aam
cmpsl
sub
mov
ja
xor
mov
dec
sub
aam
adc
xor
pop
gs
jge
imulb
inc
clc
fs
xchg
lret
push
mov
fs
sbb
ret
sbb
sub
pop
pop
leave
push
subl
lods
cmpsl
inc
add
fcmovnbe
aaa
pop
cmp
mov
push
fcomp
scas
sbb
pop
fimuls
scas
cwtl
pop
imul
mov
mov
cmc
aad
les
sub
xlat
lock
pop
mov
jo
pusha
inc
sub
cmpsb
popa
insl
push
cmp
sub
jge
outsb
cli
outsb
mov
flds
repnz
and
jbe
hlt
iret
sarb
sub
fildll
mov
cld
icebp
dec
add
pop
fwait
push
and
push
rcl
mov
popa
pop
in
int
loope
lea
mov
incb
nop
jne
data16
jo
in
dec
pop
pop
mov
and
gs
inc
aas
mov
int3
inc
test
sbbb
push
add
int3
icebp
adc
in
cmc
movsl
push
pop
sbb
adc
fisubs
add
and
sub
jp
mov
movsl
int
clc
cli
inc
sahf
fnsave
xchg
out
jnp
mov
in
mov
aam
sbb
fcmovne
sqrtps
dec
mov
mov
int3
mov
sub
inc
mov
mov
test
or
sub
outsb
inc
jbe
dec
dec
stos
push
jl
adc
inc
push
inc
fisubrl
mov
inc
xchg
imul
test
pop
push
and
fs
inc
icebp
icebp
mov
leave
adc
cmc
int
dec
mov
outsl
bound
les
dec
jne
lret
jbe
mov
push
rcr
push
shl
push
dec
stc
mov
fs
daa
repz
mov
dec
shl
or
scas
scas
or
repnz
sbb
jmp
ss
pop
test
xor
xor
lret
mov
enter
dec
jo
rcrb
cmpl
inc
fs
inc
sub
push
fisttps
cmc
add
adc
mov
fcomps
movsb
sbb
or
inc
lock
jnp
pushf
mov
push
mov
and
rcrl
std
jae
orl
lcall
je
test
int3
dec
popw
outsl
test
and
aam
mov
pop
sub
mov
pop
mov
xor
lds
sbb
push
cmpsb
int
lcall
mov
in
pop
push
sub
lea
insl
insl
jns
std
pop
cwtl
fwait
jae
int3
jge
inc
ret
testb
sbb
jnp
scas
imul
jmp
mov
cmpsl
daa
pusha
fdivrl
xor
outsl
jle
mov
push
mov
out
mov
dec
sub
jne
cmpsb
dec
testb
ja
icebp
pop
jp
lods
je
mov
adc
sahf
push
add
push
pop
outsl
gs
and
push
mov
test
out
xlat
add
cmp
aas
sub
js
mov
push
push
in
pop
rcr
sub
dec
into
lcall
xchg
sbb
sar
pop
jge
xchg
iret
movsb
test
jnp
push
ss
jne
aad
xchg
ljmp
loop
stc
jmp
sti
out
mov
pop
sti
arpl
loopne
outsl
nop
mov
mov
mov
add
fildl
ds
stc
mov
pop
mov
ds
pop
lahf
jmp
sub
mov
loopne
test
mov
xor
fsts
sbb
adc
sub
sub
cmp
lcall
pushf
pop
mov
jp
popa
shll
ret
in
mov
mov
fldl
pop
adc
inc
cmc
xchg
inc
sub
subb
repz
les
xor
in
mov
cmp
adc
aas
mov
pop
jp
cmp
int3
pusha
mov
cmp
icebp
xchg
xchg
mov
and
push
mov
add
cmp
mov
enter
or
lods
mov
fnsave
jmp
cli
sbb
or
out
cmp
push
out
nop
mov
mov
adc
xlat
aad
decb
aaa
addr16
cs
loopne
and
ja
ret
ja
sbb
xchg
xchg
cmp
mov
adc
mov
mov
mov
jg
fst
push
push
mov
call
push
sbb
xchg
jecxz
sahf
mov
jo
clc
cs
adc
in
push
imul
adc
sub
cmp
mov
and
pop
cwtl
adc
aas
testb
push
lret
scas
mov
jecxz
stos
adcl
insl
mov
fs
leave
stos
data16
mov
sbb
cmpb
stc
cmpsl
icebp
stos
call
and
or
xor
push
xor
loope
xchg
xchg
pop
pushf
stc
or
je
jnp
fstpl
xchg
daa
lock
fldcw
leave
dec
inc
dec
sbb
dec
add
or
lahf
dec
out
ret
cmpsb
cmp
out
movsl
jg
cli
out
aad
ljmp
fucomi
or
out
das
ja
mov
jecxz
cmp
xchg
cmp
xchg
shrl
sahf
push
inc
lock
movsb
mov
call
call
adc
pop
ja
imul
sub
or
bound
push
ret
daa
mov
xchg
push
mov
imul
and
mov
pop
ret
push
mov
mov
nop
lds
lods
add
jnp
pop
jl
rorb
enter
rorb
pop
xor
fildl
outsl
cmc
push
and
loopne
aad
es
scas
mov
xor
dec
sar
loopne
xor
xor
repnz
sti
addb
cli
mov
pop
arpl
je
mov
cmc
jl
imull
ljmp
adc
movsb
xchg
pop
cmp
mov
add
lcall
xchg
mov
cmpsb
inc
mov
stc
ds
loopne
push
cwtl
ss
jbe
cmp
dec
xchg
or
or
xchg
inc
lahf
sbb
in
ficoms
stos
rclb
lock
jmp
or
loop
loopne
dec
iret
fdivr
xchg
es
push
daa
pop
adc
inc
ficoml
pop
push
into
ss
xchg
cmc
pop
into
mov
aaa
push
jle
or
adc
in
sahf
scas
push
inc
scas
mov
xlat
mov
mov
movsb
pop
dec
div
and
aaa
cmp
cwtl
jb
jecxz
cli
sbb
jecxz
lock
popf
popf
stos
lret
in
lcall
sahf
ss
lods
rorb
mov
stos
mov
fsubs
push
adc
cmpsl
testb
mov
mov
xchg
js
cmpsb
dec
shrb
daa
mov
mov
add
cmp
adc
push
jge
movsb
or
inc
out
jne
hlt
test
andb
call
fidivl
jae
and
jno
fcomip
gs
xchg
outsb
sub
add
insl
imul
in
imul
mov
cli
stos
inc
adc
push
call
xor
mov
inc
mov
inc
xorb
stos
dec
cmc
inc
cmpsb
sbb
aam
testl
or
out
mov
insb
add
es
scas
fmull
and
push
lea
test
ss
mov
cld
mov
movsb
xchg
imul
iret
in
pop
jp
mov
ret
insl
cltd
add
ds
mov
mov
mov
dec
scas
mov
ja
stc
loopne
cs
lds
push
xchg
mov
mov
mov
cmp
jbe
lds
pop
jns
inc
das
push
lret
fisubrs
in
mov
or
mov
or
repz
repz
sbbb
fwait
pop
sub
push
addr16
into
negb
mov
xchg
pop
pop
cs
dec
in
cmp
ja
sbb
xchg
out
ja
fcoms
inc
jnp
xchg
imull
mov
sbb
fbstp
xchg
lahf
xchg
mov
lcall
ret
push
lds
mov
repnz
mov
adc
fs
and
out
xor
adc
stos
in
movsl
es
mov
loope
vpmulhuw
sub
std
push
mov
pop
add
stc
aas
mov
in
jge
or
xor
sbb
inc
imul
clc
sub
ds
shr
and
jmp
test
ds
popf
mov
push
and
rclb
pop
shrl
sahf
dec
inc
in
popa
cmpsl
mov
les
sub
test
mov
mov
sub
stos
xor
jo
inc
data16
pushf
fnstenv
xor
mov
stc
les
add
or
insl
push
push
dec
mov
cltd
or
mov
jae
faddl
sti
stos
and
aaa
cli
jl
js
jbe
xchg
imul
lcall
mov
cmpsl
sbb
pop
xchg
fstpt
fidivrs
xchg
lds
in
mov
cli
mov
cwtl
shll
nop
inc
enter
inc
lcall
rorl
iret
sbb
int3
xchg
push
lahf
jae
fistpll
cmpsb
popf
sub
addb
lods
sub
inc
repz
dec
les
dec
pop
sbb
sub
add
fs
icebp
xorb
dec
fldcw
clc
inc
test
lcall
ds
bound
je
loope
sub
add
lret
jle
lods
mov
or
cmpsb
sub
push
adc
loope
xchg
adc
andb
jne
rcrb
push
pop
adc
mov
inc
insb
cmp
arpl
mov
insl
cmp
lods
aad
fsts
in
mov
pop
cmp
insl
add
push
xor
push
cwtl
mov
cltd
lcall
mov
sbb
jbe
fcmovnbe
xchg
cli
sbb
loope
add
insb
mov
pop
pop
hlt
fcoml
cwtl
and
daa
rolb
divl
aam
sub
mov
sub
cli
xchg
mov
js
fisttpll
mov
add
mov
or
fsubrs
pop
pop
fsubp
adc
sub
xor
cmp
shlb
pop
popa
or
repnz
pop
jl
out
and
mov
adc
xor
mov
mov
hlt
out
push
int
jno
sub
push
out
std
dec
and
or
jbe
jp
push
es
inc
into
jns
inc
rcl
mov
fsubrl
dec
std
push
and
les
pop
out
xchg
pop
pop
pushf
aaa
xchg
jl
xchg
outsb
jp
cld
cmpl
add
add
and
ja
ret
mov
jae
std
mov
jle
mov
fs
add
mov
leave
test
mov
cmp
mov
mov
rclb
into
cmp
repz
mov
popa
xor
aam
subl
shrb
mov
xlat
sti
ljmp
jo
mov
pop
push
rcl
in
jns
mov
push
mov
and
jnp
pop
and
loopne
pushf
or
push
mov
loope
inc
mov
leave
dec
stos
cmp
pusha
pop
add
je
loop
ror
insb
jo
test
or
dec
adc
mov
cmpsl
xor
lds
sub
pop
arpl
push
ljmp
mov
pop
or
sbb
aas
cld
jmp
fxtract
push
std
cld
pop
mov
popf
add
sahf
ljmp
pop
movsl
shll
mov
cmp
xor
sbb
push
es
push
jl
adc
adc
add
ss
jmp
sbb
stos
scas
mov
sub
nop
ja
xchg
test
dec
push
addb
adc
addl
and
adc
hlt
cmp
sbbb
roll
pop
test
xlat
adc
mov
mov
dec
add
xor
xor
push
stos
test
jnp
sub
sbb
jle
jle
dec
sbb
cmp
cmpsl
push
adc
and
dec
repnz
in
ret
and
dec
adc
roll
notb
popf
decl
in
xchg
aam
mov
dec
xchg
in
hlt
add
mov
pop
pop
gs
xor
add
iret
xchg
xor
int
stc
sub
lret
xorb
fidivl
mov
pop
shlw
mov
jmp
sbb
adc
sbb
jle
loop
push
mov
cmp
insb
push
mov
sub
xor
lods
push
fcomps
movsb
inc
inc
in
fidivrl
add
mov
jecxz
jno
lret
or
lret
cltd
imul
out
sbb
cs
dec
repz
or
iret
gs
mov
mov
loopne
push
punpcklbw
push
mov
movsl
mov
insb
mov
pop
inc
das
jp
int3
mov
sar
mov
not
movsb
popa
enter
dec
dec
jecxz
sbb
test
cmp
fistpl
xchg
fists
push
sbb
stos
push
xchg
cs
add
cmpsb
insl
mov
mov
testb
fs
idiv
ret
xchg
imul
sub
lds
test
out
add
xchg
shlb
push
into
insl
pop
push
mov
out
out
popw
sbb
iret
push
inc
lret
push
daa
cld
xor
or
into
sub
cmp
jmp
sbb
movsl
dec
clc
push
fcomip
mov
sub
or
adc
sti
mov
cmpsb
call
jg
icebp
in
xchg
inc
pop
cmc
inc
xchg
or
insb
cli
enter
nop
out
mov
leave
std
cmc
xlat
pop
arpl
adc
cmp
les
ret
cmpsl
or
jl
adcl
cmp
jb
xchg
lret
push
cwtl
insb
outsb
sub
stc
inc
daa
push
idiv
sub
inc
cmp
lock
xlat
mov
in
lret
push
imul
jge
mov
mov
in
jecxz
push
add
push
xorl
andl
rorb
dec
mov
loop
jne
xchg
cmp
loopne
rclb
ret
arpl
gs
push
and
push
xor
cld
mov
in
in
ret
lods
subl
ljmp
lret
pop
leave
adc
bound
mov
mov
fmull
ds
int3
pop
dec
int
and
add
in
rcrb
mov
std
xchg
push
dec
mov
arpl
push
jbe
xlat
xlat
cmc
loop
sbb
mov
dec
sahf
mov
pop
jae
pusha
into
jbe
push
pop
jmp
mov
clc
cmc
enter
out
pusha
inc
lods
jle
les
inc
xor
inc
and
mov
fcmovnbe
roll
sub
jne
add
scas
jbe
mov
sub
xor
mov
mov
push
outsl
xchg
imul
fisubrl
mov
xchg
repz
imul
mov
dec
insb
pop
cwtl
call
push
pop
fisubrl
pop
add
sti
test
dec
push
mov
and
push
sbb
and
adc
inc
cmp
push
push
es
add
adc
xchg
dec
je
sub
xchg
mov
cmp
mov
xchg
lock
sub
pop
arpl
or
push
dec
lahf
push
aas
stos
out
push
in
cli
mov
and
repnz
divb
fiaddl
jle
add
lods
in
push
add
xchg
and
and
pop
ss
scas
mov
int
sbb
stos
mov
test
add
mov
movsb
aam
mov
imul
jno
xlat
mov
fldenv
test
jmp
mov
xchg
inc
jmp
add
je
push
hlt
in
pop
nop
jbe
rolb
push
rclb
test
inc
subb
push
cmp
js
hlt
lcall
or
inc
stos
jo
lods
lock
lock
push
push
xchg
pop
lods
movsl
in
push
idiv
and
inc
call
test
data16
pop
push
std
pop
pop
jno
xchg
and
or
cmp
lods
dec
clc
lret
ljmp
dec
test
mov
push
ljmp
or
arpl
sbb
popf
push
sbb
xchg
mov
push
fwait
mov
xor
lods
mov
push
imul
out
in
aas
out
fwait
push
leave
out
dec
jge
jno
nop
adc
xchg
les
in
andb
inc
adc
cmp
xchg
test
mov
sbb
sti
mov
lea
cmp
movsb
xchg
push
mov
sbb
pop
push
mov
inc
mov
mov
sbbl
fs
fdivs
shll
pop
sbb
stos
mov
hlt
sbb
adc
clc
test
pop
xchg
mov
push
icebp
pop
jnp
sbb
lods
ficompl
adcl
popa
cmp
adc
aas
adc
stos
inc
xchg
loop
mov
mov
out
int
lcall
sub
in
fdivrl
xor
jb
and
xchg
mov
adc
clc
jne
sti
mov
sub
lock
pop
cmp
mov
dec
lds
jl
imul
repnz
push
jnp
mov
pop
inc
loopne
test
pop
inc
cli
add
ret
push
iret
pop
testb
leave
push
ret
aaa
je
out
fadd
push
in
orl
scas
jae
shll
sti
in
pop
sbb
fbstp
push
pop
mov
mov
cmp
xchg
and
inc
and
mov
or
mov
mov
dec
sbb
pop
sbb
pop
and
push
jl
call
mov
mov
or
sub
lcall
rcl
jge
mov
pop
push
and
dec
stos
jg
das
mov
adc
push
jb
jmp
stc
loopne
rolb
mov
add
adc
cmc
int3
daa
mov
mov
jb
add
imul
out
insb
rorb
subps
scas
cli
jmp
jns
inc
mov
mov
test
ljmp
fcompl
dec
cmc
leave
lds
pop
and
cli
adc
xchg
and
adc
bound
pop
addr16
pop
or
fwait
fs
jmp
jmp
loopne
jmp
out
scas
push
pop
pushf
stos
xor
pop
sbb
callw
push
pop
icebp
sub
orb
push
cli
push
push
jo
cs
push
push
inc
mov
mov
dec
pop
jbe
dec
adc
test
aam
xor
ss
inc
pop
adc
call
lret
mov
cmpsl
cmp
push
incb
and
cs
sub
dec
hlt
sbb
je
xchg
shll
mov
pop
aas
test
lock
addr16
incl
jae
pushf
push
push
xchg
push
pusha
jp
out
rolb
data16
fsubrs
ljmp
cmovb
and
pop
sbb
jno
fisttps
out
xchg
mov
xor
fwait
outsl
loopne
add
movsl
imul
sbb
shl
mov
cmp
jp
sbb
pop
cmp
and
mov
xlat
dec
aam
rol
cmpsb
xchg
testl
mov
mov
sub
or
or
insl
out
fcoml
push
int
test
adc
aad
xchg
adc
and
mov
dec
icebp
pop
iret
loope
lea
jae
in
mov
ret
mov
adc
pop
xor
shrb
xchg
cmp
cmp
scas
mov
fmull
gs
idivl
xlat
cwtl
das
leave
push
xchg
inc
das
loopne
aaa
pop
xchg
lahf
mov
pop
xchg
test
push
andl
pop
in
in
lahf
addr16
jnp
jmp
adc
movsl
sahf
push
nop
push
fmull
sub
sbb
push
jne
or
loopne
fcomps
jg
loope
mov
daa
push
cmpb
les
aam
mov
fstpl
jo
inc
cmp
nop
sub
or
lret
inc
aas
push
in
ljmp
pop
sub
or
jb
bound
mov
test
in
shrb
scas
hlt
jle
pop
out
xor
mov
out
add
into
test
and
mov
push
aaa
push
cmpsl
add
loope
pop
pop
add
xchg
js
fcmovbe
xacquire
stos
negb
jl
jg
jae
dec
adc
add
movsl
xchg
loope
jle
mov
adc
jne
pop
daa
adc
aam
in
pop
xorl
test
mov
sub
jl
mov
dec
pop
mov
ljmp
add
jecxz
xor
xchg
ss
loop
push
jmp
in
or
jmp
cwtl
push
not
or
jmp
shll
adc
xorl
jne
push
jecxz
adc
negb
or
dec
sahf
push
ss
into
dec
stc
ds
and
fmull
dec
ja
aaa
jge
add
pop
fs
jo
dec
data16
aad
cmp
cmp
mov
pop
and
sarb
sub
mov
jns
subps
pop
xlat
cmp
jl
loopne
lock
xchg
add
divl
sahf
mov
mov
push
sub
pusha
xchg
cmpsb
shrb
mov
call
or
nop
pushf
jno
divl
mov
adc
mov
int
mov
sub
sarl
test
push
fcom
lods
add
pusha
mov
or
aam
dec
rolb
into
inc
and
loope
shll
ret
cld
xor
imul
jae
das
jne
push
sarl
push
xchg
outsl
xchg
xor
add
dec
pop
xlat
or
lock
mov
test
push
lds
cmpsb
dec
and
bound
add
stc
mov
push
sbb
mov
inc
fildl
dec
sbb
je
mov
pushf
sub
or
sbb
enter
sti
mov
sbbl
inc
imul
pop
or
jne
add
sbb
push
popf
jns
test
sub
adc
outsl
xchg
ja
jb
fcomi
fidivs
imul
cli
mov
mov
mov
in
cltd
lahf
cmp
push
push
ljmp
fistps
into
lds
shl
daa
gs
mov
loope
dec
lods
mov
sub
idivl
add
xchg
xor
pop
cmp
jp
lret
xchg
lcall
push
xor
repnz
xchg
dec
scas
cmp
stos
dec
mov
sbb
cmp
xchg
mov
jbe
je
cmc
scas
adc
adc
fcompl
mov
movsb
push
mov
lret
adc
inc
in
xchg
int
popa
outsb
jo
repnz
clc
lahf
sbb
in
mov
pushf
push
je
push
popf
adc
push
ss
movntps
outsl
dec
aam
or
xor
adc
xchg
das
inc
xchg
lret
aas
movsl
loopne
mov
arpl
jle
int
add
mov
arpl
mov
call
cmp
sub
dec
fcoml
in
pop
ja
jmp
cmp
shlb
out
test
add
dec
jae
xchg
aas
fidivl
xchg
lret
stos
jle
popf
call
les
jnp
fsub
dec
rcrb
cwtl
gs
aas
sub
pop
add
mov
decl
sti
jmp
sbb
outsb
repnz
notb
xchg
jecxz
pop
fsub
cmpsl
leave
inc
mov
xlat
and
inc
cwtl
cltd
lret
inc
imul
push
adc
sub
xchg
int
dec
jae
je
mov
shrl
push
jl
call
inc
xlat
inc
mov
inc
cwtl
in
mov
and
or
das
mov
mov
ljmp
je
jl
jl
mov
dec
mov
sub
je
gs
jne
fisubrl
add
or
mov
jg
movl
jo
stos
add
cmp
in
lock
shrl
xor
jge
inc
mov
inc
adc
in
pop
nop
mov
scas
fdivr
dec
cmp
punpcklwd
outsl
outsl
neg
cmp
sbb
pmaddwd
sbb
xchg
pop
cmpb
jno
sbb
clc
pushf
cmp
jne
clc
cmc
dec
jmp
dec
and
pop
arpl
mov
cmp
fsubrl
push
pop
and
mov
ficompl
xchg
sub
test
cli
fldt
rcr
mov
jnp
mov
dec
pop
sar
je
cs
pop
and
jmp
xor
jns
lods
cmpsl
stos
mov
or
outsl
test
cmpsl
mov
or
xchg
lods
mov
pop
gs
decb
shrl
push
fsub
pop
dec
fiaddl
adc
xchg
movsb
xchg
xorl
add
sbb
sbb
jns
mov
cmc
dec
fstl
rclb
inc
clc
mov
jbe
aas
test
jmp
sub
jne
inc
outsl
or
lahf
mov
pusha
iret
mov
dec
leave
out
out
push
ja
mov
or
cli
outsb
sbb
xor
shll
or
mov
insb
sbb
add
sub
cmp
outsl
push
outsb
adc
xchg
inc
lret
not
aad
roll
movsb
inc
xor
lods
cld
mov
call
mov
dec
or
lret
sub
mov
dec
jl
jmp
lds
mov
xorb
pop
orl
orb
push
add
fprem1
xor
push
aas
adc
fidivs
pop
std
nop
or
fdivs
scas
cwtl
adc
and
fcoml
jge
xchg
stos
inc
and
pop
xchg
xchg
mov
int3
mov
addr16
sub
push
mov
cltd
inc
arpl
sarl
sbb
out
mov
mov
fbstp
push
add
imul
sub
mov
ljmp
call
loope
xchg
ret
jne
in
xor
jle
add
movl
les
push
xchg
stos
pop
loopne
push
shlb
icebp
es
inc
cmp
mov
or
inc
je
outsl
imull
shl
jle
repnz
mov
push
fwait
mov
sti
mov
or
pop
sbb
div
adc
ja
pop
push
and
loopne
loopne
xchg
mov
inc
xchg
je
out
pop
jge
inc
mov
mov
fwait
mov
loope
dec
imul
aas
xchg
int3
cmp
nop
xchg
fcomps
cmp
leave
cld
xchg
xorb
mov
lret
xor
test
adc
insb
or
rolb
ja
fnstsw
out
icebp
pop
rcll
je
loop
sbb
out
clc
mov
sbb
out
nop
outsb
dec
les
inc
dec
push
xchg
adc
mov
mov
in
cmp
fstps
lods
stc
or
addl
outsb
stc
out
push
jo
lahf
xor
push
cld
mov
out
in
jbe
dec
mov
adc
add
out
subl
test
or
out
lock
inc
fwait
mov
jge
add
jnp
stc
dec
out
or
and
mov
andb
xor
gs
mov
data16
sbb
adc
movl
jns
imul
rcr
in
push
cmp
out
sbb
mulb
jmp
mov
jae
inc
sahf
xlat
fwait
dec
jbe
int3
imul
movsl
sarb
sbb
notb
pusha
pop
movsl
jle
sub
mov
mov
pusha
sti
clc
movsl
xor
sbb
cmp
mov
stos
pop
dec
loopne
push
jno
in
addr16
adc
mov
divl
shll
push
sbb
xchg
add
fdivrs
xchg
addr16
nop
nop
or
cmp
adc
test
mov
fdivp
jnp
cltd
inc
imul
fimull
rcl
out
mov
cmp
dec
adc
dec
stc
xor
sti
jecxz
lahf
fsubs
sbb
xor
add
sbb
pop
test
aas
test
cwtl
jg
push
sbb
mov
pushf
jnp
inc
lret
pushf
dec
inc
sbb
inc
xor
and
sub
push
push
xor
fistpl
add
dec
jno
add
in
fwait
and
xchg
push
adc
mov
testb
cltd
and
dec
add
int3
mov
adc
pop
xor
sub
dec
mov
push
aad
ss
pop
les
ds
cmpsb
mov
xchg
movsl
jmp
int
shlb
push
jo
add
dec
add
test
sub
add
lock
pop
adcl
pop
shlb
iret
mov
push
inc
pop
sbb
aas
psrad
mov
sarb
test
cli
cltd
cld
mov
pusha
sub
mov
jns
loopne
in
push
xlat
mov
test
push
cmp
js
mov
mov
mov
cs
pop
pop
aas
cmp
cmp
shlb
cli
lret
sbb
mov
jmp
arpl
push
pop
mov
mov
sub
loop
xor
cs
sub
cmpsl
sub
bound
jecxz
movsb
push
call
fldcw
shlb
add
in
pop
shr
jl
mov
mov
dec
jns
push
fisubrl
addl
loopne
inc
loop
imul
test
icebp
test
inc
push
dec
call
jmp
or
mov
lret
cli
inc
inc
cltd
testb
es
xchg
inc
std
icebp
lea
push
inc
daa
mov
sub
mov
es
daa
aas
sbb
pop
ret
lods
jge
gs
lods
add
rcrl
jo
sub
push
dec
sbb
and
cmp
jns
push
les
adc
add
adc
mov
push
aad
cmp
lcall
cwtl
mov
testl
sub
arpl
mov
stos
shlb
ss
js
testl
ret
arpl
gs
mov
sbb
add
cmpsl
aaa
push
popf
add
cs
ljmp
push
mov
jge
cltd
test
inc
in
cmc
in
and
mov
in
cmp
mov
cltd
int
out
mov
call
in
out
xchg
jp
bt
add
in
add
mov
imul
or
sub
movsl
stos
xorb
push
mov
jl
sub
sti
lret
js
add
sub
std
cmp
add
shll
pop
cmp
subl
dec
xor
mov
aad
inc
fwait
ljmp
imull
mov
or
or
dec
mov
mov
cmp
add
xchg
in
jne
mov
negb
jl
mov
shll
std
cmc
mov
js
shrb
aad
or
fcoml
cmc
cmp
cli
sub
mov
fbstp
jb
mov
mov
mov
ficomps
sbb
mov
inc
sbbl
xchg
lods
sti
in
xorl
and
shrl
aam
inc
cmpsl
inc
jb
xchg
movsl
cli
jp
out
outsb
ja
rol
popf
adc
push
and
scas
xor
and
push
add
aam
mov
movsl
les
cli
hlt
sbb
xchg
push
dec
xchg
push
lea
sti
sbb
leave
test
add
pop
push
mov
stc
dec
popa
fs
xchg
lea
les
push
mov
push
add
xor
fimuls
out
adc
into
jle
fs
daa
or
xlat
ret
dec
and
pusha
xchg
andb
mov
inc
je
mov
push
lods
ja
sub
cli
fidivrl
jge
js
jle
sbb
push
mov
arpl
mov
clc
insb
mov
ret
pop
dec
cwtl
fmul
cmp
xor
fisubs
lea
xor
jo
fidivl
xor
mov
bound
adc
mov
xor
incl
cmp
daa
pop
jl
pop
idivl
pop
dec
popa
jne
test
ret
jne
dec
mov
or
jbe
repz
aas
mov
shlb
xchg
ds
push
loop
mov
arpl
push
into
jbe
cmp
xor
pushf
mov
pop
mov
jmp
pop
and
imul
out
jne
jne
jb
mov
mov
add
xor
jns
adc
or
adc
mov
ljmp
jns
push
fbld
adc
push
push
sarb
pop
inc
pop
mov
xchg
sahf
mov
sub
jmp
mov
ss
sarb
mov
xor
xlat
outsb
lcall
test
pop
fsubl
leave
ret
xor
cmp
add
in
inc
sbb
or
stos
ss
lods
mov
mov
add
fstpt
sub
addb
xor
imul
and
pop
insb
xor
push
lret
or
push
imul
xor
adc
xor
and
sti
out
fstpl
loopne
push
mov
outsl
xchg
imul
sbb
jp
mov
lock
in
cvttps2pi
aas
xlat
enter
cmp
and
jae
jo
divl
lds
jae
mov
cmpsl
xchg
adc
movsl
das
ret
mov
cwtl
cmpl
or
cs
or
movsl
inc
adc
movsb
pop
sub
jno
cmpsb
dec
adc
shlb
out
or
ja
xor
icebp
clc
inc
push
add
pushf
ret
stos
mov
inc
aam
jae
or
pusha
add
jnp
ret
pusha
fcoml
in
and
jae
mov
mov
jmp
mov
cmp
movsb
jbe
idivb
sub
xchg
add
fsubrl
mov
fimull
stos
ud2
cli
sbb
jne
outsl
mov
mov
jo
cmp
out
call
adc
mov
push
push
bound
cmp
sub
sub
lret
sbb
pop
xchg
or
cmp
outsl
jae
push
pop
pop
fcomip
xor
mov
in
sbb
pop
and
mov
push
pop
mov
jle
add
sahf
outsb
pop
ljmp
dec
aam
loope
mov
fsubrs
jmp
aam
rolb
or
aad
je
hlt
negl
inc
mov
mov
outsl
mov
rol
mov
xor
push
fmul
cmpsb
orl
stos
cltd
movl
cmp
dec
orb
lock
out
gs
icebp
fisttpl
add
fcmovu
adc
lock
repnz
mov
xchg
mov
ret
xchg
test
dec
js
jb
jns
rolb
jne
call
jo
dec
push
leave
push
mov
sbb
push
mov
or
push
je
mov
and
dec
push
popa
mov
aas
scas
xor
shll
xor
push
fwait
nop
mov
rol
and
push
pop
lret
inc
sti
popa
mov
cs
mov
ror
andb
xor
push
jmp
sub
andl
mov
pop
idivl
mov
pop
xor
out
js
rcll
aad
test
jo
lret
aas
jno
dec
pop
push
iret
pop
cmp
xor
in
adc
fwait
decl
out
fimuls
ds
inc
dec
icebp
add
mov
sub
fs
or
push
fcompl
lods
decl
sahf
ficoml
adc
push
shll
xor
std
lods
bound
jbe
repz
dec
cs
test
pop
pusha
sub
repnz
xor
push
and
jo
sub
push
enter
out
sub
repnz
stos
scas
cld
push
or
shlb
push
ss
add
mov
fsubrl
pop
adc
fsubr
xchg
pop
inc
add
or
mov
jne
inc
rcll
je
mov
aaa
adc
ret
jbe
imul
imul
cld
icebp
dec
test
jno
les
dec
aaa
mov
loopne
pusha
push
sub
xchg
jns
and
sub
and
mov
stc
add
mov
mov
stos
pop
rcr
lcall
je
dec
mov
sti
mull
push
cmp
add
es
cld
mov
lea
inc
shlb
leave
sub
jne
fcompl
cld
int
mov
push
xchg
pop
mov
mov
jp
idivb
mov
bts
stos
add
or
mov
scas
lret
pop
inc
outsb
cmp
leave
insb
int
imul
xchg
repnz
xchg
std
test
sbb
sub
out
xor
push
lret
test
xchg
mov
rorb
pusha
adc
push
lcall
xchg
testb
xchg
ljmp
sbb
jp
lock
sbb
cmp
lods
inc
cld
mov
xor
jnp
mov
imul
jecxz,pn
cwtl
jbe
jb
jbe
xlat
mov
scas
and
aas
cs
sub
lret
or
pop
stc
ljmp
cltd
in
in
stos
jb
sarb
pushf
mov
popf
push
fistl
xor
aas
fisubl
mov
sahf
mov
jmp
insb
fnstsw
roll
xor
lcall
adc
mov
pop
cli
jnp
mov
xor
adc
jge
mov
int
lcall
sub
mov
mov
sbb
leave
mov
hlt
pusha
nop
aam
fwait
adcl
xchg
fsubrs
std
lret
out
repz
lcall
inc
jb
aaa
add
adc
outsl
or
jmp
mov
or
rorl
push
hlt
and
or
inc
push
and
mov
sbb
das
mov
aas
jp
pop
jmp
aad
push
ret
jg
or
mov
into
in
push
xor
sub
mov
mov
sbbb
jmp
push
pop
mov
or
push
je
mov
mov
cwtl
sub
push
aaa
imul
mov
mov
scas
push
sti
push
and
and
sbb
fisubs
pop
in
scas
mov
rorl
hlt
loope
adc
xchg
mov
out
rcrl
push
lock
lret
and
and
dec
mov
xchg
add
sar
es
sbb
xor
jmp
test
insl
add
inc
adcl
jmp
xchg
or
rcrl
bound
aas
mov
std
in
adc
cmc
ret
dec
repnz
push
mov
cmp
mov
ret
es
dec
test
xor
mov
mov
xchg
mov
out
outsb
rclb
xchg
andb
imul
clc
and
jns
sub
dec
aas
cld
xor
std
push
cltd
call
sbb
mov
mov
inc
int3
into
pop
inc
ret
scas
mov
jmp
xor
ja
lea
loopne
frstor
adc
shlb
inc
cmp
sub
ret
cli
pop
imul
inc
adc
fsubs
dec
in
lea
mov
or
and
ss
adc
test
push
push
sub
loope
lret
cmpsl
fsubr
push
jp
into
add
test
pop
and
stos
ret
insb
ret
les
jle
inc
enter
jg
dec
fnsave
test
pop
mov
fldt
mov
dec
sbb
mov
fstl
pusha
push
testb
add
dec
push
repnz
mov
in
mov
aad
lcall
cwtl
push
or
add
inc
or
pop
aad
jle
or
lock
in
adc
sbb
rcr
xor
filds
lcall
in
notb
ja
mov
inc
cmpsl
decl
test
or
hlt
and
scas
imul
mov
cmp
aam
orl
jmp
test
pushf
or
dec
and
addl
fildl
mov
out
ret
movsl
push
or
and
add
cld
lds
in
shll
inc
lret
jbe
repnz
jl
stos
pushw
out
cld
stos
cmp
rol
popa
lret
push
mov
lds
xlat
leave
mov
mov
push
pop
cmpsl
je
jno
pop
fwait
cmpsb
dec
or
pop
rolb
mov
cld
push
das
mov
mov
push
jmp
jmp
or
sbb
sbb
cmp
add
test
xchg
cld
mov
out
int
idiv
lret
mov
in
mov
ficoms
push
mov
icebp
bnd
cltd
mov
aam
movsl
xchg
mov
cmp
icebp
lahf
movsb
mov
pop
adc
cmp
out
sbb
cmpsb
nop
push
lods
sbb
pop
push
xchg
int3
mov
pushf
aaa
or
pop
pop
arpl
jecxz
movsb
push
xchg
jecxz
jae
xor
fs
push
and
pop
xchg
dec
lret
cs
aas
rol
xor
and
pop
shll
ss
cmp
dec
jge
cmp
sbb
inc
fsubrs
outsl
jo
movsb
cmpsb
push
cmpsl
jge
aad
repz
daa
sub
inc
mov
bound
mov
test
mov
adc
aas
sbb
gs
call
add
adc
mov
sbb
xchg
mov
mov
loop
adc
pop
imull
cmp
xor
and
cld
pop
mov
adc
cmpsb
inc
scas
shll
and
pop
pop
mov
movsb
push
dec
push
add
call
rcrb
ss
lock
into
fidivl
sbb
adc
mov
clc
dec
mov
sub
in
pushl
adc
call
lods
jnp
mov
psrad
mov
mov
in
jmp
subl
sahf
arpl
into
shl
add
daa
push
jle
mov
dec
sbb
loopne
mov
inc
mov
cmp
jne
pop
xor
jmp
sbb
scas
inc
push
cwtl
icebp
jle
lret
and
mov
inc
xor
idivl
inc
sub
cmp
mov
addr16
lods
xor
out
or
cmc
ja
adc
cltd
dec
enter
lahf
cmp
dec
mov
ret
or
hlt
fbld
test
shrl
or
xlat
cmp
sbb
mov
aad
clc
or
sahf
push
add
pop
hlt
roll
fcmovne
addr16
out
cmp
ss
mov
jl
add
call
sbb
lock
add
movsl
cwtl
or
dec
inc
leave
and
lcall
xchg
call
and
mov
hlt
scas
test
fildll
ss
mov
cmp
xchg
adc
xor
add
es
inc
mov
imul
daa
or
cwtl
into
mov
out
push
xor
inc
mov
pop
dec
jb
ja
daa
xchg
negl
adc
in
push
add
test
mov
push
push
jge
ljmp
xchg
cmp
cmp
inc
jae
mov
jecxz
lret
int
fiaddl
cmc
aaa
js
mov
lds
into
in
cmp
bound
cmp
pop
mov
xchg
xchg
add
addr16
loopne
out
cltd
stc
test
orb
add
dec
stc
and
lret
stc
jo
cmp
mov
mov
pusha
mov
push
mov
repz
fdivs
inc
ficoml
dec
pusha
jbe
push
stos
das
movsb
adc
mov
arpl
mov
dec
out
xchg
movsl
dec
test
lahf
rcl
clc
aam
pushf
jae
fiaddl
adc
jae
testl
add
imul
clc
insb
test
sbb
mov
int
stc
inc
out
sub
out
mov
lret
test
ret
mov
mov
rcll
and
or
mov
cmp
in
jle
sbb
mov
mov
popa
sbb
add
mov
clc
jno
jmp
pusha
lcall
rolb
cmpsl
sbb
add
fs
lcall
mov
jne
jmp
dec
sarb
in
xchg
xor
outsl
sub
jnp
loopne
fimuls
fcoml
add
clc
mov
lds
int3
inc
outsb
clc
call
imul
pop
inc
test
mov
pop
sbb
push
cmpsl
test
mov
inc
xchg
jns
cli
sbb
sahf
ds
sti
or
push
pop
mov
add
sub
shl
cmp
leave
leave
sahf
aam
das
jmp
mov
popa
mov
js
or
icebp
lods
push
aam
inc
dec
jge
jge
push
subb
imul
incl
sbb
in
mov
dec
gs
mov
outsb
jecxz
mov
ss
xor
in
cmc
rclb
inc
mov
lods
jle
imul
mov
mov
cmp
xchg
jns
cli
in
test
or
xor
decl
imul
mov
cmp
popf
inc
imul
push
dec
pop
sahf
push
xchg
and
test
mov
dec
rolb
push
test
adcb
pop
pop
outsl
inc
in
popf
xor
ljmp
xchg
bound
imul
and
adc
outsb
sub
jmp
out
decl
jae
mov
lds
push
in
mov
mov
insb
dec
adc
push
data16
in
mov
sahf
daa
add
lods
adc
sbb
push
jle
mov
lret
cmpsb
fstp
fimuls
pushf
push
pop
movsl
leave
hlt
ret
maskmovq
sbb
add
sub
in
jnp
negl
test
xchg
and
cltd
or
push
aas
inc
fcmovu
jl
jp
or
cs
shll
test
in
and
in
add
cmp
add
xchg
cmp
cltd
negl
xchg
stc
xchg
and
pop
repz
mov
and
cld
fidivs
daa
hlt
add
repz
xchg
das
adc
jecxz
sub
mov
mov
push
fcoms
rcrl
aad
add
cmpsb
dec
ss
into
mov
incl
int3
mov
or
push
jno
push
aaa
mov
call
dec
mov
cmpsl
int
adc
mov
hlt
dec
dec
lock
mov
push
scas
frstor
cwtl
mov
inc
sub
fisubl
dec
mov
jg
es
push
mov
dec
repz
jne
shlb
jg
pxor
push
in
out
or
jo
inc
mov
lcall
mov
movsb
fs
idivb
xor
jb
fsubrp
fildll
dec
data16
lea
sbb
int
cmc
ret
aam
sub
xchg
pop
mov
scas
cmc
mov
jno
sbb
repz
fiaddl
int
fcmove
gs
pop
scas
imul
cwtl
fildl
iret
in
inc
popf
push
mov
xchg
outsb
rcrb
popf
push
int3
jg
outsb
jp
lahf
push
mov
jo
cld
addr16
pop
cmp
mov
cld
fisubs
sub
or
xor
iret
jg
clc
mov
xchg
pop
js
mov
sbb
ja
out
pop
xor
shld
sub
stos
mov
mov
fwait
and
ffree
push
add
mov
cmpsl
negb
ljmp
cs
add
call
cmp
jg
jnp
movsb
sub
fs
cmc
jmp
push
cmp
orl
add
movsl
cmp
adc
xor
xchg
scas
or
mov
mov
lods
pop
adc
js
xor
jo
sbb
xchg
clc
cmp
dec
mov
loope
mov
jbe
sbb
jmp
mov
jo
stos
mov
and
inc
mov
fdivl
lcall
pop
cs
gs
cli
cs
and
inc
mov
loope
int
pushf
adc
iret
mov
xchg
push
jbe
mov
cmc
ret
add
je
mov
sub
imul
inc
jl
xchg
insb
inc
idivl
xchg
stc
jae
pop
pushf
shll
aad
imul
add
push
pop
push
xor
outsl
shr
xchg
cli
pop
jp
xchg
movl
cli
sub
cmp
inc
or
fildll
cmpsl
xchg
or
pop
movsl
sti
push
sbb
jl
add
sbb
add
jecxz
nop
cmp
push
jns
test
mov
mov
imul
and
sub
jmp
aam
fwait
lods
xorb
daa
mov
loope
test
fcompl
int3
testb
inc
testl
out
add
cld
xor
icebp
and
sub
push
mov
cltd
jae
xorl
outsb
iret
push
mov
loopne
jmp
mov
mov
ret
dec
ds
xor
in
cwtl
jnp
xor
and
cmp
add
add
pop
pop
sub
mov
sti
sub
add
repnz
xor
jmp
inc
sub
dec
push
mov
imul
arpl
pop
out
push
int3
mov
sbbb
cmpsl
mov
hlt
test
mov
fstpt
iret
ret
mov
movsb
call
int3
into
lret
cmpsb
mov
mov
dec
pushf
mov
or
cmp
add
adc
push
jnp
jne
add
in
jg
popf
adc
and
dec
sbb
sub
scas
je
cs
jnp
push
ss
test
ret
das
cmp
notl
pop
int
adc
xchg
push
and
jle
cmp
js
sti
cs
xchg
ljmp
and
add
mov
jge
clc
lcall
pop
subl
imulb
or
jecxz
pusha
out
xchg
ret
and
test
adc
bound
out
jecxz
jl
xor
xchg
popa
or
inc
push
sahf
cmp
insb
mov
mov
daa
mov
mulb
fisubrs
es
jb
push
sub
add
cmp
mov
and
mov
add
jl
adc
fs
test
xchg
cltd
mov
jno
push
and
adc
repz
sub
dec
dec
icebp
adc
into
arpl
clc
add
test
test
add
test
rorb
push
out
dec
mov
clc
fisubs
mov
cmp
adc
cmp
mov
rclb
dec
sub
and
sub
shrb
out
sub
add
sub
adc
mov
filds
arpl
notb
inc
push
in
and
push
and
roll
bound
mov
xchg
insb
pop
scas
fstl
mov
sahf
cmp
hlt
cmp
loopne
push
pushf
aas
mov
insb
shrb
pop
and
inc
push
jno
xor
arpl
icebp
pop
push
pmulhuw
push
mov
nop
bound
jnp
inc
movsb
push
test
ljmp
jbe
push
pop
or
sbb
xor
js
mov
adc
add
mov
mov
sbb
mov
lods
pop
ret
cmp
mov
sahf
cmp
inc
testl
aas
push
jo
mov
sbb
mov
ds
add
mov
dec
iret
add
je
and
imul
mov
sbb
add
mov
adc
lahf
xchg
sub
adc
xor
aas
push
fptan
cltd
in
inc
adc
add
daa
lock
inc
dec
fnsave
jmp
or
aam
test
and
adc
adc
dec
xor
dec
int3
pop
aas
mov
fcmovnbe
dec
insl
mov
aas
and
or
xlat
repnz
stos
sub
int
jg
xor
ljmp
jg
ror
jo
cmpb
push
ret
inc
jg
sbb
sub
ljmp
insl
and
push
cmp
pop
xor
mov
jnp
or
fs
xchg
movsb
ds
mov
cltd
stc
xor
cltd
inc
mov
ficoml
stos
push
mov
mov
imul
mov
and
jns
or
sub
xchg
aad
push
dec
pop
mov
popa
xlat
adc
lret
aad
repz
mov
or
pop
xchg
test
and
das
or
roll
xchg
mov
and
bound
pop
loope
loop
fwait
cmp
sub
or
jge
cmp
cmpsb
pop
add
shlb
cmp
lods
daa
cmp
dec
les
push
dec
mov
jg
or
push
ret
xchg
xchg
mov
mov
mov
stc
ds
or
xor
int
mov
lret
sarb
mov
add
mov
lea
lock
pop
stc
dec
dec
jae
test
inc
mov
lcall
popf
leave
hlt
jmp
lds
cmp
jae
pushl
cmp
inc
push
idivl
xchg
nop
mov
mov
daa
or
adc
sub
mov
stos
lret
insl
aam
jae
leave
int3
cmp
adc
ds
test
push
fdivrl
js
repz
lds
mov
jg
scas
in
cli
add
jle
push
and
and
aaa
scas
arpl
rcl
jecxz
movsb
dec
int
lahf
sbb
shll
fwait
idiv
inc
pop
rorb
xor
mov
jmp
repz
outsb
test
pushf
ss
and
add
xor
push
fwait
cmc
pop
sbb
mov
sbb
lds
imul
xchg
ficompl
popa
mov
xchg
xor
mov
stc
cmpsl
mov
fiadds
call
aas
push
sbb
push
mov
cmc
iret
xor
cmp
ss
cmpsl
or
loope
popf
faddl
adc
mov
dec
insb
cmp
lock
shll
mov
leave
out
leave
clc
add
mov
push
add
sarb
or
fistpl
xlat
test
test
xchg
and
xor
jae
pop
pop
lahf
xchg
mov
sbb
mov
mov
add
xor
rep
cld
pushf
in
or
jl
jno
scas
lahf
push
push
pop
inc
mov
mov
lods
cwtl
das
inc
jp
lock
sbb
jge
test
rclb
mov
push
jecxz
add
fsts
add
loop
push
mov
inc
lock
mov
fdiv
stos
lds
test
xchg
popf
xchg
pop
mov
repz
scas
dec
and
push
fbstp
and
ret
cwtl
clc
pusha
and
repnz
les
dec
jo
les
ret
out
mov
sbb
es
jne
pop
cmp
scas
data16
mov
repnz
clc
in
add
cmp
push
in
xchg
sub
cld
inc
or
lahf
je
mov
cmpsb
popa
stos
loope
add
in
and
aaa
dec
inc
rclb
push
cmpsl
test
test
mov
jns
dec
fisubl
popa
jnp
dec
rcrl
mov
and
insl
xchg
out
dec
cmp
stos
and
test
sub
xchg
daa
out
inc
mov
jmp
pop
mov
ljmp
pop
std
in
jae
cs
jl,pt
or
and
into
ja
add
aad
ret
jecxz
pop
adc
std
xchg
stos
out
mov
xchg
popa
xchg
xor
gs
lahf
scas
inc
pop
in
pop
das
mov
lret
stos
mov
pop
inc
sbbl
shl
dec
sub
mov
adc
fstl
add
and
sarb
sbb
movl
inc
in
xchg
rorb
mov
stos
fcoml
xor
fcmovu
mov
bound
popa
cmpsl
pushf
push
push
mov
insb
xchg
sub
xor
jo
pop
imul
dec
push
jb
idivb
and
mov
cmp
xlat
xor
scas
pop
test
cmp
jns
imul
add
sbbl
jo
pop
outsb
sbb
cmc
cmpsb
adc
je
cmp
fdivr
mov
pop
pop
dec
rorl
push
jecxz
ja
mov
push
ss
mov
movsl
mov
adc
xor
cmp
aad
cmp
or
imul
ret
sbb
mov
or
and
iret
xchg
repnz
or
test
outsb
aad
add
popa
push
aas
lea
push
cli
cli
js
and
aam
icebp
out
jecxz
icebp
test
sbb
stc
or
insl
rcrb
test
adc
movb
imul
push
jae
adc
adc
cltd
gs
xor
popf
jle
push
mov
jle
xchg
scas
sti
test
daa
std
stc
mov
gs
cmc
pop
pusha
or
das
push
mov
sarb
test
dec
and
sub
daa
xchg
dec
fistps
cmpsb
cltd
movl
mov
enter
cs
inc
rcll
inc
mov
xchg
fistpll
xchg
scas
pop
dec
add
or
mov
fistpll
incb
push
push
fldl
push
xor
es
fistl
mov
jno
aad
gs
xor
mov
sub
dec
fidivs
ljmp
fnsave
sbb
sub
mov
arpl
data16
int
inc
fnstcw
repnz
mov
sti
ss
sub
loope
ja
pop
or
imul
test
sbb
or
into
mov
pop
adc
push
js
movsl
lods
data16
lods
and
jp
xchg
fldcw
jl
add
ja
movsl
adc
sarb
ljmp
popa
test
in
mov
sarl
testb
movsb
dec
int
adc
mov
dec
test
loop
sbb
add
ljmp
xchg
outsl
jb
das
decl
cmpsl
hlt
vpmuludq
popa
sbb
and
mov
jle
and
mov
jb
mov
loope
xorb
les
push
movsb
or
xor
pop
dec
dec
or
in
pushf
cmp
mov
push
in
in
pop
prefetcht1
clc
xor
lds
int
xchg
imul
dec
hlt
cmp
mov
loopne
es
aam
inc
mov
or
loopne
fidivl
pop
test
mov
sbb
sbb
pop
or
cmp
das
pop
sbb
dec
pop
lods
and
repnz
stos
push
sub
sbb
test
nop
mov
jae
out
push
bound
je
push
setnp
add
and
or
out
sbb
adc
sahf
mov
mov
mov
add
cwtl
ret
es
and
xor
lods
fprem
mov
loopne
push
sahf
dec
mov
hlt
xchg
icebp
jb
adc
mov
push
scas
add
fcoml
jmp
aas
dec
pop
dec
lods
mov
mov
jp
lock
pop
sbb
xlat
mov
pop
sarb
inc
test
ret
movsl
mov
xor
mov
scas
sub
iret
mov
inc
or
ret
lahf
imul
bound
mov
mov
cmp
jae
bound
push
out
xor
call
push
cmp
pop
push
sub
sub
out
mov
ret
and
adc
adc
ds
and
dec
mov
insb
or
arpl
aam
rep
jns
dec
and
aas
xlat
push
mov
adc
xor
add
mov
mov
jg
xor
dec
dec
sub
sbb
inc
pop
xor
add
clc
pop
loope
mov
sahf
shll
mov
mov
enter
aam
push
fmuls
call
push
cmp
insb
imul
cltd
xchg
in
xor
addr16
push
cmp
popf
popf
jns
add
push
cwtl
mov
pop
sbb
and
cwtl
push
ret
xor
inc
addr16
aaa
xor
movsb
adc
jecxz
cwtl
pushf
leave
int
and
je
ljmp
into
push
adc
int3
lret
mov
mov
cltd
and
fdivrs
out
mov
sarl
xlat
adc
popf
sub
xchg
lods
fsubr
fadd
sbb
jo
subl
in
ss
jl
mov
das
clc
insl
xchg
cmp
sti
sbb
and
add
hlt
dec
pop
pop
leave
mov
adc
inc
cltd
imul
movsb
arpl
dec
jl
pop
stc
cmp
and
fnstsw
sub
mov
dec
adc
fiadds
cli
cmpsl
jno
mov
sbb
xor
mov
jmp
mov
sub
inc
lret
or
mov
shl
stos
mov
add
les
aaa
or
ds
add
out
mov
jbe
xchg
fadds
aam
jnp
shl
and
lret
ret
sub
lods
xchg
push
or
adc
ja
add
cs
enter
mov
in
out
mov
data16
nop
nop
shrb
mov
bound
push
sti
add
jle
and
xchg
and
popa
xorl
mov
cli
enter
mov
cwtl
idivb
test
inc
add
adc
int
sahf
add
inc
or
mov
mov
sbb
mov
mov
pop
mov
and
cltd
popa
cwtl
aam
and
xor
pushf
data16
mov
bound
jmp
rorb
std
jge
mov
mov
lahf
stc
xchg
push
mov
mov
sbb
cmp
adc
ret
jmp
stos
clc
into
and
aam
jmp
mov
inc
cmpsb
xor
nop
leave
fldl
out
lcall
imul
rcrl
adc
cmp
mov
xor
pushf
mov
insb
les
inc
xor
mov
js
mov
adc
dec
out
mov
sarl
decl
ljmp
movsb
xor
pop
aas
sbb
je
js
test
xchg
mov
jo
out
flds
outsl
pop
jp
lret
cld
mov
sub
mov
outsl
inc
sbb
insb
dec
cmp
dec
mov
push
mov
mov
rcrl
push
sbb
mov
mov
cmp
sub
out
xor
sarl
testl
inc
fistps
pushf
popf
dec
pop
call
add
adc
push
mov
prefetch
fcoml
fimuls
push
dec
idivl
fs
push
xor
pop
xchg
fs
mov
pop
adc
aas
or
mov
scas
nop
addr16
icebp
pop
dec
push
ss
add
add
pop
stc
andb
leave
hlt
rol
out
mov
inc
jb
mov
pop
push
or
mov
fcomps
xchg
push
cli
imul
xor
and
stos
xchg
imul
repz
sbb
or
gs
and
sbb
inc
addr16
jno
sbb
es
test
lahf
adc
pushw
pop
mov
xor
es
fildl
jae
pop
scas
enter
sbb
adc
mov
adc
sub
test
lock
test
pushf
dec
movsb
jp
shll
xchg
leave
sub
dec
cmpb
imull
fs
jns
xor
lret
std
loope
aad
scas
mul
mov
cmc
sub
xor
out
lahf
add
scas
pop
iret
xor
out
call
jo
pop
ret
ja
jecxz
push
dec
bound
ja
inc
test
fildl
push
push
inc
cltd
cs
mov
mov
xchg
xor
adc
popa
mov
mov
xchg
rcll
shl
js
inc
xchg
add
mov
das
cmp
gs
jl
mov
ret
mov
dec
add
mov
cli
xchg
sbb
mov
sbb
loopne
lahf
pop
jmp
inc
popa
mov
mov
xlat
scas
ds
roll
out
xchg
inc
and
cmpsl
jnp
loopne
push
arpl
in
fwait
cmp
pushf
add
gs
xchg
jp
punpcklbw
addr16
and
ds
fcomi
sbb
ret
cs
out
test
and
in
jmp
and
cmpsl
pop
and
mov
adc
aaa
sbb
cmp
xchg
dec
sbb
add
lock
sub
adc
push
push
or
adc
mov
jns
sbbl
aas
outsb
lret
sbb
dec
mov
mov
xchg
xchg
ss
loope
or
mov
adc
fldt
nop
imul
jae
mov
sub
or
lds
xor
jns
push
cs
ret
xor
into
pop
cs
subl
fs
jge
xchg
sbb
pop
faddl
pusha
imulb
mov
ja
and
inc
loope
sub
subl
jge
dec
shrb
inc
or
mov
jle
mov
push
int
push
repz
dec
sub
mov
loop
lods
hlt
or
pop
push
adc
ret
hlt
sarb
cltd
sbb
stos
inc
into
les
ret
sbb
scas
adc
stc
pop
out
adc
and
xchg
ficoml
xchg
add
jb
shlb
shll
cwtl
mov
mov
sub
pop
dec
mov
jne
mov
and
pop
sub
xor
loop
call
adc
jp
sub
inc
sub
jmp
std
jle
mov
push
mov
stc
inc
pop
call
xchg
lea
push
push
add
mov
adc
data16
pop
aam
mov
add
fstpl
flds
pushf
pusha
add
cmp
inc
jnp
push
daa
mov
adc
push
daa
pop
in
mov
inc
xchg
xchg
ljmp
lret
xor
int
push
xor
inc
mov
test
adc
punpckhwd
cmc
jmp
sahf
cmp
test
in
inc
jae
jecxz
pop
push
and
add
inc
imul
xor
dec
adc
cwtl
in
jmp
or
insl
mull
inc
movsb
jmp
loope
adc
das
push
rorl
adc
test
mov
and
add
stc
xorl
pop
mov
scas
in
pop
jl
dec
xlat
cmp
dec
pop
jnp
push
mov
shll
outsl
fwait
pop
sbb
je
push
stc
xchg
xor
and
cmc
push
mov
add
cmpsb
mov
ljmp
and
fisubrs
icebp
dec
add
cld
jno
dec
sub
cmp
gs
lahf
adc
addl
test
loop
pop
dec
mov
aam
js
add
hlt
testl
push
loope
arpl
les
outsl
cmp
push
cmpsl
adc
lcall
pop
add
sub
test
cmp
repnz
cmp
cmp
insl
orb
lret
jge
jae
cmp
pop
ss
mov
inc
orl
sub
cmp
sub
imulb
ja
add
dec
jne
mov
inc
mov
push
xchg
pusha
outsl
insb
mov
mov
roll
insb
mov
push
jbe
push
mov
cmp
mov
pusha
sti
sub
dec
ret
sub
fists
inc
jg
mov
stos
arpl
xor
ret
sub
or
jne
mov
cmp
fimull
out
lret
lahf
fadd
in
sbb
jnp
xchg
sub
in
ret
stos
mov
addr16
push
aaa
lcall
xchg
or
movsl
or
push
hlt
mov
rclb
add
cltd
movsb
dec
pop
push
sbb
out
jle
sub
imul
dec
push
pop
add
mov
into
ja
sub
sahf
test
dec
lods
nop
test
inc
cmc
push
cmc
daa
rcrl
or
aam
loop
sbb
es
mov
les
dec
jge
mov
js
pop
mov
xor
cmp
push
mov
fs
stos
mov
dec
sbb
test
arpl
cmc
push
mul
in
dec
adc
daa
sub
das
movsl
cltd
push
aaa
insb
mov
push
test
cmpl
imul
cmp
cmp
xorl
les
es
jne
sub
out
xor
inc
das
mov
sub
adc
fcoms
ljmp
or
test
cmpsb
scas
jne
xchg
std
mov
push
ss
sub
push
imul
adc
xchg
fistpl
lret
insl
mov
repz
jo
cmc
and
inc
cld
repz
outsb
test
xchg
inc
mov
xor
subl
shll
mov
push
sub
inc
or
aaa
jecxz
pop
and
shlb
dec
ljmp
ret
rorl
adc
xor
pop
jb
mov
bound
fldt
faddl
push
sub
cmpsb
add
sub
adc
insl
jb
cmp
mov
xor
dec
inc
xor
mov
mov
sarl
adc
inc
js
inc
or
or
jp
push
repz
bound
cmp
fmuls
cmc
leave
lds
mov
clc
adc
fistpl
scas
clc
insb
mov
movsb
cmp
fsub
cmp
into
mov
outsb
jns
mov
push
into
test
lea
stos
fcompl
outsb
ljmp
xchg
test
xor
das
out
add
and
pushf
pop
and
scas
mov
ficoms
mov
cwtl
add
mov
insl
ret
out
addr16
pop
push
shlb
insb
or
das
loopne
dec
lcall
mov
push
jmp
sahf
and
nop
stos
flds
js
std
sub
cmc
adc
out
mov
cld
cmp
cmp
adc
cmc
and
jmp
push
lock
xchg
push
ret
jae
repnz
pusha
jle
cmp
lret
sbb
xor
fdivs
outsl
xor
stos
inc
mov
push
fsubs
mov
shlb
mov
push
decl
cmp
lods
aaa
sbb
xor
lahf
aad
cmp
or
insb
ljmp
sbb
cmpsl
push
out
rclb
outsb
mul
fwait
sub
cmpsl
adc
xor
mov
xchg
mov
lods
jb
lds
dec
imul
cwtl
lea
add
mov
shll
xor
sbb
fmull
dec
sbb
xchg
cs
idiv
xchg
and
pop
mov
adc
insl
add
pop
sbb
scas
lret
mov
jp
or
fwait
and
daa
shrl
mov
call
mulb
sbb
cwtl
sbb
cmp
mov
sti
stos
pop
scas
data16
lods
mov
mov
iret
shr
iret
pop
mov
imull
mov
mov
and
inc
and
pop
adcl
in
xchg
mov
js
aaa
sbb
push
aaa
lcall
shll
mov
cmp
jecxz
add
mov
les
mov
mov
cltd
sahf
add
mov
dec
lods
test
mov
and
idivl
xchg
jb
jp,pn
mov
pop
mov
push
push
cld
jl
inc
ret
scas
push
or
sub
movsl
adc
push
cltd
mov
lea
xchg
lret
xchg
aad
mov
push
add
jbe
xchg
mov
xor
int
roll
imul
shrl
adc
cmp
sarl
fadds
push
xchg
cmc
and
xchg
and
adc
lret
clc
push
pop
or
call
add
movsb
mov
dec
fs
jge
insl
cwtl
addr16
int
lea
repnz
cwtl
ret
into
and
inc
jne
jle
imul
mov
pop
xchg
adcl
cltd
movb
cmp
jg
xchg
pop
or
mov
sub
and
lea
cwtl
xchg
inc
add
stos
les
repz
mov
add
lret
xor
add
xchg
es
ret
cli
iret
pop
cmpsl
xchg
ja
sub
adc
mov
inc
lahf
popf
jg
les
jg
jnp
sbb
in
push
mov
mov
outsb
mov
lods
xchg
xlat
adc
in
mov
call
cmpsb
add
cli
pop
inc
pop
mov
rcrl
inc
xor
mov
xchg
jle
push
sahf
and
xchg
pop
int
out
pop
pop
je
add
hlt
call
and
neg
and
rcr
push
cmpsb
or
out
out
dec
rol
out
sbb
and
mov
jl
les
lret
in
jo
jmp
out
dec
sub
and
decb
out
cmpsl
xchg
dec
cmp
cli
cmp
xlat
and
iret
push
pusha
push
fbld
ljmp
lds
test
lock
inc
adc
cld
and
push
and
jmp
scas
pop
pop
push
mov
cltd
pusha
xor
sbb
fwait
and
std
sbb
inc
add
std
es
cld
jmp
adc
mov
lods
enter
sub
inc
arpl
ja
mov
push
dec
push
add
gs
push
mov
test
pop
pop
outsl
pop
ficomps
pop
fs
subl
fwait
cmp
mov
sti
cmp
mov
lret
or
cld
sbb
aas
sbb
jne
cmpsb
sbb
test
into
fstpl
repnz
rcr
pushf
pop
jmp
das
pop
negb
xchg
adc
fwait
and
fwait
movsb
sbb
push
xchg
jmp
mov
or
bound
cmpsb
test
pop
fwait
or
push
inc
test
mov
sti
or
movsl
sti
nop
int
add
mov
jg
pop
cmpl
inc
test
sbb
insl
lods
int
sbb
sti
cmp
xor
stc
or
iret
sbb
das
fsubs
aad
and
dec
lea
xor
jmp
cld
mov
jnp
shrl
fmuls
add
or
je
fdivrs
scas
or
mov
shl
ljmp
xor
inc
in
cli
or
xchg
std
jns
test
jmp
adc
mov
bound
adc
mov
repnz
fisttpl
scas
xchg
insb
xchg
outsl
xchg
js
dec
mov
push
jmp
jge
test
xchg
sbb
lods
aam
dec
data16
xlat
imul
dec
mov
ftst
inc
pop
jns
dec
jg
pop
sbb
cwtl
push
int
fldcw
jae
ja
pop
in
jns
push
cmpsb
leave
adc
and
xor
in
xchg
lret
lock
xchg
frstor
pusha
xchg
ss
mov
in
fadds
bound
in
cmp
insb
enter
lcall
fadds
and
push
sub
stos
jae
jns
aas
repnz
lret
mov
outsb
lret
jmp
xchg
outsb
test
mov
or
and
int
dec
jae
repnz
stos
ljmp
imul
dec
add
stos
bnd
fs
jmp
mov
gs
stc
mov
clc
push
in
and
out
add
or
push
xor
lret
push
sub
pop
dec
push
xor
xchg
xor
loope
or
daa
mov
xor
sub
out
cmp
fstpt
fnstenv
mov
insb
mov
sub
leave
mov
loop
adc
mov
pop
cld
or
imul
imul
repz
xlat
in
popf
mov
mov
ss
jmp
jecxz
pop
enter
hlt
adcb
inc
sub
dec
insb
aaa
lock
cmpsb
adc
popa
sbb
std
sub
sbb
int3
cli
cmp
pushf
xchg
and
ret
fisttpl
imul
cmp
ss
mov
pop
jb
jo
in
sbb
xor
ljmp
xor
jge
adc
arpl
cs
icebp
insb
mov
xchg
push
sbb
pop
mov
and
cld
push
nop
push
fwait
jmp
subb
int
mov
aaa
cmp
lret
adc
lcall
lret
lods
mov
cmpsb
jo
insl
rdtsc
sbb
lods
push
sub
and
add
fisttpl
adc
jae
jp
sbbb
push
loopne
xlat
mov
ss
enter
outsl
repz
mov
ret
imul
mov
movsb
andb
bound
test
mov
dec
add
add
andb
adc
cli
add
stc
fs
aaa
mov
rcll
pop
inc
mov
dec
xchg
jae
fisubrs
jg
fcmovnu
xor
jno
fsubrs
pop
sbb
lock
mov
cmp
hlt
gs
arpl
mov
ficoms
loope
jns,pn
and
lahf
add
sbb
cmc
call
mov
mov
xchg
mov
lcall
jne
cmp
pop
in
aam
stc
mov
testl
push
mov
stos
imul
jae
pop
rorl
fistps
sbb
mov
add
pop
xlat
mov
xor
data16
push
popa
jne
pop
lret
shrb
add
push
hlt
cltd
jge
cmp
ja
ret
cmp
jmp
xchg
mov
int
fiadds
ss
add
or
flds
pop
or
or
mov
rol
mov
fisubrl
enter
mov
not
adc
push
stc
push
mov
fstl
jae
popf
jg
push
pop
mov
or
jne
push
jle
ja
add
cmp
pop
in
lahf
ja
adc
loope
sub
jne
call
fistps
jmp
out
repz
loope
lds
and
repz
cmpsl
mov
xor
mov
out
inc
push
pop
mov
adc
lahf
ret
push
dec
sbb
stc
dec
xchg
and
jns
cmc
cmpsl
ja
pop
aaa
ret
out
xchg
jge
inc
mov
mov
mov
aas
test
mov
mov
mov
sahf
xor
aad
sub
pushf
dec
inc
xor
adc
sysret
push
jge
adc
daa
outsl
adc
cmp
jne
jnp
out
stos
scas
jb
sbb
adc
das
pushw
push
out
dec
stc
rcrl
jle
inc
mov
addl
sub
lds
or
shlb
movsl
mov
imul
jbe
inc
rorb
jle
jb
ficoml
in
loopne
xor
sub
xor
xchg
add
or
clc
sub
leave
scas
add
popf
push
ja
mov
inc
sahf
jae
and
stos
push
adc
in
adc
mov
and
dec
sub
fcomi
add
rcrb
lahf
or
fcmovbe
fists
loopne
sbb
cmp
in
mov
out
xor
stos
das
jle
pop
inc
jae
dec
mov
inc
lret
fists
jo
cmpsl
imul
push
adc
fnsaves
add
cs
lretw
std
jp
mov
test
jp
negl
jmp
pop
testb
xchg
lahf
jmp
sbb
leave
or
mov
xchg
and
hlt
hlt
je
xor
xchg
mov
pop
lock
lret
push
xor
pop
inc
in
scas
xorl
subl
jbe
mov
sbb
jl
jmp
ret
ja
sti
mov
fcmovu
mov
mov
hlt
cmc
notb
lea
dec
imul
stos
fmul
xchg
push
push
je
xor
cmc
test
jg
jmp
xor
fs
das
mov
jmp
lods
mov
dec
sub
inc
fucomip
mov
inc
iret
pop
fstpt
iret
pop
adc
xchg
js
mov
sbb
movsl
lret
mov
mov
pop
frstor
jle
int
dec
dec
call
mov
je
ljmp
repnz
fimull
jp
xor
push
movl
xchg
or
sbb
cltd
cltd
sub
jo
in
push
inc
inc
clc
addr16
jnp
push
jns
xchg
push
leave
push
movsb
add
adc
notb
hlt
inc
rolb
aam
sbb
stos
or
fs
jns
hlt
mov
aad
fdivr
orb
mov
shll
andb
inc
sub
popf
mov
shl
jns
lahf
pop
pop
mov
in
dec
xchg
or
daa
shl
mov
xchg
xor
lret
cmp
fcomp
mov
leave
mov
push
mov
cs
xchg
add
ss
sub
test
sbb
shll
mov
pop
cmpsl
mov
bound
nop
or
push
and
inc
xchg
ds
jl
add
imul
lret
cmp
fnstenv
add
mov
or
mov
mov
or
shrb
add
leave
repz
xchg
lods
sbb
cli
sar
es
popa
scas
insl
sbb
sbb
pop
lret
cmp
std
xchg
jg
dec
or
jge
sbb
pop
cmc
arpl
test
lcall
add
rorb
in
adc
shrl
xchg
jns
pop
jns
call
mov
xor
inc
lds
push
jbe
sarb
loop
int3
shr
push
js
adc
cmp
rolb
add
ljmp
adc
idiv
and
pusha
nop
inc
rcr
mov
and
fs
cmp
push
mov
pop
push
add
inc
dec
sbb
sbb
test
inc
cmp
into
pop
ret
xor
into
lods
dec
mov
mov
pop
aaa
imul
arpl
push
push
call
xor
mov
fs
sub
jg
addl
lret
push
sbb
adc
ret
jbe
push
inc
pop
add
out
adc
dec
daa
sbb
jl
dec
or
addl
insl
ja
mov
jge
sbb
in
or
jp
push
push
adcb
vmload
xor
js
and
ja
fsub
movsb
fdivl
mov
lea
call
pop
je
or
lock
hlt
mov
in
and
iret
inc
arpl
jnp
sub
popf
aad
mov
jbe
ljmp
cli
sbb
jge
stc
and
dec
lea
sbb
ljmp
or
push
xlat
ja
enter
cmp
and
and
aam
sub
push
data16
push
in
call
aaa
jp
cmp
fimuls
sub
fwait
xchg
out
testb
fstp
mov
es
cmp
or
xor
loope
sbb
pop
push
mov
js
movsb
std
sbb
mov
mov
icebp
lahf
sub
shrd
add
in
dec
pop
add
fmuls
imul
cmp
inc
shrl
lret
in
push
das
pop
and
addr16
and
pop
ljmp
enter
push
test
add
fstl
sbb
mov
mov
lock
fld1
push
push
pop
dec
mov
or
in
push
cmp
in
adc
xchg
xor
aas
fimuls
and
popa
or
mov
cwtl
cmpb
push
sub
cmp
fcoml
or
ds
inc
and
xor
leave
push
addr16
jge
push
sbb
rclb
mov
dec
cmp
jle
fsubrl
ds
stc
mov
jo
adc
cmp
aas
jae
ljmp
cmp
dec
lock
xor
pop
and
es
and
pop
jbe
test
xor
pop
stc
outsb
cmpsl
popf
not
scas
fcmovb
stc
pop
inc
lods
int3
add
mov
imul
fbstp
sti
arpl
lret
push
sub
xor
mov
shrl
cmp
sub
or
or
adc
mov
mov
jle
mov
pop
out
or
dec
cmp
insb
lcall
adc
cmpsl
jg
cmc
sti
push
cmp
subb
and
loopne
cli
sub
cmpsl
pop
sub
shll
insl
mov
mov
int
push
add
sbb
push
cmp
dec
jp
mov
mov
xor
lea
test
pop
xor
fdivl
fdivrs
xchg
enter
and
orl
add
mov
adc
jle
cmp
mulb
jle
loope
popf
data16
loope
leave
fmull
pop
in
adc
pop
imul
adc
mov
into
das
xchg
insb
mov
mov
iret
push
aas
test
xor
ret
push
or
cmp
push
mov
fs
test
xchg
sbb
shr
push
icebp
push
jb
xor
int
push
mov
jns
push
lret
dec
ret
mov
push
ja
outsl
cmp
mov
test
loope
jne
xor
xchg
push
push
and
cmp
pusha
insb
iret
jne
xchg
or
xchg
mov
jecxz
icebp
sahf
inc
sti
mov
xor
leave
dec
popf
adc
and
push
dec
loopne
push
cmp
stos
pop
ljmp
insl
xchg
cld
sub
jecxz
cmpsb
sbb
mov
stc
cmp
xor
jmp
fmull
cmp
popa
cltd
fidivrl
aaa
xor
xchg
sub
test
jmp
out
lds
sbb
inc
push
mov
stos
jae
gs
pushf
popa
loope
add
ret
push
inc
push
mov
pop
out
outsl
push
inc
mov
sub
lock
pusha
or
mov
fiaddl
popf
stos
push
ss
xchg
outsl
es
shr
cmp
or
leave
pop
mov
dec
push
cmpsb
jmp
lcall
sub
and
add
aas
outsb
jmp
sbb
cmp
and
aad
mov
xchg
mov
mov
and
push
jbe
aad
pusha
in
cmp
js
adc
mov
push
mov
inc
xchg
mov
push
push
cmc
jns
sarb
scas
dec
and
movsb
or
adc
pop
xchg
in
and
ss
test
jno
jl
in
in
inc
test
mov
sub
lcall
inc
repnz
jnp
bound
push
insl
rol
or
rcrl
fisttps
cli
stos
cli
aam
into
pop
push
insl
test
mov
jmp
cmp
cmp
adcl
int3
sub
out
and
xor
ds
push
arpl
ds
call
mov
adc
and
frstor
call
pushl
cmp
add
rorl
inc
ljmp
jle
jno
repnz
cmpsb
les
xor
iret
test
iret
and
nop
jns
out
mov
in
test
test
add
pop
sbb
stos
aaa
fwait
sub
insl
push
push
dec
and
insb
js
xlat
into
add
addr16
repz
inc
ficoml
xchg
scas
adc
roll
mov
ja
jge
or
sub
rcrl
gs
movsl
loope
adc
mov
sbb
lret
dec
mov
adc
ret
pop
daa
mov
sti
or
mov
fnstcw
push
push
dec
rclb
incl
dec
scas
sarl
ja
dec
jge
dec
xchg
and
out
dec
mov
clc
jl
popa
jnp
rorb
adc
add
and
mov
mov
pop
push
dec
mov
cmc
ret
dec
in
mov
xchg
jle
lock
pop
jg
inc
icebp
out
stos
leave
sub
jnp
pop
adc
lock
jmp
xor
jns
loope
inc
repnz
cmp
mov
pop
sahf
adc
repnz
or
je
pop
push
enter
inc
xor
stos
pushf
pop
inc
enter
in
sahf
mov
push
sbb
sbb
sbb
mov
adc
jbe
xlat
push
add
cmp
stos
fs
sbb
push
loop
scas
xor
test
pushl
jns
xchg
dec
sti
leave
rol
adc
add
imul
jno
adcl
dec
lock
mov
pop
cmpsb
sub
push
adc
pop
in
mov
loope
stos
mov
das
push
test
xor
cmovo
mov
imul
mov
pop
inc
aam
dec
inc
mov
inc
cmpsb
xchg
cli
cs
mov
and
adc
negb
adc
pop
mov
imul
mov
repz
test
sbb
mov
xor
cmp
mov
push
imul
sub
mov
subb
mov
int
ficoml
mov
lcall
dec
sbb
pop
push
aad
fisubs
out
mul
daa
rcr
out
mov
mov
movsl
xchg
xor
dec
jmp
xor
dec
or
adc
add
pop
jae
sbb
test
lock
clc
sub
sar
ds
repz
inc
and
mov
mov
adc
cld
mov
fmuls
popf
int3
lods
pop
adc
sub
jnp
inc
imull
sub
ficoml
movsb
mov
je
pushf
sbb
andb
daa
pop
loop
adc
std
fadd
mov
lea
fisttpll
or
icebp
dec
mov
inc
sub
dec
sbb
mov
nop
jns
ffree
jl
and
lret
test
adc
adc
xchg
mov
inc
test
test
test
pop
sti
and
or
or
test
push
mov
mov
mov
dec
fmull
mov
fdivrs
add
cltd
jns
xor
test
pushw
lcall
in
sbb
sub
inc
inc
jbe
movsb
dec
lcall
mov
add
nop
outsb
mov
mov
jl
or
test
push
call
xchg
or
dec
mov
out
jecxz
fcmove
fcomps
dec
mov
mov
cmpsl
mov
test
outsl
mulb
jg
and
xchg
sub
jl
je
fnstenv
push
mov
push
push
jge
jns
dec
mov
dec
jmp
cmp
mov
stc
pop
enter
or
imul
fldl
inc
lods
and
ds
xchg
jl
sub
adc
adc
push
fadd
add
mov
add
pop
dec
andb
mov
hlt
ss
push
fs
insl
imul
mov
mov
lods
int3
mov
pop
in
cltd
jae
lods
lods
adc
and
scas
xchg
jle
pop
test
dec
ret
adc
mov
mov
fldt
in
jmp
ret
add
inc
test
nop
fstps
mulb
data16
testl
xchg
sub
repnz
cld
out
jnp
movsl
leave
test
lahf
ljmp
xlat
data16
out
sub
call
iret
jg
sbb
cmp
lret
mov
sub
mov
xor
fiaddl
pcmpeqb
mov
aaa
cmp
mov
testb
cmp
xor
ret
movsb
lahf
ljmp
movsl
mov
sahf
push
test
sbb
jg
jo
sub
jecxz
jmp
sti
leave
xor
sbb
outsl
jbe
pop
push
pop
cld
sti
sbb
mov
push
test
mov
cmpsl
inc
insb
mov
jmp
xchg
mov
lcall
sbb
push
insl
and
adc
je
fstl
fnsave
lods
sahf
outsb
sub
shll
ficoms
dec
or
push
aas
xchg
xchg
push
dec
cmp
arpl
fisubrs
ret
mov
sbb
jne
jnp
cmpb
ret
xchg
mov
sub
bound
sbb
repz
je
sub
ljmp
out
sbb
negl
push
dec
inc
in
fiadds
jecxz
es
cmp
inc
mov
jecxz
lcall
jns
imul
pop
jge
jno
xchg
fidivrl
fwait
push
jns
out
jnp
push
sbbl
mov
pop
jns
jecxz
pop
loopne
cld
pushl
add
xchg
les
cli
outsb
jge
clc
and
sbb
sub
subl
jae
aaa
test
int3
push
movsb
pushf
push
aaa
xchg
inc
mov
cmp
jo
mov
fwait
out
push
in
leave
or
cli
fs
push
rcr
pextrw
mov
jl
lds
sbb
add
push
xor
dec
ja
push
cmp
mov
or
sbb
nop
and
idivl
mov
nop
and
sub
pop
push
inc
mov
mov
pop
push
out
mov
inc
js
jge
add
test
aaa
loopne
fcoml
push
imul
mov
popa
xchg
mov
push
rclb
adc
or
repz
addb
out
aas
xor
scas
add
push
test
mov
mov
xchg
loope
addr16
or
repnz
or
cs
push
sbb
test
clc
shrb
xchg
fs
repnz
and
mov
popf
sahf
cmp
test
mov
mov
jl
enter
andl
ja
and
jmp
jnp
test
jno
jge
sbb
xor
pop
or
outsl
mov
nop
jp
sbb
xchg
xchg
gs
mov
arpl
add
movsb
adc
fldcw
lcall
leave
ud2
xor
lods
addr16
outsl
repnz
xor
aam
sub
sarb
pop
pop
addr16
ljmp
shl
mov
pop
or
xchg
add
fcom
push
rol
pop
ficoms
aas
add
mov
sub
inc
or
loopne
push
movsb
dec
cmp
ljmp
push
decb
sub
cld
js
jp
hlt
mov
xchg
push
adc
fnstenv
cmp
insb
jl
xorb
std
mov
test
stc
pop
cli
push
and
sub
enter
lock
loopne
inc
out
rcll
jo
mov
loope
mov
fstpt
lahf
movsb
fwait
dec
ljmp
lea
fsubr
scas
fwait
lds
cmp
mov
loop
sbbl
nop
xchg
sahf
movsl
cmp
cmp
pop
iret
fsubrl
inc
xchg
mov
jge
xorb
sub
imul
mov
popa
mov
icebp
mov
mov
pop
cli
add
jmp
inc
hlt
pop
mov
cmp
ds
mov
xchg
jo
inc
jp
shll
stc
jp
jo
clc
inc
and
mov
inc
stos
enter
xor
test
mov
mov
popf
movb
enter
lret
notl
xchg
pop
popa
inc
in
jmp
sti
bound
lods
ja
sub
inc
sahf
mov
gs
xchg
ja
mov
push
arpl
into
lcall
xor
xor
mov
mov
fldenv
lret
cwtl
pop
mov
fistpll
dec
push
mov
cli
rcll
loop
in
pop
imul
push
cmp
inc
dec
pushl
rolb
or
testb
dec
jge
daa
les
pushf
jne
or
insl
jb
ret
adc
ret
cltd
insb
sbb
insl
jns
pop
mov
movl
sbb
movb
scas
mov
xor
add
lcall
dec
rcr
xchg
stos
jnp
sub
stos
insl
aas
dec
xor
sbb
push
dec
flds
imul
iret
lret
ljmp
xchg
ljmp
dec
sub
jg
cmp
mov
pop
lret
push
mov
invd
sahf
add
mov
sbb
std
cmpsl
nop
cmp
adc
push
sarl
jns
push
xlat
sub
add
aad
dec
or
jmp
jl
loopne
cmp
nop
push
cmc
and
pop
stos
fcmove
pop
mov
mov
mov
fwait
xor
int
add
pop
sub
jecxz
sarl
ret
mov
push
dec
adc
js
fdivr
fsubl
lret
cmp
xchg
subb
push
mov
enter
iret
lret
out
push
mov
cmp
push
test
sbb
push
mov
or
add
cwtl
std
pop
das
mov
jle
aad
mov
or
mov
lcall
xchg
mov
dec
jl
ds
add
dec
adc
insl
int3
popf
es
cmp
out
divb
iret
jle
jae
and
add
dec
sar
add
outsl
cltd
in
repnz
dec
and
iret
sti
fdivs
mov
enter
arpl
pop
fnstsw
incl
lret
jp
pop
ss
jmp
shlb
lock
dec
mov
cmp
sub
mov
int
adc
cli
inc
push
dec
and
mov
mov
push
mov
movsb
xor
leave
push
lods
mov
jae
data16
loope
pushf
inc
and
push
mov
mov
inc
insb
call
cmp
lret
or
fdivp
popf
dec
xchg
ja
inc
xchg
shlb
mov
jno
in
sub
xchg
dec
inc
aas
aad
ret
mov
mov
test
adc
out
int
insl
js
push
enter
test
ficompl
add
das
add
fimull
es
lret
inc
clc
lea
xchg
jbe
jbe
aad
sub
sti
lds
mov
repnz
test
mov
scas
sub
xchg
dec
jo
sahf
or
icebp
jo
mov
data16
xor
mov
sbb
pop
or
sbb
adc
pop
xor
and
rcr
ljmp
enter
dec
dec
rcll
push
mov
jmp
in
and
inc
sub
test
std
xor
push
sbb
push
mov
outsl
inc
adc
sti
jnp
enter
out
mov
xor
pop
xchg
nop
and
mov
fbld
stos
mov
mov
push
mov
inc
pop
and
lret
cmp
in
lods
or
out
mov
sub
inc
insl
dec
fstpt
les
pop
inc
pop
cmp
mov
mov
cmp
leave
mov
mov
and
xor
mov
je
lea
inc
sbb
inc
pop
cmc
les
inc
nop
daa
scas
mov
repz
fs
pop
cmp
or
andb
test
aam
test
mov
shlb
jmp
enter
lods
outsb
lods
xor
out
and
jl
add
xchg
xor
xor
and
mov
jle
stos
push
les
mov
popa
loopne
or
mov
jbe
xchg
pop
pop
adc
sub
cmpsl
out
sahf
jmp
push
lahf
das
inc
fsubrl
jl
add
arpl
cmp
sub
push
repnz
test
or
loopne
push
sub
mov
shrl
mov
leave
adc
pop
dec
or
push
sti
dec
clc
push
shr
dec
cwtl
es
cmp
ja
addr16
fsubrp
add
pop
in
ficoms
lret
cld
lret
pusha
mov
fsubrs
inc
push
scas
add
jge
push
sar
xchg
sub
xchg
mov
fbld
or
repnz
ja
jmp
adc
sbb
mov
stos
idivb
aad
lret
pop
pop
pushf
xorb
pop
aad
push
cmpsb
in
mov
call
xchg
cwtl
mov
sbb
clc
xchg
pop
lcall
sbb
mov
jne
andb
aaa
xor
mov
or
mov
ds
sub
shll
repnz
mov
lea
or
add
push
int
aam
cmp
aad
mov
sbb
sub
lods
addl
jne
cmpsl
es
das
push
ja
xchg
icebp
push
dec
mov
shlb
fwait
dec
out
xor
std
fisttpl
pop
loop
outsb
xor
stos
jne
xor
loope
ds
sub
xchg
daa
add
push
jb
xchg
pop
ja
adc
lock
je
out
or
call
imul
dec
xlat
loopne
push
addb
jns
out
sbb
sbbb
push
cld
stos
das
insb
mov
out
jg
rol
cmp
shll
or
js
adcb
cltd
mov
outsb
sub
push
xor
mov
jp
repnz
cmp
cltd
xor
pop
in
aad
sub
pop
cltd
jmp
mov
adcl
daa
dec
test
mov
loope
out
or
movl
daa
repz
cmp
adc
sbb
fdivl
hlt
lods
and
mov
sbb
dec
cmp
repnz
push
push
pushf
dec
rclb
xchg
push
push
push
decb
sub
test
inc
xor
sub
cmp
sbb
cmpsb
pop
jns
notb
mov
fwait
enter
push
push
sbb
dec
jg
dec
bound
icebp
xor
pop
inc
ja
mov
and
rcrl
packssdw
std
mov
adc
insb
push
xchg
inc
xor
fisubrs
arpl
je
aad
lahf
mov
je
sub
add
cli
lods
cld
jno
sub
nop
mov
adc
in
inc
push
push
aad
bound
enter
sub
aas
pop
iret
mov
enter
je
cltd
test
dec
mov
shll
adc
insb
jo
jl
pop
or
bound
mov
ja
mov
pop
cmp
xor
lret
xor
addr16
inc
adc
and
lahf
repz
dec
jl
jge
pop
mov
mov
addr16
jnp
xchg
xchg
arpl
jg
mov
sub
test
mov
and
ds
sbb
addr16
push
repz
jmp
inc
lret
in
jl
gs
inc
add
push
bound
into
sub
inc
mov
jnp
outsb
adc
push
add
ljmp
push
push
in
xor
jae
adc
inc
popa
inc
jle
sbb
ret
inc
test
bound
mov
mov
xchg
sub
call
cmp
rol
pusha
lock
lock
cmp
push
shlb
mov
sub
sbb
dec
mov
fs
adc
faddp
xor
push
bound
push
or
gs
mov
pop
fistpll
shlb
mov
mov
or
sbb
sbb
pop
out
jae
icebp
mov
mov
popf
rolb
fisubs
ror
push
out
dec
gs
cwtl
push
popa
mov
clc
cmpsb
cmp
jge
push
cmp
mov
negl
int3
pop
scas
mov
dec
inc
insb
push
push
push
inc
int3
addr16
push
mov
xchg
xchg
lods
psubusb
sbb
cmp
stos
fildl
add
addr16
mov
dec
sar
fnstcw
jg
pop
mov
rcr
pop
mov
and
pushf
lds
test
jg
and
fisttpl
mov
add
xchg
out
cltd
mov
add
mov
add
arpl
and
cmc
xchg
dec
lds
dec
cmp
imul
cltd
fsubs
flds
push
pop
stc
mov
hlt
imulb
orl
imul
movsb
add
adc
adc
outsb
mov
adc
pop
jle
jnp
xchg
push
push
jno
sbb
xor
sub
push
sbb
cld
mov
loopne
repnz
and
add
push
int
fisttpll
insl
fdivs
sbb
mov
clc
lcall
dec
lods
add
mov
sbb
popf
ljmp
enter
bound
ja
jg
ja
push
cli
in
and
out
pop
movsb
or
jecxz
stos
mov
adc
add
xor
out
dec
jle
scas
adc
mov
loopne
jb
mov
fs
jle
addl
mov
dec
xor
adc
dec
sbb
inc
sub
xchg
adc
xor
int3
mov
stos
xor
dec
or
jmp
jecxz
in
aam
popa
push
lods
mov
div
subl
cmpsl
test
repz
cmp
mov
inc
cmpsb
jl
cmp
mov
test
add
popa
push
xor
pop
fistpl
and
call
hlt
test
out
add
mov
nop
hlt
jb
push
cmp
dec
cmp
xor
mov
bound
cmp
jl
aad
pushf
sahf
insl
inc
cs
dec
sub
test
mov
adc
pop
cmp
fsubr
mov
fstps
clc
and
dec
inc
mov
aas
in
fcompl
enter
dec
dec
fstl
push
jg
movsl
fisubs
mov
fmuls
aam
mov
mov
movsb
cs
jns
movsb
mov
mov
sub
leave
adc
aam
cmp
dec
inc
mov
rcr
xor
or
mov
aam
cld
mov
and
pop
sub
push
outsl
aaa
fcmovnbe
jno
push
in
mov
loope
dec
sbb
or
mov
pop
insb
icebp
adc
out
push
fcoms
lods
loop
aas
cmpsl
pushf
jbe
nop
sarb
dec
ss
add
in
and
xchg
xor
data16
xchg
pop
lods
push
sbb
add
cmp
nop
inc
lcall
shll
add
stc
loop
sbb
jb
sub
clc
fnsave
outsb
xor
push
movswl
jno
pop
repz
and
addr16
lods
cltd
lcall
sbb
cmpsb
in
pop
imul
cmc
daa
add
mov
std
push
mov
loope
push
je
push
or
push
and
stos
add
jno
out
xor
pop
jo
cmp
mov
or
xor
adcb
and
jnp
inc
fldl
push
icebp
or
je
fcomps
xor
push
jp
repz
inc
or
inc
ja
roll
bound
je
out
or
mov
inc
mov
call
dec
sbbl
cmpsl
lcall
sarl
add
stos
daa
or
cltd
nop
pop
push
sarl
aaa
push
xchg
or
xchg
mov
addr16
je
test
mov
pop
ret
xor
and
xchg
imul
sbbb
icebp
inc
insl
cmpsl
inc
loop
jns
test
cs
es
sbb
pop
imul
push
lcall
dec
adc
sub
mov
shlb
fnsave
clc
jmp
out
sub
das
adc
and
cmp
stc
ret
jg
lods
adc
inc
fs
sub
sub
in
and
gs
push
cwtl
test
cmpsl
lds
bound
mov
jl
in
sub
roll
lahf
loope
int
dec
mov
mov
shrb
sbb
nop
rcll
daa
lret
iret
xchg
mov
das
mov
stos
insb
mov
push
or
enter
mov
push
pusha
add
clc
subb
pop
mov
push
mov
xchg
subb
pop
popa
inc
cmpsb
inc
adc
movsl
push
jmp
es
mov
out
gs
xor
lock
xor
js
xor
mov
mov
mull
or
mov
imul
shr
fistps
lret
inc
mov
je
out
addr16
test
push
nop
insb
mov
test
xchg
data16
out
scas
out
shrw
in
mov
loop
add
pop
mov
lods
test
mov
adc
jo
movl
jo
and
popf
xchg
sbb
mov
adc
xchg
lcall
push
lds
mov
mov
jne
push
daa
loop
jle
ds
adc
ret
in
cmpsb
adc
fnstenv
jnp
xchg
imul
push
push
pop
xchg
or
scas
or
mov
xchg
fldl
aad
dec
mov
sub
xchg
xchg
and
ds
fsts
xchg
pop
pop
lcall
pop
or
mov
sbb
pminsw
gs
cs
aas
cld
or
cmp
cmpsb
stc
insl
addb
jmp
pop
fimull
test
fisubs
push
movsl
loop
in
mov
push
arpl
cwtl
sbb
std
mov
subl
xor
in
xor
mov
orb
popf
ljmp
cltd
fdivrs
xlat
dec
add
sbb
adc
or
adc
xchg
cmp
pushf
lahf
std
cmp
cld
push
in
sbb
dec
pop
push
jo
mov
jmp
shr
fwait
dec
cmp
leave
jge
sbb
or
or
jle
iret
repz
xor
sbb
orl
xchg
test
testb
xorb
or
and
out
cwtl
cmp
nop
xchg
xor
in
cs
xlat
and
dec
jns
les
push
and
cmp
sub
mov
inc
jle
movsb
or
scas
mov
fs
jb
inc
movsl
push
or
inc
into
aaa
push
call
mov
mov
xadd
loope
inc
dec
dec
mov
not
in
lods
mov
fnsave
in
or
je
jno
ljmp
gs
ds
dec
xor
add
lahf
xchg
and
or
or
ret
in
std
mov
adc
mov
xchg
jb
js
andb
cs
cmp
outsb
dec
mov
jg
addr16
sbb
in
fdivs
ljmp
cli
mov
jmp
inc
call
push
adc
and
mov
jl
add
mov
or
xlat
sbb
popa
jno,pt
fcomps
popf
jns
push
push
sbbb
mov
mov
sub
aaa
jnp
add
inc
sti
adc
das
jp
xchg
cltd
popa
pop
mov
push
push
call
stc
ljmp
test
ljmp
jmp
jmp
or
std
jecxz
xchg
adc
imul
fistpl
orb
loope
repz
adc
imul
test
into
sahf
cmpsb
in
mov
adcb
mov
pop
aas
cmp
mov
loop
call
or
scas
xor
lret
jne
jmp
dec
mov
add
fwait
push
insb
mov
scas
jnp
pop
lret
xor
mov
cld
js
sub
dec
inc
fwait
sarl
add
cli
push
lds
cs
xchg
mov
add
or
add
insl
sbb
dec
faddp
ret
dec
mov
add
pop
dec
push
fisubl
cmp
lods
lds
sahf
sub
icebp
les
push
sbb
cmp
shll
sbb
stc
lcall
div
mov
xor
in
repz
adc
lods
push
mov
int3
fs
dec
or
push
imul
xchg
add
mull
js
sbb
js
push
mov
cmpsl
arpl
int
push
loopne
push
mov
jno
inc
mov
jns
or
ja
jecxz
sbb
sbb
mov
lds
cmpsl
fstps
push
jne
mov
mov
or
std
es
add
jmp
mov
fpatan
in
xor
xchg
in
jmp
or
cmp
mov
or
jo
pusha
lea
or
fisubs
aaa
sbb
js
jno
mov
fucomp
fs
xor
pop
arpl
sahf
and
mov
sbb
arpl
jb
mov
test
mov
pop
imul
cmpsb
xor
ljmp
inc
js
pushf
pop
push
mov
xchg
inc
xchg
imul
addr16
add
mov
das
sub
push
sub
ljmp
rcrb
enter
inc
add
mov
jno,pt
in
fmul
inc
adc
imul
xchg
mov
fs
insb
rol
in
mov
lahf
jmp
cli
subb
mov
popa
jge
jecxz
add
push
lods
cwtl
add
inc
pop
cwtl
pop
iret
pushf
push
fistpll
js
pop
int
lock
add
mov
in
dec
mov
lea
cmp
nop
je
jecxz
sub
cwtl
adc
xor
adc
es
adc
addl
nop
adc
sub
rcrl
iret
icebp
lods
mov
xchg
repz
cmp
adc
mov
xor
mov
adc
les
push
xorb
cmp
adc
jno
xchg
scas
mov
mov
xlat
sbb
mov
sbb
jae
mov
cmp
repz
xor
ss
lret
mov
mov
jle
sub
stos
mov
lods
jecxz
mov
std
jge
int
mov
cs
sbb
mov
rcpps
lods
hlt
gs
push
push
shlb
cmp
enter
pmuludq
sbb
inc
ljmp
out
orl
mov
rcr
sub
icebp
xor
dec
sbb
push
sub
mov
dec
ss
fnsave
and
push
push
jno
out
das
dec
cwtl
in
mov
xchg
cwtl
jbe
add
cmp
push
jae
lock
dec
add
mov
push
or
jge
mov
sbb
test
add
adc
movsl
insb
xchg
push
jae
rcrb
sub
xchg
iret
inc
jmp
mov
mov
mov
lahf
repnz
xchg
xchg
cltd
mov
mov
fisubs
fwait
stos
insl
test
sub
mov
cmpsl
in
test
out
mov
inc
cmpsl
xchg
andb
addb
insb
fldt
out
in
mov
sub
sbb
in
insl
out
mov
xchg
or
test
test
push
inc
inc
inc
xchg
loopne
sub
imul
or
cltd
cmpsl
push
or
jecxz
push
xor
mov
pusha
cmp
ret
dec
addb
dec
imul
jmp
fldl
sub
inc
shl
push
xor
gs
jg
cmpb
adc
add
pop
mov
dec
sub
insl
push
loopne
cmp
jge
xor
add
pusha
adc
jmp
adc
jno
lcall
pusha
xor
ficoml
insb
sub
lcall
lock
or
movsb
sti
dec
mov
out
add
mov
push
test
std
adc
ss
cmpsl
insl
sbb
xchg
jl
mov
inc
dec
jae
pushw
pop
adc
fisttpll
jl
test
jmp
sahf
inc
shlb
lcall
inc
push
inc
scas
mov
ja
mov
stos
push
cmp
in
imul
mov
push
aam
addr16
out
sub
cld
xorl
sub
add
je
sbb
leave
cmp
sbb
jno
adc
nop
inc
popf
cltd
add
push
cmp
jge
dec
call
in
mov
mov
sbb
jo
insb
jge
sub
int3
les
xor
adc
push
mulb
insb
data16
jl
sahf
mov
lahf
enter
lods
std
std
loope
jp
add
add
call
imul
js
and
inc
rol
mov
mov
lcall
mov
xchg
stc
mov
mov
test
push
jmp
out
mov
les
mov
jno
out
ds
xor
es
fsts
movsl
sti
sub
lock
popa
xorb
add
fimull
xor
push
mov
in
sub
cs
into
dec
mov
ja
dec
test
pushf
mov
into
inc
incl
out
pmaddwd
inc
inc
inc
jne
and
push
cld
pmulhrw
ljmp
and
mov
add
cmpsb
jns
xchg
js
inc
ret
jecxz
push
push
pop
mov
mov
cs
jbe
cmp
out
mov
gs
sarl
in
xor
shll
dec
pop
fmuls
mov
mov
inc
mov
sbb
or
dec
push
mov
dec
sahf
nop
pop
mov
mov
pushf
xor
xor
out
fisttps
push
adc
je
pop
add
inc
xchg
jg
mov
dec
adc
test
aam
push
jmp
test
mov
mov
mov
iret
shl
test
loope
gs
loop
test
push
pop
mov
inc
push
imul
jno
stos
mov
and
pusha
dec
xlat
js
inc
fcomps
jp
xor
push
pop
inc
inc
gs
jo
dec
adc
ror
ret
ret
lret
mov
push
inc
gs
xor
clc
aam
push
xor
jne
sbb
pop
cmp
xchg
repz
into
push
shll
dec
ds
fstps
xchg
int
shll
outsl
jo
mov
loopne
xchg
fwait
sbb
pop
int
pop
sub
es
push
pop
incl
imul
jmp
out
xchg
jae
add
sahf
fs
dec
sbb
dec
xchg
xchg
lods
xor
dec
jb
add
push
push
xlat
loopne
mov
ret
in
lcall
cmc
xchg
ja
insl
addr16
inc
push
push
jmp
clc
xor
loop
fincstp
jle
aaa
jno
pop
lods
push
jmp
inc
adc
scas
clc
and
sub
push
cmp
cmp
inc
mov
aaa
cmp
loopne
mov
ss
mov
mov
jecxz
call
or
std
mov
jno
lret
adc
mov
pop
mov
call
mov
outsb
pop
insb
nop
inc
and
add
popf
das
mov
or
mov
mov
pop
rol
out
loope
imul
push
jne
push
pop
mov
fiaddl
xor
and
and
mov
call
and
movsl
je
pop
or
xchg
dec
subb
imul
sub
aad
pushl
mov
into
fwait
and
out
arpl
push
sub
sbb
jl
incl
mov
cld
lods
stos
cwtl
ljmp
adc
pusha
inc
clc
mov
or
add
lea
xchg
clc
xor
enter
cmp
sbb
stc
and
xchg
or
sbbb
iret
gs
or
pop
xchg
push
mov
call
lds
sub
and
cmpsb
in
lds
roll
scas
imul
dec
into
inc
daa
push
mov
cmp
or
cmp
test
pop
cltd
mov
ljmp
stos
inc
cmp
rclb
add
jae
pop
pop
and
lds
repnz
mov
arpl
mov
add
scas
clc
add
add
cmp
aas
xchg
mov
mov
adc
aad
and
mov
lret
add
xchg
push
daa
jb
dec
and
jp
pushf
fsubl
aam
xor
or
movsl
ja
lcall
xor
push
mov
adc
mov
fsubrl
sbbl
in
insl
and
ds
out
adc
lods
les
js
fcmovnb
mov
nop
cmp
cltd
aaa
aaa
push
cli
cltd
orl
jg
loopne
cmp
leave
mov
cmpsl
add
enter
jnp
cmp
das
out
mov
xchg
fsubl
sbbl
seto
filds
xor
mov
pusha
sar
xchg
shlb
pop
stc
pop
jecxz
add
jge
out
xchg
push
xorl
add
push
xchg
test
les
mov
adc
js
xor
pusha
dec
hlt
xor
pop
mov
jmp
xor
pop
das
es
sbb
pop
sub
mov
xor
daa
adc
sbb
aad
cwtl
cwtl
sbb
cld
movl
mov
sub
xchg
dec
outsl
mov
popa
adcb
lahf
jecxz
xchg
or
ret
inc
sbb
jnp
adc
addl
sub
mov
push
xor
cmp
fadd
or
aam
stc
inc
inc
andl
mov
mov
jl
insb
fcoml
sbb
imul
int3
mov
lods
xlat
inc
in
fisubrl
pop
aaa
jecxz
fwait
int3
jmp
mov
and
xchg
rcr
inc
repnz
testl
scas
imul
mov
fldcw
scas
and
xor
repz
inc
cmpsl
cli
and
sub
movsb
or
add
pop
sbb
mov
outsb
outsl
pop
dec
pop
decl
js
and
aam
mov
sbb
pop
push
ljmp
sub
call
pop
push
push
mov
stc
sbb
mov
and
enter
sub
mov
jb
out
mov
xchg
cmpl
outsl
add
push
sbb
xor
imul
inc
cmp
ja
insl
stc
jecxz
aaa
cmc
xor
or
lret
popa
xor
push
insl
adc
lock
out
sbbl
addr16
pop
cmc
xlat
ds
imul
outsb
jnp
adc
mov
inc
xchg
sub
movsb
pusha
jmp
or
mov
cwtl
test
mov
ret
testl
adcl
add
mov
add
aam
shll
repz
push
mov
outsl
cld
cwtl
xor
pop
dec
and
stos
repz
cmc
pop
ljmp
push
xor
in
xchg
push
cmp
repz
in
clc
ja
cld
rcr
in
lret
dec
out
shlb
inc
ja
out
xor
aad
call
inc
ret
push
scas
test
or
pop
sbb
xchg
sarl
pop
add
add
adc
aam
push
shrb
dec
jmp
xchg
aaa
sbb
loopnew,pn
lret
pop
shlb
cwtl
mov
sub
ss
out
mov
xchg
mov
cwtl
jno
cmpsl
inc
aaa
je
sub
ret
xchg
lahf
sub
test
push
das
dec
sbb
cltd
dec
and
mov
xorb
xchg
jb
cs
clc
xchg
movsl
push
and
shlb
inc
movl
add
dec
xchg
cmp
test
lcall
mov
lods
xchg
in
xor
bound
test
dec
sbb
pusha
fiaddl
xor
push
push
out
inc
pop
pusha
pop
sbb
subl
mov
push
lods
repnz
mov
xor
sbb
adc
dec
fnstsw
fs
cmp
out
sub
mov
add
lahf
jnp
jbe
call
cmp
movsl
mov
int
sbb
sub
xor
jne
orb
xchg
xchg
xchg
outsl
pop
sbb
stos
mov
xchg
mov
push
xor
rcrl
subl
sbb
inc
jl
fstpt
xchg
jno
sub
xchg
pusha
lods
cld
push
ds
in
pop
inc
dec
jp
xor
in
mov
push
mov
mov
sti
popf
sahf
jno
int3
adc
loopne
or
inc
push
and
sub
xor
test
cmp
cmp
arpl
test
sbb
dec
push
lock
pop
sbb
icebp
xchg
mov
xchg
insl
xor
xchg
mov
loope
mov
mov
loopne
gs
mov
imul
lods
in
pop
sub
mov
jl
and
mov
test
push
mov
ljmp
inc
lahf
addl
cmp
sub
jle
xchg
jl
sub
cmpl
out
push
push
xlat
sub
mov
adc
aaa
stos
lret
push
data16
iret
idivb
dec
test
daa
add
mov
fwait
aad
outsl
push
into
out
loop
and
iret
lahf
push
shr
and
incb
in
shrl
sub
out
popf
mov
js
mov
int
push
call
sbb
xlat
or
and
cmpsb
sub
aam
cmc
in
aam
enter
and
mov
dec
and
cmpsl
mov
mov
and
stos
mov
mov
int3
dec
pusha
push
sbb
das
cmp
add
inc
popf
or
jl
mov
xor
xor
jle
hlt
lcall
or
jecxz
into
imul
mov
mov
repnz
mov
cmp
and
add
mov
pop
mov
aad
ds
pop
pop
xchg
push
repnz
cmpsb
cmp
jno
push
imul
xchg
push
fldcw
test
push
pop
push
in
cs
lret
fists
sbb
and
sbb
out
arpl
movsl
call
lret
lock
sbb
aaa
arpl
sahf
pop
and
das
add
sbb
dec
adc
ljmp
mov
xchg
adc
add
mov
mov
add
mov
pop
cld
inc
jmp
mov
movsl
imulb
std
jbe
stos
jecxz
inc
repnz
jbe
add
rcl
sbbl
mov
lcall
stos
sub
fdivp
dec
mov
inc
jg
pop
push
je
sbb
cmp
pop
dec
pop
ret
repz
leave
pop
mov
cld
and
into
add
mov
pop
ja
sahf
pop
cmpsl
adc
sbb
fcomps
shll
cmp
xchg
sarb
in
mov
vcvtps2pd
inc
and
adc
lock
pop
cld
mov
cmp
lcall
cmpsb
mov
mov
repnz
sbb
dec
or
subl
jge
mov
and
das
testb
pushl
loope
xchg
mov
push
pop
jmp
test
add
sarb
fnstcw
mov
jnp
inc
ds
xchg
cmp
inc
or
sbb
inc
ret
hlt
jnp
jge
mov
mov
add
into
sbb
dec
setge
sub
rorl
mov
sahf
imul
add
jl
repz
jae
stos
push
cmp
fs
push
cmp
ds
adc
in
mov
push
out
adc
stc
push
add
imul
inc
dec
imul
stos
in
repz
pushf
push
jnp
cwtl
jae
push
mov
ljmp
lcall
mov
xor
out
jmp
jmp
xchg
dec
and
stos
andb
mov
data16
and
mull
subl
adc
mov
mov
adc
adc
push
jb
lahf
rcrb
jp
jl
leave
into
lahf
adc
out
lret
lock
jae
jp
rcrl
fwait
mov
mov
stc
jecxz
jecxz
jbe
bound
jg
add
shrb
aaa
xchg
push
mov
add
mov
or
ss
sahf
inc
test
mov
test
rclb
dec
lods
lahf
out
mov
stos
sbb
arpl
shl
ss
je
or
lret
mov
ljmp
test
adc
scas
xchg
cld
add
sub
lea
push
mov
jle
xchg
dec
cltd
sarb
test
scas
mov
sbb
testl
popa
daa
arpl
adc
clc
fisubrs
xchg
cmp
sbb
fcmovu
sbb
jge
mov
dec
pop
ljmp
movsl
xor
ljmp
mov
jmp
pop
test
test
imul
pop
adc
notb
sub
push
lret
outsl
pop
orl
loopne
dec
aaa
xchg
lds
add
push
ss
outsb
adc
shll
push
test
jmp
in
mov
int3
xchg
add
add
or
add
fs
mov
cmp
movl
loope
adc
sbb
push
sub
jg
mov
xor
movsl
mov
push
fsubs
push
bound
mov
or
push
xchg
data16
mov
sti
gs
fwait
gs
and
fnstcw
fcmovu
mov
rorb
icebp
or
stos
decb
xchg
mov
mov
jmp
fucomp
mov
scas
dec
inc
push
mov
lock
xor
sbb
add
stc
xlat
inc
popa
mov
add
pop
das
push
jmp
jnp
into
jp
test
pop
cmp
jp
inc
push
adc
es
xchg
xchg
cmp
xor
xor
popf
out
rcll
jg
out
in
int
dec
cs
cmp
push
pop
cmp
mov
iret
test
enter
test
out
inc
aas
lret
js
ret
test
int
dec
push
mov
dec
loop
popf
cmc
mov
lods
jle
mov
int
imul
or
iret
jno
sbb
xchg
mov
adc
mov
jl
int
out
xor
sbb
daa
fisubrl
jl
lods
jno
sub
add
xchg
es
lock
fiaddl
lahf
fwait
in
imul
xor
paddd
test
add
sbb
std
push
push
js
push
mov
pop
std
cmp
cltd
mov
out
inc
jo
es
push
adc
and
cltd
shlb
jbe
jmp
rolb
fdivl
push
sub
mov
test
mov
or
sti
push
test
scas
inc
sti
ret
adc
out
loop
out
push
fwait
in
dec
fsubrl
cld
out
loop
fwait
jae
push
fnstenv
sbb
cmp
cmp
fs
and
rclb
mov
ret
xchg
movsb
dec
lahf
test
ds
jbe
andb
into
movsb
loopne
jecxz
mov
cmp
adc
subb
lods
in
pushf
mov
cld
cmp
js
push
movsb
es
in
aaa
shrl
cmpsb
loop
pop
and
fs
sbb
pop
out
and
nop
xor
int
das
enter
in
mov
fnstsw
fisttpl
out
shl
xlat
xchg
test
js
les
xchg
mov
notb
xor
mov
inc
nop
imul
push
out
cmp
jno
sub
mov
rcll
push
jg
mov
daa
scas
lret
leave
test
insb
out
jecxz
test
fdivp
dec
mov
xor
test
adc
test
icebp
les
das
call
xchg
insb
lcall
push
aas
xor
push
pop
fs
clc
sub
pop
xchg
std
mov
data16
std
or
out
jg
mov
cmp
xor
lods
scas
mov
push
roll
cmpsl
push
pop
cmovae
les
int3
out
add
mov
shlb
xor
ss
stos
push
ljmp
stos
sub
mov
mov
xchg
pop
adc
sar
lret
scas
jns
gs
out
gs
add
jb
or
orl
test
inc
ficompl
dec
xlat
roll
mov
inc
pop
jge
pop
sahf
mov
push
int3
stos
inc
xchg
or
cld
iret
adc
push
ds
aas
sbb
xor
aas
mov
mov
testl
sbb
lds
push
xor
xchg
popa
mov
push
push
xchg
cmp
sbb
xlat
insb
or
scas
scas
loop
mov
cmpsl
fidivs
loopne
imul
rcll
ljmp
mov
mov
aam
dec
xchg
cwtl
int
sbb
cmp
pusha
ss
xor
in
das
or
inc
mov
push
jb
stos
ror
add
negl
stos
and
daa
mov
lahf
cmp
scas
sarl
ljmp
dec
push
lock
arpl
pop
rclb
mov
mov
int3
jg
mov
clc
xchg
gs
fldl
jne
lods
js
mov
out
es
jno
pop
cld
mov
mov
and
sti
test
lods
dec
and
or
xor
add
sbb
cmp
xchg
push
push
sub
mov
or
sbb
sbbb
jo
sub
mov
lds
insb
fs
jae
jno
enter
jl
jae
and
inc
nop
stc
das
jns
inc
fsubs
add
gs
repz
xchg
pop
aaa
jb
dec
pop
mov
in
xor
in
pop
inc
jae
push
sub
lahf
lea
imul
pop
dec
es
jl
cmc
jp
fwait
sub
loopne
sub
push
insl
cmpsl
cmp
lock
cmc
fdivrl
lds
pop
into
notl
mov
cmp
fidivrs
jle
adcl
push
lret
dec
push
pop
push
in
roll
jno
push
and
fcoms
js
inc
aam
mov
nop
jno
es
popa
aam
dec
xlat
loopne
cld
dec
inc
mov
add
push
scas
cmp
enter
scas
push
xchg
push
pop
sbb
mov
repnz
int3
imull
add
xlat
fdivl
and
xor
inc
jmp
popf
mov
mov
fwait
xchg
mov
mov
pop
pop
aaa
stos
jns
ret
add
fld
push
push
es
adc
sub
dec
inc
sub
in
inc
ss
pop
cmpsb
push
mov
and
pushl
sti
mov
xor
sbb
setbe
fstl
out
cmp
rcl
jmp
fsub
lods
push
push
mov
sbb
in
mov
aam
cmp
mov
dec
and
sahf
push
dec
stos
cmp
mov
pop
xor
push
mov
out
loopne,pt
aas
cmpsb
std
daa
adc
sar
cs
outsw
add
pop
adc
sub
iret
inc
xor
les
and
inc
aad
mov
aaa
or
cli
addr16
orl
xor
aam
lds
rclb
xor
cmpsl
xor
pop
ljmp
aaa
outsb
in
push
arpl
inc
loop
mov
add
in
inc
mov
outsl
dec
clc
into
loopne
or
sbb
in
imul
outsl
in
mov
xor
in
jle
sub
sbb
ds
and
xor
nop
loope
fsubrs
rcrb
into
fmul
fs
sbb
insb
roll
out
clc
ljmp
inc
jo
aam
sub
jle
pop
xchg
push
mov
lcall
outsb
push
mov
adc
pop
je
mov
imul
pop
clc
pop
jne
dec
mov
dec
lds
xor
jnp
dec
add
mov
sbb
pop
out
js
adcl
xchg
std
cmp
pop
and
or
inc
dec
aad
aas
sbb
xchg
rol
je
popf
jne
xor
shlb
lock
inc
clc
sbbl
subl
jb
xor
cltd
cs
xor
and
lret
pop
dec
not
jp
mov
in
repz
pop
fisubs
test
cmpsb
xor
push
mov
repnz
mov
cwtl
sub
je
arpl
sbb
aad
jbe
out
mov
leave
adc
imul
clc
cld
daa
jmp
sub
push
sub
mov
inc
daa
mov
aam
ja
decb
push
sub
fs
les
outsb
lcall
dec
jno
inc
inc
movsb
pop
jb
fdivr
cmp
enter
lahf
mov
xor
sub
and
mov
sbb
and
cmp
fldt
pop
and
ds
out
popa
inc
adc
pop
xchg
xchg
sbb
lret
enter
ret
or
rorl
call
or
stos
or
xor
mov
xor
aad
mov
in
dec
outsb
fdivs
inc
in
jns
add
xchg
enter
cmp
lahf
jecxz
inc
mov
sbb
in
divb
ficoml
fcomps
pusha
repnz
or
loope
cld
gs
push
inc
jle
pop
mov
scas
mov
sti
cmpsb
inc
dec
fs
pop
cmc
push
es
mov
mov
push
pop
lds
add
js
add
dec
dec
and
push
cwtl
push
push
andl
shll
je
loopne
xor
or
outsl
dec
xor
inc
cltd
sub
mov
int3
dec
sub
mov
add
cli
fs
shrb
stos
mov
mov
imul
dec
stc
xor
or
lcall
lret
inc
movsl
outsb
int3
lahf
cmp
ljmpw
pop
adc
and
sub
pusha
xchg
push
outsl
push
jno
inc
inc
dec
loope
nop
jg
pusha
test
test
sub
rcl
fstpl
pop
and
ljmp
loop
mov
aad
dec
mov
xor
pop
out
cltd
pop
pop
cmpsb
sarl
ds
cwtl
xor
adc
pop
sbb
and
loopne
sub
test
mov
push
and
out
and
es
sbb
rorb
sbb
cli
add
les
pop
xchg
repnz
xchg
add
clc
push
push
js
in
notb
and
pop
push
xchg
and
jge
push
inc
bound
test
lods
jl
test
js
jns
test
or
xchg
int
jne
repz
or
jns
movsb
aad
out
dec
gs
repnz
cmc
mov
dec
pop
dec
divl
push
pushf
push
mov
mov
notl
cmp
aaa
add
xchg
jge
adc
mov
push
movsl
popa
push
outsl
add
pushf
xor
test
mov
mov
or
arpl
xchg
push
xchg
push
mov
ficoml
or
insl
cmp
sbb
xchg
enter
in
or
jae
fldenv
ljmp
or
aaa
push
fmull
xchg
in
cwtl
jle
negl
in
lods
push
movb
in
sahf
sbb
adc
fs
and
in
sub
cltd
pop
push
add
jl
lods
aam
add
cwtl
scas
or
dec
cs
mov
mov
mov
ds
xchg
mov
adc
fisttpll
xor
mov
fildl
lods
xchg
sbb
or
mov
mov
dec
sub
pop
sti
pop
mov
or
es
mov
or
pop
inc
xchg
mov
cltd
dec
pop
inc
push
dec
sbb
js
xchg
iret
out
out
or
in
xor
aam
or
and
adc
jb
pop
sub
rcrl
or
or
icebp
cs
lcall
imul
xchg
sahf
mov
stc
fiaddl
in
insl
aad
and
insl
maskmovq
testl
out
adc
sbb
cmp
xchg
or
inc
jbe
sub
imull
jge
repz
cmp
and
lret
mov
add
sub
in
mov
scas
adc
in
adc
sbb
add
lahf
xor
push
pop
int3
rcrl
add
and
push
mov
pop
test
loop
xor
dec
push
and
dec
bound
ret
cwtl
jbe
int3
ljmp
clc
add
mov
jno
fwait
cmp
jne
test
sbb
xchg
ret
xchg
clc
repz
sub
xchg
roll
pop
stos
inc
cli
mulb
sarb
mov
mov
add
push
call
cmpsl
and
sub
xorb
xor
shlb
imul
leave
stc
jp
out
cli
push
jne
iret
add
xchg
add
dec
mov
xor
loopne
in
outsl
pop
rcrl
loop
mov
push
out
mov
outsl
mov
jge
and
push
sub
clc
xchg
dec
cmc
movsb
es
pusha
aad
orl
or
sub
and
int3
dec
aas
cmp
test
mov
mov
pop
push
dec
shl
divb
out
jnp
dec
insl
arpl
fisubl
and
cmp
rclb
loopne
in
ds
xorb
cmp
add
dec
mov
mov
jae,pt
push
jle
or
inc
lock
xor
inc
ds
pop
jne
jg
ret
xor
sub
mov
mov
jbe
dec
sti
mov
sbb
cli
aam
fisubrs
rcrb
pop
xchg
rcl
cld
lahf
into
push
pop
andl
mov
and
mov
mov
or
pop
and
or
add
fadds
inc
pusha
mov
fwait
cmp
sub
cmpsl
imull
lea
divb
mov
adc
aas
mov
fnstenv
das
dec
mov
jo
jno
cmp
jp
jmp
cltd
pop
shr
cld
icebp
sub
loop
sub
push
and
mov
cmp
pop
pop
sbb
xchg
or
enter
or
int
les
loopne
mov
dec
push
into
pop
addb
ds
mov
lea
xor
fidivrs
cwtl
adc
jge
lds
jno,pt
repz
shl
insb
rclb
enter
ret
and
insl
push
lods
test
sub
outsl
xor
sbb
mov
inc
xor
outsb
xor
xchg
add
ds
test
aad
call
arpl
cltd
dec
loop
testb
and
lcall
les
scas
int
push
ja
mov
not
sub
out
sar
jmp
repnz
xchg
jns
jmp
cld
pop
fmull
push
mov
mov
cwtl
loopne
inc
into
dec
lret
fs
pusha
adc
xchg
dec
pusha
pop
mov
flds
es
mul
cmp
pop
outsb
mov
scas
out
leave
movsb
pop
push
mov
dec
inc
pop
dec
test
subb
mov
imul
mov
sbb
mov
fstpt
movsl
cltd
bound
subb
mov
icebp
call
xchg
jae
repz
xor
push
mov
fst
and
or
sub
xor
gs
imull
jg
push
enter
pop
xchg
out
hlt
and
sti
insb
cld
pusha
int3
out
and
fnstenv
daa
push
mov
fildl
popf
dec
xorl
xchg
into
add
ret
mov
or
cmp
test
sub
pushl
les
add
imulb
scas
and
push
cld
and
shrb
push
pusha
xchg
dec
fs
popa
inc
cmp
aaa
popf
pop
cmc
movsl
lods
mov
jo
imul
pop
nop
mov
and
leave
ret
or
sarl
out
cmp
lods
xor
std
sbb
push
movsb
lcall
imul
jg
sbb
mov
cmp
popf
in
ds
mov
iret
dec
mov
ss
pop
or
mov
test
popf
neg
add
lret
dec
stos
and
cmp
mov
dec
mov
cmp
arpl
pushf
jbe
ficoml
movsb
mov
pusha
xor
lcall
cmpsb
push
adc
fmuls
out
lods
and
add
xor
out
lret
xchg
push
sarl
imul
jns
xchg
dec
fnstenv
in
mov
jnp
cmp
xor
fs
dec
xor
pop
jb
adc
cmp
out
bound
fbld
xchg
xor
inc
aam
xor
popf
mov
pop
mov
pushl
xor
pop
popf
jnp
inc
sbb
sbb
test
sbb
cmp
jbe
sbb
aaa
test
lahf
mov
sti
push
add
mov
xchg
sbb
aaa
scas
aam
rclb
out
mov
test
mov
sub
xlat
jo
push
rclb
testb
fdiv
or
jp
inc
dec
xchg
ret
add
mov
pop
stos
roll
xchg
aas
add
sub
mov
and
jb
pop
jno
mov
push
pop
lock
bound
das
lcall
pop
or
mov
loop
repz
or
dec
aaa
loop
cmp
jmp
and
dec
xchg
out
cmpsb
inc
movsl
sbb
push
les
std
pmulhw
inc
cmp
xchg
sbb
inc
arpl
jbe
push
pmaxub
mov
jno
ja
mov
test
das
xchg
js
jno
or
dec
mov
in
dec
das
ja
and
push
into
inc
cmp
cmp
lahf
fwait
or
jg
pusha
rcl
push
icebp
sub
pop
insb
test
icebp
pop
test
sbb
inc
sbb
cmp
das
sub
je
sub
lret
xchg
ficompl
stos
xchg
loope
jmp
loopne
pusha
and
daa
xchg
shrl
imul
outsl
inc
andb
aas
stos
jge
or
in
lods
jne
mov
push
cld
mov
shrl
sbb
daa
mov
pushf
mov
lret
jge
mov
enter
rcl
cltd
daa
sub
out
loopne
mov
jle
repz
stos
inc
xlat
jl
mov
inc
insb
push
mov
bound
xchg
sbb
dec
pushf
sahf
mov
repnz
sub
cmp
adc
dec
nop
ror
and
mov
jp
pop
lahf
into
dec
adc
rcrb
add
sbb
adc
push
pop
hlt
aas
arpl
repz
mov
dec
mov
jo
sbb
not
bound
and
out
js
test
mov
js
sub
cmc
xor
jnp
adc
xor
adc
ja
bound
inc
jnp
fstp
test
clc
sub
js
data16
neg
fisttpl
imul
hlt
jae
gs
pop
lahf
movsl
frstor
in
inc
aas
lcall
outsb
push
test
inc
shll
nop
ds
lock
xchg
jbe
in
leave
jmp
adc
mov
sarl
int
xor
aas
fs
dec
and
adc
xor
pop
clc
mov
dec
cmpl
cmpsl
pop
and
mov
pusha
xchg
jecxz
xchg
sbb
sub
jecxz
test
adcl
sbb
or
lcall
jg
jnp
addr16
ror
add
push
jmp
call
pop
xor
sbb
sub
pop
sbb
or
add
int3
pop
mov
cs
fstpt
scas
inc
inc
mov
mov
jge
mov
sti
ja
lock
pop
mov
daa
icebp
adc
and
add
loopne
and
outsb
xlat
ret
sub
lret
repz
add
fisttps
cmc
mov
jne
mov
stc
in
add
inc
push
cmp
pop
fiaddl
mov
cmp
and
daa
mov
dec
mov
add
mov
pop
sub
ja
data16
inc
and
lahf
xchg
pop
ds
mov
insb
sbb
out
xor
roll
mov
or
sahf
arpl
jge
sub
adcb
sub
push
cmp
mov
rol
push
nop
jmp
pop
scas
jo
cmpsb
adc
shlb
sub
cltd
js
adc
int
in
je
push
ja
cmp
dec
icebp
test
mov
sbb
mov
into
insb
push
add
mov
fisubrl
cmc
add
push
lret
pop
add
addb
mov
fmuls
mov
lock
sarb
sbb
mov
jno
and
add
pop
adc
sbb
leave
xor
loopne
daa
sub
pop
and
loopne
sbb
data16
cmpl
sbb
mov
xchg
inc
dec
push
inc
scas
mov
push
cmpsl
or
inc
sbb
mov
mov
jne
sub
push
movsb
xor
fisubrs
cwtl
mov
adc
out
pop
push
or
addr16
jb
push
pop
dec
xor
inc
push
xchg
cmp
fidivs
scas
push
mov
insl
aas
mov
loope
add
stos
jb
cwtd
push
std
lds
adc
std
mov
push
xchg
push
in
sahf
inc
addr16
mov
mov
dec
stos
or
push
in
push
sbb
inc
xor
lods
fidivs
xor
shl
rorl
int
int
cvtps2pi
add
push
dec
push
lock
or
jle
add
ret
adc
jns
jle
xor
icebp
jae
rcll
lds
xor
push
fndisi(8087
ror
xor
and
test
jns
cmc
shl
out
mov
insb
fstp
testb
inc
enter
mov
in
add
movsl
adc
dec
adc
sbb
je
push
pushf
dec
aam
pop
push
fbld
jbe
imul
aas
pop
inc
mov
aas
inc
sbb
cli
out
aas
xlat
adc
pop
fldln2
loopne
cli
xor
stos
loope
cmp
xor
xchg
xor
jmp
pusha
test
or
imul
scas
fadds
ds
pusha
cmpsb
aam
arpl
call
mov
pop
lret
push
inc
mov
out
sbb
out
out
push
sub
mov
cmp
cmp
push
call
arpl
xor
inc
lret
out
xor
add
mov
mov
inc
xchg
cmpl
rorb
mov
sub
push
sub
popa
shrb
jae
jnp
inc
stos
rolb
int
shll
ds
pop
mov
ja
xchg
inc
in
add
cld
in
xchg
adc
pop
or
movsb
cmp
jae
test
negb
inc
fdivrl
mov
sub
inc
or
call
mov
sub
or
fcoml
inc
xchg
popa
lock
and
mov
pusha
mov
nop
jne
push
xchg
mov
push
mov
int3
push
out
push
mov
shr
das
fadd
push
ffreep
cmp
shll
dec
inc
out
imul
adc
xchg
test
lock
xor
into
pop
cmp
in
shl
les
out
pop
inc
xlat
adc
sarl
aaa
dec
cld
jg
lock
in
jae
mov
lock
loopne
xor
jno
test
add
test
sbb
dec
and
mov
repz
cmpb
inc
xor
add
and
cld
mov
sub
mov
xchg
mov
aam
lea
xchg
cmpsl
mov
call
out
shll
cmc
sbb
or
add
dec
and
mov
mov
nop
or
mov
xchg
jle
arpl
leave
fadds
mov
push
pop
rclb
jb
in
push
clc
cmpsb
jl
lret
push
push
mov
rol
push
cmp
jne
sbb
sub
neg
lret
mov
out
dec
push
nop/reserved
loop
cltd
rclb
add
aam
dec
mov
pop
gs
daa
mov
ret
mov
inc
ret
sbb
pop
mov
scas
sbbl
and
daa
aad
mov
pop
arpl
add
sub
jl
mov
mov
pop
xor
fwait
js
push
dec
pop
mov
xor
or
fs
push
push
mov
bound
lods
mov
add
dec
scas
adc
cld
mov
stos
mov
enter
es
inc
mov
repnz
lahf
lcall
mov
push
ucomiss
mov
loopne
sbb
ss
xchg
fwait
mov
pop
inc
nop
mov
cmp
sbb
mov
push
mov
add
pushf
dec
loop
add
xchg
arpl
mov
xor
pop
lret
push
mov
jb
imul
stos
cld
jb
adc
shlb
loopne
push
push
mov
jmp
sub
gs
push
inc
insb
movsl
loop
arpl
popf
rclb
mov
sbbl
sbb
enter
lcall
insl
lcall
xchg
cwtl
or
outsb
insb
mov
jb
xor
pop
or
lsl
cmp
adc
cmpsb
push
rcll
ficomps
test
mov
in
sahf
push
add
jae
loope
xchg
jge
lock
jmp
push
pop
adc
data16
fsts
jle
je
es
jle
mov
adc
push
or
push
pop
pop
xor
lret
push
mov
repnz
mov
push
sbb
pop
pop
or
outsb
bound
sub
js
outsb
hlt
push
push
cmp
or
fdivs
ds
insb
in
aas
sub
push
scas
add
add
cmp
mov
dec
lret
out
mov
sub
inc
push
mov
scas
loope
ljmp
mov
cmp
testb
or
sahf
out
lock
xchg
push
test
lock
into
pop
mov
rcrb
pushf
flds
out
add
mov
dec
arpl
jg
in
in
ret
ljmp
scas
sahf
movsl
xchg
ss
add
dec
ret
mov
mov
and
add
pop
shlb
lret
inc
push
js
dec
nop
mov
cld
mov
out
or
lock
out
std
jo
iret
in
inc
aad
and
imul
push
hlt
mov
inc
lods
aad
dec
mov
xor
push
test
in
pop
ror
outsl
adc
rclb
leave
sahf
sbb
das
aaa
adc
mov
daa
lea
xchg
mov
add
cmpl
es
xchg
orl
enter
ret
mov
push
pop
cwtl
std
mov
fisttpll
shll
xchg
sbb
xchg
mov
cmp
pop
jb
repnz
cmp
inc
lahf
outsb
and
lret
and
daa
mov
xor
dec
insb
mov
mov
jge
push
xor
loopne
sbb
pop
mov
daa
sbb
shlb
pop
or
pusha
ret
push
pusha
mov
cmpsl
test
fdiv
fnstenv
and
pop
pushf
dec
push
out
femms
jno
inc
sbb
push
xchg
cmp
loop
mov
add
mov
add
std
and
and
outsl
cmpsl
arpl
loopne
xorl
push
mov
rorb
ljmp
in
mov
xchg
add
xchg
lea
jb
sub
out
and
jle
xor
xchg
into
mov
imul
lret
xor
xor
xchg
pop
sbb
and
in
mov
inc
pop
sub
dec
stos
pop
push
mov
daa
mov
xchg
sbb
scas
shll
loop
or
sbb
sub
mov
std
jmp
int
mov
sbb
jno
add
arpl
sub
push
and
or
inc
xor
jnp
xchg
mov
sub
or
rcr
sub
sbb
or
repz
lock
arpl
and
in
pushf
add
xchg
fcmovne
mov
mov
cmpsb
pop
mov
lea
mov
add
mov
mov
xlat
psraw
cmp
lods
inc
inc
push
mov
or
jno
cmpsb
add
loopne
jnp
out
mov
iret
dec
scas
cmpsb
sarb
sbb
call
push
adc
inc
cli
or
movsl
aam
xor
inc
jge
sub
in
push
sbb
inc
or
dec
pushf
mov
ret
sub
lcall
mov
iret
add
negl
xchg
mov
shr
add
out
pop
push
out
adc
dec
mov
das
rcrb
insl
outsb
dec
fidivs
outsb
movl
jns
xor
push
leave
inc
xor
xchg
mov
rcl
addb
je
test
icebp
in
repz
mov
xor
push
xor
or
and
gs
inc
adc
dec
sbb
cmpl
or
sbb
push
ds
mov
jl
rcrl
mov
xchg
test
pop
sbb
xlat
fldt
fistpll
pushf
imul
xchg
mov
into
sbb
inc
icebp
xchg
aas
jge
ds
popa
mov
clc
add
add
add
sti
imul
fiaddl
jl
add
mov
jae
dec
sti
insl
sub
mov
mov
pop
xchg
hlt
addr16
in
fnstcw
loop
cwtl
and
dec
xor
and
push
push
movsl
sbb
or
xchg
jno
mov
pop
lahf
adc
arpl
xchg
movsb
pop
ljmp
add
pop
repnz
xchg
dec
sub
cli
mov
lds
mov
testb
jne
mov
mov
aaa
and
sub
cld
rorl
lret
out
mov
iret
mov
mov
inc
xchg
stc
or
or
push
ffreep
xchg
push
pop
sub
xchg
dec
dec
mov
mov
cmc
loopne
pop
inc
mov
data16
mov
and
fadd
mov
out
add
lret
dec
jbe
data16
sub
and
jns
inc
cmp
fiadds
cs
jo
xchg
mov
xor
hlt
loopne
cmp
xor
xchg
xchg
mov
add
xchg
lcall
adc
pop
iret
out
icebp
xor
adc
and
gs
xchg
dec
inc
mov
mov
add
leave
sbbb
ficoml
pushw
push
or
inc
aam
and
in
mov
mov
jmp
xchg
xor
scas
mov
mov
mov
nop
sub
mov
jmp
and
cld
jmp
cwtl
push
pop
in
int3
adc
outsb
mulb
and
rcrb
addr16
push
bound
in
push
movsb
cld
pop
add
sbb
and
jle
inc
sysenter
xor
cmp
mov
imul
push
pop
or
pcmpgtd
sub
fdivrs
jge
xchg
call
aam
fsubrp
ljmp
ljmp
sub
add
push
xchg
sti
jae
sub
pop
lods
push
or
in
cmp
test
pand
cli
jmp
push
icebp
ljmp
inc
adc
stos
cmp
inc
imul
add
inc
out
jno
cld
icebp
add
call
pop
outsb
push
jmp
inc
mov
dec
cmpsb
insb
mov
or
pop
clc
ficomps
scas
mov
jno
jmp
mov
cmp
and
cmpsb
mov
adc
cltd
or
iret
dec
sub
dec
lods
jno
add
push
mov
inc
and
movsb
iret
add
pop
loope
xor
sti
enter
push
pop
jnp
lods
pop
and
dec
es
pushf
in
cli
lds
sub
pop
enter
inc
or
gs
or
push
xor
scas
jl
repnz
int
inc
inc
lock
stos
pop
sbb
fsubrs
push
dec
cmp
mov
je
xchg
daa
fcompl
test
movl
stc
and
xchg
repz
cld
jno
loopne
add
push
jg
sbb
adc
mov
fwait
xchg
xchg
out
cwtl
arpl
test
fisttpl
shrl
xchg
int
pop
fimull
push
dec
mov
ret
std
repnz
in
jne
insl
push
out
iret
jbe
addl
lret
gs
mov
xlat
mov
mov
xor
test
lds
movsb
arpl
and
movsl
xor
nop
adc
rep
xchg
xor
adc
repz
in
icebp
cld
in
jo
shll
pop
test
push
lret
and
mov
mov
stos
jp
dec
pop
pop
pop
mov
cmpb
out
jp
sbb
lea
sbb
lea
push
lods
cwtl
stos
sbb
pop
ljmp
lock
dec
scas
sub
cmp
insb
jl
cmp
jg
mov
mov
cld
or
xor
outsl
cmpsb
ret
hlt
cld
popa
mov
and
notl
cs
jp
and
mov
mov
loope
pop
cmp
inc
jmp
cli
in
xor
mov
iret
cmc
in
and
aaa
cmp
cli
push
pushl
cmpsl
rcrb
pop
icebp
cmp
out
andl
fdivr
xchg
mov
scas
dec
mov
cmpsl
jle
push
jae
test
xor
pop
push
ss
bound
loop
mov
cli
into
xchg
push
scas
and
gs
fsub
xchg
push
dec
mov
dec
jg
cli
push
push
and
fdivr
orb
xchg
pop
xchg
vphaddubw
lods
fcmovnb
sub
xchg
pusha
ljmp
mov
sbb
je
mov
cltd
fwait
xor
or
sti
icebp
or
sti
or
imul
adc
adc
je
mov
ret
cmp
adc
jg
add
loop
bound
sti
cmp
xor
pop
push
popa
jge
fcomps
or
test
pop
ret
out
insb
and
lcall
cmpb
test
lods
cmp
jae
cld
mov
cli
pop
mov
lahf
insb
push
mov
iret
sarl
cltd
fistl
mov
xchg
jbe
and
lahf
ret
fisttpl
and
or
jge,pn
aas
cmc
xor
jp
mov
jmp
mov
mov
pop
jne
jg
xor
sub
xchg
xchg
cld
mov
test
shlb
add
add
mov
imul
dec
pusha
mov
js
jecxz
mov
mov
and
das
mov
mov
mov
fidivrs
cmpsb
sbb
sub
inc
cwtl
stc
xchg
out
xor
jl
aas
cli
scas
xchg
out
in
jmp
jg
stos
cmp
lea
inc
mov
and
ds
shlb
fnstsw
push
sub
and
arpl
das
insb
nop
inc
adc
and
sbb
fsubr
pop
movsl
lds
xor
xor
add
xchg
or
adc
sub
ret
daa
rcl
push
shll
lds
aaa
enter
pop
push
or
or
clc
imul
sbb
mov
cmp
pop
fnsave
testl
add
xor
xor
push
int3
ror
adc
sbb
bound
movsl
mov
or
movsl
push
and
xchg
jmp
adcb
dec
iret
inc
int3
pusha
imul
mov
dec
ljmp
subl
mov
js
and
loopne
inc
sahf
fcmovu
psubw
sti
iret
cmp
adc
push
aaa
fs
out
nop
lahf
dec
fisubrl
sbb
add
jb
xchg
jbe
outsb
stc
push
dec
push
sbb
push
cmpb
xchg
aas
mov
das
iret
lret
push
ds
cmpsl
xchg
jmp
clc
aaa
mov
cwtl
loope
push
fcomps
int
test
sbb
inc
inc
or
mov
adc
cmc
scas
sbb
enter
push
test
xor
lret
mov
incb
jp
fdivr
popa
jb
sbb
xchg
mov
scas
fidivrs
adc
sahf
pop
jg
and
jg
xchg
pop
dec
ds
xchg
add
dec
loop
shll
inc
inc
jmp
ret
dec
into
sbb
mov
pushf
out
outsb
mov
inc
call
cmp
cli
adc
stos
pop
mov
add
out
js
pop
popf
rcll
cmp
inc
inc
gs
jg
jne
outsb
div
mov
data16
sub
jecxz
fsubrs
jecxz
push
jb
and
mov
sbb
les
sbb
and
insb
inc
in
cmc
inc
jle
clc
adc
mov
xor
fbstp
aaa
mov
mov
push
lret
nop
add
push
push
movsb
fsubr
xorl
jno
and
nop
inc
lcall
ss
cmp
icebp
movsl
or
nop
jne
mov
pop
xchg
mov
fs
sub
cmpsl
lahf
lea
sbb
push
std
stc
mov
mov
sub
call
into
inc
inc
in
cld
aaa
add
mov
ja
add
add
ja
bound
leave
xchg
jae
aad
testl
shld
adc
imul
mov
ds
mov
inc
dec
cmp
xchg
mov
jp
mov
into
mov
das
mov
hlt
icebp
and
fidivl
adc
push
lret
jecxz
nop
out
test
mov
jge
sahf
fwait
xor
das
cmpsb
pop
hlt
sbb
pop
mov
mov
jns
jmp
cld
cli
pop
dec
pop
inc
test
rorb
mov
lahf
sbb
mov
sub
sbb
outsb
jno
lods
mov
mov
jne
rcll
out
adc
shll
fidivrl
shlb
outsb
icebp
faddl
fcoms
add
je
mov
mov
scas
xor
push
pusha
repnz
mov
adc
ja
or
aad
jae
enter
frstor
cmpsb
test
lret
jp
dec
icebp
jo
and
cs
pop
jg
jae
movsb
mov
loope
stos
xor
cli
imul
das
mov
dec
push
xchg
push
not
inc
sub
ja
mov
mov
movsb
adc
cmp
mov
jbe
nop
pop
pop
out
mov
pop
es
fwait
aam
xchg
sbb
mov
or
gs
or
loope
dec
push
sub
mov
adc
fildl
adc
cmp
inc
xchg
lods
mov
inc
or
xor
pop
jbe
jo
das
call
stos
ja
pop
xchg
xchg
and
mov
cmp
std
andb
mov
adc
push
or
aam
jge
adc
iret
jl
pop
movsl
xchg
outsl
movsb
jbe
cwtl
adc
jmp
fistl
sub
incl
dec
cmp
mov
fsts
pop
aas
daa
mov
adc
jno
out
lret
fs
xorb
mov
mov
and
fisttpll
insl
sahf
and
lea
loop
jl
adc
into
adcb
mov
inc
cmp
std
adc
repz
stos
mov
cmp
ficomps
fsubrl
stos
leave
pop
inc
std
mov
jno
lahf
add
fldenv
call
xchg
inc
push
adc
lcall
xor
lcall
pop
cmp
test
push
lret
fistl
aad
or
pop
pop
add
pop
push
repnz
jg
or
jmp
nop
adc
pop
scas
cmp
jecxz
cmp
xchg
ja
mov
sbb
sub
xchg
fistpl
rcl
or
dec
push
push
cmp
and
ss
daa
add
lds
ja
ret
xchg
push
jnp
popa
jb
popa
mov
push
add
outsl
aam
mov
cld
xchg
test
sbb
pusha
inc
sub
je
xchg
mov
adc
mov
daa
dec
gs
or
ret
imul
mov
test
pop
inc
cli
lock
div
and
pop
popa
scas
push
ja
mov
aas
out
out
mov
or
pop
jo
es
leave
das
dec
mov
popf
or
jmp
movsb
push
in
push
roll
ror
mov
pushf
dec
popa
testl
add
sbb
daa
mov
mov
pop
scas
pop
or
pop
adc
push
xchg
bound
jl
jns
sbb
dec
movsl
sbb
clc
lea
push
mov
pop
out
jp
call
in
jnp
adc
outsb
dec
and
outsl
pop
aad
xchg
out
ficoml
mov
imul
hlt
jns
pop
stc
insb
mov
mov
aaa
xchg
leave
inc
mov
lahf
pop
cmp
fmuls
ror
cltd
imul
rcrb
scas
mov
in
shll
mov
repnz
iret
jmp
enter
inc
jo
scas
cmc
out
mov
loopne
cld
jno
or
loope
push
stos
xchg
mov
fwait
ss
lret
test
mov
cmpsb
mov
xlat
daa
mov
rcrl
xchg
pop
cld
xor
mov
outsl
and
add
jl
mov
pop
roll
sub
xor
push
or
cmc
mov
jae
mov
lret
mov
loope
mov
ret
loop
dec
shl
les
aaa
or
ss
in
push
imul
movsl
aaa
rorl
push
push
jne
xchg
out
pusha
scas
and
mov
sub
cli
cld
mov
pop
repz
scas
xlat
add
pop
jecxz
jle
popf
dec
or
xor
scas
ja
add
and
lock
mov
sahf
add
inc
lock
sti
cmpsb
xchg
incb
pushf
cmp
sti
loop
cmp
je
xchg
xor
repnz
scas
add
clc
pop
xchg
icebp
leave
jmp
sbb
sbb
mov
push
pop
movsb
std
lds
sbb
in
jg
dec
iret
xchg
push
lods
xchg
xchg
cmc
push
iret
lahf
jbe
in
jp
rcrl
sbb
dec
sbb
ldmxcsr
cld
sbb
jle
loopne
jp
add
add
mov
aad
jecxz
inc
dec
jmp
cmp
imul
adc
push
test
aas
stos
jl
push
das
pusha
dec
nop
aam
in
lea
xchg
scas
rcll
mov
loop
mov
mov
mov
dec
mov
xchg
pop
les
fstpl
lods
filds
jg
fsubr
nop
enter
mov
repnz
mov
mov
adc
mov
mov
cs
js
mov
or
cs
nop
outsl
add
pusha
lods
push
ret
int3
fwait
mov
cwtl
mov
xchg
shlb
shll
aam
outsl
xlat
ljmp
divl
pusha
ljmp
out
inc
lock
xlat
daa
mov
popa
xchg
pop
scas
es
add
xchg
jmp
arpl
shll
inc
sti
out
inc
fstpl
xchg
insl
sbb
outsl
and
test
ljmp
cmp
shrl
outsb
xchg
incb
scas
addb
cmp
lahf
repnz
ret
cld
daa
xchg
sbb
mov
pop
mov
je
and
mov
and
mov
dec
jle
xor
jb
pusha
pop
idivl
out
mov
lret
push
cmpsb
jg
cmp
mov
or
shrb
pusha
push
scas
mov
icebp
xchg
inc
mov
pop
jno
sub
inc
stos
test
mov
or
mov
pop
and
repnz
bound
adc
fsubrl
xchg
sub
push
pop
inc
jnp
jno
inc
xor
inc
pop
pop
xor
ljmp
je
hlt
adc
cld
lods
int
push
xchg
pop
sbb
je
mov
xor
mov
jnp
pop
sub
or
mov
mov
aam
sbb
lcall
pop
xor
test
sahf
adc
lods
inc
mov
dec
incb
add
push
cwtl
insl
and
sub
repz
addb
push
pop
mov
xchg
dec
xor
negb
mov
inc
push
dec
dec
pop
aam
les
dec
mov
insb
aad
scas
adc
insb
add
jg
out
je
fiaddl
sbb
int3
in
shlb
data16
outsb
test
scas
adc
aaa
adc
mov
push
sub
add
ljmp
pop
fldcw
sbb
adc
rol
xchg
xor
pusha
roll
inc
mov
lcall
or
push
das
cmp
pushl
cmpsl
cmp
adc
push
jecxz
push
loopne
jle
sbb
cmpb
cmpsl
outsb
add
lds
mov
mov
ds
and
ds
call
test
xchg
jmp
xchg
cmp
rorl
aam
inc
and
sbb
fisttps
addr16
jo
pop
aam
shlb
in
iret
pop
mov
jae
hlt
fsubp
pop
cmp
mov
fcmovnb
jp
pop
fdivrs
mov
movups
adc
jo
arpl
lds
mov
out
push
divl
push
bound
gs
dec
jp
fidivrs
outsb
mov
fs
add
jbe
sub
dec
push
iret
add
mov
jo
test
dec
jge
or
out
dec
push
daa
aad
mov
fcomps
xchg
push
xlat
mov
rcl
mov
leave
mov
arpl
dec
jns
mov
std
add
in
mov
xchg
les
pop
movsb
cmpsb
ds
add
mov
sbb
dec
cmc
push
or
jecxz
cmc
mov
mov
fadds
hlt
pop
mov
or
or
sub
add
or
test
lds
popf
jnp
sbb
cli
pop
jnp
repz
xor
imul
xchg
mov
push
jae
test
xchg
inc
aas
cmp
sbb
mov
xor
xchg
roll
inc
dec
cmp
inc
add
cwtl
sub
ljmp
push
dec
dec
pusha
dec
lret
mov
cltd
sbb
or
lahf
xor
addl
or
popa
dec
sbb
mov
or
and
adc
adc
outsl
sbb
or
outsl
adc
push
test
fadds
pop
aaa
mov
fucomi
mov
or
xchg
nop
and
push
or
mov
xor
inc
lret
xchg
lock
and
pop
jo
leave
loopne
xchg
outsb
lret
mov
mov
loop
inc
int
push
push
xor
int3
lods
pop
pop
or
aas
sbb
test
negl
mov
sbb
jp
addr16
out
cs
fdivr
jno
sub
das
or
push
sub
jge
lock
push
inc
in
jl
jo
je
cld
mov
ljmp
in
loope
mov
push
jmp
insb
jno
mov
ja
mov
or
test
lahf
xchg
or
xor
pop
and
cmpsb
into
mov
jns
orl
data16
lds
push
sti
cli
aam
mov
jne
pop
pushf
push
push
pop
pop
push
in
mov
ret
das
or
sub
imul
inc
mov
adc
daa
lret
insl
shrw
mov
das
mov
cli
not
daa
pop
dec
lods
rorl
test
xchg
mov
imul
sarb
push
mov
and
adc
or
test
loopne
fcompl
call
das
sbbb
pushl
adc
mov
frstpm(287
aad
fcoml
aas
std
lret
out
les
dec
xorb
inc
ss
mov
sahf
xor
loop
add
bound
cmp
pop
pop
enter
mov
adc
push
sarb
fs
jae
outsb
scas
sub
subl
fisttpll
jge
inc
loope
or
jge
loopne
jl
ret
insb
pop
mov
adc
sbb
mov
stc
and
push
sbb
sahf
pop
dec
call
xchg
dec
xchg
divl
jmp
adc
jnp
pop
movsb
or
out
inc
pop
cmp
sub
mov
add
rcrl
lods
add
dec
pop
mov
jle
daa
je
ret
inc
in
sarb
add
mov
jae
cmpsb
stos
cmpsb
cmc
repz
mov
aad
pop
pusha
addr16
cld
pop
cltd
inc
sub
push
insb
loope
push
pushf
ret
sub
mov
add
pop
out
xor
in
dec
dec
les
adc
lret
pop
aam
enter
jo
es
sub
adc
addr16
mov
lcall
adcl
or
jo
test
dec
or
lods
std
and
mov
mov
imul
loope
popa
lret
repz
imul
adc
shrl
daa
dec
lret
mov
xchg
call
adc
outsl
mov
aam
push
sub
sub
inc
mov
js
popf
sbb
sbbb
loop
nop
mov
shr
jecxz
sbb
push
mov
push
mov
sti
mov
jle
int
repz
add
fwait
mov
xchg
stos
mov
mov
fisttps
pop
or
sub
insl
mov
push
aas
xchg
mov
sahf
push
sbb
sbb
xor
or
addr16
jg
dec
mov
push
fists
into
rolb
cmp
lds
add
addb
in
arpl
cmp
andb
xchg
mov
sarl
ficoml
dec
add
cmpsb
push
push
mov
nop
jl
or
xchg
inc
sub
cmp
sub
push
lret
sbb
repz
fucomp
outsb
iret
mov
adc
das
pop
sbb
out
inc
sub
mov
dec
lahf
jb
movsb
or
popf
xchg
pop
dec
int3
xchg
gs
aad
jg
mov
fidivs
aas
mov
pop
adc
pop
lea
pop
pop
pop
cltd
ljmp
lods
mov
stc
sbb
inc
jnp
mov
adc
ficoml
inc
and
adc
adcb
cmc
jg
sub
fisttps
push
or
and
mov
jnp
inc
aaa
push
popa
dec
push
orb
sbbb
shrb
cli
xchg
mov
andl
mov
sbb
pop
add
sub
push
cld
scas
jae
mov
pop
scas
jae
sbb
fwait
lods
out
xor
mov
test
lods
lahf
pop
pop
ljmp
mov
xchg
pop
inc
or
pop
mov
call
push
push
adc
mov
sub
xchg
xchg
pop
inc
pop
test
sbbl
jle
in
cmpsl
adc
lcall
ja
sub
cmp
sub
inc
mov
movsl
sarl
inc
aam
adc
or
jg
jnp
repnz
sbb
fistl
test
popf
mov
rol
bound
rcll
sbb
les
xchg
nop
je
fucomi
stos
xchg
sbb
sbb
loope
sbb
fs
jecxz
xlat
sarb
dec
pop
adc
iret
jne
ret
jg
out
fimuls
inc
aas
scas
mov
pop
sub
in
sbb
push
in
in
fidivl
cs
test
jmp
popa
mov
adc
push
in
fstps
out
or
loope
fwait
jbe
cmp
sub
adc
stc
stos
aas
push
adc
pop
out
pop
imul
or
add
mov
decl
test
jb
inc
aaa
popf
adc
sub
jae
mov
mov
loopne
test
xor
sub
icebp
scas
mov
jae
add
jne
ret
sbb
fnstcw
and
popa
xchg
movsb
mov
inc
sbb
lea
xor
add
adc
or
mov
adc
hlt
push
and
fwait
mov
sub
adc
bound
xchg
and
xchg
int3
mov
ret
cli
inc
les
dec
mov
cmp
sub
push
mov
sub
and
xchg
dec
stos
fs
cmp
inc
inc
andl
out
xor
lock
popa
and
push
or
aam
mov
push
imul
pop
mov
adc
loop
and
add
leave
or
pop
scas
mov
pop
push
inc
xor
push
pop
rcrb
xchg
daa
jo
es
sahf
push
sbb
and
pop
test
fs
shlb
movsl
lea
or
repz
sbb
inc
xchg
cld
inc
loopne
pop
add
cltd
jno
loope
inc
repz
sbb
pop
stos
fcom
idiv
imul
rcrl
dec
fs
push
adc
fcmovnb
push
fwait
mov
test
mov
mov
cmpb
pop
or
out
add
roll
dec
mov
xlat
fisttps
popa
cmp
xchg
and
roll
pop
mov
dec
loope
push
mov
rclb
inc
push
add
add
ficomps
call
loop
jle,pt
cmovae
adcl
scas
mov
dec
mov
fs
or
xchg
jle
adc
and
mov
xchg
jge
adc
ret
and
lret
dec
insb
pop
je
cmp
pop
ficoml
xchg
test
clc
icebp
adc
and
xchg
adc
adc
push
pop
xor
jg
aaa
xchg
add
push
loop
cmp
mov
leave
in
loope
loope
insl
mov
dec
nop
mov
cmp
inc
sti
push
xor
jg
mov
out
lds
jmp
sbb
popf
incb
in
xchg
popa
cmp
inc
add
pop
out
int3
test
gs
std
adc
or
mov
add
fwait
sbb
adc
sbbb
sub
loop
dec
jne
adc
sub
cmp
sub
push
and
add
jbe
enter
jo
jb
push
mov
dec
xchg
or
outsb
push
add
mov
xchg
cmpsb
and
add
xchg
arpl
test
pop
pop
pop
mov
mov
cmpsb
into
test
or
lahf
xor
popf
push
into
dec
lock
pop
ffreep
lret
mov
hlt
shlb
push
mov
arpl
into
lea
sahf
adc
fidivs
lea
fs
jno
adc
cmp
shll
or
jp
pop
pop
in
in
push
lods
dec
mov
daa
push
jno
cltd
aas
sub
xchg
mov
insl
cmpb
mov
mov
leave
inc
lock
sahf
enter
ret
lret
lcall
push
adc
push
xorb
rolb
inc
pextrw
jo
cmpsl
aam
or
or
out
jb
and
jecxz
pop
pop
xor
and
and
jno
pop
ljmp
pop
dec
push
jbe
adc
les
je
ljmp
loop
xor
jmp
jo
push
cli
cwtl
dec
ss
leave
fldcw
in
faddp
je
leave
mov
dec
loope
mov
push
push
adc
out
xlat
mov
pushf
add
sti
lods
out
cmp
fiadds
lds
push
out
mov
fidivrs
pop
daa
pusha
sub
popa
imulb
into
arpl
mov
shll
cld
outsl
pop
ljmp
movsl
adc
jne
mov
std
iret
loopne
cltd
mov
repz
cmp
cs
lods
or
dec
mov
stos
dec
xchg
pop
push
dec
dec
lods
add
xor
cmp
rcr
add
aad
shl
lcall
sub
lcall
dec
xlat
push
add
fxch
add
in
add
fsubl
popf
add
lahf
xchg
push
loope
shlb
mov
jmp
push
adc
js
or
xchg
mov
sbb
test
lcall
inc
jae
pop
pop
stos
cltd
push
pop
mov
sahf
cwtl
rcr
pop
jno
dec
andb
or
jae
movsl
adc
xor
xchg
jmp
pusha
bnd
mov
adc
pop
or
das
add
mov
cmp
aad
pusha
xchg
ficoms
cmp
mov
imul
fsubl
loopne
cmp
pop
dec
mov
imul
js
or
mov
dec
aas
clc
jbe
lds
adc
addr16
movsl
and
jb
mov
lret
cmp
mov
ficoml
adc
es
push
xchg
add
push
movsb
stos
push
dec
mov
pop
pushf
push
outsl
mov
enter
mov
and
xchg
mov
nop
loopne
cmp
shlb
ret
imul
fsub
mov
xor
push
in
daa
mov
test
jmp
inc
mov
and
scas
outsl
popf
sbb
jne
gs
lea
sbb
mov
les
pop
repnz
jecxz
cmp
or
loopne
rol
cmp
ret
or
iret
add
iret
out
mov
mov
inc
jge
sbb
cmp
adc
cmpsb
xchg
vmovhpd
cmp
xlat
pop
push
xor
iret
mov
mov
mov
es
push
inc
sub
ret
out
call
mov
hlt
add
mov
into
jg
adc
pop
pop
adc
add
shrb
add
mov
push
cmp
xchg
xchg
inc
lods
pop
pop
push
add
in
push
movsb
bswap
into
mov
out
mov
jne
movl
add
mov
das
mov
sarl
cltd
daa
mov
cmpsb
rorl
push
and
dec
sbb
out
mov
fidivrs
mov
jae
js
jnp
fisttpl
push
or
cmp
in
mov
adc
loopne
in
adc
xor
push
cs
loope
adc
cmp
push
mov
ss
adc
push
out
mov
pop
jb
and
adc
add
mov
xor
add
nop
jae
dec
orb
add
jecxz
mov
daa
cmpb
aas
iret
jmp
jmp
adc
scas
frstor
lods
mov
or
cmp
ret
push
add
mov
mov
sarl
and
mov
dec
cld
cwtl
popa
jae
push
int
push
mov
jmp
pop
imul
sub
mov
pop
fidivs
loop
mov
outsl
push
into
cmpl
call
xor
pop
jmp
pop
jmp
outsl
jmp
add
test
mov
push
xlat
fstpl
mov
inc
xchg
adc
jno
or
jno
jle
inc
mov
and
and
enter
ss
mov
push
mov
shrb
cwtl
xchg
xchg
sub
ret
divl
loopne
fdiv
shrl
inc
test
lock
or
dec
leave
sbb
inc
or
in
cld
pop
jle
cld
in
add
inc
lcall
mov
ror
or
in
outsb
mov
std
push
lods
cs
outsl
add
sbb
push
data16
ljmp
pop
cmp
inc
cs
jns
xor
pop
fwait
clc
mov
pop
test
out
sub
mov
push
push
in
sti
jle
dec
dec
imul
ja
inc
pop
addr16
fwait
mov
int
sub
loop
adc
jnp
adc
sbb
sbb
loop
jecxz
pop
fnstenv
cmp
xchg
inc
das
mov
xchg
inc
testl
mov
xor
in
jmp
adc
and
sbb
adc
idivb
add
into
jl
push
pop
popa
aas
sti
icebp
lret
xchg
hlt
sbb
push
mov
leave
lods
cld
pop
add
int3
iret
aam
pop
fwait
mov
mov
movsl
or
testb
movsl
fdiv
xlat
push
loopne
popa
jle
addr16
jmp
fcmovu
cmpsb
call
test
jle
and
inc
xchg
dec
pop
stos
ret
xor
pushf
pop
cmp
cmp
adc
mov
xchg
sti
into
mov
les
add
pusha
lahf
xor
lock
mov
cmp
or
mov
xchg
test
fsubs
mov
imul
in
inc
jg
add
add
aam
adc
pop
add
mov
sub
dec
xchg
inc
mov
adc
jg
jmp
fistpl
fwait
daa
inc
fs
repz
es
add
push
shll
mov
aad
jbe
imul
cmpsl
mov
pop
idivl
mov
push
push
iret
inc
aaa
adc
inc
and
adc
push
jp
xchg
and
and
pop
xchg
mull
aam
call
adc
jle
mov
loop
pop
clc
mov
or
daa
inc
adc
sbb
dec
cli
out
mov
loopne
pop
ror
add
inc
outsl
sbb
add
sbb
bound
mov
inc
cmp
xorps
sahf
aaa
or
adc
or
pop
scas
stc
inc
jle
dec
mov
sub
xchg
sbb
mov
stos
rolb
mov
xlat
xchg
pop
aad
adc
mov
adc
mov
pop
in
add
sub
data16
adc
fs
test
pop
mov
mov
arpl
mov
insl
insb
loopne
inc
popa
push
adc
les
inc
mov
mov
loop
lcall
sbb
or
sub
test
or
fiadds
lds
jne
dec
cltd
in
sbbl
mov
sub
xchg
cmp
xor
jmp
mov
mov
mov
xor
pusha
fisubs
push
lcall
xchg
inc
dec
mov
push
mov
xchg
mov
lahf
sub
mov
add
and
xor
pop
shlb
mov
in
and
clc
mov
or
call
or
mov
fcmovnu
loope
push
in
inc
xchg
adc
sahf
jnp
sbb
xor
cmp
repnz
dec
mov
push
ja
or
push
ss
mov
stc
dec
jmp
xchg
sbb
sbbl
jo
push
or
les
xchg
push
mov
js
cmp
loopne
add
aad
mov
mov
adc
clc
lds
push
dec
mov
xchg
aas
hlt
mov
cmp
inc
add
popf
ds
lret
push
ss
mov
repz
xlat
data16
dec
xchg
and
dec
mov
pop
push
shl
std
xchg
inc
outsl
loop
mov
and
imul
hlt
adc
cwtl
test
rcl
jecxz
pop
mov
inc
mov
les
mov
mov
test
fnsave
push
mov
cld
xor
test
inc
adc
mov
inc
add
xlat
xorl
lock
mov
mul
and
pop
ret
adcb
test
add
sbb
and
fldenv
or
push
lahf
fsts
clc
repnz
cmp
jb
pushf
push
cmpsb
xor
push
stos
push
mov
daa
mov
enter
cmp
aaa
add
js
ret
movsl
stc
in
aas
xlat
outsb
sbbb
add
push
pop
pop
mov
out
sbb
test
cli
inc
jo
lret
mov
cmp
out
dec
stos
lahf
pop
fidivrs
dec
je
insb
hlt
imul
repz
and
sub
data16
hlt
stc
jge
pop
sub
mov
loopne
xor
adc
dec
mov
push
add
pusha
inc
stc
lret
jge
cmovae
adc
aaa
push
out
dec
in
mov
jmp
enter
jns
ds
imul
xlat
aaa
dec
sub
add
sbb
adc
test
bound
popf
clc
loope
or
int3
xor
sub
movsl
daa
ds
sti
mov
mov
xchg
subl
pusha
lods
push
data16
xlat
pop
push
add
add
shll
sub
add
push
sbb
out
outsl
adc
xchg
jle
je
dec
gs
inc
xor
mov
icebp
jo
lret
clc
push
ror
mov
xor
test
ds
mulb
xorb
jge
push
xor
pop
arpl
inc
test
push
int
loop
adc
movsl
mov
add
mov
cwtl
in
mov
pop
inc
jmp
lods
xor
jmp
mov
lock
cmpsl
add
mov
lret
adc
rcr
inc
sbb
icebp
and
in
ljmp
pop
add
gs
movsl
dec
das
lret
mov
sbb
loop
xor
mov
xorl
outsb
in
push
mov
jge
daa
pop
xchg
jae
push
or
push
sub
or
out
pop
mov
in
leave
imul
ret
or
test
pop
adc
aaa
sti
jle
push
and
pop
and
push
add
enter
dec
push
jp
pop
mov
push
test
roll
mov
xor
or
jmp
add
mov
pop
pop
push
xchg
sahf
mull
mov
arpl
cmp
pop
pop
push
pop
adc
cmpsl
sbb
jne
xchg
cmpsb
xchg
jg
je
pop
cs
and
add
imul
cmp
sub
fnstcw
sbb
sbb
or
mov
push
xor
stos
pop
push
loope
cmc
dec
adc
or
pop
sbb
outsl
adc
addb
insl
loopne
jmp
enter
sbb
repnz
adc
aas
push
xchg
pushf
sahf
mov
sti
fiaddl
lret
fldl
loopw
jmp
xor
jg
ss
mov
shl
fcoms
pop
mov
hlt
and
or
lock
sbb
jmp
sub
push
test
cmc
and
fdivp
lcall
scas
fisttpl
leave
in
dec
jp
pop
scas
pop
push
inc
hlt
jecxz
shl
jecxz
jmp
add
nop
xor
xchg
push
mov
dec
xorb
cmp
lret
adc
mov
bound
out
inc
mov
fs
push
and
sbb
lea
jge
mov
push
cld
pop
mov
pop
leave
lea
mov
add
std
sbb
add
mov
mov
add
push
mov
stc
and
pusha
test
sti
cmp
gs
inc
jmp
xor
addr16
ficomps
mov
and
imul
mov
push
mov
xlat
rcl
repz
fs
es
push
jo
xchg
and
add
into
mov
add
cli
cmp
ret
lea
mov
xor
aaa
es
lret
push
push
pop
adc
cmp
lahf
inc
pop
and
sub
and
dec
pop
es
scas
cmp
shll
mov
inc
mov
aas
fucomi
jg
pop
repz
push
pop
xchg
repnz
orl
cmpsl
push
jne
rolb
adc
je
fidivrs
push
test
into
xor
fwait
aad
xchg
push
je
push
adc
cmp
mov
loope
adc
in
mov
sbb
icebp
rcrl
and
xchg
push
fwait
jns
push
nop
jb
dec
out
loopne
push
lock
jo
xchg
cmp
adcl
mov
adc
or
and
and
push
or
sbb
mov
out
shl
out
popa
inc
dec
js
out
insb
xor
pop
pop
pop
std
rorl
push
cmpl
xchg
fisubl
in
pop
jmp
clc
mov
andl
test
hlt
ror
pop
inc
adc
sbb
add
inc
lea
add
jnp
jg
dec
mov
incb
repnz
test
jns
sub
sub
cmp
xor
ficoml
inc
lds
pop
loope
movsb
lea
inc
sbb
iret
repz
ljmp
loope
mulb
jle
sub
nop
cmp
cmp
stc
and
pop
js
xlat
lcall
mov
insl
or
jns
mov
lcall
mov
cld
cmc
inc
jmp
sub
push
mov
xor
cld
scas
xor
dec
fimull
xor
mov
jmp
push
cmp
ds
mov
sub
mov
push
dec
imul
cmc
cmp
scas
hlt
test
movb
lret
xchg
mov
and
mov
add
fsubrl
sbb
xlat
xchg
ds
cmc
leave
jge
or
dec
insb
mov
xor
std
adc
daa
jmp
pop
pop
outsl
cmp
das
inc
dec
jmp
in
push
mov
or
out
negb
pop
mov
popa
testl
loope
pop
mov
cmp
mov
pusha
inc
fbld
lcall
add
bnd
mov
mov
dec
pop
cmp
fsubr
xchg
mov
js
mov
icebp
xchg
call
xor
adc
adc
icebp
pop
lock
mov
cmpb
loope
sbb
shll
mov
cmpsl
push
loope
std
insb
shlb
iret
test
nop
ljmp
out
adc
sub
hlt
cld
test
fwait
sub
xlat
mov
inc
add
aas
xchg
inc
xor
in
outsb
cld
inc
xor
cmpsl
dec
addr16
lock
xor
mov
rcrl
add
lret
cmpsb
jae
fidivrl
xor
jbe
lods
mov
ja
cld
jp
dec
cmp
int
xor
mov
jo
add
jecxz
jmp
adc
push
adc
inc
pop
fmull
mov
jmp
das
int3
fs
clc
pushf
jge
sbb
aam
mov
stos
mov
sbb
or
xchg
sub
sub
jmp
repz
pusha
iret
adc
lea
jmp
sti
test
out
xor
rclb
mov
ds
jnp
outsb
xchg
scas
jnp
and
inc
stos
inc
cmp
dec
xchg
stos
testb
and
out
lea
mov
in
and
aam
push
shl
dec
rolb
lods
lahf
pop
sti
into
test
and
test
dec
inc
lret
mov
clc
das
push
lcall
notb
add
xchg
neg
js
cli
or
push
imul
cmp
loopne
movsl
pop
sbb
lods
mov
sbb
mov
cltd
stc
dec
aad
mov
xlat
jo
or
scas
aas
mov
sub
std
ljmp
lds
call
xchg
mov
test
adc
sub
jecxz
xchg
fldcw
cld
imul
dec
std
out
mov
imul
fsts
subl
in
idivb
pop
into
push
mov
sub
mull
xchg
in
popa
dec
xchg
jge
pop
mov
jp
push
add
adc
popa
fidivrl
push
fcoms
mov
lock
inc
pop
cs
aaa
mov
dec
jns
xchg
sub
cmp
stos
cwtl
lock
aas
xor
in
lods
ds
sbb
imul
mov
fisttpl
push
repz
mov
nop
lods
xchg
mov
pop
sti
dec
pop
fistpl
mov
fs
mov
les
outsb
in
push
xor
in
cwtl
fmuls
outsl
cmc
arpl
dec
lahf
aas
and
mov
mov
and
inc
cli
incl
lds
adcb
out
ss
repz
mov
aaa
sbb
xlat
sub
jnp
out
subl
pop
int3
popa
es
hlt
inc
or
inc
lds
xor
ret
sub
xchg
xchg
cmp
fsts
adc
xchg
xor
stos
mov
subl
cmp
shlb
sahf
aas
aam
or
lock
incb
int3
pop
inc
rcrl
adc
lcall
jecxz
push
aad
or
test
pushf
stc
adc
cmp
or
and
mov
sahf
cmp
stos
mov
fmull
jg
repnz
xchg
adc
pop
push
add
xchg
dec
fs
rcr
pop
in
jp
sbb
lods
movl
jo
cmp
bnd
sbb
mov
add
xchg
mov
addl
out
dec
mov
pop
mov
popa
mov
pop
roll
lods
jnp
fcmovne
jmp
ret
fwait
mov
fisttps
mov
or
mov
jnp
aam
dec
cltd
in
sub
hlt
add
js
jmp
sub
fdivl
inc
out
stos
cmp
inc
jecxz
fsubrl
test
sahf
sbb
dec
fsubrp
sbb
lahf
outsb
add
js
push
add
jmp
je
adc
push
cmc
decl
inc
sbb
mov
scas
xorb
mov
jb
cwtl
les
idivb
adc
mov
aam
mov
sub
mov
sub
or
cmpsb
aas
in
out
pop
nop
xchg
inc
das
push
popa
push
mov
push
jns
push
pop
dec
push
lods
das
jecxz
inc
cli
cmp
jbe
mov
push
and
daa
pop
scas
push
sbb
mov
pop
andl
in
push
dec
mov
jmp
fstps
mov
fdivs
push
mov
and
and
ret
aaa
add
lret
mov
mov
push
jnp
jbe
jb
shrl
xor
xor
add
adc
mov
adc
dec
out
push
and
stos
outsb
mov
dec
and
mov
leave
sub
ss
add
movsb
xchg
adcb
mov
dec
stos
jl
sub
mov
add
ret
cmpsb
push
xchg
inc
mov
inc
loope
jns
aas
movsb
hlt
mov
push
push
cs
add
lods
xchg
mov
bound
pop
jbe
sbb
inc
and
mov
out
dec
inc
inc
es
push
movsb
push
pop
roll
mov
insb
loopne
and
jnp
jns
fidivrl
daa
adc
xchg
sbb
test
xor
daa
mov
and
addl
lretw
dec
jl
hlt
add
xor
mov
adc
aad
invd
xchg
inc
inc
sahf
loope
shll
idivb
movsb
xchg
dec
rcr
outsb
jg
fdivs
cmp
jp
jecxz
scas
push
jo
push
popf
inc
pop
adc
pusha
repz
ljmp
jg
sbb
ljmp
xlat
repnz
push
and
rcrl
pop
movsl
lcall
fnstsw
cmp
movsb
movsb
sar
or
mov
pop
or
mov
pop
jno
mov
jmp
sbb
adc
push
popa
jnp
jae
lret
xor
cld
mov
addr16
int3
dec
adc
dec
sarl
and
sbb
push
mov
cmp
jl
outsl
lcall
cmp
cmp
mov
inc
fnstcw
lret
dec
in
bound
fnstcw
jbe
jp
testl
cltd
mov
mov
ror
mov
lcall
insl
ja
or
loopne
push
sbb
ret
imul
xchg
jne
mov
ds
daa
xor
lea
stos
jle
jae
gs
test
pushf
popf
mov
inc
mov
mov
fcmove
mov
mov
movsb
jmp
pusha
mov
sbb
popf
jmp
popa
mov
jo
push
clc
fsts
scas
adc
pop
dec
xchg
push
daa
cmp
mov
inc
mov
pop
stc
xchg
xchg
sub
mov
xchg
lret
add
mov
dec
outsb
and
scas
shrl
scas
vpackssdw
fwait
sub
out
out
iret
jmp
xchg
inc
mov
add
jo
fcmovb
mov
sub
lds
inc
hlt
push
aam
leave
xchg
std
dec
cwtl
xor
mov
outsb
mov
enter
or
lcall
in
xor
sbb
adc
or
ljmp
mov
sbb
inc
adc
ret
inc
jg
ss
pushf
and
inc
rorb
in
and
cwtl
fisttpl
mov
je
stos
mov
jno
and
popf
add
dec
incl
mov
sbb
lret
stc
xchg
rcl
scas
adc
cmp
or
js
aam
data16
pop
and
sbb
sbb
int
lret
mov
stos
add
sub
and
movl
push
add
mov
and
push
pusha
mov
add
and
leave
test
xchg
es
rolb
out
jbe
arpl
mov
out
add
add
mov
adc
inc
inc
jle
movsb
xor
fbstp
push
fwait
jg
mov
testb
jns
lret
jecxz
cmp
push
jno
dec
sbb
gs
ljmp
sti
popa
cs
xchg
add
into
and
sahf
lea
in
fsts
cmp
scas
push
push
lret
push
fnstcw
mov
pop
lret
lret
jne
cli
push
shrl
sbb
xlat
loop
ror
xor
adc
in
or
adc
cmpsl
nop
repz
mov
jae
mov
into
mov
lock
das
add
int3
stos
add
push
mov
mov
cmpl
into
ficomps
leave
or
je
xchg
adc
dec
dec
pop
mov
and
add
or
push
jnp
aam
xchg
inc
leave
faddl
popa
call
ljmp
orl
jne
bound
and
lds
fs
jp
cmp
lock
dec
dec
dec
dec
dec
out
fcoms
ja
iret
sbb
inc
ds
out
jo
push
mov
aad
lret
in
jns
out
cmp
loopne
cwtl
popa
test
call
push
add
shll
dec
roll
mov
sahf
roll
mov
mov
pop
add
pop
mov
ds
push
mov
mov
aas
or
loop
cmp
lcall
cld
out
loopne
sbb
mov
scas
test
xchg
out
pop
sub
fiaddl
stos
sbb
sub
cmpsl
fsubl
dec
fs
pop
mov
lods
dec
push
add
add
fnstsw
cld
lods
jl
mov
pop
popa
jmp
scas
push
pop
push
or
sub
mov
pushf
sub
cmpsl
in
cld
or
xor
push
jae
sbb
mov
lds
dec
cwtl
add
cs
mov
mov
push
dec
push
das
push
lret
inc
fs
push
sahf
inc
mov
xchg
popf
out
fistpl
sbb
mov
popf
adc
hlt
xor
fmul
cmp
pop
popf
mov
stos
cmp
mov
je
mov
jne
in
cmp
xor
das
in
add
jb
xor
andb
pushf
or
aas
mov
mov
mov
mov
add
push
pop
add
mov
cmpsb
lret
add
in
mov
xchg
mov
in
xchg
xchg
adc
lods
adc
pop
test
lahf
cltd
mov
mov
fisubrl
psllq
jecxz
inc
jne
fists
jbe
sbb
out
adc
lahf
sahf
push
mov
add
lea
nop
sbb
ret
push
xlat
in
sub
adc
lahf
jae
and
jne
lcall
sahf
psraw
lcall
dec
subl
adc
bound
inc
xchg
out
pop
sub
ret
cmpsb
dec
sub
loop
stos
adc
fisubrl
sub
push
lcall
pop
leave
insb
adc
repz
sub
fcmovnb
lahf
popa
cmc
fiadds
daa
pusha
jbe
popa
pop
imul
push
mov
inc
rcrl
aam
icebp
push
fidivs
mov
je
std
cmp
es
cmp
incb
add
lods
sub
mov
fwait
nop
add
push
mov
mov
push
pop
pusha
inc
push
ja
push
ret
add
cli
loop
outsl
cmp
scas
mov
fdivl
adcb
push
and
enter
jne
stos
adc
enter
mov
add
imul
jne
fistl
lods
and
xlat
test
test
or
hlt
jge
mov
mov
in
cmpsb
out
xor
mov
and
mov
scas
out
xlat
adc
and
rcrb
add
dec
lret
or
movntps
sbb
js
and
sbb
cmpsb
rorb
addr16
push
enter
mov
movsb
lods
inc
inc
sbb
adcl
test
push
pushf
jg
je
pusha
movsl
xchg
bound
loope
insl
iret
ljmp
dec
popf
mov
pusha
dec
adc
jae
jne
jbe
jle
push
mov
inc
jl
aaa
in
shl
jno
aas
inc
or
jno
dec
mov
cmp
scas
sti
clc
jg
jg
icebp
enter
xor
movsb
jg
or
pop
out
sbb
push
loop
daa
cmp
mov
fmull
pop
mov
add
lds
in
pop
push
jno
xchg
adc
js
push
add
std
mov
or
and
cmpsl
lahf
push
aaa
inc
sub
jl
sbb
adc
and
xchg
pop
dec
push
adc
lret
into
loope
es
pop
movsb
mov
xor
popf
add
or
and
cs
lock
inc
and
or
jecxz
xor
andl
mov
movb
push
dec
lods
and
jb
in
lea
xchg
sub
adc
push
aad
mov
sbbl
cli
and
and
mov
xchg
jnp
test
outsl
push
shlb
adc
clc
pop
repz
aas
jo
enter
repz
dec
inc
push
bnd
jnp
das
mov
lock
aad
inc
icebp
push
popf
test
mov
out
movsl
mov
std
xchg
lahf
push
es
mov
and
jmp
xchg
in
cmpsl
push
repz
sub
cmp
cmp
dec
lods
outsb
in
xchg
xor
pop
cmp
inc
mov
clc
pusha
scas
jae
sbb
fisttps
jno
push
nop
sti
mov
push
xchg
lods
bound
xchg
xor
scas
mov
lret
xacquire
fwait
ljmp
les
das
sub
nop
add
and
add
ret
test
outsl
mov
adcl
xor
aaa
add
xchg
mov
fsubrl
call
gs
xor
add
shll
push
loopne
cltd
outsb
ja
stc
popa
hlt
sbb
sti
and
pushf
sbb
icebp
shll
clc
cwtl
imul
xor
pop
lret
int3
dec
or
add
xchg
test
jno
pop
adc
daa
add
sarb
xor
cwtl
jns
lock
lcall
mov
gs
stos
inc
mov
cs
sbb
mov
mov
and
dec
push
notl
push
stos
sahf
fdiv
mov
clc
lret
rcr
mov
addb
sahf
pop
mov
call
mov
inc
imul
mov
arpl
push
dec
popl
xor
jae
gs
pushf
add
and
out
in
pop
cmp
dec
les
test
pop
loope
push
xor
inc
out
loop
mov
or
or
scas
push
jbe
push
clc
jge
xor
sub
xchg
jnp
add
lret
loop
repnz
mov
out
cmp
adc
xchg
outsb
ss
push
mov
rcrl
mov
fnsave
call
mov
test
adc
lds
adc
mov
mov
lock
lods
stos
adc
jns
addr16
mov
dec
test
clc
jae
jp
stos
loope
push
pushf
add
inc
cmp
jmp
sub
shrb
xchg
mov
dec
lahf
xor
scas
out
repnz
sub
cld
lods
nop
jge
enter
xor
inc
out
lcall
test
and
cwtl
int3
mov
ds
dec
xchg
int
ds
and
xor
lcall
adc
jle
hlt
out
mov
xchg
insl
pop
sbb
shll
add
cmp
cwtl
and
frndint
jmp
int3
aaa
xor
into
pop
rol
inc
js
mov
push
lahf
add
stos
push
cwtl
mov
jb
in
jg
repz
adc
bound
add
je
adc
cltd
loopne
xchg
and
push
fs
jecxz
iret
xor
push
pop
mov
xchg
nop
jno
fidivs
mov
jle
adc
mov
or
clc
inc
dec
lret
or
dec
adc
mov
repnz
sub
sbb
in
cld
das
arpl
jg
es
js
fldcw
ret
stos
jle
imul
imul
pop
cmp
add
mov
pop
sbb
adc
jae
aas
in
dec
push
add
stos
filds
inc
jo
mov
lahf
fdivrs
sahf
insb
pop
pop
sbb
daa
jb,pt
and
push
aad
aam
sbb
sbb
bound
movsb
xchg
ja
pop
pop
jecxz
mov
arpl
sahf
xor
jl
or
das
mov
or
dec
push
das
aad
popf
lahf
or
shr
jbe
aam
xor
inc
rol
xor
cmp
fisttps
mov
mov
xor
addr16
mov
loop
rcll
and
je
nop
pop
js
shlb
scas
and
or
scas
insl
xor
popa
test
aam
aad
rcr
cmp
pushf
jae
stc
imul
fmul
imul
xor
ds
add
xchg
jo
cwtl
fcmovnbe
sub
adc
ja
addr16
cli
push
cmp
xchg
jae
or
jmp
lds
test
dec
in
xchg
xor
pop
imull
dec
xor
adc
pop
push
push
adc
repnz
and
adc
push
inc
or
dec
cmp
cmp
jp
xchg
rolb
test
in
mov
test
addr16
repnz
xchg
mov
cltd
and
leave
stos
test
pop
jmp
add
pop
subl
mov
ljmp
add
fwait
mov
in
push
leave
bound
adc
push
cmp
dec
data16
push
pop
popw
inc
pop
insl
sar
jmp
push
ss
stos
jmp
xor
inc
call
sbbb
inc
sub
test
aam
jmp
push
adc
mov
mov
adc
xchg
mov
std
cmpsb
into
inc
add
stos
addr16
popa
dec
cmp
mov
addr16
push
jp
xchg
ja
add
pop
or
lds
push
sub
jge
and
outsb
cmp
fcom
jne
pop
mov
sbb
cld
leave
and
cs
repnz
aam
mov
out
fiaddl
imul
jecxz
sub
mov
sub
hlt
push
cli
out
out
sbb
movsl
fdivrl
mov
rorl
test
test
fistl
sbb
add
adc
jbe
adc
outsl
mov
enter
cmpsb
mov
movl
push
add
pop
sub
jno
and
ret
cmp
outsl
outsb
lock
sbb
shufps
sub
dec
or
rcr
xor
es
cmp
cltd
ror
jmp
insl
pushf
pop
mov
xchg
mov
and
and
mov
movzbl
push
jle
xchg
imul
add
outsb
fldl
pop
ret
cmc
aad
xor
cli
xchg
out
jmp
mov
xchg
xor
testl
sub
sbb
pop
pop
jno
sbb
push
jbe
xor
add
bnd
jns
enter
mov
sbb
mov
enter
cld
insl
div
insb
or
xor
mov
pop
inc
xlat
call
insl
mov
popl
cmp
insl
xchg
sbb
cs
mov
gs
xor
sub
jo
mov
push
pop
add
in
hlt
out
ficoms
movups
pop
xor
mov
out
mov
xchg
mov
xchg
push
andb
jle
push
addb
ljmp
mov
xchg
mov
or
or
dec
push
jae
inc
into
lea
push
lret
sub
jmp
mov
out
pop
jecxz
orl
aam
push
inc
or
jp
lock
cmp
fcmovb
cmp
stos
jle
cmp
jne
xor
roll
push
dec
lret
jmp
and
daa
scas
loopne
shlb
shl
cld
addr16
mov
in
scas
mov
in
dec
leave
and
movsl
and
push
adc
jle
mov
aas
das
addr16
jecxz
daa
xchg
stc
or
repnz
cmc
xor
inc
out
mov
xor
dec
and
ret
adc
cmp
sbb
jle
movsl
cs
stos
pop
movsb
cmp
aad
lock
mov
add
mov
outsl
out
addr16
cmp
add
fucomip
mov
mov
mov
movsb
add
or
inc
mov
sub
clc
fmuls
mov
mov
stos
xor
sub
pop
aas
ds
mov
fbstp
xor
mov
xor
sbb
pop
testb
loope
mov
aas
jbe
dec
scas
popa
jno
in
es
fldt
sub
xor
rolb
outsl
dec
jmp
int3
mov
idivl
int
into
cmp
xchg
ret
xchg
enter
dec
aam
test
stc
adc
movsb
xchg
sub
aaa
sti
cmp
stos
and
push
and
scas
mov
setle
test
mov
adcl
inc
cld
jmp
test
outsb
data16
cmp
nop
jecxz
pop
je
dec
adc
scas
xchg
xorl
and
or
pushf
fxam
cmpl
into
lcallw
dec
jb
insb
inc
lret
sub
out
shl
into
mov
inc
in
xchg
or
push
dec
in
cmp
insb
pop
bound
pop
cmp
sub
hlt
pusha
pusha
sbb
in
fadd
inc
inc
mov
data16
add
out
cltd
outsl
push
mov
inc
aad
nop
push
orb
arpl
push
adc
stos
push
das
shr
je
inc
adc
bound
mov
ds
sbb
loopne
jmp
dec
cmpsl
add
scas
sahf
pop
scas
mov
xor
or
jae
xchg
cwtl
xor
inc
cli
hlt
push
cltd
stos
js
test
add
or
js
lods
ds
mov
and
mov
or
xchg
rolb
popl
divl
adc
push
and
add
sbbb
xchg
or
ljmp
pop
stos
adc
inc
loopne
add
aad
sahf
daa
adc
sbb
push
and
cmp
push
cmp
les
fsubr
mov
lds
sahf
adc
push
cmp
mov
inc
cmovns
dec
adc
push
xchg
fcomps
mov
and
fwait
and
ror
shrl
push
iret
dec
adc
add
inc
push
cmpsl
mov
pop
test
pminub
pop
jne
sbb
mov
loop
adc
push
and
pop
lret
sub
cld
dec
cmpsl
add
cli
or
cmp
test
adc
leave
and
jo
dec
decb
andb
scas
mov
jecxz
xor
mov
test
idivl
hlt
xchg
sub
sti
xchg
and
rcll
outsl
push
into
cmpsb
adc
mov
out
movsl
mov
mov
xchg
sbb
sbbb
xchg
or
repz
mov
icebp
mov
xchg
pop
mov
xor
sub
pop
pop
fcmovnu
or
pop
pusha
pushf
lods
xor
and
push
adc
pop
jecxz
sbbb
xchg
pushf
pushf
stc
jmp
fwait
dec
fsts
jp
dec
push
add
inc
sbb
adc
sub
jmp
jle
inc
data16
mov
mov
gs
icebp
lods
cmpsl
leave
out
sub
xchg
push
jle
bound
pop
push
inc
xchg
mull
xor
mov
cmpsb
mov
rol
lds
out
mov
loop
and
out
xchg
ja
scas
cmp
sarb
or
jnp
mov
int3
and
add
arpl
fsubrs
mov
stos
pop
push
hlt
fwait
ljmp
mov
gs
mov
xlat
ficoms
and
xor
insl
xchg
push
cmp
sbb
xchg
mov
add
shll
scas
inc
in
out
mov
pop
mov
inc
inc
push
xor
cmp
push
in
jg
sub
mov
mov
xchg
ret
jg
fs
mov
jb
jmp
aaa
fcomi
mov
cmova
dec
cmp
sbb
repnz
dec
mov
not
and
repz
fcomps
in
scas
push
push
cmp
adc
aaa
cmp
scas
mov
addr16
ja,pt
push
dec
scas
ljmp
mov
lock
dec
js
push
push
pop
jg
jp
cmp
sub
sti
rolb
mov
stos
push
jl
loopne
add
test
adcb
aad
push
sub
jo
push
mov
inc
jae
call
aad
sbb
shlb
inc
jo
adc
jnp
cs
dec
sbb
shrl
lcall
data16
push
xor
punpckhwd
or
pop
jl
sbb
sbb
push
inc
xchg
into
test
rclb
cmp
inc
adc
iret
sti
testb
jns
jmp
outsb
lock
fwait
rolb
lret
pop
fistpll
into
out
pop
push
push
gs
dec
xchg
enter
rcrb
xchg
nop
xchg
sbb
xchg
xchg
ret
pushf
and
ret
sub
dec
mov
lods
in
test
dec
mov
adc
adc
fstps
in
loope
pop
inc
bound
out
fisttpl
xor
aas
and
orps
stos
loope
dec
cmp
in
mov
pop
cwtl
mov
jg
fdivrl
mov
mov
or
push
cs
and
mov
in
sub
lods
ljmp
mov
test
test
mov
pop
dec
daa
mov
aad
pop
out
test
push
cli
scas
push
jp
subb
movsl
cmp
inc
cmp
outsl
ljmp
idiv
mov
mov
movb
jecxz
fwait
rol
add
inc
sbb
sub
push
jle
inc
decl
orl
loop
lea
mov
rorl
push
adc
pop
mov
aas
dec
xlat
jne
jns
mov
xor
cltd
and
pop
xor
mov
cmpsl
mov
mov
addr16
scas
adc
stos
lock
sub
push
scas
cmpsb
sbb
xchg
mov
orl
sti
test
loope
mov
push
cmp
sub
inc
push
ljmp
fistps
jp
ror
lret
jo
scas
dec
call
dec
int3
adcl
pop
das
push
or
pop
ret
adcl
mov
cmpsl
push
ja
pop
mov
rol
or
gs
std
jns
scas
sub
out
jne
adc
sti
and
mov
gs
addr16
jmp
dec
xor
jmp
mov
pop
ds
test
imul
add
push
lock
jle
dec
xchg
add
enter
or
idivb
inc
or
mov
mov
lret
jae
jnp
push
pusha
hlt
test
test
add
rolb
je
or
lret
fdivs
add
jmp
adc
pop
jno
stos
dec
and
sub
mov
cmp
inc
jns
mov
inc
movsb
jecxz
data16
or
shr
jg
sbb
jns
popf
imul
in
push
fdivl
add
xor
je
mov
ret
std
inc
jmp
lds
stos
repz
lock
jl
ja
int3
or
pushf
inc
mov
fmuls
shrb
pop
cmp
pop
stos
jne
pop
loop
cwtl
xorb
insb
push
cld
out
imul
out
mov
rcl
cltd
adc
iret
xsave
sarl
push
and
mov
push
movsl
mov
mov
mov
pop
adc
cmp
sub
ljmp
loopne
pop
mov
mov
mov
adc
mov
cmpsl
inc
dec
jns
xchg
in
test
int3
xchg
push
push
lock
insb
movsl
arpl
push
imul
jmp
mov
fnstenv
adc
cmp
shlb
out
scas
cmp
cmp
mov
imul
sub
fsubrs
xor
or
fmulp
stos
sbb
push
mov
xchg
adcl
mov
movsl
jle
dec
adc
mov
jl
or
into
loopne
dec
push
ds
ja
inc
xchg
je
lock
ficomps
mov
test
popa
icebp
lods
adc
lods
aad
data16
jnp
xchg
mov
pop
mov
out
jle
mulb
mov
pop
je
or
fdivr
add
add
scas
mov
xchg
inc
daa
dec
adc
sti
inc
ds
aas
js
cmp
xchg
leave
clc
or
cmp
cmpsl
push
sub
and
jbe
clc
push
push
sub
lods
and
loope
ficompl
xor
cmp
fdiv
repnz
stos
dec
jecxz
inc
cmc
popa
pushf
mov
sub
cmp
push
xchg
test
pusha
rclb
push
add
in
filds
shll
jp
adc
bound
loope
fdivrp
push
sbb
jp
cmp
sub
test
hlt
mov
rcrb
xchg
xchg
div
inc
add
and
out
adc
add
mov
dec
xor
pop
nop
fwait
arpl
outsl
aad
adc
lds
and
cli
fnstsw
xor
or
in
adc
push
jl
pmaxsw
push
or
jp
push
sub
mov
stc
test
loop
int
cmp
mov
push
pop
and
test
or
out
in
sub
mov
clc
fs
and
sub
mov
into
sbb
jno
insl
aaa
fcompl
aaa
pop
sub
xor
mov
adc
xor
xchg
pop
and
movsb
sub
pushf
xchg
xor
mov
insb
mov
in
je
pop
testl
inc
xchg
push
aas
inc
fbstp
inc
and
bound
xchg
xchg
cmpsb
and
aas
ret
push
fnstenv
mov
pop
sbb
test
dec
fldt
pushf
adc
insb
shrb
inc
xor
mov
jno
mov
mov
pop
loopne
add
jg
sbbb
cmp
inc
cwtl
leave
scas
fldenv
xchg
mov
jg
add
and
xchg
jne
dec
mov
mov
sub
or
jp
xchg
mov
push
jecxz
mov
int3
push
and
dec
pop
mov
out
push
xchg
ret
addr16
xor
xchg
pop
inc
pusha
in
jne
or
insb
clc
push
mov
hlt
dec
je
out
sub
inc
aam
std
fucomp
lods
js
push
ret
jo,pt
sub
shlb
icebp
inc
das
std
or
out
inc
lret
lret
lcall
mov
or
inc
adc
rol
lcall
sbb
icebp
ret
add
mov
push
add
or
in
inc
popa
out
loope
leave
push
jnp
jge
sbb
stos
ss
outsl
mov
lret
push
jecxz
push
cmp
movsl
iret
jge
outsb
insb
fsubl
cmp
xchg
push
mulb
and
xchg
sarb
jno
pop
adcl
imul
sbb
test
cmp
daa
popf
repz
loope
add
je
lds
lahf
sbb
mov
and
outsl
pop
inc
sub
ror
addl
xchg
jbe
jae
shll
les
pop
mov
cmp
or
sbb
jns
imul
loope
imul
push
mov
or
xor
push
aaa
out
mov
sbb
pop
stos
cli
imul
jp
cmp
cmp
rol
fiaddl
popa
sub
jbe
adc
adc
xchg
fwait
mov
stos
mov
lds
fsubrs
arpl
sub
push
test
lcall
call
imul
mov
aaa
inc
add
and
sti
pop
out
mov
lcall
lahf
jl
mov
rcl
push
or
sbb
in
out
xchg
adc
test
out
outsb
sbb
add
sub
ret
pop
jne
lcall
dec
decb
jbe
test
cmp
and
or
outsl
mov
inc
pusha
sti
mov
icebp
jnp
das
add
fcomps
into
adc
jecxz
int
sub
jns
popf
cs
cs
inc
ds
inc
lds
cmp
mov
fwait
in
fwait
popa
cmpb
adc
fdivr
cmp
push
jp
inc
fldcw
adc
cmp
inc
mov
pop
jae
lahf
xor
arpl
add
xchg
cli
in
mov
and
dec
push
aam
dec
je
clc
adc
addr16
ffreep
dec
xchg
xchg
dec
xrelease
nop
add
adc
in
in
cmp
call
jge
mov
test
test
outsb
divl
mov
add
push
imul
pop
mov
fildl
xor
ret
and
mov
call
or
out
push
inc
in
sub
inc
lods
push
mov
cmp
push
jo
ljmp
es
insl
or
push
lret
lods
jmp
fisubrl
outsl
inc
dec
push
inc
jmp
bound
mov
push
push
or
inc
arpl
jp
and
jl
in
das
movsl
pop
mov
test
enter
leave
dec
mov
icebp
stc
test
aad
loope
out
shrb
pop
lret
notl
sub
jne
xor
orl
outsb
test
xor
or
or
out
lods
into
sub
or
cli
mov
aaa
push
lea
push
jno
and
arpl
push
xor
into
cmp
and
or
jbe
sub
or
lock
lock
clc
inc
rol
cmp
jle
push
pop
loop
push
mov
push
and
jle
dec
scas
xor
repz
stos
into
mov
inc
cwtl
mov
cmp
test
pushf
call
lods
test
mov
sbb
pop
not
inc
sub
mov
in
adc
loope
adc
jne
fisubrl
cltd
fdiv
fdivrl
fildll
fwait
je
clc
mov
ds
xor
xchg
int3
insl
insl
and
out
jg
cmp
fisubs
daa
push
jns
fildll
stos
jmp
icebp
push
nop
dec
scas
sbb
inc
xchg
xlat
cli
sub
div
pushf
arpl
ror
shl
mov
cmp
sbb
push
mov
dec
mov
mov
dec
push
dec
aam
and
jl
enter
ret
or
clc
xchg
mov
inc
xorl
add
mov
adc
add
push
xchg
subl
dec
xor
pop
push
push
fs
fs
dec
in
adc
and
popf
int
inc
aas
push
add
in
push
push
lock
cmp
sbb
and
xchg
push
je
rorl
cmp
xor
int
adcb
pusha
pushw
adc
adc
pop
inc
ret
and
in
or
add
dec
mov
xor
mov
dec
sub
mov
stos
in
ljmp
movsl
lods
data16
fdiv
cmpsl
xchg
push
jae
mov
adc
lret
int
mov
ret
or
sbb
sahf
or
add
shll
mov
hlt
stos
mov
cmp
mov
in
in
dec
mov
bound
adc
fs
mov
jnp
push
add
leave
xchg
fcomi
cmpsl
stc
test
mov
pop
sbb
cmpsb
pop
xor
mov
arpl
mov
xor
sti
jp
pushf
adc
adc
notb
fimuls
faddl
test
adc
daa
xchg
mov
imul
jbe
ja
subb
mov
std
mov
mov
mov
mov
push
test
cmp
xchg
pop
jne
jns
mov
movsl
cmp
mov
push
sahf
icebp
xor
dec
fdivs
repnz
mov
cld
pop
and
pop
pop
or
aas
loope
sbb
stos
repz
aad
insl
mov
mov
mov
cmp
in
xchg
lea
cmpb
fildll
mov
lea
xchg
mov
dec
and
xor
in
addb
push
imul
and
sub
push
jne
data16
inc
add
pop
xor
cmp
fstl
pop
jecxz
fwait
mov
fcoms
cmpsb
jb
cmpsl
test
ret
bound
insb
dec
es
jmp
sub
aad
mov
and
insb
fs
fsubl
xchg
mov
cmp
inc
dec
scas
out
cmp
or
addr16
mov
mov
jns
mov
push
outsl
rorl
ret
xchg
jns
fsubrp
lock
movsl
pop
lods
pop
mov
fs
jbe
lcall
sub
pop
cmp
lret
adc
fildll
mov
xchg
int
push
es
loope
xor
ds
push
push
dec
xor
into
repnz
fwait
rcrl
fisttps
jp
mov
jmp
xchg
loope
imul
sti
add
sbb
adc
gs
push
jae
js
mov
xor
jb
popf
push
mov
sub
movsl
cmp
lea
test
push
ret
inc
insb
sbb
dec
pop
mov
arpl
jno
mov
push
repz
mov
mov
loop
mov
cld
cpuid
xchg
add
loope
lods
cmp
xchg
gs
lea
lcall
fcoml
out
xchg
push
inc
adc
loopne
sub
cmp
imul
push
inc
mov
test
adc
jmp
xchg
aad
dec
push
shll
sub
ljmp
std
jecxz
clc
adc
or
rorl
mov
or
lock
scas
push
mov
push
and
dec
rorl
jl
loopne
iret
sahf
add
xchg
movsl
movl
ljmp
add
mov
mov
inc
sub
out
int3
in
scas
pop
mov
pop
xchg
mov
cmp
cmp
sbbb
dec
std
mov
sub
inc
push
xorb
or
pop
xchg
or
push
jo
test
jmp
push
and
outsb
jmp
jae
outsb
xchg
mov
movl
jae
pop
dec
fstps
clc
xor
pop
mov
pop
jp
xor
in
jbe
mov
pop
shl
lret
jp
popa
or
mov
jne
sbb
xchg
je
mov
pop
or
addl
dec
mov
xchg
adc
push
pop
adc
cli
or
popf
loop
add
and
lahf
jns
sub
xchg
cmp
fcomps
mov
test
xor
fidivl
xchg
lret
aad
sbb
in
loope
clc
add
addr16
cwtl
jo
ljmp
add
jl
or
into
adc
inc
cld
test
push
add
rcrl
add
mov
test
xchg
int3
repz
cmpsl
xor
rorb
or
call
adc
cmpsb
mov
jo
mov
pop
ss
sub
popa
xchg
push
sahf
lock
adc
xor
pop
fdivr
adc
cmp
add
cmp
cmp
enter
shrb
pop
sub
pop
jl
adc
dec
dec
cmp
xchg
cmp
or
sbb
adc
fwait
sub
dec
mov
xchg
pop
fdivrs
mov
push
es
lock
iret
cs
in
repnz
xor
dec
mov
jo
ret
fisubrs
mov
or
inc
dec
je
pop
dec
sub
jb
sub
ja
int
loopne
or
mov
fnstcw
xchg
sbb
push
xchg
inc
out
mov
stos
int
jns
sbbl
imul
adc
jnp
jo
xor
or
pop
fisttps
aas
cmpsl
push
push
adc
mov
lret
sub
fists
dec
aad
sahf
dec
rclb
bnd
push
imul
add
xchg
ss
addl
sub
or
iret
mov
nop
popa
inc
fs
pusha
and
ss
cmp
shll
xchg
fcmovnbe
fcoml
xor
and
mov
stc
push
in
mov
out
dec
xchg
divl
in
mov
test
scas
inc
imul
cmp
int3
push
daa
scas
push
or
and
sbb
xchg
imul
add
cld
mov
loopne
push
int3
movsl
movsb
cmp
cmp
test
sub
int
xor
faddp
xor
xor
fnsave
imul
jmp
mov
lea
mov
loop
stos
mov
sub
mov
gs
lods
inc
jns
dec
test
es
test
lock
jmp
lds
jns
rorl
pop
mov
inc
int
pusha
push
test
insl
loopne
sbb
push
and
sarb
mov
dec
or
sgdtl
test
mov
rcr
cmp
pop
add
aad
fwait
call
mov
and
fiaddl
mov
pop
xor
out
or
push
inc
lret
dec
push
cltd
xor
or
pop
repz
xchg
sub
xchg
nop
cmc
add
stos
fisttpl
add
mov
push
outsl
pop
daa
les
xchg
xor
inc
test
movsb
xor
inc
ss
iret
or
jmp
daa
mov
dec
stos
daa
mov
xchg
ja
frstor
ja
mov
outsb
sbb
pop
mov
pop
ss
pop
enter
pop
and
sub
imul
inc
sti
cwtl
sub
stos
lret
push
roll
lock
jno
ficoml
lock
pop
add
cmp
mov
das
fcmovnbe
cmpsl
xor
bound
int3
fwait
or
movsb
sub
dec
pop
orb
push
rolb
sahf
pop
iret
xchg
movsb
insb
fbstp
mov
sbb
call
xchg
rclb
cmovne
pop
popa
adc
cmp
or
das
push
push
mov
rorb
loopne
lret
aam
adc
in
dec
or
xchg
clc
fwait
dec
jmp
add
push
xchg
sbb
xor
test
adc
mov
jb
add
mov
push
xchg
add
daa
xchg
push
scas
and
jg
pop
add
inc
pop
mov
add
jb
stos
add
fdivs
je
clc
fwait
adc
inc
pop
lcall
xor
lea
popf
mov
mov
arpl
mov
ficomps
push
pop
inc
mov
mov
mov
sub
push
xor
adc
dec
test
push
daa
push
leave
outsl
sbb
xchg
sub
popf
push
or
mov
adc
push
cmp
sbb
orb
aam
sub
mov
mov
pushf
in
ljmp
dec
andl
sbb
mov
xchg
push
cmp
xchg
call
jg
rclb
dec
mov
jae,pn
adc
adc
test
push
arpl
mov
jmp
sbb
mul
out
adc
enter
sarb
dec
shrb
sub
lret
mov
in
cmc
fsubr
dec
cmc
inc
loop
rep
add
arpl
lods
cmp
ret
fdivs
inc
repnz
mov
sbb
sbb
sub
fs
incl
icebp
call
leave
xchg
into
mov
pop
ss
sbb
pop
in
sbb
bt
mov
pop
pop
mov
mul
sbb
sbb
cli
orb
mov
adc
movl
divb
les
inc
xchg
setp
leave
pop
cs
lcall
xlat
stos
and
lahf
push
cmp
adc
pop
xlat
jg
iret
cltd
lcall
icebp
sub
xor
scas
jnp
cltd
xchg
adc
xchg
adc
mov
mov
sahf
dec
cmp
jp
lds
push
cmpsl
je
stos
cmpsl
into
mov
pushf
neg
mov
mov
call
or
shrl
fmul
mov
dec
pop
in
mov
pusha
aaa
jge
push
xor
pop
shl
mov
xor
divb
sbb
test
cmpsb
mov
and
dec
and
cmpsb
cld
push
and
in
ss
pop
fnstcw
insb
in
push
ficompl
pusha
pop
pop
jl
ds
leave
cmp
rcrl
nop
shlb
adc
loop
xchg
clc
test
pop
mov
enter
xchg
cmpsb
notl
xor
jle
cmp
fcom
mov
fsubrl
xor
fwait
out
pop
dec
dec
scas
sub
jne
imul
sub
sub
mov
push
iret
adc
aam
inc
aam
mov
aad
xchg
aad
dec
dec
in
call
jb
ljmp
pop
lods
sub
rorl
cmp
mov
cmp
lret
mov
pop
dec
jp
push
aam
adc
push
jns
dec
fsubs
icebp
addb
xor
add
inc
inc
stos
mov
int3
stc
add
mov
es
mov
fs
sbb
repz
mov
xchg
add
lds
cld
stos
and
and
fwait
pop
push
js
mov
lcall
mov
lcall
inc
xchg
jle
addl
pop
ljmp
cmpsl
pop
xchg
xorl
mov
mov
pop
mov
iret
mov
inc
sbb
adcl
inc
into
int
xchg
and
movsb
mov
mov
into
lea
out
fs
inc
repnz
mov
dec
sbb
aaa
push
gs
xchg
sub
lret
pushfw
dec
inc
aaa
xchg
cmp
jle
repnz
mov
push
cmc
xchg
pop
popl
add
stos
xor
testl
fcomip
pop
jge
mov
repz
ljmp
cld
jge
daa
psrlw
fbld
adcb
leave
aad
mov
push
and
sub
inc
out
fadd
inc
dec
pushf
js
nop
je
inc
xor
loopne
add
adc
jne
mov
lods
aaa
rorl
pop
test
jmp
test
call
lea
and
mov
movsl
fwait
les
gs
or
sub
sbb
xor
aam
adc
fisttpll
jnp
into
ficomps
jg
fiaddl
std
mov
ds
mov
les
loope
pop
clc
mov
ljmp
and
jno
clc
mov
cld
pushf
sbb
cmp
scas
pushf
inc
loop
pop
add
push
sub
fdivr
cmp
cwtl
adc
fidivs
pop
in
dec
cmc
xlat
sub
out
je
mov
mov
out
neg
push
pop
inc
movsl
fs
lock
arpl
cld
xchg
pop
dec
rcll
lret
mov
ja
push
in
dec
jbe
mov
dec
popa
push
inc
inc
ja
mov
ret
push
jl
pop
out
xor
push
sub
dec
int3
xchg
movsl
jne
xorl
js
sbb
insb
pop
mov
add
inc
mov
test
pushf
int
sbb
fs
mov
daa
je
jns
imul
fs
jnp
loop
xchg
and
dec
scas
imul
fldenv
in
inc
js
popa
test
jmp
add
mov
mov
js
jno
push
mov
pusha
ja
sub
test
lcall
sub
add
in
jg
cld
xor
pop
xlat
xlat
pop
test
push
in
jg
std
ror
lcall
jbe
ret
test
in
pop
jnp
fdivrp
repz
pop
adc
pop
mov
jbe
push
js
js
lods
test
sbb
sub
mov
xchg
sti
pop
fdivrs
inc
pusha
lcall
test
scas
aam
mov
mov
push
xchg
add
mov
mov
push
out
pop
repnz
dec
jns
scas
sub
sbb
sbb
push
sub
subb
push
cmpsl
cmp
int3
push
or
pop
test
es
mov
sub
hlt
sbb
int3
fstpl
cmp
jle
movsb
mov
push
test
aaa
jbe
xchg
sub
jae
adc
dec
cld
add
inc
xchg
sahf
sub
mov
ret
push
lods
mov
sbb
cli
movsl
push
mov
jmp
pop
mov
inc
ljmp
js
fdivl
movsl
sub
push
mov
mov
cld
popf
add
div
cs
or
movsl
outsl
xor
fadd
test
mov
mov
filds
popa
in
jb
aam
imul
push
xchg
fldt
inc
jg
stos
into
in
jne
out
push
mov
insb
test
movsl
jno
xchg
adc
cmp
popa
and
jg
mov
idivl
mov
mov
sbb
mov
mov
ljmp
pushf
adc
mov
jge
push
push
jge
test
testb
jge
fcomps
push
out
jl
call
adc
in
dec
test
sbb
lahf
and
or
push
negl
push
fdivl
cmpsb
scas
push
movsl
jno
push
jo
cmp
mov
fbld
or
push
xor
scas
and
je
lret
fistl
jle
xchg
hlt
inc
push
popf
stos
mov
mov
jo
xchg
jb
mov
xchg
pushf
adc
ljmp
loop
fwait
jbe
push
cmpsl
and
jecxz
insb
push
mov
jg
or
inc
lods
adc
imul
fidivrl
push
icebp
add
int3
jmp
cmc
ss
xchg
hlt
mov
mov
inc
pop
inc
add
mov
shrl
xchg
mov
cmp
xchg
mov
out
and
xor
mov
dec
mov
push
lds
add
pusha
inc
test
mov
dec
mov
sub
pop
stos
pop
lcall
add
cmp
mov
ljmp
xchg
mov
cld
fmull
and
adc
out
jae
mov
add
mov
dec
mov
inc
test
pop
xchg
mov
out
jl
mov
pcmpeqd
js
adc
rcrb
dec
sbb
xor
lret
pop
xchg
mov
jle
mov
rep
mov
dec
ds
sub
mov
inc
decl
insl
aam
xor
push
add
dec
and
push
inc
cmp
jecxz
dec
rcr
sbb
sbb
push
jae
xchg
or
imul
cmp
lods
push
push
jp
out
icebp
daa
dec
sti
js
sbb
mov
mov
mov
cld
jns
jb
imul
stc
push
pop
pushf
mov
scas
inc
hlt
mov
xchg
pop
ret
cmp
jae
lret
pop
fsubrs
xor
pop
rcr
call
xchg
pop
cwtl
lock
enter
and
repz
push
dec
lcall
or
inc
adc
lcall
and
push
jmp
jp
subb
les
mov
xchg
dec
test
mov
jae
je
int
and
pusha
test
xchg
mov
ficoml
das
movsl
mov
std
ret
aas
cltd
mov
jns
fnstsw
fisttpl
jmp
addr16
or
xchg
xchg
jne
dec
cmp
iret
test
mov
sti
sub
loope
pop
dec
stos
and
movsb
inc
jp
xchg
andl
cmp
clc
fnstcw
in
sqrtps
clc
or
mov
pop
inc
mov
xor
clc
fs
sub
and
inc
aad
sarl
clc
inc
cs
cmpsl
or
lods
rcrl
ds
mov
push
aam
lods
repz
jle
sub
xchg
outsb
jecxz
jge
dec
pop
mov
xchg
negb
movsl
mov
xchg
xchg
cmp
mov
adc
bound
cmpsl
lock
pop
lret
jle
in
int
pop
orl
lds
sahf
ret
arpl
push
lods
sbb
cld
xor
sub
pop
jg
or
lea
push
cs
faddl
and
cmpsb
stos
inc
mov
or
sbb
loop
int3
int
movsb
leave
jns
adc
sbb
sbb
dec
push
rol
xor
pop
or
push
addl
shrl
pcmpgtw
push
add
inc
pop
movsb
jp
mov
adc
idivb
je
loope
enter
sub
lcall
sub
mov
sub
cltd
or
sbb
ret
pushf
pop
xchg
cmp
lds
loop
jbe
cmp
sub
daa
js
jne
pop
pop
jg
pop
mov
je
mov
jmp
inc
ret
test
es
stos
stc
xorl
out
pop
pop
gs
fldenv
xchg
push
fnstsw
pop
push
inc
fwait
pop
lret
mov
sub
and
or
push
out
and
xchg
pop
outsl
sbb
inc
aas
ficoms
rcrb
mov
sub
cmp
pop
inc
movb
loope
xchg
pop
pop
das
outsb
xlat
pop
jb
push
test
fisttpl
push
repz
mov
mov
push
jle
scas
push
fistl
in
mov
push
inc
out
das
push
loope
sub
lcall
scas
pop
test
push
ss
jle
inc
ret
push
testl
inc
xor
xchg
jmp
push
rcll
push
lcall
imul
sbb
add
mov
xor
adc
cmp
les
std
testb
jno
cmp
ret
jmp
movl
test
notb
push
ret
cli
out
push
lcall
mov
and
lret
lock
sub
mov
aad
sbb
jecxz
movsl
xor
insl
ficoms
xchg
aam
dec
inc
mov
decb
push
jge
rorb
bound
roll
insb
std
outsb
clc
cmpsl
push
jle
loop
cmc
add
cmp
add
inc
mov
lds
les
add
and
mov
mov
je
shlb
xchg
xchg
negl
cmp
inc
insl
daa
mov
push
jae
mov
mov
jnp
scas
les
es
mov
aaa
idivl
jo
test
mov
inc
fcomps
sub
mov
fsubp
mov
mov
cs
or
sti
aas
cltd
mov
push
shlb
mov
repnz
pop
cmp
sub
scas
cmp
push
fwait
ja
pop
movsl
cmp
outsl
sub
cmp
ret
pushf
cmp
push
test
aam
pop
push
inc
ljmp
les
mov
adc
mov
jnp
mov
scas
shll
xchg
mov
sub
mov
lods
sbb
dec
push
fistpl
and
pop
addb
and
out
notl
lcall
sbb
adc
pop
outsl
imul
or
adc
push
jecxz
cmp
xor
aam
adc
jecxz
scas
xor
cmpsl
push
adcl
enter
leave
add
add
mov
push
mov
stc
add
inc
adc
mov
rolb
jecxz
or
fisttpl
movsl
iret
mov
dec
mov
pushf
jl
cli
push
out
out
dec
js
xchg
xor
sbb
adc
sub
pop
dec
pop
add
lea
mov
jne
xchg
test
scas
lea
push
xlat
cmpb
insb
fsub
hlt
mov
or
dec
inc
mov
sbb
push
clc
popf
lret
dec
mov
outsb
out
push
xor
jo
icebp
sub
stos
push
in
jmp
cmpsb
outsl
mov
out
in
cmc
ds
js
xor
xor
ds
notb
bound
mov
in
jecxz
sbb
xchg
sub
jl
mov
out
stc
js
cmp
sub
jle
jecxz
jg
icebp
icebp
nop
ret
into
inc
mov
add
and
jo
push
push
lret
loopne
rcrb
pop
sbb
jne
inc
adc
dec
shll
dec
push
inc
out
stos
push
aaa
imul
add
ds
cmp
int
xchg
fnstcw
cmpl
mov
lea
inc
in
fidivl
inc
cmp
or
push
jecxz
outsl
into
enter
mov
inc
xchg
push
scas
cmpsl
rorb
aaa
xor
out
insl
in
xchg
imul
je
jge
sub
js
pop
xlat
in
insl
cli
add
dec
cs
jle
lret
fnstcw
or
fwait
push
jae
cmp
or
add
daa
mov
cmp
mov
sbb
packsswb
iret
xchg
adc
mov
pop
jecxz
out
inc
inc
xchg
jb
lods
mov
inc
mov
pop
add
movsb
sbb
cmpsb
js
adc
lahf
mov
fnsave
cmp
testb
notl
sbbb
das
dec
xor
rorl
ss
dec
and
ja
out
test
sub
cmpsb
mov
lods
and
int3
xlat
push
stos
and
stos
pop
pop
push
and
int
andl
iret
mov
cmp
inc
icebp
mov
stos
dec
imul
and
cwtl
cmp
mov
jne
mov
fadds
nop
sub
sbb
push
push
lea
jb
xchg
and
repnz
pushf
cmp
lret
mov
fidivl
cmp
adc
sub
cli
repz
dec
out
fldenv
xchg
adc
mov
int3
mov
test
sub
sub
ljmp
xor
hlt
imul
xchg
jns
adcl
cmpsl
ret
sbb
jp
sbb
shll
pop
insb
outsb
dec
outsl
in
sbb
loopne
scas
jmp
push
push
test
fildl
lods
in
add
lret
dec
mov
loop
outsl
push
lock
and
push
imul
adc
sub
stos
sub
sbb
sbb
aad
jmp
pop
test
and
shrb
jno
sub
lock
movsl
fcmovb
rorl
mov
ds
leave
jp
pop
sahf
fwait
rclb
push
adc
rcll
scas
fs
mov
popa
bnd
jg
adc
sbb
xchg
pop
shrl
pusha
inc
cmp
xchg
adc
add
pop
jmp
mov
and
out
imul
xchg
pop
cmp
mov
daa
cltd
jp
movsl
rcrl
outsl
and
pusha
mov
jno
mov
mov
push
mov
xchg
ljmp
lcall
push
mov
add
pop
jg
ret
jge
adc
push
sub
mov
jl
xchg
xchg
mov
or
add
adc
or
xchg
sar
dec
adc
iret
sbb
xor
inc
jno
or
jp
xor
out
mov
cltd
pop
and
cmp
and
xchg
fstpl
xor
fwait
jo
leave
xchg
or
aam
jbe
ror
cmp
ss
test
push
or
pop
loop
fwait
pop
stos
leave
mov
add
loop
push
xor
mov
and
sub
pop
xor
gs
add
cmpsl
ret
lods
shrb
adc
xor
cmp
fstl
fcom
inc
cmp
in
cmp
out
cs
pop
jmp
cmp
mov
jmp
mov
mov
xor
sub
test
xor
push
jecxz
stos
ret
add
pop
mov
cwtl
cmp
dec
xchg
lret
or
jno
inc
lcall
aas
mov
out
inc
xor
js
xor
and
insb
xor
or
or
pop
push
inc
jae
sub
dec
sahf
outsl
inc
je
stos
pop
ret
aaa
jns
jnp
mov
in
push
adc
aaa
aas
adc
push
aaa
fucom
or
mov
imul
mov
inc
mov
and
sbb
cmpsb
fildll
mov
fwait
cmp
or
xchg
jmp
aad
shr
pop
adc
adc
jbe
ret
sub
pushf
mov
das
ds
mov
xor
push
push
push
lret
ja
in
jne
cmpsb
inc
push
sbb
out
out
mov
mov
mov
add
sub
xlat
jbe
ds
stos
pop
ljmp
mov
xor
jle
and
je
jmpw
fistl
gs
data16
cli
lea
jecxz
sti
mov
out
mov
jno
mov
pop
and
cmp
fidivs
aaa
cmpb
js
fstl
test
data16
ret
sbb
mov
cmp
out
int
in
cmp
sbb
xor
sti
mov
pusha
fiaddl
add
and
push
inc
sub
shr
inc
and
jp
inc
std
out
xor
sti
pop
shl
jo
xchg
ja
insb
enter
mov
inc
mov
popf
adc
sbb
fs
sarb
ds
aas
inc
push
dec
xchg
cli
mov
nop
inc
cmp
sub
popf
imul
scas
mov
push
shlb
sbb
mov
push
das
scas
pop
addr16
jmp
das
mov
rorb
push
jne
int3
cltd
aam
and
sub
or
jns
adc
test
mov
and
xchg
add
add
movb
push
cmp
mov
inc
jecxz
mov
pop
inc
cmp
cli
rclb
in
jle
icebp
stc
mov
js
lahf
jne
adc
ficoml
adc
pop
push
sub
movsb
sbb
pusha
mov
sub
mov
inc
movsl
scas
pop
inc
rorl
mov
scas
pop
cltd
add
inc
xchg
lret
xchg
aam
jge
addr16
imul
push
mov
mov
xor
fwait
sub
out
dec
js
and
mov
es
and
jno
dec
mov
ja
cmpsl
mov
ljmp
shl
jno
ss
add
and
call
sbb
push
adc
iret
push
leave
daa
fwait
ljmp
and
dec
stos
imul
fsubs
lret
pop
add
sub
fstpl
push
jo
imul
push
fld
cli
ljmp
jo
cmp
inc
lock
jecxz
adc
outsb
dec
ret
inc
adc
shrb
sti
xor
xchg
icebp
push
pop
lods
mov
lcall
fiaddl
and
mov
scas
pop
aam
ja
mov
mov
dec
addr16
cli
lret
pop
jecxz
dec
xor
fldenv
jno
pop
les
pop
adc
xlat
lret
mov
out
adc
imul
or
jl
cs
movsl
nop
jb
sbb
in
ljmp
fucom
in
adc
stc
sbb
inc
mov
xchg
mov
xor
xor
sub
push
xchg
mov
xor
add
mov
test
sbb
ja
lret
ss
cli
xor
or
leave
sub
data16
mov
jmp
sub
sub
ret
stos
dec
dec
add
inc
fdiv
sbb
div
xchg
mov
nop
insl
and
test
push
mov
call
push
jl
mov
es
sti
imulb
inc
xor
mov
fwait
cmpsb
push
push
sbb
in
lods
push
mov
iret
inc
pop
or
popf
rorb
shrl
lods
gs
or
cmpl
cmpsl
or
push
popa
dec
dec
and
sbb
mov
rcrl
in
dec
andb
leave
jnp
decb
push
insb
jno
cmp
andb
xor
jae
xchg
sub
mov
xchg
addr16
xor
imul
dec
shll
add
jmp
in
inc
test
int3
hlt
fmul
movsb
xchg
pusha
sbb
fwait
add
popa
inc
icebp
stc
out
dec
pusha
into
test
cmp
pop
lcall
xchg
push
sub
mov
cmc
filds
gs
jae
movsb
sbb
movsl
or
cli
xchg
fisubrl
jo
or
sbb
push
mov
jle
lea
mov
cs
mov
insb
mov
adc
xlat
mov
sub
pop
jmp
int3
mov
jle
lea
decl
or
dec
jmp
mov
test
repnz
ret
mov
push
aam
ret
mov
jns
repnz
fisubrs
idiv
ret
rcrl
divl
or
call
arpl
jecxz
call
add
lods
mov
rorb
mov
xor
jmp
out
mov
mov
hlt
cmp
lods
pop
stos
jae
and
rcll
js
adc
push
fbld
dec
push
sbb
pop
dec
push
mov
and
pop
or
lds
aad
mov
jge
fldl
je
outsb
fs
mov
lret
pop
aad
cmp
dec
adc
adc
inc
push
dec
push
xor
movsb
imul
outsb
ljmp
pushf
inc
decl
cmp
push
sub
xorl
std
push
repnz
dec
jnp
mov
mov
out
add
push
popa
call
out
inc
outsb
stos
cmpsl
outsb
xchg
stos
or
out
xor
sar
add
inc
dec
xchg
out
lcall
dec
mov
dec
pop
xor
hlt
cmc
push
and
pop
addb
push
cmp
es
xchg
sub
and
or
out
mov
jne
fs
into
mov
push
push
imul
xchg
adc
pop
movsb
sub
cltd
push
lret
xor
adc
lahf
lea
imul
lods
aam
pop
and
mov
push
cmp
xor
test
pop
xchg
pop
mov
fimuls
and
cli
pop
pop
adc
sub
add
sbb
aas
std
mov
jo
mov
dec
clc
into
push
adc
dec
add
das
jno
in
sbb
fwait
dec
idivb
and
pushf
fnstsw
pop
cmp
and
nop
ficompl
cmp
daa
fs
pop
and
mov
pop
in
gs
out
fisubrl
jo
in
inc
push
repnz
pusha
sbb
adc
mov
mov
scas
add
les
movb
or
out
gs
lcall
sbb
xchg
mov
cmpsl
dec
cmp
inc
jbe
inc
and
or
test
xchg
sub
add
push
mov
push
mov
push
aaa
fcmove
push
js
mov
push
pop
shrl
fcmovnu
jae
mov
ret
out
popa
push
mov
movsl
cmp
jecxz
loopne
jp
mov
jp
clc
inc
add
cmp
push
fst
movsl
insb
mov
ret
cmp
dec
jle
dec
sub
pop
adc
testl
jns
ret
std
loop
add
mov
cmp
push
cld
add
dec
mov
or
jge
in
lahf
ds
loop
push
mov
fnstcw
nop
pop
pop
fisttpll
mov
les
test
cld
movl
stc
sub
iret
push
das
jl
lahf
push
inc
pop
stc
add
cli
add
cli
push
push
dec
jp
frstpm(287
repnz
jns
lret
in
push
adc
roll
xchg
rclb
jns
add
inc
sahf
xchg
fnsave
gs
push
sbb
inc
and
inc
jle
push
mov
lcall
jne
inc
cwtl
int3
fwait
in
repz
inc
adc
or
rclb
ja
and
fs
push
sbb
pop
sub
adc
hlt
pop
dec
hlt
xchg
orb
mov
arpl
jo
xor
sub
subb
mov
pushf
data16
cmp
xor
fwait
jle
mov
sub
push
jne
loop
adc
cmpsl
pop
jns
adc
xor
mov
mov
insb
mov
mov
mov
push
loope
insb
sbb
inc
xchg
jns
jp
in
fcomps
xchg
sub
enter
jns
rorl
xlat
lret
test
dec
or
ja
push
adc
clc
fcoms
insb
leave
dec
hlt
iret
add
rorb
mov
lret
xchg
je
fidivrl
fnstenv
pop
pop
call
testb
pop
pop
xlat
iret
mov
mov
ja
clc
clc
mov
jns
pop
mov
cld
jne,pt
inc
xchg
push
stos
stos
xchg
std
add
xor
in
xor
ja
ss
js
push
in
jge
scas
fisubl
and
add
jnp
or
sub
xchg
push
pop
sub
cs
into
jp
das
sub
ret
pop
or
in
cmpsl
jnp
pop
jbe
add
jmp
or
ror
arpl
pop
mov
cmp
out
bound
rorl
xor
cmp
jb
pop
ficompl
add
push
xchg
sbb
jbe
dec
int
fwait
or
jb
mov
nop
push
push
xchg
jp
movsb
shll
xor
insl
mov
hlt
cs
iret
div
aam
mov
cs
pop
call
adc
mov
or
in
xor
pop
mov
add
add
jecxz
adc
aad
inc
mov
arpl
jecxz
mov
push
dec
sub
shr
push
cltd
sub
xchg
inc
cmp
pop
jecxz
inc
shll
mov
mov
mov
imul
add
dec
jl
mov
or
and
sar
sti
aas
mov
lea
xchg
insl
shlb
mov
push
xchg
imul
ret
push
fsubl
test
mov
iret
stos
mov
and
sbb
arpl
stos
jae
imul
js
dec
arpl
mov
jnp
cmp
or
or
push
xchg
push
xchg
push
aad
dec
sbb
sarl
jae
ret
rcl
sub
addl
out
xchg
inc
pushf
loope
dec
jbe
gs
cwtl
fmuls
outsb
and
push
stos
adc
lahf
pop
insl
test
sti
test
sub
cmp
push
shrl
and
lcall
mov
xor
mov
jl
fsubrl
lahf
adc
setge
xor
fists
jge
push
sub
xchg
push
mov
fdivrs
inc
imul
xchg
fcmove
push
sbb
call
loope
loope
sub
jge
mov
test
fstpt
insl
fcmovnbe
mov
popa
sub
lahf
xor
pop
pop
mov
js
mov
jp
push
add
mov
inc
pushf
mov
insl
movsb
dec
or
sbb
push
pop
cld
sar
pop
xchg
xchg
cmp
fwait
push
fnsave
andl
cmp
sbb
pusha
mov
mov
mov
pusha
test
push
sahf
jo
mov
inc
inc
addr16
test
sbb
xchg
pushf
jmp
addl
add
cmp
test
mov
ret
es
sbb
cmp
and
adc
mov
into
dec
stos
push
xchg
xchg
jbe
adc
sub
testl
inc
cli
lods
dec
pop
stos
fcmovbe
adc
rcll
xor
push
in
out
jmp
xor
loop
jmp
lods
push
jmp
fiaddl
mov
jnp
push
xchg
fsub
xchg
adc
cmpsb
dec
mov
mov
push
pop
inc
inc
or
lret
jg
roll
and
sbb
enter
jle
jg
jno
and
test
fs
xor
or
and
push
xlat
xchg
inc
mov
and
lcall
mov
test
jmp
xchg
lret
ja
shlb
mov
iret
push
jmp
add
xlat
sahf
mov
mov
add
jne
fidivs
mov
or
jmp
mov
sahf
ret
fsts
es
shlb
sahf
cld
push
push
scas
mov
stos
int
mov
invd
int
pop
jnp
xor
imulb
cmp
or
mov
lea
imul
jmp
sbb
out
popw
insb
outsb
roll
mov
mov
std
lods
arpl
insb
insb
ds
jg
pop
icebp
insb
mov
sub
xchg
mov
adc
setae
shll
xchg
dec
add
pop
mov
xlat
xorl
hlt
push
adc
stos
pop
lcall
dec
std
jno
lods
push
xor
jmp
sti
outsb
pop
outsb
adc
in
test
movsl
add
jne
stc
movsb
cmp
sbbl
mov
rorb
cmp
js
test
sub
test
mov
lret
or
inc
lcall
pop
hlt
shll
cmp
jns
in
add
or
adc
pop
pop
inc
arpl
int3
and
inc
adc
hlt
lods
mov
in
push
ret
shlb
movsl
adc
into
and
jle
jle
fwait
mov
fcoms
push
mov
mov
lock
mov
lret
insb
mov
les
test
xorb
xlat
out
jl
xor
mov
pop
jne
xor
mov
dec
sub
jp
and
mov
sti
add
out
jb
jg
fyl2x
cmp
test
ss
repnz
idivb
sbb
mov
movsb
lods
or
imul
jp
in
add
cwtl
push
shll
pop
pop
cltd
fiaddl
adc
ja
lds
inc
adc
inc
lods
and
out
push
lea
cwtl
lret
mov
dec
ds
dec
je
or
adc
out
lcall
mov
dec
ret
add
cmp
and
add
pushf
in
fisubl
insb
cmp
push
pop
ret
aam
test
fists
sub
out
sbb
jle
rorl
mov
adc
cwtl
mov
jmp
pop
ljmp
cmp
ja
adc
repnz
jbe
xor
cmp
add
repz
and
popf
jno
lods
push
sbb
mov
cmpsb
cs
pop
insl
fdivrl
ja
pop
loopne
imull
cmp
sub
jle
xor
adc
push
add
clc
and
xchg
and
cltd
inc
loope
adcb
mov
pop
xchg
imul
fstps
lds
jo
inc
cmp
std
cmc
sub
ret
pop
sbb
inc
fcomp
push
lods
je
sub
aas
push
cwtl
mov
outsl
jecxz
out
sub
outsl
loopne
loop
or
inc
testl
inc
pop
or
adcb
std
not
sbb
sub
mov
daa
ds
fcoms
or
push
lods
rcl
push
pcmpeqb
insb
enter
ret
out
dec
inc
adc
pop
sub
subl
push
mov
push
pop
outsb
ja
loopne
out
or
mov
push
clc
xchg
push
pop
mov
jno
test
cs
sub
pop
xor
das
insb
cli
loope
pop
test
clc
jle
sbb
xchg
jecxz
ficompl
push
xlat
jle
fdivp
xchg
dec
dec
das
jns
mov
imul
cmp
jbe
add
fildl
mov
mov
add
rcrl
inc
sbb
fsts
pop
ja
sbb
cmc
fistpl
or
sbb
mov
mov
add
cmp
sub
push
add
sbb
jg
test
inc
dec
sbb
or
stos
rcrl
cmp
push
test
out
cltd
scas
mov
sub
movsl
loop
lahf
into
xor
aam
lret
aas
mov
stos
pop
js
cmp
test
out
inc
add
sahf
jne
lea
push
mov
and
adc
iret
shll
mov
cmp
stos
mov
cmp
mov
aam
lcall
xchg
dec
sub
clc
movsl
mov
mov
adc
add
dec
aad
sub
lcall
cmpsb
out
mov
cltd
mov
jmp
rcll
hlt
xor
sub
je
mov
dec
pusha
inc
out
ds
add
fwait
addr16
adc
sub
inc
test
xor
in
mov
into
pop
sbb
fisttps
data16
les
test
xchg
shll
xchg
sub
mov
pusha
sub
in
call
sbb
xorl
clc
pusha
out
jg
dec
or
enter
dec
movsb
popf
bound
insl
ret
movsb
js
and
sub
lret
repnz
mov
ret
inc
sbb
cli
sbb
sub
mov
dec
add
dec
inc
mov
test
loop
cli
add
mov
inc
movsl
in
push
mov
mov
mov
dec
ss
enter
or
jp
lret
movsl
lock
xor
xor
lcall
xchg
push
ret
jnp
maskmovq
negl
mov
scas
push
pop
jo
jb
push
in
dec
pop
cs
mov
cwtl
xor
mov
lods
xchg
out
mov
pop
leave
xchg
and
out
test
sbb
jne
rcrb
popl
inc
out
lret
fsubs
repz
add
iret
mov
clc
and
sub
cltd
adc
add
push
sub
cmp
xchg
mov
mov
hlt
movsb
aad
mov
mov
mov
lods
mov
mov
inc
call
xchg
loop
sbb
out
mov
xor
mov
imul
sub
sbb
pushf
sub
bound
mov
inc
popl
jns
repz
sarl
out
pop
cmc
scas
out
adc
dec
in
imul
and
mov
je
shlb
xlat
loop
stc
outsl
jns
pop
inc
repnz
fwait
mov
fidivs
stc
xchg
imul
in
dec
sarl
sbb
adc
or
icebp
leave
mov
in
fistps
jge
lds
xchg
mov
sub
and
xor
add
mov
mov
mov
cmp
mov
lgs
jo
mov
jns
or
lret
or
xor
pop
jbe
jo
repnz
or
popf
shrb
repnz
push
jnp
imul
mov
scas
lret
sub
repz
add
or
pushl
sarl
mov
jbe
mov
add
int
lahf
cmp
xlat
cmp
out
shlb
fs
mov
imul
aaa
jns
popf
call
sub
xchg
push
dec
adc
cmp
jg
loopne
mov
leave
mov
popf
addr16
mov
push
sub
push
call
or
rcrb
ja
jbe
clc
leave
pop
cli
push
fwait
ret
test
mov
jne
shl
cmpb
imul
cmp
in
mov
ret
xchg
insl
sub
xor
enter
xor
call
pop
or
aad
mov
xor
push
mov
add
mov
sahf
rclb
fcomip
in
inc
inc
hlt
das
dec
mov
inc
ljmp
sub
mov
and
push
pop
mov
xlat
fadd
or
movsl
mov
imul
movsl
out
lret
jnp
test
inc
push
pop
jo
fs
mov
mov
in
jmp
mov
sub
test
stc
cmp
mov
push
hlt
dec
jnp
jns
mov
jmp
stc
mov
mov
movsb
jg
dec
jae
jnp
push
icebp
fistpll
add
inc
or
out
sbb
pop
sbb
mov
lock
imul
push
sub
int3
fisubrs
movsb
jae
sbb
pop
or
xor
inc
pop
jns
bound
out
push
ret
dec
das
aaa
jp
or
ret
repz
add
rcrb
xor
add
push
mov
cmp
rcrb
or
imulb
push
mov
stc
dec
lcall
ds
push
stc
pop
pop
inc
imul
cmpl
inc
xchg
jl
jb
out
dec
fnstsw
xchg
cmp
mov
fidivl
mov
jecxz
dec
pusha
js
std
out
rcl
mov
mov
pop
mov
jl
push
xchg
sar
flds
mov
and
jmp
xlat
cmpsb
jmp
inc
sub
jnp
inc
pop
mov
hlt
and
jl
xor
aas
mov
sub
xchg
xchg
sub
and
pop
enter
xor
lcall
nop
sbb
adc
xlat
push
frndint
dec
adc
pop
mov
inc
scas
mov
sbb
insl
outsb
jmp
daa
dec
popf
adc
stc
in
sahf
daa
adc
or
mov
sbb
jne
cmpsb
je
or
mov
cmp
sub
cmp
nop
insl
cltd
cmp
cld
xor
popf
fmuls
mov
fdivl
xor
fnsave
nop
sbb
push
xchg
add
lret
sbb
imul
mov
call
xchg
push
jp
cmc
in
dec
adc
fidivs
popf
test
aas
mov
aaa
popf
pop
mov
sub
mov
and
insl
mov
insb
mov
inc
push
adc
ss
lods
sub
sub
dec
adc
inc
stos
mov
fnstcw
or
in
mov
jmp
xchg
and
pop
lods
pop
pusha
test
aaa
daa
insl
xchg
movups
dec
int3
jbe
jg
aad
mov
or
iret
mov
xchg
mov
aas
jae
icebp
imul
pop
pop
int
add
cmp
ret
push
sub
shr
jl
sti
sbb
or
je
test
sbb
into
dec
mov
gs
adc
push
out
jl
daa
xor
jmp
sti
es
ds
mov
sub
jg
nop
sbb
push
ds
mov
cmpsb
int
or
iret
ffreep
dec
xor
mov
arpl
or
mov
xor
add
fcoml
dec
xchg
mov
js
push
mov
shll
cmp
dec
movsb
inc
mov
inc
fildll
mov
xor
stc
push
dec
lahf
out
dec
jmp
in
push
lock
jns
jle
mov
sub
jno
mov
cmpsl
inc
sbb
add
xchg
addb
into
lret
xchg
adc
shlb
add
shrb
cmp
shr
daa
imul
jns
aam
xor
jg
pop
mov
sbbl
repz
inc
jmp
pop
cmp
sbb
das
add
aaa
xor
nop
xor
mov
mov
cmp
lods
shl
fistpl
popf
pop
dec
push
or
dec
enter
enter
or
sbb
ja
push
add
push
lods
aam
and
bound
pop
jno
sbb
adc
out
repnz
xchg
imulb
daa
int3
jge
xchg
lcall
int3
pop
push
sub
mov
out
sbbb
jmp
std
int
xchg
in
mov
leave
addr16
add
hlt
cs
jg
mov
or
bswap
addr16
enter
jo
mov
int
mov
xor
adc
xlat
push
jo
lret
les
xchg
push
das
daa
xchg
mov
sbb
inc
lahf
rcrl
push
cs
aad
fimull
fcoml
mov
cmp
sub
sbb
out
jmp
sub
das
push
fmull
or
push
fcomip
sbb
xchg
cli
jp
push
push
inc
cmp
push
pop
sbb
inc
push
mov
int
test
pminsw
pop
shl
in
push
cmpsl
scas
lock
push
push
push
dec
fldt
mov
stos
inc
mov
add
jae
adc
xor
out
aaa
das
rclb
int
aam
jbe
ss
cmpsb
out
mov
or
in
fs
push
mov
add
jecxz
fst
divl
loop
lds
xor
jns
mov
out
fisubrs
xor
sti
mov
jno
and
add
das
xchg
test
inc
aad
lahf
mov
sub
sahf
jb
movsb
lret
dec
push
mov
push
sub
or
test
lret
xor
outsl
cmp
dec
out
add
mov
movsl
jmp
repnz
popf
mov
mov
test
fidivrs
std
pop
push
mov
add
hlt
das
pop
add
jne
clc
call
push
popa
jb
xchg
ljmp
loop
scas
divb
add
or
mov
loope
ficompl
mov
or
mov
jmp
loopne
hlt
cmpsl
imul
outsb
adc
sbb
and
inc
faddl
mov
and
or
test
jnp
adc
stc
icebp
sub
or
je
mov
mov
aam
push
addl
mov
sbb
sbb
fs
xchg
aas
in
je
rcr
inc
xor
pop
pop
loope
lds
push
cld
popa
in
jp
out
hlt
clc
hlt
adc
shll
shl
and
repz
adc
das
repz
lcall
push
cmp
jb
adc
xchg
mov
scas
lock
leave
js
xchg
push
mov
cs
xor
mov
sub
dec
shlb
lods
mov
jmp
popa
cwtl
orb
addl
orl
mov
sub
inc
cmpsl
insl
addb
dec
test
loope
daa
out
adc
fimuls
dec
xchg
sbb
rorl
or
mov
bound
adc
inc
pusha
xlat
jmp
sbb
ljmp
pop
repz
imul
es
add
sahf
dec
jno
adc
in
add
cmpsl
jo
mov
mov
xchg
add
in
mov
out
andl
inc
lods
into
into
lock
int
stc
mov
movsl
mov
popf
fwait
inc
dec
out
rcr
stos
ret
push
lods
into
ljmp
or
and
outsl
dec
sbb
faddl
mov
dec
fimull
mov
push
inc
jp
sub
insb
pusha
outsl
scas
cmp
cmp
xor
leave
cmp
sbb
mov
cmpsl
popa
mov
mov
popf
add
ljmp
hlt
aaa
cli
inc
fs
push
jecxz
stc
push
mov
jecxz
and
add
mov
add
jo
aam
adc
in
pusha
and
ret
or
push
clc
cltd
jb
inc
mov
lock
xor
andl
je
mov
negb
rcr
ret
jo
movsb
push
inc
mov
jns
test
mov
scas
mov
jl
pop
inc
xchg
outsl
lret
mov
lock
push
div
mov
pop
movsl
mov
sahf
cmpsl
ret
movsb
in
xor
pop
sbb
bound
mov
mov
lea
lea
xchg
fiaddl
imul
cmpsl
test
clc
dec
ficoml
popa
mov
mov
jbe
push
cmc
imul
inc
jns
lds
stc
jle
ss
inc
mov
jmp
nop
arpl
divl
xchg
xor
jecxz
jg
pop
sahf
cmp
mov
popa
mov
leave
xor
push
fildll
lds
mov
lds
sbb
mov
movl
sbb
ret
jno
sbb
inc
cmp
int
aas
int3
jg
lods
lds
mov
in
cli
rorb
maskmovq
negl
add
mov
lret
jae
aaa
cwtl
dec
sbb
and
lods
push
rol
cld
les
imul
test
or
pop
cs
mov
mov
jmp
testl
xlat
in
aas
jl
mov
mov
or
scas
lds
mov
arpl
mulb
stos
add
mov
sti
fmulp
xor
lds
add
leave
dec
jb
adc
lcall
dec
xlat
pop
aam
mov
inc
and
movsl
xor
pop
sub
mov
aas
aas
lahf
cmpsb
push
inc
adc
lret
test
sbb
test
or
mov
popf
jbe
xlat
lcall
push
xchg
cmp
and
inc
push
es
arpl
and
cmpl
mov
ja
outsl
insb
push
scas
mov
addr16
jo
repz
dec
imul
movsl
cmp
imul
mov
jnp
rcr
jne
sub
dec
adc
ficompl
out
cmpsl
pop
addr16
xorl
cmp
fcomps
sbb
mov
out
cmpsl
jl
push
pop
hlt
pop
sbb
mov
cmpsl
fistps
lcall
and
mov
ret
jo
orl
push
and
lock
jne
repz
mov
sbb
into
mov
out
push
lods
or
adc
mov
cmpl
popf
pusha
rcll
ljmp
popf
mov
jns
out
xor
pop
cmp
jl
pop
into
push
xchg
and
jae
push
add
repnz
inc
xchg
lret
lods
cmpsb
faddl
rcl
add
or
xor
enter
push
loope
push
adc
fisttps
fdivrl
xor
and
cmp
xchg
push
jb
xor
mov
dec
in
dec
mov
or
jmp
je
cmp
clc
dec
add
mov
in
jne
loope
xchg
test
push
ja
xlat
mov
mov
decb
rorb
mov
jecxz
in
jbe
mov
jmp
lock
stc
movsb
ss
std
add
cmpsl
aad
or
adc
xchg
iret
iret
imul
mov
push
sbb
cmpsb
and
xchg
mov
fidivl
fdivrs
or
add
into
in
inc
enter
cmc
test
sub
mov
enter
pop
aam
mov
inc
subb
fxch
in
movsl
dec
add
mov
scas
inc
call
daa
cmp
pusha
push
adc
repz
stos
loop
fstps
sahf
andb
stos
imul
dec
or
rolb
scas
push
xchg
cmp
pop
lds
cwtl
jp
int3
lds
jb
mov
les
aad
inc
inc
sbb
mov
dec
icebp
aam
stc
sbb
popf
push
adc
dec
mov
or
mov
pop
aad
add
or
imul
jae
movntps
adcl
cltd
test
xchg
inc
test
or
pop
sbb
jmp
push
inc
or
or
or
xchg
in
pop
shll
movsb
lds
jbe
push
xchg
xor
mov
fidivs
jno
push
pop
out
mov
repz
lahf
int3
dec
repnz
js
stos
mov
ljmp
adc
rcll
mov
out
test
dec
repnz
add
push
fmuls
pop
xchg
add
xor
fisubrs
add
jb
repnz
test
test
lock
inc
mov
pop
daa
lods
pop
pop
into
rcl
ja
or
pop
mov
lea
mov
mov
or
scas
add
pop
sub
dec
push
cmpsl
mov
icebp
arpl
pop
sahf
fisttpl
fmull
flds
or
jle
pop
mov
cltd
enter
sbb
lods
push
mov
inc
in
mov
in
cmp
fists
rorb
inc
fsubrp
not
add
enter
ss
pop
testl
or
cmpsl
inc
xchg
cli
inc
imul
xor
push
lahf
out
mov
adc
mov
add
lret
ret
dec
dec
scas
lods
inc
clc
cli
push
sti
add
movsl
jmp
popa
scas
xchg
repz
pop
sarl
sti
dec
cmp
mov
add
fdivrs
lcall
dec
imul
sub
mov
arpl
shrb
xchg
sub
push
out
scas
or
jns
add
jns
fidivl
mov
cmp
push
jmp
ret
imul
pushf
mov
mov
mov
jecxz
in
adc
fwait
or
adc
jmp
jo
incb
mov
inc
je
jle
es
cmpb
inc
inc
pop
mov
jae
nop
or
bnd
outsb
add
push
adc
jne
mov
adc
mov
sbb
mov
shrl
inc
inc
scas
sub
push
dec
les
adc
xorb
pop
mov
adc
push
je
dec
inc
les
lea
pusha
mov
cli
or
dec
or
jno
pop
repnz
ja
sarb
xor
ror
ja
fstps
xchg
or
out
sbb
outsl
int3
test
inc
sub
iret
push
in
mov
subl
push
jp
int
addb
and
inc
ret
and
add
das
stc
lods
sbb
lcall
div
or
and
sbb
es
and
xor
jo
je
xchg
fimull
pop
inc
fbstp
in
mov
andl
bound
xor
xchg
push
lock
xchg
and
push
ret
push
loope
test
mov
push
sub
outsl
adc
in
inc
jb
movsb
mov
or
dec
dec
cmp
mov
fnstenv
sub
pop
or
xchg
insl
or
sar
jle
mov
adc
inc
ss
test
push
mov
push
mov
push
sarb
xor
inc
push
pop
xchg
loop
sub
and
pop
sbb
mov
jmp
mov
insl
dec
enter
lret
lds
cld
lea
clc
push
lock
adc
fnsave
mov
clc
add
mov
push
cmp
pop
cmp
iret
push
xchg
pop
leave
jecxz
insb
xchg
sbb
nop
fwait
inc
inc
mov
test
nop
jmp
jl
add
adc
imul
inc
imul
adc
cltd
push
fisttpl
xor
ret
cmp
addr16
call
mov
arpl
subl
in
inc
add
sub
or
and
jg
mov
les
xor
es
lds
lret
sbb
lcall
rcl
inc
das
ror
leave
dec
jmp
inc
ljmp
sbb
jnp
in
je
aas
push
cwtl
add
add
push
cmpsl
xchg
sub
sub
push
sbb
mov
scas
mov
sbb
or
out
push
pop
inc
cwtl
dec
lcall
push
pop
and
add
sbb
loop
inc
jae
xor
mov
jmp
rcr
jle
xchg
popl
aaa
xorl
mov
cmc
ret
push
scas
mov
pop
imul
sub
cld
imul
push
lcall
aas
cmpsb
jmp
movsl
dec
cmp
roll
fbld
dec
xor
push
mov
add
fisubs
popf
add
mov
mov
mov
mov
leave
mov
sbb
aam
lahf
mov
imull
loopne
cli
pop
sbb
inc
dec
scas
mov
dec
jecxz
stos
je
xor
cltd
and
in
aas
xor
sub
jge
inc
adc
lret
add
pop
xchg
add
setp
daa
rcl
push
push
stos
pusha
pop
and
or
scas
sbb
cs
xor
jecxz
mov
lret
cli
popf
cmp
xor
xlat
adc
test
push
cmc
divl
ss
repnz
stos
xchg
xchg
and
imul
xchg
in
insb
pop
jge
pop
mull
pop
not
or
push
or
xor
and
sbb
mov
sub
push
cmc
adc
or
or
fcoms
inc
mov
imul
aaa
adc
and
out
outsl
sub
mov
mov
leave
in
nop
jmp
movsl
int3
adc
iret
jmp
add
nop
push
shrl
lods
jmp
gs
lret
add
hlt
dec
cmp
inc
mov
sarl
add
shrb
add
jle
pop
rcr
lret
cmp
lds
mov
add
insl
inc
stc
sub
pop
adc
push
mov
inc
mov
push
out
cwtl
or
mov
stos
js
mov
inc
push
psrad
push
fcmovnb
ss
add
and
arpl
mov
out
xchg
sbb
imul
stos
fisttpl
sub
cs
sbb
jnp
pop
mov
xchg
rcrl
xor
jl
mov
dec
dec
push
clc
fsts
jg
inc
jle
jnp
pop
imul
icebp
push
pop
adc
bnd
adc
fnstsw
mov
pop
into
cli
cs
cmc
inc
push
sub
or
gs
cld
bound
mov
lahf
push
out
repz
sahf
jle
gs
push
push
icebp
add
or
pop
flds
pop
or
jne
loopne
popf
pop
xorl
add
mov
adc
lcall
repnz
inc
in
push
test
aad
jl
lods
sti
fsubs
jno
arpl
adc
decb
mov
ret
inc
nop
inc
test
insb
ds
scas
imul
je
jp
sbb
nop
sbb
pop
out
xor
loopw
xor
dec
or
test
mov
xor
in
scas
fbld
xor
rcl
testl
dec
adc
fsubrl
pop
xor
push
outsb
outsl
imul
and
out
in
mov
into
in
mov
fadd
aaa
sahf
fldcw
js
cmp
sub
add
xlat
fimull
fdivs
scas
rcrl
inc
xchg
xchg
sbb
mov
popa
das
sub
push
daa
and
adc
pop
sbb
xchg
jg
arpl
inc
mov
data16
and
inc
mov
push
cmp
pop
pop
inc
out
dec
insl
lods
xor
push
add
sub
mov
hlt
mov
popf
adc
ret
ss
dec
loop
add
lret
addb
push
xchg
test
adc
sub
lods
pop
adc
push
cwtl
ud2
lret
xorl
aaa
arpl
jg
loopne
xlat
roll
mov
mov
jmp
aam
aaa
sub
dec
outsb
mov
adc
loopne
fcmovnu
scas
mov
repnz
shll
mov
fld
mov
sbbb
loop
cwtl
xchg
call
or
and
daa
in
jnp
insb
aam
push
dec
decl
sbb
scas
or
inc
mov
int
xor
jle
mov
movsb
into
mov
pop
push
jns
cmpsl
push
or
mov
loopne
cmp
jg
mov
pop
aam
dec
out
clc
sar
cmp
arpl
jmp
jbe
pop
xchg
cmpsl
movsl
jg
inc
push
sub
test
xchg
cmp
arpl
fcompl
loopne
sub
push
adc
outsb
rolb
mov
jp
inc
test
mov
pop
jg
mov
lret
mov
sbb
adc
repnz
or
aam
pop
mov
cmp
out
sbb
out
pop
iret
int
scas
mov
pop
add
mov
rorb
xchg
xor
popa
ds
push
and
into
test
jle
pop
mov
hlt
into
pushf
xlat
ret
mov
sub
mov
call
jp
cld
in
outsl
int
pop
std
dec
mov
dec
cmp
or
aam
jo
in
inc
sbb
xchg
jb
and
dec
mov
in
orl
and
fs
push
push
mov
jns
es
jnp
daa
imul
push
push
push
push
hlt
sarl
or
data16
push
fldcw
pop
mov
fadds
push
cmp
stos
stos
sub
arpl
into
in
push
xchg
out
pushf
cmpsl
lahf
lods
decl
jo
insl
sbb
mov
lcall
sub
out
pop
mov
push
iret
push
xchg
dec
dec
leave
dec
push
mov
imul
sub
sahf
ret
pop
mov
ja
push
outsb
leave
repnz
cmp
js
insl
jl
mov
pop
adc
aaa
mov
inc
std
loop
jl
inc
mov
inc
rcll
es
add
jae
pop
sub
addb
lods
push
aam
lea
pop
out
and
mov
jg
repnz
aaa
mov
adc
jo
mov
add
add
sbb
aas
scas
cmc
mov
pop
inc
push
mov
mov
mov
cmpb
mov
ja
and
out
mov
test
add
je
enter
add
dec
popa
jno
aam
jge
popa
jmp
outsb
pop
gs
les
mov
dec
adc
and
mov
mov
xor
pop
lds
in
outsl
sbb
mov
push
out
pop
repz
dec
push
lret
mov
fisubrl
sahf
subl
xchg
imul
mov
sub
ficoms
leave
xor
out
addr16
cli
test
mov
or
xchg
sub
arpl
repnz
jl
mov
leave
mov
sub
ds
adc
test
ljmp
inc
aas
push
pop
hlt
pop
dec
fwait
sub
push
pop
lds
jae
inc
mov
jbe
push
xchg
jo
mov
xchg
cwtl
dec
cld
jae
mov
jno
dec
ds
push
rclb
insb
out
mov
scas
lret
push
imulb
jbe
cwtl
and
mov
cmp
test
adc
leave
mov
push
inc
test
cmpsb
push
mov
test
mov
test
sbb
mov
stos
adc
inc
add
jne
inc
cmp
mov
inc
xchg
rorb
jle
add
add
mov
adc
fcomip
or
inc
test
cmp
rcr
pushf
cmp
je
or
pop
or
int3
fs
imul
push
xchg
sbb
push
push
pushf
add
mov
dec
xchg
jp
js
adc
mov
shrl
std
add
cwtl
cmp
shrb
sbb
dec
sahf
in
mov
cmp
xor
add
cmpsl
xor
popf
or
sbb
ret
cld
inc
push
out
subl
sbb
or
dec
sub
mov
jne
in
test
and
shlb
test
cltd
pop
pop
jp
loop
mov
mov
mov
sub
push
cltd
jno
pop
icebp
cwtl
cmp
or
pop
testb
sub
mov
fldenv
rclb
xchg
std
lcall
enter
stos
push
testl
mov
or
out
jb
xchg
jno
or
mov
lret
pop
out
stos
call
mov
xchg
pop
stos
xchg
cmp
sbb
inc
out
mov
lret
mov
pop
js
shll
inc
sti
in
aam
push
xor
inc
fildll
pop
lret
pusha
sub
arpl
fsubrp
push
outsb
lock
xchg
add
sbb
or
push
iret
sbb
mov
clc
cltd
add
pop
lods
addr16
rorb
push
movsb
sub
fs
mov
or
enter
jbe
and
sub
insl
xor
rcl
cmp
dec
das
cltd
mov
lods
cmp
fdiv
vprotw
push
sbb
fs
pop
out
insb
mov
or
cli
cmc
mov
push
adc
jno
mov
sub
xchg
cli
sbb
test
das
in
mov
jg
sti
dec
imul
jle
aad
std
in
push
fisttps
pop
mov
shrl
repnz
hlt
rolb
jnp
lahf
scas
mov
call
repz
and
sbb
ja
test
aam
outsb
jmp
repnz
in
in
cmp
or
aas
cmp
adc
inc
cli
sbb
loopne
scas
sub
xor
jae
test
mov
jb
loopne
jmp
ficompl
insl
lcall
mov
inc
das
push
shll
adcb
negl
xchg
mov
jne
mov
imul
add
inc
add
jmp
sub
jp
scas
xor
es
cmpsb
cmpsb
dec
cltd
fxch
cmc
pop
dec
sub
pusha
push
fidivrl
or
push
out
mov
sbb
mov
fnstcw
ret
test
add
cmpsb
pop
out
int3
dec
rolb
cmc
ja
iret
xchg
push
inc
push
inc
stos
sub
inc
pop
in
cmpsb
cwtl
jns
xchg
adc
popa
lods
inc
outsl
xor
pop
mov
testl
cwtl
sbb
jbe
pop
cmp
js
dec
rcl
sub
shrb
stos
add
mov
aaa
pop
scas
or
pop
xlat
lods
mov
inc
sub
in
fs
mov
in
aam
fcoml
mov
mov
sarb
out
and
fdivrs
hlt
lea
scas
xor
and
leave
test
and
add
mov
cmp
sbb
or
and
adc
jne
jbe
lret
inc
jg
adc
fwait
push
notb
push
adc
jl
mov
test
pop
fisubrl
stos
mov
sbb
mov
cmp
jmp
jo
shr
push
jne
dec
dec
push
fnstsw
inc
mov
into
dec
add
sub
pop
jle
sub
and
inc
cmp
cmp
xchg
shrb
mov
in
pop
xchg
cli
popf
sbb
jle
or
imul
jg
xlat
dec
outsb
sbb
push
out
int3
mov
adc
int
outsl
xor
aas
adc
cltd
push
and
pusha
or
loope
lds
xchg
lds
arpl
int3
div
test
inc
mov
outsb
ret
lods
pop
xor
jmp
int
push
test
ja
repnz
inc
dec
popf
roll
je
adc
jnp
pop
add
js
mov
xor
and
aam
or
cmp
dec
repnz
sub
repnz
xchg
rcll
push
push
imulb
or
xor
sahf
push
inc
push
push
push
sub
push
loope
mov
dec
sahf
insb
fwait
jg
in
je
adc
pop
mov
push
out
cs
out
int3
inc
adc
mov
mov
sbb
je
pop
sub
pop
mov
xchg
push
into
mov
mov
mov
push
jge,pt
in
aad
add
ljmp
and
bound
xchg
in
cmp
ficompl
decl
hlt
mov
inc
aas
inc
and
int3
and
dec
sub
adc
das
clc
fcoms
les
loop
sbb
push
call
mov
mov
sub
fmul
add
js
mov
cmp
push
enter
lods
xor
sbb
push
dec
scas
fcoms
sub
aaa
jbe
jp
imul
dec
out
inc
out
lods
mov
push
fcompp
ss
push
adc
subb
outsl
in
pop
add
sbb
mov
push
imul
loop
lock
cmpl
add
jl
dec
jne
mov
or
lret
jno
rcrb
fimull
pop
rcl
jno
addr16
sub
insb
out
lret
repnz
or
adc
pop
cmc
sti
rol
xor
ret
mov
mov
cwtl
lods
push
mov
jl
or
mov
lea
jl
imul
mov
or
jp
rcl
mov
and
gs
dec
mov
cli
or
jno
mov
pop
jo
hlt
inc
pushf
out
insl
sub
outsb
lret
xor
adc
adc
movsb
dec
xlat
inc
rcr
inc
cmp
lret
std
dec
sti
in
xor
out
arpl
sbb
pop
adc
or
jg
mov
sbb
std
add
mov
cltd
xchg
sub
stos
xor
pop
cs
xor
pushf
lret
add
out
push
popa
shrb
add
lret
or
jo
inc
jae
dec
xchg
inc
xlat
jno
aam
fwait
mov
mov
sbbl
int
xchg
jl
inc
xor
ja
insb
pop
xor
or
inc
pop
xchg
mov
bound
xchg
cli
lods
imul
sbb
mov
inc
inc
pop
jbe
pop
cmpsb
xchg
imul
ds
pushf
push
call
inc
shr
lea
xchg
adc
lahf
int
jne
inc
mov
inc
int
rep
insl
add
divl
fcomps
cmp
jge
lret
pop
xchg
hlt
push
lea
in
out
fisubrs
jp
stos
les
loopne
outsb
test
mov
pop
cmp
cmp
mov
xchg
xor
lret
jmp
add
in
xor
mov
xchg
dec
mov
sbb
add
mov
in
xlat
int3
adc
mov
jae
xchg
jb
add
lret
jp,pn
pushf
and
xor
pop
scas
sbb
or
or
int
pop
dec
cs
shrl
xchg
loopne
xchg
adc
je
add
sbb
lods
dec
fimull
fimuls
popa
loopne
jg
push
fiadds
popa
xchg
mov
pop
fisubl
arpl
scas
push
testl
xor
jae
jb
cmpsb
fsubl
sbb
loope
sbb
and
and
ror
aad
les
fmuls
dec
cli
and
mov
leave
es
xchg
mov
mov
into
push
leave
jno
mov
inc
push
lret
add
fwait
scas
fs
jmp
adc
xchg
fdivrl
jnp
jmp
jnp
aad
sub
pop
xchg
mov
and
sub
sarb
in
jmp
xor
mov
or
mov
nop
inc
scas
xchg
push
int
pop
push
dec
ficoml
scas
test
out
out
jns
pop
add
push
imul
push
pop
xor
sti
xor
sub
or
retw
inc
not
repz
jmp
stc
popa
pop
leave
lds
lahf
jecxz
filds
popa
movsb
fcmovne
push
xchg
pop
repz
xlat
mov
add
aam
pusha
mov
pop
icebp
dec
dec
imul
cmpsl
repz
pop
mov
jb
cmp
inc
ret
ss
mov
push
out
movsb
out
test
loope
in
or
pop
and
fcmovne
jo
or
and
stos
sub
shlb
ud1
push
or
sub
inc
fs
cmp
or
shll
mov
xlat
and
inc
decb
xor
pop
ss
subb
popa
push
add
add
cmp
test
and
call
jns
jae
dec
leave
scas
xor
pop
push
sub
iret
jnp
push
push
dec
lret
jns
xor
pop
push
cmp
decb
jl
ffreep
jmp
pop
int
int
fcomps
insb
pop
lahf
movsb
aas
test
out
sub
pop
xchg
pop
enter
dec
lcall
mov
inc
stos
movsl
push
dec
dec
les
fstps
inc
jg
imul
pop
cld
push
inc
push
nop
mov
mov
cmp
and
lret
mov
mov
imul
jge
outsl
xor
pop
xor
jg
xrelease
imul
adc
mov
ja
fs
std
push
and
sbbb
gs
ds
es
ret
mov
out
dec
cli
int
sub
mov
mov
xchg
inc
call
inc
lret
stc
outsl
stos
fldl
adc
mov
add
int
popf
and
mov
stc
pusha
pusha
outsl
mov
lock
inc
dec
sub
insb
push
ret
movsl
add
jmp
sbb
jp
xor
outsl
jecxz
mov
mov
lahf
ret
xchg
clc
icebp
insl
clc
xchg
xchg
sbb
gs
xchg
cmc
inc
stc
or
data16
mov
ds
in
leave
insl
jbe
mul
mov
out
or
mov
jns
pop
pushf
cmc
xchg
sbb
incl
scas
dec
int3
lea
push
test
stos
and
mov
pop
nop
mov
and
out
popf
icebp
scas
cld
in
push
mov
icebp
nop
psubb
cmp
mov
gs
jae
out
popf
sub
push
stc
and
imul
pop
or
push
inc
xorb
lret
push
xchg
xchg
cwtl
xor
mov
lods
jno
adc
inc
push
dec
fs
cmovo
inc
inc
xchg
xor
mov
sbb
rclb
inc
dec
adc
push
mov
and
movsl
mov
fisttps
cltd
xor
cmpsl
cmp
push
ja
xchg
xchg
cmpsb
dec
or
frstor
adc
adc
jbe
add
in
cltd
pop
adc
repnz
and
pop
icebp
dec
xchg
cltd
sub
mov
jecxz
inc
sbb
pop
xor
aam
je
push
push
ror
incb
shll
mov
adc
mov
mov
repz
push
pop
push
fistpll
lahf
int
jns,pn
gs
mov
test
mov
mov
or
jo
xchg
daa
add
sub
scas
xchg
dec
pusha
pop
pop
xchg
sarl
cmp
push
mov
dec
pop
test
gs
aaa
push
pop
or
out
add
mov
inc
je
dec
in
push
fiaddl
stc
jo
and
pop
movl
dec
push
adcl
pushf
insb
cmp
xor
sub
add
aad
and
lock
test
stos
out
enter
incb
sbb
fwait
mov
data16
lret
mov
loope
inc
fstl
orl
pop
mov
stc
inc
les
fs
popa
and
xchg
pop
add
xor
out
test
aas
aas
mov
dec
out
stos
xchg
aad
pcmpgtb
std
arpl
mov
scas
nop
enter
in
outsl
lds
xor
xchg
push
je
fimuls
cmp
daa
push
xorb
rolb
sub
add
xchg
negb
push
lds
fstp
ljmp
sbb
dec
mov
pushf
mov
jb
cmpsl
into
cmpb
sarb
mov
push
fstpl
adcb
cmp
xchg
and
push
lock
jp
js
sti
mov
adc
push
or
mov
std
sbb
xor
rolb
int
rclb
int
cmp
imul
out
inc
iret
jle
sbb
pop
push
inc
leave
mov
push
adc
repnz
fwait
sbb
cmp
pop
mov
add
call
xchg
ss
movsl
test
sbb
sbb
sbb
xchg
jno
rol
int3
sub
outsl
inc
sti
notl
icebp
mov
icebp
popa
push
test
pop
xor
and
pushf
out
cli
fwait
mov
scas
jp
ret
sbb
adc
mov
cmp
push
inc
sbb
mov
aad
xchg
push
pop
mov
inc
jbe
push
xchg
push
stos
jbe
test
scas
insl
out
cmp
scas
arpl
push
out
xor
and
outsl
hlt
ror
pop
sbb
xchg
and
repz
pop
adc
rcll
push
repnz
push
call
push
stos
repnz
push
sub
mov
stos
sub
xor
jmp
cmp
and
arpl
jne
clc
and
notb
rol
adc
mov
jge
fildl
and
push
pop
push
sbb
sbb
mov
fldcw
scas
in
fbstp
push
mov
dec
xor
ja
pop
push
cmp
mov
mov
test
xchg
inc
xchg
inc
push
and
je
sub
insl
mov
lds
xor
dec
into
lds
arpl
sub
lods
sbb
movsb
jnp
fmuls
ja
xor
cs
pop
dec
add
fidivl
fcoml
push
mov
inc
mov
adc
xchg
mov
jns
ja
mov
xlat
stc
out
inc
fcmovnbe
mov
in
ja
pop
add
stos
sub
in
fcmovb
adc
dec
ret
cmc
insb
imul
mov
jns
aaa
popa
fildl
ja
jae
push
inc
in
dec
dec
mov
lahf
fwait
inc
jle
les
cmp
jg
sub
rorl
iret
xchg
inc
das
mov
push
adc
aas
mov
pop
and
xor
in
cmp
jbe
lret
ja
cmp
mov
cli
dec
jp
pop
add
or
xlat
adc
enter
adc
or
mov
shll
mov
push
pop
and
cmpsl
mov
adc
gs
pop
xor
gs
and
ds
ret
xchg
mov
cmpsl
bound
cmc
mov
mov
add
loopne
mov
mov
xor
mov
loopne
push
ljmp
pop
int
ret
jb
aam
mov
insb
sahf
and
xor
jge
pop
andb
mov
cld
stos
mov
and
mov
xchg
mov
xor
or
or
push
sbb
mov
mov
lods
data16
or
dec
cmpb
lcall
add
xchg
ja
stc
out
les
sbb
test
xchg
imul
pop
sbb
jp
insl
and
jae
lock
ret
mov
ljmp
negb
stos
sbb
rcrl
jle
imul
jno
in
push
push
inc
jns
mov
das
or
scas
sbb
xor
hlt
aad
mov
dec
les
xor
imul
xor
adc
mov
mov
or
push
or
idivb
cmc
or
shll
add
insl
mov
push
aaa
sbb
cltd
or
out
inc
loope
lods
bound
adc
xor
sub
rcr
into
lods
aaa
xchg
mov
dec
jns
dec
fdiv
push
ret
jg
jle
in
adc
push
clc
adc
adcb
dec
xchg
inc
outsb
into
aas
push
adc
xor
arpl
fcomps
cmp
sbb
and
pop
imul
cmp
add
shrb
jp
leave
fldt
mov
jge
mov
pop
cmpb
cmp
mov
mov
mov
sub
jle
scas
push
xor
inc
push
jg
lahf
mov
add
dec
movl
inc
mov
daa
pop
in
sbb
loop
repz
inc
es
add
sub
mov
int
mov
repnz
push
adc
shrb
push
pop
add
lds
gs
roll
clc
inc
in
cmp
xor
xchg
movsb
leave
lods
inc
movsb
cld
repz
clc
adc
or
popa
jo
repnz
loope
ljmp
mov
stos
jb
adc
push
pop
jns
jnp
and
pop
lods
pop
leave
loope
sbb
mov
and
or
fs
insb
mov
in
jne
inc
test
add
jg
and
out
scas
addr16
sbb
fs
xchg
sub
mov
sbbl
sub
xchg
adc
add
movsb
or
andl
inc
pop
xor
pusha
inc
dec
add
push
std
dec
ror
fidivrs
jne
dec
mov
repnz
test
lods
cwtl
hlt
adc
aad
push
fnstsw
sub
out
repz
xor
add
push
cmp
cmc
mov
push
adc
pop
push
add
sbb
movsl
and
adc
mov
jg
test
mov
xchg
popl
fs
dec
xor
stos
gs
or
dec
push
xchg
in
cmp
xchg
je
sub
push
inc
aaa
pushf
cmpb
stc
movsl
shll
out
xor
add
add
cmpsb
lods
push
jb
adc
dec
and
rorb
xchg
cmp
mov
jp
xchg
jae
inc
stos
cmc
lret
std
push
test
mov
mov
cmp
sbb
cwtl
add
into
add
dec
lock
pop
jge
mov
fwait
and
sub
pop
mov
pop
js
and
jl
sub
sub
out
mov
pop
push
lock
inc
call
andb
mov
lock
mov
jmp
sbb
iret
mov
inc
ljmp
out
mov
pop
aaa
inc
inc
nop
sub
cmp
ss
es
test
lea
out
adc
and
or
lcall
data16
int3
fiaddl
inc
fsubrl
rcrl
data16
daa
mov
ljmp
add
jecxz
stc
pop
mov
push
or
xchg
or
scas
and
add
cmpsl
in
pop
cmp
test
sahf
xchg
or
mov
gs
jns
cld
sarb
sahf
test
push
and
popa
enter
aad
cmpsb
shll
pop
jbe
cmp
lret
or
leave
adc
cmp
int
jb
and
xorl
cs
xor
dec
adc
xlat
fwait
sahf
test
mov
fcompl
insb
sbb
mov
pop
xor
cmp
cltd
sub
jb
stc
mov
sub
jo
lds
mov
scas
push
mov
setle
jne
or
add
push
push
add
mov
daa
push
inc
shll
dec
aad
xchg
push
mov
shrl
sahf
push
jne
mov
dec
ret
mov
xlat
sub
sbb
xlat
mov
sub
jle
mov
ja
fldln2
fnsave
lock
pinsrw
mov
out
mov
xor
xchg
cmc
cmp
fcoml
push
pop
lret
pop
sahf
sub
xchg
mov
lret
aaa
push
cmp
shll
push
jo
ds
out
mov
adc
add
mov
dec
icebp
cmc
mov
in
mov
repz
or
fstl
fisubrl
mov
inc
test
jge
daa
pop
cmpsb
shlb
ret
dec
inc
add
call
adc
push
adc
outsb
mov
xor
loopne
sbb
xor
jo
jg
fstps
in
mov
sub
int
pop
pop
fadds
aas
and
icebp
mov
loop
xchg
xchg
pop
xor
je
or
outsb
lea
jae
mov
mov
shlb
xchg
outsb
sti
pop
lods
ret
fisubrs
jne
out
push
adc
inc
cli
repnz
pop
aad
nop
add
push
cltd
icebp
daa
sub
jge
mov
push
inc
out
mov
mov
push
and
rcrl
lahf
daa
mov
std
mov
je
push
lea
push
out
mov
addl
mov
clc
sarl
pop
sub
test
cli
stos
xchg
xchg
in
cltd
jmp
iret
xor
mov
mov
adc
inc
add
add
enter
mov
xchg
addb
je
add
das
aaa
scas
or
add
and
push
jns
and
mov
or
mov
cltd
push
dec
je
in
in
shll
dec
adc
jns
call
xchg
pop
mov
cs
sbb
je
jnp
mov
daa
push
std
jp
inc
or
xchg
shlb
xchg
jns
fwait
stos
pop
addr16
ret
in
test
cwtl
mov
dec
mov
push
cmpsb
sbb
push
mov
int
mov
push
mov
pop
lods
mov
mov
xor
dec
adc
adc
dec
mov
xor
adc
imul
jp
in
mov
in
jae,pn
and
inc
mov
icebp
sahf
mov
cmpsb
or
cld
out
inc
sub
rorl
push
mov
rorl
push
xor
xor
xor
mov
lock
jl
cmp
mov
xchg
cli
push
lcall
lret
cmp
sbb
in
je
xlat
jbe
ret
das
sub
xor
lea
xchg
insb
ret
enter
pop
fsubl
pop
add
push
and
mov
cmpsb
adc
imul
sbb
daa
adc
push
cmpsb
in
movsb
pop
cld
cmp
mov
insl
test
mov
aad
mov
loope
fcoml
cmpsb
push
mov
pop
dec
mov
or
fbld
pop
mov
ret
sbb
pop
cmp
sub
cld
xor
shl
pusha
outsb
fucomip
dec
int3
fidivl
or
stos
push
xchg
lock
in
mov
mov
je
and
mov
add
jmp
pop
in
out
std
jne
mov
dec
mov
stos
cltd
dec
mov
sarl
addb
in
jmp
movsl
push
test
xchg
pusha
imul
add
outsl
fists
add
cmp
dec
aas
testl
xor
xchg
pop
mov
mov
push
int3
pop
jp
cmp
jb
loop
jb
imul
push
mov
lahf
xchg
rorl
incl
pop
xor
rorb
sbb
subl
mov
addr16
adc
fmul
mov
aas
inc
and
insl
jp
sub
mov
repz
sar
adc
in
push
imul
pop
sbbl
mov
or
imul
inc
cmp
mov
ss
sti
lret
and
mov
jb
mov
cwtl
sub
ljmp
mov
daa
push
shll
cltd
pop
inc
add
hlt
imul
mov
sbb
sahf
and
adc
dec
sahf
popf
jl
sub
dec
clc
sub
loopne
pop
pop
add
pop
xorb
jno
ret
sub
mov
icebp
aaa
mov
fldt
sub
sbb
lahf
push
mov
jecxz
movsb
testb
jmp
or
jg
mov
jns
in
andl
xor
mov
cmp
cmp
outsb
int3
addr16
xor
gs
dec
mov
mov
fcoms
pop
mov
addr16
add
ficomps
inc
cmpsl
cwtl
xchg
loopne
cltd
test
test
icebp
jl
adc
aam
inc
into
jne
xchg
mov
cmp
lods
loop
add
aam
push
adc
dec
inc
sub
call
pusha
pop
cmpsl
enter
fwait
jo
mov
mov
jb
add
leave
pop
push
inc
cmp
lds
arpl
test
fstl
cmpsl
or
xor
rcl
iret
or
loope
pop
jecxz
mov
pop
xchg
inc
clc
mov
clc
test
popa
iret
and
push
inc
sahf
scas
mov
or
rorl
and
add
imul
xor
mov
or
mov
lcall
mov
fiadds
mov
xchg
jp
mov
loop
add
cmp
or
fisubrl
cmc
xchg
or
mov
call
push
xchg
lcall
stos
inc
or
in
cmp
enter
jnp
aad
inc
int3
movsl
loopne
or
lret
ljmp
and
shl
test
fwait
cmp
mov
xchg
pop
push
in
push
loopne
cmp
push
mov
xchg
jae
arpl
sub
or
in
mov
jae
xchg
xchg
mov
in
xor
pop
repnz
mov
clc
pushf
ficoms
out
inc
clc
lcall
mov
mov
xchg
add
imul
aas
orl
cmpb
into
xchg
pop
push
cmpsb
imul
loop
mov
push
lcall
cmp
cmp
fcoml
dec
push
mov
lret
push
push
mov
pop
jnp
mov
dec
lret
movb
push
xor
sub
xchg
dec
pop
lcall
fs
inc
loop
loope
imul
mov
sbb
push
mov
push
lret
gs
out
xchg
pop
stos
dec
cmpsb
lods
je,pn
rcrb
stos
and
mov
shlb
cmp
jae
mov
sub
call
cwtl
dec
xor
push
test
cmp
jg
push
std
xchg
ret
js
or
add
pusha
stc
inc
inc
test
inc
insl
jmp
adc
xor
sbb
mov
stos
cmp
fdivs
dec
test
scas
mov
jle
es
insl
fadd
mov
out
mov
nop
inc
out
rorl
jecxz
xchg
cld
das
lods
jb
mov
ds
push
mov
xchg
imul
out
cld
push
popf
das
add
mov
or
seta
sub
push
popa
pop
fisttps
inc
aaa
jl
jne
aad
adc
jne
clts
xor
xor
inc
repz
addr16
and
mov
mov
into
adc
mov
lahf
fnstcw
xchg
adc
cmp
ja
out
push
jge
push
arpl
cltd
jmp
popf
leave
lea
jle
daa
and
aad
lahf
xor
jae
or
lret
fiaddl
or
cmpsl
xchg
adc
sub
or
sbb
mov
mov
push
push
adc
adc
imul
or
xchg
jl
lock
cvtps2pi
test
cmp
fisttpl
xchg
push
or
sbb
inc
inc
or
dec
jle
or
hlt
and
mov
add
xchg
out
es
xor
sbb
dec
out
add
push
sub
loopne
pop
jae
or
dec
into
nop
mov
das
inc
ja
cmp
stos
fwait
sbb
xchg
push
outsb
add
pop
inc
push
mov
subl
fs
push
lods
jne
mov
and
lret
pop
jg
and
enter
les
test
je
push
jo
mov
imul
or
sub
cwtl
mov
arpl
dec
ja
hlt
roll
pop
mov
clc
add
sbbb
out
mov
dec
push
js
adc
mov
cmp
mov
nop
inc
sub
std
dec
int
addb
movsb
push
xor
xchg
xor
inc
cmpl
push
dec
inc
aaa
lahf
jle
add
ret
js
pop
rcrb
mov
inc
pop
scas
sti
inc
adc
mov
daa
out
xchg
jne
fidivrs
movsb
loop
mov
fldenv
test
out
int
lods
xor
push
xchg
adc
or
ss
insb
pop
add
push
mov
shrb
in
lahf
xorb
mov
fcomps
jl
jp
xchg
sub
jns
sbb
sub
jno
mov
int
jg
sti
mov
testl
int
divb
sahf
insb
mov
pop
inc
andb
scas
mov
mov
mov
rcl
enter
jb,pt
mov
mov
adc
pop
pop
sbb
js
jle
mov
push
xchg
fistps
push
test
xchg
lret
xchg
mov
push
or
xor
in
outsl
or
lahf
repz
mov
push
jb
fistps
mov
pop
mov
ss
push
push
jmp
jo
fs
dec
adc
push
daa
inc
cmpsl
push
loop
lahf
imul
dec
xchg
into
mov
sahf
outsl
cmp
stos
insb
outsl
js
fwait
xor
popa
lea
sub
add
sbb
insl
mov
repz
jo
xchg
dec
jmp
shll
mov
mov
jne
push
daa
shrb
jp
adc
lret
shl
push
in
aaa
dec
arpl
dec
insl
js
daa
out
cmp
jp
mov
pop
pop
popa
call
adc
out
adc
jmp
adc
xchg
mov
push
pop
pusha
into
into
imul
pop
lret
int
icebp
xor
push
sbb
xchg
fs
decb
jbe
mov
sub
stc
push
shlb
xor
jecxz
sbb
lds
aam
jae
clc
in
push
adc
push
dec
or
call
cmpsl
mov
lods
es
fcmovb
and
lret
rol
sbb
lea
loop
cmp
mov
mov
push
push
lahf
adc
pop
loope
popa
mov
mov
jns
jns
divb
mov
popf
movsb
push
in
hlt
out
mov
inc
je
push
out
inc
ja
addr16
popf
dec
sbb
dec
test
cwtl
jecxz
sbb
imul
mov
and
push
stos
arpl
into
jno
or
sub
in
xchg
loop
outsl
jne
daa
dec
push
lock
mov
dec
jnp
mov
mov
xchg
cmp
xor
test
lcall
jns
ljmp
sbb
imulb
adc
mov
pushf
inc
pusha
jns
mov
pop
lcall
fcmovnu
imul
mov
je
jp
aaa
push
stos
pop
mov
hlt
negb
add
mov
xchg
and
mov
xchg
nop
and
adc
lahf
jg
aaa
pop
repz
push
jge
filds
insl
inc
lock
es
dec
dec
jmp
das
mov
sti
push
pop
add
sub
pop
mov
xor
mov
sub
imul
adc
leave
xor
dec
sahf
xorb
inc
mov
mov
cmp
jnp
ret
lds
cmp
js
rcr
pop
mov
push
in
shrb
sub
jb
mov
push
nop
out
int3
and
pop
popa
cli
mov
lret
notl
pop
out
adc
jmp
dec
daa
push
rcll
repnz
aaa
push
jl
push
and
and
icebp
repnz
xchg
fcmovu
mov
dec
push
cli
inc
and
xor
into
fdivrl
gs
cmpsb
imul
cwtl
inc
je
cmp
clc
imul
arpl
pusha
mov
popf
jnp
push
add
sbb
ljmp
jp
mov
add
xchg
add
xchg
push
pop
jo
sub
adc
cltd
or
jnp
fistl
jmp
dec
in
fsubr
pop
dec
call
addb
and
jle
mov
jae
push
inc
inc
div
fnstsw
or
pop
pop
in
xor
cli
fs
xor
test
or
or
je
out
xchg
pop
mov
xchg
mov
cmp
loop
dec
xor
mov
imul
dec
sub
in
jg
mov
pop
fstps
aaa
arpl
inc
aaa
jg
pop
test
mov
xor
les
mov
adcl
lret
add
lea
mov
cmp
mov
rol
loop
clc
and
jmp
fs
sub
pop
xchg
jne
popa
lahf
jmp
cmpsl
mov
jbe
push
mov
push
mov
mov
mov
xchg
fildl
std
cmp
js
xor
pop
pop
mov
dec
lock
or
jecxz
mov
mov
sub
aam
jbe
xchg
out
jg
icebp
outsb
mov
das
popa
cmp
mov
inc
out
mov
inc
cmp
dec
cltd
xor
sarb
imul
outsb
inc
mov
and
std
lods
push
ficompl
jecxz
aam
movb
add
mov
divb
xchg
dec
scas
inc
ja
jo
test
ljmp
pop
mov
sub
fdivrl
sub
sub
ret
ret
gs
cmp
jp
subl
loope
pop
pop
inc
mov
subb
jb
ror
add
cmpsb
es
daa
mov
jle
sub
jae
scas
test
insb
mov
push
and
lret
mov
push
and
xor
int3
xor
faddl
pushf
sub
inc
lahf
scas
add
out
aam
inc
and
sub
rol
push
xchg
dec
je
or
inc
or
cmpsl
mov
mov
or
out
mov
mov
and
push
pop
mov
lea
mov
arpl
shrb
cmp
cmpsb
aam
dec
jl
arpl
call
sbb
and
push
mov
cmp
out
call
stos
jp
or
popf
xor
inc
dec
rorb
movl
sub
xchg
testl
push
xchg
sub
cmp
cmp
ja
mov
shlb
fcompl
push
subl
push
mov
jne
in
xor
jmp
mov
rclb
lods
mov
sub
stos
or
insb
inc
int
jb
shlb
dec
dec
push
loopne
or
fsubl
cltd
out
push
dec
mov
loop
mov
and
fdivrl
and
repnz
fimull
loop
int
pop
enter
xor
xchg
jle
je
sahf
sbb
nop
add
sbb
lods
dec
xor
push
and
push
xchg
dec
clc
sub
nop
pop
push
in
pusha
pusha
rol
loopne
and
in
pop
mov
jo
push
cmp
push
sbb
divb
inc
add
inc
lods
sub
cld
xchg
add
decl
mov
outsb
cmp
pushf
lds
add
or
stos
xor
lahf
aas
sbb
arpl
cmc
mov
cwtl
loopne
pop
xchg
dec
stos
cmp
mov
push
mov
mov
jnp
daa
dec
sbb
push
jmp
imul
sub
sahf
fxch
sub
sbb
iret
mov
divl
mov
jb
sbb
xor
rcrl
insl
out
sub
add
pop
pop
sbb
stos
rolb
aam
lock
jne
adc
dec
xor
xorb
ja
flds
dec
jne
punpckhwd
mov
mov
movsb
jo
shrl
mov
aam
mov
mov
mov
das
fcoms
movsb
enter
sub
test
pop
rcrl
nop
bound
xchg
mov
sub
pop
xchg
les
dec
js
pop
xor
push
cltd
test
mov
jb
pop
std
repz
in
sub
and
pusha
dec
jecxz
fcmovb
add
mov
in
and
push
cmc
jbe
sbb
dec
in
xchg
into
mov
push
and
or
xor
mov
pop
inc
imul
test
mov
pop
lahf
dec
xchg
js
sbb
in
or
xor
mov
out
stos
pop
or
sbb
jo
ljmp
std
cmp
adc
cmp
and
sahf
cmp
or
sub
mov
jp
insl
push
shl
inc
imul
call
lret
mov
cmp
inc
cmp
rclb
aad
xchg
push
mov
add
push
addl
dec
inc
aaa
adc
lahf
insb
inc
fnstenv
ss
adc
popf
insb
xor
scas
adc
jp
insl
adc
int3
int
mov
cmp
mov
xor
lea
adc
js
push
mov
mov
xchg
ret
iret
dec
add
insl
mov
and
and
and
aam
test
cli
in
mov
and
mov
pop
aam
xor
mov
add
daa
xchg
lret
xor
enter
out
xor
int
fildl
xlat
jne
jl
movsl
and
std
lret
or
jbe
divl
test
push
hlt
loopne
sub
fwait
cs
push
test
push
lret
and
dec
das
loop
shll
enter
std
out
sub
push
pusha
pushf
sub
sti
lock
aad
push
icebp
pusha
adcb
jg
mov
push
inc
jns
jp
sti
push
mov
mov
or
jecxz
incl
or
iret
rcr
enter
into
fs
insb
aas
mov
cmpsl
mov
push
movsb
jbe
mov
nop
jp
xchg
pop
push
jg
lods
les
rcr
or
shrb
adc
test
pop
repz
and
stos
fimuls
popf
mov
repz
mov
popf
mov
jmp
sub
adc
and
movsb
dec
mov
or
call
inc
call
dec
lcall
push
rcl
push
cmc
jle
sbb
int
mov
sahf
stos
stos
ret
mov
cmp
in
clc
add
mov
sahf
add
imul
loopne
mov
sbb
cli
xor
xchg
stos
fldenv
fldcw
icebp
shl
push
popa
jne
orb
test
jno
and
insb
mov
mov
dec
jb
adc
sahf
xlat
notl
or
add
addr16
mov
hlt
fadds
pop
lock
xchg
es
pop
cmp
subl
pop
mov
stos
push
lock
push
sub
pop
dec
jbe
jecxz
mov
jbe
xchg
js
loopne
cmp
adc
xchg
movsl
aad
subl
or
aam
adc
sti
mov
hlt
int
movsl
jno
xor
jno
cmp
test
add
or
in
shlb
or
add
leave
cs
fcmovnb
jmp
mov
rcll
outsl
pop
cmpl
mov
push
mov
xor
jbe
aas
outsl
outsb
adc
and
xchg
fimull
out
mov
orl
sub
push
pop
out
or
mov
or
cs
lcall
jp
mov
insb
mov
sbb
lods
push
and
jge
nop
cmp
cmp
pop
pop
enter
imul
inc
xchg
sbb
mov
xlat
xor
sub
sub
pushf
lret
dec
mov
icebp
push
das
or
jnp
jmp
aas
push
pop
mov
push
sti
push
dec
inc
xor
mov
test
scas
add
fnstcw
sub
push
pop
push
or
pop
xchg
aas
pop
into
outsl
shll
mov
xchg
mov
push
cs
mov
lcall
ret
lds
dec
push
add
push
cmp
repnz
out
adc
and
adc
mov
jg
push
aam
xchg
into
repnz
mov
bound
dec
sbb
inc
push
roll
cmpsl
adc
in
loopne
fidivrs
sbb
pushf
jmp
js
sbb
adc
in
sub
insb
int
push
cmp
lods
adc
xor
jecxz
xchg
sbb
loope
push
sbb
mov
testl
int3
push
iret
add
lea
mov
ss
outsb
cmpsl
jl
add
inc
lods
jl
push
cmpb
pop
push
fsubr
xor
cmp
push
jnp
dec
scas
xchg
dec
jb
mov
adc
fldenv
mov
sti
mov
push
jno
jecxz,pt
and
sub
daa
sub
xor
jb
addr16
adc
aaa
push
aad
rcrb
outsl
enter
push
aam
fisubs
or
sbb
jb
push
or
or
dec
sbb
xor
mov
sti
sub
mov
jae
push
mov
mov
sahf
adc
sub
jge
call
scas
iret
inc
xorl
push
dec
mov
scas
push
ss
divl
mov
or
ja
mov
mov
cwtl
inc
push
repz
shl
out
cmc
xor
adc
movsl
cltd
test
aaa
and
or
dec
ret
pop
gs
xchg
es
and
mov
mov
xor
sbb
xchg
mov
inc
mov
str
jmp
add
pop
sub
aad
push
push
sbb
stos
add
scas
call
rcl
stos
mov
jmp
cltd
jne
adc
add
mov
push
in
push
push
lret
test
jns
in
jae
sub
mov
push
cmp
dec
or
fwait
enter
adc
das
jnp
push
add
int
stos
imul
and
xor
jmp
pop
sti
cmp
repnz
sub
dec
inc
mov
nop
clc
cmc
sti
adc
rcrl
dec
inc
inc
push
push
or
mov
ret
sbb
push
enter
xor
sahf
sbb
repnz
cmpsb
cld
data16
mov
rcl
mov
jne
sub
adc
insb
push
cmp
outsb
inc
adc
es
in
mov
test
mov
incb
add
xchg
dec
ret
neg
inc
or
pushf
mov
test
xchg
fs
sti
adc
iret
or
cmp
sbb
push
add
jecxz
cmp
pop
scas
inc
fcmovnu
xor
iret
or
and
and
push
mov
into
test
std
gs
jmp
pop
xchg
arpl
jecxz
aas
mov
out
sub
les
negl
fs
testl
push
cmp
ss
dec
sub
lock
mov
xlat
cmp
shlb
add
into
push
pushf
lret
lock
stos
mov
iret
xchg
ret
ss
jno
fildl
push
sbbl
xchg
leave
test
ret
mov
jg
jl
fstps
ljmp
out
inc
and
lock
insl
sbb
add
push
cmp
cmp
sahf
jbe
mov
sahf
addl
movsb
add
sub
inc
leave
mov
mov
jnp
lret
rcll
pop
dec
adc
sub
add
jge
pop
add
out
in
xor
pop
add
iret
imul
mov
cmc
pop
cmp
jge
outsl
call
xor
es
inc
inc
push
mov
pop
pop
je
mov
mov
xchg
lret
ret
xor
mov
mov
jne
sbb
aad
scas
pop
loop
gs
jle
mov
jmp
sub
fs
out
aam
xor
cmp
push
jl
jge
mov
fdivrl
jle
cld
sub
fsub
aad
out
dec
sbb
das
push
es
inc
pop
in
mov
and
fdiv
sub
in
popa
inc
lods
jp
or
xchg
outsl
inc
out
lret
pushf
es
mov
mov
pop
jo
or
call
cmpsl
cmc
add
lea
push
sub
outsl
divl
out
xor
cmpsl
ljmp
mov
push
or
cmpsb
and
mov
dec
je
dec
jl
or
scas
push
or
dec
jg
pop
aas
cld
xor
push
cmpl
inc
push
sub
in
add
mov
cmpsb
les
pushf
cmp
enter
nopl
xchg
sub
add
or
jno
pop
in
insl
sbb
sub
adc
adc
enter
jp
sub
cmpsl
stos
adc
bound
jae
adc
mov
dec
sbb
mov
mov
mov
out
pop
xor
aas
in
dec
dec
int3
mov
lea
clc
dec
test
xor
jb
icebp
xchg
push
arpl
lahf
and
lcall
push
mov
sbb
xchg
mov
xchg
sbb
pop
xor
fwait
movsb
push
mov
arpl
or
xchg
and
clc
inc
cmp
fistpll
adc
cmp
lods
mov
repnz
insb
sbb
add
inc
jecxz
or
jnp
jno
lret
cs
call
icebp
lods
inc
adc
repnz
xchg
push
shll
out
loop
push
ja
fisubl
sub
xor
sahf
inc
dec
ds
add
jle
bound
sbb
loopne
lret
test
sahf
lret
sbb
pop
nop
cmp
ljmp
mov
lcall
test
pop
fwait
movsb
popf
cmc
or
inc
bound
shlb
pop
fbstp
cmp
cmovl
imul
xchg
mul
arpl
push
cmp
mov
mov
sub
aad
push
fimull
pop
and
xor
adc
aaa
adcl
je
mov
xor
js
sahf
push
or
icebp
cmovno
push
mov
jp
inc
mov
pop
dec
xor
aas
jb
data16
xchg
lret
mov
das
xchg
js
pop
fiaddl
adc
icebp
push
xor
in
sbb
aam
adc
jp
jmp
mov
sarl
lcall
push
mov
cmp
lods
push
sbb
jb
adc
aaa
or
cmp
sbb
dec
mov
enter
insl
adc
add
pop
pop
and
rorb
std
push
es
xchg
inc
lcall
mov
aad
mov
add
sahf
xchg
sbb
jne
mov
jbe
in
pushf
or
sub
jne
mov
push
outsb
dec
loop
loopne
pop
adcb
inc
push
std
mov
pop
iret
sarl
xchg
mov
iret
dec
mov
in
idiv
mov
stos
inc
and
imul
pop
inc
pop
and
gs
jl
out
push
shll
dec
add
mov
movsb
inc
mov
mov
cmp
add
pusha
iret
inc
pusha
xor
push
xor
pop
addr16
les
cmpsb
adc
push
mov
cltd
negl
inc
outsl
fimuls
sub
pop
mov
jnp
ss
sub
arpl
mov
add
sub
je
and
mov
lret
flds
jmp
cmpsb
idivl
aaa
xchg
jmp
add
jbe
push
in
test
jle
inc
test
outsb
test
mov
sbb
xor
push
inc
dec
sub
out
jecxz
es
inc
fadd
mov
sub
aaa
cmp
sbb
or
inc
inc
lret
movsl
and
lret
adc
in
mov
mov
lcall
test
test
insb
add
pop
aas
hlt
xchg
push
inc
push
das
jbe
lret
jns
add
cltd
nop
xor
dec
mov
cld
mov
int3
scas
push
xchg
xor
lcall
int
js
pop
sbb
add
inc
xchg
idivb
pop
and
add
jae
in
inc
pop
iret
sub
mov
mov
xor
lcall
not
sbb
inc
adc
das
mov
mov
mov
xchg
ret
or
jg
push
mov
scas
daa
imul
jl
add
and
das
and
push
push
pop
fisttpll
mov
rcll
xchg
hlt
loopne
aaa
scas
push
cli
imul
pop
aam
pop
jbe
pop
inc
rcll
add
cltd
gs
insb
cmpsl
ret
mov
in
in
mov
mov
add
ficompl
add
addb
dec
fisttpl
xor
lock
and
enter
pushf
jbe
push
mov
fimuls
sub
int3
repz
jmp
dec
or
mov
lea
cmp
xor
ds
std
mov
pop
daa
mov
and
lods
addr16
mov
lods
nop
daa
scas
std
mov
and
test
ja
ljmp
fsubr
jmp
gs
insb
sub
jae
push
mov
adc
dec
in
mov
adc
jne
and
sahf
push
pop
sbb
add
adc
xchg
vmovupd
std
scas
mov
pushl
out
mov
aas
sub
adc
and
dec
mov
popa
mov
sub
dec
sub
inc
cmpsb
cmpl
aad
xlat
das
addr16
cli
inc
fdivl
mov
lret
int
add
lret
mov
addb
jmp
push
bnd
mov
pop
loop
addb
mov
cmp
xchg
out
das
pop
js
je
cltd
inc
adc
test
cmp
push
clc
jl
ds
divb
jae
fnstsw
jecxz
adc
out
outsl
repnz
inc
je
dec
sysenter
push
and
inc
push
in
mov
mov
xor
push
rcll
dec
subb
pop
add
ljmp
out
pop
lret
push
mov
lock
sbb
aaa
sahf
and
jecxz
cli
inc
movsb
cwtl
cld
xchg
fdivl
negl
jnp
mov
adc
fcompl
mov
cs
dec
inc
rorl
addr16
pop
mov
sub
xchg
push
push
mov
cmp
xor
mov
sub
xor
and
addr16
and
add
and
inc
leave
sbb
pusha
out
jecxz
das
arpl
dec
cmpl
imul
push
dec
cmp
outsl
outsl
fiadds
sub
inc
pop
xchg
push
dec
out
push
xor
push
jp
adc
pop
push
pop
outsb
out
test
in
insb
sbb
or
push
xchg
lret
cmp
stc
sti
daa
jle
out
dec
icebp
sub
in
push
xchg
mov
jg
loopne
enter
cmp
icebp
push
rolb
add
or
cmp
aas
test
jge
mov
mov
int3
mov
test
xor
add
sbb
xor
inc
mov
popf
ror
lcall
daa
fs
xor
sub
scas
add
dec
lods
jne
sti
pop
cld
mov
mov
mov
outsb
scas
inc
stos
push
ljmp
jne
fcomps
ror
nop
inc
bound
mov
sti
push
mov
cltd
cmp
shll
cmc
leave
jg
imul
scas
push
jne
fs
fcompl
add
dec
adc
sbb
lea
lret
in
dec
pause
and
sbb
in
add
pop
mov
in
sub
add
xchg
and
leave
mov
or
xlat
xchg
imul
xor
jg
mov
nopl
xlat
add
sub
out
jp
std
mov
mov
add
dec
and
pop
mov
push
dec
push
icebp
cmpsb
dec
jnp
bndstx
cmpsb
xchg
adc
inc
rcl
aaa
rol
and
adc
stos
nop
imul
scas
ss
in
inc
dec
or
test
add
jno
rep
mov
mov
sbb
fs
cs
mov
jbe
mov
push
js
inc
imul
les
dec
out
mov
jmp
dec
or
mov
xor
adc
movsl
mov
es
rclb
nop
ja
daa
popf
lahf
popa
arpl
aas
sbb
inc
call
aaa
xchg
lods
inc
aas
cmc
cmp
add
adc
xor
mov
sahf
fldcw
imul
and
push
ja
dec
pop
dec
pop
in
dec
call
arpl
add
cmpsl
sbb
mov
fsubrl
repz
pop
inc
popa
pop
push
sub
xchg
dec
cld
movsb
or
lret
sbb
or
pop
and
mov
aas
dec
sbb
aaa
cmp
mov
rcrl
aam
fmull
pop
into
and
aam
lods
jecxz
jns
test
and
fists
outsl
and
jne
jecxz
xchg
push
and
enter
push
js
push
mov
add
push
outsb
dec
sub
xchg
cmp
mov
aam
jns
rcrb
sub
test
imul
cmp
jno
add
jns
dec
mov
sbb
ljmp
mov
fdivrl
movsb
jge
jp
inc
add
cmp
mov
jl
fmul
cwtl
mov
cwtl
push
push
pop
les
je
flds
lea
ret
in
lcall
ret
xor
mov
cmp
and
adc
adc
sti
cmpsb
mov
and
sahf
jg
imul
movsl
sbb
jle
incl
mov
ret
mov
add
cmp
stos
cmp
add
xchg
mov
mov
popa
pop
mov
mov
invd
mov
xchg
popa
cmp
sub
push
jge
stos
push
dec
xlat
add
dec
mov
dec
outsl
fdivrl
xor
mov
or
adc
aam
jecxz
mov
decl
jge
mov
lahf
add
loope
stos
int
add
mov
pop
jmp
or
mov
in
in
jecxz
push
mov
add
ret
pop
andb
fs
sub
lock
jae
adc
xchg
cs
adc
xchg
lret
jnp
out
notl
jp
lret
cmp
rcl
cld
outsb
mov
sbb
jno
orb
adc
push
mov
das
arpl
nop
cs
adc
in
mov
outsl
mov
in
inc
stos
aam
pop
test
push
pop
imul
pop
mov
jo
and
and
cmpsl
lea
and
test
loop
add
and
mov
jg
arpl
jp
push
jle
popa
and
scas
pushf
and
cld
ljmp
sar
push
fwait
or
out
es
lock
gs
pop
daa
mov
mov
or
ja
ja
add
gs
test
dec
gs
adc
or
push
test
fs
xor
std
and
jbe
aam
xchg
mov
int3
push
mov
or
inc
cltd
movsb
aas
mov
jg
loope
sbb
add
outsb
or
add
xchg
dec
cmp
and
adcl
mov
xor
pop
aaa
pop
cmp
jbe
mov
jb
cltd
jne
movsb
jg
lret
das
fsubl
repnz
cmp
flds
insb
in
in
push
inc
sub
ret
jae
cmpsl
out
test
movsl
xchg
lcall
repnz
loop
rcll
inc
inc
jmp
fmuls
mov
mov
adc
int
and
adc
cmpsl
xchg
imul
jo
sub
pop
shll
mov
ss
sbb
and
sarl
scas
jge
mov
add
push
ficompl
es
int3
iret
mov
lds
fsub
and
and
add
test
dec
xor
xor
jno
pop
pushf
incl
sbb
mov
stos
out
or
mov
adc
xchg
push
mov
cmp
or
fdivrl
xor
fs
lcall
dec
sub
lsl
mov
lret
xchg
mov
in
out
jbe
movsb
cmp
mov
imul
push
cld
les
mov
inc
sahf
pop
jo
pop
adc
repnz
pop
pop
es
stos
cmc
jmp
inc
and
aas
leave
mov
ja
inc
add
jo
int3
sarl
rcr
jg
sub
movsl
jae
pop
mov
push
rcll
add
inc
inc
sbb
mov
pusha
fstl
jecxz
xchg
outsl
outsb
xor
jle
jmp
and
dec
shlb
mov
leave
inc
push
mov
ljmp
cmpsl
imul
sbb
xchg
in
and
cmp
add
out
push
xorl
call
es
pop
and
fmull
cmp
xor
push
scas
mov
lds
mov
les
pop
popa
and
jno
pushf
loop
fs
or
pop
shll
push
push
in
and
imul
mov
jns
fcmove
lods
call
jmp
sbb
outsl
test
push
cmp
pop
fildll
or
pusha
xchg
jecxz
fmull
push
ss
mov
mov
mov
lahf
in
mov
cli
dec
lds
xchg
mov
or
ffree
xchg
mov
and
jg
cmp
dec
repz
push
inc
jb
dec
movsb
dec
imul
lret
aaa
mov
in
aad
mov
rclb
aaa
pop
mov
cmp
mov
int3
dec
fs
fucomip
sbb
hlt
mov
add
mov
lretw
popa
push
addr16
subb
dec
sbb
stos
shrl
out
stos
negl
iret
arpl
inc
mov
cmpsb
or
pop
adc
mov
add
or
lahf
jl
xorl
fsubl
sbb
jl
outsl
mov
sub
iret
in
sar
jle
push
lea
xor
scas
and
notb
loop
lock
xchg
bound
adc
pop
push
xchg
mov
flds
stos
and
xchg
sub
push
dec
sbb
sub
outsb
sarl
in
fnstenv
jns
lea
mov
inc
out
jmp
mov
xor
gs
jae
inc
dec
cmc
cltd
hlt
ror
addl
cmpl
cmp
cltd
mov
jmp
scas
cmp
push
push
push
int
das
fmuls
jns
inc
out
jns
cmc
mov
loopne
insb
jecxz
repz
jmp
sti
out
xacquire
or
mov
dec
cmc
mov
rorb
inc
dec
and
and
or
addr16
imul
icebp
insl
mov
inc
das
test
add
setbe
outsl
dec
pop
jnp
and
fwait
mov
arpl
add
xchg
dec
out
fsubrl
test
cmpsb
mov
add
in
dec
nop
stos
add
sbb
fisttpl
inc
or
lret
xchg
xchg
rolb
xchg
dec
outsl
push
or
mov
mov
pop
sbb
cwtl
sahf
loop
lods
dec
std
in
dec
mov
mov
pop
add
pop
jne
sub
xchg
push
cli
xchg
sbb
fnsave
pop
xchg
cmpb
inc
xor
lods
lock
fucomp
ja
sub
aam
jb
xorl
scas
lret
adc
xor
jno
test
push
shl
push
pop
and
add
ds
sbb
mov
nop
mov
dec
jmp
mov
add
push
pop
test
xor
jae
pop
inc
fistpl
cwtl
lods
and
and
or
sar
cmp
mov
leave
fsubs
cmpsb
lock
sub
and
shrb
jmp
iret
push
mov
dec
test
and
imul
sti
into
xchg
push
mov
test
add
imul
stc
lds
cmpsl
cmp
scas
loop
icebp
aaa
push
sbb
loopne
sbb
std
movd
sbb
xchg
jno
mov
mov
lcall
int3
mov
outsl
cmc
js
or
cmpb
andl
xor
call
std
lods
and
das
and
loope
adc
fstp
mov
scas
sbb
mov
aaa
mov
mov
cmp
sub
out
pop
push
and
clc
mov
push
xor
and
mov
repz
pop
pop
jge
in
in
shrl
cmp
pop
push
lcall
leave
gs
push
ljmp
dec
int
mov
arpl
add
xchg
popa
add
push
rol
out
scas
dec
push
jb
sbb
or
cmp
popf
pop
sbb
fcmovu
xor
loopne
aam
add
repnz
xor
mov
cmpsl
dec
fldl2t
jmp
and
sub
inc
or
mov
hlt
sbb
dec
jbe
pop
sti
jle
lret
jmp
fs
pop
repz
and
aas
jnp
sub
and
arpl
cli
mov
in
xor
shrl
dec
rolb
sub
imul
test
pop
out
shll
mov
pop
pop
jne
je
das
in
add
ljmp
mov
in
or
mov
dec
cli
mov
int3
push
lcall
pop
push
call
fs
jle
sbb
cmpsb
adc
jb
popa
clc
cmp
cmpb
test
xchg
xor
pop
mov
nop
lods
pop
fisubrs
loope
or
movsb
repz
fs
lods
cmpsb
push
and
dec
dec
adc
cs
fdivr
int
scas
pop
stc
jne
inc
daa
dec
push
ret
pop
test
adc
push
lahf
mov
cmc
cmp
push
popl
add
loope
push
ljmp
jp
jnp
xchg
mov
cmc
mov
dec
pop
jns
lock
sarb
dec
out
lret
imulb
xchg
rclb
outsb
fwait
add
add
das
mov
mov
js
dec
arpl
push
push
jae
rcrl
push
or
jle
cmp
lods
ja
adc
pop
aaa
je
mov
sti
jne
je
sub
mov
rcrb
outsb
push
jmp
enter
mov
outsl
bound
insl
fisubrs
stc
inc
in
jb
dec
dec
push
iret
adc
pop
bound
mov
aam
dec
cmp
dec
ficoml
in
mov
mov
into
sti
cmp
mov
sub
pop
xchg
xchg
sub
pop
mov
mov
imul
lods
pop
add
bound
mov
out
mov
call
dec
fs
xchg
mov
mov
inc
pushf
xchg
sub
enter
lret
inc
xor
jbe
mov
pusha
pop
outsl
pop
and
inc
mov
repnz
inc
push
arpl
inc
cli
mov
inc
push
icebp
and
adc
pop
xor
ret
in
xchg
aas
mov
cmpsl
fcompl
cmp
mov
mov
in
lret
loop
jb
sahf
int3
outsb
mov
xor
stos
push
fsts
fcomi
ja
lods
pop
inc
jg
jmp
loope
js
addb
push
cld
pop
cmp
cmpl
sti
adc
rcr
clc
test
aas
dec
or
int3
cmp
sub
sbb
popf
lahf
js
mov
notl
sbbb
mov
and
dec
test
pop
xchg
xchg
and
outsl
adcb
imul
or
out
call
mov
and
aam
inc
jbe
add
lds
push
fisttpll
xchg
inc
mov
insl
lock
add
add
mov
push
xchg
popa
repnz
orb
lods
loope
mov
xorb
sahf
inc
scas
mov
xor
dec
pusha
pop
mov
mov
cmp
add
xor
je
pop
mov
adc
in
pop
sbb
pop
push
mov
cmp
xchg
sub
out
negb
jmp
movsb
adc
jp
sti
ljmp
pop
add
mov
dec
adc
xchg
lret
rclb
aam
xor
or
clc
clc
jno
cwtl
sbb
jg
fnsave
aad
ljmp
dec
mov
mov
inc
sub
test
ds
mov
pop
insb
push
nop
push
imull
fildl
jns
popf
sub
rcrl
cmp
out
cli
jb
mov
adc
mov
ljmp
repnz
movsb
mov
dec
and
xlat
inc
icebp
jb
jmp
mov
aaa
stos
mov
jmp
sub
mov
ja
push
sti
sub
lahf
add
loop
dec
sub
cltd
out
sub
mov
or
or
mov
mov
cmpb
test
jnp
pop
mov
leave
jnp
std
inc
imul
dec
lds
jnp
cmpsb
adc
push
dec
rorb
mov
cmp
dec
rep
cwtl
mov
or
push
mov
pop
jne
and
pop
or
movsb
addb
inc
pusha
mov
mov
fnstcw
xchg
cmovb
push
and
imul
push
loop
cli
js
xlat
sti
inc
fidivs
scas
mov
outsl
or
out
mov
lods
sbb
mov
cmp
adc
mov
xor
test
jb
and
jbe
mov
in
ja
sbbl
sbb
cmpsb
push
lods
mov
pop
out
lods
xchg
adc
xor
sti
movsb
sub
sbb
sbb
mov
cmp
cltd
sbb
mov
add
mov
bound
inc
ret
out
pop
adc
add
mov
dec
inc
add
out
gs
call
arpl
jbe
and
mov
ss
ljmp
pop
push
jp
cltd
mov
nop
pop
into
xchg
sbb
mov
out
enter
loop
data16
and
movsl
int
out
adc
jle
pop
call
add
cmp
fisubl
int
dec
xchg
pop
fwait
icebp
daa
pop
nop
test
test
push
out
arpl
sbb
jbe
jne
xor
hlt
iret
not
lret
xor
stos
movsl
pusha
jne
mov
dec
rcrl
xor
jg
jb
out
repnz
and
mov
test
addr16
jg
mov
jnp
insb
sbb
cmc
add
cmc
xchg
es
dec
jp
iret
mov
or
jge
push
dec
push
add
push
int
in
repnz
mov
mov
cmpsl
mov
cld
push
shlb
xor
fstp
jo
push
arpl
jmp
rclb
jae
jle
stos
push
lds
cwtl
dec
sbb
jmp
inc
sbb
and
pop
ss
xchg
push
pop
test
cmp
inc
inc
sbb
mov
push
out
mov
adc
mov
std
dec
out
mov
je
add
mov
scas
inc
jmp
cmc
jnp
cwtl
sub
pop
shl
loope
js
pop
adc
aad
out
fs
cli
mov
cmp
incb
or
fldlg2
mov
adc
cmp
mov
ja
aam
adc
imul
jmp
pop
mov
dec
jp
cmp
and
xor
mov
stos
out
test
and
sbb
rorb
in
lock
push
jp
mov
mov
mov
xor
xor
sub
pop
xchg
pusha
push
iret
hlt
mov
xor
inc
dec
push
and
mov
adc
insb
mov
bound
insb
xor
mov
clc
xchg
mov
jo
cmp
lods
add
pop
test
inc
sbb
cmp
sbb
insb
push
push
popa
sbb
pop
push
cmpb
add
jns
sub
loop
repz
sahf
sub
addb
sti
jecxz
lods
or
std
filds
inc
sub
dec
pushf
mov
test
std
test
inc
leave
adc
movsb
dec
iret
inc
test
lcall
aas
adc
call
xchg
in
dec
cmp
mov
mov
outsl
xor
xchg
xor
adc
mov
mov
pop
dec
add
xor
lds
jnp
sub
mov
xor
call
xchg
sbbb
loopne
mov
call
orl
push
sbb
pop
repnz
push
cltd
pop
add
jl
mov
inc
pop
dec
pop
lret
std
fisubrl
fnstenv
lcall
jb
or
cmpsl
cmpsl
in
mov
pop
or
dec
push
aas
jae
mov
pop
mov
mov
fmull
xchg
xor
jl
xorl
or
or
leave
outsl
test
xor
push
sbb
push
mov
ret
xchg
fbstp
push
pop
lahf
outsl
or
test
inc
fidivs
enter
mov
aad
je
dec
push
out
rclb
mov
xchg
jb
mov
mov
movsl
insb
add
jle
leave
adc
clc
mov
mov
daa
sub
xchg
std
jb
mov
aas
lcall
xor
pop
mov
push
pop
inc
mov
xchg
jb
andb
push
mov
inc
pavgw
mov
and
adc
inc
xchg
inc
jle
jp
nop
cmp
jg
pop
xchg
iret
mull
sub
or
cmp
cwtl
std
inc
outsl
not
roll
adc
jl
sti
or
add
mov
cmp
test
xchg
cmpsb
sub
ret
jmp
jp
mov
inc
orb
push
pop
popf
fwait
sub
mov
or
insb
or
scas
jo
inc
mov
adc
popa
lahf
rorb
je
std
mov
cmp
repnz
sub
arpl
jo
mov
test
xor
adc
push
lea
bound
hlt
sub
dec
push
fistpl
xor
leave
push
subl
xchg
xor
call
push
lock
jl
fcomps
xor
xchg
jmp
test
and
cmp
push
jmp
xor
mov
mov
fstpt
cmpsl
cmpsl
mov
js
add
lods
pop
push
mov
jp
test
hlt
jno
movsl
add
add
xchg
pop
fldt
push
jne
lods
or
adc
pop
add
inc
add
push
int3
and
xchg
loope
mov
xor
lods
js
xchg
xchg
inc
mov
add
je
je
icebp
jbe
ds
jns
pop
and
and
cmp
xor
in
cwtl
addr16
push
movl
or
repnz
aaa
rep
push
cli
movsb
xchg
fisubl
inc
jl
decl
int3
addr16
std
loop
mov
cmc
jns
fidivrl
or
pop
add
xor
sti
ja
fcomip
mov
jne
cmp
push
cmp
rcl
add
pop
mov
sbb
in
test
daa
mov
roll
dec
mov
xlat
fs
rclb
mov
mov
out
pop
scas
xor
lret
jp
jno
rolb
xchg
mov
sbb
jbe
inc
filds
pop
fsubs
mov
cmc
hlt
and
cmp
xor
addr16
jl
addr16
xchg
cltd
xchg
dec
add
in
mov
filds
cmp
or
repnz
cmp
ljmp
xchg
and
insb
and
jo
mov
negl
cmp
mov
and
int
addr16
gs
mov
dec
pop
lea
cmp
cmp
insl
fwait
or
jle
shrl
idivb
jae
xchg
shlb
mov
and
xor
lods
daa
xor
pop
in
ds
xlat
sbb
push
data16
insl
outsl
shrb
loopne
push
test
add
sbb
lock
and
mov
cwtl
cmp
add
into
add
ss
dec
mov
lods
adc
cmp
push
jge
cli
pop
sbb
or
aas
mov
jo
icebp
imul
push
mov
movd
out
xchg
lahf
jmp
test
nop
dec
add
mov
pusha
je
mov
jp,pn
outsl
xor
aam
hlt
dec
lcall
cmc
dec
fs
add
pop
out
or
in
jne
jae
aaa
mov
xor
lahf
xor
sbbb
sbb
inc
dec
mov
stc
push
insb
sbb
aas
ficoms
stc
das
pushf
neg
lea
inc
test
jg
push
addr16
mov
mov
pop
aad
push
mov
subb
repz
sti
arpl
stos
sub
test
sti
stc
imul
and
jg
cwtl
leave
adc
sbb
subb
dec
add
mov
dec
fldcw
jg
outsb
mov
mov
xchg
jb
push
inc
jbe
jns
pop
mov
jnp
dec
push
pushf
pop
idivl
xorb
cmp
clc
mov
mov
sbb
adc
sub
insb
sub
out
xor
mov
xchg
add
push
jg
push
movsb
mov
into
add
sbb
xchg
cmp
testb
repz
pop
hlt
push
mov
jae
sub
mov
jae
dec
orl
subb
popf
movsb
sbb
mov
push
das
pop
xor
mov
int3
dec
inc
test
xchg
jg
dec
mov
ljmp
in
push
cmp
mov
xchg
inc
dec
jmp
push
pop
and
sbb
cmc
iret
cltd
or
jae
adc
sbb
leave
mov
jo
cmpsl
push
nop
dec
inc
imull
and
sub
sbb
dec
imul
sbb
xor
sub
xchg
xorl
sbb
push
mov
enter
mov
jp
out
or
je
xchg
insl
inc
mov
add
lcall
fisttpl
mov
mov
jmp
mov
mov
xorl
pop
push
adcb
lods
movsb
xor
xor
stos
call
dec
mov
lods
clc
lock
xchg
movsl
adc
insb
mov
add
add
mov
out
add
decl
or
out
sbbl
mov
xchg
push
fwait
daa
adc
pop
sarb
dec
mov
daa
fisttpl
add
cli
data16
add
or
mov
lcall
or
xchg
aam
outsl
jns
lock
dec
jae
lret
add
fsub
xchg
push
imul
pop
push
lock
inc
cmc
jno
orl
xor
aaa
jns
je
mov
jae
add
mov
pop
jnp
lret
or
filds
int3
bswap
mov
pop
pop
add
or
pop
lcall
mov
aam
icebp
mov
mov
pop
mov
clc
sbb
movsb
xor
fwait
mov
jmp
jns
inc
add
and
in
add
xchg
xlat
dec
mov
jmp
leave
addr16
ds
ljmp
popf
les
mov
iret
mov
and
shlb
dec
mov
aaa
fnstcw
cmpsl
ljmp
je
xchg
jns
inc
sti
jmp
xchg
sub
add
jb
test
js
push
ds
push
push
sub
mov
aam
dec
and
jae
mov
sub
pop
fs
mov
aad
dec
mull
xchg
lret
ja
out
pop
inc
jle
push
lods
popf
jecxz
out
push
movsb
hlt
out
les
dec
cmp
rol
jnp
mov
enter
fisttpl
lahf
into
mov
inc
xchg
lods
fdivrl
sbb
xchg
std
out
xchg
addr16
lds
jns
sub
mov
fistl
jno
jmp
stc
mov
sub
sbb
scas
pop
insl
stos
cmpsb
inc
mov
sub
and
movsl
aaa
push
repz
nop
out
pop
sbb
add
in
ja
mov
out
sbb
les
arpl
ljmp
and
push
jno
mov
sbb
cmpsl
sub
mov
dec
fnstenv
repz
dec
test
call
loopne
bnd
lods
sbbb
sbb
jg
jb
inc
dec
or
pop
jg
data16
sti
test
jne
sti
dec
mov
jnp
xor
mov
push
lret
add
inc
cmp
rolb
push
outsb
dec
fsts
out
and
das
stc
push
sub
cmpsb
inc
xor
scas
lahf
fstps
push
nop
sub
pop
cmp
mov
iret
xchg
aam
mov
iret
mov
fwait
pushf
movsb
jmp
dec
jbe
jmp
cmpsb
ficomps
add
je
adc
mov
add
lret
dec
inc
cld
lret
in
mov
adc
push
divb
push
cld
mov
pop
out
add
xlat
push
insl
pop
inc
pop
ffree
sbb
dec
cli
or
sbb
dec
lahf
xchg
mov
clc
mov
jecxz
sbb
iret
pop
imul
sbb
lret
testl
in
test
iret
fisttpl
push
xchg
test
icebp
cmp
mov
sub
dec
add
pusha
sbb
xchg
sarl
mov
mov
call
or
fsubr
fcomi
clc
test
ficomps
mov
mov
stos
lock
fwait
lret
mov
and
je
cwtl
pop
jne
mov
inc
fisttpl
inc
scas
push
test
pop
add
mov
fldenv
lock
xchg
add
fisttps
pop
mov
and
push
shrl
sub
jecxz
out
fs
sbb
movsl
mov
inc
test
aaa
sub
scas
lret
add
fldt
mov
add
out
dec
negb
enter
adc
pop
mov
pop
or
xorb
subl
mov
clc
out
dec
popl
cmp
mov
iret
xchg
inc
mov
sbb
jp
mov
scas
push
dec
int3
mov
test
shrl
lock
mov
insl
ss
sub
add
lods
mov
cmpsb
inc
movsb
jo
sub
fcomi
gs
sbb
call
push
ljmp
sbb
adc
cmp
ficoms
jl
aad
xchg
data16
pop
push
pop
and
repz
frstor
push
jo
les
xor
jg
out
push
lret
scas
sub
sarl
fs
insl
jae
in
inc
xlat
repz
xor
jp
inc
mov
mov
repnz
push
fnstsw
dec
pop
adc
js
xlat
gs
and
mov
rcr
cmc
sbb
sub
je
adc
mov
xchg
inc
and
jno
pop
push
cmp
scas
dec
dec
mov
fmull
add
xor
mov
pop
leave
mov
lock
in
imul
xor
mov
sub
add
xchg
dec
lock
movq
arpl
int
inc
sub
inc
jecxz
jecxz
cmpsl
sbb
and
mov
cmp
xor
dec
push
push
lock
addr16
aas
xchg
js
movsl
sarl
fildll
andl
jp
cli
sub
call
ss
popf
cmpsb
scas
adc
data16
ss
lcall
scas
popa
insb
int3
repz
mov
insb
addr16
pop
mov
andb
mov
jecxz
xor
xchg
sub
je
jge
fs
mov
ds
bound
push
inc
inc
scas
fcomps
arpl
adc
iret
clc
ds
adc
mov
subl
out
jecxz
xchg
cmpsb
mov
jae
and
js
mov
pop
mov
test
sbb
dec
jb
xor
sbb
lea
mov
pop
rcrl
push
inc
sub
dec
jmp
xchg
inc
clc
add
outsb
lret
and
call
jmp
xchg
dec
sbb
sbb
sbb
shrb
xchg
shlb
mov
mov
mov
jg
lahf
fwait
cmp
xchg
std
xchg
leave
mov
jnp
into
pop
xchg
mov
test
jns
fnstsw
movsl
jae
sub
xchg
scas
sbb
data16
mov
pop
jl
rorb
add
adc
pusha
lret
jns
aas
mov
xor
push
inc
int
push
aaa
adc
push
sbb
jle
pop
mov
cmp
sbb
mov
mov
jns
dec
in
and
cmp
std
mov
jnp
add
fldcw
aam
jb
jns
jecxz
lea
inc
imul
call
ja,pn
movsl
xor
out
ja
dec
int
mov
inc
inc
mov
fcmovnb
jmp
mov
jae
cmpsb
mov
adc
lock
addl
mov
jo
push
les
cmp
sub
inc
add
mov
and
adc
hlt
clc
sbb
loop
mov
inc
shrb
aas
into
inc
lret
lock
in
fstps
int
push
inc
fcoms
dec
inc
dec
test
cld
add
mov
add
mov
xchg
sub
test
push
cmc
leave
inc
nop
scas
inc
cli
into
push
add
push
xchg
jae
in
jl
in
inc
sbb
jmp
push
inc
call
sbb
pop
push
aas
popf
insl
dec
lock
les
loope
jnp
fs
je
and
push
sub
mov
hlt
push
add
sub
cld
xchg
stos
in
adc
rclb
sbb
fnstcw
sub
add
jge
jmp
das
pop
mov
and
mov
xchg
adc
mov
inc
fcomp
sub
or
ja
iret
adc
repnz
sub
cmp
sub
shrl
lock
outsl
popa
mov
loop
add
mov
push
pop
cmp
xchg
mov
xor
push
daa
pop
icebp
data16
pop
lock
dec
shrb
jecxz
sbb
popf
mov
addr16
adc
jmp
and
xchg
mov
stc
xchg
cmp
js
es
aam
pusha
loop
repnz
jmp
jge
push
push
aas
mov
sbb
pop
fnsave
ret
jg
aad
aaa
sbb
roll
mull
dec
rcr
pop
loopne
out
roll
lods
push
test
lods
dec
icebp
lcall
lea
std
push
push
mov
add
jmp
arpl
jns
xchg
push
xchg
jbe
cltd
fisubrl
cs
pop
loopne
xor
mov
xor
in
repz
push
je
cmc
pop
sti
cli
cld
xchg
xor
sbb
and
iret
sbb
inc
cwtl
xchg
adc
cmp
or
or
rcr
stos
xchg
pop
add
inc
push
add
sub
insb
cmp
test
loop
into
mov
das
stc
popa
dec
sub
hlt
stos
ja
sbb
sahf
push
movl
and
js
jl
cmp
cmp
push
dec
xchg
and
xchg
xchg
push
adc
sub
insb
mov
adc
inc
mov
pusha
outsb
fcomps
adc
xlat
cmc
jge
test
stc
xchg
push
cwtl
cmpsb
jae
das
insl
lret
cmp
jge
sbb
add
mov
call
jo
lcall
add
loopne
cmpsl
mov
mov
cmc
dec
ljmp
mov
or
stos
js
aas
and
mov
insb
out
lcall
adc
jns
adc
mov
fldcw
jbe
shll
ss
xchg
pushf
dec
int3
xor
mov
fistpl
cmp
xor
out
sub
jmp
pop
inc
mov
inc
js
xchg
popa
inc
sbb
ds
inc
sub
fwait
mov
pop
mov
imul
pop
ss
in
gs
cmp
push
lock
mov
jmp
movsb
movsb
pop
insb
xor
ss
cld
in
xor
or
cld
fnstcw
in
fwait
pop
jmp
arpl
into
loopne
gs
sbb
dec
jle
adc
dec
dec
scas
mov
clc
push
lds
fsubrs
push
mov
out
into
das
psrlw
jae
js
pop
mov
and
decb
dec
xchg
mov
insb
mov
lahf
std
mov
lahf
jmp
ljmp
es
push
mov
mov
cmp
dec
cld
push
aas
call
and
and
sub
mov
fs
mov
test
bound
jg
aad
testb
popl
mov
pushf
dec
mov
insl
aad
pop
out
mov
fsubrl
adc
ficoms
out
mov
xchg
mov
sub
lea
and
repnz
jmp
jo
jle
pop
aad
popa
pusha
xchg
jmp
push
sub
lea
popf
push
test
loop
jno
cmp
sub
fwait
pop
lods
negb
ret
cli
sbb
out
je
lods
jbe
std
pop
add
push
xchg
ss
sub
icebp
lea
out
add
adc
lods
push
push
sub
push
cltd
insb
xchg
test
rcll
shll
dec
jnp
rcr
imul
in
sub
andb
push
mov
ljmp
iret
xor
push
jne
arpl
rolb
and
icebp
or
lret
push
and
jbe
jo
call
js
cs
scas
and
and
or
aad
xchg
scas
in
push
fsubl
mov
jmp
mov
scas
mov
pop
mov
jbe
in
jl
fldcw
pop
in
jmp
jb
add
add
insb
xor
mov
or
test
in
jno
es
ret
pop
in
vpcmpeqb
lahf
pushfw
sub
loop
mov
imulb
pop
jp
dec
out
hlt
jp
pop
xchg
jl
xchg
jne
outsb
sbb
pushf
adc
loopne
sbb
addr16
sbb
popa
pop
loop
cmp
push
sbb
mov
xor
inc
ds
sbb
mov
add
pop
out
add
std
mov
add
notl
and
scas
sub
loop
cli
or
pop
cmp
cmpsl
cmp
inc
ljmp
xchg
mov
add
xor
push
lahf
sti
ds
mov
or
mov
dec
push
ret
jo
movsb
jb
mov
test
andb
in
cmp
movsl
popa
cwtl
jae
pop
sub
add
adc
orb
int3
mov
repnz
pop
jno
pop
test
mov
mov
lods
cli
pop
mov
sbb
or
xchg
repnz
sub
pop
cmpsb
inc
xlat
mov
rol
fs
dec
dec
sub
jle
pop
cs
sub
int
out
cltd
inc
cmpsl
arpl
push
push
bound
leave
dec
ret
pop
or
in
jnp
xchg
addl
adc
in
movsl
mov
js
test
hlt
loope
fidivrl
cmp
mov
enter
mov
cmp
jge
sub
pop
ret
push
inc
pop
mov
sbb
fldlg2
stos
sbb
in
cs
stos
jmp
push
in
jae
push
pop
and
jae
jne
clc
cmp
mov
leave
add
mov
inc
or
repnz
sbb
out
push
mov
sbb
pop
xchg
or
les
jp
scas
fdiv
enter
call
ffree
out
push
cld
push
cmp
mov
std
sti
inc
jae
or
out
jae
shrl
and
outsb
hlt
call
or
test
sbb
adc
inc
mov
bnd
and
imul
add
dec
arpl
data16
push
jecxz
sub
mov
lock
aaa
adc
sbb
add
pushf
mov
jge
mov
mov
cltd
pop
aad
mov
into
psrlq
into
cwtl
in
sbb
push
cmp
pop
push
sub
scas
hlt
dec
cmp
jne
int
and
lea
or
pop
icebp
fwait
int3
pop
xor
adc
inc
stos
imul
sbb
pop
loopne
sub
stc
dec
dec
sahf
push
push
ss
jne
sbb
pop
stos
fld1
insb
pop
push
xor
xor
mov
shr
in
cwtl
or
mov
mov
sub
inc
scas
and
fsubrs
insl
in
add
mov
lds
inc
push
ss
jns
push
jp
stc
adc
shll
xchg
popf
cmp
and
mov
push
inc
xor
in
rcrb
test
mov
in
fchs
dec
jae
divl
popa
xor
jns
jmp
sbb
arpl
pusha
cmc
inc
or
cmp
jo
insl
lock
inc
mov
lds
adc
or
jno
fs
jle
cmp
nop
fs
mov
dec
ja
ljmp
mov
leave
lcall
out
sahf
fcomps
std
jns
aaa
inc
pop
mov
push
scas
call
lock
rolb
icebp
dec
pop
les
add
shll
nop
clc
xor
xor
mov
mov
pop
hlt
adc
jg
js
jmp
push
out
cmp
dec
test
and
add
in
pop
push
add
mov
add
cltd
into
mov
jo
mov
xor
leave
adc
xchg
xchg
cmp
repz
out
cld
xor
psraw
pop
xchg
je
fxch
dec
sti
int3
lcall
and
cmc
sub
push
jp
fistl
sub
in
lods
xchg
cli
mov
or
xchg
jo
and
dec
adc
mov
ret
pop
addr16
pop
shll
adc
clc
cmpsl
push
aas
in
mov
fisubs
xorb
xor
sbb
mov
testl
xchg
movsb
dec
lret
mov
mov
cwtl
les
std
out
xchg
sbbl
aam
adc
into
enter
mov
add
addr16
push
cmp
movb
lods
imul
ret
push
push
jp
leave
inc
xchg
xchg
push
mov
mov
dec
int3
xchg
popl
xchg
lret
call
jns
jl
rcrb
mov
loopne
loop
lret
pushf
insl
imul
pushf
and
ror
iret
push
cmp
cld
mov
in
data16
jns
mov
popa
shll
mov
jb
add
mov
dec
inc
imul
pop
jge
insl
icebp
push
mov
jge
xchg
pop
xor
pop
mov
inc
xor
sahf
out
pushf
pop
push
sbb
out
fidivrs
fildll
jl
mov
mov
inc
sub
dec
pop
repz
sbb
movsb
out
sub
sbb
sarl
xor
or
int
cmp
adc
jmp
mov
in
jno
mov
and
mov
and
pop
cmc
inc
inc
rolb
dec
cmp
adc
je
mov
ljmp
add
mov
inc
or
jle
and
into
pop
inc
loope
mov
or
leave
outsl
cmpsl
pop
sub
lret
lds
scas
and
stos
das
fcomps
adc
fnsave
cmp
inc
push
jbe
addr16
rcrb
and
inc
fisubs
cmp
jp
cmp
adcl
stos
sub
decb
push
lods
int3
outsb
add
into
xor
jae
push
sub
pop
pop
idivl
subl
push
inc
xchg
add
hlt
mov
adc
cmc
push
ljmp
sarl
imul
add
or
out
shrl
aas
mov
pop
scas
loope
cmc
mov
outsl
sbb
es
sbb
xchg
mov
ret
mov
stc
push
adc
xchg
fimull
xor
xchg
clc
xlat
cmp
mov
data16
call
lods
roll
and
jle
mov
mov
pop
insb
inc
es
or
out
jmp
pop
jbe
arpl
xlat
xchg
out
inc
cmp
cmp
pop
in
and
inc
lods
out
add
int3
jge
repz
mov
into
push
mov
xor
ret
mov
jno
add
xlat
or
cltd
mov
sti
divb
aas
shrb
gs
mov
pop
add
or
pop
sarl
sub
pop
xlat
or
sub
movsb
cli
enter
lods
add
call
xchg
cmp
pop
cmc
cmp
adc
xor
mov
fs
jae
je
xchg
adc
out
dec
jno
int
ds
in
push
sub
jnp
hlt
and
mov
pop
jns
adc
movsb
fwait
out
daa
stos
movsb
dec
add
test
and
add
lret
pop
mov
cmpb
out
sti
mov
sbb
int
adc
add
push
ficoml
xorl
in
outsb
das
adc
icebp
xor
sti
scas
dec
inc
mov
xchg
dec
mov
xchg
xchg
pop
int3
sub
mov
arpl
les
inc
pop
fldl
lret
fdivl
mov
andl
mov
add
jno
nop
and
stos
dec
cltd
fcoml
xor
pop
cmp
cltd
push
sbb
sahf
fcompl
add
mov
dec
std
mov
and
gs
push
repz
xchg
pop
dec
mov
sbb
xor
jg
mov
das
cmp
adc
dec
into
jmp
sbb
movsb
jecxz
addb
shlb
sbbl
jo
xorl
call
dec
loop
pop
outsb
inc
in
jns
xor
int3
sbb
pop
rorl
jno
add
test
mov
mov
adc
jnp
jae
cmp
inc
nop
cld
mov
shlb
mov
dec
lcall
sbb
mov
jns
cmp
mov
dec
sub
loopne
mov
and
ja
jbe
and
push
jns
mov
inc
lcall
out
nop
out
xor
mov
or
mov
pop
movsl
mov
cli
push
mov
mov
gs
into
pop
adc
sub
mov
and
pop
mov
vxorps
push
aaa
ret
inc
enter
lcall
popf
push
rclb
sbb
push
shll
fwait
das
inc
and
sbb
push
ja
and
adc
xchg
mov
notb
cli
inc
xor
aad
xlat
hlt
cmpsl
jbe
roll
add
sbb
imul
test
js
dec
idivl
sbb
inc
adc
xchg
es
push
and
hlt
jae
or
jle
stos
cmpsl
mov
cmc
xchg
sbb
pop
dec
out
mov
mov
sub
fs
inc
pusha
xor
add
jp
dec
mov
je
into
cmpsb
add
sub
sub
scas
sbb
incl
push
pop
xor
sbb
cld
inc
pusha
fwait
insb
push
xor
hlt
add
jne
mov
mov
fsubrl
stos
push
push
cld
incb
push
or
popf
or
repnz
cwtl
shrb
dec
roll
rcll
push
sbb
hlt
loop
arpl
or
pop
xchg
in
mov
pop
and
adc
xchg
dec
clc
xor
sub
sub
dec
xchg
mov
cld
lods
in
or
mov
ja
sbb
push
mov
fs
mov
sbb
addr16
pop
scas
in
and
jno
loopne
add
fdivrl
push
xor
sbb
loop
dec
bound
lock
dec
mov
aad
pop
mov
outsb
sbb
insb
xchg
cmp
ja
orb
nop
inc
pop
add
aas
adc
add
test
xchg
call
aaa
pop
jo
into
cmp
xchg
jge
sub
rcll
dec
pop
bound
dec
mov
lahf
and
fnstsw
sub
push
out
sbb
and
hlt
mov
aam
dec
cmpsb
das
arpl
mov
cmp
push
sbb
adc
mov
mull
xchg
stc
mov
popf
mov
pop
pushf
add
test
loopne
enter
les
lahf
cmp
enter
sbb
mov
data16
adc
mov
cmp
pop
xor
sbb
cmp
leave
mov
mov
sbb
mov
imul
addr16
fiaddl
cltd
push
inc
xorb
dec
xlat
mov
lret
xchg
jbe
sbb
xchg
fwait
mov
or
ja
or
insl
inc
addr16
in
pop
test
xchg
test
insl
push
add
cmp
cli
or
js
loop
out
push
pop
in
js
cwtl
xorb
adc
mov
inc
xchg
lcall
and
adcl
and
in
cld
push
dec
sub
aam
pusha
imul
cmc
pop
mov
adc
xlat
cmc
xor
cltd
fwait
add
cmp
add
jl
pop
xchg
xchg
adc
jae
pop
jae
pop
mov
cmp
jecxz
stos
mov
push
push
pop
mov
pop
cmp
xor
pushf
cmpsl
nop
stos
fwait
rcll
push
pop
stos
lds
sarl
es
jl
mov
sub
mov
mov
push
in
cwtl
std
test
mov
mov
dec
dec
or
cwtl
arpl
out
inc
jge
inc
and
mov
mov
loopne
mov
adc
clc
jmp
cmc
push
movsl
mov
imul
cmp
cmpl
jbe
inc
pop
jl
lock
and
stos
and
imull
dec
adc
xor
call
mov
ficoms
mov
jno
icebp
hlt
and
bound
lret
cmp
xor
sub
int3
jg
xchg
and
int
mov
lds
xor
and
int
pusha
aad
sbb
dec
cmp
call
sahf
pushf
inc
jl
inc
cwtl
adc
daa
lahf
sbb
xor
pusha
sti
mov
scas
or
mov
dec
xchg
out
in
add
jbe
jge
cwtl
imul
fwait
rclb
pop
dec
pop
out
aam
ja
enter
jmp
sbb
sti
shll
push
sub
ds
ljmp
xorb
sub
inc
and
andl
jecxz
fisubrl
test
dec
inc
out
push
jmp
push
xor
mov
push
and
adc
push
push
andb
roll
inc
int3
in
in
ds
test
out
xor
ret
push
dec
insl
xchg
divl
cmpsl
in
sub
mov
mov
dec
jns
mov
sub
mov
addb
mov
xchg
mov
cmp
jge
cltd
inc
mov
ja
lea
shrl
repz
cmp
fwait
push
xchg
jecxz
lcall
jmp
push
xchg
imul
xlat
xchg
push
dec
fwait
nop
sbb
and
in
lahf
sahf
bound
fwait
loop
and
out
fs
call
loop
das
fisubrs
out
cld
xchg
mov
rorl
sbb
insl
inc
mov
or
pop
aad
pop
push
std
add
pushf
xorb
or
cmp
adc
into
jmp
mov
hlt
xchg
addr16
xchg
xchg
cmp
push
xor
stos
xchg
lods
lods
test
pop
dec
push
aas
fcompl
divl
jp
addr16
jae
fldl
rcrb
pop
es
clc
shl
movsb
inc
dec
imul
idivl
add
xchg
push
mull
insb
cmp
hlt
divl
mov
add
mov
sbb
mov
dec
push
or
adc
mov
cmp
cli
movsl
xchg
stos
ss
pop
insl
dec
pop
cmc
push
and
mov
rcll
push
push
call
cli
xor
rcrb
testl
lret
lods
mov
and
push
jecxz
icebp
insl
pop
xor
out
push
lock
test
ret
jo
dec
in
push
lcall
dec
add
scas
es
sub
ror
dec
in
pop
dec
loop
xor
or
repz
adc
js
in
push
xchg
add
pop
pop
mov
gs
pop
cmp
fistps
jb
int
fildll
mov
sub
xor
dec
shrb
jnp
leave
xchg
jo
fs
outsl
into
outsl
js
sub
testl
out
pop
sahf
fildl
xchg
and
sub
or
or
pop
loopne
cmp
pop
add
pop
jp
xor
dec
movsl
gs
cmpsl
xlat
leave
sub
mov
inc
dec
xchg
xor
jl
in
add
jno
repz
and
pop
xor
lea
pushf
mov
repnz
inc
mov
popa
xor
push
rolb
inc
push
in
sbb
cmp
or
icebp
mov
lea
popa
add
loope
xchg
pop
mov
cmc
scas
xor
test
in
divb
xchg
dec
mov
push
mov
test
pop
cmp
or
int
add
push
pop
or
out
push
push
repz
xchg
pop
or
test
xlat
inc
ja
jbe
xor
push
and
cmpsb
pop
adc
scas
mov
and
jnp
pop
adc
aas
mov
cli
and
stc
push
mov
mov
pop
mov
lock
repnz
sbb
xor
jecxz
in
cmpb
dec
cmpl
push
pop
add
js
movsb
movsl
or
push
enter
mov
hlt
mul
mov
xor
ja
adc
or
clc
push
inc
cmc
pop
ss
xlat
movb
shrb
stos
popl
fdivl
pop
ljmp
adc
and
aas
cmp
fidivrs
jo
push
sbb
out
pop
push
inc
add
decl
xor
lods
push
push
aas
mov
sub
push
cmp
adc
lock
add
pop
addl
dec
mov
mov
idivb
xor
scas
bound
lret
jno
mov
aaa
ret
jecxz
jns
in
fwait
inc
fxch
pop
daa
test
int
inc
pushf
out
mov
lods
jmp
cmpsl
push
movq
mov
movsb
pop
dec
sub
ret
movsl
roll
fmul
jb
cmpsl
icebp
test
jmp
stos
cmp
aad
mov
flds
leave
dec
cmpsl
adc
jge
adc
les
push
mov
xchg
lahf
jno
ret
stos
out
hlt
sub
popl
pop
cmp
pop
dec
fiadds
inc
popa
leave
sub
cli
lock
scas
test
xchg
cwtl
push
ret
adcl
add
pop
leave
out
or
adc
roll
mov
mov
mov
nop
aaa
rcr
mov
pop
sti
adc
mov
in
and
sub
imul
dec
fadds
or
js
push
cmp
pusha
push
in
dec
repnz
es
cwtl
scas
int3
outsb
mov
pushf
sub
adc
or
loop
sbb
inc
jbe
xchg
es
lret
jmp
cmp
cwtl
and
cli
leave
aam
cld
clc
or
daa
or
pop
push
scas
out
xor
jns
push
ljmp
push
mov
push
test
cld
hlt
sbbl
test
add
jecxz
stos
orb
cmpsb
cmp
add
cmp
inc
pmaxub
mov
orl
fdivrl
arpl
pop
mov
ficomps
xor
roll
pop
lock
fwait
jnp
cli
mov
or
aas
xor
loope
pop
icebp
or
aam
std
fdiv
jle
push
cmpsb
sub
cli
push
jne
test
mov
jo
popa
xor
hlt
pop
imul
notl
jnp
xor
mov
add
aam
out
jecxz
mov
jnp
add
call
lcall
jne
loop
xor
mov
test
adc
push
js
pushf
mov
mov
mov
xor
stc
jno
xor
inc
dec
mov
pop
iret
mov
nop
test
imul
cmp
pop
add
xor
aam
sub
mov
lods
push
pop
jg
test
add
inc
sbb
cmp
adc
int3
cmp
adc
fdiv
mov
adc
jmp
fcmovb
sbb
movsb
jne
pop
or
inc
xor
lahf
mov
inc
inc
out
pop
addb
lahf
mov
push
adc
or
jle
iret
sub
jbe
xchg
pop
test
jle
dec
pmullw
lcall
mov
outsl
mov
rdmsr
gs
xor
sub
fwait
jle
add
mov
pop
cmpsb
icebp
inc
push
bound
mov
dec
ret
xchg
mov
xor
mov
adc
mov
xchg
push
pushl
ret
test
notl
or
arpl
sbb
xlat
jbe
or
mov
mov
data16
mov
xor
and
hlt
xor
add
mov
and
add
mov
sub
test
pop
xchg
loop
or
fwait
or
dec
fs
push
insb
inc
xor
movsl
sbb
and
or
sub
shlb
js
mov
push
cmc
dec
imul
inc
cmp
in
shrb
rep
scas
out
inc
xor
and
repz
out
call
cwtl
jo
push
lahf
or
mov
repnz
mov
and
in
testb
xchg
mov
adc
fsubrs
xchg
jb
punpckhwd
or
adc
adc
mov
xor
ds
mov
fldt
mov
push
xor
push
jb
push
push
fwait
jns
arpl
into
xchg
mov
push
in
fprem
clc
mov
cld
dec
gs
and
or
inc
lcall
stos
jbe
loop
push
leave
sbb
leave
idivb
adc
les
push
mov
ret
mov
int
rcrb
and
push
rorl
loopne
jle
test
adc
aas
pop
mov
jae
insl
out
add
pop
cmp
je
or
xchg
add
ret
and
and
inc
sub
out
sbb
push
hlt
jecxz
xor
cmp
xchg
dec
and
pop
subb
pop
mov
fucom
pop
cmp
mov
aas
mov
jge
lret
sahf
dec
jns
jns
into
xchg
lds
in
lods
les
jle
movsl
cs
popf
xchg
add
into
pop
dec
mov
or
jnp
stc
push
pop
aam
dec
es
lea
inc
jle
mov
sbb
jle
mov
fxch
mov
cmp
ficoms
cwtl
dec
sbb
xor
add
add
and
push
cmp
pcmpeqw
xor
sub
movsb
mov
push
cltd
mov
push
notb
insl
inc
mov
push
repz
inc
mov
flds
xchg
add
cmc
in
stos
das
ret
inc
and
mov
aas
xor
add
push
sti
cwtl
dec
rolb
inc
fs
pusha
inc
leave
pop
nop
mov
xchg
and
push
imul
ljmp
imul
mov
mov
icebp
into
mov
jge
test
filds
sbb
jno
push
jle
mov
jmp
int
xor
sub
call
inc
xchg
xchg
mov
pushf
pusha
int
icebp
xor
lret
popa
test
inc
lcall
or
popl
in
rorl
cmc
addr16
sbb
in
pop
mov
xchg
and
inc
data16
mov
mov
pushl
push
xchg
movb
cmpb
in
es
lock
pop
ret
lock
lret
push
aam
test
dec
mov
jne
cmp
mov
adc
aad
xor
pop
scas
mov
lds
dec
mov
cmp
inc
cmpsl
and
dec
cltd
adc
inc
sbb
int3
sbb
and
add
cs
orl
push
pop
cmp
push
pop
jno
push
jg,pt
mov
mov
loopne
sub
or
push
inc
fnstenv
push
jo
inc
int3
scas
rclb
jmp
push
negl
dec
jae
bound
loope
jbe
push
rorb
out
test
sub
mull
mov
lret
sub
scas
cwtl
xchg
mov
jns
jl
ds
jnp
mov
add
out
push
xchg
js
gs
hlt
jbe
xor
outsb
cmpsb
hlt
lea
pop
xchg
push
leave
or
in
adc
jp
add
or
jns
inc
outsb
pop
push
shrl
dec
or
jbe
xchg
mov
rorb
sahf
jge
jae
fbstp
jmp
add
mov
sub
pop
cmp
mov
pop
out
dec
inc
cmp
jns
enter
push
push
jle
inc
scas
ljmp
icebp
cli
ret
daa
dec
lahf
enter
adc
sbb
ret
push
jo
loope
mov
sti
add
jg
xlat
jb
push
and
mov
aaa
popf
cmp
jmp
jmp
add
fmul
inc
adc
mov
xchg
sbb
in
out
orb
jle
mov
out
test
cwtl
add
fimull
jl,pn
mov
sub
push
push
rolb
testl
dec
les
icebp
mov
loope
je
shlb
and
adc
dec
mov
jle
inc
jo
jp
in
addl
fstpl
js
leave
xchg
inc
push
dec
jmp
mov
xchg
fcmove
ds
sbb
cmp
or
sbb
jg
sbb
popa
pop
mov
xlat
jbe
jae
xchg
pop
sub
mov
mov
pop
and
xchg
int3
push
jge
mov
jecxz
push
inc
mov
fmul
bound
lods
jecxz
sub
insl
add
jecxz
cld
popf
sub
mov
jnp
adc
inc
imul
cltd
add
cmp
jns
inc
cmp
jno
rolb
pop
inc
xchg
and
add
jmp
pusha
jbe
and
pop
lods
jb
mov
lds
xor
push
pop
clc
mov
inc
repnz
jae
mov
jb
pop
mov
fcoml
add
sub
lods
mov
pop
pop
rcr
jl
int
push
int3
pop
push
and
mov
xor
pop
mov
and
cmp
pusha
stos
add
inc
add
fs
ja
loop
sbb
or
mov
lcall
cli
bound
call
adc
icebp
mov
movsl
add
fbstp
loope
pushf
add
add
adc
shrb
mov
nop
popa
jp
adc
pop
bound
push
or
popl
push
mov
popa
pop
shll
es
and
repnz
jge
nopl
or
lret
repz
mov
in
call
cmc
dec
ror
xor
cmp
dec
psubd
test
jp
push
cltd
lock
xor
int
aaa
inc
cmp
push
data16
lret
xchg
loope
cli
mov
test
push
pop
fisttpll
je
mov
push
mov
jecxz
lret
outsl
call
movl
fisttpl
je
test
and
std
loope
cmp
rcll
inc
jmp
call
addr16
dec
cmp
inc
std
cli
cltd
scas
das
mov
popa
or
push
xchg
cmp
pop
inc
xorl
cmp
mov
or
enter
pop
xor
sahf
and
and
sub
sahf
pop
mov
inc
outsb
mov
fidivs
jge
test
push
mov
xor
mov
test
lods
rcrb
mov
mov
jb
jb
cwtl
dec
jbe
ret
loopw
lds
shrl
or
loop
nop
fiadds
lret
add
inc
pop
dec
jp
push
pop
dec
pop
sub
xchg
dec
jg
xor
mov
mov
cmpsl
fcompl
pop
sbb
lcall
pop
shll
inc
mov
xchg
rorb
sbb
in
sub
cmc
mov
mov
lock
fstl
add
into
push
add
les
addr16
jne
sbb
push
popa
jmp
cmp
mov
push
js
outsl
jecxz
cltd
mov
stc
jo
call
and
insb
stc
leave
jg
cld
inc
stc
mov
outsb
divb
push
add
mov
sti
dec
push
sub
jbe
push
pop
insb
jp
and
sub
xchg
test
mov
sub
mov
dec
mov
enter
sahf
addb
sahf
mov
push
xchg
sbb
pop
lds
sarb
iret
mov
inc
call
and
jns
pop
mov
bound
ss
insl
xchg
pop
sub
fs
mov
or
inc
pop
xchg
fs
jecxz
pop
sbbl
inc
into
push
xchg
popa
iret
mov
ret
clc
in
aaa
shrl
cmc
adc
adc
add
add
enter
sub
jmp
outsb
jb
mov
je
mov
xchg
fisttpll
push
sbb
les
dec
iret
and
cmp
sahf
cltd
mov
add
jge
out
mov
stos
mov
mov
xor
das
loopne
cmpl
test
mov
roll
xchg
lahf
dec
adc
rclb
imul
mov
out
xor
insl
mov
pop
lds
push
sbb
cmp
jg
cmp
mov
jl
push
insb
sub
pop
cli
cld
enter
xor
inc
inc
or
lcall
movsl
loop
mov
filds
cmc
cmp
mov
push
push
fstpl
add
into
sbb
xor
fstpl
mov
out
push
mov
sti
outsb
sub
mov
push
out
enter
and
jb
jae
sbb
daa
xchg
stos
jmp
mov
xchg
and
xchg
mov
daa
push
stos
ror
xchg
fdivl
mov
or
daa
pop
call
shlb
sub
sub
pop
jle
sbb
mov
sub
ljmp
out
mov
pushf
adc
es
or
sub
jne
repz
sbb
sub
cmpsb
cmp
rorl
xchg
cmc
cmpsl
and
pop
pop
inc
sarl
bound
repz
adc
xor
push
test
outsl
lahf
cmp
fwait
andb
xor
lcall
nop
out
and
inc
xchg
xor
enter
add
fldenv
cmp
in
add
or
mov
xor
ss
loop
fsubl
shll
adc
sbb
mov
dec
ljmp
add
movb
into
push
fcompl
cmp
push
imul
inc
push
outsl
sub
roll
mov
inc
mov
mov
pop
jo
hlt
cmpsb
pop
fdivs
xlat
xor
sar
loop
pusha
push
aam
call
or
mov
fisubrs
mov
in
add
scas
mov
aad
mov
jge
mov
adc
daa
shrl
push
xchg
and
pop
add
xor
mov
xchg
xor
in
stos
sbb
pusha
jns
add
getsec
lret
or
or
sub
mov
cmp
xchg
lret
push
testb
call
sub
nop
xchg
out
movsl
inc
fistpl
jno
pop
lret
cwtl
loop
call
jge
enter
aad
imul
call
and
and
xchg
inc
sub
xor
push
outsl
add
adc
cmpb
enter
push
aam
sub
inc
push
pusha
add
mov
or
adc
xor
pop
fistps
pushf
push
ret
fs
popa
fdivr
test
jns
fbstp
das
pop
mov
js
dec
push
cwtl
in
adcb
cmpsl
shrb
test
xchg
data16
popa
dec
and
xchg
rep
fisttpll
jecxz
jp
sub
dec
pop
leave
inc
sbb
xchg
mov
test
push
cmpb
shr
xor
and
xor
pop
or
pop
cld
data16
xchg
jmp
jp
rcll
setl
in
loope
in
aas
mov
lret
out
loopne
stos
inc
dec
inc
jbe
pop
inc
xchg
pop
mov
mov
push
test
mov
stc
inc
cmc
mov
jl
xchg
xchg
jne
cs
push
inc
push
lahf
daa
xor
in
fmull
ljmp
push
jge
imul
out
sbb
int3
fwait
mov
das
jp
mov
aad
subl
lret
imul
loopne
mov
push
mov
add
jno
fs
mov
add
enter
jae
or
mov
dec
and
jecxz
dec
cwtd
push
or
stos
mov
dec
push
dec
lds
into
and
les
and
jno
sub
push
imul
inc
aas
inc
jno
ljmp
mov
aas
mov
inc
jbe
cld
jb
push
push
mov
pushf
adc
mov
pop
cmp
cmp
xchg
add
in
call
addl
lds
xlat
sqrtps
mov
pusha
lea
jecxz
add
mov
cmp
enter
xor
push
mov
adc
xlat
push
xchg
lcall
imul
bswap
outsl
sbbl
in
loop
cmpl
out
jne
imul
push
mov
fcoml
pop
cmp
xchg
jp
xor
idivl
pop
mov
std
lret
jmp
cmp
jns
sbb
dec
jnp
inc
xor
and
mov
out
mov
inc
cmc
movsb
sbb
aas
xchg
xor
insb
repz
loope
cmc
in
scas
leave
inc
ror
loopne
daa
jb
pop
pop
je
sub
out
xlat
push
mov
mov
mov
xchg
xor
dec
xchg
aam
xchg
popf
mov
mov
fdivrs
dec
cwtl
mov
inc
mov
loopne
cld
insb
into
jae
into
ret
cmp
ja
xor
push
mov
cmp
mov
lea
popf
xchg
das
pcmpeqw
mov
inc
out
jno
repnz
in
mov
mov
xor
out
fldt
pop
mov
adc
scas
adc
jne
mov
push
xchg
jge
xor
pop
mov
test
mov
test
push
push
ret
fnstsw
iret
mov
mov
cmp
cmp
cmp
push
mov
xchg
jo
push
stos
xchg
arpl
sahf
mov
adc
scas
pop
outsw
jb
es
pop
dec
sbb
test
and
fadd
test
pop
cs
mov
jge
jne
mov
or
leave
enter
popa
mov
arpl
jnp
call
jno
mov
mov
sarl
and
xor
lret
mov
repnz
add
cmp
testl
gs
xor
out
outsb
divps
sarl
inc
xchg
hlt
out
sbb
cmp
push
fsubl
es
sub
jmp
mov
mov
cmp
stos
cmp
xor
jmp
mov
int3
enter
cmp
mov
jp
cmpsl
fidivs
ds
js
mov
push
inc
pop
mov
and
push
push
data16
pop
lds
mov
mov
outsb
adc
or
sub
xor
dec
int
add
icebp
mov
mov
adc
pop
fwait
ja
es
sub
fdivp
lds
aas
lods
std
jo
je
xchg
add
imul
jmp
mov
nop
mov
mov
jecxz
decl
lahf
adc
out
push
jnp
in
mov
inc
and
mov
pop
push
add
pusha
pop
iret
and
nop
popf
add
cmp
mov
pop
lahf
enter
in
jae,pt
pop
jmp
addr16
dec
lea
daa
mov
and
addr16
aam
das
bound
add
xor
adc
pop
xor
movl
out
out
xchg
or
cmp
dec
repnz
mov
jne
pop
stc
repz
pop
gs
sahf
mov
jno
jg
mov
call
test
push
cmp
shl
lods
stos
test
mov
xchg
lret
imul
mov
xor
and
and
push
pop
and
jge
ljmp
mov
xlat
sbb
dec
dec
pop
dec
mov
mov
fstps
dec
dec
mov
fstpl
mov
mov
call
fldlg2
jno
gs
pop
cmpsb
mov
adc
dec
shll
mov
icebp
pop
js
add
push
test
sbb
shlb
mov
mov
std
and
repz
ja
enter
push
sbb
fwait
shll
jmp
mov
std
sbb
addb
adc
sbbl
cmp
fimuls
jg
xchg
cmpsl
insl
aam
sbb
arpl
test
pop
sti
push
add
imul
daa
insb
sub
mov
fldenv
push
push
gs
stos
sub
adc
mov
add
iret
push
scas
pusha
mov
sbb
int3
push
push
cmp
hlt
cmc
pop
mov
cltd
outsb
pop
inc
xor
xchg
cmpsl
idivb
leave
cmpsl
ds
mov
xchg
std
sub
xchg
inc
add
fnstenv
mov
cwtl
int
subb
jb
sub
push
mov
mov
icebp
in
or
mov
dec
imul
dec
xchg
movsb
push
ret
in
or
inc
adc
cmpsl
inc
or
mov
and
pushf
add
shrl
test
testb
es
push
lea
sub
daa
pcmpgtd
sbb
push
les
icebp
xor
add
xchg
pop
fs
mov
ss
jg
jecxz
sbb
out
not
xor
push
scas
xlat
in
adc
insb
add
add
xchg
jnp
dec
add
xchg
mov
shrb
dec
in
or
loope
loop
out
xchg
daa
lahf
mov
repz
fs
popa
scas
in
out
inc
mov
dec
xchg
push
shlb
jbe
rolb
lea
xor
xor
xor
push
cmp
and
push
aad
scas
jb
das
mov
dec
ja
and
add
pusha
sub
cmpsb
mov
and
xor
in
into
pop
and
lods
jle
imul
dec
loope
dec
lea
idivl
das
lahf
movsb
mov
mov
add
push
repnz
dec
cmc
pop
mov
rorl
andb
or
jecxz
data16
jno
addr16
into
jno
or
mov
cmpsl
inc
mov
xchg
mov
stos
out
mov
outsl
xor
pop
das
push
and
icebp
bound
jle
mov
in
push
or
data16
sbb
mov
or
addr16
ljmp
sti
enter
fnstcw
mov
fistl
dec
push
mov
std
insl
outsb
push
and
pop
push
jge
xor
divl
or
cmp
pop
into
pop
sub
inc
push
sub
arpl
repnz
cmc
push
add
arpl
add
scas
cld
movzbl
fmuls
fwait
add
jecxz
flds
out
mov
lahf
ljmp
mov
jbe
sbb
cmc
aam
lea
and
imul
insl
out
cmpsb
cmp
mov
cmpsl
addr16
or
sbb
push
adc
pusha
sbb
testl
in
pop
or
ja
or
push
loope
int
add
and
push
inc
decl
mov
xchg
push
mov
lods
lcall
xchg
mov
movsl
mov
imul
inc
sbb
hlt
xchg
jb
mov
loop
in
adc
fmul
nop
sub
outsb
mov
lret
xchg
and
xchg
shr
test
and
cs
rclw
stc
cmp
sbb
out
jb
dec
inc
fsubrs
sbb
inc
xor
testl
sub
mov
sub
push
loope
pop
int3
mov
test
iret
dec
add
xchg
jns
pop
mov
inc
imul
lods
sbb
xchg
sbb
cmp
xchg
aad
clc
xor
xchg
jo
out
jne
sbb
lds
test
push
js
pop
lcall
mov
shlb
clc
mov
mov
movsl
aaa
and
cmpsb
push
in
and
loope
cmpsb
sub
gs
into
mov
ficoms
or
adc
inc
daa
gs
jno
push
jmp
test
inc
cmp
loope
mov
ljmp
nop
mov
cmp
int3
push
inc
xchg
shrl
jne
jecxz
jp
insb
rorb
out
out
push
gs
pop
add
add
lock
lret
xchg
out
sbb
mov
adc
mov
icebp
repz
cmc
add
sub
shll
or
dec
jg
gs
lret
mov
add
mov
pushw
mov
pop
jns
aam
sahf
stc
pop
cs
xchg
xor
jae
adc
push
and
shlb
mov
scas
jmp
add
cmpsl
ja
or
pop
jg
add
push
ret
push
cltd
inc
orl
roll
pop
lret
aam
movl
xchg
lock
stc
fcomip
int3
nop
out
cmp
aam
cmc
jl
rclb
jp
xchg
mov
mov
out
adc
ret
sbb
popf
adc
xor
outsb
outsb
dec
jo
lea
or
movsb
add
lret
shl
mov
sub
pop
dec
mov
es
adc
inc
in
pop
xchg
mov
mov
adc
in
pop
sbb
aam
jo
pop
test
cmc
stc
jge
daa
stos
cli
hlt
xchg
dec
test
int3
cmp
jle
into
or
xchg
xchg
dec
in
sbb
mov
jge
sarb
out
jne
xor
cmp
ss
dec
ret
or
iret
js
jbe
lret
popf
cwtl
inc
fwait
fs
mov
imul
and
xchg
push
cmpsb
mov
movsl
push
daa
add
scas
xchg
ljmp
inc
sbb
add
or
jle
aaa
xchg
jl
insb
mov
mov
add
or
mov
or
xchg
loope
arpl
jmp
nop
add
data16
or
sbbb
ja
or
ret
das
adc
out
enter
mov
adc
jmp
mov
push
xor
mov
push
cli
or
mov
imul
out
rorl
xor
fistps
sbb
fwait
inc
jns
adc
push
shlb
aad
mov
sbb
inc
mov
in
iret
jbe
mov
dec
cmp
xchg
jo
xchg
pop
or
jb
cltd
push
fsubr
xor
lret
test
sub
les
sub
adc
or
pushf
sbb
jae
xor
push
in
sbb
hlt
sbb
mov
in
addr16
pop
pop
push
lock
push
mov
push
dec
ja
jge
mov
iret
lea
xchg
nop
mov
adc
jo
stc
fwait
sub
ljmp
hlt
mov
lcall
in
xchg
stos
mov
and
das
push
push
add
sub
sarl
mov
xor
popf
in
sti
std
arpl
adc
add
mov
insb
mov
xchg
fstpt
xor
push
je
xchg
out
mov
mov
mov
hlt
call
adc
mov
sbb
push
jp
mov
mov
pop
sub
mov
and
stc
cwtl
setg
adc
jae
cltd
pop
push
push
adc
pop
repz
les
cld
dec
popa
xchg
mov
ret
pusha
xor
dec
adc
cmp
pop
cmp
add
mov
inc
lods
dec
and
fdivp
jecxz
out
jg
insb
aaa
mov
mov
jnp
cwtl
pop
sub
fisttps
sub
mov
nop
jmp
iret
lret
mov
iret
xor
movsl
sbb
clc
test
out
enter
repz
sub
notb
fwait
push
lock
pop
fidivrl
mov
pop
jecxz
in
push
pop
jne
sbb
dec
dec
hlt
into
push
inc
and
imul
jge
test
xor
insl
sarl
push
shrl
sahf
dec
push
mov
out
jecxz
jmp
mov
mov
jno
or
fwait
hlt
dec
ret
lahf
ficoml
adc
cmp
adc
or
out
popf
jp
aas
mov
mov
test
and
lods
mov
or
xor
js
dec
scas
into
jb
and
jecxz
sbb
test
jno
pop
xchg
loopne
sbb
insl
jge
into
cmpsb
in
push
enter
mov
mov
dec
jl
pop
shlb
or
mov
and
cmpsl
add
dec
decb
sbb
cltd
xor
xchg
call
dec
xor
enter
dec
test
cmp
call
add
sbb
mov
arpl
imul
leave
imul
jmp
cld
hlt
bswap
mov
mov
lcall
mov
cmpsb
inc
jbe
fidivl
mov
xchg
cli
shl
mov
cwtl
jl
sbb
out
or
test
push
negb
sub
mov
inc
insb
mov
divps
mov
jg
femms
lret
adc
mov
mov
adc
cld
or
xor
pop
dec
mov
or
lret
cmp
push
mov
jl
stc
mov
das
enter
outsl
or
popf
mov
popa
sysexit
cmp
insl
add
push
push
cmp
jns
sbb
gs
cmpsb
ds
xchg
jbe
dec
xchg
push
loopne
cmp
or
jbe
clc
or
arpl
arpl
ja
shll
pop
jmp
sti
inc
fwait
adc
ljmp
lock
in
movsb
jl
jne
and
jg
mov
pop
push
divl
jmp
mov
arpl
dec
dec
inc
jg
nop
jb
jp
dec
push
push
and
adc
cmp
aad
sub
adc
cmp
push
adcl
test
dec
xor
mov
pop
jb
inc
mov
dec
int3
sbb
jnp
mov
int3
clc
mov
sub
cltd
in
mov
outsb
dec
and
pop
les
pop
push
cmpsb
repnz
mov
nop
outsb
arpl
sub
shl
push
scas
dec
pushf
bound
inc
sahf
dec
mov
mov
mov
mov
lea
loop
repz
cmp
test
jno
pop
movl
xchg
in
or
sbb
fdivrl
push
insb
dec
stos
dec
cld
loop
int
out
mov
sbb
aas
data16
mov
push
sbb
inc
lahf
xchg
xor
mov
cmp
xchg
pop
popaw
test
pop
addr16
ja
jg
lret
test
cmp
imul
mov
in
int3
adc
xchg
shrb
mov
mov
outsb
loopne
cmp
imul
fisubl
and
mov
das
mov
mov
mov
xor
fwait
pop
and
outsb
mov
jge
sub
fadds
imul
mov
inc
inc
jmp
data16
daa
mov
divb
lcall
arpl
xor
xchg
mov
aaa
decb
ja
ljmp
adc
jge
or
adc
aam
mov
push
mov
mov
pop
xchg
pop
add
sub
ret
xchg
sbb
xor
or
je
cmp
cmp
movsl
pushf
mov
sti
sub
cmp
inc
arpl
and
add
ret
pushl
xchg
mulb
push
jae
add
out
outsb
jae
jae
sub
pop
jbe
fnstenv
in
ja
mov
lods
repz
fnstsw
test
mov
add
jmp
add
xchg
imul
fwait
jae
lock
das
loope
out
jl
jmp
mov
rcrb
sub
and
dec
enter
sub
imulb
mov
scas
or
sub
or
or
cwtl
or
fnstenv
pop
push
mov
in
stos
adc
rorb
lcall
pop
or
es
and
call
dec
repnz
fisttpl
shl
or
xchg
mov
stos
push
divl
xchg
pop
les
divl
rcrl
mov
push
ds
sub
arpl
imul
lds
inc
jnp
mov
sub
sbb
lahf
push
imul
aam
xorb
imul
lcall
pop
jle
mov
push
jp
mov
pop
add
inc
inc
sbbb
fsubrl
xchg
xchg
mov
and
mov
sarb
sbb
fs
stc
lods
push
sub
mov
divl
lret
lret
mov
mov
xor
addr16
mov
jle
data16
jno
mov
pop
jecxz
gs
repnz
pop
or
cs
movb
and
pop
jl
lods
xor
sub
sub
es
push
dec
cmp
sbb
fwait
lret
iret
fisubrl
testl
cltd
jns
sbb
push
cs
into
jns
or
push
cli
iret
pop
xchg
popl
sub
pop
push
inc
cs
sbb
dec
jnp
sub
cmp
fadds
fisubs
push
lret
outsb
cmp
aas
dec
xchg
sahf
jo
cmpsb
mov
push
add
orb
mov
mov
add
dec
popa
xchg
addr16
cmpsb
or
adc
push
sbb
cmp
inc
adc
inc
mov
mov
iret
in
xor
mov
cmovl
dec
into
push
outsb
mov
mov
cmpsl
pop
int
aaa
xchg
adc
pop
inc
pushf
rorl
mov
lea
fsubrs
mov
push
sub
jl
in
xor
add
jl
loopne
xor
test
popa
sbbl
add
inc
shlb
pusha
push
pop
inc
dec
xchg
dec
jns
xchg
fwait
inc
sbbb
pop
shrl
cld
push
les
xchg
insl
push
stos
or
scas
je
add
out
xchg
and
pop
pop
movsb
or
xor
into
loope
std
jae
daa
cmp
aas
or
leave
sub
shrl
test
xchg
shlb
or
sarb
cltd
mov
pop
adc
jmp
cli
call
sbb
scas
sub
push
loope
fwait
lret
pusha
sub
mov
pavgb
xchg
xchg
mov
sbb
daa
bound
and
jmp
sbb
loop
pop
and
mov
clc
cmovo
mov
fidivrs
aam
into
popa
cmpb
int3
lds
jmp
dec
out
fsts
loop
push
idivl
sub
pop
cmc
pop
nop
mov
sbb
shlb
lods
clc
inc
xchg
cmc
xchg
or
or
jns
sbb
test
cmp
in
push
jns
mov
pop
mov
sahf
cmp
fwait
cmp
nop
ret
int
cmpsl
pop
push
push
push
adc
shll
out
push
adc
push
push
push
inc
sbb
adc
fistps
lahf
add
adc
fnstsw
adc
int3
xor
pop
dec
addb
je
cmp
in
imul
dec
jae
pushf
mov
xor
fwait
insl
dec
mov
sbb
sar
mov
sbb
cmp
scas
cmc
mov
scas
adc
ljmp
add
in
je
rcrl
mov
add
scas
imul
int
inc
sub
mov
add
fs
out
movb
aad
fucomi
xchg
and
mov
sub
std
push
mov
push
mov
aad
in
pusha
fucomip
sub
shr
sbb
and
into
or
lds
test
orb
cld
mov
mov
add
sbb
hlt
inc
sbb
and
std
add
int3
dec
inc
fs
out
iret
push
jl
test
in
hlt
mov
bound
rorl
test
cld
loope
xchg
fwait
mov
mov
in
clc
sub
sub
pop
sbb
push
xchg
mov
pusha
xor
or
cmpb
pop
sub
dec
clc
jge
ret
mov
xor
sbb
rcl
xor
ljmp
push
enter
pop
sbb
xor
push
mov
cmpsl
mov
gs
xchg
js
pop
cmp
inc
dec
mov
pusha
or
xchg
ds
out
inc
cmp
mov
mov
xor
fld
pop
mov
lea
xor
stos
js
xlat
xchg
jp
xchg
mov
fistpl
in
fsubs
test
inc
mov
stos
jbe
xchg
leave
jne
lret
fwait
xor
movl
mov
leave
popf
clc
mov
loopne
cmp
scas
cmpl
jne
nop
cmp
mov
jmp
hlt
movsl
inc
fwait
subl
mov
sub
or
js
mov
add
ja
es
pop
pushf
iret
mov
int3
add
ds
adc
and
arpl
add
mov
push
cmpsl
jnp
inc
inc
push
jnp
stos
pop
dec
clc
lock
fisubs
sub
jnp
imul
gs
lock
dec
pop
idivl
imul
push
fcmovb
incl
mov
xlat
jnp
push
pop
mov
jle
or
dec
pop
push
push
jge
and
mov
pop
mov
enter
xor
mov
mov
outsl
scas
or
mov
dec
and
in
mov
repz
mov
push
jl
and
xchg
ljmp
jge
xchg
repz
scas
pop
enter
xor
cwtl
fmull
mov
lahf
aaa
push
sub
fdivs
mov
sub
or
popa
mov
orl
push
mov
xchg
sbb
pusha
loope
sarl
call
iret
cwtl
or
mov
jnp
or
ret
dec
imul
jno
sub
xor
out
insl
and
imul
cmp
test
sbb
das
xor
cltd
jle
cwtl
mov
xor
cmp
cs
sbb
cld
fidivrs
jl
out
ja
lret
int
push
nop
xor
rorl
repnz
adc
je
jns
pop
lods
ret
mov
outsb
insb
ja,pt
sbb
add
outsl
or
out
fidivrs
cmp
and
xchg
or
mov
aas
mov
sbb
jmp
roll
and
add
ds
pmaxub
lds
mov
lds
jnp
or
pop
ja
adc
mov
sbb
popa
mov
push
repnz
scas
mov
scas
stos
and
jle
pop
icebp
inc
push
xor
xchg
movsb
ror
psubd
xor
push
xchg
dec
sbb
bound
ss
das
das
stc
pusha
inc
and
push
repnz
idivl
adc
out
es
pop
mov
movsl
xor
shrl
cwtl
sbb
and
out
lds
ret
jmp
add
faddl
sti
pushf
sbb
xchg
push
xchg
pop
cltd
fiaddl
lcall
movsl
mov
mov
pop
cmp
cld
mov
xchg
cmp
xchg
popf
push
pop
sub
dec
loope,pn
pop
scas
rolb
jecxz
pop
push
push
jne
inc
pop
repz
mov
cmpsl
ret
lods
hlt
push
test
mov
add
dec
cs
dec
out
inc
pusha
loopne
es
adc
bnd
ja
outsl
fistpll
push
lods
mov
pop
sbb
cmp
dec
jecxz
sbb
mov
xor
jno
fstpt
sbb
or
lods
xchg
stos
bound
cs
std
dec
mov
clc
imul
sub
push
adc
cmpb
push
sub
outsl
jmp
das
std
mov
rcll
mov
cmpsb
mov
movsb
in
in
daa
addr16
lret
mov
in
imul
pusha
jo
pop
xchg
and
pop
dec
nop
and
aad
lea
mov
mov
adc
sub
xor
xor
mov
insb
xchg
out
adc
and
sub
add
add
mov
sahf
push
stc
dec
cmpsb
outsl
ss
stos
pop
jne
loope
mov
sub
xchg
fimuls
rcl
movsb
dec
pushf
cmp
adc
cmp
clc
arpl
sbb
mov
mov
aaa
shr
outsl
ja
pop
push
inc
mov
mov
sbb
std
mov
or
test
add
jl
les
pop
clc
cmpsb
adc
ret
sub
icebp
mov
in
push
fwait
xchg
sbb
sbb
icebp
pop
es
push
dec
repz
mov
jmp
push
fdivl
or
in
mov
mov
daa
shlb
xchg
repnz
loopne
imul
cmp
xor
jl
int
loope
dec
sbb
or
std
mov
inc
iret
xor
or
adc
ss
and
adc
out
jne
fsubl
sbb
fwait
mov
sub
loopne
rcr
or
pop
cmp
push
cmc
ljmp
scas
clc
test
fs
inc
imul
in
jle
out
iret
lods
fbld
cmpsl
loop
jb
dec
and
lret
xor
add
inc
pop
sub
xchg
adc
pop
mov
pop
fiadds
or
pop
je
sub
fadd
adc
cwtl
mov
cwtl
rcr
push
mov
xlat
rcll
rorl
pop
mov
loope
xchg
inc
cld
ljmp
shlb
outsl
movsb
dec
gs
out
mov
or
mov
lahf
adc
xor
pop
mov
in
mov
bound
pop
mov
je
mov
call
cmpsb
sub
cwtl
and
xchg
xchg
push
inc
jge
inc
push
ret
rorb
dec
push
add
mov
imul
add
lock
mov
int3
push
in
out
push
pop
cld
fbstp
imul
in
jne
adc
push
insl
xlat
xor
jle
mov
sbb
sar
insb
or
subl
sahf
inc
ror
pop
sbb
out
xchg
or
in
xor
mov
push
movsb
mov
push
out
shrb
jmp
sbbl
adc
ja
sbb
inc
ljmp
cmpsl
push
jp
lods
stos
inc
mov
push
or
sbb
adc
mov
punpckldq
dec
jmp
pushl
xchg
mov
dec
repnz
mov
push
fsub
popf
dec
in
push
roll
pusha
jp
inc
lds
rcr
out
pop
lods
xor
cmp
mov
or
in
dec
hlt
inc
cld
xlat
clc
fldl
pop
fistpl
ss
mov
inc
filds
wrmsr
lods
lods
jmp
popa
mov
jno
mov
and
dec
roll
cmp
xchg
data16
and
movsl
andb
aam
and
ret
pop
inc
mov
mov
xchg
adc
xchg
or
ret
sbbb
mov
popa
sahf
sbb
mov
or
mov
notb
stos
lea
pushf
mov
loop
adc
mov
mov
push
imul
mov
sub
cli
jae
nop
imul
out
pop
nop
scas
imul
jns
mov
stc
push
jge
jae
xor
cmp
xchg
mov
lcall
fwait
mov
sbb
or
push
xorb
xchg
xchg
mov
push
loop
movsl
jl
repnz
mov
mov
and
xchg
add
inc
cltd
fadd
outsb
jbe
lret
cwtl
cmpsb
jne
scas
or
jecxz
sbb
pushf
xor
push
sbb
je
iret
cmp
insb
push
stc
inc
pop
pop
add
sbb
sub
mov
mov
call
pop
pop
int3
or
test
stos
les
xchg
out
cmp
scas
sbb
or
xor
enter
dec
sbb
cmpb
jno
sub
pop
inc
pusha
in
jnp
mov
inc
sub
mov
jge
test
fbstp
orl
cmp
and
push
mov
inc
jno
mov
faddl
sbb
jmp
pusha
mov
jecxz
cmp
out
mov
je
pop
incl
sbb
repnz
jecxz
cmp
fs
or
lods
daa
rcll
ljmp
mov
fwait
sbb
sarb
sahf
pusha
pop
jge
pop
icebp
ss
jp
fisubrl
pop
mov
in
sub
aam
lahf
clc
mov
mov
cmpsb
mov
xor
sbb
mov
insb
ss
or
cmp
mov
cltd
pop
imul
dec
xor
leave
fstpt
xchg
shll
stos
inc
mov
sub
test
push
lcall
push
mov
adc
rcrb
lds
lods
loop
xchg
repnz
adc
xchg
loopne
add
stos
cld
and
add
cmp
idivl
pop
inc
mov
xchg
pop
jo
jl
mov
jmp
mov
jecxz
arpl
sbb
stc
inc
into
stc
and
mov
inc
xchg
cmpsl
push
lods
push
xchg
sub
aaa
mov
xor
sahf
mov
cmp
and
xor
or
pushf
push
mov
stos
jp
xor
stos
int3
mov
push
andb
leave
imul
outsb
and
jns
mov
xchg
test
stc
fdivrp
sbb
jge
imul
push
jns
lret
sti
in
push
pop
addl
aam
jbe
repnz
adc
dec
popa
mov
mov
test
test
mov
pop
add
xchg
fistl
cld
jge
jp
movsl
adc
mov
call
adc
cmpsb
out
sub
lock
xorb
mov
icebp
test
xor
inc
cwtl
int3
les
push
mov
inc
fidivl
adc
mov
addr16
xor
xor
dec
sti
lahf
cltd
aad
sub
mov
push
bound
or
fldcw
shr
adc
scas
js
jo
out
or
icebp
cmp
stos
call
push
sbb
js
lret
jg
popf
cltd
inc
pop
xor
rclb
mov
mov
cmpsb
xor
pushf
cmp
sbb
jae
outsb
test
pop
pop
repnz
push
fs
mov
in
enter
out
pop
repnz
adc
mov
pop
and
scas
pop
gs
lea
rolb
ret
add
rcrl
subl
dec
dec
neg
shlb
push
xor
mov
cmp
or
push
mov
cmp
std
mov
mov
cmpl
iret
int
js
push
jb
sub
jle
pop
add
push
and
or
fsubs
cld
adc
sbb
adc
mov
hlt
cltd
cmpsb
mov
sti
scas
push
js
rcrl
and
int
dec
jnp
outsl
xor
xchg
insl
dec
stc
add
leave
mov
mov
lods
mov
cld
push
push
push
pop
mov
fsub
jb
outsb
sarl
push
nop
pop
dec
cmpsl
mov
es
pop
or
repz
lret
popa
data16
jge
add
int3
sbb
jnp
and
dec
or
in
push
icebp
bnd
mov
inc
out
cmpsb
lods
call
mov
mov
das
pop
cltd
mov
mov
in
xchg
test
cmp
cli
jg
add
sub
call
into
add
xor
fiadds
scas
aad
stc
inc
fbld
xor
pop
cli
mov
sti
lret
lahf
mov
int3
fmuls
sub
out
ret
test
ss
cmp
gs
jl
aad
xchg
mov
mov
inc
cmc
sub
pushf
out
mov
push
cmp
push
and
ljmp
in
aas
sahf
fstl
dec
xor
icebp
xchg
mov
in
shll
inc
add
cmp
dec
xchg
sbb
jmp
mov
lea
cmp
lods
call
clc
sub
pop
dec
xor
adc
lahf
in
or
inc
xor
cmp
push
mov
gs
clc
aam
imul
fiadds
call
mov
jg
cmc
adc
inc
jnp
cmp
or
mov
and
push
xchg
xor
loopne
adc
ds
data16
arpl
imul
inc
push
fsubl
fnstsw
xchg
jge
push
cmp
movl
mov
andb
lret
cmpsl
dec
jnp
mov
outsl
push
sub
mov
add
test
cld
test
push
cltd
xchg
cwtl
arpl
cmp
push
pop
jmp
jp
loop
lock
clc
mov
lds
imul
test
xchg
push
pop
test
pop
enter
lock
dec
push
fisubrs
adc
cmp
stos
mov
or
add
int
das
inc
xor
les
and
xor
inc
inc
cmp
out
jns
test
add
fwait
outsb
test
jb
mov
cli
sub
pushf
and
mov
shll
push
jae
mov
push
xor
repnz
mov
icebp
jl
shlb
pop
mov
or
imul
xor
mov
test
sbb
or
imul
mov
or
mov
add
add
mov
insl
inc
jge
jno
mov
xor
in
and
jbe
lods
dec
sub
and
pop
ss
insb
pop
xchg
int3
nop
ljmp
mov
scas
cltd
insl
sbb
xchg
outsl
push
push
adc
pusha
testb
push
add
cld
adc
add
add
add
xchg
lds
sub
int3
jmp
test
push
jmp
sbb
rcrl
push
out
lahf
sub
pop
hlt
push
leave
dec
mov
push
out
and
loop
jae
subl
das
cmc
dec
jle
movsb
mov
mov
cs
out
push
dec
xchg
lret
in
push
sub
iret
mov
cmc
dec
sahf
add
fwait
aad
ret
imul
arpl
jb
xorl
lods
adc
int
sbb
divb
fs
lods
out
cwtl
mov
neg
sub
test
lcall
gs
jmp
scas
and
mov
iret
lock
push
mov
xor
xchg
cmpsl
or
andl
in
popa
and
adc
shlb
inc
ljmp
push
fisttpl
and
sbbb
or
pop
inc
ret
in
push
inc
in
pushf
addl
stos
add
dec
jne
pop
outsb
sbb
or
gs
lea
pop
addb
jmp
add
fs
adc
loop
fisubrl
push
cltd
xchg
mov
xchg
fdivrl
insl
and
pop
push
cwtl
dec
test
jmp
mov
lret
mov
aad
pop
fistps
pushf
pop
shlb
sahf
ret
cmpb
jecxz
sahf
xchg
movd
ja
pusha
jae
movl
lods
jmp
out
xor
dec
mov
push
fsubrs
adc
movsb
ss
or
cmp
add
xor
fldcw
dec
mov
add
stc
js
ret
cld
fsubs
push
stos
lock
cli
call
mov
mov
add
sub
mov
cs
movsl
loop
sub
fsubp
push
movsb
out
cmp
dec
add
dec
pushf
dec
jne
mov
pop
jnp
xor
push
andb
cmpb
xchg
inc
punpckhdq
popf
push
and
dec
jb
mov
int
cltd
push
popa
or
lock
in
xchg
xor
xchg
test
inc
sub
jg
lret
test
xchg
jae
popa
mov
xchg
repz
add
or
icebp
decl
sbb
jge
mov
lret
cmp
add
mov
mov
jnp
pop
or
mov
pop
pop
ret
inc
and
shlb
jo
adc
testl
pop
mov
dec
xchg
xchg
out
movsl
jb
sub
scas
addr16
testb
or
ds
or
ds
mov
pop
mov
xchg
add
inc
stc
movsb
jno
sti
leave
fiaddl
out
loopne
jnp
or
je
inc
mov
push
sub
mov
cmpsb
insl
std
cwtl
mov
inc
add
rol
sbb
or
adc
daa
inc
rclb
arpl
dec
pop
xor
bound
sub
push
pop
cmp
int3
inc
pop
rcr
mov
cmp
iret
or
cmp
dec
dec
add
or
arpl
ret
or
adc
je
aaa
lods
into
movsl
iret
xchg
mov
sqrtps
dec
ja
mov
dec
fidivrl
push
cmc
ja
sbb
movsb
loopne
push
jecxz
mov
inc
test
pusha
mov
and
sub
out
adc
pop
iret
xchg
inc
adc
jbe
mov
xchg
pop
pop
shll
cli
out
ja
enter
out
mov
and
adc
int
repz
pop
mov
mov
jns
push
xchg
aas
jno
cli
xchg
xor
mov
andl
sti
push
adc
mov
pushf
ficompl
in
fs
ds
ret
sbb
fistpll
xor
scas
in
mov
or
dec
inc
and
mov
xor
mov
jb
scas
pop
std
into
hlt
push
pop
sbb
mov
ljmp
push
in
inc
xor
inc
inc
popa
mov
mov
pop
mov
xchg
and
outsl
shlb
xchg
mov
or
dec
and
adc
sbb
imul
mov
enter
fildll
movsb
mov
stc
cmpsb
rorl
rcrb
movsb
adc
imul
mov
xlat
lret
xlat
repz
mov
mov
mov
push
dec
imul
in
enter
jb
cwtl
rclb
jge
fcmovb
or
dec
fnstsw
shlb
inc
lock
xchg
push
jle
testl
fistps
dec
push
push
cmpsl
imul
push
test
inc
push
fstps
mov
inc
add
mov
push
js
outsl
ja
add
xchg
cs
std
mov
jle
lock
neg
sub
fidivrl
daa
push
and
or
cmp
jnp
aad
adc
add
in
push
cmp
adc
inc
lods
mov
stos
cmp
sub
pop
inc
fidivrl
test
jo
mov
add
sahf
out
or
loope
inc
add
add
loop
mov
push
out
push
pop
xor
xchg
in
push
fimull
iret
loope
xor
iret
jo
xchg
enter
arpl
adc
dec
repnz
jle
xor
mov
jnp
jne
fucomi
out
dec
sar
sbb
in
sub
loop
imul
sbb
mov
ss
jmp
push
pop
xor
ja
repz
dec
pop
gs
lret
add
and
rcrb
pop
sbb
out
lock
pop
mov
arpl
cli
push
pop
mov
jge
fcoms
sbb
addr16
bound
fcmove
aas
pop
arpl
in
inc
push
cmp
xor
jne
inc
and
and
je
dec
test
jno
add
scas
into
mov
clc
push
pop
inc
ret
cwtl
dec
mov
pop
nop
adc
sub
mov
ret
xchg
mov
mov
push
xchg
xor
rclb
jl
aad
xchg
sub
dec
push
andb
rclb
scas
fiadds
pmovmskb
out
fs
lret
xchg
xchg
aas
stos
loopne
in
popa
mov
js
jl
lcall
mov
fcomps
aam
fwait
mov
mov
adc
add
sti
mov
loopne
xor
icebp
jne
jmp
shrl
leave
inc
adc
mov
outsl
arpl
popf
mov
cli
xor
sahf
lds
sbb
test
negl
sub
add
and
jge
jle
cmp
inc
inc
sbb
mov
in
ss
cmp
ret
xlat
push
out
rolb
dec
ljmp
pop
pusha
mov
push
nop
ss
cwtl
jle
jo
call
adc
fs
fstps
pop
mov
xchg
xlat
sbb
lcall
or
add
ret
mov
mov
sbb
sub
sub
sbb
xorb
in
lahf
inc
adc
push
lahf
ljmp
pop
push
mov
aam
pop
add
aad
repnz
or
dec
xchg
push
inc
jge
adc
mov
lret
aad
and
insl
jne
push
dec
add
sub
in
inc
int3
mov
jnp
rcr
push
fwait
adc
cmp
loopne
sbb
lret
and
imul
fcom
adc
and
pop
pop
xchg
imul
cmp
adc
out
out
pop
add
mov
mov
xchg
test
int
dec
fcomp
rolb
das
ret
xchg
sub
cmp
ljmp
rcrl
sub
push
fdivrs
jmp
mov
dec
in
xor
call
cmp
imul
test
fstps
jl
xchg
xor
movsl
stos
js
sbb
incb
mov
les
inc
jns
push
adc
movnti
jl
test
pop
imul
bound
aam
subl
mov
cmpsb
ret
push
jb
cmp
and
or
es
js
scas
add
fcmovb
ljmp
push
int3
push
mov
ret
pusha
in
cwtl
out
out
cwtl
sbb
je
pop
sbb
negb
loope
adc
lods
rorb
sub
repz
push
push
ja
in
push
mov
sub
xor
in
sbb
insl
xor
mov
test
dec
outsl
mov
cmpsl
ss
jno
mov
int3
mov
popf
sti
lret
mulb
add
cmp
cld
xor
jmp
xor
push
xor
push
pop
aad
dec
dec
push
mov
adc
inc
lcall
loop
inc
bound
outsl
sbb
and
or
jp
addb
or
push
mov
pop
imul
push
mov
mov
add
push
cwtl
xchg
mov
cli
mov
cmp
or
xchg
push
cmp
pop
mov
adc
sbb
addr16
mov
adc
addr16
sub
popa
mov
mov
fwait
aad
sahf
inc
sub
popf
sti
sbb
sub
add
dec
lock
jp
test
pushf
movsl
gs
pop
inc
jne
test
clc
adc
movsb
mov
jmp
loope
inc
xor
scas
xchg
popa
out
sub
mov
mov
popa
mov
shlb
test
leave
movsl
push
jns
and
xchg
scas
dec
imul
mov
mov
lcall
cwtl
inc
sub
sub
or
test
add
ja
js
sub
dec
fbstp
mov
std
mov
cmp
mov
xchg
mov
cltd
mov
in
mov
and
outsb
shll
sahf
mov
jle
xor
fmull
mov
jp
pop
sub
push
orl
jae
mov
mov
xchg
dec
out
pop
jp
cmp
cmp
sub
jae
lds
cmp
adc
das
push
ret
mov
xor
repz
sbb
pushf
fistpl
xchg
lret
sbb
rol
xchg
pop
xor
inc
jnp
fstp
movb
push
push
and
outsb
adc
push
lods
notl
pop
fdivl
sbb
jbe
xor
sub
in
fidivs
dec
iret
aas
lcall
or
push
mov
jae
loopne
push
movsb
jae
xchg
fistpl
fldcw
push
pop
in
sbb
repnz
sub
mov
in
jg
mov
lea
mov
mov
or
jbe
cs
ret
xchg
movsl
roll
mov
repz
push
mov
mov
out
out
iret
pop
test
cmp
add
push
or
and
repz
or
push
pop
aam
loop
xchg
imul
xchg
inc
jecxz
sbb
fstpt
inc
jae
out
mov
cmp
loope
jbe
sbb
shrl
jmp
enter
imul
inc
dec
sbb
dec
dec
icebp
mov
or
lods
jnp
inc
shlb
and
imull
mov
jno
xor
data16
push
lock
add
inc
jnp
and
cltd
outsb
push
dec
inc
sbb
fwait
add
fs
fwait
aam
mov
xor
mov
clc
lret
mov
insb
jno
mov
loop
sbb
clc
pop
or
sub
add
dec
and
int
mov
push
scas
jecxz
xchg
js
loope
mov
jb
sahf
nop
test
jp
leave
xor
fistl
and
jge
pmulhuw
dec
jp
push
es
sbb
and
mov
add
sahf
cld
jbe
mov
jg
mov
or
in
and
pop
jle
or
cmp
xchg
cltd
add
cli
xor
lahf
dec
imul
imull
jl
and
test
cmp
fsubrl
das
adcb
dec
lods
into
lods
cli
shl
testb
mov
test
movsl
jns
xchg
add
ds
or
mov
mov
mov
mov
ret
jns
mov
ret
lea
lahf
push
jl
mull
sub
fistpl
push
outsl
pop
imul
jne
mov
inc
mov
or
mov
stc
mov
push
cmp
pushf
mov
push
cli
adc
add
dec
dec
sub
xchg
push
jo
jmp
inc
ljmp
ja
jns
and
stos
jmp
jge
fs
dec
fcomps
push
faddl
inc
out
filds
test
push
sbb
or
mov
out
push
lods
imul
loop
jb
mov
daa
icebp
aad
into
scas
xorb
pop
fst
jmp
mov
xchg
fsubs
sbbb
pop
sbb
jb
fstpt
out
push
iret
out
push
dec
mov
sub
arpl
movsl
ja
mov
popl
add
xlat
mov
scas
jp
and
js
clc
sub
mov
cmpsl
iret
in
mov
mov
xchg
fwait
in
xor
test
push
push
shrb
or
and
js
movb
rorl
cs
mov
sbb
nop
xchg
sbb
xlat
in
aas
or
or
int3
out
lahf
mov
xchg
mov
leave
cmpsl
sbb
mov
sti
or
mov
imul
fcmovne
scas
out
es
cs
and
ret
int
push
call
in
stc
mov
shll
xor
imul
mov
xor
mov
push
sub
dec
mov
test
cltd
add
dec
inc
jbe
icebp
mov
es
leave
dec
jns
int3
divl
and
scas
inc
sbb
mov
sarl
mov
inc
and
pusha
outsb
std
es
roll
pop
jns
push
cmp
sbb
fsub
outsl
out
push
test
xor
cmc
mov
mov
inc
adc
sub
xor
jecxz
outsb
imul
loopne
sbb
enter
sub
sbb
mov
and
and
mov
sub
scas
in
out
cltd
fs
shrb
sub
inc
aaa
pop
add
pop
dec
outsl
insb
iret
lods
xchg
loope
adc
add
loop
cmp
nop
push
sbb
push
lcall
shl
cltd
test
int3
bound
imul
mov
xor
lret
div
sub
aad
mov
push
ljmp
jae
jecxz
out
xchg
das
lret
push
sub
mov
push
lock
ljmp
lahf
bound
pop
je
jmp
cmp
ds
cld
call
push
mov
jb
cmp
popf
iret
lock
and
inc
arpl
iret
cwtl
add
lods
fstl
pop
or
mov
in
cli
jg
andb
pop
jae
push
dec
mov
dec
out
std
sbb
mov
lock
roll
shlb
inc
cld
and
jo
mov
call
sbbl
scas
shll
xchg
xchg
and
gs
pop
outsb
jle
fsubs
inc
sub
or
ds
mov
fstl
or
nop
mov
push
xchg
push
mov
addl
sahf
sub
xor
ret
cmp
adc
adc
insb
xchg
adc
push
test
pop
enter
dec
cmp
mov
cmp
insb
pusha
cmpsb
pushf
push
mov
mov
in
add
stos
popf
sti
ficoms
fwait
sub
dec
movsb
test
je
and
push
add
cmp
push
add
sub
in
xor
or
cld
jns
test
dec
or
add
cli
shrl
lahf
dec
sbb
cmpsb
out
lods
int
mov
jno
int
outsl
mov
std
shlb
pop
xor
out
add
mov
push
fdivr
pop
mov
in
inc
popf
dec
xchg
gs
jne
xor
rcr
jae
add
hlt
hlt
add
je
mov
addl
xorl
mov
aas
inc
out
leave
cmpsl
lods
add
pop
ficoml
sbb
std
data16
adc
jecxz
adc
mov
ljmp
inc
pop
add
pop
mov
mov
mov
out
adc
arpl
data16
daa
ret
dec
in
push
inc
add
outsb
fmull
cld
pushf
inc
xchg
inc
xchg
lods
cli
and
mov
mov
jae
mov
xchg
sbb
scas
sti
push
nop
imul
cmc
and
pop
push
pop
xor
add
sub
jp
dec
xchg
jecxz
test
add
shlb
pop
adc
arpl
imul
cmpsb
mov
roll
call
lds
cmp
cmp
pop
imull
push
push
loope
jmp
add
dec
add
pop
cmp
shll
push
aas
aad
movsl
add
leave
int
scas
lods
xor
mov
aas
gs
or
pop
and
out
dec
mov
jmp
out
mov
sub
xchg
pop
data16
test
dec
ficompl
pop
sbb
sub
jle
and
fstpt
stos
fwait
lret
xor
xorb
fisubl
pusha
pop
jno
mov
mov
insb
mov
add
clc
fiadds
in
dec
dec
mov
popf
lcall
jge
sub
pop
adc
xor
shlb
or
outsl
jae
pop
lock
push
out
mov
and
push
fdivp
cltd
mov
pop
js
cmp
xchg
cld
jb
xchg
or
leave
stos
add
test
add
mov
xchg
or
cmp
and
lcall
repz
pop
outsb
loope
mov
pop
inc
inc
and
push
or
sub
jne
into
mov
jae
sbbl
sysret
mov
adc
cli
add
hlt
cmc
xchg
lahf
and
mov
sti
push
rcrl
sbb
mov
mov
jmp
or
gs
sub
hlt
sti
inc
jns
rclb
and
inc
or
ds
and
jl
jbe
mov
fcmovbe
inc
je,pt
pop
imul
ds
arpl
out
out
inc
scas
mov
lea
dec
cld
fstpl
jge
jno
xchg
sub
mov
shrl
xor
push
cmp
enter
or
into
test
inc
mov
or
cmpsb
xor
rorl
outsl
or
add
inc
fcomip
icebp
xor
mov
push
xchg
mov
fiadds
cmp
mov
lret
mov
pop
sarl
mov
sub
shl
push
cmp
push
out
stos
and
or
sub
mov
mov
cmp
push
in
jp
aam
mov
aaa
insl
cli
ret
cmc
add
xchg
or
mov
sub
mov
out
inc
xchg
mov
rcrl
dec
inc
or
jno
mov
push
jp
sbb
decb
das
add
mov
mov
out
int
mov
lea
stos
add
sbb
clc
push
add
mov
inc
xchg
jl
push
adc
dec
out
jno
lds
mov
and
incl
call
inc
aaa
jo
lds
push
sahf
and
movsl
jle
sub
mov
mov
enter
pop
pop
int
movsl
jecxz
test
andb
dec
mul
sbb
xlat
push
fs
add
fiadds
hlt
adc
xor
das
and
jecxz
mov
adcl
and
pop
mov
dec
test
popa
jns
rcrb
inc
in
stc
push
mov
iret
mov
ds
inc
clc
and
stc
mov
xor
movsl
inc
jle
push
cmp
xchg
push
ja
sub
mov
xchg
int3
inc
pop
fisttpll
add
ss
jle
iret
aaa
dec
outsb
add
adc
cld
jne
lds
inc
fadds
out
xchg
ja
daa
push
aas
inc
insl
pop
test
test
add
jmp
ss
faddl
jbe
cmpsb
push
inc
dec
icebp
inc
test
fcoml
dec
mov
inc
in
add
in
mov
decb
outsl
jne
fsts
inc
inc
add
jge
int3
mov
rcrb
sbb
xor
dec
push
das
pop
jle
push
xchg
xchg
ror
pop
adc
jmp
push
or
cltd
mov
lcall
das
addl
ja
cmp
jns
mov
cmpsl
popf
jbe
push
mov
sub
aas
sbb
repnz
and
mov
push
test
add
and
out
popf
in
mov
pop
jge
sub
push
xor
pop
addr16
je
pushf
aas
leave
cmp
lock
mov
arpl
mov
mov
adc
xchg
lods
push
xlat
jecxz
popa
xchg
frstor
jbe
ret
jge
jno
lea
pop
mov
scas
dec
dec
cmp
cmp
int
dec
mov
arpl
add
lds
xchg
inc
cld
bound
mov
dec
and
push
inc
call
cld
popf
push
or
inc
fildll
and
fnstenv
inc
aaa
push
imul
pusha
push
xchg
mov
push
ss
inc
je
in
inc
xchg
mov
mov
or
cltd
pop
or
ja
sub
subb
divb
sbb
xchg
mov
xor
pop
jo
jo
pop
sbb
fucomi
xchg
addl
jge
ja
push
popa
imul
insb
lea
test
cltd
je
sbb
cmp
int
test
cwtl
ljmp
pop
adc
sub
fwait
lret
xor
nop
rcll
mov
in
inc
insb
jbe
mov
into
out
sti
imul
add
or
scas
outsb
pop
dec
xor
ja
mov
int3
add
or
in
mov
jo
cmp
ss
inc
xor
jge
sub
repz
mov
cmpb
mov
test
in
insb
or
ds
xchg
xchg
push
or
stos
enter
cmp
add
cli
adc
aad
and
pop
aas
in
lcall
mov
in
loop
daa
jb
shll
ljmp
popf
nop
je
repz
mov
fisubrs
movb
stc
stos
dec
popf
or
adc
sbb
fucomi
mov
inc
and
pop
push
mov
pusha
outsb
out
jne
fidivs
jae
pushf
loop
jno
xor
inc
dec
and
ret
clc
cltd
and
mov
movsb
add
sub
arpl
pop
outsl
mov
shlb
cli
add
subl
inc
add
popa
hlt
imul
adc
popl
dec
pop
sbb
ret
dec
ret
sub
lds
lret
cmpsl
push
cmp
adc
mov
jle
push
cmpsl
xchg
dec
popf
sub
mov
test
inc
sbb
sbb
mov
insl
lcall
cs
cmp
sub
add
imul
rorb
sbb
insb
outsl
and
xor
sub
mov
dec
leave
mull
xor
xchg
call
mov
cmpl
cltd
sub
pop
push
pavgb
fildll
mov
or
jno
aas
jno
cmp
insb
xor
popa
sub
dec
leave
jp
add
cmc
enter
and
cmp
dec
jae
call
pop
hlt
push
sbb
xlat
pop
repnz
std
rolb
pusha
lret
test
andl
inc
mov
sbb
sub
and
pop
pusha
loopne
mov
lods
dec
std
cmp
jg
out
and
call
jbe
scas
js
jae
mov
xchg
jp
rcll
notl
subb
into
mov
daa
fadds
sbb
pop
mov
les
xor
xchg
dec
repnz
or
mov
dec
pop
rorl
into
outsl
adc
jl
scas
pusha
jg
pop
cmp
andb
das
in
or
xchg
aam
and
aaa
dec
add
jle
dec
js
ja
imul
jb
xor
cmp
bound
ss
mov
inc
stc
sub
mov
adcb
loope
mov
add
xchg
push
dec
shll
adc
mov
imul
dec
sti
hlt
roll
shll
add
pop
dec
add
outsb
mov
insb
lret
pushf
popf
les
mov
cmp
loop
lret
fnstenv
stos
jno
inc
test
lea
sub
adc
and
call
xor
imul
test
cmp
bound
adc
mov
aad
int3
sbb
pop
lods
cmc
inc
xor
mov
pop
in
jnp
lahf
ja
or
push
popa
jno
pusha
in
push
insl
and
rclb
xchg
subl
divl
mov
sub
jmp
inc
xor
dec
call
popf
lret
testb
mov
dec
sub
or
call
popf
lods
jecxz
and
iret
and
mov
adc
add
sub
loopne
cwtl
xor
out
mov
pop
sahf
bound
xchg
cmp
cmp
mov
adc
imul
fs
filds
mov
pop
clc
in
insb
insb
mov
scas
cmc
enter
fstl
pop
sub
dec
inc
xchg
xchg
adc
inc
cmp
lahf
cmpl
jg
mov
xchg
or
push
fcoml
jecxz
xchg
enter
jb
push
xor
lcall
fstp
daa
stc
and
push
sub
push
sub
bound
jge
fidivl
xchg
and
fcmovnu
repz
add
dec
push
fstps
push
push
cltd
adc
bound
movsb
decb
loop
mov
in
xchg
jbe
lahf
ret
loop
push
xor
fldl
stos
xchg
clc
pop
sub
test
push
mov
cmp
movsb
mov
pop
rorb
sbb
imul
jmp
mov
mov
es
mov
jecxz
aad
repz
cli
cmp
in
out
add
stos
and
sbb
jp
call
xchg
and
push
rcll
mov
and
and
mov
stc
dec
subb
nop
and
inc
lret
mov
imul
mov
cmc
pop
jb
sbb
ret
mov
jnp
sub
lcall
test
mov
sbb
int3
add
fimuls
adc
fnsave
xchg
mov
in
int3
ffree
dec
or
popf
sub
into
leave
xlat
insl
xchg
fwait
add
icebp
cwtl
js
or
dec
dec
xor
jae
fistpl
sub
icebp
popf
test
xchg
shlb
xor
sbb
inc
mov
push
cs
movsb
in
or
xchg
pop
das
insl
cmp
int
mov
xchg
jp
add
aaa
inc
xchg
jbe
sbb
or
mov
and
push
in
jle
cmp
push
daa
push
in
js
dec
mov
cmp
mov
push
sbb
sbbb
ja
sub
outsl
in
cmc
cmp
jmp
mov
push
inc
cmp
mov
push
mov
mov
add
jg
shl
pop
lcall
inc
jnp
push
mov
out
js
arpl
adc
mov
loop
adc
cmp
test
or
mov
mov
push
test
mov
rcl
cmpsb
outsl
push
mov
mov
cmc
xchg
cmpl
repnz
mov
ja
sub
rorb
cld
mov
lods
jmp
sub
testb
daa
jg
lock
adc
jae
jbe
pop
popf
xor
fs
repz
dec
les
repz
mov
or
pop
sub
out
xchg
xor
in
adc
insl
addb
lret
jp
cwtl
mov
popf
clc
jg
lock
repz
add
xor
mov
cmc
les
xchg
push
inc
push
xchg
movsb
insl
add
sbb
add
movsb
or
sbb
stc
inc
repnz
je
negb
shll
fnstsw
jnp
icebp
dec
xchg
pop
add
dec
xor
into
cmp
mov
ja
scas
add
inc
xor
in
and
push
pop
mov
ja
fimuls
lds
dec
cmp
adc
mov
imul
pop
cmpl
mov
cltd
jecxz
push
arpl
fidivrs
add
mov
lahf
dec
adc
icebp
repnz
mov
stos
fcoms
insl
mov
repz
sub
add
loopne
scas
sub
fcmovnu
push
js
leave
cmp
neg
mov
inc
sub
repnz
add
addr16
into
inc
fs
dec
or
inc
mov
xor
lea
shrb
fimuls
notl
jmp
and
xlat
pop
adc
cld
je
outsb
and
cmpsb
jnp
push
lock
dec
add
mov
nop
mul
mov
pop
cli
push
and
rorb
sub
sbb
pop
add
xor
outsb
adcl
pushf
mov
inc
repz
ljmp
mov
add
mov
sub
mov
inc
xor
push
sbb
push
mov
inc
add
add
mov
ljmp
add
ret
aas
mov
out
adc
push
cwtl
dec
cmp
and
adc
mov
mov
and
xchg
rol
jge
jp
pop
pop
push
dec
imul
sbb
xchg
adc
lds
cltd
inc
xchg
inc
jnp
mov
push
rorl
adc
fdivl
mov
sbb
inc
push
ss
sub
mov
xchg
sahf
popa
das
ret
jl
insb
fcmovnbe
stos
subb
loop
mov
and
fisubs
dec
test
or
jb
mov
inc
dec
and
jnp
sbb
pop
out
inc
pop
test
add
popf
and
dec
push
cmp
mov
mov
out
jmp
test
cli
jmp
xlat
aad
jl
mov
fcmovu
mov
push
add
adcb
mov
xor
xchg
jg
xchg
pusha
mov
xor
adc
mov
clc
xor
mov
stos
pushf
adc
xor
cld
inc
pop
cmpsb
enter
add
mov
int
mov
fwait
xchg
inc
inc
push
or
cmp
jl
inc
lret
jnp
ret
ffree
add
idivl
push
adc
ret
daa
xchg
div
ds
pop
push
sahf
cmp
not
sub
arpl
mov
inc
lret
pop
push
not
ficoms
dec
stos
xchg
clc
jno
mov
pushf
hlt
cmp
and
jge
sbb
jo
lcall
leave
inc
sbb
psubsb
test
dec
fnstsw
xor
mov
aaa
mov
sbb
sbb
xchg
jbe
testb
lock
sub
cmp
test
je
test
ret
mov
push
fs
cs
test
shrl
je
out
cmp
cmpsl
adc
hlt
lcall
push
clc
hlt
add
loopne
les
test
mov
call
jo
adc
jp
jg
out
pop
fsub
mov
push
jae
cmc
push
fidivrl
mov
repz
imul
dec
mov
aam
xor
enter
sahf
xchg
hlt
js
mov
ljmp
loope
scas
xchg
pop
sbb
ret
dec
hlt
jl
mov
stos
jmp
out
sub
ds
adc
mov
int3
cmp
fldt
repnz
sub
mov
je
dec
pop
filds
add
fildl
sub
mov
add
mull
orl
or
cs
mov
jns
jb
aam
push
or
imul
test
xor
mov
xchg
ret
fcmovu
lock
fwait
pop
repz
cmp
mov
loope
lcall
cmp
fsqrt
mov
push
data16
and
imul
imul
cmpsl
dec
push
push
stc
inc
inc
fidivrl
mov
push
inc
inc
movsb
dec
rclb
scas
scas
ljmp
inc
dec
adc
test
and
or
aam
cwtl
mov
pusha
pushf
pop
in
shrb
test
pop
daa
push
lea
ljmp
pusha
push
ja
test
or
lahf
mov
js
xor
mov
mov
cmp
xchg
ret
xor
rcpps
mov
and
jl
addr16
fldl
cmp
jae
aaa
pop
loope
and
lahf
sbb
in
cmp
push
adc
jp
xor
hlt
pop
sti
aad
add
or
rolb
jmp
arpl
mov
repnz
ss
or
add
je
and
adc
loopne
add
pop
cmp
mov
xchg
push
lret
mov
pop
mov
fisttps
fidivl
scas
adc
cld
mov
or
icebp
je
inc
insl
jne
cs
cwtl
adc
push
add
shrl
mov
movsl
ret
outsl
shr
mov
xchg
xchg
mov
xchg
es
loopne
repz
je
push
or
movsl
xchg
xor
and
push
inc
sbb
mov
or
rcl
mov
aam
cltd
dec
call
jb
mov
aam
cmp
mov
xor
push
inc
stos
lods
cmp
pop
pop
cmp
add
std
or
xchg
mov
add
in
test
xchg
jae
rcrl
out
mov
sub
sbb
sahf
rorb
scas
jb
mov
pop
and
push
pop
leave
pop
fmull
lret
daa
in
inc
nop
pushf
adc
shlb
aam
mov
dec
adc
mov
pop
fwait
jmp
sahf
inc
js
or
mov
lds
jo
mov
sub
mov
enter
in
dec
outsl
cs
pop
mov
lea
mov
push
lods
xchg
movsl
or
sarl
adc
push
in
mov
lret
insl
js
mov
cmc
mov
xlat
mov
mov
jns
jno
out
xchg
cmpsl
sbb
pop
jns
shlb
sti
or
ja
jle
cmpsb
xchg
mov
imul
addl
lret
inc
in
or
mov
in
push
inc
adc
imul
mov
cld
sub
add
rolb
jmp
lret
push
imul
test
popa
sbb
mov
or
andl
pop
sbb
cltd
test
push
dec
mov
inc
out
cmp
cs
mov
adc
and
gs
cltd
arpl
push
mov
rclb
push
adc
adc
ret
nop
lods
inc
add
jne
push
add
bound
jg
jl
or
iret
jne
or
inc
int
out
lahf
lods
das
cmp
pop
rcr
test
jo
cli
in
lods
rcl
mov
sbbb
xor
xor
shll
stos
inc
mov
pop
adc
sub
sbb
rcll
and
inc
ljmp
pop
push
shlb
mov
sub
imul
in
jg
aas
lahf
push
hlt
pop
in
mov
loopne
mov
hlt
movsb
in
cwtl
sub
arpl
stc
dec
dec
repnz
fwait
lret
inc
ret
loop
xchg
sub
lcall
add
jge
adc
aaa
xchg
jle
adc
jle
xchg
scas
and
in
fdivl
seta
aaa
test
inc
insb
push
repnz
ljmp
clc
inc
stc
mov
jmp
dec
fwait
movsb
gs
imulb
mov
push
std
mov
mov
imul
das
cmp
imul
pusha
push
jg
inc
scas
bound
pop
sbb
outsb
sub
xor
adcb
add
les
jb
xchg
jg
or
sbb
cmpl
xchg
xor
mov
xchg
pusha
pop
inc
push
and
mov
xor
scas
sub
push
imul
push
sbb
sub
cmc
mov
or
lods
stos
or
test
sub
mov
mov
dec
sbbb
cld
in
nop
ss
jne
cmc
movb
or
cs
xlat
pop
lret
pop
inc
push
sub
or
cmp
push
fisubrs
cmp
test
inc
xchg
xchg
je
test
dec
inc
adc
das
stos
xchg
sbb
pop
mov
test
fnsave
cmpsb
jns
idivb
inc
andb
inc
jb
cmp
jmp
mov
mov
stos
xor
fs
bound
mov
mov
notl
push
lods
aaa
movsb
mov
sub
dec
pop
xor
jb
ds
adc
jbe
or
es
dec
arpl
enter
test
les
mov
cwtl
and
hlt
fisttpl
incb
in
pop
imul
lcall
xor
call
add
rcl
les
adc
xor
sub
es
std
push
push
cmpsb
test
test
lahf
dec
mov
pop
add
addb
xchg
aam
add
adc
xchg
aaa
movsl
test
jg
jmp
cs
push
sbb
pop
loope
fs
daa
push
jne
push
and
ljmp
aas
xchg
pushf
lods
addl
cmp
js
ljmp
pusha
ret
lds
sub
jb
ret
fdivl
stc
loop
add
in
pop
jecxz
jb
gs
ret
inc
mov
xor
jge
push
cld
fcoml
rcrb
push
adc
loope
jmp
mov
jo
inc
or
fs
ljmp
push
inc
inc
sbb
and
dec
mov
imull
hlt
xor
insb
mov
cmp
sbb
loope
push
sbbl
add
jnp
adc
test
xchg
rorl
rolb
mov
insb
repnz
mov
testl
mov
xor
daa
jbe
cmp
push
lahf
pop
dec
and
jl
jb
aaa
shll
test
lahf
push
xchg
in
fstps
jp
push
and
mov
sub
movsl
pop
movsl
stos
mov
inc
or
js
push
push
inc
xor
lods
das
jp
fidivs
xchg
movntq
sub
test
outsb
rol
push
das
daa
mov
jecxz
pop
mov
out
loopne
lods
cmpsb
inc
adc
lahf
stc
pusha
mov
or
icebp
xor
adcl
lret
mov
out
push
rep
mov
cli
std
mov
jns
repnz
mov
cmc
pop
mov
fdivl
cmpsl
jg
mov
xor
std
xor
dec
out
pop
xor
mov
mov
iret
aam
ljmp
or
rol
jno
nop
movsl
mov
and
cmp
cmpsl
or
imul
push
aas
xchg
add
push
sub
add
movsl
and
fnstenv
push
outsb
lahf
fs
fbld
and
pop
jo
aaa
jg
loop
jl
cld
sbb
pushl
sbbb
inc
cld
sbb
loope
clc
xor
insl
lods
push
int
in
rcrl
dec
cmp
and
arpl
std
cmp
mov
negl
flds
jge
xorl
ret
add
jg
push
lds
adc
mov
sbb
ret
mov
push
je
push
jns
dec
sahf
push
cltd
sti
int
sub
cld
pop
push
push
dec
mov
mov
aam
xchg
push
jne
je
out
mov
push
inc
add
inc
jno
mov
push
xor
les
pop
outsb
orl
cld
push
sbb
mov
out
xor
rol
inc
cmp
pop
xchg
dec
xorb
std
inc
les
outsl
mov
sti
ret
xchg
push
sbb
ja
mov
leave
lahf
les
psrlw
push
mov
cwtl
in
inc
repnz
adc
jae
push
lcall
and
adc
sbb
push
loopne
mov
sbb
cli
lds
pop
pop
fadd
es
xor
ljmp
sub
pop
add
test
psrlw
data16
jecxz
push
insl
lods
pop
add
xlat
out
int
cltd
pop
dec
sbb
dec
imul
push
lea
push
out
lock
mov
mov
add
dec
cli
push
divl
add
ds
ljmp
mov
or
jae
jl
push
push
fistpll
not
in
and
ss
insb
push
xor
ret
out
mov
les
arpl
mov
xchg
scas
imul
dec
lahf
aam
push
jl
std
mov
add
arpl
mov
mov
jne
or
sub
inc
cmp
jne
shlb
ss
leave
insl
fwait
mov
int
scas
xor
mov
gs
jbe
jle
lcall
xchg
je
and
cmpsl
adc
call
aas
ljmp
and
mov
mov
push
push
add
xor
mov
push
movsb
out
movsb
out
push
lea
jns
adc
xchg
or
add
sub
inc
fistps
aaa
or
inc
imul
mov
push
rcrb
push
adc
sbb
xchg
stc
xor
add
pop
lcall
sarl
outsb
repnz
popf
jle
xchg
cmp
jle
mov
jbe
popf
lods
fnstenv
inc
dec
ljmp
je
in
jp
pop
push
cmpsl
mov
or
ror
mov
jne
testb
sti
repz
bound
out
mov
mov
mov
xchg
and
fstpt
pop
hlt
xor
andl
in
scas
dec
lods
and
fiaddl
xlat
push
jl
or
or
pusha
mov
repnz
sub
movsl
jae
cmpsl
jb
sbb
ljmp
bound
sarb
jp
push
jg
out
xor
repnz
xchg
or
add
jl
cmpl
aad
test
push
int
jo
int3
imul
fstpt
inc
mov
push
outsl
cmp
out
fimull
out
and
and
xor
and
cmpsb
xor
jae
pop
jbe
sbb
movsb
and
mov
add
sbb
ret
fsubs
mov
imul
pushf
imul
push
adcl
mov
cmc
call
mov
fs
fwait
sahf
dec
mov
ljmp
dec
adc
cmc
push
jns
mov
push
fimuls
cmpsb
mov
ljmp
mov
imul
mov
xchg
lcall
inc
adc
jmp
jae
ja
and
insb
cli
add
rcr
addr16
fisttpl
mov
add
adc
arpl
in
dec
ret
mov
nop
int
outsl
out
hlt
mov
jecxz
je
outsl
or
jge
mov
jmp
call
cs
xchg
bound
inc
in
ljmp
nop
mov
ret
adc
sbb
push
pusha
pop
or
cld
mov
and
lcall
inc
jle
leave
push
negl
stos
imul
mov
add
xchg
inc
sub
push
add
and
pop
xchg
dec
popa
add
lret
push
adc
sbb
jg
jae
jp
in
lea
cmp
mov
mov
xor
lahf
testb
test
push
shr
popa
andl
and
adc
lock
cs
mov
mov
sub
andb
hlt
mov
nop
lock
jae
and
nop
mov
fdivrs
mov
shlb
inc
sbb
adc
outsb
shr
fwait
imul
pop
cmpsb
xor
pop
lods
sbb
sbb
pop
scas
pop
cmp
jbe
xor
lock
pop
pop
add
jo
pop
xchg
das
adc
js
inc
or
or
lock
fsubrl
pop
adc
sub
lds
pop
mov
loop
jbe
enter
addr16
dec
aaa
insb
jecxz
out
fidivl
dec
fildll
subb
jne
inc
out
push
xor
lahf
sarb
jecxz
iret
cmp
xchg
mov
dec
cld
pop
or
push
push
push
xor
pop
adc
int
pop
adc
xor
js
inc
mov
lods
push
fistps
push
icebp
daa
test
pop
or
cmpsb
lea
or
leave
xchg
mov
xchg
xchg
test
call
std
pop
cld
jbe
stc
or
stos
pop
or
lds
mov
ficoml
rorl
std
sahf
xor
jg
pop
addl
sahf
cmp
xchg
cmp
xor
jmp
popa
incb
sub
jle
fsubl
sub
fsubr
push
sahf
jns
das
into
dec
scas
pop
push
mov
jmp
xlat
cmpl
and
mov
pop
push
int3
sub
adc
or
or
mov
test
repz
jmp
outsl
or
popf
and
nop
xor
mov
dec
sti
clc
xor
push
ficompl
and
lcall
mov
aas
in
call
in
in
shrb
adcb
cli
out
cmp
cli
add
movsb
mov
jno
mov
repz
addb
pinsrw
ja
in
push
add
or
jecxz
sub
fwait
cs
mov
or
pop
add
add
fs
xchg
test
push
ja
sub
imul
mov
aad
pushf
mov
or
sahf
mov
popa
loop
cmp
imul
loope
inc
inc
sbb
and
cltd
lock
sti
jae
adc
stos
ror
pop
ret
repz
dec
fimull
das
and
mov
ret
roll
cmp
push
mov
add
ret
push
pop
xchg
repnz
dec
andl
imul
xor
jo
imul
sbb
icebp
shrl
add
inc
ljmp
xchg
mov
add
push
popa
add
adc
xor
loope
je
fisubrl
lods
movsl
push
push
loop
fldt
pop
in
inc
xlat
push
icebp
push
addl
repnz
push
daa
xor
int3
lds
xchg
movsl
push
add
rolb
mov
pusha
add
hlt
out
push
shr
mov
jmp
out
xchg
pop
sahf
inc
add
sbb
cwtl
and
xchg
inc
push
daa
cld
aam
fwait
mulb
xor
sbb
dec
adc
and
fxch
adc
mov
popf
mov
ja
movsl
cmp
pop
mov
divl
fwait
test
add
test
loopne
adc
lahf
mov
outsl
pushf
fimull
sti
pop
mov
jp
inc
push
jae
mov
repnz
mov
out
mov
mov
sti
xchg
mov
mov
das
and
movsl
or
mov
out
mov
or
pop
inc
xchg
fs
mov
mov
adc
adc
arpl
add
pop
mov
jbe
call
and
inc
xor
fildl
test
loop
lahf
mov
into
jp
sub
add
loop
sti
push
jo
into
push
sub
test
lahf
xchg
lock
mov
in
inc
sbb
jp
fsts
xchg
mov
cltd
inc
dec
fstpt
mov
push
sbb
shrl
hlt
inc
dec
jbe
fisttps
popa
jne
mov
add
fmull
sub
xor
movsl
pop
divl
rorb
push
xor
pusha
stc
jne
roll
loope
mov
or
nop
les
push
adc
sub
mov
cmpl
out
loopne
cltd
popa
push
jg
add
lcall
or
add
or
add
test
or
mov
lret
in
imul
adc
dec
jno
pushf
sbb
inc
out
add
es
andb
loope
push
hlt
movl
mov
mov
ljmp
dec
imul
dec
mov
stos
add
jo
cmp
scas
sbb
xchg
js
push
aaa
xor
shlb
bswap
and
sbb
call
lods
sub
push
ja
sbb
and
xchg
jns
pop
fst
sub
lods
inc
std
jmp
out
pcmpgtd
incb
lcall
add
lds
pusha
inc
pop
adc
dec
sbbb
mov
stos
jg
lds
pop
mov
sub
in
adc
orl
incb
aam
data16
jle
pop
pop
fwait
add
xchg
pop
shr
mov
push
outsl
ficoml
mov
push
outsl
mov
push
jno
adc
bt
fldt
aas
enter
enter
mov
test
movsb
mov
sub
cmp
test
push
pop
subb
xchg
cmpb
fsts
mov
inc
pop
add
sbb
es
rcl
and
cmp
cli
test
xchg
andb
dec
xchg
jns
cltd
movsl
fldt
mov
ss
jge
cmpsl
mov
scas
push
mov
cmpsb
cltd
insl
jle
subl
mov
adc
call
jge
ret
lea
sub
scas
adc
mov
xor
test
dec
push
pop
mov
pop
stos
popa
pushf
data16
sub
push
add
rclb
push
inc
cmp
fwait
loope
push
outsb
cmc
out
lods
inc
fstps
mov
jns
and
push
je
push
xor
xchg
js
adc
test
mov
clc
aad
xchg
or
das
sub
ss
push
xchg
fs
sub
pop
loopne
or
aad
and
cltd
pop
add
push
pop
pop
out
popf
sbb
roll
push
mov
ret
cmpsl
dec
and
js
push
shl
jp
pushf
add
gs
mov
in
pop
mov
cld
add
enter
sarl
leave
insl
aam
nop
xchg
std
outsl
mov
cmp
push
hlt
cmc
subl
or
leave
xor
mov
sti
adc
notb
ds
sub
inc
adc
mov
sub
addb
mov
xchg
fwait
das
dec
and
test
jo
xchg
xchg
mov
icebp
xor
pop
inc
or
mov
lret
xor
in
sbb
xor
or
sti
test
xorl
xchg
divb
sub
jmp
fcmovu
scas
lods
jle
jbe
sbbl
in
addb
divb
outsl
aam
mov
lret
jle
divl
fbld
sahf
in
repz
push
mov
jne
gs
dec
stc
data16
cmp
inc
xor
fcmovnu
dec
das
dec
mov
lds
jbe
adc
cmc
adc
and
ret
fcoms
mov
aad
lods
cmp
cwtl
fadd
lea
cltd
mov
dec
notl
push
addr16
push
out
jno
mov
mov
mov
mov
mov
dec
dec
sbb
sub
rorl
addr16
xor
clc
fchs
es
fsubl
shrb
aas
outsl
sbb
mov
inc
fisttpl
sbb
inc
sub
or
test
pop
das
adcb
adc
xor
add
cwtl
int3
pop
jp
sahf
push
scas
dec
mov
push
pop
call
adc
ss
push
mov
es
push
std
or
mov
add
sub
cmc
shrl
and
pushf
stos
cmp
jg
mov
cld
adc
outsb
icebp
cmp
xchg
ficompl
cmp
dec
mov
cmp
dec
aad
lahf
xchg
cwtl
cltd
fwait
dec
push
fnstcw
scas
fdivrl
mov
jg
push
adc
mov
mov
nop
test
xor
mov
int
dec
sub
mov
shll
mov
lods
mov
mov
cmp
gs
lods
xchg
push
fidivl
jnp
xor
dec
ds
mov
fsubs
icebp
jge
or
icebp
mov
pop
pop
mov
xor
pop
mov
inc
jmp
stos
cmp
or
xor
aas
xlat
add
shl
hlt
sub
aad
xlat
aaa
mov
int3
cmp
push
xor
aaa
push
and
xchg
out
mov
fadds
xchg
sub
sbb
ret
adc
sub
and
in
lods
sbb
iret
pop
push
sarl
into
jbe
cli
xor
xchg
in
xor
inc
movsl
pop
xor
pop
jbe
xor
rcr
dec
dec
and
pop
rcrb
daa
jb
sbb
cld
dec
pop
test
sbb
mov
jb
das
lods
dec
and
out
test
outsl
pop
or
mov
mov
pop
outsb
xchg
test
mov
into
mov
mov
adc
mov
leave
roll
push
cmpsb
loopne
dec
add
add
int3
std
pop
lea
mov
leave
sub
pop
xor
js
sub
jno
gs
rcrb
subl
mov
mov
inc
sahf
push
pushf
dec
adc
xchg
or
jecxz
jg
lock
ret
sub
sbb
repz
popa
jg
pop
ljmp
pop
sbbb
or
ret
pop
stc
mov
addl
xchg
das
fisubrl
fbstp
addr16
xorb
shr
add
mov
loopne
adc
mov
loop
mov
sbb
cmpsl
pushf
cli
out
xchg
es
std
push
xchg
std
cwtl
std
push
jne
fwait
xlat
pop
pop
pusha
sub
addl
add
push
add
jle
fidivrs
sbb
fs
xlat
jle
jmp
sub
xchg
mov
aas
pop
push
xchg
jno
fstps
in
fists
cltd
cmp
mov
mov
imul
add
dec
aaa
cmp
inc
test
pop
jle
push
push
mov
cmp
int
or
cmp
add
pop
inc
scas
pop
cli
sub
lret
xor
imul
fcomps
lods
jbe
inc
repz
sbb
fisubrs
dec
xor
and
push
ret
push
mov
std
sub
int
testb
pop
jg
xchg
iret
inc
push
or
or
cltd
lret
and
fiaddl
out
mov
dec
pop
jnp
mov
xchg
test
outsb
dec
imul
sahf
dec
and
xor
pop
push
adc
rcrl
repnz
mov
mov
das
mov
inc
sar
test
pop
xor
shll
testb
lods
repnz
and
sub
and
add
push
popf
fildll
jne
mov
dec
push
dec
aaa
pop
enter
enter
fistpll
jb
andb
fdivrl
mov
xchg
cmpsl
mov
jns
xchg
jp
push
mov
jg
fwait
les
popa
daa
mov
out
inc
insb
pop
and
outsb
dec
pop
push
sub
in
adcb
sar
cmp
cmpsl
push
adc
bound
sti
lea
fildl
xchg
mov
mov
mov
xor
inc
xchg
mov
fistpll
inc
mov
and
out
inc
and
cmpsl
mov
test
cmc
adc
mov
sbb
andb
je
sbb
jne
pop
cmp
daa
xor
mov
xor
mov
add
xlat
jge
stos
mov
mov
pushl
fistl
jb
xchg
cmp
xor
or
dec
cmp
cli
pushf
jno
pusha
sti
dec
add
fmull
cs
mov
dec
sub
push
xor
inc
rolb
stc
pop
dec
and
sbb
dec
fucom
aam
sbb
xor
mov
dec
das
cmpsb
mov
les
cmp
call
xchg
fdiv
gs
and
pushf
or
in
add
mov
rcrl
aaa
push
cmp
cmp
dec
jae
mov
add
xchg
lret
add
add
jle
mov
xchg
into
int
popw
enter
push
or
lods
inc
jmp
cs
mov
iret
adc
or
int3
test
jge
push
jno
lea
aad
fiadds
and
pop
pop
rolb
xor
insb
loop
cmp
pop
sbb
push
mov
sarl
fucomp
es
xchg
push
and
addr16
in
pop
or
dec
xchg
pushf
inc
scas
enter
sbb
clc
movsb
sub
xchg
and
movsb
call
inc
out
scas
andl
push
adc
xchg
std
mov
int
cmp
jns
cmp
das
dec
xchg
filds
dec
pop
stc
js
sbb
mov
outsb
lret
or
popf
and
fld
repz
test
cld
dec
stos
or
jl
jle
lock
aas
out
sub
mov
push
outsb
es
mov
and
fs
push
sbb
icebp
icebp
mov
faddp
imul
std
insb
das
popa
and
sbb
pop
push
jo
lea
lret
mov
mov
mov
loope
xchg
pop
cmpb
sub
push
ljmp
xchg
out
or
mov
adc
loope
mov
cli
xchg
adc
mov
xor
mov
jp
or
mov
je
pop
std
adc
lods
out
leave
leave
xlat
sub
ds
outsl
jb
pop
rcrb
cmp
mov
sbb
outsl
xchg
push
mov
fistpl
and
mov
in
test
add
push
sub
aam
cmpsl
daa
dec
push
outsl
xlat
nop
and
std
inc
icebp
test
xchg
mov
movl
out
push
xchg
or
aad
lret
mov
xor
pop
lahf
mov
or
ret
pop
test
repnz
jg
bswap
pop
repz
mov
xchg
cli
or
loope
push
popa
es
xor
daa
es
sub
lahf
ja
cltd
dec
loopne
fmull
push
dec
lods
addr16
push
shrb
xchg
movsb
or
test
es
imull
ja
lods
push
xlat
popa
jg
mov
insb
pusha
pop
cld
orb
push
mov
xchg
inc
xchg
aas
out
push
cmp
ljmp
inc
in
scas
mov
mov
xor
mov
xor
out
and
mov
setno
flds
jg
ds
push
imul
mov
add
movsb
mov
sbb
xchg
add
mov
jb
xchg
jne
add
lods
insl
ficoml
cmc
sarl
or
xchg
shr
adc
xor
out
sbb
js
lcall
das
and
push
adc
mov
cwtl
addl
ret
jns
xor
repz
in
jl
xchg
sbb
dec
cmp
jo
int3
fnstsw
inc
adc
sbb
lcall
lods
xor
jecxz
cld
inc
ret
jp
xchg
push
mov
loope
test
stc
andl
pop
mov
popf
sbb
mov
mov
std
push
cmpsl
sub
or
loop
mov
sahf
mov
xchg
dec
pop
ret
mov
hlt
inc
mov
pop
movsl
pop
pop
pop
in
mov
ret
mov
sub
xor
fnstcw
pop
call
aad
mov
add
inc
fwait
loope
mov
cs
or
push
mov
outsb
insb
fisttps
ret
leave
into
js
xchg
gs
inc
mov
add
push
lds
jmp
mov
cld
in
add
inc
sbb
test
subl
adc
leave
mov
test
iret
les
insb
push
mov
and
lea
or
add
add
int3
sahf
mov
mov
sub
inc
scas
mov
and
js
sub
mov
sbb
and
add
aam
bound
ss
push
inc
out
enter
mov
sbb
repz
mov
out
cmp
int
sub
inc
int
inc
fdivrp
mov
xor
pop
sbbb
mov
pushf
sahf
lcall
xor
sbb
mov
cmp
mov
in
mov
iret
dec
mov
xor
dec
jle
out
subl
lock
dec
imul
fbld
push
xchg
sub
sub
rorb
pop
popf
jle
cmp
add
cmp
sub
dec
daa
add
xor
xor
outsl
negl
add
xor
jno
adc
jl
or
cmp
mov
inc
pop
lods
sbb
fimull
push
stos
movsb
sahf
out
je
cmp
dec
lahf
xor
xlat
add
pushf
pop
ret
stos
xor
mov
sti
bound
inc
mov
loop
repz
push
push
fiaddl
adcl
and
fwait
xchg
arpl
test
nop
jo
int
mov
out
xchg
aam
mov
and
sub
leave
in
pop
jae
cli
mov
add
clc
push
pop
mov
dec
shlb
jp
repz
shlb
pop
push
jmp
jle
decl
cmp
push
mov
mov
lea
fisttps
daa
or
idivl
repz
shl
push
mov
popf
aad
sahf
rclb
test
mov
negl
dec
pop
rcrb
fmull
pop
sti
rcrb
mov
sbb
dec
and
fbstp
fmul
add
aaa
inc
mov
mov
xor
or
jbe
int3
test
mov
int3
mov
movsl
ret
iret
scas
xchg
stc
xchg
mov
jne
mov
pop
push
or
arpl
and
fistpl
fldl
pushf
enter
pop
int3
xor
mov
xchg
or
test
adc
addb
fdivl
add
mov
scas
cmp
mov
std
pop
out
lds
jne
test
jg
popa
loop
mov
popa
fsubrs
and
sbb
aas
xor
and
dec
pop
mov
popa
ljmp
rorl
in
pop
mov
push
push
js
hlt
push
sarb
push
je
pop
cmp
aad
mov
shlb
outsb
xchg
cmp
sub
fadds
push
out
or
sub
jge
cmp
inc
and
adc
push
movaps
stc
cs
shl
xor
or
mov
push
adc
lahf
mov
das
divb
mov
jbe
cltd
lret
push
rorb
xchg
adc
insl
pop
lea
jmp
fisttpl
push
or
add
push
repz
dec
outsb
or
cmp
fstl
aam
adc
stc
repnz
mov
test
and
pop
mov
jmp
loop
cmp
loopne
stc
bnd
cmc
outsb
dec
jns
dec
adcl
shll
jg
sub
xor
loopne
das
cmpb
out
stc
add
sub
cmp
push
sahf
sub
fistps
in
stos
fisubrl
movsb
movsl
xor
mov
and
lret
xchg
mov
gs
jecxz
cli
lret
inc
pop
faddl
xor
cmp
xchg
call
xchg
outsl
mov
jl
and
insl
addl
push
jl
push
in
and
or
adc
aad
pop
cmpsl
push
add
fcmove
jnp
cmpb
lahf
js
inc
mov
xchg
out
push
fwait
aad
mov
push
mov
outsb
sub
mov
call
adc
push
adc
and
aam
mov
rcl
repnz
cli
leave
hlt
idiv
jbe
push
fstpt
stc
leave
in
dec
sub
aaa
adc
pop
push
pop
inc
fld
pop
xor
in
in
rcrb
rorb
mov
and
cmp
cmp
orl
call
xor
xor
jb
fwait
int3
jle
adc
xchg
dec
add
jecxz
cmp
cmp
pop
ret
xchg
and
sbbb
andb
movsl
sarb
je
pop
hlt
outsb
inc
mov
jl
mov
pop
mov
mov
repz
pusha
sub
jb
xor
push
imul
push
push
push
inc
lahf
js
xor
sub
std
mov
insl
mov
pop
xchg
lock
xchg
scas
sbb
outsl
divb
xor
adc
les
cmp
mov
idivb
add
mov
mov
jmp
cs
mov
jb
mov
into
imul
xchg
sub
dec
mov
insb
dec
pop
loop
test
adc
sbb
xor
daa
fisubs
mov
stos
sub
xlat
daa
fdivl
inc
push
mov
pop
mov
mov
xchg
roll
nop
sahf
mov
sahf
in
mov
adc
sti
pop
adc
rcll
aaa
pop
sbb
in
data16
xor
xchg
ja
enter
mov
fmuls
push
mov
cmp
cmp
sbb
mov
pop
in
pushf
and
mov
cltd
lds
pusha
mov
nop
iret
sbb
es
int
das
mov
ljmp
inc
xlat
sbb
notb
lods
cmc
call
and
dec
jae
mov
jnp
enter
test
xchg
mov
gs
cmpsl
dec
pop
and
mov
mov
push
mov
and
sahf
pop
or
test
ljmp
xchg
into
add
lret
arpl
ss
pusha
push
cwtl
add
out
shrb
data16
or
push
lret
in
leave
jmp
mov
cmp
xorb
stc
fmuls
and
scas
arpl
mov
dec
and
mov
int3
sub
popa
jno
dec
sub
adc
mov
mov
fists
popf
sti
movsb
outsl
jecxz
mov
ljmp
xchg
outsl
es
jmp
and
xchg
setbe
je
movsl
pop
mov
loope
pop
mov
and
sar
jo
push
cs
in
bound
test
add
mov
sub
jae
add
insb
push
jae
sub
mov
jnp
mov
lret
pop
add
jae
inc
imul
jl
fdivrl
repz
aaa
mov
xor
inc
jge
adc
aas
addr16
movsl
cmc
es
daa
pop
ljmp
adc
inc
daa
dec
stc
xor
iret
dec
inc
inc
dec
in
fbld
mov
enter
and
pop
add
mov
outsb
inc
testl
mov
popa
rcrl
dec
jne
dec
sub
loopne
cmp
cmc
and
xor
pop
cmp
leave
lahf
sti
int
addl
int
mov
or
sbb
mov
mov
and
rcrl
cs
xor
lock
daa
cmpsl
add
cmpsb
add
jno
shl
and
inc
fsubl
out
test
fnstsw
dec
xorl
mov
xchg
icebp
leave
add
xor
sbb
vpminub
xchg
jmp
hlt
iret
mov
or
movsb
sub
jl
and
or
lahf
pop
cli
rol
or
mov
inc
dec
mov
xchg
enter
lods
test
hlt
sarb
call
mov
enter
pop
xorl
iret
ja
mov
pop
out
dec
out
mov
pop
and
ljmp
push
push
adc
shll
xchg
or
scas
lds
mov
and
xchg
inc
fwait
mov
aad
adc
dec
add
dec
mov
jmp
stos
or
dec
inc
sti
icebp
dec
pop
mov
mov
out
aam
addr16
js
mov
fdivrs
out
jp
push
xchg
ljmp
sbb
sub
jae
xor
xor
pop
jbe
mov
pop
mov
out
push
and
popa
adc
insl
mov
shll
add
repnz
cmpsb
sub
xchg
dec
mov
mov
outsb
mov
shl
dec
addr16
mov
pop
ret
mov
sub
mov
cs
add
pop
ret
shll
jge
dec
lods
mov
inc
lea
inc
push
lods
pushf
jle
jle
and
jmp
push
dec
fwait
add
adc
mov
dec
cmpb
scas
mov
pusha
xchg
arpl
inc
cmpsb
aad
daa
popa
into
xchg
test
mov
jge
dec
lods
mov
pop
fildll
inc
xor
add
popa
aaa
pop
mov
arpl
icebp
leave
lods
xchg
jo
and
sbb
cmp
aas
in
ficompl
pop
out
lea
mov
outsl
ret
iret
pop
or
add
push
mov
sbb
not
lret
mov
mulb
call
call
or
jnp
fsubr
jo
pop
jns
jo
pop
andb
or
dec
sub
ss
pop
pop
dec
jb
rcrl
xchg
sub
push
sarl
xchg
jmp
cmp
or
xchg
imul
cmpsb
cmp
push
pop
clc
aas
loop
das
push
les
push
xchg
jmp
stc
add
and
push
aaa
xlat
jge
lea
dec
and
dec
lcall
test
clc
test
add
sub
aad
adc
inc
gs
hlt
shrb
cmp
and
rcl
jo
xchg
adc
push
adc
pop
xchg
mov
push
push
jg
out
in
stc
aas
adc
repz
sub
adc
pop
xor
sub
jo
cs
jae
icebp
fnstsw
lret
stc
cs
adc
or
xchg
shll
in
sbb
sarl
push
xchg
pop
jo
hlt
pop
sub
lea
into
mov
idivl
outsl
mov
out
test
dec
add
imul
pop
sub
xchg
sbb
bswap
mov
nop
mov
dec
dec
call
out
xchg
aaa
cmp
incl
mov
and
inc
lods
mov
jo
aas
xor
lret
jle
sub
jge
mov
lret
shlb
or
scas
jecxz
adc
test
call
mov
pop
invd
pop
rorb
add
jns
dec
das
arpl
out
movsb
aad
sbbl
jns
inc
xchg
add
pop
cmp
jbe
xlat
mov
aas
jp
imul
xlat
sub
jo
shll
popl
adc
sbb
push
xlat
jmp
popa
push
loopne
or
outsb
test
add
dec
inc
mov
dec
adc
jge
lret
icebp
nop
lods
push
sub
inc
outsb
xor
sbb
push
stos
dec
push
adc
pop
mov
dec
cmp
xchg
cli
out
pop
cld
xchg
loope
int
cmp
add
scas
push
sbb
aas
enter
pushf
andl
aaa
sbb
iret
int
jle
fldl
and
lret
dec
xchg
or
loop
iret
ror
add
mov
pop
mov
jo
xlat
mov
mov
xor
inc
pop
push
dec
push
xchg
add
aas
xor
xor
addr16
xchg
ffree
jo
sbb
or
test
mov
stos
sbb
and
stos
jne
or
xlat
or
mov
jno
xor
dec
and
cltd
leave
popf
pop
mov
and
cwtl
and
mov
aad
cmp
mov
mov
emms
insb
sbb
pop
and
jo
xchg
add
pop
pusha
xor
gs
pop
dec
cmc
mov
and
loope
or
enter
movsb
xchg
pusha
and
pop
mov
imul
jmp
and
push
mov
std
cmc
std
std
mov
shrl
push
ret
lods
inc
pop
pop
fsts
fisubs
mov
jae
and
les
pop
xor
adc
pop
dec
and
ss
add
push
arpl
lret
inc
or
pop
mov
mov
xchg
mov
dec
addr16
sbb
adc
lcall
xorl
adc
inc
dec
dec
dec
xorb
out
cmp
xor
xchg
push
mov
mov
test
repz
arpl
daa
and
xchg
in
jno
jmp
cmp
xorb
sbb
or
pop
pop
ret
shr
pop
dec
ror
mov
cmp
repz
lahf
lret
jb
stos
cmp
push
sbb
pusha
int
sbb
jl
xchg
mov
insl
ljmp
cmp
and
xor
inc
cltd
loopne
adc
and
pop
jl
sbb
movsb
arpl
jns
cmpsb
and
push
and
cmp
mov
arpl
dec
push
hlt
mov
enter
ds
loope
das
fdivrl
lea
add
xchg
and
clc
imull
aad
adc
add
inc
iret
mov
lods
xchg
and
adc
fst
xchg
scas
xchg
stos
daa
lret
ror
push
inc
idivl
scas
xlat
dec
xor
jmp
popf
mov
xor
adc
and
out
sahf
loope
and
insb
aaa
adc
or
push
mov
cmpsl
test
or
lret
mov
push
push
sbb
in
scas
out
jae
daa
loop
insl
insl
ret
add
jno
test
pop
cmp
xor
mov
decl
push
lock
xchg
xchg
lock
mov
les
adc
pop
jle
adc
cwtl
pop
xor
test
ds
fmull
shll
pop
push
cmc
shlb
pop
stos
sbb
sbb
inc
jmp
pop
mov
mov
xor
xor
in
call
add
lock
or
and
xchg
cld
insb
cltd
or
or
cmp
cmp
int
iret
aad
test
cwtl
jo
aaa
aas
xchg
and
insl
push
clc
pop
out
dec
mov
cmp
adc
cld
loope
pop
jne
inc
sbb
popf
and
dec
jns
pop
icebp
movsl
lock
and
push
dec
clc
dec
iret
scas
push
cwtl
jns
lods
sar
inc
sub
add
lcall
es
cmpb
mov
push
mov
sub
adc
sbb
es
mov
xchg
xchg
push
push
sbb
cmpsl
adc
aas
sti
cli
pop
pop
mov
inc
dec
push
mov
lock
std
psubsb
sub
cmp
xlat
push
add
clc
stc
dec
push
inc
clc
scas
add
cs
dec
or
xlat
and
cmp
loope
andl
roll
int
enter
aas
xor
add
sub
push
inc
cmp
inc
sbb
test
fwait
jmp
dec
enter
shlb
or
push
sbb
in
jne
sub
or
cmp
leave
xchg
xchg
sbb
pop
mov
sub
imul
mov
fadds
test
into
sarb
push
push
lahf
fstl
shlb
fmull
push
adc
repz
int
es
stos
mov
fisttps
inc
sahf
xchg
inc
lcall
adc
push
and
cmp
or
fsubrs
sub
fadds
loop
call
xchg
ret
pop
jb
inc
in
frstor
mov
filds
jae
aam
repnz
mov
cmpsb
je
mov
pop
cmp
or
stos
sub
je
hlt
inc
cmp
out
adc
mov
fwait
push
dec
les
fisubl
lret
lret
mov
xor
dec
lahf
jecxz
andb
mov
int
out
arpl
cmp
aas
sbb
out
iret
ret
push
iret
fwait
pop
xor
rorb
jnp
push
jo
gs
xchg
mov
mov
dec
popa
dec
rep
nop
mov
cmp
cwtl
mov
js
or
pop
js
xchg
pushf
inc
dec
frstor
dec
pushf
lahf
sahf
push
in
lahf
out
popa
jmp
inc
nop
fnstsw
fldl
shrb
adc
mov
sub
mov
xorb
or
pop
push
push
loope
int
xchg
or
sub
shrl
push
outsb
cwtl
test
shrl
lods
mov
stos
clc
test
mov
data16
push
pusha
add
mov
ret
cltd
jecxz
test
sub
add
lds
testb
inc
cmp
pushf
mov
cmp
add
dec
dec
jb
jmp
jae
pop
cmpl
mov
lret
ror
in
pushf
notb
movb
push
ljmp
or
imulb
out
daa
es
aam
nop
jno
stos
mov
cmc
pop
xchg
fstpt
dec
aad
fucom
xchg
ficoml
inc
ja
adc
fcomp
dec
insl
mov
into
push
insl
fwait
dec
nop
push
xchg
data16
sbb
xor
ss
aas
sahf
cli
mov
cmc
push
popf
unpckhps
xor
imul
sbb
add
cltd
mov
js
in
xchg
test
or
jb
sbb
aam
outsb
ljmp
pusha
imul
or
add
or
mov
daa
sbb
and
pop
jb
lret
inc
jmp
nop
xchg
rorl
imul
unpckhps
mov
divl
sub
outsl
loopne
cmpsl
in
mov
sub
mov
outsb
ret
ja
pop
fdivl
xchg
addr16
dec
cs
into
mov
negl
sub
xchg
mov
jl
mov
dec
inc
mov
movsl
add
clc
clc
out
movsl
mov
mov
repz
fs
fsts
ds
out
bound
lods
adc
lock
popf
lods
mov
push
dec
dec
adc
fwait
or
fcompl
mov
xchg
loop
test
cltd
xchg
pop
sbb
loope
cli
fisubrl
lock
pop
fcom
stc
repz
scas
jbe
cld
push
and
cmp
je
leave
jbe
in
push
jmp
add
sub
dec
sbb
and
inc
mov
fidivs
pop
push
popa
and
pusha
push
test
in
cli
dec
test
add
addr16
jno
imul
lods
cs
pop
jge
adc
mov
mov
mov
stc
mov
loop
pop
ret
pusha
mov
repz
shll
pop
push
mov
and
push
test
inc
sti
inc
pop
js
adc
bound
cs
or
imulb
stos
adc
sub
inc
mov
pop
lods
insb
pop
xor
pushf
mov
dec
dec
xchg
inc
push
repnz
divb
stc
mov
mov
mov
sar
mov
cwtl
cwtl
inc
jnp
pop
xor
xor
stos
scas
pop
mov
lds
and
mov
call
outsl
enter
dec
dec
into
adc
inc
repz
lcall
jmp
test
js
inc
lret
pop
and
dec
fimuls
push
mov
adc
lds
imull
sub
fcoms
push
push
mov
in
in
inc
adc
or
sub
inc
lret
xor
push
adc
mov
pop
adc
pop
in
adc
push
out
add
fdivrl
repz
ret
push
jge
adc
cwtl
and
push
push
or
xchg
mov
not
cs
shlb
add
shll
inc
test
jg
leave
rorl
xchg
ficoms
fucomp
or
cltd
mov
std
dec
pop
aas
hlt
movl
add
mov
lahf
jae
mov
repz
out
outsb
js
lods
in
mov
test
jmp
jo
test
mov
jb
mov
add
adcl
dec
mov
xchg
inc
repz
push
inc
xchg
loopne
or
pop
adc
lock
xchg
stos
test
dec
int3
iret
adc
ret
out
dec
or
xor
cwtl
pop
xlat
stc
pop
sti
and
lahf
jl
mov
call
inc
push
push
ss
out
add
arpl
mov
sti
or
cwtl
and
movsb
inc
dec
jno
cmp
xchg
scas
push
pop
xchg
cmc
leave
jmp
inc
orl
repz
hlt
or
movsb
and
loopne
mov
push
clc
cld
ss
xor
js
pop
or
jbe
mov
daa
idivb
mov
or
push
roll
sub
aam
mov
lock
push
jmp
or
adc
mov
push
adc
rcll
test
stc
repnz
push
ficompl
sub
ljmp
add
mov
add
imul
cmp
in
stos
fstps
loopne
mov
out
das
pop
add
std
mov
add
fcompl
int3
cmp
sub
push
repnz
pop
cmp
insb
add
inc
bound
jmp
push
or
gs
fimull
scas
or
inc
pop
das
rorl
or
addr16
cs
outsl
jmp
loopne
add
pop
push
cmp
inc
ja
pusha
xchg
inc
or
push
daa
std
rcl
push
and
cld
test
test
rcrb
aas
sbb
jbe
add
and
aad
cwtl
mov
cmp
or
adc
jecxz
outsl
mov
pop
aas
fisttpl
cwtl
mov
cld
dec
push
divb
mov
lea
adc
pop
ret
adc
lret
add
inc
push
fcmovbe
sub
ds
repnz
adc
dec
mov
sbb
loop
push
aad
lds
mov
and
enter
inc
adc
imul
fisttpl
fwait
stos
push
dec
cld
sub
lahf
bound
insl
lods
aad
xchg
xor
or
sbb
jns
lret
fbstp
jle
aaa
jo
pop
mov
shl
repnz
mov
dec
sub
int
stc
call
daa
jno
in
loopne
pop
outsb
gs
lods
out
cld
pop
ret
mov
shrb
inc
subb
hlt
sbb
shr
or
flds
dec
adc
or
enter
test
enter
dec
movsb
dec
cmc
pop
lods
push
xchg
aaa
nop
adc
sti
and
mov
fadds
inc
pcmpgtw
mov
loopne
sub
cli
dec
rcll
sub
mov
adc
sbb
or
fcmovnb
mov
or
cmc
enter
pop
jne
mov
add
rcrb
and
adc
cmpsb
and
jae
xor
in
pop
sahf
mov
test
test
push
adc
push
fimull
gs
rorl
xor
ds
or
stos
sbb
jecxz
imul
add
nop
subb
int
inc
add
sbb
fsubp
add
jmp
cli
pop
mov
and
decb
jae
mov
jl
ja
lcall
popf
cmp
ror
xchg
adc
fidivl
scas
test
cmc
hlt
cmp
cmp
movsb
inc
in
jmp
lock
cmp
out
mov
stos
cltd
aad
shrb
cmp
out
cltd
jp
dec
fimull
mov
pop
data16
jbe
xorl
adc
mov
push
mov
cmp
mov
adc
xor
sub
aas
push
sbb
pusha
xchg
into
lret
xlat
out
cmpsb
test
jl
in
xor
test
cltd
mov
cmp
movsl
fwait
test
decl
nop
aaa
inc
add
jg
cld
jno
add
rclb
aad
je
sahf
jl
xchg
insb
rorb
push
jbe
fcoms
mov
int3
adc
andb
mov
mov
xlat
inc
outsl
mov
jp
mov
adc
stos
repnz
xchg
loope
mov
andb
xchg
aad
add
push
dec
repnz
sub
add
jns
cmp
rol
mov
xchg
stos
or
inc
xchg
or
xchg
fdivrs
cmc
cmp
jns
xchg
mov
jnp
out
out
jnp
ret
cwtl
lret
mov
pop
mov
cmp
dec
lret
cmp
add
mov
test
mov
clc
int
dec
mov
adc
jge
das
cmc
and
sarb
test
out
or
loope
clc
xchg
sbb
dec
imul
mov
jmp
xchg
sbb
rclb
adc
lds
mov
jns
ja
dec
shlb
fs
lock
enter
xchg
repz
out
lret
ret
push
push
sahf
push
push
push
mov
sub
subb
loop
add
add
mov
mov
xchg
jbe
shrd
je
jge
ja
mov
std
jnp
add
mov
aam
in
insl
mov
mov
push
cmp
inc
lods
and
fdivrs
mov
in
jg
aam
aam
leave
xor
in
jnp
cmovp
leave
xchg
ss
in
rolb
push
mov
jg
push
js
mov
jmp
xor
and
loop
inc
gs
pcmpgtw
cmp
inc
mov
test
pop
ret
inc
jmp
into
xchg
adc
cmp
cmp
add
rclb
addr16
fs
notb
fadd
dec
and
xchg
jbe
xor
int
adc
or
aad
stc
jg
hlt
xchg
mov
mov
mov
lea
inc
cld
nop
cmc
roll
mov
or
push
push
and
notb
xchg
out
aad
mul
dec
pusha
call
or
cwtl
and
adc
add
in
je
addl
pop
cltd
adc
fs
sub
cmp
mov
repz
sbb
inc
sbb
cmp
sahf
jecxz
loope
mov
xorl
push
mov
stc
aas
pop
cmpsl
imul
das
mov
out
cmp
jnp
lahf
inc
jns
sub
and
aad
cmpb
or
hlt
scas
jg
test
dec
clc
jge
push
add
add
pop
sbb
ds
xchg
dec
push
push
jbe
popa
ljmp
jle
test
fwait
aaa
fs
fbld
mov
mov
xchg
lock
leave
and
push
or
push
or
or
cmpsl
das
pop
sbb
ds
repnz
xor
das
and
xchg
jo
adc
jno
lods
push
mov
data16
sti
or
mov
push
sub
pop
cmpsl
mov
subb
insb
mov
roll
lea
sarb
pushf
sub
mov
push
stos
mov
leave
pop
fs
push
adc
mov
cmpb
lea
add
insl
cwtl
jne
iret
jmp
fwait
push
aaa
movd
loope
imul
push
lea
sahf
decl
push
fdivr
ljmp
inc
insl
add
xlat
idiv
mov
adc
adc
insl
hlt
add
sub
sbb
push
je
movsl
mov
adc
sub
loope
inc
xor
jns
insb
test
pop
jecxz
push
mov
xchg
stc
mov
shl
scas
sub
pop
mov
arpl
dec
add
movsb
cmpsb
push
shll
fmulp
inc
jp
push
mov
mov
xchg
or
pusha
ja
pop
sarl
aad
mov
xchg
pusha
mov
dec
ljmp
pop
cmp
outsl
les
iret
sub
movl
scas
clc
cltd
fisttpll
xor
mov
mov
cmp
lret
jno
dec
adcb
fcomp
roll
cmpl
mov
xchg
xor
mov
sti
push
inc
xlat
mov
sub
and
jg
xchg
sbb
ret
loopne
sti
stos
stos
rcr
inc
cmp
sti
sbb
addl
cmc
mov
sarb
pop
outsl
aad
add
push
pop
push
sub
sub
je
sarl
and
sub
jae
cmp
push
sbb
and
mov
repnz
adc
or
inc
dec
dec
test
mov
in
popa
inc
jecxz
xor
inc
and
sbb
or
jmp
adc
push
cmp
ss
loopne
sbb
stos
leave
stc
add
mov
icebp
cli
aaa
push
xchg
fbstp
mov
lret
sahf
mov
insl
xorl
jo
lock
stos
push
ja
stos
push
shrl
movsb
pusha
mov
mov
nop
cmp
cli
or
lahf
insb
dec
sahf
int3
ds
arpl
add
loop
imul
jecxz
js
inc
jecxz
push
mov
mulb
and
leave
fwait
fwait
test
fisubs
jne
call
mov
cmp
std
jecxz
mov
nop
outsb
push
sub
sub
ret
xor
and
clc
and
mov
jns
xor
fsts
xor
repz
cmp
adc
cmpsb
fmul
movsl
pop
jecxz
stos
loop
cli
jne
les
cmc
cmp
mov
lea
pop
push
cld
mov
stos
lcall
inc
js
sbb
push
fdivrl
mov
std
outsb
sub
xorb
adc
dec
mov
ljmp
cmpsb
cmp
add
and
push
sub
sub
sub
fldl
mov
mov
pusha
fwait
cmc
fcomps
mov
mov
jae
repnz
movsb
pushf
push
lcall
cmp
dec
cwtl
or
or
andb
loope
sub
lock
gs
push
stos
jb
cmc
daa
ds
push
jl
popa
mov
adc
loop
je
aas
and
mov
mov
inc
and
nop
cs
mov
jecxz
mov
or
push
push
pop
ljmp
sarb
mov
cli
mov
push
mov
test
aaa
insl
add
sub
insb
int3
into
and
xor
add
pop
sub
rcr
mov
mov
pop
push
jg
inc
cmp
lods
shll
xorw
pusha
jecxz
pop
cwtl
mov
call
stos
pop
movsl
dec
dec
jmp
sbb
sbb
loop
cmp
arpl
push
sbb
cld
jbe
subl
out
push
jb
sbb
sahf
xor
push
into
shrb
cmpsl
ss
add
jbe
insl
dec
jl
add
sbb
das
inc
shrl
insl
into
sbb
out
adc
mov
fs
jle
out
inc
mov
es
or
dec
pop
mov
cmp
push
hlt
or
es
fimuls
sub
mov
cltd
pop
inc
rolb
dec
pushf
aaa
dec
cwtl
xor
xchg
and
out
cmp
cmp
addl
outsb
push
fimuls
out
loop
int3
cld
cld
cmpsb
arpl
decb
addr16
imul
pop
xchg
scas
xchg
sub
lcall
cmp
push
imul
mov
stos
loop
mov
jmp
popa
add
icebp
fdivrs
mov
scas
pop
in
push
sub
and
mov
jp
jg
ret
inc
lcall
fisubrs
clc
call
jno
push
sbb
sub
jbe
int3
rcr
adc
scas
test
cwtl
popa
jns
out
fs
loop
jnp
mov
add
data16
loop
add
mov
cs
jp
jle
mov
mov
mov
aad
xor
dec
xor
das
pop
ret
pop
subl
mov
data16
stos
subb
mov
xchg
xor
ficoms
or
mov
or
insb
or
xchg
clc
add
cmp
fistps
imul
lret
sbb
push
push
dec
bound
orl
mov
popa
sbbl
decb
das
mov
or
in
test
push
leave
pop
pushf
jb
mov
outsb
dec
mov
out
sub
cmp
push
mov
add
push
xchg
fsubl
lods
into
sahf
dec
mov
es
xchg
jl
scas
and
fwait
mov
leave
xor
pop
testb
and
sti
movsl
push
push
lret
jmp
sbb
mov
inc
xor
push
pop
mov
adc
stos
scas
ficompl
and
jns
jo
adc
aaa
mov
hlt
pop
stos
pushf
sub
adc
jmp
add
mov
ds
xlat
lea
int3
inc
add
and
mov
insb
fmul
icebp
dec
movsb
mov
and
jo
push
insl
mov
cld
dec
outsb
jb
push
into
insb
xor
inc
popa
push
lcall
or
out
pop
xchg
or
cmpsb
sarl
jmp
in
jne
sub
fiaddl
push
push
sbb
jo
out
push
jo
pop
xor
mov
stos
stos
sbb
push
mov
les
mov
pop
mov
inc
jmp
lock
push
pushf
addr16
aam
or
loope
cmc
rorb
ss
xchg
or
jo
ss
jp
xor
mov
push
pop
gs
inc
repz
lcall
daa
jno
fidivrl
rolb
mov
xchg
jo
into
lcall
push
add
cmpsl
fxam
xchg
sub
outsb
popa
cmpl
jge
cmpsb
inc
lock
in
ds
iret
push
dec
mov
dec
jae
in
jl
mov
sub
scas
imul
pop
lods
ljmp
sub
cmpsb
divb
and
je
sub
lret
and
jo
negl
add
mov
lret
lret
out
jns
sbbb
jae
and
and
or
leave
lea
test
sbb
fdivp
jne
dec
pop
movsb
gs
lret
data16
and
mov
cwtl
sub
push
sbb
das
sub
inc
cwtl
imul
sbb
fidivrs
inc
pop
movl
ret
pop
andb
repz
xor
and
int3
xchg
sbb
in
mov
lahf
int3
sbb
push
imul
jb
sbb
enter
jae
push
into
inc
pop
clc
fdivl
xor
push
std
popa
loopne
mov
xchg
mov
imul
cmp
and
ds
cmpsb
jbe
sbb
test
in
push
shlb
mov
fs
sub
and
push
movsl
stos
jecxz
sbb
in
sbb
fcompl
dec
lret
inc
adc
rorl
mulb
xchg
sbb
scas
loop
ljmp
jle
jg
lret
popf
adc
xchg
mov
scas
xchg
loopne
lock
add
andl
cmpsl
enter
call
leave
jp
out
push
sub
stc
xchg
mov
pop
test
jl
out
mov
test
cmc
in
dec
xchg
dec
push
insb
fidivrl
inc
pop
xchg
push
call
testb
es
jns
push
lcall
insl
jbe
or
lds
adc
pop
loope
lcall
mov
out
xor
push
jnp
test
outsl
mov
xchg
lds
inc
pop
jl
ret
dec
movsl
bound
cmp
and
mov
xchg
in
mov
inc
testl
xor
sbbb
push
push
cmc
clc
mov
popa
add
lea
push
cmp
dec
adc
xor
mov
mov
pusha
cmp
aam
mov
lock
and
cld
push
nop
aaa
mov
arpl
mov
or
inc
push
test
or
and
hlt
shrb
jb
movsb
in
mov
mov
and
add
in
mov
cmpsb
pop
jle
jo
fcmovnb
inc
dec
pop
lods
lds
push
rcrb
into
jle
loop
idivl
mov
fdivrs
jmp
loop
sti
stc
jbe
add
mov
sbb
adc
jns
ret
xchg
jne
mov
mov
shrl
ret
ret
add
sub
xchg
les
adc
cld
test
xor
cmp
push
fldt
cltd
mov
ret
sbb
sti
incb
mov
orl
test
inc
push
add
loopne
jae
mov
mov
lret
stos
inc
fldt
bound
push
add
nop
ret
xor
cmp
popf
insb
leave
pop
and
inc
jae
mov
xchg
dec
je
xchg
test
xchg
push
shll
lods
adc
fistps
push
xor
or
fwait
xchg
movsb
repnz
sbb
pop
outsl
and
in
notb
mov
add
xor
popa
cmpsl
shrl
into
and
sub
and
lods
lods
cmpsl
xchg
pop
test
scas
cmc
and
fadds
das
test
cwtl
rcrb
jmp
fsubrs
ja
cli
jmp
mov
mov
cld
in
adc
pop
xchg
mov
xchg
dec
jmp
sbb
mov
ss
cmp
jns
into
popa
mov
push
inc
mov
mov
jnp
xor
xorl
sbb
adc
push
int
sub
and
jne
cmp
and
xor
jnp
mov
pushf
in
in
mov
cltd
dec
sub
enter
lahf
dec
mov
add
out
bound
mov
bound
stos
add
push
pop
shr
push
jo
aas
je
or
scas
cmp
dec
shrb
popa
mov
ret
enter
stos
cmp
sub
adc
pop
jg
lock
test
mov
mov
lret
xor
cwtl
cmp
movsl
popf
imul
and
loope
and
xlat
inc
mov
mov
dec
int3
clc
adc
push
adc
in
out
daa
or
inc
idivl
jecxz
or
lahf
repnz
insb
mov
pop
xor
popa
mov
sbb
into
inc
xor
adc
push
push
mov
in
lea
mov
divb
cmpsl
dec
push
jle
cltd
xchg
aas
test
leave
push
mov
stc
dec
mov
jmp
xchg
je
or
jp
sub
mov
mov
jb
mov
rol
xorb
subb
jg
mov
push
movsl
out
cltd
sbb
fcmovbe
jne
hlt
fistpl
xchg
add
sub
mov
cmc
jp
subl
bound
push
sbb
scas
add
or
push
repnz
sbb
xchg
sub
push
mov
clc
jge
repnz
jg
or
insb
inc
and
pop
fisubs
sub
insb
or
call
lret
mov
outsb
push
mov
dec
add
mov
pop
movsb
test
or
pop
icebp
or
and
popf
adc
out
jge
pop
out
cmp
adc
fnsave
xchg
out
mov
enter
adc
pop
pop
push
lret
rorb
mov
jmp
lock
mov
insl
push
mov
adc
scas
xchg
cmp
lods
aam
cmc
pop
rclb
sub
arpl
repz
cmp
popf
stc
mov
or
outsl
and
aas
loopne
cmp
cmp
addr16
xchg
adc
add
mov
popa
test
iret
lods
sub
insl
sbb
out
aas
or
adc
into
mov
adc
dec
add
push
lods
shlb
xor
push
lds
adc
dec
jmp
dec
mov
mov
xchg
mov
sbb
int3
push
push
bound
push
mov
hlt
es
mov
dec
mov
mov
repz
lds
mov
xchg
ja
stos
jo
cmp
lahf
dec
data16
in
bound
jmp
dec
icebp
mov
xchg
test
lcall
fldl
insb
fsubrs
cld
das
out
js
out
cmp
and
mov
lods
pop
out
inc
lds
sub
shlb
add
xchg
movsb
mov
or
lcall
inc
fs
and
bound
xor
sbb
dec
rorb
sub
cmp
incl
xor
mov
push
fs
ja
cmc
cmpb
or
dec
cld
testb
mov
jl
lds
xchg
mov
movsl
into
stos
dec
and
add
ret
xor
and
lds
pop
fwait
mov
pop
or
add
jle
ret
stos
xlat
maskmovq
negl
mov
sbb
inc
ljmp
clc
leave
int3
sahf
mov
push
mov
pop
rclb
nop
push
loope
sbb
out
xlat
orb
mov
leave
jmp
sti
pop
mov
dec
test
mov
jno
pop
aad
sbb
dec
cmp
sarl
rcrl
mov
and
mov
mov
add
loope
imul
lcall
imul
lods
aam
jo
jmp
push
xchg
test
negl
push
stos
pop
testl
pop
frstor
lcall
popf
jmp
xchg
dec
jb
mov
sahf
je
add
cmp
adc
mov
mov
push
leave
mov
and
negl
sub
xor
hlt
mov
imul
sbb
xchg
dec
sbb
popf
enter
iret
dec
sub
pop
add
pop
cmp
pop
movsl
adc
push
std
out
daa
inc
mov
into
add
sbb
cli
add
xchg
cmp
sbb
insl
sbb
push
std
jge
cmp
ljmp
mov
push
mov
xchg
add
scas
test
daa
push
xchg
xchg
pop
std
out
es
cmpsb
mov
dec
xchg
add
xchg
add
dec
and
outsl
test
jmp
std
aam
leave
mov
les
sub
adc
stos
lea
incl
movsl
daa
add
daa
arpl
sub
rolb
adc
outsb
pop
aam
mov
mov
sub
aad
adc
ss
sarb
or
lods
je
push
cmc
lds
or
pop
js
loope
loop
mov
ds
ja
test
cmp
shl
inc
mov
inc
sbb
or
aam
mov
jge
pop
pop
jno
add
ds
aad
xchg
inc
mov
sahf
jae
enter
push
fsubs
data16
loope
cmp
popa
mov
mov
xchg
inc
fistps
mov
jns
into
push
mov
xor
sub
cld
xchg
dec
push
xor
jbe
xor
xchg
cld
mov
adc
xchg
xor
or
cwtl
push
sbb
loop
pop
je
jmp
pop
sbb
cmpsb
push
inc
xchg
imul
lret
imul
lods
push
nop
in
repz
jmp
cmp
add
mov
xor
fmuls
jnp
call
push
stc
mov
cmp
mov
lret
fdivrp
adc
push
xor
sub
jb
mov
movsl
stc
dec
mov
and
lods
mov
stos
insl
mov
pop
in
jns
xor
xor
pushl
outsb
mov
call
rcrb
mov
pop
or
test
insl
xor
ret
leave
cli
jecxz
sub
nop
imul
cmc
push
ss
jne
pop
push
sbb
or
mov
mov
jno
and
push
add
ss
cmp
shrl
xchg
mov
cmc
sbb
mov
lods
test
push
push
scas
lds
ret
inc
insl
add
push
rorl
cwtl
int
mov
or
sub
inc
xchg
fdivrp
js
dec
cmp
xchg
push
mov
insl
add
shl
lcall
mov
test
andb
adc
pop
out
or
in
pop
mov
in
pop
sti
ret
ds
adc
and
bound
aaa
and
test
pop
loop
stc
ficoml
cmc
jge
fwait
aam
xor
dec
pop
dec
scas
ret
lcall
sbb
add
xchg
inc
xor
mov
mov
sbb
ds
sbb
sub
xor
dec
test
pop
push
iret
or
xor
xchg
or
stos
testb
push
inc
push
and
mov
ret
icebp
or
add
xchg
cmp
insb
pop
cmpl
mov
adc
sbb
icebp
movsb
aam
xor
or
or
aam
mov
inc
and
adc
shrl
lds
nop
and
sbb
fdivl
and
inc
or
xchg
and
negl
adc
loope
pusha
dec
and
dec
in
and
dec
jae
jl
and
psllw
add
xor
lahf
fs
inc
js
dec
or
lret
lcall
push
fwait
push
dec
ret
mov
xor
sbb
mov
jle
push
std
mov
adc
dec
lock
pop
cmp
lea
aam
push
dec
or
pushf
jge
insb
and
mov
jle
dec
fistl
or
imull
xor
in
add
pop
hlt
add
pmaxub
fcom
repnz
faddl
into
mov
arpl
jg
fsubrl
inc
adc
aam
daa
fsubrl
jne
ljmp
mov
mov
daa
out
sti
sbbb
jne
inc
test
mov
mov
ret
add
inc
addb
mov
dec
adc
dec
loope
pop
sahf
xchg
xor
pushf
les
inc
cmp
cs
push
pop
add
je
push
push
mov
lods
add
outsb
in
xchg
insb
sub
cmp
lock
lds
mul
inc
es
jno
data16
push
sbbl
push
icebp
cmp
ja
ret
pop
ja
nop
sbb
dec
xor
js
imul
repnz
enter
imul
rcrb
sub
mov
push
insb
out
es
in
lcall
fmull
jns
pop
jle
xchg
int3
or
dec
push
xchg
cmp
xor
xchg
mov
out
outsb
and
dec
stos
mov
subb
dec
sti
push
ror
stc
into
ret
jne
stos
std
mov
mov
add
adcl
sti
cmp
jecxz
call
xor
arpl
sbb
fs
fs
icebp
add
cmpsl
test
imul
in
jns
cld
fwait
xor
test
adc
inc
repz
xchg
sbb
add
xor
jne
or
dec
ror
fldl
in
or
roll
test
jno
mov
mov
ds
bound
and
jmp
in
popf
insl
insb
adc
cmpsl
dec
mov
das
pop
pop
sbb
rcrl
push
movsl
inc
add
repnz
pcmpgtd
test
pop
pusha
lahf
fldl
mov
adc
jno
rcr
mov
fisttpl
cmp
imul
push
sarl
in
mov
adc
pop
ret
div
mov
pop
aas
cmp
mov
mov
mov
xorb
in
sub
mov
ljmp
hlt
adc
mov
pop
push
inc
arpl
add
fwait
xor
lret
or
sbb
stc
adc
fwait
adc
dec
pop
lods
arpl
enter
movsl
ja
mov
mov
mov
jmp
sbb
addr16
sahf
ret
daa
dec
scas
inc
dec
sbb
dec
xchg
jl
inc
inc
out
add
inc
lock
xchg
pop
or
mov
in
xor
push
jmp
lret
mov
loope
inc
push
sbb
fdivrs
xorl
xchg
in
mov
add
popf
fs
jmp
leave
fucomip
mov
mov
add
lahf
aam
hlt
push
fiadds
imul
mov
cmp
mov
cli
jge
ja
in
int
dec
pop
inc
push
std
jae
pushf
or
jb
jae
push
jmp
mov
jb
push
ret
jecxz
adc
jmpw
js
xor
ret
inc
in
or
addl
pop
add
fidivl
sbb
sbb
flds
movsb
lds
xchg
dec
mov
push
ficoml
cmp
push
rep
mov
xor
aas
xchg
cmpsb
jecxz
js
cmovne
sub
mov
adc
adc
iret
mov
adc
xor
xchg
or
push
and
xchg
inc
sbb
pushl
divb
out
mov
mov
and
decl
arpl
xor
iret
inc
imul
mov
jne
dec
and
xchg
roll
movsl
push
adc
lea
lret
cmp
push
push
in
jbe
stos
aad
std
sbb
jbe
es
sarl
cmp
scas
pop
xchg
push
daa
or
jle
push
inc
ss
lret
xchg
fcompl
ficoms
jbe
mov
sbbb
mov
mov
jp
jle
xor
lock
aam
inc
outsb
or
loopne
rcl
or
jmp
or
xchg
or
cmp
imul
or
orl
sbb
in
les
ficoms
movsl
pop
repz
pop
cwtl
jbe
test
and
xor
add
scas
aas
fcmovnbe
lea
fs
mov
popa
and
dec
sbb
rol
push
bound
cmp
mov
pop
dec
jge
movsl
sub
bound
dec
adc
int
sbb
pusha
cmp
pusha
test
fcoms
pop
repnz
test
or
fdivl
mov
rorb
cli
sbb
mov
cmp
mov
and
jae
jl
xchg
mov
hlt
jo
test
mov
bound
mov
xor
jmp
adc
sbb
lock
stos
push
mov
jae
shl
test
push
ret
pop
aad
adc
daa
arpl
mov
imul
jge
out
cmp
sub
mov
jmp
nop
inc
mov
cli
fdivr
cwtl
sub
lahf
ljmp
mov
call
jns
jae
sub
mov
mul
xchg
and
shll
mov
mov
call
and
cmpsl
loopne
push
dec
lcall
dec
ds
rcl
cmp
sahf
sbb
or
rol
iret
push
or
pop
aam
imul
in
das
sbb
pushf
das
and
hlt
pop
add
sbb
shl
ja
pop
push
movsl
xchg
movsl
sbb
cmp
andb
lods
pusha
inc
ss
out
push
mov
or
aaa
cld
pop
inc
add
aad
insb
in
imul
xchg
sub
push
or
cltd
dec
sub
divl
pop
enter
sub
lea
mov
loopne
scas
ja
sub
shll
les
push
cmp
imul
jae
xchg
mov
imul
ja
ss
icebp
fsts
and
and
xor
out
out
push
dec
icebp
pop
push
mov
adc
inc
ja
jl
push
mov
stc
test
lock
repz
insb
sbb
lods
push
scas
sbb
jmp
es
push
out
fwait
and
cmpsl
loop
xchg
pop
xorl
sub
imulb
cmp
push
sbb
loopne
inc
dec
lret
adc
xor
jne
pop
testb
or
lret
add
and
cmp
loope
scas
sub
jnp
roll
mov
cmp
lods
repnz
sbb
and
sub
mov
insl
sbb
xor
das
fs
js
mov
stc
test
incl
mov
in
gs
roll
fbstp
mov
push
sti
ret
fmuls
arpl
stos
inc
mov
hlt
cld
mov
popf
cmp
sbb
inc
out
mov
pop
orb
mov
inc
lahf
into
outsl
adc
dec
pop
call
sub
test
js
fstl
outsl
pop
push
jbe
and
lock
into
insb
add
xchg
xchg
adc
out
rcl
jnp
into
cld
cmpsb
add
adc
jo
in
lea
xchg
adcl
data16
mov
clc
ss
inc
cmp
pop
adc
cmpsl
fcmovnbe
adc
jns
imul
in
lahf
mov
push
fsts
xchg
xchg
int3
mov
push
loop
je
push
fildl
das
sbb
out
dec
lret
add
sub
aam
cmpsb
jnp
icebp
add
adc
popa
pop
jo
addr16
sbb
dec
sbbb
fildll
mov
jb
ss
fmul
fidivl
in
fwait
push
test
aad
pop
adc
or
sbbl
lods
fimuls
lea
or
repz
pop
sub
xchg
mov
jp
push
cmp
inc
sbb
inc
dec
and
shlb
mov
int3
inc
cmpsb
icebp
sbb
push
outsb
inc
cmp
out
repnz
or
addr16
pushf
cmpsb
cltd
sub
add
xor
loopne
daa
gs
add
mov
inc
rorb
scas
mov
rcr
loopne
rcrb
mov
idivb
fistpll
cld
daa
mov
dec
pop
iret
push
out
repnz
add
push
hlt
sbb
repnz
or
pop
bnd
jno
out
mov
push
add
mov
pop
xchg
cmpsl
in
push
lret
mov
jbe
dec
inc
push
stos
bound
push
or
ja
mov
xchg
loopne
imul
ss
or
jnp
aaa
sub
dec
add
mov
and
out
fcom
pop
pop
or
jle
xor
add
popf
mov
pop
std
hlt
ja
leave
stos
and
xchg
mov
test
iret
push
sub
outsl
pop
and
cmp
xchg
mov
iret
mov
icebp
sbb
jge
popa
inc
xchg
cmp
add
outsb
xchg
lret
iret
icebp
mov
fisttpl
mov
sub
sub
jmp
scas
dec
mov
movsb
sbb
test
cli
fsubl
into
subl
aas
jle
enter
sbbb
add
mov
xor
pop
bound
pop
push
adc
int
mov
pop
push
mov
stos
mov
rorl
or
cltd
andb
sahf
add
js
test
stc
adc
decl
jle
dec
mov
xchg
jbe
fwait
dec
imul
stos
push
push
ja
xchg
push
pop
push
push
sbb
shlb
xchg
lret
xchg
call
mov
mov
sub
jb
pop
push
std
lods
mov
dec
rclb
mov
fists
bound
cmp
xchg
fcoms
cmp
push
jge
cld
mov
loop
add
ljmp
in
or
cli
ss
sbb
add
add
aaa
shll
aas
lret
xor
fs
das
cltd
addr16
mov
xchg
popf
push
cmp
andl
scas
dec
sbb
pop
or
popa
es
and
movsb
icebp
orl
dec
ror
ret
sub
stos
inc
mov
es
xorb
sarl
adc
jo
lds
jg
stos
sbb
fsubrs
or
mov
loop
mov
dec
xchg
aas
mov
lcall
scas
sti
fimull
insb
mov
test
leave
xchg
stc
pop
cli
repz
popf
inc
fildl
sbb
scas
int
fists
repnz
subb
adc
or
xchg
jg
aad
sti
bound
xor
aam
movsl
pop
icebp
push
sub
xchg
pusha
mov
sub
and
paddusw
aaa
xor
cmp
push
int3
sahf
xchg
add
add
ja
xor
pop
jle
or
push
insb
pop
gs
sub
sub
inc
push
cmp
mov
out
inc
jne
lret
push
into
rcrl
mov
fs
xchg
inc
push
test
push
lret
push
pop
fwait
and
out
rep
pop
sub
adc
adc
loope
paddd
repnz
pop
lods
adc
int3
sbb
inc
dec
out
sub
adc
lds
push
out
mov
cmp
adc
or
adc
cltd
mov
or
mov
mov
mov
sahf
idivl
arpl
push
or
test
hlt
and
pusha
ret
pop
sub
cli
insb
std
sbb
cmc
pop
insb
arpl
jg
dec
std
sbb
mov
or
sar
or
jns
pop
aaa
add
mov
push
xchg
and
dec
cmp
xchg
push
int3
sti
and
fcmovnu
add
pop
cld
sbb
popf
popf
das
sahf
add
repz
inc
mov
jno
rcl
push
sar
xchg
push
mov
test
xor
std
push
aad
xchg
in
movsl
mov
bound
mov
adc
fs
or
inc
test
je
adc
jae
movsl
sbb
and
mov
rolb
and
int3
pop
dec
out
add
lds
loopne
push
add
mov
pop
mov
vpaddusw
mov
aam
and
jbe
mul
push
hlt
push
fldl
ret
push
cld
ds
hlt
push
xchg
cmp
inc
adc
push
mov
sbb
fldcw
div
pop
fs
inc
in
cmp
data16
das
in
popa
mov
jo
inc
in
or
lock
mov
push
adc
movsl
push
pop
cmp
mov
mov
cmp
jns
testl
jmp
inc
xchg
stc
imul
add
imul
daa
cmpl
xor
icebp
inc
hlt
rolb
aam
inc
inc
aaa
pop
lcall
or
dec
sub
out
les
mov
pop
jl
xchg
push
fldcw
cmp
flds
or
addr16
test
inc
into
add
and
cmc
ljmp
out
cmp
mov
adc
daa
push
scas
dec
mov
or
mov
out
mov
subl
mov
dec
jbe
mov
xlat
dec
cmp
mov
subl
cmp
imul
shlb
hlt
sub
pop
stc
rolb
xchg
fisttpll
push
or
loope
mov
insl
hlt
int
xchg
lock
dec
and
sti
cmpb
and
or
adcl
pusha
pop
push
dec
pop
dec
mov
sub
lods
movsb
xchg
jl
ds
aas
cmp
push
repnz
bound
pop
inc
mov
test
inc
fiaddl
jecxz
nop
adc
push
pop
pop
test
test
sub
xor
enter
loopne
fsts
mov
push
lock
dec
mov
scas
add
jmp
movsb
cmpsb
and
test
inc
and
test
imul
push
mov
inc
inc
aam
loop
or
mov
jno
stos
push
pop
out
xor
jge
push
dec
js
jbe
jo
and
xchg
xchg
cmp
cmp
dec
sub
popa
icebp
inc
cmp
pop
call
in
xor
push
imull
adc
mov
clc
cmp
jecxz
xor
pop
fisubrs
mov
icebp
rorb
test
es
sbb
add
test
inc
push
mov
cs
pop
jge
xor
or
and
repz
rcr
adc
jmp
jns
adc
lock
mov
push
mov
sti
adc
mov
push
lret
aam
mov
jns
jmp
mov
es
fisubl
jae
aaa
lret
sbb
inc
or
push
lock
sti
hlt
mov
lahf
ljmp
sbb
cmc
pushf
jecxz
dec
sbb
into
data16
adc
mov
cmpsl
das
test
adc
sbb
iret
imul
pushf
sbb
push
je
mov
daa
test
or
cmp
cmp
lcall
cli
lds
dec
ret
push
das
cld
int3
popa
dec
dec
je
push
dec
jle
mov
imul
cmp
mov
mov
lea
pcmpeqd
in
xor
lea
adc
shl
int
sahf
out
pop
sub
or
lret
dec
adc
mov
push
into
lods
sbb
lds
enter
cmp
jg
data16
xor
xlat
mov
mov
adc
pushf
sti
imul
nop
movsl
xchg
frstor
mov
flds
das
sbb
inc
imul
xchg
pop
andb
sbb
or
mov
cmp
pop
push
xchg
pop
cli
mov
and
mov
mov
sub
sub
test
sbb
push
inc
sbb
add
pop
cli
sbb
das
jmp
fs
push
or
cmpb
ds
sbb
fnsetpm(287
repz
push
sbb
fsubrs
mov
mov
xor
sahf
repz
rcrb
sahf
inc
jo
cmp
lock
and
push
scas
ret
sub
jne
and
gs
pop
or
or
aad
fidivl
mov
faddl
in
dec
lret
out
cmp
mov
loope
ret
mov
fnstenv
adc
lods
lock
shl
push
aaa
xchg
push
add
les
pushl
lea
arpl
imul
xchg
jl
enter
cmpsb
incl
adc
sarb
cld
jnp
add
cmp
and
jnp
repz
imul
jecxz
or
shll
stos
sbb
mov
jmp
ljmp
je
popa
mov
rorb
sbb
cli
pop
in
repz
sbb
cmpsl
cmpsb
adc
iret
out
sub
jo
sarl
sub
insl
scas
sub
xchg
mov
mov
lret
enter
popf
in
xchg
mov
sub
sbbl
push
xchg
pextrw
adcl
stos
cmp
fsubrs
xchg
ret
inc
mov
test
jnp
rorb
popa
dec
adc
jo
cmp
sub
jg
push
int
cmpsb
and
add
fwait
mov
or
int3
je
mov
pop
int3
adc
orl
and
roll
lret
xor
mov
xor
jnp
dec
std
and
xchg
mov
dec
or
adc
mov
fnstcw
nop
xchg
xor
jp
fistpl
mov
sti
pop
jns
jmp
imul
pop
jo
and
inc
jo
mov
and
pop
cltd
adc
sbb
div
adc
mov
lods
pop
pop
xor
int3
mov
jae
cli
jbe
adc
push
mov
jae
cmpsl
push
sbb
js
aaa
add
add
add
test
pusha
cmovs
ljmp
je
add
xchg
mov
das
shl
je
mov
cmp
int
push
mov
ret
aad
sub
mov
ljmp
push
and
add
and
in
mov
pusha
stos
inc
mov
jnp
inc
cs
cmpl
mov
je
jbe
inc
or
out
pop
mov
mov
xor
stc
sbb
inc
aam
jns
les
popf
mov
xchg
nop
jno
sbb
xor
jo
rolb
es
mov
lret
mov
scas
xor
mov
shrl
std
mov
sub
movsb
pusha
or
add
inc
aad
loope
and
stos
xlat
sub
dec
or
lods
xor
dec
icebp
lock
xor
xor
adc
scas
iret
mov
xchg
test
and
negl
testl
jle
xchg
cmp
cmpl
movsb
inc
icebp
pop
imul
jp,pt
sbb
mov
sbb
mov
mov
cmp
clc
cli
push
push
in
pushf
data16
lods
ja
pushf
mov
jmp
inc
inc
mov
jb
xchg
movsl
aad
scas
xchg
ljmp
and
hlt
mov
jne
add
divb
lret
stc
mov
fldl
mov
mov
dec
shll
dec
pop
mov
mov
xor
xchg
fstpt
pop
ds
mov
aad
mov
xchg
leave
mov
sahf
sub
shr
cmp
mov
das
sub
mov
inc
dec
hlt
in
mov
jg
dec
adc
or
test
int
jmp
loopne
sbb
adcb
loope
push
js
fnsave
pop
es
negl
jecxz
dec
loope
ret
jecxz
insl
sub
data16
xchg
mov
sub
push
insl
mov
inc
nop
sbb
inc
fimull
pop
ljmp
pop
inc
pushf
hlt
cld
or
daa
sub
mov
pop
mov
sarb
push
add
add
jbe
lods
add
psubsb
inc
inc
popf
push
cwtl
ret
inc
ret
lock
dec
loop
xor
add
or
xchg
sbb
sub
fstpt
dec
fdiv
pop
mov
scas
lea
inc
popa
pop
in
das
sbb
sub
push
aad
bound
xchg
cmpsb
mov
or
cmp
push
or
cmc
mov
xor
loope
ljmp
in
test
jg
and
out
aad
jno
jnp
push
add
mov
sbb
inc
mov
fisttps
aas
cmp
add
xchg
adc
inc
mov
inc
imul
rclb
xor
aad
les
popa
push
notb
xchg
aaa
mov
mov
cwtl
xor
fwait
jno
pop
adc
cli
push
int3
addl
andb
mov
xchg
loop
push
adc
stc
mov
jae
and
loop
add
and
or
jecxz
mov
es
pushf
out
adc
in
inc
xchg
mov
xor
mov
xchg
pushf
mov
mov
xchg
aaa
push
xchg
repnz
out
xchg
adc
adc
test
xchg
jne
jns
dec
xor
int
in
mov
and
push
pop
dec
xchg
stc
add
xlat
cmpb
int3
push
mov
mov
jae
or
aaa
dec
xchg
jno
call
and
jnp
dec
sbb
push
movsb
xchg
inc
and
fyl2x
insl
arpl
jae
in
mov
cmp
mov
jle
rol
xor
jne
mov
push
or
push
jnp
xchg
fdivrl
adc
pop
or
fwait
xchg
jp
dec
fwait
push
aas
lods
mov
outsb
adc
mov
idivb
add
mov
out
mov
mov
xor
sub
cmc
jg
mov
sbb
mov
mov
cmc
mov
addl
sbbb
mov
sbb
pop
sbb
hlt
push
gs
push
lret
pushf
scas
fnstenv
dec
push
jb
jecxz
loop
mov
cmpl
sti
ret
lret
push
mov
fnsave
repz
inc
outsb
rcl
fwait
sub
and
andl
shrb
orl
ficompl
call
mov
add
lods
jae
sub
and
xchg
xor
hlt
mov
aad
adc
push
dec
insb
inc
fmul
inc
sub
jb
add
int3
fsubs
pop
cmp
dec
mov
jns
adcb
flds
mov
mov
xchg
mov
pusha
sub
cmp
jno
cmp
mov
bswap
adc
insl
jmp
subb
movsb
sbb
mov
pop
mov
mov
scas
in
xcrypt-cfb
cmpsl
and
je
or
pop
pop
mov
xor
es
aam
mov
mov
adcl
add
popa
sbb
movsb
cltd
xchg
add
lret
push
push
aad
lock
adc
pusha
jp
je
sub
xlat
and
xor
xor
mov
mov
pop
pusha
orl
cmpsb
std
hlt
pop
mov
shrl
inc
jmp
xor
push
and
lods
pop
sahf
loope
fsts
ffreep
les
jno
add
adc
fs
enter
xchg
pop
stc
adc
xor
jne
push
push
fistpll
push
lods
jmp
ret
loopne
outsb
xor
rorb
mov
test
orb
add
std
hlt
lods
in
daa
pop
pop
mov
stos
jle
adc
xor
add
inc
pop
jno
leave
jmp
push
xor
out
xchg
jmp
notb
leave
mov
mov
or
int3
loope
mov
cmc
clc
leave
clc
sbb
jg
divb
jae
jns
ljmp
ljmp
pop
and
mov
lds
mov
sub
mov
orb
mov
out
adc
cwtl
adc
add
mov
or
mov
inc
aaa
addr16
popl
cmp
stos
cltd
mov
ss
inc
xchg
cli
popa
mov
adc
sub
lock
cmp
insb
loopne
cmp
loope
fiaddl
push
jge
movsl
loope
mov
push
sub
aam
mov
in
jne
ret
and
cmc
mov
int3
push
push
adc
push
mov
mov
sahf
sbb
mov
cwtl
or
scas
imul
or
cli
fdivrs
adc
cmc
mov
mov
and
cli
arpl
in
adc
mov
into
jp
pushf
cmpsb
ficomps
daa
xor
rorb
shrb
cmpsb
into
hlt
cmc
int
cmp
pop
outsb
mov
imul
lret
test
clc
or
cmp
xlat
dec
jp
divb
pop
xchg
mov
fwait
jp
es
popa
dec
repnz
xor
fstl
pop
xchg
repnz
mov
ja
std
xchg
mov
insl
push
rcll
push
pop
imull
mov
xor
adc
or
imul
mov
in
ret
dec
in
sub
movsl
lahf
loop
jl
clc
cmp
inc
inc
addr16
xchg
mov
std
jp
insl
ss
or
ret
xor
inc
or
xchg
mov
and
add
roll
lahf
push
sbb
mov
pop
xor
std
loopne
add
movsl
ds
cmp
pop
cmp
adc
fwait
and
stc
repnz
mov
sahf
sbbb
inc
pusha
js
dec
xorb
leave
and
pushl
sub
pushf
loopne
jl
imul
outsl
in
jnp
mov
loope,pt
mov
xor
cmp
mov
xor
enter
out
pop
or
cmp
dec
in
jbe
pop
aad
roll
add
stos
jo
cmp
mov
scas
jb
push
cld
leave
cmp
inc
idivb
cmp
daa
loop
in
test
mov
pop
insb
lods
or
mov
cmp
mov
or
mov
popf
pop
push
out
push
push
mov
push
xor
int
out
pop
cld
pusha
cmp
adc
sti
cmp
sti
cli
les
fwait
pusha
test
add
fidivl
mov
pop
xchg
lods
push
mov
jne
sub
cwtl
push
push
stos
das
movsl
lahf
faddl
scas
sub
bound
sub
dec
jle
push
mov
clc
jo
loopne
aad
xor
in
fildl
stos
vhsubpd
mov
sub
xchg
adc
int3
inc
aas
dec
sbb
xchg
lock
mov
seta
cmp
jg
ficomps
mov
imul
pop
stos
andl
imul
cmp
push
sbb
xchg
or
mov
push
iret
or
and
or
cmp
shll
enter
scas
inc
xchg
rcr
sub
daa
jae
sahf
int3
test
call
sub
sub
sub
loop
icebp
pop
mov
add
lcall
stos
adc
xchg
mov
and
push
imul
push
cmp
cmp
insb
sbb
ret
in
arpl
bound
push
out
shlb
inc
sub
pop
out
and
push
jb
jns
out
js
lret
popf
pop
pop
mov
mov
pop
xchg
fdivl
std
jne
sbb
std
sbbb
addr16
daa
xor
push
inc
es
adc
je
inc
push
mov
fucomi
xchg
push
mov
mov
mov
dec
push
ljmp
iret
scas
mov
arpl
mov
sub
mov
xchg
lods
popa
pop
mov
jecxz
lea
jl
int
icebp
sti
lock
int3
inc
dec
push
and
fwait
sti
push
insl
lods
add
jmp
mov
or
mov
enter
cmc
mov
movsl
cmpsb
adcb
mov
or
mov
mov
cmc
je
mov
mov
push
ljmp
mov
shlb
repz
push
jmp
inc
lret
lahf
lret
lea
adc
xchg
or
mov
dec
and
mov
mov
in
mov
and
shll
fdivr
inc
jmp
jno
mov
pop
sub
pop
or
sub
or
adc
aas
subl
loope
stc
mov
cld
xchg
daa
test
mov
shrl
and
adc
mov
mov
and
repnz
sub
icebp
mov
xor
aam
pusha
insb
in
cmp
cltd
cmpsb
xchg
dec
sub
cmp
mov
push
arpl
daa
aam
pushf
pop
sub
or
repnz
inc
pop
or
div
aaa
or
test
mov
fnstcw
rcrl
loope
inc
dec
loope
adc
in
int3
pop
push
and
jae
pop
aaa
in
imul
xor
sti
sti
inc
add
sahf
dec
aaa
loope
sbb
push
fstpl
mov
lods
jmp
xor
sub
jb
test
sub
cmpb
mov
cwtl
mov
xor
call
add
and
pop
or
insl
xchg
pop
pop
sbb
jle
stc
jmp
fdivr
shrl
ret
lcall
xchg
loop
pop
fs
pop
dec
push
sbb
mov
in
loop
nop
pop
cmp
sbb
shrl
adc
sbb
xor
cs
roll
pop
movsl
jle
mov
pop
test
int
jp
mov
in
outsl
mov
and
and
int3
jb
add
out
cmpsl
cltd
notb
gs
cs
fdivrs
in
mov
xchg
outsl
xchg
addr16
adc
outsb
pop
push
fs
mov
mov
pop
je
cmovbe
mov
cwtl
xchg
sti
es
pusha
xor
add
stc
ss
or
sbb
xchg
mov
lahf
jo
sbb
pop
sub
ljmp
mov
push
add
fdivr
add
shrb
push
pop
push
sti
pop
aaa
xchg
cmp
add
mov
xchg
sub
or
aam
rcrl
dec
mov
inc
je
inc
pop
jle
jbe
in
inc
adc
mov
and
loope
sub
das
xor
push
xchg
stos
je
lods
mov
les
test
outsl
inc
add
jp
xchg
fnstsw
lret
dec
ja
ljmp
mov
test
mov
pop
xor
xchg
jmp
pop
fimull
push
mov
loopne
mov
ja
add
out
outsl
ss
mov
or
ret
in
std
scas
push
push
movsb
addr16
fidivl
jbe
lahf
push
rolb
outsl
and
das
or
es
mov
int
addr16
adc
in
shl
and
adc
stos
outsl
dec
pop
leave
mov
jb
pop
movsl
jle
out
daa
adc
jns
mov
cltd
dec
sbb
enter
out
pop
outsl
outsl
push
cmp
dec
js
fwait
mov
mov
outsb
cmpl
loopne
mov
stos
loop
imul
enter
insl
loope
xchg
sbb
xor
add
push
pop
iret
lods
andl
shlb
mov
add
cs
pop
sub
mov
or
sub
sbb
std
out
arpl
test
or
addr16
cmpsl
jmp
in
xchg
mov
cmp
negl
mov
cmp
jp
mov
test
xor
or
pop
jle
out
add
aas
ss
cmc
imul
mov
add
jae
push
out
out
add
push
push
sub
mov
dec
pop
lds
jle
mov
in
jbe
push
xchg
dec
and
push
sbb
loope
pop
or
rorl
sti
inc
insb
xchg
enter
xchg
nop
arpl
loop
pop
inc
fsubl
dec
mov
fsubrs
mov
push
cli
mov
jmp
pop
in
lcall
sub
sub
cs
mov
push
aas
pop
push
sti
push
pop
scas
pushf
fstps
movd
inc
xor
mov
movsl
cmpsl
mov
cmp
rcll
dec
xor
add
cld
jns
nopl
ficoml
push
incl
sbb
cmp
mov
aaa
xchg
sbb
inc
bound
mov
cld
aaa
shr
jae
jb
sub
xchg
mov
pop
ja
inc
adc
xor
rcll
lret
mov
adc
pop
movsb
adc
add
fbld
sub
mov
sbb
inc
insl
fisttpll
jge
push
xor
mov
addb
pushf
or
shr
mov
pop
push
stc
push
inc
inc
pusha
call
aaa
inc
jb
call
xchg
mov
imul
and
and
lea
aad
rclb
or
or
adc
and
xor
test
fstpl
adc
sub
imul
lcall
js
pop
je
mov
adcl
stos
cmpsb
mov
and
in
inc
lods
xchg
lock
cwtl
mov
nop
push
sti
adc
mov
and
mov
and
loop
sahf
xor
ljmp
test
fucom
mov
push
ret
gs
mov
dec
mov
out
stos
jg
push
mov
add
aad
into
cltd
inc
lea
dec
and
pop
jmp
pxor
bswap
jmp
mov
xchg
or
or
jecxz
das
mov
es
push
int3
daa
call
in
sub
and
test
jnp
jl
popa
push
fsubl
scas
add
push
nop
imul
int3
jg
div
pop
push
daa
pop
jnp
sbb
fs
adc
cmpsl
pop
arpl
mov
pop
bound
pop
mov
hlt
ja
popa
push
add
xchg
mov
iret
aas
js
xor
pop
or
psrlw
and
in
cmp
push
scas
jge
mov
push
sbb
mov
cmp
addr16
ds
mov
icebp
xor
dec
or
shl
call
jl
das
imul
sahf
sub
data16
xor
js
into
sbb
rcrl
rcrb
mov
shl
icebp
lret
mov
push
or
jnp
mov
lahf
adc
cmp
ret
jae
pop
enter
push
mov
adc
stos
rorl
pop
fnsave
out
aaa
jp
imul
clc
add
sbb
sbb
lahf
ja
and
daa
xor
sub
aas
cld
pop
cmc
push
mov
jmp
jmp
repnz
je
cmp
repnz
fsubrs
ret
test
pop
rcrb
stos
aas
mov
mov
in
test
inc
sbb
rclb
pop
sub
stc
push
fsubr
push
iret
mov
test
xor
dec
or
inc
adc
lcall
jno
xadd
sbb
insb
adc
imul
enter
sahf
jns
addr16
sub
xor
adc
fwait
jle
xor
out
nop
or
loope
dec
ficoml
ljmp
dec
dec
or
pop
cld
ret
cld
pop
jmp
sub
xchg
jg
xchg
mov
lcall
sub
mov
mov
inc
and
xchg
lods
bound
mov
inc
jne
in
dec
add
addr16
dec
cmpsl
pop
and
or
pop
sub
adc
inc
in
inc
sbb
sahf
inc
out
xchg
in
jl
xchg
push
or
xor
add
or
xor
lock
std
in
cmp
repz
pop
cmp
and
pop
lods
and
cmp
stos
mov
mov
cmpxchg
fstps
test
sub
mov
push
in
dec
int
mov
adc
inc
enter
clc
jne
inc
xchg
xchg
mov
add
cmp
or
loop
mov
es
mov
sub
into
enter
jle
push
xchg
add
mov
hlt
cwtl
sub
push
mov
mov
add
mov
adc
pop
xor
int3
insb
add
push
inc
xlat
shr
mov
imul
movsl
pushf
bound
lea
ret
inc
cmpsl
mov
pop
cmc
push
cld
mov
mov
pop
pop
mov
stos
movsb
sub
lea
inc
lods
stos
or
mov
add
xchg
fs
mov
aad
cli
dec
push
jbe
dec
je
sarl
push
mov
add
or
lcall
xor
fadd
jg
into
sbb
and
cmc
cmc
mov
sub
add
gs
sub
jno
adc
pop
cmpsb
sahf
adc
pop
and
sbb
aad
arpl
add
and
loopne
nop
jp
ret
pop
push
lcall
rep
dec
loope
call
imul
fs
inc
mov
pop
cwtl
fs
das
into
add
sub
adc
pop
ja
or
mov
flds
cmp
repz
dec
adc
add
dec
jg
rcr
cltd
adc
imul
mov
jo
shrb
les
jae
pop
hlt
outsl
push
sbb
std
not
adcb
fisttpll
das
mov
push
lret
sbb
inc
out
inc
xor
fldcw
inc
aad
out
rcrl
xchg
inc
add
std
push
xor
aam
push
mov
jmp
or
sbb
ret
push
pop
fsubrl
add
movsb
adc
adc
enter
adc
test
xor
shr
cmp
pop
cltd
mov
loop
mov
rolb
out
es
adcl
add
pop
add
inc
jnp
roll
push
into
sub
dec
leave
adc
adc
aad
sbb
pop
xchg
outsl
fmul
call
es
cld
mov
push
loopne
leave
stos
shl
push
cmp
push
xchg
mov
pop
push
leave
mov
jl
sbbl
push
movsb
call
adc
or
mov
jmp
iret
mov
xchg
push
mov
repz
pushf
xor
loop
mov
mov
push
out
jns
lret
jbe
scas
clc
jnp
cltd
enter
ret
push
pop
and
sub
add
aaa
or
sarb
mov
mov
in
mov
push
or
xchg
loope
out
clc
loope
es
outsb
xchg
enter
sbb
xchg
dec
xchg
xor
mov
cmpsl
or
or
sbb
imul
dec
pop
pusha
sahf
jge
clc
popa
mov
inc
sti
adc
jmp
add
mov
xorl
gs
repz
clts
mulb
cmpsl
in
inc
clc
cwtl
out
pop
imul
mov
loopne
adc
xchg
dec
div
cmpsb
push
pop
dec
js
mov
cmpsl
add
mov
hlt
test
sub
je
dec
xor
pop
int3
sbb
mov
daa
push
jb
pop
in
out
aad
inc
inc
lcall
adc
push
in
mov
jne
cmp
jp
sbb
cmp
in
enter
inc
push
test
movsb
jecxz
push
fstpl
scas
cwtl
sti
aas
sub
xlat
repz
cmp
pop
in
popa
test
dec
push
jp
mov
call
std
adcb
jo
negb
xchg
xchg
xor
aas
or
dec
sbb
pusha
jnp
and
nop
mov
sti
pop
lret
ds
sahf
das
and
add
hlt
mov
std
clc
mov
decb
push
shlb
lcall
pop
fdivr
mov
frstor
outsb
scas
mov
or
adc
mov
test
enter
iret
and
xchg
mov
arpl
inc
enter
inc
cmp
fisttpll
test
mov
cmc
int3
jae
push
jo
cli
jbe
adc
vcvtdq2pd
mov
into
dec
jg
punpcklwd
mov
bound
shll
jno
fwait
clc
mov
out
cmp
sub
sahf
mov
dec
ret
nop
mov
rcll
sbb
sub
popf
mov
pop
aam
sbb
mov
sub
pop
mov
dec
fldenv
mov
divb
lcall
test
xchg
enter
imul
xchg
lds
sbb
push
cmc
leave
ret
xchg
ret
in
aam
jns
pop
lods
inc
push
jnp
push
clc
jg
pushf
cs
mov
loop
aam
fldl
in
stc
insl
push
ja
outsl
ljmp
mov
sbb
mov
popf
ss
fistpl
mov
inc
stos
pusha
sub
sbb
dec
mov
jb
roll
out
inc
jmp
xchg
inc
push
add
je
and
mov
jp
fcoms
and
rcll
lahf
xchg
lahf
mov
test
addr16
cmp
stc
lcall
lcall
rolb
push
rol
dec
fisttpl
pop
sub
ror
jnp
ret
sbb
div
xlat
xchg
inc
clc
push
rcrl
lock
std
loopne
xor
sub
shll
or
out
sbb
push
into
div
sub
mov
add
mov
mov
mov
scas
jne
sbb
jp
fcomps
mov
pushf
or
cmc
jbe
arpl
leave
mov
mov
addl
repnz
add
lea
iret
decb
jp
fsubl
push
jb
adc
out
sub
jo
and
pop
mov
xchg
ficoml
xchg
fwait
sbb
test
mov
sub
bnd
nop
stc
ret
mov
cmp
insl
or
mov
mov
scas
cltd
adc
push
shl
ljmp
pop
jl
fcomps
xchg
cmpl
and
fs
mov
jmp
in
outsl
sbb
rcrb
mov
lea
dec
int
mov
rcrb
repz
mov
out
pop
pop
cli
das
out
js
adc
aas
shlb
mov
dec
lds
cmp
mov
dec
pop
add
fcoms
mov
loop
inc
in
dec
or
divb
mov
fnsave
mov
loope
cld
adc
lahf
icebp
and
sbb
ret
insl
stos
or
sub
inc
jg
data16
hlt
inc
or
adc
js
inc
sbb
jge
dec
jbe
xchg
repz
adc
and
xchg
push
push
fcomps
sbb
inc
pop
adc
mov
lcall
and
or
push
popa
or
sbb
jge
inc
insl
pop
stos
jae
pop
arpl
popf
xor
cli
xor
dec
dec
out
push
inc
and
lock
enter
movsl
fwait
scas
or
and
and
test
std
xorb
jecxz
hlt
sbb
aam
xorb
addr16
out
ficoms
into
into
pop
mov
xchg
sbb
jnp
sub
dec
cmpsl
push
mov
push
pop
pop
lds
sbb
frstor
or
inc
dec
pop
loopne
xchg
scas
xchg
and
xorb
add
sub
pop
movsl
dec
xchg
cmc
pop
imul
in
jecxz
rorb
xor
jbe
stos
add
les
pop
xchg
cmp
pop
inc
out
cmpb
inc
fadds
movsl
cmp
push
pop
xchg
mov
loope
lods
rorb
imul
sahf
or
mov
push
fsubrl
xor
sahf
cli
inc
arpl
jnp
push
sarl
mov
xor
fwait
inc
lret
cmp
xor
xchg
mov
inc
pop
push
xchg
mov
sub
jne
jmp
cmp
pop
movsl
clc
bound
pop
xlat
mov
das
iret
dec
insl
fildl
call
movsb
inc
outsl
fdivl
xchg
loope
test
and
cmpsl
bound
jns
mov
ds
adcb
movsb
das
mov
scas
mov
lret
or
pop
adc
stc
lahf
addr16
sbb
lss
cs
stc
cmp
fstpt
mov
sbb
insl
add
lock
js
xchg
or
inc
lcall
jne
insb
negb
mov
add
cwtl
push
mov
inc
adc
pop
mov
or
inc
jns
mov
jnp
sahf
test
mov
pop
sahf
out
push
xor
fwait
aaa
andl
pop
jmp
roll
xorl
push
arpl
mov
push
jmp
sti
xlat
gs
repz
ret
shll
fldl
or
lods
inc
cmp
sub
fimuls
jne
jge
adc
mov
fbld
mov
ret
les
push
cmpsb
cmp
cmp
push
add
repz
add
jns
jecxz
cmp
mov
clc
nop
aad
in
jno
repnz
adc
dec
data16
mov
and
xor
mov
mov
popf
stc
jo
xor
inc
sub
dec
jns
in
gs
idivb
mov
std
or
cmp
mov
push
xor
xlat
sbb
pop
rcl
jbe
ror
in
add
inc
in
addl
sbb
push
xchg
sbb
daa
cwtl
mov
incb
mull
xchg
or
movsb
mov
sahf
inc
pop
mov
dec
incl
int3
and
push
in
sahf
jmp
mov
pop
sub
push
jmp
pop
jae
lahf
dec
out
pushf
jns
sub
cwtl
aaa
nop
and
cmpsl
nop
test
jbe
dec
in
mov
popf
mov
xor
mov
adc
ret
push
add
add
sub
xlat
sti
jne
push
jo
pop
sarb
dec
fcoml
cmp
int
inc
cmp
scas
inc
mov
daa
fcoms
pusha
movsl
addr16
test
loop
or
mov
scas
mov
xor
mov
popa
es
xlat
in
dec
shl
push
hlt
nop
add
inc
dec
nop
xchg
or
mov
pop
aas
push
add
in
test
fdivr
setno
ja
les
mov
orl
loop
popa
pop
or
inc
iret
and
jb
fildll
mov
sahf
sub
pop
nop
push
iret
mov
or
pop
pop
data16
mov
or
mov
pop
repz
and
cmc
jge
ret
xchg
je
fnstcw
add
push
dec
add
dec
js
idiv
fstpl
inc
clc
adc
or
bound
jb
xchg
mov
lock
shl
and
mov
xchg
sub
cmc
push
int3
add
dec
add
orl
movsb
in
out
sbb
sub
xor
out
cs
aam
mov
pop
cmp
add
or
je
loop
repz
lahf
scas
pushf
outsl
inc
fnstcw
pop
in
dec
inc
scas
repz
ja
and
mov
xor
outsb
sbb
sbb
test
enter
pop
enter
or
mov
pop
mov
xor
mov
adc
clc
std
and
popf
mov
sbb
mov
scas
xchg
mov
xchg
mov
das
dec
insl
inc
imulb
xor
jmp
les
repz
sti
imul
repnz
sarb
mov
push
jmp
mov
jae
setl
ljmp
data16
or
mov
inc
push
dec
adc
lods
mov
out
add
or
cmp
cli
inc
mov
xchg
test
and
inc
mov
scas
jbe
pushf
dec
adc
cs
fsubrl
les
lahf
out
inc
push
jns
hlt
mov
aad
cmp
std
cmp
sub
ljmp
fcomps
push
test
hlt
std
push
cmp
dec
pop
mov
adc
sbb
sbb
sbb
shrl
into
fadds
in
jge
pop
inc
in
test
movsb
out
xlat
ja
adc
cmpsl
das
mov
mov
jns
inc
jo
pop
popa
adc
jle
hlt
lcall
mov
push
movsl
mov
cltd
mov
add
add
xchg
and
mov
dec
adc
push
addr16
sbb
mov
jmp
inc
pop
int3
sarl
jp
imul
push
adc
dec
jmp
pop
gs
out
lret
ljmp
xor
outsb
lock
pusha
in
cld
mov
pop
sbb
jae
cs
inc
ror
aad
repnz
aad
sub
dec
fsubr
imul
aas
push
mov
fs
shl
push
add
jle
cltd
je
cwtl
xor
je
roll
call
mov
cmpsb
push
cli
jl
cmp
and
xchg
dec
divl
in
clc
in
push
lahf
jmp
lock
adc
arpl
jb
sub
fimuls
shll
dec
sbb
or
int
enter
sbb
daa
ds
dec
cmp
xchg
and
pop
and
insb
jmp
shlb
int3
pop
inc
sbb
ss
push
sub
fdivrs
test
ret
jle
jg
sbb
jo
dec
mov
ret
aaa
shll
mov
cmp
mov
stos
jecxz
sbb
rcr
pop
ret
jns
dec
out
outsb
dec
lahf
inc
xchg
jns
adc
adc
jg
xchg
mov
stos
fsubrs
sahf
add
into
jbe
popf
xor
insb
insl
mulb
cmovae
stos
ret
adc
sub
in
mov
push
sub
jae
sbb
fldcw
push
aad
sbb
shl
fisubs
or
in
jmp
in
into
sahf
shll
push
and
add
pop
xchg
push
inc
mov
lahf
jo
in
adc
xor
out
xchg
repz
xchg
cli
dec
xchg
pop
pop
call
cmp
cld
clc
ss
push
mov
push
les
negb
rcll
clc
sbbl
mov
jg
rclb
xor
popl
adcl
jecxz
pop
out
popa
int3
loope
inc
dec
add
cmp
outsl
cmpsl
stos
mov
mov
push
clc
rep
inc
lock
jbe
out
adc
add
pop
and
popa
and
mov
add
jnp
dec
imul
out
xor
ret
scas
rolb
inc
xchg
push
aam
sub
sbb
push
push
xor
mov
mov
sbb
adc
inc
adc
imul
insb
xor
jecxz
andl
cmpsb
push
pop
aad
dec
imul
mov
dec
push
fcmovbe
inc
enter
repnz
lock
pop
ret
dec
cmp
dec
stos
fstl
pop
jbe
bound
shll
fisubl
out
xchg
fsubrp
icebp
jne
pusha
lahf
nop
cmp
rolb
xchg
popa
sub
mov
sbb
xchg
scas
pop
stos
aam
das
add
ret
inc
rcll
cmc
pshufw
xchg
adc
mov
sbb
fwait
lock
imul
mov
lcall
imul
cmp
xchg
mov
mov
mov
sub
push
mov
add
lcall
adc
adc
inc
fs
dec
mov
and
cmp
arpl
push
xor
adc
dec
ljmp
mov
andb
mov
idivl
sbb
xchg
cmp
xor
xor
cmp
ljmp
mov
lods
mov
or
push
push
sub
sbb
xor
inc
mov
in
fisubs
pop
mov
aad
mov
sbb
cwtl
ret
out
aad
dec
fiaddl
pop
das
xor
ffree
xor
pop
mov
fwait
ja
popf
lock
xchg
mov
push
cmpsl
aad
and
jp
andl
rorl
aaa
pop
or
scas
repnz
emms
push
je
cmp
imul
out
mov
mov
test
mov
or
sub
call
add
mov
cmpsb
enter
or
cmp
fdivs
sahf
rcrl
dec
addl
push
xor
je
jle
mov
mov
inc
gs
sbb
dec
das
add
shrl
les
fwait
shlb
mov
pop
jnp
lahf
xchg
insl
sti
in
add
inc
test
not
stc
fsubrl
mov
scas
adc
aad
imul
call
rorb
cld
adc
pop
loopne
pop
in
pusha
cmpsb
mov
aad
mov
push
test
add
leave
mov
jno
xchg
push
test
mov
jp
mov
mov
dec
or
pop
push
push
lds
pop
jmp
insb
push
mov
lcall
push
xor
stc
adc
dec
push
lock
xlat
mov
mov
movsl
je
adc
and
cld
fisubs
insb
test
mov
cmp
mov
sub
xchg
test
xor
mov
inc
jecxz
fmull
addr16
repnz
enter
add
xchg
dec
cmpxchg
add
or
xchg
mov
sub
mov
int3
hlt
insl
cmp
xchg
movsl
or
ss
imul
movsb
cmp
push
mov
ret
insl
fs
rol
fidivl
gs
cmp
aas
jp
loopne
inc
mov
dec
adc
out
pop
subl
or
ja
jbe
jge
sub
es
aaa
out
call
or
push
or
push
idivb
or
mov
lret
mov
xchg
lahf
pop
out
dec
pushf
mov
dec
dec
ret
mov
push
outsb
cltd
add
test
sub
scas
call
movsl
roll
push
inc
sub
sti
xchg
xchg
push
loope
inc
std
sahf
jp
idiv
jge
stos
pushf
add
movsl
add
push
shll
dec
jp
add
out
xchg
xor
jns
ljmp
jns
sti
les
cwtl
popf
mov
mov
sub
and
or
cmp
and
cmp
and
in
adc
dec
cmp
mov
data16
mov
pop
sub
hlt
add
lods
outsb
subl
add
sub
cmp
mov
sti
cmc
inc
gs
sub
sbbl
aad
adc
push
testb
mov
data16
roll
mov
fisubl
lods
fldl
fbstp
call
mov
icebp
mov
jae
sbb
pop
stos
xchg
andl
and
ljmp
repnz
and
movsb
mov
into
pushf
cmp
icebp
loope
movsl
mov
dec
int3
pop
arpl
scas
int3
in
xchg
rcrb
daa
inc
or
sbbb
mov
into
dec
fs
imul
jge
pop
cmpsl
inc
cmp
std
push
sub
push
mov
add
outsl
mov
sahf
das
pop
fwait
sbb
mov
jbe
and
nop
cmp
jb
in
aam
dec
and
or
scas
das
and
pop
int3
sbb
jle
sbb
addl
js
mov
mov
jo
push
jp
mov
inc
sub
call
add
lret
lods
cli
sets
add
cmp
jge
xchg
inc
test
mov
or
pop
imul
ret
cmpsl
insl
addl
add
jae
mov
stos
aas
xchg
jmp
fdivs
decl
sub
arpl
mov
and
dec
sbb
push
cltd
test
cwtl
ss
cmp
pop
sti
sahf
mov
pop
ret
xor
cmc
rcrb
hlt
mov
xor
mov
sbb
pushf
sarb
bound
sbb
dec
adc
shll
out
push
ja
add
jl
push
and
xor
subb
pop
fs
pop
add
sub
call
jns
out
pusha
mov
roll
add
bound
lods
cs
dec
mov
xchg
dec
iret
inc
dec
ljmp
scas
mov
dec
movsb
stc
das
loopne
daa
push
rorl
push
loopne
int3
mov
cwtl
xchg
popf
dec
push
xchg
shl
mov
loope
rclb
cmp
fwait
ds
fwait
sti
repnz
and
xchg
cmp
jne
movsb
xor
mov
and
xor
mov
daa
out
mov
sub
pushw
jae
sahf
cs
or
or
lods
inc
mov
mov
outsb
fdivl
movsb
and
les
push
out
hlt
or
insl
cwtl
and
inc
movsb
cmc
push
subb
int
cmc
pop
popa
daa
pop
push
adcb
xchg
xor
es
add
shlb
inc
fdivl
repnz
cmp
pop
test
sub
add
xor
popf
ljmp
addl
jns
ja
imul
repz
dec
iret
inc
add
mov
rorb
rol
test
popf
mov
cmp
aam
dec
mov
pop
test
pop
stc
movsb
and
add
jp
mov
mov
in
mov
or
cmpb
dec
cmp
push
bound
ret
push
push
cmp
mov
dec
int3
push
mov
test
xor
or
jmp
or
iret
pop
and
dec
cltd
cmc
jbe
jle
dec
pop
clc
out
lcall
push
call
out
gs
fcmovnu
cwtl
int3
jbe
hlt
mov
lret
iret
imul
jno
jge
pop
movsl
push
pushf
scas
mov
mov
aad
sahf
filds
push
cwtl
jl
xor
push
cmpsl
mov
xlat
rolb
cmp
pop
jae
mov
sbb
sbb
sbbb
sti
jl
xor
mov
sbb
xchg
cltd
dec
je
sub
aaa
push
pop
fwait
mov
pop
stos
push
stos
sbb
mov
mov
sarl
das
jbe
insl
pop
cmp
ss
xor
mov
pcmpgtw
std
push
mov
stos
scas
mov
and
cld
sbb
xchg
lret
adc
sarl
es
shll
into
mov
mov
in
hlt
xorb
addr16
arpl
ss
mov
daa
mov
pop
repz
dec
push
insb
sub
cwtl
xchg
mov
mov
add
loope
ret
stos
lods
daa
add
add
push
nop
iret
subl
inc
pop
ja
andl
sahf
pop
xor
cmpsb
or
xchg
sub
shlb
add
add
mov
popa
mov
popa
pop
cmp
cmpb
repnz
inc
nop
adc
mov
dec
inc
xor
enter
dec
jg
adc
flds
cmp
lcall
std
fidivrs
ficoms
jbe
scas
pop
loop
icebp
cmp
pop
push
sbb
mov
ret
cmp
gs
repz
mov
jecxz
xlat
add
iret
xchg
mov
into
rcrl
les
xchg
aas
lods
xor
push
unpcklps
loopne
cli
ffree
pop
or
mov
icebp
pop
lret
repnz
js
jecxz
dec
or
aam
sub
repz
mov
lret
push
aas
push
mov
loopne
fcoms
cs
xor
and
push
scas
rcll
jb
frstor
push
and
ret
push
pop
adc
test
outsb
sub
icebp
xchg
dec
dec
jbe
add
xchg
in
xchg
xchg
out
sti
add
lahf
inc
and
aad
fisttpl
sarb
lahf
mov
push
dec
repz
inc
ljmp
or
insl
xchg
push
imul
and
fstpt
inc
dec
test
int
adcb
sti
stc
xchg
loopne
xchg
in
xchg
lds
pop
or
int3
aas
and
or
pushf
push
xchg
xchg
lds
pop
mov
pusha
arpl
push
shrb
push
repnz
push
push
cwtl
pusha
xchg
enter
push
aas
mov
mov
testl
sahf
lea
cmc
ds
lds
ret
and
cmpsb
imul
mov
nop
mov
ds
sub
dec
scas
jno
adc
aam
sbb
mov
addl
xor
and
inc
jno
lret
mov
icebp
mov
fdivrp
repnz
mov
out
flds
pop
dec
and
mov
push
rcl
push
xchg
sbb
fidivrl
pop
cmp
popa
out
cmp
inc
pushf
repnz
clc
fs
pushf
daa
test
cmpsl
int3
mov
sar
shlb
and
popf
mov
loopne
shl
mov
lahf
dec
mov
aam
adc
test
add
iret
xchg
adc
push
leave
ja
jmp
mov
cs
ret
ret
and
rcrl
dec
in
test
testb
xor
cwtl
xor
add
test
pop
mov
hlt
pop
dec
mov
pop
adc
out
push
xchg
mov
jnp
mov
daa
pop
cmp
pop
adc
push
imul
ja
sub
mov
sbb
dec
cmp
inc
scas
mov
xchg
aad
test
out
andb
dec
out
xchg
divb
ss
lods
xchg
cmpb
add
jp
test
imul
stc
mov
aaa
cmpsl
loope
mov
int3
mov
cmp
mov
xlat
mov
cmpsb
pop
xchg
sbbl
dec
clc
pop
in
inc
and
dec
addl
movsb
out
jl
loopne
cmp
enter
mov
fdivr
xor
pop
jo
mov
pop
sbb
dec
out
test
cmp
adc
in
pop
aam
icebp
mov
mov
movsb
insb
fdivrs
repnz
inc
push
fsts
inc
xor
mov
pop
sbb
mov
iret
in
push
pop
or
push
sahf
lds
insb
shlb
xor
cmp
cmp
test
push
jo
inc
mov
mov
pop
xor
cli
insl
clc
scas
sbb
mov
sarl
mov
incb
sbb
popf
popf
int3
xchg
fs
divb
into
adc
repnz
pop
jl
cmpsl
push
mov
rorl
jecxz
inc
push
cs
out
cmp
pop
imul
dec
pop
imul
or
addr16
bound
roll
out
mov
fisttps
adc
or
fs
add
dec
in
mov
xchg
sub
mov
push
sub
mov
push
dec
xchg
and
outsb
fcmovne
je
cli
aam
icebp
or
inc
ret
adc
adc
scas
adc
pop
rclb
loop
mov
mov
test
xchg
xchg
mov
imul
push
loop
ljmp
cld
jo
and
or
xchg
leave
faddl
push
lcall
fdivr
pop
sub
dec
pop
xor
jmp
cs
sbb
sbb
push
leave
pusha
pop
leave
ds
push
out
faddp
and
js
jne
add
lret
les
pop
and
in
sub
leave
push
js
mov
pop
stos
data16
divl
test
jp
mov
pop
mov
out
jp
adc
inc
jmp
out
push
xor
cmp
adc
aaa
cmp
shrl
fs
stos
in
jb
pop
jns
xor
adc
push
mov
mov
fadds
lcall
or
fs
pop
pop
jg
mov
xor
sbb
arpl
adc
fcomps
lea
cs
loopne
inc
adc
repnz
cmp
or
fsubrs
cs
xchg
cmp
or
pop
fwait
lcall
rolb
inc
sub
into
mov
push
dec
dec
push
nop
cmpsb
inc
lret
loop
xchg
movsb
pop
iret
or
mov
lds
aaa
adc
sahf
inc
sti
pop
add
addr16
mov
in
outsb
hlt
imul
imul
call
xor
dec
or
xor
nop
sub
jne
cmpsb
scas
add
loopne
pop
cli
sti
fstps
sub
xor
sub
dec
add
iret
pop
in
pop
mov
pop
std
sub
ret
cli
cld
test
fmull
mov
sub
in
int
sbb
lahf
inc
gs
jns
sub
push
addr16
ret
out
popf
rcrb
push
addr16
dec
lret
flds
dec
or
sbb
hlt
arpl
add
cmc
mov
push
adc
sbb
jl
sti
cmp
xor
in
push
jp
lret
and
enter
and
jmp
pushf
sub
dec
xor
inc
xlat
arpl
hlt
outsl
jns
decl
sbb
mov
into
repz
xlat
in
psrlw
add
addr16
push
jo
das
pop
pop
push
rolb
cmc
cmpsl
mov
jge
ret
and
sar
cmc
jp
decl
and
sub
dec
add
mov
daa
je
sbb
sbb
pop
int
cmp
add
push
adc
out
mov
sbb
les
fcompl
add
cli
inc
arpl
push
inc
dec
pusha
shll
dec
jge
xchg
or
and
pop
mov
or
les
xor
lock
and
out
pop
out
iret
xor
add
jnp
jl
xor
dec
xchg
hlt
jne
xor
dec
aad
aad
dec
cmc
xor
pop
sub
cli
aam
add
imul
gs
mov
adc
push
sarl
jmp
fdivs
sub
add
push
movl
mov
sbb
inc
add
sbb
iret
push
xlat
mov
fiaddl
sbbb
xchg
ror
sub
jmp
in
xchg
add
add
jno
adc
or
scas
jge
jne
push
mov
push
je
into
sarb
leave
std
lods
sub
mov
cmc
aam
sub
pop
dec
or
xchg
jbe
ja
test
stc
xor
lods
mov
repz
jecxz
or
mov
mov
mov
ja
ljmp
jg
fstl
test
loope
xchg
cmp
lods
out
arpl
cmp
test
mov
int
and
lcall
mov
in
dec
aaa
enter
int3
xchg
call
add
jns
xor
adc
jecxz
mov
mov
in
mov
dec
out
test
inc
dec
andb
push
cmp
fwait
sub
cld
push
scas
lcall
pusha
xchg
or
or
push
subl
int
mov
fsubrl
mov
inc
insl
mov
gs
in
imul
cmpsb
dec
ds
imul
push
in
jnp
push
dec
mov
mov
adc
lea
inc
and
enter
enter
sti
pusha
or
shl
call
loop
xchg
xchg
or
and
dec
dec
mov
mov
cmc
xchg
push
xchg
pop
nop
jb
mov
xor
cmpsl
pusha
or
test
ficompl
arpl
cmp
jbe
push
in
pop
in
nop
sub
aad
in
xchg
or
mov
mov
int3
mov
push
mov
lods
mov
pop
aaa
shll
gs
out
lahf
ficomps
cmp
jbe
or
jp
scas
pop
cltd
das
push
in
jp
gs
pop
es
lret
out
or
addb
sub
inc
out
loope
push
jns
repz
pusha
movsb
push
test
xor
repz
mull
cmc
insb
test
or
in
pushw
jecxz
aam
mov
mov
cmpsb
xor
pop
jne
in
mov
push
repz
push
lret
mov
cmp
xor
out
add
jo
push
xchg
std
pop
lcall
je
mov
loopne
mov
out
or
add
ficoms
cmpsl
inc
mov
cltd
mov
push
fsubr
push
sub
pop
out
into
or
aas
pop
jnp
dec
push
jnp
ret
sub
test
lahf
push
outsb
gs
xchg
xchg
imul
mov
mov
xor
xchg
cmp
inc
mov
or
subb
push
fwait
xor
jge
fildll
dec
pop
mov
lock
mov
inc
rcrl
sahf
test
scas
jl
push
lea
ds
pop
inc
aaa
das
mov
pop
mov
mov
jnp
jecxz
les
xchg
jns
push
loope
push
jne
jo
insb
xor
push
push
inc
push
cmp
hlt
inc
push
xlat
imul
in
loope
add
mov
adc
add
xchg
sbb
jl
loope
outsl
pop
je
xorb
mov
loop
push
call
mov
call
adc
adc
push
push
adcb
cmc
divb
mov
jnp
and
movsl
mov
mov
int
arpl
std
push
adc
sbb
lock
mov
ljmp
xchg
jne
je
out
sub
fsubrl
or
mov
sti
sbb
and
ret
and
mov
mov
add
lds
mov
adc
mov
xchg
lret
jbe
dec
repz
aaa
xchg
xor
lcall
cmp
push
mov
aas
jg
dec
push
out
push
xchg
pop
pop
stos
sbb
sahf
rolb
cmp
xchg
repz
cs
arpl
dec
arpl
adc
stos
mov
push
js
pusha
call
mov
xor
scas
push
hlt
leave
push
sub
pop
pop
andb
inc
cmp
sbb
sbbb
loop
or
jb
mov
test
addl
divb
data16
clc
stos
lret
addl
jp
mov
fildll
clc
and
ljmp
ret
or
adc
popa
out
xchg
ror
sahf
or
and
ljmp
insb
pop
hlt
cltd
out
or
and
dec
xor
adc
ds
sbbl
int
ss
das
orb
ds
dec
leave
pushf
roll
mov
pop
adcl
inc
je
es
stos
pop
xchg
clc
mov
and
pop
fists
sub
je
xchg
outsb
and
loopne
xor
and
popa
lea
sbb
aad
aas
movsb
icebp
or
xor
pop
out
inc
push
push
add
std
shll
dec
mov
cwtl
cmpsl
adc
cmpsl
clc
dec
into
push
shrl
mov
inc
jmp
xchg
popa
mov
ret
push
scas
pop
or
push
leave
or
mov
mov
addb
add
in
int3
fidivl
imul
adc
xchg
add
imul
inc
icebp
dec
mov
fisttpll
cld
pop
testb
in
imull
jbe
fsub
sti
sub
and
aaa
in
imul
clc
adc
test
mulb
leave
mov
xor
add
and
hlt
rclb
xchg
cmp
or
ss
push
cli
leave
in
lea
test
jb
cltd
add
into
inc
mov
call
mov
ds
scas
data16
push
pop
xor
negb
stc
dec
inc
mov
inc
popa
jbe
or
pop
pop
mov
jns
jp
or
sahf
lret
sbb
paddsb
xor
shll
int
jb
jno
je
popa
cmp
into
aaa
mov
mov
lods
pusha
repnz
mov
dec
ret
lea
or
lahf
out
jbe
faddl
mov
stc
inc
jae
or
mov
clc
lock
sub
fcoms
dec
enter
loopne
movsb
xchg
xorl
mov
dec
add
fdivs
add
mov
xor
jecxz
jl
cs
add
mov
pop
jl
pop
mov
fcomps
adc
push
cmp
out
pop
sbb
pop
mov
jno
adc
loope
pop
or
push
sub
mov
stc
or
rcrb
rcrb
dec
mov
addr16
fisubl
push
sbb
sbb
and
std
inc
dec
mov
out
lock
or
sbb
rolb
call
xchg
ror
imul
sti
sbb
loopne
add
jp
jg
insl
and
lret
or
sbb
out
movsb
movsl
pop
call
xchg
mov
mov
call
push
iret
sti
add
inc
xchg
test
bound
mov
pop
xchg
jo
divb
gs
lahf
pop
lcall
add
es
fldt
aam
aaa
mov
xor
push
daa
and
cwtl
mov
iret
push
jo
cmc
fnstenv
das
pop
jnp
mov
enter
mov
pop
hlt
mov
xchg
and
lods
cli
inc
xchg
xor
pop
sbb
int
dec
mov
push
jne
mov
std
inc
pop
xor
inc
testl
mov
movsl
sti
outsl
mov
jg
xchg
pop
clc
cmp
mov
sahf
sbb
mov
push
push
jle
into
test
mov
cmc
insl
cltd
sub
setno
mov
fisubs
add
stc
ret
ficoms
jmp
mov
test
cltd
xor
and
out
and
test
cs
jo
data16
mov
sbb
addr16
dec
adc
je
mov
sub
test
mov
dec
outsl
and
imul
mov
inc
add
sbbl
xor
add
push
mov
cmp
sarl
jmp
push
jno
rcll
xor
fld1
dec
mov
js
jle
adc
mov
push
int
jae
inc
cld
imul
adc
test
scas
int
dec
ds
xchg
test
push
orl
iret
pop
jg
push
pushf
imul
xchg
in
inc
loope
or
sub
imul
into
dec
add
pop
push
push
call
jecxz
dec
lods
cmpsb
inc
cmp
push
jns
add
ljmp
inc
cld
push
jmp
mov
and
xchg
cltd
loopne
cli
push
inc
jp
fwait
xchg
xchg
sbb
sub
sbb
and
jl
sbb
lea
and
pop
popa
fsubl
cmpsb
dec
xlat
mov
push
scas
out
jp
sbb
fcmovnb
jle
popa
adc
and
dec
ja
push
shll
jae
mov
ds
pop
dec
xchg
and
insb
imul
test
fldenv
aam
loopne
pop
sbb
xchg
in
inc
mov
pop
jo
sub
and
mov
jge
dec
pop
scas
jecxz
xchg
and
ja
mul
inc
cmp
dec
lea
mov
pop
sti
inc
jecxz
sub
push
mov
cld
jmp
pop
outsl
int3
outsb
xor
mov
pop
mov
bndldx
xchg
call
decl
inc
cmc
cmpsl
mov
add
push
and
mov
xor
push
leave
push
enter
add
mov
imul
sbb
pushf
push
add
jnp
jl
movsb
dec
dec
mov
je
stos
lea
jp
mov
mov
push
xchg
mov
pop
daa
add
sub
add
mov
sbb
cmp
inc
daa
orb
lret
sub
loope
call
ss
or
or
sub
in
fnstenv
adc
pop
addb
loope
xor
xor
push
dec
mov
aas
jb
or
cmp
sbb
jmp
mov
je
pop
cwtl
pop
mov
ret
inc
outsl
mov
push
mov
sub
call
add
push
test
jmp
inc
scas
pop
inc
fs
jl
divl
xlat
insl
popl
and
dec
subb
pop
fldl
push
lret
lret
push
inc
xchg
mov
and
push
mov
in
sub
lds
push
imul
push
push
xchg
push
and
inc
daa
nop
add
pop
lea
arpl
enter
add
aas
and
or
mulb
popf
imul
mov
jno
popf
mov
out
dec
jecxz
lods
decl
xchg
dec
adc
jle
cmp
jno
xchg
pop
mov
cmpsl
cmpsl
push
mov
clc
test
push
shlb
out
adc
jne
inc
mov
outsb
fs
lock
icebp
jno
adc
daa
sub
sbb
lret
outsl
jns
sti
int
in
xchg
xchg
ljmp
xchg
lret
push
adc
mov
xchg
xor
mul
jmp
daa
jno
add
push
lock
xchg
repnz
xchg
jge
add
sub
call
mov
movsb
mov
fcoms
or
rcrl
int
push
jmp
xor
sbb
mov
repnz
push
stc
and
jg
mov
aaa
fldl
mov
adc
pusha
pop
fmull
notb
cmc
jo
adcl
xchg
lahf
pop
test
ret
fiaddl
push
cld
shlb
dec
mov
test
push
sti
xor
mov
jns
xor
inc
mov
cmp
in
mov
aam
popa
and
and
mov
gs
pop
dec
out
in
stc
jns
fdivrs
into
pusha
aad
aam
inc
jmp
cli
jecxz
enter
out
pop
pusha
cmpsb
add
and
fisubl
sahf
lds
outsb
in
add
or
test
xor
and
jmp
test
ja
lcall
mov
sub
sub
xor
lds
test
fstps
scas
xor
adc
inc
sbb
imul
test
cld
shl
das
std
or
test
push
aas
pop
lahf
aas
push
int
hlt
aad
sbb
jg
ret
inc
bound
jno
aas
lock
push
push
mov
mov
xchg
pop
push
inc
pusha
xchg
mov
xchg
xor
mov
cmp
cwtl
xchg
fidivrs
andl
outsl
test
xchg
sbb
popl
mov
cmp
into
and
xchg
fwait
push
leave
loop
or
outsl
sub
push
ficomps
mov
hlt
faddl
mov
jge
mov
in
add
int3
pop
cld
jb
and
inc
mov
in
cmpsb
shr
jle
lock
push
leave
xchg
testb
xchg
xchg
stos
das
push
jecxz
mov
jbe
movsl
bound
jl
cmpsl
stos
add
pop
stc
mov
mov
add
sahf
inc
sbbl
pop
jae
pop
cs
in
xchg
fadds
iret
pop
aaa
adcb
pushl
iret
jle
dec
pop
xchg
push
movsb
push
sahf
mov
pusha
mov
sub
ret
jmp
popf
lret
jp
inc
cmpsl
fwait
and
push
xchg
pusha
add
lret
cwtl
insl
roll
xchg
pcmpeqb
push
ss
aam
sub
mull
incl
mov
cli
xlat
lds
dec
dec
cli
lods
xchg
jmp
sti
mov
sti
dec
mov
movsb
decl
aas
ss
out
mov
fcompl
mov
gs
sbb
daa
jbe
xlat
lock
enter
mov
pop
jp
andl
inc
jp
pop
or
xchg
add
stos
xchg
cmp
sub
dec
inc
and
insl
dec
add
bound
ljmp
xor
mov
call
push
sub
push
ret
jb
xor
jecxz
ret
push
or
xchg
pop
inc
or
sub
or
ret
loopne
in
stc
jge
in
jne
pop
and
inc
scas
add
enter
xor
and
insb
and
dec
push
scas
pusha
cmp
adc
mov
mov
ficomps
repnz
cmc
popf
mov
and
divb
cmp
fnsave
cmpl
je
add
nop
and
insl
adc
out
cmpsb
ret
xchg
pusha
adc
testl
xor
test
cmp
sbb
out
mov
insl
loop
testb
call
mov
leave
xchg
xchg
xor
shl
pop
sahf
xchg
push
stos
mov
imul
mov
addr16
dec
adc
sub
ljmp
clc
cwtl
inc
mov
mov
inc
cltd
std
aad
sub
lcall
ficomps
mov
and
jo
in
iret
xor
ja
mov
das
pop
mov
lret
jno
sbb
dec
add
dec
loopne
push
mov
sub
push
clc
lods
push
sub
adc
pusha
lock
je
adc
add
or
cli
inc
repnz
pop
pop
fdivl
repz
insb
or
pop
sub
sti
mov
push
mov
push
dec
aad
ficoms
inc
add
bound
lcall
sbb
mov
dec
pop
lock
les
xchg
dec
rclb
lds
enter
stos
scas
mov
mov
jnp
std
dec
mov
int
push
jl
cmp
or
xchg
filds
imul
nop
and
cmp
xchg
es
sbb
push
push
xchg
sbb
or
incb
adc
nop
rcrb
sub
icebp
cmc
sbb
mov
aaa
cltd
or
std
push
xchg
nop
mov
in
mov
mov
and
pop
push
insl
sub
aam
repz
lret
sub
or
rcll
pop
shr
pop
xchg
xlat
test
lods
xchg
sbb
sub
xor
push
lods
adc
push
push
push
pop
and
or
mov
daa
aaa
cli
sar
fcmovb
xchg
scas
mov
popa
sbb
inc
cmp
inc
sbbl
call
addr16
sub
mov
int
loopne
or
das
or
push
lcall
pop
enter
daa
leave
loopne
inc
out
push
fnstcw
loope
sub
cmpsl
push
daa
lahf
loopne
arpl
fst
cli
cmc
ret
js
clc
popf
mov
fimull
sub
push
sahf
mov
inc
mov
push
mul
imulb
sbb
and
lock
loopne
stos
inc
adc
out
loope
fisttps
fdivrs
sbb
out
or
dec
adc
adc
cmp
or
xor
mov
ret
mov
adc
inc
mov
insb
loopne
loope
adc
mov
mov
out
mov
out
aam
mov
fs
push
pop
xchg
jne
pop
shrb
ret
ljmp
les
lret
sub
sub
xor
out
jl
jg
imul
or
and
adc
mov
cs
data16
das
inc
out
loop
sar
fstl
push
cmp
sbb
nop
xchg
xchg
insb
xchg
cwtl
mov
ja
jp
lods
lcall
jecxz
jne
out
and
and
loopne
cmc
cmp
fwait
inc
aas
or
add
inc
les
sahf
addr16
hlt
adc
mov
mov
imulb
mov
clc
aad
pop
cmp
cli
mov
movsb
adc
pop
and
pusha
and
adc
jne
jno
stos
push
jmp
pop
sub
xchg
int
aaa
pusha
push
fwait
or
icebp
bnd
clc
out
addw
jo
mov
inc
jl
in
push
jle
or
xor
dec
jge
jbe
or
pop
sbb
xchg
and
xor
mov
dec
mov
insl
add
and
push
sub
je
push
ret
or
or
imul
xorb
add
mov
hlt
pop
or
in
je
fdivs
sbb
push
add
lods
pop
cmp
cmpl
leave
dec
rorb
fidivrl
test
fidivrs
and
in
frstor
stc
outsb
insb
add
mov
fisubs
test
add
mov
out
jne
or
mov
pop
fbld
out
js
gs
adc
inc
mov
jns
jecxz
sbb
es
sub
scas
and
inc
mov
inc
push
push
test
xchg
inc
repz
lock
les
xchg
dec
dec
outsb
jp
sub
in
pop
sbb
mov
mov
cwtl
cmp
iret
sti
add
sysexit
in
mull
test
lcall
bound
repz
cmc
or
lods
test
lea
pop
ja
and
xchg
inc
rol
das
inc
jnp
call
test
or
xchg
jns
out
dec
cmpsb
sub
in
lods
test
divl
aas
out
out
in
fcmovu
mov
add
jbe
mov
mov
shrl
stos
jo
ljmp
test
cmc
repz
jb
sub
mov
dec
jns
add
iret
rcrl
bound
push
cmp
int
es
nop
adc
jle
in
jmp
out
jl
fidivl
sbb
pusha
cmp
mov
or
aam
mov
and
lea
push
lock
loope
ljmp
sahf
xchg
outsl
insb
add
scas
lcall
stos
fwait
sub
imull
xchg
pop
pop
mov
cmp
fwait
aaa
dec
or
cmp
sbb
outsb
xor
jb
ret
jmp
aad
sbb
xchg
es
or
pop
push
push
xchg
orl
and
mov
xchg
ljmp
xor
or
stc
push
out
cmp
in
adc
out
push
ret
gs
and
ss
pop
pop
pushf
lods
mov
and
gs
xlat
repnz
insb
lods
mov
mov
pushl
mov
ljmp
xor
ds
push
movsb
adc
mov
mov
add
clc
sbb
lcall
inc
xor
js
xchg
sbb
int3
lcall
mov
std
push
xchg
xor
repz
pop
jns
leave
in
mov
lods
js
mov
mov
adc
into
andb
mov
sub
lods
orb
mov
fnsave
cmp
mov
mov
add
icebp
pop
xor
xor
xlat
push
pushf
sbbb
mov
mov
mov
mov
stos
inc
cld
popa
cmp
mov
test
push
pop
adc
jge
mov
ljmp
ficoml
cmp
je
enter
or
or
inc
mov
lock
pusha
loop
push
dec
sub
out
mov
mov
jnp
clc
adc
roll
adc
int
pop
jmp
rolb
leave
int
movsl
cmp
pusha
mov
pop
and
lock
ret
or
jno
sub
push
in
outsb
iret
cmc
push
pop
popf
sub
xchg
push
add
shlb
hlt
movsb
pushl
orl
mov
mov
push
mov
mov
pop
or
xchg
stc
lret
loopne
mov
fcmove
push
movsl
pop
stc
mov
jo
lea
adc
fldcw
movsb
ret
and
mov
fisubl
xor
stos
jne
push
inc
adc
pushf
push
das
lock
imul
jp
jae
mov
xchg
lret
mov
or
ficomps
dec
pop
out
inc
adc
mov
scas
js
or
or
dec
cmp
inc
filds
dec
push
dec
sti
jae
or
and
sti
xlat
sahf
into
mov
mov
ja
adc
push
inc
jecxz
xor
mov
pop
cli
shlb
je
xchg
inc
cld
xor
popf
in
xchg
sbb
push
shr
in
and
jnp
notl
push
bound
xchg
jge
inc
sub
mov
xlat
sub
hlt
xchg
loopne
leave
sbb
xchg
jmp
xor
addl
xor
inc
add
movsl
mov
das
pop
and
xor
jp
loope
aaa
cwtl
rorb
mov
adc
push
adc
icebp
mov
stos
cs
xor
scas
add
pop
pop
arpl
cmp
sbb
xchg
jo
in
and
rcrb
rcr
arpl
lret
daa
mov
out
mov
lret
leave
jo
cmp
fmull
adc
xchg
ss
push
nop
push
fs
ret
xor
xchg
pop
sbb
into
mov
mov
ss
inc
add
jmp
mov
out
lret
dec
mov
mov
sub
add
sub
or
addl
sub
das
inc
test
shlb
lods
int
jmp
push
outsb
add
xor
sub
call
sbb
mov
adc
mov
mov
lods
inc
fwait
pop
jo
cltd
jae
xchg
dec
in
fists
cmpsl
clc
mov
mov
dec
iret
es
scas
push
repz
mov
mov
push
decl
daa
outsl
test
fcmovu
mov
sub
xchg
push
in
sbb
dec
jmp
inc
mov
test
add
rcrl
decl
adc
push
cmpsb
cmp
ltr
push
mov
in
pop
roll
push
jle
repnz
and
hlt
js
add
enter
stos
dec
pusha
adc
jno,pn
adc
and
jae
add
clc
pop
sub
xor
incb
fnsave
xchg
jge
or
push
jecxz
push
cli
lcall
push
test
dec
out
mov
test
or
add
or
cs
sub
xchg
aam
rclb
push
cli
out
repz
inc
int
sbb
dec
push
mov
inc
in
mov
jl
lods
loopne
jns
es
sub
cmp
aam
cmpsb
mov
push
mov
dec
cmc
out
out
adc
idivl
xor
adc
sub
fbld
fwait
rclb
int3
cmpsb
addr16
push
xchg
js
cmp
nop
sbb
xor
or
pop
xchg
mov
pusha
add
and
jmp
nop
jl
mov
daa
or
and
jg
xor
adc
stos
stos
test
fldcw
pop
add
and
bnd
sub
xchg
pop
lcall
in
pop
xchg
aas
mov
sarb
sahf
pop
jg
jecxz
push
mov
jne
test
and
sub
je
and
mov
loop
mov
bound
pop
aad
addr16
adc
lods
jne
push
and
popf
insb
into
lret
dec
sbb
adc
cmp
movsl
aas
in
testb
jle
push
mov
mov
sub
sub
xchg
xchg
adc
lahf
lcall
add
loop
push
out
sub
mov
or
mov
stc
inc
enter
popa
sub
sub
lret
push
dec
clc
mov
outsb
mov
inc
test
lahf
jmp
pop
aam
shlb
cmpsb
dec
mov
mov
inc
mov
mov
and
ja
shlb
je
cmp
push
out
ffreep
mov
stos
cli
imull
int
sbb
mov
pop
out
in
xchg
inc
aaa
mov
in
idivl
mov
jp
inc
cld
gs
icebp
xchg
dec
je
mov
mov
fidivrl
fbstp
jns
push
cmc
push
mov
lret
sub
popa
loope
test
push
loope
mov
add
mov
ss
clc
or
inc
inc
mov
outsl
mov
repnz
loopne
rolw
push
jo
je
xchg
cmp
mov
inc
aad
cmpsl
inc
loopne
insb
enter
xchg
push
addr16
cs
sbb
or
bound
inc
pop
mov
fs
shrl
in
xor
or
cmp
mov
in
pop
fadds
cmpsl
cwtl
loop
dec
pop
xchg
push
add
cmpsl
negl
xchg
mov
cmp
xor
pop
jl
push
es
jge
movsb
sub
fidivs
jecxz
fildl
xor
jecxz
sbb
repz
xor
sbb
filds
xchg
add
pop
int
ds
push
int
mov
push
cmp
mov
arpl
outsl
lret
lcall
dec
ret
adc
inc
lret
testb
dec
or
fisubrs
std
jecxz
cmpsb
push
enter
mov
pop
outsl
mov
lahf
and
loope
sub
pop
ds
pop
jge
sbb
cmp
andl
fcoms
dec
mov
dec
mov
jno
adc
mov
scas
push
lods
xor
push
jmp
xchg
xchg
and
mov
fsubl
outsl
or
cwtl
jg
bound
lret
add
mov
dec
out
add
adc
or
lret
adc
in
add
in
lret
mov
das
cmp
and
es
inc
out
movsb
out
enter
subl
stos
imul
and
mov
cmp
aam
mov
cwtl
cmc
pop
push
add
faddl
and
adc
mov
xchg
xchg
repnz
xchg
and
mov
inc
in
inc
add
inc
lret
arpl
out
dec
jae
insb
daa
sub
pop
xchg
jge
out
test
mov
fs
mov
xchg
and
in
xor
in
test
enter
imul
popf
mov
sub
popa
in
lea
mov
add
or
outsl
dec
pop
jge
sahf
fisttps
xor
outsl
sub
sub
call
addb
or
loop
pop
inc
adc
mov
xor
aad
inc
push
add
hlt
lahf
push
out
repnz
xchg
out
cltd
dec
mov
es
xchg
movsl
cmpsl
push
shrl
sub
mov
aas
jne
fs
xor
out
push
inc
xchg
inc
mov
gs
lret
xchg
movsl
dec
push
jmp
fs
xor
cli
xchg
fwait
inc
fldt
dec
lds
cltd
push
ret
jmp
out
cltd
sub
loope
fabs
int3
addr16
adc
pop
dec
lcall
sbb
std
mov
stos
jg
jnp
iret
or
not
test
cmp
sahf
cmpb
mov
mov
inc
and
mov
lods
or
nop
mov
inc
insb
pusha
outsb
shr
mov
scas
mov
aad
dec
sbb
push
and
dec
les
rcrl
lock
dec
push
jmp
mov
ret
pop
pop
dec
insb
icebp
not
dec
push
push
cmp
inc
pop
pop
sub
inc
or
addb
outsb
pop
sbb
jne
adc
xchg
jb
sub
inc
adc
mov
pop
int3
mov
unpckhps
xchg
inc
std
cmp
int
mov
jl
ficoms
jnp
mov
lret
push
dec
cmp
mov
in
subl
sub
cmpsb
hlt
lahf
dec
shll
inc
jns
leave
push
insb
adc
mov
fs
inc
sub
fidivrs
rclb
hlt
jo
das
in
les
ret
cs
sub
jecxz
add
mov
pusha
xchg
jg
scas
jl
lret
sahf
mov
cmc
sub
dec
test
int3
pop
lcall
ret
movsl
sub
pushw
inc
cs
push
jl
xchg
test
mov
and
inc
jg
es
mov
scas
stos
ret
stos
jbe
mov
ret
pop
jne
xchg
add
mov
mov
add
jnp
lret
push
cmc
inc
mov
popa
inc
sbbb
mov
sahf
arpl
shlb
repnz
repnz
mov
pop
adc
gs
xchg
mov
gs
cli
xor
sbb
push
jae
adc
push
adc
mov
xchg
sub
out
pushf
pop
test
xor
jg
inc
clc
incb
mov
cs
jg
dec
arpl
dec
data16
pop
pop
or
or
mov
ja
push
in
push
aas
notl
cmpsb
cmp
jb
xchg
cmpb
outsl
pop
xchg
lock
fidivrl
outsl
lds
popf
xor
gs
repz
and
imul
call
and
repnz
sbb
or
and
push
rcll
sub
sarl
push
daa
les
decb
add
mov
xor
test
fisttps
xor
pop
xorb
ljmp
shll
insb
sbb
pusha
ret
ret
sub
clc
xchg
xchg
ss
sbb
dec
jb
cmp
xchg
dec
add
inc
and
inc
jns
jg
mov
inc
fistps
addr16
fs
lods
fs
outsb
lret
cmp
scas
aas
xor
shll
test
cld
shrl
aas
xor
cld
sbb
push
add
out
sbb
imull
pop
or
pop
jne
lock
ss
mov
aam
scas
and
inc
xorb
pusha
dec
xchg
sub
sub
mov
push
rclb
jg
pushf
jge
sub
add
sbb
popl
pop
push
inc
cmp
cmp
les
sbb
inc
sub
mov
jnp
cmp
fisubrs
xchg
xlat
rcl
movsl
jge
sub
jno
sbb
push
dec
lock
pop
mov
out
sbb
jnp
gs
aad
xor
xlat
stos
loop
add
gs
js
adcb
loop
jo
add
cwtl
mov
add
xor
inc
or
cmc
lods
mov
push
fldl
in
es
cmp
sub
andb
cmp
addr16
jo
add
sub
repz
xacquire
dec
xchg
aam
ret
jbe
mov
rcrl
jns
cs
aaa
mov
cli
jmp
and
sbbb
bound
mov
push
adc
or
mov
or
movsb
mov
or
icebp
bound
pop
pmaxub
movl
or
jo
sbb
cmp
repz
mov
mulb
mov
jae
cvtdq2ps
or
shll
aad
insb
mov
xchg
mov
inc
xchg
outsb
xchg
sahf
fstpl
fimuls
jnp
imul
pop
fsts
inc
cmpsl
push
xchg
sbb
lods
jb
fwait
dec
mov
into
sete
clc
push
mov
pusha
xor
leave
pop
add
orl
cmp
jae
es
out
mov
pop
andl
add
std
ret
pop
mov
pop
ljmp
xchg
loop
pusha
push
add
add
jae
fsubs
cmp
stos
movsb
cmp
add
cmc
fwait
push
ds
out
dec
add
scas
jnp
xchg
push
into
sub
out
add
repz
test
loope
add
fs
ljmp
aad
js
jno
and
int
or
mov
mov
out
inc
cmpsl
mov
push
jle
cltd
push
mov
and
imul
sbb
or
sbb
xor
inc
dec
ret
dec
mov
in
outsl
fildll
and
sub
mov
dec
mov
int
mov
lcall
add
inc
repnz
push
pop
sub
dec
pop
xchg
pop
ret
jp
pop
icebp
das
aas
dec
fidivrl
pop
shlb
jmp
mov
sahf
jns
into
roll
nop
inc
xor
outsl
adc
in
pop
mov
sub
mov
dec
iret
jmp
fadd
jno
add
cmp
hlt
mov
jmp
push
ret
shll
pop
shr
shl
cmp
mov
lret
scas
and
sub
ljmp
push
push
sub
cs
push
inc
mov
outsl
xchg
inc
mov
and
dec
adc
xorb
or
daa
jle
jp
pop
mov
adc
insb
dec
ja
dec
xor
adc
mov
loop
xchg
jne
mov
fwait
jg
es
add
dec
jecxz
jb
push
adc
psrlq
dec
in
pop
adc
push
lods
cmpsb
aas
mov
push
adc
jle
ret
pushf
loop
jae
rcr
icebp
jae
mov
inc
imull
es
or
mov
rolb
jbe
or
int3
and
test
rcrb
cmp
inc
cmp
fwait
cmp
push
in
aaa
jmp
mov
xchg
mov
sbb
test
daa
add
jg
xchg
das
xchg
arpl
mov
adc
mov
pop
dec
aaa
popa
add
jl
jg
add
pop
mov
add
loope
in
inc
dec
es
sahf
inc
das
enter
nop
das
cmp
clc
je
lds
add
mov
pop
lret
push
mov
sub
inc
fldl
pop
aas
push
ss
inc
add
jbe
push
xor
enter
ret
stos
shlb
aas
popf
dec
jle,pt
cwtl
enter
mov
orl
cmp
fcoml
testb
iret
ds
lods
ss
add
icebp
test
mov
pop
hlt
jge
loop
sub
cmc
jne
in
inc
call
push
add
sub
xor
mov
mov
loop
test
inc
sub
xor
pop
ljmp
push
ljmp
adc
fldl
inc
test
cs
sti
xchg
mov
fcomps
cs
mov
xor
lea
push
insl
adc
pop
shll
in
and
and
dec
ret
push
lret
push
movsl
test
mov
repnz
xorl
out
clc
outsb
scas
push
cs
fwait
xlat
mov
pop
xor
mov
out
sub
ss
std
mov
or
lock
pop
stc
push
xor
rorb
inc
add
cmp
jge
into
push
push
arpl
sub
cs
aad
xchg
add
jbe
cmp
stc
xchg
xor
jnp
scas
mov
push
inc
mov
movsb
pop
das
lock
jb
and
ret
out
sar
test
outsb
or
scas
out
push
enter
pop
and
inc
mov
mov
dec
mov
repz
mov
push
inc
lods
pop
adc
lret
sbb
jmp
shl
pop
pushf
pusha
push
jge
xchg
inc
imul
orb
ret
push
lods
adc
and
stc
ljmp
mov
imul
dec
inc
mov
sbb
cmp
pop
push
call
xor
rcll
push
cmp
xchg
push
call
sti
sbb
cltd
xor
push
push
enter
mulb
out
aas
jecxz
mov
push
loope
pop
popl
ret
cmpsl
inc
mov
adc
getsec
mov
sbb
sbb
movl
mov
xor
jg
push
cltd
ja
push
xchg
jmp
fdivl
outsb
pushf
orl
out
adc
xchg
cmp
shrb
mov
lds
dec
inc
adc
mov
dec
inc
shrl
push
pop
idivl
pop
inc
jne
sbb
ficompl
dec
pop
cmpsl
icebp
xchg
xor
aas
cld
sti
push
mov
xor
xor
gs
inc
add
in
bound
or
cmpsb
mov
ret
inc
sub
push
mul
testl
mov
pushf
divl
mov
mov
xor
add
lods
sbb
and
lcall
fidivl
adc
jo
fnstenv
sbb
fnstcw
std
push
loopne
jbe
dec
movsb
rol
push
sbb
xchg
inc
cwtl
or
jge
and
sbb
stc
cmp
mov
adcb
lahf
inc
sbb
jbe
xor
jno
jge
mov
xor
mov
ljmp
pop
pop
imul
cmp
pop
repz
lea
imul
jl
stos
mov
cld
pop
or
in
xor
mov
or
test
mov
inc
cmp
aad
mov
repz
daa
mov
imul
add
cmp
fs
xchg
loopne
add
mov
adc
jae
mov
mull
or
int3
pop
adc
jo
ljmp
arpl
fnstsw
mov
sbb
lcall
outsl
pop
lds
pop
lods
and
mov
adc
lods
pop
enter
in
inc
das
lret
loopne
xor
add
iret
out
iret
loop
daa
jo
push
and
neg
fs
nop
fidivl
push
mov
fisubl
cmc
add
xor
out
test
pop
xor
loop
adc
inc
roll
xchg
fcomp
insb
inc
lds
ja
js
jmp
jecxz
pop
lret
fmuls
cmovl
dec
inc
sub
loop
inc
leave
cltd
sub
vmread
ds
jecxz
in
in
stos
mov
cmp
daa
push
lcall
mov
lods
cld
adc
add
jg
push
lods
push
jmp
inc
xchg
xchg
adc
mov
sub
mov
sub
jb
cmp
sub
mov
js
rcll
add
or
add
cmpsb
sarb
loop
jae,pn
adc
movsb
cld
repz
xor
outsl
repz
fs
dec
sbb
xchg
aam
mov
nop
rcr
scas
cld
ljmp
pop
cmp
xchg
or
push
mov
pop
push
pusha
add
lods
pop
mov
es
and
sahf
mov
loop
icebp
sti
in
mov
pop
test
inc
xor
leave
out
xchg
xchg
sbb
stos
outsb
xchg
fs
leave
data16
addr16
int
fs
cld
inc
adc
xor
clc
cmp
jl
mov
cltd
popa
cmp
lret
pop
jmp
pushl
jbe
jne
bound
mov
cs
sbb
and
inc
cmc
test
adc
imul
jmp
nop/reserved
testl
jle
mov
das
mov
movsb
jae
jg
icebp
adcb
movsl
push
pushf
hlt
adc
cltd
add
lock
mov
mov
jae
cmp
mov
inc
xor
popa
rcl
adc
push
xchg
fsubrp
jne
mov
aam
stos
pushf
mov
jne
shll
inc
jecxz
add
sbb
lds
push
jmp
data16
pop
dec
mov
orb
dec
pop
push
jbe
pop
arpl
mov
cli
sub
xlat
and
dec
mov
bnd
adc
mov
mov
ficoms
add
and
xchg
pop
movsb
mov
inc
rolb
dec
pushf
xchg
sbb
shr
push
mov
or
or
lahf
sti
mov
cmc
mov
sbb
push
imul
mov
adc
dec
jb
push
mov
in
mov
and
rclb
dec
push
sbb
pop
pop
imul
ret
dec
cltd
fsubs
dec
jnp
ret
sub
sub
insl
push
clc
xchg
and
lods
ja
jne
imul
sbb
je
adc
repnz
xorl
xchg
je
sbb
mov
pand
or
dec
add
movsl
xor
nop
inc
mov
xor
dec
out
mov
mov
xor
push
jb
jmp
ljmp
leave
clc
mov
jp
jbe
mov
addr16
jp
adc
add
pop
clc
pop
out
lds
out
popa
leave
insl
fdivr
mov
xor
int
adc
aas
add
and
xchg
dec
mov
pusha
sub
jb
movsl
inc
mov
mov
push
pop
call
adc
je
mov
jp
in
lock
jl
popa
push
xor
xchg
or
inc
inc
pop
adc
mov
popf
cs
stos
inc
jb
outsl
dec
cmpl
jle
in
pop
cmp
push
cmp
test
push
leave
gs
jae
xchg
add
jo
push
std
mov
mov
dec
push
cmpsl
sbb
or
xchg
addl
jg
add
push
pop
lods
push
and
adc
divl
lea
inc
subl
dec
add
in
das
xchg
add
pop
js
aam
lock
mov
aaa
mov
insb
pushl
xchg
cmc
cltd
insl
imul
pop
pop
mov
es
sub
mov
sub
outsl
and
xchg
imul
divb
adc
aad
test
loop
ficompl
mov
repz
inc
pop
jno
jno
xor
addr16
test
jle
xchg
push
test
jb
jp
xchg
aam
jb
addr16
clc
stc
outsb
scas
dec
cs
lock
dec
cmp
add
rorl
sub
mov
mov
dec
mov
nop
aad
sbb
sub
add
push
mov
mov
xchg
push
enter
mov
into
push
dec
dec
sar
dec
jecxz
cmpsb
mov
cwtl
sarl
xor
or
pop
push
cmp
sub
xchg
add
js
push
add
sbb
xor
xchg
stc
cmp
jb
jns
sahf
sub
push
repnz
mov
pop
lcall
mov
mov
repz
and
lods
das
dec
mov
lret
mov
xchg
lock
push
jne
lods
in
outsl
sub
mov
stc
arpl
enter
sar
and
push
cmp
xchg
sub
sub
push
jmp
mov
out
inc
dec
rclb
mov
xor
pushf
add
icebp
jecxz
lods
push
inc
push
mov
popf
cmpsb
mov
jecxz
lods
push
lods
inc
jmp
cmpsb
fwait
adc
jns
daa
xchg
dec
loope
sub
mov
into
mov
xchg
dec
loope
mov
sub
mov
fdiv
aad
add
mov
sti
lock
jmp
andl
push
test
ret
xor
add
xchg
cmp
dec
and
mov
mov
adc
fwait
repnz
adc
rolb
les
xchg
mov
rcl
ret
lods
lods
mov
stos
and
fidivl
cwtl
mov
cltd
or
mov
push
sbb
es
lock
mov
pop
insb
push
popf
xlat
int
xor
adc
adc
or
faddl
pop
pop
dec
adc
pop
lock
fildl
push
mov
add
loop
faddl
jecxz
add
mov
sarb
push
cs
push
dec
mov
loopne
xchg
scas
xlat
cmp
add
aas
test
add
xorb
clc
in
or
and
ficoml
push
jo
jecxz
test
cmpsb
cmp
pop
jecxz
dec
clc
xlat
xor
or
int3
lods
movsl
stc
lock
xor
leave
pop
pushw
pop
clc
mov
or
lret
movsl
xor
xor
add
jmp
test
sbb
xchg
xchg
pop
cmpsb
lcall
rorb
push
sub
lods
icebp
shl
sbb
andnps
sti
or
dec
fwait
lock
test
mov
adcl
mov
push
or
rcll
mov
addr16
pop
adc
xor
cmp
in
mov
aam
popl
inc
pop
mov
test
push
pop
mov
mov
or
shlb
icebp
mov
jns
mov
test
sbb
sub
adc
sahf
fldt
mov
jnp
testl
mov
mov
add
cmp
loope
or
in
dec
andb
cs
and
mov
lods
xchg
dec
jne
mov
add
dec
mov
les
inc
out
js
out
dec
xchg
inc
jl
gs
jno
xor
mov
mov
out
jp
push
popf
mull
ret
aas
andb
add
sbb
pusha
push
fiadds
ret
push
pop
jg
add
shrb
xlat
mov
jp
cli
xchg
cmpsl
jl
call
dec
iret
jno
out
dec
jge
pop
inc
pop
cld
cmp
or
sbb
mov
jno
push
lds
push
es
adc
sub
xor
or
mov
jmp
fwait
add
mov
lcall
movsl
addr16
and
std
int3
adc
daa
xchg
daa
ds
stc
sbb
cmp
bound
xchg
mov
das
inc
inc
jb
test
fcomps
cli
out
addr16
sub
add
add
or
cmp
out
push
je
out
push
out
leave
adc
or
jle
es
pop
loop
push
push
jg
in
mov
lret
lods
fdivrl
jb
movsb
cld
push
in
cwtl
or
cmp
clc
mov
pop
divb
inc
sub
push
mov
fstl
jg
mov
cwtl
mov
ss
rcrb
inc
stc
pop
in
push
inc
movsl
jmp
mov
pop
mull
fisttpl
add
mov
addl
jb
xchg
pop
mov
imul
adc
testb
mov
lea
fldl
ss
sbb
xor
adc
out
lods
dec
xchg
lds
jge
mov
cs
shrb
cmpsb
add
and
xchg
inc
xchg
lea
xor
jge
jl
andl
jnp
mov
push
arpl
add
data16
lods
movsl
xchg
test
mov
xor
jp
add
sbb
cmp
pop
sub
or
std
repnz
data16
insb
jmp
add
lds
enter
mov
jmp
add
cmp
pop
push
push
mov
imul
mov
xlat
in
and
loope
mov
jno
scas
or
pusha
iret
or
inc
call
hlt
scas
jg
push
push
fcomps
dec
daa
imul
and
jp
orb
push
in
negl
adc
adc
and
sub
inc
pop
ss
cmp
push
sub
test
mov
mov
sbb
dec
and
iret
cwtl
mov
hlt
ja
inc
jp
add
sbb
pop
enter
cmpsb
jp
mov
loop
dec
adc
xor
outsb
mov
lds
push
adc
outsb
push
dec
dec
cmp
out
lcall
or
data16
decl
dec
jo
fbld
sbb
mov
push
cmpsb
or
fcmovb
gs
in
xchg
mov
inc
adc
jp
shrb
bound
cwtl
inc
mov
lret
fistpl
stc
xlat
jae
dec
insl
lret
mulb
mov
xor
add
test
bound
cmpsl
mov
sahf
movsb
cmp
aam
push
mov
repnz
add
nop
scas
loope
arpl
aas
cli
int3
nop
xor
nop
loop
mov
cmp
es
push
popf
sbb
hlt
daa
inc
and
in
scas
xchg
pop
js
push
inc
mov
test
popa
je
arpl
mov
xchg
test
aas
mov
or
push
fmuls
loop
add
imulb
inc
jecxz
leave
and
ja
push
sub
ds
iret
mov
mov
or
rcl
enter
jl
in
pop
push
lds
xor
bound
sbb
clc
aas
mov
in
add
movsl
lret
lcall
std
mov
negb
les
push
cmp
sub
js
inc
sbb
test
mov
xor
jmp
mov
and
outsb
xor
inc
out
or
and
xchg
aas
pushf
or
jbe
hlt
sub
arpl
pop
movsl
and
dec
repnz
push
sbb
cmp
jnp
and
push
cwtl
inc
aaa
imul
movsl
adc
or
cmp
xor
lds
push
and
dec
test
movsl
dec
and
sbb
in
xchg
stc
fsts
clc
and
sahf
mov
jecxz
jmp
out
inc
cld
xor
sbb
push
cli
icebp
stc
icebp
int
ficompl
and
sub
inc
fwait
cmpsb
aaa
aaa
mov
mov
inc
cmpsl
stos
sbb
scas
filds
pop
stc
mov
testl
mov
dec
in
mov
or
test
outsl
nop
aad
cli
fstps
jae
rol
pop
fbstp
jo
pushf
addb
add
lea
lods
cwtl
mov
jnp
pop
inc
mov
adc
cmp
faddl
push
add
scas
jecxz
mov
ret
and
mov
cltd
aaa
xor
cmp
clc
mov
sub
outsl
jge
mov
cwtl
xor
test
subl
test
cmc
push
sub
adc
addl
out
mov
push
xor
jne
xor
xor
or
and
cmp
jg
adc
adc
add
cli
inc
stc
in
jb
mov
cmp
mov
fwait
enter
outsl
std
mov
and
ss
pop
sub
inc
test
and
fucomp
push
mulb
data16
outsb
add
sbb
jge
data16
test
fisttpll
ljmp
lcall
test
inc
mov
mov
mov
cld
pop
mov
arpl
xor
sysexit
lods
pop
jo
xor
les
cs
xchg
mov
js
push
ja
inc
cmp
aad
movb
stos
sbb
aaa
cmp
mov
inc
cmpsl
sti
xchg
cmpsl
or
mov
repz
fidivrs
sub
outsb
sahf
shrl
fcomip
out
inc
sub
sub
pop
imul
cmp
icebp
or
dec
push
adc
jnp
daa
les
mov
incb
test
dec
cld
test
or
jl
pop
mov
cmpsl
shl
rorb
or
push
ja
incl
fiaddl
int3
push
addb
pushf
jge
sub
pop
call
add
sub
pop
icebp
cmpl
pop
into
into
ss
stos
loopne
andl
loop
sti
int3
sub
icebp
and
stc
push
jns
push
in
jno
sub
cmpsb
mov
mov
xchg
mov
fsubrl
sub
shll
push
xor
int3
in
fcompl
sti
sahf
stos
push
aaa
xor
fsubs
aaa
cmp
out
ds
sub
fcmovb
or
lret
cmp
or
mov
scas
push
lods
popa
mov
mov
lcall
cmp
fmulp
or
loop
adc
div
cmp
fldl
roll
dec
dec
pop
popl
stc
insb
mov
rcrl
cmpsb
jbe
and
xchg
xor
push
dec
sti
mov
lahf
popa
add
push
hlt
movsb
sbb
pop
push
jg
loopne
jl
xor
test
invd
popf
and
sbb
sbb
rorl
ds
xlat
fsubr
push
subb
nop
add
adc
aas
add
pop
clc
sub
jns
jae
test
leave
mull
pop
mov
pop
or
inc
jne
mov
jne
dec
scas
shll
rclb
addb
mov
cli
jno
testb
jl
mov
mov
cwtl
cmc
push
repnz
inc
divb
sub
repz
and
inc
ret
push
jecxz
fisttps
jmp
rcrb
mov
ja
cltd
scas
leavew
push
imul
inc
dec
adc
push
pop
sub
jmp
mov
mov
add
das
clc
int
out
neg
xor
insl
bound
stc
pop
cmpsl
repz
inc
add
jbe
dec
mov
mov
adc
or
fsubs
xchg
lea
push
scas
mov
fidivl
push
dec
lea
dec
push
sbb
hlt
xor
cmp
xchg
out
adc
mov
test
push
add
mov
xchg
jnp
mov
adc
sub
sub
jnp
outsb
push
lds
pusha
orb
dec
sbb
stos
test
shll
hlt
int
cli
std
sbb
ja
call
pop
pop
mov
mov
sub
popf
repz
push
lahf
test
aam
xor
sti
jo
jo
push
jne
push
ficompl
insl
aas
or
dec
rclb
fcmovb
push
dec
and
jl
or
xor
push
pop
les
push
adcl
dec
fwait
loope
inc
data16
cmpsl
and
aam
inc
jb
ret
pusha
aam
inc
lods
mov
and
shld
cmpb
sub
popf
xor
js
or
in
in
sbb
out
jno
jge
mov
arpl
ja
xchg
out
and
add
jbe
inc
dec
xchg
adc
test
aaa
inc
rcrl
out
or
mov
insb
pop
push
xor
mov
mov
cmp
mov
mov
sbb
cmp
jno
js
adc
or
jmp
mov
or
aaa
mov
add
stos
lds
int3
lds
aaa
jg
ret
jl
loope
iret
in
pop
sub
add
popf
push
movsl
push
into
or
and
xchg
outsl
movsb
jg
nop
sarl
loopne
leave
orl
fbstp
jg
or
pop
or
xchg
ljmp
js
in
xlat
in
imul
mov
dec
push
xlat
movmskps
mov
mov
hlt
loopne
xchg
pop
jbe
ljmp
rsm
lahf
fcmovbe
addr16
leave
mov
xchg
push
inc
xor
scas
cmpsb
or
fisttps
mov
add
cmc
test
push
cmp
shrl
push
mov
lahf
iret
or
pusha
mov
fs
xchg
mov
jmp
rol
xchg
xchg
push
jnp
fldenv
aam
xchg
inc
cmp
sbb
pop
pop
in
lds
dec
inc
ljmp
loop
leave
pop
inc
add
fsin
fidivrs
mov
push
jp
stc
lods
add
push
xor
sbbb
out
mov
nop
lods
nop
cs
das
dec
arpl
jno
push
rorb
cmp
in
fsubp
push
adc
add
fnstsw
xchg
lea
inc
sbb
push
out
prefetchwt1
notl
push
and
stos
sbb
sub
pop
mov
or
xor
push
push
sub
hlt
pop
int3
dec
ret
sahf
and
sbb
cltd
or
sti
pop
loope
push
iret
jns
mov
loop
mov
jb
cltd
mov
std
sbb
dec
mov
pop
and
leave
addr16
ret
lds
lahf
sub
movsl
aad
mov
inc
lock
test
nop
outsb
rorb
xchg
inc
fstp
lea
fnstenv
lcall
and
jae
movsb
inc
ljmp
lods
repnz
js
xor
or
lahf
add
adc
lea
loop
aam
mov
aad
in
push
xor
fdivs
cli
sbb
in
and
or
popf
and
mov
push
mov
and
cwtl
cmc
or
into
xchg
pusha
adc
std
out
sbbl
sti
out
call
push
addb
pushl
lods
into
jmp
fsubs
pusha
adc
mov
hlt
mov
out
aas
xor
push
xorb
arpl
dec
push
fbld
adc
inc
repz
jo
pop
fs
mov
push
pusha
push
lds
dec
lock
mov
adc
dec
jo
lahf
mov
add
jno
add
les
cmp
add
repz
dec
mov
push
ljmp
add
add
lea
and
int3
movsl
pop
xor
xor
sub
lea
or
jl
icebp
pusha
xlat
adc
out
mov
test
sbb
pop
add
cmc
and
cltd
sbb
out
rorb
cmp
or
jmp
nop
call
or
or
gs
jge
nop
add
sub
adc
xor
sub
cmc
cmp
lds
test
leave
leave
pop
lods
daa
pop
shrb
je
xor
jl
repz
sub
cs
xchg
cmpb
ljmp
dec
mov
int
lret
adc
test
sub
cwtl
adc
jo
push
not
jge
xchg
or
scas
mov
lret
sbb
stos
arpl
jl
cwtl
xor
push
cmp
lds
push
pop
mov
inc
fdiv
sub
xchg
inc
sub
fldl2e
repz
lret
cmpsb
push
es
decl
pop
adc
das
xchg
fiadds
sarb
pop
add
add
inc
stc
xlat
fdivrs
sbb
and
adc
stos
jne
push
ret
sbb
negb
shrl
mov
mov
sbb
push
mov
or
in
jno
imul
daa
xadd
jg
xor
fs
pop
cwtl
aaa
mov
sbb
loop
repz
xlat
outsl
sar
out
xchg
mov
sbb
cmc
xor
jo
es
cwtl
inc
jo
xchg
or
shr
and
xchg
movb
das
lea
xor
data16
push
adc
fwait
mov
shll
incl
lret
lds
loopne
mov
jp
int
xlat
iret
aas
insb
out
jge
aam
push
xor
jmp
fdiv
out
insl
dec
jg
and
push
cli
jg,pt
xlat
jb
add
in
push
ljmp
fdivp
in
or
cld
cmp
fiaddl
mov
xchg
outsb
mov
stos
stos
cmc
sbb
sub
push
in
mov
mov
sub
sbb
push
aas
pop
lcall
imul
jecxz
imul
xlat
push
pop
rorb
push
sbb
jne
push
test
cli
insl
es
out
xchg
fdivrl
add
mov
cmp
xchg
ds
xor
movsb
sbb
cs
cmp
push
cmp
push
aam
jmp
inc
pop
subl
rclb
sub
es
inc
jp
dec
cmp
xor
xor
adc
mov
dec
invd
jmp
je
lcall
imul
mov
out
add
mov
mov
or
pop
sahf
inc
movsl
mov
test
fisttpl
int3
loopne
jo
outsb
repnz
in
ss
sub
sub
inc
xchg
xchg
pusha
jo,pn
adc
fldenv
adc
xor
cs
jns
xor
in
testl
fwait
outsl
fidivrs
test
adc
push
push
test
cmpsb
sbb
adc
sbb
dec
aaa
ret
mov
in
imul
sti
jnp
xor
or
cmpsb
dec
aas
hlt
cmp
fidivrs
or
pop
roll
or
cmpl
mov
loop
imul
sar
std
js
pushf
xor
inc
mov
and
int3
fists
cmpl
in
clc
das
add
test
push
sbb
sahf
mov
push
or
lds
pop
scas
in
in
pop
jmp
xchg
aas
jmp
fucom
xchg
adc
int
mov
cmpsb
clc
mov
insl
dec
push
je
insb
divl
fstpl
push
xor
jno
push
push
repnz
pop
in
lods
inc
push
push
xchg
and
into
fisubl
sub
mov
push
or
dec
push
dec
test
mov
cld
xlat
jmp
dec
and
adc
pusha
int
jb
sub
movsb
mov
jne
mov
sarb
add
xor
fnstsw
push
fidivrl
clc
call
cmp
jmp
loopne
les
add
bound
rorb
imull
out
ret
pop
dec
vmovhps
ds
add
clc
fisttps
inc
inc
aam
jb
movsl
test
mov
xor
inc
int3
xchg
dec
dec
inc
mov
ss
xchg
xor
outsb
test
cli
dec
hlt
das
ss
xchg
movsl
push
fld1
xchg
sbb
std
stos
dec
cld
mulb
lahf
or
fbstp
mov
shrb
addr16
into
and
add
in
imul
lods
mov
pop
mov
push
mov
inc
pop
in
xchg
cmc
push
mov
inc
sahf
movsb
inc
icebp
popf
xchg
add
aad
pop
pop
dec
push
lret
sarl
add
out
mov
lahf
gs
ds
testl
call
mov
pop
dec
pop
xchg
xchg
idivl
movsb
add
mov
push
lret
and
mov
dec
and
in
add
dec
or
fistl
pop
sbb
btr
bound
fidivl
xor
sub
push
xlat
adcb
gs
mov
push
out
sti
mov
sahf
data16
outsb
inc
insb
rol
dec
call
popf
hlt
cmp
test
cmp
cmc
push
add
sbb
or
or
lahf
jecxz
mov
jne
adc
jge
dec
inc
and
iret
sub
pop
fdiv
jnp
iret
push
mov
fidivl
gs
adc
push
mov
xchg
adc
cmp
xchg
sub
xor
sahf
aaa
mov
xchg
movsb
rcl
or
fsubrl
jg
aad
lret
aad
fdivrs
jecxz
mov
sarl
mov
dec
mov
scas
add
lahf
das
fdivrl
xor
gs
pusha
test
pop
add
mov
adc
outsl
mov
xchg
cld
and
arpl
pop
out
dec
sbb
sub
inc
sub
ret
push
jl
lods
add
ljmp
stos
imul
sti
icebp
mov
mov
lret
insl
pop
cmc
cmp
movsb
sbb
push
bound
mov
xor
xchg
das
mov
push
orl
sub
fwait
sub
lds
cmovno
sub
xor
sbb
ds
mov
dec
jns
cmc
loop
jnp
jle
and
jp
xor
mov
cmp
cwtl
daa
dec
mov
jmp
aaa
cmc
inc
xchg
push
or
jb
out
mov
sbb
fcmovbe
popf
xorl
aam
adc
and
sbbl
sub
sbb
into
add
dec
or
inc
xor
push
adc
test
jge
push
shr
and
lods
push
mov
scas
lds
mov
pop
sub
mov
sub
push
nop
cmp
jae
inc
outsb
sub
or
mov
in
dec
add
sbb
faddp
jp
dec
xor
scas
leave
jo
pusha
lahf
imul
push
fs
fisttps
loopne
fmuls
test
sub
sbb
sub
enter
inc
mov
test
jecxz
adc
int3
sarl
mov
shll
inc
hlt
or
mov
inc
inc
and
sti
out
loop
lret
jne
pop
and
jle
loop
xorb
jl
xchg
repnz
jbe
mov
ljmp
sbb
movsl
lods
pop
dec
shl
loopne
scas
repz
movsl
es
fnstcw
negb
xor
aam
mov
ja
push
and
pop
or
imul
xor
jle
rcrb
out
xchg
mov
leave
in
or
es
fs
call
enter
mov
push
out
fldcw
and
jns
mov
pop
inc
ret
dec
fsubrl
xchg
cmp
rcrl
dec
call
negb
push
leave
inc
mov
and
rcrl
inc
hlt
fdivrl
cmpsl
mov
inc
mov
inc
call
xor
cmpsl
mov
ljmp
mov
aad
or
fstp
xor
xchg
mov
sub
mov
add
jb
or
clc
push
popf
mov
cmp
xor
lods
mov
cmp
inc
jbe
xor
sbb
xor
sbb
cltd
std
sub
rcll
out
out
rolb
lahf
cmp
cmp
das
mul
push
data16
pop
and
push
mov
push
call
lods
adc
xor
and
inc
cmp
sub
popf
outsb
and
je
xor
push
pop
sbb
pop
out
push
push
sub
xor
or
scas
lea
pop
inc
sti
in
mov
or
lds
mov
addb
aad
inc
pop
test
in
pop
fucom
cli
mov
inc
mov
rcrl
lods
fsts
bound
push
vmwrite
fcomps
inc
add
jb
jmp
ret
fstpl
pop
mov
clc
outsl
push
fcoml
dec
jle
iret
lcall
test
or
jo
jae
inc
add
movsl
inc
test
pop
fstpt
xchg
jge
jecxz
pop
outsl
inc
mov
xor
sbb
aaa
adc
fidivl
cmc
cmpsl
xor
mov
inc
inc
lock
cld
xchg
sbb
cmpsl
inc
cmp
sub
neg
sbb
jge
clc
mov
imul
sbbb
std
xchg
rorb
mov
imul
loope
sbb
fcompl
cmpsl
push
add
dec
inc
push
mov
lret
mov
sub
shlb
fmul
fnstsw
int
ret
mov
sbb
sbb
mov
jnp
fwait
push
divb
dec
or
ror
mov
xchg
out
pop
cs
adc
sbb
ljmp
xchg
mov
jne
jbe
mov
and
imul
sbb
das
pop
loop
adc
movsb
bound
sarl
inc
fiadds
sti
lock
xchg
sub
xor
pusha
sarb
mov
push
push
sub
scas
and
das
ret
jnp
int3
lea
xchg
je
clc
cmp
lock
pop
insb
aad
sub
mov
lock
in
ret
cs
jge
mov
filds
adc
xchg
mov
and
sbb
pusha
adc
lds
mov
bound
frstor
cs
xor
add
cmp
pop
fnstsw
popf
dec
sbb
or
inc
sbb
sbb
push
cmpsl
push
pushl
jge
and
lret
jo
shlb
es
xor
aas
dec
in
inc
inc
cs
popa
mov
bound
cmp
jmp
hlt
arpl
mov
cmp
ficoms
clc
nopl
or
push
in
les
aas
inc
mov
pop
ss
xchg
call
aas
enter
sbb
cwtl
mov
lcall
and
bound
xor
test
lock
or
pop
and
andl
pop
jge
add
into
inc
cmpsb
sbb
cmpsb
jl
inc
sbb
negl
iret
pop
jle
add
xchg
xchg
stc
scas
and
pushf
jno
add
loope
sub
inc
aad
mov
adc
jge
aaa
or
mov
dec
dec
push
mov
xchg
test
xchg
leave
rcrl
aam
fldt
loop
adc
fdivl
shl
adc
pop
push
mov
cs
push
mov
data16
lock
inc
fadd
pushl
jae
mov
lock
test
imulb
sti
sbb
lock
mov
adc
outsb
and
or
jbe
rol
pop
pushf
mov
jg
les
push
stc
inc
xchg
cmpsb
push
addr16
movsl
std
lods
fstl
pop
lods
in
cmpsl
add
mov
lds
insl
jg
xchg
sarl
xor
fidivrl
xchg
mov
mov
mov
mov
lock
mov
popa
mov
andb
add
loop
repnz
sub
pop
mov
aaa
mov
stos
es
les
xor
adc
out
negl
int3
ja
gs
jmp
insl
pop
xor
jge
data16
pop
cli
icebp
les
in
rclb
lock
movsw
mov
push
test
sti
ss
push
insl
iret
outsl
jl
mov
and
cmp
loop
or
jmp
mov
lret
int3
std
xchg
lcall
fisubrs
outsb
addr16
movhps
cmpsl
jle
mov
out
sarb
rorl
loopne
les
xchg
push
imul
ror
scas
mov
lret
out
push
lahf
jbe
insl
xor
cli
jns
ss
addr16
int3
or
pop
test
addr16
jnp
xor
mov
adc
fsubs
mov
mov
in
adc
ss
xchg
jg
pop
cmp
xlat
arpl
cmpsl
sarb
push
daa
icebp
idivb
sbb
arpl
push
cs
repnz
dec
adc
pop
lods
xor
pop
mov
push
fwait
or
dec
insl
sbb
xor
xchg
xor
xor
cmp
add
out
out
jnp
les
ret
repz
jo
or
and
jb
sub
xchg
movsb
roll
xorb
icebp
inc
sub
mov
pop
push
cmpsb
das
jns
xchg
inc
cld
push
mov
push
jmp
cmpsl
iret
and
mulb
jae
dec
inc
fs
or
push
add
dec
mov
xchg
cmp
ret
in
movsb
jp
imul
pop
ja
arpl
push
jns
or
cmp
ljmp
into
out
aad
js
ret
pop
outsl
cmpsl
cs
and
adc
xorl
sbb
pxor
loopne
incl
mov
mov
jg
fimull
inc
add
in
inc
mov
or
emms
inc
rcr
xchg
jo
into
clc
loopne
mov
xlat
mov
movsb
jnp
popf
sub
mov
mov
scas
and
ljmp
sub
cmp
addl
pop
outsb
nop
or
cmpsb
loope
mov
sbb
hlt
jg
movsl
add
jg
into
add
int
jno
or
addb
hlt
inc
xchg
cwtl
mov
mov
xor
notl
lret
xchg
inc
scas
dec
loope
cmpsl
sub
js
mov
test
cmc
adc
cli
sahf
sbb
push
cli
mov
negb
xchg
enter
or
fadds
mov
and
out
push
jl
inc
repnz
repz
adc
pop
fwait
subb
cmp
arpl
sub
sbb
cmp
adc
pusha
jl
push
movl
push
scas
insb
mov
sbb
in
adc
and
ret
inc
cmp
cmpsb
outsl
sub
aas
push
cmp
int3
xlat
and
cld
in
repnz
rcll
mov
push
test
hlt
sbb
sbbb
sub
jmp
adc
inc
jns
clc
mov
in
sbb
jnp
dec
push
in
outsb
add
lods
or
pusha
xor
ds
fistps
mov
cmp
xor
jl
pop
daa
mov
sahf
rorl
jbe
add
pop
out
xor
sarl
and
leave
pop
sbb
add
add
mov
in
pop
cs
fdivl
xchg
jns
or
movsl
pop
pushf
add
jbe
sbb
mov
mov
daa
jbe
aam
inc
push
loop
pop
cmp
divl
push
orb
mov
sti
es
fisttps
add
imul
push
lret
stos
idivl
inc
jnp
mov
or
leave
cmp
adc
sahf
movsl
sbb
mov
fidivrl
aam
movsb
lcall
sbb
sub
pop
mov
sarl
fiaddl
xchg
pop
push
mov
cmc
jg
fs
mov
das
pop
jmp
jle
pusha
mov
adc
into
adc
jp
sbb
xor
push
sbb
test
rol
lods
cmp
cli
jne
lock
outsb
xlat
xor
sub
and
pause
and
xchg
push
mov
mov
or
jne
push
sbb
pop
sbb
imul
xor
cltd
or
or
xlat
lret
imul
outsb
adc
sub
neg
and
xor
and
ret
out
jae
fidivrs
cmp
mov
subl
shl
dec
jo
push
adc
icebp
add
mov
push
sbb
cmpsb
test
inc
mov
pop
cli
cmp
cli
insb
stos
ljmp
pop
std
dec
jecxz
add
popf
popf
test
fsubs
fdiv
int3
and
pop
pop
jmp
xor
cmp
mov
mov
or
add
jmp
repnz
adc
cltd
push
inc
mov
popf
push
repnz
xchg
or
loop
push
xchg
fidivl
mov
adc
stos
add
xor
mov
fsub
inc
inc
popf
fldenv
into
mulps
or
rclb
xchg
dec
in
out
mov
pop
ficoml
ja
enter
jns
sbb
xor
or
sub
xchg
pop
das
pop
fs
andb
push
push
cmp
mov
out
outsl
orl
aam
xor
inc
mov
sub
nop
and
stos
arpl
jle
dec
ret
sbb
stc
mov
adcl
cwtl
cli
aas
subl
insb
sbb
popf
pop
and
dec
or
adc
shr
push
dec
mov
mov
jne
insb
roll
sub
mov
xchg
dec
xchg
mov
aas
imul
out
pop
adc
add
sub
jne
pop
shll
sub
bound
xor
jns
ret
out
shlb
and
xchg
and
inc
hlt
stos
decl
mov
or
outsb
nop
or
inc
or
xchg
fdivrs
cltd
push
jp
call
mov
or
je
sbb
mov
mov
sbb
mov
xchg
stos
pushf
inc
or
xchg
movsl
cmp
popa
mov
fstpt
loope
mov
insb
icebp
out
pop
pop
mov
sub
movb
jge
out
dec
fldt
clc
xchg
test
mov
loope
push
jl
push
inc
inc
shll
scas
les
sahf
push
sbb
ret
pop
ret
xchg
hlt
xchg
loopne
pop
mov
lods
imul
daa
sbbl
sub
shl
cmp
sahf
decl
jg
jb
pusha
aam
adc
stos
xchg
addb
push
mov
jge
insb
mov
leave
adc
pop
aas
xchg
push
mov
cmpsb
mov
dec
sar
mov
dec
sub
mov
push
xchg
xor
mov
inc
sub
psraw
jp
loope
imul
ret
jl
fimull
andl
or
push
inc
pusha
mov
loope
decb
push
insl
mov
xchg
xor
jb
xchg
std
mov
pop
dec
aad
fs
out
loop
push
add
xor
ja
jnp
daa
dec
das
loope
and
call
pop
pop
add
or
sbb
mov
rcr
mov
cltd
jecxz
lods
inc
lds
lahf
ds
mov
aas
les
test
test
mov
pop
push
mov
xor
cmp
cltd
cs
cmpsb
cmpb
push
imul
mov
sbb
dec
imul
lretw
and
push
in
mov
adc
popf
jmp
sahf
dec
ficompl
ds
addr16
mov
js
xchg
out
cmc
mov
and
subl
sbbb
gs
iret
xchg
lock
lcall
push
ret
push
repz
fisubrl
lret
dec
popa
or
sub
movsl
popf
std
adc
js
sbb
popa
and
daa
sbb
aas
icebp
jbe
cmp
and
pop
clc
mov
dec
mov
mov
mov
pop
adc
dec
popa
mov
mov
xchg
xlat
aad
mov
or
ljmp
lret
lahf
adc
jbe
int
mov
jb
push
sub
ret
iret
popa
out
imul
sbb
mov
addr16
mov
and
inc
xlat
mov
adc
fdivr
stos
mov
int3
mov
addr16
sti
adc
pcmpeqd
imul
mov
jmp
push
popa
lahf
addr16
out
cmpsl
das
insb
and
divb
filds
popa
lds
mov
cmp
mulps
sti
test
inc
idivb
xor
jecxz
jno
inc
nop
call
or
imul
inc
push
jmp
sbb
movsl
pop
xchg
mov
cmpsl
addr16
xorb
add
mov
shrb
bound
lret
daa
arpl
sarl
adc
push
sti
fcomi
std
cmp
or
cmp
stc
ljmp
pop
lea
or
push
mov
mov
dec
outsb
pop
cmpsl
pop
xor
pop
adc
and
das
jp
iret
sar
es
mov
jmp
mov
scas
mov
mov
shr
adc
adc
mov
daa
jae
out
mov
or
or
sbb
mov
pop
or
adc
mov
lods
or
push
push
xchg
xchg
in
test
mov
jge
dec
jg
shl
sub
daa
xor
pop
xchg
out
push
dec
adc
xor
cli
bound
xor
inc
js
in
es
lahf
shlb
repnz
jmp
mov
aam
pop
mov
movsl
dec
xor
mov
testb
jle
jbe
jp
inc
jmp
arpl
pop
xchg
jbe
mov
inc
dec
jmp
mov
mov
outsb
inc
jle
push
pop
and
jbe
test
lods
shl
dec
outsl
scas
stc
dec
cmpsl
imul
popf
mov
xchg
xor
mov
outsb
pop
cmp
ljmp
out
inc
aam
mov
dec
jns
push
mov
ja
xchg
pop
xor
mov
fldt
jno
imul
push
in
and
add
fsubrl
imul
dec
in
insl
xor
mov
dec
pusha
add
mov
push
push
out
sbb
stos
mov
stos
mov
mov
das
or
xchg
cli
mov
dec
and
mov
mov
pop
lock
fnstsw
inc
lcall
push
repnz
or
mov
push
repz
movb
fcoml
out
out
inc
insb
imul
sub
inc
and
push
xor
movsl
push
int
jle
imul
xor
enter
popa
sbb
shl
orb
in
pop
add
ljmp
jno
push
or
hlt
and
inc
ljmp
xchg
jnp
jno
fisubl
or
jl
clc
mov
into
andl
and
mov
movsb
shll
nop
aas
sbb
fisttps
push
scas
aaa
xchg
and
mov
sbb
shr
imul
pop
fnsave
leave
aas
movsb
sub
mov
xor
adc
sbb
push
bound
repnz
jge
scas
nop
or
pop
leave
jbe
sub
cltd
pop
pusha
and
popa
add
pop
je
js
addr16
cmp
icebp
imul
jmp
inc
and
sbbb
inc
adc
jle
and
test
es
sbb
inc
mov
and
ja
and
mov
lods
repnz
push
mov
pushf
xchg
xor
sbb
inc
dec
je
xlat
inc
mov
push
sbb
or
inc
test
xchg
das
pop
mov
scas
jmp
xchg
sub
outsb
xchg
dec
and
inc
xor
cwtl
clc
xor
aad
add
movsl
lock
pop
jl
fisubl
push
or
dec
inc
les
sahf
fnsave
outsl
mov
cltd
lahf
and
das
enter
add
xor
mov
dec
pop
mov
data16
ljmp
pushf
aad
add
daa
addr16
jns
jge
pop
ds
mov
ret
mov
mov
aaa
xorl
jmp
repnz
pop
xor
iret
scas
jno
push
mov
data16
sub
xchg
adc
jbe
mov
xor
inc
or
data16
push
dec
jecxz
mov
adc
in
pop
mov
dec
std
int3
xor
ds
rcrb
js
enter
or
dec
inc
je
sub
pushf
dec
push
popa
loop
xchg
xorb
push
push
dec
imul
ljmp
cmp
push
hlt
mov
aad
and
stos
jne
or
or
pop
rcrb
and
pushf
lret
aam
lret
daa
or
sbb
shrl
mov
inc
sbb
or
inc
imul
adc
in
popf
scas
and
lods
dec
dec
test
loop
enter
insb
sub
outsb
cmpsl
jns
cltd
in
mov
idiv
inc
sub
and
push
outsl
je
cmp
xor
cmp
das
adc
call
and
push
and
mov
imul
testb
gs
int3
insl
shll
push
xchg
test
sub
cmpsl
scas
in
mov
rorl
dec
sbb
scas
shr
pop
repnz
popa
xchg
insl
mov
mov
dec
inc
outsb
bound
sub
pushf
pop
les
into
rorl
cmp
roll
adc
mov
sbb
mov
add
push
mov
and
mov
jmp
mov
cltd
dec
inc
mov
xchg
dec
dec
adc
stos
or
cmp
fists
inc
xchg
out
lods
movsl
push
mov
mov
mov
mov
and
pop
pop
movsb
cwtl
adc
mov
push
mov
jmp
scas
mov
lds
lret
jp
cltd
jo,pt
jne
or
in
mov
cmp
jne
mov
daa
int3
mov
adc
lea
repz
mov
mov
mov
jecxz
cmc
sub
xchg
out
scas
lahf
xor
mov
inc
pop
pop
cmc
ret
lahf
div
cmp
and
adc
jnp
and
lods
pop
or
lods
mov
lock
out
popl
pop
in
fisttpll
dec
in
inc
lcall
push
cltd
repz
sub
mov
sub
imul
adc
aam
aam
mov
pop
mov
or
pop
in
loope
pop
inc
add
pop
call
ljmp
mov
pushf
aam
lret
xchg
or
rorb
cmpsl
xchg
jo
ds
ja
adc
rol
int3
add
jmp
mov
jmp
sub
pop
shl
push
dec
push
jae
subl
ret
add
subl
sbb
inc
jbe
jb
or
std
into
sub
aaa
adc
insb
popa
jl
notl
add
inc
dec
push
packsswb
xchg
movl
pusha
adc
xchg
push
or
nop
adc
sbb
inc
in
inc
sbb
inc
loop
lahf
mov
xchg
nop
mov
push
lret
int
gs
cmpsb
mov
popf
shrl
scas
push
int
xor
sub
gs
add
inc
into
jo
and
je
sbb
repnz
pop
inc
mov
push
xchg
sub
push
movsl
movsb
xchg
test
mov
and
or
pop
jle
mov
ret
popa
or
mov
push
pop
sub
pop
dec
add
xlat
faddl
sbb
and
add
mov
lods
test
cmc
mov
sarb
mov
push
jae
out
cwtl
add
or
sbb
aad
pop
ret
fcmovbe
pop
dec
outsb
in
push
mov
dec
jns
out
xchg
push
scas
leave
lret
inc
mov
or
push
push
mov
fwait
pop
pop
xor
xchg
push
pop
xchg
or
shll
mov
push
outsl
inc
xor
jg
pmulhuw
push
and
popa
push
ss
loope
test
mov
mov
shlb
int
iret
lods
cmp
push
dec
inc
xchg
out
int
xor
lods
pop
lock
test
mov
das
push
lock
sub
test
or
add
fsubrl
insl
sub
and
push
popf
cmp
push
mov
mov
xor
xchg
xchg
cmpsl
lahf
xor
push
mov
test
repnz
andl
push
sbb
jnp
mov
lcall
pop
add
test
fcomp
in
inc
jae
repz
js
shld
dec
sbb
lret
dec
pop
adc
lret
sub
les
mov
inc
jbe
enter
add
lret
pop
dec
int3
repnz
fidivl
xlat
out
stos
cmp
je
in
xor
xorl
fwait
push
xchg
je
inc
in
aaa
in
push
test
outsb
push
push
dec
mov
mov
dec
fsubl
int3
and
pop
dec
xchg
lods
add
sahf
icebp
test
jo
dec
loop
fcmovnbe
arpl
or
nop
jmp
pop
mov
int3
xchg
and
in
popf
and
lret
leave
pop
mov
pop
push
xor
sub
push
sub
add
jo
sub
cltd
in
sti
testb
adc
mov
lds
xor
push
mov
jns
pop
paddb
fimull
jecxz
in
adc
sub
sbb
xchg
insl
mov
je
or
mov
inc
frstor
mov
xor
fisubrs
jne
mov
pusha
jo
icebp
das
lret
adc
push
mov
or
test
es
stos
xchg
push
adc
imul
push
push
mov
int3
popa
add
out
loopne
adc
cmp
push
inc
jecxz
fs
inc
or
fcoms
sbb
sub
rcll
xor
xor
in
mov
sbb
sub
lods
inc
ljmp
cli
arpl
add
sbb
stos
mov
sti
cmp
sub
negb
out
mov
mov
dec
inc
or
inc
adc
enter
fsubl
out
and
inc
mov
and
pusha
shlb
mov
orl
push
xchg
stos
mov
xor
xchg
push
popf
push
loop
loop
xchg
jp
test
or
aas
insl
push
mov
mov
xchg
inc
xchg
ret
mov
cld
sbb
lret
mov
pop
ficoml
sti
xchg
imul
or
sub
mov
cmc
jmp
ror
mov
lahf
push
or
jle
sti
jge
mov
sbb
leave
mov
and
sub
push
mov
ficompl
sub
xchg
xor
out
mov
fsubl
jnp
mov
or
push
cmpsl
or
inc
loope
sti
sbb
sbb
movsb
inc
xchg
in
mov
movl
aad
push
test
lcall
or
inc
mov
push
ljmp
iret
std
out
jl
dec
push
cmp
dec
jae
repnz
or
or
xchg
inc
adc
push
adc
pop
cmp
mov
rcrl
mov
cmpsl
cmp
push
adc
sbb
dec
add
cmp
mov
inc
add
in
cs
mov
jge
inc
mov
mov
je
shll
xor
pop
dec
cmc
lret
fisubl
popf
cmp
arpl
aas
cmp
lods
stc
xlat
insb
sbb
adc
lea
je
testl
test
out
cmp
data16
pop
inc
mov
lea
ficompl
stc
fmull
in
mov
or
rolb
lods
mov
std
adc
jp
push
jb
pop
adc
sbb
fcomps
scas
pop
sub
and
mov
jno
mov
lahf
leave
loop
dec
movsl
cmpsb
xchg
lods
adc
rcr
jg
jb
push
imul
lods
out
test
push
push
popf
jmp
push
push
pop
sbb
adc
into
test
loopne
cmp
or
out
mov
div
jle
push
xchg
adc
ljmp
jo
xor
aas
and
bnd
shll
and
nop
pop
out
icebp
mov
push
inc
fwait
cmpsl
into
cmpsl
shrl
enter
cmp
scas
xlat
aam
jnp
or
fwait
hlt
push
sbbl
mov
int
scas
mov
add
xor
stos
arpl
pop
or
addr16
aas
out
mov
cmp
or
cld
outsl
sbb
push
xor
sarl
imul
mov
aam
mov
aaa
int3
cmpb
test
jp
sti
xchg
roll
js
cmp
pop
aaa
jge
imul
stos
or
inc
ret
ja
lock
mov
cmp
mov
scas
bound
jae
mov
in
rcrl
out
cmp
out
stos
xor
inc
js
mov
or
arpl
mov
pop
add
fldt
imul
ljmp
fdivrs
mov
and
leave
call
dec
add
pop
dec
loope
bound
sahf
test
push
ljmp
dec
les
out
mov
fiadds
or
cmp
imull
aam
shlb
jb
and
les
jo
call
and
out
jbe
les
scas
iret
hlt
cld
jns
lds
dec
andb
sub
aad
or
dec
daa
addr16
push
scas
inc
xchg
mov
adc
imul
inc
push
jnp
cmp
adc
inc
lahf
cltd
mov
add
sti
cwtl
ljmp
and
lret
popa
mov
lds
movsl
rcrl
push
enter
inc
cwtl
xchg
mov
imul
xchg
mov
pop
push
push
adc
hlt
sub
push
xchg
sbb
cli
jle
jno
call
lds
int3
xchg
roll
pusha
push
into
cwtl
shr
pop
loopne
push
inc
push
push
mov
mulb
out
cmpsb
mov
shrb
fcom
sbb
aaa
inc
pop
push
ljmp
push
mov
push
mov
fs
cmp
insl
pushf
insb
dec
sbb
or
cwtl
fsub
add
push
pop
jp
mov
or
fs
xor
mov
icebp
lret
cli
insb
mov
daa
adc
inc
aas
lret
xor
bound
icebp
mov
push
cmp
xchg
lock
rolb
repnz
jmp
test
and
pop
xor
movsl
mov
fldcw
cmp
aam
pop
jmp
add
cltd
inc
push
sub
xchg
adc
adc
add
cli
ds
push
iret
push
push
out
shlb
ss
and
js
addr16
cmp
sahf
cmp
mov
je
pop
mov
push
imul
pop
mov
test
push
and
test
mov
push
pop
into
adc
je
leave
int3
lret
and
pusha
scas
cwtl
repz
lds
movsb
fdivrl
ret
icebp
fbstp
sub
pop
in
mov
push
test
pop
xor
xchg
dec
mov
pop
inc
xchg
sub
daa
xor
fimuls
jne
mov
mov
sti
enter
cmpsl
lock
adc
mov
add
add
mov
inc
and
push
je
js
add
inc
das
adc
addl
movsl
mov
fwait
sbb
dec
sub
sbb
sbb
cmpsl
xchg
add
ficomps
mov
lods
in
lods
cmp
push
sub
idivb
cmp
sbb
movsl
test
lds
sahf
inc
fsubs
out
inc
ds
and
cmpsl
pop
mov
mov
ds
and
bound
loope
jo
dec
fstpt
xor
in
xlat
jae
and
push
dec
pop
ficoms
inc
cld
test
adc
mov
pop
das
xor
out
xchg
xchg
iret
pop
xchg
arpl
test
jge
imul
or
inc
xchg
jg
stos
cli
mov
cld
mov
push
dec
sahf
jl
lds
popa
dec
cld
fldenv
sarb
inc
loope
dec
inc
daa
push
scas
fsub
jbe
ret
jb
lods
mov
lods
xor
into
mov
dec
insl
xchg
or
mov
dec
and
scas
jnp
adc
aas
xor
loope
fcoms
lret
sub
cmpsb
add
pop
mov
jae
push
push
dec
xchg
jl
pop
inc
call
adc
rsqrtps
xchg
sahf
addr16
mov
sbb
sbb
lahf
inc
jle
dec
xlat
jp
fldenv
push
jbe
rorl
lret
hlt
loopne
in
mov
aaa
aam
repz
cmpsl
clc
mov
addr16
sbbb
mov
lret
iret
mov
dec
mov
sub
movsb
dec
jg
stc
rclb
mov
jnp
int3
repnz
adc
imul
pop
mov
in
out
dec
cli
mov
mov
push
push
lock
sahf
test
hlt
pusha
insl
bound
sahf
aad
iret
lock
je
jecxz
and
out
mov
dec
jmp
mov
insb
sub
aas
or
adc
mov
xor
shlb
leave
subl
fisttpl
jg
pop
in
or
dec
sub
push
or
jno
xchg
leave
std
xlat
test
test
cmp
insl
out
pop
pushl
negb
inc
loope,pn
jg
dec
xlat
pop
or
mov
mov
jbe
test
hlt
aam
fidivs
rclb
sub
cmp
das
xor
jae
and
imul
push
pop
bnd
enter
mov
add
push
shlb
aas
loope
pop
in
cwtl
mov
xchg
insb
pop
dec
or
dec
xor
pop
bound
dec
xor
inc
cli
jecxz
lahf
mov
cld
enter
ret
outsl
iret
jl
in
repnz
mov
xchg
mov
jb
loopne
lock
outsl
pop
orb
icebp
shlb
loopne,pn
out
mov
add
mov
mov
pushf
testl
pop
pop
or
mov
xchg
and
add
mov
in
dec
int
sub
into
leave
mov
cs
mov
xchg
lahf
pop
sbb
mov
dec
out
mov
fbld
mov
insb
cmp
push
dec
dec
sub
ja
mov
dec
stos
cmp
sahf
mov
pushf
add
push
sbb
jb
test
mov
xchg
lock
adc
pop
mov
cmp
sbb
add
sbb
mov
jmp
sub
xor
dec
jp
ret
jns
loopne
popa
sub
es
orl
push
mulb
out
cmpl
mov
sbb
or
mov
aad
push
repz
dec
mov
lret
adc
jnp
mov
clc
testl
inc
pop
jmp
push
lods
pop
insl
mov
movsl
pop
xor
out
inc
xor
and
inc
imul
dec
ficoms
das
sbb
ret
xorl
es
fldenv
scas
movsl
mov
dec
and
jg
loopne
xorb
mov
std
mov
pop
nop
repz
in
pop
cmp
lds
xorl
lahf
cmpsl
push
insl
ja
dec
lret
test
inc
pop
or
jmp
cmp
es
jecxz
push
test
mov
dec
push
js
push
cld
or
mov
dec
pop
pop
dec
test
mov
jl
imul
outsb
dec
in
outsb
ds
gs
mov
jp
test
les
xchg
call
mov
jmp
xor
mov
push
fidivrl
xor
daa
ret
dec
xchg
pop
lea
cmpsl
push
xorl
push
dec
jecxz
inc
cmp
and
adc
mov
test
inc
cmp
lea
mov
jno
iret
ljmp
icebp
dec
das
jns
push
stos
into
movsl
xchg
stos
jmp
fcmovnbe
jl
and
xchg
jmp
mov
mov
scas
push
sahf
cmp
jle
push
push
mov
mov
and
add
adc
addb
mov
jns
sub
mov
nop
add
addr16
fstps
subl
jb
mov
push
repnz
mov
jo
sbb
jno
into
sahf
jl
fiaddl
int3
push
add
dec
pusha
int
add
fs
mov
pop
push
push
dec
mov
cmp
js
xchg
pusha
test
mull
sub
sbb
outsb
push
scas
xor
loop
lea
inc
jge
jo
jecxz
out
call
aad
cmp
addb
xlat
mov
int
xchg
insl
in
les
jge
xchg
push
sub
scas
repnz
sub
cmc
sbb
mov
mov
pop
push
loopne
xorb
aad
pushf
sbb
icebp
inc
and
outsb
mov
pop
dec
add
out
sbb
adc
sub
gs
xchg
push
jae
fs
pop
in
hlt
call
cli
mov
add
rcll
push
mov
das
mov
pop
pop
pop
inc
cli
das
lret
inc
fnstenv
faddl
xchg
mov
push
xor
enter
addr16
jnp
insb
lcall
fwait
pusha
cwtl
ljmp
mov
mov
mov
dec
mov
inc
sub
jle
mov
cld
or
push
in
lret
sub
dec
fwait
sti
pop
loopne
mov
cmp
add
push
mov
xor
inc
lcall
inc
adc
xchg
and
jle
movl
mov
andb
inc
inc
scas
pop
shrl
or
jg
sbb
mov
in
push
test
dec
xor
mov
dec
mov
jp
dec
cwtl
sub
fxch
cltd
mov
sub
sub
leave
cmp
jae
xor
mov
or
ret
xchg
jp
mov
shll
sub
sti
popf
or
ret
add
cmpxchg
cmp
xchg
cli
enter
out
lret
sarl
mov
cmp
imul
fcompl
and
mov
loopne
stc
sbb
push
pop
data16
test
addr16
lods
push
test
inc
mov
mov
push
popa
xchg
mov
in
lock
stos
stc
fidivrs
xchg
jp
jb
mov
add
iret
mov
lea
mov
mov
jmp
sbb
add
sbb
push
repnz
ja
stc
iret
lock
cmp
lahf
lcall
pushf
mov
sub
inc
sbb
and
into
incb
and
out
leave
leave
add
ret
test
pop
xor
xchg
mov
jecxz
mov
ds
iret
push
add
mov
ss
cmp
inc
sub
push
push
arpl
stos
loope
outsb
inc
jge
imul
test
fnstcw
out
mov
xor
sub
mov
aaa
xor
lret
js
test
pushl
ja
pop
ficoms
add
aaa
lea
cwtl
xorb
adc
adc
dec
out
jle
bound
outsl
pop
int3
pop
ljmp
out
adc
aad
nop
imul
jbe
or
ljmp
icebp
hlt
lock
gs
push
mov
push
lret
mov
sbb
xor
cmpsb
push
nop
fbld
add
mov
sti
dec
out
jbe
mul
jae
or
mov
sub
rorl
cwtl
scas
push
mov
dec
sub
jbe
and
xor
mov
inc
sbb
xchg
js
xchg
insb
mov
xor
scas
lea
sbb
xor
jno
pop
mov
es
jecxz
cmc
into
cmpsb
arpl
insb
popf
xchg
ss
sub
push
je
mov
addr16
das
out
xchg
arpl
data16
jle
insb
add
lret
rcr
jge
imul
decl
test
mov
dec
or
mov
lret
push
lods
mov
gs
mov
jmp
jl
or
add
dec
or
push
js
pop
stos
mov
adc
xor
push
popf
outsl
cltd
cwtl
add
push
sub
inc
or
fcmove
sub
enter
adc
fsubp
stos
adc
xor
jmp
rep
movsl
movsl
out
pop
push
jne
mov
jae
dec
getsec
insb
data16
mov
cmp
jle
fcmovbe
nop
inc
xchg
dec
pop
add
pop
mov
inc
add
loopne
jp
fdivr
out
ss
repnz
push
loopne
enter
lock
mov
xor
jne
adc
jmp
stos
push
mov
sbb
js
xor
popf
lock
xor
cmp
in
ja
stos
pop
ljmp
lea
sahf
pop
jg
sahf
or
pop
rcll
xor
ret
push
jnp
inc
jle
pop
sub
cmc
push
mov
dec
neg
inc
dec
or
enter
xor
fstps
jge
inc
test
lea
or
inc
fcmove
adc
cmpb
int
pop
aas
aaa
or
cmpsb
ds
int
or
outsl
mov
fimull
adc
scas
fwait
lret
cmc
mov
scas
ret
add
pop
cmpb
stc
push
and
xchg
iret
fs
sbb
pop
mov
push
jl
lcall
ficomps
xor
lods
mov
push
mov
adc
xchg
push
and
iret
jge
xchg
cwtl
mov
mov
ror
cmp
and
into
movsl
sbb
mov
idivb
test
ret
adc
xor
mov
pop
jo
sub
subb
dec
stc
xchg
xchg
push
cltd
inc
and
or
cmp
push
out
jbe
mov
fprem1
mov
cli
xchg
iret
mov
xchg
ss
jl
ds
mov
mov
test
dec
insl
lods
mov
mov
mov
rorl
clc
flds
loopne
jns
sbb
jnp
mov
loopne
inc
push
test
arpl
lahf
in
push
cltd
and
aas
jmp
out
pop
sbb
add
mov
sbb
pushf
imul
pop
popf
jge
push
in
push
fwait
push
and
lret
cmc
popa
imull
dec
inc
push
cmp
and
mov
out
in
xor
inc
adc
sbb
xor
imul
mov
or
mov
cmp
mov
pop
sti
cmp
push
outsl
rclb
pop
popa
insl
cs
cmpsl
jge
mov
xchg
decb
shl
dec
test
loop
push
addr16
iret
test
cs
and
sub
fnstcw
sbb
sbb
je
jno
rolb
pop
sbb
mov
cltd
pushf
addl
mov
sub
mov
mov
js
and
mov
mov
jnp
pop
sub
pop
adc
and
ret
xchg
dec
push
pushf
add
je
sub
jp
add
push
fisubrl
sub
and
or
pop
icebp
cmp
xor
ret
dec
xor
pop
jmp
rcll
mov
mull
sub
mov
test
loopne
std
insl
xchg
cmp
aas
add
dec
mov
mov
lock
mov
inc
sahf
jmp
int3
iret
hlt
out
mov
xchg
mov
fisttpl
pop
add
std
ss
popf
inc
cmp
imul
xchg
jmp
imul
mov
mov
pop
stos
pop
adc
xchg
movsl
and
xor
or
mov
fiaddl
aas
and
cli
out
mov
jnp
mov
or
or
jecxz
sti
aad
add
xor
push
popf
mov
negl
cmp
mov
sbb
lock
or
in
adc
jns
int
or
pop
pushaw
adc
and
jb
shlb
in
ficompl
pop
and
push
pop
les
push
push
cltd
cmp
mov
mov
dec
subl
ret
sbb
push
push
add
aad
lds
pop
mov
mov
lock
push
and
in
mov
je
dec
cltd
cmove
add
sub
ljmp
jg
test
movsl
sub
test
daa
xchg
fimull
or
mov
lcall
fwait
xor
ds
mov
cs
dec
mov
je
inc
mov
add
movsl
mov
xchg
into
mov
out
stos
cmpsl
out
shrl
mov
js
bound
mov
imul
add
cmp
std
fildl
sub
scas
movsl
outsb
jl
bound
dec
gs
stos
int
movsl
idivb
scas
dec
adc
or
cmpsl
fadds
mov
sarb
jae
adc
fildll
outsb
jne
jg
adc
sub
rorb
and
dec
outsb
cltd
or
outsb
push
clc
test
call
scas
mov
jno
ret
sti
jp
imul
ret
jmp
push
jl
mov
dec
lods
and
lcall
add
imul
loop
or
mov
adc
xchg
ret
popf
frstor
or
je
jne
pushf
mov
xchg
adc
in
jbe
mov
ds
das
mov
dec
fisttpl
dec
and
sbb
sub
inc
out
dec
xchg
repnz
mov
fbstp
pop
call
nop
xchg
mov
js
int3
cmp
and
sub
iret
inc
ds
nop
popl
add
adc
jmp
mov
mov
cmp
jo
test
out
inc
inc
dec
lds
repz
or
sbb
xchg
mov
jp
insb
scas
pushf
pop
incl
fsubs
insb
cmpsl
pop
aas
repz
sti
push
inc
addl
and
dec
sbb
stos
push
adc
outsl
push
loopne
jae
inc
sbb
pop
add
lret
dec
inc
pop
xor
pop
dec
or
lods
xor
pop
sbb
adc
add
call
idivl
cmp
das
lock
push
mov
push
adc
jb
or
repnz
aam
out
push
push
bound
add
arpl
jae
in
pop
out
and
and
inc
fucomi
into
mov
fdivs
pushf
cmp
fcom
mov
push
je
addr16
sahf
inc
test
scas
xor
lret
call
xor
xchg
cmp
test
mov
loope
popf
mov
neg
cs
jo
adc
insb
nop
sbb
xor
jg
into
lds
test
push
fwait
enter
jbe
or
rcll
movsb
inc
mov
push
and
out
addr16
shrb
lods
out
add
idivb
push
pop
xor
mov
pop
test
cmpsl
lods
pop
or
xor
rcll
cmc
xchg
or
dec
call
popf
mov
into
push
cltd
std
rcll
movsw
rcrl
int
aas
add
leave
js
imul
andl
or
push
xor
pop
lds
jo
js
and
jb
lock
pop
dec
cmp
cmpb
fistps
xchg
jl
fsubp
loop
test
mov
push
into
sub
test
inc
jno
mov
jae
push
jae
arpl
cmpsb
jg
pop
jne
loopne
sub
dec
adc
lods
and
in
xchg
mov
push
dec
adc
insb
cmpsl
in
arpl
pop
jmp
push
mov
jns
ss
push
sarb
cmp
cmp
add
cmp
lods
jl
add
cmpsl
out
add
push
dec
call
iret
jns
shrb
je
ja
shll
prefetch
or
mov
cmp
cmpsl
and
inc
jno
xchg
or
mov
xchg
pop
fadd
adc
push
ret
call
pop
inc
insl
insl
lret
pop
std
shlb
call
or
mov
xchg
push
ljmp
or
jge
adcb
je
xlat
ret
fwait
or
jge
cmpsb
stos
inc
stc
jle
inc
mov
dec
cltd
and
pushf
dec
dec
dec
int3
jp
cs
icebp
icebp
dec
jle
push
jg
pusha
call
push
icebp
xchg
jnp
dec
jecxz
shll
outsb
fstpl
les
ds
mov
xchg
push
into
cmp
repnz
aad
in
cmp
push
jle
lock
push
jmp
xchg
mov
mov
pop
or
or
in
jb
dec
les
arpl
bound
jp
cld
adc
sti
incl
pop
adc
sub
sti
push
std
inc
lahf
or
xor
addb
and
in
arpl
sbb
out
sub
jne
dec
ss
into
push
ja
outsb
inc
pushf
push
add
pop
cltd
dec
mov
leave
cmp
or
add
mov
scas
sbb
mov
dec
in
rcr
imul
mov
sti
jb
packsswb
mov
std
aam
adcb
xchg
sahf
and
xchg
test
dec
and
repnz
mov
addl
sub
repz
aas
into
stos
imul
repz
dec
fists
pop
dec
xchg
xchg
out
fnop
cli
jno
add
add
shl
cmp
es
add
stc
mov
add
and
test
icebp
xor
push
pop
jp
aad
cmp
out
or
in
pop
xchg
insl
into
jge
dec
xor
fprem1
add
cmp
popa
cwtl
jge
shl
iret
std
xchg
in
ret
xorb
jnp
push
aam
aad
mov
pop
fwait
inc
push
pop
push
mov
stc
xchg
and
pop
xlat
mov
cmpsb
xchg
add
add
roll
or
lods
incl
pop
push
sbb
sbbl
leave
sarl
mov
shll
push
inc
jecxz
xchg
adc
sub
or
push
mov
shlb
push
pop
or
adc
imul
popf
fidivrs
cwtl
jmp
jnp
cltd
rcrb
mov
mov
push
std
jg
fisubrl
int
lahf
and
iret
and
jg
pop
roll
mov
xchg
fistl
mov
out
pushf
rcr
mov
sar
sbbl
dec
loope
lahf
xor
inc
push
xor
mov
dec
fildl
push
mov
jbe
sub
xor
test
bound
js
xchg
mov
inc
fstpl
aas
outsb
bound
cmp
sub
mov
popf
mov
stos
xchg
testl
pop
jne
sub
ja
sbb
add
push
mov
pop
sub
pop
pushf
les
enter
cmc
imul
out
dec
cmp
jnp
push
lea
js
in
ds
jp
mov
mov
sahf
fiadds
inc
fistps
ret
mov
xor
aaa
push
int3
js
fdivs
mov
fisttpl
sub
cli
ret
push
sbb
mov
loope
mov
xchg
and
mov
inc
jle
gs
sbb
fcmovbe
inc
push
mov
lock
test
insl
into
mov
lock
and
imul
jecxz
adc
jmp
xor
push
sti
mov
sub
adc
shl
aad
cmc
fldl
or
lea
push
jbe
pop
xrelease
fcomi
cmp
gs
ja
lods
add
call
pop
test
pushf
das
lahf
andb
cmp
xor
int
mov
cmpl
cmpsb
adc
xor
dec
lret
push
sahf
addr16
test
or
push
mov
mov
aam
rol
mov
outsl
jg
pop
das
dec
jnp
sub
push
imul
icebp
lahf
loope
cmpsl
xchg
icebp
inc
cmc
dec
xchg
enter
pop
arpl
ss
mov
mov
cmp
or
enter
push
shlb
pop
mov
icebp
dec
add
add
mov
inc
sbb
cli
cwtl
lods
xor
and
pop
fs
js
movzbl
xchg
adc
pop
sti
jge
pop
adc
ja
adc
mov
ljmp
mov
cmp
mov
ljmp
fldl
popa
or
mov
cmc
mov
insl
nop
and
aas
push
dec
fcmove
int3
and
xchg
outsb
mov
jp
sub
push
xchg
mov
xchg
rorb
mov
cltd
out
ret
or
cmpsl
rcrb
iret
into
fnsave
inc
or
dec
jmp
push
jne
and
jne
and
cli
in
adc
xor
adc
ljmp
data16
or
inc
js
les
int
add
and
xorb
or
daa
cld
adc
xchg
fimuls
in
lods
popa
lret
mov
dec
rcrb
lds
mov
xor
pop
adc
xchg
dec
fnstsw
aas
shlb
sbb
push
stos
mov
add
imul
aad
sbb
push
test
cwtl
dec
xchg
shlb
das
fs
les
fiadds
adc
xlat
jno
or
inc
sbb
leave
xchg
jno
aad
out
cmpsl
jle
jecxz
test
push
add
pop
add
push
sbb
pop
out
js
dec
and
or
sar
out
inc
js
je
pop
mov
shl
outsb
xchg
push
aam
insb
add
inc
push
xor
lock
leave
add
aad
jne
cmpsb
xor
bound
xchg
cmpsb
or
push
or
jns
inc
mov
cld
jg
repnz
js
call
bound
lret
push
repnz
mov
mov
add
mov
dec
inc
les
popf
incl
inc
push
rcl
xor
mov
push
cmpsb
loopne
sbb
mov
aad
lods
xor
jns
pop
out
cltd
sbb
cmpsb
xor
into
movsl
aam
sbbl
out
and
xchg
movb
cmp
mov
push
hlt
jne
push
pmulhuw
lods
addw
mov
incb
and
mov
jb
repz
adc
frstor
push
xor
mov
lods
rcr
lret
nop
loope
jge
sahf
mov
shll
sti
cs
sbb
and
repz
sbb
arpl
add
test
imul
xlat
or
dec
das
or
shr
call
jae
mov
jno
pop
mov
mov
jp
insb
scas
adc
iret
fistl
sahf
push
lds
cli
and
call
and
mov
repnz
addr16
push
test
jecxz
dec
addr16
out
out
xchg
sub
or
cli
fildl
jns,pt
sbb
fcoms
push
xchg
subb
xchg
and
dec
xchg
jae
pop
cmp
dec
push
orb
notb
xor
dec
adc
das
rcrb
and
cmp
dec
sub
jp
adcl
scas
push
fcmovnu
and
ljmp
add
bound
rolb
xor
sub
pop
les
je
lea
shl
incl
jb
lea
clc
jl
shl
pop
inc
movsb
inc
in
xchg
dec
or
jl
pop
stos
push
xchg
cld
sub
outsb
push
cli
xor
xor
int3
scas
je
hlt
int3
in
or
daa
cs
cmpsl
cmp
xor
subl
dec
xor
xchg
stc
mov
jae
popa
arpl
notb
cmp
inc
neg
imul
loope
cmp
out
ja
adcb
xor
add
mov
outsl
mov
dec
add
ficoml
jge
pusha
cwtl
imul
popf
adc
sahf
outsb
mov
cmpsl
jge
jg
dec
cld
call
dec
scas
scas
xor
sbb
mov
cmpsl
sbb
je
adc
sbb
push
adc
cld
popa
scas
mov
and
cmp
in
insb
cmpsb
fisubrl
inc
cs
fwait
sub
lods
cmp
lods
in
adc
or
mov
adc
insb
and
pop
mov
shrl
mov
and
xchg
es
and
xchg
mov
mov
adc
sahf
cwtl
pslld
test
dec
mov
pusha
out
imul
pop
dec
nop
xorl
xchg
lea
jp
or
cli
ljmp
sub
and
cmp
add
xor
add
fdivr
js
sub
sarb
aaa
or
std
seto
clc
inc
int3
xchg
xchg
pop
outsl
lcall
aam
lcall
push
nop
ficompl
pop
xchg
sub
push
and
repnz
icebp
mov
gs
int3
xchg
adc
xor
xlat
xchg
push
sub
mov
or
adc
in
dec
scas
rcr
inc
push
dec
cltd
insb
insb
dec
lcall
fwait
nop
dec
mov
out
pusha
and
fstpl
cmp
mov
stc
jno
inc
pop
je
lret
sbb
push
lea
sub
mov
movsl
sbb
sub
jo
xchg
in
movsb
gs
mov
push
xor
aas
dec
popa
mov
fimuls
xchg
fwait
sub
sub
adc
mov
dec
ds
ja
sub
cmpsl
repnz
fimuls
push
pop
and
mov
xor
sub
out
stos
push
xor
jnp
ljmp
push
sub
cld
cmp
inc
sbbl
out
jle
lret
inc
cmp
ja
jnp
dec
orl
xchg
fmul
sub
mov
dec
test
out
dec
test
lret
shl
inc
and
mov
sti
mov
mov
les
push
or
xchg
int3
push
fwait
imul
addr16
insb
pop
scas
pop
xor
roll
push
and
mov
push
mov
aaa
mov
jbe
popa
sahf
adc
mov
push
push
inc
inc
lods
das
shlb
loopne
out
xchg
dec
mov
xchg
ret
outsb
leave
or
xor
pop
scas
push
imul
mov
call
sbb
pop
cmp
add
in
jne
jl
mov
mov
sbb
hlt
ret
rorl
jp
loopne
add
test
or
cmpsl
cmp
test
mov
outsl
movsb
or
or
mov
mov
in
aad
mov
sti
mov
xor
out
cmp
int
shlb
out
add
iret
pop
sub
lods
fnsave
push
xor
ret
xchg
pop
lods
push
and
arpl
push
test
sbb
cmp
call
add
lret
xchg
icebp
ljmp
xchg
iret
sub
in
xor
jmp
pop
out
lea
sarl
js
push
jge
loope
xor
inc
pop
cli
dec
es
mov
mov
ljmp
inc
fs
fcmovne
data16
test
ret
xchg
pop
test
dec
xchg
jbe
aam
aas
pop
push
or
mov
pusha
rcl
pop
cli
push
cmpsb
lahf
loopne
cmp
jge
jle
popl
push
adc
inc
jbe
ret
mov
enter
fucomip
mov
pop
mov
adc
inc
dec
xor
aaa
stos
add
xchg
cmpsl
mov
inc
pop
push
out
mov
mov
cmp
inc
cmp
push
or
in
jns
push
sub
roll
and
loop
fs
adc
sub
xchg
in
pop
out
pop
inc
stos
push
or
shll
gs
jns
xchg
idivb
and
jp
andl
shl
ds
jecxz
jbe
jecxz
lods
sbb
mov
clc
xor
stc
sub
push
out
pushf
or
or
pop
subb
jns
push
dec
mov
and
and
xchg
inc
mov
jb
ret
pop
adc
and
cld
add
aam
sbb
inc
cmpsb
sub
repz
dec
mov
mov
adc
or
sbb
pushf
jo
pop
jecxz
shll
add
aad
jle
cltd
mov
jne
dec
sbb
out
mov
push
mov
mov
lcall
add
mov
mov
jnp
sbbl
pop
jae
adc
pop
mov
shlb
xchg
hlt
test
fwait
pop
jnp
stos
xlat
pusha
jno
cmp
stos
jb
add
dec
icebp
cmp
pop
jbe
adc
movsb
lret
gs
in
push
dec
adc
and
add
stos
pop
xor
cmp
inc
test
scas
rolb
imul
test
ss
mov
bnd
mov
lods
push
add
and
int3
adc
xor
loopne
test
mov
insb
jge
sub
rol
shl
test
pop
sbb
cmpsb
xchg
xchg
test
bound
fisubrs
jns
mov
nop
fcmove
mov
push
leave
mov
adc
or
xchg
cmp
outsb
das
dec
outsl
lds
xchg
out
and
mov
jmp
cld
in
test
dec
shlb
scas
insl
mov
sbb
push
sub
fdivs
mov
xchg
jmp
sub
inc
sahf
icebp
push
test
call
loop
jnp
out
out
shl
mov
or
xchg
jmp
sbb
pop
mov
inc
int3
enter
inc
adc
cvtdq2ps
jp
push
jae
lock
fdivs
or
je
dec
xabort
jg
loope
daa
inc
ret
push
pop
xchg
addr16
out
pushf
insb
fcoms
mov
or
fstps
sti
dec
lcall
cmpsl
sar
mov
cmp
add
bound
hlt
pop
ja,pt
jne
pop
lds
aaa
xor
push
sub
cmp
in
adc
push
fdivs
pop
dec
or
lea
inc
dec
dec
sub
aam
ss
les
mov
xchg
or
jae
sahf
dec
sti
sub
sbb
dec
adc
xor
xor
jle
jbe
scas
loop
dec
fwait
jle
sub
gs
movsl
inc
and
xor
push
add
mov
or
out
sub
sbb
push
dec
in
jg
stos
xchg
int3
inc
push
iret
out
inc
test
in
out
push
sbb
xor
addr16
push
pop
jb
push
out
xchg
test
outsl
sbb
iret
dec
or
imul
push
xor
mov
cld
scas
std
adc
into
sbb
sbb
lea
imul
cli
out
cmpsl
xor
addr16
dec
mov
test
or
pushf
mov
cmp
pop
cltd
imul
adc
add
mov
lcall
sub
mov
mov
mov
scas
adc
mov
xchg
mov
out
mov
iret
data16
pushf
push
leave
adc
add
data16
in
or
dec
inc
idivl
aam
push
inc
xor
and
dec
insl
push
shl
jo
dec
cmp
add
mov
bound
cmp
mov
mov
add
fisubrs
in
movsb
mov
aas
xor
inc
xor
jb
mov
sti
xorl
loop
incl
cmp
addr16
cmp
in
xchg
lret
daa
mov
xor
xor
push
aas
cmp
rorl
mov
push
and
sbb
jecxz
inc
popf
adc
pop
pop
xchg
cmc
repz
int
fstps
jecxz
xchg
dec
pop
cmpl
lea
mov
mov
aas
data16
add
sbb
mov
aas
rcrb
xchg
loop
cmpsl
loopne
pop
adc
rorl
test
xchg
push
jno
sti
jmp
jno
adc
mov
add
sub
sbb
rcrl
mov
out
and
int
lock
xor
mov
mov
dec
mov
popf
sti
mov
popf
jae
nop
xchg
fmul
pop
filds
cld
into
mov
loopne
mov
or
add
mov
jb
fsubrl
inc
push
ss
sub
imul
jnp
cli
jbe
xor
xchg
xchg
es
jb
jmp
lret
xchg
icebp
nop
scas
imul
test
int
ds
or
in
jg
mov
stc
jg
xchg
scas
sub
sub
xor
inc
in
cli
fisttps
pop
daa
cmpsb
das
jp
dec
jb
lock
addl
retw
loope
mov
lret
sub
cmp
iret
imul
cmp
jno
push
cmovbe
test
cmp
or
pop
lods
movsb
xchg
data16
jp
outsl
mov
push
ljmp
imul
push
pop
repz
rdrand
sahf
jae
scas
arpl
push
xchg
xor
in
das
cwtl
cld
jnp
mov
mov
fnstenv
jb
sti
mov
jb
cmp
sarl
mul
push
add
sar
dec
adc
xchg
in
shrl
out
call
dec
in
mov
arpl
cltd
ret
jl
fildl
iret
int
sarl
jne,pt
sbb
xchg
shlb
cmpsl
sub
mov
cltd
outsl
and
xchg
dec
test
xlat
out
fnstcw
push
lret
adc
xchg
adc
ret
mov
mov
push
cmp
pop
orb
rolb
in
add
xchg
cmp
test
xchg
adcb
filds
adc
pusha
int3
mov
dec
adc
adc
scas
jmp
out
dec
sbb
adc
mov
and
dec
dec
lock
mov
cmp
std
fwait
jns
add
xlat
and
enter
push
xchg
inc
out
mov
inc
xor
dec
movsl
inc
adc
xchg
aaa
mov
and
insb
mov
movb
jo
stos
stc
cmp
pop
addr16
xchg
jae
push
inc
or
imulb
addr16
adc
mov
xor
aas
dec
js
aad
sub
xor
cltd
sbb
pop
je
push
out
frstor
add
leave
cltd
cltd
and
fadd
std
sub
mov
divb
xchg
cmp
sbb
jge
pop
sub
fcomp
sahf
cmp
fwait
roll
or
mov
lods
push
fsubrl
cmp
les
scas
cmp
repz
xor
fst
sub
jmp
rolb
mov
fcmovnbe
data16
cmp
and
and
cmpsb
test
ljmp
insl
pop
push
adc
mov
mov
cmp
mov
fcmovu
testl
mov
sub
test
push
cmpsb
ja
mov
imull
pushf
lods
arpl
or
arpl
mov
aaa
jne
je
dec
stc
lcall
jns,pt
jmp
mov
sbb
enter
mov
jb
iret
pop
xor
rcrl
add
les
dec
or
dec
enter
dec
push
outsb
mov
mov
cmpsb
les
imul
int
data16
push
in
xchg
push
outsb
fdivrl
xlat
mov
stc
cmc
jno
mov
les
scas
push
push
xchg
shrb
jmp
sub
jl
add
mov
mov
and
mov
addb
add
push
fidivrs
pop
ret
lods
or
hlt
mov
vpsrad
push
ret
cmp
adc
cli
ret
push
lea
cmp
loope
jmp
sub
movsb
into
insb
addl
mov
pop
dec
scas
jle
sbb
or
inc
int3
lods
mov
mov
inc
test
sbb
jnp
adc
sub
lahf
ss
sbb
adc
add
pop
sbbl
xor
enter
out
icebp
dec
pop
sbb
add
xchg
aas
jo
nop
inc
aad
pop
sbb
sbbl
stos
xchg
mov
cmp
dec
out
mov
jns
aaa
and
sbb
cmpsl
xor
cmp
pop
loop
mov
sti
or
enter
mov
cmpsb
jnp
mov
aas
enter
mov
push
inc
dec
rcrb
push
pop
xlat
stc
fldcw
sub
push
lcall
shrl
xor
adc
jne
fdivrl
mov
mov
shrl
adc
movsl
and
stos
notl
dec
enter
repnz
sbb
cltd
dec
push
pop
push
loope
lods
cmp
mov
sbb
pop
cwtl
mov
clc
lods
clc
cmp
push
dec
mov
sub
and
aas
mov
xchg
mov
and
jbe
mov
jo
xorb
sahf
insl
lret
sub
fdivp
jns
jl
mov
mov
jb
cld
aad
sub
pop
jno
jns
in
fcomps
sbb
and
roll
or
jp
hlt
xor
sti
add
or
add
orb
ss
mov
mov
sbb
push
xchg
dec
data16
fcomip
sub
pop
inc
insb
cmpsb
pop
pop
mov
xchg
in
add
xlat
arpl
call
dec
and
clc
sub
stc
fistps
fisubrs
jb
ss
xchg
dec
xchg
call
repz
imul
pusha
add
leave
push
jns
jnp
pop
nop
loope
adc
daa
jle
adcb
push
bound
ret
add
rol
xor
xchg
mov
jecxz
daa
sub
clc
or
push
mov
mov
mov
sar
das
rol
fcoms
test
out
pop
pop
sbbl
sub
push
xor
cmp
push
add
and
out
xor
dec
loopne
add
cmpsl
pop
aaa
shll
inc
jmp
inc
pushf
ret
fiadds
repz
je
loop
int3
js
scas
xorl
mov
or
loopne
call
outsb
adc
add
jno
in
cmpl
mov
incl
adc
test
fbld
js
in
fcoms
pushf
inc
jnp
push
sti
faddl
lods
in
mov
add
ja
pop
cwtl
pop
pop
push
lock
inc
mov
cmp
loope
pop
push
inc
ds
aas
addr16
push
dec
fnstsw
mov
scas
pop
adc
stos
dec
mov
ss
jns
fs
inc
movsl
add
mov
xchg
xchg
add
mov
lret
not
and
vcvtpd2ps
ds
mov
aaa
stc
push
dec
mov
xor
mov
aam
cmp
mov
lock
mov
push
scas
ficoms
shrl
jne
or
add
push
sbbb
xchg
adc
jnp
stos
lock
sbb
enter
and
arpl
pop
mov
cmpsl
mov
xchg
lock
scas
mov
xor
xor
lock
push
test
orb
sahf
test
xor
fwait
mov
cmc
add
call
sub
cmc
adc
sbb
test
pop
xchg
push
sbb
int3
add
stc
sbb
std
or
adcb
pop
in
shl
xchg
add
out
movsb
push
lods
aaa
push
inc
pop
movsl
jge
shl
fst
out
mov
mov
jnp
insl
out
inc
sahf
cwtl
push
sub
aas
faddl
cmp
jg
shrl
fucomip
mov
stc
xchg
dec
rcrl
loopne
or
jno
stc
sarb
scas
adc
xchg
cmp
add
lods
mov
sub
fildll
sub
mov
popa
and
xchg
fdivl
ret
and
mov
rolb
fiadds
dec
lods
std
xchg
jp
xchg
sub
test
movsl
cmp
dec
sbb
iret
dec
and
es
sub
xlat
sbb
nop
fwait
stc
xor
add
xchg
mov
bound
notl
xor
xchg
test
rol
aas
jmp
cwtl
fdiv
add
dec
pop
jno
xchg
xchg
aas
cmp
iret
movsb
push
insb
dec
sbb
or
dec
or
xor
shlb
xor
gs
mov
pop
pop
adc
loop
es
out
lods
push
push
leave
std
fwait
cld
iret
divl
xchg
test
xor
cltd
lret
loopne
dec
mov
in
mov
fsubrl
lds
jns
inc
loop
int
ret
lea
xor
jmp
jnp
xchg
into
xrelease
push
sbb
mov
pop
adc
leave
or
lods
out
cmp
inc
pop
pushf
insb
cmp
sbb
push
xor
scas
fs
jp
pop
es
mov
decb
pop
std
cmp
add
imul
mov
repz
xchg
sub
pushf
push
adc
out
popa
cmpsb
mov
xor
push
pop
cmp
or
cmc
mov
xor
ret
or
int
insb
ret
dec
sub
inc
pop
test
test
dec
idivb
rcrl
mov
jnp
adc
or
xchg
movsl
mov
dec
pop
add
adc
jbe
adc
int3
xchg
lea
mov
insl
imulb
sbbb
jl
cmp
or
ret
leave
push
scas
fmuls
push
fwait
dec
aaa
ja
shlb
pop
lods
or
fsts
lret
mov
cmp
mov
or
arpl
dec
dec
push
scas
fisubs
push
dec
inc
fsts
inc
stos
xchg
arpl
ret
mov
outsl
lods
or
cmp
das
das
xor
mov
inc
add
or
mov
dec
inc
test
and
cmp
mov
in
outsb
push
push
cli
inc
loope
xor
in
add
push
sbb
push
xchg
repz
push
xchg
pop
pop
hlt
pop
in
call
dec
sub
test
adc
cltd
dec
mov
adc
add
push
shll
in
xor
push
or
xor
push
jle
mov
int
loope
lret
cmp
mov
loope
fs
jno
mov
sbb
outsb
repz
icebp
ja
push
mov
lret
and
in
sub
stc
pop
mov
inc
in
pusha
add
and
jns
test
scas
lods
jo
loop
aas
nop
add
mov
ja
cli
inc
inc
arpl
mov
xchg
outsb
jnp
subb
or
jg
ja
xchg
popl
sbb
inc
jge
mov
mov
scas
mov
leave
sbb
mov
push
mov
pusha
shll
out
sbb
add
mov
scas
js
add
outsb
sbbl
pop
out
out
loope,pn
and
pusha
pop
fmul
rorb
xor
push
in
xchg
jne
xor
lods
rclb
jnp
jge
jno
mov
fidivrl
pop
xchg
cwtl
insl
icebp
adc
adc
insb
adc
out
mov
inc
out
pop
enter
fistl
aad
in
xor
enter
inc
add
fisttpll
fisubrl
push
jmp
leave
arpl
sbb
in
sahf
sub
and
outsb
xchg
jbe
xchg
mov
xchg
cmc
xor
inc
rorb
jmp
push
shlb
push
cltd
lret
pop
mov
jmp
and
mov
das
mov
rcrb
dec
mov
adc
jae
fnsave
xchg
pop
repnz
adc
in
out
dec
lea
mov
lret
adc
sbb
lods
lods
dec
inc
ficompl
mov
inc
jns
mov
lds
mov
pop
and
pop
mov
cwtl
mov
repnz
inc
lcall
mov
or
xor
fs
in
jge
xor
ja
mov
stos
ret
add
ss
lcall
add
sti
bnd
leave
sub
add
cmpsl
cmc
mov
adc
pop
xchg
jl
imul
jns
mov
sub
push
sub
and
adc
addr16
data16
add
loope
jecxz
or
push
popf
xchg
jg
sbb
xorb
xor
adc
cmp
stos
nop
clc
fiaddl
je
cwtl
jl
aad
mov
cli
fsts
inc
inc
cltd
imul
or
call
ret
add
lahf
sahf
pop
nop
sbb
xor
jmp
movl
push
ja
push
push
fisttps
add
out
aaa
pop
lds
push
fiadds
jo
pop
aad
mov
iret
xchg
xorb
mov
cmp
pop
insb
pop
sub
into
iret
andl
dec
add
loopne
add
mov
xchg
cmpsl
mov
sbb
add
ret
popa
xor
aas
enter
cmpsl
mov
push
jg
negl
repnz
outsl
cmp
nop
pavgw
or
lock
outsl
lods
xchg
stc
or
imul
fmul
mov
push
sub
mov
popa
lcall
mov
dec
jnp
lock
cmp
ja
rcr
dec
xchg
movsb
sub
mov
cmpb
popa
daa
mov
leave
cmp
adc
fdivl
leave
sub
xor
xchg
xchg
dec
popf
cmpsb
out
push
cmp
sbb
int3
jnp
pop
sub
aaa
fs
jo
sbb
test
mov
nop
ficompl
sub
fucomi
xor
xor
pop
or
mov
push
dec
popf
pop
sub
inc
popa
lahf
es
pop
lret
lahf
pop
les
outsl
or
push
movsl
mov
pusha
movsb
add
xchg
xor
enter
adc
mov
mov
ss
sub
or
shll
movsb
jmp
mov
imul
cmp
add
cmp
or
out
std
pop
cmp
cmpsl
loopne
adc
fnsave
in
xchg
shl
push
cmp
sbb
mov
sbb
jbe
cmp
jmp
jo
lahf
mov
and
pop
call
ss
lods
movsl
pusha
mov
lock
mov
fucomp
outsb
mov
pushf
lock
fisubrl
mov
jmp
add
nop
orl
lock
mov
sahf
cmp
and
jecxz
push
jno
mov
or
xor
fdivl
les
test
mov
xlat
jl
sbb
jmp
in
jp
mov
lock
add
aaa
sbb
in
std
sbb
or
pop
stos
add
mov
jb
cmp
ret
pop
out
mov
xchg
addr16
in
jo
xchg
mov
sbb
and
scas
test
mov
push
sub
push
xor
push
insl
outsl
test
sub
in
orb
movsb
push
cld
cltd
loope
lods
mov
shll
sti
add
movsl
idivb
cmpl
outsl
bound
insb
cwtl
insb
je
mov
in
jecxz
mov
addb
aad
call
and
sbb
outsb
mov
popa
lret
es
bound
mov
sub
lcall
les
push
je
sbb
add
adc
inc
fsubrp
and
mov
scas
jmp
jge
pop
aas
stos
stc
and
or
inc
lock
and
xchg
or
xchg
push
pop
xchg
ret
pop
add
add
ret
lods
or
push
dec
pushf
add
xor
adcb
mov
push
pusha
mov
xorb
js
sub
cwtl
sbb
xchg
xchg
lods
mov
aas
or
adc
ret
xlat
sub
xor
mov
insl
jae
mov
cmpsl
mov
add
mov
aad
lods
mov
mov
adc
pop
mov
loop
leave
mov
lret
stc
or
in
push
sahf
sbb
jp
es
dec
mov
jmp
mov
push
pop
mov
fwait
inc
adc
in
test
mov
loop
leave
loopne
fimuls
dec
es
pushf
outsl
add
lret
mov
movsb
lahf
inc
sub
xor
inc
or
and
pusha
xchg
outsb
cmp
shl
jmp
xchg
mov
inc
xchg
add
lods
arpl
dec
jo
mov
cmpsl
mov
cld
mov
add
or
dec
or
cmc
js
or
push
es
sub
enter
roll
ds
inc
and
dec
adc
dec
ja
daa
inc
pop
push
ljmp
in
or
jnp
add
cs
mov
comiss
je
adc
cmpsb
xchg
xchg
mov
jne
das
xchg
add
xor
sar
pop
sbb
clc
loopne
xor
and
cmp
out
loopne
arpl
aas
testl
and
inc
test
sbb
pop
ja
adc
jae
es
imul
loope
mov
shl
xchg
push
lock
das
adc
jmp
pop
gs
enter
or
fs
aam
repz
std
fstps
add
mov
cli
inc
mov
repz
out
pop
or
pop
daa
cmpsl
fcmovbe
fstps
mov
cld
subl
mov
add
int
fistps
js
mov
xchg
push
fs
or
cmp
loopne
insb
inc
cmc
scas
in
fldl
test
movsl
notl
push
jbe
cmp
and
popa
je
mov
pop
pop
xchg
adc
aam
jle
cld
mov
and
hlt
je
fdivrs
fst
sub
pop
mov
out
pop
or
wrmsr
jmp
cld
xchg
and
push
pop
add
sbb
popf
and
or
cmp
out
mov
dec
cli
push
lds
xchg
fisubrs
aam
xor
sub
cld
jecxz
ja
movsl
mov
add
dec
or
or
add
push
jns
mov
lea
movsl
xor
push
cmp
leave
fs
and
jmp
or
jmp
std
pop
mov
out
push
std
ds
or
sub
pop
leave
cmc
and
add
lret
inc
or
sbb
or
je
pop
or
enter
mov
dec
jle
je
adc
popf
rorb
mov
ret
bnd
pop
cli
jge
jecxz
in
cmp
aaa
out
pop
push
shll
dec
sub
scas
lea
and
push
push
xchg
cmp
das
aaa
scas
lock
test
jns
imull
lds
mov
jnp
mov
pop
ret
add
icebp
lret
aad
jnp
lcall
iret
mov
adc
imulb
jns
mov
je
insb
stos
daa
dec
jge
push
pop
ja
daa
stc
mov
xchg
into
mov
xchg
rclb
jae
enter
mov
add
mov
add
mov
cmp
cmpsb
inc
xchg
or
sbb
je
inc
outsl
pop
js
sbb
inc
test
les
das
dec
mov
jge
lret
mov
mov
outsb
mov
aaa
dec
dec
pop
and
cmpsl
addl
divl
js
cs
push
push
lods
mov
jns
arpl
dec
add
inc
dec
xor
fcoml
icebp
adc
mov
lods
xchg
xor
and
daa
aam
inc
mov
and
push
adc
shlb
mov
insb
mov
pop
mov
push
rol
mov
stc
mov
shll
xor
jge
or
call
int3
xchg
jae
push
or
mov
jge
shrb
pop
ss
in
mov
testl
xor
call
scas
daa
sbb
mov
xor
dec
sahf
inc
aam
xor
sub
pop
push
out
iret
mov
jecxz
pusha
call
pop
lret
in
xchg
mov
add
adc
cltd
xchg
jne
adc
and
push
xchg
sub
mov
or
fists
jns
pop
lret
jg
lahf
repnz
pop
rolb
xor
outsl
or
sbb
xor
adc
xchg
mov
mov
dec
mov
add
sbb
cltd
out
adc
movsb
lock
rcl
mov
movsb
pushw
pushf
pushf
mov
test
cli
clc
scas
push
js
sub
movl
cmp
inc
sbb
mov
dec
mov
cmpsl
xor
nop
xor
sahf
or
fs
stc
ss
adc
test
mov
ret
aas
jb
cs
es
clc
incb
mov
icebp
loopne
loop
mov
aam
jae
sarl
lea
pop
adc
inc
call
xchg
xor
pop
jnp
cmc
lea
rclb
and
outsb
inc
ljmp
ficoml
jge
cli
or
mov
je
inc
int3
add
popl
pop
lahf
mov
dec
movb
lods
mov
inc
movnti
fsubs
iret
lods
cmpsb
xor
xor
inc
inc
icebp
daa
jne
lret
fcmovb
lea
std
jns
lock
in
xchg
out
sub
sbb
fwait
jg
test
mov
push
insb
sbb
push
xchg
pop
xchg
leave
clc
jmp
xchg
movsb
push
int3
loope
js
dec
inc
ficoms
ret
jb
xchg
imul
out
rclb
adc
jmp
pushf
pop
sbb
inc
test
push
cs
lret
dec
enter
inc
cli
std
xor
jg
das
addr16
mov
mov
shr
inc
cwtl
sbbb
imul
ds
fisttps
stc
and
inc
ret
xchg
mov
std
cmc
lock
pop
daa
and
mov
cmc
je
push
add
in
es
push
cld
adcb
mov
cmp
cmp
aaa
movsb
lock
push
testl
inc
lret
jl
scas
jmp
jo
ljmp
mov
add
iret
sbb
inc
or
dec
mov
mov
push
fidivs
insb
sub
add
inc
mov
lods
lret
xor
cmc
imul
push
cmp
jge
xlat
stos
movsl
jg
add
jle
dec
push
inc
fwait
mov
jle
dec
aas
cld
out
push
pop
push
fcom
gs
xor
xor
xchg
mov
call
and
mov
sarl
mov
aam
je
inc
dec
or
push
sbbb
pop
and
mov
aad
fsubl
jmp
mov
cmp
xor
push
or
test
popa
jb
test
out
and
sbb
fimull
or
mov
push
ja
iret
jne
std
sub
adc
scas
pop
mull
jne
cmp
add
pop
clc
push
pop
nop
mov
push
pop
jbe
push
mov
adc
pop
pop
lret
jmp
mov
inc
test
shlb
sbb
repnz
addr16
mov
xchg
cmp
jnp
add
mov
or
fsubrs
push
pop
je
aaa
and
sub
mov
inc
fisttps
je
shlb
cmp
ror
cmp
or
adc
insl
add
dec
xor
jne
xor
mov
loop
lods
push
fsubrl
adc
pusha
sbb
xor
sti
pop
rolb
sbb
cmpsl
dec
test
in
inc
xrelease
testl
outsb
jns
aad
ficoms
push
jge
jp
sbb
cwtl
dec
fldlg2
incb
adc
call
inc
jnp
data16
sbb
stos
dec
stc
jns
pop
xchg
adc
xor
lahf
nop
jle
lss
mov
xchg
sti
xchg
push
mov
popa
je
es
xchg
inc
cmp
int
mov
push
jne
mov
jp
fadds
mov
jle
xor
outsb
pop
push
or
pushf
pop
sbb
sbb
repz
sarb
dec
add
push
arpl
cmpsl
arpl
nop
fstpt
sub
std
add
push
or
lahf
inc
mov
mov
stos
push
xchg
lea
dec
pushl
inc
pop
std
jne
ljmp
std
mov
pop
fadds
cwtl
inc
into
mov
add
sbb
dec
popa
cmp
add
stos
mov
mov
test
movsl
push
ret
xchg
pop
pop
call
cmp
lret
and
stos
dec
sub
xor
es
stos
fmuls
lock
mov
pop
js
jbe
std
fidivrl
loop
movsb
lret
xor
cmp
dec
out
dec
pop
mov
jns
mov
into
into
not
test
pop
icebp
lret
sbb
push
les
jl
sbb
les
cmp
bound
inc
cmp
mov
and
jmp
fimuls
ud1
out
dec
iret
mov
push
xchg
andl
arpl
or
sar
push
addl
mov
imul
mov
xchg
inc
out
pop
and
mov
pop
jno
jp
subl
imul
inc
repnz
sbb
mov
mov
and
lods
jmp
stos
loope
inc
jmp
adc
in
jmp
xor
sub
sub
iret
inc
stos
add
pop
paddd
mov
and
aam
enter
push
stos
xchg
jbe
fs
push
adcl
testl
jbe
jp
gs
outsb
or
in
insb
jb
leave
jno
notl
mov
push
lock
cmpsl
push
and
popa
setno
mov
mov
out
push
out
dec
xlat
pusha
cmp
sbb
jmp
push
daa
iret
mov
insl
dec
test
int
dec
arpl
push
pusha
xchg
fmull
mov
fstl
mov
cli
loop
push
push
push
pop
cmp
mov
jmp
mov
xchg
lret
movsl
mov
mov
repnz
or
int3
iret
mov
shll
enter
push
or
jo,pt
lahf
xor
mov
dec
jb
test
or
jmp
adc
adc
fisubs
pop
mov
jnp
in
push
fcompl
inc
xchg
mov
jg
jl
xchg
cs
sbb
lret
jmp
lea
aad
cltd
fdivp
in
dec
stos
and
jmp
jp
cli
or
jo
shrl
lock
and
fwait
lock
jbe
sub
shlb
push
sub
sar
stos
mov
popa
je
mov
cltd
cli
mov
test
xchg
mov
rcrl
fs
dec
xchg
filds
pop
dec
mov
mov
fmull
mov
or
xlat
xchg
pop
sarb
in
leave
mov
test
cmpsb
lahf
cmp
iret
push
pop
or
lahf
xor
mov
and
push
mov
and
lds
jp
stc
in
cmp
add
cs
pop
std
xlat
pop
insl
or
pop
loop
leave
scas
sbb
and
lcall
mov
cwtl
xor
lods
jp
loop
jl
lea
loope
pop
ljmp
int3
sub
xor
call
pop
mov
dec
in
fadds
mov
jg
jge
stos
aaa
xor
stos
xor
adc
push
cmc
push
mov
mov
stos
add
sarl
in
cltd
cmp
lret
loopne
mov
xchg
and
dec
sbb
outsb
fisttps
cmc
or
push
loopne
pop
imul
inc
je
mov
ret
imul
test
xchg
fimull
xchg
jmp
es
scas
xchg
dec
fists
jns
adc
mov
cmp
imul
lret
cmpsb
popf
mov
adc
addr16
sub
mov
iret
ret
jle
cltd
shrl
in
scas
mov
push
mov
test
jb
cmp
movsb
sbb
cld
shlb
jecxz
mov
in
js
loop
xchg
or
mov
mov
inc
lods
ret
inc
pop
add
pop
inc
pop
test
xchg
ljmp
mov
adc
scas
ss
adc
dec
cmp
data16
adc
sub
mov
lcall
aad
or
outsl
int
cwtl
jo
sbb
neg
imul
test
aaa
jmp
cmp
xor
jle
sbb
hlt
ret
iret
jle
jns
dec
dec
inc
push
dec
jne
mov
jp
stos
inc
cmpsl
sub
mov
sti
dec
clc
test
lcall
pusha
out
pop
add
push
sbb
je
mov
orb
sbb
and
cs
sti
or
inc
dec
pop
movsb
or
fnsave
stc
xorb
mov
sbb
movsl
pushf
lds
sbb
test
sbb
mov
subl
fstpt
inc
and
sbb
test
aam
insb
cli
mov
adc
mov
and
mov
je
stc
shl
lds
cmp
or
xor
cmp
add
mov
rcr
adc
sbb
pop
or
sbb
adc
pop
mov
push
fdivrl
cmp
repnz
icebp
jp
xor
push
sarb
sahf
cwtl
adc
jl
std
repnz
ja
cmc
outsb
gs
adc
test
pop
hlt
adc
lahf
sub
ret
dec
popa
bnd
cwtl
test
shl
fidivrs
mov
in
sub
jbe
shlb
and
data16
imul
scas
sbb
mov
in
xor
hlt
imul
mov
int3
int3
sub
stc
inc
jl
add
xor
mov
repz
mov
sbb
pop
cmpsb
hlt
inc
jge
rcr
idivl
mov
roll
dec
shrl
cvttps2pi
fisubrs
and
mov
adc
gs
add
cmc
push
jnp
or
adc
ret
fistl
jb
data16
xchg
cwtl
sub
adc
cmp
adc
insb
pop
xor
sahf
sub
xor
mov
les
lods
mov
cmpsl
sbb
jo
xchg
imul
add
loopne
mov
xor
repz
xor
xor
mov
pop
into
push
dec
dec
cwtl
es
mov
dec
test
fs
cwtl
mov
es
xorb
pop
bound
movsb
mov
mov
shlb
std
xchg
divl
xor
cmp
int3
jecxz
imul
and
int
mov
mov
ljmp
add
inc
xor
jb
add
mov
push
adc
aas
mov
dec
mov
insb
ret
pop
sbb
call
sub
jno
inc
std
add
or
add
or
mov
cmpsb
ret
xor
mov
pop
jg
mov
cli
jecxz
mov
mov
jecxz
loopne
scas
xlat
sti
rcrb
fwait
mov
mov
mov
pop
pause
jae
insl
jge
clc
divb
adc
push
das
lcall
stc
icebp
scas
jae
jle
lahf
add
out
dec
pop
leave
decl
or
mov
out
leave
mov
jb
andl
gs
dec
push
lret
add
mov
inc
cltd
ljmp
icebp
mov
fsubs
jmp
adc
loopne
pop
mov
jae
pop
loope
bound
gs
adcb
fwait
es
push
jle
push
sbb
daa
mov
popf
cmp
lret
jb
lret
js
jno
stc
ja
lds
imul
mov
fsubs
inc
movaps
dec
xor
bound
inc
inc
mov
lcall
ficoml
aad
jno
inc
adc
fld
mov
mov
fidivrl
fcmovnbe
pushf
sub
das
xchg
mov
inc
mov
out
push
sarb
xor
pop
scas
pop
les
inc
mov
outsb
cwtl
push
ljmp
add
ljmp
mov
loopne
jmp
mov
divl
mov
sbb
inc
loopne
cwtl
pop
pop
mov
fisubrs
and
cltd
lea
pop
pop
fsubr
adc
inc
es
mov
cmp
mov
xor
jmp
mov
lret
lret
xor
mov
cmpb
mov
lea
mulb
psadbw
push
dec
je
test
out
fstpl
xchg
xor
mov
lcall
dec
adc
mov
fabs
pop
nop
outsl
mov
test
xor
sbb
lods
sub
or
xchg
pop
jnp
jmp
movsl
cmp
mul
pop
lret
shlb
mov
add
fprem
lret
xor
aam
loop
loop
pusha
xchg
mov
fnstsw
in
sub
cmpb
lcall
cmp
sbb
hlt
cmc
jl
das
xor
cwtl
sti
out
shlb
adcb
jne
adcl
outsl
shr
inc
ljmp
cmp
icebp
add
popl
mov
std
rsqrtps
sbb
ss
push
cmp
push
jmp
xor
pop
mov
or
xchg
xor
xchg
or
adc
xchg
push
iret
adc
xchg
out
lods
int3
lcall
fbld
xor
scas
mov
enter
inc
cmp
xchg
or
mov
inc
dec
or
add
push
pop
inc
pushf
int3
arpl
adc
inc
in
add
aas
xor
xchg
xlat
adc
adc
pop
xchg
fisubrl
shlb
or
xchg
imul
or
mov
jmp
popa
sbb
icebp
test
jnp
jb
push
shrb
sarl
add
mov
lods
mov
pop
in
fs
add
sbb
mov
xchg
lods
cli
xchg
rcrl
xor
sub
mov
inc
mov
cltd
add
je
loop
fistps
lods
jmp
addr16
je
inc
or
sbb
popl
iret
pop
cs
jno
lods
inc
fisubrs
out
xchg
popf
mov
inc
sarb
xorl
lcall
adc
adcl
fs
sbb
cmp
imul
mov
add
into
cmpsl
push
mov
outsb
adc
or
repz
adc
ljmp
inc
inc
sbb
shlb
dec
jbe
or
movsb
lret
mov
fsubs
in
daa
lock
push
subb
divb
inc
cmp
add
lret
cs
lock
mov
mov
repnz
leave
xchg
pop
sarl
jmp
xlat
or
orb
aad
dec
and
popf
and
mov
dec
xor
jo
cmp
pop
cmp
repz
nop
dec
mov
mov
js
add
mov
shll
jns
mov
arpl
cltd
pop
push
inc
dec
xchg
ljmp
es
pop
adc
lock
push
test
jnp
rorb
pop
imul
lods
addr16
test
movsl
cmp
unpcklps
dec
pop
repz
ret
push
sbb
cmp
add
arpl
dec
add
mov
cli
dec
and
rcrb
push
xchg
decl
aaa
cmc
pop
faddl
std
aad
jo
pushf
sbb
push
add
jns
scas
loopne
mov
cmp
pop
inc
or
outsl
adc
out
ret
gs
repz
ljmp
dec
inc
add
ds
sub
inc
leave
insb
or
mov
mov
cmp
xor
add
push
outsb
push
je
dec
inc
sbb
mov
xchg
xor
and
clc
rcrl
lock
jg
iret
fisttps
pop
mov
mov
ljmp
inc
jns
inc
cs
push
imul
test
orl
push
test
sbb
mov
gs
and
xchg
sbb
xchg
stos
gs
cmp
std
mov
mov
xchg
ss
test
addl
mov
js
mov
out
subl
sar
jne
adc
bound
cmp
rolb
pop
sbb
push
mov
adc
or
mov
mov
cmp
add
rcrl
icebp
pop
stos
cmpsb
xor
dec
push
fmuls
push
fistpl
mov
inc
insl
lret
mov
mov
pusha
mulb
jb
shrl
jbe
push
lds
or
jmp
cli
pop
xchg
cmc
ljmp
xchg
jecxz
stc
sub
sar
xchg
gs
dec
jl
xor
push
push
push
inc
jle
dec
push
pop
push
cmp
ss
sub
adc
jbe
xchg
pop
idiv
mov
pop
jle
or
inc
sbb
dec
repnz
cltd
or
lods
dec
lds
std
cli
adc
and
adc
icebp
test
cs
and
sub
mov
mov
hlt
fstps
sbb
ss
add
dec
mov
adc
mov
mov
mov
sub
testb
jg
out
mov
mov
lds
sub
adc
or
inc
cmpsb
xor
mov
mov
cwtl
insl
lea
adc
leave
pop
sub
outsl
ja
adc
pop
inc
inc
pop
popf
bound
mov
repz
xchg
int
das
mov
lods
push
jg
inc
loope
rorb
ja
out
or
push
jo
pop
bound
scas
sbb
inc
or
dec
or
aas
pop
inc
add
cmp
filds
mov
jae
inc
fprem1
mov
cwtl
stos
sub
stos
fdivl
add
sti
fmull
xor
push
imul
mov
xorb
inc
aas
sbb
and
mov
subl
push
sub
xchg
insb
lret
stos
or
imul
add
mov
mov
jl
nop
mov
mov
pop
mov
push
sub
pop
cld
mov
pusha
subb
fisttpl
cmp
or
jno
iret
sub
jns
push
mov
jb
addr16
loop
mov
lea
jg
mov
sub
ret
sbb
cmp
outsl
dec
out
fs
pop
into
popf
xchg
fsts
in
pop
mov
add
fs
mov
rcrl
test
pop
mov
and
js
dec
aaa
adc
push
jae
fdivr
jbe
imul
cmp
fmuls
in
lock
xorl
js
add
mov
dec
cs
sub
mov
rcll
loop
mov
loopne
mov
or
sarl
push
xchg
mov
fisubs
into
mov
mov
loop
or
push
dec
daa
sbb
jg
mov
mov
fadds
into
inc
jmp
cld
pusha
jb
aad
pop
push
test
fwait
jge
in
jns
outsb
xchg
jg
push
add
or
push
or
dec
lahf
in
mov
adc
aad
pop
pushf
mov
mov
mov
push
in
in
jae
outsb
push
xchg
bswap
jle
scas
inc
stos
sbb
mov
sub
mov
lods
fxch
sbb
sub
cmp
jecxz
xchg
push
dec
sub
out
cli
iret
mov
lret
aam
jg
shl
lods
xor
fs
add
add
pop
and
push
mov
ljmp
xchg
scas
mov
mov
and
ja
movsb
in
adc
jmp
jg
decl
xor
sahf
cltd
pop
mov
push
pop
test
mov
add
lret
fsubl
test
push
subb
mov
sahf
idivl
cmpl
ficoml
add
add
cmpsl
xchg
pop
or
movb
arpl
scas
sbb
shld
cmpsl
andnps
and
cltd
mov
stos
jb
cs
mov
cmpsb
jns
in
das
stos
jbe
cmpsl
js
mov
and
outsb
xchg
xor
aaa
lock
mov
sub
add
dec
stos
es
out
ret
fadd
or
lahf
or
negb
enter
adc
scas
inc
xchg
cltd
xchg
adc
pop
jae
xchg
scas
in
push
inc
mov
test
enter
and
ss
cli
push
inc
lret
shl
dec
xchg
jecxz
ss
inc
mov
xchg
shl
mov
jg
mov
pusha
or
mov
in
repz
addr16
andb
jno
push
lahf
stos
out
and
sti
rcrl
and
xchg
mov
loopne
rorl
xor
xor
test
jns
notl
outsl
sti
sti
mov
out
aam
xchg
movsl
sbbl
sti
dec
jle
cmpsb
lods
dec
sbb
mov
pop
mov
out
sbb
xor
dec
jnp
std
test
jns
sahf
bound
inc
sbb
orb
mov
dec
sub
cmp
inc
leave
loopne
stc
fwait
xchg
test
push
push
xchg
pop
lock
push
lcall
add
sub
shlb
loopne
insb
mov
je
out
cmpsl
push
nop
scas
mov
push
pop
cli
stc
jo
or
adc
dec
cs
inc
xchg
repnz
mov
sti
xorl
movq
fmul
jnp
add
lds
mov
jl
and
jle
mov
popf
lock
es
das
mov
push
cmpsl
sbbl
lods
cltd
addl
mov
cmpb
dec
jg
jae
jbe
lds
ret
je
cmp
sbb
sbb
sbb
rorl
inc
xchg
fs
shl
xchg
lret
adc
fnstenv
movsl
dec
inc
leave
test
outsl
outsb
cmc
jno
dec
sbb
pop
mov
adc
ljmp
mov
ucomiss
sbb
into
pushf
push
cld
js
cmp
push
add
xchg
inc
repz
or
ss
stos
cmp
adc
out
dec
xchg
shl
insl
jg
dec
inc
mov
mov
fimuls
mov
insl
mov
xchg
dec
pop
jecxz
mov
xchg
rcll
push
xlat
in
dec
add
pop
rorl
cmc
and
mov
ret
es
or
sbb
mov
mov
repz
iret
push
lock
aaa
scas
mov
mov
mov
imul
aas
and
xchg
pop
jmp
jle
repz
mov
mov
out
loop
movb
push
mov
fstps
clc
test
daa
inc
repz
leave
sbb
movsb
push
xor
xchg
or
xchg
clc
jl
add
movsl
popf
push
stc
aam
imul
lahf
rcll
mov
and
mov
mov
repz
outsb
imul
xchg
jmp
or
std
rcll
movsl
mov
gs
jecxz
or
or
sbb
hlt
mov
lea
loopne
outsb
ficoml
outsb
test
or
repz
or
and
iret
lahf
inc
mov
into
cwtl
xor
inc
push
call
cs
andl
mov
cli
jb
es
push
xlat
lret
mov
decb
xor
jecxz
lret
aaa
mov
dec
repz
sub
jge
loope
add
xor
sti
fmull
js
sub
cld
inc
dec
pop
imul
pop
sbb
or
lock
enter
xlat
loop
xor
ret
push
ret
inc
jne
xor
pop
push
idivl
cmc
cmp
out
fstpt
test
popf
cmp
inc
xor
int3
dec
inc
pop
rol
shrb
mov
fnsave
ror
add
dec
dec
jbe
hlt
add
hlt
enter
pop
lahf
and
fwait
addb
lahf
ret
lcall
inc
pop
xchg
movsl
cld
insl
repz
xor
sbb
test
and
jl
rorl
xchg
xchg
fists
pusha
cmp
mov
pop
mov
push
insb
test
push
and
push
es
cs
mov
imul
gs
push
pop
fadds
ja
inc
lcall
mov
rcrl
mov
pop
xlat
cmp
dec
sub
testl
sub
mov
push
sbb
mov
arpl
adc
cmp
mov
and
pop
inc
mov
mov
pop
mov
cmp
sub
mov
addr16
fistl
fs
ja
outsb
les
test
shll
inc
outsb
xchg
mov
push
addr16
gs
mov
sub
insb
ljmp
pop
int
daa
lret
xchg
clc
in
sub
xor
imul
test
add
mov
adc
nop
sub
add
lret
outsl
lret
dec
and
inc
or
test
or
nop
mov
cmp
orb
push
iret
int
nop
sarb
fxch
addl
push
icebp
pop
pop
cmpsb
insl
bnd
adc
test
push
pop
dec
mov
test
jl
into
push
mov
add
jae
mov
jb
outsl
out
mov
mov
xchg
mulb
out
test
mov
aas
pop
jo
sub
xchg
std
cmp
inc
push
insl
jle
das
ja
iret
call
stc
mov
mov
mov
cwtl
lock
sbb
fistpll
push
push
fcompl
jns
mov
adcb
insl
nop
xchg
push
push
jp
pop
pusha
adc
dec
incl
jbe
mov
fadds
jnp
enter
cwtl
mov
mov
enter
lcall
shrl
inc
sub
in
add
xchg
jnp
movsl
leave
pop
mov
jle
jmp
sbb
inc
cli
cmp
mov
jmp
push
and
call
dec
std
mov
outsb
mov
jne
and
je
daa
movsb
sub
fnstsw
jge
cmp
jg
test
gs
inc
jmp
cld
mov
lret
out
sub
pop
cmc
or
jle
or
mov
dec
xor
mov
xchg
pop
aad
mov
fistpll
gs
mov
pop
ss
xchg
jl
xor
and
sub
shlb
mov
inc
test
rcrb
adc
mov
and
pop
sub
ja
arpl
xor
fs
jno
sbb
bound
stc
lea
arpl
lret
std
repnz
ret
gs
mov
xor
or
and
rolb
mov
out
aaa
mov
cmp
lcall
dec
std
lock
outsb
mov
dec
push
fidivrs
mov
mov
ss
lods
outsb
cmpsb
mov
loopne
imul
adc
pop
sbb
jge
sub
dec
mov
jns
jmp
cs
into
ror
xor
sub
add
fcomps
lcall
cmpsl
sub
scas
movsb
dec
cmp
ret
xlat
cmp
add
push
hlt
call
sbb
cmp
leave
cmp
iret
mov
and
lods
mov
int
es
push
add
cld
xchg
jo
pop
in
mov
dec
push
ffree
in
hlt
sbb
ds
mov
loop
mov
jae
dec
xchg
jne
lret
das
cmc
fisubl
jo
and
or
and
outsl
in
sahf
pop
xor
ljmp
push
nop
into
jb
pop
mov
add
das
push
test
xchg
sarb
nop
or
jae
imul
push
mov
sbb
dec
lock
xor
lods
out
and
scas
sub
xchg
fs
lret
repz
push
jmp
cmpl
mov
movsl
xor
xchg
xlat
stos
int
inc
sub
vcvtps2pd
decl
test
inc
cwtl
daa
adc
pushf
nop
mov
std
push
lock
jnp
aaa
mov
adc
dec
inc
mov
adc
jl
test
dec
aas
rcl
adc
mov
cmp
aas
shll
fsubp
sti
bnd
add
sub
mov
jle
jno
sahf
stos
nop
outsl
xor
clc
jbe
sub
and
rorl
cmp
jmp
xor
xor
movsl
pop
cs
xchg
dec
cld
sti
xchg
dec
or
test
push
fdivs
push
js
ljmp
inc
sub
std
ljmp
dec
jge
lret
mov
adc
inc
push
mov
aaa
mov
xchg
mov
stc
rcrl
or
sub
and
push
mov
xor
je
mov
fimuls
and
adc
mov
repnz
jmp
sub
mov
jae
push
repnz
into
fwait
mov
sub
mov
xchg
jp
scas
test
xor
jl
mov
jne
das
lret
and
and
bound
aaa
xchg
pop
imul
and
std
cmp
mov
lahf
mov
inc
mov
add
je
pop
or
addr16
xchg
jl
pop
ret
test
sbb
divl
cs
mov
adc
dec
mov
scas
xor
sub
jns
aad
mov
call
pop
add
pop
arpl
and
sub
subl
jmp
and
out
nop
test
mov
mov
je
push
inc
ja
push
imul
jae
cmp
call
test
lcall
xchg
push
sbb
sub
and
in
outsb
fsub
cwtl
sbb
dec
jae
sarb
or
cmpsb
add
dec
dec
enter
push
aad
cld
add
and
push
fsubl
arpl
test
mov
sbb
sarl
mov
inc
dec
rcrl
mov
xchg
movsb
sbbl
pop
call
test
fcmovnb
mov
ljmp
push
sub
in
or
jge
cmp
stos
push
adc
in
enter
arpl
in
add
stc
mov
adc
ss
jg
gs
jge
xchg
mov
cltd
mov
in
xrstors
cmpsb
frndint
lcall
out
xor
cmpsl
mov
popf
int3
mov
add
jecxz
push
inc
xor
jge
or
mov
push
mov
scas
add
pop
loopne
outsb
cmp
sub
and
mov
mov
sbb
mov
xchg
pop
mov
shl
lahf
ficoms
sti
jmp
adc
xchg
xchg
push
dec
adcb
mov
mov
push
xchg
adc
icebp
mov
sti
in
and
into
mov
out
into
addr16
jae
rcll
popf
dec
dec
in
jbe
out
add
or
sbb
scas
int
mov
or
es
je
jno
sti
sbb
sub
add
sub
lcallw
lret
sub
std
push
test
xorl
lret
orl
stc
inc
aas
aad
orl
dec
adc
stos
arpl
mov
ljmp
lods
ficomps
xchg
shl
out
es
test
test
repz
packsswb
add
cmp
mov
stc
jmp
add
stos
mov
or
or
xchg
sbb
xchg
dec
ror
add
cli
mov
and
pop
fnstsw
xor
cmpsl
add
js
inc
inc
jge
nop
add
repz
cmp
mov
sbbl
arpl
std
lret
push
inc
inc
shrb
jbe
out
sub
or
adc
push
imul
mov
lret
imul
mov
pop
je
jecxz
pop
fdivs
out
add
push
mov
adc
movsl
cmpsl
sub
add
adc
add
hlt
cs
mov
pop
mov
xor
or
test
jl
or
ret
inc
jmp
sub
movsl
mov
imul
adc
ja
fnstsw
mov
out
xchg
outsb
inc
addr16
and
lock
jno
das
adc
scas
or
mov
push
arpl
dec
jno
xchg
cmc
decb
push
lods
scas
mov
sbb
pop
mov
xchg
pushf
stc
push
pop
jle
jle
repnz
int
aad
inc
sbb
push
lret
mov
mulb
fiadds
jmp
cli
les
and
lahf
das
lods
outsb
outsb
mov
imul
or
lea
or
dec
dec
or
push
mov
filds
fsubr
jge
fildll
sbb
cli
jb
xor
inc
es
xchg
in
rcll
fdivr
mov
xchg
xchg
rorb
push
imul
cld
leave
pushf
push
pop
push
pop
shl
adc
sub
and
call
hlt
jg
mov
icebp
mov
ja
dec
mov
jmp
int3
xor
outsb
daa
ficoml
imulb
mov
sub
les
das
mov
stos
xchg
inc
ljmp
shl
push
adc
and
push
in
ret
xchg
subl
cltd
fnstcw
add
js
add
adc
dec
into
dec
mov
xor
out
test
loope
add
lcall
cmp
cmpsl
ror
mov
push
loope
xor
js
mov
outsl
loop
gs
add
stos
ret
out
pop
loope
sbb
scas
imulb
stos
sub
and
xorps
movsb
inc
xor
adc
repz
jle
lcall
or
in
sbb
sbb
dec
arpl
mov
sarl
xor
out
outsl
shlb
sub
notl
fwait
arpl
stos
leave
adc
mov
imul
add
adc
in
ja
push
inc
pop
fldpi
mov
clc
or
sahf
shll
inc
pop
sarb
xchg
lods
imul
mov
sbb
test
pop
xor
jmp
xchg
movsl
xchg
add
mov
cmp
add
scas
pop
xchg
shrl
or
imul
fdivs
in
pop
push
cmp
jl
repz
clc
add
adc
add
cmp
lahf
mov
stc
in
jecxz
iret
jnp
nop
or
and
fwait
or
pop
cmp
test
js
sti
out
jne
cli
ret
test
stc
adc
inc
aaa
mov
pop
pushf
or
sahf
pop
push
xor
lcall
cli
jle
pop
xchg
xchg
addb
aad
cli
je
sbb
iret
and
push
test
mov
ret
shrb
je
adc
clc
or
cmp
dec
in
jle
mov
cmp
cmc
xor
cmpsl
shlw
popf
mov
cmc
jno
cmp
std
jmp
imul
fsts
repnz
pop
mov
cmpsb
jle
push
sbb
add
data16
lret
or
rolb
xor
ficoms
sbb
and
je
pop
jle
xchg
ficoms
ret
mov
sub
mov
in
mov
pusha
cmp
test
mov
sub
data16
sbb
lcall
mov
out
daa
fcompl
and
pop
jae
mov
jmp
and
insl
outsb
push
ret
jle
xchg
mov
lock
and
cmc
lods
pushf
test
jo
out
dec
jns
icebp
loop
lock
add
outsl
aas
dec
or
sti
insb
xchg
cwtl
lret
loope
in
pusha
imul
fistpl
sbb
xlat
add
add
hlt
outsl
sahf
mov
fs
push
add
or
and
cld
repz
cmpl
jbe
test
cmpsb
fimuls
jmp
fidivl
push
jle
leave
sbb
mov
mov
dec
jp
add
cwtl
mov
pop
enter
paddq
leave
into
xor
imul
or
pushf
pushf
fnsave
push
push
repz
mov
imul
inc
repz
ret
cli
jb
pop
repnz
adc
jl
fisubs
sbb
dec
xchg
add
pop
xchg
push
decb
mov
mov
test
test
jg
or
inc
inc
loopne
xchg
jo
pop
push
iret
in
lahf
mov
sbb
stc
test
clc
push
xchg
mov
mov
jp
add
and
add
mov
or
cli
pop
and
xchg
mov
fidivrl
xchg
sub
pop
adc
ds
jle
in
outsb
inc
push
pop
cmp
add
sub
mov
js
lret
cmp
dec
lods
inc
lds
shlb
sub
dec
sbb
lds
loope
mov
add
mov
adc
push
cmp
mov
loop
scas
sbb
xor
imul
inc
dec
cltd
test
fildl
xor
je
sbb
pop
testb
xchg
stc
push
out
call
jnp
addr16
dec
or
mov
sub
int3
mov
dec
test
out
cs
dec
adc
or
int
sub
inc
inc
cld
outsb
in
mov
or
add
xor
vmwrite
das
rcrl
cmp
push
fiadds
push
arpl
aam
fcoml
mov
into
inc
cltd
dec
mov
loop
cmp
xchg
xlat
mov
mov
mov
push
cmpsb
leave
jp
xchg
cmp
mov
push
pop
call
dec
pop
icebp
and
addr16
jo
movsl
mov
js
and
mov
fisubrs
stc
mov
inc
out
dec
clc
repnz
into
inc
mov
sub
xor
jb
or
es
loopne
sbb
dec
ds
sub
jmp
inc
scas
sub
adc
xor
pop
or
mov
pavgb
out
dec
idiv
gs
xlat
lock
mov
mov
insl
jbe
ss
imul
cwtl
cmp
fdivr
sbb
push
jne
xchg
out
aam
imulb
ret
imul
into
xor
mov
lds
sbb
add
adc
add
sbb
sbb
rcrb
sahf
add
push
fiadds
mov
xlat
lock
push
iret
sub
adc
adc
pop
fcoms
xchg
mov
iret
ss
jne
add
cmc
and
aam
push
in
lret
adc
and
jno
sbb
aaa
dec
lea
pusha
dec
sar
fnsave
addr16
clc
jl
daa
in
push
and
dec
ss
addr16
popf
dec
xchg
nop
fistps
mov
jne
insb
outsb
add
in
lock
dec
inc
inc
sub
mov
jo
sub
xor
test
insl
enter
push
mov
fs
mov
push
pop
call
and
xchg
mov
inc
loopne
js
mov
test
cmp
pop
dec
or
xchg
jae
push
mov
cmp
int
sbb
cli
mov
fadds
xor
inc
orb
dec
mov
xor
orb
arpl
lods
insl
insb
sbb
inc
aas
loopne
daa
mov
adc
ljmp
mov
dec
xchg
pop
cltd
enter
cmp
dec
idiv
repnz
fstpt
push
cli
push
in
cmp
sub
in
out
dec
insb
xor
mov
xchg
push
jo
xchg
mov
xor
pop
dec
int3
jmp
in
sub
dec
mov
pop
mov
test
fmuls
lods
cmpsl
mov
mov
and
dec
inc
fld
or
mov
dec
jecxz
push
xchg
data16
mov
add
add
pop
and
or
aaa
xchg
int
imul
js
add
jp
cld
stc
sub
add
adc
adc
jg
inc
sub
pop
adc
jb
push
push
aad
mov
add
out
insl
pusha
rcrb
shlb
mov
aas
xorl
mov
push
ret
pop
jns,pt
pop
addr16
in
repnz
sbb
lcall
and
jmp
call
aas
icebp
pop
sub
jns
add
aaa
in
int
addr16
dec
dec
cmc
jecxz
adc
jns
pop
lea
out
stc
ss
cmovge
inc
lock
fcomps
sbb
cmp
push
pusha
sub
push
and
and
xor
stos
aam
orl
pop
lock
mov
adc
leave
dec
xchg
or
and
scas
repz
fwait
cs
imul
out
clc
jge
in
inc
jecxz
push
pop
lcall
lods
stos
and
inc
lret
jbe
sub
lea
jae
mov
lret
xchg
ljmp
dec
push
pop
adc
shlb
lds
dec
ss
cmp
cmp
imul
cs
cmpsb
and
pusha
jo
stos
movsl
pop
out
into
add
imull
jp
popa
stos
jnp
rcr
loopne
lret
stos
iret
clc
int
repz
stos
pop
mov
fdiv
inc
xchg
int3
fldl
inc
sbb
cs
lea
jns
lcall
aas
jno
into
xor
shrb
mov
or
in
repz
ds
or
xor
mov
fs
jl
push
cmp
sub
mov
pop
imul
outsb
leave
pop
xor
pop
jl
pop
inc
jp
cmp
das
scas
lcall
pushf
into
jo
jg
or
shl
mov
das
push
hlt
push
out
mov
dec
add
or
or
mov
push
mov
mov
dec
jb
js
inc
rorb
outsb
xchg
sahf
stos
roll
xor
add
cwtl
jae
cwtl
jmp
jg
fisubrl
inc
sub
mov
xor
std
fs
mov
jne
push
imul
fwait
sbb
ja
icebp
lret
cld
xchg
rol
pop
pop
pop
or
xor
dec
ss
add
pop
cmpsb
out
lahf
in
mov
movb
mov
sbb
fbld
mov
mov
lea
insl
sbb
out
dec
dec
fs
inc
insb
cmp
lcall
call
cmp
push
sub
in
pop
xchg
adc
div
in
popa
sbb
jl
addr16
leave
shr
add
push
and
call
sbb
sub
imul
pop
or
shlb
in
mov
dec
int
ja
andb
push
sub
dec
or
cmp
insb
push
dec
shrb
lcall
idivb
insl
push
sbb
mov
push
lods
fstl
add
cmp
mov
outsb
iret
mov
pop
pop
mov
dec
cmove
mov
mov
ljmp
rorb
in
sbb
jnp
mov
insl
jno
dec
xorb
popf
push
push
loop
sbb
addr16
jnp
mov
je
jl
test
adc
arpl
testl
fucomi
imul
xor
mov
xchg
jecxz
sbb
add
mov
mov
dec
xor
xor
mov
stc
inc
dec
data16
xchg
xchg
aam
pop
xchg
xor
xor
or
mov
push
lods
pop
outsl
pushf
cmp
lcall
and
leave
push
xchg
add
cld
lods
aas
sbb
loope
iret
test
cld
mov
or
js
jl
and
jnp
pop
stos
loopne
sbb
insl
aad
shr
hlt
std
mov
mov
into
jae
das
sbb
movsb
sbb
jo
mov
fwait
or
and
push
cmp
aad
ja
jecxz
repnz
daa
lcall
movsl
sub
dec
jle
mov
add
bound
pop
inc
loope
stos
shlb
dec
sahf
pop
and
fmull
or
sti
arpl
xchg
cwtl
sub
das
pop
sbb
sbb
pusha
cmp
into
sub
cmp
pop
dec
loopne
std
ds
mov
out
mov
cli
push
inc
inc
pusha
rcrb
dec
xchg
pop
mov
xchg
xchg
test
nop
aad
mov
lds
pop
fldt
aaa
stos
loop
dec
or
mov
shrl
sbb
add
lcall
out
notb
xchg
repz
repnz
call
cmp
lcall
inc
push
mov
jg
inc
lods
cmp
jno
xchg
into
in
jno
push
stos
push
stos
jne
or
xor
inc
or
inc
pushf
sbb
inc
scas
loope
test
sarb
push
inc
sbb
stos
inc
jno
cmp
xor
sub
push
xlat
lahf
filds
sbbb
insb
ret
dec
clc
stos
jg
pop
xchg
or
sub
hlt
mov
sbb
dec
mov
call
nop
das
mov
or
sbb
add
pusha
ja
and
jmp
and
in
addb
aad
xor
mov
lahf
push
mov
sbb
sarb
sbb
adc
and
mov
mov
mov
js
popf
xchg
test
sahf
xchg
lret
insl
dec
mov
sahf
cmp
cmpsl
adc
jae
inc
fistpl
xchg
xor
std
popf
and
enter
push
jg
inc
sub
jmp
add
and
mov
lcall
jge
pop
pushf
in
and
adc
inc
inc
movsbl
xchg
mov
mov
fsubl
pop
push
sahf
dec
push
fs
es
fadds
xchg
cmpb
add
jg
or
sub
clc
subl
and
mov
dec
dec
cmp
add
and
sarb
vmwrite
ret
cltd
out
xlat
data16
sbb
es
jbe
cld
jp
sbb
sbb
outsl
dec
or
mov
mov
cmp
jb
hlt
mov
xor
in
sahf
inc
outsl
mov
pop
and
fmulp
lea
or
xchg
nop
push
clc
rorl
enter
into
popa
int3
push
add
sbb
aas
lcall
test
sbb
das
and
xor
neg
mov
jl
stos
fs
insb
cwtl
and
push
icebp
popa
xor
pop
insb
aas
popa
and
or
push
es
mull
mov
adc
data16
bound
push
lods
mov
mov
scas
push
cld
push
in
cmp
mov
xlat
mov
stos
sub
xchg
adc
jo
inc
bswap
push
xchg
adc
popf
jne
xor
jmp
pop
xlat
call
cwtl
ljmp
inc
pop
lods
popa
xor
add
mov
pop
test
ret
testb
add
push
jbe
cmp
int
xchg
insl
clc
in
lea
mov
push
loopne
fs
xor
int
loope
insl
dec
in
dec
mov
movsb
push
loopne
pop
mov
les
orl
decl
mov
std
pop
int3
arpl
or
std
or
fisttpll
or
sub
clc
out
ret
daa
lcall
adc
in
jle
inc
inc
cmp
loope
loope
dec
jbe
mov
scas
jg
dec
icebp
js
addb
std
scas
mov
dec
call
mov
add
shrb
or
ds
sahf
fisubl
mov
jne
ss
cmp
cmp
xchg
jb
push
sbb
xchg
mov
popa
push
iret
pop
cmp
inc
faddp
cmpsb
xchg
mov
movsb
pusha
jb
into
mov
xchg
fsubrs
data16
dec
mov
cmpsb
mov
mov
sbb
std
cmp
notb
repnz
pop
leave
repz
pop
gs
inc
pop
ljmp
cld
ljmp
test
and
arpl
or
inc
jmp
xchg
pop
and
adc
adc
ret
or
lahf
and
pop
mov
push
shlb
push
repnz
inc
enter
imul
sub
xlat
inc
mov
add
in
mov
clc
cmp
inc
cmp
mov
es
xor
mov
pop
shll
mov
ret
es
arpl
push
xor
sub
push
ja
negb
mov
addr16
xor
adc
or
imul
into
clc
add
dec
xor
ret
adc
and
shll
ss
or
sbb
cmc
dec
sahf
inc
insb
pop
pop
push
jecxz
popa
loopne
movsl
stos
in
es
nop
enter
aas
cwtl
mov
in
mov
pop
xchg
xor
lcall
mov
pop
in
add
adc
inc
insl
sbb
pop
sbb
outsl
insl
xchg
sbb
push
xchg
xor
out
mov
mov
mov
pop
jecxz
mov
xor
cltd
add
xchg
xor
and
xchg
jns
lret
mov
jg
lret
and
lea
js
fistl
xchg
mov
insb
in
movsb
add
ss
in
lock
fcmovnu
rcll
pop
into
jo
rolb
and
push
scas
pop
xchg
mov
cs
and
jle
sarb
mov
jnp
and
fwait
dec
sbb
cltd
rorl
idivb
bswap
adc
cmc
pop
fwait
add
xchg
xor
ret
hlt
pop
jne
dec
jb
js
jg
aas
mov
cmpb
jmp
rcr
xchg
sub
andl
fnstcw
mov
call
cmp
inc
sbb
mov
cmpsl
les
decb
test
pop
insl
mov
pushf
nop
fsubl
cltd
into
jp
or
jns
lods
xchg
add
inc
push
inc
add
push
out
int3
outsb
loop
jnp
addr16
fdivs
adc
pusha
mov
cmpsb
and
or
je
outsl
adc
clc
mov
mov
xorl
sahf
mov
leave
lret
cmp
imul
daa
out
mov
xchg
lcall
push
pop
xchg
pop
mov
decl
mov
mov
jb
add
dec
push
pop
adc
ja
mov
xor
hlt
aaa
push
test
jno
inc
andb
sub
pop
mov
inc
sub
mov
or
sbb
cmpsl
sub
gs
dec
mov
push
sahf
mov
pcmpgtw
iret
push
and
mov
sbb
cmp
add
je
push
int3
lret
cmp
cmpsl
jecxz
mov
xor
jbe
stos
xchg
enter
sbb
imul
xchg
aaa
ficoms
pop
sbb
je
or
xchg
fwait
shrl
cltd
in
addl
outsl
cmp
ret
jg
es
adc
cli
pop
inc
ss
adc
ror
dec
add
xor
jbe
ja
mov
mov
movsb
repz
xor
fwait
out
xor
sub
jle
mov
lods
inc
xchg
and
mov
popa
mov
sub
call
jns
inc
or
pop
loope
aas
lret
test
sub
into
enter
push
push
into
xchg
jmp
add
fs
add
mov
popf
lahf
imul
inc
es
idivl
xchg
out
mov
stos
jns
pop
mov
daa
nop
movsl
ljmp
add
insl
in
ds
and
scas
pop
enter
es
mov
fbld
push
outsl
push
jg
mov
or
dec
mov
mov
xchg
sahf
int3
or
mov
les
add
pop
sub
out
jb
jmp
jne
adc
fcomps
mov
jecxz
lods
and
mov
cs
dec
inc
mov
movsl
xchg
mov
and
mov
push
mov
sub
mov
nop
fwait
lea
int3
dec
std
in
movsb
stos
lock
sbb
push
mov
push
inc
jecxz
ja
shll
mov
frstor
cmp
lahf
xchg
js
cmp
inc
out
sub
mov
inc
lods
cmpb
jns
jl
inc
hlt
cmp
pop
int
test
push
adc
je
daa
sub
and
dec
cld
push
push
pop
push
adc
sahf
nop
inc
pop
incl
cmp
aad
jge
sub
fsubs
push
orb
mov
rcr
orb
jne
loop
divb
loop
inc
sub
xchg
cmp
cmpsl
mov
cs
sub
loop
loop
insb
popf
inc
cmp
fdivrs
sti
stos
decb
xor
fsubr
xchg
cmp
faddl
in
push
fs
pushf
dec
lahf
mov
cld
popa
hlt
popa
push
or
mov
jnp
lock
int
pop
loope
dec
push
sub
adc
aad
test
leave
mov
xor
mov
xor
loope
mov
int3
sbb
je
mov
enter
adc
dec
mov
xchg
insl
inc
cmpsb
mov
mov
insb
mov
add
push
ljmp
in
mov
insb
jo
mov
add
orb
push
addr16
incl
fmull
movsb
add
lret
dec
sub
pop
or
aad
in
and
adc
jnp
mov
dec
dec
fldcw
sub
add
enter
push
and
dec
aaa
mov
pop
mov
loope
mulb
sub
js
add
dec
divl
outsl
fldcw
xchg
sbb
push
dec
inc
daa
sahf
roll
pop
jl
dec
pusha
mov
pop
adc
mov
mov
lds
mov
cld
adc
rclb
out
insl
negl
fadds
inc
gs
lds
or
cs
fldenv
mov
or
in
pop
daa
js
stos
and
arpl
call
sbb
mov
jmp
call
dec
pop
cmpsl
in
lea
int
sbb
xor
sbb
insb
mov
fidivrs
and
gs
jmp
jne
out
mul
cmpsl
jle
out
pop
insl
and
cmp
mov
test
js
pop
pop
cmc
jnp
and
xor
out
sbb
das
test
cmpsl
and
inc
sti
jle
adc
addr16
cltd
stc
pop
adc
stc
xchg
inc
push
jbe
inc
jge
inc
stos
push
out
stos
rcl
lds
sub
or
sub
outsb
dec
in
lock
dec
mov
xchg
dec
dec
lock
divl
inc
clc
leave
jg
and
cmp
inc
sbb
test
outsl
cmp
xor
or
and
lock
mov
fiaddl
inc
jno
jnp
stos
cmp
xchg
xchg
sub
sbb
cmp
cmpsl
mov
push
sahf
or
es
push
into
lahf
inc
or
mov
mov
int
mov
dec
in
lcall
pop
xlat
xor
and
fstpt
push
add
add
das
imul
mov
loope
xchg
xor
cltd
aaa
xchg
cld
cli
jmp
inc
cmpsl
xchg
icebp
cmp
and
scas
pop
in
cld
add
or
add
and
mov
push
fmull
popf
cwtl
mov
bound
popa
cwtl
fs
xchg
rcr
pop
stos
cld
aaa
or
mov
push
or
jae
sbb
mov
hlt
mov
movsb
pushf
dec
sbb
adcl
sbb
lahf
jae
adc
cmpsb
mov
clc
cmpsb
pmaxub
ret
add
jle
lret
inc
in
mov
hlt
test
jb
rolb
or
adc
hlt
adc
xor
sub
stos
sbb
into
push
cmp
xor
xchg
or
and
mov
fimull
gs
call
cmp
or
imul
in
push
es
inc
mov
decl
aad
xchg
mov
lods
subb
arpl
psubw
imul
or
cs
test
jns
lret
xchg
into
ljmp
lods
es
frstor
pop
in
aad
sti
jecxz
or
mov
push
pusha
pop
mov
outsb
aaa
dec
or
jge
xchg
out
mov
mov
lds
scas
or
arpl
cmp
fwait
scas
leave
xor
std
sub
mov
xor
xor
fwait
sbb
and
xchg
mov
push
add
push
stc
cmpsb
out
sbb
mov
mov
leave
jg
mov
dec
ljmp
test
enter
mov
test
movsl
adc
jne
out
mov
sub
imul
test
shr
jnp
lahf
sub
mov
popf
jle
add
adc
loopne
in
ss
out
pop
xor
dec
sbb
inc
movsl
mov
sub
mov
mov
negl
filds
adc
fninit
movsb
je
clc
adc
int3
push
lret
lock
ljmp
cmp
out
cmp
int3
cmp
push
out
mov
data16
cmpsb
pop
pop
loope
pop
dec
data16
push
test
gs
sbb
fistpl
xchg
imul
inc
and
mov
rorb
fimuls
pop
popa
pop
outsl
fsubp
jns
and
inc
jle
fsubs
sbb
and
xor
sub
cmp
sub
aad
cmp
mov
jp
fistpll
out
stc
push
cmpsb
inc
sbb
xlat
xchg
pop
out
and
xor
int
and
and
scas
jnp
outsl
dec
or
iret
or
ret
pop
add
cmpsl
pop
add
or
mov
pop
dec
mov
in
mov
or
jns
loop
adc
aam
jne
add
cmp
fistl
mov
lds
sub
cmp
adc
fcompl
hlt
mov
sbb
fstl
add
dec
lret
pop
cmp
fs
and
ret
mov
testb
cmp
or
imull
sahf
and
mov
xor
inc
xor
cmpb
pushl
scas
cmp
enter
xor
dec
jo
js
sbb
xchg
outsl
idivb
dec
sub
mov
clc
and
dec
sbb
pop
adc
push
fidivrl
cmp
and
int
cmp
and
aas
add
sbb
test
test
popf
add
daa
xor
popf
pop
fldenv
lods
mov
in
loopne
imul
push
mov
push
inc
jb
inc
mov
mov
rclb
enter
aam
jae
and
xor
add
je
ljmp
dec
or
mov
or
jbe
and
mov
cwtl
mov
clc
leave
dec
cmp
shl
and
cld
push
sbb
jg
shlb
les
addr16
sub
mov
add
lock
adc
out
loope
jge
jle
inc
jbe
iret
pop
mov
dec
bound
push
dec
inc
rcrl
loopne
add
cltd
aaa
bound
mov
mov
lret
clc
je
adc
scas
ret
dec
aam
sub
sbb
mov
out
xchg
xchg
out
jp
es
jbe
push
es
adc
xor
jmp
lods
mov
xchg
mov
stos
xor
fwait
into
pop
or
cmpsl
stc
ss
inc
dec
inc
int3
out
cmc
or
jg
popf
les
sub
pop
test
or
movsl
jo
and
sub
sbb
je
push
pop
push
push
push
jnp
dec
mov
out
sahf
push
in
in
or
stos
cmpsb
cs
lret
jl
mov
cmp
cmp
jne
int3
xchg
push
enter
enter
movsl
idivl
cmpb
add
lahf
sub
jnp
lahf
loopne
mov
clc
mov
and
sub
scas
pusha
test
scas
adc
pop
add
into
dec
aas
ds
add
sbb
sbb
addr16
jle
mov
cwtl
fstl
cmp
in
int
ljmp
aad
insb
add
out
mov
hlt
and
ljmp
xor
adc
dec
fs
cmp
jle
das
xchg
enter
inc
push
lret
push
xchg
sbb
mov
adc
inc
xor
mov
and
es
mov
jmp
loop
xchg
xlat
dec
pop
mov
js
lret
push
lret
addr16
push
scas
rcrl
ds
mov
xchg
scas
and
jp
jb,pn
dec
test
insl
aas
rol
ja
jbe
insl
fimull
fists
add
dec
int
pusha
fwait
and
sub
mov
mov
xor
xchg
cmp
pop
mov
loope
ffree
mov
std
push
add
test
std
inc
mov
call
mov
sub
and
adc
shrl
and
cld
aad
xchg
xchg
outsl
pop
out
add
test
mov
inc
jo
mov
std
or
lcall
gs
cli
iret
rcll
and
pop
jno
js
lods
adc
pusha
add
in
or
stos
or
aaa
inc
inc
insb
fwait
cmp
mov
out
ss
fisubrs
dec
inc
scas
dec
mov
adc
xlat
mov
cmpsl
ja
cmp
lcall
out
pop
mov
aaa
fldcw
les
cmp
pop
ss
push
stos
mov
mov
cmp
inc
pushl
rorl
jecxz
xchg
cmc
sub
leave
jp
push
mov
jno
pop
fbld
lahf
rcll
mov
add
cmp
stos
or
add
pop
push
cmp
dec
push
add
push
fwait
cmp
lret
int3
push
sbb
ds
dec
pop
aaa
inc
in
aas
testb
pop
lods
push
mov
mov
cmp
adc
inc
mov
mov
mov
cmp
xlat
insl
leave
xchg
repnz
inc
mov
scas
lret
jg
inc
test
bound
testb
dec
cmc
enter
cmpsl
jge
rclb
int3
dec
loope
out
mov
jl
sbb
and
dec
mov
in
adc
es
fsubl
dec
sbb
push
inc
pop
subl
and
out
xchg
and
or
pop
sbb
xlat
enter
inc
xor
popa
xor
adc
sbb
jnp
lret
add
repz
rcrb
dec
insl
push
fwait
loop
mov
fnstsw
jns
test
in
sti
inc
mov
cmp
in
and
mov
push
scas
push
cmp
iret
fidivs
cli
push
or
jp
add
inc
pushf
adc
sbb
je
imulb
cmovl
push
scas
shlb
fistpl
out
fcoml
mov
xchg
icebp
cwtl
outsb
in
in
and
sbb
sti
push
mov
lock
addr16
sbb
xorb
test
shlb
sub
sbb
cli
xchg
mov
in
ss
pop
test
imul
push
sub
xor
lcall
leave
and
mov
imul
insb
pop
imul
ljmp
cmp
jle
and
cmp
jnp
cmpsb
or
out
pop
mov
bound
cltd
repnz
pop
out
xchg
incb
imul
mov
mov
ljmp
lock
inc
cltd
inc
mov
int
and
cmp
or
and
mov
pop
fdivrs
dec
jg
aam
jno
fmull
push
jl,pt
int
fiadds
adc
arpl
add
sub
mov
pop
and
ret
add
fwait
adc
orl
sbb
sbb
push
sbb
pop
movl
repnz
out
or
int3
jp
mov
xchg
mov
push
xchg
popa
fwait
les
or
dec
inc
aaa
jne
jb
jo
jge
xor
and
push
mov
pusha
out
and
rclb
test
mov
cmpsl
loopne
mov
inc
add
lds
jno
dec
stos
jl
pop
inc
test
aad
push
sahf
cmpsb
scas
imul
adc
pop
mov
or
adc
mov
stc
addr16
js
cwtl
add
cs
dec
mov
mov
xor
mov
rorl
xor
push
cmp
adc
cmpsl
or
lods
jg
stos
loopne
outsb
das
push
mov
mov
pop
or
sbb
int3
cltd
call
xchg
and
popa
repnz
lods
jo
or
ret
sbb
or
and
outsl
test
stos
add
test
in
loop
and
xchg
add
test
pushf
push
fdivrl
bound
stc
adc
pop
iret
out
nop
mov
in
in
cmp
inc
sub
xor
sbb
sub
mov
inc
cmp
pop
sbb
das
mov
ret
inc
in
lea
loopne
in
xchg
pop
mov
mov
sbb
sub
out
cmp
movsl
xor
ljmp
jle
fdiv
adcb
add
pop
and
ljmp
mov
push
fwait
or
mov
mov
shlb
push
sbb
or
sbb
cmpsb
daa
js
xlat
movsl
mov
cmc
fcmovne
lds
scas
call
aad
inc
pop
push
stos
fisubl
mov
stos
cmpsl
hlt
jge
sub
xchg
inc
jp
mov
out
fmuls
sbb
fists
scas
out
repz
cltd
mov
pop
fdiv
jno
inc
and
mov
addr16
sbb
ret
lcall
popl
lcall
dec
lea
pop
mov
sbb
or
adc
mov
mov
lret
outsb
jno
mov
ss
and
outsb
xchg
add
pop
or
loopne
xor
mov
cmp
adc
loopne
push
aaa
and
push
mov
outsl
add
cli
pop
vpsubb
adc
inc
jl
je
repnz
xor
jmp
pusha
mov
lret
push
mov
int
mov
push
cld
inc
js
out
xor
mov
sbb
ljmp
lods
jb
xchg
push
mov
mov
pop
cwtl
mov
sahf
dec
cmp
push
shrl
jns
mov
ret
nop
dec
ds
icebp
cmp
xorb
add
test
lds
js
add
push
popf
dec
sbb
popf
cmp
lea
xchg
dec
cmpsb
pop
dec
jb
in
loopne
paddq
mov
in
sub
lahf
xchg
add
ljmp
test
xor
sti
jmp
jne
test
inc
and
jnp
sub
dec
push
divl
push
push
xchg
cli
jnp
sbb
pop
pop
stos
fisubrl
stc
push
gs
xlat
add
xor
dec
xor
and
and
clc
rolb
ret
and
out
shl
xorl
das
shl
cmpsb
imul
and
or
ljmp
fadd
lea
test
mov
negl
and
ret
in
cmp
push
jecxz
xor
pop
push
mov
ret
sbb
out
imul
xor
das
pop
sbb
dec
mov
jb
mov
lahf
les
inc
mov
out
shlb
or
insb
lds
mov
xor
sahf
dec
mov
leave
fdivl
rcrl
mov
inc
add
setle
out
sbb
jmp
push
mov
pop
mov
jl
dec
dec
cmpsb
pop
jmp
xor
pop
insb
push
cmp
int3
push
push
xchg
jmp
pop
and
xor
test
je
test
int
jmp
cs
xchg
push
imull
ret
push
sub
inc
loopne
pop
dec
and
out
mov
and
sahf
in
imul
or
mov
jmp
dec
imul
ret
sbb
in
repnz
cmp
lcall
test
insb
lods
in
sub
mov
out
jl
inc
jnp
xchg
mov
ljmp
rclb
es
sub
cmp
mov
mov
out
repz
add
aad
orb
jb
inc
push
scas
in
push
insl
and
ficoms
nop
mov
xlat
jl
push
sbb
sbb
loop
xchg
mov
push
push
sbb
mov
add
data16
dec
mov
andl
fstpt
sbb
loop
mov
mov
lods
clc
mov
jne
loop
xor
les
or
les
in
inc
jns
insl
mov
jbe
arpl
gs
ss
or
pop
ss
daa
mov
adc
stos
jbe
mov
into
push
or
push
xchg
and
div
imul
imul
pop
sub
lea
adc
lahf
jg
xor
and
and
mov
inc
cmovg
fstp
sbb
jge
pop
lcall
aam
mov
or
xchg
leave
lods
jne
push
int3
std
mov
leave
adc
dec
pushw
roll
lds
pop
loop
xor
arpl
sbb
mov
push
inc
aam
fcompl
ja
cmpsb
sar
push
or
test
dec
pop
repz
dec
push
mov
int3
pop
or
adcb
cmp
and
jle
mov
fisubl
std
scas
adc
out
cmp
out
outsb
cltd
ret
mov
dec
test
inc
lds
pusha
inc
xchg
sar
xchg
cmp
in
push
jo
sub
out
loop
sub
cmp
fadd
lods
lret
pusha
mov
andb
mov
cs
cmp
je
bound
iret
int
rclb
and
jmp
ljmp
into
aam
aad
xchg
sbb
popa
aam
or
add
add
add
xor
jo
mov
loop
jg
push
add
mov
xchg
push
xchg
mov
cmp
add
add
push
shlb
mov
cmp
es
adc
sahf
add
adcb
icebp
ds
mov
movsb
or
xor
jbe
cmp
dec
mov
mov
sub
push
imul
arpl
jne
sub
mov
aam
xor
jns
out
in
ja
pop
or
lret
jo
out
cs
and
adc
stos
pop
mov
pop
int3
xor
cltd
jbe
dec
sbbb
repnz
cli
mov
add
jne
mov
dec
ret
jae
inc
nop
jecxz
mov
loop
shrl
push
out
out
jg
rclb
xchg
add
mov
iret
ja
pop
jb
sbb
mov
aam
dec
xchg
mov
adc
pop
adc
or
movsb
add
aad
add
ljmp
loope
add
dec
adc
add
adc
iret
je
std
sub
aam
mov
jmp
andl
mov
les
jno
cmpsb
jb
xchg
data16
jl
scas
and
in
mov
loope
add
sub
add
cmpsl
bound
inc
mov
sub
popf
add
loop
cld
mov
psubsw
popf
add
jp
leave
sahf
out
jg
sbb
cmc
loop
push
fcompl
jnp
insl
mov
daa
inc
jne
mov
std
adc
testl
sbb
sbb
fisttpl
shlb
xchg
push
fwait
out
insb
xchg
xor
hlt
mov
test
push
jb
and
bound
xchg
into
outsb
jge
xchg
xor
mov
adc
rorl
mov
out
pop
int3
push
pop
sbb
orb
xchg
pop
xchg
stos
adc
imul
add
sbb
hlt
jge
imul
mov
stos
packuswb
or
hlt
mov
jo
jge
cli
ja
xor
scas
fnsave
push
inc
dec
and
repz
aam
or
jns
adc
stc
push
and
pop
js
push
mov
jne
incb
xchg
cmpsl
mov
loope
outsb
push
lret
call
cmp
jne
pop
es
sub
sti
aad
mov
xor
in
out
lret
jae,pt
and
mov
push
dec
or
sub
add
sub
sbb
inc
icebp
outsb
mov
loop
sub
mov
rolb
stos
push
inc
andl
or
mov
cmp
mov
xchg
mov
ljmp
ljmp
aas
or
ss
xor
sti
dec
mov
movsl
mov
stos
stc
icebp
inc
pop
xor
jnp
inc
push
jl
insb
mov
dec
and
sbb
loopne
mov
push
cmp
stos
inc
xchg
sbb
test
sbb
mov
loope
jns
mov
icebp
fcoms
jge
shlb
ljmp
idivb
gs
movsl
jne
gs
ss
pop
scas
cmpsl
mov
scas
lods
das
and
cmp
call
insb
fsubrs
mov
pop
popf
sub
movsl
pop
pop
rcll
xchg
or
roll
shll
sbb
adc
cmp
out
or
sub
mov
out
xchg
sub
push
into
shl
int
arpl
add
cmp
dec
les
rol
daa
jl
push
rcrb
imul
xor
mull
aad
mov
imul
out
insl
or
sub
cs
fcmovne
sub
pop
in
jmp
adc
adc
lcall
fisubl
gs
push
shrb
add
pop
sbb
mov
and
dec
xchg
dec
mov
inc
bound
ljmp
nop
jno
sarb
xchg
loope
mov
ret
adc
push
push
jge
add
int3
fs
cmp
adc
insb
les
inc
inc
jns
push
shrb
and
sbb
loop
mov
test
or
adc
mov
cmp
fsubr
push
pop
pop
out
mov
sti
or
add
cmpsl
outsb
sbb
rcrb
rorl
add
std
pushf
jecxz
popf
xchg
or
aam
and
push
jecxz
cmpsl
pushf
and
sbb
inc
adc
ljmp
je
mov
stos
pop
jmp
lret
add
mov
add
mov
push
inc
dec
ljmp
mov
adc
dec
icebp
les
clc
mov
mov
adc
lock
jo
push
xchg
out
dec
sub
call
leave
mov
or
inc
popa
cmp
stos
inc
iret
pop
xor
jnp
andb
cmp
sbb
adc
das
xchg
mov
cld
popa
cmp
jle
push
lahf
orb
mov
lods
xchg
or
pop
in
jnp
out
cld
xchg
sub
out
pop
xlat
jne
imul
add
sbb
pop
idivb
cmc
or
aas
mov
stc
dec
fisttpll
jns
cmpb
iret
mov
shrb
in
push
mov
or
mov
xchg
push
cmp
je
inc
mov
test
das
aaa
stos
or
dec
in
pop
sub
stos
leave
jl
adc
fmuls
sbb
add
mov
test
mov
repnz
push
outsb
mov
cs
pop
dec
sahf
jae
ret
mov
int
idivb
shlb
cld
shl
mov
pop
insb
cltd
movsl
int3
out
push
fidivrs
ja
pusha
lods
sub
or
icebp
hlt
mov
into
adc
inc
test
rorl
or
sub
dec
push
push
icebp
inc
lret
divb
mov
adc
dec
jbe
xor
add
lahf
lahf
jl
fsubrl
mov
fwait
push
mov
push
test
mov
int3
aam
repz
cmp
lcall
jo
cmpsl
mov
js
stc
jbe
sbb
add
and
cmp
mov
mov
add
out
gs
xlat
imul
sbb
pushf
pop
push
dec
cmc
cmpsl
fiadds
inc
mov
xchg
jge
pop
lcall
mov
ljmpw
cmpl
dec
xor
jb
pop
test
jb
imul
dec
fildll
cmp
and
stos
dec
das
jle
dec
jle
xor
in
xor
fcoml
gs
leave
add
sbb
mov
adc
xlat
pushf
stc
mov
mov
mov
xchg
add
push
loop
cli
dec
imul
sbb
cmp
sbb
pop
or
sbb
sub
jp
leave
dec
jp
lds
jge
fldt
push
jo
and
je
fldcw
inc
adc
and
cmc
mov
pop
jge
iret
mov
adc
lcall
out
cmpsb
lock
xchg
mov
sbb
lcall
mov
add
xchg
repnz
push
test
push
inc
cmp
rcll
les
and
cmp
repz
rcrl
movsl
sbb
out
out
xorl
push
lods
dec
add
popa
in
dec
ret
cs
sar
pop
mov
pusha
sub
add
mov
shll
lcall
incb
sbb
xchg
repz
inc
pop
pop
cwtl
inc
adc
pop
pop
imul
insb
add
mov
movsb
adc
xor
cli
jl
addr16
cld
cli
ja
pop
add
dec
mov
dec
out
pop
cli
nop
and
add
setp
test
jbe
int3
shrb
insl
mov
push
ret
push
push
fisttpll
adc
push
int3
push
in
ret
xchg
cmpsl
inc
and
dec
movsl
push
mov
and
std
ret
sti
loop
jo
ret
sar
sbb
or
orl
mov
inc
inc
lahf
aad
stos
mov
dec
aaa
or
adc
push
lcall
jmp
xlat
aas
adc
loopne
lods
daa
jle
mov
in
fdivr
xchg
xchg
iret
aaa
add
out
sbb
adc
jo
xlat
rcll
loopne
jb
push
sbb
mov
or
mov
popa
adc
mov
imul
or
add
movsl
sub
sub
mov
pusha
loope
dec
adcl
orl
inc
je
push
mov
loopne
dec
unpcklps
mov
filds
and
sahf
lahf
add
cmpl
push
js
std
push
test
fs
pop
xor
fiadds
sub
lcall
cwtl
push
lahf
aad
outsb
mov
out
movsb
add
or
push
cmpsb
das
sub
test
arpl
icebp
jne
jb
xor
mov
movsb
pop
jg
jecxz
and
sub
inc
inc
faddl
add
adc
bound
xchg
les
call
sub
cltd
jne
leave
xor
pop
mov
repz
int3
iret
add
mov
xor
inc
sub
adc
and
les
dec
push
cmp
sbb
outsb
into
xchg
mov
add
inc
add
jno
iret
aas
outsb
sbb
xchg
in
bound
rclb
lcall
stc
enter
mov
or
imulb
lea
xlat
cmp
add
loop
stos
fcompl
inc
movsl
adc
lret
mov
mov
push
stos
fcoml
sub
mov
fsubl
xchg
push
out
jne
jbe
inc
cli
jae
ss
popf
fistps
movb
cmp
lahf
adc
push
adc
test
sbb
inc
sub
inc
sbbb
repz
xchg
mul
sbb
in
popf
insb
mov
lods
push
xor
xor
or
mov
ljmp
push
inc
xor
and
sub
sbb
les
pop
addb
pop
xchg
cmpb
xchg
mov
and
adc
jg
jmp
push
nop
xor
imul
in
out
test
mov
sub
xchg
or
jmp
mov
dec
inc
and
mov
jg
xor
repnz
push
aaa
popl
push
dec
and
adc
insb
int
adcl
xchg
test
hlt
pop
xchg
scas
test
sbbl
stos
xlat
cli
mov
fbstp
or
and
xchg
aaa
rcrl
or
idiv
jg
mov
loope
ja,pn
pop
xchg
iret
cwtl
mov
fwait
lock
stc
in
ljmp
mov
sbb
lock
test
or
cltd
sub
std
stc
lea
and
xor
jmp
orb
in
mov
fcomps
pop
xchg
jl
cmp
push
jl
sarl
adc
inc
mov
jecxz
cmp
lahf
ss
leave
insl
and
daa
loope
ret
mov
sbb
outsl
aaa
pop
inc
es
mov
adc
push
jp
push
mov
int3
repnz
mov
mov
push
cmp
repnz
sub
int3
jno
ja
fs
pop
jmp
insl
addl
cltd
ljmp
insb
sarb
sub
stc
outsl
stos
addr16
pop
aaa
add
out
cld
or
mov
cld
jecxz
pushf
scas
mov
repnz
negl
loopne
ret
sbb
mov
sbb
jae
sahf
and
test
push
mov
mov
push
addr16
fwait
scas
aas
lea
xor
mov
cld
movsb
mov
sbb
sbb
in
fnstcw
in
inc
xchg
loope
rorb
sub
jae
inc
stos
fsub
push
lret
jae
add
sub
jbe
shrl
daa
cltd
and
popa
in
mov
mov
xchg
add
jb
flds
lret
in
dec
arpl
add
ja
xor
scas
pop
in
jbe
jae
testl
gs
sbb
ja
mov
and
inc
outsb
dec
push
sti
pop
jno
sbb
sub
aad
jnp
lea
jmp
icebp
hlt
fldl
jnp
mov
inc
xor
xchg
mov
dec
push
xor
outsl
or
imul
loop
and
mov
xlat
outsb
push
jge
cmp
mov
dec
pop
sbb
xor
addl
mov
xchg
hlt
mov
bnd
enter
jno
adc
mov
mov
inc
ret
insb
int
mov
pop
stos
mov
pop
sub
lock
jecxz
xor
pop
and
lods
fs
lods
shll
in
mov
je
leave
out
in
jle
or
add
pushf
lock
cmp
xchg
push
xor
add
pop
enter
in
dec
pop
push
loop
dec
nop
pop
sub
inc
push
fwait
pop
popf
fists
out
xchg
ds
pop
cmp
dec
loop
stos
and
fs
movsb
push
mov
addr16
icebp
inc
repnz
add
jmp
aas
mov
arpl
cmc
or
cmpsl
es
in
jno
inc
cmp
js
mov
ftst
mov
push
lret
daa
push
stos
cmc
outsl
data16
jle
cmp
sub
mov
movb
les
movl
inc
mov
out
mov
cltd
dec
iret
shlb
imul
sub
sbb
xor
into
or
mov
dec
test
test
or
mov
cwtl
xchg
sub
ljmp
in
fldt
jnp
cmpsl
fdivs
scas
fs
test
jmp
sbb
jg
lea
daa
cmc
stos
std
ss
lahf
push
xor
ljmp
rclb
cmp
jb
xchg
add
xlat
movsb
xchg
jl
jl
addr16
subb
dec
insb
mov
sub
push
xchg
xchg
jb
add
mov
ret
dec
mov
mov
dec
mov
and
push
imul
xchg
cmpsl
jne
in
ljmp
sub
jne
lahf
sub
inc
xchg
daa
cmp
push
sbb
jmp
popa
out
or
cmp
sti
and
xchg
bound
inc
add
sub
mov
xchg
cli
inc
aam
sub
lahf
jae
fucom
mov
icebp
mov
or
push
call
adc
popf
sub
jmp
movsb
out
dec
cld
pop
sub
jbe
arpl
mov
cmpsb
pop
cmpsb
adc
lahf
in
popl
mov
pop
bound
test
hlt
jge
mov
test
xchg
cmpsb
clc
cmpsb
dec
inc
fidivs
push
pop
xor
xchg
adc
push
xchg
adcb
mov
jo
dec
sbb
ret
cmp
mov
and
mov
xchg
loop
sti
lret
mov
mov
inc
nop
jge
arpl
pop
mov
scas
dec
dec
mov
cmpsl
cltd
out
push
dec
push
stc
or
adc
push
add
inc
mov
sbb
shlb
push
ret
pushf
dec
scas
xor
xlat
shrl
mov
ja
shl
insl
push
arpl
pop
outsl
push
dec
mov
push
mov
inc
jg
pop
mov
icebp
into
arpl
aas
rolb
xchg
mov
push
jl
lods
mov
cmp
iret
enter
stc
add
shrb
fistl
add
ja
ret
or
inc
xor
addr16
add
mov
jb
cltd
les
sub
in
mov
jno
push
mov
xchg
dec
ljmp
dec
aas
lcall
dec
iret
rcr
in
in
mov
xchg
inc
push
clc
xchg
jmp
loope
mov
sbb
fdivp
jmp
int3
aas
imul
jno
adc
push
lret
cmc
push
cltd
pop
mov
or
movsb
mov
inc
xchg
jl
fildl
js
sarl
cs
mov
adc
mov
mov
pop
mov
insl
add
mov
push
call
cmp
jge
mov
jl
aad
ljmp
movsl
push
sahf
mov
popa
scas
mov
aam
jbe
ret
pop
test
cs
arpl
or
mov
pop
call
adc
sahf
stc
mov
sbbb
mov
inc
xor
test
sahf
xchg
mov
xchg
fadd
push
insb
sub
ljmp
adc
mov
mov
cmp
sbbb
rcrl
pop
sbb
fdecstp
sbb
mov
hlt
mov
pop
out
icebp
add
or
or
dec
fwait
mov
imul
mov
push
push
push
sahf
xchg
lret
data16
mov
pop
jae
sub
add
aas
incb
sbb
pushf
pop
hlt
jns
ficoml
pusha
pushf
insl
nop
and
mov
in
mov
adc
movsb
jnp
in
add
add
add
imul
stos
into
ja
aad
andb
nop
imul
ret
cltd
call
cmp
push
int
xchg
fcmovnu
lret
into
cwtl
jb
sarb
push
or
test
pop
xorb
mov
popa
adc
lea
inc
xlat
push
pop
loopne
mov
ljmp
daa
dec
icebp
xchg
cli
xor
movsl
loop
mov
sub
data16
fmuls
mov
scas
out
pushf
mov
in
cwtl
sub
pop
adc
inc
inc
fisttps
lods
pop
rol
imul
mov
jle
cmc
xchg
jb
push
cmp
push
xor
xchg
jecxz
sub
icebp
mov
mov
movsb
push
dec
cmc
aam
outsl
xchg
test
xor
cmpsl
push
mov
jl
stos
outsl
or
dec
mov
mov
stc
jbe
mov
les
mov
push
mov
mov
fistpl
js
scas
push
jne
mov
jns
dec
fsubrs
mov
enter
pop
lcall
aas
cmp
lret
imul
aaa
mov
fisubs
xchg
lock
sbb
cmp
cwtl
adc
jnp
icebp
sub
rolb
out
dec
iret
repnz
dec
adc
sub
pop
push
adc
push
push
stos
push
cli
sub
cmp
cli
aaa
and
inc
ljmp
dec
repz
mov
js
push
dec
pop
je
lahf
stc
add
add
scas
out
mov
mov
sub
sbb
aaa
call
es
push
and
sub
cmp
inc
sbb
jge
stos
inc
jbe
push
jb
insb
stos
sbb
lds
adc
sti
nop
adc
fs
mov
inc
repz
shll
scas
mov
imul
adc
mov
mov
xchg
xor
sbb
mov
jg
fs
mov
sbb
fwait
xchg
mov
orl
add
lret
and
mov
inc
sbb
pop
fdivp
mov
arpl
push
mov
sbb
lret
and
hlt
or
inc
aaa
in
mov
fsubr
ja
add
inc
ds
add
fwait
mov
es
arpl
fisttpl
test
pusha
dec
ss
leave
jo
xchg
jae
cmp
mov
xor
mov
lods
cmc
daa
and
pop
mov
stc
xchg
and
gs
test
popf
aaa
popa
clc
les
jns
jnp
push
mov
das
lds
js
imul
lcall
jg
loop
out
mov
dec
mov
mov
xchg
sub
dec
icebp
pop
push
stos
lods
outsb
push
adc
pop
popa
pusha
pop
jae
outsb
es
jne
mov
pop
lcall
ja
push
test
ds
loopne
out
and
xchg
cltd
xorl
push
jmp
dec
xchg
push
adc
or
sub
xchg
adc
popa
pop
ret
inc
aas
and
loop
xchg
cmc
dec
movsl
je
dec
loop
cmp
out
imul
ds
sti
bound
dec
mov
movsl
gs
daa
adc
mov
sub
lods
mov
lret
mov
orl
jae
push
jle
sahf
dec
stos
mov
add
movsl
out
sbb
repz
out
add
mov
out
popa
pop
pushw
jge
xor
insb
inc
aaa
add
mov
pushf
sub
jnp
jp
sub
fcomps
icebp
scas
sub
add
and
xchg
ja
fisubrs
jp
sub
xchg
xchg
jecxz
push
ljmp
xchg
pushf
push
push
sub
push
scas
fildll
push
rclb
or
ror
xchg
pop
xchg
add
sub
jmp
adc
out
fdivs
sub
or
mov
in
enter
les
jno
cmpsl
repnz
push
out
xor
testl
push
jmp
popf
lahf
inc
imul
lret
das
push
mov
test
jecxz
mov
icebp
push
xor
stc
loop
leave
cmp
mov
inc
aam
ds
add
xchg
sbb
cmpsl
xor
inc
xchg
nop
pop
pop
adc
add
pop
mov
js
movsl
inc
fists
mov
fsubr
xor
imul
fcmovbe
inc
push
mov
cwtl
mov
cmpsl
inc
rcrb
mov
xor
xor
and
scas
fcmovnu
out
xchg
or
xchg
imul
cwtl
jb
xchg
pop
fistl
mov
fistl
mov
push
jl
pop
xor
loop
lods
adc
cmp
cmpsb
leave
dec
sbb
data16
jg
inc
in
cwtl
push
sub
adc
sbb
inc
and
lahf
mov
mov
je
push
mov
test
pop
cmp
jo
xor
aam
std
and
sub
filds
pushf
jae
stc
outsl
insl
rorl
jo
in
jne
xchg
das
hlt
movsb
loopne
mov
inc
and
cmc
adc
daa
pop
andb
je
sbb
ljmp
mov
lret
test
imul
or
sti
imul
aaa
cld
movl
mov
sub
fdiv
les
dec
xor
aaa
insb
jecxz
out
int3
jmp
jecxz
fwait
cmc
mov
insl
fnstenv
mov
dec
test
gs
mov
and
addr16
or
lods
cs
sbb
jge
xchg
fwait
mov
rcrl
sbb
into
ret
ret
shrl
jb
mov
rclb
dec
and
in
addr16
imul
xor
mov
sbb
ret
test
or
or
test
in
sahf
cltd
out
dec
jl
int3
mov
sub
dec
andl
adc
jp
out
inc
sub
adc
push
mov
pop
out
pop
pop
not
mov
and
add
test
les
add
mov
adc
imul
xchg
inc
dec
fdiv
iret
pusha
jge
mov
fdivrl
add
add
aas
fwait
jmp
arpl
push
dec
stos
rcrl
jnp
pop
sub
fdivrs
dec
mov
iret
sub
pop
pushf
cmp
xor
mov
arpl
add
adc
in
push
or
fnsave
fs
xchg
aam
mov
xor
pop
jecxz
fldt
mov
scas
xchg
inc
fisttpl
or
inc
stc
out
xor
xchg
mov
ja
cld
loopne
jb
pop
stos
adc
push
adc
jecxz
call
lods
rcl
push
jp
dec
pop
xlat
test
rorl
jecxz
mov
mov
or
test
insb
je
lea
sbb
mov
fcoms
std
fbstp
repz
js
cld
rclb
push
dec
or
push
mov
mov
jg
rdpmc
inc
dec
jp
scas
call
or
dec
out
mov
or
lcall
and
adc
push
push
loopne
sti
jb
jp
dec
imul
sbb
or
data16
aaa
es
cmpsl
int3
shlb
test
or
ret
inc
adc
test
frstor
xor
in
inc
cmpsb
jecxz
mov
iret
outsb
add
outsb
mov
js
popa
pop
loope
bound
test
insb
and
mov
int3
mov
sub
imul
dec
push
stos
mov
and
fistl
mov
repnz
sub
cmp
imul
push
push
push
iret
dec
or
pop
iret
push
push
insb
xor
push
fimuls
add
push
jp
js
clc
and
repnz
pop
daa
rcrb
stc
pushf
jp
cmp
adc
mov
push
andb
ja
jb
dec
jge
mov
add
pop
xchg
mov
aas
jmp
cli
jge,pn
jae
sub
lods
sti
pop
mov
dec
cmpsb
arpl
fldl
pop
mov
xor
jp
lret
loop
jle
arpl
push
sbb
out
jecxz
daa
add
fcmovu
xor
pop
sub
jp
sub
mov
pop
add
xchg
sub
loope
aam
bound
sub
notb
fcmovnu
jl
fidivs
adc
into
or
or
pop
add
fs
mov
and
inc
cli
fcoms
rorl
push
pop
xor
mov
sahf
inc
or
adc
out
idivb
out
decl
jne
sti
mov
test
loop
fisubrl
or
movsb
mov
inc
sarl
es
sbb
or
aam
test
ja
icebp
enter
lods
add
or
nop
dec
outsl
cli
out
lcall
leave
cmp
dec
scas
stos
lods
mov
mov
push
mov
cld
push
pop
movsb
push
dec
or
dec
xchg
xor
cmpl
rcrl
adc
pop
into
inc
push
cld
rcr
int3
cmc
pop
jns
cmp
and
push
lea
mov
jne
dec
leave
sbb
aad
ds
cmp
lcall
lahf
fs
xor
mov
scas
and
outsb
adc
cmpsl
sub
add
xor
outsl
mov
jbe
sbb
mov
repz
sbb
xchg
push
pop
inc
lock
aaa
outsl
adc
aam
stc
mov
std
xchg
js
sti
out
xchg
sub
push
loop
or
addb
lds
sub
hlt
imul
push
repnz
cltd
movsb
jg
cmpsb
loop
rcr
movsl
arpl
push
xchg
andl
scas
test
imul
push
sub
je
mov
lock
imul
out
out
inc
jbe
adc
in
dec
adc
outsl
xor
push
xor
iret
inc
nop
cmpb
aam
call
sbb
arpl
sub
sub
pusha
pop
cmp
push
jne
xor
adc
lock
and
mov
sub
lock
int3
inc
ret
div
xor
xor
mov
sub
insl
mov
xor
test
xchg
dec
sbb
fidivl
fnsave
hlt
in
xor
push
xor
xchg
push
mov
add
mov
xchg
push
xor
push
or
push
loopne
adc
cmpl
sub
and
add
lock
inc
sub
pop
movsl
js
pop
fisubl
jno
inc
mov
inc
stc
icebp
jno
cmp
out
icebp
pop
and
imul
jl
in
adc
sbb
ret
mov
ret
lcall
loope
or
xchg
mov
je
xchg
add
fistl
dec
cmpsl
inc
cmp
cmc
stc
in
add
or
sti
xchg
push
aad
adc
sub
popa
mov
ret
sarl
fcmovnbe
fstl
cs
jmp
mov
xor
fdivr
iret
notl
sbb
mov
cmp
mov
mov
in
orl
lret
pop
xchg
sub
leave
pop
mov
and
fbld
std
mov
cli
sub
scas
and
push
loopne
or
daa
add
ja
pop
jg
rcr
fdivp
stos
addl
or
fmull
cmpsl
jg
xchg
xor
ret
push
shrl
xlat
aam
negb
rol
iret
xor
jmp
pop
xchg
dec
std
cmp
jae
sbb
cmp
inc
add
in
outsl
test
or
ja
popa
leave
sbb
inc
jne
lcall
mov
sbb
pop
enter
xor
jns
int
mov
cwtl
add
push
mov
jmp
fidivs
adc
bound
aad
add
arpl
sti
aad
cld
ss
jnp
adc
hlt
sahf
push
aas
jp
mov
push
sub
outsl
xor
test
cmpsl
adc
inc
lret
mov
ret
cmp
pop
into
push
hlt
hlt
push
inc
mov
adc
stc
or
jl
jge
fs
ja
fisubl
cltd
stos
test
ret
jle
adc
shrl
jmp
dec
in
jae
in
sbb
jae
add
outsl
mov
pusha
jno
loopne
mov
scas
jp
lret
sahf
sahf
shll
sbb
mov
inc
or
dec
leave
nop
sub
sub
in
std
ljmp
rolb
cmpb
es
xor
and
push
popf
fistpl
out
fwait
mov
dec
inc
mov
call
push
add
xorl
cwtl
sbb
inc
pop
cmp
fidivrs
mov
mov
stos
scas
mov
xchg
mov
std
imul
cmp
ret
rcrl
push
sarl
out
dec
fs
pop
test
mov
fistpl
dec
aam
imul
das
enter
ds
out
jbe
cmpsl
jno
insb
sub
pop
out
shlb
and
dec
test
insb
mov
lahf
mov
push
cmc
add
fneni(8087
jmp
lret
or
lcall
jno
pop
les
scas
lods
in
mov
and
cmp
mov
out
call
hlt
pop
xchg
add
fsubr
mov
gs
mov
or
mov
jbe
mov
adc
jp
xor
pop
rolb
ret
jge
icebp
pushf
push
mov
sbbb
fisubl
fldenv
sub
jae
inc
test
imul
sbb
in
repnz
rcll
mov
jo
fldenv
pop
rorb
pop
or
insb
insl
scas
loopne
jo
popf
xor
lea
inc
pop
push
jge
test
sub
imul
lods
int3
and
sub
dec
push
repz
into
add
stos
pop
mov
push
and
lahf
cmpsb
xor
jle
inc
stc
icebp
es
daa
mov
cmc
enter
pop
addl
out
in
mov
mov
mov
lahf
cmpsl
add
lahf
sbb
cmp
inc
pop
dec
scas
leave
dec
in
inc
and
test
cmpsl
mov
and
cmp
test
stos
dec
iret
out
fcmovnb
rclb
fnsave
jg
xor
add
dec
pop
icebp
jl
fdivr
xchg
or
mov
mov
lret
xchg
loope
add
or
mov
mov
jp
or
cmp
xchg
movsl
outsb
cmp
cmp
shrl
insb
mov
test
xorb
test
lret
jno
sbb
and
insb
add
jg
mov
add
mov
out
orl
fiadds
gs
xor
sub
or
dec
dec
dec
mov
jl
sbb
pop
jg
pop
mov
xlat
lock
dec
dec
fsubrl
iret
push
aaa
ja
sarl
jle
fscale
cmp
push
push
divl
movsb
xchg
xchg
add
sub
jne
in
mov
mov
lods
dec
push
sub
shlb
mov
aam
xor
inc
int
jge
loope
push
test
or
rcll
mov
test
cmpsl
cmpsl
mov
roll
scas
jecxz
or
or
add
aaa
cmp
ja
mov
mov
dec
test
mov
fidivl
loopne
mov
cmp
addr16
xchg
push
hlt
lods
mov
and
ret
popa
imul
enter
adc
jne
pusha
xor
lea
ret
scas
jbe
lods
add
gs
jl
lret
fcompl
xchg
mov
mov
addr16
icebp
mov
or
xor
xor
mov
mov
push
rcrl
sub
push
aas
paddusb
mov
pop
xor
sbb
daa
iret
out
repnz
xor
sub
mov
out
and
or
imull
std
popf
adc
lcall
xchg
lock
and
pop
pop
lahf
adc
mov
xor
ficompl
push
loope
ss
dec
pop
mov
jnp
or
fmull
inc
into
enter
lea
stos
gs
jge
pop
inc
int
add
aaa
inc
rorb
out
shrl
enter
sub
out
js
cmp
cmpsb
aas
push
mov
movb
ret
fimull
mov
pop
add
mov
rorl
sbb
repnz
mov
cmp
dec
push
sbb
xchg
jg
or
push
std
cmc
fdivrs
inc
jae
adc
or
and
cmp
or
jl
leave
in
jg
test
pop
add
dec
dec
stos
jne
jno
and
in
cmp
repz
push
push
sub
mov
int
stos
push
inc
and
sbb
out
mov
ret
push
jp
add
inc
stos
ret
rol
xor
filds
jge
not
es
mov
aad
pop
pushf
fldcw
nop
add
loope
das
push
sub
out
decl
jl
pusha
fstl
mov
sbb
cs
and
in
pop
cmp
cltd
inc
xchg
mov
cmpsb
leave
sahf
jg
addl
push
roll
push
push
test
inc
dec
mov
xor
je
mov
sti
cmc
fistpl
scas
arpl
ja
pop
int3
out
mov
mov
push
cs
xchg
arpl
sbbl
and
mov
pop
jecxz
iret
or
test
xor
inc
or
fmulp
loope
xor
mov
xchg
pop
xchg
jge
mov
lods
out
clc
push
gs
xchg
or
mov
pop
mov
in
das
insb
or
mov
fucomp
repz
inc
test
jmp
aad
insl
mov
lret
bnd
cmc
adc
inc
xchg
push
cld
xlat
mov
xor
or
xchg
dec
cli
mov
fnstcw
lds
cmp
fisubl
sahf
imul
shlb
leave
dec
and
mov
cmp
jne
mov
cmc
mov
add
or
mov
mov
mov
cmpsl
lahf
inc
aad
xorb
push
cmp
psraw
xchg
insb
cmp
les
mov
xor
xor
cwtl
int
mull
mov
loop
adc
push
inc
push
lds
addr16
aam
scas
orb
pop
shrb
das
jg
subb
fwait
stc
and
clc
jmp
push
lock
inc
lcall
pop
mov
push
filds
out
xchg
push
push
cli
loope
mov
aaa
test
inc
stc
in
xor
int3
mov
push
sbb
mov
and
inc
xchg
stc
push
or
mov
enter
in
jge
add
pop
mov
mov
xchg
orl
mov
mov
push
inc
repnz
adc
pusha
xchg
xor
cmp
lret
mov
add
test
lret
mov
push
ja
xor
gs
xchg
push
in
mov
mov
cmp
popf
cmp
out
jmp
scas
xchg
int3
fmuls
dec
addr16
test
xlat
pop
std
pop
mov
add
mov
lea
inc
xor
and
fcmovu
push
add
mov
call
fdivrl
xchg
mov
in
sub
sub
jne
imul
fdivs
jae
inc
insl
sbb
cmc
ds
int3
fdivl
sub
stos
ss
add
add
fcmovnbe
and
pop
dec
fwait
lea
fdivrl
stc
ljmp
sahf
mov
adc
test
adc
cli
xor
test
mov
jnp
or
mov
dec
sub
xchg
dec
int
je
lods
xchg
sub
dec
enter
test
pop
out
arpl
js
int
push
data16
xchg
xchg
scas
mov
shlb
bound
std
or
sbb
outsl
test
push
xorb
ret
leave
mov
mov
cmpsl
dec
inc
dec
imul
fsubrs
pop
outsb
pop
xor
inc
in
xor
mov
lahf
push
in
mov
pushf
outsl
dec
aam
and
jp
inc
add
loopne
test
or
adc
arpl
mov
add
scas
sbb
mov
push
mov
xchg
andl
cmc
fisubrl
cld
mov
stc
mov
out
pop
cmpsb
mov
mov
clc
sbb
out
jmp
iret
jnp
jge
dec
lahf
jb
add
push
adc
and
leave
rclb
lea
repz
push
cmp
push
and
fcmovnbe
pop
mov
push
loop
or
sub
cltd
pop
mov
frstor
mov
call
pop
sti
or
mov
mov
dec
pop
loop
mov
outsb
aaa
or
add
jb
iret
lcall
or
icebp
jb
and
jle
jp
inc
loop
fldcw
pop
hlt
xorb
movsb
mov
xchg
lods
sbb
mov
adc
dec
mov
in
inc
les
es
mov
shll
or
pop
mov
sub
or
popa
xchg
mov
roll
out
pop
arpl
stos
fsts
mov
push
mov
and
adc
xchg
push
insl
insl
icebp
repz
lahf
cld
repz
into
jo
rorl
push
inc
xor
push
add
xchg
ficoms
sbb
xchg
mov
jmp
mov
into
fsts
fs
mov
call
ret
int
imulb
in
mov
les
jo
add
pop
or
movl
bound
daa
push
lods
lods
ja
lock
dec
sbb
je
scas
pop
outsl
loope
aas
dec
xor
repnz
test
xchg
lcall
decl
lahf
add
out
rolb
sbb
and
dec
fdivrp
mov
clc
push
outsl
test
or
addr16
or
lock
sti
test
jne
inc
ret
fsubl
test
push
mov
xchg
sbb
loopne
push
fisubl
fidivrl
pushf
leave
outsl
movsl
js
ljmp
insl
out
pushf
inc
stos
mov
dec
imul
sub
ljmp
add
mov
pop
or
enter
iret
enter
pop
movsl
sbb
rcrl
mov
mov
add
mov
jg
outsb
ds
fnstsw
mov
pop
loopne
jns
pop
and
push
popa
or
iret
sbb
cs
dec
cmpsb
mov
aas
sub
das
push
loop
stc
adc
in
mov
pushf
fst
decb
imul
mov
inc
mov
out
ljmp
imul
pop
js
mov
loop
loop
or
stos
push
insb
sub
imul
into
out
lret
aaa
mov
mov
push
xchg
inc
jnp
mov
dec
nop
test
popf
mov
push
sbbb
sti
lock
gs
mov
repz
cmp
sub
clc
mov
sub
sbb
jns
xor
sub
or
lods
add
mov
fistpl
mov
lcall
inc
add
mov
and
and
cltd
lahf
adc
lcall
push
leave
xor
popa
and
inc
push
and
push
stos
xor
sbb
ds
add
addr16
mov
cmp
gs
mov
jecxz
loopne
jo
mov
jp
add
sbb
cmc
hlt
ret
popa
adcb
xchg
cwtl
lcall
ja
dec
mov
pop
divl
cmp
xchg
xor
cltd
push
pop
push
push
arpl
mov
or
xchg
add
sub
clc
mov
unpcklps
call
jo
rcr
fiaddl
imul
das
addb
scas
jbe
lret
loop
lock
dec
jbe
fstl
cltd
or
aas
mov
mov
xor
testb
push
mov
sub
add
add
xchg
data16
inc
inc
aam
mov
sbb
ret
dec
cltd
xchg
out
mov
je
cwtl
leave
adc
call
dec
push
mov
add
sub
jp
jb
scas
ja
arpl
in
std
dec
jo
xor
xor
lret
addl
and
test
sti
pop
pop
bound
int3
mov
fcmovnb
pop
loopne
jmp
mov
adc
hlt
jo
mov
movhps
mov
iret
mov
pop
fcompl
sbb
pop
add
dec
or
icebp
sub
ja
xor
push
arpl
sbb
sub
fmul
popf
jg
xchg
fsubs
and
in
idivb
inc
test
cmpl
pop
sti
add
xchg
stc
push
cmpsb
enter
jbe
mov
mov
bound
jl
sbb
test
and
and
ja
in
lods
pop
sub
scas
lret
jnp
leave
push
sbb
xor
int3
loop
sub
leave
mov
xchg
jecxz
sub
ret
sub
int
mov
jmp
insb
mov
jecxz
int
mov
fildll
ret
mov
push
mov
inc
or
in
or
jp
fistps
adc
add
xorl
sub
fldl
test
mov
cmp
aad
jge
iret
push
push
outsl
in
xor
dec
fwait
and
sbb
inc
xor
ss
shrb
inc
out
cmp
sbb
push
xor
or
jnp
inc
in
pop
aas
push
jns
aad
push
shrb
cmp
lret
add
adc
in
flds
sbb
je
aam
xor
scas
sub
mov
out
sub
repnz
test
mov
insb
add
xchg
movsl
rcrl
and
testl
jge
lods
out
or
lret
sbb
dec
aas
mov
sahf
nop
sti
popa
jns
shlb
aas
cmp
push
mov
add
out
cmp
pushl
adc
cmp
jne
mov
stc
add
jns
nop
daa
cs
pop
xchg
lock
movsb
mov
xchg
jmp
push
sub
pushf
add
sub
adc
pop
ja
loopne
es
xlat
ror
fiadds
xchg
inc
movsl
push
pop
and
test
fsubrl
jno
pop
data16
insl
mov
cwtl
fs
sub
shl
xchg
pusha
adc
cmpsb
add
lds
cmp
jns
mov
je
mov
cmp
xchg
mov
mov
cmc
mov
sbb
pop
dec
insl
xchg
jge
mov
mov
add
imul
inc
sarl
xor
dec
cli
repnz
dec
aam
and
xchg
out
sahf
or
arpl
xchg
scas
fwait
lret
andl
rolb
jge
fwait
pop
or
test
jle
test
lahf
shrb
ss
jmp
lods
pop
inc
shl
sbb
mov
push
out
test
or
pop
call
sbb
data16
add
xchg
ret
or
and
xchg
pop
jno
roll
rep
push
mov
movsb
inc
std
es
fnsave
outsl
imul
pop
mov
scas
mov
imul
les
dec
outsl
fs
jbe
mulb
mov
aam
int3
aaa
sbb
mov
mov
and
out
push
mov
sub
cmc
outsl
and
int3
rolb
add
adc
fsubrl
sbb
cmp
add
mov
in
xor
das
jno
pop
xor
cmp
fdivp
stos
and
or
mov
inc
fwait
add
stos
popf
mov
cmp
mov
or
or
push
mov
stos
cmp
jmp
cld
repnz
sbb
push
loopne
rcrb
mov
mov
pop
mov
sbbb
mov
call
and
imull
and
jns
adc
sub
lcall
out
mov
lret
jno
pop
cmp
filds
or
daa
push
dec
insb
and
xchg
sub
jg
mov
mov
and
mov
fcompl
in
add
inc
in
sbb
cmp
ds
int3
pop
jbe
adc
mov
xchg
rorl
scas
xor
mov
icebp
mov
out
ds
cld
aaa
jae
sub
mov
mov
mov
cld
mov
arpl
cmp
xlat
mov
and
out
pop
aam
in
jmp
jno
ret
jmp
cmp
adc
iret
sub
mov
push
and
push
jecxz
and
sub
rolb
lea
in
pop
push
push
or
sub
stos
leave
mov
cmovo
mov
fwait
hlt
mov
in
jp
dec
test
sbb
mov
mov
pop
out
xchg
cli
sub
sbb
lock
cmpsb
and
outsl
insb
sub
xacquire
cmpsl
faddl
mov
insb
push
out
mov
stc
add
pusha
jbe
push
push
shl
and
pop
rolb
cld
mov
dec
mov
fwait
out
enter
lcall
aas
stos
push
push
inc
lds
adc
out
mov
adc
fstpl
rcrl
push
inc
inc
xchg
fs
xchg
cmpsl
sbb
sarl
add
lock
adc
push
and
jnp
adc
or
xchg
notb
lret
imul
into
stc
xchg
test
lea
mov
mov
out
inc
fdivr
mov
and
cmpsl
pop
adc
jge
cld
adc
pop
lahf
mov
pusha
mov
xor
mov
aam
sbb
fldl
or
jbe
ja
adc
mov
jle
arpl
push
popf
imulb
popf
sbb
loope
popa
inc
stos
and
jns
mov
test
pop
push
cmpsb
mov
div
push
push
mov
and
inc
testl
mov
cmp
scas
xchg
imul
mov
jg
sub
sbb
test
daa
cmpsb
hlt
add
ret
outsb
cmp
mov
iret
adc
push
sahf
dec
insb
push
and
mov
xor
jne
out
sbb
sahf
ja
xor
cmpsl
mov
cwtl
sub
les
and
pop
dec
xor
fistps
mov
insb
push
jecxz
cmc
mov
subb
addr16
xor
adc
xchg
add
dec
xor
int
add
outsl
jge
push
add
or
out
pusha
rcrl
mov
jno
sub
imul
xor
and
dec
pop
push
jmp
icebp
in
fst
jmp
call
bound
int3
dec
fsubr
add
jns
mov
jnp
push
ljmp
or
je
or
mov
pop
ds
int3
mov
sub
xchg
out
inc
out
adc
bound
inc
in
in
fnstsw
pop
scas
mov
jg
out
icebp
popf
orl
sbb
aam
push
pop
xchg
out
adc
xchg
pop
lock
bound
aaa
push
repz
xor
loopne
pop
xchg
inc
es
sbb
rcr
pop
push
xchg
cwtl
loop
cmp
mov
or
add
iret
mov
insl
sub
enter
xor
jge
inc
xchg
mov
imul
cmp
xchg
in
jo
push
xlat
mov
push
int
mov
ficoms
sub
iret
pop
fcomip
imul
fidivrs
ja
inc
fwait
sahf
dec
bound
lcall
out
pop
hlt
int3
cli
dec
mov
stos
jns
inc
dec
sub
cwtl
jne
loope
fistl
popa
mov
sub
lret
inc
repnz
push
lret
in
cmp
xchg
pop
clc
jbe
pushf
inc
cld
jmp
enter
adc
fimull
push
in
push
lods
pop
cwtl
and
jne
or
mov
mov
xor
je
push
nop
adc
dec
mov
inc
sub
aam
push
cmpb
xchg
mov
sub
sbb
orb
xor
pusha
cmp
inc
dec
mov
xor
es
clc
popf
and
and
movsl
mov
sbb
cmpsb
inc
lret
daa
lds
xor
pop
cmpsl
sbb
loope
inc
bndldx
xor
add
adc
mov
insb
cltd
pop
and
inc
dec
pop
dec
inc
fxtract
inc
js
call
iret
adc
push
pop
mov
nop
cmpsl
sbb
xor
pop
mov
rolb
inc
add
ss
cmp
jns
or
ficompl
lret
cmc
cmp
jb
stos
sarb
aaa
out
mov
outsb
lods
call
xlat
pusha
xor
lods
scas
sbb
addl
adcb
and
xlat
shll
repnz
inc
push
or
sti
outsb
cmp
pop
int
andb
leave
or
inc
ret
inc
mov
dec
cmp
rcrl
inc
in
into
adc
notl
mov
stos
in
mov
idivb
mov
int3
mov
jmp
xor
xlat
pushf
les
add
mov
add
dec
jbe
cmpsl
mov
cmp
mov
scas
push
mov
push
dec
xor
jecxz
mov
cmc
imul
popf
xchg
push
jnp
fs
pop
rolb
ss
popf
pusha
pop
shl
push
fldt
leave
popf
mov
jge
sub
and
out
out
call
pop
roll
jle
dec
ret
in
shll
xor
xchg
cmp
sbb
push
lock
adc
jl
sbb
push
fwait
xor
xchg
out
fld1
add
mov
loope
pushf
out
mov
push
push
pop
pushf
mov
dec
jg
movsb
and
pop
movl
popa
cli
push
stos
cmpsb
iret
int3
inc
test
pop
cmc
dec
loop
addb
inc
je
pop
leave
xchg
sub
pop
push
rorb
and
addr16
gs
fbstp
sarb
enter
repz
or
dec
iret
push
iret
pop
jnp
cmp
popa
nop
ror
lahf
push
hlt
jns
mov
xor
sbb
insb
dec
dec
cld
ljmp
mov
mov
sti
jno
addr16
lds
dec
push
in
mov
push
pop
rcll
ret
inc
mov
lahf
add
cmp
repz
add
rcl
inc
mov
xor
loop
sbb
ss
push
icebp
mov
cmc
xor
insb
scas
mov
push
push
and
or
or
arpl
inc
sbb
push
in
xor
ret
add
jno
dec
push
pop
stos
adc
inc
ret
outsl
cmp
cltd
push
lods
xchg
out
mov
and
mov
shll
jge
sbb
pushf
nop
cmpsl
das
adc
sbb
ret
not
mov
push
push
and
std
loopne
aad
adcl
xor
subl
fsubp
ja
push
push
int
push
test
lods
or
and
push
in
imul
leave
cmp
cli
jmp
in
adc
and
fistpl
stos
in
dec
gs
fwait
sbb
cmpsb
jmp
mov
test
dec
fwait
mov
inc
mov
addb
scas
les
xchg
mov
lea
outsb
sub
inc
dec
sahf
jg
inc
xor
ficompl
adcl
aad
daa
je
pop
leave
fistpl
shll
testb
jmp
jl
call
push
out
ret
mov
add
mov
xchg
cmpsl
adc
xchg
xchg
xor
push
cmp
test
adc
in
add
lods
popa
adc
pop
sub
add
or
mov
hlt
pop
mov
dec
jmp
push
inc
mov
add
inc
jecxz
xchg
xchg
mov
push
jg
aad
pop
inc
mov
push
ja
jmp
mov
mov
xor
cmpsl
pop
data16
jae
push
fmull
adcl
jnp
jl
push
aad
testl
cmp
scas
mov
sub
pop
mov
xchg
xchg
add
and
push
mov
test
testb
dec
dec
mov
mov
adc
test
leave
stos
out
add
aam
adc
shrb
inc
addl
dec
jg
cmpsl
inc
cmp
xchg
sti
insl
imul
cld
push
mov
stos
mov
push
cltd
bound
pop
xchg
repnz
dec
jb
scas
loop
cmp
stos
mov
clc
add
sbb
mov
xor
in
mov
jp
xlat
dec
mov
jmp
xchg
mov
gs
and
sarl
xchg
or
and
mov
mov
jecxz
sbbb
orb
mov
sbb
adc
or
or
cli
je
in
pop
mov
mov
xlat
outsl
and
dec
rorl
leave
or
sti
into
pop
pop
sub
aaa
rorb
add
mov
hlt
jnp
and
or
or
and
jbe
cs
ljmp
call
xor
test
xchg
jmp
mov
jb
cld
lret
jno
cmp
lea
mov
jl
negl
sbb
xchg
adc
rol
mov
mov
xor
push
aam
jb
xchg
lods
aad
xchg
aas
pop
pop
dec
lods
add
inc
cmp
sbb
movsl
pop
cmpsl
repz
ds
push
push
rorl
gs
lcall
pop
pop
xchg
cld
lods
test
in
js
rorb
icebp
push
inc
xchg
or
push
leave
and
mov
enter
out
sub
test
nop
shl
shll
bound
push
stos
in
mov
daa
xlat
daa
frstor
out
cmc
mov
imul
and
pop
cwtl
cmp
out
pop
lcall
mov
sub
mov
addb
scas
ss
add
or
jle
outsb
push
imul
testl
sub
daa
mov
pushf
adc
addr16
clc
xchg
mov
fcmovb
and
push
dec
in
out
xor
mov
lret
repnz
mov
dec
sti
cmp
mov
inc
rclb
pushw
push
xlat
inc
cmc
test
pop
cmpsb
push
repnz
les
negl
test
push
mov
bswap
clc
pop
jle
stc
test
cs
adcl
add
mov
lods
cmpsb
scas
cmp
rclb
mov
xlat
mov
mov
shll
inc
imul
icebp
out
xchg
mov
jbe
inc
or
bound
cmp
mov
xor
leave
mov
dec
fmuls
loop
fcomps
roll
add
sub
into
pop
imul
add
mov
and
std
or
cwtl
into
fnstenv
dec
ss
imul
xchg
aaa
repz
stos
insl
sub
xchg
call
es
popf
add
pop
and
ss
and
add
out
add
hlt
xorb
push
ret
dec
cwtl
cltd
xchg
jno
movsb
in
sahf
pop
cltd
mov
or
insl
cli
xor
mov
lret
imul
imul
aas
xchg
push
cmp
stos
aaa
mov
cmc
arpl
add
rcrl
loop
pop
scas
test
cwtl
cmp
inc
lcall
sarb
rclb
pop
dec
sbb
imul
jne
mov
pop
shll
addr16
lods
ficoml
insb
fldenv
push
adc
cmpsl
inc
mov
adc
pop
fidivrl
mov
cmpsb
scas
hlt
pop
xchg
inc
std
xlat
shr
mov
xchg
xor
mov
xchg
scas
loopne
nop
fwait
mov
popa
lds
sbb
imul
jmp
jne
aam
xchg
sti
fmull
sbb
cwtl
sbb
inc
mov
andl
mov
dec
jnp
and
mov
and
sbb
dec
arpl
clc
sub
divl
jo
lcall
les
lea
push
pushf
adc
xchg
xor
mov
out
fwait
dec
and
mov
adc
aas
mov
aad
sbb
cmp
xchg
xchg
lods
push
std
push
jmp
mov
jp
pop
jmp
mov
insb
inc
cmp
sbb
idiv
sbb
mov
sti
shlb
rcrl
and
js
adc
add
xchg
mov
jo
dec
sbb
and
jne
movsb
sub
inc
add
dec
movsl
xor
shll
jne
rcrb
jbe
add
mov
pop
push
cmpl
inc
jl
lea
push
jle
mov
push
sub
fdivrs
sub
mov
scas
add
add
and
jno
and
lret
inc
add
lock
scas
iret
mov
sbb
xchg
mov
xchg
scas
sbb
and
test
push
add
cmpl
outsl
inc
push
ljmp
push
cmpb
cmovne
mov
sub
bound
jp
roll
dec
or
testl
mov
test
cmc
mov
add
jno
adc
pop
out
jae
mov
lods
in
rolb
mov
sbb
adc
loop
jge
adc
and
imul
lcallw
push
sub
pop
inc
mulb
std
not
insl
sub
sub
hlt
sbb
cld
sub
sbb
shll
scas
jo
sub
inc
cwtl
incl
int
xchg
cmp
mov
add
jmp
dec
in
push
movsl
mov
loop
popa
inc
jo
in
sub
push
dec
ljmp
xlat
cmp
add
out
sub
cmpb
stos
cmc
mov
sub
push
arpl
mov
popf
mov
sqrtps
inc
mov
lcall
pop
xor
aam
mov
add
pop
or
loope
pop
outsb
dec
cmpsl
arpl
jne
xchg
jp
push
les
inc
rcrb
pop
mov
add
push
out
cmp
fcoms
je
shll
cmp
sahf
nop
jmp
mov
push
loop
xlat
and
push
and
mov
mov
cmp
add
push
mov
loopne
pushf
push
mov
dec
data16
int3
ret
dec
das
ret
or
andl
loope
push
push
mov
cmp
lret
lods
pusha
or
pushf
gs
jns
push
out
mov
mov
pusha
jne
dec
jecxz
cltd
cmp
sub
sbb
cmpsl
jecxz
push
aas
test
cmc
movsb
cmc
ret
adc
jnp
jle
push
rclb
fbstp
dec
int
lods
xchg
mov
ljmp
rcrl
in
fiaddl
leave
cmp
and
js
fcomi
sbb
sahf
ss
in
and
repnz
xor
sbb
fldenv
gs
inc
cmp
stos
jge
mov
roll
fildl
imul
push
mov
push
jnp
adc
jns
scas
test
es
adc
inc
adc
xchg
sub
lods
insl
xor
sarl
add
jne
stc
bound
insb
sbb
cmp
das
inc
mov
fisubrl
in
xchg
mov
js
jns
mov
sti
adc
out
xchg
test
xor
pop
mov
xor
jp
ss
das
xchg
ja
sbb
loopne
imul
daa
xchg
inc
pushf
popa
push
mov
pop
mov
jne
push
aaa
test
data16
mov
xchg
xchg
je
xor
mov
sub
sub
rcl
mov
mov
je
xchg
adc
xor
divl
mov
pusha
pop
ficomps
in
cmp
test
pop
into
ret
test
das
outsl
std
pop
mov
nop
xchg
in
rcr
and
fwait
int
and
pop
dec
adc
in
jle
scas
leave
pusha
xor
sti
cmpsl
into
push
fsubs
loope
cmp
iret
imulb
pushw
mov
loopne
popa
pop
add
cmp
movsl
in
xchg
out
shlb
and
scas
or
mov
mov
push
push
xor
pop
xchg
arpl
in
jl
pop
aad
mov
cmc
ficompl
pop
bound
xchg
mov
adc
and
or
cltd
adc
cmp
push
ds
push
jp
iret
pusha
lds
push
shlb
fwait
jb
lahf
jge
ds
xlat
decl
out
data16
mov
sarl
sub
add
repnz
add
hlt
aad
push
fwait
inc
pop
clc
shlb
mov
icebp
mov
push
jl
test
jns
ds
jl
xor
jp
adc
lock
sbb
loope
sbb
iret
xor
ja
lret
data16
adc
ljmp
dec
sahf
out
dec
mov
leave
es
cmpsl
jb
push
jbe
in
mov
sbb
sbb
xor
mov
pop
scas
ljmp
dec
mov
mov
mov
fwait
dec
hlt
jge
test
mov
pop
mov
dec
push
mov
icebp
movsl
adc
inc
mov
sbb
xchg
pop
faddl
mov
push
push
sbb
inc
add
jmp
js
pusha
loopne
inc
nop
pop
jmp
inc
jmp
out
lods
scas
test
lock
cmp
rcrl
fiadds
xchg
jne
inc
outsl
in
cmpl
sub
inc
dec
mov
jo
sbb
push
push
push
test
xchg
inc
jo
fiaddl
push
jl
push
shrb
dec
ficompl
call
push
aas
mov
sub
aas
enter
cli
in
and
mov
addr16
xchg
mov
divl
inc
sub
insl
dec
je
aam
loope
ljmp
aad
sbb
mov
dec
pop
out
inc
mov
ljmp
pop
xor
fdivl
push
add
lea
adc
xchg
movsb
dec
cli
stc
jp
lods
fsts
fwait
and
cmc
add
pop
xchg
outsb
and
xor
push
push
push
iret
push
fdivs
roll
jg
aas
loop
les
pop
adc
sub
test
inc
add
push
ret
jnp
addl
or
lea
xchg
mov
xchg
imul
mulb
pop
mov
mov
jb
arpl
aas
test
xor
test
push
xchg
lock
cmp
movsl
or
pop
in
push
fdivl
imul
xchg
push
dec
movsl
clc
inc
fdivrp
mov
push
fimull
xchg
stos
and
out
call
cmp
out
sbb
sahf
sbb
cmpsl
insb
jmp
jb
dec
out
out
test
es
cld
lock
ljmp
fwait
inc
push
aad
mov
add
out
xchg
into
rorb
popa
std
jno
xor
ljmp
and
frstor
sbb
cwtl
xchg
inc
dec
into
fstl
jl
push
adc
dec
insb
testb
enter
xlat
sbb
push
dec
outsb
jmp
jl
mov
jo
mov
dec
or
dec
sub
insl
xchg
or
inc
leave
xor
das
aam
subb
stos
mov
out
mov
or
outsl
outsb
jb
xchg
cmc
subl
cmp
inc
sbb
dec
mov
inc
xchg
mov
clc
adcl
outsl
pop
test
adc
xor
ret
xorb
cld
inc
call
add
dec
jle
pop
ret
sbb
data16
pop
leave
lret
inc
and
jmp
jnp
repz
and
cmp
xchg
ret
inc
cwtl
test
push
cmp
and
jae
test
lock
xorl
repz
testl
cmp
ja
or
jbe
out
xor
daa
dec
sysenter
fsubrl
inc
jecxz
sahf
bound
mov
cmp
pushf
mov
sub
cmp
lods
aas
push
lea
loope
or
and
mov
ss
push
aam
repz
scas
scas
aam
xchg
imul
mov
dec
roll
xor
mov
dec
jnp
jnp
sbb
fs
bound
scas
es
lods
jae
add
fimull
mov
mov
push
sbb
jle
jl
jb
push
and
sbb
dec
out
jns
push
bnd
loopne
jmp
gs
rol
cmp
jmp
sub
cld
or
ss
and
or
jge
push
cmp
sub
iret
sbb
inc
rcrb
scas
imul
sub
jno
mov
sub
adcl
subb
xor
cli
andb
je
and
mov
test
inc
fiadds
mov
outsl
xchg
or
out
int3
loopne
into
jmp
dec
cltd
jp
add
sbb
sbb
add
cmp
notl
xor
push
lods
ds
mov
mov
jp
fsubrp
loop
lock
test
cli
test
adc
pusha
fwait
andl
xchg
sub
inc
rorl
jp
mov
jge
shr
inc
shrb
jle
mov
and
ret
je
inc
add
int
pop
fisttpl
clc
mov
sqrtps
mov
dec
pop
xchg
mov
push
daa
dec
pop
sbb
sub
bound
adc
mov
jae
shlb
aas
enter
push
inc
dec
add
outsb
cmp
out
fcompl
push
xlat
mov
rcrb
bound
sbb
out
repz
xchg
out
cmp
insl
rcl
lret
mov
rorb
arpl
adcb
xchg
push
push
xchg
push
inc
mov
inc
push
ja
jmp
mov
mov
jg
into
aam
mov
cwtl
fisubs
out
pusha
pop
sbb
pop
rorl
mov
jnp
cmpl
jns
pop
jo
lret
xor
mov
sbb
push
inc
jg
lahf
pusha
ficomps
mov
imul
cwtl
xchg
pop
mov
add
mov
imul
add
sub
mov
sbb
rorl
sbb
je
cmpsb
jae
fldenv
cmp
shlb
mov
pop
and
jecxz
and
fucomip
rolb
aad
cmp
cli
and
mov
aad
push
ss
and
lret
lods
cwtl
aam
pushf
incb
fninit
jb
xor
imul
pop
repnz
hlt
stc
inc
adc
inc
decl
cld
out
bound
loopne
mov
lcall
push
pop
mov
adc
cmpsl
inc
popa
sbb
push
mov
pushfw
cmp
or
das
rcrb
lods
aas
fs
scas
cmp
xor
sti
in
mov
mov
test
sti
rclb
fs
sarl
sub
orl
adc
rdtsc
add
scas
jge
ss
xor
aaa
push
or
cld
cmp
jne
test
adc
jnp
push
jmp
adc
push
mov
xor
outsb
out
push
fisubrl
jg
aad
dec
repnz
cs
push
lods
xchg
and
inc
mov
lds
xchg
scas
into
mov
dec
stos
jp
arpl
mov
daa
mov
jnp
or
push
dec
push
hlt
hlt
add
push
lcall
loope
mov
mov
mov
fimuls
mov
sbb
pop
xchg
xor
stos
js
insl
pop
mov
cmp
bound
jne
dec
lea
popf
dec
mov
and
and
arpl
jl
mov
jle
mov
repnz
mov
dec
sbb
bound
sub
outsl
jbe
jmp
incl
in
pop
adcb
pop
cmp
daa
jb
ret
dec
mov
adc
insb
loop
out
out
sub
sbb
mov
mov
stos
into
icebp
fs
inc
test
rcrb
push
rcrb
cmp
add
xchg
fbstp
ljmp
daa
mov
mov
mov
lret
fnsave
pop
ret
push
lock
sub
adc
cmpsb
inc
or
loop
add
iret
mov
mov
and
mov
sbb
inc
je
inc
arpl
add
test
sar
test
sbb
mov
sub
sbb
mov
sahf
cmp
xchg
add
xchg
cmp
ret
push
inc
test
xlat
test
push
or
dec
sbb
or
mov
jo
shrb
mov
fldt
out
ret
push
pusha
arpl
mov
mov
test
xchg
sbb
sbb
das
into
das
add
ret
or
or
pushf
repz
cmp
add
pop
cmpsb
sub
icebp
xchg
aas
xchg
mov
and
and
fdivrs
push
add
cmp
push
js
mov
mov
stos
pop
loopne
js
sub
sahf
rcl
or
cwtl
sub
xchg
xor
lods
dec
jo
subl
lret
ret
xchg
mov
ret
orb
sub
lods
test
lods
push
shlb
fldenv
fldl
mov
insb
out
lock
aad
push
push
and
xchg
pop
or
fiadds
cmp
xchg
mov
test
sbb
mov
xor
into
push
mov
dec
popa
mov
or
pop
mov
shll
test
aam
xchg
sub
rorb
jns
insl
mov
mov
or
xlat
daa
mov
ret
lcall
adc
and
and
push
mov
xlat
dec
adc
xorb
xor
sahf
mov
fwait
mov
leave
je
lds
nop
sub
inc
pop
sub
cmp
push
lret
pop
call
xor
scas
push
mov
outsb
fmul
adc
and
xor
mov
xor
xchg
inc
jecxz
out
and
add
scas
in
add
xor
push
std
shl
dec
xchg
scas
and
adc
mov
add
xchg
iret
and
pop
adc
and
out
insb
stos
add
sub
arpl
sti
or
add
dec
jecxz
mov
dec
sbb
and
fisttps
icebp
sub
push
aad
pop
in
sbb
xor
lahf
clc
and
dec
and
add
out
stos
es
lock
pop
sub
xchg
pop
addl
stc
cmp
push
add
mov
loope
aam
repnz
rorl
int3
sub
shll
xchg
xor
pavgb
sbb
xor
dec
pop
pop
jge
pop
adc
inc
fisubs
out
inc
shlb
orl
fwait
cmp
testb
inc
mov
inc
cmpsb
aaa
loope
insl
pop
aad
xor
clc
pop
and
pusha
adc
data16
jmp
jo
jg
ja
mov
rolb
sti
loopne
ljmp
stc
cmpsb
xchg
xchg
pop
repnz
mov
test
mov
stc
incl
jecxz
loope
rorb
dec
and
adc
sub
mov
sub
gs
fsubrl
in
inc
cli
mov
push
lcall
jp
retw
pop
inc
sbb
sahf
and
mov
pop
dec
mov
into
out
mov
or
mov
sub
aam
sub
mov
jne
cmp
mov
mov
inc
xchg
add
sti
xor
xor
push
jb
sbb
or
fmulp
cmpsb
pushf
mov
sub
pop
das
dec
jl
adc
jl
jge
cmp
and
sbb
add
aas
jno
xor
xor
mov
ds
adc
div
and
or
arpl
mov
inc
iret
shll
pop
out
adc
js
xchg
std
cld
pop
in
ret
jns
nop
mov
andb
orb
pushl
fwait
and
popf
cmp
sbb
inc
cs
sub
mov
loopne
mov
add
es
sahf
mov
pop
adc
mov
cmp
mov
mov
lods
icebp
mov
cmc
cmpsl
or
in
cwtl
pop
lods
aas
sbb
inc
adcb
lds
loopne
test
cmpsb
push
add
cmp
cmp
sbbb
scas
pop
fwait
xchg
jmp
iret
mov
lahf
lods
mov
jle
mov
add
pop
add
test
jl,pn
and
dec
pop
cmp
mov
insb
fnstsw
sbb
pushf
cmp
cmp
out
cmp
popa
aas
out
int
pop
mov
sti
test
adc
xchg
jge
sub
jbe
inc
mov
add
sub
adc
cli
jbe
daa
clc
movsl
out
mov
je
into
push
mov
ret
out
mov
dec
imul
std
and
mulb
insl
loopne
or
test
sahf
jbe
sbb
rcll
xchg
adc
ss
loop
mov
repz
mov
sbb
sahf
roll
stos
inc
jns
ret
mov
cmp
stos
addl
mov
mov
sahf
push
sub
out
xor
data16
pop
sub
dec
shll
mov
inc
cmp
add
dec
clc
xor
push
arpl
div
pusha
loopne
lss
or
add
js
mov
orb
sahf
mov
notb
push
pop
faddl
int3
add
popa
loope
push
or
int3
inc
std
push
ljmp
arpl
mov
pop
push
call
xchg
mov
sub
in
popa
cmp
lea
cwtl
cmpsb
inc
jp
icebp
cltd
fdivrs
mov
cwtl
inc
rcr
mov
push
push
jl
aas
add
cmp
xor
mov
lods
jge
cli
jo
std
in
push
in
pop
addr16
sbb
sti
mov
push
repnz
mov
xor
push
push
mov
cmpsl
pop
xchg
sbbb
pop
popf
mov
xor
cmpsb
iret
xchg
jmp
lcall
ds
cli
adc
ret
mov
xor
pop
xor
add
push
ja
push
dec
jno
dec
inc
test
call
mov
imul
shl
dec
daa
push
mov
adc
jp
mov
out
pop
gs
xchg
cmpsb
jne
lret
loop
mov
fsts
add
cmp
mov
mull
mov
jg
push
ljmp
pop
inc
rcrl
pop
adc
aaa
lahf
les
es
sub
mov
mov
pop
repnz
rorb
adc
mul
cs
ficomps
or
lahf
add
sbb
dec
sti
or
out
inc
jno
hlt
xchg
outsb
sub
subb
stc
sbb
subb
insb
pop
test
lods
push
add
push
loopne
and
pusha
cwtl
mov
fisubrs
or
pop
sahf
ficomps
negb
lds
sbb
aam
cmp
test
push
adc
fs
clc
push
movsb
into
aad
rcl
enter
mov
xor
inc
fiadds
xchg
lea
xchg
sbb
and
mov
cmp
inc
xchg
in
pop
or
nop
mov
movsb
xor
jl
add
lock
mov
or
jnp
stos
into
daa
data16
jl
xchg
lods
sbb
or
out
jb
loopne
mov
pop
lds
bound
ret
cmp
out
rolb
push
arpl
rcll
sbb
pop
fwait
sub
lahf
mov
sub
add
mov
xor
mov
movsb
xchg
xchg
cmp
cmp
hlt
insb
movsb
push
fcompl
ds
jb
cs
mov
or
inc
scas
jno
pop
insb
or
ljmp
rcll
mov
dec
mov
adc
fcompl
add
aas
cmp
add
xchg
mov
lds
std
push
sbb
jne
push
mov
rorl
adc
fldcw
inc
xor
jno
inc
es
cmpsb
lock
fsubrs
shlb
and
pop
push
fnstcw
xor
and
ss
or
sub
jge
mov
subb
addb
mov
test
insl
into
adc
movsb
push
cwtl
stos
and
fidivs
lret
mov
jns
mov
sub
int
cltd
push
pop
lret
xchg
out
popa
sbb
int
dec
xor
add
xor
les
arpl
mov
fwait
cltd
and
pop
lea
imul
test
pop
mov
ds
imul
mov
clc
jmp
inc
jnp
push
mov
roll
jnp
cli
shlb
aam
fisubrs
adc
adc
cwtl
adc
push
popf
cltd
push
sub
mov
sub
xor
push
sub
lret
jg
xchg
pop
lods
insl
test
rorl
mov
pop
xchg
repnz
outsb
dec
jecxz
jmp
xor
ljmp
sbbl
dec
sarb
pop
sub
cmp
push
mov
decb
xlat
push
dec
in
subb
inc
push
shrb
cmpsb
lret
in
les
and
inc
or
sbb
push
or
in
add
pop
sti
fstpt
scas
pop
inc
and
dec
pop
push
cmc
fwait
addr16
pop
inc
aad
or
jo
xor
rorb
das
std
and
out
mov
sbbl
xchg
aas
subb
stos
lret
lret
xor
in
mov
pop
sbb
fucomip
adc
ret
mov
push
jecxz
mov
cmpsb
pop
pop
frstor
inc
push
in
fstpl
sub
movups
adc
jg
test
lcall
dec
push
xchg
jae
test
sbb
dec
aad
cmp
popa
rolb
repnz
mov
inc
jle
pop
aad
ret
adc
cmpb
dec
rolb
shrl
push
ljmp
push
loopne
push
xor
loopne
cmpsl
mov
dec
xor
mov
push
push
cld
insl
jl
jl
ljmp
push
fistpl
cltd
mov
gs
xor
pop
xchg
jbe
lret
data16
mov
in
popa
inc
das
into
jge
mov
cmp
lea
and
mov
sub
jg
and
sbb
bound
ljmp
cmpsl
add
inc
mov
ds
and
hlt
dec
sub
push
leave
jmp
pop
jle
sbbl
js
and
rolb
jmp
inc
icebp
jno
loop
aad
pusha
push
dec
lret
mov
push
fcmovnu
mov
aam
mov
or
in
test
imul
push
stos
adc
and
jo
pop
cmp
or
out
out
movsb
std
push
push
xor
lds
or
ror
outsl
jge
jae
test
not
in
mov
xor
mov
sbb
int
inc
icebp
arpl
fildl
mov
sahf
xlat
pop
and
inc
out
lock
insb
push
jp
adc
lods
push
or
and
cmp
sahf
divl
sti
lahf
push
add
popa
je
pop
fsubrl
addb
incl
ljmp
gs
adc
int3
pop
das
and
and
cld
dec
pop
jae
leave
pop
bound
mov
cmp
pop
cmp
sub
dec
xchg
shrb
cmp
pop
or
imul
mov
arpl
mov
mov
mov
insb
testl
or
and
jb
int3
xchg
insb
roll
popa
push
or
iret
shrb
jmp
jb
cmp
jne
mov
cmpsl
ffreep
xor
mov
xor
nop
into
xorl
repnz
jo
jp
xchg
lods
cmpsl
push
dec
push
sub
jmp
rcr
pop
aam
pop
pop
push
mov
fildll
mov
fiaddl
push
inc
out
push
pop
jle
sbb
mov
pop
addr16
popa
movsbl
insl
mov
lds
xchg
xchg
xor
fstl
xchg
jp
inc
rcr
lock
enter
bound
push
jp
cli
data16
inc
shlb
dec
pop
mov
push
pop
xchg
adc
cmpsl
jne
and
dec
in
aad
xchg
adc
aam
xchg
insb
les
arpl
gs
aad
fisttpl
cmp
and
push
stos
dec
pop
pop
sub
push
enter
cmpsb
xlat
adc
movsl
test
hlt
cmpsl
pop
ds
mov
mov
push
cwtl
in
adc
push
sar
sub
pushf
lds
mov
pop
cli
aaa
fcompp
push
out
jb
push
fnstcw
out
push
rorb
cmpl
cli
xchg
ret
push
sub
xchg
add
sbb
subl
xor
mov
rcll
dec
add
test
xlat
inc
inc
and
fnstcw
fidivs
sub
inc
fisttpl
add
idiv
xchg
lret
insb
mov
mov
jbe
push
aam
and
dec
icebp
push
jo
and
jne
bound
aaa
mov
mov
out
int
cmp
subl
cmp
nop
sar
push
add
xchg
pop
int
sub
rcrl
pop
jp
int3
mov
cmp
mov
sbb
cmpsl
or
xchg
push
outsl
jo
mov
sahf
lcall
mov
mov
lods
ljmp
mov
rcr
loopne
outsl
movsb
sub
data16
xchg
sbb
lods
insb
lcall
stos
sbb
dec
pop
daa
sti
jns
stos
movl
rclb
dec
in
xchg
stos
and
sbb
mov
outsb
ljmp
sahf
dec
jl
bound
loopne
leave
and
mov
idivb
icebp
xchg
add
fidivs
and
fdivs
dec
into
push
stos
gs
lcall
mov
das
into
pop
jl
or
mov
pop
fists
jle
push
mov
inc
call
lret
xchg
xchg
jae
or
lcall
add
daa
pop
test
lods
sub
leave
or
lods
jmp
mov
frstor
mov
inc
ds
dec
cmp
mov
ljmp
sahf
enter
sbb
lods
mov
mov
adc
jae
xchg
sbb
pop
imul
fidivrl
lods
popf
cmpsl
lret
inc
pusha
sbb
div
xor
xchg
sahf
fdivrl
xchg
xchg
adc
xor
xchg
and
in
loope
adc
and
outsl
roll
in
repz
push
inc
repnz
lcall
dec
mov
orb
push
scas
dec
jmp
add
rcll
add
addr16
jle
fsubr
fisttpl
ljmp
jecxz
xor
pop
jle
ret
fprem
adc
adc
in
xchg
adc
push
rol
mov
push
popf
ss
ret
aas
mov
pop
pop
pop
lea
mov
push
push
mov
insb
push
clc
jmp
inc
and
adc
imul
aas
out
sbb
push
add
nop
or
lock
aaa
icebp
outsb
mov
dec
je
test
add
fcmovnu
push
mov
add
cmpsb
pop
cmc
sbb
push
jecxz
stos
dec
cmp
shlb
iret
or
in
outsl
push
lds
lahf
pop
inc
and
inc
pop
dec
push
push
fnsave
inc
sbb
sti
jl
lret
xchg
push
pop
lret
xor
insb
sbb
lahf
mov
push
dec
push
mov
inc
in
loop
jb
mov
rcll
sub
jmp
sub
dec
xchg
push
test
test
mov
mov
and
mov
cmp
test
cmp
ja
inc
xor
scas
sbb
orl
mov
lods
rsm
rcrb
sarl
pusha
or
les
ja
xchg
add
shl
sub
add
js
inc
pop
sub
push
jnp
ja
data16
rcll
jecxz
dec
nop
pop
mov
subl
cmp
outsl
push
sub
or
test
jecxz
mov
mov
ret
cld
sbb
imul
sbb
ficoml
bound
dec
pop
push
push
xor
andb
call
aam
lcall
sub
xchg
call
adc
ss
stos
notb
out
inc
sti
mov
cld
aad
xor
lock
inc
dec
sbb
sbb
jb
add
sbb
ds
mov
enter
cmp
adc
insl
push
lret
pop
lds
sub
shll
cltd
clc
adc
repz
and
popf
xchg
and
nop
adc
clc
stos
dec
jl
sbb
pop
jmp
or
shll
dec
xchg
adc
push
and
xchg
xchg
in
loope
push
fdivrl
iret
or
shr
pop
ds
in
pop
mov
outsl
mov
out
jmp
pop
sbb
mov
rcll
outsl
repnz
ret
jl
lret
ljmp
xchg
mov
mov
pop
pop
test
jae
mov
xchg
jo
mov
ss
std
mov
and
out
insl
test
add
dec
lahf
ret
adc
fnstcw
or
imul
clc
fidivl
pop
cltd
mov
in
scas
call
shr
lds
xchg
mov
repz
pop
sbb
jo
ljmp
adc
sbb
outsl
andl
es
gs
fsts
inc
sbb
mov
clc
fistl
mov
dec
xor
hlt
jno
aad
lods
out
xchg
js
loope
mov
cmp
loop
dec
fidivs
mov
add
push
stos
jb
aad
lds
or
dec
mov
inc
ret
ljmp
cmp
push
add
subl
test
cwtl
jg
sub
mov
inc
jecxz
test
setne
cli
jae
mov
pop
nop
jge
or
ret
pop
cmpsl
mov
shll
fistpl
jge
jge
inc
movsb
pusha
xchg
scas
and
or
sbb
cmpsl
test
add
lock
or
pop
and
dec
sbb
xchg
gs
xor
subl
hlt
jmp
test
orl
mov
sbb
push
sbb
sub
scas
arpl
mov
int
jnp
aaa
rolb
sbbl
enter
les
pop
adcl
xchg
dec
inc
aaa
test
call
mov
inc
stc
push
pop
lds
loopne
cwtl
xchg
fstpt
notb
fs
add
sub
aad
in
sbb
loope
dec
out
pop
insl
js
repz
fwait
dec
icebp
mov
je
mov
mov
dec
lea
jle
shl
leave
sbb
sahf
pop
sbb
push
dec
pop
clc
pop
mov
enter
fisttps
mov
cmp
mov
push
or
add
pop
imul
in
add
bswap
data16
lahf
int3
mov
xchg
pushf
lret
push
data16
sbb
shr
jg
xchg
cmc
movsl
xchg
fidivl
cmp
bnd
push
mov
push
test
aad
sbb
ljmp
inc
es
jmp
lret
ror
int3
das
fidivrs
bound
xlat
jp
xchg
stc
in
daa
mov
adc
lods
jmp
push
mov
dec
repz
rcll
dec
lret
add
adc
xor
divb
sbb
mov
aad
lahf
cmp
and
pop
repnz
cmp
push
dec
fimuls
add
int
sub
cmp
push
das
adc
stos
lock
insb
mov
int
roll
arpl
push
pusha
inc
pusha
inc
mov
int3
loop
mov
dec
mov
mov
daa
xor
stos
daa
mov
into
push
dec
pop
dec
lahf
fst
mov
add
jnp
sbb
in
fwait
or
or
push
pop
dec
push
inc
sarl
insl
ret
out
js
es
popf
mov
cmp
in
cmp
repz
movsl
sti
mov
movsl
jl
push
jl
pop
jns
out
jl
in
les
and
and
xor
add
jns
stos
mov
fidivrl
lea
aas
inc
add
pop
sbb
shr
cmp
and
subl
sbb
sarl
pusha
xchg
fwait
push
sbb
mov
lahf
popf
and
mov
in
pop
dec
inc
lret
mov
mov
pushf
jp
je
jecxz
and
xchg
aas
clc
cmpb
call
popf
bound
xchg
cmp
test
xor
insl
and
jmp
cmp
inc
pop
push
loope
shr
dec
xor
dec
push
push
cwtl
mov
and
push
fbld
popf
outsb
stos
jbe
aam
mov
dec
int
jnp
negl
into
int3
stos
dec
pop
jge
nop
inc
mov
mov
or
push
jno
pop
jno
jno
mov
pop
sbb
sbb
and
push
ss
bound
cli
mov
gs
push
outsb
movsl
repz
pop
dec
loop
test
popa
jg
and
push
xor
sbb
icebp
cmp
inc
stos
mov
dec
pop
pop
ds
adc
scas
mov
cmp
inc
movsl
or
dec
pop
sub
mov
xchg
lahf
cld
or
out
bound
dec
mov
and
mov
mull
dec
ljmp
in
ljmp
in
inc
cmpsl
cmp
or
imul
fwait
adc
test
mov
lcall
mov
mov
mov
mov
js
or
fadds
lock
aaa
mov
rolb
lock
jmp
cmpsl
add
mov
fidivs
mov
fsts
mov
ljmp
aas
cld
adc
cwtl
or
inc
in
dec
lret
mov
dec
xchg
jo
inc
adc
jno
loopne
dec
jg
in
daa
testb
int
xlat
test
cwtl
outsb
sti
mov
jnp
fldl
filds
push
ja
dec
push
sub
push
je
mov
mov
mov
jbe
mov
movsl
ds
in
lds
call
cmp
mov
jae
divb
or
mov
hlt
ret
out
inc
sub
jae
rcl
add
fstpl
adc
out
jp
dec
out
rorb
inc
in
push
hlt
sarl
xor
dec
lods
dec
or
enter
inc
daa
push
test
insl
mov
notl
in
enter
mov
push
push
or
dec
ljmp
add
sub
inc
dec
aam
mov
or
jle
push
loopne
dec
rcll
shlw
sahf
pop
pusha
dec
daa
addr16
incl
adc
andl
nop
jno
out
pop
mov
out
push
mov
add
push
repz
imul
shll
enter
sub
adc
add
jb
dec
dec
sahf
loop,pn
sub
push
outsl
js
jo
addr16
lods
lods
fs
clc
int
or
popa
shll
out
daa
ja
add
add
pushf
xchg
add
sbb
sbb
std
lods
push
cmp
test
mov
and
dec
daa
jmp
js
inc
aam
rorl
inc
in
cmp
add
into
jno
aas
xlat
das
js
jle
inc
fld
pop
mov
jbe
or
add
leave
cwtl
push
orb
inc
mov
clc
sbb
negb
xor
dec
dec
sub
fwait
mov
jb
decb
rcll
in
push
cmp
scas
popf
jg
inc
and
cmpsl
lods
mov
jg
inc
xchg
xchg
call
test
cmp
and
inc
or
stc
sbb
ret
mov
and
subb
add
add
push
bt
xor
rorl
lret
mov
stos
adc
jnp
mov
sbb
cld
mov
dec
imul
or
add
adc
leave
pop
lcall
leave
and
pushf
or
sbb
pop
std
pusha
or
mov
pusha
es
shlb
jno
and
icebp
xchg
movsl
ljmp
dec
jg
mov
lret
mov
andb
cmp
pop
mov
rol
pop
sub
xchg
sbb
arpl
fisubl
jb
mov
movsl
arpl
scas
clc
or
or
mov
jno
iret
out
pushf
lcall
sub
into
push
cld
mov
repz
pop
gs
mov
pushf
xchg
in
aaa
bound
cmpsb
or
testl
enter
fwait
mov
scas
sti
ss
jbe
mov
shrb
jge
pop
pop
cs
insb
jle
or
push
mov
inc
jbe
inc
mov
decl
dec
pop
cmp
push
fisubrs
cld
scas
dec
dec
and
inc
xchg
add
call
jmp
jbe
dec
jno
adc
jmp
jmp
shrl
sub
and
push
addr16
js
in
addr16
inc
mov
mov
and
or
in
xor
popa
xor
xor
ljmp
fwait
ret
scas
test
std
adc
testl
fstpt
mov
in
add
imulb
add
icebp
pop
sub
sahf
push
cvtps2pi
push
or
ljmp
mov
shlb
jbe
mov
sti
aad
addr16
jp
or
cwtl
fidivrl
xchg
add
arpl
push
pop
mov
xor
cs
pop
mov
cmpsl
fisttpl
pop
mov
push
les
gs
aaa
out
stos
sbb
mov
movsl
dec
mov
push
js
stos
mov
out
mov
add
sub
testb
push
xchg
mov
test
xchg
fdivl
jne
stos
jmp
jle
in
sub
jnp
adc
cmpsb
push
lods
xchg
out
in
mov
sahf
jp
pop
mov
xchg
xlat
outsl
repnz
pop
jae
push
repz
mov
mov
fisubrl
xor
mov
mov
sti
or
push
xor
enter
mov
nop
mov
bound
test
outsl
pop
push
out
test
push
mov
mov
fs
mov
cli
jmp
loop
aam
mov
outsb
mov
into
or
add
je
scas
push
lock
int3
and
mov
iret
jle
fisttpl
dec
ret
xchg
jmp
testl
aas
aas
insb
push
or
dec
jl
jns
push
test
mov
mov
pop
xchg
jge
out
mov
das
mov
mov
push
inc
mov
imul
cmp
repz
pop
xchg
lea
push
adc
jne
cmpsb
mov
aaa
pop
pop
sub
test
mov
sbb
mov
cld
mov
push
repz
and
ret
mov
add
adc
scas
jmp
adc
push
int3
in
rclb
aas
loop
fs
divb
push
lock
loope
fwait
push
int
out
das
add
or
shlb
jnp
loopne
je
aam
jne
outsb
xor
movsb
out
pop
pop
pusha
pop
out
jecxz
test
sbb
push
ljmp
or
ljmp
inc
jmp
scas
mov
adc
adc
enter
ja
loopne
sarb
xor
addr16
dec
and
imul
ret
icebp
jno
sbb
and
and
adc
cmp
mov
or
mov
and
sbb
dec
lcall
out
mov
xor
xor
push
lahf
popa
stos
dec
push
test
test
dec
xor
addr16
pop
das
fsubl
push
jne
aas
push
xor
or
cmp
inc
jnp
rorl
fsubs
inc
dec
scas
pushw
aad
enter
aad
popa
adc
add
sahf
push
mov
sub
inc
pop
xor
add
hlt
out
mov
or
std
into
sbb
imul
or
loope
mov
enter
cli
xor
arpl
adc
adc
int3
into
in
mov
test
dec
mov
int
push
cmc
add
jae
push
cmp
imul
dec
ficompl
stos
pop
xchg
jecxz
int
fcoml
outsb
fisubrl
test
jns
mov
int3
mov
das
or
lods
push
cmpsl
inc
mov
dec
les
test
cli
movsl
inc
mov
gs
push
mov
movsl
lahf
sub
cld
mov
stc
sbb
pop
aam
ljmp
pop
dec
fnstsw
xor
mov
loopne
sahf
sub
lds
sbb
mov
fimull
jae,pt
shl
ret
daa
or
mov
loopne
rorb
rcl
add
je
addb
adc
in
icebp
scas
mov
out
test
inc
mov
icebp
sahf
lock
insb
mov
dec
in
pop
xor
push
rcll
and
pop
shrb
das
push
ja
xchg
test
pushf
fsubrp
pop
dec
push
cmpsl
sub
fsubs
dec
pop
inc
daa
scas
popf
pop
fs
mov
mulb
sub
push
loope
repz
daa
jbe
bound
sbb
movsb
mov
jg
neg
mov
dec
cld
out
sbb
sahf
stos
xchg
call
or
hlt
pop
pop
lods
mov
out
scas
push
mov
pop
and
repz
cld
mov
or
lock
add
mov
mov
adc
xchg
adc
pop
add
in
pop
dec
sbb
inc
and
pop
mov
movsb
jg
test
lods
imul
mov
and
sbb
mov
jp
fucomip
jnp
fs
xchg
fimuls
and
arpl
dec
stos
jge
notb
call
add
jbe
inc
fistps
stc
es
sub
pushf
cmp
cwtl
jb
xchg
mov
sarb
sbb
sahf
adc
out
and
insb
mov
and
xor
pop
lcall
outsb
test
aaa
add
mov
and
push
xchg
dec
xor
inc
fbld
xchg
out
adc
push
xor
lret
push
jge
jecxz
outsl
cmp
daa
push
and
push
mov
adc
insl
loopne
dec
sub
fimull
push
and
js
mov
negb
movsb
sbb
lret
call
jecxz
leave
mov
enter
pushf
sbbb
ss
xor
loope
fsubrp
out
sbb
sahf
mov
mov
loop
mov
or
into
lds
loopne
shlb
push
push
fsts
xchg
bndldx
mov
mov
lock
imul
data16
mov
in
xchg
jbe
add
add
jbe
es
pop
pop
lods
push
dec
lea
cmp
dec
in
jno
imul
push
sbb
xor
cmp
mov
dec
pop
cmpsl
dec
cmp
out
mov
scas
or
inc
mov
or
stc
push
rolb
out
pop
fwait
call
inc
cmp
hlt
sbb
push
fmull
out
ficompl
or
loope
xchg
xor
mov
mov
xchg
mov
xlat
ret
jo
and
sub
adc
dec
cmp
jb
hlt
pop
loop
ds
outsl
fxam
dec
lock
xor
sbb
xchg
std
push
xchg
mov
push
pop
pop
add
loopne
lods
mov
cmpsl
push
mull
lahf
in
jge
pop
addb
lcall
jecxz
jne
into
cli
mov
xor
sbb
shl
rcrb
pop
push
outsl
icebp
sbb
sub
test
xor
mov
add
mov
xor
cmp
int3
ret
sbb
mov
hlt
or
js
lret
pop
inc
fwait
gs
addb
adc
sbb
dec
mov
xor
mov
mov
push
push
fdivrs
in
adc
mov
add
xchg
sahf
mov
jl
or
inc
push
fistpl
xor
fcmove
stc
mov
add
mov
pop
bound
add
fidivrl
rclb
and
in
jge
xchg
test
les
lea
add
out
std
mov
pop
pop
rcr
jle
int
test
mov
nop
rolb
and
mov
stc
lock
mov
or
mov
rcr
push
push
fs
scas
enter
and
cmp
ret
or
cmp
fiadds
mov
cmp
mov
lea
push
mov
mov
enter
push
outsb
add
add
push
std
insl
lock
add
xchg
xchg
sbb
packssdw
sub
pop
xor
insb
jl
add
xor
ds
sbb
mov
fisubrs
jb
push
inc
fimull
sub
cwtl
enter
and
das
sub
dec
pushf
inc
out
in
lea
push
stc
lret
add
addr16
ret
orl
mov
inc
ret
movsb
ja
movsl
pop
loopne
fdivrs
dec
push
ret
pop
in
rorb
mov
mov
jo
js
xchg
fs
mov
and
dec
xor
sbb
imul
mov
cld
dec
jp
sahf
or
mov
test
cltd
sub
add
enter
xchg
mov
call
mov
movsb
popf
xor
addr16
inc
aad
pop
mov
jne
jp
dec
mov
rorl
xor
rcl
or
xor
push
aaa
sub
outsb
cmp
xor
pop
adc
xor
in
cmp
push
test
and
in
divl
or
dec
fcoms
push
mov
icebp
cltd
bound
push
test
sub
lods
movsl
adc
das
jno
jecxz
xchg
sbb
aaa
or
lods
call
jge
adc
andl
insl
xabort
movaps
std
std
xchg
mov
cmp
insb
je
dec
sbbb
adc
jp
inc
mov
xchg
add
ret
xor
fcmovne
test
sbb
cld
cli
or
sub
mov
xchg
stc
insb
imul
cli
lea
fwait
pop
dec
mov
push
add
inc
or
int3
xor
dec
xchg
or
jecxz
ret
dec
gs
push
sub
out
scas
inc
nop
xor
xor
xor
push
or
daa
jl
outsl
pop
outsl
mov
inc
aam
js
gs
addr16
xor
sub
push
cmp
rdmsr
xlat
add
lods
mov
imul
add
sbb
jae
dec
ss
imul
mov
push
sbb
out
xchg
sbb
popf
outsl
jb
dec
mov
dec
jmp
push
mov
repz
sbb
jmp
add
das
int
xor
inc
test
jp
mov
xchg
push
incl
xchg
popa
gs
and
test
out
add
inc
fcoml
ss
stos
js
repnz
push
mov
je
mov
clc
xlat
mov
mov
cmp
insl
hlt
arpl
xchg
notb
xchg
outsl
std
nop
adc
push
push
sbb
add
and
inc
push
jne
in
jmp
jns
cmp
add
rclb
outsl
push
dec
cld
dec
loope
inc
cltd
in
sbb
xor
movsl
mov
in
xchg
or
scas
push
das
ljmp
or
loope
inc
jo
and
inc
cld
ret
rcl
xor
sub
dec
orl
clc
lret
push
ret
lcall
pop
push
sahf
fs
and
xlat
push
mov
fnsave
movsl
sub
mov
insb
mov
pop
lcall
das
jmp
xlat
in
or
call
push
gs
add
loop
cwtl
xor
mov
adc
in
addb
mov
xchg
mov
hlt
or
xor
lahf
loopne
test
xlat
push
xor
lods
push
outsb
adc
scas
icebp
cmp
cmpsl
and
push
inc
dec
repz
das
xchg
inc
dec
pop
lret
jl
add
xor
stos
mov
out
pusha
push
movsl
add
or
mov
mov
cmp
pop
imul
push
add
mov
pop
movsl
adc
and
dec
sub
jno
sub
push
and
test
out
dec
jle
mov
jg
pop
xchg
sbb
cmpsb
mov
cltd
jle
in
test
adc
lods
pop
mov
jne
imul
sbb
mov
movsb
pushf
insl
push
dec
outsl
add
jp
and
scas
js
pop
or
xor
inc
addb
mov
scas
cmp
scas
add
aam
jmp
stc
or
xchg
adc
in
movsb
jo
mov
lds
mov
jmp
mov
mov
inc
aaa
xor
mov
repz
mov
sti
sbb
jb
lods
stos
mov
fcmovnb
popa
ror
mov
aaa
jae
cmp
push
inc
cmp
in
cmp
cwtl
jl
xor
int
xor
push
or
add
adc
cmc
sub
aaa
jge
ja
das
xchg
pop
sub
repz
sub
fsubrs
inc
pop
leave
jecxz
lock
fimull
mov
pop
or
fwait
mov
and
jno
nop
aas
stos
in
mov
jge
je
inc
sbb
js
test
insb
lods
popf
mov
sbb
sub
movsl
jae
notb
mov
scas
fsubrl
or
pop
aas
fcoml
out
scas
pusha
popa
shlb
pop
jb
aam
jne
sti
jl
mov
andl
je
hlt
or
or
mov
xchg
dec
mov
andl
pcmpgtw
mov
outsb
cwtl
pop
imul
or
push
std
and
nop
test
jle
cmc
mov
and
mov
mov
sub
std
mov
or
mov
cmp
sub
cli
hlt
not
daa
dec
sbb
fs
xchg
lret
xor
sub
movsb
sub
cli
dec
mov
loope
jb
pop
aad
push
pop
mov
in
adc
rclb
jns
jbe
sbbl
xor
mov
cli
mov
mov
jbe
inc
jo
jg
inc
scas
js
mov
out
in
std
mov
add
pop
jcxz
sahf
mov
add
xchg
or
mov
mov
mov
dec
imul
icebp
xor
lret
arpl
sbb
icebp
dec
pop
ss
or
mov
dec
pop
pop
roll
mov
jmp
push
pop
adc
in
mov
mov
xchg
in
out
incl
mov
push
push
push
fldenv
incl
cmp
shll
imul
data16
sub
imul
loop
mov
pop
stc
xchg
out
icebp
jae
jnp
and
popf
sub
xchg
fs
js
xor
shlb
enter
cmp
and
daa
pop
jo
add
xchg
clc
mov
fs
push
in
dec
loop
or
loop
out
arpl
mov
push
ds
cld
and
outsl
lcall
mov
js
pop
mov
mov
fadds
mov
and
and
cmp
testl
sbb
test
xor
lea
test
ja
jle
add
mov
inc
mov
or
jl
push
pusha
mov
cwtl
push
mov
push
and
dec
cmp
fcomps
rcrb
sub
mov
mov
pop
mov
out
rol
mov
mov
call
aas
xchg
idiv
call
rcl
mov
and
icebp
addr16
jns
pop
adc
inc
cmp
shrb
xchg
mov
xchg
ss
cli
dec
pop
xchg
negl
scas
ficompl
mov
sbb
dec
jns
pop
stc
cs
and
js
dec
xor
sarb
sub
sbb
aas
pop
push
jmp
sbb
jecxz
mov
inc
lahf
xchg
mov
daa
loopne
xor
outsl
add
add
jnp
out
inc
int3
out
mov
ror
test
sbb
jnp
in
dec
shll
xchg
mov
aad
nop
out
push
imull
sarl
add
inc
fbstp
pop
cmc
push
push
rorl
add
cmc
repnz
mov
addr16
lret
int3
fbld
pop
dec
aam
cmp
insb
lods
mov
fistl
sti
ss
push
add
rolb
push
cmp
mov
push
mov
or
xlat
les
stc
andl
mov
test
cmpsl
insl
add
push
and
add
xor
sbb
aas
mov
xor
xchg
push
mov
scas
mov
leave
in
inc
stos
mov
jp
pushf
and
lea
mov
mov
psubw
inc
jle
pusha
xor
call
lds
sti
mov
ret
xchg
in
out
jb
lods
in
cmp
clc
scas
add
shll
push
mov
bound
cmpsb
inc
aas
sbb
add
sbb
cwtl
ret
mov
sbb
lcall
and
jbe
imul
pop
es
push
hlt
data16
repnz
ljmp
lahf
leave
pop
stc
lcall
pop
cmp
jg
fnstcw
popa
stos
pop
lea
sub
sbb
ret
cmp
test
adc
lret
or
std
loopne
xchg
cmpsl
pop
push
jg
data16
push
out
xor
mov
and
pushf
scas
mov
sbb
mov
iret
and
pushf
lea
or
lock
ljmp
mov
push
fidivrl
sub
enter
movsl
ret
loop
insb
ljmp
push
adc
pop
loope
jecxz
jno
pop
gs
mov
sub
out
decl
call
sub
push
ljmp
mov
xchg
arpl
fimull
addl
mov
dec
cmp
inc
jo
into
arpl
loope
mov
roll
in
mov
out
hlt
movl
or
cmp
sub
ds
dec
test
mov
out
outsb
push
xchg
sub
mov
ret
inc
xlat
adc
fistpl
inc
pusha
leave
pop
inc
mov
sub
rcl
sbb
icebp
movsl
inc
data16
call
sub
dec
pushf
sbb
jb
mov
shr
inc
xor
and
mov
arpl
inc
pop
push
lcall
mov
ds
out
int
cmp
fwait
in
negb
xchg
inc
mov
leave
push
int
xchg
fs
dec
insl
inc
mov
scas
pop
pop
fbld
icebp
sub
dec
cld
sbb
mov
in
fimull
int
arpl
mov
roll
add
mov
push
in
lock
jne
pop
pusha
add
test
test
divb
sahf
mov
sbb
fs
xchg
mov
mov
and
dec
dec
dec
jnp
movl
sbb
dec
decl
mov
leave
out
inc
out
arpl
add
fdiv
lods
enter
dec
out
test
push
cmp
jae
mov
dec
cmpsl
lret
idivl
scas
push
cwtl
sub
pop
push
pop
pop
push
xchg
movsl
jmp
bound
mov
push
mov
xchg
mov
xlat
cmp
push
pop
fyl2xp1
inc
lahf
scas
insb
int3
add
xor
cltd
aas
xchg
xchg
inc
jns
mov
shll
xchg
scas
sbb
inc
fdivs
insl
pop
jb
mov
jo
into
lcall
pop
into
mov
ja
lret
jne
xchg
ja
out
imull
fistps
cmp
push
sahf
sbb
fcomps
xchg
in
mov
fnstenv
xchg
pop
pop
xchg
mov
loopne
outsb
xchg
jmp
addr16
mov
sbb
fdivs
dec
cmp
lea
jg
pop
push
std
mul
inc
in
mov
out
push
test
jbe
add
nop
xor
mov
lock
std
pop
lret
and
xor
mov
adc
ds
mov
cmpsl
pop
push
aad
pop
loop
mov
or
pop
loope
stc
jg
add
mov
sbb
dec
push
dec
imul
popf
adc
negl
aas
push
cmp
mov
lods
adc
mov
push
ret
pop
iret
jb
cmp
xor
mov
adc
outsb
fistpl
aaa
stos
inc
cli
in
inc
stos
lcall
sub
mov
and
pusha
pop
enter
clc
sub
inc
ja
rolb
pop
push
sbb
cld
inc
faddp
sub
jp
fiaddl
mov
add
cli
cmc
jns
aas
push
mov
push
fwait
das
rcrl
inc
xor
js
mov
sbb
fsubs
cmp
imul
iret
mov
adc
xlat
inc
xor
in
fistps
in
out
jns
xchg
fs
lea
aam
pop
sbb
das
jmp
out
jmp
push
jns
jle
cmpsl
lahf
add
aaa
test
roll
mov
scas
js
or
mov
push
xchg
mov
dec
dec
movsb
sub
decb
js
movsl
xor
std
xor
cld
cmp
dec
les
dec
cmpsl
in
sub
movsl
loop
push
hlt
or
sbb
inc
out
mov
add
mov
lahf
lds
xlat
ret
ret
lock
pop
xchg
out
adc
mov
dec
or
fwait
pushf
repnz
push
jae
sbb
mov
mov
cwtl
mov
int3
inc
cwtl
cmpsb
out
aad
test
mov
lods
jb
push
dec
push
xor
cmc
pop
divl
hlt
ljmp
pop
out
lea
push
jns
adc
lret
jnp
dec
and
paddsb
push
stc
push
das
insl
and
stos
add
mov
cmpsb
sub
inc
push
cmpsl
mov
ficoml
notl
arpl
push
push
jge
pop
cmpsb
adc
sbb
and
lret
sbb
sbb
push
push
scas
inc
pop
mov
and
xor
into
adc
jmp
sub
or
je
adc
push
es
lahf
inc
lret
pop
fistps
dec
adc
push
int
adc
fsts
add
negl
in
aad
mov
imul
fisttpl
lea
ficomps
fwait
dec
jno
add
mov
clc
adc
mull
and
ja
mov
leave
cmc
movl
inc
stos
push
add
sbb
push
ss
add
es
adc
xchg
inc
movsb
mov
js
leave
xchg
out
pop
call
cmp
std
aas
fwait
scas
test
sbb
xchg
cmpsl
dec
cmpsb
cwtl
jns
stc
jmp
lds
outsl
inc
sub
or
pusha
pop
call
and
enter
icebp
xlat
sub
ljmp
cmp
xchg
and
out
shrl
push
fnstcw
lahf
cmc
cmp
iret
aas
dec
xor
aaa
lcall
dec
push
dec
jle
leave
fwait
shrl
dec
gs
mov
xlat
out
fldl
dec
ret
cmp
adc
dec
dec
lods
test
lret
filds
add
bound
push
push
ficompl
add
stc
lods
outsb
mov
cmpsl
add
lcall
and
loopne
pop
jnp
pop
and
ficompl
out
cs
xchg
cli
inc
jl
jnp
cmp
inc
shl
out
nop
lds
or
daa
sbb
in
adc
cmp
push
outsb
mov
stos
mov
aaa
loopne
test
ret
icebp
sahf
mov
rcr
cld
das
mov
mov
cmp
sti
sbbb
sub
mov
sahf
hlt
inc
mov
or
stc
pushf
frstor
xchg
push
jl
inc
mov
xchg
das
push
js,pn
or
push
add
mov
js
rorl
mov
lods
cmpsl
or
jge
test
ljmp
fdivrs
ficoml
nop
stos
imul
mov
inc
repnz
mov
cmpsl
mov
mov
cmpl
insl
pop
repnz
add
ja
dec
jnp
out
or
dec
clc
sar
xchg
and
imul
lret
fdivp
add
and
or
push
outsb
aaa
push
outsl
mov
pushf
mov
negl
push
sbb
stc
pop
mov
lods
sti
cmp
out
push
ret
mov
pop
adc
xchg
pushf
fimuls
adcb
jne
push
cmp
cwtl
mov
mov
pushf
mov
loopne
lods
cmpsl
and
mov
je
pop
adc
pop
in
fwait
sbb
mov
lock
nop
adcb
xor
sub
jb
push
adc
orb
das
arpl
and
out
insb
cld
adc
test
test
dec
pop
adc
shll
pop
cmp
fmuls
sub
and
loopne
cltd
mov
sub
lods
jp
into
iret
aaa
ss
push
in
ds
fxch
iret
fimull
flds
pop
jo
sub
divl
mov
stos
mov
scas
shl
mov
fwait
push
push
cmpl
jnp
lret
rol
sar
ds
test
loopne
mov
gs
mov
in
sbb
inc
sub
sahf
push
fildll
fstl
and
jle
test
fnstenv
lods
mov
cmpsb
out
roll
iret
sub
pop
stos
leave
pop
or
mov
mov
lods
xchg
into
dec
cmp
push
clc
inc
das
lahf
out
inc
or
jns
loop
sub
xchg
lret
mov
outsl
sbb
jecxz
add
mov
fistl
into
outsl
and
and
icebp
pop
jne
ja
in
mov
ret
xorb
jne
fsubr
mov
cli
aam
mov
sbb
jl
imul
push
adc
or
push
ja
loopne
pusha
cmp
push
iret
subl
push
adc
jo
clc
mov
mov
dec
sbb
testl
jg
jno
push
cmpsb
push
loop
or
rep
push
sub
xor
outsl
insb
stos
cli
sub
xor
ss
pop
dec
aam
add
in
jmp
mov
imul
movsl
cmp
lea
setbe
mov
mov
dec
adc
jno
rol
pop
fdivs
push
rclb
push
lahf
int
lcall
xchg
scas
insb
pop
sbbl
cmp
or
add
xor
mov
sbb
push
sbb
lods
icebp
mov
lahf
xchg
xor
sti
mov
jg
scas
mov
mov
lret
xchg
out
jecxz
dec
pop
fstpt
loope
rolb
xor
lea
mov
dec
sub
lods
pushf
pop
pop
mov
dec
mov
inc
adc
cltd
lret
sub
cmp
cmp
or
cmp
mov
aad
add
xchg
pusha
lds
jmp
int
adcl
nop
int3
pop
test
xchg
hlt
push
sub
shlb
js
or
cmc
xchg
sub
or
add
jge
sbbb
pcmpeqd
push
mov
dec
mov
sbb
ljmp
test
xchg
iret
loopne
mov
cmp
fcmovnb
sbb
jl
jg
and
pusha
mov
mov
jns
insb
sahf
dec
mov
hlt
lret
xlat
add
out
push
jo
paddd
repnz
inc
adc
push
sti
and
inc
sub
ds
lret
sub
test
les
inc
mov
nop
push
in
movsl
cld
cmp
inc
jo
push
mov
std
sbb
stc
and
xor
pop
pop
jbe
repnz
push
xchg
insl
adc
in
cmpsl
push
cld
sub
out
sbb
mov
dec
std
push
pop
in
xchg
mov
inc
lea
std
cmpsl
fisubl
jle
push
aad
mov
testl
fisubl
in
and
mov
out
outsl
adc
and
or
inc
fsubr
js
and
mov
ja
sbb
pop
cmp
scas
sbb
push
ljmp
ret
cmp
out
pushf
lods
xchg
cmp
sbb
push
aas
sub
jo
aas
fsubrl
inc
pushf
add
pop
mov
pop
fisubl
add
xor
in
imul
popa
cli
sub
out
push
test
mov
mov
sub
jl
add
pop
mov
and
out
dec
add
aas
test
movsl
jb
insb
fisttpl
or
fists
mov
imul
stos
ss
out
aam
in
pop
add
ret
mov
jecxz
jge
sti
and
shl
mov
outsb
jle
cmc
mov
mov
rcrb
icebp
fildl
fnsave
adc
lret
push
mov
or
jb
out
and
fnsave
imul
jne
sub
xchg
sub
cmpsb
dec
pop
int3
xchg
icebp
pop
repnz
mov
icebp
inc
out
mov
or
test
outsb
adc
cmpsl
enter
add
ficompl
aaa
mulb
nop
stc
xchg
push
add
hlt
into
xlat
rolb
dec
xchg
daa
ja
pusha
dec
or
sub
xor
sbb
pop
mov
loopne
pop
repnz
add
push
pop
adcb
inc
jo
imul
cmp
pop
dec
outsl
adc
push
ds
aaa
shrb
cwtl
sbb
cltd
pop
jns
inc
adc
and
add
mov
jecxz
aad
and
inc
push
mov
clc
add
mov
adcb
adc
cmp
stos
psubusw
repz
inc
pop
mov
mov
shlb
or
lahf
sbbl
pop
sbb
stos
andb
xchg
pop
sbb
cmovo
jecxz
gs
iret
shrl
cmp
fdivrs
push
mov
addr16
push
adc
lds
adcb
xchg
fxrstor
or
mov
cltd
inc
lar
mov
lcall
or
push
jle
and
aam
cmp
fsubr
jae
or
add
adc
xor
xchg
mov
xchg
cmc
add
add
jl
inc
enter
jns
pop
daa
ficoms
push
insl
iret
mov
push
inc
popa
cs
mov
xor
lahf
bound
fisubrs
pop
xchg
scas
push
scas
dec
ret
xchg
mov
mov
fcompl
cmp
xchg
iret
call
adc
icebp
add
inc
cld
sub
mov
mov
shl
and
enter
shlb
in
pop
sbb
fiaddl
sbb
lods
push
fimuls
rcll
ficoml
push
push
call
lret
fcmovne
hlt
sahf
dec
pop
nop
out
aaa
fnstcw
inc
mov
jnp
int3
mov
lods
mov
popa
out
es
sbb
sub
mov
sbb
dec
pop
and
jne
adc
std
xor
push
mov
les
jno
push
sub
push
lret
fsubrs
xchg
fnsave
je
cs
das
or
xor
in
ret
and
enter
xlat
es
dec
addr16
popf
fnop
or
jae
cmp
adc
popa
ss
mov
mov
fistps
pushf
inc
or
inc
xlat
test
and
jbe
mov
sub
cld
push
orb
ss
pushf
push
mov
repnz
jp
mov
pop
punpckhdq
sub
ret
dec
je
jg
inc
jle
fs
cmp
mov
add
xor
add
inc
movsb
mov
in
sbb
clc
pop
es
fcmovnbe
imul
in
xor
data16
jno
fistpl
mov
int3
pop
das
mov
jne
jne
pop
ljmp
inc
cld
movb
shr
ret
fwait
jae
leave
loope
adc
inc
adc
scas
aaa
jns
test
enter
call
lds
add
and
jb
pop
leave
loopne
mov
fiaddl
and
dec
mov
sbb
xlat
test
out
stos
pop
adc
and
pop
xor
leave
mov
in
jns
out
dec
inc
outsl
pop
out
in
mov
std
out
jnp
mov
or
inc
call
popa
pop
adc
xorb
add
cmp
dec
adc
add
mov
outsl
or
add
lret
mov
out
ljmp
dec
dec
sbb
outsb
jmp
popa
pusha
cmpsb
xchg
mov
lahf
cli
cltd
mov
xchg
cli
je
jmp
lods
aad
rol
repnz
push
sub
mov
into
arpl
sbb
jp
mov
jo
cmpsb
inc
pop
das
xchg
out
das
xchg
sub
mov
mov
test
lret
je
out
test
and
cmp
cwtl
fimull
xor
sub
mov
xor
push
dec
mov
orb
jno
jo
and
mov
mov
aas
push
push
push
sub
repnz
pop
rcl
dec
testb
jmp
sub
mov
mov
xor
lods
aad
mov
inc
mov
test
xchg
sbb
shll
cmp
cmp
nop
jne
adc
xchg
sbb
ljmp
mov
frstor
xor
insb
jnp
cmc
and
cmc
add
jne
sbb
dec
pop
add
mov
or
sbb
dec
pop
cmp
push
rcr
test
negl
hlt
add
insb
adc
leave
stos
aas
andb
mov
mov
cltd
fmulp
mov
pushf
cld
push
cltd
out
xchg
dec
scas
popf
fcmovbe
jl
addr16
cmp
sahf
xchg
mov
or
aaa
sbbb
xchg
div
inc
cmp
fwait
in
jae
rcrl
arpl
mov
jp
fwait
xchg
pop
fmull
mov
outsb
xorb
stos
test
addb
cmpsl
hlt
push
out
add
imul
mov
int
jp
pushf
add
stos
add
inc
shlb
jp
and
into
cmc
xlat
sarb
lcall
mov
imul
adc
mov
loop
aam
fisttps
loopne
mov
mov
je
mov
sbb
or
mov
push
in
sarl
movsl
ret
repz
push
test
xchg
int3
rcl
punpckhwd
xor
mov
xor
jg
pop
cmp
pop
add
add
add
or
push
lcall
orb
leave
fdivl
xchg
aam
fisubl
lcall
xor
test
sarl
fs
movsl
insl
jbe
push
or
loop
add
stos
aaa
fnstcw
sarl
or
and
sub
adc
jmp
sahf
andl
xchg
shl
test
jmp
sub
pop
pop
pop
psllq
ss
stos
mov
test
mov
sub
fmull
adc
rorb
ret
and
or
add
xchg
popf
aam
lret
xor
outsl
push
arpl
into
subl
fs
decl
aaa
xor
mov
sub
shll
imul
mov
dec
das
pushf
jmp
mov
dec
nop
cmp
pop
mov
je
add
mov
fidivl
adcl
mov
cmpsl
jg
sar
lahf
ja
add
mov
mov
push
mov
adc
into
jae
mov
jno
cvtps2pd
push
inc
fiadds
dec
xor
das
out
xchg
outsb
dec
out
cmp
push
int3
cwtl
test
push
dec
mov
rorl
leave
iret
mov
and
mov
aaa
inc
loopne
fstpt
adc
jge
mov
fcmovnb
dec
imul
mov
or
movsb
mov
icebp
xor
and
out
push
loopne
mov
cmp
cmp
into
movsl
sub
xor
jecxz
pop
cmc
inc
and
push
or
imul
popf
call
pop
movsl
push
ljmp
outsb
jnp
arpl
das
sub
fdivr
clc
aas
sbb
and
insb
aaa
lret
xor
and
in
or
xor
lock
iret
insl
adc
jns
ds
cmpsb
sarl
dec
into
lods
inc
mov
inc
adc
lret
fsubrs
movsl
dec
dec
rolb
ret
gs
mov
cmp
out
xchg
jecxz
and
mov
ss
shl
add
xor
ret
in
push
dec
enter
xorl
cld
cmp
add
sahf
jecxz
dec
mov
movsb
les
ret
jecxz
out
rcll
in
adc
sbb
pop
insb
int3
adc
pusha
mov
pop
shll
xchg
push
or
pop
movsb
or
push
cmp
sbb
les
inc
add
in
inc
das
pop
xchg
jae
gs
test
cltd
pop
fldcw
push
movsbl
movsl
xchg
cmp
loop
sti
loop
sub
jmp
leave
clc
sbb
fcmovbe
shlb
test
lock
jmp
mov
ret
cmp
xchg
pop
mov
movsb
pop
fcomp
sub
xorb
ljmp
mov
push
pop
sti
cs
mov
adc
dec
add
mov
push
adc
push
jmp
xor
push
mov
adc
dec
into
rcrb
push
or
fcompl
inc
pop
or
fimull
ret
jae
dec
pop
cmp
inc
sahf
cs
std
lods
mov
and
rclb
xchg
jae
fisttpll
mov
add
lahf
adc
xchg
cmp
pop
jg
pop
out
ficoms
cli
mov
test
icebp
xchg
mov
negl
mov
negl
jne
outsb
fwait
call
cmp
dec
inc
aad
xor
sub
scas
loop
sub
sahf
sbb
aaa
xchg
stos
lfs
gs
cmpsl
sub
aaa
cwtl
xor
pop
arpl
cmpsb
leave
xchg
imul
or
xlat
add
jno
pop
rcrb
nop
cwtl
sbb
lds
or
push
add
scas
push
sbb
push
push
aad
push
dec
add
dec
jmp
lcall
in
jp
icebp
lret
mov
pop
cltd
ja
cmp
cmp
add
and
mov
fisttpll
pop
cmp
push
sbb
jl
cmp
inc
ljmp
push
roll
shlb
es
jp
dec
jmp
dec
sti
jmp
repz
mov
add
xor
fsubrs
jl
psadbw
es
add
jle
cmpsl
mov
fisttpll
lock
push
out
sub
mov
xor
mov
mov
xlat
clc
or
cs
pushl
or
into
stos
sub
stos
push
mov
rcll
and
push
xor
pop
pop
pop
movsl
add
mov
adcb
xchg
pusha
sbbl
popf
daa
xchg
add
stos
fucom
fucomi
gs
cmpsl
dec
or
cld
mov
jge
pop
test
lret
fwait
push
subb
popf
xlat
repnz
std
xor
add
sbb
shrb
inc
outsb
in
decl
add
std
inc
mov
lret
sub
out
ret
xor
jp
jecxz
add
imul
xchg
clc
jmp
lahf
mov
cld
lcall
push
jo
mov
arpl
mov
test
in
sbb
add
int3
test
pushf
cmpsl
dec
sbb
cltd
push
enter
jge
aaa
pop
js
in
dec
mov
xchg
dec
push
daa
push
bound
stos
jmp
mov
jmp
jno
dec
push
xchg
paddusw
push
mov
xlat
les
lcall
cmpsl
push
push
roll
sub
mov
xchg
stos
dec
mov
cmpsl
adc
jb
out
clc
jnp
das
int
cmp
jle
pop
arpl
jg
pop
sub
or
cmp
add
test
mov
out
dec
dec
cltd
out
popa
or
mov
xchg
jle
and
adc
mov
mov
push
inc
inc
aad
jmp
add
test
imull
push
outsb
dec
js
adc
push
and
cmpsl
pop
mov
nop
hlt
idivl
orl
rcrb
es
cs
sub
pop
lods
hlt
lret
dec
push
int
adc
aas
scas
adc
push
lret
push
cli
loopne
mov
roll
ljmp
and
bnd
sbb
fistl
xor
lock
pop
out
mov
xor
or
repz
mov
adc
cmp
cwtl
js
test
or
lahf
xor
insl
bound
mov
dec
jge
mov
mov
adc
jo
xchg
jnp
test
xchg
sbb
sti
fadds
mov
rcr
push
mov
and
out
add
push
xchg
das
sbbl
add
loope
ja
cmp
in
push
mov
std
stos
sarb
xchg
rcrl
sbb
push
in
cmp
mov
adc
ljmp
xchg
and
push
out
insb
push
inc
lahf
or
sbb
xchg
pop
xor
jae
hlt
cwtl
rcl
scas
or
imul
cwtl
xchg
fcomp
jnp
mov
arpl
mov
inc
out
add
btc
xor
xor
sub
mov
adc
pop
in
ficoms
pop
mov
sbb
xor
xchg
outsb
out
xchg
imul
in
out
out
stos
aas
xchg
in
cmpsb
es
push
in
and
insb
loope
mov
dec
sub
cli
in
in
inc
xor
lahf
daa
inc
pop
cs
mov
add
adc
fsubrs
cli
outsb
adc
push
test
test
pop
and
sahf
xchg
andl
and
sbb
cltd
xchg
popf
adc
inc
call
incb
pop
cmpsl
subb
frstor
jg
ret
mov
sub
xchg
shlb
cld
enter
push
fistpl
stc
adc
rcrb
dec
lcall
fildll
mov
rolb
jecxz
cwtl
gs
std
mov
xchg
andb
test
dec
lret
push
pop
sub
dec
add
dec
scas
mov
jns
add
loope
out
push
push
cmp
lcall
adc
cli
dec
inc
mov
add
repnz
xor
xchg
jle
mov
out
inc
and
clc
lds
imul
push
push
out
cld
sub
fsubp
lret
in
push
mov
fwait
dec
cmp
push
scas
stos
in
inc
fwait
subl
pop
cmp
fidivl
push
lods
push
imul
repnz
jge
adc
xorl
inc
mov
and
mov
mov
jp
jno
icebp
lods
mov
or
jecxz
fmul
push
ret
mov
addr16
int3
cmc
xchg
ja
into
push
movsl
push
data16
sbb
push
cli
addb
pop
enter
jl
mov
loope
ret
loopne
mov
dec
sub
stos
xchg
pop
adc
lret
and
out
inc
arpl
inc
inc
fcompl
ja
mov
inc
mov
lods
push
shlb
iret
xor
mov
iret
iret
pop
pop
shrl
movsl
inc
imul
data16
xchg
imul
mov
jecxz
mov
or
sbb
incl
fdivrs
xchg
mov
rorb
lods
shlb
mov
dec
icebp
mov
popf
mov
scas
jo
outsb
aad
addr16
popa
jmp
pop
lds
or
mov
les
daa
cwtl
fdivrs
cld
mov
cmp
adc
cld
cmp
rolb
push
pop
call
int
ret
inc
jle
pop
ret
xchg
mov
mov
dec
dec
mov
sti
push
pop
cmc
and
cmp
xor
loope
lahf
fwait
pop
outsl
inc
jo
test
mov
push
leave
inc
sub
ret
inc
xchg
adc
push
out
push
push
insl
and
xchg
mov
stos
ljmp
dec
dec
out
pushf
mov
lea
mov
test
mov
xchg
dec
inc
push
sahf
cmc
mov
movaps
cld
xchg
lods
loope
jae
jecxz
movsl
mov
in
fdivrl
jne
sbb
mov
xchg
mov
cmp
sub
and
idivb
std
mov
and
cmp
sub
adc
popf
jecxz
pusha
and
mov
orl
cltd
jg
rcrb
mov
mov
rorl
add
xchg
sbb
in
rcll
cmp
ljmp
je
sub
inc
xchg
cmp
jg
pop
shrb
idivb
rolb
add
xor
or
scas
pop
mull
int3
movsl
or
mov
outsb
enter
pop
xchg
stc
mov
add
leave
xchg
test
xchg
leave
inc
or
repz
das
mov
adc
test
cmp
in
insl
adc
xchg
mov
xor
xchg
sbb
mov
jo
ss
stos
or
cmp
sub
mov
scas
adc
and
jl
adc
jl
orb
addl
xorl
add
sbb
pushf
xor
stos
in
cmp
mov
loop
mov
mov
lods
sbb
dec
arpl
mov
and
push
clc
shlb
ja
mov
push
sti
sub
mov
mov
cmp
fucomi
push
or
test
and
gs
or
mov
xor
and
xchg
sub
sbb
adc
lahf
mov
mov
or
pushf
xor
addr16
fdivrl
orl
fldcw
ficoms
das
rcll
or
mov
xchg
jae
bound
out
adc
lock
add
mov
int
mov
imul
bound
mov
mov
jp
cltd
adc
repz
adc
out
ret
int
into
dec
and
and
or
push
and
pusha
addr16
sbb
or
push
or
dec
mov
sahf
out
jl
aam
cmp
call
aam
jle
cli
sbb
out
nop
insb
mov
es
nop
outsl
push
pushf
rclb
fiadds
insl
pop
or
ljmp
jns
faddl
ret
call
and
cmp
in
mov
pop
pop
jmp
push
and
movl
test
jge
dec
xor
cmpb
mov
ss
in
daa
popa
pop
ret
inc
mov
sub
inc
mov
mov
out
int3
outsb
ret
mov
popa
push
je
cmpl
mov
into
pop
jo
lea
out
adc
fdivl
test
out
js
sbb
xor
test
imul
pop
ljmp
mov
jmp
mov
sbb
sub
dec
push
xchg
out
ja
outsl
adcb
pusha
cmpsl
std
fcmovu
pushf
ret
sub
mov
fadds
cltd
cmp
push
and
add
lea
dec
out
sub
jl
mov
dec
mov
lret
insl
into
pop
jge
leave
aam
sti
enter
add
ljmp
jb
mov
dec
jl
or
das
mov
push
nop
mov
test
outsl
inc
insb
mov
jmp
daa
inc
push
cmp
xchg
jl
shrb
add
cmp
push
sbb
push
mov
mov
sti
mov
popa
outsl
ja
inc
adc
imul
rol
push
daa
cmp
sub
sub
cwtl
push
das
pop
andl
inc
xlat
inc
es
in
mov
cmp
fstpl
xor
push
scas
das
xchg
adc
mov
add
push
mov
pop
inc
xchg
sub
cmc
inc
dec
mov
cmp
fldl
in
jb
popf
mov
push
xor
mov
dec
dec
inc
jmp
cmp
sahf
cs
and
call
mov
sbb
test
pop
cmpl
fldcw
xor
add
divb
xchg
jns
mov
fcomps
pop
xchg
inc
adc
push
mov
inc
pop
out
movsl
xchg
aas
mov
sti
shll
dec
dec
ja
jge
sub
test
icebp
sbb
push
xchg
mov
in
jns
sti
gs
mov
nop
push
psadbw
hlt
fdivr
cmpsb
cs
lods
test
test
jo
cltd
mulb
lcall
pop
shll
jle
jg
lret
fidivrs
dec
fwait
cltd
cmp
jg
gs
loopne
adc
mov
xor
dec
insl
mov
xchg
jmp
or
rcrb
cmp
fwait
lcall
mov
mov
push
cmova
imul
inc
xchg
call
imul
movsbl
dec
into
xchg
pop
mov
in
mov
in
mov
mov
inc
cmpb
jecxz
xor
jmp
lock
and
nop
pop
cmpsb
sarl
mov
stos
inc
or
inc
out
add
repz
sahf
xor
sub
adc
fimull
xchg
out
push
xchg
aaa
xor
push
outsl
sbb
lds
mov
mov
in
pop
cmp
je
push
jns
lea
sub
add
stc
inc
sahf
ret
insb
sbb
hlt
fisttpl
lahf
lret
lea
jle
popa
shlb
pop
bound
pop
dec
jbe
jg
cltd
cli
and
jo
pop
jmp
loope
call
aam
nop
push
loopne
mov
lock
leave
sub
cs
imull
out
pusha
dec
cmp
cmpsl
adc
daa
in
jp
lods
test
andb
jl
es
fwait
mov
xchg
jns
mov
xor
adc
shll
out
mov
xchg
mov
sub
xchg
out
and
mov
int3
adc
pop
dec
lcall
movsl
pop
ret
mov
add
push
cwtl
popa
cmp
sub
adc
leave
fs
hlt
in
fcomip
fs
das
mov
int3
xchg
in
das
add
pop
or
mov
iret
sahf
nop
add
out
push
and
push
xor
loop
leave
and
and
jae
hlt
dec
std
jns
xchg
leave
jo
mov
test
out
jecxz
loop
add
jmp
cmp
and
sub
daa
out
stos
push
into
pop
xchg
mov
or
mov
or
into
pop
push
rorb
in
gs
std
cmp
and
mov
pop
loop
popa
cli
stos
push
and
and
add
dec
cltd
push
les
and
repz
daa
cmp
addb
cmp
pop
push
inc
inc
ret
and
add
cwtl
into
sahf
pop
mov
aaa
dec
mov
jg
outsb
adc
addr16
test
scas
mov
loopne
mov
adcb
sarb
mov
repnz
daa
cld
loop
cwtl
dec
sbb
lahf
pop
arpl
jo
out
imul
gs
test
pop
aas
std
cwtl
icebp
je
jae
mov
repz
sub
xchg
sbb
mov
mov
mov
cli
jl
xor
into
or
outsb
or
aaa
push
movsl
pop
xchg
xchg
mov
test
aaa
or
mov
push
scas
inc
adc
adc
aaa
out
rorb
dec
loopne
or
ljmpw
sbb
dec
push
jge
fcomps
or
mov
push
xor
adc
mov
inc
int
data16
mov
mov
add
loop
mov
in
push
ret
mov
stos
or
adc
movsb
sbb
pusha
jnp
xor
mov
les
testb
decl
mov
int3
jge
pcmpgtw
loopne
cld
adc
mov
repnz
sbb
mov
inc
test
inc
mov
cli
mov
push
mov
push
pop
sub
pop
xchg
imul
inc
leave
fmull
adc
lcall
cmp
mov
xchg
xchg
dec
aaa
lcall
ljmp
js
mov
popf
sub
imul
mov
ret
loop
popf
mov
jg
mov
and
adc
inc
imul
lock
cmp
jp
xlat
mov
xor
sbb
insb
pushf
jp
aas
mov
cmp
xor
stos
add
test
mov
lock
dec
xchg
inc
jns
and
push
int3
repz
pop
push
inc
scas
xlat
pop
sarl
cs
mov
jb
aad
sbb
xchg
sub
cmp
js
or
out
mov
fsubrp
cmp
sahf
xlat
inc
mov
sub
sbb
add
mov
sub
and
jge
sbb
in
data16
xor
cmp
adc
loope
addr16
push
scas
sar
gs
inc
xor
inc
xor
jae
gs
mov
int3
fcoms
fwait
aas
sahf
test
pop
ja
inc
mov
adc
ja
rorb
xchg
adc
xor
ljmp
mov
cmc
stc
cmpsb
nop
pop
inc
out
inc
stc
pop
scas
push
rcr
dec
shrb
cltd
fnstsw
rcrl
fbstp
icebp
add
repz
arpl
sub
aam
clc
arpl
leave
xchg
jnp
fstpl
pushf
sbb
mov
sbb
jno
mov
imul
xchg
add
fs
insb
xor
aas
out
mov
sbb
and
mov
sti
inc
int3
sahf
sub
mov
push
xchg
push
dec
sub
arpl
add
and
das
aam
enter
xchg
xor
jbe
mov
jo
imul
out
fbstp
inc
loop
popf
adc
orb
add
mov
jnp
sub
stos
dec
add
into
int3
outsb
cwtl
imul
and
fiaddl
cli
or
add
push
popa
int3
aam
mov
jg
test
sub
faddl
hlt
jl
insb
stos
sbb
push
subl
stos
pop
xchg
cmpsl
xor
mov
lds
jns
les
aas
xchg
cltd
jg
inc
sbb
mov
out
adc
sbb
xor
xchg
fisttpll
test
rclb
inc
ss
push
or
stos
cltd
mov
mov
xchg
jae
push
aad
and
inc
into
rol
and
mov
xor
lds
movsb
adc
loopne
mov
xchg
lock
sub
movsb
enter
ret
ds
popf
in
cli
inc
xor
xchg
push
cmp
js
mov
sub
call
cmpsl
pop
iret
cmp
test
pop
jo
mov
lock
and
jo
outsl
pushf
in
int3
cmp
jbe
dec
mov
aam
add
sbb
cltd
lock
shrl
mov
push
jle
jge
test
mov
mov
or
mov
ret
dec
add
sub
pop
sub
daa
mov
in
pop
cli
push
fwait
into
or
sahf
jg
and
leave
lock
fsubs
push
sbb
negl
arpl
outsb
xchg
lcall
mov
icebp
xchg
cmp
fisubl
adcb
xor
pop
inc
adc
adc
jle
movsb
aad
hlt
pop
jo
cmp
push
fwait
dec
inc
and
sub
lret
push
push
adc
cmp
pop
pop
add
outsb
xchg
sub
je
xlat
in
adcl
or
sahf
push
rorb
fnstenv
sbb
ja
iretw
lea
and
pop
dec
mov
jno
cli
into
jae
and
adc
add
aas
outsl
icebp
loop
stc
push
push
xor
int3
rol
scas
out
mov
mov
push
add
and
pushf
out
das
mov
jmp
fdivp
and
jbe
gs
lods
jg
cmp
mov
adc
mov
cwtl
and
jo
mov
or
sbb
sub
addr16
xlat
pop
aaa
dec
addr16
vmwrite
mov
jmp
xchg
add
nop
add
mov
dec
pop
cli
in
clc
pushf
adc
mov
dec
xorb
or
pusha
pop
fdivrl
jl
adc
adc
js
jg
xchg
ss
mov
xor
mov
movsb
sbb
cmp
lcall
movsl
pop
add
mulb
inc
clc
mov
jb
xor
test
rcrl
std
xor
fdivrl
aas
mov
fs
inc
cmp
cmp
add
dec
adc
pop
sub
pop
push
adc
dec
cmpsb
inc
mov
insb
jge
xor
addr16
adcb
arpl
lcall
pop
and
sub
push
xchg
cmc
fimull
repnz
pop
push
pop
ja
push
xor
xchg
xor
fnstcw
sahf
jns
jne
add
cmp
pop
lds
addr16
and
jne
inc
bswap
fwait
insl
fcoml
jb
testl
cmp
int
mov
inc
xchg
je
xor
lea
mov
incb
jnp
adc
cmp
leave
in
mov
xor
or
cmp
ret
aam
ja
loope
or
xchg
sub
mov
repz
mov
jge
mov
mov
jnp
out
shl
call
add
mov
mov
mov
aaa
jp
dec
enter
push
std
xor
arpl
popa
push
scas
mov
bound
mov
leave
pop
in
mov
rclb
jecxz
hlt
mov
sbb
dec
test
inc
push
and
pop
gs
lret
cmc
xor
popa
fmull
or
shrb
divl
dec
scas
enter
push
xchg
test
push
push
lret
or
xchg
pop
es
movsl
inc
mov
arpl
jne
lret
mov
cli
dec
pop
lods
sub
out
mov
push
iret
in
jmp
shlb
or
push
jecxz
mov
lds
xlat
mov
cmp
xor
clc
repz
leave
cld
dec
hlt
xchg
jge
adc
sbb
loop
fistl
mov
sub
or
iret
adc
out
add
xchg
cld
imul
sub
adc
xchg
scas
loope
outsl
xor
sbb
test
push
testl
cs
enter
loope
xchg
or
mov
cmpsb
xchg
dec
or
cmp
cmpsb
dec
ds
jmp
sub
jecxz
xor
cs
out
push
pop
iret
mov
int3
or
add
mov
cwtl
cmp
insb
jmp
lcall
icebp
sub
mov
aaa
xchg
mov
aas
pushl
jae
mov
or
rol
dec
mov
sbb
pop
jae
jl
jmp
arpl
mov
jge
movsl
push
int3
jmp
test
cltd
fdiv
adc
and
out
cwtl
jle
pop
inc
fiaddl
cmpsb
jl
pop
rorl
daa
icebp
lahf
cmp
mov
inc
xchg
pop
lock
mov
lret
ja
mov
les
cmpsl
xchg
cmpsb
int3
jb
into
mov
pop
loope
inc
mov
sbb
lcall
mov
or
pop
scas
mov
jp
xor
push
push
mov
add
mov
jecxz
lds
mov
dec
ret
mov
iret
push
jmp
xchg
pop
mov
int3
cwtl
xor
xchg
sahf
sbb
cld
xchg
clc
aas
loope
inc
shlb
mov
sbb
sub
cmpsb
mov
lock
dec
xchg
loopne
clc
mov
inc
xchg
dec
inc
outsb
push
fsubl
movsb
add
inc
les
clc
movsl
fstl
cmpsl
xchg
fidivl
or
xchg
ret
jl
jge
cmovae
cmpsl
and
inc
lcall
mov
push
mov
fimull
cmp
xchg
xor
mov
or
sbb
pusha
mov
xor
mov
inc
icebp
xor
js
nop
inc
sub
fbstp
outsl
imul
rorl
int
mov
lods
add
icebp
sub
sti
inc
xor
or
decb
xor
jnp
int
inc
shlb
mov
ret
dec
mov
push
xlat
xor
enter
xor
cmpsb
imul
scas
dec
push
jne
cwtl
xchg
and
inc
add
andb
mov
mov
inc
mov
mov
or
loop
decl
lods
movsb
adc
adcb
cmpsl
xchg
adc
xor
and
push
sub
mov
add
add
xor
jmp
hlt
jp
mov
xor
xchg
aad
jge
cs
mov
fwait
pop
push
popa
jae
mov
aad
outsl
shrl
int3
faddl
mov
xchg
repnz
xor
sub
fistpll
fwait
outsb
push
xor
dec
call
xchg
imul
mov
ljmp
fimuls
jne
div
fs
mov
adc
jns
cmp
mov
pop
cmpsl
cmp
cs
repnz
lods
cmp
sbb
push
or
push
adc
and
or
aam
pop
out
popa
dec
push
mov
fldenv
fisttpll
jecxz
pop
lds
insb
icebp
cmp
add
adc
enter
test
lock
loopne
pushf
inc
lcall
ret
sbb
dec
xor
in
jo
int
mov
xchg
cltd
jne
aaa
fsubrl
js
arpl
outsb
in
xchg
xchg
sahf
sub
daa
lds
inc
mov
sbb
cmp
int
xor
dec
mov
mov
sti
lret
xchg
cmc
mov
adc
sahf
xchg
sub
ja
xlat
sbb
cmp
test
xchg
mov
sbb
push
and
fbstp
jnp
or
lcall
ja
inc
or
gs
jge
cmp
fwait
pusha
sbb
push
mov
dec
rolb
int
pop
fwait
or
jle
stc
push
adc
mov
xchg
fwait
mov
and
or
mov
loope
add
call
xchg
sub
dec
mov
out
pop
fbld
cmp
cli
lahf
mov
in
fiaddl
cmp
les
shlb
test
jge
jmp
movsl
adc
sarl
push
mov
repz
test
insl
dec
scas
mov
xor
fcmovnbe
pop
test
call
pop
sbb
mov
pop
clc
aam
shl
mov
bound
lds
lods
loop
lods
cltd
in
aas
repz
pop
nop
ds
shll
inc
insl
push
loop
dec
lret
xchg
ljmp
imul
pop
test
lahf
mov
cmpsb
sbb
fxch
fcoml
and
or
mov
stc
mov
repz
jle
mulb
fs
stos
mov
out
int3
xchg
cltd
push
shlb
mov
or
sbb
jecxz
movsb
hlt
loope
aas
sbb
sbb
mov
adcb
andb
scas
jmp
lods
pushf
cmp
lods
pop
mov
push
pop
mov
shr
sub
pop
cli
add
mov
jle
xchg
imul
fs
dec
repz
mov
mov
mov
daa
imul
lock
or
pushf
sub
and
adc
lds
sbb
sahf
sub
test
sbb
cmp
shrb
hlt
or
outsb
ret
and
xlat
jne
and
cmpsb
push
xchg
add
sub
adcb
push
mov
outsl
or
pushf
out
mov
and
push
notb
or
push
and
mov
popf
push
into
mov
adc
mov
leave
jae
jo
mov
loop
pop
paddusw
inc
jg
pop
jae
xor
bound
insb
mov
xchg
mov
mov
js
inc
pop
mov
inc
movsb
outsl
scas
or
incb
mov
orl
insb
jecxz
jl
push
sti
pmaxsw
hlt
inc
mulb
mov
fists
jae
adc
push
sub
jecxz
jne
xchg
test
sub
push
repz
inc
push
push
cli
imul
pop
dec
xchg
int
pop
in
aaa
xorb
inc
out
mov
ljmp
rorb
divb
test
add
jmp
outsb
cmp
dec
js
push
add
xchg
add
cmp
xor
add
inc
push
icebp
lahf
cmp
sbb
push
jns
sub
sub
adc
push
mov
lahf
int3
jb
ljmp
popa
and
jns
sbb
lods
sti
or
iret
lods
mov
outsb
icebp
jns
sbb
mov
or
jg
add
iret
xlat
push
xor
ret
add
add
cmp
les
or
in
cmp
and
inc
dec
in
lea
fildl
cmp
push
testb
call
gs
test
ljmp
and
cmp
pop
iret
xor
call
sbb
cmpsl
dec
inc
loop
xor
mov
bound
jae
lret
jnp
or
cltd
push
mov
lds
imul
dec
mov
sarb
jmp
fsin
mov
xchg
arpl
fimull
push
mov
std
scas
adc
sub
jmp
and
xchg
aaa
dec
add
jg
pop
pop
push
jbe
jecxz
inc
imul
add
popf
push
inc
ret
andb
mov
jno
cmp
jecxz
cmp
ret
inc
dec
ds
shl
fidivl
push
sub
push
xchg
jmp
aam
jnp
and
mov
push
inc
add
stc
and
shl
mov
xor
adc
fwait
cs
aad
repnz
lods
call
xchg
test
scas
mov
cmc
xchg
mov
or
shl
inc
rcrl
shll
int3
jo
mov
je
mov
cmp
rorl
xor
dec
mov
jb
fs
in
pop
repz
mov
mov
ljmp
aaa
mov
popf
inc
cwtl
les
push
aaa
sbb
xor
pushf
mov
mul
mov
jle
jg
cs
insb
incl
jmp
cs
ficoms
push
lret
int
cli
mov
adc
test
push
enter
sub
mov
lcall
pop
xchg
jge
ret
insb
movsb
fcoms
cmp
fcomps
out
add
cwtl
and
or
push
lds
mov
test
test
and
cmp
pop
jmp
lret
push
push
mov
sbb
mov
sub
cltd
push
push
jg
outsb
or
xchg
dec
int
cmp
xchg
inc
add
cmpl
repz
std
fistpll
sbb
pop
lahf
push
sti
sar
ds
imul
jbe
orb
in
push
xor
xchg
fdivrl
push
fisttpl
ret
mov
or
push
sahf
je
out
sub
xor
dec
xchg
inc
rcl
adc
pop
inc
push
xchg
adc
fcoms
jo
dec
jl
mov
into
adcl
test
pop
dec
stc
inc
in
adc
push
lahf
inc
pop
xor
daa
push
ret
cmp
adc
call
xchg
or
cmp
push
fistpl
outsw
mov
ss
jle
cmp
pop
cmc
lahf
jns
adc
sbbl
inc
fwait
ret
movsb
shrl
fwait
push
push
mov
mov
adc
inc
popa
shl
mov
mov
idivb
inc
lret
pop
add
xchg
cli
xchg
nop
jo
enter
xlat
sbb
out
inc
icebp
scas
nop
scas
add
fsubs
pop
les
sbb
out
fistpll
xor
mov
add
cld
in
add
ds
aaa
push
xor
stc
maxps
cmc
idivb
cli
push
imul
imul
cmpsl
jmp
pop
dec
cmp
addr16
push
clc
dec
push
insl
mov
xorb
push
jl
outsb
xchg
shrl
push
mov
test
cwtl
pop
std
dec
xor
xor
jle
pop
mov
call
fldcw
in
inc
int3
jnp
mov
outsb
aas
mov
iret
out
popl
mov
dec
push
cmpsb
xchg
sbb
fadds
inc
or
cmp
dec
stos
mov
jl
ss
inc
fcmovne
mov
push
push
shrb
clc
stos
ja
ljmp
pop
jns
cmp
fucom
iret
sbb
mov
pop
push
mov
xchg
xchg
clc
add
fcompl
add
push
mov
out
mov
and
xchg
test
in
inc
pop
and
repnz
loopne
add
mov
scas
mov
fs
mov
insb
icebp
rcll
push
mov
push
xor
adc
or
sub
lcall
andb
push
lods
sbb
int3
fsubrp
dec
cmc
cmpsl
sbb
hlt
lods
cwtl
lret
pop
sub
xchg
pop
int
jae
push
jno
or
loop
stos
cmp
fists
jg
cld
sbb
xchg
xor
in
cwtl
popf
jb
cmp
enter
dec
dec
add
push
test
push
popa
imul
lods
pop
mov
cmp
imul
fwait
in
inc
shrl
clc
pushl
push
sbb
stos
in
add
idiv
dec
lret
xchg
mov
pop
loopne
cmpsb
pusha
mov
dec
mov
pop
lods
push
inc
in
fisubl
es
xor
sub
icebp
lahf
insl
cs
pop
jge
sub
xchg
mov
xlat
jle
ret
lods
popa
and
cmp
add
xor
mov
adc
daa
push
neg
daa
xor
pop
out
mov
repnz
mov
mov
push
in
shrb
imul
push
stos
xor
lods
lahf
sbb
addl
out
pop
cmp
mov
push
sub
ljmp
stos
rorb
fsubs
mov
sbb
or
pmaxsw
sbb
imull
sub
sbb
int3
jbe
sbb
jp
or
out
das
inc
push
scas
pop
orb
jg
push
cmpsl
stos
repnz
pop
js
mov
stos
mov
loope
mov
loopne
lret
or
inc
sbb
mov
xchg
sub
test
je
movsl
jne
mov
push
fdivl
mov
cmpsb
or
ret
adc
lret
gs
mov
test
mov
add
jl
jmp
dec
aas
mov
sarl
or
bound
test
jg
mov
mov
xor
outsl
xchg
cmc
sbbb
jecxz
sti
sti
movsl
stos
out
outsl
jae
cmpsb
fcmovu
in
cli
mov
test
mov
lds
fwait
ret
mov
shl
pop
mov
pop
test
insb
outsl
mov
hlt
add
aam
sbb
push
inc
scas
cmp
rcl
test
jns
mov
addl
adc
push
pop
mov
pop
call
sahf
push
lods
loop
pop
addr16
sarl
and
or
mov
mov
adc
fisubrs
dec
cmpb
es
hlt
stos
cmp
and
add
inc
and
lock
mov
cmp
ret
lret
sbb
test
roll
sub
std
daa
pop
lret
in
filds
pusha
inc
insb
push
mov
sbb
xor
sub
pop
push
int3
sbb
and
es
lea
inc
addb
mov
mov
or
imul
arpl
test
mov
dec
mov
mov
pop
nop
add
movsb
test
mov
sbb
pop
aaa
repnz
sbb
xor
jb
jmp
in
and
mov
cmp
sbb
js
mov
pushf
hlt
movsb
cmpsl
and
int
dec
imul
mov
lock
xor
lret
dec
loope
xchg
cmp
dec
cld
adc
xchg
mov
push
jns
add
insl
cmp
clc
xlat
out
jae
pop
pop
mov
fwait
ds
es
adcb
inc
push
cltd
dec
add
enter
cmp
cmp
or
das
pop
lods
push
popa
fcmovnu
jb
jo
testl
pushf
mov
jbe
inc
xchg
sub
pop
dec
adc
flds
dec
cmp
mov
pop
jae
pop
fimuls
inc
arpl
xchg
loopne
push
pop
xor
leave
pusha
mov
add
loop
out
xchg
mov
pop
loope
out
insb
add
fnstsw
add
loop
xchg
inc
ss
inc
and
lds
jecxz
push
mov
add
xor
aaa
adc
pop
pop
sbb
cmp
mov
mov
loope
ret
hlt
out
pop
pusha
inc
test
and
cmp
ja
pop
lock
inc
popa
hlt
repz
ja
sbb
push
andb
or
mov
jb
in
nop
xchg
or
xchg
pop
imul
add
cmp
or
dec
sbb
stos
clc
sbb
arpl
mov
mov
or
mov
add
add
test
xor
adc
cli
outsb
ja
add
cmp
adc
cltd
push
loopne
mov
push
lahf
jge
inc
mov
lret
push
add
add
pop
cmp
cmp
ds
inc
pop
pusha
mov
js
sub
mov
sahf
jge
cmp
hlt
je
pusha
push
and
aas
mov
jle
imul
xor
add
imul
cld
sub
call
in
fnstcw
movsb
xchg
stc
sbb
in
out
addl
es
filds
mov
fldenv
dec
inc
dec
jnp
sub
test
icebp
xchg
jno
xchg
shrl
inc
xchg
inc
fildl
dec
scas
add
lcall
mov
lret
or
rcrb
loope
sahf
insl
pop
mov
xor
leave
ljmp
js
fmuls
mov
and
frstor
ret
pop
cmpsl
push
xor
inc
add
jb
mov
adc
aas
lock
loope
cmp
in
xorb
das
ss
push
inc
add
mov
lret
jmp
outsl
iret
cwtl
aaa
xchg
xchg
xchg
dec
adc
icebp
push
cmpsb
mov
jns
inc
rorl
mov
mov
insb
std
mov
sub
push
cmp
arpl
daa
dec
test
fsubrl
arpl
push
jg
jbe
mov
mov
jp
fcom
xchg
push
add
dec
fcoms
jmp
loopne
mov
add
jns
sbb
xchg
test
inc
rol
sub
inc
jl
movsb
icebp
mov
loopne
stc
test
loope
scas
pop
mov
mov
cmp
sub
enter
dec
test
mov
aad
and
lahf
aaa
fimull
adc
mov
or
or
add
xor
mov
jno
jle
mov
adc
jp
lahf
cmp
mov
xor
sbb
xor
leave
and
xchg
daa
xchg
push
shll
aad
ds
sub
pop
cmp
push
mov
cmp
sbb
sub
arpl
lods
pop
mov
pop
mov
test
pop
test
or
imul
sahf
cmp
cmp
call
and
lret
and
dec
sarl
je
into
lods
mov
in
movsb
fimull
ss
ret
xchg
lret
ja
xchg
xor
mov
movsb
clc
loope
stos
push
out
test
popf
pop
mov
mov
inc
in
enter
cmpsl
fstps
or
fmull
mov
mov
subb
mov
cs
fidivrs
hlt
xchg
adc
daa
mov
sahf
out
cli
sbb
adc
jmp
int3
mov
sbb
jne
mov
add
subb
mov
and
dec
insl
pop
jle
cli
lret
push
sub
lret
lock
aas
sub
inc
or
push
dec
sub
sub
rorl
mov
fdivl
mov
mov
lods
std
stos
xchg
xchg
loopne
aas
xor
xchg
popf
test
xor
ret
or
adc
das
cmc
sbb
mov
fistpll
arpl
mov
mov
or
and
xchg
popf
adc
pop
push
push
test
push
xchg
mov
negl
add
jbe
push
push
aas
add
mov
push
sbb
insb
ja
mov
mov
jne
jecxz
test
xor
fisubrl
pushf
call
dec
loope
scas
psubsw
imul
out
add
add
les
sti
js
test
mov
fildll
or
sub
pop
fcompl
int
lods
add
push
jmp
outsb
adc
in
scas
dec
xchg
xor
mov
and
pop
jae
int
or
aaa
or
jle
xchg
lret
sub
xchg
adc
jnp
cmp
jbe
fidivrl
in
push
jmp
inc
xor
jno
sbb
mov
pop
movhps
cmp
int3
addr16
pop
popa
jmp
dec
call
and
dec
sbbb
daa
arpl
das
cs
lods
push
ja,pt
into
popa
pop
test
aas
punpckldq
hlt
daa
xor
call
call
les
fisubl
insb
push
ret
fisubl
outsb
jp
rcrb
lods
test
lea
pop
push
loopne
mov
in
lea
xor
xchg
and
loopne
cmp
dec
add
and
jne
test
jns
aad
and
icebp
scas
ud2
mov
inc
mov
xchg
scas
rorb
mov
dec
sbb
adc
adc
lods
jle
imul
orl
jns
clc
push
icebp
xor
iret
sbb
sarl
arpl
mov
xchg
subb
cmp
cmpl
js
fwait
mov
pop
jo
addr16
sbb
inc
pop
aam
test
andl
sbbl
jne
test
mov
push
jmp
add
pop
cwtl
xchg
lcall
inc
pop
mov
fs
pop
int
and
mov
and
sub
sub
repz
lds
imul
sub
sbb
jo
dec
js
or
cwtl
mov
sarl
imul
daa
mov
pop
pop
and
aam
in
enter
icebp
and
push
int3
popa
jle
pop
cmpsb
mov
test
mov
jge
ss
and
ds
jle
scas
mov
or
loop
or
jp
lret
je
or
sub
mov
pop
fs
cmc
xor
sbb
mov
pop
sbb
push
jmp
andb
push
cmp
and
or
add
repz
rclb
xchg
rcll
xchg
fs
imul
test
fisubrs
push
pop
out
sbb
outsl
pop
pop
xor
lret
movl
xchg
or
mov
xchg
pop
jno
adc
lahf
sbb
and
cmpsb
mov
mov
testb
sub
push
and
cmp
jl
cltd
std
jecxz
clc
xchg
or
popa
rclb
lods
xor
mov
xchg
rcrb
out
gs
fcmovnbe
mov
sbb
cmp
test
cmp
js
adc
dec
dec
movl
incl
jno
jae
jb
adc
mov
mov
icebp
dec
fdivp
adc
out
push
xchg
add
xchg
dec
adc
lret
inc
stos
push
pop
pop
mov
push
mov
cmp
fmull
test
jmp
mov
test
sbb
shll
inc
bound
repz
or
es
or
xchg
jp
nop
lds
pop
mov
lods
mov
es
andb
mov
stos
xchg
pop
je
arpl
dec
outsb
and
lock
sbb
xlat
aaa
add
aad
jmp
push
sub
xchg
aad
sti
push
movsl
stos
xor
xor
xor
scas
mov
inc
ljmp
sti
pop
not
jno
and
out
sbb
enter
adc
jne
cmp
lods
xorl
cs
xchg
jno
jl
and
shrl
movsl
adc
push
data16
out
or
mov
mov
xor
stos
nop
mov
sub
sbb
cs
in
inc
sbb
popa
push
xchg
pop
mov
dec
pop
sbb
pop
aad
repz
and
dec
sub
roll
cmpsb
fstl
dec
cltd
stos
or
add
fnstsw
loope
imul
pushf
mov
cmp
pop
in
stos
sbb
sub
mov
negl
cwtl
decl
jno
and
sbb
mov
dec
out
adc
lods
insb
loope
pop
mov
jg
ror
jnp
out
inc
sbb
into
adc
repz
adc
push
fnstenv
push
and
xchg
clc
inc
xchg
and
or
sbb
rep
test
cli
lds
out
daa
mov
mov
fs
xchg
inc
dec
in
xchg
fmull
sbb
data16
cmc
out
in
out
xchg
dec
lods
mov
add
xchg
call
lret
pop
stos
inc
outsb
pop
sbbl
or
insl
mov
pop
push
pop
xchg
aaa
pop
pop
push
lahf
jge
mov
sbb
pop
dec
pop
in
add
mov
sbb
cmp
jb
mov
mull
push
aas
and
mov
sbb
push
jge
mov
mov
divb
into
test
insl
out
sbb
loope
inc
fwait
stc
push
xorl
lods
push
cmp
xchg
mov
fs
leave
push
lret
and
sbb
lcall
mov
mov
mov
push
and
xchg
adc
lcall
and
insb
cltd
aaa
cmpsl
pop
cld
daa
inc
push
imul
aam
int3
fsubp
in
xchg
sub
in
xchg
sub
mov
sub
push
test
push
cmpsl
scas
sete
jno
pop
aam
add
ficompl
jns
push
jbe
or
push
and
ja
lds
push
mov
push
jbe
mov
notb
jno
pushaw
icebp
xchg
mov
popf
sbb
rorb
sbb
xor
add
jmp
push
stc
sub
mov
inc
sub
inc
shl
pop
icebp
repnz
mov
cmp
mov
stos
ljmp
add
arpl
jb
mov
push
insl
pop
push
aas
adc
xchg
pop
add
outsl
ss
pop
div
insb
sub
sub
inc
jne
aas
stos
push
jo
rolb
sbb
push
jo
cltd
adc
inc
mov
js
pushl
out
inc
xchg
push
and
enter
jo
sbb
outsl
aad
sbb
jns
adc
mov
cwtl
pop
mov
xorb
inc
ret
mov
adc
pop
pop
aas
mov
pop
je
inc
stos
clc
shll
loopne
add
dec
outsb
pop
pop
push
or
jmp
jb
push
push
mov
or
sub
jnp
jnp
mov
sbb
cmp
test
mov
pop
mov
push
in
addr16
out
push
lds
out
inc
xchg
mov
sbb
cmc
lcall
fdivrs
mov
jae
int
sbb
cmp
pop
shlb
push
xchg
je
cmp
fucomp
push
jge
fcomps
or
dec
jo
push
inc
dec
inc
cmp
inc
mov
loope
data16
xlat
aaa
xor
add
ja
xor
out
xchg
mov
pop
dec
popf
fs
test
cli
shrb
mov
int
out
ret
cltd
test
mov
mov
pop
xor
dec
fs
lods
sub
lods
ss
pop
xlat
out
push
clc
push
loope
rorl
iret
jb
adc
mov
in
sub
adc
push
cmp
inc
filds
push
shl
mov
aas
push
pusha
ds
dec
sarb
or
xchg
mov
mov
adc
pop
aam
into
adc
xor
fldcw
lret
pop
mov
arpl
mov
xchg
sub
add
daa
daa
xchg
imul
jl
xchg
dec
sub
aas
cmp
dec
outsb
and
push
test
stc
mov
push
ret
or
imul
and
ss
inc
pop
popa
aaa
push
into
cld
ja
imul
in
in
in
jl
mov
mov
popf
bnd
aaa
cmc
fmuls
cvtpi2ps
cmp
orl
mov
rolb
mov
mov
mov
sbb
sbb
add
mov
xchg
mov
loope
sub
out
aaa
xchg
enter
pop
cmp
add
dec
ljmp
loope
adc
in
xor
or
mov
mov
mov
sbb
cmp
es
ja
pushf
mov
sbb
mov
in
sti
stc
loope
lds
dec
test
push
out
jp
adc
push
jae
out
stos
mov
jge
or
lock
out
pop
sti
or
js
mov
pop
insb
or
jbe
insl
scas
mov
clc
pop
dec
fcmovnb
pop
scas
push
loopne
pop
sub
imul
dec
xchg
adc
xor
int
dec
pop
test
adc
jnp
movsl
pop
jl
sub
ret
sub
jp
aaa
adc
rcl
dec
cmpsl
adc
pop
movsb
sbb
mov
arpl
jle
enter
loop
fmull
dec
pop
aaa
shlb
push
mov
mov
repz
sbb
xchg
dec
insl
out
push
sbb
jle
scas
mov
addr16
in
xor
bound
loope
mov
xor
sahf
in
and
jnp
sub
int3
mov
dec
fdivrs
sub
mov
dec
clc
stos
xor
dec
jo
mov
push
orl
xor
and
pop
hlt
fs
mov
inc
sbb
fs
call
xchg
add
subl
cmc
mov
mov
js
push
mov
jmp
mov
pop
xchg
add
in
clc
pop
fistpl
jle
xor
sti
movsl
lds
xchg
lcall
movsb
add
stos
in
shll
sbb
test
std
cvttps2pi
negl
cmpsl
stos
pop
pop
roll
pusha
cmc
lahf
out
clc
xchg
pop
test
dec
in
shlb
ret
pop
int
push
and
sti
mov
pop
mov
insb
loope
mov
out
sub
xchg
gs
xchg
bnd
insl
or
xor
push
xchg
mov
or
mov
in
mov
in
cmc
mov
pop
in
icebp
dec
mov
test
sub
movsl
add
add
mov
xchg
fsubrp
xchg
repnz
out
sarb
outsl
fstps
enter
xor
xlat
dec
or
das
fwait
jmp
pop
mov
mov
movsl
scas
jno
xor
pop
fisubl
push
sbb
gs
inc
mov
sub
mov
mov
pop
push
and
notb
cli
or
xchg
jbe
fisubs
dec
mov
push
push
mov
setbe
sub
enter
aad
xor
loopne
stos
jb
mov
mov
fisubl
pop
dec
rolb
adc
or
dec
movb
push
repnz
and
push
fwait
mov
add
xchg
inc
dec
dec
jb
test
jnp
mov
insl
add
inc
cmpsb
cmpsl
mov
fidivrs
mov
jmp
int3
ret
arpl
xor
js
jnp
push
fildll
mov
push
rcrb
adc
cmpsb
lock
in
in
insl
inc
adc
js
push
sub
lods
mov
jb
into
stc
setae
loopne
repnz
xor
adcb
mov
adc
push
add
pushf
lret
ret
or
cwtl
rorl
popa
mov
pop
test
cmp
stc
and
aad
into
mov
cwtl
jge
mov
cmc
inc
es
testl
and
testb
or
cmc
leave
ja
out
imul
movnti
movsl
push
setg
leave
mov
subl
mov
push
aad
cmc
fwait
test
int
jae
add
ss
pop
and
or
jo
xchg
iret
in
xchg
fcoms
inc
push
and
adc
xchg
in
cmp
jns
inc
jge
adc
push
sub
inc
popl
cli
cltd
add
and
dec
cli
pslld
and
fsts
cld
into
iret
sbb
cltd
sarb
push
fcomp
sbb
jnp
sub
mov
adc
pop
shlb
lods
sub
pop
and
stos
xchg
les
cwtl
mov
jnp
lret
cmp
stos
inc
xchg
negl
aad
sub
dec
stc
lahf
dec
inc
inc
aaa
dec
ret
out
in
xlat
push
pop
cmp
push
jle
stc
push
inc
push
mov
pushl
cwtl
add
sub
cs
divb
add
call
push
inc
sbb
lcall
or
cld
xor
fbstp
ss
cli
stos
out
stc
pop
bound
not
sub
jns
pop
jbe
into
adc
pop
mov
test
sub
shll
cld
cs
add
test
test
or
sbb
mov
rcll
es
cltd
mov
sub
addr16
xchg
scas
mov
lods
inc
lods
test
inc
fcmovbe
inc
test
mov
push
fbld
test
sbb
xor
mov
adc
iret
call
shrl
dec
in
mov
sbb
out
scas
jb
and
cmp
inc
xchg
cmp
pusha
aaa
jae
jno
push
repnz
pop
mov
push
mov
sbb
arpl
iret
mov
push
mov
add
push
hlt
insl
fsubr
xor
adc
ja
xor
pop
lock
aas
insl
add
inc
jne
mov
push
ret
scas
loop
lock
dec
daa
adc
push
lods
cwtl
pop
in
fdivr
and
aaa
out
jge
mov
js
stos
or
adc
das
inc
movsb
pushf
loope
or
flds
loope
push
cmp
imul
push
rcll
dec
mov
test
dec
mov
cmp
out
cs
sbbl
bnd
sbb
xor
add
mov
fstl
cmp
sub
mov
jnp
ss
xor
pop
sti
xchg
adc
sbb
out
add
lds
mov
ficomps
int3
inc
add
movl
stc
pop
call
fsubr
lods
lods
fbstp
xor
aam
outsb
movsl
movsb
inc
enter
jo
outsl
inc
aaa
sbb
repz
dec
repz
bound
pushl
pop
cmp
enter
xchg
cmp
push
popf
imul
mov
repnz
cld
nop
lcall
adcl
in
mov
xchg
xchg
ret
aaa
jg
mov
adc
xchg
mov
xchg
imul
loope
mov
or
sbb
sbb
xor
imul
sbb
xchg
sub
inc
dec
mov
sub
or
fisttpll
sbbb
mov
out
aad
lock
jne
rolb
xchg
or
pop
jmp
or
lret
cmc
jno
inc
jns
mov
add
and
cmp
sahf
sbb
dec
addb
add
adcl
cmp
dec
cmp
or
call
sbb
sarl
popa
lods
clc
icebp
add
or
push
jl
mov
jmp
ljmp
mov
xchg
and
mov
scas
popf
or
popa
mov
insb
stc
dec
jl
imul
jb
cmp
push
out
cwtl
push
fiaddl
push
je
insb
sub
aad
mov
outsl
sti
mov
push
cmp
dec
push
mov
cmp
lret
scas
ret
mov
arpl
clc
fbstp
sub
enter
cs
shll
insb
das
jmp
faddp
push
ljmp
fimuls
add
shll
xorl
mov
sbb
mov
cmpb
or
sub
mov
push
movsl
mov
mov
sarb
out
ficoml
xchg
mov
push
addr16
cmpsb
aaa
es
jp
ja
loope,pn
sub
and
or
sub
rcrb
fdivr
iret
add
sbb
cmp
daa
cmpl
jne
mov
out
jle
fildl
add
jnp
mov
repz
mov
fiaddl
push
fisubs
ret
outsl
push
jo
sbb
int
testl
iret
push
adc
push
or
adc
sbbb
sahf
fisubs
push
jnp
xchg
mov
pop
rcr
mov
out
add
shrl
or
xchg
rclb
jno
push
mov
sar
mov
cmp
stc
cmp
mov
push
add
jne
fcomp
insl
xchg
cmp
fdivr
lret
ss
adc
push
loopne
and
sahf
mov
and
and
aas
stos
jle
leave
fnsave
inc
mov
mov
jle
inc
test
mov
xchg
sahf
mov
and
cmp
mov
lret
pusha
jo
mov
mov
iret
frstor
xor
cmp
xchg
xor
pop
repz
xchg
push
pop
popa
cmp
and
push
jo
mov
out
hlt
outsb
movsb
gs
xchg
int3
mov
je
fstps
adcl
and
int
out
mov
push
mov
sub
inc
and
sub
adc
sbb
mov
mov
leavew
jg
je
push
pop
inc
fwait
lahf
pop
dec
pusha
inc
in
cld
pop
and
call
popa
sbb
je
lea
testb
out
cmp
pushf
dec
mov
jge
mov
jnp
mov
movsl
jmp
bound
mov
and
es
aam
into
out
std
adc
imul
mov
movb
dec
sub
mov
xchg
lcall
sbb
adc
pop
cmp
nop
aam
mov
push
mov
mov
mov
in
js
jbe
dec
xchg
mov
xchg
pop
jbe
dec
fdivs
push
out
adc
rolb
dec
iret
xchg
in
add
jge
push
scas
addr16
or
les
hlt
inc
aad
xor
cli
stos
dec
lock
xchg
and
aam
xor
int
dec
add
imull
je
sub
or
cwtl
mov
lret
loopne
jl
enter
fisubl
mov
ja
sub
call
mov
mov
xlat
aas
jl
in
pop
js
push
or
xchg
inc
out
negl
jns
adc
hlt
push
fdivl
pop
xchg
push
leave
mov
ljmp
dec
pop
push
mov
add
mov
cmp
or
mov
jmp
ds
nop
rcrb
adc
shrb
test
mov
out
movsb
jmp
add
mov
push
js
add
movl
or
fdivrs
ret
inc
mov
jnp
inc
out
cmp
enter
inc
fldt
lret
fwait
mov
sbb
pop
adc
mov
add
bound
out
nop
std
mov
pop
shlb
shll
ret
cmc
or
xor
adc
es
loop
je
std
pop
cmp
aaa
mov
cmp
xchg
nop
sahf
mov
popa
fs
and
sub
popf
mov
mov
lret
xor
cmp
pop
inc
jb
les
dec
es
jg
imul
cli
lret
inc
ret
sarl
addr16
insl
or
lret
and
xchg
xchg
aaa
cmpsb
cmc
fs
ss
add
leave
ss
das
mov
test
dec
fnsave
ds
mov
pushf
test
push
inc
les
pop
cmp
iret
fisttps
fneni(8087
xor
sbb
cwtl
cmp
sbb
cmpsb
mov
sub
pop
xor
and
idivb
test
cltd
sbb
stos
mov
add
xchg
fs
mov
xchg
stos
push
mov
mov
sub
push
scas
shl
dec
jmp
push
and
inc
and
mov
sub
in
xchg
daa
ds
andl
dec
je
fistps
push
lahf
fisubrs
icebp
jns
ljmp
repnz
cmpsb
sub
xchg
mov
outsl
push
pop
push
mov
mov
mov
mov
repz
push
fstl
mov
loope
cbtw
jns
add
jne
repnz
sub
mov
stc
or
movsb
movsb
push
sbb
cmc
jns
or
and
inc
cwtl
je
ret
adc
xor
pop
mov
sbb
and
cmp
out
dec
cmpl
xor
adc
cli
push
sbb
inc
mov
pop
fmull
cmc
cmc
xor
push
jae
fbld
ret
cwtl
call
rcr
leave
out
mov
xchg
add
notb
pushf
adcb
lea
movsl
call
mov
push
scas
icebp
adc
mov
adc
lock
and
cwtl
sub
in
iret
add
mov
jle
test
mov
push
loopne
sub
sbb
jp
stc
inc
xor
pop
inc
inc
data16
iret
dec
stos
scas
sub
pop
orl
stos
rorl
mov
in
or
or
lods
orl
outsl
jmp
jno
cmp
daa
decb
jo
push
xor
mov
ret
sub
pop
pop
ja
adc
mov
in
dec
sub
mov
sarl
out
xor
adcb
xor
xor
or
or
inc
inc
cli
test
cld
sbb
adc
aad
mov
jp
pop
pop
cmp
out
in
jge
insb
out
adc
dec
sbb
cltd
shlb
fisttpll
jbe
pop
ja
loope
push
fiadds
testl
pop
std
loope
scas
xor
cmpl
adc
adc
push
adc
adc
sub
push
orl
lods
xchg
mov
mov
cld
add
loopne
mov
or
and
dec
in
imul
cwtl
pcmpeqb
jne
sahf
lret
scas
mov
mov
pop
mov
dec
std
lds
or
xor
outsl
inc
je
test
inc
push
cli
cmp
loop
push
nop
orl
daa
add
ficompl
or
out
mov
xor
out
pop
push
lahf
cmp
sub
or
jb
mov
addr16
data16
dec
sbb
movsb
pop
xchg
aas
add
dec
insb
inc
inc
mov
movsl
popf
add
or
call
cld
es
cwtl
mov
pop
cmp
stc
jmp
xchg
mov
jg
into
adc
shrb
int3
hlt
bound
inc
je
aas
notl
cmp
pop
in
iret
scas
xchg
movsl
lcall
rorl
les
loopne
lds
and
in
push
insb
mov
shlb
scas
mov
pop
imul
inc
aas
negl
cmp
lret
cmp
stc
ss
lds
lahf
mov
cwtl
lods
pusha
fstps
push
stos
jno
jb
sbb
sub
arpl
mov
inc
xor
add
rcll
push
inc
xor
fwait
or
nop
sbb
imul
sbbb
jmp
pop
sbbl
and
dec
mov
nop
cmp
shlb
add
adc
lea
adc
xor
mov
add
push
andl
mov
ss
dec
mov
xchg
pop
adcb
stc
push
and
aam
sub
adc
jbe
sub
ja
sbb
jns
outsb
cmpsl
out
daa
pushf
xchg
xorl
addb
popa
ret
xchg
cmpsl
sbb
gs
popf
jmp
icebp
push
mov
cmp
xor
adc
lock
dec
pop
das
enter
popf
or
cmp
fcmovnu
add
stos
outsl
xchg
push
push
sbb
and
jle
movsb
hlt
inc
xchg
jbe
dec
cmp
in
test
scas
movsl
pusha
dec
sub
pop
or
and
xchg
call
xchg
inc
setbe
test
pushf
mov
ja
lea
out
into
xchg
push
rcrl
adc
js
mov
xchg
pusha
pop
jb
push
pop
push
sub
adc
add
imul
imul
shr
fidivs
mov
mov
out
cmpsl
notl
xchg
dec
sub
cmp
cmpsl
sub
push
stc
gs
or
inc
adc
mov
ljmp
or
mov
fisttps
sbb
sub
cmp
pop
aad
pop
popl
int
das
hlt
cmpb
jnp
fisttpll
shrl
add
push
jp
cmp
test
dec
or
xchg
cmp
arpl
adc
cs
jg
xchg
call
push
push
in
push
pop
xor
jl
cmp
sub
adc
jno
je
test
pop
pop
jno
fimuls
adc
xor
stos
sub
loopne
adc
add
sbb
mov
jbe
scas
mov
xchg
mov
lds
sahf
leave
xor
repz
xchg
jle
cmp
inc
xchg
bound
jge
xchg
pop
int
inc
mov
popa
cwtl
xlat
dec
sub
push
std
cmp
aam
xlat
mov
sub
jle
cld
sub
sub
or
lock
mov
or
xchg
sahf
xlat
out
inc
out
push
jmp
in
clc
fistpl
jne
scas
out
push
fistpl
cs
jl
mov
stos
out
mov
fidivs
into
jb
push
push
arpl
xor
test
push
leave
test
xor
pop
lods
out
sub
lea
jge
mov
xchg
push
pop
inc
adc
add
pop
int
or
or
ljmp
push
sbb
shll
iret
sbb
mov
pushf
mov
jo
or
sbbl
xchg
in
jne
cmpb
stos
sbb
scas
xchg
push
pop
add
pusha
in
push
js
add
mov
or
mov
and
mov
pop
iret
add
push
out
sahf
add
and
je
popf
xlat
in
sbb
push
cwtl
out
or
mov
xor
jno
xchg
retw
and
add
fnstcw
and
stos
aaa
xor
mov
lahf
push
push
and
ret
jne
insb
fsts
out
iret
jns
or
jnp
and
ja
pop
mov
cli
inc
jns
in
cli
aam
loope
inc
pop
loopne
jp
inc
push
cmpsl
pop
ss
stos
xchg
ja
xor
add
dec
dec
int3
adc
scas
loopne
jb
aam
insl
push
je
ja
push
in
jge
arpl
mov
je
insl
pop
jg
and
outsl
xor
repnz
jecxz
mov
jl
sbb
adc
pop
fldcw
xchg
fcmovu
arpl
xor
inc
in
or
push
mov
mov
pusha
push
addr16
in
std
hlt
mov
sub
in
and
nop
aad
sbb
ja
jecxz
push
ret
push
xchg
js
dec
adc
xchg
loop
adc
lahf
out
sub
pusha
pop
daa
cmp
mov
xchg
pop
ret
jle
dec
sbb
loopne
iret
or
out
leave
inc
in
jl
mov
lods
out
cmp
jno
orl
mov
ficoms
jge
xchg
jae
and
aas
mov
jo
into
bound
lods
js
stos
inc
test
push
fistps
pop
je
je
cs
mov
adc
pop
push
out
out
mov
aad
mov
mov
je
test
mov
sbb
mov
pusha
sbb
aad
mov
pop
mov
add
jle
mov
lods
pop
xchg
pop
nop
mov
cltd
xchg
loope
inc
mov
icebp
and
xchg
lds
push
imul
add
leave
sub
insl
or
jecxz
bound
jo
cmp
aam
cltd
imull
lods
arpl
cmp
adc
and
push
push
popa
xchg
call
fnstsw
daa
push
lods
je
cld
cli
dec
out
ja
sarb
push
popf
fxtract
cmp
repnz
popf
ret
testl
cmp
jmp
enter
sbb
lret
pop
push
rorl
jmp
ret
pusha
add
mov
jno
adc
push
outsb
xchg
call
mov
sti
mov
dec
jno
push
jb
xorb
and
jmp
int
xchg
add
or
icebp
inc
sbb
cwtl
imul
jae
idiv
and
push
in
call
dec
aaa
cmc
popf
mov
movsl
pop
rorb
fists
adc
push
std
dec
test
mov
push
inc
mov
imul
sbb
cwtl
popa
shrb
fwait
dec
or
cmp
int3
inc
and
push
cmp
and
sbb
jge
add
dec
mov
jns
xorb
cmp
sub
jge
addr16
dec
xchg
aad
insb
scas
or
push
ret
jecxz
scas
data16
cs
pop
decl
mov
gs
movsb
ret
shrb
inc
adc
and
imul
or
cmp
outsb
add
out
mov
jmp
mov
jae
xor
jns
jg
ja
ret
into
mov
xchg
loope
mov
inc
sbb
mov
int
bound
or
mov
test
cs
rcr
and
jns
adc
xchg
or
popf
inc
add
push
stos
mov
push
cmp
cld
ret
leave
clc
testb
jle
cwtl
test
outsb
xor
fwait
ret
fbstp
clc
outsb
sar
bound
add
insl
call
jbe
pusha
imul
cmp
popf
scas
leave
fs
xor
mov
out
mov
mov
cmp
jbe
jb
mov
dec
pop
lret
pop
js
outsl
je
int3
mov
decl
inc
add
aaa
cltd
cwtl
push
sub
sbb
shlb
sub
fsubrl
lock
sub
int3
xchg
lea
fbld
inc
push
push
or
arpl
inc
int
cmp
cmpsl
adc
shrb
loope
mov
imul
mov
sbb
mov
es
cmp
pop
dec
push
fst
stc
mov
jb
and
jbe
std
mov
push
xor
jbe,pn
mov
test
dec
jb
sub
mov
cmp
rclb
jmp
pop
hlt
mov
ret
call
xlat
dec
cwtl
dec
pushf
jno
fdivs
dec
mov
jmp
adc
xor
popa
cmpsl
movsl
xor
stos
sbb
pop
pop
xor
jbe
scas
rcr
lcall
mov
nop
push
xor
and
add
aaa
dec
xor
lods
outsl
pop
xchg
js
xchg
mov
pop
cmp
daa
pushf
cmp
mov
loop
popf
xor
pop
lahf
dec
add
and
adc
inc
xchg
shr
in
inc
test
ret
into
je
cmpsb
pop
adc
sub
mov
xor
out
outsb
sar
or
shll
and
push
mov
rep
push
xchg
adcl
jmp
fbld
add
adc
xchg
inc
scas
test
xchg
ja
rcl
jge
mov
dec
into
jp
xchg
ficomps
and
jmp
sahf
rcrl
std
in
inc
cmp
jl
xorb
adc
add
test
xor
adc
aaa
fdivs
mov
mov
adc
dec
cltd
push
cmc
jae
or
sahf
pop
dec
lods
add
lods
mov
cmp
arpl
and
sbb
sbb
mov
clc
jge
jg
out
and
into
jle
add
jecxz
jp
inc
fists
pop
inc
pusha
sbbb
lds
adc
fistps
push
gs
lret
or
pop
hlt
inc
push
aad
xor
cmpsl
pop
ffreep
icebp
imul
enter
fimuls
mov
push
mov
mov
call
int
rcrb
out
pop
fidivl
jnp
push
test
dec
xor
jbe
or
jp
sub
push
dec
out
cmpsb
sbb
ljmp
cmpsl
inc
and
adc
mov
fstpt
and
push
push
not
or
mov
jnp
lds
aaa
insb
push
jp
jns
xor
dec
mov
jge
imul
push
movl
or
push
mov
fiadds
pushf
icebp
ljmp
out
adc
lret
test
adc
add
sbb
inc
or
dec
xor
sbb
or
lret
push
in
lret
dec
inc
push
add
mov
cmpb
cmp
je
push
fstpt
stos
xor
dec
or
push
pushf
or
sbb
das
cmp
addr16
mov
movsb
stos
imul
clc
or
lret
shlb
sbb
outsl
cmp
cmp
xchg
jno
jae
mov
add
pop
or
cmpsb
stos
push
mov
xchg
mov
sarl
test
xchg
mov
bound
xor
mov
movsb
push
out
dec
pop
stos
fucomip
xchg
push
mov
jge
cmp
xchg
inc
sti
inc
and
sarl
imul
mov
pop
jo
movsb
mov
xchg
xchg
aaa
or
inc
dec
adc
inc
loop
andb
pop
aam
push
dec
pop
xlat
stc
cli
mov
ret
lods
mov
rcl
in
xor
test
inc
lret
dec
jge
testb
push
mov
pop
cmp
jge
xor
and
sbb
inc
push
xor
movsl
inc
mov
and
ds
inc
test
icebp
test
cmpsb
aaa
sti
mov
mov
sub
pop
push
or
ja
sarl
mov
js
mov
ljmp
xor
lods
sbb
stos
cmp
pop
loopne
lods
pslld
sbb
imul
push
xor
movsl
lea
rcl
fisubs
lcall
adc
jne
mov
into
push
mov
xor
push
subb
xchg
add
and
sti
in
and
lret
cli
iretw
outsl
repnz
sub
adc
imull
push
add
jns
mov
push
xchg
cs
cmp
roll
addr16
inc
aas
aam
fwait
ret
ficomps
and
sahf
ljmp
jmp
mov
and
push
jb
pop
push
mov
movsb
xchg
cmp
nop
push
sbb
mov
dec
sbbb
add
in
mov
add
mov
test
or
popa
popa
daa
clc
push
jns
mov
inc
testl
jb
ljmp
dec
mov
sbb
stc
sbb
je
adc
pop
mov
movsl
xlat
cmp
inc
pop
scas
je
es
sub
stos
not
and
js,pt
rcrl
stc
in
push
mov
out
das
stos
sub
jl
clc
cmp
inc
push
inc
jbe
cli
ljmp
sbb
or
sbb
fsubrl
test
fcoms
xchg
icebp
adc
movb
cltd
fstpt
pushf
divb
cld
mov
sub
fsubrs
mov
mov
icebp
jnp
loop
xchg
xchg
pop
jle
cmp
inc
cwtl
test
jl
test
test
mov
lea
ja
push
xor
cmp
inc
xlat
repnz
push
ss
loope
inc
int
out
pop
and
shl
aam
in
xchg
adc
ljmp
add
lods
adc
call
sub
shrb
lahf
add
add
pushf
test
push
out
mov
push
lcall
insl
lds
adc
lret
jge
jge
test
push
clc
sbb
fstps
mov
xor
or
pop
push
dec
and
jp
mov
add
jnp
sub
xchg
add
mov
dec
pop
shrb
stos
jmp
xor
in
sbb
mov
jbe
pop
jb
out
ljmp
mov
cmc
test
cwtl
inc
je
repz
out
jae
jae
popa
cmp
imul
cmp
push
inc
repz
loop
fcomps
popf
shr
jge
mov
iret
adc
or
into
jbe
adc
jl
xchg
mov
push
add
cs
inc
out
xor
in
ret
aas
pusha
leave
push
cmp
movsl
adc
nop
jo
adc
or
dec
xchg
es
xchg
lea
fisttpl
push
inc
inc
outsl
in
xor
sub
cmp
je
pop
in
aas
je
outsl
test
xchg
adc
adc
push
pushf
mov
push
jmp
arpl
lock
mov
add
sbb
push
lock
dec
jns
xlat
aam
xchg
sbb
pushf
jecxz
xor
jns
lret
fidivrl
cmpsb
jae
repz
jno
mov
outsb
ret
out
loopne
cmp
repnz
pop
mov
mov
cmp
out
fimuls
scas
js
call
bound
and
pop
pop
aas
pop
mov
jb
arpl
adc
pop
add
scas
push
push
aaa
mov
dec
pop
pop
and
rol
in
stos
cmpsb
xor
or
test
mov
in
adc
push
ja
push
test
lret
push
jge
push
aad
and
loope
addr16
mov
fisubrl
or
aad
addl
idiv
lret
cltd
cmpsl
icebp
jmp
mull
scas
lods
xchg
jecxz
mov
in
cltd
inc
enter
lock
sbb
fwait
and
mov
lret
jo
aas
xor
inc
xchg
insl
aas
jg
daa
les
mov
pop
lea
mov
rorb
out
incb
mov
and
outsl
xchg
jns
loope
movsl
mov
cmpsl
mov
insl
ss
shld
rcr
jb
xchg
xor
scas
fisttps
dec
cli
adc
hlt
sub
jns
xchg
mov
pop
dec
ficoms
jmp
sbb
sub
stos
inc
jle
ja
sub
push
jae
add
xchg
cmp
pop
movsb
xchg
sbb
clc
mov
push
mov
clc
int
sbb
dec
je
xor
cmc
arpl
xor
out
push
insb
lods
xor
sbb
xlat
cs
pop
add
mov
mov
jo
mov
inc
sbb
xchg
test
xchg
pusha
adc
xchg
adc
cli
xor
out
sub
and
mov
push
movzbl
add
jne
pop
dec
ds
orl
xor
dec
mov
jo
xchg
mov
inc
inc
lcall
enter
xor
pop
imul
movsl
mov
push
mov
adc
rcr
imul
push
clc
int3
dec
mov
mov
mov
loope
negl
sbb
add
data16
cmp
sub
push
popa
jae
leave
push
clc
xchg
push
push
ficomps
negb
jge
imul
pminub
arpl
and
mov
jecxz
pusha
mov
pushf
rorb
dec
xor
pop
mov
mov
clc
mov
rcrl
mul
xor
mov
aam
adc
lock
popl
or
outsb
xor
sahf
cli
and
jae
mov
decl
rolb
lea
aaa
loope
mov
ret
xchg
into
push
cmp
mov
outsl
sbb
insl
shrb
aam
lods
and
adc
fidivs
add
jp
stc
xchg
mov
cmovle
pop
enter
mov
xor
into
bound
loopne
lret
sar
sbb
out
call
bound
cmp
pop
ret
imul
pusha
cvtdq2pd
dec
push
mov
jecxz
in
mov
mov
jo
mov
adc
sti
out
ljmp
jmp
vpand
dec
filds
jb
dec
push
cld
push
sub
outsl
push
mov
adc
pop
or
dec
mov
and
mov
and
es
int
pop
adc
xchg
bswap
and
movsl
and
cmc
loope
mov
or
bound
push
jo
shll
das
adc
pop
imulb
arpl
sbb
into
jmp
pushf
or
repz
inc
or
cmp
mov
or
movsb
sbb
inc
add
xchg
inc
xor
dec
int
xchg
icebp
xor
call
fsubrl
sbb
cs
xor
cmc
testl
mov
sub
add
fsubs
idivb
icebp
stc
xor
mov
pusha
xchg
adc
imul
sti
bound
jae
lret
add
insb
lock
mov
add
sahf
mov
cwtl
mov
sbb
mov
add
inc
in
mov
es
jb
cli
adc
fcomip
mov
mov
dec
jbe
adc
and
cli
cli
or
mov
pop
dec
pushf
jns
lock
xor
repz
cmp
mov
jecxz
push
insl
das
loope
xchg
mov
sub
sbb
stos
sarb
sbb
fldenv
xchg
je
mov
sti
shr
jl
mov
xchg
mov
or
inc
setle
mov
mov
jnp
shl
jg,pt
mov
and
mov
and
ljmp
mov
inc
xchg
xchg
cmpsl
je
dec
int
mov
fdivs
insb
mov
lds
add
sbb
push
out
lcall
mov
dec
fwait
fcomp
pop
or
inc
xor
pop
call
lea
shlb
imul
mov
mov
mov
enter
cmp
sbbb
dec
push
dec
faddl
adc
pop
mov
mov
cmp
nop
or
push
add
lods
mov
aas
push
sbbb
adc
jle
movsb
loopne
push
mov
mov
adc
lcall
ja
popf
mov
pop
mov
add
addr16
fmull
add
roll
dec
idivl
jae
or
xor
jbe
lcall
cmpsb
inc
jmp
ficoml
jo
in
add
gs
aam
ret
dec
loope
jle
fistpll
jb
and
push
jno
pop
lods
xchg
mov
outsb
bound
mov
ds
mov
mov
les
mov
stc
push
adc
addl
lock
fcmove
push
idivl
fnsave
inc
sbb
divb
inc
aas
scas
arpl
mov
adc
xchg
jl
adc
in
xchg
addr16
sub
pushf
dec
jp
mov
add
loope
lcall
xchg
dec
cmp
ds
jmp
ja
addb
cmpsb
sbb
out
mov
xchg
movsb
push
sarb
stos
js
inc
test
sahf
pop
loopne
nop
pushf
out
fiadds
ret
jne
gs
xor
xchg
int
rclb
fld
add
sub
or
or
jbe
arpl
out
imul
hlt
aad
pop
enter
sbb
xchg
fdivl
scas
xlat
and
mov
add
jg
adc
jecxz
xor
lea
or
dec
fcoml
iret
mov
push
inc
out
xchg
jns
addb
gs
or
mov
sub
into
adc
mov
sbb
js
lcall
inc
fs
fcmovnb
cmpsl
stc
pop
pop
fucomip
jge
out
dec
pop
outsl
inc
rcrb
pop
or
aam
outsl
jo
push
sahf
or
rcrl
js
adc
mov
movsl
movsb
cltd
out
mov
scas
ja
push
push
or
lret
sub
jle
mov
std
mov
add
xchg
call
jb
mov
mov
push
outsl
dec
clc
or
movsb
addr16
sbb
stos
xchg
sbbl
das
fdivrl
mov
je
pop
shrb
or
leave
loopne
jae
dec
mov
mov
sarb
or
insb
sbb
sbb
push
push
inc
add
xchg
sbb
pop
sbb
sbb
imul
mov
faddp
bound
and
sbb
mov
mov
int
icebp
inc
divl
xor
pop
fstps
mov
mov
ror
shrl
push
add
test
pusha
cmpsl
pop
pxor
dec
jg
lock
setp
rcll
mov
jae
mov
cltd
pop
ret
add
sar
pushf
or
sub
mov
leave
icebp
cmp
test
loop
and
std
pop
cwtl
loope
ljmp
jns
add
jp
inc
xor
inc
sti
add
mov
and
pop
mov
mov
lea
sti
fstpl
outsb
mov
lcall
daa
int
hlt
enter
ja
fnstenv
pop
addl
and
jno
mov
push
mov
fadds
or
enter
push
pop
bound
jp
loopne
inc
or
mov
outsb
sub
add
and
imul
jnp
dec
pop
stos
sbb
out
mov
cld
sbb
jnp
clc
jae
cmc
inc
pusha
fs
lcall
mov
lret
or
test
roll
ret
adc
mov
inc
push
enter
mov
icebp
or
bound
adc
xchg
sbb
jbe
add
shl
xchg
popf
fstpl
fimuls
arpl
in
insb
xor
lret
in
cmp
jecxz
inc
loopne,pt
dec
es
sub
rorl
cwtl
iret
sbb
ds
inc
adc
mov
add
scas
fdivrs
mov
jne
jae
out
test
dec
fmull
inc
mov
pop
out
lock
xlat
jae
stos
xchg
inc
addr16
mov
pop
mov
add
movsb
mov
leave
rcl
mov
inc
lea
add
call
loop
out
xchg
lcall
adc
mov
and
in
ja
daa
cmp
add
lret
popa
and
mov
sub
dec
adc
mov
test
popf
and
ficompl
and
ljmp
insb
rcrl
xchg
fnsave
fimull
adc
pop
sub
scas
or
cld
xlat
push
push
pop
adc
cmpsb
push
dec
pop
movsb
xchg
cmp
xor
loopne
gs
ja
fdivs
xor
fmuls
or
aad
add
jb
cmp
fs
not
lret
jo
lcall
mov
mov
pause
sahf
dec
push
out
jmp
insb
cltd
ljmp
repz
divb
sbb
jl
and
mov
imul
push
mov
xchg
aaa
mov
cmpsb
sbb
jo
ja
xchg
std
mov
mov
stos
xchg
hlt
xorb
int3
inc
loopne
movsl
push
dec
cmp
ret
inc
pusha
cld
push
test
loope
lods
rcrl
xchg
fwait
jecxz
mov
and
lods
mov
sbb
jle
or
or
arpl
inc
jecxz
sbb
rcll
dec
and
out
sarb
mov
mov
mov
mov
jecxz
sub
adc
inc
hlt
push
out
test
arpl
call
fwait
out
and
pop
sub
pop
movsl
jne
mov
push
hlt
sub
js
call
mov
and
inc
cli
dec
push
sbb
xchg
mov
dec
xchg
les
push
and
ljmp
sbb
test
adc
mov
push
sarb
dec
cmp
jp
insl
insb
pop
call
lahf
popf
pusha
or
push
pop
xlat
out
hlt
les
or
and
ljmp
in
sbb
dec
or
orb
push
inc
push
out
shll
inc
iret
ss
jmp
add
ret
imul
and
in
je
cmp
outsl
out
jge
sub
cmp
out
inc
sbb
inc
nop
mov
adc
push
adc
mov
aaa
jecxz
je
sbb
mov
push
test
cli
mov
lret
in
sbb
inc
sbb
cmpb
sbb
or
xchg
or
add
mov
adc
push
mov
inc
sbb
jae
rol
imul
cmp
int3
lret
add
sub
pop
pop
mov
mov
es
dec
mov
loope
push
ja
xchg
xchg
pop
sbbl
inc
lret
inc
movsb
clc
mov
or
cmpsl
or
inc
mov
fcompl
add
popa
shl
dec
jmp
xchg
in
push
repz
iret
icebp
shl
in
dec
out
inc
add
cmp
push
fisubs
fwait
loop
push
jns
jle
xchg
scas
inc
jne
pop
lret
sbb
mulb
and
andl
xor
mov
sbb
addr16
adc
sub
xchg
sahf
aas
dec
out
orl
int3
push
dec
aam
xchg
jmp
dec
test
sti
xchg
push
cltd
fcomip
ljmp
adc
adc
dec
xchg
test
mov
cmpsb
adc
int3
lods
gs
sahf
rolb
test
int3
xchg
pop
mov
adc
sub
lea
sub
sti
sub
jno
pop
fiaddl
cmc
fildl
stos
clc
insl
xor
insl
sbb
in
or
test
fbld
testb
push
cmp
call
push
xchg
fnstcw
sti
inc
dec
aam
xchg
jle
mov
aas
fdivl
icebp
dec
loopne
test
les
leave
jns
je
push
stos
loop
lret
jno
movsb
aas
cmp
mov
pop
add
cld
ret
loopne
mov
in
xchg
lds
ss
jno
jns
sahf
fs
jno
xor
dec
adc
mov
out
testb
fdecstp
in
xor
out
xchg
outsl
push
dec
ljmp
faddl
hlt
int3
xchg
sbb
cmp
add
les
fisubrl
push
hlt
bound
xor
push
xor
xchg
shll
sahf
hlt
ret
push
sbb
shl
inc
iret
inc
cld
enter
mov
mov
fs
into
add
imul
ret
fsubs
dec
mov
cmpsb
stc
cmp
cmp
ss
scas
sub
int
jnp
fsin
dec
add
xchg
xor
lret
hlt
imul
pop
push
movsl
adc
les
jb
mov
clc
aas
imul
mov
imul
mov
jnp
es
inc
insb
js
fimull
mov
mov
xor
mov
add
push
add
and
int
js
and
dec
sbb
sahf
je
xchg
aaa
in
test
xchg
je
dec
out
mov
push
ds
adc
das
lret
pop
mov
push
adc
xchg
lret
je
cmp
repz
pop
outsb
das
pop
je
pop
and
sahf
leave
in
fistpl
xor
dec
daa
repz
in
dec
push
gs
cmp
aas
push
cmp
push
pop
xor
outsl
pop
mov
sti
push
ds
xor
xchg
mov
mov
or
jmp
and
pusha
fiaddl
iret
das
outsb
fidivs
movsl
lcall
insb
ss
cltd
ret
inc
mov
rcrb
dec
push
mov
mov
scas
cmp
push
stc
push
pop
adc
lock
sbb
imul
mov
cmp
push
sbb
push
cmc
sti
test
mov
lock
and
push
jl
adc
xchg
in
pusha
mov
out
pushf
sbb
in
test
pusha
inc
cli
push
pop
lock
cmp
aam
xor
and
setl
into
fs
test
sub
incl
andb
mov
push
lahf
imul
inc
ljmp
lahf
int
pop
mov
cmc
mov
mov
sub
pushf
in
pop
movsl
loopne
shl
mov
pop
sbb
sbb
cltd
pop
and
jle
mov
fwait
jge
or
add
arpl
jl
sub
ss
dec
fnsave
mov
jge
mov
mov
outsb
dec
sbb
arpl
dec
pop
or
insb
daa
xchg
mov
out
loop
mov
rorl
sbb
iret
cmp
add
adc
xchg
dec
and
fs
cmp
mov
filds
mov
movsb
ret
ja
xchg
sbb
mov
loop
and
xchg
test
cld
or
pop
out
aas
xchg
aam
pop
mov
sbb
sbb
ror
aam
push
sbb
and
sub
fsubs
mov
mov
mov
ret
cmp
faddl
arpl
int3
xlat
or
and
inc
fidivs
jae
lcall
xor
lds
xchg
xchg
idivb
mov
push
and
pop
imul
cmp
pusha
pop
pop
out
dec
dec
lea
fs
jno
lcall
dec
mov
sub
outsb
out
mov
adc
mov
xchg
sbb
test
test
pop
jno
ja
int
scas
cmp
cli
mov
mov
push
out
and
pause
cmp
dec
out
inc
rdtsc
xchg
mov
jl
pop
mov
sub
sbb
push
cmpl
xor
dec
cld
roll
pop
cmp
mov
std
pushf
in
adc
out
mov
rorl
in
outsb
xlat
fscale
xor
push
adc
cltd
clc
imul
fdivr
aaa
mov
sbb
inc
sbb
add
or
or
pop
push
sbb
and
subl
xor
gs
or
push
push
ror
das
jo
dec
push
imul
jp
dec
sub
subb
push
push
add
insl
ficoms
jbe
in
outsb
sbb
mov
ljmp
or
jle
je
dec
idivl
push
aad
xchg
add
imul
push
lock
mov
inc
jb
clc
and
dec
ljmp
xchg
cmpsl
and
mov
xchg
aas
inc
xor
leave
mov
or
call
in
mov
sbb
movsb
push
mov
mov
and
movsl
sahf
dec
mov
mov
and
incl
adc
aas
add
leave
in
cltd
fs
dec
ljmp
out
out
pop
adcl
hlt
andl
movsl
mov
nop
xor
mov
and
xchg
dec
rcr
scas
xor
mov
mov
lods
sub
inc
cwtl
repz
mov
push
and
fidivrs
stos
mov
inc
pop
jbe
js
cmc
dec
aad
daa
test
jecxz
std
fmull
inc
pop
cmp
xchg
sbbl
inc
jns
or
sbb
or
sbb
lcall
mov
xor
xchg
aaa
leave
ret
lret
rorl
jge
sub
cs
nop
add
aam
push
mov
dec
int3
lret
or
iret
mov
xor
popf
add
push
pop
push
xchg
mov
inc
cmc
loop
adc
xchg
cmp
lcall
inc
loopne
out
daa
insl
lods
sti
jmp
test
loope
test
ja
mov
or
jle
adc
mov
jnp
hlt
js
xchg
in
xchg
and
cltd
or
cmp
dec
outsb
cmp
lahf
adc
rol
pop
dec
pop
mov
xchg
pop
push
lea
xor
push
pop
push
filds
or
adc
mov
insb
push
jne
jbe
outsb
out
dec
xlat
pushf
push
neg
test
pushf
or
xor
push
jbe
xchg
jbe
push
cli
shll
in
lds
cmpsl
pop
rcrl
inc
sub
jo
mov
xchg
lret
cltd
cmp
pop
std
out
mov
jge
mov
inc
mov
pop
fisttpll
cmpsb
repnz
mov
negl
jl
jno
jge
lcall
arpl
mov
inc
and
in
repz
push
fwait
mov
rclb
dec
add
or
das
shlb
shll
js
or
mov
jbe
call
cmp
arpl
je
test
push
mov
cmp
mov
pop
sub
ja
out
sub
sub
pushf
lods
outsl
mov
dec
jmp
test
push
imul
test
cmc
pop
xchg
mov
and
into
add
xchg
mov
daa
push
xchg
pop
stos
idivb
or
push
divl
and
sbb
rorb
psrlq
fwait
jb
scas
aas
sti
loop
sbb
or
inc
aad
lcall
lahf
sub
repz
pop
push
mov
adc
lret
or
jb
xchg
push
test
dec
in
aad
dec
push
or
out
rcr
gs
cmp
pop
cmc
xchg
je
fcmovnbe
lods
mov
fildll
push
leave
inc
insb
testl
outsb
mov
add
test
cmpsb
roll
cmp
fldt
mov
dec
cmp
push
add
cmp
enter
sahf
xchg
sbb
in
inc
pop
aas
cwtl
inc
aas
mov
jbe
scas
cld
mov
add
jnp
xor
pop
test
int3
shll
xchg
fildll
mov
aam
jp
pop
dec
lret
mov
cmp
xor
add
or
leave
mov
in
cmp
add
hlt
adcl
pop
mov
daa
sahf
adc
xchg
in
fmull
inc
leave
rclb
jne
adc
jecxz
insl
push
pushf
lahf
repnz
xor
pop
sarl
xchg
fnsave
pop
scas
int
inc
sar
fildl
fwait
mov
dec
sbb
pop
mov
call
lahf
and
xor
dec
cmp
mov
sbb
int
aaa
je
icebp
stc
pop
pop
mov
cwtl
addr16
pop
fnstcw
rcll
pop
push
jg
cmp
jns
and
cmpl
ljmp
and
sbb
in
jns
mov
mov
rcrb
add
sbb
push
jbe
sbb
add
adc
xor
dec
adc
mov
cmp
cmp
daa
pop
lret
call
insl
lret
xor
test
adc
push
jp
push
mov
sbb
inc
xchg
xor
jae
sbb
mov
rorl
jne
push
push
aaa
inc
push
rcrl
mov
mov
xchg
inc
push
lea
xchg
icebp
pusha
int3
or
in
ret
push
xchg
xchg
dec
mov
pop
add
dec
push
sahf
xchg
mov
sub
adc
adc
js
sbb
xchg
mov
pop
xchg
mov
pop
into
xlat
subl
pop
sbb
addr16
repz
loope
scas
test
xchg
mov
mov
dec
pop
mov
sub
in
dec
les
xor
icebp
sarl
pop
sbb
jge
sarl
lock
dec
push
cmp
pop
push
stc
push
pop
pop
sti
mov
and
pop
pop
repz
into
cmp
out
jno
int3
fisubrl
cmp
mov
mov
shufps
sub
fnstenv
mov
push
lock
push
test
and
inc
pop
add
xor
cwtl
or
mov
push
or
and
imul
mov
mov
mov
scas
fldt
dec
mov
call
scas
imul
lret
xchg
jp
or
movsb
push
aad
mov
and
sbb
jg
lea
jmp
loop
dec
cmp
ljmp
testl
aam
test
jmp
shrl
mov
cs
cmp
sbb
decb
mov
aas
jbe
in
mov
les
aad
sbb
dec
jne
sbb
xchg
inc
mov
popw
xchg
outsb
lods
test
dec
out
imul
dec
dec
pop
ror
jno
je
imul
stos
push
std
mov
mov
xor
test
mov
fnsave
xor
lret
mov
dec
in
mov
es
push
dec
sub
outsb
je
mov
mov
lea
cld
out
mov
mov
mov
cmp
xchg
aas
inc
stos
cwtl
sahf
loopne
or
fs
sub
sub
mov
jbe
push
popf
ret
faddl
sbb
dec
ljmp
ficomps
pop
adcl
push
pop
mov
lock
rcl
js
int3
shl
les
cld
imul
ljmp
cmpb
and
jnp
in
cmpb
in
cmpsl
iret
movsb
adc
sub
mov
stos
xchg
push
popf
jmp
fbld
jo
lahf
mov
jae
loopne
clc
dec
dec
inc
mov
cwtl
sti
popf
loopne
fwait
imul
es
imul
and
mov
imul
loopne
pushf
add
mov
cmp
dec
imul
pop
sub
sub
push
fwait
scas
jmp
jb
mov
jo
adc
jb
xchg
and
xor
push
sub
shlb
inc
call
stc
xor
sbb
or
jge
and
ret
cs
repz
test
dec
loop
push
lds
add
xchg
xchg
jb
mov
xor
test
fmuls
add
dec
pop
dec
mov
insb
scas
test
mov
mov
imul
jle
dec
idivl
xlat
stos
xor
push
mov
sub
aaa
lcall
stc
subps
pop
sub
or
lods
lahf
dec
mov
inc
hlt
jno
mov
sbb
xchg
add
sub
mov
les
xchg
or
mov
pop
xchg
or
stos
or
add
cmc
xor
cmc
mov
mov
adc
test
jp
es
adc
mov
lcall
mov
push
into
ret
xor
dec
call
rolb
cbtw
ljmp
jbe
cld
in
jp
sub
out
insl
dec
dec
popf
movsl
movsl
jne
lock
aam
and
sbbl
filds
sbbb
stos
sahf
cmp
pop
in
or
xor
and
sub
rorb
sbb
mov
sbb
lock
arpl
dec
mov
xor
cmp
pand
in
sub
pop
lds
add
adc
repz
lret
jnp
cltd
mov
jl
dec
jg
pop
clc
shr
fwait
and
cltd
dec
push
popf
addb
add
add
out
mov
add
out
sahf
incw
outsl
xor
insb
stos
adc
pop
aaa
ret
cmp
int
dec
pop
sbb
gs
inc
and
lret
dec
cmp
in
fdivr
mov
into
mov
dec
pop
outsb
xchg
dec
lret
loope
sarl
lret
sbb
push
xor
and
xchg
sbb
sub
xor
leave
je
shll
das
imul
lret
jecxz
push
aaa
jnp
cld
jecxz
xor
mov
mov
mov
pop
cmp
mov
shl
xchg
xchg
pop
lret
insl
pop
scas
pop
mov
sub
daa
je
xchg
rcr
mov
mov
call
outsl
push
cmp
sbb
out
and
sub
pop
outsb
sahf
arpl
mov
mov
sar
fldl
iret
js
xor
aaa
pusha
popf
das
test
adc
sub
mov
sbb
sahf
cmp
mov
inc
mov
lret
cmp
mov
sbb
pusha
lods
or
xchg
daa
fbld
adc
imul
popl
fbstp
inc
lahf
cld
add
sbb
pop
sbb
add
push
mov
adc
mov
and
fadd
or
add
push
imulb
and
icebp
and
bound
xorb
movsb
mov
test
outsb
xlat
cmpsb
jg
pop
jp
xchg
sub
inc
push
enter
loop
inc
subl
mov
xchg
movsb
or
fs
pusha
clc
xchg
jns
xor
xchg
mov
adc
out
imul
es
cmc
insb
and
stc
aad
pop
cld
mov
push
divb
stos
adc
mov
loop
bound
push
or
xchg
mov
subb
push
clc
mov
mov
xchg
push
and
ljmp
inc
outsl
aad
insb
sahf
jne
inc
scas
mov
sub
jle
imul
push
imul
and
cmp
mov
lods
lods
insl
fldcw
pop
inc
xor
and
cli
push
fdivr
mov
add
test
push
xor
icebp
shrl
sub
adc
jne
imul
nop
add
push
mov
je
in
scas
add
jg
jb
lret
sbb
push
test
imul
cld
jp
mov
aam
xchg
push
loop
xchg
in
add
fld
dec
in
shlb
pop
popa
repnz
sub
fs
std
push
xor
scas
das
add
dec
jp
sbb
mov
aaa
outsl
push
and
imul
jns
jno
sarl
jge
mov
push
andl
mov
add
pop
sbb
and
xchg
jl
or
hlt
or
xlat
add
rcrl
inc
push
arpl
out
dec
out
cltd
insb
int
pop
cmp
leave
sbb
push
idivb
test
decb
sub
pop
add
arpl
sbb
adc
inc
pop
fldenv
rcl
in
stos
push
icebp
inc
cltd
mov
out
aaa
sti
aas
test
test
rolb
jns
add
scas
aam
out
fdivs
fmull
mov
into
cli
shr
repz
testb
mov
xchg
cmp
int3
bound
adc
adc
sub
cld
fistpll
pushf
mov
pusha
mov
pop
push
sbb
popf
mov
push
fs
data16
xor
push
scas
or
cmc
lds
scas
scas
lea
mov
xor
int
popa
lahf
mov
enter
push
push
es
fcompl
ds
or
add
sbb
stc
out
jo
movsl
in
imul
pop
dec
aaa
imul
roll
and
pop
fwait
jo
adc
xlat
movl
mov
sub
xor
std
mov
and
lock
std
xor
hlt
loop
pop
mov
cld
mov
into
lea
aad
in
popa
push
mov
dec
in
mov
sub
stc
cmp
enter
sti
fs
inc
xor
inc
pop
or
int
fbstp
mov
adc
mov
in
push
call
lahf
adc
xor
data16
lret
sar
cwtl
mov
pop
dec
loope
rcrl
adc
mov
lret
int
mov
aas
subb
mov
xor
pop
and
pusha
mov
lcall
stos
dec
fisttps
xchg
in
inc
mov
mov
mov
xchg
cmp
jecxz
data16
push
pusha
dec
sbb
cld
leave
cmp
sbb
incl
pop
jbe
scas
adc
dec
aas
aam
mov
cmpb
sbb
loopne
jg
and
inc
pabsd
sahf
pop
test
sar
add
dec
mov
pop
fisttps
adc
in
xchg
xchg
ja
jl
jmp
gs
xor
imul
lcall
nop
jo
pop
or
pusha
sub
insl
loopne
int
xchg
aaa
xor
out
test
mov
push
pop
push
dec
repnz
xchg
mov
push
ds
popl
mov
sahf
jae
xchg
push
movsb
ret
sub
cmp
ja
cltd
jg
imulb
adcb
adc
dec
mov
dec
shrb
mov
add
test
loop
aas
xor
mov
mov
lcall
insl
fildl
mov
pop
and
loope
vcvtps2dq
push
out
cmc
cmpsl
mov
ljmp
mov
lret
sub
or
adc
rcrb
shlb
adc
lods
in
xor
jo
ljmp
repnz
xchg
imul
test
xor
aam
arpl
cmp
out
dec
and
mov
popa
dec
or
je
adc
jns
xchg
outsl
push
sub
pop
jns
dec
hlt
jmp
xchg
jg
mov
fwait
popf
jns
lods
ficoml
int3
daa
adc
push
xchg
add
enter
lahf
dec
ss
stc
or
or
jo
popf
xor
xor
addl
pop
or
ret
jbe
add
aaa
or
or
cmp
idivb
lahf
popa
dec
jecxz
mov
lds
sahf
cs
cmp
push
dec
shlb
jle
or
mov
shll
aaa
jmp
rcll
xor
pushf
xchg
sbb
icebp
sbb
and
ret
lahf
pop
enter
iret
mov
pop
mov
into
push
mov
inc
lret
mov
mov
and
jmp
sarl
sub
sbb
xor
or
mov
cltd
sub
ljmp
call
ljmp
fisubs
adc
sub
jge
fstpt
jns
int
enter
mov
mov
or
and
addr16
mov
or
ljmp
mov
mov
adc
push
push
mov
repnz
scas
sub
ret
pop
loope
push
jge
ret
or
push
sbb
xor
int
test
xor
sub
data16
movsl
js
pusha
xchg
ds
int3
lods
mov
ret
cmp
ds
jo
in
enter
shrl
and
sti
cmp
add
xor
insl
mov
xor
insl
xor
aaa
ret
out
lcall
xlat
push
enter
cmpl
dec
enter
jbe
pop
sahf
aaa
xchg
icebp
lods
out
cmp
push
cmp
adc
nop
cmpsl
stc
add
lea
cmp
pop
inc
mov
sub
aad
mov
or
ficoml
adc
xor
mov
xchg
push
mov
or
mov
push
pusha
push
je
xlat
sar
fsubrs
in
add
cs
mov
sbb
cmp
mov
push
push
mov
add
or
out
dec
push
push
jno
or
inc
pop
push
jmp
fisubrs
or
divl
pop
mov
fdivrp
xchg
std
ljmp
cmpsb
aaa
out
mov
std
lcall
test
ret
jp
shrb
pop
lea
jmp
sti
xchg
xchg
add
cmp
loopne
lret
pop
jecxz
adc
mov
xchg
fnstcw
in
insb
or
xchg
fwait
mov
mov
addl
pop
xchg
and
mov
jl
pushl
imul
call
pop
notl
ficompl
into
cmc
mov
and
cmp
outsl
repz
icebp
or
pushw
inc
divl
mov
add
cli
adc
add
repz
mov
in
adc
ret
and
sub
sub
mov
repnz
or
repnz
cmp
outsl
outsb
orl
jbe
adcb
movsl
xchg
mov
das
add
das
xor
jmp
mov
dec
mov
shl
imul
pop
mov
fsts
xorb
outsb
cmp
xor
stos
xor
test
std
xchg
pop
fbld
jecxz
aad
insl
or
mov
inc
mov
xchg
ds
sbb
mov
and
inc
cltd
inc
stc
add
sbb
lods
mov
xchg
cmp
fsubs
ljmp
in
mov
mov
je
jb
scas
xchg
mov
int
fs
js
test
notb
jge
loopne
sbb
mov
cmpsl
or
fisttpll
jmp
scas
xchg
ss
pop
push
push
cli
ljmp
and
stos
movb
mov
add
jb
cltd
or
clc
xor
push
fisubs
fstps
adc
mov
adc
out
aaa
cmp
mov
and
nop
and
mov
divb
mov
push
or
jg
adc
sbb
hlt
sbb
pop
mov
sti
dec
popa
sub
jg
pop
je
xor
test
or
scas
iret
in
imul
xor
jo
leave
xlat
stos
cltd
pusha
and
mov
mov
jne
adc
stc
lret
mov
cmc
pop
and
dec
outsb
call
jecxz
and
dec
dec
iret
fs
aaa
fistps
loop
mov
repnz
inc
addr16
into
std
test
imul
fisubrs
cli
or
inc
xchg
mov
jecxz
mov
dec
lcall
mov
xchg
push
jg
jae
leave
imul
pop
jle
inc
popf
daa
push
aad
test
cwtl
ds
sbb
push
and
cmp
xchg
pop
inc
adc
sbb
fildll
out
mov
push
sbb
and
mov
iret
in
int
adc
mov
jbe
add
mov
movsl
or
into
cwtl
call
jne
xchg
std
loop
cmp
xorl
mov
or
inc
xchg
in
lods
fdivp
cmc
insb
inc
sarb
push
ror
add
imul
jnp
add
push
pop
icebp
das
popf
jae
mov
sbb
sbb
or
lods
push
icebp
pop
dec
pop
add
mov
sbb
enter
iret
jo
jle
jbe
in
mov
loopne
sbb
dec
mov
inc
mov
fstl
stos
repnz
jle
cmp
adc
push
lods
adc
int
scas
sub
push
mov
sahf
stc
mov
mov
cmp
sbb
push
inc
cmpsb
lods
jnp
in
push
lea
or
sbb
popf
jmp
repz
call
stos
fdivrl
mov
int
bound
xchg
and
lcall
mov
ja
adc
inc
lcall
bound
sub
mov
cmpsb
cmpsl
jmp
push
xchg
mov
sahf
cmpsb
or
jae
sub
rcrl
and
mov
sarb
pop
xchg
loop
or
ret
notb
adc
mov
add
insl
jle
outsl
imul
pop
fsincos
call
xor
cs
stos
add
insl
out
mov
mov
loope
xchg
dec
adc
loopne
fisubrs
and
int
inc
or
js
mov
xchg
out
sub
mov
out
aad
clc
insb
lock
mov
and
dec
bndldx
lods
lret
xor
popf
shl
jp
clc
sbbb
fstpl
or
jl
loopne
adc
jb
dec
movsb
inc
outsl
imul
mov
test
fistps
stos
mov
inc
sbb
xchg
lea
call
sbb
ret
mov
clc
jecxz
aam
xchg
sbb
shrb
in
xchg
test
cld
pop
sub
cmp
ds
mov
mov
lods
addb
cmpsl
add
mov
adc
mov
mov
sub
sarl
fs
jb
pop
mov
cmp
xchg
xor
test
adcb
xor
sbb
mov
rcl
cmp
scas
pop
loopnew
push
outsl
jnp
push
mov
imul
int
movsl
jne
fs
scas
cs
dec
out
mov
sar
into
and
dec
faddl
mov
call
sub
or
push
fst
cmpsl
data16
testb
adc
mov
mov
sub
inc
and
nop
jnp
lret
push
ljmp
cwtl
ds
or
sub
pop
mov
mov
popa
daa
mov
mov
sub
cld
or
mov
mov
mov
repnz
pop
push
imul
jmp
mov
mov
cld
leave
xor
pushf
test
pop
mov
iret
mov
inc
cmp
push
sub
mov
pop
jmp
pop
dec
add
xchg
lret
fcompl
nop
hlt
sub
sbb
popf
pusha
test
sub
jle
adc
and
sbb
mov
pushf
test
int
test
sbb
sub
dec
jg
bound
das
mov
aam
aas
lret
stc
fiadds
mov
sbb
pop
mov
push
jp
ja
shll
lret
mov
mov
repnz
test
notb
call
sbb
mov
cmp
push
leave
leave
jecxz
int
mov
loop
into
mov
add
imul
dec
movsl
stos
xchg
movsl
mov
xchg
movsb
mov
ret
lds
insl
dec
fstps
adc
aad
and
adc
and
xchg
mov
stos
in
cmp
repz
adc
push
dec
ja
negb
fcompl
mov
mov
mov
cmp
cmp
dec
cmpsl
mov
sub
lcall
xor
jne
sub
icebp
jae
pop
scas
data16
dec
pop
cltd
adc
inc
mov
jmp
mov
dec
pop
or
mov
insb
call
cltd
cmp
sub
inc
push
adc
pop
mov
jb
mov
adc
or
cmp
mov
add
mov
mov
push
push
insb
jae
bound
repnz
lods
scas
or
push
push
dec
out
push
fwait
push
scas
mov
cmp
inc
xchg
lods
adc
fsubrs
dec
ljmp
cmpsb
aam
jae
lcall
jo
push
std
sub
pop
scas
cs
loop
imul
add
dec
cs
cmp
mov
orb
outsb
mov
test
add
push
shll
jne
and
daa
dec
fwait
aas
fnstenv
xor
pop
das
dec
xlat
adc
dec
mov
jbe
imul
aad
mov
ficoms
movsb
jbe
addr16
into
loop
push
repnz
data16
fistl
or
mov
ljmp
in
shll
push
and
add
mov
mov
scas
jns
pop
mov
movsl
ds
bound
adcl
aam
dec
sbb
mov
icebp
dec
dec
jns
fadds
cs
std
outsl
mov
out
mov
mov
jns
pop
adc
jns
mov
adc
testl
push
ds
or
pop
testl
push
stos
scas
mov
cmp
jno
adc
xlat
adc
dec
fldl
js
xchg
test
flds
repz
ficompl
inc
xchg
int
dec
rcll
int
call
xchg
cli
mov
inc
subb
add
jg
out
pop
loope
test
sbb
cmp
mov
or
sub
jmp
loopne
loop
in
mov
pop
adc
das
xchg
arpl
dec
sub
mov
call
inc
lds
divb
add
xchg
mov
mov
rcrb
and
mov
ficomps
icebp
sbb
mov
out
dec
cltd
or
data16
pop
mov
stos
and
nop
daa
pop
fwait
xchg
xchg
mov
pop
insb
hlt
adc
and
pushf
sbb
jne
or
xchg
mov
xchg
rolb
sbb
pop
movb
sbb
push
add
mov
adc
cmpsl
insl
rol
mov
jno
incl
popf
sub
mov
cld
cmp
xchg
pop
pop
or
jle
shlb
clc
push
dec
mov
mov
mov
xchg
push
js
lret
mov
das
pop
inc
jbe
popa
push
push
bound
lret
push
fnstcw
mov
xchg
insl
mov
jp
jl
movsl
psubb
xor
movsb
faddl
push
pushw
xor
pop
or
dec
push
push
dec
jg
stos
jl
pop
ja
sti
mov
lahf
lcall
lret
mov
fstpt
or
inc
push
add
and
test
gs
fbstp
das
loope
rcll
xchg
ja
mov
aam
rcrb
sahf
insb
fstl
leave
xor
movsb
pushf
xchg
or
lret
loop
jecxz
jl
cmp
js
mov
out
adc
repz
xchg
cmc
xchg
cmp
add
das
xor
adc
lods
pop
mov
mov
push
cmp
mov
fiadds
mov
mov
inc
and
gs
cmp
roll
mov
mov
imul
and
test
daa
int3
gs
jmp
int3
mov
test
repz
pop
cli
rol
rsm
or
add
jle
inc
cli
mov
push
cmc
and
xor
mov
call
lods
push
pop
mov
xchg
xor
fadd
repnz
adcl
iret
bound
xchg
je
mov
jo
mov
pop
jno
ret
clc
xor
insb
sub
jge
repnz
dec
fildl
sbb
ds
pop
push
pushf
adc
inc
cmp
inc
aad
adc
fisttpll
mov
pop
out
cld
arpl
clc
add
les
into
add
and
xlat
icebp
in
cmp
rcrb
mov
test
lds
mov
and
imul
es
jo
lret
loope
xchg
movb
dec
push
sbb
adc
pop
pop
sbb
cmp
pop
xorb
mov
xchg
jg
out
lods
mov
jmp
adc
add
sahf
shl
adc
lcall
adc
push
ljmp
std
adc
popa
push
loopne
out
outsl
cld
andl
aaa
xlat
xor
fildl
imul
dec
aam
xor
in
cmp
pop
push
fisttps
inc
roll
cltd
xchg
adc
shr
rorl
ds
push
xor
or
cld
mov
lock
aaa
ret
pop
jmp
pushf
cmpsl
cmpsl
lret
mov
xor
call
pushf
mov
adc
mov
mov
ljmp
imul
push
mov
mov
push
ret
or
cli
jl
mov
pop
inc
aam
lock
jae
and
test
sbb
popf
add
jbe
and
xchg
and
xor
dec
mov
xor
mov
add
jp
add
ficoml
sbb
dec
jg
stc
jle
movsl
add
out
pushf
movsb
loopne
jmp
cmp
test
mov
scas
adc
ljmp
mov
sub
push
sub
cmc
push
push
push
xchg
call
aas
test
xor
shl
mov
cwtl
ss
sbb
xchg
jle
loop
push
add
fstpl
xor
das
mov
inc
xchg
fucomp
repnz
pop
shlb
push
sub
mov
shr
into
pop
aas
push
jae
ja
scas
cli
or
pop
pop
jne
std
xchg
roll
xlat
dec
xor
aad
adc
pop
inc
xchg
push
mov
scas
ret
cwtl
or
pop
cmp
sti
mov
outsb
gs
ss
popa
add
sub
jne
mov
jge
in
ja
adc
dec
add
rcl
sub
jge
mov
push
js
mov
mov
pusha
shrb
and
inc
lock
jb
xchg
mov
cmc
cmp
inc
in
dec
ret
stos
add
ja
je
adc
arpl
icebp
rolb
xchg
and
mov
stos
insb
sbb
int3
mov
and
imul
sub
nop
out
jnp
mov
cwtl
fdivl
cmp
ja
inc
mov
cmp
dec
popf
jl
fdivrl
inc
push
ljmp
stos
loopne
faddp
js
ret
sbbb
rcrb
pop
ja
ja
adc
btc
add
sbb
mov
test
and
repz
cwtl
cltd
lock
out
pop
jns
xchg
in
fadds
cmp
adc
cld
pop
adc
leave
cs
psubusb
popf
fistpl
fsubrs
sub
subl
faddl
xor
sub
clc
test
lods
push
pop
mov
testl
clc
mov
sub
sbb
push
jbe
cmp
pop
nop
mov
ret
rolb
inc
dec
pop
inc
js
stos
adc
mov
mov
inc
push
arpl
lods
adc
stc
aad
or
mov
lret
xor
add
outsb
inc
jle
je
xlat
lahf
lds
push
or
xor
arpl
adc
das
cwtl
lods
pop
stos
call
or
fldt
inc
scas
fcmovu
and
ret
mov
cld
test
jle
out
fcoms
sub
xlat
jnp
xchg
dec
sbb
lcall
lods
adcl
inc
sbb
insl
add
or
stos
mov
and
je
cltd
insl
mov
ja
fwait
loopne
in
xor
inc
sbb
mov
scas
xlat
into
mov
shlb
fnsave
data16
cltd
mov
xor
sbb
imul
lcall
cli
sbb
cmp
dec
test
lret
shll
or
lcall
cld
test
aad
sbb
add
adc
arpl
dec
add
xor
and
xor
jae
sbb
push
xor
adc
aas
mov
imul
pop
pop
push
or
stos
jg
cmpsl
notb
je
jmp
push
pop
inc
out
data16
sbb
rorb
jmp
jle
sar
sbbb
out
cld
aam
jl
orb
insb
adc
popa
inc
popf
scas
outsl
ss
xor
inc
mov
dec
adc
mov
icebp
popa
jp
clc
shll
subb
fsubs
xchg
sub
inc
lret
push
pop
xor
push
push
arpl
push
popf
call
inc
mov
insb
cs
andw
sub
sbb
cmp
outsb
rcll
mov
test
pop
fs
mov
andb
lcall
rep
lret
lods
push
repz
fistps
jle
add
sub
adc
xor
arpl
mov
inc
sarl
pusha
and
mov
mov
hlt
and
sahf
loop
fildl
mov
push
mov
xlat
jmp
push
lock
xchg
pop
ficomps
or
mov
sbb
jno
das
out
lock
adc
mov
jno
sub
sub
and
test
cld
scas
lods
dec
push
jl
inc
mov
orb
inc
push
test
je
pop
xor
test
cmp
lcall
and
cwtl
mov
stc
mov
and
push
ds
loopne
ror
sub
push
aas
arpl
js
and
pop
shr
outsb
inc
lods
push
mov
mov
adc
lock
lahf
cmp
bound
iret
push
push
add
repnz
stc
xor
sub
mov
sbb
pop
mov
and
andl
xchg
out
pop
sahf
mov
and
mov
jno
sarl
xor
jge
adc
push
mov
lahf
and
inc
mov
loop
mov
mov
sahf
les
jmp
pop
add
mov
jbe
lret
dec
dec
testl
gs
iret
test
aad
xor
sbb
daa
imul
ret
imul
fdivrl
mov
inc
pop
cmp
push
cmpsb
movsl
xchg
and
inc
inc
lds
fimull
pop
call
lods
lods
jge
mov
ret
test
loopne
mov
ret
sbb
stc
adc
call
fdivrp
inc
mov
pop
outsl
repnz
mov
out
shrl
push
das
test
in
js
mulb
inc
out
inc
rcll
sub
push
adc
jge
mov
push
mov
mov
out
xor
in
adc
xchg
mov
mov
adc
and
call
mov
imul
shlb
cld
ljmp
dec
ds
push
jl
iret
sar
cmp
push
sbb
mov
es
jcxz,pn
mov
repz
sub
dec
and
and
add
jl
mov
cmp
inc
je
mov
testb
mov
mov
daa
test
and
cltd
xlat
add
mov
sub
leave
jo
test
in
sbb
push
sahf
inc
int3
dec
and
or
in
dec
das
jg
int
cmp
cld
fbstp
cmpb
lods
sub
mov
mov
test
mov
xchg
dec
loopne
jbe
mov
mov
sub
adc
lahf
stc
pop
dec
jp
xor
outsl
sbb
lods
pop
xchg
push
das
mov
jmp
xor
mov
pop
add
sub
movsl
scas
paddb
bound
mov
jae
jl
pop
lea
cmp
mov
cld
fisubl
loopne
adc
scas
lods
out
mov
jp
pop
cltd
lods
mov
notb
pushl
testb
mov
add
jmp
test
enter
lret
pushf
imul
roll
sarb
in
cmp
les
pop
cmp
mov
cld
mov
mov
imul
add
shrl
xchg
jnp
loop
jnp
pop
pop
repnz
mov
mov
mov
movsb
xchg
fcmove
bound
and
push
dec
cli
sub
bswap
xchg
nop
in
repnz
and
test
push
aad
mov
or
jae
insl
cmp
lret
mov
jecxz
popa
test
cmp
mov
out
inc
pop
rorb
mov
aam
mov
mov
lea
fs
neg
fsubrl
cmp
sub
mov
mov
call
mov
sbb
mov
push
loopne
int
sbb
xor
xor
sub
and
test
sub
jo
sbbl
jp
jp
loopne
add
dec
lea
mov
push
outsl
xor
iret
push
mov
pop
adc
xchg
lret
jns
jns
sbb
test
jno
inc
xlat
ds
int3
popa
dec
ss
xchg
pop
mov
xchg
loopne
loope
push
mov
shlb
cli
stc
inc
mov
dec
mov
and
movsl
adc
stc
mov
outsl
mov
pop
inc
aaa
adc
xchg
iret
scas
cld
pop
sbbb
fs
push
mov
cmc
hlt
ljmp
es
loopne
int
fmul
cltd
shll
dec
lret
dec
cmp
sbb
xor
lods
xor
insl
cmp
ret
rcrb
cmp
push
inc
inc
aas
rolb
aam
lret
daa
adc
cmp
fsubp
shl
add
dec
movsl
xor
in
pop
add
adc
pop
add
jge
shlb
dec
mov
pop
jns
out
mov
inc
bound
mov
jmp
sbb
loop
jb
cmp
imul
pop
jl
cltd
int
pushf
popf
sub
add
mov
inc
dec
dec
adc
lcall
sub
das
subl
daa
and
insl
loope
pop
and
xchg
bound
js
adc
scas
push
dec
hlt
in
testb
xor
and
das
lahf
inc
pusha
or
aas
mov
das
out
lcall
je
test
push
cmpb
stos
inc
dec
scas
aaa
mov
pop
fptan
lods
fsubrp
jle
xor
mov
iret
jno
lock
and
in
ss
jmp
mov
test
add
add
pushf
inc
jae
lea
jns
fdivrp
add
fwait
push
mov
iret
mov
loopne
sbb
arpl
adc
imul
testl
ljmp
xchg
gs
in
lea
lcall
jnp
cmp
cmp
xor
and
inc
cmp
fwait
aam
out
cmp
bound
ds
push
pop
xlat
les
xor
sbb
dec
adc
ja
inc
push
mov
cs
sbbb
ret
xor
push
call
mov
sti
sahf
lea
mov
ret
or
cmpsb
cmp
cmc
ja
ret
jb
push
idiv
nop
add
dec
push
movsb
shll
in
rcll
pop
int
sub
ret
push
jecxz
cs
cmp
popf
aam
shlb
inc
lret
imul
shlb
lcall
fs
movsl
in
hlt
cmp
mov
clc
aam
cmp
jle
jb
push
cmp
inc
cmpsl
lds
gs
xchg
inc
dec
push
ds
fcompl
mov
addr16
cmp
lret
jbe
sbbb
sbb
or
xchg
fwait
adc
or
cli
test
xor
inc
popa
inc
add
test
in
cmp
enter
sarb
mov
mov
or
call
jns
push
jmp
mov
xchg
xor
sbb
pop
inc
adc
bound
push
insb
pop
ljmp
sbb
je
cmp
inc
aad
jecxz
roll
inc
lcall
cmc
mov
inc
mov
add
dec
out
pop
and
push
jecxz
pushf
dec
xchg
aad
add
pop
jl,pn
mov
mov
pop
test
jp
shlb
test
sete
clc
inc
pushf
les
mov
ljmp
outsb
push
push
test
mov
or
mov
out
icebp
xchg
cmp
subb
js,pt
notl
add
int3
fnstenv
aas
cmpb
outsb
fidivrs
sbbb
cmp
add
push
aad
ret
push
add
mov
in
adc
mov
loop
mov
js
sbb
jno
test
push
mov
jge
insb
fbld
jnp
xorl
out
xchg
adc
or
lcall
and
xchg
push
jl
xchg
inc
cmp
test
setnp
adc
push
lock
lea
jbe
sbb
mov
movsl
stos
pop
mov
dec
cwtl
repnz
jge
rcll
outsl
xor
jnp
cmp
mov
cmp
push
aas
mov
into
test
fisubrl
inc
aam
push
push
push
xchg
mov
stos
pusha
mov
std
mov
loopne
bound
test
cmp
bound
fcmovne
cmp
add
imul
cmp
mov
imul
push
lock
orb
stc
sbb
cmpsl
push
mov
ds
imul
mov
in
shr
idiv
outsl
push
dec
pop
fstps
cmpsb
jns
sub
or
scas
inc
sbb
ljmp
xchg
outsl
fisttpll
movsl
popa
aaa
fisttpl
dec
into
jl
pop
and
and
cmpsl
clc
out
pop
sahf
frstor
outsb
pop
data16
inc
xor
jbe
jl
push
push
xor
xchg
bound
mov
jmp
je
adc
int
cmp
ficoml
jge
push
aas
inc
fwait
mov
xchg
dec
loope
push
xchg
test
mov
mov
test
stos
jne
int3
in
out
sub
fcomps
cmpsl
insb
addr16
adcb
fwait
shl
aam
or
ja
cwtl
and
fnsave
arpl
or
inc
sub
lea
lods
pop
inc
xchg
fnstsw
jle
pop
jmp
push
mov
mov
adc
push
cmp
cmp
push
orl
pop
mov
xor
lcall
dec
repz
imull
sti
repnz
sahf
jb
lea
add
pop
stos
outsb
sbb
mov
xchg
test
test
pop
fadd
enter
insl
mov
outsl
idiv
add
add
dec
mov
dec
add
and
imul
adc
out
jmp
sahf
int3
int
data16
dec
and
ja
push
out
dec
xchg
repz
dec
stos
mov
and
lock
xchg
imul
push
jns
lea
lret
lcall
or
outsl
inc
inc
cmp
pusha
rcll
rclb
pop
mov
pop
dec
push
out
jle
or
mov
ja
xchg
inc
push
insl
ds
imulb
out
push
push
punpckhwd
push
leave
sbb
and
fsubr
push
mov
daa
lods
jae
lret
dec
test
dec
pusha
sub
dec
cwtl
jnp
inc
mov
les
mov
or
jns
or
into
inc
mov
xor
sbb
fucomi
ret
jb
adc
nop
test
xchg
lahf
dec
cli
push
shlb
dec
and
ret
aam
jbe
mov
repz
aam
js
ds
mov
test
bound
in
test
push
dec
mov
jmp
int
sti
or
aas
adc
ret
mov
add
imul
in
repz
mov
fwait
sub
adc
aaa
outsl
cltd
cmpsb
jge
aam
cltd
jae
dec
pop
mov
fs
orl
adc
lahf
mov
dec
sub
push
mov
shl
jmp
xor
repnz
cmp
fildll
sub
sub
cmpl
add
mov
cmp
lock
and
out
add
leave
mov
lds
sub
cmc
sub
jno
push
mov
adc
insb
aad
add
mov
mov
js
and
ss
jnp
loopne
lods
stos
pop
jo
stos
jno
iret
arpl
stos
sbb
cli
repz
jmp
jns
sar
mov
mov
cld
push
cwtl
jns
int3
push
pop
rol
loopne
xor
inc
cltd
push
sbb
xchg
bound
lea
pop
and
mov
repnz
inc
mov
int
sub
jle
cld
cmpsl
mov
addb
jecxz
mov
xchg
outsb
lcall
mov
xchg
xchg
xchg
mov
sub
adc
imul
jno
ljmp
sub
inc
jns
adc
sti
into
push
das
dec
push
add
js
adc
jecxz
lret
add
movsb
scas
lcall
insl
int3
jae
lea
pop
cmpsb
inc
adc
ljmp
cmp
outsb
mov
out
imul
notl
or
popa
cld
jb
adc
cs
mov
hlt
ret
fldenv
lock
ret
jl
jp
dec
cmpsb
in
ja
mov
xor
lahf
loopne
xchg
dec
cmc
adc
pop
or
mov
xchg
leave
mov
inc
ret
pop
dec
mov
push
sub
fdivl
push
xorb
mov
cmova
scas
mov
test
sarl
ret
sub
or
jne
test
fwait
insb
mov
adc
jg
das
pop
shl
lret
rorl
xchg
outsl
leave
mov
ret
pop
sahf
sahf
loop
aam
and
mov
mov
mull
jle
cmp
rcrl
pushf
cmp
push
and
rcrb
cmp
loopne
cs
mov
mov
lret
cmp
cmp
insl
cld
or
icebp
lcall
pop
mov
sub
aaa
inc
mov
ja
aad
fs
pop
scas
andb
test
ljmp
iret
pop
jle
loopne
out
inc
or
fisubrs
popa
xchg
test
pop
out
sub
ret
loope
call
and
clc
negl
cmp
adc
xchg
sub
icebp
sti
sbb
leave
out
sub
sub
movsl
xor
jbe
cli
jb
je
adc
mov
push
in
cmp
pusha
bound
orb
popf
les
js
pop
lock
mov
sub
or
aas
add
adc
aam
lcall
sti
jae
cmp
lea
in
dec
mov
or
or
mov
add
addr16
mov
mov
push
jmp
add
jno
cltd
sti
pop
test
inc
jnp
or
jmp
in
mov
das
fwait
sbb
push
sbb
roll
push
test
pop
push
mov
cmpsb
sbb
inc
xor
cmp
test
or
pop
fldt
out
lret
ret
ret
mov
mov
inc
js
rcll
insl
dec
jg
sbbl
xchg
cmp
sbb
mov
imul
mov
or
jl
mov
fwait
cmp
out
rorl
xor
xchg
imul
push
lret
and
dec
add
adc
sub
hlt
sbb
xor
jl
pop
xor
lcall
loopne
mov
mov
enter
dec
and
scas
jb
repnz
jbe
aad
xchg
dec
out
add
inc
dec
push
cmp
mov
or
mov
test
stos
mov
das
and
push
and
sub
mov
dec
pop
fwait
push
mov
jmp
pop
test
ds
inc
or
frstor
mov
inc
jg
or
dec
clc
inc
rcl
outsl
pop
push
inc
inc
iret
aaa
je
and
mov
inc
sbb
in
fs
cmp
in
cmpsb
loope
and
ds
out
ss
inc
sbb
push
dec
es
stos
xchg
pop
aad
cmp
xlat
cmp
inc
pop
or
jmp
cwtl
vpshufhw
mov
lds
fldt
mov
in
xchg
jle
filds
push
adc
xchg
sbb
out
or
lret
notb
xchg
and
add
dec
out
in
rcrb
scas
dec
xlat
adc
xchg
call
push
aam
pop
inc
push
jle
sbb
mov
jae
loopne
jb
xor
outsb
out
div
test
call
inc
bnd
aas
xor
stos
sbb
out
inc
or
pushf
out
imul
lock
shll
and
fldt
stos
sub
cmpsl
aas
pop
addb
gs
scas
push
dec
pop
addr16
gs
shll
popf
cld
roll
std
cmp
cmp
dec
or
jmp
add
pop
jbe
mov
mov
outsb
jg
mov
mov
mov
es
popf
enter
push
lcall
clc
stc
push
and
jns
int3
cli
cmc
sbb
out
dec
or
inc
stos
push
addr16
xor
and
jg
sbb
pop
jb
ss
push
pop
sti
mov
repnz
inc
mov
inc
cs
pop
aam
mov
ss
pop
and
sbb
mov
sbb
repnz
out
notb
dec
mov
adc
insb
sub
pop
adc
dec
mov
insl
cmpsb
xor
cwtl
stos
xchg
pop
scas
hlt
iret
es
or
jne
sbb
xlat
enter
jne
push
or
mov
mov
lods
sub
pop
fwait
leave
jg
pop
inc
push
push
adc
fcmovu
gs
mov
pushf
sbb
stos
shll
push
addr16
cmp
or
jl
push
mov
fidivrs
add
jns
and
int
es
mov
out
js
rclb
lret
dec
fadd
js
adc
fcomip
push
pop
clc
xor
lahf
jnp
lret
loope
dec
cmp
inc
ljmp
mov
cmpsl
pushf
lcall
xchg
adc
test
xchg
xorb
pop
sbb
data16
and
out
pop
repnz
test
mov
or
push
mov
mov
sub
pop
jecxz
sbb
xor
test
lods
pop
cmp
jmp
inc
mov
cmp
loope
mov
mov
mov
in
mov
out
movsl
je
xchg
je
das
xchg
icebp
xor
lahf
scas
cmpsb
push
out
in
cmpsb
fisttpl
inc
push
xor
mov
sbb
or
jg
lcall
pushf
addl
loopne
and
test
adc
idivl
push
or
fiaddl
shlb
pop
lret
shll
inc
out
lds
mov
adc
mov
rolb
vandps
pusha
mov
cmp
jns
out
ss
jno
xor
nop
inc
mov
jge
fs
xchg
leave
push
or
ret
sarb
mov
fldt
mov
inc
and
sti
and
movsl
jnp
loop
js
outsl
into
pop
add
test
test
aad
adc
insl
sbb
lret
or
enter
xchg
push
cmp
inc
push
out
out
adc
mov
pop
lds
add
and
mov
lret
in
xor
add
sub
push
ja
pushf
loope
mov
push
imul
enter
test
inc
push
cmp
sbb
sti
mov
adc
adc
push
das
add
insl
add
adc
cmpsl
mov
icebp
arpl
mov
in
jae
xchg
outsb
outsl
sub
shlb
inc
xlat
call
cld
ret
sub
sbb
or
enter
sub
mov
sti
cmpsb
mov
data16
push
adc
pop
pop
lds
addr16
or
je
mov
mov
fcomps
pusha
jnp
mov
cmp
jmp
lods
mov
and
cmp
outsb
stc
int
js
lret
xchg
sub
sbb
outsb
mov
nop
or
dec
and
jle
rcrl
fcmovnbe
data16
aaa
cmp
dec
xchg
cltd
leave
pop
fidivl
mov
cmp
testb
loopne
and
or
enter
imul
mov
dec
out
out
popa
ds
push
mov
fwait
cmp
jmp
lods
push
inc
adc
rcrl
push
push
cld
in
pop
in
les
inc
jle
enter
mov
xchg
inc
movl
out
icebp
stos
lret
daa
or
sbb
or
mov
leave
mov
aam
xor
in
repz
stos
sbb
pop
mov
addr16
fildll
jecxz
push
aaa
cmc
xchg
aaa
sbb
lds
mov
daa
stos
ljmp
and
into
push
mov
dec
adc
mov
lcall
dec
push
xor
and
sbb
test
fs
adc
shll
pop
rorb
popf
or
sti
jle
shl
gs
cmp
inc
mov
out
xor
jo
xor
adc
ljmp
repnz
push
sbb
dec
es
inc
mov
push
jb
and
or
and
adc
bound
cmp
ret
cmp
icebp
or
pushf
mov
jb
icebp
pop
mov
jp
inc
or
dec
push
lods
dec
mov
push
or
rcrb
xor
and
repz
les
jl
mov
in
jecxz
and
cmc
fsts
xchg
and
outsb
sahf
test
test
mov
sub
stos
sub
mov
sbb
fists
loop
pop
dec
pop
stos
gs
xchg
cmp
dec
inc
pop
inc
mov
lret
and
dec
lcall
stc
lock
andl
pop
push
cmpl
inc
loopne
sub
xchg
out
and
test
sti
repnz
and
cli
inc
adc
mov
movsl
shlb
mov
jno
add
dec
sbb
dec
shr
sbb
pop
test
cmp
dec
inc
inc
jp
leave
cmp
jbe
data16
mov
addr16
mov
adc
mov
mov
flds
jnp
mov
push
imul
dec
lock
xchg
inc
dec
jmp
push
push
cmp
inc
sbbl
dec
aam
dec
and
sbb
fs
push
mov
mov
jp
pop
push
fdivl
fwait
xlat
push
pop
mov
enter
xchg
mov
add
ds
pushf
sbb
icebp
cmp
dec
out
insl
jbe
daa
idivb
fisubs
add
out
fwait
mov
pop
mov
push
stos
sub
scas
sbb
pop
push
inc
or
icebp
mov
xchg
or
sbb
and
sarb
adc
or
jo
ficompl
mov
push
mov
imul
jl
idivb
fsubrs
pop
lds
add
idivb
pop
cld
into
stc
rcl
push
sub
idivl
sub
repz
imul
or
imul
xor
stc
movsl
cmp
or
and
ljmp
or
mov
shr
imul
sbb
xchg
push
sti
cmc
bound
pusha
inc
sbb
arpl
inc
dec
mov
cli
pop
mov
adc
mov
loope
cmpsb
push
pop
or
sbb
dec
xchg
add
pop
fldl
pop
cli
mov
sub
cmp
push
jno
sub
nop
cmc
in
bound
stc
fsubrl
cmp
arpl
mov
or
js
or
les
sbb
imul
add
pop
movsl
dec
jnp
rclb
and
xchg
fsts
pop
and
or
dec
adcb
push
sbb
fcmove
xlat
dec
cs
push
xchg
hlt
jl
pop
adc
push
push
arpl
test
inc
or
loop
popa
js
inc
xchg
adc
push
loopne
popf
cltd
fsubrp
add
lret
js
shll
pop
fst
push
and
mov
mov
mov
iret
popf
cld
cmp
loop
call
cmp
negl
ss
inc
push
sbb
rclb
mov
loopne
or
push
xchg
in
xor
push
jae
mov
mov
mov
cs
pop
jl
pop
jp
dec
stos
clc
rcrb
insb
cltd
push
xor
mov
std
push
inc
pushf
jno
mov
mov
mov
in
cmpsl
scas
adc
mov
aam
push
jge
dec
fwait
mov
and
lock
push
and
in
push
pop
repnz
mov
scas
cltd
mov
mov
xchg
adc
inc
push
xchg
mov
negb
inc
mov
test
sahf
push
das
nop
mov
mov
notb
lcall
lret
popa
and
mov
mov
int
xchg
je
xchg
inc
sub
loopne
test
js
scas
lock
mov
std
push
dec
or
push
outsb
addl
sub
cld
jl
cli
sub
cmpsb
dec
or
mov
dec
int
daa
lds
repz
mov
sbb
les
mov
cmpl
data16
xor
sbb
dec
aaa
mov
dec
loopne
sbbb
imul
dec
mov
adc
cmp
aas
lock
call
push
loope
mov
subl
mov
push
cmp
mov
sar
jmp
clc
out
mov
dec
sbb
xchg
movsl
push
lock
icebp
data16
test
out
in
or
outsb
mov
xchg
aas
inc
and
rolb
loope
imul
test
push
sub
and
std
mov
or
inc
cmp
ds
sub
stos
imull
addl
sbb
or
pop
fwait
pop
inc
sbbb
test
xchg
xchg
inc
pop
mov
shll
dec
sub
cmp
shrb
push
pop
cmc
mov
sub
out
jno
in
mov
in
jo
mov
std
scas
cmpsb
dec
iret
fildll
stos
setge
mov
jmp
cmc
ljmp
dec
dec
fwait
sbb
lret
pusha
xchg
xchg
inc
push
pop
or
clc
leave
lods
adc
loope
pop
pop
ret
cmpsl
adc
daa
sub
outsl
dec
int
andb
mov
ljmp
popa
ror
cmp
adc
movsl
push
push
pop
inc
mov
stc
mov
loopne
jnp
mov
xor
pop
cmp
dec
and
les
mov
xchg
inc
dec
sub
idivl
mov
ficompl
jecxz
fistpll
lret
mov
out
and
sub
gs
ret
outsb
push
pop
lret
test
dec
stc
cwtl
push
add
sbb
cwtl
cld
test
fstpt
cwtl
or
cmpl
stos
int
xchg
adc
shll
push
add
mov
push
pop
repz
out
ss
cmp
inc
jns
popf
jge
addb
sbb
xor
cmc
les
jmp
dec
sub
jge
push
dec
std
insl
ds
daa
aas
insb
jp
mov
ret
push
lret
xlat
sbb
sbb
pop
adc
or
push
arpl
or
hlt
lahf
or
into
inc
decb
test
mov
popf
jmp
subl
sub
rolb
lods
sbb
jns
mov
jno
sub
add
popa
cmc
mov
lret
scas
lods
or
int3
into
ror
push
jno
jl
lcall
jae
cmp
mov
cmc
push
addl
mov
fisttps
pop
adc
mov
call
pop
je
push
dec
into
and
cli
or
xor
add
dec
xchg
pop
pusha
fdivr
cmp
or
mov
pop
mov
clc
mov
and
clc
xchg
pop
jnp
mov
les
test
jae
xor
orb
mov
mov
into
sub
outsb
ja
pushl
gs
setle
nop
sbb
push
push
add
add
call
pop
fistpll
into
cmc
and
je
ljmp
pushf
inc
movb
sub
loopne
sarl
loopne
push
cmp
imul
mov
into
clc
pop
es
out
incb
and
inc
lds
jmp
push
xchg
mov
movsl
rorb
push
sub
add
lock
in
jl
push
loope
imul
inc
adc
jno
out
xor
lahf
jnp
xchg
xor
cmp
mov
lea
ja
push
gs
popf
jns
inc
mov
dec
inc
pop
dec
ret
imul
stos
ret
iret
sub
cmp
mov
pop
ljmp
and
adc
leave
sub
mov
stos
cld
cmp
push
sub
sub
sbb
or
sub
nop
test
repz
lret
enter
int
add
sahf
iret
clc
pop
mov
and
jns
jo
xchg
pop
cmp
xchg
decb
outsb
xchg
mov
orl
mov
sarb
dec
fwait
and
mov
div
notl
sbb
push
das
lcall
stos
push
aaa
test
les
push
stc
inc
pop
inc
xchg
inc
sub
pop
in
sbb
imul
and
cltd
sub
aad
xchg
sahf
xchg
mov
push
cmpsb
ss
dec
outsb
mov
push
mov
mov
jmp
mov
lods
mov
lcall
lcall
outsb
arpl
mulb
mov
mov
mov
out
xchg
in
sub
shlb
adc
test
or
sbbb
fcom
cs
les
fistpl
stos
push
xchg
shrl
or
inc
data16
ds
pop
sub
or
pushl
jl
lods
xor
cmp
ret
loope
lret
mov
pushf
outsl
outsl
in
fisubl
int
adc
cld
loope
pop
imul
push
push
sub
push
pop
inc
aas
icebp
adc
add
mov
shr
mov
adc
das
cli
pop
aam
rol
push
or
pop
push
mov
mov
cwtl
out
xor
fstpt
jle
imul
xchg
mov
xchg
and
jb
push
xchg
xor
lret
mov
or
pop
ljmp
jo
inc
xor
hlt
orb
out
repz
or
out
aaa
js
ret
hlt
test
popf
mov
and
scas
or
pop
sbb
cmp
ret
cmp
arpl
incb
jns
cmp
test
test
lret
mov
cmpsl
cli
fstps
fadds
lock
lret
xchg
ret
cmp
insl
mov
mov
js
xlat
mov
mov
imul
in
fildl
iret
mov
sbb
add
or
jbe
scas
loop
add
jge
cmp
loope
rorb
loopne
sub
cwtl
orb
lock
xchg
mov
stc
popa
or
push
or
aas
push
sub
lods
roll
in
sbb
inc
imul
pop
shll
icebp
dec
sub
and
adc
testb
jmp
pop
inc
lods
adc
inc
jp
lea
rcll
xorl
mov
sbb
cmp
jbe
or
idivb
vmovshdup
inc
and
sahf
loop
dec
sahf
add
cmpsb
rolb
inc
or
xchg
sub
stc
mov
out
cmp
in
xor
push
cmc
mov
inc
lea
mov
aam
lea
push
scas
fstpl
cmp
movsl
sub
je
pop
jmp
sarl
mov
xlat
jno
mov
push
fistpl
and
loopne
pushf
xchg
pop
and
in
fstpl
rol
sarl
sub
mov
inc
pusha
das
mov
int
xor
pusha
xchg
cmc
jb
fwait
mulps
cmp
insb
pop
jp,pt
xchg
ljmp
pusha
pop
fsubrp
push
cmc
dec
xlat
sbb
push
inc
sbb
dec
ljmp
or
out
adc
out
sbb
jp
lds
cltd
jle
dec
dec
es
add
and
loop
pop
mov
fldcw
pop
lods
dec
cwtl
imul
mov
and
cwtl
das
test
wbinvd
orl
and
mov
loopne
ja
divb
cwtl
into
rolb
mov
clc
faddp
jmp
sbb
sub
push
xchg
lret
lea
in
push
jo
push
mov
outsl
push
out
push
fmul
sahf
in
lods
adc
mov
popf
pop
push
or
ret
subb
je
jl
out
push
fists
cmp
cmpsl
xchg
iret
xchg
aad
xchg
fwait
xchg
mov
in
fwait
and
adc
or
or
add
loope
and
call
inc
jmp
fbstp
add
mov
and
mov
ficoms
pop
mov
xchg
push
sbb
das
push
daa
xor
leave
sbb
outsb
cmpsb
mov
or
loope
mov
shlb
xor
add
dec
outsl
lret
push
in
fsubl
xlat
icebp
lods
mov
popf
out
and
movsb
ds
dec
mov
int
push
sub
sbb
sub
mov
xchg
xlat
cmp
push
shrl
fcmove
adc
punpckhwd
add
in
fmull
in
inc
cmp
shlb
push
pop
jo
mov
mov
int
gs
mov
int3
jecxz
lret
pop
lods
call
repnz
inc
lret
sahf
add
mov
dec
movsl
shll
sti
repnz
mov
shr
inc
outsb
jmp
int3
xor
fnstsw
cmp
cmp
xchg
adc
insb
add
pop
jp
inc
inc
add
js
add
mov
packsswb
cmc
int
pushf
or
push
mov
cmp
add
insl
pop
in
bound
and
int
enter
movsl
imul
xchg
out
mov
xchg
adc
lock
data16
dec
cltd
xchg
push
pop
adc
pop
adc
jnp
pusha
sbb
pop
out
clc
nop
mov
adc
ret
and
xchg
dec
mov
pop
xor
push
test
adc
cli
jl
dec
pop
jmp
lahf
stos
ja
aad
cmpsl
push
push
inc
popf
iret
jo
inc
fwait
or
sti
inc
ja
dec
cmp
mov
movsl
in
daa
push
ffree
push
cli
jg
mov
push
mov
inc
iret
ja
fs
lcall
pop
inc
sti
mov
clc
shrd
push
aad
jbe,pn
xor
or
arpl
lcall
jmp
int3
lea
adc
add
cmpsl
push
cmp
pop
dec
xor
pop
cs
orb
sti
nop
imul
xor
ja
rcll
mov
push
and
dec
inc
and
push
cwtl
fisubs
xor
inc
sbb
inc
sti
hlt
movsb
fimull
loope
mov
shlb
pop
lods
and
imul
hlt
insb
aaa
cmp
jnp
cmp
pop
pop
xchg
xchg
sub
or
pop
test
jne
out
fsubs
mov
and
pop
sub
mov
jg
aad
pop
add
cmpl
mov
mov
jl
mov
sbb
mov
cld
jns
addl
push
mov
jb
lret
inc
dec
loop
lcall
xchg
outsb
xor
fwait
std
ret
mov
cmp
jo
hlt
mov
or
mov
adc
leave
adc
arpl
and
mov
lahf
adc
inc
adc
mov
pusha
jle
adc
lcall
imul
dec
cwtl
stos
jbe
movsb
sahf
and
push
cld
xchg
imul
out
lret
push
inc
push
xor
out
jns
pop
dec
sub
push
aas
xor
out
fidivrs
faddl
lods
xor
xchg
je
xor
lods
outsb
dec
xor
dec
sub
ja
and
inc
jecxz
mov
loopne
mov
insb
dec
add
in
repnz
pop
aad
dec
pop
dec
sub
cmpsl
add
leave
stos
mov
mov
mov
in
inc
mov
dec
xchg
xchg
xchg
pusha
dec
ds
pop
mov
ljmp
sahf
xchg
lahf
push
xlat
mov
js
in
ljmp
sub
sarl
add
add
cmp
call
jbe
cmpb
sub
mov
mov
imulb
jmp
idivl
les
js
dec
filds
sub
call
fadds
jo
lds
clc
mov
sbb
xchg
inc
and
int3
push
jno
popa
sub
xchg
daa
iret
push
xchg
push
inc
mov
shlb
call
enter
fistpl
jae
aaa
mov
das
jae
lock
push
fdivrl
or
gs
adc
and
push
mov
insl
jp
fwait
and
dec
leave
out
cmp
mov
or
mov
enter
jnp
sarl
dec
aaa
mov
inc
mov
jne
adc
cmp
fisttps
popl
fisubs
aad
add
loop
or
sub
lea
call
push
aas
shrl
push
and
adc
xor
lret
jp
cld
mov
stos
inc
mov
scas
xor
jno
or
sbb
and
enter
xchg
es
inc
sub
dec
and
add
xor
in
xchg
lret
daa
int3
pop
mov
aas
arpl
outsl
pop
sub
xor
popf
inc
leave
ljmp
dec
cmp
loop
ljmp
hlt
add
push
pop
iret
testl
pop
jle
mov
int3
jne
push
xchg
andl
jae
mov
jne
ss
jge
pop
xchg
jp
mov
add
push
adc
stc
mov
clc
xor
daa
fidivl
dec
cwtl
adc
enter
push
jbe
movsl
ja
in
sub
sbb
adc
add
push
inc
mov
test
ss
mov
pop
xor
xor
fs
and
inc
loopne
ljmp
sub
pop
sbb
ficoml
js
hlt
or
movb
fcoms
mov
inc
mov
mov
push
mov
inc
fsubrl
add
cmp
fidivs
and
mov
or
jns
pushl
add
inc
xchg
les
sbb
mov
in
xor
lahf
push
and
out
sub
jle
test
out
or
mov
cmp
imul
test
test
pushf
push
or
mov
pop
xor
cmpsl
push
xchg
dec
mov
push
js
dec
es
jle
inc
push
inc
cmp
sub
fisttpl
xor
loop
push
in
lds
fwait
stos
iret
flds
push
xchg
bound
push
jno
shlb
pop
pop
xchg
cltd
fisttps
lret
sub
fnsave
test
lock
cli
sti
scas
inc
stos
push
xchg
nop
fdivrp
popa
into
imul
mov
and
xchg
cld
cmp
repnz
push
andb
cli
lock
int3
hlt
ret
es
pop
mov
je
push
rol
stc
cli
push
lcall
cmp
js
sbb
pop
adc
hlt
cmpsb
shrb
outsl
pop
cmp
fldl
dec
mov
roll
sbbb
fdivrs
jbe
mov
jge
shll
pop
and
gs
insb
xchg
hlt
fwait
sub
dec
into
das
cmp
sub
fwait
out
pop
fidivrl
repz
popf
xchg
sbb
jg
ret
add
mov
sub
sub
mov
sub
cmp
enter
lahf
or
fdivl
xchg
addr16
mov
inc
xor
cmp
popf
push
fsubrs
in
out
sbb
fdivl
mov
inc
gs
jnp
cmpsl
sbb
add
mov
jb,pt
pop
insb
fsubrl
repnz
xor
or
push
lret
repnz
and
xchg
cwtl
scas
pop
mov
pop
rolb
xchg
scas
adc
sbb
dec
ss
mov
mov
inc
outsb
cli
cmpsl
push
jecxz
xlat
mov
xorl
xchg
or
ss
lods
jo
gs
negl
sbb
mov
cwtl
xchg
inc
leave
xor
push
int3
dec
and
add
negb
icebp
in
lds
aad
or
sub
cmpb
lds
shl
inc
dec
ja
adc
cmp
in
xchg
mov
testb
mov
popa
cs
repz
dec
or
pop
repz
mov
or
dec
or
mov
sub
cwtl
lods
inc
sbb
mov
lret
adc
or
ret
or
xchg
in
in
cmp
mov
rol
imul
and
loope
inc
imul
xchg
shl
cli
test
add
pop
jae
inc
mov
insl
shll
out
in
jg
fbstp
pop
out
enter
add
mov
dec
test
mov
popa
jge
mov
es
addb
jg
cltd
sbb
adc
adc
test
dec
cli
je
cmp
lods
sbb
cmc
fldl
call
mov
mov
lahf
dec
mov
dec
lcall
pusha
in
aaa
sbb
dec
nop
dec
imul
test
aam
push
mov
pop
stos
mov
cmp
push
fwait
pop
dec
add
iret
jmp
out
mov
jl
fidivs
xchg
shlb
xchg
push
arpl
pusha
sarb
pop
cs
push
pop
inc
shll
mov
in
cmp
popa
shrl
inc
jl
and
imul
xchg
lods
fldcw
sub
sbb
lea
adc
ja
aad
cmp
cli
pop
adc
je
mov
rcrb
stos
push
and
xor
sbb
fcompl
jb
cmp
cmp
mov
jle
jno
shlb
shll
lahf
sub
lods
sbb
fucomip
jmp
lea
mov
adc
dec
fldt
jge
rclb
cwtl
xlat
mov
and
cltd
inc
jg
push
rcrb
idivb
data16
scas
pushf
and
or
bound
cld
iret
cmpl
dec
shr
sub
out
outsl
in
data16
inc
sub
aas
xchg
outsl
adc
push
into
lcall
gs
or
jae
xor
mov
push
in
iret
and
inc
or
into
mov
mov
xor
mov
mov
lret
push
scas
mov
mov
aad
xchg
lods
mov
loopne
xchg
fcompl
imul
adc
push
lret
rcrb
orl
andb
call
mov
in
shrb
inc
mov
cmp
in
pop
data16
mov
inc
sub
push
je
push
jae,pt
test
lock
mov
pop
pop
xor
sub
xchg
pop
lods
jo
iret
std
xorl
or
or
jns
in
jecxz
xor
addb
shlb
push
loope
sub
in
je
imul
pop
cltd
jnp
mov
and
mov
out
jge
push
push
mov
aad
pop
mov
mov
mov
popf
dec
in
inc
push
push
dec
jno
mov
mov
insl
ret
xor
lea
aam
inc
jnp
inc
pop
mov
push
and
or
in
mov
sub
jno
cmc
inc
mov
xor
ret
mov
sub
scas
adc
adc
sti
xor
pop
jge
xor
bound
jle
mov
adc
xchg
lock
pop
sti
das
in
xchg
stc
push
aaa
pop
mov
rolb
inc
pop
jb
pop
mov
mov
repnz
mov
adc
out
jns
jg
inc
adc
xchg
inc
pop
addr16
pop
ljmp
cmc
sub
out
xlat
xchg
sahf
adc
lcall
sbb
jns
out
mov
ret
iret
out
xor
stc
xchg
lock
popf
dec
pop
add
iret
adc
xchg
mov
hlt
shrl
ds
dec
inc
inc
mul
rclb
xlat
xchg
mov
jge
mov
push
aad
pop
inc
xor
fistps
push
mov
xchg
daa
mov
idiv
imul
outsl
in
je
and
or
mov
or
nop
pop
pcmpeqd
push
or
add
in
sbb
pop
sti
cltd
in
ja
jl
jp
pop
jg
out
popf
sbb
js
mov
fst
adc
mov
mov
sbb
adc
jb
mov
adc
pop
insb
mov
push
das
clc
daa
fcmovne
arpl
mov
dec
cmc
and
xor
call
jp
stos
bound
and
xor
xor
xlat
push
outsb
push
clc
mov
and
das
dec
enter
xor
idivl
add
cwtl
leave
negl
fs
stc
add
loop
dec
or
mov
xor
lahf
jmp
dec
imul
insl
dec
or
es
mov
das
insb
je
push
cmp
movsl
mov
movsb
and
dec
lret
mov
jb
add
int3
ss
incl
mov
lds
sarb
xor
cmpsb
cmp
punpckhbw
dec
push
inc
adcb
jg
inc
rorl
fadds
mov
xor
push
imul
pushf
inc
ja
mov
push
out
andb
fdivrp
sub
push
or
cmp
pop
inc
jno
jg
rolb
push
int
inc
in
jmp
cs
enter
xchg
movsl
cwtl
xlat
dec
adc
dec
and
fidivrs
or
pushl
jnp
jb
shlb
add
inc
test
xor
pushf
ficomps
mov
in
leave
scas
adcl
cmp
enter
imul
test
add
and
in
fbld
mov
movsl
sbb
xchg
cmp
xchg
mov
and
xchg
mov
add
add
aaa
jnp
or
cmpb
xchg
mov
mov
and
out
movsl
push
iret
sbb
inc
rclb
out
arpl
push
ja
add
mov
add
out
arpl
push
and
sarl
aaa
jb
pop
sub
outsb
decb
push
ljmp
or
js
lahf
add
das
jae
loop
or
int3
push
dec
pop
jae,pn
adc
pop
popf
movsb
rorb
scas
xor
jge
jb
cmpsb
imul
hlt
xchg
cmp
subb
test
sahf
mov
pop
outsb
sub
lods
iret
scas
or
cli
push
test
mov
inc
dec
mov
cmp
push
les
adc
add
jae
cld
push
das
stos
jns
sbb
xchg
push
sbb
mov
test
adc
int3
loope
mov
jge
adc
insl
jae
mov
inc
cmp
mov
lods
cmp
jae
inc
fbld
push
cmp
loope
mov
arpl
inc
mov
or
pop
mov
xor
pop
and
mov
xchg
xchg
pop
mov
jne
jge
xor
and
daa
aas
push
sti
mov
jo,pt
mov
mov
xchg
leave
cmp
pop
call
pushf
push
pop
data16
js
inc
xlat
aad
pop
push
jecxz
jge
jg
adcb
mov
test
mov
mov
in
xor
fstps
out
adc
pusha
or
in
in
dec
inc
inc
daa
cmpl
cli
adc
push
jmp
cmpsl
adcb
mov
insl
notl
add
lods
ret
push
jnp
adc
sub
es
loope
inc
leave
mov
jmp
dec
lahf
addr16
mov
jae
cmp
jns
push
or
dec
fidivs
sbb
jns
iret
fs
cli
js
pop
lahf
lret
mov
repnz
fwait
xor
scas
mov
cmpsb
cmp
push
inc
sbb
jne
xchg
ret
scas
insb
add
jl
mul
pop
test
lds
cmp
cmp
jo
jnp
pusha
and
in
pop
push
repz
and
int3
inc
lret
sbb
cmp
jno
and
cld
push
sbb
pop
jg
push
and
pop
sbb
pop
dec
mov
nop
int
cmp
imulb
mov
imul
push
lcall
fldenv
push
mov
cmp
daa
jae
mov
lcall
mov
hlt
das
sahf
cmp
mov
leave
stos
popa
cli
lea
push
or
arpl
scas
jns
test
jp
dec
mov
cmp
and
xor
push
xchg
into
xor
std
mov
mov
adc
pushl
sbb
mov
in
imul
jo
jno
xchg
sbb
push
xor
ds
jl
mov
aas
andb
push
ljmp
in
insl
cmp
cmc
sub
fcomps
loopne
scas
push
jnp
fisubl
inc
adc
leave
add
ss
mov
jo
std
int
and
into
inc
pusha
xchg
int
shlb
mov
out
or
push
stc
sub
andl
inc
sub
lret
mov
shrb
ret
mov
bound
cmpsl
or
push
repnz
stos
inc
adc
sbb
cli
add
dec
sbb
adc
mov
repnz
lret
mov
lcall
aas
pusha
test
xchg
daa
loopne
divb
xchg
ret
add
dec
cmp
xor
mov
sbb
jns
out
pop
insb
mov
cmp
nop
loop
sbb
jbe
js
xchg
jecxz
sbb
sahf
pop
rcrb
mov
insb
jb
stc
add
mov
inc
sub
ss
popf
push
data16
testl
stc
aas
xor
xor
divb
xor
call
xchg
popa
mov
push
push
aaa
adc
mov
cmp
pop
leave
pop
mov
push
sub
adc
sti
lock
push
add
adc
jno
xchg
pusha
int
sbb
or
lret
into
jmp
dec
lods
add
nop
push
lds
mov
pusha
aad
imul
das
xor
push
loope
mov
lock
ja
test
std
movsb
pop
xchg
add
lock
ds
dec
iret
jno
mov
movsb
mov
lret
cltd
dec
sub
mov
pop
adc
and
jg
in
pop
fmuls
iret
and
cwtl
mov
out
push
mov
push
fwait
movsb
out
xchg
movsl
xchg
leave
cli
mov
stos
sub
lds
lret
sub
cwtl
pop
push
pop
std
adc
aaa
ljmp
push
mov
js
push
rcl
mov
lods
sub
insb
adc
and
fs
adc
xchg
orl
or
mov
dec
jmp
cs
and
arpl
ja
inc
stos
out
cmp
jbe
pop
aas
test
push
xor
fsubrl
push
clc
ljmp
in
int3
pop
fsub
cmc
jle
aam
or
pop
push
xchg
test
jge
cmc
imul
add
leave
dec
or
icebp
test
psubw
fcoms
jmp
mov
je
jbe
rorb
imul
sub
shrl
and
out
cmp
adc
inc
mov
mov
xchg
mov
xchg
add
and
shr
sub
rclb
mov
xor
scas
out
in
das
pop
mov
and
ds
sahf
jl
lods
das
lds
adc
xchg
mov
push
lock
xchg
adc
clc
push
subb
call
lcall
iret
adc
sbb
sbb
or
leave
aas
pusha
xchg
lods
imulb
js
in
mov
into
and
mov
cltd
cli
sti
mov
jmp
in
sbb
pop
sbb
into
jp
cltd
in
and
and
in
pop
push
mov
mov
mov
test
adc
push
cmpsl
enter
sub
jb
adc
out
lret
popa
sub
insl
inc
loopne
mov
insl
push
cmpsl
add
ret
imul
adc
and
dec
lods
sti
fcmovnu
pop
cmp
inc
je
or
cmpsb
and
pop
lods
bound
fucomi
not
pop
js
jp
out
xchg
aam
and
std
pusha
sti
adc
cs
mov
stc
mov
mov
sub
testl
int
leave
pop
sbb
cmp
aaa
mov
hlt
test
add
xchg
pop
test
clc
push
cld
cmp
nop
insb
pop
pusha
pcmpgtd
mov
dec
jo
inc
push
cltd
xchg
popa
lea
mov
sub
enter
and
pop
inc
mov
das
aas
fs
loope
or
sbb
cmp
jno
test
das
out
xor
mov
xlat
or
cmpsb
aaa
out
adc
shll
dec
inc
aaa
outsb
popa
test
lahf
cmp
or
cmp
jno
xor
mov
fmuls
xchg
ds
mov
dec
mov
xchg
sbbb
pop
push
or
in
fdivs
in
je
rcll
loope
outsb
lret
jno
and
pop
das
repnz
cmp
stos
mov
test
fadd
fstpt
dec
ret
or
dec
out
xchg
leave
sub
mov
lcall
xchg
pop
add
iret
cmp
push
jns
int
xchg
sti
mov
fxch
fsubr
daa
jp
mov
xchg
or
rorl
push
push
jge
outsl
test
mov
filds
jno
aam
jo
out
test
push
inc
and
scas
loop
xchg
fldt
or
ret
cmc
sahf
push
mov
jo
in
jecxz
lods
cwtl
xor
or
mov
rolb
int3
mov
xor
out
cmpsb
push
xor
cmp
daa
or
xchg
adc
iret
fwait
cmp
in
or
fimull
and
push
pop
add
push
sbb
sub
lea
movb
mov
insb
roll
lods
ss
push
adc
mov
sbb
es
testl
sti
add
adc
push
frstor
divb
push
cltd
ds
fnsave
or
mov
mov
lods
pusha
mov
inc
pop
ljmp
in
mov
fildl
cmp
xor
jns
inc
sbb
fwait
aad
leave
adc
test
repnz
sub
notb
aam
lea
sub
dec
call
add
push
popf
adc
xchg
adc
mov
adc
inc
add
shlb
mov
imul
xchg
mov
rcr
pop
mov
push
adc
mov
add
pop
cmpsb
lahf
adcb
cmp
push
fistpll
xor
or
loope
jnp
iret
mov
xor
ss
call
mov
jo
mov
popa
add
int3
adc
fnsave
or
cmp
inc
les
shlb
iret
fcoml
pop
and
insb
cmp
fcmovne
sbb
push
jle
xchg
xlat
aad
in
cwtl
iret
shrb
xor
addr16
pop
dec
pop
lcall
leave
hlt
js
in
jp
mov
adc
xchg
jp
repz
popf
mov
push
mov
lcall
popf
ficoml
div
xchg
popf
test
popf
xor
inc
mov
sahf
and
sbb
push
xor
and
cwtl
loopne
pop
sbb
outsb
in
dec
cwtl
inc
fs
data16
adc
clc
loope
xchg
jle
add
sub
and
sti
dec
xlat
mov
test
jo
es
dec
arpl
add
test
cli
add
loop
cltd
add
cmp
loop
dec
xchg
lahf
popf
or
cmpsb
movsw
mov
xor
fsts
sti
in
inc
cmp
movl
arpl
or
int3
ret
dec
popl
jle
jl
pop
xor
sub
sbbb
push
fbld
subb
fcompl
pop
lods
adc
std
mov
or
outsb
test
adc
and
icebp
push
loope
cmc
sbb
and
push
in
ficoml
out
pop
lret
mov
cmp
adc
dec
nop
lcall
mov
jle
stc
adcl
insl
repnz
dec
pop
in
lahf
rolb
lcall
jb
sub
fisubs
imul
add
cmpsb
push
pop
das
inc
lahf
jecxz
scas
xor
pop
fbld
fsubr
or
sub
add
pop
popf
sbb
mov
sub
pop
scas
ret
and
test
jmp
dec
addr16
inc
push
add
cmpsl
and
repz
test
jge
inc
int3
mov
jmp
xchg
dec
push
hlt
push
dec
push
pop
outsl
push
lods
adc
data16
mov
sbb
popa
sbb
in
or
lahf
movsl
adc
cmp
push
jns
hlt
dec
sub
inc
scas
sub
push
inc
push
addr16
addr16
jecxz
js
daa
pop
pusha
inc
or
xchg
out
orb
call
adc
or
inc
jne
xchg
sbb
jno
shlb
jle
je
sub
filds
hlt
stos
pop
xchg
sbb
mov
mul
lods
repnz
repz
jecxz
mov
adc
pop
in
fwait
out
xchg
ljmp
lock
push
jmp
mov
jns
jb
jo
shl
imul
dec
jl
xor
xor
or
test
xchg
jne
pop
mov
insb
imul
dec
arpl
scas
jb
mov
movsb
mov
cmpsl
sti
push
mov
iret
mov
jle
movsl
cld
add
sbb
adcb
xchg
cli
mov
mov
ljmp
pushl
cmp
lock
sahf
ret
int3
popf
pop
int3
adc
bound
add
pop
add
push
lcall
movsl
push
lds
idivl
or
fwait
lcall
flds
int3
cmp
push
in
aam
movq
dec
sbb
xchg
jp
dec
push
leave
or
push
pop
pop
sti
xchg
lahf
popa
in
lret
push
or
adc
cmpsb
and
lds
sbb
dec
cmp
scas
ret
enter
dec
test
notb
scas
mov
mov
jmp
xorb
and
cmp
add
jl
sub
push
pop
cmp
shr
adc
dec
repz
loop
push
or
xor
sbb
adc
lcall
cs
call
pop
xor
sbb
pushf
fbld
inc
ds
add
sbb
dec
nop
fnstenv
xchg
push
push
rcll
pop
xor
and
add
pop
mov
ficoms
mov
dec
lret
aaa
and
mov
in
xor
and
loope
pop
aas
popf
lock
add
outsb
push
lret
movsl
lret
xchg
ja
mov
imul
lret
ljmp
mull
adc
pushf
jae
out
jno
repnz
repnz
xor
pop
lcall
jnp
sti
cmc
or
daa
add
pusha
cld
add
in
roll
cs
xor
add
fdivs
cmp
sbb
mov
or
sahf
or
popf
jmp
jns
shrl
mov
dec
data16
sub
pop
shlb
jg
in
in
mov
movl
loop
lret
pop
arpl
pushf
mov
mov
dec
int
dec
xor
js
jnp
sbb
push
sbb
xchg
hlt
das
ret
pop
pop
cli
icebp
pusha
xor
loopne
orl
inc
mov
or
les
and
jne
test
push
jne
add
imulb
movsb
push
pop
repz
test
mov
insl
mov
pop
lea
pop
mov
insl
ds
inc
push
add
inc
loopne
insb
inc
xor
mov
jmp
jns
popa
lea
pop
cld
popf
fmuls
rep
mov
lds
in
jno
xor
inc
jp
std
xchg
and
xor
inc
or
fisttpll
sub
jmp
mov
pop
clc
xchg
stos
shlb
fsub
cmpsl
cld
mov
in
imul
mov
cli
clc
cmp
lretw
jae
xchg
xor
lcall
ja
lahf
jmp
lods
cmpsl
addr16
xor
sbb
testl
inc
xor
cmp
mov
enter
pop
xor
cmc
inc
xorb
pop
mov
add
lods
cmp
ljmp
mov
lret
jle
mov
iret
add
add
xlat
out
jg
lds
adc
ret
or
mov
or
faddp
jmp
iret
mov
xor
jge
xchg
add
es
inc
and
out
dec
aam
mov
gs
or
jle
push
les
lahf
sbb
jg
cmovge
rclb
inc
push
xor
imul
inc
inc
inc
jbe
lock
jp
jns
inc
repz
sub
movaps
iret
mov
out
inc
loope
xor
cmp
push
jmp
mov
push
mov
push
push
into
pop
rolb
in
mov
pushw
aam
shlb
scas
fs
sbb
mov
fistpll
mov
js
adc
test
rorl
adc
sbb
or
test
xchg
and
loopne
out
add
inc
jle
jmp
gs
and
subb
arpl
sbb
loop
lret
stos
jmp
or
or
xchg
mov
test
jae
bound
inc
and
leave
mov
imul
rcrb
pusha
cmp
mov
jnp
jbe
aad
pop
mov
mov
and
or
pop
fdivr
loope,pt
and
lods
shr
and
enter
xor
icebp
xor
mov
mov
and
repnz
push
dec
mov
arpl
inc
jne
xchg
ffree
ljmp
lock
inc
cwtl
push
xchg
insb
movsb
ret
adc
notb
pop
push
push
gs
push
popa
lods
push
xchg
pop
repnz
test
mov
jmp
loopne
roll
fs
incl
dec
cwtl
sub
dec
and
fnstenv
in
cmp
jne
or
dec
sarl
xlat
mov
push
mov
inc
bound
push
clc
inc
jmp
cmp
pusha
fstpt
pop
and
subb
std
pop
push
cmpsl
mov
pop
mov
sbb
out
fists
sbb
insl
mov
mov
fwait
in
jnp
orl
and
test
arpl
stos
mov
js
add
idivl
rorl
inc
cmp
adc
fcomip
push
loopne
pop
cld
push
jno
sbb
dec
dec
roll
clc
movsl
sarb
push
call
lds
and
mov
test
aam
sub
enter
sbb
andb
loopne
pop
push
incb
std
sbbb
cmpsb
pop
xchg
nop
inc
xor
mov
xchg
mov
mov
xor
pop
aas
cmp
sbb
adc
add
inc
xor
mov
sub
lds
sub
aad
pop
cmp
addl
subl
mov
enter
lret
lods
rol
decl
inc
sbb
push
in
push
fmull
xor
xchg
jge
stos
arpl
pop
unpcklps
jb
test
sahf
and
out
sarl
nop
cwtl
add
stos
xor
push
push
jecxz
adc
stc
add
lret
scas
lret
sar
sbb
popa
iret
xchg
mov
mov
jg
push
add
jno
ss
aad
sbb
les
ret
outsb
mov
mov
jo
rcrl
pop
push
insb
ljmp
lret
test
mov
pop
cs
adc
dec
jmp
icebp
mov
jne
or
in
iret
loop
clc
cmp
lods
fimull
fisubs
shll
loope
pushf
add
sbb
jbe
enter
fildll
test
lods
hlt
subb
and
add
lahf
or
xchg
jge
jmp
jae
push
jge
cltd
xlat
mov
jae
arpl
jl
hlt
jae
cltd
jo
adc
fisubrs
in
mov
scas
pop
movsl
dec
jnp
clc
jmp
cmc
cs
dec
loope
ja
dec
sarl
xor
ret
movsl
xchg
cltd
sahf
arpl
mov
push
jb
movl
mov
sub
mov
push
dec
scas
ljmp
adcl
mov
inc
xor
dec
stc
mov
jae
pop
push
mov
xchg
idiv
hlt
xor
lcall
std
iret
xlat
int
jmp
jnp
test
sarb
jns
int3
in
xchg
cmp
shlb
lret
mov
pop
sub
cmp
jecxz
outsb
incb
pusha
and
ds
cwtl
fstl
push
fs
dec
movsl
cli
cwtl
pop
sub
addr16
cmp
sahf
ds
push
imul
sub
shrl
jmp
cmp
inc
mov
lahf
notl
call
sub
ja
jne
xchg
div
ret
mov
mov
div
clc
jge
loope
outsb
push
cmpsb
mov
dec
ret
adc
mov
movsl
adc
aam
jge
out
ljmp
pop
xchg
dec
test
sub
jo
dec
adc
sub
jno
inc
int
outsb
pushw
mov
dec
and
js
mov
in
adc
and
repz
ss
fcmove
int
repz
lret
add
sbb
xchg
fiaddl
lods
push
push
cmp
inc
lock
inc
test
xchg
cltd
lea
in
ja
cmpb
dec
lods
aam
lret
cmp
sub
inc
mov
sub
add
mov
out
or
je,pn
fldenv
and
sar
mov
lcall
xchg
pop
inc
arpl
imul
sbb
fadds
fwait
rclb
push
test
loope
or
inc
push
sub
adc
popf
mov
mov
out
xor
rorb
stos
sbb
cmp
mov
xor
icebp
ret
movsl
pop
movsl
or
and
xchg
adc
jl
pusha
push
mov
lret
lret
ret
mov
movsl
call
push
pusha
sub
out
or
ss
or
in
test
inc
sub
mov
mov
mov
aad
and
sbb
repz
xor
adc
iret
jmp
push
or
dec
ljmp
adcl
dec
mov
ret
xchg
daa
testl
mov
dec
and
cmp
cmp
stos
daa
and
in
mov
mov
repnz
inc
loopne
or
sbb
enter
and
ds
cmp
jno
sub
adc
loop
je
mov
test
mov
pop
pusha
xchg
jb
jg
dec
mov
iret
or
or
or
pop
out
mov
mov
mov
xchg
sbb
mov
sar
test
repnz
and
jp
js
or
daa
stos
out
cmp
test
xchg
lock
andb
sbb
fsubl
pop
addb
sub
rorl
push
jg
sub
jge
test
out
mov
loopne
mov
lahf
leave
shrl
stos
mov
lods
or
xor
or
loopne
ror
pop
fistps
scas
int
sub
test
ret
cs
pop
dec
jecxz
popa
sub
sti
cmp
or
loop
jnp
push
imul
sbb
ja
jb
push
add
dec
xor
cmp
jno
out
je
fwait
cwtl
pusha
lcall
sub
or
jb
xchg
enter
das
test
push
fisttpl
les
shll
pop
cli
outsl
sbb
mov
pusha
mov
xchg
out
insl
xchg
inc
outsb
or
call
push
pop
and
cmp
daa
adc
mov
repz
xchg
dec
sbb
or
push
mov
mov
rol
sbb
aas
mov
pop
mov
inc
inc
shlb
push
xchg
jp
push
push
mov
dec
out
push
in
out
cmc
int
push
aaa
int
outsl
inc
lea
and
push
jbe
sbb
sub
out
ja
psrad
lea
fstps
pop
loopne
and
nop
test
and
mov
push
insb
xchg
push
push
xchg
pop
arpl
lds
mov
add
rclb
outsb
xor
into
adc
or
inc
clc
add
jo
and
arpl
popa
sub
insl
es
mov
in
inc
mov
lds
enter
gs
clc
aam
loope
cmc
adc
arpl
mov
jb
and
inc
mov
cmp
nop
push
pushf
sub
mov
mov
or
push
rorl
mov
fcomi
xor
jae
push
mov
jae
add
leave
aam
push
dec
aas
jp
lds
stos
test
jae
mov
xor
jb
rcll
test
push
sbb
inc
or
cld
fwait
sbb
inc
lret
adc
jecxz
ror
iret
jg
fcompl
outsb
xchg
scas
out
mov
repz
int3
adc
cmp
bound
mov
pop
push
push
addr16
add
xchg
icebp
bnd
push
test
shl
lock
shlb
enter
adc
test
imul
dec
pushf
mov
bound
das
xchg
rcll
aaa
or
and
addb
cmp
mov
imul
mov
lock
arpl
lahf
fcoml
push
push
sar
push
or
or
enter
je
lock
jnp
push
lds
cmc
iret
add
pop
jne
xlat
dec
clc
cmpsl
sti
int
adc
ss
pop
dec
pop
adc
push
mov
sarb
inc
sbb
pop
shrb
mov
in
or
ror
into
outsb
outsl
sarl
ds
lret
adc
and
cwtl
mov
jge
mov
xor
xor
push
es
sbb
or
subb
sub
dec
and
pop
stos
sbb
dec
mov
lock
mov
jmp
lret
in
adc
inc
sbb
repnz
cmpsb
mov
xchg
pop
push
das
sbb
jb
stos
pop
push
xchg
insl
sbb
push
ja
aam
jp
mov
icebp
mov
addr16
addb
and
xchg
addb
dec
xchg
xchg
xor
mov
pusha
in
insb
lods
sub
int
imul
shlb
ljmp
scas
out
xchg
daa
cmpsl
lods
dec
mov
je
push
stos
jle
mov
add
push
es
repz
sub
sbb
lcall
pop
or
adc
int
sbb
in
pop
loop
or
out
mov
fisubrl
mov
lock
dec
xor
aas
sbb
outsl
cld
mov
shlb
dec
in
aam
int3
or
idivl
add
loope
or
out
add
jl
jmp
icebp
outsl
stos
imull
lret
or
loope
sbb
cli
lret
inc
out
dec
mov
test
test
xor
bound
pusha
cltd
xor
sub
inc
fldenv
das
fsubr
in
rorl
sub
pop
pop
fldt
xchg
inc
mov
cmp
xor
cs
aaa
add
test
pop
mov
sbb
insb
dec
daa
jno
pop
or
or
adc
sbb
nop
mov
jmp
push
into
test
lret
xchg
int3
lret
fildl
xchg
or
pop
sub
jmp
int
das
jg
add
mov
notl
lds
fs
mov
mov
xchg
sti
cmpsl
mov
test
in
movsl
inc
rorb
dec
cmp
xchg
push
popf
sub
aam
lcall
iret
xchg
cmp
pop
inc
or
bound
idiv
cmpsl
cs
and
push
jecxz
inc
jecxz
sub
sbb
pop
inc
popf
mov
mov
sbb
movsl
sbb
mov
jnp
adc
rol
push
or
jbe
pop
test
leave
sarl
dec
xor
ja
pop
fimull
cmpsb
xchg
cmova
adc
lods
movsl
dec
push
aam
push
negl
jmp
push
notb
pusha
lock
push
sbb
xor
stc
adc
lar
mov
inc
stos
in
test
sbb
subb
out
mov
cmp
inc
push
test
rcll
int3
inc
cmp
ret
mull
jns
jmp
adc
mov
dec
mov
scas
shl
scas
lahf
pop
leave
std
dec
jge
xor
cmc
pop
addr16
sbbl
adc
mov
xor
and
ljmp
outsb
das
inc
push
sarb
add
push
aam
mov
aaa
fwait
pop
jl
in
addr16
ss
push
shrl
jle
fbstp
lret
es
andl
pop
iret
cmp
sub
nop
fnstcw
add
xchg
call
pop
dec
push
fsubrs
popf
xor
mov
mov
sub
dec
sbb
test
mov
add
outsb
cltd
out
adc
call
lds
and
lock
push
pop
push
and
push
lods
or
pop
jle
jmp
out
addb
push
dec
std
lea
enter
dec
rclb
xor
ljmp
cs
adc
stos
xchg
or
mov
pop
sbb
sbb
inc
or
in
inc
aas
xor
subb
lahf
addl
shrl
xchg
lret
and
and
mov
cli
sub
fildll
test
fsts
es
div
push
mov
addr16
lds
mov
rorl
cmp
mov
xor
add
or
mov
aaa
pop
pusha
mov
das
add
ret
enter
leave
mov
imul
popf
outsb
fwait
inc
pop
lds
adc
lods
xchg
aad
xchg
lsl
js
push
cmp
pop
push
out
lahf
std
std
mov
dec
inc
leave
mov
jno
je
rol
gs
or
xor
aas
rcll
enter
pusha
fwait
pop
push
aas
adc
sbb
test
inc
test
jns
xchg
sbb
out
sbb
mov
or
test
cli
aam
cwtl
or
push
or
mov
and
push
mov
repnz
mov
aas
mov
xchg
inc
jle
xchg
adc
outsb
add
jmp
adc
add
cmp
sahf
dec
adc
lods
adc
out
clc
xor
divb
sbb
mov
out
in
jle
insb
loop
outsl
pop
sahf
cmc
pop
mov
ljmp
jbe
push
inc
fs
mov
test
cmp
mov
mov
xchg
aad
bound
mov
outsl
fmull
cmc
popf
dec
cmp
xchg
jl
sbb
mov
outsl
loope
in
dec
inc
cmpsl
and
lods
mov
lods
lods
loopne
nop
ja
nop
mov
enter
inc
cltd
iret
scas
gs
int3
push
adc
fistl
push
sti
gs
mov
ja
push
addr16
xor
addr16
fs
xor
push
jge
mov
and
xor
sbb
arpl
sarb
pop
adc
insb
fsubrl
xor
xchg
adc
aad
jnp
sar
sub
sbb
and
repz
xor
adc
inc
mov
out
xchg
fs
cmp
test
xor
outsb
inc
mov
imul
xor
and
or
xchg
shrl
adc
xchg
push
in
fcmovnb
push
test
sarb
sahf
fldenv
lret
sub
xor
enter
in
insb
loop
xchg
jo
test
fisttpll
cli
loope
idivl
jb
lock
push
ret
jbe
jp
hlt
rdmsr
add
and
push
clc
xchg
xchg
inc
push
ret
mov
repz
sbb
scas
int3
movb
add
cmp
jle
sub
cmp
xor
fnstcw
shll
jp
stos
pop
lds
fwait
sub
les
in
and
les
jne
pop
std
mov
repz
orb
negb
cmpsb
jno
push
mov
inc
xor
and
add
mov
xor
pushf
lds
jecxz
pop
mov
sbb
xchg
mov
in
adc
movsb
sti
lret
mov
jnp
sub
xor
mov
mov
lret
sub
repnz
shll
sub
mov
orb
repz
jecxz
mov
dec
test
aas
mov
ss
add
add
call
pop
lret
negb
jmp
sub
or
cwtl
mov
addr16
fnsave
adc
xor
cwtl
dec
addr16
jns
mov
mov
and
lods
out
bound
dec
js
jge
aaa
sbb
mov
mov
pop
es
mov
xchg
jge
sbb
adcl
adc
pop
jge
mov
push
add
or
aaa
lret
mov
push
out
aad
xchg
imul
in
cmp
sbb
lods
lcall
cltd
sbb
mov
or
data16
adc
jb
pop
push
jge
adc
push
or
sub
xchg
stos
push
pop
add
and
insb
sub
jae
adc
push
shl
sbbb
lods
jno
sbb
mov
jecxz
jns
sub
lret
imul
push
repz
adc
sub
insb
sbb
loopne
mov
push
jl
xor
dec
adc
movsb
clc
pop
bound
dec
insb
xor
or
jmp
es
mov
scas
addb
sbb
xchg
and
xor
or
iret
bound
and
aad
jl
jbe
aaa
jmp
mov
jnp
lret
les
xor
cmc
dec
or
inc
call
sub
rclb
lds
int
pop
je
sbb
push
and
ret
lret
pop
outsl
lods
jno
ljmp
fisubrs
aam
adc
cwtl
cmc
out
add
jp
xor
lods
hlt
cmc
xchg
xor
jp
push
test
cmp
pop
push
cmpsl
cmp
out
in
push
pop
cmp
outsb
pop
stc
xchg
add
add
clc
mov
xor
sarb
inc
lock
inc
in
out
out
lcall
pop
jp
mov
imul
hlt
int
dec
ffreep
jns
cmp
fadds
ret
fs
call
ss
xor
bound
insb
pop
je
rcrb
dec
sub
sbb
cltd
aad
pop
cmc
scas
pop
scas
mov
or
jnp
cld
lret
imul
or
lods
mov
lret
cmp
push
jp
cmc
inc
mov
shll
mov
sub
lret
push
sbb
shrb
adc
lcall
repnz
data16
mov
hlt
shll
add
pushf
lret
dec
push
and
nop
push
mov
add
mov
sbb
in
mov
inc
push
jns
out
out
inc
xchg
cmp
jg
mov
insb
sbb
fisubrs
add
call
fldl
les
sub
push
loop
adc
adc
push
mul
adc
inc
into
fcmovne
lret
or
jae
fs
pop
ljmp
mov
sbb
lods
pop
fwait
jnp
or
aad
in
test
rorl
enter
mov
inc
pusha
push
mov
inc
jp
flds
xor
test
mov
xor
int
push
movsb
icebp
incb
xchg
jbe
jne
out
add
repnz
imul
jnp
and
int3
pop
sar
add
arpl
stos
daa
scas
inc
and
pop
mov
popf
xchg
sbb
ja
inc
rolb
sbbl
xor
mov
mov
push
jge
test
in
addb
mov
xor
or
movsl
shl
mov
xchg
mov
mov
xchg
pop
loop
push
xchg
scas
test
mov
inc
xchg
pop
inc
dec
int3
push
cwtl
mov
mov
fadd
iretw
hlt
fwait
jle
out
jae
xchg
mov
rclb
data16
sti
xchg
pop
enter
xchg
sbb
mov
adc
mov
adcl
xchg
cli
mov
sbb
cmp
sub
cld
filds
adc
insl
adc
pop
cmp
or
in
test
and
adc
fidivs
loop
in
aaa
aaa
divb
jmp
test
mov
dec
or
inc
mov
push
inc
xor
fsubrp
fistpl
xchg
mov
sbb
inc
pop
scas
inc
cmp
push
cmpsl
pop
lahf
or
inc
cmp
lods
xor
xchg
dec
rcr
mov
pop
fnstenv
movsl
icebp
dec
pop
or
stos
les
or
sub
mov
mov
push
cmc
push
or
jne
dec
in
scas
gs
mov
dec
orb
mov
cs
bound
xchg
fstl
or
stc
push
cmp
js
mov
insl
in
es
ficoml
pop
hlt
into
insb
divb
pop
inc
mov
movsl
xor
scas
xchg
in
setne
adc
jbe
ss
out
out
sar
lods
cmp
push
ds
cmp
pop
out
dec
jmp
xor
or
pop
sbb
jle
lahf
testl
push
enter
loope
in
cmp
std
popa
pop
insb
adc
sub
push
out
sbbl
lods
add
dec
nop
mov
insb
js
lret
fs
mov
popf
push
imul
dec
and
xor
loope
rcll
xchg
iret
cmp
jmp
add
adcl
testl
mov
mov
stos
jns
and
fiadds
push
and
push
cmp
xor
mov
cltd
movsl
cmc
lods
dec
decl
mov
xor
scas
rorb
ret
popf
mov
add
rcrl
cmc
add
dec
stc
add
jg
xor
scas
outsl
scas
daa
cmp
sub
xchg
lods
and
xor
xchg
je
dec
aaa
push
push
sti
enter
rcll
push
movsl
and
xor
dec
cmp
das
sbb
call
out
jnp
jno
xor
outsl
sbbl
add
mov
adc
clc
scas
stos
jg
fidivs
sbbl
mov
repnz
add
ret
rcl
iret
jge
pop
cmp
add
xor
pop
xchg
in
mov
out
imul
add
add
jge
xor
cmp
or
and
mov
fistl
outsb
mov
jmp
fisttpl
sbb
sti
or
cs
sbb
ret
mov
mov
sbb
bound
jmp
mov
gs
jne
mov
shlb
xor
mulb
jle
in
push
fbstp
imul
push
out
mov
sub
sub
lret
shrl
out
xor
xchg
negb
push
fwait
mov
loope
ficompl
jle
and
outsb
pop
xor
js
xchg
inc
push
jne
into
dec
jg
inc
cmp
fists
cs
lcall
xor
mov
pop
leave
sub
add
and
call
jo
mov
fsts
fldenv
pop
bound
cmp
cltd
mov
or
nop
dec
into
shr
xchg
les
enter
pop
or
push
lds
or
inc
js
pop
cmc
mov
rcrl
in
clc
cli
mov
out
rorb
out
lret
test
mov
sbbl
jge
xor
fwait
shlb
mov
cltd
stos
mov
xor
adc
cmp
fcoms
stos
xchg
out
or
jle
stos
mov
pop
jle
fimuls
mov
jne
inc
pop
roll
stc
imul
inc
dec
mov
add
fwait
xchg
es
inc
add
sub
into
jo
xchg
xor
stos
mov
xchg
in
adc
jecxz
testb
mov
enter
push
arpl
and
outsl
daa
and
test
imul
dec
sbb
or
repnz
cltd
rclb
ret
push
xlat
push
jnp
dec
xchg
xor
mov
mov
sti
int
bound
pop
mov
popa
mov
jnp
je
lret
add
adc
and
sub
or
push
fs
imul
out
cmpsb
mov
and
insl
jecxz
imul
out
stos
mov
jnp
jecxz
dec
int
sub
aad
jmp
or
repz
add
push
lret
push
aad
out
jne
call
ss
icebp
lods
cmp
adc
jp
lahf
ret
sbbb
scas
push
and
icebp
pop
stc
adc
adc
movsl
adc
ret
mov
pop
lcall
sarb
aam
insl
sbb
pop
push
out
dec
mov
fdivrl
call
mov
jno
es
mov
dec
and
xor
bound
pop
xchg
sub
call
out
fwait
dec
jmp
push
scas
adc
in
insl
out
js
push
jle
push
push
sub
iret
mov
pop
stos
rolb
data16
cmp
mov
dec
loop
aas
outsl
fbstp
divl
cmp
mov
adc
pop
ret
mov
data16
fsubrl
std
sbb
ret
in
dec
adc
popf
inc
xor
scas
inc
cmp
sahf
jecxz
or
pusha
cli
and
and
jmp
push
jl
xorb
mov
inc
or
repz
xchg
sub
add
iret
cmp
daa
dec
shrl
or
inc
inc
jb
push
cld
sbb
jmp
test
xor
lea
aas
aad
and
loopne
jl
sbb
int
pop
pop
inc
xorb
in
sub
inc
or
test
js
test
fdivrs
dec
mov
xchg
sub
nop
sub
popf
push
sarb
fimull
and
cmpsl
test
movsl
mov
sub
shll
lret
sbb
pop
and
push
inc
dec
adc
rcrl
and
lds
jl
sbb
jno
xor
jns
test
push
pop
adcl
sub
jge
mov
push
into
insl
cmpsl
mov
lret
mov
hlt
je
fwait
or
jns
adc
adc
add
imul
and
shrl
xchg
ss
mov
mov
or
jnp
inc
aas
dec
test
faddl
xor
jge
adc
cmpb
neg
xchg
fs
loope
aad
or
das
mov
adc
jp
out
add
icebp
dec
and
jge
xor
inc
in
mov
xchg
jae
ficomps
dec
pop
cld
cltd
jb
ret
in
dec
loopne
nop
fwait
sarb
rcl
adc
ljmp
fbstp
jno
and
hlt
jae
lret
dec
lahf
pop
mov
and
and
adc
pop
or
ret
add
cli
out
inc
or
cwtl
jne
lret
or
call
daa
outsb
lret
dec
jb
cmp
add
rcrl
jecxz,pn
inc
xor
mov
mov
js
adc
inc
loopne
push
sbb
jae
cmp
mov
subb
push
jle
aas
int3
dec
add
xor
aad
xor
push
shr
mov
push
mov
lcall
xchg
sahf
gs
add
popf
movsl
sbb
dec
sub
jbe
cmp
enter
lods
stos
ss
cmp
dec
inc
adc
mov
lahf
mov
jae
out
repz
stc
mov
adc
arpl
movsl
sub
mov
lcall
adc
imul
lcall
and
cmp
push
jge
adc
inc
sub
ret
dec
inc
fbstp
xchg
push
stos
push
inc
in
push
and
xchg
dec
pop
int
sbb
nop
mov
mov
pop
test
mov
mov
fsts
xor
add
and
arpl
clc
jmp
leave
cwtl
cli
lods
mov
loop
lds
inc
jb
lods
cmp
loopne
push
add
jle
popa
cs
fadds
popa
jecxz
and
mov
js
sbb
psubsw
mov
icebp
or
dec
int3
les
add
pop
cmp
sbb
mov
je
push
xor
add
push
leave
or
xchg
movsb
repnz
jae
sub
mulb
inc
cmp
flds
aaa
mov
cmp
inc
push
adc
clc
aaa
cmp
daa
repz
inc
xchg
loope
insl
sub
packuswb
jecxz
ret
xchg
loop
pushf
adc
out
aaa
mov
call
mov
cmp
dec
out
inc
pop
cmpsl
je
popa
pop
popa
leave
imul
jge
dec
iret
je
push
push
das
push
and
fadd
mov
adc
in
out
mov
sahf
lahf
xor
sti
fnstenv
rcl
inc
int
mov
mov
imul
pop
movsb
es
adc
mov
mov
scas
adc
fwait
das
adc
shlb
fdivs
sbb
loopne
insl
inc
push
pop
daa
sbb
xor
data16
pop
movsb
stc
and
jb
les
cmp
mov
inc
push
cmp
pop
mov
cld
fxch
rolb
icebp
mov
insb
adc
in
ja
add
mov
sub
or
rcr
outsl
mov
hlt
xchg
pushf
cli
aaa
and
test
sbb
les
pushl
cs
adc
add
testl
neg
sub
repz
sbb
pushf
add
fldl
mov
xor
loopne
aad
cmc
orb
pop
in
mov
xchg
push
insl
bound
gs
push
mov
loope
sbb
jg
inc
lret
mov
mov
mov
test
jl
mov
mov
cmp
stc
mov
test
jno
sub
ja
mov
jae
jae
aaa
in
push
add
mov
sbbl
xchg
dec
mov
fisttpl
dec
leave
lds
aaa
sub
xor
test
clc
pop
mov
adc
dec
xor
insb
mov
mov
and
mov
and
movsl
xchg
cmp
fists
mov
dec
add
int3
xchg
movsb
sub
fsubs
repz
fdivrl
int
or
xchg
arpl
xchg
cmpsb
stos
mov
xchg
push
data16
dec
cmp
sahf
and
out
hlt
insb
or
or
jne
pushf
add
jns
mov
insb
ds
xchg
in
popa
xchg
lret
push
jg
dec
repz
idivl
pop
subb
addr16
scas
adc
imul
and
adc
push
inc
shll
adc
imul
idivb
lret
clc
dec
or
dec
mov
jecxz
lock
cs
xchg
sbb
sbb
cs
orl
xor
xchg
fisubrs
or
call
cs
lods
jo
sub
adc
mov
xor
dec
add
jge
pop
jecxz
pop
mov
mov
int3
mov
dec
add
mov
test
push
leave
mov
test
dec
cmp
int
sbb
cmc
cld
gs
shll
cmp
test
mov
in
addr16
mov
cltd
out
sub
test
sbb
push
aaa
push
pusha
es
mov
inc
lods
icebp
sbb
mov
sbb
scas
and
push
clc
das
subl
sbb
mov
or
les
jmp
in
xchg
ror
jl
xchg
mov
push
mov
dec
cmp
push
push
iret
cld
cmp
add
mov
andb
sbb
or
in
mov
mov
mov
lcall
lods
push
push
out
aas
les
xlat
lods
dec
pop
push
cmpl
in
std
push
mov
das
dec
push
rcll
icebp
mov
pop
jb
mov
int
dec
lcall
mov
xchg
mov
lods
inc
cmpsb
cmc
test
or
mov
int
lahf
std
icebp
orl
jecxz
mov
mov
loopne
lret
cmp
sbb
cmp
sahf
mov
add
cmp
lds
add
sbb
iret
jae
aad
rcrl
js
sbb
sub
es
bound
push
mov
cmp
fs
sub
gs
out
outsb
push
jge
sub
xor
mov
pushf
leave
pop
mov
cld
xchg
gs
pop
out
lods
cmc
out
cmp
das
push
mov
cmp
xchg
lds
pop
xchg
pushf
rorb
push
add
sub
mov
cmpl
fldenv
push
push
cmpsl
pusha
or
jb
lds
lret
mov
mov
in
std
bound
loope
push
repnz
or
out
xlat
sub
popl
xchg
inc
arpl
cld
pushf
pop
jle
packssdw
mov
xchg
hlt
and
pop
movsb
rorb
adc
scas
outsl
add
sbb
xchg
int
xor
jbe
push
andb
mov
and
test
dec
mov
or
sbb
lret
fwait
aaa
dec
shll
add
stos
ret
and
les
fdivs
mov
jno
sub
inc
test
or
outsb
out
adc
test
nop
andb
mov
lock
bound
imul
pop
jmp
add
pmulhuw
mov
popa
inc
adcl
rcrb
pusha
dec
je
rcrb
lcall
std
jl
pop
dec
loopne
arpl
fdivl
adc
add
movsb
xor
stos
cs
adc
out
je
xchg
jp
dec
insl
fnstenv
fsubrl
movsl
jne
ficompl
sbb
dec
lock
cmp
inc
pushf
adcl
mov
mul
dec
mov
push
or
add
pop
div
fadds
mov
out
and
imul
shrl
mov
mov
mov
movsl
sar
xlat
dec
jae
push
pop
cltd
adc
inc
mull
orb
ret
mov
and
add
test
fnstcw
adc
jecxz
repz
sub
push
adc
in
push
int
mov
cmp
pusha
mov
xor
notl
jnp
or
jge
test
sbb
xchg
pusha
sub
testl
mov
mov
sub
out
shrb
sti
gs
sbb
cmp
insl
imull
inc
mov
outsl
scas
push
idivl
xchg
jecxz
inc
add
std
jb
mov
xchg
add
int3
sbb
sub
fisubs
sub
in
shll
adc
adc
int3
aad
clc
in
add
stos
push
loop
cwtl
testb
jmp
cmp
jno
push
cmp
xor
int3
in
sbb
out
xchg
jmp
jo
xor
add
pop
fwait
clc
scas
test
je
push
outsb
mov
or
inc
loopne
ss
jle
jae
ljmp
cmp
lods
dec
rorb
mov
cmp
push
rclb
cli
ljmp
and
aam
add
int3
mov
in
ds
repnz
xlat
jg
mov
jb,pn
and
int
and
scas
aaa
icebp
mull
add
ss
pop
xchg
jp
fildll
mov
cmp
jecxz
cld
xor
mov
insl
xchg
or
cmpsl
xchg
adc
and
adc
cmpsl
or
push
inc
add
xchg
cs
mov
dec
sbbl
insb
mov
ss
pop
cld
pop
fdivs
arpl
or
cmp
jne
ficomps
incl
sbbl
mov
adc
mov
icebp
pop
inc
pop
mov
inc
mov
push
dec
xorl
jnp
push
cmpxchg
sbb
lcall
cld
enter
outsb
out
push
inc
pusha
test
jp
dec
arpl
cmp
cltd
xchg
adc
inc
stc
ret
repnz
mov
data16
sub
adc
sub
loope
adc
das
test
in
xor
test
daa
test
mov
pop
data16
push
jbe
lret
filds
push
int
jbe
pop
push
nop
into
sub
mov
push
add
fsubr
repz
xchg
add
sbb
out
inc
mov
icebp
jle
pop
ja
xlat
pop
add
cmp
adc
in
add
nop
adc
mov
outsb
lahf
scas
out
dec
les
adc
cld
shrb
nop
xchg
cwtl
dec
aad
pop
js
jge
js
das
loopne
fcoms
outsb
idivl
and
call
cmp
pop
addr16
adc
push
sub
in
inc
jle
ja
mov
add
cmpsl
cmp
cmp
shll
lds
cmp
in
cli
pop
jno
add
pop
jmp
dec
push
push
xchg
sub
jo
gs
xchg
or
dec
cmc
jmp
cmpsl
pop
out
cmp
ss
sub
xlat
lea
sahf
pushl
mov
mov
push
iret
xor
js
outsl
push
cmp
loope
fisubrl
push
pop
pusha
lea
idiv
pop
out
cmc
imul
or
pop
mov
ljmp
xchg
ret
sarl
mov
ret
push
mov
leave
neg
cli
les
pop
movsl
stc
and
pop
lds
jo
out
xor
imul
aas
dec
jp
xchg
jecxz
popf
mov
repnz
orl
subl
sbb
in
mov
jnp
mov
enter
and
lret
xchg
cmp
outsb
adc
les
inc
out
sahf
ret
out
inc
push
test
xor
stc
push
fists
xchg
mov
mov
sbb
gs
fs
out
test
fistpl
insb
lods
aaa
dec
out
lods
cld
mov
inc
jge
mov
pop
jg
mov
adc
ret
mov
push
jmp
test
dec
push
add
lods
inc
imul
rcr
nop
jnp
shll
and
lcall
dec
xlat
lods
stc
lods
ficoms
mov
pop
fistl
fdivrs
mov
push
andl
mov
adc
dec
mov
stos
xchg
fdivrs
cmp
cmp
daa
sub
sbb
push
imull
outsl
mov
lock
out
hlt
pop
inc
add
das
cmpsb
fs
xor
test
inc
cli
adc
pop
adc
add
popf
add
jns
xchg
stc
push
mov
jp
aad
das
add
dec
ficompl
or
jo
sub
call
repnz
outsb
jb
sbb
cli
lods
sub
fisubl
push
leave
mul
leave
xorb
insb
jns
sub
movsl
filds
or
mov
jno
jl
test
dec
fists
nop
push
clc
imul
mov
pop
int3
sbb
push
xchg
mov
mov
out
fcompl
ljmp
pop
jp
pushf
or
cmp
xchg
iret
xchg
test
mov
imul
push
rcl
sub
xchg
int
gs
daa
mov
sub
pop
mov
or
cld
rorl
xchg
negl
jmp
push
imul
cmp
pop
pop
mov
xchg
int
rcr
outsl
push
adcb
adc
mov
add
sub
sbb
push
xlat
dec
or
push
bnd
push
and
out
mov
dec
mov
out
dec
lret
hlt
pushf
sbb
sbb
shl
sbb
bound
gs
xor
sub
jb
xor
adc
out
test
ret
pop
sub
xchg
jle
inc
push
inc
imull
js
pushf
pushf
cld
fs
dec
ficoms
rolb
push
jns
add
and
mov
les
loop
sbb
push
jmp
dec
in
sbb
fcompl
cmp
pop
inc
lahf
rclb
shrb
dec
sahf
dec
insb
sarl
outsl
add
mov
xor
outsl
decl
daa
lds
mov
cmp
mov
out
shlb
push
lods
int3
lea
inc
mov
icebp
dec
lea
pop
or
and
lock
repnz
add
adc
aam
daa
rorl
pushf
mov
xchg
test
xor
xor
cmp
sahf
adc
dec
pop
cmp
mov
jmp
sub
inc
test
hlt
cmp
dec
xor
mov
inc
xchg
hlt
pop
dec
adc
push
xchg
daa
popf
sub
or
out
jle
fildl
or
mov
adc
inc
add
in
orb
mov
leave
addr16
lock
push
push
pop
and
loop
dec
cmp
int3
and
sub
scas
shll
xchg
pop
out
and
jns
movsb
pop
mov
gs
xor
jmp
es
nop
pop
fcomi
dec
into
jno
dec
push
cmp
mov
mov
cld
mov
into
ja
or
inc
int3
dec
and
jo
stos
jmp
fsubp
iret
cld
mov
rolb
or
mov
mov
xchg
xor
leave
daa
adc
loope
push
js
popa
jns
xchg
ss
nop
or
add
xchg
fmull
sub
mov
cmp
test
stos
and
imulb
out
dec
pop
inc
xchg
xor
mov
fdivs
mov
lods
jnp
or
pop
ss
pop
push
lock
dec
pop
sub
movsl
in
lret
in
mov
arpl
shr
imul
cld
js
xor
dec
rcrb
add
fists
es
xlat
or
add
jb
pop
and
ficomps
add
mov
sbb
cli
or
popf
push
sub
sti
mov
imul
fs
iret
push
ret
pop
dec
lcall
outsl
pop
mov
out
push
mov
fsubr
lods
push
cmpsl
pop
cltd
xor
or
mov
sub
jns
pushf
fildll
or
imul
dec
add
mov
jno
mov
push
add
sub
cli
xchg
inc
rolb
mov
icebp
icebp
add
xchg
in
sahf
adc
sub
push
inc
xchg
insl
mov
adc
fdivs
daa
mov
test
push
mov
in
fimuls
mov
adc
gs
xchg
mov
push
rcl
sub
mov
fstl
push
xor
jo
outsb
or
in
push
jg
test
stc
leave
sub
iret
mov
dec
pop
or
sbb
movsb
mov
dec
mov
mov
les
imul
inc
ljmp
leave
dec
cmc
or
adc
stos
mov
cmp
sbb
add
rcll
out
std
std
jne
scas
cmp
push
je
mov
add
sub
jno
inc
loopne
jb
sub
ret
sbb
jo
sub
fildl
jg
mov
mov
mov
sbb
jnp
aad
xchg
pop
push
jns
rorl
pop
mov
test
dec
push
xchg
add
lea
pop
dec
cld
inc
jnp
cmpsl
mov
xor
push
xor
sub
pop
xor
lret
mov
push
pop
xlat
sub
dec
mov
mov
xchg
sti
rcrb
loopne
and
xchg
xchg
das
xor
adc
jle
in
adc
jae
mov
fcom
or
mov
sub
outsl
push
mov
stos
add
scas
and
lock
lahf
repz
mov
pop
loope
decl
adc
iret
pop
xchg
lods
pop
cmp
sar
hlt
fisubrl
xlat
in
sbb
mov
mov
fs
and
xor
repz
mov
xor
mov
shlb
out
jae
je
adc
out
jle
xlat
pop
sbb
xchg
dec
fisubl
cltd
aaa
add
jnp
add
movsl
mov
call
aad
movsb
and
mov
adc
imul
push
lahf
ret
xchg
mov
pop
mov
daa
lahf
xchg
xlat
cli
imul
fdiv
repnz
sub
dec
mov
int3
cli
mov
jnp
icebp
icebp
adc
mov
insl
or
jle
pmulhuw
push
rcll
inc
or
mov
daa
cli
push
inc
fisubl
or
mov
add
addl
push
loope
jbe
enter
jecxz
push
fildl
jo
dec
xchg
jb
sub
pop
pop
hlt
in
imul
push
pop
sub
mov
xor
mov
popf
cmpsb
xor
mov
xchg
jl
sub
sbb
dec
aaa
cmp
icebp
jl
loop
jne
cs
xor
addr16
mov
lret
mov
mov
mov
pop
pusha
adc
inc
sub
lret
addl
ds
fidivrl
jo
lock
mov
aas
gs
pop
mov
les
cwtl
or
shr
jp
or
data16
mov
clc
mov
js
ss
xor
mov
mov
pushf
test
mov
int3
inc
leave
jns
jmp
es
mov
and
bound
ljmp
push
push
and
mov
jo
call
and
mov
xor
xor
mov
nop
insl
iret
mov
mov
out
mov
fists
pusha
and
int
mov
pop
mov
movl
movsl
int3
mov
sbb
stos
dec
bound
loopne
cwtl
sub
repnz
call
mov
adc
call
ja
mov
das
imul
lcall
iret
call
fdivrs
xor
xor
iret
xor
and
xor
jno
xchg
cmpsw
mov
incb
lea
mov
dec
xor
hlt
imul
cmp
icebp
xchg
push
push
mov
xchg
pop
and
push
mov
aad
inc
push
mov
les
hlt
idivl
std
dec
icebp
cmp
or
xchg
sub
jbe
add
xor
xor
sub
pop
sarl
test
in
mov
cmp
sub
out
jno
cltd
aaa
jge
push
mov
mov
arpl
aam
mov
lret
mov
sbb
sbb
pop
movsb
jo
jbe
inc
push
add
jo
arpl
xchg
shrl
imul
scas
inc
jnp
mov
dec
cmp
in
xor
fnsave
mov
imul
mov
pushf
cmovbe
fisubrs
aaa
cmp
xor
xor
cmpsl
leave
dec
insl
test
loopne
adc
inc
popa
stos
adc
push
iret
jo
mov
or
add
ror
fisubrl
sub
testb
add
cwtl
push
mov
out
in
cwtl
inc
cmc
les
adc
int3
and
aas
int
fld
out
insl
dec
mov
sub
ffree
sub
inc
sbb
rclb
xchg
mov
dec
addr16
lret
testb
push
inc
cmpsb
push
dec
or
loopne
jne
or
jecxz
xchg
pusha
mov
cmp
jmp
xor
jg
or
insl
jns,pt
rcl
call
jno
outsl
out
mov
arpl
aad
dec
xor
inc
dec
gs
xlat
xchg
mov
pop
lods
mov
les
fstps
in
jae
in
aas
push
cmpl
jecxz
loopne
fucomp
jecxz
mov
fdivr
cwtl
push
popf
aad
mov
aaa
add
mov
mov
fwait
adc
xor
aas
ret
icebp
jle
sti
xchg
fistps
sub
rcll
cmp
mov
aam
aas
insl
inc
ret
xor
lods
mov
push
scas
add
pop
mov
inc
addr16
arpl
jbe
and
loop
push
sahf
enter
pop
sahf
addr16
jg
pop
sub
out
inc
xor
dec
pusha
mov
movsl
jne
xchg
test
mov
or
insl
pop
jno
mov
push
repz
mov
add
mov
aad
mov
ljmp
adc
mov
hlt
mov
pop
fsubrs
sbb
aad
add
aad
lds
dec
xchg
push
int3
or
and
cld
js
push
jmp
arpl
sub
cmp
sti
mov
dec
pop
in
push
cmp
fcoms
jae,pt
push
push
in
or
and
sbb
dec
sbb
adc
jns
or
nop
sbb
sti
xchg
pushf
jno
sub
add
sub
stos
cmpsb
push
jge,pt
dec
rorb
aad
cmpsb
leave
jp
cmp
xchg
or
notl
and
add
out
mov
adc
mov
pop
outsl
and
das
push
and
xor
add
fildll
mov
lods
fcoms
mov
outsb
mov
insl
mov
dec
stos
pop
icebp
lahf
je
jno
jbe
mov
push
jp
adc
inc
mov
in
test
push
dec
or
xchg
jge
cli
mov
xchg
push
ja
add
shrl
push
cmpsb
shrb
mov
mov
cmp
dec
and
popf
adc
mov
mov
gs
mov
sbb
sbb
inc
mov
sbb
or
test
sbb
push
and
sbb
jg
inc
and
popf
ljmp
test
test
repz
test
lods
sarl
adc
mov
xor
insl
push
leave
push
bnd
mov
dec
xchg
dec
loope
add
test
jns
pop
leave
jno
cmpsb
jbe
mov
pop
incb
xor
mov
add
je
leave
add
ljmp
adc
out
mov
imul
fs
xor
push
cltd
push
fnsave
in
loop
mov
xor
insb
mov
jge
dec
shlb
fdivrs
pop
pushf
inc
push
push
clc
repnz
jmp
aam
pop
xchg
dec
ret
xchg
test
rorb
pop
jno
cmp
leave
jns
stos
sbb
mov
xlat
loopne
mov
xor
mov
xchg
xchg
cwtl
sub
jp
jge
sarb
jle
outsb
imul
lds
pop
dec
jne
aaa
imul
cmpb
add
ret
mov
pop
fstl
xor
aad
jae
adc
push
mov
cmp
dec
and
mov
push
subl
or
stos
dec
and
pop
xor
jns
jno
ljmp
push
in
in
rcl
xchg
repz
xchg
aaa
cwtl
ss
sahf
lahf
cmp
das
cld
sti
adc
sub
dec
data16
dec
shr
mov
leave
push
mov
mov
fisttpl
mov
adc
jmp
or
xchg
cmp
cld
mov
out
mov
inc
ret
dec
xor
lahf
or
mov
std
or
lea
fsts
mov
fsubr
and
popa
shl
mov
lahf
test
ljmp
dec
nop
arpl
sbb
fucompp
shlb
push
cmp
xchg
or
popa
pop
dec
ss
in
cli
mov
inc
arpl
and
int3
or
sub
mov
fnstsw
js
imul
ret
std
test
shll
jne
xchg
jne
adc
lock
out
int3
pop
test
stos
jbe
inc
shrl
inc
xchg
and
adc
pop
mov
jno
sub
lods
loop
sub
sbb
push
inc
cld
sbb
ja
push
jbe
xchg
out
add
pop
mov
inc
and
fucom
loope
mov
stos
jl
jae
imul
adc
xor
fbld
adc
mov
dec
rcl
cmp
movmskps
ret
push
iret
shlb
pusha
xchg
in
dec
scas
mov
cmpsb
test
xchg
mov
cmp
and
mov
pop
jbe
jecxz
mov
or
roll
ss
incl
xlat
mov
sbb
fwait
push
insb
mov
lret
inc
addr16
divl
xchg
movsl
icebp
adc
sti
ljmp
outsl
es
add
adc
sub
or
dec
inc
movsl
pop
mov
fnsave
sahf
pop
imul
filds
push
movsb
jns
mov
or
inc
add
cmp
mov
not
push
push
das
adc
xlat
or
int3
or
decl
pushf
aaa
push
out
sub
xchg
js
js
hlt
mov
pop
popf
movsl
fwait
jno
xor
inc
adc
and
mov
inc
inc
adc
jecxz
out
adc
lods
sub
jmp
mov
mov
inc
mov
inc
pop
push
adc
lret
lcall
movsl
ret
std
mov
mov
in
pop
shr
nop
jle
jno
cmp
psraw
and
sahf
int3
leave
loop
loope
pop
and
movsb
test
sbb
stos
test
pop
insl
dec
int
and
mov
xchg
outsl
dec
ss
inc
aad
imul
and
jecxz
andl
in
add
and
and
dec
add
insl
adcb
inc
lods
shl
xor
and
dec
push
xchg
inc
mov
imul
imul
and
pop
mov
mov
les
and
call
js
ret
lock
cld
fidivrs
and
push
or
sbb
test
sub
jg
cltd
in
or
mov
and
icebp
and
xor
popa
dec
and
lea
jecxz
adc
dec
cmpsl
cli
stos
xor
cs
rcll
outsb
jnp
ret
in
sarl
dec
xor
mov
negb
mov
cmp
mov
adc
lods
lea
inc
adcb
out
jle
or
jl
xor
xor
aaa
jmp
push
lret
sbb
xchg
jns
call
addr16
push
sbb
sub
test
lahf
rol
rcrl
rol
push
loopne
inc
int3
mov
push
push
jg
or
dec
or
sbb
sarb
orl
add
les
movsb
jl
movsb
vmwrite
xchg
loopne
pushf
inc
dec
jnp
lcall
inc
filds
sub
jle
and
push
sbb
stc
pop
xor
mov
adc
mov
inc
imul
stos
dec
pop
add
xchg
movd
notb
xchg
push
push
sbb
fnstsw
cld
rcr
ja
mov
gs
lds
rcr
lods
loopne
outsb
out
dec
cmp
testb
mov
test
sub
push
loope
xchg
xchg
sub
bound
sbb
xor
enter
movsb
pop
fists
mov
cmp
push
mov
jmp
gs
imul
iret
push
jge
stos
push
aas
jmp
mov
inc
sti
mov
mov
or
inc
shll
add
outsl
addr16
das
xchg
outsl
sbb
or
add
hlt
xlat
inc
sbb
mov
rclb
mov
sbb
imul
inc
cltd
jge
xchg
loopne
sub
sub
mov
hlt
and
push
lds
fwait
dec
xor
sar
adc
mov
or
pop
bnd
jp
ret
incl
pusha
mov
or
mov
imul
xchg
out
sbb
cmp
andb
mov
inc
mov
inc
ljmp
mov
pushf
rorb
jmp
sbb
outsb
rorb
cmc
es
cmp
scas
leave
cmp
mov
push
mov
mov
cmp
cmp
imul
mov
xchg
adc
in
inc
xor
xor
out
loop
inc
xor
and
jbe
xlat
push
fistpl
outsb
mov
add
mov
fyl2xp1
loope
pop
xlat
pushf
movb
scas
jns
fistpl
stos
std
cli
add
inc
mov
stc
and
mov
mov
call
lahf
mov
or
gs
pushf
pusha
inc
mov
mov
push
add
pop
cltd
std
ss
push
or
dec
jb
and
cmp
or
cwtl
lock
nop
sahf
rorb
pop
pop
lret
les
sub
dec
xlat
scas
mov
xor
test
jle
ss
jp
rol
movsb
mov
adc
jne
lock
outsl
es
jo
pop
push
daa
imul
jb
loope
movsl
lock
aas
jne
icebp
cmp
arpl
push
popf
adc
leave
lcall
scas
sbb
pop
mov
loopne
loope
cmp
lods
push
xchg
stos
push
push
pop
pop
movsb
push
cmp
pop
test
out
xor
nop
inc
out
icebp
mov
and
fs
jge
outsb
rclb
push
mov
fxch
inc
gs
fmuls
dec
xchg
dec
jb
loop
js
je
fwait
pop
xor
jne
scas
test
daa
icebp
sbb
mov
out
push
ds
rorb
movsl
adc
sahf
cwtl
add
xor
mov
loope
adcl
xor
fs
jmp
shll
out
js
cmp
push
add
fistps
sbb
pop
rcrb
sbb
call
movsl
mov
in
dec
mov
popa
fcomps
fistps
cli
xchg
add
test
mov
adc
push
call
xchg
sbb
nop
les
negb
mov
cmp
loopne
roll
or
dec
adc
dec
lcall
fdivrp
mov
popf
jmp
adc
fisttpl
rol
push
inc
mov
test
xchg
stos
sbb
outsl
mov
inc
adc
ljmp
or
hlt
mov
sub
dec
out
adc
outsb
mov
xor
flds
imul
inc
inc
or
aas
mov
lcall
sbb
mov
sti
or
iret
aaa
lret
inc
insl
xchg
aad
into
aad
inc
dec
add
insb
mov
aaa
ret
sub
cmp
in
addb
push
fs
push
xor
iretw
in
push
cmp
mov
mov
fwait
test
sbb
xchg
mov
sub
lahf
jle
pop
lods
xor
and
pop
jp
les
test
xor
xlat
test
aad
ja
mov
pop
imul
loope
inc
xchg
psrld
and
roll
test
pop
ret
aaa
and
inc
test
pusha
and
pop
shlb
std
xor
cltd
shll
lahf
pop
mov
lret
int3
mov
lcall
mov
fsubrs
cmpsb
jecxz
or
pop
dec
or
out
lods
push
call
cmp
push
shrl
stc
addr16
bound
std
xchg
psrld
lods
mov
adc
imul
mov
repz
push
cld
mov
cmp
add
jl
ret
test
or
push
arpl
lahf
repz
adc
ljmp
jae,pt
aam
add
movsb
jnp
sub
leave
cmp
call
xchg
test
sti
mov
sbb
and
stc
leave
arpl
dec
fmull
sub
xchg
cli
test
ljmp
pop
xchg
xchg
dec
std
outsb
cld
cld
ljmp
sub
adc
adc
cmp
out
cwtl
or
cmp
orps
add
in
sbb
sarl
imul
inc
fiadds
xchg
in
mov
leave
call
push
repnz
mov
adc
or
inc
in
mov
mov
jmp
dec
out
addr16
xor
lock
mov
jnp
fadd
out
add
jle
imul
and
dec
andb
cltd
mov
pop
ret
lret
pop
in
add
add
xchg
and
push
xchg
mov
into
mov
sub
scas
and
pop
pop
movsb
inc
nop
inc
fdiv
pop
adc
push
jge
cmp
jae
add
clc
ja
pop
and
int
and
cltd
loope
sarl
pop
mov
cwtl
insl
cmpsb
pop
sbb
push
dec
loop
mov
push
mov
jbe
pop
push
jmp
cmp
and
sbb
lahf
out
cmp
sti
lds
push
sbb
loope
outsb
addl
das
std
cltd
xor
cmpsl
adc
lcall
cli
and
jnp
adc
jae
aas
push
dec
rcrb
xchg
jge
es
sahf
push
aaa
pop
push
repz
cmc
daa
testl
out
icebp
adc
mov
fcom
outsl
loopne
mov
jo
jecxz
cmp
out
mov
sub
or
lahf
insb
push
outsl
enter
ss
lds
es
dec
das
test
mov
cmc
icebp
and
add
jge
leave
mov
mov
xor
xor
sarl
jo
sub
cmp
cltd
push
xor
movsb
push
sbb
cs
pop
jae
cmovno
sbb
mov
jle
stc
loope
mov
aam
pop
mov
lret
dec
mov
bound
popa
shll
inc
add
xchg
loop
xchg
mov
insl
sub
aaa
loop
ret
js
xchg
repz
xchg
pop
fistpl
sub
inc
mov
fs
cli
mov
loope
or
movsl
push
and
lea
dec
pop
hlt
mov
mov
lock
mov
or
sbb
mov
sbb
mov
addr16
pop
imulb
mov
adc
or
inc
out
ljmp
stos
and
mov
jg,pt
mov
repz
fs
jo
scas
scas
xchg
sbb
dec
out
and
dec
add
imul
movsl
jno
sbb
cmp
jl
enter
add
fwait
jge
data16
test
jb
test
loope
mov
stos
mov
loope
jp
pop
jmp
adc
subl
jnp
dec
push
or
cmpsl
jne
dec
mov
or
fsubl
loope
mov
stc
jl
fldt
popf
mov
cld
outsb
dec
int3
adc
cmp
jg
outsl
mov
push
push
jae
sbb
mov
jns
dec
ds
sub
or
cmp
inc
push
sub
jbe
sbb
mov
test
lods
jae
sbb
xchg
xchg
test
repz
std
sbb
jp
cmpsb
mov
int3
out
fs
iret
leave
inc
femms
fisttps
xchg
insb
xchg
add
mov
roll
or
or
repz
mov
repz
bound
test
clc
mov
orb
and
aam
sub
pop
mov
mov
mov
sbb
mov
mov
or
push
xor
leave
sbb
xor
xchg
bound
insl
repz
lds
mov
adc
xchg
cmp
mov
hlt
pop
outsb
arpl
rcrl
pop
push
cmp
sbb
add
std
insb
adc
mov
loopne
ds
outsl
and
mov
je,pn
or
lahf
std
xor
jns,pn
push
dec
mov
dec
test
int3
dec
fst
inc
xchg
fldt
xor
ret
dec
es
dec
insl
dec
pushf
andl
and
xchg
adc
mov
bound
xchg
add
mov
adc
imul
movsb
push
rolb
push
int
inc
push
xchg
jno
out
dec
test
loopne
lock
mov
stos
ret
cli
dec
fcomps
ret
shlb
shrl
sub
push
sahf
add
xchg
rcrb
or
cmp
jmp
cmp
js
shr
in
repz
mov
adc
mov
outsb
cmpb
pop
jmp
repz
cli
inc
pop
pushl
adc
cli
sbbl
sub
lahf
pop
mov
cmp
add
pop
std
nop
clc
push
or
movsb
sbb
mov
xor
mov
push
fistl
adc
add
xchg
jp
sub
pushf
les
shll
and
xchg
sbb
dec
jo
enter
push
dec
mov
out
sti
cltd
mov
stos
cs
inc
and
sub
mov
push
in
xor
sub
add
cmp
sub
sarl
cmpl
lret
pop
push
jae
or
aas
sbbl
dec
testl
sahf
cs
icebp
pop
call
aad
mov
push
repnz
fwait
adc
dec
jno
mov
pusha
call
mov
test
xchg
sbb
data16
sti
ja
mov
sub
cmp
testl
add
lret
pop
xor
inc
add
mov
dec
pop
test
mull
int
jmp
cli
pop
ret
pop
mov
aaa
jb
pushf
ret
mov
add
fisubrl
fmul
rclb
push
sub
jle
jae
leave
pop
xor
adc
xlat
pop
repnz
iret
pop
mov
xchg
xor
jg
push
cltd
hlt
fwait
movsl
fadd
psraw
push
gs
and
arpl
lcall
xchg
lcall
xor
lock
mov
mov
test
mov
cmpsb
pop
mov
pop
inc
pop
pop
lret
fisubs
sar
mull
repnz
inc
mov
mov
repnz
push
lcall
sbb
data16
jl
pop
mov
fsubs
jo
cmpsb
pop
xchg
call
sub
inc
mov
out
xor
test
insb
pop
out
mov
les
mov
push
lds
cs
add
iret
outsb
sahf
xchg
je
ret
pop
or
test
push
call
push
dec
int
bnd
enter
mov
xlat
aad
inc
repnz
xchg
lods
jb
cmp
fs
ss
inc
push
iret
push
test
idivb
pop
aas
decb
push
outsb
fucomp
lahf
aaa
andl
sub
push
sub
fstpt
xor
jno
std
add
jg
pop
sub
movl
jg
push
adc
dec
cmp
push
cli
and
and
push
mov
aas
cmp
xchg
adc
inc
xorl
scas
pusha
mov
rol
inc
xchg
cmpsb
inc
xor
lea
mov
rol
js
mov
dec
mov
push
rcll
int
push
out
and
scas
xchg
jl
xchg
icebp
mulps
jnp
add
xchg
add
ljmp
and
xchg
ror
and
outsb
dec
jg
jbe
xor
sbb
pop
hlt
out
insl
insl
cmp
xchg
mov
mov
daa
fs
lds
testb
jne
ljmp
scas
mov
jp
xlat
je
and
jmp
sbb
pop
mov
subb
call
cmpsl
sub
fs
cmp
push
xchg
or
and
test
cltd
sbb
sbb
xchg
aaa
je
add
lcall
sbb
loopne
push
mov
mov
mov
ror
sub
int
pop
mov
loopne
sti
std
add
icebp
cld
subl
cmpsb
imul
inc
cli
sahf
nop
dec
bound
test
aam
xlat
adc
in
ja
xorb
sbb
sub
jp
lock
mov
sub
dec
dec
out
adc
movsl
jl
lea
sub
fs
insl
jno
fidivrs
xchg
xor
sbb
cmp
int
bound
or
shrl
or
and
movsl
dec
lock
inc
push
stos
jns
sbb
mov
jno
loop
cmp
push
sbb
jp
and
adc
imul
dec
out
ret
dec
ljmp
pusha
faddl
and
push
jl
sub
stos
pusha
mov
std
sarb
pop
roll
pop
rcll
push
fwait
loope
pop
scas
int
xor
xchg
xchg
jbe
push
addr16
adc
mov
inc
clc
push
mov
and
fstps
add
loop
jg
mov
cmpsl
popl
sbb
add
rolb
repnz
aaa
cmpsb
les
mov
shlb
mov
fiaddl
push
sbb
sbb
aam
imul
jl
in
adc
xchg
inc
xlat
in
std
sahf
inc
in
inc
clc
aam
or
sbb
fwait
push
or
orl
mov
imul
scas
adc
movsl
inc
pop
in
mov
sti
inc
sbb
sbbl
or
stos
inc
xchg
sbb
fsub
subl
mov
lret
add
or
loop
in
scas
jge
movsl
push
inc
icebp
and
lds
in
into
jbe
in
iret
mov
sub
inc
filds
xchg
jmp
and
xor
mov
sahf
mov
aad
sbb
rolb
dec
or
dec
sub
jle
lahf
cmp
jae
cmpsl
adc
lea
fiaddl
call
and
in
add
mov
out
or
dec
scas
xor
push
mov
cmp
push
das
adc
push
loop
jecxz
cmp
sbb
add
fnstcw
jp
inc
test
insb
subl
mov
and
repz
stos
popa
push
andb
or
cwtl
test
pop
arpl
es
orb
insl
inc
mov
push
mov
sti
fdivl
lahf
dec
jae
shlb
call
push
or
cli
cmc
mov
mov
divb
lds
dec
lcall
fistl
jg
jmp
sub
and
jecxz
repz
outsb
ljmp
nop
mov
cs
lds
and
mov
daa
popa
lahf
roll
pop
enter
dec
in
mov
pop
outsl
pop
dec
fists
sahf
mov
mov
scas
or
push
push
sub
add
ror
sub
pusha
addr16
xchg
jl
mov
xchg
pop
sub
out
add
sbb
sbb
mov
rcr
or
add
dec
mov
andb
icebp
xor
inc
push
mov
add
add
xor
scas
aas
mov
mov
in
xchg
mov
xor
gs
dec
push
sub
push
cmc
bound
addb
xor
xor
ror
sub
add
adc
or
dec
enter
cli
in
pop
arpl
xor
jp
sub
inc
test
repnz
push
fwait
insb
int
xor
shr
fisubl
pop
outsl
test
inc
push
cmp
les
mov
and
shll
lods
dec
mov
jnp
test
orb
inc
pop
jg
push
sbb
loopne
cwtl
mov
add
les
adc
je
and
push
or
dec
rol
out
inc
push
scas
dec
adc
adc
or
and
rorb
sbb
or
mov
stos
cmpsb
test
dec
leave
bound
mov
add
inc
push
fbld
xor
pop
pop
aaa
xor
pushf
jns
pop
fldln2
ss
jo
shrl
in
inc
cmpsb
or
dec
jae
push
sbb
inc
xor
and
mov
nop
mov
lods
cmp
ret
jbe
mov
bound
nop
dec
jecxz
cmpl
adc
and
pop
bound
pop
ret
xlat
jae
push
xchg
not
sub
repnz
mov
adc
cs
lret
adc
mov
push
test
fistpll
test
pop
cmp
icebp
dec
popf
push
xchg
pusha
mov
loopne
pop
enter
inc
inc
sbbl
jnp
in
or
sbb
pop
in
jmp
xor
inc
sbb
mov
hlt
jb
adc
loopne
adc
add
mov
ljmp
fidivrs
jmp
inc
nop
mov
push
ss
ss
adc
rol
inc
inc
pop
pop
xor
xchg
and
decb
mov
xchg
lret
fldcw
cs
mov
bt
and
and
subl
rolb
repz
and
add
popf
bound
test
mov
add
fcmovu
inc
lock
mov
test
in
scas
int3
add
cmp
inc
mov
mov
adc
cmp
fwait
xor
xchg
or
in
ja
sbb
sahf
push
mov
xchg
adc
inc
mov
ja
jmp
mov
nop
xchg
jmp
out
mov
pushf
inc
push
lods
adc
push
loopne
ret
test
ret
mov
ja
pusha
stos
xor
movsb
push
popa
xor
jecxz
or
dec
rcl
pop
adc
xor
lcall
leave
ficoms
fistl
js
mov
std
adc
mov
in
negb
movups
scas
xchg
enter
test
sbb
adc
cmp
loopne
jle
cmp
test
push
push
mov
mov
push
jo
pop
pop
in
leave
popf
cmp
cmc
addr16
dec
roll
sub
push
into
pop
and
mov
inc
addl
sbb
arpl
xchg
shr
add
cmp
inc
lds
into
sub
adc
push
jnp
mov
adc
jne
xor
or
xchg
adc
pop
inc
cmc
rcr
repnz
xchg
pop
jmp
stc
mov
add
fcmove
xchg
pop
xor
and
imul
ja
or
lods
fbld
dec
out
data16
mov
xlat
inc
call
fisttps
popa
xchg
jge
insl
subl
incb
push
lea
sub
sbb
jge
pop
pushf
fistps
xchg
add
mov
test
movsb
outsl
sbb
in
aas
iret
loop
popa
stos
orl
out
repnz
dec
aam
fldenv
out
xor
add
aaa
mov
fs
dec
cmpsl
outsb
rol
or
mov
fcom
pop
mov
or
pop
mov
rol
jg
mov
or
out
inc
ds
fs
call
add
test
out
idiv
sub
fnstenv
sbb
dec
mov
aas
push
push
mov
or
ljmp
push
daa
adc
mov
test
pop
mov
or
mov
mov
clc
daa
int3
into
in
xchg
leave
stos
inc
in
hlt
push
mov
lcall
test
add
push
aaa
pop
inc
mov
roll
xchg
mov
into
leave
ds
nop
cmp
sbb
insb
insl
daa
mov
inc
imul
cmpsl
clc
mov
insl
lea
sub
jecxz
xchg
push
je
mov
push
cmp
inc
inc
cmp
repz
das
jo
test
mov
push
clc
fiaddl
cmpsb
cs
pop
jp
je
aam
jle
cmp
fucomp
fcompl
repnz
aaa
adc
adcl
inc
roll
sub
ljmp
lock
xchg
pusha
mov
jo
out
out
lea
fwait
push
jne
add
les
das
mov
lahf
call
add
stc
je
dec
cld
popa
and
les
sbb
addr16
mov
mov
movb
jle
aad
das
sbb
in
fmuls
cmp
icebp
jo
cmp
dec
hlt
stc
pusha
or
aas
out
scas
mov
or
mov
mov
sahf
test
pop
dec
data16
into
fwait
add
aaa
mov
cmc
lahf
add
jae
shll
mov
movsb
ret
cli
xor
jp
sub
icebp
add
out
pop
adc
aad
aaa
adc
or
mov
stos
call
insl
pop
shrl
test
mov
imul
scas
icebp
xlat
pop
add
pop
fwait
xchg
xor
imul
je
xchg
repz
sbb
sbb
pop
and
fdivs
lahf
xchg
popf
jns
dec
mov
lret
mov
into
cmp
add
adc
xchg
aas
jbe
stc
test
mov
inc
cmp
cs
add
leave
cmp
xor
stc
mov
mov
mov
cli
mov
xchg
add
or
jne
jl
iret
fucomp
data16
mov
decb
add
dec
test
adc
and
jl
xchg
cmp
int3
ret
sbb
in
fsubl
inc
lahf
mov
pushf
bound
jnp
inc
jle
add
sar
push
dec
cltd
jnp
aam
mov
mov
dec
clc
adc
cmp
lock
mov
push
adc
repz
cwtl
and
mov
cmp
add
mov
mov
pop
mov
lcall
jns
cmp
sub
arpl
pop
pop
leave
orb
or
sar
loop
jl
shll
xor
xchg
popf
call
xchg
shrl
gs
or
insl
call
push
xchg
mov
add
push
clc
pop
prefetchw
or
xchg
lret
lret
addr16
or
xchg
sbb
dec
por
push
repnz
ret
fidivrs
test
repnz
jb
pop
aam
xchg
insl
je
fmuls
rcl
pop
mov
fcmove
dec
xchg
adc
jle
stos
dec
fisubl
lret
std
stc
jg
call
rclb
push
cmp
xchg
test
cpuid
pop
adc
mov
sahf
out
sbb
out
sbb
ss
xchg
sub
adc
roll
lods
ret
notb
xchg
mov
shl
add
out
xor
mov
or
dec
enter
movsb
lock
sbb
mov
insl
push
inc
sub
xchg
jmp
shl
outsb
mov
lds
mov
mov
imul
mov
jmp
or
add
cld
hlt
cmp
movsl
lods
call
add
lods
push
mov
inc
sbb
xchg
clc
xchg
push
mov
push
push
aad
sub
and
sub
and
icebp
fstps
test
outsb
es
add
cmp
mov
adc
sahf
pop
cmp
mov
lds
lea
xor
imulb
outsb
mov
dec
out
lret
iret
in
mov
xchg
lds
es
loope
out
xor
and
ja
das
adc
mov
idivl
mov
jns
jp
into
cmp
lock
sti
flds
cld
or
addr16
inc
imul
mov
pop
push
push
dec
cs
dec
outsl
xorb
cltd
add
cmp
mov
pushl
sub
mov
stos
mov
pushf
xor
or
push
adc
shll
mov
mov
mov
loope
sub
dec
fistpll
mov
push
sar
xchg
adc
mov
jbe
nop
nop
call
lea
push
xor
clc
aad
in
movsl
cmp
pop
arpl
leave
xor
or
sbb
out
subl
scas
xchg
fnstsw
sbb
mov
test
sbb
jne
fildl
mov
sub
inc
out
mov
dec
add
in
inc
clc
insb
lahf
adc
jle
xlat
andb
outsb
shl
xchg
or
jo
xlat
imulb
mov
mov
repz
mov
sbb
xlat
shl
and
push
sub
jge
xlat
cld
pop
mov
pushf
dec
cmp
js
and
jg
dec
sub
mov
pushf
icebp
dec
pop
hlt
mov
addr16
jo
ja
ja
out
cs
inc
pop
push
sbb
testb
ljmp
scas
push
lret
fildl
sahf
jae
scas
je
test
int
inc
popa
sbb
negb
xchg
out
inc
push
mov
and
and
test
popa
dec
xchg
or
xlat
mov
sbb
faddl
lret
dec
or
or
out
cmp
sub
adc
cwtl
data16
cli
lcall
jo
imul
shll
jno
lret
les
hlt
and
cmpsl
add
imulb
in
xchg
inc
dec
sbb
clc
mov
into
dec
ret
std
hlt
pop
or
popf
sbbl
mov
sbb
xchg
cmp
mov
jns
dec
mov
cmp
sub
mov
push
shlb
jno
xor
sbb
xor
jmp
push
mov
add
out
jle
lods
into
imul
mov
sub
cpuid
shrl
sbb
and
inc
stc
cmp
add
lcall
jecxz
dec
dec
popa
sti
ds
lcall
outsl
divl
and
sbb
push
xchg
ss
shll
add
call
mov
fisubl
mov
add
or
daa
in
mov
sarb
push
sbb
testl
jmp
or
int
mov
mov
cmp
cmp
frstor
test
cmpsb
mov
lock
ud2
xchg
es
and
and
pusha
add
xor
outsb
daa
fucomi
pop
xor
jle
inc
cmp
repnz
iret
daa
sub
sahf
mov
bound
dec
cli
xor
sbb
into
mov
pushf
adc
ss
leave
inc
jnp
adc
ljmp
ficompl
nop
cld
sarl
push
lock
cmp
aad
dec
inc
jmp
inc
push
out
in
cmpl
sub
adc
adc
imull
inc
sub
adc
rcll
push
call
nop
push
icebp
xchg
adc
mov
jo
xor
xor
cmpl
xlat
jmp
int
jnp
push
out
dec
leave
sbb
inc
mov
jbe
and
dec
ret
sbb
icebp
or
sbb
daa
sub
pop
xchg
mov
push
fidivs
push
sbb
push
jns
ljmp
push
cmpsb
dec
jl
xchg
adc
pop
movsl
sbb
pop
pop
inc
push
dec
mov
sub
push
and
ss
push
out
aaa
shl
pushf
fs
in
push
or
jmp
stos
inc
icebp
xchg
pop
mov
mov
je
cld
fwait
stos
movsl
enter
push
and
mov
mov
push
fs
xchg
jno
mov
lds
and
stos
sar
outsl
mov
xchg
push
pop
xchg
movaps
jbe
jl
mov
adc
fs
not
imul
xchg
ss
lea
cmpsl
je
mov
dec
mov
add
into
jbe
imul
push
in
divl
and
inc
aaa
add
ret
lods
push
jl
lret
adc
pop
ds
push
jnp
test
cmp
mov
mov
mov
or
dec
dec
sbb
in
fistl
mov
add
gs
shlb
push
movsb
lea
fisubrs
cwtl
sub
jns
jne
jmp
loope
xor
or
ficoms
inc
cwtl
movsl
sbb
lret
xchg
dec
ds
jae
push
decl
push
adc
loop
mov
mov
outsl
inc
loopne
shlb
cmp
popf
inc
ljmp
test
cmp
jge
dec
jno
adc
inc
clc
leave
cmp
out
jno
jbe
movsl
sub
jb
shll
jl
mov
push
push
push
jle
mov
lock
sub
dec
leave
scas
loop
cwtl
outsl
jl
movsb
add
mov
stc
cwtl
clc
cmpsb
aas
sub
adc
dec
xor
xchg
pop
cmpb
xchg
out
xchg
mov
cltd
daa
test
mov
out
repz
inc
cmp
shl
rorl
ror
stos
mov
arpl
push
pop
push
in
in
sbb
pop
js
imull
movsb
stos
in
push
sbb
push
jns
pop
stc
dec
aas
in
dec
lock
cs
pop
cmpl
std
pop
lods
imul
out
sar
mov
inc
mov
and
xchg
in
int
lea
idiv
or
lea
pop
xchg
jno
imul
nop
dec
mov
rorl
jg
jl
mov
shl
and
cs
out
aad
mov
mov
arpl
nop
jns
cwtl
mov
scas
fcoms
mov
fisubl
loop
and
and
mov
loop
inc
jnp
into
out
shl
jno
dec
nop
xchg
inc
or
sbb
mov
cmp
mov
jno
push
subb
fistpl
xchg
orb
mov
aam
pusha
ret
xchg
jl
mov
cld
adc
clc
in
pop
mov
sbb
int
add
dec
cli
lcall
fs
popf
fucomip
add
insb
inc
testb
int3
pop
ret
add
shrb
push
insl
mov
enter
fwait
outsl
test
sub
in
jmp
arpl
cltd
mov
xchg
sbb
add
dec
sbb
dec
scas
mul
scas
xor
loopne
cld
sbb
lock
xchg
jg
jecxz
nop
negl
cmp
cmp
cmp
cmp
pop
fs
xor
or
in
sub
jg
pop
mov
sbb
imul
sbb
dec
sahf
sbb
add
cli
mov
pop
shrb
push
add
shlb
sub
mov
mov
cmp
and
cmp
mov
push
pop
pop
ljmp
mov
mov
pusha
fidivl
ja,pn
das
sti
push
mov
addb
mov
mov
aas
dec
popf
pop
lock
jnp
lods
mov
cmc
push
inc
loope
test
or
ret
cltd
dec
sub
cmp
mov
mov
call
jbe
faddl
or
insb
push
push
and
jl
sub
test
scas
rolb
xor
jb
fistl
mov
das
outsb
ja
cli
cmp
xchg
sub
repnz
push
ja
scas
cs
gs
push
lret
push
adc
ret
cmpsb
sub
aaa
mov
jl
xchg
ret
sub
mov
in
sub
dec
mov
push
icebp
repz
mov
cmp
jle
xchg
stos
dec
insb
dec
inc
popa
mov
xchg
pop
lea
jp
outsl
out
xchg
ficoml
out
lahf
adc
movsl
mov
mov
js
sub
xlat
leave
jl
enter
fwait
dec
aam
add
add
imul
nop
sub
icebp
adc
repz
sbbb
pop
fdivr
fadds
repnz
mov
iret
shrb
xlat
pop
cmp
jl
aam
imul
mov
mov
cmp
or
hlt
idivb
je
popa
sahf
pop
scas
add
cwtl
test
dec
pop
test
mov
xor
mov
lret
mov
jecxz
pop
pop
cmp
jo
pusha
incl
mov
mov
sahf
out
dec
push
sarb
mov
or
leave
adc
xchg
xor
push
loop
adc
inc
shufps
sahf
outsl
shlb
push
adc
imul
lret
and
mov
push
mov
sbb
xchg
dec
add
push
mov
int
or
dec
cmp
lods
aam
or
xchg
add
dec
inc
push
imul
sbb
in
and
sahf
jae
pop
sarb
out
jge
adc
push
sbb
popf
cmp
pop
ss
fldcw
dec
or
nop
outsb
cmp
jo
mov
mov
fimuls
int
jge
hlt
jnp
into
add
mov
dec
cld
pop
mov
addb
psubsw
xchg
xchg
mov
mov
jns
aas
dec
scas
loopne
subb
and
add
outsl
int
mov
fs
popa
push
or
lcall
lret
stos
lea
stos
xchg
mov
xorb
es
loopne
dec
mov
ds
cmp
sbb
mov
arpl
lret
sub
shll
and
sub
fsub
xor
cltd
pop
jnp
jmp
inc
add
inc
xorl
xor
adcb
std
lret
nop
ljmp
imul
xchg
cli
and
mov
jne
cmp
cmpsb
jmp
cmp
bound
adc
and
aad
cmpsl
jb
or
into
insb
cmp
mov
jle
and
push
outsl
xor
mov
test
sbb
daa
call
leave
cmpl
add
push
sbb
out
popf
push
clc
orl
sti
fcomps
or
jbe
pop
ljmp
cltd
jmp
scas
push
push
std
pop
or
push
push
sub
lcall
gs
sbb
lds
jb
mov
pop
push
pop
dec
inc
jb
fwait
mov
pop
test
xor
pusha
arpl
rorb
fdivl
pop
call
jno
add
pop
xchg
lods
nop
out
and
mov
cmp
ja
aaa
mov
pop
jns
or
inc
int3
or
sbb
pusha
lahf
fwait
clc
mov
adc
hlt
shrl
insb
popa
mov
push
fisubrs
adc
mov
je
insb
andb
inc
movsb
outsl
repnz
xor
rolb
mov
adc
bound
mov
shrl
push
dec
xchg
mov
mov
mov
insl
push
jae
mov
movsl
mov
xor
daa
pushf
and
add
fdivrl
inc
popf
scas
add
push
repz
cmpxchg
xchg
xor
xor
movl
mov
aam
bound
dec
fwait
dec
xor
sbb
stos
std
fadds
jmp
mov
push
testl
xchg
dec
stos
call
inc
mov
adc
incb
jne
fmuls
loopne
dec
test
mov
scas
repnz
or
mov
hlt
sub
dec
pop
push
xchg
cmp
mov
mov
push
xchg
add
es
jmp
int
xchg
jmp
std
jg
cmp
scas
push
aas
mov
add
dec
leave
mov
adc
fdivrp
out
jge
outsl
jo
movsb
hlt
xor
leave
popa
sahf
mov
stos
xor
lahf
add
popf
cmp
sbb
in
iret
stos
nop
or
jno
mov
xchg
fmul
adc
fildll
stos
es
cmpsb
ss
adc
mov
repz
push
inc
mov
repz
add
push
dec
imul
sbb
in
cmpsb
fnstcw
daa
and
mov
lret
lds
ret
mov
in
sbb
push
or
dec
and
js
mov
aaa
cmp
hlt
push
mov
ret
mov
movntps
dec
bound
push
and
inc
call
sbb
push
inc
jg
loope
xchg
shrb
mov
popf
scas
mov
push
fidivl
adc
inc
sbb
loope
push
add
or
push
decb
mov
fidivrs
aaa
or
mov
pop
pop
adc
inc
push
cltd
push
movsb
cmc
jno
cmc
xor
and
mov
outsl
xor
inc
xor
xchg
ss
test
leave
ret
mov
cmp
and
sub
lods
mov
lcall
dec
pop
pop
repnz
add
inc
inc
aaa
cld
test
rolb
icebp
jo
add
pop
fiaddl
rcrb
or
aas
jp
lcall
xor
dec
cltd
sub
dec
mov
xor
jnp
leave
int
addl
and
in
add
mov
add
stos
and
cmp
dec
pushf
sub
push
dec
add
xchg
adc
xchg
or
xchg
adc
push
mov
or
std
sbb
and
sbb
cmp
hlt
fwait
mov
ret
dec
pop
pop
stos
roll
add
in
in
push
iret
lcall
addr16
dec
cwtl
sti
xchg
sahf
mov
pushf
mov
call
fildll
int
mov
sub
int
out
data16
xlat
sahf
dec
aad
inc
sub
idivb
sbb
rclb
sub
xor
mov
jnp
mov
jg
not
jl
sub
fsubp
les
adc
mov
outsb
fdivs
sbb
sub
mov
push
cmp
dec
or
sbb
stos
inc
stos
clc
adc
push
mov
mov
fadds
mov
jne
adc
push
push
daa
pop
pop
sbb
call
test
pusha
addb
data16
repz
adc
inc
scas
mov
icebp
fisubs
push
cmp
dec
add
idiv
outsl
cmc
movsb
sub
sub
xor
repnz
dec
xchg
sbbb
iret
xor
negb
jg
dec
mov
cmp
arpl
out
jnp
cmp
rorb
gs
jecxz
sbb
cmc
ficoml
or
pop
lcall
inc
or
pop
jle
adc
bnd
les
sarb
ficoml
jecxz
mov
popf
push
shl
sbb
mov
shr
pushf
cmpb
dec
lahf
enter
mov
sti
pop
clc
arpl
mov
mov
das
jp
jo
xchg
sbb
mov
int3
push
pusha
pop
insb
int
rcl
aas
lock
cmpsb
clc
loope
outsl
in
mov
mov
mov
inc
adc
push
pop
mov
add
out
insb
and
repz
xchg
or
pushf
xchg
rcrb
aad
xor
mov
subl
popa
xor
outsb
shl
gs
push
xor
mov
push
loope
jo
mov
mov
sub
das
xchg
xchg
fcoms
jns
mov
mov
cmp
mov
leave
lock
dec
ja
xor
add
scas
lods
and
and
sbb
addr16
push
pop
pop
bswap
push
push
dec
push
mov
je
mov
and
repz
out
mov
loop
imul
adc
fsts
shrl
add
jle
daa
int
movsb
pop
andb
stc
sub
hlt
cmp
or
notb
je
adc
ret
repnz
repz
loop
push
jno
das
mov
jns
stc
std
inc
dec
and
and
inc
adc
mov
mov
hlt
mov
mov
and
mov
jp
fistl
out
ja
lods
mov
sub
dec
cmp
shlb
lods
xlat
mov
ja
lret
mov
fsubrs
xchg
sahf
ljmp
scas
inc
sub
inc
fisubs
dec
lea
xchg
add
sbb
jns
and
out
jmp
leave
sbb
adc
lret
negl
cmc
jbe
jnp
mov
mov
rclb
and
icebp
lahf
sub
arpl
js
std
cmp
cltd
scas
xchg
in
test
mov
push
jns
adc
xor
jae
test
int3
icebp
cmp
push
ds
adc
outsl
movsl
xor
or
test
scas
shrb
imul
lret
xlat
pop
jns
scas
shrl
add
mov
idivb
adc
lods
adc
cmp
pop
xchg
xchg
das
sub
jne
sub
std
pop
cmp
sbb
bound
jg
fnstcw
cwtl
loope
push
push
sti
cli
push
mov
movsl
sub
sbb
movsl
arpl
jle
cltd
push
mov
mov
jae
pop
xor
pop
aas
sbb
pop
enter
mov
imul
int3
repz
cmp
test
add
call
mov
inc
mov
inc
push
push
xchg
sahf
mov
cli
cmp
pop
pop
sarl
jb
xor
xchg
in
mov
hlt
ss
fisttps
xor
loop
insb
and
popa
insl
imul
imul
clc
mov
mov
adcl
mov
adc
inc
xchg
xchg
mov
pop
mov
jnp
fisttps
sti
rcr
push
dec
inc
clc
mov
clc
sbbb
das
or
inc
loop
mov
xor
les
xor
add
push
aas
sub
cmp
pop
das
aam
xor
jns
and
icebp
imul
push
icebp
and
daa
add
add
lds
out
imul
pminub
arpl
and
dec
rolb
cmpsl
out
xor
ficoms
add
loop
stos
fisttps
inc
popf
pop
aaa
jns
test
push
xchg
js
lahf
mull
sahf
cmp
jl
xchg
int
incb
pop
mov
imul
and
xchg
add
rorl
lahf
add
or
mov
sbb
mov
cli
testb
push
add
sarl
and
push
cmp
jo
aam
test
push
push
mov
xchg
repnz
daa
ficompl
shll
movsb
mov
in
mov
jmp
xchg
push
adc
lahf
fisttpll
jbe
lods
fucom
mov
stos
cmp
pop
sbb
mov
sub
cmp
jns
mov
mov
scas
adc
mov
mov
cld
inc
jne
stos
mov
push
sub
outsl
mov
jbe
or
mov
or
dec
push
push
sbb
pop
sub
push
js
push
int3
cmc
aaa
inc
xlat
cmpl
jnp
shll
rorl
montmul
cmpsb
add
aam
enter
scas
xlat
adc
mov
mov
sbb
push
mov
pop
xchg
push
notl
push
pop
and
in
adc
jp
int3
daa
jmp
iret
repz
sbb
stos
pop
mov
daa
icebp
shll
cmp
push
cld
jle
int3
mov
mov
fstps
cmpsb
out
cltd
push
fs
scas
push
cld
xchg
fidivs
pushf
shr
shl
push
and
xor
dec
sub
xor
loopne
int3
popl
adc
insb
sbb
loop
sub
mov
and
and
adc
inc
or
cmp
mov
cmpsb
push
dec
js
sub
mov
jbe
jp
lcall
repz
lods
mov
sbb
jns
ret
add
jo
add
decb
xchg
data16
jb
in
sbb
mov
popa
jmp
cltd
mov
add
push
push
out
scas
mov
cmc
or
aas
xor
out
hlt
mov
push
imul
fbld
addr16
ljmp
test
sbb
or
enter
mov
hlt
sbb
pop
xchg
stc
xchg
mov
xchg
insl
sub
inc
jl
insl
push
push
push
cmp
jnp
mov
xor
mov
outsb
push
into
mov
dec
and
das
clc
cmpb
cmp
test
adc
jge
xchg
dec
inc
or
pop
push
xor
jno
pop
sub
fsubrs
ja
add
jmp
mov
dec
lahf
xor
add
mov
dec
int3
int3
in
aas
pextrw
cmp
icebp
cmp
nop
mov
es
cmp
mov
push
test
cs
pop
add
test
push
rorl
push
jb
xchg
dec
ret
cmp
inc
pop
je
dec
jns
push
enter
stc
jg
out
adc
mov
bound
and
lahf
xlat
sub
in
inc
mov
and
outsl
icebp
mov
adc
xor
out
cmp
int3
pusha
sbb
cvtdq2ps
push
dec
call
or
sub
sti
push
xor
push
pop
jb
adc
mov
or
imul
shlb
sbb
icebp
es
aaa
xchg
ret
jnp
ja
std
sub
xchg
cmc
pop
pop
or
cmpl
out
int3
stc
ret
nop
subb
aaa
filds
test
pop
sahf
repnz
jns
push
gs
loop
sbb
bound
mov
lock
mov
cmp
gs
aad
imul
push
test
aam
inc
fwait
ror
mov
inc
sub
or
inc
js
dec
sbb
jg
cmp
mov
mov
mov
mov
stc
cmp
test
setae
jl
inc
adc
sub
push
jbe
movsl
push
movsb
lock
adc
cmp
rcll
pushf
jbe
pusha
add
repz
aad
and
and
fidivrl
push
push
fptan
repz
ror
aad
cmp
aas
add
jb
mov
mov
push
push
mov
js
cld
xchg
pop
jb
fwait
jmp
mov
mov
cmp
int3
pop
hlt
imul
packssdw
push
add
jb
jno
mov
xchg
daa
dec
js
jbe
iret
testb
xor
xchg
in
and
ss
sub
jno
loop
push
pop
outsb
loopne
dec
scas
cmp
adc
mov
fldcw
scas
jl
mov
scas
repnz
jne
out
pop
sub
aaa
movsb
sub
add
lods
xchg
mov
mov
ljmp
and
idiv
dec
enter
xchg
mov
mov
lret
xor
ret
fstps
or
jp
out
jns
scas
ja
inc
push
xchg
test
scas
jmp
ja
cmp
ret
cmp
icebp
dec
jg
ljmp
fcmove
movsl
and
mov
idiv
push
mov
lea
push
pop
push
fs
incb
add
jb
jmp
push
mov
and
cmpsb
in
inc
push
xchg
ret
jge
push
pop
cmp
cmc
and
mov
ret
js
ds
mov
aas
aad
adc
ret
mov
int
push
and
sub
xchg
mov
sub
ja
movsb
xchg
je
sahf
jmp
iret
adc
inc
dec
inc
push
enter
movsl
clc
mov
jge
push
out
xor
dec
add
or
push
inc
xlat
xor
addr16
adc
or
and
dec
rcr
pop
sarb
fsubs
cli
pop
test
movsl
dec
int3
mov
inc
in
mov
dec
std
scas
lahf
into
pop
and
rolb
js
add
xor
mov
ss
mov
inc
mov
scas
stos
sbb
not
cmp
and
mov
lds
push
add
cmp
mov
sbb
sub
sahf
aam
cwtl
fstpl
shr
lahf
scas
or
out
mov
add
fnsave
jo
xchg
sub
ja
jmp
fcoms
xchg
roll
or
sbb
xor
fsubrl
pop
ds
mov
ja
and
mov
and
dec
dec
xchg
mov
lret
cmpsl
dec
xchg
jno
shr
pushf
roll
dec
loopne
lods
ret
clc
repnz
in
cmp
and
mov
imul
cmp
outsb
cmp
outsl
mov
xchg
push
adc
test
push
pusha
add
sbb
cltd
mov
jmp
cmp
in
inc
or
pop
nop
push
stos
push
mull
stos
pop
adc
and
arpl
test
xor
pop
loop
lock
rcr
stos
insl
fidivl
mov
out
jge
out
jb
pop
mov
or
mov
les
inc
add
pop
jge
int3
or
arpl
adc
mov
push
inc
push
je
gs
adcl
mov
pop
rol
out
leave
jne
add
sub
add
lcall
dec
pop
mov
std
jae
cld
stos
adc
int3
pop
test
int3
sarb
or
lea
jmp
lret
test
sahf
push
outsb
pop
outsl
sub
inc
stos
daa
or
or
mov
lret
pop
mov
imul
insb
jo
push
dec
arpl
hlt
xor
lret
xor
dec
frstpm(287
inc
aam
jp
ss
insb
xor
lret
jle
jg
sti
es
dec
adc
scas
pop
adc
rclb
daa
mov
packsswb
aaa
mov
inc
pop
cmp
pop
outsb
lcall
xchg
in
mov
xchg
dec
xor
sub
fnstcw
jge
dec
aam
add
add
in
in
xor
mov
dec
sbb
cmp
hlt
mov
add
mov
mov
push
dec
adc
mov
mov
cmpl
sbb
std
jne
sub
sbb
jmp
into
test
arpl
and
push
mov
insl
testl
lret
mov
add
cli
mov
inc
inc
js
and
mov
pop
sarl
mov
lods
xor
cmpsl
pop
xchg
jns
and
fbstp
inc
add
jle
repz
loope
push
xchg
out
adc
or
push
dec
orl
test
test
cs
lea
sbb
in
fstpt
sbb
jno
mov
nop
jb
loopne
and
lock
inc
pop
decb
lods
repz
mov
sub
sbb
ja
push
leave
pop
lock
cmp
mov
stc
aaa
push
jne
jmp
sub
mov
jnp
inc
cmc
popa
shll
dec
out
xor
cmc
inc
mov
pusha
aam
fisttps
push
pop
lods
and
sub
clc
mov
loop
adc
jmp
cs
and
out
and
pushl
dec
mov
mov
cli
rcrl
jp
adcl
into
hlt
inc
and
lahf
test
adc
mov
dec
sbb
adc
popa
mov
sarb
sub
jb
in
lahf
mov
inc
jle
push
dec
nop
js
fsub
cmpb
push
rorb
cmp
out
pop
shll
clc
xchg
mov
mov
roll
cltd
jle
loop
pop
lahf
mov
mov
cmp
repz
imull
inc
pop
aad
test
mov
mov
sti
cld
out
in
mov
mov
inc
rcrl
mov
lcall
mov
out
add
shl
test
sbb
sbb
xchg
shl
xchg
pop
pop
jecxz
jo
rcr
in
cwtl
fsubrl
pop
jbe
adc
test
sub
pop
aaa
adc
cmp
push
fwait
mov
shrl
test
lcall
fbld
popf
into
ffree
inc
pop
testl
je
adc
sbb
or
add
imul
add
inc
cwtl
fxch
movsb
pushf
test
jnp
pop
jno
add
pop
push
in
xchg
jl
ja
and
scas
mov
inc
mov
addr16
test
push
mov
sbb
lret
adc
or
xlat
lcall
cmp
mov
inc
adc
adcl
xchg
lret
jge
push
xchg
bound
ret
dec
fildll
testl
pop
repnz
fstps
lret
mov
xchg
lock
dec
mov
mov
add
jle
imulb
jns
out
hlt
push
out
and
xor
sub
nop
push
pushfw
cmp
xchg
xchg
into
int
xchg
lock
in
sti
mov
in
push
xor
sar
iret
test
pushf
popf
in
push
mov
sub
jg
aad
int
xor
mov
cld
push
in
lock
adc
pop
addr16
inc
sub
jecxz
push
mov
mov
sbb
int
stc
fs
inc
jle
sub
in
or
leave
stc
bound
jmp
stc
jmp
pop
sub
xchg
test
orl
inc
jmp
sbb
shlb
push
cmp
lahf
orl
mov
daa
fwait
test
mov
lods
aam
sub
shl
xor
ljmp
lea
mov
and
dec
sbb
test
ss
cmpsb
inc
dec
je
aam
movb
aaa
std
or
icebp
in
cltd
fwait
insb
add
in
sbb
jecxz
cmpsl
les
lds
xchg
sub
add
jl
aad
jl
ljmp
cmpsl
movb
xlat
fisubs
cmp
and
pop
fidivrs
sarl
cmp
dec
nop
stc
pop
xlat
xchg
shl
xor
aas
gs
in
pop
and
insl
or
les
mov
sbb
and
cmp
xchg
cmc
stos
fsubrl
repz
jecxz
dec
add
push
mov
push
ret
push
imul
mov
sub
jmp
xor
clc
mov
mov
push
movsl
btr
insb
lds
addl
nop
jb
call
daa
add
ja
sub
add
ret
or
mov
lds
stos
mov
jmp
movsl
loopne
out
sbb
pop
pop
add
fists
lds
cmp
les
cmp
push
in
mov
ret
and
stos
cltd
sbbb
int
in
js
loope
sbb
or
loopne
jnp
add
subl
sub
test
pop
pop
mov
pop
in
stc
loop
mov
and
xchg
or
jmp
cmpsl
mov
icebp
out
inc
js
gs
movsb
mov
in
lods
sbb
cltd
add
push
loop
ds
pop
adc
popf
push
addl
dec
jmp
arpl
mov
cmp
inc
popa
sar
ret
pop
pop
roll
adc
fstpl
lea
aam
bound
cld
jle
mov
cmpsb
pop
fimull
adc
mov
repz
mov
je
xchg
inc
push
xor
in
mov
out
mov
pushf
or
mov
jp
cli
dec
or
dec
daa
mov
adc
adc
out
shll
and
add
cmp
and
test
sysret
ljmp
and
adc
imul
iret
insb
xchg
pop
cmp
imul
popl
jne
push
mov
int3
push
or
addr16
or
cmp
xlat
add
jg
inc
dec
fisubrs
inc
mov
in
cmp
scas
pop
jecxz
cmpsl
sbb
adc
rorb
mov
shll
lea
lcall
sbb
push
mov
ret
dec
lods
cmp
loope
pop
stos
sbb
sbb
jp
sahf
dec
mov
inc
shrl
pop
sub
sub
scas
dec
mov
aam
aaa
subb
push
adc
cld
mov
enter
movsl
xor
mov
dec
loop
sub
dec
sbb
shll
adc
or
jge
or
mov
mov
in
popf
test
jno
lods
mov
mov
cmp
sahf
mov
mov
test
iret
les
inc
rcrl
test
fidivl
xchg
jle
out
xchg
or
sub
mov
xor
jb
lock
xor
popw
testb
cmc
ljmp
call
lods
push
incl
pop
mov
mov
xchg
push
in
sahf
stos
adc
popf
les
cmp
mov
pop
or
fmull
mov
stos
sub
movsl
fs
pcmpeqw
jge
ss
dec
mov
stc
in
shrb
push
in
sub
lea
cmp
imul
jl
subl
inc
insl
cmp
lahf
cmpsl
cld
xchg
jp
dec
add
pop
adc
inc
movsl
push
cmp
xor
sahf
sahf
sbb
lea
mov
xchg
xchg
std
aam
push
lock
vpunpckhdq
push
adcb
adc
dec
cmp
in
xchg
xchg
jbe
cmp
rclb
daa
jb
mov
out
pop
push
cmpsl
ret
arpl
loope
out
subb
stos
dec
out
sub
jno
pushf
push
addb
push
test
inc
pop
jbe
clc
mov
leave
popa
in
sbb
stos
mov
jp
inc
push
movb
leave
or
add
lahf
lods
idivl
cmpsb
xlat
fisttpl
push
push
fsubl
outsl
and
or
or
js
in
sbb
sarb
adc
push
push
jae
lea
rol
insb
arpl
mov
xchg
mov
cmpsb
shrl
ds
mov
xchg
add
mov
jbe
ds
mov
fisubl
xchg
pop
xchg
jge
stc
je
xchg
adc
fistpl
ret
movsb
jae
cltd
adcb
and
test
jmp
movsb
xchg
das
inc
push
lret
out
sbb
xchg
pop
jae
and
pop
ja
aas
dec
leave
add
mov
mov
mov
and
push
sub
insl
add
mov
movsl
mov
and
mov
imul
push
add
push
sti
repz
notb
lret
mov
inc
loopne
add
cmp
mov
mov
adc
std
add
mov
loope
push
call
les
sbb
mov
loop
imul
cli
xchg
add
mov
dec
or
add
das
dec
jbe
adc
inc
arpl
jmp
flds
je
mov
push
xchg
cwtl
xor
inc
scas
xor
cmp
shlb
jle
popa
icebp
fdivrs
std
dec
push
outsl
mov
push
divb
add
push
test
add
std
jae
adc
mov
repz
outsb
movl
add
cmc
push
std
inc
mov
lds
mov
mov
imul
cld
ret
and
cmpsb
or
enter
addl
push
mov
sub
bound
fucomip
cltd
fnstcw
jns
inc
push
pop
leave
aas
push
int
jmp
pusha
xlat
je
cmpb
push
out
repnz
in
xchg
sub
fld
pushf
mov
inc
test
sbb
or
fsubrl
push
mov
in
dec
xchg
jbe
fs
ftst
xor
sti
lret
es
xchg
pop
cmp
cmc
cmp
in
call
ljmp
push
xor
fnsave
sbb
and
inc
rorl
enter
and
jmp
jp
add
fimull
lret
and
inc
call
test
aaa
xchg
clc
jne
fsts
cmp
icebp
pushf
andb
call
sbb
mov
fimuls
bound
add
in
notl
xor
fxch
out
fsubr
inc
jge
mov
xlat
mov
pop
add
dec
test
xor
ss
and
jne
mov
mov
sti
sub
sbb
into
es
xorb
jns
or
mov
sub
dec
shl
sbb
jp
lret
fbld
cmpsb
aad
fwait
lods
fldt
push
fidivl
ss
js
and
in
push
jmp
ja
dec
sti
pop
in
mov
xchg
mov
pop
push
xor
xchg
sbb
jmp
sub
leave
cltd
or
scas
or
je
mov
divb
pshufw
xor
sub
push
adcl
mov
adc
repz
pop
mov
push
add
jnp
mov
mov
or
std
imul
pop
push
imul
xlat
cwtl
inc
fmul
jecxz
inc
adc
fcmove
cmpsl
flds
cmp
in
pop
lea
dec
and
sbb
push
das
out
and
loop
loop
sbb
ret
inc
std
xor
imul
lret
scas
inc
mov
pop
xchg
cmp
push
cli
pop
pop
push
lds
xchg
ss
sbb
stc
and
je
jl
xorl
dec
dec
add
and
xor
inc
jge
aad
xor
pop
repnz
repnz
nop
and
cmp
fidivrs
scas
out
push
in
push
mov
pop
add
out
xorl
mov
add
mov
inc
xchg
and
in
mov
leave
ror
xchg
sub
sbb
mov
xor
cmpsl
addr16
adc
daa
dec
lahf
jo
push
fcmovnbe
sub
jns
das
jmp
bound
jmp
mov
movsl
lds
mov
mov
stc
in
je
popf
sbb
unpckhps
push
iret
scas
push
outsb
push
les
sub
jecxz
pop
inc
or
insl
out
dec
nop
fs
fistl
in
mov
dec
dec
sbb
jl
cmp
popa
xchg
mov
cmp
xlat
je
mov
pushf
les
arpl
and
in
pushf
andb
adc
mov
push
sub
and
stos
inc
cltd
hlt
fidivrs
xor
jb
and
and
inc
aam
sub
hlt
fisubl
cmp
decb
pop
xor
mov
mov
dec
into
mov
inc
jb
fnstcw
mov
ljmp
or
imulb
lret
jae
in
pop
or
jnp
popf
lods
je
movsl
xor
inc
jne
test
shlb
or
mov
aaa
adc
jmp
pop
and
mov
icebp
inc
dec
call
lds
dec
fistl
jnp
xchg
pop
mov
dec
inc
xchg
mov
pop
dec
data16
aas
inc
dec
pop
leave
pop
mov
or
or
fsubs
addr16
daa
shl
jge
cmpsb
push
pushf
bound
lea
xchg
push
mov
stos
lea
ds
adc
jo
scas
mov
xchg
movsl
jbe
sahf
mov
les
mov
push
dec
sub
movsl
data16
test
sbb
gs
cmp
rorb
push
cmp
ljmp
cmp
and
fs
lea
popa
cwtl
dec
in
jl
and
inc
or
out
push
stos
jb
push
mov
sarl
fnsave
mov
popl
fwait
enter
stos
fstpl
arpl
mov
inc
adc
add
movsb
arpl
lds
sbb
xor
lea
add
and
scas
ret
dec
xchg
je
jp
push
sub
inc
lret
push
push
out
add
mov
nop
or
lds
or
orl
test
add
dec
jle
int3
shrb
pushw
lods
inc
shll
jge
adc
sbb
movsbl
adc
mov
mov
dec
scas
addl
lret
out
push
push
xchg
push
inc
rcrb
mov
and
pushf
dec
fdivp
cmp
in
pop
push
inc
cltd
fsubrl
inc
les
sbb
das
pop
jae
lcall
int3
mov
add
imul
xchg
or
cmp
mov
mov
movsl
jno
std
add
lods
jmp
mov
cmpsb
shlb
jp
and
adc
lret
xor
sti
inc
xchg
inc
insl
mov
adc
je
fnstcw
lahf
mov
jo
lcall
scas
ret
ret
scas
jno
and
inc
and
sub
cltd
test
inc
pop
fs
movsb
adc
in
mov
cmp
gs
insb
loope
pop
xchg
push
jmp
jg
push
add
mov
adc
cs
ds
push
cmp
jo
add
les
lahf
loopne
mov
pop
xor
push
ret
and
mov
jl
push
mov
fwait
jae
jl
andl
lds
jmp
mov
js
add
in
test
aam
out
rorl
jmp
int
inc
fbld
jo
push
pop
push
xor
mov
arpl
dec
and
pop
jg
dec
loop
lods
mov
sarb
adc
pusha
adc
inc
jo
addr16
aas
out
imul
in
fstps
enter
ljmp
std
jae
movl
adc
nop
mov
pop
pop
fwait
pop
cli
xchg
add
fimull
shrb
push
in
jg
jecxz
jae
ss
stos
sub
push
or
dec
aas
push
or
xor
icebp
cmp
rorb
push
xchg
and
ljmp
cltd
sub
lcall
and
add
dec
jg
bswap
cltd
xchg
inc
shrb
div
jmp
mov
adc
ljmp
mov
out
pop
cmp
sub
jmp
in
adc
loope
mov
jl
xor
and
fmul
orl
mov
push
jno
insl
jnp
loopne
lahf
in
mov
sub
into
popa
test
addr16
imul
into
mov
mov
push
or
outsl
mov
push
pop
mov
xor
adc
decl
jo
push
loop
mov
adc
xchg
sbb
bound
out
insb
popf
push
in
mov
xchg
push
mov
jmp
or
fs
stos
or
inc
adc
test
andps
mov
mov
gs
popa
pop
or
xchg
sbb
pop
in
or
xchg
or
sbb
fnstenv
call
dec
adc
fwait
xor
insl
pop
xor
aad
js
dec
icebp
pop
lcall
jno
add
adc
dec
dec
mov
cli
in
jns
stc
mov
and
in
ret
hlt
pop
fmul
movsl
jp
or
cltd
pop
aad
jl,pn
mov
pop
mov
xor
gs
cmp
mov
xchg
mov
mov
cmp
mov
or
inc
or
sub
jmp
adc
test
sarl
push
jae
sbb
pop
and
push
add
cltd
popf
xchg
cld
xchg
arpl
xchg
je
das
mov
fsubs
mov
imul
pushf
sub
in
call
mov
rorl
lds
push
xchg
jg
pop
or
jle
fcoms
and
sbb
xchg
sub
test
dec
mov
jle
adc
scas
imull
inc
cmp
mov
outsb
sbb
into
xchg
push
and
mov
and
mov
je
cltd
ret
push
sar
xor
loope
mov
inc
pop
popf
pop
aad
ljmp
mov
movsl
inc
mov
mov
pop
jae
rorl
mov
sub
jns
add
xchg
sahf
pop
xchg
les
push
pop
fstpl
shll
and
xchg
cmc
rcrl
dec
cmp
add
jne
into
iret
inc
mov
icebp
push
repnz
xchg
sahf
pop
scas
mov
testl
cmc
adc
cmp
add
push
push
adc
xchg
scas
int3
push
mov
dec
xchg
mov
pop
xor
sti
pop
dec
cmpsl
loope
jns
or
mov
jecxz
fs
aas
mov
push
and
pop
hlt
pop
xchg
push
clc
and
repz
mov
pop
call
popa
xchg
sub
cmp
ds
mov
ror
jnp
inc
xchg
pop
sbb
cmc
or
sub
pop
mov
jo
xlat
nop
pop
fstl
xor
orl
cld
imul
push
lret
cld
push
fdivl
sub
pop
sub
js
jp
or
jae
dec
sub
inc
adc
icebp
pop
pushf
jns
add
popf
xchg
out
jne
scas
xchg
sbb
mov
bound
jb
stc
bound
int3
cmpb
daa
ss
adc
cmp
and
pop
xorb
or
imul
adc
cmp
ret
rolb
add
cmpsb
xor
cmc
lea
fcomps
sti
xorl
inc
dec
and
cmpsb
mov
push
adcl
jp
gs
pop
in
cmp
inc
mov
cmp
sub
cld
mov
fcomps
jae
shr
das
ret
xchg
jge
xor
mov
test
dec
lods
jmp
mov
shlb
cmpsl
dec
mov
cmp
cwtl
adc
mov
gs
sar
stos
mov
data16
es
jnp
orb
push
lods
sbb
fidivl
mov
mov
ljmp
fstpt
rclb
mov
cmp
mov
inc
ja
mov
fldcw
pushf
mov
rolb
insb
in
inc
push
adcb
idiv
add
sahf
jo
pusha
sub
scas
sbb
mov
cmp
mov
xchg
add
jne
adc
push
sbbb
inc
sahf
rcrl
shr
sub
mov
xchg
nop
xchg
insl
in
inc
std
inc
cmpsl
and
into
dec
mov
lret
jnp
mov
or
sub
adc
inc
push
aas
popa
pop
outsl
clc
popa
fisubl
das
sbb
mov
out
add
mov
dec
mov
lods
divb
inc
mov
popa
dec
test
and
js
mov
pop
sbb
lret
inc
xor
push
dec
in
aam
in
leave
dec
popa
faddl
pop
adc
aaa
adc
mov
inc
int
add
cwtl
test
mov
fdivl
aas
faddp
leave
dec
ljmp
ret
dec
sbb
cli
sbb
xor
mov
and
push
fidivrl
xor
mov
test
fdivs
mov
mov
inc
push
sbb
jne
mov
in
test
out
sbb
ds
enter
repz
sbb
sub
mov
adcb
adc
leave
and
jl
push
mov
cmp
jg
push
jno
out
pop
jb
jmp
jb
mov
into
mov
mov
push
loop
push
jmp
clc
push
rolb
push
cltd
inc
aad
mov
push
or
or
repz
lods
out
insb
xchg
jb
cmp
jge
push
lahf
push
push
clc
adc
lods
push
adc
cmpsb
adc
pop
bound
das
aas
adc
mov
popl
shll
sub
lret
push
stos
push
std
scas
inc
jno
jns
adc
pop
test
adc
out
jp
aam
sbb
popa
mov
sbb
nop
xor
scas
in
pop
out
in
pop
call
push
push
fiaddl
lds
fdivs
cmpl
cmp
aad
leave
insb
jmp
cmp
fcoml
inc
sbb
adc
adc
xor
mov
in
cmp
mov
roll
and
dec
adc
repnz
sarb
jnp
cmp
xor
iret
jp
pusha
xchg
insb
push
lock
rcrb
push
daa
xchg
cli
adc
mov
out
loopne
pop
les
fcmovbe
dec
jmp
adc
scas
or
lea
scas
fucomi
push
cmp
cwtl
stc
add
jns
fwait
lret
xor
jge
jmp
cmp
hlt
inc
nopl
push
cli
push
inc
mov
mov
xor
call
loope
cwtl
cmp
adc
push
dec
mov
xor
loope
cmpsb
rcr
es
mov
fimuls
cmp
inc
sub
lcall
add
call
loop
mov
mov
ljmp
aaa
sub
pushf
push
dec
add
and
out
jg
cmpsb
popa
push
xor
shl
fisubrl
jno
ss
push
inc
inc
pop
fmul
gs
roll
cli
lret
or
out
sbb
mov
cs
rclb
pop
out
add
call
and
out
decl
jle
xchg
lds
loop
cld
fmuls
dec
jo
imul
mov
lcall
cltd
sti
mov
push
cmp
pop
jp
sbb
mov
insb
cmp
in
inc
clc
xchg
outsl
shrl
dec
in
mov
lea
out
data16
imull
add
push
les
enter
icebp
ljmp
enter
mov
in
dec
call
mov
addr16
push
cmp
cmp
and
movsl
cmp
cmp
fs
xchg
insl
sahf
clc
rcrl
cli
js
ds
xchg
arpl
cltd
or
in
jns
lret
jnp
in
lcall
sbb
push
cli
data16
stc
pop
dec
sub
sub
test
mov
mov
fsubl
add
mov
sahf
sbb
clc
mov
dec
mov
pusha
out
in
xchg
leave
sbb
xchg
push
je
int
stc
subl
popa
dec
or
es
inc
mov
mov
leave
js
jmp
or
mov
xchg
stos
mul
scas
mov
loop
aam
inc
jecxz
add
in
les
cmp
and
jmp
lods
adc
mov
xchg
mov
jbe
cmp
repnz
or
loopne
fidivrs
outsl
mov
subb
sbb
fwait
mov
dec
jo
inc
fstps
out
jl
add
xor
cmp
sub
sub
lds
scas
adc
push
add
lds
lock
dec
or
inc
mov
inc
push
inc
push
sar
jl
mov
adc
stos
xchg
addl
call
outsl
iret
add
repz
cwtl
pushf
pop
aas
sti
jne
pushl
mov
cmpsl
std
adc
add
mov
or
les
pop
xchg
xchg
push
repz
std
cld
dec
jo
stc
push
or
add
and
jg
and
shrb
xchg
scas
adc
and
mov
sarb
in
adc
mov
cmpsl
pusha
sbb
loopne
mov
stos
jmp
jecxz
pusha
fmulp
pop
outsb
hlt
xchg
jle
arpl
mov
jns
push
add
cmp
adc
and
nop
insb
pusha
stc
movsl
js
adc
cmp
push
pop
pop
or
ds
testb
outsb
mov
cmp
lcall
xor
test
cli
out
and
dec
loopne
mov
add
lret
cmp
add
cmp
jno
jp
sbb
adc
cmp
xchg
lds
sub
cmp
push
imul
not
adc
mov
stos
mov
in
sub
pop
xchg
mov
ficoml
dec
sbb
pop
pop
xlat
cmp
jns
pop
add
cld
or
or
pop
push
inc
and
adc
sti
mov
add
add
ret
stos
sbb
inc
mov
inc
ds
adc
mov
inc
test
ja
or
fs
mov
fwait
inc
xor
pop
out
push
sbb
inc
scas
xchg
inc
sarb
aam
std
lods
fcomps
mov
ficomps
ret
add
in
cmpsl
lock
pop
stos
dec
je
fidivrs
jmp
mov
movsl
das
jmp
sub
mov
hlt
arpl
movsl
js
lahf
maxps
push
jp
js
rol
xorb
push
sarb
xsave
mov
ds
add
rol
in
hlt
jg
pop
lods
mov
lods
jecxz
rolb
dec
lret
rolb
icebp
repnz
fisubl
adc
dec
sarl
sar
cltd
imul
sti
sbb
shl
cmpl
imul
cmp
sbb
push
outsl
int3
pop
inc
dec
dec
addb
sbb
lea
data16
inc
push
dec
out
movsl
push
push
push
icebp
cltd
mov
inc
cmpsl
pushf
cmp
shlb
stos
scas
dec
mov
imul
movsb
dec
negl
inc
pop
and
lods
sbb
pop
lods
cmpsb
jecxz
mov
dec
call
dec
ror
repnz
pop
push
push
mov
into
outsl
or
roll
clc
jp
lret
add
pushf
lea
dec
inc
cld
push
pusha
insl
adc
xchg
notl
repnz
lret
push
pusha
xlat
push
daa
cmpsl
or
int3
and
mov
jg
add
mov
push
dec
xchg
xchg
inc
jae
xor
aas
sub
mov
xchg
fnstenv
test
mov
xchg
cs
jecxz
pop
jno
out
cld
pushf
xor
les
mov
or
pop
inc
inc
xchg
repz
push
fdivl
lock
and
clc
sub
loopne
dec
shrl
addr16
cmpsb
add
lock
inc
adc
xchg
outsl
xchg
cmp
jbe
push
fbld
mov
jne
lea
jmp
sbb
lock
mov
cld
lahf
adcb
or
je
jns
jnp
pop
sbb
loope
lret
and
sub
xor
sahf
xchg
ja
sbb
xchg
add
cmp
ret
es
mov
pop
dec
add
sub
outsb
adc
shlb
stc
das
sbbl
adc
add
dec
mov
inc
imul
stos
orl
imul
adc
ja
add
or
push
pop
arpl
in
ret
xor
inc
dec
loope
mov
les
scas
jg
out
mov
add
dec
scas
push
inc
mov
or
pop
inc
pop
les
mov
adc
add
ret
mov
jge
and
push
inc
mov
push
inc
ficomps
arpl
lods
and
repz
test
push
test
xor
adc
adc
xchg
repnz
push
pop
xor
xchg
andb
loopne
mov
cld
mov
xlat
mov
loope
xchg
idivl
adc
out
pop
shrb
mov
mov
daa
insb
hlt
xchg
notl
insl
pop
mov
das
push
sbb
lods
mov
pop
xchg
mov
fistpll
insb
ret
dec
shrl
mov
mov
pop
pop
sbb
inc
push
ds
pop
in
mov
shll
adc
push
movsl
inc
sbb
mov
dec
into
adc
stos
lods
mov
in
mov
cmpsb
inc
sub
add
ret
shll
mov
push
in
pop
lea
in
movl
mov
sub
jl
push
and
scas
aas
test
add
and
roll
xchg
xor
addl
mov
movsb
gs
mov
js
inc
sub
shl
ljmp
fcmovbe
gs
loopne
push
add
stos
icebp
cli
pop
jnp
dec
xor
xor
mov
cltd
es
lret
fcompl
push
cmp
rcl
fcmovu
sbb
jg
xor
insb
pop
xchg
mov
loop
popf
pop
sbb
mov
mov
fidivrl
sbb
sub
rclb
dec
mov
pusha
lcall
lahf
popf
jne
mov
adc
rcl
mov
testb
fadd
enter
cmc
mov
mov
stos
mov
xor
xor
adc
loopne
push
inc
pop
cli
pop
clc
add
test
jne
dec
mov
adc
lret
out
insb
dec
ror
lret
bound
mov
sarb
lds
test
xchg
clc
push
push
fisubrl
enter
shrb
sbbb
or
icebp
out
mov
imul
repnz
push
dec
push
pop
aaa
mov
cltd
xchg
dec
or
scas
out
dec
dec
les
push
add
mov
fcomip
cmpsb
jae
and
xchg
mov
clc
pop
stos
sbb
jno
pusha
jg
mov
sbb
clc
xchg
enter
dec
xchg
xchg
arpl
lret
shrl
lcall
lret
sub
movsl
daa
pop
add
inc
inc
out
mov
push
cmpsb
dec
negb
sahf
pop
jp
cmp
fnsave
mov
lods
insl
fs
sbb
das
addb
dec
aas
sbb
aam
negl
aam
inc
arpl
add
pop
pop
arpl
sub
imulb
xchg
or
jg
cmpsb
mov
into
or
clc
and
shll
xchg
ret
icebp
loop
push
daa
mov
pushf
clc
mov
or
inc
leave
push
mov
jnp
mov
pop
jl
in
push
fwait
js
mov
movsb
popf
idivl
push
adc
popa
sbb
dec
stos
rcll
test
xchg
push
inc
push
mov
xchg
or
lahf
cmp
dec
add
xchg
sub
adc
lcall
out
pop
sbb
mov
pop
or
push
daa
int3
mov
mov
pop
xchg
and
add
sti
bound
pushf
sar
cmp
or
xor
data16
xchg
xchg
cmp
pop
dec
test
mov
jg
sbb
stc
push
lahf
add
loopne
outsb
push
pop
nop
xlat
adc
imul
loop
loop
mov
dec
adc
in
cwtl
stos
mov
cli
lods
xorl
ja
dec
mov
add
jne
fwait
test
dec
mov
jg
push
or
jp
pop
xchg
fildll
xchg
jae
push
scas
adc
xor
inc
pop
jne
lcall
imul
sbb
movnti
jb
subl
jo
cmpsl
add
or
add
push
inc
jns
xchg
mov
arpl
pop
ss
jp
gs
insl
mov
fcom
sub
orl
push
loope
js
inc
sub
rcll
ljmp
and
test
lea
lret
les
lods
das
shll
xor
mov
xor
rcrl
fs
pusha
adc
xor
test
or
das
outsb
fcompl
push
gs
dec
mov
fistpll
int
inc
inc
dec
lds
popf
loop
les
pop
adc
mov
cmp
jb
cmpb
je
mov
std
dec
push
rclb
mov
dec
pusha
mov
sbb
lret
xor
test
or
mov
sub
test
cmp
sbb
jns
ljmp
sub
movsb
addr16
stos
and
dec
mov
dec
add
push
addr16
arpl
dec
dec
lock
and
mov
hlt
ss
es
xor
int3
add
cld
ror
pop
out
clc
cmp
add
rcrl
jae
pop
rolb
ficoml
fwait
addl
dec
sub
lds
xchg
scas
shlb
ds
das
inc
and
lahf
aam
mov
sarl
xor
repnz
dec
and
cmpsb
sub
pop
push
imul
sbb
loope
fidivl
loop
fwait
mov
inc
js
scas
push
dec
dec
mov
mov
shr
pop
sti
jne
mov
fs
sti
stos
xor
in
sbb
icebp
jae
pop
sbb
gs
lcall
mov
sbbb
jp
int3
sub
das
imul
sahf
sahf
adc
js
iret
jbe
scas
and
fs
or
sub
lcall
lea
iret
cmpb
xchg
adc
imul
xor
fidivl
xor
or
test
inc
je
mov
ss
ja
dec
jno
pop
xchg
js
sbb
hlt
ficoml
push
fbld
jg
popf
cmpl
outsb
or
push
mov
sub
repz
call
leave
fs
jo
leave
push
in
popa
or
push
jno
adcl
lock
jp
adc
xchg
adc
movsl
repz
and
and
inc
mov
and
repnz
es
imul
mov
inc
xchg
idivb
jne
cmp
and
sub
adc
or
fcoml
xor
imul
test
lods
ret
in
rorl
mov
in
fwait
lret
ljmp
addb
bound
push
and
add
dec
cmp
sbb
out
dec
cmp
jnp
xor
adc
iret
cmpsl
frstor
or
shrl
add
test
or
pop
mov
pop
ret
jge
adc
mov
ret
inc
pop
rclb
leave
jp
pop
dec
ret
jnp
xor
imul
jae
not
rcrl
sub
jne
xor
popf
xchg
pushl
rorb
inc
jns
mov
das
dec
cmp
fbld
xchg
das
add
adc
jmp
dec
or
add
jle
movsb
jne
sbb
bound
jns
popf
mov
addl
test
push
pop
add
psubq
shlb
sbb
out
mov
repz
bound
fisttpl
cs
and
adc
rorb
cli
imul
repnz
lea
and
icebp
pusha
imul
cmpsb
faddl
aad
lahf
lret
outsl
aaa
aad
icebp
sub
pop
xchg
cmc
movsb
scas
mov
je
pop
push
and
push
mov
inc
sbb
and
dec
adc
push
ds
mov
cltd
xor
mov
imul
lea
inc
clc
pop
push
jne
sti
adc
daa
pop
repz
stc
xor
xor
je
scas
jb
xchg
lods
les
jecxz
popf
and
lea
aaa
out
js
and
stc
dec
rol
iret
cmp
jbe
addr16
js
mov
imul
pop
pop
and
jb
les
jmp
les
sub
iret
inc
pop
inc
fdivl
lcall
sahf
aam
dec
out
pop
stos
lret
aas
or
mov
das
adc
dec
outsb
mov
out
js
inc
mov
test
dec
push
out
cmp
mov
lcall
inc
shlb
cmp
movsl
push
jl
pop
xchg
mov
aam
add
ret
aad
ja
jnp
mov
enter
pop
xlat
jecxz
adc
jmp
and
enter
push
mov
fistps
add
imul
cmc
es
in
daa
sbb
cmp
shl
xlat
ret
int3
mov
mov
push
pop
das
ret
loop
push
jnp
mov
lcall
repz
jp
pop
es
loop
cmp
loopne
jmp
pop
shlb
cmp
and
cmpsl
notb
lock
mov
pop
xor
ja
push
push
dec
icebp
mov
xchg
jp
mov
popa
push
push
inc
inc
mov
jbe
and
or
sahf
add
xor
mov
fldt
or
dec
test
and
stos
test
cmc
in
lahf
add
mov
pop
cmpsl
xchg
add
repz
les
addr16
iret
push
maskmovq
idivl
dec
arpl
push
sub
fimull
es
xchg
rcrb
jne,pn
sbb
adc
pop
jmp
mov
shrl
popf
adc
pop
jl
mov
dec
stos
cmpsl
and
inc
ja
xor
sahf
xor
mov
cmpl
mov
mov
test
adc
add
jmp
ds
imul
leave
hlt
mov
decb
pop
lods
mov
mov
les
or
clc
jge
into
call
adc
inc
sbb
sub
pop
cltd
adc
mov
icebp
pop
fwait
lea
out
sub
jge
dec
fisttps
mov
sbb
notl
movb
imul
lock
popf
cmpsb
jmp
xlat
xchg
sti
inc
mov
push
hlt
fisubrl
and
push
pop
js
mov
pop
inc
inc
addr16
add
and
dec
icebp
or
cld
pop
mov
inc
rcrl
mov
into
jle
mov
pop
add
shlb
sub
mov
imul
idiv
inc
iret
pop
mov
shl
push
push
stos
jmp
mov
cli
and
cs
dec
sub
xor
or
sub
xchg
es
jns
jg
jle
xchg
sbb
cmpsl
fdivl
bound
dec
inc
mov
push
mulb
inc
jno
xchg
jb,pn
iret
lahf
push
outsb
pop
and
dec
movsl
sub
adc
sti
shll
and
xor
fstl
adc
adc
gs
cmpsb
fsubrs
mov
fs
data16
popf
testl
ja
push
lock
push
addr16
cmpl
mov
mov
inc
cmp
or
pop
push
packsswb
pop
push
add
and
dec
rcll
or
and
mov
sbb
callw
xor
push
ljmp
xchg
imul
and
and
les
mov
lods
pop
fdivp
jb
rcrb
cli
aam
xor
sbb
xlat
test
mov
and
jno
lahf
push
clc
mov
pop
mov
in
sub
push
dec
add
push
push
and
jo
or
mov
adc
mov
mul
lret
jg
mov
fdivl
xchg
jl
je
xlat
outsl
je
and
nop
je
add
clc
inc
push
inc
sahf
inc
mov
adc
xchg
and
cmpsb
mov
loop
jp
iret
add
test
fwait
mov
sbb
or
inc
or
adc
gs
testl
in
js
stc
addb
aaa
insb
or
notb
repnz
jp
testb
jmp
inc
gs
ret
xor
adc
cmp
dec
int3
test
fs
xchg
inc
dec
adc
mov
test
das
mov
xchg
inc
pusha
push
push
ljmp
js
mov
popf
stos
aam
pop
mov
jecxz
jg
inc
push
cmp
pop
adc
xchg
mov
sub
or
loop
pop
dec
cs
sar
jle
scas
jle
movl
lahf
xchg
mov
inc
xor
pop
mov
or
and
std
xor
xor
dec
dec
lret
in
ror
lds
fsts
test
aaa
test
ret
ljmp
sbb
xchg
pop
insl
sbb
dec
dec
or
call
pop
jge
jmp
xchg
xchg
xchg
ja
mov
dec
pop
sub
mov
incb
fcomps
adc
jmp
lea
adc
rolb
loopne
es
xchg
movsl
fldl
push
call
adc
movb
stos
adc
mov
pop
cmp
push
dec
mov
mov
rorl
xchg
rcll
mov
xchg
jno
jnp
inc
pop
and
arpl
xchg
inc
lret
and
das
addb
gs
outsb
xor
ja
xor
lret
ja
sbb
lcall
xorl
lret
arpl
sbb
push
out
jle
cmp
pop
push
push
mov
jae
shrl
xchg
jp
jg
push
pop
push
mov
mov
rcrl
xchg
enter
add
call
dec
shll
mov
push
push
imul
dec
lds
addl
loop
xchg
jno
jns
push
inc
mov
mov
xor
fmul
push
xor
dec
sub
nop
jno
pop
cmp
mov
nop
insl
cmp
insb
xchg
out
pop
add
sub
imul
push
push
and
sbb
ja
stos
xor
mov
les
ficompl
out
lcall
cltd
mov
mov
xor
mov
and
add
iret
pop
leave
jmp
ret
cmp
in
fcomps
fisttpl
jge
sub
and
ret
cmpsb
mov
jae
push
and
pop
aaa
rcll
push
add
add
mov
or
sbbl
jmp
rclb
lcall
stos
lock
jae
push
sbb
mov
lds
adc
pop
pop
stos
mov
sbb
filds
ja
sbbl
sahf
jb
xchg
mov
outsl
sbb
cwtl
sbb
aas
xchg
cs
testb
jo
jbe
std
rcrl
andl
xchg
ja
mov
jb
cs
mov
inc
sbb
jo
bound
test
inc
pop
ret
mov
jp
out
and
jns
flds
sub
xchg
pop
nop
mov
insb
fadds
rorb
add
scas
int
imul
cmpb
shl
and
outsb
out
mov
push
jmp
or
imul
dec
jecxz
inc
jge
cmp
mov
xchg
js
add
adc
cltd
mov
jo
push
rcrb
mov
icebp
bound
repz
xchg
aad
jno
mov
cmpl
add
add
lret
data16
mov
jg
ficoml
stc
dec
jecxz
and
fistpll
movsb
jmp
call
lods
cmpsb
out
mov
mov
pop
push
xchg
mov
test
mov
xor
sbb
cltd
pop
adc
add
mov
into
jno
push
mov
dec
imul
xchg
push
sub
outsb
jne
xchg
call
sbb
stos
xchg
adc
popa
dec
ret
cmp
and
dec
loope
cmp
imul
es
jp
aad
mov
dec
cmc
ret
xchg
lcall
aaa
pop
adc
xchg
jno
add
and
push
sbb
stos
roll
cltd
rcll
je
add
cmp
stc
into
scas
dec
and
out
inc
gs
iret
or
add
ret
inc
inc
cld
cmp
mov
loop
mov
sub
push
xchg
cltd
push
dec
pop
insl
mov
lock
cmp
sub
rcrb
add
mov
jns
mov
ret
sub
pop
adc
fwait
sub
jmp
into
int
loopne
aam
fiaddl
ds
inc
dec
aas
leave
jl
mov
inc
push
cmpsl
shll
or
add
add
push
pop
jae
outsb
shrb
aad
lods
call
push
lret
jmp
pop
nop
and
xor
ja
sub
outsb
bound
or
nop
clc
repnz
or
dec
add
sub
cmp
sti
in
shrb
pop
scas
sub
xchg
adc
fwait
and
enter
sub
clc
mov
pop
push
shlb
mov
add
fcoms
add
push
loope
jo
sub
test
mov
sub
jb
mov
pop
xchg
lahf
rcrl
or
leave
xor
push
addb
shl
clc
inc
cmpsl
repnz
xchg
inc
popf
stos
rolb
lods
pop
jo
not
cli
pop
cmp
jg
mov
rorb
outsl
cmp
inc
jg
cmp
lret
and
cmpsb
in
pop
out
sub
jns
cmp
xchg
sub
imul
filds
loope
enter
out
sbbb
xlat
cmp
mov
hlt
std
les
xchg
in
repnz
shlb
add
in
mov
xchg
jg
dec
inc
call
js
push
pop
lret
lret
pop
popf
sbb
icebp
mov
pop
ss
push
cltd
pop
out
and
push
iret
adc
sbb
lret
push
inc
movsl
pop
out
sbb
jge
pop
fs
pop
dec
pop
jl
sub
inc
aam
call
xor
cmpsl
mov
sbb
push
xchg
popf
in
incl
mov
or
jne
test
mov
cmpsb
sbb
xchg
sahf
inc
cmp
cmp
push
mov
lods
push
ret
je
cmp
shr
pop
andl
push
subl
lret
or
aad
push
movzbl
ds
shl
fsts
lods
sbb
jp
xor
lret
xlat
mov
insl
mov
adc
jbe
ds
lahf
xchg
pop
rorb
in
subb
push
mov
mov
clc
xchg
or
testl
fstps
sbb
xor
lahf
rcrl
cmpsb
mov
es
lcall
mov
iret
dec
xchg
into
push
xchg
pushf
xorl
subb
jp
imul
gs
push
cmp
dec
das
add
ljmp
jp
mov
mov
jmp
andb
xchg
jae
jae
and
push
cmp
xchg
mov
xchg
dec
pushf
push
ffree
sbb
push
bound
mov
repnz
push
xor
shrb
out
mov
stc
mov
push
dec
dec
add
pushf
in
lods
int
push
push
bound
lods
pushl
add
and
xchg
pop
or
mov
xlat
jno
lock
jl
clc
dec
add
cmp
push
addr16
nop
push
pop
out
dec
mov
xor
lods
mov
es
or
aaa
cmp
test
fxch
notl
mov
xchg
sbb
roll
push
iret
movsb
int
or
jl
lret
cmp
lods
push
lds
jle
cmp
push
push
xchg
xor
mov
mov
jb
mov
jbe
repz
inc
jns
adc
mov
or
adc
push
mov
or
pop
jp
dec
mov
imul
add
sub
sbb
push
fldt
mov
jnp
fwait
pop
jnp
add
cmp
jg
dec
mov
nop
mov
mov
in
mov
fldenv
inc
mov
jge
push
fbstp
inc
pusha
xchg
repnz
sub
mov
lds
std
scas
or
xchg
inc
imul
scas
outsl
push
add
js
jbe
aas
loopew
test
ficoms
push
sub
fnsave
ret
inc
or
std
lds
out
xchg
std
dec
gs
cmp
out
jns
dec
push
cmc
in
pop
or
imul
and
push
adc
fcom
neg
insl
fstpl
dec
add
ret
iret
leave
add
push
aad
pop
lock
xchg
scas
cmpsb
ret
jp
inc
pop
push
idivb
add
push
sbb
sub
push
scas
in
inc
out
cs
mov
pop
or
call
aad
cmpsl
mov
mov
adcl
leave
ds
cwtl
pop
out
pop
ret
loop
xchg
xor
fwait
lods
and
push
pop
lods
ret
and
pop
call
inc
and
mov
inc
jmp
push
dec
stc
sub
adc
jo
movsb
mov
mov
mov
imul
or
int
or
cs
inc
push
ljmp
mov
pop
stc
sub
clc
cmc
dec
roll
pop
add
add
movsl
push
call
adc
pop
mov
stos
loop
mov
pop
jo
lea
lahf
mov
adc
or
fsts
adc
push
mov
gs
xor
leave
cmp
lcall
pop
pop
ljmp
and
jbe
mov
mov
in
fwait
sub
fisttpl
test
sti
notl
xor
scas
sbb
and
add
shll
bound
pop
push
adc
rcl
xor
ror
mov
aaa
inc
orl
xchg
lcall
outsb
cmc
and
or
test
inc
push
mov
xchg
cmp
sub
mov
sti
das
dec
sbb
fsubs
test
cli
and
jp
cmp
inc
leave
jecxz
mov
jecxz
push
mov
adc
stc
scas
mov
movsb
and
xchg
sub
lods
mov
mov
adc
xchg
in
rcrl
mov
xor
fcmovne
mov
push
pusha
or
ret
inc
sar
lretw
pop
int
mov
xchg
testl
adc
adc
fistps
mov
jl
outsl
xlat
out
scas
pop
mov
push
cli
pop
push
fidivrs
subl
call
out
outsb
push
outsl
sbb
nop
or
cmpsb
sbb
ja
loop
mov
cmc
mov
es
pop
je
mov
idivb
pop
data16
arpl
icebp
push
loopne
mov
inc
dec
and
fsubp
mov
scas
int3
push
call
outsb
lretw
mov
movsb
jge
cmp
push
jp
lea
test
clc
cwtl
sahf
cmp
into
lret
push
sti
mov
ret
adc
mov
cmp
mov
adc
sub
in
out
lcall
dec
sahf
stc
jns
xchg
mov
xchg
rcr
sub
add
push
sbb
imul
push
js
cmp
fidivl
and
mov
in
xchg
repz
sbb
shll
jle
loope
sbb
sahf
jge
mov
insl
dec
pop
inc
pop
mov
inc
jg
leave
sbb
dec
xor
xchg
divb
jmp
loope
add
jnp
daa
fs
testb
test
cwtl
lock
ret
xor
idivl
fwait
or
popa
lock
into
scas
xchg
inc
call
xor
shr
xchg
push
adc
mov
mov
push
sub
mov
jnp
lods
push
mov
adc
mov
outsl
xchg
jno
or
xchg
inc
add
jp
jb
aaa
xchg
in
insb
sub
outsl
fcomip
jno
fsubrl
inc
mov
hlt
in
jle
push
add
test
iret
adc
movsl
lret
jge
adc
mov
cmpsl
jno
ret
mov
aad
das
mov
cmp
outsl
push
adc
ja
pusha
push
cltd
shl
fidivrs
mov
fnsave
xlat
cltd
lods
mov
dec
sub
mov
leave
xor
pop
inc
mov
mov
jbe
arpl
cld
fs
pop
push
jo
mov
stos
gs
cs
mov
add
jns
xchg
movb
fwait
inc
addr16
jmp
or
jnp
jp
xchg
pop
cltd
or
int
mov
add
in
inc
outsl
cmp
sub
lea
cmp
in
out
pushf
rolb
cmp
dec
into
lods
push
call
cwtl
adc
push
fs
lods
mov
mov
loop
pusha
jnp
cmp
mov
and
in
pop
xchg
cmp
clc
lods
mov
int
and
cmp
mov
sbb
cwtd
adc
ja
sbb
dec
adc
outsl
xchg
pop
clc
sub
adc
repz
out
iret
enter
xor
outsb
mov
movsl
subl
fsubl
ret
sbb
in
mov
fwait
jecxz
or
aam
and
push
aaa
inc
lcall
dec
roll
jns
sbb
lea
pop
inc
mov
enter
xor
or
jbe
lahf
xchg
adc
mov
dec
je
loop
daa
xchg
rcrb
sbb
clc
pop
push
loopne
mov
jecxz
xchg
pop
pushf
jp
test
cmp
les
stc
lods
xchg
frstor
sub
jo
test
cld
jl
mov
gs
pop
push
stc
push
mov
cld
aaa
sbb
lds
cmp
mov
lcall
hlt
cmpsb
push
dec
dec
loop
sub
and
pop
pop
add
mov
in
adc
ljmp
or
pusha
xchg
dec
popl
imul
frstor
gs
sub
mov
cli
push
cmp
movlhps
hlt
jbe
inc
sbb
out
mov
inc
adc
fdivr
icebp
push
popf
mov
and
sbb
cmp
and
lea
push
shlb
mov
sbb
adc
mov
pop
mov
andb
insb
pop
jae
mov
repnz
dec
cltd
int3
push
jbe
or
xchg
inc
pop
push
sbb
iret
cmpl
roll
rorl
sarb
dec
inc
inc
fwait
les
jmp
push
mov
out
add
add
pushf
push
ret
fdivs
insb
iret
cs
add
inc
imul
enter
dec
lea
sub
in
jb
sbb
test
push
out
nop
pop
inc
lcall
and
dec
aam
fidivrl
loope
xchg
pop
sbb
es
cmpsb
out
into
loopne
xchg
dec
mov
jno
inc
ss
or
jnp
movsl
push
add
mov
mov
inc
call
xor
addb
mov
push
popf
hlt
mov
adc
lods
sub
push
jnp
imul
ret
out
xlat
mov
adc
xor
arpl
not
gs
xorb
dec
pop
xor
psadbw
cmp
push
sub
dec
push
add
popf
scas
test
inc
push
movsl
ffree
sti
xchg
and
mov
fstp
jp
pusha
lcall
in
cwtl
sbb
sbb
std
inc
xor
iret
das
popa
jnp
test
iret
fs
divps
cmc
insb
xor
push
mov
jne
std
movsl
sbb
inc
sub
pop
loope
xchg
inc
test
cmpb
sub
sahf
ja
dec
fstp
xchg
or
dec
fisubrs
mov
shlb
sbb
mov
rorb
jno
xchg
jno
cltd
push
ss
test
dec
cmc
leave
adc
inc
test
lgs
dec
flds
jmp
sahf
inc
push
add
add
push
ret
sub
fcomps
mov
jge
dec
mov
loope
pushf
or
mov
and
cmpsb
fs
test
sbb
mulb
scas
xchg
pop
or
jne
mov
sarl
nop
jg
cmp
xchg
js
mov
outsl
push
jmp
rorb
sub
mov
or
cmp
nop
repnz
jne
push
jns
in
add
test
sahf
call
int3
mov
cmpxchg
mov
mov
push
xlat
out
mov
push
imulb
inc
cmp
sub
aam
push
mov
jmp
ret
loop
lcall
adc
and
cli
mov
movsl
lods
mov
mov
pop
xchg
out
dec
jmp
insb
mov
xor
dec
mov
sti
add
fnstenv
lret
adc
adc
sar
stc
pushf
and
sub
push
pop
notl
rorb
cmpsb
sbb
push
mov
icebp
adc
jle
dec
in
xor
out
cmpsl
lcall
and
xlat
bound
add
mov
pushf
out
dec
test
ljmp
lds
aaa
mov
xchg
cmp
lods
or
stos
and
lods
sbb
inc
xchg
fwait
xor
sbb
cmp
cmp
pop
inc
mov
test
sub
sub
adc
stos
mov
out
pop
or
and
xor
cmpsb
inc
cmp
pop
rcll
ret
int
pop
and
mov
dec
in
icebp
add
jb
lcall
pop
sub
ror
sub
mov
test
adc
lea
and
je
jmp
mov
sub
cs
or
jle
dec
nop
fisubs
call
cld
cli
dec
loop
dec
push
imul
sarl
push
fdivrs
jb
leave
pop
in
cmp
iret
push
jnp
daa
int
mov
stos
pop
inc
inc
dec
repnz
scas
rcrl
pusha
cmp
imul
clc
stc
scas
fwait
push
sub
shrl
sub
xchg
fucom
and
push
sarb
mov
mov
std
and
sbb
fmulp
aas
in
push
sbb
mov
xchg
sbb
jp
rcll
andl
cmp
push
nop
sub
mov
aas
push
cltd
movsb
pop
sbb
push
pop
bound
jg
push
lds
xor
mov
insb
sbb
push
jecxz
mov
mov
sbb
insb
mov
xchg
jge
xchg
push
and
xchg
faddl
mov
pop
xchg
inc
fisubrs
jnp,pn
add
adcl
mov
xchg
sti
shll
pop
lods
mov
inc
xchg
sti
xchg
mov
sbb
out
rclb
ja
ljmp
fwait
nop
sbb
add
icebp
add
sbb
pushf
inc
adcb
jo
jmp
mov
pop
fs
pop
xchg
cmp
jmp
mov
push
ror
push
rcll
add
ret
xor
ds
das
lret
fsub
dec
or
adc
jae
arpl
icebp
call
cmp
int3
inc
ljmp
sub
xor
ljmp
sbb
add
inc
sbb
scas
call
in
pop
mov
pop
test
and
inc
and
data16
jb
imul
ror
cmp
lret
add
xor
mov
dec
ret
test
push
xchg
lcall
std
in
mov
orb
add
lret
sar
pushf
mov
inc
lcall
mov
mov
clc
lock
jne
imul
enter
mov
data16
fidivs
ja
sub
or
add
mov
xchg
xor
and
add
jl
outsl
mov
lret
cmpsb
stos
leave
cmc
mov
jnp
fs
xchg
jmp
rorb
mov
xchg
xchg
rcrb
mov
xchg
insb
adc
iret
and
add
jbe
or
sar
ds
push
and
dec
lahf
rclb
aaa
mov
lcall
popf
jmp
lods
cmc
add
cmpl
loope
clc
popf
adc
push
jecxz
arpl
pop
sbb
or
repz
inc
clc
jb
push
arpl
xor
adc
pop
inc
int
add
gs
dec
push
out
stc
mov
cli
cmp
dec
inc
cmp
inc
add
mov
xor
fwait
pop
das
sbb
adc
scas
push
into
in
mov
cmp
sbb
jecxz
in
jb
and
shl
and
pop
loopne
xchg
insl
push
sbb
push
je
inc
jg
aad
mov
xchg
pop
push
push
xor
push
inc
pop
insb
inc
shll
jl
push
xor
mov
jl
in
mov
addl
dec
pop
xchg
xchg
je
sti
shll
rcrb
mov
pop
jmp
iret
nop
out
fisubs
xchg
arpl
pop
fstpl
xor
orl
push
jns
adc
lahf
js
popf
pop
pop
fdivrp
dec
add
dec
mov
adc
popf
out
loope
xor
in
hlt
movb
insb
aaa
call
lea
daa
addr16
jmp
cmp
inc
push
adc
push
popa
mov
daa
cltd
pop
insb
xor
shlb
xor
fucom
lahf
sar
inc
es
jne
jb
or
cwtl
nop
or
or
push
jnp
scas
and
or
inc
or
mov
cmp
shll
test
fdivrs
and
mul
cmp
adc
jns
repz
fisttpll
mov
pop
js
push
push
imul
les
and
push
sub
sbb
sub
sub
repz
testl
mov
pop
dec
imul
add
and
or
mov
cltd
and
jecxz
scas
imul
add
sub
adc
stc
out
andl
xor
mov
shlb
es
xchg
and
xchg
fidivs
jns
pop
push
dec
push
mov
rclb
and
leave
mov
mov
and
push
push
jno
adc
int
mov
aas
sub
ljmp
loop
addr16
inc
xchg
pop
icebp
push
cld
out
aam
out
mov
out
stos
or
add
lea
jl
adc
mov
clc
mov
mov
jne
pop
and
in
imul
imull
sub
fidivrs
push
daa
imul
insb
ljmp
inc
outsl
fstpl
mov
ljmp
pop
xor
or
xor
mov
add
andl
js
in
pop
cld
loopne
jecxz
mov
mov
mov
int
addb
mov
stos
mov
mov
jne
jbe
add
lods
sub
add
xor
cmp
cmpsb
sub
mov
movb
or
push
xchg
push
xchg
or
nop
dec
cmpsl
das
roll
lcall
jle
sub
neg
cmp
je
test
push
je
xchg
dec
lahf
sbb
mov
in
jle
fwait
xchg
movsl
xlat
ljmp
dec
js
cmp
or
test
sub
jns
mov
mov
jl
cmp
sub
pop
pop
lods
mov
scas
js
pop
xor
mov
or
xor
outsb
cmp
inc
scas
pusha
lock
add
mov
mov
cmp
sbb
pop
jmp
adc
and
test
repnz
mov
mov
jp
mov
xchg
xchg
mov
push
xchg
nop
lods
mov
xor
jmp
jmp
out
and
jb
jp
mov
sub
adc
movsl
add
sbb
shll
js
sti
lea
fildll
push
add
mov
xlat
jbe
jnp
sbb
sbb
or
adc
mov
mov
sbb
inc
mov
mov
jae
inc
hlt
cmpsl
popf
pusha
ja
pop
fdivs
lea
mov
mov
lret
inc
push
mov
or
scas
inc
jne
pushf
pushf
scas
dec
out
aas
jg
push
pop
ss
test
pop
mov
dec
movsl
pop
idivb
in
pop
and
push
push
nop
sahf
movsl
outsb
lahf
cld
out
or
adc
aam
movsl
inc
je
lea
pop
loop
mov
out
jbe
iret
mov
push
xor
cmp
jo
pop
dec
addr16
mov
mov
sub
mov
in
call
popl
ss
xchg
fisttpll
push
das
push
adc
push
popa
mov
shr
pop
gs
jecxz
lea
push
daa
and
std
mov
mov
pop
cmp
je
jae
lcall
lock
add
jnp
cmp
cmp
pop
in
mov
aam
inc
xor
push
fisubs
decb
mov
repz
fmuls
test
mov
or
jl
insb
in
pop
scas
lcall
xchg
pop
jno
scas
ja
out
in
div
xlat
addb
xor
push
xor
push
aaa
sub
cmp
jbe
jbe
inc
fs
xor
mov
dec
xchg
mov
xchg
fstpt
pop
mov
mov
pop
mov
addr16
pop
ds
cmp
mov
divl
repz
mov
pusha
jecxz
aam
pusha
loope
fistpll
imul
mov
cmpsb
lods
mov
lea
or
cli
cs
icebp
adc
ret
ret
aaa
lret
mov
inc
out
fisttpll
ljmp
cmp
sti
lret
sbb
cmpb
add
add
das
xlat
hlt
stos
mov
cmp
inc
pop
outsb
pop
mov
adc
ud0
or
adc
sahf
add
adc
adc
call
jmp
mov
clc
or
mov
clc
rcrb
mov
cmp
fistl
xchg
lea
sbb
rolb
pop
scas
mov
xchg
xchg
imull
cmp
lock
shlb
rolb
cwtl
ja
sarl
inc
test
clc
push
cmp
stc
inc
mov
mov
test
mov
test
loopne
into
daa
mov
add
ljmp
or
dec
leave
pushw
xchg
jmp
push
xor
lea
pop
jp
js
ja
sbb
adc
mov
out
lods
ret
cmp
jnp
push
pop
mov
jecxz
popa
lcall
dec
cmpb
fdiv
xor
lea
test
sub
hlt
test
lods
leave
cmpsb
fs
mov
fiadds
jmp
jb
xor
insb
sbb
out
adc
push
inc
mov
inc
int
mov
push
movsb
jl
mov
jecxz
xchg
xor
xor
mov
mov
push
cmp
mov
cmc
outsb
pop
cmpsl
jge
xchg
mov
pop
add
pop
out
push
les
sbb
dec
notb
cmp
sbb
test
adc
cmp
sbb
pop
mov
enter
test
mov
sub
icebp
aam
cmp
push
testl
jecxz
sub
ss
jge
or
stc
mov
xchg
imul
shlb
dec
lea
lds
or
lods
xchg
pop
dec
push
dec
xchg
loope
nop
loope
jge
and
addl
mov
rcrb
dec
inc
imul
jb
mov
and
loop
jo
lods
stos
inc
les
sub
bswap
outsl
cmp
xchg
or
mov
mov
push
or
lock
fcoml
loopne
jnp
insl
adc
add
sbb
les
out
ret
dec
push
inc
mov
stos
ljmp
push
ss
inc
cmpsb
daa
push
sub
push
gs
fsubrl
lods
or
mov
mov
call
add
or
push
pop
xchg
test
push
sbb
add
pop
push
cmp
jno
jge
pop
into
jnp
mov
mov
sti
jecxz
aam
fsubl
iret
jp
and
das
add
pusha
cmpsl
loop
adc
add
sub
es
sti
mov
pop
daa
outsl
cs
jbe
fwait
scas
pop
cltd
xchg
inc
push
pop
arpl
jg
popa
and
out
inc
inc
mov
flds
stc
aam
cld
rorl
cmp
pop
dec
icebp
punpcklwd
stc
jmp
xor
dec
aaa
popa
rcl
pop
dec
xchg
ja
rep
sbb
push
xchg
loopne
lds
data16
adc
imul
clc
in
fcmovnb
lret
cmpsl
mov
xchg
repnz
cmp
rorb
jmp
ljmp
or
mov
and
mov
xlat
pop
push
mov
shll
mov
add
cmpsb
mov
shrd
push
sahf
je
out
xor
mov
inc
bound
or
js
adc
adc
movsb
cmp
mov
insb
stos
rorb
outsb
ss
into
push
or
mov
hlt
cmp
insl
das
inc
sarl
jle
daa
repnz
push
pop
push
rcl
fstps
mov
xlat
pop
lock
inc
ret
nop
adc
add
fmuls
mov
pop
imulb
push
cs
or
nop
repnz
jno
lods
cmp
fs
jne
mov
inc
scas
push
or
div
add
and
mov
adc
jp
test
gs
popf
push
aaa
lahf
jne
mov
shr
and
sbb
xchg
and
les
jl
push
in
data16
dec
clc
or
testl
cmpsb
lret
inc
mov
push
push
inc
push
gs
stc
sbb
lcall
jbe
leave
sar
popf
icebp
jns
mov
cmp
insl
ljmp
stc
mov
insb
in
mov
cwtl
jge
sti
or
fcmovnu
fcoms
or
aam
jne
test
xchg
jo
push
push
sbb
mov
xor
push
jmp
push
pop
sub
cmp
adc
cltd
jb
in
rolb
mov
mov
imul
xlat
mov
fisttps
test
pop
xchg
mov
cmpsl
push
adc
in
iret
sahf
into
sub
sbb
push
lds
jbe
into
cmp
fwait
push
int3
mov
sub
mov
cmc
lea
push
and
jl
push
jb
rorb
orl
inc
and
mov
adc
fwait
jno
and
js
jb
cmp
ror
jmp
fmul
outsb
dec
mov
adcb
mov
xor
je
push
jge
jecxz
adc
aad
mov
mov
loop
xchg
call
lret
insl
cmp
and
or
ds
bound
call
adc
push
in
fsub
and
push
jne
add
jl
sub
setl
icebp
push
mov
rcrl
mov
xchg
mov
ja,pt
aas
xor
jle
mov
pop
call
adc
sti
rclb
sahf
mov
lock
pushf
xchg
pop
aam
xchg
jb
dec
lods
xor
mov
jnp
popf
mov
sbb
shrl
inc
lret
or
jl
movl
in
test
mov
out
or
dec
xor
out
add
sar
push
jae
push
mov
dec
std
aaa
out
mov
lods
jnp
sub
shlb
fisubrl
jae
repnz
scas
repnz
fwait
stos
lahf
or
popf
sub
and
sbb
pop
xor
mov
adc
call
adc
xor
dec
mov
das
dec
je
inc
and
hlt
push
cmp
and
in
mov
mov
cld
ss
push
xor
add
cmpsl
aad
push
pop
ficoms
adc
test
and
loope
xor
add
shrl
icebp
xor
dec
mov
xor
mov
push
mov
jb
push
mov
adc
dec
xchg
data16
int
aam
mov
pop
dec
rcrb
mov
fstpt
sub
aad
insl
insb
lret
mov
lods
fs
pop
push
neg
add
mov
sbb
hlt
enter
mov
shl
xor
pop
bound
mov
imul
dec
fisubrl
gs
or
bound
or
loope
mov
nop
push
das
cmp
push
lret
cwtl
jmp
and
inc
popa
ret
jp
lret
insl
sub
into
mov
push
lret
loop
xchg
iret
pushf
lds
lret
dec
inc
bound
loope
inc
cs
js,pn
out
pop
or
xchg
mov
in
in
cli
aaa
jne
shll
mov
lds
int
dec
xchg
mov
mov
ficompl
dec
jo
int
xchg
xchg
or
mov
fbstp
sub
popf
add
mov
xor
out
lock
push
mov
xor
repnz
mov
insl
xchg
adc
mov
loopne
mov
mov
xchg
jge
add
loope
lcall
cmpsb
ss
lea
lods
pop
xchg
pushf
or
mov
mov
push
jl
in
jecxz
push
push
pusha
mov
jmp
sbb
fldcw
mov
cmpsl
mov
inc
int
cmp
mov
and
pop
gs
lcall
jle
xor
movsb
mov
or
mov
je
mov
mov
add
movl
mov
add
lea
dec
cmp
add
push
fwait
adc
mov
mov
cltd
cmpsb
mov
cmp
mov
mov
das
cmpsb
sti
push
js
fsin
adc
mov
aaa
shlb
dec
aaa
arpl
jp
add
pop
sbb
addr16
mov
das
push
sub
das
mov
out
cmpsb
jno
mov
fidivrl
dec
cltd
repnz
and
psrlq
aam
inc
sub
dec
pop
test
xor
addr16
cltd
xchg
imul
sub
pop
sbb
jb
push
fldl
cwtl
xor
ret
lods
loopne
and
mov
int
jmp
cmc
and
mov
sub
sbb
lret
xchg
sub
lret
out
gs
aad
xor
repnz
icebp
adc
and
jno
mov
adc
inc
cmp
jecxz
cli
daa
jg
sub
and
sub
cli
jnp
cltd
subl
imul
lock
fwait
mov
shlb
mov
fs
popa
sbb
ljmp
sbb
push
dec
lods
cmp
jns
push
imul
mov
jne
adc
iret
sub
scas
pop
xchg
popf
push
mov
mov
mov
scas
rolb
das
dec
add
xchg
insl
jmp
adc
or
sub
out
adc
movb
incb
mov
scas
cmp
sub
mov
dec
repnz
fisubrl
adc
call
sub
add
ljmp
jl
dec
std
iret
push
inc
movsl
ret
cmc
sbb
push
push
jnp
pushf
cmp
dec
sub
inc
outsl
xchg
mov
dec
xchg
and
ret
test
mov
gs
dec
sub
mov
mov
fwait
ret
mov
push
pop
cltd
cwtl
xor
fildl
mov
pop
dec
and
and
mov
lods
pop
add
pop
sub
jne
sbb
pop
and
icebp
les
mov
call
sahf
ljmp
pop
repnz
rcr
push
sar
and
in
fdivl
ficoml
lods
push
aam
push
enter
jl
jmp
shl
int
xchg
mov
stos
xchg
sbb
out
cmpsb
cmp
cwtl
lods
loope
dec
adc
imul
mov
add
inc
sarl
mov
mov
sub
pop
cmp
js
xlat
and
sub
test
loopne
hlt
popa
pop
test
xor
neg
fwait
aaa
pop
loopne
xor
int
popa
or
mov
jl
popa
dec
leave
shlb
gs
push
or
dec
rclb
cmp
push
push
out
push
adc
movsl
frstor
lcall
pop
aas
pushf
mov
xchg
push
cmp
std
jbe
loop
lods
repz
push
pop
into
xor
hlt
xchg
sarb
leave
xchg
xor
or
push
jp
mov
insb
imul
leave
add
adc
into
testb
push
jbe
mov
pop
adcl
cmp
out
sbb
sbb
lret
mov
cld
mov
sub
lock
xchg
shr
push
mov
jecxz
pop
jns
aam
test
sti
or
jge
inc
divb
and
test
pop
outsb
pusha
xchg
push
sbb
out
xchg
jmp
aas
pop
data16
sub
add
out
cmpl
dec
cli
mov
jecxz
jge
and
fs
cmpsl
aas
out
mov
mov
pop
das
mul
mov
loope
dec
imul
and
loope
mov
pop
arpl
shlb
out
pop
jmp
mov
xchg
lahf
cld
rorl
add
dec
sub
xchg
mov
adc
pop
inc
inc
mov
cmpsb
mov
jg
sbb
push
sbb
ss
sub
push
and
aaa
fcoml
movsb
jno
mov
out
pop
subl
and
inc
nop
lret
xchg
les
cld
add
fmuls
das
scas
repnz
mov
not
das
pop
dec
nop
adc
or
push
inc
xor
inc
and
and
sarb
xor
and
in
pop
or
lea
fwait
inc
mov
hlt
repnz
dec
sub
add
push
sub
adc
nop
xchg
mov
int
icebp
int3
dec
push
xchg
inc
adc
jp
mov
rcl
fwait
xchg
ja
xor
add
push
lahf
int
mov
mov
faddp
arpl
pushf
inc
adc
mov
repz
add
sbb
pusha
mov
cmp
ficomps
repz
jp
lds
mov
popf
popa
and
or
std
inc
nop
ret
push
push
sbb
repz
inc
cli
sbb
roll
shl
xor
fdivl
adc
push
in
lcall
fidivl
push
add
push
xor
push
js
insb
push
push
add
mov
push
or
jle
ss
pushw
mov
mov
jae
call
stos
pop
fs
lods
adc
ljmp
sub
andl
mov
gs
push
icebp
ret
mov
xor
out
jge
dec
repz
pop
sahf
bnd
lods
int3
adc
dec
arpl
or
out
jae
shll
mov
xchg
into
pop
pop
hlt
lods
jg
cld
subb
mov
inc
cwtl
add
ret
mov
stc
sub
xchg
test
pop
inc
mov
shlb
dec
fldcw
cmp
movsb
cmp
clc
adc
adc
sahf
incb
insb
add
jl
push
xchg
out
fisttps
addr16
mov
jecxz
dec
mov
or
or
daa
lock
enter
lret
in
adc
mov
dec
lock
cli
je
loopne
cmp
sub
repz
pop
push
mov
test
or
inc
mov
sbb
and
out
insl
bnd
jns
ja
ror
mov
aam
iret
fcmovne
cwtl
inc
stos
in
add
jno
jno
enter
sbb
xor
shll
in
push
inc
mov
mov
int3
xchg
es
call
roll
stc
pop
imul
hlt
out
pushf
daa
push
or
xchg
pop
dec
jb
mov
adc
cmpsl
in
adc
in
pop
push
dec
ret
out
dec
dec
sub
mov
or
lahf
pop
sub
jb
fsubl
xor
outsb
or
loopne
ret
xor
pop
pop
out
insb
or
orb
imul
fldenv
pop
das
add
xor
pop
insl
cltd
mov
jnp
cmp
iret
jmp
cmpsl
push
sbb
sahf
cmc
xor
aam
das
fisttps
arpl
sub
xlat
in
dec
pop
add
mov
push
ja
push
mov
mov
gs
sub
mov
repz
xchg
imul
jge
adc
and
or
jbe
jb
rol
int
and
push
xor
stc
insb
popa
pmaxub
fidivl
xchg
outsl
mov
mov
test
cmc
popf
es
lahf
push
fistps
stos
or
insb
xchg
and
jne
sub
std
loopne
cwtl
lret
lahf
out
jbe
popa
sahf
adc
mov
iret
adc
imul
sbb
ljmp
cmp
call
sbb
std
push
jl
into
insb
pop
pop
fwait
inc
ja
jp
idivl
cltd
icebp
mov
xchg
imul
repnz
cli
sti
sub
mov
test
push
push
mov
mov
or
mov
and
cmp
or
jp
imul
add
adc
cmp
out
mov
sti
out
xor
pop
test
push
or
fwait
stos
dec
outsb
jmp
gs
stc
mov
sahf
add
hlt
xor
xor
inc
in
mov
pushf
lods
push
inc
outsb
xchg
sbb
or
mov
inc
psubusb
adc
sub
jnp
int
or
cmp
shlb
inc
push
cmp
fmull
jns
or
in
repz
push
outsb
in
xchg
jb
cs
adc
mov
jo
popa
icebp
jbe
gs
les
jo
in
and
dec
push
cwtl
daa
out
test
push
mov
xor
push
arpl
in
pop
mov
nop
or
inc
insb
inc
int
mov
pop
adc
sbb
shll
sbb
cli
adc
inc
movsl
push
in
mov
dec
les
push
pop
pop
fwait
sbb
shrl
xchg
movsl
dec
push
stc
cli
push
call
push
fwait
inc
mov
stos
push
rcl
cmp
dec
bound
xchg
or
cs
aad
dec
jecxz
jne
mov
aas
push
stos
cli
lock
jne
dec
sbb
sub
es
fsubr
xor
stos
scas
mov
add
push
push
push
sbb
cmp
jmp
popf
pop
lds
pop
jns
dec
sub
popa
out
add
dec
dec
insb
sub
call
pop
pop
out
fistps
outsl
jno
jae
jg
cmp
shl
add
push
and
test
iret
cli
je
sahf
dec
and
push
sbb
jae
adc
out
sbb
sub
int3
ds
sbb
mov
pop
rcll
loop
jno
inc
daa
dec
cmc
lods
add
rcrl
pmaxub
movsl
das
mov
mull
loope
inc
imul
push
imul
inc
adc
pop
inc
xorl
fincstp
outsb
jl
out
or
in
jns
mov
fisubrs
pushl
xor
jb
in
mov
lahf
sub
mov
test
popa
pop
jmp
outsb
sub
cmp
xor
nop
ret
xchg
rclb
pop
in
fiadds
add
cmp
mov
icebp
jecxz
or
adc
lahf
fbld
in
xchg
or
idivb
je
xchg
rol
out
imul
aam
dec
inc
in
shrl
jmp
sbb
ss
sbb
rolb
loope
ljmp
outsb
mov
jb
rcl
fs
mov
inc
push
pop
js
pop
jns
aaa
mov
sbb
cmp
xchg
aas
testl
aad
mov
fnsave
push
and
mov
outsb
pop
sub
mov
xchg
inc
in
and
mov
add
adc
xor
das
and
xor
sbbb
in
cwtl
mov
dec
sub
add
mov
lods
ljmp
cmp
fs
mov
pop
and
mov
xchg
jnp
test
jmp
add
test
add
aaa
push
les
sarl
inc
scas
xchg
mov
jp
cmp
imul
inc
and
jb
push
jl
aad
lods
pop
mov
xchg
idivb
inc
cmp
sbb
sub
stos
int
mov
push
cmp
ret
into
sbb
int
cltd
test
sub
mov
out
dec
loopne
jmp
jnp
inc
aad
stos
enter
add
and
pop
mov
and
ss
cwtl
data16
inc
mov
mov
js
or
cmpsl
and
push
push
outsl
into
cmp
inc
jno
pop
and
ret
inc
popa
xchg
jmp
fcmovbe
fdivrs
or
insb
outsb
jecxz
pop
pop
aam
in
in
inc
mov
notl
dec
into
in
mov
xchg
mov
out
or
pop
or
xor
push
push
stos
idivb
pop
imul
jl
test
mov
ja
and
mov
sub
imul
test
sbb
je
inc
pop
cli
insl
mov
push
or
mov
mov
mov
out
ss
xchg
stos
cli
icebp
xchg
enter
movsb
xchg
pushf
adc
hlt
adc
cmpsl
cmpsl
addl
jmp
test
lods
xor
dec
xchg
inc
mov
pop
mov
xor
sarb
cs
fidivrs
dec
lea
add
call
movsl
out
inc
sbb
inc
pusha
roll
cltd
mov
pop
xchg
ret
inc
mov
dec
jnp
stos
adc
mov
push
dec
ja
xchg
cwtl
push
mov
xor
and
mov
adc
jb
std
dec
sbb
iret
sub
adc
scas
dec
pop
jg
sub
add
cmp
inc
or
leave
dec
aam
jmp
mov
xchg
add
push
ds
xor
popw
icebp
push
cmp
imul
insb
int3
or
in
sbb
mov
cli
mov
inc
int3
sbb
aad
je
xchg
mov
shl
lret
sti
stos
int
ss
jne
cmpsb
jns
mov
mov
jmp
ret
dec
mov
in
setp
cmp
mov
mov
shr
xchg
sbb
ljmp
stos
leave
or
adc
xor
pop
int3
mov
fbstp
xor
pop
cmp
aas
push
xor
push
push
mov
outsb
mov
jp
dec
mov
mov
push
loop
jge
cmpsl
aas
outsl
lahf
fists
dec
pop
cmpsl
fisubl
das
lcall
fimull
jle
lds
lret
add
adc
and
das
mov
add
jae
ret
sub
test
imulb
mov
push
jo
dec
call
inc
xchg
pop
or
dec
xchg
dec
nop
out
popf
arpl
mov
and
sbb
add
iret
cmp
popa
lds
xor
repnz
dec
cmpsl
jge
sub
adcl
ja
add
jae
jmp
mov
loope
rcrb
les
inc
push
dec
pop
cwtl
xor
inc
adc
cwtl
inc
add
out
xchg
or
sbb
fbld
mov
mov
push
insl
dec
push
mov
and
cltd
add
xlat
enter
imul
das
jo
dec
lds
and
mov
es
fwait
fs
dec
roll
or
roll
mov
push
adc
push
inc
aam
out
mov
les
sub
cmp
out
mov
lcall
adc
pop
jno
cltd
jecxz
adc
mov
jns
jmp
fs
pop
incl
sbb
pop
push
push
shll
jle
adc
sub
push
movsb
ror
mov
outsb
push
xchg
lcall
push
mov
jmp
fistpll
mov
imulb
lret
js
cmp
push
shll
pop
dec
dec
add
sbb
cmpsl
pop
cmp
lock
pop
jnp
sub
push
outsb
repnz
aam
enter
sbbb
mov
pop
or
xor
sbb
mov
xchg
jnp
mov
stos
add
xchg
dec
addb
xor
dec
xchg
int
or
jae
inc
jl
fmulp
dec
xor
dec
push
adc
xchg
inc
je
mov
add
cs
fwait
sbb
adc
cmpsl
mull
and
pop
add
xchg
fnstenv
pop
jns
add
push
sbb
cwtl
in
mov
push
adc
sbb
out
outsl
loope
xor
adc
imul
ss
cmp
mov
and
jecxz
lock
pop
xlat
ljmp
sub
outsl
pop
ds
xchg
int
aaa
xchg
mov
nop
das
inc
sub
lods
mov
addr16
icebp
pop
fs
in
cli
mull
cmp
jmp
stos
ret
repnz
cmp
sbb
mov
ja
mov
ret
es
jnp
cmp
lds
xor
sub
popa
adcl
popf
xchg
dec
sbb
adc
ret
jecxz
jo
stos
ljmp
outsb
outsb
jl
jge
insb
jae
test
mov
dec
jl
inc
std
or
and
push
test
lea
adc
out
pop
xchg
jg
and
adc
in
push
rcrl
sti
fmull
fidivrl
or
data16
lea
jmp
das
push
subb
in
mov
or
fldenv
cmp
push
jge
jo
mov
pop
jp
sahf
push
push
test
xchg
xchg
inc
adc
out
mov
xor
or
repnz
lret
lods
fcomps
jg
ja
or
xchg
fldcw
mov
mov
dec
jl
testl
jbe
add
cmp
sub
xchg
pop
stos
insl
dec
mov
imul
push
pop
arpl
xchg
sub
cld
aas
sahf
sahf
clc
pop
mov
xor
jmp
mov
pop
mov
mov
cs
dec
xor
jle
gs
ss
pop
jge
hlt
fcmovbe
dec
flds
lock
xchg
and
push
sbb
dec
push
aaa
adc
lahf
mov
cltd
cmpsb
mov
in
sbbl
loop
pusha
push
jne
or
cmp
loopne
mov
add
and
jbe
test
loop
lret
dec
movsb
fucomi
sbb
xor
xor
aam
out
mov
jbe
pop
push
jns
cmc
das
shlb
pop
cmp
out
mov
dec
xor
out
xchg
jae
pop
add
and
insb
mov
loopne
jmp
dec
mov
sub
inc
xor
lahf
fwait
pop
iret
clc
pop
mov
inc
jb
pop
jae
loop
sub
outsl
sbb
jae
sub
mov
mov
push
fimuls
je
push
sarl
jae
sarb
or
fwait
jae
and
pushf
jne
xchg
jle
push
xchg
aaa
pusha
addb
stos
rcll
lahf
push
xor
addr16
mov
fnsave
dec
fisubrs
test
push
lds
xchg
sbb
jle
stc
rcll
adc
mov
clc
mov
fisttps
xchg
fsub
sahf
repz
mov
imul
cmpsb
xor
icebp
sbb
int
jno
nop
mov
jb
xor
pop
int3
or
repz
pop
pushf
enter
in
popf
pop
pushf
mov
push
sub
out
rcll
into
pushf
push
out
packuswb
jno
cmc
sarl
push
inc
mov
loopne
push
jge
aam
add
adcl
lahf
pop
pop
fisubs
fcoml
mov
mov
shlb
add
or
mov
sub
sub
out
add
mov
jne
mov
jo
cmc
movw
mov
bound
dec
mov
jg
sbb
lahf
cwtl
sbb
inc
ja
dec
push
decb
xchg
cld
es
shl
pop
outsb
fists
sarb
push
and
push
divb
loop
ljmp
das
push
pushf
mov
push
jge
insl
push
or
insb
aam
ret
out
inc
xchg
stc
imul
add
mov
in
pop
mov
cmp
mov
cmp
dec
fisttpl
shl
pop
aam
mov
fsubl
pop
dec
hlt
movsb
test
inc
ret
ja
dec
jbe
push
fisttpl
shlb
loopne
fdivr
je
mov
cltd
gs
jbe
lods
movsl
jbe
mov
aaa
adc
js
dec
mov
scas
mov
jns
test
jno
xor
outsl
adc
insb
push
test
notb
mov
mov
xchg
enter
add
clc
loope
jo
sbb
mov
pop
xchg
imul
jae
jl
movsb
mov
push
gs
aas
mov
mov
cld
mov
adc
rorb
xchg
and
adc
std
cmp
aas
mov
xlat
push
pop
iret
xchg
bound
dec
ss
in
dec
add
out
lret
into
aas
test
or
leave
adc
xchg
rcrb
jno
enter
shll
jecxz
push
inc
rcr
movsl
inc
loopne
ret
out
mov
push
pop
ja
loope
pop
jo
lock
cld
outsb
ret
push
add
in
shll
out
xchg
sar
loope
test
cwtl
or
lahf
dec
sbbl
sub
shrb
sbb
ret
je
mov
rorb
jnp
cmpsl
ds
mov
sbb
adc
es
lret
cmpsl
or
adc
add
or
and
sbb
push
jmp
leave
cmp
pand
ret
jne
pop
cmpl
out
cmp
rol
pushf
mov
lcall
sub
xchg
iret
sub
push
add
push
cmp
push
jp
jbe
pusha
jge
cmc
and
std
jae
stc
ljmp
aad
mov
ret
pop
add
mov
into
xchg
mov
cltd
and
sub
daa
lods
jo
pop
out
insb
cmp
xor
xchg
outsb
test
out
pop
icebp
shrl
int3
lahf
or
mov
xchg
ljmp
movsl
sbb
push
add
sbb
test
or
jmp
mov
xor
sub
es
push
mov
out
insl
lock
scas
push
cli
jno
xchg
mov
jl
or
loop
clc
rcrl
xor
adc
push
into
xor
jne
inc
pop
ret
or
int
les
fimuls
jb
xchg
scas
add
jle
or
mov
aad
cmp
cmp
fldln2
sbb
ja
xor
sub
jmp
sbb
adc
test
mov
int
xor
pop
fstps
pop
and
jl
pop
pop
lods
lahf
or
dec
imull
pop
movsb
push
adc
mov
inc
lahf
icebp
inc
jp
in
lahf
ljmp
inc
xchg
add
clc
fiadds
enter
nop
lahf
xlat
ljmp
jae
fndisi(8087
push
lret
jo
out
mov
movsb
shrl
pop
sbb
popf
push
mov
shl
mov
cld
outsb
mov
jbe
mov
cmpsb
push
mov
inc
mov
roll
stos
cmp
scas
add
pop
in
je
enter
pop
push
dec
fnstsw
push
mov
mov
xchg
mov
arpl
lods
sti
pop
xor
pushf
pop
jl
and
inc
jecxz
rorb
fcmove
and
sbbl
gs
iret
cmp
sbb
gs
push
inc
mov
enter
mov
sbb
enter
fwait
cmp
xchg
bound
inc
add
add
push
cmp
pop
imul
xlat
sbb
andb
arpl
xchg
daa
fsubr
gs
dec
xorl
lea
aaa
scas
or
ja
fsqrt
mov
fidivl
out
dec
cmp
rclb
sarb
add
push
dec
test
fwait
lret
iret
int3
scas
mov
das
or
jo
repnz
push
icebp
cli
mov
and
inc
jnp
add
dec
mov
imul
add
ja
iret
cs
push
fimuls
jae
out
inc
sbb
lock
pop
mov
loopne
lods
mov
pop
in
jnp
hlt
fldl
lcall
pop
xor
jno
xor
aaa
xor
and
imul
jmp
pop
inc
je
cmp
aaa
jmp
cltd
push
pusha
inc
add
xor
scas
addb
insl
or
mov
mov
lds
jno
test
je
daa
pop
jne
add
and
lret
cmpsl
mov
orl
in
mov
mov
xchg
fistl
rorl
orl
shll
jnp
lock
fsts
pop
stos
pop
or
das
pop
cltd
rorb
test
push
pop
or
xchg
f2xm1
jecxz
sub
or
cmp
mov
je
pop
add
mov
ja
mov
push
stc
inc
fdivrl
popa
sbb
cwtl
popa
jg
xchg
jl
lock
in
stos
clc
mov
loop
push
and
int
mov
jae
jmp
mov
pop
cmp
negb
mov
mov
ret
xacquire
pop
mov
movsl
pop
ret
push
daa
mov
in
and
jg
push
fisttps
mov
push
add
pop
shrl
repnz
in
push
ret
or
stos
shr
rcrl
loopne
mov
add
scas
pushf
scas
in
dec
sbb
jp
mov
outsl
lods
jnp
sbbb
adc
dec
jo
xchg
test
les
cmpb
int3
push
inc
icebp
outsl
hlt
lret
push
push
and
js
out
das
cmp
jo
mov
std
inc
xor
lea
push
into
adc
mov
sbb
out
mov
inc
in
xor
imul
lsl
pop
out
lock
je
sarb
adc
in
and
pop
cmp
fistps
adc
add
inc
jb
std
out
mov
pop
aas
mov
adc
pop
movsb
ret
das
popf
jmp
sbb
nop
in
shll
mov
rcll
pop
inc
stc
xchg
inc
inc
arpl
sub
mov
into
shrb
jge
lret
mov
mov
mov
jg
stos
js
jmp
pop
scas
dec
rolb
adc
in
pop
in
inc
push
out
inc
push
sbb
xor
adc
adc
pop
jmp
dec
call
add
lret
xchg
fistps
cmp
pop
mov
loop
add
movsb
hlt
and
loope
idivl
pop
push
insl
and
out
scas
test
jl
int
sbb
les
push
enter
sbb
cwtl
push
stos
jo
push
or
mov
lret
pusha
test
in
inc
bound
push
xlat
mov
sbb
mov
and
popa
sbb
lcall
push
pop
jae
lods
and
jmp
jb
push
xchg
repz
stc
mov
test
dec
loope
loop
jg
and
pop
xor
fwait
xchg
mov
xchg
nop
push
jae
cmc
scas
lretw
ds
cmp
pushf
loope
mov
mov
sub
xlat
adc
cwtl
loope
call
add
dec
rcr
cmp
test
ret
dec
add
bound
mov
or
sub
cld
add
pushf
loopne
or
push
ss
scas
add
add
pop
and
inc
pop
sarb
test
dec
or
divb
push
dec
mov
sub
into
and
clc
and
popa
stos
cmp
ret
pusha
lods
sub
lea
fldt
fcom
dec
adc
sbb
jmp
dec
mov
out
aaa
pop
sbb
fbld
jmp
lock
xor
xor
js
add
jp
push
jl
gs
mov
mov
xchg
insl
mov
insl
or
mov
inc
loopne
out
stc
inc
jmp
xor
mov
mov
lods
shrl
and
inc
hlt
dec
mov
push
mov
jmp
pop
adc
scas
fnstenv
shlb
cld
pop
enter
ficomps
movsl
std
mov
inc
or
das
into
add
cltd
push
sbb
and
outsl
pop
and
pop
cmp
cmpb
jg
sub
sub
mov
lcall
jbe
or
outsb
add
imul
scas
aas
subb
std
mov
lods
sti
sub
in
gs
jnp
dec
iret
paddw
xor
fcompl
adc
and
enter
cld
add
mov
daa
stos
fdiv
pop
aam
lcall
test
mov
jecxz
ss
icebp
ret
insb
aam
pop
xchg
jp
pop
dec
mov
cltd
mov
pop
mov
inc
dec
cmp
jbe
insl
arpl
sub
fwait
mov
and
cmpsl
inc
sbb
sub
loopne
and
in
cwtl
push
pop
add
imul
in
ja
imul
aas
fs
lret
loop
int3
stc
shll
xor
and
pop
and
mov
arpl
int3
inc
int
out
ljmp
push
mov
popf
jns
sahf
or
adc
cmp
push
push
lock
jg
adc
pop
je
push
ds
add
dec
xor
leave
sbb
jmp
imull
jl
mov
adc
int
out
and
nop
outsb
push
push
loope
inc
push
stos
inc
js
stos
sub
and
adc
sbb
sarl
sub
test
mov
out
and
dec
pop
mov
jb
jecxz
or
lods
pop
and
adc
cmp
enter
fisubs
ss
jbe
ss
nop
aas
mov
cmp
xor
movsb
shll
adc
xchg
lahf
or
cmp
sub
mov
push
lock
mov
inc
mov
inc
out
or
pop
cmp
push
mov
stos
ss
cltd
iret
xlat
mov
cmpsb
xchg
arpl
mov
push
aam
xchg
js
lock
int3
mov
or
pop
pop
sbb
sbb
adc
mov
pusha
or
inc
push
icebp
test
test
out
pop
repnz
mov
enter
dec
fsubl
cwtl
cmc
pop
cmp
fsubs
aas
test
xchg
loopne
pop
pop
in
jge
add
mov
inc
popf
sbb
out
je
jecxz
pushf
jge
push
insl
mov
cmpsl
mov
dec
fnclex
imul
fwait
and
pop
fdivrs
cwtl
mov
cmp
cmp
cmp
xchg
sub
test
mov
outsl
cmpsb
inc
mov
int3
lcall
mov
mov
sbbb
cmp
jge
push
jbe
and
jo
cmp
icebp
aam
xchg
out
dec
sbb
cmc
outsb
or
inc
xchg
push
imul
push
sub
aad
xorl
mov
dec
pop
mov
xor
pop
insl
pusha
cli
sub
mov
sarl
xor
xor
jge
mov
lds
mov
outsb
mov
decl
and
mov
filds
mov
shl
je
out
dec
pushf
stos
push
dec
mov
lret
lahf
sub
stos
sub
xchg
lahf
imul
or
dec
and
cmpsb
ret
fisubrs
or
sub
or
daa
inc
cmp
push
xchg
arpl
inc
cltd
sub
loop
jbe
sub
addr16
xchg
inc
pop
xchg
fucom
sbb
adc
sub
std
jmp
std
stos
ss
dec
push
or
jge
out
gs
push
pop
mov
sbb
xchg
cmpl
imul
pop
les
movsb
lods
cmpsl
xchg
popf
jns
rcrl
and
lock
jno
adc
adc
adc
lcall
pop
mov
mov
insb
addr16
or
rcrl
mov
xchg
adc
add
pop
out
imull
mov
push
dec
sbb
sub
mov
lahf
or
inc
inc
and
aas
inc
je
mov
pop
add
add
fcomi
outsb
jge
pop
test
pop
decl
or
mov
sbb
mov
xchg
pop
pop
iret
jns
mov
sahf
cmpsw
push
mov
jmp
mov
addr16
popa
mov
pop
out
aam
rcrl
add
pushf
fdivs
inc
scas
mov
pop
imul
mov
mov
nop
lock
pop
mov
lahf
dec
xor
xchg
add
daa
in
jg
xchg
adc
lock
movsb
data16
xchg
mov
mov
inc
or
dec
leave
lret
jb
loope
sbb
dec
push
and
pop
dec
int
int
jns
adc
popf
push
push
push
loope
jg
xchg
ret
sarl
or
popa
adc
rorb
sbb
jo
cmp
xchg
jb
imul
adc
push
es
sbb
dec
xchg
sahf
jecxz
cmp
xor
aad
sti
iret
pop
xor
push
adc
mov
push
add
sar
clc
and
dec
cld
mov
jo
sbb
clc
sbb
aad
add
insl
xchg
rcrb
int3
imulb
pop
sub
clc
sub
mov
fsubrl
loope
adc
mov
out
mov
sbb
cmp
andnps
call
lea
mov
in
fisttpll
js
outsb
jno
sbb
xchg
inc
cmp
cmp
sub
jb
adc
dec
int
and
lock
xchg
mov
pushf
jle
popf
pop
adc
push
jno
fs
scas
dec
dec
shll
mov
xor
pop
sahf
push
outsl
icebp
iret
stos
mov
loope
aam
sub
aas
add
mov
fmuls
out
out
push
ja
loop
jno
mov
jecxz
mov
mov
dec
inc
movsb
mov
pop
adc
fucomp
leave
call
out
fdivrp
lods
pop
mov
inc
mov
fisubs
test
or
pop
and
mov
gs
cmp
sub
adc
or
xor
sarb
frstor
mov
loop
xchg
pop
in
ret
mov
leave
mov
popf
stos
dec
jle
dec
enter
test
loopne
loopne
pop
fwait
inc
sub
into
movsl
decb
int3
iret
icebp
sbb
adc
ds
cwtl
add
shl
xor
stos
sbb
aas
insb
dec
push
in
mov
cltd
imul
enter
xchg
movsl
cmp
push
test
push
push
push
testl
clc
mov
adc
je
sbb
mov
les
pop
fiaddl
mov
lea
iret
stos
lret
add
xchg
mov
jg
fisubrs
jo
inc
stc
sub
cs
xor
xchg
aam
jp
mov
stc
out
ljmp
ret
test
cmp
out
or
mov
xor
push
ds
sbbb
adcb
add
stc
test
lds
int3
orl
outsb
int3
cli
push
jmp
dec
jbe
popf
push
fistps
je
fstpl
xorb
adc
fldt
gs
lods
mov
sbb
pop
mov
jle
xchg
aad
xchg
push
rcrb
inc
jg
rolb
in
push
repnz
push
mov
ja
jg
enter
push
sbb
lahf
pop
loope
adc
sub
adc
lret
lahf
xor
fscale
or
jb
adc
gs
shlb
sub
test
cmpsl
cmp
test
imul
dec
adc
jno
push
ret
xchg
outsl
sahf
ret
lods
xchg
inc
xchg
mov
inc
push
int3
bound
repz
movsb
adc
xlat
mov
jbe
pushf
cli
adc
sbbb
inc
roll
dec
sub
stos
push
loopne
dec
mov
inc
stos
mov
or
cli
rolb
roll
jno
stos
je
pop
aam
sti
pop
fbld
and
add
test
sub
decl
lret
push
pop
fwait
jns
inc
in
std
mov
insl
ret
cmp
xchg
mov
ljmp
pop
lret
lahf
mov
inc
push
cmp
pop
out
insl
push
adc
cwtl
mov
popf
fsubrs
es
cmpsl
xchg
cltd
loop
repnz
or
fmull
push
lfs
inc
add
mov
imul
or
adc
lcall
shll
mov
js
or
jl
fmull
and
xor
add
call
pusha
aaa
lea
push
dec
mov
repz
xlat
add
mov
insl
mov
mov
fcmovnb
icebp
push
popa
dec
inc
sub
in
bound
sbb
mov
or
into
jnp
push
sub
dec
mov
xchg
and
sbb
push
and
xor
insl
adc
addr16
mov
push
mov
add
mov
nop
pop
negb
or
mov
adc
clc
pop
inc
mov
inc
jl
lret
fidivl
test
mov
stos
cmp
in
dec
clc
dec
aaa
fstpl
add
inc
ljmp
dec
cmpsb
adcl
jl
leave
push
in
sbb
dec
out
mov
mov
dec
test
popl
xorl
mov
pop
int3
xchg
inc
push
test
out
aaa
xchg
rclb
call
fsubr
add
rorl
jmp
dec
and
stos
cmp
dec
dec
jno
jae
mov
xor
push
lods
jecxz
rcrl
push
adc
sbb
cmpb
cmp
jbe
jl
pop
mov
cmp
mov
stos
mov
jp
mov
fidivl
out
push
in
mov
sub
test
in
push
out
fsubl
rorb
fwait
pop
add
adc
cmp
rorb
mov
out
das
lcall
fucomip
popa
xlat
or
sub
lea
inc
push
mov
mov
jl
pushf
test
mov
roll
or
or
jb
dec
sbb
xor
jns
jnp
cmp
or
in
and
xor
xchg
cmpl
sub
xchg
rcrb
mov
clc
push
sub
pop
js
addr16
add
add
jno
or
pop
fwait
pusha
dec
ret
pop
sbb
std
or
mov
js
jp
jmp
imul
pop
add
cmpsb
in
or
dec
xor
cwtl
in
cmp
sbbl
mov
xchg
popa
or
inc
loope
or
sbb
imul
daa
and
lahf
push
push
mov
clc
lret
repz
mov
cmp
cmp
inc
xor
ret
insb
sub
loopne
adc
les
xor
adc
ret
mov
xchg
mov
lcall
and
or
jl
test
neg
scas
cmp
addr16
shrb
add
je
push
mov
push
addr16
bound
jns
ja
testb
pop
rclb
cmp
push
push
decb
cli
cmpb
add
insb
cld
cmp
mov
jmp
jae
movsb
xchg
dec
inc
pop
inc
jne
addr16
xor
jmp
loopne
push
fidivl
aam
fidivl
dec
lds
inc
dec
lcall
xor
add
and
out
lcall
ja
xchg
fimuls
mov
es
imul
je
mov
xchg
js
or
push
shrl
daa
adc
cmp
and
ffree
dec
aas
fnstenv
sbb
movsl
push
mov
xchg
pushf
xchg
add
stc
mov
mov
in
xchg
andl
pop
loope
test
push
fstps
or
shr
test
xor
imul
aas
dec
out
sub
in
mov
daa
lret
cltd
jno
in
dec
aaa
sub
inc
dec
and
pop
cmp
add
nop
ljmp
sti
pop
adc
fiaddl
cmp
push
push
aam
and
pop
and
inc
sbb
or
stos
adc
mov
push
fisubrs
inc
sbb
jecxz
imul
jb
test
sbb
pop
mov
jae
inc
xchg
das
jnp
jbe
sbb
inc
push
setne
push
mov
cmp
andb
jo
xchg
mov
jecxz
sbb
add
and
xchg
xor
int
popf
inc
mov
jo,pt
aad
mov
pop
dec
stos
jmp
fidivrl
jecxz
int3
sbb
iret
out
int3
out
inc
xor
jns
arpl
iret
jl
hlt
xchg
insb
mov
pop
xchg
xor
lods
fsts
in
adc
movsb
mov
xchg
jne
sti
incb
dec
stos
imul
in
mov
int
aas
xchg
cmp
or
das
cltd
imul
mov
sar
push
ss
addr16
sub
ret
dec
and
mov
pushf
mov
andl
jecxz
pusha
mov
cmp
cmc
cmpsl
movsb
fwait
das
gs
int3
pop
pop
js
lahf
mov
and
sahf
or
xlat
mov
xchg
cmpsl
addr16
sbb
dec
mov
das
jne
imulb
mov
inc
xor
insl
pop
sub
add
lahf
shlb
xor
mov
leave
sbb
xor
xchg
jb
inc
jnp
test
add
sub
divb
lcall
mov
imul
das
pop
fldcw
jno
mov
shlb
rorl
rolb
mov
hlt
xor
jmp
imul
out
mov
xor
lods
and
mov
out
stos
jnp
and
loop
push
cmc
pushl
idivl
shlb
mov
mov
push
loopne
adcb
inc
fucom
pushf
inc
jne
nop
test
imul
mov
mov
pop
addr16
test
pushf
scas
jp
inc
aaa
inc
or
lcall
xor
dec
add
adc
out
xor
mov
je
outsl
jae
fstpt
nop
mov
jbe
shlb
push
out
adc
loope
dec
pusha
or
mov
mov
jmp
jbe
jp
dec
push
push
dec
mov
js
cmp
jp
hlt
rorl
clc
cmc
loopne
loop
mov
mov
dec
dec
ret
mov
fistpll
mov
push
loope
mov
jg
adc
out
repnz
ds
scas
es
mov
mov
inc
mov
jae
ss
imul
cltd
lock
popa
mov
cmpsl
dec
sbb
daa
xchg
xor
cmp
aam
adc
mov
clc
jbe
faddl
decb
cwtl
popa
out
push
cli
popa
pop
lods
mov
or
mov
out
or
jmp
sub
add
js
mov
xor
cmp
mov
cld
jae
into
pushf
aas
js
iret
hlt
mov
jns
or
and
and
push
clc
cmp
mov
sbb
pusha
insl
clc
fsubr
add
das
sub
es
int3
mov
and
xchg
add
sub
sbb
rcrl
and
cmp
dec
imul
cmpb
rcr
fwait
rol
hlt
push
sti
add
mov
addr16
addr16
jg
out
std
jmp
stos
popf
push
add
inc
dec
cmp
call
pop
adc
adc
mov
repnz
fstp
adc
lods
mov
test
ficomps
and
add
jmp
nop
xor
repz
inc
sbb
aas
sub
outsb
jecxz
jl
xor
mov
ss
cmp
sub
mov
insl
mov
cmc
in
gs
std
jg
push
nop
bound
fsubrs
or
dec
ds
pusha
in
lret
pop
mov
nop
mov
xchg
es
pop
in
outsl
cmc
mov
mov
into
or
in
xchg
loope
mov
lret
popf
jecxz
jne
idivl
mov
movsb
ret
sahf
pop
mov
inc
xchg
pushf
mov
mov
xor
js
or
imul
std
into
or
sbb
pop
ret
shll
sbb
js
cmp
insl
dec
cli
repnz
push
xor
cld
movsb
jbe
xchg
add
sahf
int3
fidivrl
aas
xlat
lcall
xchg
aas
pop
pop
aam
and
ljmp
jecxz
popa
fdivs
lods
dec
and
les
sbbb
mov
xchg
pop
sti
inc
mov
jne
xor
scas
daa
or
pop
leave
in
cmp
les
and
pop
dec
sbb
imul
cwtl
xor
ljmp
nop
add
and
fstl
and
scas
adc
sti
add
loopne
iret
jp
inc
push
loopne
push
xor
movsl
dec
outsb
jo
adc
sub
dec
add
mov
mov
inc
movsl
add
lahf
in
ficoml
mov
mov
jg
lcall
lock
lret
mov
insb
push
and
push
stos
loope
cmp
cld
jo
fcmovne
xchg
pop
adc
jnp
out
xchg
clc
ds
or
fldl
jmp
sub
icebp
or
sbb
push
cmp
dec
lret
addr16
dec
out
outsl
xor
jg
loopne
int
bound
adc
pop
movsb
jnp
inc
stos
mov
insb
iret
insl
mov
cmc
shld
test
fistpl
xlat
movsl
leave
add
insl
ss
inc
loop
clc
xchg
mov
mov
loopne
sbb
push
out
mov
sbb
lret
push
insb
push
roll
hlt
pop
clc
bound
add
test
aaa
in
fwait
xor
inc
out
jge
fcompl
mov
fwait
lea
and
jmp
adc
enter
daa
cli
movsl
test
or
stos
cwtl
fbstp
pushf
loope
lea
mov
ds
xchg
or
mov
loope
mov
push
imul
cmp
mov
xchg
test
sub
push
push
mull
push
lods
ja
std
adc
fs
jle
stos
sub
movsl
shll
insb
push
pop
aam
inc
dec
jae
inc
out
and
out
scas
movsl
cmp
repnz
cmp
pop
iret
mov
insl
push
cltd
fidivs
ret
es
lahf
push
mov
dec
pop
add
test
cmpsl
mov
cmpsl
fsubrl
lods
std
jno
mov
movsb
js
das
cmpsb
sbb
popf
aaa
fcoms
push
adc
push
fdiv
js
jne
pop
adc
popf
or
lret
add
jmp
xor
ds
test
outsb
imul
ret
mov
pop
addr16
arpl
lret
and
jne
js
repnz
xchg
sub
inc
fstps
les
lods
addr16
incl
ljmp
xchg
and
sarb
fs
mov
or
jnp
push
fcmovnb
ja
je
popa
movsl
adc
lahf
push
jne
cmp
imul
pop
jne
test
mov
push
sbb
inc
pop
inc
imul
out
or
jmp
xor
orl
repnz
adc
sub
cmc
shlb
data16
insb
mov
rcll
fwait
dec
or
mov
in
inc
sub
or
fldenv
ljmp
out
xchg
push
sarb
sbb
leave
loope
sub
add
push
sub
pop
pop
repz
fwait
xchg
dec
repz
or
test
jecxz
hlt
mov
xchg
xchg
xchg
and
int
imul
sub
mov
sahf
rorb
loop
mov
pop
ja
dec
fldcw
movsb
adc
sub
sbb
fnstsw
call
lods
cwtl
add
filds
test
push
push
sarb
test
dec
mov
nop
mov
add
mov
adc
pop
cmc
pop
jno
das
popf
out
out
pop
pop
adc
int3
sbb
and
icebp
idivb
cmc
adc
push
add
stc
nop
test
loope
xor
shlb
scas
adc
sar
fsubs
ret
pushf
mov
mov
lea
jae
mov
add
mov
xorb
push
call
pop
testb
and
xor
aas
mov
jl
adc
cmpsl
xchg
mov
pop
jns
sbb
mov
push
jae
in
aad
stc
pop
and
pop
jo
stos
xor
xchg
dec
std
adc
scas
and
fdivs
sbb
mov
xchg
aad
cli
sub
add
dec
gs
les
push
test
or
mov
pushf
and
test
sti
nop
cltd
pop
cmpl
and
imul
loope
stos
sub
inc
out
jae
lret
jne
ret
lret
jae
aam
cwtl
test
mov
lcall
push
push
lret
fs
cld
dec
mov
cli
mulb
fsubrp
lea
sbb
insb
filds
and
mov
pop
fdivs
jbe
lods
mov
movsb
xor
addr16
ret
mov
cwtl
dec
test
jae
push
jbe
mov
and
cmpl
mov
repnz
adc
mov
sub
sti
xchg
das
into
jne
fsubrs
and
in
add
rcll
aam
add
add
jl
mov
mov
movsb
mov
insl
sbb
loop
xor
sub
lock
sub
or
cmpsl
fnstenv
popf
jmp
es
cmp
stos
mov
push
or
push
push
lcall
jne
pop
arpl
insb
or
movsb
pop
ds
add
mov
ret
sub
pop
jbe
add
mov
adc
push
mov
sbb
mov
mov
jge
inc
pop
lds
push
lret
xor
add
cmp
icebp
jmp
fs
arpl
fwait
sbb
fimull
add
test
outsl
push
arpl
lcall
xchg
sbb
xor
mov
test
insl
lret
pop
or
mov
movsl
push
add
scas
sbb
daa
cmp
xor
nop
std
xor
xor
fldt
pop
movsb
xchg
aas
iret
pushf
dec
xchg
inc
shrb
jnp
jl
or
monitorx
sub
repnz
jp
add
mov
in
add
lods
ja
pop
mov
les
push
sbb
dec
imul
bound
adc
or
sarl
ss
dec
jecxz
mov
jle
pop
or
jg
and
in
gs
arpl
lds
sbb
ficoml
scas
lcall
jno
dec
mov
repz
mov
mov
dec
and
mov
push
dec
mov
mov
arpl
mov
sub
mov
xchg
xor
or
mov
push
xchg
jecxz
mov
sarl
rcr
nop/reserved
mov
popa
xchg
add
push
jp
and
add
ss
sub
and
pop
mov
pushf
pop
inc
into
mov
jo
mov
pop
dec
push
cmpsl
inc
lret
jle
push
xor
cltd
sbb
clc
pop
mov
push
iret
dec
sahf
aas
jle
js
in
xor
mov
jl
or
movsb
mov
shll
shlb
mov
pop
xchg
add
pop
mov
loopne
ja
xor
ds
fcmovb
jo
inc
mov
mov
xor
and
or
gs
jge
pop
cmp
repz
adc
fs
sbbl
insb
pop
push
xor
mov
pop
clc
int3
imul
pop
movaps
mov
dec
mov
repnz
inc
adc
aam
icebp
jl
ret
and
out
test
ds
inc
push
hlt
rcrb
int
push
loope
jnp
xor
or
cmpsb
ss
inc
mov
pop
mov
inc
aaa
mov
jbe
leave
xchg
pop
lods
sub
pop
inc
subb
inc
imul
imul
aaa
cs
fcoms
call
dec
cwtl
aas
inc
mov
dec
insb
fldcw
lds
sti
adc
call
nop
loopne
mov
cmp
call
mov
in
sar
mov
repnz
das
daa
repz
pushf
pushf
test
pop
mov
jbe
mov
add
rcll
adc
mov
add
ret
mov
shr
outsl
xor
stc
jl
bound
mov
int
mov
xor
scas
call
xorb
js
cmp
test
xchg
and
pushf
mov
sub
lea
dec
cmp
insl
and
test
test
push
mov
mov
mov
repz
sbb
inc
ds
inc
lcall
in
insb
jae
jge
cmp
pop
sub
sub
in
jo
subb
dec
in
rolb
lds
popa
dec
push
push
mov
jge
subb
pop
mov
or
subl
jne
sti
scas
sub
mov
mov
push
mov
addr16
ljmp
adc
add
mov
sub
push
and
mov
jp
lahf
cmpsl
dec
push
popf
adc
dec
repnz
mov
enter
mov
mov
pop
sbb
sti
int3
mov
or
push
push
rcr
rclb
repz
add
add
xor
insl
hlt
mov
dec
push
mov
xchg
xchg
mov
push
mov
clc
pop
add
pop
cmp
nop
lahf
addr16
cltd
pop
jo
call
out
inc
fdivrp
sbb
mov
push
cmpsb
cmp
out
popa
dec
ficompl
sti
cmp
cmpsb
ds
nop
bnd
arpl
add
jae
cmpsl
mov
dec
lods
insl
xchg
jo
and
dec
ja
inc
and
sbb
and
inc
jno
pusha
or
rcrl
lea
pop
js
dec
mov
pushf
je
sbb
clc
xlat
sub
roll
fldenv
cmpsl
pushf
mov
ret
add
jns
mov
cltd
es
cmp
cli
insl
push
push
pop
out
fisubl
aad
add
xor
xchg
mov
hlt
push
enter
jle
mov
enter
inc
cli
mov
out
jecxz
mov
lea
ret
je
mov
test
jp
clc
outsl
and
mov
imul
pmuludq
out
iret
dec
mov
loop
and
dec
sar
fmul
xchg
adc
mov
push
add
inc
jecxz
xor
repnz
xor
scas
inc
faddp
push
pop
movsl
sti
adc
leave
mov
cmp
jmp
les
inc
lcall
cmp
sti
bswap
cld
xchg
rol
test
ds
sub
lock
xor
sbb
rorb
pop
loop
sbb
xor
push
les
mov
out
ljmp
inc
pushf
dec
push
pop
adc
cmp
or
out
shrb
pop
mov
push
mov
in
mov
xchg
pusha
mov
mov
mov
addr16
pop
test
xchg
mov
push
aas
shll
aad
cmp
dec
loopne
mov
jo
add
mov
sub
cs
push
inc
icebp
lcall
sub
lea
dec
jecxz
cmp
or
mov
or
int
xlat
jle
mov
into
dec
adc
ja
sbb
cmp
adc
stos
inc
push
hlt
lds
shr
cmpsl
ja
incb
dec
xchg
pop
xor
lock
js
int3
lds
inc
xchg
mov
adc
jg
push
jns
sbb
mov
andl
rcl
das
loope
leave
rorb
push
fwait
mov
push
jecxz
sbb
or
scas
xchg
lcall
xor
icebp
xlat
dec
mov
bound
pop
in
sbb
push
jle
outsb
xlat
push
and
sbb
cwtl
shrl
mov
xor
pop
mov
icebp
jno
xor
rorl
movsl
xchg
and
dec
ret
pop
pusha
pop
pop
out
sbb
jge
push
mov
xchg
ss
mov
or
ror
dec
mov
call
xchg
popa
or
sub
fiadds
into
inc
es
jno
and
scas
aaa
push
jae
xchg
push
stos
mov
cmp
in
sub
xor
jg
scas
stos
repnz
or
jbe
sbb
in
out
pop
sub
pop
lret
or
fcomps
lods
fwait
daa
push
dec
cwtl
xlat
mov
nop
pushf
push
out
inc
aad
add
mov
je
push
sbb
lea
xchg
push
fcomps
dec
sti
jl
cmpsl
pop
stos
jbe
js
aad
xchg
jp
dec
mov
sbb
fdivrl
jb
add
adc
inc
jl
mov
sub
sub
mov
jg
push
mov
push
out
push
mov
shll
mov
inc
jno
loopne
dec
dec
and
dec
scas
je
sbb
addr16
aam
loopne
dec
ljmpw
call
test
movsl
aam
xor
pushf
cld
inc
rclb
ss
xchg
lahf
mov
shlb
lea
cld
push
lret
inc
aam
fwait
xchg
pushf
push
sahf
adc
push
pusha
out
jmp
jmp
es
fnstsw
sbb
insl
imull
add
pop
adc
repnz
call
inc
jecxz
xchg
mov
sub
stc
xchg
adc
or
popf
mov
test
addr16
inc
add
xchg
movsb
sbb
sbb
adc
sub
add
arpl
xor
cmovge
add
push
test
mov
jno
sub
cmp
push
pop
push
xchg
add
sub
mov
dec
insl
mov
mov
leave
inc
daa
mov
jle
adc
cmp
scas
jecxz
rcrb
jge
jle
inc
imul
push
dec
sub
mov
rcrl
or
sub
xchg
push
dec
sub
dec
daa
cld
add
mov
lea
outsl
fmuls
xlat
pop
subb
mov
shlb
pop
mov
sti
mov
mov
mov
out
inc
push
loopne
xchg
and
sbb
cmp
add
loopne
std
mov
mov
push
cld
andps
sbbl
hlt
or
in
push
jbe
enter
adcl
aas
mov
sbb
push
push
cmp
pop
xchg
fisttpl
add
jns
out
rclb
test
add
jae
in
call
pop
aam
cmp
cmp
sbb
test
jl
inc
dec
ror
addr16
shl
mov
lahf
adc
test
mov
jecxz
or
into
popf
ret
iret
pushf
xor
push
adc
fisubrs
add
mov
jo
cwtl
jae
enter
mov
pop
dec
mov
gs
mov
xchg
call
sbbb
outsl
popw
or
fwait
mov
add
xchg
sbb
mov
out
aas
leave
les
inc
pop
jnp
xchg
cmp
pop
add
add
xchg
divl
clc
scas
cmp
pop
call
adc
dec
negb
xchg
jl
sbb
enter
imull
adc
aam
out
movsl
lret
jne
or
aas
sbb
fdivrl
add
jge
insb
xchg
ss
addl
xor
sub
jg
aad
popl
mov
lret
out
xor
test
rcl
rolb
mov
pop
movl
outsl
push
push
sub
or
daa
pop
std
outsl
jl
mov
xor
push
sbb
adc
xchg
cmp
fdecstp
int3
lea
add
test
lock
aaa
adc
fcomps
imul
out
add
scas
push
jl
outsb
sub
test
nop
mov
dec
push
dec
cmc
aaa
lcall
insb
add
lea
bound
xchg
outsl
xor
lock
insl
fisubs
lret
mov
loop
cld
mov
sbb
fildll
sbb
enter
pop
cli
rcll
lret
mov
mov
and
test
add
adc
jmp
les
test
xchg
jnp
sbb
cmpsb
xchg
xchg
mov
dec
inc
ja
adc
jp
ss
shlb
xchg
out
hlt
sub
not
sbb
push
inc
into
add
mull
cmp
adc
aas
shld
mov
push
mov
sbb
mov
cmove
lret
pop
aas
test
popa
jne
jmp
cmpb
or
push
ss
aaa
ret
jo
bound
in
push
inc
cvtpi2ps
cmp
dec
out
push
lret
outsl
cld
and
cli
fisubl
cld
jo
int
mov
and
lea
stos
aad
cld
pop
loop
dec
xchg
sub
sahf
mov
ret
xchg
inc
push
mov
rolb
les
mov
sub
push
lock
add
ja
aad
out
seto
pop
dec
loopne
fistpll
arpl
mov
jbe
lret
sub
movsl
jle
xchg
loope
ja
xchg
push
or
cmp
lcall
add
lahf
adc
add
jno
mov
xor
push
push
arpl
mov
jb
xchg
enter
mov
cmp
inc
lock
loop
pusha
pushf
pop
xor
stos
jns
xchg
mov
bound
fcmove
mov
arpl
daa
nop
jo
outsl
mov
mov
aad
ljmp
icebp
shlb
push
mov
hlt
pop
cmp
jle
nop
jb
lods
xlat
pop
push
or
jns
inc
mov
in
aas
icebp
sbb
xchg
frstor
xchg
int3
xchg
rcr
gs
push
mov
andl
and
rcr
out
mov
bound
cmp
and
mov
mov
mov
xchg
subl
mov
inc
sar
add
imul
mov
adc
jae
xchg
jl
jmp
mov
push
test
mov
fsubs
jge
jle
and
test
stc
in
negb
xchg
imul
notb
ret
xor
repz
cmp
fwait
daa
mov
sti
push
cmpsb
icebp
cmpsl
aaa
sbb
dec
xchg
sti
cltd
xor
and
sbb
or
test
bnd
pop
push
push
test
jecxz
push
mov
idiv
sbb
inc
or
sbb
push
push
aas
loope
movsb
into
inc
dec
sahf
mov
lods
inc
jp
lea
cmp
je
xor
xor
mov
cwtl
sarb
push
push
cmp
adc
roll
mov
out
out
lret
insl
add
push
loope
dec
mov
int
cli
mov
mov
push
lret
push
xchg
jle
ret
lret
jecxz
add
cltd
add
icebp
call
shr
out
subl
add
inc
fs
aad
stc
jmp
pop
push
sbb
sub
fchs
adc
xor
push
or
ds
sbb
lock
or
jl
std
fwait
cltd
sub
scas
dec
cmp
inc
addb
cli
mov
or
int
je
imul
xchg
mov
int
or
jnp
fsubrl
pusha
mov
out
mov
adc
inc
movsb
xchg
pop
clc
xchg
aaa
stc
inc
lcall
push
mov
push
aas
jecxz
dec
adc
pop
push
in
sub
in
aaa
sbb
and
jae
and
dec
jno
add
sub
and
sub
es
pusha
jecxz
insl
jbe
push
insb
pop
fisttps
and
adc
xchg
or
inc
into
dec
aas
inc
push
enter
pop
mov
adcl
inc
mov
rcrb
fs
jo
ffree
test
fsubrl
stos
cs
daa
xlat
ret
rcrl
mov
mov
popa
sbbl
andb
sbb
mov
sbb
mov
icebp
xorl
xor
inc
xchg
je
jmp
fucomp
push
sub
sti
xor
adc
or
xlat
cmp
mov
jbe,pn
adc
pop
mov
lods
inc
daa
jecxz
addr16
shll
pop
dec
dec
imul
movsb
push
lods
arpl
jb
jbe
xchg
sub
stos
or
lock
notb
mov
sub
scas
mov
aaa
mov
int3
sub
adc
fbld
xchg
test
rorl
push
aaa
lods
mov
lcall
mov
mov
andb
cmp
pushf
mov
fdivr
lods
push
xchg
ja
and
std
cmp
pop
dec
cmp
je
ja
jle
in
movsl
mov
mov
xor
sbbb
xor
push
xor
loopne
inc
cmp
dec
xchg
popa
in
adc
sub
dec
shrl
sbb
insb
incb
cltd
pop
nop
jecxz
hlt
mov
shr
daa
sbb
mov
mov
clc
adc
cmp
cmp
sahf
test
test
dec
cmp
ja
std
iret
mov
cmc
in
inc
adc
pop
xchg
mov
nop
xchg
dec
mov
mov
scas
cmp
and
inc
arpl
leave
fadd
jne
cmp
inc
jl
mov
inc
faddl
mov
sti
lods
fucomi
pop
jge
inc
push
inc
scas
ret
mov
mull
cmpsb
push
mov
sub
cltd
sub
dec
sub
cmp
cmp
les
push
dec
out
ret
fisttpll
repnz
mov
fmull
xor
sub
ja
lock
lret
pop
jae
jg
or
mov
out
mov
les
add
sbbl
xchg
fmull
or
stc
inc
xchg
out
les
cmp
xchg
jns
or
lock
outsb
fcomps
fsubr
pmaxub
out
addr16
shlb
fidivrs
mov
pop
cltd
testl
xchg
inc
lock
mov
insb
cli
out
je
aaa
mov
aas
stos
pop
xchg
xchg
xor
push
or
mov
in
sbb
xchg
ret
mov
sub
cmp
imul
mov
mov
pop
loope
outsb
adc
cmp
imul
addr16
movsl
jp
inc
jb
iret
in
incl
mov
repz
jb
scas
in
sub
xor
jecxz
dec
adc
sbb
shlb
or
mov
or
xchg
adc
inc
xor
sarb
push
shr
lock
or
xor
cmp
je
out
ja
imul
mov
repz
fbld
push
lahf
outsl
nop
shll
lea
or
cli
cmpsl
icebp
in
adcb
fidivrl
push
and
xchg
inc
leave
jmp
mov
xchg
cmpsl
dec
test
and
push
push
mov
cmp
fdivs
mov
paddsw
ret
inc
pop
xor
jno
dec
mov
sub
in
mov
test
cmc
imul
jle
aad
clc
or
insl
ss
sub
imul
xlat
mov
fnstsw
jge
cltd
xchg
insb
nop
push
lahf
adc
inc
xor
mov
mov
cld
push
hlt
sub
lcall
inc
mov
mov
mov
inc
roll
xor
mov
jb
xchg
dec
test
bound
out
and
dec
fnstsw
add
inc
jae
sub
test
push
cltd
inc
cli
push
aaa
outsl
or
in
sub
int
ljmp
xor
inc
or
jecxz
xor
lods
lret
iret
jmp
daa
and
fistl
and
push
in
leave
adc
add
or
pop
lea
movsb
mov
or
movsb
or
xlat
cmpsb
jmp
add
xor
int
scas
lock
clc
out
je
fsubs
jne
pslld
repnz
mov
inc
mov
gs
ljmp
js
sub
stos
lock
fbld
data16
push
push
fisttpl
mov
jge
int3
es
mov
adc
rclb
in
adc
lret
mov
and
jl
pop
fistps
dec
shl
or
xor
imul
data16
mov
inc
shlb
add
push
icebp
arpl
cs
cmp
and
adc
cmp
and
mov
pop
fistps
adc
int
mov
pop
mov
push
cmp
push
and
rorl
or
roll
jg
mov
xchg
mov
or
pop
fs
cmp
dec
mov
in
push
sbb
nop
addr16
mov
dec
mov
insb
dec
pop
mov
cmp
cmp
push
or
mov
mov
in
popa
or
or
imul
rcrl
stos
sub
push
lods
xlat
mov
cmp
add
xor
outsl
xlat
scas
push
repz
loop
popa
into
cmp
mov
mov
add
shrb
stc
loope
jmp
leave
loope
dec
loop
push
adc
andl
dec
jnp
arpl
or
mov
loope
test
mov
adc
mov
sbb
jge
mov
push
lock
mov
shlb
jno
jno
adc
outsb
fsubs
ret
xor
jnp
cmpsb
cmc
mov
inc
hlt
xor
das
into
sar
adc
add
imull
stos
sahf
das
pop
std
push
mov
sti
mov
xchg
mov
sbb
repnz
cmp
jbe
inc
mov
sub
mov
xchg
adc
ja
stos
pushw
stc
out
sub
xchg
mov
mov
mov
fmull
xlat
and
push
push
or
mov
addl
dec
sbb
inc
sbb
lret
inc
ds
in
popf
in
stos
mov
inc
popf
les
aas
cmpsl
enter
push
mov
outsb
sar
sbb
inc
xor
das
sbb
mov
daa
fs
shrl
loope
lea
clc
or
mov
inc
cmp
dec
adcb
cmp
lahf
scas
xor
sahf
mov
add
inc
mov
sub
jb
xor
mov
lods
aam
sub
imulb
je
fidivrs
xchg
ret
and
adc
rclb
xor
data16
popf
roll
lcall
cmpsl
icebp
imul
and
pusha
lret
cltd
es
cld
test
pop
push
test
push
ja
inc
push
xchg
add
test
push
incl
add
stos
movsl
pop
ja
daa
or
imul
popf
in
mov
test
sbb
test
loope
push
lods
sarl
xchg
add
dec
ficoml
xlat
leave
lods
push
push
xchg
loope
xor
xchg
jmp
xor
dec
test
jecxz
lcall
dec
dec
lret
into
std
push
leave
pusha
test
add
push
repz
nop
xchg
mov
enter
aad
out
jne
jge
sub
jmp
push
insb
and
dec
sub
mov
add
sub
scas
add
cmp
subl
or
sub
lcall
bound
sbb
aaa
loop
mov
xor
jle
push
int
stc
ds
je
push
notl
out
fistpll
jle
repz
cmpsb
insl
sub
fcmovnb
int3
mov
sti
jge
sub
inc
xchg
pop
mov
icebp
faddl
fistpll
xor
xor
sub
jle
scas
mov
loop
movsb
lahf
cmp
push
aas
std
add
xlat
js
test
stos
mov
push
jle
nop
stos
and
leave
in
lods
popf
hlt
push
data16
dec
test
clc
test
inc
or
push
aaa
jo
add
sbb
cmp
dec
std
jae
adc
shrl
pop
lea
xchg
loope
or
in
shrl
jne
sbb
movl
sub
xchg
push
scas
xor
jle
sbb
sub
sub
into
imul
mov
pop
pavgw
dec
aad
clc
lcall
das
sahf
int
or
push
mov
and
call
xchg
int
int
push
jge
push
js
out
mov
cmp
xlat
sub
inc
scas
loope
lea
mov
adcl
out
push
or
fidivl
mov
mov
enter
jbe
movsl
jle
in
in
push
popa
or
xor
xor
ljmp
and
movsb
pop
adc
pusha
inc
and
dec
jmp
ja
sarb
stc
add
xchg
cmp
rclb
in
mov
jb
inc
stos
cmp
aad
mov
negl
mov
inc
xchg
jne
push
sahf
mov
aad
mov
aam
push
bound
rcrl
mov
test
cmpl
inc
int3
push
or
adc
das
mov
adc
loopne
loopne
popa
mov
ljmp
mov
or
pop
adc
xor
out
lods
add
es
xchg
movsl
jmp
nop
gs
push
insb
mov
fwait
xor
sbb
pop
js
jno
addr16
inc
or
mov
fadds
fists
pushf
daa
scas
add
cmp
pop
dec
cmp
pop
mov
xor
jle
out
push
fwait
push
hlt
xchg
jle
sub
pop
int
sbb
mov
push
pop
xor
mov
add
in
push
loop
mov
dec
pop
and
movsb
psubb
insl
std
mov
mov
cmc
test
push
dec
arpl
dec
sbb
mov
outsl
sub
push
mov
mov
scas
mov
lds
xor
sub
cld
inc
shlb
jne
cmp
loop
pusha
pop
int3
movsb
push
pop
sbb
popa
pusha
sub
jns
inc
cmp
jno
jg
js
in
cmp
inc
ss
cmovs
push
push
or
fwait
mov
iret
neg
in
ljmp
fwait
sub
mov
sub
fdiv
testb
push
push
inc
rcrb
fdivs
clc
not
fs
xor
adc
daa
orb
inc
cmp
pop
jo
enter
adc
xor
test
out
shl
enter
rorl
icebp
hlt
rclb
dec
lcall
sub
mov
dec
adc
adc
divb
pop
jno
or
fcompl
cltd
cmc
inc
icebp
ret
in
jl
out
out
pop
xchg
lods
push
lea
mov
xor
mov
fisubs
jp
mov
lds
xchg
or
and
mov
or
cmp
fwait
cmp
bnd
push
jnp
push
cli
shl
sub
jmp
add
lods
sub
adc
sbb
mov
pop
lock
inc
and
xchg
les
dec
insl
ds
std
leave
inc
xlat
inc
sti
xor
out
mul
mov
sub
int
js
stos
sbb
rolb
xchg
cld
ljmp
xor
xchg
add
pop
push
inc
or
mov
shl
adc
push
fimuls
mov
ljmp
mov
adc
std
or
test
mov
pop
jge
add
aas
and
or
pop
sbb
jge
mov
ret
mov
test
shrl
mov
sbb
mov
mov
pop
push
xchg
out
inc
cwtl
or
fsubrp
in
fldenv
sbb
jmp
pop
aas
fs
pop
mov
icebp
jle
mov
test
lods
hlt
jg
pop
lods
jno
orb
or
inc
fdivrl
shrl
std
int
cmp
dec
leave
push
imul
sub
dec
xchg
jb
iret
xor
or
jbe
addr16
cld
fs
rol
lret
sub
push
insb
lods
mov
mov
ljmp
pop
mov
xorl
cltd
mov
fs
into
lock
dec
cmpl
jle
jae
dec
xchg
out
and
mov
mov
shll
xchg
cmp
xlat
cmp
push
mov
daa
nop
xchg
adc
and
pop
outsb
jge
setb
sub
es
sbb
lock
pop
mov
int
pop
in
cmpb
loope
sbb
out
add
jge
in
imul
add
xlat
out
mov
aas
cmp
aas
je
jo
xor
sub
mov
lods
stos
xchg
push
push
lock
push
or
movsb
sub
xchg
divb
cltd
filds
push
fs
cltd
lret
cli
xchg
pop
gs
jnp
movsl
ja
cmp
push
sub
sbb
jmp
mov
test
jns
mov
arpl
stos
fimuls
sub
adc
fsub
dec
daa
jle
mov
gs
hlt
jae
xlat
xchg
jno
inc
pop
inc
cltd
pusha
insl
mov
lea
cwtl
inc
dec
andb
fdivrl
xchg
ficoml
fwait
xchg
xor
add
lods
pop
xor
pop
inc
shlb
icebp
dec
testb
add
int
pusha
xchg
mov
ss
idivl
aas
pop
das
js
xlat
cmpsb
repz
mov
fadd
sub
popf
and
sbb
repz
mov
or
cmp
adc
test
aaa
xor
test
insl
fndisi(8087
push
loope
cmp
push
out
sbbb
or
call
outsb
adc
hlt
inc
and
sub
pop
ja
mov
stc
push
fcompl
or
mull
dec
hlt
addr16
mov
subb
popa
imul
mov
sub
imul
jmp
cmp
into
sbb
imul
or
andl
jp
jae
test
xchg
cmp
pop
inc
or
out
xor
xchg
jb
xchg
ret
movsl
xor
je
xor
ds
mov
dec
shl
insb
or
push
test
rorb
les
popf
inc
adc
aam
mov
lds
mov
out
sbb
sub
fsub
dec
push
dec
cmc
cmp
push
push
outsl
movsb
mov
ja
add
sbb
or
dec
aaa
mov
pusha
imul
rcrl
mov
adc
mov
aaa
and
push
out
leave
mov
stc
cmp
aas
xchg
testb
lock
mov
dec
sub
xchg
movsb
and
inc
sbb
fisubl
into
or
std
pop
add
pop
mov
ja
cmp
sub
mov
fbstp
cs
mov
in
hlt
cmp
jbe
daa
xchg
adc
and
or
or
loope
outsl
lahf
adc
pop
cmp
xor
lcall
cwtl
inc
and
test
je
lods
mov
fst
movsl
jbe
inc
int
insb
push
sbb
and
and
inc
adc
lods
xchg
mov
cmp
dec
imul
dec
adc
jnp
or
add
in
or
xchg
js
cld
ljmp
xchg
je
pop
jbe
xchg
insl
shl
movsb
fldt
daa
push
or
ret
popf
adc
mov
loop
fiaddl
xchg
push
sbb
andb
pop
pop
push
mov
cmc
dec
aaa
add
popf
ds
cmp
popa
xchg
imul
sbb
push
movsb
movsl
mov
mov
js
iret
pop
mov
lahf
mov
rolb
xor
popl
lds
push
jle
pop
dec
jne
cmc
mov
addr16
loopne
int
push
and
cmpb
dec
push
orb
sbb
sbb
je
in
cli
lcall
jno
out
inc
in
jp
add
jp
and
jbe
pop
popa
movsl
jge
inc
sub
daa
insl
adc
les
test
lret
jle
lods
pop
jo
mov
xor
ljmp
mov
adc
dec
adc
ja
std
push
jp
xlat
cmp
insl
cld
pop
xchg
mov
sbb
sbb
push
icebp
pushf
nop
jmp
cmp
mov
std
aad
out
cwtl
movsb
pop
jae
and
pop
add
in
stos
in
pop
jg
push
out
adc
mov
popf
lret
push
dec
das
jecxz
jbe
xor
shrb
sub
test
push
repz
xchg
jb
pushf
mov
test
in
mov
mov
pop
std
xor
cwtl
xchg
out
mov
or
pop
jmp
mov
add
jb
and
xor
push
or
mov
xchg
js
xchg
ja
out
ret
ss
xchg
ret
ss
rcr
sar
das
cmp
popf
mov
xchg
cmp
popf
lods
shrb
mov
shll
push
and
inc
mov
stos
add
xlat
adc
adc
xchg
jg
jecxz
mov
arpl
gs
jno
adc
cwtl
loope
jnp
pop
leave
xchg
xchg
xchg
mov
out
add
dec
gs
imul
sarb
je
mov
lcall
and
shlb
xor
xor
cmp
pop
push
mov
dec
sbb
cltd
mov
sbb
jne
xor
fstpt
or
sbb
push
sub
sub
es
gs
jae
adc
jge
inc
adc
gs
cli
and
mov
xor
push
fnstsw
dec
jle
das
jp
movsl
test
outsb
jns
pop
hlt
adc
add
fcom
mov
push
out
dec
mov
sbbl
imul
je
rcll
mov
test
push
aam
in
out
push
add
push
mov
icebp
dec
xor
or
adc
enter
int3
xor
mov
rcll
idiv
in
in
sti
mov
cmpsl
int3
xchg
push
dec
adcl
pop
sahf
mov
pop
mov
inc
jnp
or
xchg
ss
std
xchg
push
std
cmc
and
xor
pusha
dec
lods
mov
jp
nop
pop
inc
push
or
pop
add
daa
xor
scas
or
in
enter
xchg
inc
push
jl
rcrb
mov
push
stc
data16
fadds
xchg
xlat
adc
fsubr
rcrb
lods
ds
shrl
pop
mulb
mov
mov
lahf
pinsrw
and
test
stc
push
xchg
adc
dec
jb
addr16
inc
mov
xchg
or
test
les
pop
jns
xor
into
aaa
adc
mov
cltd
mulb
es
es
aas
dec
lret
stos
je
mov
mov
mov
dec
frstor
shlb
out
mov
xchg
js
ljmp
arpl
out
push
lahf
repnz
pushf
mov
cmpsl
pop
push
fistpll
les
mov
mov
add
cmp
lahf
daa
add
dec
lods
int3
lods
es
stc
inc
popf
push
cwtl
enter
fbld
pop
sbb
inc
jbe
out
add
aaa
inc
mov
cs
scas
lods
enter
dec
daa
imul
mov
cmp
push
das
data16
mov
add
inc
push
das
cs
notl
aaa
jno
cmp
aad
les
sarl
lods
mov
lret
sbb
sbb
out
dec
aaa
xor
xchg
std
add
mov
lret
xchg
mov
imul
push
gs
cmpsl
imul
cmp
clc
addr16
es
testl
in
pusha
or
in
lretw
js
cwtl
mov
pop
jne
add
mov
adc
jmp
pop
push
lret
adc
mov
jb
popf
push
add
mov
cmpl
jg
sbb
test
and
ret
jne
out
xchg
cmp
sub
rorl
lret
scas
jb
shrb
mov
nop
arpl
inc
jl
pop
hlt
pop
xchg
enter
rclb
int3
pop
sub
cld
mov
loopne
sti
stc
shr
in
rcl
loopne
dec
mov
add
in
add
in
push
sbb
cmpsl
or
xor
fcomip
inc
add
shll
iret
mov
and
insb
add
pop
dec
repnz
in
pop
pop
and
mov
filds
lcall
out
daa
pop
iret
rcrb
push
adc
dec
rorb
lahf
mov
outsl
imul
jp
push
jne
add
ljmp
mov
or
decl
cld
adc
movsb
rcrb
pop
push
pop
and
fildll
bound
notb
xchg
loope
nop
insb
push
sbb
std
bt
fdivrs
cltd
inc
mov
or
mov
ljmp
adc
frstor
jns
and
into
pop
enter
mov
lahf
fwait
inc
std
scas
jnp
jecxz
push
fs
inc
mov
push
or
push
aad
push
jns
cmpsl
es
inc
adc
fdivs
sbb
testb
add
jnp
repnz
mov
orl
pop
insb
incl
push
cmpl
andb
mov
mov
mov
or
push
push
outsl
push
and
in
ficoms
dec
ret
movsl
stos
or
jg
mov
ret
cmp
cmp
adc
and
and
and
insl
pop
shll
test
test
clc
mov
inc
cld
inc
push
popl
sbb
sarl
sub
fists
ja
rcl
and
dec
xchg
sub
cmp
push
xor
mov
jns
repz
cmp
adc
jecxz
add
hlt
bound
sbbl
cmc
push
pop
dec
xchg
jge
xchg
add
lret
sub
xlat
ret
sbb
popl
pop
cmp
cltd
mov
push
repnz
dec
mov
sbb
jne
adc
mov
clc
outsl
fimuls
adc
mov
sub
pop
jnp
mov
leave
fnstsw
fucomi
sub
xor
fimull
push
mov
test
mov
add
push
xchg
xchg
repnz
jecxz
std
scas
mov
mov
mov
scas
xor
dec
shlb
sub
leave
cmp
movsb
cmp
inc
lcall
ss
nop
jno
ljmp
data16
fisttps
xlat
aaa
bound
cmp
dec
jne
jmp
stos
subl
jp
divl
sahf
test
xchg
fiadds
icebp
mov
int3
cmp
push
shl
js
fdivl
lock
fdivl
push
or
dec
mov
outsb
inc
mov
jg
lock
push
fidivs
loope
pop
ja
push
lcall
mov
insb
xchg
cmp
inc
xchg
loop
pushf
mov
je
adc
call
and
mov
sbb
ret
orl
mov
aas
mov
sub
les
daa
cmp
je
pop
pop
pop
shrb
sbb
cmp
and
xor
or
xchg
pop
xlat
push
ret
xor
add
sarl
movsl
jb
dec
xor
xchg
test
or
outsl
hlt
stc
cmc
sbb
outsb
lods
ficoms
add
sbbl
stos
xor
mov
out
fists
sbb
mov
mov
jecxz
in
dec
into
cmpsl
adc
mov
jns
sar
jle
ret
jg
jl
add
cld
push
popf
adc
pop
imul
mov
nop
add
jl
pop
xchg
pop
adc
mov
jns
aas
test
sbb
add
cmc
pop
in
mov
add
icebp
mov
call
shll
leave
and
lds
mov
mov
and
push
orl
mov
pop
lret
inc
xor
pusha
xchg
add
inc
cmp
sub
stos
mov
out
shlb
addr16
test
mov
shrb
jl
arpl
add
cmp
bnd
adc
pop
pushf
fdivr
jmp
xor
mov
cmpsl
mov
stos
int3
test
inc
std
ds
test
dec
fisttpll
pop
cs
sub
out
ja
or
jle
daa
cmp
aad
fs
or
mov
mov
arpl
jmp
stos
mov
lret
ljmp
mov
push
and
mov
gs
push
imul
lods
insl
or
jb
mov
mov
mov
add
jno
sub
stos
ja
jno
data16
xchg
sahf
jnp
lcall
aas
popf
test
jb
ja
cmpsb
imul
jge
pop
repz
mov
push
bound
mov
xchg
inc
out
insb
sahf
sbb
out
push
jbe
dec
test
pop
dec
movsl
loopne
add
sahf
daa
xor
adc
imul
pop
mov
jg
addr16
cwtl
dec
dec
movsb
xchg
pop
rclb
in
jge
add
adc
jns
packuswb
jle
push
mov
lret
cwtl
ja
mov
fsubl
pop
addr16
sti
mov
shll
xchg
and
pop
mov
mov
push
gs
jo
popf
push
dec
and
cld
movsl
cmp
push
adc
vmovaps
jnp
dec
push
cmp
lret
pop
jg
xor
mov
jne
push
xchg
xchg
cmp
iret
nop
insb
add
xor
lcall
pop
ss
mov
leave
jmp
mov
sub
sub
adc
insb
les
pop
cmpsb
mov
ffreep
inc
mov
pop
addb
loop
jbe
divl
adc
xorb
jnp
loope
daa
push
pop
push
cmc
xchg
pop
xchg
lds
aad
add
mov
negl
into
test
fdivrl
xchg
in
jne
ds
add
xorb
out
xor
or
push
lea
jae
push
pop
sub
add
mov
mov
sub
mov
jle
add
in
or
mov
and
jb
ja
pop
push
shrl
adc
push
pop
and
adc
sub
lods
sub
inc
popa
or
sbb
mov
fisubs
jp
push
push
test
xor
pop
xor
mov
xor
out
nop
cmp
ret
in
data16
outsl
shll
pop
sbb
push
inc
nop
or
adc
xor
test
insl
or
mov
push
and
fisubrl
mov
xchg
into
daa
loopne
popf
push
cmp
dec
and
je
or
jnp
cmpsl
dec
add
test
repz
mov
pop
xor
push
sbb
push
cli
jne
cmpsl
and
gs
cmpsl
cltd
xor
aad
aaa
pop
or
push
dec
or
push
clc
data16
xorl
popa
loop
or
xchg
stc
enter
aas
inc
push
lcall
out
mov
jno
add
imul
xchg
sbb
mov
aam
sub
mov
push
push
cwtl
negb
xor
je
out
ss
fbld
and
lret
call
or
cltd
or
dec
popf
lea
sbb
pop
fldl
add
or
in
and
sub
rcrl
push
inc
lds
shrb
inc
in
push
aam
jmp
mov
push
mov
out
test
shrb
mov
mov
movsb
into
test
mov
jmp
sub
jg
and
out
imul
pushl
jmp
mov
or
dec
enter
adc
mov
xchg
daa
push
aam
dec
dec
in
es
lahf
inc
aas
add
adcl
iret
cmp
fisubs
aam
sub
sbbb
adcl
leave
cmp
mov
push
add
int3
stc
sub
mov
push
dec
pop
sahf
int
std
add
rcrl
scas
into
aaa
lahf
imulb
adc
or
add
fdivrl
clc
dec
adc
cli
fcoms
js
mov
aad
pushf
jno
jl
aaa
xchg
dec
mov
cmp
sub
fs
pop
jne
inc
jo
mov
xchg
mov
fldl
insl
sub
and
jl
mov
sti
pusha
fs
sti
pop
cld
mov
lcall
pushf
jge
int3
inc
fisubs
ljmp
mov
xor
dec
mov
mov
adc
xor
daa
and
mov
cmp
bound
loop
mov
in
es
repz
stc
dec
pop
aad
cmp
jns
mov
mov
jg
xchg
mov
dec
jo
adc
movsl
pop
push
test
iret
in
mov
icebp
cs
sahf
cmp
mov
test
jg
and
sbb
mov
stos
shrl
es
xchg
mov
in
imul
scas
cmp
inc
pushf
loopne
mov
jns
fcoms
insl
adcl
ja
or
xor
addb
in
xchg
push
lds
out
fisubrs
push
jmp
cmp
sbb
or
dec
lret
stos
mov
mov
pop
in
push
jb
dec
sbb
out
stc
jle
jnp
inc
out
jp
or
pop
push
cltd
dec
mov
mov
jge
cmpsb
adc
xor
aaa
pushf
and
push
mov
fdivl
or
jmp
cmpsb
xor
aas
mov
mov
pop
xor
inc
inc
pop
hlt
aad
in
and
scas
mov
and
xchg
xchg
and
arpl
xchg
into
jb
flds
scas
mov
xchg
xor
es
push
aaa
xchg
push
nop
incl
fs
mov
dec
sbb
stos
sbb
inc
mov
inc
add
cld
push
pop
cmp
into
sbb
test
js
daa
fldenv
dec
sbb
push
xor
pop
and
pop
mov
add
testl
mov
fwait
push
into
movlps
add
jbe
icebp
mov
call
cmc
fisttpll
inc
insl
pop
das
std
rcr
sub
es
jns
adc
aas
aam
mov
rcr
les
pop
addb
iret
xor
pop
movsb
testl
cld
enter
inc
mov
jnp
add
add
dec
jecxz
xchg
xchg
and
xchg
pop
inc
sub
insb
repnz
inc
aad
je
imul
cmp
imul
arpl
ja
push
incb
jg
popa
adc
push
inc
adc
addr16
mov
xchg
in
fidivrs
fcmovnu
ds
dec
inc
rcrl
xchg
pop
jne
or
inc
jns
cmp
out
xor
add
pop
jnp
cmp
aas
test
mov
pop
push
sub
cmp
mov
es
jno
enter
adc
or
mov
push
loope
jae
xor
icebp
push
data16
and
imul
out
or
xor
add
jl
inc
das
jecxz
fldcw
ja
mov
movsb
aam
push
mov
inc
sub
adc
mov
cmp
inc
rorb
int3
push
adc
xchg
adc
sbbb
daa
jns
test
dec
and
dec
pop
loope
adc
rcr
outsl
sub
jp
loop
cli
loop
pop
inc
imul
pop
add
pop
push
movsb
sbb
pop
mov
fldt
outsl
jle
pop
fdivl
xchg
xchg
xor
pop
xchg
ljmp
jmp
lock
movsl
sub
xchg
mov
push
pop
push
outsb
and
stc
inc
imul
sbb
out
stos
add
jmp
cmc
push
mov
ret
fimull
or
cmp
sahf
jne
or
push
xor
push
pop
test
push
insl
xorl
sub
jnp
sbb
mov
inc
inc
rorb
and
out
out
js
cmp
loop
dec
int
dec
xchg
jnp
cmc
pop
xor
sbb
sbb
inc
repz
fs
pop
lcall
js
shr
lahf
shll
int3
sbb
jle
inc
lods
mov
xchg
imul
out
sbbb
loope
xor
vmovlps
mov
mov
movsb
daa
sbb
mov
imul
dec
dec
dec
xchg
sub
xor
push
xor
cld
mov
jno
jne
lea
lods
and
popa
stc
mov
pusha
pop
push
xchg
push
gs
rorl
fwait
insb
mov
cmpsb
push
insb
fnstsw
pop
cmp
sub
icebp
jecxz
push
frstor
or
jne
xor
cmp
mov
jae
mov
xor
jp
arpl
sbb
fldenv
andl
inc
pop
dec
jge
inc
inc
jno
mov
lret
data16
or
jg
test
jl
push
xchg
or
orb
fsubs
jmp
or
mov
lock
hlt
iret
insl
jbe
add
addr16
ja
pop
mov
jns
stos
dec
cld
add
jge
cmpsl
fwait
xor
bound
addr16
jne
sbb
mov
jl
push
fstpl
loopne
xor
inc
dec
pop
pusha
sbb
adc
jge
test
dec
pop
lds
dec
mov
mov
fsubs
mov
in
inc
add
or
add
dec
lret
cs
fwait
pop
mov
xor
sub
sti
mov
call
es
push
or
cmp
xor
xor
mov
mov
hlt
push
pop
mov
cmp
sub
jb
pop
cmp
add
testb
daa
pop
ja
pushf
js
push
mov
repnz
shll
iret
cmp
addr16
cld
or
fidivs
cld
xchg
cmp
push
enter
and
xor
in
or
or
sub
mov
push
xchg
pop
and
mov
outsl
popa
jge
lods
iret
cwtl
outsl
sub
out
add
jg
sar
xchg
lods
xchg
dec
out
hlt
sbb
mov
and
jle
aas
ret
add
out
jl
test
push
jecxz
addr16
out
imul
stos
cmp
or
adc
aas
adcb
mov
pop
inc
das
cmp
mov
jp
cmpsb
and
adc
or
rclb
adc
cmp
push
jmp
push
out
jle
das
pushf
shll
mov
push
jne
je
xchg
addb
outsl
jnp
xchg
cld
sahf
inc
mov
aam
out
data16
fdivrp
sbb
inc
sbb
push
and
fnstcw
fiadds
das
push
or
loopne
test
push
cmp
pusha
fdivr
xor
push
mov
adc
cmpsl
or
and
sbb
mov
mov
cli
pop
jno
lea
aam
leave
inc
lds
lcall
sbb
ret
arpl
adc
or
xchg
int
cmc
dec
xchg
mov
push
mov
popa
ja,pn
loopne
push
arpl
scas
adc
gs
loope
in
inc
pop
je
rol
mov
mull
je
sbb
lret
adc
sbb
fadd
jo
jo,pn
out
xchg
sub
sub
sti
xor
sbb
icebp
inc
fmuls
adc
push
push
mov
icebp
push
mov
faddl
ffree
sbb
dec
adc
jno
inc
dec
orl
jb
jmp
loope
cmp
add
enter
stos
stos
pusha
test
lea
pminub
dec
and
dec
lret
sbbb
push
pop
or
jmp
loop
adc
jecxz
sbb
jecxz
sahf
int3
loope
mov
jns
push
mov
jbe
xor
dec
add
jge
pop
pop
repz
in
test
incl
xchg
das
imul
cmpsl
int
sub
inc
das
pushf
push
fstpt
mov
mov
push
das
adcb
mov
iret
iret
adc
lods
dec
push
push
mov
lahf
mov
lea
push
pop
adc
jge
dec
repz
or
cli
xor
mov
xchg
jb
pop
out
in
jecxz
pop
pop
repnz
dec
cmc
daa
dec
ret
pop
stos
imul
mov
mov
add
gs
fbstp
and
in
sub
lock
and
sbb
js
sbb
in
jmp
ljmp
imul
cmp
mov
es
and
rorb
repz
or
mov
add
xchg
pushf
cmp
jle
cld
sahf
dec
popa
sbb
xchg
sbb
stc
add
lock
cmpsb
mov
in
sbb
adc
lret
jge
outsl
dec
or
jnp
in
outsb
jmp
hlt
xchg
pop
lea
popf
cmp
cwtl
sti
xor
cmp
and
or
mov
fdivrl
fisttpl
pop
push
push
sti
mov
pop
inc
frndint
out
adc
dec
arpl
int3
lret
jbe
out
in
fyl2x
insl
sbb
insl
stos
adc
nop
mov
shll
xchg
js
popf
rorl
std
ds
cli
mov
jns
je
xor
std
or
stc
stc
fbstp
xor
pushf
sub
inc
in
test
int3
das
push
pop
das
cli
inc
in
scas
inc
ja
xor
movsl
and
mov
jle
dec
ja
mov
imul
lock
lods
mov
mov
ljmp
sub
leave
dec
es
test
cmp
pop
aad
sub
adc
loop
call
pushw
mov
jge
jecxz
push
movsb
mov
enter
inc
clc
or
or
mov
pop
repnz
call
pushf
mov
push
xor
sbb
push
sahf
sbbl
out
sub
aad
mov
enter
test
in
icebp
xchg
scas
scas
out
fadds
lods
add
fcmovbe
fisubrl
xchg
add
mov
cmp
dec
movl
in
mov
jns
push
cmp
popf
lret
add
dec
sbb
and
sub
push
dec
jecxz
add
pushf
es
or
loop
sar
test
pop
pushf
bound
xor
test
rep
bound
test
mov
adc
add
pop
sub
das
xchg
nop
fldenv
popa
in
dec
adc
jge
lock
int3
adc
adc
mov
push
rorl
sbb
and
and
cmpsb
mov
mov
hlt
cmp
les
jno
mov
es
enter
adc
pop
out
ds
jg
ss
mov
sarb
andl
lds
int3
repz
push
lds
loopne
jns
arpl
mov
leave
sbb
stc
loope
lods
or
lcall
fimuls
bound
and
pop
mov
arpl
or
andl
pop
xor
xor
adc
pusha
in
scas
push
int3
and
pop
sbb
sbb
xchg
gs
clc
outsb
push
insb
xchg
ret
xor
pop
dec
es
pop
test
sub
pop
mov
inc
xchg
test
push
jl
sub
xchg
inc
rclb
fstps
das
or
ja
xor
inc
dec
cmp
cli
int
fsubrp
sub
pop
push
in
lods
push
sbb
cltd
mov
cmpb
cld
pop
push
pop
fiaddl
leave
pop
add
lea
mov
pop
cmp
sub
js
xor
lret
mov
push
and
mov
dec
inc
adc
aas
mov
pushf
rcrb
addr16
ror
jp
rcl
fnstcw
inc
lods
xchg
sbb
fnstcw
adc
mov
ffreep
sub
cmp
clc
cmp
scas
movsb
sbb
incb
ror
fidivs
inc
pop
xlat
push
xchg
xchg
scas
jb
mov
or
xchg
xor
cs
aam
test
adc
shld
push
stos
inc
mov
push
mov
dec
sahf
xchg
or
hlt
cmp
pop
fcmove
xlat
xchg
hlt
movsl
push
mov
out
or
push
orb
or
in
mov
pop
pop
adc
stos
pushf
mov
gs
enter
and
pop
cltd
inc
or
cmpsl
xor
add
ret
xchg
inc
cmc
mov
sahf
xor
adc
call
out
mov
cmp
push
jo
dec
fcmovu
sub
fcmovbe
cli
pop
cld
bound
and
adc
test
or
loopne
lea
lcall
xchg
mov
cmc
mov
or
mov
mov
jne
jnp
add
enter
fwait
mov
mov
jmp
mov
je
int3
and
xchg
adc
gs
in
rep
subb
xor
dec
push
push
test
dec
push
out
push
sahf
pop
dec
push
push
add
pop
pop
in
sbb
jle
pop
lcall
and
fs
jl
jnp
add
movsb
loopne
fadds
mov
andl
call
dec
pop
clc
insl
mov
cmp
enter
repnz
xchg
sbb
jnp
or
shll
les
fstps
rcll
js
test
mov
out
dec
pushf
outsl
cli
mov
aad
pop
pop
movsl
xor
divl
loope
push
cmp
xor
fadds
cmp
les
adc
call
jge
lahf
mov
push
arpl
iret
arpl
rcrb
mov
je
adc
into
daa
xor
iret
pop
jle
push
xor
xlat
xchg
jae
clc
mov
mov
addr16
lret
and
pop
pushf
jbe
es
arpl
inc
pop
pop
xchg
fimuls
add
dec
lea
loope
cli
gs
dec
push
add
lret
cltd
adc
xchg
mov
jbe,pn
fdivl
pop
int
sub
mov
sub
cmp
dec
push
cmpsl
adc
add
movsl
popa
call
sahf
jo
dec
les
mov
mov
lret
xchg
aad
lahf
xor
rcll
mov
jo
test
pushf
fsubrl
gs
fs
push
mov
lret
fstpt
cmc
cmpb
jne
push
and
ss
cmpsl
stos
sub
xchg
insb
mov
push
fidivs
mov
cmpsl
mov
sub
hlt
in
jnp
cmc
incl
pop
jp
lret
lea
int3
int3
repnz
jbe
or
cmc
ss
in
mov
lret
jbe
mov
cmc
push
mov
faddl
adc
or
fdivs
roll
dec
jecxz
cmp
adc
push
xor
inc
mov
sbb
mov
adc
xlat
in
rcrl
hlt
dec
pop
cmp
mov
jo
mov
add
jl
sbbb
shlb
push
imul
mov
fs
sbb
cmp
shrb
movlps
xor
in
fstps
cmp
test
dec
cwtl
lahf
sub
int3
mov
rorb
mov
and
inc
xchg
jnp
mov
cmp
xchg
mov
into
lock
xchg
js
dec
xchg
xor
adc
and
and
mov
pop
aas
mov
sub
mov
add
nop
testb
idivl
dec
sbb
das
lret
sbbl
dec
std
add
add
dec
call
gs
cmp
fcoml
fcomp
cwtl
jno
add
ficomps
mov
das
add
pop
push
add
mov
inc
mov
mov
push
hlt
and
xor
or
add
mov
adc
leave
jmp
lods
sbb
dec
mov
inc
xlat
data16
jp
adc
aaa
ffreep
and
sbb
subl
jne
pop
sbb
mov
cli
pop
sbb
cmc
mov
popa
ret
dec
push
and
lods
mov
dec
dec
adc
jne
sahf
inc
scas
orl
push
dec
sahf
out
adc
cli
add
imul
sbb
push
fisttpll
data16
std
xor
pop
add
inc
inc
popa
add
fcom
fbld
push
orb
sub
insl
dec
push
imul
arpl
mov
popa
jnp
int3
insl
pop
mov
je
jns
lds
sub
or
pop
test
dec
mov
mov
xor
fcmovnb
push
mov
xor
lret
jg
imul
dec
xor
inc
or
jo
adc
cld
xor
pop
push
or
pop
dec
inc
or
mov
mov
stos
or
adc
jno
xor
in
cmpsl
mov
add
popl
fcoml
cmc
lcall
shll
jmp
mov
and
fadds
rorl
xor
leave
movsb
pusha
test
lret
jp
addr16
mov
sbb
imul
call
shl
dec
nop
popf
add
out
push
stos
or
daa
lcall
fdivs
sahf
sub
sbb
fidivrl
aam
repz
cmpsl
cmc
movsl
or
or
and
dec
ds
push
stos
cmc
rcrl
ds
pop
jbe
sbb
push
cmp
jno
mov
mov
int
pusha
push
addr16
sub
loopne
adc
repz
fstl
gs
gs
jecxz
mov
jmp
imul
in
sbb
sahf
sbb
jg
shll
jg
mov
in
pop
sbb
hlt
sbb
ret
inc
adc
mov
ljmp
cmc
add
data16
inc
lret
pop
mov
push
sub
shll
rorb
fiaddl
jp
test
push
pop
xchg
xor
sahf
divl
out
sub
xor
jns
lahf
or
pusha
mov
daa
mov
jecxz
sub
xchg
in
sub
sub
loope
add
lock
mov
sahf
hlt
jne
popa
xor
sbb
sub
fnstenv
and
lret
push
cmp
jne
stos
jo
push
push
imul
shr
xor
leave
fst
std
jo
test
cltd
xlat
into
push
push
insl
jmp
repnz
mov
loop
insb
xor
insb
stos
sub
inc
jbe
lds
ljmp
jb
xchg
gs
rsm
adc
mov
fadds
gs
movsb
data16
cli
xchg
sar
cmpsb
cmp
repnz
cs
pop
inc
xchg
pushf
in
cmp
push
popf
and
cmp
cmp
shrb
mov
je
lods
mov
fildll
in
scas
int3
mov
push
mov
jbe
cmpsl
pop
nop
fwait
cmp
imul
fstps
test
or
mov
push
and
arpl
into
jp
pop
push
stc
in
push
cmc
mov
rcll
and
inc
push
fnstsw
inc
jae
inc
mov
arpl
mov
iret
inc
add
dec
mov
or
cltd
clc
hlt
add
dec
push
add
or
inc
xchg
lock
scas
fdivrs
pop
pop
enter
mov
mov
leave
fs
mov
js
inc
cmc
mov
xor
mov
dec
fistps
mov
dec
lcall
mov
ret
leave
add
fucomp
push
sbb
xchg
jnp
aam
xor
mov
xchg
loop
jo
in
push
das
shll
cltd
sti
push
push
sub
jae
dec
sub
mov
add
in
cwtl
sbb
lods
dec
clc
cmp
jg
das
sti
and
cmpsl
mov
les
iret
negb
arpl
mov
mov
andb
jecxz
incl
xor
jns
lcall
adc
xchg
or
fwait
popa
lret
dec
jne
sub
jno
xchg
and
loop
lcall
fdivs
imul
mov
dec
dec
icebp
mov
mov
addr16
sbb
and
jb
mov
xchg
insl
daa
mov
dec
xchg
ror
pop
fimuls
inc
mov
sub
loope
dec
repz
inc
jl
pop
lret
js
or
xchg
mov
aas
sub
shl
add
je
test
cmp
dec
lods
sbb
adc
sbb
insb
lods
add
fildll
push
jmp
lcall
out
mov
inc
dec
adc
xor
cmc
lea
adcb
stos
divb
xchg
jno
movsb
mov
xlat
ljmp
out
sti
lock
mov
addl
scas
xchg
cmp
lea
dec
cli
fs
adc
cmpsb
mov
imul
fisubs
ficompl
icebp
aas
jno
mov
test
adc
mov
add
scas
sub
mov
insl
mov
mov
xor
xor
insl
sbb
movsb
test
lods
insb
add
cmp
push
push
addr16
ljmp
inc
dec
scas
adcb
pop
sbb
fidivrs
sub
pop
std
loop
es
inc
and
jno,pn
xacquire
arpl
or
aad
mov
insb
loop
jp
mov
push
or
insb
jecxz
scas
mov
add
stos
daa
sbb
push
outsl
sbb
xor
out
push
xor
sarl
push
dec
lock
shll
mov
or
adc
push
inc
test
adc
push
fcomp
js
sub
iret
mov
mov
movsb
inc
inc
sbb
jp
les
jno
repz
cmp
adc
add
jnp
push
lcall
mov
cld
dec
sub
movsb
lds
mov
mov
inc
imul
test
subb
cmc
push
push
pop
ret
mov
inc
sbb
push
xor
add
or
sub
std
cmp
test
jnp
fwait
mov
xor
push
cmpb
fistpl
outsb
in
loop
lods
cmpsl
sbb
fs
jns
ret
or
movsb
sub
or
mov
out
ja
cmpsb
cmp
into
test
jecxz
movsb
dec
sub
rorl
pusha
or
push
push
push
pop
and
in
in
movsb
sub
in
and
out
xor
jge
sbb
cmpsb
popa
and
mov
cld
push
sbbb
xor
mov
jg
mov
sbb
in
push
pop
fimull
je
jg
pop
mov
mov
dec
sbb
xchg
dec
insb
cmpsl
lds
cltd
faddl
cld
mov
lret
fwait
or
pop
jmp
cmpl
mov
test
pop
add
add
shrl
xchg
lret
out
mov
subl
mov
sbb
inc
out
and
dec
insb
mov
inc
mov
lret
test
pop
dec
lcall
insb
and
add
daa
mov
mov
sub
fisubrl
push
aaa
fiadds
xchg
ljmp
in
inc
mov
lret
add
mov
mov
pop
xchg
rcrl
fbstp
adc
mov
xchg
or
xchg
adc
sub
add
leave
cmp
movaps
clc
inc
mov
push
xor
mov
cmp
mov
sahf
or
in
dec
addl
dec
jle
jle
loopne
cmp
fs
fistps
rcl
popf
data16
enter
xchg
test
adc
xchg
sti
ljmp
jecxz
popf
mov
ret
add
insl
sbb
addr16
add
sti
sub
ucomiss
pop
xchg
gs
xor
popa
or
mov
int3
mov
pop
jno,pn
adc
jg
mov
popa
loopne
dec
add
adc
or
sarl
movsb
xor
movsl
inc
adc
xchg
into
mov
inc
sub
call
or
aaa
jnp
lock
push
loop
sub
xchg
sbb
add
inc
and
push
into
test
in
test
dec
xchg
ds
movb
pop
and
pop
cmp
push
ss
inc
add
loopne
xchg
sbb
xor
subb
jle
mov
imul
adc
addr16
mov
inc
jnp
mov
and
nop
or
mov
popa
cmpsl
xchg
shrl
fdivs
aad
jbe
sub
cli
mov
btc
dec
lds
ss
ret
and
shll
dec
or
aam
sub
call
insb
jae
call
sub
jae
xor
into
imul
daa
xchg
movsb
mov
mov
enter
pusha
call
jp
inc
movsb
mov
xor
insb
mov
dec
in
or
sti
loope
rcrb
inc
repz
xor
stos
push
mov
nop
insb
sub
insb
push
in
int3
mov
sub
and
mov
add
mov
inc
sbb
sahf
mov
and
cmp
or
sub
mov
inc
mov
xchg
sub
mov
in
lds
mov
loop
lcall
les
pop
jo
pop
mov
arpl
mov
xlat
aas
les
cmp
fstl
subl
sbb
adc
jo
sbb
aam
in
icebp
xor
adc
int
xor
pcmpgtd
xchg
cmpsl
ljmp
inc
push
jnp
cmp
jne
mov
inc
je
mov
inc
std
int
fisubrs
pop
add
cmpsb
push
insb
outsb
divl
adc
adc
test
insl
jb
xchg
jge
add
mov
mov
test
ljmp
iret
mov
dec
sbb
loopne
addl
scas
mov
jp
in
clc
jnp
mov
xchg
pusha
mov
adc
fildl
test
or
pop
xchg
and
fidivs
push
stos
mov
das
dec
daa
push
shl
lahf
add
ret
call
popw
xchg
aas
dec
jnp
hlt
in
jae
push
lret
imul
sbb
aaa
fwait
ret
subb
in
testl
pusha
add
sub
or
pusha
movsl
subb
nop
lds
sbb
paddb
popa
xchg
sbb
push
adc
mov
cltd
mov
jno
inc
out
jae
jmp
mov
scas
ds
cmp
inc
nop
outsb
in
jae
notb
fucomp
jbe
mov
sbb
xchg
and
xchg
or
out
outsb
xor
int
push
mov
xor
repz
mov
je
push
add
lret
nop
hlt
dec
add
loopne
xor
or
push
adc
rcrl
inc
inc
or
mov
mov
push
and
dec
lea
sub
fwait
mov
ss
jo
sbb
sub
jp
fs
sbb
cmp
outsl
dec
jb
or
dec
rcrb
lret
add
ljmp
push
pop
and
mov
outsb
xor
jb
pop
repz
mov
push
xor
dec
cmp
subl
sbb
sub
mov
sub
insb
insl
mov
add
nop
sub
cmp
mov
and
dec
inc
mov
insl
push
jmp
inc
loop
fsub
cmp
mov
ret
les
lcall
xchg
mov
push
dec
shrb
je
jae
dec
xor
add
xor
sub
outsl
es
xor
jmp
insl
mov
lea
movsb
inc
popf
pop
loope
sub
mov
in
loopne
test
sub
aam
jecxz
cmp
imul
adc
sbb
mov
sub
cmp
lahf
pop
pop
and
jmp
push
ds
imul
cwtl
fiaddl
scas
and
mov
push
xchg
mov
add
push
push
test
ret
push
stos
xor
inc
cld
dec
fwait
xchg
sub
aas
sarb
rol
mov
fstl
push
xor
add
jp
fcmovu
add
lret
rol
xchg
push
das
sub
in
imul
lahf
ds
pusha
mov
fisubl
aam
pushl
jo
sub
movsb
sub
outsl
iret
xchg
inc
sub
push
outsb
sbb
mov
or
xor
je
insb
inc
imul
je
push
aaa
sbb
add
sbb
movsl
outsb
out
and
xchg
idivb
xchg
xlat
pop
sbb
daa
int3
pusha
inc
out
inc
mov
aas
adcb
loop
pop
arpl
push
rcl
and
dec
fmull
xchg
call
loope
sub
out
gs
xorb
inc
iret
mov
mov
inc
pop
mov
xchg
sub
stc
fsubs
cmp
adc
pushf
clc
dec
out
std
xchg
pop
pushf
cmp
inc
std
lret
adc
dec
fwait
cmp
popf
insl
xchg
pop
pop
cmp
xlat
sbb
testb
loopne
and
inc
or
nop
adc
inc
dec
and
inc
xor
imul
adc
flds
dec
je
std
mov
sti
lds
cwtl
mov
cmpsl
cmp
jb
lock
sub
push
loopne
mov
dec
sbb
mov
scas
mov
fsincos
mov
popf
sbb
inc
jle
cmpsl
lcall
cmp
mov
dec
mov
inc
mov
cmp
roll
loope
pop
loop
bound
pop
push
vpackuswb
pop
pusha
xor
scas
xchg
movl
jns
pop
rclb
dec
inc
jb
add
push
lcall
mov
in
cmp
and
ret
mov
fidivs
stc
mov
push
cmp
jne
rolb
rclb
push
push
mov
add
cmpsl
push
das
data16
fcomi
jne
notb
xor
call
add
pop
call
and
movups
insb
clc
imul
mov
fldt
ret
aad
inc
test
jle
out
sbb
push
cmp
push
mov
aaa
outsl
repz
jns
lret
inc
fs
push
fs
imul
xor
push
ja
mov
jl
ss
in
outsl
sbb
das
xor
add
jnp
mov
cmp
icebp
ds
repz
lret
xchg
jno,pt
int3
ss
mov
sbb
repnz
ret
fistpll
inc
ss
and
orb
fildll
aad
jae
jmp
stos
mov
jle
inc
test
ds
out
cmp
cmp
fwait
push
mov
in
pop
and
pop
cld
rclb
aam
cmpsb
sub
cmpsl
xor
pop
andb
pop
stos
ror
xor
mov
outsl
dec
bound
int
ficoml
fwait
in
jge
movsb
jmp
dec
xor
ret
xor
push
cmp
adc
enter
stos
inc
or
adc
xchg
rclb
xor
jg
frstor
imul
add
jnp
xchg
pop
push
and
xchg
in
xor
add
sarb
orl
xchg
je
rolb
cmp
fwait
clc
loop
cmp
loop
push
lahf
sub
arpl
pushf
les
in
je
js
push
xor
push
ficoml
rcrl
mov
rclb
mov
jae
mov
test
loope
call
mov
fdiv
xchg
enter
movsb
xchg
mov
xchg
add
adc
push
xor
ret
jne
movsl
mov
xchg
test
mov
pop
sahf
aaa
jg
cli
int
orl
push
frstor
dec
mov
jmp
inc
fwait
cmp
dec
jle
stos
test
mov
ss
int3
inc
iret
pop
mov
inc
cmc
dec
stos
cmpl
popa
andl
inc
in
sbb
subb
je
sbb
fdivrs
and
movsb
xorl
mov
jecxz
inc
dec
into
add
mov
xchg
push
aas
stos
push
push
out
dec
mov
int
lret
outsl
popa
mov
ja
sub
aas
imul
std
wrmsr
cltd
lds
mov
subl
stos
int
mov
outsl
push
jbe
cmp
popf
push
repnz
fidivrl
jl
and
sub
movsb
fwait
inc
jg
mov
mov
or
xchg
jns
daa
mov
sub
loopne
jp
mov
push
in
int
sbb
pop
jl
insb
fldenv
fsubl
jl
jmp
xchg
add
ret
fadds
adc
hlt
pusha
leave
cmpsl
jo
push
in
xchg
lds
jb
shlb
cmpsl
jmp
notb
push
fistpll
adc
mov
les
xchg
and
es
mov
int3
pop
adc
cs
inc
xchg
cld
push
jle
cmp
mov
mov
push
rcrl
adc
insb
jp
mov
jp
mov
call
xchg
push
addr16
gs
pop
push
push
rorl
nop
in
adc
movsl
pop
and
jge
dec
je
test
arpl
shrb
fimuls
mov
fnstenv
xchg
loope
push
shll
rorl
in
pusha
shrb
inc
pop
jge
dec
cmp
xor
dec
js
push
add
inc
jnp
push
xchg
mov
pop
add
xchg
push
mov
inc
cmp
add
dec
or
jns
jle
ret
add
jne
addl
fsubl
mov
cs
mov
orl
outsl
jo
cmp
adc
fisubrs
jl
scas
mov
jns
out
daa
subl
jp
and
dec
icebp
sahf
push
inc
insb
mov
das
ja
das
xor
add
scas
inc
dec
leave
das
push
insl
jno
aad
pop
sub
add
lcall
or
enter
in
sub
cmp
fucom
nop
pop
jae
jae
inc
ljmp
cs
rcl
lods
sti
ljmp
fnclex
pusha
xchg
movlps
mov
push
xor
or
sbb
adc
daa
es
inc
or
jle
call
push
xor
or
lods
movsl
stos
scas
xor
and
pop
shlb
rolb
push
cmpsb
inc
mov
adc
hlt
and
stos
xor
jbe
dec
jb
decl
sub
push
cwtl
push
sbb
in
jnp
pop
pushf
fwait
push
or
cmp
popf
mov
mov
mov
popf
push
repnz
ret
pop
mov
insb
mov
test
call
repnz
adc
aas
js
mov
dec
out
gs
push
xor
mov
adc
pop
mov
xchg
pop
loop
in
popaw
mov
xchg
pop
push
jg
leave
push
sub
xor
or
cmp
jne
outsb
dec
mov
out
jb
test
xor
fidivrs
arpl
sub
pop
mov
test
jmp
inc
lods
outsb
push
pop
ss
jnp
loop
xlat
test
xchg
pop
ficoml
mov
repnz
jbe
imul
mov
jbe
and
and
dec
sub
inc
shll
data16
nop
test
xchg
loope
movsb
push
sbbb
std
jne
cmp
mov
push
fcmovnb
inc
fists
xor
sti
adc
clc
add
push
cmp
ljmp
lods
push
cmp
mov
popa
inc
and
xchg
mov
inc
adc
data16
mov
add
pop
push
inc
adc
fs
and
cmp
lds
gs
lock
lcall
aaa
ds
jge
mov
aas
notl
leave
cmpsb
jge
jecxz
xor
and
dec
push
sub
dec
jecxz
push
push
fistps
adc
push
in
jnp
xor
push
push
gs
or
pop
add
iret
adc
xchg
or
push
push
insl
orb
leave
movsb
push
nop
sahf
jbe
fidivl
xchg
jo
xorb
cmc
rcll
add
pop
fmuls
test
mov
sbb
cmp
pop
pop
push
xchg
inc
decl
xchg
test
mov
pop
and
sub
movsb
leave
in
or
shr
inc
decb
jmp
sbbl
mov
cmp
or
xchg
xor
or
dec
xchg
insb
and
mov
inc
push
cmpsb
cwtl
sbb
push
sub
jne
xchg
jl
and
dec
pop
sbb
je
mov
imul
dec
shl
mov
mov
enter
jl
in
int3
movsl
adc
daa
xchg
lods
xchg
js
cmp
pop
lock
xchg
repz
ljmp
lods
mov
xchg
subl
xor
cmp
dec
add
push
xchg
arpl
je
jne
cwtl
movsb
lret
iret
andb
jge
mov
stos
inc
movsl
scas
cs
mov
scas
adc
test
jl
xchg
pop
cli
in
sub
add
inc
xor
add
daa
cltd
int3
arpl
pusha
mov
pop
jb
and
iret
add
inc
mov
bound
imul
popf
mov
inc
cwtl
inc
xchg
and
js
mov
imul
mov
addb
lret
insl
dec
push
addl
pusha
mov
lds
sbb
shll
xor
pop
cmp
pusha
dec
sub
lret
dec
cmp
add
push
rcl
or
rcrl
mov
xchg
sti
lods
cmp
aaa
inc
adc
fstl
xlat
push
xor
ret
xchg
pop
stc
leave
test
mov
sahf
sub
out
and
mov
xor
add
adc
in
movsb
andb
sub
enter
outsb
mov
ret
or
ret
inc
in
pop
push
mov
push
subl
loopne
add
jle
push
xchg
addl
adc
shrl
xor
rcrb
xchg
push
xchg
into
xchg
outsb
xor
adc
addb
rorb
xlat
rol
adc
addr16
shlb
fwait
jbe
es
lret
cmp
sbb
ja
data16
insl
out
adc
xchg
jb
es
mov
dec
mov
cmp
enter
mov
int
mov
loope
pop
and
cld
jl
ficoml
jle
and
es
sub
push
cltd
ffree
sub
bound
dec
inc
push
xor
sub
push
daa
repnz
jne
outsl
sub
and
fst
lcall
out
push
lcall
add
pop
sub
fildl
testb
adc
xchg
stos
imul
sbb
aam
in
daa
std
std
dec
clc
imul
and
pushf
and
es
jl
faddp
push
or
mov
movsl
insl
mov
adc
jmp
and
stos
dec
and
xchg
pop
insb
cmp
stos
scas
jns
adc
imul
xor
aad
daa
cwtl
sbb
dec
cwtl
ds
pop
add
adcl
aas
in
sub
sbb
lret
insw
push
mov
jnp
jnp
sbb
mov
ljmp
scas
icebp
sub
int
and
cmp
and
jp
sbb
std
or
sti
or
jbe
jmp
into
in
mov
or
cli
sahf
repz
or
repnz
mov
sarl
cmpsl
testb
xor
inc
lea
rcll
dec
sbb
mov
dec
add
enter
cmp
lret
inc
mov
les
cltd
add
in
data16
enter
or
repz
jp
ds
pushf
pushf
shl
adc
dec
loop,pn
lea
xor
out
fcmovnb
movsb
cmpsb
adc
aaa
sub
and
outsl
mov
cmp
out
pop
or
push
jno
xor
adc
or
aas
push
mov
leave
orl
in
pushf
cs
gs
repz
jmp
in
les
mov
push
xor
push
loop
test
mov
or
push
mov
xor
add
out
xchg
icebp
and
jnp
dec
dec
pusha
cld
inc
mov
ljmp
mov
sub
daa
adc
or
inc
enter
mov
outsb
cmpsl
add
push
pusha
mov
xchg
cmc
pop
pop
jbe
cmc
mov
mov
jnp
rorl
stos
cmp
fcoml
outsl
iret
mov
pop
sub
imul
mov
rorl
xlat
inc
or
xor
push
pop
cmp
cmp
ss
outsb
or
jbe
popa
mov
pop
mov
fmull
jp
data16
jmp
lds
inc
popf
nop
mov
dec
repz
sarl
sti
mov
sbb
xchg
lods
imul
cmp
cltd
xchg
adc
and
mov
inc
push
or
into
xchg
adc
mov
insl
iret
lret
out
or
pop
add
int3
mov
outsl
shlb
push
ss
ds
xchg
rcl
test
or
rcr
dec
in
pop
das
pushf
push
mov
fs
cmp
icebp
lahf
aam
fmuls
xchg
sbb
sub
das
lock
or
gs
pop
leave
je
enter
faddl
cmp
inc
jge
call
js
mov
sub
in
push
pop
lods
mov
repz
push
fldcw
mov
cmpsb
inc
std
push
adc
xchg
mov
scas
outsb
or
xor
and
xor
jp
sbb
pop
popl
inc
or
insb
adc
jno
inc
mov
add
outsb
or
add
mov
cmpsl
ds
jg
outsl
stos
push
cmp
les
ret
arpl
mov
or
test
aas
mov
lea
cld
pop
jle
adc
in
mov
xor
out
cmp
pusha
lcall
in
ficoms
fsubrs
shlb
mov
sbb
out
cmp
aad
inc
xchg
loop
xor
xor
dec
scas
lds
sbb
inc
jne
pushl
sbb
mov
mov
xchg
mov
aas
sahf
sub
inc
push
repz
xchg
cmp
fs
fstpt
enter
push
and
push
cmp
or
and
mov
fsubl
sub
js
mov
in
sbb
aaa
jge
hlt
dec
cmp
sub
fbld
sti
jl
mov
pop
aad
jl
xor
stos
xor
lcall
push
pop
mov
dec
xor
popa
adc
or
or
xor
movsl
push
insl
mov
or
xchg
clc
int
outsb
dec
jmp
and
shrb
cs
inc
inc
fidivrs
enter
mov
mov
jg
fucomp
iret
mov
cmp
jecxz
addr16
stc
dec
dec
or
out
cmp
test
dec
test
ret
mov
inc
les
xchg
dec
mov
sbb
lods
or
pop
push
andl
lods
or
daa
lods
dec
es
xchg
loopne
mov
outsb
mov
test
icebp
dec
sub
jnp
xor
mov
mov
sbb
ret
mov
jge
push
call
xor
ja
or
out
into
js
jp
mov
and
and
popfw
pop
inc
nop
fs
pop
ja
or
xor
repz
sahf
mov
adc
cmp
dec
ss
sahf
jbe
mov
rcrb
inc
push
xchg
xor
int
mov
or
fcoms
add
lea
or
inc
mov
stc
inc
fs
mov
in
pop
jge
and
jne
adc
jne
negb
sarb
and
dec
adc
jne
mov
mov
jb
sub
xor
and
dec
ljmp
mov
repnz
out
jle
bound
cmp
fistps
dec
sahf
mov
mov
fs
ljmp
jo
xchg
xor
cmp
add
les
xchg
int
cmp
dec
loop
inc
add
mov
mov
mov
test
mov
pushf
lea
aad
adc
mov
jl
sbb
lods
sbb
jno
mov
das
shrl
inc
mov
cmp
popa
aas
inc
cmpsb
loopne
push
insb
adc
jae
xchg
stc
xchg
mov
mov
test
lods
sub
jno
pop
xchg
popa
jle
loop
mov
mov
mov
dec
sub
and
enter
fdivrs
fdivrs
stc
aas
cmpl
inc
shlb
imul
movsl
fld
shlb
pop
mov
jmp
push
xchg
xchg
mov
sahf
rolb
lods
daa
out
adc
cmpsb
lret
xor
test
stos
adc
jge
mov
cmpsb
out
jmp
xchg
pop
bts
sub
ljmp
je
inc
sub
mov
mov
adc
fldt
lea
out
faddl
fs
and
mov
jmp
lret
or
fs
lret
mov
fimull
lds
push
call
or
cmp
mov
test
cmp
scas
clc
mov
scas
icebp
ret
outsb
sarl
sahf
mov
popf
mov
scas
out
jecxz
shll
mov
mov
dec
cmp
icebp
lds
or
xlat
adc
jmp
dec
lds
add
xchg
popf
out
pushf
push
movsl
push
pushf
inc
in
push
push
sbb
add
insb
js
cmp
rcrl
xorb
pop
dec
pop
nop
xor
gs
ds
pop
in
xchg
mov
mov
adc
sbb
push
dec
xor
xchg
leave
sar
jbe
ljmp
mov
inc
mov
xchg
icebp
jmp
xor
and
setp
xor
leave
push
int
push
or
cmpl
cli
not
cs
jbe
jmp
hlt
xchg
sti
jge
cld
lods
mov
jo
mov
sbb
divb
mov
push
adc
jno
or
pop
jg
dec
aam
adc
pop
jne
stos
sti
ljmp
pop
cmc
dec
jg
call
xchg
movsb
push
inc
push
cmpsl
addl
out
loopne
xor
jmp
lahf
inc
ror
jecxz
mov
adc
inc
adc
jae
mov
pushf
mov
loopne
cmc
leave
sti
adc
outsb
je
pop
push
shlb
nop
out
and
jl
pushf
imul
shlb
pop
xchg
fbld
jg
lcall
imul
cs
dec
cvtps2pd
dec
push
call
xchg
sahf
and
mov
fistpll
shrb
add
sbb
adc
mov
dec
shlb
xchg
cld
sub
jg
cmpsl
sbb
out
in
std
or
ds
xchg
ret
sub
mov
lea
xchg
push
cmp
cmpsb
push
popf
test
cmpb
mov
aas
or
mov
rcrb
jecxz
repz
and
pushl
jecxz
mov
jns
or
xor
stc
push
or
lahf
and
inc
in
pop
add
fs
pop
imul
or
lods
daa
inc
int3
push
inc
fistl
pop
cli
mov
and
enter
repz
mov
sub
pop
inc
negl
jecxz
cltd
pextrw
fs
pop
out
sbb
out
ret
cmpsb
ror
xor
cmp
mov
sti
sbbl
jb
test
push
mov
stc
outsl
dec
xchg
lods
js
xchg
and
mov
stc
rorb
dec
add
mov
xor
jp
bnd
into
push
sub
decl
dec
aad
pop
das
push
insl
pop
dec
dec
mov
mov
pop
leave
ja
add
arpl
and
dec
jne
aam
insb
jo
adc
in
out
repz
in
mov
fsubl
or
insb
jnp
es
cmp
ret
or
jnp
mov
mov
iret
jge
sub
stc
add
in
adc
add
ljmp
and
rcll
mov
push
or
xchg
mov
leave
inc
inc
jp
and
sub
clc
std
int3
idivb
xchg
loope
das
jle
fs
repnz
sbb
out
mov
push
push
mov
in
add
in
jb
dec
inc
repnz
push
jl
rcrb
mov
push
sub
xchg
nop
jmp
fcompp
mov
mov
ds
outsl
adc
fnsave
sbb
je
lods
cltd
or
pop
lea
pop
insb
dec
jno
and
mov
xchg
jg
mov
aas
mov
repnz
rcl
xor
push
ds
inc
dec
push
je
cld
cmp
cmc
push
cld
add
cmpsl
jne
or
xchg
dec
push
mov
sub
or
mov
pop
mov
add
mov
ret
dec
cmpsl
inc
insb
out
jb
test
scas
xor
les
mov
mov
cmpsb
repnz
lret
lds
cmp
je
pop
jne
out
or
jg
out
pop
and
xlat
ret
dec
outsb
inc
insl
nop
sub
cmp
pop
pop
and
shll
or
and
leave
or
jbe
popa
lods
push
out
daa
or
adc
mov
shlb
lahf
push
xchg
jb
inc
mov
inc
imul
cmpsb
inc
and
pop
cmp
mov
insb
dec
push
pop
mov
push
push
mov
lods
dec
sbb
push
jns
faddl
rorb
out
cwtl
mov
cld
xlat
xchg
leave
nop
add
fidivrs
stos
add
pop
adc
test
mov
test
lahf
js
adc
les
lcall
xchg
mov
mov
aaa
cltd
dec
movsl
sbb
cmc
jne
rolb
hlt
mov
sbb
xor
inc
xchg
test
jo
cli
mov
mov
jne
addr16
sahf
sub
dec
push
clc
stc
add
stos
out
daa
cmpsb
lods
ret
hlt
push
imul
mov
mov
enter
dec
cld
clc
pop
xchg
mov
dec
jno
mov
ficompl
cmpsb
clc
cmp
ret
adc
aaa
inc
incl
outsl
xchg
iret
mov
sbb
xor
add
call
sbb
sarl
dec
inc
add
lcall
out
fiaddl
or
lods
mov
xor
cmp
jbe
dec
cmp
movsl
jne
sti
jecxz
std
mov
or
and
adc
int
inc
pusha
mov
jle
inc
outsb
xchg
mov
pop
iret
shrl
adc
sub
xor
mov
push
dec
mov
js
jmp
cmp
dec
xor
jg
dec
daa
iret
repnz
mov
xchg
adc
mov
les
in
scas
jle
xchg
or
imul
shr
fwait
imul
adc
into
or
testb
shlb
outsl
lea
push
inc
mov
jbe
daa
cwtl
ds
inc
in
test
push
nop
mov
fmull
mov
mov
ss
mov
pop
je
add
in
mov
dec
pop
scas
jp
xchg
cmpsl
stos
rcll
cmpsl
mov
pop
iret
stos
movsl
adc
mov
push
pushf
mov
inc
outsb
mov
iret
lock
or
push
ja
mov
nop
xor
mov
xchg
cltd
jmp
xchg
fwait
ljmp
lods
popa
jns
xchg
jns
mov
jno
outsl
push
or
jp
pop
cmp
or
mov
cwtl
or
push
mov
jo
xor
jl
cmp
xor
and
mov
add
cmp
fwait
jg
push
repnz
pop
call
out
out
icebp
bound
pop
push
jo
pop
fs
insl
mov
dec
mov
std
insb
mov
out
mov
xchg
ja
adc
clc
jnp
orl
add
push
outsl
divb
outsl
dec
pop
mov
fnstsw
jae
xor
dec
ja
and
lcall
or
out
call
or
cmpsl
adc
mov
leave
nop
jo
mov
in
ret
faddp
xchg
xchg
imul
add
andb
ficoml
mov
nop
pop
rcrl
xor
mov
les
mov
jb
sub
xlat
and
nop
inc
xor
sub
push
push
int3
and
lret
or
push
dec
sub
int3
mov
data16
mov
add
jg
aaa
and
sub
or
and
imul
mov
lret
sub
cltd
mov
mov
xchg
pop
fwait
adc
nop
mov
or
add
adcb
jmp
or
push
movsl
sbb
inc
int
lahf
and
out
jb
push
jg
push
and
lea
clc
pop
lock
pop
in
cs
les
dec
push
mov
pop
int
leave
sub
add
shl
mov
cmp
adc
jns
mov
lcall
xchg
mov
lahf
xor
inc
pop
mov
lods
cli
inc
jmp
pop
inc
in
mov
mov
iret
lods
dec
sub
pop
rcll
sub
stos
pop
in
test
aam
xchg
sub
sub
stc
cld
jne
pushf
test
pushf
inc
lcall
test
pop
and
pushf
ljmp
sub
push
inc
scas
addr16
sbb
push
xor
pusha
xchg
dec
rcl
pusha
and
and
lds
jmp
mov
or
and
jno
int
sub
lcall
sub
rclb
jne
push
movsb
mov
sub
addr16
mov
fwait
lret
pop
mov
data16
mov
and
xorb
ds
es
pop
inc
xchg
mov
int3
pop
imull
ss
adc
lods
sbbl
test
lea
xor
mov
aas
pop
lret
jg
mov
lds
out
and
mov
pop
fisttpll
mov
test
movsb
popf
sahf
xor
push
xor
ret
pop
push
dec
mov
ja
inc
das
bound
dec
mov
jo
push
sbbl
or
stos
dec
scas
or
xor
inc
popa
mov
mov
push
clc
xlat
in
add
xchg
loopne
iret
pop
xchg
les
es
sti
loope
pop
mov
pop
popa
stc
scas
imul
mov
jnp
mov
cmp
int3
sub
into
jno
insb
outsb
xlat
push
mov
loopne
jle
mov
mov
xor
inc
mov
sahf
das
jae
push
movsl
mov
and
dec
gs
cmp
mov
inc
jbe
pushf
adc
pop
icebp
push
jmp
lea
pop
inc
sahf
mov
xor
cvtps2pd
mov
data16
and
xchg
jno
and
popa
xor
push
push
stos
mov
cmp
dec
mov
lods
pop
lret
cmp
lock
add
ds
sub
and
jge
les
mov
addr16
mov
adc
cmc
mov
hlt
mov
in
push
xchg
test
stc
repz
repz
insb
adc
cmpb
xchg
xchg
xchg
sub
push
into
lds
xchg
mov
gs
pop
stos
lods
jp
lods
cmp
fisttpl
loopne
mov
movsb
xchg
rcr
inc
sbb
ja
and
mov
push
ficompl
ret
movups
sahf
cmp
pushf
std
dec
ljmp
cwtl
push
lcall
dec
push
jne
and
test
fdivl
cmpsl
fld
fdivrl
movsb
shrl
pop
insb
data16
outsb
mov
xchg
push
stc
loopne
testb
adc
lahf
dec
and
cmp
dec
clc
shlb
mov
sahf
push
into
repz
and
add
lock
mov
int
push
test
icebp
mov
push
mov
or
les
sahf
cmp
mov
lahf
inc
fs
cmp
jl
push
xchg
lock
push
nop
dec
xchg
jns
jns
gs
adc
jp
mov
sbb
cmp
xchg
call
adc
jne
test
cmp
mov
xor
xor
fidivs
pop
jne
testl
pop
mov
out
pop
sub
jg
bnd
lret
ja
mov
ja
scas
fcmove
xchg
xchg
jb
mov
stos
pop
mov
lds
in
out
dec
dec
mull
and
mov
xchg
stos
movsl
call
or
cmp
cmp
in
dec
pop
push
jns
lahf
divb
or
or
mov
popl
fnstsw
mov
movsb
push
xchg
sub
lret
in
mov
outsl
imul
je
xor
aad
mov
dec
sub
lea
sahf
orl
jo
push
sbbl
mov
loope
sbb
scas
adc
in
fisubrl
imul
rclb
dec
cmp
leave
dec
aad
and
into
dec
push
and
mov
inc
movsb
xorl
push
mov
cmp
mov
sahf
mov
push
cmc
sub
or
jb
pop
or
or
movb
push
movsl
out
scas
cli
add
scas
add
test
xor
ret
in
mov
lods
dec
push
xor
imul
fildll
cmp
mov
mov
ficoms
aaa
inc
sub
xchg
mov
sbb
mov
andb
or
or
xor
icebp
fs
roll
add
movsb
mov
push
popf
mov
lret
or
push
xor
ja
sahf
stc
cmp
outsl
loope
sub
inc
daa
das
loopne
sbb
xadd
jno
test
cs
jp
mov
push
mov
fiadds
pushf
cmp
mov
or
pop
sbb
jns
lods
add
push
and
mov
jb
lds
push
movsl
stc
aam
iret
enter
and
sbb
ljmp
rcrb
insb
shrb
in
ljmp
sarb
jne
inc
aad
xor
sub
cld
add
inc
negb
add
out
inc
jl
loope
fidivrl
icebp
and
xchg
gs
and
and
sub
jl
add
sbb
cmpsl
test
cmp
mov
jb
out
mov
dec
mov
add
push
call
mov
or
inc
aas
jne
sub
repnz
cli
jo
jae
sub
dec
mov
mov
jp
and
sub
icebp
mov
aam
adc
test
xor
xchg
loop
test
cmpsb
sub
mov
pop
orb
or
mov
mov
stc
xlat
dec
in
or
jmp
xor
mov
outsl
les
fcomp
stc
popa
mov
push
lock
frstors
enter
mov
mov
dec
shlb
inc
std
push
xor
adc
repnz
mov
sub
gs
pop
roll
scas
cwtl
mov
lods
call
test
repnz
cmpsb
int
pusha
das
jb
iret
mov
mov
ret
inc
xor
inc
xor
lret
aam
cmp
incb
sahf
loopne
nop
out
mov
std
jno
in
sahf
push
cmc
cmovb
out
pop
loopne
jge
sbb
lea
jge
xor
fidivs
jae
cmpl
pop
dec
out
jl
std
jmp
gs
push
into
push
pusha
shr
inc
sbb
or
mov
sub
ds
xlat
xchg
cmp
pop
outsb
pop
inc
aaa
lds
sti
cmp
or
mov
fdivl
cmp
imul
sbb
mov
es
js
inc
int
push
filds
ds
sbbb
aas
ret
dec
pop
xchg
push
pop
out
mov
add
pop
test
loopne
mov
cmc
in
int
addb
mov
roll
ja
std
inc
std
cmp
aam
inc
push
lods
jg
idivl
aas
pop
es
mov
adc
dec
out
pop
push
mov
sbb
insl
fists
jmp
xchg
xchg
out
adc
xchg
mov
jl
adc
fcmovne
loop
outsl
pop
nop
lret
imul
jecxz
std
mov
push
jb
sub
test
and
scas
femms
push
pop
in
pop
movsl
in
xorl
jmp
xor
sti
lods
clc
pop
sarb
push
scas
or
xor
dec
movsb
ss
mov
dec
repnz
cwtl
xchg
cli
cmpsl
push
sbb
outsl
and
mov
push
push
add
add
lret
iret
fcompl
add
lret
push
jp
mov
cmpsb
push
mov
stos
xchg
lds
xor
push
push
mov
cwtl
popf
ror
adc
and
cmp
and
arpl
xchg
xor
adc
push
icebp
lods
popa
cli
pop
das
mov
jne
jo
and
sub
xor
dec
xchg
enter
sub
jle
stos
push
jmp
insl
fildl
pusha
push
cmc
imul
inc
fisubs
fdivl
cmpsb
add
lods
gs
fdivs
pop
aaa
lock
in
push
jo
int3
jns
shlb
fwait
pop
mov
ljmp
enter
xchg
or
xor
pop
out
jne
mov
fmull
outsl
hlt
and
and
cmp
jbe
ret
xchg
push
mov
push
pop
cmpsb
arpl
xchg
sub
popf
pop
jge
xchg
and
pushf
xor
outsl
ljmp
push
jb
sbb
mov
mov
movsl
mov
insl
sbb
pushf
adc
cli
mov
lods
icebp
jae
sbb
or
dec
imul
mov
cmpl
sti
fdivrs
jp
pusha
xor
lea
dec
push
stos
cmp
mov
adc
mov
pop
ja
negl
mov
out
xor
outsb
or
dec
inc
sti
cmp
leave
stos
in
sub
dec
test
pusha
nop
inc
jge
shrb
inc
sub
mov
jnp
loop
std
pop
and
fiadds
cli
aaa
mov
sbb
jno
cmp
jp
sbb
cltd
int
xorl
subb
neg
adc
aas
sub
and
add
push
mov
xor
sub
dec
xor
push
das
push
ret
imul
xor
inc
mov
xchg
adc
lcall
ret
jp
mov
lock
jae
movsl
inc
xorl
test
push
add
cmp
movsb
int3
data16
dec
inc
pop
pop
jmp
or
adc
and
push
sbb
int3
aas
cmpsb
push
mov
push
call
mov
ret
call
jb
cld
das
loope
mov
push
lods
lock
sbb
mov
cmpsb
add
mov
pop
cmp
add
pop
movsb
push
pop
lods
dec
imul
int3
mov
pushf
inc
cmp
jne
inc
push
lret
daa
mov
mov
push
xor
push
fwait
mov
sbbl
adc
outsb
fsts
mov
jge
insb
adc
sbb
inc
inc
fbld
push
dec
sub
clc
shl
add
hlt
int3
divl
xchg
movsb
add
sti
jecxz
push
stc
cmpsb
lds
dec
roll
loop
cli
mov
fldcw
enter
cmp
xor
sahf
aam
fcomps
fadd
cwtl
and
ja
push
add
mov
sub
mov
mov
aad
xchg
roll
cltd
hlt
pop
ret
or
in
pushf
xchg
or
hlt
xchg
popf
dec
mov
inc
xlat
in
js
sti
cmp
cltd
repz
xlat
call
push
xchg
hlt
ret
or
fisttpl
xor
inc
jns
ljmp
jecxz
cmp
ss
xchg
mov
xchg
dec
scas
pop
xorb
jp
add
and
or
ds
pushf
fimuls
outsb
ja
adc
test
push
cmp
fistps
lret
push
out
fistl
sti
sbb
in
loope
movsl
xor
mov
lock
scas
dec
cld
sub
aam
stc
lahf
jp
mov
inc
daa
call
sub
ret
aas
lret
test
push
push
iret
jmp
rcrb
test
adc
sbb
enter
sbb
loope
inc
imul
ret
jmp
mov
xchg
jle
xor
sub
iret
mov
std
shrb
insb
inc
les
das
outsl
clc
mulb
divb
mov
push
cld
sub
and
cmp
les
jbe
jbe
adc
add
mov
add
test
mov
push
movsl
imul
icebp
lcall
loop
jnp
pop
jge,pt
fwait
sbb
dec
adc
nop
or
lahf
stc
push
jnp
push
add
imulb
or
insl
scas
push
cmpsl
loope
cs
hlt
stos
imul
sbb
dec
mov
xchg
cmp
movsb
mov
jne
movsl
add
outsl
pop
inc
out
push
dec
mov
je
subl
inc
lahf
jle
popa
pop
js
jo
testb
stos
jmp
inc
ficomps
and
ja
std
jge
addr16
fdivl
andl
and
es
scas
icebp
adc
cmp
push
pusha
mov
arpl
push
xchg
outsb
loop
cmp
push
dec
cli
cld
jecxz
push
jbe
mov
loop
popa
test
mov
outsb
pop
sbb
scas
mov
rclb
and
sbb
sub
inc
loop
xchg
dec
pop
rcrb
aaa
jg
inc
inc
arpl
xchg
cmp
pop
lcall
scas
fidivs
les
insb
data16
sbb
xchg
fists
pop
jbe
sub
cs
imull
test
into
outsb
jno
in
add
add
bound
loopne
dec
movsb
jae
sub
lahf
add
mov
mov
xlat
sbb
out
sti
inc
mov
sbb
mov
inc
movl
das
movsb
daa
add
push
inc
mov
fdivrl
popf
jbe
adc
add
test
mov
fists
movb
adc
fs
test
loopne
jbe
sbb
leave
push
daa
jo
outsl
pop
es
aad
or
dec
pop
push
mov
orb
cmp
mov
and
jo
jle
dec
or
cli
js
lods
mov
xor
cs
imulb
add
je
lock
inc
mov
mov
dec
cmc
addb
dec
jb
jg
es
ret
dec
shl
scas
push
xchg
insl
push
notb
int3
mov
push
inc
in
mov
fiadds
pushl
xor
mov
mov
jg
scas
arpl
pop
cs
cmpsb
dec
inc
push
mov
loope
gs
push
xchg
mov
sub
into
mov
xchg
sarl
and
das
gs
rclw
mov
test
leave
mov
cmp
jo
fsubl
jno
adc
lock
out
inc
js
sti
ss
and
inc
push
cmp
int3
dec
jno
xchg
mov
pxor
add
sbb
push
pop
mov
into
xor
xor
test
cwtl
xor
cmp
sub
xchg
ficomps
and
xlat
mov
sbb
aam
xor
and
and
movsl
xchg
or
in
push
lods
stc
or
js
sub
ret
out
adc
mov
sub
cmpsb
mov
or
cmp
mov
adc
cvttps2pi
aas
add
jo
scas
xor
pop
sub
add
mov
push
sbb
adc
jns
aaa
push
sbb
jp
mov
mov
in
pop
aad
xchg
xor
nop
and
push
sub
inc
xchg
mov
jle
pop
divb
fidivrs
mov
push
call
jbe
push
pop
es
ficompl
popa
repz
pop
fsubs
jmp
aad
or
mov
pinsrw
adc
mov
push
pop
xchg
add
push
inc
mov
jbe
lds
rcrb
pop
push
jecxz
sub
sbb
pop
test
gs
sub
in
out
adc
sub
sahf
das
test
aam
push
aam
sbb
test
ret
xor
push
dec
popf
jge
cmp
and
mov
frstor
ja
push
push
jno
mov
stc
pop
test
bound
cmp
daa
push
test
mov
icebp
push
movsb
mov
pop
or
sar
push
xchg
or
mov
fidivrl
into
xchg
inc
ret
insb
jno
xchg
lods
insb
int3
jns
jg
mov
rolb
jp
fidivs
xchg
pop
cli
ss
mov
pop
jge
dec
lds
stc
xchg
jle
fs
ja
aam
movsb
cmc
test
mov
sub
loop
lahf
sub
adc
and
arpl
inc
add
test
rcrl
fs
je
idivl
rcll
scas
in
ljmp
lock
mov
push
xchg
pop
movsl
testb
mov
sahf
pop
scas
pop
jo
mulb
pushf
pop
sbb
aam
jo
icebp
pop
jns
jl
add
pop
loop
mov
mov
bound
or
outsl
push
mov
push
shr
movb
repnz
mov
es
cli
pop
inc
ja
cmc
jmp
push
outsb
mov
jmp
iret
xchg
and
mov
pop
mov
daa
xor
cld
mov
adc
pushl
insb
insl
mov
ja
imul
dec
gs
mov
add
push
or
aam
cmp
fisubrl
int3
aam
dec
aad
inc
pop
cmp
jo
aas
or
or
and
clc
insb
pop
js
orl
inc
xor
inc
jno
xchg
and
out
shll
pusha
jg
mov
lret
dec
add
gs
sbb
imul
dec
and
arpl
lock
sub
scas
imul
in
sbb
cltd
mov
add
iret
mov
xlat
pop
xorb
adc
enter
iret
insl
xchg
test
pop
xor
sbbb
sbb
push
jnp
jl
inc
iret
sub
dec
sbbb
test
mov
push
cs
lea
jne
mov
fisttps
and
out
popf
jo
adcl
add
inc
je
mov
cs
insb
sbb
xor
sbb
pop
aad
inc
nop
cltd
out
sbb
iret
push
outsl
lods
adc
dec
iret
pop
push
pop
leave
aaa
or
nop
andl
outsl
cmp
pop
mov
movsb
dec
scas
xchg
inc
mov
clc
mov
adc
sub
aaa
mulb
clc
cmp
stos
mov
sahf
jne
adc
hlt
lods
in
ljmp
jg
or
inc
scas
or
cwtl
in
cmp
fildll
jl
pop
lock
push
mov
frstor
fs
xor
out
andl
call
out
stos
add
ja
fstpt
shrl
jg
jmp
mov
cmp
jl
xorb
sbbl
int3
dec
pop
inc
clc
xchg
dec
push
add
inc
lds
frstor
sbb
xor
inc
mov
int
adc
xchg
jmp
cs
mov
fidivrs
mov
dec
xor
lods
int
xchg
iret
mov
xlat
xchg
ljmp
mov
cli
fs
scas
jecxz
pop
pop
xchg
lret
test
filds
cmpb
xorb
dec
or
js
cltd
scas
add
mov
inc
pop
repz
pop
cmpsb
add
es
jmp
int
add
out
xor
pop
dec
sbb
fucomip
jbe
aaa
lcall
aaa
jbe
lea
add
stos
in
daa
fs
jae
cmp
adc
lret
dec
jg
push
iret
mov
lahf
insl
test
push
dec
out
imul
mov
daa
mov
lret
add
xchg
or
insb
jnp
add
jmp
push
add
sbb
push
jbe
lcall
xor
push
add
sbb
stos
cmpsb
out
jle
mov
outsb
xchg
lods
divl
mov
les
mov
aaa
pop
cmp
fisubrs
mov
sub
add
out
jg
adc
adcl
sti
sub
and
imul
push
push
lea
cmp
xor
clc
js
enter
lock
jmp
mov
xchg
lods
inc
add
mov
jns
sbb
aad
xchg
mov
test
push
int
ror
enter
incb
pop
loopne
cmpl
rcll
aas
lret
or
pop
mov
and
fcmovnb
cmp
test
lock
sub
jmp
cmpb
xchg
sub
pushf
sbb
inc
in
sbb
insb
dec
sbb
push
ja
in
cmp
out
iret
mov
adc
addr16
jle
shll
sti
adc
mov
leave
lods
mov
pop
roll
pop
push
outsb
sbb
int
aas
jae
dec
std
cmp
jle
aam
movsb
je
nop
sbb
iret
adc
lahf
idivb
fs
frstpm(287
add
loop
ljmp
cmpsb
cltd
ja
pop
popf
stos
sbb
sub
jns
or
stc
orb
cmp
push
xor
outsb
ljmp
mov
and
das
fs
mov
sub
aas
out
sbb
fistpl
ja
inc
pop
sbb
mov
dec
lock
mov
sti
sbb
stos
lret
outsl
mov
cld
nop
mov
outsl
mov
inc
add
push
iret
pop
push
cmp
lahf
dec
rcrb
jecxz
outsb
and
je
dec
add
cld
mov
xor
sti
xchg
jmp
das
add
jg
sbb
xchg
orb
push
pop
xor
jno
and
fiaddl
lods
inc
pusha
pop
mull
adc
out
test
jecxz
clc
mov
mov
repz
jo
pop
aaa
pop
int
pop
fsubr
inc
pop
pop
mov
inc
mov
lods
loope
mov
bound
subl
and
or
aaa
cld
sub
jl
push
testl
jg
mov
and
out
lock
or
mov
aam
cmpsl
mov
jnp
scas
nop
jae
mov
nop
in
sub
cmp
mov
in
lcall
sbb
insb
pop
mulb
jmp
aam
push
or
jbe
jp
rcll
imul
paddw
mov
jbe
mov
fimull
mov
jp
jbe
enter
jle
fcomps
add
sbb
inc
mov
fidivl
decl
call
mov
jno
dec
pop
push
ja
push
outsl
sub
mov
mov
inc
cmp
jl
cmp
or
int3
push
in
inc
ret
lds
cmp
ret
push
mov
cltd
repnz
sbb
mov
hlt
pop
call
mov
shl
and
nop
fistpll
ds
add
shll
std
imul
pop
std
roll
btr
push
paddb
or
or
mov
push
sbb
push
mov
cmp
sbb
cs
mov
adc
inc
sbb
pop
cmpb
sub
add
jnp
pop
outsl
sahf
stos
mov
sub
subl
imull
sarb
ds
inc
mov
mov
dec
cmpsl
pop
adc
mov
imul
das
mov
js
jl
dec
mov
pop
dec
cli
cltd
fstps
mov
repz
lahf
je
fs
pop
pop
xchg
les
in
or
push
jl
std
push
adc
add
mov
xchg
jp
sbb
orb
aaa
and
xchg
jl
mov
xchg
mov
mov
jge
pop
add
aam
cmp
sahf
push
sub
iret
or
adc
sbb
call
or
arpl
push
adc
add
enter
push
cmp
insb
in
xor
in
inc
int3
inc
jnp
mov
stos
pop
or
adc
jge
movsb
sbb
xchg
sub
adcb
loopne
lods
jg
aam
xor
xchg
jnp
leave
loope
pop
aaa
mov
inc
mov
and
inc
xor
mov
push
inc
mov
add
inc
pop
lods
arpl
mov
mov
popf
inc
jmp
xchg
cmp
insl
outsb
iret
addr16
push
aam
inc
dec
sub
xor
call
mov
pop
xchg
push
sbb
sub
leave
sub
sub
scas
adc
clc
clc
cmpsl
adc
push
sbb
cmpsb
sbb
pop
pop
dec
xchg
add
mov
add
lods
xchg
popf
jne
push
pop
sti
enter
ret
inc
sub
jnp
and
popa
sub
rep
xor
sbb
lods
xchg
pop
sub
test
aad
data16
mov
repnz
xchg
and
jmpw
pop
dec
xchg
or
out
enter
add
jb
test
cmp
cs
pop
xchg
mov
mov
repz
cmpsl
cmc
and
add
jb
xlat
insl
sbb
xlat
rcrb
lds
jmp
aam
std
mov
push
ss
sbb
xchg
add
shrl
jle
aas
push
shll
aad
enter
xchg
sub
lahf
jecxz
add
bound
push
paddw
in
dec
or
jge
lods
or
mov
inc
mov
jl
cmp
mov
bound
rcr
dec
xor
adc
pop
sub
mov
lret
shll
shl
pop
mov
mov
add
cmc
stos
das
cmpsl
and
cmp
mov
inc
jg
sbb
adc
pop
fsubr
fidivs
add
loopne
daa
push
les
adc
mov
mov
psrlq
enter
adc
fbstp
jp
cmp
daa
lds
cmp
jbe
sub
jnp
lods
stos
out
iret
xor
enter
ret
xor
adc
scas
push
jae
lret
fisubrs
push
mov
cmp
andb
mov
and
in
fwait
mov
pusha
pop
push
int
and
test
icebp
hlt
mov
inc
push
cld
fcom
cmpsb
adc
push
jno
out
insb
jg
jmp
cmp
test
movsb
sbb
fbld
inc
mov
push
jmp
jb
shlb
and
stc
mov
int3
ds
fistpl
sti
or
test
pop
clc
stos
sbb
or
jmp
inc
sbb
mov
clc
mov
mov
test
jl
jmp
and
into
cmp
cmp
into
push
xor
xor
dec
cmc
push
lcall
push
hlt
outsb
inc
dec
jp
sbb
leave
add
loopne
cmp
cmp
jbe
pop
mov
ss
mov
pop
push
sbb
xor
or
ja
pushf
push
pop
xlat
xchg
stc
int3
sarb
inc
mov
and
mov
sub
and
adc
ja
mov
sub
lret
outsl
aam
int3
sub
aaa
int
outsl
sub
je
sub
pop
xor
and
dec
mov
jp,pn
ficoms
insb
leave
xchg
push
and
movsb
fistpl
pop
ds
xchg
es
add
adcl
push
dec
lods
andb
imul
sub
xor
imul
out
xor
mov
cmp
pushl
rcrb
lock
and
jbe
out
hlt
clc
aas
pop
lock
cmp
loope
mov
pop
inc
and
adc
cmp
mov
fidivrl
mov
mov
arpl
ds
pop
dec
adc
aas
and
cmc
or
dec
shll
adc
push
mov
cltd
push
mov
jns
cs
inc
add
xchg
aaa
sahf
dec
fdivrs
mov
insl
jecxz
sub
pop
or
jb
pop
movsb
pop
pop
in
jecxz
rcll
jo
fdivrl
clc
jne
xchg
push
mov
add
jae
mov
andl
lret
iret
mov
stc
fwait
mov
icebp
pop
sbb
or
xchg
in
aaa
repnz
adc
bound
testb
js
jle
test
icebp
sti
add
and
loopne
fcom
jecxz
sbb
pusha
pop
mov
bound
sbb
repz
mov
mov
rol
andb
and
jge
fistpll
adc
push
daa
push
jge
cltd
jecxz
or
scas
dec
xchg
ret
lods
mov
filds
cwtl
xchg
cmpsb
cs
call
fildl
dec
fists
lcall
out
jb
mov
stc
das
decb
int
sub
mov
lret
test
fildl
xchg
pop
lods
out
cmp
pop
jae
pop
cmp
cli
scas
push
rcll
std
roll
lock
mov
mov
pop
sbb
ja
nop
gs
push
arpl
js
test
mov
iret
push
add
mov
sub
test
shrb
fbstp
mov
lock
push
pop
pushl
sbb
scas
xchg
lcall
test
je
cmpsb
push
mov
mov
sub
rcl
arpl
outsb
sbb
dec
push
push
imul
clc
outsb
inc
push
mov
jl
andb
hlt
std
or
cmpsb
pop
outsl
jge
inc
test
inc
lret
mov
jne
push
mov
inc
fisttpll
dec
out
xchg
clc
mov
xor
sti
cli
int
mov
push
shl
push
mov
push
cwtl
stos
sub
mov
push
test
push
mov
xor
ljmp
sub
sbb
ret
int
popa
pop
jb
xchg
mov
xor
ljmp
shlb
movsl
aaa
jns
ljmp
push
dec
xlat
int
push
mov
scas
les
jns
je
clc
movsb
stc
je
bound
mov
add
sti
sbb
fs
mov
push
jecxz
cli
mov
ds
xchg
push
repz
inc
jns
cmpsl
xor
rcrl
ret
loopne
mov
mov
out
repz
das
jg
jmp
inc
jecxz
rcrl
xor
lds
je
f2xm1
aaa
fadds
les
insb
push
sub
stos
mov
cmc
jg
stos
fidivs
cmp
or
mov
lds
xor
pop
frstor
adc
xor
xor
xchg
aam
mov
push
int
cmp
dec
add
inc
bound
xor
mov
call
cmp
push
int
out
es
js
adc
fstpt
jmp
adc
stos
das
out
ja
loop
lods
jbe
and
mov
and
rclb
dec
sub
or
adc
xorl
int3
fnstsw
shl
mov
push
fdivl
xor
push
jne
insb
mov
in
dec
jne
mov
cmp
in
add
cld
insb
divb
fnsave
sbb
mull
repz
shrb
ss
sub
jp
cmpsl
and
inc
das
xor
mov
dec
pop
les
je
repnz
sarl
xor
push
cmpsb
sbb
jmp
mov
daa
cmp
sti
lret
adc
mov
test
ret
cmpsl
sbb
pop
jl
inc
inc
loope
movsl
pop
or
sbb
xchg
sbb
xchg
xor
repz
insl
mov
sarl
adc
inc
aaa
cmp
lods
lcall
push
sbb
out
aad
push
pushf
movsb
xor
add
adc
cld
add
fdivrp
sahf
notb
jae
pusha
inc
repnz
xchg
sub
jbe
dec
pusha
iret
lds
addr16
dec
dec
fcompl
shrl
sub
and
je
adcb
mov
push
call
aam
pop
pop
mov
add
adc
pop
pop
pop
arpl
jo
sub
push
adc
outsl
pop
sub
hlt
xchg
xchg
int
mov
pop
cmpsb
sbb
in
out
movsl
popa
ret
or
and
inc
nopl
cwtl
orl
xor
push
ret
inc
popa
mov
dec
mov
sbb
bound
mov
stos
lret
sub
inc
cmpsl
loope
jno
outsl
jo
in
push
cld
cmp
adc
add
sub
sub
sbb
out
sbb
jo
cmp
icebp
repnz
jne
jmp
jnp
repnz
dec
popa
add
into
cmc
cmp
lahf
pop
or
mov
or
out
dec
aad
movsb
cmpsb
cmpsl
or
clc
or
mov
and
repz
cmp
popa
mov
add
sahf
aad
mov
lods
dec
jecxz
int3
sub
dec
dec
mov
cmp
test
xchg
out
ss
push
cmp
pop
aad
out
stos
adc
fs
or
insb
dec
mov
les
dec
sbb
push
pop
dec
mov
sub
into
ja
out
cmp
xor
fdivrs
mov
dec
fbld
mov
outsb
testb
loop
fwait
pop
out
pop
inc
fwait
or
ljmp
adc
sbb
fs
xor
xor
aas
inc
hlt
inc
pop
jl
popa
push
cwtl
xchg
clc
mov
inc
jbe
pop
inc
mov
lret
outsl
fcompl
out
outsl
cs
push
sti
in
repz
mov
out
test
fiadds
div
and
xor
cmp
xor
les
pop
push
mov
hlt
xchg
jg
mov
inc
and
sar
jl
test
push
and
mov
ret
ds
imul
mov
mov
sub
bound
cwtl
test
fcmovb
or
sub
movsb
and
sbb
cmpsb
out
xor
inc
out
or
inc
dec
dec
addr16
mov
lods
lahf
rorl
popa
and
ja
in
enter
shlb
mov
adc
mov
add
cmp
jae
fcoms
inc
mov
cmc
dec
cmp
add
mov
jno
into
cmc
bound
stos
mov
push
fldt
out
addr16
insl
stc
mov
xchg
add
push
push
xor
sub
lcall
ja
dec
sbb
decl
sub
mov
inc
and
add
arpl
mov
or
stos
push
jle
call
and
lret
add
scas
sbb
cmc
jg
ja
int
pop
push
mov
aas
repz
mov
cli
and
push
adc
mov
loop
in
dec
jecxz
push
dec
sbb
add
pop
inc
les
jecxz
jmp
and
xchg
mov
mov
adc
jns
xchg
xor
xor
in
mov
adc
xchg
xor
leave
lahf
fs
pop
sub
rclb
or
dec
or
lods
mov
iret
sarb
stos
push
sub
orl
clc
jge
mov
push
divl
push
js
cmp
push
test
xchg
out
movsl
shll
test
fisubs
scas
mov
pop
mov
stc
lods
xor
jns
or
jge
cld
push
fldenv
popf
popf
inc
popf
mov
movsb
sarb
pop
mov
push
mov
add
adc
out
mov
add
ret
sub
sahf
dec
shlb
shrb
xor
mov
out
mov
rcrb
or
inc
xchg
cmp
jle
and
mov
push
and
scas
xor
clc
mov
add
and
jp
outsb
jo
mov
lds
jl
data16
dec
mov
sub
xchg
cmpsl
xor
insb
push
sub
xor
jp
gs
mov
in
sub
dec
xor
aas
mov
lea
xorb
xor
fistps
xabort
roll
adc
push
inc
inc
int
xchg
dec
and
rclb
out
out
adc
shufps
or
pop
jae
clc
shll
mov
cmp
xor
and
mov
pop
cli
push
inc
or
mov
shrl
jp
std
daa
mov
out
jo,pt
add
xlat
ds
push
sbb
xchg
inc
sar
xchg
orb
aas
movsl
adc
add
insl
stos
stos
push
sahf
xchg
leave
pop
loop
push
jo
adc
cmp
sbbl
div
mov
es
ljmp
mov
daa
std
sub
push
pop
sub
scas
pop
add
ljmp
cmp
leave
ss
dec
filds
mov
and
sbb
mull
xor
sub
or
mov
in
xor
push
add
mov
andb
jp
imul
adc
pop
ja
xor
cmp
dec
mov
movsl
sbbb
or
pop
push
sbb
adc
insb
jns
movsb
aam
jno
pop
inc
mov
cmp
fs
pop
sub
pushf
sub
subl
mov
inc
lods
sbb
fbld
push
sbb
cmp
inc
mov
loope
ficomps
dec
cld
cmpsb
dec
std
mov
int3
outsl
pop
test
or
hlt
mov
clc
pop
lcall
jp
xor
xchg
adc
add
daa
scas
fmul
pop
sbb
mov
pop
and
inc
or
jecxz
xor
test
fistpll
imul
bsr
sbb
add
aaa
pop
mov
aam
inc
pop
jnp
in
jae
dec
cmpsb
inc
loope
scas
jbe
push
mov
xchg
pusha
jp
movsb
adcb
or
pop
mov
sbb
mov
jp
popa
dec
andl
sub
mov
adc
loopne
imul
mov
shr
mov
add
mov
add
rcll
movlhps
jecxz
dec
adc
jmp
jmp
je
push
sub
push
fnsave
out
sbbb
cmp
mov
enter
out
jle
mov
sub
sub
xchg
in
stc
sbb
pop
faddp
push
mov
mov
dec
mov
inc
add
inc
jmp
popa
cmpsl
xchg
loopne
fs
xlat
insl
sbb
aam
in
mov
mov
or
xchg
push
bound
push
iret
xor
inc
or
bound
cmpsl
insl
cli
fcoml
adc
cli
pop
cltd
imul
out
and
cwtl
pop
push
sub
mov
jne
fcomps
loope
xor
loopne
pop
jnp
scas
sbb
insl
adc
mov
fistps
xchg
xchg
add
outsb
push
daa
xchg
lods
fisttpl
ret
mov
jne
jg
adc
pop
adc
lcall
or
clc
daa
enter
sbb
push
cli
adc
int
push
fstpl
sahf
lods
push
insb
xor
xchg
push
movsb
push
cld
in
pop
jo
sbb
xor
push
dec
out
sub
push
mov
imul
jns
adc
insb
enter
mov
pop
push
aam
movsb
out
lret
push
mov
dec
in
mov
xor
test
cli
inc
lret
adc
iret
mov
shrl
mov
enter
mov
add
pop
test
xor
dec
andl
imul
xchg
jae
imul
dec
pop
mov
cs
add
inc
inc
add
adc
enter
hlt
outsl
out
pop
cltd
sub
popf
aas
ds
mov
dec
mov
mov
inc
popf
int3
cmpb
ljmp
lret
mov
sbb
test
pusha
movsb
xlat
call
cmp
add
sbb
pop
sar
xchg
xor
hlt
pop
jl
dec
sub
inc
add
loope
mov
imul
inc
loope
pop
addr16
adc
cwtl
aad
enter
jbe
hlt
aam
mov
outsl
enter
stc
fbld
pop
std
mov
repnz
pop
cmp
and
mov
mov
lret
push
push
adc
xchg
add
xchg
mov
dec
clc
inc
pop
jmp
inc
in
xor
enter
hlt
xor
pop
mov
xor
cmp
insb
adc
adc
inc
ds
testl
sub
xchg
jmp
or
insb
push
lret
ds
jecxz
mov
imul
pop
fimuls
sub
xchg
fldpi
dec
shlb
sub
scas
roll
mov
sub
cmp
inc
xchg
movsb
xor
inc
rorb
xchg
lods
inc
mov
push
out
out
ss
add
add
rclb
add
dec
jle
mov
arpl
ret
add
mov
pop
mov
mov
push
or
in
fimull
shrb
push
jge
add
jecxz
das
rcll
add
mov
or
cmp
cmp
and
in
filds
out
xor
dec
divb
arpl
jmp
push
cs
inc
xchg
subl
loope
out
cs
cmpsb
jbe
scas
xchg
xlat
sub
push
lcall
or
pop
sbb
aaa
rcll
inc
fldenv
adc
push
pop
or
xchg
aad
jb
mov
mov
jo
ja
js
mov
pop
testl
jae
sbb
insl
aas
cli
xor
leave
or
call
sbb
mov
xor
dec
stos
mov
and
repz
fisubrs
inc
xor
arpl
push
call
or
sub
arpl
cmp
lea
pop
cmp
andl
push
mov
or
or
add
adc
and
insl
lock
test
packuswb
decl
sbbb
pop
and
in
mov
lcall
cmp
jmp
jp
addr16
jle
push
xor
jns
roll
arpl
in
inc
ja
push
sbb
aas
les
adc
jb
dec
stos
pop
test
xchg
fs
bound
cmpsb
push
fstpl
jns
inc
pop
test
push
cmpsl
lret
aam
dec
jns
and
mov
push
jle,pt
inc
pop
xchg
icebp
in
dec
xchg
adc
xchg
les
sub
in
sbb
sub
push
dec
jo
jne
or
mov
mov
icebp
inc
stos
divb
repnz
loop
xchg
jl
adc
sahf
sbb
pushf
movsb
pusha
stos
mov
cs
movsb
frstor
mov
pop
ficompl
movsl
loopne
sbb
mov
in
call
add
dec
fisttpll
frstor
mov
mov
pop
adc
xchg
and
sbb
mov
mov
sbb
pushf
xor
repz
dec
cmpsl
mov
jns
cmp
shrl
sti
mov
rcll
inc
cmp
or
adc
sub
pop
sbb
pushf
sbbl
mov
pop
pop
pop
or
adc
pop
add
ja
push
add
scas
sbb
pop
fcompl
add
test
lds
icebp
cmp
pop
ret
outsl
faddl
xchg
js
mov
les
movsl
std
jmp
pop
leave
pop
flds
subl
mov
out
or
mov
ret
aad
icebp
lret
push
mov
cmpsl
cld
rorl
mov
enter
pushf
mov
pop
pop
shll
js
jmp
cmp
fwait
jle
mov
sub
gs
xchg
jb
cwtl
sbb
pusha
repnz
push
sahf
pop
arpl
mov
cld
jae
push
stc
arpl
dec
mov
rclb
cld
adc
cs
push
cmp
stos
xchg
out
push
add
cmc
inc
stos
das
push
push
shll
cmc
sbb
push
in
fldenv
jge
call
int3
popa
add
jmp
or
popf
sub
sbb
push
cmp
rorl
push
add
jbe
mov
xor
cmp
cmpsl
mov
mov
icebp
lahf
xchg
ret
lret
sbb
pop
and
jo
jmp
fistps
sub
xor
sbb
lcall
xor
pop
cmc
pusha
mov
xor
sub
xor
divb
or
push
or
sub
sbb
xor
mov
sarl
cmp
hlt
xor
ret
xor
push
fiaddl
push
daa
mov
xchg
xchg
sub
sti
and
jbe
sub
in
pop
mov
scas
test
je
push
aam
jae
push
rclb
xor
xchg
subb
aam
nop
mov
stos
scas
test
jno
imul
jnp
pusha
pushl
fidivrl
out
mov
xchg
add
cld
push
into
aaa
shr
sbb
xchg
mov
jmp
in
lret
or
pop
jo
lahf
fcoml
jbe
mov
arpl
out
icebp
cmp
adc
pushf
cmpsb
push
push
jl
xchg
rclb
loope
js
jns
mov
call
inc
dec
fisttps
pop
shll
inc
dec
nop
sbbl
push
ja
lock
in
adc
push
add
cmp
negb
add
adc
mov
cwtl
dec
filds
or
jg
shll
add
stc
xchg
lods
xor
xchg
cltd
lock
push
clc
mov
daa
out
stc
lcall
mov
insl
add
push
repz
push
fucom
inc
pop
inc
data16
loope
in
in
decl
jle
inc
push
test
inc
mov
ror
imul
fcoms
ljmp
xchg
arpl
pusha
pop
in
js
in
mov
dec
jne
in
adc
mov
loopne
jne
ja
movsb
fstp
je
mov
stos
jl
mov
es
mov
filds
add
mov
sbbl
sbb
and
out
sub
xor
xor
cltd
pop
js
or
dec
add
add
push
sbb
cmp
test
sbbl
mov
pop
hlt
sub
ds
jecxz
xchg
out
push
adc
jmp
sub
mov
int
les
mov
ds
cli
loope
int
pop
adc
clc
xchg
rcrb
hlt
frstor
sbb
je
adc
and
es
pop
les
popa
mov
dec
sahf
mov
add
pushl
fildll
ds
xor
push
add
call
pushf
xchg
lret
fcom
addb
push
dec
xchg
inc
rol
fnsave
mov
jo
mov
mov
inc
das
dec
rol
icebp
cltd
mov
imul
adc
mov
stc
mov
dec
repnz
or
sbb
sub
mov
out
xchg
mov
adc
int
xlat
push
pop
fistps
dec
loopne
push
push
xlat
loope
xchg
cmp
outsb
or
jle
adc
and
add
outsb
mov
inc
cmp
sahf
ljmp
push
mov
jmp
pop
pop
mov
pop
inc
in
je
sub
sbb
enter
mov
out
jb
adc
addr16
mov
inc
std
mov
loope
add
pop
push
popa
mov
xchg
es
dec
mov
in
std
lret
scas
enter
push
sub
adc
xchg
cmp
jno
pop
and
xchg
pop
fs
sub
fwait
mov
dec
push
ret
sbb
push
enter
inc
and
xor
scas
int
pmulhw
push
mov
aam
add
mov
mov
xlat
jle
jl
xor
cmpsb
icebp
aad
mov
shl
xchg
xchg
inc
push
jne
pop
shlb
je
mov
push
xchg
adc
xchg
dec
mov
xchg
add
add
dec
nop
fsts
inc
cli
dec
aad
and
jge
imul
dec
out
inc
in
or
roll
cltd
mov
std
and
aad
loopne
insb
gs
in
jbe
xchg
adc
fcmovnu
inc
aas
insb
fwait
jl
stos
xchg
sub
add
test
jns
cmp
pop
repnz
popa
cli
popf
push
movsl
cltd
dec
or
loope
or
pop
jns
jl
adc
xlat
push
mov
xchg
icebp
xor
dec
and
mov
gs
jg
in
xchg
bndldx
int
xchg
mov
mov
arpl
push
and
sub
cmpsb
adc
pop
cmp
xchg
lods
add
testb
loope
std
inc
mov
data16
jg
cmp
cmp
xlat
pop
mov
push
ss
pop
outsl
addl
jmp
test
in
xchg
ljmp
loopne
sarb
enter
cmpsl
aas
sbb
sub
jbe
das
mov
test
sbb
push
adc
lods
mov
pop
gs
iret
repnz
xchg
jecxz
add
inc
lock
add
adc
adc
movsl
mov
stos
loop
sub
inc
and
ja
mov
push
insl
cmp
dec
daa
inc
mov
dec
daa
mov
add
push
sbb
xor
xor
movsl
jmp
jmp
push
pop
gs
xor
cmp
push
cli
xchg
pop
pop
in
ficompl
or
popf
cmp
sti
or
test
out
jle
enter
movsl
insb
arpl
imul
ret
xlat
or
cmpsl
xchg
aad
mov
jle
pop
inc
sti
pop
mov
lret
test
les
rclb
xlat
mov
fadds
int
dec
in
nop
inc
std
js
loope
adc
je
int
add
pop
fdivp
test
adc
cmp
mov
ja
dec
dec
dec
xchg
jbe
fs
dec
shlb
xchg
xlat
fstpl
add
pop
andl
ss
fidivrs
sub
dec
mov
imulb
jo
mov
cmp
add
jbe
push
lds
dec
and
fs
loope
add
cmpb
cs
xchg
js
inc
push
fs
adc
fdivs
mov
loop
shll
add
push
jp
dec
sub
cwtl
lock
fs
shlb
test
mov
adc
mov
ja
pop
jns
in
cwtl
ds
xor
shll
dec
jae
inc
cmp
ret
jb
out
mull
mov
lret
jns
movsl
mov
dec
push
jns
dec
int3
sub
jno
adcl
in
sub
aad
lcall
jb
sub
mov
xchg
roll
xor
push
in
pop
adc
loopne
cli
cltd
scas
out
bswap
out
in
outsb
outsl
mov
sub
adc
sub
fldcw
adc
jno
ret
in
pmaxub
mov
add
dec
lods
nop
ret
inc
jmp
adc
jb
test
in
and
je
mov
jno
pop
inc
and
dec
das
sbb
add
xor
adc
movsl
cmpsb
add
pop
inc
mov
cli
ret
push
mov
movsl
int3
outsl
in
cltd
aad
cli
sbb
mov
mov
insl
and
pop
fiadds
lods
movsl
je
inc
gs
lock
mov
nop
fidivrl
rorb
add
inc
dec
pop
aad
mov
mov
ds
loopne
addr16
and
sbb
into
daa
dec
stos
adc
sahf
js
cmpsb
in
or
stos
inc
and
leave
dec
inc
cmpsb
inc
js
test
mov
xor
inc
jb
xor
xchg
push
in
xor
mov
dec
dec
cmpsb
xchg
mov
or
mov
psubusw
or
jae
jmp
adc
mov
dec
mov
ljmp
dec
adc
hlt
cld
mov
inc
ljmp
inc
cmpsb
and
dec
loope
xchg
cltd
mov
jmp
pushf
mov
out
add
adc
int3
outsl
test
cmpsb
sbb
loop
cltd
and
xor
dec
test
ret
into
fs
cltd
sbb
adc
mov
fcomps
clc
in
inc
or
in
inc
sbb
inc
les
fisubrs
sub
call
ja
lcall
into
dec
out
or
cmp
pop
xor
adc
or
xor
sahf
sub
or
push
pop
sub
jp
add
into
imul
fstpl
cmp
ret
adcb
stc
or
inc
adc
add
adc
or
sarb
outsl
loope
cli
movsl
push
out
and
rorl
es
push
repz
stos
scas
mov
and
cmp
jmp
rolb
cli
xor
add
jns
mov
loopne
lcall
out
dec
jae
mov
es
mov
repnz
in
cmp
fcomp
add
ret
sub
fnstsw
dec
xor
fstpt
jbe
jnp
sbb
adc
ljmp
dec
aam
jg
add
add
xor
ret
int3
fsts
shl
orl
lret
das
sbb
fwait
lahf
jo
inc
xchg
aad
daa
mov
xor
cmp
cmp
out
push
xchg
pop
mov
or
je
lods
jle
std
daa
mov
cli
out
fiadds
pop
jbe
and
jae
test
xchg
push
jecxz
repnz
cmp
lea
das
push
add
mov
push
pop
dec
mov
pop
clc
js
xchg
sub
add
dec
push
cvtdq2ps
loop
leave
and
add
rol
sub
push
cmp
push
cmp
aaa
jns
cmp
test
imul
dec
xchg
data16
xchg
and
iret
daa
jae
iret
xchg
dec
sbb
faddl
arpl
imul
inc
stc
ja
fdivrl
mov
cmc
inc
fdiv
mov
push
mov
das
ret
pop
push
inc
and
pusha
adc
xchg
shlb
xor
add
dec
inc
out
add
inc
lock
in
adc
jae
or
cmc
adc
out
rorl
jnp
cmp
das
ljmp
loope
sti
test
mov
xchg
ljmp
rclb
pop
push
jp
adc
aas
adc
pop
xchg
cmp
fistps
xor
popf
fisubrl
scas
inc
xor
cmp
jp
inc
aad
push
sub
mov
mov
je
mov
sbb
push
sub
repz
jns
push
jne
jnp
shrl
add
cmp
mov
and
mov
mov
jle
xlat
cwtl
jo
ret
adc
je
loopne
lcall
jge
dec
mov
leave
mov
cwtl
fimuls
mov
mov
pusha
cmpsl
adc
imul
jo
sbb
lret
and
mov
dec
out
sub
sbb
pop
xlat
test
xor
push
out
lds
lret
cltd
inc
fcomi
out
sarb
lcall
insb
jmp
jmp
jbe
sub
out
mov
mov
iret
loope
mov
shll
loope
mov
and
pop
inc
mov
sub
dec
inc
adc
mov
mov
jnp
dec
mov
or
inc
imul
mov
ljmp
in
stc
adc
push
jg
jbe
aaa
dec
mov
test
fadds
xor
cmp
mov
mov
inc
enter
push
ret
dec
hlt
push
or
mov
cmp
push
mov
out
cmp
call
pop
cmp
into
cmp
int3
das
fsub
int3
jnp
push
pop
mov
push
movsl
pop
stos
mov
sbb
push
cmpsb
ljmp
cmpsl
lret
mov
pop
call
dec
data16
mov
divb
sbb
jo
mov
push
repnz
jbe
add
and
imul
dec
mov
and
jns
stos
out
fwait
and
sbbl
jg
hlt
fnstenv
push
mov
bound
push
stos
ret
sbb
movsb
les
std
sti
in
hlt
sbb
fadds
cmp
jnp
aad
mov
mov
push
andb
jno
and
pop
add
notl
aad
add
call
and
jo
flds
or
sub
inc
adc
aam
pop
add
cltd
cmp
stos
andl
idivw
jbe
xchg
sub
cmp
adc
and
jnp
add
xchg
int
int
or
adcl
lahf
mov
hlt
sahf
or
cmp
add
push
xchg
shrb
js
pop
sar
sahf
xor
or
cmp
test
fsubl
pop
xchg
ret
pop
cmpsl
push
loop
popa
inc
mov
and
cwtl
xlat
cld
lret
dec
sbb
add
je
and
push
push
lahf
jae
lret
mov
sarb
xor
jecxz
out
mov
cmp
pop
mov
icebp
in
cld
xchg
cmpsb
les
pop
cmc
mov
test
or
dec
mov
cmp
xor
aam
mov
lcall
add
add
sub
xchg
sbb
notb
jb
incl
repnz
sahf
hlt
lret
sub
inc
fcompl
and
cmp
add
inc
idiv
sub
mov
dec
pop
mov
addr16
jb
add
mov
sbb
flds
pushf
rclb
mov
push
cmp
ss
sub
mov
xlat
loop
and
adc
add
fdivrl
repz
mov
movsl
adc
xor
pop
push
and
inc
adc
int3
imul
sbb
sub
jb
cmpsb
adc
mov
out
add
xchg
mov
add
push
inc
stos
test
shll
jecxz
fisubrl
mov
sti
jb
loope
push
outsl
push
or
add
testl
pop
mov
lods
mov
imul
push
dec
movsl
mov
shll
popa
xchg
addr16
nop
xchg
or
pop
ja
xchg
ljmp
jb
cmp
xchg
fists
jbe
add
fidivrs
pop
jae
lret
dec
in
js
dec
mov
dec
xor
pop
into
daa
mov
add
pop
xor
scas
jecxz
andl
jnp
cmpb
adc
mov
sbb
inc
jno
or
es
inc
loopne
add
lcall
in
into
es
and
mov
cmp
pop
jae
mov
ljmp
mov
xor
pop
cmp
daa
add
inc
mov
push
arpl
jb
gs
leave
icebp
scas
ja
arpl
xchg
push
test
mov
jno
adc
je
add
jmp
cmp
cmc
ljmp
dec
add
cmc
mov
dec
jle
sbb
or
mov
dec
cmp
std
cmp
and
mov
jle
dec
shrl
in
inc
fwait
push
push
test
push
lcall
or
lds
and
xchg
frstor
daa
sbb
stos
xor
ss
imul
in
jg
cltd
inc
sbb
lods
popa
jo
push
scas
jnp
cmp
push
js
in
rcrb
add
sub
xor
inc
sub
aas
push
ja
dec
and
out
in
cld
jo
into
test
int3
loope
jnp
cs
lods
mov
add
lods
or
ficomps
jecxz
adc
lods
xchg
cmp
pop
lret
xchg
dec
xor
sbb
cltd
xchg
into
cmp
jnp
xchg
loope
repnz
inc
cmp
mov
dec
in
or
jo
aaa
addr16
mov
stos
jnp
pushf
lea
add
xchg
stos
push
outsb
jae
jmp
jmp
mov
inc
jne
mov
mov
adc
mov
rorb
mov
rcrl
xor
add
push
ret
clc
leave
mov
xchg
mov
icebp
cmpsl
pop
pop
aad
insb
inc
lret
fldt
pop
int
xor
cmp
mov
push
out
je
sub
rcrl
adc
and
movsl
fwait
push
stos
aam
int
pop
jmp
and
mov
pop
or
int3
mov
fdivs
fildl
xchg
pop
jb
inc
arpl
cmp
fldcw
imul
aad
xchg
addr16
mov
mov
dec
push
mov
or
add
gs
mov
fidivrl
mov
es
jnp
in
mov
fimull
xor
lea
jo
shlb
pop
nop
dec
sbbb
pusha
sarb
cmpsb
gs
nop
add
mov
dec
push
lret
xor
data16
rolb
push
mov
mov
sbb
test
mov
and
sbb
cli
sbb
cmp
xor
push
leave
mov
js
add
push
test
gs
hlt
test
mov
cwtl
or
inc
cmpsb
mov
dec
into
sub
sbb
or
pop
xchg
jae
gs
aas
inc
add
stos
mov
fnstenv
xor
cmp
in
sti
cld
mov
stc
pushf
insb
xor
les
mov
rorl
pop
inc
xchg
into
mov
incb
or
lret
inc
stos
jbe
inc
mov
imul
add
xor
add
popa
push
sub
cmpsl
lret
aaa
loopne
xchg
in
sub
add
pop
mov
jnp
aad
jmp
dec
xchg
add
mov
insl
fstp
mov
sbb
mov
mov
outsb
push
xor
ret
incb
in
sbb
inc
mov
mov
clc
inc
push
mov
or
mov
jne
mov
xor
jns
inc
into
or
add
sub
xor
or
mov
mov
jle
andb
sbb
adc
jecxz
mov
aaa
hlt
pop
es
lea
xor
lret
xchg
pop
fbld
jle
xchg
outsl
cmp
movsb
and
fmul
aas
add
test
dec
adc
out
jb
aas
sub
aad
ljmp
cmc
fcmovbe
stos
mov
cltd
push
sub
fidivrs
fisttpll
sub
daa
dec
fcoml
cmp
pop
flds
add
or
inc
push
sub
jns
push
fidivrs
ljmp
xchg
das
jb
push
loopne
fst
stos
ret
dec
jecxz
test
lods
aam
or
ljmp
mov
xchg
je
or
inc
dec
inc
jno
push
push
sbb
xchg
add
sbb
jbe
jb
nop
pop
stos
sub
sbb
imul
lcall
testb
xchg
add
sahf
jo
subb
adc
xlat
jl
and
icebp
iret
dec
add
bound
movsb
mov
mov
push
shrl
sbbb
scas
scas
jae
push
mov
pop
sbb
adc
cli
cmpsb
pop
ljmp
mov
hlt
add
xor
lods
mov
jg
xchg
cmc
lods
add
sti
les
push
jno
push
mov
cwtl
mov
movsl
mov
jle
push
das
clc
fwait
pop
mov
pop
dec
or
sub
mov
stos
adc
add
cwtl
testb
cs
sbb
hlt
call
mov
mov
xchg
or
adc
pop
imul
into
sub
sub
dec
inc
adc
or
sbb
pop
lahf
adc
dec
cwtl
rolb
mov
clc
pop
mov
pop
pushf
mov
shlb
xor
jp
mov
xchg
call
stos
cmpsl
lods
sbb
xchg
stc
jo
adc
pop
mov
popa
in
push
mov
or
lret
push
pop
sahf
in
adc
adc
repnz
fsubs
cmc
mov
mov
mov
jne
jecxz
xchg
cs
push
xchg
pusha
adc
or
adc
push
cmp
inc
dec
mov
or
sbb
inc
mov
lret
in
inc
ficoms
out
out
xchg
rol
mov
scas
or
into
movsl
fdivrp
push
shlb
adc
fidivs
cmp
adc
les
iret
adc
stos
out
xorb
push
mov
loop
enter
add
push
mov
je
dec
fistl
sub
cwtl
sbb
les
std
xchg
aaa
jae
fldcw
adc
imul
loop
outsb
sub
ds
inc
loope
jb
stc
dec
cmpsb
sub
mov
adc
lea
cmp
into
ret
mov
mov
mov
leave
and
mov
pop
stc
das
xchg
and
sbb
and
loope
sub
int
xor
cmp
decl
popf
icebp
pop
lea
call
and
mov
mov
sbb
cbtw
cmc
mov
cwtl
sbb
push
int3
scas
pop
in
lds
aas
into
mov
shll
jae
push
push
jp
lock
push
xchg
imul
sbb
sbb
arpl
repnz
adc
ret
mov
fnstcw
mov
imul
mov
in
stos
mov
or
insb
ret
mov
mov
inc
arpl
xchg
jns
shll
cltd
mov
popf
gs
outsl
sahf
cwtl
insb
addb
pop
pop
pop
sahf
imul
or
or
inc
adc
mov
testl
sbb
pop
out
mov
sub
and
js
mov
pop
into
ret
mov
jbe
pop
push
stos
push
repnz
ret
popf
fiaddl
popl
pop
xchg
mov
icebp
sbb
adc
mov
rcl
mov
xchg
jl
xor
cmpl
pop
cld
ds
ljmp
in
or
test
mov
jmp
sub
outsb
cmp
add
xchg
js
jo
addr16
jg
cmpsl
pop
push
sub
rorb
cmp
stos
test
pop
into
add
insb
jp
or
cmp
and
sub
rorb
or
push
cmpb
lret
scas
loop
mov
popf
dec
xor
jp
jmp
into
stos
inc
hlt
das
in
add
mov
mov
lds
test
sbb
adcl
rclb
cld
les
xchg
xchg
dec
xchg
cmp
dec
mov
popf
mov
cmp
jge
hlt
lret
aaa
stos
mov
xor
xlat
leave
cmp
sahf
in
dec
push
cltd
das
jle
in
push
jmp
bound
in
jns
les
lcall
xor
faddp
and
add
pop
adc
push
xor
lcall
lods
push
mov
out
inc
push
inc
ret
iret
dec
dec
pop
loop
aaa
push
mov
mov
stos
sbb
ret
pusha
inc
stos
idivl
add
fidivs
or
ljmp
ljmp
inc
push
ret
pop
mov
shrl
int
mov
mov
cmp
jle
mov
and
sbb
xor
int
lods
and
dec
jl
mov
sub
movsl
push
xchg
dec
xchg
insb
sbb
icebp
cmpsb
jg
ret
xor
mov
adc
and
jo
loopne
mov
cltd
nop
xlat
divb
arpl
inc
fwait
push
jecxz
cli
push
rolb
iret
sub
add
ficompl
dec
xorb
xor
enter
mov
jle
add
inc
loope
jl
jbe
in
push
sbb
fisubl
mov
sahf
lea
cltd
push
inc
mov
cltd
fwait
and
push
in
aaa
mov
in
ret
fistps
and
aam
mov
mov
nop
add
in
xchg
add
insl
insb
inc
aaa
dec
inc
jle
inc
mov
nop
ss
mov
mov
push
mov
mov
add
push
jmp
sub
arpl
cmp
pop
xor
aas
lea
push
xor
rcr
inc
push
cmpl
adc
test
lea
lret
xchg
aaa
jnp
das
sub
xlat
mov
xchg
sbb
mov
sub
jge
int
pop
push
mov
ja
add
das
push
movsl
stos
and
in
arpl
popa
cmp
adc
adc
test
pop
sbb
mov
mov
inc
in
xchg
jle
push
mull
ret
and
js
push
ret
xchg
mov
cli
or
aad
ljmp
movsl
push
notl
shl
cmp
mov
test
dec
test
popa
outsl
ror
test
repz
cli
cmp
pushf
outsl
and
pop
jmp
cmpsl
xchg
loop
cmp
mov
leave
inc
sbb
add
clc
sub
inc
lret
movsb
call
mov
inc
daa
movsl
call
test
sbb
xchg
outsl
arpl
cs
xor
mov
sbb
out
mov
rorl
ficompl
mov
out
dec
cmpsl
aam
loope
or
cltd
cs
cld
push
pop
std
fldl
adc
fnstcw
xor
and
adc
xchg
xchg
sub
pop
mov
ffreep
stos
call
adc
xchg
mov
cmpsl
jg
add
sbb
ret
inc
into
test
push
xchg
jmp
imul
call
push
jmp
imull
cmp
mov
inc
sub
test
ds
insb
jg
stc
and
jle
jne
xor
xchg
mov
shl
sbb
imul
add
mov
test
and
das
or
aad
push
mov
hlt
aam
nop
jnp
gs
or
bound
xchg
xor
cwtl
jmp
int
push
push
sub
dec
test
adc
adc
das
pushf
adc
sarb
call
jo
mov
mov
lock
into
call
test
add
dec
inc
mov
in
imul
inc
fiadds
mov
lret
mov
sahf
push
gs
sub
push
and
incb
stc
mov
stos
fs
cmp
call
xchg
fistpll
sub
sti
out
adc
mov
pop
adc
daa
mov
addr16
sti
dec
cmpsl
repz
scas
je
xorb
andb
or
lods
pop
adc
popf
and
aas
imul
mov
jno
mov
adc
jle
jo
sti
inc
aas
notl
dec
mov
push
into
push
test
jmp
test
inc
and
sub
test
mov
mov
sub
mov
movsl
ds
cli
mov
push
call
aam
rcrb
pusha
dec
and
and
cltd
sbb
and
out
gs
pop
shrb
cmp
fadds
and
imul
test
scas
add
iret
inc
fwait
xchg
loop
xchg
xchg
lods
mov
pop
in
add
xchg
xor
push
push
repz
test
push
jle
sahf
iret
push
stc
add
enter
cmp
out
cltd
shlb
inc
insl
push
insb
adc
mov
add
add
mov
cli
jnp
dec
int
and
repz
mov
and
add
stc
icebp
push
or
fisubrl
lret
xor
push
fs
lahf
sbb
cmpsl
add
add
aad
jnp
cwtl
cmp
lods
inc
popl
fsubrl
or
pop
push
sbb
mov
movl
xchg
and
iret
leave
jb
add
add
adc
fbld
or
lock
jnp
or
and
iret
out
lods
adc
pop
sub
popa
sahf
push
enter
fstpt
shl
fildll
jmp
imul
xchg
inc
jno
xor
inc
sbb
dec
aaa
push
loop
lret
ret
pop
insb
add
sbb
xchg
shl
pushf
pusha
dec
pop
xlat
xor
jge
cmpsb
arpl
push
jecxz
arpl
push
ret
test
xchg
cmp
jne
mov
lds
cs
sub
out
pusha
xchg
or
adc
pushf
fs
and
push
fwait
cmp
int3
xor
jle
mov
adc
sub
movsb
stos
sbb
divl
and
xor
sbb
or
adc
adc
fs
movsl
and
add
mov
inc
dec
inc
or
lods
push
je
and
stos
jp
mov
mov
aad
or
shrb
sbb
inc
cmpsl
mov
xchg
imul
add
ds
xor
inc
mov
sbb
and
inc
das
adc
cmpsl
pop
lock
int
mov
jno
aas
std
add
movsl
mov
fucomi
ficoms
dec
adc
xchg
mov
sahf
jl
cld
xor
add
dec
dec
dec
icebp
jae
out
mov
push
scas
sbb
test
ret
sahf
lahf
outsl
jns
aas
lods
ret
sub
es
push
pop
lods
out
xchg
inc
push
pop
adc
iret
lahf
cmp
sub
cltd
mov
and
out
cmp
adc
out
outsb
mov
insl
leave
int
icebp
dec
xchg
in
nop
ret
in
and
mov
fimuls
or
cmp
push
in
fstpl
pop
lret
out
pop
adc
jb
push
add
rclb
dec
sbb
push
rclb
out
adc
daa
and
mov
loop
jnp
sbb
hlt
iret
cltd
sahf
je
mov
lods
in
xchg
jle
rcrb
icebp
pushf
inc
mov
xor
sbb
stos
das
aaa
fst
cmpsl
lock
call
push
mov
cmc
mov
mov
iret
loope
fildll
rcl
xor
add
and
lret
sbb
push
out
dec
icebp
jmp
add
xchg
movsl
or
sbb
out
js
pushf
stc
lcall
inc
aas
cwtl
push
sub
jns
pop
mov
push
mov
fnstsw
je
int3
out
iret
cli
ror
ljmp
fmull
aad
mov
cs
shll
out
mov
in
shl
pop
inc
pop
mov
mov
iret
cmpsl
call
test
dec
or
fnstenv
add
inc
ret
scas
xchg
rcll
or
cmp
pop
andl
and
and
mov
jmp
mov
jno
sub
or
loop
push
and
push
sub
test
inc
fadd
outsl
bound
push
andb
xchg
pop
pop
int3
add
xchg
es
dec
mov
pop
sarl
call
leave
ljmp
mov
sub
ffree
or
addr16
xchg
into
inc
repnz
call
les
sub
push
and
sub
xor
fstps
and
jle
mov
xchg
loopne
popa
out
sarb
loope
or
mov
in
das
add
jmp
xchg
add
outsl
and
fstp
out
and
pop
shll
xor
lods
push
mov
mov
movsl
or
mov
arpl
xchg
mov
imul
xchg
mov
xlat
mov
lock
in
or
adc
pop
into
rorb
jg
je
nop
cmc
test
loop,pn
loop
dec
dec
xchg
sbb
mov
adc
iret
divb
xor
mov
cli
in
aad
inc
xchg
mov
icebp
lcall
dec
stc
and
sub
push
mov
mov
fwait
jno
fidivs
sub
cmp
inc
pop
outsl
arpl
dec
pop
scas
mov
mov
test
xchg
fisubrl
test
mov
sub
cltd
in
and
cltd
jecxz
fcmovnbe
jg
mov
add
mov
je
mov
fnstsw
or
gs
pushf
leave
xor
imul
dec
mov
stc
xchg
push
repnz
mov
dec
sub
inc
add
xchg
mov
xor
sbb
sbb
gs
lret
outsb
sbb
jbe
adc
cmc
pop
jl
adc
adc
push
mov
pop
cltd
mov
cmp
adcl
push
das
push
jg
fwait
sbb
movsl
pushf
inc
imul
sub
gs
gs
sbb
dec
mov
out
sub
adc
push
sahf
and
sub
scas
cltd
sbb
call
push
int
into
xlat
loop
mov
mov
or
out
sbb
mov
mov
fsub
push
mov
mov
sahf
and
inc
or
imul
outsb
add
xor
ret
sti
xor
movsl
sbb
stos
xor
mov
lods
stc
pop
daa
call
inc
push
and
std
test
cmpsb
lock
fldt
mov
add
mov
cld
mov
shlb
ret
loopne
outsb
ret
das
dec
cmp
and
jmp
ljmp
ljmp
insb
mov
jmp
jge
sarb
inc
adc
mov
sub
in
pop
int
lcall
addr16
adc
test
repnz
add
adc
adc
cmp
pop
mov
fists
and
adc
add
push
stos
cs
inc
pusha
sbb
xchg
mov
je
mov
add
in
and
push
imul
push
mov
push
dec
sub
incl
and
pop
clc
or
add
outsw
pop
stc
clc
fs
ss
sub
add
icebp
loop
loopne
js
adc
mov
out
mov
mov
sub
dec
into
out
idivl
inc
pushf
sbb
out
ds
add
dec
xchg
cmp
pop
jecxz
cwtl
test
lock
cmp
inc
aaa
ffree
cmpsb
xor
mov
enter
es
fildll
mov
pop
push
dec
or
out
cmp
mov
sarb
popf
mov
test
adc
popa
xchg
in
fadd
mov
into
lea
jmp
jmp
in
or
xor
leave
pop
mov
jecxz
sti
push
jne
dec
into
push
test
cmp
imul
sub
loopne
and
cmc
lret
mov
scas
sbb
push
test
xchg
jnp
sub
pop
inc
dec
js
or
push
and
test
and
lods
lods
xor
rorl
mov
into
aam
pop
xor
jo
xchg
and
add
push
fidivl
jmp
or
icebp
add
xchg
movsl
cltd
cli
push
test
xchg
cmc
mov
outsb
mov
fsubr
mov
nop
int
fistl
loopne
xchg
mov
stos
mov
dec
jo
daa
ljmp
inc
arpl
jbe
push
mov
pop
push
cwtl
push
xlat
lret
ljmp
xchg
insl
mov
hlt
mov
fisubl
rcrb
adc
jbe
or
jo
jmp
sbb
dec
or
pop
icebp
jae
lret
clc
xor
loop
mov
in
pop
dec
sub
stc
pop
mov
xor
ds
aaa
xor
push
jo
fdivr
xchg
enter
adc
pushf
pop
test
push
inc
sti
lds
sbb
jmp
xlat
dec
outsl
xor
jge
and
push
in
push
push
outsb
mov
xchg
jae
mov
jne
fsubrl
out
cltd
sahf
repz
cmp
aam
push
inc
pop
popa
inc
sbb
mov
xor
xorb
inc
xchg
pop
in
cltd
dec
jl
cmp
cltd
or
cmp
mov
jecxz
test
jp
outsb
testb
or
inc
aad
lea
xchg
or
es
and
pusha
stc
or
xor
cmpsl
sbb
loope
mov
imul
jae
arpl
cmp
fnsave
push
ja
out
fld
mov
push
adc
pop
stos
rorl
jns
ljmp
jbe
jg
jae
inc
int3
inc
inc
psrld
push
int3
inc
cmp
repnz
mov
int
cwtl
cmp
adc
mov
mov
sub
packsswb
mov
or
xchg
jg
das
popf
sub
pop
cmp
and
lret
lret
int
adc
cld
mov
loop
iret
push
push
and
lods
pusha
jecxz
jle
enter
push
stc
pop
imull
jnp
fcoms
dec
sub
leave
shrl
add
xchg
cmp
cmpl
dec
inc
pusha
cmp
mov
sbb
js
push
data16
mov
and
inc
adc
inc
lahf
jl
in
fbld
pop
test
decb
add
dec
adc
sbb
sbb
or
inc
cmpb
popf
in
cld
sbb
xor
adc
notl
fdivl
adc
and
mov
adc
inc
shl
insl
movsb
cld
or
fiadds
inc
loopne
jl
notb
pusha
inc
incb
jmp
or
rolb
xchg
stos
cmp
cmc
testl
add
dec
xor
jno
dec
sub
dec
push
xor
lock
pop
mov
jmp
jmp
add
dec
push
inc
addl
adc
mov
fwait
sub
outsb
and
cld
mov
in
das
xor
outsb
mov
addr16
addb
aaa
addr16
mov
daa
adc
rolb
mov
mov
inc
dec
test
lock
mov
std
inc
mov
les
push
push
lock
inc
ficoml
shl
mov
inc
mov
ret
cmp
les
jge
fidivl
call
sahf
pushf
xchg
sbb
fstps
sub
xor
or
inc
or
jns
mov
xchg
adc
mov
lods
push
mov
adcb
in
js
cld
int
inc
cmp
pop
in
push
inc
dec
and
pop
inc
call
fistpl
xor
add
das
test
mov
dec
pop
adc
and
sub
hlt
adc
pushf
repnz
mov
fs
int
xchg
insb
cwtl
mov
add
ss
nop
pushf
ret
lods
push
movsl
insl
or
mov
sub
ret
mov
xchg
add
lds
jl
data16
scas
or
scas
outsb
out
lock
test
sub
mov
int
test
fists
sub
or
dec
inc
mov
in
ja
xor
lock
add
mov
cmpsl
ljmp
push
in
in
cwtl
push
xor
std
dec
addr16
xchg
or
push
repnz
jge
std
pop
mov
xchg
dec
mov
inc
fcoms
mov
pusha
inc
dec
movsl
pusha
xlat
fwait
orl
addr16
xlat
and
pop
test
pushf
sbb
jle
popa
into
jge
lds
add
movsb
cltd
xchg
test
mov
jnp
jmp
ret
stc
mov
sbb
sti
cmp
nop
pushf
stos
pop
push
jb
fildll
or
mov
pop
aas
clc
xchg
sbb
fucomip
das
lock
mov
pushf
push
daa
xchg
inc
sbb
push
jns
and
arpl
outsl
mov
int
out
mov
mov
mov
jp
or
jp
popa
fwait
ret
inc
loop
mov
imul
lcall
and
mov
dec
test
daa
test
add
movsl
push
popf
insl
or
pop
sbb
mov
dec
lds
add
cmp
aaa
jp
rcrb
push
lods
jge
inc
cmp
push
sbb
mov
imulb
js
mov
dec
push
rclb
xor
xchg
cmp
mov
out
out
jl
xchg
insl
loope
add
inc
lds
adcl
inc
or
xchg
sub
in
int
sbb
stos
xor
mov
mov
insl
mov
jbe
dec
pop
mov
mov
scas
rcrb
pop
stc
lret
dec
pop
mov
bound
xchg
dec
mov
fnstcw
nop
mov
and
into
int3
sarb
pop
jns
add
sub
loopne
aaa
lea
dec
in
test
jb
inc
arpl
cld
cmp
sarl
lcall
movsl
mov
xor
fldl
mov
add
test
pop
or
inc
mov
sub
push
xorb
arpl
sete
movl
arpl
sub
dec
sbb
sti
das
mov
daa
sub
pusha
cltd
jp
xchg
push
mov
shl
rorb
in
imul
jle
dec
xchg
fmull
and
addl
filds
sub
jns
fcmovnu
cs
loope
jb
push
nop
add
mov
inc
pop
mov
sbb
lods
shr
inc
xlat
or
sti
jp
add
push
cld
mov
push
cmp
pop
xchg
pop
pusha
inc
mov
sub
scas
cli
pop
loope
es
je
popf
cmp
mov
je
loope
push
dec
js
fnsave
pop
and
int
mov
stc
xchg
lcall
pop
or
mov
loop
jle
mov
sbb
or
push
iret
les
fwait
jbe
mov
sbb
daa
lods
sbb
sti
mov
shlb
mov
mov
imul
inc
cmp
jge
fstpl
push
icebp
or
push
inc
jmp
dec
jne
sbb
or
xor
adc
ds
and
mov
stos
and
fildl
dec
push
loopne
adcb
stos
fmuls
notl
int
mov
pop
push
pop
loope
mov
out
ret
and
pop
rolb
cmp
repz
xor
int3
adc
pop
aas
jno
idiv
das
int
stos
fwait
adc
cmp
orb
jbe
pop
lds
fwait
decl
mov
push
adc
jge
mov
bound
imul
sub
sbb
mov
mov
dec
xchg
scas
mov
gs
pushf
lods
xor
sub
cli
sbb
fisttps
ret
wbinvd
mov
mov
fisttpll
xchg
cmp
jecxz,pt
lahf
sarb
inc
js
leave
daa
mov
aas
mov
dec
cmp
aad
pushf
outsl
cmovno
cmp
jbe
add
add
clc
fistps
sbb
es
jg
pop
int3
lret
mov
inc
fisubrl
add
hlt
mov
inc
mov
cmp
lahf
pushf
hlt
int3
push
cmp
aas
cmp
cmp
mov
fs
or
movsb
in
pop
cltd
adc
xchg
or
mov
leave
mov
xor
push
inc
and
xchg
lds
stos
mov
xchg
ret
inc
out
cli
fnstenv
sbb
repnz
inc
mov
sbb
imul
add
lcall
ljmp
das
ljmp
repz
sub
mov
je
std
inc
lds
or
dec
inc
stos
push
jne
pop
sbb
pop
mov
or
in
add
pop
out
and
adc
les
xor
inc
xor
push
sub
adc
pop
mov
xor
push
sbbb
push
mov
cmp
xor
data16
or
fimuls
mov
mov
sub
rep
mov
outsb
pusha
pop
addr16
in
lods
or
dec
and
cmpsl
mov
cmc
loop
dec
xchg
inc
mov
xor
nop
add
testl
lahf
or
inc
insl
inc
mov
push
xchg
stos
mov
out
mov
xchg
hlt
mov
push
add
sub
xchg
mov
ret
in
iretw
insb
inc
dec
fdivs
ret
inc
dec
xchg
in
or
cld
inc
add
pop
lretw
inc
dec
es
call
insb
imul
push
adc
scas
pop
jo
push
lcall
add
cs
and
cmpsl
cmp
sbb
lock
call
add
ret
sbb
mov
or
or
enter
lea
push
int
sub
jmp
test
fldcw
fucomp
xchg
jno
mov
iret
shll
mov
out
test
xchg
fisttpl
cmp
jl,pn
movups
mov
jle
mov
loope
jb
daa
mov
push
xchg
mov
mov
insl
push
inc
jg
mov
ret
lea
pop
pop
adc
roll
inc
and
xchg
add
xchg
shrl
dec
sbb
ret
sbb
das
mull
cmc
fld
inc
imul
jae
lea
das
pop
in
mov
mov
cs
aaa
loopne
or
fsubs
pop
push
mov
inc
fldt
mov
fcomps
inc
das
leave
imul
mov
shll
mov
xchg
lds
dec
bound
daa
stc
mov
js
xchg
dec
push
int3
daa
idivb
pop
in
add
movsl
adc
addr16
fisttps
jge
loopne
mov
pop
mov
cs
xchg
jne
mov
adc
lret
pop
fs
popa
mov
xchg
dec
pop
mov
mov
ja
and
enter
repz
mov
pusha
xchg
hlt
xchg
insl
mov
addr16
sbb
inc
jbe
movsl
and
jp
sbb
adc
std
push
cmc
insb
daa
nop
mov
lcall
push
andb
mov
movsb
rcrl
mov
fwait
xlat
bound
mov
addr16
fs
mov
loope
lods
sahf
xchg
in
adc
sbb
scas
mov
cmp
jp
stc
int3
xchg
nop
pop
and
dec
sub
test
mov
xlat
and
mov
inc
cmp
mov
pop
mov
mov
sub
jmp
fnstsw
es
ljmp
fists
xor
fdiv
xchg
fs
pop
inc
cpuid
cmp
mov
and
or
mov
cltd
or
aad
mov
iret
xor
aas
push
inc
inc
sub
sub
jmp
stos
cs
ljmp
pop
push
adc
add
mov
add
sub
add
gs
repz
add
xchg
pop
add
lods
enter
sbb
sbb
call
sub
andb
ds
pop
jge
lret
add
adc
popf
jns
mov
mov
test
add
sub
imul
sti
scas
adc
mov
inc
pop
push
adc
pop
jl
ja
xor
adc
sbb
les
jnp
inc
outsl
mov
inc
ret
pop
rclb
outsb
dec
nop
movsb
fnstsw
data16
pushf
pop
pop
sarb
fiaddl
adc
hlt
mov
jmp
pop
lret
imul
or
into
mov
mov
pop
cld
call
lods
cmp
fidivrl
int
imul
lahf
loopne
test
sub
push
sub
adc
scas
iret
lods
push
inc
xchg
sub
loop
and
mov
rclb
mov
cmc
add
pop
push
push
es
aam
sbb
mov
jo
imul
outsl
fs
sub
dec
and
bnd
lcall
lods
push
mov
icebp
insl
sti
xchg
clc
fiadds
mov
or
and
pop
inc
xchg
xchg
div
push
xor
scas
fnstenv
or
dec
inc
les
pop
out
inc
clc
sbb
pop
and
sbb
and
or
inc
or
and
pop
dec
out
int
es
sahf
test
inc
push
and
jno
popa
lahf
andb
ds
in
js
jo
xor
pop
sub
lods
movsl
dec
pop
xchg
rol
xor
xor
dec
jb
pop
scas
pop
aad
jmp
test
insb
scas
insb
lods
sub
std
mov
test
pop
cwtl
jo
jge
or
lock
sub
insb
and
movsl
fsubs
pop
and
add
dec
in
fs
out
int
iret
xchg
push
movsl
movsb
cmp
jnp
adc
sbb
std
fildl
pop
imul
test
aad
movsb
repnz
jecxz
lcall
xchg
mov
icebp
hlt
pop
das
inc
cli
loop
loope
lret
iret
stos
cld
rcl
xchg
inc
mov
insl
adcl
out
cltd
adc
leave
or
push
mov
scas
icebp
mov
dec
inc
sbb
in
push
out
push
push
pop
dec
pusha
cwtl
movsl
into
cwtl
sub
nop
add
mov
mov
fmulp
mov
xchg
out
mov
cwtl
push
sarb
and
jb
roll
dec
mov
and
dec
jo
bound
in
enter
pop
sbb
mov
out
mov
ret
popf
mov
mov
inc
dec
cmp
add
icebp
test
lcall
iret
andl
xchg
mov
pusha
aam
cld
iret
adc
mov
test
push
push
adc
pop
pushf
cli
inc
adc
jno
sbb
jp
repz
ja
lcall
subb
pop
sbb
push
mov
mov
aad
popa
add
pusha
int
pop
mov
pop
lock
les
mov
mov
shl
out
movsl
int3
adc
cmp
cmp
fisubrs
add
dec
jnp
std
mov
js
add
loope
in
scas
cmpsb
push
jno
or
fnstsw
fnstsw
in
mov
rcrl
jecxz
ljmp
sub
fs
adc
inc
mov
jecxz
push
je
adc
mov
sub
xor
data16
dec
adc
jo
gs
sub
in
in
clc
xor
out
adc
ret
jmp
lods
sub
xlat
cwtl
add
xchg
jns
insl
dec
enter
loope
xchg
mov
mov
dec
mov
inc
roll
jg
add
add
push
adc
clc
mov
iret
add
cld
js
jge
mov
ret
movsl
or
in
js
inc
scas
mov
sbb
out
push
dec
imul
xchg
call
jo
dec
and
out
push
idivl
mov
cmp
xor
pop
cmp
and
leave
pushf
sbb
xor
adc
bound
out
mov
mov
and
testb
cltd
push
jns
lret
outsl
push
xorl
stos
sbb
test
push
push
sbb
ret
aaa
mov
push
aad
xchg
pusha
dec
inc
lahf
insl
gs
nop
dec
gs
fs
or
jne
call
xchg
sbb
outsl
and
dec
mov
sub
cmp
dec
mov
pop
sub
rcr
idiv
xchg
mov
pop
rcrl
and
push
cmp
mov
or
out
push
lret
rcrb
test
xchg
jg
inc
clc
and
sbb
mov
xchg
mov
imul
addb
insb
xchg
popf
flds
popa
pop
and
sbb
jle
add
and
and
mov
out
popa
lret
sub
andb
xor
or
loop
outsb
and
ja
cmp
mov
mov
cmp
lock
in
fcompl
stos
lds
je
push
cmp
stos
aam
jbe
pop
ficoms
push
insb
in
cmp
scas
ds
les
enter
xor
mov
cmp
movsl
xor
mov
jne
add
rcrl
sub
adc
xchg
mov
in
and
inc
std
mov
xchg
cli
mov
push
int3
popa
dec
arpl
pop
dec
jl
into
sub
add
cld
add
push
ja
pop
fcmovb
push
mov
xor
sub
push
xor
cmpsl
dec
outsb
sahf
jns
or
loope
dec
fsubr
cmp
inc
xchg
pop
inc
daa
add
mov
mov
xor
movsl
sti
or
dec
jne
sbb
mov
cs
arpl
pop
out
shlb
xor
clc
pop
or
pop
aaa
es
fcomps
loope
sbb
pop
cmp
out
dec
mov
mov
hlt
cmpsl
xchg
xor
aam
enter
addr16
sbb
jge
gs
mov
jns
xchg
mov
inc
dec
subb
cmpsl
pusha
rol
add
stc
sarb
bound
icebp
pop
cmp
sbb
mov
sub
lahf
or
pop
sbb
ret
dec
cli
es
jg
dec
sub
add
lret
push
or
nop
cmpsb
push
push
xchg
imul
add
loopne
push
or
ja
data16
xor
or
in
in
es
pop
out
js
mov
pusha
scas
mov
movsb
pop
push
sub
and
cmp
pop
add
pusha
adc
dec
addr16
xchg
out
fstpl
ja
pop
enter
mov
adc
lock
cmp
les
repnz
adc
rcr
mov
popa
jo
repnz
push
icebp
sti
movb
stos
outsl
sub
jge
sarb
or
sub
punpckhdq
push
sbb
fdivl
das
pop
push
das
rol
ja
mov
dec
xchg
fucom
ret
dec
add
adc
pop
jne
pushf
sbb
xchg
fdivs
pushf
lods
outsl
pusha
out
dec
imulb
into
repnz
loopne
mov
loopne
lret
rorl
sbb
or
adc
or
sub
or
gs
dec
jp
xor
push
xchg
inc
sarl
int
movsl
jge
and
sbb
je
mov
sti
test
fsubrl
insb
inc
arpl
stc
pop
shl
cmp
xor
rcl
loopne
cmc
clc
sahf
adc
xchg
and
int
lret
out
ds
aam
sub
jno
jecxz
mov
sahf
and
sbb
adc
in
push
rcll
cltd
rorl
mov
lret
popa
push
dec
je
test
pop
and
mov
sarl
loope
mov
cmc
xchg
add
insb
leave
shll
mov
xchg
fimull
sub
fs
mov
outsl
pop
stos
ds
add
xchg
xlat
jmp
mov
or
mov
cmp
roll
in
sahf
add
adc
imul
insb
repz
js
dec
push
pop
nop
fcomp
adc
xlat
xlat
lcall
sub
jle
ljmp
add
test
ds
inc
enter
andb
mov
inc
mov
dec
pop
cmp
sub
test
rcr
pusha
jle
aad
pop
imul
sti
jmp
dec
fisubl
mov
das
mov
dec
push
loop
es
add
sarb
shl
mov
mov
sbb
aaa
mov
mov
sbb
mov
lcall
stos
insb
sbb
icebp
push
xchg
xor
aam
sti
xchg
nop
mov
mov
std
jmp
popa
mov
lcall
add
push
daa
mov
fs
and
adc
lcall
sarl
sub
jp
jne
push
mov
loopne
inc
das
dec
gs
ret
repz
jne
sbb
or
cld
push
cmp
test
jb
nop
jb
iret
fwait
inc
cli
repnz
pop
sbb
sbb
mov
pop
and
inc
popf
dec
cmc
and
xor
mov
std
mov
pop
sbb
adc
add
insl
sub
xor
lods
xchg
or
test
push
inc
push
add
xor
inc
xchg
das
fwait
adc
loopne
mov
ss
divb
lods
mov
test
adc
cld
jo
in
inc
cs
repnz
push
xchg
in
push
lcallw
pop
movsb
adc
or
std
pop
add
pop
repnz
in
dec
jnp
xchg
inc
mov
repnz
cld
into
dec
dec
and
inc
js
fstpt
test
pusha
loopne
add
and
push
adc
rcl
mov
sbb
cmpsb
push
sub
cmp
dec
repz
inc
xor
lret
je
cwtl
push
jge
ss
jle
or
lods
sti
mov
loopne
stos
push
push
push
adc
sub
add
imul
mov
xor
pop
dec
iret
out
add
sbb
rcll
xor
rol
sbb
and
decb
jge
icebp
dec
inc
ss
mov
fistl
and
mov
or
jnp
loope
jno
xchg
xchg
outsl
mov
xchg
imul
js
inc
rol
stos
jne
dec
and
cmp
rclb
clc
fwait
mov
mov
cmpsb
sbb
insl
pop
icebp
mov
mov
lock
pop
movsb
cmp
inc
jg
and
cmp
loop
nop
lea
and
pop
std
mov
aas
or
je
mov
or
lcall
les
sti
icebp
mov
inc
rcrb
xchg
movsb
mov
cmpsb
adc
mov
mov
jge
xor
cmp
push
es
push
popl
push
and
push
mov
xor
and
out
movsl
add
fmull
dec
shrl
stos
sahf
push
insb
sbb
dec
dec
cmpsb
push
cwtl
xor
mov
imul
xchg
inc
insl
icebp
sub
stos
scas
mov
xchg
aaa
into
cltd
cmpb
int
adc
jb
cmp
cmpsl
inc
pushf
sub
inc
insb
sub
popf
sbb
mov
push
movsl
daa
push
and
out
pop
std
or
in
inc
out
jmp
pop
sbb
rcll
imul
jle
push
rcpps
cmp
std
pop
or
nop
add
sbbb
adc
lods
stos
jbe
mov
das
adc
sahf
lds
jo
sub
mov
xor
or
or
add
test
nop
add
xchg
icebp
jo
fimull
mov
or
pop
jp
jb
jge
xacquire
dec
clc
jo
xchg
gs
lcall
jge
adc
add
mov
jne
popa
in
cmp
push
arpl
or
cs
outsl
jmp
mov
aas
leave
repnz
aas
loopne
out
or
push
dec
dec
inc
mov
cmpsb
sub
and
fimull
sbb
and
mov
jge
fsqrt
pop
dec
es
inc
push
jge
inc
fcom
ds
leave
mov
mov
inc
adc
addr16
data16
loop
adc
int3
imul
lea
mov
lock
jp
mov
xchg
mov
arpl
loope
mov
cltd
rcll
pop
add
xchg
pop
adc
cmp
mov
imul
jecxz
mov
aam
push
sub
cmpsl
sbb
or
in
mov
hlt
mov
jno
es
add
lods
imul
das
mov
adc
push
mov
pop
xchg
pop
stc
imul
mov
fdivrl
lods
in
rcrl
loope
test
mov
es
and
dec
js
mov
out
inc
aad
mov
push
subb
push
ror
js
jl
out
sub
mov
aas
jle
dec
push
js
or
inc
cmp
jmp
pop
movsl
mov
jmp
push
adc
das
iret
mov
shll
iret
sti
inc
jp
test
je
dec
and
push
testb
dec
mov
pop
lahf
shlb
mov
adc
pop
push
xchg
mov
mov
adc
test
std
aam
fwait
xlat
cmp
outsl
aas
mov
sbb
loop
inc
add
mov
lock
data16
popa
and
inc
jb
jnp
cmp
sbb
fidivrl
filds
cmovb
test
adc
dec
adc
outsb
test
cltd
test
mov
sbb
or
xchg
mov
cli
orl
mov
testl
icebp
mov
lcall
xchg
sub
cmpsl
shl
cmc
dec
fsubs
push
repnz
idivl
xor
cmp
nop
rcrb
mov
stos
xchg
or
mov
cmc
mov
fwait
dec
fldcw
xor
and
jb
or
sahf
cmp
insb
add
fcomps
fsubrl
scas
cli
or
in
jno
add
jae
sahf
inc
sbb
inc
adc
cmpsb
sbb
or
lea
outsl
movsl
pop
cmp
push
fisubrl
dec
fwait
xchg
dec
xor
daa
dec
jmp
or
xor
lret
cltd
popa
loop
imul
sbb
push
loopne
xor
jne
xor
pusha
and
mov
iret
cmp
add
jnp
leave
lcall
dec
sbb
jle
lods
stos
lods
roll
cmp
les
mov
in
mov
mov
inc
mov
jae
lcall
ljmp
xorb
jns
inc
les
fmul
rcrl
std
add
push
push
cmp
insb
ss
fs
imul
sub
jp
add
mov
sub
adc
xor
jo
movsb
sub
lcall
adcb
push
pusha
mov
insb
daa
jb
xor
out
push
jl
aas
xchg
inc
mov
ja
mov
aas
adc
arpl
sub
adc
jecxz
lock
pop
mov
mov
xchg
daa
adc
sub
lds
test
or
add
cmp
xchg
loopne
jae
sub
out
mov
mov
sahf
mov
mov
xor
jl
push
das
adc
xchg
sbb
pop
jecxz
popf
pop
daa
pop
into
pop
push
outsl
stc
dec
adc
jne
inc
add
add
aad
inc
imulb
cmc
xchg
inc
or
xlat
outsl
sbb
xlat
mov
scas
adc
hlt
adcb
mov
push
andl
movsb
push
inc
jns
add
loopne
mov
ljmp
pop
movsb
inc
add
adc
add
cwtl
mov
add
cmp
ret
and
sub
addr16
push
imul
dec
daa
imul
idivl
cmpb
aad
jnp
inc
fsin
push
or
jle
xchg
mov
insl
mov
lret
push
jo
jmp
or
push
sarl
leave
test
call
hlt
pop
loop
push
mov
jl
test
pusha
cmpsl
mov
and
lods
insb
sarl
dec
cwtl
dec
push
test
jecxz
shlb
sbb
mov
not
cmp
pop
iret
imull
add
xchg
and
stc
lea
outsl
mov
add
mov
movsb
mov
adc
push
testl
mov
xchg
mov
jbe
and
mov
sub
cmp
and
arpl
push
xchg
jbe
stos
ret
dec
inc
and
inc
cmpsl
mov
jmp
dec
ret
pop
fld
mov
adc
dec
into
mov
bound
out
int
add
inc
sahf
sbb
adc
push
in
lods
scas
and
cmp
xlat
or
jne
add
and
aad
mov
lret
je
cmp
int
mov
mov
dec
popf
push
int3
test
xor
imul
xchg
out
dec
je
xchg
xchg
out
lods
jge
pop
xor
into
mov
inc
inc
cmpsl
mov
es
cmc
lea
mov
mov
dec
or
test
inc
cmp
add
sti
jge
cmp
outsl
ljmp
xchg
mov
dec
mov
mov
mov
rorl
and
mov
pop
rcrb
scas
decb
lea
mov
aad
adc
sahf
movsl
fwait
sbb
push
test
pop
dec
mov
adc
xchg
jge
mov
stc
fsubrl
mov
mov
stos
mov
cmp
lods
lcall
ss
aas
dec
push
scas
lods
jb
loop
push
inc
mov
lods
pushf
add
mov
lds
sub
cwtl
mov
int3
dec
mov
push
sub
fisubrs
clc
fwait
aaa
lret
pop
cmpsb
enter
jle
notl
push
scas
pop
int3
outsl
adc
fiadds
pop
data16
aad
mov
pop
or
stc
icebp
dec
fwait
sbb
and
int3
jbe
jbe
dec
jg
add
cmc
pop
popa
adc
xor
in
pop
and
add
push
sbb
jge
insb
repz
pop
sbb
pusha
add
sar
montmul
cmpsb
pop
imul
leave
xchg
mov
int
gs
push
aas
xchg
mov
mov
in
pushf
hlt
inc
mov
dec
push
stc
rcrb
jp
cmp
dec
ja
push
sub
in
jbe
call
xlat
cmp
outsl
loope
xchg
lgs
jb
sbb
add
xor
into
dec
jns
loope
mov
nop
inc
push
mov
push
sub
pusha
adc
pop
push
aas
jne
outsl
sbb
sahf
cmp
aas
movsl
fucomp
ret
mov
imul
xor
jg
rorl
mov
sbb
sub
xor
and
jb
aaa
dec
movsb
pop
jge
insl
cld
stc
enter
cld
mov
jae
mulb
pop
xor
pop
iret
add
ret
xchg
lds
sbb
mov
and
cmp
lods
nop
mov
iret
cltd
and
xchg
adc
xor
sub
hlt
jp
push
popf
mov
adc
and
push
push
les
sub
sub
adc
outsb
out
stc
jb
push
addr16
cmpb
pop
push
mov
jecxz
leave
icebp
hlt
or
stc
sbb
jb
mov
ucomiss
and
push
pop
add
mov
adc
jp
jne
dec
adc
popa
nop
xchg
dec
mov
xlat
push
aam
popf
dec
pop
dec
outsb
pop
lock
daa
mov
or
push
sbb
push
adc
push
jecxz
sarb
fxch
jae
jp
xchg
je
adc
in
imul
pop
and
shl
jne
aas
sbb
xchg
jb
cmc
lods
mov
fnstsw
pop
xchg
in
decl
jl
lock
jne
pop
cmpsl
dec
cmp
mov
cmc
push
scas
das
pushf
or
push
in
jmp
or
pop
lret
lods
mov
mov
dec
repnz
jmp
aas
shl
std
pop
inc
pop
out
xchg
cltd
addr16
icebp
jg
pop
xchg
jne
aad
and
xchg
fnstenv
jns
test
adc
inc
mov
test
sbbl
aas
xchg
xchg
test
sbb
adc
addps
sti
cmp
push
ljmp
jae
xchg
dec
arpl
fcomip
mov
clc
cmp
mov
cli
aas
and
add
loope
pop
cli
dec
es
mov
imul
cmc
inc
push
xchg
lock
sub
insl
incl
sub
and
sbb
popa
ss
push
mov
jbe
flds
test
and
mov
jo
pop
jmp
inc
out
and
or
xchg
cmp
mov
sub
lods
adc
cmpsl
or
add
ss
and
add
lods
adc
loope,pt
pop
lret
icebp
xor
sub
repnz
iret
loopne
fdivrs
rorl
xchg
inc
lods
xor
aad
mov
mov
jb
push
mul
cmpb
iret
fmull
mov
jae
fisttpl
repz
test
orl
popw
test
and
lods
add
repnz
xor
inc
inc
sub
je
jae
nop
addr16
addr16
stos
mov
sbb
ja
pop
lods
loopne
inc
call
ss
dec
ret
movb
dec
pop
sub
fwait
rorb
pop
cmp
dec
and
cmc
lret
lock
nop
ja
out
or
arpl
fimuls
call
loope
fisttpl
adc
inc
jg
test
inc
mov
in
std
loop
filds
sbb
aad
in
adcb
aas
xor
push
in
sbbb
inc
loopne
jp
rcrb
mov
mov
xlat
xchg
or
ds
pop
push
cmp
cmp
push
jmp
add
mov
add
jo
pop
bswap
sbb
xorb
mov
ds
push
cmpsl
test
add
xorb
push
push
seto
dec
jecxz
test
fs
mov
jg
or
jnp
or
out
inc
jge
rcl
rclb
mov
mov
lods
adcl
inc
iret
adc
pushf
fnstcw
ret
je
sahf
and
sarl
sarb
pop
xchg
sbb
gs
xchg
into
psrld
ret
popf
jns
adc
je
xor
and
test
jbe
xor
xchg
shll
push
daa
mov
cmp
xchg
sub
adc
mov
testb
fmuls
into
xor
out
insl
add
cmp
frstor
dec
enter
push
jae
std
xor
cmp
xchg
push
mov
and
adc
mov
mov
mov
dec
cmpsb
stos
jge
sbb
ficompl
push
jb
and
sub
fwait
in
dec
ret
push
jbe
push
or
xor
jnp
mov
xchg
mov
stos
jns
inc
iret
lahf
mov
inc
rclb
xchg
lds
pop
adc
cltd
outsl
xchg
std
daa
push
sahf
out
enter
and
jns
xchg
movsl
insl
jecxz
dec
popa
push
xor
or
push
cwtl
je
sbb
shll
sub
movhps
fucomi
les
imul
idivl
sub
lods
add
xchg
in
mov
xlat
pop
mov
leave
movsl
sbb
lret
mov
cwtl
out
mov
sbb
testb
mov
punpckhwd
xor
fimuls
mov
push
mov
pop
mov
jecxz
pop
pop
dec
imul
sub
sti
int3
cli
mov
cmp
cwtl
cs
jne
repz
cwtl
lods
mull
out
jle
mov
repnz
push
cltd
pop
xor
aad
add
xchg
cmp
imul
xchg
mov
cmp
jns
popf
jl
mov
adc
or
pcmpgtw
ja
xor
cs
fistpl
int
add
xchg
or
cmp
fwait
mov
xchg
sahf
mov
push
push
cmp
push
insl
pop
in
cmpsb
cmp
sahf
inc
mov
dec
aad
cmp
rol
nop
iret
pop
add
xchg
or
sti
xlat
jmp
lods
add
add
or
std
addr16
push
stos
icebp
popf
mulb
dec
imul
fwait
mov
cmovns
xor
subl
lahf
add
lock
pop
movsb
pop
push
inc
xor
sbbl
mov
test
add
inc
mov
cmp
mov
cmc
test
mov
sahf
sbb
dec
ret
fs
int3
aas
sbb
sbb
popa
nop
test
loope
filds
cmp
pop
jp
add
dec
cmpsb
loop
cmp
pop
ljmp
sub
orl
cld
cmp
bound
test
fstps
and
fnstsw
ja
ss
sbb
inc
mov
mov
out
cwtl
addl
outsb
das
into
faddl
sbb
add
mov
xchg
rcll
cmp
pop
dec
outsl
cmpsb
xor
push
pop
and
sbb
mov
jg
jp
add
adc
mov
mov
enter
inc
js
jge
pop
xor
mov
add
mov
cmp
in
insb
jl
mov
cmpsl
test
fistpll
or
mov
loopne
das
sahf
cmp
push
jb
cmp
ja
icebp
testl
lea
outsl
xor
xchg
add
ret
hlt
ja
loop
and
ret
lock
jb
popw
lcall
insb
or
iret
inc
sub
cmpsb
add
adc
sub
xor
repz
inc
sub
pop
dec
cmc
repz
sbb
rcrl
incb
xchg
aad
sbb
push
jle
filds
ljmp
sub
xchg
sbb
rcl
bnd
daa
arpl
mov
push
jno
insl
cmp
idivb
sub
pop
sbb
scas
in
loope
cmp
dec
cmc
mov
mov
lods
sub
clc
push
insb
lahf
ror
mov
pushw
cld
aas
out
adc
sbbl
addr16
pop
in
divl
cmpl
sub
mov
int
mov
xor
mov
cmpsl
pop
ret
sub
inc
mov
jb
or
adc
lds
ljmp
and
ss
jae
mov
cltd
lret
mov
scas
pop
xchg
dec
push
cmpsl
ja
dec
cld
mov
adc
mov
lods
test
pop
jge
or
jnp
add
repnz
out
iret
nop
in
fbld
mov
pop
pushf
push
iret
add
mov
decl
pop
cld
fiaddl
repnz
sahf
pop
frndint
mov
push
sahf
xor
inc
push
les
cli
das
fstpl
pop
inc
aas
sub
std
fdivs
aaa
loope
sbb
out
sbb
daa
jb
cltd
push
out
and
cmc
adc
stos
cmp
fwait
xchg
inc
test
mov
dec
fimull
sbb
xchg
adcl
fcmovu
rorb
popa
stos
mov
sbb
sbb
sbb
add
cmpsb
dec
xchg
popa
inc
ret
fs
push
loop
and
xchg
imul
mov
mov
inc
insl
fimuls
cmpsl
jg
sbb
xchg
xchg
movb
rorl
cli
push
jb
pop
les
jge
sbb
push
imul
subps
sub
popa
pop
xchg
xorb
fs
jnp
and
pusha
add
mov
je
loop
and
in
popf
ret
pop
test
cmp
popf
push
popf
cmp
arpl
mov
stos
push
pop
dec
xor
orl
lds
test
imul
ljmp
xor
mov
sub
mov
mov
push
test
pop
sub
popf
xor
mov
inc
movb
inc
push
inc
cmp
lea
cmp
sub
shlb
dec
or
jl
xlat
daa
stos
imul
jns
and
mov
shrl
fmulp
das
pushf
rcl
jno
insb
push
inc
fucomip
push
xchg
imul
and
sbb
inc
xor
lcall
mov
xchg
clc
fildll
mov
push
or
fimuls
in
js
ret
add
sbb
movsb
pop
xchg
mov
inc
sub
out
push
imul
aam
inc
popa
sub
adc
inc
mov
pushf
clc
mov
push
movsl
arpl
outsb
adc
aaa
test
and
ficoml
scas
adcb
xchg
cld
loopne
adc
add
push
cmp
jmp
jns
push
xchg
jmp
adc
inc
push
int
inc
stc
mov
lret
or
cmpl
inc
jge
ss
add
sbb
call
mov
testb
cmpsl
jbe
bound
popa
xor
jge
add
push
movsl
inc
aaa
pop
jnp
outsl
bound
lods
leave
test
cmp
push
or
mov
loop
xchg
movsb
aaa
mov
js
clc
cld
fiadds
mov
jmp
out
aam
push
or
nop
decb
mov
push
push
pop
xchg
pop
inc
and
pop
scas
pop
pop
outsb
imul
sub
adc
xchg
mov
dec
stos
xor
mov
ljmp
dec
dec
xor
jmp
mull
pop
pop
pop
loop
jne
ficoml
in
cwtl
loopne
mov
bound
mov
pop
xor
or
stos
jge
orl
int
sbb
xor
jp
sbb
out
push
adc
jae
dec
aaa
xchg
pop
or
cmpsb
inc
push
daa
inc
bound
ljmp
xchg
fs
push
push
dec
leave
mov
push
add
sub
mov
jnp
inc
in
dec
addr16
lret
movsw
cli
mov
out
loope
or
cltd
scas
xchg
cmp
clc
pusha
fsubr
adc
inc
mov
mov
fs
push
add
cmpsl
lret
push
cmp
jl
inc
pop
inc
daa
std
adc
out
xchg
dec
pop
cmpsl
and
loope
movsl
add
mov
xor
dec
std
loopne
out
xchg
aas
ljmp
pusha
xchg
mov
addr16
and
cld
and
in
fwait
ret
mov
inc
mov
and
or
fdivrs
add
outsb
xchg
imul
ds
sub
mov
rorl
pop
push
lock
cmp
call
adc
cmp
data16
fistps
aaa
jp
not
hlt
insl
lods
scas
aas
iret
sbb
mov
loop
jb
loopne
scas
ret
mov
xchg
rcll
shl
sbb
int3
popa
adc
pop
inc
test
mov
xchg
push
mov
or
neg
cwtl
jmp
sarb
into
mov
lods
iret
push
jnp
xor
mov
jne
push
lods
repz
add
cltd
inc
gs
fcmovu
pop
lret
cmpb
leave
aaa
inc
mov
jmp
mov
loopne
mov
fimull
sbb
cmp
call
jae
in
mov
sub
jp
or
xchg
sub
stc
xor
jl
sub
jecxz
js
and
lock
into
push
data16
pop
jo
sub
xchg
imul
mov
xchg
aad
vmaxpd
xchg
push
push
repnz
fldpi
xor
xor
cvtps2pd
and
fs
lods
mov
mov
into
jns
xchg
mov
das
sbb
xor
in
out
cmc
out
sbb
popa
push
loope
fnstenv
xor
dec
push
jnp
xor
out
pop
lcall
jl
xor
jmp
in
mov
sbb
mov
popf
mov
cmp
push
adc
int
divb
mov
adc
xchg
stos
xchg
adcb
and
mov
mov
mov
push
sub
in
mov
shrl
int
adc
test
dec
shrb
lods
dec
add
orl
adc
fists
movsb
psraw
push
xor
fcomps
mov
or
push
jno
push
dec
lret
jp
scas
mov
ret
test
std
cli
out
xor
faddp
lcall
sub
test
int
test
push
mov
rcr
sub
fxch
adc
dec
cmp
les
and
xor
loope
lahf
pushf
fcmovnbe
mov
rorl
push
xchg
imul
je
shlb
pop
movsl
mov
xchg
mov
cmp
xchg
mov
scas
mov
cwtl
fcoml
add
loopne
and
stc
dec
adc
jmp
add
xor
mov
push
pop
mov
pop
mov
xchg
add
mov
fldl
jge
push
push
lock
and
or
adc
lock
pop
add
fs
popa
push
imulb
mov
cmpsb
fildll
test
xchg
fmul
xchg
xchg
mov
dec
mov
lahf
out
mov
movsl
mov
push
dec
and
inc
popf
test
pop
cmpsl
sti
repnz
aam
push
jp
lods
mov
jae
jae
add
push
adc
cmpsb
jecxz
filds
dec
sub
or
lahf
xchg
cmpsl
fidivl
inc
ds
test
mov
rorl
addb
adc
mov
and
add
test
movsb
ret
cmp
cmp
dec
sbb
pop
mov
pop
rcll
movsl
hlt
and
mov
stc
cmp
xchg
mov
sahf
mov
jmp
pop
hlt
sub
xchg
lret
bound
insl
mov
dec
repz
out
inc
jmp
jle
inc
dec
mov
or
cmp
insb
mov
adc
call
les
int
aaa
cmp
dec
repnz
test
jl
dec
lret
out
out
push
sbb
cs
cltd
mov
aad
lcall
jmp
pushf
enter
sub
in
mov
adc
pop
mov
jle
and
and
int3
test
xchg
mov
out
push
sub
pop
cli
jno
sub
and
inc
pushf
roll
pop
loope,pn
xor
in
aad
push
mov
pusha
or
inc
ret
mov
and
stos
filds
mov
cwtl
jne
add
dec
cmp
mov
orl
adc
pusha
test
sti
and
hlt
cmc
std
add
xor
adc
xchg
or
mov
lea
inc
mov
fldenv
lahf
outsb
lods
pusha
pop
adc
std
xchg
mov
cmpsb
imul
mov
pusha
fmulp
xchg
pop
cmp
jb
hlt
xchg
push
adc
add
xchg
and
icebp
push
out
rcr
vmwrite
test
add
std
test
int
dec
addr16
jb
cs
xor
in
mov
xchg
es
mov
hlt
add
icebp
mov
cld
cmpsb
inc
push
adc
cmp
mov
cmc
mov
or
in
jo
hlt
push
jge
push
push
inc
push
js
andb
xor
xchg
sub
pop
or
lea
mov
push
sub
push
test
push
jl
xor
frstor
dec
mov
jns
insb
mov
int
or
fistpl
mov
test
decl
or
push
outsb
jle
insl
lods
dec
lret
jbe
jbe
pop
cmp
call
das
sbb
push
pop
lods
lods
fcomi
mov
mov
or
add
mov
bound
fisubrs
cmp
cmp
add
cli
cmp
mov
cmpsl
les
xchg
test
mov
imul
fbld
dec
ss
jecxz
mov
adc
mov
fldenv
and
and
and
pop
mov
inc
and
mov
pop
mov
sti
sub
insl
aas
xor
add
push
adc
xor
test
add
or
inc
xchg
push
mov
jbe
outsl
ret
and
je
iret
lock
mov
sbb
in
fcoml
outsb
and
in
out
shll
jmp
dec
add
sbb
leave
insb
insl
mov
int3
xchg
jne
das
inc
or
pop
push
dec
sub
dec
aad
or
and
ret
std
xor
dec
push
js
add
pusha
pop
and
inc
xlat
aas
and
ret
fisubl
ss
scas
pop
enter
pop
dec
popl
sub
pop
adc
sbb
bound
jmp
mov
cli
inc
bound
xchg
lds
loopne
cwtl
mov
cmp
clc
xchg
xchg
cltd
adc
mov
jecxz
mov
inc
bound
in
repz
lds
inc
imul
shlb
and
fldl
push
sti
jge
mov
mov
cmp
fildl
cmp
rcrb
lods
mov
mov
dec
ret
push
jae
xchg
bound
das
hlt
bound
lds
xor
sub
sbb
push
mov
inc
dec
call
xchg
cmp
lcall
sub
ljmp
and
jmp
xor
mov
aad
ret
insl
xor
pushf
lods
mov
push
xchg
add
sbb
mov
stos
test
into
mov
cltd
shll
leave
ja
push
int
add
mov
sbb
and
pop
mov
add
subl
repnz
scas
push
dec
rcrb
jle
pop
lcall
push
out
xor
jb
testb
dec
mov
mov
jmp
fwait
sbb
mov
jo
push
ljmp
mov
lods
aas
push
adc
push
push
imul
enter
cmpsb
pusha
out
jmp
mov
hlt
mov
icebp
push
push
sti
and
mov
and
xchg
adc
stos
outsl
pop
inc
shld
hlt
push
adc
xchg
in
sub
pop
sub
cmpsb
pop
lods
mov
sub
mov
inc
pop
push
mov
loop
hlt
clc
mov
mov
mov
lcall
and
jecxz
ljmp
dec
fdivl
cwtl
adc
outsb
jmp
cmp
xchg
testl
shl
xrelease
cmp
mov
rcll
sbb
aas
pop
adc
test
out
stc
xchg
pop
pushf
sub
stos
add
out
pop
jae
test
adc
std
xchg
jge
pause
lea
xchg
rcl
rcrl
int3
test
int
jp
push
add
in
jnp
jle
xchg
in
in
sahf
add
rcr
cmpl
loopne
adc
pushf
imul
adcb
pop
jnp
lds
std
fldl
movsl
sahf
or
incl
or
and
gs
loope
movl
ss
mov
leave
xor
adc
out
inc
xchg
scas
addr16
and
pop
inc
repnz
movsb
mov
xor
rcrl
bound
enter
adc
out
pop
pop
dec
movsl
pusha
sub
xchg
and
mov
xor
pop
pop
popf
push
lea
push
mov
cmpsb
iret
push
flds
lret
shl
xchg
dec
int3
and
jae
sbb
cmp
and
mov
mov
sub
xor
setns
sbb
mov
or
and
loope
dec
loopne
sub
lret
jne
and
adc
mov
mov
sub
mov
sbb
test
scas
pushf
or
mov
mov
pop
jno
cmp
lcall
dec
push
mov
mov
out
cmp
mov
inc
aam
pop
sub
push
push
mov
jae
leave
mov
mov
or
adc
aaa
pop
and
daa
jl
add
jle
fisttps
out
dec
or
mov
popa
cmp
cs
xchg
sbb
inc
pop
test
shrb
adc
mov
roll
hlt
pop
jno
add
ret
xchg
lret
jg
insb
pop
hlt
push
adc
sbb
add
in
dec
jl
ret
stos
icebp
mov
gs
pusha
pop
in
call
ds
fidivrs
xorb
xchg
jecxz
inc
jle
xor
inc
xchg
pop
push
mov
xor
pop
dec
push
add
push
divl
mov
push
gs
dec
sarl
rolb
xchg
jmp
xchg
xor
dec
push
sub
andl
push
adc
movb
pusha
or
jl
and
push
push
jmp
sbb
cmp
ror
adc
test
adc
mov
rcr
or
inc
rcrl
cwtl
and
das
mov
mov
test
les
sbb
mov
or
push
sub
cmp
push
sahf
rorl
mov
sbb
movsl
cli
scas
add
cltd
cmp
push
mov
lahf
insl
int
xchg
pop
sbb
dec
rol
jno
mov
pop
jecxz,pn
enter
xchg
mov
call
cmp
aam
jp
loopne
shl
push
lods
test
sbb
subl
push
jnp
or
ss
icebp
mov
lahf
cmp
frstor
adc
mov
sub
mov
sbb
lret
stos
fst
leave
and
ss
scas
in
mov
mov
jle
lods
inc
ret
push
xchg
lods
repz
xchg
push
dec
and
shlb
jo
add
imul
and
arpl
push
and
addr16
or
test
and
mov
aad
xor
mov
rcrb
rol
jl
ret
scas
mov
pop
inc
in
ror
cmp
adc
cwtl
mov
pop
xchg
xchg
in
jl
pop
or
xchg
stos
ljmp
nop
jp
push
lret
dec
add
sti
push
push
or
jp
call
nop
sbb
jl
std
mov
push
scas
cld
dec
sarb
sub
add
jns
inc
iret
es
xor
sbb
fisubrs
repnz
and
inc
jecxz
add
sub
shl
cld
outsb
lret
inc
mov
test
rorb
mov
daa
ljmp
das
or
cltd
lods
enter
sub
ret
cmc
mov
rorl
fs
sbb
sub
mov
std
outsb
push
mov
test
xchg
jecxz
scas
pusha
popa
mov
adc
outsb
sbb
test
dec
add
shrl
xchg
push
push
mov
lds
cltd
pusha
and
pusha
test
mov
jmp
sub
mov
roll
mov
mov
mov
cli
fcompl
pop
mov
inc
ja
test
outsb
data16
sub
and
mov
pushf
pop
sbb
stos
ja
das
sub
pop
jecxz
mov
sbb
mov
int
adc
adc
lods
xchg
movsb
push
mov
popf
js
mov
loop
mov
and
cmp
mov
or
pop
lods
inc
push
xchg
add
pop
aam
inc
ret
lret
xchg
repz
int
adc
sub
push
xlat
into
arpl
fisubs
mov
scas
subb
or
dec
outsl
adc
xor
std
xchg
fcompl
jecxz
xor
out
cmc
es
push
addr16
add
rol
sbb
cmp
mov
insb
aas
movsl
popa
push
adc
jo
and
es
adc
insb
mov
pop
lock
xchg
in
es
and
popa
aaa
and
add
ret
lcall
stos
mov
ds
sub
cmp
enter
push
arpl
hlt
and
ljmp
test
addr16
mov
sbb
fcoms
nop
ret
pop
test
push
dec
outsb
nop
stos
xchg
popf
insl
roll
mov
cld
pop
xchg
decb
mov
cmp
pop
dec
jle
jl
cmc
repz
xor
jecxz
sub
enter
popf
outsl
jnp
mov
add
or
ja
bound
sub
xchg
dec
pusha
lods
xchg
fimull
push
and
cmp
lods
cld
push
jno
iret
imul
sub
add
jmp
loopne
fsub
out
pushf
xchg
inc
mov
or
bound
mov
loopne
mov
pop
cmc
fsubrl
daa
pop
roll
lods
mov
int
adc
shl
lods
add
mov
es
mov
and
mov
pop
lds
enter
lret
mov
jbe
dec
jno
lods
fisubrs
ret
pop
dec
and
pushf
pop
xor
xor
mov
popf
sbbl
in
inc
push
mov
fists
ret
mov
lahf
fcmovbe
movb
add
add
sti
imul
rol
aas
mov
adc
pop
mov
xor
xlat
cmp
cmp
mov
inc
aaa
sub
mov
sarb
lret
fsubrl
ret
xchg
add
mov
es
lret
inc
je
fnsave
sbb
adc
inc
outsl
mov
ficompl
fistps
popa
jno
or
test
std
jmp
mov
push
pop
lea
sbb
pop
jae
push
jge
fisubl
xor
add
insl
fmuls
std
repz
test
scas
add
insl
or
adc
lahf
push
rol
hlt
lods
or
adc
and
add
out
lcall
addb
xchg
sbb
inc
outsl
das
fsubr
sbb
dec
adc
dec
pop
fldt
mov
inc
out
insb
xorb
inc
push
jno
cmpsl
fldenv
daa
inc
inc
shrb
sub
mov
add
pushf
es
ret
and
ds
aaa
sub
adc
dec
pop
inc
mov
push
ficompl
or
cmc
mov
bound
adc
add
ret
adc
lret
mov
mov
xchg
cmp
fcom
stc
scas
out
xchg
sarl
jno
out
and
dec
jne
xor
mov
mov
xor
jno
sbb
mov
pop
lcall
fwait
push
fidivs
mov
xchg
shlb
or
dec
popf
fs
notl
mov
mov
decl
and
mov
fnstcw
and
inc
lcall
shll
lahf
jge
movsb
sub
cmp
push
xchg
fcom
cmp
fnstcw
frstor
mov
jmp
lea
add
jp
fstp
loopne
es
inc
scas
inc
push
inc
xchg
jmp
aam
pop
neg
inc
gs
stos
sbb
pop
sbb
enter
push
sub
bound
pushf
movsl
mov
mov
pusha
adcl
sbb
sti
or
push
and
mov
lcall
jle
push
and
hlt
insl
and
ret
pop
aas
xchg
jns
gs
mov
mov
stc
push
nop
jmp
movl
lcall
pop
dec
imul
and
ret
test
inc
and
adc
xchg
test
pop
bound
jg
jbe
inc
insl
and
fstpl
dec
pop
mov
pop
mov
call
pop
insb
mov
aam
xchg
mov
js
jns
adc
pop
mov
jb
lods
cs
movsb
inc
bound
lock
int3
xchg
push
cli
jb
sub
jne
cld
fwait
push
xchg
inc
loopne
dec
xor
mov
es
adc
loop
pop
ljmp
fstl
scas
fwait
cmp
popa
mov
add
icebp
cli
loop
cs
arpl
xchg
pop
mov
sub
pop
xor
xchg
inc
mov
cld
dec
sahf
mov
lock
repnz
dec
inc
js
mov
pop
or
int
mov
sub
mov
ds
push
cli
pusha
sbb
imul
push
adc
xor
shrb
out
in
mov
jbe
pusha
mov
push
aaa
sbb
and
mov
sub
leave
add
xchg
add
add
flds
clc
fidivl
notl
fsubs
mov
std
int
xor
movb
clc
push
fisttpl
jmp
push
mov
addl
inc
std
cmpsl
add
jmp
movb
test
add
sbb
popa
add
test
rorl
fwait
xchg
adcb
inc
cs
sbbb
pop
push
xor
and
cmpsl
mov
mov
jp
mov
xor
lods
hlt
pop
xor
aas
les
js
lret
xor
mov
fcomps
repz
notl
sti
jmp
push
jb
pop
cmpsl
mov
inc
mov
inc
mov
sub
insb
inc
dec
pushl
movl
lds
les
adc
or
push
icebp
xchg
mov
pop
push
leave
int
inc
test
cmp
pop
or
out
icebp
adc
inc
idiv
sbb
sarb
sub
cmc
cmp
addr16
cmp
xor
leave
pop
xor
out
fwait
jecxz
adc
outsl
inc
je
and
xchg
pop
scas
sub
xchg
ret
push
fdivrp
mov
mov
jecxz
push
jne
je
outsb
cmp
shrb
add
jne
xor
sbb
jg
rcll
jbe
decl
and
mov
add
lcall
push
adc
daa
mov
and
popa
inc
pop
lret
xchg
cmp
inc
jnp
aad
xor
mov
repnz
fimull
push
shll
cmp
out
scas
das
push
out
icebp
sbb
fcompl
fidivrs
jmp
hlt
add
and
fisubl
nop
lahf
sub
das
mov
rorb
xchg
pop
xchg
mov
pop
jmp
stos
mov
jnp
sub
push
pop
or
pop
push
hlt
push
in
adc
dec
xchg
or
out
cmp
dec
inc
cmc
sub
push
xor
jl
addr16
in
push
bnd
cwtl
subl
nop
insl
jp
test
outsl
cld
xchg
lret
cmp
incb
shr
lahf
jno
mov
mov
mov
scas
cmp
mov
inc
rol
sbb
out
scas
arpl
push
and
test
mov
inc
sbb
sub
test
sbb
stos
xchg
lcall
lods
fwait
push
add
xchg
ss
sbb
add
rorl
push
mov
jmp
leave
lods
lea
inc
outsl
ja
dec
insb
xchg
add
jle
aad
in
aaa
adc
daa
int3
mov
pop
divl
cs
cmc
adc
outsb
fwait
inc
outsb
or
int
inc
mov
std
fnstenv
xchg
ret
pop
push
sub
mov
xorb
mov
shlb
cmp
cld
mov
mov
divb
push
fdivrs
cmpsb
pop
ror
inc
cmc
sbb
aaa
imul
mov
pushf
cmp
pop
sub
pop
mov
movsb
mov
add
sbb
test
pop
adc
jnp
xor
jg
add
dec
iret
push
mov
mov
imul
mov
push
bts
stc
int
sub
pop
xchg
ss
cmpsl
andb
gs
fs
out
and
jp
mov
pop
cs
pusha
in
inc
sbb
add
dec
push
je
cmc
cmp
aad
enter
enter
mov
add
add
xor
sub
pop
dec
or
sub
sbb
or
scas
jg
mov
nop
inc
pop
arpl
mov
sbb
inc
adc
je
scas
and
xabort
sub
mov
push
lahf
test
xchg
icebp
cmp
daa
ret
mov
sbb
push
sub
leave
mov
call
lods
mov
ds
dec
pop
mov
pop
ljmp
sbbb
popf
mov
popf
mov
sub
pop
or
cmp
rorb
cmpl
xchg
int3
icebp
sub
add
fs
xlat
out
in
xchg
pop
mov
lock
dec
lahf
xlat
jmp
sub
and
and
xchg
leave
inc
gs
mov
scas
and
pop
lods
jo
ret
movsl
xor
jne
jns
ljmp
inc
mov
or
imul
or
stc
mov
mov
xor
lret
jl
pusha
mov
or
xor
cmp
push
out
out
imul
add
jb
fs
xchg
jne
dec
pop
push
or
sbb
and
sub
adc
fs
roll
pop
xor
call
and
adc
cmp
loopne
aad
pop
and
and
mov
aaa
dec
popa
mov
lods
fldt
and
mov
push
cmpsb
xsaves
xchg
push
lahf
jbe
aaa
nop
ds
mov
sbb
pop
inc
std
mov
push
push
lods
mov
dec
xchg
mov
push
rcll
push
mull
cmp
mov
out
int
or
mov
pop
jle
xchg
mov
sub
out
xchg
push
dec
int3
iret
push
lret
xor
adc
out
fcomps
mov
jl
xchg
aaa
inc
xchg
mov
subl
stos
test
dec
inc
mov
jecxz
inc
popf
popa
cmp
pop
jnp
and
cmpsb
stos
xor
xor
or
clc
sarb
mov
sbbl
mov
sbb
rorl
dec
mov
fwait
sub
js
cmp
add
mov
jns
mov
sub
inc
fucomi
cmp
jnp
cwtl
inc
and
xor
test
add
or
push
and
mov
aas
aad
jmp
mov
push
inc
sub
xchg
leave
sbb
shlb
repz
daa
ret
scas
push
add
mov
lods
mov
cmp
mov
repnz
dec
lods
out
daa
sub
xchg
lret
mov
fdivrs
ret
inc
add
or
nop
pop
push
adc
jne
les
cmp
xor
mov
cmc
stos
imul
clc
mov
inc
pop
imul
push
jge
in
xchg
test
xchg
jb
sbb
sbb
es
int
mov
aas
pop
sub
push
xchg
imul
push
or
jbe
icebp
xor
jp
or
sub
xchg
dec
jge
out
cmc
mov
fnsave
in
mov
lcall
pop
sub
jg
mov
daa
ljmp
cmpsb
aad
jb
inc
fisttps
dec
xchg
loop
cmp
icebp
sbb
jae
sub
popf
sbb
jnp
mov
mov
std
mov
mov
mov
aam
push
or
jg
xchg
imul
sbb
out
inc
dec
mov
adc
xchg
test
push
push
daa
mov
mov
lret
rcrb
stc
mov
ds
lcall
xor
and
and
mov
outsb
push
lock
dec
mov
xor
imull
xlat
mov
imul
adc
jecxz
dec
inc
xchg
stos
jbe
jbe
out
xor
inc
jl
ljmp
sbb
push
xor
in
nop
push
repnz
sbb
dec
in
or
loop
jnp
mov
pop
adc
lds
ds
fwait
mov
pusha
fmull
subb
or
addr16
popa
sbb
inc
jnp
dec
or
adc
pop
arpl
and
cwtl
mov
cmc
hlt
jmp
inc
nop
cmpsb
std
sub
addr16
repnz
lods
mov
outsl
sbb
incb
stos
inc
adc
push
test
dec
mov
lea
xor
fnop
cmpsl
imul
mov
rcl
push
stos
mov
inc
lret
insb
call
dec
and
jno
sbb
mov
and
sub
dec
adc
scas
xchg
aaa
xor
lock
mov
stc
repz
sbb
pop
xchg
outsl
or
add
outsl
cmp
int
stos
js
jmp
push
in
outsl
sub
dec
and
fmuls
pop
jg
mov
cld
push
lret
mov
out
lret
push
push
rolb
mov
jne
pop
mov
cmpsl
mov
out
lods
cmp
mov
adc
aad
fidivs
ds
shrb
stc
ja
shrl
mov
xchg
cmc
dec
mov
outsl
cmpsb
test
sbb
cmp
rorb
lea
adc
std
jl
pop
popf
fsubrl
les
cli
add
test
lcall
push
or
push
xchg
scas
ret
mov
imul
aad
xchg
sbb
jge
in
in
or
pop
packssdw
aad
aam
cs
in
xchg
push
loop
into
xchg
push
sub
and
push
loop
pop
jmp
jmp
enter
push
cmp
xchg
fcmovne
xor
jno
mov
adc
or
add
pop
fs
shlb
mov
ds
out
mov
adc
fistl
jbe
lea
das
sti
movsl
sub
aaa
xor
fiadds
stc
sub
and
in
xchg
in
ds
jae
mov
mov
in
sti
push
in
xchg
je
xor
orb
int
jbe
sarl
jmp
mov
pop
xor
add
cmc
out
icebp
inc
xchg
in
icebp
stos
or
xlat
flds
shr
jns
cmc
out
rclb
stc
mov
pop
pop
fldcw
lods
jl
aas
in
xchg
lods
lcall
add
cmp
mov
xor
mov
jge
into
in
enter
sbb
mov
xor
pop
xchg
ss
xchg
adc
jne
jg
adc
inc
push
xchg
cmpsb
clc
mov
je
sbb
push
clc
inc
mov
add
xor
pop
ret
xor
mov
inc
pop
sub
push
inc
in
jl
imul
adc
push
in
aas
dec
dec
fisubs
mov
scas
fists
pusha
sbb
ss
xlat
push
xorl
outsb
out
pop
pop
jg
int
pushf
pop
mov
or
movl
imull
xchg
sub
mov
lods
jl
cs
inc
dec
fwait
cmc
movsb
cmp
std
jl
loop
repz
es
in
loop
pusha
xor
jno
cwtl
and
and
jo
xchg
fimull
add
xchg
sbb
lret
dec
fs
dec
dec
sbb
cmp
jbe
adcb
shll
add
insb
pop
fdivp
xchg
shrl
mov
add
sahf
les
jp
lods
movsb
cmpb
add
pop
add
rclb
stos
je
pushf
fwait
nop
es
mov
fldt
lds
hlt
or
push
movsl
clc
repnz
mov
sti
out
mov
hlt
and
or
mov
dec
stos
frstor
or
jne
xchg
mull
faddl
es
inc
xor
push
loopne
ret
bound
lock
sub
sar
mov
in
jge
das
xlat
mov
iret
inc
std
sbb
outsb
gs
push
and
or
mov
int3
mov
xchg
or
rcr
xchg
inc
das
inc
outsb
in
lret
cld
inc
test
mov
int
pop
xchg
cmp
sbb
adc
stc
loop
popa
inc
rcrb
test
sbb
push
mov
sahf
das
jl
cmp
cmp
mov
dec
iret
jge
xchg
xor
imul
mov
shll
pop
mov
in
mov
lock
leave
push
mov
les
push
mov
jbe
test
dec
popf
fadd
jg
or
mov
dec
jbe
jbe
push
jno
and
insb
or
lods
sub
fs
fstps
inc
mov
mov
lret
je
jns
loope
add
daa
xor
add
push
gs
stc
add
lahf
fimull
lock
test
popa
clc
nop
pop
aaa
ror
sbb
push
and
or
mov
sub
jg
adc
and
sbb
push
inc
push
xor
xor
xchg
mov
xor
sbb
cmp
subl
in
and
pop
mov
rclb
jae
dec
pusha
lds
mov
jne
js
mov
sub
and
mov
fcoms
mov
mov
repz
cmp
aas
test
test
mov
mov
jno
mov
fdivrl
loope
js
in
cmp
inc
jge
aaa
ja
cs
sub
icebp
pop
sub
orb
rclb
pop
fnsave
loopne
adc
and
mov
or
mov
mov
jne
dec
adc
push
and
aad
pusha
and
push
test
adc
xchg
dec
add
xchg
mov
lahf
inc
mov
mov
sbb
and
aam
into
cmp
pop
jno
xlat
rclb
fwait
je
pop
xchg
std
int3
and
stc
in
sub
fbld
pop
pushf
xchg
aaa
rorb
cs
inc
notb
jae
xlat
mov
adc
adc
insb
inc
pop
cmpl
xchg
xchg
inc
aas
sbb
inc
enter
outsb
jle
fildl
and
cmc
or
sub
call
and
movsl
mov
jle
push
fcmovnb
popa
sarl
jne
arpl
sbb
rclb
repz
add
mov
ljmp
daa
pop
cmp
mov
jno
adc
fcmovu
sahf
cmp
xchg
sbb
jle
imul
jnp,pn
jmp
sbb
adc
jge
inc
dec
xor
aad
xor
out
fistps
dec
ficomps
inc
mov
test
cmp
sub
stc
sbb
aaa
in
insl
test
fldcw
daa
add
scas
mov
sahf
xchg
adc
imulb
or
cwtl
add
xlat
scas
sbb
jbe
rclb
popf
bound
cmpsb
imul
mov
jns
xchg
cld
lret
out
xchg
mov
and
xor
sub
leave
xchg
mov
mov
cmp
jns
dec
sar
sahf
xchg
setae
mov
sti
jnp
cmc
fdivrp
jnp
xlat
cli
lods
leave
in
and
mov
adc
test
dec
insl
in
xor
mov
cmc
loopne
and
outsl
aaa
jno
hlt
lcall
push
clc
mov
int
loop
aad
xchg
xchg
jne
or
and
std
or
popa
xchg
cmp
push
std
jge
pop
lret
dec
mov
xchg
cmp
cmp
fldl2e
add
mov
lock
fs
lahf
sub
sarb
mov
fwait
push
xchg
call
xchg
sbb
pop
sbb
add
jecxz
mov
lods
test
jne
mov
jecxz
movsl
sbb
insb
icebp
pop
aam
lret
add
mov
mov
loop
push
loop
add
push
sbb
pmaddwd
movsb
jnp
push
pop
or
jecxz
mov
lods
aad
fistpl
adcb
dec
cltd
pop
push
sbb
rcr
jp
and
out
je
push
push
push
inc
jl
add
lret
test
pop
es
sbb
jne
test
pop
orb
aam
pop
jbe
movsb
dec
sbb
sub
mov
push
inc
or
out
roll
or
dec
out
sub
push
jmp
jae
inc
mov
roll
pop
pop
xchg
add
lret
dec
pop
jmp
sbb
repnz
out
mov
fbld
xchg
sub
pop
jle
adc
incb
aas
ss
xchg
sub
mov
jns
sub
gs
cld
pop
fstps
repnz
mov
or
jmp
xor
test
gs
push
fdivrs
fcmovne
push
mov
stc
xchg
loope
sahf
mov
inc
in
sbb
lahf
mov
mov
mov
out
add
in
lds
push
insl
vsqrtsd
cmp
iret
stos
dec
push
xchg
cld
mov
push
fnsave
sbb
sub
arpl
out
mov
xor
xor
cmpb
mov
xchg
orb
hlt
int
and
xlat
and
push
sub
push
mov
iret
add
jnp
mov
fldt
sti
lock
aad
and
xchg
add
icebp
hlt
mov
dec
push
mov
lret
outsb
adc
jmp
clc
enter
hlt
sub
outsl
sub
jmp
addr16
add
ret
cmp
jb
xor
xor
daa
mov
or
subb
jecxz
lret
add
push
jae
or
pushf
dec
int
add
std
mov
inc
es
lock
es
iret
imul
xchg
mov
leave
mov
or
clc
pop
adc
iret
jecxz
fidivl
mov
lret
inc
xchg
filds
mov
mov
popa
movsb
cmp
subb
adc
loope
js
inc
push
js
push
call
mull
test
daa
mov
xchg
push
out
dec
xor
movsl
roll
push
adc
sbb
xor
in
das
sbb
mov
jmp
sub
pop
mov
movsl
add
lcall
repnz
fnstenv
in
stos
adc
das
and
sbb
mov
xor
xor
sbb
enter
fs
mov
pusha
scas
movb
dec
stos
and
inc
sub
stc
dec
inc
mov
inc
cmpb
jb
ds
and
popl
or
xchg
imul
cmpl
inc
je
dec
rclb
sbb
js
lahf
test
xchg
bound
cmp
movsb
into
inc
jbe
mov
and
or
sbb
xchg
fisttps
sahf
je
leave
push
ss
cmp
sahf
shlb
xor
cld
movsb
mov
sbb
lahf
mov
jl
ror
stc
inc
pop
out
insl
or
xchg
ret
insl
aam
jns
fisubs
les
insb
pop
test
ds
sub
push
imul
push
imul
jnp
jnp
out
faddp
fisttpl
add
fisubrl
incb
cwtl
mov
std
jno
cltd
stos
adc
cs
cmp
out
push
sub
pop
sbb
mov
mov
dec
xor
mov
add
scas
pop
pop
std
push
push
and
gs
or
xchg
pop
inc
add
inc
mov
add
aaa
int3
aas
stos
sahf
mov
aaa
aas
xchg
loopne
push
popf
sub
xchg
sahf
mov
movsl
daa
out
icebp
lods
pusha
sub
adc
mov
in
mov
xor
mov
xor
cmpb
cmp
pop
movsb
and
andb
and
pop
pop
movb
pop
cmpsl
pushf
xlat
clc
imul
pop
mov
andb
jmp
mov
jae
gs
fcmovu
imul
push
sbb
fs
lods
in
daa
push
mov
sub
cld
sti
inc
fdivs
inc
adc
push
fisubs
sbb
js
pop
in
cmp
iret
fwait
sbb
dec
test
daa
popf
fmull
andl
pop
lcall
loopne
scas
cmc
aad
mov
test
mov
inc
jmp
aaa
mov
sub
das
stos
cmpsb
mov
xor
out
ficoms
sbb
push
mov
pop
addr16
sbb
imul
into
or
imul
daa
add
cld
idivb
push
test
roll
fistl
les
loopne
dec
rolb
hlt
lcall
jmp
add
xchg
cmpsb
jge
idivb
fs
xor
int3
outsl
ret
fdivrl
negb
cld
mov
and
pop
fld
dec
call
out
into
shrl
xchg
std
repz
fs
aas
adc
ljmp
dec
xchg
adc
icebp
outsl
cmpsl
iret
adc
add
insl
loopne
xchg
pusha
jle
dec
cwtl
clc
mov
inc
cmp
and
imul
pop
mov
xor
and
lods
and
push
push
mov
mov
sahf
push
and
cltd
addr16
into
daa
mov
cld
fisttps
outsl
hlt
xchg
sub
out
arpl
dec
xchg
hlt
lods
adc
mov
adc
popa
xchg
mov
inc
not
in
inc
push
xor
sahf
or
popa
mov
mov
push
cltd
and
pop
jle
mov
bound
rcrl
push
movsb
test
rcrl
popa
scas
movsl
std
out
roll
inc
imul
jnp
aas
les
pop
jge
inc
or
push
imul
and
sub
sub
pop
dec
lock
iret
adc
outsl
scas
testb
out
pop
cmp
jno
shlb
dec
addr16
mov
jo
shl
ret
pop
push
jno
sahf
in
push
push
aad
pop
loope
pop
xor
into
inc
dec
adc
shl
sbb
ficoml
icebp
les
or
test
push
addb
ljmp
and
jle
xchg
cmp
test
stos
lret
mov
stos
out
outsb
bound
inc
jmp
xor
lret
jno
outsb
inc
lods
pop
sub
add
bound
testl
insb
ret
sbb
xlat
mull
mov
je
js
dec
sub
adc
shll
fisttpll
sub
cmpsb
sub
mov
rorb
popa
jl
or
push
fwait
std
popa
mov
fnstsw
and
or
sbb
mov
mov
mov
leave
xchg
add
push
inc
inc
dec
popf
call
and
cmp
inc
ds
adc
xor
test
bound
cwtl
ret
jg
iret
dec
pop
fwait
scas
or
lret
inc
xchg
pop
mov
loop
sub
dec
xor
fwait
aad
xor
pop
push
into
pop
outsb
cld
or
mov
or
sbb
je
mov
push
pop
cmc
jbe
ret
out
rorb
daa
fucom
test
mov
xor
ror
aaa
ret
mov
add
wrmsr
les
push
add
sbb
ret
and
fdivr
or
cs
mov
sbb
jne
sbb
push
cmpsb
adc
sbb
mov
pop
xchg
jle
sbb
mov
repz
mov
fwait
jl
test
std
arpl
cmp
pushw
daa
xchg
and
mov
add
push
xor
add
jae
ljmp
bnd
popf
call
loope
mov
rol
shl
cmp
es
mov
sub
outsl
stc
fdivrs
add
ljmp
and
addb
mov
mov
sahf
out
xor
cltd
pop
imul
cwtl
test
sbb
hlt
or
xchg
dec
dec
mov
and
popf
mov
jg
xchg
dec
adc
test
cmpsl
push
jmp
arpl
je
pop
enter
pop
sti
fcomps
sub
lahf
mov
fsqrt
or
clc
inc
imul
cld
or
movaps
nop
lods
jmp
and
clc
fwait
cmp
aas
cmp
dec
inc
jo
pop
cmp
pop
adc
and
adc
insl
mov
mov
outsl
jae
nop
scas
cmp
or
fdivp
push
out
loopne
in
inc
ret
dec
mov
in
pop
mov
inc
mov
xchg
pop
xchg
ret
cmp
pushf
jg
in
int3
cwtl
xor
xor
imul
jnp
mov
or
push
les
and
add
rcrb
subl
add
adc
lock
iret
mov
roll
mov
add
mov
cmp
cmp
test
pushf
adc
mov
divl
or
gs
addl
gs
lcall
ds
lods
cli
jbe
fidivrs
and
fiaddl
mov
mov
inc
testb
shl
roll
sbbl
test
lock
movsb
ds
rcrb
insl
push
mov
roll
inc
sti
stc
xor
adc
aaa
mov
call
shl
mov
and
mov
rol
add
xor
push
sbb
bound
push
lret
scas
sahf
imul
les
sub
sbb
test
adcl
xchg
sub
mov
call
adc
cmc
adc
mov
hlt
sub
lret
xor
adc
inc
call
loop
jns
pop
fadd
inc
push
xor
xchg
mov
and
cmp
hlt
in
fs
inc
lea
dec
xor
leave
aas
inc
ret
mov
rorl
ficomps
lahf
or
xchg
testl
shl
insb
cmp
andl
je
test
call
rcrb
pushf
push
pop
pop
test
lods
dec
inc
add
roll
xor
cmp
repnz
jmp
adc
negl
cltd
lds
and
popf
dec
xchg
scas
add
adc
data16
out
cmp
push
push
lods
cld
stos
gs
imul
subl
mov
fildll
je
rcr
rolb
or
stos
jns
mov
les
add
lock
outsb
lret
xor
push
dec
push
pop
out
shlb
or
dec
dec
popa
mov
jne
int
aad
scas
comiss
rorb
into
into
mov
test
outsl
clc
xchg
sub
mov
scas
add
lcall
js
cmp
mov
das
in
pushf
pop
push
enter
cmp
sbb
xchg
dec
fwait
imul
popf
cmp
int
cltd
sub
lahf
mov
sub
cmp
daa
cmpsl
push
sub
icebp
ficoml
jge
fsubrl
outsb
stos
imul
out
test
xorb
rcr
aad
mov
pushl
loopne
negb
or
push
jecxz
dec
push
popa
stos
rolb
add
cltd
ds
decl
lock
cmp
shll
mov
nop
xchg
imul
outsl
mov
dec
popa
fidivl
js
xchg
test
jbe
xor
cmpsb
lock
fisubs
push
mov
cmc
push
adc
int
and
sub
lods
adc
dec
xchg
jp
xchg
fnsave
test
call
popa
adc
dec
leave
ja
sbb
cmp
or
add
shrl
mov
dec
negl
pop
jg
inc
fcoms
mov
push
stos
pop
mov
lret
call
aam
pop
mov
sub
andb
out
xor
js
sbb
adc
gs
lret
xor
push
dec
jns
xchg
xchg
fstpl
imul
sub
mov
inc
inc
pop
pushf
in
push
mov
es
cwtl
pop
xchg
sbb
fimull
cmp
nop
adc
ja
pop
ret
loope
iret
dec
leave
aaa
insl
into
out
fs
push
inc
jle
pop
sti
xchg
insl
cmp
and
xchg
mov
mov
xchg
cmp
adc
sub
jb
xchg
adc
pop
mov
pusha
push
add
or
je
loop
sub
mov
sub
sbb
add
mov
sub
jbe
out
cli
jecxz
xchg
imul
data16
jbe
dec
dec
lahf
push
cmc
addr16
push
leave
pop
xor
int
sub
sbb
xabort
and
dec
push
sub
xchg
add
std
test
aad
xchg
sbb
sbb
jb
loope
sbb
cmp
ret
bts
mov
daa
es
sti
imul
loopne
std
push
daa
xchg
jl
in
push
push
and
repz
mov
or
adc
add
divb
fadds
movsb
xchg
mov
bnd
cmp
mov
dec
testl
movsb
and
jg
orb
out
cmpl
jl
jge
imul
lea
dec
ret
clc
sub
sub
cmpl
add
fadd
aad
jl
fwait
out
mov
adc
mov
test
je
ljmp
rolb
xchg
pusha
jp
or
jp
aam
adc
jl
loopne
or
jmp
loope
mov
imul
xchg
pusha
pushf
mov
cmp
pop
cmp
pop
stos
and
add
jg
cli
enter
inc
lods
ljmp
out
ljmp
fistps
movsb
fstps
lret
jno
in
mov
xchg
ja
cwtl
sbb
imul
xor
and
jg
scas
pop
cmc
push
push
pusha
loopne
push
hlt
fcoml
and
pop
lahf
fiadds
shl
xchg
xor
das
xchg
sub
andb
ljmp
pop
push
cmc
or
shrb
dec
adc
fsubrl
sti
scas
adc
arpl
xchg
sub
fsubrs
dec
ds
sbb
lret
outsl
mov
push
stos
and
xchg
addl
stc
cmp
mov
insb
iret
aas
or
mov
jb
and
adc
arpl
call
daa
jle
mov
mov
outsb
mov
lea
mov
ljmp
cmp
xchg
cmp
rorb
push
ret
jg
dec
add
push
xchg
mov
cltd
xor
mov
js
adc
out
mov
dec
out
mov
in
sub
loop
nop
aaa
cld
cmp
movsl
fisubs
bound
fistpll
adc
repnz
outsb
out
xchg
in
pop
loopne
popa
mov
je
mov
pop
sub
fwait
pop
fnstcw
pusha
fwait
notb
mov
addr16
jecxz
jp
les
or
dec
mov
sarb
scas
or
jp
inc
bound
pop
fimuls
cltd
push
fbstp
in
sbb
clc
in
lods
loop
mov
fwait
mov
ret
cltd
fisubs
cmp
inc
sbb
clc
daa
push
mov
bswap
adc
mov
mov
scas
cmp
gs
nop
cld
test
lods
sub
out
sub
enter
ljmp
ljmp
jo
sti
es
mov
outsl
mov
scas
lods
stos
or
inc
push
or
ret
adc
or
ljmp
cld
mov
arpl
add
lods
mov
push
das
stos
mov
push
outsl
mov
cld
mov
xchg
add
out
inc
inc
jle
outsl
mov
arpl
testb
scas
cmpsb
sub
mov
jne
xor
aaa
jle
cmp
xchg
push
aad
pop
jbe
insl
jg
sbb
decl
jle
imul
outsb
adc
xor
or
testb
iret
dec
imul
inc
push
push
inc
push
mov
fadds
push
lds
out
cmp
inc
xor
cs
cmp
and
rorl
add
loop
loop
mov
movsw
stos
cmpsb
cmp
hlt
fstpt
sbbl
push
add
js
pop
outsb
mov
add
fs
fisubrl
and
ja
jecxz
stc
cld
jbe
push
jp
cmp
pop
mov
insb
or
mov
adc
inc
add
add
jmp
cli
adc
fstps
pop
adc
imul
sbbl
insb
or
js
pop
or
fwait
lods
testb
xchg
scas
inc
rclb
xchg
lcall
cmp
cmpl
jno
lcall
ss
cmp
mov
rclb
sbb
adc
fs
call
inc
mov
fsubl
mov
dec
cmp
push
into
scas
in
aaa
add
push
or
push
outsb
or
das
push
notb
xor
xchg
pop
push
hlt
in
ret
jecxz
cmp
mov
imul
cmc
and
and
shll
test
cmp
lcall
scas
mov
mov
push
imul
adc
jb
inc
mov
sub
xchg
mov
inc
sbb
mov
dec
test
arpl
fisttps
mov
push
cmpsl
arpl
sahf
bound
xlat
cli
push
jb
dec
test
testb
test
push
into
jb
andb
in
push
inc
ret
jmp
lret
adc
test
jg
add
repnz
mov
roll
aad
mov
clc
mov
pushf
pop
xlat
sbb
scas
call
filds
mov
data16
les
aaa
inc
call
mov
les
loop
int
test
push
jae
adcl
adc
fimull
lahf
push
data16
in
test
hlt
add
mov
and
mov
or
pop
xor
and
in
add
in
lea
dec
in
scas
fcoml
mov
addr16
stos
fisubs
adc
decb
jle
fcompl
lock
daa
jmp
mov
test
sub
xor
and
pusha
add
inc
imulb
mov
or
fwait
sbb
jmp
ja
addl
dec
fildll
cmp
popa
repnz
pop
out
xor
iret
pop
jno
popf
or
push
add
cmp
sbb
int3
ljmp
in
out
mov
mov
mov
shr
pop
out
and
sub
pop
lret
pop
test
loop
and
xor
testb
cmc
fidivl
pop
loopne
mov
and
cmp
and
loop
mov
lea
sub
clc
test
fdivrl
mov
xor
jb
add
jecxz
sbbl
pop
mov
mov
inc
outsl
xorl
lcall
sahf
mov
lahf
xor
or
jg
mulb
out
mov
int3
inc
dec
cmp
mov
sub
in
ja
cmp
stc
fcoml
das
mov
mov
mov
adc
fwait
lahf
adc
push
ds
push
mov
mov
adc
xor
lret
push
push
xchg
xorb
or
std
jle
fcmovnbe
add
pop
cmp
push
cld
nop
in
and
inc
cmpsb
clc
xlat
pop
arpl
test
push
mov
ret
sub
out
ds
sub
imul
nop
jnp
icebp
sub
dec
xor
dec
movsb
call
and
loope
sbb
lods
xlat
ret
frstor
sbb
arpl
les
outsl
jnp
xor
addr16
cld
sub
push
pop
inc
aad
lods
std
test
push
mov
push
loopne
jne
iret
cmpb
aas
pop
cmp
jb
sti
xchg
rol
xchg
fidivrl
in
es
pop
sbb
es
mov
shl
adc
add
pop
imul
xor
testl
mov
lahf
xchg
std
mov
js
stc
jge
or
sti
jmp
das
lds
iret
into
aas
pushf
pop
cld
dec
sub
inc
sub
sub
orl
lret
movsl
icebp
push
sbb
popf
xchg
or
or
dec
int
movsb
iret
cwtl
cmp
scas
push
push
push
sub
cmp
mov
sub
hlt
and
aaa
pushf
and
aam
sub
add
int
fsub
sub
mov
out
mov
fnstcw
aad
gs
adc
int
lret
sub
rolb
and
mov
jmp
xor
mov
sbb
je
ret
adc
dec
and
and
rorl
scas
cmp
mov
movsb
sub
push
mov
jge
rorl
adc
dec
sti
mov
dec
lahf
pop
out
jno
rcll
push
sbbb
push
sub
pop
out
pop
mov
push
cmpl
dec
call
xchg
cmc
xor
imulb
xor
pop
pop
mov
jo
ret
and
sbb
cmp
movsb
stos
lea
sbb
inc
jmp
push
lock
loopne
jnp
fnstenv
loopne
aaa
shll
lods
loop
push
inc
pop
xor
hlt
add
out
push
jle
setge
sub
je
mov
cltd
stos
adc
mov
and
inc
cmpsl
outsb
cmp
gs
test
in
cmp
int
sbb
popf
leave
mov
jbe
dec
mov
jo
outsb
movsl
neg
addr16
pop
push
and
add
mov
int
test
pop
push
dec
int3
inc
hlt
popf
pop
insl
push
dec
mov
inc
jle
fadd
movsb
pop
imul
pop
jle
sti
sub
xchg
mov
push
or
push
mov
xchg
movsl
xor
jnp
pop
cmp
and
adc
inc
inc
xor
inc
aad
aaa
mov
cmc
xor
sub
insl
lds
ljmp
add
sbb
lea
outsb
xor
inc
addb
cli
push
out
inc
stos
scas
or
aaa
ret
sahf
mov
mov
inc
cmp
and
xchg
jl
nop
jbe
sbb
cmp
cs
xchg
pop
es
fwait
mov
test
adc
and
mov
jb
pop
lcall
sub
cmp
jbe
cwtl
dec
sub
test
mov
stos
cltd
data16
add
out
flds
enter
jecxz
sbb
mov
negb
push
jae
lock
pushf
aas
std
or
les
shlb
rcl
mov
and
repz
loop
and
ficompl
push
xor
sti
cmp
stos
jp
loope
push
idivl
pop
and
mov
clc
or
cmp
data16
dec
aas
mov
nop
push
icebp
mov
stos
and
push
mov
imul
adc
idivb
lahf
daa
mov
dec
fs
mov
lock
ret
add
lret
or
or
outsb
push
push
aaa
cmp
popf
mov
pop
das
movsl
dec
push
mov
sbb
in
mov
cld
sarl
jb
xchg
dec
adc
sub
leave
imul
ficomps
out
inc
dec
jecxz
cli
mov
mov
add
jle
test
call
pop
push
divps
jne
les
cmp
add
test
rcl
out
lods
mov
fistl
je
out
scas
cmpsb
stos
hlt
fs
adc
pop
lahf
dec
fildl
pop
or
xchg
sub
or
fwait
sbb
aam
add
popf
dec
std
sbb
icebp
xor
loop
sbb
sbb
call
push
aam
and
out
sub
fwait
jbe
stos
cld
or
mov
sub
cmc
dec
mov
out
add
pop
pop
mov
inc
push
add
adc
pop
imul
fdivl
or
in
fstps
imul
mov
push
mov
inc
cli
add
clc
add
xchg
push
mov
push
icebp
xor
mov
mov
add
xchg
xor
loopne
jmp
cmp
and
in
sbb
jno
js
aas
out
leave
mov
loopw
jnp,pn
cmp
jp
sbb
mov
cmp
push
mov
int3
inc
adc
int3
js
out
jl
dec
jmp
jmp
add
aas
cs
loope
or
cmp
in
imul
aaa
daa
dec
mov
aad
add
xchg
inc
popa
inc
les
push
sbb
and
lret
popa
push
imul
loopne
gs
mov
cmpsb
pop
jo
jo
and
xchg
mov
add
jmp
mull
ja
add
aad
cli
cmpsl
and
inc
push
mov
lds
test
cmpsl
insl
scas
and
mov
lcall
enter
mov
xor
in
jecxz
das
outsb
cmp
jle
stc
mov
xchg
jne
icebp
out
into
xor
cmp
out
jle
and
xchg
pop
cs
hlt
cmp
mov
flds
stc
mov
js
jmp
jecxz
dec
stos
ja
cmp
stc
mov
mov
aaa
jge
mov
or
sbbl
lahf
shlb
cmpl
outsb
scas
into
test
xor
sub
inc
add
test
mov
cli
aaa
insl
adc
jecxz
lret
mov
icebp
mov
xchg
mov
or
jmp
mov
and
fisubl
mov
lds
fs
sub
mov
outsb
loop
aas
xor
jne
add
cwtl
testb
out
sbb
dec
test
mov
dec
inc
push
loop
or
xchg
push
mov
fiaddl
or
add
mov
jno
fwait
adc
out
into
lahf
addr16
dec
cmp
inc
push
out
ljmp
test
and
sbb
mov
adc
lock
jecxz
in
and
mov
fildl
jno
cmp
out
rcr
jae
push
xchg
inc
or
and
jb
imulb
pushf
push
jb
sbb
xor
push
in
xchg
push
dec
aas
int3
test
sar
mov
xor
xchg
mov
push
push
adc
scas
lret
xchg
cld
dec
mov
pop
or
pop
movsl
inc
in
xchg
pop
ss
cmpsb
je
dec
push
jbe
popf
push
push
sti
cmp
mov
mov
or
mov
ret
addr16
jge
adc
pop
mov
add
das
push
cld
sub
rcrb
leave
cmp
sbb
pop
imul
negl
call
or
les
out
repz
mov
jecxz
xchg
inc
or
cmp
fbld
xchg
ja
rcrl
das
hlt
cmp
fisubl
mov
mov
addb
cmpsb
mov
mov
or
cmp
cmp
inc
inc
ss
sub
stos
pop
fidivrs
arpl
jne
and
das
sbb
xchg
iret
inc
or
or
mov
lret
mov
pop
xchg
push
and
into
pop
lcall
adc
aas
inc
int
cwtl
lods
or
xor
mov
mov
dec
push
mov
dec
or
xchg
leave
add
ss
sub
out
fmul
cmp
loop
sub
sub
mov
mov
dec
in
movsb
lret
pop
mov
cmpsb
cmp
mov
mov
xor
and
push
mov
shll
dec
or
push
pop
mov
lea
testl
outsb
shlb
or
in
lret
mov
rolb
fisubrl
sbb
arpl
inc
cmp
jle
inc
mov
mov
repnz
push
pushf
jge
out
aas
std
leave
adc
movsb
lea
roll
out
inc
jmp
pop
enter
out
int
insl
mov
pop
adc
lds
cs
inc
xchg
mov
dec
fscale
lret
out
ja
mov
add
call
adc
into
fucomip
mov
ljmp
mov
enter
jb
push
sti
fstpl
adc
add
lcall
mov
fcomi
inc
push
test
cwtl
lret
aaa
sub
adcb
bound
sub
add
mov
call
jno
inc
jmp
add
scas
sbb
lods
inc
in
cli
out
or
sub
in
mov
xor
jb
xchg
je
mov
dec
inc
add
push
push
mov
mov
cmpsb
jo
hlt
cmp
das
fld
repnz
lods
pop
inc
mov
loopne
hlt
lahf
cmp
inc
addb
scas
mov
cmp
int3
xchg
mov
add
jge
jge
mov
or
adc
lret
iret
lret
adc
push
test
dec
push
mov
aaa
aaa
push
fld
sbb
fstpt
stc
test
ja
pop
jns
stos
add
push
test
sub
mov
je
rorl
dec
cmp
shrl
cmp
xchg
int3
cmp
rolb
out
jle
mov
jl
fwait
enter
xor
pop
dec
pop
mov
out
jge
dec
lahf
mov
adc
or
out
mov
fcompl
rolb
fildl
add
push
pop
addr16
outsl
and
cmp
mov
mov
xchg
daa
jge
das
nop
sub
mov
inc
adc
xchg
or
sahf
sub
xor
mov
sbb
outsl
mov
daa
pop
adc
ds
jbe
in
and
add
fimuls
xor
jecxz
sahf
pop
jle
xlat
push
cli
sub
ficomps
push
or
jmp
xchg
enter
inc
xchg
adc
jle
leave
test
xchg
mov
jo
xor
repnz
lahf
mov
cli
movsl
ficompl
bound
mov
into
into
shlb
inc
lock
lahf
je
jl
push
inc
dec
bound
js
xor
cs
or
test
fbld
dec
test
xchg
enter
cmp
dec
dec
cmc
rcl
sahf
scas
fisubrs
mov
mov
jg
xor
push
inc
imul
adc
cmp
lods
or
out
inc
gs
jo
xor
xchg
cmp
stos
cmc
popa
pop
sub
arpl
notl
sbb
cmp
mov
mov
mov
mov
sbb
jns
fistps
jmp
fs
sbb
mov
mov
cmc
add
neg
adc
inc
aas
dec
aad
push
sbb
jb
mov
mov
mov
sub
dec
lods
xchg
xor
cmpsl
js
inc
loopne
dec
jge
pop
mov
lds
mov
arpl
cmp
or
movsl
or
mov
xchg
cmp
sub
jb
adc
mov
cli
inc
je
cmp
jno
loopne
pop
sub
xor
insb
shl
dec
sarb
shlb
add
add
push
jp
dec
xchg
xchg
and
daa
add
mov
mov
jecxz
xchg
mov
sub
subl
idivl
or
add
jbe
mov
aaa
xor
or
es
cmp
dec
nop
lret
scas
mov
pop
dec
and
mov
xchg
cmp
mov
pop
orb
nop
xor
sub
cld
iret
je
loope
pop
pop
aaa
mov
repz
push
pop
lret
push
fsubl
stc
xor
sarl
sbbb
jo
dec
imul
iret
repnz
sbb
leave
push
enter
xchg
mov
out
mov
sbbb
mov
push
add
cmpsb
jo
ja
sti
cmp
test
stc
sub
fiaddl
push
dec
sub
into
negb
adc
add
mov
inc
xchg
jl
repz
adc
cmpsl
mov
loopne
sbb
outsl
int3
je
ja
or
ret
sbb
xchg
clc
sub
xchg
mov
jbe
insb
cmc
xor
xor
pop
and
dec
hlt
int3
pop
call
or
hlt
iret
and
sub
mov
jle
es
stos
push
mov
mov
mov
sahf
push
lcall
mov
mov
pop
ret
fldcw
jne
sub
negb
dec
push
ja
sti
inc
jno
push
xchg
pop
fsts
sub
and
test
popa
cs
daa
mov
push
sub
mov
push
pop
jle
rcrb
arpl
inc
add
out
mov
jl
je
cmp
lcall
out
aas
cli
or
xchg
or
push
jo
stos
push
std
das
negl
scas
dec
enter
adc
leave
movsl
imul
in
sahf
ja
pop
aad
pusha
pop
adc
sbb
bound
jp
sar
jne
nop
and
addr16
mov
cmp
mov
cwtl
xorb
push
sbb
sbb
rorb
out
mov
sbb
jecxz
jg
cld
fs
ss
lods
mov
jno
addr16
es
jae
icebp
nop
mov
xchg
call
call
ss
mov
cmp
loop
jmp
daa
jb
push
pop
and
ds
xor
insl
dec
jae
mov
inc
fiaddl
aas
xor
xor
lds
xchg
ss
adc
or
dec
and
cmp
out
cwtl
sbb
hlt
sub
ret
pusha
repz
xchg
push
xlat
nop
mov
xchg
or
push
or
mov
mov
popl
repnz
cmpsb
stc
add
pop
jecxz
add
dec
mov
adc
xchg
inc
dec
jmp
outsl
sbb
out
cmp
mov
fstp
cmpsb
rclb
mov
cs
or
jle
add
jle
clc
xchg
outsl
dec
push
out
insl
pop
in
dec
movsl
js
adc
sub
scas
or
dec
movsl
shll
xchg
push
call
mov
cmp
pop
mov
inc
xor
adc
incl
dec
iret
bound
and
push
frstor
pop
xchg
rcl
push
mov
int3
fld1
push
popf
sub
xlat
iret
xor
aas
push
leave
mov
inc
jns
rcrb
iret
inc
jp
push
sub
es
jg
testb
je
fimuls
jae
hlt
pop
lods
lods
pop
sahf
lahf
les
mov
ret
lds
jb
xchg
mov
xchg
xor
pop
dec
push
jae
fsubrs
mov
cmpsl
je
push
dec
insb
mov
fisubrs
pop
and
add
test
sub
cmp
loopne
xor
cmp
xchg
rcrl
jnp
mov
sbb
cli
push
aas
imul
call
in
pop
incl
es
mov
push
xchg
std
js
stos
cmc
je
iret
imul
cmp
lods
jne
outsb
in
mov
shrb
mov
mov
mov
nop
icebp
cli
sti
ss
xor
add
loop
int3
in
aaa
fst
ret
mov
adc
fs
push
xor
aam
scas
jns
add
out
dec
bound
pop
loopne
xor
lock
or
mov
add
ret
mov
aad
xor
outsb
lds
push
and
xorl
in
shrb
and
outsb
out
jne
sub
mov
call
bnd
in
ja
cmpsb
mov
mov
pop
push
dec
or
out
dec
lret
daa
jno
clc
or
pop
fisttps
mov
or
cmp
cli
and
ss
xlat
dec
popf
add
jae
adc
or
nop
pop
loope
sbb
pop
inc
adc
daa
sbb
inc
cmp
push
sbb
cmp
test
fsubrs
in
mov
lcall
rolb
push
cld
mov
ret
cmpsb
mov
mov
jmp
cmp
cmp
and
daa
shll
add
iret
and
adc
sub
mov
movsb
add
leave
jp
scas
nop
jg
lods
xchg
xchg
and
loop
or
icebp
lock
pop
das
lret
pop
inc
lods
in
fwait
cli
stos
inc
inc
add
inc
cmp
cmpsl
jnp
inc
jp
mov
fwait
add
movsl
sub
xchg
push
pushw
pop
push
dec
adc
cmp
jae
insb
cld
add
jo
pop
insl
push
and
inc
xor
add
sbb
test
pop
cmp
xchg
or
xorl
dec
push
push
and
or
sub
pop
aam
or
fwait
jp
push
xor
and
or
sub
in
mov
push
repnz
in
stos
lcall
and
hlt
add
sub
fildl
bound
dec
jecxz
and
mov
pushl
lds
mov
scas
rolb
pushf
xchg
inc
cmp
xlat
mov
addr16
xor
mov
push
stos
daa
rcl
cmpsb
cs
call
push
add
data16
into
ds
divb
mov
push
stos
in
js
outsl
ljmp
push
xchg
add
test
movsb
jns
iret
mov
xor
insl
xchg
stc
sub
cmp
pop
subb
mov
sub
sbb
leave
or
out
ljmp
inc
jecxz
and
sub
enter
mov
jne
fldcw
inc
into
call
mov
mov
cmpsl
mov
xchg
jbe
sbb
mov
ror
sbb
add
std
mov
pop
das
adc
mov
adc
push
ret
jge
pop
jmp
aas
in
lods
cmp
mov
ficompl
fmuls
ds
add
fdivp
insb
inc
or
dec
jno
icebp
sahf
pusha
adc
pop
pop
loopne
lahf
xor
inc
shlb
cmpsb
cmc
int
popa
in
xchg
inc
pop
pop
lcall
mov
ljmp
sbb
call
fdivs
mov
jmp
test
jb
andb
sbb
and
into
call
inc
sbb
sti
jle
sbb
sbb
jbe
cmp
pop
test
out
test
mov
aam
sub
cmp
pop
sub
jmp
add
roll
mov
mov
mov
add
push
stos
loop
imul
cmc
dec
or
fisubrl
in
bnd
dec
sbb
mov
test
mov
loopne
jge
adc
jbe
fsubs
ror
sbb
or
mov
mov
mov
xchg
push
test
shlb
jae
shrl
cs
in
movsb
rcrb
js
leave
inc
pop
jle
ret
sbb
movsb
dec
cltd
pusha
add
jns
loop
inc
dec
dec
lock
inc
clc
add
les
cli
aas
pop
outsl
fdivr
xchg
mov
lahf
pusha
jmp
jb
mov
adc
shrb
movb
inc
test
adc
mov
aam
dec
aad
cmpsb
adc
test
nop
mov
push
sub
inc
frstor
fcmovb
popl
mov
leave
and
lea
imul
daa
jbe
imul
cs
sbb
add
xor
lea
and
sub
xor
outsb
mov
sbb
dec
and
clc
xor
pop
pushf
dec
mov
ficoml
pop
mov
mov
xchg
loopne
dec
je
aam
and
pop
sahf
fdivl
aaa
dec
cmc
jbe
lcall
enter
stos
cmp
imul
cmp
cmp
stos
and
add
ss
fs
in
cmpxchg
lods
fidivl
mov
jmp
inc
fdivl
sbb
fmuls
andb
pop
sub
rolb
dec
js
loopne
xchg
ss
xchg
pop
xchg
mov
icebp
lret
mov
dec
repz
ficomps
fimuls
shll
sti
fs
inc
adc
cmp
push
mulb
out
pop
mov
add
mov
incl
and
jge
mov
jae
sbb
dec
sbb
rol
push
stc
loop
jbe
push
adc
pop
out
mov
jle
mov
xchg
rcr
pop
or
scas
pop
push
hlt
sbb
hlt
aam
mov
enter
push
add
sbb
jle
cmp
outsl
add
cwtl
cmp
jbe
xorl
cltd
mov
adc
repz
aaa
data16
loope
inc
xor
pop
shll
aaa
adc
ja
in
jle
sbb
daa
lahf
dec
mov
int3
xor
jnp
or
pop
adc
or
lds
mov
clc
push
pop
push
push
mov
pop
aad
adc
movsl
add
xor
lahf
jns
xor
pop
jbe
ret
jbe
cs
mov
rorl
mov
iret
jnp
fildl
in
call
repz
jle
pop
push
clc
int
icebp
jne
mov
or
jns
pmullw
pop
test
in
lock
les
push
sub
jbe
mov
or
pop
cwtl
pop
mov
in
lcall
testl
js
fmuls
in
jnp
int3
arpl
xor
xchg
inc
dec
jo
sub
sub
out
xor
call
cmp
pop
stos
fistpll
jl
or
btcl
mov
mov
testb
xor
cmpsl
inc
adc
adc
js
sbb
cld
add
fnstenv
andl
and
shr
inc
push
push
xchg
sub
pop
sbb
mov
daa
push
xor
sahf
xchg
enter
fmull
push
fisttpll
sahf
xor
mov
xor
pusha
pop
test
in
xor
jmp
es
mov
mov
dec
sub
es
aas
cmp
rcll
inc
push
pop
xchg
jb
add
xchg
fwait
push
les
push
jmp
ret
mov
fsubrl
ds
jne
dec
cmpsl
shrb
leave
test
adc
push
lods
sbb
jnp
xor
int
dec
mov
pop
jmp
sbb
imul
lds
cmp
dec
mul
std
call
cs
pop
pop
test
out
mov
jp
cmp
mov
dec
mov
jbe
mov
pop
pushf
lcall
cs
in
dec
decl
add
dec
adc
mull
mov
sub
sub
cmp
popf
dec
cli
dec
jmp
in
jns
addr16
popa
adc
lods
jecxz
adc
mov
sub
xor
push
dec
push
mov
adc
fisubrs
insl
xor
push
inc
les
add
fstps
hlt
leave
shld
xor
jl
les
cmp
jno
dec
sub
call
and
and
jae
adc
call
das
push
jb
dec
push
jne
xchg
nop
adc
test
cmp
test
pop
faddl
jecxz
push
fwait
pop
jb
push
imul
mov
popf
and
push
ljmp
inc
shrl
push
cmp
hlt
sub
or
xchg
outsb
loope
iret
mov
add
pop
sub
out
imul
mov
mov
fistl
xchg
or
push
jae
xlat
and
jl
xor
pop
cs
sbb
jo
mov
int
and
adc
mov
lcall
xchg
xchg
fcomps
push
mov
pop
fistl
mov
addr16
jne
sbb
shlb
or
cmp
push
mov
lods
push
aam
loope
hlt
adc
jb
loop
mov
cmp
adcb
inc
adc
sbb
std
xchg
loopne
jle
pop
xchg
pop
outsw
shrl
and
xor
inc
popf
fcoml
mov
pop
dec
jl
fcmovnbe
cmp
pop
cmp
push
xchg
jbe
jne
xor
cltd
inc
mov
loopne
sub
add
dec
adc
xor
stos
add
xchg
sbb
pop
outsb
ljmp
scas
sbb
mov
mov
adc
adc
push
and
push
rolb
decb
movsl
pop
pop
sub
fdivrp
xchg
adc
lret
insl
iret
jp
inc
fnstenv
mov
stc
sbb
sbb
hlt
cmp
test
jns
xlat
xor
ja
outsb
inc
fs
adcl
xchg
push
cs
out
pop
scas
dec
pop
push
into
lods
aaa
lahf
sahf
dec
movb
cli
enter
rcll
fs
push
call
sbb
fdivs
xor
div
mov
xchg
out
dec
and
inc
cmp
and
sti
std
scas
and
dec
sbb
into
mov
mov
jl
adc
cmp
cmpsb
adcl
adc
cmp
cltd
adc
imul
or
icebp
test
inc
lret
cmp
out
xor
add
in
pop
add
mov
mov
les
xchg
lds
sbb
stos
xchg
xor
movsl
sbb
xor
push
dec
bound
repnz
ret
xor
iret
shrl
lcall
setne
test
pop
pop
movsl
cmp
test
xlat
ss
xor
lret
cmpsb
mov
pop
adc
adc
popf
stc
in
loopne
mov
addr16
jbe
mov
sbb
sbbb
mov
jmp
test
jno
mov
mov
xchg
aaa
out
sbb
lcall
push
xchg
jmp
mov
ficoms
cs
into
jg
movsb
insl
mov
insb
cmc
inc
stos
add
xlat
cmp
fwait
in
cmp
inc
test
scas
adc
fwait
test
jecxz
mov
sbb
iret
inc
inc
pop
pop
or
xor
dec
test
jbe
loopne
jno
add
or
xor
fs
test
cltd
cmpsb
lea
or
push
icebp
je
test
dec
add
loop
pop
xchg
mov
out
pop
cmp
cmp
add
jb
sub
movsb
enter
pop
push
movl
sbb
cmpsl
sahf
int3
ljmp
dec
or
cltd
mov
mov
arpl
lahf
lea
xchg
inc
leave
fwait
pop
jno
fnsave
scas
data16
sub
pop
mov
cmp
hlt
ret
mov
ret
out
andl
cmp
mov
push
lret
sub
dec
aaa
movsl
pop
test
or
xchg
int3
dec
fldenv
dec
int
dec
xor
or
out
inc
test
pop
push
sbb
mov
pop
fdivrl
dec
lret
jne
xor
push
icebp
xor
sbb
insb
push
addr16
xor
mov
outsb
and
dec
inc
jle
dec
repz
dec
xchg
jmp
mov
inc
pop
fadds
shll
lock
mov
pop
mov
clc
dec
or
mov
movb
and
or
and
loopne
mov
jo
stos
or
fstpl
pop
cmc
into
mov
mov
mov
popa
jno
mov
dec
inc
xor
out
sbb
inc
stos
cmp
dec
into
jae
call
push
jno,pt
dec
add
mov
inc
xor
inc
lods
push
test
std
push
inc
addr16
adc
jmp
into
mov
xor
inc
imul
and
xabort
xchg
dec
stos
cmpsl
scas
pop
cs
or
sbb
fcompl
stos
xor
jns
stos
xchg
ss
lahf
sub
pop
xchg
xor
insl
adc
cs
loopne
xor
arpl
xor
and
stos
data16
fstpt
sahf
call
mov
std
jp
push
push
data16
pop
push
sub
popl
jno
xlat
nop
push
push
sbb
mov
daa
cwtl
mov
lods
and
repnz
mov
mov
shl
in
mov
addb
out
insb
mov
push
loop
cmp
movsb
fisttpll
and
in
fistps
bound
aam
fcom
add
scas
adc
insl
movsb
inc
out
leave
jne
sbb
lea
add
pusha
xor
lods
add
dec
into
inc
jns
push
mov
cli
mov
add
or
and
lods
fisubl
push
call
xchg
dec
jb
cld
or
cmp
iret
imul
pop
aam
dec
lret
add
cli
dec
xchg
pusha
push
inc
mov
adc
pusha
arpl
push
jp
xlat
lods
sub
ret
lock
xor
inc
xchg
sub
jg
fsub
or
cli
cmpsb
xchg
sub
sub
push
mov
dec
ret
in
les
outsb
pop
mov
sub
daa
add
je
mov
sarb
out
arpl
rcrl
fwait
cmp
or
out
or
lret
lahf
inc
cld
clc
cmp
ljmp
shlb
jecxz
out
pop
xchg
cld
push
add
push
add
pop
mov
and
bound
mov
cs
inc
imul
es
or
mov
das
and
xchg
dec
sbb
sub
frstor
hlt
jo
inc
cmp
mov
jbe
outsb
out
bound
mov
ss
mov
push
pop
aad
mov
mov
out
mov
test
mov
mov
push
out
je
jae
addr16
les
lret
cmp
into
aam
cmp
jg
inc
mov
dec
js
sbb
mov
mov
btrl
dec
jecxz
ss
lahf
and
push
aam
cmpsl
out
outsl
xchg
cmp
daa
imul
jo
sbb
xor
nop
ret
jmp
mov
dec
dec
xchg
test
ret
call
fidivl
pop
push
inc
mov
out
out
jmp
fsubrs
pop
and
jecxz
and
es
out
jecxz
in
jnp
push
and
mov
adc
mov
notl
mov
iret
mov
js
jp
cmp
jns,pt
push
cmp
mov
push
xor
sbb
lcall
ds
sahf
cmp
dec
out
xchg
jle
in
xor
movsb
lods
bound
pop
je
inc
addr16
scas
dec
mov
loope
jecxz
mov
mov
sbb
cmp
pop
lods
sbb
mov
stos
scas
popa
mov
inc
mov
clc
sub
ja
xor
mov
aas
xor
dec
push
in
das
xchg
loop
cs
sti
jmp
lock
mov
dec
push
push
cmp
xchg
mov
aam
or
adc
pop
push
sbb
aad
and
mov
push
sub
cmp
and
ja
sbbb
xchg
aaa
fsincos
insl
cmp
add
enter
mov
data16
dec
out
les
mov
xchg
adc
push
mov
mov
pushf
fwait
cmc
and
rorb
jns
mov
sbb
neg
push
jb
xor
or
cmp
enter
leave
subl
add
push
push
cmp
or
insl
adc
push
push
sub
pop
negb
test
add
fisttps
outsl
mov
add
xchg
orl
mov
cmpsl
lock
pop
and
das
mov
mov
iret
pusha
sbb
sbb
mov
add
and
and
mov
imul
push
xchg
jo
mov
inc
fldcw
xor
sahf
cld
jle
aad
sub
xchg
scas
pop
mov
in
adc
mov
orb
ret
push
je
inc
loop
xor
cwtl
pop
and
mov
mov
ljmp
and
loopne
xor
sbb
or
dec
mov
push
xor
or
iret
jno
mov
stos
lds
mov
rcrb
bound
and
sbb
outsb
test
dec
or
jmp
mov
cltd
in
negb
leave
clc
push
and
or
aaa
xchg
mov
add
xchg
adc
cmpsb
inc
adc
inc
fcompl
rol
cld
jge
adc
in
xchg
fcmovnu
cmp
popa
xor
add
mov
or
fldenv
jo
mov
ljmp
or
jno
in
fsubl
imul
and
in
mov
mov
sbb
scas
mov
fwait
push
popa
xchg
ret
test
dec
or
cmp
or
pop
xor
sbb
hlt
push
andb
pusha
xor
mov
sarb
lcall
add
paddd
mov
mov
inc
movsb
ja
test
test
jmp
out
out
dec
push
inc
out
and
out
int
in
and
mov
push
adc
xor
jl
andl
das
loope
sahf
int3
ret
popf
fstpl
fsubl
cltd
insl
stos
push
sbb
fiaddl
jb
in
aam
xlat
and
push
data16
add
push
sahf
adc
sub
xorb
mov
cmpsb
dec
lea
jle
inc
mov
loope
inc
sahf
popf
fwait
int
adc
sbb
arpl
sub
sbb
js
xor
push
mov
shlb
out
inc
add
jae
fcoml
sub
ljmp
dec
jae
push
call
xor
or
add
movsl
push
mov
test
dec
lret
xor
dec
fstpl
inc
xor
popa
das
mov
push
pusha
xchg
pop
out
dec
xchg
fcmovbe
jle
bound
cmp
bound
jl
repnz
pop
jecxz
push
clc
inc
jmp
sub
and
mov
repz
adc
or
inc
add
push
cmp
and
push
int
mov
rep
stc
or
popf
xchg
sbb
and
ljmp
cltd
pusha
pop
pop
aam
movsb
jp
ja
inc
fldl
inc
in
mov
push
or
pop
nop
mov
mov
daa
jno
pop
inc
in
fsub
js
or
std
fwait
jne
ret
adc
das
loope
inc
rcrb
mov
sti
mov
popf
sbb
mov
ret
outsl
jmp
xor
or
out
insb
insl
int3
cmp
adc
insl
aad
imul
in
cmpsb
inc
mov
cmp
pop
sub
push
es
jmp
sbb
mov
mov
lods
lock
sub
jns
sub
dec
stc
jns
or
add
jno
jmp
push
add
push
cmp
jae
or
and
test
lea
lods
and
insl
aad
scas
dec
or
xlat
adc
filds
enter
push
mov
xchg
adc
pop
adc
dec
pop
imul
xor
ret
shlb
cmc
test
mov
cmp
push
jne
out
inc
xchg
repz
jb,pt
xchg
jbe
insb
insb
xchg
int3
insl
sub
data16
leave
mov
xchg
mov
fcoml
das
fildl
sbb
into
imul
xor
loopne
add
out
mov
arpl
push
push
push
xchg
aaa
jne
xchg
rcll
arpl
test
nop
push
ret
fmuls
inc
inc
stc
test
pop
cmpsb
lods
call
into
sti
dec
mov
test
lret
dec
outsb
push
inc
std
xor
repz
and
fcomip
cld
das
dec
lea
pop
dec
cwtl
lock
push
fdivrs
ja
mov
pop
repnz
jge
shlb
mov
fistpl
clc
outsl
arpl
pop
and
sbb
adc
mov
fwait
aaa
xchg
dec
mov
push
sahf
cmp
flds
sub
movsl
push
xchg
movsb
pop
lods
sub
cli
push
test
pop
pop
pop
xor
pop
fidivrs
daa
mov
popf
inc
mov
pop
pop
popf
or
inc
dec
jae
enter
dec
repnz
push
js
test
fmull
ret
loopne
add
int
adc
cli
sti
fs
or
and
mov
jmp
cmp
dec
stos
aam
movntps
push
xlat
inc
pop
outsl
cwtl
mov
mov
sub
mov
mov
mov
sbb
push
movsb
cmp
subl
or
lret
je
inc
sub
pusha
bound
ret
mov
or
push
mov
jns
xor
inc
cmp
or
adc
vmovmskps
cmp
mov
loopne
inc
aad
fisubl
hlt
push
add
pop
ds
cld
xor
cld
dec
inc
xchg
outsl
or
test
inc
jmp
decl
push
mov
xor
dec
dec
in
and
xchg
test
or
mov
mov
decl
adc
cmc
sub
mov
xor
mov
lahf
in
mov
add
lds
jo
push
in
lea
popf
std
xor
adc
add
fnstcw
popa
hlt
daa
and
jl
pop
popf
dec
mov
and
imul
das
inc
insl
sti
xchg
or
sub
ja
les
and
fs
aaa
mov
sub
cltd
pop
mov
stos
inc
das
lods
jecxz
adc
sub
or
lds
lds
cmc
push
mov
add
push
sti
push
mov
and
xor
ret
adc
jg
adcl
cld
stos
sbb
xor
into
stos
push
push
fiaddl
sub
stos
dec
js
je
bswap
jp
cmp
pop
mov
std
mov
cld
jle
sbb
arpl
insl
jnp
in
mov
out
push
and
cmp
repz
scas
andl
add
outsb
jmp
out
in
data16
mov
dec
jge
add
fs
cmp
or
fwait
xor
popa
push
pop
or
outsb
out
sbb
test
shll
mov
popa
leave
mov
stos
call
mov
dec
fstpt
push
mov
aam
ljmp
pop
xchg
pop
leave
popa
pop
xchg
dec
cwtl
dec
mov
cltd
sub
pop
xor
popf
sbb
shlb
sti
mov
xlat
fbld
in
pop
pop
negb
mov
mov
jmp
jl
add
mov
push
or
or
subb
cmp
in
insb
xchg
add
cmp
ret
jnp
fwait
leave
mov
sub
cmpsl
dec
lea
jo
in
ljmp
jmp
inc
xchg
outsb
inc
adc
dec
pop
pushf
roll
sub
hlt
lahf
aam
fimuls
in
xor
into
mov
push
mov
adc
xchg
jg
mov
push
dec
cmp
mov
dec
aas
popf
xchg
push
xchg
call
and
adc
xor
lods
cmpsb
xchg
aam
js
enter
in
mov
lcall
es
inc
lock
inc
jbe
leave
cmpsb
and
fcompl
arpl
cmp
sub
mov
cwtl
or
mov
mov
jecxz
sbb
add
into
sahf
cmp
popf
add
xor
popf
pop
aaa
inc
scas
arpl
pop
into
cmp
std
xorb
ret
xchg
xor
push
and
das
cmp
gs
icebp
sub
scas
push
shr
leave
mov
pop
add
in
and
lods
hlt
xchg
popf
cmc
insb
xor
lcall
xchg
xor
xlat
out
lret
test
cltd
jge
icebp
or
or
aam
xchg
push
pminub
mov
out
clc
xor
repnz
mov
loope
dec
mov
jmp
xor
es
shll
cmp
jno
fwait
jne
mov
pop
push
push
dec
jo
insb
fmuls
jbe
sub
adc
cli
imul
pop
cmp
jno
inc
inc
mov
sbb
sub
std
fldenv
cwtd
ret
inc
and
push
sub
loopne
out
movsb
or
pop
adc
imul
ret
dec
or
fsts
xor
leave
mov
push
neg
sub
sti
cmp
movsl
lock
adc
sbb
iret
movb
inc
nop
pop
xchg
mov
mov
and
cmp
insl
add
pop
dec
cmp
pop
cmp
push
stos
cmp
cmp
dec
mov
in
cwtl
mov
push
lcall
in
mov
mov
jbe
mov
loopne
divb
fadds
inc
mov
sbb
pop
adc
js
test
mov
dec
mov
test
fisttpl
aaa
dec
push
cli
cmp
cld
cmp
std
sbb
fs
jo
imul
movsl
int
test
idivl
idivl
cmp
add
mov
push
inc
std
adc
aas
push
in
mov
mov
dec
or
sub
dec
cmpb
orb
nop
lret
stos
sbb
cli
lds
daa
add
pop
pop
dec
cmc
pop
add
dec
mov
dec
push
jnp
mov
and
insb
negb
or
lret
arpl
aam
out
addb
jo
or
xchg
and
jle
imul
idivb
or
aaa
pop
xchg
adc
testl
add
hlt
mov
and
in
scas
cmp
jae
mov
rolb
mov
ficomps
xchg
std
testl
cmc
aaa
rcrl
popf
xor
lcall
add
inc
push
mov
fucomi
sbb
cltd
jbe
push
outsl
rcrb
mov
dec
mov
rol
cmp
mov
xchg
jnp
aaa
movl
dec
push
inc
cmp
rorb
out
clc
mov
fidivl
adc
sbb
jb
ret
pop
lcall
cmp
dec
imul
test
leave
xorl
pop
add
or
jb
out
mov
mov
clc
mov
jbe
std
int
aad
pop
in
jecxz
jge
movsl
xor
push
out
rolb
jmp
sub
pop
lcall
fs
outsl
test
mov
js
mov
sbb
subb
cmpsl
loop
jle
in
ss
push
inc
mov
adc
loope
out
insl
add
ss
xchg
mov
shlb
nop
sub
lea
mov
or
int
or
outsl
ficompl
out
push
xlat
in
push
xor
pop
cmp
loope
sbb
stos
in
out
cmp
sbb
flds
aas
xchg
push
jo
lds
xchg
sub
sub
rcrb
dec
pop
movsl
xchg
hlt
mov
jo
sarb
movsb
ret
test
into
int3
pop
xor
out
xchg
mov
cmp
add
add
lods
add
xchg
dec
push
fs
fs
and
imul
mov
jmp
je
mov
push
ficomps
cltd
lret
nop
fstpt
sub
repnz
js
es
sub
lret
lret
pusha
inc
int
push
or
testb
dec
push
xor
xchg
pusha
inc
sub
mov
out
js
jl
mov
mov
sbb
mov
push
adcl
push
or
ja
sahf
bound
cli
mov
dec
dec
dec
jmp
repnz
loopne
jno
in
cmp
add
mov
call
xor
xchg
loop
or
adc
add
decl
aam
dec
xchg
mov
sbb
ja
dec
or
add
enter
cmp
sarl
fsubs
jg
sbb
xchg
inc
repnz
jo
ret
xor
dec
add
adc
lods
or
fbstp
sbb
push
cmp
inc
adc
outsb
enter
pop
pop
in
loopne
jle
stc
int3
cmpsl
in
mov
jp
jmp
add
cmc
sbb
loope
orb
fadd
sbb
or
lods
mov
add
cmpsl
xor
xchg
pop
adc
sbb
cmpsl
push
ljmp
pushf
popa
subb
das
inc
add
hlt
out
leave
mov
fwait
inc
xchg
imul
mov
inc
lock
icebp
ret
add
pop
orl
pop
mov
rorb
ljmp
fmuls
sbb
test
mov
pop
mov
insb
pop
sbb
sbb
jbe
sarb
jecxz
sub
sub
jnp
dec
fdiv
ja
dec
mov
jg
test
jne
icebp
aas
lahf
add
leave
sbb
loope
xchg
lds
das
mov
shrb
sbb
aam
cmp
dec
xor
test
pusha
pop
xchg
popa
imul
mov
pop
inc
sbb
jmp
addb
or
mov
aam
cmp
cld
leave
pop
xor
xchg
scas
mov
push
sbb
inc
sub
jecxz
mov
xchg
add
and
das
add
xchg
insl
cmp
add
sub
enter
fdivl
cmp
adc
add
in
mov
sbb
and
or
mov
mov
sub
pop
xchg
sbb
mov
test
cmpsb
cmp
cmp
push
sbb
adc
arpl
add
xor
ret
add
pop
in
dec
xchg
add
add
dec
pop
aaa
adcl
push
sarl
pop
int3
dec
pop
pop
mov
ss
fstp
outsl
inc
push
inc
jl
fsubrl
jo
fadd
cmpsl
push
fsubl
add
mov
xchg
int3
cwtl
mov
mov
out
mov
notl
push
inc
push
and
jne
repz
lret
fcomps
push
add
clc
jp
xchg
or
pop
push
rolb
stos
add
mov
dec
clc
mov
daa
cmp
add
cli
jnp
sbb
ja
mov
jp
cmp
in
jl
rclb
inc
int3
andl
mov
mov
shrl
pop
dec
icebp
lds
scas
in
mov
mov
add
loopne
xor
sarl
add
push
push
fisttpl
popa
cvttps2pi
adcl
sbb
popf
bound
insb
cmp
jecxz
loopne
std
xchg
mov
sub
or
sub
outsl
nop
aam
enter
lea
adc
fmul
loop
and
sbb
cmpsb
cwtl
cmp
rorl
inc
jo
addr16
int3
xchg
jg
arpl
lods
pop
or
jae
sub
mov
sti
stos
js
jge
jae
cmpsl
sbb
repz
xor
or
js
loop
cs
pop
std
aas
je
fildll
jns
inc
lret
push
js
rcrl
and
ret
inc
mov
icebp
mov
testl
and
loopne
mov
add
cmp
mov
mov
test
jno
xchg
jp
sbb
xchg
aad
leave
add
ljmp
jbe
pop
and
adc
add
xchg
int3
cmpsl
mov
cmp
inc
sahf
icebp
aas
or
int3
push
cmp
scas
mov
sti
mov
cs
cmc
jae
hlt
fstl
pop
adcb
movsb
lock
testb
mov
ljmp
sbb
mov
aas
push
pop
sub
popa
clc
pop
aam
lods
dec
int3
out
add
lock
cli
mov
add
mov
call
or
pop
mov
or
sub
lods
mov
jae
ss
sbb
ficoms
ljmp
jbe
sbb
lret
lods
orl
or
scas
lods
mov
xor
or
jns
dec
mov
rclb
push
jmp
cmp
repnz
adc
mov
mov
sub
fildll
daa
jge
jle
les
adc
into
lahf
mov
lea
outsl
cmp
cmc
jnp
outsl
push
adc
cmpsl
mov
inc
cmp
mov
push
dec
dec
sub
leave
in
out
dec
cmp
stos
mov
jl
ja
in
and
nop
lret
xlat
push
cmp
or
pop
insl
dec
cld
nop
dec
jns
xchg
sbbl
cmpsl
pop
sahf
ret
out
and
notb
push
push
sub
pop
push
jae
lock
sbb
shr
adc
dec
dec
pop
push
adcl
jb
mov
xor
jbe
mov
lret
fs
jnp
stos
ja
and
cmp
and
inc
repnz
mov
cmp
mov
sub
js
cmp
ljmp
and
jns
xor
pop
xlat
mov
xor
mov
lahf
daa
sub
mov
xor
jmp
add
or
shll
dec
inc
xchg
xchg
mov
aam
sub
outsb
pop
inc
test
aas
cmpsl
dec
lcall
aaa
clc
fisubrs
mov
sahf
sahf
mov
insb
push
fwait
inc
out
lea
cmpsb
xchg
pop
mov
lcall
mov
arpl
push
popf
sub
pusha
mov
xor
sbb
in
push
test
pand
mov
pop
mov
loopne
pop
jmp
push
mov
mov
inc
cmc
push
icebp
mov
jle
out
add
into
adc
repz
rorb
aam
popf
mov
mov
add
jno
mov
fs
cmp
lock
push
imul
jl
arpl
push
mov
repnz
sti
lods
lret
mov
adc
aam
popl
fstps
mov
push
mov
mov
xchg
or
cmp
xor
xor
push
orl
sbb
leave
imul
outsb
push
out
jnp
mov
and
mov
pushf
xchg
sub
lea
das
es
mov
cmp
mov
js
icebp
push
stos
les
xor
jae
dec
jmp
sbb
mov
cmp
inc
movsl
std
call
xchg
sbb
push
pop
push
jl
in
nop
adc
aaa
adc
fldcw
sbb
repnz
clc
jmp
sub
fwait
mov
adc
cmp
sbb
sub
dec
jmp
loop
sbb
xor
leave
imul
repnz
jnp
push
insl
and
dec
add
orb
imul
addr16
or
scas
enter
xchg
lahf
pop
sti
out
sbb
orb
sub
xchg
mov
sbb
inc
cmp
test
aaa
nop
lock
jne
ja
sub
bound
les
add
mov
sbb
and
fstpl
int
subb
sbb
or
inc
or
xorb
xor
mov
dec
sbb
push
pop
addb
sub
pop
int
xor
dec
int3
scas
fcompl
mov
jle
jge
jns
repnz
xchg
push
and
push
add
mov
mov
dec
pop
cmpsl
jl
lret
pop
inc
in
imull
cmp
push
mov
aam
or
je
jns
sbb
outsl
pop
push
cmpb
pop
data16
ss
mov
aam
push
mov
pop
or
mov
cwtl
test
js
roll
mov
add
sub
xchg
mov
xchg
add
add
loopne
lahf
pop
ljmp
xchg
cld
sbb
mov
loopne
mov
pop
inc
push
push
mov
shll
add
add
xor
aad
adc
dec
rorl
adc
call
mov
test
repz
mov
xchg
push
or
adc
pusha
out
pop
lods
das
and
jl
xchg
xchg
jnp
cmp
test
push
je
pop
push
sbb
fs
pop
aaa
lock
test
pop
or
loop
push
stos
cltd
mov
xchg
jns
jb
popf
in
push
aaa
stc
imul
stc
jp
iret
or
gs
sub
xchg
push
adc
popa
jno
into
mov
or
sub
jnp
xchg
jnp
sbb
xchg
mov
mov
xchg
or
xor
lahf
sbb
xchg
inc
and
leave
adc
fstl
adc
jns
cmp
or
mov
or
jle
gs
adc
jno
add
push
xor
mov
insl
imul
cmpsl
lahf
mov
movl
add
mov
or
or
sbb
and
rcll
jo
sub
pusha
add
pushf
adc
pop
pusha
test
fsubrl
inc
lret
ja
dec
pop
and
jmp
adc
sarb
add
lods
rorl
sbb
xchg
fs
fs
cmpsl
in
lea
fsubp
movsl
and
fldenv
popa
mov
mov
push
mov
movsb
fldl
movsl
and
std
popa
iret
or
sarb
adc
dec
mov
push
jl
aas
mov
and
out
rcll
cmp
dec
pop
mov
or
sbb
inc
outsb
leave
hlt
pop
inc
cmp
inc
mov
int
sar
repz
lret
or
mov
xor
inc
inc
in
fs
das
movsl
daa
lahf
xchg
sub
mov
fldl
adc
negb
sbb
mov
add
pop
test
adc
testb
cs
sbb
loopne
sbb
dec
mov
cld
mov
dec
inc
jecxz
dec
stos
xchg
cmp
add
jno
sbb
pushf
xchg
sbb
pushf
mov
push
subb
xchg
pushf
xchg
daa
sub
repz
aas
out
add
fsubp
mov
test
pop
jle
lret
sub
add
test
mov
sub
mov
aam
sub
and
insb
xor
insl
stos
cld
add
xor
jmp
or
mov
test
push
aas
loop
jg
andb
aas
mov
xor
and
bound
dec
aaa
cmc
outsl
jbe
sbb
push
sbb
xchg
aad
mov
sub
or
mov
ret
sbb
cmp
stc
js
mov
adc
sub
mov
or
movl
add
out
jnp
sub
mov
or
or
xchg
sbb
jle
cwtl
xor
mov
mov
dec
pop
push
mov
xchg
aaa
jg
mov
push
test
dec
and
insl
inc
adc
addl
iret
jns
mov
outsl
push
out
mov
out
mov
cmp
sub
in
cmpsb
xorb
std
push
push
mov
je
in
jge
mov
inc
je
test
mov
mov
pop
into
adc
xchg
pop
mov
xor
iret
gs
add
in
pop
cmp
adc
popa
lods
cmp
lods
sarb
sub
imul
dec
or
xchg
jno
pop
sbb
push
loope
sbb
imul
ss
mov
std
incl
ficoml
sbb
jae
adc
adc
and
mov
jmp
addr16
xchg
jo,pt
aaa
js
stc
je
mov
jbe
or
test
das
pop
sub
mov
sub
jge
mov
addr16
nop
add
cmp
aad
sub
mov
shll
pop
jg
sahf
std
mov
je
test
jl
gs
add
add
pop
hlt
or
adc
xor
ss
test
in
movsb
or
scas
xor
push
mov
xchg
cmp
sbb
sbb
xor
sub
lock
mov
inc
dec
lret
es
adcl
imul
testb
test
out
and
or
mov
call
inc
idivl
jl
cmpb
dec
cmp
test
dec
cwtl
fnsave
xchg
popf
sbbb
sbb
xlat
inc
test
cwtl
pop
fcoml
mov
hlt
push
mov
aam
and
mov
sbb
std
fnsave
hlt
mov
dec
push
fstp
iret
mov
lcall
ss
pop
jmp
cmpsb
add
test
sahf
les
xor
leave
repz
rorb
jl
jae
cwtl
decl
cmp
push
pop
lods
cmp
out
xchg
mov
call
cltd
test
push
adc
jle
jg
pushf
test
jae
adc
sub
sub
or
divb
or
test
aam
inc
repnz
xor
clc
stc
pop
cmpsb
sbb
repnz
loope
and
cmp
out
rcll
cld
cmp
xor
bound
ja
pop
add
add
mov
sbb
dec
xor
sbb
pop
cwtl
jo
adc
pop
jns
sub
sbb
stos
adc
dec
iret
arpl
and
mov
cmp
fistpll
push
jl
dec
and
cmpsb
inc
lahf
xchg
rcll
push
mov
adc
push
iret
fsub
sub
lahf
out
jecxz
dec
jbe
out
push
adc
xchg
sub
adc
pop
dec
lret
lret
out
mov
pushf
push
lret
sbb
sarb
les
push
loop
push
xchg
xchg
mov
mov
lea
pop
sbb
mov
inc
call
insb
jb
xchg
pop
push
ret
xor
nop
cmp
cmc
out
push
inc
xchg
cmp
mov
dec
aam
iret
xchg
mov
ljmp
jo
movntq
and
mov
mov
loop
mov
mov
mov
sub
or
jg
xor
push
sbb
mov
mov
jne
cltd
in
iret
insl
pop
mov
es
push
cld
je
mov
fsubs
add
outsb
js
push
xchg
cwtl
pop
shrl
pusha
ss
mov
fmul
mov
mov
int3
bound
je
fdivp
jl
sub
mov
xlat
dec
daa
ds
cmp
ret
fwait
pop
mov
mov
int
aas
cmp
bound
adc
push
cmpsb
cltd
or
jmp
push
jne
mov
xchg
aad
push
push
and
cmp
nop
movsl
stos
rolb
and
cmp
and
mov
icebp
insl
jg
cmc
inc
add
subl
sahf
inc
xor
pop
mov
fwait
arpl
mov
idiv
mov
jp
scas
mov
xor
or
fs
bound
in
dec
stos
sub
repz
test
inc
cltd
iret
ffree
rorl
outsb
orl
fildll
in
fbld
xor
xor
icebp
imul
mov
mov
mov
pop
popa
xchg
jmp
hlt
inc
xchg
cmp
or
ret
enter
mov
dec
xchg
shrl
jg
push
notb
push
sub
inc
shrl
and
test
fisubrl
lret
cmp
stos
inc
mov
sub
xchg
out
or
or
cmpsb
jle
dec
mov
out
sub
repnz
aaa
imul
mov
mov
popa
cmp
mov
or
cmpsb
adc
outsb
jl
push
push
push
push
pushf
pop
pop
aad
jns
lret
call
push
jbe
push
dec
xlat
ds
test
dec
cmp
imul
in
aam
sbb
push
inc
std
mov
daa
icebp
fidivrl
aas
inc
adc
imul
cmp
pop
loopw
data16
jno
sbb
xchg
xor
int
pop
push
aaa
leave
or
push
inc
pop
fwait
inc
rolb
enter
adc
mov
cmp
inc
inc
hlt
mov
stos
dec
add
in
imul
fcmovnu
adc
test
fwait
jbe
pop
mov
cmp
sbb
pcmpeqw
fildl
and
cmpsl
pop
adc
adc
lods
into
dec
sub
mov
mov
in
je
xor
iret
outsl
outsl
ret
pushf
rcrl
mov
inc
outsb
lcall
sub
clc
lcall
ds
adc
jmp
dec
adc
clc
and
cltd
outsb
xor
je
js
xor
mov
jbe
icebp
inc
out
cwtl
inc
imul
int
stos
lock
cli
std
dec
xlat
fldt
pop
sub
sbb
int3
add
mov
sub
jb
pop
ss
mov
add
mov
imul
pop
push
jno
add
and
in
sub
in
lods
enter
dec
dec
push
das
xchg
mov
push
mov
shll
rdmsr
ret
cmp
mov
adc
jns
xlat
mov
xor
sbb
stos
and
xor
jbe
dec
mov
mov
cwtl
mov
or
cltd
push
arpl
fists
mov
adc
mov
cmp
test
ror
test
enter
movsl
enter
mov
or
mov
test
xor
in
insl
sub
je
jecxz
adc
adc
aam
out
in
cmp
push
hlt
insl
add
cmp
adc
push
xor
inc
fcomi
rorl
sbb
inc
cld
pop
inc
sti
adc
push
add
mov
data16
cmp
pop
repnz
fsubrl
out
pop
in
mov
or
or
loop
fidivrs
ficompl
push
icebp
lcall
aaa
mov
enter
aas
or
test
mov
adc
adc
movsl
pop
dec
inc
add
or
jo
hlt
jno
data16
mov
pop
mov
imul
inc
adc
aas
or
dec
mov
dec
lds
adc
mov
je
cmc
push
movsb
fwait
stos
mov
dec
lcall
sub
ds
jecxz
or
adc
aad
cmc
lahf
mov
pop
jne
jbe
adc
cwtl
jbe
std
pop
jno
in
pop
lds
add
nop
jbe
ret
lds
pusha
pop
ja
kmovw
or
dec
xor
sbb
fisttpl
add
mov
arpl
add
test
pop
mov
push
insb
out
cltd
inc
xchg
imul
or
lds
ljmp
jecxz
dec
dec
mov
lahf
push
xor
test
ret
loop
aas
cld
mov
mov
push
arpl
dec
cmp
lods
out
sub
dec
je
scas
add
xchg
mov
mov
push
mov
pop
lods
mov
nop
int
dec
and
mov
enter
imul
push
js
adc
push
sbb
cmpb
mov
xor
sub
mov
mov
pushf
dec
icebp
sub
and
dec
ljmp
add
daa
mov
notl
mov
lret
gs
leave
out
lahf
pop
je
nop
stc
in
dec
and
lock
clc
add
cli
rclb
ljmp
pop
mov
test
dec
xchg
into
sbbb
dec
sbb
inc
push
mov
pop
pop
out
and
inc
stos
pop
mov
add
cltd
in
mov
push
mov
adcl
call
and
in
mov
pop
test
mov
lds
out
cmpsb
outsb
add
dec
inc
sti
and
add
sub
aas
jo
es
mov
push
push
hlt
push
insb
cmp
das
int3
sub
popf
cwtl
pop
xor
pop
cs
insl
push
jmp
scas
mov
lock
and
add
xchg
sbb
ret
imul
in
push
sub
mov
xlat
loope
mov
test
frstpm(287
or
mov
and
and
jecxz
xor
ljmp
popa
insb
clc
pop
sub
insl
mov
xor
lret
clc
push
ja
mov
push
test
cmp
lods
mov
movsb
pop
movsl
jo
outsl
dec
mov
jnp
mov
mov
inc
subl
xlat
stos
xor
inc
stos
outsb
pop
rolb
test
js
pop
mov
inc
jne
xor
cmp
add
ds
mov
insl
mov
sub
mov
cmp
sbb
pop
lahf
mov
repz
mov
add
leave
cmp
jnp
mov
stc
nop
roll
jo
idivl
addr16
test
inc
push
and
xchg
fisttpll
out
and
fidivl
test
fnsave
icebp
testl
imul
stos
jge
push
push
arpl
incb
dec
dec
ss
mov
movsb
ret
rcl
push
data16
fsubl
decl
sub
sub
jbe
dec
sti
mov
fsubl
pop
repnz
hlt
xchg
fisubl
mov
xchg
outsl
insl
jns
mov
stos
xchg
fnstenv
mov
imul
pop
and
xlat
mov
sahf
scas
in
push
stos
outsl
xor
cli
add
pop
cltd
inc
popa
pusha
ret
movsb
scas
jnp
add
js
in
fidivrs
inc
fisubrl
cmc
mov
jnp
jae
adc
xor
or
adc
sahf
adcl
mov
cmpb
sbb
and
cli
testb
punpckldq
push
adc
add
dec
stos
out
xchg
jnp
xchg
pop
lret
pop
mov
sbb
shr
icebp
sti
dec
lcall
mov
pop
dec
sbb
mov
in
lcall
jns
inc
lea
xchg
sub
xchg
in
jg
xchg
push
push
mov
ret
mov
pop
test
mov
xchg
mov
jbe
out
lret
cs
pop
imul
in
loop
pop
gs
aam
idivl
sub
insl
insl
and
imul
jg
adc
sbb
lock
pop
sub
js
arpl
push
add
jmp
lods
sarl
sbb
push
push
lock
mov
push
fcomps
sub
js
adc
gs
xchg
loop
sub
rcr
mov
push
cmp
add
fldl
arpl
loop
xchg
and
dec
jo
ja
and
inc
nop
push
loopne
scas
div
mov
push
div
jl
sub
and
fs
dec
mov
xchg
cmp
in
int
push
ret
adc
cmp
jne
pusha
xchg
outsb
in
ja,pt
cwtl
sahf
out
sti
pushf
xor
das
out
xor
push
repz
loope
movsl
xchg
push
xlat
imul
ret
dec
fwait
loop
jecxz
popl
inc
test
stc
and
pop
ss
add
fnstsw
jne
cwtl
ljmpw
push
fwait
cmpsl
mov
iret
cmc
aas
dec
addb
jle
testl
leave
dec
je
test
mov
sub
addr16
mov
das
ljmp
jo
pop
push
icebp
test
and
cli
pop
sub
xorb
dec
bound
pop
or
jle
js
and
dec
jo
inc
idivl
daa
test
or
mov
jmp
add
or
xor
repz
cmc
sub
out
inc
insl
icebp
loop
sti
pop
sbb
jg
jl
jg
bound
push
mov
in
dec
lret
fbld
jge
add
inc
and
jnp
inc
xchg
cmp
adc
lds
pop
test
pop
lret
xor
mov
xchg
sub
aam
std
or
daa
xchg
add
pop
push
jnp
push
pop
mov
imul
insb
sub
and
xchg
or
adc
push
jl
je
movsb
mov
jo
divl
lcall
inc
or
or
xor
lcall
pop
and
xor
stc
add
scas
sub
inc
mov
mov
mov
jb
scas
popa
mov
jns
mov
jae
sub
push
sub
jge
nop
pop
in
lods
mov
mov
ljmp
mov
jmp
cmpsb
cmp
mov
lea
adc
xor
inc
jge
jbe
jecxz,pt
push
es
sahf
fildll
mov
loopne
pop
fidivrl
int3
inc
pop
adc
xchg
aaa
testb
push
icebp
and
push
xchg
sbb
sti
or
ss
add
cmpsl
aam
inc
sub
ffreep
jle
shll
mov
in
movsl
or
jmp
out
fsubs
div
fmull
lcall
jbe
push
mov
sbb
lea
ljmp
out
out
mov
inc
xlat
repz
jne
inc
shlb
mov
and
pop
ficomps
in
sub
ret
jmp
clc
pop
fs
shr
mov
incb
xorl
jbe
push
cmp
scas
cmp
and
pusha
je
in
aad
mov
cmp
cs
cmpsb
stos
pop
and
subl
std
xor
loop
sti
or
mov
mov
out
loop
or
or
pop
dec
sub
pop
std
ljmp
mov
add
les
aaa
xor
in
out
mov
hlt
stc
sub
movsl
orb
and
lahf
fstpl
pop
push
lods
jmp
int
ss
aaa
dec
jg
movlps
mov
inc
and
push
out
arpl
pop
pop
icebp
sub
adc
mov
jno
inc
mov
loope
and
pop
ds
clc
shll
data16
mov
repnz
sti
inc
pop
arpl
mov
shl
pop
dec
push
lock
sub
sub
inc
add
xchg
ljmp
add
nop
fldl
lea
ffree
das
loop
rorb
xorb
in
and
sub
fidivrl
xchg
mov
mov
fcmove
idivb
sbb
xor
mov
add
mov
insl
hlt
fsubl
mov
into
sub
push
pop
popa
test
imul
jmp
popa
rcrl
ret
add
int
or
imul
orb
xor
aam
xor
rcrb
mov
ljmp
scas
xor
decb
pop
mov
mov
xor
mov
out
movsl
xor
adc
int
xor
adc
fnsave
mov
mov
xchg
iret
sbb
and
mov
sbb
lds
scas
fwait
dec
xor
dec
mov
mov
enter
test
movsl
dec
sub
repz
add
imul
lret
mov
xlat
lods
push
adc
mov
in
lret
jmp
scas
in
jmp
std
xchg
xchg
and
sub
popf
jae
lahf
xor
hlt
int3
test
xchg
fmul
stos
loop
add
into
loope
sahf
xchg
lcall
push
je
int
lret
adc
ret
cld
leave
fisubs
repz
data16
movsl
lret
dec
nop
cwtl
insl
xor
adc
lea
xchg
jne
psrld
and
vandnps
mov
mov
insl
nop
aaa
jmp
dec
jno,pn
push
iret
ss
mov
les
mov
repnz
xor
cmp
mov
pop
lods
ss
rcrb
pop
jl
negb
jae
add
push
cld
out
lcall
mov
adc
xor
rorb
shll
stos
mov
jl
push
pusha
repnz
cmc
push
les
aas
and
in
dec
aas
adc
xchg
movsb
dec
filds
cmpsl
test
mov
jecxz
nop/reserved
add
rcr
inc
push
sbb
mov
js
inc
pop
jno
mov
pop
inc
jb
enter
shrb
xor
mov
dec
lcall
pop
sarl
fcompl
ds
into
test
into
popf
mov
inc
sti
subb
ja
cmp
cmp
jns
xor
mov
outsl
sbb
fbstp
sbb
xchg
pop
fcmove
mov
inc
rol
mov
rclb
arpl
jmp
pop
in
pop
lahf
pop
pop
and
mov
xor
jb
fcmovnbe
mov
fisubrs
or
push
mov
lods
mov
add
or
xlat
or
into
jl
jne
xor
cmp
test
add
sbb
mov
sar
je
mov
push
cltd
cmpsl
fsubp
scas
ficoms
or
test
mov
pop
pop
int3
clc
or
shlb
jmp
pop
jne
imul
ja
pop
sub
test
ret
adc
push
clc
dec
dec
jle
or
std
jg
add
ljmp
jnp
fiaddl
out
xchg
hlt
addb
testl
mov
pop
dec
bnd
mov
mov
push
popa
arpl
xlat
push
pushf
xchg
mov
mov
sbb
inc
mov
lods
incb
xor
dec
sbb
mov
int3
jb
mov
lea
xchg
js
cmp
xor
dec
popf
cltd
nop
sub
test
push
jecxz
cmp
daa
mov
jae
dec
mulb
add
movsl
mov
mov
pop
push
mov
cmpsl
pop
or
mov
ds
or
cmp
out
shrb
sub
aaa
mov
xchg
fmull
mov
daa
or
cmp
daa
cmp
pop
std
xchg
in
inc
cmp
mov
jmp
lahf
mov
sbb
xchg
icebp
mov
pop
mov
inc
mov
pushf
pop
push
jno
leave
shll
movsb
out
mov
out
icebp
aas
stc
out
in
mov
jno
cmpsl
lea
ret
test
enter
xchg
jb
jne
rorb
mov
xor
inc
iret
test
sub
les
aaa
ljmp
jb
adc
std
xor
or
pop
lahf
pop
cld
mov
xchg
cmp
push
sub
sbb
ficompl
sub
dec
stos
and
pop
push
and
mov
pop
lret
das
or
xlat
mov
jg
jbe
sbb
outsb
push
xchg
fimuls
mov
out
cmc
popf
xchg
or
rcrb
sub
cmpsl
fisubrs
push
add
mov
rol
popa
test
aas
cli
out
jo
stc
mov
mov
mov
jnp
cmpsb
incl
fmuls
jl,pt
divl
addl
pushf
pushf
rclb
inc
adc
fidivrs
test
pop
xor
shll
push
add
cmp
movb
sub
in
stos
ret
xchg
jb
mov
adc
jne
mov
xor
mov
cmpl
pop
pushw
mov
shll
gs
out
or
ljmp
jl
push
sbb
rclb
sbb
dec
xor
pop
clc
push
movsb
xor
jmp
aaa
mov
cltd
in
jmp
push
stc
adc
push
mov
mov
cmpsl
stos
sbb
mov
mov
xchg
dec
int3
enter
mov
inc
mov
out
call
bsf
movsl
imul
shll
lahf
out
fisttpll
out
adc
cltd
subb
mov
dec
mov
std
lahf
add
mov
lods
sarl
addl
jecxz
arpl
sbb
lret
lahf
loop
das
loopne
enter
and
hlt
jno
pop
add
test
jns
fucomip
dec
lds
cli
cmpsb
ret
dec
pop
pop
cld
imul
scas
fs
jb
cmp
test
xorb
mov
or
out
mov
popf
mov
and
mov
rclb
mov
imul
or
mov
data16
arpl
adc
fs
std
jp
addr16
cli
repnz
imul
ja
dec
rorl
lds
popa
adc
pop
adc
jmp
outsb
cs
push
fldenv
dec
and
ss
pop
pusha
neg
stos
dec
sbb
and
mov
jbe
push
nop
inc
mov
cmp
sahf
fstpt
mov
jmp
arpl
iret
int3
jo
jge
fisubrl
aaa
xor
jae
pop
mov
mov
mov
insl
cmp
dec
shll
fmuls
incb
ffreep
loopne
push
into
xchg
movsl
ret
push
push
loope
bound
je
mov
xchg
inc
sbb
leave
or
mov
cmp
sbb
cmp
lahf
xor
cmp
mov
call
adc
mov
out
into
xchg
xchg
and
lods
xchg
cld
add
cmpsl
insl
test
adc
sahf
pusha
and
push
es
pop
mov
mov
sub
mov
fs
fldt
clc
sahf
push
addb
jb
aad
loop
adc
out
adc
adc
dec
xor
lock
sbb
js
insb
neg
jno
inc
jmp
push
add
pop
call
dec
jb
nop
jecxz
popf
popf
inc
stos
xor
sbb
jp
or
mov
in
mov
shrl
or
into
dec
movsb
fcoml
dec
jb
and
addr16
gs
into
lods
mov
fnstsw
fidivrl
fdivr
and
imul
sub
adc
adc
arpl
mov
jle
dec
pop
push
push
xchg
test
test
mov
jno
adc
and
mov
je
scas
mov
jbe
sub
fistpl
mov
cmp
xchg
push
xchg
sub
out
cmp
aad
lock
fldenv
divb
insl
and
push
daa
fdivrs
lock
push
cmpsb
pusha
fwait
mov
xchg
lahf
and
inc
aas
aas
adc
mov
and
mov
mov
cmpsl
fsubl
adc
cmpsb
and
inc
enter
andl
xor
mov
ror
lret
lods
push
and
dec
fdivs
dec
mov
loop
icebp
test
in
push
pop
repnz
pop
pop
push
push
push
xchg
test
insb
and
lock
lahf
inc
bound
fistps
out
pop
jnp
dec
imul
or
loope
lret
jmp
nop
sub
arpl
iret
mov
pop
test
or
lds
ret
stc
jno
stos
nop
mov
xchg
inc
dec
xlat
insl
sub
rcll
inc
jae
insl
cmp
xor
loop
mov
xchg
lock
sub
aad
inc
loop
repnz
mov
xchg
push
xorl
gs
rcrl
inc
push
out
push
sbb
lds
or
xor
pop
mov
push
mov
adc
mov
cmp
fwait
sub
inc
sbb
pop
mov
or
jle
xchg
dec
jp
jb
sub
mov
cmp
cwtl
aam
cmc
cmp
int3
jae
push
xchg
pop
repz
cmp
dec
les
imull
imul
or
pop
jbe
push
mov
nop
insl
mov
push
lods
sbb
fisubs
xor
xchg
sbb
pop
cmp
daa
fstpl
add
xor
mov
adc
jl
arpl
imul
cwtl
int
mov
jno
dec
push
mov
xor
xchg
lods
mov
xor
push
inc
fs
out
xlat
rclb
repnz
into
out
add
dec
rol
jle
bound
and
inc
pushf
pop
ja
popf
sti
sub
inc
push
fdivr
cmp
pop
movsb
adc
mov
push
jl
sbb
or
cwtl
pop
inc
pop
push
and
test
or
xor
fwait
das
insl
mov
mov
movsb
std
scas
jb
add
sub
lds
addb
or
popa
jp
and
scas
mov
in
std
jmp
jo
add
fisubrs
lcall
mov
jmp
ret
dec
repnz
mov
fs
or
pop
push
cmp
dec
stos
imulb
cmc
hlt
mov
shrl
xchg
lds
in
iret
ss
dec
push
lret
adc
bound
cmp
add
or
dec
gs
dec
inc
pop
std
and
add
cmc
in
movsb
lock
xlat
je
je
push
rcl
or
or
daa
mov
sub
lahf
scas
jmp
xor
arpl
std
add
loope
inc
mov
and
in
incl
jb
xchg
lods
scas
add
pushf
pop
cltd
push
inc
pop
outsl
mov
mov
fistpll
fsubr
sub
cli
mov
and
xchg
js
cltd
aam
dec
adc
dec
inc
icebp
hlt
add
shrb
cmp
adc
gs
push
pusha
in
mov
and
lock
lea
shl
inc
in
or
lods
xor
test
jp
flds
leave
int3
mov
lret
dec
subb
out
out
dec
dec
add
sti
jge
and
sub
out
frstor
enter
mov
cmc
ljmp
push
pop
push
xchg
xchg
jnp
hlt
jnp
mov
fisubs
dec
push
shll
adc
arpl
cmp
mov
jns
js
cld
mov
shll
popl
adc
and
cmp
mov
int3
cmpsl
in
stc
stos
jl
and
sub
pop
enter
rolb
adcb
or
cmp
mov
hlt
sbb
clc
jecxz
and
or
sub
sbb
sbb
cld
sub
dec
jle
lods
test
out
jae
cmp
loop
jp
faddl
jnp
rcrl
rcll
mov
scas
dec
mov
adc
iret
push
pop
das
jl
cld
cmp
jmp
iret
aam
cmp
mov
push
in
les
add
inc
jae
pop
fistps
mov
push
inc
outsb
mov
sbbl
xchg
dec
inc
in
test
dec
mov
negl
sahf
insl
sbb
scas
xchg
adc
leave
mov
subl
push
pop
nop
cld
lcall
push
cmp
mov
cmp
bound
mov
xlat
jne
ret
insb
pop
bound
pop
fcmovbe
cmpsl
insl
mov
fwait
xchg
stos
in
test
ja
or
sub
push
fbld
into
mov
les
js
jb
pop
pop
cli
xchg
pop
aas
popf
js
push
ss
cmp
cltd
das
jbe
movsb
fmull
mov
fmul
mov
es
jge
pop
push
pop
xchg
xchg
loop
push
pushf
push
xchg
fcmove
lds
mull
mov
sti
pop
fists
mov
mov
call
inc
fdivrp
cmp
jge
and
xchg
dec
push
clc
mov
mov
in
dec
fadd
rorl
or
mov
pop
mov
fdivr
inc
arpl
jge
xor
daa
icebp
je
and
repnz
xchg
jb
shrl
enter
shlb
lcall
jne
insb
jns
jle
mov
scas
es
nop
pop
icebp
pop
sahf
mov
lahf
inc
push
push
pop
push
pop
jno
or
imul
mov
stc
push
lahf
dec
mov
ja
add
jb
imul
xorb
jl
fwait
jle
adc
jne
lods
in
inc
scas
pop
sbb
int
xchg
mov
fsubs
push
jb
pop
int
jp
dec
jecxz
cmp
pop
lds
imul
jnp
xchg
int3
mov
sub
frstor
xchg
and
inc
pop
outsl
imul
fisubrl
xor
mov
mov
ja
and
pop
xchg
imul
mov
out
out
mov
cli
lea
fwait
rorl
mov
mov
scas
cmpsb
mov
push
adc
xor
enter
adc
repz
and
lea
imul
aas
pop
rsm
cmp
iret
es
rol
outsb
mov
mov
or
data16
pop
cmp
jge
shlb
imul
int
movsl
faddl
cmp
mov
xchg
out
lods
mov
and
bound
jne
in
icebp
int3
adc
mov
xor
addr16
mull
push
test
inc
adc
insb
faddl
je
out
test
xlat
cmp
pop
inc
mov
sbb
pop
scas
push
insb
adc
incb
repnz
insl
pop
jns
insl
popa
addr16
mov
scas
imul
in
pop
sti
cli
movsb
call
or
scas
inc
xchg
mov
push
scas
sub
cmc
xlat
sbb
adc
push
shl
daa
inc
pop
mov
xchg
je
jmp
cmp
lock
mov
xchg
adc
adc
xchg
sti
push
mov
fwait
dec
fwait
sbb
push
je
dec
adc
inc
aad
jns
ret
pop
pop
ds
stos
arpl
sub
mov
aam
push
push
mov
into
xor
insl
mov
push
aam
lcall
mov
pop
ret
js
cwtl
int
xor
jo
jno
cmp
lcall
or
inc
mov
jl
adc
orb
std
cmp
lahf
push
inc
insl
jg
push
mov
fs
inc
or
jl
test
xor
pop
sub
add
repz
mov
out
lcall
cmp
xchg
clc
jl
mov
mov
push
xor
sub
add
out
orb
decb
aad
xchg
movsb
rclb
dec
dec
sbb
add
jl
cmp
test
mov
test
shl
lahf
popf
stos
jcxz
test
xchg
xor
mov
mov
or
or
push
daa
movsb
jb
dec
mov
jnp
mov
xor
cmpsl
lea
sbb
jo
adc
add
jecxz
bound
enter
not
mov
insb
mov
cmp
dec
adc
movsb
stos
mov
fcomi
fists
cmc
aam
jae
sub
pusha
aam
pop
push
xor
ja
repz
sbb
loopne
popa
push
fwait
test
jl
leave
std
cmp
mov
xor
loope
sqrtps
or
mov
cmc
inc
push
pop
clc
sti
mov
dec
hlt
cmpsl
cmc
imul
mov
jp
fsub
mov
cli
bound
sbb
push
xlat
jle
repnz
xchg
xchg
in
movsl
lea
pop
mov
jmp
clc
cmp
cmp
scas
nop
xchg
push
mov
repnz
call
int
hlt
dec
inc
jmp
and
sarl
sbb
xchg
or
xchg
subb
pop
or
cwtl
xchg
or
cmpsb
push
adc
icebp
mov
stos
mov
out
fidivl
dec
sahf
aad
push
inc
shll
cmc
cmp
xor
mov
int3
inc
cs
cwtl
test
or
add
mov
push
mov
mov
inc
bound
scas
fdivrp
push
and
and
pusha
xor
dec
testb
out
xor
mov
xor
xor
adcb
and
in
shlb
je
flds
jns
adc
mov
mov
mov
mov
and
jae
or
mov
out
sub
dec
das
pop
push
adc
push
add
xchg
inc
xchg
push
or
adc
mov
push
pushf
jne
mov
dec
push
clc
pop
aas
mov
mov
test
imul
mov
adcl
sbb
test
and
test
dec
cmp
clc
sub
inc
jb
mov
in
aam
fadd
xchg
movsl
sub
adc
pop
dec
gs
sbb
andb
inc
xchg
fnstsw
dec
dec
out
jp
cltd
inc
inc
stc
fnstsw
out
xlat
sbb
adc
mov
leave
pop
outsl
int
push
imul
xchg
fdivs
fisttpll
jb
scas
jmp
imul
sub
pop
sahf
pusha
mov
fcmovb
sbb
xchg
fcmovnu
popa
sbb
popa
test
adc
cmp
in
push
popa
into
call
arpl
fdivs
adc
insb
mov
inc
cwtl
int
cmc
add
mov
in
push
sarb
insb
movsb
enter
outsl
pop
pushf
mov
add
add
leave
dec
cltd
mov
sbbl
dec
mov
jbe
cmp
aas
cmpsl
js
iret
das
xchg
inc
mov
lea
loope
mov
sub
cld
sub
xchg
iret
jg
stos
js
mov
jne
sub
xorl
ret
jno
loop
mov
loopne
fstl
lea
lods
jl
or
dec
cmp
adc
xor
mov
cmp
rol
jo
cmp
sbb
dec
test
jg
inc
insl
pop
dec
jmp
insl
frstor
mov
and
pop
pop
jne
insl
pop
int3
push
movsl
add
sbb
fs
das
mov
lret
mov
jg
pop
cmp
jbe
addr16
mov
ss
or
xor
inc
in
lret
lods
sbb
fucomip
pop
jg
sbb
inc
and
xor
push
adc
add
pop
push
pop
test
or
mov
clc
mov
push
inc
jo
mov
mov
mov
test
fnstcw
orl
mov
outsb
cmpsb
add
into
addr16
jge
negb
fs
loopne
fwait
lods
inc
aas
and
cmp
in
js
mov
test
scas
xor
in
mov
movsl
xor
fwait
or
mov
outsl
xchg
aas
cwtl
aad
xor
cmpsl
addb
mov
inc
push
frstor
lahf
mov
fwait
xchg
push
loope
fdivs
jle
sbb
add
or
and
mov
lcall
fbstp
adc
jb
and
daa
subb
cmp
jmp
dec
cmp
push
or
add
mov
rorl
add
es
lods
ret
es
stc
add
lret
mov
dec
jmp
shlb
mov
lds
loope
xor
dec
leave
das
dec
test
leave
je
scas
mov
daa
testl
mov
sub
shr
ja
in
push
adc
pushf
and
fstp
scas
push
ljmp
mov
fdivr
sub
mov
or
fdivs
push
cmp
jae
add
push
xorb
sbb
push
xchg
iret
inc
movsb
aam
mulb
dec
ds
negb
les
and
cmp
sub
ljmp
xor
dec
bound
xchg
and
xchg
inc
or
pop
lret
movlps
repnz
cmp
mov
sti
mov
adc
arpl
test
mov
cmp
inc
es
push
jns
or
mov
pop
aad
add
loope
movb
insl
mov
pusha
inc
lods
sbbb
xchg
inc
and
stos
je
aas
jnp
xorb
fdivl
push
jo
mov
in
fists
sti
sbb
inc
jbe
or
or
ffreep
adc
in
pop
icebp
xchg
faddl
mov
iret
movb
jnp
cli
pop
fsubrp
mov
sub
adc
dec
and
hlt
scas
pop
loopne
out
xchg
dec
rol
jne
adc
push
mov
cld
pop
pop
sti
mov
or
sbb
stc
popa
stos
inc
and
jns
rolb
aam
xchg
cltd
push
rcll
lahf
int
mov
dec
xor
xor
jnp
inc
dec
xchg
mov
and
sbb
jmp
es
icebp
ret
mov
xor
aaa
xchg
cmpl
jp
mov
je
test
mov
decb
jp
sbb
jnp
lea
les
aam
lock
jbe
mov
adcl
adc
test
or
jnp
pop
cmp
sbb
push
cld
decl
loop
shlb
sub
int3
dec
test
enter
and
adc
mov
shlb
ja
xor
lea
stos
add
sbb
cmp
sbb
or
stos
fdivs
and
and
sub
dec
sarl
mov
cmp
iret
test
daa
repz
inc
dec
dec
scas
jg
fcomps
je
jo
shll
cmp
ror
lfs
ret
push
ret
pusha
mov
cmp
push
add
sub
jb
jmp
out
xchg
std
lahf
ljmp
lds
mov
cld
xor
shll
pushl
aad
fcoml
mov
lahf
std
test
lcall
push
cli
xchg
sbb
das
shlb
daa
cmc
sub
arpl
loop
nop
jecxz
pushf
or
push
or
add
mov
fnclex
cmc
arpl
outsb
clc
cmpsb
lods
pusha
mov
or
aaa
adc
movsb
inc
subl
or
aad
push
inc
sub
jo
ret
pop
pop
in
inc
mov
mov
out
sbb
xor
lock
sub
push
mov
f2xm1
cld
pop
insb
mov
mov
out
lret
daa
ret
loop
mov
sti
sub
inc
jns
cmp
bound
sbb
mov
ds
sarl
and
punpcklwd
lcall
sub
and
xor
pop
jle
rclb
push
pop
in
jb
jbe
xchg
inc
jae
cs
sub
inc
cs
jnp
jecxz
mov
sbbl
cmp
push
jbe
and
sbb
idivl
test
push
call
or
cltd
dec
xor
sbb
cmpsl
jno
movsl
sbb
mov
mov
xor
sbb
out
pop
int3
cmpsl
ja
decb
xor
dec
je
push
pop
xchg
jmp
out
push
inc
lods
cmpsb
pop
cmp
lock
push
push
popa
jmp
sub
movsl
arpl
cld
inc
pop
pop
xchg
imul
push
insl
mov
ljmp
cmp
dec
les
add
xchg
cmp
pop
jle
push
loope
inc
push
and
xor
add
push
mov
push
fisubrs
add
xor
cmp
sbb
mov
aas
ret
in
data16
sub
mov
dec
addl
mov
enter
or
je
sub
xor
xchg
out
jne
adc
sub
pop
ljmp
loope
xor
pop
and
xchg
cli
adc
or
adc
xchg
jl
xchg
adc
insb
jmp
xor
mov
leave
inc
imul
mov
cli
insb
xor
sbb
push
movsb
push
enter
shll
push
lret
fisubl
mov
ja
rolb
xor
insl
pop
mov
nop
pop
dec
push
movsb
xor
add
xor
rorb
loopne
in
inc
xchg
out
outsl
inc
adc
lods
jb
mov
ret
and
mov
add
jmp
mov
push
stc
xchg
cmpsb
sub
cmp
cs
in
pop
or
or
pop
aam
xchg
dec
into
dec
fildl
mov
stos
or
pop
pop
dec
mov
push
jo
aam
mov
and
inc
je
int3
mov
dec
pop
enter
jg
cmp
icebp
test
jbe
leave
adc
mov
jg
pop
cmc
pop
jb
cmpsb
insl
lea
push
inc
cmpsl
mov
movsl
jo
mov
aad
jnp
lret
sub
lcall
sbb
mov
stos
add
jae
popf
mov
enter
test
xlat
test
pop
or
movb
xchg
jp
pop
in
pslld
iret
mov
xlat
lds
loopne
sbb
mov
cmp
add
ret
aam
xor
ret
in
sti
jp
or
pop
xor
mov
pop
xchg
icebp
and
add
mov
in
lea
popl
inc
inc
cmc
mov
cmp
mov
ret
sbb
dec
mov
xlat
popa
sarb
dec
cmp
in
test
sub
inc
test
pop
insl
imul
pop
divl
inc
mov
sbb
orb
int
test
pop
enter
xlat
imul
sub
adc
int3
cmp
push
dec
mov
inc
in
dec
scas
cmpsb
jl
and
pop
xor
test
sub
lods
xor
imul
mov
push
or
aas
mov
pusha
mov
adc
ljmp
mov
loope
pop
adc
pop
jge
add
stc
test
mov
jnp
cmp
push
sbb
pop
mov
test
mov
inc
fists
hlt
and
mov
cmpsl
push
js
pop
ljmp
dec
xchg
push
xchg
sub
sarl
xor
lret
mov
lods
sbbb
sahf
xchg
test
daa
xorl
les
mov
cmpsl
cmp
push
xlat
push
andb
jp
out
scas
add
sbb
filds
cmp
movsl
push
adc
mov
stos
mov
pop
into
pop
adc
mov
pop
inc
lods
scas
mov
sbb
loope
out
test
mov
sub
sbb
into
mov
jbe
cmc
adc
out
aaa
mov
pop
sti
push
icebp
sub
xchg
repz
ret
xor
or
pop
push
subb
cld
cmc
dec
dec
lahf
mov
pop
jle
jo
in
mov
inc
adc
and
mov
outsl
jbe
in
enter
sti
bound
ljmp
add
push
jecxz
sub
into
adc
lds
jmp
sub
call
inc
mov
mov
xchg
or
xor
xchg
push
add
shll
lret
je
leave
popf
sub
lods
or
pop
sbb
push
mov
mov
ja
nop
mov
xchg
cltd
addb
femms
mov
xchg
push
fiadds
xchg
mov
cs
dec
adc
inc
out
sub
cmp
fdivrs
inc
adc
xor
xor
and
push
test
lret
iret
lcall
add
inc
popa
cmp
jno
cmpb
ja
mull
mov
sub
daa
mov
jle
sub
sub
and
pop
loop
pushf
int3
mov
jge
xchg
mov
add
hlt
mov
jo
push
jae
sub
pop
jmp
inc
ja
out
jecxz
test
call
js
sahf
or
adc
mov
push
fsubrs
lret
ror
fwait
cmp
mov
sar
dec
aaa
or
sub
ret
outsl
add
fisttpll
xor
mov
stc
mov
das
fnsave
in
cld
fmul
out
cmp
testl
push
add
repnz
rclb
mov
sbb
mulb
mov
mov
pop
push
inc
dec
jecxz
jnp
call
into
pop
xchg
ja
mov
mov
test
push
sti
inc
loope
xchg
adc
ret
mov
xchg
xchg
inc
push
inc
mov
sub
dec
test
cltd
sub
sti
jle
xchg
xor
push
mov
dec
xlat
xor
xor
notl
ficompl
adc
xchg
lods
jae
push
out
cmpsb
ds
in
dec
xor
lock
jl
fs
push
pop
mov
jp
jge
popf
sub
mov
out
add
lds
jg
push
pop
push
out
dec
jnp
repz
nop
fsts
fldenv
int
rcr
hlt
pop
movsl
sbb
jne
mov
imul
cmpsb
push
pushl
les
mov
testb
sub
fsts
ret
popf
push
xlat
js
jp
push
cmp
aas
cmpb
xor
dec
std
push
lods
push
mov
cltd
lods
sub
push
in
mov
mov
sbb
dec
stc
in
mov
and
inc
jl
test
sub
add
loop
mov
add
jmp
movsb
add
sbb
lds
gs
loope
sub
xor
gs
test
mov
mov
xor
cmp
pop
add
pop
xor
scas
dec
aaa
ja
popa
imul
repz
outsl
int3
sbb
xor
add
cmp
pop
add
xchg
andl
pushf
pop
dec
fcoms
inc
popf
enter
sub
mov
bound
lods
popa
jnp
loope
add
xlat
pop
pop
push
inc
es
outsb
mov
mov
jle
out
pop
inc
xchg
hlt
and
ds
mov
outsb
sbbb
dec
xchg
popf
bound
es
fistl
inc
mov
int
les
xor
and
movsl
xorl
fbld
pop
inc
pushf
cmc
test
inc
popf
lret
fnstcw
xchg
cld
jp
xor
sbb
or
int
in
outsl
and
clc
add
sub
pop
aad
push
sub
jmp
sub
pop
mov
rcrl
popf
clc
adc
sbb
jle
stos
dec
add
dec
scas
cli
in
fwait
add
rcrl
iret
adc
adc
gs
jnp
nop
repz
mov
out
scas
aas
adc
jmp
or
into
jns
pop
fstpt
aaa
fisubrs
sbb
mov
pop
add
in
push
sbb
dec
push
gs
xchg
inc
rorl
jg
xor
sbb
fisttpl
xor
vpaddsw
mov
xor
stc
push
cmp
dec
jb
fmuls
incl
jne
divl
mov
stos
jae
outsl
loope
and
lds
ficompl
cmp
test
mov
bound
mov
pop
loop
jl
pop
daa
jbe
jno
shll
cmpsb
dec
jp
or
enter
mov
push
xor
adc
outsl
and
inc
adc
push
imul
lds
inc
inc
push
insb
cmp
clc
mov
ja
arpl
add
xor
cmp
sub
in
xchg
xlat
sbb
loop
jns
adc
popa
push
adc
aad
or
sbb
mov
mov
shlb
outsb
push
movsl
inc
punpcklwd
rcrb
or
mov
fs
add
int
push
scas
lret
movsb
and
push
stc
or
ficomps
sbb
dec
or
jl
mov
insl
es
pop
std
pop
out
and
pop
mov
hlt
rorl
add
lods
cmp
mov
mov
push
adc
rolb
popf
xchg
xchg
jl
lods
or
dec
inc
fwait
adc
dec
test
dec
out
aad
or
into
jns
cmc
fidivs
mov
xchg
adc
lods
dec
cmp
jl
mov
mov
js
pop
sub
dec
sbb
mov
ret
ss
rolb
or
cmp
add
mov
pop
sbb
xor
icebp
push
mov
int3
jmp
mov
xchg
out
xor
mov
adc
and
into
push
stc
and
fstpt
je
addb
rcrl
cmp
cmp
jno
xchg
pop
mov
and
pop
add
data16
jecxz
mov
jae
push
cld
sub
mov
insl
jl
stos
aad
push
mov
inc
cmp
lret
jae
sub
push
or
incl
stos
sbbl
adc
cwtl
filds
push
fstpt
call
fisttps
jge
mov
xchg
cmp
pop
or
lea
xchg
mov
idivl
lret
retw
mov
mov
sbb
jl
cli
fwait
push
pop
inc
stos
shrl
and
imul
inc
add
pop
mov
pop
push
loope
and
cwtl
or
xor
inc
jge
adc
mov
pop
out
pusha
mov
std
cmp
sub
test
jno
and
add
into
xchg
ss
aad
mov
rol
pop
scas
xchg
xchg
mov
es
repz
mov
add
aad
fs
dec
int
jp
cmpb
scas
popl
sub
mov
or
sub
push
mov
mov
stos
clc
xor
push
pop
call
inc
sub
in
decl
pop
dec
incl
cs
inc
jp
incl
js
fisttps
scas
jne
jno
mov
std
and
aaa
insl
inc
dec
xor
xchg
add
data16
int
pushf
nop
int3
mov
jecxz
mov
dec
push
cmp
push
inc
pop
jg
stos
lcall
and
jnp
xchg
xor
dec
jnp
test
inc
ljmp
xor
lods
jge
xor
jmp
js
popa
sub
push
cmpsb
fisubs
jg
fdivrs
pop
lcall
push
daa
mov
call
sub
outsl
pop
xchg
mov
bound
lock
pop
push
nop
jo
test
cmpsl
rolb
loop
lock
adc
mov
push
fstps
test
mov
mov
shrb
gs
cli
mov
sbb
mov
leave
pusha
lret
scas
orl
fisubl
in
insb
pop
inc
pop
out
pop
lea
sbb
mov
loop
cmp
cli
cmp
data16
nop
outsl
jl
negw
mov
pusha
test
jnp
xchg
mov
adc
fxch
xchg
pop
les
fadds
mov
mov
mov
enter
hlt
out
test
cmpsb
fnsave
xchg
inc
mov
add
and
lods
sahf
mov
inc
std
nop
add
shrl
cmp
movsb
xor
xchg
add
mov
je
dec
push
call
ret
mov
test
out
sub
adc
or
jecxz
lret
push
ljmp
mov
ja
dec
or
sbb
and
mov
inc
popa
add
pop
pop
xchg
out
inc
cmc
mov
push
inc
in
add
xor
ret
dec
sbb
iret
int3
mov
outsb
mov
mov
mov
sbb
imul
jnp
sarl
mov
addr16
adc
js
js
std
sbb
xor
popf
addr16
loopne
pop
je
xor
push
cs
mov
in
in
sbb
aam
imul
push
in
je
sbbb
push
or
jmp
cmpsl
out
cmpsl
push
das
dec
dec
xchg
xchg
incb
out
stos
and
sbb
mov
dec
jge
xchg
call
jno
out
aad
movsb
mov
divb
out
mov
pop
ja
out
in
cwtl
jno
mov
and
cmc
fsincos
ss
jns
popf
movsb
pop
xchg
enter
pop
mov
xchg
push
adc
jge
adc
fdiv
pushf
pop
aas
jg
dec
pop
and
inc
dec
mov
sub
fcmovnb
mulb
cmp
rorl
or
inc
lods
pop
and
xchg
push
xlat
sbb
mov
sub
sbb
lahf
push
scas
out
lcall
sub
pop
sbb
outsl
xchg
xchg
mov
shr
mov
or
in
jnp
cmc
mov
mov
ret
and
add
sub
push
gs
addb
jp
mov
mov
mov
add
je
js
sbb
ds
or
jbe
mov
repnz
int
ret
das
lods
clc
shll
push
inc
xchg
outsb
or
and
mov
adc
stc
stc
rcll
popa
lret
or
dec
loopne
jne
addb
mov
test
sbb
jge
ja
and
movsb
cmp
imulb
das
or
scas
add
mov
mov
and
shrd
outsl
inc
push
inc
pop
in
ljmp
rcll
shrl
out
pop
aad
test
sbb
xchg
xor
pop
addr16
imul
call
add
jo
outsl
dec
stos
dec
xor
mov
sbb
pushf
mov
jae
mov
dec
rcr
sub
aaa
gs
add
ds
daa
mov
sahf
pop
ds
mov
sbb
movsl
fs
outsl
sub
rolb
imul
inc
mov
out
pop
jne
lods
into
ret
js
rorl
outsb
dec
push
inc
add
shrb
dec
mov
lea
xor
adcb
bound
mov
mov
in
push
sub
daa
mov
cmp
pop
dec
jo
xchg
ret
je
cs
push
push
movsl
cmpsl
hlt
or
dec
rcrb
xchg
xchg
xchg
test
sti
add
mov
into
jnp
dec
mov
ret
call
addr16
cmp
xchg
jno
and
pop
fiaddl
xor
add
call
jecxz
outsl
and
and
push
ljmp
dec
mov
lock
cmp
mov
test
mov
out
dec
mov
xlat
in
fiadds
lcall
or
jp
and
shrb
jp
fmull
lods
add
dec
fimuls
jle
xor
fisttpl
int
push
mov
inc
test
mov
aad
cltd
int
int3
dec
xchg
clc
mov
or
ds
insl
cmp
xchg
mull
xchg
push
add
mov
or
pop
xlat
mov
xor
orb
leave
inc
cmp
adc
pop
das
leave
test
loopne
fnstcw
popf
jmp
xchg
mov
jo
xor
aam
fwait
fcomi
add
cwtl
loop
aas
fldcw
sbb
push
adc
mov
jnp
mov
push
int3
mov
sbb
push
imull
sub
lods
push
stos
pusha
loope
addr16
jge
icebp
push
imul
mov
mov
xchg
es
roll
shlb
mov
lods
jg
sbbb
fstpt
cmp
and
out
stc
enter
repnz
xor
in
adc
dec
add
jp
or
push
cmp
adc
mov
scas
mov
sbb
pop
push
xor
xchg
xchg
ljmp
rol
adcl
fs
pop
icebp
push
dec
cmc
aaa
and
mov
push
out
jno
icebp
lds
push
add
sub
cmp
and
push
jge
movsw
orb
cmc
sbb
push
les
adcl
rorl
insb
aad
aaa
and
push
mov
mov
je
and
arpl
hlt
out
dec
lret
je
add
out
sub
sub
sub
test
pop
xlat
adc
jp
adc
add
sbb
dec
or
scas
or
mov
xlat
cld
mov
mov
cmc
ja
mov
repnz
fildll
adcl
push
loopne
leave
repnz
stc
xchg
mov
fsubrs
pushf
in
cwtl
shl
adc
imul
fwait
movsb
aaa
mov
sarb
adc
jno
movsl
test
hlt
pushf
add
lock
not
jbe
lds
sarl
stc
xchg
xchg
scas
in
inc
push
or
je
cld
or
lods
daa
sub
or
push
lcall
aaa
or
xchg
cmpb
xor
jmp
add
add
shrb
and
jae
in
and
shr
cmp
pop
and
mov
mov
and
test
jecxz
lock
or
leave
jecxz
xchg
lods
lods
bound
aam
inc
and
dec
scas
shrb
add
xorl
pop
dec
jo
mov
shr
jno
mov
pop
inc
inc
ja
outsb
arpl
mov
jb
adc
icebp
sbb
adc
add
out
push
mov
vpcomgtuq
scas
sub
fldcw
jmp
adc
fldl2e
aam
sbb
int
cmp
cmpsl
adc
mov
scas
sbb
shrl
sbb
movsl
aaa
or
sbb
pop
and
adc
pop
jb
cmc
imul
jo
adc
pop
push
dec
popl
cmp
mov
adc
inc
in
jns
std
dec
cld
mov
mov
stc
lahf
xchg
or
cmp
test
adc
pushf
adc
pop
mov
inc
lods
jb
insl
add
mov
inc
and
mov
xchg
xchg
int3
mov
ret
sti
outsb
into
out
ljmp
out
pop
xchg
inc
testb
or
push
arpl
mov
mov
pushf
fadds
rol
xchg
cwtl
insb
std
loop
inc
xor
xchg
into
push
imul
inc
in
adc
test
call
and
icebp
mov
fadds
mov
aas
cmp
jl
mov
xchg
mov
aaa
ja
incl
mov
sub
mov
mov
shll
cmp
test
mov
mov
pop
das
push
mov
xchg
arpl
push
inc
rcrb
pop
stc
gs
adc
lods
fcmovne
inc
pop
lahf
sti
in
push
aaa
and
ljmp
mov
shl
cmp
jne
iret
fists
xor
icebp
fldl
fwait
jp
js
fcmove
and
xor
call
mov
test
cld
es
push
fistpll
fidivs
and
xchg
jae
cmp
or
loopne
mov
adc
std
xor
or
mov
ret
dec
rorl
lret
or
push
push
dec
jmp
mov
xchg
xlat
inc
xor
xchg
xchg
fs
inc
cmp
push
lret
pop
mov
shll
arpl
and
idivl
clc
sti
mov
jp
les
xchg
push
sub
xor
cmp
mov
mov
dec
push
add
sub
hlt
pop
mov
fbstp
mov
cld
sbb
or
xor
sbb
xchg
mov
mov
pop
pop
icebp
enter
daa
jmp
mov
pop
into
fisttpl
jmp
sbb
cmp
mov
clc
xchg
add
jmp
pop
jno
cmpsl
test
pop
adc
mov
das
add
es
push
fsub
xlat
in
inc
les
mov
sbb
cltd
sbb
dec
dec
jmp
sub
jp
sbbb
add
add
repnz
test
sbb
les
mov
adc
xor
mov
xlat
lods
pop
mov
adc
cli
lods
xor
movsl
mul
jno
xor
sub
jno
cmc
insb
in
mov
push
dec
outsb
push
ss
sub
les
test
sub
jmp
mov
aam
adc
adc
test
mov
push
stos
ss
xchg
daa
inc
pop
push
mov
inc
xchg
lahf
push
into
divb
xchg
dec
loopne
cmpsb
sarl
lcall
in
nop
pop
lds
mov
jmp
rorb
mov
neg
sbb
daa
or
xchg
aas
fs
sbb
ljmp
and
out
arpl
sub
ss
inc
leave
jle
push
sub
mov
jnp
jecxz
push
je
int
pop
sbb
pop
subl
xchg
jae
out
ds
push
dec
inc
mov
negl
repz
pop
and
lock
out
push
or
movsb
sbb
incl
movsl
xchg
in
dec
loop
and
xlat
inc
sub
js
scas
lea
cld
xchg
adc
cmp
adc
outsb
add
jle
cli
jp
mov
pop
adc
repz
cmpsb
es
fsubp
test
xchg
xchg
mov
mov
jl
out
je
das
mov
sbb
ret
mov
ljmp
outsb
and
imul
cmp
dec
pop
fdiv
xor
mov
mov
shlb
mov
push
push
cmpsb
push
divb
pop
lods
imul
pop
sub
push
pop
shrb
push
imul
jb
pop
inc
orb
sbb
add
dec
stc
sbb
hlt
int
aas
mov
iret
cld
testl
stos
sti
jg
aam
add
mov
and
jbe
fildl
arpl
add
sahf
xchg
jecxz
lock
sbb
jae
or
dec
ljmp
xchg
ret
push
sub
pop
sub
nop
test
sarb
data16
or
and
adc
adc
mov
imul
fs
mov
cltd
pop
push
js
addl
xchg
jns
clc
push
cmpsb
aas
fbld
mov
mov
repz
stos
mov
aad
arpl
call
push
aaa
daa
sbbb
out
jl
test
push
fidivs
or
add
out
jb
xchg
stc
test
dec
push
lcall
adc
cmpsl
cmpsl
ret
inc
popa
ljmp
xchg
pop
dec
push
cmp
gs
imul
mov
jp
enter
push
insb
pop
sbb
ja
aaa
imul
mov
adc
lret
jge
stos
outsl
outsl
loopne
and
icebp
add
popf
adcl
iret
sbb
xlat
push
mov
mov
sbb
mov
jecxz
sbb
mov
js
cs
jb
test
clc
push
movsb
lret
sub
test
movsl
pop
xchg
rcr
out
xchg
es
sub
adc
fimuls
insl
daa
sub
loop
test
dec
loopne
je
or
mov
jae
pop
push
adc
lods
pop
fwait
daa
aas
mov
jnp
ja
inc
fucomp
adc
xchg
mov
sbb
das
push
in
or
and
xchg
inc
lret
xchg
out
ficoms
jge
mov
and
test
adc
imul
cmp
xchg
push
fadd
mov
outsl
mov
push
jge
cmp
xor
sub
js
or
or
lahf
mov
mov
sub
fcoms
fwait
or
mov
loop
mov
lret
xchg
imulb
cmpsb
mov
jbe
rorl
sti
repz
sbb
xlat
stos
pop
lods
repnz
pop
mov
xchg
adc
xlat
aas
test
lock
ret
push
push
arpl
outsb
add
inc
fs
sub
pop
sti
pop
js
arpl
push
jne
push
das
mov
loopne
test
scas
inc
fimuls
loope
mov
fisubrs
dec
dec
inc
fs
fnstsw
pop
shlb
in
lret
vpsubsb
add
arpl
dec
or
insb
mov
jne
dec
xchg
xlat
jge
call
mov
pop
sbbb
pop
and
scas
out
adc
cmp
mov
and
sub
ja
std
movsl
movsl
push
call
sub
or
push
pop
pop
lret
and
mov
xor
mov
add
std
push
push
jbe
inc
cmpsb
clc
add
xchg
fcoms
jle
dec
mov
or
ret
mov
sub
insl
ret
fmul
xchg
jb
fsubrs
mov
jmp
mov
sbb
sub
push
cmp
iret
mov
add
jecxz
cwtl
mov
sti
movsl
sbb
es
out
movsb
in
mov
xor
xchg
in
and
int
push
push
js
call
shll
test
adc
mov
movsl
stos
push
sbb
mov
jno
sbb
mov
arpl
push
cmc
orl
pop
push
push
mov
jno
or
mov
inc
dec
stc
ss
jae
int3
inc
push
push
or
aad
mov
mov
adc
mov
mov
rcrl
data16
push
add
in
ret
inc
xor
adc
xor
lcall
mov
cld
mov
in
popa
dec
adc
and
lock
test
mov
mov
sub
test
lcall
xchg
stos
adc
test
push
leave
pop
mov
add
out
and
inc
mov
pop
test
jnp
or
jnp
clc
xchg
repnz
dec
mov
dec
subb
loope
mov
enter
aas
dec
jnp
mov
fcoms
imul
push
mov
insl
hlt
mov
fucomi
lds
cwtl
jno
iret
or
addl
popf
dec
imul
jne
mov
test
jl
ss
sbb
lret
clc
add
pop
movsl
push
mov
xchg
push
shll
iret
dec
mov
mov
js
jno
mov
xor
dec
shll
jle
jbe
mov
repz
popf
cmp
testb
cmpsb
cmp
bound
jbe
in
loopne
jg
mov
mov
outsl
xchg
lahf
push
jo
pop
rcrb
sub
push
jp
xor
adc
lock
mov
add
adc
fnsave
sbb
sbbb
jmp
mov
mov
in
arpl
push
xchg
aaa
outsb
inc
add
xchg
movl
or
aas
ret
repnz
ret
into
orb
xor
sub
adc
int
pop
cld
imul
dec
mov
sbb
and
inc
loop
idivl
mov
pop
dec
mov
out
loopne
into
jae
sub
test
add
daa
inc
popl
push
aad
fnstsw
sub
enter
cmc
aas
cmp
jo
mov
outsl
sbb
popa
into
ret
fwait
nop
mov
xor
adc
in
inc
jbe
out
repz
cltd
jb
mov
jo
jl
jge
into
mov
sbb
add
jg
je
mov
out
sbb
push
add
xor
int3
push
int3
cmp
outsb
dec
gs
sub
pusha
das
loopne
mov
sub
jb
adc
leave
adc
ficoms
push
mov
scas
jbe
test
jle
lods
scas
pop
mov
jle
or
addl
dec
dec
xor
mov
sub
cltd
mov
repz
into
cmp
xchg
imul
clc
pop
xchg
sar
adc
ret
loopne
in
mov
sbb
ret
cmpl
fstps
inc
js
jge
mov
sbb
lret
inc
mov
cwtl
arpl
fsub
inc
addr16
fwait
lahf
mov
cmpsl
mov
aad
iret
sbb
jo
mov
jle
out
test
mov
gs
pop
nop
lock
dec
shlb
leave
mov
add
push
pop
fadds
call
cmc
push
dec
dec
pop
jg
pusha
pop
or
dec
out
into
loope
xor
shll
aam
fs
add
xchg
sub
or
pop
stos
ja
push
xchg
xchg
push
fnsave
push
xchg
mov
dec
aas
popa
sub
daa
in
outsb
pop
std
gs
inc
insb
iret
sbb
dec
divl
data16
xchg
lret
cmp
loopne
ljmp
add
arpl
pop
jo
mov
push
push
mov
xlat
stos
push
cmpsl
and
repz
inc
inc
ror
xorb
addr16
push
outsl
nop
repnz
ds
std
fdiv
in
xchg
and
sub
or
cwtl
jb
bound
fdivp
hlt
addr16
fdivs
and
mov
xor
fisttpl
xchg
cmp
subb
add
fdiv
popf
ret
xchg
in
cmp
movsl
push
cmp
ss
cmc
popa
mov
sbb
addl
sbb
jecxz
push
cmpsb
stc
movsb
call
cs
or
push
xlat
jle,pn
and
inc
outsl
adc
ljmp
sahf
mov
dec
or
push
or
in
mov
inc
xor
adc
pop
lret
cwtl
lods
repz
int
push
mov
inc
popa
inc
sarb
test
sbb
fiaddl
inc
or
aaa
inc
mov
test
jnp
imul
adc
aaa
adc
inc
xchg
bound
xchg
sub
pop
je
addr16
add
insb
int3
popf
xchg
outsb
dec
mov
clc
push
test
xchg
push
adc
je
xchg
fidivs
dec
cmc
lds
rcrl
fucomp
mov
test
shrb
fisttps
imul
prefetch
xor
fbld
cli
lds
mov
push
pop
jge
lods
adc
rorl
pop
addl
push
add
mov
mov
xor
test
js
mov
xchg
mov
jnp
ds
fsubrl
inc
cltd
cwtl
add
iretw
ret
stos
push
lock
in
inc
jp
ret
ds
scas
pop
cli
in
inc
pop
dec
std
hlt
sbb
mov
cltd
pop
pop
cmp
mov
sahf
call
or
cs
or
in
pop
sbb
mov
sub
into
mov
mov
aam
mov
aad
lret
and
lods
icebp
je
add
jo
lds
daa
mov
mov
mov
popf
and
cmc
out
rcrl
pop
cs
fisubrs
loope
lea
or
xchg
in
cmp
sti
popa
out
dec
sub
sub
mov
pop
adc
fcmovb
add
testb
outsb
xchg
dec
subb
push
jne
repz
pop
movsl
mov
fisubs
jb
adc
add
sub
inc
pop
insl
xchg
mov
push
mov
shl
mov
fbld
data16
mov
push
pop
popa
or
cltd
into
jnp
aaa
or
pop
addr16
rcll
dec
add
or
addl
and
fnsave
data16
movsb
push
lcall
push
test
decl
aaa
lcall
ja
and
stc
jge
push
push
cmpsl
mov
push
cld
scas
xor
outsl
cltd
sahf
pushf
out
sub
std
push
cwtl
insl
dec
into
add
imul
in
addr16
fsubr
add
fcompl
jnp
xor
mov
outsl
dec
lds
xlat
lods
mov
lahf
out
cs
and
add
adc
xor
push
leave
fnstsw
cmp
or
mov
push
pop
movb
fsubs
je
jbe
icebp
push
sub
loopne
idivl
iret
stos
jecxz
gs
es
je
js
jecxz
and
adcl
sub
and
movsl
jae
or
and
js
and
call
lods
lret
gs
sbb
popa
or
sbb
aaa
bound
dec
dec
divps
orl
iret
std
jp
mov
mov
movsl
lret
mov
cmp
mull
sub
fldcw
rcl
jl
insl
fstpl
in
stc
std
loop
iret
mov
inc
stos
sub
in
adc
aad
pop
lea
add
das
leave
inc
dec
cld
add
repz
mov
lods
cmc
fstpl
lds
push
jecxz
call
and
dec
pop
or
out
outsb
jecxz
lahf
dec
pusha
test
scas
dec
or
jp
je
insl
jbe
jns
jo
adc
out
test
sub
addr16
mov
rclb
xor
and
push
pop
aad
call
jp
xor
dec
sarl
jg
or
xchg
sbb
inc
ret
cmpsl
cmp
mov
pop
insl
clc
ljmp
shll
cli
add
xor
test
es
xchg
into
adc
pop
sbb
or
sub
outsb
icebp
pusha
or
pop
pop
dec
cmp
pusha
pop
add
jb
pushf
jecxz
adc
mov
lock
and
xor
leave
je
hlt
cltd
sbbl
xlat
push
mov
int
ja
fstpt
and
in
lea
xlat
or
pop
imul
add
mov
call
cli
push
cmp
add
and
fildll
scas
test
sbb
inc
test
cmp
lret
cld
jecxz
and
ficompl
jle
jle
mov
mov
pop
inc
dec
lahf
sbb
sbb
xor
aad
cwtd
sbb
mov
lcall
jne
jg
jbe
jno
mov
jg
pop
imulb
add
jae
incl
jne
adc
outsl
mov
repnz
seta
cmp
or
cmp
push
out
jb
dec
outsb
add
pop
adc
cmc
dec
push
movl
std
xor
sbb
pop
pop
test
mov
cmp
xor
pusha
iret
inc
xor
fwait
jmp
test
call
nop
dec
dec
dec
shrl
testl
daa
loopne
scas
mov
out
test
sbb
push
dec
sub
sub
jae
cmp
ss
dec
icebp
xchg
pusha
xchg
mov
cmp
and
sarb
popa
jp
ret
push
jp
xlat
in
mov
cmpsb
xchg
lret
add
in
mov
out
mov
adc
fsubl
pop
jnp
ja
loop
mov
imul
sbb
or
imul
pop
add
cwtl
adc
xor
mov
pop
and
inc
ds
jb
fists
pop
lea
pop
test
xor
and
jo
push
hlt
jmp
stos
jnp
aam
inc
lcall
cmpsb
push
stos
into
push
adc
out
push
cltd
inc
dec
lahf
stc
aad
and
fidivs
test
fildl
push
jl
insl
jo
loop
cli
pop
lds
push
fs
lcall
dec
jo
push
dec
pop
and
push
js
xchg
inc
xchg
adc
inc
mov
mov
xor
add
jb
cmp
jecxz
push
fwait
jmp
shrb
arpl
mov
jecxz
lods
in
xchg
adc
xchg
je
es
cmp
push
push
jmp
test
imul
mov
xchg
fcompl
push
lcall
ret
imul
frstor
repnz
jno
add
and
aam
xor
outsl
lods
add
jmp
xor
push
dec
mov
jb
iret
mov
mov
mov
andl
jb
lret
jnp
cmpsl
cltd
xor
xchg
out
cmp
mov
or
push
rcr
push
cmp
js
cld
push
clc
cltd
xor
in
sub
fisttps
or
gs
pop
lret
add
test
pop
outsl
loop
jg
lods
test
pop
xor
cli
pop
call
fmul
outsb
xchg
mov
jmp
pop
mov
jno
imul
out
addb
lds
xor
aad
iret
mov
jg
add
mov
sarb
arpl
or
ljmp
push
enter
call
iret
into
mov
sbb
and
inc
sub
adcb
cmp
jne
cmp
std
bnd
mov
test
aas
jmp
lcall
dec
sub
xchg
lret
rolb
push
aaa
xor
pop
fs
xchg
pop
cmp
shll
sub
addb
cli
pusha
outsl
mov
hlt
sub
mov
lods
mov
or
and
adc
sub
pop
stc
jmp
shl
jmp
aam
arpl
sbb
sbb
cwtl
cmp
cwtl
cmp
enter
dec
jns
pop
jnp
jno
xor
inc
xchg
sub
lea
scas
cmp
jne
cld
sub
mov
mov
call
mov
test
mov
mov
les
insb
cmp
faddl
dec
addb
popf
in
fincstp
add
xor
xlat
repnz
mov
out
push
nop
mov
add
leave
mov
ljmp
and
add
movsl
mov
jno
sarl
aas
pop
mov
out
push
xor
pop
mov
fisttpl
xchg
fstps
jle
cmc
sarb
stc
cmpsl
adc
fsubrs
imull
dec
xor
inc
ja
fildll
xor
push
flds
pop
sub
sbb
cmpb
cmp
loope
dec
push
lock
cmpsl
test
addr16
sbb
push
les
add
push
jp
sub
test
sub
adc
sti
add
lret
ss
movsl
into
std
cli
sbb
hlt
xchg
imul
adc
out
pop
shr
push
add
mov
std
jle
loop
jo
adc
xor
mov
mov
movsl
cwtl
adc
idivb
jp
mov
decl
xchg
imul
mov
insl
shrl
fldln2
pop
and
lods
lock
stos
xchg
ficomps
mov
inc
test
cmpb
pop
inc
push
mov
add
add
inc
ss
shlb
enter
cmp
mov
out
jecxz
out
lea
idivl
mov
sahf
in
cmp
add
lock
sbb
push
or
cli
xchg
loope
jbe
sub
ja
xlat
clc
in
aam
or
jmp
subl
mov
mov
xor
push
inc
adc
xchg
loopne,pt
sti
pop
addr16
je
jo
inc
mulb
out
jp
stos
fidivs
lods
ficompl
jns
inc
mov
cmpsl
andl
pop
into
xchg
mov
xchg
push
fs
loope
xor
mov
jo
lret
aam
pop
fs
loop
push
push
inc
scas
test
cld
lea
setno
rclb
dec
jge
jge
pop
cmp
jecxz
sbbb
adc
mul
lahf
pushf
inc
xchg
shl
in
jae
lahf
iret
dec
fcmovnb
loope
cmp
sub
push
divl
addr16
lds
cli
or
idivb
jne
lods
mov
ret
add
data16
pop
fwait
or
jns
cmp
cmp
mov
jl
inc
mov
and
pop
clc
push
mov
dec
mov
movsb
xchg
mov
push
push
notb
int
jne
cmp
jl
jecxz,pn
or
mov
lahf
das
inc
mov
pop
sub
lods
inc
cmpsl
and
insb
and
mov
mov
test
outsb
shl
cmp
sbb
into
mov
cmp
ffree
dec
add
xchg
cmpsl
in
xor
idivb
stos
mov
dec
std
jp
or
mov
int3
add
pop
stos
hlt
pusha
inc
xor
popa
adc
add
jo
cmp
aaa
push
pusha
pushf
outsb
loope
dec
add
inc
fbstp
add
and
cltd
orl
jle
js
shrb
xchg
sbb
in
bound
mov
mov
adc
and
repnz
sbb
lds
or
arpl
jne
and
dec
ss
cld
or
outsl
orl
xchg
cli
xor
cmpsb
add
jnp
add
clc
test
push
pushf
mov
leave
jne
aad
add
mov
test
push
push
sub
shr
and
jmp
lea
adc
out
lret
dec
xchg
or
icebp
shrl
test
cs
jne
not
push
mov
sub
scas
ret
data16
movsb
mov
push
jno
cltd
xchg
push
test
sub
sub
mov
lahf
int3
pop
jp
xor
jns
mov
cld
test
inc
leave
dec
mov
inc
out
push
out
popf
push
dec
ds
cs
push
flds
xchg
xchg
adc
xchg
add
fistps
test
jnp
ljmp
xchg
shlb
in
ja
push
cwtl
or
cmpsl
test
jecxz
les
daa
mov
pop
add
sub
sub
into
aad
mov
mov
jle
and
xchg
adc
adc
dec
imulb
inc
pop
in
adc
mov
sub
or
pop
or
add
call
pop
xor
xor
or
adc
cltd
fsubrl
xchg
and
out
lret
push
pop
adc
sahf
ds
mov
movsb
sbb
add
push
dec
mov
jle
mov
cwtl
inc
xlat
adc
mov
push
mov
aas
sbb
gs
or
insl
push
popf
fstpl
inc
inc
fwait
inc
in
mov
mov
xchg
cmpsl
in
add
loop
out
mov
stos
cmp
mov
out
popf
pop
mov
lds
adc
jg
sbb
xchg
pop
pop
rcrb
fcomps
sub
movsb
xlat
sti
lret
fdivl
test
sbb
lret
cltd
pushf
adc
mov
icebp
sub
mov
mov
aam
pop
ds
push
jns
in
push
pusha
mov
jmp
mov
dec
ds
sbb
cmp
lret
xchg
fsubs
ret
sarb
dec
xor
shrb
frstor
mov
je
insb
shrl
repz
hlt
call
repnz
negb
jnp
mov
stos
mov
out
test
jo
pop
jne
jmp
xor
imulb
outsb
fisttpll
les
jge
pusha
add
test
sbb
aaa
das
repnz
test
ss
adc
jl
xchg
mov
mov
and
out
jl
clc
orl
push
test
add
aam
movsl
inc
push
cltd
mov
lret
ds
mov
into
mov
xchg
popf
insl
xchg
sbb
iret
jg
add
addb
les
aaa
cltd
xchg
pusha
push
out
adc
xchg
and
imul
out
stos
daa
repnz
pop
testb
in
daa
mov
imulb
call
repz
adc
aaa
insl
scas
std
mov
in
mov
scas
jl
add
gs
mov
mov
lock
add
mov
dec
enter
dec
aaa
push
std
loope
ja
mov
lods
mov
xchg
jecxz
add
outsl
enter
sub
std
fdivrs
movsb
dec
jno
cmpsb
negb
mov
jo
ret
loopne
outsb
fisubl
pop
ret
outsb
mov
jae
inc
dec
lret
add
in
movsl
or
jp
xor
cmp
sbb
negb
test
rcrl
xchg
dec
mov
inc
jle
popa
jb
fucomip
mov
push
dec
sbb
inc
sbb
subb
fiaddl
adc
cmpsl
stc
cwtl
jnp
loopne
cmp
les
loope
xchg
out
or
dec
mov
xchg
mov
arpl
jmp
or
mov
jb
lcall
adc
movsl
out
cs
lcall
les
and
lock
sbb
cmpsl
sub
dec
fucomip
test
adc
lods
clc
arpl
mov
or
push
fistl
sbb
lods
cmp
loope
stc
jp
fsubrs
cmpsb
cmp
xchg
push
dec
cmp
insb
sbb
out
insb
mov
lock
les
mov
add
jbe
or
cmp
movsb
add
cs
pop
push
adc
and
pop
push
or
dec
scas
pop
stos
mov
mov
pop
mov
shl
popl
test
cmp
dec
or
mov
addr16
fcmovnb
insb
push
or
shl
or
iret
dec
pushf
and
jp
or
xor
stos
decl
xchg
jge
divb
add
push
testb
xor
mov
jb
repnz
bound
inc
dec
dec
jno
or
imull
push
out
fidivs
out
sub
sbb
rcrb
shr
ljmp
mov
lds
inc
insb
aad
xchg
add
fmull
xor
iret
and
cmc
lods
add
mov
subb
insl
inc
add
mov
lds
shll
or
sahf
jae
mov
push
mov
js
icebp
jecxz
stos
fmull
dec
jb
outsb
cmp
cmc
jmp
fstp
imul
mov
mov
push
das
bound
and
ss
aaa
xchg
and
add
mov
add
dec
jae
xor
insb
and
cmp
std
xchg
pop
or
jae
sbb
repz
push
sti
push
add
xor
callw
cmp
mov
mov
sarl
and
ja
inc
add
and
jo
inc
xchg
outsl
lcall
rclb
pop
sbbb
mov
push
out
lcall
daa
push
jo
xchg
pop
push
nop
push
mov
pop
inc
inc
arpl
adc
xchg
xchg
addr16
repnz
or
ficompl
pop
inc
aaa
shll
clc
sub
mov
mov
rcrl
aam
scas
pop
stc
xchg
dec
insb
jp
sbb
mov
shll
pop
and
xchg
and
jecxz
stos
aas
sbb
sbb
pushf
inc
pop
pop
insl
pusha
xchg
mov
xor
mov
out
stc
aas
push
mov
mov
popa
xchg
push
inc
jmp
negl
xchg
sti
leave
mov
cltd
repnz
hlt
mov
lret
or
pop
sbb
or
pop
xor
shlb
cmp
imul
ja
sub
pop
mov
fmull
jne
mov
add
in
lcall
pusha
pop
mov
int
sbb
shl
lret
subl
cmpsb
mov
cs
data16
xchg
movb
mov
cmp
pop
movsb
sbb
lcall
mov
sub
imul
pop
xor
insb
push
imul
sbb
sti
test
jge
push
pushf
sub
pop
aad
push
outsl
xchg
push
or
dec
mov
mov
test
push
jo
lret
mov
mov
inc
testl
jecxz
adc
sub
arpl
icebp
mov
cmpsb
stos
aaa
mov
mov
pop
shll
and
pop
mov
dec
dec
movsl
jle
pop
ficoml
in
aam
shrl
lods
test
inc
int
push
test
and
mov
and
stc
aad
fucom
sub
mov
push
sub
fwait
shll
lahf
mov
pop
jne
push
adc
jne
inc
push
stos
pop
jbe
mov
loope
cs
xchg
ja
loop
mov
aaa
and
lcallw
notb
or
add
xchg
in
jp
leave
pop
sub
inc
pop
mov
mov
or
pushf
mov
xor
adc
bound
and
daa
and
add
xchg
sbb
enter
jmp
pop
je
stos
xor
in
sbbb
and
int3
add
xor
jbe
mov
xchg
inc
cmp
incl
pop
add
rolb
lock
mov
repnz
mov
cmc
add
sbb
mov
addr16
xlat
xchg
das
call
ret
dec
jne
fdivs
pushf
insl
es
add
or
pop
sub
pop
mov
in
adc
dec
push
enter
adc
sti
in
gs
gs
fldcw
popf
daa
jae
xor
adc
sub
movsb
inc
inc
notl
and
mov
stc
lret
push
repz
pop
cmp
lret
out
pop
andb
dec
pop
jnp
ja
pop
mov
dec
in
push
rorb
xchg
jmp
test
insl
fnsave
xor
in
jmp
sbb
inc
push
or
dec
mov
adc
decb
jg
das
hlt
outsl
xchg
shll
sarb
mov
mov
daa
bound
xchg
mov
idiv
add
sub
setle
pop
add
aaa
ret
cmp
mov
push
push
cmp
mov
mov
push
xor
clc
lods
ds
gs
inc
rclb
adc
popa
sbb
pop
or
stc
adc
cmpsb
jl
sub
push
pop
xor
adc
sbb
jge
aad
mov
dec
aas
cmpsb
xchg
xchg
adc
dec
add
imul
push
xchg
sbb
adc
fidivs
and
mov
sbb
out
int
pop
add
dec
js
sub
pop
movsl
mov
dec
scas
mov
xchg
jbe
divl
daa
lods
fdivp
sub
push
xlat
ss
pop
push
aad
add
mov
std
cld
lcall
inc
jns
test
inc
es
cmpb
call
lea
jg
jno
push
push
mov
insb
mov
cmp
pop
mov
and
adc
stos
test
cmp
int3
jg
pop
push
jp
loop
pop
arpl
push
and
adc
addl
ljmp
or
stc
add
imul
jp
pushf
mov
cmp
ds
iret
xchg
push
jmp
call
lock
or
lret
add
ds
mov
ret
xchg
jp
cmp
clc
shlb
xchg
pop
arpl
mov
sub
mov
lods
ss
push
mov
std
mov
cld
imul
jge
leave
insl
or
xchg
push
mov
xchg
mov
mov
xchg
clc
cmp
fs
xchg
sub
out
fcoms
sbb
mov
or
mov
arpl
mov
mov
fucomp
data16
divb
mov
and
mov
mov
sbb
adc
mov
sub
fbld
and
shlb
pusha
jb
shrl
inc
or
xlat
inc
out
adc
xor
push
inc
sbbb
mov
xor
dec
jns
sbb
push
lods
and
adc
cs
dec
sbb
push
and
lea
inc
inc
xchg
lock
mov
call
rcr
and
scas
push
dec
out
jb
push
cmc
jmp
adc
adc
movsl
shrl
cmpsb
push
scas
push
mov
cmp
inc
xor
scas
aad
pushf
sarb
aad
xchg
inc
into
lahf
pop
jge
xchg
clc
cmpsl
adc
lds
cmp
xchg
fdivrp
push
mov
mov
push
jecxz
fldl
insb
adc
ja
fisttpll
fstpl
fisttps
arpl
pop
mov
cmp
push
xchg
iret
xor
sbb
jmp
sbb
pushf
iret
enter
push
popa
mov
add
push
icebp
inc
loop
dec
or
xchg
xor
push
mov
mov
jae
outsl
dec
int3
xchg
inc
xlat
daa
mov
mov
and
mov
cmpsl
pop
pop
pop
push
loop
call
iret
pop
or
adc
cli
gs
int3
addr16
fildll
stos
andb
lcall
hlt
fnsetpm(287
scas
xchg
lock
and
std
jbe
out
sbb
xor
loop
pushf
mov
in
ds
andl
cwtl
es
ss
mov
out
out
jnp
and
loopne
das
dec
inc
mov
jecxz
inc
sub
fstl
or
mov
xor
enter
iret
insb
fmull
and
cmp
push
lock
bound
pop
bound
jmp
aas
sub
inc
ffree
jns
test
push
popa
out
mov
cmp
lea
outsb
xchg
mov
jns
mov
outsl
mov
push
test
xchg
push
je
loop
repnz
cmp
data16
add
fisubs
or
jp
into
mov
xchg
jmp
mov
and
std
jg
adc
jo
imul
adc
dec
xor
imul
mov
pusha
mov
aaa
ret
dec
inc
mov
dec
loop
adc
sbb
mov
insb
ds
ret
push
gs
inc
dec
push
repnz
shll
mov
sti
lea
sti
pop
push
adc
outsb
xor
leave
fdivr
mov
mov
jno
jmp
aas
sbb
test
add
mov
mov
nop
mov
int3
icebp
sub
fs
cmpsl
add
and
sbb
xchg
push
pop
pop
inc
xchg
dec
or
movsb
mov
push
test
pop
cmp
aas
in
pop
sbb
nop
movsb
in
clc
fwait
ret
xchg
sbb
int3
push
jo
clc
push
enter
loope
dec
sbb
in
inc
cs
jle
popf
mov
pop
lock
jno
cmp
mov
fistpll
or
lret
dec
xor
ret
mov
xlat
cmp
out
in
psrad
popf
shl
sub
js
cmpsb
inc
or
rorl
test
push
ss
mov
pop
loopne
mov
scas
push
ja
cwtl
lret
or
pop
xor
adc
into
insb
cmpsl
mov
pop
mov
lahf
sub
adc
movsb
dec
scas
jne
ret
add
es
dec
mov
mov
std
adc
mov
xchg
stos
mov
std
mov
adc
fwait
stc
lret
cmpsb
jae
inc
jbe
xchg
adc
mov
cmpsb
push
into
es
sub
push
xchg
xor
pop
xlat
xchg
lods
xchg
and
scas
int3
popa
inc
jmp
sbb
mov
cs
push
das
repz
sub
mov
pop
je
rorl
mov
fildl
lock
or
xchg
fisubrs
mov
pop
iret
jecxz
loope
std
stos
inc
das
inc
repz
add
out
jp
pop
and
sbb
mov
test
iret
add
in
jb
insl
mov
adc
pop
lcall
lock
test
les
in
enter
into
mov
insl
or
loop
mov
push
scas
or
push
and
sub
testb
das
int3
adc
add
aad
ds
adc
pop
test
call
inc
stc
test
sub
test
aas
cmp
jp
or
sti
mov
xlat
mov
xorl
adc
jge
fwait
cmp
pop
dec
clc
jne
xchg
shll
cmp
mov
jns
int3
icebp
mov
mov
jmp
xchg
lahf
outsb
mov
ss
jmp
sub
ljmp
sbb
lcall
mov
add
data16
or
push
clc
mov
aad
sub
sbb
imul
outsb
dec
test
inc
test
mov
shll
dec
mov
jmp
out
jo
fsts
jne
sbb
push
jg
cmpb
repnz
add
fildll
mov
xchg
xchg
dec
test
xchg
mov
mov
lret
lcall
push
cmp
std
push
add
fisttps
iret
mov
call
cs
imull
mov
mov
pop
adc
pop
arpl
iret
add
push
push
jnp
push
or
jmp
add
fnstcw
mov
push
xor
jne
mov
pop
jle
lret
les
cmp
push
or
ljmp
lret
das
int
shl
mov
rcll
in
ss
lods
push
dec
nop
adc
cltd
xchg
out
pop
jl
dec
insl
fldl
lock
mov
rclb
call
xchg
sti
mov
leave
dec
shll
repnz
out
cli
mov
ljmp
xor
push
loopne
dec
xchg
mov
stc
lea
shll
test
mov
call
into
push
psraw
cwtl
xor
mov
adc
popa
pop
js
mov
ja
mov
jne
fisttpl
fldt
mov
imul
test
mov
je
push
xor
cmp
insl
mov
mov
outsb
push
cmp
xor
sti
andl
lcall
mul
adc
jl
js,pn
fst
mov
cmpsb
push
imul
aad
fneni(8087
sbb
inc
movsl
mov
enter
scas
fdivrl
add
push
test
sbb
inc
jno
add
or
cli
insl
es
cmpsb
cmp
les
sarb
jl
pusha
xchg
sbb
fistpl
xchg
sbb
fwait
test
sub
icebp
sbb
ds
mull
push
sbb
add
cmp
pushf
push
imul
fdivrp
adc
aad
mov
negl
iret
roll
adc
lods
ficomps
jg
loopne
rolb
add
mov
aaa
lds
sbb
cmp
dec
jne
out
sbb
mov
icebp
int3
cmp
int3
dec
adcb
mov
xchg
cmp
xchg
pop
cmp
arpl
adc
aas
out
jb
dec
out
out
and
add
mov
fmul
mov
fucomip
lret
in
imul
dec
or
scas
mov
push
int3
arpl
and
inc
pusha
ss
aaa
popf
xchg
inc
push
loop
arpl
xchg
or
std
test
xchg
cltd
xor
lock
lret
sbb
adc
sub
je
pushl
js
call
mov
mov
jge
lret
sbb
repz
pop
xor
ss
adc
xchg
push
out
pop
add
mov
stos
sub
repz
int
jns
scas
pop
pop
push
icebp
dec
loopne
sti
mov
mov
pop
pop
lock
mov
push
push
cmp
and
or
inc
xchg
test
xor
or
lds
pop
rorb
test
sbb
mov
js
ja
sub
cmp
sbb
in
negb
add
or
push
ret
hlt
cwtl
jecxz
mov
ret
cmp
sar
sub
inc
push
jae
jae
fldcw
das
inc
adc
jmp
and
sbb
sbb
add
mov
mov
out
sub
lahf
cmp
jg
scas
dec
jg
xor
cmp
pop
push
inc
adc
jns
xor
sarl
testl
jb
cmp
icebp
sbb
add
mov
push
sar
and
push
mov
mov
les
mov
mov
or
pop
lock
sbb
nop
aaa
rcr
daa
mov
xor
imul
fcoms
mov
out
sbb
outsl
cmp
xchg
call
aas
adc
push
int
mov
dec
cwtl
lock
push
sub
push
jecxz
sbb
scas
test
rorl
loop
iret
dec
sub
test
pushf
aam
jg
sbb
push
lock
mov
pusha
fldl
ret
pushf
and
push
mov
cmpsl
and
or
lods
je
sarb
test
jnp
shlb
push
inc
inc
sarl
xchg
pop
aas
cmpl
fst
pop
loope
add
stos
sub
adc
movsl
aaa
test
mov
leave
jo
pop
and
fbld
mov
popf
pushf
iret
shrl
test
cltd
cmp
and
loopne
out
popf
jge
mov
ficoml
jns
in
std
pusha
mov
ds
loope
xor
inc
icebp
jb
xchg
call
fidivrl
jg
std
jge
cli
out
or
or
gs
pop
gs
push
adc
bnd
push
cmp
jg
ds
test
loope
and
pop
push
data16
ret
adc
cmp
push
jp
cmp
jns
mov
mov
dec
loop
xor
inc
pop
push
imull
sub
ficomps
mov
bound
fstpt
loope
add
fs
nop
cmp
jl
daa
mov
sti
xor
add
repz
adc
jo
in
ja
xor
lcall
mov
aam
scas
push
int
lret
pop
in
cltd
fwait
or
leave
dec
jne
loop
sub
dec
dec
cmpsl
dec
sbb
push
fmuls
cwtl
or
inc
mov
popl
subb
sbbb
lret
out
int3
add
dec
push
dec
out
adc
loop
pop
rcrb
xchg
xor
jno
dec
mov
ljmp
clc
cmp
adc
mov
mov
pop
inc
lcall
sahf
cmpsb
xchg
dec
test
cmp
adc
adc
pushf
mov
pop
leave
sbb
test
cmp
push
adc
int3
push
pushf
data16
mov
xchg
add
jecxz
fs
or
inc
shll
xor
icebp
gs
pop
jecxz
dec
out
lea
and
pop
test
test
push
and
ret
loope
and
adc
adc
leave
add
daa
insb
ja
sbb
jmp
xchg
cmp
mov
push
mov
cmp
jbe
sahf
mov
pusha
push
adc
aas
xor
outsl
stc
push
mov
cmp
mov
sbb
popf
rcrb
pop
jg
pop
insb
sub
or
bound
ficomps
add
scas
adc
cltd
push
dec
subl
inc
negl
push
xchg
in
jl
push
jo
addr16
or
in
lahf
les
mov
cvtpi2ps
shrl
lcall
mov
mov
ret
push
dec
das
fmuls
out
into
or
inc
or
lds
adc
add
mov
mov
dec
out
pusha
jmp
mov
aaa
sti
inc
mov
ljmp
mov
aas
outsb
mov
les
shll
icebp
mov
popa
cmp
out
adc
or
pop
lret
call
int3
outsb
leave
xorl
daa
testl
pusha
addr16
xlat
add
aaa
cmpsb
mov
stos
inc
lcall
inc
mov
in
mov
pop
mov
or
in
daa
into
ja
add
add
push
dec
and
adc
mov
sbb
inc
shrl
loop
jne
call
ds
in
and
or
cmp
jmp
jge
in
sarb
cmp
mov
xchg
shll
adc
jae
cmp
mov
mov
out
repnz
hlt
sbb
cmpsl
mov
inc
out
mov
les
mov
je
mov
pop
jae
movsl
popf
jb
or
loop
addb
shrl
js
dec
mov
mov
shrb
jl
call
push
movsb
ret
push
les
loopne
int3
xor
xor
inc
loop
mov
fs
in
aaa
cmpsb
aas
mov
iret
loope
test
nop
imul
jp
pop
and
jecxz
xlat
cmovo
and
in
shl
stc
inc
sbb
negl
sub
jge
sbb
fwait
js,pn
out
int
std
jno
je
ss
xor
hlt
mov
sbb
jne
sbb
push
xor
pop
adc
ret
out
stos
mov
inc
aas
insb
pop
jmp
faddl
ja
outsb
movl
or
xlat
mov
pop
imul
xlat
aaa
dec
rclb
adc
jns
lock
insb
mov
inc
sub
push
into
clc
sub
loop
cld
fucomp
aas
test
sbb
sub
shrl
push
adc
ret
jae
and
push
aaa
rcll
xchg
push
xor
loopne
adc
adc
addr16
add
sbb
lahf
lret
pushf
pop
sub
add
mov
xchg
xor
mov
sub
or
jne
outsb
push
ja
pop
mov
dec
or
sub
lret
push
mov
push
pop
xor
xchg
loope
mov
jnp
dec
lods
jp
xchg
adc
daa
add
bound
rorl
mov
cmp
inc
in
push
stc
add
test
xchg
xchg
mov
jb
lock
pop
es
jp
inc
jmp
mul
inc
adc
ljmp
cmpsl
aas
out
std
jmp
push
outsb
lea
jg
stos
aam
push
ret
stos
push
fstpt
iret
sbb
sbb
add
pusha
sahf
xchg
mov
sub
shl
lds
xlat
lret
fadds
push
cmp
test
mov
and
out
sub
lods
cmpsl
lock
dec
and
dec
dec
aam
mov
pop
add
push
add
and
inc
jnp
cmpsb
icebp
mov
mov
cmp
mov
sub
sub
push
inc
pop
and
cs
roll
mov
call
mov
nop
cmpsb
imul
ja
cmp
sub
xor
fsubs
mov
adc
and
mov
inc
test
pop
sbb
push
lods
pop
in
sub
sbbl
fisttps
or
dec
stos
and
bound
sar
testb
and
or
ljmp
ss
jo
data16
mov
sahf
out
add
std
sti
repz
aas
mov
lds
mov
daa
cwtl
mov
das
test
in
cmc
add
push
rcr
cmp
adc
xchg
popf
adc
cmp
shll
insl
inc
out
xchg
cld
loope
ret
in
mov
call
push
adc
jecxz
fdivrs
jp
push
push
popa
xor
movsl
or
xor
sti
fnstcw
les
dec
mov
ja
out
je
in
fstps
xchg
pop
sub
pop
or
sarl
and
or
int
mov
push
fstpt
mov
out
and
cmp
dec
enter
ss
cli
shll
dec
fs
mov
and
lock
fwait
mov
mov
adc
aas
test
dec
push
out
popa
daa
lock
aam
daa
jns
mov
fucomip
xor
cmpsb
push
insl
jp
xlat
arpl
fildll
add
neg
loopne
mov
add
imul
inc
and
xor
cltd
push
fwait
xchg
lret
or
imulb
or
jp
aam
popa
pushf
cmp
std
fdivl
push
lock
pop
jo
push
es
dec
pop
add
int3
push
jge
sti
sub
movsb
xchg
pop
jo
xchg
jnp
add
repnz
repz
inc
lret
jae
xor
std
pusha
xor
cmpsl
sub
inc
and
push
lahf
mov
fistpll
lods
push
out
lahf
pop
imul
cmpsl
stos
adc
das
cmc
xchg
mov
and
test
sbb
lock
pop
in
cmc
cmpsl
insl
mov
repz
xchg
cltd
outsb
cmp
pushf
sub
gs
xor
fists
scas
xorl
out
and
mov
dec
cmp
mov
pop
loope
adc
fldcw
cmpsb
pusha
sbb
mov
mov
mov
xor
push
mov
cmp
mov
or
icebp
addl
lock
mov
arpl
cltd
mov
imul
adc
or
xor
repnz
push
jl
adc
jno
mov
mov
popa
lret
insb
cmpsb
inc
dec
and
pop
addb
inc
sti
adc
mov
mov
imul
sbb
sub
mov
mov
xor
fistl
sbb
jle
sub
bound
stos
lds
xor
xor
popf
xlat
inc
mov
outsb
outsb
aaa
mov
stc
add
push
inc
pop
xor
mov
jne
ja
movsb
sub
enter
mov
jo
cs
repnz
adc
inc
mov
pop
add
and
xor
int
sbb
test
push
ret
cltd
and
aad
push
lods
adc
enter
add
pop
xchg
push
xchg
cmp
mov
xor
cmp
xchg
or
ds
popa
sbb
mov
push
subl
xchg
sub
outsb
int
dec
adc
lock
xchg
inc
dec
andb
imul
daa
insb
rcr
movsb
and
fldl
xor
out
scas
xchg
mov
add
pop
push
dec
cs
inc
sub
mov
ja
mov
pcmpeqb
pop
and
int
mov
cmp
js
pop
xor
loop
jmp
mov
les
fs
mov
inc
icebp
arpl
test
mov
cli
inc
daa
add
dec
push
cli
pop
mov
mov
lahf
into
imul
aaa
sub
mov
pushf
or
inc
shlb
sbb
cmp
jl
lods
cli
xor
mov
inc
sub
loope
gs
xor
decb
push
shlb
in
cltd
sub
out
add
add
push
pop
mov
cmp
xor
sbb
add
xlat
inc
iret
fimull
mov
cmp
sub
test
add
icebp
push
add
in
jge
mov
mov
jnp
jb
into
js
mov
mov
mov
loope
cmp
fisubs
stos
gs
mov
cmc
pop
cmc
into
mov
shlb
or
sub
fdivs
or
test
and
ret
pop
iret
pop
mov
cmp
into
and
out
es
ljmp
adc
pop
in
pop
cmp
imul
movsb
xor
dec
sbb
push
push
cs
arpl
mov
out
inc
not
sub
push
jnp
push
and
rol
jp
mov
fsts
repnz
shrb
imul
cmp
mov
xchg
rorb
sbb
and
cmpsl
cmp
sahf
iret
fldenv
inc
daa
lahf
fcmovnb
mov
adc
jmp
sbb
imul
sub
leave
dec
sbb
lcall
mov
jae
cs
jmp
pop
push
test
daa
loop
lock
arpl
push
out
push
push
data16
fxch
aaa
xor
sub
lock
inc
mov
sub
sub
xchg
pop
add
les
sbbl
clts
cltd
ljmp
push
dec
mov
je
mov
mov
lret
and
jbe
push
mov
jmp
lods
ja
mov
outsl
lret
adc
out
into
sbb
cmp
jno
icebp
and
push
mov
test
gs
xchg
imul
jno
mov
es
mov
inc
pop
add
dec
cmp
cmp
push
test
pop
lea
das
ja
mov
sub
push
and
dec
adc
adc
adc
nop
out
enter
sahf
or
inc
iret
sub
orb
mov
fisubl
stos
xchg
pop
jmp
add
lds
dec
les
mov
lahf
imul
xchg
test
mov
aam
outsb
dec
mov
lret
loope
xchg
mov
outsb
mov
pop
add
sub
out
movsl
adc
dec
adc
std
mov
cmpsl
add
cli
push
pusha
or
xchg
and
mov
fwait
push
aad
int3
mov
add
les
pop
adc
adc
rcrb
push
shr
das
sbb
pop
out
loope
divl
subl
hlt
movsb
jnp
repnz
hlt
pand
pushf
lock
iret
es
pop
lods
aas
add
std
cltd
add
sub
push
mov
fwait
push
test
or
jecxz
dec
enter
and
jo
nop
sub
and
sub
ss
adc
aas
movsl
popf
std
stos
adc
cmpsl
or
mov
jmp
pop
frstor
cmc
and
cltd
jg
movsl
sbb
xor
jno
stos
das
xchg
dec
mov
push
dec
jno
sub
sbb
cmpsl
jb
insl
cmpsb
or
sub
lret
mov
cli
call
pop
movsb
iret
or
xchg
or
xor
mov
push
mov
xor
mov
pusha
jmp
test
pop
jbe
xchg
sbb
aad
cmpsl
mov
add
test
data16
out
pop
loop
jle
incb
pushf
and
and
adc
dec
xchg
mov
sub
pop
jmp
pop
in
test
stc
adc
jns
add
enter
xor
scas
sbb
outsl
jae
loope
shll
mov
je
inc
iret
pop
fnstcw
pushf
adc
inc
adc
sub
lock
lret
inc
jp
movsl
cmp
dec
lret
lret
loope
or
les
dec
push
nop
sti
addr16
in
xor
movsl
hlt
sahf
add
mov
push
mov
sti
cmp
mov
jo
ret
lcall
mov
lret
sub
xchg
jmp
outsl
movsb
sbb
into
ret
cltd
mov
ret
repz
imul
mov
and
or
and
fcomi
add
or
add
fists
pop
add
mov
shl
lret
fsubr
jecxz
fiadds
cmpsl
enter
int
dec
ficoml
arpl
cmp
push
cs
lret
scas
clc
xor
mov
mov
push
icebp
jo
cmc
pop
fldl
lds
lret
pop
aas
push
aam
mov
addr16
mov
rcrb
fbstp
adc
clc
cmp
das
movsl
addr16
sbb
test
jns
and
xor
jmp
xchg
cmpsl
jp
nop
sbb
dec
mov
mov
push
cmp
and
adc
sbb
stos
nop
and
push
dec
fisubrs
adc
ljmp
addb
mov
xchg
pop
xor
dec
or
imulb
stc
jg
mov
xchg
and
rorl
icebp
gs
jb
inc
fistl
lret
add
bnd
mov
lds
mov
js
mov
arpl
pop
out
pop
call
xchg
dec
pop
loopne
loope
dec
mov
bnd
scas
push
xchg
mov
xchg
and
jmp
movsb
lea
test
pop
jecxz
in
jl
aad
inc
mov
subb
pushf
in
out
in
xor
or
out
imul
push
addl
push
popa
add
xchg
insl
pusha
fldl
lea
pop
movl
imul
jno
test
pop
or
sbb
sbb
mov
dec
jmp
rol
rcr
jmp
icebp
mov
xchg
sti
lock
jnp
mov
lahf
push
push
movsl
dec
pop
pop
dec
addl
repnz
push
and
and
icebp
mov
inc
loopne
rcll
aas
pushf
dec
clc
subb
sbb
outsl
lods
add
popf
or
mov
jnp
test
out
xchg
loop
fidivs
aas
mov
cmp
mov
pop
sbbb
es
cs
or
and
sahf
mov
into
inc
stc
sub
mov
cwtl
add
jae
ljmp
mov
jnp
out
sub
xchg
or
test
lcall
push
and
or
inc
dec
pop
shl
dec
push
mov
jle
test
mov
addr16
adc
push
call
out
push
add
dec
jo
jne
mov
pop
mov
xor
mov
pusha
sbb
aad
mov
sub
push
sbb
leave
nop
repz
lock
jg
je
in
out
lds
in
clc
mov
and
add
adc
mov
xor
sbb
cmpsb
out
jo,pn
clc
ljmp
mov
dec
jp
icebp
push
or
imul
lret
push
pop
push
bound
shrl
test
mov
mov
sbb
pop
cld
xchg
leave
stos
cmpsb
cmpsl
dec
loope
sbb
add
ljmp
push
pop
adc
mov
lret
test
pop
scas
lcall
xor
int3
fs
fsubrs
push
ljmp
mov
pop
pusha
sahf
add
shll
pop
loopne
inc
mov
xor
and
push
test
es
jle
dec
sub
fwait
lds
xchg
inc
jmp
mov
es
jle
jl
arpl
leave
jp
call
shlb
xchg
out
pop
int
dec
sti
mov
cmp
add
aas
aas
enter
or
insl
dec
mov
jp
fistps
ja
fnstsw
mov
aaa
lods
inc
or
test
add
adcb
ffree
inc
xchg
xchg
testb
fxch
push
inc
and
mov
mov
adc
mov
push
inc
and
inc
adc
int
add
xor
repz
icebp
xchg
mov
or
lar
sahf
pop
call
push
mov
mov
push
or
das
dec
jno
mov
shrl
mov
es
imul
lds
aad
and
pop
cmp
negl
inc
pop
cs
filds
mov
js
sub
adc
push
jnp
mov
inc
and
jb
adc
aad
fadd
push
adc
mov
jle
mov
lods
aaa
jg
inc
call
decl
xchg
mov
inc
add
mov
les
cmp
and
popf
xor
mov
movsb
mov
xchg
in
je
in
movsb
lock
adc
push
xor
ret
icebp
push
call
movsb
out
stos
lret
cmpsb
loopne
mov
mov
stos
mov
aad
xor
test
je
mov
mov
aam
pop
add
jb
cmp
xchg
cmp
stos
pop
dec
cmp
ljmp
mov
mov
sub
int3
pop
leave
xor
pop
xor
push
mov
cmc
roll
xlat
popa
lds
push
in
negb
stc
mov
hlt
ja
and
pop
jns
add
mov
jecxz
imull
push
sub
test
sub
xchg
and
sbb
jb
idiv
es
cwtl
cli
inc
xchg
std
mov
hlt
imul
push
sti
jno
pop
arpl
fmuls
insb
dec
hlt
jae
movsl
pop
sahf
jno
sub
das
adc
mov
jl
sub
add
mov
cs
pop
lcall
mov
jo
pop
add
xchg
arpl
add
sub
or
pop
in
lock
into
dec
stos
add
add
enter
aam
lds
dec
das
and
cmp
mov
adc
or
sar
out
insb
xor
int3
aaa
adc
loopne
xchg
xor
jo
jmp
pop
dec
xchg
clc
jae
pop
xchg
push
mov
cmp
dec
push
and
or
xor
es
inc
cld
cld
jae
lcall
cmp
cmp
dec
lahf
jo
mov
inc
pop
mov
into
mov
sub
shr
or
test
or
push
in
iret
jle
ds
xor
faddl
js
cmpsb
test
dec
aam
das
pop
aaa
push
xchg
cmp
xchg
loope
cmp
adc
inc
mov
sbb
fwait
idiv
push
test
call
jmp
mov
inc
sahf
sahf
push
enter
filds
push
aas
jecxz
dec
dec
bound
jle
cli
shl
mov
ja
jbe
xchg
aas
cld
repnz
add
adc
sbb
fisttps
inc
adc
adc
daa
or
cmp
cmc
mov
xchg
loopne
mov
wrmsr
mov
jl
test
xor
fildll
cmp
stc
xor
jo
adc
lahf
mov
pop
outsb
pushf
imul
incl
sbb
cli
jp
cmc
cs
cmpsl
test
lcall
dec
and
add
nop
gs
in
pop
insl
dec
mov
mov
test
mov
sbb
or
adc
xor
sub
mov
in
rolb
daa
push
or
stos
mov
xchg
je
cmpsb
popf
fadd
jbe
adc
mov
rorl
xor
xor
das
add
lds
in
add
insb
mov
xchg
sbb
adc
scas
inc
in
in
dec
cmp
fwait
scas
jecxz
lds
jb
push
sub
jne
and
es
insl
inc
sub
xchg
test
push
andb
jnp
int3
pop
push
dec
fnstsw
push
cli
mov
xor
lret
inc
or
xchg
repnz
push
ljmp
adc
lods
sarl
inc
mov
jo
lcall
or
clc
cmp
inc
mov
imul
test
hlt
pop
dec
xchg
rorb
fadds
ret
xor
push
mov
push
xor
sub
mov
rcl
inc
loop
je
mov
xor
add
std
mov
aam
test
fnstcw
push
xchg
mov
mov
popf
jmp
cmc
stos
aam
xchg
insl
jmp
ja
cs
addr16
jnp
loopne
dec
dec
out
xchg
mov
adc
cmc
push
into
loop
fimuls
mov
cmp
and
js
cmpsl
js
xchg
or
pushf
mov
cmp
mov
addb
mov
add
test
xchg
and
dec
rorl
lods
addr16
adc
data16
inc
sahf
fucomi
jnp
ljmp
popf
cwtl
pop
adc
orl
cld
push
daa
nop
imul
ficoms
pop
or
dec
test
and
add
or
push
mov
sbb
jne
xor
adc
lock
push
xchg
xor
xchg
inc
pop
pushf
mov
mov
hlt
loopne
in
jg
iret
xchg
shll
jne
out
push
pop
push
aaa
inc
inc
ret
jle
pop
mov
jl
cmp
fucom
inc
cs
lahf
bswap
jbe
rcl
shll
fstpt
mov
fcmovbe
dec
mov
add
mov
fs
lods
jnp
mov
stc
adc
pop
stos
jns,pn
lahf
adc
add
and
sub
xor
add
aas
add
lds
jno
pop
wrmsr
dec
push
out
mov
push
addr16
std
mov
mov
in
popa
push
das
xchg
stc
ret
ret
scas
loopne
ss
lock
aad
aaa
lods
xchg
jb
dec
push
jecxz
sar
mov
out
roll
xchg
dec
cmpsl
adc
and
fisubs
dec
or
xor
jns
sbb
xor
scas
in
adc
sub
sub
adc
add
addr16
mov
adc
cwtl
add
mov
mov
mov
lods
lods
or
inc
and
cld
js
lods
pop
divl
pop
jmp
dec
lret
mov
mov
cmp
xchg
sti
lods
adc
add
jbe
and
inc
lds
xchg
cmp
pop
dec
lods
dec
inc
mov
test
or
cltd
cmp
das
or
inc
loope
jne
mov
push
mov
div
jg
imul
add
enter
iret
inc
pop
scas
xchg
jle
pop
adc
inc
adc
mov
xor
mov
and
jl
mov
push
aad
dec
int3
add
imulb
sub
scas
sahf
gs
pop
std
fwait
aam
das
loope
jp
stos
addr16
and
fs
imul
push
mulb
sbb
in
mov
jo
dec
dec
icebp
int3
sbb
sub
push
cwtl
mov
shll
popa
addr16
adc
jl
lods
push
vphaddwd
xor
pop
sbb
add
mov
adc
and
dec
ret
data16
in
sub
pop
and
fldt
pop
dec
pop
bound
and
sbb
stc
jp
xor
push
pop
scas
insl
cmp
clc
adc
cmp
iret
dec
andl
adc
mov
push
add
dec
xchg
sub
testb
jge
sbb
clc
leave
insl
mov
cs
in
jp
popf
push
sti
lods
scas
adc
push
mov
mov
push
int
pushf
lret
out
int
pop
xchg
xchg
movsb
nop
out
xor
xchg
stc
pop
les
testl
dec
subb
lds
inc
mov
sahf
test
rcl
add
and
dec
shll
xchg
pop
in
stos
add
sbb
stc
and
pop
mov
cld
pusha
mov
xorl
adc
out
push
mov
mov
mov
push
xchg
cwtl
jmp
sub
bound
inc
insl
addr16
mov
mov
ficoms
int3
and
mov
push
lock
cli
cmp
mov
dec
shrb
mov
pop
fbstp
sbb
in
push
sub
push
sti
test
outsl
ljmp
mov
psllw
rcll
mov
in
clc
ja
mov
out
cli
add
push
adc
lahf
arpl
jbe
push
nop
xchg
sub
cmp
in
pop
sbb
jge
xchg
xchg
sub
or
xchg
iret
mov
fistpl
and
mov
lret
mov
std
inc
pop
lahf
mov
lods
imul
adc
out
sub
or
add
repz
pop
cli
lcall
ja
rcl
adc
cmc
stos
add
je
xor
sub
inc
lcall
loopne
mov
cli
stos
mov
cli
pop
pushf
cltd
das
jo
cmc
es
cmc
int3
out
lds
imul
jb
rclb
inc
shr
les
pop
cmp
jle
xor
aam
cmp
leave
pop
sbb
aaa
mov
into
push
mov
in
jno
or
xchg
push
sbb
add
into
mov
pop
or
push
idivl
inc
fnstsw
push
clc
mov
adc
in
bnd
je
lods
incb
adc
xchg
mov
lcall
push
in
fdivrs
dec
and
xchg
adc
pop
adc
lret
sbb
addl
out
mov
stos
push
cmp
js
mov
fidivrs
ficomps
iret
jne
mov
lds
mov
enter
orb
push
call
mov
in
jns
sub
mov
inc
stos
cmp
stc
lret
dec
fistpll
mov
adc
mov
cwtl
sub
ret
int3
cmp
xor
jns
inc
inc
mov
mov
pop
dec
sub
cli
repnz
adc
cmpsb
mov
sbb
lds
mov
xor
arpl
sub
sub
outsl
add
push
cli
and
insl
rolb
test
cmpl
or
pop
mov
out
jg
insl
pop
popa
rcll
jmp
js
mov
outsl
rorl
push
scas
das
aas
xor
cwtl
es
xchg
movsb
popa
dec
and
cmpb
add
jecxz
push
lds
pop
out
nop
adc
jg
pop
dec
sub
xorb
and
in
shll
inc
lret
pop
jmp
or
and
jne
xlat
mov
jg
jbe
leave
addl
xor
daa
arpl
mov
inc
add
popf
cmp
leave
lods
stc
add
jmp
data16
jmp
cwtl
sahf
inc
outsl
cmpsb
pop
or
mov
aaa
vrcpss
and
mov
pop
pop
xchg
mov
int
pop
inc
cmpsb
sub
jl
fucomip
sub
adc
pop
in
rcl
and
dec
xor
inc
push
lock
inc
filds
dec
lods
jmp
rorl
push
push
mov
ja
pop
ret
xor
shlb
outsb
jne
idivl
daa
fistpll
sbb
roll
mov
xchg
loopne
mov
fdivs
sub
in
jge
xchg
mov
stos
fiaddl
mov
test
xchg
or
mov
mov
push
pop
cmp
fsubrs
and
push
push
ret
add
fsubrs
or
iret
and
pushf
into
mov
fstps
add
or
rorl
leave
sarl
inc
sbb
or
rcr
out
mov
pop
int
lock
cmpsl
fsubr
sub
xchg
ds
fidivrs
fs
xor
lods
in
pop
pop
push
sbb
gs
inc
cwtl
and
lods
mov
mov
popf
and
stos
movsl
int3
pop
leave
xor
sahf
inc
cmp
xor
ret
dec
ljmp
inc
push
stc
or
sub
cmp
jbe
repz
cmp
out
enter
scas
aas
mov
mov
pop
mov
ret
aam
dec
jnp
cmp
mov
lcall
fbld
add
das
rorl
or
dec
xchg
inc
adc
or
mov
aam
pop
in
xchg
out
pop
subl
dec
out
add
int
out
mov
fwait
push
add
sbb
mov
and
adc
sub
popf
inc
aam
aad
cli
shll
mov
dec
dec
dec
sbb
pop
and
loope
push
arpl
sbb
sub
pop
imul
aas
scas
or
mov
pop
nop
bound
inc
push
cltd
dec
pop
jp
jae
adc
out
rcl
add
popa
push
inc
jne
je
pusha
cmp
fst
jns
insl
scas
add
cld
jl
cmpl
popa
imul
daa
jae
movsb
jnp
test
fs
inc
sub
arpl
jp
or
xchg
adc
mov
in
cmpsl
mov
mov
notb
inc
fidivs
arpl
mov
push
adc
add
cmp
sub
or
pop
call
mov
xor
test
lret
jg
movsl
dec
stos
stos
pop
int3
fcmovb
test
add
ljmp
sbb
sbb
repz
mov
mov
add
jge
dec
pushf
cli
dec
stos
shlb
test
sbb
mov
js
ret
scas
rcll
adc
or
sbb
mov
loop
fnstcw
jne
aam
fldcw
aas
lret
aas
rclb
cmp
test
sub
ja
mov
add
call
inc
ftst
outsl
xchg
pushf
mov
stos
mov
fwait
sti
and
sarl
mov
jg,pn
mov
xchg
jnp
xchg
in
lea
jmp
shl
mov
jle
push
jmp
test
mov
cmp
inc
ss
adc
or
xor
outsl
push
into
xor
fildll
mov
dec
adc
xor
add
inc
popa
out
xor
insl
pop
push
ljmp
dec
pop
inc
int
test
and
or
fdivs
xor
cltd
mov
inc
xchg
sub
and
cmp
cmp
sbb
xor
popa
sbb
fisttpll
or
dec
push
sub
mov
leave
xchg
gs
sarb
lods
insl
ds
jge
jb
dec
outsb
xchg
out
lds
imul
nop
push
mov
out
out
pop
out
insb
add
repz
addb
xor
dec
adc
fcoml
jo
fildl
fisttpl
cmpsb
sti
xor
jmp
and
iret
ljmp
or
xlat
sbb
inc
or
adc
cltd
pop
sahf
bound
dec
cmp
push
test
or
int
addl
aad
out
or
xchg
sbb
insb
pop
jne
test
mov
jbe
mov
push
je
mov
jmp
or
inc
or
lret
enter
sub
push
ja
fstl
iret
adc
sub
cltd
mov
movsl
push
fs
jo
int3
sbb
outsl
movsl
mov
push
adc
into
sahf
pop
inc
imul
and
xlat
adc
xchg
xor
mov
push
in
mov
push
sarl
fwait
mov
ret
outsl
lock
mov
add
dec
in
clc
xlat
or
in
lret
cmp
xchg
pop
and
icebp
mov
adcb
or
loope
pop
xchg
xor
mov
xchg
jmp
ror
push
loop
pop
or
mov
adc
roll
push
add
sbb
addr16
ljmp
xor
jae
cmp
pop
mov
divb
mov
sub
add
mov
pop
xor
sub
jno
xor
mov
push
stc
ja
leave
xchg
jmp
and
frstor
in
xor
xor
out
jge
call
ss
jns
lret
jne
in
jge
lret
or
mov
adc
push
sub
dec
mov
sbb
cli
mov
mov
clc
addb
pop
or
push
jp
mov
movsl
or
lgs
pop
loopne
mov
ffreep
xor
daa
out
mov
and
int
fsubrl
inc
and
ret
mov
fmul
mov
xor
mov
add
inc
jge
cmc
xor
das
add
ss
lods
test
ficoml
faddp
cmp
dec
jg
or
sub
stos
jecxz
shrl
and
into
mov
xchg
jbe
jecxz
mov
test
mov
rorb
stos
or
jnp
xor
insb
inc
push
data16
add
outsb
bound
jmp
repz
and
cmp
pop
mov
aas
int
les
icebp
jmp
sub
insb
ljmp
testl
subl
iret
cmc
inc
mov
outsl
into
jg
jns
je
imul
inc
mov
pop
shr
inc
xor
mov
pop
mov
sahf
fwait
xor
int3
imul
sti
push
add
push
pushf
in
repnz
hlt
enter
xor
xchg
test
idiv
sti
enter
mov
sbb
jne
stc
imulb
mov
cltd
dec
jg
jge
xchg
jmp
data16
outsb
adc
stos
shl
jge
in
pusha
negl
dec
fwait
sar
aad
push
and
push
shrl
inc
xor
add
jmp
or
leave
xchg
cmpsb
and
pop
push
jnp
aad
inc
lods
mov
outsb
pop
adc
stos
mov
inc
cmp
sub
test
adc
mov
add
cmp
lea
mov
xchg
in
dec
cmc
pushf
fdivs
jg
in
clc
sbb
adc
cmp
rcr
mov
dec
sbb
ret
int3
dec
cmp
xchg
nop
push
push
popf
pop
push
sbb
movsb
std
xchg
incl
cmp
adc
mov
pop
ljmp
xchg
popa
push
cld
mov
pop
push
loopne
test
inc
das
xor
sub
push
inc
xor
and
pop
fdivrl
add
je
stos
sbb
xor
mov
daa
jbe
ss
add
mov
repnz
mov
movsl
cmpsb
sbb
xlat
test
mov
pop
xor
imul
jb
in
inc
lret
lcall
cmpsl
xor
int
mov
cvttps2pi
fisttpl
outsl
out
repnz
cmpsb
fs
out
push
movsb
jmp
popf
push
mov
adc
out
add
test
pop
leave
add
xchg
xchg
icebp
mov
mov
sub
push
ret
jp
sbb
push
out
mov
imul
enter
aam
lret
pop
push
mov
mov
divb
cli
push
int
lea
push
test
cltd
add
ror
es
add
xor
push
pop
int3
ljmp
pop
jo
fs
out
jmp
mov
fistpl
and
leave
add
loope
icebp
aas
rcr
js
fwait
pop
cltd
adc
pop
add
cmpsl
dec
fwait
out
sub
lods
arpl
sub
shrb
lret
clc
enter
sbb
ffree
rorb
xor
jae
dec
or
mov
mov
sbb
fsubrl
sbb
dec
addr16
cmpsb
mov
inc
call
cmp
inc
sti
nop
bound
fmulp
insb
lods
scas
sbb
fisubs
sbb
pop
subb
neg
dec
push
fisubs
fwait
cmc
mov
mov
lea
push
test
shl
in
ds
pop
lret
add
jne
fidivs
inc
in
pop
scas
icebp
cs
ja
mov
mov
movb
cmp
jo
icebp
outsl
je
cmp
inc
fs
test
popl
in
icebp
lods
push
xor
pop
pusha
add
and
sbb
mov
push
add
pop
mov
mov
popa
out
pop
imul
ret
fnsave
pop
mov
mov
cld
aaa
loope
aaa
aam
test
sbb
and
or
pop
mov
shll
mov
mov
test
add
ret
scas
mov
jo
pop
sub
popf
and
cmp
push
dec
mov
cwtl
lea
cmp
jg
int3
cmpsb
xlat
in
mov
xchg
mov
addb
sub
sti
add
sarw
testl
cmp
daa
sub
je
dec
gs
test
insb
fidivrl
stos
mov
jno
or
mov
cs
mov
cld
adc
jae
adc
fcoml
and
push
pushw
out
insl
movsl
mov
pop
jnp
mov
fisubs
add
arpl
lret
sub
test
jno
cmpsl
pop
fmulp
cmp
push
arpl
nop
popa
mov
xchg
sbb
call
mov
adc
imul
adc
dec
fmuls
push
jge
xchg
addb
add
imul
jmp
shll
es
inc
mov
cmc
bound
fwait
or
subb
aam
xor
cs
mov
sbb
cmp
mov
pop
fwait
and
iret
lret
out
js
dec
rolb
cs
cltd
clc
push
add
dec
mov
out
test
pop
inc
lret
xor
loop
clc
add
inc
mov
add
inc
sbb
sub
call
mov
cmp
loope
mov
dec
popa
arpl
aaa
les
bound
xchg
into
inc
jecxz
sbb
jae
and
scas
inc
sbb
movl
das
mov
cltd
add
mov
out
lock
add
sub
jle
adc
adc
cmc
or
jge
and
mov
cmp
xchg
fstpt
out
adc
pop
lds
jp
fucomp
sub
rcrl
arpl
pop
xchg
lret
push
sub
xor
and
decl
xchg
iret
ds
and
sbb
clc
push
xor
and
xchg
or
push
or
sbb
and
loope
and
out
cmp
dec
mov
mov
mov
iret
add
fwait
or
in
mov
push
or
iret
push
xchg
push
das
shll
add
cmp
and
stos
pop
out
clc
push
adc
inc
xor
test
add
push
sub
fwait
notb
sahf
xchg
sub
push
lds
psubq
testb
outsl
jecxz
test
int
add
jae
dec
mov
out
or
cltd
add
and
jp
xchg
das
and
lock
shll
cmp
call
sbb
popf
scas
mov
mov
pop
mov
mov
push
or
in
push
jmp
enter
push
hlt
sti
push
push
mov
rcl
push
jp
xorb
mov
jns
cmp
aaa
jl
push
inc
mov
rcrl
sub
mov
test
add
xchg
lods
and
inc
jmp
mov
data16
mov
push
and
mov
in
aas
ja
mov
adc
aad
mov
adc
cmp
adc
mov
mov
aaa
sbb
cld
js
sbb
push
xchg
fisttpl
xchg
arpl
in
mov
dec
fimull
and
mov
data16
mov
out
mov
xor
or
adc
test
push
dec
push
xor
shll
popf
sahf
cmc
adcb
xchg
cmp
mov
or
xchg
jb
lahf
push
push
xchg
jecxz
stc
andb
daa
clc
test
lea
stc
nop
incl
loopne
stc
pop
push
lret
jl
sbb
jge
add
jecxz
inc
divl
rcr
fstpl
fidivrl
daa
das
mov
mov
imul
cmpb
add
ds
ret
scas
xchg
dec
inc
inc
std
aam
pop
das
xor
jnp
imul
adcl
push
fistpll
aaa
mov
adc
pop
xor
sbb
pop
sti
mov
add
lods
xchg
sbb
call
dec
dec
xchg
sbb
cwtl
mov
xchg
fbstp
in
dec
or
mov
adc
push
fwait
loop
and
adcb
in
inc
pushl
fwait
push
aam
scas
ja
xor
xor
adc
in
push
cmpsb
inc
jge
repnz
xor
adc
xor
loop
outsl
pop
and
add
xor
and
dec
push
adc
xor
adc
roll
xchg
push
js
pop
in
pop
mov
xchg
shlb
sub
xchg
daa
das
or
pop
pop
xchg
insb
push
aas
test
adc
fisubrs
adc
in
popa
sbb
das
jp
loope
xor
test
xorb
mov
out
cmp
jge
fnsave
mov
mov
cmp
mov
sbb
stc
testb
flds
leave
scas
stos
jo
adc
jge
lods
mov
cmp
xor
and
xchg
jge
loope
mov
enter
lret
sbb
add
mov
cmp
adc
mov
int3
dec
stos
fiaddl
les
sub
in
hlt
mov
movsl
cmp
fwait
or
lahf
outsb
pop
xchg
mov
jb
sti
sar
int3
sub
or
add
dec
cmpsl
adc
lret
cs
imul
xor
xor
gs
jbe
std
mul
cmpsb
outsb
out
xchg
xchg
fdivl
and
jle
jo
pop
iret
mov
mov
and
xchg
push
dec
mov
sub
aas
sub
mov
inc
push
or
out
into
fidivrs
push
lahf
push
xchg
push
test
je
sub
mov
add
jmp
ss
pop
add
xchg
sti
ljmp
fsubl
in
outsl
notb
sahf
sub
adc
sbb
daa
iret
add
sbb
adc
mov
xchg
and
cwtl
pop
inc
pavgb
std
int3
mov
lods
arpl
lds
xor
int
cmp
cs
mov
cmp
popa
or
std
cmpsb
mov
outsb
add
pop
pop
mov
mov
repnz
nop
incl
mov
insl
dec
std
aaa
sub
jp
or
fildll
mov
daa
ror
fimuls
lods
and
xchg
cmp
out
push
cmpsb
in
aas
xorb
ds
and
repnz
mov
nop
sarl
pop
push
push
call
js
inc
loope
mov
inc
jno
mov
sbb
sub
dec
test
loopne
pop
and
mov
das
pop
push
and
cmpsb
mov
mov
sbb
scas
pop
mov
shll
pop
movsl
sbb
pop
mov
scas
adc
lret
jle
daa
inc
cld
dec
dec
adc
sahf
jg
add
cmp
ja
mulb
cmp
xor
pop
inc
jg
adc
stos
sub
inc
sub
outsb
dec
fcom
outsl
lds
aad
call
push
out
imul
inc
add
mov
sbb
aam
mov
mov
shr
sbb
mov
mov
inc
jb
jae
mov
sbb
adc
lcall
out
mov
dec
scas
mov
mull
or
js
mov
add
call
int3
cs
in
inc
inc
jmp
sub
mov
add
sbb
inc
xchg
clc
xchg
sub
sti
mulb
stc
xchg
xchg
nop
adc
imul
ds
jl
push
mov
and
sub
fidivl
or
push
pop
aaa
xor
cltd
dec
popf
imul
cmp
and
push
call
in
cmp
es
sarb
movsl
mov
jne
sti
std
dec
fwait
sbb
add
adc
or
in
int3
stos
rorl
outsb
pushf
rol
pop
push
int
out
add
outsl
mov
pop
in
sbb
lds
adc
inc
cmp
xchg
mov
mov
sub
cmpsl
inc
dec
sbb
dec
jecxz
aad
and
enter
mov
mov
jl
mov
into
mov
fdivs
jbe
lea
daa
push
int3
pop
or
popf
lods
sub
pushf
jbe
sti
pop
and
jae
arpl
imul
add
decw
sbb
inc
lds
mov
sti
fwait
mov
enter
shl
push
push
es
xchg
shlb
inc
outsl
fwait
out
fisubs
shlb
mov
mov
cmc
inc
push
and
push
sbb
fwait
jno
or
add
adc
and
jle
fwait
sarl
lret
daa
inc
jmp
lret
enter
pop
xor
aad
sub
lret
nop
ljmp
fimuls
cmp
clc
jae
and
xchg
adc
jnp
fildl
test
sub
addr16
bound
push
push
xor
fidivl
scas
dec
inc
jno
lods
dec
loop
jg
ja
or
adc
daa
int
dec
subb
std
testb
sti
repnz
filds
mov
inc
enter
sbb
cs
and
pop
inc
popl
aaa
out
pusha
push
adcl
js
xor
sub
inc
popa
sub
movsl
fldt
dec
gs
call
sub
jmp
imul
ret
dec
ds
cld
fcomps
cmpsl
imul
aam
dec
iret
pop
movsl
dec
daa
sub
inc
stos
push
out
or
enter
adc
push
mov
ss
lea
fidivl
mov
jne
popa
xchg
add
push
mov
jmp
dec
dec
es
sbb
jg
daa
add
sahf
pop
cs
lea
or
mov
xchg
cmpsl
mov
sbb
pop
ljmp
frstor
adc
mov
inc
ds
test
lahf
jge
stos
mov
and
fldt
andb
iret
sbb
sbb
cmp
jmp
cs
imul
and
mov
push
cmp
or
inc
daa
xchg
xor
cwtl
and
push
dec
data16
adc
push
push
pushf
and
jge
ret
sub
adc
cmp
mov
loope
jae
lret
pop
data16
mov
orb
cmp
push
int3
mov
xor
jbe
push
lret
adc
push
jge
fimuls
js
pop
rcr
lcall
shr
xchg
lock
pop
pop
nop
add
testb
es
scas
dec
xchg
xchg
cmp
subl
dec
ss
xor
or
add
cmc
mov
mov
std
movsl
ret
cmpb
or
adc
jno
shl
dec
mov
sbb
lcall
ljmp
pop
sahf
mov
jnp
mov
das
mov
pop
inc
lret
cmp
jecxz
mov
cltd
jo
dec
add
cwtl
inc
ror
loop
pop
ds
vminss
mov
xor
sub
mov
inc
pop
loopne
rolb
push
inc
test
mov
pop
push
enter
mov
jp
xchg
mov
xlat
and
mov
cmp
push
lods
fcmove
mov
mov
sahf
adc
push
inc
jmp
sbb
jne
push
test
scas
fildll
push
js
or
rcrb
movsb
aad
push
inc
xor
and
mov
mov
cwtl
add
ljmp
jge
and
imul
fsubrs
ss
lods
mov
sbb
imul
movb
fcmove
add
jns
push
rcrb
aam
sub
repz
dec
dec
outsb
push
and
and
fdivrp
dec
cmpsl
aam
data16
xchg
lea
and
sbb
scas
sub
push
ret
mov
std
in
add
mov
das
es
dec
cli
jmp
gs
popf
ljmp
push
sub
dec
adc
bound
in
stc
cmp
xchg
mov
mov
adc
adc
js
mov
push
cmp
and
push
sub
and
out
cmpsl
scas
imul
jmp
dec
ret
jne
add
dec
cmp
test
mov
or
sbb
and
pop
xchg
mov
nop
cmp
int
add
int
cmpsb
xor
in
cmp
mov
sub
call
enter
or
pop
pop
and
inc
loopne
xchg
scas
add
push
cmp
sub
mov
jl
and
pop
aam
xchg
mov
lret
push
stos
sub
jl
aaa
ljmp
mov
sub
lock
jecxz
aam
xchg
fldt
inc
xchg
sub
out
mov
mov
shrb
push
pop
cwtl
xor
mov
pop
cmp
sub
js
in
mov
das
out
ret
lea
dec
adc
bound
adc
mov
dec
cmp
lds
out
daa
xchg
mov
push
aas
xchg
frstor
cmp
xchg
mov
pop
imul
fbld
mov
fs
jge
inc
xor
dec
jb
shrl
out
xchg
sahf
adc
mov
xchg
inc
mov
push
test
push
outsl
xchg
pop
push
push
std
out
imul
xorb
stos
lcall
xor
addr16
jbe
je
aam
mov
test
add
dec
xlat
dec
mov
cmp
aad
pop
mov
sbb
subl
les
out
pop
xchg
sbb
jmp
fmull
or
les
insl
ja
mov
outsl
and
aaa
test
mov
pop
stos
stos
push
mov
xchg
xchg
ret
vpaddq
inc
mov
pop
dec
ss
sub
cmp
xchg
mov
adc
jecxz
mulb
daa
icebp
dec
cmp
lods
pop
daa
adc
adc
ljmp
lea
in
mov
popf
dec
pushf
addr16
je
jg
leave
pop
bound
iret
test
shll
mov
test
orb
xor
inc
and
adc
push
out
cmp
in
lret
fbld
pop
sub
add
je
ror
cli
push
lods
or
leave
push
add
mov
imul
add
addl
jp
enter
int3
jg
mov
in
mov
and
sub
dec
stos
cmpsl
pop
ss
xor
jno
sbb
dec
in
inc
inc
loopne
mov
orb
pop
cmc
mov
pop
lea
sbb
jno
insl
out
mov
lea
shll
adcb
pop
aaa
popf
pop
dec
shl
or
mov
pop
xchg
aas
jle
clc
leave
scas
aad
imull
divl
mov
push
sub
addb
cmp
roll
adc
sub
cli
and
je
jecxz
xchg
and
jecxz
rcll
push
popa
into
shrb
shl
movb
add
cld
jp
inc
xchg
outsb
loope
cli
fwait
sub
push
xchg
aas
inc
jle
xchg
sbb
xor
mov
notb
adc
and
add
clc
je
addb
pop
push
dec
int
push
lods
movsb
outsl
mov
or
daa
push
mov
nop
mov
ljmp
popf
cli
mov
xchg
cmc
pop
sbb
jb
movl
and
imul
jp
xor
icebp
cmp
sbb
mov
adc
mov
cmpl
mov
mov
adc
mov
or
mov
push
bound
pop
xor
aam
push
cltd
adc
outsb
movsl
xchg
in
in
out
xchg
pop
call
fnstenv
push
ss
jecxz
subl
mov
divb
cmp
fs
fs
out
or
dec
adc
loope
or
xchg
fidivrs
and
out
movd
cmc
test
adc
hlt
lds
pushf
std
or
clc
inc
test
mov
mov
or
into
popa
dec
push
or
push
rcrb
mov
fsubr
fistpl
mov
icebp
mov
daa
imull
dec
push
inc
pop
popf
aas
mov
jb
add
int
scas
cmp
repz
fistpl
sub
fwait
xor
cmp
jmp
mov
sub
xchg
mov
inc
dec
jne
dec
xchg
scas
dec
popa
or
fmuls
bound
inc
je
mov
lds
insb
je
lea
mov
stc
movsb
cmp
fwait
insl
mov
or
adc
nop
pushf
aad
mov
mov
daa
pop
add
out
xchg
ss
or
jo
jne
gs
sub
dec
clc
std
dec
leave
inc
fistps
push
and
pop
cmp
mov
or
sti
xchg
nop
cmp
inc
lea
roll
adc
sbb
je
and
inc
cltd
adc
cmp
mov
dec
dec
in
lea
inc
mov
fbld
xor
jge
cs
jecxz
cld
mov
scas
xchg
jo
insb
push
mov
jbe
add
inc
mov
adc
aaa
jns
lea
ror
xor
in
fucom
cmpl
out
add
iret
aam
test
ljmp
sbb
jno
mov
outsl
aas
cmc
fstps
mov
aaa
out
xor
leave
cmp
cmp
ja
dec
mov
mov
push
and
mov
aad
lds
or
pop
pusha
push
pushf
sbb
ss
jge
jno
cltd
jnp
mov
mov
sbb
ja
pushf
mov
jl
xor
push
fistps
dec
sbb
stos
loopne
nop
jecxz
arpl
aas
pop
jmp
xlat
sti
jge
pusha
mov
in
xor
push
loope
jne
int
sub
or
out
cmp
mov
mov
jne
push
lret
mov
jp
in
clc
pushf
cmc
cmpsb
js
in
fwait
out
je
aam
dec
add
adc
out
jae
cmc
sbb
aaa
pop
ret
and
xor
adc
stos
js
movsb
pop
test
xor
or
rorl
sarl
mov
dec
push
cmp
std
iret
out
cld
out
loope
lds
push
into
fbld
out
out
push
xchg
jmp
push
jno
pusha
aam
xchg
push
addb
mov
dec
pop
loopne
call
mov
ja
into
jecxz
mov
pushf
dec
ffreep
or
mov
cld
shrl
aaa
test
filds
xor
push
in
les
rcrb
fildll
fldcw
ficompl
jge
and
mov
xchg
inc
ret
mov
cmp
cmp
jnp
imul
cmp
lret
mov
jl
inc
xchg
clc
jge
shll
or
cld
into
shrl
xor
call
mov
pop
test
xor
adc
jl
jg
dec
pop
repnz
dec
jo
xor
inc
mov
cld
outsl
pop
xchg
sbb
sub
ja
pop
pop
ljmp
cmp
je
mov
es
sbbb
outsb
xor
stos
cltd
push
mov
adc
push
dec
lock
pop
scas
mov
xchg
adc
add
lret
popf
aad
cmp
lea
jg
or
lahf
cmpb
add
cld
xor
ret
add
daa
mov
repz
divl
subl
and
push
das
push
addr16
lcall
add
icebp
sub
imul
dec
push
lcall
mov
popf
pop
mov
xor
jnp
jg
cli
xchg
ljmp
bound
mov
into
mov
stc
or
sbb
jns
dec
push
pop
add
push
mov
loope
push
adc
jge
add
add
es
jle
adc
inc
andl
andb
xlat
sub
sub
jo
add
mov
out
jae
pop
push
push
sar
pop
iret
dec
xor
orb
pop
pop
mov
stos
push
add
int
push
cmp
push
pop
out
jo
xchg
js
cmp
and
mov
dec
lods
mov
dec
sub
je
icebp
jae
sbb
jo
insl
lret
inc
cwtl
cltd
or
stos
lea
jno
aad
sub
mov
cmp
cmp
and
jg
xchg
cmpsb
mov
xchg
or
dec
aad
push
jno
mov
cmc
dec
xor
push
repnz
ja
sbb
nop
cli
dec
inc
xchg
cmc
push
cmp
aas
pop
lock
pushf
sbb
push
ret
dec
movsb
push
push
dec
cwtl
sub
push
or
adc
inc
or
cmpsb
pop
loop
jmp
test
rorl
fnstsw
push
cmp
int
jno
mov
mov
or
lock
pop
pop
rorb
stos
inc
ret
aad
pcmpgtd
ret
int
or
or
jle
dec
pop
addl
xor
sub
or
and
pop
ja
jmp
rcll
sub
les
out
pop
lds
mov
stc
sub
jbe
pop
xchg
adc
xchg
adc
pop
or
call
and
mov
icebp
cmp
jb
adc
and
into
mov
cli
add
sub
sub
and
adc
popa
push
cld
add
test
je
sbb
test
popa
test
add
in
push
sub
pop
fmuls
fdivr
jnp
mov
insl
or
push
cltd
xchg
stos
fwait
push
pop
jo
jo
daa
adc
xlat
clc
inc
mov
rcl
dec
mov
inc
sahf
push
dec
pop
das
addr16
es
cmc
rcl
or
cs
into
call
push
sub
mov
push
stos
jae
sub
mov
lods
cmpsb
ds
lods
xchg
daa
or
fdivrp
sbb
lds
loop
inc
cmp
jp
xchg
mov
fimull
leave
add
cltd
xor
xchg
lds
jecxz
ret
cli
rorl
jns
loop
incl
rcll
mov
lret
mov
mov
pop
inc
xchg
insb
fwait
insb
movsb
xor
out
push
fisttpl
rcrl
or
les
popf
sub
addr16
out
in
xchg
pop
jbe
andl
cld
mov
inc
xchg
out
movsb
into
push
pop
mov
mov
sbb
jae
xchg
xchg
rolb
mov
rcl
xchg
and
mov
in
and
popa
add
pop
sub
insl
or
mov
jo
and
out
pop
sahf
cwtl
xchg
test
jmp
cmp
cli
aas
bound
mov
pop
sub
push
cltd
daa
neg
jmp
and
adc
adc
shll
mov
rolb
lods
mov
dec
sub
dec
push
outsb
lret
aaa
std
cmpsb
test
sbb
stos
loop
dec
outsb
push
aaa
ljmp
shlb
and
inc
int
or
lcall
pop
jmp
fwait
jle
adc
add
lods
addr16
ffree
bswap
pop
pop
inc
leave
and
fiadds
jae
sub
lret
mov
pop
dec
fst
jle
sbb
mov
mov
aas
pop
adc
stos
mov
dec
dec
cmp
mov
insb
dec
xchg
popf
aaa
int3
inc
popf
cmpsl
jo
pusha
jbe
xchg
mov
fsubrl
shrl
push
mov
das
lahf
test
pushf
mov
pop
daa
je
outsl
pop
jns
test
popa
mov
and
xchg
mov
jl
nop
xor
enter
xchg
xor
add
popa
or
sub
adc
or
mov
xorb
test
jae
je
fisubrs
ja
insb
sub
and
dec
sub
lock
stos
push
imul
inc
jae
js
call
add
or
sbb
ljmp
mov
aam
mov
sbbl
hlt
fdivr
fcmovnu
ljmp
pusha
mov
jle
cmp
repnz
xchg
pop
call
dec
cld
in
ret
pop
std
mov
int3
dec
pop
pop
and
dec
std
push
push
js
rclb
sub
fnstsw
adc
pop
and
and
push
fidivs
popf
ret
les
pop
and
daa
and
in
xchg
sarl
stos
sub
or
fs
ss
pop
rol
rol
jne
xchg
or
clc
and
cmpsb
adc
fadds
xlat
cltd
cwtl
out
inc
pop
jb,pt
inc
cmp
sub
icebp
lods
pop
shl
cmp
fsts
out
stos
xchg
in
aad
or
push
pop
aaa
mov
movsl
or
popf
mov
add
xlat
inc
push
push
out
dec
mov
mov
outsl
stos
cmp
in
pusha
sbb
jnp
sti
inc
mov
out
adc
mov
cli
mov
popf
fs
jle
sub
add
shrb
cmc
in
test
push
xlat
push
xlat
and
adc
add
ds
nop
dec
mov
and
rclb
mov
cmp
loopne
dec
pop
jmp
int
dec
xchg
dec
jb
mov
jae
push
loop
pusha
xor
ret
xchg
fdivl
adc
dec
loope
sub
mov
leave
lods
out
add
or
or
addl
add
add
mov
inc
push
faddl
fs
adc
xchg
add
ret
mov
incl
push
test
ret
das
sbbb
fistps
mov
push
leave
mov
lea
sub
mov
xor
mov
sub
cmp
xor
clc
data16
add
push
push
call
movsb
or
dec
push
aam
fistpl
loop
jp
pop
mov
icebp
scas
push
dec
inc
sub
imul
call
sbb
movsl
mov
sbb
repz
adc
mov
jg,pt
cmpb
push
sbb
aam
cli
out
enter
jle
leave
pop
out
sbb
mov
jge
xor
sti
rorb
mov
cs
data16
and
pop
and
jno
dec
imul
test
nop
pop
mov
fwait
jae
pushf
nop
inc
xchg
adc
cmp
push
xchg
dec
jecxz
mov
fiaddl
in
mov
add
mov
mov
xor
lcall
rorb
mov
mov
jnp
sub
push
pop
syscall
les
int
mov
ss
mov
pop
lret
movsl
pop
into
ss
push
pop
fwait
jnp
lret
test
insl
mov
jnp
sbb
mov
mov
xchg
mov
jmp
fisubrs
xor
pushf
cld
jge
and
loope
cmp
mov
add
subb
push
clc
loopne
das
hlt
aas
ficompl
scas
pop
xor
daa
or
jge
jl
push
std
add
jnp
push
in
loope
int
sbb
push
aaa
or
cmp
inc
repz
pushf
lahf
movb
pop
call
cmpl
roll
and
loope
addr16
pop
mov
wbinvd
cmpsb
in
sbb
dec
daa
insb
adc
mov
int
dec
je
insl
mov
push
pop
mov
popf
out
mov
in
aam
xor
or
js
jne
inc
xor
jae
les
xlat
sub
jmp
fdivr
push
and
xchg
sub
cmp
test
xor
jne
dec
les
in
sub
dec
mov
dec
add
and
mov
dec
aad
mov
mov
pop
dec
std
jbe
imul
imul
outsb
mov
arpl
in
dec
les
xchg
push
mov
bound
in
movsb
stc
fnstcw
movsl
adc
fdivl
lds
mov
cmp
arpl
inc
or
stos
into
jg
fbld
mov
mov
daa
stc
mov
xchg
aas
int3
adc
divb
lods
ret
cwtl
pop
iret
hlt
lcall
movsb
push
daa
sub
clc
mov
ljmp
inc
das
push
repz
mov
lret
jb
jns
pop
scas
mov
push
fadds
lahf
mov
jl
mov
sub
jae
jb
push
sbb
jg
mov
mov
xchg
xor
dec
outsl
push
push
cli
movq
aas
add
arpl
arpl
mov
inc
add
push
dec
out
pop
mov
mov
push
sbb
js
adc
stos
daa
adc
push
fdiv
push
mov
mov
rorl
jbe
and
je
ret
xchg
push
jae
jnp
rcl
push
adc
fs
pop
jo
fs
fisttpl
jb
cmpsb
cmpb
mov
xchg
mov
sub
repnz
jae
frstor
fimull
js
data16
cmp
dec
ds
sub
mov
and
outsb
out
sbb
aaa
mov
and
adc
adc
mov
nop
push
pop
mov
pop
clc
inc
mov
inc
add
or
stc
sbb
cmpsl
and
fs
sahf
rorb
mov
add
test
dec
mov
mov
adc
jmp
ss
daa
testb
dec
mov
mov
pop
xchg
gs
mov
aas
cmp
inc
mov
cmp
les
sbbl
fwait
push
arpl
addr16
push
or
into
cmp
cmp
loope
scas
jl
in
and
icebp
stos
iret
cmp
sbb
bound
rcr
mov
lds
sti
and
xchg
into
lea
shrl
mov
subl
jae
inc
scas
pop
jmp
cs
loop
pusha
and
cmp
pop
adc
push
cmp
push
outsb
jg
test
popa
ds
dec
xchg
jge
add
xchg
adc
jbe
mov
xor
push
jg
mov
data16
int
ss
mov
push
or
lods
scas
push
lahf
stos
pusha
out
jl
movsl
pushf
std
add
xorl
pop
dec
aas
cmp
fisttpl
ss
aad
int3
in
cmp
scas
xor
mov
insb
pop
clc
repnz
jbe
scas
sbb
adc
ret
lods
fdivrl
rolb
fistpl
mov
cmp
and
loopne
repz
repz
xor
sysexit
xchg
cmc
pusha
xchg
or
int3
cmc
push
test
cld
scas
in
sti
sub
fdivl
dec
inc
inc
je
loop
add
clc
inc
pop
fwait
push
lret
mov
cli
leave
push
int3
pop
stos
adc
pop
stos
dec
in
les
es
push
dec
xor
mov
and
ds
test
push
push
fiaddl
shrb
jo
pop
adc
jnp
fdivrl
push
popa
fidivs
or
dec
xor
mov
daa
mov
pop
scas
adc
sbb
mov
mov
cmp
jl
lods
jbe
into
cwtl
out
push
lock
cmpsl
or
xorl
add
mov
lds
mov
rclb
sbb
fldl
push
rol
dec
into
adc
sub
dec
cli
push
and
adc
lods
stos
pop
fs
shrb
mov
decl
sub
jne
push
andb
sahf
push
add
cmp
lret
enter
out
test
repnz
jns
xorw
mov
xlat
dec
mov
mov
mov
int
ret
jnp
out
inc
and
mov
cmc
mov
mov
xlat
sbb
aas
lea
or
aaa
inc
mov
aaa
sarb
mov
ret
cmp
pop
or
push
jle
xchg
jmp
int3
pop
pop
sbb
repnz
lcall
shrb
mov
push
inc
inc
jbe
sbb
imul
loop
jmp
mov
push
repnz
mov
outsb
fstl
xor
hlt
repz
and
cmp
and
push
orl
loop
xor
push
lahf
push
pop
rclb
cmp
add
fstps
mov
aaa
jg
scas
xor
push
xor
push
sbb
add
jns
popf
jo
in
roll
and
lds
adc
add
mov
popf
sarb
aad
int3
cmp
fnstenv
aaa
je
icebp
inc
cmp
out
fdivrl
call
push
jno,pt
pop
test
dec
aaa
sub
dec
in
sub
loop
lret
mov
cmp
add
add
add
dec
lahf
leave
push
dec
sub
lock
arpl
or
cltd
cmp
fs
sbb
cmp
push
cmpsb
aaa
test
outsb
xlat
mov
cltd
sbb
pusha
jnp
and
jecxz
ds
inc
jl
or
pop
xchg
pop
push
bound
cmp
sahf
mov
leave
shl
dec
cmc
sbb
test
loope
mov
vexp2pd
inc
jecxz
inc
or
and
mov
ss
out
and
sti
inc
sbb
mov
in
pop
sbb
jb
gs
leave
cmc
sub
aam
daa
negb
fnstcw
imul
scas
pushf
xchg
data16
cmp
push
lock
jno
mov
sbb
adc
gs
lods
roll
jno
cmp
js
sti
aas
inc
pop
rorb
imul
cmp
adc
aam
out
xor
repnz
jle
fwait
push
sbb
ljmp
pop
pop
mov
mov
inc
sub
mov
or
rclb
out
jnp
xor
fdivs
out
and
sbb
jmp
mov
xor
fld
add
mov
dec
bound
ret
ret
mov
cmp
cli
into
imul
pusha
sub
mov
cmc
inc
insl
and
enter
fmull
pop
cmp
dec
icebp
xor
mov
or
shl
popa
dec
nop
clc
cmpl
xchg
inc
pop
adc
loopne
add
dec
xchg
mov
jbe
dec
cmp
mov
je
shl
mov
pop
pop
cli
je
insb
inc
push
insb
das
xchg
xchg
movsl
inc
pop
jnp
mov
mov
jl
scas
xorl
aam
enter
popf
daa
orb
fistpll
mov
movsl
cmp
add
sub
out
sahf
xor
cmp
xchg
mov
inc
inc
mov
xor
add
divb
stos
jae
ja
das
inc
lds
jae
aaa
shll
adc
jecxz
add
jnp
or
ficoml
ss
mov
dec
pop
pop
add
sarb
sub
jle
pop
mov
jmp
addr16
and
sbb
aaa
sti
push
adc
iret
or
pop
test
push
mov
adc
test
xor
push
in
xchg
cmpsl
mov
add
mov
mov
push
and
pop
popa
xchg
pushl
inc
rcrb
push
xor
sarl
jae
jne
push
fs
js
sub
inc
roll
shll
xchg
scas
insb
loop
pop
pop
push
fidivs
mov
jnp
adc
test
inc
jne
mov
das
int3
mov
xor
pop
dec
in
adc
pop
ror
test
pop
pushf
nop
shlb
jae
ret
mov
cwtl
dec
add
pop
insb
push
mov
cwtl
mov
mov
mov
pop
repz
add
mov
jp
test
repz
jge
fildl
addr16
jb
dec
sarb
jge
ljmp
mov
cmp
mov
jb
icebp
lcall
xor
jo
cmp
mov
push
add
ficompl
push
ret
cs
add
ss
icebp
mov
adc
jl
outsb
push
dec
iret
cmp
out
out
add
outsb
in
mov
inc
jnp
jb
data16
jns
inc
and
roll
daa
ljmp
add
and
dec
test
daa
mov
adc
cmpl
popf
rolb
scas
clc
clc
rclb
movd
fs
out
hlt
or
inc
adc
inc
add
mov
sbb
lahf
ficoms
sbb
mov
or
mov
lret
push
mov
xor
ret
insb
lret
jae
popa
das
scas
or
iret
subl
imul
sahf
jbe
add
incb
mov
je
pop
sti
pop
dec
sbb
xchg
pop
cmp
inc
testb
nop
jno
in
sbb
fmull
push
hlt
xchg
and
je
gs
mov
dec
in
pop
xchg
rcrl
loope
lea
cmc
std
sub
push
popf
in
mov
xchg
or
mov
jl
xchg
cs
cmc
scas
outsl
xor
dec
cwtl
pop
mov
pushw
adc
dec
pop
xchg
push
mov
clc
adc
leave
shll
repz
inc
out
inc
out
mov
cmp
daa
addr16
cmp
addl
stc
add
int3
out
dec
test
mov
jns
xchg
cwtl
mov
and
sub
rcrl
mov
repz
xor
pop
imul
scas
inc
lcall
call
push
test
lea
sbb
xor
jnp
repnz
sub
in
stos
dec
xchg
lahf
cmpb
push
daa
add
std
fmull
cmp
jmp
aam
ljmp
cmp
mov
push
daa
lret
mov
add
ftst
ja
out
adc
daa
data16
push
xchg
sub
inc
pop
inc
lods
cwtl
xchg
xchg
sub
jp
or
xchg
jae
sbb
push
hlt
adc
jl
lcall
dec
or
mov
lret
scas
decl
aad
ret
and
push
adc
pop
clc
dec
lods
xor
sub
cmp
push
mov
push
jns
not
pop
imul
xchg
fcomp
push
or
fnstcw
data16
aaa
jno
and
mov
sub
fwait
sarb
fprem1
mov
xchg
out
icebp
lea
jno
fldl
pop
or
gs
dec
decl
out
pop
enter
arpl
mov
cmovbe
les
repz
pop
lcall
cs
push
cwtl
test
mov
stc
pushf
xchg
push
push
lods
andl
cmp
popf
pop
fucom
lods
ret
xchg
adc
add
inc
mov
or
mov
push
pop
in
insl
negb
mov
sbbl
pop
and
fisttpll
cmpsb
dec
push
imul
fistpl
mov
cmp
add
and
imul
jbe
inc
cmp
mov
cli
ljmp
ss
pop
mov
inc
and
mov
repnz
cmc
mov
aam
cltd
je
cmpsb
rcrl
repnz
inc
lods
xlat
call
int3
loope
cmp
dec
or
mov
vphaddubq
ja
add
and
aas
stos
arpl
inc
sti
sbb
jnp
adc
ret
sarl
ja
mov
mov
orb
and
out
cmpsb
cmp
aas
and
mov
in
xor
mov
sbb
mov
mov
pop
push
popf
in
movl
pop
daa
jg
sbb
bound
gs
and
lock
aad
addr16
inc
or
mov
fildll
scas
cmpsl
or
inc
and
pop
push
jnp
pusha
mov
dec
subl
jo
dec
mov
and
xorps
addr16
orl
mov
in
je
sbb
push
lret
xor
cmpsb
sub
test
jg
cld
push
mov
or
xchg
pop
mov
add
pop
or
leave
mov
pop
test
dec
xchg
cli
xchg
ja
mov
mulb
jl
jae
mov
lret
add
adc
jl
js
frstor
test
imul
rorl
jge
adc
pop
outsl
xorl
or
imul
mov
xchg
cmp
movmskps
pop
xor
sbb
int3
mov
jl
mov
mov
pop
sbb
sbb
xchg
push
fiaddl
aad
inc
divb
popf
mov
xchg
out
and
mov
shrl
add
cld
andl
jge
mov
cmp
sub
lods
mov
subb
mov
xor
add
imul
xor
and
xchg
pop
cmc
xbegin
dec
sbb
pop
or
cmp
push
imul
push
pop
dec
lods
mov
ficomps
xor
shl
adc
fistl
sbb
das
mov
gs
jns
leave
subb
adc
sub
jo
pop
stos
adcl
mov
ret
inc
add
jge
or
add
pop
add
outsb
and
pop
lods
scas
add
dec
xor
push
inc
cli
ss
add
pop
mov
stos
pop
std
stc
rcll
loop
cltd
ss
insl
xchg
rcrl
loop
mov
cli
xor
fistpll
pop
mov
ja
lahf
sub
jp
fcoms
push
fsub
pop
rol
pop
inc
fists
aad
xor
jae
movsl
add
jb
shl
cmp
ffreep
shrl
fwait
mov
out
push
or
divl
xchg
push
out
lods
inc
addr16
jae
shll
orl
mov
or
sub
push
stos
adc
add
movsb
cmp
sbb
dec
xchg
mov
subb
ljmp
add
inc
inc
or
ja
lods
and
aad
or
push
es
loope
ljmp
dec
rcrb
lods
rorw
pop
loope
sbb
mov
sub
notb
cmp
dec
pop
leave
dec
mov
push
clc
ret
ret
dec
add
jb
orl
mov
jnp
lret
loop
cmp
pop
pop
sahf
imul
jg
fidivrl
or
cmp
arpl
push
xchg
xor
inc
mov
aaa
clc
fistpl
imul
ds
pop
in
jle
lods
ftst
fists
xor
iret
sub
jo
xchg
add
scas
sarl
push
pop
add
rcr
je
fucomip
out
lret
dec
cmpsl
stos
es
and
jne
outsb
les
cmpsb
fisttpl
popa
sub
jo
cld
fs
icebp
ret
mov
add
roll
add
cli
std
loop
mov
add
outsb
jl
test
dec
out
fistl
mov
js
jb
movsb
inc
cmc
jns
sub
inc
call
dec
aaa
mov
mov
add
xchg
jbe
dec
sbb
rorb
shrb
lahf
adc
cltd
loope
movsl
outsb
pop
jg
pop
inc
dec
movsb
pop
subb
in
cltd
add
lock
push
out
dec
mov
dec
scas
gs
out
lock
mov
mov
inc
mov
pop
pop
jge
lea
add
movd
xor
ret
mov
ror
sbb
ds
sbb
clc
jl
cmpsb
sub
xchg
pop
xlat
shll
cld
xorb
or
adc
lea
xor
add
push
jmp
insb
cltd
inc
jge
aas
repnz
mov
push
cwtl
lret
pop
dec
cmpb
inc
in
aas
mov
xor
ljmp
cmp
stc
out
lods
xor
std
inc
fidivrs
cs
mov
xor
mov
and
not
push
and
jle
dec
sti
xor
push
mov
mov
cmp
out
inc
aaa
aam
cwtl
pop
jae
mov
fidivrs
adc
add
mov
or
sahf
mov
and
push
pop
pop
inc
test
cmp
scas
mov
mov
out
add
mov
and
push
clc
in
adc
rclb
mov
arpl
mov
clc
and
push
mov
rcpps
push
xor
jns
pop
sbb
cld
mov
sti
and
into
pusha
mov
pop
pop
insl
imul
push
repnz
mov
lcall
cltd
lret
xor
sbb
jb
push
aam
inc
lret
outsl
adc
jae
sbb
rcll
push
dec
iret
pop
outsl
sub
inc
mov
ret
scas
dec
sbb
xchg
and
inc
add
in
pop
out
jp
imul
shr
mov
cmc
mov
mov
jo
call
sub
ljmp
dec
adc
clc
shr
push
addr16
cmp
fildl
cmc
pop
je
push
inc
xchg
fcmove
bnd
lds
inc
push
fwait
imul
cmp
jne
sbb
int3
push
fstpt
nop
adc
jmp
jae
or
mov
xchg
add
sahf
lret
mov
fwait
add
stos
out
pop
sti
ret
insb
add
leave
into
pushf
popf
int
adc
outsl
pop
cmpb
ds
pusha
add
sbb
or
dec
pop
xchg
add
in
call
and
ja
fists
push
shll
ffreep
repnz
shrl
xor
lcall
roll
cmp
fdivs
test
or
je
mov
insb
out
jmp
movsl
push
data16
mov
push
xor
jmp
sub
imul
adc
mov
ret
call
repz
push
cs
in
pop
popl
mov
scas
iret
test
push
addr16
inc
pop
push
js
mov
mov
inc
aam
or
add
xor
lds
push
test
lds
add
pop
jp
adc
mov
into
jne
loopne
lcall
es
and
out
push
xchg
fmull
leave
pop
leave
jns
xor
inc
dec
ficompl
js
mov
add
dec
jl
lret
js
push
xor
mov
int3
insb
pusha
pop
mov
idivb
lret
test
cmp
push
imul
xor
mov
in
leave
mov
je
or
orl
add
in
mov
push
mov
cmp
test
mov
mov
jg
sub
cmp
jns
dec
loop
add
mulb
imul
lcall
cmc
fisttpl
mov
mov
inc
mov
mov
lret
add
sbb
mov
sbb
lock
daa
iret
popa
fsubrl
imul
dec
std
rcrl
jmp
pop
pusha
ret
shrb
dec
daa
mov
adcb
pusha
sahf
cmp
cld
pop
ret
mov
xchg
orb
into
mov
mov
mov
or
ret
lods
cmp
dec
or
dec
jo
addl
or
cmc
push
dec
adc
mov
add
inc
add
sbb
out
adc
push
xor
outsb
mov
push
shl
adc
cmp
xchg
arpl
pop
mov
mov
nop
dec
or
pushf
decb
cmp
xchg
sbb
popa
cmc
pop
push
outsb
es
mov
lret
sbb
rolb
mov
shlb
outsl
and
add
fdiv
popa
int3
scas
out
in
clc
jbe
lret
int
add
jo
arpl
or
or
sbb
mov
das
or
scas
cmp
inc
dec
cmp
dec
pop
mov
stc
int
hlt
mov
fisttps
ret
lcall
lods
mov
jo
std
dec
jo
inc
pop
mov
or
adc
mov
jle
addr16
ret
das
mov
ss
imul
dec
xor
dec
mov
mov
dec
adc
push
repz
push
and
out
inc
mov
js
shlb
bound
out
gs
aad
test
adc
js
mov
notb
repnz
inc
out
out
and
mov
lret
xchg
scas
mov
push
shlb
jl
and
daa
test
xchg
cmp
add
xchg
sti
out
test
sbb
insb
mov
jns
lods
add
fldt
test
xlat
inc
mov
sub
sub
loop
clc
fdivl
out
jnp
and
dec
movsb
push
add
insl
pop
sub
pop
push
and
ja
sahf
dec
dec
mov
mov
xor
shl
sbb
mov
cwtl
cwtl
aad
mov
rcr
sub
cmp
cld
cltd
push
push
lcall
loope
movhps
in
mov
bound
jno
or
sbbl
sbb
mov
sub
ja
out
movsl
lret
cmp
fcmove
test
cwtl
outsb
add
mov
add
sahf
push
add
jns
int
inc
lret
mov
adc
dec
cmp
add
xchg
movsl
mov
js
adc
ret
scas
cmp
dec
mov
sub
pop
ds
jmp
ss
pop
mov
scas
push
jmp
shrl
scas
push
and
sti
imul
mov
test
jmp
std
cmp
xor
and
imulb
mov
mov
adc
sbb
mov
jnp
xor
je
test
mov
insb
ds
inc
cmp
adc
rcrb
inc
mov
jmp
in
cmp
xchg
cltd
cmp
push
mov
imul
add
adc
mov
pop
jp
inc
lock
idivl
popf
out
cmp
ljmp
pop
lock
testl
mov
ja
lds
mov
daa
insl
add
fdivs
mov
insb
fcoms
mov
int3
xchg
mov
out
pop
enter
fmuls
lcall
or
stos
addr16
cmp
xchg
jmp
jl
cmp
inc
icebp
or
xchg
dec
ss
out
push
cmp
outsl
sub
push
test
inc
push
mov
movsl
std
mov
push
and
out
sbbb
jo
pop
xchg
mov
adc
std
movsb
lret
add
cmp
inc
jno
mov
and
test
mov
aaa
xor
inc
bound
mov
add
mov
std
adc
cld
test
pop
sbb
fldt
adc
ljmp
mov
fwait
jbe
mov
rcll
push
xchg
mov
inc
stc
nop
cmp
jb
dec
cmpl
xchg
lret
inc
adc
jbe
push
pop
pop
adc
aaa
pop
mov
scas
and
ret
jne
cmp
sti
mov
pusha
ret
push
mov
adc
in
mov
pusha
mov
fmull
mov
stos
xor
mov
popf
mov
out
pop
mov
dec
sub
repnz
stos
test
jle
mov
sub
mull
inc
xor
xlat
icebp
and
sbb
dec
sbb
xor
cmp
ficoms
sub
or
sbb
sahf
or
cmc
or
and
fwait
ret
cmp
es
into
and
jecxz
fisubl
mov
pop
cmp
mov
sub
out
cmp
bound
jp
cmp
mov
into
in
popa
das
mov
mov
or
jge
jne
pop
inc
add
cmp
mov
pop
clc
cmp
sbb
jo
sahf
sub
fcoml
mov
data16
jmp
cmp
xchg
notl
mov
addr16
je
test
inc
adc
push
lret
mov
ficoms
mov
xor
add
or
out
cmpb
cmpsb
xor
mov
fucom
mov
push
adcb
loopne
pop
and
fsubl
pop
push
add
in
push
shll
and
bound
add
push
lock
fdivrp
xor
xchg
sub
cmp
out
jnp
ja
jecxz
pushf
data16
sub
scas
in
hlt
dec
test
fwait
xchg
test
stc
aad
in
push
push
xchg
mov
aad
adc
or
in
rol
hlt
ljmp
cmp
dec
adc
and
leave
inc
notl
mov
movsl
in
jo
js
push
mov
jg
mov
lods
jl
ror
adc
add
mov
adc
test
pop
cli
loopne
loope
adc
push
lock
fyl2xp1
popf
in
test
stos
test
mov
mov
negl
sbb
push
test
mov
jecxz
sub
dec
sbb
adc
inc
scas
mov
loop
xor
adc
stos
loope
push
popf
scas
add
mov
cmc
repnz
mov
mov
outsl
jmp
cmp
mov
or
ret
gs
mov
mov
daa
mov
adc
push
das
mov
in
js
lret
or
mov
fwait
or
pop
cli
and
scas
mov
mov
cmp
dec
clc
pusha
lret
cmp
sub
xchg
pop
jl
jmp
stos
in
push
lds
inc
and
xlat
cld
inc
pushf
or
cli
cmp
sub
cltd
push
sarb
push
sub
dec
rolb
sbb
cmp
push
sub
pop
add
in
inc
mov
sbb
lea
push
mov
push
ret
jnp
pop
dec
xchg
cmp
push
mov
pop
test
sub
bound
xchg
stos
xchg
scas
push
outsl
inc
mov
jnp
shr
icebp
ret
test
in
out
push
inc
inc
sbb
movsb
sub
and
mov
push
fildll
insb
sub
aaa
loop
inc
pop
pop
cmp
push
adc
pop
icebp
push
sar
inc
jl
leave
lret
push
loope
push
jl
sbbl
popa
push
pop
ret
lret
insl
cmp
jl
jmp
out
cmpsl
adc
cwtl
lcall
add
dec
push
pop
xor
pop
xchg
inc
adc
std
test
cmp
mov
cltd
fisttps
push
rolb
xor
inc
cmpsb
jmp
daa
pop
pop
insl
rorb
mov
dec
iret
mov
mov
add
imulb
adc
mov
pop
dec
inc
wrmsr
pop
pop
ficompl
jbe
xchg
ljmp
xor
movl
lock
xchg
add
and
faddp
xchg
scas
loope
cld
imul
aaa
aaa
inc
xchg
lret
or
cmc
push
rcll
movsb
les
inc
cmp
push
cmp
fidivrs
rorl
sub
lret
dec
and
push
aam
inc
push
mov
push
fldenv
push
pushf
test
loopne
push
push
pop
and
cli
inc
int
das
divl
daa
sbb
hlt
cmpsb
std
pop
mov
xchg
out
insb
out
cmp
gs
bound
rcr
sarl
test
xor
and
data16
popf
pop
insl
cmp
push
stos
jle
lcall
xchg
xchg
aaa
daa
xor
xchg
sbb
push
jnp
in
or
in
mov
inc
dec
dec
push
nop
stos
add
adc
xchg
sbb
dec
lods
inc
jb
fldt
aas
pop
lods
lret
into
loopne
pop
fwait
aam
and
fwait
outsl
mov
mov
dec
inc
hlt
lock
insb
sbb
mov
subl
scas
jnp
cmc
pop
ficoms
out
rol
mov
cs
iret
shll
ljmp
je
and
pop
pop
lock
out
rol
push
push
push
cld
daa
in
mov
call
loop
ret
aam
filds
adc
cmp
or
jae
jge
pop
roll
sbb
mov
loope
les
ljmp
aam
loop
int
inc
sahf
jae
xchg
insb
xlat
and
fsubl
into
mov
and
dec
rcll
adc
mov
or
jge
cs
insl
enter
aaa
loope
pop
hlt
xchg
jnp
clc
and
out
nop
ljmp
xorb
push
push
or
or
inc
out
mov
testl
ret
addr16
dec
cmp
pop
inc
sub
ss
dec
or
in
cs
adc
xchg
imul
pusha
je
sbb
test
pushf
push
lods
ja
es
je
fs
cs
mov
repnz
or
push
xlat
movsl
das
xchg
cmc
pop
imul
mov
add
jnp
pop
adc
arpl
enter
dec
aaa
fnstcw
xor
dec
test
cmp
mov
mov
lret
or
xchg
dec
push
imul
mov
daa
sub
dec
outsl
push
fistpl
mov
cld
test
lret
jne
aas
mov
mov
aas
jae
andl
xchg
lcall
jge
push
daa
enter
imul
jns
lcall
daa
sti
sahf
jbe
push
test
ljmp
inc
and
xchg
insb
out
pop
sbb
add
rclb
jge
mov
movsl
loopne
xchg
lahf
adc
cmp
lahf
jmp
hlt
cmpb
mov
sub
or
push
fdecstp
add
lret
fs
faddl
sub
negl
lea
popa
xchg
push
sti
lahf
inc
xlat
pop
popa
outsb
adc
cltd
xor
sahf
ror
jbe
enter
lahf
rcrl
arpl
mov
ljmp
pop
or
mov
mov
adc
popf
call
es
cmp
xlat
imul
lahf
adc
push
sub
fistpll
add
lret
test
inc
mov
sub
jl
mov
mov
aad
sbb
jle
rclb
sub
jae
pop
idiv
jbe
xor
pop
shll
aam
lea
adc
cmp
scas
xchg
imul
jmp
in
jo
xor
mov
push
cli
insb
sub
add
adc
fnclex
cli
push
icebp
popa
jg
fcomp
mov
mov
sbbb
outsl
pop
adc
ja
loope
dec
or
cmp
jae
cmp
sub
iret
sub
mov
mov
insb
mov
sarl
adc
ja
movsb
inc
pop
lods
inc
imul
pop
js
adc
pushf
cs
push
inc
iret
adc
push
out
lcall
mov
push
lods
xor
jns
xor
xorl
mov
lea
pop
js
cli
outsb
sub
hlt
mov
ds
and
dec
mov
pusha
xchg
push
test
sub
xor
push
js
mov
dec
xchg
lcall
fbstp
push
mov
xor
pop
mov
fists
xchg
loopne
test
lods
daa
shll
mov
jo
jno
dec
sbb
hlt
fmul
repnz
aam
xchg
mov
int3
dec
sti
lods
aad
test
sahf
clc
shll
push
rorb
and
cmp
cli
push
in
jns
inc
or
mov
xchg
outsb
repz
pushf
imul
loope
adc
in
insl
int
cmp
pop
fwait
popa
pop
andl
mov
fwait
sbbl
jge
add
add
in
fldt
add
fidivs
mov
hlt
mov
pop
rcrl
mov
pop
mull
subl
mov
sbb
movsb
popa
mov
xchg
lods
int3
enter
and
push
dec
jg
lcall
scas
cmc
shrd
movsb
pop
xor
and
faddl
xor
push
out
mov
push
fmul
mov
out
mov
and
int3
cltd
dec
cmp
lods
dec
push
clc
lret
adc
push
les
mov
sarl
shrb
fadds
and
sub
cmpsb
mov
popf
cs
into
inc
push
subl
add
mov
and
jmp
jb
jnp
inc
xchg
or
jle
mov
xor
lods
arpl
orb
dec
sbb
xlat
loop
insb
and
cmp
aam
mov
mov
out
jb
jo
js
roll
nop
int3
cmp
inc
mov
fcomps
xchg
xlat
jg
lods
pop
fisttps
hlt
shl
cld
mov
and
bswap
mov
aas
jge
call
mov
push
mov
in
xchg
lods
fadd
in
addr16
fdivrl
pop
clc
lods
roll
in
jg
sub
mov
popa
ficoms
ror
xorb
addr16
fs
movsb
lret
jecxz
cmp
cli
pusha
mov
push
add
inc
xchg
add
call
clc
sbb
repz
jg
addr16
sub
test
cmpsl
or
test
repnz
mov
pushf
test
pop
sub
or
mov
fistpll
xchg
mov
jl
rol
jecxz
daa
icebp
scas
ja
inc
jmp
xor
lret
adc
push
pop
int3
pop
pop
sub
push
mov
jecxz
enter
ljmp
mov
int
push
adc
scas
arpl
ss
xor
sbb
sahf
push
jp
jle
cwtl
psubusb
imul
orl
movsb
jo
xchg
pop
mov
loope
movsl
stc
lock
adc
xchg
scas
cs
sub
xor
aam
xor
inc
push
mov
xchg
mov
add
pop
xor
mov
jb
pop
mov
or
jecxz
cmp
lret
nop
jnp
popf
pop
mov
pop
lods
sub
imul
xchg
clc
mov
jbe
mov
jle
adc
stos
jmp
lds
mov
fidivrs
pop
sbb
in
push
adc
dec
add
hlt
xchg
pop
pop
mov
int3
into
dec
fistps
repz
addr16
sub
and
das
cmp
js
nop
dec
imul
xchg
dec
popf
lds
or
and
in
ret
lahf
add
int3
fst
push
adc
push
cmp
stos
jmp
push
push
iret
sub
popf
jl
fidivrs
cwtl
cli
cmc
push
ds
movsl
inc
push
xchg
dec
jge
jne
add
jecxz
fstl
lods
lahf
sti
jmp
xchg
inc
rcll
xor
or
ljmp
sbb
push
loopne
add
or
movsb
dec
cwtl
inc
xchg
xchg
leave
jne
jge
fwait
out
test
push
adc
adc
jae
movsb
shrb
fmull
dec
dec
push
imulb
mov
fbld
and
das
dec
adcl
mov
int3
add
sub
add
js
cli
cmp
aam
fstps
jmp
movsl
filds
inc
mov
int3
and
cmc
mov
cmp
lock
push
mov
mov
pop
and
and
push
dec
stos
jecxz
mov
sbb
sbb
iret
inc
sarl
sub
pop
push
mov
outsb
or
outsb
incb
mov
imul
mov
movsb
push
jo
daa
push
lcall
arpl
lcall
add
push
adc
sub
cmp
xchg
stos
xchg
scas
mov
movsb
add
pop
add
dec
mov
lahf
aaa
pop
pop
fdivr
lret
popf
nop
ja
cmp
inc
sub
test
into
adc
outsb
fcomps
xchg
lods
xchg
fnsave
cwtl
aad
adc
xchg
adc
pop
push
push
pop
cmpsb
sub
or
jmp
fidivrl
add
and
xchg
add
addr16
pop
sbb
lods
in
sbb
mov
repz
push
mov
js
aaa
jns
cmpsl
sbb
jnp
cli
inc
dec
sbb
rcl
lods
cmp
jnp
out
mov
je
add
xchg
std
sub
repz
mov
jb
popa
lahf
lret
ret
push
int
in
xor
fisttpl
inc
inc
fcomp
lods
pop
sahf
mov
xchg
imul
dec
test
add
add
xchg
jb
inc
add
adc
dec
and
sarb
cmp
stos
pushl
ret
or
in
lock
negl
lods
cld
popf
xchg
in
jp
pop
insb
push
adc
sarb
xchg
mov
mov
xor
cmp
adcb
cmpb
sti
loopne
subl
xor
shr
push
mov
or
or
leave
mov
in
adc
scas
daa
in
fwait
lock
ja
bound
dec
outsl
rorb
pop
xor
or
bnd
push
inc
cmp
or
lods
push
mov
add
pop
icebp
iret
stos
mov
repz
and
pop
fisubs
ret
cmp
xchg
and
icebp
and
jae
enter
push
inc
movb
or
imul
fcoms
sub
push
cmp
xor
rol
jns
push
jg
mov
mov
push
dec
xchg
dec
jmp
cmp
jns
jmp
insl
movsb
mov
inc
and
push
and
adc
xor
imul
lock
das
and
dec
inc
ret
cmpsl
cld
pushf
les
arpl
mov
dec
cmpsl
mov
pop
push
cmpsb
mov
aaa
mov
call
xchg
and
in
mov
mov
gs
repnz
cmp
mov
inc
mov
dec
mov
stos
cmp
mov
dec
insl
add
push
pop
jb
mov
sub
cs
in
inc
mov
shr
and
jg
mov
xchg
or
fidivrl
push
push
adcb
mov
lea
repnz
into
das
das
sbb
sbb
stos
or
push
jl
mov
subl
pop
and
leave
xchg
jmp
cmpl
out
jg
push
movsb
mov
xchg
js
xor
in
cmpsl
leave
mov
addb
xor
bound
imul
cmp
jns
std
cwtl
in
cmc
mov
rol
mov
leave
cltd
mov
adc
jmp
and
cmp
sbb
inc
enter
jbe
fildll
mov
scas
andb
je
adc
das
xor
xchg
mov
push
jmp
fildl
les
ret
stos
mov
mov
add
mov
mov
scas
arpl
inc
pop
imul
and
jbe
subps
test
ljmp
add
adc
sbb
cld
in
not
push
sbb
and
sti
sarl
js
ret
es
jmp
cmp
lods
push
and
andb
test
inc
jbe
jecxz
stos
clc
aas
out
dec
lcall
jl
add
xchg
sub
pop
xchg
or
adc
push
jb
mov
sub
dec
add
es
adc
xchg
mov
andl
daa
jns
mov
std
mov
fsubrl
lds
rcll
mov
rcrl
jne
loopne
int3
xor
pop
push
je
aas
xor
push
or
push
icebp
push
sub
cmpsl
int3
loope
xchg
mov
lods
fisubs
pushf
test
fimuls
cmp
push
jb
and
enter
call
adc
maxps
add
shll
mov
xchg
fs
cmp
iret
arpl
lds
lahf
sub
fs
inc
mov
inc
mov
push
cld
out
fdivl
adcb
and
or
or
sbb
xor
inc
mov
cmp
mov
movsl
push
ret
movsl
repz
pop
pop
mov
hlt
fbstp
push
adc
adc
push
add
push
dec
bound
into
insb
xor
or
xchg
adc
or
jae
xchg
pushf
loop
dec
setle
into
je
pop
pop
ror
jo
xchg
pop
or
in
lods
mov
bound
popf
mov
rol
pop
ret
xlat
sbb
mov
jg
inc
jae
out
jp
nop
fdivr
xchg
xor
das
subl
dec
pushf
rcl
stos
or
jmp
int3
push
aad
call
jo
sbb
mov
adc
rcrl
inc
adc
movsl
fsts
insb
shrl
xchg
jge
mov
mov
imul
xorl
cli
cltd
daa
cwtl
inc
rcr
loope
xor
mov
mov
or
je
jbe
push
out
xchg
sub
jns
mov
and
sub
jb
mov
enter
push
das
xchg
adc
jp
repz
orl
pusha
bound
sbb
insl
sbb
xor
and
jbe
div
aaa
shlb
pop
daa
pushf
push
dec
loope
mov
out
xchg
cmpsb
sbb
cmp
add
mov
inc
mov
je
mov
dec
pop
outsb
adc
incl
or
or
mov
test
je
inc
pusha
mov
cmpl
std
arpl
cmpl
and
ds
sub
insb
cmpsl
dec
popa
sub
je
sbbb
jl
jg
pop
out
jge
and
and
sbb
sub
adc
clc
push
mov
cmp
aas
ja
cmpsl
nop
jb
int3
dec
ljmp
fsubs
mov
xor
data16
leave
aam
andb
shr
push
scas
pop
sbb
cld
sahf
subl
adc
hlt
sbb
aas
popf
dec
add
je
push
pusha
dec
sahf
jo
fsubrl
add
clc
sbb
and
mov
mov
gs
pushf
sub
lcall
sbb
scas
out
es
mov
mov
rol
pop
cmp
mov
cmpsl
cltd
push
ficoml
sub
cmp
addr16
xor
xor
ja
mov
add
mov
add
scas
inc
insb
xchg
cmp
std
pusha
mov
xor
xlat
je
imul
movsl
fisttpl
push
pusha
add
pop
mov
add
nop
loop
imul
pushf
loopne
int
xchg
mov
fiaddl
imul
scas
pop
mov
dec
adc
xlat
mov
movsl
sub
addr16
pop
hlt
call
dec
cmp
fsubrl
inc
xor
popa
gs
int
xor
sahf
in
out
and
xchg
or
mov
loope
lods
inc
andl
xor
push
sbb
pop
cmp
enter
mov
lahf
sahf
arpl
and
stos
adc
push
cmp
adc
dec
lcall
movsb
lcall
or
mov
xor
push
xchg
fcoms
mov
and
cmp
cli
div
into
mov
add
cmp
imul
mov
dec
mov
or
xchg
or
add
push
xor
shlb
jle
into
data16
pop
lcall
test
push
dec
in
scas
inc
lret
popa
mov
mov
dec
inc
inc
ds
dec
or
out
pusha
mov
pop
in
scas
clc
fs
iret
ds
ret
dec
pop
pop
xchg
addr16
jmp
push
jecxz
stos
out
jo
push
iret
pop
pop
inc
or
sbb
jae
data16
repnz
push
push
loope
sub
sarl
fs
xchg
xchg
test
lret
push
movb
push
popw
sbb
das
stc
push
sub
stc
std
ret
adc
lods
xor
cmpsb
mov
shl
inc
dec
mov
add
sbb
mov
mov
adc
aas
jae
sub
cld
idivl
sbb
std
loope
leave
adc
jno
jne
sub
pushf
fnstenv
insb
add
lret
pop
add
outsb
xor
or
lea
rcl
je
ja
ret
adc
mov
popf
hlt
call
mov
xor
fiadds
stc
ror
xlat
mov
mov
arpl
add
das
ja
or
mov
xchg
cmpsb
in
movsb
mov
in
fdivl
mov
lcall
pop
mov
xor
pushw
adc
ja
pop
sub
mov
xchg
rcrb
test
xor
inc
lock
dec
outsb
mov
sub
lahf
sub
cld
fiadds
add
and
jmp
inc
enter
xchg
push
or
cmp
test
xor
popf
sbbl
les
cmpsb
sbb
cmp
fcmove
mov
mov
std
adc
es
ljmp
addr16
mov
xchg
out
xor
outsb
jp
sbb
xor
ret
push
sbb
or
fwait
enter
pop
aad
fsubr
xor
je
scas
shlb
bound
loope
mov
cmpsb
aam
aaa
sub
mov
lcall
cmpsl
sub
popf
rcrb
cmpsb
decb
out
mov
shrb
sub
push
adc
push
in
iret
mov
lahf
fisubl
push
mov
pop
xor
cmp
xor
pop
les
add
clc
inc
sub
fiadds
jns
jge
xchg
cs
fcoml
lock
les
shlb
xor
push
dec
xchg
hlt
sub
insb
dec
mov
xor
dec
arpl
arpl
add
add
stos
or
mov
out
rcll
sbb
and
sub
and
imul
pop
mov
lret
push
sbb
mov
push
cmp
xor
mov
mov
les
int
sbb
mov
mov
adcb
mov
jecxz
pop
and
cmpsl
addr16
dec
push
shl
outsb
and
ss
pop
popa
int
sbb
notb
rcl
jns
test
add
scas
lods
popf
xor
js
rorl
sbb
enter
sbb
pop
ficompl
lods
sbb
rcr
jmp
or
sub
sbb
sahf
push
jns
jo
rcll
lea
mov
push
cmpsl
pcmpgtd
mov
lea
inc
add
jno
mov
sub
cmp
sub
add
daa
jl
ret
repnz
out
jmp
int3
fs
lea
and
lret
in
push
jl
sahf
les
call
and
mov
jmp
inc
sar
push
cmp
in
test
in
divl
shlb
aad
es
pop
add
jae
lods
pusha
jecxz
push
inc
dec
mov
sti
nop
add
mov
es
aaa
sahf
mov
jl
dec
pop
sbb
mov
mov
lret
and
repnz
push
gs
cmp
or
in
fcos
xchg
enter
cmp
pop
mov
stos
cli
lods
pop
ja
cld
jmp
add
xchg
push
or
out
lods
aam
test
mov
les
jecxz
mov
ss
outsb
shl
mov
dec
xlat
add
pop
push
cwtl
fldenv
inc
das
inc
adc
pop
negb
mov
cmp
ds
ds
repnz
fistps
in
xor
lret
cmp
push
imul
inc
mov
call
pop
loop
cmp
out
dec
gs
push
push
add
cmpsb
popl
pop
sub
dec
adc
mov
insl
jp
rep
mov
test
xor
jge
loope
and
imul
push
mov
mov
popa
and
push
lods
sahf
mov
add
dec
and
lahf
stos
cwtl
or
hlt
insl
in
sahf
dec
idivb
lds
xchg
repnz
jl
dec
and
xor
out
rorb
sbb
mov
das
push
mov
aam
and
push
mov
lret
out
stos
push
cmp
pop
jmp
jne
iret
jne
cmp
negb
bound
mov
lods
push
push
sbb
fimuls
xor
clc
cmp
in
imul
mov
jle
add
push
in
out
imul
dec
fnstsw
int3
std
aam
cmpsb
dec
sbb
add
cli
dec
loop
movsl
in
jae
adc
jbe
out
bsr
loop
jg
aam
test
sbb
sbb
repz
fs
outsb
mov
dec
xchg
imul
and
fwait
mov
mov
out
test
cmpsb
jnp
lods
adc
jb
rclb
dec
out
outsl
adc
leave
cmpsb
dec
mov
decb
aad
gs
xor
inc
push
ds
in
leave
test
outsb
loop
in
stos
pop
jb
dec
ret
add
shll
addb
icebp
lret
loopne
out
jnp
fwait
in
sub
fs
xchg
jecxz
xchg
pcmpeqd
bound
jns
cld
sbb
ja
hlt
mov
pop
lods
repnz
inc
loop
mov
js
roll
in
adc
fistpl
xor
outsl
mov
cli
and
mov
gs
cld
out
mov
bound
pop
dec
lret
inc
mov
mov
dec
iret
dec
mov
mov
xchg
bound
ret
fsubrs
jge
mov
mov
pop
sbb
gs
repz
add
pushl
lea
adc
ss
push
ljmp
xor
rcrl
sti
test
dec
sbb
or
mov
aaa
fcoml
inc
data16
pop
add
stos
jns
or
add
sub
repnz
lds
out
push
and
pop
out
dec
lea
stc
push
test
in
test
jno
xchg
cmp
jns
push
arpl
fnsave
loope
mov
insb
pop
mov
pushf
mov
and
mov
dec
popf
mov
jl
sbb
sub
lret
mov
mov
addr16
mov
stc
popf
inc
add
pop
push
and
adc
les
mov
sub
inc
outsl
icebp
iret
xchg
add
sbb
or
add
pcmpeqb
lds
ljmp
xchg
das
inc
dec
xor
pusha
inc
repz
and
dec
xor
lret
popf
pushf
mov
ds
lea
mov
fcmovb
mov
cmc
into
mov
int
gs
lods
enter
lahf
int
js
rcll
jl
movsl
test
sbb
ffreep
mov
mov
out
ljmp
xchg
cmp
imull
hlt
inc
mov
test
shrl
outsl
xchg
rolb
subl
xlat
sbb
aad
adc
repz
data16
int3
xor
adc
mov
dec
lock
sbb
mov
push
xor
cmp
ja
push
scas
mull
andl
cmp
pop
mov
add
test
in
jle
pop
sbb
sub
frstor
divb
add
push
mov
sub
and
lahf
pop
cs
adc
js
das
pop
das
icebp
or
fidivs
xor
loope
sarb
cmp
lea
repnz
test
dec
mov
adc
mov
icebp
stos
mov
push
sbb
xor
pop
mov
and
repz
arpl
lods
sub
movsl
int
loope
add
and
sar
faddp
dec
mov
inc
rorb
sbbb
paddsb
add
insl
call
push
pop
sahf
ret
lcall
lcall
pusha
aam
xchg
stos
fdivrl
jb
jnp
xor
inc
xchg
push
add
mov
cmp
xor
mov
int3
sub
xchg
repz
inc
mov
inc
inc
mov
cld
cmp
fsubr
fisubrs
fnstenv
fnstcw
int3
daa
mov
push
dec
mull
push
pop
ret
pushf
rcrl
xchg
xor
mov
inc
xchg
test
add
xchg
push
incl
pop
mov
sbb
test
cmpsb
cmp
pop
and
mov
adc
into
cld
pop
xchg
mov
mov
loopne
ret
jmp
loope
jo
fimuls
imul
sub
rcl
mov
dec
das
sar
jmp
test
pop
test
pop
addl
and
js
mov
pop
mov
inc
neg
lock
je
lods
push
xchg
or
jg
arpl
fcompl
add
jl
mov
js
mov
fisttpl
xchg
fabs
stos
ja
loopne
mov
mov
mov
jno
fistl
xchg
pushl
add
stc
and
inc
cmp
add
push
in
jg
mov
lds
and
cmp
imul
test
bound
pusha
push
rolb
xchg
inc
jmp
push
mov
js
aas
repnz
xor
jecxz
xorb
sbb
adc
jge
ds
in
fistps
lcall
sbb
movsl
cld
in
fidivrl
fiaddl
cwtl
shlb
je
xchg
lods
cmpsl
lock
push
out
or
xlat
in
pop
pop
enter
out
mov
scas
push
rcl
sti
jmp
cmpsb
dec
and
pusha
dec
inc
cs
mov
xor
push
sbb
sbb
xchg
mov
cmp
push
xor
stos
xor
cmp
pop
popf
std
loop
xor
xchg
adc
mov
xlat
inc
pop
mov
and
loope
add
in
lret
lahf
loope
jecxz
addl
mov
movsb
je
pushf
insl
add
inc
adc
inc
pand
popf
pop
xor
das
scas
push
ret
xor
xorb
fstl
sbb
sub
sub
rorb
jecxz
data16
hlt
xor
in
lods
push
sbb
loope
int
cmpsl
incl
inc
pop
adc
out
sbb
xor
jge
jae
daa
rorb
fs
aam
enter
and
jecxz
testb
jle
jnp
dec
les
inc
rcr
cmpsb
cs
mov
andl
js
je
fstl
mov
xchg
test
add
push
jae
clc
push
pop
imul
outsl
mov
loop
loop
fldcw
std
ss
cmpsl
add
pusha
lods
dec
enter
push
sub
outsl
jns
mov
push
dec
aas
cmpsb
cmpsb
xchg
in
daa
xchg
aaa
in
push
mov
adc
cmpl
add
out
mov
or
leave
lods
enter
mov
subb
jmp
rcrb
and
sbb
in
fistps
mov
jb
or
inc
arpl
rcr
adcl
add
dec
cli
stos
test
cmpsb
movd
inc
iret
push
xchg
xor
ret
push
jnp,pn
mov
inc
cmp
es
pusha
dec
ds
jne
cmp
and
es
dec
cli
push
stc
inc
push
fs
hlt
lods
test
pop
xchg
stos
sub
xchg
sbb
push
ss
sub
mov
push
out
jg
lea
cwtl
lahf
pop
ja
movsl
pop
push
cmp
shrl
pop
shlb
repnz
stos
jle
out
sbb
out
dec
js
mov
pop
and
push
mov
je
sub
push
sahf
in
adc
pop
cmp
jl
push
pop
gs
repnz
adc
shlb
push
call
int
mov
push
es
lahf
push
js
xchg
mov
mov
scas
rcrl
nop
add
jg
sarb
popf
repz
push
xor
push
in
sub
and
dec
hlt
mov
test
jg
mov
adc
scas
scas
int
jae
mov
jg
sbb
sbb
pop
ret
cmp
negl
loop
loope
jns
enter
mov
or
sti
xchg
outsl
das
add
cmp
push
or
cli
mov
addr16
or
cmp
ror
pop
sub
cmpsl
dec
imul
xchg
dec
insl
mov
mov
rclb
xchg
or
add
mov
cs
cmp
sub
xchg
lods
repz
hlt
insl
push
mov
push
push
enter
jge
out
xchg
test
cmp
pushf
outsb
pop
test
mov
cltd
ret
and
mov
cltd
bound
stos
ss
aaa
sahf
bsr
loopne
test
aad
jno
sub
sbb
sub
aaa
sti
xchg
fcmovnb
ja
hlt
inc
cmpb
mov
stos
or
lea
inc
test
push
inc
sbb
loopne
push
rorb
pop
pop
cmp
fwait
loopne
lret
sbb
mov
xor
int
in
jns
repz
jl
lods
jne
sbb
movsb
leave
aaa
rorl
cmp
jmp
sub
mov
dec
rorl
inc
jle
scas
add
popa
sbb
jns
and
mov
sbb
sar
in
cmp
sub
pop
xchg
and
and
or
stos
dec
stos
jb
dec
icebp
jnp
xor
jne
fs
jno
adc
xor
fisttpll
movsl
jae
add
cmp
cs
cmp
xchg
xchg
inc
cs
mov
sub
scas
add
cltd
js
lea
pop
stos
cmpsl
cmp
outsl
test
leave
fldcw
int
push
and
test
int3
sbb
addr16
jmp
sbb
cwtl
mov
inc
pop
leave
xchg
dec
adc
cld
xor
call
lahf
push
or
test
outsl
addl
stos
aas
xchg
ret
xorb
cltd
xchg
loopne
loop
nop
scas
nop
add
add
add
cmp
mov
adc
inc
adc
jo
aam
or
sub
std
into
popf
aam
mov
gs
mov
jg
inc
adc
xchg
mov
scas
adc
ljmp
mov
xor
jmp
int
dec
outsb
or
push
pop
xor
pop
sbb
xor
cwtl
add
cmp
jns
out
sahf
dec
xchg
hlt
adc
movsb
lds
mov
push
int3
out
pop
addb
push
and
adc
jo
fucomp
push
lock
push
inc
and
jl
je
fisubrl
inc
je
int3
mov
in
mov
gs
scas
sbb
inc
adc
int3
adc
push
pop
jge
push
jecxz
or
cs
hlt
push
mov
loop
in
sub
sar
lock
and
mov
add
mov
pop
scas
call
jge
pop
pop
push
cs
rclb
ret
imul
mov
dec
mov
mov
xlat
cmpsl
data16
inc
sbb
rolb
adc
cmp
xor
cwtl
aam
fsubr
sub
pop
dec
loope
insb
xor
xor
sbb
mov
gs
hlt
mov
in
std
into
mov
mov
in
test
divb
test
lods
jle
into
sbb
test
mov
sbb
stc
mov
fdivs
cmpl
push
out
inc
cmp
out
hlt
mov
cmc
outsl
imul
imul
hlt
jg
das
push
mov
sti
stos
je
xor
xchg
out
iret
adc
jno
add
push
icebp
fwait
add
mov
cs
loop
scas
and
popf
adc
stos
mov
adc
inc
push
adc
add
out
sahf
mov
push
mov
repnz
push
dec
or
iret
in
mov
pop
cmc
movb
xchg
jmp
xchg
rol
es
test
repz
sub
int
sbb
bound
push
repnz
mov
push
fcompl
mov
add
push
xchg
sbb
les
bound
sub
repnz
mov
cmp
scas
pop
fisttpl
add
into
jge
fcomp
inc
sbb
stos
lcall
scas
outsl
push
mov
inc
scas
or
imul
in
fsubrs
jne
flds
dec
push
and
and
movsb
jno
stc
pop
imul
cwtl
call
pop
sub
pop
mov
out
mov
int3
add
movb
cltd
adcl
sub
sti
les
call
mov
push
into
cmpsl
xlat
fisubs
pop
pop
andl
mov
jle
insb
fcomi
dec
lds
inc
into
insb
ss
and
and
jge
or
xor
mov
adc
sbb
push
stos
daa
push
pushf
loop
les
mov
push
pusha
sarb
in
repz
push
and
jge
in
aas
mov
popa
loop
repz
std
ret
mov
xchg
lcall
fwait
rcrb
cmp
jge
cli
jne
sub
int
sar
jnp
es
mov
repz
cmc
cmp
rcrl
ficoms
sub
and
pop
data16
pusha
and
mov
xchg
dec
sub
dec
jp
fwait
adc
mov
or
pop
mov
pop
sahf
pop
xorl
dec
or
sub
mov
sub
adc
fwait
push
jne
push
push
test
push
or
movb
jg
fiadds
and
push
lds
mov
sbb
jns
jmp
jnp
jbe
rorb
out
sub
pop
js
add
push
or
and
push
out
dec
or
push
movsb
sbb
int3
fmuls
gs
dec
fnstsw
push
cmp
mov
cmp
cmp
mov
repnz
xor
push
repz
sub
inc
adc
cmp
movsl
jge
adc
ja
push
stos
and
enter
in
scas
repnz
bound
movsl
into
cmp
popa
cmc
pop
orb
jmp
andl
xchg
pop
iret
cli
sbb
mov
push
push
add
lods
mov
loopne
notb
add
out
pop
cmpsl
mov
mov
dec
xor
out
jmp
mov
inc
mov
sub
paddsw
cld
push
lret
cld
shll
xor
and
popf
inc
andb
aad
es
xchg
xchg
sbb
fiadds
add
popf
loop
push
jl
shll
jmp
call
add
add
ljmp
outsl
jmp
popa
pop
gs
inc
adc
xchg
out
js
test
cmp
andb
sbb
insb
ret
sbb
pop
jmp
ret
in
inc
imul
popa
xor
and
out
cmp
mov
pop
sarb
into
jo
jnp
cmp
jno
fists
push
jnp
sbb
ja
enter
loop
mov
pop
mov
test
sub
js
adc
xchg
ret
les
loopne
ror
ds
jno
fbld
into
jmp
push
repnz
pop
xor
and
jmp
xor
cmc
lock
fistpl
repz
mov
lock
pop
icebp
mov
cld
adc
push
mov
ss
filds
xlat
push
cmp
rclb
inc
xor
dec
dec
rcr
mov
shll
fmulp
es
jge
addl
adc
je
fs
repz
lods
dec
incb
or
imul
or
popa
jnp
lods
mov
adc
dec
mov
sub
jnp
pop
or
cmpsl
subb
rcl
cmpsl
call
insl
xchg
bound
rclb
or
mov
ja
inc
pcmpeqd
insb
sub
cmp
daa
xor
lahf
popf
aad
xor
lea
out
jbe
aam
shl
notl
or
fistpl
fiaddl
mov
pextrw
push
mov
push
mull
loopne
in
fsubrl
or
mov
dec
es
xchg
dec
std
out
mov
in
mov
mov
movsl
and
mov
pushl
icebp
ret
pop
sbb
clc
pop
jo
daa
mov
dec
sub
mov
lods
push
mov
mov
shr
gs
cli
ret
cmp
dec
sbb
inc
sbb
scas
in
das
mov
sahf
js
mov
mov
pop
test
sub
push
insl
dec
lock
das
data16
aas
movsl
pusha
cmpsl
push
sbb
in
icebp
and
push
or
mov
cmp
arpl
and
scas
fistps
in
pusha
rcrl
add
jmp
lcall
aam
or
push
and
out
arpl
jno
push
movsl
xorb
push
add
mov
cmc
mov
imul
dec
int
out
xchg
inc
das
push
cmpsl
test
repnz
test
inc
lcall
in
popf
push
stos
dec
pop
and
sbb
jbe
dec
das
and
jae
movsl
mov
mov
outsb
lahf
add
pop
cld
outsb
dec
leave
cmpsl
pop
popf
sbb
xor
test
lods
jno
add
jge
push
cmc
fists
mov
jmp
sbb
pop
push
add
push
cmc
test
psubq
or
push
das
leave
and
adc
cmp
dec
adc
mov
aaa
cld
das
fwait
aam
fsub
fdivp
jnp
pop
cmpsb
cltd
rorb
lret
cmp
lahf
shl
shll
xchg
in
movsl
or
mov
and
into
cmp
ret
mov
cmpsb
lret
adc
jg
sub
frstor
pop
in
push
aas
daa
jns
xchg
loopne
or
lahf
jnp
xor
in
fwait
aas
leave
dec
js
gs
aaa
lods
sti
jne
fwait
mov
xlat
shll
es
idiv
xor
add
cwtl
shr
cmp
cmp
sbb
test
test
pushf
cld
cwtl
adc
loope
out
pop
shll
sub
lret
repnz
pop
shlb
shlb
decb
cmp
fmul
ret
fnstenv
sbb
xchg
push
or
jno
imul
lret
call
jbe
psubd
sub
fdivr
loopne
cmp
out
cld
inc
call
scas
or
pop
daa
fildl
out
testl
add
inc
lret
data16
and
enter
call
bound
cmp
mulb
sti
dec
push
dec
inc
jne
fidivl
or
addl
addb
sub
add
jmp
add
xchg
mov
hlt
int
sahf
call
inc
mov
test
sbb
scas
xchg
or
pushf
jle
xor
sub
jne
imul
insl
or
jp,pn
int3
cwtl
sub
push
aaa
dec
arpl
adc
cmpsl
fistps
pop
xchg
repnz
adc
andb
push
insl
clc
rclb
fsubrp
cld
push
std
jle
xlat
int
add
sahf
fdivs
push
xor
ret
hlt
sarl
push
jne
es
scas
jno
cmp
test
fsubrl
mov
and
shrb
xchg
mov
insb
mov
test
out
insl
or
icebp
cs
ret
ljmp
arpl
pop
mov
sbb
shlb
mov
shlb
xchg
pop
jns
and
push
or
mov
into
negl
test
add
push
stc
call
js
pop
decb
xor
into
sbb
and
das
mov
shll
lret
or
leave
in
and
subl
movb
aad
loopne
dec
scas
test
notl
xchg
movsl
mov
sub
lock
add
pop
aad
pusha
insl
cltd
pop
jae
ret
push
sub
add
lea
and
cltd
push
jbe
ja
adc
fstpt
dec
inc
adc
out
test
popf
jno
ret
jnp
dec
repz
mov
or
inc
jp
jmp
pop
jmp
clc
es
in
icebp
cwtl
mov
aas
add
rclb
neg
jle
mov
fucomip
andl
mov
fs
cmp
stos
fdivrs
mov
mov
pop
out
pop
cmp
cmp
int3
cmp
jne
lock
mov
neg
fyl2x
jne
outsl
cs
insb
scas
pop
push
aaa
sbb
cwtl
shll
xorb
pushw
ja
negb
pop
pop
cmp
mov
in
aad
mov
add
fcmovne
fidivl
dec
sbb
out
push
mov
mov
push
cli
in
addb
faddl
jp
adcb
xchg
repz
push
mov
scas
jp
mov
cmp
xchg
or
pop
sbb
mov
cmpsl
cmp
add
jae
sub
push
std
mov
mov
out
int3
push
sbb
dec
int
push
dec
push
arpl
aaa
iret
addr16
sbb
fs
or
inc
or
inc
mov
push
xchg
sub
dec
negl
ds
into
lea
inc
cld
leave
push
cmc
test
dec
sbb
mov
mov
hlt
add
test
dec
sub
or
adc
lahf
jns
and
push
add
inc
fs
out
ss
jnp
cmp
mov
mov
shrl
cmp
jne
mov
sub
popa
ret
popa
cmc
pop
mov
cmp
test
xlat
mov
jnp
in
arpl
out
inc
jle
mov
fstp
sub
jmp
test
hlt
mov
fldenv
out
xchg
cmp
push
sub
inc
or
cmp
shr
cmp
mov
aam
and
fcmovnb
jecxz
jge
or
add
xor
mov
add
out
jp
sub
sub
xchg
xor
cmp
cwtl
repnz
sbb
test
mov
lods
pop
daa
aam
icebp
sbb
daa
xchg
jb
cmp
pop
dec
pop
push
rclb
loopne
sarl
inc
out
jne
jno
add
mov
test
test
insl
repnz
pop
jmp
pusha
inc
sbb
jns
out
xor
imul
idivl
mov
jmp
pop
lods
dec
jge
cmp
test
mov
inc
mov
sub
cmp
pop
mov
loope
push
sbb
dec
cmpsl
je
xor
jns
lret
cmc
out
enter
ficomps
rorl
int
popa
sarl
pop
sub
pop
sub
cs
cmp
cs
lahf
cmp
outsl
push
sbb
inc
xchg
add
and
jecxz
int
push
jnp
lods
jl
sub
mov
dec
dec
in
sti
cs
ret
cmpb
jo
mov
or
jg
or
jmp
mov
imul
pop
cwtl
imull
pushf
sbbl
sbb
cmp
mov
push
cmpsb
seto
xor
mov
aas
dec
sub
inc
cmp
les
pop
and
and
bnd
jae
cld
jmp
lods
cs
hlt
sub
xchg
call
clc
imul
push
sti
xlat
pop
hlt
xor
ss
dec
push
xchg
dec
sub
jno
jle
push
jecxz
movsb
repz
iret
jl
adc
cmp
lods
ss
mov
sub
cli
test
xchg
xor
jmp
adc
push
jnp
xor
into
imul
repnz
scas
pop
xor
sub
in
rep
cs
cmp
sub
add
pop
inc
pop
sarl
jg
cmpsb
and
fwait
scas
push
and
lret
or
cmp
imul
xchg
adc
int3
xchg
sub
mov
call
push
push
mov
adc
mov
mov
repnz
add
loopne
call
outsb
mov
adc
dec
mov
out
iret
in
call
ds
js
andl
andl
test
cmp
imul
mov
outsb
fs
cld
xor
cmp
sbb
lret
test
gs
insb
inc
cmc
decl
adc
outsl
test
sbb
mov
sbb
mov
sub
pop
scas
jns
push
int3
outsb
mov
or
lods
rorb
cmpsb
pop
fs
sti
sbb
loope
push
mov
and
xor
pop
call
pop
add
pop
ss
or
imul
xor
adc
xor
push
orl
sbb
sbb
dec
shl
hlt
or
in
mov
sbb
and
inc
adc
push
arpl
addl
lcall
pop
add
add
xlat
mov
add
sbb
js
jne
call
adc
addl
sub
inc
push
fdivrl
mov
popa
aam
cmc
data16
lret
xchg
and
lods
inc
pushl
sub
mov
jbe
testl
jno
and
sbb
mov
scas
mov
je
xlat
pushf
mov
sbb
lea
jl
fisttpl
ds
push
int3
scas
ss
out
sub
push
lcall
je
mov
mov
das
jecxz
and
out
sbb
inc
jmp
xor
inc
inc
das
aad
sub
rcrb
sbb
punpckhdq
jnp
stos
dec
dec
iret
cltd
adc
jecxz
imul
sbb
sbb
icebp
cmc
dec
repnz
mov
dec
js
adc
add
pushf
sub
and
out
adc
mov
and
jo
out
sbb
jns
cmp
jbe
outsl
jae
xor
outsb
outsb
or
les
subl
lock
adc
adc
cmp
es
mov
xor
dec
jns
fsub
rep
neg
lret
insl
negb
mov
or
lock
mov
pushf
dec
in
into
in
out
and
sub
lcall
pushf
popa
push
add
add
xor
adc
sub
push
cmc
dec
xchg
je
inc
push
or
test
sarl
sahf
pusha
repz
sbb
adc
arpl
jp
adc
pop
add
in
shll
fiaddl
fcompl
cmpl
mov
add
jmp
xor
jne,pt
dec
push
iret
mov
sahf
fst
or
sbb
orb
fwait
lahf
mov
push
dec
cmp
pop
dec
popa
mov
jb
jns
inc
int
leave
sbb
push
pop
mov
movsb
pusha
mov
pop
inc
jae
xchg
insb
sbb
fsubrs
add
fiadds
mov
xor
mov
data16
push
xor
hlt
adc
jo
inc
and
cmc
lcall
out
xchg
xchg
call
test
mov
cmp
fs
mov
bound
dec
dec
daa
and
in
push
dec
cld
adc
ret
dec
mov
insl
xlat
fldenv
aaa
cmc
loop
ljmp
mov
mov
push
mulb
pop
ljmp
pushf
shrb
dec
in
js
stos
cli
sub
jb
lahf
shl
xchg
pop
shlb
sbb
imul
xchg
ljmp
adc
mov
xchg
lock
lods
mov
pusha
or
lods
pusha
push
subl
mov
shr
pop
popa
add
andl
add
in
cmpsb
test
lock
shll
or
fmuls
popl
adc
rclb
mov
push
insb
int3
imul
leave
loop
dec
repz
in
cmp
push
add
sbb
add
jecxz
adc
cltd
in
in
aad
inc
mov
or
add
and
and
fsubs
fisttpll
fistpll
shl
cli
out
leave
subb
shlb
ficoml
inc
mov
pop
dec
or
push
adc
das
mov
push
adc
int
cmp
test
add
shlb
push
mov
push
mov
pop
aaa
outsb
or
mov
icebp
xchg
pop
adc
mov
repz
imul
cmp
jo
imul
stc
mov
jo
aad
icebp
push
in
mov
addl
aad
jp
out
jo
sbb
lea
push
cmp
jo
lahf
xchg
je
cmpl
jo
xchg
sahf
mov
idivl
dec
fsubp
add
cltd
icebp
leave
dec
inc
xor
mov
sbb
mov
adc
mov
sbb
push
jbe
mov
jne,pt
ljmp
mov
call
and
mov
stos
jne
popl
jg
mov
ja
fdivs
shll
fbld
xchg
arpl
insl
shlb
cmp
add
lret
xchg
std
movsb
lds
inc
dec
cmp
aad
xchg
adc
xlat
in
mov
xchg
pop
dec
mov
jp
enter
adc
add
add
adc
and
loopne
addr16
pushf
lods
push
js
jmp
sub
push
push
jnp
sub
pusha
fwait
lcall
imul
divb
and
out
xchg
xor
xlat
mov
and
aad
pop
or
outsb
mov
outsl
mov
jg
push
xchg
cs
fsubr
jns
cmpsl
negb
or
pop
and
inc
cli
push
adc
pop
ret
lods
pusha
lahf
push
adc
cmp
dec
clc
btc
xchg
cld
xor
stos
movsl
mov
cmc
das
inc
adc
jmp
mov
outsl
cmpsl
shrl
loop
and
and
rorb
es
leave
mov
idiv
sub
insl
rorb
lahf
test
jl
dec
stos
jne
mov
cmpl
cmp
and
nop
push
mov
add
jno
test
and
add
xchg
es
fiadds
loope
loop
frstor
add
cmp
push
in
rorb
dec
arpl
jne
mov
in
and
pop
sbb
in
push
pop
xchg
orl
cltd
xor
push
leave
aam
push
pop
mov
push
push
gs
xor
sarb
lods
imull
dec
cmp
mov
in
aam
lods
outsb
cmc
or
movsb
and
jae
mov
add
imull
mov
jmp
pop
adc
cmp
add
inc
mov
lcall
adc
lock
iret
sbb
push
pop
pushf
ljmp
in
jp
pusha
cld
pop
xlat
lock
ss
fnstenv
cmp
xor
push
clc
shll
mov
aad
data16
rcll
sbb
cmp
adc
jl
or
mov
and
test
fidivs
test
pop
cmp
mov
pusha
mov
shrl
xor
jne
insl
and
out
jbe
bound
or
xchg
imul
rcrl
mov
add
std
shrb
sahf
xchg
repz
int
lods
test
pop
mov
stc
call
ret
add
gs
push
std
int3
mov
mov
in
jo
movsl
mov
cwtl
mov
clc
lods
ja
lahf
roll
fcmovnbe
xor
stos
sarl
fists
sti
shll
xchg
rorl
insl
mov
test
cmp
mov
dec
rsqrtps
popf
daa
cmpsb
mov
dec
pusha
popa
fstps
addr16
push
pop
pop
fsubrl
dec
mov
outsl
xor
push
mov
rorb
push
cmc
cmpsb
fldl
mov
pop
ds
or
mov
cmpsb
pop
dec
vmovss
adc
sub
fildl
mov
insb
mov
into
fsts
mov
jns
and
and
jbe
xor
sub
or
and
dec
subl
mov
scas
ret
xchg
push
mov
jnp,pt
pop
jp
outsl
mov
out
jb
xchg
push
sub
idiv
shll
lret
cmpsl
jmp
sbb
fstpt
push
je
lods
pop
das
mov
xlat
jns
sahf
adc
js
hlt
iret
and
sub
dec
jp
dec
adc
push
mov
pop
movsl
jmp
mov
frstpm(287
fcmovu
arpl
daa
pop
mov
adc
xchg
pusha
pop
repnz
or
subb
push
push
and
mov
mov
mov
xor
out
negl
insb
sbb
mov
pusha
xor
popl
addr16
test
fcoml
rcll
dec
mov
dec
jle
outsb
or
xchg
inc
sbb
jg
jno
movl
jo
outsl
scas
pop
movsl
not
jecxz
cmpsl
sbb
sub
push
ds
test
ret
cld
inc
jl
pop
fwait
ss
cs
push
stos
shlb
dec
xor
call
pop
mov
dec
test
stos
pop
xchg
xor
xchg
mov
ret
jae
lahf
sbb
imul
push
out
mov
call
and
ret
shrb
das
adc
push
stc
ret
icebp
lret
dec
adc
negl
mov
sub
out
ds
inc
cmpl
enter
clc
or
and
iret
je
orl
rorl
push
adc
inc
mov
jl
add
pop
mov
sbb
fistps
xchg
adc
jg
and
add
jp
aam
stos
sbbb
push
scas
sti
test
mov
add
mov
lcall
pop
nop
sub
repnz
insl
dec
test
sub
in
mov
popa
out
js
mov
dec
ret
insl
jmp
mulb
cmpsl
loop
mov
les
sarb
dec
movsl
setne
sahf
xchg
sub
cs
cwtl
mov
pushf
mov
jo
aas
cmp
jbe
lds
out
dec
data16
lea
aad
pop
jno
fstpt
sbb
xchg
xchg
or
push
fnop
mov
push
mov
jmp
cmpsl
xchg
cmp
sbb
inc
jo
fwait
mov
xchg
mov
dec
jl
jl
bound
stos
sbb
push
xor
and
pop
lock
arpl
and
xchg
jne
or
js
rclb
mov
mov
js
into
xor
loop
mov
lret
jp
loopne
outsb
test
pop
rclb
cmpsb
mov
add
push
iret
out
jno
das
nop
imul
aaa
in
mov
arpl
testl
cmp
sahf
jle
push
adc
divl
cmp
imul
leave
and
pop
pop
jnp
hlt
outsb
rcrl
rcrl
xor
ret
mov
stos
cmp
fs
jecxz
test
mov
cmp
xchg
fnsetpm(287
loopne
popa
jb
movsb
int
mov
pop
cltd
mov
push
shlb
and
mov
lcall
inc
sbb
testl
jg
arpl
push
xchg
sub
push
dec
adc
cwtl
rclb
and
lcall
mov
pop
jb
mov
insb
jl
movl
add
repz
jecxz
lret
out
andl
push
cmp
int3
push
push
std
pop
lock
cmc
cmp
aas
push
and
ret
loop
xor
push
pop
hlt
in
jmp
jle
outsb
and
sbb
cs
icebp
out
test
cwtl
arpl
icebp
sbb
fildll
or
adcl
movsb
mov
inc
add
mov
dec
cli
movsl
dec
lods
cmovae
xchg
dec
mov
in
mov
in
push
cmp
stc
insl
push
mov
sbb
add
mov
pop
arpl
data16
fs
push
xor
rorb
icebp
repnz
jg
jb
mov
adc
popf
mov
jo
push
ljmp
psllw
sbb
pop
das
cmpsb
call
fs
iret
addr16
enter
cmpsl
mov
xor
in
lods
popa
fcomps
push
std
rorb
and
dec
or
inc
call
dec
cld
sbb
pop
jbe
cmp
cmp
or
dec
jmp
mov
mov
mov
inc
loope
pop
push
bound
add
pop
ja
mov
pop
cmp
popa
out
dec
lret
push
mov
or
je
mov
popf
jecxz
aaa
sbb
and
xchg
or
push
jo
std
fisubrl
and
mov
jg
pop
sbb
mov
out
bound
pop
jmp
repz
pop
or
dec
add
jne
stos
jbe
push
or
pop
sbb
repz
sahf
int3
repnz
in
pop
shll
mov
ljmp
adc
repz
loopne
cmp
scas
add
push
add
sbb
sub
lock
cmp
dec
inc
xlat
icebp
enter
repnz
rep
pop
sbb
xchg
stos
dec
outsb
mov
adc
mov
mov
dec
lods
push
or
out
push
popf
hlt
in
xor
cmp
mov
mov
arpl
leave
mov
dec
scas
loopne
loope
fcmovnbe
mov
clc
jbe
ficoms
outsb
add
and
adcb
or
xor
mov
xor
pusha
in
test
push
adc
stos
out
lea
jecxz
outsb
jge
and
ret
jb
jae
sbb
dec
in
fistl
sub
xchg
sub
imul
shlb
aam
jle
out
gs
cltd
rolb
push
sbb
jp
cli
outsl
fldl
or
lds
adc
xor
dec
or
gs
insb
xor
fs
iret
iret
lods
dec
arpl
mov
jp
jbe
lret
xchg
inc
adc
fdivl
mov
add
repz
sub
repnz
xor
lock
ret
mov
dec
rcl
scas
push
fcompl
scas
push
mov
pop
pop
xor
cs
sbb
adc
fbld
mov
lahf
shll
ret
jl
mov
hlt
cmp
sub
mov
jl
inc
mov
inc
out
je
das
repz
fcmovnu
jo
mov
stc
rep
int
xlat
dec
pop
xor
xchg
jp
inc
insl
sbb
inc
inc
sub
add
lret
movsb
imul
push
or
cmp
into
pop
add
bound
jbe
add
pop
jne
xor
fldcw
shrl
data16
push
dec
movsl
inc
scas
add
movsb
mov
pusha
arpl
ja
pop
fcmovb
mov
test
cmp
cmp
jbe
add
mov
testb
xor
clc
arpl
mov
push
push
pop
and
or
sub
mov
repnz
iret
mov
pop
push
xor
mov
popa
gs
mov
sbb
xor
mov
in
addl
inc
mov
fnstsw
push
fsubr
clc
mov
inc
ds
sahf
leave
insl
mov
aam
rorb
loope
xor
mov
jb
lds
cmp
iret
gs
fcomi
sub
cmp
xor
popf
test
mov
mov
mov
aam
cmc
lock
cmp
out
or
xor
enter
push
xor
ljmp
cmc
in
add
test
enter
loope
fidivl
icebp
insb
mov
lock
in
popf
xorl
dec
jmp
jbe
paddusb
sbb
and
pusha
dec
test
xor
nop
in
mov
jb
inc
arpl
ss
jle
lret
stc
icebp
int3
inc
xchg
les
je
inc
mov
ret
scas
push
or
dec
cmpsl
aam
das
lret
adc
and
sahf
mov
loope
jne
test
jg
jecxz
call
or
into
adc
inc
sub
lods
adc
add
jne
js
jle
stos
xchg
mov
mov
or
adc
call
repz
scas
fisubl
xacquire
scas
clc
inc
das
xchg
push
hlt
data16
mov
jmp
scas
adc
xlat
enter
pushf
and
pop
pop
xchg
sub
and
lret
jmp
and
loopne
mov
mov
jecxz
or
cmc
add
xchg
add
inc
fwait
push
cmp
sub
lods
dec
outsl
push
pop
mov
sub
mov
int3
sub
js
std
std
xor
mov
mov
xorps
adc
sub
lods
and
bound
movsb
sti
lods
jne
cld
mov
mov
push
sbb
jg
and
jae
xor
stos
pop
jp
aam
imul
jo
jg
out
orl
mov
stc
inc
mov
sub
or
cmp
sub
or
adc
loopne
add
cli
iret
mov
or
in
inc
scas
ficompl
sub
fnstcw
xchg
in
push
push
jge
jnp
sub
inc
mov
mov
pop
movsb
scas
cwtl
xor
mov
cmp
pop
stos
insl
pop
rcrl
aaa
mov
lods
jmp
mulb
and
xor
sub
or
insl
out
mov
orb
and
cltd
fmuls
in
scas
fisttpl
pop
mov
or
push
mov
addr16
sub
lock
lds
push
mov
mov
xchg
jnp
xchg
pop
sub
ljmp
scas
cmc
scas
or
les
cmc
push
stos
push
and
push
sub
jb
xor
pop
push
inc
xor
inc
out
sub
jno
dec
cmp
pop
loopne
cmp
leave
or
movsl
adc
jmp
pop
enter
sub
sub
mov
mov
aad
push
push
push
or
insb
ds
push
pushf
jbe
mov
shll
mov
sti
sbb
add
push
cltd
pop
outsb
lahf
mov
fdivs
out
cwtl
pushf
fwait
mov
sahf
fisubrl
jbe
je
and
mov
add
inc
call
inc
lcall
xchg
mov
or
jb
cmc
or
mov
sbb
pop
dec
dec
fdivl
mov
mov
inc
push
lock
inc
add
flds
cmp
mov
cwtl
adc
jnp
call
out
inc
xchg
nop
cmpsl
popa
orb
add
mov
add
shr
js
push
nop
pop
stos
testl
jl
loop
push
clc
int3
out
push
jle
cmp
inc
pop
add
mov
xor
jno
add
insb
adc
lock
aaa
les
fs
lahf
scas
pop
pop
dec
test
addr16
inc
sub
fs
inc
xchg
aam
xor
or
bound
dec
pop
cmp
test
xlat
add
dec
mov
add
push
jl
and
cwtl
mov
aas
and
xchg
jg
jle
shl
into
xor
fcompl
lods
push
inc
mov
lock
in
stc
cmp
cmpl
dec
popa
push
inc
lods
mov
push
mov
jbe
add
cmp
inc
rorl
sti
sbb
mov
in
hlt
or
sbb
sti
stc
or
loop
sbb
nop
cmp
test
xor
jns
outsb
pop
outsl
pushf
jae
je
fidivl
call
sahf
and
pusha
lods
clc
outsl
push
cmp
sahf
pushl
loop
ljmp
push
xchg
mov
mov
ljmp
leave
loopne
out
or
imul
out
dec
call
inc
xchg
pushf
ret
and
stc
pop
lock
inc
cwtl
les
inc
test
pop
push
inc
out
in
or
xchg
jge,pt
inc
adc
divl
pop
jge
fstpt
daa
jmp
push
jbe
icebp
xchg
out
gs
cld
rcll
push
mov
bound
cmovnp
arpl
xor
in
pop
sbb
sub
scas
rcr
push
insb
sub
mov
lea
xor
push
out
dec
iret
imul
xlat
mov
cmpsb
add
int3
ja
mov
testb
std
add
ret
ss
loopne
decl
cltd
fiaddl
test
mov
push
scas
sti
movsb
inc
adc
stos
dec
shr
imul
hlt
inc
inc
out
mov
int3
lret
dec
add
popf
call
stos
push
sbb
movsb
scas
inc
add
pop
imul
std
icebp
cmp
ficompl
testb
sbb
aad
repnz
jnp
dec
and
nop
lcall
nop
inc
out
jmp
imul
or
cmc
xor
dec
movaps
xor
aas
sbb
jecxz
mov
dec
repnz
pop
les
dec
adc
dec
in
imul
andl
mov
push
xchg
sub
sub
xchg
sbb
test
call
xchg
das
xor
pop
fstpl
jl
push
loopne
mov
pop
rorb
sbb
jno
mov
std
cwtl
test
xchg
mov
pop
push
adc
clc
imul
sub
repz
mov
xlat
pop
imul
dec
movl
popa
dec
adc
xchg
cmp
xor
or
or
aaa
inc
js
push
sti
jbe
loopw
mov
lds
fsubrl
push
ljmp
aad
push
sbb
lds
jmp
leave
mov
mov
popf
sub
dec
sbb
pop
dec
inc
inc
add
adc
pusha
jbe
jns
bound
movsl
adc
inc
mov
inc
mov
mov
cmpsl
xor
lds
cli
sbb
pop
mov
sbb
mov
jmp
dec
jbe
mov
pop
adc
mov
lret
push
and
testb
dec
stc
call
jno
and
outsb
mov
clc
mov
xchg
pushf
add
test
add
dec
sbb
shll
fldt
call
fiadds
icebp
cld
test
push
fs
test
mov
inc
sbb
mov
aaa
sarl
and
aas
mov
gs
imul
jmp
pop
cld
aas
mov
in
cli
sub
pop
stos
add
cmp
xchg
lret
or
sahf
mov
jns
popa
mov
jnp
ljmp
decl
sub
popf
xchg
push
loopne
xchg
xchg
or
jge
loop
mov
mov
push
adc
sub
xlat
lcall
popa
add
cmpsl
cmp
shll
jnp
jge
das
pop
imul
repnz
pusha
cmp
xor
call
adc
mov
dec
or
mov
mov
sub
mov
sahf
or
and
mov
xchg
shrl
icebp
and
add
xchg
mov
mov
jno
adc
cmc
or
fwait
out
lret
iret
inc
js
fsubrs
cmp
mov
lock
sbb
dec
adcl
das
dec
add
es
out
sub
cmp
aam
sub
mov
rorb
and
mov
add
in
mov
or
mov
cmp
sub
js
push
sbb
mov
enter
ret
pop
xchg
add
lret
jmp
lret
popf
jne
push
dec
mov
repnz
out
addl
test
adc
inc
pop
icebp
into
pushl
or
adc
mov
imul
push
push
inc
push
jbe
sub
push
sbb
rolb
mov
push
lret
pop
sbb
add
sbb
aaa
sub
mov
and
ret
roll
sbb
imul
scas
push
push
xchg
sarl
inc
sbb
and
aad
mov
pop
inc
mov
adc
inc
inc
hlt
mov
roll
ljmp
rcrl
or
or
add
ss
adc
pop
sub
icebp
movb
in
jecxz
test
xor
mov
sbb
inc
sahf
pop
nop
cmp
push
addr16
pop
sbb
inc
int3
js
enter
test
sti
enter
sbb
or
je
sbb
pop
xorb
pop
js
push
ja
out
insb
push
sbb
sbb
dec
mov
inc
mov
out
cmp
add
pop
mov
pop
out
sub
dec
add
call
gs
dec
pop
jle
sub
xor
test
jecxz
pop
sarl
mov
iret
cmp
iret
push
push
in
inc
inc
or
mov
pushf
ss
xchg
dec
data16
popa
fdivrs
xchg
sub
jae
aaa
mov
dec
and
subl
sbb
cmp
into
sub
mov
bound
fdivp
mov
fst
fisubs
push
ret
xor
in
movsl
lcall
pop
fadds
in
sahf
mov
shll
or
pop
loop
psrld
or
jecxz
inc
fcmovu
ds
mov
mov
sti
mov
addb
std
mov
jge
xchg
aad
scas
sbb
mov
in
lahf
adcb
stos
int
mov
dec
add
mov
lret
call
mov
lods
rorl
adc
jo
or
and
add
pop
inc
mov
inc
cmp
or
es
jp
or
ja
cmp
hlt
inc
popa
cmp
cmpsl
out
and
mov
mov
aaa
aad
popf
push
lret
out
loope
mov
add
outsb
cli
out
cmp
pop
adc
je
jb
fwait
xchg
inc
cwtl
xchg
mov
add
jp
push
lea
icebp
and
lods
sbb
cmc
clc
and
pop
xchg
pop
dec
lods
adc
sbb
jb
pop
jno
add
rolb
mov
mov
fs
push
pop
in
xchg
push
lock
jbe
mov
adc
stc
push
movsb
adc
fmul
fiaddl
outsb
arpl
fistpl
cld
js
add
lods
sti
call
loop
stos
sub
aaa
shrb
shll
adc
pop
fst
and
call
cli
mov
adc
stc
jb
pushf
adc
push
adc
popa
sub
jle
ficompl
add
lods
jne
fnsave
inc
inc
lret
push
dec
adc
outsl
add
test
ret
xchg
clc
loope
or
nop
sub
jg
ljmp
fsubr
xor
pop
mov
stos
pop
sbb
push
sbb
lcall
nop
adc
je
adc
das
mov
xor
sti
mov
push
call
or
aas
xchg
ret
pop
imul
int3
adc
stos
mov
rorb
popf
pushf
push
adc
dec
fstp
jecxz
xchg
push
xor
fists
xchg
repnz
cmp
nop
mov
push
std
dec
fdivrl
je
cmp
jle
cs
aas
dec
addl
pop
pop
mov
mov
mov
add
sbb
dec
pop
aam
stos
adc
inc
add
xor
orl
idivl
inc
sub
push
rcrb
movsb
popf
ret
imull
xchg
mov
pop
icebp
push
rorl
push
js
inc
cmp
fdiv
shrl
aaa
dec
jp
lret
test
sub
shl
icebp
push
pop
addb
mov
xchg
add
sub
dec
incb
out
xor
lret
xchg
aas
repz
orl
call
loope
and
popf
sbb
mov
inc
rorl
and
xor
jo
and
or
cmp
mov
sub
fwait
mov
fistpl
push
push
adc
fcoms
icebp
push
mov
cli
dec
add
addr16
and
mov
jmp
dec
pop
xchg
add
xor
fwait
out
cmpsl
dec
imul
add
dec
sub
or
xlat
add
pushf
aas
jnp
movsb
xchg
in
push
adc
xchg
fwait
inc
pop
mulb
push
testl
dec
mov
orl
daa
push
movsl
sbb
mov
cmp
adc
cmp
push
out
mov
jno
mov
outsl
push
loope
add
loopne
cmp
loopne,pt
insb
pop
imul
aam
xor
push
movsw
in
lahf
or
cmpsl
lahf
cmp
jno
aas
inc
pop
inc
les
ja
bound
or
stc
cmpsb
lods
jge
add
dec
lds
ja
inc
ret
jne
xchg
cmp
icebp
pop
xor
jp
bound
movsl
xchg
rcrl
or
ret
xorb
adc
or
mov
dec
sbb
and
leave
xchg
push
pop
movsb
pop
cwtl
icebp
and
inc
bound
clc
incl
inc
aam
jle
jnp
push
jle
push
sub
inc
push
xchg
mov
add
sub
sbb
and
sahf
sbb
in
cmp
mov
dec
rclb
icebp
movl
add
add
pop
adc
mov
mov
shll
mov
andb
inc
lret
jp
ljmp
xor
movsb
bsf
lods
je
jmp
cld
lds
sub
pop
loope
inc
loopne
stos
pop
jb
mov
cmpsb
sbb
dec
cli
fidivl
adcl
cwtl
dec
dec
mov
and
mov
cmc
inc
call
stc
gs
cmp
daa
sarb
outsl
leave
rcrb
out
or
dec
lock
push
popl
andb
inc
lahf
lret
pop
pop
xchg
notb
push
mov
and
repz
lods
mov
push
daa
stos
imul
inc
push
xor
adc
jo
lds
stos
xchg
or
ljmp
push
sbb
dec
les
sbb
in
test
mov
xchg
pop
out
push
or
bound
xchg
rcl
push
shrb
fucomip
divl
loopne
rorl
dec
aad
movb
dec
packuswb
clc
cmp
lods
rcll
cmp
xchg
mov
fcmovbe
outsl
xchg
loopw
test
in
js
push
add
popa
jae
call
and
enter
pop
lea
pop
fwait
jecxz
sti
rcll
out
xchg
jbe
inc
mov
cli
cwtl
mov
outsb
loopne
push
insb
xor
push
sahf
pop
xchg
in
cwtl
dec
insl
mov
pop
mov
cmp
pop
cmpsb
inc
or
movsb
sbb
sbb
dec
fisubrl
mov
movzbl
cmp
mov
lret
mov
inc
or
pop
and
clc
or
cs
loope
mov
cmc
mov
mov
mov
fcompl
clc
lea
push
jmp
fdivs
pop
and
sarb
dec
cltd
mov
clc
shl
or
scas
or
push
fbstp
jo
pop
addl
sbb
fisubrl
repnz
roll
insb
into
sahf
fstpl
dec
pop
adc
in
movsl
mov
mov
inc
sbb
inc
outsl
int3
cwtl
out
jmp
xor
jge
mov
in
leave
mov
lock
lret
aas
pop
out
and
rcrl
sub
rol
sub
test
xchg
popf
add
pop
mov
pop
dec
or
aam
mov
call
mov
adc
ds
es
jmp
pop
jnp
cmp
jmp
mov
rcrl
xchg
jecxz
dec
daa
ds
daa
out
lock
shrl
ss
loope
jg
subb
push
hlt
or
dec
pop
lods
sub
dec
int3
clc
cmovae
popf
cmpsb
out
inc
sub
inc
dec
pop
xor
popf
loop
jo
popf
dec
adc
cmc
pop
cs
loop
gs
or
sub
jne
sbbl
or
cld
lods
push
mov
ss
xchg
mov
fwait
cmc
sahf
lcall
cmp
clc
inc
sbb
mov
inc
or
sub
cs
bnd
in
sub
mov
mov
add
jb
adc
ds
in
and
inc
push
adc
sub
mov
cmp
lret
xchg
push
jb
mov
gs
xchg
sbbb
xlat
jmp
inc
and
push
cmp
mov
fisttps
ss
mov
out
out
cmc
jnp
pop
pop
rol
leave
out
daa
jne
jo
daa
cmp
movsl
adc
scas
jns
cmpsl
call
imul
outsb
mov
jecxz
adc
je
or
cvtps2pi
decb
pop
into
out
jmp
imul
adc
adc
add
popa
add
push
pop
mov
jp
and
add
sub
push
xlat
cmp
and
mov
jg
xchg
jae
fs
es
push
out
ret
inc
push
test
test
xchg
push
cmp
lahf
sub
icebp
out
add
sbb
sbb
daa
shll
jae
out
cmp
sti
outsb
fnsave
pop
mov
jb
bound
cmp
jmp
mov
and
lret
adc
push
leave
lret
stos
add
imul
jecxz
xor
sbb
fld1
es
insl
enter
std
lea
lret
push
push
sbb
sub
imul
adc
roll
roll
gs
std
jns
dec
pop
addr16
jp
dec
inc
xor
add
aam
sbb
test
sahf
push
inc
mov
mov
sti
push
push
cli
dec
pop
daa
loopne
add
xor
xlat
shrl
sub
mov
sub
adc
stc
scas
push
inc
lret
mov
mov
mov
scas
addr16
xchg
loop
stos
aas
roll
lret
daa
sbb
cld
dec
lock
mov
push
es
fidivrs
adc
mov
pop
cmp
push
pop
mov
aaa
test
iret
scas
dec
popf
cmp
push
pop
out
and
and
daa
inc
cmp
mov
mov
mov
clc
mov
enter
aas
mov
fwait
and
cmp
xchg
mov
stos
pop
movsl
stc
xor
imul
cli
mov
cltd
ljmp
inc
in
jo
test
hlt
jle
cwtl
js
pushw
mov
iret
stos
notl
fcomps
int
imul
add
jmp
push
add
adc
mov
out
dec
in
pop
enter
dec
xor
loopne
stos
mov
mov
outsl
xor
cmovne
lret
dec
mov
xlat
pop
daa
ja
pop
in
in
stos
push
sub
inc
jo
xor
or
outsb
std
movsl
ja
les
mov
outsl
aad
repz
nop
adc
or
rclb
shlb
add
rclb
les
jg
jle
insl
idivb
mov
and
out
add
addb
fists
or
jne
movsl
es
push
outsb
jb
pop
mov
sahf
loop
xor
mov
cld
inc
and
jg
lods
int3
fs
adc
fdivs
in
cmp
dec
or
add
sbb
adc
loop
cmp
test
sahf
cmpsb
pop
jno
lret
fmulp
lahf
rorb
xchg
xchg
push
cmc
xchg
dec
stos
enter
inc
xorb
mov
rclb
mov
lods
ret
xor
nop
jne
mov
jecxz
sub
pop
add
jle
movsl
aaa
loope
scas
imul
push
movsl
mov
and
inc
or
inc
imul
dec
mov
add
pop
fldenv
mov
scas
decb
xor
shrb
mov
aad
pop
jg
dec
or
dec
sub
testb
cmp
arpl
push
addr16
mov
ret
pop
pop
das
adc
mov
add
call
cmpsb
mov
dec
push
jge
cvttps2pi
mov
stos
icebp
lods
mov
cmc
push
adc
dec
add
sahf
mov
in
adc
decb
ljmp
cwtl
test
cmp
dec
xchg
inc
mov
sbb
into
sub
notb
xlat
lods
fucomp
aam
dec
cmp
inc
out
setge
out
test
loope
cmp
sub
rcl
fs
and
push
jo
imul
adc
mov
push
out
jmp
das
mov
and
push
push
adc
je
aas
pop
ja
sub
pop
jno
jo
jmp
mov
mov
mov
adc
add
sahf
iret
mov
dec
cli
faddl
mov
xor
dec
rcl
jae
lahf
ds
sbb
cmp
mov
xor
and
mov
or
push
adc
inc
cmc
jns
pusha
mov
dec
cmp
je
rolb
in
adc
inc
ja
js
xchg
aas
mov
lods
inc
arpl
aas
repz
insl
jp
pushf
testb
push
jg
jns
mov
cmp
add
mov
dec
loop
movsl
lock
sbb
and
arpl
inc
in
mull
xor
cmp
bound
and
shlb
sbb
cmp
jnp
aad
sahf
mov
mov
jecxz
dec
or
xchg
mov
sbbb
or
jmp
adc
insl
loopne
mov
insl
lahf
in
sub
xor
test
xchg
push
adc
inc
lcall
mov
leave
inc
push
mov
add
mov
sbb
or
jmp
push
das
popf
sbb
out
xor
push
cmp
mov
mov
fistpll
cmp
in
les
mov
xor
xchg
add
outsl
sub
mov
xor
jae
pop
xchg
scas
std
mulb
data16
adc
lock
and
subb
ja
dec
inc
lret
ja
xchg
push
jbe
push
int
dec
cs
cmc
dec
push
or
insl
fidivrl
loopne
or
ret
dec
cltd
iret
push
xor
jo
scas
iret
iret
pop
push
imul
mov
clc
pop
mov
jl
lea
stos
aad
arpl
sub
mov
faddl
data16
inc
and
push
outsb
mov
popf
outsb
sbb
call
out
xchg
pop
rcl
mov
dec
jbe
mov
out
mov
push
loope
cmp
or
pop
jmp
je
inc
shll
sbb
jecxz
mov
xor
hlt
mov
mov
and
adc
cmc
xlat
jb
or
inc
xor
mov
shlb
add
mov
cwtl
cld
adc
xchg
jmp
cmp
test
jp
ljmp
int
mov
andb
decb
jecxz
popf
pop
inc
pop
in
stos
stc
mov
sub
xor
adcl
sbb
mov
lods
or
insl
lret
pop
or
cs
repnz
or
lret
pusha
lods
mov
inc
add
leave
and
mov
or
xchg
mov
inc
cmp
arpl
xlat
loopne
or
jae
and
ret
jl
and
fmul
lds
pushf
adc
mov
jg
fs
fists
sbb
outsb
mov
addr16
movsb
out
mov
je
or
repnz
out
mov
leave
adc
sbb
inc
mov
fiaddl
sub
enter
push
fcompl
xlat
or
mov
cmp
xor
pop
push
bound
xchg
iret
add
push
inc
ds
mov
aaa
push
ret
lahf
outsb
cs
jne
pop
inc
jne
adc
lret
ja
mov
inc
cs
aam
insl
idivb
movsl
sub
nop
add
dec
jl
cli
movsb
mov
mov
inc
push
mov
cmpsb
pushf
mov
or
mov
scas
push
mov
add
hlt
sub
lret
sti
inc
cli
aad
mov
stos
ljmp
aaa
sub
xchg
shl
dec
rcr
lret
icebp
xchg
loopne
add
gs
dec
test
or
test
or
pop
mov
lds
cmpl
jnp
scas
sbb
lret
mov
outsl
dec
aam
iret
cwtl
xchg
xor
jne
cmp
mov
rcr
mov
std
daa
iret
dec
mov
rcrb
jecxz
pop
inc
cwtl
scas
sarb
and
xchg
inc
test
nop
lcall
fwait
aaa
dec
add
lret
in
ja
add
imul
in
mov
cmp
stos
daa
mov
inc
mov
mov
fisttpl
inc
lds
mov
push
jo
cmpsb
out
inc
out
mov
aad
pop
adc
shlb
xor
arpl
hlt
sub
xchg
das
sbb
or
dec
aad
push
lret
out
mov
mov
shl
sti
and
icebp
jle
out
mov
enter
push
jmp
lds
out
cmp
xchg
stos
sbb
inc
les
test
jnp
jp
and
jns
sub
jb
sub
sbb
outsb
repnz
mov
fcoml
push
mov
bound
cmpsl
jmp
stc
sti
jno
imul
clc
jl
and
aam
sub
ret
sti
into
lock
je
fstpt
xlat
call
push
push
lods
lods
xor
and
mov
xchg
dec
sbb
fcoms
daa
push
sub
xchg
lahf
in
in
mov
lods
lods
jbe
sbb
adc
xor
sbb
add
lahf
or
pop
push
mov
dec
loop
sarl
inc
and
xor
cmp
mov
mov
ret
push
sbb
cmp
mov
and
leave
cmp
push
dec
test
fbld
ss
scas
mov
inc
std
push
aaa
sub
pop
push
xor
lods
jb
scas
outsl
xchg
lcall
pop
inc
mov
ret
sahf
mov
mov
sub
mov
insl
aas
adcl
mov
insb
sub
dec
inc
nop
les
imul
maskmovq
divl
pop
jl
cmpb
das
xor
ficomps
inc
hlt
lock
jl
sbb
push
int
movsl
dec
cmp
pop
jns
inc
push
and
cli
sti
and
cld
std
push
xor
js
adc
cmp
leave
ss
ss
insl
pusha
divl
fldl
xor
das
xchg
imulb
inc
sub
pop
setl
repnz
sbb
popa
mov
movsl
dec
leave
mov
fsin
mov
mov
call
fcmovne
or
pop
mov
gs
dec
inc
mov
mov
push
aaa
cmp
inc
pop
mov
nop
daa
mov
ret
in
xchg
jne
xchg
cwtl
inc
jle
jp
je
rcrb
int3
call
lret
popa
dec
dec
mov
aaa
inc
dec
or
pusha
inc
cli
cld
add
mov
gs
cmp
mov
inc
sarl
sub
ret
pop
dec
fists
rcrl
popf
sahf
ret
mov
jmp
jmp
or
mov
insl
push
cs
lock
jae
cmp
xchg
call
inc
xchg
mov
inc
fistpll
lds
mov
mov
sbb
adc
in
jg
inc
stos
xchg
adc
fucompp
movsb
lods
inc
mov
mov
shll
cmpsb
in
fsts
sti
lcall
or
push
icebp
movsb
mov
mov
icebp
mov
std
sti
mov
push
loopne
cwtl
sub
inc
or
cmpsb
scas
pusha
sbbl
pop
inc
hlt
mov
push
lret
loope
loop
dec
push
sbb
addl
push
mov
add
pusha
mov
inc
jge
push
and
push
jnp
scas
clc
frstor
ss
in
mov
adc
xchg
nop
sub
jl,pn
mov
test
pop
enter
inc
mov
test
cmp
es
adc
pop
movsl
jno
clc
movsl
cmp
push
fwait
xchg
xchg
lock
cmp
mov
aam
ret
test
mov
jne
pop
ja
push
jae
enter
xchg
inc
jb
imul
cmpsl
xchg
xchg
out
int
testb
movsb
jne
push
or
push
aaa
inc
sbb
mov
adc
je
jl
push
mov
sbb
lahf
ret
add
and
fs
out
pop
insl
test
loop
jnp
add
xlat
lds
in
and
or
pop
inc
aam
pop
jmp
push
popf
push
xchg
push
imul
dec
jbe
pop
sbb
sti
outsb
add
and
rolb
dec
xchg
cmp
lods
adc
mov
in
std
cmp
cltd
lock
and
cmp
cmpsb
scas
or
or
add
dec
cmc
push
out
jg
cltd
roll
outsl
sarb
xchg
and
sub
adc
jp
sbbb
cmp
add
cmp
ss
scas
jl
xchg
adc
sbb
fwait
sbb
push
outsb
pop
add
add
sahf
lret
imul
cmp
sub
push
aam
push
cmpsb
imulb
sub
dec
inc
and
movl
lea
or
stos
aad
mov
sbb
jnp
or
cli
add
bsf
xchg
nop
adc
jecxz
andl
gs
inc
add
sbb
mov
scas
iret
into
mov
aam
stos
inc
jmp
ficompl
mov
cli
pop
repz
rorl
mov
dec
push
inc
test
aam
add
push
pop
and
pop
or
jmp
sbb
je
in
jo
add
outsl
fildll
push
repnz
fdivl
pop
xchg
mov
lds
mov
push
dec
test
jle
sub
icebp
adc
jg
int
std
ss
and
jmp
mov
jae
cli
mov
adc
and
cmpsb
dec
mov
fidivrs
or
pop
jge
and
sub
icebp
jo
xor
in
fadds
test
jmp
and
push
pop
pop
jecxz
je
repnz
ret
mov
mov
das
sbb
push
lods
xor
testb
pop
push
lahf
lret
and
mov
push
call
cmp
jl
pop
push
xchg
or
fdivs
pop
out
das
xor
add
daa
hlt
daa
into
dec
sbb
out
shlb
lods
jae
inc
pop
jae
sbb
jo
std
xchg
lods
jecxz
add
cmp
faddl
inc
ret
mov
test
out
sub
les
inc
fstp
or
adc
icebp
sbb
mov
jp
mov
inc
icebp
xor
xchg
jo
add
lds
jle
stos
test
push
popa
and
sbb
xchg
dec
jbe
scas
andb
mov
pusha
add
jae
es
dec
jg
leave
sub
loopne
mov
fsubr
sub
mov
dec
xor
lods
cmp
int3
adc
mov
dec
ljmp
and
js
imul
ret
push
sub
loop
inc
scas
fbstp
ficoms
iret
jns
shl
fwait
dec
adc
and
xchg
je
push
ret
and
in
loop
cmc
sahf
imul
jno
stos
cmp
mov
data16
or
inc
and
mov
clc
arpl
data16
xchg
dec
inc
pushf
test
mov
push
jne
loope
jp
stos
imul
cld
push
mov
lods
cmp
pop
arpl
dec
or
jmp
mov
fistps
or
std
push
xchg
pop
enter
mov
xchg
int
lcall
jo
rorb
andl
xchg
pusha
lods
das
scas
pushf
mov
sahf
mov
hlt
mov
dec
dec
and
mov
movsb
lods
es
mov
dec
scas
lahf
or
aas
mov
add
mov
cmp
push
adcb
pop
inc
fstps
movsb
in
scas
mov
push
mov
aas
lock
test
iret
pop
je
out
pop
xchg
fxch
std
lret
or
test
sbbb
xchg
pop
pop
mov
xor
test
addr16
aam
jmp
xchg
cs
daa
adc
sahf
sub
xlat
hlt
jae
add
add
inc
insl
fs
jno
repz
std
adc
cltd
lods
add
les
pop
push
daa
jb
and
adc
jbe
sub
inc
xchg
xor
aam
mov
lods
mov
insb
pop
dec
mov
in
jle
sub
rclb
cmc
push
mov
mov
jg
push
ja
ds
loop
in
cmp
cmc
mov
imul
into
nop
xchg
jg
xchg
out
aas
ja
sub
arpl
mov
add
fstps
jle
mov
sub
aas
scas
shlb
lahf
sbb
loope
ret
sub
call
push
decb
xchg
leave
sub
sub
or
inc
in
push
inc
mov
lahf
mov
pop
sbbl
adc
popa
xlat
js
int3
aad
shll
ja
dec
or
mov
pop
icebp
xchg
ljmp
cmpsl
mov
daa
mov
into
fdiv
iret
test
add
push
jb
mov
jno
dec
sti
or
or
ds
lret
arpl
push
or
ret
pusha
orl
cs
fcomps
xchg
aam
ja
sub
xorb
shll
jl
mov
rolb
stos
imul
lret
inc
and
jmp
mov
mov
iret
mov
cmpb
je
pop
lods
mov
add
lcall
mov
mov
les
lds
aas
jnp
dec
lods
arpl
rcr
mov
shll
cmp
movsl
lea
xchg
scas
xchg
in
adc
addl
rclb
mov
add
shrb
sahf
and
movsl
jb
rclb
loop
mov
popf
sbb
ficompl
mov
clc
aam
scas
icebp
scas
mov
aaa
idivl
xchg
xchg
punpcklwd
jmp
icebp
adc
lret
stc
push
ror
sub
mov
outsl
pop
jl
dec
addr16
xor
mov
mov
mov
lods
push
and
push
adc
xor
mov
xor
cmp
mov
adc
test
dec
decb
xor
jb
stos
xlat
into
or
and
jae
les
std
hlt
mov
dec
stos
fistpl
inc
mov
mov
push
mov
inc
adcl
jecxz
aas
jbe
es
push
push
mov
push
mov
cmp
insb
addr16
cmp
adc
sbb
addl
inc
mov
sbb
push
sbb
dec
fs
xor
sub
int
add
inc
and
icebp
fisttpl
push
pop
insb
cmp
pusha
sbb
jno
lahf
pop
out
ljmp
add
dec
xchg
popf
ljmp
inc
mov
cmpsb
lret
sub
cmc
push
pop
jp
repnz
cmp
xor
mov
cli
stos
jg
and
jg
std
loope
and
inc
ljmp
popf
mov
xlat
mov
fcompl
xor
insb
adc
pop
insb
fimuls
pusha
je
fbstp
xchg
int
add
adc
fcmove
testb
rorl
pop
das
shrb
lock
mov
xchg
or
sahf
cmp
adc
add
loop
sub
mov
cli
lds
les
scas
out
push
cmp
int
cmp
fsubr
rcrb
inc
xor
jl
push
mov
iret
scas
insl
imul
mov
shlb
stos
movsl
imul
add
ja
sub
lcall
stos
add
cli
xor
aam
lret
stc
push
fistps
mov
and
ljmp
sbb
sub
arpl
mov
dec
mov
addr16
xchg
sahf
shlb
add
dec
dec
out
push
daa
push
or
icebp
loope
and
adc
mov
lock
lods
sbb
into
xchg
std
sbb
ds
jecxz
pop
sub
push
pop
test
mov
sbb
or
or
out
jp
test
mov
in
into
pop
xor
sbb
sbb
lods
mov
and
push
mov
icebp
adc
mov
inc
push
add
icebp
ret
lcall
pop
les
xchg
and
jmp
test
aad
je
sbb
nop
ret
add
ljmp
and
lods
enter
orl
test
in
lret
in
or
xchg
pop
add
and
cmp
adc
jmp
loopne
sbb
inc
icebp
pop
pop
mov
rorb
pop
add
mov
cmp
test
jbe
mov
loopne
sub
pusha
jnp
call
aam
stos
mov
pop
cmpsb
mov
mov
pop
mov
mov
pop
or
lret
cmp
es
repz
clc
insb
push
out
shl
and
push
cmp
sahf
and
cld
jg
fwait
mov
push
ja
and
movsl
cmp
adc
dec
je
ret
ficompl
insl
xchg
cltd
dec
mov
cmp
mov
sti
push
or
ret
cmc
inc
ret
popf
pop
add
cltd
aaa
pop
test
xlat
mov
mov
sbb
test
dec
dec
insl
or
inc
jecxz
sbb
push
pop
cmp
or
cld
mov
sarl
push
dec
jae
outsb
pop
jo
lahf
mov
mov
sbb
fs
fsubr
mov
xchg
sahf
es
sbb
movsl
jmp
push
add
fldenv
mov
and
mov
popa
shl
arpl
mov
clc
cmpsl
mov
push
fisttps
imulb
push
push
mov
icebp
xchg
rorl
mov
adc
push
xchg
fdivr
std
adc
and
mov
addb
ret
inc
jmp
in
jge
jo
adc
mov
ds
xchg
out
add
xcrypt-ecb
cmpsl
push
je
pop
mov
pop
daa
mov
push
inc
pop
pop
add
popf
in
sub
sbb
xorb
xor
or
inc
jl
mov
xchg
call
out
jge
mov
dec
inc
mov
hlt
mov
xchg
dec
test
jnp
test
inc
loope
inc
call
mov
js
xorb
mov
xchg
ds
aaa
loope
subl
and
mov
out
push
imul
mov
xchg
or
jo
jno
sub
data16
insb
or
jnp
push
mov
fmull
mov
gs
lods
inc
pop
cmp
rolb
je
xchg
dec
mov
or
jno
fstl
imul
clc
jno
iret
mov
push
mov
leave
push
adc
rcll
pop
cmp
lret
push
in
rcrl
nop
inc
stos
scas
sub
mov
mov
sbbb
sti
sbb
mov
shll
xchg
mov
sbb
in
push
sub
rcrl
mov
cmp
cmpsb
push
adc
mov
or
jno
xlat
movb
xchg
jo
js
add
test
or
ljmp
adc
mov
xchg
xor
test
or
call
jp
lret
pop
pop
rcl
test
sahf
mov
shll
sbb
cs
xor
cmpsl
daa
jecxz
call
mov
mov
and
sbb
lahf
decl
pusha
scas
loope
push
cmp
mov
lcall
push
mov
xor
cmp
push
jg
popl
jae
mov
loope
jecxz
lock
fwait
scas
sub
jo
sbb
push
mov
inc
add
xchg
aas
xchg
stc
ss
fwait
push
xchg
cmc
xchg
add
jb
lock
fs
mov
cmc
addb
lret
xchg
test
sbb
enter
add
sub
mov
cmpsb
mov
stos
sbb
add
mov
cmp
cmpsb
popa
test
inc
xor
or
stos
call
mov
sbb
jg
repnz
in
xchg
rcll
xacquire
out
inc
loop
sub
iret
adc
jmp
test
sbb
std
adc
inc
imul
out
fisubrl
push
mov
add
aaa
cltd
or
inc
xadd
xchg
insb
fists
sbb
push
dec
push
sahf
and
test
xchg
bt
nop
jne
iret
std
mov
mov
pop
dec
sbb
adc
pop
lock
inc
push
add
inc
lods
daa
push
mov
fadds
inc
lret
xlat
je
xchg
sbb
xchg
mov
add
inc
cwtl
xchg
inc
sbb
insl
lahf
push
std
jae
rclb
dec
sarb
lret
lcall
lds
ret
jle
sbb
jnp
jae
xor
out
or
xor
xchg
lcall
popl
xchg
cltd
cvttps2pi
jg
aad
inc
lahf
insl
loopne
mov
xchg
xchg
test
cwtl
mov
shrb
rorl
push
lods
mov
jo
scas
pop
pop
int3
fildl
xchg
pop
and
movb
test
aam
mov
sbb
aam
sub
push
shll
add
dec
and
cltd
jl
adc
repz
push
xchg
sbb
push
std
or
inc
or
insb
and
iret
mov
cmp
inc
or
shlb
pop
cli
test
jmp
or
rolb
jbe
rol
jnp
fidivl
dec
mov
push
ret
scas
sub
in
out
pop
adc
pop
sbb
and
data16
ret
adc
lea
push
lds
dec
cmovl
ficoml
inc
xchg
cmp
stos
sbb
xlat
push
shll
or
inc
mov
add
out
adc
xor
or
gs
lds
push
unpcklps
lret
mov
adc
mov
or
cmc
lcall
popf
ljmp
mov
movsb
cmp
dec
icebp
fdiv
pusha
or
add
adc
shrb
mov
jne
pop
into
pushf
cmp
cwtl
mov
add
mov
or
add
scas
das
cmpsl
imul
movsb
xor
add
mull
jns
jne
aas
dec
sbb
push
push
scas
pop
faddl
jne
jle
fstl
ret
inc
movsl
or
flds
xchg
xor
mov
imulb
adc
rcll
mov
or
mov
outsb
outsl
cli
add
test
testl
pop
repnz
dec
cld
testl
rcrl
je
into
bnd
stos
ljmp
ret
hlt
push
lods
pop
pop
inc
into
pop
idiv
loope
fstpl
dec
pop
or
imul
test
fst
jb
pop
adc
inc
push
lock
gs
daa
mov
sub
in
pop
dec
pop
xlat
movsl
cld
push
lcall
sbb
pop
push
jmp
cwtl
es
int3
je
mov
fdivs
jbe
cwtl
xor
mov
repz
cmp
lods
dec
js
xchg
mov
jno
es
jge
and
fisubs
adc
imul
pop
xor
xor
xor
jnp
jl
xchg
pushf
jbe,pn
lahf
loop
push
mov
mov
aas
inc
subb
mov
out
filds
add
orl
or
xchg
push
fdivrs
lea
fisttpl
imul
xchg
or
sub
incl
cs
dec
and
lods
push
xlat
outsl
insb
or
add
mov
jl
dec
push
cmpsl
out
xchg
sbb
mov
xor
sub
inc
cli
arpl
jg
adc
sub
enter
mov
int3
pusha
jge
sbb
push
aad
movntq
inc
imul
jo
push
push
cltd
stos
aam
mov
into
mov
movsl
inc
je
iret
test
jle
jge
out
test
and
push
cmp
popf
xor
call
jle
clc
xchg
inc
jb
push
js
aaa
repnz
push
pop
inc
adc
enter
out
movsl
xlat
push
pop
mov
and
pop
add
sarb
imul
inc
mov
ret
out
jb
pop
outsb
mov
adc
cmp
mov
outsl
ja
jge,pt
push
cmp
xlat
dec
sub
inc
popf
mov
add
out
push
aad
jecxz
pop
aas
cmp
and
test
ljmp
inc
push
ds
inc
test
repnz
loope
mov
fsts
mov
pop
cs
mov
leave
jns
push
mov
pop
mov
xor
cmpsl
nop
push
sbb
xor
mov
arpl
test
xchg
in
pop
imul
sbb
mov
aaa
mov
lret
pop
sti
jg
xchg
push
inc
dec
pop
push
mov
pop
xchg
test
nop
rcr
add
dec
pop
jne
out
scas
shrl
les
or
jne
mov
cmpsb
clc
sub
lcall
lods
mov
sbbl
push
jp
and
andl
ret
dec
pop
inc
lods
mov
std
notb
fstps
outsl
and
scas
cmp
add
mov
pop
scas
fsubrl
and
pop
pop
stos
adc
adc
test
stos
add
add
lret
loopne
jno
sbb
mov
and
addb
fdivrs
and
mov
int3
sub
dec
popf
popa
test
adc
dec
xchg
add
mov
out
enter
push
pop
das
lahf
push
jo
stos
cmp
fisttpll
fistl
inc
jns
inc
xchg
adc
pusha
mov
xchg
fsubrs
adc
cmp
push
inc
icebp
push
fwait
push
mov
dec
stc
add
negb
jno
pop
mov
push
cmpsl
jl
push
lock
shl
aad
mov
mov
fiaddl
mov
pop
pop
imul
push
test
mov
push
lcall
fidivl
cwtl
or
xlat
enter
pop
cld
sbb
andb
jl
sub
aaa
data16
jno
fs
fistpl
and
mov
into
push
out
pop
add
lret
mov
sub
pop
jnp
popf
test
sti
pop
cmp
push
fmulp
mov
push
shr
and
loop
cmpsb
pushf
jge
lret
icebp
pop
pop
pop
lret
inc
outsl
dec
cs
adc
loop
pop
loop
rol
push
in
cmc
cmp
jbe
push
mov
addr16
xor
ret
push
mov
sbb
gs
out
mov
ret
pop
xchg
lret
cmpsb
mov
mov
stos
pop
shlb
sbb
sub
add
and
stc
jge
movsb
test
sbb
pop
jmp
mov
mov
jmp
or
jno
inc
or
in
and
push
stos
arpl
mov
lcall
mov
imul
xorb
iret
cmp
mov
jns
test
js
sub
lahf
push
movsl
iret
setp
inc
aad
cmp
lcall
in
inc
ja
out
add
mov
lret
cmp
mov
repnz
pop
fildl
sbb
mov
and
mov
push
rorl
roll
stos
iret
mov
and
aad
pop
dec
and
out
push
add
dec
mov
pop
pop
jns
mov
pop
xchg
xchg
fbld
mov
jns
iret
mov
addl
mov
testb
ss
xchg
push
aam
pop
cltd
icebp
mov
cld
idivb
sub
mov
movl
xor
ret
je
fsubl
adc
inc
mov
jb
cmpsl
adc
jne
bound
ja
faddl
pop
or
xor
jmp
adc
iret
xchg
aam
push
movsl
dec
cmp
or
adc
cltd
sub
imul
lret
ds
loopne
jae
flds
inc
or
imul
imul
pop
je
mov
xchg
jnp
clc
xchg
xorb
mov
call
sbbb
or
bound
xor
gs
mov
sti
fst
roll
into
sub
js
pop
mov
xorb
mov
mov
pop
ljmp
lods
inc
xor
mov
mov
in
out
fwait
bnd
ljmp
lret
mov
jg
clc
out
mov
ljmp
jmp
ficoml
dec
movhps
cmpsb
sti
mov
mov
or
icebp
pop
inc
inc
inc
and
hlt
insb
jb
mov
cs
dec
lret
imul
cmc
mov
stc
lock
sahf
ds
mov
jno
dec
cwtl
pop
aaa
push
in
cmpsl
test
xchg
add
movsb
xchg
adc
push
mov
xchg
add
adc
orl
in
shrb
sbb
in
mov
sti
jg
mov
sub
imul
add
or
sbb
sbb
mov
stos
dec
mov
push
pop
addl
orb
mov
aaa
sub
mov
cmc
xor
adc
jns
pushf
je
out
or
ljmp
test
cmp
cli
mov
or
jne
test
push
in
dec
out
testb
mov
js
int3
aaa
inc
xchg
pop
fmull
inc
mov
test
ds
cmp
stos
enter
loope
ja
ljmp
pop
leave
rorl
xchg
mov
mov
mov
out
arpl
xchg
jp
and
push
inc
and
daa
xor
stos
fcomps
mov
push
mov
and
cmp
rorb
and
dec
and
out
out
aas
pusha
outsb
inc
loope
hlt
push
call
mov
dec
sub
pop
lret
adc
aam
incl
fcoms
jl
jle
xchg
or
call
shrb
pop
fnsave
push
mov
jns
xchg
arpl
dec
and
sbb
or
pop
jmp
adc
pop
jne
mov
or
fs
sahf
fwait
mov
lret
push
mov
out
mov
adc
cltd
fsubrs
testb
adc
xchg
mov
jno
dec
stc
push
gs
jmp
cmp
inc
ja
pop
xchg
and
sub
cmp
js
ret
cmp
daa
mov
jno
fiadds
and
mov
add
xchg
fbld
dec
testl
jb
out
dec
jmp
mov
fistpll
add
pop
jbe
xor
and
sbb
cs
push
sub
lods
out
out
jp
pop
pop
pop
mov
jbe
push
mov
xchg
mov
mov
mov
gs
cmovne
mov
imul
pop
orb
movsl
sub
cmp
xchg
call
xor
jecxz
mov
outsl
cmp
mov
test
jle
push
jg
cmp
xor
pop
mov
cmp
aad
jmp
cmc
mov
lods
jmp
fdivrs
sub
add
push
dec
pop
stos
enter
pusha
mov
rolb
pop
iret
cli
xor
pushf
xchg
inc
push
jg
or
popa
push
jge
shlb
hlt
and
jne
ret
scas
add
dec
clc
out
loopne
gs
cli
hlt
in
jne
jno
rcl
sbb
repnz
adc
stc
mov
push
xchg
rorl
loope
mov
xchg
int
adcb
js
jecxz
dec
jmp
into
pop
push
gs
sub
loope
sub
dec
adc
adc
sbb
aaa
ss
pop
jno
xor
push
insl
sbb
stos
xor
jp
addr16
push
mov
or
inc
sarb
jecxz
mov
int3
xchg
outsw
out
std
frstor
in
pop
cmp
stos
fsts
mov
xor
adc
jmp
fildll
xchg
and
xchg
and
movsb
mov
mov
popf
sarb
and
jmp
jmp
xor
adc
jg
dec
cmp
jbe
xchg
mov
imul
pop
mov
adc
sub
mov
jb
dec
call
movsl
push
lret
lret
test
xchg
fldt
stc
stos
mov
mov
mov
jne
jecxz
das
jmp
repnz
mov
push
pop
pop
roll
das
xor
gs
aam
sbbl
mov
insl
lds
cmpsb
jl
mov
popf
mov
outsl
pusha
or
loope
out
negl
sbb
sti
js
ret
or
in
bound
out
sahf
jg
push
mov
xlat
push
dec
insl
neg
iret
jns
mov
push
rcll
xor
push
aaa
das
jg
add
and
aam
xchg
sub
dec
leave
repz
adc
push
sub
jmp
dec
out
mov
cmp
inc
insb
lea
jecxz
adc
in
sub
xlat
push
loopne
ret
inc
data16
push
push
xchg
sbb
dec
or
xor
jns
inc
imul
and
or
pop
xchg
ja
cmp
xor
adc
push
xor
xor
and
jp
popa
test
cmp
frndint
int3
sbb
orl
jns
push
subb
in
insb
mov
in
mov
sub
cmp
test
mov
leave
repnz
sub
adc
push
aam
popf
add
imull
cltd
jp
mov
out
idivl
ljmp
jge
std
and
xchg
movsb
movsl
in
in
xor
sub
icebp
cmp
mov
std
push
fcmovnb
lahf
cltd
cmpsb
loopne
bound
cltd
repnz
insb
stos
daa
mov
ja
jns
sbb
dec
lea
ja
cmp
inc
aad
aaa
pop
push
dec
adc
aad
rolb
or
mov
push
cmc
test
sbb
xor
and
outsl
push
push
shll
mov
cmpsl
mov
sub
pop
lods
or
inc
imul
cmc
in
fidivs
dec
cmp
scas
inc
and
mov
sub
sub
outsl
js
rcl
sub
pop
cli
dec
push
je
sub
mov
push
gs
int3
outsl
pop
out
adc
pop
and
mov
aad
pop
sub
pop
int
icebp
loop
mov
repz
add
push
insb
decl
sti
int
push
ret
es
adc
or
add
fs
dec
add
mov
pop
jge
fwait
pushf
sub
mov
mov
cmp
pop
jecxz
repnz
mov
jo
orb
pop
test
outsb
mov
push
pusha
mov
ljmp
adc
pop
jmp
jle
xor
sub
mov
data16
mov
nop
lods
lahf
pop
mov
fadds
or
mov
jp
inc
int3
add
jae
dec
add
cmp
adc
push
call
not
pop
xchg
or
fnsave
xor
cmp
adc
mov
cmpsl
stos
xor
mov
inc
sbb
out
imulb
adc
orl
lods
sbb
inc
push
bound
dec
mov
ret
cwtl
add
int
pop
add
movb
hlt
push
dec
int
xor
das
mov
adc
insl
repz
adc
imul
icebp
faddl
mov
arpl
xor
and
xchg
jp
movsb
in
mov
rorl
dec
clc
outsb
push
sbb
xor
inc
push
cltd
mov
push
test
test
inc
repnz
push
pop
lahf
adc
sbb
push
inc
jl
xchg
mov
xchg
sbb
cmp
not
loopne
loop
mov
and
xor
dec
in
loop
pop
xor
sti
cmp
cld
imul
mov
inc
loope
iret
add
test
loopne
pop
add
rclb
ret
mov
mov
cwtl
fildll
dec
jg
and
push
loop
popf
pop
adc
inc
push
fidivs
ret
mov
sub
outsl
data16
les
adc
mov
sub
mov
call
mov
popf
mov
sar
shrl
xchg
sbb
iret
mov
add
pop
sub
idivb
mov
jns
adc
xorb
jmp
push
add
xor
mulb
cli
xchg
test
rolb
xchg
lods
cld
jp
les
sub
test
xor
fsin
add
test
mov
loopne
mov
pushf
adcl
rol
ror
mov
lock
or
pop
add
pop
cmc
test
fidivl
push
xor
in
neg
mov
sub
add
sti
sbb
shlb
mov
push
and
stos
in
add
pop
sti
xchg
fs
loope
sub
add
movl
dec
movsl
lcall
jecxz
ds
loope
and
aaa
ret
sbb
repz
xchg
adc
adc
stos
in
xchg
cli
jle
imul
mov
fsubl
bnd
jno
popa
inc
cmc
dec
rclb
leave
outsb
fdivl
push
and
cwtl
dec
shlb
ror
cmp
fstps
movsb
adc
cmpsl
pop
jae
adc
mov
aam
jb
xlat
insl
cmp
sub
call
shrb
xor
xchg
push
movsb
inc
testb
repz
test
punpckldq
xchg
inc
push
fisttps
mov
inc
leave
push
sbb
and
lods
xchg
or
insl
or
and
in
add
repz
push
mov
xchg
fmuls
or
jg
filds
cmp
cmpsb
in
jg
inc
mov
iret
repnz
push
imul
orl
outsl
inc
or
xchg
js
or
pop
mov
mov
xchg
ss
lods
add
fadds
outsb
sub
mov
repz
shlb
mov
and
xorb
mov
push
hlt
stos
or
ds
push
cmpsl
cmp
push
cmp
test
sub
int
and
addr16
pusha
sahf
adc
ror
pushf
stos
xchg
jns
mov
movl
out
push
push
icebp
arpl
ret
cmpsl
test
push
in
and
cmp
das
jb
xchg
xchg
sbb
xchg
int
xchg
sbb
push
daa
and
jnp
or
jae
testl
lret
push
add
xchg
pop
cmp
nop
ss
inc
rolb
push
movsb
or
leave
sbb
xchg
movsl
jmp
adc
test
int
sti
and
enter
jmp
test
loopne
xchg
pop
and
mov
js
and
ret
out
cltd
mov
pop
pop
pop
addl
ljmp
mov
mov
jnp
cmpl
jnp
push
and
cli
cmp
leave
ret
jbe
sub
test
jbe
mov
scas
inc
pop
mov
cld
push
dec
cmp
dec
test
push
out
or
aad
insl
icebp
or
shll
mov
dec
xchg
ss
xor
leave
fdivrl
jns
jl
push
add
xchg
outsb
add
push
fisttps
sbb
sbb
cmp
push
push
pop
pop
mov
add
mov
lods
outsb
cld
ds
cmp
mov
inc
cmpsb
push
pop
icebp
and
push
inc
xchg
xor
sub
jae
sti
push
pop
cmp
enter
test
inc
pop
shl
dec
shrl
xchg
and
popf
xor
stos
popa
test
jb
mov
ljmp
in
xor
mov
arpl
add
adc
jno
jmp
pop
stc
push
enter
dec
dec
daa
adcl
add
jnp
or
pop
movsl
int3
aas
daa
pop
out
rclb
xor
mov
lcall
out
outsl
cli
inc
in
int3
sbbl
jmp
xor
mov
cld
add
push
mov
mov
scas
andl
in
test
or
stc
dec
popa
mov
lods
cmp
pop
shl
mov
cltd
adc
outsb
sbb
xor
push
dec
push
aam
fwait
scas
lcall
gs
and
sub
xor
sbb
or
jmp
jae
out
jge
inc
dec
sub
ficomps
syscall
in
orb
in
lods
cmp
xchg
fmuls
sbb
push
add
dec
mov
and
xor
fnstenv
movsl
sti
inc
cli
xchg
xchg
cmc
pop
stos
xor
enter
ret
fldenv
and
mov
shr
mov
in
or
push
cmpsb
mov
adc
xchg
lock
push
int
sub
cmpsb
push
insb
fcomip
inc
mov
xor
mov
sub
scas
dec
shrb
cmc
mov
cmp
jmp
adc
pop
jb
mov
gs
loop
xchg
leave
mov
ja
cmp
jnp
movsl
sbb
imul
push
in
xchg
loope
dec
xor
test
in
or
cmp
dec
inc
jl
les
hlt
or
std
or
lods
xor
push
jnp
out
aas
mov
lods
lock
insb
lods
int
cmp
adc
push
mov
jl
mov
hlt
cmp
mov
sbb
push
ds
cmp
sub
or
sti
mov
rolb
popa
xchg
mov
and
dec
and
add
sub
ljmp
xchg
xchg
or
subb
inc
stc
mov
add
icebp
sbb
jle
dec
jae
jmp
aaa
sub
rorl
inc
add
add
dec
fmuls
idivl
lea
roll
push
scas
xchg
insb
insb
mov
int
std
shll
rcrl
or
insl
lock
mov
bound
repnz
sbb
inc
loop
mov
inc
outsl
dec
push
lods
ret
iret
xor
in
insl
lahf
es
sahf
cld
ret
xor
sbb
int3
insl
sub
sbb
sbb
jl,pn
mov
mov
or
addr16
xlat
mov
sub
stc
or
cwtl
in
rcll
jp
daa
fcos
push
mov
dec
inc
push
add
mov
ds
std
lret
push
repz
cmp
add
xchg
mov
lret
cmp
repnz
movsb
out
fs
mov
ss
inc
pusha
inc
aad
ljmp
cmp
popf
aas
loope,pt
add
mov
xchg
lcall
js
add
movsb
dec
jge
sub
xor
add
jbe
les
arpl
inc
bound
pop
inc
inc
add
jns
rcll
out
dec
ljmp
xchg
mov
xor
mov
xor
xchg
lcall
aad
add
mov
test
or
out
lods
xchg
fcomps
sti
and
or
inc
pop
and
sub
out
push
push
rcrl
inc
cmp
push
cmp
mov
lods
pop
cmpsl
fildl
pusha
dec
xor
fisubs
out
dec
pushf
inc
jno
in
out
insb
sub
call
hlt
mov
lret
out
ljmp
xchg
sbbb
cmp
popa
adc
and
and
pop
jae
popa
pop
inc
adc
inc
xchg
lret
ficoms
jo
push
sub
repz
int3
lods
stos
pop
jmp
xchg
pop
shrl
or
mov
or
mov
mov
or
icebp
adc
mov
out
or
lret
mov
and
scas
aad
mov
xchg
or
shlb
shlb
int3
pop
pop
jo
sbb
push
lcall
mov
jecxz
movsl
adc
scas
push
mov
cmp
pop
out
test
dec
fisubl
test
dec
push
andl
cmpsl
icebp
adc
and
sahf
push
xchg
iret
xchg
dec
gs
jg,pn
xchg
sub
aaa
mov
push
xlat
ffreep
cmp
mov
pop
mov
fildl
lods
out
inc
cmc
aas
mov
test
add
sub
das
std
jae,pn
leave
xchg
decl
jnp
add
mov
std
add
mov
and
xchg
adcb
and
sbb
mov
cmp
in
xchg
xchg
or
das
loopne
and
popa
sub
and
push
or
jnp
out
bound
and
inc
xchg
orl
bound
roll
mov
test
fs
push
outsl
jno
mov
rcll
sub
adc
and
pop
mov
xlat
rclb
lret
push
xchg
or
test
mov
in
test
push
inc
and
jecxz
shl
call
xor
daa
lods
lock
sbb
dec
int
jp
mov
fildll
jbe
add
pop
jns
jno
loop
out
mov
lds
jbe
xor
into
enter
push
and
mov
or
test
and
std
or
cwtl
cwtl
data16
ficomps
xchg
stos
or
dec
addr16
jae
push
xchg
loopne
and
xor
push
lock
mov
ret
pop
cli
int
xor
ss
lret
dec
add
adc
jle
fstps
cmpb
pop
fistpl
jp
push
xor
clc
cltd
push
sbb
jne
repz
arpl
pop
sbb
jmp
ljmp
hlt
mov
dec
push
pop
or
repnz
and
or
call
rcrl
jl
pop
dec
add
sub
xchg
cmp
stos
sbb
or
imul
cmpsb
and
or
mov
das
out
sub
add
mov
lds
and
ret
sti
sahf
jne
push
push
fsubrl
inc
and
rcr
int
push
pop
sbb
push
insb
xchg
and
aaa
dec
mov
rorb
sub
adc
sahf
or
fmull
dec
testl
outsb
into
inc
sbb
xchg
subl
pusha
sub
outsl
sub
ds
add
paddb
sub
hlt
das
or
aas
mov
sub
xchg
pop
jb
aas
outsl
or
imul
pop
adc
roll
sub
push
and
sub
pop
and
push
imul
loope
aad
xchg
xchg
int3
lret
mov
sub
stos
mov
insl
inc
cmp
add
rorl
push
stc
xchg
movsb
sar
into
pop
enter
divl
addr16
nop
lcall
pop
insb
or
xchg
mov
push
lds
push
lret
inc
jb
xor
es
pop
lcall
aas
call
lods
adc
lcall
ret
enter
inc
mov
lcall
jg
fwait
or
or
imul
ret
stos
push
cmp
mov
hlt
dec
xchg
push
push
mov
add
into
jae
mov
fst
outsb
aam
sub
scas
cs
call
or
es
xchg
mov
movsl
lret
das
or
mov
mov
xor
cmpb
shrl
es
int3
into
cmp
adc
mov
add
push
pop
cmpsl
jl
cltd
insl
xchg
movsl
test
enter
xor
shlb
lds
cmp
or
lret
sbb
fidivrl
imul
add
out
dec
push
imul
outsb
out
outsb
int
addr16
out
xor
pop
test
pop
add
push
xlat
lcall
ja
sbbl
jmp
outsb
ds
inc
push
mov
jecxz
pop
popa
xchg
call
repz
jnp
adc
adc
lret
xchg
xorl
jnp
jg
jno
push
je
pop
xor
push
stos
xchg
pop
add
push
sti
pop
insl
movsb
aad
daa
test
xor
addl
mov
imul
xor
lcall
add
shl
mov
mov
cmp
adc
repnz
jno
xchg
mov
ret
gs
outsb
push
fists
inc
jge
shrb
pop
push
stos
inc
xor
mov
or
adcb
mov
mov
pop
stos
lds
dec
or
loop
inc
dec
testb
lret
mov
scas
xchg
push
jae
pop
int
xor
lock
daa
push
xchg
xchg
int
push
lahf
xor
or
jnp
dec
mov
in
int3
fisubrl
stos
insb
pop
loope
xchg
fs
lcall
sub
adc
arpl
jb
xlat
jmp
dec
shlb
mov
or
cld
inc
mov
mov
xchg
add
test
ds
hlt
ja
mov
cmp
jg
inc
insb
cli
popa
icebp
cmpsb
mov
mov
cmp
cltd
pusha
xchg
js
adc
pop
push
bound
repz
ja
hlt
adc
test
add
js
and
xchg
cmp
push
test
out
pop
adc
ret
pop
bound
bound
mov
jne
mov
inc
xor
out
dec
jmp
pusha
out
or
push
cli
pop
jae
sub
inc
jp
fsubrl
hlt
sub
jb
data16
iret
cs
fisubl
push
inc
ja
adc
icebp
adc
pop
out
mov
push
xor
in
dec
mov
jnp
notb
ds
dec
lea
cmp
dec
movsl
insb
loope
xchg
lock
or
into
cmpsl
les
sbb
aaa
dec
imul
nop
mov
cs
add
std
xchg
popf
xchg
inc
pop
pop
jo
mov
in
inc
mov
fidivs
xor
xchg
out
mov
lea
sahf
ljmp
pop
testl
loope
sbb
pop
push
mov
ret
loopne
jg
mov
mov
xchg
jno
sbb
pop
or
push
dec
xor
imul
push
xor
mov
std
popa
mov
add
add
push
push
popa
jne
jle
fidivrs
fstps
das
inc
shrb
add
scas
je
hlt
xchg
pop
xor
inc
aas
mov
xchg
les
fdivl
inc
lock
jge
inc
xchg
pop
push
cmp
dec
xor
cld
xchg
inc
cmp
jmp
mov
jns
int
xchg
pop
stos
cmpsl
jge
or
shrl
das
mov
sub
sbbl
xchg
jae
mov
mov
pop
pop
shrb
jp
push
sbb
test
fidivrl
and
cmp
insl
jne
sub
cwtl
call
leave
rolb
andb
pop
stos
or
sub
inc
nop
dec
hlt
ret
jmp
mov
dec
bound
push
sbb
mov
fnstcw
hlt
push
popf
and
into
fildl
jge
xor
rorb
leave
push
rorb
cmp
movsl
aam
push
pushf
xlat
call
pop
lods
pop
cld
xchg
stc
sub
push
xor
pop
sbb
xchg
add
andl
std
push
in
bound
scas
inc
cmp
and
dec
mov
mov
pushl
or
adc
cmp
pop
daa
add
incl
fimuls
cmpsl
aad
pop
mov
das
jno
jmp
jmp
sub
lock
or
pop
cwtl
arpl
add
mov
cmp
in
and
std
test
mov
sbb
inc
shrb
mov
enter
cmp
lea
cmc
xchg
inc
out
js
das
or
and
scas
notl
scas
ss
lds
mov
push
aaa
push
sbb
mov
je
loopne
push
insl
cs
pop
mov
fcoml
lret
add
push
fwait
arpl
jge
pop
imul
shll
pushf
neg
rclb
lds
jmp
das
cmc
xchg
jp
cs
adc
adc
sub
pop
test
pop
rcrl
cmp
je
mov
ja
ja
mov
dec
jecxz
addb
dec
lods
jmp
aaa
in
mov
call
sbb
jo
test
mov
mov
xchg
push
es
pop
sub
sbb
xchg
pop
sub
stc
popa
add
push
mov
mov
lcall
or
mov
xor
push
int
rcrb
ljmp
fidivl
cmp
aaa
fcmove
dec
mov
gs
adc
bound
add
and
mov
ljmp
and
ja
inc
xchg
xchg
in
cmp
pop
pop
icebp
scas
jbe
mov
mov
and
aad
jg
lahf
adc
sbb
push
out
aaa
subl
xchg
fisttpll
and
adc
es
fwait
loopne
in
add
mov
loope
pusha
mov
pop
cmp
ficompl
dec
jge
mov
imul
loop
lcall
xchg
push
loopne
cmp
mov
rcl
adc
and
and
les
xchg
jmp
stc
pop
jne
pop
nop
ss
pop
sbb
mov
add
ret
mov
in
test
jne
cmc
dec
int
push
sti
add
decb
sbb
sbb
ja
lcall
push
jg
fildl
rcr
icebp
dec
jbe
pmullw
adc
mov
icebp
daa
lret
loop
in
sti
imull
sbb
xchg
xor
stos
mov
fld
test
imul
cmp
out
mov
ret
or
stos
cmp
push
adc
cmp
popf
dec
ljmp
pushf
push
in
mov
loop
aas
sbb
mov
fdivl
push
and
push
mov
add
xchg
out
sub
fdivrl
and
push
and
loopne
out
pop
dec
test
ds
clc
and
push
mov
loop
pop
stos
push
repnz
fadd
jg
xor
enter
test
stos
popf
aas
jp
mov
iret
push
imul
sub
int
in
mov
lahf
fildll
aas
jo
cmp
pop
xor
pop
test
xchg
sub
insl
in
add
test
jmp
test
cmp
jns
push
mov
or
mov
gs
std
cmpsb
and
mov
xchg
lahf
add
test
xor
out
in
fsts
cmpsb
push
imul
sbb
inc
int3
ret
nop
and
pop
xor
repz
adc
ljmp
jg
xor
mov
insl
adc
nop
lods
lods
jae
loopne
ret
ljmp
call
push
dec
shrb
push
jle
mov
lret
mov
cmpsb
push
dec
pop
repz
inc
lds
cltd
insb
shrb
test
xor
sub
stc
add
push
cmp
int3
out
xor
je
inc
push
int
lock
fsin
cmc
fwait
cmp
scas
or
stos
add
sbb
pop
std
movsl
nop
xor
fwait
leave
loopne
push
cld
lods
je
call
xor
rcrb
repnz
xor
inc
jo
aaa
gs
sar
cli
shl
inc
sbb
xlat
pop
fisttps
xchg
pop
outsb
cwtl
push
mov
push
mov
out
push
shr
ss
loope
push
movsl
jae
mov
xchg
jmp
adcb
das
mov
inc
mov
into
dec
add
out
fistpl
es
hlt
or
mov
outsl
sub
fs
or
inc
pop
out
adc
repnz
jg
inc
pop
mov
jnp
orb
sub
lea
jb
add
stos
sbbb
inc
popf
daa
popf
fmuls
push
int3
push
sub
mov
jg
scas
mov
mov
sahf
jmp
and
or
mov
inc
test
pop
aam
mov
lock
push
pop
inc
sub
mov
data16
cmpsb
xor
lahf
pop
sti
jle
out
inc
pop
insb
fiadds
adc
jns
sub
mov
xlat
notl
push
dec
mov
dec
outsl
repz
bound
sbb
inc
test
stos
aam
leave
cltd
pushf
cmpsb
xor
negl
or
mov
inc
inc
stc
or
loope
or
test
mov
scas
cld
xchg
adc
add
nop
insl
je
orb
popa
in
ljmp
ficomps
int
dec
mov
in
xchg
inc
cmp
fdivr
outsl
xchg
xor
mov
arpl
test
or
jp
push
int3
mov
and
fists
jmp
loope
into
push
clc
mov
rcl
and
iret
or
es
dec
sahf
xor
pusha
mov
or
sti
fwait
mov
dec
aad
loopne
or
sub
dec
mov
stos
sbb
mov
adc
lahf
andb
and
jbe
dec
push
pop
cmp
aad
add
test
pop
mov
addr16
insl
in
bound
out
nop
out
sub
scas
imul
faddp
cwtl
xorl
lds
add
mov
fs
jg
scas
movsb
clts
pop
or
sub
xchg
adc
sbb
bound
sub
inc
xchg
movsl
arpl
and
push
or
adcl
push
add
out
out
outsb
call
scas
fldl
xor
hlt
mov
int
sti
iret
jns
or
jne
outsl
scas
int
dec
jle
pop
jg
fildll
cmp
js
jge
pusha
scas
cmpb
loopne
mov
mov
dec
sbb
xchg
mov
xor
push
ficompl
mov
mov
mov
add
adc
mov
in
push
aas
mov
jmp
loopne
mov
fwait
xor
xchg
jge
fwait
dec
ja
popf
xchg
mov
cmp
mov
test
addl
fsubr
mov
popa
and
sbb
ror
and
xchg
pushw
or
enter
fs
dec
pop
or
roll
dec
mov
aas
call
aaa
cmpsb
popf
mov
aaa
jp
push
and
jp
lret
repnz
cmp
pop
fcomps
push
inc
sub
sub
sub
outsl
mov
inc
or
cmp
mov
xor
push
jle
jge
pop
xchg
pop
xchg
ds
push
and
ret
loope
ficoml
rolb
pop
sbb
js
stos
addl
cmpsl
cwtl
imul
jae
movsb
rorl
je
mov
sti
xor
aaa
in
call
jo
test
push
test
or
jns
out
pop
in
inc
mov
pusha
jae
loopne
rorl
popa
ljmp
out
mov
mov
mov
adc
mov
mov
push
insb
addb
add
fs
jnp
cltd
mov
js
out
lret
vunpcklps
imulb
stos
fnstsw
dec
lret
xor
push
out
add
or
psrlw
fprem
mov
adc
test
mov
xor
cmpsb
mov
and
mov
insb
leave
sub
add
sti
adc
in
lds
popa
stos
and
xor
pop
in
add
add
out
ret
cwtl
xchg
dec
pop
cmpsb
lods
ret
ss
cwtl
mov
sub
shrl
test
scas
enter
fstl
and
mov
xor
js
cmp
push
outsl
into
lahf
and
insl
movaps
mov
mov
add
jmp
mov
xchg
pop
insl
adc
mov
inc
xlat
sar
push
insl
xor
xor
jbe
xchg
cmpsl
out
rolb
sbb
out
xchg
lgs
popa
lret
pop
mov
jmp
add
mov
out
dec
dec
pop
cmpsb
dec
inc
lahf
xchg
mov
mov
cmp
cmp
cmp
jp
sbb
lcall
mov
fdivl
out
movsl
test
pop
xorb
outsb
jb
pop
roll
pushf
add
or
mov
insl
mov
jno,pn
xchg
xor
inc
push
sti
cmpsb
out
mov
mov
inc
arpl
fcmovb
repz
xlat
push
sub
insl
lret
sub
sub
xchg
cmpsb
pop
cwtl
jnp
or
xchg
cmp
scas
jmp
mov
rcll
xchg
mov
cmp
mov
test
xchg
enter
mov
or
adc
mov
xchg
shrl
sbb
out
fcompl
std
cmp
inc
push
test
xchg
andb
inc
xor
scas
int
or
lock
or
jb
aam
call
jne
dec
sub
icebp
sbb
cmp
fs
fisttpll
scas
ret
test
lcall
lods
and
mov
into
je
cmpb
and
add
out
mov
and
decl
pop
lcall
dec
xor
jnp
iret
adc
sbb
add
and
jl
cmpsl
sbb
hlt
sub
aad
push
xor
mov
lods
mov
dec
inc
mov
xchg
push
scas
rolb
cmp
jae
adc
in
xchg
mov
dec
in
push
call
das
aad
mov
rcl
data16
test
mov
and
xor
into
mov
push
loopne
adc
shlb
mov
or
sub
in
sub
arpl
pop
push
shll
xorb
pop
mov
jge
fsubl
lea
inc
shll
and
xchg
dec
mov
push
fidivrl
dec
sbb
cltd
mov
inc
mov
pop
cmpsb
loope
inc
jmp
mov
xlat
mov
adc
sahf
add
aad
mov
mov
int
in
les
leave
rclb
bound
movsl
push
inc
push
nop
and
ja
pop
xor
sahf
shl
aas
and
mov
insb
mov
arpl
sbb
insl
outsb
push
adc
add
jmp
sub
mov
or
repz
insb
jbe
jbe
sub
adc
mov
sub
lret
xor
cmpsb
pop
mov
mov
test
movsl
pushf
jno
movsb
aaa
mov
inc
and
mov
pop
dec
lcall
push
std
int
push
sarb
fstps
add
mov
push
push
push
cmp
push
sub
push
out
lods
push
push
and
xchg
iret
jne
test
adc
pop
scas
jg
mov
inc
cmp
push
insb
xchg
push
and
mov
jmp
or
dec
popf
sbbl
inc
repnz
iret
add
sbb
in
movsb
inc
mov
pop
cli
push
pop
fsubp
cmp
cmp
lret
pop
jbe
les
loop
js
mov
jp
jbe
test
ret
or
cmp
pop
or
std
out
aam
pusha
aaa
shl
subl
cmp
test
out
push
cmp
sti
inc
imul
xchg
mov
les
adc
jne
addr16
jle
jle
xor
popa
shl
lds
mov
push
shr
and
add
mov
jmp
and
mov
sbb
mov
loop
loop
dec
out
cmp
mov
cwtl
ljmp
jmp
push
pop
stc
test
push
inc
popa
adc
int3
addr16
out
jb
shl
lea
in
test
dec
mov
test
sbb
mov
scas
lods
jg
sbb
xlat
out
clc
mov
and
cmp
add
outsb
lods
pop
pop
xchg
scas
enter
out
mov
repnz
cmpsb
mov
pop
lock
int3
call
xchg
jb
rcl
mov
hlt
dec
lret
or
pop
push
jp
gs
lahf
push
push
sub
and
test
jae
aaa
mov
adcl
sti
xchg
fdivs
or
dec
xor
into
data16
mov
xchg
fisttpll
mov
out
dec
js
xchg
lret
and
int3
cwtl
sbb
fwait
int3
sbb
sbb
cmp
mov
mov
aam
mov
inc
nop
bound
jge
mov
jnp
mov
mov
scas
inc
shr
mov
daa
sub
sti
repnz
leave
adcl
pop
mov
sbbb
push
es
inc
pop
test
dec
insl
in
sbbb
in
inc
jb
pop
mov
lret
shll
rclb
add
and
jne
jge
fstpt
cmpsl
jecxz
dec
notl
jnp
out
pop
mov
les
jns
bound
push
cmp
lds
addr16
jl
sbb
mov
mov
or
shrl
movsl
jmp
or
gs
ss
outsb
xorl
fldl
xchg
xchg
ja
bound
cs
jmp
xchg
cltd
rclb
fisubs
in
into
lea
inc
cmc
pop
insl
popf
js
inc
xor
movsb
movl
add
punpckhbw
test
mov
fs
jmp
adc
or
or
sub
mov
adc
scas
scas
shll
ret
cmova
loopne
daa
jns
ret
int3
pop
cmp
roll
test
push
xor
mov
cmpb
adc
outsl
in
jmp
xchg
pushf
xchg
idiv
cmp
mov
and
xor
xchg
jae
cs
in
loopne
inc
outsb
nop
mov
imul
and
xchg
and
dec
outsb
jle
or
lcall
adc
lcall
dec
ss
sub
jp
and
mov
pop
hlt
lret
sub
rcll
shr
cmp
lods
daa
mov
mov
mov
mov
pop
mov
cs
cwtl
or
stos
push
ss
add
push
pop
mov
dec
call
cmp
scas
lahf
adc
sar
cmp
mov
push
dec
fmull
out
out
jg
icebp
dec
and
sub
jp
adc
lcall
lock
sub
out
adc
pop
out
ja
jno
xchg
xchg
xchg
push
mov
icebp
or
mov
xchg
jbe
cmp
mov
cmpsl
push
sub
dec
ljmp
push
cmpsl
sbb
cmp
je
jmp
outsl
xorl
xchg
adc
insl
mov
jg
adc
inc
mov
mov
mov
mov
cmp
int3
adc
mov
fstl
jmp
dec
add
mov
cs
imull
pushf
imul
leave
push
mov
xchg
push
vmovlpd
psllq
or
push
imul
jg
sbb
sub
loope
fmuls
xor
add
loop
cld
or
push
dec
mov
inc
lret
xorb
outsl
push
xchg
fcmovbe
sub
adc
fildl
adc
stos
out
pop
jno
add
or
pop
or
jle
ret
lea
movsl
insb
cmp
mov
jnp
pusha
or
in
jmp
push
mov
into
mov
sti
or
aam
push
aam
mov
aaa
rcrb
aad
cmpsl
ja
call
add
dec
subb
xchg
or
outsb
aaa
add
or
mov
imul
jl
dec
xchg
aam
mov
ds
push
xchg
pop
pop
cmp
int
leave
pop
push
mov
or
xlat
popa
add
leave
insl
leave
popa
sbb
push
add
es
push
je
mov
push
or
xchg
inc
cltd
outsl
push
mov
sbb
xchg
pop
lret
and
insl
sub
or
dec
lahf
fs
loope
int
fwait
cmp
mov
test
sbb
sbb
inc
lret
fcoml
or
lock
ficoms
adc
cmp
push
cmp
push
sub
sahf
sbb
rolb
out
pushf
enter
lret
movsb
pop
test
cmp
fisubs
or
fsts
enter
test
pop
fistl
sub
cmp
push
and
sti
xchg
mov
incl
jmp
sbb
fsubrl
cmp
mov
dec
mov
xor
cs
fmul
sub
test
adc
mov
lods
cmp
pop
xorb
mov
je
jp
mov
insl
pusha
sbb
push
add
divb
cmp
insb
cmp
scas
xor
or
leave
clc
js
pop
pop
mov
in
stos
aas
fwait
sbb
cmp
push
mov
push
adc
fwait
mov
add
push
shll
loopne
repz
push
flds
push
xchg
inc
jl
sbb
andl
shrl
adc
outsl
push
scas
enter
pop
dec
push
loop
dec
test
enter
fwait
ret
push
jp
dec
push
or
dec
cmpsb
pop
ret
ret
lret
sbb
inc
pop
jo
mov
ret
jne
fwait
negl
arpl
in
testb
mov
aas
into
mov
incb
ret
dec
push
push
pop
and
xlat
xchg
je
push
xchg
dec
fs
aad
push
cmp
sub
push
mov
repnz
ja
fstl
pop
or
xor
lret
add
mov
jmp
xor
mov
dec
jns
cmp
xchg
xchg
inc
pop
and
mov
cmp
ds
dec
sub
clc
repnz
and
shufps
lcall
mov
daa
sub
in
into
addr16
pop
xchg
enter
daa
mov
imul
fst
lock
xor
lds
inc
lds
mov
add
js
mov
mov
xor
dec
xchg
mov
add
sub
fisubrl
cld
adc
das
lock
fidivrs
scas
and
sub
inc
js
xor
mov
fidivs
dec
and
dec
cmpsl
pop
push
push
mov
testl
out
test
shl
sbb
fidivrs
ds
push
mov
fidivl
enter
fwait
lods
adc
pop
dec
outsb
test
ficoms
mov
movsb
and
mov
push
cmp
mov
cmp
push
int3
imul
rolb
sub
gs
jne
test
sbb
sahf
jb
fmul
xchg
inc
shll
inc
and
cmp
xor
mov
mov
push
mov
ret
cmc
sbb
dec
into
sbb
imul
xor
pop
aad
andb
daa
lods
dec
andl
into
xor
add
mov
cltd
lock
adc
mov
ds
inc
cmpsb
lods
sbb
and
jns
testb
xor
fcmovb
mov
loop
mov
pop
clc
popf
aaa
or
push
icebp
ljmp
pop
mov
xor
push
je
sub
in
pusha
or
sub
xor
cmc
lret
xchg
call
lret
divl
fs
xor
fisubl
xchg
ljmp
ljmp
addl
push
pop
icebp
orl
ja
inc
jecxz
cltd
je
sub
push
mov
lcall
inc
xor
loop
dec
aam
push
aam
add
dec
add
xchg
shlb
inc
aas
adc
out
xor
pop
dec
test
xor
loope
call
iret
insl
jno
push
popa
stc
aas
lret
dec
test
negb
xor
push
or
subb
or
adc
stos
insl
sbb
aas
les
in
sbb
add
sub
and
jecxz
mov
sbb
sbb
incb
sbb
fnstcw
repz
lret
jb
mov
mov
fsubs
outsl
aad
fidivs
enter
dec
aas
xchg
pop
les
fistl
jns
imul
sbb
in
in
test
or
sbb
mov
xlat
cmpsb
xor
inc
movsb
orl
stos
test
divl
mov
fcom
add
xchg
push
pop
decl
xchg
rorb
call
xor
or
stos
dec
sub
adc
jne
insl
cwtl
xchg
pop
jb
cmc
shrb
hlt
adc
loop
insb
dec
outsb
hlt
test
popf
data16
push
out
shl
je
jge
pop
mov
stc
push
sub
xor
aam
sub
outsb
repnz
in
orb
iret
mov
repnz
inc
outsl
out
ljmp
imul
mov
clc
or
shrb
add
iret
sub
push
sbb
dec
test
cmpsl
xchg
xor
setl
lods
sbb
cwtl
aad
popf
push
cld
mov
setnp
or
lods
xchg
es
mov
sbb
mov
add
ss
nop
xchg
mov
dec
or
dec
cmpsb
cmp
push
mov
mov
je
and
xorl
loopne
aaa
xchg
mov
pop
cmpsb
push
test
xor
in
lods
hlt
xor
mov
add
or
xor
movsl
cwtl
sbb
sub
and
push
or
call
push
dec
ret
xchg
insb
sub
pop
lahf
xchg
adc
test
mov
mov
mov
cwtl
cltd
jl
icebp
adc
fcompl
pop
sub
rcrb
mov
pushf
jp
push
or
mov
adc
testb
movsb
cs
xor
inc
fdiv
mov
xchg
mov
jle
ss
inc
out
sbb
dec
cs
push
iret
aaa
jecxz
push
add
inc
add
push
out
aam
mov
lret
sarb
sti
es
and
push
push
imul
in
lea
sbb
cmp
sub
adc
daa
lods
clc
jns
insb
mov
into
addr16
cwtl
mov
push
ja
dec
or
leave
pusha
dec
jo
ljmp
and
lahf
pop
dec
xor
add
imul
lds
pop
mov
mov
mov
xor
push
or
push
cmp
js
outsb
lret
pop
mov
lock
xchg
mov
cwtl
dec
mov
and
push
movsl
rolb
bound
fildl
repz
into
jb
ljmp
psraw
add
scas
xor
mov
test
mov
jle
sti
ret
lock
dec
jmp
fsubrl
cmc
adc
mov
mov
mov
fs
pop
iret
jb
out
mov
xchg
jmp
jbe
mov
dec
ret
xchg
mov
lcall
in
popf
xor
adc
in
add
fists
pop
data16
or
in
clc
lods
adc
push
xchg
cmp
test
outsb
or
add
addr16
mov
movsl
xchg
je
or
add
mov
push
jns
fwait
inc
cmp
rorl
dec
rcrl
lods
movsb
jg
mov
rclb
inc
inc
mov
sbb
loope
and
sub
lret
dec
adc
push
dec
jg
inc
inc
sub
aaa
pop
jle
xor
adc
out
push
sbb
btc
int3
sahf
inc
push
pop
jbe
jp
scas
jl
and
je
cwtl
xor
stos
dec
jp
inc
in
inc
lods
test
jl
adc
loopne
outsb
repz
arpl
psubusw
lret
jp
repnz
cmpsb
xchg
sub
ret
adc
or
fwait
cmovne
xchg
fnstenv
sbb
stc
or
push
in
and
test
movsb
pop
adc
repnz
mov
stos
add
daa
and
mov
notl
scas
repnz
and
cltd
insb
xchg
and
dec
fisubs
fnsave
jae
or
mov
sub
scas
mov
or
fdivrp
daa
inc
je
mov
loopne
iret
adc
arpl
jp
dec
shrb
movsl
xchg
sub
xchg
fsub
sub
and
int3
dec
xchg
scas
sbb
lret
or
sbb
testl
sbbb
test
sub
pop
mov
fdivrs
push
popf
xlat
loopne
rcll
leave
inc
xchg
subb
add
or
dec
into
aam
jns
xchg
les
or
fsubl
pop
mov
mov
lahf
sbb
adc
cld
lret
mov
xchg
rolb
sbb
out
and
nop
imul
sbb
push
add
lret
ffree
mov
mov
xchg
loop
xlat
adc
incl
jns
push
dec
ret
mov
inc
adc
push
jmp
cmp
popa
cmp
add
int3
arpl
mov
and
mov
mov
leave
lds
jbe
fbstp
push
pop
mov
aad
xchg
scas
loopne
mov
add
sbb
inc
aam
fldl2e
add
inc
ret
sbb
outsl
dec
or
pop
lcall
aad
push
sbb
rcr
jl
int3
mov
xorl
jecxz
xchg
push
xorb
loop
mov
inc
jle
data16
pop
outsb
mov
pop
es
ja
rcl
in
pushf
xchg
xchg
add
test
push
adc
mov
insb
mov
ror
pop
faddl
jae
push
xor
mov
ret
xchg
pop
std
push
call
inc
mov
insl
imul
imul
add
pop
lahf
or
roll
pop
sub
movsb
ja
xor
pop
jg
jb
push
leave
enter
cwtl
adc
icebp
mov
push
pop
in
xor
loopne
aas
xor
dec
in
dec
dec
call
mov
mov
cmp
cmp
pop
and
cmp
pushf
xor
lret
fsub
stos
jl
out
jns
cmp
and
movsl
mov
inc
jle
mov
xchg
jg
sbb
jp
loopne
inc
sbb
jmp
arpl
and
dec
adc
and
int3
sbb
fldt
scas
jmp
xchg
jmp
and
cmp
arpl
mov
out
sub
jp
sarb
add
add
add
cmpsb
fldl
dec
stos
add
std
fnstenv
mov
mov
cli
xlat
push
clc
aam
lds
bound
cs
scas
lds
mov
bound
popf
dec
pusha
dec
aad
pop
mov
sub
xor
push
sub
test
rclb
in
sub
ret
sbb
rcrl
mov
and
mov
dec
mov
xor
or
insl
stos
shll
xchg
hlt
loopne
sub
cmpsl
into
movsb
ss
enter
in
mov
lret
dec
cld
push
dec
jb
ljmp
mov
shlb
push
cltd
fists
in
imul
jns
daa
pop
or
sar
inc
sbb
lods
nop
jnp
push
sub
daa
xchg
sti
dec
push
mov
or
call
mov
aad
test
inc
fwait
fwait
add
imulb
or
sub
jmp
push
faddl
les
or
jge
push
in
inc
push
aad
popa
pop
mov
or
inc
mov
aad
xor
xlat
jnp
adc
xor
xchg
insl
cmp
jp
out
mov
popa
and
data16
dec
sub
adc
xor
jo
mov
push
xchg
mov
loopne
or
fnstcw
add
inc
out
outsb
lock
loope
pop
stos
scas
ds
lock
and
out
shrb
loopne
sub
cmp
stos
or
xor
and
sub
jae
lahf
or
mov
adc
stos
decl
lret
lods
aas
jp
jg
dec
jae
adc
cmp
jmp
or
jmp
lods
ljmp
test
stos
fcmovu
sbb
jne
jbe
fsubl
movsl
push
pop
scas
nop
imul
or
mov
lods
mov
ss
das
add
cmp
xor
shl
fcompl
xor
or
stc
sarl
nop
inc
je
mov
scas
jne
sub
call
sub
stos
dec
pop
mov
jae
cmp
xor
out
scas
movsb
push
push
xchg
lock
jo
and
into
and
aam
fcomps
aaa
movsb
adc
fldenv
lock
add
mov
out
mov
dec
and
push
mov
out
or
cmpb
mov
in
sub
repnz
mov
or
mov
lcall
dec
add
mov
cs
sub
cmp
aam
inc
lods
jae
pop
inc
push
pop
inc
push
shl
or
shrb
xor
add
jp
repz
or
and
out
repnz
dec
stc
inc
popa
test
xorl
xor
data16
add
ficompl
bound
ds
jecxz
sub
rclb
je
pop
sbb
adcb
pushf
popf
push
xchg
loope
mov
xchg
popa
sti
mov
dec
movsl
cmp
mov
sbb
mov
adc
and
repnz
int
push
xchg
sbb
push
dec
cmpsl
inc
fwait
test
test
lret
push
xor
push
push
sbb
lock
mov
je,pn
push
bound
lret
cmp
stc
loop
jbe
cmpsb
ret
jne
ja
jge
push
nop
shlb
push
jl
pop
icebp
popf
and
lcall
call
add
out
iret
lods
testb
scas
pop
jl
mov
xchg
hlt
or
cmp
mov
insl
adc
mov
idiv
ja
mov
dec
xchg
mov
and
jecxz
dec
sub
gs
into
and
sub
adc
inc
xchg
sub
push
mov
cli
inc
push
jle
outsb
cmp
xchg
push
jnp
and
push
rcl
jg
addr16
pop
jnp
fidivrl
enter
int3
lods
adc
jbe
xchg
mov
xor
int3
rol
push
arpl
mov
mov
mov
jb
fwait
cmpsb
mov
jg
add
aad
xorb
add
enter
push
inc
pop
loop
sub
and
aaa
xor
loop
push
xchg
pop
iret
or
aas
push
stos
sub
fisubs
add
lahf
push
sub
or
mov
xlat
push
push
or
loopne
es
mov
mov
push
xor
stos
mov
mov
fldenv
jo
inc
sti
dec
push
push
dec
call
notl
pop
pop
jb
test
push
pusha
insb
add
rcrb
lds
sbb
fsubs
mov
push
mov
sbb
mov
xchg
pushf
imul
push
popf
data16
jp
movl
and
pop
lods
sahf
test
icebp
mov
or
in
push
andl
pop
push
sbb
leavew
imul
jmp
ds
or
xor
cmpsb
jmp
repnz
data16
mov
inc
push
repnz
leave
decl
jbe
enter
frstor
dec
push
out
and
jle
pop
pop
ficompl
hlt
jae
inc
mov
gs
mov
push
dec
insb
jb
div
cmp
enter
jle
inc
dec
fstl
ficomps
xorl
push
nop
rclb
movsl
sbb
adc
sub
inc
cmp
outsb
repnz
pop
xor
push
mov
data16
xor
pop
scas
add
xor
adc
scas
pop
xor
xchg
test
in
jbe
subl
sbb
scas
push
push
in
sbb
adc
inc
adc
out
shll
mov
or
mov
jle
adc
pop
inc
mov
jns
ljmp
and
cmpxchg8b
or
arpl
lock
inc
xor
addr16
mov
lods
pop
stos
ljmp
xchg
cmpsb
cmp
dec
push
xchg
in
data16
ja
push
inc
mov
inc
lret
aam
xor
jecxz
ror
ds
cmpsb
movsb
sub
rcrl
faddl
mov
jno
pop
xor
xchg
sub
dec
cmpsb
in
nop
cli
mov
dec
lds
xor
je
sarb
pop
es
dec
movsl
push
sbb
sbb
push
pushf
sbb
out
subl
test
stos
pop
xor
fcomps
mov
pop
cmc
enter
repz
mov
mov
stos
data16
into
into
or
dec
sub
sub
ret
fmull
sub
stc
repnz
sbb
fsub
neg
mov
stos
xchg
xchg
xlat
fmull
adc
inc
stc
adc
pop
jge
pop
jge,pn
push
outsl
in
inc
ds
mov
mov
mov
sar
jg
or
ljmp
in
shll
push
adc
sub
sbb
je
shll
push
cmc
add
test
leave
xchg
dec
cmp
lods
jbe
push
push
in
or
ficoms
adc
push
or
lcall
stos
jecxz
int
insb
ja
adc
daa
je
inc
aam
shll
and
and
xlat
and
add
in
xchg
pop
jbe
lods
dec
adc
mov
cmpsl
xchg
nop
cmp
sub
mov
js
dec
mov
shrb
out
nop
xlat
cmpsb
inc
in
es
testl
icebp
int
xchg
repnz
cmovs
scas
stos
in
pop
in
sub
mov
jno
cltd
inc
aam
pslld
xchg
aad
adc
sbbl
pop
fidivl
ja
pop
mov
fdivrl
les
out
imul
data16
jmp
mov
mov
mov
or
movsl
pop
mov
lock
shlb
cmp
loop
mov
pop
pusha
ja
pop
mov
jle
adc
jl
push
insl
loop
pop
sti
or
inc
scas
xchg
mov
sbb
mov
repnz
out
xchg
loope
aam
cs
cmc
std
lret
mov
and
test
push
mul
add
push
pop
cmp
xor
or
mov
sbb
dec
jmp
sbb
lock
xorl
roll
xchg
int3
mov
sbb
inc
sub
inc
mov
jl
fstl
ret
bound
in
lock
inc
sbb
lret
and
repz
mov
call
xchg
lods
jge
xchg
das
add
or
or
dec
cmp
inc
fisubrs
js
push
xchg
popa
fmuls
rcrl
xchg
and
adc
aad
popf
adc
jbe
fiadds
adc
fdivrp
and
les
push
scas
stos
and
inc
stc
shrb
ret
pop
lahf
mov
imul
inc
mov
and
cmp
sub
test
xchg
cmp
inc
and
sarl
mov
push
push
sub
lahf
hlt
cmp
ljmp
dec
jmp
mov
pop
jl
pop
out
shlb
pop
bound
arpl
in
mov
mov
lods
ds
jge
test
leave
out
in
pop
ret
dec
inc
int
lahf
and
xlat
loopne
imul
fldcw
inc
cmp
sbb
add
aas
dec
or
xor
jg
outsb
sahf
negl
call
pop
iret
pop
and
mov
inc
out
sbb
xchg
xor
sbb
std
fwait
sbb
jle
push
push
cltd
rcr
xchg
cwtl
sti
xor
xor
push
fdivrp
mov
sub
cmc
mov
xchg
fwait
pop
jg
fnstsw
lods
cmp
push
stc
or
inc
cs
sub
enter
aad
push
dec
sarb
pop
pop
or
insb
add
inc
add
jl
mov
dec
xchg
and
xor
add
inc
iret
mov
leave
jne
sub
cmp
cld
push
pop
xchg
sbb
fisttps
sub
bound
testb
dec
insl
lret
loope
lahf
jmp
or
inc
out
push
jge
pop
in
orb
xor
jnp
and
xor
outsl
movsb
sub
outsb
jle
pop
movsl
dec
mov
mov
xchg
sbb
cli
inc
int3
outsb
dec
inc
jp
push
cmp
lds
mov
gs
inc
push
sbb
xor
xchg
cmpsl
mov
iret
outsl
insb
xor
ror
loopne
push
call
xor
aaa
std
cli
mov
cmpl
dec
cmpsb
cmpsb
xchg
or
mov
push
push
popa
les
push
clc
jmp
xorl
push
pop
mov
or
jge
pusha
pop
jp
push
xlat
jmp
xchg
dec
xchg
jmp
jle
addr16
push
lods
xchg
adc
cltd
insb
jnp
inc
push
mov
in
xor
js
jns
adcl
mov
sbb
push
inc
sbb
test
mov
cld
jle
out
mov
sub
mov
pop
out
pop
sub
sub
cmpsb
lods
mov
mov
push
jmp
pop
cmp
xchg
sub
adc
test
cmpsb
and
ret
add
les
bound
fucomip
out
shlb
add
mov
flds
sbb
ret
push
add
add
arpl
js
pop
xor
jl
or
popf
add
in
push
cmp
mov
in
xchg
or
dec
outsl
shl
or
enter
push
insl
fwait
xchg
push
fildll
repnz
ss
mov
cli
xchg
aas
mov
sub
into
cmp
das
out
fistpl
cld
and
mov
mov
push
xor
jae
cld
mov
xor
in
jne
mov
xorb
xor
cmc
lret
jg
cmp
cmp
lea
mov
xchg
mov
aas
or
dec
add
cmp
in
add
insb
loope
jns
out
aaa
sub
call
mov
sub
mov
pop
call
push
inc
lret
into
div
xchg
movsl
add
stos
sub
fisubrl
outsb
or
push
push
lret
and
rcll
sbb
decl
mov
xchg
cmp
xchg
lret
pop
nop
push
sar
xor
or
mov
mov
sbb
and
test
subb
and
aaa
into
push
lock
mov
or
sub
test
sub
ja
xor
xchg
pop
or
dec
mov
cmp
test
test
cmpsb
aaa
xlat
sbb
lea
fwait
jae
and
fdivrp
repz
das
xor
pusha
push
lea
lock
aaa
scas
or
adc
fwait
stc
mov
jb
pushf
aad
scas
dec
aam
sbb
js
or
sbb
fs
jae
dec
or
xchg
ffreep
cmp
cmc
pop
sub
aad
es
jmp
mov
divb
push
js
jno
fnstsw
rcll
testl
push
lock
cmpl
ss
cwtl
std
sub
pop
mov
out
or
or
es
loopne
popa
fxch
scas
test
pop
in
push
xchg
jns
add
dec
pop
xchg
inc
pop
dec
loop
jbe
push
mov
imul
test
cmp
in
orb
xor
addb
cmp
sub
inc
data16
xlat
cmp
add
ret
inc
or
repz
mov
mov
sbb
shll
insb
out
pushf
sbb
mov
adc
adc
in
xchg
test
sarl
sbb
cmp
shll
ss
iret
pop
subb
hlt
mov
xor
testb
jb
and
xor
xor
ss
mov
lock
or
inc
jmp
inc
daa
cmp
pop
cli
faddp
stos
or
pop
pop
test
int3
jp
aam
xchg
mov
repz
test
icebp
mov
xor
outsl
stc
mov
clc
movsl
adc
insl
mov
sub
xchg
jl
adc
push
and
or
stc
inc
movl
dec
adc
inc
int
fstpl
mov
sbb
hlt
gs
dec
inc
mov
int
add
jecxz
pop
push
xlat
jl
sbbl
pushf
pop
mov
dec
xchg
aaa
jecxz
xchg
push
les
popa
mov
add
mov
shr
cmpsb
or
out
clc
pop
jns
push
test
jg
in
mov
fstpt
or
push
mov
push
pop
leave
repnz
jns
cli
jb
xchg
sbb
rorl
dec
xchg
adc
fsts
call
and
jnp
push
sbb
or
jno
lahf
pushf
or
pop
xor
imul
mov
fwait
mov
addl
xchg
loopne
fwait
lea
mov
xor
stc
daa
xor
mov
sbb
xchg
movb
sub
mov
pop
mov
xchg
hlt
lret
inc
outsl
jb
inc
outsb
push
rorl
out
leave
scas
cmpsb
cmp
test
sbb
outsb
popf
pusha
xchg
and
mov
push
cs
add
push
inc
mov
dec
push
inc
fucomi
ret
mov
and
mov
xor
pop
cltd
or
ss
dec
mov
and
sti
add
adc
adc
add
in
arpl
push
xchg
sbb
push
push
rcr
pop
jo
jmp
adc
mov
sub
mov
xchg
inc
xchg
rorl
xor
iret
or
fisttpll
xor
rclb
js
jne
mov
lcall
fcom
adc
or
stc
pop
mov
ljmp
mov
div
add
sbb
add
cs
outsb
loopne
stos
push
fmuls
js
lods
mov
sbb
or
push
andl
adc
mov
mov
jmp
mov
scas
into
push
sub
mov
lahf
loopne
adc
dec
push
aas
ds
outsb
jp
sti
cmpsb
add
xchg
out
and
mov
adcb
mov
aas
push
adcb
or
cmp
lret
mov
push
dec
add
sahf
add
dec
rcr
mov
sub
lcall
mov
pop
loop
mov
aam
xor
repz
aam
push
pop
popa
jl
dec
stos
pusha
lods
insb
sarl
mov
push
and
dec
adc
sbb
xchg
clc
mov
call
inc
mov
loope
test
cwtl
lret
clc
jmp
pop
lret
aas
jl
xchg
jg
mov
ret
les
ss
adc
jp
mov
in
dec
jbe
jg
xor
test
mov
sub
popa
int3
mov
mov
adc
fiadds
popa
int
pop
xor
jecxz
push
iret
push
addb
push
xchg
pop
cmp
pop
jne
loope
ja
pop
mov
loopne
testl
lods
mov
out
lds
mov
xchg
push
mov
mov
fisubrl
fwait
stos
adc
cli
cld
mov
test
imul
adc
cmp
jns
bound
cmpsb
test
jp
js
stos
xor
cmpsl
lds
dec
ja
mov
pop
push
lock
lods
sub
fnsave
push
setnp
mov
ja
mov
enter
add
ss
insl
sahf
adc
push
pusha
add
dec
xchg
fistps
dec
pop
hlt
fisttpl
fisttps
out
xlat
mov
adc
call
les
inc
xor
mov
sub
jb
cmp
sbb
adc
fldcw
inc
xchg
les
xchg
or
dec
outsl
addr16
push
push
mov
insl
mov
mov
lret
loopne
push
shlb
loop
dec
movb
fdivrl
sub
std
imul
and
mov
das
push
fwait
int3
push
pop
mov
sub
imul
adc
pop
push
lret
push
mov
push
jmp
incl
call
or
dec
das
outsl
jns
test
cmp
insb
add
add
xor
pop
imul
rorl
pushaw
sub
push
in
sbb
rcll
es
in
jo
mov
notb
mov
fxch
xchg
scas
cli
adc
sarl
lods
test
add
jmp
mov
or
arpl
call
push
dec
test
or
push
gs
xor
mov
mov
sti
and
cmpb
and
sbb
addr16
add
jg
icebp
mov
mov
push
repnz
jb
jmp
cwtl
sub
cmp
shlb
nop
dec
jae
dec
pop
xchg
pop
mov
cmp
xor
insl
insl
dec
adc
jge
out
add
aas
dec
mov
inc
sub
cld
or
les
mov
jle
and
gs
pop
and
outsl
lods
or
sbb
icebp
das
ss
or
ret
sub
mov
xchg
int
mov
mov
movntps
nop
fsubs
sub
and
cmp
xchg
arpl
lock
xor
lret
mov
and
add
mov
mov
cmpsb
dec
repnz
jns
add
stos
pop
xor
mov
fistps
and
std
ljmp
push
pop
sbb
push
mov
jge
jmp
pop
jae
push
jae
movl
xor
leave
fnsave
cmpsl
andb
das
mov
pop
test
push
hlt
mov
push
je
inc
dec
jne
out
sub
fwait
and
shlb
push
fs
mov
out
lds
push
cld
iret
add
mov
xchg
cmp
inc
sbb
leave
mov
push
lahf
ficoms
mov
cltd
push
mov
repz
fs
divb
inc
movsl
and
sbb
cmp
jg
js
lock
sbb
mov
mov
or
push
xchg
mov
inc
add
adcl
add
cmp
and
xor
daa
aaa
pop
jge
xor
imulb
lcall
sub
or
lods
add
test
mov
inc
push
and
stc
push
jno
stos
or
lods
cmp
clc
lret
lahf
notl
je
pushf
cmp
mulb
popa
jae
sub
in
or
les
iret
inc
inc
push
pop
mov
sahf
push
cltd
outsb
movsl
xchg
adc
sub
adc
sub
mov
xchg
add
cmp
xor
ss
dec
mov
popa
iret
inc
cwtl
movsb
imul
cmpsl
adc
push
cs
adc
imul
xor
pop
push
test
in
inc
mov
in
or
jle
bound
sub
leave
push
push
popf
js
mov
mov
cli
outsl
xor
pop
xchg
pop
sbb
lock
fwait
loope
lea
push
sbb
push
test
xor
aas
leave
shl
dec
cmpb
sbb
out
xlat
xor
jge
mov
push
insl
aas
mov
and
or
mov
add
bnd
mov
adc
std
add
imul
pminsw
dec
test
dec
sahf
add
insl
cmp
cmpb
std
hlt
push
faddl
repnz
jg
dec
cmp
sub
scas
cmp
xchg
inc
mov
cmp
xchg
dec
sub
gs
into
test
stos
pop
fidivrl
loope
adc
jmp
xchg
adc
sub
xchg
icebp
sbb
add
mov
aam
cmp
sub
or
xor
or
xor
rcll
sub
repnz
cmp
insl
into
rcll
call
pop
sub
dec
nop
add
xchg
mov
int3
test
enter
repz
ljmp
mov
and
add
ret
repz
inc
ss
imul
stos
push
inc
pop
cwtl
inc
push
or
pop
pusha
test
inc
jecxz
and
mov
sarl
or
hlt
ja
outsl
in
ficompl
mov
mov
daa
roll
and
mov
sub
shl
test
fsubl
xchg
lret
xchg
xlat
mov
pop
adc
pusha
nopl
mov
jp
imul
insb
pop
adc
sub
dec
mov
cmp
movsb
aaa
cld
sub
in
and
clc
mov
mov
inc
rcrl
pop
inc
cli
das
enter
inc
jg
sbb
cltd
add
jns
lcall
xor
pop
or
sbb
sbbb
je
mov
dec
push
cmp
loopne
add
mov
decb
in
jns
test
jl
pop
cmp
popl
xchg
mov
mov
push
mov
ja
stos
xchg
lret
arpl
jge
pop
lret
or
or
mov
loop
xchg
xchg
sbb
pop
test
lret
cmc
push
aas
lods
nop
out
int
jmp
ljmp
les
loop
sub
xchg
popa
jmp
sti
out
fildl
cmpsb
fcmovnbe
sbb
imul
sub
nop
mov
mov
add
or
mov
cmpsb
fistpll
mov
out
lock
adc
inc
daa
jle
xor
xchg
mov
subb
sub
imul
lcall
push
mov
es
in
xor
jae
jl
testb
sub
add
lods
xchg
scas
push
or
dec
add
loop
shr
lods
mov
in
dec
push
pop
sub
inc
and
loope
js
jno
cmp
nop
add
loope
es
fsubl
enter
push
cs
out
sbb
fmul
popf
adc
lcall
mov
dec
pop
push
cltd
insb
xchg
scas
and
aad
repnz
pop
mov
nop
cmp
movsb
cmc
addr16
pop
aam
sbb
shlb
imulb
jmp
adc
mov
shrb
ret
jne
pop
std
movsb
cmpsl
pop
cmp
cld
mov
add
mov
cmp
insl
popa
mov
jns
ljmp
sbb
pop
ljmp
dec
icebp
and
inc
adc
push
inc
mov
cmp
xor
movsl
push
cmp
popf
adc
sbb
idiv
or
dec
lods
ss
test
jo
enter
sub
enter
mov
jecxz
fstp
pop
adc
and
nop/reserved
sub
bound
and
lahf
or
lock
adc
gs
add
adc
shlb
sbb
leave
cmp
ret
repnz
sbb
and
pop
add
sub
mov
pop
add
sbb
and
xchg
lds
push
cmp
roll
fistpll
inc
push
cmpsb
add
cmp
mov
add
sub
hlt
test
hlt
test
cmp
mov
jl
pop
and
arpl
push
scas
pusha
xchg
cmpsb
shll
loopne
cmp
cmpb
stos
mov
push
jb
cmp
dec
pusha
inc
mov
cmp
pop
xor
stc
push
and
cmp
das
add
mov
or
ljmp
mov
push
leave
sbb
ja
jg
add
jge
loope
loopne
sbb
sub
mov
pop
lret
lea
leave
jb
xor
test
pushf
lret
cmp
out
dec
jp
inc
mov
push
arpl
push
rcll
imul
je
or
cmpb
rorb
stc
repz
adc
mov
inc
mov
mov
inc
leave
addr16
push
les
xor
pop
sbb
lahf
lret
jmp
adc
subw
lcall
jb
add
pop
mov
sub
out
mov
ret
mov
pop
inc
xchg
mov
pop
or
adc
loope,pn
mov
out
dec
xchg
pop
std
adc
push
or
rorb
mov
adc
dec
xor
repnz
jbe
sbb
add
xchg
inc
sarl
mulb
stc
or
std
pop
mov
jb
jecxz
mov
xchg
lds
adc
addr16
mov
out
dec
push
dec
add
call
or
mov
fisubrl
icebp
mov
mov
mov
sbb
jno
pop
mov
jge
xor
aam
push
mov
jnp
dec
mov
enter
fnstcw
rcrb
icebp
xor
test
scas
shrb
pop
shrb
ret
jno
je
mov
xor
push
mov
fists
sbb
sub
aaa
int
popf
into
into
sbb
or
add
mov
adc
dec
ljmp
push
into
ret
leave
dec
aad
pushw
push
mov
cmc
mov
test
jb
call
pop
pop
leave
xchg
xchg
fisttps
fimuls
cmp
mov
fidivl
mov
push
xchg
add
cli
mov
rcrl
ds
push
cmp
mov
in
pop
xor
xor
cmc
sub
cs
jnp
pop
out
pop
jb
cmp
out
cmc
pop
jb
inc
xchg
dec
fstps
aad
pop
jns
adc
int3
add
les
rorl
in
xchg
push
pop
cmc
out
ret
call
inc
xor
cmp
daa
add
sub
dec
movsb
ss
xchg
fwait
xor
dec
mov
sub
mov
mov
xchg
aaa
and
or
call
outsl
jp
and
and
es
lahf
idivb
add
and
xchg
mov
sahf
and
add
mov
inc
stos
stc
icebp
fmuls
outsl
cmp
jp
xlat
xor
mov
xchg
xor
jbe
add
and
mov
stc
mov
cmp
outsl
xchg
xchg
push
imul
gs
testl
mov
push
push
xchg
mov
sub
jp
cmp
cmp
jns
arpl
or
mov
in
iret
push
insl
mov
call
aad
cmpsb
rcrl
mov
xor
sarl
jecxz
clc
fcompl
jle
and
lods
dec
cmp
outsb
out
fcompl
dec
ja
lcall
pop
addb
lds
in
inc
jge
xorb
insb
cmovbe
xchg
gs
mov
mov
pop
push
cmp
push
jle
inc
xor
movsl
and
add
or
fnstsw
jbe
add
dec
jmp
sar
push
adc
lcall
mov
and
shl
in
aad
or
dec
aaa
sahf
sti
nop
incb
or
rcr
and
inc
pop
mov
xchg
inc
jns
sahf
and
popa
pusha
and
cmpsl
and
inc
dec
leave
std
dec
add
xor
sub
adc
out
in
pop
jge
xor
sub
dec
ret
push
push
or
xor
xor
xor
shll
and
lods
cmp
xor
mov
mov
ret
call
fadds
int
rorl
fisttps
imul
fisubrs
pop
inc
js
test
or
out
in
jnp
push
loopne
outsb
fdivs
push
pop
jne
dec
cmpsb
xor
fldpi
xchg
cmp
pop
out
mov
push
addr16
int3
mov
jp
insl
add
setl
xchg
jbe
movsb
adc
xlat
jmp
loopne
icebp
insl
xor
mov
scas
xor
popf
loope
mov
adc
add
stos
jb
cmp
lock
fistpll
jae
cmp
imul
or
and
sarb
lret
lahf
adc
mov
mov
dec
mov
inc
xor
rcll
outsb
inc
je
mov
cld
pop
pop
rclb
lahf
add
jmp
dec
insl
inc
aam
jmp
push
lret
mov
dec
in
leave
mov
icebp
pop
sbb
push
or
pop
xor
dec
dec
popf
xchg
das
dec
adc
inc
mov
aam
bsr
insb
pop
sbb
sbb
ds
js
dec
mov
adc
mov
fwait
dec
leave
and
mov
test
ja
xor
jmp
mov
ljmp
sub
inc
lds
lock
insb
jp
cli
arpl
dec
movsb
lods
add
fadds
lock
adc
xchg
pop
stos
or
push
mov
fcompl
push
fwait
or
sbbb
sti
addl
js
lret
jo
in
mov
mov
add
xchg
mov
sbb
dec
sbb
icebp
add
pop
fiaddl
aad
popl
add
addr16
inc
cmpsl
mov
fwait
push
and
test
and
sti
pop
jnp
add
mov
ret
pop
adc
lret
ljmp
jns
repnz
test
pop
sti
xchg
mov
add
mov
test
inc
jge
out
cmp
pop
loope
xor
sar
mov
aaa
push
sahf
ja
jo
out
in
scas
add
es
jb
adc
dec
or
icebp
jno
aam
ret
adc
mov
call
or
ljmp
add
cmp
fisubrs
push
cli
add
lods
and
mov
mov
push
call
mov
ljmp
sub
jg
lea
movsl
aad
push
jns
lret
roll
mov
pushf
lock
pushf
cwtl
and
pop
xchg
dec
lret
leave
iret
xor
sub
jb
out
push
je
xor
pop
shl
sbb
dec
add
insl
loope
repz
aad
aas
das
mov
mov
adc
sbb
pop
or
cmpsl
adc
pop
mov
mov
and
mov
daa
xchg
pop
clc
inc
aas
iret
sub
out
imul
cmp
push
dec
lret
or
xor
cwtl
xchg
lock
push
out
inc
daa
mov
popa
and
das
js
cmc
jbe
negl
cmp
mov
ja
fwait
in
dec
push
dec
js
mov
adcl
js
add
lods
mov
inc
cwtl
js
xchg
outsb
pop
inc
adc
pushf
arpl
xchg
mov
shl
clc
clc
movsl
mov
lret
push
mov
xchg
fistps
mov
pop
push
sbb
mov
mov
lea
ss
xor
push
or
ja
dec
test
shrb
push
mov
out
adc
iret
stos
enter
dec
and
sahf
sub
lds
ret
jo
jl
or
cltd
and
fwait
cmp
ret
nopl
mov
mov
test
push
add
aas
lds
lea
lods
jmp
push
fwait
lret
mov
push
ficomps
loope
push
or
in
mov
push
dec
in
scas
neg
dec
add
sti
push
addr16
and
or
cmp
sbb
dec
mov
pusha
or
or
das
addr16
notl
std
cmpsb
std
dec
outsb
xor
out
cmp
cmp
sub
loope
push
mov
scas
cmp
lea
stc
mov
js
ja
and
movsb
orb
jmp
add
lea
gs
shl
int
insb
test
mov
or
movsb
addb
inc
inc
enter
jle
jbe
shll
inc
jl
add
mov
fucom
adc
sbb
push
sbb
cmp
lds
sahf
mov
inc
inc
push
jne
mov
mov
popa
adcb
subl
sahf
cmp
in
out
movhps
sbb
shll
stc
push
les
adc
popa
mov
mov
cmc
cld
lret
pop
sub
push
mov
loop
pop
push
pop
jbe
jb
or
mov
mov
test
arpl
push
inc
mov
or
sbb
repnz
lock
mov
xchg
ja
add
dec
or
hlt
sbb
test
jl
dec
mov
insl
fildl
pop
push
test
mov
dec
pusha
lods
xor
xchg
jg
cmc
xchg
adc
inc
pop
test
xlat
or
ss
test
mov
test
mov
xchg
sub
sub
imul
xchg
stos
add
ret
out
int3
pop
cmpsl
xchg
insb
dec
scas
push
add
insb
push
push
insb
movsl
inc
incb
sahf
iret
dec
test
icebp
imul
jns
aam
ljmp
mov
shrb
or
stos
sahf
mov
jle
cmp
into
jns
adc
mov
daa
pushf
inc
cmpsb
mov
inc
test
mov
add
cmp
les
out
sbb
lahf
arpl
cmp
xchg
sub
fnsave
pusha
or
ss
cld
stos
iret
add
dec
cltd
and
mov
mov
mov
cld
xchg
outsb
insl
or
mov
nop
inc
jl
cmc
xorb
xlat
movsb
out
mov
scas
xor
lcall
mov
pop
outsb
cmc
adc
sahf
sbb
jg
jne
fst
lret
cmpsl
stc
jb
jp
rcrb
xor
es
in
cmp
and
aaa
ljmp
push
jl
dec
adc
mov
cld
jg
mov
into
mov
jmp
in
jno
lock
iret
jae
mov
repz
scas
xchg
shll
int
adc
and
lahf
jnp
xor
shrb
adc
es
adc
xchg
add
pop
push
pop
fs
lcall
mov
stos
mov
lods
sbb
dec
fs
inc
pop
mov
decl
fnstcw
xchg
jge
sub
fisubs
jp
xchg
xor
setno
xchg
push
and
cmpsl
pop
or
pop
cmp
leave
xor
movsb
btr
pop
orb
movsb
mov
dec
pop
mov
pop
test
mov
popf
enter
xchg
mov
adc
fs
xchg
ljmp
lods
pop
pop
test
popf
push
mov
daa
aaa
aad
repnz
lahf
inc
inc
lock
pusha
ds
xchg
pop
imul
push
jns
call
shrl
cmpsb
clc
sti
shrb
iret
cmc
clc
add
sub
dec
ljmp
daa
fldcw
mov
int
pushf
and
or
mov
cmpsb
xchg
mov
mov
fdivs
adc
clc
repz
jl
and
sti
jp
inc
insb
and
mov
jg
addr16
cmp
addb
push
lock
imul
dec
test
or
cmpsb
mov
xchg
enter
filds
stc
fisubrl
mov
ds
xor
jg
test
in
scas
add
loopne
jle
xor
into
sub
ljmp
push
shll
jb
cs
sahf
lods
gs
adc
sbb
push
xor
rol
cmc
scas
dec
and
rcr
loopne
or
xchg
nop
jo
push
pop
push
gs
in
jecxz
inc
jns
mov
or
jl
sbb
es
cmp
test
cmp
test
movsb
out
xor
out
aam
out
mov
ljmp
mov
test
mov
test
test
pop
dec
adc
icebp
icebp
push
xor
into
xlat
or
xorb
cmp
cmc
sub
jno
outsb
arpl
int3
sub
dec
mov
movsl
cmpb
scas
dec
outsl
dec
jmp
cmp
jbe
dec
push
and
jns
push
mov
dec
or
in
movsl
jle
jge
jmp
cmc
cmp
mov
or
mov
xor
repz
xor
inc
out
clc
cmpsb
mov
cmpsl
mov
lock
push
scas
sbb
subl
sub
cmp
les
cld
push
mov
mov
add
ja
mov
mov
xchg
xchg
jge
dec
fsubs
jmp
cmpsb
dec
mov
jmp
in
cmp
cmc
mov
ret
and
adc
in
mov
xor
push
push
movsb
inc
dec
dec
push
jle
pop
stos
loope
loopne
push
dec
sub
push
mov
rolb
jne
mov
lods
xchg
loopne
jns
cmc
js
fidivl
and
cmc
mov
jbe
push
loope
inc
aam
and
pop
fmul
fsubrs
mov
mov
addb
mov
push
stos
add
fwait
jnp
lods
pop
lahf
out
add
jns
fcoms
lret
incb
mov
and
cli
mov
mov
pop
mov
cltd
out
sbb
cld
pop
paddw
pop
xchg
mov
jno
ret
and
inc
xor
cmpsl
inc
adc
fs
cmp
jecxz
inc
add
jns
mov
jg
inc
pop
je
aam
push
dec
mov
xchg
xor
mov
mov
mov
push
mov
repnz
hlt
jmp
and
push
mov
outsb
and
movsl
out
loop
push
and
scas
fisttps
and
inc
sub
not
movsl
xor
arpl
and
sbb
cli
std
pusha
iret
push
mov
insb
mov
xchg
or
or
pop
adc
sbb
xchg
xchg
inc
cmp
xchg
jp
cmc
in
ja
mov
mov
adc
arpl
cld
mov
sub
mov
mov
mov
outsl
in
nop
es
in
shl
mov
testb
add
fidivl
rorl
xlat
mov
push
into
mov
nop
sub
pop
xorl
mov
mov
icebp
imul
jecxz
ror
in
aam
sbb
push
das
xchg
push
fldt
sbb
or
push
test
call
inc
mov
imul
test
jmp
fld
rcrb
push
jnp
mov
das
mov
cmp
sub
mov
cmc
add
push
xor
push
push
mov
aaa
enter
xor
call
aad
sub
mov
inc
mov
ror
cmp
mov
ficoms
mov
mov
pop
sub
jae
out
cwtl
pop
add
add
jge
ret
xor
pop
gs
push
ror
inc
push
arpl
push
ss
in
ret
or
adc
in
gs
jne
mov
sub
jl
add
imul
cmp
sub
sbb
js
lea
mov
daa
ja
rolb
pop
loope
dec
mov
mov
dec
push
inc
and
mov
inc
cmp
jle
lahf
outsb
pop
mov
pusha
cmc
pop
mov
mov
push
mov
insl
mov
or
enter
and
mov
adc
xchg
cmc
movsl
je
sub
addr16
bound
inc
pop
pop
adc
psubd
or
bound
mov
xor
sbb
sbb
dec
lret
movsb
jbe
or
test
pop
jl
outsl
scas
nop
inc
test
test
loop
xchg
aad
fldenv
aad
out
gs
test
mov
lea
and
add
call
dec
inc
mov
pushf
xor
cld
idivb
xchg
fsts
aad
mov
xor
aas
ja
sub
clc
pushl
pop
sbb
or
jb
popf
mov
add
jae
mov
push
out
stos
mov
stc
leave
mov
sti
in
jne
nop
add
outsl
aas
dec
jne
pushf
addl
or
lds
scas
mov
rorb
iret
dec
or
push
test
cwtl
cmpsb
sub
cmpsl
mov
pop
movsl
adc
and
pop
iret
enter
in
scas
movsb
jp
sbb
mov
add
and
shlb
push
pushf
inc
pop
or
jo
mov
pop
stos
jl
iret
mov
ja
push
xchg
stos
and
subl
out
out
push
sub
dec
and
divl
xchg
jb
mov
cld
or
rol
sub
aam
sbb
test
inc
lret
jl
scas
sbb
mov
sbb
mov
inc
imul
test
sbb
insb
inc
pop
sub
and
pop
jmp
jo
adc
push
gs
ja
sti
ss
push
xor
in
in
cli
cwtl
hlt
jbe
xchg
or
pop
mull
ljmp
sbb
imul
cmpl
inc
imul
jl
push
cmp
test
cmc
xlat
out
repz
cli
cmpl
jbe
negb
dec
mov
fwait
pmaxub
xchg
fnstcw
lock
dec
mov
mov
outsb
jge
pop
jnp
or
ds
xchg
jb
rcl
jp
lock
sti
movsb
mov
ss
mov
sub
and
and
xchg
icebp
jno
clc
in
xchg
or
ljmp
cltd
push
mov
lods
mov
sub
xor
cmp
jo
test
cmc
ficompl
jnp
jbe
jge
mov
pop
mov
rol
imul
cltd
sub
mov
stos
jg
es
repnz
scas
push
pop
pop
and
xlat
leave
sbb
pop
repz
mov
rorb
outsl
rol
jmp
and
aaa
or
pop
je
fsubs
xor
jle
int3
xchg
cltd
scas
imul
adc
leave
je
add
xchg
sub
adc
pop
in
movsb
sbb
adcl
scas
add
adc
mov
push
inc
fsub
add
ret
adc
jne
nop
jge
imul
cli
sbb
pushf
out
aas
movsl
pop
push
push
jbe
scas
jae
sbb
out
xor
mov
mov
jnp
jns
ret
outsl
popa
mov
inc
aad
cwtl
mov
cld
push
mov
subl
jbe
cmp
jmp
popa
fcmovnb
and
cmpsb
js
cmc
add
divl
mov
add
push
mov
adcb
sbb
mov
and
sub
sub
in
inc
shl
cmp
cmc
cmpsl
lcall
fldt
aad
int
adc
push
cmp
or
mov
inc
pop
gs
push
rclb
and
pop
and
aaa
outsl
mov
cmpl
inc
lock
sbb
pop
adc
push
jns
push
rcr
pop
mov
pop
fldl
ss
cwtl
pop
or
incb
fistpl
mov
push
jecxz
sbb
pop
pop
rcrl
sub
xchg
sub
and
aam
pop
mov
popa
mov
test
dec
inc
mov
clc
mov
lret
jecxz
mulps
stc
jnp
mov
aas
sbb
and
out
mov
sbb
cmp
push
mov
insb
hlt
cmp
jecxz
gs
jg
or
jbe
pop
dec
inc
dec
lret
or
push
daa
je
flds
xchg
jnp
jp
adc
cmp
cmpsl
dec
sub
addr16
sub
jb
jl
cs
mov
dec
dec
mov
lods
sbb
iret
inc
inc
pop
clc
ja
xor
push
scas
mov
add
dec
sbb
mov
dec
test
push
int3
popa
xor
and
fildl
inc
push
mov
lret
sbb
cmpsb
mov
repz
shl
cmp
fstp
sub
jle
repz
dec
add
xchg
addr16
pop
imull
shll
neg
mov
push
pop
cmpsb
lods
repz
xchg
repnz
imulb
incl
test
outsl
xorb
inc
jae
inc
mov
or
pop
xchg
icebp
in
push
ds
into
inc
xor
sbbl
xchg
cmp
pop
mov
repz
push
lods
cltd
in
data16
pop
rcll
mov
pop
movl
add
daa
insl
xchg
xchg
lret
cmpsl
fdivr
int
xchg
and
inc
dec
aaa
add
jmp
inc
xchg
imul
daa
mov
movsb
or
jae
sub
stos
jle
mov
mov
inc
fwait
into
jecxz
push
push
andl
shrl
push
sbb
ljmp
inc
das
pop
jecxz
movsb
scas
pop
cmc
dec
dec
in
sarl
loope
js
sarb
loop
xchg
xor
frstor
inc
inc
push
jl
push
bound
inc
movsl
es
adc
jl
sub
mov
fnstcw
jle
pop
mov
or
je
sub
pushf
roll
loop
das
mov
repz
adc
arpl
jmp
push
inc
imulb
and
pop
push
and
mov
dec
push
mov
add
add
xchg
sub
xor
mov
xor
jge
jbe
loope
inc
mov
push
jae
sbb
push
cmp
in
sub
pop
dec
fdivrl
inc
sbb
mov
push
jecxz
jp
cltd
jl
mov
jae
test
popf
test
outsb
xchg
stos
outsl
scas
dec
sti
xchg
push
js
mov
mov
mulb
sub
adcb
jne
dec
add
mov
mov
icebp
mov
cltd
jle
sbb
daa
loopne
outsl
push
mov
gs
mov
xor
data16
push
aad
outsl
add
and
cmpl
dec
pop
pop
jle
adc
xchg
sbb
clc
sbb
inc
jns
out
outsb
xor
mov
and
jle
inc
xlat
and
cmpsb
mov
mov
daa
sarb
and
add
add
out
leave
jp
cmp
in
mov
out
inc
popa
lret
and
xchg
xchg
adc
xor
cmp
push
pop
call
outsb
mov
fimuls
sbb
mov
addb
fdivl
shll
inc
mov
repz
ljmp
fldl
add
add
mov
xchg
mov
inc
xor
cwtl
loopne
mov
dec
fsts
inc
adc
in
mov
pop
into
cmpsl
xchg
insb
cmpsb
aam
scas
pop
jns
das
in
cmpb
rcrb
push
pop
in
mov
jnp
outsl
mov
lods
mov
in
pop
gs
cmp
cld
fimuls
jns
insl
cmc
testl
ret
push
push
stc
cs
add
mov
mov
xchg
mulb
cwtl
out
fsub
int3
push
xchg
lret
jae
sub
mov
mov
cmp
jns
mov
or
xchg
sub
andl
cmpsl
into
mov
pop
dec
out
mov
mov
and
insl
ret
sarb
xchg
mov
dec
clc
fwait
sbb
xchg
add
roll
fmuls
fsubs
loop
fcomps
mov
jno
jle
es
insb
dec
std
fdivrl
sbb
or
sbb
xor
into
mov
xor
out
cmp
cltd
and
push
fimull
adc
cmp
sbb
jle
adc
inc
les
sub
les
or
push
and
dec
lahf
pop
cli
movsl
add
in
jmp
int
fnstcw
dec
cli
or
xor
sbb
clc
lahf
adc
sub
ljmp
test
and
imul
cmc
or
cmp
cmp
adc
mov
outsb
mov
ss
cld
or
xor
mov
js
dec
data16
mov
das
cmpsl
inc
dec
and
pop
cli
dec
xchg
dec
jae
mov
jb
icebp
aas
sti
cli
cmc
add
dec
and
movsb
stc
rcrb
and
and
enter
clc
outsl
pushf
mov
std
mov
in
push
clc
inc
push
sub
pop
inc
mov
inc
stos
or
and
mov
fwait
jmp
lret
into
in
mov
js
push
inc
and
sub
xor
xchg
and
inc
pop
je
mov
add
adc
add
stos
sbb
mov
mov
mov
mov
pop
gs
nop
fmul
push
ret
fsubr
outsl
mov
add
dec
stos
mov
movsl
lcall
dec
jb
aam
enter
xchg
adc
in
rorb
cld
sti
xor
movb
or
pushf
push
lods
imul
sbb
mov
loopne
fimull
cwtl
mov
pop
lret
xlat
jne
subl
sti
xchg
loopnew
pop
ret
push
inc
cwtl
push
call
lods
mov
repz
mov
add
and
mov
xchg
mov
or
mov
push
into
dec
sbb
mov
sub
arpl
repnz
psrld
pusha
mov
test
pop
xchg
or
dec
dec
call
pushf
sbb
or
cld
push
into
sub
mov
or
mov
mov
lahf
sub
add
mov
jne
nop
enter
test
jecxz
shll
cmpsl
rcrb
xchg
mov
pop
pop
xchg
lret
add
push
mov
shll
and
cmp
por
or
or
sahf
add
aam
jmp
fbld
test
and
lret
pop
mov
inc
adc
add
inc
push
adc
addl
lea
sbb
sbb
int3
sbb
lock
idivb
mov
mov
aad
mov
ret
scas
xor
ds
data16
or
cmpsb
jns
mov
add
mov
pop
push
aas
pop
fidivs
test
jg
mov
adc
clc
insl
cmp
sub
jge
inc
arpl
sarb
jecxz
sbb
dec
lahf
insb
xlat
sub
movsb
jno
or
hlt
inc
add
loopne
inc
imul
mov
scas
test
sub
mov
outsl
xchg
xchg
rcrb
add
jg
stc
repz
adc
or
push
mov
bound
testb
dec
cmc
xor
add
push
jp
fiadds
fimull
adc
fcoml
xor
stc
in
sub
sar
test
dec
push
xchg
es
jbe
inc
addb
or
rcrl
mov
or
outsl
cmp
cmp
mov
scas
bound
sub
xlat
repnz
inc
mov
bound
out
and
je
pop
and
fistpl
sub
jl
cmp
add
pop
mov
ret
xor
dec
mov
adc
xchg
test
aas
outsl
insb
repz
test
pop
aam
imulb
mov
dec
cld
lret
inc
push
es
cs
les
ret
fidivrs
in
dec
fisttps
xor
dec
fmuls
sbb
or
dec
inc
out
xorl
mov
ds
pop
inc
out
and
and
je
mov
mov
xor
int3
adc
jp
lahf
imul
sar
sbb
hlt
sub
popf
mov
das
mov
jb
sbb
xchg
ret
outsb
mov
je
pop
or
adc
out
add
mov
in
outsl
icebp
pop
fcomip
mov
jne
mov
leave
jmp
fcomip
cs
pop
lea
fs
push
popf
xchg
in
fdivrl
daa
sub
test
mov
popa
insl
in
jl
xchg
jne
push
and
and
iret
push
mov
add
cmp
sbb
or
pop
jb
je
or
mov
es
mov
push
dec
mov
inc
mov
add
xchg
and
andb
rol
sbb
adc
daa
inc
jo
int
push
in
dec
xchg
cmp
sub
xor
sbb
xchg
mov
jo
jbe
dec
repz
cmpsl
mov
sahf
mov
xchg
sahf
icebp
and
cmp
rclb
hlt
mov
xchg
scas
or
je
pusha
inc
mov
push
dec
loop
and
pop
test
xor
out
sbb
out
xchg
sub
popf
push
ret
push
xchg
ljmp
js
bound
dec
aam
ret
inc
hlt
sbb
cld
adc
rorl
push
and
ja
dec
push
cmp
into
mov
mov
adc
add
pop
xchg
sub
subl
arpl
test
addb
ret
fadds
test
adc
mov
xor
out
test
mov
adc
lock
pop
mov
ss
aam
mov
sbb
push
in
push
sbb
mov
jb
and
sub
mov
sbb
mov
dec
inc
jmp
dec
jb
jecxz
cmp
popa
mov
inc
pop
dec
pop
aad
mov
push
pop
pop
xor
int3
mov
inc
repz
sbb
or
js
mov
jp
push
orb
roll
inc
jo
fildl
lea
jge
push
push
add
adc
es
into
cmp
cmp
test
fildl
cmpsl
andl
or
mov
jae
fcmovnu
lcall
cld
aas
push
inc
mov
pop
pop
inc
xor
push
adc
and
and
push
jg
and
inc
xor
into
rcrl
shl
insb
mov
adc
in
lock
mov
dec
sahf
scas
push
fs
cmc
fisttpll
call
int
add
pop
jb
xor
fldl
das
popl
sbb
rcl
into
pushf
movsb
test
mov
pop
mov
bound
pop
sahf
movsb
push
mov
cltd
adc
mov
or
adcl
xlat
repnz
mov
stos
sub
pop
ljmp
or
push
jge
enter
sbb
inc
les
and
lods
mov
sti
int3
jbe
iret
lds
inc
test
xchg
and
lcall
lods
xor
adc
mov
and
insb
dec
cli
dec
mov
cmpsb
mov
ljmp
sahf
in
rclb
mov
dec
and
addr16
idiv
sti
jmp
xor
sbb
pop
lods
lea
sti
nop
scas
inc
out
cwtl
lods
push
or
cmp
dec
lret
repnz
cli
sahf
clc
loopne
lock
xchg
mov
popa
inc
clc
mov
loope
mov
int3
mov
xor
stos
sub
daa
ja
repz
lods
dec
rcrb
jge
popf
xchg
mov
push
add
inc
mov
fsubrp
and
es
ljmp
push
inc
cmc
movsb
mov
cmp
in
push
clc
aaa
cmp
pusha
or
mov
push
out
lock
xchg
lcall
mov
mov
xor
insl
addl
mov
sub
mov
popa
pop
pop
mov
pop
sbb
xchg
adc
mov
or
repnz
std
add
popa
sub
xor
idivb
fdivr
and
dec
imul
pop
in
pop
rcl
clc
enter
push
sbb
mov
out
jo
mov
ret
sahf
call
les
insl
movsb
cmp
inc
push
gs
js
mov
push
jl
out
xchg
in
or
stos
imul
mov
movsb
dec
push
lds
hlt
xchg
adc
rorl
sub
push
test
cmpsl
adcb
bound
jecxz
lret
add
mov
int
mov
push
sti
outsb
inc
cmpsb
mov
xor
xchg
dec
fldt
psllq
nop
mov
lds
leave
daa
repz
or
and
or
jp
or
dec
aam
push
pop
jnp
hlt
stc
mov
mov
scas
inc
mov
fsubs
lods
arpl
push
cmp
test
setae
push
jge
popf
mov
out
jne
cltd
inc
and
mov
call
cmp
dec
int3
xlat
xor
repz
ficompl
xor
lea
movsb
shrl
lahf
push
cs
inc
and
pop
fimuls
test
out
lods
rcrb
sbb
mov
inc
call
sbb
inc
dec
in
lret
fstpt
int3
inc
cmpsb
outsl
sbb
sub
mov
cmp
mov
lock
iret
xor
scas
xchg
imul
jl
inc
xchg
or
sbb
mov
xor
std
sbb
mov
pop
repnz
mov
push
cmpl
std
shll
jae
or
dec
mov
stc
mov
add
dec
mov
fstl
mov
stc
inc
pop
sub
iret
insl
lahf
sub
add
and
clc
mov
dec
popf
iret
jns
xor
andb
pop
cs
inc
mov
xchg
std
into
jb
sbb
in
outsb
ret
lods
sarl
clc
movsl
mov
scas
pop
fistps
push
loope
lock
imull
out
inc
pop
fcompl
mov
add
stc
sbb
sub
jns
rol
nop
pusha
mov
bound
pop
out
sbb
mov
daa
jo
jl
and
das
pop
xor
mov
add
cmp
test
mov
mov
mov
xor
in
or
jp
in
xchg
jl
js
push
cmpsl
xchg
int3
test
cwtl
cmp
sub
pushf
sahf
jbe
test
cmp
ja
scas
icebp
pop
pop
xor
lret
add
sbb
cld
lods
pushf
pmaddwd
nop
dec
ret
jo
fdiv
in
insl
bound
add
add
pop
mov
pushf
and
and
jmp
clc
in
movsl
repz
mov
sbb
bound
scas
inc
pop
xor
jmp
cmpsb
jge
cmpsb
push
stos
dec
add
or
mov
mov
cwtl
clc
pop
sub
push
inc
repnz
scas
or
or
pop
mov
jle
inc
insb
mov
inc
mov
std
or
lcall
out
call
lret
or
mov
jecxz
shll
add
inc
inc
push
shrl
cmp
and
dec
cmpsl
or
lock
sbb
data16
ja
popa
add
pop
cld
insb
sahf
leave
dec
push
mov
xlat
cmp
xor
xor
mov
rcrl
sbb
call
in
test
add
sbb
sbb
xor
xor
call
dec
cmp
leave
dec
out
movsl
dec
inc
pop
ja
cs
mov
fdivl
in
xchg
dec
loop
sti
in
aas
call
setg
mov
mov
mov
xor
subl
repnz
je
mov
ss
lcall
pop
dec
into
fsubrp
push
lods
fnstcw
mov
cmp
shl
pop
cltd
mov
push
cmp
cs
jl
mov
cs
mov
movsl
jg
jne
mov
pop
jl
or
inc
mov
and
fimuls
adc
enter
clc
cmp
fdiv
xchg
pop
push
jmp
jecxz
add
add
push
in
rcrb
jbe
int
lcall
pop
jl
mov
sahf
in
push
popl
xor
mov
fiaddl
lahf
test
push
enter
jmp
nop
rol
inc
mov
iret
dec
lods
pop
stos
cmp
inc
pushf
ss
dec
adc
mov
push
adc
insb
out
and
ja
xlat
daa
je
fsubr
or
dec
add
xchg
lret
mov
xchg
xchg
int
and
sbb
es
adc
jl
call
ja
jae
sti
cli
int3
addr16
pop
in
pop
mov
xchg
mov
dec
xchg
rcrb
lcall
leave
shrl
adc
mov
ss
pop
cli
movsl
jge
adc
push
push
fcmovnu
adc
mov
mov
ljmp
es
sbb
filds
mov
mov
jno
cmp
dec
dec
inc
jbe
mov
cmpsb
mov
movsl
add
out
hlt
cmp
sbb
ret
ficoml
jae
inc
repz
imul
jno
arpl
mov
inc
stos
and
out
sbb
dec
push
xor
inc
xchg
mov
cs
cmpsb
fists
in
std
in
in
lock
cmp
adc
ljmp
push
shlb
call
dec
push
rcrl
int3
aaa
scas
sub
sbb
cmc
pop
ret
js
call
dec
dec
nop
dec
stos
or
es
into
xlat
fcompl
sub
sahf
out
cld
push
leave
add
jno
jl
faddl
push
inc
and
in
shll
jge
and
push
insb
and
add
mov
inc
int
sub
cmp
out
lods
mov
jg
in
dec
adc
mov
mov
in
cs
out
or
ja
mov
pop
mov
or
mov
div
inc
insb
cwtl
rcll
jno
enter
cmp
imul
inc
out
test
xchg
or
push
outsb
and
and
lock
mov
cmp
scas
add
test
pushf
idivb
dec
jae
or
dec
inc
iret
jecxz
push
loop
cmp
cmp
fs
mov
sub
loopne
je
aaa
sbb
fsubl
orl
xor
decb
xor
sbb
and
xchg
shll
jecxz
fcomps
comiss
jo
test
inc
aas
dec
and
sub
mov
jbe
mov
call
push
xchg
jge
cmc
xchg
push
lcall
push
mull
cmp
cltd
mov
popf
call
cli
test
cltd
push
js
cmp
outsb
in
loope
xchg
repz
push
insb
and
jno
daa
pop
or
cmp
mov
xchg
dec
push
pop
mov
and
push
cmc
sub
or
xchg
pushaw
mov
inc
loopne
sarl
iret
dec
push
lcall
mov
pop
cmp
mov
mov
mov
fldl
rcl
inc
es
leave
sbb
mov
adc
lods
outsb
dec
insl
cmpsl
mov
xor
movsb
mov
and
push
mov
test
mulb
cmp
push
addr16
repz
jmp
xor
clc
lahf
cmpsl
cwtl
pop
push
test
mov
adc
je
in
cld
test
mov
fdivrl
adc
out
repz
ror
push
jns
out
sbb
lret
addr16
xchg
pusha
cmp
dec
cmc
mov
sub
cmc
pop
incb
mov
test
pop
sub
adc
or
rcll
out
in
inc
dec
xchg
mov
pop
lods
ljmp
fiaddl
or
jb
jl
mov
inc
adc
andl
jo
loope
jp
div
adc
test
movsb
push
push
jg
dec
lea
call
mull
jno
roll
xor
fst
sub
test
push
cmp
out
xor
cmc
repnz
pop
adc
lock
xchg
test
and
or
mov
jge
jle
sbb
xchg
jno
jo
pop
lds
sub
jp
sub
cmp
popf
pop
adc
insw
incb
and
adc
jg
mov
sub
fnstenv
jno
sti
and
pop
sar
mov
mov
xor
inc
and
in
int
popf
fstpt
add
dec
pop
and
inc
mov
daa
jo,pt
inc
adc
add
add
icebp
add
loopne
jnp
or
adc
inc
push
iret
pop
adc
xor
fs
pop
jg
inc
and
mov
mov
pop
enter
inc
jp
cwtl
in
xchg
and
jbe
popf
ficomps
and
sbbb
pop
pushf
add
gs
les
mov
jae
mov
dec
sahf
sbb
test
cmp
stos
stc
dec
nop
jo
add
mov
xchg
inc
mov
and
and
out
mov
mov
or
movl
sarl
sbb
mov
add
fadd
xchg
nop
call
jmp
fildll
les
aad
pop
dec
adc
lods
shr
jmp
mov
sbb
mov
and
test
add
sbb
jecxz
pop
imull
icebp
jg
mov
and
gs
push
imul
inc
and
mov
jnp
lcall
mov
xchg
lock
stos
test
pop
scas
inc
ja
mov
jl
mov
adc
rcll
sub
fmuls
das
mov
xchg
fs
pop
clc
jp
inc
mov
or
rorb
repz
xor
cwtl
btsl
jno
add
out
lea
xor
les
test
cmpsb
mov
xor
and
adc
les
in
repnz
loopne
sub
sbb
or
lret
lcall
addr16
mov
pushf
test
sbb
ret
popf
popf
loopne
sub
andl
outsl
xlat
lcall
mov
insl
lret
and
mov
jmp
das
adcl
mov
and
pop
mov
inc
pop
mov
gs
or
arpl
jle
cmpsb
shll
dec
sub
lahf
data16
jp
adc
sub
out
fs
mov
dec
nop
aaa
daa
cwtl
and
pushf
in
call
shl
sbb
adc
inc
push
jb
stos
push
sub
push
ret
jno
jmp
sub
aas
in
lcall
adc
and
sbb
dec
bound
mov
clc
daa
xlat
xchg
push
std
dec
mov
mov
pop
xchg
pop
ud1
adc
push
pop
cwtl
stos
jbe
lcall
mov
sbb
inc
scas
test
push
cmp
push
call
aaa
push
pop
xchg
sbb
mov
in
push
es
lea
xchg
dec
mov
jle
imul
sub
xchg
cld
xchg
push
sbb
in
inc
sahf
mov
add
mov
dec
jo
ret
cmpsl
shlb
cmp
lods
push
sahf
rolb
xor
mov
bnd
cwtl
into
sbb
push
push
mov
mov
sub
mov
and
add
mov
test
subl
ret
xor
aas
dec
push
in
adc
fisttpll
stos
ret
test
pop
arpl
pushf
mov
std
inc
or
pop
je
insl
mov
mov
xchg
insb
mov
rcll
ja
pusha
aaa
push
rorb
sbb
inc
mov
mov
cltd
push
js
test
dec
add
xchg
rcl
dec
pop
xlat
xchg
sub
xor
jo
loopne
push
test
loop
loope
sahf
dec
jne
call
pop
addr16
mov
and
push
out
in
cmp
mov
stc
mov
nop
or
aaa
push
dec
mov
cmc
push
and
inc
xor
clc
jns
int
int
test
mov
xchg
cmpsb
jge
fidivrl
add
ss
imul
pop
mov
outsb
add
cmp
xchg
subb
xchg
cmpsl
mov
pop
mov
addl
lahf
mov
cmpsl
add
dec
jmp
insb
jp
popf
das
test
adc
mov
mov
xorb
ror
mov
dec
jae
mov
mov
mov
das
mov
pushf
scas
and
call
and
sub
mov
pushf
lods
push
adc
xchg
or
sahf
mov
pop
mov
mov
lds
clc
push
outsl
mov
mov
cmc
and
jne
mov
enter
out
dec
int3
pop
or
out
ss
cli
sbb
pop
push
daa
lret
or
loope
mov
xor
jbe
lret
nop
mov
popf
ja
dec
insl
mov
push
jp
push
push
sub
push
dec
dec
xor
dec
out
repnz
or
ljmp
in
jmp
xor
dec
jge
leave
lds
lcall
add
push
cmp
xchg
ficompl
push
insb
not
jbe
mov
adc
int
push
scas
mov
mov
outsb
and
push
cmp
push
mov
call
pop
repnz
loope
popf
inc
mov
add
mov
jbe
push
lock
js
in
aaa
jnp
in
stc
adc
loope
daa
push
in
lahf
es
and
std
loop
mov
mov
cmc
adc
jmp
pop
xchg
lret
and
cs
jnp
mov
orb
pop
and
dec
daa
jne
pop
fnstenv
jecxz
mov
sbb
or
mov
fsubrl
pop
push
repnz
lcall
sbb
shl
sub
aam
scas
adc
out
push
divl
mov
sbb
sub
test
pop
sbb
xlat
outsb
aas
push
pop
xchg
sub
rorl
jb
mov
xor
mov
and
pop
iret
or
addb
mov
mov
adc
fistpl
cld
add
push
pop
out
rorb
enter
dec
xlat
mov
jmp
inc
mov
fistpl
call
pop
popf
lret
sub
adc
add
mov
mov
popf
cli
sbb
inc
mov
jb
mov
sub
bound
in
sub
stc
sub
imul
inc
cs
rclb
jle
push
inc
pop
xchg
dec
add
push
lods
cltd
lods
test
xor
adc
shlb
fmuls
ret
in
es
movsl
stos
or
lods
mov
jmp
outsl
stos
cs
push
sbb
push
sbb
sub
lds
shrb
jbe
dec
adc
pop
push
ret
xchg
sbb
and
sbb
xchg
call
sub
mov
aad
in
aam
adc
mov
add
xchg
jmp
inc
bound
out
adc
xor
and
xchg
rol
jle
imul
xchg
gs
sub
fidivrl
xor
test
shrl
jge
loopne
pop
stos
lock
movsl
fs
mov
test
cmpsb
sbb
fsubrs
das
jle
xor
and
je
push
and
mov
sbb
test
push
lea
sub
sub
movsb
mov
sub
enter
in
cmpsl
test
lock
mov
imul
lods
push
lea
push
pop
or
inc
or
mov
out
push
insb
pop
push
stos
xor
push
adc
inc
jmp
mov
sbb
push
push
mov
ja
jbe
adc
dec
insb
or
enter
push
jmp
lds
popf
mov
inc
stos
popa
inc
ja
stos
ret
fidivs
daa
or
dec
je
loop
push
je
xor
pop
or
in
adc
mov
jno
mov
mov
int3
mov
mov
loope
cmpsl
ficoms
jns
or
mov
cmc
cmp
aad
add
xchg
push
xchg
adc
sahf
in
mov
cmpsl
jae
sbb
sbb
push
pop
aad
dec
fnstsw
push
xor
decb
pop
in
push
cld
cmpb
je
in
ss
push
out
push
js
and
insl
adc
add
rorl
daa
dec
lcall
stos
push
cmpl
js
sbb
nop
rorl
repnz
xchg
popa
adc
lods
les
fldcw
cmc
lods
stos
sub
in
stos
fs
out
xchg
frstor
mov
stc
pushl
cmc
jge
ret
movb
sub
es
sub
das
out
outsb
cld
jge
cmpsl
mov
shll
in
push
jp
push
mov
cmp
sub
pop
and
mov
or
sahf
aad
and
xchg
add
pushl
movsl
dec
in
jmp
push
into
mov
test
add
stc
mov
mov
mov
and
push
sub
pop
and
icebp
arpl
int
mov
dec
es
xchg
mov
push
aaa
cmp
cld
loopne
aaa
repz
sti
icebp
or
fnstsw
add
insb
dec
scas
pop
std
aas
adc
fdivrl
orl
dec
xchg
adc
xrelease
push
pop
add
adcl
outsb
movsl
cmpsl
mov
mov
push
jbe
jg
xor
or
xor
ret
addb
test
jmp
lahf
add
jb
aaa
push
pop
adc
mov
das
pusha
inc
xchg
dec
pop
push
les
dec
inc
pop
pop
negl
mov
lds
idiv
mov
insl
inc
popf
xchg
dec
inc
test
xor
sub
scas
xchg
loop
out
fisubrs
mov
les
insl
enter
cmpsb
cmpsb
mov
xchg
dec
lods
add
addr16
shlb
sub
push
stos
scas
fdivrl
sub
mov
out
xor
add
pop
xor
pusha
push
mov
or
shrb
sub
leave
push
mov
pop
and
add
push
mov
xlat
pop
pop
stos
cmpsl
dec
and
mov
mov
xchg
lods
enter
and
xor
arpl
mov
bound
imul
lds
push
mov
adc
clc
jmp
push
stos
cwtl
push
inc
cmp
xchg
and
negb
ljmp
jle
mov
sahf
mov
push
pop
mov
mov
je
rcl
add
fdecstp
cmp
cmp
cmp
jbe
cmp
dec
inc
rclb
mov
sbb
push
inc
cmp
in
in
out
fsubrl
push
jo
les
std
push
int
in
inc
dec
push
jg
fwait
add
in
xchg
iret
icebp
fs
leave
in
lahf
popl
fnsave
mov
outsb
dec
iret
mov
mov
mov
or
mulb
pop
push
add
push
xor
fnstsw
jbe
push
sub
adc
inc
mov
mov
int3
push
xlat
and
or
outsb
jmp
divl
jbe
inc
push
mov
das
loope
jle
sbb
pop
popl
insl
incb
arpl
shll
fsubr
into
fidivrl
in
fnstenv
pop
loope
inc
or
mov
and
pop
out
cmpsb
sbbb
lret
mov
int
mov
lret
int
adc
pop
repz
inc
dec
cli
sub
scas
enter
pop
stos
cmpsl
sti
pop
mov
lea
sub
movsb
aaa
notb
mov
cmpsb
jbe
insb
or
js
or
push
add
daa
sarl
jnp
push
mov
jmp
inc
push
aam
lret
pop
lods
stos
add
push
rcrb
mov
and
sbb
mov
out
clc
jmp
pop
sub
jo
outsl
loop
jmp
add
xor
daa
addl
or
push
sbb
bound
ljmp
add
fidivrl
sub
sub
dec
pop
pop
mov
pop
fisubl
inc
dec
mov
sti
mov
cltd
xor
fisttps
or
cmp
pop
pusha
pop
pop
mov
out
push
and
movsb
aam
lahf
add
adc
inc
and
xor
adc
fwait
ret
ljmp
lcall
or
pop
fs
and
and
testb
lret
push
dec
and
xor
test
add
pop
ds
mov
jbe
test
mov
dec
mov
dec
fadds
xor
test
ds
lret
mov
aad
mulb
push
dec
lods
jge
les
movsb
pop
xchg
push
push
test
out
xchg
enter
and
mov
mov
sub
or
sub
cmpsl
pop
pop
addb
rep
jne
push
mov
cltd
leave
inc
imul
xchg
and
xlat
xchg
adc
dec
sub
and
inc
fmuls
loope
sbb
loope
xchg
jle
negl
mov
xlat
inc
loope
jo
lea
push
mov
fs
mov
les
pop
lcall
inc
xchg
repz
cmpsb
sub
rcrb
or
divb
mov
jmp
jne
sbb
mov
je
push
mov
daa
test
lock
rclb
cld
inc
cmpb
push
jae
stc
fs
jo
or
adc
inc
iret
in
lods
mov
mov
movsl
dec
cmp
dec
inc
and
js
cmpsb
xchg
dec
lods
shlb
pushf
in
loope
test
push
or
mov
push
je
jno
subl
stos
sbb
or
push
sub
and
sbb
loop
lret
arpl
adcl
test
push
pop
add
dec
pushf
nop
push
push
stos
lods
cmpsb
js
push
sbb
push
sub
leave
add
xchg
icebp
mov
into
std
and
lods
sti
in
push
lods
std
cmpsl
shll
xchg
mov
jae
dec
imul
push
icebp
ss
imul
pop
das
jo
stos
adc
sbb
outsb
ret
cmpsl
dec
jg
mov
outsb
pop
ljmp
data16
fdivl
sbb
icebp
test
xor
adc
movsl
pop
jle
cltd
mov
ret
fwait
sub
add
movl
movsb
sbb
lea
lcall
outsl
dec
lock
mov
push
in
cmp
mov
stos
aam
sti
lcall
push
push
push
mov
sub
fdivs
out
pop
jae
hlt
popa
push
vmovlps
scas
inc
jmp
mov
add
cmp
mov
jbe
adcb
lods
cmpsb
xlat
bound
into
jle
xor
xor
inc
xchg
daa
sub
inc
mov
fidivrs
rorb
inc
cmp
jb
pop
lcall
leave
add
lret
repz
call
mov
movsl
subl
stos
shlb
and
lock
loopne
dec
cltd
les
bound
mov
pop
arpl
dec
out
dec
dec
jne
cmp
push
mov
pop
scas
mov
jae
push
add
jl
in
pushf
dec
bound
pop
mov
lds
xchg
mov
call
es
fwait
sub
stos
push
fsts
decl
scas
aaa
mov
mov
test
lds
cli
push
fcompl
shl
dec
or
push
rclb
pop
stc
out
lods
adc
and
cld
repnz
add
mov
jne
sbb
jmp
add
cmpsb
paddb
dec
lock
sub
mov
lods
dec
xlat
iret
mov
jo
pop
inc
cs
inc
mov
pop
jne
jp
mov
addr16
sub
xor
outsb
out
stos
pop
mov
mov
leave
sub
arpl
lock
pop
insl
mov
or
lahf
in
pop
pop
xor
mov
inc
mov
cmp
dec
cmp
sti
leave
shrl
push
push
jo
add
ja
add
lret
push
mov
sbb
jl
fsub
loopne
sub
mov
hlt
or
stos
xchg
mov
out
nop
xchg
pop
imul
jp
sub
mov
jae
inc
les
fstps
pushf
sbb
adc
subl
scas
fs
addr16
daa
dec
xchg
or
push
pop
add
es
cmp
fs
adc
jae
lock
nopl
inc
cwtl
ljmp
xor
adc
push
jl
push
pop
push
arpl
loope
es
imul
call
push
fadd
jge
jnp
cli
cmp
mov
test
and
pop
shl
push
in
xor
stos
nop
test
pop
add
ret
pop
fwait
sbb
int3
in
sub
rclb
mov
adc
sbb
into
xchg
rcrb
cmp
adc
pop
vpmacsdqh
pop
jl
test
movsl
dec
pusha
jnp
lock
sbb
mov
sub
mov
push
xchg
imul
aas
cmpsl
adc
outsl
les
scas
enter
mov
pushf
fdivp
pushf
rcrl
and
or
jne
ljmp
sub
nop
add
cmc
push
add
sub
adc
test
mov
mov
xor
std
push
xlat
xrelease
fisubl
add
mov
outsb
sub
xchg
mov
iret
dec
gs
cmp
in
iret
stos
sbb
mov
leave
and
and
and
push
cmp
out
call
mov
and
push
sets
cmp
fildll
mov
xchg
lret
inc
sbb
fwait
xor
sbb
mov
test
or
rcr
imul
rorb
xchg
fdecstp
rcll
mov
cltd
jg
scas
xor
mov
adc
das
dec
adc
insl
es
addr16
dec
repz
in
aas
lahf
scas
jnp
stc
pusha
sub
mov
and
xor
pop
inc
ffreep
in
add
inc
add
pop
sub
xchg
xchg
push
or
movsb
into
or
pop
out
test
rcr
dec
mov
jl
xchg
xor
std
xlat
scas
ja
push
cmpsb
sbb
lea
stos
stc
jns
in
mov
cmc
out
sti
jg
cld
sbb
push
aaa
test
ret
pusha
stos
loope
arpl
jae
xor
cmp
sub
cmp
sub
leave
lcall
sar
cmp
xchg
insl
jl
xchg
push
adc
pop
or
test
test
push
jae
and
sub
inc
and
js
sbb
sub
into
loop
pop
or
cmp
shlb
push
mov
aas
xor
inc
and
lret
loopne
add
mov
stos
std
inc
mov
popf
push
adc
mov
adc
imul
int
mov
test
imul
neg
fldenv
xchg
ret
loop
lahf
lret
pop
stos
inc
fsubs
sbb
xor
out
jo
xor
out
jecxz
cmp
sub
push
outsb
fisttpll
shrl
repnz
insb
cmc
and
cli
pop
xchg
mov
shlb
xor
out
js
bound
out
or
push
enter
push
cmp
pop
pop
enter
lds
or
mov
dec
rclb
inc
in
mov
pop
addl
aam
sbb
ss
jbe
jl
movsl
dec
mov
orl
mov
pop
fisttpl
sbb
movsl
orl
popa
cs
sbb
clc
ret
mov
pop
movsl
clc
jns
cwtl
cmpsw
dec
aam
fiadds
insl
inc
add
out
push
shlb
decb
push
xchg
jnp
cmp
sbb
jge
cli
imul
xchg
inc
test
nop
cwtl
rcrl
cltd
movsb
mov
test
cmp
push
jle
sbb
pop
xor
cs
cmpsb
push
bound
ja
ret
dec
clc
shlb
mov
lret
popf
pop
invd
gs
sarb
jmp
imul
repz
aam
adc
sub
cli
ret
xchg
es
mov
push
imulb
adc
pop
cmp
mov
dec
xchg
daa
push
iret
sbb
mov
fiaddl
xor
mov
pop
push
xchg
inc
xchg
lahf
add
mov
test
pause
xchg
ret
insb
insb
in
call
sub
js
cmp
pop
cmpw
sub
loope
fmul
femms
daa
divb
lods
call
movsl
sahf
mov
jg
cwtl
xchg
adc
dec
and
fsubrl
cmp
test
xor
inc
popa
test
aaa
dec
fwait
cmp
pusha
into
cli
push
xor
cmp
sbb
jge
loop
sub
addr16
adc
jae
xor
and
stc
cmp
ss
inc
cli
add
sbb
stc
repz
decb
mov
arpl
pop
stos
sub
enter
imul
push
sbb
push
insl
mov
popf
xorb
in
mov
into
sub
std
lret
sbb
push
lock
sti
mov
leave
je
mov
mov
mov
mov
adc
mov
call
inc
mov
mov
mov
jecxz
sub
or
sarb
fiaddl
cmp
testb
pop
scas
mov
popa
dec
jg
out
lcall
fs
add
outsb
jg
or
push
mov
mov
mov
cmpsl
xchg
insl
jne
outsl
jge
in
nop
fsubl
lcall
cli
jo
pop
loope
dec
push
das
pop
mov
inc
mov
jl
add
loopne
scas
sti
sbb
xchg
loope
fcoml
adc
adc
inc
push
nop
cmp
je
in
out
jo
sbb
cmc
jg
les
mov
mov
not
xor
imulb
xor
nop
stos
aaa
inc
cli
fcomps
gs
xchg
sub
pop
jecxz
in
mov
pop
jne
and
or
inc
mov
pop
std
xchg
fadds
push
jns
sbb
imul
jp
ds
repz
inc
out
lods
dec
testl
pop
loop
mov
add
scas
cmp
sub
xchg
subb
popf
jmp
pop
fadd
push
push
shll
jno
or
pop
lret
das
movsl
xchg
dec
mov
cvtdq2ps
cmpsl
mov
add
and
mov
icebp
mul
test
dec
xor
mov
fdivl
mov
push
or
push
popa
fldt
aas
cmc
xlat
fsubs
leave
xor
sbb
adc
insl
xchg
mov
xchg
add
outsl
push
xor
dec
outsl
dec
aad
shlb
rorl
cmc
mov
out
fidivrs
fdivrs
push
dec
pop
xchg
inc
inc
push
xor
lcall
cmpsl
or
sub
mov
adc
mov
cmp
sbb
xchg
roll
cs
stos
into
pminsw
mov
adc
adc
out
test
call
mov
repnz
jae
jne
int3
loop
ret
lods
ss
ljmp
pop
fwait
mov
mov
lock
jae
mov
mov
into
xor
or
mov
lret
jno
cmpsb
add
jns
dec
mov
jmp
sub
pop
xchg
rclb
add
mov
daa
aam
inc
add
push
mov
cmp
cmp
push
adc
fiadds
inc
aam
imull
test
mov
push
aas
fdiv
mov
outsl
add
pushf
jae
mov
fcomip
mov
loope
outsl
add
add
daa
mov
filds
xchg
pop
leave
push
hlt
jnp
frstor
shl
adc
xchg
jne
dec
aam
sbb
add
pop
ret
jnp
mov
mov
fcoms
mov
iret
stos
sub
sub
hlt
mov
push
cmpsl
pop
add
or
and
sub
fldl
scas
rcrb
and
mov
dec
insb
jle
clc
jecxz
lret
inc
ja
dec
mov
fdivr
mov
mov
push
xor
aad
int3
push
and
arpl
mov
test
mov
add
les
out
shrb
loopne
dec
adc
rep
xchg
sub
jmp
cmp
stos
les
fwait
ret
xor
fsubs
stos
test
outsl
ljmp
repz
or
addr16
sbb
in
dec
lods
and
dec
inc
xor
les
push
mov
cmpsl
sub
mov
xchg
dec
jge
sub
mov
dec
xor
push
mov
int3
cwtl
mov
ret
push
nop
dec
aad
sahf
mov
xchg
mov
xchg
roll
mov
mov
lods
mov
add
xchg
pusha
das
ds
xor
push
aaa
and
adc
adcl
gs
pushf
das
cmpsl
dec
rolb
mov
and
pop
in
pop
and
inc
jmp
sub
inc
mov
sbb
shl
inc
ljmp
mov
lds
dec
dec
push
nop
dec
scas
mov
test
and
pop
out
dec
test
sbb
stos
push
add
push
ss
cmp
mov
jle
jg
stc
or
rol
sar
mov
clc
xchg
sub
into
int
cmp
data16
dec
hlt
dec
in
push
xchg
loop
fbld
sbb
daa
aad
leave
push
and
in
fcoml
enter
insl
stos
mov
pop
sub
xchg
xchg
mov
jle
xor
mov
fs
loope
xor
dec
push
push
dec
xor
jo
popa
frstor
out
mov
add
jmp
mov
loop
pop
mov
jmp
ds
dec
push
es
scas
pop
scas
sub
leave
pop
dec
cmp
icebp
lea
lret
cmpl
xchg
pop
or
sbb
shrb
lds
cmc
negl
int3
imul
test
xchg
xor
xor
jne
inc
sbb
cltd
or
xchg
mov
ljmp
lods
pushf
inc
pop
xchg
mov
sub
or
addb
xor
call
sub
add
mov
push
shrl
add
jne
add
mov
imul
ds
jecxz
ljmp
out
and
sbb
faddl
mov
ds
imul
push
cli
dec
setle
imul
cli
out
or
js
int3
cli
fbld
je
iret
repz
pop
fwait
adc
sbb
sbb
jb
add
adc
push
mov
jo
xchg
cld
mov
adc
repz
inc
fcoml
add
enter
out
mov
insb
imul
ds
jae
leave
xor
pop
fsubp
xor
out
loope
xlat
xor
mov
in
pop
push
mov
icebp
sbb
into
mov
and
jne
push
cmc
ret
adc
ss
mov
inc
sbbl
pusha
mov
push
sbb
xchg
push
lahf
cmp
lods
movsb
pop
enter
jbe
add
push
out
fs
jmp
in
xchg
in
mov
int3
xchg
sbb
lods
jae
sbbl
leave
and
add
insl
xor
jo
sub
xor
xor
cmp
mov
insb
inc
xchg
ficoms
stos
xor
jns
addb
daa
cmpsb
loop
xlat
mov
add
stos
add
insb
cmpsl
ds
les
inc
adc
add
out
ja
push
mov
jb
cmp
sub
lret
adc
aam
jl
test
adc
cmp
mov
jmp
and
les
lret
shrl
std
jl
fsubs
pinsrw
inc
xor
dec
lea
std
mov
stos
int3
fdivs
inc
loope
insl
mov
addb
enter
pop
fcoms
aaa
add
enter
sbb
sub
sbb
lret
add
and
out
movsb
mov
xor
call
cmc
popa
add
pop
movb
fs
pop
xchg
movsl
cld
lcall
cld
lods
dec
call
es
cmpsb
insb
mov
mov
lock
jmp
or
popf
data16
mov
or
sahf
push
push
add
pop
lods
inc
mov
imul
or
aas
aad
mov
fisttpl
xchg
mov
xchg
inc
cmpsl
in
xchg
scas
xor
lds
in
pop
das
mov
test
pop
fildll
jmp
or
subl
mov
jns
mov
push
mov
subl
mov
sub
movsl
xchg
xchg
mov
xor
inc
adc
pop
push
sub
das
jns
mov
fildll
lock
inc
aad
jo
pop
mov
add
popa
lea
fstpt
push
lods
cmp
xchg
xlat
pop
inc
aaa
mov
shll
xor
mov
mul
jle
jmp
movsb
scas
in
int
sub
dec
movsl
sub
stc
adc
add
jge
insl
mov
adc
pop
jo
sbb
stc
sbb
fiaddl
fistps
or
push
mov
jp,pt
dec
inc
aam
aam
ud0
aaa
nop
repnz
cli
and
push
ss
dec
sbb
sub
fildll
or
pop
sub
jle
and
mov
xchg
stos
les
mov
add
arpl
mov
cli
pop
in
insl
jns
pop
pop
pop
push
and
adcl
test
inc
pushl
fcoml
shl
lock
aas
cmp
jle
popa
lahf
call
subl
pop
loop
push
pop
sbb
cmp
dec
pop
xor
imul
sbb
cmp
jnp
test
mov
adc
add
hlt
leave
hlt
xchg
loop
repnz
xchg
push
jmp
xlat
cld
lret
ror
adc
jmp
adc
hlt
cmc
call
cmp
in
rclb
outsl
mov
jg
sbb
pop
inc
cmc
les
dec
adc
ja
and
xor
push
test
push
loop
iret
fnsave
out
push
mov
jb
cmpsb
inc
and
idivl
cld
loopne
je
xchg
fsubrl
rorb
shll
xchg
pop
imul
inc
and
sbb
cmp
cwtl
rolb
push
mov
push
sbb
loopne
add
test
lret
mov
add
out
jl
or
outsb
xor
sub
ja
leave
pop
ljmp
mov
pop
xchg
push
es
cmp
sbb
and
xchg
cmp
pop
jo
cli
sub
sub
pushf
stos
ret
pushf
add
mov
xchg
std
inc
cmpsl
std
jl
pop
je
adc
test
loopne
cld
inc
cmp
xor
xlat
ds
adc
repz
xor
jbe
or
sub
add
sbb
es
rorl
mov
push
add
mov
add
and
test
xor
xchg
pop
xchg
rclb
outsl
mov
pop
and
sub
xor
jno
scas
out
add
or
adc
add
jb
fnstenv
pop
inc
mov
test
sahf
jae
fcompl
adc
pop
and
mov
mov
and
jnp
mov
sub
out
mov
sub
mov
add
cmpb
jno
out
inc
loopne
lods
into
gs
pop
xchg
xor
das
sub
push
and
fs
mov
fmul
cmpsb
adc
addl
sti
aaa
out
mov
sahf
out
jo
jp
push
mov
pop
mov
loopne
sub
add
lret
sub
mov
ljmp
aam
movb
test
jecxz
mov
out
cmovns
sub
jp
jns
cmp
hlt
aad
incb
push
jg
mov
bound
sbb
fcompl
pop
lahf
mov
or
xchg
xor
sub
fcomps
lock
dec
repnz
adc
sub
xchg
movb
push
sarl
fnstenv
fnsave
pop
add
popf
xor
add
cmp
into
xbegin
lods
jg
icebp
cltd
idivl
mov
pop
mov
pop
or
sbbl
shlb
jbe
xchg
repnz
test
ja
nop
xchg
mov
cmp
or
push
ljmp
stc
stos
pushf
sbbb
aas
and
mov
and
lods
jmp
es
mov
rorl
pop
aam
and
and
adc
clc
mov
insl
mov
pop
dec
adc
popf
push
rorl
ret
xor
pop
cltd
push
aad
pop
add
dec
imul
movsl
pushl
or
pop
inc
cmp
inc
es
or
or
lock
mov
adcl
sbb
lds
ret
dec
test
mov
idivb
mov
jo
jbe
stos
aam
push
jo
rcll
mov
adc
jo
cwtl
lods
xchg
out
mov
rcrl
sub
mov
mov
pop
stos
lcall
cmp
out
dec
adc
xchg
sbb
aad
and
pop
jb
lret
orb
lret
pop
push
aas
inc
fiadds
in
inc
pop
xor
stos
cmp
push
push
mov
out
adc
mov
shrb
nop
pop
mov
hlt
arpl
sti
jno
adc
and
int3
in
syscall
repnz
por
pop
jge
mov
dec
adc
out
shr
or
sbb
pop
dec
out
loope
lock
sub
sbb
adc
inc
push
cmp
imul
fdivs
jl
mov
adc
dec
divb
mov
or
int
inc
std
stos
mov
dec
pop
fstpl
adc
mov
fdivrp
sub
jbe
adc
jl
fisttpl
cld
test
mov
jecxz
mov
lods
loop
sub
nop
dec
stos
out
enter
mov
fwait
mov
or
jns
data16
sbb
push
mov
lds
mov
or
adc
pop
jno
inc
fnstsw
enter
loop
lret
push
out
pop
pop
or
mov
in
xchg
insb
je
out
mov
or
out
lds
lods
adc
dec
call
scas
lahf
aad
scas
sbb
mov
daa
es
adc
add
out
shl
das
scas
inc
paddd
enter
in
mov
and
in
jae
dec
jnp
push
rclb
gs
je
dec
mov
jno
sbbb
test
fs
jge
sbb
arpl
pop
cs
mov
dec
mov
sbb
mov
jae
and
leave
pop
sub
imul
bound
aaa
mov
sub
jl
fisubrs
negb
dec
mov
out
scas
stos
cmp
jae
out
insb
pop
out
lods
push
and
in
mov
push
test
enter
xor
scas
lods
in
cli
dec
outsb
xchg
pop
fsubr
mov
mov
movl
or
in
mov
repz
pop
scas
js
sub
pop
lock
repz
test
add
adc
sub
mov
inc
popl
call
cmp
inc
jns
jp
push
xor
lret
dec
fcmovbe
xchg
insb
add
mov
pop
shll
je
mov
jp
aaa
out
lds
mov
in
jo
xor
jp
mov
scas
push
repz
sub
aaa
cmp
in
xchg
je
sbb
mov
mov
jbe
add
push
popf
fimuls
xchg
pop
sbb
jge
lcall
and
andb
scas
and
dec
test
mov
adcl
jns
jecxz
cmpb
pop
outsl
aaa
rcrb
out
jne
push
pop
daa
push
push
scas
add
dec
pop
sub
lds
movsb
cmp
cli
roll
or
cmp
ret
or
sub
lcall
sub
in
sub
or
adc
jbe
jno
cmpsl
insl
ret
pop
in
mov
popf
bnd
push
fistpll
dec
jmp
dec
dec
adc
js
dec
pop
mov
mov
jns
fstps
jmp
push
xchg
cli
movsl
sbbl
in
and
inc
jo
xchg
ret
dec
aas
inc
movsb
dec
cmp
into
cmc
sbb
into
lcall
popa
outsb
fwait
cmc
call
mov
movsl
jp
adc
insl
push
rcrl
push
lock
cmp
cmc
push
inc
inc
dec
xor
lahf
aam
fdivrs
add
rol
or
lret
lcall
sarl
daa
stos
hlt
and
inc
mov
adc
jne
mov
ja
push
aas
and
inc
out
sbb
mov
int
pop
cmp
mov
lock
call
arpl
sbb
mov
aad
and
jl
cmp
sbb
jo
inc
xchg
subb
and
cmpsl
jge
sub
add
add
bound
mov
mov
out
jno
push
ret
ljmp
jnp
arpl
leave
pop
nop
push
stos
ja
add
aad
xchg
out
add
pop
test
xchg
loop
pop
dec
cmc
gs
int3
cwtl
cmpsb
pop
jg
leave
mov
push
and
xchg
bound
push
dec
addr16
xor
mov
orl
jb
dec
test
call
mov
lret
lea
add
shrb
sahf
push
cmpsl
outsb
sub
dec
roll
sbb
xchg
adc
cmp
xlat
lret
pop
push
xlat
sub
mov
pop
pop
xchg
xor
adc
rcr
xor
ret
subl
dec
std
loopne
lock
pusha
push
inc
mov
dec
test
jecxz
xor
loopne
aaa
mov
adc
xchg
test
inc
pop
or
cmp
leave
xor
inc
push
sbb
scas
fwait
dec
add
xor
dec
jo
fcomps
add
sub
push
xlat
lods
out
mov
mov
xor
lock
in
pop
pop
add
pushf
pop
stos
xor
xchg
jnp
out
cmp
pushf
ret
aas
stc
pop
and
rorl
dec
insb
sbb
test
repz
mov
stos
call
or
xor
test
mov
fsubl
test
push
pop
andl
repnz
scas
mov
cs
xacquire
lock
test
movl
push
shlb
or
adc
stos
ret
popf
pop
aas
shlb
pop
les
daa
cs
sbb
scas
shll
and
sub
test
push
xlat
xchg
push
sub
pop
bound
inc
mov
xor
sub
xor
popf
loop
lcall
pop
fs
pop
mov
leave
aaa
fs
pop
dec
out
fiaddl
or
dec
inc
push
inc
sbb
pop
les
fiadds
stos
push
jg
pop
mov
ljmp
fcmovnbe
add
lock
mov
jg
jge
lods
xchg
lods
imul
cs
push
inc
repnz
add
xlat
jge
jmp
incb
sub
push
fistps
dec
fisttpl
hlt
xor
fnstsw
je
xor
add
sahf
inc
test
push
psubb
xchg
pusha
jb
push
jnp
out
outsb
cmp
cmc
pop
addr16
test
push
into
je
insl
jmp
xor
sub
iret
outsb
mov
cs
cmpsb
and
xlat
mov
insl
adc
mov
cmp
jmp
dec
sbb
inc
or
mov
int
mov
ljmp
jmp
dec
push
std
push
sbb
aam
loope
xchg
mov
cmp
and
sub
dec
and
test
sbb
or
testl
jmp
and
push
inc
xor
out
icebp
cli
nopl
add
data16
xchg
and
xchg
inc
cmpsb
loop
dec
test
fstpl
cld
sub
mov
xor
shl
and
lods
fldenv
xor
mov
iret
xor
imul
shll
cltd
out
imul
pop
xor
xchg
lsl
sahf
cwtl
in
out
pop
xor
cltd
andb
test
sub
js
in
mov
xchg
mov
add
jle
pushf
daa
cltd
lds
add
sub
mov
stos
popa
adcb
mov
xor
sbb
pop
and
faddl
sarl
popa
scas
std
lock
push
ror
in
shl
sub
sub
out
add
jne
mov
outsb
mov
pop
xor
mov
insl
loop
mulb
and
pop
add
xorb
pushf
push
cmpsl
loop
lock
xchg
gs
fabs
jne
fstps
push
mov
test
sahf
rolb
pop
or
adc
rcr
add
lcall
sbb
cwtl
cld
dec
xchg
test
fdivp
call
out
cmp
cmp
xlat
jge
and
data16
mov
aas
subb
out
leave
gs
popf
xchg
jne
sahf
ds
fdivl
pop
js
cs
lock
pop
xchg
sub
call
pop
mov
cmpsl
lds
into
sub
andb
mov
pusha
mov
jbe
or
cs
repnz
mov
lock
jns
pushf
loop
jb
rolb
dec
jae
inc
sti
lahf
cwtl
rclb
and
jae
mov
and
add
cmp
xor
sub
int
xchg
pop
jno
xor
decl
jne
push
fsubrl
sbb
xor
pushfw
xchg
int
ljmp
mov
cs
ds
cwtl
mov
lds
adc
movsb
pop
dec
stos
mov
mov
or
lods
adc
popf
lret
cwtl
insl
or
in
mov
adc
inc
call
push
and
push
lahf
cmp
jb
hlt
int
sbb
sbb
mov
jno
scas
inc
mov
es
insl
xchg
enter
dec
mov
mov
insb
dec
sahf
push
jno
iret
cltd
or
push
pop
imul
dec
cmpsl
xchg
shlb
or
mov
xchg
int3
loopne
mov
lahf
addb
xlat
dec
jle
xchg
xor
insb
mov
xchg
xor
lds
stc
sbb
pop
push
repz
imul
repz
mov
and
gs
aaa
inc
push
inc
jno
out
cmc
scas
lea
or
scas
jge
dec
xor
and
clc
mov
sub
in
jl
cmp
jnp
das
mov
xchg
xor
cmp
inc
idivl
jns
insb
push
or
sbb
std
shll
js
mov
orb
push
idiv
lods
xor
mov
ljmp
cmc
insb
cmp
xchg
dec
inc
push
shlb
or
mov
iret
dec
int
repnz
scas
mov
movb
pop
sub
mov
sub
add
push
fisubl
into
repnz
int3
mov
fwait
sahf
lods
stos
repnz
and
lret
ss
in
les
and
mov
add
sarb
push
sub
int3
dec
arpl
arpl
adcl
push
add
dec
out
ret
jl
cmpb
test
subl
popf
int3
iret
add
ljmp
dec
or
mov
or
iret
xor
loop
cmp
fs
out
mov
inc
sahf
push
adc
imul
push
movsb
int
ret
or
fsubrp
xchg
add
mov
push
dec
aas
xor
lods
adc
cmp
sbb
out
lock
inc
int3
fsubp
push
pop
jo
mov
sbb
adc
mov
xor
push
leave
scas
ss
xchg
cs
mov
bound
mov
push
in
int3
mov
mov
sahf
cs
cmp
repz
mov
mov
mov
mov
sub
aaa
push
and
push
scas
ja
sbb
jp
cld
int
push
cmp
cmpsb
aam
and
sahf
je
mov
cltd
sbb
cs
bound
cmpsl
lahf
and
mov
loope
into
popa
cmc
push
xor
loope
fs
jmp
loope
push
dec
test
sub
or
sub
andb
out
xchg
dec
outsl
repnz
scas
sarl
mov
arpl
int
dec
jmp
jle
dec
out
sub
mov
cmpsl
jmp
mov
iret
jne
mov
inc
shlb
mov
es
or
jp
dec
xor
fnstsw
aas
mov
test
push
mov
jnp
arpl
xor
sbb
sbb
xlat
iret
out
lods
xor
xchg
adc
add
inc
push
fistl
int
scas
test
mov
arpl
repz
mov
inc
xchg
lret
inc
xchg
dec
sbb
jl
sub
cmp
incl
or
mov
stc
js
mov
mov
jge
fdivr
inc
push
das
xor
push
mov
mov
jecxz
xor
andb
leave
mov
sbb
push
pop
lods
popa
cwtl
adc
lcall
call
push
adc
add
adc
jg
sub
movsl
mov
jecxz
ljmp
lods
subl
rcr
outsb
pop
add
mov
push
pop
and
xchg
mov
adc
lret
xchg
mov
insb
insl
cmpsl
ds
adc
sarl
fnsave
insb
daa
mov
ss
shl
mov
and
cmp
cwtl
outsl
cli
in
push
mov
add
sbb
and
gs
adc
xchg
fwait
or
cmp
xor
cmp
jmp
inc
jae
sub
mov
sahf
inc
push
xchg
andl
add
inc
adc
push
inc
xlat
push
mov
adc
mov
cmp
ret
mov
leave
popa
pop
push
adc
pop
sub
sub
int
add
push
mov
adc
into
out
sti
mov
fwait
mov
into
movsb
js
or
add
add
or
pop
mov
push
stos
sub
sarl
imul
jecxz
and
insb
ss
shr
clc
mov
xchg
mov
inc
mov
pop
iret
mov
loop
push
repz
add
xchg
mov
sub
push
out
loopne
fldl
mov
jle
in
adc
xchg
dec
int
jno
test
addr16
push
movsl
sub
fisttpll
lods
sahf
pop
sbb
mov
subb
or
mov
cmp
jecxz
lock
and
jmp
xchg
daa
in
dec
sub
imul
push
in
jle
mov
je
push
and
xor
stc
cmpsl
in
fcomi
jne
les
jae
push
jmp
test
mov
add
pop
ret
push
hlt
insb
cmp
fdiv
lea
int3
add
mov
mov
rep
jns
jmp
jmp
sub
lcall
adc
ds
in
push
hlt
push
gs
sarb
js
sahf
push
jnp
jp
adc
in
fiadds
push
adc
cmp
cvttps2pi
xorl
mov
pop
push
xchg
or
test
mov
lods
jl
xchg
lahf
mov
je
cmc
pop
aad
pop
int
mov
jmp
adc
mov
xor
and
push
inc
movsl
push
jp
cmp
or
or
je
mov
add
push
int3
xor
mov
iret
mov
mov
orl
lods
aas
ds
add
mov
or
mov
mov
jae
mov
imul
in
addr16
call
jne
jmp
scas
clc
popa
inc
dec
lret
clc
daa
shl
lahf
dec
lock
mov
inc
imul
pop
adc
lret
nop
push
or
mov
push
pop
xchg
push
jb
jne
cmpsl
cmp
pop
jmp
leave
es
mov
add
into
jle
jnp
xchg
das
or
nop
xor
pop
jmp
std
inc
ds
sahf
out
std
cmpsl
pop
mov
inc
pop
adc
jne
cmp
mov
outsl
push
sbb
cltd
incl
xchg
outsb
mov
leave
pop
sub
push
add
jo
adc
jmp
jecxz
scas
arpl
xor
daa
push
mov
jno
je
xor
pop
cmp
adc
movsb
popl
out
mov
xchg
in
clc
sub
lea
jl
mov
push
ficompl
nop
mov
maxps
fldt
pop
mov
pop
jno
jbe
or
push
out
add
pop
testb
mov
fs
lds
repz
dec
jbe
adc
cmp
inc
push
sarl
inc
test
sbb
adc
xchg
insl
push
lods
fisubrs
enter
xchg
and
imull
mov
jns
push
adc
outsb
dec
add
pushf
cmp
in
push
loop
pusha
inc
inc
inc
pop
scas
xlat
jo
pop
adc
jnp
sbb
xchg
stos
mov
mov
sub
dec
or
mov
out
jl
xor
in
rcll
sarl
stc
cmp
mov
popf
ficomps
pop
lods
sbb
scas
xor
add
cmp
dec
sbb
fwait
lret
das
subl
jp
pop
es
push
out
add
lds
push
movsl
sbb
in
push
arpl
xchg
sbb
scas
xchg
outsb
mov
sub
stos
jmp
inc
js
leave
sbb
jecxz
cmp
daa
inc
movsl
inc
inc
push
jo,pn
cmp
std
mov
cli
rep
pushf
ret
adc
sbb
jge
add
cmp
test
adc
push
push
and
mov
cld
pop
test
cmp
cmp
push
jae
pop
pop
rcrb
fisttpl
test
aas
mov
jno
pop
xchg
popa
in
mov
sub
ret
fcomi
and
lret
dec
int
jmp
call
dec
xor
xchg
in
pop
cmp
jecxz
mov
mov
stc
push
sbb
cld
sbb
inc
mov
add
aad
in
mov
jno
sbb
jae
xchg
push
inc
ret
iret
lret
das
ljmp
ret
mov
bound
or
mov
clc
fmull
pop
cs
mov
xchg
leave
fs
shrl
jecxz
add
mov
fcomip
loopne
js
dec
rcrb
sbb
xchg
stos
arpl
testb
pop
rcrl
enter
xchg
or
xchg
inc
clc
not
mov
cltd
or
xor
or
mov
sub
mov
cli
push
jl
cltd
mulb
inc
mov
repz
popa
push
ret
outsl
cmp
jge
xchg
adc
lds
fldenv
inc
stc
ret
lahf
mov
dec
fwait
dec
lods
inc
dec
cmp
repnz
or
in
lcall
jge
inc
popf
sub
ds
cmp
int3
call
shrb
mov
xchg
lcall
mov
addr16
cmp
int3
testl
or
daa
mov
inc
cmpsb
lds
sbb
mov
inc
repnz
push
shll
inc
jmp
xor
xor
cmp
add
aam
in
jmp
lea
push
push
shl
jl
mov
pop
out
push
rorb
push
int
icebp
xor
loope
nop
jp
inc
cld
leave
out
ret
or
cmp
sahf
cmc
ja
pop
cltd
nop
imul
ss
imul
cmp
inc
icebp
clc
inc
test
or
ljmp
jge
adc
sbb
xchg
pushf
mov
jg
pop
mov
or
in
mov
jmp
mov
repnz
arpl
mov
sub
dec
std
roll
jae
sub
and
pop
dec
jns
adc
push
in
cli
cmp
icebp
icebp
mov
fldt
mov
stc
push
inc
dec
push
arpl
inc
jns
mov
es
cmc
mov
inc
xchg
imul
push
lock
lea
add
jns
pusha
sbb
inc
mov
inc
xor
push
pop
xor
push
cmp
add
dec
stc
cmp
mov
sahf
test
pop
mov
mulb
and
idivb
cmp
add
movsb
or
ljmp
aaa
test
jae
in
push
rcl
cwtl
jnp
mov
sub
xor
idiv
cmp
pushf
push
cmp
mov
out
fbstp
cmpsl
mov
fst
mov
hlt
or
movsb
cmp
ss
add
bnd
iret
xchg
je
mov
xor
pop
stos
movsb
mov
rorb
fdivrl
adc
cld
sbb
jl
loopne
inc
adc
sbb
aas
ret
dec
lcall
push
lock
xor
push
jecxz
cli
and
and
mov
aad
mov
std
mov
mov
jge
cmpsb
xor
outsb
popa
mov
mov
inc
inc
movsb
ljmp
push
cmp
cmp
sub
outsl
sbb
je
xchg
push
loope
adc
stos
jmp
mul
or
push
push
push
xchg
popa
cmp
mov
iret
lods
aas
dec
leave
in
jmp
fistpll
stc
sub
lods
dec
mov
decl
clc
jbe
xchg
xchg
ret
arpl
mov
movsb
push
xchg
mov
add
fs
pop
test
pushf
xor
pop
aam
ja
sub
jg
jecxz
xor
mov
and
repnz
ljmp
add
mov
or
stos
cltd
outsl
sub
pop
xlat
js
mov
lret
jo
shll
mov
xchg
arpl
mov
fisubs
incb
in
jb
and
test
jb
inc
dec
cmpsb
jnp
into
insl
pop
push
repnz
xchg
add
pop
lods
je
icebp
lea
adcb
jmp
mov
dec
ror
xor
lock
rorl
sti
repz
adc
inc
xchg
mov
rcrb
lret
mov
dec
or
frstor
dec
daa
cmp
jnp
imul
inc
xchg
add
je
adcb
add
xor
xchg
fstpt
icebp
hlt
test
jl
cld
lea
test
xor
dec
dec
dec
test
sbb
add
out
xor
pop
dec
imul
ret
jb
xor
jge
adc
cmp
mov
stc
cmp
push
shlb
cmpl
roll
xchg
inc
xchg
aas
mov
and
clc
in
repz
mov
pop
shlb
jg
xorb
ret
imull
mov
and
dec
repnz
es
lock
dec
xchg
dec
pop
test
inc
cld
movb
cmpsl
cld
dec
push
cmp
sahf
in
mov
or
sbb
mov
or
pop
inc
dec
insb
stc
sbb
iret
andl
pop
call
push
cmc
les
cmp
cs
lea
sbb
cltd
add
dec
push
jmp
or
andb
movsl
push
mov
frstor
sbb
filds
pop
je
jl
outsb
jae
adc
mov
xchg
aaa
lret
hlt
test
cmp
and
push
mov
cmp
loope
ret
xor
xor
faddl
cli
adc
shll
ss
push
aam
or
mov
sti
mov
movsb
pushf
sub
shrb
ficoml
cmp
mov
add
adc
loopne
pop
cmp
mov
push
pop
inc
mov
or
mov
out
in
shll
mov
hlt
mov
sub
push
mov
mov
dec
push
sbbl
inc
addr16
jnp
pushf
stos
or
xchg
or
push
fwait
xlat
lock
cs
cmp
sti
push
or
nop
out
enter
sub
xor
outsl
dec
pop
repnz
and
daa
dec
js
mov
ljmp
pusha
dec
jns
outsl
sbb
and
jo
ja
mov
mov
add
outsb
pop
mov
mov
sahf
scas
data16
jecxz
sbb
lock
gs
jnp
mov
and
push
rclb
js
lds
mov
in
mov
cli
mulb
test
mov
pop
je
addb
xchg
jge
push
pop
jp
lret
xor
jmp
fistpl
test
sbb
mov
daa
sti
push
fwait
jecxz
cmp
pop
out
aaa
mov
dec
outsb
cltd
jecxz
add
idivb
decl
jmp
cltd
mov
rol
int3
sbb
shll
pop
pop
testb
stc
push
repz
xchg
sub
and
mov
dec
cwtl
test
mov
sbb
push
push
js
and
shrl
pop
lea
js
xchg
inc
add
popf
pop
xchg
dec
xchg
int3
push
or
push
add
pop
ret
sub
sbb
jp
inc
xor
ljmp
rcrl
mov
mov
xor
rorl
mov
add
cli
cmpsb
mov
cwtl
inc
mov
xchg
or
jb
lcall
fidivrs
adc
insb
jl
icebp
xchg
rolb
fiadds
stos
and
not
imul
inc
shl
lret
test
fcoml
mov
dec
int3
pop
subb
or
cmp
out
out
mov
ffreep
insl
arpl
ret
lcall
push
push
movsb
pop
in
ljmp
xchg
inc
in
ja
outsl
notb
mov
push
add
sbbb
idivb
popa
pop
out
sub
push
push
xchg
cmp
adc
test
js
fstpt
pop
jg
inc
stos
pop
mov
mov
mov
mov
pop
push
mov
inc
stos
cltd
arpl
inc
add
pusha
out
xchg
mov
xor
jle
jbe
pusha
inc
push
mov
out
bnd
pop
adc
movb
fs
and
push
pop
push
arpl
xor
jg
ficoms
sbb
pop
jno
jne
sahf
and
mov
mov
decl
loop
dec
movsb
hlt
int
mov
adc
loop
sub
movd
test
into
cltd
push
jae
testb
dec
rcl
and
inc
cwtl
das
mov
push
fs
jb
sub
fs
iret
mov
aam
cmpsl
arpl
sub
insl
decl
lret
cltd
lods
stos
icebp
cmp
insl
jne
xor
mov
and
pop
pusha
xchg
imul
jae
jne
addr16
pusha
xchg
fdivl
rcrl
aas
push
fistps
mov
sbb
xor
pop
jno
negb
add
and
dec
cs
lret
arpl
or
dec
xchg
sub
lcall
aad
cmp
adc
xlat
xor
faddl
and
rolb
sub
mov
lods
mov
lcall
inc
sub
pop
mov
test
and
inc
adc
push
dec
cmp
xor
arpl
fnstsw
jo
cmpsl
push
xchg
imul
bnd
sub
dec
stos
data16
insb
std
es
cwtl
jae
xor
repnz
imul
jl
or
adc
sub
sbb
bound
push
cmpsb
add
lret
shrb
push
icebp
leave
push
testb
leave
and
xlat
mov
outsl
jne
cmp
mov
ds
and
jecxz
push
ffreep
cmp
adcl
and
push
ret
push
int
mov
int
imul
xchg
mov
loopne
lods
leave
xor
sub
mov
inc
pop
rcr
jmp
push
jno
mov
stos
lock
push
fucomp
push
bt
enter
jecxz
loope
mov
stc
fldenv
loopne
les
test
ret
add
std
in
add
into
adc
das
push
repz
add
jns
mov
loope
pop
inc
mov
fstpt
push
andb
lret
or
push
add
movl
lea
enter
jle
out
add
fwait
das
xor
xchg
jge
inc
ss
cld
xchg
ret
xchg
xlat
cwtl
mov
aad
mov
inc
push
fchs
add
clc
js
xor
xchg
inc
mov
in
xchg
sbb
adc
sbb
push
insb
sbb
cltd
push
bound
fcmovnb
dec
aad
into
arpl
and
mov
xchg
fsts
in
sub
sub
icebp
imul
lds
push
mov
xchg
xchg
sub
es
je
xchg
out
or
xchg
lahf
pop
test
cmpsb
jp
push
fdiv
xchg
jl
jae
xchg
mov
mov
cmp
and
ret
dec
daa
shr
adcb
sub
pusha
sub
jp
cmpl
add
popa
lods
dec
inc
cmp
lods
outsl
xchg
add
cmp
mov
or
lods
xchg
lret
int3
sar
pushf
sarb
dec
add
mov
and
xor
call
aaa
pusha
mov
shlb
cmpsb
sbb
dec
cmp
pop
fistpl
and
inc
popa
xor
loop
inc
or
adc
sub
dec
lcall
or
jmp
sbb
sub
test
adc
je
ljmp
cmp
add
jno
movsl
and
xor
adc
dec
sahf
pop
xchg
mov
cmc
ja
or
imul
ret
fists
enter
mov
testb
pop
xor
pop
xor
mov
insl
mov
cld
jle
shll
push
push
mov
mov
adc
cmp
pushf
scas
nop
cmp
jle
outsl
dec
xchg
hlt
lods
mov
lds
lock
imul
sub
sub
leave
ja
dec
ljmp
scas
loop
dec
jbe
mov
shlb
fcoms
cmp
mov
or
mov
sbbb
ficomps
dec
push
xor
imul
mov
mov
scas
lods
xchg
iret
imul
fnstsw
sbb
lods
fucomi
test
inc
mov
dec
or
jle
dec
das
push
bound
mov
aad
divl
aas
ret
jg
data16
pop
movsb
jae
out
lahf
jmp
mov
pusha
push
pop
repz
les
mov
ret
cmp
add
sub
push
das
aas
ljmp
push
arpl
adc
mov
mov
xchg
lret
cld
outsl
repnz
mov
into
and
mov
ss
cmp
push
mov
dec
and
outsb
fsubr
xchg
pushf
push
leave
push
stos
mov
mov
scas
push
mov
in
push
jmp
call
jae
mov
or
xchg
int
movsl
push
outsb
pushl
test
outsb
hlt
rorl
add
mov
std
jl
hlt
lcall
mov
inc
adc
jecxz
repnz
pop
xor
lret
mov
dec
sub
dec
sti
addb
jg
fdivrl
and
jle
push
jno
dec
pusha
into
popf
ds
sub
stos
sti
or
xor
mov
mov
jmp
jp
pop
xor
xor
push
mov
inc
mov
imul
ret
cmp
aas
mov
xchg
mov
movsb
sub
int3
xchg
add
repz
mov
fisttpl
lret
ljmp
or
pushf
sbb
xor
in
shr
push
repnz
adc
lret
shr
popf
dec
add
into
outsl
rcrb
pop
fiaddl
jmp
lea
mov
into
in
je
dec
mov
adc
cwtl
and
jmp
ret
movsb
fcomp
cmp
stc
loope
bnd
cmp
repz
pop
jg
inc
fidivs
fwait
data16
mov
movsl
sub
xchg
adc
ret
add
addb
adc
cmp
mov
push
imul
insb
cmp
in
fucomip
add
movsl
fwait
ret
sub
mov
inc
sub
in
mov
mov
xchg
in
adc
cmp
cmp
lds
in
loop
pop
std
lods
ss
imul
sub
cltd
fiaddl
loope
xor
jo
shlb
mov
icebp
jnp
jne
outsb
xchg
push
stos
pop
in
call
pop
xor
cmpsl
inc
fsubs
aaa
flds
pop
popa
std
dec
hlt
cld
imul
xor
and
stos
into
in
inc
cwtd
lret
out
mov
mov
aaa
cmp
std
cmpsl
in
ret
sbb
and
shlb
pop
jmp
mov
jmp
and
nop
push
mov
loope
mov
push
in
outsl
aad
mov
xlat
rolb
fsubl
dec
jnp
xchg
mov
lret
jp
lds
pop
mov
int
ljmp
dec
dec
cmp
xor
ds
loopne
mov
nop
ljmp
repz
sub
out
cmc
xor
pop
mov
or
cmp
and
sbb
and
cld
outsb
clc
stos
push
out
das
mov
test
shl
fcmovbe
pushf
dec
fisttps
mov
rcr
mov
mov
icebp
mov
pop
repz
and
lret
dec
frstor
cmp
addr16
and
inc
movsb
or
inc
ss
stos
adc
lret
scas
mov
test
test
ja
mov
fistpl
or
mov
cmp
gs
mov
jno
mov
pop
aaa
ret
je
pop
popf
int3
out
movsl
test
inc
inc
shrb
cmp
ret
in
test
lcall
scas
sub
cmpl
arpl
mov
pop
add
push
cltd
jbe
imul
pop
mov
add
xchg
fistps
mov
lock
mov
ret
mov
lcall
xor
inc
cwtl
imul
mov
decl
push
pushf
stos
pop
shll
mov
inc
daa
mov
jge
jmp
ja
jo
pushl
lds
fisubrs
mov
inc
adc
aad
push
outsb
and
ljmp
adc
sar
mov
in
je
xlat
xchg
mov
mov
mov
xor
pop
ljmp
mov
push
and
fisubrl
outsb
imul
xor
ja
jge
push
mov
xchg
lret
cmp
push
xchg
in
add
arpl
pop
stc
sbb
in
mov
or
jmp
sub
icebp
push
push
xor
adc
dec
inc
push
cmp
gs
pop
ss
popa
js
mov
cwtl
dec
je
mov
inc
mov
insb
xchg
mov
movl
mov
jns
cmp
push
cmp
xor
and
mov
roll
and
jecxz
das
fs
cmp
nop
lahf
in
out
mov
out
xor
sub
out
push
std
aas
push
movsb
or
adc
jno
or
sbb
jcxz
fbstp
sbb
iret
repnz
pop
push
and
sub
scas
ret
cli
push
mov
cmpsb
in
xchg
fcmovnbe
cmp
fcoms
mov
les
pop
scas
push
or
jl
mov
pop
jp
mov
inc
adc
repnz
in
cmp
and
shl
xchg
push
sub
cld
or
insl
sub
fdivs
movsb
insl
jb
out
pop
lret
xor
mov
xchg
adc
fidivrl
iret
call
add
inc
stos
lcall
in
fistpll
cwtl
inc
push
ret
imul
test
leave
inc
xchg
pop
test
lods
fmull
movsl
cs
pop
mov
arpl
mov
or
adc
mov
out
adc
sbb
push
aas
jge
cwtl
nop
rcl
movsb
lds
popa
ljmp
mov
xor
sub
cmpsb
dec
and
les
push
push
sbb
imul
push
imul
daa
cwtl
jg
adc
fnstcw
jecxz
cmp
scas
push
adc
or
cmpsb
adc
sub
xchg
repz
arpl
ss
cmp
push
jmp
hlt
outsb
mov
cmp
aam
xchg
mov
xchg
jge
imul
jecxz
mov
dec
mov
cmc
adc
aaa
push
add
in
dec
dec
es
jo
gs
ret
jmp
insl
cmpps
jbe
pop
ret
mov
stos
mov
sbb
out
mov
and
pop
cltd
test
rclb
inc
mov
lret
dec
push
out
ret
cmp
push
xchg
mov
jae
pusha
fidivl
aas
aad
dec
adc
je
out
in
ja
or
add
dec
gs
xchg
fucomi
lock
stos
xchg
cld
cmpsl
sub
mov
jo
outsl
popf
stos
repnz
imul
xchg
push
js
pusha
lods
daa
mov
pop
repnz
push
fwait
ljmp
lods
cld
push
pop
add
push
and
push
mov
aam
in
test
movsb
fmull
hlt
loope
aas
and
stc
je
adc
pop
mov
xor
xchg
imul
jmp
inc
test
mov
mov
fidivl
mov
aad
mov
imul
clc
or
push
lock
and
ret
xor
stos
jae
imul
test
cs
jae
punpckldq
ffree
fcmovne
add
pop
dec
mov
arpl
ffree
adc
lret
xchg
push
xchg
popf
mov
test
test
fistps
pop
subl
lea
fs
dec
adc
xchg
sbb
and
lods
sarb
dec
fsts
or
mov
shrb
das
mov
and
pop
inc
pop
sub
aaa
xor
ret
addb
inc
mov
lock
lea
cmpsb
xchg
pop
or
or
and
sbbl
mov
push
pop
dec
cmp
pusha
in
adc
insl
mov
pop
jae
out
push
sbb
lods
cmpsb
dec
aas
loope
outsb
jmp
das
jle
je
xchg
inc
aam
test
adc
add
testb
cmp
sbb
dec
adc
inc
xchg
les
jecxz
fldcw
add
mov
push
jns
jae
sarl
jl
xchg
cmpsl
push
ljmp
mov
and
inc
sbb
in
mov
jne
mov
sbb
je
jle
inc
push
fstl
cmpl
cmpsb
sub
loope
and
clc
xchg
int
ja
mov
jp
out
xor
aam
add
mov
cs
pop
mov
sar
les
repnz
cmp
loopne
mov
push
sti
int3
push
mov
scas
jecxz
mov
pop
sub
cmp
sub
add
idivb
xchg
push
sub
xor
cmp
out
stos
scas
sub
adc
fs
clc
pop
cld
push
call
inc
add
je
hlt
mov
push
rcll
jg
mov
jbe
repz
or
add
mull
das
mov
mov
lret
insb
pop
mov
jmp
cwtl
lods
add
sti
sahf
stos
cmp
push
rolb
lods
shll
in
pop
jnp
add
push
pop
es
xor
fbstp
loop
sbb
pop
shrl
lea
mov
ss
dec
sbb
jmp
mov
cmc
lea
in
ss
sahf
push
lret
cmpsb
sbb
push
jp
sub
ss
or
les
mov
pop
pop
push
xchg
xchg
dec
xchg
imul
lahf
stos
fistl
ret
cs
lds
cld
pushl
jg
jl
mov
das
pop
neg
and
hlt
xchg
inc
push
xor
cmp
mov
outsl
push
insl
mov
imul
and
loope
mov
addr16
test
out
dec
mov
nop
sbb
pop
sbb
in
mov
cmpsl
add
mov
clc
mov
mov
sti
fcoms
cmp
adc
cld
fstps
xchg
xor
xchg
out
dec
sbb
add
lods
cmpsl
mov
int3
add
inc
pop
ret
adc
pop
int3
xchg
cmp
cmpsl
into
mov
mov
cmp
loopne
add
in
cld
add
sub
xchg
int
sub
sbb
mov
fists
sbb
sti
aad
cmp
adc
shr
sbb
cltd
leave
jb
popa
out
je
sub
jp
fucomi
cmc
jne
fisubrs
out
push
pusha
divl
mov
xchg
jb
lock
cmpb
or
ss
pop
xchg
loopne
scas
push
sub
sbb
sarl
sbb
das
cmp
add
mov
popa
pmullw
cmp
sbbb
jmp
lcall
insb
and
lret
adc
xlat
popf
lods
mov
and
push
imul
mov
aad
dec
in
cmp
dec
not
dec
sti
sub
cmpsl
leave
jp
addr16
ja
cmpsl
fildl
pop
lods
sbbl
adc
fmull
jo
and
stos
xchg
lods
jmp
dec
aad
fimull
and
jb
push
sbb
push
sbb
pop
mov
push
push
sub
popa
mov
adc
fs
scas
dec
jge
inc
push
inc
mov
pusha
sub
clc
sub
jo
out
inc
cmpsb
inc
fidivrs
mov
mov
mov
jmp
add
add
imul
in
or
cmp
pop
data16
into
mov
test
xchg
rcr
aam
les
in
fdivrl
repz
aas
movb
call
fldenv
jo
cli
jne
cltd
icebp
mov
add
iret
xchg
pop
mov
fbstp
dec
ss
mov
jo
out
mov
inc
aam
push
enter
pop
les
nop
jp
cmp
sub
les
iret
insb
cmp
and
loopne
js
cld
fadd
sahf
rcr
jbe
dec
push
jl
nop
and
repnz
xchg
pop
sbb
scas
or
imul
sbb
dec
dec
leave
jb
push
arpl
inc
push
and
mov
mov
jb
scas
ljmp
add
and
mov
test
add
pop
cmp
js
loop
pop
inc
outsl
in
inc
mov
subl
movsb
xor
lret
jbe
push
subl
js
inc
mov
rcrb
cmp
stos
sub
fimuls
scas
das
ss
std
mov
add
jp
jp
mov
jle
repz
lods
mov
push
shl
sbb
add
add
pop
decb
xchg
stos
mov
int
insl
fidivs
xchg
sahf
shlb
out
loope
movb
mov
or
add
test
ret
add
and
dec
adc
test
mov
jno
inc
xchg
ja
test
inc
rcrb
lret
pusha
pusha
addb
jo
scas
mov
test
lods
ret
or
or
clc
sbb
cmp
xchg
je
mov
add
and
outsb
daa
jae
jae
popa
jb
and
xor
add
add
dec
and
inc
add
pop
add
test
punpcklwd
add
dec
add
mov
add
mov
