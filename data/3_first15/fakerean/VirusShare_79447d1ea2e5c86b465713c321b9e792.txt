jo
enter
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
cmpsb
testl
inc
insb
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
hlt
fiaddl
add
insb
and
sub
mov
xor
mov
push
enter
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
in
inc
add
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
repz
add
add
inc
mov
push
xor
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
inc
add
cmp
shrl
cmp
das
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
imul
add
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
flds
js
push
lea
mov
test
je
cmp
out
inc
add
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
clc
loope
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
leave
inc
add
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
jb
inc
add
add
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
ja
inc
add
call
mov
lea
call
add
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
sbb
or
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
jmp
mov
push
push
push
call
mov
jne
pop
je
icebp
test
loope
add
lcall
repnz
incb
mov
imul
add
in
add
push
push
lea
push
push
push
call
popl
pop
jnp
add
hlt
push
add
clc
clc
jno
add
sahf
pop
add
add
push
ljmp
push
scas
add
pop
std
add
mov
fildl
add
jns
add
sub
pop
popl
push
push
push
lea
push
call
add
out
mov
push
add
in
roll
add
in
pop
pop
add
les
add
add
add
add
add
popf
push
cld
add
fs
jae
add
add
movl
fldl
cmpsb
jmp
cmc
jns
loop
fstpt
insb
sub
pop
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
xorl
fs
rcrb
out
rcr
add
add
cld
pop
shrb
mov
jnp
add
scas
add
gs
lcall
jp
add
jb
cwtl
add
mov
add
add
mov
push
add
mov
lcall
push
push
call
fstl
mov
roll
add
add
add
add
out
pop
iret
add
add
add
jbe
push
mov
add
mov
add
pop
add
movsb
cwtl
pop
add
mov
add
loope
add
call
jae
add
add
arpl
mov
popf
pushf
pop
sub
pop
push
push
push
push
push
lea
push
lea
push
push
call
push
into
add
stos
add
add
add
call
add
fildl
add
test
aam
in
add
add
add
cwtl
rolb
add
clc
push
jl
jo
leave
add
jne
arpl
mov
jae
sub
pop
push
call
push
push
lea
push
push
push
push
push
push
call
add
cwtl
add
add
add
pop
cli
push
ret
loopne
in
add
lds
fists
sti
mov
push
sub
pop
call
push
push
push
push
lea
push
lea
push
call
add
std
cld
add
test
icebp
jns
jnp
std
add
lea
add
testb
add
add
add
add
mov
addl
mov
add
add
add
mov
imul
add
sub
pop
push
push
push
call
test
ljmp
add
lcall
add
add
iret
xchg
addr16
add
mov
add
in
add
lcall
mov
mov
add
push
push
push
push
lea
push
lea
push
push
call
addb
add
add
testb
add
pop
mov
add
imul
mul
cltd
add
mov
add
add
stos
hlt
add
add
push
add
les
movsb
lods
fmul
mov
ja
sub
pop
ret
push
lea
push
push
push
push
push
push
push
push
lea
push
call
ljmp
rolb
nop
rol
gs
add
add
lret
xchg
clc
xlat
add
stos
sub
pop
mov
push
push
push
call
mov
xchg
xlat
loope
add
add
mov
add
add
add
mov
add
add
add
jbe
add
test
jnp
in
hlt
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
xchg
lods
clc
add
add
mov
arpl
add
jge
movb
add
pop
add
add
ja
mov
leave
mov
call
cmpsl
aam
add
cld
scas
add
add
push
fwait
add
or
pop
add
loope
mov
ret
loope
add
pop
in
push
push
push
call
add
into
add
mov
add
add
add
mov
nop
aam
out
pop
lds
add
pop
call
add
lret
add
lock
add
mov
mov
lds
add
xchg
add
lret
jno
push
add
xchg
ret
add
add
add
push
push
push
call
add
jne
add
add
movsb
in
addr16
pop
js
add
loope
add
add
jbe
add
add
repnz
rcrb
in
rcll
xlat
add
lods
push
push
bnd
add
hlt
lcall
pop
add
repz
push
push
push
not
not
shl
push
and
add
shl
lea
ror
sub
sub
sub
pop
inc
add
dec
pop
push
push
lea
push
lea
push
push
call
mov
add
add
add
lock
push
add
add
add
aad
lcall
push
add
jne
call
push
push
lea
push
push
push
push
push
push
lea
push
call
subb
push
mov
jbe
push
add
jae
add
add
fadds
cld
jno
jmp
add
lahf
mov
iret
push
add
add
leave
pop
flds
add
push
add
add
add
roll
testl
add
add
add
lcall
inc
lock
push
push
push
push
lea
push
push
push
call
push
add
add
lahf
aad
fidivl
add
mov
add
test
in
shl
add
pusha
fiaddl
jp
add
nop
jns
cmpsb
movsl
cmpb
fcomps
jl
push
ja
jns
mov
cli
add
in
in
lcall
inc
call
call
andl
orps
sub
add
movsb
fldcw
add
jae
js
pop
in
add
add
lahf
push
mov
lcall
in
add
stc
add
sub
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
call
pop
add
xchg
add
lcall
add
addl
test
add
test
add
add
in
lret
mov
scas
add
add
add
add
rorl
add
in
out
outsl
cwtl
add
lcall
jne
push
push
push
push
lea
push
call
addl
add
nop
outsl
andl
add
lret
mov
mov
mov
jne
xchg
add
lcall
mov
outsl
xchg
int3
add
add
pop
jae
js
mov
cmc
lret
mov
mov
mul
loop
pop
pusha
add
add
add
mov
arpl
fcomi
lret
lahf
fisubrs
ja
in
in
lcall
popf
sub
add
jne
push
push
push
push
push
push
lea
push
push
push
push
call
cltd
test
pop
add
addb
add
push
add
add
xchg
xchg
add
jmp
mov
addl
xchg
add
in
fcomps
jne
push
push
lea
push
push
push
push
push
push
call
xchg
add
imul
test
out
mov
add
insb
add
mov
sarb
add
add
lock
add
pushf
add
add
add
add
loopne
lcall
cli
cmp
add
sbb
adc
leave
add
lea
sub
inc
pop
lea
sub
pop
push
push
push
push
push
push
call
pusha
add
mov
add
mov
xchg
int
add
add
push
add
add
int3
mov
cld
add
lcall
jbe
push
test
subb
add
fnstcw
popf
rcrl
call
pushl
push
push
push
push
push
push
call
xchg
scas
fiadds
add
add
jae
popl
testl
add
in
out
add
roll
push
add
mov
shr
out
out
mov
pop
add
imul
pop
add
rorl
mov
cwtl
add
add
add
lcall
push
push
push
push
lea
push
push
push
call
mov
add
add
mov
rcrl
fiadds
add
mov
addb
push
mov
mov
sub
pop
push
push
push
shr
push
push
pop
add
dec
dec
inc
sub
rol
inc
inc
shl
pop
rol
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
call
stos
add
add
mov
test
add
mov
add
in
add
jmp
cmpsl
adc
jmp
mov
xor
add
add
fildl
mov
in
fdivr
lcall
push
lea
push
push
call
jge
in
add
add
push
add
push
mov
add
push
iret
add
add
add
add
add
add
movsl
jle
add
add
add
std
jo
les
out
fsubrl
fcmovbe
aad
add
test
sar
leave
ljmp
hlt
pop
push
call
push
lea
push
lea
push
push
lea
push
call
mov
jmp
mov
pushf
add
shl
add
xlat
jnp
fistl
mov
bound
mov
add
cmc
in
add
mov
add
lock
jmp
lea
pop
mov
cli
add
add
add
clc
push
push
push
lea
push
lea
push
call
lret
mov
lahf
hlt
jecxz
clc
add
aad
fwait
add
int
jno
add
in
add
push
push
add
add
iret
cmpsb
lods
mov
fiadds
add
adc
in
add
cmpsb
stos
mov
aad
add
aam
add
add
mov
pop
push
mov
push
push
push
push
push
lea
push
push
push
push
push
call
mov
mov
add
mov
add
add
mov
int
arpl
push
mov
lcall
sahf
cwtl
add
fwait
cld
add
add
jmp
add
hlt
jno
in
fcomps
pop
in
push
push
push
push
push
call
xlat
mov
mov
mov
add
add
add
jmp
mov
add
aam
pop
sti
add
mov
add
ror
xchg
data16
aad
addb
jno
xchg
xchg
add
out
iret
fildl
mov
in
pop
add
add
push
lea
push
lea
push
push
push
lea
push
lea
push
call
out
add
pushf
arpl
xchg
jbe
jns
xchg
test
add
cmp
pop
iret
add
mov
ret
aam
imul
test
stos
xchg
add
sahf
int
add
add
fildl
add
rcr
mov
in
mov
push
push
push
lea
push
lea
push
call
cmpsl
lret
add
repnz
add
lahf
mov
pop
xchg
add
int3
jnp
add
pop
add
jmp
add
add
add
add
movsl
hlt
add
lcall
enter
add
mov
add
add
add
int3
jge
popf
jle
aad
cli
lds
sub
pop
xor
push
push
push
push
lea
push
lea
push
call
icebp
lea
out
loop
add
negl
add
add
add
test
out
stos
pop
imul
add
add
add
call
add
add
add
mov
push
popa
popf
push
add
add
loop
add
ror
mov
sub
pop
add
push
push
call
jmp
add
sbbl
push
add
jae
add
out
ja
mov
outsl
add
rcrb
add
fistpll
add
add
add
jo
add
push
push
mov
add
add
add
les
push
sub
pop
add
push
lea
push
push
push
push
push
call
add
in
stos
pop
rolb
add
test
add
xchg
lret
mov
pop
int
int3
cwtl
mov
pop
add
sub
pop
push
push
push
push
push
push
push
push
call
mov
mov
arpl
loope
add
add
call
add
pushf
jl
je
add
call
mov
fstl
mov
fwait
add
cmc
lock
in
mov
mov
ffreep
add
test
out
jnp
in
in
lcall
inc
or
pop
jae
push
lea
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
int
sbbl
in
jbe
fnsetpm(287
add
add
fildl
add
add
add
add
repnz
clc
add
scas
mov
fldl
add
add
enter
mov
stc
push
sub
pop
xor
push
lea
push
push
push
push
push
call
lret
add
pop
pop
push
add
add
rcl
test
lods
mov
add
add
nop
jp
xlat
add
add
xchg
mov
ret
jle
add
stos
add
stos
add
lret
mov
jl
cltd
loope
add
mov
add
xchg
rcl
sub
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
fdivrl
int
add
mov
add
andb
add
mov
out
jno
out
stc
add
scas
je
icebp
add
add
add
clc
loope
fidivl
xchg
rolb
add
add
lret
cmpsb
movsb
mov
fs
mov
lcall
lock
push
push
push
push
push
push
lea
push
push
lea
push
push
call
in
add
add
movsb
add
add
mov
mov
out
mov
lea
add
cmpb
lods
fadds
lea
add
sti
cmc
cli
add
pop
add
add
je
add
add
bound
add
movsl
add
mov
add
add
imul
lahf
add
add
add
enter
fdivr
lcall
dec
add
icebp
test
push
push
push
push
lea
push
call
pop
sahf
jmp
data16
int
mov
mov
cwtl
push
xchg
add
add
shl
add
add
add
add
fsubrs
push
add
add
fldt
cmc
lret
jge
bound
push
into
pop
add
add
stc
add
lcall
push
push
push
push
push
push
lea
push
push
push
call
popa
pop
aad
add
xchg
fwait
add
add
gs
add
std
test
mov
mov
jns
push
out
add
push
add
rolb
lret
cmpsb
jno
add
add
add
jnp
cmc
mov
add
add
add
add
insb
incb
add
add
add
addb
mov
addl
sbb
add
xchg
popa
movl
add
fcompl
inc
or
pop
jae
push
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
int
push
jl
xchg
lret
mov
aam
jmp
xchg
flds
loope
add
add
movsl
imul
add
push
popa
data16
add
stc
cmc
leave
mov
mov
xorl
pushf
add
lcall
add
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
add
add
add
faddl
jae
jno
add
roll
push
faddl
mov
xchg
shrl
clc
add
add
js
lods
out
testl
mov
add
rcrb
add
sahf
popf
push
add
test
add
in
add
push
lea
push
lea
push
push
push
call
mov
imul
imul
movsb
in
mov
imul
jo
mov
add
fistpll
fstp
fmulp
imul
jb
add
add
fistpl
lcall
enter
pop
push
push
push
call
add
add
add
add
mov
add
fwait
add
add
mov
cltd
test
fcompl
arpl
iret
stos
pushf
movsl
add
add
repnz
xchg
push
add
shl
iret
aad
jecxz
jp
andb
lcall
push
push
push
push
push
push
push
call
add
cwtl
test
add
mov
add
add
mov
mov
lret
add
incb
enter
cmpb
add
add
add
mov
push
add
mov
loopne
sub
pop
rep
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
imul
clc
incb
sti
insb
pop
leave
mov
add
in
add
push
add
jle
add
add
push
add
fnstcw
add
pop
add
add
roll
add
xchg
add
add
mov
add
popa
in
mov
ljmp
test
out
sub
pop
mov
add
push
push
lea
push
lea
push
lea
push
push
push
call
rol
add
lock
add
leave
rcl
sarb
xchg
mov
add
roll
add
divb
fmull
jecxz
mov
cmpsl
mov
add
add
add
ret
add
add
add
push
push
push
push
push
push
push
push
push
call
mov
int3
add
addl
add
imul
lret
mov
arpl
xchg
movsb
add
add
add
jb
cld
stc
js
pop
xchg
add
lock
mov
add
add
add
cmc
fildl
out
add
xchg
add
jecxz
lahf
pop
ljmp
add
lcall
inc
and
push
push
push
push
push
push
push
push
push
call
mov
add
add
add
loopne
add
add
add
pop
xlat
lock
clc
flds
pusha
push
addr16
add
add
cltd
sub
pop
mov
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
outsl
add
lret
add
xchg
xlat
popf
add
mov
cwtl
push
add
imul
pop
add
push
add
in
lcall
adc
push
push
push
push
push
call
add
xchg
test
add
fildl
add
jp
add
add
xchg
add
lea
add
add
lcall
les
push
push
push
push
push
push
push
call
pop
fs
add
add
in
add
push
out
add
add
mov
clc
add
add
scas
xlat
add
fldenv
add
add
xchg
add
in
loopne
lcall
dec
sub
push
push
push
push
push
push
lea
push
lea
push
push
call
popa
add
jp
add
add
rcrl
add
mov
rclb
add
add
fiaddl
jmp
add
addl
sti
push
add
push
stc
cmpsb
mov
loope
add
xchg
mov
xchg
jae
sub
pop
add
push
lea
push
lea
push
push
push
lea
push
push
push
call
lret
jne
nop
sarl
cmpsb
lds
ja
add
add
add
add
fwait
add
lods
add
add
std
add
repnz
out
add
rorl
stos
push
sub
push
push
pop
add
inc
sub
add
sub
inc
lea
pop
not
lea
add
shl
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
xchg
insb
repnz
add
push
jo
xchg
add
add
add
jmp
loope
push
int3
add
clc
lret
add
add
jmp
jecxz
add
in
nop
imul
add
add
add
mov
call
pop
pop
add
mov
gs
add
lcall
jne
call
push
push
push
push
call
out
add
in
add
pop
cmc
xorl
cmc
jo
push
add
jge
add
xchg
call
sub
pop
push
push
push
add
push
sub
add
shr
add
sub
shr
pop
add
inc
pop
push
push
push
push
push
push
push
push
call
mov
add
divl
shl
mov
popf
fisubrl
out
movsb
js
jbe
call
ja
cwtl
cld
je
add
icebp
add
add
add
add
stos
mov
ret
fistpl
mov
xchg
loope
in
add
add
aam
add
add
int3
push
lds
add
call
push
push
push
call
push
add
addr16
jp
out
lcall
into
add
push
mov
cli
lcall
mov
cld
mov
add
outsl
add
add
testl
add
jl
xchg
mov
add
add
push
cmc
pop
add
loopne
mov
jmp
in
clc
pop
push
call
push
push
push
push
push
lea
push
push
push
lea
push
call
jno
leave
push
stos
jae
scas
jns
add
cwtl
in
faddl
fidivrs
movsl
mov
loopne
add
cmpsb
mov
add
add
lock
movsl
add
push
add
fs
add
fs
add
stos
pop
mov
jne
sub
pop
mov
push
push
push
push
call
pop
add
add
repnz
pushf
mov
mov
ret
aam
mov
int
fsubrp
jae
adcl
add
add
add
clc
add
add
xchg
cmpsl
jne
bound
jb
mov
pop
add
jns
mov
mov
add
pop
in
mov
cmp
sub
pop
push
push
push
call
cli
repnz
lret
pushf
data16
aam
movsl
out
mov
arpl
add
outsl
rorb
lods
rolb
add
add
push
add
add
add
jle
mov
movl
mov
mov
add
pop
add
push
lock
aad
out
sub
pop
mov
push
rol
sub
pop
add
add
push
add
dec
pop
add
push
dec
pop
mov
xor
push
sub
pop
add
push
push
push
push
push
push
lea
push
call
add
add
add
push
sti
mov
add
add
add
arpl
mov
stc
pop
add
xchg
jns
add
test
add
mov
adcb
shll
add
add
add
xchg
add
xchg
mov
push
vaddps
add
mulb
mov
add
sub
pop
push
push
dec
pop
mov
push
push
push
lea
push
lea
push
push
push
push
call
addb
xchg
add
pop
push
add
add
fdiv
enter
add
xchg
icebp
add
leave
add
add
loope
add
add
jb
cltd
jge
lods
sub
pop
xor
push
push
lea
push
push
call
add
push
add
aam
add
add
std
cld
add
add
test
mov
add
add
fwait
leave
add
icebp
sub
pop
add
push
sub
sub
pop
add
pop
push
push
push
push
push
call
lods
jne
jge
add
add
cld
in
push
add
imul
addr16
pop
add
jmp
mov
jmp
mov
loopne
add
add
in
add
shl
add
in
add
pop
add
add
bound
add
add
add
jbe
add
add
add
add
les
in
lcall
dec
and
push
push
dec
pop
rep
push
push
push
lea
push
push
push
push
push
push
push
call
add
lods
add
out
mov
addr16
add
in
add
mov
xchg
add
movb
add
fcomi
out
xchg
add
add
lods
bound
sub
pop
mov
xor
push
push
lea
push
push
push
push
push
push
push
call
movsl
add
lea
jno
std
add
add
repnz
fiaddl
jo
fiaddl
add
test
xchg
mov
pusha
pop
outsl
mov
fmull
add
add
test
add
hlt
add
call
rolb
sub
pop
or
je
push
push
push
push
push
push
push
call
cltd
xchg
scas
in
movsb
xchg
shrb
add
stos
add
add
lods
lret
cltd
add
addb
mov
add
add
mov
jo
add
push
in
in
lcall
xor
push
push
push
lea
push
lea
push
call
add
add
test
out
xchg
add
faddl
out
outsl
add
mov
out
xchg
add
mov
add
testb
add
push
add
ja
add
xchg
add
add
cmc
xchg
add
lods
lahf
xchg
push
lods
mov
lcall
push
sbb
push
push
lea
push
call
mov
out
rolb
sarb
add
js
test
mov
xchg
add
in
add
out
aad
ret
add
add
jnp
add
mov
cmc
push
add
jl
add
mov
loopne
jmp
lods
add
int3
leave
add
sub
pop
add
push
push
call
popf
cmc
add
mov
sahf
add
mov
lret
add
mov
sti
lea
lods
add
add
jae
scas
jae
push
nop
add
cwtl
add
add
into
bound
sub
pop
add
push
push
rol
pop
mov
xor
push
push
lea
push
lea
push
lea
push
push
push
call
add
jne
mov
add
mov
push
push
out
popl
mov
add
std
push
add
gs
push
pop
jne
roll
imul
repnz
fiaddl
pusha
push
data16
add
mov
mov
add
fwait
jne
icebp
add
lcall
lock
push
push
push
push
push
push
push
call
mov
in
repnz
add
sti
push
fadds
fucomip
add
cwtl
fisubrs
stos
mov
out
add
in
jae
scas
add
std
data16
mov
add
pop
pushf
pop
pop
cld
add
add
push
add
add
add
addb
add
not
pop
rep
mov
push
push
lea
push
lea
push
push
call
test
mov
add
fadds
gs
mov
pop
add
test
push
add
xchg
push
add
add
stc
add
xor
push
push
push
push
call
lea
jp
push
xchg
add
add
add
jecxz
add
add
add
mov
clc
out
jmp
add
add
push
aad
test
into
add
cwtl
nop
add
add
xchg
aam
je
add
mov
lock
add
add
ja
add
lcall
les
not
ror
ror
pop
or
je
push
not
pop
mov
push
lea
push
call
addl
push
rolb
add
add
xchg
add
mov
imul
add
add
add
add
lcall
in
clc
lcall
sub
movb
add
push
push
push
call
jb
push
push
mov
add
int
mov
mov
into
add
add
fiaddl
add
add
cld
add
add
test
in
add
in
hlt
pop
rep
push
push
push
call
xorb
stc
pop
lock
add
rcr
clc
add
add
outsl
addb
lcall
notl
fcmovb
addr16
add
roll
push
push
inc
push
sub
add
add
xor
dec
sub
xor
xor
pop
shr
xor
pop
push
lea
xor
pop
pop
mov
push
ror
pop
mov
mov
push
push
push
lea
push
push
push
call
out
xlat
pop
add
mov
xchg
add
xchg
fisubs
add
rcrb
int
xchg
add
cltd
xchg
imul
jl
nop
gs
jnp
stos
lahf
call
ljmp
add
add
test
add
add
jecxz
in
call
jmp
push
push
lea
push
push
push
push
push
push
push
call
aad
xchg
push
orl
stos
add
add
mov
add
sarb
add
insb
insb
add
mov
add
add
add
enter
fdivr
lcall
mov
push
lea
push
lea
push
push
push
push
call
in
in
mov
add
popa
test
cmpsl
lret
xchg
jbe
flds
stos
incb
filds
mov
add
add
add
mov
sti
ret
add
ret
xchg
xchg
imul
xchg
add
jl
aam
push
mov
fadds
lcall
cld
push
push
lea
push
push
push
lea
push
lea
push
call
jo
movsb
mov
popf
push
add
out
lods
jo
pop
cltd
pop
add
add
add
scas
add
jl
mov
add
imul
shrl
add
lcall
push
push
call
movl
stc
add
mov
push
mov
imul
popf
mov
outsl
mov
add
jo
push
addb
add
add
cltd
pop
cmpsl
add
add
lods
or
add
lahf
add
mov
xor
lods
mov
pop
jle
lods
add
xchg
jecxz
lahf
stc
mov
jecxz
in
clc
pop
push
push
push
lea
push
push
push
call
mov
hlt
ret
mov
add
jae
mov
mov
pop
add
add
xchg
push
push
add
repnz
nop
add
add
outsl
add
iret
xchg
add
push
add
lock
lcall
mov
push
lea
sub
dec
shl
pop
pop
pop
push
xor
ror
pop
pop
pop
push
add
dec
pop
leave
ret
push
shl
pop
push
push
add
sub
pop
mov
push
push
push
lea
push
push
call
add
imul
add
add
movl
add
mov
add
fsubl
add
mov
pusha
loop
fdiv
add
add
jo
add
add
add
add
lcall
clc
push
push
lea
push
push
push
push
call
mov
cli
add
in
add
add
add
mov
add
ficoml
mov
add
jb
push
popa
xchg
mov
add
add
pop
push
std
jmp
cli
add
add
xchg
push
xchg
mov
addr16
add
in
call
js
mov
loope
push
call
lahf
jns
cmpsb
add
sahf
mov
gs
add
addl
add
push
add
fadds
in
add
add
popl
lcall
push
push
lea
push
lea
push
push
call
add
test
mov
mov
add
ficoml
mov
ja
hlt
mov
add
xchg
add
flds
nop
std
add
imul
push
lea
push
push
push
call
add
push
add
call
sti
add
lret
add
shrb
add
fistl
pop
jo
insb
add
add
add
les
mov
sbb
add
sti
popa
fwait
ljmp
outsl
cmc
in
add
mov
add
pop
stc
bound
lret
lods
sub
pop
push
movl
push
push
lea
push
push
push
lea
push
call
stc
mov
add
add
cli
mov
add
add
xchg
pop
add
mov
add
pop
mov
rcrb
pop
add
mov
mov
fstps
addb
push
in
imul
pop
in
fadds
xchg
test
mov
js
mov
add
add
lcall
inc
clc
call
sub
cmp
xchg
push
push
push
push
push
push
call
add
add
add
add
mov
add
arpl
bound
movsb
mov
cltd
add
mov
faddl
xor
add
aam
add
cltd
ljmp
add
loop
out
addr16
cmpsl
add
push
add
std
add
pushf
imul
in
fdivr
lcall
rorb
push
add
add
push
ror
push
push
push
push
lea
push
call
jge
data16
xchg
add
add
push
add
push
fs
add
add
mov
fs
scas
lock
cli
jp
add
aad
imul
addb
jo
call
mov
push
not
sub
pop
pop
push
add
pop
pop
pop
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
cld
leave
les
add
out
add
mov
add
into
add
shr
add
add
add
jmp
in
mov
in
mov
fdivr
lcall
push
add
ror
xor
pop
leave
push
push
call
incb
add
add
popa
add
enter
add
call
add
test
roll
jp
iret
bound
nop
fwait
in
add
add
clc
addl
in
loope
sub
pop
ret
push
push
lea
push
push
lea
push
push
push
push
push
push
push
call
roll
sahf
add
mov
add
add
scas
add
mov
jno
arpl
add
add
mov
add
xchg
test
in
jo
add
js
jle
add
add
xchg
add
fwait
add
lret
add
faddp
push
in
fcomps
in
push
push
push
lea
push
push
call
loope
add
add
add
add
leave
add
ficomps
add
add
cmpsl
add
jmp
fsubl
add
mov
data16
rolb
add
add
xchg
enter
xchg
add
pop
ljmp
jle
add
mov
mov
sub
pop
add
push
push
dec
inc
pop
push
push
lea
push
push
push
push
call
add
fiaddl
add
icebp
add
push
roll
repnz
push
add
jo
add
jnp
leave
out
jl
add
add
loop
add
pop
popa
movl
push
add
popa
call
jb
int
mov
test
xchg
jne
in
push
in
in
pop
push
push
push
push
push
call
add
stos
lds
mov
add
add
add
jp
call
add
leave
add
les
add
add
add
data16
mov
lcall
push
push
push
push
push
call
jbe
iret
stos
add
mov
loope
mov
fcmovb
add
add
ror
add
add
xorb
xorb
test
in
in
pop
testl
addl
push
push
push
push
push
lea
push
call
add
mov
add
pop
add
add
cwtl
int3
mov
push
cltd
std
repnz
je
addb
add
xchg
add
add
nop
add
add
mov
add
add
add
jl
iret
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
mov
add
xchg
add
jns
mov
arpl
roll
bnd
into
lcall
fdivr
lcall
and
decl
adc
sbb
lea
push
call
mov
shll
incb
push
je
add
test
add
mov
add
out
mov
pop
add
mov
imulb
scas
out
xchg
add
add
faddl
add
push
lret
add
ja
add
js
fmul
add
add
jb
add
add
add
jne
push
push
rol
inc
pop
push
push
shr
xor
add
sub
pop
call
push
lea
push
push
push
lea
push
lea
push
call
scas
cmc
lds
add
add
movsb
arpl
nop
fildl
jl
add
aam
mov
add
cmc
add
add
fildll
add
outsl
mov
xchg
leave
xchg
roll
in
mov
add
mov
pushf
in
xchg
add
jnp
mov
add
add
lcall
jge
add
test
push
push
push
push
call
fsubl
js
add
cmc
mov
cmpsb
add
mov
xchg
sub
mov
mov
fists
jecxz
mov
loop
in
in
pop
pop
push
push
push
push
call
rolb
mov
add
int3
mov
add
push
repnz
imul
add
fnstcw
imul
add
add
add
in
add
test
popf
scas
pop
faddl
add
movsl
sub
pop
pop
push
lea
push
push
lea
push
push
push
call
add
stos
stos
mov
add
aad
mov
xchg
add
add
imul
mov
mov
popa
jmp
cmc
push
sub
pop
pop
pop
push
sub
pop
leave
ret
push
pop
push
push
rol
dec
pop
mov
push
inc
rol
dec
pop
add
push
sub
xor
sub
xor
pop
push
push
push
lea
shl
pop
push
push
push
push
push
push
push
call
mov
add
add
into
roll
xlat
in
add
lock
scas
rolb
repnz
mov
in
add
add
iret
cmpsl
add
xchg
jns
stos
popl
pop
mov
add
lahf
addb
ret
in
roll
jb
add
add
lcall
sub
pop
push
movl
push
shr
xor
pop
push
call
push
lea
push
call
jl
icebp
add
mov
sti
cmpsl
add
pop
add
add
add
ficomps
rolb
add
mov
mov
xchg
add
add
fildl
lahf
loop
mov
push
add
data16
xchg
rolb
outsl
js
mov
push
mov
mov
mov
jb
imul
in
clc
pop
push
call
push
add
pop
subl
push
lea
pop
cmpl
jne
push
rol
pop
pop
push
push
call
into
leave
add
mov
mov
pop
loop
lods
mov
andb
fldl
xchg
xchg
std
in
jmp
add
add
add
out
push
add
insb
stos
pop
sub
pop
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
aam
xchg
clc
push
add
lcall
jae
loop
clc
je
add
icebp
leave
xchg
push
add
add
mov
mov
mov
ficompl
jo
add
stc
add
xchg
add
add
into
mov
in
fdivr
lcall
push
rol
xor
pop
pop
push
shl
shl
pop
leave
ret
push
pop
push
push
sub
pop
mov
add
push
shl
pop
push
push
lea
push
lea
push
call
add
sub
jb
xor
add
add
add
add
fsts
pop
stos
icebp
mov
fcompl
insb
add
outsl
jmp
insb
fistpll
rolb
je
add
testl
add
jge
mov
push
add
add
sub
pop
push
push
lea
pop
push
push
dec
add
shr
pop
push
mov
push
sub
pop
lea
push
rol
pop
sub
mov
push
shl
inc
pop
shr
add
push
lea
push
lea
push
lea
push
call
fstpl
mov
add
jecxz
xchg
add
add
xorb
add
lds
add
clc
lret
add
clc
roll
add
push
add
add
bound
fiadds
add
add
test
jno
filds
cwtl
mov
leave
xchg
cltd
add
add
sub
pop
mov
mov
push
dec
inc
inc
pop
add
add
push
sub
pop
mov
mov
push
not
pop
cmp
jne
push
push
call
pop
add
incb
jnp
add
xchg
add
add
lcall
add
add
add
add
add
hlt
xchg
mov
call
add
mov
insb
fcompl
add
test
add
sub
pop
cmp
jne
push
push
push
push
push
push
push
push
call
add
add
mov
lahf
roll
divb
cwtl
add
stc
cmc
testb
add
push
add
jo
add
jl
add
mov
jbe
add
jno
add
add
push
fistl
mov
jae
mov
add
add
sub
pop
mov
push
sub
dec
pop
movl
jmp
push
dec
not
ror
pop
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
push
test
stos
add
xchg
jle
push
jecxz
cwtl
fyl2x
jle
add
test
add
add
jns
lahf
add
les
into
loopne
xchg
add
xchg
add
repnz
add
add
call
mov
add
mulb
jno
push
insb
mov
jne
je
push
jp
add
mov
in
fdivr
lcall
push
or
adc
test
add
add
pop
adc
xor
add
lock
popf
jb
add
add
addb
add
fmul
mov
add
repnz
into
push
les
sahf
add
ficoml
jge
roll
mov
sub
pop
mov
movl
push
push
lea
push
lea
push
push
lea
push
push
call
jne
add
add
add
pop
add
stos
mov
nop
add
cltd
add
scas
addb
cmpsb
mov
add
jmp
fistpll
add
xchg
lds
popf
jnp
scas
push
add
test
add
scas
add
add
scas
add
in
in
jmp
mov
push
add
shl
sub
sub
pop
mov
push
ror
sub
rol
pop
cmp
jne
push
push
lea
push
call
add
add
cli
add
ljmp
loopne
ret
clc
xchg
add
add
lahf
outsl
out
nop
lret
cli
sti
hlt
add
lds
jnp
jne
mov
mov
jle
mov
add
lcall
inc
adc
add
add
add
mov
pop
add
add
sbbl
push
cli
out
pop
lock
add
cltd
mov
idivb
iret
add
in
add
add
popf
cli
pop
pop
popa
xchg
gs
ja
testl
jp
fildl
popf
add
jl
cmpsl
push
add
mov
cld
push
pop
cmpw
jne
mov
push
push
push
push
push
lea
push
push
push
call
add
leave
add
add
andb
add
pop
push
in
add
add
add
add
add
add
add
add
jge
in
add
add
int
add
leave
mov
jge
xchg
add
mov
add
icebp
add
cwtl
movb
add
lock
in
loopne
movl
push
push
push
push
call
mov
jmp
testl
add
add
add
add
shl
out
mov
subl
push
cli
add
mov
stos
add
mov
mov
add
jp
sub
pop
jmp
pushl
push
lea
push
push
lea
push
lea
push
push
lea
push
call
push
stos
add
ror
addr16
xchg
add
fidivs
push
add
cmc
fidivrl
mov
sub
pop
pop
push
push
push
call
push
add
lcall
in
add
add
mov
mov
add
lcall
jecxz
mov
pop
pop
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
call
ja
xchg
pop
mov
scas
add
addl
add
ja
add
pusha
add
les
add
sarl
mov
add
add
leave
pop
xchg
add
int3
jmp
movsb
jge
push
into
pop
mov
sti
pusha
add
add
lcall
inc
sbb
add
lea
rol
pop
mov
push
push
sub
push
xor
add
shr
dec
lea
sub
add
pop
dec
sub
pop
push
dec
shl
xor
inc
pop
push
push
push
lea
push
call
jbe
add
rolb
add
xchg
js
add
out
fwait
mov
jbe
xchg
add
add
int3
add
xchg
sahf
add
flds
add
mov
mov
into
push
in
hlt
pop
call
cmpl
je
push
push
sub
add
push
xor
add
add
add
sub
shr
pop
add
rol
pop
push
shl
shl
rol
pop
push
push
xor
shl
dec
pop
call
cmpl
je
push
push
shl
dec
add
shr
push
or
inc
add
sub
inc
rol
sub
sub
sub
shr
pop
sub
xor
add
pop
push
not
pop
push
push
add
shr
xor
shr
pop
call
push
lea
push
lea
push
push
lea
push
push
push
call
xchg
add
xchg
int3
shll
mov
add
mov
mov
add
mov
add
addb
aam
test
adcb
mov
test
add
add
add
mov
testl
in
in
cmpl
je
push
push
shr
rol
dec
ror
push
xor
add
shl
sub
add
xor
sub
dec
inc
pop
not
ror
pop
push
add
add
pop
push
push
xor
ror
lea
add
pop
call
push
push
push
push
push
lea
push
push
push
call
les
cmpsb
add
add
xchg
add
add
movsl
in
add
jb
add
pusha
add
sub
add
add
cmpsl
fadds
hlt
add
add
mov
test
js
xchg
mov
add
add
add
xchg
arpl
add
lcall
cmp
add
int3
je
push
push
not
push
or
not
add
xor
sub
add
xor
pop
not
shl
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
ljmp
mov
nop
add
add
call
add
jns
fimuls
jle
jo
add
jmp
mov
jmp
add
add
add
add
stos
lock
cld
shl
jl
mul
pop
sub
pop
push
call
push
ror
sub
pop
cmpl
je
push
push
dec
push
or
not
add
ror
sub
ror
sub
rol
pop
rol
not
pop
push
push
lea
push
push
push
push
push
push
call
add
add
incb
fiaddl
push
add
add
add
stos
mov
xchg
arpl
add
cmc
add
mov
lahf
add
xchg
add
ljmp
add
stc
lods
add
add
in
loopne
lcall
call
push
push
lea
push
push
push
lea
push
push
call
add
rol
in
add
add
stos
add
insb
outsl
idiv
movsb
add
add
addb
movsb
add
mov
in
cmpl
je
push
push
dec
shl
push
or
not
add
ror
sub
shr
sub
pop
shl
ror
pop
push
push
push
push
push
push
push
call
enter
icebp
add
lods
add
outsl
stos
add
fwait
outsl
mov
add
addl
addb
mov
mov
add
add
sbbb
jp
xchg
jbe
movsb
add
sub
pop
push
call
push
rol
shr
dec
pop
cmpl
je
push
push
inc
rol
inc
push
and
add
dec
sub
inc
pop
rol
xor
pop
push
push
lea
push
push
push
push
call
add
add
add
addb
push
add
add
lds
pushf
fildl
lahf
js
push
lds
out
jo
cltd
add
mov
lahf
loope
arpl
bound
call
call
aaa
add
push
lea
push
lea
push
call
add
add
fidivrs
cltd
leave
fldt
add
add
mov
xchg
pop
cld
imul
add
add
add
add
nop
mov
add
jge
mov
add
add
add
add
xorb
xchg
sub
pop
cmpl
je
push
push
lea
dec
rol
push
push
pop
add
sub
sub
pop
sub
shl
pop
push
push
lea
push
call
mov
add
jmp
add
add
xchg
add
fmulp
add
in
add
add
in
add
pushf
add
aam
xchg
std
pop
icebp
in
xchg
addr16
lea
pop
add
add
jo
cwtl
add
add
pop
stos
rcl
xchg
out
add
iret
pop
add
push
push
lea
push
push
call
add
jno
popl
add
add
add
add
in
lret
xchg
add
mov
data16
fwait
xchg
mov
add
push
add
mov
mov
jnp
add
cltd
add
test
mov
xchg
add
jnp
add
sub
pop
call
push
xor
pop
cmpl
je
push
push
sub
rol
shl
push
or
inc
add
dec
sub
shr
pop
rol
sub
not
pop
push
add
sub
pop
push
call
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
shr
int
mov
lret
add
add
add
stos
add
push
pop
jge
add
mov
movsb
jl
jnp
add
test
stc
add
add
je
scas
add
rcll
push
add
mov
enter
fildl
je
pusha
push
jns
jbe
add
sub
pop
cmpl
je
push
push
push
xor
add
ror
xor
sub
sub
add
pop
lea
pop
push
push
call
mov
mov
shll
add
clc
lods
add
test
add
rorb
scas
mov
mov
add
xlat
add
add
into
xchg
cmpsb
adc
mov
ret
add
mov
lods
fwait
push
mov
sub
pop
push
push
push
lea
push
push
push
push
push
push
call
test
enter
add
add
test
add
gs
add
sarb
add
test
add
push
add
in
add
mov
add
add
jbe
add
add
out
add
jbe
int
add
sub
pop
call
cmpl
je
push
push
lea
push
xor
add
sub
shr
sub
xor
pop
shl
pop
push
push
push
push
push
push
push
push
call
out
mov
jecxz
lcall
scas
stos
mov
add
mov
into
add
addl
add
add
xchg
add
outsl
add
add
add
add
leave
fadds
add
in
cmc
add
mov
cltd
sub
pop
push
push
push
call
cmpsl
jne
scas
imul
xchg
jbe
add
add
cmpsb
cmpsl
xchg
fbstp
jle
add
jbe
mov
add
addb
fdivs
add
shlb
jno
add
mov
add
sub
pop
call
cmpl
je
push
push
push
or
inc
add
rol
add
sub
shl
sub
pop
not
shl
xor
pop
push
add
lea
xor
pop
push
call
push
push
push
push
call
add
add
add
add
jmp
add
lock
imul
fimull
add
jl
ret
loope
add
mov
add
movsb
xchg
jge
repnz
popa
add
add
add
add
out
loopne
mov
rolb
add
mov
jb
add
sub
pop
cmpl
jne
mov
push
push
push
lea
push
lea
push
push
push
push
call
push
push
out
stos
movb
test
leave
add
add
jne
mov
add
add
test
add
add
add
xlat
addl
add
add
jmp
push
lea
push
push
push
push
push
push
lea
push
push
call
js
add
pop
add
add
mov
xlat
add
in
lock
into
jecxz
add
add
add
out
add
add
rorb
xchg
jmp
add
rcrb
roll
pop
add
mov
add
sub
pop
xor
pop
push
add
rol
pop
pop
push
lea
push
call
scas
add
call
add
test
lea
add
xchg
add
jo
sti
imul
pop
sub
pop
pop
push
push
push
push
lea
push
push
push
call
add
mov
jbe
xchg
add
jne
add
loopne
lea
add
add
add
xchg
in
rcl
add
test
xchg
add
fiadds
and
add
add
add
xchg
add
stos
add
add
mov
movsb
jbe
sub
pop
pop
leave
push
add
pop
ret
push
shr
sub
add
pop
push
push
push
push
call
or
add
mov
add
add
addr16
mov
add
int
add
add
jne
movb
add
sahf
call
insb
add
out
mov
cwtl
add
cmc
add
push
jno
lcall
insb
push
lcall
add
xchg
clc
add
movsl
scas
sub
pop
mov
add
push
lea
push
push
push
push
push
push
lea
push
call
push
shlb
add
add
in
insb
add
lods
push
int3
add
add
xchg
xchg
mov
xchg
popa
jecxz
lods
add
imul
je
push
add
add
jge
add
test
dec
cs
cli
inc
push
or
not
add
dec
sub
add
add
not
pop
ror
lea
pop
push
push
push
push
lea
push
push
call
add
out
add
pop
add
aad
mov
gs
mov
add
add
add
loope
add
test
sub
pop
pushl
push
inc
pop
call
push
pop
push
push
rol
pop
call
push
lea
not
pop
jmp
cmpl
je
push
rol
pop
cmpl
jne
push
push
push
push
push
call
add
addb
jmp
jle
add
mov
addl
add
add
int
add
enter
imul
addl
pop
leave
add
push
ror
shl
lea
pop
pop
pop
push
dec
xor
sub
pop
pop
pop
push
push
call
add
cli
data16
add
add
rclb
add
add
add
xchg
add
push
push
add
add
fdivl
test
shlb
jge
jb
decb
mov
add
add
fcompl
mov
fld
add
add
fadds
lcall
push
push
lea
push
call
mov
cld
jmp
jp
add
add
lcall
add
add
add
lret
add
add
mov
in
call
aam
lods
fisubrs
pop
add
ret
push
push
push
push
lea
push
call
icebp
in
pop
mov
add
bound
add
add
loope
test
ljmp
fwait
add
add
int
fadd
int
in
add
xchg
in
add
push
add
sarb
leave
add
cltd
push
mov
jmp
push
push
push
lea
push
push
push
push
push
call
sti
pusha
cld
add
pop
fwait
add
add
imul
cld
fdivr
mov
add
add
mov
std
out
xchg
faddl
add
add
out
add
in
loopne
lcall
jge
add
test
add
add
cmp
xlat
push
shr
xor
sub
push
or
not
add
sub
sub
sub
pop
inc
add
ror
pop
push
shr
pop
pushl
push
shr
xor
xor
sub
pop
call
push
push
call
lock
aam
add
pop
pop
mov
push
mov
add
cwtl
add
popl
jecxz
add
scas
jmp
into
addb
add
jmp
je
add
mov
jo
add
mov
js
loop
mov
addr16
add
add
push
add
lods
movl
sub
pop
push
push
add
rol
shl
add
pop
call
jmp
push
sub
rol
lea
lea
pop
cmpl
jne
push
add
pop
mov
mov
push
push
push
push
push
push
call
add
add
jge
cwtl
add
subl
repnz
add
mov
aam
mov
jle
mov
pop
in
add
add
add
lahf
add
add
stos
xchg
movsb
add
push
int
push
movsb
lcall
lcall
repnz
add
or
test
fists
lret
push
roll
add
leave
xor
sub
sub
pop
add
ror
add
pop
push
lea
add
pop
pushl
push
lea
push
push
push
call
add
add
popl
xchg
out
push
leave
movl
lock
addr16
hlt
roll
add
xlat
mov
xchg
mov
int3
stos
std
popf
add
fdivl
mov
add
add
add
jno
jo
add
add
in
lock
call
call
push
push
lea
sub
push
or
inc
add
inc
add
sub
shl
inc
pop
lea
sub
pop
push
add
pop
pushl
push
shl
pop
call
push
push
call
fldl
add
hlt
add
add
mov
incb
add
jne
mov
mov
test
fstps
add
add
repnz
mov
imul
mov
sar
sub
pop
call
push
push
add
dec
xor
push
xor
add
rol
not
sub
lea
dec
pop
add
sub
add
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
fildl
movsb
hlt
test
fstp
add
add
add
mov
add
mov
add
add
add
ja
add
fiaddl
filds
add
cli
pop
add
add
mov
out
add
repnz
add
repnz
lcall
jne
push
ror
sub
xor
pop
call
call
push
push
inc
push
sub
add
shr
add
shr
sub
pop
sub
pop
push
sub
shr
pop
pushl
push
inc
not
pop
call
push
push
push
push
push
push
call
pop
xlat
add
aad
jo
add
push
stos
push
push
add
xchg
mov
push
add
add
je
icebp
pushf
push
nop
mov
add
add
add
idivl
sub
pop
call
push
push
shl
sub
push
push
pop
add
inc
sub
xor
pop
sub
dec
shl
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
outsl
lock
add
jmp
les
add
add
xchg
popf
mov
out
out
je
hlt
add
test
cltd
jae
test
add
iret
cmc
add
outsl
add
fcomps
jne
push
lea
push
push
push
push
push
lea
push
call
mov
ljmp
add
add
mov
clc
out
fld
add
add
add
add
mov
movl
pop
mov
loopne
jns
add
sti
jbe
mov
jge
add
cmpsl
stc
xchg
add
pop
call
call
push
push
add
push
push
pop
add
inc
xor
shl
not
sub
rol
add
pop
not
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
hlt
out
out
imul
add
add
cld
add
push
add
scas
add
cmpsb
add
xchg
add
add
lahf
into
push
add
jne
add
stos
imul
cltd
pop
sub
pop
pushl
push
lea
push
push
push
call
add
add
add
aad
cltd
jne
add
add
rolb
xchg
sti
add
outsl
jae
rcrl
add
fsubrl
add
add
mov
je
test
jmp
orb
add
mov
mov
cmpsl
add
add
in
lock
lcall
lahf
add
push
push
push
call
mov
add
pop
add
insb
mov
xchg
mov
vrcpps
xchg
mov
add
add
nop
add
fistpll
add
test
call
push
push
add
lea
ror
shr
push
or
inc
add
lea
add
sub
ror
shr
lea
pop
add
add
pop
push
add
ror
pop
pushl
push
lea
push
call
jne
sarl
add
pushf
mov
pop
add
outsl
add
rol
add
add
add
add
jns
mov
in
clc
pop
call
call
push
push
rol
push
push
pop
add
shl
lea
sub
rol
pop
xor
sub
pop
push
push
call
ja
add
add
add
push
jns
insb
add
in
fcomps
in
add
mov
add
lock
out
sub
pop
pushl
push
lea
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
mov
xchg
call
mov
fstpt
in
jmp
jecxz
pusha
add
add
add
push
push
scas
scas
loopne
in
loope
add
pushf
clc
push
add
add
add
fiaddl
add
add
in
sti
add
pusha
sub
pop
call
call
push
push
sub
push
or
not
add
ror
shr
dec
sub
sub
pop
rol
sub
pop
push
add
xor
shl
sub
pop
pushl
push
push
push
push
call
fidivrs
add
add
out
into
js
add
pop
jmp
ret
cli
pop
add
jbe
mov
lret
add
bound
add
loop
imul
loopne
add
hlt
fdivrs
loop
add
add
jne
insb
clc
pop
push
mov
add
add
pop
call
call
push
push
add
add
push
xor
add
ror
sub
sub
xor
sub
sub
pop
xor
not
pop
push
lea
push
push
push
push
call
notb
add
pop
lea
add
add
add
add
mov
add
add
test
push
test
push
insb
rcll
xlat
add
add
add
lds
in
mov
imul
mov
lret
movsb
in
out
add
fsubl
imul
lcall
jne
push
push
push
lea
push
call
test
jecxz
xchg
mov
add
cmpsl
mov
add
mov
nop
pop
add
mov
xchg
push
push
mov
add
repnz
out
jbe
add
js
add
add
leave
add
nop
add
pop
call
push
push
push
push
call
add
add
jb
movsl
add
push
out
pop
push
lds
add
add
add
add
out
out
xchg
out
add
jp
add
enter
roll
add
add
add
add
add
add
add
add
add
mov
lcall
pushf
and
call
xor
dec
pop
push
call
push
push
sub
not
push
sub
add
sub
rol
not
add
rol
pop
rol
lea
ror
xor
pop
push
shr
pop
pushl
push
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
loop
pusha
add
add
lcall
add
scas
add
add
cld
shrl
add
jns
sub
pop
call
push
ror
lea
shr
pop
call
push
push
add
push
and
add
sub
sub
shl
shr
pop
shr
dec
inc
pop
push
xor
pop
pushl
push
lea
push
call
lock
fcoms
jge
mov
jecxz
add
je
add
jno
fwait
add
jle
add
cmpsb
ja
mov
popf
add
add
mov
add
ja
icebp
out
add
xlat
xchg
sti
mov
add
add
lock
js
lcall
testl
push
add
pop
call
push
push
not
add
shr
lea
push
and
add
shl
add
rol
shl
sub
shl
pop
lea
dec
pop
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
in
add
add
add
add
add
ret
add
fcmovnu
add
lret
push
add
add
jae
scas
clc
test
pop
sub
pop
pushl
push
xor
lea
sub
pop
call
push
push
lea
push
call
add
movsb
jb
add
rolb
add
fs
xchg
ret
lods
jbe
stos
into
add
scas
add
xor
add
add
lahf
xchg
pop
add
add
sub
pop
call
lea
push
push
push
or
inc
add
ror
dec
sub
lea
add
pop
pop
push
push
call
add
mov
xchg
xchg
fwait
push
mov
in
hlt
into
subb
mov
ljmp
fs
pop
pushl
push
sub
dec
pop
call
push
sub
pop
push
push
dec
xor
pop
call
push
push
inc
sub
sub
push
or
not
add
ror
shl
shr
sub
sub
pop
xor
add
ror
add
pop
push
push
lea
push
lea
push
push
push
push
call
cwtl
add
sub
push
data16
rcl
add
mov
call
add
cmc
xchg
add
les
add
add
xchg
cmpsl
movsb
roll
add
mov
popl
add
add
add
jecxz
add
add
cltd
add
add
lcall
jne
push
push
push
call
add
xchg
imulb
add
jmp
xchg
test
out
pop
pop
insb
jb
out
add
hlt
pop
call
push
push
push
push
push
call
stos
add
lret
jge
add
push
push
jb
sahf
incb
add
mov
int
add
mov
lret
add
out
xchg
jne
add
fadds
lahf
add
je
mov
in
in
lcall
rclb
pop
push
push
push
call
add
cltd
mov
add
add
add
pop
mov
loope
add
jnp
pop
sub
pop
mov
push
push
sub
sub
push
and
add
rol
ror
add
sub
pop
inc
pop
push
push
push
call
lret
mov
add
scas
movsl
add
fiaddl
add
add
repnz
loopne
pop
push
lods
aad
mov
hlt
lcall
jne
push
lea
push
lea
push
push
push
push
push
call
pop
push
add
imul
add
add
add
idiv
push
mov
add
add
sbbl
mov
add
cwtl
fs
stos
jne
pop
loope
cli
add
add
pop
out
int3
jb
add
aad
pop
stos
in
lret
sub
pop
call
push
xor
sub
pop
push
pushl
push
lea
xor
sub
sub
pop
call
push
push
shr
not
push
or
inc
add
shl
add
sub
xor
pop
sub
inc
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
jns
outsl
pushf
xchg
add
pop
jmp
int3
icebp
cmpb
push
add
std
add
jne
mov
pop
add
std
je
data16
jbe
fdivrp
imul
sub
pop
pushl
push
dec
xor
sub
sub
pop
call
push
push
inc
dec
sub
push
xor
add
not
ror
add
add
sub
add
pop
sub
dec
pop
push
push
add
xor
shr
push
xor
add
lea
add
sub
sub
pop
shr
lea
pop
push
push
push
call
cmpsb
rolb
movsb
add
add
xlat
add
loop
xchg
add
add
ljmp
add
add
add
add
shrb
mov
push
dec
lea
push
push
pop
add
dec
not
sub
lea
pop
inc
xor
pop
push
xor
sub
add
pop
pushl
push
push
push
lea
push
push
call
add
in
add
lea
add
add
push
add
aam
addr16
add
add
repnz
lcall
adc
lahf
add
lds
add
mov
add
push
xor
pop
mov
push
lea
push
push
push
push
call
fldl
bound
fcompl
mov
ret
add
xlat
add
rolb
push
fildl
xchg
add
out
add
jo
add
add
rolb
int3
add
adcb
push
add
call
in
lcall
pushf
and
decl
call
push
push
lea
not
shl
rol
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
jbe
add
mov
mov
int
add
gs
rol
add
add
mov
fldl
add
pop
imul
in
loopne
lcall
add
lea
push
lea
push
push
push
push
push
lea
push
push
call
mov
lcall
mov
scas
push
mov
xchg
jmp
addr16
cld
clc
mov
mov
out
push
add
jnp
push
add
mov
add
roll
add
ja
enter
add
in
fdivr
lcall
add
push
sub
lea
shl
not
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
push
add
int
add
add
pop
js
arpl
cld
pop
imul
add
push
test
call
xchg
mull
add
insb
int3
push
add
add
mov
xchg
fwait
int
xlat
lret
je
sahf
imul
jnp
mov
call
lcall
add
incl
stc
sub
pop
pushl
push
push
push
lea
push
lea
push
lea
push
push
call
add
add
pusha
in
mov
add
add
add
jp
add
add
add
push
sub
pop
call
push
push
shl
lea
rol
push
or
inc
add
sub
sub
inc
add
pop
rol
pop
push
shl
pop
pushl
push
shr
rol
shr
pop
call
call
push
sub
pop
mov
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
out
faddl
add
mov
add
notb
mov
add
movsl
add
add
add
jns
push
jmp
fcmovu
loopne
jne
pusha
add
add
sub
pop
dec
jne
push
push
push
push
push
lea
push
push
call
sti
add
add
xchg
add
add
add
jns
fbld
add
les
xchg
add
into
enter
jnp
mov
hlt
add
add
mov
loope
ljmp
add
test
sahf
add
lcall
rolb
add
push
push
shl
not
shr
rol
push
or
inc
add
sub
add
sub
dec
not
pop
shr
shr
pop
push
push
call
mov
fsts
add
pusha
cli
xchg
add
add
add
add
jmp
add
adc
add
sub
pop
pushl
call
push
push
push
push
call
lea
xorl
jl
pusha
andl
mov
addl
pop
clc
pop
mov
fcmovnbe
add
add
enterw
add
insb
add
add
lcall
call
ret
xchg
out
mov
rclb
pushf
roll
sbb
add
add
add
add
mov
incb
add
add
arpl
add
stc
add
add
add
add
xchg
add
add
jnp
loope
add
add
add
je
cli
js
fstpt
add
add
sti
xlat
push
les
cltd
leave
mov
lcall
add
add
push
add
inc
pop
lea
push
push
lea
ror
push
sub
add
shl
sub
pop
dec
pop
push
push
push
call
imul
add
pop
aam
test
push
add
je
xchg
lcall
js
xchg
stos
lahf
add
jge
add
loop
add
rolb
jle
add
jne
call
push
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
lods
add
jmp
add
add
add
loope
jmp
mov
add
add
add
pop
add
add
mov
add
push
pop
call
push
push
add
dec
push
push
pop
add
sub
shr
add
pop
dec
dec
pop
push
sub
sub
shr
dec
pop
pushl
push
shl
pop
call
push
push
lea
push
call
lahf
scas
lea
je
add
mov
leave
roll
push
mov
repnz
add
add
ja
add
xchg
push
add
sub
pop
call
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
scas
add
test
jne
orl
fiadds
add
add
add
add
add
add
aam
add
add
addl
add
add
add
pushf
and
ljmp
push
repnz
dec
inc
push
sub
add
add
sub
shr
shl
pop
shr
pop
push
shl
dec
pop
pushl
call
push
lea
push
push
push
push
call
add
scas
out
add
repnz
pop
jo
test
pop
sti
add
add
sarb
roll
movl
scas
add
jns
add
add
add
fucomip
movsb
add
add
clc
add
push
add
lcall
add
push
shl
pop
push
push
push
push
push
push
call
add
insb
add
cld
out
add
xchg
add
lods
add
add
lock
add
pop
jl
stc
cld
add
lcall
add
rcrb
add
fsubp
sub
hlt
push
push
lea
ror
push
and
add
sub
sub
lea
inc
pop
rol
add
pop
push
inc
add
dec
pop
push
push
dec
sub
lea
pop
call
push
push
ror
inc
shl
push
sub
add
shr
rol
sub
dec
pop
not
shl
shr
xor
pop
push
push
push
push
push
push
push
call
add
test
add
add
add
jae
mov
out
jmp
out
add
cmc
pop
mov
mov
pop
outsw
xchg
add
add
in
in
pushl
push
push
lea
push
push
lea
push
push
push
call
xlat
mov
xchg
cmpsl
in
ljmp
mov
mov
pop
push
cmc
arpl
add
outsl
movsb
add
add
add
stc
cltd
pop
add
add
add
add
jnp
mov
pop
out
stos
add
fdivr
addb
lret
add
and
in
in
call
push
shl
add
pop
push
push
sub
add
pop
call
push
push
xor
sub
shr
push
xor
add
xor
sub
not
sub
sub
add
pop
rol
dec
pop
push
lea
push
call
pusha
add
mov
rcl
pop
mov
leave
lahf
int
pop
mov
jbe
fisubs
add
in
aad
mov
pop
lahf
repnz
icebp
add
gs
lret
addb
push
test
aam
jns
movsb
lods
test
popf
add
mov
scas
int
sub
pop
pushl
push
xor
inc
sub
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
imul
mov
loop
add
mov
add
lods
mov
add
add
fisubl
add
add
adcl
add
ja
lret
jnp
mov
xchg
testb
push
push
push
call
add
add
add
add
add
add
data16
add
pop
pop
pusha
mov
push
aad
shlb
hlt
out
fiaddl
lcall
add
add
pushl
push
ror
add
pop
mov
push
push
push
lea
push
call
add
aam
mov
add
push
hlt
sahf
add
mov
add
test
add
hlt
add
add
add
add
mov
sarb
jl
xchg
mov
xchg
add
int3
push
test
sub
pop
jmp
push
push
dec
push
or
inc
add
ror
ror
sub
shr
shr
sub
pop
add
rol
xor
pop
push
ror
xor
pop
pushl
push
pop
call
push
sub
dec
pop
push
call
push
push
not
sub
not
sub
push
sub
add
sub
dec
sub
sub
pop
add
sub
rol
lea
pop
push
push
push
call
add
add
pusha
into
add
mov
push
add
movsb
pop
lea
push
in
add
add
add
call
pop
fld
push
add
out
rorb
jecxz
push
add
in
add
addb
lcall
jne
push
add
lea
xor
pop
call
push
push
lea
push
push
push
call
push
jne
add
pop
icebp
arpl
les
add
mov
imul
add
jmp
pop
jbe
add
lcall
rclb
fs
lea
push
call
xlat
add
mov
out
jno
xchg
add
add
add
add
jecxz
lret
jb
pop
push
roll
out
add
lahf
andb
in
lock
lcall
add
push
not
pop
pop
pop
push
lea
push
push
push
push
push
call
add
add
out
add
ljmp
xchg
add
data16
fadds
iret
stos
lds
stc
test
add
mov
insb
leave
clc
xlat
add
mov
fwait
je
mov
add
add
add
gs
lds
xchg
jno
add
mov
add
xchg
fadds
add
xchg
jns
sub
pop
pop
push
rol
dec
sub
dec
pop
pop
leave
push
sub
sub
sub
pop
add
push
push
push
call
cmpl
ja
ja
out
mov
add
push
xchg
arpl
add
xchg
lahf
add
jbe
leave
add
add
movsl
jno
add
add
mov
in
mov
add
add
xchg
mov
pop
pop
cld
add
int
mov
repnz
add
push
loope
mov
pop
add
add
xchg
add
jnp
jno
in
hlt
lcall
push
push
push
push
push
call
in
add
loop
xchg
add
imul
add
add
fldl
add
fwait
add
add
jns
stos
lret
add
add
in
repnz
add
sbbl
sub
pop
leave
push
dec
pop
ret
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
mov
movsl
add
push
add
shrb
jbe
push
addl
xchg
ficomps
stos
add
repnz
fwait
sbbb
mov
add
add
cmpsl
add
out
add
jp
add
mov
add
add
cmc
sub
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
stc
xchg
icebp
add
add
add
add
leave
mov
pushf
xchg
fisubs
aam
add
add
rolb
loop
lahf
push
mov
icebp
mov
xchg
add
data16
add
lcall
in
push
push
push
push
lea
push
lea
push
push
push
call
je
xchg
jbe
add
xchg
add
jbe
cmc
aam
mov
js
add
push
lahf
add
lds
scas
sub
pop
cmpl
jne
mov
push
pop
jmp
push
add
pop
mov
push
rol
pop
and
xor
push
xor
xor
pop
xor
push
push
push
push
push
push
lea
push
call
add
jmp
repnz
xchg
jl
add
push
mov
add
mov
fiadds
jl
sub
pop
add
xor
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
jl
test
push
push
add
add
add
add
add
add
add
add
hlt
fs
add
push
fidivl
xchg
mov
cmc
add
add
add
imul
cmpsb
add
mov
add
add
add
add
add
xchg
sub
pop
dec
sub
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
mov
pusha
stos
jmp
push
mov
add
fdivrl
jge
mov
filds
mov
push
popa
add
jnp
mov
filds
sub
pop
jmp
sub
push
add
shr
pop
pushl
push
inc
inc
add
pop
pop
push
lea
push
call
insb
mov
add
add
mov
mov
add
in
imul
sahf
add
not
add
xchg
mov
in
clc
lcall
jmp
push
push
lea
push
call
fnsave
add
mov
add
repnz
add
jno
xchg
add
fnstsw
je
add
cwtl
add
mov
fs
xchg
movsb
mov
insb
shrb
push
out
mov
add
mov
out
push
push
jp
add
mov
sub
pop
cmp
jne
mov
push
add
sub
sub
pop
lea
push
xor
sub
dec
pop
sub
push
push
push
push
lea
push
push
call
add
fistl
mov
mov
test
out
repnz
ljmp
jmp
mov
rol
add
sub
pop
mov
push
dec
pop
shr
add
push
lea
push
push
push
push
push
push
push
call
add
mov
add
mov
add
add
les
mov
add
add
lods
add
std
scas
add
mov
in
mov
lds
add
add
sub
pop
sub
pushl
push
rol
pop
pop
push
not
lea
shr
pop
shr
push
shr
pop
and
push
dec
pop
sub
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
bound
fadds
xchg
pop
add
xchg
lods
fiaddl
add
jle
flds
jbe
add
ret
in
roll
insb
sub
pop
cmp
jne
leave
push
add
pop
ret
push
push
dec
ror
sub
pop
mov
push
shl
add
pop
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
pop
mov
aad
stos
rcr
test
add
js
add
loope
add
add
pushf
xchg
add
icebp
sub
pop
push
push
push
rol
dec
pop
push
push
push
sub
pop
mov
lea
push
rol
pop
sub
push
push
push
push
lea
push
push
push
push
call
add
pop
lret
add
lods
add
mov
int
cltd
add
add
sahf
divb
fisubs
imul
add
pop
mov
pop
addb
in
loopne
mov
push
push
push
push
push
lea
push
call
lods
add
add
add
add
scas
lock
fdivs
add
pusha
cmpsl
flds
ja
add
xchg
jae
out
add
add
rorb
int
pop
add
pop
sahf
sti
add
add
pop
add
xchg
add
sahf
sub
pop
shr
push
not
pop
add
mov
push
push
push
push
lea
push
push
push
call
mov
add
mov
add
add
add
shl
fcomip
iret
add
ja
bound
add
jl
xchg
cmc
jmp
bound
lcall
pop
or
push
push
push
push
call
mov
add
into
pushf
pop
add
add
std
lods
add
enter
test
aad
add
xchg
fsubr
add
add
lret
in
call
push
not
sub
sub
pop
add
push
push
lea
push
push
push
push
call
lock
add
add
add
gs
add
mov
pop
mov
push
mov
mov
add
add
add
lock
mov
call
xor
push
shr
pop
mov
push
push
push
push
call
add
testl
add
add
add
imul
popa
add
add
mov
add
icebp
add
jno
stc
fildl
push
arpl
mov
out
movsl
movsb
scas
add
outsl
lds
mov
loopne
push
sub
inc
pop
rol
push
shr
shr
pop
rol
push
push
lea
push
push
push
push
push
push
lea
push
call
push
insb
jmp
add
mov
add
add
fnstcw
data16
fidivl
lret
int3
fsubrs
jae
sub
pop
xor
inc
push
push
push
lea
push
push
push
push
push
call
add
mov
jae
mov
add
addl
test
add
std
xchg
add
je
pop
add
add
add
add
add
add
add
mov
add
addr16
mov
add
in
mov
xchg
je
sub
pop
cmpb
jne
add
push
sub
ror
pop
cmp
je
add
push
push
call
lret
cmpsb
jbe
lahf
xchg
add
iret
mov
add
add
cmpsb
add
cwtl
test
rolb
xlat
xlat
add
jecxz
xchg
pop
add
std
mov
push
bound
fildl
add
xchg
nop
addb
jbe
mov
test
add
xchg
add
lods
add
add
add
add
add
mov
jecxz
lcall
jnp
add
test
push
push
push
call
mov
sbbl
shrb
add
mov
add
ret
add
call
enter
mov
jmp
jge
add
fs
add
add
add
jo
movl
add
mov
xchg
addl
push
push
push
call
add
fstpt
xlat
leave
clc
add
lock
add
nop
lret
mov
add
pop
mov
loope
pop
add
jns
add
add
mov
add
stos
add
arpl
sub
pop
pop
pop
push
sub
xor
pop
pop
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
add
add
lahf
shl
add
aad
add
add
add
add
push
je
lahf
add
mov
aam
sahf
std
into
pushf
mov
shlb
ja
push
xchg
add
add
enter
insb
add
add
push
add
add
sub
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
add
add
negl
add
out
popa
add
add
add
out
movsb
xchg
xchg
jns
cltd
add
mov
add
fsubs
cli
add
sahf
sub
pop
pop
push
ror
rol
add
add
pop
leave
push
lea
push
lea
push
call
add
lret
out
std
test
loop
fiadds
add
stc
add
add
out
add
add
test
add
mov
add
xchg
jecxz
add
push
mov
in
fnstsw
mov
add
out
jl
add
shl
out
sub
pop
ret
mov
push
rol
inc
pop
add
push
add
dec
pop
push
push
push
lea
pop
add
mov
push
lea
push
lea
push
call
jne
add
add
ja
test
push
in
add
add
jmp
ljmp
add
add
test
pop
mov
mov
add
add
add
mov
push
add
add
mov
add
movsb
add
sub
pop
testw
push
push
push
push
call
mov
movsl
imul
loope
pushf
push
jb
add
and
leave
fildl
out
fldl
add
pop
stc
js
mov
add
jecxz
mov
add
add
add
test
add
in
add
pop
lahf
int
jns
mov
int3
mov
test
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
out
jecxz
cmc
cmpsl
add
add
xchg
fnsave
add
add
add
xchg
lret
add
roll
add
gs
lcall
clc
add
mov
fcomps
add
not
lea
pop
call
xor
push
lea
pop
pop
pop
push
lea
sub
ror
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
movsb
out
add
add
imul
add
jmp
mov
add
std
add
add
loopne
add
aam
add
js
push
add
xchg
lret
add
fcompl
push
inc
rol
shl
dec
pop
pop
push
lea
push
lea
push
push
call
jae
scas
jbe
add
fwait
mov
add
addb
testl
fadds
fldl2e
lret
push
add
push
add
pop
xchg
mov
add
add
mov
jmp
pop
leave
push
push
call
popl
xlat
add
mov
add
add
iret
push
idivb
add
fwait
xlat
add
xchg
mov
add
xlat
ljmp
lcall
lret
pushf
aam
lret
jo
add
addr16
add
add
add
add
lcall
or
push
not
pop
push
mov
push
rol
pop
add
push
push
rol
pop
push
push
push
push
push
push
push
push
push
call
insb
add
incb
mov
xlat
push
add
cltd
add
mov
into
scas
fistpl
add
pop
pushf
js
add
add
mov
xchg
pushf
add
in
add
ficoms
add
cmpsb
fldcw
mov
add
lret
iret
add
pushf
add
xlat
lods
push
in
loopne
lcall
push
push
push
push
push
call
push
add
loop
add
add
ljmp
add
add
pop
mov
add
int
pop
mov
pop
add
add
mov
mov
pop
addr16
add
add
add
pop
data16
pop
add
bound
mov
imul
in
lcall
add
out
mov
pop
mov
push
push
lea
sub
lea
pop
pop
push
sub
lea
pop
lea
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
loop
movsb
jno
out
in
add
push
add
fwait
add
out
nop
nop
add
out
std
add
add
roll
loopne
lods
jno
test
lock
loop
lock
out
fldenv
sahf
in
add
mov
sahf
scas
cmc
push
sub
pop
sub
mov
push
sub
pop
shr
add
push
not
pop
mov
add
push
push
push
lea
push
call
add
mov
sub
add
addr16
add
ror
mov
push
add
icebp
add
push
xlat
add
jle
add
test
add
mov
test
add
mov
shrl
add
rorb
movsb
outsl
add
out
sub
pop
pushl
push
push
push
push
lea
push
push
push
push
call
push
add
cli
data16
mov
fistl
fisubl
add
add
add
aad
mov
lahf
lock
add
push
testl
add
add
add
mov
in
mov
loopne
lcall
inc
clc
push
push
push
lea
push
lea
push
push
push
push
call
in
add
rolb
movsw
push
add
add
leave
sahf
jl
mov
add
add
add
insb
add
add
jge
imul
mov
add
push
lea
push
push
push
push
call
add
bound
add
lcall
add
add
rcl
add
mov
mov
xor
lea
push
push
push
push
push
call
add
add
les
add
xchg
mov
add
add
aam
enter
add
mov
pop
fcmovu
sahf
add
add
aam
xchg
add
adc
rcll
lret
and
rclb
inc
add
ror
pop
rol
nop
push
push
lea
push
push
push
push
push
lea
push
call
add
stc
jge
add
insb
add
stos
add
hlt
jno
add
push
loopne
mov
push
testb
jns
repnz
sahf
lds
xchg
add
add
fidivl
mov
movb
add
in
loopne
lcall
push
lea
push
push
call
aad
add
fs
jnp
add
add
add
in
add
imul
xchg
jmp
add
add
cltd
add
add
iret
pop
nop
push
push
push
call
add
aad
add
sahf
add
js
popa
add
xchg
sti
roll
pusha
in
mov
je
lods
mov
add
add
add
add
shll
add
sti
xlat
stos
add
add
int3
int
add
popa
cmpsl
add
loopne
add
jnp
add
add
sub
pop
nop
push
not
add
pop
inc
push
push
lea
push
call
add
add
add
add
add
add
add
popf
mov
jge
in
add
push
add
add
add
shl
add
push
add
pop
jb
in
add
mov
add
add
cmc
add
loopne
xchg
lcall
push
lea
push
push
push
push
push
push
call
jle
movsl
out
xchg
add
cli
out
add
testl
out
pop
lret
fucomp
add
xchg
jbe
add
add
stc
xchg
push
loope
les
in
push
xchg
add
mov
test
add
shlb
sub
pop
nop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
clc
add
into
add
add
popa
fmulp
insb
mov
add
shlb
mov
add
add
add
add
rolb
add
add
add
js
fldl
cmp
jne
push
push
push
push
lea
push
push
call
add
mov
push
pop
add
jmp
add
mov
movsb
cmc
test
clc
lods
push
flds
add
mov
mov
data16
lahf
xchg
mov
mov
pop
sub
pop
add
push
push
call
add
pop
fistpl
add
jecxz
scas
add
arpl
add
mov
stc
testb
mov
popa
add
stc
cmc
pop
test
mov
add
test
lods
add
mov
add
in
add
lcall
loope
jp
je
fstps
lcall
push
not
sub
dec
pop
nop
push
add
sub
inc
pop
cmp
je
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
add
push
scas
add
push
add
add
mov
jae
xchg
call
add
add
add
mov
movsl
out
in
fdivr
lcall
push
ror
rol
pop
nop
inc
push
inc
pop
nop
push
ror
pop
nop
push
not
add
pop
cmp
jb
push
xor
pop
xor
push
push
push
push
push
push
push
call
aam
mov
sar
xchg
aad
out
mov
shlb
arpl
rcrb
jno
add
mov
fiadds
iret
add
nop
insb
add
add
cli
add
nop
xchg
add
lods
add
add
xor
sar
enter
pop
sub
pop
jmp
push
push
push
push
push
push
push
lea
push
push
call
add
cwtl
xchg
jbe
mov
scas
xchg
add
add
arpl
mov
jae
mov
add
xchg
push
out
stos
jbe
mov
cmpl
add
add
add
lcall
push
and
rcll
out
pop
movzwl
push
add
pop
mov
add
push
push
push
push
push
lea
push
push
push
call
mov
addl
popa
test
les
lret
sar
push
aad
mov
xchg
cwtl
shlb
nop
movsb
add
loopne
mov
push
push
push
push
push
lea
push
call
stc
stos
add
cli
pop
add
xchg
mov
iret
scas
shrb
int
add
int3
stos
add
add
popl
add
in
add
jb
out
pop
mov
add
lcall
shll
lds
mov
in
call
push
push
push
call
std
add
add
push
mov
outsl
add
test
xchg
js
jo
push
add
fwait
add
movsb
cltd
clc
mov
fs
add
add
add
add
add
in
add
arpl
add
jno
add
sub
pop
xor
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
call
cmpsb
out
shlb
mov
add
mov
add
add
fadds
add
add
xchg
in
add
add
add
stc
imul
mov
insb
mov
cmc
sub
pop
shl
push
push
push
push
push
push
push
push
push
push
call
testl
ljmp
jns
xchg
jmp
add
add
push
sahf
mov
xchg
lods
add
out
sarl
xchg
add
mov
popf
add
testl
fdivr
lcall
dec
nop
add
loope
push
push
call
std
lret
push
test
add
mov
jl
roll
push
outsl
add
clc
add
mov
xlat
add
jp
add
add
mov
lret
testl
jmp
ljmp
add
add
add
lcall
dec
nop
add
pop
shl
push
add
pop
xor
mov
push
rol
lea
pop
add
push
dec
inc
pop
pop
pop
push
push
push
push
call
std
stc
cmc
add
mov
jge
add
add
mov
pop
jle
add
rolb
fistpl
int
cltd
fidivl
loope
movsl
add
insb
mov
add
add
add
mov
incb
hlt
in
fwait
push
in
lock
pop
push
push
push
push
push
call
add
lock
push
push
push
jmp
add
mov
push
add
jecxz
pusha
roll
cwtl
insb
push
data16
add
aad
add
add
popa
out
add
add
test
add
lcall
leave
push
ror
add
pop
ret
push
lea
dec
inc
lea
pop
push
push
sub
sub
pop
mov
push
push
shl
ror
pop
push
push
sub
ror
pop
push
push
push
push
push
push
push
push
push
push
push
push
call
add
add
fcomps
lds
add
jmp
hlt
jge
add
add
jns
add
add
scas
mov
lods
bound
mov
add
gs
mov
add
mov
jp
leave
popa
sub
pop
mov
mov
push
rol
ror
pop
mov
test
je
push
lea
push
push
push
push
call
add
loope
test
add
add
xchg
add
cmpsl
mov
add
xchg
mov
push
fs
add
add
sahf
add
imul
stc
lock
push
flds
mov
in
in
lcall
jno
push
rol
dec
pop
test
je
mov
push
add
pop
mov
mov
push
push
push
push
push
call
add
jae
jl
add
popf
add
add
in
int3
mov
mov
add
jge
outsl
je
sti
out
jmp
jecxz
fadds
lcall
push
xor
pop
cmp
je
test
je
push
not
not
pop
mov
push
push
call
add
add
add
iret
add
cwtl
add
add
fisubrs
add
ja
add
repnz
add
push
push
out
pusha
add
testb
add
cli
add
clc
jl
pop
js
stos
lds
push
add
add
out
sub
pop
inc
push
inc
sub
sub
lea
pop
cmp
je
push
sub
pop
test
jne
push
ror
pop
xor
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
jecxz
add
xchg
add
add
outsl
fiadds
out
lock
cli
int
pop
mov
add
add
add
mov
jb
jl
jle
mov
repnz
add
push
faddl
testl
ljmp
push
add
pop
jno
add
add
add
add
add
add
add
lret
jp
in
fcomps
push
lea
lea
pop
pop
pop
push
sub
rol
not
ror
pop
pop
leave
push
dec
dec
pop
ret
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
jo
imul
enter
loop
fs
add
je
jl
lds
add
add
add
add
mov
js
add
add
push
mov
add
add
mov
push
shl
rol
shl
pop
inc
push
push
call
mov
mov
add
out
mov
lods
lahf
out
cld
hlt
push
push
fldl
mov
scas
add
mov
in
mov
jmp
add
add
add
add
add
add
testb
lea
add
out
lods
add
jbe
in
popf
add
clc
pop
cmp
jne
lea
push
add
rol
pop
mov
test
je
push
lea
push
push
call
mov
fwait
std
add
push
add
aad
xor
add
mov
js
push
into
mov
lock
add
mov
mov
ficompl
mov
mov
ja
mov
xchg
add
add
add
outsl
insb
pop
add
iret
sub
pop
mov
push
not
pop
add
push
lea
pop
cmp
jne
mov
push
sub
not
sub
pop
test
je
push
push
push
lea
push
push
lea
push
push
push
call
test
jno
add
add
bound
pop
out
add
rcl
mov
test
mov
add
bnd
shll
stos
ja
in
loopne
mov
push
push
push
push
push
push
push
call
add
mov
mov
loopne
incb
xchg
roll
stc
pop
pop
jge
jbe
movsb
mov
pop
bound
mov
pop
fiaddl
gs
xor
add
loope
leave
fidivl
pop
add
cmp
je
push
push
lea
push
call
add
push
add
add
add
add
clc
add
cltd
xor
add
test
je
fldenv
push
out
roll
add
lret
in
mov
je
in
hlt
pop
jmp
xor
push
push
lea
push
call
add
jle
push
mov
add
int
cli
add
ljmp
xchg
jle
lock
add
lcall
add
push
addl
scas
add
fdivrs
aam
jae
xchg
add
in
hlt
lcall
pop
push
shr
pop
pop
push
pop
pop
leave
push
push
push
push
lea
push
push
call
out
fnstenv
push
mov
in
jp
shl
add
add
idivl
loopne
push
add
insb
jle
add
add
add
mov
jae
add
imul
into
fiadds
xchg
add
add
add
add
out
lods
sub
pop
ret
push
sub
sub
inc
pop
lea
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
hlt
add
add
pusha
mov
add
add
mov
pop
cld
aam
mov
out
fsubs
add
push
add
add
push
ror
pop
pop
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
pop
add
incb
mov
pushf
add
mov
push
popf
fs
add
iret
jo
pop
add
loope
push
rolb
add
jp
add
add
add
pop
add
add
icebp
into
add
test
add
add
add
in
add
in
pop
push
push
push
push
lea
push
push
push
call
add
imul
cmpl
add
add
add
push
lahf
add
mov
pop
cmpsb
jmp
add
fwait
mov
fistpl
mov
add
popa
into
jno
add
xchg
jae
jmp
pop
add
sar
mov
test
lcall
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
add
mov
movb
add
mov
add
pop
popf
add
pop
add
add
add
mov
mov
add
mov
fcompl
or
push
push
lea
push
call
xchg
mov
enter
mov
ljmp
xchg
push
enter
lahf
mov
add
pop
imul
add
jnp
out
hlt
lahf
aad
mov
test
add
loopne
add
add
rcrl
les
loopne
std
divl
addl
hlt
lcall
push
lea
push
push
push
call
cwtl
cmc
push
add
add
xchg
add
lock
clc
sahf
add
add
add
hlt
mov
add
add
add
add
xlat
jnp
lods
push
add
push
jo
add
lcall
push
lea
push
lea
push
call
popf
iret
add
add
add
sarl
xlat
add
mov
imul
fcmovu
add
add
add
add
xchg
add
push
add
push
add
rclb
add
pushf
xchg
fsubs
pop
add
add
nop
add
lcall
push
push
push
lea
push
lea
push
push
push
push
call
cmpsl
mov
aad
mov
jecxz
leave
add
add
mov
lods
call
int
mov
lods
testl
into
ret
pop
add
cwtl
add
repnz
pop
add
jecxz
add
jp
insb
jae
add
add
push
push
pushf
hlt
jae
in
loopne
pop
push
push
call
cmpsb
add
mov
add
mov
gs
mov
push
fistpl
add
push
add
add
add
lcall
leave
push
add
pop
ret
test
jae
shll
test
ja
test
jae
sahf
pusha
jae
dec
sub
mov
jae
test
push
test
push
sbb
jno
out
fwait
ljmp
int3
outsb
jbe
pop
mov
lret
dec
sbbl
inc
pop
imul
add
inc
push
push
aam
add
out
mov
mov
fidivl
push
inc
lds
jle
mov
mov
imul
mov
out
and
jle
mov
xchg
popf
add
andl
cmpb
xchg
mov
adc
and
addb
and
fimuls
fcmovnbe
mov
jb
pop
fcomps
dec
enter
popf
pop
sbb
aam
insb
int
xor
sub
adc
jl
ffree
xor
into
sub
pop
add
fdivrs
idiv
add
mov
ja
and
aaa
jne
dec
inc
shrb
les
stos
fsubr
test
adc
data16
sbb
pop
jnp
and
xchg
out
fwait
mov
fs
mov
pop
push
test
cli
lods
inc
mov
fadds
outsl
icebp
nop
cmpsb
gs
jne
jnp
mov
xchg
cmc
mov
or
ja
sti
cmp
jnp,pt
std
push
inc
sub
test
loopne
bound
ret
iret
mov
int3
sbb
dec
repz
out
mov
add
xor
push
data16
sub
push
sbb
push
inc
dec
loopne
shrl
add
pusha
mov
cmp
mov
adc
out
dec
js
push
subb
cs
add
lret
jno
pop
mov
out
es
sub
xchg
ret
cmp
jg
sahf
ljmp
pop
mov
gs
and
mov
movsb
loope
jg
loope
lods
dec
scas
dec
xchg
inc
stc
nop
cld
xchg
xor
add
nop
ljmp
sbb
mov
xor
movsb
mov
push
loopne
dec
inc
negb
xor
xchg
push
sub
ror
repnz
cld
dec
push
dec
pop
xchg
outsl
sub
scas
sub
stos
fisubrl
and
mov
cltd
sub
lret
or
fwait
dec
add
cwtl
inc
cmp
push
movsl
push
jmp
add
jle
jmp
lds
imul
push
xchg
mov
mov
mov
ja
imul
push
inc
pop
pusha
je
aam
leave
cld
sub
outsb
push
mov
lea
out
into
push
movsb
push
pop
popa
shlb
ja
mov
leave
pop
inc
nop
mov
sub
mov
jnp
loop
sub
push
mov
xor
jo
push
sub
mov
dec
rclb
out
inc
out
movsl
rorl
or
rcr
add
aad
and
negl
dec
mov
lea
pop
cmp
dec
leave
imul
dec
xchg
imul
cmp
pop
cmp
or
push
mov
mov
sbb
popf
inc
pop
push
fbstp
in
shrb
or
xor
or
mov
addr16
bound
dec
into
out
push
add
movsl
mov
lret
int
inc
dec
fsubrl
enter
mov
cmp
rcll
fstl
push
and
sbb
mov
out
insl
mov
hlt
xor
out
cmpsl
sbb
pop
jp
mov
popf
aad
mov
out
into
fistpl
es
das
dec
mov
sbb
jl
inc
or
or
stos
out
inc
xor
mov
aad
mov
in
inc
addr16
xchg
inc
add
rorb
fs
in
mov
and
ja
repz
imul
mov
inc
hlt
xor
cwtl
dec
sbb
jmp
dec
and
xchg
pop
xor
add
and
xchg
mov
cli
popa
adc
daa
fwait
inc
in
cs
inc
push
loopne
mov
jmp
mov
andl
sub
sub
rcr
jnp
jae
push
adc
scas
add
inc
insb
lret
enter
inc
daa
add
loope
and
movsl
mov
jnp
pop
repnz
add
aam
inc
lods
sub
push
add
mov
add
aaa
xchg
mov
mov
gs
scas
emms
lret
push
pop
pop
mov
pmuludq
aaa
mov
cld
push
stc
mov
andl
cmp
ja
dec
in
popf
into
imul
jl
js
ret
testb
ljmp
xchg
pusha
push
mov
sbb
cld
mov
mov
inc
pusha
mov
jnp
sub
shrl
and
push
nop
test
add
pop
adc
inc
adc
test
ja
dec
mov
inc
add
adc
clc
or
xchg
xor
mov
jl
mov
shrl
push
sub
jp
ljmp
pop
pop
stc
ljmp
in
inc
xor
cmp
mov
lea
mov
aas
test
jle
sahf
mov
testl
lahf
repnz
inc
movsl
mov
sub
push
sub
or
mov
daa
add
nop
in
in
mov
lock
mov
gs
or
xchg
iret
or
aas
xor
or
sbb
mull
add
xchg
jnp
ror
sub
dec
jne
lea
orl
xchg
fidivrl
inc
movsl
inc
xchg
ds
popf
mov
add
cmpsl
and
in
pop
pop
loope
pop
and
movsl
mov
add
enter
repz
stc
jg,pt
cmp
push
ret
out
and
dec
sub
inc
cmpsl
pop
cmp
xlat
push
pusha
cs
add
popf
sub
imul
add
ljmp
dec
addb
mov
jmp
and
add
or
cld
jge
adc
push
mov
pushf
nop
divb
jo
in
inc
outsb
or
xlat
mov
xchg
fstpt
add
xor
ret
mov
pop
sbb
jnp
xor
ljmp
cs
xchg
lahf
or
insl
mov
call
enter
int3
cld
mov
popf
loope
nop
scas
nop
movb
mov
mov
jno
aas
fwait
lahf
inc
jge
mov
daa
mov
adc
lcall
rolb
mov
jb
jae
mov
cmp
iret
inc
lahf
mov
mov
leave
lods
inc
push
movsb
fsubrl
pop
dec
pop
imul
jle
or
addl
addr16
mov
cmp
inc
sub
test
sub
les
lods
pop
mov
mov
mov
jnp
sub
mov
push
repnz
and
aad
insb
fdivs
inc
sbb
mov
cwtl
outsb
sbb
mov
dec
adc
ds
or
and
adc
fidivrl
jecxz
rcrl
enter
jmp
push
ss
rorl
notl
out
outsb
js
call
or
and
cmp
pusha
or
arpl
in
shlb
xchg
cmp
jno
pop
pushf
sbb
loopne
mov
mov
aaa
or
andb
roll
insl
aam
cmp
cmpsb
mov
mov
xchg
inc
xor
rcl
push
dec
dec
movsb
rcr
cmc
icebp
adc
sub
push
xchg
mov
lock
mov
call
cmp
or
mov
push
sbb
test
adc
or
add
fisttps
add
je
out
xchg
mov
jns
lds
jae
or
pop
dec
hlt
xlat
sahf
xlat
mov
es
and
neg
cmp
fdivrs
repz
mov
lods
fwait
or
ljmp
sahf
sbb
push
pushf
mov
aas
mov
iret
rorb
in
cs
ljmp
mov
das
enter
imul
xor
sbb
idivl
in
xorl
jg
loope
adc
roll
fisubrl
xor
xchg
mov
aam
cmp
js
xchg
stc
inc
mov
cmp
push
pop
pop
cwtl
jno
stc
mov
or
sub
cmp
mov
shll
xchg
movsl
xor
lock
dec
dec
shll
lods
lahf
loope
mov
jo
loope
aad
aad
pop
scas
sub
xchg
sub
cmp
jnp
pusha
cmp
movsl
fildl
jns
xchg
repz
push
push
jno
aaa
mov
ret
in
in
adc
outsl
xor
jge
xchg
out
xor
sub
xchg
outsb
add
sub
inc
popa
jnp
shl
cs
pop
jle
mov
lock
jmp
loopne
test
or
pop
cmc
jg
in
cmpsl
stos
dec
test
inc
or
lret
into
lock
push
daa
and
enter
je
mov
mov
push
aaa
jecxz
push
negb
mov
sti
mov
pop
mov
popa
lret
mov
push
pop
pop
es
mov
ljmp
popa
out
xor
cmpsb
std
xchg
sbb
pop
cmc
lods
test
fimull
jb
cli
push
test
test
xchg
cwtl
push
lea
lret
xor
xchg
jno
push
mov
adc
or
leave
scas
xor
hlt
dec
sub
and
aaa
push
nop
mov
dec
bound
in
sub
pop
in
sahf
jno
shrb
jo
arpl
int3
xchg
xchg
popf
xor
xorb
bnd
lock
lds
or
push
aas
pop
push
int
lods
js
ret
jno
test
leave
add
sbb
andb
mov
add
xchg
sub
mulb
push
js
adc
jmp
push
es
mov
pop
inc
cmpsb
shll
lahf
push
insb
mov
jns
push
fidivs
lcall
hlt
sti
test
dec
jmp
jl
hlt
inc
daa
pop
stos
jno
repz
jns
lods
xchg
movsb
jns
pop
add
scas
mov
inc
mov
inc
imul
pop
cmp
movsl
mov
es
mov
fcoms
loop
mov
js
dec
cmp
cmp
cmp
test
ret
je
movsl
and
xchg
pop
enter
add
adc
and
add
add
std
lcall
les
shl
mov
cmpl
stos
xchg
enter
mov
and
std
mov
in
jb
dec
ret
or
lock
add
jg
cmc
je
and
sub
fnstsw
cmp
jb
ljmp
jbe
andb
call
arpl
sub
test
jno
mov
mov
js
push
sti
imul
xor
push
jmp
and
push
scas
shll
sbb
pop
popa
fcmovnbe
in
fisubl
pop
je
inc
jge
into
inc
and
mov
idivb
add
sti
loope
add
shlb
jbe
and
lds
add
mov
sahf
xlat
mov
add
cmpsb
xchg
in
pushl
adc
xchg
pop
inc
scas
sbb
inc
in
mov
inc
jns
pop
cmp
repz
pop
into
xchg
dec
test
lret
and
push
inc
out
lods
cli
sbb
out
loope
out
push
add
pop
dec
sub
and
push
out
fstps
imul
sub
jp
add
xchg
cltd
and
test
or
imul
call
mov
stc
adcb
pop
es
adc
call
subl
pusha
imul
and
jmp
stos
cltd
cs
ss
fnsave
jb
cwtl
mov
out
pop
aad
and
lock
lahf
sbb
cmpsb
sub
jecxz
mov
ret
pop
xchg
int3
pop
jno
jecxz
jbe
test
inc
jmp
push
mov
inc
xor
mov
out
sbb
mov
cmp
outsl
mov
or
mov
loopne
cmpsl
rorb
pushf
lahf
xor
cmpb
movsl
jb
hlt
scas
mov
pop
movsb
es
icebp
and
and
sub
pop
mov
ja
lcall
jecxz
loope
sarb
jecxz
push
inc
sbb
sahf
mov
sti
pop
push
dec
xchg
jle
xor
and
out
push
inc
adc
enter
jno
xchg
imul
leave
je
icebp
jg
ja
sbb
es
addr16
and
cmpsl
aad
jecxz
push
xor
xchg
sbb
cmp
sbb
imul
test
push
inc
xchg
cs
ja
or
popa
mov
sbb
mov
mov
test
jmp
push
fidivs
cli
imull
xchg
mov
xorl
mov
or
push
dec
mov
cmpsl
ljmp
cmp
pop
push
mov
nop
jecxz
inc
xchg
adc
ljmp
cmc
pop
fsub
sbb
mov
cmpsb
faddl
lahf
push
scas
andb
sar
testl
dec
sbb
addr16
lcall
add
in
insl
inc
aam
icebp
les
sbb
mov
jmp
jo
cmp
cmc
roll
mov
outsl
or
inc
push
or
sbb
outsb
dec
xchg
call
dec
sub
sbb
inc
sbb
xchg
jp
jge
xorl
das
nop
pop
push
mov
les
out
sarb
mov
push
ja
dec
clc
cmp
repz
and
sbb
sub
inc
jge
cs
push
dec
cli
xchg
push
sti
xchg
dec
adc
cmpsw
lods
add
mov
pop
nop
and
sub
icebp
adc
ror
pop
inc
xor
insl
mov
pop
lods
xchg
push
push
push
cmp
jp
mov
ljmp
andl
dec
sub
pop
fcomps
rorb
sbb
pusha
pop
sub
andb
fildl
mov
shrb
sar
lock
leave
lea
nop
orb
mov
cli
enter
clc
clc
aam
xor
jne
inc
jmp
cltd
mov
mov
push
pop
insb
xchg
lahf
mov
mov
loopne
adc
mov
adc
jns
in
xchg
rcl
sub
fs
dec
repnz
dec
ja
cmp
mov
imul
ret
loop
add
subb
lret
in
call
repnz
xor
xor
pushf
out
cmp
cmp
mov
cmp
mov
or
in
mov
sub
int3
push
add
sbb
jae
inc
rcrl
jnp
stos
les
ja
xchg
mov
sub
pop
repz
insb
pop
call
inc
les
cmpsl
jg
out
xchg
scas
in
cmp
out
xchg
pop
cmp
and
rol
rcll
dec
test
inc
sbbb
ss
xchg
push
enter
mov
cld
push
cmp
mov
cmc
push
das
push
cmp
ret
inc
popa
pop
adc
sub
lret
sbb
adc
jp
add
sti
sub
jnp
pop
xchg
xchg
sbb
pop
xor
ret
sub
aas
mov
add
fs
jno
sub
out
xchg
inc
mov
lret
mov
add
jnp
inc
pop
jecxz
stos
cltd
lds
or
fwait
loope
adc
lock
mov
gs
dec
movsb
fdivl
std
jmp
sub
pop
push
mov
pop
inc
cwtl
ja
mov
jbe
dec
insl
fnstenv
sbb
inc
xlat
sbb
icebp
pop
mov
push
out
jle
sub
pop
cs
cwtl
cmp
daa
loope
sbb
inc
into
inc
or
jge
pop
in
and
popa
ficoml
xchg
mov
dec
imull
adc
lods
fidivl
dec
and
repnz
jbe
xor
jl
push
fcomi
push
lret
int3
push
fwait
xchg
addl
inc
sub
je
dec
adc
icebp
sub
mov
jmp
sti
adc
cmc
sahf
sub
popf
adc
lret
jp
bound
mov
inc
push
hlt
icebp
dec
add
movsl
jge
stos
ficompl
cmp
dec
xor
xchg
out
add
sti
mov
inc
jg
sub
orl
cmp
jp
arpl
aam
xchg
mov
sbb
or
sbbl
adc
and
jbe
sbb
dec
outsl
nop
sti
shlb
mov
das
inc
or
pop
daa
sbb
in
outsl
ss
push
stc
scas
out
cmc
push
adc
add
mov
pop
cli
pop
lods
enter
and
sub
fcoml
int
loopne
mov
xchg
pusha
sub
jmp
lods
sbbl
mov
dec
inc
xchg
ljmp
dec
stc
popa
and
mov
xchg
insb
in
pop
inc
shlb
cmp
dec
jmp
lret
hlt
jb
popa
out
addr16
cld
imul
cmp
jge
arpl
lock
inc
pop
mov
dec
std
enter
xchg
shr
lcall
xor
clc
movsb
and
pop
cltd
bound
jle
mov
mov
aad
fmul
mov
push
loopne
dec
push
inc
ja
adc
sbb
sub
jmp
adc
lea
int
dec
mov
lods
out
pop
add
fs
rorb
jb
push
xchg
adc
sbb
jo
fcoms
and
and
push
xchg
loopne
pop
inc
dec
jbe
jo
or
sbb
loop
adc
fisttpl
jle
mov
rol
loope
push
imul
and
lahf
movsl
popa
sbb
test
lret
or
jbe
mov
test
fisubrl
and
dec
jae
dec
insl
lods
jg
fldcw
or
adc
call
sub
jne
adc
mov
mov
xor
jecxz
mov
jae
add
pop
repz
sub
fidivrl
icebp
sub
and
pop
cmpsb
mov
fs
jle
add
nop
daa
cwtl
inc
add
insl
add
push
leave
clc
lock
outsb
sbb
sarl
pop
sahf
ljmp
dec
pop
stc
filds
jno
ret
inc
cltd
push
push
adcb
mov
adc
lcall
ja
aas
movsl
test
aam
stos
sub
mov
out
in
xor
and
jmp
das
push
push
mov
rep
jae
jp
fldt
mov
ljmp
std
jno
dec
ret
push
sbb
cli
adc
push
int
pop
les
pop
jmp
daa
in
dec
cmp
decb
sub
jl,pn
jbe
add
sbb
les
sarl
call
jo
jno
rcrb
fisubrl
fsubs
daa
mov
repz
test
jns
jno
lcall
ss
lret
stc
fnsave
repnz
mov
sub
cmpsb
add
lahf
jp
pop
shlb
mov
hlt
dec
add
pop
sub
cltd
xor
roll
rcrl
sbb
xchg
xchg
push
leave
out
int
xchg
xor
push
clc
aaa
mov
cmpb
nop
jge
xchg
mov
mov
cmp
jae
enter
sbb
push
bound
mov
adc
movsb
repz
fnsave
je
fisubs
jle
scas
out
sub
inc
xchg
mov
push
inc
das
jo
dec
dec
mov
inc
test
jb
loop
stos
jnp
shl
lea
adc
sbbb
adc
dec
xor
stos
outsb
fldcw
fcompl
dec
adc
push
push
imul
leave
rep
dec
xor
or
roll
add
push
int
sti
or
push
adc
sahf
push
int
iret
cmpb
incl
xor
cli
pop
jne
fcomps
jge
adc
mov
pop
sub
cmp
dec
inc
or
pusha
sbb
cmp
cld
cmp
adc
lods
outsl
mov
cli
and
push
cmp
jbe
lret
push
push
ss
out
fs
gs
daa
pusha
xchg
imul
push
cmp
movsb
repz
add
repz
pushf
fnsave
lock
dec
jecxz
test
in
add
pop
pop
jno
lods
sbb
sub
or
rorl
pop
fisttps
loopne
fstpt
cmp
mov
loope
mov
mov
cmp
outsb
push
or
daa
pop
sti
jno
xor
sbb
add
aad
inc
shll
xchg
icebp
adc
not
repz
and
das
test
push
inc
ret
dec
cld
mov
inc
fcomip
or
xchg
cltd
mov
aaa
clc
jne
out
jno
shlb
rcll
inc
mov
cmp
imul
test
arpl
mov
outsb
fsubs
fwait
dec
push
cmpsb
or
adcb
dec
lock
dec
mov
push
divl
mov
jns
adc
push
out
sub
mov
cmc
popa
sbb
lret
bound
mov
push
repz
or
dec
in
loopne
mov
cwtl
and
test
xor
xchg
dec
imul
enter
dec
in
popf
sbb
cmpsl
fwait
jnp
fucomip
out
fiadds
inc
pop
test
das
daa
xchg
daa
jmp
stos
cmp
inc
or
adc
xchg
jl
mov
adc
pop
mov
enter
mov
inc
mov
shll
and
fsub
or
push
xor
xchg
adc
stc
inc
loop
xlat
pop
cmpsl
aam
push
mov
jp
fldcw
push
rclb
pop
pushf
add
jo
cld
sarb
loope
cmp
or
xchg
cwtl
sbb
mov
xor
cmp
mov
xor
mov
clc
push
test
or
jg
in
cmpsb
inc
dec
shrl
imul
imul
cmp
icebp
rcrl
cmp
not
mov
jecxz
jecxz
push
adc
jb
ljmp
mov
out
push
sbb
push
push
gs
jg
js
cmp
mov
cmp
adc
xchg
das
into
imul
inc
stos
mov
daa
insl
mov
cli
push
nop
idiv
push
mov
mov
inc
push
pop
jge
loop
cmp
sbb
and
jge
xchg
sub
jb
fcoms
mov
call
addr16
or
xchg
repnz
int
xor
inc
leave
push
pop
adc
in
push
add
jb
inc
push
rcr
mov
jge
fcomp
mov
out
xlat
lcall
imul
stc
sarb
xor
cmp
inc
or
dec
push
fadds
pop
ret
mov
xchg
aam
jge
lock
adc
dec
out
dec
mov
mov
push
repnz
push
jp
aam
and
push
xchg
pop
out
clc
pushf
mov
aam
push
dec
xor
lcall
push
jmp
ja
aad
jg
mov
push
or
mov
popf
or
lahf
push
outsb
pop
lcall
lods
repnz
jno
into
pop
or
mov
add
fidivs
mov
or
pop
rolb
icebp
cmc
stos
popf
mov
mov
bound
mov
popf
inc
pop
adc
xchg
imul
je
dec
sbb
call
lds
xor
sbb
mov
std
xchg
inc
mov
xchg
push
or
push
xchg
in
add
int
cmp
sub
ret
sbb
fsubrp
std
pop
rcrl
mov
inc
mov
ss
sub
dec
sub
pushf
jo
and
pop
adc
not
sbb
add
or
xchg
jmp
mov
adc
adc
mov
fidivs
fldl
mov
inc
mov
rol
jg
xor
fcoml
cmp
pop
xor
ds
lods
push
mov
aad
aaa
incb
xchg
cltd
std
stc
xor
cs
jnp
dec
cmp
lods
repnz
ficompl
mov
pop
mov
inc
mov
fidivrl
clc
insl
adc
adc
das
pushf
jmp
js
movsb
outsb
push
ljmp
outsb
jns
sub
rorl
ss
dec
adc
mov
adc
aam
in
in
orl
pop
scas
mov
stc
dec
int
cli
jmp
loop
ss
push
xchg
mov
xchg
dec
scas
or
test
mov
push
sbb
adc
inc
xchg
subb
cmpsl
mov
fwait
xchg
icebp
mov
incb
mov
hlt
xchg
xor
xchg
ds
into
andb
add
ds
or
mov
xor
addr16
lods
mov
stos
mov
push
xor
lods
jecxz
scas
jno
aas
sbb
int
cmp
pop
fdivrs
inc
inc
dec
sbb
jno
and
test
xchg
in
and
je
pushl
pop
xchg
mov
out
xor
sarb
add
sub
mov
cmpb
and
mov
ss
dec
xchg
rdtsc
jg
xor
mov
adc
aam
jno
ds
cltd
fnop
je
xchg
cs
loopne
xchg
jl
test
std
mov
mov
jmp
test
cmp
test
stos
test
xlat
jecxz
loopne
pop
or
stos
cmpsl
dec
inc
mov
out
addr16
aad
or
fstpl
mov
test
push
sub
enter
xchg
scas
mov
push
xor
add
ljmp
subb
mov
arpl
sub
push
lock
scas
into
adc
mov
je
mul
xchg
pop
xchg
pop
pop
push
xchg
push
out
test
add
fdiv
test
mov
jecxz
ds
int
push
lock
shl
xor
fimull
sbb
xchg
sub
inc
sbb
and
dec
jne
outsb
mov
sbb
adc
add
mov
fidivl
bswap
sub
push
jns
xchg
cmp
stos
repz
or
push
push
sub
sbbb
nop
cli
sbb
rdtsc
nop
pop
sbb
lods
lcall
jge
and
xor
and
pop
push
or
or
outsl
sti
movsb
dec
dec
dec
mov
test
shll
movsb
iret
sbb
jb
in
out
stos
or
cmpsl
sub
imul
imul
sbb
jecxz
lock
sub
mov
pushf
sbb
in
sbb
daa
xchg
ret
push
imull
dec
insl
ja
cwtl
inc
xchg
ret
fs
sbb
mov
mov
mov
dec
mov
in
sahf
mov
out
cmp
push
bound
mov
cmpb
addr16
and
mov
out
cmc
sar
jno
insl
pushf
das
push
lds
repnz
and
or
data16
push
dec
int3
sti
std
enter
addl
les
and
jg
mov
pause
ljmp
movaps
lret
pop
repnz
jl
sbb
cmpsb
pop
rcll
jecxz
jns
into
or
bound
in
mov
insl
fsubl
pop
lods
adc
imul
and
xchg
hlt
or
mov
leave
out
in
daa
outsl
jne
cld
ror
xor
mov
jmp
mov
mov
fucompp
pop
shl
add
jo
add
leave
jge
mov
in
out
mov
incl
cld
inc
jns
bound
jae
mov
mov
in
cltd
in
xchg
test
pushf
xchg
imul
loope
hlt
lahf
mov
pop
add
notl
pop
or
mov
push
adc
cmp
sub
imul
pop
std
add
cli
mov
mov
mov
fiaddl
or
xchg
aas
xchg
test
test
jecxz,pn
or
xchg
aaa
jno
mov
xor
jl
jmp
sub
cmpsl
adc
sbb
adc
inc
push
hlt
loope
add
xchg
and
iret
or
mov
sub
jge
jecxz
stos
out
std
int
mov
imul
ds
divb
not
rcl
test
jmp
xor
pop
or
in
sub
xchg
jge
fcoms
paddb
cli
jbe
movsl
repnz
push
fsub
pop
and
dec
pop
dec
loopne
push
les
add
xchg
scas
mov
inc
inc
ret
mov
jb
call
pop
adc
enter
adc
and
push
or
lock
mov
jle
xor
bound
adc
adc
test
fistpll
das
mov
dec
dec
fmull
iret
push
nop
mov
mov
lea
sub
mov
ljmp
loope
fidivrs
adc
cmp
testl
dec
leave
shll
push
xor
adc
add
addr16
out
mov
rclb
mov
mov
fidivrs
in
test
inc
fstps
stos
icebp
test
les
xor
mov
jmp
popa
dec
and
aaa
int3
test
mov
movsl
scas
jl
fld
int
mov
cmp
add
rcrb
mov
add
scas
pop
imul
les
je
adc
rorb
loop
cmp
fldl
out
dec
cmp
dec
pop
jl
mov
fstp
or
fs
ja
pop
mov
cmp
push
xchg
pop
popf
or
es
cmp
fs
inc
cmp
js
rorl
je
rorl
mov
cld
movsb
push
out
jle
jnp
in
jae
mov
jnp
xor
jns
xor
icebp
push
loopne
ds
push
inc
inc
xlat
mov
pop
fs
push
xor
aas
push
inc
repz
mov
xchg
out
push
out
popf
lret
test
pop
and
mov
pop
adc
and
call
pop
fists
jge
or
sbb
jle
ficompl
sbb
sbb
out
lahf
cltd
shr
jne
pop
xchg
orb
mov
lock
push
lods
scas
or
cmp
in
jmp
call
mov
xor
mov
dec
fs
in
lret
dec
loope
sbb
jle
aas
mov
cltd
or
sub
mov
dec
push
inc
int3
pushf
int
mov
lods
xchg
add
mov
je
rcr
iret
sub
idivl
stos
into
jne
cmpl
loopne
in
sbb
push
dec
inc
dec
ljmp
jbe
lahf
cmp
jmp
push
and
out
xchg
pop
lods
in
sahf
adc
mov
push
add
fcmovu
sbb
or
fs
inc
test
push
loope
or
ja
mov
jmp
push
scas
dec
or
sbb
out
add
mov
push
xchg
cmp
dec
push
repnz
push
mov
xlat
dec
movsb
sbb
in
adc
jge
add
jae
xchg
push
test
cmp
in
inc
in
nop
jb
hlt
outsl
push
xchg
sub
call
nop
jo
cmp
jne
xor
fmul
mov
adc
mov
fldl
cmp
add
xor
mov
cwtl
lods
pushf
jg
arpl
and
or
cmp
addr16
sub
outsl
ds
inc
das
cmp
ret
mov
adc
push
and
xor
mov
xchg
inc
lcall
push
arpl
inc
push
aaa
dec
in
dec
ss
add
add
scas
idivl
rolb
insb
mov
sub
pushf
ret
mov
test
cs
stos
cmp
dec
jg
fnstsw
lcall
or
push
add
aad
sbbb
andb
push
in
and
das
xchg
daa
lods
mov
loopne
mov
scas
inc
fbstp
mov
lcall
lret
jmp
pop
jge
sarb
mov
in
into
insl
push
test
out
lea
repz
sbb
jmp
js
push
out
xchg
sbb
stc
jge
mov
mov
inc
das
cmp
inc
rolb
subb
xor
xor
dec
cli
or
fisttpl
or
add
outsb
lret
sub
outsl
jb,pt
push
aas
inc
fimuls
cmp
sub
int
int3
icebp
aaa
dec
inc
mov
test
add
jb
sub
jno
scas
cmpsl
int3
xchg
in
or
mov
cltd
or
sub
adc
lret
inc
pushf
outsb
cvtps2pd
loop
xchg
out
loope
add
and
test
mov
lods
pop
inc
push
dec
push
jae
outsb
dec
add
movsb
push
push
mov
pop
inc
xchg
xchg
xlat
xlat
cmpsb
imul
dec
fsubrs
jg
std
mov
in
inc
rorb
sar
test
pop
cli
je
inc
sbb
dec
ds
je
jnp
pop
bound
dec
dec
data16
sub
or
push
sbb
mov
out
shlb
add
imulb
fs
push
and
mov
mov
cltd
lods
cmc
mov
cmc
gs
gs
sbb
xchg
sub
cmc
ret
sub
rdrand
lods
scas
sub
call
inc
mov
dec
pushf
jnp
inc
fwait
popf
mov
loope
mov
push
out
inc
add
push
cmpl
call
andl
inc
or
or
push
repnz
xor
mov
mov
shlb
aam
inc
mov
cmpl
xor
lahf
mov
repnz
jmp
inc
incb
gs
stos
push
dec
bound
xchg
xchg
idivb
notl
mov
rorb
add
jg
mov
cld
insl
or
mov
pop
xor
rcrb
or
popa
gs
xchg
cs
push
cwtl
mov
lret
jl
data16
mov
mov
aas
cmp
and
mov
cmp
sbb
cmp
sbb
ds
push
pop
std
push
lret
int3
int3
das
out
ret
add
and
dec
mov
aam
stos
cmp
cli
rcr
add
adc
pop
mov
push
fsubp
xor
and
xchg
inc
push
ds
aad
jecxz
incb
iret
or
mov
cmpsl
jne
dec
pop
cmpsb
lods
jmp
ss
les
insl
cmp
lret
das
pop
xchg
xchg
sbb
out
and
cli
outsl
jp
xor
push
cltd
mov
aad
insl
shr
pop
fwait
out
add
psubsw
mov
rep
inc
xor
or
fstpl
jl
pop
sub
cs
pushf
je
fwait
push
dec
inc
jge
js
or
dec
popa
arpl
loopne
ds
mov
lret
and
adc
mov
xchg
mov
or
fistpl
ficomps
repz
mov
aas
mov
enter
sti
inc
push
pop
out
mov
sub
rclb
dec
lcall
push
or
xor
pusha
mov
xchg
sub
mov
add
test
lods
imul
pop
mov
dec
pusha
out
icebp
call
jnp
cld
in
outsb
sbb
in
fimull
ss
loopne
shlb
aam
add
iret
aad
leave
xchg
push
fisttpll
mov
mov
cmpsb
jbe
je
jno
or
push
stos
les
cmc
pop
lock
incl
sbb
callw
mov
imul
sarl
into
stos
mov
ret
int
sbb
hlt
jl
test
shrb
lock
pop
dec
fnsave
sub
sub
dec
inc
adc
lock
cmp
inc
lcall
sub
dec
push
jb
in
inc
pop
fdivl
jl
pop
xchg
fildll
pop
fidivrl
push
pop
sahf
data16
pop
imul
pop
push
mov
hlt
ds
push
int3
dec
dec
mov
subl
enter
lods
add
lea
lods
insl
mov
pop
mov
stos
gs
jmp
sbb
in
sub
ds
adc
or
mov
inc
mov
sar
insb
imulb
add
icebp
mov
scas
xchg
jl
inc
inc
std
pop
repz
repnz
test
sub
cmpsb
arpl
mov
xchg
push
iret
lock
call
stos
cmpsl
int3
dec
adc
sbb
mov
sarl
adcl
arpl
xchg
mov
rolb
outsb
sub
je
sub
test
add
sbb
inc
inc
inc
add
scas
mov
scas
inc
imul
int
aad
mov
xlat
jns
rcl
and
insl
jl
popf
ljmp
stos
incl
dec
mov
rol
add
mov
dec
sub
mov
repz
jb
lds
inc
repnz
ffreep
lock
cltd
sbb
jbe
aas
repz
lahf
mov
xlat
fcompl
cmp
adc
push
cld
xor
int
cmp
adc
repnz
test
std
sbb
mov
jns
pop
fwait
mov
add
xchg
dec
clc
inc
push
xor
ds
add
sahf
repnz
sub
and
push
les
dec
or
test
loope
xchg
sbb
adc
mov
sahf
scas
xchg
xchg
ret
das
and
jle
movsl
sub
push
and
aam
movsl
mov
arpl
test
test
fsub
push
add
pop
mov
clc
jb
pop
mov
jg,pn
lods
stos
js
mov
xchg
inc
or
sub
cmp
push
clc
lock
cmpsl
fwait
lret
or
push
inc
insl
stos
cmp
fwait
pop
push
and
dec
das
mov
imul
int
je
popa
pop
or
rorl
inc
mov
fidivl
mov
out
sarl
and
sub
xchg
stos
xor
xor
jmp
ja
pop
pop
or
call
pop
loope
xchg
js
aas
cmp
and
lods
ljmp
xor
push
pusha
insb
fs
xor
scas
js
sbb
inc
xchg
aam
push
mull
mov
mov
in
ret
xchg
ja
sub
xor
aam
jp
rcrl
cmp
bound
add
out
rorl
dec
xor
mov
and
mov
in
and
jnp
xchg
push
in
call
into
add
int3
stc
movups
cmp
jnp
push
leave
jmp
push
cmpb
outsl
mov
mov
fsubrp
or
shr
xchg
cmpb
push
popa
dec
pop
sub
cmp
nop
filds
push
ficoms
pop
sub
lods
test
orl
clc
popa
cmp
fmull
mov
out
ss
mov
xlat
xchg
repz
inc
push
fldt
daa
adc
push
cmp
js
idivb
arpl
gs
cmpsl
sub
add
or
loopne
jnp
scas
push
insb
out
fadds
fisubrs
sub
push
pop
out
aas
mov
add
jns
mov
xlat
inc
jge
addps
sbb
sbb
dec
je
rcr
push
jae
mov
cmp
lods
es
cwtl
mov
mov
inc
fcomip
call
push
lahf
cwtl
push
xchg
scas
or
nop
in
dec
and
rcll
rorl
adc
jno
cld
adc
das
movsl
scas
call
mov
loopne
sbb
pop
popf
mov
push
dec
push
dec
pop
adc
outsl
aad
js
outsl
pop
inc
fadds
jmp
xchg
jo
in
inc
add
pop
sbb
pop
sbb
out
fildl
fs
shll
dec
pop
or
ds
popa
mov
test
sbb
pusha
push
xchg
cwtl
lods
roll
shr
pop
cmc
dec
sbb
adc
push
push
fistpll
repz
pop
pop
xor
sar
sarb
insb
push
dec
mov
and
into
jmp
jecxz
sub
add
imul
scas
cmp
and
sub
xor
xchg
fnstenv
movl
movsl
adc
push
xor
xchg
or
movsl
xchg
jmp
js
inc
aad
adc
xchg
aaa
lods
pop
mov
xor
pop
sub
adc
xor
aad
ret
adc
push
pop
cld
add
mov
dec
shl
out
xchg
lret
int3
cmp
dec
jg
push
lret
in
int
xchg
fwait
lods
fs
xor
or
inc
push
movsb
mov
dec
jnp
movsb
cmpsb
mov
pop
lods
xchg
mov
sarb
pop
je
pop
adc
mov
cmp
mov
ss
fs
jmp
dec
scas
fmuls
in
mov
movsb
xor
adc
mov
dec
data16
push
jg
outsl
add
xchg
call
push
mov
test
sub
mov
fdivrs
insb
sahf
add
sarl
fbld
rclb
aam
pop
lret
fadds
dec
in
xor
ja
jae
xchg
frstor
mov
mov
mov
outsb
ds
cmpsl
inc
jo
shlb
popa
xchg
inc
xchg
sbb
and
shl
jnp
add
adc
sub
insb
mov
jg
mov
push
aas
mov
jne
add
xor
pop
cmp
mov
push
jecxz
movsb
icebp
and
fdivl
sbb
cmp
xchg
mov
js
and
add
add
jno
xor
cmp
sub
xchg
ss
loopne
xchg
pop
movsl
xor
les
push
jne
lcall
jno
inc
int3
and
mov
xchg
out
nop
aaa
pop
jae
sbb
mov
pop
test
xchg
push
lret
push
idivl
repnz
push
jge
sub
pushf
mov
adc
and
and
out
clc
push
lcall
pop
inc
adc
or
sti
cmp
sarl
aam
xor
in
or
jo
fbstp
xchg
dec
fsubp
and
mov
sub
into
xor
fwait
pop
mov
add
mov
pushf
xor
cmp
push
jnp
in
cmc
and
testb
sbb
pushf
aam
cmpsl
sub
push
je
push
sub
mov
pushf
cmp
inc
stos
push
nop
into
add
rcll
mov
sbb
fs
into
decl
adc
dec
dec
aaa
ljmp
add
cltd
mov
decb
inc
ror
pop
add
cli
inc
inc
or
ret
sub
lea
xchg
mov
push
and
popa
adc
jmp
sbb
outsl
xchg
and
loop
xchg
cmp
out
cmp
lret
adc
popa
shlb
push
aaa
in
movsb
mov
and
push
int
lock
es
xlat
in
mov
jp
mov
dec
hlt
dec
pop
es
das
dec
cmpb
xchg
cwtl
sub
in
and
test
inc
inc
fcompl
stos
inc
imul
shl
push
stc
dec
in
in
shrl
lahf
and
xchg
aaa
out
mov
mov
fcmovne
and
out
inc
bound
bound
mov
sbb
sub
xlat
ret
movsl
and
lahf
xor
les
adc
sub
mov
gs
cmc
mov
cltd
scas
bound
lock
xchg
dec
add
cmp
les
push
test
pop
es
mov
aad
dec
mov
ret
leave
pop
dec
mov
int3
adc
test
push
cmpsb
lds
dec
inc
cmp
pop
loop
or
jno
dec
mov
cmp
cmp
push
test
data16
das
les
bound
lcall
mov
mov
icebp
cmp
pop
jnp
inc
xor
filds
scas
fnclex
cmp
aas
jle
mov
lret
scas
std
jecxz
or
int3
int
outsl
arpl
adc
add
push
popa
cmpsl
aam
loop
dec
sbb
dec
jmp
std
xor
loop
popa
cmpsl
test
mov
sub
daa
push
mov
leave
xor
add
add
mov
add
push
int
and
and
xchg
int3
and
scas
mov
mov
stc
out
and
adcl
aaa
mov
mov
fildl
add
insb
lods
and
pop
xchg
shrb
adc
jae
jbe
js
in
adc
xor
jo
xor
scas
push
test
dec
or
jle
rorb
test
sub
mov
mov
aas
inc
sarl
aam
mov
push
lret
cmpsb
fsubrs
negb
iret
inc
mov
add
or
aam
and
mov
das
cwtl
shl
lahf
sub
xchg
addr16
jle
xor
push
in
ret
cmp
scas
outsb
push
adc
addr16
mov
fbld
fcomps
int
mov
sbb
ret
nop
sub
mov
icebp
js
in
push
out
idivl
in
or
rcr
pop
jmp
push
out
inc
mov
xor
jnp
shlb
cmp
out
jmp
or
hlt
pop
xchg
inc
in
xchg
loope
fs
mov
int
push
dec
xchg
dec
xchg
lds
in
jl
imul
rcrb
sar
xchg
xchg
insl
pop
sbb
das
or
ss
and
in
icebp
out
test
xlat
pusha
jne
xchg
cmpsb
add
into
shrl
das
mov
out
les
test
sub
fistpll
cmp
jp
jge
mov
nop
sbb
fidivrl
add
fstpl
sub
dec
insl
movsb
sti
cmp
movsb
xchg
mov
or
sbb
ds
out
xchg
ds
daa
sbb
sbb
es
cmp
neg
push
fxch
push
sbbb
sbb
sbb
cld
xacquire
mov
subb
leave
movsb
xor
cmpsb
xor
mov
cmp
mov
jmp
scas
rorl
dec
or
movsb
mov
lock
or
cmp
out
sbb
pop
adcl
movsb
xlat
xor
lret
icebp
dec
jns
shl
jecxz
sbb
push
sar
push
cmc
fdivl
enter
imul
fildll
int
cltd
aad
fisubl
fstpl
insl
jl
pop
data16
loope
test
das
cmp
xor
je
lods
add
inc
inc
or
mov
mov
movsl
call
mov
jae
icebp
mov
xchg
je
cmp
jge
mov
sti
inc
mov
xchg
jmp
jl
sub
das
mov
pop
aad
adc
sbb
shlb
enter
push
hlt
in
push
fisubrl
fdivl
jmp
pop
lods
icebp
xchg
mov
iret
loop
fs
jbe
leave
sub
cltd
push
sbb
inc
scas
adc
mov
fistpl
cmp
push
lods
ficoms
mov
jecxz
std
lds
sbb
mov
imul
mov
lcall
dec
fildl
cmp
fcoms
jbe
lcall
mov
cli
enter
inc
pop
sub
imul
push
mov
lcall
repnz
daa
pop
push
sbb
mov
dec
cmp
scas
sbbl
sub
adc
pop
ret
fs
adc
inc
dec
inc
mov
dec
jmp
lock
pop
add
jecxz
sarl
jae
cli
or
inc
lret
mov
outsb
icebp
push
popf
out
popf
pop
add
adc
or
mov
pop
push
lahf
mov
test
insb
lcall
inc
mov
dec
jle
and
popa
clc
mov
mov
jecxz
sbbl
push
add
sub
out
int3
fsubrs
fwait
sti
rep
rcr
xchg
in
xorl
xor
pusha
out
out
xchg
xor
fwait
arpl
adc
ds
subl
sub
pop
push
mov
lret
je
adc
stos
fs
adc
jmp
lock
leave
psubd
or
lock
call
mov
jne
inc
outsl
adc
dec
or
jo
and
mov
inc
push
fsubrl
push
push
les
sub
mov
andnps
sbb
lret
pushf
or
xchg
decb
dec
pop
cmp
sahf
aas
dec
enter
scas
dec
xchg
jnp
lret
std
dec
js
push
iret
out
jge
cmc
fists
jle
jecxz
lods
sahf
xchg
outsb
fsubs
pop
adc
sub
mov
cmp
mov
jecxz
rdpmc
adc
sub
mov
popa
popf
popa
jp
stc
mov
out
psrld
sbb
int3
mov
notl
lds
jb
pusha
mov
xchg
inc
cmp
pop
xor
call
divl
xchg
lret
or
xchg
and
das
aaa
sub
jne
ret
push
add
dec
pushf
outsb
stos
xchg
movsl
pop
pushf
cltd
sqrtps
adc
sbb
sbb
ja
lret
mov
ljmp
test
jne
imul
jge
inc
jle
xor
rolb
jnp
sbb
push
or
fistpll
and
rcl
cmp
push
cmc
adc
incb
cmp
lret
push
cmp
and
and
popf
inc
cli
sub
nop
mov
cmp
jle
lcall
outsl
jmp
loopne
mov
pop
xchg
add
lret
pop
inc
cwtl
fs
mov
int3
sbb
cld
pop
sarl
pop
mov
push
test
fisttpll
jne
add
enter
fdiv
add
bound
rcll
add
dec
cmp
aam
pusha
cmp
mov
mov
mov
test
out
mov
lds
push
xchg
xor
xchg
verr
mov
and
cmp
xchg
subl
loope
shll
aam
loop
mov
cmp
mov
ss
mov
jecxz
leave
jecxz
popf
or
pushf
mov
fcmovb
push
popa
sarl
add
pop
mov
stos
xchg
scas
dec
adcb
adc
push
cmc
jne
stos
fiadds
mov
dec
or
or
ljmp
das
dec
pushf
or
adc
pop
outsb
dec
inc
stos
xchg
lock
xchg
lods
call
filds
inc
pop
mov
sarl
fcomps
push
rorb
les
xchg
xchg
arpl
shrb
ficoms
xchg
mov
loopne
xchg
aaa
xor
loopne
cmp
pop
mov
repz
push
aad
test
lea
stos
iret
jp
cmpsb
scas
dec
je
mov
adc
cld
dec
movaps
std
jb
jae
test
inc
int3
pop
inc
jmp
and
outsl
mov
pop
push
mov
gs
fst
imul
outsb
mov
bound
pop
and
jecxz
dec
mov
cmp
imul
fnstcw
insb
stos
std
movsl
inc
sbb
js
mov
xor
cmpsl
lea
adc
sbbb
and
andb
stos
daa
fldenv
scas
pushf
mov
jg
int
dec
jg
stc
out
loop
pop
mov
les
adc
in
and
jne
test
pop
lock
out
jbe
xchg
adc
jmp
js
shll
jmp
sub
mov
aam
and
fsub
bound
stos
xor
insl
fwait
adc
cmp
enter
mov
testl
or
fstpl
push
jmp
xchg
dec
mov
adc
stos
dec
pop
nop
xchg
ret
mov
and
repz
push
data16
subl
test
cvtps2pd
movq
and
loopne
dec
shl
push
mov
or
insl
loopne
xor
mov
out
pop
fstl
rorb
mov
ljmp
gs
jg
xchg
leave
loopne
arpl
pop
enter
pushl
fdivs
jp
inc
iret
push
xchg
fstpl
loope
leave
mov
fs
pop
xor
jae
dec
fs
push
enter
popf
or
sub
pop
fistps
mov
pop
mov
mov
mov
sbb
push
rcrl
jne
xor
push
adc
mov
inc
cld
xorb
arpl
mov
jmp
add
jp
dec
mov
pop
jg
pop
adc
addl
in
aad
andb
pop
test
pushf
test
jne
imul
movsb
add
dec
cmc
push
shrl
data16
jl
pop
xor
pop
stc
mov
mov
lahf
adc
jecxz
and
push
inc
adc
out
inc
test
stos
out
dec
aam
jg
loop
mov
cmp
add
mov
xchg
push
aas
test
fs
inc
mov
dec
lahf
jo
test
call
add
pushf
push
sbb
or
in
into
divb
add
xchg
ficomps
into
cmp
aam
mov
jl
aam
into
dec
xor
movsb
lret
dec
lods
push
dec
mov
addr16
sub
cmc
pop
imul
push
push
fimull
or
lds
lea
fisttpl
lock
sbb
and
pop
xchg
adc
push
into
ret
test
sub
adc
cmp
inc
jmp
in
mov
xchg
fbld
repnz
sbb
xchg
mov
popa
fwait
ja
mov
lods
hlt
lret
push
jne
cmp
jns
fsubrp
cmp
dec
pop
lahf
sbb
out
in
loop
loop
ret
fcomps
sbb
xlat
jl
adc
mov
inc
int3
xor
aas
loopne
push
push
cmp
or
push
sbb
adc
mov
sub
outsb
pushf
iret
mov
outsl
adc
lret
jno
cmp
mov
imul
xorl
push
sub
insb
mov
jns
test
imul
test
dec
pop
out
fwait
or
fldenv
sbb
stc
jnp
and
imul
mov
pop
sub
mov
sbb
cmp
xchg
shrl
pushf
cmp
dec
lods
outsb
aam
ficompl
data16
mov
dec
push
pop
jae
dec
sub
psrlq
cmc
jmp
lods
out
jmp
inc
cmp
js
adc
fs
cmp
push
jge
inc
dec
mov
das
fdivs
or
popa
fildll
add
push
mov
adc
inc
pop
mov
and
sbb
iret
sub
testl
push
out
imul
sub
dec
push
cwtl
cmp
xchg
repz
mov
cmpsl
gs
scas
dec
xor
add
out
pop
outsl
and
cmc
icebp
adc
cmp
sti
pop
int3
lods
loopne
ret
out
arpl
ja
jno
ljmp
xchg
dec
imul
mov
mov
and
xor
cli
jge
int
bound
jne
or
nop
pop
test
in
jge
xor
sub
imul
mov
sbb
mov
clc
sub
pop
xchg
and
dec
rcll
shl
mov
inc
xor
pop
inc
mov
push
xchg
pushf
add
sahf
nop
xchg
test
scas
dec
mov
push
aam
xchg
mov
mov
inc
lret
jg
bound
and
sub
cld
cmp
fdiv
xor
jg
je
dec
sahf
sbb
lret
sbb
frstor
cwtl
cltd
cwtl
lahf
call
xchg
subb
lahf
stos
loope
mov
clc
inc
adc
pusha
mov
popa
dec
mov
cmpsb
mov
imul
or
mov
cmpsb
push
adc
inc
mov
ret
dec
xchg
pop
call
insb
xchg
mov
inc
xchg
lods
sar
mov
pusha
decl
icebp
xchg
mov
mov
and
jp
dec
pusha
pop
ja
push
add
push
stos
mov
jp
rcrb
cmp
mov
pop
lods
fiadds
push
pop
pop
pop
cli
imul
cmpsb
stc
pop
xchg
loope
lret
rolb
jbe
sbbl
jecxz
push
into
push
cmc
cmp
cli
loop
add
mov
sbb
lds
mov
jmp
inc
inc
pop
loope
scas
jecxz
fisubs
outsl
jmp
imull
push
xor
xor
mov
or
ficoml
pushf
sub
arpl
repnz
add
pop
mov
sbb
mov
icebp
fs
mov
pop
mov
xlat
dec
dec
ficompl
clc
fistpl
outsl
sbb
lods
sub
cmp
jle
jo
loop
daa
lds
sbb
dec
lods
clc
scas
xor
cld
out
add
enter
adc
test
adcl
cmpsb
pop
mov
mov
cmp
gs
xchg
mov
mov
or
push
mov
lret
or
jae
mov
sbb
ror
adc
or
push
mov
mov
ss
mov
add
mov
jp
sbb
xor
insl
inc
std
loop
sub
sub
pop
cmp
push
loopne
loop
out
sbb
stos
mov
mov
mov
int
inc
push
lods
mov
sbb
mov
mov
je
mov
loope
js
mov
mov
sbb
fidivrs
icebp
insb
lret
and
fstpt
pop
fs
mov
lds
mov
or
loop
icebp
or
or
dec
lret
sbb
movsb
aas
dec
loopne
out
cmpsl
sahf
sub
push
insl
cmpsb
pop
xor
xlat
outsb
xchg
xchg
testb
shrl
pop
xchg
pop
mov
mov
add
daa
pushf
dec
mov
cltd
mov
xchg
adc
dec
cli
mov
or
and
bound
push
test
xchg
jnp
rcrl
in
pop
inc
mov
and
jle
cmp
gs
fimull
aad
ror
xchg
cli
jnp
pushf
es
xchg
sub
pop
mov
pop
ja
mov
xchg
mov
imul
or
and
punpckldq
out
out
in
add
jg
rorb
movsl
sub
adc
dec
test
add
aad
lods
cmp
or
push
jbe
test
sbb
add
leave
lods
mov
xchg
lahf
into
add
test
adc
ja
out
lret
xchg
repz
adc
out
add
lock
adc
jle
xor
jb
mov
repz
sub
repz
in
push
mov
mov
jmp
shl
std
push
add
or
loope
lods
roll
xlat
stc
dec
les
sub
xor
test
dec
jmp
push
push
xorb
xchg
lahf
dec
out
in
sbb
and
fiadds
inc
aam
dec
jle
aad
adc
inc
cmp
push
mov
mov
xor
es
inc
daa
jmp
js
adc
lds
mov
cmp
nop
fcoml
sub
in
lock
test
mov
jl
fs
loop
je
jecxz
add
push
xchg
mov
imull
ffree
push
out
adc
jb
movsl
jo
xchg
stos
sub
int
or
lods
pushl
popa
dec
or
test
out
cmc
shll
aaa
inc
addb
mov
arpl
orb
push
or
and
ret
jo
ja
pop
xchg
mov
ficoms
cmpb
adc
mov
ds
shrb
jae
dec
in
subl
movb
xchg
imul
cltd
imul
cmp
mov
push
popa
mov
sub
lock
fldt
aaa
xchg
xlat
std
add
xor
sahf
jp
cmp
add
nop
push
int3
bnd
lcall
ds
ljmp
and
push
js
dec
cltd
jg
mov
insl
test
loop
xor
ljmp
cmp
sahf
std
push
outsl
xchg
and
aaa
fmuls
and
pop
mov
outsl
lock
and
jno
stos
lret
out
movsb
mov
jno
std
xchg
shll
les
push
push
push
push
sbb
aas
sub
xchg
or
je
cmp
cmpl
sar
inc
add
pop
iret
rolb
xlat
lahf
ficompl
mov
xor
dec
jg
mov
in
data16
fs
jecxz
out
inc
mov
jno
lock
xchg
dec
pop
shlb
pushf
inc
pop
jne
rcrl
movsb
popl
push
sbb
aad
push
in
shl
add
fimull
cmp
ds
insl
into
mov
mov
pop
and
sbb
dec
fwait
push
cmp
mov
lds
fwait
out
pop
and
divb
ja
inc
xor
in
scas
outsl
ss
xchg
mov
sub
sarb
mov
mov
xor
inc
je
xor
movb
call
mov
and
jns
nop
xchg
rolb
xchg
or
cmp
mov
cmp
mov
xor
jo
mov
leave
movsl
mov
mov
jg
cmp
pop
divb
jae
and
xlat
stos
fdiv
pop
int
fidivrl
add
shll
adc
ficompl
pop
cmp
iret
das
xchg
in
mov
xchg
movsl
mov
lds
mov
punpckhwd
push
fs
adc
sub
xchg
fisubrs
fmul
mov
pop
mov
sahf
mov
out
or
sbb
or
movsl
and
adcl
shll
popf
dec
loop
and
cmp
stos
add
mov
and
lret
dec
fmull
push
in
rolb
ljmp
out
imul
sbbl
divl
aaa
ret
hlt
sarl
xlat
and
inc
mov
mov
stc
xchg
test
and
jl
lahf
popa
pop
ret
aas
std
mov
orl
into
dec
data16
out
fsubs
fistps
xchg
aas
sub
mov
shr
mov
fstpt
pop
xchg
inc
inc
jge
aam
pusha
test
cmpsl
dec
arpl
jl
jg
jge
lret
sub
das
dec
push
jl
mov
out
shlb
jmp
jmp
push
sub
mov
sub
sub
iret
pop
je
and
lea
cmp
jb
outsb
sub
jb
negb
out
rep
int3
jns
push
mov
push
xchg
ret
push
pop
sub
or
loope
aad
dec
mov
jp
fcmovnu
int3
cmp
pop
mov
xchg
push
scas
lods
hlt
push
mov
mov
add
call
sub
lahf
sbb
jno
scas
sub
sbb
inc
cmp
add
or
inc
xchg
call
and
push
fcoml
imul
inc
and
bswap
cmpsl
stos
js
inc
shll
sahf
push
movsl
push
dec
push
fs
mov
in
xchg
mov
xchg
xchg
roll
fisubs
xchg
cmp
addr16
jnp
jno
in
sti
push
jne
and
and
jbe
push
sbb
fists
mov
pop
test
stos
pop
mov
lret
in
push
ja
sub
test
movsb
xchg
xchg
ja
adc
mov
cmp
sahf
cmp
add
jnp
lds
and
adc
test
in
popa
mov
jno
mov
into
pop
fimull
decl
push
mov
fisubs
lock
add
cmp
notl
mov
stos
mov
cltd
cmp
push
mov
cmp
das
icebp
in
popa
cmp
xor
mov
stc
mov
inc
xor
fs
outsb
mov
jbe
lock
adc
push
insb
adc
dec
outsb
xor
mov
xor
xchg
and
or
repnz
fstpl
cmp
mov
sbb
ds
rolb
fsub
jmp
ja
dec
mov
lods
dec
mov
fs
popa
test
insb
and
mulb
out
cmp
or
mov
mov
push
jmp
cld
xchg
mov
fsts
xor
or
lret
push
and
inc
pushf
pusha
xchg
clc
sbb
repz
sub
test
inc
add
jo
dec
cmp
lods
movsb
subl
mov
lahf
cs
testb
faddl
rorb
sub
test
ret
and
fnstenv
mov
sub
jne
xchg
mov
cmpsl
sbb
arpl
sub
adc
mov
xchg
mov
and
and
cmp
jno
jg
push
dec
lahf
mov
ret
dec
mov
stos
arpl
popa
stos
fcompl
inc
push
jp
mov
nop
out
mov
jp
shll
jg
insl
lds
sub
mov
repz
out
call
mov
test
adc
test
lcall
int
aam
mov
mov
lods
add
fildl
jae
adc
jnp
in
xor
scas
dec
movsb
xchg
cmp
sub
movsl
xor
pop
xor
test
rcrb
mov
orb
negl
js
popf
add
ret
in
in
jae
and
dec
rcrb
push
mov
in
pusha
mov
sub
xchg
mov
das
ret
mov
push
js
fldt
addr16
ficoms
pop
popf
mov
jo
std
dec
es
push
jle
sbb
push
cltd
mov
mov
adc
inc
arpl
jo
int3
dec
shrl
cmpsl
fdiv
sbb
pop
daa
insb
xchg
imul
nop
incb
fwait
aas
insb
inc
outsb
imul
dec
mov
jp
cld
sbb
mov
loopne
cli
or
out
xchg
inc
sub
push
push
scas
xor
rcl
mov
in
xchg
mov
push
mov
cmc
js
inc
xchg
dec
mov
loop
pop
out
sub
movaps
xor
iret
test
lret
cmp
push
xchg
and
inc
sub
sub
push
movsl
mulb
push
xor
andb
adc
xchg
addr16
stos
loope
add
mov
out
in
push
pop
call
inc
nop
insl
adc
sbb
loope
cmp
push
dec
es
cmp
mov
popa
push
cmp
push
ss
inc
scas
sahf
int3
outsl
cmp
mov
jg
jecxz
loop
xor
xor
pop
ret
lods
inc
push
mov
mov
pop
cmp
jl
in
adc
add
and
jg
cmp
lret
xchg
nop
push
sbb
dec
test
adc
call
xchg
inc
outsb
push
fiadds
hlt
dec
in
es
cmp
and
std
subb
dec
aad
pop
pop
aas
mov
or
popf
inc
mov
jbe
das
popf
xchg
push
cmc
sub
es
xor
xchg
xlat
cmpsb
cmc
daa
push
jns
gs
or
mov
cld
ret
xchg
mov
aaa
mov
or
xor
or
jbe
mov
sbb
mov
inc
out
mov
dec
iret
mov
inc
sub
pop
or
pop
add
push
inc
int3
xor
out
mov
testl
mov
js
inc
nop
sub
push
insl
fildll
les
lods
cwtl
mov
xchg
mov
ja
std
cld
push
xor
clc
push
test
xchg
fwait
and
jae
jp
sbb
aas
jns
cld
cmpsb
scas
jo
sbb
jp
arpl
and
pop
jg
or
inc
sub
dec
test
push
jge
cmp
rclb
pusha
in
mov
das
aad
xchg
in
cmpsl
jnp
sub
es
loopne
arpl
lea
mov
push
int3
adc
loopne
jo
stos
push
sub
xchg
mov
xchg
mov
sbb
dec
sub
icebp
push
mov
sub
daa
push
sarb
adc
xchg
pop
orb
add
and
pop
lret
cmpsl
xchg
stc
and
pop
mov
cmp
jmp
mov
idivl
fiadds
mov
and
cmp
fnstsw
mov
xchg
add
mov
adc
xchg
cmp
cmpsb
test
xor
std
test
jg
dec
out
inc
sub
pop
aaa
popf
out
lret
or
lds
daa
jb
push
orl
icebp
repz
fbstp
inc
mov
push
push
mov
rcrl
xchg
data16
or
cwtl
in
jnp
test
push
adc
fcompl
sbb
push
mov
scas
xor
ljmp
fadds
pop
outsl
js
or
das
insl
mov
pop
pop
out
outsb
adc
pop
xchg
or
inc
inc
fimuls
cmp
or
fstpt
dec
fsubl
in
es
jo
mov
add
xor
xor
mov
or
dec
mov
mov
xor
test
jbe
je
fwait
mov
inc
xchg
add
stos
inc
add
push
sbb
cmp
mov
nop
dec
das
xchg
orb
decl
scas
jae
mov
sub
call
cmp
add
andl
adc
xchg
movsb
enter
popa
lods
out
inc
push
sub
loop
inc
arpl
cmp
jp
xchg
movsb
pop
cmc
int3
fs
xor
scas
jno
mov
ror
test
dec
mov
pop
pop
int3
les
cwtl
and
and
sub
jns
jae
les
pop
push
cmc
out
es
inc
repnz
repz
pusha
jbe
push
and
rclb
test
pushf
xlat
or
data16
mov
or
fists
adc
adc
leave
lahf
adc
and
add
test
push
nop
in
js
sahf
mov
cmpsl
cmp
daa
push
cmp
das
stc
imul
stos
and
mov
inc
dec
stos
sbb
cmp
pop
repz
call
xor
xor
xchg
sub
cmp
dec
jno
hlt
jge
lds
shrb
lahf
or
test
mov
lcall
mov
inc
or
out
xchg
in
addr16
cmp
sahf
je
bound
ja
push
sbb
sarl
add
scas
test
jo
test
stos
lods
mov
aaa
xchg
pop
pop
pop
pop
enter
push
cli
data16
in
jmp
jecxz
dec
icebp
in
mov
xor
mov
lahf
nop
xorb
jl
mov
insl
cs
mov
das
in
cltd
pop
dec
sub
inc
jno
mov
xchg
fs
cmpsb
lods
rol
mov
lock
icebp
out
pop
pop
xchg
lock
test
popa
lods
fisubs
xchg
pop
fdivl
pop
daa
add
adc
roll
adc
sbb
mov
nop
add
insb
lods
inc
sub
sub
inc
icebp
jb
outsb
hlt
push
xchg
push
repz
enter
cmp
inc
bound
xchg
lock
push
test
lods
jmp
sub
cmp
mov
lret
rcr
loope
movsb
xchg
mov
push
es
xor
rcrl
loope
and
hlt
add
jecxz
jbe
aaa
sbbl
cmp
xchg
mov
adc
dec
sbb
add
aam
xlat
shl
rep
jbe
push
ret
jg
jo
cmpl
ljmp
movsb
mov
or
cmc
mov
xor
and
int3
jge
mov
lret
adc
lea
lea
push
jle
xchg
ss
ret
mov
mov
arpl
mov
xchg
ja
sti
inc
das
stc
cmp
jno
fldz
aad
pop
jnp
and
inc
mov
leave
loope
inc
sub
push
or
int3
add
cmp
movsl
dec
pop
xor
lods
in
movsl
lret
mov
jno
sub
aam
mov
cs
loope
sahf
xchg
add
mov
push
sbbb
push
repz
clc
cmp
dec
arpl
ret
cli
loopne
mov
out
fucomip
mov
xchg
push
daa
imul
xor
divb
adc
mov
ja
mov
pop
lahf
mov
bound
xor
mov
cld
push
xchg
inc
testl
mov
sub
sub
nop
mov
aad
lret
inc
int3
shrl
xchg
xlat
lods
xchg
inc
into
push
add
jge
ret
xchg
ja
jae
aaa
sbb
fadds
mov
cmp
and
in
fdivrs
int3
ja
mov
je
out
cmp
mov
movl
dec
or
stos
lods
mov
mov
xchg
in
push
addr16
mov
push
test
mov
icebp
ficomps
call
fildll
or
notb
mov
into
xchg
xor
mov
or
adc
arpl
sub
aad
lret
inc
dec
imul
fs
mov
mov
mov
outsb
adc
add
sub
daa
ds
les
out
mov
push
loope
lret
cld
xchg
push
sti
mov
xchg
xchg
lods
inc
fstp
or
push
or
mov
lods
cmpsb
aam
and
out
mov
repz
imul
loope
sbb
adc
pop
stc
adc
repz
test
out
in
mov
nop
push
add
pop
xchg
test
les
pop
mov
push
jle
dec
not
cli
int
cs
popa
sub
dec
cmp
dec
dec
and
enter
xor
mov
std
xor
mov
int
mov
testb
ret
pop
daa
rorb
and
jb
push
and
mov
mov
sbb
jb
int3
lret
cmc
push
repnz
inc
or
adc
xchg
mov
cmp
mov
fs
insb
rcll
sbbb
mov
movups
gs
jle
clc
inc
sub
mov
jb
push
and
lret
add
test
and
loop
inc
loope
out
xchg
cmp
lock
adc
test
rorb
shlb
jg
jmp
popa
adc
and
popf
inc
loope
imul
sub
jo
mov
push
sarl
adc
push
lods
out
mov
adc
scas
or
jno
inc
inc
pop
cltd
cmp
movsl
adc
jbe
adc
incb
in
xchg
mov
add
dec
or
mov
jp
test
mov
sbb
fs
movsl
lock
ja
mov
loope
ror
or
repz
jge
pusha
lods
jge
fsubs
mov
cmp
xor
mov
in
xor
outsb
push
add
sub
xchg
test
in
dec
sbb
fsubp
push
sbb
shll
xor
mov
popa
cli
dec
hlt
enter
test
dec
push
fsubrl
mov
cmp
inc
sbb
leave
insl
divb
repnz
mov
or
xchg
inc
clc
jno
lods
cmp
pop
cs
es
es
out
outsb
daa
daa
dec
push
pop
sub
mov
push
jl
es
jo
xchg
fdivs
inc
push
fs
adc
mov
insb
scas
sahf
xchg
dec
not
lret
cmp
aam
adc
ret
dec
nop
sbb
dec
sahf
es
lea
aad
scas
js
pop
inc
or
mov
outsb
or
mov
sar
sub
pusha
xchg
bound
mov
orb
inc
pop
mov
push
cmp
cmp
and
in
adc
fistl
or
push
push
outsb
push
mov
dec
mov
dec
rorb
insb
sar
pop
inc
out
rorl
fimull
insl
sub
xlat
mov
lods
lret
shlb
mov
sbb
jns
xor
cs
out
pop
stos
pusha
adc
sbb
jp
cmpsl
fldt
add
pusha
addb
in
mov
lock
inc
pop
jmp
cltd
sbb
cwtl
idivl
sbb
mov
inc
sbb
cmp
stc
sub
mov
xchg
push
xlat
es
cld
push
sbb
roll
pop
jb
lahf
cmp
cmp
ss
sub
daa
adc
xchg
sub
xor
mov
pop
jnp
xor
xchg
je
push
ljmp
pop
mov
sbb
and
loopne
ljmp
push
adc
test
and
fs
icebp
rorb
pop
mov
movsb
add
std
test
adc
push
lahf
es
movsb
rcrb
add
mov
or
std
inc
lea
in
inc
jbe
cmc
shrl
shlb
out
inc
inc
sub
jge,pt
pop
mov
aaa
movzwl
aaa
adc
cmp
lods
in
mov
js
andb
sbb
xchg
nop
xchg
mov
jb
mov
xchg
pop
frstor
push
lods
inc
and
inc
inc
vmread
cmp
mov
or
into
adc
in
mov
jl
fists
bound
push
mov
jb
fadd
insb
call
repnz
lahf
pop
and
fcoml
dec
sar
rorb
cmp
outsl
fistl
inc
aad
mov
out
push
or
fadd
popf
adc
pop
mov
mov
cwtl
enter
shr
mov
pop
xor
loope
nop
push
push
adcl
pop
stc
daa
cmpb
rorl
js
mov
lret
popa
xor
mov
jmp
lcall
lret
pop
and
lods
ret
lret
lea
sub
fcomi
jle
mov
aas
mov
pop
out
sub
aad
xchg
mov
in
sub
mov
pop
pop
mov
mov
mov
pop
mov
cli
pop
fsubp
and
popf
mov
icebp
cmp
incl
scas
and
lahf
scas
mov
lock
pop
fildl
or
mov
or
cli
mov
pop
jns
out
cmc
push
add
popl
jbe
cs
dec
inc
test
les
adc
lock
adc
push
mov
mov
je
fiadds
mov
jns
movsl
int
gs
push
inc
lods
in
sub
and
movsl
in
shll
dec
mov
mov
mov
jle
pushf
xchg
outsb
add
cmpsb
xchg
lods
jns
push
aas
dec
fs
inc
loopne
cmp
in
stos
push
and
push
insl
sub
adc
fldcw
data16
inc
cltd
ss
jae
in
pushf
popa
cmpsb
movsl
pop
testb
mov
cmp
add
sarb
jmp
cli
jns
add
outsb
scas
and
jo
rolb
sbb
mov
int3
adc
mov
push
outsl
or
imul
add
xor
dec
out
ret
mov
jle
mov
add
dec
xchg
push
repnz
movsb
cltd
jbe
inc
sbb
push
adc
pop
xor
sbbl
and
ret
imul
movsb
pop
mov
add
aaa
jne
insl
mov
ds
xlat
je
mov
call
xor
std
cmc
out
fs
pop
pop
lds
mov
adc
scas
push
cmp
rorl
sub
push
dec
mov
and
and
int3
sbb
or
mov
imul
mov
sub
mov
inc
mov
js
mov
cltd
and
pusha
scas
cmpb
or
out
fldenv
jg
aaa
push
popl
lahf
mov
ret
ljmp
pop
jg
add
loop
xor
test
jecxz
out
jns
sti
scas
loop
dec
loop
xor
xchg
test
adc
adcl
jns
js
dec
jp
icebp
jge
sub
loopne
adc
cmpsb
shrb
cltd
ljmp
ret
ljmp
ss
scas
mov
pop
jo,pn
lods
inc
fdivl
dec
mov
or
push
pop
shr
pusha
add
fnstsw
bound
adc
cmp
leave
in
out
sub
mov
add
pushf
in
jno
add
inc
ret
inc
pushf
jecxz
add
sub
or
int
sub
clc
ja
ljmp
dec
lahf
sub
std
or
and
jg
xor
pop
and
mov
sbb
mov
or
lds
insl
test
mov
push
cmp
push
pop
sub
test
push
sub
les
adc
fnstenv
test
fistpl
test
mov
mov
cmc
adcb
popa
stos
pop
xlat
sbb
lock
lahf
mov
fwait
xchg
sahf
sub
out
hlt
pop
cmp
loopne
loopne
stos
sbb
inc
imul
mov
push
dec
mov
inc
xchg
jg
hlt
pop
imul
jmp
mov
and
imul
xor
test
mov
jnp
push
and
mov
jecxz
cmc
test
int3
pop
mov
jne
test
pop
ljmp
add
addr16
dec
scas
jbe
lds
movsl
dec
cmp
mov
cwtl
jecxz
mov
or
out
push
pop
or
add
cmc
inc
popf
lcall
cmp
lods
and
mov
xor
push
sbb
cwtl
nop
xlat
inc
std
test
xor
jnp
into
xchg
test
into
dec
dec
lret
push
adc
stos
push
mov
scas
dec
mull
jle
outsb
into
mov
lods
in
int3
xor
pop
and
or
add
adc
clc
jl
out
or
and
mov
lock
lret
es
xchg
insl
adc
cmp
cltd
mov
scas
sub
xchg
mov
pop
aad
jbe
pop
in
lcall
mov
in
gs
mov
adc
xor
test
sti
lds
or
int
dec
int3
lea
pop
cwtl
add
jg
jo
decb
xchg
sbb
adc
xchg
adc
arpl
movsl
adc
loope
ror
push
int3
test
sbb
scas
mov
jbe
and
sbb
icebp
xchg
sub
lret
pop
jo
cltd
pushf
mov
aas
mov
imul
ret
push
adc
mov
fdivrp
scas
xor
popf
mov
push
out
insb
cmpsb
movsb
cs
decl
cwtl
push
mov
push
sub
jmp
xchg
sarb
cltd
movsb
sub
pusha
fiaddl
fistpl
push
mov
and
adc
and
inc
cltd
sub
cmc
or
dec
inc
mov
dec
dec
lahf
out
ds
mov
dec
lahf
xor
xor
mov
daa
sbb
mov
add
data16
jle
aaa
cmp
push
mov
int
popf
inc
sarl
mov
pop
xchg
rol
imul
xor
xor
add
sarb
sub
loop
les
mov
push
xlat
or
divb
test
sbb
inc
subb
cmp
subb
test
sbb
sbb
cltd
inc
out
xlat
fwait
jno
lea
cld
repz
pop
insb
iret
jmp
js
fisttps
repz
clc
dec
mov
in
pop
mov
out
mov
push
cmp
mov
pop
adc
mov
inc
hlt
dec
jae
sahf
mov
scas
xor
xor
sahf
push
aam
es
push
cmp
xchg
shl
mov
mov
xor
mov
negb
mov
or
fwait
paddusw
outsb
scas
int
jno
jmp
aam
sbb
movsl
jl
aaa
or
adc
daa
mov
mov
xor
jp
gs
popf
mov
jne
movsl
push
push
mov
icebp
lods
movl
adc
push
popa
ficoms
push
mov
rcrl
add
lret
or
dec
cmp
pop
pop
outsl
pop
dec
mov
in
orb
ret
rclb
into
xchg
inc
stos
call
mov
jns
or
xchg
insl
shrb
push
add
lods
add
out
xchg
out
out
xor
test
rorb
shll
add
and
ja
pop
jl
cmc
pop
dec
je
push
jp
lods
sbbl
dec
cmc
jp
mov
sti
subl
dec
call
sbb
in
cmp
std
push
sub
test
jle
in
in
fadds
test
or
insl
inc
push
pop
ljmp
pop
sub
loopne
pop
fmull
jmp
test
xlat
pushf
test
lea
aad
stos
fisubrs
mov
cltd
sub
in
push
xchg
in
xor
jmp
jo
mov
loop
push
inc
popf
int
out
and
lods
popa
insl
xor
ret
subl
sbb
mov
lretw
in
in
xlat
pop
inc
push
or
pop
arpl
into
dec
fmull
adc
ljmp
in
or
sbbb
outsb
push
xchg
int3
call
lret
and
mov
mov
push
insl
mov
push
incl
jmp
into
dec
mov
bound
scas
inc
pop
jae
sbb
int
adc
testl
out
xchg
sub
cwtl
jne
xor
cld
adc
leave
sbb
je
ret
jb
pop
jmp
lahf
dec
push
loop
sub
push
lock
dec
jecxz
jne
mov
imul
leave
ret
xchg
cmp
out
test
adc
ss
bound
xchg
fistps
mov
scas
jecxz
out
sub
push
jmp
push
dec
sub
and
fs
xchg
gs
stos
mov
std
push
xchg
movsb
push
mov
dec
lret
out
pop
pop
in
dec
bnd
sub
mov
out
jge
ja
jle
mov
jl
in
xor
xor
mov
ja
pop
or
jnp
cmpsb
popa
cltd
lock
and
test
add
mov
jecxz
cmp
loop
xorb
ret
pop
fsts
add
rorl
test
cmc
xchg
in
js
fcomps
or
mov
pop
inc
xchg
outsb
movsb
data16
xchg
fstpt
nop
pop
sbb
js
in
xchg
mov
adc
mov
arpl
cltd
push
fcomps
fsubrl
ret
jle
out
das
xchg
mov
fdivl
lea
int
pop
fwait
xor
jo
out
xor
out
pop
repz
sbb
lods
icebp
fists
adc
fsubr
test
test
cltd
sub
rclb
je
xor
xchg
sub
lahf
add
clc
dec
outsb
inc
rolb
pop
mov
imul
mov
or
pop
fadds
jne
adc
sbb
sahf
mov
sub
mov
adc
pusha
xchg
pop
scas
gs
mov
mov
mov
popa
pop
adc
mov
std
or
dec
mov
lret
lahf
cmp
insl
mov
imul
shr
xchg
cmpsl
push
lahf
pop
fs
jmp
xor
sbb
jle
imul
or
jno
push
and
xchg
movsl
xor
xchg
mov
xorb
das
xor
jns
push
shr
sub
adc
movsl
insl
jnp
nop
dec
push
cmp
dec
add
bound
pop
sbb
je
pop
push
sub
lcall
popa
adc
or
fwait
or
test
movb
aaa
repz
nop
mov
xchg
jge
mov
stos
xor
xor
jnp
mov
mov
xlat
gs
stos
es
jl
push
pop
sub
leave
jecxz
loopne
loop
or
dec
jb
adc
inc
mov
jle
xchg
test
xor
leave
add
roll
adc
mov
loop
shrl
je
repnz
jg
pop
cs
pop
sbb
adc
xchg
imull
add
test
clc
xor
xchg
xor
mov
xor
push
shlb
inc
mov
out
sahf
dec
sbb
cmp
jl
push
pop
xor
loopne
ret
xchg
arpl
cmc
xchg
add
test
sar
and
stc
jb
in
pop
out
push
mov
xchg
les
rclb
loopne
out
jb
lcall
movsb
mov
shlb
and
fistpll
push
mov
sub
mov
xor
movsl
push
adc
jl
mov
sbb
loop
and
loope
jne
cmpsb
sub
decl
ret
ret
sbb
das
fimull
es
lret
jne
and
cmp
or
imul
inc
and
sub
frstor
mov
sbb
sub
int
out
inc
pop
cli
jns
ret
inc
leave
adc
mov
mov
xor
xor
scas
mov
add
jle
push
pop
das
mov
mov
das
pop
pop
or
mov
push
sbb
ret
insl
add
jb
mov
adc
insb
or
int3
loope
jbe
shll
push
jge
and
stc
pop
add
mov
movsb
sti
into
adc
orb
inc
adc
add
in
inc
mov
dec
pop
or
pop
push
data16
test
cmpsl
lcall
mov
cld
inc
cwtl
sub
out
ficomps
mov
mov
cmp
pop
in
xchg
add
gs
cwtl
cmp
mov
push
sbb
sahf
add
push
push
loope
inc
mov
mov
dec
sbb
sub
movsb
sub
pop
sub
jnp
icebp
pop
hlt
aaa
xchg
mov
push
std
pop
dec
inc
fists
scas
dec
add
push
sbb
sub
push
jle
mov
pop
adc
fsubr
ja
dec
inc
lods
aam
sbb
push
mov
clc
inc
sbb
imul
fidivl
shrb
cmp
add
lods
and
inc
or
insl
je
sti
xchg
sbb
hlt
cld
sahf
inc
nop
cmpl
or
stos
in
ret
or
clc
js
jle
bound
xchg
mov
xchg
ror
repz
jns
andl
xor
scas
mov
jb
rol
jg
in
jnp
bound
int3
insl
int
mov
push
daa
mov
inc
pop
or
or
fwait
call
jmp
fdivrs
mov
mov
cmp
call
jle
push
xor
in
ffreep
es
or
movsl
cmc
cmp
inc
mov
cmp
pop
incl
fldenv
cmpsl
lock
jl
pusha
pop
and
ljmp
push
ss
cltd
mov
inc
dec
mov
sbb
cmp
leave
adc
xorb
lret
sub
push
jecxz
sbb
xchg
jne
fcmove
les
sbb
arpl
adc
and
inc
sti
cmp
push
sahf
push
mov
mov
fwait
imul
cs
int3
icebp
add
mov
sar
fldcw
mov
or
xor
sbb
movsb
mov
inc
out
dec
add
push
mov
stos
dec
jb
incb
mov
je
sbb
rorl
mov
dec
push
jecxz
push
xchg
cmpl
sbb
push
xor
and
jmp
add
insl
mov
push
cmpsl
mov
popa
jnp
pop
cltd
mov
sbb
aaa
fimull
test
je
mov
pop
dec
pop
repnz
in
arpl
jmp
cmp
push
lock
popa
cmp
orb
jge
cmp
adc
xchg
mov
fisubl
out
sbb
scas
lock
sbb
or
xor
in
nop
cmp
int3
mov
nop
xchg
jle
push
adc
loop
mov
add
in
mov
test
cld
roll
call
push
jle
stos
stos
mov
add
mov
loopne
lock
mov
push
lret
cmp
jb
push
xlat
arpl
and
mov
cld
cmp
in
xchg
pminsw
pop
jno
push
cmp
pop
shlb
es
mov
and
insb
xchg
sbb
popf
or
insl
cmp
pop
lods
sbb
cltd
push
enter
mov
fs
or
lds
jl
inc
dec
push
mov
sahf
fdivs
sbb
fsubl
mov
mov
loop
fdiv
sbb
jne
cmp
dec
jecxz
mov
fnsave
sub
dec
cld
enter
stos
adc
clc
dec
jg
or
or
outsb
push
mov
call
push
xor
inc
cmpsl
loope
lock
shlb
push
cmp
add
insl
jnp
lahf
xchg
or
and
push
dec
in
cwtl
push
std
mov
inc
mov
mov
pop
pusha
and
dec
pusha
mov
fmuls
add
jno
mov
aaa
xchg
and
mov
int3
loope
ss
pop
int3
repz
faddl
fdivrl
or
adc
mov
in
fiadds
loope
or
inc
imul
outsl
inc
xchg
mov
filds
jne
jns
in
mov
lods
pusha
pusha
stc
dec
jl
jae
push
push
mov
enter
jecxz
and
add
pop
push
lret
sarb
outsl
dec
dec
scas
nop
dec
sub
or
jbe
push
sbb
cwtl
mov
xchg
movsb
xchg
pop
mov
jnp
mov
call
arpl
mov
into
scas
pusha
xchg
xchg
aad
adc
inc
test
pop
inc
hlt
push
cli
pop
out
pop
cmpsb
or
push
les
xlat
into
inc
cli
cmp
ret
sub
push
xchg
sbb
and
and
rclb
jmp
je
push
rcrb
dec
sbb
mov
aas
fincstp
mov
xor
cmp
fucomp
and
xor
sbb
cld
out
lret
push
xor
mov
fwait
dec
and
shrb
push
cld
pop
in
xor
push
outsb
pop
jmp
aam
sbb
into
sub
stos
enter
mov
cmpsl
ret
mov
mov
push
xor
mov
mov
mov
inc
popf
jae
mov
jne
sahf
add
pop
ss
jb
iret
icebp
adc
jecxz
in
inc
push
arpl
xchg
into
sarl
dec
mov
add
sbb
sti
inc
inc
pop
idivb
jl
jl
int
cmp
jg
mov
push
dec
add
rcr
clc
inc
rclb
and
iret
dec
orl
ljmp
dec
pop
pop
in
mov
pop
shll
outsb
adc
inc
dec
push
xor
mov
add
inc
xlat
jg
inc
push
imul
cmp
mov
out
and
sti
pop
jle
pop
mov
pop
cmp
jbe
dec
hlt
js
dec
sahf
mov
sbb
add
xchg
arpl
add
sbb
jns
mov
inc
mov
cmc
test
aam
enter
cmp
mov
lcall
stc
rolb
fwait
sub
loopne
out
enter
lret
call
jns
pop
sub
call
rcll
call
aad
in
inc
push
sbb
std
mov
jle
jne
mov
cwtl
add
inc
sbb
xchg
sub
xor
sub
add
jecxz
loop
adc
mov
bound
lret
add
scas
testb
xor
or
addr16
jmp
sub
loopne
mov
dec
push
bound
pushf
imull
sub
adc
mov
es
out
out
mov
dec
adc
sub
cmp
lds
jg
ret
test
xorb
xchg
cltd
or
or
shl
sub
or
imul
in
popw
xchg
and
jnp
fdivl
add
arpl
sbb
cs
pop
inc
sub
jmp
push
jnp
lods
pop
repz
cmc
aas
aad
inc
jb
movsb
scas
adc
pop
jns
fists
mov
fisubl
les
outsb
mov
flds
jp
add
sub
lret
push
adc
outsb
sbb
push
pusha
pop
adc
popa
loop
sahf
jg
push
loop
push
stos
or
pop
cmp
and
fadds
jne
xor
dec
jno
push
sti
push
pop
out
jge
ljmp
dec
dec
xor
imul
or
jg
or
push
mov
mov
shrl
push
mov
and
je
xchg
cli
mov
mov
test
scas
cltd
in
dec
aaa
mov
xor
pop
inc
jne
adc
add
lahf
dec
xchg
inc
dec
cmp
cmpsl
jl
dec
or
pop
movsb
or
xchg
stos
add
and
loopne
repnz
sub
jmp
orb
dec
lds
mov
cwtl
jno
cmp
push
dec
adc
icebp
mov
jb
in
mov
push
jns
adc
dec
jge
xchg
add
pop
jecxz
ret
sbb
icebp
nop
ja
jnp
xchg
imul
jno
lret
cmpl
sbb
dec
mov
movsl
cli
subl
out
pop
xor
adc
push
pop
pop
sbb
aad
mov
nop
int3
inc
fistpll
adc
out
xor
mov
adc
push
and
xor
mov
sub
sbb
or
fadd
repz
and
fldl
cmp
xchg
sbb
xor
cmpsb
xchg
ja
push
into
pop
in
adc
mov
jg
loope
mov
dec
sbb
cld
lret
jmp
inc
xorl
pop
sub
cltd
sub
mulb
loopne
daa
cwtl
andb
inc
in
ja
adc
pop
rcrl
mov
mov
lret
fs
in
inc
xchg
stos
or
mov
jno
mov
mov
push
pop
cmp
std
push
jns
xchg
out
xchg
sub
gs
cmp
mov
and
adc
sbb
daa
pop
jb
ljmp
jbe
cwtl
and
lds
lahf
or
jo
fnsave
mov
lods
dec
aad
add
out
inc
repnz
dec
outsb
sub
std
xor
leave
add
movsl
add
and
sbb
jae
idiv
sbb
ficoms
push
insb
xrelease
mov
cmp
gs
in
addr16
xor
scas
scas
repnz
cmc
mov
cmp
sub
mov
ds
repz
out
ja
push
xor
mov
sbb
cmpsb
inc
enter
push
mov
aam
out
push
pusha
mov
push
add
mov
sahf
cmp
lahf
outsl
push
sti
jae
mov
cmp
add
push
sbb
outsb
inc
sbb
push
push
or
cld
cmp
jle
popa
cmp
mov
dec
pop
popa
dec
cmc
jno
pop
fistl
mov
cmp
push
jmp
mov
and
fistps
mov
ja
mov
sti
mov
repz
test
dec
xchg
push
aas
test
fcmove
adc
cmp
push
in
push
pushl
cmpsb
pop
add
lret
jg
stos
fiaddl
cmp
mov
out
fstpl
sahf
imul
mov
outsl
xor
inc
dec
je
cmpsb
enter
cmp
and
mov
movl
mov
adc
jmp
inc
sbb
sarl
sarl
sbb
adc
popa
lods
xchg
mov
aas
mov
push
fdivp
jl
es
inc
and
add
stos
mov
jmp
jmp
xlat
rcll
and
jl
out
cs
negb
cmpsb
xor
rolb
jmp
pushf
xchg
push
inc
inc
push
aam
into
aam
or
iret
sti
outsl
or
mov
mov
out
xchg
mov
faddl
dec
shrl
add
loope
je
push
and
sub
mov
jbe
xchg
cmp
sub
add
pop
fdivs
xor
mov
xor
mov
mov
fwait
test
inc
jae
fstpt
or
fs
sbb
sti
inc
test
insl
cmp
mov
sbb
scas
mov
arpl
je
add
xor
repnz
loopne
push
mov
xor
loope
push
out
mov
into
xchg
loop
hlt
sahf
dec
in
fmulp
dec
imul
ret
ds
pop
mov
cmp
pop
das
adc
pop
out
rclb
mov
adcl
cmp
and
aaa
ror
testl
dec
push
and
mov
fcompl
sub
pop
adc
mov
lods
sub
mov
push
dec
stos
loope
xor
bound
fld1
mov
fsubr
push
fstpt
mulb
js
out
stos
ss
movsb
lret
pop
lret
mov
int
dec
in
cmp
negl
sar
xorb
xor
xor
das
jge
pop
jae
pop
mov
clc
cmpsb
push
testb
cli
stos
js
sbb
repz
mov
and
mov
das
mov
repz
setne
mov
sub
lock
dec
adc
sbb
push
aam
ret
xor
or
cltd
mov
data16
mul
outsb
inc
cmp
add
es
aaa
dec
push
xchg
cmp
mov
mov
es
dec
push
and
ja
imull
mov
fimuls
dec
jmp
inc
mov
ds
dec
adc
cmc
mov
gs
sub
iret
fcomi
jb
insl
dec
mov
out
mov
lret
loop
popf
push
lcall
call
test
push
shl
pop
jge
insl
inc
or
sbb
clc
sub
rep
mov
and
mov
mov
adc
loop
popa
ja
sbb
fnsave
ror
movsl
in
pop
jo
notl
mov
sub
and
mov
pop
insb
sbb
hlt
test
stos
loopne
xor
std
push
dec
data16
jmp
mov
mov
sub
add
mov
loope
mov
aam
lods
dec
and
scas
push
repnz
mull
js
adc
cwtl
cmp
adc
sarb
push
fldl
in
movsb
push
scas
pop
popf
sahf
enter
jmp
pop
inc
idiv
mov
addr16
out
mov
jno
dec
push
std
sbb
sub
imul
nop
push
cmp
data16
jecxz
leave
dec
push
mov
in
leave
mov
dec
rcll
jns
fabs
and
inc
pop
mov
lods
jnp
scas
je
decl
daa
jl
fsubrl
dec
idiv
push
xor
mov
aaa
jo
mov
cmovo
aam
and
mov
jle
mov
push
aam
lret
gs
aam
in
andb
scas
dec
sbb
mov
lret
xchg
sbb
add
sub
pop
ss
fwait
jp
out
or
shll
negl
stos
mov
xor
dec
mov
imull
mov
sti
inc
dec
call
mov
xchg
test
dec
das
or
jae
inc
stos
xlat
aaa
shrb
or
shlb
jbe
push
mov
imul
jmp
lock
pop
pop
pop
jnp
mov
mov
add
pop
shl
or
lcall
outsb
lcall
lcall
addb
stos
lock
cwtl
jbe
jb
push
mov
fiaddl
inc
mov
sbb
or
iret
pop
out
pop
aad
push
or
aad
test
push
test
stc
inc
or
inc
test
nop
xchg
mov
jmp
pop
stos
mov
loop
into
jbe
les
mov
into
aad
incl
enter
pop
in
insb
ret
mov
pop
shlb
sbb
mov
popa
scas
cmpsb
aam
xor
into
int
push
adc
mov
loop
enter
leave
xchg
fidivrs
jne
xchg
push
push
dec
popf
sbb
and
jbe
sbb
out
jmp
andb
or
pop
and
jns
je
xchg
and
loopne
insb
adc
aas
cltd
mov
rolb
cmp
or
jns
inc
sbb
xchg
insb
lret
lcall
mov
sub
xor
lcall
in
push
mov
and
xlat
mov
js
inc
push
adc
push
jbe
fwait
xchg
xchg
inc
les
out
imul
rorl
loope
sarb
inc
data16
setbe
movsl
sarb
and
popf
jne
daa
mov
mov
mov
pop
test
push
add
jno
js
add
int
dec
arpl
cmp
outsl
adc
xchg
rorl
jno
push
sbb
jbe
xchg
pop
cld
rcr
fdiv
scas
jecxz
jl
push
jo
push
in
repnz
mov
mov
inc
pop
push
ss
shlb
cmpsb
mov
sbb
out
stc
xchg
mov
xchg
mov
jle
adc
sar
pop
lret
push
xor
into
cmp
pop
out
ret
int3
jge
insl
ret
pop
ficoms
or
cmpsl
jp
add
cmp
jge
test
popa
jl
lock
mov
divb
jg
out
mov
lock
ds
icebp
arpl
dec
rcrl
push
cld
mov
jmp
shlb
adc
jp
cmp
push
dec
adc
jbe
mov
jp
cmp
stos
sub
xlat
add
stc
ret
aam
and
sbb
xchg
gs
lahf
mov
aad
mov
sbb
add
cs
js
test
cs
xchg
test
mov
mov
ljmp
ljmp
and
rcrl
and
mov
fimull
cmp
pop
lods
cmp
jbe
sbb
lret
jno
xor
lret
xchg
addb
sub
popa
lods
cmp
andb
xor
mov
pop
sahf
mov
push
adc
subb
gs
pop
pushf
pop
jmp
das
add
stc
fsubrl
sarl
pop
lods
popf
xor
ljmp
xor
mov
mov
add
push
sub
test
adc
or
or
cmpsb
sbb
dec
or
mov
push
mov
loope
cmp
inc
sahf
inc
or
andb
cmpsl
xlat
add
push
sub
pop
xchg
push
js
push
addb
jg
or
dec
pop
test
jmp
lock
loope
insl
das
and
stc
add
pop
fucomi
das
inc
call
loopne
cmp
insb
ds
movsb
ficoml
stc
dec
adc
test
add
jb
scas
pop
mov
insb
inc
sub
inc
test
sub
insl
inc
or
les
mov
stos
loop
add
cli
orb
loop
lods
adc
inc
xchg
sbb
adc
pop
mov
fistl
xor
mov
cmpsb
std
mov
cmovb
and
pop
add
inc
imul
sbb
aas
push
pop
and
add
sub
mov
xchg
cmp
sbb
inc
sub
add
stos
xchg
dec
imul
adc
test
sbb
mov
mov
and
push
mov
int3
adc
fs
aam
aam
pop
insl
cmp
cmc
sub
mov
cli
scas
dec
out
adc
dec
jns
inc
xchg
enter
dec
jp
fistl
testl
aas
mov
add
ljmp
and
cs
cltd
dec
and
inc
test
inc
adc
jnp
mov
pop
ds
leave
lods
int
insl
inc
jg
jmp
adc
mov
xchg
iret
pop
in
jo
std
out
mov
and
int
cli
sbb
xor
inc
fwait
cld
inc
jge
int
shrb
push
sar
dec
std
or
cld
sub
mov
dec
adc
xor
jp
ds
jo
ja,pn
cmp
aaa
adc
pusha
push
lahf
cmpsb
push
fisubl
lods
movsl
or
lds
and
aaa
add
push
xchg
addb
mov
hlt
call
push
outsb
or
stos
push
dec
xchg
dec
fs
aam
mov
mov
and
in
jne
and
lret
or
fcompl
sbb
xor
xchg
add
mov
loopne
mov
jle
ja
inc
push
jo
push
je
mov
adc
mov
mov
dec
pop
js
ret
mov
cwtl
aad
call
mov
fs
imul
in
stos
jp
movsb
nop
test
cmp
xor
mov
ljmp
enter
test
push
aam
out
test
std
cwtl
in
fimuls
mov
or
dec
gs
pop
sbb
addr16
sahf
aas
cmp
jnp
and
jmp
popf
xchg
sbb
jnp,pn
pop
out
leave
jnp
addb
pop
mov
sarl
dec
xchg
in
jge
popf
imul
push
or
inc
push
lcall
loope
mov
cmp
mov
aaa
repz
pusha
loopne
fbstp
fwait
xlat
test
jg
repnz
icebp
ret
mov
pop
aaa
dec
and
lcall
push
aaa
outsl
mov
sub
adc
and
push
cmp
pushf
imul
mov
lods
mov
jle
xchg
rcrb
fiaddl
sti
adc
adc
xchg
fisubrs
testl
sub
orb
xchg
xchg
scas
icebp
mov
mov
call
and
cmpsb
mov
lea
push
adc
lret
xchg
rolb
enter
cld
pop
dec
int
dec
fldcw
iret
pop
mov
dec
lcall
adc
stc
inc
fwait
rcll
jbe
enter
dec
jl
dec
mov
stos
call
nop
lds
mov
decl
cs
test
cmp
gs
jnp
pusha
jmp
cmp
adc
stos
jge
fstps
pop
outsb
arpl
leave
jbe
adc
mov
dec
xorb
lods
lret
cmp
xchg
dec
in
pop
jg
test
mov
adcl
int3
push
sub
popf
mov
push
cs
dec
adc
loopne
add
mov
movsl
cwtl
dec
cmp
xchg
or
push
add
push
cmc
mov
call
add
mov
ret
jb
test
mov
rorl
divb
out
test
mov
jmp
das
outsl
fnsave
gs
clc
inc
movsl
mov
and
lahf
in
xchg
das
sub
adc
or
in
mov
std
idivl
daa
xchg
adc
xlat
into
imul
aam
daa
aam
pop
pop
fs
push
lea
inc
sbb
mov
sub
call
mov
mov
pop
int3
bound
dec
imul
loop
inc
sub
leave
sub
mov
pop
and
fcmovb
out
cs
dec
stc
sbb
cmp
jp
jg
lods
sbb
int3
push
sub
dec
add
inc
and
jb
imul
movsb
out
jp
xchg
das
sti
dec
or
jb
bound
push
xor
ja
mov
iret
in
jo
mov
mov
jo
or
aaa
fiadds
push
stos
sbb
popf
xor
jge
adc
js
mov
repz
adc
xchg
fdivl
push
mov
mov
lock
mov
jge
fadd
dec
mov
mov
adc
leave
inc
xchg
sbb
mov
dec
jle
pop
or
cli
push
sar
mov
sub
jne
addb
inc
inc
cltd
cmp
jbe
ret
or
adc
mov
dec
imul
or
shlb
push
dec
mov
enter
xor
cmp
and
push
mov
mov
and
cmc
or
lods
out
ds
mov
pop
cmc
cmpl
nop
mov
xorw
xorb
fadd
inc
insl
in
sbb
nop
ror
sub
mov
cwtl
negl
nop
pop
mov
dec
dec
repnz
push
loop
inc
stos
cmp
mov
imul
xchg
mov
mov
or
movsb
inc
je
or
mov
push
mov
or
push
adc
xor
inc
xchg
fdivl
inc
inc
cmpsl
adc
orl
xchg
lret
mov
cs
jno
sbb
mov
cltd
cmpsl
add
push
std
cwtl
mov
out
and
fs
bound
fsubrp
sbb
adc
sarl
out
mov
jle
push
cli
mov
xor
mov
ljmp
fs
jb
lcall
imul
imul
mov
add
out
add
inc
sbb
lock
roll
jmp
aad
popa
pop
push
inc
xchg
ljmp
fidivl
pop
xchg
cmp
or
sub
lock
mov
inc
pushf
push
push
arpl
dec
and
imul
mulb
or
outsl
mov
inc
leave
xchg
leave
loope
xor
mov
decl
push
lods
std
adc
jecxz
cmc
iret
mov
mov
sbb
sub
ja
daa
inc
sub
sub
dec
lods
sub
mov
fcoms
push
xor
mov
xor
xor
andl
jns
mov
push
dec
hlt
stos
cmp
int3
aam
mov
insb
mov
lods
mov
popa
test
xor
ret
push
jno
mov
mov
add
sbb
les
xchg
push
pop
pop
pop
notb
pop
rcr
mov
mov
outsl
xchg
jle
dec
popf
fstps
sub
fdivrs
fs
in
jmp
inc
aaa
xchg
push
pop
or
cmp
lock
xchg
call
stos
fucomp
sbb
jbe
and
loopne
movl
pop
jge
pop
es
inc
or
mov
pop
jge
pop
jmp
sub
dec
push
sub
push
cmc
test
outsb
and
imul
in
inc
outsb
test
xchg
or
push
dec
and
lahf
out
lahf
ret
mov
ljmp
dec
sahf
shll
cs
fildll
mov
fwait
insb
pop
mov
and
jbe
sbb
inc
adc
bnd
test
leave
push
repz
jnp
rorl
sub
ret
pop
arpl
and
das
pop
loop
push
adc
cmpsl
sbb
popa
jle
into
lods
pushf
shrl
call
xor
and
test
mov
xor
loopne
out
sbb
movsb
leave
ret
std
test
push
xor
and
adc
dec
mov
cmc
xor
add
scas
ret
dec
aas
push
sar
cld
adc
sub
sbb
jmp
inc
test
and
inc
test
fidivl
ljmp
and
std
lret
imul
xchg
mov
cmp
push
xchg
mov
das
mov
int
sub
jo
pop
int
js
jae
jne
mov
jle
in
add
push
lods
cltd
cmpsb
cmp
and
push
mov
push
xor
xchg
adc
jg
dec
insb
sub
loopne
dec
lcall
xor
cmc
push
imul
push
push
les
xchg
pushf
mov
cmpsl
std
loopne
cltd
sub
push
test
sbb
mov
rorl
arpl
inc
test
loopne
mov
sbb
mov
mov
ss
dec
mov
xchg
stos
inc
xlat
jmp
pop
mov
into
dec
arpl
sbb
cmpsb
shr
outsb
sub
xor
mov
pop
mov
sbb
mov
mov
sbb
aas
and
dec
enter
pop
cmpsl
sahf
and
cmp
push
punpckhwd
or
jmp
vaddsubpd
cmp
insl
loope
andl
test
mov
xchg
push
sbb
or
push
lret
jp
int3
add
adc
popf
jnp
inc
std
push
movsl
ja
push
sahf
sarb
and
aam
inc
je
test
add
xchg
jnp
sahf
cltd
dec
adc
mov
lods
sbb
notb
jb
mov
and
xor
mov
pushl
cmp
pop
sbb
adc
inc
cmp
xor
pop
push
repnz
lret
mov
jecxz
or
int
and
out
dec
or
cltd
daa
jecxz
mov
dec
movsl
addb
les
aad
jecxz
cmpsb
fistl
in
popa
push
inc
lret
sub
push
pop
orb
into
pop
adc
push
push
das
push
xchg
shl
or
sub
jno
mov
pop
aad
lock
push
and
push
int3
mov
js
fcmove
pop
and
addr16
cmc
ljmp
pusha
clc
jg
test
ss
imul
inc
jl
loop
or
jns
lds
je
popa
add
pop
xchg
adc
sub
lea
cmp
mov
sub
add
mov
pop
dec
stos
or
push
xchg
push
scas
jbe
jns
sbb
jecxz
dec
andb
xchg
lcall
sbb
or
xchg
shrb
adc
imul
adc
pop
adc
cmc
dec
push
push
fwait
mov
xor
and
movsb
mov
xor
or
pop
xchg
jle
mov
add
pop
adc
and
cmp
and
mov
nop
mov
push
or
and
cltd
sub
jae
adc
call
add
inc
mov
push
mov
push
sti
stos
insl
nop
int3
cli
xchg
jne
pop
xlat
popa
adc
mov
sti
std
rclb
pextrw
out
lds
push
adc
fisttps
lret
jbe
stos
cwtl
mov
mov
divl
loopne
and
dec
or
jo
stos
xor
test
mov
push
add
sbb
ja
popw
imul
imul
and
cmpl
cmp
cmp
test
rol
mov
scas
mov
or
imul
negl
or
or
or
mov
outsl
out
cltd
bound
push
jecxz
inc
and
aas
pusha
jno
arpl
pop
jns
jno
imul
pushf
pop
xor
lret
cmp
stos
fisubl
push
xor
xchg
add
lahf
sub
jecxz
cmp
sub
lods
fidivrs
jo
push
imul
pop
movsl
pop
push
jg
sbb
jmp
cmp
dec
jl
sub
mov
lea
and
test
dec
ret
cmp
shr
iret
mov
and
cmp
lcall
push
divl
add
sarl
push
xchg
in
cmp
adc
or
ljmp
cltd
adc
jb
xchg
imul
and
lahf
jno
mov
sub
in
lret
lret
pop
into
mov
outsb
mov
inc
jno
in
out
or
mov
mov
loop
test
lret
cld
fisubl
mov
add
inc
add
xchg
fldcw
pop
call
sub
movsl
or
xor
data16
cmc
mov
mov
nop
divl
lcall
inc
insl
mov
push
mov
dec
incb
es
jne
or
mov
jb
test
ds
out
mov
fmuls
inc
jle
push
push
sub
repz
imul
in
push
and
dec
std
aad
adc
or
mov
inc
inc
das
popa
sbb
xor
and
cltd
pop
xor
pop
orb
or
sbb
movsb
lret
and
and
xor
enter
xor
add
sub
cmc
ja
push
pop
test
inc
add
ret
mov
xor
push
pop
jmp
sbb
fsubrs
and
pop
sbb
scas
cmp
test
pushl
dec
or
mov
insl
pop
and
nop
out
lds
cmp
sbb
adc
or
or
testl
mov
inc
sub
pop
xor
mov
iret
test
lret
outsb
sbb
xor
cmp
mov
fisttps
mov
adc
or
push
scas
sub
mov
ret
in
xchg
and
mov
fs
sbb
das
mov
jecxz
mov
addr16
outsb
mov
push
lret
cmp
sbb
int
and
mov
sub
mov
mov
sbb
cmpsl
mov
fsts
insb
adc
or
stos
mov
inc
add
std
mov
mov
nop
pandn
mov
push
adc
mov
or
fcoml
push
fwait
imul
int3
dec
call
cmpsl
lods
cmp
mov
xchg
push
jl
int
pop
dec
out
stos
inc
ficoml
punpcklbw
lret
jb
add
pop
xchg
jno
out
ret
movsl
mov
push
cwtl
mov
aas
and
in
vmread
rol
insl
mov
xchg
pop
mov
ret
je
pop
outsb
pop
jae
out
inc
mov
es
mov
pop
icebp
pop
in
cmpl
cmp
callw
push
xor
push
jae
in
pop
in
mov
and
adc
dec
push
leave
call
pop
mov
inc
mov
xor
sbb
cmp
push
incb
or
mov
or
pop
sti
dec
in
mov
push
insb
in
les
add
je
dec
mov
sahf
dec
add
cli
xor
cmpsl
sti
outsb
test
pop
pop
inc
sub
add
xchg
stc
cwtl
cli
or
out
das
clc
push
mov
xlat
sarl
dec
int3
in
and
out
outsb
sbb
xchg
cmp
pop
mov
mov
mov
adc
mov
mov
sti
adc
mov
pop
hlt
adc
lahf
xchg
mov
bound
jbe
push
xor
push
rcll
cld
inc
push
aaa
into
xchg
sbb
mov
das
or
test
adc
pushw
shlb
mov
xchg
imul
sbb
jmp
xchg
orb
fmull
repz
sub
lret
aad
inc
out
test
fdivrl
sar
add
movsb
enter
jl
xchg
scas
leave
and
push
mov
push
outsl
add
lea
je
test
mov
scas
mov
pushf
inc
xchg
xchg
add
shl
mov
jecxz
fstpl
mov
aad
pop
xor
xchg
cmpsb
daa
fldt
fld
inc
fidivrl
js
lret
inc
into
sahf
stos
xor
mov
jle
sbb
movsl
xchg
dec
les
je
test
and
and
hlt
mov
andb
xchg
loopne
mov
dec
sub
das
lahf
fs
test
adc
jmp
xchg
ds
testb
xchg
loopne
jle
xchg
xor
out
push
ja
cmc
push
add
je
and
fs
fcoml
scas
aam
xchg
or
daa
inc
ret
fwait
shr
add
stc
sbb
inc
push
or
inc
push
mov
xchg
mov
mov
or
adc
rcll
das
ss
mov
movsl
std
or
jae
in
add
jbe
call
cs
mov
loope
adc
lods
sub
testl
stos
cmp
les
pop
outsl
mov
mov
adc
sahf
fiadds
xchg
mov
mov
scas
push
loop
xchg
sub
popa
mov
shlb
adc
dec
out
lods
aad
lcall
scas
loopne
cmpsb
mov
pop
mov
inc
fisubl
popa
pop
popa
or
dec
inc
xor
cmpsl
inc
pop
pop
jbe
mov
cmp
data16
sbb
shlb
push
adc
mov
mov
mov
cmc
dec
sub
mov
xor
xchg
or
or
loopne
push
mov
call
dec
adc
arpl
sahf
mov
adc
xor
mov
pop
adc
mov
mov
pop
aaa
jp
cmpl
insb
mov
aam
xor
cmpsl
push
stc
addb
scas
cltd
test
ljmp
lea
movl
push
shlb
push
jb
jbe
outsb
xor
add
std
out
cltd
mov
and
subl
jecxz
test
lods
pop
mov
cmp
out
cltd
sbbb
sar
and
xor
stos
pop
xor
pop
enter
pop
fisubrs
xchg
pop
fbld
je
cmpsb
shl
dec
mov
int3
mov
das
lahf
jp
ja
mov
dec
loopne
daa
jno
idiv
pop
stos
incb
or
mov
xor
popa
fistps
xlat
pop
fwait
jno
clc
push
lret
dec
inc
xor
hlt
inc
rclb
inc
adc
fcmovne
aad
push
mov
sub
test
stos
dec
pop
pop
dec
std
call
ret
mov
mov
jmp
cwtl
scas
mov
xor
aas
out
pop
testl
inc
das
lods
pop
decb
sbb
fwait
js
inc
ret
stc
mov
lea
mov
xor
sub
cmp
pop
rolb
les
or
push
dec
cwtl
in
xchg
mov
lret
dec
andl
scas
mov
loopne
jb
sub
sbbl
mull
mov
cmp
icebp
pop
out
mov
mov
cwtl
loop
ret
iret
and
cld
jmp
repnz
push
xor
add
rcrl
push
push
jbe
ljmp
and
arpl
inc
outsb
mov
loopne
sbb
add
dec
cmp
sub
iret
jae
mov
push
fnstcw
add
sti
pop
push
sahf
sbb
jecxz
testl
jb
rclb
inc
sub
cmp
xlat
stos
adc
les
ret
or
cmpsl
xchg
pop
cld
jl
cmpsl
mov
movlps
cmpsb
mov
ljmp
daa
adc
lods
in
and
shl
cltd
arpl
lods
clc
cmp
movsl
mov
mov
stos
fdivs
in
pop
lods
hlt
les
addr16
dec
or
sub
xchg
notb
lcall
or
cmp
jl
popa
pop
repnz
adc
inc
test
inc
jae
add
dec
hlt
cmp
cmp
push
ficoml
loopne
and
jge
mov
mov
aam
shl
pop
insb
cmpsb
div
decl
dec
je
repz
xor
ja
add
out
lret
push
decb
mov
es
sub
out
adc
orb
out
rcr
xchg
sub
lea
pop
adcb
adc
aad
push
add
jo
stos
dec
jbe
shlb
sti
mov
push
pushf
xor
xchg
adc
andb
cmp
cld
push
pop
scas
xor
lret
orb
shlb
fldt
inc
jl
and
cld
jl
jb
dec
inc
in
int3
push
shrb
imul
scas
mov
sub
aaa
or
imul
sub
lea
and
jmp
push
je
push
data16
and
sub
insb
jns
out
mov
mov
mov
mov
jecxz
push
sbb
ret
mov
outsb
jae
lds
cmp
pusha
daa
xchg
and
movsl
leave
mov
leave
or
rcrb
out
insl
clc
mov
sti
mov
cwtl
or
inc
sbb
mov
jnp
out
neg
lock
shrl
pop
mov
sbb
cmp
cmc
xchg
fs
jecxz
addr16
lcall
push
sbb
sbb
incb
iret
mov
ja
mov
mov
imull
jl
shll
dec
mov
dec
jg
push
add
inc
mov
imul
movsl
xor
lock
dec
rdpmc
pop
cmp
out
push
xor
pop
jp
sbb
ror
in
sbb
lea
xchg
push
inc
test
repz
push
jecxz
or
movsl
push
stos
ret
pusha
movdqa
loope
repz
fstpl
xchg
out
lahf
int3
jnp
inc
test
je
sti
pop
push
mov
and
xchg
and
mov
push
xor
pushfw
popa
inc
lods
sbb
clc
test
aam
out
pusha
shll
add
int3
cs
js
movsl
pop
push
out
push
mov
lahf
lret
fs
test
mov
xorl
mov
cmp
cmp
inc
ja
ljmp
popl
jae
push
sbb
cltd
fsubrp
add
fdiv
aas
pop
mov
jae
ret
add
inc
iret
cmpsb
jo
fs
rolb
xor
imul
cmpsb
dec
ds
fwait
cmpsb
mov
push
adc
mov
ljmp
mov
lea
add
sbb
jae
jge
cmp
shlb
add
bound
pushf
repnz
jmp
fcmovb
subl
adc
imul
movsl
push
adc
in
fdivr
xchg
mov
push
dec
in
fstpt
decb
bound
push
cmpsb
movsb
hlt
dec
ffree
cwtl
jmp
imul
jb
iret
test
cld
push
shll
arpl
hlt
movsl
mov
neg
pop
cmpb
call
jg
std
in
dec
pop
les
sbb
mov
insl
clc
int3
addr16
idivl
mov
jge
stc
mov
addr16
movsb
sbb
ds
fdivs
pop
mov
or
std
sbb
jne
imul
or
sbb
push
add
push
mov
adc
fldenv
jl
inc
sbb
or
fwait
mov
popa
dec
jp
pop
fstpl
cmc
mov
out
dec
sub
insl
cwtl
sbb
add
mov
xor
test
test
idivl
xor
shr
mov
xchg
xor
leave
and
dec
xchg
subb
xchg
leave
xchg
push
xor
xor
mov
inc
ljmp
dec
dec
cmp
aas
out
adc
xlat
sbb
lret
in
dec
xlat
add
pop
lock
push
rcrl
lahf
add
pushf
call
jno
adc
push
cmp
pop
iret
inc
jae
icebp
je
and
cmp
inc
xor
lret
inc
call
dec
cmp
mov
sbb
ret
push
lods
sahf
mov
cwtl
imul
imul
rcl
mov
and
or
shlb
jne
pop
cli
bound
leave
mov
cwtl
xor
pop
and
loop
jmp
add
mov
jae
mov
adc
inc
xlat
push
or
pusha
mov
adc
fsubr
sbb
sahf
dec
pop
jle
rol
imul
insb
loope
ret
call
or
fcomps
sbbb
jecxz
mov
cmpsl
mov
cmp
mov
std
jge
or
jmp
mov
xor
xor
cmpsb
ja
addr16
add
lcall
inc
das
dec
out
sub
loopne
enter
dec
out
in
sbb
lret
ss
mov
pop
inc
cmp
mov
in
shl
lret
adc
sbb
je
xchg
adc
mov
fistpl
add
inc
arpl
cmc
add
jb
mov
pop
lods
push
xor
jl
mov
pop
fists
sub
fsubrp
xor
lods
mov
mov
popf
jns
fsubrs
daa
scas
pop
mov
or
add
cmp
inc
movsb
sbb
std
xchg
inc
push
lahf
loopne
leave
inc
jne
mov
sbb
adc
andb
ror
daa
dec
clc
int
popf
iret
push
mov
inc
xor
out
mov
xchg
jno
sahf
inc
test
shll
call
mov
jae
out
addr16
jl
jo
cli
fucomp
popf
push
add
les
lahf
sub
shlw
inc
add
pop
addb
mov
add
lock
mov
inc
inc
dec
sbb
mov
stos
and
cli
aas
outsb
mov
sahf
outsb
pop
shll
les
pop
or
adc
push
orl
inc
popf
ds
dec
add
out
repz
xchg
fldl
xchg
xchg
xlat
scas
enter
jns
mov
mov
xor
fsubs
sub
pop
mov
movsl
push
sti
pop
or
xor
hlt
enter
sti
fwait
mov
push
jae
push
bound
mov
divl
addr16
das
jecxz
hlt
out
xor
fdivr
bound
jo
ds
inc
aad
sub
imul
pop
icebp
nop
sahf
out
test
nop
bswap
pusha
mov
cmpsl
out
call
pop
inc
gs
xchg
sub
pop
xor
ret
push
bound
sub
push
js
or
dec
lock
cli
push
pushf
dec
mov
cmp
jl
jmp
inc
or
ret
xor
dec
sbb
iret
or
in
jle
xchg
lods
scas
xor
fwait
inc
ljmp
jo
mov
das
xchg
jp
lahf
mov
loop
shlb
mov
or
pop
lahf
outsb
lods
gs
mov
mov
loop
ljmp
notb
daa
xchg
sbb
cmp
out
xor
ja
mov
lods
xlat
rcrb
scas
sub
mov
into
fdivr
fimull
push
lcall
clc
sbb
jns
cwtl
mov
inc
fstpl
sbb
sbb
jns
out
sti
js
mov
roll
testl
xor
jnp
fdivr
mov
or
and
xor
mov
or
dec
dec
adc
adc
ffree
mov
pop
lea
inc
ss
das
ficomps
cwtl
push
push
imulb
ficoms
push
int
rcrb
sub
sbb
lcall
lds
out
sbb
adcl
dec
pusha
lods
popa
jbe
push
mov
and
js
adc
insb
imul
lods
mov
lea
popf
test
cmp
xchg
testl
xchg
les
jmp
ficoms
hlt
icebp
xchg
pop
clc
cmp
std
je
fstpt
sbb
int
fnsave
and
adc
fs
or
outsb
mov
xchg
imul
cmp
xor
out
push
cmc
cmc
adc
call
and
flds
bound
push
jo
jle
daa
imul
pop
repz
xor
push
daa
xchg
cld
inc
jnp
xor
or
mov
repnz
out
into
stc
lods
psubd
jnp
loopne
es
popa
es
outsl
sbb
loopne
and
lods
imull
and
dec
andb
pop
popa
dec
cmp
and
enter
xor
and
adc
lods
push
jb
pop
lods
daa
jg
stos
pop
insl
push
hlt
lods
inc
clc
cwtl
fstp
mov
dec
call
ljmp
aad
dec
lds
adc
bound
imul
dec
or
into
push
je
test
cld
sarb
mov
and
inc
mov
mov
testl
sub
add
mov
mov
jb
pop
or
lcall
inc
out
jnp
dec
push
scas
cwtl
mov
scas
popf
into
fcmovbe
js
xor
insb
pop
iret
cmp
je
int3
cmpsb
test
lret
or
pop
dec
fstps
icebp
sbb
mov
mov
dec
outsl
mov
testb
repz
pop
and
negb
fwait
xlat
push
repnz
xchg
jl
inc
push
test
or
mov
and
and
xchg
mov
ret
dec
cltd
fcompl
or
mov
or
out
mov
cmp
imul
outsl
push
pop
adc
out
fsubrs
cmp
icebp
cmp
ret
ficoml
sbb
push
cmp
aam
rclb
mov
adc
cmpsl
push
pop
test
inc
xor
jle
aad
lcall
dec
sub
int3
mov
xchg
add
es
aas
out
add
ljmp
push
pop
shl
fildl
fisttpll
inc
hlt
lea
stos
pop
arpl
xor
add
jge
addr16
int
jp
push
js
nop
jl
cmp
xchg
pop
pop
les
mov
sub
cmp
cld
and
push
pop
addb
xchg
jae
clc
push
jecxz
mov
aas
add
in
xor
call
push
cmpsb
push
cmp
in
lret
add
sbb
sar
fldt
aaa
scas
push
ds
adcl
pop
xchg
jg
test
jmp
adcb
cld
dec
int
adc
xchg
mov
test
rorl
cmp
jbe
push
and
test
xor
xor
call
sub
dec
outsl
or
aam
sarb
stos
inc
push
leave
or
sub
loopne
test
into
jnp
repz
mov
rorb
inc
mov
and
add
nop
cwtl
std
add
sbb
stos
outsl
mov
xchg
js
mov
pop
mov
cmpb
push
cmp
mov
in
mov
add
js
sarl
xor
pop
adc
xchg
lahf
popf
fcmovne
das
push
mov
faddl
cltd
cmp
filds
insl
push
xor
ret
mov
push
xchg
loopne
cli
xchg
push
cltd
adcb
xor
jbe
hlt
mov
xchg
imul
idivl
dec
jae
ret
pusha
aaa
cmpsb
out
jno
mov
or
mov
pop
jecxz
dec
mov
lds
mov
adc
push
push
fwait
je
xor
xchg
inc
pop
int3
jp
xorl
xor
jge
movb
into
shll
mov
mov
repnz
pop
sub
jb
dec
js
mov
sahf
inc
mov
popf
and
add
adc
repz
sub
inc
jne
fcomp
testl
mov
push
and
cltd
lea
cli
ss
sbb
ja
inc
xchg
lock
adc
cmp
jp
mov
xor
xchg
and
lret
pop
xchg
adc
outsl
lock
and
pop
int3
rcr
out
pushl
xor
cmp
ret
xchg
sub
addb
jo
getsec
mov
shll
inc
pop
mov
push
or
sarl
add
stc
jae
jle
test
sbb
pop
bound
ss
inc
xor
adc
mov
loopne
je
xor
jp
sbb
fdivrs
imul
add
lods
pop
repnz
inc
xor
call
aaa
push
adc
dec
mov
push
dec
dec
lcall
pop
fisubl
aad
mov
rclb
shl
dec
add
cmpb
mov
cwtl
xor
arpl
inc
rolb
push
push
movsb
cmp
adc
divl
lods
inc
out
xchg
arpl
sbb
mov
popf
imul
mov
ljmp
arpl
inc
mov
add
ds
into
mov
and
sbb
fnstcw
xchg
sbbl
stc
xor
pop
das
pop
cli
sbb
insb
mulb
adc
jmp
dec
pop
mov
scas
imul
xchg
mov
fsubl
and
inc
xchg
sub
inc
cmp
repz
mov
mov
packsswb
adc
adc
rolb
sbb
repnz
stos
dec
adc
cmc
stos
sbb
mov
or
aas
and
xor
ficomps
xor
repnz
xchg
mov
jo
pop
pop
pop
lea
mov
mov
in
and
jbe
pop
mov
repz
cwtl
jae
rcll
mov
add
push
add
loope
aaa
or
sbb
icebp
push
call
fdivl
mov
mov
test
xor
lcall
mov
popf
mov
push
in
push
mov
cmp
iret
mov
in
sub
mov
cs
mov
push
add
dec
ljmp
xchg
fmull
push
mov
inc
jg
pop
xor
xor
cld
add
frstor
mov
xlat
loope
andb
stos
aas
fwait
jecxz
sbb
add
mov
cmp
mov
aam
push
push
jg
dec
push
ds
jmp
in
jmp
insl
gs
dec
addb
jb
xor
jle
sbb
sub
mov
jecxz
mov
dec
push
cwtl
lock
out
add
push
ljmp
insb
lods
mov
mov
pop
xor
sbb
or
mov
mov
xor
into
pop
dec
test
bound
add
int
sarb
sub
rorb
aam
sbb
popf
xor
std
jo
aam
cmpsl
push
test
sbb
lods
cmpl
ret
fsubl
insl
popa
cmp
out
sub
fsubrs
mov
xchg
push
popf
mov
loopne
lock
cli
int
add
mov
insl
push
pop
adc
lock
outsl
aam
adc
mov
cwtl
mov
dec
imul
fadds
jns
pop
loop
jecxz
inc
rcr
out
in
scas
sti
ljmp
sbb
rcr
add
push
rorb
jge
xor
ja
jbe
adc
sbb
or
out
jnp
popa
aas
in
fnstcw
test
shr
pop
dec
int3
shlb
dec
imul
dec
push
mov
or
mov
adc
or
scas
pop
call
test
inc
sub
arpl
cltd
es
ds
or
repnz
and
icebp
mov
cltd
outsl
cs
aas
add
ret
shlb
pop
sub
rcrl
ja
push
mov
nop
inc
into
mov
pop
ret
push
loop
inc
mov
xchg
enter
xor
adc
cmc
fs
push
das
lods
xchg
nop
pop
adc
cmc
aam
add
adc
icebp
jg
add
sbb
mov
or
out
out
inc
lock
lret
jmp
popf
das
js
pusha
clc
cmp
dec
push
loope
fdivs
fsubl
lds
and
in
arpl
mov
jl
mov
lret
cld
add
subb
push
adc
aas
and
repz
xchg
cmpsl
lahf
jno
or
stc
dec
gs
std
aam
fmull
in
aad
pop
mov
mov
dec
mov
lds
lcall
pop
mov
xchg
xor
add
xchg
or
push
jo
rorb
xchg
gs
xchg
xchg
mov
pop
adc
pop
cmp
inc
mov
mov
push
sub
inc
sub
mov
jno
ljmp
dec
jb
out
mov
ja
movb
inc
inc
push
add
xor
sub
fs
mov
in
fiaddl
stc
shr
cmpsb
ljmp
push
fadds
mov
movsl
mov
ror
ljmp
cmp
cs
push
in
jnp
lea
shlb
int
sti
pop
inc
pop
xchg
jecxz
mov
sub
insb
push
jl
xchg
lods
push
push
adc
cmpsl
test
mov
movsl
pop
cmp
lock
repz
mov
call
xor
cmp
mov
jnp
and
fmull
dec
dec
cs
push
pop
aam
mov
jl
sub
sbb
jle
mov
jmp
aam
shll
xchg
cwtl
arpl
push
adc
or
loop
cmpsl
jno
andl
ret
daa
notl
outsb
rcrl
fwait
sub
repz
je
jle
mov
subl
stc
push
arpl
xchg
push
xchg
dec
jno
pop
fdivrl
frstor
add
pop
push
enter
sub
or
cmc
or
ja
xor
mov
xor
decl
mov
in
fwait
sub
es
xchg
imul
add
std
dec
adc
adc
xchg
repnz
aaa
add
test
pop
dec
daa
dec
das
and
lret
mov
sahf
inc
ss
cmc
cld
fildl
xor
in
mov
cltd
or
or
and
mov
add
test
stc
and
mov
cmc
inc
jne
inc
scas
jmp
lods
cltd
dec
repz
clc
and
mov
pop
sub
push
push
test
cmp
push
mulb
add
aaa
std
jae
dec
jge
add
lahf
ljmp
add
push
xlat
bound
sub
cmp
shl
mov
in
in
rorb
subl
in
push
mov
lret
add
scas
loope
test
dec
adc
mov
cltd
xlat
loopne
mov
lock
push
mov
mov
or
and
dec
dec
lcall
loopne
xchg
or
popl
add
imul
bound
dec
enter
jecxz
mov
jo
aad
stos
mov
fdivr
out
imul
lods
cltd
arpl
mov
jns
lock
jbe
mov
jae
arpl
adc
or
ret
sbb
adc
mov
sbb
or
sbb
sub
test
xor
sub
jp
push
sarl
data16
in
dec
mov
movsl
aaa
xchg
js
sbb
or
dec
mov
test
xor
cld
push
sub
insl
xchg
pop
imul
pop
iret
ror
ss
call
scas
imul
mov
push
pop
stos
js
inc
dec
rcr
imulb
mov
outsb
aas
frstor
or
jle
fs
ja
dec
lahf
xchg
aaa
xor
inc
jmp
test
lret
mov
shlb
jge
add
fiaddl
pop
push
xor
loopne
je
mov
xorb
and
or
or
and
sub
sub
data16
xor
adc
pusha
sbb
das
jno
inc
cmp
sub
insl
fsubrl
sbb
repnz
fldlg2
inc
xchg
cwtl
scas
loope
mov
scas
gs
mov
xor
jnp
sub
add
or
repnz
aas
or
xchg
mov
call
dec
mov
lds
mov
clc
cmp
addr16
js
ds
xor
dec
dec
add
mov
movzwl
xchg
inc
jo
imul
addr16
and
lret
jmp
or
xor
sub
xchg
ljmp
xlat
mov
icebp
sub
adc
cmpsb
fldt
std
call
mov
subps
les
push
pop
sbb
scas
inc
test
jg
mov
cmp
fwait
call
aad
push
add
mov
mov
mov
jne
mov
scas
sbb
repz
clc
test
je
mov
or
pop
fadds
dec
fnstenv
dec
call
push
jbe
enter
xor
dec
out
ret
cmpsl
mov
mov
fisubrl
jmp
xor
aaa
xchg
mov
mov
mov
cwtl
xor
dec
xchg
out
cmc
mov
hlt
pushf
inc
scas
int3
mov
shlb
movsb
xor
repz
jo
test
add
jnp
popf
mov
imul
xor
pop
sub
pusha
sub
lret
fs
sbb
out
sub
cmp
mov
out
inc
push
pusha
jae
sbb
mov
pop
adc
cltd
pop
xlat
adc
test
bound
xor
outsl
add
sti
lock
and
fwait
xor
sbb
fidivrl
fsts
jae
lret
mov
and
mov
push
in
xacquire
out
adc
fmulp
xor
ss
hlt
shrb
jb
mov
dec
add
mov
mov
pop
adc
jns
mov
push
imul
and
inc
call
je
loope
repz
adc
sbb
pushl
lcall
ret
or
das
xchg
dec
xor
mov
arpl
or
sbb
mov
pop
int
sbb
nop
movsb
out
lret
shrb
aaa
xchg
sarb
out
pop
or
fmul
adc
ffree
push
dec
outsb
dec
leave
inc
ljmp
mov
xor
lods
push
pop
jno
cmc
or
sbb
adc
std
stos
adc
jg
in
sub
movsb
ret
mov
mov
leave
inc
scas
fs
dec
adc
xchg
push
cltd
add
or
lock
pop
push
pop
adc
xchg
mov
arpl
pop
pop
add
mov
icebp
lods
adc
repz
xor
pop
dec
pusha
push
cmp
mov
and
or
aam
jne
sub
jae
aaa
outsb
jmp
test
bound
push
add
inc
sti
mov
push
inc
cltd
mov
mov
xor
fwait
adc
push
aas
out
xchg
sbb
push
mov
nop
push
ljmp
ret
jg
mov
cmpl
jno
daa
outsb
lret
sbb
insl
adc
pop
sub
in
stc
fsub
je
cmp
inc
cld
xchg
jecxz
fs
out
mov
fcoml
sarl
mov
roll
enter
mov
test
dec
in
inc
stc
aam
mov
cmp
add
mov
jb
mov
insl
pop
mov
aam
xchg
sbbl
mov
cmp
push
xchg
xchg
ljmp
out
rcll
lea
lods
addr16
mov
pop
repz
packsswb
out
mov
sub
mov
insl
mov
lods
fwait
sub
leave
pop
outsb
jo
or
ret
imul
ret
lods
add
mov
mov
orb
fwait
icebp
xchg
lods
inc
test
sti
jp
push
and
ljmp
imul
hlt
aad
in
cmp
out
std
jb
rclb
cmpsl
jne
xchg
pop
cmp
add
sbb
std
xlat
inc
xchg
mov
sti
fwait
hlt
notb
dec
test
xchg
mov
imul
jb
sub
and
and
jbe
jl
sti
cs
fwait
sarb
mov
and
ss
scas
scas
das
jbe
xchg
xchg
or
pushw
out
mov
inc
fimuls
xchg
lahf
in
mov
jge
fs
loope
imul
repnz
ljmp
jecxz
andl
stc
cs
jg
ret
add
fisubrl
add
pop
das
or
pop
sahf
int
jo
pop
push
nop
xchg
pop
cmp
lea
add
les
nop
out
mov
jns
nop
jge
test
jecxz
hlt
mov
inc
adc
pop
out
push
mov
sub
fstpl
pusha
xchg
pop
or
outsb
cwtl
fwait
xor
dec
into
adc
mov
mov
cmp
enter
mov
mov
add
imul
fnstenv
das
and
lock
pop
mov
pop
loopne
cmp
inc
orl
push
in
jl
add
dec
push
xor
xor
insb
or
pop
jl
psrad
adc
loopne
jl
enter
addr16
xchg
imulb
mov
and
push
dec
xchg
out
cmp
pop
inc
cld
cmp
mov
movsl
in
jecxz
scas
push
call
xchg
mov
movl
jp
enter
jl
mov
loopne
ds
xchg
rcrl
and
mov
jp
iret
push
test
jp
pop
lret
mov
shrb
repz
lcall
mov
mov
mov
out
cld
mov
fucomi
mov
cs
cmpsb
push
stos
pop
frstor
movsl
sbb
in
add
mov
cmp
gs
mov
jmp
clc
nopl
sete
aam
ljmp
ds
inc
stos
pusha
adc
dec
and
orb
adc
imul
cmpsl
cmp
jno
cmp
scas
addr16
lds
fidivs
jbe
xor
dec
xlat
pusha
or
iret
pop
fneni(8087
mov
popa
cmp
push
shll
sub
xchg
adc
inc
fdivp
js
mov
xor
dec
xchg
fwait
mov
cmpsb
mov
cs
addr16
cld
lret
or
or
stos
pop
xor
inc
jle
add
imul
sub
shrb
sbb
add
int
cmp
in
add
xchg
mov
push
jg
dec
mov
inc
rcl
daa
pop
repnz
ss
lds
mov
xchg
mov
pop
lahf
call
cmp
cmpsl
cmp
mov
mov
test
cmp
push
ljmp
mov
mov
mov
mov
hlt
pop
clc
jle
adc
mov
enter
fnsave
sbb
xchg
pop
out
inc
xchg
mov
scas
dec
shrb
andl
push
or
adc
std
fildll
xor
popa
xchg
inc
roll
aas
cmc
mov
push
push
add
mov
pop
push
pushf
push
jge
xor
inc
loopne
mov
cli
mull
pop
push
lret
pushf
adc
or
das
out
xchg
mov
jge
imul
and
sbb
push
sub
push
in
add
out
pop
sbb
addl
scas
inc
mov
jns
adc
lock
rclb
int3
push
or
lods
push
ret
imul
jge
sub
inc
cmp
rol
cs
cld
fsubrl
sub
xchg
xchg
daa
mov
sbb
mov
repnz
test
add
inc
dec
mov
mov
jle
pop
add
mov
imul
in
aas
mov
loope
adc
add
es
aaa
in
xor
adc
sbb
mov
push
push
mov
aas
and
in
iret
jo
cmp
imul
inc
jmp
sub
dec
lret
jle
add
pop
dec
and
imul
adc
mov
mov
dec
repnz
js
sti
jb
out
dec
into
das
arpl
sub
ret
xchg
ja
cwtl
daa
gs
imulb
adcl
xchg
mov
fstps
mov
cltd
xchg
loopne
sub
mov
mov
jne
lret
cmp
jne
push
jle
fucomip
xchg
js
ja
aaa
bound
cmp
mov
dec
lock
jp
repnz
cmp
pop
mov
and
inc
orb
pop
sub
and
scas
js
aad
pushf
push
addr16
lock
add
adc
adc
mov
out
mov
mov
les
in
inc
sub
popa
pop
xchg
pop
jge
adc
fcoml
fsubs
int3
dec
jg
jge
outsb
push
std
xchg
and
push
lea
ret
cltd
cld
mov
test
popa
xor
mov
shl
mov
popf
cmc
mov
or
sarl
xor
andl
aas
sub
hlt
rcll
movsl
pop
jns
aam
jp
mov
mov
lds
or
shrl
call
mov
je
push
and
fucompp
js
add
sbb
rol
lea
xlat
outsl
push
fcomi
or
inc
fmulp
xor
cld
inc
mov
dec
push
lods
ds
xchg
or
out
xchg
add
pop
mov
jnp
test
repz
sub
xchg
pop
cmp
int3
adc
adc
lret
out
xchg
sub
loope
sbb
stc
cmpsb
pusha
aas
fsubrl
orb
dec
jl
xchg
jns
in
or
mov
add
es
cs
popf
xor
aam
das
mov
inc
jmp
fmuls
dec
ret
xlat
ljmp
mov
mov
ds
popa
iret
lahf
lret
jp
dec
adc
ja
popa
pop
adc
insl
loope
cmp
pop
sti
adc
fists
out
bound
lods
pop
dec
mov
jae
sbb
sahf
mov
call
ret
dec
cmp
sarl
sbb
test
data16
mov
jl
xchg
jmp
lahf
pop
std
mov
ja
mov
push
cmp
inc
ss
fadds
dec
or
cmpsl
popa
inc
pusha
cmp
aam
aam
stc
push
arpl
push
sahf
inc
dec
jle
in
xlat
mov
daa
inc
sahf
fistpl
inc
or
shrl
sbb
push
lret
in
push
cltd
cmpsb
repz
aas
inc
lods
jg
cmp
pop
les
mov
mov
lea
pop
in
shlb
push
cmpsb
leave
fdivrs
sbb
sub
into
and
push
or
push
arpl
femms
movsl
add
outsl
push
pop
pop
push
jp
and
pop
fbld
jo
shlb
int
pop
jl
dec
in
add
test
pop
sbb
jo
add
sbb
into
or
sbb
outsb
xchg
sarl
ret
int3
xchg
lds
and
cmp
test
jecxz
pop
jp
jbe
push
xchg
notl
mov
test
push
jge
inc
or
add
jnp
mov
and
xchg
inc
pop
test
push
push
arpl
cmp
mov
sub
and
adc
int3
jle
scas
scas
push
jmp
leave
test
jb
lea
jle
sbb
jnp
in
fdiv
icebp
mov
pushf
mov
insl
stos
sbb
mov
arpl
pop
movsl
in
adc
cmc
cs
shrb
mov
ljmp
inc
rorl
daa
push
lcall
hlt
mov
lcall
cmpsb
imul
aas
push
and
insb
push
test
pop
jae
in
shll
xor
jb
insl
aad
js
movb
add
cmp
sub
add
mov
mov
xchg
clc
cmpsl
dec
cmp
repz
push
cmp
adc
push
push
dec
and
jae
mov
pop
cmp
lds
dec
imul
mov
ljmp
mov
es
imul
pop
or
adc
mov
mov
cwtl
rcr
or
fldenv
cwtl
pop
sbb
xchg
xchg
sbb
gs
adc
in
dec
fistpl
pop
cwtl
dec
outsb
pop
mov
pop
xor
stos
jae
or
add
addr16
ljmp
jg
lea
pop
and
and
ja
sub
or
or
rolb
sub
ds
push
add
sbb
sub
adc
add
cwtl
mull
into
lods
inc
in
sbb
pop
xor
dec
loope
ljmp
xchg
jnp
std
xchg
mov
call
sub
in
int3
dec
lods
jge
in
mov
cmpsb
sbb
jnp
adc
xor
in
fwait
dec
popa
lcall
ror
outsb
pop
add
int
mov
dec
push
xorl
add
xor
imul
cld
repz
add
sahf
loopne
fistps
mov
mov
out
into
sub
lea
push
cs
addr16
sbb
jmp
xor
push
fildll
stc
das
fnstenv
in
pop
adc
loope
arpl
cmp
cmpsb
and
push
aad
jnp
mov
inc
cmpl
in
xchg
and
dec
xchg
pusha
in
not
ss
mov
es
sbb
ljmp
fldl
pop
jle
ja
icebp
jge
call
mov
imul
inc
xchg
or
jno
cmpsl
dec
shlb
jg
pop
inc
sub
dec
sbb
ret
lock
mov
cs
dec
sbb
ja
fnstsw
jecxz
mov
xor
mov
lods
ja
fisttps
out
outsb
add
loope
inc
and
xlat
sbb
dec
and
in
test
push
clc
jmp
int3
ds
leave
inc
addr16
dec
inc
jmp
imul
mov
inc
ret
mov
gs
add
jb
ds
cmp
loope
cs
ss
shll
push
leave
out
adcb
stos
divl
movq
jae
mov
xor
xor
lahf
jae
adc
dec
test
ret
jp
rcrl
xchg
mov
outsl
icebp
mov
mov
call
cmpsl
mov
xchg
fdivrs
mov
sahf
lret
outsb
and
push
ds
lea
sti
and
push
xor
sbb
sbbl
loope
into
mov
test
out
int3
xchg
je
imul
arpl
xor
je
arpl
sub
push
pop
icebp
inc
test
xchg
inc
dec
mov
lods
daa
or
dec
ret
nop
sub
xlat
notl
popf
aam
stos
out
hlt
dec
jbe
hlt
cmc
outsb
mov
popa
mov
mov
mov
js
out
xchg
dec
push
inc
sbb
or
fsubs
cmp
jecxz
mov
jle
push
ja
in
push
test
jo
or
popa
fldl
divb
cmp
cmpsl
outsb
add
xchg
mov
adc
jmp
fcomip
pop
dec
and
sahf
jns
dec
dec
sub
push
xor
push
xchg
dec
outsl
adc
lock
scas
cmp
pop
push
bound
pop
movsb
or
test
push
test
mov
scas
testb
lret
or
dec
fcmovne
push
cmp
mov
inc
in
imul
mulb
mov
clc
xor
mov
lods
out
mov
add
xorl
mov
divb
mov
dec
and
nop
jns
inc
pop
cmpsl
sub
push
out
mov
adc
ja
test
adc
es
ja
cs
stc
test
in
jg
push
loopne
ljmp
shll
aaa
xchg
inc
js
add
stc
and
fildll
aad
js
sbb
out
mov
jo
rcrl
mov
aad
fcmovb
mov
pop
das
cmp
xchg
shlb
xor
stc
jecxz
cltd
data16
imulb
out
push
jns
loope
add
inc
jle
pop
loop
add
jmp
bound
loop
out
cmpsl
pop
fwait
xlat
cmpsb
mov
das
aas
push
mov
jno
iret
xor
mov
push
fbld
jb
xchg
mov
mov
sbb
cld
push
out
test
or
push
rcl
lds
cmp
jnp
lret
repnz
add
push
cli
cmp
sub
std
sbb
dec
aam
test
dec
pushf
std
bound
sahf
pushf
inc
sarl
mov
push
sbb
pop
test
rcl
je
ficoml
mov
cwtl
mov
add
popf
hlt
clc
or
fcmovnb
bound
sub
outsb
add
cltd
add
test
inc
popf
jg
das
dec
in
and
jmp
and
inc
xor
clc
sub
mov
xchg
lea
aas
imul
mov
out
push
xchg
nop
add
pusha
pop
sti
call
mov
push
mov
mov
fs
repnz
repnz
in
out
or
mov
int3
pop
pop
xor
jmp
cs
or
aad
fwait
and
mov
push
push
mov
sbb
stos
push
ja
jecxz
mov
inc
sti
sub
loop
loopne
hlt
je
test
lcall
add
pop
loope
rorl
insb
fcomp
mov
xor
insl
orl
jnp
in
pop
lahf
mov
xor
leave
movsb
inc
jae
cmp
fcmovnb
out
or
in
xchg
int3
out
dec
inc
popf
test
and
xchg
xor
outsl
stos
cwtl
pop
inc
xor
jg
mov
in
ds
hlt
fisttps
aas
add
mov
int3
mov
rclb
data16
xor
aas
aam
je
xor
jecxz
jle
daa
fdivrs
ret
jnp
xlat
dec
stos
or
lahf
pop
out
mov
xchg
and
gs
in
push
ljmp
push
scas
adc
fiaddl
mov
pushf
dec
mov
imull
stos
cmp
pop
es
stc
fwait
mov
xor
adc
outsl
xchg
rcl
adc
mov
sahf
add
pop
out
movsb
jmp
adc
inc
ror
xor
mov
adc
jp
xor
jnp
int
cltd
push
clc
into
mov
jae
mov
das
or
ja
sahf
or
dec
jo
cltd
rclb
and
mov
lcall
sub
xor
andb
es
aaa
lods
pop
rcl
push
mov
mov
loopne
cmp
push
pop
fsubrs
sbb
mov
mov
fistpll
or
xchg
cs
xchg
push
test
cli
call
mov
mov
movsl
stos
jns
mov
fwait
int
fwait
cmp
out
add
outsl
xchg
mov
mov
xchg
cmp
and
push
push
sahf
js
mov
or
out
mov
mov
imul
cmp
pop
fs
pop
xchg
inc
pop
movsb
xor
or
dec
sbb
imul
inc
push
pop
cmp
mov
inc
movsl
scas
loopne
dec
mov
mov
das
sub
roll
mov
inc
add
out
in
es
arpl
out
and
repz
jge
push
or
sbb
je
or
stos
sahf
and
jge,pt
dec
ljmp
jg
test
jb
mov
inc
sub
or
or
jbe
lea
sahf
cld
daa
jo
sbb
dec
mov
jns
mov
movsl
cmp
pop
mov
leave
icebp
jnp
movsb
out
and
idiv
jl
xor
int
xchg
inc
jne
sub
mov
mov
mov
lock
in
sbb
orl
add
push
icebp
sub
or
iret
xchg
out
sbb
mov
test
pop
cs
jbe
sub
and
mov
mov
xor
scas
xor
xor
dec
inc
mov
outsl
sbb
aas
sbb
lret
jmp
out
cmpb
lods
lds
pop
das
dec
xchg
in
out
inc
rol
fmul
nop
push
and
aaa
int3
enter
testb
xchg
fdivs
lock
mov
xchg
gs
hlt
lods
sbb
out
mov
fcoml
push
cmpsl
jp
xchg
call
dec
pop
ret
dec
fsubrl
bound
sbb
adc
scas
mov
je
repz
mov
mov
xor
push
fwait
popf
pop
lcall
xor
add
add
mov
add
or
push
mov
movsb
inc
stos
bnd
test
sbb
out
repnz
shrl
push
jo
inc
lods
xchg
mov
int3
out
decl
mov
popa
lret
mov
imull
jg
sub
sub
fadds
cmpsb
dec
lds
jno
mov
add
data16
mov
sub
std
pusha
into
and
add
sahf
popf
outsl
lret
dec
fldt
adc
call
int
aad
mov
mov
jbe
mov
arpl
jle
sub
push
xchg
out
dec
int3
mov
xchg
arpl
mov
mov
test
fbld
sub
mov
push
inc
lock
cmp
xlat
in
xor
or
add
imul
sarl
cld
jge
enter
and
adc
mov
dec
fidivs
add
xchg
and
push
shl
inc
jnp
pop
sar
dec
shrl
lock
incb
cmp
cmpsl
sub
jge
dec
shlb
outsl
push
fstpt
mov
and
pop
push
pop
xlat
pop
ljmp
das
popl
daa
bound
pop
xchg
inc
jl
sbb
loop
mov
aad
pop
push
xor
or
dec
ljmp
push
icebp
mov
push
dec
dec
jne
mov
adc
hlt
mov
jp
lcall
mov
mulb
and
cmc
push
push
fildll
adc
cwtl
or
cld
sub
push
mov
push
cmp
cld
adc
sub
cmp
in
and
xor
pop
inc
xchg
lock
inc
js
or
jle
adc
rorl
mov
scas
mov
repz
iret
mov
push
mov
jle
insl
mov
xchg
add
insl
inc
and
leave
mov
lret
sbb
dec
idivl
inc
push
mov
neg
sub
insl
cs
pop
je
imul
ret
imul
jbe
jno
in
sbb
mov
ret
mov
scas
mov
jmp
cmc
pop
addb
xor
sub
or
inc
mov
cmp
fnstenv
scas
fs
out
outsb
sahf
je
push
iret
cs
push
mov
sbb
dec
jns
mov
sarb
pushf
pop
inc
icebp
and
out
xchg
test
or
cmp
dec
fwait
xchg
call
test
and
fucomi
push
test
mov
lds
out
dec
rolb
mov
mov
sub
pusha
dec
pop
iret
xor
cmc
clc
lcall
or
jg
mov
frstor
add
sub
add
lea
test
add
xchg
push
shl
repnz
setno
shll
lock
sbb
or
xchg
in
cmpsl
push
adc
in
pop
push
call
adc
mov
fdivrs
jnp
in
jo
cmp
xchg
frstor
bound
insl
jge
repnz
movsb
fsubrs
sub
mov
sbb
stos
call
std
xchg
and
pop
cwtl
pop
add
pop
test
push
out
fcoms
xor
xchg
mov
daa
sbb
and
adcb
insb
into
in
ds
xlat
xchg
fimuls
fsubl
int
mov
hlt
mov
mov
test
sub
mov
xlat
inc
fcomi
test
int3
and
pop
push
cmp
lods
pop
int3
dec
popf
shll
dec
dec
mov
aaa
dec
js
insl
pop
dec
adc
or
loopne
mov
je
bound
scas
ror
and
or
cmp
cmp
xlat
cld
and
in
divl
xchg
xor
lods
loop
jp
lods
nop
and
repnz
jmp
add
lock
inc
jp
inc
jl
std
mov
mov
push
cmp
dec
loopne
adc
push
mov
out
sub
mov
pop
ss
push
jg
xor
sbb
movsl
sti
adc
fisttps
push
addl
popf
leave
fs
xchg
pop
popf
push
imul
adc
mov
out
mov
push
fcom
sub
or
xor
adc
movsl
xor
sbbl
adc
lods
jns
add
ja
jmp
mov
pop
mov
and
clc
fnstsw
hlt
int
lahf
xchg
js
leave
gs
insl
ja
fsubrs
sub
and
cmc
out
mov
sbb
dec
jge
cli
push
popf
xchg
mov
mov
pusha
fcoms
scas
mov
mov
or
popa
cwtl
push
ror
fisubrl
jnp
fsubrp
adc
push
pop
and
add
xchg
xchg
insl
pop
and
cmpsl
add
dec
into
in
mov
pop
cmp
sub
mov
mov
pop
out
add
shlb
add
inc
and
ret
movsb
xchg
lret
xor
popa
repnz
rorb
cld
pop
outsb
sbb
cmpb
popa
cmpb
sub
inc
aad
mov
rcll
data16
cmp
ss
pop
add
imul
pop
and
cmp
sbb
mov
and
psllw
sub
out
xchg
xchg
es
cmp
lds
jge
arpl
loope
xchg
jle
into
popa
in
mov
xchg
mov
jne
push
mov
mov
das
test
outsl
mov
pusha
jne
movsl
pop
aam
mov
sti
mov
xchg
dec
mov
ljmp
mov
cmp
aam
imul
test
leave
xchg
cli
inc
and
movsl
popa
mov
push
rolb
stos
incb
push
test
mov
mov
jne
shr
adc
push
idiv
cmp
mov
out
lods
insl
pushf
fwait
sbb
and
xchg
mov
pusha
sti
fstps
xchg
inc
test
mov
jmp
pop
xchg
ljmp
notl
inc
popa
and
cmpsl
jg
enter
mov
lret
push
dec
xchg
std
pop
adc
out
movsb
scas
leave
mov
mov
mov
inc
or
data16
test
and
jb
iret
mov
dec
ret
fsubs
push
xchg
cmp
in
or
inc
inc
jae
or
pusha
aaa
cmp
lahf
xchg
sub
push
sti
inc
cmp
sbb
test
std
mov
fisttps
cmc
imul
aam
adc
pop
dec
repnz
dec
sub
adc
mov
add
jno
out
repz
xchg
movsl
push
mov
xchg
adc
dec
sub
mov
subl
out
pop
sti
pusha
lret
cmp
push
outsb
in
lahf
adc
xor
sbb
rcrb
test
rcl
fsubs
jg
jmp
sbb
sbb
adc
dec
mov
movsb
addr16
cmpb
cmpsb
imul
insl
test
in
xchg
test
hlt
jmp
cld
out
js
xor
stos
ljmp
lcall
jbe
jl
mov
std
adc
loope
scas
push
pop
aad
or
into
mov
ret
mov
pushf
cmp
aas
lods
push
mov
lcall
daa
cli
enter
cmp
xor
andl
outsl
movsl
add
lahf
mov
mov
out
sub
inc
pop
lret
das
add
leave
fcompl
xor
push
push
es
cmp
mov
fwait
mov
sbb
std
inc
roll
imul
int
lea
jg
cli
adc
loop
and
jp
out
jae
adc
test
outsl
out
roll
fadds
loope
cmc
pop
mov
xchg
ret
inc
popf
adc
push
sub
mov
outsb
test
lahf
lahf
pop
push
idivl
in
into
mov
loopne
outsb
adc
pop
mov
jg
dec
popf
in
add
data16
rcrb
std
mov
xchg
movsb
icebp
mov
lret
lret
pop
hlt
or
mov
cmpsb
mov
push
fimull
cmp
and
jecxz
ret
test
ret
mov
xor
cltd
stos
jae
inc
inc
adc
push
xchg
push
inc
repz
ds
xchg
iret
lahf
jg
inc
inc
pop
mov
adc
lds
test
jb
jl
sub
jp
out
mov
sbb
cmp
push
xchg
ja
fwait
test
cltd
pop
scas
xchg
push
cmc
cwtl
iret
fs
jae
cmp
dec
xchg
pop
je
mov
pop
mov
dec
sub
xchg
jg
or
or
pop
sarl
mov
fnstsw
ds
inc
xchg
inc
stc
adc
mov
jns
mov
mov
jecxz
ret
pop
clc
aas
pop
daa
adc
idivl
and
testb
in
adc
push
mov
jb
ficoms
mov
adc
dec
jne
int3
and
out
data16
repz
in
add
sub
pop
or
shlb
jb
testb
xorl
adc
andl
mov
pop
and
sub
xchg
mov
dec
or
test
sti
setns
repnz
lods
mov
test
inc
pop
stos
nop
mov
stc
out
fcmove
movsl
pop
xor
mov
pop
popl
in
and
mov
sub
inc
mov
xorb
jmp
leave
mov
dec
pop
or
mov
mov
pop
les
and
push
stc
or
mov
addr16
xchg
xchg
jae
pop
xor
xor
ljmp
mov
jl
xor
loopne
pusha
lret
nop
mov
push
add
aad
sarb
movsl
xor
mov
sti
sar
daa
outsb
xchg
mov
mov
and
and
rcr
inc
call
pop
pop
push
fcom
iret
dec
mov
lret
mov
hlt
cmpsb
sbb
scas
and
xchg
cli
or
xchg
fs
dec
stos
insb
jb,pn
nop
lret
mov
sub
insl
push
and
jb
ret
int3
sub
xchg
inc
mov
or
adc
sub
data16
clc
daa
shrl
and
sbb
adc
push
aaa
sbb
xchg
pop
xor
sti
push
testb
and
in
pop
cmpsl
mov
push
and
repz
mov
mov
jmp
cltd
popa
or
xchg
or
mov
add
imul
xchg
dec
rorb
imul
out
xor
addr16
frstor
fwait
dec
sbb
mov
aas
loop
xor
jne
popa
mov
imul
mov
ss
inc
push
sub
sbb
sbb
sahf
test
int
repz
jnp
fstps
xchg
or
popf
lds
mov
add
repz
fisttpll
xor
xchg
jecxz
xchg
lcall
movsb
daa
mov
inc
stc
mov
push
inc
outsl
push
mov
iret
dec
lcall
pop
lahf
pop
shl
imul
adc
mov
stc
loopne
push
mov
push
or
mov
stc
sti
fwait
icebp
and
xor
pop
xlat
xor
sbbl
icebp
int
movsl
mov
test
jns
or
dec
insb
inc
sbb
imulb
cmp
ja
ret
xchg
cltd
sar
xor
imul
filds
rorl
fstps
mov
negl
or
mov
shl
jecxz
out
xchg
imull
mov
fidivs
push
sub
push
rorb
add
jge
mov
mov
sbb
insb
shll
fdivrs
lods
lods
mov
mov
icebp
sbb
xchg
fidivs
sub
loopne
mov
ss
xchg
xor
movsl
rcrb
inc
orl
adc
or
push
xchg
mov
sbb
and
jg
test
lret
mov
mov
sarl
pusha
mov
les
rcr
jnp
or
or
add
adc
mov
xor
idiv
inc
sbb
push
adc
adc
pop
push
mov
xchg
push
xor
fnstcw
sbb
mov
xor
and
and
adc
sahf
mov
outsb
mov
pop
jo
int3
pop
push
aad
in
sub
push
dec
repnz
add
andl
mov
out
test
or
adcb
mov
inc
aaa
xchg
aas
mov
cmp
mov
xor
xor
ret
push
adc
mov
push
pop
ljmp
mov
sbb
std
mov
fisubrl
jb
jae
pop
iret
outsl
mov
loope
sbb
insb
jno
gs
lret
je
fxch
and
es
shll
sub
lods
cmp
xchg
mov
jae
je
mov
adc
loop
inc
std
mov
iret
std
cmp
xchg
fcom
jecxz
mov
xlat
add
roll
fsubs
sti
and
hlt
mov
and
imull
daa
lahf
pop
test
inc
lret
aam
cmpb
jae
sbb
cltd
adc
enter
jg
push
lock
adc
repnz
or
mov
push
cmp
popa
imul
dec
out
movsl
fwait
pop
mov
imul
mov
loop
push
add
cmpsb
sub
fwait
mov
xor
adcb
jecxz
fdivrp
push
mov
jmp
outsl
pop
leave
icebp
inc
ds
aas
lods
pop
nop
add
adc
movsb
mov
test
lea
and
cmc
inc
pushf
or
sarb
aaa
iret
xor
out
mov
clc
out
pop
mov
mov
clc
adc
ljmp
jbe
int3
es
fmull
cmc
ret
int3
mov
mov
or
pop
aam
jp
dec
or
sub
jnp
and
incb
sti
negb
add
mov
loopne
jge
mov
out
cmp
repnz
sbb
shr
jge
arpl
mov
dec
sahf
arpl
lahf
cli
pop
sub
jecxz
pop
jns
gs
sti
lahf
mov
pop
push
and
incb
aam
adc
cmpsl
out
sbb
je
add
cmp
icebp
aas
ss
lret
movsb
loop
jmp
sub
negl
subl
adc
out
sbb
scas
pop
scas
sbb
jmp
pop
add
and
adc
arpl
aaa
sti
dec
fldenv
sbb
adc
popf
scas
xchg
jnp
adc
pop
aas
loop
daa
sub
sahf
fdivrp
out
int3
add
jecxz
fidivl
xor
popa
add
jp
mov
sbb
jb
sbb
sbb
leave
or
movsl
mov
pop
push
inc
push
cmpsb
sbb
fiaddl
sub
daa
int3
shrl
mov
push
jmp
mov
loope
dec
push
jnp
xchg
dec
andb
and
testb
xchg
jg
lods
mov
imul
dec
jae
cmp
scas
sbb
cmpsb
fiaddl
or
std
cltd
jge
inc
sub
push
mov
adc
fcoml
xor
stc
add
test
ds
xor
aas
outsb
push
movsl
dec
adc
out
pushf
and
test
pop
mov
aad
mov
inc
shr
mov
cwtl
push
mov
sub
push
ret
jl
fwait
mov
loope
cmp
es
jbe
addr16
push
mov
movsl
movsb
jbe
test
pusha
push
sbb
insl
and
das
test
addr16
dec
call
sbb
jbe
outsl
sahf
dec
jl
adc
pop
fld
push
xor
pop
popf
lret
outsl
cli
sahf
ljmp
ret
dec
inc
xor
lret
push
addr16
les
sahf
sub
sti
xchg
mov
divb
sub
mov
pop
xor
pop
or
and
ja
and
sbb
jno
jg
popa
aam
or
lahf
fiadds
addr16
mov
sub
into
cmp
aas
popa
mov
movsl
lcall
loopne
push
aas
xor
mov
jle
test
stos
or
daa
jo
das
mov
imul
jns
bound
cmpsl
insb
jae
inc
mov
inc
outsl
dec
enter
imul
push
push
add
jge
lret
shlb
xor
xchg
jns,pn
repnz
lock
dec
lods
aad
cmpsb
xorl
push
loop
icebp
das
lods
in
sbb
out
adc
push
adcl
push
fistl
mov
es
fs
add
pop
mov
outsb
pushf
sub
pop
addr16
leave
mov
mov
mov
pop
or
sbb
push
stos
mov
mov
loope
jle
sbb
push
xchg
xlat
and
icebp
bound
add
push
inc
loope
je
and
xor
jb
xor
andb
mov
mov
push
lcall
sbb
inc
leave
std
lds
arpl
cmp
pop
pop
pushf
cmp
dec
adc
es
mov
push
fadds
lret
mov
pop
movsb
cwtl
or
dec
sub
incb
fs
adc
cmpb
into
mov
hlt
shll
jp
imul
loope
inc
sbb
xchg
insb
jmp
lods
mov
mull
sub
inc
subb
lret
cld
cmpsb
addr16
and
lret
stos
mov
test
inc
loop
mov
call
loope
xlat
lret
xor
xchg
push
xchg
movsb
adc
rcr
icebp
fstps
jnp
cmp
sarl
mov
mov
pop
sahf
xor
fsubs
mov
leave
ljmp
jg
mov
daa
push
inc
imul
pop
icebp
rclb
notb
inc
call
sti
jg
pop
jge
ret
push
mov
jle
std
push
pusha
les
loope
pop
lea
mov
mov
sub
in
clc
adc
adc
movsl
test
pop
mov
es
mov
mov
iret
sub
xlat
in
xor
pop
add
adc
cmp
xor
cwtl
mov
mov
rcrb
xchg
cmp
fisttpll
sahf
sbb
mov
divb
in
lcall
outsb
inc
jg
mov
enter
insl
cltd
and
scas
aad
movsl
int
adc
imul
adc
jge
jecxz
adc
aam
dec
push
add
in
mov
sbb
pushf
xor
xchg
xchg
addr16
mov
jl
lock
xor
ret
fsubrl
ss
incl
popf
shll
dec
cvtdq2ps
mov
js
arpl
imul
pushf
fnstenv
or
fs
jecxz
cmp
xor
pop
or
push
pop
pushf
lods
mov
add
inc
aad
mov
imul
mov
icebp
in
in
xchg
mov
mov
jnp
ss
adc
iret
sub
out
je
mov
imul
mov
mov
subb
aas
push
lds
inc
jae
pop
and
mov
pop
int3
scas
fdivs
icebp
shl
sbb
mov
cmp
test
out
lret
jl
lock
shrl
and
fisubs
loop
lods
out
sub
mov
scas
dec
loop
cmp
les
push
pop
push
sbb
cmp
out
repz
jmp
pop
mov
sub
push
jge
sbb
scas
pop
mull
xor
sbb
aas
jo
sarl
into
aas
cmpsl
popa
mov
int3
ret
push
mov
cmp
stos
pop
ds
add
arpl
neg
call
jno
fldenv
inc
ret
jbe
test
and
pop
push
cmp
pop
sub
push
aam
pop
inc
loopne
add
cmp
pop
sub
sub
and
jae
and
and
jnp
cmovae
jnp
jge
arpl
cmp
xor
jle
dec
sub
scas
out
or
pop
jo
cwtl
pop
roll
fmul
mov
xor
test
andl
jmp
push
nop
mov
adc
rcrb
les
jae
insb
shrb
xorl
into
out
xchg
push
xor
cmp
lds
cwtl
push
dec
leave
test
mov
mov
fistps
clc
xchg
pop
dec
ja
sub
addr16
pop
mov
xlat
fbstp
stos
sbb
mov
push
out
add
into
cmp
leave
mov
arpl
pop
dec
loope
hlt
repz
shl
mov
xchg
rcrl
scas
or
mov
test
out
mov
mov
aam
clc
inc
test
inc
or
stos
lahf
add
das
xor
adc
xchg
push
sbb
shll
pop
fs
add
xorb
and
or
sbb
sub
adc
test
jno
ds
lock
icebp
add
les
mov
dec
xor
xlat
xchg
sbb
sub
xor
sub
add
or
mov
stc
lcall
jmp
mov
lock
pop
ds
sub
lcall
adc
leave
cli
popa
add
out
jb
movsb
and
mov
pushf
or
mov
aad
inc
adc
pop
mov
jbe
lods
std
pop
jge
in
inc
xlat
sahf
pop
inc
sar
iret
leave
loop
push
test
setne
pusha
mov
movsb
jmp
inc
mov
jns
ficompl
sub
loop
fdivrp
inc
push
sub
mov
lret
xchg
in
push
in
sbb
lcall
add
out
mov
jmp
ss
les
xlat
inc
cltd
pop
data16
jmp
int3
insl
out
and
sbb
adc
xor
in
and
out
lcall
mov
dec
rclb
mov
and
test
pop
ret
dec
fcom
std
inc
sbb
mov
aad
fidivl
pop
mov
outsb
dec
and
lds
jne
and
jne
push
out
xchg
mov
pop
in
inc
mov
icebp
cli
jbe
and
stos
popf
mov
push
jne
loope
pop
fcoms
mov
cmc
mov
sub
adc
imulb
xchg
push
dec
or
icebp
test
lods
fimuls
push
ja
cld
movsl
aas
cmp
xchg
adc
push
test
mov
icebp
inc
leave
lds
dec
lods
pop
in
mov
push
push
push
mov
lahf
jecxz
les
lcall
push
in
lods
dec
js
or
pop
push
mov
pop
mov
lahf
sub
xor
dec
mov
icebp
inc
je
and
gs
int3
xchg
ljmp
mov
push
add
setb
call
push
mov
fsubrl
jl
iret
pop
jmp
mov
mov
mov
push
popf
leave
push
mov
or
repnz
xor
outsl
dec
and
xchg
mov
pop
lds
cld
ret
add
mov
sti
inc
iret
es
xor
fidivrl
call
neg
push
shlb
int3
subb
clc
jge
lods
pusha
popf
addr16
fstpt
ljmp
stos
sbb
jo
mov
or
fs
cmp
lock
jo
mov
ja
inc
sub
mov
arpl
add
mov
es
in
dec
and
je
mov
push
aaa
adc
add
lods
cs
psrad
movsb
and
or
mov
jbe
fs
lea
popf
sti
dec
mov
lahf
loopne
sub
xor
fistpl
dec
mov
xchg
dec
orl
mov
in
in
pop
jle
mov
pop
mov
shlb
lods
dec
rcrb
lahf
xchg
loope
inc
xchg
cmove
shll
cmp
sub
fmuls
and
inc
aaa
insl
mov
lcall
and
mov
sbb
filds
sahf
faddl
ret
idiv
outsb
add
add
mov
insl
sub
pop
or
lahf
cmp
scas
adc
into
ss
aam
and
int
rorl
aaa
sub
mov
mov
add
and
cmp
rcrb
inc
sbb
pop
push
ljmp
push
mov
test
cmpsb
sub
aam
fbld
push
inc
xchg
xor
mov
lods
adc
and
je
test
jbe
adc
jle
hlt
cmp
cmpsb
dec
or
cmpsb
cltd
mov
or
sahf
cmp
cmp
sub
sti
push
xchg
mov
xchg
mov
lods
push
xchg
mov
xlat
cmp
add
cmc
mov
std
mov
pop
xor
jno
in
mov
stc
orl
pop
fldt
xor
lock
cmp
popa
and
mov
pushf
push
insl
out
xchg
push
aam
sbb
jg
outsb
sbb
mov
iret
xchg
test
ret
inc
movswl
sarl
nop
mov
mov
push
adc
adc
add
popf
or
dec
mov
movsl
cltd
jge
cmp
mov
dec
jecxz
and
inc
adc
pop
into
mov
jl
cmpsb
mov
mov
into
sahf
dec
test
daa
mov
loope
push
mov
out
jl
js
jns
je
sbb
inc
les
push
inc
push
lea
test
cwtl
xor
dec
dec
xchg
xor
push
xor
test
xor
cmp
les
arpl
cmp
xor
inc
leave
insl
lahf
imul
pop
or
sub
push
mov
fs
or
jns
bound
dec
outsb
jb
cmc
adc
inc
mov
repz
sub
mov
xor
fmul
sbb
sbb
or
dec
imul
mov
adc
and
outsb
inc
test
sbbb
mov
pusha
fidivl
mov
mov
pushf
outsl
ja
mov
dec
push
ja
enter
and
in
repnz
lcall
test
sbb
insl
pushf
xchg
and
lods
scas
mov
xor
hlt
shll
fstpl
inc
test
mov
dec
cmp
xchg
lods
and
dec
add
sbb
fsubrl
jbe
int3
or
adc
mov
sub
je
add
stos
dec
push
pushf
orb
test
out
into
mov
movsb
in
dec
pop
pop
jp
sarb
mov
dec
sub
inc
xorl
test
ja
ljmp
les
repnz
pop
sbb
addr16
and
mov
lahf
cmp
inc
testb
pop
jae
add
dec
fucomi
pop
mov
fldt
dec
repnz
frstor
inc
rolb
loop
adc
movsb
xor
outsb
repz
push
mov
mov
jl
and
scas
cwtl
lods
lcall
jbe
pop
mov
movsb
pop
test
dec
insl
jbe
aad
cmp
sub
xchg
mov
pop
mov
mov
lock
incb
test
cld
aad
stos
push
dec
insl
in
lahf
jno
jae
lret
sbb
pop
xor
cmc
mov
inc
cmpsl
in
int
push
push
xchg
fsub
xor
lcall
or
cwtl
lea
push
adc
test
push
ror
adc
ret
sub
rolb
xchg
out
adc
xchg
mov
dec
fwait
bound
xlat
fidivl
mov
lea
add
push
sub
inc
movsb
pushf
and
jecxz
cmpsb
sahf
sub
test
cmp
dec
inc
ret
testl
aam
inc
test
lock
or
lock
push
iret
aam
icebp
adcb
bnd
stos
add
imul
mov
insl
pop
add
gs
jbe
or
lods
fdivrl
inc
das
xchg
cmc
xchg
adc
mov
push
cmpsb
cmp
ss
icebp
lcall
std
dec
leave
mov
or
lcall
fsubrs
xor
pop
add
movsl
addr16
cwtl
in
loop
mov
xor
mov
iret
repnz
cli
mov
or
ja
add
leave
scas
sti
mov
fisubs
mov
mov
popa
add
ljmp
xchg
xchg
mov
sahf
leave
jp
jge
sub
movsb
inc
adc
popa
or
fwait
pop
mov
das
lods
clc
dec
hlt
xchg
dec
addb
xor
nop
mov
in
lods
dec
push
pop
dec
leave
xchg
mov
mov
pop
vpackssdw
adcl
addb
orl
pop
stos
lock
stc
mov
insb
and
loopne
push
inc
mov
cmpsb
sti
lods
mov
mov
sub
repz
inc
jns
inc
mov
add
xchg
mov
mov
adc
shr
or
xchg
dec
adc
xchg
nop
adc
cmpsl
inc
xor
ret
jmp
sub
js
jne
movsl
mov
sahf
mov
or
xor
imul
outsl
pop
fbld
rolb
lds
imulb
pop
into
jo
arpl
sub
not
cmp
test
push
cmp
leave
fwait
stos
pop
out
ja
sub
mov
fsubs
icebp
sub
addl
dec
loope
fisubs
stc
ja
dec
adc
call
mov
cmp
dec
sbb
adc
or
lea
insb
orl
and
inc
mov
stos
inc
mov
sub
outsl
cmp
call
cmp
sbb
sahf
in
push
bound
inc
adc
mov
or
outsb
mov
pop
fwait
jmp
lret
xor
add
inc
ljmp
lret
pop
pop
mov
fwait
mov
aam
pop
push
lahf
popf
ss
mov
sub
dec
jns
or
xchg
pop
rclb
push
mov
adc
jo
call
dec
add
scas
outsb
daa
ja
je
push
fwait
sub
cmp
push
pop
pusha
lea
pop
jle
cmc
aad
or
es
aam
jle
shr
sbb
out
iret
dec
js
cmpsl
jo
push
ret
push
pop
out
cli
inc
ret
insb
rcrb
ja
fidivrl
xchg
ljmp
jl
jmp
fdiv
xor
xor
lock
mov
sub
add
stos
out
stos
aad
aas
xchg
adc
cmc
aaa
mov
mov
and
xchg
jo
sub
or
jnp
sub
mov
lcall
xchg
popa
and
mov
inc
aad
fldenv
dec
test
add
and
outsl
jecxz
aam
sub
loope
cmp
lret
jl
ret
add
push
add
scas
arpl
jle
lea
outsb
add
fiadds
cmp
cmpsb
cmp
jp
movsb
enter
adc
jp
out
loop
cmpsl
stos
or
into
lea
add
rcr
jecxz
fs
dec
rcl
cmp
jmp
in
out
lret
aaa
pop
or
int
cmp
loop
movsb
xchg
fcomp
mov
dec
sbbl
fdivl
dec
cwtl
div
sbb
lret
fdivrl
outsb
mov
cmp
mov
aam
push
xchg
xchg
add
mov
pop
stos
dec
popfw
dec
sbbb
or
out
adc
sub
mov
repnz
shlb
out
pop
mov
stos
adc
cmp
push
add
flds
jg
jle
jno
es
mov
mov
loop
xor
xor
sahf
popf
pop
cmp
fisubrs
cwtl
xchg
xor
sti
test
lds
mov
iret
cmpsl
mov
dec
push
lds
cmp
ret
mov
test
jp
cmpsl
icebp
mov
or
movsb
lcall
loop
push
pop
jnp
mov
jo
pop
add
jmp
xchg
adc
xchg
and
push
jg
fwait
jg
inc
pop
shlb
cmp
fs
push
cmpb
test
xor
faddl
popa
stc
lret
dec
xor
cmpsl
add
mov
add
sahf
mov
pop
aas
add
in
or
mov
loope
ret
jno
xor
or
aad
stos
jmp
les
shr
stos
mov
mov
popa
fld
fldenv
mov
sub
subl
xchg
cmp
add
xchg
mov
imul
ret
mov
movsl
lret
dec
or
mov
int
icebp
or
arpl
push
ja
sub
into
sbb
fiadds
adc
call
int3
sbb
idivb
cmp
or
xor
stos
ficomps
rclb
imul
push
in
xchg
lds
xchg
call
ret
mov
jge
sarl
pop
arpl
ret
sub
mov
out
push
out
outsb
arpl
cmp
or
pushl
pop
xchg
pop
add
mov
in
xor
push
add
lret
cmpsl
mov
sti
sub
and
call
das
xor
out
in
and
pop
add
popf
jo
ja
test
mov
inc
mov
fisttpll
pop
mov
call
loopne
call
inc
xchg
mov
xor
inc
rcr
dec
add
pop
andl
jno
adc
jg
or
pop
jb
repnz
sbb
mov
xorb
mov
inc
aam
pop
mov
test
pop
stos
lret
xchg
jl
sbb
jge
arpl
insl
ja
pop
out
mov
enter
lcall
insl
inc
xchg
xchg
pop
mov
adc
les
popf
js
cs
mov
jmp
pusha
insl
clc
pop
dec
mov
sbb
sbb
outsb
push
mov
rolb
xchg
ja
cltd
xor
ljmp
xor
test
cmp
mov
dec
arpl
cmp
push
cmpl
scas
push
int3
insl
inc
push
data16
and
adc
jnp
bound
jne
repz
vmwrite
in
dec
mov
mov
movsl
int
push
sbb
mov
dec
pop
xchg
push
lds
mov
or
daa
in
test
cltd
dec
dec
imul
stos
dec
shl
sbb
mov
nop
push
dec
sbb
daa
jl
dec
loop
call
addr16
addr16
cmp
sti
fdivl
es
inc
add
inc
roll
iret
arpl
stos
daa
lods
or
xor
push
mov
add
and
lock
mov
test
sahf
push
lods
sbb
insl
pop
movsb
lret
pusha
aaa
dec
push
cwtl
shrb
movl
inc
and
enter
bound
es
pop
addr16
sub
mov
and
sti
push
pop
js
fdivp
mov
ficoms
and
aad
pop
mov
into
sbb
shlb
cld
jbe
outsb
push
repz
lock
cwtl
xchg
mull
stc
or
stos
ds
xor
mov
stos
movsl
popf
xchg
divb
nop
rcrb
fdivl
cmp
mov
daa
mov
sub
clc
loopne
xor
clc
inc
cltd
and
iret
mov
or
ss
in
cmc
dec
lret
shlb
lret
push
iret
mov
sbb
pop
pop
pop
xchg
cli
push
pop
scas
xchg
adc
add
outsb
leave
inc
mov
scas
sbb
ja
dec
pop
add
cmpl
mov
sub
lret
xchg
enter
fisttpl
cmpsl
push
aas
pushl
pop
cmp
iret
stc
jns
icebp
and
inc
insl
and
or
scas
mov
dec
bswap
add
jecxz
mov
push
xlat
push
pop
ret
inc
cmpsb
call
das
mov
push
cmp
bnd
push
xor
call
push
orl
or
inc
xor
sbb
push
jl
dec
jns
popf
mov
out
add
lret
lret
insb
out
jecxz
out
sahf
push
push
lock
sarl
mov
imul
sub
leave
push
xor
clc
xchg
mov
sbb
dec
cmp
jnp
push
cmp
dec
jp
dec
iret
push
outsb
sti
stc
out
cwtl
mov
movsl
push
pop
pop
data16
jb
lahf
sub
and
lret
ret
lods
and
cwtl
jp
jp
xchg
cld
stos
cmpb
roll
popf
mov
cmp
mov
xchg
fwait
dec
and
pusha
lcall
xchg
push
mov
stos
scas
in
shlb
xor
mov
pop
mov
je
mov
es
imul
xchg
jg
in
xlat
movsl
je
xor
adc
jnp
jp
sarb
enter
pop
das
out
cmc
enter
mov
adc
or
cmpsb
in
mov
pushf
add
cli
mov
xchg
xchg
jne
and
jge
repnz
dec
sbb
adc
pushf
pop
adcb
fwait
add
fstpt
sahf
fimuls
add
jmp
lahf
xor
cld
out
in
movsl
popa
push
js
cwtl
lock
pop
int
pop
cmpsb
mov
adc
dec
mov
push
xchg
movsl
lea
stc
test
push
mov
sbb
sub
jl
popf
jmp
sbb
inc
out
xor
mov
jae
ud1
pop
mov
jg
mov
push
mov
xchg
scas
js
pop
rcll
push
inc
adc
movsl
icebp
cmp
add
sbb
mov
dec
test
lods
xchg
adc
lds
cmp
pop
xchg
xchg
push
lds
pop
or
movsl
pushf
sub
inc
enter
ljmp
mov
xchg
mov
lea
jmp
dec
sti
je
push
or
jb
dec
out
fstps
xchg
xor
stc
cmp
test
pusha
adc
mov
mov
mov
and
xor
sub
mov
mov
imul
xchg
push
repz
push
aad
mov
add
fcompl
test
jae
enter
sbb
push
add
jbe
xchg
sub
shlb
rcrb
jae
and
psrad
loop
fldt
push
add
aad
cmp
in
insl
push
pop
xchg
fs
fwait
push
jno
mov
cld
scas
sti
lods
push
rcll
cmpsb
inc
adc
in
and
adc
inc
xchg
xchg
ljmp
pushl
test
dec
shlb
or
ficompl
scas
stos
rclb
pop
ret
out
das
xor
push
mov
into
add
fadds
mov
fidivl
mov
mov
cmp
imul
addl
jbe
mov
in
imull
loope
mov
lret
mov
push
adc
xor
nop
push
js
xchg
out
movsb
add
cmp
dec
lds
or
aad
jo
movswl
inc
fisubs
cmp
in
xor
xchg
adc
leave
mov
les
lret
stos
xchg
fsubrs
pop
push
cmp
pusha
push
jmp
or
dec
inc
mov
pushf
jecxz
aam
or
fcomi
pmulhuw
jmp
push
insl
lds
jmp
sub
jecxz
test
fisttpll
popf
pop
iret
jge
imul
cmpb
mov
push
jecxz
addb
ds
daa
pop
sbb
mov
fcmovnu
adc
aam
fldln2
sbb
xlat
dec
fcoml
mov
pop
out
lods
loop
mov
popa
jl
rol
jns
stc
mov
gs
jnp
pop
jle
xor
fldenv
outsl
xor
sbb
xchg
repnz
xchg
jg
adc
aaa
stos
jl
add
mov
and
std
inc
inc
iret
cmp
les
push
sbb
in
xchg
arpl
sar
call
lods
add
hlt
adc
inc
add
dec
sub
rol
cmp
xor
or
adc
aas
mov
lods
int3
inc
dec
xchg
sbb
mov
gs
mov
pushf
jp
push
pop
dec
lods
push
xchg
bound
rolb
out
jno
test
orb
cmp
mov
xchg
cmc
xchg
xchg
push
add
lmsw
outsb
loopne
pusha
xchg
jle
inc
mov
and
cmp
inc
jmp
out
xor
add
jg
enter
mov
mov
push
popa
mov
fistpl
dec
leave
iret
dec
std
pusha
shll
cmp
and
in
jnp
or
inc
jo
cmpsb
bound
xchg
and
nop
or
mov
lods
or
xor
ja
mul
xchg
pop
sar
int
xchg
test
sub
mov
popa
and
mov
andl
pop
jmp
mov
xlat
outsl
rorl
adc
lea
out
out
in
imul
aam
xorb
cmp
push
ss
mov
adc
add
shl
std
xchg
jg
push
sbb
int
lret
call
imul
adcb
stos
mov
mov
jle
add
stos
sahf
das
loop
jge
cmpsb
call
push
and
mov
adc
pop
aaa
pop
jmp
mov
mov
fistl
sti
mov
sbb
mov
jg
xchg
mov
pop
rorl
int3
cmpsl
jb
insl
push
orb
sbb
fists
xchg
hlt
lods
test
test
xchg
mov
and
cwtl
push
fnstenv
mov
scas
xor
fbld
test
push
jecxz
inc
xor
cmovge
in
add
jge
aam
ret
pop
cmpl
dec
and
inc
mov
xor
loopne
push
push
clc
icebp
test
push
dec
push
ficoms
out
dec
dec
lods
adc
xor
data16
mov
pop
inc
and
xchg
jmp
pop
adc
inc
pop
lock
movsb
xchg
out
enter
mov
std
mov
int
xchg
sbb
sahf
inc
add
add
inc
fldenv
insl
orb
lahf
jb
xor
mov
lret
roll
dec
push
sarb
rolb
and
idivb
imul
and
std
das
mov
inc
addr16
pop
imull
int3
gs
pop
jecxz
push
into
dec
lea
push
pop
popa
lds
jnp
ss
adc
mov
mov
add
lret
cmpsl
fsubrs
dec
and
daa
stc
pop
xchg
jmp
jb
mov
stos
push
or
mov
lcall
adc
mov
cmp
inc
pop
dec
jo
cltd
pop
outsb
in
adcl
inc
mov
pop
call
inc
mov
movntps
pop
leave
shlb
pop
popa
push
push
jge,pt
jp
push
push
leave
push
ss
xor
stos
in
dec
or
loope
test
ja
fbstp
aam
jge
je
or
pop
cli
pop
sub
test
or
pop
in
sub
ds
out
and
cmp
cmp
inc
sbb
mov
shrl
mov
movsl
enter
mov
cmovb
fildl
rorl
mov
decl
test
negb
sbb
sbb
or
mov
addb
hlt
cmpsb
daa
pop
int
jp
shrl
pushfw
ds
clc
int3
or
imul
and
and
mov
out
dec
cmp
sbb
lret
push
dec
and
inc
ss
xchg
adc
or
stc
cli
daa
and
outsl
fstl
or
sub
xlat
jl
rcr
outsl
xor
push
pop
sahf
pop
sbb
and
cmp
sbb
imul
sub
ds
or
xchg
daa
rcll
jne
mov
add
xor
movsb
xchg
pop
push
bound
push
rcr
je
mov
pushf
dec
dec
addb
xchg
lods
cmovae
mov
out
cmp
fmull
xor
add
jo
xchg
add
jle
dec
sub
adc
push
pop
xor
enter
push
or
pushf
add
in
mov
jge
in
mov
stc
and
and
push
xchg
ret
fstpl
xchg
into
pop
or
inc
divb
adc
ljmp
pop
xchg
pop
mov
in
and
ret
fldl
mov
add
add
notl
mov
jg
stc
aas
mov
pop
xor
in
sar
and
pop
imul
push
add
xorb
mov
shl
mov
push
enter
dec
adc
jmp
mov
xchg
scas
jb
imul
push
test
add
inc
add
scas
mov
fsubl
jl
mov
lds
sbb
lret
or
sbb
jnp
lea
dec
pop
and
xchg
jmp
mov
ffreep
mov
push
arpl
xor
push
cld
inc
sahf
jb
mov
test
sub
ret
lcall
leave
lods
jo
jns
pop
pop
and
outsl
or
imul
dec
das
outsl
lea
adc
xor
jle
aas
int3
xor
out
inc
xor
ss
pop
lds
dec
or
divb
loopne
jp
xchg
add
fnstcw
push
pop
ret
push
adc
rorl
sub
push
mov
mov
push
dec
add
ja
and
loope
sbb
cs
pop
cmpsl
push
sbb
negb
popf
push
pop
out
out
jle
cmp
lret
jmp
mov
push
sbb
std
shll
cmp
jle
push
scas
aam
aaa
mov
out
cli
fildl
add
repz
push
jle
dec
sbb
fs
adc
test
mov
movsb
mov
push
lea
andb
inc
dec
sbbl
xor
cmc
push
lcall
push
bound
out
push
cmpsb
adc
dec
sub
jns
or
ret
xor
pop
sub
and
cmp
push
dec
pop
cmp
fsubrl
movsb
add
adc
xchg
xchg
mov
imul
sub
loope
icebp
or
gs
mov
leave
aas
scas
cmp
rcrl
pop
adc
scas
popf
loopne
mov
mov
in
mov
add
in
shlb
test
mov
test
jg
jnp
into
jno
jnp
fnstsw
fldenv
repz
movsl
add
push
inc
das
cmc
subb
fwait
sbb
add
add
add
xlat
adc
fwait
lock
sti
int3
inc
notl
outsb
in
ja
in
popa
les
fsubs
aas
daa
add
nop
mov
mov
test
mov
cld
sbb
inc
or
popf
xchg
leave
adc
dec
jp
cmp
lcall
pushf
scas
shlb
sub
sbb
xor
jae,pn
jmp
mov
sbb
cmp
or
mov
jo
mov
xorb
push
jl
pop
pushf
adc
sub
push
hlt
mov
cltd
fs
xor
add
inc
or
pop
inc
imul
iret
bound
pop
lret
xchg
lods
les
cmp
adc
loope
stos
addr16
pop
xor
aad
ret
sahf
cmpl
dec
cmpsl
fnstenv
inc
insl
cli
in
xor
jbe
ja
call
insl
pop
fistpl
lret
dec
xchg
sbb
ret
or
loope
xchg
push
leave
incl
nop
pop
dec
int3
sub
inc
cmp
shl
mov
scas
sub
xor
and
jmp
jmp
into
cmp
movsl
gs
push
outsl
jl
or
inc
aaa
mov
mov
cmp
pusha
xor
add
mov
leave
hlt
jnp
fisttps
mov
call
push
aam
outsl
shr
or
in
inc
xor
cmp
or
test
mov
and
mov
lahf
scas
inc
push
cmp
and
or
cmp
add
inc
movb
nop
int
push
or
push
and
mov
adc
mov
cmp
movsl
pop
jmp
mov
mov
int3
out
inc
mov
mov
mov
cltd
xor
push
sbb
ljmp
mov
mov
mov
cs
aad
inc
insl
movsb
xchg
mov
pop
aas
dec
pop
lret
repz
je
pop
mov
nop
mov
mov
test
in
inc
dec
push
push
aad
imul
sub
iret
pop
dec
cmpsl
mov
sub
mov
or
aam
js
mov
jnp
clc
xor
test
mov
dec
and
loope
out
add
xchg
push
sarl
inc
es
mov
xchg
mov
les
dec
sub
jecxz
push
ljmp
cmp
cmp
sti
push
pop
sbb
add
sub
jbe
mov
push
ss
jnp
outsl
adc
mov
add
mov
add
arpl
xchg
icebp
not
xor
cmp
sahf
dec
jmp
in
mov
jmp
scas
lds
push
out
mov
xor
nop
xchg
xchg
adc
inc
mov
enter
push
test
inc
push
testb
mov
mov
jns
inc
fsubl
xchg
insl
sub
mov
push
inc
enter
inc
cmpsl
fdivrl
adc
loope
dec
sub
fisttpl
inc
mov
ret
sar
and
in
call
sbb
lret
jne
pop
pushf
mov
daa
and
popa
pop
cmpsl
and
or
pop
out
stos
mov
cld
arpl
pop
fwait
push
cmp
jb
jle
sbb
push
dec
cmpsb
adc
xor
jb
dec
mov
in
jno
mov
xchg
add
xchg
dec
pop
das
xchg
test
je
cli
in
les
xor
push
movsb
test
xorb
push
icebp
lock
sbb
cwtl
in
aaa
rorb
add
int3
fmuls
and
inc
xchg
loopne
test
cmc
pop
inc
test
inc
je
pop
out
add
sub
or
fidivl
mov
imul
popa
cld
lret
int3
push
movsl
cli
lcall
cli
into
adcl
movb
imul
jbe
mov
pop
in
loop
and
jbe
jbe
cwtl
or
cld
xchg
cmp
aas
stos
out
subl
dec
notl
mov
test
sbb
rorb
sbb
push
push
jne
sarb
sahf
bound
call
bound
mov
lret
mov
repz
idivb
push
das
mov
xchg
fucomip
int3
adcl
imul
rorl
imul
mov
push
addl
icebp
inc
test
imul
out
jb
sbb
add
pushf
mov
jns
pusha
xchg
xor
jg
jns
xchg
hlt
sarb
xchg
sbb
mov
je
jl
jl,pn
sbbb
add
xchg
rorl
sub
in
lret
shrl
xor
pop
xchg
lahf
push
mov
lahf
js
cmp
hlt
movsb
subb
or
sub
testl
jecxz
movswl
inc
mov
xlat
jl
lahf
cmp
mov
dec
mov
stos
aam
jns
nop
cli
push
dec
lds
or
pop
sti
add
and
in
sbbb
xor
js,pn
sub
sbb
addr16
lea
sar
addb
cmpsb
pop
pop
fcomps
xor
adc
add
xchg
cltd
lds
rclb
inc
adc
sub
decl
pop
xor
loopne
daa
icebp
mov
cvttps2pi
jae
lea
dec
aam
pop
jmp
dec
imul
pop
loopne
fnsave
mov
test
mov
cmp
add
rorb
and
lods
decb
stos
dec
pop
lods
sbbb
out
xchg
xchg
daa
mov
mov
push
inc
push
mov
sub
in
or
call
and
xchg
movsb
adc
adc
sub
xlat
orl
jbe
xchg
xchg
adc
test
or
adc
lret
sub
rcr
add
push
inc
mov
clc
sub
fcomi
pop
push
mov
movsl
mov
inc
xor
je
lret
pop
jne
ds
lds
movsb
mov
xchg
pop
or
and
sbb
push
lahf
lods
or
xchg
rcll
lods
mov
push
stos
or
mov
lea
popa
sbb
jp
lea
addr16
mov
xor
scas
adc
mov
inc
push
adc
and
inc
jmp
dec
aad
mov
mov
jae
jg
push
adc
jbe
pop
popa
fiadds
pusha
movsl
push
add
push
inc
nop
mov
mov
xor
jae
ss
xchg
mov
pop
or
mov
jne
ss
mov
dec
sbb
adc
jp
call
sbbl
pop
mov
mov
cmp
pmaxsw
addl
mov
loop
mov
pushf
xchg
cmp
adc
leave
add
xor
pop
fiadds
xor
out
mov
dec
int3
popf
xchg
rdtsc
add
addb
sub
test
ja
js
scas
and
xchg
loop
jo
pop
pushf
pop
pushf
fdivrl
ds
or
or
push
outsb
xchg
xor
call
rcrl
mov
pop
test
xchg
inc
stos
mov
or
ds
fisttps
or
out
xor
adc
xchg
and
mov
sbb
mov
push
mov
push
and
gs
xor
out
lods
ljmp
test
or
cld
aam
es
inc
sub
pop
xor
inc
or
sub
stos
and
sti
sbb
bound
mov
sub
icebp
dec
sub
cs
cld
pop
jns
rcll
popa
je
pop
push
scas
dec
add
inc
xchg
repnz
movsb
outsb
and
and
imulb
enter
jmp
mov
and
push
push
js
mov
and
or
xchg
adc
test
cli
sbb
sbbl
test
and
jb
fcomps
dec
jg
mov
or
cmp
mov
pop
mov
add
adc
ljmp
jae
mov
jo
lods
xor
cmp
cld
xchg
dec
mov
ljmp
fdivs
mov
or
insb
mov
fbld
in
adc
cmp
fnsave
insl
mov
add
dec
aaa
xchg
mov
pop
dec
xchg
mov
push
inc
sub
mov
into
pusha
jns
push
in
or
pop
popa
mov
add
mov
imul
stos
lock
out
xchg
jl
sti
lea
sub
adc
inc
jle
lret
mov
or
sti
aas
xor
shl
adc
in
push
add
pop
loope
cmc
xor
sbb
fwait
pushf
out
imul
mov
jmp
outsb
sbb
xor
fwait
jne
stc
mov
jmp
das
pop
fcmovb
and
jb
add
mov
hlt
out
rclb
lds
cld
add
mov
fcmovb
test
inc
jecxz
xchg
sub
mov
inc
or
or
loop
jae
sbb
xlat
inc
mov
mov
stos
lea
mov
pushf
sbbb
fbstp
inc
sub
ljmp
cwtl
aam
bnd
mov
mov
cmp
ljmp
fisubrs
insb
xchg
cli
lds
sarl
sbb
ret
gs
push
push
popa
aaa
cmp
mov
dec
nop
jge
cmp
sub
idivl
leave
rcr
fisubs
add
mov
sub
push
das
dec
imul
lock
inc
fildll
jnp
mov
mov
sub
arpl
adc
std
xchg
stos
sbb
jns
mov
sub
in
mov
fsts
shrl
repnz
mov
aad
or
test
jg
insb
push
push
cld
sahf
cmpsb
pop
xchg
in
clc
xor
and
std
cmp
fsubrl
lods
dec
cld
aaa
adc
clc
outsb
add
movl
mov
out
inc
cltd
dec
in
xchg
fistpll
scas
leave
jecxz
ss
mov
sbb
cmpsl
ror
stc
out
lahf
pop
adc
insl
loop
fdivp
sbb
jno
or
ficompl
sub
mov
cmp
pop
aas
jmp
jecxz
ficompl
push
pop
jp
xchg
mov
push
push
dec
popf
ja
lea
adc
pop
outsb
out
cwtl
ret
mov
andb
adc
dec
sub
sub
jno
xorb
jl
cmp
mov
pop
pop
pushf
movsl
pop
jle
mov
jno
mov
push
adc
in
add
mov
cwtl
cwtl
in
fildl
mov
pop
adc
call
cmp
andb
mov
xor
imul
in
nop
xor
int
in
xchg
mov
push
lret
shrb
test
dec
aam
xor
outsl
mov
xchg
or
pop
imul
lods
icebp
rcll
jno
xor
in
and
add
and
movsb
arpl
pop
xchg
test
fcmovnbe
imul
adc
incb
nop
fldl
xchg
push
mov
jmp
pop
inc
rcrl
js
mov
inc
or
lock
jmp
adc
out
mov
jmp
cmp
mov
movsl
dec
jae
and
and
sub
dec
icebp
pop
subl
adcl
push
loop
orl
jp
fadds
pop
xchg
fwait
inc
loope
je
xchg
and
adc
aad
jmp
adc
addr16
stc
jno
cltd
int
pop
jmp
into
mov
loop
or
into
xor
and
in
repnz
cmc
sti
lods
sub
test
sub
imul
bound
jmp
push
mov
shlb
jmp
xchg
pop
paddd
in
outsb
mov
sub
push
xchg
stos
sbb
jnp
adc
mov
mov
inc
ja
mov
scas
mov
xor
ss
xchg
mov
push
ret
cwtl
movb
push
pop
loope
push
xor
aam
addr16
lret
movsb
adc
test
stos
xorl
jmp
pop
rorb
cli
mov
call
gs
arpl
xchg
jo
fs
add
jne
out
or
repz
lods
sbb
dec
xchg
pop
mov
and
ret
and
xor
aas
cmpsb
lret
pusha
fst
enter
inc
cwtl
iret
enter
mov
push
inc
push
cmc
lret
pop
dec
xchg
jns
cmp
or
in
xor
arpl
and
xor
jecxz
push
push
int
addr16
xor
outsl
fwait
xchg
cmp
lret
and
xchg
mov
or
push
lret
pop
addr16
mov
es
or
aas
loop
jnp
pop
xor
sbb
dec
xor
dec
xchg
test
xchg
orl
push
mov
push
mov
nop
pop
je
inc
mov
outsl
js
js
dec
add
lcall
aas
push
test
mov
push
xchg
cmp
inc
add
sahf
push
adc
popa
repnz
int3
jne
jecxz
dec
movsb
xchg
mov
adc
loope
mov
mov
cmp
aaa
inc
test
jno
or
lods
out
data16
jnp
ficomps
mov
test
rcr
xor
cld
and
inc
lods
sbb
fwait
push
imul
pusha
cmp
clc
adc
sub
in
cmpsb
test
scas
mov
mov
xor
xchg
or
xor
and
inc
les
xchg
lods
clc
pusha
inc
lds
xor
cmpsb
andb
and
rcrl
lret
mov
pop
mov
adc
inc
and
imul
mov
into
cmp
out
fninit
cmp
insb
aas
es
nop
ffreep
mov
add
add
data16
mov
sbb
or
adc
pop
out
add
xor
pop
iret
pop
lods
pusha
inc
push
mov
out
enter
xor
or
mov
sub
fnsave
bound
test
dec
sti
and
xchg
add
stos
pop
dec
jo
repnz
inc
popf
or
call
push
jne
fs
or
testl
sub
mov
ret
faddp
jecxz
ja
loop
test
loop
daa
fnstsw
mov
and
cmpl
adc
or
mov
cwtl
cli
adc
cmp
sub
fcomps
stc
push
push
pop
xor
pop
ret
xlat
pop
pusha
add
sub
mov
sbb
cmp
mov
js
into
lahf
adc
inc
sub
xchg
clc
dec
ret
movsb
in
fwait
test
movsl
iret
jae
testl
lods
outsb
push
dec
lcall
xor
out
mov
enter
stos
mov
jmp
mov
adc
inc
mov
in
cmp
mov
lods
push
mov
testb
mov
dec
dec
add
std
stos
in
imul
mov
clc
loope
fcoml
inc
loopne
cli
pop
dec
data16
cmpsb
pushf
xchg
push
push
inc
mov
adc
shrb
jae
and
enter
test
xchg
test
push
sti
aam
sbb
push
rorb
dec
out
cltd
insl
fidivl
jo
or
sti
xor
inc
data16
aam
sbb
mov
orl
jp
cltd
pop
jge
xchg
inc
cs
cmp
in
mov
push
mov
mov
dec
enter
imul
jae
push
mov
mov
push
jae
mov
xchg
cld
mov
push
enter
mov
xlat
inc
imul
adc
cwtl
std
sti
mov
mov
hlt
mov
dec
insl
repz
hlt
mov
push
dec
enter
dec
push
xorb
inc
adc
lret
stos
add
pop
jmp
sar
lods
xor
xchg
inc
cmpb
xor
repnz
jl
pop
movsl
in
mov
lds
es
xchg
jbe
push
sub
add
out
sahf
cmpsl
sti
push
push
pop
insb
or
jbe
push
sti
jl
imul
test
jo
repz
mov
imul
imul
jge
or
and
cmpsb
pop
inc
cmpl
dec
pop
popf
jbe
mov
mov
fs
push
les
inc
mov
pushf
and
cmc
dec
mov
addl
xor
stos
test
ret
mov
dec
je
loop
jl
mov
or
xor
mov
test
or
mov
je
ds
in
sub
cmp
xor
fwait
leave
jle
pusha
nop
adc
dec
mov
or
xlat
dec
mov
fsubs
scas
cli
cmc
cmpsb
inc
rolb
sbb
dec
mov
inc
adc
stos
add
push
shll
dec
scas
mov
cmp
loopne
mov
ss
inc
out
mov
adc
adc
cld
repnz
jmp
cmpsb
mov
aas
jle
adc
lods
mov
insl
test
xlat
xchg
adc
jnp
test
iret
cmpsl
sti
xor
or
jae
stc
outsb
mov
xchg
pop
repnz
inc
xor
adc
jb
and
pop
je
rcll
push
push
dec
sbb
lahf
ret
icebp
test
je
cli
loopne
imul
or
jp
movsl
sarl
cmpsl
fwait
rorb
test
mov
push
inc
pushf
xchg
les
popa
icebp
push
divl
leave
mov
call
mov
std
mov
or
mov
xchg
cmpsl
or
and
insl
js
push
push
dec
lret
jne
or
jmp
das
and
int3
dec
std
sbb
adc
sbb
xchg
dec
pop
ljmp
push
inc
jmp
mov
enter
jbe
xchg
imul
mov
xor
es
roll
xor
mov
incl
aas
sub
stos
sbb
sbb
jno
mov
jb
push
pop
icebp
mov
push
or
jo
mov
ja
fdivrp
mov
sub
add
stos
mov
add
sub
mov
scas
sbb
and
fdivrs
sbb
sbb
push
adc
mull
xchg
ja
push
je
adc
js
pop
inc
jne
mov
sbb
fisttpll
mov
lahf
sub
or
mov
hlt
clc
mov
les
paddd
inc
push
lds
stos
add
push
inc
ss
inc
cltd
out
jle
xchg
cli
fmuls
and
pop
mov
es
add
jge
mov
dec
push
jnp
jo
fbstp
daa
cmp
or
ja
mov
dec
gs
in
cltd
outsb
xchg
inc
or
inc
push
adc
popa
mov
andl
fs
jg
or
insb
fldl2t
push
xchg
cmpsl
popf
frstor
mov
adc
inc
subb
jp
bound
es
loopne
adc
fidivl
sbb
loope
cmpsb
repz
mov
inc
ss
aaa
inc
xchg
in
or
pushf
subb
xchg
lods
not
stos
xor
mov
mov
sbb
mov
es
stos
push
inc
pop
push
push
jecxz,pt
sub
dec
jnp
mov
mov
push
sbb
test
push
dec
int3
clc
test
insb
mov
pop
std
addr16
mov
xchg
int3
mov
test
or
sbb
out
sbb
xchg
sahf
xchg
testl
aaa
push
shrb
ja
dec
test
inc
push
fisubl
adc
pop
and
mov
mov
out
adc
push
out
scas
sub
xchg
pushl
dec
popf
jl
or
inc
inc
or
push
mov
xchg
test
adc
aas
test
add
adc
lcall
cmp
rolb
pop
sbb
imul
aam
mov
lea
xor
adc
nop
sub
cli
mov
pop
movsb
dec
aaa
lds
push
mov
inc
push
repz
and
xor
sub
xchg
cmp
cli
jl
inc
insb
mov
stos
out
jne
inc
jnp
mov
and
test
mov
popa
inc
outsl
xchg
mov
nop
cmpb
xchg
jle
xchg
fwait
aaa
dec
notl
aad
xchg
or
inc
cltd
dec
mov
dec
orb
test
lods
cmpsb
subl
pop
scas
pop
mov
jnp
fcoml
faddl
fsub
inc
movsl
enter
xchg
xor
repnz
mov
cmpsl
lret
aaa
add
js
jae
xchg
pop
stos
jge
in
sarb
test
sub
sub
cmp
dec
movsb
ljmp
or
mov
data16
xor
sbb
imul
clc
push
je
push
xchg
ret
cmp
fs
imul
aas
fnstsw
mov
movsb
xchg
cmp
jo
dec
pushf
movsb
lret
addb
xchg
push
push
push
xor
jp
scas
and
sub
sar
inc
aaa
mov
mov
sarl
andl
sbb
sub
mov
sbb
in
xor
cltd
pop
xchg
daa
jp
xor
sbb
pop
or
cmp
cmc
inc
xor
pop
and
out
shl
cmp
or
mov
out
inc
enter
lock
sub
sbb
shll
jle
push
sbb
pop
push
add
inc
dec
mov
fs
ret
js
xchg
repnz
push
out
dec
jl
jno
and
mov
xchg
loopne
xchg
pop
cmp
cld
push
cmc
jl
add
xor
aas
cmp
jo
fsts
xor
loope
andb
imul
push
adc
ret
sub
cmp
jae
add
push
fmul
mov
pop
dec
lahf
xor
jns
mov
sub
je
stc
es
movsb
push
cwtl
dec
mov
push
push
bound
rolb
clc
leave
xchg
test
std
jae
mov
sbb
adc
sbb
xorl
mov
scas
pop
mov
dec
push
sub
xorb
orb
fcomps
mov
inc
outsl
fs
mov
addb
inc
cmovns
mov
dec
mov
rolb
sub
cwtl
daa
in
sub
daa
mov
fwait
leave
clc
jb
repz
add
push
push
push
push
std
aam
xor
cltd
gs
push
xchg
xor
cmp
inc
imul
xor
inc
out
cmp
and
and
mov
xorb
fildll
insb
mov
ffree
jmp
jno
es
in
mov
pop
xor
sar
imul
stc
xor
mov
add
aam
ret
in
or
ret
lret
ret
cmpsl
lock
loop
cmpsb
xor
mov
mov
push
mov
mov
insb
add
cmp
fs
pusha
push
stc
inc
push
jg
loope
cmp
lods
lds
mov
stos
add
mov
jae
and
ret
pop
enter
repz
test
cmc
sti
or
fbld
mov
sahf
aad
push
incl
cmc
in
popf
daa
mov
lock
cmovs
inc
mov
adc
push
cli
sub
sub
ljmp
push
lcall
cld
adc
adc
and
mov
scas
jmp
or
mov
dec
scas
mov
xor
jnp
aad
push
and
aad
test
push
or
in
lea
inc
out
test
xor
cmpsb
and
mov
xor
out
cld
add
pop
loopne
adc
punpcklbw
sub
or
mov
mov
iret
add
pushf
das
cmc
movsl
jl
imul
sub
and
mov
nop
xchg
push
shrl
pop
jmp
lds
out
xor
addr16
xchg
xlat
add
adc
rorb
sbb
notb
ja
fistpl
mull
ljmp
xor
mov
gs
js
dec
fwait
mov
loope
adc
rorl
add
ret
es
sbb
jnp
fsubrs
push
aad
jp
lods
test
push
xchg
int
scas
fstpl
lods
xchg
push
popa
cmp
cwtd
cmp
xor
dec
lret
xor
repnz
xchg
into
xchg
negl
std
add
push
cmp
or
adc
add
or
or
mov
sbb
mov
pusha
rcll
dec
test
test
push
adc
std
jmp
push
jle
sub
orl
daa
scas
xorl
enter
outsl
sub
pop
push
pop
cld
sbb
cmp
pop
in
mov
test
sbb
rorb
jns
and
xor
and
sbb
test
rcr
fildll
mov
arpl
inc
ud0
fwait
movsl
xsha1
cmpsb
dec
clc
daa
imul
cmp
mov
pop
push
or
xchg
call
or
cmp
stos
das
arpl
sub
sahf
or
mov
out
scas
ja
mov
out
cld
pop
arpl
jae
dec
lcall
inc
cmp
mov
jo
fistpll
sbb
xchg
mov
dec
dec
dec
and
ja
push
pop
in
adc
xchg
xor
ds
int
push
fmull
pop
cwtl
sub
imul
lds
jg
adc
sbb
push
lahf
dec
mov
lret
test
repz
in
adc
jecxz
xlat
aam
lret
or
lds
mov
je
mov
aad
into
push
mov
and
test
and
call
fwait
push
jae
inc
inc
ljmp
dec
imul
mov
dec
stos
test
out
pop
imul
inc
mov
mov
xchg
loop
pop
mov
mov
scas
stc
leave
dec
mov
push
adc
xlat
test
cmp
and
das
sarb
push
mov
mov
add
inc
xchg
cmp
js
cmp
dec
mov
or
xor
loope
std
jle
push
cmp
cmpsl
pop
pop
jl
cmpsb
push
lret
inc
addr16
test
sub
imul
imul
add
push
sbb
xor
scas
mov
inc
gs
mov
pop
pusha
adc
mov
fadd
leave
repz
xchg
movsb
mov
loopne
jo
ja
adc
out
dec
jle
push
cmc
jno
sarl
hlt
mov
mov
test
push
mov
and
fsts
mov
push
dec
push
fisubs
fisttpll
fs
aad
pop
push
xor
movsb
sbb
or
lods
in
inc
add
jns
push
shlb
lock
mov
loopne
cmpb
stos
sub
or
lahf
shlb
mov
ljmp
sub
sbb
lea
xchg
sbb
xorb
jae
rcll
sbb
rolb
mov
hlt
push
xor
mov
sbb
aad
nop
lods
leave
adc
imul
jg
mov
mov
dec
das
clc
imul
sbb
testl
mov
inc
adc
pop
jecxz
cld
pop
inc
loop
in
push
and
and
jo
jnp
outsl
sbb
mov
je
jnp
jb
arpl
pop
push
es
int3
inc
dec
cmp
adc
add
arpl
out
inc
sbb
xor
xor
daa
out
jnp
mov
push
data16
mov
aaa
mov
dec
mov
cmp
cmp
add
jbe
in
or
add
adcb
popa
and
xor
jmp
mov
or
cmp
xlat
sub
jmp
sbb
dec
mov
notl
aam
loopne
sti
shrl
mov
xor
push
add
addr16
mov
sbb
and
inc
sti
mov
addr16
loope
loopne
push
lcall
mov
push
add
inc
xor
cld
js
xchg
xchg
add
sarl
jle
jp
xchg
push
jae
or
mov
jnp
push
imul
xchg
ljmp
inc
mov
and
lods
pop
out
xchg
mov
shrl
rorb
fmuls
fistpll
sub
sub
add
ret
dec
sub
loope
iret
or
clc
dec
bound
inc
and
pop
push
and
test
filds
add
je
jge
aaa
cwtl
add
fisubl
xor
add
adc
popf
fs
sbb
test
ja
sti
pop
movsb
push
dec
in
inc
icebp
es
or
fwait
int
insb
jbe
leave
sahf
xchg
jp
sub
push
in
jo
or
aas
sbb
cmc
rclb
add
pop
call
adc
adc
sub
mov
and
fscale
sbb
push
testb
js
enter
imul
inc
sbb
jecxz
rclb
in
xchg
das
add
jge
inc
vhaddps
data16
insb
outsb
dec
data16
in
gs
dec
movntq
inc
sbb
int
mov
loop
pop
sub
lahf
in
aaa
fistl
add
repnz
mov
into
mov
sub
lock
or
jne
popa
inc
ret
or
xchg
and
shr
sti
push
andb
xchg
inc
mov
cmp
and
mov
push
ljmp
push
add
push
pop
xchg
fmull
rcrl
and
sub
sub
push
mov
push
popf
jo
jno
insb
xor
cmpsb
jne
jge
test
add
adcl
jp
stc
add
enter
and
fnstenv
pushf
add
push
repnz
adc
or
imul
dec
lea
fisttpl
into
les
lods
enter
lahf
imul
mov
jnp
and
fdivs
jle
lret
push
dec
or
fs
xchg
add
push
or
stos
mov
cmp
mov
adc
or
mov
push
pop
pop
add
pop
xchg
push
sub
jecxz
mov
out
jp
mov
cmpl
jle
mov
out
ret
repz
sub
stos
jo
daa
inc
sub
push
lcall
lea
out
dec
sbb
mov
mov
push
hlt
and
outsb
in
pop
pop
or
push
add
aad
outsl
sbb
jmp
dec
lods
stos
sahf
fnstenv
in
and
inc
orl
xlat
xor
in
in
mov
dec
xchg
jnp
jb
in
cltd
ret
pop
in
xchg
add
jnp
pop
cwtl
test
loopne
call
lret
call
push
adc
loop
addl
cld
fisubl
movsb
cmp
ds
xchg
andb
mov
cmp
inc
lock
jge
xor
insb
add
push
or
sbb
push
movsb
jecxz
sub
add
inc
imul
mov
ret
jg
enter
and
xchg
in
pop
adc
dec
lcall
pusha
dec
push
or
pusha
in
inc
push
xor
loope
icebp
lret
mov
ss
aad
vpsraw
adc
sub
fadd
or
ret
mov
fsts
or
dec
fwait
jo
xchg
sbbl
fdivs
mov
and
jae
das
int
jge
adc
and
xor
sbb
jno
aad
icebp
sti
and
fabs
mov
pop
andb
cmp
or
mov
lret
add
ret
xor
inc
cmp
jae
mov
loope
push
add
aaa
fisubrs
pop
into
ficoms
xchg
mov
jmp
inc
cmpsb
push
cwtl
clc
push
mov
jne
adc
repz
sbb
xchg
sub
std
nop
lds
jg
bound
push
imul
daa
mov
ds
mov
dec
push
pop
or
stos
ja
add
lret
jae
jo
in
in
mov
cmp
and
out
call
out
popa
pusha
pop
pop
in
sti
sbb
out
pushf
jl
xchg
cmp
out
cmpl
lods
mov
sbb
add
adc
movsb
jnp
mov
jp
push
pop
adc
mov
dec
cs
add
dec
cmp
dec
jne
sub
inc
xchg
jmp
aas
sbb
jmp
jmp
lret
pop
dec
mov
push
inc
ret
push
add
lods
dec
shl
out
or
mov
lds
xchg
mov
push
roll
mov
addr16
dec
or
test
cmpb
icebp
mov
add
mul
inc
add
imulb
cs
scas
cmp
push
fsubl
sub
jns
icebp
xchg
icebp
jp
dec
out
push
adc
roll
stos
jp
out
fwait
pop
hlt
cmp
out
out
push
inc
cltd
xchg
aaa
push
clc
mov
and
adc
pusha
pop
sub
mov
pop
mov
cld
add
inc
xor
loopne
xor
xchg
xor
lea
imul
jno
shr
mov
jmp
ret
stos
imulb
arpl
jb
pop
jl
shrb
pop
mov
cmp
push
dec
aam
xor
insb
sbb
scas
shl
mov
ja
cmp
adc
orb
and
and
adc
rorl
daa
mov
loopne
imul
lds
sub
outsb
add
push
push
add
fs
or
loopne
add
ljmp
clc
arpl
xchg
popf
arpl
sbb
add
loope
in
xchg
stc
sub
push
out
dec
inc
vmread
incb
mov
pop
and
xor
jo
cmpb
mull
cli
dec
push
pop
adc
out
loopne
dec
and
dec
dec
jae
cld
mov
int
daa
mov
cmpl
mov
jl
sub
xchg
popa
insl
and
test
pop
and
lods
ss
mov
mov
call
std
aaa
jle
push
loope
outsb
mov
fsts
xor
fnstcw
and
adc
stos
cmp
test
aaa
loope
adc
dec
scas
lcall
mov
mov
lods
decb
xchg
mov
das
jb
ljmp
mov
xor
out
jno
sbb
mov
aad
mov
enter
rol
es
adc
push
inc
jo
shlb
sub
scas
mov
shlb
loop
addr16
into
je
jno
lea
push
insb
inc
mov
enter
mov
fmuls
jns
cmc
mov
int
aaa
out
loopne
sbb
mov
jo
je
daa
add
je,pt
jne
push
pop
ja
mov
pushf
sub
int3
and
sub
push
pushf
mov
mov
jae
rcrl
pop
fimuls
and
rcrl
roll
daa
xor
stos
insb
in
fdivrl
lret
fiadds
mov
sub
and
push
fnstenv
jmp
out
pop
mov
cwtl
cmp
std
or
xor
xor
xchg
xchg
xlat
dec
sub
push
orl
mulb
sbb
dec
cmp
cmp
daa
mov
or
outsb
pop
xchg
inc
nop
sub
sbb
in
inc
and
mov
xor
mov
mov
push
push
push
adc
add
je
add
push
ds
mov
jl
pop
ret
sub
lea
int3
mov
mov
cmc
sub
nop
in
push
fwait
mov
mov
mov
sub
xorl
dec
call
adc
push
add
popa
sub
out
test
dec
lahf
out
jo
sub
lds
data16
xchg
fstcw
sbb
into
xchg
xor
jnp
pop
ficompl
int
sub
inc
mov
das
push
dec
inc
mov
in
xchg
es
cmp
fsubl
adc
lods
xchg
xlat
jge
add
fld
scas
sti
inc
jg
scas
cwtl
pop
aam
loope
lea
sahf
pop
xchg
push
stc
ret
hlt
es
mov
ljmp
in
push
and
or
fsts
rclb
jecxz
hlt
leave
xchg
mov
aas
stos
or
call
fs
or
mov
out
push
repz
mov
lods
imul
cmpsl
enter
iret
out
rcrb
xor
sbb
int
xchg
pop
fmull
xchg
push
daa
rol
add
popa
js
sbb
inc
iret
repz
pop
test
outsl
pusha
pop
cmpsl
and
push
and
push
pop
mov
fdivrl
pop
aas
adc
aas
in
sti
fimuls
jmp
sub
or
test
or
imul
push
movsl
subb
divb
cmc
pop
cmp
mov
cmpsl
fld
leave
jle
out
repz
sbbl
mov
ja
xor
mov
xor
add
arpl
inc
mov
pop
subb
cmp
push
mov
mulb
mov
inc
mov
push
pop
sub
repnz
mov
fdivl
leave
add
pop
cmpsl
add
jbe
mov
lret
in
aas
mov
cmp
adc
and
pushf
push
je
xor
fiaddl
jle
push
andl
cmc
xchg
cmp
call
lret
in
xchg
test
xor
mov
mov
dec
mov
es
jns
lock
in
fiadds
or
mov
adc
jg
int3
mov
jmp
xor
mov
cmpsb
outsb
in
adc
into
and
xor
imul
imul
mov
add
cwtl
jmp
xchg
lcall
add
inc
enter
int
cmpsl
outsl
pop
mov
nop
jge
inc
call
addr16
out
and
jbe
or
xchg
pop
dec
les
test
out
xor
inc
adc
loopne
jp
fs
out
das
or
push
lock
aas
es
push
mov
mov
mov
add
push
pop
add
int3
repnz
scas
xor
test
xor
dec
cmp
add
jne
ljmp
sub
jns
stc
xchg
shrb
pusha
or
xchg
into
adc
adc
pushf
pop
pusha
insb
inc
ss
outsb
jmp
lret
lock
adc
mov
je
mov
jns
cwtl
imul
add
enter
movsl
lds
imul
jp
jmp
or
test
lret
in
ja
add
fnsave
adc
mov
loope
and
ja
lcall
mov
lret
call
cmp
push
pop
push
scas
inc
cwtl
mov
repz
push
adc
pop
lahf
cmc
cmp
xchg
cli
nop
or
or
cvttps2pi
pop
cmp
insl
fucomi
popf
inc
cmp
cmp
and
mov
mov
imul
sarl
stos
mov
loope
add
add
push
stos
push
jae
sbb
jg
loope
scas
std
test
and
adc
orb
out
sbb
out
cmpsb
jp
push
cmp
les
iret
adc
mov
mov
pop
and
je
lods
lea
pop
xor
sub
xchg
es
es
lahf
mov
ja
jl
les
hlt
cmc
les
and
addl
icebp
out
stc
test
push
mov
inc
cmc
sahf
jle
aas
mov
mov
push
push
dec
xlat
inc
push
aam
les
jb
popf
repnz
cmc
aas
das
add
aad
mov
inc
hlt
and
andnps
rcr
adc
sub
repz
jno
cmp
in
push
inc
or
loope
mov
sub
cmpsb
xchg
push
cwtl
sbb
ret
xchg
sub
jne
mov
xchg
or
movsb
mov
hlt
rorb
in
clc
lods
mov
test
ss
dec
sub
add
add
add
lret
fistps
cmp
inc
arpl
jb
mov
shll
stos
scas
popa
xchg
out
xchg
jle
sbb
lock
and
testb
mov
mov
ficoml
lcall
bound
subb
dec
repz
fstps
out
xchg
outsl
rcrl
jmp
push
scas
shr
sbb
pop
xchg
dec
arpl
insb
pop
jbe
lret
push
push
push
aas
push
dec
ja
mov
scas
cmpsb
sub
and
sarl
test
pop
xchg
xor
lret
xchg
sub
daa
loopne,pt
adc
imul
fisttps
fsubrs
xor
jae
pop
mov
in
xchg
in
adc
into
cld
pop
nop
bound
repz
add
xchg
push
call
or
shlb
aam
mov
test
cmp
cmpsl
cmp
cmp
in
pop
pop
push
sbb
in
jae
mov
aaa
xor
sub
or
in
adc
in
mov
inc
es
mov
stos
pop
mov
cmp
das
daa
mov
inc
cmp
push
inc
sub
scas
sti
lret
sbb
add
dec
lahf
notb
popf
sub
loope
les
in
xlat
dec
mov
jmp
pop
popf
jg
push
sbb
and
aad
add
out
clc
cs
rcrl
lock
jmp
cmc
jbe
and
cltd
repnz
mov
mov
sti
lret
mov
pusha
aam
sahf
xchg
ret
insb
test
nop
push
pop
sbb
or
test
and
rorb
push
or
push
jmp
dec
mov
out
in
daa
mov
imul
shll
lret
hlt
testl
sti
insb
scas
lock
adc
icebp
repz
xchg
inc
das
mov
cmpxchg
ljmp
add
add
mov
in
push
inc
repnz
sub
push
out
mull
incb
mov
push
push
dec
mov
sarl
mov
loope
loope
jmp
pop
std
xchg
cmp
pop
sti
mov
lcall
add
enter
mov
add
inc
fcmovnb
xor
aad
push
mov
js
lret
push
cmpsb
aas
sub
jae
pop
mov
jnp
fnsave
mov
fbld
imul
mov
call
scas
xchg
jne
mov
and
cmc
repnz
clc
sbb
push
and
lock
or
xlat
lret
movsl
cwtl
adc
jge
add
or
insb
popf
pusha
pop
sbb
je
sahf
lds
mov
pop
mov
mov
jl
push
lods
lock
push
push
jnp
hlt
out
push
iret
pop
mov
lods
movsb
and
pop
inc
push
or
orl
and
mov
inc
mov
shrb
sbb
jge
fsubrs
dec
decl
mov
adc
loope
mov
add
pusha
js
nop
mov
jecxz
imul
xor
cmp
and
out
gs
lahf
mov
popa
ss
xlat
push
jnp
std
xchg
xchg
mov
or
stos
or
sub
rol
sahf
icebp
mov
mov
sbb
pop
mov
xor
mov
mov
mov
fcoml
scas
iret
lret
xlat
xchg
xor
push
push
sbbb
mov
fs
movsl
shrl
xor
aas
jne
hlt
lds
test
add
dec
repnz
fnstcw
cmp
hlt
imul
cmp
cmp
dec
fs
xchg
push
mov
les
fadd
dec
jmp
movsb
and
xchg
addl
cmpsb
mov
jge
push
xchg
lock
cmpsb
dec
sbb
push
adc
cld
std
out
in
mov
std
cld
into
jmp
sub
cmp
mov
xor
lods
and
ret
test
lahf
rcll
repz
lret
iret
cmp
jnp
daa
dec
loopne
add
inc
lods
fdivrs
imul
pushl
inc
push
xchg
pusha
sahf
sub
aas
push
repnz
imul
cmp
pop
lahf
xchg
outsl
adc
daa
pop
bound
pushf
sahf
lea
mov
fmul
cmp
je
pop
aam
les
out
jae
fwait
lret
out
sahf
out
stos
pop
adc
mov
mov
adcb
sub
dec
in
jg
cmp
rorl
add
jns
cmp
add
mov
pop
cmp
je
mov
pop
xor
sub
and
out
sub
mov
scas
push
adc
jbe
xorl
frstor
fcoms
outsb
and
enter
cwtl
xchg
sbb
cmp
sahf
imulb
sub
lods
rorl
mov
js
fimull
xor
scas
sub
push
sarb
fwait
dec
cmp
out
or
enter
andl
pop
jecxz
xorb
lret
xor
addl
mov
outsb
ljmp
or
dec
xlat
addr16
mov
cmp
jge
xor
xchg
aam
movb
aad
negb
fdivl
insb
ja
int3
jnp
push
xor
push
fmul
out
jg
push
pop
sub
add
daa
pop
add
sbb
je
cmp
stos
test
inc
jno
addb
sti
jg
mov
cwtl
fadd
ret
ret
fldt
xor
call
jl
add
rcrl
cmp
pop
test
pop
les
in
fwait
sbb
fcomps
add
push
mov
xor
repnz
dec
xchg
push
std
sub
inc
fsubrp
pop
sbb
cmp
flds
pop
pop
or
aaa
call
xchg
cld
stos
dec
mov
and
movsl
sub
fwait
cmp
jmp
inc
sbb
and
inc
imul
or
xor
and
sub
fcomps
call
cmp
mov
xor
cmp
ficompl
data16
les
xchg
int
int3
popa
or
fwait
pusha
fsubs
push
cmpsb
xchg
sub
jl
sbb
push
pop
imulb
dec
int
rol
push
call
shr
push
sbb
inc
mov
mov
shr
inc
mov
mov
addr16
mov
and
addb
cmp
push
xchg
in
add
sub
cli
dec
inc
in
cmc
in
mov
push
int
test
imul
push
dec
aam
xchg
cs
jl
mov
into
stos
xlat
pop
adc
ret
adc
push
or
mov
pusha
push
out
je
xor
aas
xchg
fistpll
xor
jle
lcall
jle
sbb
and
xor
loop
shr
mov
mov
jmp
pushf
mov
pop
dec
test
ror
movsl
jb
push
insb
jl
xor
ds
push
dec
cmp
push
add
mov
ljmp
cmc
mov
fcoml
cmp
xor
popl
mov
or
pusha
mov
dec
dec
call
xchg
mov
cld
mov
cmp
and
pop
xor
aad
data16
mov
into
jmp
ficomps
and
xor
aad
test
pop
xchg
adc
lahf
push
mov
cmp
test
mov
or
jo
sahf
fcmovne
mov
pop
mov
test
testl
loope
cld
mov
inc
mov
sub
mov
add
or
dec
aad
lods
dec
notl
lock
adc
sub
inc
fbstp
mov
arpl
push
scas
rcrb
inc
or
out
dec
adc
fists
jl
cmp
dec
in
in
sub
int3
push
pop
xchg
stos
xor
es
cmp
inc
popf
and
faddl
dec
lcall
jne
cmp
js
notl
jecxz
call
jo
lahf
repnz
sbbl
cmc
in
push
dec
aaa
in
xchg
pop
dec
jne
mov
dec
cmpb
inc
in
pop
inc
xor
cmp
pop
xor
aad
push
mov
add
mov
push
out
loopne
ds
push
stc
insb
loopne
pxor
ds
or
xchg
movsb
jns
iret
sbb
jno
mov
add
popf
mov
jno
pop
add
idiv
adc
andl
scas
lods
xor
adc
jecxz
cwtl
clc
cmc
push
in
and
push
push
cld
sarb
test
pop
mov
pop
ficoml
pop
adcb
repz
in
push
popa
dec
pop
or
inc
push
push
pop
mov
xchg
je
jnp
and
push
clc
xchg
jmp
lcall
mov
stos
add
aam
lock
cltd
pop
push
mov
jp
lods
outsl
mov
cwtl
jp
dec
adc
adc
inc
mov
jbe
and
call
adc
push
test
jge
test
or
bound
stc
sbb
and
pop
xchg
pop
dec
xchg
jb
pushf
push
sub
sbb
inc
ds
dec
sbb
push
ljmp
shrb
inc
mov
mov
dec
ret
mov
mov
lcall
orb
add
mov
repnz
inc
inc
sar
sar
mov
sub
jmp
jb
cs
cmp
xchg
mov
inc
mov
andb
xchg
pop
cld
jle
pusha
rcrb
lahf
xchg
mov
out
das
add
leave
sbb
dec
ret
sub
sbb
adc
jo
adc
jmp
daa
mov
mov
test
inc
xorb
jmp
cmp
jle
rorb
xlat
or
mov
mov
adcb
loop
daa
lods
xchg
subb
icebp
xchg
cmp
add
add
push
push
push
call
xchg
mov
fs
mov
lret
or
push
arpl
mov
jne
fiadds
mov
movsb
mov
push
test
jge
pop
movsb
pop
mov
adc
mov
and
pop
add
ficomps
ja
fwait
insb
add
xchg
mov
xor
mov
cmpsl
pop
dec
js
orl
xchg
mov
cmp
mov
lret
addr16
lret
jns
repz
and
cltd
mov
js
xlat
mov
out
je
xchg
and
dec
xor
sbb
rcl
xchg
mov
mov
rolb
xchg
andl
add
push
int3
lods
sbb
inc
int
jno
out
push
cltd
xor
mov
mov
imul
push
jne
lret
cmp
xor
add
xchg
xor
inc
icebp
ds
inc
cmp
fstpt
es
cmpsb
in
je
shrl
je
gs
ja
inc
cli
ljmp
xchg
nop
mov
inc
mov
cmp
lret
subl
push
mov
loop
jl
add
pop
and
test
mov
add
fwait
mov
pop
sub
sbb
repnz
jp
cmp
push
push
test
xor
sbb
xchg
pop
xor
pop
adc
pop
loop
or
frstor
loope
jnp
into
dec
push
jg
or
mov
sub
ret
jecxz
sbb
gs
loop
sahf
ss
and
sbb
lcall
push
dec
jp
mov
mov
ljmp
dec
std
imulb
pop
jno
cltd
pop
fsubrs
fistl
repz
scas
push
seto
mov
or
add
mov
xchg
lret
mov
mov
cmp
cs
xor
fdiv
shr
lock
bound
clc
call
cli
jecxz
dec
mov
ret
xor
mov
fildll
call
pop
pop
or
add
adc
repnz
mov
xchg
mov
push
inc
stos
pop
mov
lods
stos
popf
and
dec
in
sti
jb
jns
movsb
aam
or
pop
mov
aad
nop
sbb
sub
or
pop
lcall
cltd
mov
pop
xchg
inc
jmp
cmp
pop
mov
sbb
insb
int3
shlb
test
or
arpl
adc
popf
fmull
mov
cmpsl
adc
push
mov
mov
popa
sbb
mov
dec
mov
push
push
mov
je
push
les
ds
stos
scas
fsubr
inc
fsubl
xchg
repnz
add
js
fstl
dec
stc
jle
out
iret
fimuls
inc
outsl
test
sbb
pushf
mov
cmp
jecxz
push
or
cli
pop
and
mov
push
inc
mov
lret
addr16
pop
cmp
push
sub
fdivrs
pop
and
dec
xor
jns
pop
mov
sbb
sub
mov
jecxz
adc
and
adc
gs
in
stc
push
scas
dec
jne
roll
mov
insb
push
out
inc
jnp
aad
out
inc
adc
add
sahf
add
cmp
jns
mov
or
xor
jmp
int3
cmp
sub
ljmp
lret
sub
call
cmp
mov
int
loopne
mov
lcall
xchg
mov
xchg
popf
cmpsb
jb
aaa
lahf
in
pop
jo
sub
ss
std
faddp
and
push
dec
xor
pushf
cmpsb
out
inc
aas
mov
ret
sbb
lret
test
and
roll
outsl
mov
push
in
mov
enter
cltd
jmp
jne
ficoms
jo
test
dec
insl
and
mov
jo
in
lret
ja
jecxz
adc
jae
pusha
dec
loop
cld
sbb
inc
popa
xor
nop
push
push
int
jnp
dec
aam
xchg
mov
mov
int
lea
movsb
mov
and
push
and
jmp
dec
mov
push
ficoms
or
cmpsl
pop
lds
sub
push
mov
out
mov
sahf
xor
sbb
jecxz
adcb
stc
sbb
sub
xchg
sub
ljmp
adcl
ja
add
pushf
xchg
mov
sub
and
loope
out
dec
push
fdivp
push
test
sub
pop
cmc
das
dec
cmp
sub
inc
sub
sahf
es
stc
aaa
mov
dec
mov
xchg
adc
dec
mov
pop
das
cltd
outsb
cmp
ss
loopne
sub
pop
and
jg
out
mov
mov
addl
push
test
cmp
data16
jo
sub
stos
ret
pop
push
in
add
ret
lods
xchg
addr16
cli
jne
mov
add
addr16
jecxz
imul
out
ja
jno
mov
test
sub
pop
jb
ja
mov
in
repz
pop
fcmovne
repz
sub
fcmovu
jne
pop
lods
push
loope
push
stc
mov
cmc
mov
out
sub
test
inc
push
jbe
repnz
and
sub
movsl
fwait
sti
mov
mov
mov
dec
mov
mov
popf
in
jmp
lcall
bound
pop
mov
out
xchg
or
and
test
jecxz
arpl
cmp
inc
mov
sub
ret
fnstcw
out
rolb
fs
repz
and
mov
push
jge
xor
ret
mov
pop
mov
push
imul
inc
mov
xchg
call
cmp
xchg
in
imul
fwait
cwtl
sarb
jg
push
in
push
sbb
and
adc
xor
rclb
cmp
add
cld
pop
lcall
and
sbb
imul
jne
aad
add
sqrtps
in
bound
enter
ror
lcall
rcrl
and
shl
cmp
sbbb
xor
sbb
jp
stos
jb
push
cmp
es
inc
lods
pushf
adc
mov
int3
icebp
jp
jge
cmp
aas
cmp
rdtsc
ljmp
mov
cmp
mov
add
mov
cli
mov
pop
cli
xchg
lods
mov
dec
mov
jmp
cs
dec
addr16
sbb
sub
push
xchg
ficompl
ss
mov
mov
fisubs
loopne
pushf
xchg
adc
std
mov
jl
adc
aam
je
mov
jbe
sub
mov
out
enter
xor
pop
popf
cmpsb
cmp
adc
inc
fildll
mov
into
sub
adc
push
cmp
pop
and
popa
cmp
push
insb
popa
jo
mov
lods
sub
loope,pt
jecxz
imul
mov
int3
leave
out
jno
dec
iret
in
loopne
in
sahf
aad
lock
pop
add
fsts
je
icebp
in
mov
rclb
loopne
loop
dec
inc
push
das
push
mov
jle
fld
mov
mov
aad
and
or
dec
sub
push
loope
and
dec
jbe
and
inc
cmp
mov
cli
loopne
push
xor
xlat
imul
mov
jne
adc
les
popa
cmp
adc
adc
mov
xchg
mov
repnz
out
jge
sub
inc
xchg
repnz
add
push
lock
mov
mov
pop
imul
inc
cmpsb
push
sahf
decb
imul
dec
movsl
icebp
xchg
fcoms
push
dec
push
scas
xchg
daa
mov
sub
mov
add
cs
addb
pop
mov
add
or
xlat
mov
inc
fxch
and
jnp
adc
mov
cmp
xor
sub
and
dec
pop
jecxz
cmpb
and
sbb
mov
dec
jg
je
pop
mov
xchg
out
imul
push
cmpsb
sahf
xchg
or
pop
fneni(8087
sbb
out
cs
addr16
fcomps
jp
scas
mov
fs
and
lods
ss
inc
jmp
xchg
xchg
hlt
and
dec
pop
sti
adcl
fwait
dec
inc
lcall
xlat
ss
daa
ret
adc
or
fsubrs
ret
test
aas
xor
inc
lods
push
dec
lea
or
data16
cwtl
inc
adc
mov
test
aaa
xor
aas
and
xchg
mov
loopne
mov
xchg
cs
jle
pop
sub
xchg
jp
jb
mov
push
in
push
aam
pop
xor
popa
shll
lock
cmpsl
je
adc
cmp
fs
sahf
adc
cmovs
fsubrp
mov
subl
xchg
push
push
lds
mov
shll
andl
jle
outsb
fstl
adc
mov
xor
loop
xor
iret
add
test
fwait
testl
cmpsl
movsb
push
inc
dec
push
das
pop
lods
andl
mov
repz
dec
xlat
inc
cmpl
roll
jp
pop
cld
or
xor
mov
lds
and
xor
cwtl
fdivl
inc
or
js
cmp
and
push
xchg
aam
jae
push
lods
add
in
push
add
cmp
ret
xor
dec
lods
push
push
dec
js
push
cmpsb
jb
xor
inc
ret
rcrb
jo
sti
mov
fcomip
fwait
mov
jns
add
dec
mov
xor
js
mov
pop
and
imul
sub
mov
sbb
pop
loope
jl
inc
mov
mov
in
rcl
out
xor
stos
pop
mov
xchg
or
pop
sar
mov
and
negb
repnz
xor
test
and
pop
fwait
or
fimull
add
add
aas
in
divl
sbb
push
icebp
add
enter
sbb
iret
idivb
popa
push
ret
jge
mov
pop
roll
and
adc
xchg
sub
bound
xchg
mov
addr16
lret
testb
sbb
in
xchg
out
stos
stc
push
add
xor
divl
mov
cld
xor
sti
rcll
push
mov
push
inc
fldt
outsb
fsts
movsb
popa
outsb
incb
test
jbe
test
orl
adc
dec
fsubrl
mov
cmp
lods
adc
ret
dec
xchg
fcmove
loop
fwait
xor
repnz
pop
das
mov
ljmp
fadds
leave
inc
jl
daa
das
cmp
jo
cmc
mov
sub
and
lret
lret
inc
cmp
push
and
mov
xlat
icebp
lcall
sbb
cmc
push
outsb
inc
test
jns
icebp
pop
adcb
cltd
aam
xchg
aaa
mov
mov
and
push
mov
xor
aaa
mov
mov
sbb
sub
push
repz
pushf
jp
push
jno
sbb
addr16
cld
inc
repz
and
xchg
fs
sub
dec
sub
xor
mov
arpl
clc
pop
add
push
cs
leave
mov
mov
movsl
pop
ja
aad
adc
pop
adc
jmp
icebp
cmp
pop
ror
xchg
movups
dec
pop
mov
sti
ljmp
fsub
out
xchg
fs
lahf
mov
pop
inc
inc
mov
aam
loope
dec
fidivrs
sub
inc
shlb
movsl
hlt
push
out
insl
dec
es
rclb
dec
jl
ja
jmp
daa
pop
js
mov
push
dec
out
xor
lahf
or
dec
xchg
negl
push
pop
movsl
xor
pop
sub
push
cmp
add
idivb
mov
mov
push
cmpsb
jnp
repnz
test
clc
xor
xlat
lahf
jo
push
fisttpl
adc
pushf
cmp
inc
push
mov
hlt
push
xor
mov
dec
lahf
dec
lcall
lods
nop
scas
insl
nop
jo
sub
mov
clc
scas
insl
in
and
fidivs
es
cmp
mov
push
outsl
in
ljmp
jne
or
int
mov
fistl
mov
xor
fs
add
sub
rol
pop
into
rcrb
sbb
int
push
or
inc
cli
fldcw
xor
in
mov
or
mov
lcall
pop
push
mov
leave
shr
dec
or
cmc
xchg
fimuls
adc
mov
stc
xor
mov
fcoms
movb
or
or
sti
mov
jno
or
imul
and
test
adc
scas
pop
aad
sar
imul
es
mov
cmp
jno
int
imul
stc
mov
cltd
pop
xor
xchg
mov
fadds
xchg
sarb
enter
add
adc
movsb
push
mov
and
pushf
mov
lock
pop
xchg
or
loop
inc
lock
sub
cmp
negb
clc
xlat
sbb
sub
pushf
adc
and
push
mov
ja
pop
sub
ficompl
test
popl
push
or
imul
je
mov
sti
mov
lods
adc
inc
movsl
sbb
cmp
es
xchg
psubsw
in
cld
adc
fldt
in
add
ret
mov
js
xchg
mov
pop
lahf
aad
repz
fidivl
stos
mov
mov
pop
das
test
dec
sub
sti
iret
ret
fsub
cmp
cmp
sub
xor
das
jbe
mov
iret
in
sub
ret
popf
imul
dec
out
mov
ds
lret
mov
cmp
scas
or
fadds
jmp
sub
cmp
dec
push
sbb
js
ja
clc
scas
daa
add
popl
int3
in
fdivp
shrl
and
mov
movsb
add
dec
int
pop
inc
fstps
aam
clc
mov
adc
ss
mov
icebp
add
pop
mov
cmp
shl
push
sarl
testb
mov
sbb
pusha
fstpt
jns
push
mov
pop
cs
aaa
sub
xor
or
stc
push
xchg
mov
outsl
mov
ljmp
pop
ds
pop
dec
cmc
lret
jge
stos
cmpl
fwait
push
sbb
jmp
xchg
cmpsl
loope
jmp
push
cmp
adc
shrl
xor
clc
and
lds
out
clc
bound
mov
fcompl
sub
push
fwait
in
dec
out
mov
insl
int
or
mov
mov
dec
mov
xor
sub
mov
icebp
aas
loopne
dec
dec
sbb
xchg
xchg
call
fucomip
loop
ja
xchg
ss
jmp
xlat
cmp
xchg
dec
or
subl
cmpl
xor
std
scas
stos
push
lret
fimull
mov
cmpsb
and
out
pushf
push
pop
sub
out
fwait
pop
les
cmpsl
jecxz
aam
mov
xchg
lcall
icebp
lea
push
repz
xor
andb
lea
and
xchg
push
cwtl
xor
and
roll
jo
insl
sub
jmp
mov
and
movsl
pop
popa
push
leave
imul
arpl
faddl
xor
jns
cmc
rclb
xlat
xorb
addb
mov
dec
popa
test
xor
out
fimuls
dec
clc
inc
into
sub
aaa
rcrb
sbb
das
ret
jno
xchg
outsb
mov
mov
ja
pop
in
xor
addb
gs
cmpsb
sbb
add
scas
fbstp
pusha
or
cmp
xor
sbb
cmp
insl
jbe
sarb
scas
xchg
es
xchg
popf
ret
fisttpll
mov
xor
xor
pop
mov
push
sbb
push
sub
loopw
push
sub
xlat
cmp
mov
aad
xchg
and
jecxz
cmp
dec
shl
mov
call
daa
and
inc
fs
push
aam
dec
repnz
stos
clc
jbe
jmp
imul
jns
rcrb
out
cltd
testb
cmovge
mov
fdivrl
movsl
jp
xchg
jle
das
dec
jb
stos
inc
pusha
cmp
cmp
adc
xlat
mov
and
addr16
jnp
ret
pop
loop
stos
jmp
xor
xor
sbb
xchg
hlt
and
test
lods
cmpsl
mov
dec
repnz
outsl
xchg
sub
pop
sbb
sarb
test
fists
sbbl
notl
rcrl
mov
sub
testb
push
dec
xor
lcall
cltd
data16
push
mov
mov
lcall
jecxz
cmpsl
fcomip
or
pop
test
and
jnp
aad
shrl
daa
jl
sahf
roll
cmp
mov
fimull
sbb
xchg
jno
adc
ffreep
xchg
int3
adc
jb
imul
inc
jle
mov
sub
sarl
leave
mov
lea
mov
mov
es
mov
out
pop
pop
sub
loope
out
mov
pusha
addr16
mov
imul
mov
xor
inc
shll
shlb
fucomi
cmp
cmp
sub
scas
xchg
mov
add
adc
fbld
adc
xchg
mulb
push
xor
or
dec
ret
inc
xor
inc
rol
pop
imul
aas
cltd
push
rcrl
pop
mov
and
decb
xor
adc
jb
jno
shlb
int3
fcoms
mov
lock
rcrb
push
ss
add
or
mov
aam
cltd
jmp
jecxz
int
setae
push
push
cmp
in
and
cmc
jns
jae,pn
dec
fdivrl
cli
jecxz
xor
pop
std
dec
std
insl
xchg
gs
add
insb
cmpsl
lods
jno
mov
fimuls
sub
enter
push
sbb
outsb
jne
push
push
cwtl
sbb
movsb
fisttpll
adc
scas
push
pop
xchg
pop
xchg
into
mov
addr16
dec
mov
mov
lds
shll
jge
bound
idivb
dec
subl
inc
sub
test
pop
fistpll
mov
xlat
es
inc
pop
dec
mov
mov
in
mov
out
mov
mov
loope
sbb
mov
add
nopl
stos
leave
jne
out
sbb
cmc
aas
out
shrl
scas
out
add
iret
loop
ror
push
push
out
cmp
xchg
mov
in
pusha
mov
in
dec
and
jbe
out
sub
ret
lods
stc
insb
inc
orl
test
xchg
push
mov
mov
pop
sbb
in
bound
mov
pop
or
dec
mov
sub
subb
in
shlb
mov
aad
push
add
cmp
push
push
pushw
ja
insb
adc
js
push
popf
fwait
mov
xchg
adc
rorb
jnp
xchg
adc
inc
mov
mov
stc
cmc
dec
inc
jae
pop
inc
jle
unpckhps
jae
lcall
iret
aaa
das
imul
mov
xchg
xchg
and
fwait
ret
adc
sbb
popf
fildl
sub
add
into
test
fsubrs
mov
lcall
std
xor
or
sbbl
fbstp
sahf
jo
insb
pop
in
push
fidivs
imul
insb
adc
jns
add
aaa
cmc
pop
popa
daa
iret
pop
jg
mov
cmp
jno
aam
inc
sub
sub
add
test
lock
psubsw
and
jp
cwtl
adc
test
out
pop
jns
js
int
sbb
cli
xchg
ss
scas
popa
dec
and
jbe
enter
out
and
in
push
stos
mov
daa
out
xchg
out
fidivrl
inc
add
stos
push
mov
and
sub
mov
test
xor
shr
mov
pop
xchg
popa
inc
mov
notb
push
pop
pavgw
jnp
jns
or
mov
aam
lcall
add
cmp
sbb
nop
int3
aam
cmp
sbb
mov
fwait
cmp
out
out
das
loop
inc
push
pusha
dec
out
xor
jnp
sbb
sbb
imul
mov
mov
jnp
adc
xchg
sbb
dec
cltd
inc
dec
inc
lcall
pushf
xor
ret
pop
dec
ljmp
push
push
pop
xchg
pop
jbe
cmp
jb
imull
jl
das
dec
loopne
inc
sahf
lods
lret
xor
add
cltd
cmp
cmp
sub
pushf
mov
push
mov
dec
mov
push
mov
cmc
mov
ret
fstl
stos
test
xor
sub
repz
icebp
cmp
out
xor
sbb
popa
mov
cmpl
push
in
enter
and
mov
add
xor
scas
add
jo
cmpsb
xchg
lcall
xor
inc
push
movsb
lock
cmpsl
lret
mov
inc
push
iret
out
addr16
int3
push
in
jnp
in
mov
in
call
aaa
loope
push
mov
fdivs
add
aad
push
sbbb
ja
cmpsb
jge
jmp
cli
pop
pop
clc
leave
xchg
adc
andl
cld
les
imul
dec
mov
cltd
or
std
insb
mov
xor
and
jnp
xor
insb
repnz
cld
insb
aam
mov
sahf
lret
fcompl
movsl
pop
outsb
movb
cmp
leave
andl
dec
dec
sub
aaa
pop
mull
and
fcomps
fimull
inc
lcall
xchg
aam
aas
lahf
into
test
push
add
shl
loope
pop
xor
imul
daa
jp
inc
mov
insl
fst
mov
xor
sbb
adc
loop
lret
ljmp
mov
xor
add
adc
or
fnstenv
jg
mov
ljmp
dec
movsl
scas
fldpi
cld
mov
lods
sub
fisttps
imul
test
int3
xor
fbstp
add
in
push
into
sahf
fwait
adc
out
rcl
shr
and
sar
mov
popf
mov
xchg
sarb
popf
clc
push
mov
jb
xchg
fwait
jno
jecxz
and
xor
adc
mov
jge
pop
aad
andb
sub
and
sbb
outsl
fucom
sub
mov
jmp
mov
xor
cli
out
push
add
mov
aas
add
insl
testb
inc
and
cmc
cwtl
lret
shlb
mov
adc
cmpsl
insl
loop
push
mov
mov
mov
inc
inc
icebp
out
push
out
jmp
or
adc
push
adc
push
pop
push
lea
idivl
fldenv
in
jp
mov
lods
or
inc
cmpsb
pop
dec
mov
fisubs
pushf
scas
push
cmp
jge
and
push
cmpsl
mov
adc
fisttpl
pop
mov
call
loop
mov
andl
jmp
or
rorl
arpl
or
movsb
jl
jmp
call
and
push
sub
cmp
dec
jb
jl
shlb
rorb
outsb
push
test
dec
jo
sbb
cmp
pop
pop
loopne
imull
sahf
fwait
pop
mov
lds
xchg
mov
outsl
ss
sbb
lock
inc
jmp
sbb
pop
clc
xchg
clc
push
ud0
push
pop
add
out
imul
sub
nop
add
ret
loope
insl
mov
jae
sbb
xor
sti
jle
repz
push
mov
fnstcw
add
aaa
jnp
inc
or
mov
push
mov
or
xor
fs
fs
imul
xchg
sbb
jmp
mov
movsb
fidivrl
or
push
fucomp
test
int
dec
xchg
dec
rcl
shll
ret
cs
repz
cli
lods
lss
in
in
lods
int
dec
or
js
lea
rcll
daa
inc
inc
push
fadd
cmp
shll
sub
shlb
sub
lock
cli
shll
nop
pushf
cmp
mov
pop
mov
sub
aam
lods
imulb
dec
or
lret
sbb
in
jno
pop
cli
sbb
cmp
jmp
mov
loop
push
shll
mov
decl
push
jnp
ret
les
mov
or
or
mov
mov
lds
cltd
rcr
cld
mov
push
push
int3
add
adc
jp
push
sbb
mov
mov
fdivrl
push
push
sub
mov
and
push
ret
in
mov
ret
ja
stos
sahf
xlat
stos
sbb
sarl
xor
in
xchg
aas
mov
imul
fisttpl
push
stos
lret
leave
sub
add
sahf
dec
dec
sahf
xor
push
fwait
loopne
stc
xor
sub
loope
inc
js
dec
addb
sbb
and
es
ss
mov
shrb
imul
jo
fildll
enter
xor
xchg
out
ret
imul
cmp
dec
jle
ret
scas
or
cmpsb
and
call
xchg
int
sbb
push
sar
in
dec
sub
add
bound
out
pushl
ja
sti
mov
fcompl
scas
jmp
or
xor
loop
popf
jo
rsqrtps
scas
xor
lea
in
and
shlb
cmc
mov
insl
xor
mov
push
cmc
movsl
cmp
icebp
mov
adc
call
xor
loopne
sub
jmp
insl
dec
in
aam
jge
mov
shlb
xchg
cmp
push
and
es
aas
pop
mov
mov
hlt
loopne
outsl
cwtl
and
ljmp
dec
push
shl
mov
scas
lds
notb
ja
lock
jle
mov
loopne
xor
subb
dec
jnp
ficoml
fdivl
xor
xor
idivl
pop
arpl
adc
push
movsl
fldl
repnz
sub
xchg
bound
mov
test
popa
mov
dec
in
cs
mov
xor
sub
lea
xchg
out
out
sahf
add
les
in
subl
xchg
js
test
pop
inc
ret
jmp
sub
add
mov
jnp
adc
fxsave
jmp
pop
xchg
mov
bound
repz
subb
insb
out
in
pushf
insl
push
sti
imul
pop
and
mov
add
pop
cwtl
cli
xlat
adc
sub
outsl
sbb
mov
xchg
stc
inc
adc
push
mov
or
mov
inc
jmp
imul
nop
sbb
adcb
mov
insb
lret
mov
and
cltd
mov
out
lahf
rorb
mov
pop
fimull
fwait
dec
dec
or
repz
push
mov
sub
dec
cltd
xchg
cli
in
lret
testb
fmull
test
addr16
xor
mov
jne
cmp
popf
movsl
mov
iret
dec
sbbl
cmc
mov
mov
std
dec
pushf
pop
insb
les
sahf
test
cmp
lods
outsb
jmp
pop
inc
jnp
scas
add
inc
insb
sti
das
testl
xchg
in
xchg
jns
xlat
pop
pop
inc
and
inc
daa
fdivrl
fcompl
xchg
push
pop
dec
aaa
stos
in
int3
xor
addr16
jb
andb
jle
out
cmp
mov
arpl
aas
sbb
call
xor
push
inc
cmp
or
cmp
out
rol
js
fidivl
aad
xchg
xchg
adc
jp
arpl
out
jp
pusha
or
nop
jecxz
push
dec
lods
sub
daa
sub
or
pop
push
cmp
std
cmpsl
cmp
rclb
xor
inc
std
je
xchg
xor
sbb
jg
jl
pop
fsubrp
sub
push
jge
jle
fs
mov
movsb
xchg
std
adc
or
xor
inc
xor
xchg
push
gs
push
mov
arpl
shrl
and
js
sarb
mov
jnp
lods
test
push
daa
stos
mov
inc
stc
lret
xchg
xlat
repnz
pusha
adc
orl
xchg
pop
repz
or
mov
xor
xor
lods
adc
mov
sarl
mov
or
add
jno
sbb
jns
scas
stos
pop
dec
out
xor
mov
sbbb
fimull
mov
jo
dec
add
shlb
or
dec
pop
fucomp
pop
sbb
adc
add
cwtl
add
cmp
lods
and
arpl
jb
ja
push
test
xlat
jmp
adc
mov
lea
loope
rcll
fldl
mov
xor
sbb
lret
xchg
out
jmp
fidivrl
xchg
jbe
xor
cmp
jmp
mov
pushf
xor
pop
mov
in
mov
and
mov
pop
rcrl
data16
adc
mov
jl
push
gs
pop
adc
icebp
pop
jbe
flds
inc
into
sbb
js
cmp
adcb
jge
imul
aad
xor
push
and
das
in
add
mov
clc
scas
js
sbb
insb
jbe
inc
lahf
mov
fimull
dec
xor
sub
insl
xor
cmp
lds
inc
pop
mov
mov
sbb
imull
lcall
es
movsl
pop
adc
stc
add
push
sarl
inc
xchg
xor
scas
std
je
jmp
in
push
fists
data16
xor
cmc
xchg
sub
add
mov
sbbb
repnz
test
mov
fcoms
push
int3
mov
xchg
mov
std
out
loope
test
mov
mov
or
pop
sti
sbb
jg
enter
push
dec
jecxz
mov
mov
inc
lods
and
cmp
push
inc
clc
rolb
adc
add
mov
inc
mov
int
jno
lock
out
push
clc
add
dec
jle
sub
cli
movsl
in
pop
adc
add
jne
int3
aaa
loope
mov
jp
test
movsb
cmp
adc
fnsave
lods
cmp
push
dec
rcrb
inc
shl
sub
ret
roll
adc
jp
outsb
push
cmp
jecxz
push
jle
pusha
jnp
dec
dec
dec
xchg
or
loopne
jb
cwtl
lcall
pop
fstps
fcoml
inc
cld
ja
adc
or
pop
mov
mov
leave
xor
xor
mov
into
outsb
cwtl
xor
add
jno
popf
loop
jle
jecxz
sbbl
cmp
jge
cli
cmpsb
adc
jns
repz
int3
js
movsb
add
mov
loop
or
rcr
sub
jmp
push
inc
loopne
ja
or
lret
movsl
mov
sbb
outsb
mov
dec
cmp
adc
mov
mov
in
pop
or
xchg
stc
loopne
pop
out
js
movb
lret
rorl
and
leave
sbb
dec
xchg
insb
mov
scas
scas
out
sbb
inc
sbb
test
int
jno
ljmp
mov
int3
mov
shlb
inc
push
pop
or
ljmp
aam
in
xchg
inc
inc
sbb
fidivrs
mull
ds
negb
in
aaa
dec
push
xchg
push
pop
out
push
sub
dec
push
outsl
sbb
aad
mov
jbe
lock
das
jp
mov
pop
fldl
mov
shl
add
scas
sub
out
dec
ja
into
inc
mov
mov
sub
push
add
and
dec
pop
popa
and
mov
mov
or
lret
lret
mov
adc
inc
jne
fisttps
pop
add
mov
inc
imul
test
sub
jecxz
sbb
cmp
lds
mov
xchg
or
xchg
xchg
pop
sub
imul
cs
mov
pop
es
insl
xchg
cmp
mov
xor
popa
add
data16
loope
lds
aas
mov
or
inc
add
inc
clc
lcall
and
add
shlb
loop
lret
fimull
add
mov
mov
inc
lock
insl
sbb
popa
inc
cmpsl
dec
fisubl
loopne
stc
and
fucom
xchg
adc
sub
sbb
xchg
and
ljmp
xchg
mov
rcll
repnz
loope
out
jne
mov
and
dec
mov
aad
adc
int
aaa
fwait
mov
jp
bnd
cwtl
lcall
cmpsb
dec
add
sbb
addr16
add
fistpl
gs
aam
out
mov
cmpsl
int3
repz
sbb
pop
mov
int
fistl
add
mov
scas
in
xor
jne
loop
mov
repnz
jno
jmp
push
inc
xlat
inc
les
ljmp
mov
jb
mov
add
aas
and
add
jp
or
fimull
cwtl
mov
jmp
ficompl
scas
roll
clc
dec
ljmp
pop
lea
jns
dec
mov
push
xor
cmp
push
std
jmp
int3
jae
or
loopne
sti
push
fisttpll
scas
or
mov
pop
inc
inc
arpl
adc
bound
bswap
xor
cmpsb
addr16
mov
orl
cmp
mov
les
or
jp
sub
dec
and
and
cmpsb
dec
dec
xchg
nop
sub
cmp
aad
aas
cli
cwtl
into
xor
sub
bound
incb
cwtl
adc
dec
je
es
and
push
aad
jmp
inc
push
cmp
or
inc
cs
outsb
stos
sub
inc
cmpsl
inc
mov
xor
lretw
push
lret
cmp
cmp
das
fstl
insl
jo
aaa
movsb
loop
arpl
insb
aas
adc
cmpsb
push
inc
mov
ficomps
push
mov
xchg
mov
loop
stos
mov
lods
mov
in
movsb
inc
dec
push
lret
jns
stos
or
fwait
clc
pop
arpl
inc
and
xor
movsb
cmp
stos
xor
ja
lods
dec
mov
lea
and
out
lds
inc
xor
pop
popf
jp
test
stos
sbb
push
fldt
in
movsl
in
out
pushf
cmpsb
xchg
xorb
xchg
xchg
mov
sahf
push
cs
sub
jae
lods
push
xchg
lock
insb
setl
or
loop
outsb
dec
jg
sub
cs
lods
cld
lahf
lods
inc
jae
divb
stos
sbb
mov
xor
xchg
movsb
fldcw
cmp
out
dec
adc
or
mov
ficompl
jb
int
aas
je
lcall
mov
into
or
mov
and
xor
pop
scas
pop
adc
xchg
dec
xchg
pop
mov
std
xor
push
shll
lret
sbb
sbb
mov
cli
and
aad
lods
ja
inc
std
out
psrad
int3
cmp
add
hlt
ret
js
dec
test
jecxz
cmp
xchg
jb
dec
je
nop
popa
inc
out
cmp
cmpsb
cmpsb
or
lcall
clc
cmp
dec
aas
cwtl
shrl
sub
test
fldt
iret
and
jae
mov
jbe
mov
pushf
and
lea
cmp
adc
int3
pop
jo
xor
and
fnsave
inc
cmpsl
pop
mov
outsb
sbb
sbb
mov
xlat
pop
loopne
cmpsb
xor
push
xchg
test
xchg
mov
out
cld
jbe
jl
sbb
sarl
pop
movsl
popf
loopw
flds
xchg
in
and
int
cli
push
fdivrs
jp
fst
inc
jl
ja
sbb
iret
mov
push
ds
scas
push
in
xor
pusha
sub
push
mov
out
daa
mov
daa
ss
inc
loope
and
and
call
imul
ljmp
shl
pop
mov
out
icebp
and
push
mov
dec
inc
scas
mov
stos
xor
push
cmp
mov
mov
sti
aad
jle
mov
pop
iret
fisubs
pop
out
cld
sti
insl
dec
xchg
jb
mov
daa
sub
push
cmp
sub
push
jb
or
test
fwait
hlt
insl
jb
test
movb
jecxz
sbb
push
ljmp
sbb
cmpsb
mov
cltd
xchg
or
mov
rolb
or
test
andb
cmp
nop
adc
add
jl
std
mov
jbe
or
pop
test
scas
cld
je
xchg
iret
dec
adc
xor
mov
mov
mov
loope
popa
fidivs
outsl
jns
incl
mov
lods
loopne
push
lea
inc
and
cli
mov
seta
mov
mov
out
lods
jae
inc
dec
push
adc
cmp
mov
pop
inc
cmp
push
lret
rcll
out
insb
jae
pop
dec
test
jae
inc
pop
imul
in
call
mov
cli
inc
mov
adc
dec
inc
xchg
and
and
sbb
and
imul
jo
stos
inc
inc
mov
xor
fldl
jo
jmp
sbb
into
lods
adc
pop
and
notb
sti
push
test
sub
clc
jle
fldcw
lahf
or
fisubs
xor
daa
pop
xchg
outsl
out
lret
pushaw
insb
jp
imul
push
pop
ss
xor
movhps
cwtl
mov
out
out
jmp
pop
arpl
mov
roll
inc
inc
aam
dec
add
push
pusha
mov
mov
dec
jmp
cld
and
ret
jl
jecxz
mov
in
xor
dec
es
lock
sbb
and
imul
daa
shlb
cmp
and
pop
or
mov
test
mov
push
insb
dec
xchg
mov
in
cmpb
add
mov
pop
clc
adc
shll
sahf
inc
sbb
lret
or
xchg
ds
jp
jmp
jno
repz
sbb
fldl
xchg
test
mov
scas
xlat
aam
jecxz
adc
sar
test
jb
jecxz
inc
insb
loopne
insl
mov
enter
xor
xor
orl
sub
ret
insb
out
insb
xchg
std
mov
loop
clc
repnz
jl
icebp
mov
cmp
cld
out
arpl
arpl
xchg
xchg
mov
ss
cs
xchg
pop
mov
inc
push
sarb
dec
cmp
stc
loope
ds
shrb
pusha
enter
pop
jnp
push
and
xor
cmpsb
shll
popa
mov
stos
test
lea
sbb
and
shrb
clc
fistps
xchg
sti
and
stos
out
mov
mov
cmp
invd
lret
pop
jb
fisubl
jnp
xchg
add
insb
ret
mov
pop
jp
mov
test
iret
and
imul
sbb
lods
divl
and
jbe
cmp
les
fchs
shrb
dec
std
jmp
out
add
pusha
or
jp
jmp
add
ds
lds
int3
outsl
and
pop
jo
dec
scas
test
mov
rorl
add
imul
pop
nop
cli
jns
xchg
sbb
xor
jb
xchg
or
or
nop
xor
mov
jl
or
fldenv
scas
ds
jno
push
or
popa
lar
mov
inc
test
ficoml
inc
or
jae
mov
imul
js
sahf
lods
and
popf
fbstp
mov
lods
dec
clc
cwtl
push
addr16
ret
mov
scas
pop
and
rolb
adc
pop
or
enter
mov
jb
mov
outsl
into
roll
push
sbb
imul
xorb
mov
insl
lods
mov
jno
jae
in
cli
mov
adc
loop
jno
and
iret
cmc
jmp
inc
and
mov
inc
or
push
loop
jbe
lds
mov
dec
out
insl
and
test
mov
push
adc
lock
xchg
pop
sub
adc
fidivrs
jno
mov
cmp
out
or
repnz
push
and
faddl
sub
cmp
push
repnz
cs
inc
icebp
daa
jg
sub
mov
pop
fcmovne
data16
pop
dec
jge
lods
xchg
imul
adcb
xchg
xchg
loopew
xchg
cmp
in
jns
mov
imul
sub
sbb
xchg
pop
mov
test
fidivs
fnstsw
push
shlb
inc
push
insl
or
jno
cmp
loop
xor
mov
pop
ja
dec
mov
arpl
scas
sti
psubw
dec
push
inc
inc
jb
enter
cmp
cmp
int
jbe
push
incb
icebp
mov
mov
and
jae
inc
inc
daa
xor
in
sub
adc
sahf
int3
sub
pop
and
movsl
outsl
mov
rol
into
in
gs
mov
pushf
xchg
mov
mov
arpl
xchg
stos
subl
mov
hlt
clc
adc
stc
bound
sub
insb
or
je
adc
sub
jge
push
inc
mov
lds
inc
pop
fwait
nop
add
test
jge
sub
test
cwtl
or
sub
out
inc
jb
mov
sbb
sbbl
shrl
mov
hlt
pop
lcall
sbbl
and
in
pop
inc
call
ror
dec
xor
lret
ror
mov
mov
std
imul
imul
test
icebp
xor
pusha
jae
out
sbb
cmpsb
data16
pop
mov
subb
stc
movsb
and
jae
imul
clc
insb
xor
scas
scas
push
push
add
jge
ret
sbbb
jg
xor
push
pushf
pop
call
xchg
imul
sbb
test
inc
sub
fisubrl
cmp
dec
nop
xchg
push
cmp
clc
ja
pop
push
push
fisttps
dec
sub
out
nop
int
lret
hlt
not
out
not
rol
jl
sub
add
sub
inc
iret
push
pop
or
xor
dec
movsl
mov
jle
cli
adc
sub
mov
dec
push
mov
dec
mov
dec
fisttpll
mov
cmp
lcall
lret
fadd
xchg
andl
fisttpl
dec
ljmp
or
stos
mov
sub
adc
mov
cmp
xchg
adc
dec
cmc
push
cmp
sub
cmpsl
repnz
mov
test
xor
lods
mov
xor
data16
outsl
mov
pusha
jmp
push
fdivrl
xchg
xor
sbb
xchg
push
test
mov
popl
test
xchg
ret
xor
xchg
cli
sub
jp
jmp
pop
pop
jns
push
xchg
or
clc
jge
jecxz
cwtl
insb
test
nop
sahf
stos
scas
clc
jp
pop
cli
xchg
pop
jle
adc
scas
jecxz
cwtl
xchg
fmuls
icebp
push
or
or
cmpsb
imull
fsubrs
sbb
fldenv
jae
dec
mov
clc
jle
dec
daa
push
rcl
shlb
nop
cwtl
sbb
lds
std
shr
cltd
cmp
test
lods
es
addr16
jmp
sbb
lods
sarl
mov
push
pop
jae
dec
jne
xchg
loopne
pop
lods
pop
jp
pop
sub
or
sti
sub
sbb
nop
cmp
test
shrb
fwait
popf
add
xchg
daa
sbb
iret
and
in
xor
fbstp
sbb
fisttpl
jno
xchg
pop
cmp
cmp
loop
ss
jno
inc
mov
xchg
icebp
imul
neg
shlb
mov
std
in
add
xor
mov
mov
orb
insl
fs
sbbl
mov
push
les
fstps
rcrl
subb
inc
mov
out
mov
xor
sub
xchg
and
mov
insb
and
inc
test
dec
and
xor
orb
jg
aaa
push
inc
push
mov
push
ss
insl
es
outsb
iret
ss
pop
in
inc
psraw
ja
fstl
push
push
pop
int
xor
hlt
testl
lock
and
into
lock
lcall
xor
out
cwtl
and
daa
ja
or
jbe,pn
sub
jmp
xchg
pop
jl
or
cmpsl
xor
mov
jne
lea
fidivrl
or
fs
cmp
mov
iret
cmp
jecxz
cmp
leave
popf
addb
jp
dec
les
ds
in
cld
or
cld
pushw
pusha
stos
sub
mov
into
popf
xchg
cmp
mov
mov
loope
xchg
dec
xchg
aad
xchg
test
leave
xlat
in
push
lea
addr16
xor
mov
ss
dec
jno
jns
xchg
push
xchg
repz
sbb
mov
inc
fsubs
ljmp
push
add
jle
icebp
cmp
faddl
loopne
aam
mov
adc
mov
imul
das
insb
sbb
xchg
mov
mov
icebp
icebp
jle
fisttps
adc
ljmp
test
mov
mov
push
jns
imul
xorb
mov
ja
sub
jmp
sbb
ficoml
sbb
subl
mov
lcall
mov
push
popf
sbb
or
ds
sbb
and
push
loopne
add
scas
cld
adc
mov
cwtl
outsl
mov
xor
jbe
movsl
xchg
mov
in
push
add
jnp
cmpsl
jecxz
inc
std
adc
mov
mov
mov
jp
test
das
jg
in
pop
inc
pop
ja
cmc
stos
lahf
stos
add
jmp
sub
scas
push
gs
popf
mov
fisttps
loopne
dec
cmp
fsubrl
add
inc
xor
dec
loope
lea
or
push
lock
leave
add
fiadds
sbb
dec
dec
stos
jae
scas
rep
mov
sub
cmp
aad
or
aad
lds
add
mov
fsubp
xorb
adc
sbb
loop
repz
add
jmp
repz
pusha
cmp
insb
mov
dec
push
ja
pushf
pop
subw
insl
rclb
aad
push
cld
pushf
sahf
sbb
outsb
dec
adc
inc
or
jge
movsb
xchg
mov
jge
ds
test
or
xchg
es
push
push
pop
or
pop
mulb
insl
add
fldpi
mov
notl
stos
in
push
xor
or
cmp
xchg
stos
data16
testl
outsl
fidivs
aad
push
in
cmp
std
ljmp
xchg
cmp
xor
sbb
inc
and
push
inc
outsb
lds
mov
push
dec
cmpsb
stos
jg
adc
cld
movsb
jg
jmp
and
leave
jl
mov
gs
aam
push
out
in
mov
push
bound
mov
pop
adc
rcrb
xchg
sub
push
scas
pushl
fdivrl
rolb
jge
loope
incb
mov
or
mov
imul
jb
push
or
in
call
xor
ljmp
add
imull
sub
in
std
mov
les
out
pop
fs
fstpl
sub
xchg
mov
inc
je
movsl
mov
sbb
push
cld
aam
pop
scas
add
iret
into
outsb
aad
ja
cltd
or
das
jp
in
rorb
js
faddl
add
xchg
jns
loopne
sbb
nop
sub
das
pop
frstor
shll
fisubs
xchg
ds
inc
popf
push
ljmp
add
inc
ret
xorl
push
enter
mov
in
fs
mov
sbb
jmp
xlat
dec
mov
lea
push
jl
sti
vandnps
and
ret
mov
dec
loopne
add
add
cmpsl
dec
push
inc
dec
push
cs
out
lret
shll
lret
mov
rcrl
sbb
cmovl
clc
pop
or
out
pop
jmp
cmpsl
jno
mov
add
mov
mov
inc
data16
ds
pop
test
mov
xchg
and
cmpsl
rep
push
add
stos
je
jne
mov
sub
pop
xchg
shlb
fmul
jnp
xor
sub
xchg
mov
movzwl
sahf
xor
les
sti
fstpl
sub
xchg
test
sar
pop
scas
je
or
sbb
pop
dec
iret
popf
imul
lea
mov
rcrb
sbb
mov
add
lret
arpl
bound
mov
pop
mov
mov
mov
pushf
xor
push
jecxz
sbb
lahf
adc
cli
mov
adc
rorb
loope
sub
mov
out
jae
push
ja
mov
mov
ja
lds
push
shll
adc
addr16
testl
push
mov
xlat
cli
jne
ds
fwait
sbb
add
cli
arpl
lret
sbb
cmp
sar
pushf
pushf
in
movsb
or
pop
sarl
sbb
int
jno
sbb
stos
bound
shrl
pop
pop
mov
ja
jns
mov
sbb
push
mov
add
dec
jns
fldl
ljmp
sub
adc
in
movsb
adc
or
data16
dec
daa
adc
mov
cltd
insb
xlat
and
xor
notb
mov
rorl
clc
adc
jbe
dec
jb
pop
mov
add
push
xchg
lods
xchg
or
inc
add
mov
inc
jmp
xchg
jae
or
and
pop
icebp
gs
mov
mov
loop
mov
insb
mov
fs
xlat
in
or
mov
jmp
push
mov
xchg
nop
out
lret
les
mov
std
clc
adc
inc
xchg
iret
popf
xor
jmp
push
adc
pushl
add
stc
test
jbe
ljmp
inc
lock
xor
addb
es
cmpsl
sub
mov
shlb
mov
cld
xchg
fldl
pop
into
mov
cwtl
cli
nop
cmc
jae
popa
jno
adc
mov
or
add
movzwl
insl
xor
je
dec
bound
fldenv
xor
and
push
imul
stos
cli
sbb
fs
sbb
and
jo
jecxz
inc
aas
lret
shlb
push
xor
negb
xor
aas
adc
je
ja
es
lods
pop
loope
pop
movsb
add
mov
popa
imul
and
mov
stos
in
adc
sbb
jb
je
mov
jl
mov
dec
lods
jae
push
inc
mov
jb
sbb
insl
iret
scas
xchg
mov
cli
andl
xlat
ja
mov
mov
call
daa
scas
xchg
daa
pop
dec
or
add
mov
inc
mov
xchg
jp
roll
cmpsl
pop
or
xchg
mov
cmp
je
cmpsb
arpl
jge
cmp
icebp
loopne
push
movsb
inc
pushf
push
adc
mov
xor
jp
jg
pop
mov
ljmp
adc
xchg
roll
mov
mov
out
cmp
aaa
jnp
xor
outsl
mov
fsubr
bound
repnz
mov
aad
dec
xor
int3
mov
or
lret
out
pop
mov
mov
fimuls
in
jns
and
pop
lret
cmpsl
add
mov
xchg
jbe
jbe
mov
jge
add
xchg
testb
and
push
add
sub
filds
and
imul
popa
jns
out
xchg
nop
shlb
out
xchg
push
mov
jecxz
aad
sub
xchg
jno
cltd
mov
mov
xchg
enter
out
cmp
testb
push
movsl
loopne
sub
pop
xlat
mov
aam
or
cld
test
cmp
xor
div
data16
int
push
inc
and
out
fsubl
and
in
or
cld
rorl
sbb
pop
adc
cmc
les
sarb
outsb
jb
sahf
pop
dec
inc
mov
mov
insl
and
scas
xchg
sarb
adc
push
clc
ret
scas
aaa
mov
fidivrs
adc
dec
fs
sti
or
lock
cltd
sar
pop
pop
test
out
enter
imul
sub
bound
loop
call
cmp
sbb
or
xchg
icebp
movsb
cmp
cmpsl
cmp
pop
in
jmp
idivl
cmc
sbb
inc
dec
shll
int
sbb
and
pop
xlat
pop
xchg
test
out
adc
ret
aas
test
push
jb
hlt
xchg
sbb
mov
inc
mov
push
push
fcoml
cli
stos
push
aas
out
push
xchg
sbb
notb
mov
push
xchg
pop
push
pop
shr
in
ja
push
add
sub
lea
or
sbb
int
std
pop
fisubs
pop
mov
push
sub
dec
aas
pop
dec
icebp
loope
xchg
iret
aam
rcl
add
xchg
shrl
inc
sbb
aad
hlt
mov
inc
mov
mov
jmp
sbb
push
jge
or
lea
in
subl
lods
jp
pop
inc
mov
rol
roll
mov
decb
test
stc
outsl
mov
cli
fs
mov
jle
data16
inc
inc
js
jb
mov
sar
leave
bnd
xor
popa
repz
mov
mov
adc
lods
xchg
mov
loopne,pn
divl
push
inc
push
nop
pusha
jp
inc
and
pushf
dec
fimuls
push
push
sbb
jno
inc
pop
xchg
cmp
pop
mov
mov
je
aaa
adc
icebp
repz
addr16
nop
ja
loope
xor
pop
mov
xchg
push
in
fistpll
insl
sti
pop
and
cmp
rclb
daa
fldcw
jno
mov
inc
dec
sbb
mov
aam
dec
or
pop
push
push
leave
out
nop
imul
cld
stos
push
or
imul
cmp
sbb
mov
scas
mov
mov
cmp
cltd
pop
jmp
sbb
cs
mov
adc
ds
mov
xor
daa
repnz
jg
dec
movsb
jg
ret
aam
out
sbb
movsl
jbe,pt
xor
jmp
addr16
jge
in
mov
decl
pop
into
mov
ja
jnp
test
push
cmc
mov
out
sub
sahf
cltd
repz
aas
out
push
cmp
fsubs
fs
cld
cmp
out
and
mov
cmp
inc
dec
mov
ret
xor
es
lock
lret
scas
cmp
hlt
stos
cwtl
and
test
repz
out
jae
jbe
int
cmp
sub
sub
mov
mov
adc
test
stos
mov
mov
or
clc
inc
cmp
xor
jno
out
int
cmp
leave
adc
xor
aaa
mov
jne
test
and
or
jnp
dec
adc
pop
adc
sub
adc
xchg
mov
dec
sub
jb
jle
push
push
int3
jne
pop
jl
ss
mov
xchg
xlat
test
ja
xor
pop
aam
mov
imul
fmull
pop
push
jg
jae
mov
cmc
dec
movsb
adc
or
pop
cld
mov
ja
mov
out
jle
mov
xchg
incb
jae
outsb
or
pop
push
pop
call
sbb
push
or
je
xor
or
dec
pop
je
push
sbbl
xor
dec
data16
enter
lock
ret
andl
add
out
loope
mov
inc
mov
mov
mov
loope
pop
pushf
push
push
lds
call
dec
sbb
mov
and
push
repnz
rcl
rcrb
sahf
ljmp
in
and
dec
imul
lock
sub
shlb
sub
sbb
ljmp
inc
push
pusha
dec
test
adc
dec
shrb
loopne
mov
fstpt
enter
nop
sub
xor
xchg
sub
ja
or
adc
shll
jle
in
in
les
mov
icebp
stc
stos
or
mov
lret
lods
push
jb
repnz
clc
scas
jmp
add
push
sub
or
adc
lret
lret
dec
sub
loope
dec
leave
push
aas
mov
add
ja
cwtl
insl
push
lret
aad
jl
mov
popf
mov
mov
or
loope
mov
cwtl
xor
xchg
sub
or
sbb
mov
xchg
ljmp
fisubrs
mov
imul
js
fs
mov
add
shll
sbb
lods
and
test
push
mov
cmp
lea
test
xlat
add
out
or
jo
pop
sub
fistpll
mov
cs
xor
jns
shr
jl
lcall
loope
loope
mov
scas
inc
jnp
loopne
mov
das
or
insb
mov
pop
fadds
out
dec
lret
test
repnz
jne
or
cmp
mov
std
push
dec
lock
mov
mov
push
push
mov
add
push
jno
ljmp
jmp
sbb
add
pop
movsb
jp
not
fwait
sbb
data16
xchg
pusha
sub
into
notl
sbb
mov
shll
cmp
pop
cltd
pop
jecxz
pop
jecxz
out
or
pop
sbb
ret
loopne
push
sub
test
ljmp
jecxz
repz
mov
add
aas
mov
stos
jle
jp
and
cmp
mov
and
inc
lods
jo
sbb
daa
js
or
inc
scas
pop
arpl
ret
shll
dec
add
inc
cmp
push
pushf
sub
in
lret
add
pop
jp
inc
js
imul
ss
mov
xchg
jne
lret
inc
push
mov
ret
dec
stos
xchg
and
test
mov
cmpsb
adc
test
mov
xor
adc
ss
daa
mov
loope
vpcmpgtb
cmpsl
xorb
sub
bound
push
cwtl
sahf
push
dec
or
frstor
out
xchg
mov
pop
call
jno
mov
pop
scas
ds
sbb
outsl
sub
push
push
jno
sub
mov
out
sbb
inc
add
aad
xchg
pop
sub
sbb
int3
popf
dec
adc
pop
imulb
stos
inc
jl
out
push
fcmovu
adc
pusha
or
addr16
in
pop
cmp
mov
sbb
sbb
je
push
aad
sub
cltd
fnstsw
lret
add
adc
out
test
push
stos
inc
mov
mov
mov
pusha
inc
push
test
rcll
orb
enter
insl
jmp
pop
lahf
and
aaa
or
out
aad
pop
jecxz
push
dec
sub
aam
cli
fs
notb
dec
jg
mov
in
mov
xchg
insl
mov
test
andl
test
jb
cmpsl
addr16
push
addr16
mov
ret
fcomi
jp
push
ret
push
jns
push
icebp
lret
enter
aaa
jae
imul
push
cltd
mov
mov
pop
imul
push
insb
mov
orb
ljmp
mov
popf
cmc
dec
sbb
dec
sarb
cmpsl
pop
jb
adc
mov
mov
mov
mov
shlb
xor
add
mov
push
enter
test
lds
push
xchg
sub
fstps
fs
xor
dec
loope
xor
hlt
jmp
shlb
dec
cmc
mov
cs
push
leave
mov
add
testl
adc
aad
mov
adc
shll
outsl
push
adc
push
jecxz
fsubs
movsb
or
fstpt
adc
sub
popf
dec
int3
inc
xor
jb
sbb
jo
xor
xchg
mov
in
aad
push
xchg
mov
and
cmp
pop
ja
lahf
mov
xchg
repz
dec
mov
jnp
stc
aad
mov
adc
add
push
xor
jl
jns
lods
push
jb
loopne
or
cli
mov
cmpsb
cmpsl
push
dec
gs
ficoms
cmp
cltd
je
mov
cmpsb
pcmpeqd
inc
repz
dec
data16
cmpsl
and
out
icebp
push
aas
loop
sbb
aas
movsl
mov
sub
pop
lds
sbbl
cmp
sbb
and
add
pop
rcll
push
mov
mov
in
push
aam
jg
mov
push
sub
roll
lahf
sbb
fsts
cmpsl
dec
mov
sar
andl
mov
in
jmp
repz
hlt
sub
xchg
and
and
lret
cmc
jmp
cmpsb
xchg
adc
sub
adc
xor
vmread
out
jle
lds
mov
sub
je
in
aas
dec
data16
aaa
lock
stos
mov
test
clc
outsb
lods
pushl
insl
jecxz
and
data16
dec
in
addl
fnstsw
jmp
jae
pop
ljmp
inc
mov
cltd
ret
add
std
pop
movsb
fisubs
repz
pop
scas
or
cld
test
adc
adc
aas
or
add
int3
add
stos
repnz
ljmp
icebp
dec
movsl
dec
ja
jno
inc
into
lock
push
jl
mov
xchg
sbb
gs
xor
in
outsb
aaa
ret
and
xor
jne
mov
adc
rcrb
inc
imul
and
cmp
cwtl
dec
fcoml
rcll
stos
and
sarb
test
ja
mov
outsb
cmpsb
mov
rcll
cmp
fcompl
movsl
mov
inc
inc
or
sbb
fisubs
mov
or
xchg
sub
or
pushf
xor
xlat
sbb
das
out
mov
dec
cs
dec
sub
nop
loope
mov
mov
xchg
out
inc
sbbl
aad
fs
sub
pop
fcompl
jl
mov
mov
or
test
data16
dec
push
or
fdivr
test
dec
shlb
call
sarb
jo
out
shll
adc
mov
into
sbb
in
xor
stc
pop
fstpt
inc
xlat
jl
in
dec
jmp
lods
inc
xchg
insl
stos
bound
mov
les
sub
in
jge
mov
sbb
jge
cmovp
inc
adc
arpl
arpl
sbb
mov
cmc
and
sahf
fnstenv
xor
int
xchg
cld
in
icebp
jmp
sbb
jmp
iret
jmp
cs
lds
add
gs
mov
mov
cmp
or
inc
dec
imul
mov
cltd
mov
ficoms
dec
movsl
out
je
arpl
outsl
test
adc
jb
mov
imul
push
jno
aad
shrl
pop
fldl
xchg
add
popa
loopne
cmp
in
lock
xchg
out
loope
mov
add
outsb
mov
and
mov
test
mov
cli
imul
lods
mov
cmp
sbb
inc
test
mov
mov
jg
into
sbb
dec
cmpsl
lret
les
inc
rorl
aaa
pop
mov
pushf
inc
inc
test
pusha
bound
mov
js
lods
dec
in
daa
shll
call
movsl
out
fs
out
push
xchg
movsb
mov
sub
or
xor
inc
mov
test
sti
aam
jne
inc
mov
fs
dec
add
inc
out
test
aad
and
aas
into
inc
xor
hlt
sub
mov
fmuls
or
add
cmpb
loop
adc
lcall
inc
push
outsb
sbb
mov
sbb
and
lahf
rclb
pop
sbb
mov
mov
ss
sub
mov
sub
orb
std
xchg
in
outsb
pop
push
push
sub
lahf
imul
incl
mov
push
mov
xchg
je
pusha
lock
push
adc
cmpb
into
jmp
rorl
daa
dec
cmpsb
pop
sbb
inc
xchg
lods
fcomps
push
xchg
rolb
and
cld
jbe
jmp
in
adc
mov
cwtl
mov
dec
jae
das
jp
sbb
or
lahf
in
add
cmp
test
loopne
inc
inc
sbb
mov
and
cmpsl
push
cwtl
mov
xor
out
insb
or
outsl
inc
mov
outsl
push
push
mov
adc
jge
aaa
lret
lret
mov
sti
dec
pop
adc
lods
and
leave
adc
rep
icebp
jmp
repz
out
insl
or
or
mov
cmp
frstor
bound
cmpsl
jne
cmpsl
fsts
mul
inc
fnsave
inc
jge
mov
sub
into
popa
mov
add
and
pop
mov
aam
sub
xor
nop
mov
inc
xorb
lret
and
les
mov
imul
mov
xchg
fs
jecxz
mov
icebp
int
movsb
insb
aad
fstpl
xchg
jge
inc
ror
cld
lea
les
test
movsl
pop
int
fnclex
jle
sub
mov
mov
ss
xor
mov
in
outsb
jmp
cmp
mov
xchg
pop
sbb
mov
loop
lods
ret
xchg
icebp
xor
and
inc
sub
mov
aas
cmp
in
cmp
test
sub
rclb
pushf
add
mov
or
dec
inc
cmc
aad
add
push
std
xchg
xchg
movsb
cmc
inc
mov
pop
pop
movsl
xchg
pop
dec
mov
mov
adc
int
and
pop
push
rclb
xchg
inc
test
shl
popf
dec
or
mov
push
and
es
jmp
addr16
das
push
jg
test
and
mov
out
dec
rorb
mov
add
xchg
mov
jno,pt
xchg
and
movsb
push
mov
xchg
addb
out
adc
lods
pop
pop
or
jne
test
and
imul
mov
and
mov
push
bnd
fwait
jnp
push
xchg
lret
or
in
xchg
sub
inc
jmp
ds
popf
fisttpll
mov
mov
xchg
jmpw
movsb
in
adc
fimuls
lret
scas
test
push
stos
stos
shr
ds
pop
fs
out
loope
out
mov
mov
out
mov
cmp
xchg
fistpll
lods
div
daa
xorl
outsb
jle
nop
nop
hlt
js
sub
sbb
inc
inc
ret
sub
out
push
cmp
pop
cmp
dec
or
rol
aad
mov
push
pop
mov
imul
mov
rcrl
inc
xchg
adc
addl
and
arpl
ficompl
insb
add
popf
mov
mov
pop
leave
repz
lods
fs
xchg
fsubl
inc
mov
cltd
jns
test
mov
cmp
inc
sub
jge
push
lret
stos
in
test
pop
test
mov
stos
mov
xchg
sub
fildl
cmp
inc
mov
leave
cmpsl
push
insl
xchg
inc
mov
xchg
clc
add
popf
mov
mov
fsubrp
iret
jmp
sbbl
sub
or
pushf
dec
mov
ret
subl
rcll
pop
fwait
mov
jo
test
lcall
push
orb
pop
test
mov
mov
mov
filds
xorb
andl
scas
sub
cmpb
js
gs
mov
jne
pop
fdivs
das
fs
adc
push
jecxz
iret
subl
loope
pop
test
add
ret
push
enter
test
jge
iret
pop
leave
bound
push
js
pop
test
inc
icebp
pushf
cmpl
jae
mov
xor
inc
int
mov
test
aas
pop
dec
or
loopne
add
and
push
int3
adc
jg
ret
lds
mov
or
jp
push
movb
mov
dec
fstps
insl
lock
jmp
inc
ficoms
fwait
mov
idivb
push
sub
aaa
adc
out
sbb
in
fmull
out
xchg
aas
mov
icebp
push
mov
sahf
lret
mov
in
int
jl
fstps
push
outsl
mov
push
pop
enter
stc
imul
enter
std
stos
js
lods
adc
mov
andb
imulb
push
inc
int3
lods
or
jb
inc
sbb
sub
int
push
rolb
push
or
mov
ffree
mov
clc
cmpsl
dec
pop
shr
popf
add
dec
dec
jecxz
hlt
imul
hlt
in
insl
jne
dec
push
rorl
mov
loopne
push
mov
push
hlt
mov
repz
in
push
jmp
in
xor
jge
xor
rorl
movsl
popl
std
xchg
pop
movsb
fwait
xchg
inc
mov
add
xor
andl
mov
repz
mov
mov
push
xlat
pop
pop
push
sbb
jl
sbb
adc
cmp
inc
mov
in
js
stc
cltd
fists
cmc
ret
pop
inc
sbb
push
sbb
mov
or
les
repnz
and
cmpb
pop
push
enter
jge
xchg
push
js
lret
call
pop
mov
pop
pop
shll
adc
or
jae
outsl
and
insl
dec
cltd
mov
shlb
sbb
cmp
aaa
adc
and
lea
cwtl
pushf
xchg
mov
mov
js
mov
aam
imul
xchg
sub
mov
xor
pushf
cmp
mov
ljmp
xor
out
sbb
js
lods
and
push
ret
add
lods
cmpsl
or
shr
pop
pushf
mov
mov
icebp
fists
mov
dec
jo
ret
xchg
push
or
jmp
pop
subl
or
and
cmp
lret
jge
loop
mov
xor
fnstenv
and
pop
test
dec
ficompl
xchg
cmpsb
pop
inc
test
adc
pop
mov
pop
int
iret
les
mov
push
mov
movsb
aam
dec
cltd
adc
cmpsb
pop
add
sti
cld
cmp
mov
push
ds
enter
jno
jp
inc
cltd
mov
subb
ljmp
jmp
jg
shll
cmp
fiaddl
jno
push
sahf
stos
data16
pop
or
add
xchg
cmc
test
stc
loop
scas
dec
cmpsb
sbb
insl
xor
and
sbb
sar
in
pop
ss
xor
popf
imul
xchg
and
fcoml
out
xchg
cmpsl
mov
cltd
dec
sub
hlt
movnti
mov
xchg
ss
push
cmpsb
sbb
adc
outsl
push
xor
mov
push
cmpsb
nop
imul
or
xor
sbb
jl
imul
scas
les
repz
sahf
push
push
popf
xchg
aam
inc
cmp
cmpsb
dec
push
add
mov
aam
test
movsb
jns
pusha
mov
test
call
cmp
sarb
sub
call
sbb
lods
fxtract
xor
inc
ds
or
pop
cmp
and
test
data16
mov
imul
or
jg
nop
mov
aam
mov
push
insl
sti
cmp
outsl
cmp
inc
mov
xchg
stos
in
ror
orb
aad
fwait
lods
cmc
cmc
sbb
ret
mov
arpl
in
insb
push
pop
xor
hlt
cld
pop
mov
xor
dec
es
adc
cmpsb
mov
sbb
out
call
sub
push
and
lea
je
stos
mov
scas
xchg
xor
insb
push
pop
in
dec
lret
mov
xchg
mov
pop
cwtl
imul
cmc
jmp
mov
shlb
mov
icebp
inc
push
out
adcl
mov
repnz
push
adc
aad
movsl
xchg
cmp
push
jge
cmp
in
add
jp
sbb
cmc
mov
and
jp
mov
loop
cmp
movsb
xor
nop
jp
push
fldt
jl
dec
inc
or
pop
lods
xorb
adc
inc
mov
lret
sub
pop
xchg
xor
and
mov
sub
loope
pop
mov
push
scas
mov
sub
cld
mov
rorb
lods
jge
push
cmpsl
scas
sub
dec
mov
cmp
ds
mov
mov
cmp
xchg
adcb
mov
lcall
jg
sahf
inc
mov
addl
add
aas
adc
gs
dec
adc
and
enter
jg
sbb
popa
push
inc
enter
incl
mov
and
jl
dec
mov
add
lock
movsb
jge
movsl
jle
jns
mov
sahf
aad
fisttpl
popa
data16
aaa
out
mov
into
movsl
aam
push
daa
stos
cmpsb
imul
pop
xchg
pop
std
sbb
xor
cmp
movsb
hlt
lock
mov
sbb
mov
lea
pop
fisubrl
push
fistps
mov
inc
xlat
cwtl
xor
je
xor
ja
or
dec
gs
push
mov
arpl
cmpsl
and
mov
negb
xchg
mov
jp,pn
adc
mov
add
pop
inc
aad
mov
imul
sti
dec
pop
cmp
loopne
add
in
gs
mov
out
mov
xor
fimull
jo
outsb
sub
data16
rorb
xor
mov
adc
cmpsl
adc
inc
or
daa
cmpsb
cmpsb
push
xor
popf
push
mov
mov
je
aaa
shlb
std
or
jecxz
mov
add
es
jl
or
add
xor
in
and
mov
push
mov
arpl
mov
mov
jns
lods
sub
in
xor
pop
jno
in
in
xor
add
xchg
movsb
fnstcw
jecxz
mov
insb
pop
mov
mov
lea
mov
sbb
sbb
jnp
imul
imul
mull
mov
inc
arpl
mov
or
xchg
es
pop
jae
fldt
fstpl
int3
jns
push
push
inc
mov
pusha
mov
push
mov
cs
adc
sub
or
pushf
dec
pop
ds
sbb
jmp
dec
inc
pop
adc
shrb
outsb
dec
xor
int
movsb
ret
mov
clc
shll
into
dec
cmp
or
pop
notl
xchg
in
cltd
jnp
scas
adc
lods
or
sbb
sub
subb
repz
push
mov
popf
mov
and
mov
mov
out
in
sub
out
ss
jb
test
lock
popa
cld
popf
dec
mov
and
add
lret
adc
jae
outsb
imulb
fs
jecxz
mov
ja
sub
xchg
xchg
dec
sbb
mov
cwtl
push
fwait
sub
insb
pusha
adc
jne
pop
fs
pop
lret
hlt
shlb
or
inc
inc
pop
and
xor
xorb
pop
cmpsl
mov
outsl
mov
push
insb
repz
imul
xor
hlt
sub
xlat
dec
inc
leave
push
and
imull
cwtl
adc
es
aas
pop
into
jg
repz
mov
cmpl
mov
push
mov
sti
js
arpl
sti
dec
cmpsb
mov
xlat
sbb
push
xchg
call
cmp
inc
rorl
mov
icebp
push
shrb
or
pop
sub
fdivl
xor
sbb
pusha
jg
dec
sub
std
lret
xchg
mov
cli
insl
push
inc
mov
add
loop
sub
lahf
mov
lret
xlat
mov
js
lret
mov
add
jno
in
mov
fbstp
jg
xor
pop
leave
push
mov
testl
loopne
sti
jmp
repnz
add
pop
movntq
out
and
cmp
leave
xchg
add
adc
push
sub
cltd
pusha
jle
out
mov
mov
lret
adc
xchg
jmp
loop
push
daa
xchg
xor
insl
aam
xor
xchg
pop
pop
mov
cvtdq2ps
into
int3
movsb
test
pop
cmp
and
jo
pop
loopne
std
add
out
xchg
push
pop
push
inc
dec
out
popf
push
jns
cmpsl
and
sub
lahf
lock
jbe
pop
pop
pop
xlat
imul
mov
dec
rol
xchg
out
inc
dec
loope
push
test
mov
fcompl
shll
out
out
movsl
push
ffree
sbb
sub
divb
hlt
stos
push
sahf
xorl
sbbb
fcoms
mov
insb
jno
sub
int3
fcmovu
lcall
add
test
xor
jle
inc
or
mov
push
pop
pop
mov
sbb
pusha
fwait
enter
push
daa
pop
ror
pop
pop
dec
cmp
xchg
pusha
rorl
ljmp
adcb
pusha
cmp
lahf
push
push
int3
icebp
mov
xchg
jmp
leave
int
notb
ja
fimull
jne
dec
jno
mov
cmp
mov
ljmp
pop
mov
std
loopne
insb
add
mov
jae
mov
mov
mov
jbe
sbb
daa
xor
stos
in
addl
lret
in
or
add
cli
rcrl
daa
iret
add
frstor
sub
and
ret
in
pop
neg
sbb
xorb
mov
sbb
dec
fnsave
pushf
pop
aaa
dec
arpl
xchg
in
scas
xor
cmc
xor
cmp
lods
adc
andl
xor
xchg
icebp
jle
stc
mov
out
pushf
insl
or
pop
pop
jecxz
xor
sti
cmp
mov
pop
dec
xchg
insl
dec
adc
sarl
xor
push
or
dec
push
sub
mov
jbe
pop
cld
jne
pushf
pop
push
cmc
imul
adc
pop
dec
pop
dec
jo
test
flds
pushf
movsb
lea
push
inc
xor
or
adc
mov
addl
xor
jp
pop
mov
xchg
cmc
sahf
jl
mov
fsubrs
pop
test
out
cs
cmp
mov
imul
sbb
jle
or
mov
pushf
mov
add
mov
lods
jnp
ret
out
gs
in
sbb
ret
popf
jb
jp
mov
xchg
mov
in
lcall
subb
fidivrs
push
fadd
or
adc
aad
mov
mov
mov
outsl
mov
jb
pop
add
in
push
aas
xchg
cld
push
stc
movsb
fs
xchg
pop
lret
fcompl
xchg
jb
sub
cwtl
sbb
inc
add
push
mov
pop
insl
jmp
ja
lods
fmull
xchg
hlt
cmp
daa
and
dec
push
cmp
les
pop
movsb
lods
fsubl
cwtl
and
fstps
mov
push
rcrl
add
mov
mov
cld
push
dec
push
cmp
push
dec
xchg
std
daa
mov
xor
cmp
jb
fdivr
or
pop
arpl
aas
and
lods
push
mov
movsl
out
call
dec
lcall
addr16
mov
aas
dec
test
pop
push
iret
fdivs
leave
enter
and
xchg
mov
bnd
add
mov
sarb
adc
dec
outsl
aas
loope
cltd
sub
fmul
fnstsw
cmc
fs
into
inc
mov
mov
clc
and
movsl
sbb
xlat
mov
mov
push
push
aam
pop
xchg
popf
adc
cmp
jbe
repz
jnp
jle
jl
mov
jbe
jnp
or
pop
or
outsl
sbb
clc
sbb
push
xchg
cmpsl
mov
inc
enter
xchg
pop
movsb
test
mov
push
mov
fldcw
mov
js
or
push
rorl
aas
popf
jbe
pop
scas
or
not
pop
xlat
test
lret
movsb
xchg
mov
js
jge
and
inc
push
test
fdivrs
leave
test
add
ret
inc
mov
mov
or
push
loop
outsb
mov
dec
pop
fimull
mov
je
fistpl
push
imul
dec
mov
mov
rorl
out
int3
and
or
scas
inc
push
pop
mov
jae
push
or
loope
jmp
adcl
lcall
cmp
int
push
jge
inc
sub
aas
into
mov
adc
in
xchg
daa
adc
cmpl
mov
pop
addr16
ficompl
mov
mov
pop
mov
jae
and
adc
es
in
fs
leave
std
scas
data16
je
add
add
neg
imul
inc
jp
out
and
adc
js
pop
test
pop
xor
pop
add
push
push
cmp
xlat
pop
pop
add
aas
cmp
shlb
rorl
push
mov
adc
lret
fdivl
cli
lods
xor
inc
cmpsl
lcall
mov
jg
push
leave
in
loop
and
mov
repz
sub
xlat
or
jp
je
stos
lds
xchg
xchg
js
mov
jae
call
and
xor
mov
sarb
jae
hlt
or
jbe
out
mov
jnp
daa
pop
mov
stos
mov
lahf
cmc
movsb
scas
push
sbb
stc
dec
imul
iret
add
mov
iret
shrl
cmpsb
sbb
push
dec
dec
jge
stos
pop
iret
into
lea
jne
jmp
fstl
adc
adc
mov
or
cmp
mov
je
pop
xchg
xchg
mov
icebp
dec
mov
in
xor
push
mov
in
jne
mov
lea
xchg
dec
es
rcl
sub
sahf
popa
out
push
push
adcl
adc
mov
push
cmc
jge
scas
leave
pusha
xchg
fistps
or
inc
and
out
adc
sub
mov
das
scas
in
leave
mov
push
push
jl
movsl
sbb
inc
adcl
adc
cmp
adc
xchg
mov
push
data16
xor
xacquire
imul
int
ljmp
sbb
add
pusha
pop
mov
imul
imul
fildl
je
mov
pop
pop
mov
and
movsl
mov
mov
lret
mov
shll
in
lret
sbb
outsb
jp
pushl
push
push
in
push
inc
loop
dec
fcomps
cmp
jge
push
push
jae
fsubl
push
loopne
inc
out
mov
inc
test
xor
jnp
test
push
push
insl
jmp
fnstcw
mov
fs
out
and
insl
sub
pop
and
inc
xchg
mov
jb
mov
rclb
mov
jmp
test
mov
sub
and
repnz
mov
jl
inc
mov
cli
stos
or
push
adc
mov
xor
movsb
sub
nop
push
cmp
add
push
pop
mov
lcall
insl
jne
icebp
dec
js
aad
adc
sub
sub
orb
dec
pop
add
cmp
test
mov
enter
xchg
iret
cli
fistpll
xchg
movsl
lds
cmc
dec
jl
shrl
movsb
pusha
repnz
xor
mov
test
je
dec
or
imul
dec
push
sahf
stos
or
add
scas
cmp
outsl
das
add
push
sub
addr16
jecxz
pop
inc
jge
lock
dec
test
lea
or
out
cmpb
dec
inc
xor
movsb
aam
cmpsb
push
and
push
in
jne
test
dec
rcrl
sub
clc
out
int3
lret
ja
jecxz
dec
pop
es
repz
add
xor
popf
mov
mov
add
daa
jle
popf
fistl
in
int
push
movsb
stos
loopne
rclb
cmp
dec
mov
mov
mov
push
int
mov
arpl
and
xchg
pop
sbb
test
aas
xchg
jb
mov
cld
insl
inc
mov
mov
pop
bound
xor
jmp
pop
and
rcrb
pop
adc
cli
mov
cmpsl
popf
sbb
pop
pushf
cmpsb
imul
push
jge
movb
test
adc
cmp
test
sub
lret
jno
mov
inc
not
cmp
add
scas
enter
jl
pop
dec
aad
out
cmp
loop
and
inc
into
aas
outsl
mov
sub
lods
mov
ds
inc
adc
stos
imul
rclb
clc
mov
js
sbb
sbbb
cmp
jg
and
push
scas
mov
push
push
loope
sarb
add
popf
fs
popa
xor
pop
xor
dec
adc
sub
jnp
xor
push
adc
pushf
xor
fldl
and
push
mov
scas
ljmp
lcall
insl
push
cmp
fwait
mov
icebp
cmp
inc
sub
jg
bound
xor
dec
and
push
cmp
or
fisttps
add
lcall
lahf
mov
das
fwait
das
xor
dec
xchg
lock
inc
rcr
inc
mov
mov
mov
orb
xchg
out
mov
jp
pop
mov
mov
xor
add
daa
das
fwait
adc
xchg
sub
sbb
into
cwtl
and
dec
xchg
ja
xchg
inc
loopne
testb
stc
jb
mov
dec
shrl
inc
mov
les
and
enter
repnz
pop
test
fidivl
xchg
pop
test
arpl
test
shl
jnp
add
mov
and
pusha
loopne
nop
std
push
stos
test
ret
inc
cmp
lods
or
xor
cmc
pushf
mov
xor
mov
aaa
mov
and
in
pusha
lods
lea
stos
testb
imul
pop
cmp
cmpsb
jg
icebp
pop
push
xor
xchg
mov
lds
imul
and
lea
andb
fcomps
in
repz
jnp
ja
stc
pop
ret
sub
andb
push
test
and
subl
imul
mov
lods
scas
div
mov
je
dec
ja
inc
stos
xor
push
push
pop
out
lret
iret
cmpb
loope
test
mov
mov
pop
mov
movb
push
sub
jp
fstl
inc
and
leave
jno
adc
test
rcl
ret
outsb
aad
inc
aas
cmovs
cmp
xchg
jle
sbb
xor
cmpsl
mov
and
push
sub
jp
sar
xchg
push
shlb
shrl
mov
shll
xchg
and
sbb
ljmp
movsb
in
lahf
pusha
mov
adc
loope
pop
bound
sbb
aam
xchg
adc
mov
inc
pop
cld
int3
je
rorl
dec
subl
fimull
aad
or
in
push
and
mov
stc
test
pop
mov
nop
mov
aaa
je
jns
or
gs
out
push
rcl
gs
clc
or
pusha
std
dec
mov
mov
mov
imulb
cmp
test
cmc
jle
movsl
jp
sti
adcl
pop
mov
inc
inc
aam
repnz
aad
dec
push
sbb
jecxz
mov
ds
shll
add
scas
or
and
add
jg
jge
out
or
jg
mov
bound
mov
mov
popf
dec
push
pop
iret
test
add
hlt
mov
jb
je
push
ficoms
insl
add
xchg
outsb
rol
push
call
movsb
and
flds
movsl
dec
test
out
mov
not
aam
sbb
testl
mov
int3
inc
sbb
mov
icebp
xchg
rorl
pop
cmp
dec
les
mov
inc
xor
movsl
xlat
les
aas
inc
stos
imul
cli
stc
jbe
dec
call
aad
xchg
test
jo
xchg
mov
pop
shlb
jbe
lret
xchg
fimuls
dec
div
push
lret
test
sub
scas
imul
mov
ret
aas
sbb
push
enter
xor
cmp
sub
imul
movsl
inc
push
rcll
sbb
cmpsb
xchg
andl
mov
dec
test
icebp
lods
arpl
fdivr
xchg
js
sbb
or
push
cli
insb
and
sub
pushf
testb
aaa
stos
adc
roll
lds
aaa
cmp
std
mov
cmc
adc
das
dec
enter
fldl
cmp
sbb
subb
sbb
shr
test
dec
or
or
jne
add
stos
cmp
mull
fistl
mov
es
lea
nop
sub
out
std
loop
mov
cwtl
outsl
fmul
cmc
adc
add
sbb
push
push
shlb
fiadds
call
mov
pop
popa
dec
cwtl
dec
iret
aas
mov
sbb
cltd
loope
mov
sbb
sbb
mov
arpl
iret
and
shll
scas
subb
push
jp
cmp
mov
int
xchg
mov
int
xor
xlat
div
pop
stos
mov
fnstcw
cmp
xor
sahf
cvtdq2ps
mov
pop
js
rcl
stos
push
loope
cmp
sub
mov
sbb
stos
mov
pop
imul
jo
orl
es
sub
xchg
leave
mov
cmc
mov
nop
scas
icebp
aad
xchg
ja
xor
sbb
mov
xchg
mov
nop
inc
cmpsb
int3
pushf
test
data16
xor
sbb
xor
sub
mov
gs
clc
cld
add
shl
ret
insb
pusha
das
clc
xchg
cwtl
sbb
stos
aaa
mov
mov
adc
mov
imull
das
pop
push
xchg
sub
cmp
fxch
and
push
xlat
dec
cmp
cmpsb
cmp
repz
add
mov
push
adc
cltd
sti
int
jmp
add
adcb
mov
mov
sbb
pop
pop
ja
int3
cwtl
pop
ljmp
jno
push
enter
sbb
pushf
jmp
cs
aaa
pop
aad
cmp
and
mov
and
incb
imul
stos
jne
fwait
popf
lret
sti
test
fwait
andl
jno
sub
xchg
push
leave
fstps
iret
lahf
xchg
and
addr16
pusha
pop
mov
mov
div
daa
lcall
adc
and
mov
jno
fstpl
mov
add
repnz
in
aam
push
fcoms
xchg
xor
push
mov
test
int
lods
mov
lock
cmpsb
call
sub
or
shrb
ljmp
js
aad
neg
sbb
sub
mov
bound
fsts
addr16
enter
pop
mov
mov
and
mov
xlat
leave
jle
push
in
out
imul
ret
cmp
inc
xor
stc
xor
vpclmulqdq
pop
push
xorl
add
aaa
pushf
push
loop
adc
in
out
outsb
mov
ja
fs
sub
stc
dec
into
ret
pusha
cmp
cmp
dec
add
adc
or
or
mov
pop
nop
test
imul
pop
jle
imul
jns
or
jl
mov
mov
arpl
mov
gs
mov
mov
sub
inc
xlat
jne
sbb
insb
inc
adc
cli
jmp
rcll
fists
xor
xchg
shrl
shlb
shlb
ss
cmp
mov
aam
add
imul
and
pop
js
imul
mov
add
xor
xchg
mov
iret
xor
lods
pop
out
jl
xchg
arpl
xlat
popa
call
mov
jmp
aam
push
jb
ss
repz
jb
adc
add
dec
cmp
add
loope
mov
fiaddl
xlat
push
jp
lods
add
mov
push
jne,pn
mov
leave
xor
data16
sub
mov
cli
push
cmc
inc
stc
lcall
repnz
dec
fistl
pop
adc
int3
les
or
and
mov
sbb
lret
and
stos
mov
or
mov
rorb
imul
jmp
xor
pop
dec
add
ds
mov
cwtl
dec
sub
stos
into
add
imul
pop
inc
cmp
and
cs
sti
movsl
or
loope
popf
jmp
movsb
mov
pop
inc
enter
jecxz
lock
adc
push
cmp
das
push
pop
push
popf
mov
sub
fld
hlt
loop
mov
cli
scas
xchg
adc
es
in
ja
imul
repnz
dec
push
add
dec
xor
inc
mov
mov
pop
ja
xchg
addl
push
mov
dec
pop
data16
xor
xchg
leave
inc
xlat
push
sbb
outsl
add
inc
sub
repz
pop
add
or
jae
or
sub
mov
addr16
pop
xor
mov
cmpsb
xchg
jne
mov
cwtl
addr16
jbe
stc
lret
mov
movsl
repz
pop
outsl
in
test
sbb
cwtl
add
fdivl
push
out
in
and
pop
sub
sarb
xor
pop
jmp
mov
ljmp
jns
xchg
popa
xor
movsl
outsl
adc
cmc
insb
mov
js
mov
mov
and
push
sub
inc
dec
ss
xchg
cmp
hlt
repz
jns
repz
in
inc
or
data16
and
sub
sub
or
rcrl
in
lea
and
mov
xchg
inc
mov
add
in
mov
stc
mov
pop
iret
addr16
dec
mov
mov
push
out
inc
call
movsl
mov
es
dec
je
pushf
lock
sbb
jl
sbb
add
jnp
pop
push
pop
stos
jge
mov
in
out
in
dec
and
adc
mov
pop
dec
cwtl
cmpsl
mov
into
mov
mov
sub
and
cmp
lds
fwait
jle
outsl
add
popf
adc
ss
or
pushl
adc
xor
test
dec
xchg
push
fidivrs
addr16
negl
jo
add
dec
cmp
jno
iret
jo
and
and
xchg
int3
inc
and
mov
bswap
jmp
add
lods
fsubrs
stc
add
add
pop
or
popf
les
mov
mov
push
xchg
pop
push
xor
daa
mov
push
lods
mov
or
dec
addr16
push
pop
jnp
test
pop
scas
jo
jmp
cs
roll
jg
mov
rolb
ja
jp
mov
mov
enter
pop
sub
lea
pop
push
cltd
push
lock
sbb
sub
push
out
out
enter
lcall
sub
pop
flds
mov
add
cmp
xor
xchg
outsb
add
imul
push
mov
ret
xchg
pop
sbb
shrl
and
out
jmp
fs
testl
stc
adc
test
icebp
adc
out
dec
fidivl
push
and
push
mov
cmp
dec
mov
mov
mov
adc
mov
sbb
xchg
push
jmp
fbstp
call
int
mov
mov
int
mov
int
outsb
sub
shlb
outsl
loopne
sub
mov
rcr
adc
pop
push
push
out
pop
fmul
es
add
loopne
jb
and
bound
loop
ret
jb
mov
test
inc
add
aam
js
adc
push
fldenv
pop
inc
aas
mov
mov
push
mov
mov
out
cs
sbb
add
mov
xchg
mov
inc
sub
jg
pop
adc
add
cmpsb
inc
sub
and
cmpsl
sbbl
lcall
xor
sbb
jl
and
out
movsb
ret
in
jns
fs
inc
pop
ss
push
pop
sbb
popf
xor
sbb
pop
lcall
lods
cmpsl
stos
int
negl
sqrtps
mov
jge
jno
es
sti
aaa
inc
out
clc
shll
icebp
cmp
inc
aaa
xchg
ret
mov
dec
ja
cmp
lret
push
mov
gs
xchg
mov
adc
mov
lret
fists
dec
mov
jge
mov
pop
mov
xor
push
push
adc
in
js
xchg
pop
jle
shll
dec
xchg
das
sbb
imul
fadds
inc
stos
sbbl
push
mov
jo
mov
mov
mov
add
inc
dec
fmuls
fiaddl
add
mov
push
sbbl
add
dec
xchg
aad
mov
nop
shll
lret
inc
fcoml
sub
pop
jp
or
pop
add
call
xor
sbb
jmp
cmp
pop
insl
adc
mov
jmp
inc
test
paddsb
sub
sbb
ds
repz
pop
push
cmove
fwait
aaa
lret
mov
pop
xor
jmp
sahf
into
les
fidivs
les
je
mov
jae
shl
xor
test
jg
xor
loope
mov
add
push
je
cmc
xor
xorl
popa
xchg
sub
loope
arpl
xchg
cwtl
fdivl
mov
in
imul
mov
lret
jns
loope
add
fcoms
cmpsb
dec
push
sbb
les
imul
negb
das
shlb
cmp
mov
lcall
push
nop
incb
cmpsb
mov
jnp
xlat
dec
jmp
fisubrl
repnz
mov
pop
test
xchg
mov
mov
xchg
jecxz,pn
std
push
or
rolb
int
cmp
leave
roll
mov
int
sub
mov
insl
icebp
lret
js
rolb
rorl
dec
ljmp
fbld
jbe
push
cmc
bound
jne
sbb
out
fildll
lahf
sahf
hlt
inc
fwait
dec
hlt
jecxz
orl
stc
dec
int3
adc
dec
or
lret
or
xchg
lahf
sbb
iret
in
pop
lods
ja
xor
fsubs
xchg
jns
js
cmp
jbe
gs
inc
jns
sti
mov
xlat
xchg
add
mov
mov
ja
pop
or
jp
push
rorl
daa
mov
mov
mov
mov
mov
xchg
inc
movb
and
cmpb
jl
sti
data16
mov
mov
std
mov
int
in
and
movb
cmp
jno
xchg
imul
sub
icebp
and
dec
add
push
fimuls
mov
ror
aam
fists
ja
push
insb
add
mov
das
xchg
stc
mov
test
arpl
sbb
xor
or
sbb
ret
jns
cmp
pusha
xchg
scas
xchg
movsb
addr16
int3
pop
push
rcr
xchg
js
xchg
imul
xchg
and
and
es
int
add
pop
lods
ret
mov
je
dec
mov
push
push
lret
inc
ds
xchg
xor
sbb
dec
dec
jmp
stos
ja
aad
aad
cmp
mov
sbb
je
mov
xlat
lcall
in
out
negb
rolb
mov
pop
out
ja,pn
pusha
inc
iret
out
mov
dec
gs
xchg
dec
adcb
fwait
aad
into
lcall
repz
lea
mov
jbe
idivb
sti
mov
cmpsl
pop
aaa
xor
fstpl
inc
sub
cmp
stc
mov
add
fstl
cmp
cmpl
and
sbb
lret
xchg
mov
cs
movsb
idivb
stos
push
dec
in
scas
inc
mov
xchg
gs
loope
pushf
aam
stos
test
and
pop
mov
xchg
or
ljmp
xchg
pop
and
and
ljmp
cmp
xchg
jae
leave
jo
addr16
and
call
cmp
and
or
scas
nop
int3
jae
movsl
cmp
daa
sbb
sbb
icebp
pushf
addb
fimuls
sbb
loope
out
lret
repz
xor
or
imul
sub
js
jecxz
jnp
pop
into
cli
leave
shl
cmp
xchg
jno
dec
jbe
inc
lods
lods
xor
shll
loop
jl
xchg
sbb
jmp
xchg
repz
sbb
push
and
vrcpps
aaa
fmulp
pusha
test
test
jno
jecxz
rcrb
repz
sar
testb
ljmp
in
clc
adc
cmp
fcmovnu
scas
fs
mov
outsb
sub
shl
mov
inc
and
push
data16
mov
in
add
rcl
sbb
cmp
mov
movsb
in
in
pop
sbb
out
or
fisttpl
dec
pop
std
and
in
in
inc
lock
push
sbb
mov
pop
xchg
into
je
push
inc
mov
int3
xchg
mov
jg
fstpl
mov
pop
and
pusha
sbb
mov
test
or
sbb
loope
xor
daa
or
in
adc
mov
js
out
sub
push
xor
xchg
inc
add
daa
jmp
aad
add
sub
rorl
and
mov
jl
pop
sahf
inc
rcll
setnp
push
outsb
jp
std
fcomps
cmp
mov
jae
mov
xchg
loopne
sub
pop
push
loop
cmpsl
mov
inc
pop
int3
sahf
adc
sub
xchg
push
add
movsb
scas
shl
lds
loop
sbb
sbb
cmp
ds
je
int
pusha
push
jae
sub
icebp
push
cs
je
dec
mov
mov
mov
cmp
out
xor
aaa
in
shl
push
push
or
mov
push
movsb
call
dec
popf
cmp
jb
push
popf
cmp
nop
aaa
in
add
sahf
out
mov
or
fidivrs
adc
aad
jecxz
push
xor
ss
jne
arpl
orb
mov
dec
fnstcw
js
std
add
fincstp
cmpl
lods
insb
insb
xchg
std
jg
iret
loopne
add
xchg
mov
add
xlat
sub
repz
sub
stos
in
rclb
scas
push
jno
stc
insb
xor
test
inc
dec
mov
cmpsl
xlat
mov
fs
mov
aad
mov
and
lock
jl
fs
std
dec
push
xchg
sbbb
popf
loope
inc
js
sub
movsl
add
repnz
or
mov
out
rcl
mov
testl
jbe
rcrl
xchg
pop
hlt
pop
cs
fnstcw
add
mov
add
sub
ljmp
mov
or
mov
pushf
iret
inc
imul
cmpb
or
movsl
hlt
pop
or
push
mov
mulb
cli
test
in
xchg
xchg
or
fistl
inc
sub
sub
clc
xchg
sub
lods
repnz
mov
jno
sub
out
xchg
push
cwtl
push
int
mov
jmp
jl
xchg
fsubrs
inc
pop
mov
mull
xchg
or
add
jp
push
mov
es
loop
je
cmp
mov
jo
pop
repnz
cmp
dec
mov
in
mov
jnp
ljmp
mov
jl
jbe
daa
pop
pop
push
mov
leave
dec
and
push
out
lcall
loopne
mov
dec
jl
inc
ja
sub
test
rcrb
xchg
sub
lahf
in
rorb
xchg
es
inc
mov
mov
out
jp
jo
adc
inc
push
cld
rcrb
cmp
aam
lods
rcll
or
loope
decl
fisubs
sahf
sub
inc
inc
cmp
addb
lock
pop
sarb
cli
mov
push
push
mov
movsl
pop
pop
outsb
movntps
movsl
ss
or
xchg
sub
xchg
mov
jecxz
movsl
ja
dec
push
lea
sbb
add
adc
pop
arpl
xor
push
xchg
push
or
sbb
scas
in
movsl
sub
rol
lea
xor
outsb
aad
and
lds
sahf
gs
cmp
push
ffree
jo
jmp
call
push
pop
out
adc
orb
stos
add
pop
mov
rcr
inc
int
pop
movl
xor
arpl
fwait
shll
xchg
fildll
testb
xlat
cmp
nop
punpckhdq
outsb
cmp
icebp
out
mov
pop
push
aas
or
push
ljmp
or
loope
in
xor
in
jl
icebp
push
xor
hlt
jns
aas
jb
xchg
ss
test
push
cmp
inc
lods
in
sub
sbb
pslld
fcomps
fidivl
adc
scas
and
pop
jp
pop
push
in
xchg
test
pop
dec
sbb
cli
push
pop
sti
rclb
in
enter
lret
cmpsb
pushf
mov
cmp
xor
dec
add
sbb
inc
dec
cmpsb
sbb
adcl
push
mov
xor
ds
jg
jne
and
add
mul
mov
xor
lret
clc
jb
stos
rclb
dec
sbb
push
fsub
pop
incb
cli
xchg
pop
mov
in
int3
sub
inc
adc
sti
inc
or
push
sti
in
xchg
stos
cmp
loop
mov
jmp
mov
mov
loopne
pop
inc
or
fbstp
inc
pop
rorl
ds
xor
sbb
jmp
stc
nop
lods
sbbl
jns
jl
push
jge
jbe
fldt
jmp
iret
mov
push
stos
mov
cmpsb
jmp
jnp
and
call
sbb
lahf
imul
pop
sbb
aad
gs
mov
dec
dec
mov
xor
sbb
fcomi
stc
icebp
test
cld
cwtl
fidivrl
loope
mov
adc
lods
lea
push
lcall
cld
add
or
movb
sbb
insl
test
mov
int3
mov
jae
xchg
mov
xor
pop
jno
les
pop
mov
pusha
dec
repz
rclb
pop
insb
movsl
xor
and
mov
les
lods
adc
sub
xor
ljmp
jnp
and
lods
xor
hlt
stos
push
or
dec
imul
js
dec
fcomp
iret
sbb
mov
jae
cs
aaa
jle
mov
in
cmp
xorb
ss
cmpsl
inc
jb
test
mov
cmp
shll
push
mov
sbb
jns
mov
les
int
pushl
or
imul
std
sbb
cld
xor
call
pop
or
or
scas
test
cmp
adc
int
cmpl
mov
movsl
scas
add
in
ret
pop
into
and
cmp
cmp
out
imul
mov
xchg
lds
jge
sub
pop
sarb
out
mov
jbe
jno
cli
adc
push
xchg
pushl
cwtl
lcall
insl
mov
lcall
std
dec
dec
es
je
sbb
stos
sbb
mov
or
add
inc
inc
test
jg
mov
mov
inc
and
sub
or
mov
test
scas
daa
pop
adc
adc
pop
loop
add
es
mov
push
jecxz
xchg
aaa
xchg
push
xor
mov
faddl
sub
cmp
imul
movsl
dec
sbb
arpl
xor
inc
jge
shlb
sub
adc
mov
imul
daa
je
loop
pop
jge
adc
test
push
dec
sub
sbb
imull
xchg
jg
fwait
inc
icebp
mov
iret
fistl
mov
sahf
addr16
clc
sub
and
movsl
xor
in
or
sbb
pusha
dec
push
movsb
rolb
mov
push
data16
or
test
or
dec
or
pop
lds
cmc
cmpsb
pop
mov
sbb
mov
outsb
mov
pop
or
pop
adcb
lock
xchg
sahf
pop
mov
jmp
and
xor
adc
sar
push
pop
add
adc
sbb
pop
xor
xchg
mov
aaa
test
ljmp
and
popf
jbe
mov
sub
mov
int3
mov
pop
test
adc
jnp
or
ljmp
sbb
or
ds
data16
enter
pop
scas
push
add
sub
nop
xchg
sub
cmp
mov
mov
inc
sbb
cmpsl
popf
and
divl
pop
frstor
pop
stos
jmp
insb
iret
jbe
sub
pop
push
mov
add
mov
xchg
adc
cwtl
xchg
cmp
mov
pop
fsubs
hlt
inc
das
je,pn
jo
test
mov
test
fldenv
mov
test
mul
dec
cmp
push
insb
stos
cmp
and
xchg
pop
or
or
sti
or
mov
or
jle
mov
test
push
aam
leave
and
jo
mov
pushf
jne
xchg
inc
push
loope
push
cmpsl
rolb
imul
jno
test
fidivl
jo
xchg
ret
cmp
and
xchg
or
shll
enter
dec
arpl
mov
fsts
pop
rcrl
jge
std
into
fs
jb
adc
es
outsb
mov
int3
andb
out
rclb
dec
inc
sbb
lret
xor
shlb
lahf
in
into
cmpsl
xchg
enter
out
scas
mov
mov
xchg
sub
mov
sbb
enter
inc
iret
jno
pop
les
nop
imul
add
inc
popa
ret
xorb
fnstenv
arpl
add
mov
test
or
je
xlat
es
sbb
orl
adc
and
into
sub
ret
aaa
pop
sbb
push
cmpsl
or
cmp
mov
push
xchg
cli
arpl
pop
ret
xchg
psadbw
mov
les
cmc
pop
jge
jp
mov
jg
fisttps
cmp
adc
mov
aaa
xor
nop
mov
or
pop
test
xchg
xor
lret
das
push
push
pop
inc
push
cld
movsb
mov
shll
sub
inc
test
lahf
ss
idivb
fisttpll
std
add
adc
and
jl
cmp
mov
outsl
out
adc
out
mov
adc
sbb
cld
je
jecxz
je
jb
pop
inc
dec
pushf
sub
ljmp
cmp
mov
pop
xor
dec
and
iret
sbb
lahf
xchg
cmpl
and
mov
jnp
xchg
mov
adcl
int
addl
mov
leave
jmp
sbb
aam
or
imul
int
mov
xor
test
adc
mov
fwait
sub
cmpsl
cmp
pusha
movsl
loop
fldcw
loopne
clc
mov
rorb
dec
jno
es
xor
loop
cltd
in
test
shlb
fbld
dec
mov
mov
test
fdivl
out
inc
xchg
mov
testl
test
add
sub
jne
aam
mov
ds
jne
cmp
add
daa
xlat
stos
xchg
push
dec
dec
jle
mov
push
inc
fdiv
call
mov
dec
std
pop
std
pop
sbb
stc
sahf
mov
int3
sub
cmc
inc
shld
jmp
shrb
jecxz
add
call
xchg
iret
inc
das
imul
add
inc
ljmp
sbb
or
xchg
adc
cmp
outsl
jne
rcrb
dec
jge
pop
sahf
mov
xchg
jne
adc
add
nop
ret
pusha
arpl
les
sub
and
jnp
div
dec
aad
fldenv
sbb
push
int3
mov
add
dec
roll
mov
arpl
insl
insl
or
iret
adc
sbbb
pop
test
inc
lahf
std
xchg
jne
out
decb
mov
fldcw
cmpsb
sub
enter
xchg
inc
incl
repnz
add
mov
jecxz
push
xchg
js
and
lock
stos
dec
push
ret
and
test
je
mov
pop
add
shlb
std
xor
addl
push
and
dec
test
adc
das
jnp
aad
mov
xor
aaa
mov
jle
xchg
scas
dec
loop
stos
test
repnz
pusha
or
xor
jb
popa
sbb
and
dec
mov
sub
sbb
and
lds
sub
mov
adc
cmp
es
cmp
aaa
pop
lods
mov
outsl
ret
ds
cmc
aam
xor
and
mov
pop
mov
and
mov
mov
ror
xchg
and
ljmp
pop
dec
sarb
xor
xchg
iret
xor
adc
sbb
mov
insl
xor
add
negb
pop
sarb
sbb
cli
test
stos
mov
add
js
out
or
fs
xor
repnz
add
lret
inc
div
and
notl
sbb
test
pop
jle
inc
inc
leave
mov
and
ret
add
out
pop
aad
lret
bound
dec
mov
je
mov
pop
mov
lret
stc
rorl
std
inc
inc
mov
xchg
ss
add
test
je
movsb
addr16
pop
push
out
and
push
cmp
int
jo
xlat
and
sbb
into
sbb
cmp
or
xchg
std
cmc
xor
rclb
cld
xchg
das
cmc
enter
fisubs
cmpsb
imul
mov
add
cmp
cmp
sub
pop
insb
xchg
jecxz
or
jns
aaa
ficoms
fnstcw
mov
mov
mov
inc
jecxz
fistps
sub
sub
inc
pop
lds
pop
test
leave
cmp
std
arpl
lret
push
or
dec
neg
push
inc
pop
mov
jecxz
jno
lret
call
sahf
inc
jae
rcll
inc
sub
pop
cmpsb
dec
push
and
sar
fs
jle
push
xchg
outsb
fcomp
lods
mov
testb
mov
nop
daa
aad
dec
push
mov
mov
xlat
or
mov
outsl
adc
push
jns
cmp
xchg
xchg
lds
or
pop
int
movsb
and
dec
xlat
gs
mov
sub
mov
add
cmp
push
popa
push
test
mov
repnz
push
xchg
dec
jb
xor
sub
pop
xchg
nop
mov
out
mov
fwait
xor
data16
push
daa
in
js
sbb
add
int3
jb
clc
pop
jmp
in
inc
stos
push
sub
xchg
mov
test
adc
jb
ds
xchg
jmp
sub
aad
sub
add
mov
jne
pop
test
mul
jg
inc
into
popf
xchg
sbb
jno
xchg
jg
and
outsl
and
cmp
push
add
lret
fwait
add
cmp
bound
mov
xchg
sub
call
jp
ret
mov
fsubrs
out
lcall
fsubrs
js
fcmove
test
add
aam
arpl
cmc
in
sbb
sbb
sbb
jne
cmp
in
jmp
cmp
push
adc
or
xchg
mov
add
ja
xor
lods
cmp
pop
hlt
negl
pop
cmp
ret
sub
iret
rcl
inc
scas
sub
out
xor
sbb
inc
pop
push
movsl
pop
jo
cmp
ret
pop
imul
repnz
xchg
iret
ds
scas
push
push
lock
aad
mov
lods
shl
mov
imul
push
hlt
and
and
iret
cwtl
mov
dec
mov
cmp
fdivl
push
xor
or
xchg
mov
scas
cmp
mov
sti
fsubrp
xlat
xchg
into
jmp
or
daa
xchg
adc
mov
lds
bound
dec
jno
inc
mov
push
mov
lea
outsb
mov
inc
imul
mov
loopne
sahf
daa
hlt
ss
rcl
insl
adc
mov
xor
sarl
loope
dec
push
add
cld
pop
test
stc
nop
xchg
int3
dec
lret
mov
fisubrs
fildll
mov
cs
jmp
dec
in
sbb
xchg
push
pop
sti
or
fidivrs
add
sbb
or
push
push
fucomip
scas
jp
inc
inc
xchg
ror
adc
and
bound
rorl
xchg
aad
call
aas
mov
add
or
or
sti
decb
pop
out
icebp
cmp
mov
stos
fmulp
stos
es
out
aad
sti
icebp
push
ret
jnp
sub
sar
dec
dec
pop
rcrb
push
jnp
xchg
nop
rorl
or
jnp
cmp
xchg
arpl
jg
add
lea
xchg
rolb
add
or
push
pop
or
arpl
or
lea
loopne
enter
sbb
xchg
jge
lds
sub
sbb
cmp
rclb
mov
cli
ljmp
adc
fwait
negb
aas
dec
pop
mov
pop
inc
sub
inc
mov
push
push
add
popa
shll
pusha
sub
iret
scas
xlat
leave
xchg
jns
and
aas
icebp
fisttps
aad
fs
inc
lods
dec
dec
sub
adc
lahf
in
dec
stos
and
outsl
nop
into
mov
repz
int3
js
ss
add
fsts
in
jmp
add
mov
inc
adc
lods
cmc
ffree
insb
pop
inc
sub
dec
push
stos
loopne
lret
pushf
fwait
jge
pop
push
cmpl
movsb
lods
xchg
and
mov
lds
sub
xchg
orl
inc
dec
add
jmp
ja
test
aaa
std
push
xor
movsb
enter
sbb
js
orb
mov
sub
movsl
fs
test
push
scas
mov
jns
stos
pop
es
push
sub
out
cmpb
fbstp
xchg
lods
or
xchg
xorb
or
outsl
cli
pop
mov
scas
xchg
sub
fsubrs
sub
imul
push
ss
jno
sar
lods
inc
xchg
clc
js
jbe
clc
xchg
shrl
mov
stos
xchg
in
imulb
fnstcw
xor
xchg
cwtl
adc
sbb
test
frstpm(287
mov
in
lods
movsl
idivb
call
dec
lods
mov
jne
int
jno
pusha
or
sahf
jle
pop
xchg
jo
imul
or
imul
adc
inc
dec
xor
in
xor
cmp
push
nop
and
fisubrs
leave
lods
into
cmp
inc
pop
pusha
mov
add
shll
test
enter
jge
nop
leave
jg
dec
sbb
push
js
leave
pop
xor
dec
push
xchg
out
imul
jbe
mov
enter
xor
cmp
dec
sub
mov
dec
leave
sbb
clc
dec
or
push
out
out
rcrl
in
xor
jmp
fidivs
cmpsl
pop
mov
test
pusha
daa
jae
mov
adc
loopne
sub
mov
or
mov
in
arpl
test
lret
pop
out
mov
mov
cmp
cmp
dec
das
jge
cwtl
jnp
mov
pop
jl
lahf
out
test
jmp
fs
and
adc
mov
nop
mov
jg
repnz
dec
mov
mov
pop
shlb
shl
inc
push
jg
frstor
adc
push
dec
mov
aaa
pusha
js
inc
popa
fdiv
cmp
in
add
jb
jmp
iret
jbe
add
imul
ret
out
cmpsl
and
fwait
imul
stos
mov
rcr
enter
nop
mov
jne
mov
lret
arpl
lea
je
sub
sbb
flds
mov
int3
test
xchg
movsb
test
shrb
je
subb
inc
or
aam
stos
pop
icebp
xor
dec
fildl
clc
push
xchg
lea
xchg
add
jne
cmp
inc
pop
jne
loopne
mov
dec
adc
shlb
mull
cmpl
clc
lahf
push
mov
movsb
mov
fs
mov
and
in
sbb
enter
int3
ss
and
js
pop
lea
icebp
pop
and
outsb
mov
subb
test
insb
sbb
adc
jno
call
dec
das
popa
xor
out
daa
or
fs
decb
mov
loope
and
ficompl
xor
pushf
push
scas
sahf
cld
out
pop
add
adc
push
cld
dec
insl
sbb
inc
push
jbe
xchg
orb
or
add
sub
push
jbe
bswap
jnp
sbb
add
jnp
enter
xor
test
fcompl
xor
out
test
add
xchg
addr16
pop
lea
jbe
in
andnps
leave
adc
xchg
push
mov
sti
xchg
clc
les
sbb
dec
enter
enter
stos
pop
dec
pop
pop
cmp
xor
imul
hlt
dec
popf
xor
in
pop
mov
or
insb
into
mov
dec
pusha
bound
cmp
jl
sub
inc
xchg
xchg
shrl
xor
xchg
imul
dec
mov
push
int3
clc
inc
test
in
jno
or
and
and
adc
pop
fwait
insl
out
fnop
mov
push
rorl
sub
push
or
inc
cltd
mov
cs
dec
xchg
cwtl
lock
aam
stos
shlb
push
cmc
sub
mov
inc
repz
lcall
mov
mov
fwait
push
or
or
pushf
enter
xchg
or
ljmp
scas
loop
jns
or
loope
mov
dec
mov
adc
inc
add
mov
dec
xor
dec
repnz
adc
adc
cmp
jno
insl
xchg
mov
fbstp
fs
pop
imull
ss
daa
inc
pop
insl
push
aam
cli
in
adc
out
es
ds
call
jmp
push
mov
cli
out
inc
inc
xchg
xchg
adc
push
call
mov
cmpsb
push
idivb
push
or
loope
jmp
fistpl
push
dec
popf
scas
push
and
mov
or
jns
xchg
mov
js
aam
xchg
aad
shl
cmpsb
ret
in
stc
icebp
ljmp
bound
or
xchg
lods
xor
pop
les
lcall
mov
test
mov
xchg
push
mov
xor
xchg
mov
cmp
addr16
rol
pop
cs
sub
sti
sub
jge
mov
adc
leave
sub
or
cmp
adc
sub
out
int3
test
dec
fiaddl
push
mov
jmp
mov
leave
jne
dec
aad
mov
outsb
push
pop
in
mov
aad
stos
js
xor
iret
adc
adc
in
push
mov
hlt
or
mov
sbb
mov
daa
sbb
inc
aaa
dec
int3
cmp
lea
in
shll
jge
mov
adc
rorb
je
dec
jmp
xchg
jnp
lock
inc
sub
sub
jae
push
icebp
out
jo
mov
fnstenv
mov
in
jns
cli
movntps
test
pop
bound
pop
dec
daa
xchg
pop
movsb
push
fs
sbb
iret
adc
sbb
fadd
jo
dec
xor
imul
pusha
ficoml
scas
adc
inc
fnstsw
popa
stos
push
adc
mov
jmp
jbe
addb
dec
inc
sbb
mov
jae
iret
ficoml
inc
out
dec
sub
clc
pop
je
dec
pop
inc
cmp
cmpsb
add
inc
ret
cmp
fdivrl
and
sti
xchg
lock
jmp
push
xor
in
pop
loop
je
pop
cmp
cmpsl
cmp
test
out
std
jmp
inc
fs
pop
test
and
or
rcll
aaa
lahf
inc
adc
xor
repz
sarl
hlt
add
rolb
aam
inc
outsb
movsb
sbb
out
fwait
test
adc
test
data16
dec
out
fidivl
and
cs
xchg
inc
push
stos
shrb
jge
jno
pop
pop
mov
in
cs
mov
or
jne
mov
jo
je
pop
fcomip
imul
jne
inc
mov
loope
dec
push
stc
popa
mov
adc
jmp
outsl
push
test
jge
inc
sbb
mov
pop
xor
gs
sbb
into
xchg
movl
in
addr16
insl
aas
cmp
stos
and
inc
adc
mov
pop
fmul
cmc
outsl
xchg
jbe
popf
inc
jl
and
pop
pop
or
push
nop
push
inc
add
inc
or
jbe
stc
fidivs
outsl
cmp
jg
push
sub
xchg
adc
jmp
js
jo
andb
adc
lods
call
addr16
sub
aaa
or
hlt
out
sub
lret
jl
pop
jge
mov
mov
insb
sub
mov
mov
mov
sar
xchg
mov
xchg
mov
mov
cmc
stos
sbb
shll
jecxz
sub
inc
iret
out
push
nop
mov
xor
shr
into
dec
aas
cmpb
and
bound
sub
and
jo
inc
mov
push
pop
add
stc
mov
and
jg
subl
jae
clc
lret
cmp
push
lret
gs
jae
test
mov
inc
imulb
cmp
cmc
cwtl
pop
and
xor
pusha
xchg
sbb
inc
repnz
aas
sub
out
pop
cmc
in
jge
stos
lds
pop
sub
adc
add
mov
clc
pop
enter
inc
loope
xor
pop
stos
sbb
cmpsl
in
mov
cmp
cmp
dec
ret
push
call
xchg
pop
filds
pop
shll
sar
call
push
dec
mov
std
push
loope
fildll
xchg
aam
leave
jb
push
inc
adc
out
inc
addr16
out
xor
jp
pop
pop
ret
pop
popf
je
int3
out
shll
daa
cs
sub
lods
mov
loopne
rol
mov
mov
jb
dec
jno,pt
pushf
jno
dec
mov
jo
sub
jnp
cmp
dec
int3
sbb
mov
mov
xor
out
rep
ljmp
jp
jno
test
ljmp
mov
mov
out
das
shl
pop
pop
xor
adc
jecxz
add
mov
sbb
rcl
pop
loop
orl
movsb
cmpsb
add
or
adc
lea
and
test
mov
aam
push
jl
lahf
test
adc
push
out
fstps
std
mov
push
movsl
leave
jb
or
leave
icebp
ds
aas
and
outsl
addr16
jl
movsl
outsl
cltd
xor
lret
jb
into
mov
adc
or
sahf
inc
xor
dec
loop
xor
scas
pop
pushf
sbbl
push
out
inc
jne
adc
sbb
lret
inc
enter
rcll
mov
push
jecxz
mov
inc
dec
aaa
repz
fwait
sbb
in
add
push
add
out
dec
and
adc
jecxz
les
pop
aam
daa
in
or
mov
loope
ret
push
fdiv
xchg
incl
cmpl
stos
mov
cwtl
mov
enter
es
jp
test
out
jecxz
stos
jno
pushf
push
xor
cmp
out
out
nop
pop
int
out
push
fnstsw
dec
xor
xor
movsb
bound
xor
lods
xchg
addr16
mov
dec
cmpsl
pop
ds
dec
inc
mov
sahf
pop
fisttpl
aam
lret
or
lret
sbb
mov
jp
jmp
iret
in
cmpsb
or
add
ljmp
cmpsb
and
gs
dec
shll
lods
pop
push
ljmp
gs
mov
sbb
cwtl
loopne
mov
ja
lahf
jg
pushf
sbb
orl
outsl
cmp
sub
popa
jns
fs
pop
pop
jl
mov
or
imul
mov
lock
sub
push
mov
shlb
lret
and
movsl
and
jg
jns
push
leave
pop
sti
les
mov
or
ret
je
test
cmpsb
mov
pop
ret
fisubrs
push
sbb
pusha
add
aas
lret
scas
cmc
xor
stos
and
sahf
loope
clc
jns
stos
mov
lret
ss
inc
mov
sub
in
dec
jae
pop
sbb
sub
stc
mov
mov
jno
orb
enter
fldt
mov
sub
popa
arpl
add
mov
jle
and
push
sbb
jae
jge
jo
in
outsl
rorb
cmp
notl
xor
ffree
dec
mov
mov
xchg
xchg
sti
popa
xchg
mov
push
and
les
movl
mov
pusha
mov
jno
and
xchg
dec
cmpsl
push
jae
pop
mov
lcall
mov
add
xchg
lret
lods
cmp
dec
in
add
lret
test
xchg
aaa
xor
test
push
sbb
dec
fcompl
popa
jo
ret
push
je,pt
lcall
pop
mulps
pop
mov
pop
lahf
lods
hlt
negb
aam
addr16
cwtl
jge
xchg
mov
push
ret
mov
popf
jo
mov
mov
inc
arpl
repnz
loop
cwtl
lret
sbb
add
pop
adcb
loop
cmp
sbb
inc
jmp
cmpsl
popa
sub
adc
test
adc
sbb
jmp
test
mov
adc
push
ds
mov
addr16
push
xor
clc
push
int
adc
es
ds
addl
pushf
push
sbb
cmp
or
insl
out
pop
pop
cmp
and
inc
or
mov
fwait
mov
cmp
pop
test
icebp
or
dec
pop
lds
mov
lds
int3
jae
mov
movsb
mov
adc
xchg
sub
cmp
jl
xor
leave
jo
cmpsl
in
inc
fimull
push
push
sysret
add
pop
push
shrb
insl
adc
add
popf
test
xchg
nop
in
sbb
ret
pushl
add
mov
dec
out
ss
sbb
pop
xorl
pop
or
mov
inc
mov
mov
push
jno
loopne
or
jae
jno
in
push
sbb
push
mov
cmp
call
adc
movsl
pop
pop
pop
xor
xchg
xlat
lods
inc
call
insb
sub
inc
sub
insb
xlat
sbb
sub
dec
and
dec
fnstcw
sbb
push
and
jmp
and
ja
or
sbb
sahf
mov
pop
xchg
loop
icebp
das
sub
pop
stos
stos
fcompl
xor
mov
and
xchg
mov
inc
mov
fdiv
mov
or
sub
imull
out
insb
test
dec
ret
pop
imul
testb
push
jmp
testl
adc
mov
inc
sub
dec
inc
out
xchg
xchg
push
mov
push
ja
int3
mov
fdivs
jg
lret
test
or
pop
mov
sub
sub
fisttpll
lcall
test
push
bound
cmp
dec
xor
push
push
jb
mov
and
mov
cwtl
mov
adc
sub
popa
xor
jnp
nop
adc
xchg
pop
adc
dec
mov
inc
jmp
into
xchg
and
ds
inc
cmp
adc
push
mov
jge
cwtl
xor
mov
sub
cld
test
jo
lret
cmc
aad
mov
ret
ret
les
sub
and
out
add
orl
inc
fidivrs
in
pop
and
test
sbbb
iret
sahf
fnstenv
flds
insb
push
mov
pop
stc
push
mov
mov
pop
subl
dec
jmp
jmp
sub
daa
pop
xor
fsubl
sub
push
or
add
sbb
pop
mov
arpl
add
sub
movsl
cmp
icebp
out
cwtl
mov
mov
pusha
xchg
cmp
jmp
xchg
or
in
rorb
fistl
jb
xlat
push
shrl
mov
mov
lods
scas
sbb
pop
and
cmp
adc
push
mov
cwtl
adc
lock
daa
into
std
je
sti
insb
test
push
mov
into
xchg
dec
push
out
jle
push
ficoml
mov
xchg
mov
fadd
mov
add
push
cwtl
rol
lret
or
jp
out
fistl
adc
andb
sub
xchg
xchg
idiv
dec
js
sbb
adc
push
or
sahf
std
inc
jo
sbb
push
sub
dec
inc
xchg
xchg
aas
lret
stos
repnz
jecxz
jle
or
sarb
pop
mov
dec
sub
sahf
mov
push
mov
jl
mov
mov
push
and
repnz
aas
mov
and
test
rorb
sub
lcall
arpl
dec
cli
notb
addl
test
jb
jbe
or
popa
fcom
add
test
testl
pop
add
push
popa
addr16
jns
cmp
adc
xchg
adcb
push
aas
ljmp
mov
mov
stc
dec
xchg
fsin
lds
cmpsb
loope
iret
lock
sub
ret
lods
mov
push
jb
or
rclb
enter
push
xchg
out
push
movsl
stos
jno
jecxz
cmp
xchg
fisubl
adc
sbb
aaa
lret
xor
mov
push
out
mov
arpl
insl
or
mov
out
mov
push
mov
inc
sbb
fwait
cmc
lret
cltd
mov
imul
cld
leave
outsb
cltd
lods
sbb
sbb
repz
ds
jp
pop
push
cmp
stos
pop
lret
and
xchg
dec
subl
fwait
mov
push
mov
dec
xor
cmp
pop
fisttpll
jne
dec
mov
add
push
jmp
mov
fiadds
and
ret
and
mov
xchg
jo
mov
mov
and
int
stos
std
jne
push
pop
xlat
std
ljmp
lahf
fiaddl
jmp
stc
mov
add
sub
scas
sahf
dec
xor
out
insl
push
popf
mov
cmp
inc
inc
scas
adc
movq
pop
cmpsb
dec
ficompl
cwtl
lock
mov
push
xchg
in
out
sahf
out
or
and
in
fcmovb
or
lods
xchg
leave
scas
in
jne
cmpb
pop
cmp
or
dec
mov
pop
cmpsl
lret
sub
push
lea
xchg
lods
push
or
mov
in
ror
or
cmp
aaa
mov
push
cwtl
mov
xor
daa
cmpsb
pop
jp
or
ds
xchg
pop
jne
pop
dec
mov
add
mov
push
mov
pop
mov
iret
push
cld
jb
sub
shrb
decb
adc
mov
repnz
mov
sbb
push
dec
pushf
or
mov
aas
sub
outsb
fdivr
push
jge
mov
sarb
xchg
orl
adc
shrb
scas
enter
test
stos
clc
sbb
aad
mov
nop
and
call
mov
or
cld
and
inc
repnz
bound
pop
fildl
sub
shll
inc
dec
jo
pushf
pusha
scas
mov
mov
movsl
push
out
out
dec
and
mov
sbb
xchg
dec
shll
lods
fsubrs
xchg
movsb
ja
fdiv
scas
inc
or
sub
hlt
outsb
dec
repz
mov
push
push
mov
push
lods
decl
aas
repnz
cld
cmpsl
push
fwait
xor
loopne
sti
push
lods
lods
lods
jmp
arpl
lock
xor
movsb
out
xor
mov
fisubrs
mov
leave
outsb
mov
sti
popa
mov
enter
ret
sub
popa
inc
fistpl
loope
clc
out
in
sbb
adc
inc
bound
xchg
cmp
push
int
movsl
fisubrs
cmc
enter
dec
fidivl
dec
or
push
pop
dec
sarl
and
sbb
lea
pop
leave
aaa
jg
cmpsl
jp
int
loopne
imul
cmp
repz
out
test
adc
lods
adc
mov
adc
pop
testl
sahf
mov
sbb
add
das
rol
fwait
sub
pop
jmp
pop
inc
cmpsb
pop
xchg
aaa
lock
and
enter
les
xchg
xor
ret
shlb
sub
push
stos
out
imul
or
xor
pop
push
adc
sbb
in
call
sahf
mov
sar
sub
lcall
push
inc
or
dec
ficoml
insl
push
mov
pop
xchg
arpl
mov
aas
fsubs
int
fidivs
mov
in
xor
stc
mov
imul
lcall
cmpsl
iret
xchg
mov
mov
ss
pop
das
mov
inc
add
add
leave
jle
ret
jae
adc
addb
pop
and
in
dec
fisubs
pop
adc
cmp
out
push
or
fs
pop
mov
js
dec
inc
aad
xor
adcb
scas
cmpsb
pop
and
dec
scas
push
test
inc
into
iret
scas
stos
cmpl
mov
jecxz,pt
push
lock
movsb
or
and
push
es
xchg
ror
mov
pop
ljmp
mov
pop
add
pop
sbb
loopne
shll
cmp
mov
test
shlb
aaa
out
out
in
cmpsl
rorb
xchg
insb
js
fistl
jns
inc
jno
add
imul
shll
add
sub
lods
in
in
xchg
jbe
test
cld
jb
pop
cli
stc
sub
jae
hlt
cmc
fcoml
mov
ret
pop
cmpsl
mov
dec
mov
lahf
adc
int
cli
xor
cmpsl
arpl
pop
xor
in
in
mov
push
sbb
out
pop
shlb
xor
jo
add
js
add
mov
dec
fwait
mov
arpl
fld
lods
loop
ss
xlat
mov
xlat
mov
fwait
mov
jae
jp
or
mov
mov
ret
lea
dec
mov
std
fstps
push
adc
fwait
mov
sbb
sub
add
lret
dec
cmp
push
or
add
data16
scas
cli
inc
lret
sti
and
fnstcw
jbe
ret
sbb
pop
test
jg
mov
inc
aas
dec
sbb
and
dec
cmpsb
mov
scas
sbb
ljmp
popa
lret
xchg
push
dec
loop
xchg
jnp
js
in
stc
xchg
movsb
in
mul
jbe
push
sub
xchg
ror
push
ljmp
jmp
imul
push
cmp
push
cmp
jnp
nop
mov
sub
mov
aas
aam
lea
or
fistps
jmp
xchg
insb
in
mov
sub
mov
repnz
outsb
adc
jmp
cmp
mov
out
pop
lcall
jbe
repnz
cld
cmp
pcmpgtb
scas
pusha
in
mov
enter
sti
dec
xchg
sbb
lcall
gs
mov
fnstsw
mov
jnp
pop
push
add
setp
cmp
rcrl
leave
int3
mov
xchg
cmpsl
jb
lahf
xor
mov
in
mov
add
xor
les
fwait
outsl
push
pop
mov
fdivrl
fmul
imul
sbb
sti
push
loopne
adc
mov
or
fidivs
pusha
pushf
in
js
rol
shr
mov
fs
lods
add
sub
push
jb
pop
das
in
icebp
jecxz
add
icebp
sub
and
mov
jp
add
outsb
pop
adc
dec
adc
jmp
inc
andb
xor
xor
or
and
ss
mov
jp
adc
inc
adc
ljmp
inc
out
mov
sbb
lods
fimuls
stc
cmc
ret
pop
aam
aam
mov
lods
mov
cmp
lea
bound
xor
stos
aam
ret
sbb
scas
ljmp
mov
adc
out
and
cmpl
pop
hlt
sbbb
test
pusha
jle
or
mov
stos
mov
das
or
jmp
out
mov
mov
dec
jns
sbb
std
rorl
flds
mov
or
xchg
lds
mov
test
int
mov
inc
in
sbb
out
shlb
not
testb
inc
pop
or
out
inc
mov
mov
or
out
jns
cld
pop
jo
int3
fcoms
adc
adc
stc
mov
lock
aaa
dec
leave
gs
outsl
push
xor
cmp
mov
call
cli
out
and
mov
addr16
hlt
imull
sub
cmpsb
or
cmpsb
pop
push
ja
sti
outsb
fstpt
push
pop
pusha
aad
pop
repnz
mov
sbb
cmp
mov
jp
aaa
cmp
jb
rolb
mov
pop
rcrl
or
add
cmp
sub
dec
xchg
add
movsl
daa
cli
adc
xchg
push
loope
lcall
mov
pop
pop
jne
sub
sahf
xchg
in
pop
out
xor
les
sub
sti
add
cmp
mov
je
iret
rclb
push
sti
lock
movsl
loopne
inc
mov
adcl
insl
ficompl
inc
in
imulb
jbe
rorl
cld
repz
inc
jb
mov
jno
push
in
jo
leave
push
jmp
push
xchg
in
jb
add
or
aaa
push
pop
in
cwtl
popf
imul
pop
nop
xorl
jmp
xor
mov
fcomp
cmp
adcl
add
jl
lea
push
mov
insb
dec
in
icebp
dec
sub
push
jge
sub
fwait
mov
inc
icebp
sahf
rcrl
sbb
jge
mov
pop
shll
and
fwait
scas
inc
mov
xchg
cwtl
mov
rcr
push
dec
pop
xorl
mov
jnp
gs
gs
movsb
xor
cmp
fdivrp
xchg
cmp
cli
movsb
pop
es
jae
cltd
push
lods
cmp
inc
xor
mov
fwait
adc
in
sbb
fsts
pop
adc
nop
pop
aaa
aas
xlat
test
js
sbb
cmp
cmp
sbb
and
ror
orl
push
cmp
imul
sti
xor
dec
ret
and
inc
inc
lcall
jp
mov
aad
lods
sbb
loope
dec
fistps
clc
inc
cmpb
mov
and
les
arpl
cltd
movsb
sub
cmc
mov
push
lods
adc
int3
add
cmp
in
es
sub
push
rclb
mull
sub
mov
push
sub
test
xchg
lcall
js
cwtl
fidivl
cmpsb
insb
xchg
fildl
push
mov
insl
nop
lret
push
inc
mov
ret
jb
push
repz
jmp
mov
lret
jge
mov
push
pop
add
pusha
test
add
or
pop
push
xchg
cmp
xchg
lds
fists
data16
xchg
jge
sub
sub
stc
mov
mov
jae
xchg
dec
and
jns
adc
sar
sbb
push
xlat
push
fwait
dec
lea
add
mov
cmpsl
mov
push
sbb
cld
sub
pushf
mov
jle
out
je
les
add
mov
pushf
push
push
rolb
mov
pop
clc
stos
loopne
push
addr16
pushf
movsb
mov
js
pop
dec
add
test
sub
es
inc
and
rcrl
cmpsb
je
xor
insb
adc
jns
cmpsb
sub
xchg
sbb
inc
repz
inc
adcb
cmp
das
sub
push
push
cwtl
xchg
adc
mov
sbbb
add
lcall
pop
sbb
das
fcmove
pop
push
les
push
stos
add
add
cmpsb
rclb
pusha
or
in
or
std
cwtl
xchg
mov
lcall
cmc
mov
fwait
sub
shr
push
and
mov
lea
or
or
and
mov
popa
lea
lahf
push
sti
in
mov
loopne
cli
sub
adcl
adc
gs
push
gs
push
je
pop
cmp
jns
arpl
aas
shlb
push
or
lahf
js
add
test
clc
mov
repz
lods
xor
cmp
cwtl
push
dec
cmp
dec
dec
ret
js
sbb
sbb
or
or
sub
scas
fcomps
call
dec
insb
int3
cmp
lds
mov
push
movsb
lret
pop
sbb
jnp
add
arpl
daa
sbb
test
imul
mov
adc
inc
cltd
clc
lcall
imul
adc
xchg
cmpb
adc
std
and
rcl
stos
push
bound
add
pop
fisubl
xchg
fwait
mov
pop
aam
popa
rcrb
cmp
lods
mov
pop
int
fmuls
mov
jmp
inc
inc
and
into
in
dec
jecxz
call
xchg
inc
insl
xor
add
fldenv
mov
imul
add
sti
cmp
xor
xchg
inc
or
pusha
and
iret
mov
in
test
mov
dec
lahf
cmp
sub
lock
jno
insb
ret
inc
adc
inc
fimuls
movsb
add
data16
cli
outsl
add
ja
or
or
sbb
push
fidivrs
dec
call
xor
mov
xchg
lahf
dec
lods
fildl
push
pop
and
jge
mov
fidivrl
popa
pushl
mov
les
data16
aam
xchg
fdivrl
movsb
cmpsl
inc
cmp
or
mov
lahf
pop
arpl
sub
mov
mov
push
dec
jnp
xchg
pop
xchg
mov
loope
icebp
iret
arpl
jb
or
cmp
dec
pop
mov
xchg
jl
mov
mov
sub
mov
cld
and
fdivrs
cmp
push
sub
and
xor
pop
xor
fsubl
xchg
jns
push
push
add
mov
insl
sti
rorl
lock
mov
loop
xor
pop
fcomps
fistpll
stos
pop
jnp
dec
scas
repz
cmpsl
add
sbb
xor
xor
jecxz
fidivrl
in
jns
or
push
mov
sbb
push
stc
rolb
pusha
icebp
in
cld
or
insb
aam
sub
push
sub
ret
scas
inc
jle
push
es
rolb
es
xchg
lods
in
xor
sbb
push
and
shll
cld
pop
mov
pop
push
sub
dec
xchg
scas
sub
fstps
pop
or
push
sub
mov
aas
mov
xchg
inc
test
ret
aaa
pop
cmp
in
push
inc
movaps
adc
mov
ljmp
jge
dec
insb
pop
jae
sub
cwtl
sahf
inc
jmp
push
or
inc
push
inc
int3
adc
and
data16
pop
movsl
iret
lock
rolb
ss
mov
add
mov
popa
repz
and
pop
cld
in
sbb
int
mov
push
pop
mov
aaa
lock
cmc
mov
sahf
icebp
outsb
pusha
shll
lock
imul
cmp
adc
and
mov
ljmp
jae
sti
outsb
mov
jp
sbb
movsb
outsb
sub
lret
sti
or
sbb
js
pop
shlb
add
enter
jge
and
sub
ficomps
dec
xor
int
and
pop
dec
stos
shll
iret
add
loope
xchg
sbb
inc
xlat
push
inc
pop
sub
outsw
and
out
test
dec
std
adc
inc
mov
xor
xor
lock
pop
cmpsl
and
mov
gs
push
xor
test
xor
lods
mov
pop
push
cltd
xor
xor
sub
test
outsl
fwait
aas
or
call
shl
or
enter
and
scas
shl
push
js
add
mov
sub
or
or
insl
xchg
into
outsb
lock
insl
add
sahf
les
xchg
es
mov
sub
sub
in
cwtl
cmp
outsb
sti
jae
inc
das
shlb
mov
nop
xlat
outsb
inc
xchg
sbb
and
clc
fimull
dec
xor
negb
xchg
fisubrs
push
mov
add
pushf
scas
jnp
js
aam
xchg
dec
sub
sub
sar
gs
fwait
mov
mov
or
gs
call
arpl
loop
out
push
jge
mov
push
imul
dec
mov
rsqrtps
cmp
jno
xchg
mov
cltd
out
jae
fcoms
addr16
or
push
inc
int
dec
mov
push
mov
mov
jb
cmovae
adc
sarl
addr16
mov
mov
xchg
push
jge
mov
enter
mov
mov
sub
fists
push
add
add
and
and
cmp
ljmp
repz
les
add
xchg
push
leave
dec
outsl
ret
mov
push
in
pusha
push
mov
mov
mov
push
pop
sti
sbb
inc
rcrl
or
cmp
imul
dec
ss
decb
imul
push
call
out
cli
lods
sti
das
sbb
enter
push
sbb
mov
pop
enter
mov
stos
sub
cmpsl
andl
cmpsl
ror
shr
pop
xlat
lcall
dec
aaa
ret
aas
int3
inc
mov
divl
xchg
and
jae
push
ja
bound
add
ljmp
push
xchg
xchg
ficomps
shl
nop
sub
aam
fdivr
mov
push
xchg
enter
outsl
sbb
popa
sbb
pop
fdiv
sti
pop
clc
sub
sahf
loope
imul
push
cmc
xor
ds
enter
loope
daa
sub
pop
mov
mov
pop
jg
int3
in
pushf
cmp
mov
jl
inc
jne
xchg
fsubrl
bound
loope
test
sbb
popa
xchg
out
adc
popf
xchg
jno
pop
mov
mov
sub
jmp
mov
lds
sub
stos
outsl
lcall
adc
push
xor
arpl
imul
mov
imul
inc
or
test
cmpsl
push
test
cmc
dec
push
mov
cmp
les
test
pop
fnsave
xchg
es
xchg
xchg
rcll
mov
cmp
jbe
cmp
std
sub
pop
pop
arpl
inc
adc
mov
jb
pushf
sub
lcall
pop
jno
or
xchg
mov
mov
dec
sbb
int3
cs
ds
mov
xchg
loop
pushw
call
hlt
inc
cltd
inc
push
loopne
out
orl
test
dec
test
mov
ds
push
or
ret
andl
pop
aad
or
push
pop
xchg
or
aaa
pushf
filds
push
mov
pop
test
inc
mov
xor
jmp
adc
fs
gs
out
or
fcmovne
push
adcl
jo
imul
or
stos
mov
dec
sti
test
cmpsl
mov
into
sbb
out
xor
psadbw
mov
lret
pop
cmp
inc
mov
int
stc
lcall
push
rcl
push
adc
or
ss
jg
push
or
cld
stos
in
pop
xchg
xchg
imul
scas
gs
out
dec
cmp
out
std
and
jo
rclb
cmp
int3
inc
inc
dec
aas
push
aaa
fsts
jo
push
shrl
sub
cmp
pusha
sub
and
add
cmc
cs
mov
sbb
pop
jle
jmp
addr16
std
cmp
addr16
sbb
push
dec
ret
dec
mov
sub
gs
pop
sub
lret
push
push
lds
mov
push
jg
ret
mov
in
dec
pop
pop
adc
rcrl
mov
xchg
icebp
cli
outsl
pusha
out
push
scas
sahf
outsb
cld
icebp
loopne
in
fwait
cmpsl
pop
dec
or
roll
mov
lods
inc
outsb
aad
or
orb
lret
jg
xlat
cmpsb
and
sarl
ds
and
fdivl
or
stc
shrl
and
inc
leave
adc
rorb
and
fs
jl
sub
mov
hlt
and
push
loope
scas
bound
out
jae,pt
fildll
int
pop
mov
mov
push
test
pop
mov
add
cmp
mov
jg
outsb
sbb
popa
daa
iret
jmp
xchg
add
lods
sbbb
arpl
pop
sub
rorl
inc
xchg
into
push
outsl
test
xchg
shl
mov
hlt
ret
xchg
dec
xchg
pop
pop
fs
stos
cmpsl
andl
dec
out
testl
adc
movsl
sub
dec
xchg
push
xchg
push
xchg
rorb
pop
fimull
jb
pop
sub
xchg
mov
fistps
mov
add
jnp
mov
cmp
pop
push
push
mov
dec
mov
push
movsb
xor
add
jbe
adc
ja
add
inc
push
or
mov
pop
in
stos
mov
add
mov
inc
adc
mov
gs
xchg
jne
add
adc
pusha
sub
out
ret
mov
popa
mov
mov
imul
and
mov
pop
pop
and
aam
push
jo
inc
mov
inc
push
sub
cmp
fs
lret
daa
shlb
sub
shr
dec
push
arpl
lahf
into
mov
push
fidivs
les
movsb
xor
and
out
in
pop
jnp
fdiv
clc
or
mov
jp
loop
cli
push
jmp
loop
xchg
repnz
sbb
in
fnstsw
ficomps
push
xchg
pop
adc
fidivs
sub
pop
in
ja
movsl
or
jp
sahf
in
in
pop
jmp
mov
rcll
inc
fbld
lock
pushf
fdivrs
xchg
xlat
adc
jb
sub
jnp
mov
mov
jmp
mov
pop
ss
jecxz
popf
pop
je
add
push
movsb
mov
jle
pop
test
and
imul
push
jns
shr
rcll
xchg
xchg
jl
sahf
sahf
bound
mov
pushl
in
xlat
dec
lock
mov
hlt
imul
dec
dec
mov
push
cld
mov
mov
sti
call
jo
mov
sahf
ffreep
cmp
ja
loopne
cld
pushf
test
add
es
mov
stos
arpl
in
out
mov
fsubs
pop
test
addb
stos
mov
inc
pop
outsl
cmpsl
xor
or
scas
xor
mov
sbb
mov
icebp
insl
xor
imul
cwtl
pop
in
push
and
xchg
push
mov
push
mov
or
push
jge
xchg
ss
repnz
add
adc
mov
js
test
adc
add
mov
mov
dec
addr16
inc
sbb
xor
iret
xor
lods
testl
lcall
jns
mov
pop
and
and
adc
and
jne
sub
inc
pop
stos
and
pusha
mov
sbb
or
imul
insb
stc
pop
movsb
ja
dec
aad
dec
aas
std
xor
sahf
vpmaddwd
jmp
in
sti
loope
std
test
gs
loop
adc
inc
aam
out
test
jge
lds
dec
fwait
test
inc
jmpw
or
std
shlb
stos
test
stc
lods
loope
in
push
out
fcoms
xchg
in
xor
mov
ret
cs
cmpsb
mov
js
jno
xor
enter
mov
push
je
mov
insb
icebp
ss
mov
and
or
insl
stc
rol
push
arpl
or
mov
push
cs
mov
lds
xchg
aas
sahf
adc
push
mov
cmp
and
jl
xchg
and
jge
mov
sbb
adc
dec
in
fwait
decl
cmpsb
fmull
sub
cmp
jecxz
sbb
sub
cltd
cmp
js
pop
xlat
mov
mov
and
mov
outsb
mov
pop
not
dec
std
pop
sbb
imulb
cli
lods
inc
enter
sub
ret
outsb
pop
cmp
mov
xor
mov
xchg
inc
adc
lret
push
and
loop
out
xchg
rol
in
dec
push
add
dec
add
fidivs
mov
and
mov
xchg
pop
jp
stc
mov
jle
sbb
fcos
jne
dec
mov
dec
adc
ja
mov
sub
mov
mov
pop
dec
cmp
mov
in
mov
mov
push
or
sub
pop
cmpsb
in
push
sub
add
cmpsl
or
push
pop
and
cmp
fdivrl
das
loop
loop
mov
jmp
jns
fnsave
mov
mov
jae
ficoms
fnstcw
or
mov
jo
aam
mov
out
add
cli
jno
jmp
int3
aad
push
mov
push
sub
cld
mov
stc
rorl
adc
sub
dec
xchg
jmp
add
bound
cmp
out
mov
scas
arpl
scas
pop
or
dec
xorb
mov
or
mov
cwtl
sub
enter
out
sbb
das
fs
lods
jo
mov
ds
cmp
ret
cmpsb
xchg
data16
fs
or
push
ret
pop
push
dec
add
adc
cmp
cmpl
fs
mov
test
or
dec
xchg
in
adcl
xor
add
jnp
jge
push
mov
addr16
dec
jg
and
xchg
shlb
add
push
das
sub
mov
lods
inc
and
jae
mov
adc
sahf
cmpsl
orl
jbe
pusha
enter
dec
inc
or
imul
clc
pop
out
inc
pop
jbe
mov
leave
xlat
mov
xchg
or
js
lcall
mov
mov
cld
icebp
mov
rcl
test
mov
cld
aam
pop
mov
jmp
sbb
dec
stos
ret
cmp
add
pusha
xorl
out
addl
push
cmpsl
mov
loop
mov
xor
test
test
idivb
mov
imul
and
xor
cmp
mov
jp
addr16
xchg
xchg
nopl
adc
jo
sti
fdivs
das
jne
cmp
mov
and
out
dec
aad
mov
mov
adc
ljmp
outsl
mov
cmp
sahf
testb
loopne
das
push
insl
sbb
les
add
pop
sbb
mov
mov
adc
scas
setae
jb
loopne
inc
sbb
clc
add
pop
inc
sbb
jns
jo
cmp
jmp
mov
jp
adc
sbb
adc
mov
icebp
in
jmp
insl
push
cmp
fdivrp
adc
mov
lcall
mov
push
cmp
adc
adc
or
cltd
xor
fstps
jne
test
pop
cld
inc
sbb
fidivl
loop
ss
loope
aaa
mov
add
jle
arpl
pop
cli
pop
xchg
xchg
aam
popf
subl
jne
push
mov
inc
je
push
pop
aaa
popa
outsl
push
and
xorl
data16
test
xor
iret
pusha
push
pop
push
cmp
fildl
in
lds
out
stos
mov
inc
push
test
or
jo
mov
mov
enter
jge
lret
clc
push
sub
push
xchg
sahf
test
xchg
lds
pop
dec
shlb
inc
mov
jb
dec
movsl
in
sub
push
pop
cmp
mov
cmp
mov
icebp
cmpsl
add
lds
pop
mov
ss
or
ja
jl
jae
inc
imul
and
popf
push
dec
rolb
shlb
dec
inc
and
cmc
out
mov
data16
das
cmp
mov
lahf
adc
pop
pop
arpl
push
or
stos
mov
xchg
lret
mov
subb
push
cmp
push
fs
push
cwtl
fxam
adc
mov
pop
dec
mov
insb
sbb
fildl
clc
jbe
adc
movsl
and
dec
nop
push
ds
shl
sbb
mov
fdivrs
lahf
xor
and
cmpsb
jge
mov
xorl
jns
aad
into
jecxz
mov
sbb
xchg
divb
push
and
test
inc
and
or
lods
cmp
rcrb
pop
sbb
sbb
xor
es
fldt
insb
stc
mov
lret
cmpl
pop
jno
das
mov
cmp
outsb
sbb
jmp
arpl
movsl
das
dec
lcall
cld
mov
adc
xchg
pop
inc
push
jl
push
pop
pusha
xlat
jg
mov
and
pop
mov
mov
leave
cmp
in
mov
stc
mov
sub
leave
push
mov
cmp
xchg
mov
cmpb
mov
sbb
xchg
repnz
into
rcl
pop
add
inc
xchg
or
lret
movsb
test
popa
push
stos
fdivl
ficoml
or
mov
xlat
in
test
fisubrs
xchg
pop
ret
mov
std
lret
sti
insl
outsb
xor
mov
add
dec
jb
leave
jmp
bound
fstp
xor
cwtl
in
je
and
bound
dec
add
jae
gs
or
adc
or
hlt
outsl
mov
sbb
cmpsl
mov
mov
jno
inc
mov
and
push
push
xor
aam
ja,pt
mov
mov
mov
adcl
and
xorb
data16
ljmp
mov
cmpsb
inc
xor
pop
sub
mov
das
out
xchg
ret
insb
adc
cmp
inc
scas
dec
xor
popa
pusha
arpl
xlat
and
popf
cli
iret
pusha
data16
loope
imul
nop
xor
call
gs
inc
jmp
fwait
in
jae
ss
fiadds
dec
sahf
test
insl
test
push
push
and
sbbl
sbb
mov
adc
xorl
push
test
dec
pop
mov
xchg
add
and
lock
xor
jg
data16
push
mov
jmp
jb
std
xor
pusha
movsb
adc
hlt
dec
jnp
jp
pop
mov
daa
mov
loope
fnsetpm(287
imul
nop
lods
push
stos
fmuls
aam
xchg
enter
inc
aam
and
mov
mov
fstl
cs
inc
add
mov
lea
dec
repnz
pop
cmpl
loope
mov
gs
xor
repz
xchg
loope
int3
cmpl
rcrb
in
shl
loope
mov
mov
sti
icebp
dec
or
jecxz
dec
mov
out
inc
data16
test
push
call
ljmp
out
arpl
inc
xchg
sar
push
iret
in
shrb
stos
pop
sbb
inc
shl
jnp
cwtl
mov
xchg
clc
mov
inc
lret
out
pushl
imul
sub
mulb
shrl
add
data16
sbb
rcrb
cmc
cmp
fnsave
test
mov
and
int3
fstl
mov
inc
xlat
lahf
addb
pusha
iret
and
mov
mov
data16
or
jge
adc
jmp
mov
mov
cltd
add
sbb
and
inc
icebp
and
hlt
mov
xor
push
popa
testb
sahf
sbb
jnp
dec
push
xor
fdiv
fldenv
sahf
add
orb
outsb
pop
neg
or
jp
cmpsl
data16
and
mov
in
in
or
rclb
in
pop
inc
cmp
aad
insl
push
mov
movsl
jl
cmp
int3
push
xlat
out
push
jp
push
ret
movsb
fldenv
adc
adc
xor
xchg
sub
js
fdivl
fsubr
and
int3
mov
sbb
cmp
mov
jle
dec
sarl
mov
dec
fstpt
scas
cmp
mov
scas
adc
cltd
stos
cmpsb
push
sbb
cmp
sbb
not
push
cmp
movsb
mov
data16
cmp
lret
push
ret
repnz
fsubrs
mov
and
jg
movsb
adc
xacquire
mov
xor
or
sbb
shl
cs
inc
and
inc
ret
in
jg
fbld
orb
push
sbb
sbb
filds
sub
outsb
sub
js
mov
adc
jae
xor
mov
cmc
mov
rcrl
aaa
sub
stos
stos
fdivrs
out
inc
ficoms
sahf
mov
movsb
cmp
lret
xchg
jne
cmpsb
pop
movsl
das
int
outsb
rorb
addb
sub
push
sbb
leave
pop
or
mov
push
mov
mov
sub
xor
mov
addb
ficoms
lret
fldcw
push
test
popa
loopne
inc
inc
mov
pop
add
addr16
out
cmpsb
ss
rolb
inc
xor
loopne
loop
pop
sub
adc
fstl
lods
int
pop
test
sbb
xchg
in
loopne
jge
stos
insl
addr16
or
mov
movl
out
mov
repz
adc
or
xlat
mov
mov
out
add
xorb
dec
dec
ds
pop
sub
das
sub
rorb
jo
mov
jmp
jae
sahf
cmp
into
mov
shlb
adc
stc
int3
mov
inc
cli
inc
cwtl
and
shrl
sbb
push
jp
repnz
movl
lock
test
mov
xor
mov
fisttpll
inc
enter
mov
testl
loopne
adc
xchg
sub
pop
cmp
mov
and
push
mov
dec
scas
ss
jno
push
xor
mov
jle
sbb
push
mov
pop
bound
stos
cmp
pusha
pop
push
mov
out
aam
cmpsb
ret
push
or
xchg
rcr
sub
add
fisubs
das
les
cld
test
fs
lea
xor
pop
mov
mov
test
enter
outsb
sbb
stc
in
in
out
cld
arpl
filds
rorl
pop
jbe
sbb
mov
xor
out
les
shrb
shrb
cmpsb
test
jne
jmp
sub
dec
mov
push
popf
xchg
jecxz
scas
sbb
in
inc
inc
fnstsw
sbb
test
sub
push
add
add
mov
std
aam
popf
jno
icebp
int3
movsl
sbb
enter
lods
leave
imul
and
icebp
adc
mov
cmpsl
shlb
push
repz
das
ja
cmc
out
jg
mov
iret
xchg
push
lds
pop
int
jnp
sbb
test
push
outsl
shll
jbe
add
lret
adc
cmpsl
dec
xor
das
jnp
add
pop
dec
filds
fistpll
and
mov
or
cmp
lea
sbb
push
scas
sbb
pushf
cli
mov
lds
out
fdiv
stos
mov
arpl
mov
addr16
pop
xchg
in
sub
lods
lcall
xchg
pop
pop
imul
mov
imul
pop
mov
jmp
jge
mov
adc
fidivs
and
arpl
adc
fwait
ret
fwait
sbb
dec
jne
add
into
out
xchg
mov
dec
faddl
mov
imul
or
das
dec
xchg
cmpb
cmp
insb
fdivrs
pusha
jbe
push
leave
inc
movsb
cmp
jle
push
icebp
cld
xchg
dec
cmp
and
fdivrs
inc
mov
out
outsl
bnd
xchg
xchg
ja
add
lods
push
push
cmpsl
xchg
lahf
xchg
imul
add
ret
imul
fmul
mov
outsl
insb
lock
shl
ss
lock
push
mov
sahf
jo
dec
into
xchg
push
test
and
pop
push
pop
or
push
push
inc
les
test
dec
jle
dec
je
ficoms
fistps
inc
push
in
sub
into
push
mov
mov
insb
push
insl
mov
fs
insl
orb
jne
sub
push
push
dec
and
jecxz
arpl
icebp
out
xchg
sbb
pop
xchg
xor
mov
pop
inc
rcl
sbb
sbb
or
mov
sbb
lahf
sarb
or
mov
int3
xlat
icebp
jns
inc
push
je
xor
nop
lret
cmc
idiv
and
adc
mov
mov
dec
mov
stos
jne
es
aam
inc
inc
into
dec
push
sahf
lahf
lret
js
adc
jbe
mov
cmp
xor
clc
insl
mov
insl
pop
jnp
push
subl
shll
orl
mov
mov
inc
sub
aad
cmpsb
cli
pop
into
sub
int
sbbb
cmp
fnstenv
cwtl
inc
jbe
jnp
insb
xor
divl
out
mov
js
push
pop
push
xchg
jmp
adc
gs
cltd
sub
repz
je
sub
add
push
rolb
daa
pop
push
jecxz
mov
cli
sti
adc
pop
mov
adc
and
dec
sub
cmp
jae
inc
sub
lea
dec
mov
and
push
das
jne
push
aas
scas
lea
mov
icebp
mov
cmp
sbb
pushf
test
rcll
imul
add
cmp
ds
jo
fcmovnbe
xchg
into
andl
and
or
sub
mov
cmp
iret
pop
sub
xor
mov
shll
dec
jecxz
das
and
mov
js
cmp
in
inc
jl
cmp
pop
ja
push
in
pushf
cwtl
push
fdivrl
in
or
test
jecxz
cmp
xchg
jb
add
mov
inc
sbb
sub
sub
mov
push
arpl
test
pop
jl
aam
dec
dec
pop
mov
xchg
mov
or
not
mov
sub
add
daa
cmp
and
out
push
cmp
in
push
imul
out
mov
lods
fsubrl
jge
call
or
jo
rorb
push
xchg
push
ds
or
andb
mov
les
mov
in
adc
fstps
stos
dec
dec
adc
rcrl
pop
pusha
jmp
inc
push
sub
popa
mov
stos
loopne
movsb
xor
add
xor
mov
movsb
xchg
mov
mov
fimull
cmp
mov
or
push
insb
jae
ret
popf
lods
ficoml
arpl
xchg
cmp
jl
mov
mov
repnz
rorb
pop
out
dec
mov
int
mov
jnp
xchg
push
mov
push
xchg
mov
loope
mov
dec
repnz
rolb
xor
mov
jnp
testb
and
std
mov
xchg
pop
decl
icebp
mov
or
add
in
and
push
xlat
mov
scas
sub
add
lods
add
rcrb
in
addr16
sahf
sub
shrb
jo
xor
cmp
and
jmp
sbb
les
fldt
xor
je
in
out
mov
adc
dec
int
nop
add
and
dec
mov
scas
daa
fdivrs
in
cmpsb
sarl
push
movl
mov
or
sub
movsl
jnp
outsl
call
into
or
xchg
dec
out
or
call
sti
mov
cmp
loope
xchg
test
imul
push
std
bound
or
mov
in
inc
mov
mov
int
sbb
jno
sbb
iret
imul
pop
int
aad
push
xchg
dec
push
adc
int3
xor
pop
lock
int3
mov
jnp
daa
mov
cmp
cmp
in
jbe
testb
pop
hlt
mov
sbbb
imul
addl
fstl
lret
adc
jne
push
xlat
int
inc
jb
pop
icebp
inc
push
ja
shll
xchg
dec
movsl
lds
jecxz
bound
fsubl
and
data16
or
adc
mov
ja
fcompl
inc
hlt
cmp
int
fsubrs
aas
adc
int3
stos
aad
cs
rcll
faddp
jb
sti
jmp
xor
push
bound
mov
or
cwtl
shll
dec
sbb
jmp
push
push
mov
ret
xor
fcompl
xchg
add
icebp
mov
vmwrite
cltd
adcl
int3
and
sub
negl
insb
mov
mov
jnp
mov
mov
dec
mov
loopne
and
xchg
repz
and
es
or
in
outsb
ljmp
mov
xor
pshufw
lods
fnstenv
pop
pop
pop
cltd
mov
jmp
cmp
xchg
mov
movsl
divps
sub
sbb
pop
push
addb
add
insl
mov
fcmovbe
push
push
jbe
js
sahf
sub
push
mov
ja
test
xchg
mov
adc
mov
lds
adc
aam
push
in
push
mov
nop
in
or
sbb
test
incl
fnsave
push
or
push
jbe
insb
divl
jbe
scas
jne
inc
les
call
dec
out
mov
push
stc
stos
inc
dec
add
jecxz
inc
pusha
aaa
cmp
dec
lds
jle
sub
add
mov
mov
pop
loope
xchg
push
jo
inc
pushf
ja
enter
pop
loop
sub
mov
rcrb
fbstp
xchg
inc
push
and
adc
pop
je
in
ljmp
and
call
stos
jns
arpl
or
jecxz
cld
pop
dec
or
pop
cwtl
iret
fnstenv
stc
xorl
fistpll
sub
push
push
aas
subl
xchg
fsubr
mov
push
push
add
cmp
xor
fsubl
and
sti
push
out
rolb
xchg
xor
gs
cmp
stos
shl
pop
pop
icebp
sbb
cmp
ret
repnz
out
xchg
xchg
xor
gs
fisubrl
daa
movsb
int
int3
out
mov
subl
xor
mov
inc
int3
arpl
ret
out
rorb
add
sub
cmp
sarl
stc
icebp
stc
ds
lock
dec
cmp
xchg
lods
repz
pop
add
out
cmp
lahf
mov
lahf
push
lods
and
int
test
pop
mov
cmp
outsb
ret
dec
push
push
mov
rorl
loope
cltd
insb
push
scas
iret
lock
movsl
mov
aas
mov
xor
mov
jge
jmp
in
test
sub
insl
mov
mov
stc
clc
push
popf
rcrb
cmp
jns
cmp
fcomip
ds
jecxz
xorb
sarl
mov
pop
inc
pop
jne
aaa
pop
iret
ja
jecxz
mov
insb
faddl
imul
sahf
dec
adc
ret
enter
sti
sub
leave
cld
mov
sahf
push
imul
xchg
push
roll
jmp
inc
push
sbb
mov
mov
decl
stc
insl
icebp
out
cltd
scas
fidivrs
ret
mov
jl
xor
inc
and
repnz
adc
icebp
in
pop
adc
es
mov
jb
push
jge
inc
sbbl
ffreep
push
inc
icebp
inc
dec
sti
test
notb
int
mov
bound
movsb
in
adc
les
push
sbb
sub
leave
aas
call
imul
cmp
cwtl
notb
ret
push
mov
inc
adc
jbe
inc
ds
xor
sub
cwtl
pusha
mov
or
fwait
sbb
xchg
dec
xor
xchg
stc
push
cmc
xchg
xor
jg
pop
outsl
sbb
adc
pushl
adc
pop
mov
sbb
scas
jbe
fyl2x
ds
iret
rolb
push
push
into
inc
out
xorl
pop
add
jbe
cmp
inc
movsb
mov
jae
xor
mov
mov
shrl
sarb
add
cs
test
xchg
inc
dec
and
cmp
push
dec
xchg
fadd
pop
cmc
shrb
jnp
push
fstpl
dec
lcall
pop
lahf
cmp
xchg
cmp
add
xchg
cld
lea
mov
mov
call
mov
adc
xchg
pop
lcall
cmp
std
mov
je
ss
xchg
push
dec
notl
sahf
add
fildll
mov
or
jle
int3
mov
xchg
mov
mov
and
push
dec
sbb
dec
jmp
pop
pop
fldl
pop
mov
xchg
xor
stos
sub
add
cltd
adc
pop
adc
or
add
push
imul
xor
sub
mov
jmp
leave
sarb
bound
mov
cli
or
das
jns
shrl
fisttps
or
sbb
dec
fmulp
sbb
insb
or
xor
xchg
and
outsl
in
jns
and
push
cld
or
xchg
imul
aaa
push
int
je
in
psubb
dec
cltd
jle
dec
subb
or
cltd
daa
jge
popf
andl
enter
cmpb
mov
stc
inc
fimull
adc
int3
insb
xor
mov
xchg
mov
scas
adc
inc
gs
push
cmp
sti
push
lahf
jns
mov
rclb
sub
inc
sahf
mov
in
sub
mov
inc
inc
cmp
loop
fisubrs
mov
sti
in
test
or
pop
out
pop
je
and
adc
cli
int
lahf
push
arpl
jbe
cwtl
jae
nop
mov
cwtl
es
or
stos
mov
pop
cmp
xchg
iret
jmp
jp
rolb
or
xor
incl
push
loopne
jae
mov
clc
lea
xchg
mov
movsb
pop
xchg
fadds
cmp
adc
jno
cmpsb
and
aam
add
movsl
sbb
lods
dec
clc
add
test
dec
cltd
cld
push
push
mov
das
mov
arpl
cmp
or
int3
outsb
repz
dec
jg
idivb
xlat
out
movsb
or
mov
movsb
mov
test
sti
xor
ss
dec
out
dec
xorb
or
jno
xor
lret
xor
add
jns
jg
add
mov
out
ljmp
sarb
xor
stos
leave
adc
xchg
mov
mov
xchg
lds
pop
add
aad
jb
pushf
mov
je
js
pop
pusha
cmp
jge
adcl
iret
ret
cmp
jle
dec
push
mov
mov
inc
insb
cmc
mov
or
ret
add
inc
arpl
rcll
cltd
ljmp
push
add
jecxz
sbb
shr
push
scas
mov
inc
daa
sub
adc
mov
fmul
outsb
jnp
sbb
sub
xchg
adc
add
negl
mov
mov
pop
loope
clc
xchg
jmp
aam
mov
cmpsl
mov
mov
inc
jno
mov
jg
jle
mov
dec
inc
jge
push
push
mov
adc
mov
mov
push
cmp
cmp
or
xchg
mov
insl
aad
bound
lret
mov
adc
sbb
call
push
inc
lock
hlt
push
pop
jae
adcl
inc
cltd
aas
rorl
cmp
mov
and
push
mov
and
fildll
dec
mov
add
lret
xor
xchg
pusha
jb
fs
pop
pop
enter
or
or
sub
sub
faddl
rcrl
loopne
inc
idiv
sub
inc
push
imul
jmp
sbb
adc
pop
mov
out
dec
xchg
dec
cld
fmull
xchg
add
sub
in
xchg
jmp
pop
inc
push
xor
mov
scas
js
pushf
daa
push
push
and
in
mov
mov
rorb
push
jb
leave
add
and
xor
rcrb
jecxz
mov
mov
xlat
rcll
or
movsb
xchg
cmp
fstl
jno
arpl
cmpsl
call
and
push
inc
and
pop
decb
mov
dec
mov
call
xchg
std
inc
push
addr16
mov
jl
jg
stc
jmp
xchg
mov
les
jecxz
mov
outsb
mov
inc
sub
inc
xchg
pop
dec
jle
call
and
dec
jge
cld
repz
xchg
mov
cmpb
cmp
mov
pop
inc
add
pusha
das
aad
cmp
ficomps
adc
xchg
repnz
loopne
mul
push
pushf
insl
pop
inc
and
sahf
push
pop
sub
movsb
pop
mov
cmpsb
sub
jns
movsb
pop
int
push
xchg
pop
stos
xor
out
insb
pop
faddl
sub
insb
test
sub
dec
xorl
lahf
add
sbb
inc
out
fwait
scas
adc
test
test
xor
popa
sbb
mov
add
es
jno
ja
xchg
in
pop
inc
adc
leave
add
xor
aas
cmp
pusha
adc
cmp
and
mov
adc
rcrl
adc
out
and
add
icebp
add
add
ljmp
rorb
icebp
sarl
mov
arpl
pop
stc
popf
mov
cmpl
xchg
adc
mov
vmwrite
mov
sub
scas
cmp
repnz
mov
or
sbb
negb
fdivrl
outsl
xchg
xchg
jmp
pop
fimuls
nop
add
movsb
mov
sub
mov
add
xlat
sbb
xor
push
scas
inc
cmpsl
es
sti
loop
outsl
out
sub
pop
sbb
in
cmp
int
pop
sbb
jmp
cmp
loopne
inc
js
inc
mov
enter
or
in
and
xor
cltd
jp
idivl
xchg
in
pop
mov
rcll
cmc
cwtl
fistl
loopne
cli
popf
mov
enter
add
dec
jno
jle
mov
pop
stos
subl
popa
mov
cmpsl
push
lahf
inc
sbb
and
bound
jne
jge
fucomi
sub
adc
fcomp
sub
jg
movsb
fstpt
es
or
ja
ret
stos
daa
adc
ljmp
sbb
outsl
cmp
add
scas
ret
xor
les
faddl
push
jae
daa
xor
sbb
scas
aam
xor
mov
dec
dec
mov
push
sbb
jae
out
xchg
jl
cli
or
sub
fstpl
sub
or
xor
mov
pop
shlb
shrl
push
fisttpl
pop
mov
or
dec
pushf
iret
loop
pusha
imul
and
ret
loope
std
jecxz
inc
adc
je
lods
mov
daa
lcall
lret
mov
repz
add
cs
mov
jns
or
or
ss
pusha
aaa
cmp
aas
sub
test
sbb
mov
out
jae
idivb
sbb
push
mov
jmp
orb
mov
in
mov
sub
push
mov
xlat
jge
xchg
mov
lods
popw
adc
mov
or
fdivrl
pop
mov
pusha
into
test
and
imul
pusha
push
repz
sbb
bound
movsl
xor
mov
cmp
push
and
sbb
les
loop
pop
push
xchg
cltd
xchg
adc
cmp
cmp
sbb
negb
insb
rol
push
adc
dec
cmp
lock
in
push
pop
mov
mov
mov
jae
jno
sub
pusha
pushf
mov
lcall
in
pop
cmpsl
cltd
inc
xchg
xlat
jnp
stos
inc
jne
dec
xorl
das
ret
sbb
fistpl
int3
std
or
cli
sub
jbe
daa
ljmp
xor
clc
arpl
and
ret
jl
push
push
jne
pop
cs
iret
lcall
lods
stos
scas
xchg
rcrl
inc
jbe
xor
cmpsb
jge
xchg
cli
mov
cwtl
roll
testl
cmp
jns
mov
hlt
xor
mov
es
xor
ret
mov
lret
in
ljmp
test
es
mov
sbb
outsl
in
or
cltd
js
sub
call
add
daa
int3
adc
addb
shll
and
jmp
mov
gs
test
loope
pop
mov
int3
jne
and
rcrb
mov
stos
jb
xchg
lcall
daa
stc
stos
shrb
arpl
pop
aad
out
repz
mov
insl
push
in
lret
hlt
mov
cmp
pop
sbbl
adc
fdivrs
jmp
jae
loope,pn
and
xchg
popa
inc
lods
roll
lret
mov
push
popa
pusha
stc
fwait
xchg
fldcw
or
movsb
out
ljmp
push
adc
fs
imul
pop
daa
jl
pop
repnz
or
jge
movsb
mov
rorl
push
xor
iret
pusha
dec
insb
jl
fdivs
add
mov
inc
aam
pop
rol
dec
scas
movl
imul
mov
push
aaa
ss
ljmp
cld
mov
ja
icebp
inc
ficomps
outsl
fucomi
xlat
rcll
test
mov
push
mov
out
xor
in
lock
sbbb
mov
jmp
fisubrs
sbb
int
inc
bound
es
test
call
pop
cmpsl
sbbb
aad
mov
push
jbe
inc
sub
push
xchg
shlb
xor
int
lds
sbb
adc
ret
or
cmp
cld
repnz
imul
jp
lcall
out
fisubs
adc
js
jle
jle
pop
or
lret
sub
in
mov
int
dec
scas
jge
mov
pop
aad
mov
add
into
jno
xchg
dec
loopne
in
pop
lds
mov
out
mov
lods
mov
dec
inc
sbb
loope
ficomps
pop
add
jo
inc
jge
sar
mov
mov
test
xchg
mov
out
repz
mov
and
or
inc
in
cli
pop
mov
loopne
clc
add
inc
jo
ss
lock
ror
les
sbb
cmpsb
add
decb
repnz
mov
mov
cmc
into
cmp
out
add
jg
pop
aas
test
repnz
sarb
mov
pop
ret
cmp
pop
inc
push
nop
cmpsb
push
stc
jmp
xor
mov
clc
cmc
xchg
sbb
cmpl
out
jge
mov
aam
add
stos
and
iret
mov
pop
inc
and
mov
cmp
xorb
dec
pop
or
or
mov
insl
xorl
leave
fidivrs
pop
dec
sti
mov
iret
inc
mov
rol
mov
and
je
aad
arpl
sub
xor
push
inc
mov
roll
push
sbb
mov
push
testl
lock
and
sarb
sub
and
jnp
popa
cmp
jnp
dec
int
fistpll
jnp
sbb
cmp
fisttpll
popf
jle
repz
sarb
and
add
push
mov
add
fildl
cld
sub
push
movsb
addr16
mov
gs
pop
scas
cmc
adc
arpl
pushf
add
dec
sbb
push
mov
mov
addr16
iret
mov
mov
add
adcb
shr
or
add
adc
xchg
cmpsb
jns
mov
pop
cli
iret
sbb
push
pop
dec
or
icebp
mov
xchg
xor
repnz
sti
mov
jbe
rcrl
cmpsb
scas
outsb
ds
jne
imul
ljmp
and
lahf
hlt
jno
cmp
push
test
mov
or
mov
adc
sbbl
inc
test
aam
jp
imul
idivl
push
lods
lea
dec
out
sbb
dec
and
es
xchg
inc
inc
paddsb
lahf
lds
push
dec
mov
lock
adc
imul
lcall
movsb
stos
and
add
push
xor
icebp
jg
cltd
adc
cmp
ret
xlat
xchg
mov
push
rcrb
cmp
lret
mov
sub
mov
inc
jnp
and
xchg
pusha
sbb
lods
lds
sti
test
cs
jmp
xchg
mov
dec
sub
mov
out
add
jmp
aas
mov
or
iret
and
arpl
or
sbb
fldenv
xor
mov
pop
cmp
inc
xchg
inc
pop
xchg
pop
jmp
les
sahf
insb
xor
fisubs
aaa
out
inc
test
ljmp
mov
clc
ljmp
sti
xor
loop
cli
test
fistpll
xor
jg
jecxz
addr16
adc
cmp
pop
or
sbb
cwtl
inc
jp
daa
mov
jp
sarl
fsub
add
sbb
pop
jns
imul
mov
lds
outsb
das
stos
mov
sahf
arpl
sub
notb
cmc
xchg
movsl
popa
in
and
clc
push
movsb
sbb
pushl
mov
cmp
jo
inc
popa
push
subl
scas
inc
xchg
pop
cwtl
inc
xchg
sub
popf
fnsave
rclb
jnp
cs
mov
ja
mov
popf
loope
into
insb
jo
das
xchg
cmp
or
in
rorl
or
js
dec
daa
test
mov
mov
adc
repz
iret
les
test
ss
in
clc
adc
mov
jl
test
sbb
icebp
add
xorb
ret
push
lret
and
pop
imul
push
and
inc
clc
aaa
lahf
stos
int
mov
pop
add
bt
adc
mov
lock
pop
fsubrl
ret
xor
aam
test
push
xchg
xor
adc
xchg
sarl
in
mov
out
cmp
sub
fs
in
push
dec
lret
jo
pop
leave
cwtl
jb
hlt
fsubp
orl
mov
mov
push
outsl
and
lcall
mov
andb
jg
mov
push
addr16
addr16
test
in
sbb
xchg
nop
test
out
pop
lods
icebp
push
adc
ljmp
adc
inc
mov
xchg
or
arpl
fdivl
xor
jnp
les
aam
mov
jne
sub
ret
sub
xchg
fildl
pop
mov
or
and
or
aas
pushf
inc
jo
pop
scas
iret
outsl
jle
add
hlt
fwait
insl
pop
pop
fisubl
repnz
add
iret
cmp
add
leave
xchg
cltd
dec
int
adc
divl
pusha
or
sarb
ret
push
jp
shl
sarb
sub
inc
adcb
insb
pop
aam
or
cwtl
test
and
or
in
add
or
stos
cmpsb
out
push
shr
mov
lret
push
test
test
add
ds
pop
mov
clc
out
push
sub
dec
in
xchg
sub
scas
addl
lea
push
mov
iret
mov
add
and
sub
lahf
mov
enter
or
scas
int
scas
pop
inc
arpl
push
in
xor
rol
pop
mov
cmp
fcomip
cmpxchg
stos
push
push
arpl
cs
fcmovu
adc
cli
sub
and
fsts
ja
xor
push
xor
repz
leave
jnp
inc
cmp
loop
dec
mov
lcall
jno
sbb
sbb
aaa
rcrb
fdivrs
lods
push
xor
popf
cs
icebp
inc
pushf
in
or
sbb
mov
pop
pushf
mov
shrl
in
mov
leave
ds
mov
or
sub
mov
xor
dec
pop
popa
cli
cmp
pop
jns
dec
cwtl
inc
es
movsb
xor
mov
int3
pop
mov
into
xchg
rcrl
movsb
xchg
mov
ss
xchg
mov
rcr
xor
mov
in
jo
mov
push
xchg
pop
jl
sub
xchg
lock
jmp
mov
jmp
pop
daa
in
lea
dec
test
lret
xor
mov
icebp
in
xor
xor
int
lret
push
xchg
and
test
and
pop
jb
imul
jno
ja
mov
in
ja
jmp
xchg
pop
cmp
jo
in
daa
mov
pop
xchg
cmpsb
cld
sbb
cmp
jge
repnz
movsl
movsb
mov
xor
int
ja
push
inc
pusha
xchg
mov
xchg
and
out
cmc
push
fldcw
fiaddl
adc
iret
lahf
jl
jnp
ss
flds
mov
shl
rorl
jl
or
jl
xchg
mov
sti
push
mov
pop
mov
mov
mov
stc
and
pushf
into
mov
scas
inc
or
cltd
xor
push
sub
dec
adc
test
jne,pt
jle
ffree
adc
cmp
jae
pop
es
daa
in
cmp
cmp
movsb
mov
lea
outsl
int3
jno
outsl
popa
cmp
iret
repz
sahf
jns
push
mull
push
mov
dec
or
xor
push
jecxz
xlat
xorl
xchg
and
adcb
stc
sbb
shll
outsl
fdiv
xchg
outsl
mov
xor
sbb
fwait
out
js
stc
mov
push
orb
out
pop
xchg
xor
enter
pop
mov
dec
test
xor
adc
mov
add
outsl
mov
call
jne
mov
sub
add
push
xchg
jecxz
mov
jge
int
mov
fucomi
shlb
push
xor
mov
push
cs
fisttpll
ret
sbb
and
lahf
sahf
pop
xorb
enter
cli
iret
mov
sub
repnz
insb
xchg
jae
je
cld
mov
int3
nop
jl
aad
insb
adc
pop
jg
xchg
movb
pop
pushf
imul
shlb
add
sbb
bound
out
inc
jae
jl
xchg
shr
sub
in
addb
push
stos
in
jge
pop
xchg
mov
cmp
dec
sub
aas
sub
shrb
sub
and
frstor
jo
lcall
sbb
ret
jg
ret
lret
mov
pop
fadds
mov
pop
push
cmp
cmp
xor
cmp
cli
repnz
mov
ds
sub
and
jle
int
xor
sub
cmp
popf
mov
cli
push
and
aaa
popa
shrb
sbb
cli
push
cmpb
mov
pop
cmpsl
dec
xchg
mov
into
mov
loopne
fimuls
and
loopne
pop
push
pop
ds
sbb
mov
aad
scas
stc
xchg
cmp
adc
addr16
sub
fsubp
aam
subl
rorl
fcoms
pop
dec
pushl
adc
fisttps
insb
sub
and
pop
sub
xor
adc
jae
bound
imul
repz
mov
mov
outsb
push
out
sub
lods
adc
fnstsw
int
adc
lahf
sbb
insb
cmpsl
test
inc
cld
cmpsb
ja
popa
outsb
sbb
sub
push
pop
mov
test
and
push
adc
push
scas
xchg
push
fisubl
adc
dec
dec
lret
movsl
pop
dec
addr16
mov
inc
xor
cmp
mov
and
stos
cmp
xor
or
cmp
int3
mov
leave
jmp
push
sbb
enter
mov
xor
stos
ficoms
mov
call
repnz
in
ds
jo
mov
cmp
iret
mov
aam
mov
mov
xchg
push
idivb
aad
movsl
outsl
bound
sti
sbb
xchg
sbb
hlt
fcomip
jmp
mov
jmp
xchg
mov
popa
roll
jae
jo
popa
lods
lahf
adc
mov
ret
cmc
lds
cmp
mov
les
jle
and
mov
or
pop
testb
push
cmp
and
lods
ret
inc
mov
xchg
xchg
push
pop
mov
imul
cmp
mov
mov
mov
loop
mov
xor
mov
mov
inc
cmp
adc
push
nop
add
out
dec
sub
sarl
mov
in
dec
mov
fwait
add
pop
pop
pushf
rcr
jmp
shlb
xlat
mov
mov
xor
outsb
dec
mov
mov
rcrl
adcl
sub
xchg
insl
mov
xchg
cwtl
add
subl
inc
xchg
rcll
add
in
rcr
leave
arpl
ss
pop
nop
cmp
es
mov
insb
cs
xor
out
jbe
pop
mov
in
fstp
add
leave
inc
das
addr16
nop
icebp
rorl
nop
inc
xlat
jbe
push
pop
pop
icebp
pop
pop
stc
mov
pusha
cs
push
mov
jecxz
ljmp
out
sub
fmull
mov
xlat
cld
push
xlat
pop
add
aas
inc
sbb
push
mov
stos
imul
in
cmp
cmpsl
arpl
push
mov
jl,pt
pop
addl
jnp
in
daa
sub
je
test
inc
add
mov
lds
aaa
or
mov
bound
inc
scas
adc
cmp
test
and
std
addb
mov
xchg
push
dec
pop
jno
cwtl
adc
xchg
push
sbb
fwait
dec
sbb
cmpsb
sbb
aam
lret
jmp
dec
sub
stos
nop
pop
pop
cmp
repnz
jns
and
dec
lahf
stc
xlat
add
mov
test
pop
out
dec
in
and
cmc
jnp
outsb
lds
mov
mov
cmp
in
rcll
ja
imul
push
cli
icebp
leave
lret
sub
mov
cmp
ret
inc
faddp
lahf
nop
sub
repz
mov
cs
das
stc
mov
xchg
imull
xchg
roll
outsb
adc
orb
aaa
jge
test
cmp
push
cwtl
mov
in
push
ficompl
add
and
cmp
les
popf
int
fisubrs
daa
fiadds
cmc
loop
dec
pushf
push
sti
aam
sahf
lock
inc
jae
lods
out
adc
push
lahf
lea
xchg
cmc
clc
mov
movsl
xor
mov
cmp
push
mov
pop
lret
pop
gs
mov
push
sbb
imul
dec
or
jbe
xor
jno
xchg
mov
mov
outsl
sub
popa
loop
xor
sahf
push
cmp
scas
mov
xchg
add
fdivrl
hlt
jecxz
cmp
out
test
ljmp
mov
fisubrs
ret
imul
lret
sub
data16
in
add
or
inc
add
cmp
or
lcall
mov
insl
iret
daa
jne
pushf
popf
jnp
sahf
add
fistps
in
pop
xor
dec
mov
add
dec
movsl
sbb
test
insb
pop
int3
popa
cmp
push
aad
movsl
data16
cltd
dec
sub
dec
sub
xchg
fisubrs
add
scas
mov
mov
enter
mov
jae
out
xchg
inc
lret
arpl
sarl
mov
hlt
popf
sub
cmpsl
push
push
adc
mov
mov
mov
xchg
imul
xchg
call
dec
push
imul
jle
sbb
jae
jb
push
rolb
push
xorl
xchg
and
insl
or
mov
fistpll
mov
into
sub
jle
aam
mov
decl
adc
inc
inc
mov
fsubrl
call
out
sarl
dec
cmpsl
sbb
push
push
inc
es
pop
add
roll
fcmove
mov
addr16
movsl
xchg
add
or
mov
mov
and
dec
mov
fimuls
pushf
lret
mov
mov
shlb
in
fidivrs
dec
leave
fwait
sub
pop
lods
push
pop
mov
test
cld
xchg
aaa
data16
int
push
out
ja
or
mov
sub
jns
mov
cmpsl
inc
lret
mov
sbb
sbb
daa
mov
js
jp
test
sar
adc
dec
pop
lea
dec
xchg
mov
xor
or
xor
xor
adc
cmpsb
cmp
fmull
mov
xchg
pop
fwait
test
cmp
mov
or
xchg
shlb
cmpl
jp
inc
aam
inc
fs
aam
dec
push
lea
pop
add
inc
mov
add
jb
mov
pusha
adc
enter
sub
inc
imul
imul
lea
xchg
jg
xchg
and
cmp
mov
jns
pop
sarl
outsb
les
repz
inc
dec
fsubrl
sahf
fwait
int
mov
popa
xor
inc
stc
cli
rorl
push
arpl
ret
pop
or
stc
jmp
outsl
cmpsl
in
inc
in
enter
popf
mov
pop
mov
sbb
test
xchg
fwait
pop
mov
mov
pop
addr16
dec
mov
pop
mov
cli
add
mov
mov
push
push
int
shll
and
cmpsb
insl
movsb
xor
clc
subb
dec
in
pop
in
faddp
movsb
lcall
push
out
push
imul
cmp
mov
gs
jne
xorb
mov
sbb
cmp
popf
pop
sti
add
fists
scas
pop
dec
mov
hlt
enter
inc
mov
push
icebp
call
adc
jle
add
xchg
in
fabs
mov
pop
and
stos
insl
aam
dec
ja
push
sahf
sub
insb
inc
js
inc
psubb
jp
and
cltd
nop
outsb
or
test
mov
ja
jmp
adc
add
xlat
std
adc
push
sbb
scas
push
ds
sbb
lahf
mov
fstpt
jmp
push
pop
mov
xchg
push
push
in
xchg
test
fidivs
cmpsb
or
out
and
dec
jmp
sbb
mov
mov
inc
mov
scas
lret
in
mov
xchg
in
or
xor
and
jno
fimuls
cmp
ret
xor
sbb
inc
test
mov
lock
jge
test
aas
sarl
mov
lds
cs
test
aaa
ret
sub
add
push
outsl
cmpsb
mov
cmpsb
xor
push
std
dec
sbb
mov
in
lret
mov
cltd
int3
or
out
imul
sub
xor
dec
jbe
mov
pop
test
mov
sbb
inc
cmp
aad
pop
sub
push
add
int
sbb
idivl
dec
sub
test
aaa
fbld
dec
xchg
ja
into
and
xor
sbb
jae
adc
test
cmp
cmp
sti
jnp
sub
ja
ret
jae
movsb
push
iret
rcrb
pop
in
jle
cmp
shrl
fdiv
popa
xchg
sahf
push
cmp
lret
jp
mov
inc
lret
jle
inc
or
or
or
push
ss
jnp
int3
scas
cld
popa
stos
push
jge
lock
arpl
dec
shlb
push
jmp
mov
les
popf
fucomi
mov
mov
pop
fisubrl
lcall
insb
xor
xlat
movsl
in
mov
mov
in
dec
push
push
int3
xchg
jp
les
lret
out
shrl
cli
xchg
xor
ret
jl
test
dec
dec
rcll
aam
in
cld
fisubl
cmp
in
lea
loopne
scas
mov
nop
jl
jmp
or
hlt
inc
or
test
or
lods
lret
adc
cmp
push
or
sbb
das
mov
cwtl
ret
add
je
mull
dec
mul
clc
or
stos
ret
mov
fcompl
xchg
ret
int3
addr16
xlat
sbbb
int3
mov
rolb
std
mov
jmp
jge
fwait
clc
cmp
out
into
sbb
into
movsb
pop
pop
inc
push
sub
pop
xchg
push
pop
xorb
adc
mul
jg
sbb
test
les
mov
add
and
ljmp
sbbb
cmp
xor
inc
xor
out
jg
mov
adc
xor
test
cmp
js
fs
rcl
cmp
mov
mov
ret
hlt
imul
fstps
leave
adc
sbbb
xchg
sub
ret
imul
inc
pop
mov
fistpll
addr16
or
push
jo
mov
int
cmpsb
aaa
and
and
lcall
xchg
mov
in
ljmp
jne
and
scas
and
adc
or
aas
addr16
mov
sub
sub
outsb
stos
idivb
inc
lea
loop
mov
in
imul
adc
and
lret
testl
pop
movsb
mov
aaa
decl
mov
pop
inc
pop
andl
loop
mov
push
sbb
fmul
and
ja
mov
jmp
jmp
push
xchg
in
pop
cli
mov
int
and
sahf
or
sub
push
or
shll
test
mov
mov
cwtl
push
inc
nop
ret
aas
xor
lahf
add
xor
fisubl
icebp
sti
push
fwait
jmp
clc
adc
fwait
or
lock
bound
mov
aas
aam
outsl
shll
inc
in
inc
jo
fucom
js
cs
lret
adc
mov
leave
shl
daa
fnsave
add
pop
and
pop
dec
data16
gs
insb
cs
lds
mov
pusha
xor
mov
lea
mov
sbb
stos
fiaddl
fists
cmp
and
mov
sub
cmp
inc
iret
pop
testb
mov
jo
inc
push
movsb
cs
sbb
sub
outsb
xchg
int
clc
iret
scas
rcrb
lock
xor
paddusw
lods
xchg
lcall
push
ret
negb
cmpsb
test
push
shrl
sbb
jecxz
pop
or
iret
sbb
mov
pop
sbb
mov
movsl
fcoms
dec
add
mov
outsb
gs
mov
fildl
inc
mov
test
orb
pop
dec
mov
negb
and
pop
fistpl
cwtl
stos
in
imul
inc
jp
or
push
adc
mov
stc
mov
cmp
xor
int
scas
enter
mov
jg
lcall
clc
adc
mov
popf
orb
lret
repnz
inc
pop
loop
xchg
test
push
clc
dec
lock
adc
adc
movsl
mov
cwtl
xor
and
adc
cmp
jmp
scas
mov
scas
lahf
insl
leave
lahf
jle
adc
lea
iret
or
out
push
sbb
lret
imul
dec
mov
aam
or
movsl
dec
aaa
jge
add
push
pop
dec
fbstp
mov
xor
bound
mov
pop
pop
dec
and
xor
int3
sti
cmp
ds
dec
mov
clc
test
outsb
nop
outsl
lret
adc
fwait
nop
mov
jle
xchg
xchg
lea
or
imul
xor
test
xchg
filds
cli
adc
xor
mov
or
lcall
clc
mov
push
sub
movsl
jb
adc
les
mov
cmp
in
adc
pop
jmp
jns
imull
lds
mov
sub
fbld
lcall
sahf
mov
dec
lea
shrb
in
shlb
ffreep
push
xor
aas
sub
lds
pop
sbb
mov
stos
pushf
stos
fdivrl
cwtl
mov
xchg
or
or
adc
shll
inc
push
pop
clc
pop
loopne
lods
loopne
and
movsl
or
inc
inc
es
jns
mov
pop
scas
pop
addb
insb
lret
loope
cmp
les
mov
sbb
jbe
movsl
arpl
ret
push
imul
xchg
xchg
cs
jmp
loopne
in
fsubr
xor
call
mov
inc
push
mov
stos
sahf
jnp
mov
add
rcrb
cmp
or
jl
mov
push
pop
mov
jp
je
fsubr
in
inc
push
cld
dec
push
inc
cmpsb
push
mov
sub
mov
mov
aam
insb
sub
aam
adc
inc
arpl
xor
xchg
xchg
inc
stc
push
ret
les
data16
sub
inc
repz
push
and
jno
fisttps
out
les
ficompl
and
pop
mov
ljmp
or
push
aad
pop
pop
sub
out
xchg
pop
cwtl
xor
dec
divl
mov
fs
mov
fcom
jle
mov
cwtl
push
es
dec
push
or
aaa
mov
xchg
add
stc
mov
in
push
jbe
cmp
iret
out
pop
rcl
ret
push
subl
lods
aad
mov
jecxz
lock
call
mov
add
hlt
clc
mov
stc
xlat
stos
sti
jo
or
loop
ret
push
jle
pop
pop
cs
iret
loopne
add
shr
or
add
mov
jnp
das
lahf
sahf
das
pop
push
and
mov
mov
jo
mov
test
subb
adc
data16
int
adc
xchg
mull
mov
sahf
mov
sbb
in
pop
out
ljmp
sub
mov
xor
std
xchg
insl
inc
pop
cltd
nop
adc
dec
mov
es
bound
mov
push
mov
jns
push
jmp
ljmp
leave
mov
ja
scas
outsl
inc
mov
rclb
cmc
outsl
sbb
aam
mov
fstpl
sub
or
imul
popf
dec
sti
ds
divb
stc
sahf
ja
imul
je
mov
adc
sahf
push
mov
xchg
lcall
loopne
es
scas
dec
push
mov
mov
push
xor
pop
xchg
lock
lahf
cli
or
ja
dec
negl
repz
jae
adc
mov
scas
pop
dec
add
jle
push
and
inc
shl
dec
fisubl
aam
ss
iret
mov
les
scas
inc
stos
repnz
divl
xchg
cmp
sub
and
cmp
mov
mov
ja
int3
mov
inc
aas
fimuls
mov
clc
mov
and
loope
push
jecxz
mov
push
loop
popa
enter
adc
shrl
lds
ja
fildl
sub
cmp
movsb
xchg
mov
mov
fnstenv
stos
xor
lds
mov
cmpsb
aaa
push
outsb
xchg
add
xor
jl
aad
mov
aam
push
int
and
cmp
adc
out
fimuls
lods
and
rorl
and
pop
pop
xchg
xor
adc
and
add
fdivrs
sar
das
sbb
aam
dec
adc
leave
mov
xchg
cmpsl
or
push
or
inc
stos
mov
add
inc
inc
ljmp
xchg
shll
cli
ret
mov
imul
roll
inc
fsubrl
mov
mov
pop
and
mov
loope
clc
and
xor
fistps
mov
setbe
sub
lret
mov
popf
mov
ret
cmpps
mov
addr16
jae
dec
sbb
out
cmp
mov
or
aas
rclb
sub
jmp
add
shrl
adcb
movsb
mov
push
shlb
xchg
fadds
mov
or
pushl
mov
mov
adc
sub
lock
mov
sbb
push
inc
js
syscall
inc
lret
jne
out
pop
outsb
adc
and
enter
or
push
xchg
rcrl
xchg
inc
insl
mov
pop
cmp
jns
ss
repz
pop
ja
mov
add
les
cld
sahf
test
cli
xlat
sbbl
lea
adc
jp
xor
jns
lea
and
fistps
pop
imul
mov
push
fstpt
xor
jbe
mov
xchg
push
cwtl
jns
xor
mov
and
pop
and
gs
lret
push
inc
jecxz
shl
pop
inc
iret
adc
inc
sub
insl
mov
test
enter
add
sar
mov
test
icebp
xlat
in
cmpsb
push
and
xchg
pop
xchg
addr16
ja
rcr
fcmovnb
lods
arpl
lret
lcall
aas
mov
clc
adc
push
mov
inc
or
jo
cld
jbe
in
into
mov
lds
std
cwtl
push
push
mov
pop
lahf
add
jp
rol
mov
mov
adc
js
ljmp
les
sub
cwtl
or
cmp
repz
repz
sti
inc
je
push
inc
mov
cwtl
jp
jmp
cmp
cmp
dec
pop
push
cmp
mov
cmc
cmp
inc
mov
xor
int3
sahf
push
add
nop
inc
cmp
jbe
repnz
xor
add
sub
shlb
or
call
jb
lds
in
sahf
fnstsw
stos
mov
xor
pop
fimuls
das
mov
cmpsl
movsl
dec
outsl
imul
cmp
pop
sahf
mov
mov
hlt
add
enter
mov
xchg
ud1
inc
mov
mov
add
jg
adc
jnp
jb
clc
dec
pop
cmp
fldt
cmpsb
jns
inc
push
cmpsl
es
jle
aam
clc
inc
sub
dec
mov
mov
pop
and
mov
fistpll
fcmovnb
xor
into
add
rorl
int
cli
imul
jp
push
mov
negb
cmp
enter
loop
pop
add
shlb
and
rcrb
xchg
xlat
orl
out
insb
sti
fdiv
std
dec
jg
test
and
ljmp
pop
not
fists
aas
iret
cli
pop
and
neg
hlt
xchg
fs
inc
test
xchg
ds
call
and
cmpsb
aaa
test
mov
cmp
je
cmp
insl
scas
stos
dec
insb
cmp
ffreep
adc
insl
mov
mov
push
xchg
mov
mov
cmp
aam
xchg
test
cmp
mov
xchg
dec
mov
cmpsl
pop
dec
loop
pop
jl
enter
sbb
dec
insb
arpl
cmpsl
rclb
pop
mov
pop
mov
xchg
mov
cmpsb
or
adc
daa
imul
push
or
ds
sti
loope
fs
aad
ret
cmc
mov
or
fs
sbb
ss
jns
cmpsb
mov
add
or
xchg
aam
shl
mov
xchg
xor
adc
push
adc
in
std
cmpsb
fs
mov
lret
outsb
mov
pop
sbb
adc
jno
push
inc
test
cmp
inc
mov
nop
inc
dec
sbbl
les
movl
xor
push
cmpsb
testb
mov
inc
aad
test
push
mov
fsubp
mov
cmp
push
movsb
dec
sbbl
outsl
inc
sbb
int
arpl
pop
incb
das
push
dec
jns
mov
loopne
inc
test
sbb
into
or
test
in
mov
hlt
clc
rcl
dec
fnstcw
inc
jge
sahf
cs
and
dec
sub
int
mov
push
xor
inc
xlat
lods
xor
pop
sub
mov
test
push
scas
push
jmp
ljmp
and
xchg
jae
jno
ds
adc
mov
loopne
fdivr
mov
cmpsb
repz
mov
xor
inc
in
xor
mov
inc
addb
xchg
in
repnz
sbb
xor
lret
insb
rolb
fdivrl
sbb
scas
push
popl
cmp
clc
mov
ss
mov
sahf
push
cwtl
xchg
jp
lret
cs
ret
xor
sub
fst
jae
lahf
and
jmp
jecxz
inc
inc
mov
xor
inc
stos
in
mov
adc
push
repz
leave
jecxz
insb
ret
insl
out
lods
cmpsb
dec
push
or
mov
push
dec
daa
pop
addr16
cmp
fiaddl
shl
fldt
mov
adc
lcall
jnp
push
xchg
mov
or
les
mov
jno
fs
cmp
sub
imul
add
sbb
icebp
xor
jmp
dec
jae
sbb
daa
orb
jnp
or
mov
es
sub
pushf
pop
ficoml
hlt
decl
pop
ljmp
repnz
outsb
xchg
enter
and
xor
or
cwtl
hlt
das
mov
xor
sbb
cmpsb
pop
xor
ret
lods
imul
mov
dec
sub
fwait
add
fsubrs
and
stos
aam
cmp
gs
pop
pop
rclb
add
je
or
insb
and
xchg
dec
outsl
outsl
and
mov
sbb
xor
jno
cmp
add
sub
out
sahf
cmpsb
xchg
sub
test
icebp
popf
scas
out
mov
adc
dec
mov
imul
mov
inc
sbb
xchg
mov
add
jmp
mov
dec
mov
call
int
inc
xchg
pop
lahf
xchg
pop
jne
pop
pop
mov
in
ficoms
insl
ret
out
lea
daa
es
push
adc
dec
bound
sahf
ja
iret
inc
movnti
jae
aam
mov
inc
pop
fsubrs
repz
mov
jno
or
test
push
arpl
or
std
add
into
std
insb
xlat
mov
jge
dec
cld
in
cmp
popf
push
movsb
mov
pop
or
dec
loopne
cmpl
or
insb
sbb
cmp
push
idivb
push
inc
pop
pop
dec
add
loope
pop
adc
jne
jne
fldlg2
mov
rcr
sub
push
sub
ret
add
add
cmp
xor
or
shl
lcall
movsb
sbb
mov
fsubr
pop
cli
xchg
dec
mov
pop
outsl
jbe
ljmp
aad
movl
daa
mov
cmp
lret
mov
cmp
adc
add
and
adc
or
pop
pop
mov
adc
jg
mov
es
hlt
enter
cli
pusha
pop
adc
cmpsl
enter
xchg
jbe
adc
mov
jmp
aas
xchg
adc
adc
dec
add
inc
add
fisubs
mov
scas
push
mov
xor
inc
nop
jae
cs
out
mov
sbbl
push
push
lahf
jp
and
repz
xor
fiaddl
add
xchg
rolb
dec
dec
add
sbb
rcrb
insl
insl
or
or
push
lcall
pop
mov
bound
sar
movsb
outsl
mov
popf
inc
jmp
sarl
xchg
aas
outsb
loop
xor
call
xor
xor
outsl
mov
in
sub
cmp
jle
push
jg
jns
jb
mov
jl
mov
out
mov
xchg
push
outsl
iret
inc
add
jmp
and
outsb
nop
filds
lods
mov
int
cli
xor
push
andl
push
dec
ss
sub
xor
stc
outsl
add
rolb
in
pop
push
push
andl
ret
inc
sbb
adc
sbb
add
and
pop
stos
add
xchg
scas
jae
sbb
data16
xchg
fstpt
cs
imul
add
pusha
mov
call
xor
or
cmc
jecxz
mov
or
xchg
jl
dec
mov
pop
mov
lods
xchg
lcall
jns
ficoml
js
aad
dec
pop
cld
das
fwait
ret
dec
inc
add
call
dec
cmp
xchg
lahf
cltd
pop
and
inc
mov
or
out
jns
int3
test
add
xor
cltd
xchg
rcll
xchg
push
or
and
mov
js
aaa
jne
movsb
xor
addr16
ds
shlb
outsb
sub
push
inc
test
int
sbbb
mov
xor
add
xor
inc
fdivr
push
adc
mov
jle
mov
lret
call
lahf
dec
xlat
xchg
adc
push
fimuls
jge
cmpsl
lahf
xlat
push
sub
out
stos
test
mov
cmp
jmp
push
mov
mov
mov
aas
jecxz
movsl
pushf
add
jnp
andl
insl
push
sbb
dec
jge
push
lcall
adc
cmp
mov
push
ret
sahf
pop
cmpsb
out
add
imul
inc
and
add
jnp
jbe
mov
enter
sarl
jo
punpckhdq
sbb
mov
addr16
jmp
inc
stc
jmp
shll
pop
hlt
pop
icebp
arpl
test
adc
clc
enter
mov
js
fcmovu
mov
jp
loop
or
sub
mov
fimull
mov
pop
dec
mov
adc
xchg
dec
xor
out
mov
pusha
jo
mov
into
add
fldcw
lock
fwait
xor
lret
cli
add
jns
gs
mov
mov
jg
in
sbb
fstl
inc
sbb
shlb
xor
jae
dec
test
jne
jns
inc
lahf
pop
icebp
cmp
sbb
cmp
and
lods
sbb
jnp
incb
push
mov
xchg
nop
fisttps
push
mov
divl
mov
mov
and
dec
lret
push
mov
mov
cs
jae
mov
mov
js
lret
push
sub
sub
shl
imull
sub
lret
xor
jecxz
sar
int3
sbb
and
xchg
repnz
fst
or
adc
add
fsub
addb
data16
stos
in
xor
fsubrl
push
ds
adc
daa
mov
inc
push
lods
int
xchg
mov
push
outsb
push
orb
mov
xchg
sub
lea
inc
in
sub
divb
fwait
or
test
aam
in
icebp
or
push
mov
push
mov
lods
xchg
or
dec
cli
fs
push
mov
notl
jg
sbb
jmp
repnz
push
xchg
mov
xor
add
test
hlt
lahf
mov
rcrl
xchg
jge
pop
xchg
push
mov
je
dec
imul
inc
fsubrp
ds
call
sbb
adc
inc
add
in
shll
xor
sub
xor
adc
jns
pop
or
insb
in
outsl
enter
cld
xor
insl
or
jae
sub
adc
out
or
cmp
es
clc
shll
lret
jle
cmp
loopne
ret
jecxz
sbb
cmp
js
mov
test
mov
fucomi
mov
mov
test
gs
sub
and
add
fcoml
movsl
in
push
sub
insb
cld
push
aam
mov
adc
inc
jae
mov
imul
fs
addr16
adc
clc
dec
dec
dec
sub
jg
or
ret
jp
inc
arpl
je
gs
in
adc
xor
adc
mov
dec
pop
sbb
lmsw
andl
sub
es
js
jg
fxch
sub
data16
std
xor
xlat
outsb
das
push
inc
cmp
dec
and
adc
pop
mov
mov
dec
pop
xchg
fbstp
adc
ljmp
xchg
mov
in
aas
test
add
lcall
popf
aaa
mov
rol
adc
sbb
push
inc
cli
mov
sub
loop
cmp
or
pop
sbb
push
dec
xchg
sub
out
adc
or
dec
xchg
mov
mov
lahf
lea
and
xchg
jge
xor
jns
jge
fs
outsb
lcall
aad
and
and
ss
addl
call
arpl
call
les
mov
cli
inc
loope
cs
mov
cltd
sahf
cmpsl
add
sbb
and
xchg
orb
sbbl
add
mov
mov
arpl
mov
sub
jnp
das
fsubl
mov
or
scas
xor
pop
mov
adc
icebp
ds
int
cmpl
dec
fcomps
in
sub
adc
fnstcw
popa
cmp
dec
cmc
hlt
out
out
out
or
hlt
pop
mov
add
out
mov
imul
push
fisubrs
adc
xchg
mov
mov
jne
imul
dec
mov
push
movsb
jecxz
xor
mov
in
pop
xchg
and
adc
cmpsb
iret
daa
imul
adc
sub
pop
dec
movsl
inc
adc
jne
out
cld
fsub
sbb
in
in
jne
and
mov
dec
and
clc
sti
cs
push
xchg
xor
je
lret
sub
adc
jl
inc
dec
mov
lds
dec
fs
fcoms
mov
jns
and
in
push
xchg
dec
clc
dec
cld
push
push
mov
and
jnp
mov
xchg
or
sub
add
mov
lret
dec
push
nop
or
call
or
dec
in
rorl
xchg
daa
inc
or
ret
ret
ss
int3
xor
call
icebp
cmp
push
push
jmp
inc
jb
jnp
adc
std
rolb
mov
adc
iret
pushf
dec
pop
divl
ret
dec
sbb
inc
repz
lcall
gs
sbb
sub
in
cmc
ljmp
push
clc
dec
sahf
sbb
cmp
cmp
cmpsl
js
push
jnp
xchg
mov
lods
int
jp,pt
pop
pop
xchg
scas
cs
push
shl
cmp
mov
adc
pop
stos
mov
push
scas
mov
push
fucomp
mov
xchg
jp
aas
dec
roll
mov
subb
out
lret
or
int
push
mov
fstpt
ds
pushf
addr16
add
cmc
mov
aad
ss
adc
sti
fdivl
icebp
mov
iret
xchg
scas
or
xor
int
mov
pop
sub
test
in
push
into
fdivl
cwtl
ret
push
incb
cmp
inc
fsts
jbe
in
out
inc
pop
mov
call
inc
dec
nop
stc
negl
cmp
pop
pop
fwait
push
dec
ljmp
xchg
rcrl
shrd
pop
sub
das
enter
icebp
push
or
lds
jecxz
sarl
out
cmp
xchg
push
std
or
lahf
mov
and
hlt
xchg
mov
jl
jne
mov
repnz
mov
inc
mov
dec
fnstenv
rorl
mov
subb
cmp
imull
inc
xor
fisubs
or
xor
inc
fldl
je
cmp
sarl
xchg
xchg
sub
cmp
push
sub
push
in
jo
loopne
pop
jp
shll
mov
stc
mov
and
mov
adcb
aad
cwtl
rol
in
or
imul
fadd
sub
hlt
pop
cmp
ja
sbb
dec
inc
mov
xchg
sub
lcall
mov
adc
shlb
cmpsb
loopne
lcall
pop
aam
daa
pushf
cmc
cmpsl
xchg
roll
and
xchg
jmp
jae
push
std
in
or
ja
ficomps
sub
xchg
enter
adc
aaa
out
mov
lods
jnp
fwait
mov
sbb
and
dec
push
cmp
or
dec
test
jae
pop
xor
imul
push
jns
sbb
push
lret
pop
jle
mov
mov
jnp
and
add
jl
push
dec
xchg
and
mov
adc
sti
jecxz
insb
aas
ljmp
sbb
mov
sub
test
popl
sub
xor
mov
add
push
je
dec
les
mov
jl
frstor
sub
loop
scas
testl
cmp
inc
xchg
sbb
lds
inc
shrb
cltd
je
pop
outsl
xor
cmc
xchg
push
and
das
dec
notb
or
mov
testl
add
jnp
ljmp
mov
in
or
fistpl
mov
mov
sbb
lods
out
out
jnp
jno
cmpsb
add
push
or
xchg
cmp
pop
pop
push
fs
jmp
inc
jl
xchg
js
aam
iret
mov
mov
or
cwtl
inc
aas
les
xor
inc
xor
mov
loopne
add
sti
inc
and
sub
mov
imulb
out
es
push
sbb
inc
out
cmpb
xor
out
inc
jbe
aad
mov
addr16
mov
leave
iret
sub
stc
jbe
cmp
notl
sbb
adcl
andl
jno
out
xor
mov
movsl
leave
dec
xchg
and
push
jp
adc
adc
pop
fs
mov
int
daa
outsl
jl
xchg
int
mov
cli
add
daa
scas
sbb
insl
jg
mov
lods
movsl
mov
dec
rolb
jae
scas
es
pop
imul
push
out
ds
stc
outsb
sbb
sub
sets
pop
inc
daa
xchg
mov
push
or
inc
int3
fbld
test
sub
mov
pop
pop
jo
imul
je
sbbl
in
testl
lret
push
pop
inc
inc
daa
out
add
icebp
daa
cmc
imul
test
mov
jne
jne
mov
add
mov
adc
into
cmp
xchg
cmp
testl
js
push
add
int3
filds
sub
ret
xchg
inc
daa
sbb
es
out
shlb
daa
fistpll
lcall
xchg
mov
mov
cmp
push
es
into
cmp
push
jbe
mov
test
popf
aam
hlt
rcrb
push
mov
ss
gs
jae,pt
in
ja
popa
and
inc
xchg
ficomps
mov
jg
cltd
or
into
sahf
negb
outsl
xchg
dec
fdiv
sub
lret
int3
aas
pop
jmp
xsha1
cmpsb
dec
push
lret
in
jle
add
xchg
jmp
stc
push
jo
mov
out
dec
sub
imul
inc
lods
ret
scas
add
mov
fisttpll
inc
jae
orb
adc
or
push
fsub
add
inc
pushf
push
inc
xchg
mov
xor
push
sbb
xchg
rcrb
movsl
and
adc
cwtl
imul
dec
cmpb
jecxz
xor
enter
dec
mov
push
in
and
pusha
xor
sbb
cmp
stc
insl
jo
sahf
shll
fists
aad
jbe
push
shll
cmp
push
fisubrs
mov
dec
ljmp
cs
sbb
dec
xchg
lcall
mov
and
aaa
bnd
icebp
push
popf
jmp
leave
pop
mov
mov
mov
xor
xor
fprem
test
or
test
pop
sbb
popf
cld
mov
insb
call
xor
inc
fwait
shl
inc
insl
sahf
in
or
jp
inc
dec
xchg
lret
test
into
scas
push
loope
outsl
and
mov
rolb
push
hlt
lods
push
cmp
arpl
or
sarb
shrb
cmpsl
test
sarb
out
test
or
mov
fs
dec
and
mov
in
mov
push
fwait
ljmp
fs
mov
pop
fsubrp
das
pop
rcrb
cmp
push
mov
outsl
es
xchg
out
push
add
push
mov
xchg
xchg
test
bound
pop
sbb
jno
xchg
mov
js
sbb
or
jae
add
xchg
or
test
pop
mov
test
and
cwtl
pop
test
sbbl
pop
in
pop
movsl
movsb
iret
sarl
scas
mov
push
ret
cmp
lcall
lahf
sar
dec
cmpsb
and
mov
rcll
xchg
mov
mov
arpl
insl
mov
std
mov
sub
jb
scas
into
int3
aas
mov
inc
orl
rol
sti
fildll
lret
add
gs
sbb
lods
out
insb
repz
stos
leave
cmpsb
add
sbb
mov
or
jmp
dec
or
ret
out
in
js
cmp
jle
clc
lea
pop
inc
imul
jbe
lret
cmp
mov
subb
add
stos
call
mov
dec
rcll
inc
adc
arpl
inc
cmpsb
push
sbb
mov
xchg
out
mov
sahf
sub
jle
adc
cmpsl
test
das
out
out
int
adc
jae
pop
jge
fisubs
fstpt
mov
sub
nop
push
ss
adc
sahf
sub
jl
mull
xchg
leave
pop
cmp
xchg
sahf
adc
jge
sub
in
add
leave
mov
sub
out
sbb
pop
shll
sub
pop
xchg
mov
fs
mov
mov
inc
jecxz
ficoml
mov
sbb
loopne
stos
test
dec
sub
bound
mov
out
sahf
sbb
add
daa
push
inc
inc
fmuls
and
bnd
movsl
addb
les
or
std
xchg
decb
pop
inc
and
push
stos
dec
add
xchg
xor
or
jge
shll
push
adc
xchg
jg
in
lcall
fsubrp
mov
scas
push
cmp
cmp
cmp
mov
repnz
out
sub
aas
adc
sub
sti
or
pop
lds
sbb
cmp
dec
mov
cwtl
rcrb
mov
cmp
je
test
inc
add
mov
outsl
pop
dec
bound
adc
xchg
push
fwait
mov
stos
adc
jle
inc
jno
iret
pop
movsl
insb
add
jnp
mov
push
imul
out
add
or
dec
and
mov
push
gs
push
xchg
push
mov
lahf
push
cmc
inc
dec
pop
mov
sbb
rorb
push
xor
bound
mov
movb
push
push
and
pop
movsl
cmpsb
je
mov
mov
sbb
cmp
movsl
fists
dec
pusha
out
adc
jge
out
push
mov
imul
jecxz
jecxz
mov
test
or
and
mov
pop
adcl
jmp
int
mov
lcall
icebp
inc
add
adc
fstpt
stos
into
icebp
loop
pop
mov
jo
pushf
push
inc
cwtl
dec
mov
ret
xchg
jp
add
xchg
pop
cli
mov
xchg
dec
cmp
mov
inc
sub
clc
sub
rcll
mov
and
mov
in
or
ljmp
sbb
cmc
cmp
jbe
dec
and
push
pop
fwait
rorl
sahf
inc
arpl
call
adc
mov
int3
cmpsb
mov
jnp
mov
addl
call
sub
pop
jb
mov
cli
imul
nop
adcl
jo
nop
lahf
inc
sub
push
lahf
add
mov
mov
jle
call
in
push
loope
stc
gs
xchg
adc
cmp
lods
stos
stc
clc
lock
fbld
or
xstore-rng
cmpsl
pop
dec
sub
imul
cmc
mov
mov
fnstsw
mov
int
cs
ljmp
mov
xchg
mov
jl
dec
cmpsl
jno
iret
sbb
mov
lods
mov
xchg
sbb
aam
cld
ror
dec
jmp
dec
fst
or
stos
lds
sub
jo
push
leave
mov
or
iret
inc
jge
mov
jne
stos
cmp
add
dec
outsl
mov
fadd
adc
mov
cmp
inc
sbb
int
loop
ss
cmc
movsb
gs
push
push
je
push
jmp
cmp
hlt
out
push
mov
pop
mov
stc
sbb
test
into
enter
mov
nop
sar
adc
std
and
mov
sbb
pop
movsb
or
add
mov
adc
sub
mov
insb
je
xor
repnz
adc
xor
outsl
add
call
dec
adc
push
cmp
jb
lds
adcb
push
and
mov
mov
popf
xchg
sbbl
ds
repz
stc
sbb
mov
pop
pop
mov
fistl
mov
lret
xchg
lea
inc
ss
dec
cmpsb
lcall
adc
shrb
inc
xorb
in
cmp
loopne
les
or
repnz
jno
mov
movsl
scas
xchg
iret
mov
add
jns
jne
enter
fnstcw
fimuls
jnp
js
in
cmp
out
sub
inc
stc
adc
mov
push
outsb
inc
and
inc
push
mov
int
insl
mov
push
sub
add
jb
shlb
mov
push
scas
pop
std
call
in
loope
leave
pop
pop
mov
sub
inc
shlb
mov
jmp
not
inc
jnp
sbb
add
and
mov
jno
dec
test
jmp
stos
fs
iret
in
pop
cli
mov
data16
ss
lea
ljmp
popa
inc
mov
mov
mov
dec
jle
test
pushf
pop
pop
push
jnp
aad
jo
lods
stos
push
push
cmc
or
mov
test
mov
movsl
out
sbb
pop
rorl
test
xchg
and
jle
int3
lods
movsb
movsb
mov
pop
into
inc
lret
jne
out
imul
cmp
sub
lock
pop
rcrl
in
xor
xor
mov
cmp
pop
stc
jns
loopne
insb
dec
pushf
jno
outsb
jnp
addr16
cmp
ja
cmp
aam
pop
jle
sahf
mov
xor
mov
nop
lahf
sar
fidivs
out
mov
filds
lcall
insb
cmp
stc
mov
sbbl
dec
cmp
sub
pop
imul
dec
mov
and
dec
xlat
dec
cld
cmp
xor
pop
mov
adc
imul
jmp
cmpsb
ret
inc
stos
pop
jecxz
lea
push
lock
jecxz
std
inc
push
mov
ret
in
inc
or
xchg
int
sub
and
adc
xchg
lret
movsb
mov
movsl
push
fs
cltd
insb
in
imul
sti
adc
cltd
inc
pusha
jne
test
mov
xchg
xchg
mov
pushf
shl
je
mov
int3
cs
push
out
mov
lods
rolb
sub
jecxz
dec
and
sarb
cltd
mov
icebp
aad
sbb
inc
lods
mov
testl
stos
test
dec
popf
dec
pop
mov
pop
flds
ss
push
pop
xor
cmp
cmp
mov
outsl
push
pop
pop
fldl
pop
sbb
sbb
pop
mov
jmp
xchg
mov
push
xchg
jnp
shr
xor
mov
call
adc
inc
test
jno
cmpsb
ret
aam
and
hlt
bound
sbb
ret
fwait
imul
lods
in
mov
fisttps
fisubrs
nop
mov
xchg
xchg
stos
inc
call
out
or
pop
push
imul
lcall
or
xlat
gs
lret
inc
pop
inc
arpl
mov
ror
addr16
fwait
push
sbbb
xchg
sbb
dec
outsl
mov
ss
pop
jno
pop
inc
data16
popf
jle
outsl
pop
mov
add
ret
sub
in
out
push
int3
fisttps
xchg
lret
test
fbstp
roll
in
add
in
sbb
sub
pushf
fcomp
into
cli
push
in
pop
aad
adc
ljmp
scas
mov
pushf
jp
sahf
cld
sub
push
cmp
xchg
add
cli
add
in
in
and
sbb
cli
mov
jnp
xor
jle
pop
sub
sub
arpl
scas
xchg
outsb
bound
cmp
stc
add
add
cmp
or
lds
fiadds
fisubs
pushf
and
jns
jb
sub
cmp
adc
popaw
loopne
shrb
xor
mov
outsb
in
lcall
cmp
cld
movsl
nop
sub
jge
cmc
inc
jmp
sub
ror
loopne
pushf
add
or
pop
out
arpl
sbb
scas
mov
jne
jne
inc
cli
cmp
jmp
dec
outsl
pop
push
cli
jnp
jge
dec
loope
fwait
loopne
jbe
out
jnp
cld
inc
sbb
in
lock
cmp
mov
nop
pushf
sub
aaa
sbb
mov
xchg
mov
fwait
aad
cwtl
pushf
or
mov
or
fmulp
jb
lret
sar
jmp
fimuls
xorb
sbb
lcall
push
mov
mov
xor
lret
rcrb
xchg
push
push
pop
inc
sbb
xor
test
mov
pop
sahf
push
outsb
inc
and
xor
mov
stos
sbb
jmp
jmp
arpl
outsb
sbb
test
out
push
andb
sar
fs
jno
adc
pop
inc
testl
pop
dec
jnp
arpl
fcoml
into
lods
mov
leave
test
pop
pop
mov
sbb
xchg
orb
xchg
mov
aam
xchg
jle
stos
nop
push
loop
push
xor
push
fisttpl
nop
xor
shrl
inc
add
and
xchg
lahf
roll
push
inc
xor
daa
pop
cli
loope
cwtl
insb
mov
int3
push
mov
add
jmp
and
xchg
test
lret
mov
sub
out
jmp
or
mov
ret
and
xor
cmp
fimull
call
cs
rorl
fcmovb
sbb
iret
mull
fisubs
cli
mov
adc
cs
out
mov
jp
cmp
xchg
cwtl
inc
sbbl
xchg
adc
jno
scas
int3
cmc
jnp
pop
and
repnz
push
or
mov
mov
xchg
dec
push
ss
pop
aam
aaa
loop
xor
nop
call
mov
daa
cmp
jbe
mov
testb
lcall
xchg
dec
test
jns
xlat
repnz
mov
add
sub
lret
pop
sbb
and
lcall
rorl
xor
in
lret
push
pop
xor
mov
xor
bound
in
pop
pusha
adc
and
cmpsb
jmp
scas
or
mov
or
and
imul
add
insb
into
aad
ljmp
and
mov
mov
repnz
mov
fimull
nop
jl
sahf
mov
pop
mov
mov
inc
cmp
or
jp
lret
lds
xor
xchg
lea
aas
sti
push
xlat
test
les
or
scas
dec
lahf
pop
fisubs
adcl
div
sub
mov
sub
out
popf
sub
mov
sub
dec
lods
or
daa
test
dec
cmpsb
mov
cmp
mov
ss
nop
jp
stos
mov
xchg
sarl
insl
or
mov
in
xchg
jg
imull
or
aaa
jns
mov
add
mov
mov
loope
mov
adc
cmc
mov
xchg
push
lahf
mov
push
stos
dec
and
addr16
dec
dec
scas
popa
ret
xor
dec
mov
sbb
push
sbb
and
lds
daa
jle
xchg
pop
mov
push
leave
adc
adc
popa
push
fmuls
push
dec
mov
fmull
pop
xchg
dec
push
mov
stos
xchg
adc
stos
loop
gs
lods
xor
inc
aad
inc
mov
cmp
lret
lcall
leave
adc
hlt
outsb
repnz
leave
jle
and
clc
dec
sub
xor
fwait
xor
or
shl
clc
cli
cltd
mov
and
loopne
fwait
arpl
jl
jo
sbb
shrb
shrl
dec
pop
fstl
or
mov
movsb
js
cmp
dec
lret
xchg
test
adc
dec
pop
stc
outsb
mov
dec
xchg
nop
ret
bound
mov
ss
or
cmc
add
pop
mov
outsb
jae
mov
sahf
mov
cwtl
hlt
sub
jno
mov
in
jl
insl
movmskps
xchg
sub
jae
xchg
orl
dec
imul
ficompl
cmp
pop
mov
and
push
jg
addr16
sbb
fcompl
sub
ret
notb
icebp
or
je
ret
in
in
push
mov
movsl
stc
inc
ss
mov
test
inc
fcomip
push
in
push
scas
push
push
push
clc
sarb
jmp
add
out
or
xchg
pop
ja
mov
js
mov
js
fwait
in
jp
test
jl
cmc
cli
mov
dec
out
adc
aaa
cmp
sub
ficoml
push
ja
mov
mov
jo
add
mov
dec
loop
mov
stc
inc
daa
fbld
out
ret
lods
xchg
stos
notb
inc
lret
cmp
pop
or
imul
jmp
outsb
mov
jno
jae
in
add
and
and
test
dec
and
mov
fsub
outsl
pop
fistpl
or
popf
xchg
insl
dec
sarl
ja
daa
jo
clc
pop
out
lret
shrb
fs
adc
mov
push
mov
mov
push
cmpsl
out
cmp
sbb
push
js
sti
jg
fmulp
out
movsb
fisttps
out
in
rorl
call
mov
mov
ljmp
shll
jp
inc
push
scas
popf
pop
inc
adc
fisttpll
push
adc
dec
and
fistps
test
jg
stos
mov
cwtl
cmp
and
jle
sar
dec
jne
stc
sbb
dec
testl
into
add
mov
jmp
xchg
xchg
inc
adcl
adc
push
jno
test
jmp
js
orb
xchg
jge
scas
xchg
mov
subl
hlt
call
push
jg
add
adc
fcmovnb
adc
xor
push
mov
cmp
add
push
pop
jmp
jmp
sub
fsub
cmpsb
data16
in
cltd
dec
cli
outsl
jae
add
mov
jg
insb
int
arpl
bound
cwtl
and
sub
mov
mov
and
outsl
adc
sbb
jle
mov
add
es
lock
add
xor
adc
outsl
stc
xor
out
or
cmpl
push
add
adc
and
roll
jbe
pop
fstps
mov
xchg
shl
xchg
adc
int3
jnp
mov
std
aas
lret
andb
push
cmpsb
add
sbbb
sbb
repz
mov
andl
push
lahf
xchg
sbb
repnz
or
or
and
pop
movsl
pop
mov
pop
jl
sbb
lea
pop
push
sub
dec
adc
jnp
mov
sub
lcall
cmc
xor
and
mov
mov
mull
scas
dec
loopne
fidivrl
dec
inc
mov
xchg
sub
xchg
xlat
faddl
push
es
xchg
cltd
lods
sbb
popa
rcrb
insl
mov
jmp
and
out
jge
mov
dec
mov
int3
jecxz
movsl
inc
in
cmc
jo
mov
xor
ret
cmpsl
jge
or
aam
scas
push
pop
push
or
popa
fistpl
pop
negl
test
test
sbb
jnp
lock
movsb
in
jmp
and
data16
adc
mov
popa
loop
xchg
in
push
add
int
and
add
addb
mov
or
cmp
lds
sub
mull
lock
inc
mov
add
int3
loop
push
in
gs
icebp
xchg
dec
cltd
mov
push
sbb
jns
out
mov
dec
add
push
lret
cli
into
fs
sbb
jne
rcll
push
or
pop
lods
fisubrl
jl
popf
loopne
jmp
daa
mov
int3
xlat
or
fsubs
pop
inc
aas
lret
push
xchg
fucom
cmpl
fnstsw
into
je
sub
jns
adc
cmp
xor
loope
dec
push
lods
cmp
lods
leave
jmp
xor
mov
adc
repnz
std
mov
mov
inc
aas
mov
cmpsb
rorl
xor
add
sbb
sbb
xor
pop
das
push
sarb
and
decb
cmp
fldl
iret
das
pushf
xchg
lods
mov
adc
sbb
jnp
popf
push
lds
lea
push
imul
xchg
ds
roll
or
add
xor
mov
stos
imul
fstpl
into
add
scas
pop
mov
rcll
gs
mov
lods
mov
and
xchg
sub
inc
inc
jecxz
es
mov
mov
movsb
or
pop
sbb
mov
cmpsl
push
push
cmp
cmp
push
fsubl
pop
shlb
xor
xor
pop
dec
mulb
inc
mov
scas
lods
rolb
adc
mov
or
das
mov
sbb
jne
aam
nop
mov
jl
lret
push
mov
shl
cmp
lcall
out
mov
dec
sarl
or
jo
mov
mov
rorl
les
testl
outsb
out
fists
dec
pop
mov
inc
sbb
pusha
into
rcrl
test
jg
push
ja
sbb
xor
dec
fs
xchg
test
jno
pop
xchg
iret
out
sub
mov
fwait
pop
out
cld
mov
sub
adcl
and
sbb
jmp
test
fcmovnu
jle
test
mov
imul
movsl
or
call
xor
icebp
pop
xchg
jne
or
mov
es
dec
je
dec
aas
adc
cltd
push
repz
in
inc
push
lea
or
in
or
mov
and
sbb
fs
sbb
jecxz
xchg
jno
rcll
mov
adc
cmp
loop
bound
and
or
dec
lods
adc
sub
cmc
xor
in
cmpsb
lret
out
leave
cmpsb
inc
dec
filds
ss
insl
jmp
inc
cmpb
jns
sub
mov
push
mov
pop
pop
pop
xchg
push
fwait
mov
sti
jo
gs
jae
push
cmpsb
daa
mov
loop
lret
punpckhbw
out
xchg
xor
push
pop
in
jns
testb
jmp
and
add
pop
jbe
aas
mov
das
jb
and
xor
jl
cltd
sbbl
cmp
aad
lcall
in
into
outsb
mov
lret
xchg
push
inc
push
push
stc
aam
dec
adc
sbb
rcr
hlt
faddl
cmpsb
adc
pop
sbb
cmpsl
add
push
pslld
stos
mov
push
and
sbb
pop
fiadds
cmp
call
dec
mov
mov
cltd
shr
sti
push
ljmp
loop
jge
and
insl
rclb
call
inc
mov
pusha
push
sbb
dec
xor
sub
xchg
add
mull
aad
into
xlat
insb
or
lret
hlt
xchg
mov
dec
bound
fnstenv
sbb
mov
shr
add
popa
lds
cmpb
in
lds
nop
decl
cmc
push
mov
jge
push
mov
push
xor
jmp
jmp
adc
xchg
test
and
mov
push
or
xlat
lods
xchg
and
add
sub
jg
xorb
cmc
pop
xlat
add
or
in
lcall
flds
fldt
repz
in
ss
pop
lret
test
cwtl
cmp
mov
push
mov
inc
stc
cli
mov
inc
dec
repz
adc
sub
test
push
cmp
push
mov
lods
or
sub
sub
lahf
shl
and
mov
dec
fistpll
in
arpl
cmp
push
push
pop
cmp
dec
bound
mov
pop
mov
and
js
shlb
inc
dec
sub
mov
sbb
mov
or
xchg
dec
pop
inc
xor
and
js
fwait
mov
imul
push
pop
mov
jge
ret
inc
sbb
dec
mov
push
xchg
and
pop
loope
jle
jnp
out
in
incb
xor
std
test
out
fs
jle
xchg
test
adc
outsl
sti
imul
jnp
insl
mov
imul
add
cltd
subl
mov
cmpsb
sbb
in
mov
jnp
jecxz
dec
aas
lods
out
jnp
outsl
fs
fnstcw
fcomps
orl
cmpsb
inc
mov
fs
jns
and
inc
loope
push
repnz
adc
jge
cmp
sbbl
dec
dec
pop
pop
jge
adc
stos
cmp
push
pop
setge
in
loope
push
inc
aas
xor
push
stc
push
mov
js
push
dec
jo
int3
flds
jnp
leave
cld
or
int
movsl
mov
or
popf
dec
add
fistpll
negl
xchg
in
xchg
stos
pushf
sub
into
cmp
jns
xchg
push
cmp
mov
jg
push
shlb
pop
xchg
enter
fsubrl
es
lock
and
fcomps
int3
mov
lret
subb
iret
bound
rclb
or
mov
jns
loopne,pt
xor
push
insb
bound
sub
sbb
imul
imul
andb
push
in
or
dec
xchg
mov
popl
add
leave
pop
mov
and
push
jle
cmp
or
imul
fdiv
rcrl
aaa
aas
lea
sub
fs
fdivp
rcrl
push
xchg
or
add
shl
pop
outsb
push
inc
daa
aas
xorl
hlt
dec
mov
inc
fildl
es
sbb
xchg
ds
imul
dec
enter
pushf
add
sbb
test
xor
dec
sbb
sub
fisubs
popf
sub
and
repnz
xorl
or
inc
mov
jle
dec
in
pushf
mov
push
cli
mov
xchg
jb
adc
loope
roll
call
bnd
jae
pop
loopne
pop
subl
sbb
pop
adc
ret
in
int3
push
push
push
es
bound
das
cli
dec
incl
filds
movsl
out
imul
mov
ret
fstpt
out
imul
jge
push
dec
mul
sbb
rcrb
xchg
loope
cmpsl
rorl
adc
lcall
leave
jne
addr16
in
sub
testl
add
bswap
mov
xor
jae
mov
nop
addr16
xchg
daa
xor
test
ficoms
or
cmp
lods
cmp
fnsave
loopne
cli
jmp
inc
out
stos
push
repnz
mov
sub
cli
je
jne
push
mov
popa
ficoml
pop
aam
cld
popa
mov
cltd
push
sbb
sbbb
test
ljmp
mov
add
loopne
lret
inc
scas
mov
cmp
ret
negl
xor
inc
push
shrl
iret
aas
das
hlt
dec
cmp
sbb
jnp
mov
movsb
jp
xchg
push
sbb
cltd
movsb
lods
jb
and
sbb
pop
js
mov
or
sti
stc
jl
pop
pop
pop
or
push
add
mov
leave
push
inc
sub
inc
and
sbb
shrb
xchg
pop
dec
outsl
fcompl
stos
cmp
arpl
cmpl
push
hlt
mov
subl
pop
xchg
nop
cmp
mov
and
pop
mov
gs
loope
test
jo
sbb
aas
mov
xchg
pop
sahf
sahf
loop
xor
sub
cmp
mov
pop
test
out
icebp
lock
scas
sbbb
push
and
test
add
inc
in
lods
add
push
sbb
inc
in
mov
inc
int3
fcomip
scas
aaa
into
push
mov
insb
fistpl
add
leave
xchg
dec
aaa
icebp
imull
js
les
insb
mov
in
inc
adc
add
in
das
sahf
jns
leave
ljmp
in
dec
push
fisubs
test
add
into
sub
add
lods
out
mov
fs
insb
rcrl
inc
test
int3
out
push
add
push
jmp
mov
outsb
pop
insl
loope
jb
mov
repnz
dec
mov
jns
xor
repnz
dec
and
push
sbb
jl
bound
shll
cmp
cmp
push
xorb
jno
iret
hlt
xchg
pusha
mov
lcall
sarl
int3
repnz
lcall
out
sbb
int
out
mov
scas
sbb
sysret
cmpsl
pop
data16
jns
add
jb
and
test
cli
push
lahf
ss
jb
mov
xor
xor
add
int
jb
sbb
lahf
dec
push
xlat
ret
sub
mov
sbb
or
test
sarb
loop
mov
jp
jnp
or
xchg
mov
fcoml
aad
lret
jns
xchg
xchg
nop
add
push
xor
xor
dec
ja
dec
jmp
xor
sbb
push
fwait
pop
pop
cmp
jne
pop
dec
sbb
int3
mov
rorl
push
movsb
rorb
jb
pop
in
mov
mov
gs
sti
cmpsl
sub
rclb
xchg
dec
mov
ds
iret
dec
mov
lcall
mov
xor
fs
in
in
cltd
jmp
pop
lods
cmp
cmp
rcrb
es
mov
fwait
or
fmulp
test
cmp
cmp
lcall
sbb
mov
sub
shll
push
or
neg
inc
hlt
mov
shll
test
pop
movsb
test
out
inc
sbb
mov
imul
inc
or
mov
push
icebp
xor
fidivrs
movsl
add
mov
mov
stos
nop
scas
sub
and
mov
cltd
sub
adcl
or
stos
mov
sbb
scas
mov
adc
mov
fdivr
sub
push
pop
rcrl
xor
sub
repz
jge
xchg
pop
aaa
fiaddl
data16
pop
mov
or
inc
cwtl
sub
push
inc
data16
ss
push
xor
ds
dec
xor
push
jne
out
sbb
mov
jb
mov
frstors
leave
add
je
mov
or
cmpb
lret
test
mov
arpl
inc
int3
outsl
ja
hlt
mull
int3
mov
pop
sti
mov
xlat
push
out
mov
out
mov
xchg
and
out
rcrb
in
out
xchg
pushf
xor
cli
stos
insl
sub
xor
push
jno
mov
repnz
imul
movsb
mov
lea
jecxz
popf
leave
sbb
sbbb
cmp
sub
xchg
add
pop
xchg
pop
mov
jno
sub
jno
test
ror
in
jmp
inc
shrb
or
dec
test
out
sahf
mov
out
addr16
xor
in
icebp
xor
pop
inc
loop
jae
mov
sbb
xchg
orb
xchg
mov
pop
out
xchg
push
xchg
out
mov
mov
fs
enter
andb
cmp
int
add
aas
add
stos
mov
push
pop
fstl
outsb
out
push
sub
cli
stos
out
out
pop
rcr
dec
mov
mov
mov
inc
sub
ss
fstpl
sbb
jl
incl
cmp
dec
mov
ja
push
sbb
xchg
jg
out
mov
and
mov
data16
pop
xchg
cs
pop
inc
ret
movsb
push
push
mov
test
dec
dec
adc
xchg
adc
xchg
jmp
push
ror
nop
xchg
sahf
mov
sub
dec
dec
push
push
aad
pop
in
je
fcmovbe
arpl
sbb
pop
cwtl
mov
cltd
fdivrl
jle
jne
adc
sub
pop
push
sti
mov
cmc
pop
add
jmp
ja
mov
push
cmp
or
or
mov
mov
mov
mov
add
push
or
frndint
repz
sbb
sbb
add
xor
add
pop
cli
dec
mov
dec
xchg
lods
add
hlt
mov
dec
addr16
leave
dec
jne
push
call
xchg
inc
call
xor
mov
movsl
sbb
jp
cmp
add
sbb
shr
rorl
incb
dec
dec
cmp
push
cmp
add
push
cmp
sti
mull
inc
andl
mov
mov
mov
pop
adc
fwait
out
ja
add
bound
mov
jp
inc
cwtl
les
adc
hlt
mov
add
pushf
inc
lahf
inc
test
push
and
jns
sbb
mov
mov
pushf
rolb
pop
mov
out
pop
insb
in
inc
cmc
push
mov
sti
inc
pop
ljmp
dec
enter
fisttps
jmp
inc
ds
dec
mov
test
outsb
enter
mov
mov
cmp
mov
outsb
js
sub
xchg
lahf
cwtl
fwait
movsl
cmp
mov
outsb
inc
das
sbb
sub
mov
adc
or
stos
jbe
push
inc
xchg
mov
out
notb
out
cltd
into
dec
mov
push
cwtl
sub
adc
push
add
adc
mov
insl
mov
inc
cmpsl
mov
push
adc
nop
loop
pusha
inc
gs
test
fstpt
and
iret
mov
mov
sbb
sbb
ret
cmp
sarl
xor
mov
mov
push
std
rcll
int
outsb
test
movsb
cmp
popf
frstor
adc
inc
jae
mov
in
mov
push
out
inc
push
mov
cmp
jg
mov
adc
add
inc
push
es
pop
pop
in
xchg
adc
dec
lret
mov
je
andb
movsb
fsubl
mov
scas
icebp
pop
cmp
cmc
fimuls
mov
adc
scas
jge
aam
scas
hlt
inc
jg
xchg
pop
movsb
addr16
cmpsb
jle
data16
push
ret
sbb
or
dec
add
push
inc
daa
fdiv
sub
loop
dec
cs
int3
inc
ja
mov
pop
cmp
sbb
out
mov
fstl
pop
imul
pop
aam
pushf
jae
fwait
dec
or
call
popl
or
repnz
dec
das
adc
lock
jl
inc
cli
inc
aas
push
push
and
scas
jmp
ds
inc
or
pop
cmpl
imul
jnp
add
lock
mov
add
dec
jge
push
xor
sbb
imul
sub
cmp
addr16
mov
push
dec
dec
fimull
push
xor
rclb
jo
push
repz
xor
stos
sti
sbb
and
adc
sti
loop
adc
out
jl
sub
loop
sub
shrb
fldl
jmp
mov
rcr
nop
insl
dec
jno
mov
sbb
rcl
lods
sahf
fsubrs
lods
fwait
xchg
test
mov
loop
sti
jp
push
mov
leave
xchg
add
jp
sbb
lcall
cmc
jo
lret
and
xor
pop
mov
ret
xchg
push
lods
or
pop
das
popa
scas
and
and
ljmp
or
lea
xchg
ljmp
pop
outsl
test
pop
loope
imul
iret
push
rcrl
ja
sub
cli
loope
data16
pop
push
push
push
movsb
jmp
push
jle
repz
adc
push
fwait
and
adc
mov
jae
mov
cltd
hlt
filds
add
add
outsb
or
add
sub
cmp
repnz
jmp
test
push
cmpsl
sub
je
xchg
lea
stc
mulb
and
lods
xchg
or
xchg
int
out
xor
xor
incb
cmpsl
test
push
mov
mov
ja
mov
pusha
lahf
test
ss
lret
in
push
movsl
xchg
add
pop
xchg
dec
cwtl
orb
cmp
lcall
negl
dec
xchg
pop
leave
add
mov
jg
jecxz
data16
push
leave
popf
xchg
jecxz
ja
icebp
jp
sbbl
int
xorb
or
push
cli
sbb
lods
push
sarl
adcl
jnp
add
push
ds
inc
push
mov
repnz
xchg
inc
fucomi
add
in
frstor
stos
cmp
sub
push
mov
xchg
shl
std
sahf
sarb
int
and
sbb
dec
fcoml
js
xchg
cmp
fucomip
or
dec
test
cmovl
dec
cli
icebp
scas
push
insl
sbb
aas
mov
in
push
les
cmp
xor
jno
mov
scas
or
imul
rcrb
dec
sub
scas
pop
fbld
jg
push
test
jo
mov
aam
mov
popa
push
add
jmp
xchg
aad
shlb
leave
push
lods
rclb
sti
dec
inc
mov
xchg
sti
cli
lods
dec
push
mov
stos
test
or
aas
imul
jge
sbb
popa
popf
and
mov
int3
ret
xchg
sbb
stos
shl
dec
pop
movsb
pop
sbb
je
fwait
sbb
add
sbb
and
rcrl
hlt
int3
mov
out
es
sub
insb
cmp
negl
xchg
ficompl
jmp
cmp
mov
test
andl
jle
in
adc
fcoml
xorl
push
dec
pop
pop
jg
shlb
mov
inc
adc
fsubrl
aaa
sub
jmp
push
jno
mov
stos
pop
fstpl
fstpt
repnz
adc
cmp
mov
add
fnstenv
pop
and
xor
push
xchg
sub
loope
mov
mov
stos
ljmp
stos
fwait
jl
in
push
adc
ss
mov
push
out
lock
xlat
sti
xchg
lods
and
test
mov
lea
sbb
xor
popf
mov
xor
add
or
loopne
test
imul
testb
imul
call
inc
mov
mov
cmpsl
jae
cmpsl
mov
in
test
push
jnp
icebp
push
or
cmp
js
std
fistl
cld
add
les
lods
xchg
pop
sub
testb
pop
imul
popf
mov
data16
or
loope
mov
adc
mov
pop
sti
out
xchg
fldcw
cmpsb
mov
xor
xchg
int3
mov
test
stos
sub
clc
and
add
cmc
ljmp
rcll
mov
imul
sbbl
xorb
cmc
and
sbb
jge
stos
mov
ret
pop
and
pop
jg
and
xor
and
mov
call
sbb
mov
das
push
dec
mov
cmpsb
loopne
add
dec
mov
test
pop
inc
jg
in
in
mov
cltd
cld
out
lods
pop
pop
test
les
in
and
mov
jns
stc
ljmp
gs
mov
mov
std
dec
xor
mov
add
sti
mov
add
pop
jmp
and
int
or
push
mov
adc
ds
jg
inc
jle
xchg
and
cwtl
cs
das
enter
sbb
push
popa
pop
mov
popf
insb
loope
hlt
mov
fcoms
inc
mov
aam
sbb
cmp
add
add
shll
test
mov
es
or
cmp
mov
xchg
push
push
mov
repnz
lea
fldcw
push
jb
rcll
mov
jg
fstpt
push
out
aaa
popf
insb
and
test
ja
pop
or
cmpb
mov
adcb
std
test
js
je
jne
lds
je
mov
rorb
je
fwait
mov
cltd
pop
xor
insb
in
orb
clc
das
and
dec
aam
int3
ds
jnp
mov
aaa
pushf
gs
les
mov
sbb
ret
or
movsb
mov
inc
cmc
push
repnz
cmp
dec
imul
test
xchg
aas
in
cmp
pop
cmp
xor
fdivs
stos
sub
ret
mov
push
xchg
sti
lods
arpl
mov
mov
enter
nop
or
repz
and
cmc
sub
nop
adc
push
push
les
pop
mov
pop
sbb
ds
sub
xchg
mov
push
or
pop
mov
imulb
inc
mov
xlat
shrl
dec
cmpb
cld
mov
mov
push
rorl
scas
mov
xor
mov
std
scas
sbbl
jmp
aaa
jae
adc
mov
mov
inc
ljmp
insl
cmpl
out
mov
cwtl
jns
mov
imul
ljmp
pop
push
stos
mov
repz
mov
je
hlt
fnsave
mov
mov
out
mov
daa
xlat
push
jo
xchg
xchg
add
pushf
inc
push
xchg
mov
mov
push
repz
loopne
sub
add
pop
lret
dec
mov
push
jns
push
lds
xchg
test
shlb
out
lea
stos
les
mov
stos
add
xor
in
cltd
rolb
mov
push
cmc
xchg
idivl
idivl
mov
test
mov
mov
icebp
hlt
jno
sub
scas
jae
mov
rcrl
mov
inc
cmp
filds
mov
cmp
pop
mov
cmp
sbb
es
dec
xchg
pusha
jge
add
pop
je
push
fnstcw
pop
movq
sub
insl
movsb
cwtl
inc
jb
xor
jg
out
je
lods
inc
xchg
and
in
xorl
rcll
mov
jns
out
xchg
add
pop
fdivp
leave
in
jae
mov
push
xor
mov
or
es
sti
ret
xchg
stc
adc
pop
cmp
hlt
xchg
add
test
and
xor
ss
dec
lock
xchg
je
icebp
movb
sbb
lea
mov
mov
test
add
pop
pop
adc
adc
mov
adc
push
mov
lods
cmpsb
shrl
mov
inc
lds
mov
addb
pusha
adcl
and
arpl
lcall
pop
mov
lret
dec
movsb
fists
movsl
xchg
mov
test
out
stos
test
imul
call
sbb
pushl
cmpsl
cli
idivl
aas
xchg
fstpt
sbb
dec
not
pop
ret
push
fs
xor
sub
inc
cmc
inc
sub
ja
call
push
and
rorl
xor
jp
inc
stc
ret
xchg
cs
mov
adc
mov
clc
leave
es
xor
das
sbb
fs
fsts
mov
fldl
ret
inc
adc
rcrl
test
mov
push
inc
pcmpgtb
out
mov
arpl
out
orb
or
mov
cs
cmp
cmp
icebp
inc
jno
ja
add
or
cli
fldenv
das
push
leave
xchg
aaa
leave
ffreep
int
lods
lcall
push
cmc
and
int3
inc
cmp
cmp
movsl
inc
lods
ret
inc
dec
lods
imul
xchg
movsl
imull
ficomps
sbb
jae
test
ret
mov
jmp
mov
xchg
nop
mov
jnp
xor
arpl
xacquire
rorb
or
sub
ficomps
or
adc
gs
in
add
inc
xchg
inc
xor
stos
gs
mull
pushl
adc
mov
push
rcr
loope
pop
add
cmpsb
popa
mov
xchg
pop
out
icebp
sbb
data16
jle
cmp
mov
sbb
pop
shlb
push
iret
xor
push
in
ja
dec
lea
xor
sub
push
sub
xchg
cmp
or
inc
xchg
mov
fsubrp
and
roll
nop
call
push
das
mov
test
xor
loopne
stc
mov
push
xor
test
and
mov
jp
mov
inc
and
inc
cmp
ljmp
fimull
mov
aaa
int3
dec
icebp
cmp
lea
sbbb
cmp
add
jns
sub
cld
shll
cmpsl
les
movsb
add
popf
push
or
push
sbb
das
xor
sarl
roll
jbe
push
push
cwtl
std
in
fildl
js
dec
pop
inc
cmovl
and
out
in
pop
stc
xchg
iret
mov
mov
or
sbb
cmpsb
pop
sahf
aad
mov
or
pushf
into
outsl
rorb
sbb
loopne
sti
movsl
mov
sub
adcb
repz
movsb
push
addr16
stos
inc
lret
cli
lar
repz
dec
cltd
cmpsb
and
loop
fwait
inc
and
xchg
loope
gs
pop
sub
das
or
push
sbb
in
mov
gs
inc
mov
mov
lods
push
std
nop
cld
cmp
subb
mov
add
or
jae
stos
adc
mov
sub
sbb
xor
dec
fidivl
jne
lods
and
pop
and
add
lahf
dec
mov
ds
lods
push
ret
sub
clc
dec
mov
stos
lds
pavgb
mov
or
ljmp
dec
popl
jno
jmp
sbb
loope
jmp
push
mov
xchg
pop
sub
das
outsb
out
jl
xchg
gs
mov
in
sub
and
adc
bound
mov
mov
hlt
out
fildl
xor
adc
mov
lock
mov
mov
ret
lea
ljmp
popf
int
outsl
mov
orb
pop
icebp
push
xchg
add
xor
imul
dec
fidivrl
jle
sbb
int
push
into
popa
imul
sahf
and
adc
mov
fsts
inc
mov
ds
pushf
outsb
or
lods
dec
and
jne
jne
mov
mov
sbb
repz
bound
jo
lds
push
andl
mov
xchg
sbb
fwait
out
xchg
mov
add
mov
pop
adc
aaa
les
fs
daa
ds
lret
pushf
insl
cmp
std
mov
mov
cmp
xchg
orl
jnp
aam
js
mov
aad
repz
xchg
adc
mov
inc
jge
test
movsb
dec
fistpll
pusha
repnz
pop
and
clc
jb
rcr
jnp
push
je
and
scas
and
test
cmp
or
les
js
fldl
sub
push
or
in
xchg
sbb
pushf
pop
rcrb
push
cmpb
xor
push
pop
mov
and
in
cld
cmp
andl
adc
jne
cs
pop
xchg
inc
xchg
pop
pushf
sub
lret
push
arpl
ds
push
xor
pop
ds
push
ljmp
stos
pusha
cmp
push
loope
mov
int
mov
push
int
testl
scas
push
lret
pop
sarb
sbb
test
sbb
mov
pop
ljmp
add
ljmp
xchg
pop
adc
adc
lahf
push
pop
jae
sbb
sub
dec
int
inc
clc
sub
shlb
sarb
adc
ret
mov
imul
jnp
dec
daa
cmp
das
cmc
fcoml
adc
outsl
fstpl
add
dec
int3
sti
cmp
test
push
movsl
hlt
mov
mov
inc
push
adc
add
int
xchg
xchg
mov
out
fiaddl
leave
jns
xchg
fld
push
daa
shlb
sub
int
filds
jae
loope
add
inc
xor
pop
test
ja
jbe
pop
xchg
es
dec
add
push
lea
and
ds
mov
jbe
sysenter
and
xor
xchg
sahf
cmpsl
std
loope
cmp
sti
adc
jg
addr16
cmp
mov
xor
and
sub
cmpsb
and
movsb
out
inc
or
add
lods
ret
mov
xor
or
stc
sbb
ja
aad
dec
mov
out
addl
bnd
ja
int
ror
orb
sarb
mov
cltd
ss
loope
adc
sarb
sbb
dec
push
mov
xor
push
pushf
push
push
ret
push
and
mov
xchg
pop
jo
xlat
sbb
faddp
cmp
sbb
and
inc
std
aad
pop
push
adc
enter
pop
in
cmp
mov
or
or
cs
push
loope
cwtl
lds
insl
mov
std
dec
sbb
sbb
xor
pop
jge
pop
inc
push
add
sbb
cmpsl
es
mov
aas
les
outsb
rcll
cltd
stos
outsl
jg
dec
bound
enter
inc
add
xchg
dec
into
cmp
pop
xchg
pop
cmp
ret
jnp
mov
aas
repnz
in
and
mov
pop
push
xchg
dec
int
fwait
dec
inc
je
ret
lods
jbe
sub
xchg
pop
jae
mov
mov
mov
mov
loop
jecxz
mov
inc
add
ror
scas
inc
dec
jp
sub
mov
mov
cmp
enter
sbb
imul
scas
repz
cmp
int3
and
les
orb
push
push
das
iret
shrb
jmp
push
fistpl
dec
cmp
mov
aas
data16
adc
xor
pop
out
hlt
aad
add
or
xor
adc
and
push
psrad
xchg
mov
sbb
mov
dec
dec
enter
pop
pop
test
cmp
mov
cmp
outsl
loopne
test
xor
push
repnz
repz
lock
lahf
jp
inc
enter
xchg
adc
shll
iret
xchg
xor
outsw
jp
inc
jnp
mov
adc
xor
fildl
inc
scas
test
pop
in
imul
fstl
adc
mov
nop
daa
sahf
test
out
sbb
rcr
push
mov
inc
xor
mov
cmp
xchg
inc
out
std
and
lahf
and
mov
in
mov
jge
dec
cmp
icebp
mov
popl
shll
aam
xor
xor
inc
add
xchg
mov
mov
in
xor
add
aad
sub
stos
mov
mov
xor
mov
fisubl
or
add
out
call
test
inc
or
lods
jp
ss
lret
push
test
roll
pop
mov
push
xor
cmc
or
xchg
push
ljmp
stc
inc
stos
lods
add
xor
into
jmp
sbb
inc
lahf
sub
arpl
stos
xor
add
mov
xchg
pop
insb
mov
adc
pop
vpunpcklwd
cmp
outsl
cmp
outsb
mov
lret
cmp
and
inc
dec
or
shrl
in
cmp
inc
stc
shlb
fstpl
mov
mov
pop
lds
inc
xchg
imul
push
xchg
dec
or
mov
mov
xchg
repz
inc
data16
mov
mov
sub
and
fs
fisubs
pop
iret
and
imul
mov
adc
cld
and
mov
rorl
arpl
push
dec
inc
fisubs
lret
bound
js
loope
mov
mov
sub
cmp
mov
in
lea
lock
stos
lods
inc
mov
and
jge
stos
xchg
cmp
push
shrb
daa
jns
mov
in
cmpb
lahf
fdivrl
loopne
cmpsb
cmp
cmc
sbb
cmp
inc
imul
in
push
adc
shrb
and
xchg
cltd
ljmp
fildl
or
xchg
scas
xchg
inc
mov
mov
fisubl
cmp
fdivrl
test
xor
and
jns
xchg
fdivp
mov
in
in
icebp
jmp
push
aam
pop
or
xchg
and
xor
jp
xchg
movsl
mov
mov
adc
pushf
fimuls
imul
jmp
xchg
pushl
adc
jmp
and
push
push
int
sbb
mov
orl
pop
push
and
adc
cmp
push
in
sub
jl
jns
je
mov
xlat
out
sbb
xchg
sub
imul
imul
mov
jne
movsb
push
ret
push
jbe
shl
pop
mov
add
sub
adc
adc
xchg
test
and
std
cmp
fcmovnb
add
cmp
or
lea
dec
call
jo
and
fidivrl
jb
mov
lock
mov
popf
mov
stos
push
sub
mov
pop
ret
stos
ret
rorl
mov
dec
push
cmpsb
jae
into
mov
sbb
repnz
stos
insb
popf
sbb
pop
hlt
cmp
loop
shufps
push
andb
fcmovb
adc
sbb
imul
mov
sahf
sbb
sub
jle
mov
fisubrl
or
nop
roll
sti
jo
lret
sbb
xchg
push
sbb
test
outsl
fistpll
into
in
xor
sub
sub
adc
add
jb
out
push
loop
sub
sbbb
mov
push
notl
and
jge
fadds
int3
jl
fst
push
mov
pushf
lods
leave
aam
stc
rorl
adc
loop
dec
data16
js
js
xor
sub
loope
gs
xor
jae
daa
push
mov
iret
insb
addr16
cmp
pop
fisubrl
mov
sbb
inc
adc
fcoms
or
incb
pop
adc
jl
jae
mov
sub
add
jmp
xchg
insb
subb
pop
xchg
outsb
out
dec
pop
jecxz
mov
gs
jecxz
stc
push
movsl
cltd
insl
mov
in
dec
pusha
test
xor
pop
loopne
in
call
aam
insb
cmp
dec
cmp
and
push
inc
outsl
fsubrs
xchg
lcall
outsb
sahf
je
repnz
pushf
in
out
bound
in
sarl
lcall
add
fcomi
enter
test
and
pop
leave
pop
mov
xchg
and
pop
shrb
outsb
pop
cmp
in
fdivrl
lret
push
rcrl
push
xchg
add
scas
or
pop
cmp
mov
inc
data16
jb
in
xor
movsb
pop
pop
push
pop
inc
cltd
rcrb
repz
ficomps
cmp
lcall
inc
mov
lea
and
mov
pop
hlt
fsts
or
jge
mov
mov
dec
dec
sub
aam
cli
jne
or
shlb
cmc
in
leave
popa
bound
add
mov
scas
mov
scas
bound
lea
adc
cmc
and
and
inc
jb
and
push
int3
ficomps
lods
add
fcoms
dec
repnz
cmc
test
sarl
loopne
aas
cmp
push
jns
push
pop
jno
adc
push
int3
rol
or
xor
adc
and
pop
push
cmpsb
dec
cmp
leave
or
pop
cmpb
inc
sub
dec
flds
incl
icebp
add
sbb
inc
or
cmpsb
lock
jge
sbb
js
sbb
pop
stos
jo
or
sub
scas
push
dec
cs
imul
adc
dec
cs
sbbl
stos
inc
inc
sbb
mov
and
and
push
mov
fstps
lock
mov
cmpxchg
mov
lea
mov
cmovae
int
or
pop
std
and
sbb
jmp
xor
aaa
pushf
dec
sahf
sub
shl
jns
xchg
add
pop
jmp
mov
sub
and
aas
jno
lret
sti
and
daa
add
xchg
jns
loop
push
push
stos
adc
adc
mov
subb
test
inc
jl
inc
std
aad
adc
aaa
call
or
xor
mov
pop
sbb
xor
dec
mulb
dec
cltd
and
movsb
je
xchg
out
out
and
dec
rorl
rcrl
les
xchg
movsl
cmpsb
mov
push
sbb
pop
inc
lret
cs
push
int
pop
aaa
jge
data16
leave
nop
mov
push
xchg
frstor
aaa
xor
push
push
stos
sbb
inc
xchg
gs
sbb
pop
mov
mov
mov
ret
scas
in
call
jg
fxrstor
insb
loopne
pop
pop
sub
mov
fwait
ret
pop
or
hlt
lds
lds
call
push
lahf
fs
hlt
inc
xchg
push
dec
xchg
popf
push
push
sub
into
sub
dec
dec
hlt
popa
mov
push
dec
fildl
shl
dec
xchg
or
mov
jns
test
pop
mov
imul
cli
call
cmp
data16
scas
cmp
imul
mov
sub
lds
stc
sub
jae
in
mov
inc
mov
out
fwait
and
xchg
testb
cmp
mov
adc
jge
or
jno
aad
push
and
popa
les
enter
xor
pop
xchg
add
push
xchg
insb
gs
xchg
pop
lds
cli
or
aas
and
adc
and
cmc
xor
jno
in
imul
xchg
jg
add
xor
push
push
imul
mov
cltd
mov
xor
cmp
jl
imul
push
pop
call
pop
jg
into
pop
mov
shrl
out
iret
ret
inc
sarb
adc
mov
and
adc
es
fdiv
lcall
out
stos
in
mov
cmp
cmpsl
mov
xchg
mov
push
xor
je
stos
mov
add
jge
fcomps
shll
das
ret
xorl
mov
push
sbb
push
sub
sbb
cmp
test
push
dec
aam
sbb
xor
add
sub
sbb
mov
dec
xchg
fisttpl
loop
leave
mov
jo
imul
inc
dec
lss
jl
mov
clc
dec
into
popa
sub
and
in
mov
ret
imul
xchg
jl
daa
arpl
push
stos
lock
outsl
mov
cmc
movsb
push
icebp
sub
push
adc
or
mov
rclb
test
lea
loopne
insl
daa
stos
js
fbstp
or
xchg
aam
js
adcl
icebp
in
mov
popf
ror
and
clc
and
xor
push
inc
je
jno
jno
xchg
sbb
cmp
sub
outsl
jne
add
mov
push
mov
hlt
sarb
push
add
sub
xor
xor
mov
pushf
push
call
push
mov
icebp
out
sar
cwtl
test
inc
fwait
mov
insb
inc
loop
dec
popf
adc
add
js
mov
lds
and
outsb
in
aas
sti
leave
adc
pop
lods
movsb
arpl
mov
push
aad
push
sti
xor
ljmp
add
xor
push
dec
lret
mov
ret
lods
addr16
or
sti
jno
mov
jbe
or
mov
jns
mov
out
inc
sti
inc
daa
sub
and
mov
sti
cmc
mov
mov
jb
arpl
pop
aam
mov
sbb
cmpsl
scas
sti
inc
popf
and
sti
xchg
mov
mov
in
mov
pop
fistl
aas
insl
xor
mov
mov
movsb
lods
daa
push
inc
push
add
mov
sub
popf
lds
cmc
inc
push
test
dec
pop
roll
or
mov
cmp
cmp
adc
lret
fs
or
inc
inc
or
std
mov
xchg
add
mov
cmp
cmp
pop
fsubrs
push
push
das
leave
mov
movsb
adc
add
mov
dec
test
inc
jns
mov
insb
icebp
pop
cmpsl
sbb
pop
popf
sub
aad
inc
test
insb
xchg
pop
iret
das
pop
mov
inc
dec
sbb
and
dec
mov
mov
jbe
les
xor
xchg
fsubr
xchg
loope
pop
jmp
cmp
jge
sbbl
xlat
add
inc
fwait
dec
stos
pop
movsb
mov
stos
enter
adc
push
lods
mov
dec
sub
and
mov
shlb
inc
jbe
int3
daa
mov
in
rcr
daa
mov
js
dec
ss
cmp
inc
imulb
xchg
aam
and
dec
lods
setbe
loope
das
mov
ret
and
cmp
pop
mov
push
sarb
test
pop
mov
fcmovbe
xchg
movsl
gs
aam
pusha
sbb
aas
pop
lahf
pop
outsl
loope
int3
push
xor
adc
arpl
add
test
jne
push
cmp
ja
cs
test
fstps
dec
add
inc
stc
sbbl
dec
test
fistpl
test
xchg
mov
add
mov
je
in
pop
in
into
jne
pop
ficomps
test
xlat
ds
inc
jecxz
xchg
cmpsl
stos
cmp
lret
dec
mov
pushf
arpl
test
idivb
jmp
aam
std
cmp
push
lahf
xchg
sbb
out
in
mov
cltd
in
pop
stos
scas
xor
cmp
fnsave
pop
movsb
xchg
es
jecxz
rorl
nop
call
cmp
addl
imul
test
sbb
mov
dec
mov
sub
jno
push
and
and
cmp
daa
jo
or
jl
mov
subl
pop
mulb
mov
mov
fst
lock
mov
inc
lret
sahf
test
outsl
jle
insb
mov
push
add
xor
mov
cwtl
pop
mov
adc
fwait
scas
hlt
adc
adc
inc
lret
dec
out
sbb
or
mov
mov
insl
sbb
imul
popa
hlt
je
orl
adc
dec
pushl
lcall
and
xchg
pop
push
cmp
cmp
mov
cmc
jo
sbb
faddl
fwait
cmpb
mov
dec
mov
nop
cld
lds
mov
mov
push
in
mov
lret
out
xchg
xlat
popf
xor
xchg
fmuls
scas
test
adc
and
int3
xchg
push
leave
js
jmp
fistps
sbb
sar
mov
xchg
insb
cmpl
xchg
inc
movsb
cmp
jmp
jmp
adc
xchg
dec
test
jmp
and
ret
lock
mov
mov
push
pop
xchg
xor
hlt
adc
das
jmp
mov
xchg
jle
and
pop
ja
lock
sahf
sbb
insb
inc
lds
jmp
pop
and
ret
adc
pusha
aaa
add
push
push
cmp
pop
add
push
fcompl
jle
adcl
mov
daa
cmpsb
xchg
fbstp
popf
orl
pop
scas
push
mov
xchg
mov
ret
inc
aam
lock
cmp
lea
pop
xchg
mov
add
imul
push
dec
lods
pop
dec
mov
pushf
pop
lret
lret
xchg
mov
sti
movsl
mov
sub
jnp
cwtl
xchg
ficoml
push
in
sub
sti
add
cs
outsl
jp
test
movsl
mov
sbb
ret
inc
lds
pop
jbe
js
inc
out
lock
sbb
sub
mov
aas
sub
sbb
jmp
lds
fucomip
data16
adc
mov
sbb
cmp
mov
inc
push
mov
out
dec
addl
lcall
push
nop
mov
jg
insb
sbb
ds
roll
repz
in
stc
aaa
stc
xor
int
addr16
add
pop
aam
shll
add
mov
mov
mov
and
aad
mov
in
pop
imul
insb
pusha
sub
xlat
push
movsb
xchg
xor
or
xadd
out
xor
xlat
out
dec
flds
aad
cmc
cmp
sbb
scas
dec
cmp
adc
push
add
cmp
out
hlt
rorl
xchg
fsubs
xor
push
push
iret
out
aad
inc
adc
and
dec
xchg
adc
mov
adc
fcomps
mov
aas
ret
mov
popf
jae
or
add
addr16
cmpsl
outsb
inc
mov
mov
and
es
and
dec
sub
mov
jmp
das
ret
lret
into
out
sub
aad
shll
mov
fisubs
clc
mov
test
js
imul
and
push
mov
lock
mov
sbb
mov
repnz
sub
jno
mov
inc
jae
mov
mov
mov
leave
or
cli
push
leave
xchg
sbb
cmp
ss
adc
jnp
push
repz
cmpb
pop
dec
dec
cmp
add
push
es
decl
pop
out
test
sub
or
into
lea
xchg
clc
stos
ret
divb
shl
ljmp
dec
or
imul
ljmp
fwait
leave
shll
dec
fcmove
dec
pop
shr
xor
sub
jmp
sti
insb
cmp
mov
sbb
pop
out
jecxz
ret
push
push
fnstenv
std
jmp
cmpsl
in
jg
sub
loop
fmull
gs
or
jg
loop
jp
cmp
sub
into
in
xchg
pop
stc
jecxz
fsubrl
mov
xchg
dec
push
insb
movb
loopne
mov
test
lds
and
push
fcomi
subb
dec
add
sub
lods
jge
xor
shlb
out
mov
lret
sahf
lock
jge
sub
sbb
push
decl
mov
ja
and
mov
lock
pop
lret
cmp
sub
clc
stc
mov
or
ss
and
pop
lds
loope
inc
add
cli
cmpsb
repnz
pop
test
outsb
xchg
cmp
cs
mov
push
std
mov
mov
and
mov
xlat
mov
cmc
ljmp
aaa
push
and
jle
loop
test
test
mov
push
mov
int3
sbb
outsl
mov
sub
arpl
sub
dec
repz
or
adc
jb
xor
mov
dec
ret
mov
push
das
mov
les
nop
fistpll
push
mov
sarl
sub
xchg
mov
imulb
mov
mov
pop
or
cmpsb
sti
pop
push
mov
repnz
loopne
fmul
xchg
jg
pop
scas
jle
nop
jle
andb
ret
mov
mov
xor
pop
adc
scas
ja
test
inc
adc
out
orb
lcall
add
test
add
shll
lock
or
scas
int
movsl
ds
sub
incl
fidivrl
or
ret
fldl
sub
ja
mov
or
arpl
shrl
dec
and
pushf
mov
psllw
push
push
jne
pop
call
push
int3
setae
imulb
xchg
lahf
sarl
imul
and
in
lods
pop
mov
pop
push
mov
fs
js
fcmovbe
or
adc
fistpl
jmp
cmpb
sbb
pop
aam
sbb
call
lods
pop
rorl
stc
pop
lods
negl
dec
sti
adc
sahf
adcb
popf
ret
stos
xor
xor
fs
cwtl
lret
call
dec
jne
addr16
roll
in
pop
aas
repnz
or
mov
aas
sub
mov
das
jb
add
pop
inc
iret
lret
lds
out
arpl
fadd
inc
clc
mov
add
ret
sub
mov
xchg
jecxz
dec
jecxz
out
sub
jecxz
sub
xchg
add
loop
adc
pop
enter
in
cld
mov
mull
xor
push
test
cmp
pop
xor
aam
jae
in
popf
pop
inc
hlt
pop
loop
movsl
add
pusha
bound
sarb
enter
mov
push
clc
inc
pop
push
lods
bound
adc
mov
xchg
sbb
flds
adc
insb
loopne
dec
sbb
orl
mov
add
mov
mov
xchg
mov
adc
test
movsl
dec
mov
aas
gs
lock
mov
add
stos
xor
mov
pop
loope
pop
lret
and
ljmp
mov
inc
outsb
push
in
sahf
adc
jle
pop
int3
mov
shl
test
inc
xor
aas
adc
stos
cmpsl
gs
push
sarb
dec
fsts
xchg
xchg
mov
adc
cmc
mov
fbld
pop
mov
pop
sahf
outsb
jmp
lret
mov
sbb
out
mov
rolb
test
xchg
mov
and
hlt
mov
mov
sub
mov
enter
rolb
mov
mov
pop
test
push
sub
mov
mov
push
mov
dec
fidivrs
adc
inc
icebp
mov
mov
sarl
xchg
sub
pusha
cmp
push
loop
inc
cmp
adc
or
pop
in
mov
es
cld
out
aas
std
xor
mov
xchg
or
or
and
sub
push
mov
and
dec
pop
mov
jmp
inc
cmp
fiadds
push
add
xor
fdivrl
bound
mov
fs
stc
add
mov
es
in
inc
mov
icebp
adc
mov
mov
xor
das
dec
inc
sub
ds
cli
jno
les
movsl
pop
ja
aad
imul
std
jno
popf
clc
aaa
cmp
mov
or
xchg
cli
es
sub
ffree
int3
mov
push
fldl
lea
jmp
jp
andb
pop
je
xchg
xor
fldl
dec
std
mov
push
imul
outsb
ret
cld
jnp
pop
and
pop
imul
sub
mov
mov
pop
hlt
jmp
lahf
mov
ja
aam
insl
mov
jge
and
xlat
jmp
push
inc
xchg
ss
pop
xor
cli
sti
mov
repnz
mov
ja
fs
add
or
dec
loope
out
dec
aas
jg
into
xor
push
outsl
mov
add
xor
jne
sti
int3
outsl
fimull
into
sahf
sbb
jp
push
cld
jl
js
je
or
and
dec
test
sarb
test
xor
mov
cmp
mov
mov
orl
flds
fcom
icebp
into
iret
add
and
lret
les
sbb
mov
addr16
dec
inc
scas
pop
or
sub
popa
data16
loop
or
stos
xchg
adc
adc
dec
insb
add
int3
mov
ja
aas
test
sub
cltd
sti
lret
sarb
fwait
aaa
cld
addr16
mov
test
lea
pop
sub
cmp
call
push
in
aas
mov
fsubrl
mov
jmp
fs
lods
adc
lock
loop
outsl
in
inc
lret
addr16
mov
sub
add
xor
popa
inc
dec
mov
xlat
clc
out
sbb
fs
jge
cmp
leave
dec
inc
xchg
add
mov
push
sub
cmpsb
inc
gs
pop
mov
mov
mov
push
pop
xchg
movsl
sbb
dec
push
mov
mov
cmpsb
mov
cmp
scas
int3
in
xlat
inc
out
and
insb
fbstp
repz
jge
push
insb
mov
pop
add
mov
sbb
out
and
mov
sub
xchg
inc
pop
pop
xor
push
out
mov
push
cmpsl
clc
mov
in
add
mov
mov
cmp
fmuls
fwait
mov
push
or
les
adc
hlt
cld
xchg
cmp
fs
je
and
mov
pop
hlt
ftst
outsl
add
dec
add
fs
pushf
xor
mov
dec
mov
iret
fstpl
repz
test
icebp
insb
es
nop
test
lret
dec
clc
nop
in
xchg
xchg
inc
cmovnp
inc
jbe
sbb
jb
in
xchg
xor
xchg
xorb
push
fnsave
mov
mov
lret
xchg
inc
adc
daa
mov
dec
shr
fcom
dec
int
loop
int
and
out
pop
jne
ljmp
add
mov
mov
faddl
dec
icebp
pop
outsl
les
daa
xor
xor
pop
sub
ret
push
sbb
hlt
sbb
xchg
mov
lds
jge
stc
xor
pop
adc
call
hlt
sahf
mov
pop
cli
mov
mov
mov
cmp
push
inc
pop
pop
ds
xor
and
in
fimull
stc
mov
ret
push
xor
movsb
jno
ret
lret
insl
sbb
addb
sub
mov
das
pop
arpl
jmp
mov
sbb
daa
data16
mov
pusha
stos
inc
mov
xchg
pop
popf
cmp
push
lods
ja
pusha
nop
inc
sbb
sub
sub
ret
jl
adc
jl
pop
das
jp
dec
pop
stos
nop
sar
ret
fsts
push
jne
cli
shl
arpl
movd
sub
outsb
add
outsb
test
cmp
dec
ds
mov
shl
pop
sub
mov
scas
dec
js
sbb
test
mov
push
pop
mov
cmp
icebp
add
sub
xorb
and
pusha
adc
addr16
cmpsl
ljmp
aad
fwait
mov
mov
mov
sahf
loope
jae
push
mov
and
rol
test
movsl
push
fistpll
mov
movsl
cltd
or
cli
mov
cmpsl
movsl
std
push
shll
ja
std
fwait
cmp
jne
xchg
scas
lods
fs
dec
repz
sbb
icebp
shr
jnp
cli
sub
xor
int3
xchg
ljmp
aaa
mov
andb
loop
push
cli
es
leave
int
mov
mov
outsb
cmc
or
mov
xor
repz
mov
test
push
std
stc
xchg
sub
out
shlb
aas
sbb
jmp
push
in
sub
loop
ret
negb
pop
out
push
jecxz
fcoml
cmp
andb
aam
rdtsc
inc
jbe
push
inc
pop
daa
lods
adc
pop
sarb
ret
sub
shl
xchg
scas
pushl
in
aaa
inc
dec
gs
in
pop
and
sub
fdivl
push
mov
cmp
in
xchg
jnp
fsubrs
inc
pop
popf
pop
int
and
jmp
dec
in
push
lods
adc
aam
icebp
repz
icebp
sbb
mov
shl
or
jbe
or
in
movsb
jno
leave
dec
mov
and
gs
dec
loopne
in
dec
add
js
ret
mov
xchg
adc
js
mov
or
or
imul
sbb
pop
sbb
cmc
mov
and
arpl
mov
lcall
cs
mov
pop
jns
sub
dec
cltd
push
and
fstpt
dec
pop
rcrb
test
xchg
push
mov
adc
lea
sti
movsb
jo
mov
int
mov
sub
test
add
sti
add
cmp
dec
negl
sbb
cmpsb
cli
mov
iret
adc
testl
int3
cmp
stc
sub
jmp
les
pop
inc
xchg
or
ret
fadd
imul
jae
cmpsb
inc
jae
out
mov
insb
test
dec
setae
push
xchg
int3
scas
jbe
movsb
cmpsb
adc
out
insl
mov
sub
cmp
outsl
cli
add
adc
add
fldcw
mov
data16
sub
fldt
fstpt
xchg
jmp
xor
and
std
out
imul
movsl
sbb
xchg
ja
call
js
popa
js
in
pop
push
stos
outsl
mov
sbbl
das
jb
lahf
and
in
pop
addr16
popa
in
xchg
frstor
in
test
out
cmp
xchg
xchg
xchg
int3
lret
sub
mov
shlb
push
push
push
loopne
pop
sub
dec
jmp
scas
inc
xor
jbe
rorb
xor
test
fwait
sbb
fstpl
pop
jmp
xor
dec
jmp
mov
out
shr
cmc
mov
xchg
mov
sub
jne
add
push
cmpsb
push
pushf
ficompl
movsl
movsl
bound
stc
int3
stos
jns
or
fwait
mov
add
hlt
cmpsl
xor
addb
adc
sub
daa
scas
xor
pop
rol
or
shll
add
or
mov
add
popf
dec
lahf
pop
push
addr16
or
and
insl
stos
lcall
sbb
pop
frstor
inc
adc
pop
pop
and
jae
or
fnsave
nop
leave
cs
and
xchg
cmp
lret
inc
or
adc
jl
imul
das
ljmp
pop
ficomps
aas
push
insl
bound
push
stc
aaa
add
fisttps
in
aam
stc
cmc
jbe
pcmpeqb
mov
sub
push
movsb
dec
scas
add
dec
fsubs
cld
mov
and
mov
dec
mov
add
lods
xorb
andl
and
fstps
decl
push
and
test
decl
mov
fnsave
lock
xchg
fs
mov
inc
rclb
inc
sbb
mov
pop
mov
mov
adc
aam
xchg
ljmp
sahf
aam
and
jno
jecxz
add
jne
ret
fiadds
mov
or
into
in
cmp
cmpsb
gs
and
dec
loop
lds
mov
xchg
jb
fs
adcb
sub
out
inc
lret
mov
mov
aaa
insl
cmp
in
pop
add
ja
scas
cmpsb
stos
inc
ret
mov
dec
imul
out
int
sub
xor
jl
incl
xor
push
push
popa
orb
xor
lcall
dec
or
mov
mov
or
or
dec
dec
cmp
loop
jmp
negl
ret
or
sbb
jne
loope
sub
sbb
sahf
xor
xor
cmp
ds
ret
aam
pop
xchg
pop
mov
xchg
rolb
sub
roll
test
test
imul
fiaddl
out
and
xor
push
sbb
fidivs
lods
mov
adc
or
lret
jecxz
rep
mov
orl
xchg
out
lcall
ret
imul
in
lcall
outsb
dec
jp
adc
int
jae
movsb
lcall
aaa
test
cmpb
and
adc
lcall
sub
pop
nop
xchg
cs
jmp
data16
mov
cmpsl
movsb
or
bound
sahf
dec
jl
insb
mov
pushf
test
xchg
jnp
jmp
iret
daa
in
xchg
pusha
test
pushf
fnstsw
jp
or
jp
aad
loop
mov
inc
jnp
or
xchg
mov
dec
frstor
lods
sbb
sub
jnp
fmuls
loop
jnp
dec
scas
test
loop
inc
pop
sub
rcl
dec
ds
lahf
lcall
cltd
mov
or
and
stos
pop
mov
in
sbb
shll
fbstp
insb
push
dec
jnp
sahf
xchg
ja
mov
scas
adc
ds
stos
adc
pop
jmp
dec
fs
imul
push
jno
int3
imul
xchg
pop
push
sub
in
out
push
cwtl
xlat
ss
add
xlat
sti
jmp
lahf
pop
test
cmp
mov
aas
sbb
jb
in
mov
and
adc
inc
lret
dec
lret
lret
negb
and
xor
and
insb
mov
adc
mov
adc
aam
cs
inc
jmp
into
pop
addl
fwait
and
xchg
cmp
pop
cld
in
lds
push
dec
in
stos
jmp
jne
sbb
xchg
sti
movsl
jmp
in
mov
pop
pop
or
test
inc
and
inc
out
and
xchg
dec
jmp
cs
fucomp
aad
jecxz
movsb
fdivr
aam
stos
lret
jp
cld
rorl
in
cmp
pop
xor
bound
xor
nop
jecxz
adc
out
xchg
cmp
fcmovu
mov
enter
jge
imul
sub
andl
sub
lods
icebp
push
push
sub
andl
std
popa
add
ror
leave
dec
jbe
jle
jae,pt
andb
xor
mov
mov
push
outsl
fdivrs
pushf
mov
pop
inc
movsl
jg
ljmp
out
pop
push
jns
cs
test
sub
push
movsl
insl
jbe
cmp
push
es
xchg
mov
imul
mov
jne
jp
in
cltd
xchg
or
jecxz
jno
sti
push
or
dec
push
fidivl
sub
inc
mov
gs
out
test
dec
xor
cmp
fimuls
mov
repz
push
adc
sti
add
movsb
imul
mov
inc
push
lret
sbbl
xor
in
stos
pop
mov
push
mov
push
lret
dec
std
sbb
cmp
and
outsb
inc
cli
loope
sti
fcoml
xor
insb
and
xor
test
push
testb
aam
push
mov
dec
fistpl
push
sbb
mov
mov
inc
sub
xor
xchg
inc
fildll
roll
int3
pop
adc
add
inc
cwtl
push
cwtl
aam
leave
lcall
scas
adc
fcompl
lahf
or
jno
mov
lret
pop
push
mov
loopne
dec
jns
out
sub
dec
mov
sub
lods
and
cmp
jg
fadd
cmp
cmp
and
and
xlat
mov
adc
push
outsl
sub
pop
dec
stos
std
xchg
push
imul
scas
pop
inc
out
push
fldt
aaa
mov
mov
mov
negl
mov
into
lock
mov
outsl
add
es
cmp
jmp
mov
out
movsb
pusha
mov
jbe
inc
xor
inc
xor
dec
inc
test
aaa
inc
push
jecxz
push
stc
outsb
sahf
mov
filds
adc
rcrl
push
orb
ss
mov
cmp
mov
sti
cli
xor
dec
les
pop
fnsave
mov
cmpsl
popa
divb
mov
mov
mov
movsl
stc
push
mov
push
sbb
int
das
add
pop
sbb
jg
repz
xor
jl
in
js
jbe
arpl
int3
pushf
push
clc
icebp
in
xor
sbb
mov
xchg
andb
add
add
test
push
mov
dec
pop
cmc
lret
pop
int
xchg
es
mov
jl
cmp
test
repz
shll
add
stos
xchg
out
out
mov
out
inc
scas
xor
adc
test
or
and
movb
imull
push
cmp
jno
and
clc
xchg
push
cmc
mov
pop
pop
mov
gs
push
test
xor
fucompp
pop
push
jge
insb
cld
adc
xorb
push
sbb
pop
mov
bound
mov
sbb
sub
add
inc
data16
push
xlat
clc
sub
fwait
pop
cmp
add
popf
subl
lcall
in
lret
fs
icebp
push
hlt
jp
jle
sub
cli
stos
insb
scas
outsl
mov
mov
aam
mov
dec
mov
xchg
sub
jnp
add
push
pop
js
mov
lahf
mov
xor
pusha
xor
xor
mov
test
scas
lea
repnz
cmp
pop
push
sahf
test
cltd
cli
cmpl
nop
scas
lret
or
repz
pusha
pop
movsl
insb
jge
bound
sbb
ret
hlt
mov
inc
loope
or
lret
xchg
aaa
ja
stos
enter
popf
nop
stos
and
adc
data16
add
lds
pop
and
dec
sub
iret
inc
lret
andb
fmuls
mov
cmp
mov
imul
cmp
add
fsubrs
clc
pop
jp
inc
cmpsl
jg
rorb
pop
jge
inc
jp
mov
xor
push
lds
int3
adc
pop
inc
mov
movsb
call
lods
jl
push
push
push
mov
pop
out
ljmp
lock
sbb
mov
adc
sbb
pop
fstpt
pushf
or
push
sbb
xchg
jbe
int3
push
stos
jae
bound
jmp
data16
data16
push
arpl
pop
inc
fldcw
data16
xchg
repnz
cmpsb
pop
fdivs
cmp
imul
add
lahf
jl
fs
mov
xchg
lods
and
jl
mov
sbb
sbb
repnz
cmpsl
xor
xchg
out
mov
jno
inc
xchg
mov
pop
inc
lahf
cli
xchg
cli
push
decb
or
mull
movsb
loopne
lcall
mov
inc
sti
push
cmpsl
dec
inc
pop
fistps
mov
pop
dec
test
push
cmc
lret
dec
in
icebp
dec
push
aam
cmpsb
mov
pop
aaa
or
add
xchg
insl
sub
xchg
inc
sub
sub
popf
jmp
ja
std
loope
aad
inc
mov
cmp
mov
mov
ljmp
pop
cmp
add
je
imul
sbb
add
or
or
addr16
ficoms
test
and
mov
filds
xchg
repnz
lret
dec
lods
pushl
into
faddp
mov
inc
stc
es
push
das
dec
mov
les
cs
in
mov
out
mov
add
jno
ds
lods
push
cmp
cmp
sub
aad
cmpsl
dec
fs
outsb
cs
vpaddb
cmp
fildl
imul
push
and
inc
sub
hlt
seta
call
sub
mov
sarb
pop
xchg
lds
mov
call
ret
xor
jb
mov
sbb
push
insl
xchg
mov
jge
leave
sub
cmp
mov
insl
movsb
sub
arpl
push
dec
jle
loopne
mov
loopne
sar
in
sub
lcall
les
jns
push
aas
js
mov
out
aad
or
add
mov
repz
fs
hlt
mov
movsb
mov
sub
out
add
insb
subb
dec
or
icebp
test
mov
jle
or
mov
sbb
int
repz
cmp
ljmp
mov
mov
nop
xor
rol
or
loop
lods
clc
lods
test
out
xchg
movaps
dec
daa
dec
push
fstpt
jbe
addr16
lock
cmovle
call
xchg
mov
xchg
lahf
int3
mov
xchg
shll
imul
in
adc
fstps
mov
push
lret
imul
mov
iret
out
fistpll
mov
fstl
in
mov
mov
cmp
rclb
mov
cmp
iret
xor
jge
xor
jle
mov
xchg
in
inc
jbe
mov
xor
jl
adc
imul
mov
testb
lock
hlt
xchg
mov
pop
mov
pop
test
xchg
cmp
cld
pop
ljmp
or
push
das
js
sahf
in
aad
and
movsl
loope
xchg
and
cmp
test
push
pop
adc
in
mov
jnp
jns
out
js
sbb
sub
out
fnstcw
inc
xchg
jbe
cmp
inc
adc
mov
adc
pusha
fwait
in
mov
jg
inc
mov
xchg
dec
sub
je
xlat
dec
adcb
pop
test
dec
mov
xchg
cmp
dec
add
or
mov
inc
adc
mov
out
mov
push
cli
cmp
mov
aaa
push
and
imul
mov
jns
nop
mov
pop
cmpb
sahf
cmpsl
dec
add
add
dec
icebp
pop
jp
fldt
inc
fsubs
bound
sub
imul
jb
aam
in
jecxz
xchg
stos
sbb
adc
dec
sbbb
and
and
mov
jge
test
mov
adc
add
enter
jl
pop
inc
cmpsb
mov
pop
imul
pop
jl
fadd
enter
xchg
fdivrs
sub
imul
sbb
jge
test
add
sub
add
jl
xor
outsb
adc
inc
int
cmp
dec
decb
stc
in
and
push
mov
fisttps
or
inc
and
out
inc
cwtl
scas
lods
fwait
mull
push
out
or
sbb
xchg
mov
jne
jecxz
mov
addb
lahf
mov
jecxz
jo
cmc
pop
mov
sub
jge
movsb
in
dec
adc
mov
rcrl
subl
aas
pop
cmp
cmp
imul
stos
ja
cwtl
pop
mov
inc
adc
les
fsubr
les
jecxz
in
loopne
inc
rolb
mov
sub
push
loop
pop
or
in
rdtsc
fcom
fdivrs
fmul
cmpb
mov
mov
push
cltd
mov
ja
fsubrs
mov
mov
pop
mov
clc
xor
jo
jno
mov
and
inc
mov
jnp
into
xor
mov
jns
sub
pop
test
dec
pop
xchg
xchg
mov
inc
loopne
push
clc
and
int3
insl
roll
lock
mov
es
daa
xchg
int
js
imul
push
shlb
mov
pop
rolb
sbbl
push
lea
jmp
cmpsl
faddp
xchg
jecxz
imul
in
and
fs
shl
inc
imul
rorl
les
mov
in
add
mov
inc
outsb
and
aas
insb
mov
cld
push
xor
mov
adc
jle
jae
mov
inc
and
sub
fdivs
push
xor
pop
pop
loop
out
orb
leave
divb
les
test
aad
xchg
mov
sti
repz
mov
fdivp
popa
dec
mov
xchg
or
add
sbb
sbb
mov
sub
mov
cmp
xor
jp
sbb
and
mov
push
and
or
out
dec
and
out
mov
testl
pop
mov
mov
movsb
mov
mov
imul
lods
push
and
sub
lret
mov
outsb
xor
lret
cld
addl
cmp
aam
mov
in
pop
fstl
adc
aam
js
pop
xor
cmp
and
es
mov
pop
xorb
sub
js
mov
or
loopne
test
add
outsl
xor
loop
mov
sbb
in
jp
or
mov
test
je
int3
jl
push
and
shll
inc
adc
lods
cmp
rorb
mov
xor
mov
dec
inc
adc
or
daa
xchg
jbe
pop
sub
dec
cmpsl
sub
clc
inc
test
and
fistpll
jno
xchg
mov
xor
sbb
inc
push
es
jns
cli
in
hlt
push
jns
pop
xchg
sub
xor
push
leave
nop
std
rolb
and
push
xchg
xorb
sarl
lcall
sarb
dec
aaa
push
cmp
fxch
pop
jne
cmpsb
ljmp
les
imul
add
das
dec
orl
or
mov
push
push
xor
mov
outsl
add
push
rclb
push
xchg
stos
adc
cmc
movsb
ror
sarl
and
movsl
add
push
scas
int3
cwtl
add
ret
aas
in
mov
call
inc
mov
mov
adc
xchg
xchg
adc
ljmp
push
mov
dec
pop
mov
or
cld
mov
xchg
pop
outsl
inc
and
arpl
in
push
dec
cmp
sub
push
loop
test
pusha
lods
cmp
xchg
lahf
mov
mov
jnp
cmpl
rclb
cmpsl
pop
int
outsb
and
and
mov
rolb
cmp
mov
les
cmpsb
sub
pop
mov
xor
inc
mov
popf
cmpsb
std
in
dec
popa
js
call
and
std
fcoml
cmpsb
das
mov
outsb
scas
jmp
movsb
inc
test
lock
fisubrl
ljmp
jae
aaa
pushf
jnp
jne
cmc
dec
negb
enter
mov
jge
fmul
xchg
call
adc
mov
push
and
fs
sbb
inc
push
stos
dec
mov
adc
sub
pusha
mov
or
lock
jbe
outsb
mov
inc
jmp
popf
and
push
enter
out
or
xorl
movsl
pop
out
daa
dec
adc
in
pop
icebp
imul
dec
mov
lcall
test
or
clc
jle
lahf
jg
lds
int3
shrb
cmp
inc
mov
movsl
es
mov
mov
rol
aam
push
sub
loopne
cli
cltd
popf
and
insb
mov
dec
aam
call
or
or
pop
dec
adc
aas
mov
cwtl
adc
repz
xlat
sbb
mov
fimuls
cmp
push
push
xchg
cmpsl
mov
ss
dec
pop
cmp
rclb
pop
mov
xlat
adc
inc
mov
insl
jo
and
jnp
and
xchg
mov
aaa
std
fcmovnu
pop
lds
jo
ljmp
mov
sbb
ljmp
inc
sbb
cmpsb
adc
xor
push
movsl
pushf
pop
cmc
addr16
dec
push
sbb
shll
and
rorb
lcall
ljmp
insb
add
lea
cmp
mov
sbb
or
xor
rcr
lods
and
aaa
aad
sbb
jle
clc
add
popa
xchg
fisttpl
dec
add
pop
sarb
sub
push
pop
scas
into
adc
into
mov
ss
repnz
mov
cmp
int3
xor
dec
xor
test
inc
insl
xor
mov
loopne
out
xor
divb
cmc
movsl
js
mov
addr16
mov
js
adc
or
callw
ficoml
jb
and
mov
outsb
ficoml
testb
pop
cld
pop
lcall
pop
out
pop
popf
pop
pop
inc
jbe
pusha
daa
aad
clc
fcompl
decl
test
or
dec
mov
je
or
or
mov
scas
adc
out
adc
pop
mov
imul
test
call
push
jo
jo
popa
push
sub
lds
fs
jne
idivl
add
pop
enter
dec
push
add
mov
rorb
mov
andl
adcl
dec
mov
sub
test
clc
and
push
inc
aam
cmp
out
test
sahf
inc
nop
lds
in
xchg
adc
pop
fmulp
pusha
cltd
cld
shl
out
loope
pop
and
inc
out
out
xchg
frstor
int3
aam
sub
out
sahf
cmpsb
int3
loopne
popa
jnp
mov
mov
and
mov
bound
inc
dec
jg
jno
add
inc
jns
xchg
and
roll
scas
iret
cli
scas
xchg
adc
mov
mov
dec
ds
divb
into
cmp
push
or
xchg
adc
negl
mov
clc
test
pop
iret
or
shrb
lock
adc
int3
es
hlt
push
dec
dec
arpl
mov
cmp
mov
jnp
jne
jno
stc
adc
push
xor
sub
aaa
adc
fwait
lds
cli
and
daa
dec
push
mov
testb
pushf
stc
push
mov
mov
jg
cli
cmpsl
jb
ds
pop
jb
cwtl
sbb
mov
fists
ror
cmc
pop
movsb
outsl
xchg
mov
cmp
mov
rcl
scas
cmp
repnz
clc
out
cwtl
fcompl
push
push
insl
xchg
inc
or
idivb
rorl
and
push
loopne
xchg
jp
ss
bound
bound
sub
xor
mov
iret
shr
cmp
insl
outsl
adc
inc
faddl
mov
mov
mov
stos
aam
pop
xor
or
dec
lods
inc
ret
cmp
and
adc
jbe
jmp
stos
jmp
jbe
dec
adc
jns
mov
and
mov
int
adc
in
fsts
dec
bound
xor
push
xchg
dec
sbb
imul
fwait
mov
mov
adcl
in
test
or
xchg
addr16
jne
push
add
jmp
jle
fldt
jecxz
lcall
jno
outsl
loope
out
inc
mov
mov
dec
fldt
loop
sbb
outsb
loope
and
fnstcw
scas
shl
scas
aam
xor
inc
mov
push
cmp
and
jge
xor
cltd
jle
aad
sbb
lock
jb
cmp
push
sti
testl
nop
push
or
out
iret
mov
fildll
push
cmp
xchg
ss
jl
mov
mov
sub
xlat
mov
jbe
dec
stos
ret
loopne
dec
faddp
sub
mov
sub
std
popa
mov
xchg
mov
and
ror
cwtl
add
xor
cmpsb
sub
ljmp
xor
int3
scas
std
fs
ret
loop
mov
pop
scas
push
jbe
xchg
mov
cmp
or
cmp
inc
or
dec
jb
add
aam
mov
xchg
or
mov
fldt
scas
push
mov
std
imul
fs
gs
jle
jns
shrb
mov
xchg
in
dec
movzwl
repz
pushf
rcrb
inc
sbb
lret
movhps
jae
mov
inc
push
orl
xchg
push
mov
leave
inc
push
or
or
ljmp
sbb
pop
mov
mov
shlb
cmp
ljmp
mov
pop
scas
test
xchg
adc
pop
shl
out
inc
add
iret
or
out
jle
xchg
aad
or
xchg
or
jle
mov
test
adc
mov
in
out
dec
je
inc
mov
adc
mov
or
inc
cltd
adc
es
push
pusha
mov
inc
dec
xchg
subb
jle
push
and
push
xchg
shll
and
shll
in
aaa
fstpt
lret
lret
shr
cltd
int
xchg
jne
inc
mov
add
push
mov
xchg
test
aaa
cmpsl
addb
cmp
jp
and
xor
inc
and
sub
fcomi
test
jne
pop
sbb
mov
fldt
xchg
jne
inc
cs
call
ljmp
test
xchg
push
mov
xor
jbe
leave
clc
push
mov
stos
lret
in
stos
adc
dec
int
shl
data16
fbstp
ljmp
loop
add
lods
xchg
es
xor
xor
lods
add
scas
adc
xor
jns
adc
sub
fcoms
dec
mov
loop
adc
shll
jo
test
add
adc
ljmp
and
jmp
cmp
repnz
repz
sub
scas
popf
repz
jne
je
rorl
add
mov
movsb
insb
jnp
lods
sub
xchg
adc
test
cmp
dec
push
jge
insl
dec
mov
les
xchg
inc
pop
push
xlat
shll
xchg
mov
push
movsb
mov
fsqrt
jo
dec
arpl
daa
dec
pushf
insl
lods
pop
xchg
dec
sti
aas
sub
int
cltd
and
in
pop
xor
sub
cli
mov
xchg
stos
xor
jg
or
inc
fs
insb
pop
aad
int
xor
pop
push
jae
cld
inc
out
push
inc
mov
mov
cmc
dec
xchg
call
in
ds
nop
out
pushw
jg
js
test
jnp
lods
jmp
sarl
push
jl
mov
xchg
mov
push
xor
testb
cmp
xchg
and
adc
pop
push
xchg
aam
push
mov
dec
adc
cmp
fcoms
lds
cmp
in
sahf
mov
aad
xchg
hlt
mov
push
mov
or
cmp
sbb
imulb
dec
ds
jo
and
mov
or
inc
addb
xor
adc
mov
push
js
icebp
push
leave
stc
iret
bound
out
das
or
inc
movsb
lds
or
inc
push
push
je
xor
jbe
dec
cmp
lret
push
lock
cltd
pushf
push
pop
jle
jle
lahf
stos
sbb
mov
mov
leave
add
sub
push
xchg
cli
xchg
and
insl
icebp
mov
aam
mov
arpl
scas
stos
stc
out
mul
in
int3
mov
sbb
incl
call
or
xor
sub
out
mov
daa
loopne
icebp
fwait
repz
icebp
adc
mov
roll
cmp
adc
cmp
push
jecxz
js
aam
add
mov
and
inc
loop
xor
adc
pop
push
ret
js
jb
lods
pop
sub
movsb
das
call
xorb
outsb
jbe
mov
ret
cwtl
scas
add
inc
pop
dec
orb
out
adc
mov
pop
add
xor
jb
and
fs
xor
repnz
cwtl
push
mov
pop
jbe
adc
mov
and
cmc
test
mov
and
dec
mov
cmpb
stc
mov
sti
or
mov
lock
and
pop
iret
es
sbb
imul
outsl
inc
rcr
mov
sysenter
jbe
repnz
sti
inc
mov
mov
daa
xor
int
xor
jne
sahf
arpl
test
sub
dec
inc
jbe
pop
fmuls
movsl
shrl
lods
outsb
cmc
test
pop
cmpsb
cmpsl
sti
sbb
sub
mov
loope
sub
aaa
adc
jne
aad
add
dec
jecxz
fstpl
sub
or
aaa
jne
loop
mov
add
lret
pop
mov
pop
sbb
stos
cmp
cmp
cmp
shlb
nop
fmuls
fimull
jo
mov
addr16
ds
flds
or
or
xchg
inc
mov
rclb
stc
fisubl
cld
push
imul
lods
sarl
push
mov
adc
xor
push
adc
sbb
jnp
cmp
xchg
test
dec
add
sbb
mov
and
ficoms
subl
cwtl
dec
mov
shl
jmp
add
xchg
xchg
addr16
movsb
mov
call
add
pop
shl
out
cld
pop
push
or
cs
cmp
sbb
mov
push
cmp
ds
lcall
sbb
push
ds
lcall
andps
out
ret
mov
mov
ret
test
dec
iret
pop
fwait
addr16
int3
adc
push
xchg
add
arpl
pushf
imul
stos
or
push
aaa
add
popf
push
outsb
enter
or
popf
shlb
sti
sbb
dec
int
push
test
mov
push
cld
push
in
divl
xchg
shlb
fadd
mov
les
in
lret
xchg
xchg
mov
cmc
xchg
pop
fs
push
cmc
jb
negb
popa
sahf
xchg
pusha
cmp
aam
loopne
push
popf
leave
mov
or
ds
test
jae
mov
inc
push
ss
dec
pop
scas
imul
sbb
fwait
dec
imul
mov
aad
je
xchg
les
fsubl
sbb
jne
jmp
xchg
xchg
fldcw
add
cmp
dec
hlt
xchg
mov
adcb
cld
leave
push
fstl
stos
hlt
ds
rclb
sbb
dec
push
pop
pop
jecxz
test
mov
xchg
lret
aad
add
cwtl
push
lcall
jcxz
repnz
add
cmpl
mov
lea
or
cltd
adc
add
cmp
test
inc
mov
fdivs
imul
push
push
incb
ficoms
andl
rcl
dec
cmp
cmp
incb
lods
js
cmpsl
add
es
filds
push
jb
mov
pop
jbe
loopne
xor
xor
mov
in
and
sahf
mov
popa
dec
popf
popa
scas
sbb
xchg
push
or
aas
out
jae
lds
inc
sahf
sbb
lahf
push
dec
call
push
das
mov
push
cmp
dec
inc
frstor
add
xor
mov
cmc
loope
mov
addb
add
sub
cmpsl
dec
and
push
mov
cltd
xchg
jb
mov
cmp
insl
aaa
dec
imul
addr16
mov
and
les
addr16
sbb
and
and
jmp
xor
ja
repnz
push
jbe
pop
jmp
jge,pt
and
inc
popf
pop
popf
mov
inc
mov
pop
jb
and
dec
cmpsl
jmp
push
mov
bound
scas
ret
in
out
inc
scas
pop
jmp
or
and
scas
pop
lret
jno
push
fnsave
in
mov
inc
xchg
cmp
dec
movsl
or
mov
adc
lods
rclb
jne
fldcw
add
push
pop
pop
lcall
xchg
pop
cmp
inc
aaa
pop
inc
push
pop
les
ret
roll
jl
les
and
shlb
inc
shrb
xor
loopne
aad
xchg
dec
inc
jns
jno
mov
aaa
jp
fwait
subl
jb
in
lock
imull
addr16
mov
leave
push
cmp
dec
sub
lahf
div
pop
push
cmc
insl
inc
mov
sarl
lods
inc
ret
mov
mov
push
dec
ror
jo
out
fs
in
jo
movsb
sti
add
cs
loope
enter
outsl
insl
pop
mov
outsb
push
inc
shlb
mov
cltd
aas
es
jmp
xchg
gs
addr16
push
xor
mov
jnp
jge
mov
mov
jnp
pop
mov
xchg
sub
or
imul
cmp
fildl
sbbl
or
bound
or
jle
mov
add
jo
cwtl
bound
lret
push
xchg
fs
sub
addl
fsubr
mov
cmp
dec
jnp
mov
xor
xchg
inc
jne
icebp
sti
lods
xor
mov
push
aaa
pop
aad
les
lock
lret
out
js
sbb
mov
sub
sub
pop
inc
or
xor
nop
out
push
fimull
mov
add
je
addl
nop
dec
cmpsl
cs
cld
and
mov
push
inc
lock
xchg
sarb
jns
shrl
mov
jle
mov
pushl
pop
js
in
outsl
notb
jno
adc
xchg
pop
imul
popf
pop
addr16
insb
lods
push
or
inc
ljmp
jno
clc
test
lods
gs
rclb
fwait
inc
dec
inc
test
loope
lds
int
repz
sbb
scas
mov
int
xchg
xchg
dec
bound
les
cld
lods
push
jo
rorl
icebp
lret
es
adc
sbb
push
push
icebp
cmp
lret
push
push
xorb
push
mov
add
loope
cltd
jp
ss
pop
imul
shr
sbb
mov
mov
scas
aam
adc
addb
pop
mov
xchg
xor
inc
out
lahf
jecxz
xchg
xor
push
int3
sbb
mov
inc
dec
es
fsub
mov
lret
cs
dec
fists
mov
aad
xor
mov
cltd
pop
mov
dec
cmp
xchg
pop
stc
jo
iret
lds
outsb
jae
jno
pop
inc
into
in
vpackssdw
or
xorl
sbb
sbb
scas
inc
mov
xlat
sub
lret
xor
fldl
aaa
adc
dec
sbb
push
mov
pop
insl
dec
and
sub
aas
add
lahf
testb
pop
or
cmpsl
das
repz
mov
jo
inc
adc
add
int3
sub
out
jno
inc
mov
jns
xchg
push
mov
pushf
stc
movsb
jae
repz
adc
inc
jge
or
and
incb
cmp
add
lcall
lock
std
mov
adc
std
adc
adc
sub
fcmove
xor
pop
insb
add
jl
xor
mov
cmp
xchg
outsb
mov
out
and
fldt
test
ja
jle
idivb
and
addr16
pop
xor
fwait
sbb
shl
dec
je
push
or
mov
jp
filds
adc
sbb
or
mov
inc
rolb
loope
adc
jnp
push
and
filds
fdivl
std
jmp
addl
pop
movsl
or
jae
mov
fists
xchg
or
sbb
in
movsb
fldcw
fnsave
or
sbb
cmp
sbb
ja
jle
push
push
out
and
repnz
nop
inc
loope
mov
scas
nop
in
fmul
fldcw
push
lds
scas
icebp
imul
out
pop
aaa
ljmp
int
ror
aaa
dec
mov
adc
jp
call
cmp
and
dec
dec
aaa
pusha
jle
subl
inc
int
out
nop
inc
fcoms
shrl
lcall
enter
iret
xlat
icebp
add
test
adc
sub
pop
mov
rsm
mov
jp
and
adc
mov
jle
pop
mov
push
push
fstpl
fiaddl
arpl
cli
adc
addl
rorl
das
pop
mov
push
in
jle
adc
std
lahf
or
nop
pop
rolb
dec
repz
push
es
push
testl
mov
adc
stos
inc
ret
pop
mov
jo
push
jmp
fildll
dec
stc
imul
aad
sub
push
push
adc
push
adcb
pop
mov
aaa
mov
xor
pop
xor
pop
pop
mov
js
mov
or
xchg
mov
imul
popa
mov
inc
and
pop
mov
mov
xchg
fwait
pop
repz
sbb
dec
sub
add
popf
jbe
arpl
jg
jno
stos
shlb
dec
cmp
inc
div
cwtl
std
mov
jae
lret
jns
dec
jnp
out
dec
pusha
push
aad
adc
sbb
inc
cmp
mov
or
jl
call
sub
jnp
inc
test
push
xchg
mull
lods
mov
add
xor
xchg
add
dec
mov
jno
popa
mov
enter
or
push
xor
xor
leave
push
sbb
inc
xchg
rorb
shrb
subl
inc
mov
ret
sbb
xor
mov
jno
fdivrl
xchg
mov
dec
adc
add
lods
cmp
mov
test
imul
jnp
pop
sarl
dec
orb
jp
xchg
adc
loop
aas
mov
ljmp
sub
adc
daa
sub
repz
sbb
sahf
mov
push
cmpl
jne
mov
cmpb
out
scas
mov
sahf
or
mov
or
sub
pop
in
jno
loopne
cmp
shl
xor
test
pushf
or
js
das
mov
pop
pop
push
mov
sbb
add
mov
dec
cld
xor
add
pop
jo
inc
xlat
xorl
sub
push
mov
pop
dec
xchg
nop
lcall
call
popa
xor
xchg
jge
das
ret
sub
mov
and
insb
das
imul
loop
push
jno
iret
push
mov
in
cmp
enter
rcrb
cld
bound
flds
push
clc
jmp
pop
cmp
xor
xchg
adc
xor
push
es
pop
outsb
sub
xchg
or
idivl
cmpsl
mov
pop
sub
xchg
out
daa
lods
je
mov
pop
fisubrs
jmp
pop
sbb
pop
mov
lock
push
and
dec
cmc
xorb
pop
fisubrs
lods
and
and
pushf
rcrl
cmc
or
push
ss
adc
push
sbb
mov
lea
mov
in
fptan
inc
popa
lcall
xchg
mov
in
mov
insb
push
ret
dec
mov
jmp
xchg
push
mov
lods
mov
mov
bound
push
push
data16
insl
xchg
mov
mov
push
dec
cwtl
dec
pop
push
data16
cmp
mov
cmp
adc
push
and
dec
xchg
pop
sbb
lcall
push
sub
cwtl
cmp
imul
jnp
xchg
gs
sub
push
dec
push
incb
xor
fistpl
test
lret
xchg
cli
fs
mov
stc
ja
or
repz
es
hlt
test
fisubl
call
dec
movsb
xor
jnp
imul
das
data16
push
adc
pop
pop
imul
leave
mov
push
lret
pop
sbb
lds
mov
nop
jge
fwait
mov
dec
inc
lret
sbb
sbb
jo
sub
pcmpgtd
sub
rcll
jmp
stos
loopne
dec
mov
dec
cli
shl
test
dec
sub
push
cs
jmp
cmp
movsb
testb
mov
loope
sbb
mov
fs
mov
aam
stos
insb
repz
lock
cmp
leave
icebp
mov
es
sub
jg
sbb
mov
enter
rep
mov
sbb
pop
adc
xchg
xor
aaa
aad
jg
cmp
aaa
repz
adc
hlt
and
loope
das
out
sbb
dec
in
sbb
lret
xor
xchg
mov
sbb
xchg
mov
mov
ja
or
cmp
ds
sbb
mov
outsb
fmul
cmc
dec
adc
daa
xchg
cs
inc
add
add
rolb
cwtl
repz
pusha
into
orb
enter
adc
clc
xor
add
inc
sbb
or
push
sub
ljmp
pop
and
in
mov
cmpsl
mov
cmp
data16
add
xor
mov
fdivrs
xchg
xchg
add
dec
lock
xchg
and
andl
adc
stos
mov
adc
mov
divb
jno
xlat
stc
ss
push
scas
inc
xchg
mov
xor
and
filds
adc
push
xor
and
lock
inc
mov
out
sbb
mulb
push
jl
and
std
faddl
std
fidivrs
je
test
adc
jnp
popa
xchg
lcall
mov
sbb
out
xor
insb
scas
fildll
sub
jl
or
push
popf
xchg
fwait
jnp
movsb
fwait
sub
lds
cmpsl
xchg
test
lds
mov
lock
fistpl
cmpb
inc
lods
ret
test
xchg
push
mov
jb
rorl
pop
mov
pop
mov
scas
lock
mov
or
bound
cmp
sbb
cmpsb
push
pop
out
jae
negl
jbe
inc
and
dec
add
xchg
mov
ret
jmp
xchg
pop
jmp
mov
in
insb
cltd
mov
inc
dec
icebp
orb
lea
icebp
mov
ja
mov
lea
test
xchg
jmp
and
ss
or
out
decb
movsb
add
adcb
or
mov
imul
lods
xor
jp
add
push
mov
add
aaa
xchg
repz
aad
stos
adc
cmp
push
fbstp
in
jge
cmpsb
adc
sbb
js
and
mov
scas
stos
pop
into
ror
cmp
iret
stc
pop
andl
aaa
stc
cmc
andb
bound
cmpl
sahf
mov
push
adc
jns
rcll
push
inc
pop
sarl
mov
pop
dec
int
or
mov
inc
ficoml
cltd
cmc
icebp
adc
adc
cmp
out
addr16
sti
mov
lea
xor
mov
jo
mov
jbe
das
mov
les
push
cmpsl
rcl
push
sarb
mov
fildl
ret
out
gs
xchg
sbb
lcall
fs
cmp
stc
es
push
xchg
fldenv
loopne
mov
imul
dec
loope
sahf
ljmp
test
cmpsl
gs
and
iret
sbb
call
xchg
shl
jb
mov
js
sub
outsb
pop
flds
push
stc
int
int
and
fildl
sbb
inc
and
cmp
push
cmp
lds
or
and
mov
into
pushf
shl
stc
jge
mov
stos
jns
cld
int
add
fcoml
cwtl
repz
adc
cld
jno
les
aas
out
push
inc
sbb
pop
xchg
mov
insl
mov
fildl
mov
fcmovne
and
mov
push
and
test
jl
add
das
pop
add
fyl2xp1
mov
lahf
jecxz
hlt
fcoms
adc
movsl
mov
mov
shll
and
push
mov
or
mov
adc
inc
push
leave
cmpb
ljmp
leave
xchg
mov
jle
add
or
icebp
jno
outsl
sbb
mov
outsl
mov
jno
mov
lcall
add
test
mov
and
mov
sbb
jb
push
fs
fists
ficoml
movsl
scas
jge
dec
daa
cmpsb
xor
popa
cltd
shr
cmp
jo
push
adc
xor
scas
xchg
lahf
loopne
loop
hlt
adc
int
lods
inc
test
movsl
lock
dec
add
pushf
pop
dec
mov
stos
and
mov
jecxz
lods
stos
cmc
jecxz
or
sbb
sbb
dec
shlb
xorb
std
out
push
inc
cmp
pop
mov
mov
dec
mov
subl
insl
fmull
pop
cmpsl
int3
bound
mov
jle
nop
pop
and
lret
or
fidivl
fstpt
loope
fistps
and
std
cmp
fildll
js
add
cmp
aad
jno
and
subl
dec
ret
fwait
arpl
cmp
pop
cmc
add
test
enter
xchg
xchg
mov
push
xchg
iret
dec
outsb
adc
cmp
aad
out
mov
push
adc
push
mov
scas
xor
pop
pusha
inc
in
popa
int3
mov
out
insl
add
inc
xchg
or
mov
push
push
push
xor
mov
push
movsl
pop
scas
addr16
or
jmp
jno
mov
movsb
or
fwait
in
scas
xchg
xor
xchg
xor
leave
mulb
or
inc
sub
pop
mov
mov
xchg
fstps
and
in
mov
loop
jmp
and
mov
out
insl
pop
pushf
push
popf
ret
repnz
or
mov
xor
test
aad
jne
or
push
dec
js
pushf
inc
add
push
mov
les
xlat
out
mov
add
cs
sbb
fwait
add
outsl
inc
sbb
inc
outsb
pop
sbb
and
out
mov
push
push
fcomps
ror
push
insb
push
clc
std
xchg
into
rclb
jns
pop
sbb
jg
frstor
repz
mov
jle
sbb
outsb
data16
imul
nop
incb
imul
jg
test
and
jns
adc
xor
jo
dec
cmpsb
sbb
ja
shl
jmp
lahf
popa
adc
cltd
icebp
sub
jbe
jmp
movsl
or
pop
and
lret
push
sbb
jge
std
iret
mov
adc
push
pop
ja
sub
xor
add
leave
add
and
sbb
mov
mov
push
nop
push
xor
and
jae
push
bnd
add
cmpsl
pushf
mov
push
outsl
push
cmp
cmp
lock
scas
es
aam
push
mov
mov
scas
push
cmp
fisttpl
dec
and
sbb
repnz
jg
mov
repz
aaa
push
hlt
daa
sub
mov
cld
iret
dec
pop
andl
int
adc
inc
xchg
push
adc
xor
lret
and
adc
jne
or
daa
js
aad
ljmp
adc
lcall
add
add
insl
jb
mov
lods
pop
fwait
in
les
stos
jp
cmp
pop
cmpsb
xor
into
jo
sbb
fnstcw
mov
jmp
xchg
divb
push
fwait
mov
mov
mov
fldl
jb
sbb
cmp
sub
dec
ja
loope
inc
lock
lea
mov
insb
cmp
pop
lock
and
adc
negl
sbb
sbb
loop
in
xlat
lret
and
mov
cltd
or
sahf
outsl
add
repz
mov
fcomps
adc
fnstsw
adc
push
push
fistps
xor
das
mov
shlb
or
out
shrl
mov
je
stos
mov
jae
iret
or
mov
gs
into
xchg
stc
dec
ret
sbb
fnstenv
std
in
adcl
js
clc
lods
psubd
jbe
jbe
movsb
jno
push
xchg
or
push
mov
pop
cmpsl
mov
aam
pop
adc
adc
loop
jle
out
int
add
jne
cmpl
or
outsb
pop
outsl
xor
jl
popf
rcrl
test
jmp
sub
add
and
iret
push
mov
inc
pop
ds
popa
test
out
int3
pushf
adc
fcoms
fbstp
push
fisubs
or
lods
aad
imul
fsubrp
insb
pop
scas
dec
lret
pop
jb
dec
jle
jnp
mov
leave
sbb
pop
and
insb
cmpsl
jmp
xor
fistl
inc
fcoms
pop
sti
jmp
mov
jnp
bound
push
ret
in
sub
push
les
scas
test
scas
sub
dec
inc
mov
mov
clc
leave
cmp
jp
imul
inc
push
xchg
mov
loopnew
push
les
mov
cs
fstpt
xor
test
push
cmp
mov
dec
adcl
mov
jns
and
mov
xchg
cs
in
call
jg
inc
jmp
push
adc
cmp
inc
mov
cmp
inc
subb
rorb
aad
popf
jb
rorb
push
jge
xchg
push
jl
and
loop
push
xchg
ljmp
jge
sub
and
dec
add
imul
pop
and
mov
cli
pop
adc
mov
xor
test
ss
cli
xchg
xlat
mov
cmp
aas
jbe
jbe
and
jnp
stos
push
pusha
sahf
mov
add
jne
sbb
das
and
add
dec
push
push
std
push
mov
hlt
adc
cli
and
push
jecxz
mov
jnp
imul
jbe
movsl
in
ret
push
push
sti
ss
inc
or
jb
cli
je
fadds
loope
popa
sub
mov
call
pop
out
lret
es
mov
test
pop
sub
or
dec
clc
add
push
sti
sub
sarb
inc
push
popf
imul
and
in
lock
sti
xor
nop
push
aaa
js
loope
cmp
mov
leave
outsb
pop
ss
fs
in
sub
dec
and
mov
aas
out
dec
mov
fwait
neg
mulb
add
rol
and
push
mov
clc
mov
lret
aam
movsb
jecxz
pop
ret
or
mov
aad
test
ja
cmp
ret
lea
movb
mov
aas
fwait
add
xchg
int
not
ja
jmp
inc
test
